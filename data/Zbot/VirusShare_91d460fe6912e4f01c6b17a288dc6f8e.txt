decl
pusha
call
sub
faddl
cltd
inc
cmpb
into
jl
imul
ljmp
out
rorb
mov
sbb
cltd
testl
dec
ss
out
xchg
cmp
sar
jmp
cltd
mov
push
sub
dec
xchg
nop
pop
out
inc
cwtl
insl
cmp
in
or
inc
iret
mov
sbbb
sub
and
jle
sub
gs
mov
int
call
mov
mov
dec
hlt
or
mov
int
xchg
sbb
into
cmp
clc
shll
or
repnz
insb
or
push
loopne
ds
jmp
gs
insb
fs
xchg
mov
aam
nopl
sub
fdivs
call
and
ret
cli
das
jne
stc
sbb
mov
aas
les
adc
sub
out
mov
pushl
xchg
add
ja
fcomps
fdivr
stos
push
subl
sbb
leave
jg
jno
ja
pop
loop
aam
int
addl
cmp
inc
dec
mov
aad
dec
int3
mov
lcall
mov
and
jb
insl
pusha
pop
jo
data16
mov
pop
pushl
or
popf
int3
ret
inc
cs
cs
xlat
push
xor
mov
loope
inc
xchg
call
jmp
cld
sti
jg
call
mov
pop
fstpt
dec
imul
mov
call
cmp
fdiv
lods
inc
adc
fldl2t
mov
dec
mov
loope
inc
inc
lods
loopne
loop
sbb
lcall
imul
stos
in
lock
insb
xchg
push
or
movsl
sbb
rol
pop
orb
push
jmp
addb
js
mov
popf
mov
lock
dec
aam
fdecstp
sti
dec
rcrb
sub
sbb
mov
and
loope
xchg
test
flds
imul
or
sbb
pop
push
pop
stos
cwtl
mov
inc
mov
mov
incl
pop
jne
cltd
xchg
and
sbb
shrl
subl
push
lods
xchg
cmpsb
aaa
stc
mov
cmp
jmp
es
push
jnp
fsubrl
out
pushf
dec
add
setno
rol
jns
shrb
jb
or
data16
mov
scas
xor
and
fwait
scas
jecxz
cli
cmp
sub
mov
mov
cmp
mov
push
std
jno
iret
imul
sbb
out
mov
sub
sti
iret
scas
je
fsub
sahf
jbe
and
sarl
lret
movntps
incb
jmp
lret
dec
cwtl
repnz
orb
jns
gs
fmuls
or
mov
pusha
sbb
jmp
sub
addl
outsb
test
stos
std
inc
add
pusha
faddl
mov
xchg
arpl
call
leave
fdivs
dec
cmp
scas
test
lods
jmp
xchg
add
scas
push
cltd
xor
aad
fidivl
cmp
add
jbe
pusha
insl
fsubrs
mov
in
imul
mov
fcomip
cmpl
in
adc
cld
add
popa
pop
out
ret
outsb
gs
lcall
xor
aam
cmp
xchg
pop
ds
sub
sub
icebp
daa
adc
clc
sub
scas
mov
jmp
lds
fcomps
jno
pop
jle
push
add
mov
rcrb
out
outsl
mov
inc
or
mov
sahf
call
cld
inc
out
push
cmpsb
jecxz
mov
jnp
in
mov
mov
pop
xchg
jp
dec
sub
push
inc
lcall
mov
roll
fidivs
adc
push
ljmp
jno
sti
dec
sub
or
ret
sub
or
lock
mov
call
cmp
pop
stc
in
pop
adcb
test
mov
and
rolb
xchg
cmp
jmp
adc
pop
lret
push
mov
inc
movsb
pop
or
push
rcrb
fucomi
pop
push
or
push
in
push
cmp
adc
or
lea
lock
cmp
clc
xor
sti
push
add
stos
adc
les
aaa
test
push
and
pushl
xchg
test
push
inc
dec
jns
js
dec
fneni(8087
gs
xlat
aas
popl
ds
in
pop
test
xchg
xchg
jbe
insb
adc
loope
fstpt
xchg
stos
cmpsb
stos
and
ja
add
inc
insl
je
add
adc
mov
mov
xchg
aam
inc
or
pop
fwait
push
mov
mov
mov
imulb
xor
sahf
test
cs
hlt
loopne
rcrl
cmpsb
sbb
push
and
stos
decl
pop
xor
mov
test
jg
test
ret
sbb
int3
jecxz
adc
test
xchg
incl
push
std
imul
les
mov
cmp
lods
leave
fsts
xor
pop
mov
push
loop
adc
jg
loop
xchg
fsubl
mov
jge
and
push
scas
jo
sub
ss
mov
xchg
fs
insb
inc
out
cmpsb
fwait
arpl
mov
lods
push
daa
mov
mov
cmp
iret
or
stos
xor
jno
mov
call
incl
loopne
sbb
rcl
add
lcall
mov
cld
call
xchg
adc
cmpsl
lret
mov
xchg
add
xchg
mov
cmc
mov
test
xchg
fdivr
call
mov
adc
and
jl
xor
jge
or
adc
mov
movsl
data16
testb
test
adc
cmp
enter
call
loopne
cmp
sbb
mov
pusha
mov
out
je
push
mov
imul
lcall
jge
stc
jmp
mov
pop
mov
test
mov
mov
icebp
inc
push
hlt
ljmp
das
insl
out
and
jp
jl
cmp
mov
sub
mov
and
inc
aas
pop
lock
pop
int3
cmc
ljmp
aas
repnz
or
imul
stos
pop
jo
fsubrl
mov
cmpl
in
mov
mov
or
dec
or
or
call
inc
mov
jns
push
or
cmpsl
push
imul
andb
lret
cmc
rclb
stos
cld
incl
pushl
in
push
dec
loopne
mov
lods
xchg
outsb
lods
sti
and
scas
push
mov
push
in
xchg
push
rcrb
out
pop
icebp
inc
mov
inc
pop
in
call
clc
orb
add
mov
mov
ret
xor
std
push
cs
push
jp
lock
aad
jne
jle
mov
cli
call
repz
rol
outsl
lret
dec
daa
cli
jecxz
outsl
mov
hlt
fwait
sbb
mov
sub
jno
mov
inc
adc
in
cmc
xlat
sar
scas
pushl
or
push
or
int3
loop
divl
mov
ret
jg
lea
insl
in
and
lahf
mov
sbb
fwait
sbb
fstpl
cmc
int
mov
out
pop
pop
nop
sub
pop
fdiv
and
inc
add
fnstsw
mov
add
cmp
push
negl
push
negb
cld
xor
ja
pop
and
inc
mov
mov
mov
imul
xor
mov
jle
lret
mov
decl
out
dec
inc
cmp
adc
fidivrs
out
sti
xor
outsl
ljmp
out
xor
js
in
stc
mov
inc
sbb
nop
mov
cs
icebp
dec
sbbb
inc
insb
adc
out
push
incl
arpl
data16
ja
pop
or
and
pop
push
adc
jbe
dec
in
incl
fldt
jmp
int
das
push
xor
sub
push
mov
pushl
icebp
imul
push
sbb
out
insb
iret
and
les
mov
push
sub
mov
sbb
sbb
push
xorb
adc
iret
jae
int3
iret
dec
lcall
dec
pop
mov
sbb
fbstp
lret
push
outsl
mov
lcall
and
lods
xchg
pop
push
sub
inc
push
sbb
je
pop
cmc
cwtl
pushl
xlat
push
fwait
popf
cmp
xor
xchg
pop
lahf
js
icebp
ljmp
adcl
aas
test
or
inc
or
push
or
lea
bound
imul
dec
pop
pushaw
push
adc
jle
inc
andl
and
lcall
aad
in
shll
and
or
or
push
aas
or
mov
xchg
test
inc
push
nop
cltd
repz
fidivs
cltd
xchg
push
shrb
pusha
sub
into
jg
decl
div
jle
movsl
sahf
out
mov
lods
push
and
cmp
mov
test
stc
nop
pop
push
dec
jae
mov
and
imul
shll
pop
jge
xchg
sbb
call
mov
roll
fbld
cmp
pop
add
inc
jmp
repz
rorb
dec
lds
dec
lret
movsb
xchg
repz
jge
iret
xchg
dec
fcmove
fstpl
dec
imul
push
push
popf
imull
fisubrs
ja
push
arpl
jo
lahf
ds
loop
push
xchg
cwtl
rcll
add
jg
popf
loope
test
mov
cmp
dec
jg
ja
jecxz
sahf
lret
jns
xchg
call
dec
ret
mov
into
jmp
push
nop
ret
fdivrs
sbbl
ret
sti
jae
test
pushl
std
push
xor
and
adc
mov
popa
sahf
sbb
adc
push
neg
js
decl
push
mov
jo
inc
sbb
add
add
pop
cld
pushl
arpl
push
adc
rorl
or
mov
out
add
jnp
enter
mov
jne
xchg
lret
cwtl
sbb
cmp
xorb
pop
lret
push
cli
push
or
push
sub
decl
or
mov
xor
divl
sub
cmpb
sub
decl
stos
daa
jge
vpsrlw
jge
shlb
cmp
and
ljmp
jmp
pop
lods
mov
in
arpl
push
and
mov
daa
call
jg
mov
pushl
sub
xor
or
rclb
jle
cmpsb
test
xchg
mov
sbb
fcmovb
jl
rcr
fwait
jbe
fbstp
mov
adc
jno
mov
bound
loop
push
xor
push
jnp
sbb
loop
repz
in
inc
xchg
push
lret
cmpsb
mov
add
inc
rcll
adc
addr16
clc
ret
nop
or
repnz
sar
fldt
ffree
rcrl
test
xor
inc
out
mov
xchg
xchg
js
lds
insb
into
mov
jmp
outsb
xchg
lods
push
xorb
int
dec
adc
push
xchg
je
push
ss
dec
dec
ljmp
sti
jns
jge
in
mov
cmp
iret
out
xchg
inc
mov
jle
push
out
mov
mov
call
adc
push
je
pop
cltd
sbbl
adc
je
xor
mov
pop
popa
outsl
rclb
jg
push
xor
push
insl
fidivl
dec
lock
or
mov
dec
push
inc
jg
pop
or
mov
je
int3
lods
js
lods
xchg
push
aaa
inc
mov
shr
jmp
xchg
icebp
popa
int
lcall
mov
mov
mov
test
cmp
aam
xchg
cmp
sub
push
mov
fnstcw
call
lods
call
mov
pushf
aas
lods
mov
call
mov
xor
sti
jmp
lcall
std
mov
xor
sahf
inc
cmp
js
dec
xor
decl
lret
loopne
in
pop
mov
lret
mov
shll
iret
mov
incl
fiaddl
orb
pop
loope
lds
sub
cmpsl
push
in
sub
addr16
ja
ljmp
test
roll
mov
in
xchg
jle
popf
mov
and
popf
int
sahf
ljmp
scas
out
mov
aam
jg
or
das
mov
mov
pop
les
jmp
xor
ret
or
mov
lret
mov
jo
cmp
or
adc
xchg
sar
jmp
imul
fwait
inc
jb
jne
leave
mov
in
sbb
sbb
sub
xchg
dec
insl
stc
in
cmpsl
loop
int
sbb
adc
fnsave
in
cmpsl
dec
push
pop
je
addr16
pop
push
sub
movsl
dec
out
cli
js
dec
in
dec
xchg
jne
sbb
repz
pop
mov
push
push
in
lret
out
idiv
mov
test
sbb
sub
adc
arpl
add
scas
fldcw
xor
push
pop
push
aam
outsb
jbe
jp
lret
ret
sbb
or
xor
or
pop
mov
mov
lret
lahf
test
or
add
test
lahf
shlb
ficoms
inc
fisttpll
xchg
jmp
cmp
inc
rolb
pop
xchg
out
pop
scas
lock
fldcw
sets
sbb
nop
popa
jecxz
ljmp
hlt
daa
sub
into
mov
mov
jno
ss
imul
push
lret
out
mov
daa
test
mov
mov
xor
adc
dec
stc
rcrb
call
sub
dec
out
push
bnd
sbb
loope
push
push
mov
out
pop
lcall
xlat
test
sbb
and
and
js
xor
jecxz
call
sub
cmc
repz
push
dec
ds
sahf
enter
addr16
mov
fsubl
aad
jge
sbb
bound
and
shl
pop
ljmp
mov
in
add
mov
sub
push
std
testl
call
inc
mov
mov
insl
sub
in
pop
jp
lds
pop
jo
std
pop
and
jno
mov
adc
jg
xchg
flds
and
fldenv
mov
jmp
mov
lock
jne
je
or
js
cmp
add
adc
ror
aad
call
fdiv
sbb
incb
fdivrs
cmp
mov
imul
testb
int
pushl
enter
mov
dec
sbbb
xchg
jbe
push
xchg
out
jbe
jg
test
pop
cmp
push
dec
addl
fdivs
hlt
insb
mov
and
ljmp
push
jecxz
icebp
lcall
imul
cmp
data16
sbb
imul
aaa
cmp
test
push
xchg
or
leave
fs
stc
xor
decl
pop
int
or
xchg
cmovo
cmp
jecxz
and
inc
neg
hlt
sub
incl
cmp
test
test
popa
imul
lds
and
jg
mov
js
stos
fisubrs
pop
xchg
es
push
aas
sub
pushf
fmulp
imul
jg
hlt
adcl
sahf
cwtl
cmp
insl
add
mov
xchg
fcmovnb
mov
fcompl
and
lock
xchg
fwait
lock
popf
dec
cmp
mov
xor
cli
cmp
pop
sbb
xchg
xor
jge
jb
adc
scas
fwait
jg
ljmp
sahf
fs
sbb
push
xchg
dec
dec
cmp
xchg
mov
jmp
icebp
das
xchg
testb
or
dec
jmp
fildl
push
adcl
cs
push
stos
ljmp
rolb
pop
mov
pusha
cmpsb
sbb
pop
sub
mov
mov
orb
dec
jmp
xchg
mov
cmp
cld
add
insb
cmp
xchg
xchg
xlat
out
push
repnz
jno
lds
mov
jb
jmp
rcr
push
push
pop
das
mov
mov
adc
push
xchg
jl
jae
daa
pusha
push
ljmp
jecxz
push
dec
pop
rol
and
pop
cld
clc
or
dec
shll
push
in
call
les
xchg
jecxz
notb
cmpb
pushf
and
sahf
sbb
dec
xor
pop
incl
fdivrl
mov
fmuls
push
cltd
or
jg
or
je
popf
push
sbb
in
dec
pop
push
jnp
imul
fwait
js
add
stos
pop
sbb
push
mov
mov
or
incl
nop
xorl
js
out
decl
inc
adc
xchg
cmpsl
inc
inc
push
mov
push
sbb
in
mov
test
mov
mov
cmp
and
insb
aad
fwait
sub
jg
outsl
xlat
push
mov
sbb
dec
aad
fs
mov
or
fidivs
lods
mov
inc
mov
out
lahf
pop
incl
enter
cmp
mov
xor
rclb
je
dec
out
pushl
xchg
sbb
jmp
sti
and
mov
or
cmp
pop
push
sbb
or
jmp
xchg
lock
sti
test
test
pusha
push
test
pop
add
jmp
push
int
repz
mov
push
shrl
je
cmc
subb
aaa
mov
jmp
lret
push
rorb
mov
in
cmp
add
adc
in
int
mov
loopne
sarb
scas
loope
mov
popa
xchg
mov
jb
or
mov
lcall
or
aas
lea
pop
and
add
cmp
mov
add
push
lcall
lea
mov
loop
push
xchg
sbb
push
mov
dec
mov
cmc
divb
or
mov
int3
xor
call
fldl
cmpsb
sub
scas
outsb
insl
popa
cwtl
scas
int
cmp
lock
mov
loope
orl
jb
pop
dec
push
dec
and
insl
stos
mov
lock
movsl
arpl
jmp
fnstsw
in
js
xchg
push
push
fstps
test
inc
out
inc
mov
in
cmp
and
push
mov
movsb
fcomps
and
fwait
or
push
or
call
fnstenv
daa
xor
addr16
call
pop
inc
xchg
adc
xchg
lcall
lds
jge
jp
icebp
les
adc
xchg
shll
add
or
stc
and
test
nop
sahf
jmp
arpl
cli
cmp
lods
ret
rorl
lcall
fbstp
sub
adcl
jle
mov
jmp
les
lret
jmp
pop
cltd
push
adc
imul
dec
xchg
xlat
mov
mov
mov
das
dec
ljmp
adc
dec
pop
insl
jne
cmp
lret
shrl
js
test
call
lret
jecxz
das
popa
lahf
sub
call
adc
mov
bound
jnp
fcomip
jmp
or
push
cmp
mov
mov
inc
es
rcrl
pushf
repz
decl
mov
out
sbb
xor
cli
lret
pop
std
dec
fwait
xchg
cltd
sub
jecxz
rcrl
xchg
inc
inc
incl
decl
xchg
cwtl
adc
sbb
cmp
cmp
shlb
std
push
aad
mov
push
pop
dec
cltd
mov
cli
adc
jb
nop
lods
xor
and
push
sub
mov
rolb
adc
mov
lret
rclb
pop
push
or
push
notb
mov
inc
mov
jp
pop
clc
fs
xlat
mov
iret
pop
jne
hlt
sbb
cmp
jns
jae
inc
cltd
std
add
pop
lock
data16
push
mov
inc
in
dec
inc
cs
dec
daa
rorl
imul
std
adc
leave
in
scas
push
aaa
test
xchg
std
int3
mov
sar
call
inc
adc
aaa
sbb
hlt
push
add
jg
jae
clc
add
jg
jl
sbbl
dec
or
pop
sub
es
add
fisubrl
jle
incl
ss
xor
sub
mov
mov
out
or
dec
testb
clc
sub
mov
fildll
std
xchg
sbb
jmp
adc
adc
imul
aaa
std
mov
pop
push
mov
jecxz
mov
sub
jge
jmp
xor
adc
bound
push
ljmp
cmp
jns
cmp
test
addr16
dec
or
and
jg
addr16
add
inc
test
je
in
jbe
jbe
dec
add
fisttpll
in
adc
mov
jp
negl
andl
movd
add
neg
popf
jne
dec
inc
xchg
jne
mov
fbstp
mov
cmp
ret
push
jo
scas
fmull
sbb
dec
push
jno
jg
insb
sub
mov
subb
jmp
cmpsl
sub
jmp
popa
gs
push
or
out
push
shrl
add
mov
xchg
sarl
xchg
dec
imul
add
outsl
add
inc
add
popa
enter
xor
ret
add
xor
loopne
sub
sub
out
push
shlb
leave
es
jne
jmp
jbe
cmp
jmp
mov
jmp
or
mov
addr16
adc
and
dec
or
test
dec
lods
loope
mov
incl
and
mov
push
in
enter
add
pushf
stos
sbb
lods
mov
dec
lock
sbb
sbb
loope
pop
cmp
jmp
cli
rcll
add
jl
aaa
mov
xor
adc
adc
push
sub
fildl
cmp
pop
std
fbld
jmp
test
cmp
mov
repnz
mov
addb
pushl
loop
mov
and
movsb
fwait
adc
mov
data16
ljmp
dec
adc
add
adc
and
jne
jmp
sub
lcall
fwait
sub
enter
insb
loopne
adc
jbe
mov
cmp
pop
out
enter
mov
incl
mov
inc
sub
rolb
shrb
or
pushl
outsl
popf
popf
fistpl
mov
faddl
dec
insl
icebp
jb
lahf
mov
pop
call
nop
cltd
adc
mov
icebp
xor
adc
xchg
outsb
lret
insb
cmp
and
ljmp
xchg
mov
inc
cmp
leave
or
call
je
ds
daa
int
ljmp
fnstenv
pop
movb
add
lahf
sahf
aaa
xchg
out
into
xchg
dec
adc
sub
pushl
push
xchg
dec
in
and
int
repz
js
adc
das
mov
insl
jns
jnp
jo
roll
mov
shrl
notb
loopne
inc
jl
rorl
lds
lahf
pop
xor
jge
jecxz
cmp
test
pop
lcall
xchg
lahf
fidivs
nop
dec
push
mov
in
sub
cld
cmp
push
divb
pusha
inc
xchg
popf
push
jnp
fwait
mov
inc
cs
jne
ficompl
adc
jmp
cld
push
mov
mov
inc
iret
or
lret
daa
test
xor
sbb
sbb
jg
lcall
or
testl
shlb
mov
sub
cld
sti
push
push
cli
ss
ret
jnp
mov
subb
insb
das
daa
mov
mov
ljmp
mov
subl
cwtl
andb
adc
fisubs
insl
testl
jmp
mov
cmpsb
out
dec
and
movsl
cmpsl
in
aas
mov
jae
inc
les
iret
xchg
sub
pop
stos
mov
fcoms
push
loopne
jmp
and
mov
pushl
shlb
andl
add
std
lahf
leave
jge
decl
jns
xlat
gs
mov
aam
insb
or
xchg
lret
fstpt
sub
decl
jo
pop
add
mov
dec
out
sbb
vmwrite
pop
or
lret
xchg
stc
push
jmp
cmpsl
into
dec
jl
pop
movsl
xor
inc
xor
scas
mov
loopne
dec
inc
in
jmp
arpl
sti
mov
xchg
into
stc
xor
sarb
ret
jmp
inc
repnz
shlb
addr16
mov
fcompl
adc
mov
lea
decl
cmp
je
stc
repnz
dec
dec
mov
imul
pop
jmp
and
push
sub
mov
pop
sub
outsb
mov
aaa
inc
xor
sub
xor
pushl
rcrb
clc
cmp
jmp
fdivrp
mov
jne
mov
and
jg
repnz
ret
push
cmp
fmul
fstp
push
aas
sub
cmp
ss
add
add
xor
inc
xor
inc
cltd
pusha
mov
sub
ds
sub
pop
out
sub
call
adc
inc
fidivrl
js
retw
mov
data16
cmp
scas
mov
adc
lcall
insl
xchg
xchg
adc
xchg
idivb
fiaddl
fldcw
lcall
inc
mov
popa
xor
jb
inc
xchg
stos
xor
xchg
cli
cmp
inc
push
mov
mov
jo
jb
jo
lea
fwait
ret
cmp
rorl
ret
fwait
fildll
je
jno
lcall
push
mov
and
stc
ljmp
repnz
dec
cmp
enter
fdivrl
fstpl
outsb
stos
mov
lea
stos
ljmp
xor
cmp
loope
xor
inc
jmp
pop
data16
aaa
jnp
mov
adc
xchg
push
movsl
xchg
popf
nop
mov
dec
xchg
test
mov
mov
add
mov
lods
push
mov
sbb
jmp
push
fs
into
pop
and
mov
mov
adc
loopne
out
or
ret
sbb
lcall
lretw
jle
add
ljmp
mov
cmp
pushf
sbb
dec
aam
repnz
pop
pop
sbb
xchg
inc
bnd
cld
pushl
add
pop
xchg
shrl
pop
push
add
xor
and
test
add
mov
lahf
and
fs
ja
call
pop
inc
mov
pop
test
loope
lcall
push
add
push
movsb
mov
pop
dec
inc
dec
les
enter
lret
movsl
xchg
loopne
mov
lcall
mov
inc
loopne
mov
xor
xlat
in
nop
leave
rol
bound
inc
sub
out
and
or
scas
dec
cmp
hlt
mov
je
mov
inc
mov
call
lcall
mov
and
shrb
iret
pop
popa
decl
cmp
ret
pop
gs
lret
add
mov
push
ret
xlat
push
add
mov
pop
jp
mov
and
std
stos
mov
ret
rcll
in
sbbb
mov
mov
test
call
mov
sub
arpl
in
out
in
loope
out
push
add
cli
in
and
push
mov
cs
sub
lcall
cmp
loopne
cmpsb
mov
push
pop
mov
std
mov
mov
jecxz
adc
test
pop
ds
push
dec
loope
xor
pusha
add
sbb
mov
xlat
ds
jle
and
push
pop
jb
arpl
inc
pop
jb
and
loopne
xchg
sbb
mov
jo
fstpl
adc
jns
dec
and
dec
sti
xchg
jl
adc
repnz
adc
mov
mov
and
mov
and
and
xchg
je
or
sub
lods
inc
cmp
adc
pop
cmp
cmp
xor
sub
push
lock
cmc
ffree
inc
mov
inc
pop
xor
mov
pusha
inc
adc
xchg
mov
mov
fisubrl
mov
mov
cmp
lds
fistpl
adc
mov
popf
sub
and
shll
test
fmull
mov
pop
mov
adc
pusha
sub
adc
insb
mov
adc
adc
sub
popa
pop
add
inc
outsl
insl
cmp
push
sub
fstps
adc
pop
mov
dec
subl
mov
movsl
jmp
sub
rorl
or
lods
loopne
dec
aaa
test
xor
mov
push
sub
js
mov
hlt
mov
push
jns
mov
lods
and
outsl
insl
adc
or
cwtl
mov
xchg
and
xor
sti
int
add
xor
leave
or
xorb
fstl
fnstsw
pusha
in
stos
mov
fildll
or
cmovno
imul
xchg
mov
add
push
out
enter
xor
push
add
and
jmp
add
or
rolb
decl
sbb
dec
dec
dec
sub
call
and
adc
dec
in
xorps
ret
fbld
call
jb
dec
cltd
jno
pop
jmp
adc
mov
sarl
insb
movsl
adc
jp
cmp
mov
mov
pop
xor
es
mov
push
lock
lret
aad
call
push
pop
push
into
decl
fists
mov
mov
ja
ss
pop
fdivrl
mov
xor
mov
stc
subl
fisubrl
outsl
mov
jns
mov
dec
pop
jl
call
push
test
in
stos
stos
ss
push
subl
cmp
ret
jp
or
inc
icebp
jle
rorl
dec
in
stos
jl
ljmp
stc
push
fistl
push
add
repnz
jns
call
enter
hlt
jno
shr
cltd
inc
mov
lock
je
xor
inc
test
mov
mov
sar
call
xchg
dec
push
xchg
push
jb
imull
loop
in
sub
mov
sub
icebp
repz
xchg
or
ljmp
repnz
fcoml
insb
lea
or
cmp
push
cmpsl
push
fdivrl
decl
rcrb
add
mov
xor
xchg
xor
insb
ja
lds
mov
xchg
push
fisubrs
cmp
lahf
mov
add
ror
sub
into
int
and
or
into
rcrb
jne
call
addr16
jae
cmp
add
bound
jle
sub
inc
cwtl
adc
lcall
lods
dec
mov
cmc
pavgb
lret
cmp
inc
pop
out
rcrl
movsl
pop
adc
mov
dec
stc
mov
out
mov
jo
mov
frstor
push
mov
jmp
or
pusha
adc
or
loop
daa
je
test
jbe
pushl
loop
inc
in
add
add
scas
std
dec
xor
loop
push
push
xchg
aad
loopne
jle
repz
inc
sub
test
fisttpl
xor
fidivrs
loop
rolb
push
inc
jno
ds
xchg
dec
test
sub
push
dec
sbb
addr16
mov
sbb
iret
dec
jle
iret
cmpsb
xchg
call
or
aas
in
inc
jg
pop
add
inc
cmpsb
clc
sub
jmp
pushf
outsl
in
lock
orb
std
xchg
cmpsl
test
aaa
in
aam
dec
es
and
cmp
aaa
lcall
inc
xor
add
enter
lahf
loopne
xor
fildll
cmpsl
add
pop
out
incl
sub
into
int3
movsl
out
je
xorl
xchg
btc
lock
es
rolb
rolb
cmp
outsl
mov
in
outsl
sahf
lret
pop
xor
dec
sub
inc
and
add
ljmp
jb
mov
data16
fstpl
ret
inc
fcoml
pop
inc
dec
cmpsl
aad
mov
sub
inc
popf
enter
mov
pop
push
push
clc
xchg
xlat
scas
push
bnd
push
mov
sub
scas
pushf
jb
jl
jl
stos
add
push
mov
ret
inc
clc
add
stos
pop
sahf
mov
aas
test
inc
fs
cmpb
adc
iret
dec
pop
cld
pushl
into
jns
ja
andl
mov
pop
in
cmp
jmp
jns
sub
nop
addr16
adc
rcrb
mov
cld
pop
icebp
sti
cmp
sahf
adc
cmp
add
cmpsb
imul
mov
dec
por
or
mov
mov
and
ljmp
sahf
out
mov
lret
jge
pop
adc
mov
mov
adc
mov
xor
rcr
daa
mov
sti
xchg
jle
inc
outsl
in
idivl
push
cld
lret
outsb
dec
std
pushl
sub
lret
cmp
lds
sub
mov
jg
fwait
dec
inc
pop
lret
adc
sbb
jb
pop
add
xchg
or
ljmp
shlb
mov
sbb
jl
adc
sub
or
xor
add
cmp
orl
loopne
mov
fsubrl
daa
decl
mov
push
inc
xchg
mov
js
dec
and
rcr
es
fadds
cld
outsl
clc
shll
aad
loop
je
stc
scas
inc
shrl
fidivrs
mov
fisttpl
add
adc
cmpsl
and
scas
sbbb
js
push
imul
pop
and
lods
sbb
add
cmp
jecxz
and
call
fcomps
call
and
xchg
sub
sti
inc
sbb
test
inc
add
push
andl
inc
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
mov
mov
sbb
call
sub
faddl
cltd
inc
cmpb
into
jl
imul
pop
out
rorb
mov
sbb
cltd
testl
dec
ss
out
xchg
dec
cmp
shl
cltd
mov
push
sub
dec
xchg
nop
pop
out
inc
cwtl
insl
cmp
in
or
cmp
inc
iret
mov
sbbb
sub
and
jle
sub
gs
pushl
insl
repnz
xor
outsl
mov
dec
hlt
or
mov
int
xchg
sbb
into
cmp
shll
or
repnz
insb
or
push
loopne
ds
lds
mov
insb
fs
xchg
mov
aam
nopl
sub
fdivr
pushl
call
jne
das
jne
stc
sbb
mov
aas
les
adc
sub
out
mov
xchg
add
ja
fcomps
fdivr
stos
push
subl
jmp
lcall
aaa
leave
jg
push
ja
pop
loop
mov
movsl
addl
cmp
inc
dec
mov
aad
jmp
mov
mov
int
insb
and
jb
insl
pusha
pop
jo
data16
mov
inc
loopne
sahf
pop
je
pop
or
popf
int3
ret
inc
cs
cs
xlat
push
xor
mov
loope
jmp
in
cld
sti
jg
call
mov
pop
fstpt
dec
imul
call
clc
push
movsl
fdiv
lods
inc
adc
fldl2t
mov
dec
mov
loope
inc
inc
lods
loopne
jmp
push
sbb
out
call
or
insb
xchg
push
or
movsl
sbb
rol
pop
cmp
decl
fisubrs
movsb
push
ds
dec
add
or
sbb
sarb
push
lock
dec
aam
idiv
dec
rcrb
sub
sbb
mov
and
loope
call
imul
or
sbb
pop
push
pop
stos
cwtl
mov
inc
mov
mov
add
pop
jne
cltd
xchg
and
sbb
shrl
subl
push
lods
xchg
cmpsb
aaa
stc
mov
cmp
es
push
jnp
fsubrl
out
pushf
dec
add
setno
rol
jns
shrb
jb
or
int3
push
xchg
mov
dec
cmpsl
scas
xor
and
fwait
scas
jecxz
cli
cmp
sub
mov
fcomip
stos
mov
jbe
push
std
jno
iret
imul
sbb
out
mov
lcall
je
sub
je
fsub
sahf
jbe
and
sarl
lret
movntps
jnp
incb
cwtl
repnz
orb
jns
gs
fmuls
or
mov
out
pusha
sbb
sbb
and
test
stos
std
inc
add
pusha
fdivr
incl
mov
xchg
arpl
leave
fdivs
dec
cmp
scas
test
lods
jmp
xchg
add
scas
push
cltd
xor
call
mov
andl
jbe
pusha
insl
fsubrs
mov
in
imul
cmp
mov
cmpl
in
adc
cld
add
popa
pop
out
inc
outsb
gs
cmp
xor
aam
cmp
xchg
pop
ds
sub
sub
incl
cmp
daa
adc
clc
sub
scas
mov
jmp
lds
fcomps
jno
cli
pop
jle
add
mov
rcrb
out
outsl
mov
inc
or
loopne
mov
inc
out
push
cmpsb
jecxz
mov
jnp
in
mov
mov
pop
xchg
pushl
inc
dec
sub
push
inc
lcall
mov
roll
fidivs
adc
push
aad
lock
loopne
jno
sti
dec
sub
or
ret
sub
or
push
push
mov
je
pop
stc
in
pop
adcb
test
mov
incl
mov
addr16
cmp
jmp
adc
pop
lret
push
mov
inc
movsb
pop
decl
fucomi
pop
push
or
push
in
push
cmp
adc
or
decl
lock
cmp
dec
sti
push
add
stos
adc
les
aaa
test
mov
xchg
test
push
inc
dec
jns
js
dec
fneni(8087
gs
xlat
aas
popl
ds
in
pop
test
insb
adc
loope
fstpt
xchg
stos
cmpsb
stos
and
ja
call
insl
je
add
adc
mov
mov
xchg
aam
inc
or
pop
fwait
push
pushl
imulb
xor
sahf
test
cs
hlt
loopne
rcrl
cmpsb
sbb
ljmp
push
and
stos
fisubs
pop
dec
sub
mov
test
jg
test
ret
sbb
int3
jecxz
call
fisubrs
push
std
imul
les
mov
cmp
lods
leave
fsts
push
fldt
adc
loop
adc
jg
loop
xchg
fsubl
mov
lcall
jge
and
scas
jo
sub
ss
mov
xchg
fs
insb
inc
out
cmpsb
fwait
jmp
mov
lods
push
daa
mov
mov
cmp
iret
or
stos
xor
jno
mov
call
inc
dec
loopne
sbb
rcl
add
lcall
mov
ljmp
xchg
adc
cmpsl
lret
mov
xchg
add
xchg
mov
cmc
mov
test
lcall
adc
mov
adc
and
jl
xor
jge
or
lcall
rorb
movsl
data16
testb
test
adc
cmp
mov
enter
cmp
sbb
mov
pusha
mov
out
je
push
mov
ljmp
mov
push
outsl
lock
stc
jmp
mov
pop
mov
test
mov
ret
popa
das
ljmp
ljmp
das
insl
out
fists
jmp
les
ret
mov
and
inc
aas
pop
push
xchg
pop
int3
cmc
lods
test
ljmp
imul
stos
pop
jo
fsubrl
pushl
in
mov
mov
or
dec
or
or
call
incl
jmp
cmp
sub
cltd
shll
jb,pt
andb
lret
cmc
rclb
call
jmp
stos
cld
mov
pusha
dec
insb
in
push
dec
loopne
mov
lods
xchg
outsb
lods
sti
and
scas
call
push
push
rcrb
out
pop
icebp
inc
mov
inc
pop
in
call
clc
cmp
decl
cmp
lds
xor
std
push
cs
push
jp
lock
aad
jne
jg
jle
mov
sahf
and
les
dec
daa
cli
jecxz
outsl
mov
hlt
fwait
decl
lcall
lahf
xchg
inc
mov
pop
sub
jno
mov
inc
adc
ja
incl
or
push
or
int3
loop
divl
mov
call
out
sbb
shll
jmp
test
sbb
fwait
sbb
mov
cmc
int
mov
out
pop
pop
nop
sub
pop
fdiv
and
inc
add
fstl
sbb
subl
mov
xchg
sbb
dec
fs
push
add
pop
inc
cld
xor
ja
pop
and
inc
mov
mov
mov
imul
xor
mov
fcomip
jle
lret
mov
dec
inc
cmp
adc
fidivrs
out
sti
xor
out
call
mov
lock
in
stc
mov
lcall
inc
sbb
nop
cwtl
fstps
mov
pop
mov
outsl
inc
insb
adc
push
pop
out
push
sbbl
ja
pop
or
and
pop
push
adc
cli
adc
dec
in
lods
ljmp
movsb
repz
das
push
xor
sub
call
or
xorb
imul
push
sbb
out
insb
iret
and
les
lcall
push
sub
mov
sbb
sbb
push
xorb
adc
iret
jmp
int3
iret
dec
int
mov
sbb
fbstp
lret
ljmp
incl
outsl
mov
lcall
dec
mov
sub
inc
push
sbb
pushl
cmc
cwtl
mov
xchg
inc
dec
xlat
push
fwait
popf
cmp
xor
xchg
pop
lahf
js
icebp
ljmp
jge
adcl
leave
or
popf
gs
pop
inc
or
push
or
lea
call
imul
dec
pop
pushaw
push
adc
jle
inc
andl
out
cli
mov
aad
in
shll
and
or
or
push
aas
or
mov
mov
inc
push
nop
cltd
repz
fidivs
cltd
xchg
push
shrb
pusha
sub
jnp
pushf
jl
psadbw
jle
movsl
sahf
out
mov
lods
push
and
cmp
incl
mov
test
stc
nop
pop
push
dec
jae
mov
and
imul
shll
pop
jge
xchg
sbb
xchg
fiadds
mov
roll
fbld
cmp
pop
add
inc
jmp
repz
pushl
rorb
lds
dec
lret
movsb
xchg
repz
jge
iret
xchg
dec
fcmove
fstpl
dec
imul
mov
sub
imull
fisubrs
ja
push
arpl
jo
lahf
ds
loop
push
xchg
cwtl
sar
push
out
add
popf
loope
test
mov
cmp
dec
jg
ja
jecxz
sahf
lret
decl
mov
xchg
or
mov
into
jmp
push
nop
ret
fdivrs
sbbl
ret
mov
jae
test
std
push
xor
and
adc
mov
popa
sahf
sbb
adc
ljmp
push
neg
js
repnz
mov
jo
inc
sbb
add
ljmp
enter
xor
arpl
push
adc
rorl
or
incl
dec
or
out
add
jnp
enter
mov
jne
xchg
lret
std
pushl
sbb
jl
cmpsb
xorb
pop
lret
push
cli
push
cmp
dec
test
sub
jmp
adc
push
aas
mov
xor
divl
sub
subb
pop
sub
jge
vpsrlw
jge
shlb
cmp
jg
xor
cmp
or
lods
mov
in
arpl
push
and
mov
daa
call
call
mov
add
call
or
rclb
jle
cmpsb
test
xchg
mov
mov
jl
rcr
fwait
jbe
fbstp
mov
adc
jno
mov
cmp
mov
or
sub
ja
repnz
in
inc
xchg
push
lret
inc
cmpsb
mov
push
inc
rcll
adc
addr16
clc
ret
nop
or
repnz
ljmp
lret
sub
ret
rcrl
test
xor
inc
out
mov
xchg
xchg
js
lds
insb
into
decl
and
lods
push
xorb
int
dec
adc
push
xchg
je
push
ss
ljmp
iret
dec
ljmp
pop
in
mov
cmp
iret
out
xchg
inc
mov
jle
call
sub
push
je
pop
cltd
sbbl
adc
je
xor
mov
mov
popa
outsl
rclb
lock
push
insl
fidivl
dec
lock
or
mov
iret
push
inc
jg
pop
or
mov
je
int3
lods
js
lods
xchg
push
pushl
inc
mov
shll
xchg
icebp
popa
int
lcall
mov
mov
mov
pop
es
aam
xchg
cmp
sub
push
mov
fnstcw
push
out
bound
lods
call
mov
pushf
aas
lods
mov
call
pushl
loop
icebp
sub
jbe
out
std
mov
xor
sahf
inc
cmp
incl
aam
xor
lret
loopne
in
pop
mov
lret
mov
shll
dec
mov
fiaddl
orb
pop
loope
lds
sub
cmpsl
push
in
sub
addr16
jg
aas
ja
outsl
roll
mov
in
xchg
jle
popf
mov
and
lcall
stos
mov
mov
aam
jg
or
das
mov
mov
pushl
dec
pop
les
jg
xor
ret
or
mov
lret
mov
jo
cmp
or
adc
call
jmp
imul
fwait
inc
jb
jne
leave
mov
in
sbb
sbb
ljmp
sub
cmpsw
loop
int
sbb
adc
fnsave
in
cmpsl
dec
push
pop
je
addr16
pop
push
xlat
ljmp
inc
cltd
movsl
dec
js
dec
in
dec
xchg
jne
sbb
repz
pop
mov
push
push
in
jg
lret
out
idivb
inc
rcrl
or
andl
out
arpl
add
ljmp
repz
push
aam
outsb
jbe
jp
lret
ret
sbb
or
xor
or
incl
insl
and
xor
add
test
lahf
shlb
fdivrp
call
inc
fisttpll
xchg
in
inc
rolb
pop
xchg
out
pop
scas
lock
fldcw
sets
lcall
jo
nop
popa
sub
daa
sub
into
mov
mov
jno
ss
imul
push
lret
out
lcall
daa
test
mov
mov
xor
adc
dec
stc
rcrb
call
ljmp
inc
leave
out
push
bnd
sbb
loope
push
push
mov
out
pop
out
pop
xor
test
sbb
and
and
js
ljmp
jg
adc
sub
cmc
repz
push
dec
ds
sahf
enter
jmp
lret
fsubl
aad
jge
sbb
bound
and
shl
pop
ljmp
pop
testb
sbb
add
mov
sub
push
std
idiv
scas
jb
dec
xor
icebp
inc
mov
mov
insl
sub
in
lcall
mov
fwait
pop
jo
std
pop
and
jno
mov
adc
jg
xchg
flds
and
fldenv
mov
cwtl
and
lock
jne
je
or
js
cmp
add
adc
ror
aad
call
fdiv
sbb
incb
fdivrs
cmp
mov
imul
push
cmovs
adc
enter
mov
dec
sbbb
xchg
jbe
push
xchg
out
call
bnd
test
push
dec
addl
fdivs
hlt
insb
mov
mov
sub
jecxz
icebp
lcall
imul
cmp
data16
sbb
imul
aaa
cmp
test
push
xchg
or
leave
fs
stc
pushl
or
int
or
xchg
cmovo
cmp
jecxz
and
inc
push
fadd
hlt
sub
cmp
test
test
popa
imul
lds
stos
frstor
loope
mov
js
stos
fisubrs
pop
xchg
es
push
aas
sub
pushf
lcall
fmulp
imul
hlt
adcl
sahf
cwtl
cmp
insl
add
mov
incl
fcompl
and
lock
xchg
fwait
lock
popf
dec
cmp
mov
push
aas
das
jae
cli
cmp
pop
sbb
xchg
xor
jge
jb
adc
push
jg
scas
fwait
scas
std
into
push
sbb
in
push
xchg
dec
dec
cmp
call
es
das
xchg
testb
or
dec
jmp
fildl
push
adcl
cs
jg
xor
push
stos
subl
iret
or
sbb
pop
push
cld
mov
or
dec
jmp
xchg
mov
cmp
cld
add
stc
mov
cmpsl
in
mov
out
push
repnz
jno
lds
mov
decl
callw
rcr
push
push
pop
das
mov
mov
adc
push
xchg
jl
jae
jmp
pusha
push
lods
push
dec
pop
rol
and
pop
cld
clc
or
dec
shll
cmp
push
in
adc
subl
notb
cmpb
pushf
and
sahf
sbb
pushl
dec
xor
pop
test
add
test
cmp
mov
fmuls
push
cltd
cmp
or
je
popf
push
sbb
in
dec
pop
push
jnp
imul
cmp
lcall
stos
pop
sbb
push
mov
mov
or
lcall
xorl
js
out
scas
mov
jae
inc
adc
xchg
cmpsl
incl
push
mov
push
sbb
in
mov
ret
xor
mov
push
sti
pop
add
and
insb
aad
fwait
sub
jg
outsl
xlat
divl
aad
fs
mov
decl
sbb
fidivs
lods
mov
inc
mov
out
lahf
pop
cmp
mov
cwtl
cmp
jmp
mov
xor
rclb
je
dec
out
pop
mov
test
lret
jg
sti
and
mov
or
cmp
pop
push
sbb
or
xchg
lock
cmp
sti
test
test
pusha
push
test
pop
add
fistl
ret
push
int
repz
mov
decl
data16
das
je
cmc
subb
aaa
mov
daa
lret
push
rorb
mov
in
cmp
add
adc
mov
loopne
sar
js
scas
loope
mov
popa
xchg
mov
jb
or
mov
inc
cmp
or
aas
lea
lcall
and
add
cmp
mov
add
push
pop
jle
aaa
mov
loop
push
xchg
sbb
decl
sub
pop
mov
div
divb
or
int3
xor
call
decl
fldl
cmpsb
sub
scas
outsb
insl
popa
cwtl
scas
int
cmp
lock
loope
orl
jb
call
pop
dec
push
dec
and
insl
stos
mov
lock
movsl
arpl
fnstsw
in
js
xchg
ljmp
ret
push
fstps
test
inc
out
inc
mov
in
cmp
ds
mov
mov
and
fwait
or
push
or
nop
mov
cltd
inc
fnstenv
daa
pushl
pop
addr16
call
pop
inc
xchg
adc
xchg
pop
lds
jge
jp
icebp
les
adc
lcall
xchg
shll
add
or
stc
and
jle
nop
sahf
jmp
lcall
cmp
cmp
ret
rorl
fbstp
sub
adcl
mov
inc
mov
jmp
les
lret
adc
push
adc
imul
dec
xchg
xlat
mov
mov
mov
das
dec
out
gs
dec
lcall
jne
cmp
lret
shrl
js
test
xchg
lods
scas
push
lock
jecxz
das
popa
lahf
sub
lcall
call
adc
mov
bound
jnp
or
push
cmp
mov
lcall
es
rcrl
pushf
repz
mov
out
sbb
xor
cli
lret
pop
std
dec
fwait
xchg
cltd
sub
jecxz
rcrl
xchg
inc
inc
or
sub
mov
mov
hlt
daa
cmp
cmp
shlb
push
aad
mov
push
pop
decl
mov
cli
adc
jb
nop
lods
xor
and
push
sub
mov
mov
lret
call
push
jg
push
or
push
notb
mov
mov
jp
pop
clc
fs
xlat
mov
incl
pop
jne
hlt
sbb
cmp
jns
jae
inc
cltd
std
add
data16
push
mov
inc
incl
cs
dec
daa
rorl
imul
out
leave
in
scas
push
inc
cmp
out
xchg
std
int3
mov
inc
adc
aaa
sbb
hlt
push
pop
adc
incl
mov
mov
gs
add
sbbl
mov
jmp
pop
sub
es
add
fisubrl
push
in
clc
ss
xor
sub
outsl
out
testl
mov
mov
clc
sub
inc
in
mov
xchg
sbb
hlt
jg
stc
jmp
adc
adc
mov
pop
neg
mov
jecxz
mov
sub
xor
repz
inc
mov
bound
lret
mov
push
ljmp
jns
cmp
test
sti
into
dec
or
and
add
std
fnstenv
test
dec
mov
fcmovnu
add
fisttpll
das
xor
sbb
dec
jo
out
jp
negl
movd
cmp
add
and
dec
inc
jle
jae
xchg
jne
jno
mov
mov
dec
xor
push
jo
add
mov
mov
push
jno
mov
adc
cmp
sub
xchg
repnz
pop
push
rolb
ror
test
sub
jp
xchg
shrl
jnp
cmp
adc
outsl
add
movsl
mov
pusha
add
lock
xor
rol
add
sub
dec
popf
sub
test
into
out
push
rcrb
es
enter
mov
insl
lock
jmp
mov
popf
or
mov
addr16
adc
jmp
repnz
or
test
dec
lods
loope
mov
movsl
mov
push
in
enter
add
jg
pop
aad
stos
sbb
lods
mov
pop
sbb
sbb
cltd
xchg
loopne
ret
pop
andl
rcll
add
jl
aaa
mov
xor
fstl
inc
cmpsl
adc
push
sub
fildl
cmp
daa
jmp
test
cmp
mov
lcall
fs
mov
addb
icebp
mov
mulb
cmp
xor
ljmp
clc
dec
data16
push
dec
adc
add
adc
lcall
and
jne
jmp
sub
sbb
mov
loopne
adc
jbe
mov
pop
cld
jle
mov
movsb
jbe
out
enter
mov
nop
js
xchg
inc
sub
inc
adcb
repz
shrb
or
outsl
popf
popf
fistpl
mov
faddl
mov
pop
lahf
mov
pop
xlat
nop
cltd
adc
mov
icebp
xor
adc
int3
jmp
dec
xchg
outsb
lret
insb
cmp
and
lods
push
push
xchg
mov
inc
cmp
dec
or
call
je
ds
daa
int
mov
rclb
cmp
add
jmp
lcall
pop
into
xchg
dec
adc
sub
mov
mov
in
and
int
repz
js
incl
shlb
jno
das
mov
loopne
insl
jns
jnp
jo
roll
mov
ljmp
push
shrl
notb
jl
rorl
lds
lahf
pop
xor
jge
lcall
and
cmp
test
cmp
fidivs
nop
dec
push
mov
in
sub
cld
cmp
mov
nop
sub
pusha
inc
xchg
popf
push
jnp
fwait
mov
int
push
inc
cs
jne
ficompl
adc
arpl
push
mov
inc
iret
or
lret
incl
daa
test
xor
sbb
sbb
jnp
sub
sbb
orl
dec
sbb
pushl
jbe
mov
sub
cld
sti
push
push
cli
ss
ret
jnp
mov
subb
lcall
daa
mov
mov
mov
gs
outsb
and
cwtl
imul
adc
fisubs
insl
testl
mov
out
dec
and
imul
or
mov
iret
xchg
sub
pop
stos
mov
fcoms
push
jmp
pop
jmp
and
mov
push
shlb
andl
ret
mov
je
or
xchg
dec
icebp
jns
xlat
gs
mov
aam
insb
or
xchg
dec
cltd
dec
fstpt
sub
ss
add
mov
dec
out
sbb
decl
jns
pop
or
lret
xchg
stc
mov
cmpsl
into
dec
jl
pop
movsl
xor
inc
xor
call
inc
jae
mov
loopne
dec
ret
in
jmp
arpl
sti
mov
xchg
dec
stc
xor
sarb
ret
daa
inc
repnz
shlb
addr16
mov
fdivr
das
cli
lcall
adc
mov
lea
sahf
sahf
filds
stc
repnz
dec
decl
cs
imul
pop
arpl
and
push
sub
mov
pop
sub
ljmp
mov
sub
xor
adc
sbb
cmp
jmp
fdivrp
mov
jne
mov
and
jg
repnz
ret
aaa
imul
fcompl
aas
sub
call
dec
adc
cwtl
aad
cmp
int3
ljmp
inc
cltd
pusha
mov
sub
ds
call
data16
sub
pop
out
sub
adc
inc
fidivrl
js
retw
mov
data16
call
clc
scas
mov
adc
jmp
rcr
insl
xchg
xchg
adc
xchg
idivb
decl
fiaddl
fldcw
lcall
cwtl
sbb
shlb
inc
xchg
stos
xor
xchg
cli
call
std
cmp
inc
push
mov
mov
jo
lea
fwait
ret
cmp
jg
call
or
ret
fwait
sub
test
and
or
std
pushl
stc
ljmp
repnz
jmp
sub
sbb
outsb
stos
cli
pushl
mov
lea
adc
je
xor
cmp
loope
ljmp
inc
loop
pop
data16
aaa
jnp
mov
adc
xchg
call
xchg
popf
nop
mov
dec
xchg
test
and
scas
pushf
mov
mov
lods
push
mov
mov
and
mov
push
fs
into
pop
and
mov
pushl
sbb
add
ret
sbb
lcall
lretw
incl
movsb
sub
or
cmp
pushf
sbb
dec
aam
repnz
pop
ljmp
pop
sbb
xchg
inc
bnd
repz
add
pop
xchg
shrl
pop
sub
sub
push
add
xor
mov
add
nop
push
add
mov
dec
push
mov
push
ja
call
pop
inc
mov
pop
test
loope
sbb
add
push
movsb
mov
pop
dec
inc
dec
les
dec
imul
insl
mov
sbb
inc
loopne
mov
xor
xlat
jmp
push
nop
leave
rol
bound
inc
sub
out
and
or
scas
dec
cmp
jmp
push
hlt
mov
je
mov
inc
mov
push
and
call
shrb
iret
pop
popa
or
xor
add
mov
mov
lods
movsb
mov
push
ret
xlat
push
add
mov
pop
jp
mov
and
std
stos
mov
ret
rcll
in
cmp
lcall
int
mov
test
mov
sub
arpl
in
out
in
loope
out
push
add
insb
test
cli
in
and
push
mov
cs
sbb
in
loopne
cmpsb
mov
push
pop
imulb
cmpsb
lock
call
mov
mov
adc
xor
push
adc
adc
insl
jnp
add
sbb
sti
mov
mov
push
and
push
xchg
pop
insl
arpl
xchg
pop
jb
inc
cmp
daa
sbb
addl
fstpl
adc
pusha
inc
adc
and
adc
fmul
aaa
in
sub
adc
jnp,pn
ja
adc
pop
frstor
pop
ss
adc
and
shrb
out
and
adc
pop
adc
sub
or
jl
adc
rcll
or
pop
pop
shll
das
fstps
mov
mov
push
orb
insl
sbb
scas
imul
mov
jne
sub
adc
add
in
lds
mov
mov
fistpl
out
dec
ret
xor
repnz
xor
sti
test
cmp
fildll
pop
flds
mov
call
adc
sub
mov
xlat
adc
dec
adc
insl
adc
adc
inc
adc
inc
pop
pop
mov
outsl
sub
in
jne
ffree
fimull
pop
mov
sbb
xor
fidivrs
movsl
jmp
js
mov
mov
inc
cmp
ret
aaa
test
adc
pop
ret
lods
lds
loopne
adc
ljmp
mov
pusha
rcll
lods
inc
push
cmp
ficoml
adc
mov
or
or
test
pop
inc
sti
fs
int
sub
xor
mov
aad
adc
add
fnsave
cmpb
mov
mov
fistps
adc
or
lods
add
add
mov
out
xor
adcb
pop
and
add
adc
lods
or
call
inc
mov
mov
dec
xor
sar
dec
sub
call
and
add
xorps
lcall
and
dec
cltd
jno
pop
jmp
adc
mov
push
pop
adc
sarl
insb
movsl
adc
jp
cmp
mov
mov
pop
xor
es
mov
push
lock
ljmp
lret
aad
call
push
pop
push
into
les
fists
mov
mov
ja
ss
inc
insb
add
ret
mov
xor
and
stc
subl
fisubrl
outsl
mov
pushl
test
sbb
orb
jmp
int
in
stos
stos
ss
push
subl
cmp
decl
ret
jp
or
inc
icebp
jle
rorl
dec
in
stos
jl
ljmp
stc
push
fistl
push
add
repnz
jns
enter
hlt
jno
shr
cltd
inc
mov
lock
je
pushl
inc
test
mov
mov
rcl
xchg
dec
push
xchg
push
jb
imull
loop
in
sub
mov
incl
iret
sub
icebp
repz
xchg
or
in
repnz
fcoml
insb
lea
or
call
pushf
sub
mov
push
fdivrl
sbb
push
add
mov
xor
xchg
xor
call
cmp
pop
mov
xchg
push
fisubrs
addr16
cli
arpl
ror
sub
dec
int
and
or
into
rcrb
jne
aad
aad
jae
cmp
add
bound
bound
mov
js
inc
cwtl
adc
dec
mov
cmc
pavgb
lret
cmp
incl
pop
out
rcrl
movsl
pop
adc
stc
mov
out
mov
pushl
mov
frstor
push
mov
js
pusha
adc
or
loop
decl
xlat
test
jbe
ja
loop
inc
in
add
add
scas
std
dec
xor
mov
loop
push
push
xchg
aad
loopne
jle
repz
inc
sub
test
fisttpl
xor
inc
fidivrs
loop
rolb
push
ret
ds
xchg
dec
test
sub
push
dec
sbb
addr16
incl
mov
sbb
iret
dec
jle
iret
cmpsb
xchg
call
or
aas
in
inc
jg
lcall
jbe
inc
cmpsb
clc
sub
jmp
xchg
orb
std
xchg
cmpsl
test
aaa
in
aam
decl
or
and
cmp
aaa
lcall
pop
and
enter
lahf
loopne
xor
fildll
cmpsl
add
pop
out
inc
scas
sub
into
int3
movsl
out
je
xorl
sub
btc
lock
add
enter
std
decl
in
cmp
outsl
mov
lret
pop
xor
dec
sub
inc
mov
sahf
jge
ret
add
mov
popa
push
shlb
fstpl
ret
outsl
in
mov
pop
inc
dec
cmpsl
aad
push
int
subb
popf
enter
mov
pop
push
lcall
notb
push
clc
xchg
xlat
scas
push
bnd
push
movsb
sub
scas
pushf
jb
jl
jl
stos
add
push
mov
decl
inc
clc
add
pusha
sbb
test
inc
fs
cmpb
lcall
adc
iret
dec
mov
daa
sahf
add
sbb
andl
mov
lock
int3
pop
in
cmp
and
sub
nop
addr16
adc
inc
pushf
xor
sub
outsb
push
mov
sti
cmp
sahf
adc
cmp
fcomip
jg
add
cmpsb
imul
mov
shlb
out
or
mov
inc
in
xchg
adc
and
sahf
out
mov
lret
jge
pop
adc
mov
call
adc
mov
in
mov
sti
xchg
jle
inc
outsl
in
idiv
jle
push
cld
lret
outsb
dec
std
jb
sub
lret
cmp
lds
cmp
sbb
jl
mov
into
inc
pop
lret
adc
sbb
jb
lcall
pop
add
xchg
or
sbb
sbb
jl
adc
call
sub
or
cmp
orl
loopne
mov
das
clc
testb
push
scas
push
inc
xchg
mov
js
decl
repnz
es
fadds
cld
outsl
clc
shll
aad
loop
je
stc
ljmp
ljmp
sub
mov
ret
mov
add
adc
cmpsl
and
scas
sbbb
js
ljmp
imul
pop
and
lods
sbb
popf
cmp
jecxz
and
call
jle
add
mov
pop
xlat
and
xchg
sub
sti
inc
sbb
adc
adc
addb
mov
adcl
adc
add
mov
add
push
xchg
pop
imul
lods
push
pushl
xorb
pop
dec
mov
mov
jbe
ds
xchg
dec
aaa
test
pop
and
adc
mov
mov
jecxz
xor
sbb
pop
mov
icebp
pushf
incl
inc
inc
loope
mov
leave
test
movsl
lods
xor
mov
pop
adc
dec
sbb
xchg
mov
push
pop
imul
sub
mov
pop
mov
scas
orl
decl
movsb
mov
movsb
imul
mov
adc
pop
add
mov
xchg
dec
std
fistps
pop
push
xchg
or
and
popf
insl
inc
ljmp
xchg
inc
mov
call
out
dec
mov
mov
or
lock
lcall
and
push
iret
xor
addb
sub
and
adc
je
iret
int3
dec
into
push
jecxz
push
jmp
xor
out
dec
and
push
cmp
bound
std
xchg
inc
loopne
out
xchg
mov
push
lcall
fnstsw
clc
fstps
inc
insl
mov
adc
mov
repnz
lods
mov
fs
call
sbb
push
rorb
mov
or
cmc
shrb
jmp
pushl
jg
fisubl
cmp
ficoms
inc
pavgw
repnz
inc
push
cmp
jmp
lea
push
pop
aad
lret
pop
push
pop
or
and
repnz
xlat
sub
cs
gs
jmp
mov
cmp
mov
sub
inc
inc
pop
add
mov
ljmp
sub
jl
xchg
stc
adc
xchg
iret
xchg
push
sub
jmp
sub
ret
movsl
pop
inc
and
je
filds
shll
dec
mov
addr16
lods
or
call
outsb
push
xchg
or
inc
xchg
add
or
lcall
xchg
clc
insl
ljmp
cld
fldt
lret
in
je
rclb
sub
mov
ret
out
loope
cwtl
mov
add
les
xor
sbb
test
negl
lcall
aaa
aas
mov
bound
inc
repz
int3
inc
test
hlt
leave
adc
jo
enter
ljmp
fsub
and
ljmp
jecxz
out
fiaddl
jnp
sbb
adc
push
bound
add
add
add
pop
push
mov
test
mov
sub
and
addb
incl
inc
adc
or
dec
ja
push
jp
je
pop
test
fs
jnp
push
push
inc
xchg
jle
dec
jp
sub
stc
mov
mov
repz
sti
dec
adc
dec
push
mov
in
xchg
xchg
gs
jp
and
jbe
mov
test
xor
ret
gs
inc
jp
inc
pop
sbb
inc
cld
sbb
mov
mov
and
pop
je
mov
aas
imul
dec
adc
adc
push
sbb
pop
pop
sbb
ds
push
pushl
inc
add
jge
pop
push
pop
or
imul
movsb
aas
jne
sub
push
jge
dec
pop
sub
dec
or
sbb
adc
shlb
xor
arpl
pop
lock
lods
scas
std
fdiv
popf
push
or
sbb
or
jbe
idiv
adc
add
out
xor
test
cltd
mov
inc
jb
xor
outsl
call
je
adc
sbb
jbe
xor
sbb
xor
es
je
into
sbb
sbb
data16
sbb
sbb
or
ficoml
fs
in
icebp
enter
add
push
push
adc
and
or
push
int
jns
pop
add
dec
or
adc
jnp
jp
ljmp
imul
or
adc
or
push
sub
std
aas
ss
icebp
cld
jae
data16
cmc
adc
adc
adc
or
pop
call
cld
lcall
adc
add
sub
test
loopne
jecxz
mov
scas
clc
sbb
orb
or
mov
je
mov
or
neg
incb
mov
or
lods
or
lcall
mov
mov
lcall
inc
mov
lcall
or
testb
mov
adc
adc
imul
xchg
movb
sbb
popf
outsl
sti
scas
clc
sbb
sbb
xor
mov
mov
hlt
cwtl
loopne
cmp
push
xor
mov
mov
add
xchg
xchg
js
cld
sbb
iret
std
jb
repz
ja
inc
je
fmul
cmp
sbb
and
mov
lahf
jg
cld
adc
jbe
fst
je
adc
in
aaa
or
loop
pop
adc
mov
pop
jo
outsl
out
insl
jbe
mov
mull
ret
das
push
push
jl
je
jns
daa
mov
aas
clc
inc
add
adc
mov
ja
push
das
clc
jg
pushf
jns
sub
andl
ja
out
cwtl
bnd
pop
cmpb
ljmp
sub
push
mov
push
cltd
stc
jbe
pop
inc
clc
mov
push
inc
adcl
call
addl
mov
adcb
add
mov
nop
mov
cmpsl
mov
jle
add
jp
mov
movsb
mov
clc
movsb
std
popa
lods
xchg
inc
pop
or
scas
jbe
jle
dec
add
xchg
dec
mov
push
push
pop
mov
fistps
lahf
push
stos
sti
pop
lock
addr16
mov
std
pop
pop
mov
call
call
jl
repnz
mov
dec
sub
push
std
sub
mov
mov
divb
repnz
xchg
std
das
jno
mov
cld
jg
push
mov
imul
cli
mov
mov
loopne
pop
xchg
pop
shl
ja
imul
and
lock
ja
ljmp
cmp
pop
mulps
pushf
xorl
cmp
loope
arpl
lods
std
ljmp
mov
push
pop
and
pusha
stos
adc
repnz
out
inc
push
js
sti
les
jne
outsb
add
lea
mov
cmp
jge
fstpt
pop
call
flds
mov
incl
out
mov
cmp
cmp
test
stc
cmp
pushl
ret
inc
sub
mov
xchg
imul
faddl
mov
je
std
jmp
lea
jg
add
jbe
mov
js
lahf
xor
adc
outsl
and
xlat
mov
das
xor
out
and
cmp
push
repnz
inc
xor
notl
add
cmp
xchg
insb
mov
sub
jg
adc
sub
jge
adc
sub
jg
pushl
adc
xor
test
push
push
fiadds
insl
dec
das
or
popa
lcall
xchg
lods
incl
ja
sbbb
out
jg
aaa
adc
cs
mov
cmp
repnz
icebp
fmull
lcall
test
lock
jne
sub
xchg
push
std
leave
fwait
pop
icebp
push
sub
push
xchg
mov
push
hlt
jle
in
testb
divb
xchg
aaa
and
mov
js
xor
jge
or
cld
inc
jge
mov
cltd
sbb
inc
jne
jbe
je
push
in
sub
insb
shrb
stc
sub
jo
xchg
lock
std
push
fcomi
push
cmc
icebp
mov
mov
jae
ja
adc
cmpsl
adc
sbb
call
cmp
xor
fs
or
ljmp
xor
pusha
imull
insb
mov
outsb
cmc
adc
adc
mov
mov
lcall
mov
push
and
add
das
in
cmp
mov
fdivrs
outsb
movsl
mov
and
mov
rclb
sub
xor
jle
sbbb
std
push
mov
xchg
cmp
sub
push
je
mov
les
lret
xor
pushl
test
mov
push
je
cmp
gs
mov
and
incl
pusha
mov
das
sbb
push
and
jge
pop
loop
fildll
bound
push
imul
push
inc
push
jmp
outsl
push
inc
jo
insb
push
dec
arpl
push
dec
inc
bound
push
dec
arpl
dec
dec
jo
push
mov
push
jbe
push
fs
xor
push
ss
jo
inc
arpl
js
out
mov
imul
push
imul
push
gs
cmp
ja
jp
pushl
pop
dec
push
dec
push
jne
addr16
push
jo
inc
jbe
dec
adc
insb
pop
outsb
jg
xor
pop
dec
push
jo
push
xor
cmp
dec
xor
push
insb
jg
cld
insl
pop
pushw
nop
or
dec
dec
pop
inc
jae
xor
ss
dec
dec
dec
mov
push
dec
inc
gs
mov
push
pop
dec
js
jb
inc
cmp
pop
dec
push
cld
jg
fs
push
xor
jb
xor
xor
push
xorb
lock
in
or
ss
sbb
outsl
inc
outsl
push
jbe
push
pop
insb
dec
int
fbstp
push
pop
push
jne
inc
push
fs
ss
dec
push
pop
sub
jp
xor
inc
imul
pop
lock
dec
aaa
je
push
push
xor
pushl
push
jp
js
push
jno
push
outsb
ss
dec
xor
push
jp
xor
push
pusha
mov
aaa
jno
push
bound
jp
xor
incl
inc
xor
outsb
imul
push
gs
xor
push
inc
push
dec
xor
sbb
lock
ja
inc
je
insb
jb
jae
or
inc
jb
inc
and
addb
dec
jo
imul
fcomip
filds
ja
aaa
inc
dec
jae
jo
sub
inc
outsb
jae
je
jne
pusha
les
stos
outsb
cmpsl
inc
adc
mov
lods
orb
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
daa
push
leave
inc
adc
ror
jnp
ror
xchg
push
enter
or
sbb
push
sub
dec
pop
fstpl
adcb
out
push
mov
enter
add
out
lcall
jns
out
bound
test
lods
mov
repz
out
add
push
and
ds
repz
push
pop
push
xrelease
repz
rcr
out
clc
add
push
sbb
xor
sahf
out
push
pop
outsb
jp
out
sahf
out
cmpsb
mov
stc
sahf
out
xchg
les
cs
jns
out
pop
data16
sahf
out
sahf
nop
movsb
scas
mov
out
loop
clc
add
sbb
cmp
repz
cmp
repz
pop
jo
xchg
cmp
into
jns
iret
repz
or
sbb
out
sahf
out
push
pop
outsb
sbbb
lods
mov
cmp
out
ljmp
cmp
repz
outsb
iret
repz
js
xchg
mov
repz
loop
cli
push
enter
imul
out
sahf
out
insb
orb
stos
mov
lret
cmp
out
ljmp
cmp
repz
ds
push
iret
repz
pop
push
orb
test
rcr
out
jns
cmpsl
stc
add
push
and
dec
out
sahf
out
jb
lcall
mov
cmp
repz
adc
and
inc
repz
repz
pusha
push
or
cmp
mov
lcall
or
adc
sahf
out
and
dec
push
out
sahf
out
je
xchg
mov
stos
mov
aam
ljmp
int
xor
cmp
repz
push
pop
push
iret
orb
imul
notb
into
and
out
sahf
ds
push
pop
outsb
js
sahf
out
mov
fucom
hlt
push
iret
jle
and
jns
out
pop
push
xchg
stos
call
int
rcrb
cmp
xchg
repz
mov
cmp
repz
rcr
roll
sbb
iret
repz
dec
push
fs
cmp
xrelease
jns
iret
ljmp
out
sahf
inc
dec
push
sahf
out
test
aam
add
repz
rcll
sub
dec
iret
repz
insb
xchg
iret
repz
ljmp
repz
xor
bound
repz
mov
lcall
cs
jns
out
pop
jbe
xchg
sahf
out
sahf
lods
mov
out
fidivrs
fiadds
dec
pop
push
jb
sahf
mov
aam
dec
repz
add
or
repz
repz
push
insb
jle
iret
repz
mov
loopne
add
out
lcall
jns
out
js
movsb
mov
out
fdiv
adc
sbb
repz
xor
pop
bound
iret
repz
lcall
stc
add
adc
cmp
jns
out
jbe
mov
sahf
lock
pop
fildl
inc
out
sahf
out
push
pop
jo
sahf
out
sahf
xchg
cmpsb
mov
fdiv
sahf
out
jbe
push
adc
cmp
out
dec
pop
outsb
mov
mov
call
repz
push
cmp
data16
iret
repz
pushf
cmpsb
ror
lcall
sbb
mov
adc
test
jne
inc
add
aaa
sbbb
ljmp
jnp
loop
ss
pop
repnz
or
jno
or
push
cmp
sbbl
adcb
jg
push
mov
lds
ja
mov
outsb
jns
std
mov
es
cmp
jmp
inc
sbb
add
mov
jbe
andb
cmc
lret
sub
call
mov
push
add
jae
gs
clc
inc
xchg
not
int3
mov
lcall
cld
lcall
imul
pushf
roll
pop
and
test
pop
hlt
mov
incl
loope
dec
repnz
pushf
jbe
addr16
aam
loop
bnd
repnz
enter
push
ljmp
stc
push
test
pop
dec
mov
cltd
int3
jge
mov
pop
ds
lret
mov
jle
insl
inc
pushl
repnz
xor
ffreep
pushf
jcxz
jno
and
lret
in
mov
aam
fcomps
jb
lcall
inc
fsubs
shrl
in
mov
add
mov
push
out
daa
push
bound
jno
pushl
lock
xor
inc
adc
ret
adc
int
cs
in
adc
sbb
ret
jmp
ljmp
mov
cmpsl
cld
lret
aad
pop
jecxz
test
loope
stc
and
jnp
in
pop
pushf
fs
sbb
into
dec
or
into
jl
loopne
adc
fistps
mov
jae
or
leave
mov
jp
xchg
xchg
test
call
sarb
call
push
popa
stos
fs
out
and
pop
shl
add
xor
decl
in
in
sub
push
adc
out
test
loop
out
psrad
mov
fsubrl
mov
arpl
sbb
pusha
and
sbb
flds
repz
icebp
dec
push
lods
aaa
icebp
cwtl
int3
mov
fcomi
cmp
push
and
cmpb
andb
pop
mov
call
neg
movsb
aaa
xor
xor
je
call
add
inc
or
push
fidivrl
pushl
fidivrl
sbb
jae
adc
jne
push
mov
pop
xlat
adc
fldcw
call
xor
xchg
mov
xchg
ffree
xchg
mov
shl
clc
push
lcall
adc
icebp
pop
and
jns
into
repz
dec
mov
loope
ljmp
jmp
jno
scas
idiv
xor
jo
fmuls
repnz
adcl
xchg
jl
icebp
cmp
ljmp
scas
xor
adc
xchg
mov
add
pop
test
ljmp
psubd
cmp
in
add
mov
push
daa
loop
jl
ror
xchg
out
mov
or
out
arpl
int
push
xchg
xor
decl
ljmp
lds
cmp
dec
in
and
or
adc
lret
jo
fldlg2
jo
fisttps
or
ljmp
pop
in
push
bound
jmp
ret
test
sub
mov
lcall
out
out
mov
and
out
dec
pop
data16
ret
and
cmpb
inc
pop
data16
jb
mov
jecxz
sahf
xor
rolb
imul
pop
sbb
jecxz
mov
out
xchg
push
jmp
and
faddl
or
outsl
decl
mov
test
hlt
mov
addb
and
inc
fidivrl
or
decl
push
push
push
nop
orl
lret
mov
mov
fwait
sbb
aam
ds
add
jmp
mov
pop
adc
or
daa
std
jnp
ds
clc
or
mov
aam
sar
es
ljmp
stos
jo
inc
aam
fcoml
jae
mov
ror
fs
nop
pushf
aam
out
sti
call
das
pop
sti
xchg
jp
pop
ret
add
add
mov
pusha
pop
es
dec
sti
fs
sub
movsl
mov
pop
hlt
mov
xor
pop
enter
ficoml
push
xchg
mov
sub
leave
inc
cmp
or
mov
xor
popa
cli
inc
add
lcall
test
xchg
or
das
orl
cmp
xor
pop
xchg
mov
pop
push
pop
mov
call
std
roll
out
jge
adc
fcoml
cmp
and
dec
jecxz
call
shll
ja
outsb
fcmovbe
inc
mov
in
bound
cmp
sarl
xor
inc
shr
rorb
sar
cmpsl
aas
loope
mov
jge
ljmp
nop
cmp
rcll
mov
add
subb
dec
and
adc
movsl
adc
ljmp
sti
pushl
dec
lret
mov
inc
jb
movb
lret
jecxz
mov
pop
cld
pushl
mov
rclb
js
and
push
xchg
sbb
push
mov
pop
lock
adc
sti
mov
mov
out
mov
hlt
clc
outsl
inc
aad
mov
stc
sub
divl
fwait
xchg
std
ret
xor
clc
or
shrl
decl
mov
and
in
dec
das
dec
das
adc
js
mov
pop
jle
aas
ret
push
scas
jmp
jo
ljmp
es
je
or
hlt
mov
ljmp
cmp
or
imul
fistpll
stc
insb
add
cltd
or
pop
jno
push
fstpt
shll
pop
inc
call
pop
negb
adc
pushl
xchg
fcomip
rorb
pop
das
enter
inc
sbb
inc
pop
jg
jl
das
fs
js
pop
std
test
cwtl
adc
mov
or
jp
repnz
sub
mov
lcall
xchg
mov
inc
or
inc
and
xor
incl
pop
hlt
int
inc
add
push
adc
es
aaa
mov
jg
mov
and
cmp
dec
stos
xor
scas
std
imul
lods
lcall
sarb
fiadds
jnp
fucom
or
push
lea
sbb
lret
iret
ljmp
mov
int3
sub
fcomp
and
xchg
mov
decl
ljmp
add
mov
sbb
call
sti
dec
aas
rcrl
scas
in
inc
sbb
movsl
test
ljmp
dec
into
fdivl
std
inc
enter
roll
mov
je
dec
or
outsb
notb
jecxz
les
dec
mov
jb
adc
incl
mov
sbb
sbb
fs
loop
cmpsl
inc
pop
popa
adc
decl
xor
xchg
lock
mov
repnz
fldl
pop
insl
add
clc
cmp
dec
outsl
adc
leave
out
das
push
loope
cmp
ffree
imul
sar
incl
adc
sub
mov
inc
sbb
xchg
pop
imulb
xchg
jb
add
ljmp
pop
icebp
test
mov
or
mov
xchg
push
jb
mull
push
scas
popf
mov
sbb
ljmp
mov
int3
sub
xchg
and
mov
test
imul
movb
or
out
mov
cmp
dec
lret
mov
imul
fisttpl
stos
cltd
adc
jle
pop
out
cli
call
xor
and
jns
aam
lret
jle
addr16
mov
rolb
std
insl
icebp
xlat
imul
icebp
add
clc
rcr
ret
sbb
fbld
loopne
sbb
sbb
adc
cmp
in
add
aaa
or
dec
or
mov
sbb
cli
or
xor
hlt
loop
mov
jb
loope
popf
out
repz
repz
mov
js
loopne
aam
outsl
dec
fisubl
fcos
jmp
mov
mov
rcll
loopne
adc
test
leave
push
sub
call
add
mov
add
adc
arpl
mov
mov
cli
pop
imul
andb
ss
add
xchg
shlb
sar
std
movsb
mov
outsb
pusha
pop
xor
imul
mov
jg
out
cmpsb
xchg
pop
outsl
cltd
outsb
cmp
cmp
dec
jg
js
xchg
and
cmpsb
sub
lds
sar
dec
das
sub
int
and
push
shll
xchg
in
mov
sbb
imul
dec
mov
shl
push
loopne
push
inc
rolb
sarl
ljmp
cmpsl
cld
incl
push
jnp
lea
cmp
push
cmpb
adc
push
incl
int3
pop
pop
fs
jb
mov
pop
mov
mov
xchg
cwtl
enter
or
fs
lret
arpl
leave
push
fidivrs
jbe
arpl
rorb
mov
rclb
jne
ret
lahf
rcrl
pop
cmp
negl
in
insl
fdivrl
imul
sbb
fiaddl
sbb
xchg
ljmp
xchg
popa
das
fldcw
adc
test
pop
stos
das
inc
lcall
scas
aaa
xchg
dec
mov
xlat
pushl
mov
in
movsb
cmpsl
dec
add
insb
pop
dec
adc
or
aaa
lret
lods
insb
pushl
aad
inc
xchg
sub
in
loopne
inc
xchg
adc
cmp
mov
dec
cmp
adc
mov
popa
sbb
pop
lcall
xchg
das
jno
faddp
gs
cmpsl
ljmp
mov
adc
sbb
repnz
sbb
cli
add
loope
mov
pushl
repnz
dec
mov
push
rcll
adc
es
stos
jg
or
push
idiv
call
push
lret
inc
xchg
pop
pop
es
lock
cmp
xchg
add
xchg
adc
call
xor
or
pusha
cli
loop
cmp
ss
negl
jmp
xor
fisubs
jno
mov
testl
pop
mov
jae
call
les
fmuls
xor
dec
aad
jg
ret
pop
dec
xor
cmpsl
cltd
dec
push
clc
call
scas
cltd
inc
jno
test
mov
nop
sbbl
ljmp
push
ret
push
or
aas
out
push
lods
mov
int
lret
push
ljmp
mov
add
sub
hlt
inc
je
xchg
test
fbstp
icebp
pushf
stos
xor
sub
push
cmp
lods
xor
test
push
test
mov
out
test
test
cmp
mov
gs
pop
inc
mov
dec
cmpsl
imul
or
dec
insb
out
fidivrs
jo
cwtl
pop
in
cmp
xor
call
pop
inc
pop
xchg
rolb
bound
test
nop
sarb
ljmp
incl
aas
push
xchg
pop
dec
cli
fstpl
inc
rolb
jmp
pop
jmp
push
bnd
xchg
fsts
js
lea
xchg
mov
pushf
pushf
rcrl
adc
pop
mov
push
in
std
hlt
ljmp
shrl
stc
filds
pop
and
xchg
inc
xchg
xor
fcomip
incl
xchg
sbb
mov
cmp
jl
push
pop
mov
stos
js
pushl
int
inc
add
or
jbe
add
mov
sub
incl
mov
inc
stos
mov
std
push
sub
rolb
cmp
push
adc
xchg
sti
lcall
xchg
daa
mov
jge
orl
lcall
pop
arpl
call
adc
sahf
lcall
adc
jne
sti
mov
adc
jmp
sbb
pop
idivb
ja
mov
mov
adc
cwtl
xchg
loope
call
sbb
xor
or
jns
out
scas
xchg
or
and
push
daa
rclb
add
inc
xor
xchg
sbb
cmpsl
sub
nop
fidivs
mov
call
cs
leave
mov
gs
jg
and
in
jecxz
arpl
jecxz
ja
ljmp
rorb
lods
in
or
mov
adc
popf
xchg
or
fwait
mov
fcoml
sub
fisttpl
lods
mov
or
ljmp
dec
test
adc
xlat
lcall
fbld
clc
incl
faddl
ss
sbb
or
adc
fisttpll
addb
mov
or
jmp
dec
subb
mov
lds
inc
test
mov
int
xorb
loop
lahf
and
xchg
and
cli
mov
pop
jbe
push
cmpsl
add
nop
push
cmpsl
out
call
sbb
lods
xchg
out
mov
add
jbe
mov
popa
sub
pop
icebp
push
out
jns
xorl
pop
adcl
int3
ljmp
hlt
fldt
andb
andb
inc
lds
ud1
lcall
pop
out
repz
fidivrs
out
adcl
sub
and
loope
sahf
mov
pushf
pop
lcall
jl
inc
test
pop
cmp
inc
daa
rcll
xchg
xchg
lods
pop
xchg
sbb
jmp
sbb
ret
jg
xor
stos
mov
xchg
cltd
nop
test
dec
decl
dec
fdivs
xor
imul
test
xchg
cmpb
pushf
addb
push
in
push
xchg
xchg
mov
jg
inc
out
sbb
fcoms
dec
inc
jge
mov
mov
lret
fcomip
lcall
mov
cmp
fcmovbe
pusha
loopne
out
repnz
xor
clc
push
xchg
decl
pushl
out
sub
and
scas
pop
pop
mov
sbb
fmuls
or
pop
icebp
call
imul
incb
lret
mov
bound
jp
call
cmp
jae
outsb
push
jg
mov
mov
cmpsl
mov
add
xchg
adc
call
and
jbe
sbb
fists
cli
fildll
adc
arpl
and
mov
cmc
lock
pushl
push
js
lock
push
das
orb
data16
mov
mov
push
or
push
sbb
mov
or
jb
fstpl
and
ret
fcoms
xor
lock
inc
cld
out
cmpsb
or
xorb
dec
jae
std
mov
incl
outsl
xlat
pop
pop
int
sub
daa
mov
jg
lahf
fwait
pop
mov
out
clc
mov
xlat
in
sub
je
shlb
roll
ljmp
call
push
pop
jge
jb
sub
mov
push
loope
adc
push
push
inc
xor
jmp
jp
mov
test
xchg
sub
ret
jl
stos
fidivrl
inc
jmp
dec
dec
pop
decl
mov
mov
push
mov
or
inc
mov
mov
aas
jnp
cmp
stc
sbb
nop
push
std
mov
mov
loop
adc
mov
jo
ds
sarl
repz
cld
imul
jp
outsb
xlat
inc
inc
aam
dec
lods
arpl
add
push
repnz
dec
xchg
xchg
call
push
sub
aas
cmp
push
lock
popa
rcrb
push
jp
inc
add
mov
jmp
call
es
cmp
jp
push
lock
inc
mov
pushl
cld
or
cmp
push
push
mov
addr16
aam
inc
dec
testl
pushl
rcr
xlat
push
jp
out
mov
fwait
dec
loop
in
sub
test
ds
jno
or
mov
dec
xor
mov
lock
test
jl
dec
outsl
sbb
dec
or
push
sbb
jno
cmc
cmp
mov
push
in
mov
rol
call
out
mov
push
cwtl
in
cli
pop
les
xchg
lret
jb
js
int
xchg
adc
je
and
push
filds
fstpt
test
in
fs
inc
cld
aaa
fnsave
daa
sub
rorb
xor
in
repz
push
mov
sub
aaa
ljmp
xlat
inc
or
call
jmp
shlb
pop
in
aaa
pop
sti
popa
loop
lcall
pop
or
mov
in
pop
fisubl
mov
call
test
xor
mov
rcrl
push
fwait
imul
inc
push
jmp
jo
loop
sub
cmp
shl
in
arpl
lods
pusha
sub
subl
in
aas
xor
arpl
lods
or
gs
push
fimuls
cmp
lods
xchg
or
and
push
jae
or
inc
pusha
jecxz
jecxz
sbb
pop
fmul
jb
pusha
stos
cmp
gs
ret
rcrb
lcall
jmp
fnsave
adc
jecxz
cmpsb
pop
mov
lds
pop
xlat
xchg
incl
cld
inc
loopne
shll
mov
repnz
fists
sub
sbb
pop
inc
loop
push
sbb
sbb
and
push
push
jmp
rcrl
sbbl
mov
adc
popa
cmp
add
and
popa
cmpsl
dec
sub
das
or
push
in
bound
jo
cmp
lock
pop
mov
fldt
leave
faddl
mov
push
scas
movsb
imul
jg
js
pushf
pop
rol
movsb
sub
cmp
and
xchg
cmp
bound
decb
movb
sub
xlat
aaa
push
pop
xor
push
pop
loopne
decl
push
sbb
lods
pop
mov
andl
mov
jno
aad
dec
sbb
cs
inc
iret
dec
ljmp
mov
shlb
dec
jnp
cmp
adc
jl
sub
xor
jae
sbb
pop
pusha
xchg
lods
adc
dec
inc
and
mov
add
sub
dec
test
pusha
mov
xchg
pop
sarb
sti
jg
leave
mov
dec
es
adc
xlat
xor
lahf
test
dec
and
xchg
aad
jg
ljmp
pusha
mov
movsb
pop
cltd
mov
inc
push
add
push
dec
push
addl
sub
lds
or
mov
xor
sub
addl
jle
out
xchg
orb
and
add
gs
decl
xor
movsb
sub
mov
lahf
jl
jmp
fidivl
out
cmovp
test
lock
dec
cmpsl
jl
push
push
outsb
xchg
stos
jecxz
adc
outsl
dec
sahf
adc
das
cli
sbb
jbe
pop
loopne
jns
rol
call
scas
jg
dec
dec
in
inc
outsb
aad
das
add
push
push
jns
adc
cmc
push
push
ret
test
pushl
cld
pop
popf
loopne
inc
pminsw
mov
pop
pop
popf
pop
call
ret
mov
lock
lcall
jbe
add
mov
cmc
movsl
aam
sahf
sub
mov
incl
fucom
inc
jnp
cltd
sti
and
add
int3
sub
jb
mov
ljmp
ret
push
stc
mov
dec
js
stos
ds
cmp
rcl
jle
sbb
inc
add
ljmp
push
outsl
xor
jl
insl
inc
ds
movsl
mov
mov
dec
jg
call
adc
push
int
test
lods
repnz
imul
aad
fldt
xor
xor
adc
clc
in
aad
inc
dec
pop
or
mov
adc
jnp
decl
pop
and
jp
movsl
lret
pop
clc
mov
inc
jns
sub
jp
test
cmp
test
incl
sbb
mov
sub
lret
pop
add
push
pusha
test
fwait
ret
jmp
lcall
jmp
popf
fucomi
insl
scas
ret
nop
mulb
add
in
inc
mov
mov
jp
ljmp
imul
inc
mov
outsb
stc
inc
out
xchg
add
incl
push
outsl
mov
imul
push
cltd
imul
or
test
fwait
lock
in
int3
push
mov
inc
loope
push
adc
roll
jle
adc
and
mov
mov
adc
mov
xchg
dec
ss
stos
mov
ficomps
add
fcoms
call
push
push
loop
mov
popa
sub
in
sti
insb
stos
or
mov
add
mov
incl
mov
push
and
incl
sbbb
add
mov
imul
sub
pushl
pop
sub
push
cmp
xlat
enter
scas
dec
stc
int
aas
aaa
ss
decl
jno
dec
cltd
push
ret
idivl
push
daa
xchg
shl
pop
test
movsl
jbe
sbb
xor
push
push
lahf
fisubl
pop
pop
adc
mov
andb
pop
adc
xchg
ljmp
int
scas
push
stc
cmp
ror
and
jp
fsubs
sti
adc
lea
xor
call
pushl
and
adc
sbb
movsb
iret
mov
jl
push
in
std
inc
jb
lcall
jmp
subb
jae
lret
mov
mov
into
orb
push
in
mov
leave
jle
fnstcw
and
sar
ds
notb
in
pop
movb
xchg
pop
lock
pop
cmpsl
jnp
sahf
ss
mov
sbb
xor
mov
jmp
cli
fiaddl
in
insl
lret
stos
cmp
xchg
and
xchg
mov
stos
incl
decl
add
in
push
jb
ret
sti
lcall
push
jg
dec
inc
addr16
lods
in
or
adc
imul
shrl
jmp
call
imul
and
cltd
xor
push
sbb
push
jmp
idiv
decl
ss
cmc
mov
mov
in
cmpsb
push
scas
jl
lret
decl
insl
cmp
fldl
insl
push
mov
in
lret
mov
das
std
jmp
xor
push
icebp
jmp
stos
cmp
clc
jns
fimuls
pop
and
sbb
inc
cmp
popa
clc
cld
and
negb
std
add
call
push
cmp
cmp
xor
dec
call
leave
es
je
jg
mov
xchg
dec
add
cmp
mov
sbb
sub
sub
xchg
and
mov
shrl
cmp
lahf
sub
mov
mov
cmc
sbb
repnz
or
sub
testl
ljmp
fs
movb
pushf
pushf
inc
loopne
adc
data16
incl
jp
inc
icebp
cld
mov
and
cmc
sub
cli
pop
mov
sbb
loop
jle
lock
lock
lcall
int3
sbb
xorb
fwait
pop
test
sbb
jmp
jp
jbe
xchg
int3
dec
pop
js
xor
adc
push
push
xor
push
mov
pop
sbb
push
cmp
call
jl
sbb
sub
out
pusha
xchg
xchg
mov
fwait
dec
arpl
addl
or
fnstenv
mov
imul
sahf
mov
fisttps
popa
in
push
xor
in
dec
xchg
les
ret
in
out
mov
lcall
fsub
in
mov
lret
inc
mov
jg
hlt
scas
arpl
fisubrl
jmp
jecxz
ljmp
and
jo
test
adc
pop
mov
push
ret
pop
sbb
insb
mov
inc
sub
adc
and
and
enter
insl
and
cld
out
sbb
test
scas
out
pop
pop
addr16
push
test
mov
push
insb
xor
jge
bnd
decl
loop
mov
bound
pop
call
lods
loop
inc
test
sub
jmp
decl
cwtl
scas
xchg
cmpsb
sbb
in
cmpsl
push
imul
inc
nop
and
push
ljmp
nop
add
ds
test
stc
fwait
mov
sbb
aaa
pop
mov
xchg
rcll
into
adc
rcr
cli
add
daa
ljmp
sub
sub
insl
cmp
fnsave
je
or
outsl
leave
jo
lcall
inc
mov
sbb
add
adc
mov
sub
or
fistpll
rcr
jno
mov
in
clc
lea
ret
xlat
or
cmp
jnp
aad
pop
and
cmp
push
dec
dec
pop
push
adc
sti
gs
sahf
shrl
movb
in
pop
loopne
hlt
add
push
push
inc
jl
je
cld
inc
xor
frstor
push
flds
decl
dec
pop
pop
xor
sbb
es
cli
stos
xchg
faddl
das
jg
lcall
ljmp
pop
xchg
dec
or
or
pop
and
in
out
xchg
mov
loope
stc
in
or
cmp
pop
mov
ss
add
push
idiv
aaa
std
dec
jg
jns
sbb
cmp
and
call
inc
pop
cmp
pushl
pop
cmp
clc
dec
or
push
shrb
sbb
es
add
push
fisubrs
dec
dec
sub
cmp
xchg
lock
or
and
clc
mov
dec
rcr
in
sub
bound
data16
mov
mov
ljmp
mov
pushl
testl
sbb
push
xor
mov
mov
out
jle
sub
sub
or
mov
loopne
adc
pop
repnz
outsl
inc
rclb
in
mov
imul
repnz
inc
pushf
add
sbb
sub
pop
lahf
enter
outsl
jp
aad
push
push
adc
lcall
sub
mov
call
adc
aad
cmp
pop
inc
add
push
xchg
mov
movhps
sbb
repz
ds
iret
mov
or
sar
decl
inc
arpl
into
outsl
lcall
dec
jne
adc
movsb
mov
push
lcall
mov
lcall
sti
cmpsl
popf
mov
mov
cmp
xor
mov
outsb
fs
xor
pushl
sbb
mov
and
adc
fistpll
cmpsb
cli
rcrl
pop
mov
cmp
cmpsl
aas
cltd
dec
stos
outsb
jge
push
pop
cli
sti
lahf
mov
cltd
mov
adc
push
push
enter
jmp
cld
rcrl
xchg
gs
fxch
xchg
aam
mov
mov
pop
icebp
hlt
xchg
mov
pop
test
jno
sub
les
cmpb
dec
lret
xchg
rclb
jmp
clc
loop
mov
std
scas
push
xor
test
jmp
push
mov
test
and
orb
std
fs
ljmp
push
adc
jb
iret
cs
sbb
xchg
push
add
mov
dec
jb
mov
mov
scas
ja
jl
xchg
mov
lods
and
adc
test
push
cmp
clc
push
ljmp
roll
add
not
pusha
insb
mov
daa
gs
mov
imul
adc
push
or
lods
xlat
sbb
pop
call
xchg
in
lods
push
and
icebp
push
mov
es
stos
call
pop
or
xchg
pushl
aam
xchg
pop
pop
push
mov
jg
scas
ljmp
call
sub
pop
or
push
xchg
out
roll
pop
ss
pushl
add
add
sub
xchg
gs
repz
adc
jbe
jg
pop
pop
cli
lcall
add
nopl
cli
das
sub
movsl
lcall
push
out
into
add
jno
pop
or
scas
jne
jl
mov
jae
scas
sub
adc
std
mov
push
push
pop
mov
cs
jnp
or
xor
pushl
sbb
xor
fmuls
cmpsl
sbb
fistpll
out
ja
aaa
call
sarb
imul
lods
add
cmpsb
in
fistl
push
mov
mov
jg
or
or
cld
sbb
xor
add
push
test
fisttps
inc
sbb
mov
nop
mov
call
fs
lret
cli
aam
movsl
push
mov
jmp
decl
sbb
sub
aas
add
sbb
cmpsl
ret
jne
fstpt
lcall
ljmp
dec
jmp
jae
push
and
test
scas
cmp
decl
ficoms
push
pop
dec
inc
jbe
push
add
mov
xchg
xchg
xlat
mov
mov
jns
sbb
sub
sbb
jge
adc
data16
js
inc
icebp
out
cli
dec
mov
pop
loope
andl
or
or
push
cmp
das
adc
std
icebp
add
push
loopne
insb
lcall
adc
sub
cmp
loopne
stos
in
pop
int
adc
cmp
fimull
dec
test
cld
pop
std
aas
jle
popf
mov
cltd
and
push
adc
lcall
push
xor
sub
xor
mov
fwait
add
loop
shrl
dec
das
jne
xchg
call
inc
jle
addr16
jg
lcall
sub
xchg
inc
jl
lods
fstpl
push
or
and
jmp
stos
ja
fnstcw
jmp
dec
mov
add
push
pushf
dec
xchg
cmc
push
mov
or
int
cs
decl
mov
or
mov
inc
jb
push
xchg
out
cmp
push
stc
push
sbb
xlat
xchg
mov
mov
daa
inc
les
mov
xlat
cmp
dec
xor
jmp
je
pop
jmp
ds
hlt
xor
push
je
lahf
out
sub
lock
lret
popf
push
xor
mov
shrw
inc
jb
push
add
mov
pop
pushf
jp
jp
bound
kmovb
push
out
pusha
loope
adc
mov
jnp
loope
fwait
push
clc
xor
inc
popf
xchg
mov
add
lcall
and
pop
sbb
mov
inc
ds
jl
sahf
rep
add
aam
call
aad
push
mov
and
and
adc
xchg
jns
rcl
xchg
xchg
sbb
or
decl
mov
in
int
fbstp
fisubrl
inc
dec
cld
xor
sti
push
inc
ljmp
cmp
push
out
cld
xchg
arpl
rol
pop
or
cltd
jg
jmp
fisubrl
int3
jmp
in
enter
sbb
dec
jae
lret
jmp
jle
sahf
inc
nop
push
enter
out
sbb
pop
rclb
add
and
std
push
pushf
daa
ret
sbb
stos
mov
xchg
cmpsl
fucomip
rcl
outsb
pop
cmc
pop
sbb
ds
mov
sub
out
jns
mov
popf
or
dec
pushf
and
adc
aaa
ret
decl
lcall
pop
mov
aad
sbb
jl
fmuls
sub
push
mov
pop
jnp
ret
ljmp
lock
in
mov
dec
inc
xchg
mov
lock
enter
in
mov
incl
in
lahf
loop
pushf
push
sbb
jae
lahf
pushl
dec
xchg
das
in
enter
lcall
std
in
mov
inc
popf
nop
or
imul
sub
pushf
lods
mov
call
mov
push
jp
lcall
stos
jge
arpl
mov
mov
jmp
aas
push
dec
or
repz
test
jae
sbb
jbe
push
jne
mov
mov
repz
mov
fsubs
fnstenv
test
add
sbb
imul
or
xor
adc
into
cmpsb
repnz
xchg
int
adc
fnstcw
lahf
xchg
or
push
fs
call
into
ret
inc
sti
jle
rolb
mov
xchg
stos
jl
sbb
inc
push
xchg
jmp
or
aas
dec
xchg
pop
sbb
cmp
sbb
pop
pop
jno
add
sti
and
lcall
movsl
repnz
mov
out
aam
std
jbe
adcb
ljmp
add
pop
mov
adc
icebp
mov
in
adc
out
cli
decl
icebp
adc
rclb
push
ds
stos
addr16
add
cmp
addb
mov
jno
lret
cmpsl
xchg
dec
cmpl
int
shll
jb
adc
lock
cmp
movsl
push
pop
dec
sbb
loop,pn
decl
pop
cs
push
xor
je
sub
push
mov
shll
sbb
fistpll
cmpsl
jle
or
add
push
loope
dec
xchg
push
or
dec
or
aaa
insb
inc
out
and
dec
xor
xor
std
hlt
popa
dec
xor
lcall
sbb
repnz
jge
jns
pop
push
or
cmp
pop
outsb
mov
jbe
pushf
dec
mov
decl
stos
jmp
shlb
xlat
pop
pop
insb
xorb
popf
push
sub
jecxz
adc
fsubr
shll
aam
lods
ljmp
mov
cmp
cmp
stos
push
jg
or
incl
mov
mov
cltd
into
mov
shrl
shll
test
data16
ljmp
decl
and
insb
arpl
push
lds
fwait
xor
jl
pop
shl
jmp
lret
call
cli
add
rcll
incb
push
std
mov
add
iret
dec
or
ljmp
xchg
and
mov
aad
push
iret
andnps
es
lea
sbb
gs
pop
loopne
cmp
inc
scas
out
xor
push
sbb
sub
and
sbb
movsb
push
or
daa
cmp
push
test
filds
arpl
cmp
stos
pop
cmpsl
mov
sbb
cmp
inc
pop
loope
lds
jne
ljmp
or
mov
leave
rol
mov
xchg
xchg
jno
add
mov
mov
or
bound
push
adc
mov
shll
sub
inc
jmp
sahf
decl
mov
xchg
out
push
aaa
xor
sbb
push
lods
lods
dec
inc
inc
addr16
jg
pushl
push
cltd
sbb
rcll
inc
dec
mov
int3
mov
cli
fildl
xchg
cli
insl
int
orl
cmp
ljmp
jo
or
mov
loop
and
pop
lcall
inc
andl
popl
push
loopne
mov
sbb
cmp
mov
or
clc
loope
xchg
and
das
lock
pushl
mov
sbbb
adc
or
inc
push
and
mov
mov
call
cld
mov
sbb
xchg
ret
pushf
ret
push
les
aam
movb
or
loope
fs
pop
adc
inc
test
jmp
push
mov
and
push
mov
fcoml
ret
inc
pop
cli
jo
lret
lock
cwtl
in
decl
leave
fcoms
cmp
xchg
inc
out
jne
cmp
in
stos
pop
mov
loop
call
jmp
or
ds
mov
jmp
data16
adc
incl
push
pop
push
sbb
lock
insl
dec
je
bound
cmp
addb
mov
aaa
push
outsb
roll
xchg
icebp
fisttpl
lds
mov
adc
inc
push
or
inc
pop
pop
aaa
fcmovbe
int3
repnz
lods
inc
mov
pop
jns
mov
cmpsl
imulb
sahf
fmull
xchg
mul
fistpl
ljmp
dec
adc
out
cmpsl
jge
sbb
shufps
cltd
scas
loop
call
mov
or
inc
jae
adc
cmpl
xchg
mov
xchg
dec
sbb
lret
clc
lahf
stos
and
rcrl
test
aaa
mov
lcall
jno
pmaxsw
jmp
pop
out
mov
jo
cmp
pop
mov
lock
xlat
or
fnstenv
insl
stos
jbe
int
dec
mov
pop
jg
mov
scas
cld
jmp
adc
lcall
push
dec
push
push
add
movsl
in
adc
inc
and
das
test
cmpsl
sub
leave
xchg
cmpb
js
jmp
xor
jg
popf
add
mov
push
scas
jg
ljmp
xchg
decl
mov
sbb
cmp
aaa
lods
movsb
sub
cwtl
push
jecxz
cli
es
or
lcall
roll
mov
daa
cmp
cs
cmp
mov
sti
mov
cs
lcall
and
sub
loope
push
int3
rorb
loopne
sbb
nop
call
ret
mov
mov
ljmp
stc
enter
mov
adc
in
dec
mov
mov
lcall
icebp
push
gs
int3
imul
enter
dec
call
decl
inc
add
or
pop
mov
add
inc
ja
jae
or
aad
inc
mov
pushl
cli
adcl
int
ja
mov
imul
mov
in
addr16
and
pushl
rcrb
mov
ljmp
mov
in
xchg
pop
pop
mov
or
addr16
inc
pushl
pop
fdivrp
or
add
add
pop
into
faddl
inc
push
push
mov
lcall
lret
dec
cmpsb
cmc
mov
js
pop
jl
inc
into
or
mov
mov
jb
lcall
pop
dec
xchg
popl
pop
cs
mov
adc
xchg
jbe
inc
add
out
push
cmp
or
popf
sub
jnp
repz
stos
mov
in
jbe
push
xor
pushl
fs
rcrl
add
in
loope
cmp
jl
int
addr16
mov
mull
ljmp
mov
sbb
stc
lods
push
and
nop
and
mov
push
insl
dec
cltd
mov
jg
cld
pop
push
inc
mov
call
xchg
jne
add
test
adc
jecxz
jae
lcall
outsl
insl
cmc
xor
xchg
mov
mov
pusha
and
jg
jg
mov
dec
dec
mov
adc
loopne
sbb
cmpsb
xor
lahf
cmpsb
decl
nop
mov
adc
or
pusha
loopne
inc
repnz
mov
in
mov
pushl
bound
aad
jo
pop
or
dec
icebp
dec
mov
add
outsl
std
mov
lret
jle
decl
or
jno
int
sub
rolb
fiadds
fldt
cld
push
insb
fiadds
mov
and
cmpsb
gs
add
subl
sub
or
ljmp
cmp
cmp
cmp
hlt
push
sbb
xor
push
popf
rorl
mov
test
mov
or
mov
outsl
incb
sbb
adc
cmp
pop
add
sub
pop
add
daa
cmp
negl
dec
jl
sbb
hlt
je
pop
mov
mov
mov
dec
inc
and
in
shrl
or
push
mov
ljmp
inc
jno
aam
lds
repz
pop
mov
push
mov
xor
cwtl
cmp
insb
outsl
clc
sbb
xchg
outsl
fidivrs
ljmp
and
cs
incl
movsb
or
inc
sub
outsl
pop
notl
jbe
pop
dec
repnz
ljmp
sbb
mov
sarb
and
cmp
adc
aaa
cld
pushl
add
dec
movsb
dec
add
sub
jge
jno
ljmp
lcall
lahf
loope
cmpsl
or
xor
mov
nop
pop
xor
dec
jmp
xchg
std
incl
sbb
mov
imul
out
add
xchg
imul
pushf
inc
popa
vpmacsww
clc
sahf
loop
fstpt
or
adc
js
mov
out
call
mov
call
xchg
sahf
mov
push
push
mov
lret
mov
testb
adc
daa
bound
jmp
jb
push
sbb
mov
stos
mov
push
out
jecxz
mul
outsl
subb
xchg
or
ljmp
repnz
cs
and
or
jmp
aas
pop
scas
js,pt
xchg
out
clc
call
dec
pusha
mov
cmc
mov
mul
xchg
mov
fnstenv
lcall
movsb
aaa
mov
aaa
mov
es
sub
add
jmp
je
jno
cmp
sar
xor
push
clc
sahf
ljmp
fs
movsl
stos
mov
jne
add
push
rcrl
push
or
shlb
mov
jmp
mov
dec
jmp
mov
mov
xor
aam
shlb
out
stc
jo
jl,pn
call
mov
in
jecxz
mov
xor
popa
lods
gs
ljmp
push
dec
inc
inc
incl
xlat
fdivrl
test
dec
cs
xor
xor
fscale
stos
arpl
lcall
and
pop
jmp
mov
adc
dec
dec
cmp
clc
clc
jg
adc
sahf
jne
sbb
xchg
mov
adc
scas
aam
adc
sub
cmpsb
sti
cmc
sub
mov
push
ljmp
arpl
jmp
jno
pop
test
leave
lcallw
shll
push
inc
sbb
out
data16
push
dec
out
enter
xor
sbb
xor
popa
or
pushl
sub
xchg
test
pop
jb
inc
pop
mov
pop
push
dec
or
pop
sahf
ljmp
add
leave
mov
outsl
out
out
icebp
lret
dec
lds
mov
add
fwait
cmpl
lcall
lret
int3
pushf
lcall
mov
aam
popa
cmp
pop
adc
xchg
fs
cmc
xor
sub
jmp
insl
pop
inc
bound
pop
ljmp
addl
jmp
in
outsb
mov
cs
nop
dec
pushf
inc
sub
cmpsl
cmp
jp
sub
decl
decb
test
scas
subl
lret
or
push
stc
adc
jno
incl
push
jo
andb
out
jmp
daa
or
shlb
incl
sbb
out
fsts
orb
lret
pop
dec
rclb
or
test
dec
into
repz
add
mov
add
rcrl
lret
loop
push
daa
orb
mov
push
adc
sub
add
xchg
sub
adc
xor
out
in
push
and
push
or
and
in
sbb
push
shll
pushl
sbb
cmpsb
pop
pop
jmp
ljmp
mov
ud0
cli
jmp
notb
xor
shl
pusha
mov
xorb
call
mov
shld
push
push
ja
jmp
aaa
push
subb
sbb
fcomp
scas
clc
jmp
lock
hlt
cwtl
je
mov
lret
std
sub
pop
out
mov
incl
mov
dec
jne
jp
adc
sbb
lods
ds
push
push
ja
cmc
mov
call
xchg
aam
xor
pushf
jg
jbe
jbe
movsl
lea
xchg
xor
stc
sub
cmp
fs
out
aad
adc
inc
push
push
pop
push
jo
mov
jg
movsb
add
and
dec
lcall
data16
fcmovnu
shl
popa
incl
insl
sbb
rcrb
dec
sbb
dec
pop
mov
sbb
dec
je
cmp
push
pusha
repnz
sub
cli
fcoml
add
xor
inc
inc
adc
jg
mov
push
cmp
out
dec
int
sub
xor
lahf
push
jns
ljmp
push
leave
adc
notl
inc
or
pushf
cmp
inc
in
lcall
clc
test
sbb
add
in
jnp
sub
lods
not
pop
jne
dec
add
jle
call
cmp
sub
jmp
test
decb
jo
cmp
add
cmp
jnp,pn
and
movsb
fisttpl
add
sbb
mov
pop
mov
aas
outsb
pop
mov
sbb
test
mov
pop
fcompl
inc
sahf
add
ret
adc
imul
jne
sbb
or
out
clc
rcrl
ret
xchg
shlb
add
into
daa
jmp
jbe
or
xchg
or
pushl
dec
xchg
jae
jnp
pop
scas
js
jo
add
mov
cld
in
mov
pushl
xchg
ds
pop
dec
mov
test
cmp
adc
cmc
mov
bnd
pushf
icebp
jg
mull
inc
fistpl
pop
pcmpgtd
and
inc
out
push
ljmp
sar
dec
pop
andb
repnz
mov
mul
and
incl
lret
jecxz
cld
and
in
mov
sti
loop
loop
jmp
cld
adc
jmp
movsb
ljmp
mov
push
fs
imul
jmp
jne
xchg
out
pop
dec
nop
in
jle
add
ljmp
push
mov
movsl
jb
jae
lret
xchg
sub
out
decl
jnp
lret
cmp
jmp
cmp
jo
dec
aad
idivl
sbb
lcall
push
mov
jge
loope
cwtl
push
jmp
cmp
sbb
test
outsl
push
lret
push
mov
dec
sub
std
int3
loope
mov
test
jmp
ret
lret
unpckhps
dec
cmp
call
dec
push
iret
loope
imul
loopne
ret
nop
mov
cld
mov
fisubrl
jl
pushl
gs
into
dec
int
adc
mov
hlt
movsl
cmp
push
push
psrlq
xchg
jmp
hlt
sub
pushf
adc
lahf
lods
jecxz
mov
fmull
sahf
fs
and
lcall
outsb
adc
stos
cmp
lret
xor
push
mov
dec
mov
ljmp
stos
stos
adc
ds
fstps
xor
adc
js
popa
out
jo
xor
adc
pusha
ja
pop
pop
movsl
test
xchg
popa
cli
ret
or
lcall
jno
repnz
sub
cwtl
pop
xor
mov
or
push
ret
mov
loop
incl
cmp
mov
cmpsl
pusha
xchg
pop
sti
cmpl
les
faddl
hlt
mov
push
xchg
lods
mov
xor
out
mov
repz
cmp
shlb
dec
cmp
cld
add
mov
lods
xlat
inc
mov
mov
xorl
xor
xor
icebp
push
in
pop
dec
and
icebp
imul
cmp
xor
add
cmpsl
icebp
es
cli
lcall
adc
xor
jp
inc
sahf
jbe
mov
mov
cli
add
test
addl
lods
fwait
adc
cmc
add
push
movsl
testb
pop
loopne
mov
popa
int
in
test
std
fbld
mov
scas
cmp
ret
ja
movsl
adcb
call
sub
jecxz
lock
mov
add
je
loop
stos
call
cmp
rcrb
add
sub
sahf
push
xchg
rcll
jns
jmp
lea
stos
dec
jge
pusha
sub
aad
cmp
or
inc
hlt
sub
addr16
cwtl
inc
bnd
decl
or
subb
inc
jnp
xchg
lcall
in
mov
mov
lods
xchg
out
pop
or
iret
add
sahf
fcomip
ljmp
loopne
xchg
mov
adc
movsl
sarl
aaa
into
imul
cli
or
inc
cmp
hlt
inc
inc
and
dec
xchg
xor
cld
cmp
ljmp
or
adc
push
mov
mull
mov
loopne
call
push
stos
ja
mov
add
sub
push
scas
push
push
adc
mov
mov
xor
add
sbb
lods
in
imul
and
lcall
mov
test
cmpsl
and
sahf
or
cmp
mov
cmc
jae
ljmp
pop
dec
jb
nop
repnz
sbb
and
pop
aaa
xor
sub
mov
jmp
and
mov
imul
push
jle
roll
cmp
repz
daa
jg
mov
lea
outsb
jb
push
loopne
out
sahf
aam
dec
sbb
decl
and
mov
jb
fs
dec
add
xchg
cltd
and
mov
scas
fs
outsb
jmp
cmp
insl
jle
jns
lds
dec
in
pop
fbstp
cltd
mov
inc
mov
sbb
add
or
add
inc
mov
loop
push
cltd
and
ret
inc
cltd
inc
or
jnp
xchg
scas
sub
cli
or
and
or
or
mov
in
mov
iret
add
jg
js
lock
incl
scas
and
ljmp
push
out
mov
jle
push
and
or
popl
addb
aad
mov
inc
scas
push
adcb
sub
cli
mov
icebp
out
push
imul
lcall
call
sub
jl
push
aaa
adc
sbb
mov
in
pop
xor
ljmp
lds
ljmp
lcall
pushf
test
sti
mov
sub
hlt
js
shl
scas
std
mov
jo
mov
pop
adc
cld
int
adc
jg
out
cmp
xor
cmpb
push
mov
mov
out
mov
pop
dec
cs
lds
ljmp
shlb
xchg
inc
sbb
movsb
adc
pop
mov
in
or
pushl
in
int3
imul
rcll
xor
push
adc
or
call
inc
push
in
sub
ret
iret
inc
pop
inc
test
data16
fiaddl
int3
roll
fstps
push
pop
mov
xor
inc
dec
out
sub
jo
jb
adc
imul
decl
aaa
mov
xchg
mov
lcall
fsts
mov
xchg
in
adc
in
lcall
lret
jne
ljmp
sub
or
cmpsl
fcomip
call
ror
pop
mov
imul
shrb
mov
cmp
fmuls
bound
clc
fistl
enter
pop
adc
sarb
inc
push
mov
mov
daa
inc
push
decl
fs
pop
xchg
loop
out
mov
pop
mov
int
cmpb
loopne
mov
incl
xor
clc
pop
dec
pop
scas
ljmp
adc
mov
jmp
or
cmp
mov
scas
loopne
xchg
cmp
xchg
cmp
mov
xchg
enter
cmc
adc
inc
shrb
pop
popf
mov
lods
adc
out
jmp
xor
outsl
inc
pop
aas
mov
insl
dec
cmp
mov
sub
and
inc
iret
mov
and
or
mov
push
dec
or
fwait
mov
out
out
and
lahf
sarb
push
loop
subb
jg
lret
cmp
xchg
fildl
les
pushl
or
or
das
jge
decb
ja
xchg
xchg
mov
add
cmp
incl
incb
mov
xor
cmpl
stc
movsb
lahf
sub
pushf
cmp
pushl
xor
adc
out
and
fimuls
in
pop
les
inc
pop
cmc
incl
xlat
pop
test
stc
std
push
inc
mov
aas
xor
dec
and
jns
jge
inc
jmp
pop
std
sbb
cmp
cmp
leave
popf
iret
add
sub
mov
andb
enter
pushf
loop
icebp
xchg
xchg
pop
add
pop
pop
mov
repz
dec
in
sub
pop
xchg
sbb
pop
push
ret
adc
sbb
push
jbe
insl
jb
out
mov
xchg
push
add
andb
lret
mov
cmpsb
iret
outsb
decl
adc
adc
inc
pop
movsl
inc
rcl
cmp
jnp
mov
or
or
and
ljmp
lea
sbb
andl
cmpsl
insl
fdivp
mov
fwait
imul
dec
xor
repnz
jnp
adc
out
mov
mov
sbb
incl
cld
push
xor
cmp
jb
scas
pop
push
mov
cld
mov
cld
scas
out
jbe
mov
movsl
test
repnz
add
lock
jmp
jg
pop
and
mov
push
pop
add
pop
lock
jmp
cmpsl
add
pop
test
mov
in
jecxz
mov
inc
adc
or
decl
adc
jae
xchg
in
or
ja
push
and
fisttps
aaa
stos
js
scas
mov
xlat
dec
scas
ret
and
mov
sbb
ret
mov
and
mov
jg
adc
out
push
xor
fists
dec
leave
cmp
jb
sarl
sub
add
sbbb
xchg
lcall
pusha
pop
xor
or
inc
test
fiaddl
mov
pop
jmp
mov
jo
adc
inc
mov
mov
sub
xlat
xlat
fwait
add
outsl
and
das
mov
arpl
fmull
add
mov
mov
xchg
pushf
call
or
mov
outsl
into
xor
xchg
cmc
lret
add
jno
push
pop
xor
loop
ljmp
cli
dec
daa
je
out
inc
clc
sbb
ja
push
or
inc
js
and
jmp
stos
xlat
rolb
gs
cwtl
out
cld
loop
stos
lcall
cmp
pop
imul
cmp
cmpxchg
in
or
jne
outsl
stc
mov
dec
sbb
fstpt
pusha
test
ljmp
clc
test
insb
or
dec
jecxz
push
sub
push
jns
divl
aaa
jl
jns
or
lock
ljmp
pop
jle
inc
jb
pushl
push
add
xlat
mov
test
cmp
dec
mov
mov
pop
xor
mov
push
jp
pushl
ror
mov
out
cs
push
loop
xlat
arpl
jnp
dec
dec
loopne
push
push
mov
incl
leave
sahf
ss
mov
mov
std
dec
clc
mov
loopne
mov
mov
pop
push
inc
pop
shr
and
rorl
jbe
call
dec
addr16
incl
cld
jbe
mov
or
jecxz
mov
faddp
shll
and
mov
testb
fs
xor
cmp
int3
loopne
outsl
call
or
hlt
jb
cmpsb
divl
mov
xor
cmp
xchg
popa
notl
mov
repz
lcall
js
data16
xchg
and
out
in
xlat
add
jecxz
out
cmp
or
xchg
jmp
and
pop
loop
out
movsb
or
cmp
mov
inc
push
je
sub
cmp
loope
ljmp
test
cmpl
pop
fprem1
push
pusha
or
jg
test
add
pusha
adc
cmpsl
pop
call
add
int
loope
out
fiaddl
jle
pop
dec
and
in
js
push
rcr
xor
push
int
nop
ret
pop
in
mov
ja
icebp
adc
fidivrs
xchg
rcll
jmp
sub
dec
sub
mov
outsb
pop
mov
js
scas
ficompl
in
fwait
sub
lcall
xchg
dec
pusha
lret
fsubrl
xchg
xchg
outsl
fadds
ljmp
dec
popf
jp
lret
pop
sbb
int3
pop
loop
ss
push
test
sahf
ret
pop
scas
lea
xor
call
insb
in
push
mov
cmpb
push
dec
mov
xchg
not
fisubs
add
fimuls
jle
in
push
out
mov
out
inc
pop
or
test
push
pushf
adc
pop
mov
cld
push
stos
adc
mov
aas
cld
mov
into
mov
loopne
mov
aam
push
mov
call
or
lcall
aaa
data16
mov
out
mov
rclb
lods
and
pushl
mov
jae
xor
xchg
xchg
push
enter
bound
jb
out
add
jg
lock
test
int
dec
inc
hlt
mov
cmp
cli
divb
ret
incl
jmp
pushf
sub
mov
jge
frstor
jg
cmp
inc
mov
jmp
in
lret
ds
daa
pop
mov
incl
outsb
xchg
fs
dec
push
inc
sub
rep
imul
lds
or
jnp
stos
pop
or
incl
sbbl
xor
pop
out
ret
in
mov
mov
jmp
test
xchg
into
lods
inc
xchg
int
subb
mov
decl
mov
push
pop
mul
pop
mov
sbb
les
add
fnstenv
ljmp
decb
test
xor
mov
dec
cli
rcll
call
idivb
test
inc
add
pop
mov
orb
fmull
inc
dec
cmp
sub
mov
mov
jmp
and
scas
dec
fidivrl
bound
fcomip
pushl
fidivs
out
in
xor
jp
xchg
or
mov
cmp
sub
cmp
add
lods
sbb
xchg
imul
dec
outsl
clc
ljmp
dec
push
mov
data16
pop
lock
push
shrl
aas
dec
cmp
rcr
mov
pop
ds
cli
sbb
aas
mov
add
fildl
pushl
or
xchg
add
push
lock
cltd
mov
sahf
jo
jge
or
pusha
pop
or
jle
inc
enter
pop
ljmp
lock
pop
rol
mov
sub
push
sub
dec
test
push
test
decl
outsb
cmpsl
push
or
jg
mov
iret
cwtl
cmp
insl
jb
nop
lret
arpl
idiv
call
adc
or
xor
dec
and
push
push
subl
push
popa
cli
sbb
lcall
hlt
jge
scas
mov
pop
test
add
daa
push
pushl
call
cmpsb
sahf
mov
sidtl
jbe
loop
or
jmp
call
dec
push
std
add
and
xchg
sbbl
pop
mov
cltd
icebp
sbb
inc
jb
mov
inc
sbb
ss
test
push
aas
scas
cmpsb
cld
ljmp
movsb
xchg
mov
stc
jnp
xor
mov
gs
mov
enter
fldpi
sbb
call
orb
cwtl
xchg
repnz
shrl
sub
and
jle
pop
sbb
cmpsb
stc
adc
mov
ljmp
push
in
aad
adc
xor
sub
movsb
ret
or
lcall
lds
or
pop
push
pop
jl
inc
dec
es
shlb
test
push
xor
xchg
jge
jmp
imul
fisttps
pop
xchg
rcll
out
ljmp
test
and
cmp
popa
inc
pop
cmp
scas
ljmp
jp
push
jbe
aam
cwtl
xor
push
mov
push
jle
mov
call
dec
out
lods
adc
add
outsb
jae
jb
call
mov
mov
in
add
fisubrl
hlt
sar
push
adc
mov
idiv
mov
loopne
and
out
and
movsb
test
rol
sar
jmp
out
stos
cmp
arpl
mov
pushf
out
sub
inc
mov
clc
inc
cmp
insl
js
dec
mov
leave
es
lret
test
pop
jmp
sbb
sub
jge
or
movsl
jp
and
cwtl
xchg
and
adc
cmpsb
jg
push
es
popf
rolb
sub
les
sub
call
push
cli
lods
into
sub
xchg
sbb
pusha
mov
mov
add
test
jg
fisttpll
lcall
call
cmpsl
ss
sub
push
arpl
movsb
mov
cmc
or
ljmp
mov
shrl
push
xor
out
fsts
or
cld
testl
cmp
adc
add
add
and
dec
pop
faddl
cwtl
aaa
pop
ja
jecxz
incl
cmp
sti
ja
or
lds
mov
pushf
xor
lds
dec
imul
fucom
int
push
aad
sbbb
int3
lods
jmp
ja
sub
imul
dec
pop
jmp
daa
jle
push
rcl
mov
fistps
sub
cmp
outsl
mov
xor
decl
xchg
jae
jo
popf
push
movsl
adc
inc
dec
insb
aam
mov
mov
inc
dec
mov
inc
mov
push
idivl
out
cmp
into
xor
pop
test
in
cmc
call
scas
cs
jecxz
sbb
fcomip
arpl
cmp
cmp
xchg
cs
call
mov
inc
fisubrs
mov
adc
call
dec
repnz
and
aam
adc
mov
or
mov
dec
mov
mov
add
cli
lcall
enter
dec
cmp
clc
incl
mov
lds
cmp
or
inc
sub
jo
lret
xchg
in
ljmp
mov
adc
loope
add
cld
movups
iretw
fs
fcmovne
out
push
out
lea
test
cs
dec
sbb
mov
aaa
jo
and
push
cld
leave
int3
out
jns
dec
negb
jp
or
clc
xlat
cltd
out
adc
jno
ljmp
push
inc
xlat
ds
ss
and
jnp
repz
pop
xor
push
xchg
in
fyl2x
orb
xlat
loope
incl
push
mov
pop
pop
loopne
sbb
jmp
mov
mov
xor
xlat
lret
in
scas
sub
hlt
incl
ds
enter
mov
cmp
ss
mov
sub
les
pop
cld
fcomps
sbb
or
scas
mov
dec
icebp
ljmp
ja
ret
imul
dec
stos
sbb
das
sarb
outsl
add
dec
and
mov
pusha
sbb
inc
pop
test
sub
ds
or
lock
es
and
or
test
call
insb
cmpsb
dec
xchg
jmp
pop
xor
or
js
mov
push
repz
mov
push
sar
in
mulb
xor
aad
movsl
mov
movsb
cmpb
mov
adcl
cld
andl
ret
imul
arpl
or
jno
sub
loopew
inc
in
pushl
call
out
fstps
imul
shlb
rclb
jbe
and
cli
lahf
mov
jmp
test
hlt
dec
fs
xchg
leave
mov
popa
pop
cmp
popf
adc
xor
sub
mov
push
sbb
stos
xor
inc
fwait
stos
les
cld
insb
enter
inc
xchg
repnz
lea
out
xchg
les
dec
lods
jl
xor
pop
sub
shll
lea
pushl
inc
repnz
cmp
adc
test
repnz
mov
sub
or
jle
jo
daa
stos
shl
sbb
xor
fiadds
cmc
xchg
into
mov
push
std
mov
cli
jnp
insl
jo
cmpsl
dec
xor
xchg
push
jle
stos
cli
notb
jmp
and
xchg
hlt
push
xchg
adc
pop
imul
jbe
fistl
test
into
scas
mov
adcl
lcall
add
cmp
and
sahf
and
xchg
xor
sti
nop
mov
lahf
or
jmp
rcrl
fs
loopne
hlt
push
xor
push
aam
and
xchg
push
cmp
push
adc
ljmp
pop
fnsave
cmpsb
sbb
fmuls
fsub
and
jo
cmp
call
pop
pusha
fdivrl
pop
hlt
ljmp
icebp
mov
or
or
or
sub
xchg
out
and
xor
decl
ja
xor
pop
movsb
or
jne
mov
test
mov
scas
mov
mov
paddd
inc
xor
das
mov
push
orb
pushl
push
dec
xor
out
xor
mov
lret
scas
mov
ret
pop
sub
xchg
inc
sub
leave
mov
xor
and
xchg
pop
mov
lret
ror
jmp
mov
mov
daa
lret
push
or
outsl
rorb
mov
push
rorl
pop
in
push
cmpl
fnstenv
sarb
jle
loop
dec
xchg
mov
cli
xlat
lock
add
jbe
ljmp
add
mov
hlt
xchg
gs
imul
mov
lock
pop
stos
xchg
lahf
inc
mov
jmp
mov
push
jp
div
xchg
ss
decl
addb
loopne
call
mov
jle
rcll
loope
sub
jp
jmp
imul
decl
mov
js
xchg
loope
mov
xchg
fucomip
pop
jo
test
or
outsb
loop
insl
out
xchg
xlat
push
rcr
dec
inc
or
fcom
pop
lcall
xchg
mov
mov
call
mov
loope
mov
sbb
sahf
lcall
mov
mov
daa
sbb
dec
jns
cltd
in
faddl
push
notb
notb
pop
mov
test
pop
dec
xchg
pop
mov
cmpsb
adc
add
lcall
sub
sub
add
mov
incl
int3
and
shrl
adc
shlb
testb
push
push
ljmp
dec
or
sbb
sub
jns
sar
jg
jno
mov
and
notb
cltd
push
add
jne
mov
sar
xor
mov
cmp
test
dec
mov
negl
scas
aaa
and
addr16
mov
pushl
movsb
mov
push
sbb
cmp
and
insl
sbb
xchg
dec
inc
pop
pushl
mov
rcrl
pusha
cmp
and
inc
inc
adc
movl
xor
add
adc
mov
insl
sub
inc
jae
push
add
insb
cwtl
inc
mov
int3
sub
mov
popf
push
inc
push
les
jmp
or
jg
cmpsb
cmp
sub
sub
jb
out
shrl
adc
cld
ljmp
or
imul
jge
inc
pop
outsl
push
out
lods
jns
or
xlat
lcall
in
dec
cmp
push
les
mov
jmp
repnz
add
idiv
add
sub
mov
sbb
and
adc
stos
in
pop
decl
sbb
and
mov
pusha
inc
and
mov
call
js
and
imul
sub
call
loop
imul
or
out
xchg
dec
enter
jmp
out
push
mov
mov
call
push
xor
or
adc
jge
pop
and
mov
fcomip
fidivrl
adc
jl
icebp
pop
push
cmp
inc
in
rclb
popa
xorl
hlt
ret
hlt
pusha
adc
xchg
push
inc
mov
push
roll
sbb
ljmp
clc
rcll
ds
cmp
jns
sbb
jb
pop
jno
inc
fdiv
inc
sahf
mov
cmp
mov
inc
ja
dec
cmp
add
xchg
outsl
out
cld
adc
lret
push
sub
fimuls
inc
inc
adc
mov
xchg
jp
jg
jns
dec
jns
sti
lods
lahf
inc
rcrb
xchg
dec
cmp
clc
mov
dec
cmc
pop
popf
jge
and
movsl
rcll
or
xchg
xorb
sarl
mov
or
and
adc
cmp
ret
das
clc
decl
xchg
rorl
xor
repz
fucom
xchg
xchg
adc
push
jmp
ss
add
test
add
fsubl
xchg
fnstcw
cmp
dec
push
sbb
lcall
jae
xor
fisttpl
pop
std
pop
adc
imul
fmull
in
and
decl
add
pop
cmpsl
mov
inc
mov
adc
in
notl
loop
jecxz
jecxz
sbb
bound
in
sbb
in
push
xor
push
sub
call
loope
in
out
loop
mov
mov
xchg
push
jecxz
pop
xchg
outsb
and
pushl
ljmp
or
int3
out
test
push
cmpsl
push
int3
push
xlat
xchg
shlb
call
push
daa
dec
lret
mov
enter
dec
pop
dec
push
pop
xchg
push
call
mov
xchg
mov
push
insl
sbb
iret
mov
movsl
push
add
decl
push
enter
outsb
sti
mov
cld
inc
inc
dec
popf
xor
lcall
mov
lret
loope
dec
jb
movsl
pop
xchg
xor
fwait
mov
mov
jae
mov
mov
lods
push
mov
add
shr
push
shll
mov
sar
fnstcw
cmp
mov
and
jno
sbb
cli
xchg
loopne
pop
arpl
incb
lock
mov
fldcw
xchg
push
fadds
imul
addb
jae
std
mov
cli
cmp
shlb
or
mov
sbb
out
fcomp
pop
subb
pushl
out
imul
cmpsl
inc
sbb
lea
jnp
sbb
ret
or
lcall
mov
xchg
ja
pop
nop
pop
out
scas
mov
adc
mov
push
sub
out
arpl
mov
arpl
cs
jge
jno
push
cmp
dec
lods
mov
scas
loope
clc
adc
fcompl
cmp
jmp
mov
cmp
jg
pop
mov
pusha
cmc
fidivrs
inc
cmc
std
ret
cmp
dec
loope
cmp
jl
add
cld
in
test
lcall
mov
sti
xor
ret
push
ja
mov
arpl
pop
cmc
daa
jnp
cli
sub
jp
add
sbb
scas
call
xchg
or
scas
add
mov
xor
roll
adc
shll
jg
lea
xchg
xchg
or
mov
pushf
sub
sub
loopne
dec
push
and
sarl
inc
push
add
cmc
push
xchg
std
xchg
xchg
das
xchg
incl
push
mov
addl
bound
jnp
test
rcrl
decl
ja
sub
outsl
out
movl
iret
adc
pushf
fadd
test
test
lcall
daa
jo
fisttpll
sti
mov
lahf
jo
jmp
shlb
pop
xchg
adc
inc
pop
lcall
and
mov
xchg
mov
xor
push
push
outsb
add
ljmp
cli
and
lret
iret
and
sbb
jg
in
mov
std
scas
dec
addb
shll
xor
and
ja
mov
pushl
cwtl
push
pushf
cmpsb
xor
loope
stos
sub
insl
xlat
fstpl
jg
movsb
mov
daa
add
lcall
daa
sbb
nop
sub
jp
sahf
daa
mov
inc
mov
add
rclb
or
ja
sub
aam
sub
call
pop
xor
ret
addb
jecxz
stos
push
rcrl
or
sub
pusha
add
nop
push
xor
pushl
adc
xor
inc
std
or
mov
lods
sbb
or
es
popf
inc
mov
mov
mov
or
add
add
sub
sbb
pushl
mov
pop
xor
repz
fsubr
jle
testl
test
pop
fs
cld
in
xor
mov
pop
ret
add
xor
rolb
mov
push
pop
adc
incl
push
sti
dec
sub
xchg
jmp
inc
fs
ljmp
ljmp
notb
inc
rorb
out
lods
or
decl
loopne
sbb
imull
xlat
mov
push
hlt
xor
inc
add
stc
rcrb
daa
mov
xchg
incl
sarl
stc
xchg
jl
outsb
mov
lods
and
cli
ljmp
xchg
xchg
jp
cld
jmp
sub
jle
or
scas
jecxz,pt
mov
fwait
pop
add
fdiv
or
cld
call
dec
cld
push
jge
dec
pop
imul
and
int
add
jg
in
popa
addb
fsubr
repnz
out
cli
add
stc
lods
sti
push
mov
data16
aam
mov
loop
mov
push
or
decl
jbe
push
sti
dec
cmpsl
repz
stos
xchg
add
dec
or
cltd
mov
or
cmp
insb
test
mov
jp
imul
or
jg
xchg
jmp
mov
xor
in
push
pop
xor
fsubrl
mov
out
mov
sub
sahf
dec
nop
and
insb
mov
fstpt
fcmovbe
xchg
jns
cmc
out
loopne
xchg
xchg
icebp
pop
out
repz
adc
adc
and
jmp
xlat
add
jp
nop
iret
mov
enter
lods
xorb
in
mov
pop
jbe
and
int
dec
movsl
mov
in
xchg
xchg
repz
in
ja
clc
sub
lods
scas
pcmpgtd
jae
sbb
xor
fwait
xlat
scas
cmp
repz
sub
jne
cmc
int
enter
clc
sub
xor
test
outsb
or
mov
movb
xchg
fcomip
repnz
notb
std
lret
adc
mov
jno
mov
lock
mov
jmp
xorb
cmpsb
jb
cmc
and
js
jno
outsl
pushl
xor
ds
or
stc
mov
mov
movsb
clc
jl
pop
ds
mov
outsl
lahf
dec
es
loopne
mov
pop
ja
and
insl
push
mov
repnz
mov
adc
pop
fistpll
jns
adc
add
xchg
jne
xchg
mov
decl
scas
xor
imul
jns
shr
xchg
int
jp
xor
je
in
xchg
repz
inc
pop
mov
jno
jns
mov
pop
jo
cli
xorb
stos
je
stos
ljmp
dec
std
xchg
mov
push
js
cmpsb
repz
ja
scas
push
cmpsl
outsb
test
or
js
jg
int3
in
mov
mov
xor
and
scas
negl
data16
jns
sahf
incl
mov
adc
jns
adc
pop
jno
xor
jnp
jnp
push
pop
jecxz
mov
mov
aas
fnsave
jno
push
shl
ja
add
jl
cli
ds
pop
ud0
ret
mov
repnz
mov
xor
mov
push
ret
imul
pop
popa
adc
pushl
movsb
mov
cmp
test
insb
sbb
inc
mov
scas
mov
inc
push
call
out
xor
sti
mov
push
cmp
call
test
or
into
add
adc
and
stc
adc
mov
movsb
adc
lret
xchg
inc
cmp
jecxz
xchg
jnp
mov
orb
mov
mov
int3
jl
stos
pop
sub
cld
xchg
jmp
js
mov
cmp
or
mov
mov
jg
decl
sarl
stc
mov
xor
xor
data16
pushl
mov
test
adc
pushf
push
push
jo
leave
js
pop
pop
cmp
inc
les
mov
pop
fstpt
fs
add
ljmp
mov
rcr
and
aam
js
fcomp
mov
imul
xchg
shr
in
repz
ja
call
mov
hlt
loope
push
scas
xchg
jb
sti
xchg
cmp
in
mov
scas
push
push
sub
jne
fst
scas
add
jae
add
out
xor
pop
rorb
decl
inc
wrmsr
aad
mov
mull
adc
adc
ret
dec
mov
and
int
inc
arpl
hlt
push
inc
dec
inc
sti
jmp
arpl
rcll
fisubrl
ljmp
enter
lock
rcrb
out
cmp
lret
hlt
in
xchg
ljmp
dec
leave
shlb
cmp
push
push
out
out
lods
jge
int3
mov
push
inc
add
shl
add
push
sbb
ljmp
dec
stos
sub
cmp
nop
dec
mov
arpl
das
aad
lcall
leave
jmp
lods
lret
xchg
xor
out
sub
ja
fs
ja
jmp
cmp
loop
sar
push
push
loope
and
cli
popf
shlb
ror
push
stc
ljmp
jno
jg
lret
arpl
inc
pop
insl
mov
push
sub
or
and
movsb
or
mov
call
xchg
arpl
es
adc
arpl
cli
push
dec
jle
jg
add
mov
fs
mov
pop
xchg
test
imul
call
loopne
fisttps
test
push
ss
xlat
popa
and
loope
mov
ljmp
mov
movsb
xor
rcl
aas
movsb
fildl
adc
icebp
test
arpl
call
sbb
xchg
data16
lret
bound
fucomp
test
jno
ljmp
mov
pop
les
push
loop
out
mov
mov
loopne
push
fildl
add
ljmp
inc
adc
fdivl
out
jne
pop
or
pop
mov
dec
jg
aaa
std
setbe
adcb
imul
inc
test
mov
decl
mov
je
cmp
mov
jo
jae
push
cmc
jb
jno
pushl
loop
inc
jb
inc
lea
imul
paddd
xorl
cmp
sahf
inc
shrl
out
cli
add
xor
data16
dec
in
jmp
push
mov
mov
push
mov
push
pop
cmp
fwait
inc
sub
lcall
insb
popa
out
fistl
stos
daa
pop
pushf
fsubl
and
inc
gs
adc
lcall
rorb
ljmp
mov
fldcw
lods
addr16
cmp
or
mov
or
and
lds
arpl
mov
in
mov
js
push
ss
push
imul
movsb
push
add
and
inc
fwait
push
shrb
jmp
mov
or
imull
push
insb
sbb
xchg
les
xor
pop
sar
mov
mov
add
pop
icebp
xor
and
sub
call
jg
dec
in
pop
mov
bound
cwtl
jecxz
pop
add
cli
push
xlat
out
jle
ljmp
inc
out
push
stos
pop
iret
adc
je
mov
fs
sbb
dec
sub
ret
imul
movsb
jo
or
inc
fisttpll
add
or
enter
dec
lret
xchg
xchg
inc
mov
out
jmp
mov
orb
mov
je
mov
movsb
mov
sbb
push
rclb
rorb
mov
cmpsl
sbb
insb
dec
ficoml
dec
and
sbb
popa
stc
and
movsb
jmp
mov
push
ja
push
and
sbb
xor
std
je
sahf
hlt
jbe
inc
test
mov
push
sti
pop
dec
xchg
outsb
xor
mov
addr16
cmp
xchg
inc
std
sub
inc
ljmp
mov
add
insl
jecxz
js
xor
xor
mov
cli
mov
sahf
jae,pt
jmp
divb
xchg
into
cmpb
jnp
imull
pop
cmp
lcall
dec
leave
mov
lea
mov
ss
fdivl
push
jns
jnp
lcall
negl
mov
movsb
sti
adc
fdivl
cmp
lea
jle
xor
data16
mov
cmp
mov
rorb
cmp
fdivr
push
sub
adc
daa
data16
hlt
adc
inc
lock
inc
pop
pop
rorl
sbb
mov
aaa
pop
hlt
push
mov
sbb
dec
fs
push
stos
push
or
sub
incl
inc
sub
scas
adc
cmp
rdmsr
xchg
test
pandn
sbb
sbb
call
jp
cmp
das
iret
jle
or
mov
pop
mov
orl
pushl
jnp
in
add
daa
stc
pop
push
or
mov
jge
popa
sarl
insb
sbb
jmp
call
mov
data16
popf
adc
je
mov
pushl
seto
and
sbb
test
pavgw
xchg
mov
lods
mov
ljmp
out
scas
xor
xor
inc
clc
xor
pusha
out
stos
adc
or
stos
or
cmpsb
loope
clc
or
ljmp
dec
das
add
repnz
dec
sub
mov
adc
scas
pushl
inc
push
pop
hlt
push
das
sub
sbb
push
std
adc
mov
incl
cmp
popf
hlt
lcall
bound
and
pushf
ficomps
mov
jbe
int3
lcall
or
xlat
in
push
fistpl
fistps
xchg
push
filds
lcall
jg
mov
fwait
mov
pop
rcll
repnz
stc
call
jmp
sbb
lea
arpl
inc
mov
mov
and
jmp
inc
cmpsb
out
mov
push
es
fsub
jb
jne
fs
mov
int
std
or
and
clc
idivb
sub
pop
cmp
cmp
push
cmpsb
loop
and
xchg
sub
pop
sarb
pop
fimull
sahf
in
dec
out
inc
pop
lcall
mov
push
lahf
pop
mov
xorl
mov
jge
mov
pushl
xor
dec
adc
cmc
out
push
gs
test
push
inc
add
lcall
scas
pop
fiadds
pop
xlat
mov
aas
mov
jnp
add
out
int
fiadds
lock
out
lods
push
add
ljmp
stos
adc
pop
mov
ljmp
sub
cmp
jg
loope
jnp
mov
je
cltd
push
je
sahf
arpl
dec
aad
loop
sbb
jae
cmp
scas
mov
jmp
jmp
inc
cwtl
shll
stc
jne
movsl
dec
mov
xchg
std
mov
lcall
scas
leave
addr16
pop
mov
push
mov
cmp
adc
fucomp
add
adc
enter
and
mov
aaa
pop
cwtl
cmp
stc
inc
gs
pop
sub
add
decl
pop
sub
imul
pop
mov
mov
call
push
dec
lret
cmp
inc
outsb
enter
aad
movsl
mov
adc
into
sbb
mov
cmp
dec
xchg
decl
aad
in
cmp
pop
mov
dec
push
clc
pushl
inc
sub
xlat
sbb
movl
cmp
fwait
sbb
cmp
push
std
ljmp
push
or
std
push
into
inc
sbb
push
pusha
pop
jmp
cmc
mov
jle
ljmp
sahf
testb
dec
sub
pop
arpl
sub
pop
xchg
or
shrl
or
or
mov
es
xchg
dec
cmpsb
dec
daa
lcall
dec
rolb
out
in
adc
ds
dec
adc
xor
std
push
dec
push
mov
jmp
mov
pop
je
cmp
mov
jbe
lret
inc
cwtl
movsb
loop
and
aam
cs
jae
xchg
in
lds
inc
ds
and
push
cmpsl
lret
mov
lcall
cli
dec
and
jp
sahf
adc
jbe
int
insl
jnp
inc
xor
loopne
pop
jno
incl
fisubrl
inc
les
iret
int3
push
mov
and
movsb
mov
inc
lcall
ja
call
pop
push
mov
dec
aad
xchg
add
xor
sar
xchg
ljmp
insb
or
mov
sbb
mov
cmpsb
cmc
ficoml
scas
cli
mov
dec
lcall
sub
loope
xchg
cmp
xor
call
imul
inc
test
add
xchg
fadd
xlat
or
ljmp
sub
jmp
lahf
fnop
pop
daa
jns
or
in
icebp
fnstsw
dec
test
lcall
push
adc
dec
push
pop
jno
test
sbb
imul
xor
jae
mov
shr
mov
cmp
jb
repz
aaa
cmp
cs
lods
mov
and
jno
push
leave
lds
mov
incl
les
icebp
pop
xor
cmp
mov
aad
and
out
xor
mov
mov
push
loop
push
hlt
loopne
xchg
mov
cwtl
pop
mov
and
sub
in
cmpsb
call
decl
pop
dec
push
leave
cmpsb
adc
xor
mov
andl
mov
lock
and
mov
mov
push
pop
bound
mov
pop
in
push
imul
push
ljmp
xorl
fwait
jo
lock
incl
push
add
popa
repnz
xor
test
dec
mov
ret
push
jno
ss
fisttps
leave
inc
stos
jmp
inc
adc
fwait
lods
mov
mov
mov
and
inc
je
or
call
cli
add
dec
fisubrs
popa
sbb
pop
push
jg
lret
pop
and
call
inc
aaa
bound
or
clc
xchg
ja
sarb
dec
and
mov
mov
pushl
nop
leave
sub
sbb
and
xor
mov
inc
cmpb
decl
inc
pusha
adc
sbb
ds
cmc
push
jno
and
cmp
jl
cmc
ljmp
lods
movl
dec
mov
push
mov
inc
dec
or
sbb
adc
or
dec
xchg
xchg
mov
sub
xchg
adc
xor
inc
sar
ljmp
int3
xlat
insl
sarl
mov
pop
jns
mov
jmp
ja
aaa
xchg
inc
das
fld
fiadds
mov
mov
xchg
arpl
stos
adc
fisubl
fstpt
lcall
push
daa
cltd
aas
dec
stos
sbb
sbbb
ret
test
jmp
fidivrs
jns
mov
inc
adc
sbb
icebp
add
push
xlat
xchg
das
popf
push
jno
aad
decl
adc
add
and
ljmp
dec
mov
xchg
pop
dec
in
mov
mov
out
xlat
fnstcw
jo
je
push
test
xor
das
jmp
gs
sub
mov
notl
movsb
pop
mov
test
clc
int
or
jg
xchg
xchg
out
out
call
les
xchg
xchg
sub
and
testb
or
mov
mov
mov
dec
leave
inc
shll
push
jl
pop
pop
sub
mov
cmpsl
scas
outsb
imul
inc
lcall
cld
es
sub
mov
mov
lahf
or
mov
cmp
lahf
std
or
movsl
cld
dec
mov
icebp
std
cmp
mov
js
add
push
push
lods
or
lcall
lock
mov
add
ljmp
out
jecxz
pop
out
push
rcrb
sub
enter
xor
pop
ja
decl
pushf
dec
in
sti
mov
push
push
loopne
mov
push
xor
aam
aad
xor
xchg
mov
push
jecxz
mov
xchg
sbb
mov
dec
adc
fucomip
sete
decl
daa
es
mov
jge
push
or
add
or
cltd
das
lods
add
jmp
push
pop
cs
cmc
popa
adc
jmp
scas
jge
sar
fbstp
into
cmpsb
mov
jne
sub
adc
sub
dec
lods
ljmp
add
stos
dec
push
adc
xor
inc
stos
pushf
inc
mov
imul
call
xchg
push
push
jnp
out
add
jno
pop
mov
lods
testl
mov
adc
ja
xchg
add
into
xor
fimuls
ja
mov
pop
push
les
jo
arpl
fs
and
push
sbb
adc
incl
int3
adc
stc
push
popa
dec
movsl
push
dec
mov
in
or
repnz
xor
lcall
imull
loopne
test
arpl
sbb
out
arpl
sti
or
leave
outsw
mov
es
xchg
movsl
mov
roll
es
cmc
fsubrl
cmp
xchg
decl
inc
pop
jl
mov
sbb
sub
xor
adc
xchg
fsubr
nop
mov
adc
aaa
ljmp
cli
decl
adc
mov
dec
or
loope
iret
loop
pop
popa
scas
inc
int3
jmp
lcall
sub
fxch
dec
in
dec
fists
xor
cli
push
repnz
ljmp
push
mov
xor
push
jne
bnd
clc
mov
hlt
add
inc
lcall
insl
sub
cmp
loope
mov
jne
or
and
sbb
in
lods
jl
das
xchg
fisubl
xchg
push
mov
xchg
lcall
xorl
ljmp
notb
sbb
xchg
and
cmp
adc
ror
test
jmp
test
jmp
hlt
sbb
cli
movsw
pusha
insb
shrb
adc
test
xchg
scas
pop
stos
sub
fistpll
pop
cwtl
in
jecxz
mov
jge
mov
scas
adc
adc
dec
dec
sarl
psubusb
mov
into
xchg
aad
cmpsl
fs
incl
loope
dec
adc
push
xor
cmp
in
into
iret
jne
cmp
rorb
dec
lcall
cld
and
test
test
add
push
pushl
dec
add
xor
or
sti
inc
lods
sbb
mov
sbb
test
decl
mov
fisubl
mov
xchg
imul
loope
mov
cmp
adc
ljmp
push
adc
add
sbb
je
lock
imul
insb
xchg
mov
fcomip
lds
cwtl
sub
orb
ss
in
xchg
xchg
lcall
push
int
pusha
cltd
jle
sti
xchg
xor
inc
xchg
imul
mov
stos
mov
das
mov
xor
out
nop
das
push
movb
in
sti
jo
jmp
cmp
jg
jle
psubw
add
out
sub
orl
popf
dec
call
pop
jnp
push
lea
ss
mov
sub
mov
test
cs
incl
xor
cs
fnstcw
call
cmp
and
add
pop
fmull
roll
sbb
mov
mov
lret
pop
or
sub
cld
jecxz
decl
xlat
call
xlat
xor
cmc
les
push
mov
imul
push
int
or
rclb
sub
rclb
cmpb
and
sahf
cld
mov
lahf
or
scas
cli
jmp
fwait
mov
xor
mov
incl
pop
into
fisubl
adc
js
lods
into
xchg
idiv
stos
xor
adc
lcall
fstps
pop
adc
xchg
lcall
loopne
ja
mov
das
clc
lcall
xchg
aaa
xchg
je
push
adc
lock
je
int3
pop
xchg
cmp
xchg
popa
cli
dec
aaa
jge
jmp
add
dec
mov
ljmp
test
loop
mov
lods
mov
shlb
cmp
mov
dec
push
fisubs
int3
push
mov
dec
push
xchg
lahf
and
xor
pushl
cmc
jns
cmp
ds
sub
out
lret
ljmp
subl
sub
jge
inc
cmp
jg
or
rcrb
lcall
jmp
push
ret
push
out
fnstcw
jo
test
cltd
fucom
mov
test
mov
cmp
jp
fisttps
mov
arpl
xchg
push
popf
pop
jecxz
std
int
call
out
aas
inc
inc
movsl
xchg
dec
and
xor
lea
std
mov
xor
decl
insb
xchg
push
mov
repnz
cmpsb
mov
mov
jb
lfs
jge
das
rcrb
pop
or
iret
inc
pop
sub
inc
jb
sbb
mov
daa
mov
call
pop
in
jno
scas
ss
addr16
decl
jno
inc
ret
sbb
mov
inc
movsb
notb
adc
push
scas
pop
ds
mov
jo
into
adcb
and
pop
xchg
inc
and
in
sahf
pop
or
incl
inc
mov
jl
dec
subb
shll
out
out
inc
jp
mov
fistpll
add
pop
mov
mov
int
ljmp
mov
push
mov
inc
add
sbb
cld
fisttpll
xchg
out
pop
test
mov
in
pushl
push
or
mov
js
inc
push
pop
das
iret
and
out
out
jmp
mov
arpl
lods
mov
lods
imul
add
mov
push
out
mov
jg
aam
push
iret
xchg
in
push
and
cmpsl
push
pop
lret
push
and
jg
jmp
shlb
faddl
xchg
xchg
fimull
mov
pop
stos
lds
call
loopne
adcb
es
sbb
adc
add
fisubrs
fcomip
daa
int3
stos
sahf
sub
push
outsb
repnz
push
jbe
test
mov
decb
pushf
cltd
mov
arpl
loop
cmc
pushw
inc
call
cmpsb
out
add
dec
ljmp
add
movsb
add
mov
popf
xchg
mov
jnp
notb
jg
decb
jg
testb
xchg
add
or
mov
dec
cmpsl
hlt
jmp
jl
ljmp
mov
jle
mov
or
gs
add
ljmp
or
sbbb
mov
ret
inc
dec
fisubrs
shlb
mov
jmp
xchg
cwtl
mov
lds
filds
aaa
and
in
pop
in
pop
fsts
incl
cmc
pop
popf
incb
loope
sbb
lds
add
jnp
mov
std
jg
scas
dec
mov
xchg
cmp
mov
xchg
out
push
xchg
pop
inc
sub
push
jg
call
inc
add
xlat
cmp
mov
and
lcall
sub
ljmp
dec
enter
cwtl
cmp
sub
xchg
lcall
jg
in
cmp
xchg
jecxz
cld
pop
addb
xchg
mov
fstps
cmp
lcall
in
adc
inc
dec
mov
orb
daa
scas
xlat
pushf
xchg
rolb
cmpsb
mov
lcall
push
xchg
inc
aad
push
jl
mov
mov
lods
sub
fneni(8087
stc
inc
sahf
ret
inc
xor
mov
jp
or
jnp
repz
mov
xor
mov
push
cmpsb
aas
cmp
subb
call
incl
pop
ss
in
or
sti
jle
int
shr
mov
sbb
mov
lcall
mov
push
xchg
popf
or
pop
lcall
ja
imul
scas
lahf
aam
cmpsl
imul
test
push
out
gs
push
push
mov
addl
mov
sub
aas
dec
pop
mov
nop
push
clc
ret
lods
out
sarl
and
daa
jl
push
sti
sti
mov
loop
inc
daa
test
cmpb
es
in
mov
in
inc
test
mov
fwait
lods
adc
ret
inc
push
or
call
mov
and
ljmp
icebp
mov
scas
pop
in
movaps
ret
jmp
xchg
adc
cmp
ss
sub
scas
push
sarb
mov
jg
sub
dec
insb
cwtl
lods
jecxz
decl
adc
push
mov
ret
dec
cld
fcmovnb
sbb
xor
decl
sbbl
xchg
je
enter
add
mov
bound
std
adc
in
mov
pop
lahf
xor
fbstp
mov
cmp
test
mov
out
inc
mov
sbb
adc
jle,pt
pop
rolb
push
popa
idiv
call
cwtl
aam
mov
and
into
les
jp
jmp
scas
les
loop
mov
push
lcall
int
lods
cmpl
mov
call
push
ss
push
cmp
push
mov
outsb
test
push
ret
xchg
ljmp
pop
xorb
pop
orl
std
into
ja
lea
push
popa
loop
mov
mov
ljmp
cli
cmpsl
and
arpl
inc
jb
jo
js
test
inc
pop
cmp
andb
sar
pushl
mov
insb
in
adc
adc
dec
enter
adc
mov
mov
jmp
loopne
ret
cmp
pop
hlt
mov
push
lahf
mov
incl
push
pop
xchg
inc
pop
mov
cmp
sahf
push
xor
mulb
cli
ret
imul
add
pushl
cld
jmp
and
orb
and
es
xchg
cs
pop
fdiv
push
xor
xlat
pushl
cmp
clc
xchg
fiaddl
call
pop
jb
stos
ljmp
clc
and
repz
dec
sbb
call
jge
mov
in
pushf
push
andl
cli
and
jbe
lret
sub
jl
xchg
ljmp
push
in
ljmp
add
inc
out
jmp
stos
cmp
divl
mov
lods
push
pushf
adc
fdivrp
jg
lcall
pusha
pop
inc
push
imul
jmp
in
push
push
jg
enter
cli
decl
jmp
or
xchg
push
daa
popf
sub
pop
sbb
inc
add
ds
fiadds
loope
jmp
stc
add
add
mov
pop
cmpsl
outsb
fbstp
push
out
das
mov
sar
ljmp
adc
mov
aaa
sbb
pushl
lret
mov
ss
cmp
aas
movsl
mov
lods
push
sub
shll
mov
jmp
xchg
pop
adc
inc
mov
or
sbb
pop
imull
xchg
jmp
xchg
cwtl
push
mov
das
clc
jmp
movsb
jle
mov
shlb
jns
jl
inc
dec
push
add
pop
mov
loope
jg
jmp
or
jo
lret
dec
fmul
mov
dec
xor
sub
and
enter
repz
pop
lods
subl
mov
dec
cmpsl
pop
enter
or
decl
inc
or
fistps
jecxz
pop
inc
and
push
push
pop
sbb
pop
or
or
loopne
inc
lods
ljmp
sbb
popa
jmp
mov
orl
loope
push
pop
dec
mov
jge
pop
sbb
push
ror
int3
inc
es
mov
pop
xchg
cmp
leave
mov
fdivrp
in
pusha
sbb
pop
pop
ror
mov
pusha
int3
insb
mov
pop
xchg
leave
mov
cmc
clc
out
mov
adc
fildl
dec
out
outsb
add
push
pop
insl
pop
js
pop
jns
xor
ljmp
stos
imul
and
clc
inc
inc
sahf
add
and
icebp
test
jg
jo
iret
push
aaa
and
xchg
sbbb
add
push
fadds
mov
or
mov
in
dec
push
jl
lret
les
incl
push
mov
dec
inc
shrl
arpl
pop
outsb
fisubl
mov
cmp
xorl
lods
inc
decl
lock
mov
hlt
xor
mov
sbbb
mov
or
decl
pop
loop
pop
in
mov
js
rolb
mov
in
fsubrs
nop
add
and
mov
aaa
pop
jmp
xor
mov
jl
out
repz
xchg
xor
aad
inc
add
gs
pop
cmp
mov
inc
adc
incl
mov
jns
stos
xor
xor
jnp
cli
adc
insw
jg
pushl
sbb
clc
inc
dec
mov
adc
ret
adc
mov
sbb
xchg
fstps
dec
push
or
stc
imul
mov
jmp
push
xchg
mov
aad
mov
dec
loop
mov
sti
mov
xchg
xor
sti
clc
mov
pop
into
xchg
repnz
bound
xchg
insb
aad
lcall
mov
inc
xor
add
arpl
inc
ss
mov
pop
outsl
mov
inc
jo
inc
xchg
mov
stos
sti
mov
lahf
movsl
push
out
push
pop
and
jg
dec
scas
lock
fmul
xlat
push
es
nop
lds
insb
es
pop
sub
pop
cwtl
icebp
lcall
stos
imulb
scas
pop
arpl
jnp
xor
stos
xchg
ljmp
subl
xchg
popa
sub
xchg
pop
sbb
pop
movsb
loopne
mov
dec
xor
ja
push
std
call
adc
loope
jo
scas
adc
stc
dec
stos
mov
call
loopne
in
adc
adc
sbb
sub
dec
pop
jbe
jp
int
mov
ljmp
mov
aad
arpl
sub
jb
xor
movq
fsts
cwtl
jmp
cmc
int
lods
sbb
mov
imul
add
loop
movsb
dec
cmp
cmpsb
xor
and
jo
scas
adc
outsb
mov
pushf
stos
add
mov
cltd
inc
jecxz
pushl
in
xchg
xchg
sub
clc
pop
add
pop
test
adc
mov
mov
rcl
push
ds
popa
xchg
jmp
lahf
sub
ljmp
jmp
push
cmp
scas
dec
lods
fidivs
ss
sub
lcall
sbb
pop
call
loopne
scas
outsl
or
push
mov
xor
decl
push
cmp
pop
sbb
inc
ret
fmull
jle
adc
inc
imul
jmp
jge
add
js
and
and
pop
imul
cmp
decl
ljmp
xor
add
and
daa
add
gs
fcomip
cmp
aad
fnstsw
js
jmp
daa
mov
mov
pushf
int
jg
cmp
mov
sub
ficompl
lock
fimuls
popf
mov
cli
jmp
pop
sub
popa
or
inc
lods
out
sub
aaa
adc
jp
sbb
xor
cwtl
push
xchg
push
mov
cmp
sbb
or
subl
pop
xchg
sahf
add
mov
sbb
push
push
mov
outsl
js
cld
test
test
xor
dec
rol
xchg
out
jg
in
or
outsl
clc
decl
and
pop
pop
gs
mov
pop
push
add
inc
add
dec
insb
pop
cmc
incl
sti
popa
lods
dec
adc
ret
inc
aaa
cmpsl
out
pop
jecxz
inc
scas
push
stos
cmp
out
pop
lahf
and
out
arpl
popf
mov
mov
popa
xor
or
cli
incl
sub
dec
in
adc
out
xchg
jle
pop
sbb
ljmp
leave
cmp
xchg
sahf
popf
nop
cmp
dec
mov
stos
push
ficomps
mov
in
incl
xchg
or
pop
cmp
mov
mov
aam
addl
dec
incl
insl
mov
inc
dec
loopne
repz
xchg
loopne
sbb
and
ficoms
pop
fs
lcall
cmp
dec
adc
gs
jbe
xchg
inc
and
fsubrs
push
pop
call
js
and
lods
jbe
push
and
addr16
pop
loop
mov
ss
jmp
sbb
popf
cmp
xor
shlb
pop
jno
aas
sbb
mov
mov
lods
adc
lcall
jnp
es
ljmp
movsl
mov
test
cmpsb
jb
cmp
adc
int3
mov
ficomps
rcr
scas
or
cld
lcall
bound
push
in
clc
xchg
mov
dec
pop
mov
xchg
daa
push
mov
sarb
imull
and
mov
jp
inc
push
mov
fstl
loope
mov
sti
sbb
dec
jge
outsl
ljmp
sub
inc
push
lret
or
aad
push
push
aad
pop
ljmp
std
xchg
mov
mov
and
lock
adc
xchg
ljmp
jne
adcl
mul
stc
add
test
sub
or
pop
mov
push
lahf
cmp
cmp
cmpsb
test
sbb
lea
mov
mov
into
sbb
inc
inc
lods
sbb
popf
mov
int
ljmp
add
rcrb
push
or
mov
dec
or
inc
xchg
push
pop
jge
ss
incl
in
xchg
push
ja
or
lods
inc
clc
xor
xchg
mov
inc
imul
lcall
cmp
xchg
mov
shrb
orb
sub
dec
mov
ljmp
leave
adc
mov
sub
mov
jmp
clc
aam
pop
mov
or
popl
add
and
popf
inc
xchg
in
xor
mov
adc
pushl
add
push
pop
sahf
sbb
jb
sbb
cmp
adc
mov
xor
pushl
jb
popa
arpl
and
frstor
scas
mov
mov
outsb
das
fwait
cli
mov
inc
mov
das
in
psrlw
and
stos
nop
mov
push
push
es
jo
les
adc
loop
mov
dec
xchg
mov
rorl
push
pop
pop
test
inc
inc
adc
ret
push
dec
and
inc
xlat
pop
dec
xchg
stc
popa
cmp
icebp
decl
lods
push
insb
scas
hlt
and
iret
jns
dec
mov
pop
mov
jg
push
stos
inc
shr
call
jae
xchg
mov
inc
out
push
adc
mov
out
lcall
push
cmp
jns
adc
sbb
shrb
xchg
mov
lods
adc
pushl
inc
and
shl
rol
out
sub
jp
sub
add
mov
mov
or
testl
jb
xchg
pushf
push
and
out
inc
jne
cmpsb
in
out
fsts
cltd
addr16
inc
sbb
mov
pushf
out
mov
mov
pop
jmp
decl
fisubrs
mov
shrl
movsl
lret
pop
je
movsl
adc
pop
sbb
mov
test
stos
bnd
add
insl
fisttpll
movsb
and
int
call
push
xchg
jp
push
cmp
js
mov
test
mov
in
rcl
mov
decl
cmpb
out
pop
std
movsb
pop
fdivl
mov
fwait
add
or
push
wbinvd
jo
decl
clc
es
stos
rcrb
sbb
xor
fistpl
or
call
lcall
fiaddl
icebp
mov
or
sub
sbb
jo
and
cmp
push
pop
ljmp
popa
subl
rolb
jno
test
mov
ds
clc
call
cmp
cmp
inc
lea
mov
dec
js
movsl
fnstcw
sub
div
incl
pop
in
cmp
or
mov
ret
fldt
mov
ljmp
fisubrs
in
mov
cli
cwtl
cmp
out
jnp
sub
daa
mov
aam
out
clc
jmp
dec
popf
push
sti
inc
push
jge
mov
xor
pusha
pop
inc
rcll
inc
jmp
dec
inc
fildl
add
and
lcall
mov
and
pop
mov
dec
push
inc
sbbl
xor
jo
es
and
sbb
ret
mov
push
jmp
mov
jmp
repz
imul
test
pop
pop
jmp
decl
sarl
cmp
addr16
jmp
mov
aam
sbb
inc
inc
jo
push
pop
jp
or
decl
fs
insb
mov
inc
push
jge
inc
jo
test
incl
bound
mov
adcb
fmul
and
fwait
lret
aam
call
fucom
adc
daa
lahf
inc
cs
mov
push
outsl
cmc
leave
mov
xchg
nop
fs
mov
loope
call
dec
popa
int3
mov
fdecstp
repz
aas
stos
int3
dec
mov
iret
out
es
jbe
inc
lcall
mov
mov
lea
imul
mov
mov
ficomps
outsl
cltd
push
in
sbb
inc
and
jge
pushl
lcall
jbe
cmp
mov
ret
popf
stos
push
pushl
loopne
inc
cs
xchg
or
daa
pusha
scas
add
or
test
sub
call
jne
push
rolb
imul
mov
jmp
dec
mov
incl
xchg
hlt
in
xor
pop
sti
int
lds
pop
dec
cli
les
and
inc
pop
lods
xchg
jb
inc
lret
jmp
mov
xor
sub
pop
adc
jmp
into
xlat
push
std
xchg
call
xor
daa
clc
fyl2x
sub
ret
fidivrs
xor
es
loopne
add
dec
add
sti
faddp
sbb
fucomip
adc
pop
jnp
call
in
scas
leave
inc
push
sbb
outsl
fidivrs
jg
arpl
or
outsl
cmpb
jmp
xlat
jmp
add
cld
sub
and
sahf
cmp
or
mov
ja
cmpsb
incl
adc
es
mov
push
insb
inc
mov
fimuls
test
pop
into
in
in
sbb
mov
xchg
adc
mov
pop
fxch
inc
in
jle
sbb
jae
push
jo
inc
loop
aas
pop
pusha
stos
push
mov
push
pop
ljmp
mov
push
inc
cwtl
ret
pop
sub
xlat
xchg
xor
inc
das
mov
cmp
mull
js
cmp
sub
in
sbb
lcall
mov
jg
jns
out
add
das
mov
and
call
mov
pushl
xchg
jno
jno
push
sbb
fistpl
scas
pushf
xor
lock
add
mov
fucomi
test
or
cmp
pop
sub
push
je
in
lock
cmp
adc
call
std
idiv
scas
fnstsw
cli
mov
dec
xchg
pusha
mov
ja
aaa
push
int
imul
push
mov
rcl
add
pop
out
mov
or
mov
icebp
fs
ljmp
dec
sub
sbb
jae
in
adcl
cwtl
pop
js
rcll
inc
mov
shrl
xchg
es
dec
aam
add
pop
and
loopne
mov
shll
mov
clc
adc
mov
ss
daa
in
xchg
mov
pop
loop
sti
cmp
fsub
shrl
xchg
pop
clc
lcall
lods
xor
in
mov
ljmp
faddp
scas
cmc
lahf
imul
fdivrp
dec
scas
xor
jo
fcmovb
and
lcall
ffree
sbb
test
and
push
fidivl
xlat
ja
adc
cs
or
ds
imul
ljmp
adc
mov
sbb
out
sbb
dec
fimull
dec
enter
or
sbb
loop
jnp
xor
lea
mov
aaa
push
cld
pushl
sbb
dec
xchg
inc
popa
add
arpl
fninit
ret
aam
cmp
mov
cmp
test
and
fcom
mov
lret
mov
cmp
push
jne
movsb
push
adc
sub
adc
into
adc
sub
push
and
dec
sar
add
pushl
and
cmp
dec
or
jmp
in
in
out
and
jb,pt
fs
incl
xchg
ret
pop
jnp
fwait
test
aaa
pop
inc
stc
es
sbb
testb
lcall
insb
mov
lea
mov
hlt
mov
lea
shll
jo
and
ljmp
cli
cmpsl
sbb
fdivrl
cli
xor
mov
mov
test
add
mov
fisubrs
pop
mov
in
push
pop
out
lds
sub
incl
mov
cmp
inc
fcomps
dec
mov
call
decl
and
push
pop
push
imul
dec
adc
into
js
std
lods
mov
imul
mov
xchg
cmp
setno
ljmp
jg
fnsave
xor
jmp
adc
andb
movsb
add
mov
sub
int
fcompl
ljmp
inc
aas
mov
iret
outsl
jmp
inc
and
push
jg
decl
cltd
mov
pop
mov
fcmove
pop
mov
sti
lret
fdivs
lcall
jbe
mov
mov
or
clc
in
mov
mov
adc
ret
js
call
ljmp
pop
divl
cmp
ljmp
xor
sbb
jecxz
lock
inc
testl
ret
std
mov
pushf
nop
icebp
ljmp
sub
jg
sub
ljmp
pop
in
test
je
inc
aam
adc
push
lods
jnp
nop
lds
ljmp
push
jnp
push
fnstcw
push
mov
rcll
cmp
fldt
incl
test
pop
leave
cmp
sarb
ja
push
pop
mov
stos
enter
pop
dec
xor
and
pop
push
lcall
divb
subb
dec
les
mov
dec
xor
xor
push
and
test
xchg
mov
dec
jns
js
pop
cmpb
push
xchg
out
cmpsl
sub
jne
dec
dec
mov
lds
idiv
jg
mov
scas
mov
inc
push
aam
test
push
inc
and
ret
and
pushl
cmp
test
sub
jl
push
mov
ss
shl
fs
pop
xchg
out
dec
cwtl
loopne
push
or
btc
das
shrb
lods
les
mov
pushl
es
jno
mov
sbb
xchg
sub
outsl
and
add
cld
lods
mov
push
hlt
ja
inc
popa
push
mov
pop
aad
dec
pop
xchg
xlat
into
or
cmc
add
insb
dec
add
rorl
mov
jge
push
seta
iret
cmp
push
rcl
call
jmp
jnp
mov
pop
mov
dec
and
push
dec
or
jmp
jo
mov
iret
arpl
in
inc
jae
js
dec
out
adc
cmpl
sub
jbe
cmp
cwtl
js
decl
jmp
sarl
inc
inc
enter
loopne
lock
in
push
mov
xchg
ret
ljmp
outsb
sarb
inc
sbb
cmc
mov
fists
divb
xchg
loop
ljmp
cmpsl
mov
dec
pop
shrb
out
repnz
aam
add
xor
mov
xchg
clc
jg
incb
lock
addr16
jnp
xor
aaa
push
mov
ljmp
cld
pushf
mov
xchg
cld
dec
inc
xor
push
pop
pop
xor
repnz
fcmovbe
mov
ret
sub
mov
loop
sub
loopne
cmp
jnp
sbb
pop
stos
pop
add
inc
jnp
sub
rcll
xorb
enter
outsl
out
cs
jecxz
stos
pop
sahf
cli
lcall
sbbb
sub
int
jp
popa
dec
push
mov
mov
mov
in
dec
sub
test
jmp
add
jae
shrl
pop
add
aad
pop
push
clc
xor
sti
add
ds
outsb
pop
adc
clc
out
clc
inc
xor
fldt
imul
jge
push
call
lcall
jo
xchg
pop
outsl
dec
fistpl
add
pop
adc
cmp
and
outsb
cld
decl
xor
cmp
push
xlat
mov
dec
cmpsb
in
aaa
mov
in
jbe
aaa
pop
jmp
add
cltd
push
sub
fwait
xor
imul
cmc
pop
xor
incl
and
push
push
cmpl
sbb
inc
scas
sbb
jg
push
fdivr
adc
add
pop
pop
mov
sub
nop
mov
decb
jnp
pop
ljmp
movsl
sbb
xor
cmc
mov
imul
andl
decl
mov
daa
mov
push
loop
gs
cmpsb
pop
jmp
repnz
out
clc
sbb
push
imul
mov
movsl
sar
pop
addb
arpl
ljmp
rolb
scas
and
cmp
dec
push
or
sub
sbbl
sqrtps
js
movsw
insl
je
outsb
cmp
stos
xor
pop
into
movsl
fwait
add
jae
call
mov
test
adc
xchg
mov
sub
mov
jae
sti
in
mov
or
xor
inc
xchg
dec
repnz
shll
ds
pop
stc
fistpl
mov
aas
jmp
cmpb
mov
push
pop
mov
stc
mov
dec
jne
nop
jle
out
pop
iret
je
fdivrs
pop
push
pop
ljmp
enter
aad
hlt
ror
out
sbb
int
rep
sbb
and
xor
lret
ljmp
dec
imul
adc
lock
fimuls
mov
arpl
jg
stc
negb
fdivrl
pop
cmp
addr16
cmpsb
pop
push
push
inc
addr16
sub
jmp
xchg
mov
into
int3
out
push
out
sbb
dec
cmp
adc
ss
sbb
imul
jmp
adc
sub
inc
or
fwait
out
aad
jnp
lea
pushf
jo
mov
push
cld
jmp
insb
in
or
hlt
xchg
lret
mov
push
push
jb
pushl
movsl
ss
inc
xor
sbb
call
jae
aam
jo
js
mov
lods
adc
pop
icebp
jmp
repz
cmp
mov
loop
in
cwtl
xor
lea
ljmp
xor
inc
aaa
cmp
dec
call
dec
shlb
test
pusha
inc
cwtl
add
mov
cmp
jb
mov
fs
dec
addr16
jg
jmp
mov
and
hlt
mov
jp
mov
loope
cltd
mov
and
call
or
mov
lahf
cmpsb
cmpsb
stos
out
pop
adc
loopne
aam
mov
ret
fdivs
adc
or
push
mov
data16
pusha
out
mov
ret
push
lcall
push
int3
push
adc
or
scas
les
or
incl
fstps
jg
inc
jl
fistl
clc
mov
jns
pop
sbb
ljmp
fwait
loop
add
push
adc
bnd
cs
jmp
cli
sub
pop
sbb
pushl
sahf
test
jb
adc
jb
pop
adc
inc
jno
push
loope
ds
ljmp
mov
pop
inc
push
lcall
fmull
push
push
push
mov
xchg
popf
mov
incl
divl
add
mov
pop
pop
push
jae
test
insb
mov
aaa
loope
mov
rcr
addr16
inc
sbb
sbbb
mov
sti
or
decl
lods
shl
out
dec
inc
xorl
sub
lods
pop
fsts
ret
mov
aas
sbb
jo
mov
ret
mov
ficoms
fldl
incl
mov
cld
call
xchg
jne
xchg
dec
pushl
out
cmp
add
loopne
jbe
incl
push
jo
sbb
inc
xchg
pop
pop
std
mov
xchg
sbb
push
sbb
pushf
xchg
cmp
add
incl
pop
ror
jne
in
sub
pop
repnz
out
lcall
iret
mov
ljmp
sub
fnstsw
xor
bnd
sahf
in
add
xor
lods
mov
pop
xor
mov
add
xor
dec
sbb
sub
sub
mov
jmp
test
ljmp
sti
pusha
inc
push
stc
sbbb
inc
aaa
pop
lret
decl
idiv
xor
fs
jp
inc
popl
add
incl
lea
pusha
xchg
mov
push
es
cmp
mov
mov
mov
out
js
mov
loop
sbb
push
jo
fcoms
rcl
xor
hlt
add
call
dec
clc
fidivs
incl
pusha
stc
test
rorl
cld
pop
out
push
jge
dec
out
aam
stos
es
scas
clc
xchg
mov
lret
sbb
rcrb
out
movsl
lock
movsb
out
in
jns
dec
mov
and
aaa
jns
add
testb
pop
and
pusha
cltd
mov
lcall
push
and
sbb
and
cltd
cltd
daa
clc
lcall
incl
add
mov
stc
mov
lods
xor
mov
push
jle
jmp
mov
lods
ja
jmp
andl
mov
fildll
aam
movsl
std
fwait
mov
jb
fisttps
or
or
jecxz
jmp
mov
rcrl
xchg
sahf
mov
pop
push
mov
pop
sub
inc
call
shl
call
lret
cmpsb
mov
out
lea
push
mov
incl
adc
pop
mov
mov
mov
aaa
std
mov
aaa
mov
bound
enter
jmp
sub
jmp
sub
jae
dec
ljmp
jo
movsl
mov
in
pop
cmpsb
or
adc
mov
lcall
fisubrs
xor
xchg
adc
icebp
lcall
mov
jno,pt
arpl
pushl
xchg
lcall
ljmp
mov
stos
clc
jg
dec
cmp
dec
inc
fwait
mov
cwtl
jmp
jne
mov
out
ljmp
dec
mov
xchg
iret
js
xor
inc
jl
lret
and
popf
dec
ud0
in
mov
sub
movsl
jp
andb
aaa
mov
mov
add
jb
ficoml
pushl
test
pop
setl
ljmp
scas
pop
cmc
rcrl
jecxz
pop
jg
ljmp
cmpsl
push
inc
xor
cmp
mov
dec
jo
je
inc
xor
jg
andb
pop
jo
jns
sbb
sub
repz
call
std
xor
cmp
addb
test
pop
sbb
mov
jg
mov
rclb
call
push
invd
and
dec
dec
fldenv
mov
inc
add
push
pushf
jnp
cmp
mov
pushl
test
sbb
idivl
mov
inc
jne
adc
pop
mov
fs
mov
pushl
or
dec
mov
sti
js
stos
idivl
scas
inc
sbb
cli
inc
shll
stc
out
js
xchg
fdivrs
lds
scas
icebp
pop
adc
or
adcb
negb
xchg
sbb
jmp
fcmovnu
ret
inc
cmc
mov
inc
out
ds
and
fstpl
lock
decl
out
out
jb
add
xchg
lds
pop
stos
enter
push
sub
ljmp
pop
outsl
sub
cmp
push
adc
xlat
test
xor
push
push
push
mov
mov
dec
test
lea
iret
les
sti
push
jg
push
repnz
xor
cmp
adc
sarl
mov
scas
insl
stc
fisttps
lcall
mov
outsl
jmp
add
jbe
mov
repz
xchg
faddl
and
or
jae
js
data16
push
jl
cmc
addb
sbb
loop
lds
faddl
lret
incl
push
mov
mov
loopne
add
and
mov
fldln2
mov
test
call
test
ret
arpl
test
cwtl
inc
mov
fwait
adc
leave
ljmp
sub
pushl
outsb
and
xor
dec
cmp
xchg
pushf
sub
mov
sbb
pushl
inc
icebp
int3
mov
pop
movsb
jbe
arpl
imul
ds
push
or
or
mov
ret
pop
push
and
mov
mov
call
add
rcrl
pop
mov
sub
inc
jmp
call
and
adc
or
out
mov
rcrl
jmp
pop
fs
dec
ss
ficomps
sti
mov
out
arpl
jne
sti
pop
add
push
ret
std
dec
fnstcw
cmp
sbb
push
xchg
sti
pushf
xchg
mov
sbb
ret
or
xlat
fcomip
pushl
cli
flds
out
mov
mov
mov
jg
movl
jge
outsl
es
and
js
cmpsl
stc
insb
notl
decl
or
fldenv
add
sub
movsb
nop
daa
sbb
decl
adc
mov
call
mov
idivb
mov
clc
fisttpl
pop
icebp
ljmp
adc
jmp
jns
or
ja
pop
aam
bound
fbstp
call
stos
hlt
hlt
es
xchg
pop
cltd
xor
xorl
loope
xchg
xchg
aad
xor
jb
outsl
lds
or
sbb
xor
lahf
lret
out
clc
outsb
cli
fbstp
bnd
inc
pop
mov
mov
cs
pop
fdivr
call
jo
shrl
pop
pop
out
scas
addr16
adc
add
jmp
xchg
icebp
shlb
jg
or
lcall
mov
xor
mov
ud0
cmp
lock
faddl
in
mov
inc
mulb
stc
mov
lahf
mov
shrb
cli
ljmp
stos
mov
movsl
scas
shl
or
mov
push
mov
in
pop
lret
cmp
ss
inc
jne
ret
and
out
fldcw
add
mov
mov
sub
movsl
and
lret
loop
xor
xchg
stos
or
xor
or
or
ljmp
frstpm(287
in
push
sub
add
out
mov
pushl
pushf
in
cmpsl
and
lds
incl
lds
and
cld
cmp
pop
adc
xchg
jne
xlat
and
sbb
nop
mov
add
sub
jmp
pop
add
jmp
loop
cmp
int
fyl2xp1
inc
cwtl
shlb
adc
subl
mov
inc
xchg
jg
dec
mov
mov
mov
push
scas
inc
dec
pop
subb
jae
jae,pt
in
xchg
xor
xor
negl
fldl
inc
jo
xchg
xchg
outsl
adc
pop
shlb
ja
decl
cmp
xor
fdivs
and
xlat
aad
pop
aaa
fsubs
jns
adc
push
inc
in
jp
sarl
mov
es
jg
inc
out
shlb
xor
xchg
loop
push
cmc
inc
sbb
mov
hlt
cltd
pop
ljmp
add
test
adcl
push
xchg
xor
cmp
lcall
mov
sbb
lcall
fs
and
fmuls
test
sbb
adc
shll
lret
ja
push
xchg
sbb
ljmp
popf
stc
pop
mov
subb
mov
dec
mov
jno
sub
mov
jp
adc
mov
pop
mov
andb
test
xor
add
push
fistpl
out
call
scas
sub
jno
scas
push
mov
dec
mov
add
lahf
hlt
rol
ljmp
mov
mov
rorl
pop
mov
or
xor
push
js
call
out
mov
add
mov
and
mov
jmp
into
jmp
add
outsb
mov
cmp
mov
mov
incl
xchg
xlat
mov
aam
cmp
jb
jmp
out
push
push
mov
inc
mov
jae
sti
xor
lcall
adc
sti
ja
xlat
gs
sub
jecxz
inc
adc
or
in
jnp
push
fisttps
push
xchg
or
cmpsl
jl
hlt
arpl
loop
ficoml
pushl
cld
aas
insl
push
into
les
inc
push
shl
sbb
movsb
pushf
push
jg
cwtl
mov
add
xchg
lret
inc
incb
pop
sbb
cmp
jmp
adc
mov
sub
rcr
cmp
nop
inc
jecxz
mov
repnz
ret
mov
mov
jmp
mov
mov
cmpsl
or
dec
cmpsb
push
push
and
call
jg
in
mov
adc
jmp
aad
push
mov
push
in
inc
inc
jmp
jbe
or
imul
fcoms
dec
mulb
clc
iret
add
lds
std
push
xor
cmc
ljmp
loopne
outsl
cmp
popa
pop
mov
fs
out
sti
sub
cld
out
cltd
rclb
les
gs
push
mov
ljmp
xlat
lock
in
adc
ror
pop
or
add
mov
xor
dec
and
imul
dec
mov
xchg
fldt
xor
push
scas
jg
or
lock
cli
inc
xchg
inc
push
call
repnz
out
stc
sub
jno
es
jg
pushl
inc
dec
xchg
lret
add
loope
push
in
xlat
js
ljmp
loopne
pushf
loope
stos
fistpll
xchg
mov
xchg
gs
pop
movsb
test
pop
int
fbld
inc
fs
sub
stc
sub
movsl
push
gs
ficoml
arpl
xchg
pop
popf
inc
cli
imul
mov
and
adc
inc
shrl
xchg
clc
incl
adcb
fcmovnbe
sub
sub
mov
or
icebp
mov
and
fucomip
call
adc
push
das
decl
orb
mov
sbbb
xchg
sahf
jae
lcall
stos
jbe
cltd
outsl
or
fldl
or
or
into
pop
popa
inc
mov
aam
xchg
out
loop
and
faddl
sub
mov
fcompl
push
sahf
pusha
rcrl
repz
sbb
sti
js
leave
sbb
lahf
mov
lock
sub
cwtl
iret
mov
nop
scas
xlat
cwtl
ljmp
sub
pop
arpl
mov
daa
and
mov
cmp
xor
repz
pushl
pop
aas
cltd
pushf
loopne
loopne
pushl
adc
into
arpl
sbb
and
cmp
jbe
jecxz
decl
mov
je
fwait
hlt
stos
mov
add
mov
test
ljmp
int
decl
xor
subb
jb
ds
xchg
mov
or
call
inc
mov
faddp
push
data16
mov
push
scas
cmp
xlat
mov
or
call
jb
sarb
lea
sbb
ljmp
or
mov
les
scas
gs
xor
out
pop
or
sbb
mov
pop
mov
jo
stos
dec
in
inc
add
jbe
cmc
pusha
xchg
stos
mov
or
decl
inc
cmpsl
xor
mov
in
jl
inc
ret
popa
jl
push
xchg
or
jg
lcall
sbb
pcmpgtb
out
das
dec
jmp
adc
lcall
decl
sub
lods
cmc
push
addr16
xor
dec
inc
inc
and
insb
xchg
sub
add
fidivl
pushl
xor
jge
inc
sbb
mov
inc
lea
movsl
xchg
test
xor
or
fbld
and
sub
jle
add
xchg
sbb
lcall
fimull
or
mov
sbb
inc
add
lods
enter
jae
sbb
mov
jo
test
lock
xor
lcall
cld
movsb
sub
clc
test
cmc
xor
or
inc
xchg
cmc
fldl
cld
jns
sbb
iret
ret
test
stos
int3
jl
shl
jo
xor
adc
mov
icebp
jl
push
sub
inc
xchg
xchg
das
inc
insl
pop
lock
push
stos
cld
cmp
call
jge
lret
mov
xor
ror
push
fildll
cmpsb
sar
pushl
jg
daa
xchg
lret
cs
push
ret
adc
daa
mov
jae
lahf
pop
jecxz
add
lcall
cwtl
push
icebp
adc
mov
xchg
stc
orb
xor
std
aam
je
cli
call
cmp
jno
aas
int
out
sbb
icebp
fcompl
fstl
ret
sub
out
push
jl
hlt
gs
xchg
mov
xchg
and
mov
mov
pop
mov
call
xchg
adc
movsb
sbb
cmc
int
or
or
or
nop
arpl
call
andb
sbb
mov
mov
ret
decl
mov
out
adcb
jb
loop
push
add
nop
test
sahf
push
mov
or
call
fldl
fdivr
call
xor
push
add
xchg
rcrb
or
jb
inc
mov
sti
cmp
das
clc
clc
jmp
and
xor
xchg
dec
addr16
shrl
push
mov
mov
mov
fnstsw
bnd
dec
mov
adc
sarl
jne
cs
popa
mov
out
inc
inc
in
jg
test
in
inc
fsubrs
adc
clc
ljmp
lods
les
add
fstpt
clc
xor
dec
idivl
incl
out
mov
sub
dec
lcall
pop
pop
mov
decl
inc
out
dec
jmp
aam
push
sub
pop
sub
jae
mov
adc
repz
add
jg
shl
xor
mov
and
push
jns
iret
inc
add
xchg
dec
idiv
ljmp
sbb
aad
cltd
fdivrs
mov
lods
ljmp
pop
lret
rorb
addl
cwtl
sbb
leave
in
mov
xchg
mov
push
inc
movsl
jb
into
addl
ljmp
jbe
jp
add
xor
rcr
jbe
cmp
rcl
imul
xor
jno
cmp
xor
xor
ljmp
pop
push
adc
nop
adcl
inc
cmpb
xchg
push
aad
dec
dec
xchg
and
mov
push
push
jg
jg
fcoms
outsb
imul
inc
gs
mov
test
add
xor
push
out
inc
rorb
dec
leave
push
dec
imul
outsb
xchg
xchg
or
in
cmp
lret
aam
dec
out
mov
pushl
push
inc
push
fisubrl
mov
sub
cmpsl
ret
popf
dec
in
mov
inc
fmull
lcall
lods
cmp
mov
lods
icebp
cmp
inc
mov
les
add
jbe
lcall
cmpsb
ret
out
nop
push
ja
adc
cmp
nop
aam
xor
ljmp
mov
mov
pop
sub
leave
xchg
cmpsl
lea
jae
inc
test
lcall
sahf
lret
out
rolb
hlt
cmp
test
mov
xchg
enter
jo
movsl
packuswb
jbe
pushl
iret
out
jbe
ja
sbb
mov
les
fimuls
inc
into
xor
jmp
or
add
sbb
add
data16
cmp
das
ret
stos
inc
fisttpl
je
leave
stos
jmp
dec
jp
jne
outsl
pop
movsb
sbb
leave
mov
push
xchg
nop
inc
leave
xor
mov
cmp
pop
les
out
sub
pop
mov
std
xor
mov
add
decl
push
sub
push
mov
adc
call
stos
fldt
jmp
jbe
dec
dec
ja
movsb
dec
adc
jns
fadds
push
mov
jg
fstl
aaa
lcall
ss
jp
ss
stos
mov
mov
jae
andl
xor
push
cmpsb
fstpt
and
sub
ret
cmpsb
in
stc
and
ret
pusha
xchg
add
sub
push
xchg
jnp
cmp
mov
or
ds
decl
fsts
rorb
loop
repz
roll
push
std
adc
pop
push
adc
lods
pushl
rcl
add
aas
sbb
mov
bound
mov
cmp
jg
push
rclb
pop
or
ret
mov
sub
adc
adc
pushf
pop
call
iret
outsl
and
xor
push
xchg
push
cltd
sub
jb
in
leave
in
inc
mov
cwtl
pop
mov
adc
aaa
sbb
fisttpll
inc
fistpll
pushl
int3
inc
lfs
shl
push
pop
jo
push
out
mov
inc
scas
sbb
cmp
pop
jp
incl
shrl
iret
aad
daa
ds
jne
mov
jno
jmp
dec
pop
gs
push
sti
leave
sbb
subl
pop
ds
cmc
ret
jecxz
stc
mov
stos
and
lret
mov
jo
cmpl
xorl
inc
sbb
popa
add
jmp
fs
shll
inc
dec
mov
lret
xchg
pop
popf
les
xchg
in
std
and
add
incl
pop
mov
test
jp
and
cmpb
jecxz
inc
pusha
pop
test
jmp
test
adc
mov
mov
pop
hlt
cwtl
loopne
push
sub
daa
lcall
and
mov
inc
fbstp
fsubrs
sbb
fstps
repz
outsb
call
scas
dec
cmp
and
dec
shll
cwtl
aaa
push
test
popf
hlt
push
orb
jmp
jecxz
mov
xchg
jp
cmpsl
xchg
fmuls
std
arpl
sub
ljmp
movsl
push
mov
addr16
in
cmpsb
push
pxor
inc
cmp
sub
pushl
jno
adc
xor
add
push
sbb
aaa
xchg
dec
loop
xchg
mov
jp
mov
pop
hlt
push
pop
mov
out
stc
nop
inc
dec
filds
insl
inc
sbb
fdivrl
cmp
dec
mov
les
das
mov
sbb
repnz
rcrl
pushf
xchg
mov
mov
adc
test
out
test
push
ja
pushl
bnd
mov
dec
fdivrs
addr16
push
mov
loope
cwtl
mov
in
mov
lods
dec
fcompl
aaa
std
mov
je
mov
inc
and
pusha
pop
rorb
cmc
mov
aaa
mov
das
push
nop
sub
loop
outsl
test
mov
aad
dec
and
in
jmp
into
sbb
pushl
xor
and
pop
push
out
jae
push
js
hlt
jns
mov
jbe
xor
incl
cld
fdiv
loop
dec
test
aaa
dec
movsl
sub
cmp
jg
add
lcall
repnz
cmpsl
cmpsb
sbb
shlb
scas
mov
mov
mov
lcall
aas
pop
adc
and
in
jle
into
insb
push
mov
filds
jl
cmp
sbb
jns
mov
ja
push
jo
movsb
mov
je
into
add
call
roll
por
adc
es
in
sub
sahf
or
cmpsl
cmpsl
sbb
aaa
std
jg
insb
cmpsb
ret
int3
ret
mov
cmpsb
sub
jnp
or
push
sub
test
repnz
lcall
vpunpcklwd
imul
jmp
mov
test
cli
es
mov
add
test
daa
aaa
mov
mov
sub
loopne
mov
mov
push
hlt
inc
call
dec
in
imull
lods
outsl
and
xor
loope
jne
ja
fiadds
cli
jno
jmp
xchg
cmp
mov
adc
mov
lea
pop
cwtl
fisttps
add
cwtl
mov
and
lcall
shlb
pop
inc
cmp
push
xchg
cli
xchg
sahf
xor
mov
xchg
dec
movsb
cmp
fs
arpl
sti
fildl
fidivl
cmp
out
aaa
lds
or
call
popf
push
ret
scas
mov
mov
jmp
movsb
sub
btr
pop
xor
addr16
in
cmc
fists
add
icebp
ds
push
jl
xor
push
repz
jae
sbb
enter
pushl
adc
push
aad
mov
pop
and
int
jle
jmp
xchg
xor
add
pushl
xchg
fists
push
pop
jecxz
lret
jae
cltd
and
movsb
push
jae
mov
mov
jb
sbb
inc
adcl
outsb
pushf
or
dec
aaa
test
jmp
pusha
push
nop
sub
xor
dec
and
inc
lods
sti
pushf
jno
sarl
negl
int3
movsl
sbb
jmp
adc
shl
mov
xor
mov
sub
push
mov
jo
cmp
cli
jmp
sahf
and
scas
push
cs
xchg
sub
mov
lcall
sbb
and
fmul
call
pusha
gs
ja
sbb
jg
lcall
dec
daa
fsubs
imulb
add
mov
test
push
mov
lcall
decl
int3
les
mov
add
gs
outsl
repz
mov
call
mov
pop
stos
in
mov
popf
add
clc
sub
cmp
add
subb
cmp
std
fidivs
cmpsb
jecxz
jo
cmpsl
pop
push
lret
bound
mov
aad
cmp
cmpsb
push
outsl
cltd
adc
pushl
in
xchg
adc
xchg
in
stos
mov
int
cli
adc
mov
movsl
loopne
fidivl
inc
loopne
nop
call
rorb
inc
or
dec
gs
divl
cmp
push
in
sbb
xchg
aam
dec
repz
stc
loopne
cmpsl
lcall
xchg
sbb
jp
cwtl
arpl
outsl
into
sti
mov
adc
call
jnp
dec
sahf
pushf
test
negl
enter
inc
daa
pop
mov
adc
subl
pushl
aam
ret
jg
inc
mov
cmp
push
add
in
loopne
cmp
insb
sbb
cmp
fdivr
jmp
mov
adc
scas
cmp
call
fnsave
ja
icebp
iret
cmp
nop
jg
ret
jae
decl
popa
jnp
sub
lea
jb
inc
push
xor
dec
lret
pop
imull
adc
dec
push
lock
pop
daa
cmp
and
popf
loope
jns
mov
sub
incl
add
ja
mov
jae
inc
ret
dec
mov
imul
cmp
insl
out
xchg
cld
fmull
push
xchg
or
mov
int
inc
popf
dec
cltd
mov
call
push
int3
inc
and
sbb
cli
jne
push
add
adc
and
adc
dec
pop
cmp
ds
outsb
and
dec
divb
cmpsb
cmp
icebp
push
lods
ret
add
outsl
stc
pushl
jmp
add
mov
jnp
adc
adc
call
dec
push
xchg
add
cmp
inc
mov
into
lock
mov
fisttpll
ljmp
out
mov
inc
pop
pop
lods
call
inc
sbb
sub
in
jbe
xor
sub
adc
lcall
pop
and
pop
cmp
aas
adc
cmp
dec
xchg
push
inc
adc
cmp
pop
and
sbb
xchg
pop
std
cltd
pop
jne
push
out
rclb
pop
ljmp
add
cs
cmp
lret
pop
cmpl
and
push
mov
insl
inc
mov
incl
sahf
fcmovu
cmp
sbb
sub
push
mov
scas
scas
ficoml
xor
lcall
mov
inc
stc
movsb
jp
or
sub
cmp
lcall
jmp
sbb
int
and
sub
adc
cli
xor
jg
stos
ficompl
or
test
jl
dec
mov
out
aam
cmp
pushl
cltd
push
xor
sub
fs
mov
imul
jl
mov
lock
dec
test
mov
mov
push
cs
push
inc
jbe
fcomip
call
clc
mov
inc
cmpsl
xchg
lret
pop
mov
pop
xor
hlt
push
incl
jecxz
lea
or
rcrb
fisttpll
dec
mov
ljmp
nop
jmp
das
dec
push
out
test
shll
mov
fldcw
xor
jecxz
mov
jmp
add
in
and
les
jne
insb
xor
in
or
call
leave
dec
pop
movsb
test
ljmp
add
add
bound
pop
mov
aad
mov
pushl
loop
push
xchg
xlat
push
ss
ds
sub
aam
mov
or
test
sbb
add
cli
cmp
mov
in
mov
xchg
dec
pop
xchg
ret
test
cmp
pop
mov
call
pushl
andl
push
add
cmp
xor
das
std
mov
push
pushf
cmpsl
jg
jmp
dec
xor
jne
outsb
cmp
aad
in
loop
sar
mov
pextrw
imul
cld
and
jb
arpl
xchg
icebp
mov
inc
les
sbb
cld
hlt
mov
cmc
sub
in
jl
movq
lcall
xor
in
fcmovnb
inc
bound
popf
in
neg
add
fcomip
ljmp
into
jno
mov
test
int3
adc
xchg
mov
push
push
fisubrs
fcomip
jmp
sbb
fwait
cmp
or
loope
sti
mov
hlt
decl
aad
sbb
jle
je,pt
fcomip
insl
add
loop
push
dec
icebp
jns
call
insb
int3
call
andl
pop
stc
push
xchg
sbb
jns
inc
push
ret
jl
aas
shll
pushl
mov
ss
jne
fwait
push
push
jbe
fnstcw
in
sar
jg
pop
cmpsb
cmp
out
int3
mov
pop
cmpl
adc
lods
stc
call
pop
jae
jmp
mov
cmc
mov
and
mov
test
inc
lock
cmpsb
std
fcmovnbe
repz
jbe
pusha
jns
add
mov
iret
lahf
out
out
je
ficomps
xchg
sub
stos
out
cld
sub
pop
or
mov
ljmp
nop
or
divl
cs
dec
inc
into
cmp
flds
ret
jmp
bound
lahf
test
xchg
stos
xor
jge
out
sbb
add
jnp
pop
pop
sarl
decl
cmpsb
xchg
mov
into
cmpb
fdivl
xlat
les
in
cmp
jns
cmovl
xorl
call
xor
pop
pop
sub
push
clc
push
push
pop
stc
out
xor
xchg
clc
add
and
inc
jmp
add
xchg
sti
cli
movsl
mov
fwait
mov
decl
xchg
in
enter
imul
lock
mov
stc
or
sub
test
xchg
test
dec
scas
mov
rcrl
in
stos
pop
inc
inc
mov
inc
and
sbb
push
push
cwtl
pop
sbb
cmp
mov
mov
sbb
lods
jae
sub
pop
jnp
xchg
stos
ljmp
inc
push
out
mov
add
lods
jp
add
aas
adc
cld
roll
outsb
aam
mov
xchg
cmp
add
frstor
push
call
push
sbb
call
xchg
test
push
push
or
jns
mul
cmp
sbb
decl
inc
stos
push
sbbl
int
ss
sbb
fimull
shrl
mov
cwtl
adc
and
incl
push
aaa
loope
and
dec
mov
inc
push
jo
jmp
in
add
je
decl
out
cmp
xor
test
mov
stos
mov
out
clc
mov
outsl
outsl
fs
jl
inc
mov
stos
push
test
ljmp
xor
movsb
inc
dec
repz
mov
adc
ret
dec
jg
and
mov
inc
sahf
ja
add
mov
repz
dec
clc
enter
cld
pushl
int
dec
mov
xchg
and
cmp
jne
jno
icebp
out
test
pop
mov
pop
mov
enter
cltd
pushl
jb
aam
pop
and
jl
mov
popf
xor
push
add
mov
lcall
lret
imul
jmp
outsb
je
cmp
arpl
out
push
nop
sbb
loop
test
repz
fcomip
and
stos
xchg
adc
imul
pusha
orb
mov
imul
js
mov
mov
adc
push
popa
xlat
push
rorb
movsl
sahf
aam
clc
movsb
pop
je
call
ss
xor
call
test
add
dec
cli
xchg
pop
mov
loope
lcall
mov
push
jp
std
mov
cmpsl
inc
popa
and
call
call
xor
push
ss
and
lret
fdivp
psrlq
scas
push
sub
mov
incl
mov
mov
fisubl
add
push
test
push
fldcw
inc
pushf
xchg
les
jecxz
clc
jnp
pushl
lods
push
xchg
xor
fcomp
shrl
mov
push
andb
in
inc
inc
mov
adc
push
xlat
jp
sbb
sub
roll
jg
mov
out
decl
jp
out
mov
sbbb
insl
pop
loope
fnstenv
pop
mov
pushl
mov
dec
outsl
mov
sub
mov
cmp
insl
adc
fstp
push
jmp
int
or
lahf
dec
lret
mov
lahf
data16
push
adc
jle
imul
in
jl
jmp
lock
je
stos
lret
inc
lahf
adc
call
call
pop
cmp
ret
jmp
xchg
mov
ret
or
loopne
imul
jl
add
cmp
mov
xor
das
xchg
daa
call
icebp
pop
mov
test
mov
mov
mov
shlb
and
or
xor
inc
jle
mov
cwtl
inc
inc
popf
clc
insl
leave
dec
mov
aaa
lds
cltd
or
pop
push
addb
decl
xchg
cmpsl
adc
inc
pop
mov
dec
sbbl
out
loope
pop
ljmp
into
mov
fstps
lret
lock
dec
mov
cmp
sahf
pop
out
pop
mov
loope
test
test
imul
cmp
mov
mov
js
xlat
inc
or
and
dec
outsl
sub
sbb
mov
inc
inc
mulb
mov
mov
cmp
mov
aas
aas
in
mov
sub
adc
jmp
jge
inc
es
mov
shlb
fidivrs
ljmp
loopne
ds
filds
mov
jne
shl
pop
imul
mov
sbb
xchg
add
add
pop
adcl
lock
call
aas
pop
sbb
bnd
add
testl
jmp
test
sub
sar
pop
sti
xchg
out
mov
xor
gs
xlat
decl
jnp
imulb
loope
mov
mul
call
jp
test
xchg
je
subb
loop
ljmp
ljmp
stos
fstl
mov
sbb
inc
dec
jae
or
add
decl
cmp
jmp
xor
fisttps
out
decl
mov
xchg
adc
mov
pop
sbb
xchg
shr
cwtl
aam
decl
fs
stc
xor
loope
lahf
mov
arpl
loopne
fdivs
adc
push
cmp
sub
fisubs
mov
inc
adc
iret
xchg
out
cmpsb
jg
ljmp
stos
pop
mov
push
jg
mov
mov
cmp
pop
dec
mov
int3
inc
out
movsl
push
xchg
test
pop
mov
jo
cld
insb
lcall
rcll
pop
int
in
fdivrl
jo
or
mov
lcall
mov
fdivp
jns
jae
jecxz
dec
sbb
inc
and
shlb
imul
ficompl
dec
gs
mov
pop
out
push
nop
es
mov
ds
loope
cmovs
mov
clc
and
mov
mov
gs
fadds
gs
iret
lcall
jno
in
sahf
fnstenv
jp
loopne
xor
push
scas
in
movsl
jmp
jmp
mov
mov
movb
xchg
jno
add
jmp
call
add
add
fiadds
mov
adc
cmp
ljmp
cmp
fwait
or
mov
dec
push
filds
sub
mov
mov
jge
psubusw
push
push
dec
fstps
and
lret
ffree
jb
mov
enter
outsl
clc
incl
mov
push
dec
and
and
out
pop
xchg
xor
cwtl
dec
jg
decl
jg
loopne
sbb
cld
es
xor
sbb
xchg
xchg
fistpll
dec
mov
add
push
rcrl
into
sub
mov
xchg
mov
mov
mov
out
cwtl
xchg
orb
cltd
push
leave
jo
je
ud0
jmp
mov
xchg
addr16
pop
pop
xchg
repnz
ds
enter
icebp
fwait
mov
mov
jmp
test
xor
in
xor
enter
lret
int3
outsl
decl
shl
pushf
mov
test
outsb
loopne
fimuls
mov
leave
xchg
xchg
test
ljmp
sbb
and
jae
imul
jb
hlt
mov
int3
or
std
inc
test
inc
je
jo
aas
mov
outsb
outsl
std
bound
ds
add
xor
and
mov
pop
cmp
loopne
mov
sub
andb
pop
repz
or
pop
mov
out
orl
jmp
jbe
inc
push
ret
icebp
dec
rep
mov
xchg
xor
jne
pop
scas
inc
and
push
mov
xor
rolb
adc
nop
jg
cmp
and
stos
ljmp
or
pop
cli
inc
sar
mov
inc
dec
push
pop
lahf
clc
mov
xchg
aad
xchg
xor
pop
push
mov
fwait
ds
add
je
popf
jbe
pop
aam
lods
cmp
jmp
pop
xchg
cld
push
lret
popa
addr16
repnz
mov
std
fs
repz
test
imul
jmp
stos
mov
sub
cmp
lcall
nop
fwait
daa
mov
sbb
jecxz
cmc
call
cmp
push
fists
and
adc
jecxz
ficoms
ljmp
je
pop
cltd
nop
pop
jo
sub
lds
mov
jmp
push
insl
lea
xchg
les
mov
mov
add
mov
pop
cmp
pushl
mov
dec
ds
rorb
gs
iret
push
jg
test
xorl
popa
jl
shrb
jl
aam
mov
test
adc
hlt
xlat
cli
xchg
or
jg
jo
scas
in
mov
aam
mov
mov
out
scas
jnp
jno
das
dec
daa
mov
push
xor
push
xchg
pop
cmc
sub
pop
sbb
mov
xchg
fwait
in
cltd
sti
push
mov
push
mov
mov
sbb
sub
rclb
test
jmp
jb
aam
adcb
mov
shrb
jecxz
insb
jmp
or
dec
and
and
xchg
incl
mov
push
mov
lock
jle
inc
test
inc
adc
and
xchg
push
inc
out
fmuls
pop
sahf
pop
mov
xor
cmp
popf
test
addr16
pop
xchg
lcall
push
jns
outsb
movsl
jl
in
jecxz
outsb
es
loop
adc
or
dec
sbb
push
mov
xchg
negl
add
push
out
adc
aaa
add
mov
stos
mov
inc
pushl
cmpsl
sbb
test
or
mov
and
je
adc
ficomps
pop
sbb
cltd
aam
in
js
jb
jne
and
mov
or
jmp
decl
inc
sbb
pop
fistps
add
stc
jns
push
call
in
pop
pop
mov
pop
or
push
xor
jb
or
sub
inc
mov
push
cli
fidivrl
mov
and
shrb
decl
repz
adc
fmulp
call
and
in
loope
cltd
push
ja
pop
push
sub
adc
loopne,pt
pop
sar
shll
fisttps
push
add
pop
js
int3
sbb
insb
shrd
sub
xchg
cmp
decl
sub
loopne
cmp
inc
das
lcall
pop
xchg
add
out
sbb
jmp
jne
lock
cld
pop
insb
sub
stos
dec
int3
pop
nop
nop
pop
and
mov
in
mov
jmp
mov
aad
test
clc
mov
or
fdivr
pushl
xor
insb
xor
adc
pop
fidivl
pop
test
mov
das
cmp
push
fs
lock
jmp
jge
sti
scas
or
xchg
arpl
or
ljmp
xor
pushf
and
nop
mov
icebp
mov
pop
mov
loopne
cmp
push
test
cmc
into
or
jl
pushf
jp
push
bound
push
ljmp
movsb
fcmovnbe
pop
jbe
lret
push
sub
adcl
jae
xchg
pop
daa
adc
ljmp
dec
insb
and
lret
movsl
jmp
clc
or
push
cmpsl
shl
mov
incl
sub
ret
or
sub
push
jle
cs
cli
push
cmpb
inc
call
int
das
out
add
mov
sti
popa
xor
dec
test
aas
push
pushf
aaa
xchg
mov
inc
pushl
inc
inc
lret
xchg
sbb
loop
xorl
sbb
mov
jnp
into
movsb
pushl
fidivl
mov
and
hlt
push
arpl
std
xchg
movsb
lret
shl
fs
sahf
ja
xor
xchg
lahf
inc
inc
out
push
lds
roll
add
mov
pop
test
pop
daa
cmc
jg
add
cmp
and
dec
js
adc
decl
lods
mov
testl
outsb
cmp
inc
mov
test
ljmp
adc
sbb
fdivrs
in
sub
jb
daa
popa
loopne
fstps
enter
or
adc
cld
decl
shrb
enter
or
in
push
sahf
xchg
sub
insl
sbb
scas
push
mov
push
ja
push
push
sub
jbe
mov
xor
popf
jmp
icebp
jle
pop
cmpsl
pop
out
sahf
ss
mov
xchg
xchg
add
pushl
sbb
rcrb
popa
mov
mov
mov
fdivs
rcr
sbb
cs
sub
add
cmp
push
decl
incb
lret
ja
fisubrl
hlt
xor
sub
sub
xchg
fwait
inc
incl
inc
das
dec
push
test
xchg
or
xlat
insb
or
push
dec
xchg
add
sbb
mov
mov
in
mov
bound
jle
ljmp
add
jno
repnz
or
push
push
sub
incl
fwait
lcall
push
xchg
dec
pop
in
sub
mov
pop
mov
jecxz
push
xchg
dec
or
jmp
shl
mov
in
sub
out
jae
inc
pop
sub
test
into
lods
or
dec
push
and
movl
pop
mov
cmp
insb
pop
or
call
loopne
xchg
sub
inc
mov
mov
sbb
repnz
mov
jbe
sbb
push
sub
mov
mov
mov
in
adc
dec
ftst
pop
bnd
mov
decl
fwait
jg
jecxz
std
repz
cltd
cltd
dec
cltd
insl
lea
out
pushl
ja
test
mov
movsb
rcll
push
call
xor
jmp
mov
hlt
decl
test
jge
jno
pop
inc
fisttps
repz
sub
add
pushl
jl
cwtl
sbb
cmpsb
dec
lret
ret
fldt
leave
push
push
xchg
xor
jecxz
push
and
sbb
fistpl
dec
incl
decl
mov
test
addr16
fcompl
and
test
pop
sub
mov
push
pop
cmp
sbb
stos
or
in
add
pop
jns
movsb
adc
mov
mov
fcmovbe
and
pusha
pop
xchg
mov
out
jge
jae
test
pop
mov
xchg
xor
ja
mov
arpl
and
sbb
push
sbb
sub
addl
int
sub
fidivrs
incb
mov
adc
dec
insb
subb
push
pop
popl
push
xchg
lds
lock
lock
add
inc
pop
ss
icebp
popf
andl
adc
lret
sub
lret
ret
out
xchg
add
icebp
sahf
dec
test
xchg
fs
clc
push
mov
scas
add
test
jns
jmp
sbb
lcall
test
dec
ret
test
push
push
jg
dec
add
inc
push
mov
jmp
ds
jecxz
add
xlat
sbb
adc
les
push
cld
andl
in
lahf
pop
stc
mov
daa
lcall
test
jg
js
push
sbb
enter
xchg
push
addr16
leave
test
pop
js
inc
loop
scas
ds
dec
jmp
mov
mov
cs
fs
push
dec
and
outsl
jno
out
jo
jmp
mov
imulb
inc
jp
rcr
dec
mov
sub
cltd
mov
ljmp
sbb
inc
scas
and
jp
cmp
xchg
add
loope
pop
pop
or
sbb
les
inc
int3
cmp
mov
jl
arpl
add
add
aas
dec
aaa
jp
inc
jge
aam
jp
call
jle
shlb
out
jb
mov
lcall
sti
jle
or
mov
insb
cmc
inc
jns
imul
cld
jno
imul
pusha
rorl
xchg
pop
int3
push
test
jb
jns
add
xchg
test
inc
mov
cmc
mov
das
cli
pushl
cmp
das
xchg
pushf
insl
fbstp
ret
jno
bound
mov
ljmp
shlb
dec
test
xor
adc
dec
addl
add
fldcw
lods
cmp
lcall
and
pop
cmp
xchg
xchg
insb
ja
int
dec
in
or
clc
or
lcall
repnz
sub
xor
jp
pop
mov
lea
jg
rcrb
into
xchg
cmp
stos
dec
push
mov
nop
push
push
adc
xor
sahf
or
or
mov
imul
dec
sbb
aam
ljmp
sti
or
mov
int
pop
push
and
sbb
cld
cmp
std
aas
push
das
faddl
mov
cmp
inc
pop
adc
add
stos
sahf
jno
mov
mov
aam
xchg
pop
sub
lcall
enter
js
cmpsb
pop
xchg
es
mov
aaa
xor
icebp
sub
push
sbb
mov
jne
adc
rcrb
insl
icebp
cmpsb
movsl
mov
subb
stos
pmaxsw
cmp
jmp
out
mov
arpl
sub
lahf
mov
cmp
dec
ja
sub
es
lcall
or
dec
xor
leave
mov
jge
clc
sbb
sahf
xor
sbbb
mov
pop
out
push
sbb
adc
and
aad
leave
mov
sbb
jge
cmp
jmp
xchg
outsb
dec
pushf
aas
arpl
clc
arpl
jnp
stos
pop
lock
mov
lcall
add
and
push
mov
idivl
arpl
notb
cmp
xchg
cltd
lods
into
mov
aad
int
xchg
inc
jno
xchg
aam
inc
pushl
leave
popf
xlat
mov
inc
lods
dec
cmp
lahf
push
es
jo
push
xlat
fwait
pusha
dec
rcl
clc
add
mov
pushl
push
mov
sbbb
sbb
stos
xor
mov
mov
xchg
data16
pop
stc
adc
decl
xchg
cmp
sbb
aam
leave
add
daa
data16
xor
popa
xor
loope
lret
cmp
fsubl
bound
inc
test
ds
repnz
pop
jo
ljmp
cld
add
fadds
push
jmp
int
jno
xor
push
or
icebp
jg
push
pop
xchg
and
incb
ja
xorb
xchg
pushf
rol
lods
lcall
rcrb
dec
sbb
inc
dec
shr
out
je
xlat
mov
lock
cwtl
adc
cmc
pushl
movsl
stos
scas
lcall
mov
xchg
mov
decl
dec
lock
cli
stc
and
xchg
mov
pushf
int
test
std
inc
mov
push
cmp
add
rorb
or
cli
push
scas
divl
sbb
jg
or
xchg
add
inc
inc
cmpl
add
test
adc
sbb
or
jmp
hlt
mov
mov
cld
loopne
pop
lds
inc
inc
insb
test
jg
fldcw
loope
shr
int
test
xchg
sbb
add
push
scas
incl
fwait
jge
push
and
pop
dec
out
pop
ret
push
lds
pop
sub
jl
incl
jo,pn
ss
cld
mov
pushf
dec
outsb
loop
push
int3
test
pop
mov
ret
push
mov
push
cmp
xor
add
inc
sub
jmp
pop
and
fisubs
push
push
in
loope
mov
sbb
inc
orb
pushl
sbb
sahf
xchg
pushf
sbb
cltd
ss
xor
nop
std
clc
push
stc
add
ds
cmp
incl
sbb
add
dec
rol
add
test
rcll
mov
cmc
cmc
into
hlt
inc
aam
fiaddl
sbb
mov
push
or
push
push
lret
mov
xor
loope
decl
add
and
rorb
push
std
fnsave
dec
mov
addr16
cltd
out
jp
jecxz
divl
cmp
lods
xor
sahf
cld
ljmp
fs
movsb
in
fmulp
stos
push
or
fs
jbe
mov
add
dec
sub
push
outsl
jae
dec
jg
jne
popa
fists
cmp
dec
lock
push
xlat
mov
or
popf
aaa
call
cld
lea
jb
pusha
repz
sar
jg
dec
repnz
orb
xchg
in
lock
mov
clc
int
jo
add
and
sahf
je
or
outsl
movsb
xchg
mov
xor
cmp
mov
mov
cmp
clc
lods
and
lahf
sbb
or
icebp
ljmp
mov
cmp
mov
dec
xchg
call
jne
imul
clc
mov
repnz
xor
mov
subb
sbb
push
or
call
cmp
fisubs
iret
cmp
test
iret
sar
stc
movsl
call
jmp
ret
xchg
add
push
jecxz
mov
sahf
enter
mov
loopne
jmp
mov
sbb
in
fwait
and
mov
mov
in
push
clc
push
mov
sbb
les
repnz
sbb
sti
lcall
fwait
punpcklwd
ds
test
les
jno
pop
xchg
inc
push
clc
xchg
je
or
cli
out
ds
pop
pop
not
rcrb
icebp
push
data16
fimuls
cmp
push
inc
bound
ljmp
and
mov
out
lods
inc
ret
sbb
getsec
shl
insl
lds
leave
sbb
dec
scas
and
mov
cli
xchg
push
pop
pushf
cs
loopne
inc
inc
repz
pop
mov
pushl
hlt
filds
add
sub
push
nop
or
xor
mov
pop
in
fistpl
jnp
loopne
jle
jno
mov
xchg
or
sub
pop
sbb
lea
mov
mov
ljmp
mov
pop
loop
lret
imul
xchg
push
jbe
and
ret
sarb
ljmp
mov
sarb
or
stos
cmp
mov
lcall
insb
dec
movsb
xor
cmp
shll
out
push
sub
xchg
bnd
and
hlt
int3
jge
std
in
mov
fisttpl
xor
js
fdivr
stos
decl
repnz
mov
mov
xchg
fstps
cld
dec
mov
ljmp
lret
adc
sbbb
imul
repz
push
dec
mov
hlt
cltd
mov
inc
sub
fwait
call
fdivr
pop
mov
jae
data16
sub
mov
aam
movsl
decl
inc
add
enter
xor
les
dec
pusha
lret
inc
mov
adc
psllq
inc
decl
sbbl
pop
insb
jno
hlt
inc
in
add
and
les
lcall
push
add
movsb
ljmp
imul
mov
pop
pop
adc
cli
cmp
decl
jnp
pop
cltd
sbb
pop
mov
cld
inc
dec
mov
sbb
lret
mov
test
addr16
jns
inc
cmpsl
aad
and
negl
jb
mov
add
jg
dec
data16
repz
test
push
pushl
mov
and
fndisi(8087
mov
jns
inc
mov
cli
inc
leave
stos
jl
jg
and
and
mov
out
jle
inc
jo
jns
insb
cld
adc
idivl
das
out
decl
fnsave
cmp
ljmp
mov
test
mov
push
call
loop
mov
add
data16
dec
aam
cmp
xchg
cmp
dec
out
call
sbb
mov
and
xchg
add
xchg
xchg
mov
sbb
enter
jmp
xor
adc
int3
nop
das
dec
mov
lret
ror
inc
ss
or
mov
js
dec
jmp
jl
cmpl
incl
lock
not
psrld
repz
jae
push
xlat
outsl
cmpsl
mov
mov
push
les
or
xor
lods
adc
nop
mov
xor
stc
ja
popf
pop
and
dec
and
das
cmp
incl
pop
xlat
mov
std
add
popf
mov
loope
dec
inc
and
cmpb
repnz
lcall
inc
cltd
sub
or
mov
imul
push
mov
mov
js
pop
fwait
test
gs
shl
cmpsb
and
es
fildll
dec
icebp
pop
mov
xor
mov
and
test
inc
data16
fcomip
call
jge
jmp
ficomps
sbb
sti
cld
xorl
xchg
call
out
int
cmpsb
pop
lods
stos
test
push
and
pop
mov
pop
add
mov
cmc
cs
xor
add
jmp
pop
mov
sbb
push
lret
sub
dec
dec
mov
xor
pushf
mov
ljmp
xor
sbb
addr16
and
stos
ds
mov
xchg
cld
or
imul
ljmp
fisubl
xchg
sub
push
int
sbb
cmp
pushf
push
jl,pt
notb
ret
mov
dec
movsl
sbb
iret
xchg
repnz
xchg
pop
or
add
insl
push
mov
pushl
lret
mov
mov
mov
cld
sub
pushf
mov
dec
inc
ja
repnz
cmp
incl
int3
in
andl
add
out
fadds
in
ret
clc
pop
adc
movsl
popa
idivl
push
outsl
xchg
cmp
lods
insb
xlat
cmp
fcmovb
pusha
fstpt
inc
or
js
jae
pop
hlt
nop
pop
hlt
push
call
inc
mov
inc
fadds
mov
mov
fcmovnu
incl
shl
orl
mov
or
cwtl
jl
pop
aaa
mov
ret
jbe
mov
pushl
std
ljmp
out
mov
jnp
push
sbb
dec
add
cmp
scas
cli
ljmp
mov
jl
into
xchg
jg
pop
add
imulb
mov
aaa
dec
imulb
jmp
mov
dec
pop
sub
sbb
xor
mov
sub
mov
ds
repnz
xor
fs
mov
add
daa
mov
add
jg
jg
mov
cwtl
pop
jecxz
test
and
mov
movsl
add
pop
dec
test
data16
call
jmp
xor
ret
fidivs
orl
mov
dec
or
das
cli
call
test
lock
xlat
mov
push
or
out
dec
pop
movsl
test
je
ss
push
loope
fistpll
aas
mov
cli
pop
push
lret
push
adc
xlat
clc
mov
lcall
mov
in
ds
jp
dec
ja
je
cmp
fdivrl
and
decl
jns
movsb
outsb
adcl
jp
aam
cltd
push
ret
xor
mov
jmp
mov
insl
dec
int
mov
inc
js
mov
shlb
pop
incl
test
sub
jl
sbb
aaa
jno
pop
jp
mov
jge
add
jnp
mov
cwtl
xchg
cld
andb
idivb
jmp
jbe
adc
adc
das
mov
fdiv
stc
aad
bound
gs
sub
orl
adc
shll
out
xor
aas
sbb
ljmp
jbe
out
sbb
rorl
call
lea
and
les
test
enter
incl
xor
add
pop
pushl
and
stc
jecxz
dec
fcoml
mov
push
jne
rep
push
adc
in
into
ret
into
aad
ss
out
cmp
xchg
xchg
dec
jo
mov
jb
xor
push
in
loope
mov
mov
sti
xchg
sbb
stc
inc
fisubrs
inc
lock
add
xchg
push
ljmp
lods
loopne
jmp
imul
scas
std
cmp
addb
movl
xor
cmp
sbb
incl
movsl
xchg
xor
lcall
or
iret
fs
dec
cmpb
push
sbb
mov
test
dec
push
jmp
or
push
and
adc
jmp
inc
cwtl
xor
je
mov
cmp
mov
sbb
incl
jnp
cmp
inc
mov
inc
lcall
cmp
decl
dec
pop
push
and
sub
lcall
decl
fbstp
jne
push
movsb
scas
out
ror
fistps
or
mov
ljmp
mov
notl
je
jnp
xchg
movsl
imulb
cltd
adc
call
dec
jp
mov
popa
pushf
inc
dec
jp
mov
sbb
jg
dec
repnz
mov
pop
pop
push
dec
fwait
call
adcb
dec
lods
pop
pop
aas
lock
mov
in
stc
add
push
push
ljmp
cmp
add
push
mov
pusha
std
push
and
pop
jmp
loop
mov
sub
cltd
jmp
bound
and
jno
pop
sbb
xchg
dec
xchg
pop
lret
mov
adc
cmp
xchg
sub
fsubl
mov
jmp
imul
sub
push
js
mov
int
aad
aas
call
xchg
scas
sarl
sub
jne
cltd
lods
sbb
notb
gs
or
loopne
aad
imul
rclb
dec
cmp
push
lret
jle
push
jg
js
ljmp
or
xorl
jle
and
or
ljmp
movsl
nop
outsl
inc
scas
push
lock
outsb
out
inc
cltd
jle
sarl
jle
push
daa
cld
pushl
xlat
pusha
push
lahf
data16
insb
cmp
or
push
lods
int
repnz
xchg
mov
shrl
outsl
cmp
mov
popf
rorb
jl
ljmp
outsl
inc
cmpl
jmp
push
fwait
test
addr16
ret
push
nop
xor
mov
or
cmp
ror
or
cs
pushl
dec
inc
out
jae
jno
je
dec
mov
lods
shrb
add
inc
jp
jg
push
inc
fdivr
push
lcall
enter
faddl
xor
cmp
mov
add
push
js
shll
cmp
imul
pop
push
add
inc
mov
outsb
sbb
cmp
scas
cmpb
ljmp
aas
inc
dec
inc
or
stc
mov
mov
cmc
adc
mov
and
jmp
in
pop
and
cli
clc
mov
jecxz
push
pop
ds
fcoml
jb
and
ljmp
push
icebp
mov
add
dec
xchg
jle
inc
push
cmc
ljmp
mov
cmp
decl
sbb
xchg
sub
push
mov
pop
xor
mov
incl
lcall
adc
roll
adc
stos
push
jg,pt
xor
xchg
incl
in
popf
cwtl
pop
imul
mov
lret
xorb
push
into
cmp
out
cs
subl
inc
repnz
jmp
popf
popw
sarb
xchg
ds
pop
adc
push
stos
ljmp
and
cmp
sub
call
clc
add
adc
jmp
push
ss
cli
in
xchg
and
ret
loopne
mov
mov
ljmp
les
ja
and
repz
jl
mov
push
dec
ss
jmp
pushl
jmp
mov
mov
outsl
push
inc
mov
cmp
repnz
jmp
mov
adc
leave
add
mov
add
pop
and
push
aaa
lcall
dec
push
sbb
mov
nop
aas
adc
clc
les
dec
out
aaa
sbb
ljmp
sbb
test
sub
dec
imul
loop
dec
aam
and
mov
lcall
into
or
je
bound
push
scas
fs
dec
in
xor
cmc
mov
incl
cmp
mov
and
sbb
mov
xor
in
repz
clc
dec
fsubs
xchg
lcall
jne
fisubl
mov
xor
aad
movsl
repz
pop
movsl
adc
xor
pushl
icebp
in
push
addb
cmp
dec
fisttps
sahf
aaa
int3
pusha
push
dec
push
and
jecxz
push
sub
add
cmp
addr16
dec
testl
pusha
mov
adc
or
sarb
decl
jo
out
adc
add
lret
mov
inc
imul
popa
stc
cmp
inc
push
pusha
mov
mov
and
mov
xor
push
sbb
jb
jbe
arpl
pop
call
adc
push
mov
movsb
dec
rorl
pop
repz
cmp
in
in
std
ss
fcomp
and
sbb
mov
sbb
cmp
adc
cs
jg
lock
push
push
pop
scas
fs
dec
out
pusha
add
pop
sahf
or
clc
call
xchg
pop
cwtl
cmp
std
notl
push
and
mov
push
inc
mov
call
jge
sub
adc
dec
inc
mov
jo
sbb
in
mov
mov
jmp
fiaddl
dec
mov
jb
jnp
sub
stos
push
aas
add
movsl
call
and
sub
mov
pop
push
roll
cli
das
scas
lods
push
push
pop
mov
mov
sar
or
sti
and
xor
and
add
movsb
test
jne
xchg
mov
fists
mov
call
leave
lret
sub
int3
imul
sub
in
push
xor
sbb
in
jne
loop
jmp
push
sbb
lret
and
mov
xchg
in
mov
pushf
mov
incl
loopne
mov
dec
mov
ljmp
dec
int3
scas
jp
js
lcall
cwtl
mov
pusha
add
roll
sub
loope
iret
push
xchg
adc
xchg
dec
lods
call
push
cli
bound
cmpsl
mov
out
pop
add
xor
fldcw
insl
in
sbb
jmp
aad
stc
dec
arpl
pop
leave
inc
push
addr16
pop
xor
bound
call
scas
or
sub
mov
test
hlt
inc
aas
lds
or
fcos
mov
inc
jg
mov
and
sbb
decl
dec
sbb
clc
call
or
call
add
loop
bound
call
or
sub
jl
shr
incb
mov
jle
sub
repnz
cmpsb
jmp
ret
dec
jp
pop
loopne
out
inc
daa
shll
mov
jp
dec
mov
cmp
add
sub
js
movsb
jns
pushl
inc
and
mov
iret
les
fistpl
jno
push
lcall
lcall
ljmp
in
mov
mov
dec
shll
pop
mov
stos
jb
dec
iret
add
mov
js
cli
jg
xchg
sbb
out
push
jnp
shl
loop
sbb
pushf
xchg
addr16
jmp
fisubl
arpl
cmp
jae
shll
in
jo
push
push
into
jno
xchg
cmp
leave
decl
pop
jns
inc
push
jmp
mov
clc
pop
dec
xor
sub
jnp
mov
or
call
leave
dec
jbe
xchg
pop
dec
jl
mov
int
loope
lods
jp
filds
push
inc
sbb
jbe
in
pop
inc
test
aas
mov
xor
pop
cmp
lods
adc
lret
add
xor
mov
mov
out
sbb
incl
pop
sbb
sbb
cmp
cs
dec
sub
jecxz
jge
ficoml
ds
pushl
insl
clc
sub
sbb
push
or
sub
dec
subb
rol
stos
and
xchg
xor
mov
lret
add
jmp
push
cmpsl
xor
mov
ret
insb
insl
push
cvtps2pd
mov
dec
arpl
push
fbstp
out
call
loopne
les
popf
jmp
enter
and
pop
int
repz
test
lcall
xchg
sub
loop
sub
jb
repnz
or
push
call
sbb
cli
and
stc
pusha
lret
mov
fiadds
sar
incl
stos
sbbl
fbld
insl
xchg
push
movsl
fcompl
xorl
add
jnp
sar
jg
pop
mov
pop
fiaddl
and
inc
xchg
mov
mov
xchg
mov
sbb
incl
fimuls
inc
pushf
test
xchg
jo
sbb
outsl
stos
jle
adc
and
js
dec
cmp
or
pop
cld
push
rcll
push
inc
fcomip
jns
popf
loop
and
pop
and
sub
mov
bnd
in
mov
adc
inc
imul
aaa
adc
rorb
xor
sbb
arpl
push
dec
fadds
stos
mov
out
push
shrb
sub
push
sbb
push
mov
jbe
lods
jecxz
cltd
movsb
mov
cld
test
subb
mov
jg
inc
movsl
ret
xor
add
lds
xchg
pop
sbb
jno
mov
gs
jl
lret
sub
in
out
inc
in
popa
inc
out
out
arpl
cltd
lea
cmp
jmp
dec
jp
and
jbe
mov
loop
mov
jbe
mov
enter
jmp
jg
js
xchg
into
scas
iret
in
enter
fldl
jb
mov
pop
mov
scas
xchg
mov
imul
push
cmpsl
mov
add
incl
sbb
cmp
das
popf
pop
xchg
mov
push
xor
xchg
or
int3
mov
mov
imul
jo
push
loop
pushf
les
std
addb
jae
stos
incl
mov
or
subl
add
incl
jae
sbb
clc
push
jmp
call
andl
cmp
ss
fwait
mov
and
mov
fs
dec
cli
in
mov
and
lea
or
hlt
push
ret
lgs
adc
mov
jmp
jmp
xor
in
xor
fisubrs
sbb
std
aam
mov
dec
pop
leave
jge
ljmp
mov
ret
iret
stos
fbstp
testl
mov
mov
jg
push
sub
hlt
cwtl
mov
xor
in
lcall
fdiv
pop
aas
shl
jns
sbb
jnp
icebp
gs
inc
and
call
out
iret
enter
pop
int
sub
je
xchg
or
insl
cmc
rorb
sub
jge
mov
call
out
lcall
ret
and
mov
mov
lahf
jecxz
pop
jns
xor
test
ljmp
or
fstpl
or
jge
lods
xor
push
jne
sub
add
icebp
je
in
loop
push
int
and
lock
mov
scas
ljmp
in
sti
xor
and
aas
fdivs
xchg
call
sub
push
mov
cmp
inc
add
jp
or
mov
jg
decl
pop
enter
les
imul
cmp
inc
mov
decl
pop
pop
int3
or
loope
arpl
sub
test
lahf
push
ljmp
mov
aaa
mov
mov
dec
dec
cmpl
cmpsl
push
fildl
pop
xchg
cmp
addr16
pop
and
leave
lcall
stos
xor
jb
leave
in
cmp
sbb
jmp
and
aas
scas
sahf
lds
push
xor
icebp
cld
aas
insl
jbe
mov
negl
ret
fldenv
cmpsb
add
push
orl
fsubrs
test
loope
xchg
sbb
sbb
std
clc
dec
test
mov
pop
movsl
loopne
xor
mov
call
push
lcall
add
push
add
cmc
das
dec
xor
jg
popa
cmpsl
shlb
cld
jge
in
and
movsb
and
and
mov
mov
sti
shr
pop
movsb
add
push
jmp
mov
cmp
add
add
fiaddl
push
mov
xchg
jae
mov
xchg
call
cmpsl
out
loopne
rclb
call
fsubrs
mulb
aaa
pop
enter
jmp
xlat
repz
shr
jg
pop
cmp
mov
pushl
dec
add
jmp
call
pop
sbbb
inc
dec
jne
push
push
inc
shl
jmp
sub
or
rolb
jb
sbb
popf
jmp
popa
gs
mov
decl
filds
repz
jmp
dec
cmp
xchg
xlat
sbbb
adc
decb
ror
pop
sbb
testb
ficoms
scas
push
dec
sarl
ja
idiv
imul
pop
inc
fidivs
outsb
sub
jg
adc
les
jmp
int
inc
adc
outsl
mov
cli
leave
movsb
lods
les
and
imul
ljmp
cmp
push
lock
push
mov
enter
lahf
xchg
adc
mov
cmp
jae
inc
sti
mov
mov
xchg
dec
pop
adc
jns
cmc
not
push
inc
jns
lock
xor
jmp
push
jne
xchg
das
in
and
mov
cmc
mov
pushl
or
js
int3
adc
ljmp
imul
mov
jmp
push
mov
push
mov
xchg
add
sub
nop
lcall
stos
popf
push
mov
pop
xor
je
outsb
dec
ret
cmpsl
xor
xor
sar
mov
jo
fdivrs
lods
dec
jge
mov
loopne
inc
sbb
lods
jp
jno
add
incl
fbstp
add
flds
dec
loop
mov
push
inc
jle
imul
das
shll
stos
jecxz
cmp
iret
inc
popf
leave
inc
add
insl
jmp
das
aas
and
fcomip
jl
repnz
dec
fnstcw
cmpsb
arpl
loope
fwait
xchg
out
imul
call
mov
insl
dec
shl
addl
fldln2
ror
and
ja
loope
test
mov
pushl
xchg
out
cld
mov
or
mov
jne
mov
jnp
test
pop
rorl
incl
jae
test
sar
or
jns
outsl
jmp
jecxz
or
push
push
dec
stc
repz
push
repz
push
jnp
cmp
fistps
jb
cmpsl
and
shrb
dec
mov
adc
ljmp
imul
cmp
push
xchg
xchg
jno
mov
push
popf
scas
mov
ljmp
jns
jbe
or
in
jmp
push
hlt
dec
mov
xchg
cmp
jle
xor
xchg
push
sbb
cld
psubb
inc
jnp
push
sbb
dec
std
rclb
jg
sbb
in
push
imul
js
movsb
xchg
insb
sbb
loop
incl
and
lock
scas
dec
das
pop
push
inc
into
push
sbb
insb
popf
daa
mov
jns
jo
sbb
decl
xor
out
sub
push
lea
stc
sahf
dec
jo
inc
add
call
jbe
push
xor
adc
imul
dec
mov
ret
mulb
decb
mov
insl
inc
mov
mov
js
movsb
xchg
lret
nop
bound
insb
pushl
rol
push
mov
and
call
insb
int3
mov
out
jecxz
sbb
xchg
pop
add
in
inc
xor
scas
sbb
adc
sbb
frstor
mov
ljmp
icebp
dec
test
enter
jb
in
fstps
mov
add
jo
pop
ret
int3
roll
scas
pop
add
cld
ss
aad
rolb
jne
cmp
or
hlt
cmp
call
pop
fcmovne
jne
mov
fwait
into
jg
mov
nop
fisubl
dec
jae
fidivrl
jnp
in
sbb
inc
jge
lds
test
cwtl
sub
adc
cltd
and
sub
and
jnp
pushl
movsl
mov
andl
sarl
nop
ja
pop
dec
lods
stc
fcoml
dec
cmpsb
sti
pop
ss
lcall
jle
dec
xor
sbb
cmpsl
xchg
cwtl
icebp
mov
sahf
mov
dec
lret
test
lock
push
xchg
fpatan
adc
popa
push
xor
in
add
jge
iret
fidivl
push
inc
xchg
jmp
aad
out
xor
clc
imul
addl
lret
inc
pop
sbb
push
les
add
rcr
pop
lahf
loope
cltd
xor
pop
fisubrl
test
push
pcmpgtw
sbb
lcall
cmp
lahf
add
lods
dec
cmp
enter
ljmp
cmp
pop
loope
dec
sti
or
mov
jns
dec
mov
cmp
lcall
xor
mov
sub
mov
ficompl
cli
bound
gs
or
in
jl
fisttpl
decl
cltd
and
imull
popf
inc
imul
sub
loope
push
popf
das
jmp
call
pop
out
fwait
xor
or
scas
mov
inc
adc
dec
or
xchg
add
insb
jbe
xchg
test
push
lods
mov
mov
dec
pop
test
ret
jge
cwtl
sub
adc
or
hlt
incl
dec
add
loopew
in
mov
jge
sti
adc
jmp
jbe
mov
dec
movsb
aam
cmp
incl
push
aam
addb
aam
mov
push
jnp
notb
sbb
addr16
xchg
sub
xchg
and
mov
bound
mov
out
dec
int
stc
inc
dec
mov
aas
daa
jo
ja
push
xor
inc
push
pop
dec
clc
sub
mov
xor
jle
lds
push
scas
push
decl
movsl
sysret
cld
dec
cltd
imul
pop
lods
xchg
jge,pn
mov
shlb
xlat
loope
decl
not
mov
pusha
mov
int3
mov
pop
movsb
cmp
repnz
cmp
cld
je
outsl
gs
leave
negb
ret
incl
adc
mov
adc
imul
adc
adc
mov
stos
adc
aas
xchg
pop
xor
jmp
loope
data16
sti
in
lcall
jmp
divb
xchg
xchg
adc
hlt
std
and
adc
adc
xchg
in
cltd
std
push
pop
in
nopl
push
mov
in
sub
jle
push
jg
sub
inc
push
int
call
lret
pop
test
rcr
inc
movb
mov
sbb
pop
mov
or
mov
int3
hlt
fidivrl
clc
jmp
repnz
movsb
cmp
inc
jg
stc
jle
inc
or
imul
les
lock
repz
dec
mov
fldenv
fisttps
rolb
clc
jmp
adc
adc
inc
andl
sub
pop
arpl
ljmp
scas
xor
mov
je
outsl
and
sbb
push
mov
out
dec
js
jmp
xor
mov
xor
inc
mov
popa
and
jg
ja
sub
cmp
in
popf
fcos
call
cmpsb
inc
into
add
xchg
iret
das
ret
dec
cmp
sbb
sti
jle
cwtl
lret
add
sbb
out
aad
unpcklps
popf
divb
roll
mov
pushl
sub
popa
adc
popf
and
and
les
test
lcall
test
jbe
sti
addr16
cmp
movsb
js
popf
mov
sub
and
out
stc
push
add
dec
push
loop
fwait
inc
jnp
or
fisubrl
imul
insl
mov
sbbb
and
lret
mov
mov
addr16
mov
outsl
cli
sbb
not
clc
add
test
xchg
mov
repz
pop
add
incl
mov
push
fwait
push
xor
mov
ror
inc
add
aad
lea
mov
incl
cmc
cld
ret
lods
or
xchg
movsl
nop
lahf
shll
cmp
lock
jne
test
lcall
cmp
insb
fcom
sbb
push
fadd
cltd
ja
lock
test
pop
push
clc
in
imul
sub
jmp
dec
out
cmp
add
and
xchg
ret
pop
or
scas
mov
pop
xor
pop
xchg
ss
adc
mov
repnz
mov
ds
mov
sub
inc
ss
outsb
mov
repz
call
cmp
mov
aam
xchg
jno
rol
movsb
sbb
push
repz
or
pop
imull
inc
sbb
call
rclb
xor
enter
add
sbb
cmp
mov
cmp
stos
les
cmp
add
dec
xchg
ja
jl
mov
inc
test
or
inc
dec
cmp
xchg
jb
or
pushl
xchg
jno
lahf
mov
push
push
movsl
mov
push
fs
jp
mov
ljmp
inc
outsl
imul
sub
test
add
mov
pop
lret
stos
lahf
mov
lcall
mov
adc
jle
mov
xchg
rclb
cmpsl
imul
aas
mov
outsl
dec
push
je
ffree
sbb
cmpb
shll
jb
incl
mov
pushf
repnz
jno
arpl
mov
test
enter
mov
inc
pop
into
dec
push
jg
ficoml
bound
push
out
push
pop
dec
ret
sub
in
mov
ljmp
repz
add
ficoml
addr16
xchg
data16
loopne
sbb
scas
loop
cmp
xchg
jle
clc
ret
movsb
ret
ss
ljmp
add
aam
sbb
loop
mov
imulb
std
lock
jmp
andl
sbb
or
pop
mov
aam
push
sbb
adc
pop
cmp
test
lea
mov
clc
pop
mov
sub
call
mov
cmc
decl
addr16
sbb
cwtl
fcomi
aad
mov
scas
cmp
dec
ljmp
lods
test
add
cmpsb
adc
js
xchg
sbb
scas
xchg
ljmp
repnz
movsl
sbb
stos
sbb
dec
pop
xor
out
mov
cmc
pop
mov
call
clc
adc
cmp
jo
lret
call
cltd
ljmp
ret
mov
push
fstpt
jno
mov
arpl
or
shll
xchg
incl
jg
stos
outsl
jmp
pop
mov
inc
xlat
mov
imull
movsb
dec
xor
test
adc
incl
mov
out
rdmsr
and
scas
fidivrs
mov
imul
mov
call
mov
gs
out
add
inc
mov
jmp
push
stos
sbb
addb
pushl
xchg
dec
hlt
dec
incb
lods
push
aas
or
xchg
pop
jecxz
adc
push
pop
sbb
pop
push
orb
hlt
or
pushl
in
xlat
popf
popa
test
out
mov
daa
in
jecxz
add
repz
xchg
cmpb
ja,pt
cmpsb
repnz
sahf
inc
dec
jno
out
movsl
mov
jge,pn
jns
shrb
inc
jae
movsl
lods
jne
data16
roll
jmp
add
pusha
sahf
pushf
stos
dec
adc
lret
hlt
int3
mov
jg
mov
sbb
mov
lea
sbb
xchg
jae
in
ficompl
test
aas
push
and
int
dec
ds
int
popf
dec
rorl
call
jbe
cmpsb
mov
mov
cwtl
hlt
inc
cwtl
and
inc
stc
jo
lds
pushf
xchg
incl
dec
int
aad
mov
in
test
loop
xchg
daa
add
jge
ljmp
lcall
out
lods
push
cmpsb
pop
mov
cmp
mov
cmc
mov
gs
dec
out
mov
lea
sar
jmp
rcrl
or
dec
xor
insb
insl
sub
lea
out
cmp
clc
incl
sbb
cmp
pop
testb
push
mov
push
mov
sbb
idiv
fsubs
xchg
cmp
lods
mov
mov
fs
scas
xchg
mov
inc
ret
lods
xchg
xor
xchg
mov
inc
out
xlat
mov
call
shr
xchg
insl
xor
xchg
mov
xor
sub
test
add
jmp
and
xchg
and
adc
aaa
push
in
shr
add
lea
call
lods
xchg
cmp
inc
push
cmp
daa
adc
xor
jl
movb
call
mov
ds
or
mov
sti
cwtl
fimuls
and
lret
cwtl
stc
mov
inc
into
xchg
scas
mov
and
dec
inc
jmp
in
dec
xchg
fdivrs
clc
lea
ljmp
fmuls
imul
fxch
ds
dec
popf
jnp
pusha
dec
mov
inc
or
sub
dec
aam
add
in
std
and
ljmp
dec
pop
ret
jne
scas
jle
sti
imul
jae
lds
testl
push
adcl
negb
jno
push
lret
orl
leave
xchg
loopne
pop
mov
pop
cmc
jmp
insb
xchg
call
bound
mov
leave
mov
jp
pop
movsb
jl
push
stos
shll
xchg
or
hlt
fwait
arpl
cmc
fwait
xchg
mov
les
push
cld
imul
xor
lods
add
sub
pushl
push
push
mov
dec
shll
cmp
xchg
test
bound
jb
imul
sub
std
mov
lock
mov
les
rolb
push
scas
je
sub
cmpsl
icebp
jmp
mov
js
add
mov
gs
add
inc
mov
lcall
pusha
jno
and
mov
leave
push
push
call
cmp
sub
call
ja
out
jno
int
outsl
mov
and
in
inc
ljmp
shrb
inc
xchg
pop
xor
ljmp
xlat
orl
in
popa
pop
ret
es
jl
and
ljmp
cmc
stc
push
inc
dec
add
mov
call
dec
insl
pop
into
jge
dec
lret
stc
dec
push
fldenv
mov
lret
fs
sub
setp
pop
mov
and
incl
and
and
sbb
push
adc
fs
mov
adc
pop
cmp
fadd
dec
mov
inc
insl
ret
adcb
fnstcw
ret
pop
ja
dec
ja
mov
jmp
movsl
outsb
into
loope
subl
mov
fdivrp
dec
adcl
mov
pop
and
mov
mov
arpl
out
mov
sti
xor
or
ljmp
sbb
movsb
aad
jns
rcll
cmp
pop
or
aad
and
das
jg
addb
mov
sbb
stos
ficoms
mov
xor
test
push
test
push
push
and
in
mov
mov
pop
cmovb
popf
xchg
xchg
rcrb
scas
pop
fwait
cmp
call
jge
push
gs
sbb
and
sbb
data16
pop
js
sub
or
jge
mov
lcall
cld
fcompl
icebp
in
inc
xchg
sbb
ss
inc
jg
mov
pop
and
push
lcall
mov
movzbl
push
push
pop
icebp
test
adc
push
xchg
sbb
in
inc
xorb
jb
cs
int3
push
adc
jns
sti
xchg
hlt
mov
mov
push
dec
inc
lcall
notl
jo
repz
xchg
cmc
aam
mov
sti
sbb
roll
inc
add
in
mov
xor
inc
iret
ffree
fdivs
mov
or
jmp
lods
incl
mov
test
adc
xchg
rolb
pop
adc
mov
xor
pop
jae
pop
lock
push
jns
mov
adc
pop
or
xor
or
out
in
gs
icebp
xchg
pop
push
xor
imul
or
aad
or
pop
aam
jg
cmp
lods
pop
orl
mov
nop
or
incl
adc
or
lods
xor
dec
mov
sbb
cmc
call
mov
or
add
xchg
add
pop
mov
int3
sbb
mov
movsl
xchg
call
rcrl
decl
out
into
repnz
mov
test
jg
and
pop
inc
shll
add
movsb
mov
incl
fsubrs
scas
fmuls
das
bnd
pushf
jg
mov
adc
sub
cli
sbb
pushl
fsubrs
loope
adc
push
aaa
cmpsb
pushf
xchg
mov
xchg
xchg
jg
sub
push
leave
inc
icebp
adc
xchg
fucom
pop
mov
jne
arpl
lock
jp
loope
adc
pop
inc
ds
out
add
push
les
call
jge
std
jg
out
sbb
roll
adc
nop
sub
ret
add
decl
cmpsb
jb
int
sbb
add
jne
push
xor
scas
in
push
dec
call
cmp
cmc
insb
and
adc
mov
cwtl
pop
scas
jmp
push
movb
ds
incl
mov
sub
fcmovbe
xor
jae
inc
decl
lds
movsb
jp
dec
dec
je
cmp
pushl
pusha
sbb
repz
push
les
stc
into
cmp
je
jmp
mov
in
decl
add
lret
cmp
rorb
addr16
xor
cmp
dec
cmpsb
dec
add
pushf
je
ljmp
cli
pushl
xor
jmp
jmp
lods
pop
lret
xchg
mov
decl
loopne
add
and
in
push
gs
popa
sub
sbb
mov
decl
lock
sub
dec
in
xchg
add
mov
lret
aam
enter
sarl
mov
jne
xor
pop
int
xchg
mulb
es
dec
push
rcl
add
jmp
test
mov
imul
sub
andb
popa
leave
mov
jmp
mov
rolb
iret
stos
bound
test
mulb
popa
mov
ljmp
shll
ret
lcall
inc
inc
sbb
cwtl
xlat
or
and
or
jp
jmp
jmp
movsl
aam
rclb
jmp
les
and
es
mov
incl
cld
ja
pop
test
cmc
in
inc
cli
test
xchg
fcmovnbe
cmp
jmp
pop
imul
jl
std
mov
les
or
fsubrl
ficompl
jmp
push
push
or
jae
inc
dec
hlt
sub
jno
sbb
jmp
xor
pop
hlt
inc
incl
std
mov
dec
sbb
pop
std
hlt
rcrl
ljmp
mov
pop
add
sbb
adc
xchg
movsb
das
insb
jne
ror
xlat
jae
fadd
loopne
jmp
jle
inc
add
adc
frstor
movsb
push
mov
mulb
xor
xchg
sarl
jmp
jno
imul
out
push
xchg
jecxz
cmc
leave
negl
and
inc
call
dec
fsubrl
push
jmp
and
pusha
pop
xchg
stc
es
adc
incl
test
in
xchg
enter
and
and
mov
bound
lods
dec
popa
pop
incl
int3
aaa
mov
sub
mov
sub
adc
faddl
mov
mov
jbe
add
call
out
adc
mov
mov
ret
pop
push
inc
popf
inc
js
test
into
cld
and
outsb
mov
call
xchg
stc
orl
lcall
lret
push
subb
call
inc
pop
inc
jg
lret
add
dec
repnz
jp
cltd
addr16
jo
mov
push
mov
sbb
incl
cwtl
lahf
rorl
jg
mov
pushf
fildl
aad
decl
outsl
pop
mov
or
test
xor
push
push
push
je
loop
push
jecxz
add
call
rorb
addr16
pop
mov
mov
adc
test
push
in
icebp
scas
lods
bound
pushl
call
mov
shlb
jnp
cld
ss
jns
fistps
pushf
call
cmp
pop
mov
int
lss
cmp
movsb
jb
or
insl
cmp
push
into
mov
repz
ss
fdivp
push
daa
nop
adc
push
sub
jb
int
dec
call
cmp
mov
adc
ljmp
std
adc
cmp
aam
out
andl
fbstp
sub
decl
mov
out
in
or
and
inc
mov
insl
sbb
pop
test
ds
fwait
jmp
push
xchg
adc
mov
mov
nop
mov
pop
ja
cltd
ja
test
jl
pusha
xchg
mov
ret
pusha
testb
stos
std
ljmp
imul
mull
rorl
mov
mov
jecxz
cmc
or
lcall
sub
xchg
insl
push
jg
pop
jb
add
lahf
pop
aad
call
push
jae
popf
pop
push
btc
cs
dec
sti
lea
scas
push
imul
lret
cmp
aad
cli
sbb
out
outsl
test
mov
mov
lcall
test
or
mov
outsb
xor
mov
xor
xor
orb
cmc
mov
test
dec
enter
cli
jmp
xchg
jns
push
mov
and
rolb
out
rorl
hlt
decl
pop
push
inc
int
xchg
xor
notl
das
pop
jg
xor
test
jb
pop
or
and
lret
std
test
loopne
and
ficomps
cmp
dec
or
or
inc
leave
subl
jge
sbb
incl
sarb
xchg
xor
add
fnstsw
sbb
cltd
mov
mov
out
ljmp
jbe
mov
cmp
sbb
dec
loop
scas
mov
jo
cli
xchg
jge
loope
lcall
mov
push
into
test
sub
pop
and
sbb
in
inc
enter
ljmp
dec
mov
jle
pop
adc
repz
sarb
jnp
cmp
addr16
lcall
lock
push
xor
pop
cmp
test
in
shr
adc
ds
mov
ud0
ljmp
rcll
insl
icebp
scas
xchg
or
and
add
cltd
sahf
xchg
sbb
incl
repz
lcall
mov
mov
cli
pushl
add
popf
lahf
push
in
push
dec
pop
cmp
mov
sbb
mov
rorb
outsl
jb
imul
sbb
cmp
and
std
subl
dec
cltd
or
call
imul
push
out
mov
mov
lret
pop
mov
ss
incl
jge
adcl
mov
pop
cmpb
and
adc
decl
push
data16
add
fdivrl
aam
pushf
sbb
or
clc
mov
mov
mov
rclb
sbb
test
ljmp
or
pushf
lahf
cli
fsubl
add
or
lret
outsb
jge
call
jecxz
cwtl
clc
in
orl
inc
or
mov
decl
or
lret
loope
inc
mov
loope
mov
sbb
xchg
and
jmp
dec
adc
jae
mov
dec
ss
or
stos
fisubl
inc
iret
inc
sti
arpl
mov
outsl
testl
and
pop
or
xchg
imull
addr16
cmp
movb
sub
mov
dec
inc
push
dec
orb
lcall
cmp
mov
jecxz
push
jle
cltd
xor
inc
push
bound
fistpll
jbe
lcall
insb
jg
testb
and
cmp
pop
ret
push
mov
jnp
pusha
mov
pushl
test
fs
sbb
mov
inc
test
inc
cmp
test
fcomps
rcll
jp
cmp
jle
stc
aad
jl
mov
das
dec
test
or
fdivl
sub
inc
jno
sar
jmp
in
popa
pop
rcr
and
stc
jae
aaa
mov
inc
sbb
add
lcall
lcall
inc
loope
and
gs
dec
fidivrs
push
push
cmp
cmp
sti
or
negl
jg
cmp
adcb
rol
jae
jne
fidivs
jp
mov
cmp
jmp
fdivs
imul
cwtl
test
jl
filds
das
and
mov
incl
les
popf
cltd
push
jbe
pusha
or
add
lret
scas
fcmovb
jmp
or
jg
das
cmpsl
pusha
pop
enter
test
je
cltd
sbb
insl
fs
dec
clc
jns
lods
lcall
lret
mov
iret
or
movsl
and
jnp
enter
inc
jl
cltd
fdivrp
pushl
mov
adc
daa
mov
and
pop
mov
inc
or
jmp
aaa
decl
fs
mov
sub
pop
mov
movsl
insb
sub
icebp
jo
call
call
mov
push
add
push
push
fisubrl
cmp
lods
jae
sub
lret
dec
cmp
js
loopne
sub
js
popf
and
or
jb
repnz
jmp
mov
rorl
mov
sbb
insl
ds
loope
inc
lds
mov
cmp
mov
add
add
pop
push
lock
sbb
pop
cmp
jecxz
lea
push
push
jnp
gs
les
cwtl
ret
jno
fdivs
pop
leave
fildl
int3
out
xor
push
repz
inc
or
arpl
pop
xchg
add
pushl
mov
mov
mov
inc
jle
call
fsubp
gs
push
sub
and
lcall
or
mov
in
pop
sub
mov
stc
and
sar
push
scas
cmpsb
pop
xor
mov
cmp
sbb
jmp
mov
mov
lret
jg
call
sbb
mov
jnp
xor
mov
sahf
pop
sbb
jmp
imul
rolb
pop
add
sub
aaa
cmc
ss
cltd
mov
jg
mov
pop
lcall
lcall
pop
add
push
jno
js
not
add
shld
pop
inc
loope
enter
dec
or
cli
sub
push
add
mov
lods
push
mov
mov
in
mov
sti
add
dec
mov
mov
sti
in
xor
xchg
xor
add
js
dec
push
mov
sbb
negl
dec
xchg
dec
lcall
push
jno
inc
push
dec
cmc
adc
fmull
push
push
inc
xlat
lcall
inc
inc
adc
push
movsl
xorb
mov
cmp
xlat
or
fistpll
outsl
xor
adc
mov
mov
ret
movsl
shrb
ljmp
jae
jmp
in
inc
addr16
sbb
js
jne
mov
imul
sub
jmp
cmp
fcmovb
int3
ret
push
jp
popl
push
repz
in
rcr
call
jg
mov
sahf
jns
mov
jg
into
aas
mov
mov
js
jnp
sbb
ret
mov
adc
lahf
jae
ret
sbb
ret
out
ret
xchg
or
cmp
sti
imul
add
jnp
xor
adc
movsb
jbe
test
incl
enter
jp
xor
ret
insl
ss
in
mov
adc
pop
or
jg
incl
enter
adc
mov
repz
adc
or
scas
lahf
pop
pushl
dec
cmc
loop
fsubrl
cmpsb
dec
clc
test
xchg
mov
ficomps
jg
jmp
or
in
outsl
adc
xor
xchg
cmp
pusha
std
negb
jmp
loop
mov
decl
lock
inc
lahf
faddl
xlat
dec
pop
lock
shrb
adc
and
inc
loope
aas
ret
aad
aad
out
cmp
mov
xor
pusha
in
adc
dec
stos
mov
cmp
jns
jp
cmp
flds
sub
ljmp
jne
dec
addr16
clc
or
test
push
lcall
or
xchg
or
jmp
inc
inc
negb
notb
push
mov
or
pop
lahf
ja
repz
fwait
push
mov
out
and
mov
scas
stos
test
shr
sbb
ljmp
lcall
sahf
pop
sub
leave
in
push
lret
mov
je
test
in
ret
xlat
clc
decl
loop
adc
dec
cmpsb
push
mov
xchg
pop
das
xor
aas
or
pop
mov
repnz
clc
movsb
sub
or
and
jbe
repz
test
mov
ljmp
sbb
and
sbb
loopne
dec
xchg
fs
xchg
and
sub
sbb
jmp
leave
xchg
sub
rcr
sub
pop
add
decl
or
test
daa
mov
sub
js
jg
xchg
sub
or
jmp
and
lods
outsb
lds
dec
sub
cli
jmp
jl
sahf
cmp
insl
movsb
test
xchg
daa
sbb
lret
out
imul
ljmp
xor
movsl
xchg
scas
stc
lods
es
pop
ss
arpl
add
out
push
bound
daa
imul
push
sbbb
or
push
mov
push
xor
inc
incl
loope
mov
inc
sbb
inc
adc
cwtl
jp
jmp
sbb
push
mov
ds
pop
pop
std
hlt
inc
jnp
add
cmpsb
push
jecxz
in
pop
into
gs
incl
cltd
or
xchg
hlt
or
hlt
push
and
cmpsb
cmpsb
loopne
loop
jo
sbb
cmp
cmpsb
add
lcall
push
or
stc
xchg
jg
fcomps
cltd
in
idivb
add
ret
movsb
cmp
into
shlb
mov
loop
pushl
fistpll
mov
mov
push
push
lock
lods
cs
ds
push
cmp
mov
cld
sbb
addr16
mov
inc
aam
dec
hlt
xor
fwait
aaa
or
xor
lcall
decb
cwtl
xchg
mov
pop
add
inc
jae
push
in
jmp
cmp
cmpsb
push
outsb
js
xchg
fnstcw
cmc
insb
negb
pop
icebp
faddl
decl
cmp
push
cli
sbb
insb
pop
stc
mov
jnp
mov
mov
mov
sar
test
add
testl
icebp
bound
pushf
adc
ret
inc
jg
clc
push
jae
icebp
inc
or
clc
js
jl
incl
nop
add
xchg
inc
xchg
cmpsb
and
std
stc
pop
inc
lods
decb
xchg
stos
or
aaa
inc
inc
es
gs
ljmp
mov
push
scas
arpl
sbb
fidivrl
adc
test
sub
decl
lock
iret
flds
decb
mov
testl
mov
jmp
dec
pop
out
adc
repnz
push
ret
popa
xchg
cltd
stos
xlat
call
add
mov
mov
dec
das
sahf
jge
add
les
sbb
jle
and
cli
mov
cld
adc
aaa
push
pop
xor
test
xchg
cmc
mov
pop
mov
hlt
or
filds
nop
in
xchg
lcall
adc
mov
or
push
inc
adc
pop
jg
lea
adc
sbb
or
subb
arpl
incl
insb
pop
xchg
push
shll
out
out
je
loop
insb
movsb
fsqrt
aam
repnz
fs
fcomps
cmp
fists
push
xchg
pop
xchg
es
push
jle
mov
add
shll
push
sar
mov
std
mov
iret
mov
ljmp
mov
jge
xor
je,pt
mov
adc
je
cwtl
out
inc
popf
int
or
call
add
jecxz
or
pop
xor
sbb
push
out
loop
out
mov
jmp
push
jae
xor
jne
fwait
sbb
push
mov
add
int3
repnz
add
arpl
decl
jle
inc
jbe
and
inc
enter
cmp
ror
inc
or
xchg
pusha
mov
mov
cmp
in
mov
push
pop
rorb
pop
and
or
mov
lahf
dec
push
adc
dec
popf
cmpsb
movsb
dec
mov
and
jae
push
bound
rorl
or
fxam
inc
dec
push
std
lcall
je
inc
dec
mov
add
sbb
mov
jno
and
cmc
pusha
adc
sbb
mov
lods
xor
mov
cmpsl
sbb
xor
pushl
std
jecxz
jae
inc
stos
jbe
arpl
test
leave
aad
sub
test
loopne
adc
push
mov
pop
mov
push
dec
fildl
add
popa
out
add
jecxz
add
xchg
fisubrl
mov
and
cmpsb
add
cmp
insl
dec
jg
call
push
fdivs
push
js
ljmp
mov
lcall
in
lret
xor
mov
jl
lods
int
push
ss
pop
dec
out
add
cmp
or
enter
ljmp
pop
lahf
pop
xchg
push
aas
dec
mov
lods
pushf
fistps
xchg
dec
dec
loop
mov
lcall
test
add
jp
push
push
push
add
pop
push
inc
dec
pop
hlt
xchg
test
pushl
inc
decl
dec
ret
jnp
sar
pop
adc
jg
and
jno
mov
mov
pop
push
jl
rcr
insl
repnz
repz
add
clc
xor
je
call
lods
mov
int3
mov
adcb
fildll
pushl
pop
adc
es
aaa
xlat
movsl
incl
xor
push
pop
or
or
jne
incl
sbb
mov
xchg
dec
mov
jmp
sub
cmp
ljmp
xchg
cmp
mov
pop
jb
dec
add
mov
incl
imul
mov
repnz
negb
and
mov
lret
fnstcw
fwait
mov
pop
xor
incb
dec
and
or
mov
hlt
out
adc
mov
loope
cmpb
repnz
loop
jge
sbbb
mov
fmull
and
enter
mov
aas
out
mov
sub
jb
jle
movsl
pusha
enter
cmc
sub
call
mov
adc
pop
rorl
push
mov
jmp
cmp
lcall
push
jb
pushf
or
xchg
sub
xchg
sub
ljmp
push
rolb
mov
cmp
lea
mov
cmp
lods
ljmp
clc
and
std
inc
pop
bound
jae
or
add
mov
pop
loopne
sub
xor
push
arpl
mov
adc
fwait
xchg
add
lods
mov
and
call
gs
loop
add
emms
cmp
ja
movsb
fidivs
jns
mov
in
gs
iret
sar
lcall
adc
and
enter
sarl
aad
jns
data16
scas
jge
scas
movsb
jae
dec
mov
jp
fcoml
pushf
xor
push
test
ret
out
sub
push
lret
lds
in
push
outsl
pop
jg
ljmp
mov
pop
mov
jge
rol
stos
pop
testl
ljmp
mov
cmpsb
lods
cwtl
das
mov
adc
icebp
adc
cmp
mov
push
clc
imul
jmp
sbb
pop
jbe
pop
jnp
jg
inc
inc
adc
cld
addl
cmp
imul
les
mov
loope
jg
xlat
mov
cwtl
ljmp
inc
mov
push
fsubrs
rclb
int3
mov
cltd
lods
mov
fidivs
dec
dec
sahf
adc
mov
call
jb
push
sub
pushf
adc
cwtl
test
ds
call
dec
ret
enter
xchg
and
pushl
outsb
lods
mov
jae
mov
xor
push
jl
inc
decl
lods
scas
jle
imul
mov
aaa
push
inc
dec
cli
cmp
shr
jns
mov
call
xchg
out
inc
dec
push
cmp
pop
jp
sarl
lret
aaa
out
clc
call
push
sub
xchg
nop
rcrb
xor
add
cmp
jmp
repnz
outsl
inc
mov
or
jae
nop
sbb
int3
mov
jmp
pop
hlt
data16
pop
mov
mov
test
jbe
jmp
xchg
jbe
insb
jns
xor
out
daa
adcb
jecxz
les
daa
xchg
lcall
loop
jmp
hlt
insl
sbb
arpl
mov
cmp
xor
setp
pop
out
or
sub
mov
mov
imul
arpl
decl
in
mov
xchg
adc
ret
into
rcrl
dec
jo
push
xor
ss
cmp
incl
pusha
js
lahf
ljmp
jb
inc
arpl
sbb
cmpsb
pop
or
mov
decl
rcl
or
loop
jge
jmp
ret
mov
inc
mov
popa
pop
jge
outsl
cli
or
sub
bound
pop
fwait
imul
and
fcomip
add
pop
scas
lock
or
xlat
fldcw
lcall
loopne
fistps
lret
adc
adc
push
ficomps
and
inc
pop
pop
push
adc
pop
jbe
mov
clc
or
xor
scas
cltd
out
lock
adc
sbb
scas
clc
incl
xor
lock
push
xor
inc
das
mov
popa
add
cld
push
icebp
dec
movsb
fdivs
mul
push
into
push
stc
mov
fimuls
out
push
push
xor
add
sti
push
sub
pushl
jns
inc
int
jl
shll
mov
leave
repz
jmp
ljmp
push
pop
xchg
lods
sbb
mov
fwait
shrl
call
addl
das
push
sub
stos
fisttpll
push
out
xchg
pop
movsl
dec
test
arpl
dec
mov
shlb
rorb
mov
and
pop
int3
nop
push
xchg
xchg
in
push
cmp
leave
js
inc
lret
out
xor
jp
push
cld
mov
jbe
dec
inc
adc
cmp
ljmp
hlt
xchg
cmp
lock
imul
mov
iret
dec
sub
xorb
cld
dec
push
outsb
mov
lcall
mov
out
stc
lods
cmp
jmp
mov
clc
cltd
outsb
in
dec
icebp
jg
mov
push
int
xor
adc
imull
add
mov
and
xchg
test
xor
call
xchg
sahf
jb
cmpsb
hlt
add
sbb
and
lea
push
incl
mov
xchg
pushl
clc
jo
lods
and
mov
mov
xchg
mov
out
ja
xchg
xchg
jmp
jo
inc
lahf
arpl
orb
sbb
divl
cmpl
sti
in
cmp
add
xor
add
and
mov
cli
popf
daa
jo
in
push
movb
out
xchg
scas
mov
jmp
xchg
shll
mov
push
repnz
push
pop
in
std
leave
pop
sub
mul
call
insl
arpl
andl
cmp
test
mov
pop
ljmp
fistps
loope
insb
mov
mov
or
aaa
std
fdivs
loope
lods
mov
pusha
data16
mov
fisttpll
add
dec
cld
push
in
jmp
clc
lods
outsb
movsb
pop
pusha
push
mov
imul
push
arpl
jg
or
cs
sar
sarb
xchg
push
scas
lcall
lret
lret
les
jae
lcall
popf
mov
repnz
sub
and
pop
pop
in
xchg
popf
or
repnz
cmpsl
imul
push
aam
call
fs
lods
push
inc
jmp
dec
mov
sbb
lahf
jo
cmc
xchg
xor
dec
inc
adc
in
adc
sub
in
loope
ljmp
add
xlat
lods
xlat
xlat
or
pop
das
mov
mov
and
dec
pop
push
js,pt
nop
dec
in
leave
pop
sar
fwait
sbb
test
out
mov
dec
stos
sbb
pusha
adc
test
ljmp
jle
imul
out
hlt
out
add
xchg
daa
bound
arpl
incl
lds
mov
push
pusha
ret
cmpl
and
orb
mov
sbb
ljmp
xor
fisttpl
andb
lahf
pusha
adc
sub
mov
jp
jmp
inc
loopne
les
movsb
jge
popa
loopne
mov
pop
or
pushf
ficomps
sbb
mov
cmpsl
jo
xlat
inc
popa
push
xor
in
in
popa
jo
add
xor
into
and
repnz
cld
lcall
fisubl
and
dec
push
inc
arpl
out
pop
ja
push
int
sahf
fidivrl
mov
push
loop
push
xchg
cmp
jae
push
sub
stc
cmpsl
fstp
jl
stc
lahf
pushl
repz
mov
cmc
lea
pop
divb
push
outsl
cli
lcall
fistl
cli
ljmp
mov
mov
push
fidivrs
lods
or
lcall
xchg
xor
imul
fisubrl
lahf
stc
std
xor
cmp
ljmp
push
xchg
dec
insb
push
and
or
jle
lock
aam
adc
mov
hlt
lahf
inc
aad
mov
pop
mov
mov
push
mov
in
jo
xbegin
ss
pushf
xchg
in
out
fisttps
fsubrl
mov
fimuls
repnz
mov
mov
lods
add
dec
aas
jp
mov
mov
or
mov
and
call
or
aaa
dec
rcll
pop
scas
jmp
rcr
sahf
std
adc
dec
xor
ljmp
mov
popf
fwait
push
imul
imul
jo
out
pusha
lcall
ljmp
dec
dec
das
repnz
fs
mov
jge
or
push
rolb
sub
out
push
ret
cld
jno
mov
push
outsl
jge
jg
scas
xchg
incl
jmp
xor
and
repnz
dec
pop
mov
xchg
sub
pop
cld
mov
es
movsl
lcall
shll
jmp
enter
rorb
add
dec
aaa
adc
xchg
aam
lcall
sbb
fbld
pop
pop
bound
cmp
jo
stc
dec
lea
les
ja
ljmp
dec
mov
inc
pop
roll
movnti
std
mov
mov
test
xchg
and
repnz
add
inc
mov
lcall
jns
mov
cmp
adc
mov
gs
in
jmp
dec
std
call
loop
ret
mov
sub
lcall
inc
cmp
add
sbb
ja
imul
fisttpll
out
pop
adc
mov
jmp
mov
jne
mov
int3
jmp
sar
enter
push
adc
sub
xchg
stos
pop
or
pop
jmp
and
mov
mov
adc
fisubrs
and
cmp
pop
arpl
icebp
mov
inc
jne
loop
iret
jge
movsl
push
adc
je
jmp
pop
stos
dec
add
das
inc
mov
mov
nop
stos
cmp
test
mov
incl
pushf
lds
out
dec
push
sub
push
ficompl
movsl
mov
pop
xchg
fdivp
sbb
inc
jno
add
ljmp
or
xor
jno
in
sbb
jg
iret
sub
cmp
shlb
lcall
push
mov
jg
jp
sbb
fldenv
jge
decb
ds
inc
pop
cmp
cmpl
incl
rolb
or
cmp
mul
imul
lcall
dec
pop
cmp
incl
mov
in
fstpl
or
sub
int3
daa
jp
jne
and
fdivr
dec
inc
dec
and
call
sub
adc
loopne
movsl
movsb
repnz
jle
mov
cmpsl
cmpsb
jmp
and
push
pop
xchg
sbb
imul
jmp
aad
stos
add
pushl
std
mov
push
sbbb
mov
jo
mov
adc
mov
std
fldl
movsl
out
and
shlb
adc
leave
hlt
and
es
hlt
push
lods
fneni(8087
push
out
xchg
pop
pop
add
xchg
pushl
in
jns
pop
jno
xor
cltd
pop
mov
addr16
cmp
xchg
mov
popf
sbb
decb
sub
jle
ljmp
cmp
out
sbb
add
jmp
cmp
ds
mov
pop
or
xor
xchg
fs
mov
add
filds
push
adc
ds
stc
stos
pop
mov
inc
sarb
je
decl
js
fwait
nop
cmpsb
loop
mov
jmp
sbb
ljmp
imul
fsubl
enter
scas
test
inc
fs
je
xchg
mov
test
lds
decl
in
gs
outsb
inc
in
push
sub
fistpl
aas
xorb
cmc
call
addr16
and
jb
push
jmp
push
and
dec
cli
out
xor
sbb
loopne
in
cmc
sbb
ss
rcll
stos
popf
call
xchg
mov
mov
loopne
jmp
xchg
shlb
clc
call
lea
cmp
clc
shll
bound
xor
cmpsb
inc
pop
lcall
mov
push
mov
pop
shr
dec
cmpsb
sub
lds
ja
incl
sbb
fcmovb
subl
pop
mov
aas
ret
cmpsb
fs
jge
push
mov
jb,pt
iret
daa
and
in
imul
dec
jmp
push
and
dec
lods
sub
stos
jp
fistpll
pop
mov
mov
mov
adc
add
jmp
lds
lock
cmp
test
jecxz
outsb
cmc
push
pushl
jp
push
decl
in
add
sub
sub
xchg
add
inc
push
les
inc
loope
sbb
incl
je
ret
aaa
lock
add
arpl
jns
add
dec
sbb
insl
cmp
dec
jle
loop
lcall
pushf
jp
adcb
clc
pop
inc
sbb
mov
incl
enter
push
int3
lds
cwtl
pop
fstps
cld
push
mov
mov
cmp
and
fmul
shl
jge
ss
sbb
inc
hlt
cld
sti
lock
lret
jno
ja
xchg
movsl
mov
popa
push
cmp
push
andb
xor
sti
inc
int
cltd
mov
mov
insb
subl
lahf
mov
xor
pmulhrw
push
pop
in
sbb
out
adc
out
cld
fldcw
inc
lock
xchg
sub
dec
cltd
sbb
pushl
into
repnz
cwtl
into
jno
iret
fwait
shll
inc
xchg
jae
and
stos
int3
orl
pushl
imul
cmp
mov
push
dec
mov
sbb
inc
enter
ljmp
test
mov
pop
aad
aaa
jbe
std
dec
ljmp
inc
push
fmulp
je
rorl
jae
testl
push
int3
cmp
hlt
call
inc
sub
mov
in
imul
popf
push
fistl
fs
fisubl
scas
adc
adc
push
push
and
sbb
xor
push
cmp
es
pop
and
inc
cmpsb
decl
jle
nop
pop
and
and
fistl
dec
repz
mov
jmp
lcall
inc
in
add
lock
mov
sarl
push
call
lcall
andl
or
iret
sub
jmp
shrb
out
add
call
clc
xor
sbbb
stc
cmp
pop
std
jo
sub
leave
push
in
lret
pop
call
inc
lahf
decl
dec
mov
or
ret
mov
mov
aad
call
adc
add
mov
ds
add
test
js
dec
imul
hlt
pushf
sub
xchg
data16
aam
insb
idivb
push
sub
sti
pop
arpl
mov
inc
rcr
je
or
loope
and
aam
scas
jno
cmp
xchg
pop
testl
pop
lret
bound
int3
movsb
mov
add
mov
call
jl
pop
xchg
pop
push
push
lea
push
sbb
mov
or
jmp
xchg
xor
test
and
fdivs
cld
mov
adc
incl
mov
mov
roll
mov
mov
xor
test
xor
pop
mov
pushl
lret
xchg
enter
scas
outsb
pusha
push
fsubs
ret
mov
cmp
fimull
cltd
xchg
mov
and
inc
subb
inc
and
pushf
jl
cmp
jg
xor
in
cmc
mov
notb
jae
ja
dec
outsb
sub
add
pushl
ds
sub
jnp
cmp
pop
adc
imul
push
outsb
loop
lcall
into
sub
lods
and
ret
movsl
fcom
push
push
in
das
add
aas
stc
mov
push
ret
pop
bts
cmovo
cmp
dec
mov
lock
adc
and
jl
adc
adc
push
stos
pop
push
loopne
int3
jb
lahf
mov
ret
decl
and
xchg
call
loope
in
dec
hlt
int
xor
jmp
jg
lcall
pop
jmp
xor
arpl
inc
cmpsl
call
loopne
shr
sbb
mov
and
jo
cltd
dec
mov
push
push
std
in
popa
test
add
pop
lea
pushf
cmp
pushf
adc
idiv
cld
push
jns
dec
sarl
adc
or
in
pop
pop
xor
pop
add
stos
add
fdivl
adc
add
call
loop
repz
arpl
dec
test
fisubl
cmc
hlt
fcmovnbe
sub
dec
enter
js
jl
adc
xchg
or
test
faddl
cmp
ja
out
push
jp
mov
stc
in
push
jns
sbb
inc
cmp
sbb
xor
jg
push
into
lods
ret
cld
or
mov
or
call
fsubp
jge
outsl
mov
jg
pop
clc
adc
push
add
shrl
mov
shrl
xchg
cmp
xor
adc
inc
aam
incl
mov
mov
adc
push
decb
shlb
ja
dec
xchg
mov
pop
jnp
mov
mov
cmp
loope
dec
mov
es
fidivs
lcall
testb
xor
fisttpl
div
mov
jbe
push
inc
pop
sahf
jns
imul
lcall
cltd
js
jbe
loopne
jbe
push
or
or
es
push
jno
call
xchg
pop
dec
leave
mov
adc
jae
sub
test
repz
leave
cmpsl
cmp
add
sub
out
imul
lret
jl
mov
pop
add
jnp
pop
xchg
in
lcall
scas
pop
clc
mov
or
and
mov
daa
call
incl
mov
mov
orl
sti
push
cmpsl
sbbb
das
push
add
jmp
xor
or
pop
or
sbb
cld
pop
rclw
movsl
popf
mov
fdivr
jmp
loope
dec
and
mov
mov
pop
dec
shr
fwait
les
out
cltd
or
scas
dec
jmp
xchg
xor
cmp
jmp
sub
sub
fcomps
dec
sub
aam
lcall
dec
adc
inc
add
cmp
adc
js
pusha
add
idivb
inc
push
in
ljmp
cmp
inc
rol
iret
jecxz
sbb
shll
add
shlb
sti
decl
stc
sahf
aam
jno
subb
mov
in
call
cmp
sbb
cmp
dec
sbb
lcall
int3
sahf
jg
add
add
incl
sbb
cmpsl
addr16
xor
aad
add
xchg
adc
add
jbe
insl
inc
or
jae
adc
call
mov
mov
int3
stc
mov
push
dec
inc
adc
jb
push
lret
test
icebp
mov
daa
push
nop
or
ss
or
pop
mov
pop
cmp
jmp
cld
dec
insb
stos
jl
xchg
mov
mov
pop
add
int3
mov
inc
leave
sub
jmp
out
cld
stc
mov
les
jnp
loope
repnz
xor
shll
sbb
call
mov
ret
iret
mov
inc
xor
or
fadds
inc
cld
out
cli
mov
nop
add
inc
adc
xor
decl
add
aaa
cmp
sbb
andb
arpl
adc
out
popf
repnz
stos
int3
cmp
addr16
pop
es
jg
jmp
gs
jmp
dec
sahf
dec
dec
sub
pop
pop
adc
test
imul
sti
test
decl
aad
mov
mov
xor
xor
addr16
lea
mov
xchg
and
mov
cmp
lods
push
les
mov
mov
dec
mov
daa
mov
cwtl
jl
add
rol
lcall
repz
lret
pop
xchg
lea
dec
xor
mov
aas
leave
insb
jp
inc
popf
sub
ljmp
mov
imul
lea
cltd
add
dec
incl
sbb
cwtl
out
inc
test
fwait
inc
lahf
jb
push
mov
jo
or
lcall
mov
dec
into
jmp
mov
das
lods
mov
arpl
ret
sbb
cs
call
mov
das
cwtl
loop
cwtl
mov
jb
jle
cmp
pushl
add
orl
ja
insb
and
shr
int
andl
mov
popf
cs
xchg
nop
sbb
push
mov
sti
repnz
fnstcw
push
bound
jl
jnp
or
cmp
or
es
adc
in
cwtl
push
ret
add
nop
out
clc
ljmp
out
std
mov
ret
push
adc
mov
decl
or
aam
pop
xor
add
rolb
idivb
mov
test
hlt
xor
repz
test
push
push
int
lcall
stc
fsubrl
mov
insb
xchg
out
shr
test
mov
lods
add
xchg
push
push
lcall
ljmp
stos
lret
jle
dec
test
daa
jbe
loop
int3
add
stc
nop
jmp
pop
and
sbb
outsl
das
or
pop
test
repz
movsb
iret
push
jae
mov
in
cld
adc
jmp
inc
rcll
cmp
fnstsw
xchg
fimuls
pusha
ds
cmp
int
dec
popf
jg
mov
stos
je
pop
fdivr
dec
and
jae
mov
cld
push
imul
andl
pop
xor
and
or
cmp
xchg
loopne
incl
outsl
push
xchg
lcall
cs
add
out
push
movsl
push
ja
xchg
xchg
movsl
inc
adc
popf
lods
out
cli
out
inc
cld
pop
gs
out
xor
xor
hlt
ds
call
fbstp
adc
jmp
dec
mov
pop
pushf
fs
lods
pushl
jecxz
push
mov
inc
pop
ljmp
push
in
call
decl
incb
gs
and
cli
fistpl
decl
lea
mov
dec
fildl
mov
push
lret
imul
ret
push
pop
pop
inc
inc
jmp
jle
push
ss
cld
roll
ja
fwait
add
ret
sbb
mov
fdivrp
data16
pop
sbb
or
arpl
aaa
stc
in
clc
add
mov
or
adc
insb
mov
xchg
icebp
adc
mov
fcmovnb
sbb
sub
stos
pushl
imull
out
mov
xchg
stc
fstl
and
or
sbb
sub
cmp
push
std
cmp
sbb
pop
pop
stos
daa
jge
scas
jp
pop
lock
lcall
repz
and
or
mov
pop
or
mov
gs
call
jno
adc
cltd
jmp
aam
and
mov
ljmp
jge
push
sahf
insl
fcomip
jp
sbb
in
lods
add
jg
js
adc
push
loopne
decl
ljmp
out
mov
dec
rcrb
adc
lock
cmp
inc
xor
sub
mov
jo,pt
inc
push
dec
loopne
jae
mov
mov
or
incl
pop
out
lock
adc
aam
sub
aas
pop
inc
mov
push
sar
out
xor
scas
pop
jb
push
or
in
inc
in
jno
adc
nop
xchg
sub
sbb
call
ret
fcompl
inc
mov
mov
mov
cs
lds
incl
or
inc
popf
dec
cmpsl
std
dec
sub
mov
aas
mov
lods
jo
decl
mov
add
jecxz
push
icebp
cmp
ljmp
and
jge
push
imul
pusha
mov
or
jle
pusha
sub
jl
jmp
mov
aas
add
push
mov
add
js
dec
adcl
jbe
and
das
sarb
and
ret
fadds
mov
dec
data16
popa
das
and
icebp
das
clc
jnp
shlb
dec
ljmp
frstor
gs
pop
xor
fidivrs
cmp
sub
fidivrl
mov
pop
inc
lcall
and
or
aas
cmp
in
sub
pop
jmp
mov
movsb
jns
cmp
adc
fwait
daa
mov
out
sahf
dec
lahf
mov
ss
mov
jmp
call
or
jnp
cmpsb
push
mov
adc
jmp
xor
xchg
ljmp
or
shr
sub
lret
pusha
stos
mov
dec
popf
push
ja
push
mov
loope
jmp
sarl
bound
and
cmp
mov
cwtl
movsl
aam
popa
xor
mov
ljmp
ss
inc
notl
and
xor
jne
fadds
inc
sub
loop
jge
jmp
sar
sahf
js
aas
hlt
stos
mov
push
dec
in
jbe
jne
shrl
fs
sbb
outsl
test
das
es
cmpsb
fisubrs
imul
ljmp
and
dec
icebp
or
jle
sbb
cmp
ret
add
call
push
ret
mov
sbb
cmp
push
mov
fimull
sbb
and
adc
adc
mov
lret
push
xchg
xchg
movsl
nop
test
mov
call
lcall
push
sbb
mov
xchg
xlat
fisubrs
stos
gs
pop
inc
cmp
mov
cmpsl
insb
jg
mov
lret
push
or
and
push
sub
mov
push
pusha
mov
mov
in
pop
inc
and
xor
fcmovne
mov
mov
push
pop
mov
lods
or
fistpll
add
rorl
ds
test
push
incl
stos
out
xor
insb
xor
xchg
jecxz
xor
sahf
cld
imul
adc
xchg
ds
pushl
testb
orl
mov
fbld
les
lcall
popl
xchg
and
or
jne
pop
iret
mov
test
int
cmp
sti
inc
fnsave
sahf
xchg
call
pop
movsb
lret
in
les
frstor
andl
mov
jp
push
dec
popf
dec
mov
mov
jb
loopne
call
mov
mov
loope
test
xlat
jmp
push
jg
popf
cld
cld
push
xor
outsb
jbe
pop
js
ss
pop
pop
push
dec
sti
repnz
cmpsb
shlb
addb
decl
cmp
jb,pn
mov
movsb
clc
push
cli
jl
xor
call
xchg
push
aam
decl
hlt
lcall
xchg
outsb
push
popa
jo
mov
rclb
dec
pop
or
stos
cs
ja
cli
sbb
addr16
cmp
loop
lcallw
in
add
call
push
add
aad
negl
mov
scas
cmpsb
ljmp
dec
pextrw
pop
outsb
jle
pusha
inc
gs
lret
mov
repz
leave
data16
ljmp
clc
sub
pop
lods
pop
add
mov
xchg
cwtl
or
pusha
xchg
rorb
daa
popa
insl
jl
mov
add
popf
and
int3
call
call
lods
xchg
sub
mov
daa
mov
and
mov
and
pop
in
ljmp
stos
xor
jge
cmp
push
pop
or
dec
add
test
ljmp
cmp
xor
push
dec
xor
ret
dec
mov
lock
mov
inc
xor
daa
lcall
fwait
cltd
add
scas
and
xor
inc
mov
xchg
stos
push
into
add
jno
mov
ljmp
xchg
push
addb
adc
pop
mov
mov
mov
insl
cmp
sub
pushl
stos
mov
jne
lods
pop
cli
lock
incl
cmp
xchg
out
jl
pop
icebp
nop
xchg
mov
fmuls
ljmp
push
pusha
mov
loopne
rolb
push
cmp
mov
cmp
push
mov
loopne
inc
arpl
add
xchg
cmpsl
sub
or
mov
sub
fcos
ljmp
pop
adc
shlb
dec
dec
cmp
int
sub
pop
push
push
cmc
cli
lcall
shr
push
push
lret
cmp
inc
into
aam
pop
fdivl
fs
add
test
fisubrs
pop
stos
mov
insl
sub
push
jo
mov
inc
pop
dec
hlt
daa
bound
jb
shll
fists
out
cmpsb
hlt
decl
call
stos
mov
xorl
mov
out
mov
mov
mov
test
ljmp
cli
jmp
xchg
cli
lods
imul
xchg
adc
dec
or
insb
stos
and
sbb
incl
push
rol
push
inc
pop
scas
shl
stc
rcll
add
fcomps
or
inc
jg
pop
sub
loop
pushl
mov
cmp
xor
dec
cmpsb
push
push
dec
mov
cmp
es
ljmp
xchg
push
mov
fcmovb
leave
les
dec
test
sbb
sbb
pop
popa
mov
cmc
ljmp
push
mov
imul
mov
jge
dec
lcall
incl
out
cmp
into
cli
pop
movsb
jp
pop
push
xor
push
mov
out
pop
call
loopne
sbb
mov
mov
adc
imul
jmp
into
inc
arpl
jl
add
push
or
in
mov
sub
pushl
and
ljmp
mov
cmp
fdivrs
hlt
sahf
inc
xchg
sbb
cmp
call
sub
cmp
push
mov
mov
pop
mov
add
decl
xchg
sti
push
mulb
push
call
xor
enter
mov
mov
fsubrs
push
mov
outsb
sbb
adcb
popa
mov
xorb
pushl
pop
rcr
cmpsb
push
ret
mov
arpl
sbb
jo
pop
mov
mov
add
hlt
call
mov
mov
enter
in
or
dec
push
jb
xor
int3
or
cld
mov
mov
jmp
nop
sbb
push
scas
xor
incl
xor
into
mov
lea
ds
or
test
lcall
add
adc
sbb
aas
inc
xor
push
popf
out
xchg
call
jmp
mov
xor
dec
pop
mov
jno
cmpsb
jb
int
stos
sbb
dec
outsl
jg
fs
pushl
cmc
or
push
push
jl
mov
push
test
sbb
adc
decl
sbb
dec
xchg
sub
sub
pusha
and
jbe
jae
subl
mov
jmp
dec
mov
test
push
xchg
push
or
jg
mov
arpl
sti
pandn
lahf
cmp
cmp
popw
add
shlb
mov
mov
ja
cli
pop
push
cmpps
call
es
adc
xor
in
push
xchg
push
push
cmp
pushl
add
cmc
jb
aad
cmc
inc
insl
pop
lds
imul
cmp
lds
mov
jo
mov
xchg
mov
add
aam
cmpsl
cwtl
outsl
sbb
or
decl
out
or
xchg
fimuls
push
daa
pop
cld
pushl
je
mov
sub
int
push
fucomip
cmpsl
xlat
fiaddl
add
inc
call
xor
jp
cmp
dec
popa
aad
stc
or
push
add
push
decl
bound
dec
dec
jge
in
jg
lock
jne
mov
push
inc
stc
pop
fisttpll
ljmp
inc
mov
insb
ret
jns
stc
jg
pop
arpl
xchg
shlb
xor
sbbb
std
in
jbe
xor
pop
jle
movsl
mov
aam
cmpl
xchg
jbe
push
ret
movsl
decl
xor
fsts
mov
xchg
out
decl
xchg
push
ljmp
jmp
jnp
int
dec
push
xorl
dec
cmp
push
pop
stos
or
adc
or
cmp
xchg
mov
adc
and
xchg
xchg
mov
push
push
das
sar
inc
out
push
jl
mov
push
ljmp
cmp
cmp
cmp
pushl
pop
sub
jmp
or
shll
xchg
sbb
or
jmp
inc
fisttpll
faddl
popa
xchg
ds
lahf
scas
ljmp
mov
or
ret
pop
sahf
mov
imul
enter
fldenv
fistl
dec
out
jbe
inc
lods
sub
jg
fiaddl
jo
out
test
fisubrs
rorb
popf
pushl
iret
push
mov
lds
sahf
push
sbb
add
lea
inc
das
jle,pn
decl
mov
mov
in
in
fdiv
jb
mov
inc
sub
test
addr16
movsb
pop
data16
dec
mov
add
mov
dec
pop
out
fcomi
xlat
mov
mov
or
pop
sbb
jg
outsl
scas
mov
lods
jo
push
popf
push
out
cmc
in
fisttpl
inc
dec
mov
jmp
ja
call
test
mov
push
stos
jl
imul
or
testl
movsl
cmp
pop
lods
lods
mov
decl
pop
daa
pop
add
shrl
and
lcall
lods
fwait
cwtl
loop
cmp
js
out
lock
mov
js
ljmp
pop
add
cmp
incl
add
and
cmpsl
out
dec
lahf
sahf
sbb
mov
inc
xchg
dec
dec
push
sar
jnp
popf
in
mov
fidivrl
lahf
jns
add
or
std
fldenv
jg
or
add
gs
lds
xchg
cmp
xchg
cmc
adc
mov
incl
mov
andb
les
push
roll
out
rcl
out
sub
mov
xchg
xchg
negl
pop
xorb
sarl
loopne
repnz
call
scas
adc
mov
push
or
imul
ss
mov
outsl
dec
mull
mov
incl
inc
adc
call
mov
jg
repnz
subl
out
pop
or
inc
lret
push
mov
leave
mov
pop
insl
pop
dec
dec
incl
fldt
notb
aad
call
dec
pop
outsb
cli
dec
pop
add
call
add
pop
mov
ljmp
mov
ret
sub
jecxz
cmp
pop
loope
fs
xchg
pop
imul
in
xchg
ucomiss
jmp
in
mov
push
sbb
adc
add
sbb
sub
adc
in
sub
add
mov
scas
cltd
mov
adc
sub
in
cmp
mov
cmp
decl
cmp
add
xor
adc
ror
data16
ret
mov
ret
xor
iret
and
shrl
push
fidivrs
lcall
fbstp
stos
inc
xchg
mov
xlat
jge
int
cmpsb
sbb
xchg
mov
cld
adc
fsubrl
incl
mov
test
cltd
lahf
xchg
int
xchg
push
xchg
or
push
jge
or
decl
mov
test
std
push
lods
sti
jmp
repz
xchg
sub
mov
mov
fsts
and
and
mov
jg
push
mov
mov
push
pop
pusha
mov
es
into
cmpl
dec
mov
fcomip
cmp
push
push
sub
je
pop
mov
dec
fnstcw
cli
aaa
out
mov
lcall
mov
cs
ret
cltd
comiss
lret
jle
out
mov
cwtl
pop
pushl
sbb
xor
jne
pop
cmp
cmpsl
cmpsl
mov
fsts
sarl
enter
push
mov
jle
mov
lcall
daa
and
sbb
mov
hlt
mov
adc
gs
cmpb
pushl
cmovne
xchg
mov
rcrl
add
cwtl
cli
je
loop
incl
inc
fisubrl
xor
fcmovnbe
or
pop
jmp
addr16
push
cmp
cltd
mov
sahf
nop
popa
out
cmp
loopne
push
xchg
ficoms
divl
ss
add
std
push
add
test
icebp
out
mov
lcall
cltd
cmp
jmp
xchg
movsb
sub
fisttpl
add
adc
iret
jmp
lcall
pop
out
inc
or
push
imul
popf
pop
dec
cmpsl
lock
inc
mov
insb
mov
packuswb
hlt
mov
xor
cli
ljmp
out
xchg
cwtl
mov
sti
ss
bnd
fs
or
jmp
mov
les
cli
mov
pop
pop
add
jl
scas
mov
jmp
or
out
cli
dec
jbe
and
sub
andl
xchg
cmp
sti
add
incl
or
fwait
cmpsb
pusha
jo
cltd
int3
lods
push
jae
mov
lret
movsl
lds
pushl
sub
out
mov
or
jl
test
fs
ljmp
out
mov
dec
dec
jl
ja
pop
jae
shll
int
lods
push
pop
xorl
andl
lret
adc
push
jmp
scas
push
fwait
or
sbb
sub
cmc
aaa
cld
jg
and
ljmp
and
mov
fcomip
jbe
in
hlt
pusha
push
out
push
imul
pop
les
cmp
push
arpl
cmpsl
test
pushl
les
arpl
int3
cmp
xchg
inc
pop
aad
mov
sbb
js
pop
or
lret
lcall
fidivrl
cwtl
aad
adc
xlat
push
sbb
pop
adc
mov
jnp
incl
cli
stos
into
jae
fldt
pop
sub
xchg
adc
jge
pop
in
int3
lcall
jecxz
roll
repz
mov
or
xor
decl
shl
rorl
shrl
xor
cmc
mov
ret
rclb
das
push
es
hlt
jg
ja
insl
test
cli
xor
nop
mov
xchg
push
std
les
xchg
push
jbe
mov
mov
xchg
push
lods
sarl
cli
into
nop
sub
lcall
dec
or
inc
cmp
dec
xor
and
in
cs
ljmp
iret
ds
and
push
push
inc
inc
movsb
xchg
notl
pop
cpuid
in
and
decl
cmp
jecxz
push
adc
ds
mov
in
jecxz
dec
cmpsl
lret
je
xcrypt-cfb
cmpsl
and
mov
call
test
inc
fnstsw
inc
test
fnsave
inc
jp
sahf
sahf
cmpl
mov
lcall
and
jns
cmp
xchg
mov
ficompl
add
push
enter
outsb
inc
dec
fcomip
call
fwait
cltd
call
bsr
rolb
jle
outsb
sbb
pop
and
mov
pushl
and
push
dec
pop
stos
add
push
jg
sub
xchg
xor
and
push
adc
mov
les
gs
incl
lods
cmp
shl
add
mov
push
xchg
pop
or
jp
cmpb
adc
push
cmp
movsl
nop
jge
mov
pusha
cld
jp
shr
scas
leave
incl
ficompl
cmp
push
ljmp
push
mov
fwait
inc
enter
nop
inc
jo
cwtl
push
div
lods
dec
mov
mov
xchg
mov
add
jno
fwait
lcall
repz
rorb
sbbb
jmp
xlat
pop
xchg
adc
scas
pop
aad
mov
mov
into
push
lret
sbb
cmp
xchg
xor
dec
sbb
ret
adc
cld
movsb
lea
and
ds
sti
cwtl
mov
lret
xor
mov
imul
outsl
jmp
pushl
fstpl
cmp
adc
fcoml
or
rclb
imul
ret
incl
pop
mov
insl
mov
out
jp
cmpsl
or
sbb
cld
imul
jb
dec
clc
int
lcall
lahf
sbb
and
imul
dec
mov
jns
xchg
outsl
ljmp
push
fdivrl
test
adc
mov
insl
push
xchg
push
mov
xchg
call
jge
in
ret
scas
or
test
aas
fcmovbe
mov
movntq
mov
out
lods
add
lcall
mov
or
mov
aad
imul
into
jmp
sub
push
out
mov
pop
or
int
in
jb
out
loopne
xchg
push
xor
or
jmp
and
sti
cmp
and
or
incl
add
xchg
pop
inc
adc
mov
mov
out
stc
aas
and
pop
mov
inc
addr16
decl
in
cmc
cli
add
loop
jg
add
or
addb
sbb
adc
lret
inc
ljmp
sub
jecxz
in
pop
mov
in
jo
sbb
dec
jmp
movsb
sbb
dec
sbb
es
scas
sub
inc
add
daa
out
in
jp
mov
stc
jb
ljmp
cmpsb
fidivrl
mov
xor
sub
and
inc
adc
add
incl
mov
pusha
pop
in
data16
test
ds
cltd
xor
js
jg
sub
push
cmc
bound
orl
ljmp
incl
pop
add
sbb
mov
push
outsl
shlb
pop
pop
dec
mov
out
mov
in
incl
dec
add
sbb
xchg
push
stc
lods
pop
xor
aas
sub
fadd
es
fisubrl
fcomp
addl
xor
andb
jno
decl
pop
outsl
and
push
jno
fistpl
ja
adc
pop
and
movsb
test
mov
push
andl
andb
cmp
inc
dec
sti
repz
ss
adc
jnp
adc
add
les
fbld
xor
xchg
cmp
xchg
aaa
rorb
mov
emms
rcr
mov
and
or
push
jb
sahf
push
mov
xor
repnz
jg
test
jns
mov
es
popa
repnz
mov
dec
cmpsl
xorb
sub
test
mov
sti
pushf
add
fucomi
arpl
pop
stos
inc
sbb
stos
cmpl
or
sbb
incl
pop
adc
jp
roll
rcrb
lea
ds
call
sbb
xor
pop
xor
jp
shrb
ss
dec
lahf
mov
pop
add
aam
shll
fisubrl
mov
mov
decl
mov
inc
add
sarb
sub
pop
and
or
dec
andl
pop
xor
out
iret
sbb
cmpsl
inc
and
std
adc
ss
cld
pop
out
pop
fstps
inc
imull
sbb
pushl
adc
mov
add
idivb
cli
sub
lcall
mov
mov
dec
sbb
sti
push
inc
push
add
int
push
popf
bound
decl
bound
sti
aaa
rol
push
fmull
push
clc
push
pop
xorb
call
add
sub
sbb
lret
dec
cli
push
pushl
cmp
xor
fildll
shll
call
xlat
enter
ret
arpl
xor
mov
andb
xor
aad
xchg
lcall
out
push
cmp
sbb
mov
dec
push
mov
ljmp
mov
lahf
xchg
push
rcrb
jp
and
or
pop
mov
enter
push
ljmp
mov
sbb
out
mov
ljmp
inc
bnd
mov
cmc
jge
aaa
xor
das
adc
sbb
sub
cmpsb
incl
out
jb
or
out
pop
call
or
out
cmp
out
insl
testl
fistps
sub
cltd
out
push
or
push
xchg
lea
in
pop
ret
pop
test
enter
daa
shlb
pop
scas
push
loopne
scas
loope
jo
jmp
pushl
jnp
fsts
pop
in
jo
sub
imul
cli
push
push
call
clc
adc
stc
dec
insl
loopne
rcll
inc
lods
pop
xor
in
mov
pop
cmp
cmc
popf
cmp
testl
lock
dec
shlb
ss
pop
scas
lret
add
sub
in
xchg
jle
ja
int3
push
or
call
fdivrs
mov
fcompl
cmp
mov
pop
mov
rclb
out
movsb
xor
sti
psubd
ret
xchg
mov
inc
sbb
mov
adc
cld
adc
or
adc
sub
ljmp
inc
sbb
dec
shll
stos
loop
out
into
push
mov
pmaxub
les
pushl
jge
xor
mov
mov
lock
pusha
mov
clc
xchg
cli
jp
cmp
gs
lods
mov
fsubs
and
fmulp
decl
filds
or
adc
imul
hlt
pop
or
pop
aad
push
dec
mov
xlat
mov
lock
adc
push
jle
aaa
mov
mov
dec
jns
mov
leave
jne
int3
inc
out
andl
incl
xor
pushf
imul
sbb
pmaxsw
scas
adc
push
push
mov
jmp
imul
leave
xchg
xorl
imul
dec
push
icebp
jg
and
andb
scas
push
add
xchg
sub
orb
lcall
loope
loope
mov
out
in
mov
and
jg
pop
sahf
push
jae
dec
xchg
pop
or
mov
fisttpl
jo
push
dec
decl
ja
ja
adc
fs
jmp
add
pusha
sub
dec
push
and
sbb
jle
sbb
lods
push
inc
pop
lock
fldt
mov
popa
inc
dec
mov
mov
test
nop
mov
dec
jnp,pn
mov
sbb
lret
add
inc
addr16
repz
sbb
cmp
les
call
ja
pusha
ljmp
call
lahf
or
incl
dec
scas
jno
icebp
addr16
incl
xchg
std
popa
imul
test
and
shr
stc
in
repnz
sahf
xor
and
add
xchg
and
inc
sahf
incl
push
push
pop
inc
cli
push
cmc
jp
xorb
es
int3
loope
aaa
incl
pop
cmpsl
inc
aas
adc
rcrb
sub
mov
mov
mov
and
xchg
pop
loop
dec
jns
ficompl
jbe
aad
mov
xchg
nop
sar
jmp
data16
loopne
sub
test
mov
insl
aas
jo
or
cmp
arpl
fistps
push
rcl
mov
aas
pop
push
andb
mov
jns
fnstcw
jb
call
loopne
loopne
or
cwtl
mov
div
outsb
out
jge
push
pushf
lds
insb
jmp
sub
jl
ja
push
int3
xchg
jl
pop
push
xor
or
mov
pushl
mov
mov
js
stc
add
cmc
dec
mov
icebp
inc
cltd
mov
push
mov
jmp
movsb
inc
cmp
jo
sub
xlat
jecxz,pn
ja
stos
push
sbb
scas
mov
lods
mov
mov
cs
lret
cltd
out
fsubs
or
in
call
add
xchg
mov
popf
aaa
inc
je
clc
xor
fsts
test
call
enter
outsl
jl
add
pop
outsl
bound
shrb
pop
and
mov
mov
dec
sub
shrb
mov
xor
es
ja
les
pushl
in
sub
orb
aad
lcall
dec
test
jge
pop
pop
or
cbtw
dec
dec
and
xor
cmp
sbb
fimull
inc
cwtl
push
cld
xchg
cmp
test
testb
sbb
in
pop
test
xchg
push
in
test
mov
addr16
sahf
mov
std
cmpsl
repz
push
lahf
xchg
addr16
jmp
push
push
mov
in
pop
inc
std
data16
popf
lcall
push
loope
in
mov
loopne
pushl
lcall
leave
ret
gs
xor
repz
fwait
cmp
mov
call
push
lods
push
lods
cmp
mov
ret
outsb
mov
mov
decl
push
sbb
and
jl
lea
loopne
add
cmpsb
pop
es
clc
ljmp
or
jp
mov
inc
sub
rorl
pop
xchg
movsb
push
es
ds
out
popa
nop
jmp
xchg
cwtl
fdivrs
testl
jmp
pop
and
mov
pop
sub
pop
xchg
cmp
pop
cld
pop
mov
xchg
push
cmp
dec
scas
mov
push
insl
mov
or
pop
aad
out
sbb
sub
pop
or
cmp
incl
jge
push
outsl
dec
add
push
or
cmp
dec
loopne
xor
jg
test
mov
clc
mov
adc
push
cmp
int3
js
or
pop
mov
ljmp
mov
jg
add
js
insl
sahf
mov
adc
cltd
sarb
or
and
add
mov
daa
dec
mov
add
mov
stc
mov
fs
mov
addr16
fcoms
adcl
popf
lods
mov
xchg
push
lock
loop
or
test
mov
aam
xor
pop
loope
inc
mov
xchg
cltd
mov
ret
je
sbb
int
pop
movsl
jp
mov
enter
nop
pop
mov
or
les
fadd
push
lcall
lahf
imul
xchg
jno
das
clc
add
leave
mov
movsl
xor
push
popa
in
mov
jnp
enter
jno
sub
shlb
or
mov
sbb
jb
in
pushf
decl
call
sarl
push
imul
or
inc
mov
or
in
mov
xchg
out
push
sti
lcall
fnsave
addr16
adc
mov
sub
inc
cmp
imul
xchg
and
mov
inc
das
test
gs
pop
cmpb
dec
adc
neg
add
xlat
and
ljmp
push
int
add
loop
dec
lock
dec
pop
mov
sbb
adc
call
cld
cld
inc
loop
out
dec
pusha
les
aaa
push
out
adc
mov
jmp
push
imul
inc
xor
push
jns
xchg
ds
push
out
test
roll
ret
rorb
mov
push
testl
xor
push
rclb
cli
scas
test
push
jbe
ss
cwtl
sub
jp
cli
ljmp
int
cwtl
cmp
orl
and
ficoms
ljmp
xchg
dec
fidivl
loopne
dec
pusha
add
jb
in
loopne
add
pop
fnstenv
push
pop
mov
int3
mov
push
aaa
mov
movsl
inc
adc
xor
jmp
add
pop
mov
ficomps
mov
shlb
repnz
sbb
xor
sbb
pop
xchg
stos
fldt
adc
dec
scas
or
out
imul
test
icebp
dec
cmp
cwtl
loope
push
cmpsl
dec
in
daa
inc
cmp
mov
jl
sub
push
dec
sbb
mov
movsb
jle
popa
push
lret
out
mov
out
lods
scas
inc
icebp
call
dec
adc
fisubrl
push
jne
push
sub
pop
push
gs
in
mov
jbe
fistpl
pushl
pop
jl
std
add
arpl
sarl
mov
gs
mov
ljmp
dec
sub
lods
adc
sbb
and
enter
cltd
mov
ljmp
fs
push
mov
rolb
mulb
int3
inc
sarl
lcall
jae
test
pop
push
inc
call
pop
int3
arpl
mov
in
inc
ffree
cmp
add
jnp
xlat
rcrl
mov
popa
mov
ljmp
push
test
xor
pop
cmp
outsl
jno
xor
or
mov
das
inc
xchg
or
mov
sbb
mov
push
sbb
ret
lcall
jb
arpl
loop
push
out
es
sub
mov
inc
and
fld
lock
fwait
push
jle
cmp
je
ljmp
clc
bound
dec
pop
enter
cmp
fwait
pushf
inc
add
out
push
jbe
pop
mov
xchg
mov
xchg
jp
das
clc
pushl
in
popf
and
mov
fbstp
fnstenv
scas
pop
add
decl
pop
jns
xchg
sub
cmpsl
scas
rol
lods
loope
dec
test
mov
jecxz
adc
insl
jns
lcall
fmuls
setbe
stos
push
js
dec
in
xor
jne
xchg
data16
jmp
arpl
add
push
adc
pusha
mov
mov
sub
div
mov
inc
adc
arpl
mov
bound
movsl
fisubrs
hlt
pop
jmp
jmp
lret
pushl
in
dec
int
inc
adc
dec
jmp
adc
or
leave
scas
mov
jg
ds
inc
lds
ret
in
lea
pop
adc
dec
ss
shl
jns
pushf
xor
scas
sub
incl
inc
imul
mov
lcall
dec
and
addr16
stos
stos
dec
stos
dec
or
dec
sub
in
push
jp
push
lret
cmpsl
jmp
inc
xor
cmp
adc
cmp
gs
lods
and
sbb
sub
or
jmp
scas
mov
mov
daa
lret
jg
cmp
ret
xchg
cmpl
sbb
sbb
jmp
aam
jmp
sub
sbbl
cmp
sbb
in
fnstsw
push
int
cli
ljmp
subl
rcrb
orl
push
stc
in
sar
pop
mov
mulb
ret
mov
lcall
push
pop
push
fstpt
pop
pop
hlt
pop
js
pop
jns
fcomip
xor
jbe
dec
test
call
imul
pusha
shl
pop
inc
jns
mov
loopne
add
seta
dec
decl
mov
xchg
sub
sarl
lea
jg
xchg
xchg
out
addr16
adc
jle
add
lea
jp
loope
es
dec
xorl
jmp
cmc
sbb
call
mov
cmp
repz
jmp
push
push
jb
mov
pop
outsl
mov
xor
decl
dec
repnz
dec
or
shlb
xor
mov
mov
fimuls
jno
iret
cli
pop
add
decl
cmpsl
pusha
aaa
rcrl
mov
jp
lods
xor
stos
test
push
sbb
call
movsl
shr
sub
imul
or
inc
stos
inc
sbb
jne
ljmp
pop
iret
inc
xor
test
ja
mov
sub
mov
lcall
imul
xor
cli
sbb
mov
lods
mov
pop
test
nop
lods
cmp
dec
iret
or
sbb
push
push
icebp
pop
xor
outsb
out
mov
or
sbb
std
clc
decl
mov
test
ds
ret
pop
push
dec
adc
in
mov
insl
pop
repnz
ljmp
test
and
or
pop
or
xchg
xchg
and
xchg
xchg
mov
inc
xchg
test
or
fwait
pushl
inc
mov
hlt
sub
call
mov
or
jmp
adc
loopne
or
sbb
shl
mov
cltd
mov
fiaddl
std
ljmp
mov
arpl
bnd
cmp
cld
cld
fcompl
cld
fistps
jg
pop
popf
sub
adc
pusha
loopne
sahf
xchg
jnp
jmp
out
mov
cwtl
ss
stc
test
push
jae
xor
xor
adc
lcall
mov
lahf
gs
and
pop
jbe
popf
call
mov
sar
ljmp
and
and
lret
xchg
repnz
lods
add
sbb
in
cs
and
push
mov
mov
xor
cmp
pop
cltd
xor
loopne
push
lcall
popf
inc
jno
jmp
testb
push
jle
sbb
cld
adc
enter
cld
out
pushf
nop
inc
std
pop
ret
ljmp
sbb
mov
into
pop
in
pop
pushf
xchg
neg
outsl
fadds
pop
xor
cmp
adc
int3
mov
in
ds
testl
sub
push
xchg
add
aad
xchg
xchg
fisubrl
mov
mov
leave
cli
stos
jnp
adcb
adc
mov
outsb
fmuls
jle
jg
pop
fistps
jnp
xor
stc
xor
cmp
dec
xchg
cld
ljmp
mov
and
imul
in
xchg
rclb
pushl
sahf
dec
cmp
sti
cmp
outsl
pop
sbb
pusha
sbb
xchg
shrb
cs
push
movsl
incl
pop
add
out
in
adc
mov
jl
mov
mov
dec
cmpsl
sub
leave
shll
movsl
and
xor
ljmp
mov
mov
xor
enter
push
pop
inc
inc
imul
arpl
ret
pop
hlt
mov
outsb
cld
jo
lods
mov
mov
sub
jg
mov
loope
adc
push
cld
and
fisubrl
or
mov
mov
mov
mov
cmp
std
pop
inc
xor
mov
add
jno
jae
enter
dec
inc
add
cli
jg
cli
and
dec
in
sbb
jmp
add
ljmp
dec
ss
dec
ds
fistpl
sarb
cld
ljmp
push
sbb
and
push
push
jbe
insb
cltd
adc
xor
gs
or
call
test
imul
dec
aaa
iret
cmp
or
pushl
xchg
add
mov
cld
jbe
adc
add
pop
sbb
mov
out
das
leave
dec
add
xor
xchg
je
rol
jno
insb
add
add
cmp
cmp
decl
dec
scas
repnz
das
dec
add
jge
jb
mov
sbb
cli
lcall
adc
hlt
popf
frstor
push
cli
movsl
or
xor
aaa
rcl
or
decl
cmp
nop
mov
inc
mov
add
cmp
jp
rcr
mov
xchg
jbe
jmp
dec
fldcw
mov
in
push
mov
mov
imul
fists
rclb
push
inc
jne
adc
inc
test
xlat
fisubl
or
or
stc
inc
mov
jle
sub
repz
ja
mov
sub
lds
leave
in
cmp
jmp
inc
testb
pop
jne
and
jmp
mov
and
adcb
mov
fcomps
inc
mov
sbb
pushl
cwtl
mov
mul
lcall
stos
pushf
cs
in
pop
xor
outsb
or
ljmp
andb
scas
bound
push
addr16
sti
adc
cltd
cmp
fmull
mov
xor
jg
scas
mov
decl
mov
mov
mov
repz
mov
mov
imul
cmp
test
mov
sbb
out
scas
int3
inc
js
leave
mov
inc
mov
jmp
das
dec
sbb
dec
adc
xchg
js
ja
push
addr16
pop
movsl
out
imul
inc
call
dec
nop
or
lods
add
mov
push
xor
mov
lahf
cs
mov
xchg
pop
push
adcb
arpl
pusha
ds
cmp
addl
popf
mov
pop
stc
test
incl
cmp
cltd
dec
fcmovnu
cmc
add
jns
or
mov
outsl
and
mov
push
popf
push
pop
add
cmp
sub
cwtl
pop
imul
jmp
inc
push
or
mov
add
out
mov
call
les
adc
aas
mov
shrl
es
data16
jg
cmc
inc
cmp
push
inc
adc
pop
add
push
mov
in
dec
mov
mov
push
jl
jne
sub
xchg
mov
pop
lock
cmp
lcall
push
pop
es
push
jbe
push
cmp
fisubrl
and
dec
ficoml
negb
imul
inc
jne
lea
movsl
cvtpi2ps
sub
push
mov
lahf
mov
ret
outsl
test
pop
daa
mov
jne
jle
shll
in
jp
sbb
push
ja
in
push
pushl
enter
xchg
push
push
fs
enter
scas
pushf
jnp
cmpsl
shll
aaa
dec
dec
sbbb
pop
scas
push
mov
dec
and
popa
pop
push
sti
in
jo
movsb
inc
dec
jle
push
mov
pop
std
scas
test
int3
dec
add
sub
mov
jnp
pushl
add
movsl
imul
fstps
out
xor
das
xchg
pop
movsl
scas
fwait
call
lock
call
test
lcall
lret
adc
push
sbb
loope
and
jns
leave
mov
add
test
loopne
iret
ret
or
lcall
pushl
xor
lcall
out
maskmovq
notl
daa
or
cmpl
push
inc
dec
in
pop
and
movsb
test
xor
push
xorb
sbb
mov
adc
outsl
xor
addr16
scas
mov
jbe
jle
adc
jns
fisttps
fcoml
call
fsubs
aas
roll
adc
sub
jp
xor
hlt
push
mov
addr16
inc
xchg
mov
xchg
test
filds
pushf
inc
adc
test
cld
mov
test
pop
inc
ss
and
mov
push
inc
mov
adc
mov
call
jl
xor
nop
mov
and
adc
std
iret
pop
jo
xchg
cmc
cmp
ljmp
and
sbb
pop
ljmp
xlat
loop
fisubs
mov
aad
jg
sar
pushl
aas
cmp
in
dec
sar
out
mov
in
cmp
fstpt
call
in
xor
cmp
cltd
mov
popa
test
xor
dec
mov
jmp
fnstenv
or
lods
add
divl
mov
bound
xlat
ljmp
cli
cltd
sub
shlb
shrl
into
push
fcoms
and
xchg
iret
cld
sub
decl
call
roll
pop
mov
cwtl
stos
jae
sbb
mov
dec
and
pushl
fsubrl
cmp
sbb
jp
outsb
jg
push
sub
rorb
pushl
sbb
push
inc
int
pop
in
cmp
mov
stos
dec
jge
dec
adc
leave
lcall
cmp
mov
ret
repnz
arpl
mov
retw
jmp
gs
inc
mov
iret
and
in
jno
pop
cwtl
test
test
dec
std
ljmp
sti
mov
test
mov
xchg
cmpsl
shlb
call
and
mov
lcall
mov
scas
shll
sbb
sahf
cltd
cli
push
test
inc
adc
add
jmp
pop
mov
xchg
cld
and
sti
push
and
daa
out
pop
in
pushf
push
shll
adc
pushl
mov
cwtl
call
cmp
push
cmpsl
sbb
in
leave
in
cli
push
mov
iret
adc
xchg
pusha
pushl
dec
mov
add
mov
insl
xor
clc
cltd
sbb
in
cli
pushl
mov
pusha
popl
imul
cmp
pop
inc
add
lea
outsb
loopne
sbb
aad
mov
mov
mov
pop
test
lods
inc
pop
imul
popa
mov
mov
in
mov
adc
pop
imul
gs
push
xchg
call
cmpl
fisttpl
push
xchg
out
mov
gs
pop
sbb
lds
cmp
decl
push
lods
pop
jge
or
jge
lret
incl
or
ret
lret
je
mov
sbb
outsb
das
lea
leave
xor
incl
int
jns
in
ss
aaa
mov
ds
cmp
push
leave
cmp
lcall
xlat
jno
mov
in
out
jmp
shr
mov
mov
insl
xor
nop
mov
sub
pushf
nop
ret
add
mov
fcom
or
adc
int3
fcmovu
hlt
pushl
xchg
add
cwtl
cwtl
out
in
lret
push
mov
call
int
std
stos
lock
roll
jb
fadd
and
mov
call
or
ret
test
inc
clc
mov
into
inc
inc
lods
pop
in
dec
cmp
incl
mov
or
jne
cs
sub
adc
test
sub
lcall
in
inc
jno
clc
adc
push
orb
push
lds
cmp
les
xor
scas
add
xorb
xor
xlat
mov
or
ficoms
mov
dec
decl
scas
or
cmp
ret
icebp
dec
pop
xchg
xlat
ret
mov
das
xchg
hlt
cmp
inc
jmp
pcmpgtb
jae
inc
pop
mov
cli
jg
jo
test
or
inc
aaa
sarl
dec
xor
aas
dec
xor
out
outsb
sbb
addb
and
mov
mov
push
lahf
sub
incl
movsl
repz
push
stc
jecxz
pop
mov
sar
mov
mov
es
ds
cmp
push
push
jae
fcompl
push
adc
mov
dec
mov
pushf
push
loop
pop
push
or
outsb
add
jns
mov
decl
jo,pt
mov
clc
loopne
movsb
jae
hlt
mov
movsb
sbb
decl
or
iret
mov
shrl
jne
clc
mov
repz
js
test
adc
xchg
nop
clc
pushl
fidivl
pusha
lret
mov
aam
mov
cwtl
push
subb
ss
ljmp
loope
jp
cs
jne
lods
jns
inc
loope
jo
push
mov
lods
inc
jg
in
in
push
sbb
dec
xchg
jp
mov
lret
mov
xor
ffreep
ljmp
loope
loop
xor
push
int
mov
or
mov
call
test
dec
hlt
xlat
pop
or
out
fsubrl
jb
inc
sub
mov
out
es
inc
and
sub
icebp
add
push
mov
les
fmulp
sub
mov
shlb
rorb
mov
call
pop
cmpsb
out
dec
pop
imul
stc
or
add
and
mov
ret
jmp
or
loope
add
mov
push
lret
or
in
ja
adc
lods
mov
xor
mov
sub
push
mov
roll
mov
addb
sbb
repnz
sahf
pushf
loope
lcall
or
push
jmp
lods
mov
mov
mov
incb
bound
mov
push
sti
arpl
jmp
clc
xor
ss
push
lcall
loopne
mov
fbld
xchg
ljmp
adc
pop
hlt
pop
repz
push
lods
ljmp
pop
loope
jl
mov
out
cwtl
pop
push
repz
aad
aad
lds
cld
jmp
cmp
xchg
ss
ficoml
mov
and
add
or
call
mov
push
push
inc
cmp
fnstsw
inc
sub
in
icebp
fldcw
imul
popa
dec
and
or
xchg
push
incl
cli
jo
stos
hlt
push
dec
jne
mov
pop
pusha
inc
sbb
repz
mulb
push
test
jmp
icebp
sbb
sbb
jmp
fbstp
sub
pop
scas
dec
cmp
aaa
lea
fstps
roll
cmc
xlat
xchg
pop
loop
std
jo
lock
rorl
ja
dec
das
xorl
test
add
mov
mov
out
push
loope
mov
mov
jg
dec
jg
xchg
cmpsl
mov
jns
in
pop
xchg
inc
jmp
cmp
stos
in
mov
decl
cmp
mov
jnp
pusha
leave
inc
test
adc
bnd
sarl
mov
jmp
jle
incl
out
sbb
cmp
mov
dec
enter
add
js
cmp
mov
scas
cmpsb
jae
and
aas
xorb
dec
inc
xchg
or
decl
add
add
orb
sahf
or
and
mov
rolb
adc
push
cld
lcall
cmpsb
aaa
leave
loope
cmpsl
mov
jns
sahf
add
dec
adcb
push
pushf
or
lods
jb
test
mov
pop
lret
imul
es
jmp
jmp
les
mov
jne
ljmp
xchg
movsb
jl
jg
in
add
sbb
cmp
sar
fbstp
cmp
sbb
aam
ret
sbb
sub
and
call
loop
xor
xchg
inc
aad
sti
mov
push
in
rcrb
add
movsb
mov
call
js
mov
stc
sbb
mov
cld
inc
mov
cmp
sahf
jnp
mov
js
out
add
subb
adcb
in
repnz
fdivr
mov
adc
jmp
mov
fldt
add
xchg
mov
sbb
mov
sbbb
jo
sbb
cmp
or
pushf
aaa
pop
aaa
outsl
iret
sub
ss
cmp
pushl
adc
nop
adc
jo
cmp
xor
ss
imul
or
mov
decl
and
mov
add
stos
push
movsb
adc
xor
incl
das
into
jns
insb
mov
loope
sub
dec
sub
push
repz
or
mov
out
enter
add
imul
inc
andl
mov
les
lahf
cld
push
incl
sub
push
pop
adc
mov
adc
in
or
cmpsl
aad
cmpsl
jmp
stos
ficoms
add
jno
inc
cltd
lods
cmp
dec
mov
xchg
cltd
adc
ljmp
cld
les
iret
ret
mov
or
js
out
rcrl
out
cmp
push
decl
lods
push
dec
adcl
lods
xor
or
pop
cmp
incl
fwait
add
cs
jge
or
lret
cs
xchg
or
mov
incl
cmpsl
jecxz
or
xchg
xchg
and
mov
rorb
inc
jns
or
test
push
loope
pop
or
jns
call
fisubl
and
lods
xchg
and
inc
cmp
pusha
mov
jne
decl
xchg
stos
mov
insb
xchg
inc
out
xchg
push
xchg
ljmp
and
cmpsb
inc
cmp
pop
stos
sub
popf
cld
mov
xchg
lcall
jb
push
pop
lret
adc
shrb
cmp
daa
jo
and
cmpsb
push
cmpsb
lock
cli
cli
insl
jnp
jle
ljmp
clc
jo
pop
idiv
ljmp
repz
lcall
cmp
jbe
je
sbb
fucompp
mov
daa
mov
in
shlb
mov
sti
fsubrl
pop
rcll
in
call
fildl
ljmp
push
test
fwait
aam
pop
cmp
das
ljmp
add
stos
add
nop
ljmp
xchg
jo
pushl
clc
sbb
dec
inc
stos
push
xor
das
or
xchg
or
int3
call
gs
pop
or
mov
dec
push
lea
in
jle
or
jmp
int
jne
sub
or
fimuls
stos
dec
lds
inc
push
dec
and
jg
jle
dec
push
mov
lret
mov
sahf
push
lcall
cmpb
movsl
or
xor
icebp
fildl
xlat
push
adc
in
mov
cmpsl
test
jg
lods
ret
into
dec
pop
push
loope
outsl
dec
imul
dec
in
incl
xabort
push
jmp
out
arpl
mov
sahf
mov
add
ljmp
gs
xor
rorl
add
add
push
lcall
ljmp
adc
jl,pt
sub
mov
fistps
stos
mov
inc
addb
ljmp
aas
jge
insb
imulb
mov
pop
ds
push
adc
push
cmpsl
jg
jg
mov
inc
gs
mov
jae
and
ss
pop
dec
sbb
mov
sbb
jmp
pop
fsubrs
jecxz
aad
gs
imul
dec
ljmp
flds
pshufw
aas
repnz
roll
insb
and
dec
sti
test
into
inc
jl
es
stos
cwtl
push
ss
in
daa
mov
jg
xchg
push
pop
call
pop
pop
in
adc
ljmp
sti
jnp
pop
sarb
cwtl
jae
adc
mov
mov
cmp
int
call
cld
mov
scas
nop
scas
mov
movsl
xor
push
popf
pop
pop
aad
fs
aas
and
xor
sbb
jbe
mov
addr16
mov
adcb
cltd
clc
das
clc
push
mov
jl
fsubs
test
lock
out
icebp
repnz
pop
mov
dec
sar
das
mov
imul
pop
dec
sbbl
int3
jp
jg
lahf
int
fildll
imulb
jo
faddp
or
mov
jge
xlat
leave
sub
incl
inc
movsl
test
mov
call
xor
iret
mov
lods
fdivs
insb
loop
lcall
es
cmc
in
das
jmp
mov
fadd
aas
mov
adc
sub
in
jbe
dec
cmp
decl
fistpl
imul
xor
push
mov
cli
ret
mov
sub
imul
xlat
dec
mov
int
dec
pusha
dec
loopne
inc
clc
cmp
fdiv
in
gs
inc
sar
fcomip
fidivs
popa
je
sahf
xchg
and
xchg
mov
sbb
lcall
fs
nop
dec
pusha
sbb
mov
into
push
adc
mov
or
into
adc
mov
in
fdivr
cmpsl
inc
sbb
ss
dec
push
lret
or
outsb
push
mov
pop
ljmp
adc
mov
pop
lcall
cmp
popf
jp
pop
loope
mov
lret
sub
add
lcall
cmc
sbb
lcall
cli
push
out
in
in
fldl
loope
jb
movsl
cmp
movsb
mov
and
loope
mov
decl
sub
push
sbb
mov
push
add
sub
mov
jae
inc
cmc
jmp
lret
mov
jg
cltd
loopne
add
in
cmpl
inc
cld
fwait
repnz
pop
ror
fdivr
add
pop
dec
add
cmc
mov
add
push
in
stos
xlat
push
es
pop
ficoms
popf
adc
add
xchg
fistps
orb
aad
pop
and
push
jg
xor
xlat
fwait
pushf
adc
sub
jg
mov
outsl
adc
mov
movsl
pop
mov
xchg
pop
dec
jns
imul
push
jmp
test
icebp
rorb
gs
sbb
jg
push
pusha
mov
mov
jo
adc
popa
push
pop
rcr
fildll
enter
jmp
mov
xchg
inc
push
or
ljmp
iret
xchg
lds
gs
push
std
ljmp
stc
mov
out
pop
cmp
jae
andb
jge
movsb
cmp
mov
scas
divl
lods
xchg
mov
or
inc
sahf
xchg
repz
decl
lea
sbb
nop
stc
adcb
lods
jno
orb
cs
dec
add
add
es
stos
mov
nop
push
add
mov
ljmp
jl
int
xor
jb
sbb
push
add
in
pop
mov
imul
ds
xor
add
jb
ss
or
movsl
mov
xor
cmp
mov
mov
jbe
in
shl
scas
xor
ljmp
scas
pusha
and
sub
cmp
push
inc
sbb
inc
jmp
bnd
jo
in
enter
lahf
ds
fidivrs
push
jne
mov
mov
call
mov
inc
mov
inc
movsb
popl
pusha
inc
daa
mov
inc
push
rcpps
pop
push
pop
sub
sbb
aad
xchg
pusha
mov
js
push
jmp
call
fistpll
roll
adcl
stos
mov
xchg
fcomip
inc
negl
pop
ja
inc
mov
ss
mov
push
sbb
mul
in
add
inc
ret
int3
sbb
jbe
scas
inc
mov
es
dec
mov
ja
scas
dec
or
mov
sti
adc
inc
nop
sahf
lea
fcmovne
and
movsl
jmp
lcall
dec
into
jns
jbe
ja
lods
jmp
pop
or
cmp
sub
xor
add
lret
pop
xchg
xchg
xor
shlb
loope
cmp
std
or
fimull
inc
shlb
mov
jo
cmp
push
jle
cmpsl
fs
aam
xorb
jmp
lods
mov
xor
and
jne
cwtl
jns
sbb
outsb
movb
lods
add
scas
mov
out
aad
dec
js
movsb
or
xchg
in
das
inc
jno
sahf
das
js
call
lods
outsl
js
xchg
jbe
fisttpl
aam
stos
and
mov
add
loopne
dec
shlb
adc
imul
jl
inc
mov
aad
fsubrl
adc
mov
xor
jmp
arpl
jno
lahf
ffreep
enter
mov
push
jge
stos
adc
and
mov
jo
xchg
aas
daa
pop
rcr
stos
xchg
imul
insl
stos
rclb
mov
mov
pop
inc
fwait
inc
sbb
fadds
frstor
mov
and
je
add
mov
mov
ret
movsl
adc
jge
outsl
xchg
pop
mov
ss
jb
sahf
add
inc
push
inc
adc
xchg
stos
sahf
pop
xchg
pop
sahf
mov
jmp
adc
cltd
push
rcrl
shr
loopne
push
shl
add
orl
call
and
stc
lds
and
addb
out
or
ljmp
lea
pop
sbb
pop
cmp
cs
mov
pusha
mov
xor
rolb
mov
call
pop
fcomi
aam
fdivs
cli
out
push
jl
fdiv
ljmp
cs
jbe
inc
xchg
clc
stos
mov
jne
stos
sbb
cmp
push
adc
cltd
in
incl
pusha
mov
adc
xchg
sub
stc
lock
dec
decl
dec
xchg
loopne
push
pop
sub
sub
fisubl
insb
cltd
loop
imul
test
lea
loopne
pop
cmp
mov
adcl
into
mov
lahf
ret
add
cmp
pushl
ja
mov
sbb
mov
push
pop
lea
ja
lcall
push
shll
dec
pop
movsl
repnz
lret
jmp
inc
xchg
or
mov
jbe
mov
imul
cmp
test
push
scas
dec
aad
xchg
lcall
in
insl
out
mov
subb
mov
jmp
jge
call
dec
mov
rclb
ret
mov
or
or
lcall
inc
sbb
ret
aam
xor
mov
xor
sti
in
in
lcall
fimull
mov
jno
adc
ljmp
adc
pop
lcall
mov
cs
int3
das
lea
fisubrs
movsl
push
xchg
adc
sbb
jmp
sbb
enter
jno
push
movsb
iret
mov
push
jo
and
mov
into
daa
cld
cmp
push
gs
dec
fdivs
mov
cmp
cld
popf
shrl
mov
and
clc
jg
cld
xor
out
sub
ret
aaa
jp
mov
stos
call
sbb
jae
inc
jne
icebp
inc
bound
dec
push
cli
mov
xor
mov
ret
addr16
jne
pop
mov
add
sbb
lcall
xchg
sbb
jae
adc
fidivl
shl
mov
xor
sbb
and
fisttps
rcll
ljmp
mov
pop
pop
jg
sbb
or
push
fcompl
mov
push
push
and
jmp
std
cmc
push
enter
outsb
lds
xor
inc
mov
xchg
add
mov
push
xor
jo
inc
cltd
pop
mov
notl
lods
dec
sub
jae
lcall
in
and
pop
in
jmp
or
ror
int3
bound
in
xchg
adc
push
cmpsl
or
cmp
cwtl
jb
loop
jbe
dec
lock
mov
icebp
jns
in
sbb
mov
std
jl
outsb
sub
push
dec
jno
mov
addb
ja
pop
dec
mov
and
xor
pop
sub
imul
push
fwait
jmp
enter
in
in
dec
add
rorl
jmp
xor
pop
inc
mov
mov
out
lret
jb
jo
out
mov
mov
loopne
dec
or
daa
xor
pop
movsl
mov
fcomip
inc
lcall
inc
jl
cmpsb
jmp
pop
cmpsb
mov
sub
cmp
inc
xchg
stos
jmp
push
call
pop
mov
testl
lret
jg
call
ror
mov
mov
test
sbb
loope
ljmp
jne
push
hlt
cmp
dec
add
sub
xchg
adc
imul
call
test
mov
dec
icebp
dec
inc
rclb
lret
xor
pop
and
ss
fimull
mov
jnp
leave
or
mov
push
dec
ret
pushl
mov
mov
inc
cld
mov
jo
lcall
mov
adc
adc
incl
cmp
sub
shll
pusha
and
shlb
adcl
mov
mov
pop
or
andb
sub
ljmp
decl
stc
movsl
out
xor
mov
out
jl
pop
fst
jp
cmpsl
call
pop
push
negl
push
pop
out
test
scas
lock
je
inc
jbe
mov
push
or
fcos
incl
in
sub
xor
lret
adc
xlat
sub
sbb
inc
mov
mov
jl
push
adc
popf
and
cmpsb
xchg
mov
or
sub
in
mov
sbb
fwait
cli
aad
inc
test
pmullw
lcall
outsl
inc
push
dec
adc
fistl
xor
cmp
dec
jg
lock
push
ds
outsb
jp
inc
or
mov
rcrb
jmp
hlt
pop
jb
adc
mov
jb
dec
aad
int3
movl
cmp
sbb
ljmp
xchg
lock
out
dec
ret
fidivrs
xor
mov
fisttps
enter
movsb
mov
sub
or
cmp
cli
cli
jb
out
dec
lret
push
cmp
pushl
lock
bound
lret
xchg
sub
mov
mov
cmp
sti
jg
sub
rcll
mov
lds
enter
cmc
cld
xchg
or
jecxz
pushf
fisubrs
fisttpl
lock
test
mov
mov
enter
xchg
dec
sub
das
jnp
gs
fdivs
push
mov
cmp
mov
test
das
cmp
xlat
sbb
push
dec
inc
decl
cmp
test
xor
repnz
mov
repnz
call
xchg
rolb
scas
pop
xchg
insl
push
add
xchg
push
ficoml
insb
test
mov
cmp
push
add
cmp
lock
sub
sub
stos
jnp
incl
into
pop
pusha
mov
xchg
daa
xlat
fwait
or
mov
or
sbb
rcrl
incl
mov
test
inc
mov
or
adc
xor
aaa
bound
movsb
mov
lret
mov
test
jg
adc
dec
push
daa
pop
and
outsl
enter
inc
bound
push
out
mov
adc
sbb
jp
call
and
test
icebp
cmp
sahf
fidivs
fbstp
or
mov
dec
gs
cmp
call
cs
imul
mov
dec
mov
sub
scas
orl
or
ljmp
and
pushf
push
lret
lea
push
add
jnp
push
sbb
jmp
lds
ljmp
push
in
inc
push
jp
scas
sbb
mov
adc
sub
mov
aaa
cld
incl
jne
cmp
xor
shl
lods
cli
sub
call
inc
inc
add
dec
out
xchg
push
mov
jecxz
pop
mov
lea
imul
repz
mov
loopne
push
enter
mov
mov
ljmp
and
adc
dec
lahf
daa
shrl
sub
mov
icebp
out
xchg
popa
stos
add
mov
mov
test
jle
xchg
in
out
inc
add
stc
out
add
out
adc
sti
pop
movsb
mov
adc
out
leave
jge
in
xchg
popf
mov
adc
loopne
mov
inc
push
lcall
divl
es
lock
dec
jae
insl
xchg
aam
fisttps
loop
and
lcall
jg
mov
lret
inc
lcall
xchg
popf
mov
out
sbb
shll
mov
pop
es
jcxz
jnp
jnp
int3
popa
data16
adc
cmp
mov
xorb
inc
decl
movsb
div
xor
pushf
lcall
pop
pop
mov
and
push
and
hlt
jmp
jno
pop
mov
push
cltd
idivl
jne
cmpsb
add
lcall
and
and
push
xchg
out
cmp
mov
mov
repnz
sahf
cli
cmp
cmovbe
sub
pop
scas
cwtl
mov
aas
nop
push
loopne
js
enter
icebp
idiv
push
cld
jmp
inc
sbb
dec
xor
xchg
mov
aaa
adc
jmp
decl
jne
pop
insl
loope
adc
insl
xchg
aam
out
inc
pushf
cmc
pop
adc
mov
sbb
mov
inc
cmpb
test
pop
rcrb
mov
nop
pop
xchg
dec
cmp
ljmp
movsb
aam
data16
loopne
sbb
cwtl
popa
dec
or
xor
clc
and
cmp
ljmp
stc
out
cs
into
and
sub
mov
dec
das
insl
ljmp
test
pushl
ljmp
icebp
mov
ljmp
cli
sub
das
push
lods
mov
incl
jnp
repnz
cli
pop
cmpsl
pop
or
dec
jnp
loop
int3
push
addb
jmp
pop
mul
fnstcw
mov
stos
jge
cmp
pop
scas
jae
pusha
xlat
pushl
sub
out
dec
fs
push
fcompl
je,pt
shlb
pop
mov
andl
decl
loopne
inc
idiv
or
inc
cmpb
cltd
mov
out
notb
mov
ljmp
jns
fimull
mov
ss
pushf
repz
mov
xor
sbb
std
xchg
sub
incl
inc
pop
fcoml
or
mov
xchg
clc
mov
cmp
cmpsl
lcall
dec
std
and
mov
lea
scas
sbb
cmp
repnz
addr16
mov
adc
repnz
xor
sete
cltd
aas
jle
jl
dec
std
mov
icebp
mov
je
jg
es
jg
xchg
mov
jmp
loopne
in
incl
push
adc
push
stos
mov
mov
jb
sbb
jne
add
sbb
xchg
pusha
dec
incl
xchg
popa
test
jmp
mov
into
es
pusha
aas
fdivrp
sub
mov
push
push
push
pop
icebp
pushl
xchg
pop
sub
add
jnp
mov
ds
adc
cld
call
ja
test
pop
cwtl
push
push
stc
icebp
fdivrl
pop
add
sub
cmp
adc
add
hlt
outsl
mov
daa
imul
sbb
add
clc
cltd
int3
jg
dec
xchg
in
jg
push
loop
pop
pushf
ss
jnp
and
ljmp
mov
cwtl
cmp
pushl
mov
jno
and
xor
cmc
in
pop
xchg
dec
dec
add
add
test
push
leave
call
push
pop
pop
cmp
jp
in
push
mov
cmp
push
sbb
icebp
sar
jmp
mov
stc
out
mov
sub
rclb
adc
mov
jle
mov
out
inc
mov
bound
sbb
pop
inc
icebp
ja
jecxz
lock
and
popf
mov
dec
lods
decl
iret
adc
xor
data16
mov
xchg
in
icebp
arpl
insb
ljmp
push
push
mov
mov
movsl
iret
inc
jp
inc
out
mov
jmp
fucomi
dec
inc
mov
add
cmp
and
sti
mov
cmp
sub
loop
sti
xor
pop
dec
sub
jp
add
andl
loopne
and
ja
ss
shlb
jge
adc
dec
rclb
pop
push
fnstcw
repnz
cs
rcrl
mov
lcall
pushl
and
sbb
sahf
in
mov
mov
decl
cmp
aam
push
add
pop
jae
pushf
push
mov
in
rclb
cmp
jmp
mov
ja
fdivr
jns
cmc
cli
ret
scas
sahf
out
adc
ficompl
into
sahf
cltd
xchg
cmpsl
ret
dec
sub
leave
movsb
cmp
cmpsb
inc
xlat
jmp
sbb
int3
mov
sbb
inc
in
js
jae
lret
xchg
adc
imul
mov
bound
es
lock
pop
lods
xchg
aam
fwait
cmp
add
lret
add
push
stos
and
sti
lret
ret
cmp
iret
pop
cmpsb
pushf
repnz
incl
cmp
sub
mov
jg
fisttps
cld
mov
hlt
stos
or
lods
mov
adc
mov
decl
xchg
in
fldcw
in
daa
in
adc
mov
jne
xchg
cwtl
cltd
push
data16
sub
pushl
nop
pop
test
add
bound
out
xchg
dec
mov
popf
test
pushl
cld
cmp
xchg
mov
outsb
sbb
nop
or
dec
pushf
jmp
lret
mov
pop
sbb
xor
push
mov
xchg
js
std
mov
mov
push
xchg
sbb
xor
xchg
cmc
into
jmp
mov
push
sub
out
and
add
lcall
and
add
xor
xchg
jecxz
sarl
dec
fadds
loop
hlt
lods
dec
subb
stos
icebp
mov
mov
rcr
add
jne
mov
and
into
mov
xchg
pusha
cmpsb
movsl
add
popa
dec
inc
insl
ljmp
sbbb
or
andb
push
leave
js
loop
mov
jle
imul
sbb
lret
std
aaa
int
or
inc
cmp
leave
add
add
sbb
lcall
push
and
repnz
jmp
sahf
movsl
push
scas
jle
mov
push
inc
roll
repz
dec
mov
mov
stc
adc
popa
xor
pop
adc
xor
cmp
lret
mov
ja
jp
jmp
clc
cld
rorb
dec
ss
rol
dec
push
xchg
xor
sub
iret
mov
pop
cmp
push
jle
subl
stc
dec
das
and
ljmp
aam
insl
cltd
cld
cld
mov
or
lcall
sub
outsl
cli
pushl
notl
sarl
cmp
jne
mov
jp
mov
dec
dec
imul
xchg
imul
repnz
or
sbb
adc
ret
adc
incl
or
cmpb
sbb
out
imul
mov
mov
jbe
je
adc
fstl
out
lret
add
scas
xlat
fisubrl
ljmp
mov
lods
adc
and
xor
push
scas
xor
bound
mov
mov
jns
pop
adc
imul
and
pusha
lret
ss
xchg
jmp
bswap
xor
incl
mov
xor
adc
pushf
sbb
movsl
inc
pop
es
js
and
pop
push
ja
decl
inc
popf
ds
clc
dec
mov
inc
scas
movsb
shlb
lea
rclb
lcall
add
push
lcall
lds
stos
sub
xchg
aad
xchg
push
ja
fisubs
pop
rcrl
out
xchg
ret
lcall
ljmp
pop
jmp
fstpt
in
andl
jb
hlt
aad
fwait
aaa
aad
loop
cmp
adc
push
jb
or
inc
shl
jg
mov
movsbl
jg
and
js
into
sti
adc
fisttpll
mov
push
add
jnp
cmpxchg
pushf
cli
aam
xor
dec
or
cmp
std
rcl
cmp
mov
ja
call
adc
icebp
push
daa
cld
repz
ficomps
push
pop
enter
jmp
icebp
push
ja
fwait
and
xchg
pop
test
sbb
mov
outsb
cwtl
lcall
inc
mov
outsb
xor
xorb
push
mov
inc
ret
iret
mov
jmp
mov
xlat
popf
sub
add
or
xor
jge
push
addr16
mov
jle
test
loopne
scas
js
cmpsl
sub
pop
ljmp
xor
jmp
ss
fdecstp
aam
fdivp
decl
xchg
inc
jl
mov
dec
adc
incl
test
aaa
mov
enter
inc
jb
sub
mov
pop
sbb
sub
xor
je
mov
jle
lds
adc
or
mov
and
push
insl
mov
addr16
imul
push
xor
decl
xchg
sti
shrb
inc
and
mov
fisttpl
mov
les
test
stos
mov
std
jg
call
jnp
xchg
mov
push
fwait
sub
mov
push
int3
movsb
mov
lret
call
jle
push
dec
sub
les
test
mov
ds
out
mov
xor
incl
pop
jns
bound
outsb
push
or
push
and
das
sub
mov
inc
sar
lcall
jb
lahf
sbb
popw
cld
xchg
xor
push
pop
push
xor
mov
or
inc
std
lcall
sbb
rolb
mov
inc
jnp
dec
cmp
mov
add
jmp
jo
int3
push
mov
push
xchg
test
iret
outsl
imul
push
mov
pop
cmp
scas
cld
ficompl
mov
das
or
arpl
pushf
lods
push
adc
push
test
jne
and
inc
rcrb
call
add
lret
pop
push
push
outsl
cli
mov
sbb
mov
hlt
jmp
push
adc
adc
mov
out
sarl
js
xchg
insb
xlat
mov
pop
js
daa
ret
sbb
sar
ljmp
cmpsb
shlb
loopne
sub
fistl
pop
outsb
inc
pop
pop
cmp
mov
ja
push
rorl
dec
and
xor
fistl
pop
and
jmp
push
and
mov
xchg
xchg
xchg
fimuls
xor
inc
jno
jl
inc
cli
dec
or
inc
mov
lea
je
cmpsb
cmp
cltd
or
es
jg
insb
aam
test
loop
inc
cmc
cld
mov
inc
jle
stos
sub
fs
jecxz
mov
test
lods
cmp
jecxz
sub
orb
xor
inc
jecxz
mov
xchg
cmc
ror
pusha
jecxz
ljmp
inc
int3
jbe
inc
mov
cltd
into
inc
dec
or
inc
ljmp
pop
rcr
fwait
mov
cs
data16
outsb
daa
mov
out
shlb
or
incl
leave
cmp
mov
stos
out
dec
mov
cmp
pop
loopne
adcl
mov
ja
fsub
sub
adc
faddl
daa
in
pop
fucomi
inc
mov
decb
xorl
clc
cmp
outsl
mov
in
or
insl
jp
sub
movsl
popf
adc
mov
add
sbb
mov
fisubs
xor
int
andb
xchg
fs
mov
aam
cmp
inc
or
pop
ret
push
sub
roll
add
clc
mov
int
xor
mov
fsub
fisubrl
insl
and
into
fdivrl
rcrl
jg
cli
or
inc
push
xchg
leave
pushf
and
lret
inc
call
in
jbe
cmp
xchg
cmp
insl
or
sbb
std
rcll
call
push
movsl
fucomp
cmp
ljmp
subl
cmp
pop
lcall
fmuls
pop
and
decl
gs
xchg
flds
imul
cmpsb
xchg
movsb
cmp
mov
ljmp
addb
dec
outsl
stc
pop
mov
aad
jge
lds
add
movsb
mov
inc
sbb
outsb
cmp
mov
gs
pop
adcb
xchg
aas
mov
mov
sub
pop
call
ret
mov
shlb
aad
push
call
icebp
dec
mov
sahf
cmp
jno
inc
pop
leave
out
xchg
mov
enter
push
xchg
out
lea
ljmp
int3
cmp
cmp
mov
cmp
and
add
cs
xadd
pusha
decl
enter
ret
insl
push
insl
xchg
in
inc
lea
jmp
push
push
lret
add
and
push
mov
pusha
mov
stc
sar
stos
cs
ss
loopne
jne,pt
xorb
mov
cmp
sub
daa
xchg
cli
xor
adc
imul
mov
divl
icebp
lock
or
jmp
stos
mov
shll
dec
adc
fstpt
dec
aam
in
mov
call
jmp
cmp
outsl
adc
test
inc
lret
add
fimull
pushl
adc
insl
jb
and
bnd
push
push
sti
imul
mov
lcall
mov
enter
jns
dec
or
add
aam
test
sub
dec
mov
jae
clc
call
out
mov
sti
jmp
clc
sub
add
pop
fucomip
ljmp
pop
mov
sbb
hlt
ljmp
adc
mov
call
lcall
sub
jnp
mov
sbb
loop
sbb
sbb
out
pushf
lea
js
xor
ljmp
div
xor
xor
or
jo
fucom
imull
cld
sub
cmpsb
add
stos
cmp
test
enter
or
call
push
mulb
mov
js
imul
into
arpl
hlt
sbb
call
pop
mov
and
dec
les
mov
filds
movsb
les
mov
rorl
fucom
cmpsl
inc
sub
in
jne
sbb
push
jmp
push
call
iret
push
cli
xchg
cmpsb
stc
push
push
fcomip
das
push
lods
mov
pop
dec
pop
stos
sbb
les
scas
pop
pop
inc
lcall
pop
jle
dec
fidivrs
and
mov
cli
add
mov
imul
add
sub
fmuls
sub
sub
mov
sub
pop
jne
or
sti
enter
add
lods
lcall
sub
mov
mov
pop
aam
pop
es
cmpb
xchg
xor
in
xchg
ret
icebp
jge
push
aad
push
lahf
sbb
fmulp
rol
mov
aas
mov
mov
push
sbb
dec
arpl
push
bound
jmp
cmp
pop
leave
fildl
adc
shlb
xor
cmpsb
push
imul
call
mov
mov
push
mov
xlat
mov
or
hlt
je
jmp
clc
in
popa
imul
cmpsb
ljmp
xor
pop
sarb
arpl
scas
fcmovb
mov
mov
mov
cmp
mov
mov
mov
mov
mov
push
pushl
sbb
inc
iret
cmpsl
fwait
movb
in
dec
jg
idivb
sbb
jg
pusha
and
mov
insb
jl
cmpsl
and
or
enter
cli
xlat
or
inc
les
frstor
push
loope
jg
daa
pop
ss
pop
or
dec
mov
xchg
jp
adc
sbb
imul
movsl
mov
sub
mov
decl
test
adc
rorl
xchg
fcom
fsts
mov
in
jp
or
out
jmp
adc
imul
inc
arpl
push
mov
adc
xlat
adc
pop
popf
sub
sbb
mov
pop
mov
fucomip
shlb
mov
xchg
das
sub
std
daa
mov
repnz
and
mov
add
push
or
decl
data16
jl
pop
adc
in
sar
data16
and
ficompl
lds
xchg
adcb
pop
das
shlb
dec
mov
imul
popf
adc
rolb
mov
dec
mov
sub
or
lcall
aas
or
shlb
mov
es
fisubrl
push
iret
aaa
fdivrs
mov
es
add
add
cltd
adc
or
sar
divl
nop
rcrb
mov
xchg
nop
rol
ret
xor
pop
cld
ljmp
push
fimuls
add
jae
call
inc
xor
in
sar
outsb
mov
mov
out
sub
mov
xchg
es
or
jmp
xor
ds
xlat
enter
inc
sti
mov
incl
jp
pop
jb
repnz
and
xchg
dec
sub
push
dec
imul
ret
sub
jecxz
loopne
cltd
mov
decb
divb
es
pop
sarl
lcall
dec
lods
cmpb
out
cmp
dec
fnstcw
jae
push
cmpb
incl
and
ds
adc
clts
push
arpl
shll
mov
cmp
sbb
xor
cld
cmp
xorl
and
mov
pushl
in
lret
adc
outsb
popa
cwtl
dec
mov
scas
ss
pushl
jb
mov
pop
cmp
std
push
lods
clc
mov
lods
pop
dec
xor
xor
sub
stos
xor
push
dec
push
jbe
pop
or
push
and
push
cld
das
cli
sar
mov
adc
sbb
fwait
inc
sub
cs
lock
incl
jne
nop
mov
xor
push
lds
cmp
adc
mov
and
inc
pop
push
mov
scas
insl
jmp
ljmp
push
cmp
cmpsb
pop
bound
fucomip
daa
popa
aas
fidivs
cmpsb
mov
push
mov
sub
xchg
jne
jg
loope
mov
pusha
stos
pop
movsb
in
add
shrb
push
dec
movsl
adc
icebp
sar
ljmp
xchg
push
and
lock
add
pushf
vpsrad
xchg
cmp
jg
push
adc
sahf
addr16
popf
mov
cmc
ds
mov
fcoml
pushf
xchg
add
scas
jns
std
jae
sahf
push
psllq
sbb
out
and
je
daa
mov
push
stos
cmp
mov
scas
push
hlt
cmp
push
cmp
add
pop
push
xchg
movsl
daa
add
push
inc
and
dec
ret
dec
cmp
cli
popa
sbb
shll
mov
ds
and
fisubl
cs
call
loopne
js
mov
jmp
sbb
fstps
adc
jg
jmp
scas
fidivrs
mov
test
outsb
test
gs
inc
dec
je
mov
inc
lods
leave
fcompl
sub
inc
mov
decl
pop
jnp
aaa
mov
pop
pusha
pop
adc
push
cmp
push
inc
pusha
dec
imull
lahf
lret
pop
fcmovnbe
xchg
mov
jbe
ja
lcall
lcall
fwait
lock
cmpsb
adc
cli
rorb
loopne
mov
adc
mov
popf
mov
push
xchg
or
jle
insl
dec
push
sub
xor
or
pop
cs
jne
sahf
ljmp
inc
orl
mov
and
cmc
aaa
rorb
push
scas
outsl
pushl
scas
cmp
xorl
scas
js
outsl
add
mov
outsb
mov
out
push
or
xor
jg
scas
fldcw
cmp
loope
cmpl
cmp
fwait
in
clc
subl
jge
xchg
call
adc
push
or
stos
mov
mov
sub
inc
inc
cmp
aam
pop
mov
add
push
icebp
mov
push
rorl
mov
mov
cmc
fmull
jecxz
dec
cld
cmp
call
xchg
sub
jp
out
imulb
fdivrl
aaa
cmpsb
repnz
aam
jnp
out
ja
ret
push
mov
fimull
jnp
sbb
pop
sub
rcrl
incb
push
xchg
or
int3
inc
rcll
add
mov
fucomp
aad
sti
xor
sbbb
sub
addr16
push
and
add
ljmp
addr16
ret
mov
ljmp
test
push
je
sbb
call
xchg
mov
les
aaa
inc
sbb
lods
ret
mov
mov
shr
xchg
jp
shlb
xchg
pusha
stc
mov
lahf
testl
jg
jb
enter
xchg
push
loope
inc
add
daa
xor
fdiv
ds
ret
ljmp
push
out
imul
sbb
dec
sbb
test
lahf
sti
pop
fcomip
pushf
jae
cli
lcall
fs
popa
test
pop
dec
mov
push
inc
pop
pop
mov
call
or
pop
cmp
fnstsw
mov
and
mov
std
xchg
scas
stos
aad
lcall
daa
test
xor
pop
sub
mov
mov
enter
je
negl
mov
idivl
aaa
sti
decl
xor
shlb
jl
fnsave
nop
mov
stos
sub
sub
xchg
ds
xor
pop
pop
test
inc
stos
stos
in
adc
mov
pop
in
out
jl
outsl
sar
jmp
insb
nop
pop
push
adc
in
xchg
lret
cmc
js
fdivp
cld
inc
xchg
mov
mov
or
pop
std
ljmp
push
cmp
dec
mov
adc
jmp
enter
mov
pushl
dec
xchg
mov
jge
jns
and
sbb
xchg
shll
out
stos
dec
or
fadd
inc
or
scas
xor
pushl
sub
xchg
bound
das
jns
in
mov
push
gs
ja
arpl
stos
sar
mov
leave
pop
out
jecxz
clc
sbb
movsb
shrb
inc
xor
inc
or
cld
cltd
lcall
mov
dec
scas
cmpsb
mov
cmp
cmpsl
aam
adc
jecxz
pop
adc
clc
decl
mov
or
sarb
lods
int
dec
adc
pushl
jb
and
or
pop
push
adc
jp
or
cmpsb
mov
decl
or
mov
pop
push
scas
fucomip
aaa
out
ljmp
loop
mov
jle
xchg
jg
cmpsl
out
xchg
dec
ret
aaa
and
and
push
test
jecxz
lcall
mov
cli
cmp
adc
sarl
pusha
ss
jb
aaa
mov
jl
mov
xor
push
mov
in
dec
stos
mov
inc
pop
dec
clc
dec
push
repnz
ljmp
repz
scas
sub
adc
sub
lock
in
fdivrl
ja
mov
mov
inc
mov
dec
mov
pop
mov
lcall
mov
adc
adc
cmp
pushf
sbb
leave
push
jg
rep
cltd
cmpsl
rorl
xchg
sub
mov
mov
xchg
incl
data16
mov
js
or
int3
push
leave
dec
pop
xor
test
call
stos
lods
cltd
test
loop
inc
dec
xchg
xlat
jle
int3
xchg
cli
clc
pop
xor
mov
or
test
int3
pushl
movsl
and
sbb
movsbl
or
shlb
mov
pushl
xchg
jl
mov
sub
cltd
sbb
loopne
bound
or
out
ljmp
inc
mov
or
ds
addr16
and
outsb
bound
les
ja
and
ljmp
bswap
lret
xlat
gs
je
push
cmpsb
scas
pop
in
outsb
xorl
ror
and
lods
sar
lds
push
mov
sbb
inc
inc
mov
pushl
xor
loopne
sahf
dec
and
insl
sbb
inc
out
ret
mov
call
call
xchg
jg
stos
pop
lahf
jge
cltd
mov
xlat
xchg
call
inc
and
loope
pushl
cli
mov
ja
sysexit
mov
imul
add
sub
incl
jg
xchg
xlat
sub
stos
mov
cmpsl
call
divl
and
pushf
pop
pop
cmp
mov
fdivr
add
sti
stos
stc
dec
mov
xchg
pop
test
sbb
leave
jno
sub
cmp
xchg
push
jp
xor
lods
addr16
cli
imul
int
adc
pop
inc
adc
jle
je
popf
cmp
mov
mov
jnp
es
inc
inc
cmp
push
pop
cmp
arpl
js
pop
cmc
decl
add
cmp
mov
lahf
xor
test
adc
push
xor
mov
sbb
adc
out
dec
pop
jp
or
xor
mov
xchg
ret
push
cmp
imul
repz
rol
out
icebp
leave
fisubrs
add
mov
sti
xchg
jmp
jbe
shrb
mov
xchg
mov
in
jne
jmp
sahf
das
pop
gs
lcall
mov
pop
icebp
pop
dec
loopne
sub
insb
testl
rsqrtps
push
or
add
pushl
ds
xor
or
lods
dec
shll
xchg
stos
pushl
mov
cltd
or
jecxz
cwtl
jnp
adc
mov
mov
pushl
fwait
lcall
jbe
push
push
jae
jne
mov
adc
pop
adc
mov
xor
mov
imul
cli
and
mov
in
xchg
stos
adc
loope
mov
ljmp
adc
shlb
or
push
jns
sub
push
jge
lahf
add
pushl
insl
scas
mov
cwtl
add
sub
cmp
push
sbb
xor
adc
fdivr
jg
sub
pusha
movsl
adc
aaa
dec
sub
in
stos
outsb
enter
mov
ljmp
lock
jge
pop
adc
mov
push
int
out
inc
dec
hlt
xchg
and
pop
push
dec
imul
inc
sbb
mov
insl
cltd
loope
jg
lcall
lock
cs
nop
iret
inc
mov
jb
enter
clc
cmp
jmp
andb
push
adc
pusha
in
int
pop
or
pop
push
pop
decl
and
aaa
push
sub
pop
dec
and
les
cmp
lcall
std
fisubrl
gs
adc
sub
xchg
popa
jecxz
fildl
dec
bound
pop
fs
popa
cmpsl
adcl
ret
inc
in
sub
stos
insl
inc
or
lcall
xor
cmp
pop
jle
adc
sahf
cmp
pushf
scas
subl
dec
dec
pop
xchg
lcall
dec
mov
add
or
leave
xchg
xor
mov
xchg
inc
ljmp
int3
mov
sbb
and
scas
sub
push
and
shll
incl
adc
lea
popf
xchg
lahf
mov
or
and
insl
dec
fimull
in
add
xchg
arpl
xlat
cmp
adc
cmpsb
add
movsb
cmpsb
mov
mov
clc
movsl
add
lahf
and
pop
popa
add
lcall
pop
cld
dec
xor
cmp
fldpi
movsb
lret
jp
and
mov
call
incl
cmpsb
mov
add
imul
test
decl
mov
pop
dec
cli
test
sbb
fs
jg
test
mov
stos
xchg
loop
mov
fcomip
cli
and
loopne
out
pushf
popa
pop
sub
loopne
popf
push
push
cmp
enter
loopne
add
fwait
sbb
push
mov
add
and
incl
push
pop
ret
popf
call
hlt
stos
out
push
inc
inc
in
ror
mov
pop
inc
mov
cmc
loop
aas
pop
inc
pushl
xor
sub
mov
loop
aad
xor
dec
mov
xchg
mov
mov
adc
cmpsl
pop
xor
sarb
mov
mov
mov
push
pop
sbb
inc
into
and
mov
cmp
ljmp
xchg
lret
test
pop
loopne
xor
sub
cmp
jle
push
cmp
sbb
enter
and
adc
mov
roll
mov
cmp
xor
jno
sub
xchg
fcom
aad
leave
es
lcall
mov
jg
push
xchg
ficomps
add
xorl
push
leave
and
pushf
imul
jg
scas
shl
pop
pop
orl
fbstp
jmp
rclb
ljmp
in
jl
pop
and
adc
jge
cmp
loope
mov
out
into
pop
shrl
push
sahf
incl
jnp
shrl
adc
xchg
mov
lock
add
ror
jns
inc
hlt
jno
jo
movsl
and
stos
pop
add
xchg
andb
or
push
mov
fs
jle
ljmp
dec
and
cmp
into
and
ficomps
jg
adc
in
loop
pop
cmc
call
loope
push
adc
pop
fsubl
int
lods
inc
xchg
add
pushl
fwait
push
cmp
jg
sbb
call
dec
mov
jnp
xchg
adc
mov
jmp
sub
pop
std
lock
loop
xor
push
pop
inc
push
sub
imul
incl
and
test
in
or
mov
cld
fwait
or
push
cmp
std
push
cmp
inc
insb
jae
insb
mov
test
add
daa
loopne
mov
adc
mov
pushf
sub
sbb
pop
fisubrs
out
jae
push
sbb
jnp
mov
fcoms
dec
push
jle
incl
jne
daa
out
in
jnp
int3
or
pop
dec
push
mov
in
xchg
and
movsb
sti
pop
xchg
icebp
lcall
inc
and
inc
mov
das
push
xchg
call
push
sbb
add
sub
call
in
std
imul
sub
adc
mov
cmpsl
xchg
mov
out
test
icebp
addr16
incl
cmp
fiaddl
dec
jecxz
push
xchg
push
mov
in
cli
fwait
sub
sub
and
cmp
push
cmpsl
mov
jbe
or
inc
popf
inc
xchg
loope,pn
lcall
pop
cmp
ret
das
jno
sub
jg
jo
adc
sahf
in
mov
jg
pop
jno
mov
and
pop
movsl
scas
sti
pop
sbb
xchg
xchg
inc
jge
mov
jle
incl
insl
test
insl
xchg
shl
and
push
jp
xchg
add
jle
xchg
xchg
jmp
aam
mov
cs
sub
lods
inc
pop
sub
lods
ja
push
and
xchg
pop
out
ss
xchg
pop
out
xchg
xchg
dec
xor
cpuid
pushl
push
cmpsb
jmp
test
pop
jle
mov
adc
push
push
push
outsl
mov
cld
push
push
scas
xchg
scas
pusha
jo
mov
adc
loope
lahf
cmp
test
decl
xlat
mov
mov
lahf
dec
jmp
push
xchg
mov
cmp
sbb
fcomp
ds
lods
out
mov
call
jo
inc
sub
adc
xor
push
cmp
decl
mov
mov
cltd
insb
orb
stos
fwait
push
out
jb
mov
sbb
out
mov
pushl
addb
cmp
or
dec
lret
cld
ss
xlat
sbb
dec
loop
push
dec
jp
and
ljmp
sbb
bound
inc
adc
add
or
xchg
xor
mov
xchg
mov
aas
fcomps
in
mov
xchg
dec
add
scas
adc
incl
mov
mov
fidivrs
ljmp
insl
in
mov
sbb
aad
fisttps
push
loopne
shrl
push
add
push
mov
stc
inc
call
loopne
xchg
xor
mov
lahf
mov
js
mov
clc
in
or
clc
in
jp
int
cld
jp
push
mov
mov
mov
jl
xchg
jae
mul
popf
mov
rsqrtps
out
js
lret
adc
dec
lea
jmp
bound
loopne
cmp
fidivrl
adc
decl
inc
mov
and
leave
adc
sar
lcall
add
xor
and
in
fnstenv
iret
movsl
mov
mov
ljmp
fadds
ljmp
dec
xor
call
in
push
cmpsb
test
lds
sub
dec
ret
mov
les
dec
shlb
jge
int
push
pop
pop
and
xchg
or
nop
sub
mov
push
js
test
incl
sbb
leave
lcall
div
add
pop
xchg
mov
pop
les
repnz
mov
clc
rorb
add
xor
mov
jnp
insl
mov
mov
pop
or
jle
pop
aad
fwait
mov
xchg
jmp
dec
adc
insl
aaa
cld
lcall
push
mov
mov
gs
adc
sbbb
loopne
call
jg
call
test
lock
mov
pop
shr
iret
lds
and
incl
jo
and
faddl
sub
iret
out
add
jg
cmpb
adc
pushf
sub
jmp
pop
xchg
stc
pop
jmp
or
incl
lcall
pop
push
mov
lock
movsb
mov
push
and
testb
dec
adc
sub
push
mov
pushl
mov
push
mov
adc
ds
popa
pop
andl
loop
int
mov
iret
cmpsb
dec
fisttpl
subb
mov
pop
aas
or
sar
cld
ljmp
and
jle
cmp
cmpsb
lods
daa
into
xor
mov
incl
bound
lods
and
jns
push
filds
sub
loopne
movsb
nop
adc
cmp
and
jg
inc
ds
sbbl
dec
lcall
xchg
jb
lahf
ss
sbb
pop
daa
les
cmpsl
xlat
push
ja
or
sbb
mov
or
fmull
cmp
call
cmp
xchg
xor
outsl
and
sub
inc
mov
decl
popa
lahf
fmull
sarb
or
ss
mov
jnp
scas
xchg
fcomip
dec
lret
mov
mov
sub
int3
adc
and
inc
push
je
dec
aaa
mov
mov
cmovae
dec
add
mov
pop
cmp
adcl
gs
pop
inc
add
ljmp
dec
mov
sub
dec
lcall
adc
shl
into
jnp
dec
leave
lcall
fsub
adc
in
pop
adc
inc
dec
jne
xor
xchg
cld
add
or
incl
pop
repz
or
mov
inc
insb
test
mov
les
cld
mov
xchg
imul
std
decl
inc
push
mov
repz
inc
push
mov
stos
jbe
sbb
call
ja
aad
test
inc
jnp
jb
cmp
shrb
push
push
scas
sbb
mov
insb
jb
ljmp
jno
adc
inc
push
pushf
stos
and
icebp
ret
pushf
test
and
sbb
jg
movsb
iret
idiv
xchg
push
lret
or
dec
sti
or
mov
cmp
pop
lods
scas
push
jmp
sbb
cmp
mov
cmpsl
or
call
movsb
pushf
fdivr
rcrl
mov
js
add
hlt
xchg
ljmp
call
hlt
push
inc
inc
mov
jno
dec
enter
sub
cmp
ljmp
jp
lods
mov
mov
adc
and
mov
popa
push
test
fcmovnb
ljmp
inc
insl
mov
mov
inc
arpl
cmp
mov
inc
jmp
out
inc
and
mov
out
inc
rcrb
cmc
inc
in
call
repnz
pop
lods
inc
sub
pop
mov
imul
cld
scas
andl
or
inc
jmp
in
repz
sub
clc
mov
loope
jge
and
aas
xchg
cmpsl
popf
clc
sub
jl
ret
xor
adc
test
mov
inc
mov
insb
aam
lret
add
loopne
lcall
jb
daa
xor
out
pop
outsl
cmp
sbb
lcall
ret
addl
test
mov
popf
xor
std
lret
mov
loope
in
sti
sub
call
psubusw
notb
leave
sti
pmaddwd
push
enter
ljmp
mov
lods
clc
call
push
pop
bound
xchg
into
sub
loop
lea
pop
out
int3
sarb
incl
add
rorl
cwtl
in
sub
cwtl
push
mov
incl
lods
mov
mov
cmp
pop
in
ljmp
mov
pop
or
lret
int
add
pop
ret
stos
imul
fsubr
and
xchg
mov
pop
pop
mov
mov
lcall
inc
insl
jmp
test
rcrb
loop
dec
addr16
clc
out
adc
inc
fs
rcrb
xchg
lods
outsb
push
lcall
lahf
push
cmpsl
inc
jge
xor
sbb
jmp
imul
jmp
fdivp
cwtl
loop
adc
push
cmc
sahf
push
int
fisubrs
cmp
out
int3
push
aaa
xchg
pop
pop
loop
int3
adc
loop
pushf
and
int
push
pop
sahf
pop
lret
sub
sbb
dec
and
lret
sub
push
lret
scas
mov
lcall
call
and
pop
movsb
call
adc
cmp
push
pop
test
stos
pop
popf
jb
ret
out
in
push
adcl
jnp
out
cmp
inc
cs
add
adc
shrb
sbb
add
repz
fldenv
inc
subl
xchg
sub
or
ja
sbb
dec
sub
punpckhdq
inc
lcall
jmp
xor
repnz
push
loop
mov
jp
shlb
fucomp
sbb
sub
popa
jo
ret
hlt
mov
daa
dec
in
xchg
jge
mov
lcall
or
aam
ljmp
mul
call
sbb
mov
mov
mov
out
rorb
fisttpl
xor
sahf
nop
mov
xchg
mov
mov
cwtl
outsl
pop
cmp
mov
or
push
scas
call
in
jmp
inc
testl
scas
sarl
lea
lcall
or
cli
out
and
cs
in
xorb
add
bound
in
cmpsb
xchg
outsl
lcall
stc
repnz
jo
outsb
cmpsl
fsubl
pop
lahf
mov
inc
pop
cmc
sub
testl
cs
mov
dec
int3
xchg
shll
adc
add
lods
sub
popa
imul
inc
xchg
outsb
test
icebp
mov
xor
cmp
lret
jb
dec
push
sub
cmp
mov
jbe
dec
xchg
lods
jge
jb
loopne
orl
inc
jg
stos
mov
jl
ljmp
push
jmp
shr
rcrl
aad
xchg
repz
lret
jmp
cld
stc
mov
mov
mov
inc
jbe
inc
inc
test
and
in
inc
sbb
and
movsb
pop
mov
clc
in
jne
xchg
dec
inc
fcomps
adc
sbb
mov
fbstp
cmpsl
stos
stos
das
loopne
mov
mov
fidivs
imul
sub
pushf
mov
pop
mov
mov
es
mov
mov
mov
es
xchg
lcall
shrl
sub
add
popa
fstpl
add
mov
xchg
mov
incl
mov
jo
adcb
and
push
frstor
and
push
pop
mov
jnp
hlt
dec
sub
and
fldenv
decl
je
push
push
mov
out
xchg
xchg
clc
mov
repz
addb
ljmp
aas
lods
or
in
push
int
push
cltd
dec
mov
imull
aad
fwait
push
adc
mov
push
in
sbb
jne
iret
push
aad
loop
jbe
call
jmp
out
mov
sub
icebp
nop
loopne
mov
sahf
cmp
mov
mov
inc
stos
icebp
in
push
push
test
pusha
stc
lea
xor
daa
pop
std
stos
xor
inc
pushl
fdivrl
inc
cmc
mov
dec
pop
fwait
sbb
xchg
pusha
xchg
add
pop
lock
pop
iret
lods
enter
fnsave
add
push
xlat
incl
shrl
dec
cmp
pop
nop
je
sub
repnz
shlb
sbb
mov
int
out
pop
jne
jo
sbb
scas
clc
decl
push
test
enter
lock
test
lret
call
incl
and
rcr
pop
icebp
lret
push
sub
jmp
ret
adc
iret
push
mov
test
fnstenv
jnp
mov
and
scas
lahf
jmp
and
cmp
mov
push
in
shl
pop
pop
dec
cmpsl
inc
mov
add
call
lcall
xchg
adc
gs
push
inc
mov
cmp
scas
int
push
adc
fstpt
loop
call
decl
sbb
lea
loop
or
push
ljmp
ret
sbb
jns
jge
mov
xchg
fdecstp
lods
nop
push
or
ficoms
dec
and
aaa
sbb
push
decl
fs
dec
pop
adc
loopne
pop
jbe
mov
mov
cmc
pop
cmp
or
push
push
rcll
aas
inc
enter
ljmp
lcall
fmul
xor
mov
mov
into
mov
loop
in
push
lcall
repnz
push
mov
and
and
adc
adc
push
lcall
mov
sub
pop
or
xor
mov
jg
inc
arpl
xor
pop
mov
fwait
gs
cltd
cmp
sbbb
jmp
aad
ss
test
adc
dec
outsb
in
gs
decl
xor
or
mov
in
jno
add
cld
jb
sub
cmp
or
lahf
sbb
in
inc
xchg
dec
push
icebp
push
or
xchg
rolb
and
loope
in
lods
add
push
daa
decl
notl
sbbl
xchg
mov
or
ret
pop
nop
xorb
lcall
push
sbb
jmp
pop
push
lret
push
or
sub
inc
mov
lea
fsqrt
jmp
xchg
jl
inc
out
add
out
arpl
ds
jg
dec
scas
dec
adc
aam
xor
xchg
fidivrl
pop
add
loopne
shll
pushl
cmp
or
pop
mov
sub
xor
dec
xchg
xor
or
orb
decl
pop
es
popf
xchg
js
jle
and
popa
push
jne
incl
gs
ljmp
imul
add
rcrb
inc
inc
sbb
ficoml
adcl
mov
call
mov
pop
in
repnz
jbe
push
int3
and
imul
xchg
call
imul
sbb
sbb
jno
pop
xor
roll
jmp
jmp
add
add
ficomps
sbb
jg
mov
in
outsl
cmp
ljmp
and
cmp
pop
adc
decb
cmc
xor
pop
leave
fcomip
stc
das
push
xchg
mov
jge
push
and
mov
call
xor
inc
xchg
mov
pop
aas
stc
mov
mov
mov
int
in
bound
jg
fdivl
xchg
push
inc
lret
mov
inc
cmp
and
mov
mov
incl
cld
mov
sub
and
inc
and
xchg
xor
cld
incl
mov
inc
sub
inc
jne
int
enter
xchg
pop
cli
inc
pop
pop
jno
stos
or
rclb
cli
inc
mov
xchg
dec
addr16
xchg
or
movsb
out
pop
shrb
jmp
push
mov
or
dec
jmp
js
adc
xchg
adc
lret
incl
fs
outsb
test
in
xchg
cmp
mov
mov
add
call
sub
popf
and
or
add
inc
fs
testb
out
add
pushf
push
sbb
push
fs
inc
pop
call
jnp
mov
add
or
mov
in
cmp
bound
jg
into
inc
jmp
dec
call
movsb
je
cmp
jne
sahf
shrd
aas
and
sti
jo
pand
call
dec
lcall
jmp
jno
cmpl
in
idivl
sub
jmp
fwait
inc
sub
mov
ljmp
stc
jp
or
xor
mov
pushl
cmpsl
add
jge
sti
stos
in
enter
cli
js
push
ret
in
subl
dec
jecxz
sti
cmp
dec
jl
mov
jnp
sub
jle
sub
sbb
in
sbb
inc
pop
xor
sub
or
push
loop
mov
adc
leave
and
mov
rcrl
pmaxub
ret
out
jp
rcl
pop
jnp
in
jmp
cltd
js
js
imul
mov
lods
bound
emms
pop
fisttps
std
jne
mov
adc
jg
insb
push
xor
je
push
push
int3
and
aam
pusha
das
les
fcomip
sub
cmp
mov
ret
aaa
add
jns
setl
outsl
clc
decl
repz
push
subl
jl
pop
shlb
fwait
sub
jmp
push
cmpsb
mov
pop
jbe
and
or
repz
sbb
sti
shll
push
fisttpll
shr
xor
dec
xor
aas
xchg
inc
jmp
jecxz
inc
lcall
jne
daa
movl
push
jne
in
or
les
cli
test
push
enter
insb
xchg
mov
sub
or
ret
jae
push
dec
or
out
test
in
dec
pop
jl
dec
cmp
decb
lcall
movsb
sub
adc
inc
mov
movsb
mov
movsb
sub
sub
or
cmp
sbb
lods
add
incl
xor
and
mov
syscall
add
jle
int3
dec
lret
mov
lcall
lret
lret
aas
cwtl
imul
das
mov
je
mov
push
mov
decl
mov
lock
arpl
push
mov
lret
fnstenv
decl
push
jbe
iret
loope
dec
dec
push
and
push
fstl
nop
sbb
xchg
add
pop
call
sti
xchg
iret
inc
and
and
mov
pop
pop
lods
popf
je
add
xchg
pop
lcall
fs
ja
cltd
cli
jo
adc
push
xor
addr16
add
xchg
mov
inc
mov
pop
pop
aas
ds
cmp
cld
fdivp
lods
or
jg
fdivr
incl
pop
inc
xor
mov
nop
jg
addl
pop
dec
add
xor
cmp
test
dec
push
sbb
stos
movsl
add
test
or
jo
dec
lcall
mov
pop
push
sbb
and
shlb
cmc
stos
testl
incl
push
sti
add
push
push
fcoml
jne
cmc
push
jb
jp
inc
fldcw
push
imul
out
lcall
xchg
mov
adc
mov
popf
inc
data16
cmp
pop
jns
or
or
and
add
mulb
adc
notb
pop
int
adc
ljmp
or
test
stc
cld
cli
or
out
insb
sbb
bound
ds
leave
out
jnp
bound
or
mov
lret
mov
inc
outsl
les
aad
ljmp
test
in
add
movsl
jnp
sarb
dec
pop
sbb
lcall
dec
ficomps
jne
jnp
pop
xchg
jb
imul
mov
xchg
andb
arpl
andl
decl
inc
into
popa
daa
js
movsl
ss
inc
mov
aas
cmp
mov
sbb
sub
std
jmp
sahf
icebp
jg
insb
jecxz
sbb
jl
insl
sub
mov
push
fildll
inc
in
aam
dec
sub
into
cmp
adc
das
and
js
inc
fdivrs
adc
fistpll
pushf
xlat
fdivrs
notl
xchg
sub
sub
out
jecxz
stos
xor
mov
ret
mov
cli
fsubs
sbb
lods
xor
cmp
sbb
or
jns,pt
stos
push
sub
xchg
sub
iret
test
sbb
pop
ss
cmp
lret
jb
jns
adc
push
nop
sbb
pop
test
dec
sbb
sub
lret
pop
push
push
in
fiadds
jne
shl
pop
popf
aad
repz
sar
push
jecxz
mov
aam
std
data16
xor
and
pop
lea
push
sbb
incl
jae
divb
rcrb
lcall
dec
orb
mov
mov
fcmovb
mov
imul
sub
lahf
lcall
xchg
jp
ss
lea
std
lcall
xlat
lcall
and
mov
shlb
rep
imul
adc
pushl
lods
jl
mov
in
mov
sub
addr16
pop
mov
test
out
xlat
adc
fimull
dec
and
loopne
inc
mov
shlb
xchg
sub
lcall
or
lahf
jbe
pop
repz
push
or
outsb
add
pop
arpl
popa
mov
aaa
stos
lds
outsb
imul
fcomi
rcl
scas
adcl
sub
and
mov
lds
ret
into
dec
movsb
mov
sbb
fisubrs
mov
aad
inc
loopne
push
in
loop
sar
and
jmp
mov
loope
cwtl
lea
sbb
ljmp
mov
lock
cltd
add
mov
iret
rcll
and
andb
lock
dec
int3
xor
pop
fs
mov
sbb
dec
lret
data16
mov
ss
movsl
or
sub
xor
clc
adc
aas
mov
incl
xchg
sub
les
xchg
ret
imul
add
fcomip
incl
dec
mov
mov
push
add
stc
dec
scas
xlat
pop
cmc
jmp
push
jno
cmc
pop
ret
cli
push
dec
xor
orb
lea
cmp
aaa
sbb
xor
mov
jecxz
std
pop
or
fwait
aaa
xchg
mov
jmp
out
cmp
loopne
ds
sbb
sbb
mov
movsb
cmp
dec
nop
decl
push
jnp
or
out
insb
lock
mov
aad
int
pop
loope
or
cmp
icebp
or
shlb
addr16
scas
mov
sti
cmpb
mov
fs
scas
test
xor
fcompl
xchg
in
aad
jno
and
dec
xchg
jg
aaa
test
ljmp
inc
sti
mov
testl
xchg
std
add
insb
adc
jp
clc
fstl
loopne
cmp
or
aad
dec
add
mov
rclb
enter
call
mov
and
adc
sbb
cmp
sub
in
outsl
adc
push
adc
fidivrl
push
int
aam
mov
int3
scas
es
fcomip
incl
xchg
inc
or
int
shr
inc
and
cs
cmpsb
xchg
gs
divb
loopne
mov
in
out
rcrb
jne
pop
and
lret
test
in
outsl
jb
xchg
mov
mov
dec
das
sub
cmp
in
in
fildll
add
inc
cltd
push
add
scas
loopne
int
pop
arpl
enter
out
push
cli
mov
je
or
int
aad
xchg
jmp
or
add
je
rcr
add
scas
popa
mov
daa
dec
and
pop
in
icebp
call
pop
idivb
outsb
fwait
rcl
nop
in
jmp
roll
sti
pushl
xor
fistps
fcomp
sbb
add
push
sbb
ret
xchg
add
incl
daa
cltd
adc
or
add
sbb
push
push
in
xchg
int
adc
call
gs
and
shrb
jno
fwait
pop
cmc
and
sub
pop
scas
pop
inc
jecxz
test
ss
gs
stos
xchg
cmp
xchg
sbb
sub
xchg
mov
cli
pop
cmp
sub
and
ja
fnstenv
mov
jg
jno
test
dec
xchg
mov
jbe
mov
pop
jb
insb
sbb
push
out
je
sub
jmp
add
xchg
dec
sbb
int
decl
call
movsb
iret
jb
xchg
xlat
negb
inc
mov
loope
jne
test
icebp
mov
cwtl
lock
scas
xor
test
cmp
sti
jb
fcomip
xchg
adc
int3
or
jno
mov
inc
mov
add
mov
cmp
pop
aam
jmp
push
cld
xor
fwait
mov
adc
test
mov
in
aas
test
mov
adc
mov
push
dec
cli
insb
mov
in
push
aas
andb
test
lods
mov
mov
add
push
xchg
cmc
dec
add
dec
outsl
test
cmp
js
mov
call
cmp
out
xchg
or
rol
mov
outsl
sub
lret
pop
clc
out
ljmp
mov
sub
popf
mov
inc
pop
mov
lods
sbb
xor
imul
mov
or
pushl
mov
jle
stc
stos
adc
ljmp
dec
mov
sub
test
cmp
int3
inc
iret
fimull
push
mov
pop
lcall
lds
pop
xchg
push
push
bnd
add
aas
dec
cmpb
adc
mov
fsubp
enter
mov
ret
xchg
sub
inc
sahf
dec
mov
cmp
inc
das
inc
outsl
xchg
pop
jp
pop
call
mov
mov
ret
lret
inc
inc
lods
mov
out
std
fistpll
inc
addr16
stc
cmc
js
fcomip
sbb
add
dec
idivl
ret
mov
icebp
jp
xor
mov
shl
jp
push
rolb
fwait
fwait
adc
in
add
xchg
inc
and
cltd
es
fdivrl
out
mov
imul
aam
push
cmp
xor
inc
push
mov
lea
fsubrl
mov
lock
jb
loopne
and
push
in
push
mov
nop
in
popa
push
dec
pop
incl
mov
jl
add
rdpmc
lcall
gs
or
sub
adc
xchg
sbb
movsl
jmp
mov
push
stc
fwait
cltd
pop
push
hlt
fisubrl
mov
lcall
stos
jb
clc
mov
fs
and
je
aam
ss
jbe
jae
xchg
pop
pusha
sti
pop
push
sti
scas
dec
or
stc
outsb
fcompl
sbb
in
gs
insl
inc
xor
cmp
mov
mov
push
jb
aaa
rcll
mov
sub
add
call
sub
inc
push
orb
ljmp
jecxz
mov
jb
cmp
mov
ja
mov
inc
arpl
lcall
pop
imul
sub
aam
clc
dec
sbb
jne
pop
mov
mov
mov
dec
cwtl
js
sbb
dec
pop
adc
fcmovne
in
inc
mov
mov
jp
xor
mov
add
adc
cmp
je
int3
jns
jmp
push
fsts
adc
xor
test
sbb
cmpsl
stos
lcall
sub
lcall
jmp
or
loope
mov
divb
lcall
pusha
mov
jb
ljmp
jmp
nop
sub
or
frstor
shl
xor
push
daa
fcomip
lcall
mov
sub
adcl
xlat
pop
push
dec
out
ss
js
bound
pop
rcpps
xor
pop
sub
nop
and
lods
hlt
add
call
loope
into
cld
or
lcall
movsb
es
dec
cmp
inc
add
testb
test
mov
fldenv
icebp
lcall
xchg
scas
cmp
pop
shll
mov
mov
ret
push
pop
fistpll
push
fwait
jge
mov
dec
push
repnz
cmp
lds
std
or
pusha
inc
push
lea
sbb
mov
dec
xor
mov
rcr
xor
jmp
add
nop
leave
das
lock
test
ljmp
pushl
lds
cli
sub
repz
xchg
and
sub
and
fcomip
filds
movsb
sbb
mov
ja
ds
dec
and
sub
std
jmp
pop
and
pop
mov
fadd
out
decl
push
mov
jg
cmp
mov
ss
cmp
lock
mov
std
mov
add
in
lcall
push
pop
push
mov
gs
sbb
aad
or
loopne
sbb
test
pushl
jne
enter
add
shll
push
enter
add
dec
sbb
test
testl
ficoms
mov
xor
sar
call
orl
rcl
push
mov
mov
popa
fsubrs
mov
cmp
ficomps
insl
push
cld
decl
xchg
cmc
movsl
imul
jg
add
fcoml
push
jp
push
cmc
add
xor
mov
sub
or
ss
push
or
jne
in
pop
scas
jg
sub
lock
and
into
mov
call
ljmp
sub
push
repz
lods
and
and
repz
ljmp
mov
cmp
imul
jg
xor
lret
or
cld
xor
mov
mov
sub
lret
std
pop
mov
lods
push
in
fildl
clc
ja
ret
inc
mov
incl
mov
xchg
jg
iret
adcb
jmp
mov
push
jnp
shl
movsb
mov
fldt
movsl
data16
aaa
jbe
scas
int3
sbbb
pop
or
pop
lret
aas
shrb
mov
lcall
inc
xor
idiv
cld
mov
sbb
mov
dec
and
dec
std
jbe
xor
clc
xchg
or
hlt
push
int3
cli
or
into
add
popf
adc
sbb
cmpsb
fnsave
mov
xchg
imul
ljmp
lods
push
sbb
xchg
mov
mov
mov
mov
mov
adc
decl
fidivs
lret
add
adc
in
xlat
pop
shlb
les
fdivr
cmp
test
adc
rorl
decl
mov
je
andl
or
insl
shll
cld
jg
incl
or
loopne
push
jnp
cmc
mov
hlt
lea
popa
fcom
scas
mov
iret
lea
pop
lods
aam
dec
lods
lcall
sub
call
mov
pop
jbe
ja
xor
mov
mov
inc
rcr
imull
push
xor
sub
sub
sub
call
cmp
sbb
adc
push
sub
decl
mov
or
xor
aas
jg
sub
jno,pn
cld
mov
jne
and
aas
lds
push
lea
jno
jle
sub
xor
ds
es
ret
mov
jbe
call
out
xchg
imul
fcomps
nop
movsl
dec
pop
pop
and
adc
stos
popa
std
mov
mov
inc
jle
mov
jne
xchg
aam
fs
push
sbb
ss
cmp
pushf
nop
movsb
aas
mull
sbb
or
pushl
pop
xchg
mov
and
pushl
call
sar
mov
jg
mov
popf
jne
and
cwtl
xor
mov
lock
incl
inc
les
lcall
sbb
or
mov
xor
fwait
mov
mov
cmp
pop
jecxz
loopne
int
popa
xchg
mov
fs
arpl
test
clts
out
nop
int
das
sbb
jmp
into
lea
push
inc
pushf
xchg
push
push
sbb
adc
cmp
mov
and
movsb
and
and
call
sbb
gs
pop
lock
sbb
icebp
loopne
aas
popf
jo
bound
push
push
adc
and
outsl
sub
and
push
jecxz
out
or
cmp
mov
jae
push
mov
jmp
stos
icebp
xchg
and
xor
and
push
lret
incl
fcmovne
daa
xor
lret
push
pop
inc
negb
mov
ja
pusha
addb
les
mov
insl
int3
repnz
inc
aam
insl
iret
cs
hlt
jmp
in
dec
sub
bound
in
inc
decl
mov
xchg
pop
cmpsb
lret
sar
adc
mov
inc
adc
xchg
add
xchg
scas
and
sub
pushl
inc
fucom
scas
aaa
sbb
push
or
test
sub
xchg
adc
imul
lcall
jne
loope
cld
adc
es
adc
loope
lcall
mov
jnp
and
scas
shl
push
dec
std
jg
lock
data16
pushf
out
pushf
push
xchg
add
push
filds
call
push
fsubrp
out
sbb
enter
icebp
rolb
icebp
rcr
inc
jmp
lret
mov
xor
into
popf
lcall
aaa
aas
test
shll
sub
ret
mov
insl
sbb
xchg
cld
cmp
and
push
mov
aaa
pop
sbb
jae
cwtl
out
js
incl
pop
push
mov
or
adc
jle
xchg
fstpt
pop
in
mov
cmc
div
pop
push
mov
jecxz
pop
sub
ljmp
mov
jno
sbb
xor
call
scas
fcomp
cmp
outsl
clc
jg
mov
xchg
xor
aas
gs
cmp
xchg
xor
mov
mov
jg
leave
mov
mov
in
das
sub
std
stos
push
cmp
jmp
mov
push
jmp
cmp
icebp
sbb
scas
xchg
das
push
cmp
and
sub
or
imul
lcall
pushl
add
pop
movsbl
data16
nop
jae
adc
lock
loop
je
int
cld
fdivs
sub
fldcw
andb
xor
sbb
cltd
orl
insl
arpl
jmp
jne
es
push
adc
frstor
repnz
cmc
add
push
adc
and
jmp
xchg
sbb
rolb
sahf
movsb
mov
pushl
loopne
loope
cmp
sbb
mov
icebp
xchg
cwtl
stc
and
shlb
jg
sti
andl
pop
add
dec
stos
jecxz
ret
cmpsl
pop
in
mov
pop
std
decl
xchg
shll
jb
mov
leave
inc
clc
cmp
jecxz
mov
xchg
lcall
test
outsb
inc
xlat
adc
xor
popa
mov
push
mov
mov
lcall
push
sub
scas
mov
sub
or
sbb
into
mov
pushl
dec
sub
imul
push
loopne
stos
mov
sub
pop
lret
xchg
mov
popa
in
test
je
out
sahf
xchg
bound
mov
lcall
bnd
or
add
in
jae
jg
call
jecxz
fdivl
sub
mov
dec
test
pop
shrl
pop
mov
lcall
out
icebp
mov
sbb
loop
dec
outsl
or
inc
mov
inc
pop
je
ss
pushl
mov
pop
pop
jmp
jno
test
mov
push
insb
dec
stc
pop
cwtl
and
out
cli
out
jp
cmc
mov
xchg
sbb
sub
sub
adc
inc
push
sbb
call
sti
push
mov
xchg
lret
js
in
test
popf
xor
jne
loop
leave
add
iret
call
idivb
pusha
jno
dec
sbb
mov
in
and
sarb
pop
fldl
decl
aad
dec
or
lds
xchg
dec
jge
add
loop
nop
adc
data16
inc
dec
adc
pminub
dec
addl
mov
outsl
scas
add
cs
out
and
push
aaa
or
bound
mov
dec
adc
int
cwtl
inc
mov
sub
fldt
jmp
jnp
push
sub
stos
push
push
incl
ja
pop
aaa
jb
sbb
xor
movsl
xchg
sahf
fucomi
push
setbe
add
lcall
or
in
jno
mov
push
lods
inc
fisttpl
sarb
push
imul
jg
jge
inc
jns
mov
out
lcall
ljmp
add
stos
push
shll
push
push
xor
push
loope
pushl
into
pop
inc
sahf
xchg
cld
jg
test
arpl
sub
call
or
decl
inc
imul
mov
mov
int
dec
loop
mov
iret
loop
clc
jmp
jo
or
or
shlb
mov
push
fiadds
jnp
incl
sarl
cmp
sbb
add
outsb
orl
mov
arpl
arpl
out
lcall
dec
aad
push
icebp
adc
out
cmp
sbb
icebp
decl
arpl
or
and
insb
stos
push
cmpsb
addr16
push
jne
mov
mov
cmp
push
in
or
cwtl
pop
and
cmp
jnp
sbb
cmp
push
shl
push
enter
cmp
ds
idiv
insb
movsb
pop
incl
cld
cli
dec
mov
mov
fwait
jae
dec
mov
loope
add
lcall
add
std
sarb
cwtl
sbb
hlt
cmp
in
jge
xchg
jecxz
pushf
daa
dec
imul
xor
add
int3
cmp
in
cmp
add
or
push
xchg
sub
cld
jle
cmp
scas
cmp
stos
sbb
shrl
pushl
lahf
inc
xchg
imul
mov
and
sub
out
in
cmp
out
jno
lods
mov
fildl
das
insl
sbb
mov
mov
and
incl
dec
inc
xor
pop
stos
push
movsb
push
push
jmp
or
hlt
out
lcall
subb
sbb
sbb
loopne
dec
jl
jno
lds
push
stos
add
decl
scas
inc
or
test
out
inc
cmpsl
scas
ret
das
push
mov
int
aaa
std
decl
mov
lods
xor
movsl
sahf
sbb
call
jge
movsl
pop
jo
add
mov
sbb
add
mov
xor
mov
jge
cmp
pushf
push
imul
ja
cld
out
add
mov
mov
cmp
adc
call
dec
shll
cwtl
popf
cli
push
cltd
insl
jle
adc
cmp
add
push
dec
inc
btr
xchg
popf
call
add
push
es
leave
out
stc
inc
pusha
inc
push
scas
inc
and
sbb
dec
call
popa
popa
movsb
and
sub
pushf
movsb
js
aas
cmp
lahf
xchg
movsl
add
decl
loopne
enter
lds
dec
xor
movsl
bound
adc
popf
movsb
addl
pop
jmp
pop
loopne
test
sbb
cld
xchg
push
jmp
test
xor
daa
sti
out
scas
scas
push
test
insl
call
sbb
sub
sbb
decl
loope
pop
cmc
cmovno
add
pop
mov
int3
fstps
sub
jl
lcall
sbb
dec
mov
lea
arpl
mov
imul
frstor
add
lret
push
cmc
push
pop
das
push
lahf
push
push
cmp
or
iret
and
or
jbe
xlat
or
lods
pop
mov
lret
cmpsb
xor
push
jl
in
stc
dec
lret
push
sub
or
mov
mov
ss
clc
rorl
cmp
dec
push
mov
stos
adc
stos
adc
lea
fnstenv
icebp
mov
xor
mov
mov
call
mov
pop
adc
sbb
cmp
data16
ficoml
inc
push
das
mov
cld
loopne
push
adc
cmp
mov
mov
xchg
fldcw
push
and
push
pop
or
jns
std
sub
hlt
rolb
push
xchg
inc
dec
jae
jns
cmp
nopl
fildll
or
insl
adc
mov
adc
das
and
xor
adc
pop
jg
xor
les
call
mov
imul
scas
mov
test
movsl
scas
incl
push
lea
test
in
sub
test
clc
fstps
lcall
ja
mov
add
aam
shll
jmp
lods
cwtl
push
xchg
sub
incl
xchg
push
andb
pusha
cmp
add
jge
jnp
stos
xlat
add
and
jg
lcall
mov
lret
movb
mov
rcl
mov
jecxz
inc
cmp
mov
loop
lret
add
pusha
and
cmp
mov
lcall
mov
pusha
mov
or
cld
sbb
ds
loop
push
xchg
mov
testb
cltd
sbb
add
frstor
inc
push
into
incl
loopne
jmp
cmc
xchg
push
push
aas
ljmp
div
jb
jae
hlt
sahf
sbb
das
cli
adc
inc
shrb
or
pushl
testb
repz
fwait
mov
stc
or
in
pop
mov
ljmp
mov
cmp
divl
and
mov
xor
and
stos
incb
pop
pop
fsubr
mov
adc
push
sbbb
mov
ljmp
sub
insl
mov
mov
adc
or
mov
mov
mov
aaa
std
incl
lret
int3
stos
mov
cmp
jp
dec
xor
les
adc
stos
call
jmp
xchg
aaa
adcb
jae
mov
inc
data16
lcall
fcomps
cmp
std
in
add
into
mov
pop
lods
pop
nop
jmp
jge
decl
int3
les
xor
sar
mov
jge
imul
mov
fcomps
std
jmp
and
lea
in
jecxz
loop
ja
mov
call
cmp
xchg
lcall
lcall
push
test
mov
add
or
and
ret
pop
pmaddwd
call
orl
jg
imul
outsl
mov
sub
ret
add
pop
lock
in
add
add
cmp
inc
mov
fstp
sarl
arpl
pop
jae
cmp
loope
in
fs
or
fldt
inc
in
inc
jge
push
sbb
xchg
clc
mov
jmp
xlat
mov
fwait
cwtl
leave
roll
pop
jle
dec
mov
mov
out
mov
cld
mov
jo
fyl2xp1
inc
adc
xchg
and
sbb
iret
addb
stos
fsub
rcrb
cmpsb
or
test
add
push
mov
fsubl
ds
leave
iret
mov
cld
push
lods
nop
and
push
bound
test
mov
mov
add
jmp
popa
pushf
sub
adc
xlat
mov
fidivrs
mov
xchg
or
pop
dec
fldcw
movsl
and
dec
mov
push
lock
or
shlb
mov
add
mov
cmp
pop
lcall
inc
mov
rorb
xchg
ss
into
lret
pop
frstor
je
cltd
cmp
pop
fs
mov
sahf
add
jmp
xor
jl
push
lea
or
cltd
mov
jmp
test
orl
mov
lcall
cmp
leave
jmp
jmp
cmp
add
pop
dec
popf
xor
dec
mov
jmp
aam
sbb
adc
ja
cmp
or
addr16
in
je
mov
pop
sub
nop
and
outsb
lahf
outsl
loopne
mov
sbb
or
test
lods
subl
xchg
dec
xor
inc
pop
ljmp
pop
pusha
aaa
dec
aam
add
and
or
mov
or
jl
into
xchg
and
jmp
sarb
repnz
or
ja
sbbl
jae
or
cli
incl
mov
pop
xchg
cmp
xchg
movsl
cmp
sbb
ret
mov
lcall
ja
stos
movsl
cwtl
add
dec
sub
add
mov
int
lods
addr16
in
mov
xor
std
dec
dec
shll
loopne
push
roll
mov
mov
test
orw
call
push
xchg
sti
sub
int
inc
sub
fldl
cmp
decl
dec
cld
sbbb
sub
add
add
mov
pop
std
mov
out
lods
xor
ljmp
loopne
bound
mov
faddl
cmp
push
push
pop
push
push
leave
push
push
adcl
add
push
push
push
ljmp
adc
mov
xchg
mov
out
mov
mov
fldcw
and
js
jmp
jno
ja
pop
mov
jo
push
mov
out
frstor
fs
stos
fidivs
mov
jp
xchg
sub
xlat
faddl
into
xchg
add
loopne
notl
aas
xchg
sub
fcomip
stc
add
movsb
cld
int3
out
mov
sbb
jp
ljmp
call
mov
enter
cld
xchg
and
cmpsb
repnz
pop
sbb
push
sub
loope
out
pop
cmp
lods
xchg
clc
pop
icebp
repz
lods
mov
pop
pop
insl
divb
pop
jae
push
sub
push
or
pop
adc
jmp
push
xchg
dec
adcb
or
xchg
loope
mov
bound
sarl
mov
decl
jo
cmp
call
jge
mov
stos
or
xchg
push
inc
cmp
lods
ljmp
ss
sbb
fld
jne
out
xchg
cmp
leave
mov
incl
mov
pop
out
mov
dec
call
push
pop
and
mov
lcall
ja
and
sub
or
xchg
js
movsb
pusha
enter
ljmp
cmpsl
mov
js
pop
pop
jmp
xor
inc
in
adc
ret
adc
cli
pop
cmp
and
pop
addr16
stos
scas
inc
test
push
sub
bound
adc
or
fsubrp
and
icebp
mov
dec
inc
or
and
repz
mov
aas
fsubs
fnsave
sbb
mov
mov
and
call
loopne
dec
sub
pop
pop
mov
inc
sub
loope
pop
ljmp
sbb
movl
pop
sbbb
lcall
popf
or
mov
sub
push
jb
mul
clc
scas
or
inc
out
add
sbb
mov
push
mov
ljmp
repz
stc
ss
jle
cld
test
aaa
mov
jp
and
jnp
ds
xchg
mov
and
adc
jmp
repz
fsubr
pop
leave
pop
mov
pop
and
xor
push
cltd
mov
jmp
outsl
pop
maxps
mov
adc
in
cmp
cmp
mov
clc
int
jno
xor
add
push
push
ds
cmc
mov
xor
pop
push
or
or
icebp
jo
sbb
je
call
lea
cltd
aas
or
fwait
adc
mov
jo
movsb
and
xor
fisttps
dec
sub
jp
mov
push
pop
mov
or
fisubrl
fsubl
testb
mov
push
jge
push
cwtl
imul
in
incl
lret
shrb
xor
testl
xor
sbb
add
in
insb
or
outsb
aad
int3
dec
fsubs
dec
mov
push
lret
or
sahf
mov
out
jne
pop
adc
cld
cmpsl
push
mov
jl
pop
stos
cmp
in
outsb
adc
jp
jae
push
int3
lret
decl
push
ds
xor
and
adc
int
push
and
cmpsl
jne
call
ljmp
cmpsb
in
xor
popl
imul
push
test
fwait
sbb
popa
outsl
out
test
decl
sbb
pop
mov
ret
mov
sbb
js
lahf
cmp
call
mov
imul
enter
mov
inc
xor
cld
jns
mov
decl
into
repz
mov
das
popa
mov
fists
pop
mov
popa
in
mov
sub
add
pushf
push
repz
cld
xchg
or
inc
xchg
scas
bound
fcmovne
imul
xchg
xor
cmpl
aam
pushl
out
je
sbb
mov
pop
int
rorb
sar
mov
sahf
xchg
add
out
pop
pop
ret
ret
scas
mov
call
mov
and
mov
bound
imulb
imul
stos
push
adc
incl
fdivp
mov
jp
movsl
add
xor
sub
fdivs
add
sbb
mov
out
pop
pop
pop
stc
adc
xchg
iret
cs
adc
and
dec
inc
sbb
scas
lret
outsb
addr16
in
dec
imul
push
and
fisttps
in
add
call
test
sbb
rorl
mov
jle
call
xchg
cmp
mov
fdivs
lret
mul
call
cmp
and
mov
mov
mov
mull
lods
dec
pop
popf
adc
ljmp
mov
ds
ficomps
xor
pop
cmp
in
andl
pop
or
std
push
inc
sbb
mov
addr16
adc
jmp
test
sbb
in
test
xchg
lret
data16
xchg
decb
pushl
dec
sahf
push
nop
loopne
jge
jno
stos
loopne
jmp
ret
fucomip
ret
inc
outsl
jns
and
inc
pop
jmp
push
shll
in
xor
mov
mov
pop
fisttpl
xlat
mov
mov
incl
hlt
shl
aad
addr16
pushf
in
sub
stos
sbbl
sub
adc
jne
lcall
loopne
or
mov
mov
lcall
clc
inc
ljmp
xor
scas
xchg
fsub
dec
or
jg
mov
arpl
lcall
push
std
cmpsb
lret
and
adc
jmp
jb
adc
lcall
xor
pop
loopne
inc
enter
icebp
sub
stos
xor
xchg
mov
mov
std
icebp
hlt
and
pushl
sbb
js
adc
aad
pushf
sbb
mov
sbb
xor
mov
call
mov
push
jg
mov
mov
mov
arpl
xchg
repnz
adc
mov
test
call
pusha
cli
lods
scas
pop
lcall
dec
dec
jmp
push
clc
call
push
dec
je
iret
sub
dec
push
xor
test
outsb
dec
movsl
sti
cmpsb
sti
dec
mov
aam
call
shll
mov
pop
test
popf
mov
pusha
lock
es
ljmp
dec
add
gs
in
cmp
inc
call
mov
jmp
std
ficoml
pop
rcl
out
or
lcall
leave
ret
inc
sbb
adcl
sub
flds
sub
cmp
mulb
jns
out
orb
push
mov
sbb
fidivs
jge
jp
ljmp
addl
xchg
jge
mov
adc
scas
scas
add
insl
dec
add
popa
lret
jmp
loope
movsl
mov
insl
jae
aam
add
lock
cmpsl
stos
paddusb
dec
xor
std
lcall
add
in
inc
adc
inc
pusha
mov
shll
xchg
jl
pop
add
clc
call
sbb
icebp
cmp
and
sbb
cwtl
fwait
xchg
les
inc
int3
xchg
cmpsl
enter
jne
pop
mov
aam
cmpsl
pop
mov
inc
sub
sub
lcall
ret
fld
xor
clc
std
ja
daa
pop
or
nop
cmp
dec
aaa
jp
movsb
call
outsb
pop
dec
jnp
pop
icebp
test
sti
mov
aam
lcall
jmp
je
lahf
adc
or
cltd
ret
dec
xchg
mov
mov
lret
sbb
insb
xor
jns
out
pop
and
jae
xchg
mov
stos
dec
inc
call
ja
fistps
push
maxps
aad
movsb
or
sti
push
xchg
push
push
mov
or
decl
movsl
cmc
andb
add
add
xchg
pop
rcrl
das
rorb
add
sbb
call
fsubrl
pop
shlb
and
mov
sub
shrl
incl
inc
adc
lcall
mov
adc
mov
and
cmp
cmpsb
aaa
fimuls
push
imul
sbb
dec
iret
adc
sarb
ljmp
jge
and
pushf
stos
mov
mov
xor
leave
out
xor
mov
xchg
push
inc
sar
std
dec
in
and
mov
das
mov
enter
ret
inc
xchg
sbb
lea
xlat
dec
dec
fs
stos
xchg
rcll
or
push
or
clc
incl
pop
pop
xchg
test
xlat
mov
enter
aam
nop
hlt
inc
push
lcall
add
mov
popa
mov
stc
shlb
pop
jp
mov
ljmp
cli
call
xor
or
xchg
push
movsl
stos
xor
push
pusha
mov
fmull
test
pop
scas
loopne
addr16
pusha
stos
inc
xchg
adc
scas
push
lods
mov
test
push
cld
dec
xor
push
add
or
arpl
adc
push
inc
das
push
mov
inc
pop
cmp
adc
call
adc
insl
xchg
jmp
xchg
xor
add
andb
mov
loopne
sbb
push
inc
arpl
cmp
mov
in
fsubs
mov
sub
insb
in
arpl
movsl
mov
mov
fisubrl
cltd
pop
inc
sti
aad
notl
mov
popf
jle
or
and
cld
lcall
sar
std
jge
daa
out
push
xlat
sbb
das
aad
jg
push
ret
push
test
repz
mov
test
add
sub
and
incl
bound
mov
xor
loope
sub
push
cmc
lock
cs
pushl
repnz
mov
loope
xchg
mov
ja
pushl
or
mov
imul
das
adc
and
inc
addr16
outsl
lcall
ret
mov
mov
int
pushf
xchg
mov
movsb
xor
cmc
shl
adc
pushl
or
pop
sub
lods
dec
cmp
fsubrl
mov
inc
xor
sbb
push
dec
mov
mov
cmp
movsb
pop
sar
push
popf
repz
sbb
aas
cltd
adc
loope
aam
xchg
test
pusha
mov
ljmp
push
fldl
imul
add
xchg
shrl
test
jno
push
pop
das
cld
call
popl
loope
jp
jl
or
xchg
bound
pop
cmc
jae
into
fistpl
call
push
clc
adc
sbb
mov
xor
jp
push
or
inc
adc
ud0
ljmp
roll
cmp
in
mov
mov
inc
cmc
lock
mov
mov
incl
scas
or
shll
pop
push
sar
gs
popa
xchg
stos
mov
xchg
in
cmp
fwait
push
std
adc
mov
mov
loop
sbb
mov
scas
leave
subl
sbb
sbbb
enter
push
jbe
mov
xchg
fsubr
dec
jmp
add
dec
cmp
sub
jl
inc
int3
out
into
subb
and
rclb
mov
jnp
lcall
jno
cwtl
xchg
sub
push
cld
sti
push
sahf
inc
and
incl
stc
mov
daa
in
cmp
mov
aad
lcall
mov
mov
sub
cmp
and
pop
adc
and
xor
adc
fimull
mov
jg
dec
mov
mov
test
push
ret
mov
mov
std
int3
decl
push
shlb
out
jno
int3
mov
push
shr
clc
lcall
pop
neg
mov
inc
aaa
out
loope
loope
sarb
les
icebp
rorb
dec
loop
push
add
and
lcall
pop
gs
push
mov
test
adc
enter
pusha
cmpsb
lret
inc
aas
inc
into
ficoml
push
lret
lcall
out
popa
stc
sbb
outsb
ljmp
mov
sub
ljmp
icebp
pushl
adc
xchg
dec
icebp
in
cmc
daa
rcrb
aam
lret
test
lcall
das
shl
addr16
fstl
xor
inc
loope
adc
mov
pop
cmpsl
jbe
je
clc
call
rcpps
daa
fistl
cmpsl
add
inc
xor
nop
jmp
push
rcrb
sub
loop
aaa
scas
movsb
mov
popf
test
jne
popf
dec
jnp
sub
mov
lret
mov
aam
in
mov
in
pop
push
adc
sub
xor
lret
mov
mov
lea
sbb
jnp
cmp
cmc
inc
mov
cmp
push
clc
incl
xchg
out
pop
gs
push
lea
sub
mov
mov
jg
outsl
ljmp
adc
pop
movsl
repnz
out
les
pop
andl
mov
clc
adc
push
adc
out
aaa
hlt
lods
push
mov
paddsw
xchg
mov
jne
and
pop
xor
jnp
add
lock
sub
outsl
lods
inc
jmpw
sub
lcall
into
cmp
cwtl
inc
push
lret
jp
inc
test
sahf
jns
scas
pop
in
in
movsl
nop
pop
lcall
jmp
jae
icebp
jo
mov
aaa
shll
or
ljmp
sbb
and
iret
sbb
shl
roll
test
outsl
dec
mov
in
sbb
inc
scas
cmp
push
add
jg
int3
test
pop
pop
scas
fdivrl
cmp
fidivs
xchg
into
mov
mov
mov
push
aaa
and
push
sarb
adc
lcall
mov
rcrb
add
loope
inc
adc
jae
faddp
mov
adc
aad
fcomip
jp
mov
xchg
push
xor
ret
push
add
test
idiv
ljmp
outsb
mov
cli
xchg
mov
scas
xor
cmp
xor
xlat
mov
lods
lret
pop
int
pop
mov
outsl
incl
add
push
jns
es
adc
divb
xchg
pop
fwait
jg
lods
pushl
and
add
aad
pop
push
incl
xchg
in
jp
push
add
dec
cmp
lock
add
out
lea
pop
sub
cmp
mov
jg
lcall
lcall
hlt
sub
add
dec
jp
cld
dec
sub
dec
pushl
dec
cs
ljmp
test
out
dec
subb
mov
arpl
pushf
jp
ja
andb
jae
jg
mov
jne
add
lock
insb
and
xor
loope
lea
or
xor
incl
adc
dec
dec
in
xchg
mov
fwait
add
cmpsl
push
lcall
and
test
sbb
fldcw
lock
push
and
fiadds
aaa
sub
mov
sbb
xor
or
and
adc
mov
stc
cmc
mov
jmp
jl
cmp
cmp
lcall
sti
mov
push
andl
xlat
mov
jl
add
test
push
out
fdivrl
xor
mov
stc
fmull
movsl
repz
leave
int
aas
ret
mov
mov
enter
push
mov
into
fnstenv
add
test
or
jg
scas
push
pop
push
imul
outsl
pushf
xchg
push
push
jne
mov
mov
cli
arpl
cmp
push
es
call
push
clc
in
subb
xchg
out
mov
rep
sbbl
lods
ljmp
lahf
adc
adc
adc
sub
sub
pushl
and
dec
mov
and
xor
sbb
xor
add
in
cli
pop
adc
decl
arpl
xlat
jo
push
setle
mov
pop
cmp
aaa
adc
mov
inc
pop
sub
je
mov
xlat
cmp
lods
nop
dec
dec
add
jmp
xchg
mov
cwtl
mov
mov
je
test
lock
fbstp
push
pop
inc
je
repz
xor
or
stos
or
incl
test
sbb
movsl
pop
scas
mov
jmp
sahf
ror
xor
scas
push
out
sahf
mov
pop
mov
shrb
loope
jns
cs
xchg
int3
cmp
ss
incl
jge
aaa
mov
leave
and
sbb
repz
iret
mov
sub
lcall
sub
sub
cli
mov
je
push
test
subl
test
or
sub
cmp
mov
jle
dec
pop
mov
and
dec
lock
pop
roll
xor
jnp
jecxz
jg
xor
scas
cli
lcall
sbb
sahf
and
iret
adc
fdivl
bnd
adc
call
repz
pop
xchg
inc
jnp
lahf
mov
mov
jo
outsb
in
xor
mov
mov
push
mov
cmpsb
lcall
mov
shrl
loope
jle
bsf
pop
clc
aam
decl
pop
repnz
movsb
in
xlat
sbb
mov
and
ja
fnstenv
mov
push
jmp
pop
or
pushl
decb
fidivl
popf
rorl
stos
xor
jne
inc
js
mov
sti
fsub
test
sbb
push
hlt
jmp
push
lds
dec
mov
jns
mov
xor
pushl
test
and
insb
xchg
cmp
push
mov
or
jge
xor
pop
adc
jecxz
ljmp
fnstsw
shl
aas
rorb
ljmp
inc
pop
das
stos
dec
insb
aad
adc
rolb
jg
pop
or
push
cwtl
add
decl
cltd
dec
push
rorb
or
jg
lods
sbb
movsl
adc
push
js
xchg
out
adc
stos
dec
arpl
scas
pushl
mov
adc
jmp
ret
mul
mov
xchg
lods
dec
sub
sbbl
popf
mov
push
adc
xor
orb
mov
mov
mov
int
pop
xchg
aas
push
js
repz
cmp
sbb
int
cmp
inc
dec
enter
adc
jo
sbb
ljmp
int
and
sbb
mov
jg
adc
add
out
cmpl
cwtl
pop
jecxz
stc
mov
in
fninit
sub
pop
std
and
push
or
mov
fs
inc
sar
decl
push
push
cwtl
inc
js
mov
mov
out
xchg
jg
in
inc
jo
pop
jbe
popf
inc
push
sar
xor
dec
push
ret
addr16
adc
push
mov
stos
in
mov
dec
jae
or
mov
pushf
notb
mov
mov
dec
cmovo
ret
or
push
repz
pop
cmp
pop
cmc
decl
lock
or
pop
and
mov
loope
pop
jecxz
mov
cmp
les
push
in
icebp
or
stc
sbb
add
out
pop
pop
push
inc
dec
mov
jmp
push
dec
ss
pusha
sti
cmp
xchg
insb
and
pusha
inc
pushl
ror
ret
mov
xchg
int
mov
out
lods
dec
add
jg
and
cmp
call
pop
les
sub
cmp
stos
mov
mov
das
xchg
push
jne
pop
mov
jno
xchg
decl
mov
pop
std
imul
xor
pushw
pusha
andb
jnp
push
lcall
pop
add
iret
aad
jp
sub
ret
punpckhdq
fs
mov
inc
dec
push
stos
xor
out
cmp
jo
push
imul
mov
dec
lcall
incl
lcall
dec
inc
jmp
pop
fstl
jmp
adc
push
int3
hlt
stc
inc
mov
push
std
nop
or
mov
cmp
cmpsb
jmp
sub
out
rorl
nop
insb
sahf
inc
and
aad
ljmp
clc
ljmp
push
dec
dec
fwait
or
popf
mov
jne
lcall
insl
std
das
dec
ja
adc
sti
cmpsl
cld
mov
xchg
nop
and
pop
or
mov
inc
hlt
je
les
fisubs
jg
ljmp
ss
add
lock
icebp
inc
push
out
inc
pusha
add
jg
lcall
sti
sbb
sarl
and
mov
mov
fisubs
in
xor
and
sbb
fadds
mov
push
pop
std
mov
mov
push
scas
dec
jne
sub
negb
pop
cld
xchg
sub
and
call
cwtl
add
popa
push
in
dec
xlat
cmp
xchg
xor
xchg
es
call
dec
mov
icebp
dec
rcrb
gs
ret
cmp
jno
sbb
pop
cltd
jmp
jbe
mov
mov
int
and
jbe
sbb
dec
inc
aas
mov
pop
rcrb
sbb
lcall
sub
out
fcomps
jne
call
cmp
sbb
lret
ss
scas
push
popa
dec
mov
in
out
mov
mov
iret
push
pop
mov
jmp
push
aam
jp
shlb
mov
lret
inc
mov
mov
inc
incl
dec
repnz
in
fcomip
xchg
mov
pop
push
inc
mov
scas
jmp
lods
rclb
pop
incl
stos
shlb
inc
jne
scas
iret
push
addr16
dec
fistpll
cmp
ret
cwtl
ret
incl
fisttps
loopne
mov
push
dec
mov
ljmp
add
jecxz
sub
dec
adcl
cli
add
and
xor
ljmp
std
xchg
push
jb
lock
xchg
testl
xlat
pop
clc
mov
rol
or
xchg
pop
pop
dec
and
clc
daa
xor
test
call
jmp
push
aad
and
outsb
dec
sbb
or
inc
mull
add
outsl
clc
ljmp
data16
daa
xchg
push
test
insl
popl
sub
dec
xor
adc
add
test
pop
inc
mov
dec
aam
add
push
add
rcrl
add
or
stos
stc
loop
lcall
arpl
add
decl
inc
xchg
add
or
and
pop
ljmp
jnp
dec
ss
pop
call
sbb
and
sbb
or
test
jnp
scas
test
fbstp
pop
jge
mov
lahf
mov
jo
jmp
cmp
decl
inc
xchg
cmp
xor
cwtl
outsb
cld
or
mov
incl
xchg
std
push
sbb
scas
xor
cmpsl
cli
insb
xchg
cmp
leave
sti
gs
sarb
mov
jmpw
inc
sbb
cs
push
repz
adc
sti
mov
adc
ljmp
clc
and
cmp
jle
lea
pop
jmp
cmp
ljmp
mov
sbb
xor
jne
dec
int
and
std
sbb
cli
in
push
xchg
xchg
lcall
test
es
imul
mov
push
mov
xlat
adc
inc
imul
sar
jmp
mov
rclb
jge
mov
cmpsb
add
push
in
ss
mov
jns
jne
les
xchg
sahf
ds
into
aaa
and
mov
incl
jnp
lods
push
xor
dec
mov
shr
cmp
pop
std
add
pushf
cmp
outsl
roll
cmc
adc
cs
nop
je
add
sub
out
cli
or
adc
movsb
nop
mov
add
ret
push
cmp
hlt
push
push
sub
decl
lahf
jae
sub
or
lret
into
mov
pop
jg
shll
or
enter
jmp
fcmovnb
pop
aad
or
jl
jns
mov
daa
jns
dec
leave
inc
pop
gs
aaa
pop
out
mov
clc
mov
jg
jmp
sub
nop
mov
push
mov
jae
mov
pop
lahf
jmp
pusha
lcall
mov
adc
sbb
mov
and
movsb
imul
loopne
aam
adc
jno
movsb
leave
mov
aaa
cmp
mov
in
cmc
cld
decl
loop
nop
mov
cmp
and
andl
cmp
int3
dec
in
jns
xchg
pop
arpl
out
push
jne
cmpl
clc
adc
roll
fcomip
mov
sbb
and
mov
iret
jnp
loop
insl
jl
roll
test
jmp
or
test
xchg
rcr
fdivrs
push
test
jnp
lds
negl
push
ds
lods
in
add
repnz
out
faddl
fisttps
add
xchg
fcomp
mov
fcompl
les
call
mov
rcr
xchg
mov
lahf
push
inc
mov
iret
cmp
mov
out
mov
jns
push
push
sub
push
jecxz
and
cmp
pop
xor
popa
test
add
add
and
lcall
insl
xchg
test
and
icebp
loop
int3
cwtl
ret
ljmp
lods
cmc
je
sub
xchg
daa
scas
push
jne
mov
aam
sub
incl
xchg
or
mov
lahf
add
mov
scas
inc
jp
pop
hlt
or
dec
sarb
dec
mov
push
mov
and
pushl
dec
out
imul
inc
inc
lret
sbb
xchg
sub
int
scas
sbb
sub
xchg
cmc
ljmp
cltd
mov
fnstenv
mov
out
or
std
ljmp
push
push
aaa
sbb
sub
pop
sbb
cmp
sbb
xor
jbe
xchg
or
ljmp
add
or
movsb
outsb
pop
mov
cmp
loopne
pop
add
xor
push
sub
xor
mov
and
push
push
xchg
icebp
les
or
adc
pop
sbb
mov
and
call
mov
scas
xchg
out
incl
jns
popf
inc
xchg
jl
das
jns,pn
mov
sbb
add
mulb
sar
pushl
loop
cmpsl
jns
mov
sbb
inc
push
rorl
mov
sarl
nop
aaa
or
lds
fidivrl
insl
shrl
or
lcall
jg
orb
arpl
pop
sbb
addr16
arpl
mov
mov
dec
orb
add
sub
sbb
movsl
xchg
jns
xlat
call
sbb
pop
popa
mov
jge
ljmp
mov
pop
test
and
icebp
daa
cld
decl
inc
aas
push
mov
je
ret
mov
sub
icebp
jb
ss
lret
jnp
in
xlat
mov
dec
push
and
push
and
cmpsb
mov
mov
lcall
pop
into
ret
xchg
jecxz
xchg
nop
mov
shll
rorb
mov
mov
fwait
fcomip
add
stc
lcall
inc
mov
sub
ret
pushl
imul
lret
adc
dec
mov
or
xlat
lods
xor
fxch
hlt
jg
xlat
or
mov
lds
test
shlb
iret
pop
xlat
enter
jg
inc
jno
jo
adc
mov
mov
pushf
aam
test
out
mov
call
rcrb
jo
notb
out
and
out
cmp
sub
or
cld
call
into
popa
cmpsl
arpl
test
add
clc
daa
nop
xor
call
inc
and
mov
pop
cli
pop
jmp
stos
pop
push
outsb
sbb
std
jne
jg
mov
push
test
mov
jmp
jecxz
jo
pop
adc
mov
loop
sahf
jmp
and
dec
nop
sti
outsb
add
mov
filds
sbb
fs
movsb
jne
mov
xchg
out
mov
push
ret
ficoml
fdivrl
cmp
jb
adc
mov
add
cmp
cmpsb
cmp
inc
xchg
lds
cld
pushl
std
jecxz
outsb
mov
jnp
aas
sbb
arpl
cmp
leave
jb
pop
fisttpl
ljmp
dec
mov
dec
std
ret
imul
ljmp
cld
sbb
ret
push
jmp
stos
popl
pushf
cmpsb
cli
mov
or
dec
and
test
xchg
lcall
dec
jbe
sbb
pop
das
divl
mov
fidivrs
subb
pop
dec
jle
ljmp
test
cmpsb
or
and
dec
sahf
aas
ror
lods
push
adc
push
outsl
out
xchg
imul
xor
out
xor
pop
or
mov
ljmp
xchg
cmp
sti
addb
int3
ss
popa
or
out
inc
scas
cmp
jo
decl
lock
loope
ud1
adc
test
loopne
call
aam
xchg
cmpsl
sti
lea
out
or
int3
add
sub
and
push
push
addr16
add
lock
dec
mov
xor
inc
cmc
lcall
fsubp
xor
loop
testl
inc
incl
dec
xor
cmpsb
adc
adc
loope
fstps
lock
pop
in
mov
adc
mov
ljmp
repz
test
push
sbb
adc
ret
rorl
cmp
call
and
outsb
idiv
cmp
mov
repz
lds
and
xor
call
enter
xchg
jp
in
xlat
fs
and
in
aam
mov
fidivs
clc
mov
bound
or
cmp
aas
int3
clc
call
push
pop
push
adc
scas
lret
popf
jae
faddl
lds
repz
ljmp
jb
sub
jle
push
adc
cmpl
jl
js
push
xchg
enter
pushl
into
cwtl
lcall
stc
cmp
xchg
fsub
repz
cld
std
adc
clc
mov
jl
jno
pushl
jbe
lea
popf
xorb
and
aam
jg
fcomip
push
rclb
mov
jnp
stos
loope
dec
inc
rol
inc
lods
jmp
je
jle
jp
fcmovnb
jle
lods
adc
insb
cmp
jg
push
in
je
mov
cld
sub
call
xchg
negb
or
push
and
mov
outsl
sbb
popl
xchg
mov
jg
shlb
mov
cmp
or
push
jmp
or
js
mov
pop
xorb
decl
xchg
lret
jae
out
xchg
jp
lock
xor
lock
push
dec
push
test
cs
inc
lock
scas
push
pop
or
subb
push
pop
out
add
pushl
sbb
mov
jbe
fwait
test
xor
imul
xchg
jl
pop
cmp
ljmp
xchg
or
mov
adc
add
in
scas
fnstenv
incl
inc
aam
popa
stos
movlps
pop
repz
in
mov
test
jmp
push
arpl
pop
inc
inc
in
lret
cwtl
cmc
mov
push
test
subl
std
incl
lea
outsb
mov
mov
cmpsb
and
stc
es
mov
jp
add
jl
mov
mov
or
ja
adc
xor
ret
ret
loopne
incl
sub
stos
movsl
mov
sub
outsb
cmp
insl
sahf
sbb
mov
mov
ljmp
pop
loopne
sub
out
xchg
aad
add
in
mov
cmp
inc
and
mov
mov
test
mov
into
fidivl
pop
dec
cmp
add
adc
add
mov
xchg
pop
aam
pop
inc
xlat
stc
aam
pusha
imul
call
js
inc
js
inc
jns
into
sub
shrl
test
bound
and
incl
jmp
sub
or
sahf
push
mov
lcall
incl
push
pop
in
daa
mov
aad
hlt
jne
mov
out
lret
cld
push
mov
mov
mov
pusha
sbb
lcall
mov
std
data16
out
cmp
jnp
mov
dec
lods
fcmovnu
sbb
jl
sarb
push
xchg
pushf
jne
xlat
movsl
hlt
xchg
test
cmp
gs
cwtl
loop
push
popa
and
jg
sti
cld
int
pushf
or
and
dec
mov
popa
sub
scas
mov
inc
pop
add
call
in
jae
iret
push
pop
lahf
into
mov
inc
icebp
mov
and
inc
xchg
in
outsl
rclb
std
popf
mov
sub
sti
ja
jae
jno
or
cli
movsb
mov
jge
push
lahf
pushf
nop
xor
xchg
sti
rol
push
push
push
loope
mov
pop
pop
adc
sub
mov
cmp
push
ljmp
sbb
cs
jae
cwtl
in
mov
mov
jns
out
movaps
or
cmp
xor
and
nop
add
daa
std
aad
ret
mov
dec
pop
aaa
shrb
dec
jg
adc
pop
out
shl
push
mov
push
push
test
je
loopne
call
stos
push
je
mov
jb
lea
cld
mov
orps
or
cmc
jmp
scas
negb
sub
mov
push
mov
sub
scas
and
ljmp
rol
jae
inc
xchg
mov
call
adc
jne
push
dec
popf
xor
push
js
or
jne
ret
dec
filds
adc
pop
mov
aaa
out
into
push
pop
mov
jp
jp
mov
jge
cli
inc
test
insl
jbe
arpl
xchg
push
dec
inc
pop
out
mov
jg
cmp
fnsave
aaa
es
xchg
cmpsb
sub
out
inc
aas
mov
fidivrs
lret
pop
icebp
outsl
aaa
inc
jns
push
mov
sbb
test
mov
pop
sarb
mov
jmp
jmp
adc
hlt
stos
xor
mov
mov
sahf
push
or
dec
in
sbb
sbb
or
aas
shrb
mov
push
jp
adc
mov
mov
incl
fnstenv
test
fidivl
and
jbe
outsb
sub
cmp
je
cli
and
imul
jbe
divl
mov
movsb
insb
roll
and
lock
jg
pop
icebp
lods
mov
inc
cmpsl
or
rcl
dec
xor
in
push
mov
pop
mov
aas
test
icebp
xor
shr
out
sub
dec
add
aaa
inc
icebp
ljmp
fidivrs
addr16
push
xor
loopne
out
inc
shlb
fadds
shll
addr16
pop
xor
enter
pop
pop
cmp
je
leave
mov
cmp
xor
sarb
mov
add
inc
pop
xlat
lret
call
call
mov
mov
incl
jp
outsb
xchg
incb
ss
mov
fcomps
push
clc
lcall
fstpt
jbe
mov
flds
les
pop
fs
cmp
test
pop
test
ret
inc
and
sbb
jae
inc
mov
aam
sysenter
and
pop
inc
push
mov
inc
cmp
data16
lcall
add
fsubrl
cmpsl
dec
push
sahf
lods
jbe
jecxz
out
sub
jg
inc
add
loop,pn
popa
jbe
in
inc
inc
mov
sbbl
jle
sub
xor
or
xchg
sbb
clc
jmp
arpl
aam
aas
in
mov
pushl
fisttpll
inc
hlt
pusha
loopne
push
add
jno
mov
push
mov
pmulhw
adc
mov
sub
int3
stos
rclb
mov
fwait
pop
imul
dec
inc
bound
repz
pop
pushf
cld
call
pop
in
or
outsl
pop
cltd
std
dec
test
out
jo
aad
or
fcomps
dec
addr16
out
clc
push
lock
pop
jmp
xor
adc
add
push
jmp
inc
sbb
test
jbe
call
xor
mov
mov
push
call
clc
cmp
mov
insl
cmpsb
out
adc
loop
cmp
mov
sbb
outsb
sbb
push
shlb
fcmove
scas
inc
push
push
test
aam
jp
push
lods
mov
fildl
fsubl
shrl
movsl
push
pop
jmp
fistpl
xchg
dec
lds
push
adc
sub
pop
adc
and
mov
rcrl
pop
rclb
push
cmpsl
pusha
adc
pushl
loopne
aaa
pushl
xchg
fldcw
pop
and
mov
ds
loopne
pushf
idiv
ljmp
sar
inc
push
adc
cmc
push
aad
adc
rcpps
xor
inc
lcall
out
push
mov
fwait
jecxz
lcall
pushf
notl
sbb
lods
jnp
jg
decl
jnp
shl
jbe
imull
movsb
out
sub
lret
ret
out
jmp
into
mov
xchg
mov
sbb
xor
mov
icebp
ret
scas
aad
sbb
in
je
inc
fdivr
jmp
les
dec
fwait
fs
js
lret
push
outsb
ret
fnstenv
xchg
sbb
pop
add
decl
cld
xchg
test
inc
inc
sub
jno
sbb
xchg
das
insl
sub
clc
call
mov
push
rep
cmc
cmp
insb
clc
add
mov
xor
adc
inc
int3
incl
insl
insl
int
mov
nop
push
jge
loop
leave
or
add
jns
call
xchg
xchg
adc
ljmp
fiadds
sbb
daa
dec
jne
xor
fcos
incl
loope
cmp
loop
adc
push
and
cld
xor
punpckhbw
add
fisttps
dec
iret
jle
or
loope
cmpsl
rolb
add
mov
pop
push
xor
pop
fcomip
fadds
inc
mov
push
jmp
test
ds
inc
imulb
pushl
loop
iret
or
pop
outsb
repnz
xor
ret
and
sub
sbb
inc
arpl
outsl
dec
gs
lret
loope
pop
call
mov
ret
loop
jg
jmp
mov
icebp
pop
decb
or
lea
lcall
cld
dec
pop
in
popa
mov
cmp
fldt
mov
call
inc
lds
and
fwait
call
push
cmp
sahf
jecxz
outsb
push
bound
int
adc
ljmp
dec
fwait
jge
ss
orb
test
movhps
pop
mov
and
repnz
ss
xchg
mov
insb
or
ja
pop
sub
fisubrs
jg
mov
lea
cmp
add
fcoml
popa
lcall
jp
adc
push
aas
ljmp
pop
and
subl
ja
cli
shlb
call
subl
mov
stos
sar
ljmp
outsb
jecxz
mov
dec
fwait
mov
dec
clc
mov
adc
test
es
or
imul
incl
insb
mov
jmp
or
or
popa
xor
pusha
outsl
test
pop
repz
jmp
leave
stc
xor
xchg
popa
and
and
inc
arpl
xor
pop
pop
mov
lcall
dec
data16
jge
scas
in
adc
mov
add
inc
rol
push
push
jbe
jnp
jecxz
and
lods
push
jo
cmp
lcall
insb
ret
icebp
sub
cmpsb
adc
xorl
addr16
mov
negl
mov
dec
add
mov
lahf
loope
and
shll
mov
scas
clc
and
arpl
push
jnp
and
das
push
inc
imul
sar
lcall
lret
push
mov
sti
pop
addr16
jnp
inc
cmp
sti
jb
sbb
sahf
repnz
push
jge
ror
add
push
int3
xchg
inc
incl
rorb
cmp
mov
xchg
or
daa
sbb
lods
mov
mov
pusha
sub
fs
mov
mov
mov
fcoms
push
pop
cmp
aaa
inc
repz
je
push
ds
mov
inc
fisttps
cli
je
rorl
rolb
lods
sub
test
decl
int3
xchg
xor
mov
out
shll
jmp
out
js
jg
cmp
cmp
jg
sub
inc
ds
and
ja
shlb
call
out
popf
in
pop
add
mov
xor
cmp
mov
lcall
jecxz
xchg
xchg
mov
pop
mov
sub
add
mov
lcall
xor
filds
mov
or
sbb
ja
and
mov
mov
mov
arpl
push
fsubrl
sub
sbb
xor
ljmp
push
sub
mov
fistps
sub
add
sahf
decl
adc
inc
dec
xchg
pop
push
insb
jo
mov
cmp
incl
mov
divb
cmp
and
and
jnp
call
insl
mov
jle
clc
jmp
jo
jns
cmpsl
jns
sub
inc
insb
or
ret
shll
cmp
jmp
and
xor
out
sbb
test
or
adc
ljmp
adc
je
or
imul
adcl
jle
ret
push
sbb
les
xadd
inc
stos
shrl
pop
push
add
jbe
gs
dec
and
push
rcll
or
add
cli
mov
dec
adc
mov
mov
pushl
fsts
sbb
pop
jnp
sar
jmp
movsb
fstpl
movb
pop
xchg
rcll
and
sbb
inc
popa
inc
or
dec
stos
movsb
xor
sarb
or
mov
adc
lcall
push
sbb
cwtl
clc
dec
xrelease
test
lock
push
ljmp
lcall
cmp
pmaxub
out
lods
xor
mov
add
int3
popa
loope
repnz
or
dec
lock
inc
inc
jmp
test
iret
clc
inc
push
mov
call
sub
int
lcall
dec
repz
adc
jnp
push
mov
insb
mov
pop
fists
push
pop
or
cs
mov
add
push
and
jne
shll
mov
popf
js
adc
decl
imul
mov
or
out
push
cld
inc
cmp
pop
aam
call
jg
shr
inc
pusha
pop
jo
or
test
hlt
jb,pt
mov
out
faddl
lcall
jmp
sbb
addr16
or
sub
sub
mov
push
pop
cs
int3
mov
jmp
mov
call
adc
ret
xor
xchg
fdivrl
test
movsl
jb
inc
movd
mov
je
gs
xchg
mov
loope
jl
fsubp
and
loope
jns
push
or
add
shl
jmp
lea
lret
pop
andb
xchg
jl
jecxz
sti
cmp
jecxz
call
mov
insl
push
jmp
ljmp
mov
or
es
dec
inc
mov
in
incl
stos
jmp
adc
movsl
jp
and
or
movl
sbb
push
ljmp
cmp
sti
repnz
push
das
loopne
xchg
mov
call
movb
popa
iret
into
daa
loopne
icebp
or
mov
jnp
mov
iret
dec
pushl
sub
ficomps
push
and
inc
test
mov
popa
jne
lcall
mov
mov
or
adc
mov
lret
xchg
fs
and
sahf
push
out
clc
pushl
pop
pop
test
jl
cs
scas
mov
push
loope
decl
cmc
rcll
mov
cmp
ss
outsl
incb
jmp
shld
xor
jecxz
test
pop
aaa
cmp
dec
mov
test
into
adc
addl
int
out
mov
sbb
or
aam
mov
dec
std
ljmp
stos
clc
xchg
fdivrl
fiaddl
mov
je
lods
push
insb
sub
adc
jg
jo
pop
dec
or
mov
scas
sub
sti
jmp
bound
xchg
mov
xorb
inc
loopne
mov
test
inc
or
xchg
cmpsl
je
das
push
push
jp
mov
decl
stos
lahf
insl
movsb
sbb
rol
lds
shl
mov
sbb
adc
inc
in
test
pushl
clc
sub
lods
inc
push
mov
mov
inc
int
inc
or
jne
jmp
mov
xchg
jmp
pop
fsubrs
divl
xor
subb
test
ljmp
jge
cmp
adc
loopne
les
leave
mov
jmp
mov
add
sub
scas
in
mov
into
bnd
jmp
xchg
jg
subl
int3
mov
dec
cmp
popf
idiv
or
test
jns
and
cmp
xchg
test
mov
cmp
push
jge
leave
lcall
push
cs
push
test
inc
cmp
sti
ror
aad
ds
std
sbb
sar
and
xchg
repz
sbb
push
arpl
daa
cwtl
push
lods
stc
in
mov
adc
xor
out
cmpsb
gs
mov
lret
xchg
mov
call
push
mov
outsl
jle
hlt
inc
inc
mov
iret
fiadds
test
mov
adc
fcomip
movsb
enter
mov
xchg
pop
cmc
pop
cmp
pop
dec
xor
fwait
call
call
mov
mov
cmc
rcr
std
push
ss
push
stc
and
xor
xchg
sbb
mov
mov
xchg
cld
cmpsl
or
cmp
lret
incl
dec
inc
sbbl
repz
pop
cmp
mov
push
mov
inc
ljmp
mov
in
cmc
xor
imulb
lret
fstpt
mulb
je
sub
cmp
xor
xchg
jecxz
call
mov
inc
mov
jb
roll
leave
mov
ljmp
lret
out
push
or
cs
call
pop
sub
dec
mov
or
cwtl
ljmp
or
adc
inc
aad
mov
sti
cmp
cmp
outsb
sub
aad
and
stos
mov
jl
fistl
pushl
cmc
loop
sbb
mov
push
push
sub
mov
jecxz
test
xchg
sub
lock
jb
ss
and
sarb
popa
mov
jmp
cli
shlb
add
cmpsb
mov
jo
decl
cmp
loopne
lret
inc
ss
jmp
scas
fucomip
nop
mov
into
mov
pop
add
aam
dec
sbb
daa
arpl
and
pop
je
jp
sbb
ja
inc
mov
dec
sub
push
test
addr16
incl
mov
mov
outsl
mov
pusha
push
add
not
add
cwtl
test
mov
ljmp
mov
xchg
inc
call
cmpsb
out
in
outsl
and
in
or
int
insb
stos
incl
in
arpl
adc
mov
mov
adc
or
lcall
mov
jmp
pop
aas
sbb
xor
add
push
mov
fwait
xor
add
dec
mov
mov
jge
xchg
cmp
addr16
or
sahf
pop
push
jb
add
call
xchg
jae
lea
add
xor
aam
shrl
aad
sti
shlb
push
leave
jg
into
sbb
push
sbb
cli
aaa
xchg
xor
mov
adc
lods
or
les
add
inc
fiaddl
lahf
and
stc
xor
push
xchg
cmpsb
xchg
lea
call
xor
push
or
mov
or
sub
pop
xchg
push
dec
xchg
inc
imulb
xor
jnp
jge
xor
decl
jl
xchg
fwait
or
mov
or
push
or
add
or
xchg
push
out
dec
movsl
daa
push
sbb
push
ljmp
dec
or
pop
add
inc
stc
mov
or
cltd
add
smsw
jp
push
aas
inc
jno
jl
mov
mov
or
xchg
adc
pop
ljmp
mov
xchg
arpl
inc
jp
hlt
xchg
pushf
scas
lcall
sbbl
mov
push
fidivrs
push
loope
clc
push
les
add
ret
movsb
movsb
dec
movsl
adc
jmp
leave
insb
cmpsb
out
sub
xorl
mov
mov
ret
movsl
ret
mov
aas
decl
lods
mov
sub
loope
addr16
xor
or
in
pop
push
mov
pushl
clc
jno
out
xchg
ret
scas
xor
jae
cld
decl
js
sahf
nop
movsl
adc
jb
pop
mov
inc
test
insb
jp
aas
mov
sbb
int
cmp
sbb
movsl
movsb
pop
and
pushf
sar
ljmp
test
dec
imul
in
je
jbe
push
jle
adc
rol
in
add
fbstp
dec
add
fnsave
xor
mov
ret
xchg
cmp
mov
call
push
add
js
mov
xor
push
aas
sti
push
outsl
loop
mov
fstl
movsl
jb
loope
cmc
das
cli
ljmp
int3
scas
outsb
push
cltd
xchg
fmulp
sbb
sar
lret
int
push
xchg
divb
orl
icebp
xor
lods
aas
mov
cmp
or
add
scas
ljmp
stc
jae
or
xchg
scas
lds
cmc
pop
stos
cwtl
movsl
mov
sbb
repnz
lock
filds
outsl
or
out
mov
push
out
movsb
in
jl
ds
push
or
sbb
mov
xchg
add
dec
xlat
and
xlat
ljmp
xor
push
shll
pop
in
jns
in
adc
test
nop
xchg
mov
in
and
mov
mov
add
cmpsb
stc
outsb
lea
lea
lahf
dec
in
lock
pusha
lock
jp
into
push
mov
and
decl
xchg
in
into
in
arpl
pop
inc
inc
movsb
mov
idiv
cmpsb
arpl
inc
adc
data16
cmp
pop
cmp
inc
pop
ror
stos
xchg
mov
jno
push
xor
gs
js
mov
jno
fcmovnu
fldl
in
mov
sbb
mov
lock
and
add
or
or
stos
rol
sub
sub
lock
fisttps
cmc
or
fcomps
sub
jg
push
inc
dec
pop
add
loopne
std
call
in
loope
inc
outsb
cmp
cld
push
pop
pop
mov
pop
mov
std
decl
lret
mov
dec
movsl
and
fdivrp
cwtl
insl
inc
mov
fadd
xor
adc
push
xor
test
ficoml
cmp
sub
lcall
loop
cmp
int3
cld
sti
adc
sub
int
xchg
cmp
pusha
mov
jg
ljmp
dec
pop
xorb
pop
fs
xor
cmp
push
cltd
dec
popf
push
out
inc
mov
repz
int
subl
cmp
cmp
jno
push
in
jl
xchg
ss
inc
and
sarb
sbb
mov
jg
fdivrs
ja
jnp
ja
sbb
insl
pop
xchg
or
xchg
xchg
pop
call
add
insb
cmp
inc
aam
cmp
xor
int3
xor
ljmp
xchg
jne
mov
hlt
cli
lds
insl
shrb
incl
dec
ror
push
dec
nopl
cmp
mov
outsb
roll
insb
das
mov
ljmp
les
mov
xchg
cmp
mov
inc
dec
add
subb
pushl
adc
adc
out
nop
stos
jle
dec
adc
das
dec
mov
decl
and
in
lods
enter
movsb
adc
or
sbb
add
push
pop
mov
sub
pop
xchg
push
iret
adc
cmp
mov
dec
test
int3
sub
mov
add
loopne
lock
addr16
xchg
movsb
dec
adc
push
mov
adc
lret
inc
mov
js
cmp
mov
fidivl
sbbb
lcall
fildll
fsubs
push
imul
push
fstpt
jle
mov
and
sub
hlt
mov
fisubl
adc
or
mov
aaa
xchg
repz
mov
jp
mov
ret
mov
and
fcmovnu
adc
jbe
clc
push
pop
cli
adc
aad
adc
or
xchg
cmpb
add
ficoms
inc
lock
ja
sub
sbb
test
cmp
mov
jg
jo
pcmpgtb
clc
jl
dec
adc
fsubl
xchg
inc
jl
pop
inc
xor
cmc
ret
cld
jno
inc
xor
decl
mov
jne
xor
and
fistl
jl
mov
or
cmpsb
fisttps
rcll
xchg
das
mov
cld
daa
or
xchg
fmull
jbe
inc
test
cmc
dec
cmp
jecxz
les
pop
mov
cld
test
or
mov
cmc
mov
cli
das
sar
cmc
aaa
lret
cmp
sti
xchg
push
mov
mov
pop
pop
sub
sar
roll
test
sub
ret
insb
lock
imul
decl
addb
sarb
mov
mov
cmp
call
fisubs
pushl
inc
xchg
cwtl
popa
mov
sub
jne
in
push
xor
mov
or
stc
push
push
sub
scas
lcall
fiaddl
clc
mov
xchg
filds
pushf
add
mov
lcall
ret
jbe
xchg
jns
jp
push
pop
jbe
add
arpl
dec
inc
int
dec
push
jmp
leave
out
xor
pop
pop
mov
mov
ja
scas
ljmp
xchg
jmp
add
repz
push
cmp
jecxz
jb
mov
mov
shlb
lret
push
sbb
jmp
mov
xor
std
push
mov
mov
mov
icebp
xchg
mov
mov
inc
mov
popf
jno
mov
incl
xor
adc
lds
lcall
int3
jecxz
cwtl
rcll
dec
xchg
data16
sub
pushl
pop
and
xchg
pop
jnp
test
popa
mov
stos
sbb
imul
pop
out
test
sbb
incl
jns
pusha
add
cmp
test
sub
loop
pushf
fadd
into
fwait
adc
decl
add
jl
cmp
xchg
sti
mov
arpl
and
fistpll
outsl
adc
mov
mov
adc
dec
pop
mov
sub
popf
inc
decl
jp
xor
and
inc
pop
mov
jne
ljmp
mov
icebp
mov
jp
or
xlat
lahf
xchg
popf
repnz
push
push
sahf
mov
call
std
imul
xchg
stos
mov
xchg
adc
loope
decl
dec
sbb
movsb
jne
or
jl
je
mov
and
popa
push
lea
lock
push
fucomi
and
pop
fisubrl
addr16
inc
daa
add
push
mul
lcall
vrcpss
mov
mov
bound
popa
jnp
cmp
shl
imul
mov
dec
aas
adc
test
inc
dec
fsts
jne
in
test
sbb
out
xor
fs
test
pop
push
add
mov
insb
dec
out
xor
sub
cmp
jmp
sub
decl
mov
and
test
dec
lcall
adc
arpl
mov
mov
ljmp
sahf
out
adc
incl
out
push
pop
jmp
fisttps
xchg
dec
in
sbb
or
inc
add
push
xor
out
nop
fs
mov
sub
js
roll
clc
cld
rcll
fildl
ret
mov
test
bound
call
jge,pt
shrl
jnp
orb
cld
mov
mov
xchg
cmp
in
pop
call
sub
dec
cmp
jp
mov
mov
pop
sbb
out
cmpb
pop
mov
jnp
xor
mov
cmp
sahf
repz
dec
call
clc
leave
mov
int
mov
pop
xchg
mov
pushf
pop
icebp
push
ljmp
sub
mov
call
lcall
lcall
pop
mov
in
xchg
mov
mov
add
dec
fscale
jmp
ficoml
push
out
cmpsb
shrl
dec
orl
cmp
push
cmp
fdivl
ljmp
mov
scas
jo
mov
xchg
xor
stos
push
int3
aam
and
jl
pop
add
push
pusha
psrld
sbb
push
xchg
shl
xchg
mov
push
rcll
adc
jg
xchg
jbe
icebp
xor
and
sbb
outsb
adc
sbb
sub
stos
incb
arpl
les
dec
inc
fidivs
mov
cld
jmp
sbbl
mov
je
arpl
ljmp
xorl
gs
or
add
dec
pop
cmp
or
xchg
sub
je
ret
push
add
jge
fstpt
loope
fcoml
mov
fs
lret
clc
cmp
mov
loope
pop
add
out
cmp
mov
push
out
adc
sub
pop
js
and
adc
pusha
inc
rcll
cltd
jg
lcall
fstpl
pop
or
insb
rcl
xor
popf
lahf
push
mov
dec
or
fcompl
jmp
cmp
sub
jle
push
jno
add
lock
inc
dec
insb
mov
negl
std
jmp
push
scas
outsl
test
cmp
scas
xorl
addr16
cmp
cmp
popa
pop
das
stos
pop
loopne
leave
dec
int3
jmp
and
dec
mov
loopne
and
fwait
add
pusha
in
cli
cmp
les
add
xor
decl
inc
addr16
ljmp
hlt
out
mov
ret
add
mov
or
std
repz
fwait
mov
mov
cmpsl
mov
xor
push
lds
call
push
cmc
push
ret
mov
addr16
fwait
mov
mov
call
cltd
nop
mov
divb
mov
sbbb
lcall
or
inc
xor
cmp
sbb
cmp
mov
xchg
hlt
mov
call
adc
shlb
xchg
jge
mov
fdivp
pop
pop
mov
push
ja
call
daa
cmp
int3
mov
sub
test
arpl
sbb
into
xchg
pop
or
lcall
sbb
jecxz
je
xor
cmpsl
jb
mov
icebp
test
and
lcall
incl
fs
pop
aaa
lea
jl
sti
sbb
push
xor
lcall
xor
out
ret
or
mov
insl
outsl
shll
je
stos
test
xor
fldt
imul
or
dec
aaa
xchg
ja
mov
sahf
stos
pop
adc
and
nop
inc
rorl
in
jmp
cmp
mov
push
fdivrp
out
repz
mov
in
mov
and
pop
out
dec
test
adc
test
jns
or
addr16
add
lcall
lcall
push
mov
lahf
pusha
or
jne
jno
test
mov
popf
mov
incl
dec
cli
fldcw
cmp
inc
sbb
aaa
push
in
add
jmp
cmp
push
jmp
or
xor
jne
movsl
xchg
lods
addps
decl
jmp
mov
leave
ret
cmp
or
xchg
test
dec
fbstp
jmp
or
in
jno
sbb
inc
ss
dec
int3
js
mov
inc
xchg
in
in
sub
jmp
rolb
mov
insb
jl
outsb
repz
xor
stos
mov
xchg
ds
mov
cwtl
fs
imul
pusha
jnp
fstps
in
jo
pop
cmp
cld
add
add
or
stc
mov
push
jl
jg
adcl
outsl
mov
jnp
push
and
adc
jg
lcall
jb
clc
pushf
or
sbb
xor
mov
rcll
jmp
mov
cmpsb
insl
and
js
aad
fidivrs
pop
call
mov
int
ss
cld
pop
jae
and
and
jno
ss
sub
insl
sti
out
lcall
lock
cwtl
pop
add
mov
pushl
je
imulb
aam
xlat
mov
ret
push
and
fistpl
out
ljmp
jmp
pushf
dec
psubq
jl
jp
adc
mov
movsb
mov
dec
or
or
cmp
cmp
mov
jne
cli
adc
xor
pop
mov
or
xor
jmp
push
push
or
repz
aad
jns
call
aaa
enter
adc
and
fisubrs
das
pop
cmpsl
cmc
and
add
js
loopne
and
mov
push
xchg
call
test
or
sahf
insb
pop
cmp
lock
pop
sbb
mov
stos
sub
or
lahf
adc
sbb
out
ljmp
inc
sbb
cmp
je
testb
mov
sub
jae
ljmp
js
ret
fs
out
shrl
addr16
cmp
out
popf
mov
cli
cltd
sub
and
and
inc
popa
sub
adc
stos
filds
cs
bound
aas
mov
mov
lds
shrb
arpl
cli
ja
cli
sbb
push
jno
fisubs
add
or
andb
push
mov
push
mov
sahf
sbb
jp
leave
scas
ljmp
movsb
bound
mov
and
stos
push
pop
shlb
jmp
gs
sbb
xchg
or
pop
cmpl
sub
mov
pop
std
ljmp
mov
mov
mov
scas
div
mov
mov
fsubrl
xchg
adc
jl
mov
add
mov
add
lret
cld
ljmp
dec
add
adc
sbb
adc
addl
sar
pushl
adc
sub
cmp
mov
pop
mov
ficoml
xchg
and
cmp
inc
sbb
loop
dec
pop
out
movsl
push
out
inc
sbb
incl
cli
outsl
jbe
mov
int3
sbb
adc
mov
dec
add
xchg
mov
push
int
test
jo
arpl
add
fcomps
jmp
sbb
mov
lcall
pushl
shll
mov
jg
aam
jo
andb
jmp
clc
jo
and
lcall
cwtl
xchg
mov
jl
push
stos
sbb
adc
and
les
cld
lret
xlat
icebp
lcall
std
push
or
sahf
das
mov
mov
push
or
xchg
ljmp
sahf
pop
pushl
ljmp
fld
jb
repz
movl
call
fs
jl,pt
mov
xchg
or
sbb
lods
iret
pop
out
inc
add
jg
incl
outsl
mov
inc
popl
push
ja
aas
cmp
sarl
or
dec
cmp
dec
cmp
inc
ljmp
loopne
pushl
jmp
test
sbb
and
divb
pop
bound
pop
sti
inc
cmp
ljmp
or
in
add
lods
sub
sub
lret
xchg
decl
dec
inc
pushf
mov
mov
cmovae
in
faddl
test
jg
sbb
ja
cmp
ss
repnz
mov
sbb
mov
cmp
cltd
dec
aam
ja
mov
orb
cmp
fldl
xor
dec
xor
leave
notl
and
mov
xchg
xchg
cmp
cmp
pushf
push
add
shufps
xchg
enter
sbb
xchg
or
inc
lret
daa
sbb
pop
ja
sbb
mov
jnp
xor
jle
adc
ud0
in
lcall
fnstsw
js
jecxz
adc
dec
insb
mov
gs
call
test
jp
add
loope
loopw
cmc
dec
inc
mov
scas
sub
xchg
decl
out
testl
mov
cmp
out
jo
lock
inc
jb
mov
mov
adc
mov
adc
jmp
push
sbb
jns
arpl
cmp
mov
mov
adc
movsb
ficoms
pop
xchg
cltd
incl
push
fistpll
aaa
add
xor
stc
lret
cmp
test
mov
and
jmp
leave
pop
xchg
cmp
mov
cltd
pop
mov
xor
data16
sub
sub
cmc
ud0
xor
es
jge
mov
mov
in
pop
mov
pop
adc
add
jl
dec
stc
cmp
jl
push
mov
loopne
adc
stos
dec
enter
push
xchg
cmp
ja
popa
iret
and
xor
incl
sub
adc
dec
inc
mov
movsb
xlat
dec
xlat
test
and
jg
and
decl
xchg
iret
aam
mov
clc
cmp
push
subb
jb
popl
sbb
nop
in
incl
idivl
jne
jbe
bound
dec
mov
sub
lahf
test
cmpsl
inc
sub
cmp
lcall
mov
lret
mov
jmp
sbb
xchg
mov
mov
inc
dec
xchg
std
pop
cmc
ljmp
into
add
pop
int3
fistpl
push
mov
lea
and
jge
push
xor
lea
jecxz
int3
push
ljmp
or
and
iret
jmp
adc
pop
int
add
stc
dec
jl
clc
pop
addb
cmp
jg
and
dec
jp
add
cltd
xor
fcomip
sbbb
popa
imulb
sbb
and
dec
cmp
add
add
stc
scas
incl
test
mov
ret
sahf
or
je
xor
in
push
or
loopne
lar
inc
add
dec
or
mov
scas
in
movsl
popa
cmp
aad
repz
call
sub
shrl
out
pop
mov
mov
sar
push
movsb
sbb
dec
dec
pop
xchg
jns
sar
dec
adc
push
ss
popf
pop
decb
add
mov
sub
aad
js
lea
dec
adc
cwtl
add
ljmp
dec
repz
fidivl
adc
cwtl
lret
push
mov
mov
ja
bound
call
pop
mov
aad
dec
lret
cld
xchg
xor
jge
mov
lcall
sti
jb
incl
or
sbb
hlt
cwtl
ja
sbb
mov
jge
and
inc
scas
cli
ljmp
test
sbb
scas
aaa
jl
sbb
movsb
xchg
addr16
shrl
enter
or
inc
xchg
push
cld
fidivrs
aas
sbb
mov
popa
imul
test
sub
push
mov
pop
imul
adc
dec
inc
out
outsb
pop
subb
push
pop
push
cmp
xorl
jnp
cs
pop
cmp
outsl
cli
das
and
mov
xchg
jne
cwtl
cmp
pusha
or
fstl
add
push
xor
lcall
fadds
jnp
adc
mov
mov
xchg
add
fbld
inc
sub
scas
cld
ja
call
xchg
jne
pop
sti
xchg
mov
pusha
jb
out
fwait
sahf
jg
jg
or
inc
pop
sbb
cmp
mov
jmp
add
push
mov
jae
leave
jns
dec
pop
shr
dec
xor
inc
in
cwtl
lret
ljmp
cli
hlt
pop
iret
mov
pop
pop
ss
jmp
test
inc
lods
cmp
in
insb
cmc
repnz
cmp
jnp
push
sub
mov
mov
add
insl
dec
mov
movsb
mov
cmp
rorl
cmp
insb
ljmp
cmc
ja
sbb
inc
adc
mov
pop
cmc
lcall
mov
add
and
mov
jo
imulb
test
test
fcos
pushl
push
adc
rcrb
imul
dec
push
cs
xchg
decl
xor
fisubrl
xchg
jmp
in
aam
mov
sbb
insb
shrl
ljmp
inc
ret
js
add
inc
pop
mov
mov
sbb
dec
jae
insl
sti
movsl
incl
pushl
mov
mov
and
test
jb
mov
lcall
fwait
dec
mov
call
iret
push
mov
xchg
pop
jo
popl
xchg
jg
cmpsb
incl
sbb
add
add
or
push
cmpl
int3
push
icebp
call
mov
es
lock
jno
movsl
pushf
dec
pop
ss
ljmp
jmp
mov
outsb
xchg
mov
stos
mov
inc
xlat
or
xchg
xchg
dec
add
call
dec
popa
sbb
es
inc
das
out
mov
cmp
pusha
sbb
mov
out
pushl
icebp
ret
mov
jae
jne
test
stc
or
inc
cld
and
adc
inc
leave
jbe
sbb
out
fidivl
adc
sub
jecxz
loope
jnp
shrl
pushf
lcall
ljmp
xchg
cli
add
in
sbbb
jg
aam
and
decl
pop
mov
mov
popa
lcall
mov
and
xchg
out
inc
iret
xchg
call
jne
push
into
mov
jmp
mov
or
js
jmp
stc
push
dec
test
mov
push
mov
fnstcw
pop
dec
push
adc
jne
xchg
lret
add
inc
std
pusha
mov
pushf
sub
es
mov
and
xlat
jl
and
sub
out
clc
jmp
xchg
mov
cltd
mov
xchg
mov
dec
add
ficoml
mov
mov
cmp
dec
add
mov
in
or
mov
cmpsl
ja
pop
cmp
push
pushl
or
cmp
sbb
adc
shll
cmp
push
cmp
mov
sbb
xor
jg
or
outsb
aaa
outsb
mov
stc
fwait
xorl
lret
xchg
repnz
mov
push
jns
jg
pusha
imulb
loopne
mull
jge
push
fcomip
fwait
sti
test
mov
mov
cli
cwtl
jo
cmp
mov
popa
cld
mov
pop
mov
incl
lods
push
test
cmp
mov
loope
mov
ret
leave
ds
push
sub
dec
lock
jns,pn
push
inc
jmp
insb
mov
adc
push
push
mov
pop
inc
mov
shl
or
inc
setp
add
decl
icebp
xchg
test
add
clc
cmp
movsb
rcrb
xchg
cmp
decl
lods
inc
shll
pushf
and
xor
inc
xchg
xchg
mov
ljmp
pop
lock
adc
je
pop
mov
mov
and
mov
jne
mov
pop
pop
loope
add
pop
mov
xchg
cmpsl
adc
cmc
or
jle
rcrb
jmp
xchg
imul
pop
xchg
inc
aad
outsb
stc
js
cltd
push
sbb
sub
adc
mov
mov
js
stos
sbbb
pop
test
popf
and
cmp
lcall
out
pop
lret
mov
ja
int3
test
inc
gs
push
mov
and
jnp
aas
fcompl
loope
cmpsb
test
adc
push
push
shll
mov
hlt
dec
mov
ljmp
repz
inc
sub
and
aad
hlt
enter
push
test
dec
lods
das
inc
clc
movsb
mov
lcall
fiadds
push
dec
lcall
std
stos
js
cmc
mov
ficoml
stos
loop
scas
pop
sbb
lock
mov
mov
loop
inc
xchg
push
mov
lcall
inc
xchg
fdivrl
mov
cld
mov
and
xchg
jns
decl
scas
push
call
adc
aad
call
aam
pop
sub
call
lahf
or
cwtl
imul
or
decb
pop
push
push
mov
sbb
test
int3
add
stos
enter
stos
incl
or
std
mov
or
daa
xor
jg
addr16
cmp
cmp
imul
dec
dec
add
mov
xor
lret
cld
pop
outsl
pushl
mov
test
jg
jg
sub
xor
sahf
jp
movl
movsb
les
and
xor
test
test
xor
das
add
lcall
aam
jp
bound
sub
and
xchg
push
mov
adc
stos
call
push
mov
xlat
roll
inc
lock
mov
adc
or
out
cli
fs
or
mov
mov
jne
fs
movsb
mov
lds
in
loopne
push
jo
inc
sub
imul
fstpt
data16
mov
jnp
popa
lock
jmp
out
loopne
rcrb
ret
sbb
cwtl
push
dec
test
decl
pusha
fwait
sub
and
or
or
adc
pop
mov
mov
fisubrs
add
scas
decl
sbb
das
movsb
sbb
fucompp
mov
test
mov
jmp
push
push
mov
jnp
daa
mov
sub
shrb
cltd
pop
rclb
insb
addr16
mov
adc
lcall
pop
push
mov
fsubrs
or
scas
xor
mov
fildll
outsl
inc
scas
add
jecxz
adc
rolb
into
iret
sub
inc
ss
lock
pop
inc
add
mov
gs
cmp
cmp
outsl
jle
call
int3
pushl
or
sahf
stc
sti
mov
stos
or
addr16
movsb
insl
xor
cmpsl
or
icebp
xchg
cmp
pop
sbb
movsl
jg
roll
clc
sub
push
shlb
fists
adc
and
mov
and
xlat
inc
mov
std
dec
xorb
push
aad
aam
mov
sahf
jmp
jmp
cmp
or
push
cmp
jno
div
pop
fwait
pop
std
inc
xchg
aad
xor
roll
int3
pop
xor
test
inc
adcb
fcomip
dec
out
std
testl
adc
dec
imul
popf
shl
out
inc
into
call
jno
jb
push
xchg
mov
push
jle
fdivrl
xchg
add
add
push
cmpsl
mov
ljmp
mov
aas
insl
xchg
mov
jl
push
push
hlt
adc
ja
mov
js
or
and
mov
pop
movb
je
or
sub
out
jmp
icebp
enter
iret
cmpsl
xchg
add
movsl
add
cmpsl
jns
jmp
insl
jp
fisubl
orl
pop
jb
addr16
mov
in
sub
cmp
in
push
fldt
clc
jg
jne
cwtl
out
mov
ja
dec
push
cmpsl
out
mov
ljmp
xor
mov
dec
dec
daa
adc
jne
ljmp
test
or
clc
pop
add
sti
call
pop
lahf
push
cmpsb
jecxz
cmp
push
lea
add
mov
sub
call
int3
enter
rorb
xchg
in
adc
sub
movsl
aas
imul
inc
mov
ffree
xchg
in
xor
sbb
in
addl
lock
or
fistpl
mov
dec
test
cmp
sbb
cltd
jecxz
sub
cmpl
das
mov
sarb
mov
pop
sbb
mov
jmp
testb
jae
loopne
jp
in
sbb
psubd
incl
loope
das
push
lret
and
adc
cmp
stc
call
xchg
cmpsl
es
push
enter
mov
adc
and
stos
inc
ret
enter
stos
jmp
sbb
ja
adc
mov
cmp
jp
fldt
insb
jge
mov
cld
call
lahf
inc
jecxz
pop
xor
pop
jno
out
loopne
cli
fisubrl
fidivl
lret
je
into
insb
arpl
inc
data16
pop
popf
iret
mov
pop
pop
repnz
call
addr16
insb
data16
add
mov
xchg
push
pusha
popf
push
enter
cmp
mov
jmp
dec
cmp
insb
xchg
xlat
mov
mov
inc
addr16
mov
xor
inc
pop
daa
idiv
jg
sbb
lcall
sub
int
daa
aaa
and
fnstcw
mull
addr16
pop
shrl
fcoms
push
aas
mov
xor
lods
fldl
jg
es
xchg
ret
cmpsl
jg
ss
decl
xor
mov
mov
xor
out
jmp
stc
inc
push
add
movsb
arpl
jl
sti
into
inc
icebp
scas
jnp
mov
jp
cmp
dec
xchg
std
cld
repz
stc
xchg
enter
sbb
pop
idivl
inc
adc
js
sbb
shll
fsub
out
cli
jmp
mov
in
or
out
lods
loop
lret
xchg
mov
mov
mov
incl
pop
pop
shl
xor
and
ds
clc
or
and
pop
bound
call
mov
xor
cli
and
sbb
push
inc
xor
cli
int
fnstsw
clc
jmp
or
add
add
mov
mov
or
scas
arpl
jmp
imul
jne
push
in
decl
or
dec
imul
mov
mov
pop
add
and
sub
push
inc
rolb
clc
fnsave
fwait
sbb
push
je
movsl
jle
lret
sahf
mov
add
ljmp
adc
dec
int
repnz
rol
mov
stos
mov
jp
insb
out
push
pop
dec
fsubr
ss
sbb
popa
pop
and
loope
mov
test
lcall
sbbb
add
inc
cmp
mov
mov
push
test
add
out
in
vpsrld
mov
scas
jae
cmovp
pop
xor
les
aam
mov
adc
ljmp
xchg
lock
test
jg
lds
xor
iret
or
xchg
pop
adc
jns
inc
ds
xchg
inc
mov
and
push
sbb
cmp
stos
add
inc
dec
sub
dec
aaa
daa
lret
js
jl
ja
cmp
pop
or
add
add
std
cld
popa
ss
imul
push
into
fisubs
rol
mov
ret
pop
jae
int
mov
mov
xchg
mov
sbb
mov
loopne
stos
inc
dec
pop
xor
test
cli
repnz
mov
cmpb
rcrb
es
or
xor
divl
xchg
icebp
decl
enter
cmp
outsl
pop
sub
lcall
xor
cmpsb
call
sbb
mov
stos
cmp
cmpsl
or
pop
push
and
test
ljmp
ljmp
add
inc
js
push
clc
or
shrl
and
cmpsb
lods
lcall
mov
xchg
imul
mov
jmp
push
push
movsl
fldcw
jmp
xor
call
mov
jo
icebp
push
xlat
insb
mov
dec
lcall
add
mov
pop
lret
ja
xor
lea
scas
mov
imul
add
loope
arpl
lret
cmp
sub
rclb
cmp
fistps
imul
sub
adc
jb
out
adc
incl
test
lods
xor
xor
sub
or
fisttpll
mov
std
lcall
add
push
hlt
daa
mov
bound
pop
jnp
push
push
sub
xchg
dec
cmp
pushl
and
mov
xor
mov
insl
pop
mov
flds
loope
sbb
mov
mov
pop
or
mov
enter
ret
xchg
push
arpl
ljmp
movsb
call
push
into
rcrb
stos
inc
mov
ret
sub
call
dec
rcrl
std
movsl
das
mov
lret
xchg
into
adc
sti
les
mov
mov
fwait
in
mov
dec
mov
and
ret
pmullw
or
and
xchg
pushl
sbb
ret
stos
stc
xor
add
pop
pop
sbb
addb
rorb
pop
push
xor
add
push
mov
fsubrs
adc
fdivr
mov
and
enter
test
xlat
xorb
ret
test
popa
ret
mov
incl
ds
add
pusha
mov
sbb
pop
cmp
stos
jno
inc
fcoms
call
mov
jmp
xor
out
jb
and
testl
mov
ljmp
std
mov
ja
jae
sub
jno
sub
cmp
inc
or
xchg
xchg
xchg
or
pop
sbb
sbb
adc
mov
ljmp
imul
scas
fcoms
outsl
clc
fnstcw
popf
fdivs
lahf
xchg
push
mov
sub
pop
or
or
mov
out
lods
or
sub
outsb
sub
mov
fcoms
shl
iret
mov
mov
call
jno
pop
rolb
xor
push
icebp
in
cld
aam
sub
add
decl
pop
sub
int
pop
test
xchg
movsl
jge
xchg
xchg
adc
and
push
push
sar
lcall
xor
push
jae
int3
jns
out
call
sub
push
lahf
repnz
dec
loope
sbb
inc
cmp
addl
xchg
jmp
pop
and
xor
and
sub
call
dec
ljmp
jno
js
inc
mov
outsb
jns
stos
ret
jg
add
push
cli
ljmp
xchg
mov
divb
add
dec
dec
pop
adc
mov
aad
push
pushl
in
out
sahf
pop
push
and
aas
adc
jno
into
and
mov
and
sti
mov
mov
push
inc
or
fwait
jp
call
or
mov
jge
scas
xor
mov
addr16
aas
adc
jg
mov
add
pop
mov
lcall
addr16
fbstp
jnp
xor
jns
xor
test
iret
loope
gs
popl
jnp
or
xor
clc
add
fwait
aam
cmpl
pushl
mov
mov
into
mov
scas
jne
pop
add
and
jmp
dec
xlat
add
mov
jno
xor
stos
lret
mov
mov
pop
dec
dec
push
cld
jbe
decl
adc
imul
ret
add
or
sbb
aad
inc
ficomps
add
inc
cmpsb
mov
pop
dec
inc
sub
push
arpl
cld
cmp
push
push
daa
xchg
inc
inc
mov
mov
or
imul
cmp
aas
pusha
sub
mov
push
mov
jl
mov
fptan
mov
or
pushf
or
mov
push
lea
mov
clc
loope
push
out
clc
ljmp
fucomi
data16
loop
loopne
jecxz
loope
mov
adc
lahf
push
das
push
bound
push
ljmp
inc
out
js
add
sub
sbb
das
sub
call
xor
push
add
scas
or
cltd
push
icebp
mov
imul
jmp
xchg
cmp
dec
daa
xor
sbb
lds
push
into
js
inc
shld
fs
and
das
adc
inc
cmpsb
cltd
jbe
out
dec
push
out
pushf
out
cmp
xchg
xchg
mov
fisttpl
mov
jb
sbb
lcall
and
movsb
push
out
fcompl
sub
dec
jecxz
es
in
ljmp
xchg
insl
cmpsb
sub
rorl
mov
cmpsl
dec
xorb
adc
mov
adc
les
loop
jno
pushf
mov
jg
mov
and
dec
fnstcw
enter
fwait
pop
pop
popa
cmp
fwait
pop
xchg
mov
aaa
cld
push
adc
xchg
pop
sub
xchg
xchg
pop
sub
pop
mov
sbbb
jmp
and
sbb
add
or
lcall
lahf
cmp
sar
call
sub
es
sbb
pop
test
cmp
int
sbb
incl
mov
push
mov
push
xchg
dec
sub
add
call
lock
enter
jnp
mov
pop
fmuls
js
sbb
out
lock
dec
ljmp
mov
pop
outsl
sar
popf
cmpb
xchg
test
xchg
inc
and
in
or
jg
shrl
inc
mov
scas
inc
int
gs
scas
std
std
decl
mov
idivl
xlat
pop
push
adc
lods
sub
push
xchg
jmp
mov
sub
imul
add
mov
adc
scas
push
nop
lds
pop
cld
sbb
mov
mov
movl
test
sbb
sbb
je
je
fcmove
dec
aad
dec
popa
inc
mov
loop
jecxz
mov
pop
sbb
outsb
and
inc
rcrl
pushl
and
popa
divb
jae
fcmovu
xlat
push
jns
orb
fcoms
mov
and
shlb
cltd
movsb
sbb
xchg
mov
decl
cmp
daa
xchg
mov
mov
and
in
sub
push
inc
ljmp
clc
adc
mov
jns
call
pop
jnp
xchg
ret
mov
fdiv
cmp
xchg
add
inc
fwait
stos
mov
rcrl
enter
inc
sbb
loopne
sarl
mov
lcall
inc
fnstsw
xchg
sahf
dec
xorb
lock
lret
and
hlt
jno
into
jmp
lret
int
or
inc
mov
loopne
in
cli
loope
outsl
cmp
add
pop
nop
in
jecxz
sti
fcmovu
jmp
les
or
xor
cwtl
xorl
add
or
ljmp
jl
add
call
gs
ret
inc
add
push
dec
lods
mov
stos
xor
aas
pop
mov
lahf
ljmp
jg
fisubrl
cld
adc
jnp
imul
pop
rcl
and
outsb
jmp
loop
sbb
lret
xchg
in
repz
ljmp
mov
bound
sbb
add
mov
stc
mov
pop
inc
iret
adc
mov
rclb
clc
xchg
and
mov
aaa
std
sbb
cs
in
and
dec
mov
std
je
inc
notl
pushl
je
outsl
int
and
jmp
and
jno
fcmovb
ret
mov
decl
xchg
or
insl
xorl
jno
xchg
mov
mov
ljmp
xor
popa
popf
shll
icebp
es
xor
mov
mov
fbld
mov
mov
push
call
aam
mul
enter
arpl
popa
push
pop
inc
out
mov
adc
movsl
fstp
inc
mov
loopne
fbstp
lock
add
dec
mov
in
andl
cmp
stos
fcoms
daa
adc
add
mov
outsl
movsl
out
ret
lods
push
lods
into
out
test
aaa
pusha
jnp
add
add
decl
add
addr16
sbb
sahf
mov
or
cltd
mov
movsl
fs
add
dec
jno
fstl
call
int3
aas
inc
xor
loopne
add
cld
rorb
ds
ds
scas
inc
std
ljmp
fstpl
mov
notb
mov
data16
popa
pop
daa
jle
mov
jecxz
rcll
call
xor
mov
mov
xor
or
lods
mov
inc
mov
ds
insb
lcall
scas
rcrb
push
sti
imul
in
mov
loop
sbb
or
ffreep
pushf
or
pop
incl
repnz
push
data16
sbb
lcall
jnp
add
xlat
lcall
cltd
and
cmpb
fstl
and
xor
jle
lcall
decl
lcall
sbb
xchg
or
dec
idivl
mov
shll
incl
cld
jmp
in
mov
rcrl
xlat
fisubrs
daa
cmc
call
repz
push
fisubrl
loop
push
mov
push
aam
cli
decl
jle
or
push
xchg
pop
jle
pop
test
leave
mov
xchg
lods
mov
jg
call
xlat
mov
push
or
and
jl
test
xchg
in
mov
ss
pop
in
sub
or
stos
incl
loop,pt
popf
popa
aaa
push
int
lods
push
in
inc
xchg
mov
cmp
dec
incl
cmp
or
call
xchg
js
xchg
jl
or
mov
ret
dec
cs
sti
in
push
mov
cmp
aad
and
mov
aad
jae
repz
inc
mov
sub
xor
gs
sbb
jns
add
dec
scas
sub
int
arpl
jae
jg
sub
cmp
std
aad
dec
in
outsb
or
lds
loope
jp
ret
xchg
dec
fbld
insl
test
add
pop
xor
jnp
call
mov
or
decl
sbb
inc
sub
outsl
add
xlat
shll
jnp
lcall
cmp
xchg
sbbb
nop
std
jns
adc
or
adc
inc
jg
jmp
testl
xchg
mov
imul
jge
adc
xor
ja
fstpt
xchg
mov
mov
test
stc
adc
mov
into
dec
mov
sti
pop
jbe
outsb
add
int3
dec
cmpsl
sub
jg
fildll
iret
addl
mov
adc
stc
pop
ljmp
shll
mov
mov
cmp
fs
bound
jae
mov
stos
and
filds
rcrb
nop
mov
adc
dec
les
adc
loopne
xchg
scas
xchg
jns
sub
cmpl
lcall
nop
loopne
idivb
pop
pop
lea
sbb
popa
clc
call
mov
imull
cwtl
inc
push
xor
imul
lret
lock
gs
inc
js
xor
decl
or
fadds
lcall
jl
pop
add
lcall
ljmp
or
mov
jg
into
and
jmp
sbb
fdivs
shll
push
outsl
adc
imul
mov
cmc
fcoms
lea
push
in
js
jb
cs
rolb
cmpsb
sbb
sub
mov
add
jle
inc
jmp
rolb
loop
sub
pushf
dec
cmpsb
xchg
mul
push
clc
adc
repz
cmc
push
mov
mov
call
add
jp
cmp
call
insb
xor
dec
cmc
xchg
lods
mov
daa
lret
sub
mov
mov
jg
lcall
outsl
cltd
xor
jns
arpl
stos
in
in
dec
pop
movsl
cmp
loopne
and
incl
call
fisubrs
push
and
gs
ljmp
mov
out
or
adc
aas
push
pop
das
add
stc
incl
xor
inc
fsubrl
andl
mov
jo
imul
movsb
mov
xor
dec
pop
pop
mov
cmpsl
or
or
dec
flds
or
push
int
xchg
test
xchg
aas
fs
sbb
xor
add
push
jl
stos
push
adc
mov
lock
jnp
xor
and
in
mov
jmp
push
test
in
adc
mov
or
inc
fsubp
cli
das
call
popa
xlat
pop
into
movsl
movsl
lcall
xor
pop
jno
lock
mov
push
and
jg
fdivrl
jl
stc
push
add
clc
out
xchg
add
add
jl
jge
lock
mov
int3
sub
jns
xor
inc
pop
clc
jg
sahf
jge
mov
popa
dec
mov
dec
aaa
adc
test
pop
inc
mov
pop
cmpsb
jnp
repnz
lea
les
dec
pop
sub
cli
outsl
and
pop
adc
jb
mov
fimuls
orb
mov
arpl
hlt
shlb
lea
add
call
and
mov
icebp
cld
mov
inc
pop
xchg
inc
pusha
sub
fisttpl
ja
incl
jmp
and
or
ror
in
inc
push
iret
cmp
decl
dec
push
lock
and
add
movsl
fwait
mov
or
insl
jmp
push
push
push
pop
cmp
cmp
out
jp
inc
cmpsl
or
jno
cld
call
inc
and
dec
pop
test
push
and
cmp
cmp
jmp
mov
incl
cmp
mov
push
cmp
sbbb
or
js
sbb
loopne
inc
arpl
cmp
clc
loop
ss
aad
sbb
mov
inc
xchg
push
pop
vpsubb
and
mov
mov
pop
mov
xchg
cmp
movsb
cmpsb
push
lods
addb
test
call
in
sub
dec
mov
sti
out
sbb
cmp
add
addps
aaa
or
subl
jnp
fwait
call
test
outsl
clc
dec
dec
gs
fsubl
aam
and
movsb
jmp
cmp
lahf
iret
ljmp
clc
cli
lcall
fcomps
xor
sbb
inc
jg
inc
je
add
pushl
leave
inc
loope
lea
jmp
or
sti
js
popf
and
std
clc
xor
sar
jb
cld
ss
decl
ret
inc
jno
mov
mov
mov
jle
or
push
ljmp
mov
push
and
stos
jge
incb
cmc
les
movsl
add
adc
pop
cld
mov
cmp
jge
or
dec
and
or
xor
shl
out
cmp
adc
inc
addb
pushl
xor
into
mov
mov
xor
mov
repnz
fisttps
rclb
mov
mov
stos
mov
ljmp
jle
and
mov
adc
out
sahf
mov
xlat
nop
adc
xor
inc
gs
and
pop
ret
fistl
sbb
sbb
mov
nop
out
mov
sar
ljmp
imul
cmp
sub
push
jns
movsl
lock
cmp
call
xchg
inc
adc
movsb
and
jne
add
add
outsl
add
jbe
outsl
incl
stos
inc
fsts
xlat
cmc
sbb
xchg
mov
xchg
cmpsb
jle
and
pushl
mov
xchg
jmp
mov
movsb
mov
arpl
sub
dec
jmp
push
mov
push
jle
inc
sbb
lcall
repz
lahf
mov
push
dec
cmpsl
xchg
jge
andb
popf
jg
mov
lahf
out
xchg
fbld
loop
xlat
mov
mov
fdivr
lcall
mov
xchg
call
les
jne
push
loop
mov
ss
dec
ds
xchg
iret
xchg
or
xchg
pop
jb
rcrb
incl
or
jne
push
xor
and
mov
inc
cmpsb
lods
daa
pop
adc
inc
in
xchg
jmp
push
js
repnz
cmc
or
xor
sbb
fimull
scas
std
testl
adc
ljmp
adc
stos
les
xchg
in
adc
lods
xor
ljmp
sub
ljmp
dec
lods
mov
out
cmpsb
stos
pushf
add
sub
add
cmpsb
sub
jmp
jnp
pusha
nop
add
test
in
or
add
sarl
pushl
mov
inc
fwait
int
ret
test
jecxz
ret
mov
pop
fiadds
mov
or
lret
cltd
mov
je
sbb
mov
adc
inc
rorb
inc
mov
jmp
xchg
mov
popa
pushf
inc
lock
mov
data16
addl
icebp
scas
cli
call
adc
not
sub
inc
stos
rorb
jnp
or
add
dec
xor
mov
jp
push
and
or
xchg
xchg
and
lds
adcb
popf
push
test
pop
mov
fcoml
jmp
cmp
lcall
pop
hlt
daa
imul
cwtl
add
sub
pop
fiaddl
mov
stc
inc
mov
pop
fwait
push
sub
js
call
add
in
mov
aad
add
jns
mov
daa
cs
inc
ljmp
cmp
cld
jg
jne
pop
into
xor
or
orb
push
push
test
stc
cmp
or
daa
pop
inc
adc
mov
mov
mov
push
xor
xchg
inc
stc
pop
xor
incl
dec
test
adc
dec
aas
xchg
inc
cmpsb
je
jle
daa
mov
andb
incl
lahf
dec
push
sub
cmp
jne
ja
pop
repnz
sbb
and
mov
incl
movsl
cltd
cmp
cmp
je
pop
mov
adc
cmc
std
pusha
adc
incl
imul
and
jg
lret
or
andl
emms
hlt
int3
jo
or
popf
sub
rcl
mov
add
jle
es
mov
ss
sbb
out
insb
jecxz
clc
pop
es
xchg
jo
xchg
inc
cltd
fcmovbe
jmp
jmp
mov
cmp
jp
lcall
push
cmp
nop
xchg
scas
dec
ret
push
jne
inc
rcrl
ljmp
lret
sbb
mov
xchg
or
push
mov
jmp
push
sti
mov
ljmp
xor
and
adcl
cwtl
lahf
imul
or
mov
out
repz
jmp
aad
shll
mov
add
test
fisttpl
ja
repnz
jo
push
iret
jae
inc
push
cli
mov
int3
and
clc
mov
sti
pop
je
cltd
shll
lcall
in
enter
fucomip
mov
repz
bound
loopne
jp
test
es
ljmp
push
test
jp
test
fbstp
sbb
or
mov
incl
dec
or
cwtl
into
adc
jge
sbbl
in
adc
mov
ljmp
in
mov
xor
outsb
pop
insb
rcll
jo
subl
call
rcrl
pushl
mov
repz
into
enter
push
xor
sbb
data16
dec
mulb
mov
ja
and
mov
xlat
outsb
decb
jno
sub
push
inc
pop
jmp
movsl
jmp
push
inc
ss
mov
cmp
xchg
aaa
sbb
xor
push
and
jno
cwtl
ljmp
out
pusha
inc
xorb
lock
xor
or
pop
push
daa
cltd
mov
aam
xor
ljmp
iret
fstpt
sbb
ret
mov
pop
loopne
mov
fs
aam
sbb
cli
jg
hlt
lcall
pop
popa
das
movsb
cltd
loop
cmpsl
or
enter
pop
and
inc
and
lock
adc
incl
jp
lods
mov
xchg
shrl
mov
pop
ret
mov
pop
jbe
fs
mov
or
dec
xchg
push
in
aaa
sbb
cmp
cltd
test
dec
mov
jmp
add
call
sbbb
mov
lock
push
xor
pushl
aad
imul
loopne
add
dec
aad
xchg
cld
jns
sahf
jmp
inc
mov
mov
adc
push
xchg
mov
cmp
mov
mov
arpl
cs
test
jb
adc
dec
jg
lahf
mov
out
add
fcompl
jle
js
pop
sbb
or
in
mov
push
mov
adc
mov
pop
push
xor
push
or
cmp
or
lods
in
pushf
leave
pop
sub
call
iret
mov
mov
push
fwait
out
mov
clc
pushl
xor
add
cld
leave
dec
lahf
xchg
cmp
pop
test
xor
outsb
dec
call
aaa
pop
or
cmpsl
push
mov
sar
pushl
xchg
inc
cwtl
cli
stos
orb
subl
aaa
mov
mov
push
mov
out
cli
jns
inc
cmp
xchg
hlt
jl
sub
and
lret
outsb
mov
decb
push
pop
nop
cwtl
add
and
in
aaa
inc
lods
or
inc
aaa
aaa
cmp
adc
ret
into
xchg
inc
sub
push
imul
and
cmpsb
adc
inc
dec
clc
dec
data16
and
cmp
pushl
cld
push
xchg
lahf
addr16
pop
or
push
add
xor
add
push
aad
jl
mov
mov
jae
inc
jnp
int3
or
or
jmp
incl
push
jmp
add
test
mov
mov
mov
xchg
mov
or
fwait
mov
adc
push
sbb
pushl
jge
jge
outsb
shlb
mov
lea
aas
popf
mov
pop
mov
push
sbb
xor
aaa
dec
mov
aam
push
int
adcl
ljmp
add
dec
test
fsubl
pop
dec
sbb
pop
test
cs
jne
push
stos
out
add
push
movsb
push
push
push
mov
cltd
in
mov
ds
jo
xchg
aam
adc
lahf
sub
aam
or
icebp
jmp
push
sbb
mov
addr16
pop
fcmovnu
leave
mov
int
incl
rcr
mov
loope
pushl
ljmp
rep
cltd
jmp
cmc
xchg
insl
jp
pop
push
outsb
aad
or
test
pop
out
adc
sbb
dec
enter
loope
jmp
imul
pop
sarb
or
xchg
xchg
cmpsb
cli
imul
or
pop
cmc
adc
loope
incl
mov
xor
fsts
shrb
inc
cmc
das
cli
call
adc
popf
test
dec
fdivrs
mov
rolb
fistps
gs
xchg
outsl
ret
and
dec
sbb
cmp
out
sub
lock
push
or
lret
rolb
repnz
mov
pushl
aaa
jle
add
xor
daa
mov
and
sbb
fbstp
mov
cmc
ds
mov
test
xchg
or
jnp
and
and
xor
hlt
jmp
sahf
mov
pop
mov
mov
icebp
sbb
int3
popa
sbbb
mov
lcall
pop
jnp
cmpsl
stos
test
rorb
add
std
repz
mov
bound
push
mov
lcall
jnp
mov
push
int3
dec
call
addr16
xchg
inc
fnstenv
jne
xchg
mov
cmp
mov
fisttps
jae
adc
fisttps
add
pop
scas
mov
inc
pop
mov
jbe
jge
lds
mov
cli
mov
inc
mov
outsl
sti
xor
xchg
add
call
aaa
sub
repz
lds
inc
pop
push
mov
push
pop
repz
out
adc
mov
or
add
add
cmc
inc
pop
enter
dec
dec
push
fcmove
lock
dec
pop
pop
jg
xor
incl
pushf
es
add
jo
outsb
aam
in
jae
push
jo
jbe
cmpb
pushl
push
pop
push
pop
push
xor
je
das
divl
pop
and
or
hlt
pop
sub
decl
jno
mov
push
sub
xchg
imul
lea
popa
push
aaa
push
mov
std
incl
sub
lods
daa
std
imul
xor
cmpsl
sbb
mov
inc
add
push
mov
lods
mov
out
sub
dec
jo
mov
in
add
in
cmp
jmp
cmc
or
scas
adc
xchg
push
sbb
pop
pushl
push
xorl
ljmp
mov
outsl
pusha
jnp
xor
pop
xor
jmp
cmpl
std
dec
or
or
incl
mov
lock
and
in
pop
sub
ud0
fdivrl
icebp
jge
sub
fcomip
ljmp
insb
push
xchg
jge
sbb
sahf
xchg
sub
jl
mov
mov
xchg
cmp
mov
mov
lods
es
in
lcall
ljmp
mov
pushf
icebp
cmp
push
cld
mov
pushf
lahf
or
ljmp
daa
loope
jg
test
inc
mov
xor
int
lock
cltd
je
sbb
sti
imul
pushl
or
sbb
sub
cmp
ja,pn
jo
inc
arpl
push
pop
inc
mov
pop
les
jne
cltd
popa
push
leave
cmp
shrl
sti
pop
push
add
cwtl
sub
std
addr16
cmc
out
clc
mov
mov
push
sub
ds
data16
call
out
jno
pop
loop
movsl
orb
lret
fstps
scas
fistl
adc
sar
ljmp
lods
lds
ja
ja
pop
pop
rcr
xor
insb
push
mov
xchg
dec
mov
jne
pushl
nop
shlb
fwait
or
pushf
loopne
mov
lcall
pop
inc
std
and
pushf
adc
jns
sub
rorl
inc
arpl
jns
ljmp
pop
loop
sub
xchg
mov
nop
xor
dec
xor
sahf
ret
fucomip
rclb
cmovo
lret
xchg
pop
pop
and
dec
fisubrs
fdivrs
ljmp
xchg
int
cmpsb
mov
jl
inc
into
sahf
jo
popf
add
lcall
repnz
adc
or
xor
das
fnsave
push
lods
fistpll
fstl
lods
xor
fucomip
mov
sub
sub
push
out
lods
add
in
pop
gs
incl
lock
test
cmc
xor
push
test
outsl
inc
cli
mov
jmp
and
aas
jl
and
insl
outsl
cmp
movsl
inc
je
pop
mov
push
sarl
mov
fbstp
pop
cmpsl
sub
dec
pop
cwtl
mov
sub
push
std
or
lods
or
imul
dec
mov
xchg
or
jg
in
incl
xchg
cmc
leave
mov
and
mov
mov
push
and
xor
call
or
push
xchg
inc
rclb
jecxz
in
scas
or
ret
in
mov
or
mov
pop
dec
push
pop
add
cld
mov
rol
sti
mov
incl
sahf
pop
gs
push
insl
out
push
push
les
cs
imull
addb
clc
lods
mov
in
mov
mov
inc
and
jno
jo
mov
dec
rcll
dec
loopne
mov
outsb
dec
lea
pop
jns
aaa
sbb
add
xor
stos
jg
icebp
xchg
sbb
mov
ljmp
and
repnz
push
push
das
clc
mov
das
cmp
jo
lds
push
shrb
cli
fwait
cltd
mov
cmc
cmp
pop
dec
cmc
bound
decl
sub
sarb
and
loop
xor
cmpps
mov
mov
sti
lret
repnz
mov
inc
xchg
movsb
add
xor
ret
cmp
daa
jbe
test
pushl
nop
sbb
addb
icebp
push
ret
adc
jl
push
mov
daa
ljmp
jge
in
and
addb
lds
pop
push
cltd
rcll
adc
fstl
jg
mov
sahf
into
ret
frstor
fldpi
push
filds
imul
mov
fcmovnbe
ror
pop
leave
out
repz
sbb
mov
pushl
jmp
lods
push
fdivrl
bound
int
sbb
adc
std
and
call
ds
outsl
dec
outsl
movsb
jns
lret
or
movsb
inc
out
adc
push
mov
fisttpll
jns
sbb
mov
clc
std
sub
mov
mov
clc
sub
in
daa
cmc
mov
lds
mov
pop
fs
gs
xchg
inc
xchg
or
sbb
dec
fidivrs
decl
ljmp
inc
pop
out
add
das
dec
fwait
sbb
lea
insb
movsl
inc
inc
addl
push
ret
jp
jg
or
push
jns
jle
jle
pushf
add
insb
cmp
adc
pcmpeqd
pushl
dec
ret
outsb
pop
mov
push
mov
sbb
mov
nop
pop
pop
mov
sbb
bound
cmp
decl
int3
loope
add
mov
sub
xlat
addl
mov
xchg
lret
add
clc
ljmp
push
mov
xor
push
pop
das
cmp
jb
inc
out
ds
incl
dec
push
jns
or
mov
xchg
xchg
dec
or
xchg
jmp
adc
jnp
fnsave
lret
sbb
ds
fdivl
or
arpl
mov
and
clc
jg
adc
js
incl
xor
push
stc
push
stc
cs
xor
inc
push
movsb
lcall
fadd
dec
and
cmp
jmp
pop
jecxz
xor
repz
mov
xchg
jbe
jmp
ror
mov
xchg
jne
jne
aam
mov
mov
hlt
push
int3
push
push
mov
mov
out
mov
xor
push
shll
shr
cli
pushl
xor
lret
enter
xor
test
xchg
adc
push
pop
add
aam
xchg
gs
mov
add
add
adc
mov
pop
or
pusha
pop
imul
fists
imul
cmp
dec
lds
or
xor
dec
cmp
xchg
mov
push
stos
loopne
pop
fcmovb
adc
nop
or
dec
mov
jmp
mov
pop
dec
mov
arpl
push
jno
ret
sub
fs
jg
mov
nop
mov
lret
xor
push
imull
inc
jge
pushf
loope
cmp
lcall
outsl
add
mov
int
shll
addr16
mov
add
inc
pop
out
jbe
pop
std
mov
and
leave
push
scas
aas
adc
jno
push
jle
inc
cmp
push
jg
or
mov
and
bound
cld
call
mov
xor
xor
mov
pop
dec
jmp
dec
jne
or
push
jmp
and
push
insl
dec
pop
xchg
pop
loop
push
fld
cmp
pushl
cmpsb
iret
jbe
dec
ret
or
loopne
mov
and
in
pop
jecxz
push
adc
xlat
lret
pop
dec
clc
jmp
int3
xchg
add
mov
xlat
jne
fcompl
test
incl
movsl
lock
push
pusha
and
lahf
ss
ljmp
cmpsb
icebp
xlat
fistps
push
arpl
add
nop
mov
xchg
inc
out
push
in
shll
incl
cld
jecxz
popaw
push
or
mov
in
inc
and
push
xor
lcall
xor
dec
inc
sbb
pop
pop
push
inc
out
or
ljmp
xchg
loopne
out
push
mov
inc
adc
mov
inc
clc
ljmp
pushl
shrb
inc
sti
fs
shlb
negb
jmp
push
iret
ja
sub
sub
cmp
and
hlt
mov
and
adc
mov
ljmp
inc
cmc
push
jno
pop
push
icebp
incl
push
pushl
mov
mov
or
sub
sarb
jmp
decl
and
sub
jbe
lea
jle
mov
sbb
or
daa
scas
dec
insb
sbb
jp
cmpsb
test
rolb
inc
lcall
push
xor
mov
cmp
sbb
fwait
mov
dec
xor
sbb
decl
push
inc
arpl
jnp
lods
sbb
and
ret
mov
cmp
ficoms
incl
push
insl
jb
add
push
in
mov
cmp
psllq
add
adc
mov
aaa
sarb
push
jecxz
xchg
je
mov
jae
or
jp
add
inc
dec
nop
jmp
inc
pop
mov
pop
inc
jb
lcall
jnp
mov
jge
cld
jg
cmp
push
fs
into
xchg
out
idivb
sub
and
incl
jg
in
outsl
cmpsl
lcall
addb
ljmp
cs
sarl
aas
jo
xchg
div
call
rcrl
sbb
push
call
popf
stos
lock
and
jnp
adc
std
lret
popa
gs
ljmp
dec
sub
ja
ds
pushf
pop
mov
add
orb
pop
lcall
jno
xchg
out
mov
lret
fs
push
xchg
pushf
dec
scas
cmp
xchg
sahf
lcall
push
xchg
jg
ljmp
sahf
pop
cltd
out
inc
nop
sub
pop
sbb
push
pop
mov
mov
mov
rcl
adc
push
push
ret
lds
stos
cmp
pushl
pusha
mov
add
inc
adc
mov
push
sub
cld
add
xchg
jo
icebp
push
adc
xchg
cmp
out
inc
jge
dec
mov
mov
pop
inc
mov
push
shlb
cmpsb
or
loopne
push
xorb
mov
lcall
jle
fcmove
div
add
mov
clc
mov
cmc
mov
scas
out
rolb
sbb
jb
mov
sbb
dec
iret
mov
fwait
add
jo
jmp
call
mov
mov
dec
test
cld
xchg
movsw
imul
pop
jmp
lock
es
subb
jg
dec
aam
loop
xchg
ds
insb
sub
push
imul
jg
jmp
lods
in
jmp
sbb
adc
add
js
jg
cmp
cmp
daa
fs
mov
rolb
out
inc
ss
stos
fcomip
movsb
test
cltd
pop
faddp
fmull
dec
je
sbb
fidivl
out
lahf
pushf
lock
fsub
mov
dec
jmp
arpl
leave
cltd
hlt
pop
cmp
gs
add
cs
jmp
and
ret
fisttpll
leave
sub
gs
in
sub
rolb
pop
dec
lret
inc
mov
jmp
sbb
dec
outsl
sbb
mov
adc
mov
adc
jg
call
fmuls
dec
movb
stc
jne
fistps
in
mov
pushl
ficompl
add
mov
jmp
sub
in
in
push
cmp
or
lcall
pushf
mov
mov
fisttps
adc
pop
pushf
call
andb
pop
test
cwtl
dec
cmpsl
xchg
inc
sbb
jmp
leave
sbb
stos
insl
setb
sahf
xchg
mov
xchg
xor
jmp
insb
test
jne
call
and
mov
in
mov
cmp
fistpll
inc
xor
push
cld
jge
fcomip
lods
lcall
aam
rcl
mov
in
lret
fcomip
sbb
adc
popf
xchg
movsl
loope
mov
dec
adc
sahf
sbb
loopne
dec
add
pop
repnz
loopne
mov
sub
clc
call
inc
test
adc
nop
xor
and
test
sub
xchg
dec
scas
imul
out
push
or
lret
mov
xchg
mov
lcall
stos
add
sahf
stos
lahf
sub
out
test
call
xlat
fnstcw
shl
out
jle
test
add
add
stc
cs
sahf
dec
xchg
decl
fmull
repnz
cs
adc
rcll
mov
sbb
and
daa
imul
roll
mov
cld
lret
jo
mov
fisttps
dec
inc
mov
imulb
and
jge
inc
repnz
mov
jl
mov
imul
std
decl
lock
cmp
repnz
jns
mov
out
or
jg
ljmp
jecxz
sti
rcll
and
or
incl
cmp
inc
lcall
test
sub
jmp
lcall
mov
add
and
xchg
jae
daa
fstl
pop
mov
xchg
jmp
test
ja
jo
cmc
mov
jbe
sub
inc
aaa
aas
xor
out
push
or
call
call
mulb
lock
int3
das
dec
adc
and
sbb
fdivrs
pop
cmp
push
mov
ja
idiv
incl
mov
cltd
les
jns
jmp
leave
out
mov
add
push
mov
call
jnp
jns
mov
rorl
out
cmpsb
cwtl
ret
pushf
xor
dec
push
dec
repnz
decl
and
xchg
in
ljmp
sbbb
in
adc
add
loopne
jg
adc
xchg
sti
inc
jecxz
xchg
adc
clc
movsb
xchg
mov
fcmovu
call
xchg
and
mov
xchg
repz
cwtl
cmp
stos
mov
pop
aam
out
movsl
mov
or
outsb
pop
cmc
in
int
push
out
out
add
cmc
out
sbb
into
popa
jmp
sub
inc
stos
je
add
les
cwtl
lods
test
pop
add
mov
std
push
jns
and
iret
dec
test
mov
sub
mov
push
cld
mov
mov
movsb
xlat
jne
stc
ror
xchg
sbbb
xlat
imul
mov
ds
in
or
jge
sbb
mov
pop
sar
sbb
incl
sbb
adc
insl
lcall
gs
inc
scas
and
pop
cli
jle
cs
rcrb
loop
hlt
sub
push
popf
cltd
in
cmc
dec
sub
call
dec
rclb
xchg
jmp
mov
orb
jg
xor
outsb
andb
into
fstps
mov
sahf
or
fmul
adc
push
xchg
daa
or
and
rcrl
push
aam
mov
mov
and
xchg
jno
jo
out
imul
lods
js
int3
imul
and
call
inc
cmpsb
xor
push
inc
push
push
mov
popf
cwtl
fdivl
mov
ja
decl
push
xchg
arpl
fnstcw
add
orl
ljmp
repnz
lahf
shrl
das
icebp
xor
push
pusha
or
in
ljmp
lcall
stos
xchg
lahf
xor
mov
cmc
inc
push
add
mov
xchg
mov
xor
into
lret
cmp
popa
iret
aam
leave
sub
dec
adc
cld
scas
call
icebp
jg
cmpsl
scas
icebp
leave
pop
push
push
sub
ljmp
xor
sti
jp
mov
cmp
je
push
lahf
cltd
jg
data16
mov
addr16
lcall
loopne
sbb
mov
push
mov
xor
cld
js
jecxz
fsubs
xor
addl
shll
sbb
xor
jg
or
sar
mov
subb
shl
lock
sub
cmp
fisubrs
dec
mov
fxch
pop
movsl
or
pop
jo
out
sub
mov
jnp
add
in
aaa
inc
cmc
push
test
push
subb
fcompl
xchg
mov
add
sar
dec
lahf
out
fistpll
sbb
or
lods
pushf
lret
ljmp
mov
add
add
push
mov
sbb
mov
cwtl
mov
in
aad
jg
lods
into
inc
inc
lods
hlt
cmp
dec
adc
mov
mov
dec
daa
push
xchg
dec
outsb
test
mov
jg
bound
inc
sub
mov
ljmp
push
das
jmp
in
mov
test
enter
jno
xchg
jp
sbb
outsl
mov
sub
decl
shrb
push
jmp
cmp
insb
ja
sbb
aam
rol
ret
decl
xchg
adc
mov
adcb
xchg
jp
insl
fadds
adc
ss
fildl
scas
out
out
imull
cld
cmp
cmp
inc
dec
insl
jo
pop
sahf
push
dec
imul
cmpb
loopne
notl
rclb
dec
push
in
pop
jno
cmc
add
lcall
ljmp
in
cmpsl
jns
jecxz
mov
fcoml
mov
or
push
out
ret
xorl
lcall
pop
fistps
enter
fsubrs
test
shlb
mov
outsl
jnp
jge
push
jmp
pushl
fildl
jnp
lret
xor
rol
sarl
mov
lods
fstpl
add
cli
loope
lods
push
or
pop
push
call
cmp
xlat
aaa
outsl
in
cmp
idiv
jmp
sbb
mov
mov
in
lds
rol
imul
cmp
jmp
idiv
xchg
push
stos
dec
insb
or
pop
outsb
ror
jae
out
nop
push
insl
xchg
div
mov
data16
lcall
mov
xor
in
jnp
inc
mov
mov
in
lods
loopne
add
ficomps
push
cmp
popa
movsl
push
popa
or
test
adc
push
cmp
jmp
push
shlb
stos
ds
mov
add
test
fisubl
xchg
adc
loop
mov
dec
nop
fcoms
mov
push
add
pushl
jbe
sarl
inc
rolb
shll
movsb
ja
pop
nop
sub
sahf
jo
dec
cmp
jmp
jne
lods
mov
ljmp
outsl
lea
lahf
into
sub
and
idiv
insb
jnp
sbb
push
addr16
movsb
pop
mov
popf
out
sbb
stos
ljmp
in
fcompl
adc
add
pop
fcoml
lds
into
nop
sti
es
mov
les
mov
lock
pop
pop
in
cltd
jp
push
rorb
js
popf
jmp
ja
and
sarl
inc
push
sbb
pop
cli
adc
in
fwait
mov
aam
loope
jmp
pop
push
into
sbb
xor
ror
adc
shlb
push
adc
hlt
cmp
cwtl
stc
mov
jecxz
mov
cmp
dec
or
cmp
fildll
push
aas
repz
cmc
rcrl
mov
fimuls
xor
or
mov
pop
incl
pushf
js
sub
sub
lock
cltd
push
pop
lds
mov
clc
inc
push
inc
and
repnz
in
push
out
adc
adc
and
call
adc
xchg
adcl
adc
cltd
sbb
dec
cmp
jmp
cli
decl
xor
sbb
cwtl
xchg
dec
stc
adc
jb
push
ja
mov
mov
inc
shll
adc
aad
ds
out
xor
push
jge
sbb
and
sub
dec
jecxz
mov
in
push
xchg
into
fwait
jne
mov
and
push
push
dec
ja
pop
mov
xlat
stc
lds
decl
mov
pop
jnp
jmp
adc
push
int
stos
add
sbb
jp
std
sub
lret
jg
in
out
ror
push
daa
aam
push
add
and
sbb
push
inc
push
xchg
out
es
xchg
jl
push
das
inc
sbb
and
jae
scas
mov
ds
pop
pop
push
ja
das
cli
mov
xchg
enter
pop
ret
das
and
inc
incl
add
gs
pop
jmp
jns
push
add
jmp
enter
movsb
int
ljmp
mov
repnz
dec
pop
push
xor
mov
ds
icebp
hlt
fucomip
arpl
imul
ret
fcoms
nop
mov
sti
add
out
push
cmpsb
jnp
xor
mov
ja
sbbl
std
push
fdivl
inc
xchg
ret
arpl
test
lds
sub
push
pusha
test
adc
das
clc
incl
add
jecxz
mov
xor
sub
inc
sbb
adc
inc
xchg
fnstenv
push
sbb
mov
add
lcall
lcall
push
mov
aaa
les
jecxz
adc
mov
sub
sahf
ds
lods
xchg
pop
std
jmp
push
loopne
mov
fs
or
push
call
nop
out
scas
scas
mov
xchg
mov
and
jecxz
ja
in
jg
fistps
jbe
mov
lea
push
aaa
cmp
xor
shrb
lcall
xor
das
push
fs
in
cmpl
leave
icebp
fucomp
and
rcll
std
pushl
mov
shll
sti
cwtl
test
rcrb
and
add
fwait
clc
pushl
sub
add
or
fsub
loopne
ljmp
test
sub
test
xlat
sbb
std
leave
push
pop
dec
clc
inc
push
cmc
mov
inc
xchg
call
decl
dec
icebp
cmc
mov
ret
movsl
fldl
std
out
mov
lods
pop
or
movsb
push
cld
add
push
sahf
dec
shrl
fnstenv
and
mov
push
mov
rol
inc
insl
jnp
popa
rorl
popf
repz
push
leave
push
fcomip
pushl
outsl
stos
xchg
data16
dec
jl
in
pop
and
or
dec
gs
ljmp
fsubr
mov
fdivs
xchg
inc
pusha
mov
popa
adc
int
lcall
xor
fsubrs
inc
icebp
clc
sbb
adc
test
idiv
adc
cmp
lcall
int
push
and
jnp
sbb
cwtl
inc
pop
gs
stos
clc
pop
pop
xchg
ds
push
test
arpl
pushf
inc
sbb
insl
cmc
xor
repz
std
insl
mov
push
inc
dec
adc
inc
arpl
cld
mov
mov
cld
jns
stc
mov
push
es
sarb
adc
mov
inc
mov
push
add
push
sub
ficomps
adc
decl
pop
dec
cmpsl
add
test
fstpl
popa
cmp
sub
jg
cli
sbb
mov
cs
dec
add
jg
jo
in
jp
decl
push
mov
mov
ljmp
lret
xor
mov
dec
push
jle
mov
mov
cwtl
or
jne
inc
out
test
fdivs
dec
notl
call
std
icebp
data16
fnstsw
test
add
fs
add
fs
sub
mov
call
xor
out
push
add
fidivs
int3
shll
or
cmp
je
jmp
cmc
cli
mov
scas
movsl
cwtl
xorl
inc
imul
icebp
pop
bound
clc
jmp
scas
push
sbb
mov
mov
call
fsubrl
std
fcomip
push
outsl
xchg
mov
mov
pop
test
sub
mov
inc
add
lock
pop
inc
mov
incl
rcrl
pop
pop
dec
sub
dec
push
pop
cwtl
mov
or
sti
fwait
fwait
push
in
cli
jmp
decl
pop
cmpsb
add
mov
sbb
mov
nop
jle
cmp
mov
inc
mov
icebp
pop
ss
add
lcall
int
adc
jmp
insl
addr16
jmp
loopne
jg
jecxz
imul
outsl
xor
imul
cld
add
xchg
cld
daa
les
pcmpeqw
xchg
lea
insl
shr
sbb
jae
outsb
push
cmpsb
lea
dec
test
mov
fdiv
addb
jp
sti
stos
sti
sub
incl
dec
orb
or
sub
sbb
jecxz
inc
xchg
shlb
ja
aas
lret
pop
insl
sub
mov
decl
out
jle
jl
call
inc
leave
fiaddl
aad
mov
cltd
rclb
fists
imul
mov
incb
jg
aam
notl
dec
or
loop
test
frstor
aas
ret
xor
decl
push
clc
imul
adc
mov
push
mov
insl
int
mov
movsl
push
inc
push
sub
out
mov
jae
enter
ljmp
mov
enter
and
mov
jmp
push
inc
lret
pop
jne
add
decl
mov
sbb
negl
sbb
fdiv
push
cmp
clc
sbb
mov
cld
or
aad
mov
pushl
sub
sub
shl
adc
fiaddl
or
xorb
notb
loop
decl
fnsave
js
inc
xchg
mov
loope
sbb
xchg
les
in
mov
dec
mov
or
jecxz
lods
xorb
sub
test
mov
mov
movsb
cmp
aas
cld
fdivrl
jmp
cld
xchg
andb
out
cmp
movsl
ljmp
ljmp
dec
jo
int3
aas
daa
mov
xchg
int
jle
jne
dec
call
ljmp
mov
lock
adc
fs
inc
or
inc
sub
fwait
sub
ljmp
fsubrs
mov
ljmp
add
sub
add
mov
inc
jbe
fidivs
mov
mov
sbb
inc
xchg
decl
mov
gs
push
adc
mov
jp
add
jg
in
das
inc
stc
mov
pop
out
pop
jecxz
ficoms
sub
insl
dec
cld
inc
push
pushl
lock
add
les
push
push
fs
sbb
mov
in
test
pusha
xchg
jns
incl
in
popa
inc
lcall
cmp
cmc
test
mov
pop
repz
ljmp
push
dec
jo
or
int3
movsb
pop
sahf
adc
out
add
mov
push
add
out
sub
cmp
lods
mov
mov
aad
lods
les
fcoms
xchg
clc
mov
sarb
and
xchg
fistpl
cmp
in
jecxz
in
sub
ficompl
mov
mov
mov
or
negb
lahf
mov
pop
jmp
xchg
mov
pop
ret
jg
fisttpl
push
xor
pop
lods
jmp
jge
mov
mov
pop
jecxz
decl
ds
sbb
pop
mov
addr16
in
mov
or
sti
ds
incl
sbb
cs
pop
lcall
or
scas
jne
xor
or
into
add
mov
xor
pusha
jg
int3
xlat
push
roll
jmp
out
lret
repnz
scas
leave
jnp
imul
test
inc
cld
push
adc
mov
mov
call
sahf
add
adc
lds
shll
int
inc
mov
dec
sub
mov
dec
cs
jmp
fmull
push
inc
or
pop
push
inc
sub
in
cltd
xchg
xchg
into
cli
loop
insl
fldenv
xorl
lea
mov
pusha
call
push
stc
notl
ljmp
mov
enter
cmp
dec
es
mov
inc
jp
pop
sub
ds
outsl
test
mov
jle
clc
call
es
mov
push
adc
inc
inc
loope
xor
mov
cmpsb
mov
clc
icebp
add
cmp
mov
test
add
mov
sar
ljmp
fwait
sarb
filds
shll
push
add
or
pop
mov
adc
jne
das
pop
data16
push
testl
jge
jnp
js
std
mov
out
adc
pop
cmpsb
push
jnp
sub
nop
push
das
jbe
imul
pushl
or
ret
xchg
in
push
xor
sti
pop
paddb
in
das
sbb
xlat
cltd
ret
sti
jg
pop
mov
pop
jno
ja
cmpsl
adc
outsl
int
icebp
fbstp
fst
jg
loopne
mov
test
xchg
call
jge
ja
cli
mov
repz
mov
push
das
cmpsb
mov
gs
xor
pushl
add
scas
mov
mov
push
push
mul
jnp
adc
mov
mov
push
lea
mov
jg
rolb
imul
mov
dec
test
insl
add
jmp
pop
aas
or
xchg
cmp
sub
push
xor
int3
or
jae
lock
in
idivl
lods
xchg
mov
lcall
mov
cmpsl
mov
enter
nop
jecxz
inc
jno
inc
cs
push
mov
xor
push
std
jmp
mov
fsubs
lods
js
sub
inc
cmp
shr
aad
fdivl
and
lret
jmp
xor
das
test
mov
add
call
fs
enter
pop
and
in
ljmp
jns
call
jnp
add
movsl
push
xchg
sub
fisttps
jecxz
jns
movsl
and
andl
fmull
fmul
js
cmp
lcall
jmp
push
fs
ljmp
jp
jl
in
inc
jl
mov
pushl
addr16
popf
dec
in
inc
hlt
mov
pusha
sbb
into
dec
movsb
sub
cmp
sbb
test
add
in
test
pop
cmpl
push
pop
pop
ret
pop
and
pop
scas
loopne
movsb
aad
push
cmp
xor
dec
jg
mov
call
fmull
sbb
add
mov
jmp
pop
xor
scas
imul
cmp
inc
inc
push
inc
add
lds
lock
push
pop
pop
enter
insl
xchg
push
xor
inc
mov
nop
cltd
daa
push
jo
xlat
aad
jle
jno
nop
outsl
mov
fsubl
cmpsl
sub
aas
je
pop
sbb
jmp
imul
mov
push
cltd
jg
dec
mov
aas
and
loopne
enter
imull
mulb
ljmp
pusha
xchg
mov
ja
add
mov
out
aas
add
or
popf
std
jmp
pop
xchg
lea
lcall
add
loopne
inc
mov
push
arpl
inc
sbb
inc
push
out
dec
aad
add
sub
pop
hlt
push
jmp
xchg
out
dec
movsl
into
sbb
add
sub
jmp
xchg
or
pushl
arpl
mov
sahf
lock
aaa
xorb
fbld
jle
dec
adc
roll
decl
dec
pop
mov
or
notl
mov
ret
mov
push
jle
clc
push
or
push
cmp
ljmp
lret
adc
pop
in
pop
add
pop
int
mov
mov
js
sar
incl
dec
sbb
arpl
insb
into
jle
sahf
shll
jg
mov
push
pop
rorl
add
xor
mov
pop
lock
dec
dec
shlb
cmp
mov
loop
popa
or
jnp
aam
adc
mov
inc
mov
sub
mov
jmp
sti
dec
lea
mov
inc
sbb
pop
les
fcmove
jle
call
mov
jg
sti
adc
addr16
xor
inc
scas
fstpl
xor
aaa
shl
add
stos
fcoms
clc
jl
rorb
xor
aam
shl
jge
pop
jmp
jmp
cmp
stc
push
loopne
testb
fiaddl
lock
leave
sbb
loope
adc
loope
mov
or
js
orl
je
out
stos
xchg
iret
inc
inc
xchg
shrb
pop
out
sbb
jle
ljmp
xbegin
xchg
cld
pushl
xor
sbb
pand
cmpl
jns
cmp
mov
loopne
dec
and
or
add
clc
aad
dec
int
out
mov
jl
loopne
call
jne
ficoml
lahf
insl
cli
push
mov
lods
cltd
adc
or
jl
decl
inc
in
loope
pop
repz
sub
jmp
shlb
jno
add
cvtdq2ps
cmp
leave
xor
jmp
jge
mov
sub
or
sbb
mov
xor
fwait
add
les
lcall
xor
and
jb
lods
adc
aaa
lret
sbb
dec
or
mov
jb
aaa
shlb
test
or
ret
push
sub
mov
icebp
cld
cli
xor
jmp
add
fwait
adc
imul
xor
divl
adc
div
es
xchg
jg
hlt
decl
add
adc
jo
cmp
xchg
decl
push
xchg
and
test
popaw
aaa
ret
cmp
std
cld
imul
inc
inc
mov
sbb
insb
test
xor
xor
lcall
cmpsl
rcrb
movsb
add
cmp
push
cli
sbb
ret
jmp
sbb
imul
loop
loope
push
jno
push
aaa
xchg
and
ljmp
mov
cmc
pop
popa
mov
push
dec
and
sahf
fldenv
loope
jns
gs
push
pop
cmc
xchg
rcrb
lcall
call
and
lods
sub
ss
mov
xor
cmp
pop
dec
test
jecxz
jmp
je
xchg
dec
jno
xor
adc
and
jae
adcb
push
jl
cld
pop
dec
or
cmpsl
pop
pusha
hlt
cwtl
xor
call
outsl
idiv
mov
push
imul
or
dec
imul
decl
jo
into
jge
mov
or
add
sbb
clc
js
ds
aaa
cwtl
sar
inc
divl
loopne
push
inc
dec
pop
lcall
loopne
jbe
xchg
dec
adc
rol
xor
lahf
mov
fdivl
cs
xor
dec
les
dec
shll
mov
cmp
pop
xchg
sbb
push
mov
mov
cmc
inc
jb
xlat
mov
lret
jp
or
mov
add
jg
andl
lds
jns
push
push
xchg
insl
pop
sti
sar
ljmp
jmp
mov
ss
mov
and
fildll
jb
movsl
mov
imul
incl
test
out
lcall
add
pop
or
jmp
out
pop
mov
dec
lcall
mov
pushf
mov
cmp
pop
mov
jbe
xor
ljmp
sbb
xchg
into
nop
fldl
int3
fwait
cli
push
fsts
js
push
jmp
pop
call
sysretw
test
push
jge
xor
add
cmpsl
int
sbb
sub
std
inc
aaa
add
mov
outsl
or
enter
roll
jp
jbe
xchg
incl
pop
mov
dec
cwtl
jecxz
in
sub
fidivs
nop
rolb
jmp
leave
mov
cmp
std
lcall
dec
andb
jns
out
lds
or
cmp
clc
sbb
testb
js
inc
jecxz
xor
sub
fcomip
xchg
stc
loope
pusha
ds
data16
pop
fcmovbe
ret
pop
sbb
sub
shrl
imul
decl
cmp
dec
lret
sahf
popf
cmpsb
jp
mov
push
or
adc
mov
pop
decl
stos
or
mov
int
popa
in
out
aaa
jne
imul
cld
outsl
clc
push
xchg
dec
xorl
sbb
xchg
aad
cmp
les
enterw
ljmp
outsb
jmp
mov
xor
adc
cs
mov
dec
jmp
jl
dec
es
jmp
das
in
adc
mov
xchg
jbe
fdivs
push
imul
lcall
push
pop
pop
pusha
inc
stos
ja
inc
imul
imul
push
rcrl
adc
pop
push
pushl
push
cmpl
or
addr16
mov
insb
jmp
movsb
das
jo
pop
or
lcall
inc
popf
jno
out
into
scas
outsl
dec
lea
imul
fimull
ljmp
sahf
dec
pop
mov
or
mov
insb
push
insl
push
inc
or
je
jmp
inc
and
ljmp
xor
pop
stc
imulb
cmp
dec
into
inc
rol
push
pop
lea
inc
xchg
mov
pushf
imul
dec
fcmovnbe
push
fwait
rorl
lock
lcall
lea
lret
mov
in
loope
iret
mov
stos
inc
aas
or
sub
dec
pop
push
roll
pop
loop
mov
rorl
mov
fs
cli
inc
xchg
icebp
mov
push
push
shlb
push
inc
cli
push
add
adc
sub
fldl
mov
inc
lahf
jnp
pop
test
clc
jmp
cmpsl
inc
mull
pop
stc
imul
inc
inc
ja
icebp
out
sub
xchg
push
testl
inc
mov
in
jg
mov
lret
in
gs
aam
push
ret
jmp
insb
fnsave
stos
out
sbb
adc
jg
xor
popf
test
push
clc
movsl
imul
jae
fcmovne
push
aad
pop
fucomp
fisubrs
lcall
fwait
or
pusha
push
xchg
xchg
mov
push
out
popa
addr16
pop
lcall
lcall
scas
push
or
or
cmp
repnz
cmpsb
insb
loopne
lods
jmp
cwtl
divl
cmc
testl
pop
cmp
das
movsl
push
adc
aaa
jns
sub
loope
mov
lahf
inc
enter
pop
lcall
cmp
loope
sbbb
cmc
fnstenv
call
jmp
sbb
xchg
lock
in
fidivrs
outsb
inc
iret
jnp
adc
test
in
rolb
call
push
out
pop
jp
cli
leave
dec
in
xor
mov
fisttps
sar
mov
fmull
insb
adc
cmp
push
xchg
pusha
mov
sbb
or
cmp
vmovupd
jns
adc
lea
jns
xchg
fs
add
test
xchg
dec
cmp
les
sti
mov
mov
jg
jo
mov
mov
or
repnz
add
sarb
call
xchg
sub
xor
test
std
jmp
popa
icebp
xchg
fidivl
std
lods
xchg
out
push
mov
lcall
mov
jae
push
lods
adc
mov
mov
mov
jno
lcall
jb
clc
testl
xchg
popa
dec
clc
mov
sub
lods
inc
out
sar
idivl
lcall
xor
mov
mov
incl
aam
adc
test
or
in
pop
cwtl
fiadds
ret
cmp
pop
aas
mov
fsubr
sbb
je
sarl
dec
inc
movsb
inc
xlat
xchg
repz
call
adc
push
mov
call
mov
inc
scas
mov
imul
sub
rol
adc
mov
lcall
jle
and
push
call
ja
pop
scas
in
pop
notb
ret
ret
out
sub
lcall
xor
dec
loope
xor
xchg
jecxz
and
call
hlt
jl
adc
add
ror
mov
lods
jns
movsb
gs
jg
dec
and
loopne
dec
sbb
sbb
data16
or
push
cld
push
add
mov
cli
iret
mov
mov
je
outsb
add
cmp
lds
push
mov
adc
repz
mov
nop
call
xor
sub
in
call
pop
aad
xchg
sbb
cmc
movsb
lret
inc
xor
xlat
jnp
dec
xor
jg
das
adc
lret
mov
ret
ljmp
jg
lea
lret
push
adc
fnsave
into
sbb
decl
jnp
mov
fs
lods
test
scas
cld
iret
sub
sbb
adc
xchg
jae
shl
nop
ljmp
test
bswap
add
cmpsl
and
movsb
dec
inc
in
pmaxsw
xchg
mov
call
sbb
xchg
imul
mov
or
adc
mov
pop
inc
sbb
leave
or
clc
ljmp
das
mov
dec
clc
mov
dec
repz
int3
xchg
mov
stc
mov
lcall
aam
push
pop
out
enter
stc
mov
lahf
jle
sbb
sbb
pushf
pop
mov
movsb
lret
sub
xchg
mov
mov
dec
lret
mov
scas
xor
cmp
cwtl
in
iret
and
xor
pop
pop
ret
dec
push
push
das
pop
mov
mov
sahf
fs
decl
push
aas
mov
jle
xor
inc
scas
mov
or
out
and
enter
pop
aad
or
fisubs
enter
stos
mov
jg
mov
mov
mov
xchg
push
sub
adc
pushl
mov
pop
fwait
and
inc
and
or
sbb
xchg
push
xchg
pop
fcmovbe
adc
adc
insl
xor
xlat
xor
shl
cmp
adc
xchg
dec
mov
dec
sbb
lods
and
mov
push
or
sbb
aas
arpl
nop
mov
pop
sbb
ljmp
cmpsl
push
lods
mov
lret
js
stos
arpl
or
cmp
imul
clc
xor
xlat
rcrb
rcll
pop
inc
and
or
mov
lret
incl
jae
xchg
xchg
jae
aad
in
loope
icebp
sbb
dec
xchg
jmp
adc
pop
insl
cld
dec
ss
std
jne
scas
xchg
aam
in
loop
incl
push
and
xchg
or
loopne
mov
mov
aaa
movsl
call
xchg
xchg
push
xchg
repz
push
cli
jmp
sarl
daa
jb
lahf
mov
dec
or
xor
outsb
adc
test
aas
cwtl
out
jecxz
repz
pop
stos
ljmp
dec
shr
cmp
add
iret
ds
or
mov
outsl
leave
shlb
lahf
outsl
cmp
enter
out
pop
mov
mov
pushl
jae
xlat
cmp
enter
arpl
test
adc
pop
mov
and
fsubs
decl
pop
faddl
rorl
js
movsl
inc
xchg
xchg
mov
sub
mov
inc
ficoml
divl
sbb
loop
adc
jmp
test
data16
pushl
pusha
inc
sub
jns
sub
das
or
sbbl
dec
test
xor
ljmp
jle
mov
out
repz
jmp
jmp
pop
dec
jg
daa
mov
cmp
dec
jae
mov
mov
or
je
mov
push
jnp
addb
or
and
lcall
mov
pop
sbb
int
ficoml
fisttps
jmp
sub
pop
adc
jnp
outsl
mov
mov
inc
jmp
pop
inc
iret
enter
pop
mov
cmp
out
out
fcomip
jg
push
ljmp
add
push
rcl
and
jl
into
jb
or
incl
pusha
xor
sub
pop
mov
cmc
mov
sub
call
iret
inc
ljmp
sub
stos
xor
pop
repz
pop
nop
xor
xchg
inc
cmp
add
repnz
xor
fbld
xchg
or
xchg
sbb
lret
dec
mov
xor
incl
jo
fsubrl
je
fsubrl
jp
arpl
dec
xor
dec
dec
ret
xor
jns
push
jno
xor
lea
call
popa
out
mov
sbb
sbb
test
and
imul
mov
mov
ret
cs
dec
cmpsb
mov
sahf
adcb
cmpsb
xor
in
icebp
pminsw
mov
and
mov
lcall
push
cmp
inc
lcall
pop
and
inc
out
and
push
js
inc
out
adc
sbb
out
out
cltd
push
ss
mov
iret
jmp
jbe
out
mov
or
jmp
mov
test
and
test
ljmp
xor
sahf
lahf
jp
ss
decl
dec
fcmovnu
sbb
rcl
rcll
movsl
int3
adc
clc
ret
hlt
jge
pop
fnstsw
call
ja
ljmp
mov
fldt
js
cmpsl
bound
scas
pusha
cmp
jg
push
sbb
or
notl
xchg
data16
lock
sub
adc
sbb
pushl
mov
fisubl
out
rorb
xor
ret
cmpsl
mov
sub
push
pop
sar
das
clc
lcall
xor
jle
stos
add
cltd
and
ficompl
mov
std
pop
sbb
pop
cli
push
mov
clc
mov
repnz
call
test
or
mov
faddl
mov
inc
mov
cltd
test
lcall
pop
add
mov
fldt
nop
rorl
lret
jmp
xchg
fldt
jg
sbb
cmpsl
in
rorb
cmp
push
push
rclb
lcall
enter
test
mov
and
push
sbb
adc
inc
cmp
xchg
and
call
call
ret
xor
pop
push
jg
sub
mov
int
lret
and
adc
jg
pushl
cltd
mov
aad
popf
outsl
cmp
xchg
push
or
adc
push
pusha
mov
adc
push
mov
insl
out
push
movzbl
xor
mov
enter
and
cmp
lcall
bound
inc
push
or
decl
mov
movsl
lods
push
xchg
xchg
shrl
dec
call
out
notb
mov
push
imul
add
jb
pop
mov
cmp
lock
movsl
test
in
xchg
jmp
mov
lret
xor
sahf
inc
mov
repz
ljmp
mov
fcom
aas
push
je
lods
out
mov
jo
cmp
jecxz
mov
jg
test
xchg
shl
ret
adc
sub
aas
das
addr16
call
aam
cld
std
out
adc
jae
add
arpl
mov
adc
and
pushl
jo
xchg
xchg
outsl
add
cmp
clc
popa
push
fsubrs
push
scas
fildll
insb
xor
lea
lea
clc
stc
jge
pop
pop
sahf
xchg
sub
ljmp
cmc
mov
lea
cmpl
mov
or
mov
xor
mov
in
mov
jg
fsubp
jg
add
sarb
fnstcw
dec
sbb
inc
in
stc
idivl
mov
cmp
test
insb
aaa
xor
mov
xchg
je
or
pushl
xchg
push
jbe
dec
push
sbb
call
pushl
or
push
ret
push
mov
pop
int3
pusha
and
decl
push
fidivrs
mov
pop
lods
stc
test
jecxz
mov
push
mov
out
pop
jnp
cmp
rolb
push
cld
mov
gs
mov
xor
xchg
fsubr
aaa
incl
adc
stc
adc
cmp
fstpt
mov
divb
call
xchg
cmp
imul
push
push
sub
jp
in
add
mov
mov
fcoml
hlt
je
insb
pop
mov
jecxz
sti
push
adc
into
in
sub
sub
push
stos
or
lods
cwtl
leave
adc
fisttps
fldenv
or
or
dec
shlb
push
popa
aad
mov
lcall
cwtl
mov
sub
dec
mov
ljmp
es
lcall
idivl
mov
out
rol
sbb
out
add
mov
leave
test
in
call
decl
fsubl
insb
sbb
push
jbe
sub
mov
loope
call
aam
and
sti
pop
sti
out
xchg
sub
xor
xor
jl
mov
decl
leave
lcall
pop
outsl
pushf
ret
push
int3
and
jg
cmp
mov
pop
jmp
mov
call
inc
hlt
dec
xor
xor
add
loop
xor
lds
push
ret
mov
fnsave
mov
and
sub
xor
lcall
addr16
pop
rcr
xlat
icebp
inc
or
sub
pop
mov
cltd
stc
jns
add
lcall
sbb
nop
ret
outsb
sar
movsb
xchg
cmpsl
mov
cwtl
sar
mov
add
adc
mov
push
sub
mov
push
sbb
pop
xchg
std
or
fistps
push
cli
pop
inc
fdiv
mov
xchg
inc
push
xlat
xchg
sbb
jmp
jnp
mov
xchg
in
xchg
sub
hlt
outsl
push
pop
stc
test
jmp
pusha
push
xor
add
aad
adc
dec
pop
mov
sub
pop
es
rcll
ljmp
cmp
adcb
adc
push
and
dec
fistpll
aaa
sub
sbb
ss
add
mov
push
shrb
std
rcll
rclb
jbe
ffree
xchg
pop
cwtl
mov
int3
ljmp
aaa
or
nop
add
inc
rorl
hlt
ljmp
adc
sarl
aam
lods
arpl
data16
mov
push
scas
push
je
and
clc
fildll
aaa
lret
mov
and
out
mov
push
xor
aam
loop
dec
dec
out
dec
push
out
pop
adc
out
or
dec
inc
clc
jp
test
xchg
cmp
stos
idiv
pushl
sub
push
fstl
mov
xor
imul
adc
mov
mov
mov
test
mov
push
orl
std
call
mov
mov
push
add
pop
ret
push
inc
sub
rcrl
pushl
cmp
imul
adc
inc
mov
lcall
push
add
pop
imul
or
popl
ss
xchg
add
ret
push
mov
shl
cmp
inc
bound
or
ljmp
xchg
pop
inc
clc
mov
fldcw
in
repz
lock
mov
ss
jl
adc
arpl
jbe
cld
stos
mov
gs
ret
mov
cmp
cmp
push
xor
fildl
std
cld
jg
and
inc
mov
mov
cmp
cmp
ss
add
mov
inc
jp
ret
push
aas
and
fbstp
cmp
mov
mov
xlat
sahf
mov
imul
fst
pop
inc
mov
adc
fidivs
jecxz
and
bound
rclb
pushl
adcl
scas
popa
pop
pop
xor
cmpb
dec
cmpb
stos
xor
decl
mov
mov
jae
jo
clc
cwtl
push
test
cmp
shr
or
loopne
outsl
clc
push
inc
in
shrb
dec
aam
out
js
outsb
mov
mov
stos
pop
into
outsl
clc
mov
out
fmull
pusha
psrlq
add
popa
xchg
cli
mov
xchg
shll
hlt
adc
adc
scas
cli
cmp
push
cmp
icebp
jmp
and
pop
pop
cmp
xor
das
pop
inc
pop
rorl
movsl
xor
lcall
into
jmp
roll
repz
fdivr
imul
scas
jne
fistpll
jns
xchg
inc
adc
aam
dec
or
mov
cmpsb
mov
ja
ja
or
xor
das
sub
cltd
dec
aad
lcall
mov
mov
or
arpl
and
xchg
fistl
jne
incl
fildl
jecxz
inc
jl
addr16
movsl
xchg
aaa
mov
imul
out
dec
out
repnz
pop
fsubs
mov
sbb
lcall
enter
movsl
mov
out
out
push
aad
movsl
fs
outsl
adc
mov
into
sub
call
cmp
int
insl
ja
pop
fadds
loope
mov
jb
sti
push
fcmovbe
sub
pop
lret
popa
or
ljmp
xchg
push
mov
cmp
ret
hlt
cmpsl
push
sti
cmp
fistps
data16
decl
mov
push
dec
in
out
out
lret
push
mov
imul
insb
dec
xor
shrl
sahf
incl
cwtl
add
pop
adcb
push
cld
decl
cld
mov
ficompl
push
sahf
rcr
mov
lods
testb
pushl
fwait
mov
out
loopne,pt
iret
aam
xchg
addb
pop
lds
cwtl
lods
inc
dec
inc
xor
lcall
aas
enter
pop
fwait
sub
sub
mov
hlt
cmc
arpl
mov
xor
xchg
or
mov
and
jle
pop
jb
psadbw
imul
or
jle
xchg
sahf
sub
and
xchg
or
fistl
sbb
test
decl
add
mov
inc
insl
out
aad
lock
xchg
sub
sbb
mov
addr16
jmp
pop
stos
stos
inc
imul
fdivrl
mov
les
scas
cmc
or
out
cmp
dec
pusha
rolb
ss
push
jbe
sub
add
add
xchg
test
and
in
das
jmp
jmp
push
repnz
movaps
sar
sub
pop
jb
xlat
fldcw
arpl
jnp
mov
ljmp
repnz
mov
pop
xchg
sti
add
hlt
xchg
jg
push
dec
pusha
scas
ss
and
fdivrs
xchg
mov
jg
mov
movsb
mov
dec
add
sarb
ret
lods
push
in
insl
call
and
push
ret
jns
jp
push
lods
mov
ss
popa
js
xor
sbb
lret
clc
add
mov
jmp
aas
dec
jle
das
ljmp
mov
cmp
mov
stos
push
xchg
add
out
jecxz
in
lcall
out
mov
movsb
pop
int
xchg
mov
jl
and
mov
push
inc
clc
dec
call
fdivs
pushf
js
pop
xlat
dec
jae
fstpt
gs
incl
xlat
dec
ja
movsl
loope
scas
mov
test
lods
add
call
out
add
in
add
fs
push
ja
or
inc
cmp
aad
out
cmp
jno
adc
fldenv
and
fsubrl
call
loop
xlat
pop
test
jbe
imul
das
mov
ljmp
xor
or
and
repz
jns
pushf
sbb
lea
leave
sub
decl
cmpsb
push
aad
jecxz
adc
cmc
mov
mov
mov
xor
insl
cmp
mov
enter
push
push
adc
fidivl
call
mov
loop
mov
bnd
pop
icebp
inc
hlt
mov
lret
jle
stos
or
js
sbb
inc
jp
and
decl
dec
bound
xor
pop
nop
mov
or
ljmp
cld
aad
mov
ret
add
push
fistpll
jmp
fwait
xor
jg
xchg
ret
in
and
mov
orl
push
mov
clc
rorb
in
das
cli
fsubl
stos
adc
jnp
test
jne
pop
add
scas
add
cmp
inc
insb
and
mov
scas
outsb
lret
pop
adc
sbb
out
pop
in
cmc
dec
sub
cmp
stos
shlb
push
pop
fmull
inc
movsb
mov
lret
lods
inc
fsubrl
fisttpll
and
mov
lcall
out
into
out
mov
test
xor
jmp
jns
lcall
test
ds
xor
mov
mov
add
mov
pushl
mov
addr16
mov
inc
xor
jb
or
mov
orl
clc
in
jmp
inc
testb
fwait
aad
rcrb
lods
into
lock
fimuls
sbb
and
push
jp
or
test
or
or
sub
arpl
ljmp
xor
xor
cmp
sub
pop
mov
decl
and
rolb
dec
sarb
pop
das
popa
push
dec
adc
mov
ja
call
xchg
insl
sbb
add
jge
int3
mov
jae
mov
jae
stos
jmp
fcmovne
ss
jo
sub
xchg
cmpl
scas
push
jb
ljmp
aad
sub
mov
popf
push
adcb
scas
and
adc
push
add
add
or
xorb
cmpsb
xchg
cmove
dec
daa
cmpsb
mov
hlt
inc
pop
fisttps
decl
shr
jae
ds
pop
and
rcr
fcoml
dec
mov
mov
cld
js
daa
hlt
cmp
dec
fbstp
cmpb
pushf
into
xchg
lcall
rclb
cmp
and
rorb
test
mov
mov
pop
icebp
and
jne
push
dec
lock
sub
adc
add
xchg
mov
jne
mov
inc
lcall
or
xchg
out
idivl
loope
mov
push
mov
stos
and
ljmp
clc
rol
inc
xchg
bound
mov
and
nop
bound
adcb
fnstenv
push
ja
sbb
stos
stc
push
dec
xor
incl
pop
pusha
jmp
out
adc
aaa
or
xor
fstps
inc
push
pop
outsb
lret
inc
pop
cmovne
pop
aad
jle
dec
jmp
arpl
lods
scas
add
int
je
mov
adc
pop
xor
jle
jge
inc
cmp
adc
das
cli
pushl
push
in
cmp
fs
loop
aam
jns
call
cwtl
push
in
cmp
xlat
push
and
push
dec
mov
pop
orb
idivl
and
cmp
mov
pushl
shl
mov
xchg
mov
andb
stc
xchg
pop
call
sar
loope
decl
mov
jno
mov
movsb
imul
iret
adc
int3
mov
add
jmp
insl
daa
cmp
into
fsub
shlb
nop
clc
inc
nop
in
xor
cmpsb
xchg
sub
icebp
pushl
scas
add
or
cmp
jg
inc
dec
push
xor
ljmp
jp
push
int3
pop
or
repz
stos
mov
xchg
lcall
leave
adc
pushf
scas
sub
test
pop
cmc
sarl
jnp
inc
pusha
sub
mov
or
cmp
incl
xorl
mov
push
mov
pushl
adc
adc
cwtl
aas
insb
jp
pop
xor
jnp
inc
and
mov
decl
cli
stc
mov
mov
mov
leave
adc
stos
popf
cmc
ret
lods
dec
lret
sbb
ret
call
mov
int3
cld
nop
sbb
cmp
xor
int3
cltd
rcr
clc
call
push
cmp
dec
test
xlat
jne
mov
decl
hlt
and
sarl
fsubs
je
bound
lcall
pop
imul
fabs
loopne
out
imul
sarb
pop
or
out
lahf
push
mov
fs
inc
add
lcall
and
insb
aam
dec
lock
flds
scas
sbb
inc
out
xchg
cmp
out
cmp
imul
movsb
jnp
test
aad
adc
incl
push
sbb
push
dec
mov
mov
sbb
fwait
mov
loope
jl
add
pushf
clc
pop
fmul
sbb
sbb
add
cli
xchg
pushf
sahf
and
or
pop
mov
sbb
out
mov
sub
adc
adc
jg
sbb
mov
dec
fistps
aas
mov
in
in
pop
and
int3
fisttps
xor
pushf
xchg
push
cmp
rorb
jl
inc
mov
sbb
push
cmc
cli
jge
sarl
add
jp
mov
decl
fdiv
lods
inc
fcoms
pop
popf
mov
xchg
sbb
mov
jae
add
jl
mov
loope
push
mov
inc
shll
dec
dec
bound
add
or
push
aaa
int
sub
sub
dec
shlb
mov
sahf
shll
jp
jno
push
mov
pop
aas
and
call
cs
sbb
decl
push
mov
xchg
mov
or
shll
lcall
subb
lahf
fidivs
clc
inc
imul
incl
popl
fmull
daa
fcoml
pop
or
test
or
push
add
insb
out
xor
rorl
jl
adc
scas
cld
mov
insb
out
sub
imul
ds
sbb
sbb
cmp
and
add
cltd
cli
push
push
pop
andl
imul
iret
adcl
aad
ss
jnp
ljmp
shrl
inc
repnz
push
add
lods
nop
mov
fsub
ljmp
repz
or
or
xchg
pop
mov
inc
out
xchg
stos
clc
xor
add
or
pop
mov
sbb
pop
rorl
xor
mov
jg
jmp
mov
adc
in
cmp
jnp
push
xchg
or
push
decl
or
pop
std
inc
sbb
pop
in
push
repz
mov
idivb
incl
in
das
mov
fcoms
add
xor
pop
jno
addb
incl
cld
lahf
cmc
jbe
bound
ds
and
bound
mov
dec
jnp
xor
mov
lock
pop
sub
xor
pusha
loop
jecxz
std
push
jecxz
stc
pop
jns
xchg
pushf
lods
shlb
aas
out
add
aaa
xor
cmp
fsubs
pushl
xchg
pushf
daa
mov
dec
sar
aam
imul
ja
push
shll
and
call
xor
adc
cli
mov
aam
mov
lcall
je
push
je
mov
mov
push
dec
les
mov
sub
xchg
push
jmp
jmp
xchg
cmp
add
push
cmc
pushl
out
cs
jge
cmp
cli
lcall
iret
cmpsb
pusha
pop
out
ret
mov
sbb
in
bswap
or
dec
ljmp
cwtl
and
xchg
mov
cmp
pushw
cwtl
push
in
mov
jl
out
cmp
iret
pop
out
mov
and
imul
jle
or
dec
out
pop
or
push
gs
mov
or
jnp
inc
mov
cmpsl
das
sar
cmc
negb
daa
jne
mov
cmpsl
cmp
push
in
xchg
fst
lods
rcll
leave
cmp
leave
loop
fldenv
insb
outsl
jecxz
and
cmp
sub
popa
movsl
in
sbbl
movsl
pushl
push
push
sub
ret
sbb
sti
xor
mov
and
std
cmp
cmp
jno
aaa
cwtl
mov
rcr
cli
xchg
jnp
lcall
decl
pop
xor
sbb
jae
loope
fdiv
xor
or
arpl
cmpsb
mov
ljmp
cli
hlt
stos
es
mov
inc
iret
mov
fucomi
xchg
fwait
iret
outsb
movsb
pop
pop
idiv
enter
call
arpl
xor
sbb
ficompl
idivl
xor
add
gs
hlt
incl
mov
shlb
add
mov
aad
nop
orl
lcall
mov
cmp
lret
out
popf
and
mov
jno
cmp
fisttpl
test
adc
int
sbb
dec
scas
mov
fbstp
out
leave
es
les
scas
je
ds
pop
stos
pop
or
cmp
call
cltd
arpl
inc
das
incl
sub
aam
push
dec
xlat
mov
adc
lcall
shll
pop
sub
mov
add
fdivrs
in
mov
push
cmp
and
adc
push
xchg
cli
lods
daa
jae
sub
data16
dec
mov
or
aam
jg
push
iret
in
mov
mov
dec
insl
mov
sarl
call
jmp
inc
cmp
lods
xchg
aam
out
subl
xlat
decl
xor
xor
pop
inc
push
push
movd
gs
adc
jg
ds
jmp
ja
mov
and
adc
inc
dec
sti
add
xchg
xor
lods
hlt
jo
shrl
mov
jo
sub
dec
mov
or
adc
incl
jecxz
cld
arpl
mov
mov
out
enter
mov
mov
ljmp
xchg
mov
push
or
loope
repz
sti
pop
out
push
fwait
dec
movsb
stc
fildl
ds
mov
xor
orl
cmp
aad
loope
push
aaa
sbb
pushl
int
stos
popf
lods
pop
psllw
incl
sbb
cmp
mov
xor
add
in
stos
cmp
jbe
jne
xlat
and
push
cmp
incl
xor
andb
mov
mov
adc
or
lea
mov
sbb
inc
aas
or
xor
cmp
adc
fistpll
jl
push
incl
dec
mov
xchg
lds
insw
cmp
jecxz
push
push
mov
aas
shrl
cmp
outsl
outsl
js
cmp
add
lods
data16
and
bound
push
pushl
mov
and
aaa
jnp
pop
push
loop
sbb
mov
mov
mov
call
aam
gs
cld
xor
ret
enter
ret
test
jno
out
frstor
and
clc
decl
mov
push
and
repz
cmc
stc
rcrl
shlb
in
jg
ljmp
mov
cmp
daa
lcall
lods
jge
jecxz
xor
mov
xchg
shrb
xchg
sete
push
leave
clc
sbb
or
ja
jmp
add
dec
sub
xchg
sub
xchg
mov
pusha
cli
rcll
stos
bound
movsb
adc
push
imul
push
dec
push
js
dec
lods
outsl
dec
add
inc
dec
push
inc
push
int
hlt
sbb
add
jno
ret
push
std
lcall
int3
sub
or
repnz
xchg
cmc
mov
neg
lret
push
push
ljmp
jnp
xchg
scas
out
mov
shrb
ljmp
call
negl
pop
gs
xchg
push
and
push
jg
mov
inc
loop
insl
lea
xchg
jmp
mov
incl
inc
ss
push
push
inc
xchg
add
in
adc
aad
dec
mov
test
add
jecxz
std
call
mov
push
test
ret
push
shrb
ljmp
les
ds
sbb
xchg
xchg
call
mov
add
lock
in
out
test
hlt
mov
incl
jo
outsl
add
adc
dec
mov
lret
mov
clc
fcomip
les
jno
sub
and
push
inc
outsb
cld
fcompl
movsb
mov
mov
call
lcall
cmp
dec
xor
cmp
loop
jmp
pop
inc
and
pushf
fs
roll
push
sbb
fimull
mov
xor
cmpsl
daa
push
fsubs
hlt
adc
pop
repz
add
fadd
adc
cmp
mov
lcall
mov
xlat
sub
mov
or
decl
fsubl
pop
push
jle
ja
push
ss
cmp
jne
enter
je
les
sahf
iret
lcall
ljmp
rcr
ljmp
jle
push
test
rorb
xchg
add
lods
adc
push
adc
jbe
ds
out
cli
jg
stos
mov
mov
mov
xchg
loop
call
loopne
jg
mov
or
insb
jbe
mov
in
push
xchg
mov
subl
pslld
lods
pop
in
pop
xlat
loope
in
in
fcomip
pushl
ret
out
fistpl
mov
lret
test
mov
out
bnd
jne
fxrstor
nop
fldcw
push
loop
push
dec
pop
cltd
pop
dec
and
or
sahf
out
inc
iret
xchg
dec
push
arpl
xor
pop
scas
loope
mov
sub
inc
add
imul
cmp
inc
jp
and
nop
mov
dec
push
movb
xor
push
arpl
rcll
pop
lock
and
mull
cwtl
push
leave
ret
cmp
cli
jmp
dec
cmpsb
jle
sbb
sbb
or
xlat
inc
in
mov
js
mov
mov
xlat
jo
cld
cmpsl
xor
and
lock
aam
fsubrs
jle
fbstp
mov
out
js
les
fimull
aad
mov
adc
imul
cmp
pop
cmp
lcall
pop
xchg
enter
adc
jnp
push
imul
fnstsw
sub
jecxz
jg
decl
push
ljmp
je
sbb
cmp
std
sbb
clc
mov
pushl
hlt
xchg
sub
sahf
pop
cld
xlat
pushf
js
sbb
decl
dec
loope
pop
in
loopne
adc
hlt
jecxz
add
arpl
aam
jnp
mov
inc
rorl
je
mov
push
add
or
mov
clc
cmp
jne
xor
ja
call
add
rcll
adc
cmp
divl
sub
stc
ljmp
inc
mov
clc
inc
pop
sub
enter
pop
lock
daa
pusha
jnp
sub
and
ljmp
pop
push
aad
inc
movsl
int
fwait
jo
sahf
add
iret
cld
es
inc
icebp
bound
fdivl
add
das
pop
cmc
mov
das
ss
addr16
or
mov
jmp
in
ret
adc
clc
mov
xor
outsb
xchg
test
rclb
leave
inc
stos
aam
ja
ret
pushl
cld
pop
mov
sbb
mov
lcall
sub
mov
push
ret
imul
jns
inc
adc
movsb
cmc
das
mov
add
clc
xor
xchg
data16
mov
stc
repz
popf
push
loopne
xor
sub
mov
or
and
dec
dec
inc
sub
mov
clc
cltd
jecxz
ret
fwait
xchg
cmc
mov
push
cmc
inc
rcr
sbb
cwtl
test
in
push
mov
dec
push
mov
ret
lock
stos
cmp
scas
mov
cmpsb
push
sar
decl
or
sub
int
lcall
fwait
scas
loopne
jmp
scas
and
pop
mov
or
mov
repnz
ret
sbb
xor
xor
sbb
fists
mov
pusha
pop
lea
negl
insl
pop
xchg
clc
and
addl
fisttpll
jns
call
out
and
mov
lcall
aad
std
mov
pop
arpl
cld
test
sbbb
dec
dec
add
jmp
in
inc
lcall
dec
xor
sbb
ud1
xchg
cmp
jmp
push
mov
clc
call
push
iret
mov
ljmp
lods
or
mov
push
outsb
ficomps
das
sbb
mov
out
mov
mov
movsl
js
mov
outsl
xor
mov
sbb
in
jno
call
and
cmpsb
pushl
insl
and
fisubrl
call
arpl
dec
jne
xor
dec
inc
push
stos
dec
xorb
orb
jge
push
test
mov
xchg
mov
cmp
pushl
inc
mov
cwtl
jne
mov
push
mov
push
adc
sbb
decl
dec
sbb
insl
xor
das
clc
sub
xor
scas
out
lret
lea
adc
cltd
and
xor
into
leave
push
or
xor
leave
mov
jl
jle
pop
mov
mov
pushf
movsl
jmp
and
ficoms
mov
shrl
shrl
add
das
jg
push
out
test
pop
or
ljmp
mov
les
jl
mov
lcall
adc
adc
mov
adc
xchg
pop
jnp
xor
cmpsl
test
cli
lcall
add
mov
mov
in
mov
les
pop
div
sbb
decl
stos
fimuls
call
scas
cmp
lret
mov
and
xchg
gs
decl
loop
call
xchg
or
into
test
testl
push
adc
cld
dec
and
inc
dec
sbb
mov
loopne
adc
lahf
ljmp
cli
jmp
mov
xchg
mov
or
mov
fidivrs
ss
aaa
ret
mov
fisttpll
orb
or
lret
cmpsl
cmp
cmc
or
enter
mov
aad
decl
in
addb
or
sub
pop
jg
jo
xchg
jae
xor
cmp
repnz
insb
pushl
mov
mov
lret
sbb
mov
and
push
pop
scas
call
add
mov
jne
add
std
enter
call
jo
mov
rcrb
add
repz
jno
shrl
and
sar
jmp
mov
and
push
xorl
xor
inc
cmp
in
pushf
cmp
ja
clc
fcoms
movsl
cli
scas
mov
daa
outsl
adc
mov
fists
mov
mov
push
pop
incb
push
cmpsb
inc
mov
mov
lds
mov
ret
clc
das
mov
andl
lds
xchg
sub
incl
fisttps
into
push
sbb
or
scas
inc
adc
and
test
mov
adc
mov
push
push
les
ret
or
filds
daa
faddl
mov
jp
dec
push
adc
imul
jge
jmp
icebp
pop
add
dec
es
ret
push
mov
push
xor
iret
lret
out
insb
arpl
cmp
dec
or
mov
out
idiv
pushl
fisttps
leave
bound
or
mov
outsl
inc
std
out
and
pusha
and
ret
mov
add
or
fidivrl
out
mov
mov
lcall
mulb
jg
mov
dec
jg
in
pop
jns
outsb
pop
xor
push
js
leave
pop
pop
sub
xchg
insb
adc
call
jg
call
cmpsb
movl
roll
xor
sbb
sar
mov
dec
mov
and
pop
clc
out
lods
data16
imul
xchg
es
pusha
js
or
loopne
push
sub
clc
pop
ftst
cmp
dec
xchg
loopne
dec
imul
jns
repz
pop
int3
outsl
sti
popa
xor
push
or
lock
cltd
jno
das
aad
xor
push
pop
mov
fcmovbe
sub
call
sub
loope
movsb
mov
sti
adc
xchg
pop
pop
je
imul
push
mov
and
xchg
pop
lock
dec
push
aam
sub
mov
imul
mov
shlb
fstps
arpl
pop
xchg
cmc
repnz
pop
push
jae
inc
out
xchg
mov
shlb
mov
adc
jbe
pop
cmp
xorb
lret
call
adc
jge
call
dec
call
adc
es
aam
adc
pop
fisubl
iret
mov
pushl
shll
inc
mov
mov
cmp
dec
xchg
js
stos
lock
push
dec
cld
lcall
in
inc
jmp
pop
cmp
arpl
ss
xchg
dec
ljmp
pop
add
add
mov
cmp
add
mov
push
andl
lcall
test
fcmovu
sub
arpl
sbb
push
in
cli
adcb
xchg
mov
movsb
adc
pushf
in
fcoml
add
and
aaa
call
ljmp
into
inc
sbb
add
mov
test
subb
push
dec
adcb
mov
pop
in
dec
in
or
fwait
adc
cld
mov
into
into
mov
cli
push
das
inc
inc
lcall
xor
roll
sub
lret
mov
cmp
clc
clc
xchg
mov
sbb
sbb
jmp
xor
daa
mov
fildll
cmp
lahf
lret
stos
cmp
jl
inc
call
sub
fs
cmp
mov
pop
pushf
or
push
ja
arpl
outsb
fs
lea
adc
jmp
pop
xchg
fs
cmc
jg
inc
std
mov
bound
mov
mov
arpl
ret
jno
in
les
cli
fcom
jmp
ds
cmp
jbe
pop
jl
pusha
add
cmp
xlat
dec
popf
cli
pop
stos
cmp
mov
and
push
rclb
cmp
mov
sti
lea
aaa
xor
fadds
mov
stos
mov
mov
jmp
mov
mov
std
and
cltd
pop
xor
call
mov
rep
pusha
jmp
inc
jns
negb
icebp
ror
push
lods
sar
jg
jne
jb
jno
xchg
mov
mov
imulb
dec
cwtl
xor
sbb
xor
mov
xchg
fldt
mov
xchg
mov
jo
insl
mov
shll
ljmp
xchg
incl
pop
cmp
in
iret
xlat
sub
add
lret
inc
lret
push
inc
jecxz
pop
add
decl
jnp
xchg
imul
stc
sbb
stos
outsl
lcall
enter
mov
inc
aam
sbb
lods
clc
lock
and
ljmp
sbb
bound
frstor
xlat
scas
scas
add
lcall
pop
call
aam
inc
mov
and
pop
das
pop
mov
scas
incl
inc
push
insb
inc
fdivl
test
movsl
scas
push
push
push
add
decl
dec
movsl
sbb
lock
mov
lret
aaa
add
jp
movsb
adc
test
push
loope
push
dec
orps
xor
test
adc
mov
mov
mov
out
ds
sahf
fstpt
movl
loope
das
clc
or
dec
push
jecxz
ds
lret
sbb
dec
lcall
jnp
or
xor
fnstcw
ss
adc
xchg
or
cmp
call
or
cmp
loopne
fsts
jmp
sbb
push
and
std
cmp
pop
icebp
in
rcll
stos
inc
pop
cmp
mov
test
xchg
inc
push
push
pop
push
sub
xchg
sar
ljmp
jp
repz
stc
fnclex
adc
pop
cmp
xchg
dec
jg
cld
outsl
mov
test
and
lret
sbb
out
xchg
jmp
cmc
mov
push
fdivr
lcall
jae
insb
mov
adc
xor
xchg
inc
cmp
iret
jno
ljmp
lcall
sbb
or
push
inc
in
add
mov
and
hlt
pusha
push
sub
cmp
jp
mov
adc
xchg
sbb
jbe
dec
xchg
cwtl
dec
inc
filds
scas
mov
sar
inc
or
push
xor
lods
aam
fistpl
pop
lret
mov
lea
jae
mov
and
inc
dec
and
in
inc
cli
pop
shrd
bound
and
aaa
add
addr16
stc
pop
insl
jle
xor
mov
incl
int3
outsl
jno
and
fidivrl
cwtl
xchg
adc
sbb
add
insb
push
cli
outsl
or
incl
mov
push
xor
mov
es
xchg
jg
xor
aad
xchg
xchg
movl
adc
cmp
jo
mov
das
fmull
ds
decl
loope
pop
mov
adcb
mov
xchg
pop
mov
lret
inc
shl
lea
jne
jmp
gs
inc
mov
mov
cmp
and
cmp
ljmp
mov
push
divb
outsl
and
out
stos
jg
or
out
outsl
push
jmp
push
fistpll
push
jle
call
fdivrl
or
and
or
jl
xor
sbbb
jmp
ffree
xchg
repnz
int3
lock
call
inc
in
dec
rorb
pushl
push
jae
ficoml
jg
mov
les
outsb
movsb
scas
inc
sbb
loope
sar
incl
push
call
push
in
lahf
mov
mov
push
pop
loopne
insb
xlat
xacquire
lret
ret
sub
pop
mov
jp
cli
gs
outsb
inc
xchg
mov
xchg
push
das
test
xor
mov
jnp
test
por
jo
add
lcall
adc
adc
pop
icebp
andb
stc
adc
fldl
imul
pop
inc
aam
jg
call
or
sbb
aaa
cmp
loop
push
xchg
xor
sahf
or
clc
ljmp
mov
xchg
aam
pushf
lcall
inc
es
jl
fnsave
pusha
xchg
movsb
jbe
rcr
out
sbb
xchg
pushf
cmp
test
in
lcall
jmp
push
insl
nop
into
popa
push
cmc
mov
inc
sub
decl
mov
and
adc
aaa
cmpl
xchg
mov
lret
mov
dec
sbb
add
push
or
lcall
mov
sbb
cmc
or
test
out
out
movsb
sub
pop
dec
lahf
aam
fisubrs
xchg
mov
imul
adc
inc
popa
pop
addr16
daa
mov
cld
call
out
sub
cmc
inc
pusha
inc
mov
lret
cmp
sbb
clc
jp
pop
in
mov
frstor
sub
jecxz
addr16
insb
into
leave
ljmp
pop
add
hlt
pop
jnp
dec
aam
jmp
int3
mov
cmpsb
movsb
dec
arpl
in
ret
inc
ja
ja
shll
jno
nop
andb
out
xchg
inc
xlat
repz
mov
pop
push
xchg
pusha
je
scas
fnstenv
out
pop
adc
js
cwtl
add
in
xchg
cltd
in
add
and
mov
stc
fcomip
or
sub
pop
addr16
fstl
insl
in
addr16
lock
aas
xchg
stos
test
in
pop
fs
mov
lds
incl
pop
nop
call
push
lahf
xlat
nop
mov
int3
int
pusha
fsubl
sub
xchg
dec
fwait
ljmp
fnstenv
enter
js
pop
daa
xchg
add
ret
fisttps
leave
jmp
sbb
adcb
outsb
lods
push
or
mov
mov
cmp
xlat
fsts
sub
test
mov
mov
cmp
repnz
pusha
mov
shll
xor
decl
dec
loope
scas
mov
es
sbb
xor
data16
adc
jp
jecxz
jg
add
cmp
adc
lahf
jecxz
inc
cwtl
mov
imull
xchg
pop
call
out
jno
jl
xor
mov
imul
test
adc
pusha
mov
in
cmp
lret
pop
pop
imul
stos
dec
shl
out
xor
jno
les
add
dec
pushl
dec
popf
fs
imul
std
cmp
push
in
dec
cmp
out
inc
repz
jne
sub
inc
lcall
mov
cwtl
mov
dec
mov
jbe
and
sub
lret
incl
imul
inc
out
repnz
les
xchg
add
das
mov
int
cmp
or
push
pushl
stos
rol
push
fsubr
test
lock
push
inc
push
addb
stc
or
cmp
xchg
test
insb
aam
sbb
cltd
inc
sbb
push
dec
mov
lcall
dec
jmp
inc
and
sbb
decl
mov
inc
jecxz
in
dec
outsb
inc
mov
adc
mov
cli
incl
incl
add
push
test
xchg
xchg
sahf
sub
cltd
pop
lret
jg
das
clc
ljmp
mov
sub
inc
mov
or
in
adc
xchg
call
push
mov
idivl
push
inc
add
dec
xchg
pop
add
sar
push
popw
fwait
das
mov
int
xchg
adc
mov
cltd
imul
inc
sti
lods
sub
lahf
or
shl
das
adc
add
sahf
jge,pn
push
add
inc
aad
push
mov
jnp
sub
nop
addr16
scas
or
inc
push
lock
dec
jl
ret
xchg
ja
lods
or
xor
ret
in
lcall
dec
inc
push
push
ljmp
and
jne
inc
movsb
mov
fidivl
mov
icebp
fimull
insb
and
and
and
jo
push
mov
cs
test
pop
sbb
sbb
jae
jge
das
mov
push
sar
out
cli
jo
cmp
and
sbb
lods
addr16
rcrl
and
cmc
decl
fiadds
mov
xchg
xchg
out
fdivs
shll
cmpsl
data16
mov
mov
aad
dec
cmpsl
pop
xor
insl
mov
xorl
adc
xor
vpsraw
adc
adc
mov
xor
mov
sbb
jmp
dec
iret
insb
mov
je
int3
out
ljmp
push
je
push
popa
sub
dec
dec
pop
xor
xor
mov
enter
out
mov
sub
inc
add
xchg
mov
jp
or
sbb
xchg
dec
xchg
mov
lcall
jno
add
fadd
jns
jg
jo
xchg
dec
fisubrs
add
ds
and
lea
sub
jg
scas
sbbl
imul
and
sub
dec
ja
filds
jb
and
or
outsb
fwait
jae
sahf
fsubrl
inc
aas
jge
adc
dec
test
jle
mov
sbbl
push
lret
xchg
lret
decl
mov
mov
mov
mov
test
adc
loope
lcall
or
dec
dec
and
js
jl
hlt
inc
mov
fldenv
clc
add
xchg
out
shll
clc
cwtl
cmp
ret
psubusw
lahf
mov
inc
insb
push
jns
out
or
xchg
push
inc
scas
push
inc
fwait
add
pushl
ret
loopne
jg
fmul
repz
insl
test
cld
call
mov
movsl
jne
fnstsw
scas
loopne
bound
std
jg
ret
xchg
stos
scas
aas
push
xchg
bts
pop
push
imul
daa
sub
fwait
mov
rorb
scas
dec
lret
inc
mov
int3
lcall
jo
pcmpeqb
mov
data16
lods
push
add
jbe
dec
push
mov
test
int
call
daa
rcrb
mov
push
add
jno
cmpsb
lret
addb
fimull
mov
dec
jg
jns
ss
push
aaa
inc
xchg
mov
mov
flds
insb
ljmp
jmp
pop
jno
inc
and
sbb
xchg
mov
cmpsb
mov
mov
sub
cwtl
dec
pop
inc
adc
and
xorl
jle
mov
mov
loopne
out
and
aaa
icebp
mov
fisubl
ss
fisttps
inc
movsb
lret
test
lret
jo
imul
ficoml
scas
jp
repz
out
cmpl
mov
inc
jp
xchg
std
adc
decl
add
sbb
pop
or
or
shrb
test
sub
mov
leave
pop
or
jmp
mov
popl
xor
nop
iret
in
xor
decl
cmp
push
rol
rorl
mov
inc
push
push
and
adc
fs
sub
pushl
jne
sub
xchg
add
dec
pop
enter
fistl
nop
xchg
call
fidivl
add
and
cltd
mov
rclb
incl
jg
mov
jge
cmp
pop
roll
jge
fsubr
cmp
stc
mov
call
dec
mov
cwtl
popa
out
aaa
or
subl
jmp
jp
lcall
mov
push
xchg
aam
jp
fwait
fs
insb
push
jbe
add
sub
inc
cld
jg
xchg
inc
dec
nop
sub
pop
mov
mov
inc
dec
std
repnz
jp
jno
sbb
cmpsb
scas
pop
and
xor
scas
fs
mov
jmp
xchg
mov
pop
cltd
je
mov
xchg
fcmovnb
push
decl
or
mov
pusha
push
gs
imul
mov
xchg
or
fwait
mov
rcr
ret
add
jmp
scas
adc
cmc
popa
cld
mov
pushl
in
filds
add
stos
jns
dec
fwait
dec
push
mov
xor
sbb
das
clc
jmp
out
and
xlat
in
or
dec
dec
insb
shlb
xchg
add
pushl
sbb
shrb
cltd
pusha
mov
std
mov
mov
jecxz
arpl
inc
mov
adc
fistpll
push
pushf
add
lcall
and
rcll
sti
in
cmp
push
data16
repnz
mov
xor
ljmp
les
sahf
xchg
in
cwtl
daa
inc
roll
dec
ficomps
and
jmp
in
inc
mov
iret
imul
stos
sub
popa
ss
call
mov
sti
cmp
call
add
es
cltd
mov
jl
lcall
cmp
cltd
xchg
jmp
aaa
orl
dec
aam
movsl
movb
xor
mov
cmpsb
lock
fstpl
popa
adc
pushl
xchg
xor
inc
dec
xorl
sbb
rorb
adc
fcomip
aad
fnstenv
das
mov
and
repz
sbbb
mov
test
lea
mov
ja
dec
xchg
lods
jns
mov
aad
cmpl
out
pop
cli
xchg
iret
add
sbb
jo
mov
jns
sub
outsl
pop
jle
mov
push
xchg
push
xor
out
test
out
repz
test
mov
iret
stos
lods
call
cld
sbb
fwait
pop
push
in
inc
cli
insb
nop
jge
enter
mov
push
nop
cmp
inc
mov
mov
jne
popf
scas
xor
xchg
call
fstpl
pushf
xchg
out
dec
or
mov
xor
rorl
mov
decl
mov
mov
cli
or
icebp
lahf
sub
push
incb
adcb
ljmp
clc
jns
bound
loopne
jl
fsubrl
mov
adc
cwtl
hlt
xor
and
mov
ret
jmp
adc
inc
pop
push
mov
pushf
mov
xlat
add
jmp
lcall
add
jns
std
inc
pushf
es
ja
mov
lret
call
or
fldenv
ss
ljmp
cmp
pop
rorl
ljmp
stc
and
inc
mov
in
dec
enter
pop
addr16
push
and
adc
jle
les
call
inc
and
mov
loope
jb
add
outsb
cmp
popf
test
ret
jmp
sbb
ss
js
inc
sub
xlat
cs
leave
jmp
xor
popa
iret
add
std
test
ljmp
bound
sub
lret
mov
add
lds
cmp
xchg
cs
je
and
add
cli
popl
xchg
jle
and
mov
mov
cmp
int3
fldl
rcll
fisttpll
repz
hlt
adc
cmp
push
popf
addl
loope
test
dec
mov
call
jns
sub
int
push
sbb
lcall
repnz
xchg
rcll
jmp
pop
repz
xor
decl
jecxz
and
scas
xchg
push
xchg
int
insb
jnp
mov
mov
adc
adc
js
jmp
dec
push
incl
push
mov
imul
sbb
stos
in
cmc
cmp
xchg
pushf
pop
fs
pop
mov
jmp
call
xor
pop
cmp
js
adc
or
jp
sub
mov
lock
xlat
test
enter
dec
push
xchg
fidivl
popa
insb
push
and
cmc
decl
mov
inc
lcall
jge
xor
stc
decl
dec
add
decl
dec
aas
mov
hlt
jg
push
enter
mov
adc
mov
and
cmp
das
pushl
frstor
shlb
adc
add
xchg
lret
in
push
and
pop
dec
dec
cmpsl
xor
mov
mov
inc
or
pop
jle
dec
imul
data16
roll
repnz
pop
fisubs
inc
pop
lds
fmulp
fists
cmc
dec
mov
repz
add
cwtl
ljmp
ljmp
inc
in
xchg
loop
shl
int
push
dec
pop
scas
adc
gs
mov
cs
dec
sbb
loop
xchg
sub
mov
adc
xchg
mov
mov
sbb
pop
xor
jg
lock
lods
push
mov
fisttpll
xchg
pop
mov
daa
mov
int3
jmp
decl
add
mov
cmp
das
or
sahf
and
xchg
icebp
push
inc
sar
stos
and
fwait
test
jmp
cmp
sbb
adc
dec
xchg
fsubl
shlb
es
jmp
hlt
das
mov
cmp
or
xchg
out
in
scas
pop
into
lods
mov
pusha
ds
jg
push
sbb
in
or
mov
inc
out
fildl
jg
and
dec
movsb
jle
lds
sbb
dec
fiadds
mov
in
lea
fstl
pusha
ja
push
push
popf
les
fiadds
lea
iret
xorl
dec
out
mov
fucom
xor
andl
mov
sbb
inc
mov
testb
out
push
xlat
and
dec
pop
add
pop
insb
xchg
push
outsl
cli
decl
add
sahf
test
push
and
mov
mov
imul
cmp
pop
jl
fs
lret
xchg
inc
loope
add
enter
jp
jg
mov
jecxz
enter
jno
mul
int
or
sub
xor
jmp
fwait
clc
push
jo
sbb
rorb
xor
icebp
inc
and
aaa
outsl
clc
cmp
add
call
popa
and
dec
cmpsl
bound
and
and
aaa
dec
daa
or
or
inc
push
dec
cli
in
xchg
or
inc
incl
or
int
nop
mov
es
push
js
sub
pushl
cld
decl
xor
out
scas
push
cmpsl
inc
mov
sub
add
mov
mov
jge
test
cmpl
lock
hlt
push
dec
mov
or
mov
ret
add
hlt
scas
pushl
push
xor
lds
push
xchg
cmp
pop
dec
sti
dec
lcall
ljmp
dec
push
std
in
aam
inc
outsl
leave
mov
mov
lods
das
or
clc
clc
sbbl
fisttpll
enter
je
loope
into
cmp
fisubs
inc
ljmp
xor
xorb
adcb
jp
stos
cmp
mov
or
outsb
mov
pop
inc
or
cmp
or
add
pushf
lahf
mov
dec
icebp
decl
je
mov
lods
sti
mov
shll
or
ljmp
cli
mov
cld
add
and
and
mov
cltd
inc
jecxz
add
popa
ljmp
rcrb
divl
dec
add
lcall
jb
pop
jmp
notl
inc
pop
aam
jle
outsb
in
jno
rcll
fstps
xor
pushl
jmp
fs
repz
add
subl
sub
xchg
mov
sub
and
sub
popf
xor
inc
add
in
sbb
push
mov
pop
dec
bound
outsl
ljmp
stc
mov
add
mov
rorl
ljmp
pushl
out
jecxz
stos
push
test
mov
rclb
lods
stc
adc
xchg
pop
and
jb
jmp
mov
xor
pop
xlat
xchg
int
xor
lds
dec
mov
dec
movsb
mov
sub
in
add
es
ljmp
push
int
shl
pop
ljmp
mov
test
mov
sbb
mov
jp
mov
and
sbb
dec
movsb
fsubs
in
outsl
incl
subb
mov
lods
xor
ror
sbb
dec
idivb
pop
movsl
pop
jns
jns
pushf
or
pusha
push
inc
bound
jl
jmp
cmp
mov
inc
sub
mov
xchg
imul
clc
inc
mov
inc
andb
cmpsl
cmpb
ljmp
adc
sub
out
jp
pop
push
shlb
fstps
add
idivb
mov
lahf
les
dec
push
fiaddl
xchg
cmpsb
add
add
lcall
js
add
or
pop
cmp
adc
aas
dec
add
insb
mov
cmp
int3
stc
stc
push
imul
and
sahf
stc
shll
sar
in
das
xchg
push
sti
outsl
imul
fcomip
sbb
rcr
push
dec
fimull
ljmp
rcrl
hlt
fidivrs
sub
imul
mulb
cmp
sbb
lcall
pop
repz
push
test
adc
xchg
mov
cld
shll
in
mov
dec
shrb
push
xchg
xchg
hlt
xchg
xor
mov
inc
mov
mov
cwtl
or
push
pop
call
loopne
xchg
cmp
push
std
std
mov
cli
push
jmp
nop
out
out
shrb
aam
mov
adc
in
je
add
xorb
incl
push
or
cs
call
or
jle
aaa
mov
orl
int
ljmp
cmp
add
call
fcoml
enter
jle
fiaddl
inc
loopne
fwait
insb
mov
jmp
pop
inc
dec
aas
dec
cli
je
sub
icebp
outsl
insl
add
mov
stos
fmul
jle
mov
cmp
pop
std
ljmp
mov
out
ja
popf
ret
or
pop
fdivr
pushf
mov
jbe
mov
inc
pushl
push
addr16
stos
push
cmp
add
in
mov
add
insb
hlt
or
mov
dec
pop
jbe
cmp
or
pop
aad
test
pushf
add
ljmp
push
outsb
jg
mov
mov
flds
and
pusha
test
orl
mov
and
in
cli
daa
cmpsb
push
dec
clc
lcall
push
mov
test
dec
movsb
add
add
lock
add
xchg
mov
clc
jae
call
lea
push
sub
popa
cmpsb
ret
les
shrb
xor
xchg
jnp
es
ret
sub
ljmp
pop
or
xor
imul
cli
cltd
aaa
out
xor
ljmp
jge
sub
add
dec
stos
pop
mov
rorl
aad
imul
or
dec
push
mov
data16
or
mov
sub
push
mov
pop
inc
push
pop
sahf
mov
fcomip
call
cltd
mov
mov
pusha
jg
cmp
arpl
decl
push
jne
mov
arpl
mov
aaa
sub
mov
test
mov
call
add
mov
mov
cmp
xchg
sti
fbstp
movl
or
lods
je,pt
jmp
imull
jmp
mov
mov
or
jmp
ret
push
lret
xor
lcall
mov
xchg
leave
adcl
lock
push
push
rorl
mov
pushl
mov
push
pushf
cli
sub
mov
iret
push
sub
adc
add
lods
scas
outsl
ds
ret
jge
mov
cltd
mov
test
rclb
mov
push
dec
jne
incl
pop
mov
pop
sub
push
aaa
in
stos
hlt
andl
pop
xor
fwait
or
adc
or
or
out
bound
cmp
jge
ss
push
xlat
add
sbb
call
loopne
stos
jle
mov
sub
push
mov
mov
decl
lods
and
loopne
pop
add
fs
out
popa
xchg
gs
js
incl
shrl
lods
scas
pop
sti
dec
repz
jg
shl
stc
cwtl
pop
daa
push
dec
xchg
fnsave
xchg
ret
aas
cmp
push
mov
inc
mov
ljmp
fldenv
and
xlat
sbb
pop
sub
sar
jbe
out
dec
sbb
fwait
xchg
popa
mov
jo
test
aam
pop
and
test
jp
mulb
fdivl
xor
or
mov
ret
push
les
cmp
stc
jbe
lret
lock
xchg
mov
mov
data16
jmp
cltd
sar
decl
push
xchg
mov
mov
sub
movsb
sti
cmpsb
aas
movsl
imul
jg
dec
sbb
cmpsl
add
dec
jge
fidivrl
test
or
out
sbb
lret
lea
in
aas
mov
nop
push
bound
sbb
mov
es
lcall
call
dec
lret
add
sahf
call
xor
sub
sbb
xchg
jl
xor
inc
addr16
in
repnz
xchg
movsb
das
xor
std
push
inc
inc
outsl
sbb
out
add
xor
jbe
mov
adc
addr16
and
mov
pop
into
add
call
pop
mov
dec
push
sub
out
cld
mov
fldcw
nop
mov
aad
mov
sbbl
fisttpll
sub
pushf
push
push
sub
adc
mov
cld
xor
out
push
lret
adc
sbb
sahf
enter
insb
mov
mov
jbe
aam
ret
dec
call
jle
push
leave
and
popa
popa
lods
adc
incl
lods
pop
mov
ret
push
mov
and
inc
add
inc
jb
ficoms
lcall
mov
fcomip
addr16
sbb
inc
in
pushf
dec
adc
xor
ljmp
inc
jae
jns
imul
xor
or
test
or
push
xlat
sar
push
inc
push
dec
icebp
mov
add
hlt
out
cmpsb
add
jnp
dec
movsl
bound
inc
xchg
pop
inc
rcl
call
std
nop
mov
and
cmpsl
insb
test
jp
xor
push
pop
mov
pop
test
js
adc
cmp
lea
out
mov
out
xchg
pop
pop
ljmp
mov
and
adc
outsb
push
frstor
in
jne
pop
sti
cmpl
inc
popa
leave
jne
je
mov
add
adc
sub
mov
mov
incl
cs
cltd
mov
mov
sbb
mov
stos
xchg
clc
call
test
in
inc
jecxz
ljmp
sbb
es
mov
xchg
call
and
call
imul
mov
mov
incl
push
decl
push
dec
ds
or
sete
cmp
aad
call
std
lock
lcall
sbb
adc
call
mov
mov
cld
pause
imul
add
shl
fwait
inc
outsb
jo
pushl
addl
xchg
mov
sti
push
pop
pushf
in
ljmp
or
jl
mov
aam
or
leave
pop
es
xchg
add
mov
mov
test
push
jg
dec
inc
or
decl
xchg
cmc
push
xchg
aas
inc
jp
xor
push
push
fcoms
add
mov
lcall
outsb
or
imull
jb
enter
push
cmpsl
push
ss
scas
out
or
stos
pushl
add
insl
mov
xor
sahf
int3
add
cmp
out
clc
decl
gs
jmp
pop
addr16
push
lds
xchg
pop
ljmp
into
adc
adc
icebp
sti
and
push
les
aas
jnp
in
pop
fcomp
insb
scas
cmpsl
daa
ret
inc
inc
stc
xor
les
xchg
fdivrp
mov
mov
in
jne
pop
pop
out
ds
outsb
and
pusha
cmp
cmp
dec
xchg
sub
fs
outsl
xor
ss
les
int
push
push
adc
pop
sbb
add
mov
cld
mov
mov
outsl
cltd
adc
rorl
push
cld
jg
mov
ret
fmull
xchg
lock
out
sarl
push
jae
hlt
pushl
push
jae
cmpl
ja
iret
mov
pushf
add
scas
fmull
cltd
sar
jmp
dec
inc
sbb
fcoml
mov
mov
iret
dec
in
or
mov
dec
icebp
jg
push
inc
push
sbb
mov
dec
adc
cmp
mov
daa
mov
sbb
jns
ljmp
pop
orb
mov
insl
fidivs
sbb
mov
sbb
fldenv
push
ljmp
test
add
sar
out
lds
mov
pop
leave
movsl
jecxz
sbb
pop
jbe
cmpb
fnstsw
mov
jmp
cmp
adc
and
cmp
ss
std
xchg
cmp
sbbl
scas
xor
pop
cmpsl
nop
dec
stos
or
sub
clc
call
xor
push
data16
imul
push
rcll
pop
dec
xchg
adc
std
sahf
clc
pop
jp
push
cld
out
mov
jp
add
cmp
fmul
push
test
push
cmc
sub
decl
adc
jge
fdivrp
rolb
test
push
sbb
cwtl
adc
mov
inc
xor
jmp
mov
or
nop
out
movsl
loopne
stos
dec
daa
mov
sbb
incl
test
xor
pop
enter
lds
add
push
or
fnop
or
push
mov
shl
aad
int3
cld
cmp
nop
pushf
add
cmpsl
xchg
addr16
lahf
loopne
lds
roll
jle
sub
add
aaa
xchg
jno
cwtl
jg
xor
mov
cmp
push
and
mov
inc
clc
movl
dec
lahf
mov
add
shrl
les
inc
sahf
lods
ljmp
fsts
adc
dec
cli
repnz
sahf
pop
push
lods
inc
mov
call
nop
add
imul
xor
in
mov
jge
push
pop
jg
aam
int3
sbb
mov
add
jl
inc
stc
jo
add
adc
incl
push
pop
sub
mov
jmp
push
sbb
inc
ja
pushl
jnp
dec
in
mov
pushl
mov
cli
fs
call
xor
dec
sbb
das
imul
incl
cmpb
inc
je
bswap
subb
shll
pushf
add
in
and
sub
cmp
push
add
decl
orl
ljmp
mov
sbb
pushl
daa
popf
xchg
jmp
xchg
jbe
in
ret
cmp
cmp
movl
xor
jnp
call
fs
ljmp
pusha
jle
push
test
lahf
push
xchg
cmpxchg
and
jg
call
das
push
repz
dec
mov
loop
jmp
push
call
inc
nop
test
lcall
je
push
mov
pop
das
pusha
clc
add
movsl
scas
pop
or
fs
stc
decl
xchg
inc
lahf
cld
clc
lods
jo
sub
xor
xchg
loop
cmp
jg
mov
inc
call
sbbb
pushl
push
insl
cs
mov
pop
test
decb
sub
into
sbb
fdivr
fcomip
ljmp
push
test
adc
push
mov
in
ljmp
sti
and
jmp
and
push
aas
es
mov
cwtl
stos
sub
xlat
insl
jge
call
jmp
fists
or
and
mov
inc
or
push
sti
arpl
loope
hlt
adc
fwait
ds
xchg
inc
mov
ljmp
fdiv
cmpl
xor
ja
mov
pushf
and
test
addr16
ljmp
push
cmpsl
icebp
mov
pop
lret
lods
push
insb
icebp
pop
je
lcall
popa
int3
cltd
cld
lods
icebp
incl
sub
xor
cmc
stos
stos
cltd
in
or
rol
cmp
js
mov
cli
popa
pop
mov
inc
or
call
add
jmp
mov
sbb
jo
or
adc
adc
mov
and
lock
decl
sub
test
pop
cmpsl
dec
js
leave
cmp
pushl
add
jbe
movsb
adc
cli
fdivr
xchg
aas
test
repz
adc
xchg
pop
pop
add
pushl
sti
jb
outsb
push
xchg
fwait
test
fwait
shrb
xor
and
dec
test
fisubrl
outsb
jg
adc
shl
mov
pop
xchg
push
lret
fldt
cwtl
pop
test
int
cmp
pushl
stos
push
pop
jnp
int
mov
sbb
insb
repnz
lcall
scas
mov
add
xor
std
sbb
adc
out
pop
cli
es
pushl
xor
push
dec
xor
mov
insb
clc
ljmp
adc
loope
repnz
xchg
popf
ret
decl
dec
pop
add
sub
orl
test
mov
jecxz
incb
jmp
push
xchg
push
and
loopne
sub
xchg
clc
inc
lock
mov
sti
fadd
daa
gs
push
push
mov
popf
cmp
incl
bound
mov
lock
xchg
sub
aaa
fcmovb
inc
lret
lret
lods
ret
js
imul
ja
es
jg
roll
xchg
mov
std
push
or
gs
cli
call
popa
sub
push
pop
add
jl
jb
mov
cmc
cmpsb
ljmp
test
fadd
push
lahf
xor
test
movsl
adc
or
pushf
movsl
add
push
adc
clc
lcall
imul
push
inc
add
repz
sar
mov
imul
push
outsb
xor
das
cmp
push
stos
mov
lahf
mov
insl
sbb
ds
cld
lcall
pop
cmp
mov
in
cmp
jle
dec
lea
cli
adc
pop
loopne
ficoms
sub
leave
inc
jne
lock
fnstcw
inc
je
icebp
push
or
call
inc
insb
ret
pusha
insb
pop
je
add
push
adc
push
xchg
outsb
int3
dec
sub
out
or
lcall
outsb
mov
ret
hlt
lock
sbb
addr16
lea
fdivl
call
jp
adc
aas
add
adc
xor
jp
and
mov
jl
movsb
mov
iret
ret
popf
ss
jb
ret
sbb
aaa
std
outsl
cli
adc
ljmpw
cli
add
sub
mov
call
ljmp
outsl
adc
push
mov
xchg
mov
mov
ljmp
clc
insb
sbb
ja
jb
iret
stos
mov
daa
dec
shrl
and
push
mov
jp
or
aad
repnz
mov
scas
add
push
push
dec
push
jnp
in
addr16
jmp
dec
hlt
call
cmc
or
pusha
pop
inc
jmp
lcall
lea
in
and
cli
sbb
loopne
sbb
mov
sbb
lds
into
aas
ret
fisubl
jmp
xchg
inc
lods
inc
mov
cmp
mov
jl
pop
or
adc
pushl
movhps
je
and
scas
xchg
subb
mov
sub
add
lret
cltd
inc
ljmp
jge
and
cld
or
call
xchg
xchg
push
daa
dec
mov
addr16
out
fwait
dec
push
cli
test
mov
pop
push
sub
jbe
push
mov
daa
pop
jno
and
roll
in
mov
push
aad
push
adc
test
lret
sbb
aad
cmp
insl
inc
sti
cmp
jg
rcrb
push
loopne
fwait
push
add
pushf
aaa
cmc
aad
push
inc
sbb
stos
mov
notb
das
popf
aad
push
sbb
ljmp
mov
sbb
pop
insl
mov
jle
std
cwtl
test
lcall
push
push
in
stos
pop
popf
add
repnz
adc
fnsave
les
add
and
pop
dec
js
lahf
outsl
mov
add
push
pop
sbb
popf
jb
test
and
jl
jp
clc
pop
scas
dec
clc
adc
mov
xor
dec
sti
push
testb
call
ret
inc
nopl
lea
and
jge
pop
sbb
sahf
std
sbb
inc
inc
jb
dec
imul
inc
in
pop
push
aas
adc
cld
pop
mov
push
adc
je
ds
call
je
jg
mov
fdiv
enter
mov
das
scas
jbe
push
les
push
aaa
mov
adc
pop
adc
mov
mov
fmuls
call
cmp
sbb
jnp,pt
jb
or
out
aaa
fs
sub
lcall
out
or
mov
mov
mov
ret
push
xlat
pop
dec
mov
inc
mov
pushl
daa
mov
in
test
or
mov
add
outsb
ss
inc
mov
inc
lcall
add
xor
popf
data16
mov
loop
mov
jg
clc
sub
inc
push
cmp
dec
inc
les
or
dec
shlb
incl
add
fs
xchg
or
xchg
add
inc
movsb
cwtl
clc
adc
incb
sbb
call
dec
dec
je
lock
adc
call
xchg
mov
adcl
lock
push
fiaddl
lahf
sub
jge
mov
or
in
inc
jecxz
outsb
sub
imul
sub
lcall
imul
stc
loope
je
inc
cmp
fistpll
mov
mov
rol
nop
das
out
clc
pop
hlt
call
mov
in
sub
push
xchg
dec
xor
mov
iret
rcr
fwait
inc
jbe
push
jle
cmp
pop
jae
sti
dec
jl
int3
xchg
outsl
xor
scas
es
adc
pop
cwtl
je
add
call
cmpsb
pop
mov
and
call
xor
push
xchg
mov
xchg
test
xchg
std
rorl
fldcw
lcall
sti
jb
dec
dec
imul
mov
rcrb
nop
imul
jae
adc
jmp
mov
push
mov
push
ja
out
sub
or
subb
call
shr
clc
mov
mov
push
and
test
subb
in
cld
ljmp
les
fimuls
in
ljmp
sub
xor
es
dec
popf
sub
idiv
pop
inc
jb
insb
test
xlat
ljmp
fisttpll
sbb
call
cwtl
dec
mov
in
inc
mov
jle
arpl
add
sbb
pushl
scas
daa
dec
sub
mov
popa
or
ja
in
xchg
push
inc
sbb
int
cmpsl
pop
jecxz
mov
incl
jnp
or
aam
xchg
mov
pop
sub
outsb
and
and
push
decl
mov
adc
adc
mov
ret
adc
pop
icebp
out
pusha
inc
out
sbb
int
jae
int3
ds
sub
or
shlb
ss
lds
inc
push
ljmp
pop
imul
popf
mov
lods
jbe
fsubrl
push
push
mov
test
lock
ljmp
leave
cmc
lcall
das
sub
data16
je
adc
int
fstps
adc
and
ja
mov
scas
push
pop
shl
repz
lcall
not
dec
adc
insb
push
pop
pop
repnz
jae
mov
pop
push
call
cmp
jle
cwtl
fsubrl
clc
out
inc
cmpsl
push
testb
fildl
inc
mov
adc
movsl
and
call
jbe
or
pop
sahf
cwtl
imul
xchg
rcll
pop
mov
mov
call
or
pushl
out
lods
inc
lods
mov
dec
aaa
adc
incl
mov
inc
popf
dec
mov
sbb
push
iret
or
push
add
es
fwait
lods
movsl
and
pop
jl
inc
adc
pop
std
nop
inc
cltd
mov
call
stc
and
xchg
outsb
add
dec
popl
xlat
jbe
movsl
sub
xchg
cli
mov
rcrb
or
sarb
clc
ja
ljmp
in
ret
push
xchg
push
inc
sarl
lods
inc
cmp
imul
jmp
out
call
fadds
pushf
aaa
js
mov
js
fidivl
sub
mov
jmp
cmc
or
jl
xor
mov
idiv
rcrb
adcb
xor
mov
fs
jp
mov
mov
int
push
push
mov
sub
stos
stos
pop
push
jmp
lahf
mov
dec
adc
daa
in
sbb
les
pushl
cmpsw
movsb
add
mov
inc
arpl
stc
jl
or
cmp
aad
std
lcall
pop
xchg
arpl
adc
js
or
inc
mov
fs
nop
add
roll
pop
incl
stos
jo
fsubs
ds
rcll
aam
xchg
or
out
dec
mov
mov
mov
mov
cs
sbb
xchg
ja
jg
fmuls
out
dec
inc
orl
aad
es
mov
sbb
loop
mov
in
mov
in
lcall
mov
or
adc
cmc
push
les
lret
inc
mov
shr
jle
lods
movsb
xchg
inc
daa
pop
in
dec
pusha
jmp
lock
iret
rolb
xchg
lods
fwait
push
lea
icebp
dec
mov
mov
jmp
push
dec
fwait
push
jnp
or
add
cmp
jp
jnp
call
addr16
xor
push
or
sub
addr16
adc
mov
jae
adc
roll
int
adc
dec
pop
cld
incl
and
add
inc
push
imul
sbb
xchg
aad
push
cmc
xchg
in
jg
es
popf
pop
jmp
or
andb
add
jno
pushl
in
mov
sti
fmul
xchg
sahf
std
icebp
pop
inc
sbb
pop
mov
jl
and
call
push
test
mov
sahf
inc
vpslld
stos
adc
and
sub
dec
jl
or
or
dec
xor
mov
jns
pop
lahf
lcall
subl
mov
cwtl
jmp
movsl
sbb
ja
and
daa
adc
arpl
ljmp
enter
add
cmpsb
push
mov
and
and
stos
out
push
xchg
or
pop
loop
dec
pushl
jge
xor
imul
xor
cmp
sub
nop
outsl
cld
call
dec
repz
sub
fiaddl
shl
mov
sahf
fcmovne
fildll
imul
inc
fbld
or
or
ret
add
mov
pushl
sub
mov
pop
push
loope
push
test
test
pushf
shrb
iret
inc
ljmp
decl
cmp
icebp
lret
sub
jnp
repz
fstpt
loopne
and
jmp
in
popa
andl
pop
stos
sti
pop
test
arpl
lock
je
jmp
pushl
lret
and
mov
mov
test
mov
pop
lea
arpl
mov
mov
test
pop
jb
mov
mov
pop
pop
call
fmull
pop
mov
pushl
adc
pop
cmpl
sub
xchg
adc
jle
mov
inc
cmp
cs
pop
or
xchg
mov
aam
icebp
jno
aad
rcrb
adc
mov
mov
movsl
sub
pop
adc
push
mov
jl
inc
xchg
cmpsb
popf
mov
fstpt
jecxz
call
adc
hlt
aaa
sub
cmpsl
cmc
test
jno
mov
call
xchg
aas
pushw
mov
sbb
in
xchg
lahf
push
jb
adc
push
incl
insb
cmpl
int3
aaa
fsubrs
jl
fists
pmullw
into
mov
push
pop
out
cwtl
idiv
mov
into
ljmp
xor
push
adc
rolb
icebp
jmp
fistl
xchg
jp
scas
cmp
in
push
xor
push
lea
es
push
inc
test
js
test
push
test
sbb
nop
shlb
pop
mov
fdivr
cmp
test
lcall
pop
dec
or
ja
jnp
mov
pusha
xchg
pushl
pusha
ret
insb
xchg
popf
enter
sub
flds
mov
pop
adc
pop
dec
loopne
ljmp
cltd
test
in
dec
mov
mov
jle
mov
movsl
inc
loop
out
cli
dec
push
and
mov
xor
cmpsb
sub
mov
scas
pop
fucomi
cli
aad
repz
xchg
aas
scas
in
jnp
ds
or
xor
mov
scas
adc
shlb
ljmp
pop
fdivs
out
ds
pushl
jns
inc
cmp
mov
adc
lahf
jne
cmpsb
cmpsl
xor
test
lcall
loop
pop
inc
jnp
push
int3
fstpl
jp
clc
bound
pop
subl
jl
pop
sbb
ja
sarb
jns
in
jae
sub
mov
adc
call
popf
cmp
popf
pop
iret
aad
rorl
mov
and
test
icebp
lcall
add
mov
pop
jbe
sbb
mov
mov
int
push
mov
incl
lahf
mov
pushf
add
rcll
decl
in
sub
mov
add
test
mov
adc
mov
push
cmpb
xor
movsl
mov
sub
std
pop
mov
call
std
cmp
movsl
loopne
xchg
hlt
xor
fiadds
xchg
mov
sbb
lcall
jmp
in
repnz
ss
jne
out
fwait
imul
rorb
cmc
xchg
dec
pop
fdivrs
jo
mov
mov
inc
push
xor
lods
jle
out
paddq
test
and
add
push
cmp
mov
pop
adc
jle
lods
or
jp
jmp
cmp
imul
rcll
pop
mov
cmpsb
in
sub
jmp
mov
ret
test
mov
cmc
test
nop
cmp
cltd
mov
or
mov
or
out
xchg
push
fdiv
addr16
lock
pop
rcrb
or
mov
mov
ret
add
popf
leave
cld
push
notb
mov
xor
fadds
xchg
scas
jne
jmp
scas
int3
jno
and
adc
shl
pop
xor
sti
push
dec
cwtl
and
and
mov
dec
je
in
xor
imul
loop
mov
sub
pushl
insl
loopne
gs
test
mov
leave
mov
jp
in
adc
push
push
mov
insl
mov
jecxz
lcall
add
jmp
jno
mov
decl
enter
das
inc
and
inc
fimuls
add
dec
lock
lcall
loop
mov
pop
pop
xchg
push
test
pop
and
xor
ljmp
into
in
inc
test
or
cmp
inc
je
or
decl
mov
dec
jo
xchg
jmp
and
ja
les
scas
lock
leave
pop
dec
add
or
xor
ljmp
sar
push
pushf
es
xor
lret
in
rcr
mov
xchg
decl
fwait
dec
or
call
mov
ds
setbe
repz
fwait
cmp
adc
push
arpl
mov
ljmp
dec
out
cmc
mov
jecxz
popf
shrl
scas
bound
ljmp
testb
adcb
test
out
mov
jbe
or
incl
test
mov
dec
or
movlps
stos
aam
cltd
cmp
and
jp
ds
dec
jnp
imul
dec
jns
insb
inc
fisttps
sub
jl
mov
frstor
mov
loope
xchg
dec
gs
call
repz
nop
rcr
inc
inc
in
push
stos
jo
cmp
xchg
stos
outsb
test
mov
sbb
push
mov
xchg
mov
fdivp
psubsb
fists
mov
sub
push
sbb
jp
mov
decl
mov
adc
fs
and
sbb
inc
ja
cmp
aas
clc
fucomi
imul
int3
lahf
mov
js
xor
mov
pop
cwtl
ljmp
aam
inc
out
stc
pop
and
pop
sbb
inc
fsubs
inc
dec
sbb
pop
js
test
incl
dec
mov
es
jmp
popa
xor
fwait
push
stc
call
mov
inc
in
pop
scas
ret
pop
add
clc
jmp
mov
mov
add
int3
test
dec
mov
or
jns
orl
dec
fwait
xor
cmp
decb
push
and
push
or
lahf
sub
mov
jb
fistps
pop
push
pop
int3
inc
pop
mov
call
loope
cmp
lock
lret
mov
pushf
and
push
lock
icebp
xor
ljmp
mov
dec
pop
repz
sbb
mov
stc
shl
xor
inc
push
rcrl
push
dec
call
in
test
aaa
data16
ret
das
sub
jmp
fsts
push
movsb
loopne
nop
stc
jle
mov
sbb
mov
adc
fcoml
pushl
or
adc
stc
test
rcrl
xor
sahf
add
leave
jns
repz
out
test
sbb
in
cmpsb
gs
adc
sbb
push
jmp
loope
push
ljmp
outsb
inc
sub
sub
inc
enter
fs
or
aaa
jp
cmp
dec
or
mov
je
cli
and
aad
stos
push
addr16
ljmp
add
decl
mov
loopne
or
pop
add
sub
incl
clc
mov
les
fsubp
das
jno
inc
xor
ljmp
les
jno
inc
movsb
xchg
je
sbb
ja
neg
ret
jmp
fisubs
sub
pop
jbe
clc
in
pop
mov
js
sbb
and
incl
cli
push
popl
cltd
arpl
sahf
inc
or
or
movsl
and
imul
cli
lcall
or
pop
push
aam
es
test
adc
sub
out
sahf
fcomip
mov
shrl
inc
sub
cmp
sbb
lret
jge
sti
int
insl
cmpsl
movsb
lret
rclb
divl
ds
mov
and
incl
inc
insb
cmp
fdivrs
loopw
fmuls
adc
pushf
fldcw
leave
push
mov
sbb
pusha
dec
pop
or
ja
mov
lcall
cmpsl
shrb
push
sarb
adc
push
sub
fucomip
decl
cli
mov
gs
cmp
testl
lock
mov
xlat
test
cmpl
xor
sahf
test
pusha
sub
scas
cli
hlt
test
loope
dec
cwtl
adc
cmp
les
jmp
inc
jns
mov
mov
nop
mov
adc
or
scas
inc
mov
ljmp
sahf
xchg
in
lahf
mov
mov
rorb
flds
les
ljmp
cmp
xor
inc
sbb
repnz
scas
std
mov
mov
incl
out
shl
mov
leave
cmp
and
je
jo
lods
out
repz
incl
popw
das
dec
dec
xor
push
xor
mov
fmuls
arpl
push
ljmp
fimuls
jge
imul
adcb
clc
xor
sbb
jmp
sub
mov
lahf
incl
cltd
sbb
sbb
push
push
mov
cmpsb
dec
mov
xor
imulb
jb
mov
push
bound
fisttpl
test
scas
orl
cmc
mov
fbstp
dec
mov
mov
fadds
movsl
fisubrl
xchg
jmp
sti
mov
add
mov
pusha
jne
fyl2xp1
cli
dec
pushf
test
inc
inc
test
mov
sub
cli
lea
scas
cmp
lret
pop
jbe
hlt
mov
incl
mov
cwtl
cltd
cmpsb
pusha
rcl
movsb
lahf
cmpsb
lcall
or
rorb
inc
xor
mov
out
add
shlb
and
std
decl
mov
jp
popf
lods
orb
adc
sar
add
sahf
push
test
pushl
das
movsl
decl
push
ljmp
das
test
call
pushf
sbb
pop
cwtl
adc
jmp
and
jno
jns
xor
lcall
pushf
mov
cs
dec
in
jle
and
mov
jo
imulb
dec
sub
cs
sub
adc
pop
jge
int3
jbe
setnp
add
ljmp
xor
in
into
sti
fs
iret
out
xchg
and
sbb
push
mov
lcall
mov
scas
ja
cli
fsub
sub
and
adc
repnz
cwtl
inc
cld
cmp
and
cmp
adc
push
test
jnp
mov
fcompl
fimull
or
cmp
pop
sbb
mov
lret
jg
ja
and
jne
and
iret
fsubs
js
ds
cmpsb
out
loopne
cmpsl
adc
xor
test
adc
inc
xchg
adc
jns
ljmp
lea
inc
incl
inc
sub
jb
mov
pop
xor
mov
fidivl
scas
xchg
test
loop
call
out
push
inc
xchg
fwait
xchg
cmpsb
sub
pusha
mov
dec
movsl
and
add
sbbb
std
jle
dec
repnz
loop
arpl
pop
sbb
sti
fstpl
mov
push
jge
jne
xchg
dec
fidivrl
and
cmpb
movsb
push
outsl
add
pop
das
push
orb
push
sub
sub
mov
enter
xlat
sbb
jmp
into
jg
jle
negb
pop
test
insl
nop
inc
xlat
or
adc
jns
pushf
mov
sbb
mov
cmp
out
dec
std
call
lods
ret
sbb
push
mov
mov
pop
incl
inc
ja
jmp
mov
sti
sbb
jmp
push
testb
sahf
cld
mov
call
push
adc
adc
sub
dec
fiaddl
cmp
mov
or
in
sbb
out
push
pushl
loope
call
icebp
or
insl
jg
xlat
ds
jbe
cmpsb
add
mov
incl
mov
icebp
xchg
xchg
and
movsb
les
adc
add
es
lea
pop
sbb
cmp
div
add
jle
jge
adc
ss
push
lea
jg
lods
sub
fcomps
test
dec
mov
xor
incl
mov
push
leave
sbb
lods
sbb
or
inc
adc
mov
cld
sbb
mov
or
xor
or
inc
call
scas
incl
loope
call
rol
cmp
inc
daa
fiadds
push
push
sbb
iret
pushl
into
orl
cmp
add
jne
cmpb
mov
lea
or
std
pop
cld
scas
jb
decl
or
pop
outsb
xchg
std
xchg
roll
xchg
arpl
and
pop
lret
xlat
decl
mov
mov
inc
test
xor
outsl
push
add
pushf
inc
pop
push
data16
aaa
dec
ffreep
push
pop
ret
jbe
dec
frstor
push
mov
sahf
mov
in
in
sub
dec
cmp
aaa
std
out
call
bound
jle
pop
test
je
pop
inc
movsl
cmp
lcall
jp
pop
xor
jge
orb
push
aas
jbe
inc
push
shrl
lds
lcall
mov
pop
out
xchg
lret
std
icebp
mov
mov
idivl
push
repz
fwait
adc
icebp
mov
in
mov
js
sub
cld
jo
fdivrs
ljmp
mov
movsb
popf
dec
or
sub
popa
in
sub
out
add
pop
xchg
ljmp
and
and
cmp
ljmp
push
out
mov
pushf
out
sarl
in
pushf
sub
je
inc
test
pushl
std
dec
ret
insb
xchg
cmp
loop
push
es
dec
into
mov
iret
xor
lcall
and
or
scas
pop
mov
pop
cmc
pop
or
xor
cwtl
loope
hlt
mov
lea
sahf
fs
ljmp
clc
cmp
mov
idiv
pop
add
fistpll
clc
lds
mov
std
mov
cmp
seta
adc
hlt
out
add
rcl
and
rcr
fistpll
mov
push
mov
decl
nop
jle
aad
push
testl
insl
test
push
call
cmpsl
fimuls
lods
in
xor
cwtl
ffreep
test
int
cmc
mov
jo
cmpxchg
call
add
shll
cmp
bswap
divl
sub
popa
dec
test
ljmp
push
ss
jl
push
cmp
dec
cltd
fdivrp
push
sub
test
and
test
in
or
mov
aaa
outsl
je
jmp
scas
incl
in
fs
imul
scas
das
fisttpll
jmp
mov
loopne
adc
push
je
xchg
jecxz
mov
lock
std
in
cmp
mov
ficompl
in
aas
arpl
lds
pushw
scas
xchg
jge
pop
pop
rorb
mov
pop
addr16
inc
loopne
jb
mov
div
incl
xchg
push
push
in
mov
mov
std
lods
pop
cwtl
sbb
mov
push
notl
mov
leave
popf
mov
lds
fidivrl
movsb
dec
loopne
dec
insb
aas
sbb
pop
ret
int
rcrb
popf
mov
jge
and
adcb
add
lock
enter
das
std
neg
push
fisubrl
jmp
fstps
and
jle
cmp
das
gs
mov
addl
add
call
push
lcall
push
shlb
loop
stos
mov
ds
fcomip
call
dec
test
jnp
jle
loop
dec
xor
mov
cs
ljmp
adc
imul
mov
and
into
inc
call
std
cmp
je
int
sarb
test
loope
sbb
pushl
and
mov
scas
outsb
sahf
add
stc
sub
cmp
scas
jnp
xor
add
push
clc
pop
lock
or
ror
mov
mov
ljmp
adc
mov
cmp
cwtl
arpl
xor
and
sub
call
mov
push
dec
adc
mov
mov
mov
inc
inc
lret
push
jmp
not
xchg
enter
dec
or
xchg
cmpsb
insb
xchg
xor
sub
fisubrl
adc
cmp
xor
ret
or
cwtl
mov
adc
sub
xor
leave
jl
jmp
pusha
fistl
ds
mov
jmp
movsb
mov
loop
jge
inc
mov
push
aas
jnp
push
add
lcall
cmpsb
lret
add
jae
jle
test
cmp
pop
in
sarl
int3
int
sub
push
mov
jg
imul
jp
insb
jns
jg
lahf
orb
pusha
xchg
ret
dec
bnd
incl
out
lds
or
js
mov
mov
mov
xchg
rolb
pop
pop
lds
or
ret
lea
or
jb
dec
xlat
cli
adc
lcall
into
mov
incl
ja,pn
mov
jo
xchg
cmpb
aas
pop
test
mov
ss
inc
incl
cs
mov
je
push
lret
pushf
adc
mulb
xor
cli
call
jmp
jge
dec
and
push
inc
add
mov
sti
or
cmp
adc
dec
into
lahf
iret
mov
shl
test
pop
pop
clc
cmp
jb
pop
dec
fiadds
sbb
push
fcoml
xor
nop
test
inc
inc
jo
push
sarl
mov
call
and
in
cmp
pmaxsw
sub
bound
jl
dec
pusha
shrl
testb
adc
jnp
cwtl
xor
lock
and
lret
dec
stc
std
xor
fdiv
in
mov
lcall
and
adcl
fidivrs
testl
mov
dec
sahf
jo
jmp
fsubl
and
cwtl
push
xor
iret
xor
lea
std
scas
xchg
cmc
jle
and
adc
popf
and
mov
call
dec
test
xchg
adc
pop
add
shll
das
in
dec
repz
aas
xchg
lcall
nop
mov
fstpt
inc
bts
push
stos
loop
pop
or
lret
lods
aad
sahf
call
xor
repnz
cld
aad
movsl
outsl
pop
stc
addr16
rolb
call
loope
or
out
loop
addb
xor
push
or
and
stos
jmp
pop
and
test
fucom
adc
jg
mov
dec
push
mov
ret
aad
jmp
pop
bound
mov
decb
movsl
idivl
call
arpl
adc
fbld
subl
dec
in
arpl
jge
inc
ret
fsubs
loopne
lock
xchg
loop
xchg
ret
test
xchg
add
lcall
xor
push
in
test
mov
or
decl
je
ret
mov
jno
push
push
jmp
ljmp
mov
fwait
cld
dec
int3
sahf
out
xchg
push
xchg
divb
xchg
mov
xchg
mov
lods
and
aaa
dec
add
jmp
cld
jmp
push
mov
iret
pop
add
aam
jg
call
sub
fisttpll
jg
add
cmc
lahf
fbstp
fucomi
pop
fcoml
jg
and
test
push
fistpll
sahf
xchg
mov
lcall
mov
mov
andl
xor
cmp
movsl
mov
in
ss
mov
mov
stos
jl
lret
mov
inc
mov
int
mov
mov
push
repnz
or
incl
sub
cld
xor
xchg
call
repnz
adc
mov
subl
jmp
mov
scas
pop
sbb
xor
int
adc
push
xor
mov
or
mov
incl
add
push
push
push
sub
stos
out
and
push
xor
imul
stc
pop
jo
bound
sub
and
xcrypt-cbc
cmpsl
aam
push
ss
incl
mov
xor
dec
mov
add
sti
sbb
sbb
jge
xlat
out
push
rolb
pushl
in
dec
outsb
jne
mov
cmp
adc
jnp
mov
imul
lock
xchg
aas
sub
mov
cmpsb
incl
sbbl
lea
out
pop
xchg
test
jg
add
xchg
inc
cmp
pop
pop
jmp
bswap
cmpl
fdivrl
jno
out
stos
test
stos
subl
rorb
mov
cmp
pop
mov
mov
ljmp
mov
cmpsb
cs
pop
cmp
push
xchg
cs
clc
cmp
jno
jmp
sarb
test
in
adc
adc
sbb
mov
stos
out
lret
outsl
mov
mov
and
incl
push
loopne
inc
jg
cmp
int3
jns
incl
mov
sub
inc
jmp
daa
imulb
pop
sbb
adc
aas
xor
out
and
movsb
ja
out
sbb
cmpsb
pushf
jmp
fs
cmpb
std
xor
xchg
popa
lods
inc
movsl
mov
in
and
incl
mov
sbb
adc
push
lcall
push
sub
jae
mov
ds
pusha
inc
jmp
inc
inc
dec
ljmp
sar
lcall
mov
jo
and
gs
mov
fwait
shrb
jbe
pushl
adc
push
cmp
leave
and
dec
arpl
loopne
scas
adc
sbb
mov
fnstenv
push
dec
sbb
scas
clc
pop
and
sbb
xchg
mov
cmpsb
mov
out
cltd
call
xchg
lahf
adc
sti
or
push
nop
imul
add
jo
cmc
mov
shll
aad
aad
cmp
cmpsl
sbb
and
ljmp
pop
mov
in
into
mov
sbb
jmp
arpl
out
clc
jmp
mov
ret
loopne
popl
push
or
aad
ljmp
or
sarb
lret
out
ss
adc
fwait
and
pop
xor
pop
icebp
sub
pop
into
lcall
mov
push
out
stos
sub
sbb
stc
xchg
adc
jmp
mov
push
pop
xor
fcomip
mov
sbb
repz
outsl
xchg
mov
jno
xchg
dec
fdivrp
mov
xor
pushl
aad
or
sar
decl
std
jno
mov
int3
jnp
and
sahf
adc
lods
lcall
or
jg
fs
push
in
outsl
cmp
je
clc
adc
add
sbb
lcall
jo
dec
out
scas
aad
aas
frstor
ljmp
pop
lcall
cld
pop
cmp
popa
scas
test
lea
inc
cs
lahf
fcompl
dec
out
lea
add
dec
xchg
add
sbb
pop
mov
popf
adc
pop
ljmp
fcmovu
test
fldl
icebp
sub
inc
push
test
jle
or
jmp
or
hlt
mov
jne
out
movsl
notb
in
addr16
orb
cli
fimull
aad
ljmp
leave
lcall
leave
fstpl
loop
fimuls
stos
hlt
rcrl
sbb
adc
lcall
rclb
push
add
xchg
repnz
jno
jp
and
popa
add
sub
call
jmp
stos
push
sbb
jne
inc
push
cwtl
fsts
push
loope
fs
decl
lods
xor
out
pop
jb
rol
jle
or
jp
popf
xchg
xchg
mov
repnz
addr16
call
lcall
inc
push
pop
je
imul
fwait
mov
jne
or
jmp
mov
and
lret
sub
cmp
lcall
adc
incl
sbb
mov
inc
dec
and
daa
sub
in
cmp
jg
ljmp
push
iret
ror
mov
push
or
outsb
or
sub
loop
ljmp
aaa
sbb
ret
inc
shll
mov
and
inc
add
cwtl
mov
shl
mov
into
notl
add
push
inc
xchg
inc
in
out
add
mov
into
call
cmpsb
insb
mov
pop
add
mov
sbb
into
cmp
pushl
sbb
sbb
jg
sub
shll
xchg
insb
jae
add
xorb
decl
cmc
pop
pop
dec
xor
xchg
xlat
add
or
in
in
inc
test
adcb
imul
and
cmpsl
shrl
jmp
in
add
movsb
jbe
cmpsb
jle
jp
movsl
andl
outsb
outsb
jmp
js
jmp
xchg
jmp
pusha
outsl
jns
bound
into
cmp
jns
mov
and
imul
pushl
popa
cltd
in
mov
xchg
jmp
cltd
fsqrt
adc
jle
pop
xchg
scas
cli
fiadds
sub
pop
sbb
push
out
mov
xor
in
pushl
push
sti
jg
inc
int3
jb
sub
cmp
mov
fs
dec
bound
mov
jae
incl
in
pop
cmp
adc
fs
daa
add
fcmovnbe
pop
xorl
in
push
decl
jl
leave
arpl
xchg
xlat
sbb
dec
mov
shrl
pushf
outsb
lock
aaa
jge
xchg
call
popa
popf
movsb
jl
cltd
aam
push
rcll
aas
mov
ja
clc
lods
frstor
decl
pop
pop
push
call
ja
in
xchg
pop
outsl
es
icebp
jnp
ljmp
mov
js
cmpb
aad
adc
and
stos
cltd
jg
lret
imul
jns
fisttpl
inc
scas
pushl
aaa
inc
pop
sub
or
jl
sbb
les
pop
and
call
outsb
sub
scas
aam
xor
mov
xchg
out
imul
orb
rolb
mov
das
add
outsl
push
cmpl
xor
dec
je
ja
jg
call
loop
lahf
jb
in
cmp
dec
sbb
xchg
ja
jle
mov
sbb
jmp
popf
fs
mov
jg
fisubl
mov
cmpsl
add
jle
ret
sti
mov
mov
bound
push
inc
add
and
cmpsb
add
sti
sbb
iret
fs
shrb
lret
in
test
push
sbb
cmp
mov
push
add
sahf
stos
sbb
fisubrl
adc
repz
pop
enter
repz
decl
fcom
and
jne
or
adc
fistl
subl
incl
mov
ljmp
mov
dec
bound
shlb
pop
add
ljmp
xchg
mov
cmp
repnz
lods
lcall
movsl
adc
cmpsl
cmp
test
jmp
test
test
xlat
xor
cwtl
cmp
sbb
sub
aaa
cmpsb
pop
inc
sar
call
and
xchg
jp
xchg
xchg
mov
mov
mov
es
ljmp
outsl
daa
xchg
pop
lcall
lret
jbe
les
testl
movsb
add
dec
xor
scas
add
das
adc
and
ds
or
pushl
shl
insl
cwtl
xor
adc
nop
push
push
xchg
incl
or
ss
pop
dec
add
movsb
sbb
mov
adc
ljmp
int
jg
insl
enter
pop
push
lea
jbe
rclb
cmc
jg
adc
mov
xchg
pop
pop
push
cld
xchg
das
xchg
lock
cmp
sub
mov
jmp
movsl
lods
mov
dec
and
enter
popa
popa
mov
ret
jne
pop
mov
mov
add
clc
mov
sub
and
das
mov
sar
incl
aad
xor
scas
jp
cmp
flds
out
or
xchg
loopne
pop
and
xchg
dec
pop
nop
dec
or
les
jp
mov
call
insb
xor
in
das
mov
adc
jle
jo
mov
decl
xchg
out
sbb
movsl
or
cs
add
or
push
jle
jo
test
cli
sbb
xchg
bound
dec
ljmp
insl
loope
enter
stos
setae
aad
and
mov
pop
lods
adc
stos
test
flds
aaa
and
movsl
les
add
loope
jmp
add
lret
xorb
xchg
mov
std
lcall
jl
sub
jle
lret
jae
jbe
gs
inc
mov
fildll
cld
popf
jo
or
ret
sub
or
clc
and
mov
xchg
arpl
es
inc
lcall
ret
inc
mov
xor
jg
jno
pop
loope
push
lock
mov
jmp
sbb
stos
js
dec
jmp
sahf
push
clc
inc
popf
aas
out
lret
incl
pop
outsl
mov
sub
dec
and
jp
xchg
xchg
mov
outsl
jmp
insb
dec
iret
das
test
mov
xchg
mov
jnp
pop
sbb
and
rcll
pop
xchg
mov
adc
call
mov
mov
subl
cmp
ljmp
push
push
xor
pop
test
jle
in
subl
dec
cltd
inc
aaa
les
ljmp
cmc
xor
pop
and
xchg
jae
aad
push
fcomps
lret
push
fwait
jecxz
insb
testl
in
pop
pop
aad
push
rorb
cs
sbb
fistps
add
adc
push
decl
mov
test
rcrb
mov
call
sub
sub
outsl
nop
mov
mov
iret
push
les
push
adc
cmp
push
or
in
push
adc
lret
pop
aas
sti
push
xor
rorb
mov
stos
sahf
call
aam
arpl
out
and
pop
xlat
inc
inc
test
incl
pop
fcmovu
sbb
inc
mov
in
sbb
xchg
mov
pop
test
xchg
sub
jmp
in
mov
js
fwait
mov
int
imul
aad
mov
decl
cmp
int3
out
pop
sahf
movsb
fimull
or
jp
out
scas
aaa
ljmp
outsb
rcr
xorb
jo
and
cmp
fnstcw
pushl
push
xchg
push
inc
daa
bound
and
sbb
rcll
jecxz
push
jl
dec
mov
ljmp
fcmovb
mov
push
push
push
fdivrl
adc
mov
xor
scas
xor
sti
popf
lods
in
push
dec
notb
sub
hlt
cmp
adc
sti
xchg
or
gs
in
push
cs
sbb
xor
js
mov
insl
test
call
aad
sub
in
xor
shr
adc
sub
incl
mov
and
pop
rcl
push
or
xor
push
cmp
sub
dec
jnp
mov
adc
sti
sahf
mov
insb
outsb
xchg
out
mov
mov
dec
xchg
inc
mov
push
jl
mov
in
add
ja
daa
xchg
lods
pushf
inc
idivb
pushl
add
jne
cmp
ds
call
add
mov
mov
shll
jl
adc
mov
cld
sub
add
push
adc
lcall
rep
clc
mov
pusha
dec
mov
cs
es
or
sub
fbstp
push
stos
or
data16
hlt
sahf
and
decl
idiv
das
sar
dec
push
stos
dec
jae
testl
clc
stos
pop
add
mov
jmp
pop
xor
inc
jle
adc
or
xor
or
clc
ljmp
addl
sti
fs
mov
mov
lahf
pop
cvtdq2ps
sub
jle
add
int3
repnz
ss
test
dec
nop
mov
sub
fcomip
pushl
add
loopne
andps
daa
xor
cmc
jl
insb
inc
dec
jle
sbb
mov
push
bound
popf
dec
push
into
loope
mov
outsb
cmpsb
xor
js
mov
nop
ljmp
jb
rcll
fbld
loopne
jp
andb
jge
mov
imul
in
cmp
push
cs
mov
lods
mov
loopne
jl
push
lcall
out
mov
cmpsl
push
rcll
fwait
dec
loopne
xchg
pop
push
push
sahf
dec
fstpl
hlt
fcomp
std
mov
dec
sub
insl
fcom
cs
inc
pop
sub
xchg
lea
rcrb
insl
xor
push
cltd
mov
call
adc
jp
xorl
ljmp
dec
addr16
jb
sub
call
add
arpl
pop
js
loope
mov
loopne
adc
scas
clc
iret
mov
dec
mov
jge
push
push
dec
call
cld
jmp
clc
lahf
bound
push
adc
pop
scas
mov
ljmp
nop
orb
andb
shl
test
ljmp
test
jmp
jle
in
cmp
xlat
cld
jne
ds
sbb
lds
call
jl
or
test
shll
pop
pusha
lock
fcomi
adc
xchg
sti
inc
ljmp
add
dec
std
fadds
sbb
cmp
xor
hlt
jo
xlat
daa
scas
mov
nop
stos
xor
jo
cmp
ret
jmp
jg
jmp
xor
cmc
enter
rorl
imul
pop
insb
mov
decl
push
daa
fdivs
sub
gs
dec
aaa
pop
dec
mov
adc
push
inc
orb
mov
sbb
scas
ja
mov
cld
jg
xlat
dec
add
mov
and
adc
je
cmpsl
movsb
ljmp
ljmp
addr16
rorl
call
mov
and
lods
inc
push
sti
iret
mov
jbe
fimull
cmpsb
aad
mov
ljmp
push
daa
jecxz
adc
mov
jne
pop
fnstenv
mov
xchg
sub
pushl
push
jno
push
ja,pt
jp
sub
popa
sub
jo
mov
lcall
lock
lods
mov
adc
lea
fwait
pop
mov
ja
loopne
sub
pushl
inc
mov
sub
fistl
fldenv
cmp
cwtl
sbb
and
incl
xchg
sbb
pop
mov
sbb
cmpsb
ja
lds
cs
fisttps
push
add
aad
ret
cmp
gs
jae
or
adc
mov
pusha
lods
repz
and
int
dec
inc
mov
mov
lods
outsb
mov
sub
and
lcall
or
fisubs
rcll
cmpsb
push
rorb
jle
pop
pop
cltd
mov
lret
mov
mov
jbe
mov
daa
repz
xorl
aam
jb
out
out
ss
test
mov
nop
out
shl
xchg
adc
push
push
xchg
pop
cmp
sub
lods
mov
jge
mov
iret
mov
cld
or
in
sarl
insl
aaa
mov
lds
pushl
pop
push
sbb
dec
fsubrs
and
sub
jg
stos
call
jnp
inc
adc
pop
or
mov
push
inc
sub
mov
push
jns
orb
xchg
lcall
scas
dec
xor
sti
aad
ss
mov
mov
mov
inc
push
add
ret
dec
add
sbb
sub
push
adc
jl
xor
lcall
push
mov
mov
inc
movsb
inc
sbb
sbb
call
test
pushl
mov
xchg
mov
jmp
lcall
mov
cwtl
es
jecxz
aam
mov
mov
mov
enter
jo
stc
js
and
lock
or
sbb
cmp
mov
repz
cs
mov
pop
adc
std
std
or
aas
cs
fcompl
in
adc
xchg
xchg
mov
jns
mov
std
push
loopne
add
push
sub
cmp
add
call
imul
iret
mov
dec
enter
inc
mov
fcoml
jno
arpl
sub
call
sbb
aas
in
mov
int
mov
mov
sub
jg
out
add
out
ds
fucomip
or
sub
jmp
fld
sar
xchg
cmp
les
shll
insl
push
outsb
xchg
xor
mov
jns
adc
xchg
push
mov
decl
jo
jb
mov
push
das
lret
xchg
hlt
mov
jno
sub
jmp
incl
sahf
aad
in
inc
insb
push
cmp
jl
data16
cmp
cmpsl
cmc
dec
xor
call
incl
or
in
jo
add
push
cwtl
dec
pop
leave
add
pusha
addl
jp
lock
fs
xchg
inc
mov
jg
pop
scas
rcr
rcll
rol
jbe
sub
loope
lcall
xchg
scas
aam
sub
mov
and
decl
pop
and
ret
rolb
and
imul
sbb
mov
fs
push
fnstcw
incl
mov
andb
lods
aam
dec
insb
push
push
pop
iret
pop
in
xor
pushl
ret
jp
xchg
cmpsl
push
xchg
sbb
cmp
call
mov
mov
xchg
inc
sahf
sbb
cmp
jmp
push
int
sub
jmp
stc
or
adc
or
sbb
aam
repz
and
scas
jl
ret
dec
mov
push
aaa
std
scas
decl
arpl
cmp
testb
push
scas
or
incl
loope
dec
out
ret
inc
mov
addb
in
rcll
cmp
mov
ljmp
leave
mov
aaa
ljmp
push
ficompl
push
jbe
incl
call
loop
pop
fdiv
xor
lods
xor
mov
shll
push
sub
es
hlt
movsb
rol
inc
mov
push
fwait
pop
xor
xchg
imul
mov
mov
lock
jg
mull
xor
or
out
inc
fstpt
inc
popa
cmp
pop
pusha
add
call
xchg
jbe
enter
fiaddl
insl
scas
mov
pop
negl
sub
aas
xchg
call
popf
pusha
rcrl
gs
jns
outsb
enter
jb
add
push
or
test
sbb
mov
decl
xchg
adc
mov
jo
cli
mov
loopne
sahf
ss
mov
lret
jae
rclb
add
call
cmp
int3
adc
repz
mov
pop
push
cs
xchg
xor
lods
stos
adc
pushl
decl
lahf
push
in
fcmovbe
xchg
pushf
std
mov
in
mov
out
movnti
mov
popa
ljmp
cmpsl
vpshufd
and
mov
jg
dec
repnz
stos
push
jl
add
mov
sub
aaa
int3
cmpsb
xchg
jmp
loopne
cmpsl
nop
lret
imul
dec
cld
pop
loop
push
ret
out
adc
cs
ljmp
fdivrs
imul
pop
cmp
or
mov
test
jb
lahf
xor
cmpsl
mov
mov
pop
inc
mov
push
rcr
aaa
jne
imul
shlb
shrb
out
mov
ss
and
add
jmp
mov
int3
sbb
mov
cmp
mov
mov
push
repz
decl
mov
in
fldl
out
jo
in
hlt
sahf
mov
in
push
mov
test
sbb
push
fcomip
call
jns
mov
mov
jmp
es
xchg
orl
push
rcrb
lcall
sbb
dec
jns
int
stc
pop
push
and
in
scas
notb
decl
add
in
add
repz
jle
leave
pushf
cmpsb
dec
fstps
incl
jb
pop
fcompl
test
roll
orl
jne
mov
lds
jl
xchg
mov
aas
xor
cmp
popf
adc
mov
mov
mov
or
mov
lret
arpl
hlt
lock
negl
jp
mov
lods
data16
inc
call
mov
mov
mov
cmp
jg
roll
popa
xor
mov
jmp
push
cmp
pushf
into
fwait
xor
ficoml
inc
push
jl
mov
and
pop
nop
in
jmp
lods
fists
sbb
sub
inc
xor
cmp
daa
lea
xor
push
ds
mov
es
xchg
sub
in
jne
add
loope
ror
adc
and
lods
cmp
cmp
xor
push
sahf
mov
decl
pop
adc
insl
jle
mov
stos
out
rorb
aas
ljmp
push
and
fimull
push
imul
and
cmp
ss
pushl
fsubrs
jl
inc
fstpl
es
xor
fsubrs
in
mov
insb
mov
mov
push
mov
std
arpl
xor
cld
or
add
cmp
dec
lahf
add
push
movsl
adc
aam
test
pusha
test
sub
add
ljmp
bound
rorl
cltd
push
fwait
xor
test
shlb
adc
lcall
mov
insb
enter
sbb
ljmp
xor
add
shlb
pop
pop
inc
push
cmp
or
test
mov
fldl
ljmp
cmc
adc
push
or
imul
sub
and
sbbl
stos
incb
movsb
cmp
incl
add
and
push
mov
add
pop
xchg
incl
dec
lea
jns
andl
jbe
cmp
xchg
jmp
push
jne
adc
aam
test
out
push
mov
ret
jns
repz
clc
push
and
out
dec
hlt
into
cld
pop
xor
fldt
pop
push
clc
push
ljmp
fs
mov
test
sbb
jne
ret
int
sbb
jmp
js
jmp
into
lcall
mov
dec
push
lods
xchg
mov
or
xchg
xchg
push
addr16
add
or
and
cli
pushl
mov
insl
data16
std
nop
and
mov
mov
rcr
lds
lahf
ja
xor
insl
or
inc
div
sub
das
cmp
xor
add
cld
iret
pop
cmp
dec
jnp
dec
or
sub
push
sub
mov
mov
cmp
rcl
xchg
pop
stos
push
call
xor
mov
les
push
iret
sub
and
add
mov
pushl
stos
nop
mov
mov
pop
xorb
mov
outsl
xchg
lods
iret
or
insb
pop
and
and
ret
lcall
inc
mov
cmp
sbb
mov
add
or
cmp
in
call
jecxz
mov
out
out
jne
dec
decl
gs
cmp
scas
ret
add
dec
jae
popa
adc
xchg
mov
iret
outsb
push
xchg
adc
lds
call
scas
or
lds
cmp
and
xchg
scas
addr16
lahf
fcoms
int
ljmp
ja
sahf
sub
pop
and
mov
in
cmp
xchg
fldl
ja
jle
mov
add
mov
mov
pop
xor
sub
inc
push
nop
xchg
fmulp
cli
pop
sbb
lock
fwait
mov
cmp
add
or
decl
int3
out
cmpsb
ja
mov
cld
xor
sub
jbe
xor
std
and
dec
sarb
scas
clc
mov
mov
cmp
adc
clc
and
and
ljmp
lcall
pop
js
push
fwait
xchg
add
incl
mov
xor
mov
shrl
test
std
add
incl
mov
cmp
mov
into
adc
in
fcomps
xor
mov
lret
ljmp
add
loop
idivb
cmp
pop
mov
inc
loop
adc
push
mov
addr16
sub
outsl
dec
test
xor
adc
xchg
jbe
jno
cmp
push
lret
push
lods
lcall
jb
push
out
cmp
mov
push
fwait
mov
and
ljmp
pop
fs
xchg
xor
or
jo
or
shl
cmp
xor
loopne
fwait
fwait
mov
enter
mov
jmp
jp
add
dec
lcall
inc
inc
mov
dec
rcrl
jmp
cmp
xchg
lret
insl
push
ret
mov
shrb
inc
sahf
xchg
data16
lcall
mov
cmpb
and
sbb
adc
jg
dec
je
ret
mov
in
aad
lds
mov
and
shlb
add
pop
cmp
dec
and
loop
call
xlat
outsb
pop
rcll
in
jg
lea
lcall
ja
jne
nop
aaa
mov
sub
fimull
daa
and
xor
push
push
jge
cli
push
out
lods
mov
es
fidivrl
loop
cwtl
in
cmp
call
call
decl
xchg
sbb
or
shlb
cwtl
inc
dec
imul
fsubrl
cmp
sub
ss
pop
lods
das
fistpll
jmp
iret
jge
sub
mov
subl
mov
or
mov
icebp
fwait
pop
push
stc
mov
ljmp
testl
sbb
aad
pop
and
shl
sub
cmc
lods
cmpsb
repnz
add
xor
jl
imul
adcb
flds
sub
ljmp
pop
mov
sub
xor
decb
out
test
and
mov
les
loope
repnz
clc
push
cmp
ljmp
andb
push
jge
mov
fisttpll
lods
jle
and
push
mov
nop
test
insl
fs
lods
jns
sub
xor
mov
xlat
insl
call
or
jbe
movsb
loopne
aam
and
ds
or
push
dec
daa
stos
stc
cs
xchg
int
shll
stos
rorb
xchg
in
xchg
incl
push
sub
aad
dec
lcall
or
xchg
repnz
std
std
jg
call
xor
dec
outsb
inc
outsb
jge
je
pavgw
aaa
test
in
mov
stc
lcall
cli
test
jmp
dec
sub
xor
inc
mov
sar
push
mov
movsl
popa
test
push
or
pop
push
add
ficoms
cwtl
dec
jg
mov
int3
mov
dec
cmp
cmp
scas
mov
lret
pop
fldl
incl
mov
add
xor
movsb
cwtl
mov
ljmp
fisubrl
mov
test
int3
ljmp
call
in
testb
loopew
lds
imul
xlat
mov
or
cmp
xor
cld
pushl
add
out
mov
mov
mov
add
pop
je
jg
xor
fcomp
inc
adc
ret
push
jno
imul
push
cmp
rol
out
push
test
popf
mov
mov
mov
xchg
ss
fcmovnu
in
roll
mov
sbbb
incl
insl
xor
fsubs
mov
dec
jno
adc
movsb
jb
rcr
dec
push
incl
ljmp
pop
adc
jns
lea
fidivrs
jo
cld
or
mov
lcall
loopne
pop
xchg
push
decl
xchg
into
sbb
out
mov
cwtl
pop
clc
scas
dec
mov
fcomip
and
arpl
movsb
xchg
lods
fsubrs
daa
pop
je
cli
js
movsl
inc
repz
mov
incl
mov
nop
cvttps2pi
sbbl
sub
inc
add
inc
add
outsb
ds
out
or
stos
sbb
decl
stos
bound
imul
xorb
lods
jmp
pop
out
sbb
push
movsb
scas
jmp
ljmp
aam
and
or
fwait
adc
test
cmp
sub
jo
add
jne
push
dec
mov
mov
and
xor
mov
or
dec
out
fildl
sub
jnp
aam
add
ret
cmpsb
xor
inc
bound
xchg
sub
and
jecxz
xchg
mov
fdivr
mov
or
add
push
dec
repz
push
in
or
ljmp
rolb
push
fucomi
rcll
stc
mov
ret
push
andl
or
add
mov
jmp
fidivl
push
pop
add
xchg
xor
sbb
cltd
in
daa
xor
xchg
pushf
rolb
jg
xchg
jecxz
loope
dec
insl
cmpsl
xchg
sub
xchg
mov
lcall
jo
fcompl
mull
pop
dec
das
into
call
loopne
subl
sub
lcall
jbe
lcall
mov
lcall
stos
lea
fsubs
leave
lahf
roll
mov
test
mov
and
sbb
add
nop
cli
sbb
clc
mov
and
pop
jnp
add
clc
lcall
fldenv
pmaxub
ret
sub
or
sar
decl
xchg
dec
dec
out
sbb
jle
jl
push
popa
gs
or
mov
push
inc
mov
jno
jg
mov
mov
sub
outsl
xor
inc
lcall
arpl
bound
inc
pop
xchg
xor
add
jne
and
xor
inc
or
sbb
push
mov
cmpl
cmp
sti
aam
cli
in
sub
sbb
mov
or
push
adc
mov
push
dec
mov
adc
fpatan
dec
in
mov
ja
negl
add
cmpb
jnp
or
mov
sub
adc
fstpl
adc
nop
test
orb
mov
xor
inc
mov
pop
ja
in
es
push
incl
loop
mov
scas
cltd
sbb
imul
rclb
loopne
fsubs
adc
adc
lods
xchg
pushl
pusha
sub
sub
pop
adc
jl
je
std
decl
sub
jo
pop
cwtl
mov
ja
xor
cmc
cmp
and
dec
xorb
jbe
lds
cltd
pop
sub
ja
ror
imul
pushf
jo
ljmp
mov
fcoml
aam
xchg
inc
lock
dec
add
push
or
ret
mov
mov
jnp
cwtl
cmc
jg
jno
or
inc
int3
mov
push
sbb
rcrb
or
pop
sahf
incl
cmp
add
jns
enter
cmp
xor
inc
jns
and
fsubrl
ljmp
mov
enter
insb
pop
std
jb
call
lcall
dec
in
cmp
mov
mov
xchg
mov
pop
or
dec
xor
and
ljmp
mov
addl
jo
repz
cmp
lods
and
xchg
nop
jns
jbe
std
pushl
xchg
cmp
aas
stos
arpl
fidivrs
loopne
mov
stos
xor
push
clc
jb
test
sbb
sti
mov
push
addr16
dec
decl
mov
mov
jbe
movsl
cmc
setno
fstpt
cmc
rcr
in
dec
mov
mov
inc
xchg
xchg
fs
push
pop
rorb
jp
shlb
jl
fldl
popa
and
cli
decl
cmp
mov
scas
rolb
inc
rcll
sbb
int3
in
lock
popa
movsl
mov
stos
ss
pslld
addb
inc
lock
or
pop
sub
fdivrp
insb
das
cli
jmp
bound
xor
icebp
out
cmc
add
add
inc
ss
out
jg
push
mov
clc
int
out
jmp
jae
lods
jns
mov
cli
ret
xchg
fcomip
lcall
lret
dec
lods
mov
push
lcall
sub
std
call
repnz
cmp
lods
push
lock
subl
cmp
icebp
add
or
neg
or
fistps
jl
pop
sbb
push
in
jge
jg
xlat
ljmp
xchg
cmp
jb
int
enter
lret
decl
popa
mov
mov
or
ljmp
mov
loope
sub
fwait
lods
mov
lret
out
or
push
and
xlat
stos
jg
leave
out
lcall
icebp
mov
ret
outsl
adc
mov
mov
inc
scas
cs
call
inc
pop
jne
les
pop
push
push
mov
les
sbb
or
add
mov
jmp
jecxz
test
pop
or
dec
test
sub
mov
xchg
aad
jmp
enter
in
and
jp
add
dec
sahf
pop
add
mov
pushf
or
sub
pushl
xor
pop
pop
ret
stc
inc
ret
outsl
cld
jns
or
push
sbb
xchg
ss
mov
push
push
mov
mov
push
std
aad
or
pop
incl
dec
xchg
sub
repz
sub
inc
sbb
jbe
xchg
testl
lcall
pop
and
mov
pop
loop
loopne
inc
xchg
xor
xlat
add
jmp
loop
sub
outsl
insl
pop
ret
sub
int3
xor
aad
je
pop
jp
call
jne
sub
push
or
shlb
fisubrs
mov
adc
jmp
push
lahf
lcall
mov
jmp
push
xor
mov
and
dec
es
cltd
repnz
xchg
jmp
bound
ljmp
mov
sub
stos
push
notb
leave
inc
bnd
hlt
xchg
inc
mov
mov
out
jg
jg
xchg
loopne
sbb
sub
movsb
ss
je
adc
xor
js
repnz
mov
repnz
shlb
adc
shlb
in
jecxz
stos
adc
lds
dec
and
out
shrb
add
push
inc
inc
add
in
mov
sub
imul
shlb
movl
sbb
mov
and
rorl
adc
cmp
ljmp
and
jne
stos
mov
xor
cmp
ret
popa
lds
add
or
clc
pop
add
jg
test
out
dec
cmpl
sbbl
std
imul
add
jno
add
ss
repz
mov
inc
loop
test
scas
or
shlb
adc
call
pop
aas
xor
push
lret
inc
sbb
popa
mov
les
bnd
loope
pop
rcrl
call
cmp
dec
fmulp
das
adc
xchg
psubb
fwait
jle
decl
out
idivb
mov
dec
repnz
push
cmp
jecxz
cs
lods
cmpsl
push
ljmp
mov
sbb
mov
aad
pop
dec
fcompl
inc
icebp
fisubrs
scas
cli
ljmp
pop
mov
inc
fisubl
and
nop
adc
decl
repz
xchg
sbb
js
shrl
xor
sub
pop
add
call
push
or
iret
popf
xlat
jb
push
jbe
xchg
pop
negl
adc
bound
dec
xchg
popa
cmp
inc
nop
js
insl
push
call
lock
bound
push
sbb
lcall
mov
inc
xchg
movsl
xlat
vcvtsi2sdl
sbb
scas
lret
pop
mov
rolb
out
adc
mov
jg
push
jb
adc
in
bound
jae
pop
sub
aad
push
call
test
xchg
fucomi
je
lods
cli
and
cs
lock
pop
incb
jnp
stos
dec
jl
in
gs
call
jmp
jbe
cs
or
sti
push
sub
outsl
inc
cmp
mov
jle,pt
inc
add
cmpsl
jge
jp
iret
fidivrl
dec
outsb
mov
sub
or
mov
or
sahf
mov
push
cmp
or
cmp
mov
mov
stc
push
dec
hlt
and
adc
fwait
xor
lcall
and
mov
mov
mov
mov
lcall
mov
jbe
pop
sub
sub
out
aas
out
clc
push
pop
cltd
iret
out
lahf
fistpl
sbb
pop
in
mov
xor
xchg
loopne
clc
jg
sub
out
or
xchg
in
jo
mov
repnz
in
mov
fisubrl
decl
shlb
sbb
inc
fidivrs
xchg
mov
test
and
movsl
push
ss
ljmp
cli
dec
loop
adc
jno
ret
mov
fimull
ret
inc
fbstp
push
ljmp
mov
fldenv
inc
das
in
dec
mov
adc
mov
movsl
mov
decl
xor
cmp
pop
mov
adc
fwait
push
lock
jge
ds
divl
fists
cmp
mov
nop
sbb
or
add
shll
pop
fimull
mov
lcall
fsts
bnd
jae
ds
jae
jp
mov
leave
test
pop
xchg
xchg
inc
decl
sahf
jle
mov
xchg
cmp
scas
xchg
dec
cmc
dec
mov
cmp
push
mov
or
jg
cli
iret
push
sub
cmpsl
movsl
fcoms
imul
inc
movsl
jp
push
xchg
addb
lret
xchg
ljmp
aam
adc
lret
push
sub
sbb
negb
incb
push
sarb
ljmp
leave
test
fdivrs
push
in
add
and
jmp
adc
jmp
xchg
mov
xchg
mov
in
cli
ljmp
enter
jmp
sbb
popf
pop
inc
pop
jg
cld
fld
sub
push
jg
ja
ret
popaw
sub
mov
lods
test
xchg
cmp
add
sub
mov
and
add
idivl
ja
sbb
out
push
mov
mov
cmp
adc
mov
fsubrp
incl
push
jp
sbb
push
sub
inc
adc
dec
cmp
dec
ljmp
rolb
test
sbb
adc
mov
mov
sbb
jg
xchg
or
mov
movsl
hlt
je
xchg
cmpsb
nop
pushf
xchg
or
lods
push
xchg
cs
pop
ret
stos
outsl
icebp
test
sbb
loope
pop
sbb
cli
cmp
sub
inc
aaa
int3
lcall
add
movsb
mov
arpl
inc
notb
add
mov
mov
decl
adc
dec
xor
sub
jg
ss
add
jo
lcall
lret
add
cmp
int
fsubr
and
sbb
in
mov
mov
sbbb
add
push
push
add
add
jl
lcall
sar
add
lcall
fptan
mov
jnp
filds
test
loopne
xor
lock
incl
enter
mov
ret
ja
jne
bound
stc
popf
dec
iret
xchg
cltd
call
rolb
call
cmp
push
popa
mov
je
xchg
push
jne
vpsllq
lods
cwtl
cmp
notb
add
lods
xchg
inc
sti
fldl
rcrb
imul
decl
inc
jnp
inc
cli
jmp
cwtl
sbb
push
sbb
out
hlt
in
movsb
or
in
decl
testb
adc
cmc
mov
pop
pop
mov
int3
fisttpll
push
mov
push
cmpsl
test
mov
test
mov
rcr
sbb
or
adc
or
fs
xchg
mov
adc
enter
hlt
pop
and
dec
push
das
clc
out
ljmp
cmpsb
std
popf
push
xchg
push
sahf
daa
and
out
push
pusha
dec
inc
js
dec
lea
push
stc
test
inc
jmp
rolb
dec
or
mov
mov
jmp
shll
lret
out
and
ljmp
cwtl
inc
pusha
out
jnp
out
popa
ja
jmp
jmp
es
fidivs
mov
lret
pop
iret
neg
inc
lea
pushl
mov
xchg
sub
sbbb
aam
les
jge
and
mov
outsl
push
push
push
clc
jge
mov
pop
mov
stos
mov
cli
mov
pop
jbe
les
inc
ljmp
clc
jg
dec
xor
out
inc
into
and
jae
out
jne
loope
pop
incl
pop
addb
aad
call
scas
add
xor
ljmp
lods
mov
subb
sub
sub
xchg
loop
ret
pop
pop
push
cmp
jg
ffreep
mov
adc
sub
sbb
pop
push
iret
pop
mov
and
push
cmp
mov
rolb
ss
and
cmp
push
das
push
test
jle
jmp
push
pop
arpl
into
jae
aaa
lods
cmp
xor
mov
inc
jns
call
jbe
dec
add
ds
outsb
insb
dec
fldcw
add
mov
loope
incl
push
je
and
sti
in
pop
nop
iret
imul
jno
mov
dec
pop
repz
insl
and
in
je
mov
mov
adc
clc
jg
push
fsubrs
dec
sub
and
enter
icebp
outsl
out
ljmp
roll
icebp
jle
cwtl
jo
dec
xchg
les
mov
push
push
call
ret
mov
push
mov
push
cmp
cmpsb
fs
nop
xor
jl
stc
inc
lret
or
ret
out
cmp
sbb
negb
sub
es
fistps
or
std
add
pop
dec
adc
adc
aam
fcomip
ljmp
push
or
imul
lods
dec
stc
mov
mov
repz
clc
sbb
push
pop
ret
mov
scas
incl
mov
xchg
call
mov
push
imul
idiv
decl
ficoml
fldt
call
jo
lret
subl
xlat
cmp
jp
jg
jg
mov
mov
jbe
mov
fucomip
loopne
pop
sub
inc
dec
inc
ud0
enter
dec
loopne
call
pop
insl
loop
adc
mov
or
incl
xlat
shll
fbld
in
push
arpl
add
adc
testl
adc
push
xchg
cmp
cmc
mov
xchg
in
xor
ss
mov
repnz
fisttps
mov
sub
sbb
cltd
mov
mov
loope
mov
adc
jle
sbb
imul
aaa
sbb
pushl
inc
adc
stos
arpl
and
xchg
inc
mov
mov
imul
stos
js
ljmp
sub
in
mov
loopne
and
push
add
int
cld
jg
or
outsb
add
inc
push
bound
and
ret
or
add
jmp
or
decl
cmp
aam
mov
lcall
jge
inc
mov
xor
insb
leave
imul
push
push
ja
pop
stos
dec
flds
mov
mov
popa
mov
ds
dec
xchg
ja
stos
pmaxsw
mov
loop
loop
hlt
push
andl
jecxz
push
incb
imul
ljmp
nop
arpl
xor
adc
hlt
jg
stc
pop
xchg
or
ljmp
push
mov
flds
jae
sub
fbld
or
popa
lods
ljmp
cbtw
sub
fsub
in
fs
pop
negb
scas
add
fisubrs
xchg
ja
xor
mov
pushl
inc
jmp
test
sbb
jmp
inc
jae
cmpb
mov
mov
xchg
xlat
push
in
lret
mov
xor
sub
js
mov
out
ficoml
jecxz
pop
mov
ss
cmp
mov
add
mov
dec
and
es
movl
movsb
pop
test
pop
das
and
decl
loop
ljmp
or
or
pop
jnp
dec
lcall
or
mov
sbb
loope
in
jno
addr16
sub
dec
add
jmp
or
lods
xor
mov
fs
mov
and
movsb
fsubrs
xor
push
fbstp
lds
sti
nop
mov
or
in
dec
dec
and
adc
aas
sub
int
jae
lret
aad
jg
and
mov
adc
adc
xor
add
pushl
cmpsb
ret
leave
jb
daa
ss
ret
lsl
mov
jmp
jmp
test
clc
call
mov
cld
cmp
adc
cmpsb
mov
ljmp
scas
mov
rolb
jmp
add
rclb
push
lock
inc
xchg
nop
mov
in
popf
jmp
lret
and
loope
leave
jnp
nop
mov
shlb
jne
jb
mov
dec
lret
jmp
arpl
sub
fisttpll
mov
in
dec
lds
fs
test
pop
mov
mov
inc
lret
gs
jp
push
or
jg
xor
adc
mov
inc
sub
inc
push
or
push
pop
xor
jbe
testl
mov
out
fists
mov
mov
movsb
out
mov
dec
pinsrw
adc
pop
loop
stos
adc
pop
cmpsl
daa
pop
mov
insb
cmp
call
adc
inc
sbb
xchg
test
in
jle
adc
inc
dec
cmpsb
ds
and
push
mov
js
cmp
lods
jbe
jg
mov
ud0
xor
clc
call
aad
xorb
loope
mov
cmp
hlt
decb
dec
and
sub
cmp
std
sub
push
mov
aad
add
dec
xlat
fs
call
bound
int3
and
shll
shl
and
sbb
idiv
cli
xchg
flds
std
mov
sub
sbb
sbb
mov
push
mov
adcl
sbb
push
sub
xor
mov
add
pop
xchg
pop
sbb
sbb
jg
mov
flds
or
xor
cld
call
lahf
jnp
sbb
enter
sub
lds
xchg
pop
dec
fcom
jg
sub
push
cli
pop
mov
mov
add
lcall
xor
mov
das
inc
adcb
add
lds
pop
outsl
divb
lea
lahf
dec
addb
jp
pop
test
adc
rcrb
leave
pushf
cld
push
cmp
decl
push
daa
mov
mov
hlt
xchg
adc
in
les
xchg
outsl
and
scas
xchg
mov
pop
inc
in
in
sarl
xchg
fsubrl
pushl
adc
pusha
mov
inc
mov
pop
test
jb
cli
sti
mov
icebp
stc
iret
lret
out
out
insl
test
sub
decl
loope
xchg
cwtl
sarb
lahf
mov
out
xor
call
sub
or
lods
outsl
add
mov
jne
aas
decl
jnp
jecxz
lock
lret
lock
or
mov
scas
inc
insb
popa
cmc
enter
and
decl
les
fwait
rcrb
fs
lcall
es
sar
mov
testl
scas
lods
push
loop
ficompl
mov
lods
fucomi
push
fiaddl
scas
add
inc
test
test
add
incl
pop
pushf
fwait
sbb
pop
sbb
cmp
sbb
sub
popa
ja
adc
daa
cmp
ljmp
ja
or
in
frstor
push
mov
push
int
lret
lcall
lahf
ljmp
sahf
add
cmp
xchg
in
pop
sub
or
pushl
pop
mov
or
scas
and
xchg
xor
fsubrl
iret
out
add
cmp
incl
icebp
out
jb
iret
push
lcall
stos
mov
shlb
ljmp
dec
xchg
xor
pusha
in
cmp
icebp
decl
out
pop
inc
loope
jo
bound
filds
inc
xchg
insb
pop
cmp
cmp
cli
mov
std
adc
adc
and
in
vmulsd
leave
mov
sub
outsb
mov
aad
sarb
fisubrl
jmp
cs
add
push
mov
and
mov
jns
gs
mov
cmovb
mov
jmp
push
push
push
fdivl
dec
loop
std
incl
pop
rorl
je
dec
popf
sbb
jmp
sub
ja
or
inc
sbb
cmp
add
decl
aad
lods
cld
out
push
out
call
mov
pop
adcl
mov
aam
push
inc
clc
add
js
int3
xchg
push
dec
inc
test
flds
ret
incl
xor
imul
inc
movsl
lds
adc
and
adc
ljmp
adcb
leave
adc
ljmp
call
sahf
repz
test
popa
sub
pushf
jmp
andl
pop
sar
pushl
xchg
pop
push
adc
adc
inc
into
out
insl
mov
push
cmp
stc
xor
pop
pop
sub
call
and
aad
jge
sarb
inc
outsl
inc
cld
daa
shlb
sbb
cmpb
jle
int
pushl
lods
sahf
je
sti
call
lds
repz
inc
iret
orl
mov
aaa
std
jmp
jge
psubd
adc
mov
pop
jo
adc
inc
cld
mov
test
push
jle
adcb
out
int3
mov
push
call
jns
dec
scas
pop
faddl
lcall
inc
insl
sti
and
in
mov
jmp
push
sub
clc
not
ljmp
adcl
jo
scas
daa
mov
fs
loopne
stos
push
aad
push
fwait
stos
js
push
push
mov
xchg
and
fstpt
inc
stos
xor
jle
push
rol
mov
lcall
stos
rol
pop
popa
cwtl
fcos
fcomip
scas
push
jbe
lcall
xchg
jns
jge
les
shl
faddp
cmp
incl
and
mov
push
and
test
test
sub
mov
testl
ljmp
movsb
pop
add
ja
inc
adc
push
xor
dec
stos
loop
daa
and
or
jmp
call
fidivrs
xor
out
shll
sbb
rclb
les
sub
insb
cmp
nop
push
shrb
ljmp
xchg
shrl
adc
xor
imul
out
rorb
pop
std
pusha
out
xchg
ljmp
mov
cmp
faddl
call
add
mov
pop
inc
mov
or
pop
pushf
pop
es
or
sbbb
inc
test
movsl
pop
cwtl
jle
test
mov
lcall
push
shrb
and
sub
scas
mov
cmp
sub
in
test
push
incb
jo
jg
and
lcall
jg
fstl
or
xchg
loopne
mov
std
inc
sub
adc
adc
scas
mov
inc
int3
sbb
inc
rcrb
xchg
mov
jg
push
fcoml
outsb
add
decl
cltd
sbb
sbb
sub
inc
incl
ja
xchg
jge
enter
andb
mov
fisubs
cmp
faddl
jp
fsubrs
push
xchg
insb
cmp
mov
xor
addl
xor
pop
dec
arpl
jbe
int
insb
pop
and
lret
cld
cmp
filds
ljmp
jnp
xor
xchg
mov
jo
or
xlat
stc
sar
mov
jo
ljmp
enter
push
add
mov
xlat
inc
test
xor
dec
hlt
jno
dec
ljmp
adc
dec
mov
in
les
fildl
fs
or
std
mov
es
sbb
lcall
sbb
jg
out
pop
cmp
adc
mov
and
add
push
cmpsl
add
call
clc
sbb
mov
fiadds
push
lea
dec
adc
daa
xor
loop
sub
sub
mov
and
jo
mov
mov
add
cmp
fmul
decb
out
ljmp
adc
cmpsb
daa
and
jo
mov
adc
push
decl
outsb
mov
stos
call
fildll
push
dec
fisubrs
cmc
mov
jp
test
decl
jb
pop
jns
nop
push
xor
cmp
aaa
push
incl
push
push
mov
js
inc
mov
dec
out
mov
mov
iret
decl
mov
add
divl
int
mov
pop
and
inc
jbe
xchg
pop
arpl
xor
jmp
test
bound
test
inc
out
ds
dec
mov
pusha
cmc
mov
jnp
xchg
stos
sbb
rorl
mov
ret
call
pop
mov
mov
jle
or
ljmp
xchg
cmp
call
or
in
sub
fisttps
in
addl
or
jp
xor
call
cmp
xchg
pusha
rol
cmpsl
mov
ljmp
sub
stos
lcall
jns
stos
mov
xor
scas
lcall
cmp
fsub
xor
test
mov
push
inc
ficompl
faddl
popf
xor
push
mov
mov
push
mov
daa
scas
cmp
mov
fs
jmp
mov
dec
into
mov
rcrb
ss
cmp
adc
incl
cld
cmc
mov
dec
lcall
pavgw
hlt
cmp
xorb
or
push
lcall
jg
pop
and
push
add
push
push
in
cli
sub
shrb
imul
add
popa
push
ljmp
ss
mov
and
mov
mov
clc
mov
mov
pushl
pop
scas
in
push
std
inc
dec
inc
pop
dec
xor
cmp
jg
ror
jg
icebp
imul
mov
es
or
and
dec
push
mov
and
jmp
mov
xor
out
scas
adc
dec
dec
mov
mov
movsl
ret
lock
ja
outsb
and
push
add
js
lods
pop
out
nop
cltd
maxps
loope
pop
mov
jmp
mov
icebp
loop
lock
idivb
nop
fisttps
decl
inc
fcomip
jbe
adc
leave
xchg
incb
call
fmulp
cmpsb
jo
pusha
rorb
mov
sbb
xor
out
or
stos
push
dec
les
lds
repz
ljmp
fmul
mov
scas
and
mov
jl
sub
es
insb
push
mov
std
sbb
pop
xorb
fdivrl
test
out
pop
pop
push
dec
out
cli
pushl
test
in
sub
or
fsubs
cmp
out
push
push
jmp
pop
jne
gs
subl
add
or
push
fldln2
mov
call
popf
ss
xor
loop
pop
mov
sbb
lock
jl
in
inc
pushf
jmp
push
outsb
inc
fisttps
divb
cs
cwtl
dec
mov
pusha
add
call
ja
mov
sub
lret
icebp
cmp
pushf
sub
adc
cld
lcall
push
out
push
xor
cmpsl
sbb
test
adc
jo
call
mov
gs
pop
lds
lds
sahf
ja
dec
lods
ret
pop
sbb
lcall
dec
lods
mulb
jle
fisubrs
jge
xor
es
and
ja
into
inc
pushl
pusha
lret
out
lret
test
or
gs
lret
jg
sarb
push
cmp
mov
jmp
mov
pop
xor
cmp
pop
lock
push
cmp
sbb
mov
lret
outsl
decl
loopne
inc
xchg
lahf
or
lods
js
push
xor
and
lock
movsb
or
sub
jno
mov
sbb
rol
cmp
lcall
mov
out
add
push
lods
andb
arpl
cmp
sub
jg
sbb
roll
push
repz
sub
jns
lods
xchg
stos
or
icebp
pop
std
dec
cmp
faddl
dec
ss
or
stc
sbb
aam
pop
jmp
xor
stos
jno
xchg
test
sbb
jno
cmpb
mov
jg
test
push
sub
shlb
fcom
iret
adc
decl
adc
lods
mov
jo
std
out
jge
xchg
cmp
and
mov
movsb
mov
sub
shll
or
pop
shrl
xor
mov
les
mov
fnstsw
inc
rclb
notl
mov
xchg
pop
loope
or
or
aas
movsb
jmp
pushl
add
jno
jo
mov
sahf
dec
fimull
enter
jecxz
test
or
push
mov
add
enter
jmp
dec
fsub
jg
lods
jmp
dec
mov
stos
mov
dec
fidivl
push
or
xchg
fscale
lods
aaa
stos
cmc
sti
push
pop
cwtl
mov
pop
sbb
mov
sbb
movsl
decl
rclb
rcl
jne
in
lods
lods
adc
inc
nop
add
dec
pop
pushl
lods
inc
les
clc
pop
test
loopne
nop
mov
mov
std
call
jno
dec
and
sbb
bound
test
pop
adc
adc
clc
das
xor
xchg
orl
cmc
cmp
sbb
dec
dec
xor
stos
pop
or
jg
inc
pop
xor
pop
cwtl
dec
mov
push
jne
adc
inc
push
aad
test
lock
mov
cmp
in
cmp
popl
cltd
jg
push
les
mov
lcall
xchg
fisubl
popa
data16
cmp
jbe
adc
xor
ret
and
insb
repnz
push
cmc
xchg
mov
or
adc
cmp
and
and
out
jge,pt
or
popa
out
fs
mov
sub
dec
add
imul
xorb
inc
mov
repnz
call
adc
mov
lahf
cld
push
pop
js
xor
fadds
cmp
xchg
call
ljmp
or
subb
push
into
sub
mov
jge
sti
and
push
adc
jmp
pop
cmovle
loop
enter
pushl
pop
ja
test
and
mov
sbb
lret
xchg
dec
test
decl
rorl
aad
int
test
mov
push
js
in
rorl
ja
cli
or
test
sub
sub
pop
add
fs
mov
and
fdivl
add
push
movb
fsubl
fwait
adc
sarb
rcll
add
cmp
add
clc
movsb
jecxz
mov
add
jmp
repnz
into
pop
idiv
mov
sub
cmp
das
sar
push
sbb
ljmp
lds
fistpll
mov
decl
sbb
lds
cld
xor
push
pop
ret
pop
dec
mov
aas
shl
ljmp
cmpsl
fcmovnu
jl
sysexit
jb
fwait
inc
jle
cmp
mov
dec
jo
decl
jg
xchg
xchg
jl
leave
jg
fidivl
sbb
std
pusha
jecxz
pushl
std
ljmp
jmp
xchg
push
sbb
add
mov
mov
push
mov
cld
mov
call
mov
xor
mov
sbb
or
in
mov
inc
cmc
cmp
js
sti
test
jns
lahf
push
jg
xchg
sbb
in
ud0
sahf
jb
js
js
cmp
out
stc
sub
adc
call
outsl
cmp
or
call
xchg
sub
xor
lret
cld
cmp
mov
cmp
nop
insl
sahf
jo
fwait
mov
mov
xchg
imul
stos
jg
leave
lahf
notb
in
int
popa
loope
inc
inc
out
les
movsb
stos
mov
inc
pop
scas
icebp
lcall
push
leave
mov
fs
sahf
aas
dec
adc
aam
cmc
xchg
dec
fldcw
mov
dec
pop
jmp
cmpsb
and
and
sub
adc
fisubrl
push
fwait
imul
test
call
nop
ljmp
leave
inc
mov
or
pop
jns
addb
rorb
ud0
jmp
ficoml
cmp
jns
lret
icebp
xchg
add
push
adc
mov
out
sbb
ret
jmp
pop
outsb
dec
fnstcw
loop,pn
rcrl
xor
sarl
sbb
inc
test
add
aam
jmp
inc
movsl
push
mov
filds
movsl
push
in
rcll
inc
adc
add
decl
std
jbe
stc
mov
ss
or
cmpl
dec
push
rcrl
cmp
in
jge
fildll
jecxz
inc
test
pop
xor
loope
mov
lcall
cmpsl
shl
lock
pushf
cmp
pop
lea
jnp
mov
scas
lcall
dec
cmp
iret
jl
xor
lcall
dec
xor
jnp
sub
decl
jnp
push
pusha
inc
fs
icebp
imul
or
loopne
int3
push
cmp
mov
pushl
fdivrp
mov
sbb
xchg
fstl
push
sub
dec
imul
jno
adc
cmp
mov
or
mov
enter
das
jno
xchg
out
push
push
fildl
xor
jo
fcomip
insb
jae
repnz
dec
movsb
jp
call
lods
sbb
dec
arpl
call
movsb
pushf
leave
inc
sbb
push
das
outsl
mov
les
call
out
add
sbb
jmp
aad
add
jmp
pop
scas
ljmp
hlt
lcall
xor
add
iret
inc
and
decl
lahf
lahf
sub
or
mov
xor
lcall
mov
dec
and
pop
loope
push
leave
nop
int3
adc
test
rol
jno,pn
xor
fcomip
jmp
rcrl
mov
shlb
push
popf
fmuls
les
adc
jg
popf
gs
sub
in
jecxz
mov
je
les
inc
call
mov
mov
jns
push
sub
loopne
loop
scas
mov
mov
jl
clc
lock
inc
pop
mov
xchg
sbb
lds
popf
xchg
mov
jae
mov
mov
sbb
int
decl
or
mov
and
mov
mov
imulb
push
sub
ja
mov
cmp
xor
aas
jo
repz
jne
and
jbe
dec
add
dec
fisttpll
pushf
sahf
testl
sbb
cld
pop
pop
cli
call
xor
pop
xchg
shlb
jecxz
mov
mov
xor
scas
ljmp
pop
pop
mov
mov
pop
cmp
dec
cmp
lods
push
add
dec
loopne
push
pop
jns
jb
sub
mov
add
loopne
in
cmp
cmpsl
cltd
pop
in
push
pop
aam
sbb
xchg
mov
and
lcall
xchg
inc
mov
mov
les
hlt
push
mov
jns
push
loope
out
sub
xchg
stos
xchg
lock
call
leave
jb
fildll
sbb
pushl
jno
jbe
mov
xor
xchg
fldcw
les
xor
add
add
xchg
mov
adcl
sarb
cmp
fdivrp
out
mov
xor
aam
or
push
push
xchg
decl
repnz
lods
sahf
cmpsb
int3
jb
mov
pop
push
test
add
mov
cli
and
xchg
es
clc
js
lods
std
mov
push
cmp
scas
enter
xorb
hlt
cmp
cld
push
cmp
pop
pop
aam
out
pushl
mov
out
mov
dec
mov
aam
dec
push
mov
cwtl
mov
dec
lods
xchg
add
xor
jge
add
pop
or
lret
shrb
dec
jnp
or
mov
out
jae
insb
cltd
push
out
ja
mov
ljmp
in
aas
pop
stos
inc
nop
ret
mov
cmpb
js
cmp
ret
pop
arpl
stc
sarb
dec
push
addr16
or
push
ljmp
mov
push
push
in
add
pop
dec
inc
jmp
inc
push
add
fcomip
inc
jbe
testb
fsubs
ljmp
jg
call
jp
jne
call
mov
pushf
ss
ljmp
pop
stos
incb
in
repnz
pop
stos
inc
cwtl
mov
cld
test
dec
mov
lcall
incb
xor
aad
dec
adc
jle
jo
ret
add
addr16
incl
loope
fsubrs
and
cli
pushf
movsl
jae
dec
xchg
incl
push
cmp
ljmp
ja
and
xor
cli
imul
popa
mov
sbb
stos
mov
dec
push
movsl
push
push
ljmp
call
sbb
push
adc
pop
or
imul
fstpl
mov
sub
decl
add
cwtl
cmc
sub
es
pushl
adc
ljmp
out
adc
mov
aaa
jb
adc
jg
std
scas
pushl
loope
xchg
sbb
or
notl
sbb
mov
mov
inc
ljmp
cmpsb
adc
daa
sub
icebp
cld
push
aam
adc
push
std
movsl
mov
pop
std
cmp
mull
lods
pusha
lds
pop
es
mov
sbb
or
push
xchg
inc
lods
push
inc
popa
push
adc
daa
mov
sbb
mov
xchg
sbb
and
mov
in
into
xor
fimuls
sub
das
fbld
or
pop
std
cmp
out
enter
mov
mov
xchg
mov
mov
cmp
ja
scas
sub
jno
mov
sbb
mov
push
std
repz
imul
pop
outsb
lcall
jg
pop
sub
call
jbe
pop
mov
add
data16
lock
incl
not
ds
push
pop
or
fisubs
sar
sub
add
jbe
xchg
data16
inc
icebp
call
cmp
aaa
mov
data16
push
push
bound
and
andl
pop
subb
cmpsb
addl
sbb
cmp
mov
sbb
mov
frstor
fnstcw
and
and
call
test
xchg
and
xor
sahf
and
in
xchg
decl
js
lock
inc
shrb
bound
jg
or
and
dec
and
aam
mov
lcall
inc
mov
pop
fwait
and
jno
in
fsubl
sbb
cmp
fdivrs
fld
das
add
pop
insl
add
ljmp
pop
push
cld
pushl
push
das
cmp
les
mov
adc
rolb
ds
fistps
and
mov
cmp
adc
add
sbb
cld
call
adc
adc
test
adc
decl
push
fnstenv
pop
sub
aaa
push
fidivl
into
add
push
clc
push
mov
push
stos
fwait
std
rorl
cs
cmp
and
pusha
call
adc
mov
rcl
jbe
jns
cmp
inc
fsubr
mov
ljmp
sbb
xor
push
jno
subb
xchg
out
fcmove
push
mov
pop
mov
push
mov
or
mov
out
lea
xchg
inc
jl
jbe
adc
sub
adc
or
cmp
fwait
jmp
cli
push
das
mov
push
xor
lret
clc
dec
mov
das
nop
dec
xor
test
pop
ret
cmpsl
lret
cld
sbb
movsb
lret
jmp
sahf
mov
adc
and
jo
inc
int
pushf
add
scas
int
int3
pop
dec
sbb
xchg
int3
clc
scas
add
dec
in
repnz
xchg
ret
das
push
mov
and
stos
dec
into
cs
and
jl
push
cmp
call
or
jge
or
adc
push
imul
incl
aam
or
pop
ror
add
cmpb
mov
inc
add
incl
and
dec
xor
push
or
fildll
mov
mov
inc
insl
xchg
xchg
or
jecxz
out
cld
dec
sub
movsl
stc
and
call
push
and
insb
adc
dec
loope
dec
xchg
cmp
aad
inc
stos
stos
sbb
cmp
ljmp
aas
sub
test
and
cmpsb
pop
js
fdivrl
pop
mov
mov
lock
jmp
pushf
push
push
adc
sub
push
int3
push
adc
dec
icebp
out
cmp
mov
repz
lcall
shll
sub
pop
rolb
or
cld
cmpsb
jge
xor
incl
scas
dec
cs
dec
sbb
orl
xor
push
sub
xlat
dec
ljmp
popf
jp
popl
filds
rcl
outsl
cmp
ljmp
add
push
cmp
adc
iret
decl
decl
pop
outsb
test
jmp
inc
outsb
int
sbb
das
adc
xchg
jmp
fistpl
jae
loopne
aas
ss
ds
jg
inc
push
sub
xchg
ret
pop
repnz
std
decl
and
jae
xchg
jmp
dec
mov
ljmp
inc
into
or
imul
cmpsb
ljmp
ja
cli
dec
lds
inc
adc
mov
ds
aaa
clts
inc
inc
ss
xor
ret
pop
cmpsb
mov
xchg
daa
loop
push
adc
pushl
outsb
inc
arpl
inc
jp
cmp
jae
jo
dec
hlt
mov
out
push
sbb
int3
adcb
sub
pop
and
iret
push
push
bound
fwait
lds
pop
pop
cld
pushl
xor
frstor
jns
cmpl
mov
push
ret
ljmp
jecxz
lods
jb
pop
mov
push
pop
pop
xor
ficoms
sahf
addr16
dec
sbb
adc
or
in
xchg
test
adc
mov
xor
jns
cmp
mov
popf
pop
dec
inc
ja
mov
dec
daa
shll
mov
jecxz
jmp
scas
jg
test
add
jnp
pop
gs
push
or
jg
xor
enter
pop
cltd
jp
cli
push
lcall
fistps
pusha
inc
pop
lods
sub
jnp
into
jge
push
leave
jno
xchg
inc
movsb
cld
inc
popf
pop
pushl
clc
icebp
idivl
mov
add
outsl
xchg
outsb
xchg
and
ljmp
cmpsb
push
pushf
out
inc
ret
pop
loop
mov
sbb
jg
nop
addr16
jle
jg
pusha
dec
icebp
mov
lea
aaa
push
jmp
dec
int3
sbb
mov
and
xor
dec
or
outsb
add
lcall
mov
mov
jo
push
mov
push
pushf
cmp
sarl
xchg
push
adcb
cmp
enter
popf
cmpl
mov
lcall
mov
mov
add
xchg
hlt
jmp
jns
inc
or
pop
or
out
sbbl
xchg
sub
mov
dec
push
mov
adc
xlat
dec
orb
scas
aas
jae
push
repnz
pop
aam
les
ljmp
jmp
lods
in
fbstp
je
adc
and
mov
inc
dec
mov
xor
fsts
mov
sub
insl
mov
hlt
mov
stos
inc
add
incl
xchg
test
es
dec
or
lods
sti
je
int
mov
repnz
lcall
lcall
bound
xor
mov
adc
add
xchg
popa
pop
mov
cmpsl
decl
sbb
fstps
adc
rcl
or
adc
xorl
pushl
sub
mov
test
aam
sbb
icebp
or
cmp
lea
incl
leave
mov
inc
and
popa
cmp
mov
cmp
pop
shlb
ret
ret
cmpl
pop
pop
sbb
dec
mov
shlb
loope
ljmp
lcall
idivl
scas
add
arpl
jbe
mov
scas
cmp
cli
cmp
push
pushf
push
pop
arpl
pushl
fisttps
rolb
scas
jmp
ss
cmp
xor
fistps
xchg
mov
cmp
inc
daa
cwtl
loopne
push
jne
push
push
adc
fisubl
pop
sub
xchg
out
jp
ljmp
mov
inc
pop
rol
les
or
add
int3
jmp
lcall
test
dec
in
loopne
pop
sub
movsl
dec
pusha
push
flds
repnz
in
into
testb
aas
add
pop
shl
loopne
ljmp
mov
test
sub
int3
out
mov
jmp
xchg
incl
mov
inc
push
gs
mov
stos
pop
adcb
mov
xor
imul
movsl
jge
mov
xchg
gs
call
int
dec
push
cld
adc
and
aam
add
mov
push
in
dec
pop
ss
arpl
mov
push
push
aaa
je
adc
cli
cld
inc
jmp
or
sbb
jmp
sbb
cmpsl
and
add
inc
lea
sbb
xchg
mov
fsubs
iret
xchg
js
paddd
ret
mov
incl
movb
movsb
cmpsb
pushf
xchg
in
pop
jne
into
dec
sub
nop
cmp
jae
ljmp
mov
mov
jecxz
lret
inc
and
and
decl
js
or
sbb
out
mov
lcall
ds
adc
mov
xchg
push
xor
loopne
out
fsubrs
lcall
jge
sub
add
sub
cmp
pop
movsl
outsl
pop
iret
or
xchg
pushl
lcall
jo
xorl
dec
test
or
or
add
lcall
pushf
ss
cli
arpl
cmp
lea
inc
xor
idiv
fldl
stos
lahf
testl
cmpsl
movsl
outsb
inc
sbb
mov
xchg
decl
lock
mov
lcall
test
ret
jb
mov
sbb
ljmp
xlat
mov
lcall
outsl
push
cltd
or
repz
negb
dec
addr16
sbb
scas
jns
fs
stc
add
adc
push
sbb
push
fisttpl
ljmp
loopne
sub
and
fnstcw
cltd
frstor
test
movsl
test
hlt
lahf
ds
pushl
push
push
popf
adc
scas
pushf
cmp
mov
in
outsl
andb
in
push
jne
cmp
scas
aaa
movsb
fldcw
ret
add
dec
rcll
mov
nop
dec
lret
inc
pushl
xor
add
std
mov
cmp
dec
ds
push
stos
std
push
fcmovb
push
ja
sbb
rcrb
pop
sbbb
mov
inc
cmp
imul
outsb
fwait
std
xchg
xchg
add
jmp
add
rcll
or
int3
lock
out
jbe,pn
jg
lock
lret
add
dec
sbb
adc
sbb
daa
das
shr
pop
mov
xorb
les
stc
sub
addl
pop
bound
xchg
inc
lcall
inc
es
and
lret
in
stos
gs
in
push
jbe
lret
js
shrb
loopne
test
cld
mov
ficompl
or
movsl
or
mov
fildll
mov
or
push
jae
lea
popl
pop
sahf
ja
jmp
push
add
inc
add
pushf
jle
mov
add
push
popa
ficoml
adc
ja
adc
xchg
rorl
int
cmp
jge
add
pop
stos
ljmp
jns
call
rorl
and
call
sti
loopne
sub
mov
es
imul
mov
inc
xor
incl
pop
stc
dec
leave
add
jno
cli
mov
xor
cmp
mov
sbb
xor
fdiv
dec
add
pop
dec
xor
cmp
daa
xor
pop
cmc
mov
add
push
jmp
das
imul
lea
aad
inc
sarb
adcb
pop
push
divl
lods
cmp
or
stos
in
push
data16
repz
push
xchg
fisubs
mov
inc
cmp
fistl
std
sbb
in
and
mov
pusha
or
mov
hlt
bound
push
jmp
lock
mov
hlt
lds
add
cmc
xchg
jge
dec
push
lcall
cwtl
ror
push
xlat
in
mov
lahf
lods
lahf
and
lods
xor
mov
popf
popa
xor
pop
outsl
jne
fwait
pop
fidivs
test
arpl
pop
push
in
ljmp
sub
testb
out
dec
leave
rcrb
insb
cld
popf
in
lcall
in
dec
xchg
or
decl
hlt
stos
cli
jnp
test
xor
and
mov
js
test
in
ret
mov
adc
call
or
mov
ljmp
call
into
or
leave
arpl
in
jmp
adc
cltd
lods
mov
sub
jbe
fcomip
lcall
mov
or
fnstsw
minps
cmpsl
add
sub
mov
pop
mov
call
jnp
add
imull
nop
mov
push
and
cltd
adc
scas
gs
rcrb
sub
inc
jmp
call
pop
fldt
ss
dec
mov
dec
rcll
ljmp
cli
incl
inc
pop
mov
sub
jg
loop
cmp
loop
rcrb
jmp
pop
inc
in
lock
cmpsl
out
push
dec
loopne
pop
leave
pop
pop
notb
test
push
aad
jge
decl
pushf
add
mov
xchg
fucomip
imul
inc
cld
or
lret
add
lcall
mov
gs
sbb
pop
push
pushf
xor
dec
inc
push
cmp
cmp
push
sahf
jae
sbb
incl
fildll
xchg
inc
fwait
test
mov
push
addr16
incl
jecxz
mov
or
jmp
jae
inc
xchg
lahf
aas
rcrb
add
std
jnp
aad
inc
jmp
or
pop
ljmp
or
lcall
pop
jg
mov
mov
xor
rclb
jbe
cmpsl
lods
push
movsb
adc
stos
ljmp
jb
jg
icebp
stc
enter
lods
jg
push
std
insl
subl
ret
ljmp
xchg
out
mov
test
mov
jg
mov
or
or
clc
sub
jmp
outsl
js
ret
lgs
imul
imul
popaw
cmc
out
out
ja
bound
fimuls
or
out
mov
push
sbb
dec
xchg
repz
pop
inc
mov
cld
cs
inc
ror
daa
lods
popf
int3
dec
lea
lret
sbb
mov
mov
jle
in
cld
scas
mov
push
jne,pt
adc
add
call
enter
in
cs
dec
adc
out
outsb
mov
pop
xor
rol
and
call
add
scas
and
jle
xchg
ret
jl
xlat
push
inc
or
pop
test
and
sub
incl
ds
mov
js
pop
push
loope
push
jnp
or
test
aas
mov
andl
sbb
sbb
jmp
enter
jge
mov
iret
or
mov
inc
xorb
mov
sub
aaa
jbe
lret
add
xor
xor
mov
stc
loopne,pn
add
jl
inc
sbb
leave
out
cli
xor
dec
imul
bnd
jnp
sub
jp
aad
popa
pop
leave
daa
jp
out
incl
xchg
jmp
mov
mov
mov
xor
sarb
cmp
into
mov
mov
jp
popf
push
pop
out
push
dec
pop
mov
or
push
pop
lahf
sbb
call
mov
xor
cwtl
out
mov
nop
mov
adc
lcall
call
mov
sbb
mov
mov
add
jle
adc
sub
aam
lea
sub
sbb
push
sarb
add
sar
mov
or
dec
mov
cli
adc
xchg
cld
dec
mov
lahf
ljmp
inc
sbb
sub
cmp
sbb
notb
repz
test
push
imul
mov
xor
lock
jae
fcmove
ja
push
pop
loopne
lods
popa
sahf
aam
xor
mov
mov
xor
pushl
loope
ja
jb
add
movsl
pop
pop
inc
and
mov
sbb
stos
mov
adc
sbb
aad
dec
cmp
pop
adc
insb
in
gs
dec
or
pop
ja
or
ficoml
setae
setne
mov
sub
jno
aaa
fcmovb
and
and
lret
int3
loopne
mov
jmp
sub
fisttpl
in
not
adcb
jp
or
bound
lret
js
es
mov
jo
sub
mov
push
rolb
sbb
dec
lds
fcomip
add
das
in
pop
mov
adc
and
push
pop
insl
pushl
cld
daa
imul
jg
cmpsl
sub
js
push
scas
and
sti
cmp
out
fcomip
or
imul
sbb
xor
cmpsl
cltd
push
mov
cmp
in
out
sub
cmp
pop
mov
clc
and
mov
pop
mov
and
jg
loopne
sbb
out
arpl
mov
std
sub
movsl
movsb
mov
jmp
rcll
ficompl
rcrb
jg
or
fs
stc
cmp
lahf
xor
ljmp
shrb
scas
inc
push
fildl
push
xor
add
cmpl
pop
or
pop
aaa
cld
jmp
shl
dec
adc
pop
mov
mov
sbb
aas
or
pop
mov
icebp
ljmp
adc
lcall
mov
repnz
lret
pop
lcall
pop
inc
sub
scas
sbb
pop
and
aad
add
push
fldcw
call
cltd
push
outsb
cmp
dec
push
mull
xchg
cltd
cmp
add
inc
or
push
or
mov
jg
mov
fwait
gs
sub
jbe
scas
mull
je
jg
decl
jne
cmp
cmp
or
push
dec
je
mov
dec
ljmp
inc
fstps
loope
add
pop
mov
add
dec
fmul
jo
out
test
aaa
movsl
ja
dec
scas
enter
sub
in
jmp
or
mov
xor
jmp
decl
aam
pop
lret
arpl
rcll
dec
push
cmc
ljmp
jl
inc
fstl
and
sbb
cli
js
fxch
inc
inc
mov
ss
mov
data16
lcall
mov
jl
mov
fadds
cli
inc
mov
push
stos
mov
add
mov
push
outsb
test
push
rorb
call
int
jns
scas
jno
mov
mov
lods
fisubrl
add
inc
in
jl
push
cmp
enter
and
sub
or
pop
inc
cmp
loop
ljmp
test
rolw
dec
jmp
mov
or
mov
aas
mov
ror
adc
push
decb
push
push
inc
push
cmpsb
jg
incl
jae
bound
mov
lcall
and
cmp
dec
cmp
mov
inc
daa
inc
imul
mov
sbb
lods
cld
lea
push
inc
add
pushl
out
aas
or
pop
cmp
lcall
shrl
jmp
fs
xlat
sbb
mov
loopne
jne
mov
lahf
xor
and
push
aam
pop
rcrl
clc
xchg
pushl
and
in
and
cmpb
push
mov
lcall
jp
jno
in
pushl
jae
adc
sbb
mov
in
push
aaa
pushf
push
jl
jnp
fidivrs
in
fildl
dec
pop
push
cmp
nop
lret
xchg
in
xor
push
fs
mov
and
nop
addl
into
js
cmpsb
out
sbb
adc
ljmp
pushf
mov
movsb
xor
lret
pusha
outsb
mov
insl
mov
incl
jle
mov
adc
xor
mov
ret
fsts
sbb
add
lea
in
pop
ljmp
push
scas
int3
stos
jge
ficoml
push
bound
popa
pop
mov
aas
push
nop
insb
leave
dec
data16
cli
gs
jl
push
pand
mov
bound
decb
cmc
adc
and
loope
decl
addr16
data16
rol
or
leave
pop
je
jo
int3
dec
mov
cmp
xchg
ret
lret
inc
shr
repz
js
filds
push
fwait
test
and
shr
jmp
adc
xchg
adc
fcom
sti
jnp
lcall
rorb
jns
jg
outsl
gs
pop
sub
lret
and
pop
xchg
mov
and
add
sub
mov
jmp
pop
jb
and
cltd
clc
adc
popa
shl
push
push
sbb
sbb
lahf
or
fcomip
pushl
in
xchg
fdecstp
fldenv
imul
push
jnp
sub
popf
fwait
jl
xlat
rcrb
xlat
fimuls
push
cltd
mov
pusha
pop
bound
push
ds
pusha
mov
adc
adc
fstpt
xchg
daa
jbe
sub
sar
push
sahf
mov
sub
mov
inc
xchg
mov
jae
aaa
std
pushl
sbb
xor
or
mov
and
adc
sub
decl
push
and
clc
mov
data16
mov
cltd
mov
incl
inc
lods
daa
inc
pushf
add
mov
ljmp
ss
inc
scas
push
ja
mov
xchg
loope
dec
dec
mov
leave
jns
das
stc
pop
push
in
js
sar
decl
cmp
xchg
icebp
jne
imul
xor
push
or
pop
xchg
scas
or
dec
ljmp
es
and
ds
adc
out
dec
insb
mov
incl
sub
sub
fidivs
push
xlat
or
nop
icebp
ret
jg
loop
lods
cs
xor
pop
jmp
lret
sbb
mov
inc
decl
lock
andl
pop
adc
mov
lock
cmp
cmp
hlt
jnp
out
sub
cli
push
and
inc
push
pop
ficompl
stc
xchg
add
mov
jg
ljmp
xchg
add
popf
sti
negb
pop
lods
jle
and
jg
addr16
xchg
fsts
adc
inc
dec
add
pushf
lock
cwtl
movsl
ljmp
jge
inc
adc
push
xchg
arpl
jbe
mov
pop
xchg
clc
mov
iret
adc
imul
and
incl
jl
pop
adc
jmp
pop
sbb
insl
cld
mov
jle
inc
jb
or
mov
jmp
fst
fidivrl
dec
shrb
popa
sbb
cs
test
ljmp
sti
push
mov
into
pop
ret
sbbb
jb
rcr
mov
daa
push
inc
int3
cmp
call
loopne
daa
jl
push
int
mov
mov
sbb
std
sti
jmp
jno
mov
inc
mov
je
xchg
mov
mov
insl
cmp
frstor
add
hlt
dec
fneni(8087
lcall
mov
pop
ss
mov
lds
mov
das
xchg
lret
cmp
incl
xchg
adc
les
fldcw
push
test
xor
call
sbb
rorl
mov
lret
push
lret
lcall
sbb
add
outsl
stos
hlt
add
dec
lret
dec
loop
out
sar
jmp
cmp
and
mov
lods
dec
mov
cmp
fwait
hlt
test
call
mov
aad
mov
inc
push
jecxz
pop
adc
xchg
and
add
call
jle
pop
push
jl
inc
xor
add
dec
cli
jg
mov
xchg
xor
shl
pop
mov
out
lret
mov
mov
jle
pusha
lods
movsb
xchg
mov
ljmp
in
cmp
adc
aad
mov
nop
das
test
mov
xlat
or
jecxz
lds
fldt
mov
and
sbb
jle
out
inc
mov
mov
sbb
fwait
and
mov
jmp
ret
or
das
and
cmpsl
inc
inc
lret
ss
inc
clc
fmuls
mov
add
fwait
push
xchg
mov
mov
cmp
stos
pop
aam
xchg
sbb
or
inc
cmpsl
or
push
push
lcall
loop
dec
xchg
and
ret
push
pop
in
popa
dec
shll
dec
xor
stos
fstps
xchg
fld
lock
jecxz
or
inc
icebp
leave
popl
sti
jbe
call
mov
push
inc
xchg
adc
icebp
or
sub
xlat
xchg
push
sti
sub
jg
and
mov
loop
addr16
nop
dec
hlt
mov
mov
jle
xor
int
imul
dec
roll
jp
sbbl
sbb
xorl
repz
dec
sbb
jne
pop
xchg
icebp
xchg
lret
pop
sbb
lods
out
fcomip
jmp
sub
jecxz
pusha
xor
call
dec
aaa
jbe
loopne
insl
cmpb
hlt
xor
enter
cmp
jno
fmul
pop
imul
pushl
fsubr
push
cmc
es
lock
scas
mov
add
xlat
shrl
sarl
and
mov
sti
mov
cmp
mov
mov
xchg
xchg
mov
lods
xor
xor
test
xchg
pushf
push
and
neg
cld
mov
or
int
pop
aad
and
fadd
inc
aad
bound
sub
jg
sub
sub
aaa
sbb
or
mov
pop
jle
jmp
mov
in
add
or
movsl
das
stos
xchg
xchg
mov
scas
test
xchg
or
mov
jmp
out
shll
push
push
dec
into
dec
pop
test
aaa
stc
mov
ret
mov
incl
sub
fcmove
add
and
dec
in
ret
fcmovbe
pop
incl
je
mov
test
call
add
rcll
in
out
cmp
cmp
push
dec
sarl
das
shlb
dec
les
orb
jns
call
mov
call
or
add
insl
add
in
inc
mov
into
clc
call
cmp
push
fldcw
les
push
ljmp
in
mov
repz
int
cwtl
cltd
xor
cld
and
gs
jg
pop
jns
xor
mov
inc
lods
xchg
ss
shrl
cmc
fs
arpl
clc
fwait
int3
lret
mov
das
sub
dec
nop
pop
push
xchg
stos
sar
fs
dec
inc
popa
and
jle
xor
cld
cwtl
mov
mov
or
lods
cmp
pop
ficoms
andl
int
xchg
inc
enter
cmp
dec
sti
jmp
test
push
mov
insl
hlt
sub
std
jmp
jb
adc
sarb
add
cmc
dec
mov
jno
ljmp
dec
xchg
jnp
js
outsb
incl
push
stc
idivb
lods
jbe
adc
adc
bound
sahf
mov
faddp
or
divl
mov
dec
outsb
xor
dec
pop
leave
and
xor
push
mov
lock
mov
cmc
aas
inc
pop
mov
mov
gs
out
stos
sbb
out
vmovsldup
jg
out
xchg
stos
mov
inc
xor
icebp
mov
push
jg
push
and
test
imul
mov
into
mov
adc
cltd
add
or
je
xor
mov
fwait
mov
out
push
loop
dec
js
adc
adc
sbb
sub
loope
decl
pop
in
insb
push
adc
call
adc
in
push
pushl
push
mov
push
out
mov
out
inc
test
push
dec
cmovno
inc
xchg
jo
mov
mov
incl
test
inc
or
add
lahf
adc
inc
loopne
cwtl
test
cmc
sti
stc
je
push
or
adc
pop
sbb
lock
gs
mov
aam
inc
cmp
lcall
sub
lret
or
rorl
cmpsl
inc
sub
fsubrl
cltd
jge
push
ficomps
loopne
mov
nopl
in
popf
inc
mov
pop
int3
adc
adcb
scas
call
call
mov
or
movntps
dec
fistl
mov
push
and
incl
lcall
adc
adc
in
xor
mov
mov
call
xorl
call
sbbl
adc
cwtl
jb
pop
xchg
push
loope
jg
add
sbb
push
std
pop
mov
push
sbb
mov
sbbl
shlb
lcall
arpl
sub
iret
std
cltd
hlt
pop
lds
dec
shlb
repnz
push
out
cmp
and
mov
add
mov
into
add
ljmp
addl
into
bound
and
pop
enter
xor
or
jmp
jo
leave
push
cmp
push
push
mov
mov
outsl
and
div
cs
pop
jp
xorl
xor
lahf
enter
popa
fimuls
pop
icebp
popf
rol
in
xchg
decl
jecxz
jno
jne
lahf
inc
and
and
outsl
pop
push
hlt
xchg
enter
dec
andl
btc
les
out
fmuls
adc
les
inc
adc
add
push
incl
and
push
jno
out
into
into
rclb
addl
out
fsts
push
jo
jnp
pushl
mov
gs
repz
sub
and
add
imul
mov
jmp
jo
xchg
adc
outsl
jp
notl
rcrl
sbb
lahf
stos
fildl
ljmp
aad
jecxz
mov
lahf
adc
fucomp
inc
les
jg
nop
push
iret
adc
mov
inc
lock
cmp
dec
mov
add
adcb
sbb
incl
inc
mov
xor
fs
xor
aam
enter
xor
sbb
test
xchg
mov
xor
repnz
jg
jno
shl
addr16
and
mov
retw
movsb
ds
and
fs
mov
cmp
incl
jle
mov
mov
mov
jge
jo
data16
repz
cmpb
jmp
insl
clc
cld
ljmp
push
dec
add
cmp
or
scas
cmp
mov
xchg
add
test
andl
adc
pushl
fidivrl
cmpb
in
jp
jg
fdiv
cltd
mov
sti
pop
xchg
cmp
gs
insb
mov
xor
imul
jmp
fwait
cmc
pop
adc
add
push
jecxz
xchg
fucom
mov
add
pop
cmpl
lock
push
pop
rolb
xchg
inc
add
jp
and
clc
decl
cli
dec
jno
mov
sti
subl
and
ret
outsl
js
lods
or
loop
cmp
and
decl
adcb
cmp
js
outsb
dec
mov
pop
int
mov
prefetch
popa
mov
inc
xchg
or
xchg
loope
mov
aas
inc
jnp
jg
inc
push
mov
jge
pop
add
outsb
sbb
js
mov
aam
push
shrb
add
push
fnstenv
pop
ja
je
in
mov
jge
and
sar
call
in
out
and
push
sub
bound
insb
mov
sbb
inc
and
std
inc
push
mov
std
insb
int
xor
cmp
inc
lahf
inc
ret
in
inc
scas
pop
pop
icebp
pushl
mov
shrb
inc
cs
insb
sbb
andb
cmc
icebp
fidivrs
mov
aam
es
hlt
dec
fistpl
jl
cmc
push
cli
jp
bound
jg
enter
mov
mov
clc
movsb
dec
cli
dec
out
jg
mov
jmp
test
data16
enter
stc
jecxz
movsl
insb
and
jl
push
xchg
std
in
sub
sbb
inc
cmp
xchg
out
dec
xlat
dec
clc
xchg
xchg
sahf
sbb
sarb
rorl
lahf
iret
mov
sbb
movsb
mov
jg
jecxz
clc
jno
push
into
sub
insb
or
pop
xchg
orl
sbb
mov
mov
adc
sti
stos
sahf
adc
xor
sti
push
gs
mov
pop
push
pop
dec
sub
das
in
mov
cmp
mov
adc
test
push
inc
stc
lret
rcl
inc
in
shlb
pusha
lods
pusha
mov
mov
mov
push
fs
add
pop
mov
es
incl
jle
pop
xor
mov
pop
mov
mov
sbbl
lock
clc
dec
imulb
fnsave
push
popf
in
dec
lea
mov
and
add
in
pop
fwait
loope
addr16
or
add
xor
movsb
and
push
push
sub
popa
cmp
pushf
push
adc
xchg
nop
loope
mul
pop
sbb
decl
mov
adc
aaa
pop
imul
xchg
push
hlt
jb
and
dec
lret
mov
mov
xor
pushf
lds
xlat
cmp
pop
data16
jnp
fsubrl
jbe
and
jl
mov
dec
sub
pop
pop
push
iret
fcomi
daa
fldl
push
or
ljmp
mov
push
mov
mov
icebp
inc
mov
dec
test
inc
push
xor
cmpsl
or
lcall
fldenv
divb
cmp
mov
out
xchg
pop
inc
xchg
es
test
das
cli
fisttps
icebp
mov
lahf
add
ds
cli
daa
imul
call
sbb
push
fidivs
mov
mov
ds
jl
xchg
gs
add
call
inc
icebp
cmp
jle
ret
les
mov
leave
mov
fdiv
insb
lcall
push
cmp
dec
mov
sub
hlt
mov
mov
mov
jge
ljmp
clc
mov
outsb
dec
jmp
adc
jg
bound
xchg
xor
or
mov
sti
das
repz
jge
stc
xchg
mov
ds
pushl
cld
scas
mov
ja
rclb
rclb
lds
int
xchg
pop
jle
xchg
adc
insl
mov
js
addr16
jo
loop
and
incl
add
icebp
xor
adc
test
inc
inc
and
fstl
jo
ds
outsb
mov
mov
sbb
push
mov
cmp
lret
call
pusha
fistps
adc
ljmp
stos
fsub
xchg
std
imul
or
mov
mov
cld
call
into
jmp
lea
inc
push
inc
xor
push
lock
lock
add
jmp
nop
test
dec
loopne
fdivl
cmp
adc
cmp
sbb
es
adc
inc
lret
fidivrs
dec
jo
and
mov
les
lea
adc
pop
dec
mov
in
and
sti
insl
dec
outsl
mov
fs
push
cmp
nop
sbb
sub
xchg
mov
insl
add
pop
loopne
out
mov
scas
push
jg
std
jmp
add
xor
scas
pop
gs
mov
ljmp
andb
imul
nop
sbb
xchg
in
lods
ljmp
es
movsl
mov
aaa
in
or
loopne
push
add
mov
mov
mov
dec
jno
push
inc
xor
dec
mov
insb
push
bndstx
fnstenv
aaa
lods
in
negl
pop
incl
jbe
sarl
clc
aad
jae
in
pop
into
loopne
jl
sar
jno,pt
push
or
jns
pop
jmp
jge
cmp
cmp
pushl
leave
inc
stos
sbb
outsl
loope
lret
outsb
shlb
aad
movsl
push
dec
clc
in
adc
das
cs
lret
daa
call
call
dec
into
inc
sbb
pop
cmp
cwtl
into
sub
inc
gs
and
insb
pop
mov
idiv
push
out
je
mov
fsubp
gs
xchg
das
in
stc
or
ljmp
fimull
fnstcw
stos
xchg
jae
lods
stos
mov
clc
xor
loopne
in
xchg
adc
insl
push
add
lcall
popa
addr16
mov
outsb
sbb
rcll
jo
stos
out
xchg
xor
dec
cltd
dec
or
repnz
lcall
stos
addl
lcall
or
sub
xchg
call
mov
pop
ficoml
loope
test
jp
dec
xchg
inc
mov
insl
mov
ss
push
pop
ret
pop
cmc
adc
out
xor
jmp
inc
jno
or
scas
sbb
or
cmpsl
mov
xchg
pop
cmp
rcrl
dec
xchg
decl
xor
cmp
stos
push
jo
scas
mov
inc
mov
push
push
jnp
iret
shrb
daa
sbb
out
outsb
fsubrp
xchg
cmp
pop
push
jmp
loopne
push
addb
sub
cmp
mov
pop
hlt
call
mov
cld
cld
add
push
xchg
jmp
mov
xlat
mov
insb
data16
lcall
xchg
cmp
push
add
imul
pop
xchg
jecxz
es
mov
in
lcall
int
pop
inc
jae
imul
dec
insl
xchg
stos
dec
pop
inc
xchg
add
scas
popa
pop
jae
pop
call
adc
outsb
movsb
insb
xchg
and
and
ret
or
xor
roll
cmp
lock
jg
les
sbb
in
mov
sti
inc
out
ficompl
iret
inc
adc
pop
mov
ret
push
sub
ret
icebp
lcall
jp
lds
xor
cmp
fwait
idiv
cmc
fists
cld
and
cmp
add
mov
loop
push
shlb
sbb
iret
jns
mov
das
pop
js
test
imul
cmp
cwtl
xchg
mov
pop
aaa
push
subb
loope
jecxz
nop
or
aad
xchg
dec
sarb
and
cmp
lea
clc
rcl
inc
adc
fistpll
nop
fdivs
xor
jno
test
mov
fisttps
add
pop
and
push
sbb
pop
dec
cltd
adc
loope
roll
call
jnp
adc
mov
add
fbld
insl
ja
mov
arpl
aas
stos
out
mov
test
pop
inc
cmpsb
pop
mov
xchg
jp
lcall
xor
mov
cmp
popl
in
xchg
xchg
inc
push
insl
sbb
or
cltd
ficomps
out
pop
fistpl
cmpxchg
adc
lock
ljmp
movsl
pop
test
sbb
frstor
xlat
add
jmp
fildll
es
mov
xlat
mov
lods
xchg
xchg
cltd
xchg
push
dec
hlt
addr16
inc
rcr
add
ljmp
outsb
popf
adc
data16
fwait
push
dec
pushf
and
stc
push
or
ficomps
stc
pop
aam
ljmp
loope
add
insl
aad
cmpsl
lahf
and
jae
data16
xchg
stos
lds
faddl
xchg
sbb
jmp
clc
sub
insb
imul
fxch
ss
inc
scas
or
fbld
mov
ljmp
mov
fistpl
lcall
sub
test
lock
lods
dec
dec
mov
call
lea
adc
inc
das
loope
adc
push
fcompl
mov
sub
mov
int3
inc
fs
jno
and
mov
dec
ja
je
pop
push
and
es
pop
movsl
sbb
xchg
and
and
ret
je
cmp
dec
les
mov
movsl
mov
adc
lret
and
fildll
dec
fidivl
es
mov
mov
sbb
aaa
fldt
lock
test
mov
ljmp
into
xchg
movsl
js
gs
insb
ja
push
in
lea
xorb
dec
dec
cmc
add
lahf
test
inc
stc
rcrb
lret
and
fidivrl
cmpsl
ljmp
pop
adc
out
mov
nop
mov
xchg
jg
jmp
pop
test
in
imull
insl
and
je
mov
das
mov
in
aaa
es
incl
cs
cs
fs
in
or
lds
mov
sahf
xchg
lcall
clc
out
xchg
sbb
in
dec
xor
inc
clc
pop
adc
cmp
cmp
push
popf
cmpsl
adc
jbe
cltd
mov
and
xchg
and
push
sahf
mov
ljmp
pop
aas
or
ss
test
andb
cltd
fdivrs
push
lods
sbb
incl
and
adc
inc
dec
pop
iret
or
cltd
cld
es
adc
or
mov
std
call
jge
push
adc
shrl
jnp
jae
xor
cwtl
jo
test
mov
inc
push
and
inc
in
sub
sub
mov
in
ds
into
hlt
pop
dec
pusha
sub
xchg
and
enter
lcall
adc
sub
add
out
push
pop
popa
mov
mov
mov
imul
mov
loope
cld
inc
lret
fisttps
dec
pop
dec
dec
push
aaa
ljmp
jb
sbb
dec
shlb
cmp
loop
mov
inc
adc
aaa
incl
flds
pop
mov
push
movsl
jecxz
inc
or
call
ds
insb
pop
movsl
out
adc
pop
and
inc
das
jecxz
imul
ret
lea
sbb
fisttps
or
jno
test
push
stos
cmp
sbb
jge
push
clc
mov
xchg
pushf
gs
or
or
cld
cmp
call
fsubs
lea
lret
cmp
jmp
inc
sbb
dec
cmp
mov
cmp
lcall
aas
pop
cmp
rorb
or
and
test
pop
hlt
cltd
in
loopne
clc
jl
decb
cmp
xchg
testb
jg
mov
push
repnz
push
je
mov
cmp
pop
dec
ljmp
adc
cmpsb
movb
adc
xlat
push
xor
stos
adc
call
outsb
lahf
arpl
test
jbe
adc
push
jecxz
lds
inc
daa
shrb
in
repnz
sti
lock
bound
incl
ja
lahf
push
insb
test
dec
push
cmp
cmovae
adc
icebp
fildll
pop
pop
lea
push
decl
test
mov
sub
sub
into
pop
insw
pop
aaa
lret
popa
int3
jnp
pop
cmp
nop
jo
sbb
xchg
shrb
adc
jg
insb
in
pop
dec
insl
rcr
mov
xchg
shrb
push
mov
push
sbb
incl
ja
push
call
xor
scas
dec
dec
sahf
mov
imul
repz
dec
inc
mov
pusha
xchg
nop
ljmp
xor
dec
imul
inc
out
xchg
mov
cmpsl
inc
lock
addr16
mulb
enter
out
cmp
imul
loope
and
push
psllw
cs
ljmp
xor
in
jecxz
mov
mov
shrb
push
lcall
push
mov
call
cmpsb
sub
pushf
iret
lret
call
std
pop
pop
or
pop
addr16
jnp
sub
fisubrl
push
movsb
nop
cld
add
incl
sarl
into
js
in
dec
pusha
fldt
sbb
mov
push
dec
and
ret
xchg
mov
in
fbld
imul
popa
cmpsb
jg
pop
inc
push
sub
mov
cmp
sub
fidivl
push
aas
fwait
enter
addr16
mov
mov
jle
popf
fwait
stc
or
jp
imul
mov
cmp
fcom
pop
rcrb
pop
jb
cwtl
aam
lcall
ljmp
mov
pop
aam
in
clc
or
incb
rolb
add
pushl
xlat
add
mov
mov
cmc
cmp
fwait
xor
lcall
into
xchg
xchg
or
mov
scas
mov
negb
movsl
ja
ljmp
les
xchg
xlat
fwait
test
jno
arpl
mov
jae
dec
mov
cmpsb
inc
adc
scas
mov
adc
mov
jae
adc
test
push
aaa
js
and
pushl
adc
leave
cmp
stos
jle
lods
stos
fucom
lret
subb
rolb
jo
push
sbb
addr16
pop
adc
js
mov
out
push
lcall
add
cld
imul
mov
out
mov
test
dec
sub
loopne
sar
jmp
or
out
iret
lods
push
pop
mov
std
mov
mov
and
dec
ljmp
loopne
push
ljmp
leave
sbbl
test
leave
inc
aas
not
mov
and
jle,pn
inc
push
or
mov
rolb
xor
jmp
arpl
xchg
jae
jg
mov
fxch
in
xchg
jge
push
shll
cld
dec
inc
push
xchg
aaa
sub
sub
pop
stos
add
shrl
push
xorl
decl
inc
mov
repz
roll
and
dec
aad
and
inc
scas
in
lahf
jp
mov
test
mov
xor
incl
inc
mul
add
sub
jp
jg
jg,pt
das
sarb
in
pop
jge
decl
xor
jns
mov
cmpl
push
push
jge
jmp
mov
adc
pop
ds
add
in
mov
sti
xchg
dec
test
out
dec
mov
shrb
mov
sub
adc
enter
jo
cli
int
adc
cwtl
pop
mov
mov
mov
std
jecxz
fwait
mov
add
mov
mov
fwait
xor
cld
xchg
mov
scas
sub
lea
or
addr16
mov
shll
push
xor
sbb
fprem1
xchg
scas
adc
mov
fidivl
ljmp
lods
std
cmc
sahf
xchg
jle
xchg
das
cli
pushl
shlb
xchg
xor
rcll
cmc
adcb
pop
push
in
xchg
outsb
cmp
pop
lock
cmp
xor
cmp
or
cltd
or
pop
mov
mov
xchg
outsb
xor
cmp
call
cmpsl
mov
xchg
or
cmp
pushf
enter
pop
mov
das
nop
jne
mov
scas
inc
lea
adc
inc
repz
pop
lds
mov
mov
jl
test
mov
push
test
fidivrs
mov
pushl
jns
test
fistps
pop
or
movsl
sbb
and
sub
mov
ljmp
ret
and
dec
cmpsl
loope
hlt
mov
add
and
adc
mov
call
into
jns
imul
stos
push
imul
jbe
xor
add
sar
push
pop
cmpsl
addr16
in
int
jp
dec
sahf
mov
mov
inc
jg
mov
sub
mov
jecxz
or
and
cmp
inc
mov
mov
nop
pusha
into
imulb
sbb
roll
loope
testl
popf
mov
aas
mov
es
lret
jnp
sbb
push
mov
push
mov
movsl
mov
lcall
imul
fbstp
push
pop
xchg
sbb
dec
xchg
dec
inc
hlt
insb
repz
add
out
mov
gs
mov
mov
scas
out
lcall
mov
jne
daa
mov
stos
sub
inc
rorb
call
in
aam
jg
fmulp
pushf
mov
jo
jo
xchg
lcall
jl
scas
cmp
fcompl
mov
fstps
jne
ljmp
leave
jae
sub
nop
inc
jl
out
pop
flds
push
mov
xchg
lods
jno
int3
push
out
jne
sbb
pushl
xchg
in
fnsave
shlb
jle
repz
and
sbb
jmp
and
sar
mov
jns
test
jae
lcall
leave
movsl
jmp
lcall
sbb
mov
sti
and
xor
imul
out
lret
push
out
mov
icebp
decl
add
test
pop
jne
push
loopne
xchg
popf
ja
out
jp
or
in
xchg
xchg
xchg
adc
and
fisttpll
jmp
aad
mov
lods
pop
mov
jl
mov
enter
mov
inc
mov
and
mov
push
ret
in
sbb
push
and
mov
push
mov
xor
inc
enter
test
pusha
inc
mov
lds
lods
mov
cmp
cld
cld
and
pop
sbb
test
stos
imul
and
push
add
jmp
mov
lods
outsb
ljmp
dec
sar
mov
mov
cld
mov
rcrl
jns
aam
ret
dec
leave
xchg
jmp
and
out
jp
decl
xchg
xchg
inc
in
and
mov
ret
js
subl
mov
es
sub
mov
jmp
adc
lcall
jmp
test
or
jge
pop
cld
call
cmpl
imul
lock
cmpsb
in
xchg
mov
jg
inc
aad
es
add
notl
ss
icebp
push
push
sahf
xlat
out
enter
jl
shlb
jbe
adc
mov
mov
lods
scas
inc
xchg
mov
repz
push
pop
adc
xchg
rorl
ror
sub
lcall
fcmovnbe
jne
xor
cmp
jno
mov
cld
testl
test
cmp
outsb
dec
clc
popf
popf
push
add
ljmp
addb
inc
ret
xchg
idiv
pop
or
and
movsb
out
cmp
push
mov
cmp
inc
insb
lds
aad
jge
out
dec
fcmovne
scas
add
shl
loop
jmp
test
incl
ret
insb
leave
sbb
leave
popf
fwait
cmp
sbb
sar
pushl
in
jbe
sub
jnp
insb
jae
lods
leave
push
cli
jbe
shlb
int3
xor
lock
sbb
xchg
ja
clc
cmc
jmp
push
sub
add
imul
incl
sbb
es
rol
jle
jmp
and
leave
in
adc
loop
out
cli
mov
imul
and
pop
sbb
outsb
std
int
outsl
cli
incl
testb
push
stos
sub
mov
add
lcall
call
ljmp
jecxz
sub
pop
lock
and
or
pusha
mov
decl
sbbb
daa
xchg
jecxz
int3
xchg
loope
dec
popa
clc
xchg
iret
and
loopne
pushl
sbb
lock
loope
filds
fnstenv
xchg
out
mov
rcrl
sbb
mov
daa
push
fistl
stc
out
ret
pop
fiaddl
hlt
repz
mov
dec
stos
pop
repnz
sbb
ss
ljmp
and
dec
add
fidivrl
insb
jo
fs
pop
fsubl
pop
ljmp
sbb
sbb
loop
fbstp
push
fidivrs
xchg
lods
adc
or
sti
or
fdivrl
sbb
dec
pop
out
push
stos
fwait
xchg
cmp
mov
loope
or
pusha
lods
xchg
fnstenv
inc
fistl
pop
xchg
mov
sbb
push
clc
push
test
adc
or
out
rolb
sbb
xor
test
pop
gs
outsl
pop
dec
repz
jl
out
xchg
push
iret
dec
fbld
xchg
mov
xor
xchg
add
hlt
or
das
sbb
das
dec
in
into
aaa
loop
out
adc
xchg
bound
cmp
jmp
pop
xchg
or
addr16
movsl
dec
rcll
fstl
mov
xorl
adc
push
pop
dec
mov
fs
jmp
mov
ljmp
divl
xor
jbe
xchg
or
sub
dec
adc
cld
movsl
pushl
daa
cmp
sub
mov
cmp
aam
sub
push
call
iret
adcl
push
inc
mov
pop
dec
fstps
daa
or
sub
mov
jg
cli
test
dec
ljmp
or
inc
push
cltd
in
sbb
ja
incl
lds
mov
dec
xchg
add
nop
movsl
adc
push
add
push
addb
jnp
xor
std
sbb
mov
mov
add
mov
xor
inc
shrb
mov
sub
out
mov
out
inc
push
ret
call
sbb
aam
std
decl
inc
pop
inc
push
or
outsl
leave
add
jae
pop
fstl
cmp
xor
mov
aaa
lcall
arpl
add
xor
xchg
in
sti
rclb
jnp
jmp
pop
aas
insl
jnp
std
lret
shlb
jl
popf
decl
jae
jbe
mov
add
mov
sar
das
sbb
fimuls
jle
cmpsl
sarb
sbb
in
dec
icebp
or
adc
fidivrs
xlat
testb
ret
jnp
enter
and
add
fisubrs
jmp
sub
push
push
sarl
inc
bound
fsub
adc
test
inc
mov
lods
inc
xor
xchg
mov
mov
push
adc
sub
xor
cltd
inc
xor
cmp
dec
inc
xchg
xor
popa
adc
or
sbb
and
xor
push
pop
sbb
push
out
adc
mov
rcr
cmovb
lret
jo
cwtl
mov
fstl
sbb
xchg
inc
call
ficoms
into
clc
pop
sub
push
dec
xchg
push
jno
sub
in
adc
gs
sub
popa
shrb
push
or
pop
test
repnz
pop
and
decl
cltd
into
xchg
or
ljmp
inc
and
and
xchg
adc
or
xor
sub
ljmp
ljmp
sub
mov
lret
pop
sub
and
mov
scas
decl
xchg
movsl
push
pop
xchg
and
xor
loopne
dec
mov
push
sbb
decl
and
addr16
or
ljmp
ficompl
push
testl
cmpsl
jnp
and
cmpsl
jg
fs
mov
mov
decl
hlt
loop
sub
sub
cmpsb
mov
and
push
push
pop
and
call
dec
loopne
adc
sub
into
dec
lahf
arpl
je
enter
in
and
call
rcrl
inc
pmulhw
fsubl
sub
bound
rorb
out
in
fwait
xchg
pop
cmp
sbb
jmp
sbb
jmp
loope
jp
sbb
gs
iret
in
pop
xor
jmp
and
lcall
sub
inc
jne
pop
adc
rcrl
jp
cmp
pusha
fstpl
push
mov
sbb
and
dec
push
popf
std
pop
fstps
lcall
popa
and
lcall
call
fstpl
mov
mov
ljmp
cmpsb
jae
mov
std
xor
push
repz
lods
das
adc
xchg
mov
fisubrs
inc
shll
mov
mov
mov
idiv
xor
sbb
pushl
test
sub
setae
xchg
dec
inc
jmp
ljmp
cli
ljmp
fwait
repz
mov
repnz
inc
inc
lahf
pop
adc
or
rorl
stos
out
es
int
int3
push
xchg
xchg
scas
adc
movsb
dec
out
pushf
jno
in
lea
inc
add
cmc
dec
lahf
incl
jmp
std
orb
mov
insl
dec
push
repnz
sub
sub
sar
addr16
icebp
in
xchg
xlat
les
fdivrs
call
pop
mov
pop
pop
getsec
in
in
sub
dec
ja
adc
cbtw
xchg
xchg
add
in
mov
add
cwtl
inc
dec
movsb
jle
insl
popa
mov
sahf
dec
jb
fcomip
mov
dec
dec
inc
jge
pop
jne
jbe
sbb
sub
and
or
sbb
pop
iret
and
andb
insb
ret
or
idivb
inc
decl
adc
sti
inc
es
add
icebp
inc
xchg
jo
out
movsb
fwait
inc
xor
xor
add
inc
mov
es
cmpb
out
adc
idiv
incl
and
movsl
into
jecxz
and
lret
dec
adcl
cs
mov
incl
repz
xchg
loop
cmp
adc
cmp
mov
das
mov
pop
in
xor
sub
cmp
cld
subb
shll
xlat
ljmp
rclb
ss
mov
lods
inc
shr
pushf
cld
ljmp
ds
mov
cld
decl
ds
scas
call
mov
jg
cmp
or
cld
aam
std
cmp
movsl
das
jb
add
push
negl
mov
mov
outsl
cli
cmp
push
fcoms
arpl
ljmp
js
push
lock
test
xchg
rcll
scas
jno
pop
push
enter
stos
push
mov
shll
lcall
js
pop
rcl
js
sub
push
xchg
jb
jle
iret
push
cmpsb
decl
mov
out
lock
iret
rcl
fisttpl
pop
nop
pop
divl
ljmp
scas
pop
push
push
cmp
pop
cmpsb
or
mov
jbe
xchg
push
and
sub
stos
cmp
aad
dec
jo
pop
sbbl
push
xchg
jge
xor
or
call
lret
repnz
mov
dec
das
out
and
fcoml
jmp
jg
lret
mov
ja
jmp
popf
fisttps
shl
movsl
dec
pop
out
fnstsw
ljmp
sub
adc
pop
fucompp
and
pop
ret
dec
shlb
call
fsts
icebp
fldcw
pop
fiadds
mov
inc
sbb
adc
ljmp
hlt
dec
cs
lcall
lock
cld
mov
data16
mov
mov
incl
sub
insb
in
xor
leave
jb
and
inc
add
mov
sbb
push
pop
add
push
sahf
and
ss
mov
test
push
dec
push
inc
loopne
data16
aad
or
jae
js
es
bound
icebp
lcall
cmpsb
mov
mov
mov
sbb
xor
and
clc
fbstp
in
mov
cmp
gs
fadd
std
scas
jo
pop
lcall
lcall
push
jns
xchg
mov
lcall
ss
ljmp
jmp
sbb
insl
add
arpl
adc
leave
push
adc
adcb
jg
push
inc
int3
shlb
aaa
push
pop
mov
sub
ljmp
inc
scas
popf
outsl
push
add
pop
fcomi
les
lock
lcall
lea
inc
lods
adc
lock
sub
mov
decb
ja
sbb
call
add
sar
lcall
dec
push
mov
mov
lahf
repz
jmp
cmpl
mov
push
std
jg
sub
pushf
xchg
xor
rorb
xor
jo
ljmp
mov
sub
jle
leave
gs
xchg
mov
jmp
hlt
rcrb
rorb
std
pop
hlt
lcall
jecxz
fld
dec
xchg
and
cli
lea
aam
jmp
jge
into
or
pop
jno
lds
lock
dec
cmc
or
adc
in
push
lcall
or
ljmp
or
mov
xchg
xchg
adc
ljmp
add
and
ljmp
repnz
in
mov
orl
mov
add
sbbb
inc
pop
cld
pop
dec
pop
push
dec
lret
cmp
add
jecxz
sub
ja
pop
and
pop
mov
jb
nop
leave
flds
pop
aad
xor
pushl
sub
lcall
xchg
nop
imul
lahf
pop
ret
pop
xchg
xchg
cmp
add
ret
out
sar
inc
dec
inc
add
out
clc
dec
pop
clc
mov
cmp
lds
or
ret
pop
mov
mov
mov
leave
push
out
cwtl
lock
incl
es
or
and
pop
jne
fwait
pop
mov
xorl
pop
stc
lock
in
mov
xchg
imull
push
repz
inc
cli
lcall
xor
ss
inc
cmpsb
cs
mov
or
inc
jl
fwait
mov
xchg
ret
decl
jl
add
clc
sub
call
inc
repnz
cmp
push
fcompl
incl
aad
cmp
and
cmp
cmpsl
cmc
adc
add
pop
sahf
mov
dec
or
mov
ljmp
nop
icebp
addr16
cltd
sahf
fidivrl
push
mov
outsb
adc
icebp
pushl
addl
ja
push
dec
push
dec
repnz
push
incl
push
adc
pop
or
and
std
cmpsb
sub
pop
in
outsb
pop
sbb
ss
xor
mov
jg,pt
xlat
sbb
lock
jmp
mov
push
xor
fistpl
mov
cld
imul
lcall
and
ret
adc
sbb
dec
push
pop
adc
es
dec
push
ret
xchg
xlat
and
add
pushl
clc
mov
pop
inc
mov
xchg
pop
rorb
clc
mull
jno
inc
sub
psubsb
push
ljmp
mov
sub
lods
movsb
xor
sti
loop
test
aam
sub
incl
pop
popa
in
aad
insb
scas
xor
jne
out
sub
imulb
push
lcall
xchg
cmpsl
orl
mov
stc
add
in
ja
pop
enter
or
mov
ss
outsl
dec
fcoms
xchg
daa
scas
fsubp
fisubrl
mov
jmp
and
and
roll
adc
adc
in
ja
fs
pop
decl
pushf
and
push
add
xchg
xor
push
dec
jbe
push
jae
fbld
fs
mov
pop
xchg
pusha
das
cwtl
es
ret
mov
fistps
scas
aam
mov
pop
test
add
sub
iret
pushf
xlat
pop
inc
cmpl
popa
add
jg
lret
cmpsl
test
fstps
push
inc
and
pop
insb
into
fdivrs
in
pushf
add
fbld
xchg
adc
jle
xchg
jmp
adc
mov
mov
mov
orl
lods
sbb
jno
fbld
sbb
gs
movsl
addr16
xchg
or
lret
rclb
es
clc
incb
leave
je
mov
dec
jecxz
lcall
pop
outsl
mov
jb
lods
adc
ljmp
aad
jne
popa
pop
jmp
dec
and
in
aas
cmp
je
mov
xor
add
or
jae
cmp
mov
or
push
nop
pop
or
and
xorl
fdivs
mov
lcall
cmpsl
out
cwtl
out
and
xlat
scas
cmp
stc
call
cmpsb
pop
in
ror
out
mov
test
mov
dec
mov
push
mov
sbb
xor
pop
iret
mov
dec
adc
std
lcall
sub
daa
das
ret
xchg
arpl
ret
call
mov
lahf
movsb
add
cmc
dec
jne
ret
sbb
xchg
outsl
jg
shll
dec
lods
push
mov
jmp
sbb
sub
and
pop
jae
xor
pop
test
dec
push
and
lcall
mov
adc
jb
mov
idivl
pop
movsb
int3
pop
iret
xchg
sbbl
push
cmp
push
roll
icebp
lods
mov
pushl
add
or
ljmp
jmp
mov
aas
sti
rcl
enter
inc
stos
mov
dec
int
lds
jns
push
lcall
aad
jmp
pushl
fcmovb
movsb
daa
mov
push
mov
pop
adc
inc
mov
scas
jns
ljmp
movsb
enter
xchg
and
and
fdivrp
or
mov
arpl
dec
cmp
cmp
pop
gs
popa
add
cmpsb
mov
mov
jmp
push
cltd
mov
pushl
jae
iret
mov
sub
js
pop
loope
in
mov
sbb
loop
sub
mov
out
nop
rcrb
xchg
cmp
scas
xchg
pop
push
mov
test
mov
jl
call
mov
jbe
mov
or
popf
dec
ss
mov
dec
jns
fildll
xor
cmp
fs
mov
and
xor
ljmp
and
or
rcl
add
xor
lds
sbb
xchg
aam
jecxz
icebp
out
aaa
cwtl
stc
cs
mov
loop
dec
jbe
incl
fwait
outsl
out
sbb
sbbb
mov
jg
daa
shl
cltd
das
jb
mov
and
add
call
aad
xlat
sbb
pop
hlt
cmpsb
push
ror
in
sub
loopne
xor
ljmp
add
subl
sbb
adc
pop
int3
cmc
fists
hlt
xor
xchg
pop
xor
dec
hlt
mov
in
inc
or
ss
pop
ret
in
arpl
rcrl
pop
cwtl
iret
les
dec
insl
adc
pushl
fwait
mov
xchg
dec
mov
clc
or
and
ja
out
and
xlat
jb
fdivrs
xlat
push
ret
je
repnz
or
mov
dec
mov
jecxz
call
aam
push
xchg
imul
jno
hlt
addr16
jecxz
int
cmp
add
dec
arpl
jp
call
les
daa
movsb
and
cltd
fists
sub
cs
mov
dec
ret
ljmp
or
dec
stc
nop
push
and
mov
out
add
push
cwtl
mov
out
clc
call
mov
fisubs
in
xor
push
addr16
inc
inc
repz
incl
and
cld
call
mov
pushl
pop
sub
add
dec
and
test
dec
test
decl
xchg
lcall
aaa
lahf
sti
iret
aad
les
push
inc
decl
push
sub
aas
mov
out
mov
push
add
call
clc
adc
xchg
sub
push
das
and
pop
aas
mov
fstpt
mov
call
xor
imul
xor
sub
push
ss
lea
xor
movsl
ret
mov
loop
mov
pop
jmp
mov
scas
scas
xor
jmp
aam
shll
jp
mov
dec
sub
jecxz
ja
clc
xor
mov
fcomi
lods
inc
decl
mov
rcll
sbb
mov
ret
push
xchg
popa
in
xlat
push
mov
call
xchg
mov
lahf
cmp
lahf
jo
fisttpll
pop
or
cmc
xchg
rcll
adc
xor
cmp
push
fstl
std
out
pushl
int
aas
and
mov
or
dec
push
fimull
pop
pop
addr16
test
inc
xor
jg
lret
jge
repz
cmp
icebp
scas
and
xchg
xchg
jmp
icebp
les
repz
mov
xor
out
add
out
push
sbb
sbb
sub
iret
lock
nop
mul
outsb
imul
adc
jmp
imul
cmp
jb
add
xchg
mov
add
sbb
lds
lcall
lahf
jmp
cmpsb
jecxz
dec
add
add
cli
inc
imul
mov
stos
ja
lods
mov
inc
cmp
add
fs
jne
hlt
xchg
out
mov
stos
add
mov
jmp
mov
add
decl
jle
adc
mov
test
test
mov
pushl
fwait
xor
std
fstl
fdivrl
jns
scas
das
cmpsb
shl
sbb
jne
xchg
inc
lahf
js
pop
pusha
cmp
dec
stc
data16
and
xor
cld
xor
add
xchg
lcall
mov
sbb
dec
inc
movsb
incl
jns
pop
add
cs
cmc
xlat
pushl
lock
push
mov
addr16
out
lcall
pop
xchg
int3
push
mov
pushf
jl
cmp
mov
shlb
ljmp
shl
fistpll
mov
inc
cmpsb
into
mov
mov
lock
xor
pop
cld
mov
nop
or
jno
mov
xchg
shlb
aam
outsl
xor
fdivrp
jg
lret
mov
push
icebp
push
cmpsl
mov
jp
jno
adc
mov
mov
fs
sar
push
aaa
and
leave
cmp
mov
ljmp
mov
leave
mov
sbb
push
shrl
mov
lea
adc
nop
xchg
adc
jp
fildll
pusha
dec
cmp
inc
cmp
shlb
pop
dec
cwtl
sahf
jae
or
pop
or
pop
vpavgw
pushl
lds
jo
nop
daa
mov
pop
sbb
nop
ss
or
xlat
testb
ljmp
xor
sub
cmpsb
mov
push
jo
loop
cmp
pushf
push
imul
test
inc
jg
aam
arpl
jnp
xchg
dec
nop
jle
adc
divb
or
sti
imulb
and
rcll
pop
pop
test
push
es
jg
dec
ret
lret
lahf
iret
jno
push
push
iret
mov
mov
sub
aad
cltd
sbb
xchg
fimuls
pop
or
dec
jle
les
inc
jecxz
mov
fldcw
xor
daa
cs
aas
pop
idivl
out
cmp
pop
push
pop
dec
jae
pop
push
add
xlat
pop
mov
lret
mov
pushl
sbb
xchg
push
adc
xor
add
scas
pop
orb
in
lcall
mov
inc
inc
xchg
or
sti
cmp
lcall
push
mov
pop
pop
xlat
fldenv
sub
or
mov
vpmacsdqh
sbb
jmp
cli
jb
sub
fldt
imul
push
xchg
mov
mov
pusha
insl
stos
fwait
jle
hlt
adc
pop
adc
std
jo
pushf
lcall
popa
loope
out
decl
out
inc
inc
iret
test
lods
dec
and
sub
add
sbb
xchg
push
and
push
sub
fucom
pop
xor
test
aam
cmp
popa
sub
push
or
ljmp
lock
rorl
adc
test
ficoms
adc
decl
inc
mov
movsb
jno
aaa
imul
mov
sbb
mov
dec
add
cli
imul
clc
adc
movl
lret
rolb
ljmp
popf
or
and
call
test
pop
inc
xor
push
test
dec
out
insb
or
pushl
xchg
sbb
lds
rorl
dec
les
je
mov
stc
ljmp
add
popf
push
push
lds
fcoml
fstpt
gs
nop
push
adc
jg
test
push
sbbl
fwait
pushl
inc
or
sbb
ljmp
stc
loopne
adc
adc
xchg
in
das
or
clc
jbe
xchg
inc
sub
pushl
fcmovbe
sbb
daa
divb
cs
or
outsb
xorb
lods
and
adc
mov
xor
decl
push
js
push
cli
inc
fincstp
inc
gs
jmp
dec
pop
test
popf
push
ds
lds
sbbb
pop
xlat
fdivl
out
in
std
ljmp
nop
pop
mov
sub
push
mov
lds
push
clc
ret
inc
xchg
mov
sbb
pushl
mov
bound
or
adc
test
or
mov
mov
es
stos
jb
out
aam
sbb
fildl
call
outsb
dec
xchg
pushl
sub
das
icebp
dec
and
cmc
xchg
cmc
and
lret
sub
hlt
push
sahf
adc
rorb
xchg
pop
nop
inc
mov
add
or
or
add
jl
adc
fldl
sahf
out
fidivrs
lret
jno
pusha
in
mov
jo
pop
fs
dec
inc
div
fsts
push
decl
lds
stos
mov
pop
mov
mov
in
test
shrl
push
mov
jb
mov
dec
cmp
pop
in
jno
scas
mov
pop
mov
sbb
xchg
mov
cltd
rorl
imul
dec
dec
mov
andl
dec
int
jns
repnz
add
xchg
test
dec
stos
test
pop
popa
pushl
fiadds
push
das
and
data16
push
test
fs
aad
out
pop
fsubrl
push
mov
decl
out
add
sbb
mov
lcall
pushf
clc
jle
mov
push
frstor
shrb
cmp
rcll
cmp
adcb
push
sub
pop
and
xor
rcll
cmpsl
popf
mov
mov
stos
sub
mov
jg
in
pop
xchg
fucomi
and
lea
shll
jecxz
xor
and
outsl
push
vmread
call
mov
inc
decb
dec
hlt
sub
and
pop
insl
pop
mov
xor
movsl
or
xchg
mov
inc
sbb
negb
jg
pop
push
cld
stos
or
mov
lods
pop
mov
lret
loopne
daa
int3
cli
fistl
orl
stos
gs
jae
repnz
cltd
aad
js
clc
sub
fisttps
rcrl
ljmp
clc
incl
xor
inc
xchg
adc
iret
dec
mov
in
mov
adc
xor
lret
pop
dec
pusha
pop
pop
addl
call
push
mov
sbb
inc
add
adc
fmull
xchg
ljmp
or
jno
loopne
loop
inc
xor
cmpl
xchg
fldt
xlat
cs
ds
pop
jp
fcoms
in
scas
pop
fidivrl
mov
push
mov
jne
inc
and
ror
mov
icebp
mov
and
jmp
sahf
js
add
pop
decl
movsb
ljmp
jae
das
mov
leave
mov
clc
xchg
fldl
cmp
incl
aam
xor
daa
shr
pop
xchg
push
pop
icebp
aam
mov
das
cmpsb
ljmp
repz
in
cmpsb
jo
inc
jle
mov
ret
out
or
je
pop
pushl
xor
ja
mov
dec
jmp
js
sbb
les
test
decl
cmpsb
mov
repz
adc
jmp
cs
gs
out
shrl
cmp
fiadds
and
das
mov
fdivs
push
cltd
bound
jmp
dec
sub
mov
jl
clc
cmpsl
dec
mov
sub
in
outsb
call
pop
inc
jmp
cs
mov
inc
ret
shll
or
sbb
inc
inc
xor
outsl
and
sahf
cs
inc
in
xchg
cmp
jo
cmpsl
fs
hlt
fdivr
jg
movsb
mov
loope
adc
stc
fcomps
sarb
dec
subb
movsb
fyl2xp1
aam
icebp
jns
or
xchg
push
cmc
movsl
sbb
or
push
into
lahf
xor
or
pop
cld
dec
sub
dec
pusha
cmp
fbstp
aad
fsubrl
mov
or
add
xor
cmp
loop
call
xor
pushf
insb
xchg
ret
cmp
aas
xchg
push
cli
push
inc
mov
int3
test
call
mov
ret
sub
cltd
cmp
int
inc
out
test
mov
scas
out
in
push
jg
ljmp
clc
sbb
pop
and
jmp
xchg
adc
sbb
or
aam
inc
in
jb
and
mov
loop
mov
arpl
aad
inc
xchg
pop
add
xchg
mov
mov
xor
or
andb
data16
jg
jbe
add
mov
aad
fidivrl
or
mov
add
lcall
inc
pop
jmp
gs
inc
xor
ja
aas
arpl
arpl
loope
mov
decb
jg
mov
jb
mov
jae
push
fcom
in
shrl
addr16
cli
test
adc
repnz
dec
sub
cli
in
fwait
push
add
pop
in
adc
xchg
or
daa
jg
xchg
adc
ljmp
push
mov
xchg
mov
jle
lcall
dec
lahf
sbb
testb
mov
hlt
mov
mov
inc
add
push
movsl
mov
loop
xchg
and
sub
mov
mov
incl
jmp
lods
imul
mov
mov
jo
push
les
push
adc
std
mov
aas
dec
xchg
aaa
adc
xor
outsl
and
xchg
dec
fsubl
in
push
xchg
imul
call
xor
push
push
fmul
mov
or
dec
add
sbb
dec
decl
das
xor
sbb
hlt
outsb
adc
mov
jmp
sub
jo
push
movsl
lcall
cmp
aas
xor
cld
ret
sbb
jge
pop
mov
push
sbb
lods
incl
xlat
into
fisttps
pop
pushl
add
hlt
xchg
hlt
fcoms
dec
jns
out
cmp
fadds
sahf
mov
loope
xlat
xor
jg
sbb
push
cmc
add
pop
ficomps
sub
inc
xchg
adc
out
push
add
ljmp
pop
rolb
outsl
push
iret
mov
ret
mov
jb
rorb
das
decl
jg
hlt
clc
push
dec
mov
insl
jns
int
lock
lret
mov
mov
mov
int3
test
sub
scas
add
inc
add
jnp
in
lcall
dec
mov
mov
mov
mov
shll
xor
cwtl
outsl
divl
inc
pop
mov
fisubrs
in
mov
pop
test
and
mov
ret
sti
lods
xor
cmpsb
js
dec
inc
outsl
sarl
mov
int3
lds
add
jmp
nop
adc
cmc
ficoms
inc
inc
inc
fsts
cmc
add
dec
fistps
dec
add
inc
xor
mov
inc
push
inc
outsb
cmp
mov
jle
add
push
cmp
icebp
sub
pop
and
sub
jmp
rolb
inc
push
or
fstpl
push
movsb
mov
in
lcall
xchg
std
outsl
jecxz
cld
or
hlt
call
aam
jno
adcl
cld
mov
or
sub
jg
push
mov
push
mov
sti
stos
mov
xorl
or
mov
outsl
clc
ljmp
push
inc
enter
hlt
in
push
jb
insl
xor
inc
and
adc
sbb
inc
jns
stos
repnz
es
dec
test
aas
jp
lea
push
mov
fidivs
ds
leave
outsl
ja
scas
inc
jp
dec
adc
sti
movsb
add
lds
jnp
incl
imul
rol
sbb
inc
lahf
or
mov
xchg
or
call
push
xchg
mov
xchg
dec
cmp
cld
add
push
adc
leave
aam
push
ret
push
mov
ljmp
adc
xlat
bound
lods
dec
js
in
and
mov
jle
sbb
mov
orb
lds
mov
mov
call
loopne
pushf
dec
scas
repz
push
xchg
sub
dec
xchg
xchg
stc
loope
jb
lea
decl
cmp
sbb
fs
adc
sbb
jnp
lea
call
popa
js
pop
sti
sub
mov
pop
add
xor
leave
pushl
cmp
xchg
sbb
mov
lcall
stos
inc
lcall
shll
cmc
or
imul
jmp
fadds
out
adc
js
das
cltd
xchg
jecxz
les
xchg
das
pop
inc
mov
jmp
or
cmp
mov
jmp
fldt
mov
cmp
movsb
movhps
ds
test
out
pushl
std
call
adc
sub
dec
dec
lea
rcrl
inc
insl
test
pushl
push
sbb
mov
push
lret
mov
and
lret
das
mov
sub
mov
jl
jb
mov
call
lret
push
adc
rcrb
inc
sub
leave
movsb
ljmp
insl
notb
orl
popf
xchg
jl
or
fnstenv
lock
movsb
push
lret
lea
lret
sbb
push
decl
xchg
data16
jnp
shlw
fistps
xchg
and
mov
push
out
cmp
sti
mov
push
jb
mov
dec
sbb
lds
or
mov
push
mov
jno
movsb
je
push
fidivs
loopne
pop
cmp
xchg
lea
stos
addl
cltd
mov
and
inc
xor
mov
xchg
xlat
and
ljmp
mov
cmp
xchg
dec
adc
sbb
cmp
decl
push
fisubrs
pushl
push
cli
pop
roll
aam
sbb
sbb
add
lcall
cmpsl
or
fcomip
and
mov
stc
enter
fwait
lods
loop
addr16
testl
mov
mov
stos
cmp
pop
xlat
xor
sub
cmc
sub
pop
pop
push
dec
mov
dec
or
mov
xchg
cld
jo
nop
xchg
insb
out
je
cmc
jmp
mov
fucomip
and
jecxz
testb
jbe
lcall
mulps
pop
out
adc
cmp
repz
cmp
pop
fimuls
pushf
lcall
in
aad
mov
push
push
sub
aad
dec
mov
test
mov
stc
ljmp
call
lods
mov
iret
divb
sarb
rolb
xor
jo
sbb
jge
sub
outsl
hlt
dec
and
lcall
cmpsl
cmp
inc
cmp
xchg
ss
ljmp
xor
mov
movsl
xchg
add
shl
popf
cmp
sti
ljmp
sub
loope
jne
sbb
in
adc
adc
in
jl
xchg
fsubrs
jle
shl
mov
inc
pop
mov
pop
mov
dec
aaa
xlat
fwait
add
jmp
out
or
mov
inc
lcall
jp
lock
cmp
and
mov
or
loope
mov
rolb
lahf
ds
jmp
jo
push
dec
inc
lret
cmpsb
fildl
in
xor
xor
adc
jl
outsb
mov
repz
clc
fcomip
push
stos
out
and
int
xor
pop
mov
lahf
repz
sub
cmc
jbe
test
mov
jo
in
movsl
xchg
ja
jmp
sub
pop
shl
int3
xchg
repz
mov
jno
xor
mov
mov
mov
std
xlat
add
iret
mov
fucomi
jle
test
out
cli
ljmp
shrb
cmp
out
push
repnz
xor
mov
xchg
mov
mov
pop
dec
stc
imul
div
inc
cwtl
out
push
cmpsb
sbb
ljmp
jle
adc
mov
repz
out
mov
not
testl
jne
pop
mov
mov
bound
hlt
push
push
incl
mov
or
push
arpl
popf
inc
dec
mov
add
sarl
mov
push
leave
call
mov
popf
jmp
push
push
pop
mov
or
jg
ljmp
test
cmpsb
es
mulb
mov
addr16
mov
stc
add
push
jmp
outsl
jb
inc
pop
push
pop
aaa
mov
int3
adc
dec
dec
inc
mov
in
mov
decl
xchg
adc
sub
fdivrs
or
xchg
add
scas
jl
fdivrp
call
inc
jecxz
or
mov
es
cld
aad
mov
sar
jmp
jnp
popf
pop
push
jns
fs
test
arpl
stos
fdivp
sbb
in
lock
lods
ficomps
decl
pop
repz
out
daa
bound
lahf
inc
dec
leave
int3
mov
cmp
cmc
cmp
repz
add
dec
sbb
clc
decl
roll
gs
jb
sub
jmp
mov
lock
mov
or
out
xlat
les
lds
xchg
iret
jp
mov
xor
fcoml
call
and
loopne
pusha
fisubrl
mov
mov
mov
loopne
daa
lcall
xor
and
in
mov
in
adc
jbe
sub
pop
mov
sub
fnstenv
ret
bound
push
icebp
test
cmp
decl
xor
sbb
dec
lret
push
fcomps
gs
cli
push
cld
lret
push
or
cmc
and
insl
mov
incl
xor
xchg
lcall
push
sub
negl
cltd
ja
sub
mov
jo
jmp
inc
add
das
arpl
adc
pop
xor
in
mov
adc
ffreep
jne
xor
orb
push
in
lea
icebp
adc
pushf
mov
out
int3
js
and
jg
jae
bound
scas
shll
adc
ds
pop
xor
and
js
mov
cmc
es
out
sbb
xchg
testb
clc
mov
idivb
cmp
icebp
pop
cmpsb
add
mov
scas
sbb
xor
jl
xor
push
lock
xchg
and
cmpsb
int3
mov
insb
insb
addps
mov
cli
push
xchg
fisubrs
xchg
test
test
sub
rsqrtps
stc
adc
sbb
sub
or
or
ljmp
dec
lds
push
mov
or
lcall
sub
xor
pop
frstor
adc
lret
cmp
scas
ljmp
pop
inc
stos
movsl
lcall
jmp
cmp
ret
add
inc
pop
xorl
lock
or
jmp
sub
inc
dec
push
scas
iret
push
sbb
lcall
mov
xchg
das
and
es
adc
je
xor
and
les
decl
leave
cs
incl
cmp
push
in
jns
push
lods
cmpsb
mov
mov
js
ja
push
aaa
or
decl
cmpsl
xchg
ss
data16
xchg
std
mov
jnp
jb
push
test
js
in
and
push
xchg
mov
xor
pushl
iret
or
jno
mov
mov
mov
push
jns
add
push
push
aaa
sahf
aaa
xchg
add
push
jecxz
jmp
lret
push
daa
mov
clc
filds
incl
int3
lret
jle
jnp
mov
test
nop
fstpt
cmp
sub
insl
xchg
ljmp
movsl
int3
dec
mov
add
test
adc
xchg
inc
std
push
xor
and
cld
jle
stos
lret
xlat
in
orl
fcomi
pushf
adc
or
add
sub
sbb
stc
lahf
pop
adc
cli
adc
pushl
ret
sub
push
lods
shl
pop
fisttpl
xor
adc
jne
ljmp
pop
mov
out
mov
mov
cmpsb
insl
pop
movsb
pushf
rcrl
jmp
data16
xor
call
pop
arpl
fstl
sub
out
ret
std
lcall
das
lret
inc
push
or
pop
imul
jnp
pop
hlt
push
sbb
xlat
icebp
mov
mov
ljmp
ljmp
adc
xor
pop
jecxz
push
add
cltd
lret
mov
mov
icebp
lret
add
mov
mov
aaa
std
and
mov
aam
pop
int
sti
push
fwait
jmp
ja
incl
test
inc
out
das
inc
pop
hlt
mov
cmp
cwtl
and
mov
xchg
movsl
and
aaa
call
dec
lcall
fisubrs
dec
push
inc
pop
dec
ret
pop
sub
lods
push
sbb
dec
je
ljmp
test
movsb
rorl
pop
daa
jne
push
stc
sbb
or
jae
loope
and
lcall
lea
cmp
ds
gs
hlt
sbb
pop
sbb
shrb
adc
insb
or
jg
stos
lcall
push
sbbl
sbb
repnz
inc
stos
mov
cwtl
sahf
addb
popa
push
arpl
lret
popf
lahf
idiv
pop
enter
aad
mov
ljmp
ljmp
and
addr16
hlt
fsub
aam
dec
cltd
fbld
fcomps
call
xor
iret
xchg
or
loope
les
loope
faddl
mov
and
paddw
call
ja
clc
out
add
pop
jbe
sub
push
stos
jno
fimull
lret
clc
insl
mov
xchg
mov
ja
push
enter
jb
test
ljmp
add
mov
sub
scas
fstpl
push
push
mov
dec
pop
insl
or
lcall
aaa
ret
out
fsubrl
negl
sti
xor
jp
mov
nop
xlat
dec
sbb
mov
incl
shll
js
int
call
bnd
sbb
test
ss
ljmp
mov
mov
add
js
pushf
adc
ljmp
sbb
mov
stc
mov
js
push
leave
aam
pop
mov
push
stos
ljmp
sub
mov
test
mov
leave
sbb
mov
or
outsl
test
les
or
jns
mov
pop
out
inc
jecxz
cmp
movsl
loop
out
shl
ret
xchg
decb
push
rolb
xor
inc
outsb
ret
mov
cmp
cltd
test
fbld
inc
xor
repz
push
ret
and
scas
sti
jle
push
cmc
loopne
inc
mov
push
pop
sti
inc
cs
mov
test
cmc
push
xchg
enter
mov
jb
sub
scas
jl
mov
mov
mov
incl
rcr
pusha
mov
mov
push
sub
jg
sub
into
sbb
imul
sbb
cmp
cmp
cmp
lret
push
mov
out
mov
xchg
mov
dec
jge
push
test
xor
sbb
push
lret
lret
aas
outsl
shll
fldcw
cmp
ljmp
test
fadds
cmc
cmp
hlt
testl
ja
dec
ja
jmp
jmp
frstor
popa
cld
jo
les
leave
jecxz
jmp
pusha
xchg
imul
fcmovbe
adc
aam
scas
mov
es
adc
div
sub
inc
push
cmp
lcall
add
cs
sub
scas
out
gs
js
shr
jb
icebp
int3
mov
imul
or
jmp
subl
add
pusha
jmp
xor
filds
pop
add
repnz
sbb
jmp
clc
call
jp
insl
jmp
inc
notl
lods
hlt
movl
fdivrl
ljmp
adc
loopne
push
ss
push
push
es
call
xchg
or
push
shrl
into
stos
xchg
rcr
sarl
in
sbb
pop
pop
sbb
xchg
out
fld
cmp
pop
xchg
mov
dec
mov
mov
cmpsb
mov
and
pop
pop
dec
les
jmp
addb
mov
out
inc
cli
fcomip
xchg
cmp
xor
out
outsl
scas
pop
loop
inc
adc
cli
mov
sbb
rcll
sar
mov
in
xlat
fsts
jno
pop
xor
jecxz
stos
ja
adc
inc
je
mov
jmp
xor
sub
daa
aad
bound
ss
cwtl
pop
cmpsl
insb
in
xor
insb
dec
xchg
push
or
les
adc
dec
fwait
jge
rcrb
icebp
lahf
mov
lcall
fcomi
imul
mov
aad
jmp
pop
fwait
xlat
decl
lock
imul
repz
lods
push
sub
insb
jg
push
push
std
call
pop
rclb
loop
aam
sbbl
mov
xchg
mov
xor
loopne
mov
subl
jg
les
retw
loope
imul
scas
pop
push
mov
xchg
add
adc
incl
push
jge
scas
int
aaa
sahf
pop
imul
call
push
mov
pushf
idiv
and
dec
test
pop
es
adc
mov
roll
in
rorl
xor
lcall
int
and
imul
je
stos
sbb
adc
and
xchg
push
and
lcall
cld
push
inc
xchg
lahf
stc
mov
bound
adcl
out
mov
sbb
rorl
cmpsb
insl
sub
sbb
push
imul
mov
dec
fmuls
push
sub
mov
invd
adc
xchg
cmp
std
incl
lea
lock
or
aas
ss
mov
jae
push
dec
aam
add
repz
push
les
loop
mov
aam
cmpsb
int
addr16
jg
incb
adc
mov
adc
addr16
loop
fwait
decl
test
rcr
std
jl
into
mov
mov
sub
push
jmp
adc
pushl
cld
insb
mov
adc
add
mov
and
imul
dec
xor
ljmp
cltd
xchg
dec
nop
rorb
gs
ret
mov
push
in
mov
lcall
in
leave
mov
xchg
mov
and
fwait
xor
adc
xorb
xchg
inc
sub
mov
cmpsl
or
arpl
pop
lcall
or
add
push
ret
jl
push
mov
mov
call
sti
mov
mov
jmp
jns
add
mov
mov
and
idiv
and
jg
ret
stos
popa
pop
xchg
js
out
sbb
jmp
sbb
das
pushf
mov
mov
push
das
jp
add
mov
inc
sbb
add
int
sbb
mov
mov
das
outsl
mov
mov
cmp
dec
xor
in
movsb
call
push
divb
outsb
sub
cli
sahf
or
loope
and
mov
cmpl
mov
divl
pushl
jns
mov
lods
imul
insb
std
mulb
push
mov
jmp
lods
or
fstpt
xchg
pop
jne
sti
imul
xor
sti
popa
or
jmp
pop
xor
fdivrl
addr16
lds
inc
fisubrs
sbb
sub
pop
xor
ljmp
inc
and
pop
adc
or
adc
add
cld
incl
psubsb
je
xchg
pop
int
sub
dec
pop
adc
xlat
push
sub
adc
add
sbb
icebp
pop
cltd
sti
mov
fmull
and
loop
sbb
dec
aad
push
jo
sbb
push
pop
sbb
rcrl
push
mov
lcall
aam
iret
hlt
enter
cmp
imul
sahf
jo
movsl
cmc
jns
daa
mov
divl
jmp
mov
lods
jle
sbb
or
scas
push
jmp
push
mov
fists
orb
adc
sub
xchg
call
pop
adc
xchg
cmp
sarb
and
push
or
pop
je
filds
or
lret
insl
pop
insb
push
sbb
call
jmp
add
movb
jmp
dec
push
ficomps
fwait
das
jbe
gs
test
sbb
sbb
idivl
in
mov
fcomip
pusha
cli
pop
ljmp
mov
jb
push
imul
sub
arpl
outsl
jecxz
in
cmovae
incl
adc
pop
cmp
dec
pusha
mov
jne
lret
mov
in
loope
mov
inc
inc
hlt
pop
dec
dec
sbb
cmpsl
jmp
shll
adc
popf
jb
jcxz
adc
fisubrl
testb
pop
jne
pop
mov
mov
mov
jb
pop
aad
xchg
insl
test
cmp
out
popa
mov
xchg
call
ljmp
dec
push
adc
sub
lcall
fld
or
cwtl
outsb
lock
sbb
mov
inc
sahf
call
out
lods
loope
stos
pushl
rol
push
mov
sar
jle
gs
ss
ljmp
call
ret
mov
pop
int
pop
inc
aaa
xor
rolb
xchg
fwait
pop
fucomi
jb
fidivl
fcomip
mov
sahf
mov
das
pop
cmc
mov
stos
push
mov
and
ljmp
insl
jnp
push
mov
mov
fisubrs
xor
stc
mov
cmp
leave
jg
incl
jne
cld
xchg
cmp
inc
inc
cmp
lret
inc
iret
outsb
push
add
adc
in
inc
mov
and
pushl
mov
andl
icebp
sub
xlat
dec
xor
out
aaa
ret
lret
incl
pop
repz
and
into
add
push
aam
mov
iret
sahf
addb
sub
mov
mov
and
sbb
lds
insb
and
scas
pop
add
das
xchg
push
adc
out
push
lock
cmpsb
decl
jb
imul
cmp
cmp
gs
or
push
dec
out
xor
add
ds
fcmovbe
and
inc
mov
gs
icebp
and
mov
push
daa
pushl
call
repnz
dec
xchg
cmp
xor
mov
jg
sbb
mov
add
lahf
mov
cwtd
lahf
ds
and
mov
gs
das
mov
out
mov
push
xor
fwait
dec
push
ficoms
add
mov
cld
insb
stos
aas
mov
sahf
fidivs
xchg
push
sub
sub
mov
jl
out
dec
cld
and
fisubrs
jecxz
cmp
jb
negl
sbb
fstpl
je
push
pushl
out
pushf
std
mov
lods
sbb
fcoml
ja
cmp
into
sub
lcall
fyl2x
fildl
aam
enter
or
jno
sbb
stos
inc
stos
mov
ljmp
sbb
icebp
mov
jb
repnz
repz
sarb
inc
jmp
push
adc
lods
mov
jns
out
dec
rcll
into
leave
cld
adc
inc
repnz
call
fidivs
mov
xlat
or
pusha
dec
sti
stos
push
mov
pushl
outsl
sbb
add
clc
lock
orl
inc
fs
bnd
and
ficompl
fxch
cmpsl
sub
fiadds
mov
lcall
in
int3
cmp
pop
ds
jmp
mov
test
mov
adcl
dec
pop
subb
das
cld
xchg
xchg
add
sahf
jg
push
bound
jb
push
pushl
loopne
lea
or
cli
insl
loop
pop
and
push
lds
pop
cmp
mov
dec
jae
imul
lcall
mov
data16
dec
pop
xchg
ficoml
pop
and
movsl
loopne
and
movb
shlb
sti
insb
filds
jmp
or
fldcw
imul
sub
not
jecxz
repnz
or
or
ljmp
dec
fstp
daa
xor
fwait
stos
jno
leave
fistpl
ljmp
in
repz
jns
sbb
add
sub
daa
or
loopne
pcmpgtd
mov
in
inc
adc
mov
xchg
push
cmp
rcll
bound
mov
or
jle
add
jge
mov
push
loopne
repz
inc
cld
or
popa
xchg
test
decl
xor
cmp
lods
cli
dec
clc
pop
and
xchg
and
jle
add
addl
into
add
dec
and
xchg
xchg
xlat
shll
call
push
rorl
pop
push
xor
cmpl
push
sbb
dec
sub
shl
push
aam
inc
xchg
mov
sbb
sub
dec
add
cs
cltd
sbb
adc
mov
cli
adc
jge
dec
fs
std
jecxz
xor
rcll
sbb
jb
clc
cwtl
call
iret
nop
add
dec
adcl
mov
xorb
inc
lea
xchg
lock
incl
jne
sub
js
lods
pop
jne
mov
decl
bound
fwait
scas
fs
and
cli
xorb
adc
sub
inc
jmp
xchg
lcall
loopne
mov
pop
pusha
rolb
or
mov
mov
lea
inc
mov
push
jle
dec
popa
mov
or
in
orl
cltd
cmp
jg
jnp
sbb
jl
inc
xchg
je
sti
push
xchg
cmpl
mov
cmpsb
add
push
add
mov
dec
inc
xor
jmp
mov
cmpsb
gs
inc
jmp
sbb
push
dec
ljmp
mov
lcall
mov
lcall
shll
pop
dec
rol
mov
clc
jg
lcall
clc
int3
fdivrl
jnp
leave
jecxz
jbe
les
dec
sub
ljmp
test
loopne
std
add
sbb
and
jmp
cmp
mov
lock
mov
push
dec
pop
call
adc
fnstsw
movsl
jo
cli
mov
dec
roll
add
xor
ja
insl
mov
inc
pop
ja
or
arpl
cmp
push
addb
inc
xchg
data16
test
aaa
lret
insb
cmp
sub
jnp
lds
cmp
sbb
cmp
sti
adc
das
xchg
std
popf
xor
cld
andl
lret
push
aas
adc
popa
outsb
mov
jg
aaa
mov
xchg
xchg
insl
call
cmp
pushl
cmp
mov
outsb
cmpsl
adc
mov
outsb
xchg
inc
shll
adc
decl
sbb
inc
jle
lea
scas
cmpsl
xchg
jo
out
push
aam
mov
cmc
testl
jae
vmread
shrl
pop
pop
adc
mov
loope
or
lcall
jbe
or
push
sbb
jns
mov
push
mov
sub
rcrl
outsb
je
jg
jp
mov
mov
add
mov
jno
inc
inc
aad
adc
icebp
mov
loop
sbb
ljmp
jnp
push
inc
pop
out
fimull
inc
std
adc
jno
addb
cmpsb
call
sub
jo
imul
ja
inc
incl
cld
or
sbb
cli
outsb
das
pop
call
xchg
mov
pop
push
fmuls
push
xchg
test
fstl
gs
pop
fnop
inc
addb
cmp
sbb
push
jnp
mov
dec
ljmp
iret
xlat
or
cmp
cmpsl
lods
enter
mov
mov
subb
lds
stos
jmp
rorb
aas
addb
cmpsb
in
int
inc
repnz
sub
or
mov
test
dec
dec
lods
jge
je
int
cmp
scas
mov
mov
sbb
fs
add
sub
jmp
xchg
xchg
dec
call
cmpsb
adc
inc
addl
outsb
outsb
mov
lock
jmp
push
dec
arpl
into
mov
das
test
jecxz
ljmp
insb
cmp
sub
sub
cmpsb
xor
fisubl
xchg
add
lret
adc
popf
inc
outsl
jmp
incl
adc
mov
jo
outsb
cltd
cli
iret
fcompl
mov
call
push
data16
push
lds
cmp
fcomi
gs
pop
xchg
pop
jo
pop
aaa
pop
pushl
mov
test
lret
sbb
xchg
sbb
lret
xchg
add
fldlg2
mov
sbb
je
inc
mov
decl
add
incl
mov
dec
fidivrl
outsl
decl
addr16
jp
pop
mov
std
and
call
dec
ds
fsqrt
ficompl
aad
insl
xchg
ret
icebp
loopne
incl
mov
mov
outsb
adc
outsl
repz
add
add
lret
jmp
adc
jmp
sahf
insb
in
cmp
cmp
call
adc
and
loope
mov
int
and
mov
js
dec
jae
xchg
mov
repz
stc
add
pop
out
cmpsl
lods
pop
sti
js
outsb
stc
xchg
cld
and
lcall
mov
xor
in
pusha
test
push
cmpsl
scas
movsb
push
lods
xlat
cmp
mov
ljmp
add
pop
mov
mov
out
lds
sub
push
pop
pop
mov
jg
push
xchg
adc
loope
out
pop
pop
imul
xchg
bound
mov
lret
je
pushl
mov
pop
mov
lods
and
mov
mov
and
and
call
sub
fsts
lock
xchg
or
mov
pop
push
je
loop
pop
les
adc
inc
leave
subl
pusha
mov
test
lods
rep
mov
mov
ret
cmp
push
mov
xchg
mov
das
xchg
inc
lret
lcall
jne
or
incl
sub
pop
ljmp
ficoml
add
xchg
into
push
mov
inc
pushf
cwtl
add
push
loope
popa
mov
in
adc
cli
decl
or
xchg
out
in
xchg
mov
adc
rol
add
jle
outsb
inc
push
icebp
incl
push
jg
mov
mov
jmp
mov
xchg
dec
in
pop
sub
mov
mov
xchg
mov
stc
jmp
add
call
dec
jmp
jno
loopne
cmp
lods
mov
pusha
in
inc
orb
mov
dec
mov
adc
mov
enter
pop
test
test
cld
xor
mov
adc
call
jge
mov
fsincos
push
ja
ljmp
inc
ss
pop
mov
xchg
test
daa
adc
push
xchg
loopne
stc
or
lret
pop
popa
rcrb
fld
sbbb
or
inc
jbe
rclb
push
sub
push
fimull
push
decl
mov
cmpsl
and
mov
inc
mov
int3
adc
stos
sbb
aam
out
ja
incl
testl
stos
ljmp
mov
insb
sub
incl
lcall
add
push
lods
mov
push
pop
scas
sub
mov
cld
jg
outsb
jb
fsubrl
in
jns
fwait
in
nop
stos
lcall
lods
sbb
pushl
sbb
flds
xchg
stos
xchg
mov
sub
andl
shrb
pop
cmp
and
icebp
repnz
in
shlb
xchg
aas
ret
lock
mov
jmp
mov
push
cmp
fnstenv
dec
cwtl
adc
mov
dec
push
std
xor
movsb
stos
push
loop
mov
xchg
out
jno
mov
mov
fsubrp
in
pop
push
or
mov
test
in
aad
es
fists
pushf
aaa
mov
pop
mov
stos
lds
out
dec
cld
mov
cld
movsb
sbb
xchg
aad
xchg
cltd
adc
push
add
adc
add
ljmp
add
movsb
dec
fistpll
push
popa
les
sbb
dec
clc
jmp
scas
stc
push
cltd
xor
mov
shl
nop
pushf
jge
popf
frstor
sbb
call
subb
pop
lock
rcrl
in
scas
lahf
push
sbb
jmp
dec
push
bound
pop
shlb
loope
out
int3
lds
into
mov
pop
lcall
and
mov
aad
ret
dec
dec
fimull
int
gs
add
push
test
pop
inc
adc
jo
lret
xor
test
int3
shlb
push
es
mov
cwtl
dec
cmpl
in
jo
mov
xchg
mov
fbld
xlat
mov
insb
pushf
mov
sbb
mov
decl
mov
push
mov
mov
or
arpl
dec
out
push
xor
decl
inc
add
leave
into
pop
gs
imul
test
jg
jle
xlat
jmp
icebp
fs
loopne
aaa
push
push
insb
dec
inc
pop
lea
sbb
decl
jl
hlt
out
push
stos
push
xchg
or
in
pop
std
ljmp
out
mov
aad
or
mov
hlt
mov
hlt
dec
xchg
mov
imul
dec
dec
ljmp
mov
mov
call
test
es
decb
jno
fdivrp
adc
cmp
ja
adc
shrl
es
leave
inc
jecxz
outsb
sarl
incl
jg
test
addr16
lret
ret
xchg
mov
add
icebp
xor
les
or
addl
cld
rorb
dec
les
xor
push
lds
les
lcall
push
aam
cmp
pop
sar
stc
xchg
pop
cld
jg
dec
xor
mov
mov
jg
mov
cmpsb
pop
or
push
xor
dec
mov
inc
int3
pop
jecxz
shlb
sarb
lock
mov
scas
imul
out
jl
jb
addr16
mov
aaa
aam
mov
out
mov
pop
push
add
sti
pushl
push
outsb
cmp
mov
add
dec
mov
adc
test
call
adc
add
rol
in
mov
rol
sub
sbb
jg
test
lods
sahf
repz
shl
or
gs
in
sbb
jb
movsl
cs
and
sbb
xor
mov
inc
aam
enter
push
mov
int
xor
sahf
ret
add
test
pushl
icebp
sub
aad
mov
jb
sub
leave
mov
mov
hlt
sbb
jb
repz
fldenv
call
or
inc
es
lret
call
imul
cmp
out
xchg
and
mov
sar
add
sbb
cmc
test
loope
in
stc
mov
out
mov
xchg
out
mov
idiv
xlat
into
or
pop
clc
xor
push
cmp
out
cmc
lods
lret
mov
sbb
pop
rep
loop
add
push
xchg
sarb
adc
cwtl
or
add
push
jg
fistl
lods
fldt
xor
movsb
mov
addl
sub
fcmovb
push
ja
sbb
call
pop
std
cwtl
repnz
pop
cmp
cmpb
imulb
push
clc
lcall
stos
pushf
mov
fucomp
aaa
cltd
sar
or
inc
push
rclb
and
pushl
and
xor
scas
cltd
int
popf
lcall
push
fs
inc
lea
cli
mov
fistps
mov
stc
pop
pop
push
call
sub
in
mov
push
jge
xchg
jp
cwtl
push
sbb
div
js
in
fadd
sbb
sub
sub
jecxz
jno
or
dec
mov
sub
rclb
jmp
mov
ret
mov
xchg
pop
mov
scas
mov
xchg
and
dec
pop
pop
jne
push
fists
shlb
movsb
cld
dec
les
fwait
cs
in
mov
and
add
dec
mov
inc
jg
cmp
loop
mov
rcrb
lods
loopne
or
sbb
cld
roll
stos
pop
cmp
in
cld
mov
xor
xor
out
cmp
mov
jecxz
cmp
lcall
mov
sbb
sahf
lods
jge
comiss
xchg
cltd
call
lcall
push
sub
je
jl
mov
or
hlt
stc
outsl
push
test
mov
jg
cmpsb
sbb
outsb
mov
negb
decl
aas
fdivrl
xchg
pop
cmp
mov
mov
inc
mov
cmpsl
lds
lds
fcomip
jmp
sti
loopne
cmp
dec
daa
xor
cmp
mov
mov
ljmp
lret
jmp
or
jge
mov
lcall
pop
into
xlat
dec
int3
fisubl
cmp
pop
cmp
mov
pop
mov
cmp
fcomip
decl
xchg
push
fwait
les
jo
inc
xchg
ds
add
mov
aaa
pop
mov
sbb
push
add
loopne
jmp
shr
mov
or
aas
xchg
xor
arpl
mov
fidivrl
cmp
jle
fsubs
cvtpi2ps
mov
pop
rolb
jp
push
inc
scas
mov
pushl
hlt
pop
xchg
pushf
in
xor
cmp
xchg
push
in
sar
jmp
sub
add
fidivs
rcr
cwtl
ret
jg
loopne
pop
aam
out
mov
jecxz
jmp
shrb
pop
stos
inc
push
add
idivb
out
jp
jl
decl
outsl
sbb
and
sub
dec
mov
test
push
xchg
in
clc
fcomip
fdivrl
pop
or
and
stos
pop
cmp
jle
ds
mov
aaa
xor
ret
push
cli
mov
ljmp
mov
loope
add
lock
dec
inc
repz
mov
xchg
ljmp
push
dec
jb
je
mov
das
inc
jnp
cmp
mov
scas
es
mov
jae
add
mov
jo
setne
std
jmp
push
enter
nop
adc
inc
push
pushl
cs
sub
mov
cmc
or
lea
lret
mov
push
sahf
mov
pushl
sub
cmp
and
ret
rcl
pop
jmp
mov
lea
stos
or
stos
and
clc
or
call
outsb
loope
call
stos
jp
decb
into
fnstenv
mov
in
insl
add
faddl
lods
call
sti
xlat
daa
pop
mov
pusha
std
sub
sub
pusha
int3
outsb
cmpsl
int3
ljmp
orb
dec
andb
fwait
inc
and
clc
jge
pop
jl
lahf
lcall
xor
xlat
mov
lcall
dec
sub
xchg
sbb
jge
cmp
sti
lods
call
lcall
fsubrs
push
push
ret
jl
sub
mov
es
pushl
mov
jge
adc
mov
jno
mov
or
std
jnp
inc
clc
decl
sub
mov
adc
rol
mov
test
inc
das
out
push
add
mov
cmpsb
cmp
ljmp
in
jge
mov
into
xor
fldt
or
test
and
ljmp
pop
je
xlat
sub
fucomp
add
rorl
or
jge
adc
lock
jg
cmp
jecxz
stc
mov
enter
insb
inc
add
lcall
out
xchg
mov
mulb
jnp
mov
push
sub
push
icebp
fwait
bound
cmp
mov
call
cwtl
xchg
xchg
mov
pop
inc
inc
decl
rol
push
lea
push
cmp
jo
les
popa
test
lcall
lock
jl
adc
cltd
test
scas
sarl
push
push
je
jmp
stos
xchg
xchg
mov
add
rcll
cli
mov
pushl
cld
in
inc
rcl
aad
mov
mov
inc
xchg
leave
cld
adc
popf
inc
iret
incl
xchg
jg
repz
add
cwtl
pushf
gs
sub
rclb
call
mov
nop
fs
lds
mov
mov
decl
and
stos
mov
aaa
lods
lmsw
enter
adc
push
mov
mov
dec
adc
mov
cltd
neg
in
dec
mov
fistpl
rolb
dec
fdivrl
or
fcomps
xchg
pushf
xor
fildll
leave
imul
cmpsb
jmp
xor
mov
inc
stos
popf
out
add
ljmp
sub
lods
divb
or
nop
inc
outsl
loopne
inc
xor
mov
fistpl
sbb
les
pop
fldl
push
jl
push
cltd
aad
pop
sbb
lcall
adc
mov
call
stc
xchg
cmc
ret
and
push
cmp
popf
lcall
inc
enter
iret
push
cmp
pop
stc
fidivl
pop
sub
mov
jmp
pop
push
mov
push
mov
bound
mov
jg
sub
push
adc
pop
xchg
mov
jg
call
pop
js
or
jo
insb
insl
or
sbb
fwait
jecxz
inc
std
xor
pop
hlt
filds
popf
inc
dec
shll
mov
dec
iret
xlat
adc
jle
leave
xchg
insb
nop
inc
cmp
lods
ret
shr
jnp
adc
xchg
sub
call
sbb
push
cmp
sbb
repnz
cmpsl
jno
sbb
xor
pop
xchg
pop
pop
and
xchg
dec
inc
scas
adcl
jmp
dec
adc
xor
or
or
ljmp
cli
insb
sti
iret
push
sbb
leave
shlb
cmpsb
xor
mov
or
incl
jge
test
push
sub
out
adc
gs
fcoml
in
outsb
add
ror
and
fucom
inc
cmc
push
fnstenv
mov
mov
nop
lea
incl
push
push
mov
test
pop
out
lret
les
daa
iret
xchg
arpl
push
mov
add
call
inc
loop
scas
fistpll
lock
sbb
enter
xchg
fwait
in
mov
jle
daa
daa
idivb
ret
mov
cwtl
add
jg
xor
dec
cld
push
mov
adc
insb
inc
xchg
mov
popf
sbb
mov
push
out
jp
or
push
ret
jbe
mov
bound
lahf
into
sbb
xchg
jmp
std
in
orl
arpl
mov
pop
xchg
pop
nop
sub
push
scas
dec
pop
test
stc
cli
push
inc
pop
cmp
lcall
pusha
bound
or
mov
ds
fsts
xor
pop
xchg
push
fdivrl
dec
mov
pop
subl
test
cmp
in
jle
std
sahf
lods
xchg
insl
mov
adc
sarb
xor
decl
push
push
xor
or
jp
xor
insl
pop
scas
pop
jnp
call
cmpsl
fwait
sub
call
loopne
jno
nop
dec
dec
sbb
ret
dec
mov
stos
outsb
adc
pushf
idiv
incl
mov
ret
sbbb
les
dec
xchg
mov
rcl
xchg
sub
pop
inc
ja
pop
xchg
push
xor
call
inc
inc
les
inc
inc
adc
decl
lret
into
push
adc
mov
cli
enter
sar
call
inc
jbe
mov
dec
pushf
fs
push
pop
pop
leave
scas
xlat
incl
xchg
jb
add
icebp
jmp
int3
or
jl
mov
lds
outsl
xor
push
lret
and
imul
lcall
mov
into
inc
movb
nop
rcrb
mov
sarl
mov
fsubl
enter
xchg
test
sar
lcall
mov
xchg
push
std
mov
rorl
xor
call
fistpll
ds
xor
cmp
pop
mov
shrl
clc
mov
int3
rorl
es
sbb
mov
push
jmp
into
repnz
adc
pushf
lods
inc
fisubrl
jae
add
add
and
sbb
push
and
mov
call
int
imulb
and
sbb
mov
lea
xchg
dec
les
decl
mov
jns
je
popa
adc
xchg
clc
jbe
cmp
enter
mov
lcall
mov
sub
out
or
jae
sti
scas
or
mov
call
sub
pop
jmp
mov
inc
nop
xor
fimull
jmp
xchg
xor
mov
call
adc
inc
shlb
and
push
adc
adc
xor
jmp
les
jl
dec
movsl
jnp
sub
push
insb
push
mov
stos
inc
loope
sbb
cmp
stc
fwait
insb
adc
jmp
dec
jb
lock
xor
sbb
mov
ljmp
cs
sarl
jnp
or
fcomip
inc
inc
int3
arpl
lea
insb
mov
xchg
arpl
or
or
in
jns
sbb
sbb
pop
lds
cmp
inc
addl
imull
xor
mov
push
insb
std
scas
xchg
andl
in
ljmp
sub
push
pusha
dec
cmp
mov
add
inc
adc
pop
cmp
inc
nop
add
jae
push
or
lret
les
out
decl
inc
push
dec
adc
out
sub
sub
repz
inc
jl
adc
in
pop
mov
sahf
inc
nop
fucomip
adc
dec
ljmp
jae
adc
sub
mov
push
sbb
adc
lar
push
ja
add
xor
xor
mov
test
call
call
mov
pop
test
mov
mov
gs
sbb
xlat
ljmp
dec
sarb
shr
mov
test
inc
add
jns
inc
dec
xchg
in
mov
scas
xchg
cmpsb
je
mov
pop
jae
push
mov
test
in
jnp
jg
pop
pop
or
lock
jae
imul
hlt
xchg
ss
sub
test
cs
dec
stos
mov
ljmp
push
int3
in
pop
push
push
jo
flds
mov
lret
cmc
jno
cmp
push
dec
mov
icebp
jge
cli
in
cs
ss
sbbl
push
aas
lea
incl
test
insl
sbb
pusha
mov
push
push
dec
mov
push
fs
incl
pop
pop
gs
sbb
jo
rclb
dec
mov
sbb
rcr
pop
fs
ljmp
push
xchg
fdivl
sub
pop
shll
mov
mov
out
sub
pushl
shll
push
mov
or
jae
or
sbb
inc
adc
mov
clc
mov
xor
push
adc
mov
mov
ljmp
jp
pop
and
inc
xor
mov
je
inc
sub
adc
push
cltd
sbb
mov
icebp
or
sbb
sub
xchg
mov
pushl
decl
xor
loopne
dec
sbb
mov
jns
nop
push
push
push
std
cld
loope
mov
mov
scas
inc
sti
out
loope
jnp
pop
xlat
jp
andl
and
lods
divl
cltd
inc
mov
mov
jmp
imulb
pop
push
sbb
loope
xlat
enter
call
xchg
jp
or
aas
mov
ja
cwtl
push
dec
js
mov
add
into
decl
mov
incl
andl
cmp
faddl
sub
cld
mov
inc
push
cltd
inc
lahf
xchg
loope
jmp
lret
inc
into
in
sbb
test
leave
inc
pushw
push
pop
mov
leave
lcall
pop
js
sub
jl
test
adc
incl
insb
mov
or
dec
push
or
je
xor
lods
push
pop
in
mov
mov
ljmp
enter
daa
xchg
sub
pop
jge
push
dec
inc
push
in
shl
ljmp
cmp
jle
push
sbb
aad
loope
pop
mov
push
lret
inc
pusha
addl
mov
cmp
sar
aaa
or
sbb
jge
push
mov
push
pop
add
incl
cmpsl
movsl
sub
adc
stc
dec
shl
sbb
leave
add
loopne
data16
jg
incl
jns
sbb
push
scas
test
andb
pop
pop
push
decw
or
imul
ficompl
sbb
in
lods
call
ss
test
into
scas
push
sbb
cmp
pop
sub
das
imul
mov
repz
dec
pop
mov
decl
out
lahf
sti
add
ljmp
fimull
arpl
adc
pop
pop
lcall
cmpsl
ljmp
xor
std
dec
mov
data16
or
mov
xor
add
fnstenv
fcmovne
sbb
or
jbe
jno
push
jp
push
repnz
pop
call
cmpsb
jmp
and
adc
and
jb
js
addl
ljmp
movntps
fbstp
xor
push
negl
fldenv
sbb
mov
test
jae
hlt
inc
push
ret
and
mov
stos
adc
out
icebp
into
cmp
xchg
mov
ljmp
push
xor
hlt
out
fs
push
ficomps
mov
scas
shlb
inc
lahf
push
jmp
push
in
pop
mov
out
pop
fs
test
cmpsb
hlt
incl
mov
pushf
les
jae
dec
push
imul
dec
sub
cmp
repnz
push
cmp
incl
outsb
cmp
cli
cmp
push
aas
and
inc
lahf
jns
fmuls
fwait
in
push
stos
ret
fadds
lret
push
test
fcoms
xchg
fbstp
mov
inc
pushf
lcall
stos
dec
cmpsb
and
add
mov
xor
inc
mov
imul
pop
fisubs
jecxz
sahf
es
xor
aaa
mov
inc
outsb
nop
pop
lods
das
xchg
adc
outsb
test
push
and
sbb
jnp
jp
pushf
pop
jmp
sbb
adcb
mov
and
in
out
jmp
in
sbb
xchg
test
inc
fs
fs
jg
or
ss
decl
aaa
mov
or
inc
lock
jne
xchg
filds
dec
inc
fidivl
push
and
pop
inc
fisttpll
xchg
and
mov
xchg
pop
fnstsw
lods
sar
cli
jmp
cltd
xor
fs
icebp
test
insl
les
mov
test
sar
lcall
movsb
xor
mov
incl
fstp
aaa
fwait
test
or
shlb
pop
push
decl
fmulp
movsb
lea
xchg
loopne
cmc
adc
jnp
inc
mov
pushf
scas
mov
jge
test
push
adc
or
mov
mov
inc
aas
cmpsl
fstpl
ljmp
jg
test
ljmp
psubq
mov
mov
test
shrb
add
hlt
hlt
push
push
mov
pop
stos
in
clc
push
lret
in
dec
mov
ret
cmpsb
adc
stos
push
sub
in
popf
hlt
rolb
jg
inc
push
lock
sahf
mov
idivb
enter
pusha
xchg
and
lcall
les
jge
daa
insl
out
xchg
add
cmpsb
ljmp
jmp
cmpsb
push
and
inc
dec
and
add
enter
jbe
pop
add
icebp
dec
sub
jmp
stos
adc
shll
addr16
dec
pop
repz
sub
dec
xor
xor
int
push
popf
lock
and
xchg
loopne
jmp
cld
out
sahf
out
mov
push
mov
jle
mov
dec
imul
sub
incl
push
mov
idivl
fstpl
sub
outsb
popa
xchg
jg
sub
mov
sbb
pop
frstor
dec
lock
fidivs
lods
cmp
incl
push
rolb
pop
mov
les
out
ds
popf
leave
add
out
nop
xchg
cld
outsl
leave
aam
cld
push
mov
mov
pop
rclb
cwtl
push
push
lcall
loope,pn
lods
or
or
mov
sub
scas
mov
jp
mov
mov
dec
scas
jmp
cmp
push
and
insl
mov
out
push
pusha
call
test
mov
pushl
add
mov
ret
ss
mov
popf
mov
outsl
nop
ljmp
or
repz
lods
mov
mov
cmp
sub
testb
je
push
mov
test
gs
ds
call
call
stc
xor
dec
out
xor
dec
call
inc
aam
push
cmp
pop
in
sarl
cmc
outsl
std
loopne
in
imul
mov
push
cmpsb
ficoms
xor
push
sbb
jmp
cmp
xchg
mov
aam
arpl
orb
adc
imul
decl
fcoms
sbb
xchg
mov
test
aaa
mov
cwtl
lods
out
or
pop
or
inc
adc
mov
ljmp
or
xor
mov
dec
jb
loop
inc
or
pop
fbld
repz
in
mov
sbb
aaa
xchg
mov
pop
popf
int
and
call
incl
mov
inc
sbb
jmp
dec
mov
jb
and
jg
and
or
test
out
xor
aaa
dec
xor
decl
imull
hlt
pop
ljmp
popf
fistl
jmp
scas
push
je
inc
xchg
cmp
ret
ret
int
out
cmp
or
pop
fs
les
sti
aaa
adc
mov
aas
cltd
jg
or
dec
incl
js
inc
adc
loopne
repz
mov
pop
pop
or
jmp
xchg
push
push
call
pop
ja
sub
or
clc
cmp
mov
aas
andb
inc
sar
outsb
jnp
sbb
push
xor
pusha
clc
ljmp
ds
pop
sub
scas
cmc
jbe
movsl
inc
je
sbbl
lcall
fwait
mov
sbbb
push
sbb
dec
out
ja
mov
or
sbb
mov
adc
dec
push
cs
fistps
gs
inc
in
push
sahf
pop
sbb
pop
lock
ljmp
adc
sub
xchg
sbb
pop
icebp
xor
pop
push
shlb
push
sbb
into
sub
ja
mov
clc
lcall
sub
xor
mov
inc
and
mov
pop
inc
push
adc
inc
mov
mov
in
mov
pusha
les
loope
mov
jmp
jp
dec
bound
mul
and
dec
xor
add
ja
adc
cld
mov
lahf
push
vcmppd
inc
pop
xchg
jp
fistpl
ss
xchg
data16
sub
arpl
or
inc
and
mov
adc
and
in
xor
inc
bound
mov
jnp
mov
jmp
mov
loope
ja
jae
ljmp
pop
cs
push
int
sub
xchg
and
push
iret
add
jne
sar
mov
mov
pop
xchg
out
or
enter
jg
pushf
adc
popa
mov
into
hlt
dec
cli
decl
sahf
and
push
mov
sbb
hlt
jl
adc
cs
int3
imul
add
aam
imul
test
push
jbe
cmp
jmp
or
cmc
inc
sub
mov
or
or
push
add
in
adc
es
dec
mov
dec
inc
jle
stos
out
jecxz
lea
pop
mov
andb
scas
xchg
repz
cmc
repz
jb
add
or
pusha
ret
ret
out
clc
jmp
xchg
mov
pop
loop
mov
ficoml
add
lock
pop
lret
inc
outsl
fstpl
mov
hlt
mov
lds
std
jg
adc
xchg
sub
sbb
push
jbe
dec
out
push
or
pusha
out
cmp
sahf
mov
mov
inc
and
dec
mov
out
sub
push
shl
xchg
movsb
jne
aam
jnp
dec
imul
or
mov
jae
xorl
ja
decl
scas
jo
jl
jo
inc
cmpsb
repz
cmpsl
xlat
or
mov
sbb
das
jg
decl
stos
loopne
insb
inc
sti
js
or
pop
sti
clc
cmp
xor
pop
cmc
xlat
mov
fsubrs
insl
jecxz
inc
and
xor
xchg
sub
call
pushf
movsl
mov
sub
rcrb
fucom
pop
pop
pop
cmpb
inc
sarb
inc
inc
mov
adc
call
roll
jb
xchg
and
sti
xchg
add
stc
rolb
mov
jecxz
les
and
mov
mov
fnstsw
lods
lea
push
mov
cli
pop
dec
cmp
ss
insb
mov
pop
pop
cwtl
data16
xchg
mov
jns
xor
lcall
adc
push
mov
sbb
fcoml
pop
les
fisttps
jns
ret
mov
xor
aam
lret
xchg
dec
mov
and
repz
dec
aam
cs
imul
xorl
out
and
aam
call
hlt
pop
add
stc
daa
push
ffreep
mov
sbb
enter
sbb
sbb
inc
jge
mov
cmp
cmp
fstpl
insb
cltd
fs
test
xchg
jae
hlt
add
arpl
mov
cmp
imul
in
outsl
addr16
ja
xor
mov
xchg
lret
cli
jg
jmp
mov
cmpsl
inc
mov
shll
scas
dec
insb
repnz
out
pop
mov
mov
dec
mov
pushf
xchg
leave
xchg
mov
xor
sub
subb
adc
cmp
cld
lods
xchg
jl
jbe
int
test
out
addr16
ljmp
sub
mov
lds
stos
loop
xor
sbb
call
and
test
mov
push
sub
pushf
add
inc
fwait
lret
ljmp
in
test
shlb
enter
mov
and
insb
inc
cld
decl
and
xchg
pop
jb
jo
sbbb
sarb
lcall
xor
call
push
aaa
or
pop
repnz
xor
lock
call
lds
pop
call
mov
push
xchg
lcall
xchg
roll
xchg
icebp
je
lds
lcall
icebp
dec
adcl
dec
mov
mov
and
imul
inc
cmpsl
lock
jbe
push
add
ljmp
xchg
ljmp
xor
in
push
icebp
jecxz
movsb
outsl
call
push
lcall
add
fdiv
shlb
pop
push
mov
pushl
lds
dec
jge
int3
cmp
mov
inc
leave
jl
aaa
in
aam
jns
mov
cld
sub
scas
clc
sub
stos
es
lcall
into
arpl
mov
incl
or
enter
adc
mov
push
inc
rcrl
lcall
test
ds
pop
imul
push
xchg
stos
xor
lahf
sahf
inc
mov
cmp
filds
mov
add
dec
push
inc
mov
inc
jle
jb
dec
movsb
fwait
ds
pop
jg
dec
insl
mov
xor
and
jb
sub
shr
imul
sti
in
cmpsl
daa
mov
pushl
and
in
dec
fmul
push
mov
gs
pushl
loopne
cmp
jb
sub
pushf
adc
into
adc
incl
mov
pop
or
lods
inc
and
icebp
lcall
mov
pop
xor
xchg
fldl2e
sub
in
jae
xor
call
ret
clc
into
push
lods
jno
in
cltd
mov
ljmp
cli
stc
sbb
iret
mov
pop
xchg
filds
add
pop
adc
enter
lds
mov
push
sti
mov
add
xchg
stos
outsl
inc
clc
jns
mov
cwtl
xchg
push
loopne
addl
pushl
lds
pop
lcall
xor
jns
out
int
into
jnp
mov
aaa
add
dec
mov
xchg
mov
adc
leave
jne
mov
in
call
inc
sarl
add
inc
pop
lret
ljmp
je
pusha
aaa
mov
fcmovbe
mov
dec
push
mov
xchg
in
fcompl
decl
add
mov
jge
into
int
lods
mov
mov
xchg
fnstsw
call
xchg
and
xchg
shr
aaa
in
mov
mov
fs
xor
stc
lods
sub
dec
xchg
in
mov
mov
cmp
mov
out
aam
mov
ljmp
xchg
dec
jns
test
push
popf
dec
xor
cwtl
lds
das
mov
mov
lcall
xchg
data16
fisttpl
xchg
js
pushf
sub
dec
xor
nop
clc
sti
push
stos
hlt
pop
stos
push
incl
out
lods
add
add
sub
enter
pop
ss
adc
movsl
insl
cli
decl
mov
rorl
mov
icebp
in
or
mov
adc
pop
seto
mov
xchg
scas
or
jge
jl
les
or
or
xor
mov
fstl
mov
sbbb
das
rcrb
fcomi
in
push
ficomps
loop
ljmp
movsl
add
inc
push
and
icebp
sbb
test
lods
loop
jl
daa
push
add
mov
jnp
movsl
adc
enter
ret
ljmp
loop
jg
ljmp
mov
xor
imul
and
push
pusha
movsl
jae
pop
decl
or
jnp
mov
filds
rcrb
fwait
or
pop
pushl
movsb
push
faddl
mov
out
fwait
jae
mov
dec
push
push
fs
pop
popw
std
dec
ret
dec
sbb
data16
and
inc
jle
loope
fwait
dec
pop
fadds
pushl
cmpsb
jns
and
sbb
cld
cltd
jno
jo
xchg
pause
fcomip
pop
sub
xchg
sbb
add
push
jge
sbb
mov
les
out
mov
lcall
mov
pop
es
xchg
movsl
out
lds
into
stos
mov
out
push
mov
cltd
jle
stos
cwtl
push
out
incl
jne
stc
hlt
xchg
bswap
mov
loop
sbb
ljmp
mov
je
cli
aad
adc
jne
sub
cmpsb
loop
aad
outsl
xor
add
fbstp
cli
incl
mov
stos
adc
shlb
push
and
push
lcall
dec
or
loope
imul
push
add
flds
lods
pop
gs
stos
stos
mov
nop
mov
xchg
sub
loopne
jge
loopne
aam
dec
jns
sub
mov
out
push
inc
cmp
ja
and
aaa
hlt
std
mov
insl
or
mov
jae
xor
cld
inc
lret
mov
aad
decl
jmp
int
add
pop
js
das
sub
popa
lret
shr
icebp
cmp
decl
mov
aad
mov
imul
or
fcomip
jmp
xchg
inc
mov
sbb
rorl
pop
sarb
sar
ljmp
jmp
aad
pushf
les
add
add
ret
cmc
dec
ljmp
aas
or
sbb
rclb
faddl
inc
ret
pop
mov
decl
dec
dec
dec
ret
je
jge
loop
mov
cmc
ret
loopne
pop
test
mov
stc
pushf
decl
outsl
add
jno
jb
xchg
repnz
xor
inc
sbb
adc
fld
std
daa
ljmp
and
sbbb
ja
jmp
and
mov
cld
jg
in
stos
cld
mov
add
jl
sar
cmp
gs
ljmp
jns
fsubl
aaa
pop
lock
jg
cld
jno
jge
lock
aas
out
mov
clc
incl
out
mov
aas
mov
jno
adc
mov
jecxz
int
jmp
sbb
ja
jl
xor
mov
ret
sarl
cld
pushl
notb
icebp
xor
mov
outsb
push
push
cld
mov
fdiv
in
popf
repz
push
fwait
enter
xor
sahf
mov
enter
aam
push
repnz
je
sbb
push
and
and
push
ficompl
mov
roll
mov
fsubrl
shrl
xchg
repnz
cmpsb
jne
cmpsb
mov
shlb
clc
mov
ljmp
mov
adc
or
lahf
iret
jne,pn
ljmp
dec
jno
jmp
sti
mov
rcr
mov
call
mov
jmp
incl
mov
imul
sahf
cwtl
mov
ljmp
xchg
ljmp
jnp
scas
fildl
ficompl
ljmp
loopne
push
adc
push
icebp
clc
leave
jnp
adc
mov
cmp
out
arpl
int3
cmp
and
in
xchg
push
loop
pop
jl
cmp
shrb
pushl
xchg
ja
ror
out
jb
mov
out
loop
jle
leave
adc
ja
sub
call
cld
loop
cmp
xor
push
call
pop
mov
mov
cmc
in
pushl
dec
loop
inc
adc
and
jae
in
jmp
push
sbb
and
adcb
fdivrp
xchg
arpl
test
mov
loopne
mov
fsts
cmp
loope
lret
push
lret
add
loope
repnz
xchg
push
test
xor
cmp
mov
dec
adc
bound
out
cmp
pop
movaps
fcomps
adc
cmp
adc
loopne
sbb
push
cmp
icebp
add
ds
fidivrs
pop
cwtl
fcomps
inc
sbb
mov
addb
jmp
push
pop
mov
sub
pop
inc
mov
adc
or
jns
cmp
lcall
xchg
insl
add
out
jnp
jo
std
rclb
fs
outsl
xlat
addr16
dec
addr16
imul
fsubrs
lock
adc
mov
xor
inc
hlt
shlb
mov
mov
int
push
hlt
cmp
add
cli
sub
mov
xchg
jge
call
ljmp
inc
in
xchg
fucomp
push
test
pushl
sarl
mov
mov
ja
mulb
popf
push
lock
adc
fcomip
std
subb
test
int3
xchg
std
jge
or
mov
daa
rorl
and
out
call
cld
lcall
sub
sub
mov
shrl
rorl
dec
fcomip
decl
mov
in
jecxz
int
xchg
mov
shll
movsb
push
mov
pushl
sub
loop
bound
cmp
cmp
push
or
push
shll
ljmp
sub
sub
rcll
add
mov
or
and
lahf
sub
mov
mov
or
lock
icebp
cmpsb
inc
xchg
outsl
dec
add
sbb
rcrb
jle
je
cmp
inc
movsl
jbe
add
and
dec
sar
test
outsb
cld
shrl
add
mov
roll
les
incb
stc
xchg
andb
test
jg
mov
and
into
incl
in
add
or
sbb
inc
or
pushl
mov
push
sbb
cmp
out
xor
imul
jp
jo
mov
repz
lcall
cmpl
sub
incl
push
jp
inc
fwait
mov
stos
jg
mov
mov
xchg
jl
jno
ds
pushf
ret
call
jle
mov
cs
divb
testb
iret
jg
add
ja
pop
cmp
inc
ret
imul
cmpsl
push
inc
jge
inc
sub
push
jne
incl
cmp
inc
pop
mov
int
adc
int
xchg
je
incl
notb
cmpsl
xor
pop
std
push
mov
push
mov
mov
mov
inc
sub
pop
xchg
pop
and
xor
fiaddl
aaa
sub
inc
aaa
mov
sbb
jmp
sbb
int3
xor
outsl
cltd
mov
repnz
mov
daa
xor
mov
js
or
or
hlt
js
xor
push
jecxz
xchg
mov
and
and
stos
mov
andb
push
mov
push
das
mov
fstl
aaa
sub
icebp
jmp
push
sub
decl
repnz
cmpsb
mov
mov
cmp
sub
mov
nop
and
dec
mov
adc
xchg
sub
mov
jecxz
pop
mov
add
out
out
and
adc
loope
mov
decl
mov
sub
cwtl
add
seto
mov
sub
xchg
scas
clc
jmp
or
push
dec
in
into
inc
scas
dec
out
dec
xor
clc
and
fidivrs
push
cmc
jmp
xor
mov
xchg
pusha
and
push
in
jmp
and
jmp
test
cmp
or
shrl
in
lahf
mov
mov
call
dec
cmp
daa
sbb
pop
pop
sub
movsl
dec
inc
pop
and
aad
pusha
xor
lahf
push
fldcw
and
enter
sub
pop
mov
loopne
icebp
stc
sar
pop
mov
aam
adc
sbb
adc
jnp
and
push
mov
je
mov
clc
jns
xchg
outsb
jl
dec
pop
adc
jmp
xchg
lret
loop
shl
les
xchg
movsl
mov
bound
mov
jl
lea
jg
push
out
sbb
push
or
sbb
jecxz
dec
xchg
inc
pop
sbb
addr16
dec
test
xchg
or
cmp
jg
out
sub
dec
adc
push
mov
cmp
fs
arpl
xchg
pusha
es
push
xchg
jp
push
movsl
mov
jle
inc
inc
mov
and
clc
repz
xor
ljmp
cmp
scas
mov
scas
jmp
adc
sub
mov
call
push
bound
jle
or
test
dec
dec
jecxz
lcall
das
call
sub
stc
jmp
fdivr
ljmp
jnp
fcompl
les
adc
insl
pop
dec
mov
mov
pushl
dec
push
cld
xor
leave
popa
add
or
pushf
daa
sbb
int3
mov
ljmp
and
sub
cwtl
sbb
ljmp
aad
ja
das
sub
popa
lock
decl
aam
pop
pushf
pop
xor
mov
mov
add
arpl
fbld
xchg
dec
imul
xchg
mov
dec
out
dec
mov
fbld
jmp
or
rcll
xchg
add
xlat
cmp
jmp
cmp
sub
mov
mov
xor
sbb
sti
and
mov
mov
lcall
decl
sub
pop
sbb
xchg
addr16
jl
adc
mov
inc
add
call
aad
xchg
popf
sub
mov
decl
sti
add
add
fwait
insb
cwtl
pop
shlb
imul
lcall
mov
mov
daa
pop
jns
outsb
fdivl
inc
xor
std
xor
pop
sub
daa
decl
inc
loope
shlb
out
push
into
ljmp
push
bound
sbb
enter
roll
mov
cmp
out
cmp
pop
decl
in
adcb
adc
imul
jmp
pusha
imul
out
sub
fidivrl
jl
imull
dec
insb
jno
loop
mov
xor
adc
stos
les
fidivrl
xchg
or
out
lds
inc
pushl
movsb
iret
gs
or
rcr
daa
fcom
int
rep
pop
test
xor
mov
xchg
sbb
adc
dec
in
push
stos
ds
mov
mov
jmp
xchg
mov
sub
imul
aad
cmp
movsb
flds
pop
mov
pop
inc
sbb
cmc
push
ljmp
cld
xchg
aam
ljmp
ljmp
lret
es
movd
outsb
loopne
aad
add
icebp
push
fisubrl
inc
and
push
mov
clc
xchg
les
xchg
movsl
cmp
xchg
jmp
mov
data16
popa
dec
add
stos
les
push
sbb
or
loope
rorb
lcall
test
inc
sbb
mov
push
cld
jbe
ret
insl
repz
dec
dec
cmc
cmpsl
jge
jnp
cld
lcall
into
sbb
mov
imul
out
lret
push
adc
fisubrl
fdiv
jg
and
xor
sub
dec
loope
cmp
addr16
fdivl
xchg
pushf
stc
psubusb
loope
mov
out
or
lcall
decl
push
sar
sub
mov
divb
sti
stos
scas
mov
mov
inc
xor
sbb
pop
ror
dec
inc
enter
mov
fxch
adc
xchg
stos
int
mov
or
mov
leave
cmp
inc
scas
mov
les
pop
mov
adc
and
leave
test
push
inc
xor
inc
jno
add
or
xchg
insl
cmp
push
jae
push
stos
pop
pop
xorb
jmp
scas
add
pop
cmc
test
or
mov
xor
je
dec
out
std
mov
lcall
cmpsb
pop
push
insl
leave
mov
pop
or
mov
movnti
pop
add
fdivs
push
pushf
mov
aad
or
stos
xlat
mov
cld
call
out
xlat
aaa
outsb
jmp
mov
les
push
add
je
mov
dec
sbb
out
jnp
mov
mov
sbb
test
rorb
nop
add
push
or
add
jne
adc
outsb
cmpsb
mov
mov
jle
stos
dec
xor
cltd
jle
loop
fildll
in
and
jb
repnz
fiadds
ljmp
popf
mov
mov
stos
push
mov
adc
sub
rorl
ljmp
cmc
in
in
lcall
rclb
inc
scas
mov
fld
sbb
js
imul
negb
outsl
ret
shrl
ret
jmp
lods
inc
mov
cmp
adc
lock
jl
sti
and
decl
pop
mov
push
sti
in
or
pop
js
lcall
decl
lret
mov
into
cmc
pushf
in
stc
inc
sbb
and
pop
shr
sub
adc
pop
hlt
xchg
jns
and
aad
sub
mov
or
popf
sbb
cmp
push
lret
jnp
and
cmp
push
pop
pop
test
outsb
push
clc
lods
add
out
jns
jno
sbb
shll
cld
add
cmp
daa
xchg
les
call
lcall
rorb
xlat
adcl
nop
mov
pushl
clc
cltd
dec
testb
mov
lret
jno
fwait
pop
mov
sbb
jno
stos
cmc
pop
jmp
call
aas
gs
arpl
adc
sbb
push
cltd
inc
lods
sti
stc
dec
gs
or
je
stc
jmp
mov
popf
mov
hlt
test
gs
adcl
decl
repnz
iret
scas
push
sbb
movsb
jbe
dec
in
cmpsl
repz
jl
jmp
inc
pop
leave
je
test
hlt
sbb
and
xchg
add
mov
imul
xor
xchg
movsl
mov
sub
sub
outsl
das
notb
insb
stos
repnz
push
imul
movsb
mov
rcll
lds
push
jl
leave
adc
adc
xchg
rol
std
insl
sbb
ljmp
push
mov
movsl
int3
movsl
call
loop
xor
sub
push
push
in
cltd
pusha
jge
adc
push
push
mull
lods
sub
push
dec
push
xchg
mov
daa
dec
jmp
loopne
out
pop
push
jle
aam
insb
xchg
std
mov
jl
add
dec
addr16
inc
mov
mov
in
subb
pop
push
jge
xlat
adc
imul
and
mov
or
sub
inc
repz
inc
mov
mov
push
scas
ds
fs
jg
imul
cmp
ret
and
repnz
push
mov
incl
mov
jp
mov
aam
movsb
or
push
fs
or
repz
out
adc
ds
pop
push
push
inc
aam
push
adc
mov
incl
xor
mov
push
hlt
mov
ds
daa
mov
cmc
cli
out
jmp
xor
jg
cmc
push
mov
or
test
dec
dec
arpl
push
jg
inc
movsl
jnp
mov
sbb
push
sahf
jmp
lcall
sbb
jns
dec
aam
repz
dec
mov
je
xchg
aam
imul
data16
sti
pop
sub
int
into
hlt
call
aas
push
xchg
inc
arpl
nop
push
das
mov
jb
xchg
pop
jbe
mov
mov
mov
cmp
adc
dec
mov
inc
pop
adc
mov
and
cmp
jmp
mov
popa
xor
jge
loope
push
sbb
lcall
sbb
imul
insl
js
jbe
push
push
lods
in
call
xor
test
loope
or
cmp
adc
sub
jmp
pop
ljmp
push
or
mov
aad
pop
stc
js
add
push
in
lcall
lods
insb
in
pop
aad
mov
jp
xchg
push
push
sub
inc
jp
lods
test
sahf
mov
adc
and
mov
add
sti
dec
jae
les
hlt
gs
xor
ret
xchg
sarl
sbb
pushl
or
call
pop
mov
sbb
call
xchg
loope
jl
pop
sbb
sbb
adc
out
pop
loopne
stos
push
mov
mov
loopne
out
adc
mov
test
aam
mov
pusha
pop
jl
and
xor
inc
cmp
stc
stos
ja
mov
mov
je
shlb
xor
inc
or
pop
idivl
inc
shlb
scas
push
push
incl
les
mov
and
xor
idivl
inc
or
xlat
test
push
cwtl
inc
push
inc
jae
lds
dec
jge
mov
cmpsl
icebp
jmp
ret
fisubrs
popf
scas
dec
fimuls
or
cmc
cmc
inc
xor
sarb
sub
insl
jle
mov
sbb
clc
incl
repnz
jg
mov
je
mov
clc
scas
xor
mov
adc
nop
and
pop
mov
xor
incl
call
jae
or
jnp
push
subb
pop
movsl
xchg
cmc
sar
mov
jmp
stos
insl
mov
aam
lea
push
mov
push
or
int3
outsl
nop
lock
mov
outsb
jbe
jns
sbb
push
jnp
mov
call
out
fisubrl
adc
aam
in
and
push
pop
ljmp
jns
pop
bound
xchg
lcall
outsb
cltd
out
add
cmp
rcrb
fdivrl
lods
shlb
subl
repnz
cld
cli
xor
rcrl
inc
lods
add
icebp
inc
xor
arpl
cmp
mov
rsm
call
cli
aaa
divb
jg
fcomip
mov
clc
jae
daa
cmc
scas
dec
xchg
push
inc
dec
xchg
mov
nop
mov
and
cld
insb
xor
cmpsl
popa
repnz
add
cli
adc
mov
je
sub
cmpsl
and
sbb
dec
imul
int
movsb
adc
xchg
mov
imul
fiadds
popa
sbb
inc
jle
incl
xchg
addr16
fdiv
push
sub
push
inc
mov
or
and
sar
add
sar
lahf
js
ds
orb
pop
out
inc
aad
adc
or
jmp
cmpsb
test
jg
lret
inc
xchg
jno
push
mov
mov
fcoml
xor
stos
jp
loopne
sub
stos
popf
loopne
jns
nop
int3
fidivl
cli
cmpsb
add
pop
enter
dec
sarl
ja
jns
repnz
pushf
or
mov
arpl
mov
xlat
rorb
out
dec
xchg
mov
imul
cs
je
popa
clc
push
and
inc
lcall
jo
mov
ficoml
mov
fiaddl
jae
add
add
les
pop
cmp
call
sub
outsl
out
lock
shlb
jecxz
cmp
dec
xor
inc
inc
inc
rcl
decl
dec
jmp
outsl
jne
add
loopne
mov
icebp
enter
ja
push
outsl
cli
jg
dec
mov
divb
test
push
sub
loop
call
sbb
lret
xor
movsb
out
icebp
pop
sbb
xor
mov
or
scas
scas
xor
add
mov
stos
sahf
int
add
ret
mov
decl
inc
inc
fnstenv
cmp
dec
inc
subb
jg
sahf
pushf
fwait
pop
fnstcw
repz
fwait
mov
lcall
and
xor
test
fsubr
add
or
inc
sub
cli
ret
add
lcall
ret
jp
ret
mov
pusha
test
leave
test
lcall
inc
and
pop
loopne
inc
lahf
dec
hlt
dec
xor
addr16
add
in
dec
add
dec
aas
adc
xlat
push
out
cmp
jg
pushl
or
cwtl
jl
jl
lods
out
jecxz
adc
ja,pt
iret
arpl
pushl
rcll
adc
fldpi
mov
outsb
fdivrs
stos
add
push
cmpsb
outsl
push
lock
fdivl
int3
mov
jl
inc
cmp
pushl
sbb
pop
fcoms
mov
in
mov
incl
sub
lret
adc
mov
inc
movsb
lcall
cmp
stc
xlat
push
jge
dec
adc
stos
mov
test
mov
sub
sub
or
jns
add
lcall
popf
imul
lahf
xor
int3
es
push
lret
pop
dec
cld
call
cli
and
and
into
dec
mov
in
mov
inc
adc
test
rclb
enter
fwait
leave
icebp
fidivrl
push
and
sbb
call
cmc
stc
dec
and
push
xorb
pop
je
imulb
adc
in
add
fcmovbe
pushl
cld
xor
or
jb
mov
arpl
and
arpl
mov
mov
decl
adc
aad
xchg
pop
je
imul
pop
mov
decl
xchg
dec
sub
xor
loope
test
out
mov
push
ret
jae
dec
jnp
in
pusha
inc
xchg
mov
mov
mov
iret
sub
or
repz
call
lods
dec
lcall
pop
mov
mov
push
jg
pop
mov
les
popf
push
adc
pop
dec
lods
imul
pop
sarb
loope
fs
inc
sbb
stos
sarl
mov
fbld
cld
aaa
std
fistpll
cltd
or
ret
ja
or
imul
sbb
push
push
push
stos
movsb
xlat
fadd
loopne
adc
dec
adcl
test
or
popf
ljmp
fldcw
mov
movsb
loope
aas
mov
lcall
fwait
ljmp
les
inc
xorb
in
fwait
and
push
mov
mov
lcall
fwait
xor
incb
lock
inc
shll
mov
sub
xor
push
fisubs
mov
mov
adc
xor
add
sbb
xor
mov
mov
mov
jp
inc
jle
mov
jae
jno
enter
or
pop
push
fldt
mov
or
fsts
ljmp
push
clc
mov
jno
or
sbb
gs
repnz
mov
in
dec
push
sbb
out
cli
loope
call
and
fmulp
mulb
push
outsl
cli
mov
mov
ret
xor
fstpl
sbb
xor
or
pop
iret
pop
rcrb
mov
out
add
outsb
mov
imul
or
into
and
call
cli
aaa
jmp
xchg
and
enter
push
add
aas
mov
cmp
pop
decl
sarb
adc
jb
push
ret
add
not
xchg
add
enter
ljmp
sub
pushf
ja
fs
std
pop
push
cmpsl
int3
mov
loopne
addr16
shlb
sub
inc
gs
ret
sbb
pop
lret
out
push
inc
cli
push
incl
or
push
andl
ret
mov
incl
add
inc
fisubrs
cmp
fbstp
dec
jl
ja
fsubl
in
loopne
or
mov
cmp
in
xor
pop
sbb
mov
loop
mov
pushl
cmpsw
xchg
sbb
inc
mov
pop
mov
mov
xor
fidivrl
std
jle
mov
sarl
mov
popf
cmc
cltd
incb
push
ja
mov
pop
adc
mov
pop
xchg
xchg
mov
jmp
hlt
jmp
lea
ja
cmc
push
jne
cmp
adc
mov
adc
lcall
sahf
inc
sub
or
xchg
cli
push
jg
xchg
insl
or
dec
out
and
dec
mov
aaa
imul
incl
lahf
jbe
jb
xchg
fs
cltd
lcall
push
in
mov
lods
sub
push
lcall
fyl2xp1
push
pop
xor
xor
iret
pop
scas
mov
scas
xchg
mov
ds
clc
adc
mov
in
stos
push
xor
fdiv
adc
insb
ds
in
cwtl
jbe
mov
loop
lock
cmp
add
lret
lods
and
int3
inc
test
movsl
mov
decl
inc
scas
xchg
popf
mov
sbb
xchg
mov
ljmp
es
push
ja
push
cmpsl
gs
mov
hlt
adc
mov
outsb
cld
call
inc
cmpsl
or
add
mov
movsb
data16
lea
ja
mov
ljmp
sahf
mov
mov
scas
scas
dec
stos
mov
pop
out
and
push
outsb
cmp
push
push
out
fsubrp
outsb
mov
adc
outsl
push
inc
ds
push
sbb
inc
loopne
jecxz
lock
jno
mov
lds
not
mov
mov
enter
mov
shrb
push
pop
dec
xchg
fwait
sbb
and
jge
or
cmp
push
repz
daa
or
push
fwait
mov
pop
jl
adc
ss
or
adc
xchg
push
pop
call
or
fldl
loop
mov
dec
jb
jl
pop
stc
cmc
orl
xor
push
push
addr16
xchg
xorl
sahf
data16
push
xchg
lret
xor
push
aad
and
lods
fiadds
push
mov
pushl
and
lods
xchg
mov
aad
shll
lret
insl
mov
into
mov
mov
outsl
clc
decl
int
cmp
mov
sbb
dec
test
mov
dec
sub
or
jmp
fwait
cli
jge
ret
adc
lock
jae
pop
cmp
pushl
insl
pop
xchg
lahf
test
jle
xchg
sub
dec
ss
push
cmpsl
in
lcall
pop
cli
push
mov
mov
adc
in
sbb
nop
cltd
xchg
movsl
inc
out
jno
test
leave
scas
adc
into
add
shll
adc
stos
fdivs
decl
add
lea
and
xchg
xchg
ljmp
aaa
mov
lods
dec
push
xchg
movsl
mov
dec
mov
lods
fmul
mov
ficoml
sub
fcmovu
pop
aad
test
inc
push
movsb
pop
mov
jecxz
jmp
sub
mov
mov
xchg
pop
cmpsb
fcos
mov
pop
aas
out
mov
fldcw
fisttps
mov
in
mov
sbb
flds
adcb
daa
daa
gs
dec
icebp
xor
add
fisttpll
or
mov
dec
lret
sahf
movsl
push
sbb
jno
mov
jae
sbb
mov
cmp
push
mov
xlat
scas
mov
push
adc
loopne
add
scas
cmp
cld
jg
jp
cmp
push
mov
mov
fsts
cmp
and
mov
into
pop
jno
add
loop
loopne
mov
push
sbb
pop
iret
sti
xor
insb
aam
out
mov
push
jnp
stc
je
jns
je
fwait
and
fidivs
sahf
call
int3
adc
adc
sahf
outsb
jge
incl
ret
out
add
inc
movsl
add
cmp
mov
ljmp
jg
call
popf
and
out
test
nop
push
scas
jb
adc
push
mov
jmp
jg
fs
out
push
in
jo
mov
inc
adc
sub
movsb
aas
in
lcall
xlat
fwait
mov
push
es
dec
mull
cmpsl
inc
and
push
fistpl
cwtl
ss
incl
mov
fisttpll
adcb
outsb
mov
mov
cltd
sub
inc
clc
imul
inc
loope
mov
xor
push
decl
rorl
add
mov
adc
xchg
dec
add
mov
into
fs
pop
aas
mov
hlt
mov
ds
inc
call
cld
sub
cld
sbb
negb
jae
iret
jo
fstpt
sbb
shlb
push
sub
jmp
jns
dec
sbb
sbb
pushf
mov
clc
pushl
shlb
xor
mov
mov
pop
or
or
cs
andb
or
mov
cli
sub
cmpsb
movsl
lock
icebp
and
xorb
fidivs
cld
jg
dec
dec
jle
sbb
fists
adcb
mov
scas
imul
mov
adc
cmp
xor
incl
pop
inc
and
pop
xor
je
cld
dec
mov
or
lds
ljmp
lcall
and
test
pop
xchg
mov
mov
call
sbb
imul
push
lcall
and
mov
in
jmp
and
rolb
bound
aam
das
cmp
jmp
xchg
pop
pop
aaa
inc
sar
ljmp
sbb
inc
in
xorb
and
push
lods
pop
call
add
add
add
push
bound
int3
push
icebp
jmp
enter
mov
ljmp
sub
leave
lahf
sbb
inc
xchg
or
mov
xchg
call
stos
ret
std
decl
fnclex
fmull
test
mov
repz
xchg
cmp
inc
repnz
pop
in
jo
xor
mov
push
loop
or
sti
pusha
and
sbb
imul
add
jns
leave
and
cmp
ja
sar
das
loopne
sub
scas
jo,pt
push
out
je
cmpsb
aas
push
popa
fsub
shrb
clc
or
mov
pop
fucomp
jp
loope
imul
mov
cmp
flds
cwtl
leave
out
fldl
adc
mov
push
movsb
lcall
hlt
int3
out
jo
cltd
and
fs
dec
mov
or
imul
sub
shlb
popa
insb
ret
cli
scas
das
dec
push
xor
addb
cs
inc
les
hlt
sub
lock
and
in
mov
fadds
incl
xor
add
ljmp
lcall
das
cli
incl
dec
and
jb,pn
nop
jb
xchg
or
test
out
and
ljmp
dec
mov
and
push
mov
xchg
jb
addr16
dec
mov
movsb
repz
decl
jmp
fsub
loope
pop
stos
pop
call
and
scas
sbb
roll
aas
incl
mov
xchg
mov
lahf
out
and
sti
jae
arpl
jne
or
adc
ja
cli
fsts
cld
and
std
loop
insl
xchg
and
cmp
repnz
iret
jne
push
mov
inc
xor
push
insl
mov
pop
jmp
push
test
dec
in
ljmp
adc
or
mov
push
ja
inc
pop
adc
cmp
sbb
sub
sbb
in
xchg
adc
mov
call
dec
insl
incl
test
jae
mov
insl
sahf
xor
icebp
sbb
push
xchg
insl
fxch
decl
adc
inc
outsl
aas
cmp
jbe
adc
cmc
dec
insb
jo
repnz
xchg
fsubrl
incl
fistl
call
sub
out
mov
mov
jg
nop
aaa
mov
pop
and
cmpsb
cmp
scas
loop
cld
xchg
dec
mov
sbb
movsl
pop
sub
aaa
sbb
jo
call
cmp
pop
jo
icebp
mov
inc
jbe
xchg
inc
enter
pop
popa
or
je
jae
fimull
outsb
mov
and
ljmp
sub
push
aaa
lahf
fimuls
into
add
mov
repnz
jg
insl
push
test
incl
imul
sahf
inc
adc
rcrb
pop
push
sbb
cmp
sbb
push
int3
mov
or
incl
aas
aas
jae
sub
and
ret
mov
push
lods
push
inc
xor
hlt
pop
jl
sub
xor
pop
mul
xchg
clc
jg
jno
mov
or
ss
mov
insb
xlat
out
jae
xstore-rng
cmpsl
add
ljmp
es
sti
xchg
pop
aaa
nop
shlb
lahf
sub
add
add
shl
adc
push
in
dec
inc
pop
jbe
cmp
lods
add
inc
fsubl
call
adc
insl
jnp
imul
ljmp
mov
xrelease
push
push
sar
or
jae
mov
ds
call
xor
push
insl
ja
in
xor
cwtl
jl
mov
ljmp
decl
add
mov
sarb
jmp
xor
pop
lcall
dec
clc
mov
push
popf
cli
les
loopne
xchg
xchg
mov
add
or
out
cs
fmul
mulw
movsb
and
push
sbb
std
xchg
cs
std
sarl
xchg
adc
or
loop
ljmp
movsl
jecxz
adc
pop
and
shlb
and
pop
xchg
ljmp
adc
sub
adc
enter
xor
push
fildll
dec
out
mov
jmp
ror
mov
pop
je
push
nop
lret
sub
incl
rcrl
movsb
test
sbb
lods
bound
addr16
in
outsl
push
and
jg
xchg
into
add
clc
and
xchg
jae
paddb
sub
xlat
mov
lcall
or
or
sbb
cli
and
mov
sarb
push
mov
mov
ss
mov
test
lock
repz
pop
ja
mov
rcr
xchg
test
sti
sub
imul
adc
shrl
fcoms
add
aas
das
push
inc
mov
decl
gs
jge
add
push
mov
stos
mov
jae
scas
notb
fisttps
cld
lock
into
dec
icebp
mov
jp
fistpll
cmpb
sub
ljmp
xchg
cmpsb
or
or
inc
inc
xlat
jnp
inc
lcall
hlt
lcall
nop
dec
roll
dec
shll
dec
movsl
fiaddl
dec
xchg
lea
xchg
dec
push
shrb
in
repnz
mov
setp
sbb
lret
lock
sbb
xchg
ja
pop
push
jmp
sbb
push
repnz
call
mov
mov
enter
jl
pop
mov
cli
imul
pop
shll
ret
in
xchg
repnz
push
mov
add
add
mov
pushl
imul
add
cli
xor
dec
or
pop
adc
or
clc
and
pop
sub
stc
lahf
lret
dec
add
cmc
lcall
test
cmp
in
push
loop
pop
cmp
bound
stos
add
call
out
inc
xchg
dec
pop
outsl
mov
loop
and
or
xchg
mov
sbb
jmp
icebp
dec
sub
jnp
lods
lret
int
push
test
js
xchg
inc
or
cmc
mov
xchg
jmp
push
clc
ss
cmpsb
mov
pop
mov
in
mov
mov
cmpsb
stos
or
push
fidivrs
into
fisubs
jg
xor
mov
push
pop
push
xor
pop
insb
xchg
mov
cli
call
or
jno
lret
sub
mov
leave
adc
mov
cmc
cld
mov
ret
mov
lret
sub
pop
movsl
sbb
push
jge
call
xchg
hlt
aam
in
movsl
int
xor
aam
aas
frstor
leave
pop
mov
cltd
ljmp
mov
adc
orb
push
stc
sbb
mov
pop
pop
sbb
cli
mov
ljmp
ljmp
cmp
movsl
xchg
call
xchg
sbb
sahf
cld
xor
pop
incl
in
inc
jmp
dec
sbb
iret
mov
pop
jne,pt
cwtl
cmp
inc
sbbl
popf
push
ljmp
dec
jg
inc
sbb
ds
sbb
cwtl
fsub
pop
incl
fnstsw
gs
sub
jb
cwtl
sti
lods
xor
jl
repz
mov
jo
mov
test
add
push
sub
sbb
icebp
aaa
pop
rcrb
push
xchg
adc
mov
jmp
jp
data16
sbb
insb
iret
sahf
cmp
lcall
jns
call
push
flds
jo
roll
std
outsl
punpcklwd
stc
jecxz
aaa
cmp
sub
and
shll
pop
lcall
loop
mov
fnstenv
cmp
incl
out
in
out
sub
out
jmp
imul
outsb
aam
sbb
jo
mov
inc
clc
lcall
fdivr
mov
dec
or
inc
dec
push
xchg
sub
fistl
cmpsb
testb
es
arpl
add
call
es
shlb
call
push
dec
popa
movsb
sub
inc
sbb
pusha
les
out
cld
call
jmp
cld
out
mov
inc
xor
mov
aad
jg
cmp
jns
es
dec
or
mov
push
jno
mov
mov
ja
subl
mov
mov
mov
push
cmc
xchg
jmp
add
cmpsl
push
pop
fnstsw
push
xchg
clc
pop
mov
jle
mov
pop
sub
lock
insb
cld
lret
xor
or
dec
jmp
mov
insb
xchg
xchg
out
cmp
mov
sbb
in
dec
xor
ljmp
push
xor
out
mov
add
ljmp
test
popf
stos
xor
mov
lock
jnp
mov
mov
mov
mov
lcall
mov
incl
ds
sub
pop
jns
je
and
ljmp
ljmp
dec
pushf
sbb
call
xchg
and
out
pop
mov
ljmp
sti
leave
pop
out
jmp
mov
and
pop
aam
cwtl
jnp
adc
sub
cltd
ja
dec
cmp
mov
daa
wbinvd
mov
cmpsl
in
sub
sti
stc
in
aas
arpl
xor
out
lcall
or
mov
rclb
xchg
cwtl
int
fildl
sub
mov
jmp
loop
push
jno
in
xchg
ljmp
arpl
pop
sub
adc
adc
push
out
ds
stos
daa
cmpsb
push
push
pushl
ja
data16
adc
push
lods
inc
ficomps
and
loop
sbb
jnp
int3
xorb
hlt
sahf
cmp
imul
jo
sbb
pop
mov
loop
es
fs
mov
es
pop
or
lcall
stos
push
jb
enter
add
sbb
jo
iret
ds
cmp
outsl
clc
dec
push
ss
rcll
cwtl
cli
ret
fisubrs
scas
mov
ljmp
call
and
sahf
mov
aam
pop
xchg
mov
test
add
ljmp
ret
mov
mov
loope
mov
js
add
call
icebp
iret
popa
aaa
sahf
jo
idivl
jbe
jg
sub
cmp
dec
mov
int
mov
pusha
jmp
imul
cld
call
sbb
and
sbb
inc
sub
sahf
xor
test
lock
clc
ljmp
cmp
cmc
mov
push
mov
dec
insb
push
leave
pushf
cs
mov
add
push
push
xor
add
or
cmp
push
sub
and
inc
in
push
pop
lock
ljmp
lds
out
push
pop
mov
sub
addr16
xor
jg
call
mov
dec
ret
mov
jecxz
mov
lcall
insb
push
adc
mov
jp
out
push
cmp
mov
mov
cs
pop
and
fdivrl
and
filds
or
inc
push
shrl
movsb
xlat
in
pop
sbb
incl
cmpsb
mov
lcall
shll
outsb
jle
xor
push
push
cmpsl
arpl
stos
mov
push
ljmp
mov
mov
lods
les
in
dec
scas
add
ss
sti
pop
inc
cmp
jmp
call
in
cld
push
mov
sbb
incb
jmp
cmp
or
lcall
cmpsb
sbb
mov
lea
pop
pop
dec
jne
sti
test
fcoms
leave
or
shlb
jmp
xor
xchg
cli
mov
push
or
jnp,pn
inc
adc
decl
lock
xor
jb
cmp
mov
inc
addl
sbb
xchg
jno
push
sbb
pop
and
fsts
push
fcmovb
cmp
jle
sti
imul
ss
mov
mov
and
sbb
mov
cmp
aaa
fimuls
push
push
dec
xchg
dec
jg
stc
mov
and
decb
or
rcll
pusha
idivb
loop
cld
pushl
out
repnz
movsl
push
xor
push
enter
jg
cld
int
imul
sub
pop
mov
out
lods
xor
gs
mov
fucomip
jmp
mov
test
pushl
cld
mov
adc
dec
and
mul
test
andb
sahf
test
jb
add
mov
jg
mov
imul
xchg
mov
mov
xor
jne
test
jnp
shlb
cmc
mov
dec
cmc
mov
incl
adc
mov
xor
and
aas
in
jl
lret
sub
mov
aaa
std
fistl
iret
add
and
mov
jl
inc
mov
sbb
bound
and
mov
inc
jns
pushf
mov
or
dec
loope
call
mov
nop
push
call
into
sbb
and
shl
xor
cli
rcl
cwtl
int3
cs
mov
mov
jmp
aas
outsb
sti
daa
cmpsl
jne
ret
dec
mov
mov
sti
mov
rclb
rol
int3
jns
outsl
pop
cmp
and
std
ljmp
outsb
fwait
cltd
sub
cmp
fildll
loop
sbb
iret
jl
fistpll
insl
stos
pushf
call
cli
or
and
test
or
test
incl
ret
fldpi
loope
repz
push
adc
jae
sub
fstpl
lcall
push
mov
jns
sbb
add
cmpsb
popa
mov
jl
mov
dec
lcall
pop
xor
pop
push
test
cltd
sub
and
lods
lods
dec
lcall
or
jns
stc
fstl
loope
mov
mov
outsl
push
xor
nop
pop
cmp
jle
inc
add
or
jns
pop
fdivl
cmpsb
mov
aas
and
out
decl
push
mov
pop
rcrl
inc
and
aas
daa
lods
jge
xchg
add
shrb
fldenv
xlat
pop
bnd
pop
icebp
mov
lock
lods
jnp
ret
dec
cmp
data16
cs
ljmp
or
insb
pop
sub
cmp
sub
sbb
pusha
xchg
incl
mov
shlb
xchg
fdivl
lock
jg
adc
stos
xor
pop
or
clc
clc
insl
pusha
pop
daa
and
aad
lock
cmp
repz
adc
xchg
shrb
add
or
pop
arpl
testl
xchg
ljmp
std
sahf
cmp
dec
in
push
imulb
sarl
mov
or
iret
shll
sub
cmpsl
xchg
inc
cli
sahf
inc
pop
xchg
aam
pop
lods
jmp
stos
jg
xor
aam
and
sbb
rcll
add
call
cld
xor
push
pop
jle
mov
cmc
jo
incl
fstpl
mov
or
jecxz
add
lock
fcmovb
dec
scas
inc
faddl
cmpb
adc
mov
incl
push
fwait
mov
mov
test
inc
movsb
cs
mov
shl
mov
lret
pop
stos
daa
sub
loope
inc
stc
jno
sbb
inc
js
jae
pop
dec
jmp
ffree
outsb
jnp
insb
xlat
shll
out
outsl
sub
ds
fcomip
sti
lret
and
sti
repnz
jp
lret
cli
jae
pushf
insl
jo
xchg
cmp
mov
inc
mov
faddp
adc
push
stos
sub
mov
and
lods
jo
aaa
cmpsb
cld
or
or
dec
inc
ret
shrb
xor
or
cmc
adc
das
pop
push
jmp
mov
iret
cmc
shlb
pop
push
cmpl
es
imul
notl
lcall
aaa
jp
inc
sbb
cmp
xlat
pushf
bound
dec
adc
gs
jg
rclb
test
mov
cltd
bound
add
jo
imul
addr16
pushf
ret
cmp
jle
lcall
pop
lret
dec
int
pcmpgtw
sub
out
sub
push
adc
adc
jae,pt
in
mov
ljmp
test
cmpsb
pop
adcb
push
sbbl
inc
add
popf
sarl
in
xor
addb
pop
repnz
loop
jg
push
stc
dec
ss
xchg
cmpb
fistpl
lret
pushl
les
or
mov
pushl
cs
lahf
jns
scas
mov
daa
and
cmp
scas
stos
test
add
xchg
test
sub
or
std
xor
dec
sbb
mov
in
repz
test
loop
mov
and
push
enter
pop
lds
call
push
aaa
fisttpl
add
dec
std
mov
in
popf
or
pop
dec
mov
mov
jmp
jbe
nop
mov
or
ds
ret
in
jo
leave
cmp
enter
jecxz
push
sbb
jmp
insl
cli
lret
testb
mov
push
adc
idivl
add
std
call
pop
fs
aam
dec
inc
adcl
scas
jbe
cltd
xor
pop
mov
cmpsl
stc
dec
xchg
out
jb
add
outsl
jbe
inc
push
sub
call
ljmp
out
pusha
rcrl
add
dec
lahf
icebp
ss
lret
aaa
cld
fistpl
outsl
dec
imul
or
jno
mov
sub
call
aad
test
xlat
lret
mov
imul
lcall
or
fisttpl
or
xor
xor
pop
push
test
mov
pop
push
test
dec
sub
cltd
sbb
icebp
pusha
mov
jns
das
fucomip
mov
ja
xchg
lea
pop
rol
in
cmpsb
mov
cld
sbb
push
fidivs
out
daa
xchg
hlt
dec
repnz
aad
push
push
enter
ds
mov
inc
push
ljmp
cli
lcall
cld
in
stc
mov
int3
and
ljmp
mov
sub
xor
inc
xor
jmp
cmp
pop
and
lds
cmpsb
push
pop
xor
fcomip
inc
mov
addb
sub
in
dec
in
dec
icebp
ret
and
in
mov
cli
andb
sub
call
jno
fxam
ret
xchg
mov
gs
mov
stos
aas
and
cmp
test
sub
aas
sbb
out
iret
or
inc
imul
mov
stos
add
or
and
ja
sub
les
jp
xchg
cmp
jge
push
daa
lahf
stos
jae
mov
xchg
xor
dec
jecxz
mov
xchg
ret
repz
jmp
sub
jp,pt
add
test
sbb
mov
sbbl
ljmp
test
push
xchg
bound
rorb
dec
sub
xor
push
sbb
or
push
lods
jge
cwtl
andb
and
test
fisubs
lret
hlt
fisttpll
sbb
dec
loopne
xchg
mov
in
push
add
inc
xchg
call
pop
push
out
sbb
hlt
push
lcall
xchg
jmp
fistpll
xor
jecxz
outsl
sbb
fwait
jle
add
mov
adc
orb
call
int3
xchg
mov
insb
or
xchg
je
imul
xorl
jmp
mov
push
sub
xlat
jne
shlb
addl
or
callw
adc
cmp
mov
jmp
cltd
or
xchg
mov
pop
ljmp
call
aam
sbb
jge
rorl
and
ss
clc
ljmp
imulb
jecxz
xor
fdivs
xchg
fcomip
data16
dec
mov
push
xchg
xlat
mov
xor
xor
jmp
mov
out
aaa
xchg
out
into
fistpl
outsb
insb
flds
inc
lock
cmp
cld
pushw
xor
aas
sbb
loope
pop
mov
mov
fst
ret
call
mov
popf
aam
mov
gs
call
pop
pop
inc
mov
push
push
or
mov
mov
jo
jb
or
out
fisubs
inc
inc
xor
inc
push
add
aam
xchg
pop
xor
cmpsb
inc
adc
ret
or
push
mov
rcrl
in
hlt
xchg
into
pop
in
fcomip
jmp
imul
cmpsl
sub
repz
cmp
inc
jle
xor
pop
insb
inc
lret
gs
cs
pop
mov
std
pop
movsl
add
or
xor
scas
rclb
jns
fwait
insl
or
add
adc
lods
cmp
incl
push
sub
push
rcrb
push
mov
sbb
ljmp
out
out
test
jno
les
mov
out
sahf
aas
in
sbb
mov
cs
cmpsl
incl
add
jmp
pop
ds
push
pop
xchg
divl
jns
sub
jne
test
mov
jmp
and
outsl
rcr
xchg
test
jnp
icebp
inc
pop
inc
std
xchg
add
adc
icebp
fbstp
jb
xor
inc
out
push
jge
sbb
test
pusha
incb
pop
mov
or
mov
jecxz
sub
lcall
imulb
push
mov
lahf
cltd
xchg
cmp
enter
or
popf
xchg
mov
jmp
inc
loop
cmpsb
dec
stos
popf
pop
cli
pop
jae
filds
cs
pushl
adc
nop
xchg
cmp
leave
int3
in
xchg
hlt
sub
or
icebp
pop
mov
xchg
rcr
jg
lock
jae
in
fistps
das
mov
sar
into
leave
in
into
ss
aas
or
mov
xchg
xchg
pop
cs
pop
out
or
pop
in
repnz
push
sbb
nop
je
xchg
pushl
fmuls
push
dec
jmp
mov
cmp
xchg
nop
and
lret
push
cmpsb
icebp
jg
dec
shrl
cmp
mov
cwtl
add
fdiv
jl
aad
mov
call
xchg
stos
adc
push
shrl
insl
test
repnz
imul
pop
mov
lret
sub
inc
outsb
pop
dec
push
lcall
add
fwait
js
pop
and
xchg
fildll
inc
call
fldl
insl
enter
gs
jne
cmp
movl
rcll
and
cmpb
mov
lea
out
cli
ljmp
fcmovnbe
es
sub
loopne
call
pop
cmp
push
repz
call
fldcw
cmp
mov
fisttps
icebp
mov
jge
ss
ljmp
mov
xchg
gs
xchg
mov
loopne
xlat
mov
fbstp
imul
call
ljmp
push
add
je
aas
cmpsb
lahf
push
gs
mov
jno
push
in
mov
ficoml
das
pop
ret
mov
and
fs
popl
incl
aam
lods
push
inc
fndisi(8087
push
jge
xor
icebp
xchg
out
mov
xchg
test
bound
or
repz
dec
add
sub
stos
inc
sub
xchg
add
fldt
mov
call
mov
push
jg
add
int3
push
jg
xchg
add
incl
stos
and
push
out
xchg
icebp
mov
fimuls
pop
xor
xor
sbb
mov
js
jg
popf
or
pop
pop
or
and
add
std
shlb
lret
fwait
or
jne
mov
icebp
dec
mov
inc
std
mov
mov
push
rcl
in
and
fwait
ds
call
les
mov
loopne
mov
jge
std
cmp
cmpsl
lods
rcl
adc
push
mov
add
cmp
jg
mov
testl
pop
pop
adc
cltd
pop
add
xor
or
cld
fistpll
das
adc
call
cmp
and
sub
lcall
jmp
lods
ja
push
daa
fnstsw
mov
xchg
lods
inc
shlb
decl
out
jg
push
inc
cmc
lods
lahf
lcall
xchg
adc
icebp
mov
fwait
adcl
loopne
rolb
pop
test
xor
sbb
mov
add
loope
add
es
jae
xchg
int3
push
mov
sub
cmpsl
loop
jmp
mov
addr16
std
mov
sub
adc
cmp
enter
xor
xor
imul
dec
stos
cmpsb
jg
ds
jb
or
push
inc
mov
stc
roll
insb
push
dec
incl
in
imul
mov
or
sub
stc
ret
sbb
das
in
or
adc
jmp
scas
in
fsub
cwtl
pop
daa
lea
push
cli
add
int3
mov
pop
call
and
inc
rcrl
hlt
dec
jge
dec
lret
andb
sbb
out
pushl
xor
idivb
inc
stos
lret
fistl
movsl
cmp
fiadds
adc
push
jns
jmp
xchg
xor
push
out
push
pop
iret
test
loopne
sbb
sbb
fisubrl
js
sub
insl
inc
push
lret
test
jmp
dec
jo
mov
mov
pop
dec
xchg
iret
popf
inc
cmp
cmpb
cld
sub
sub
faddl
or
aam
and
inc
mov
inc
cmp
jmp
das
pop
lahf
inc
mov
pop
xor
lahf
xor
lahf
aas
xchg
mov
sub
jmp
mov
mov
mov
pop
mov
mov
inc
sub
adc
cmpsb
mov
cmp
pushl
push
cmc
dec
insb
shrl
xor
test
pop
mov
pop
add
jmp
mov
cmp
repnz
data16
adc
ja
cmp
jle
push
lea
mov
push
imul
lock
loope
sbb
imulb
insl
adc
decl
js
pop
inc
sub
and
mov
jbe
or
sub
dec
mov
push
hlt
clc
rcrb
outsl
xchg
xorb
pushf
and
xchg
mov
popf
inc
cwtl
pop
fs
filds
mov
xchg
xchg
mov
cwtl
pop
push
jle
add
adc
in
add
mov
mov
fcmove
mov
mov
dec
mov
xchg
into
stos
rclb
mov
in
call
xor
ss
decl
mov
leave
or
repnz
stos
and
sbbl
aaa
adc
inc
push
lcall
xchg
and
jecxz
sbb
pop
incl
cmp
mov
icebp
and
add
pusha
xorl
idivl
call
jno
add
fwait
repnz
or
xor
jge
or
jg
inc
push
jnp
incl
pop
dec
mov
mov
xor
push
inc
add
inc
sbb
lods
fadds
cld
enter
xchg
sti
lds
xlat
loop
sbb
rorl
inc
lods
inc
push
and
mov
mov
ret
xor
mov
out
push
pop
pushf
pop
xchg
and
mov
test
sbb
fsts
add
jbe
xor
mov
into
sar
incl
cmpsb
cmp
ljmp
scas
test
add
ljmp
mov
fwait
jp
xorl
rcl
adc
dec
pop
fdiv
ret
mov
sbb
ficoms
or
add
inc
cmp
mov
ljmp
cmpsl
pop
sahf
pop
loope
mov
inc
mov
jg
fcoml
cltd
jp
ljmp
pop
mov
xchg
nop
test
xor
add
insb
cs
add
inc
insl
sbb
mov
aaa
std
in
add
or
fdivrl
mov
mov
bound
inc
dec
cmpsb
imul
dec
std
and
sahf
push
add
pop
push
fwait
adc
xchg
jno
jno
pop
rclb
mov
aad
lea
gs
mov
ret
ja
push
sub
rcll
mov
pushl
enter
dec
mov
dec
mov
dec
fdivrp
ljmp
xchg
stos
lahf
int3
sub
int
and
jae
pop
sbb
mov
int
fimull
movsl
adc
sub
sbb
mov
add
enter
pushl
cltd
adc
and
jmp
outsl
mov
aaa
aam
mov
das
incl
imul
arpl
sub
xchg
loopne
push
aam
adc
mov
jmp
int3
push
jle
sub
dec
movsb
push
subl
ret
pop
enter
insb
in
fiaddl
adc
incl
rcl
dec
and
jne
in
ds
insl
cmp
js
mov
push
add
test
xlat
incl
rcrl
pop
arpl
and
addl
clc
movsb
jg
fisubrl
or
ror
out
xor
lds
je
dec
mov
adc
push
jmp
clc
cmp
adc
xchg
jns
dec
mov
mov
jmp
repz
xchg
incl
cwtl
add
cmp
stos
adc
mov
xchg
cs
xor
jg
add
or
gs
and
aad
pop
gs
xchg
cwtl
and
mov
inc
les
jecxz
outsl
cli
ret
push
adc
incl
lahf
insb
imul
xchg
imul
jg
movsb
sbb
icebp
add
sti
adc
in
cld
cs
sti
mov
pop
incl
int
rcll
cmp
jno
sti
dec
mov
jno
lea
add
cmpsb
hlt
ljmp
xchg
mov
jmp
dec
cli
dec
push
mov
das
nop
push
out
repz
fs
imulb
cmpl
loop
inc
mov
sbb
mov
ret
mov
and
inc
stc
dec
mov
inc
arpl
xor
scas
adc
push
incl
and
push
ds
mov
xor
fmull
sbb
sub
xor
mov
or
lcall
lock
dec
push
push
jbe
lahf
cs
ja
dec
dec
sub
mov
jns
pop
pushl
push
cltd
cmp
sahf
mov
jnp
das
sub
mov
and
jae
cli
xlat
aam
nop
pushl
das
xor
mov
jbe
lcall
outsl
cmpsb
cmp
cmp
or
sbb
andb
out
pop
dec
sub
jnp
loope
sbbl
jp
fidivl
push
das
fucom
pop
dec
dec
mov
xlat
mov
xchg
fsubrl
add
dec
ds
call
or
adcb
outsb
mov
insl
je
add
rcl
loope
lcall
pusha
fistps
dec
mov
imul
adc
sbb
decl
jle
xchg
mov
in
out
mov
mov
sbb
jbe
jns
aad
lret
mov
out
popa
shll
or
sbb
xor
mov
sbb
and
mov
jns
xorl
adc
mov
repnz
push
inc
scas
scas
int3
in
clc
stos
mov
ljmp
jp
int3
jns
adc
push
fdivrl
inc
rcll
xor
pop
clc
addr16
mov
mov
out
into
mov
decl
sbb
sub
jge
out
pusha
in
or
dec
test
add
testl
ljmp
in
sar
addl
xor
por
out
and
aas
jge
push
je
pop
movsb
push
jecxz
ljmp
jns
jne
xor
jb
sbb
lods
xchg
adc
call
sbb
inc
sar
call
scas
dec
sbb
lea
dec
dec
dec
scas
push
pushl
sub
push
les
ds
dec
jne
inc
jg
cld
sbbl
aad
imul
lcall
idivl
push
int3
inc
adc
push
cmp
inc
hlt
add
sub
gs
jle
add
pushl
push
xchg
and
dec
sub
xor
call
inc
sti
pop
push
mov
out
inc
dec
popf
add
push
jmp
pushl
mov
sbb
fs
fs
popa
icebp
enter
shll
xchg
mov
call
andl
sti
testb
sub
xor
dec
in
jmp
push
push
sar
das
clc
ljmp
jmp
vmread
test
and
clc
filds
dec
inc
in
mov
cltd
iret
js
ja
mov
inc
in
loope
fs
inc
enter
aad
mov
int
mov
ret
decl
scas
sbb
iret
popf
pusha
repnz
mov
mov
daa
insl
fistps
loopne
test
adc
lods
clc
incl
mov
fstps
fwait
jne
mov
loope
lahf
push
mov
and
add
nop
push
adc
pushf
sbb
imulb
mov
jmp
icebp
inc
mov
jo
pusha
clc
cmpsl
adc
lret
sbb
dec
stc
lcall
lcall
pusha
dec
outsb
jo
mov
lcall
cmp
out
mov
jns
xchg
pusha
iret
jg
mov
jl
mov
das
cmp
rcrb
mov
ficompl
xor
lret
fmuls
add
std
xor
jae
mov
jb
daa
ret
push
xor
ret
je
mov
adc
push
jnp
ret
pop
mov
adc
mov
push
push
cmp
call
push
and
in
cmpsb
fcomps
push
inc
sbb
testl
push
aad
imul
ljmp
or
inc
cwtl
hlt
sbb
push
mov
or
ds
leave
fstpl
xchg
out
xchg
sub
les
sub
sbb
sub
xor
ljmp
arpl
adc
mov
jne
ljmp
out
outsl
fwait
fwait
sub
push
stc
sbb
imul
fdivs
jge
push
mov
or
rcrb
xchg
ds
or
ret
aaa
xor
das
jl
loope
lea
mov
outsl
ss
xchg
mov
int
hlt
dec
imul
xor
adc
cltd
mov
stos
call
arpl
push
movsb
icebp
popf
dec
icebp
inc
xchg
adc
push
add
pop
or
jge
pop
out
push
stos
fcos
ljmp
sub
push
mov
cmp
mov
bound
jae
out
push
sub
inc
enter
bound
xchg
fcomip
scas
add
and
or
je
cmp
fs
repz
jne
fbld
xchg
icebp
fbld
imul
in
stc
or
and
jne
enter
clc
ja
mov
incb
lret
lret
fldl
jmp
fcomps
inc
daa
inc
sbb
mov
int
jne
call
dec
dec
sub
lret
sbb
in
mov
jmp
mov
or
inc
clc
shrl
mov
jecxz
dec
cmpsb
sbb
inc
scas
dec
or
jmp
mov
xchg
push
fnstenv
icebp
out
cli
out
fcmovb
aaa
or
xchg
xor
not
std
mov
ljmp
sbb
je
mov
sbb
filds
testb
imul
in
shlb
call
lcall
lds
jae
and
repnz
jle
rorb
arpl
xor
lcall
outsl
cmp
sbb
sbb
ss
sub
iret
sub
jecxz
mov
inc
scas
aam
incl
dec
mov
mov
lret
mov
out
js
incl
loope
fildl
push
loopne
out
call
jg
ja
into
cmp
popf
jno
fsubs
cli
pusha
mov
adc
mov
call
jmp
and
mov
mov
lods
mov
and
sub
jb
bound
or
incl
and
and
clc
and
jo
hlt
pushl
js
inc
mov
fsubs
xchg
xorb
mov
inc
jbe
lret
cmp
or
mov
lret
xor
sti
gs
fnstenv
repz
repz
aas
sub
sub
lcall
lcall
icebp
pop
xchg
ljmp
test
decb
imul
pop
pop
iret
add
pop
adc
dec
add
popf
add
dec
mov
repnz
int
jno
pop
xchg
subb
add
xlat
xchg
dec
das
inc
sahf
mov
jg
push
cltd
nop
or
hlt
inc
push
pop
and
decl
adc
mov
ja
aad
mul
push
xchg
jnp
fs
cltd
adc
mov
loop
inc
scas
and
outsl
pusha
xchg
sub
icebp
stos
ss
popf
cmpsl
ret
call
addr16
xchg
mov
rcll
mov
lret
fwait
lcall
inc
mov
dec
rorb
push
push
xor
sub
andl
cmp
mov
sar
stos
mov
mov
push
push
inc
push
sahf
add
mov
mov
jg
test
mov
sub
add
subl
or
cmpsb
xchg
repnz
inc
sti
xchg
push
xchg
lcall
test
jo
cmc
push
jbe
add
push
jle
inc
push
push
int
icebp
shll
mov
mov
mov
fdivrp
aaa
inc
fdivl
bnd
push
pop
fcomip
pushl
mov
out
mov
xchg
mov
inc
loop
cmpsl
in
loop
pop
mov
pushl
mov
outsl
adc
xchg
sarb
fimuls
lock
fsubrs
jge
jg
push
mov
jmp
inc
leave
dec
and
xor
pushl
xlat
mov
cmp
mov
mov
enter
and
pop
add
daa
scas
fisttps
incl
sbb
jo
decl
icebp
jbe
mov
ret
mov
inc
lcall
stos
dec
lods
imul
lock
popa
mov
out
xchg
push
sbb
imul
pushl
or
popw
jg
mov
mov
push
lods
cmc
mov
cmp
cmpsb
dec
jmp
mov
out
xor
in
cmp
or
pushl
scas
pop
sbb
dec
adc
rcl
add
mov
mov
sar
jmp
cli
lock
cmpsl
mov
mov
cltd
rcrb
jb
js
call
or
lcall
ljmp
jmp
mov
mov
push
fldl
fdivr
ds
sbb
inc
push
xchg
je
mov
popa
outsb
mov
gs
pop
add
mov
clc
xor
call
cmp
jmp
rorb
mov
call
sub
incl
daa
std
stc
and
pop
xor
filds
inc
push
mov
call
std
mov
mov
pop
cld
push
mov
lret
pop
pop
adc
jb
mov
jmp
rolb
shrb
lea
cmpsl
xchg
repnz
mov
int
js
test
push
mov
mov
cld
dec
cmc
pop
cwtl
cmp
xchg
aaa
test
jp
jg
idivl
jns
push
cmp
bound
cwtl
mov
dec
sbbl
lret
aam
pop
xor
dec
adc
ficoms
mov
sbb
fs
adc
les
ret
inc
pushf
jnp
and
pushl
pop
push
loopne
pop
das
or
adcb
or
cmp
mov
mov
adc
pop
jmp
mov
xchg
outsl
dec
inc
and
xchg
sbb
jnp
cmp
test
sti
pop
shr
aam
pop
decl
les
and
sbb
loope
sbb
push
rcl
and
lret
stc
xor
adc
pusha
stos
adc
loop
pusha
gs
pushl
dec
dec
add
gs
xor
repz
pop
je
push
sub
add
lcall
cmp
leave
cmpsl
lods
aam
test
inc
mov
mov
dec
movsl
jmp
clc
jg
popa
mov
dec
push
pusha
dec
shlb
pushl
lock
scas
add
daa
or
inc
popf
sub
pushl
std
loope
sahf
cmp
sbb
cmpsl
inc
and
xchg
xor
in
push
test
stos
xchg
decl
mov
sbb
outsb
push
dec
lcall
mov
add
sub
mov
ja
cmp
sbb
dec
mov
call
xchg
add
in
jbe,pn
push
push
in
mov
jnp
fucomi
test
mov
pushl
adc
data16
sbb
sbb
std
in
enter
mov
push
flds
xchg
add
repz
loopne
xchg
jmp
arpl
pop
mov
adc
je
jb
sub
add
leave
mov
arpl
imul
mov
daa
jae
jge
push
das
xchg
and
sub
fsubs
or
fincstp
es
mov
pop
icebp
dec
mov
jg
push
mov
mov
es
and
xchg
decl
add
xor
dec
mov
and
mov
loop
push
jns
sahf
sar
clc
call
or
add
sbb
sub
mov
test
ljmp
mov
fidivs
push
sbb
aaa
loop
sbb
ljmp
xor
mov
inc
xor
mov
mov
adc
pushl
mov
push
add
pop
aas
and
outsl
and
lock
cmp
add
lcall
adc
repnz
gs
and
inc
icebp
xchg
pop
lret
rcrl
outsl
shrl
jg
lcall
fmul
dec
lock
adc
ret
in
pop
dec
hlt
stos
adc
cs
lcall
imul
imul
fsubr
inc
cmp
dec
and
int
stos
xchg
jg
incl
mov
xchg
push
fbld
mov
pop
push
or
fldl
xor
mov
call
or
cmc
vmovupd
insl
lock
out
push
decl
daa
daa
dec
xor
call
sbbb
scas
jecxz
jl
bound
inc
loop
sarl
cmp
add
pushl
outsl
xchg
dec
and
jns
daa
xor
fistpll
add
pop
addr16
in
incl
call
lods
mov
and
lcall
mov
cmpb
mov
aas
sub
adc
lods
shr
popf
popa
pop
inc
ret
decl
mov
inc
roll
inc
mov
sbb
mov
jp
adc
jp
sub
stos
inc
pop
ret
pushl
ljmp
dec
dec
push
inc
inc
dec
dec
dec
les
adc
fnstsw
cli
lcall
push
dec
and
cmp
enter
andl
mov
or
and
push
in
xchg
daa
add
inc
lods
mov
cmpsl
xor
cmp
inc
push
dec
pushf
dec
hlt
lods
movsl
sbb
jg
into
lcall
hlt
data16
mov
mov
in
aad
pop
fists
ja
clc
lcall
cli
jo
lods
jecxz
xchg
call
lcall
mov
sbb
mov
idiv
sbb
les
jmp
f2xm1
mov
fnstenv
lcall
js
movsb
les
push
xchg
outsl
xchg
push
adcb
mov
scas
mov
ljmp
adc
fs
in
or
mov
push
inc
loope
out
scas
xor
aam
cmpsb
ljmp
mov
and
dec
fisubs
fsts
xor
pop
in
jnp
and
inc
xchg
mov
out
or
incl
inc
daa
mov
insb
xchg
scas
jl
jg
sub
subl
push
rolb
xor
or
add
inc
incl
xor
cwtl
mov
dec
xor
inc
mov
lods
sub
test
dec
pop
jbe
fs
pop
pop
mov
jo
adc
pushl
stos
or
mov
mov
mov
xchg
xchg
mov
lock
mov
ret
sub
testb
decl
lock
pushf
pop
sub
xor
out
hlt
adc
mov
jmp
rorl
mov
mov
mov
sti
xchg
mov
fimuls
xchg
push
hlt
pushl
xchg
push
stos
mov
push
rcll
orb
jo
psrad
fisttps
mov
movsb
jmp
rcrb
icebp
push
xorl
movsl
mov
pop
dec
rcrb
dec
adc
or
lcall
decb
push
lods
scas
dec
dec
shlb
shll
repnz
mov
or
dec
es
jmp
sbb
dec
lods
mov
cmp
je
xchg
xchg
dec
sti
inc
and
xor
cmp
mov
sub
mov
std
movsl
sbb
adc
das
ss
enter
add
fistpll
ds
dec
add
inc
or
popf
cs
mov
pop
inc
jne
jb
psubb
cld
lods
dec
jl
nop
mov
repnz
sub
in
fsub
stc
and
cmc
jo
std
inc
cltd
xchg
shrl
push
shlb
sbb
fsubrs
outsl
mov
mov
sbb
inc
mov
dec
outsb
pop
ljmp
push
int3
outsl
movsb
pop
dec
call
pop
sub
mov
inc
sbb
jg
xchg
jo
sbb
or
faddl
push
inc
jnp
imul
jg
shll
jne
mov
inc
nop
mov
sub
or
xchg
aam
cmpsl
mov
and
jge
aas
fcompl
mov
ret
mov
ficoms
mov
add
pushf
lock
mov
dec
or
cwtl
ret
sarb
adc
pop
in
jg
add
fsubs
and
add
jmp
call
movsl
cmp
popa
sub
adc
mov
aas
cmp
lahf
movsb
jne
sahf
imull
popl
std
ds
pop
xchg
adc
cwtl
psubw
scas
xchg
add
mov
rclb
loope
pop
iret
xor
mov
pop
incl
ljmp
push
lret
cltd
pop
sub
mov
movsb
push
xchg
repnz
jg
aas
out
cmp
jmp
imul
ret
xchg
lahf
adc
adc
xor
imul
xchg
sar
ja
mov
adc
icebp
testb
lcall
rolb
out
pop
add
fisubrs
jge
fucomip
mov
fmulp
push
out
ja
stc
xor
sbb
pop
xor
fimuls
sbb
sbb
mov
fs
cmpsl
hlt
inc
inc
jbe
jge
notb
aad
aas
pop
push
or
push
inc
imul
popa
add
and
push
lret
sbb
scas
loope
xchg
sbb
dec
cwtl
xchg
mov
push
jge
mov
mov
cmpsb
mov
sbb
xor
out
inc
sahf
pop
mov
das
cli
popf
jo
jg
pop
cmp
mov
sbb
fwait
mov
test
mov
decb
aam
mov
lahf
cmc
test
and
jnp
sub
mov
lcall
mov
and
push
sahf
leave
dec
gs
daa
adcl
cmp
dec
pop
or
jp
ja
xchg
or
push
and
mov
xchg
call
jp
dec
mov
dec
repnz
fstl
repz
dec
and
incl
push
les
insl
push
out
sti
scas
or
add
stos
fisttps
inc
mov
mov
pushf
sub
loope
and
roll
out
or
and
js
je
cmp
loopne
inc
iret
lret
fs
mov
in
and
sbb
mov
mov
ret
ror
dec
rclb
add
lret
xchg
movsb
cld
das
push
test
xchg
cmp
ret
pusha
jle
pop
and
jg
inc
enter
icebp
inc
ret
or
xchg
xchg
ja
sar
mov
jmp
adc
mov
jmp
sbb
mov
dec
jnp
sbb
jmp
cltd
arpl
dec
cmc
and
push
and
xor
lds
lret
mov
xlat
jg
ljmp
xorb
mov
arpl
insb
jg
mov
insb
mov
mov
dec
fsubrl
outsb
xchg
adc
xor
jg
adc
pop
fs
nop
dec
repz
sti
push
mov
repnz
sbb
test
dec
mov
jl
dec
rclb
cli
bound
mov
mov
movsl
divl
sub
push
or
sbb
cmp
call
test
xor
xchg
xor
xchg
out
test
cmp
std
add
movl
fwait
add
decl
xor
fs
mov
sbb
scas
pop
sub
mov
testb
lods
aad
hlt
sbb
aad
stos
lahf
inc
add
mov
cwtl
add
out
cmc
fs
add
movsl
aam
test
cmpsl
into
cs
aaa
enter
mov
inc
sar
jg
ljmp
fs
lahf
imul
jmp
lret
sub
sti
dec
jne
or
xor
lds
cmp
roll
adc
xchg
pushl
jp
sub
push
jle
jb
aas
in
dec
sbb
cwtl
and
aam
cmc
jb
push
loop
xlat
push
jbe
add
ljmp
cli
add
add
sub
scas
add
lcall
pop
lock
cli
pop
dec
add
pop
mov
lcall
dec
adc
sub
jo
cltd
and
mov
mov
inc
mov
rcll
sub
enter
stc
or
mov
inc
xchg
jns
int3
cld
xchg
pop
sar
es
outsl
test
sbb
xchg
stos
int3
lret
mov
nop
outsb
inc
repz
lcall
adc
mov
mov
hlt
pop
jns
in
aaa
repz
pop
dec
mulb
xchg
xor
dec
cli
cld
or
inc
xlat
inc
dec
ss
inc
push
sub
lea
loopne
jle
into
add
repnz
push
jns
push
in
mov
popf
xor
jb
mov
shlb
scas
cltd
imul
insb
aam
jle
mov
lcall
jg
sarb
mov
inc
sub
out
rcrb
call
insb
mov
shr
push
mov
jg
dec
cmpsb
outsl
xor
adcb
xor
adcl
test
into
sbb
dec
fiadds
jno
and
adc
add
mov
xor
test
lods
cld
data16
leave
cld
pop
push
pop
lcall
push
or
mov
jnp
incl
aaa
cmpsb
je
jne
push
int
ljmp
jnp
push
add
jns
push
cli
push
psubq
aaa
out
stos
xchg
ss
dec
adcl
sub
repz
mov
das
fcompl
or
cld
lcall
aas
in
xchg
call
and
or
add
xor
and
filds
adc
push
jne
in
cmp
inc
rcrb
dec
add
insl
lcall
lds
lock
cmp
stos
jl
cltd
nop
push
shll
lods
mov
dec
xchg
addl
call
addl
rorb
popf
jmp
dec
xchg
aaa
push
flds
inc
fstpt
sub
mov
jecxz
sub
loope
xchg
push
dec
ljmp
aaa
xor
cmp
mov
js
mov
jmp
addr16
push
dec
mov
mov
outsb
jno
push
sarl
inc
enter
xor
jae
push
insl
int
xor
mov
mov
mov
pushl
rorb
outsl
adc
aas
xor
pop
test
mov
out
add
call
cmc
jmp
sbb
int
cld
ja
rcll
cld
xchg
jp
ljmp
cli
in
sub
mov
xchg
leave
shlb
out
jno
lahf
es
jno
lds
dec
mov
cmp
movsl
out
aaa
jb
dec
rcll
gs
mov
jne
pusha
lret
mov
dec
pop
jl
loopne
enter
pop
push
mov
lea
out
and
push
mov
js
pop
inc
xchg
imul
call
int
push
xchg
mov
or
adc
fcmovb
shlb
hlt
mov
fwait
aas
repz
int3
lret
daa
roll
cmp
cmpsb
testb
jmp
imul
insb
cmp
pushf
mov
push
push
sub
in
xchg
addr16
sahf
bound
stos
popf
add
jmp
pop
and
inc
into
inc
mov
fsubrs
mov
es
out
andb
out
fsubr
jbe
adc
loop
ss
jne
and
call
imul
jge
and
popf
stos
subb
mov
lret
loopnew
call
insb
inc
mov
or
mov
inc
insl
mov
and
popf
or
jmp
dec
mov
xor
sbb
xor
sbb
cwtl
mov
xchg
adc
sbb
stos
icebp
mov
aas
notb
xchg
popa
xchg
push
call
sbb
sub
rcl
fists
outsb
and
mov
cmpsb
outsb
ret
test
fisttpl
inc
inc
xchg
xor
jmp
jbe
xchg
insl
inc
mov
aaa
cmpb
push
aad
add
cmp
mov
lea
inc
xchg
push
test
inc
stos
fnsave
subl
in
lods
mov
ror
lds
les
or
inc
and
mov
data16
sub
sbbb
or
outsb
scas
jl
movsb
cmp
test
pop
lcall
lcall
int3
mov
fsubs
xchg
push
mov
fstp
xchg
lods
pop
scas
xchg
test
pop
sbb
fidivs
popa
pop
push
cs
cmpsb
pop
push
mov
mov
add
lock
add
inc
loope
add
leave
call
mov
out
or
mul
stc
sub
jl
fldenv
mov
cltd
lock
sub
rorl
sbb
mov
mov
incl
or
ja
mov
daa
add
sarl
cmp
mov
dec
pop
inc
pop
test
cli
jecxz
push
xor
dec
lret
decl
xchg
movsb
leave
sbb
push
cmp
in
repz
ret
stos
xchg
push
xchg
insl
jmp
ret
out
cs
jl
jge
call
xchg
xchg
mov
pushf
dec
xchg
dec
das
lods
xchg
jno
inc
lods
mov
mov
shlb
xlat
mov
cmp
jmp
lods
push
xor
bnd
add
sub
adc
pop
mov
cmpsl
mov
ret
fdivr
xchg
std
call
scas
imul
nop
jmp
mov
test
test
enter
out
cld
decl
jp
inc
jecxz
jne
mov
test
mov
cmp
xor
dec
inc
inc
and
sbb
pop
addr16
xchg
lock
rolb
pop
xchg
dec
xchg
xor
fwait
jb
adc
or
mov
jmp
inc
xchg
jecxz
mov
jae
test
mov
nop
cmp
add
popf
cmp
nop
mov
rclb
incl
rcr
lea
cwtd
adc
dec
lods
xchg
ret
test
pushl
jae
fistpll
lret
mov
adc
outsl
cmp
adc
pop
ret
dec
inc
fldcw
sbb
out
pusha
enter
or
das
imul
stc
cmp
pop
decl
sub
stos
flds
and
sbb
or
aas
dec
ja
stos
dec
dec
pushl
cmpsl
mov
xor
fcomps
adc
sbb
cli
adc
call
rclb
ret
pop
sbb
mov
test
dec
jle
push
add
mov
jae
jg
test
icebp
ds
je
xchg
ffree
test
cmp
push
adc
call
mov
push
stos
mov
ljmp
aaa
cmpsl
dec
inc
pop
addr16
ljmp
push
iret
dec
imul
jnp
in
lcall
or
mov
push
add
sub
dec
nop
aam
push
decl
repz
call
sbb
cwtl
mulb
pop
movsl
fsubs
and
pop
scas
mov
pushf
mov
shrb
in
movsl
mov
lcall
xchg
into
mov
bound
adc
out
test
sub
jge
popa
mov
orb
andb
lcall
cmp
inc
mov
pop
fxch
test
mov
aad
xlat
and
xchg
fwait
add
cld
mull
ds
jp
and
divb
loopne
mov
push
imul
fiaddl
sbb
ljmp
scas
cli
xor
scas
call
dec
cmp
pushf
pop
mov
dec
sub
cmp
mov
mov
insb
dec
jg
fucom
cmpsb
xchg
popf
push
mov
mov
not
add
clc
xorl
mov
call
add
sahf
xchg
les
inc
rcrl
fistps
sarl
inc
stos
sub
in
ret
rcl
adc
loop
mov
test
dec
in
pop
xchg
lret
mov
push
push
and
pop
jae
pop
lods
xor
xor
push
ja
sub
aad
ret
mov
fstpl
test
jns
push
xor
jae
mov
lcall
sub
test
mov
pop
inc
inc
dec
insb
mov
jmp
push
ljmp
in
pop
xor
pushf
mov
jb
imul
cltd
jmp
fnstsw
fadd
cmpsb
or
or
or
outsb
mov
ljmp
mov
mov
wbinvd
test
jmp
sarb
movl
test
popf
mov
cltd
lods
icebp
xchg
lea
in
sub
cld
lcall
fwait
cmp
mov
iret
xor
inc
loopne
pop
pop
lock
jmp
dec
or
nop
ds
outsb
push
ja
adc
dec
push
gs
lcall
int
es
aad
and
out
sahf
mov
scas
add
mov
hlt
inc
mov
nop
mov
cli
jle
out
dec
dec
pop
scas
lods
push
xlat
addr16
jl
and
or
and
gs
adc
jns
sbb
dec
addl
sub
popa
xchg
out
push
adc
push
fcmovbe
divb
xchg
and
ljmp
xor
iret
aaa
lock
pop
push
movsl
add
daa
lcall
fwait
and
pop
data16
xchg
test
mov
pop
dec
out
mov
sub
movsb
fildl
setns
mov
lcall
std
mov
sbb
rcl
pop
sti
test
scas
mov
out
imul
pushl
lret
mov
test
dec
push
sub
dec
test
into
test
inc
xchg
mov
adc
call
adc
scas
mov
les
inc
push
jae
sarl
jbe
or
cmp
and
lods
mov
mov
sbbb
pop
sub
call
jbe
cmp
dec
je
push
mov
push
or
and
call
rolb
andl
xor
mov
cmc
xchg
addr16
leave
jg
dec
cmp
ljmp
ret
mov
aad
mov
andb
or
xor
loop
jg
subb
sti
imul
xchg
ficompl
inc
jo
dec
hlt
xor
dec
add
add
into
mov
test
xor
pop
jecxz
ja
call
mov
xorb
mov
push
or
aad
mov
xor
dec
or
loopne
mov
jmp
pop
cmc
jmp
jp
outsb
xchg
push
jb
fnsetpm(287
aad
jns
push
mov
bound
sar
cli
jns
xchg
or
add
lret
cmpsl
lds
dec
xchg
pushl
cli
cld
jne
bound
jno
shll
xchg
pop
or
pop
imul
test
mov
js
dec
out
dec
pop
inc
xlat
xchg
pop
cli
sarb
js
pop
rcrb
jmp
mov
icebp
mov
popa
xor
push
dec
movsb
into
cmp
or
pop
mov
and
jge
lods
fs
mov
icebp
mov
je
mov
lcall
popf
xchg
loopne
push
adc
sbb
int
push
fistpll
mov
std
int3
inc
icebp
imul
lcall
dec
inc
popf
sbb
inc
and
cmpsl
stc
sarb
mov
push
rep
xchg
add
sbb
push
imull
pop
mov
rolb
ljmp
pusha
push
adc
mov
cli
pop
push
not
inc
dec
lods
addb
cmp
enter
pushl
fildl
outsb
insl
insb
push
filds
ds
cltd
cmp
arpl
popf
add
mov
lds
iret
js
and
out
cmpsl
adc
add
or
adcl
decl
div
sub
fmulp
sbb
in
adc
cld
dec
pusha
sbb
data16
push
pop
fildl
decl
leave
aad
test
adc
ljmp
and
mov
adc
push
hlt
mov
pushf
into
cmp
push
mov
or
sbb
cmp
or
cmp
mov
inc
xor
stos
pusha
add
loop
rcl
enter
lods
outsb
pop
jle
incl
jp
addl
pusha
test
mov
and
hlt
pop
ret
xchg
mov
decl
aam
scas
pop
clc
jno
push
ficompl
loope
jle
xchg
out
outsb
into
cmp
sbb
jns
sbb
int3
rcrb
inc
loopne
rcl
lcall
mov
sub
int3
adc
stos
cmp
or
jg
js
sahf
xchg
dec
fwait
mov
push
xchg
xchg
xor
cmp
scas
mov
mov
das
add
jns
sbb
sub
mov
and
adc
inc
sbb
or
add
test
cmpsl
cmp
add
gs
je
inc
imul
adc
es
sbb
inc
js
dec
outsb
imul
insb
imul
je
push
sub
jb
jne
insb
mov
imul
insb
outsl
arpl
inc
outsb
arpl
cmp
cmp
push
outsl
jle
test
pop
jb
xor
gs
popa
outsb
fs
pop
xor
in
mov
push
xchg
jmp
outsb
pushl
push
inc
je
inc
gs
jb
inc
fs
int
or
jae
push
dec
outsl
cld
bound
jb
inc
inc
sbb
sbb
mov
xor
gs
add
inc
test
cs
fsts
xchg
inc
imul
jb
sbb
or
shrl
ds
inc
aas
dec
lret
mov
or
shll
popa
pop
mov
gs
or
daa
jge
or
inc
movsl
push
add
pusha
sbb
sub
inc
adc
add
in
test
mov
mov
xor
pop
xchg
push
adc
pop
pop
iret
push
add
xchg
leave
mov
dec
test
xlat
adcl
and
inc
xchg
or
adc
mov
xor
or
nop
mov
mov
sbb
testl
rorl
ret
push
aad
push
pmulhw
sub
add
add
mov
test
les
add
xor
daa
das
or
or
sub
stos
dec
movsb
and
sbb
adc
add
sbb
std
int3
pop
lds
mov
and
mov
or
pop
push
imul
dec
jle
cmpsb
shlb
lods
push
jb
outsb
jae
addl
dec
and
gs
xchg
in
inc
stos
jb
mov
in
insb
adc
nop
xchg
mov
dec
movl
movsb
sbb
xor
push
add
add
dec
mov
addr16
xor
adc
add
inc
inc
mov
push
mov
push
ja
sub
inc
jnp
push
xchg
and
mov
adc
aaa
push
and
mov
inc
pop
adc
add
or
or
or
push
add
pop
pop
pop
sbb
stos
add
mov
mov
or
push
lahf
sbb
add
jecxz
lret
subl
xor
xchg
or
enter
inc
mov
rorb
adc
lahf
notl
mov
outsl
orl
and
sbb
data16
cwtl
xor
insl
dec
lods
and
imul
push
dec
add
add
je
es
add
mov
andb
sbb
imul
test
or
inc
inc
pop
add
testb
nop/reserved
aas
cmp
insl
insl
add
lea
mov
fwait
push
sarb
add
dec
loopne
je,pn
bound
iret
js
shlb
mov
add
cmp
pusha
add
mov
loope
testb
xor
fs
je
mov
sbb
add
dec
notl
jb
rorb
ss
int
push
xor
add
xor
das
ret
insl
jb
xor
or
gs
cmpsb
lock
mov
js
jae
dec
ficoml
mov
pop
jmp
dec
adc
xor
aas
clc
cs
add
dec
jmp
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
addb
add
add
add
add
add
add
or
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
addb
add
cmp
add
pusha
add
orb
add
mov
add
mov
add
add
add
add
add
add
add
add
add
mov
add
fsubl
add
pop
add
in
add
add
add
add
add
add
add
mov
add
shrb
loopne
add
in
add
add
add
add
add
add
add
fadds
add
movsb
jno
add
pop
add
in
add
add
add
add
add
add
add
add
add
mov
add
pop
add
in
add
add
add
add
add
add
add
sub
add
insb
cmpl
add
add
add
add
add
add
add
add
push
add
add
aas
add
pop
add
in
add
add
add
add
add
add
add
js
add
xor
aas
add
pop
add
in
add
add
add
add
add
add
add
mov
cltd
aas
add
pop
add
in
add
add
add
add
add
add
add
enter
cld
mov
add
in
add
add
add
fcom
add
or
in
jno
mov
inc
push
xlat
clc
cmpb
incl
sub
adc
xor
shlb
std
push
repz
stc
and
addr16
xchg
jmp
jecxz
inc
dec
xchg
and
lds
pop
xchg
ss
aaa
je
movsl
xchg
pop
in
test
stos
mov
inc
push
test
loope
fs
insb
cmc
mov
jg
mov
enter
mov
rcr
add
dec
movsl
insl
or
aas
aaa
mov
aad
pop
pop
cwtl
xor
jecxz
push
outsb
xchg
loope
jge
jns
mov
jg
mov
mov
sbb
and
es
xor
jmp
xchg
xchg
in
data16
sbb
ss
cmp
addr16
mov
xor
aam
sti
sahf
sbb
popf
nop
daa
insb
movsb
xchg
pop
leave
icebp
cmpsl
test
push
cmp
mov
inc
ds
pop
push
aaa
ja
jne
lods
pop
pop
and
pop
outsl
xchg
or
aad
sub
iret
pop
icebp
add
dec
inc
divl
div
and
mov
cld
js
and
lock
imul
adc
ret
and
xchg
dec
xchg
js
push
dec
mov
cmp
lret
add
or
push
fdiv
movl
adc
xchg
outsb
lcall
loopne
ret
pusha
mov
inc
inc
mov
out
gs
sbb
sub
in
sbb
sbb
test
pushf
cmpsb
xchg
bound
pop
rolb
xchg
or
mov
lods
daa
loopne
inc
jle
in
adc
jne
dec
imul
jae
pop
xchg
push
dec
sbb
pop
outsl
sbb
sbb
mov
mov
mov
jg
lahf
xchg
fiadds
cmc
lret
cli
aas
xor
das
and
mov
cs
cmp
les
rorb
and
mov
call
adc
mov
std
ds
dec
xchg
ret
xor
inc
adc
ret
shll
push
mov
pop
dec
gs
jns
inc
fdivr
xchg
mov
je
cmp
jp
lret
icebp
pop
or
cmc
aam
loope
lock
pop
pop
test
sub
popa
rcrl
jno
mov
adc
mov
jl
arpl
je
imul
and
fisubl
xor
dec
sbb
and
inc
pop
rcl
jl
cmp
cmp
cld
insl
cmp
imul
sbb
mov
out
adc
jae
insb
pop
insl
es
cmp
adc
sub
out
mov
cs
scas
xchg
test
in
mov
add
int
pop
xchg
pop
pminsw
cmp
ftst
jne
lahf
test
push
test
int3
push
or
outsl
mov
and
jge
xor
sbb
cmpsb
and
lret
repnz
pop
sbbb
repnz
jge
mov
ljmp
inc
and
into
rcll
insb
in
testl
and
inc
xor
mov
jle
shl
xor
mov
push
mov
popa
and
ret
shrb
cmp
adc
sub
lret
and
mov
pop
or
mov
xchg
xchg
cmp
test
xor
aam
dec
pop
call
xor
xor
mov
fwait
cwtl
sbb
sbb
std
fildl
cmp
test
or
lea
cmpsb
cmp
push
sar
fwait
stos
scas
hlt
fmul
movsl
pop
pop
mov
fmuls
call
jnp
mov
repnz
aad
pop
mov
jmp
lds
cwtl
sub
xor
lds
pop
in
sub
cmpsb
sbb
mov
pop
push
subl
test
fcompl
dec
scas
mov
mov
dec
in
in
sub
in
ljmp
jge
push
jns
es
testb
mov
xlat
mov
or
jnp
inc
fwait
push
repz
xor
rorb
hlt
jl
out
or
cmpsb
adc
and
test
dec
sbb
dec
dec
mov
adc
mov
aad
push
sub
aas
call
adc
mov
clc
outsl
mov
and
dec
xor
mov
test
xchg
daa
hlt
dec
js
rcrb
sub
aam
js
arpl
int
jbe
stc
cs
dec
js
out
xor
outsb
stos
pop
jg
mov
mov
and
ljmp
cmp
pop
jp
push
addb
pop
jno
cld
notb
leave
jmp
pushf
ds
mov
sub
xchg
pop
dec
adc
adcb
or
call
push
and
push
aad
pop
adc
adc
xchg
and
cmp
pop
fnstenv
stos
cld
jo
xchg
mov
jae
pop
jecxz
mov
rorb
xchg
and
mov
xor
outsl
sub
repnz
or
push
push
dec
or
insl
mov
xchg
sub
xor
incb
test
inc
cli
or
mov
sbb
andl
sti
into
enter
add
xlat
in
mov
subl
and
daa
loop
push
ss
or
lret
xchg
sub
fwait
and
aad
or
push
test
xchg
jmp
es
pop
icebp
mov
stos
xor
cld
xchg
xchg
int
shrb
cmp
rorl
adc
add
fwait
ljmp
and
or
xchg
and
out
pop
fisttpll
mov
xor
add
cmpsl
mov
adc
std
and
pop
testb
cmpsl
mov
loop
dec
adc
cmp
jns
testl
inc
test
lret
dec
cmc
mov
mov
jnp
in
dec
or
mov
push
int3
mov
mov
sbb
repnz
leave
aaa
daa
sub
sbb
or
jae
popf
xchg
fistps
ret
in
inc
repnz
sbbl
cmp
imul
adc
rcrb
pusha
mov
movsb
aad
mov
test
mov
fbstp
pusha
jb
aad
fildl
jbe
inc
jbe,pn
ds
shll
mov
out
mov
fstps
dec
mov
cmp
bound
adc
dec
jb
cld
popf
inc
es
movl
inc
decb
popf
mov
jecxz
std
lret
jae
cmp
or
jmp
dec
mov
dec
mov
xor
sbb
sbb
or
or
cmp
and
push
sar
push
daa
inc
sub
shll
mov
loope
js
sbb
push
mov
aas
sub
sub
push
xor
or
xor
sbb
ret
cli
or
jmp
mov
inc
add
and
and
sbb
pop
adc
mov
jmp
scas
xor
cmc
sbb
cmpb
mov
and
pop
leave
sbb
xor
mov
imul
lret
sti
or
push
pop
jmp
frstor
or
loopne
cmpsb
cmpsb
test
loopne
mov
xchg
or
or
shl
or
mov
orl
sbb
adc
push
pop
es
and
jl
inc
push
outsl
push
jne
repnz
xor
mov
je
sahf
mov
pop
insb
add
sub
addr16
cmp
push
mov
and
lcall
dec
inc
mov
add
mov
adc
lret
lods
jg
adc
mov
pop
repz
push
das
adc
cli
gs
xchg
inc
loop
ror
cltd
xlat
cmpsb
mov
xor
sbb
mov
or
cmp
pop
repz
or
jns
jno
cwtl
mov
insl
movhps
push
clc
xchg
xor
and
push
jl
xchg
dec
jg
and
xchg
movsb
outsl
pop
add
xchg
pop
std
sub
add
outsb
test
push
cmp
sbb
mov
cli
aam
es
adc
xchg
clc
ret
push
mov
shlb
les
pop
aam
cmp
add
xor
jnp
or
or
lods
xchg
mov
jo
jae
out
enter
imul
fsubrl
jecxz
jle
lock
mov
mov
into
inc
pop
testb
icebp
popa
jle
jno
sbb
push
mov
inc
mov
mov
add
or
jecxz
xchg
jmp
mov
test
ret
rcll
jecxz
or
xor
das
cmp
xor
and
je
xchg
mov
or
mov
cs
cmp
les
rorb
and
mov
call
adc
mov
std
ds
dec
xchg
ret
xor
inc
adc
ret
shll
push
mov
pop
dec
gs
jns
inc
fdivr
xchg
mov
je
cmp
jp
lret
icebp
pop
or
cmc
aam
loope
lock
pop
pop
test
sub
popa
rcrl
jno
mov
adc
mov
jl
arpl
je
imul
and
fisubl
xor
dec
sbb
and
inc
pop
rcl
jl
cmp
cmp
cld
insl
cmp
imul
sbb
mov
out
adc
jae
insb
pop
insl
es
cmp
adc
sub
out
mov
cs
scas
xchg
test
in
mov
add
int
pop
xchg
pop
pminsw
cmp
ftst
jne
lahf
test
push
test
int3
push
or
outsl
mov
and
jge
xor
sbb
cmpsb
and
lret
repnz
pop
sbbb
repnz
jge
mov
ljmp
inc
and
into
rcll
insb
in
testl
and
inc
xor
mov
jle
shl
xor
mov
push
mov
popa
and
ret
shrb
cmp
adc
sub
lret
and
mov
pop
or
mov
xchg
xchg
cmp
test
xor
aam
dec
pop
call
xor
xor
mov
fwait
cwtl
sbb
sbb
std
fildl
cmp
test
or
lea
cmpsb
cmp
push
sar
fwait
stos
scas
hlt
fmul
movsl
pop
pop
mov
fmuls
call
jnp
mov
repnz
aad
pop
mov
jmp
lds
cwtl
sub
xor
lds
pop
in
sub
cmpsb
sbb
mov
pop
push
subl
test
fcompl
dec
scas
mov
mov
dec
in
in
sub
in
ljmp
jge
push
jns
es
testb
mov
xlat
mov
or
jnp
inc
fwait
push
repz
xor
rorb
hlt
jl
out
or
cmpsb
adc
and
test
dec
sbb
dec
dec
mov
adc
mov
aad
push
sub
aas
call
adc
mov
clc
outsl
mov
and
dec
xor
mov
test
xchg
daa
hlt
dec
js
rcrb
sub
aam
js
arpl
int
jbe
stc
cs
dec
js
out
xor
outsb
stos
pop
jg
mov
mov
and
ljmp
cmp
pop
jp
push
addb
pop
jno
cld
notb
leave
jmp
pushf
ds
mov
sub
xchg
pop
dec
adc
adcb
or
call
push
and
push
aad
pop
adc
adc
xchg
and
cmp
pop
fnstenv
stos
cld
jo
xchg
mov
jae
pop
jecxz
mov
rorb
xchg
and
mov
xor
outsl
sub
repnz
or
push
push
dec
or
insl
mov
xchg
sub
xor
incb
test
inc
cli
or
mov
sbb
andl
sti
into
enter
add
xlat
in
mov
subl
and
daa
loop
push
ss
or
lret
xchg
sub
fwait
and
aad
or
push
test
xchg
jmp
es
pop
icebp
mov
stos
xor
cld
xchg
xchg
int
shrb
cmp
rorl
adc
add
fwait
ljmp
and
or
xchg
and
out
pop
fisttpll
mov
xor
add
cmpsl
mov
adc
std
and
pop
testb
cmpsl
mov
loop
dec
adc
cmp
jns
testl
inc
test
lret
dec
cmc
mov
mov
jnp
in
dec
or
mov
push
int3
mov
mov
sbb
repnz
leave
aaa
daa
sub
sbb
or
jae
popf
xchg
fistps
ret
in
inc
repnz
sbbl
cmp
imul
adc
rcrb
pusha
mov
movsb
aad
mov
test
mov
fbstp
pusha
jb
aad
fildl
jbe
inc
jbe,pn
ds
shll
mov
out
mov
fstps
dec
mov
cmp
bound
adc
dec
jb
cld
popf
inc
es
movl
inc
decb
popf
mov
jecxz
std
lret
jae
cmp
or
jmp
dec
mov
dec
mov
xor
sbb
sbb
or
or
cmp
and
push
sar
push
daa
inc
sub
shll
mov
loope
js
sbb
push
mov
aas
sub
sub
push
xor
or
xor
sbb
ret
cli
or
jmp
mov
inc
add
and
and
sbb
pop
adc
mov
jmp
scas
xor
cmc
sbb
cmpb
cwtl
loope
add
or
pop
leave
sbb
xor
mov
imul
lret
sti
or
push
pop
jmp
frstor
or
loopne
cmpsb
cmpsb
test
loopne
mov
xchg
or
or
shl
or
mov
orl
sbb
adc
push
pop
es
and
jl
inc
push
outsl
push
jne
repnz
xor
mov
je
sahf
mov
pop
insb
add
sub
addr16
cmp
push
mov
and
lcall
dec
inc
mov
add
mov
adc
lret
lods
jg
adc
mov
pop
repz
push
das
adc
cli
gs
xchg
inc
loop
ror
cltd
xlat
cmpsb
mov
xor
sbb
mov
or
cmp
pop
repz
or
jns
jno
cwtl
mov
insl
movhps
push
clc
xchg
xor
and
push
jl
xchg
dec
jg
and
xchg
movsb
outsl
pop
add
xchg
pop
std
sub
add
outsb
test
push
cmp
sbb
mov
cli
aam
es
adc
xchg
clc
ret
push
mov
shlb
les
pop
aam
cmp
add
xor
jnp
or
or
lods
xchg
mov
jo
jae
out
enter
imul
fsubrl
jecxz
jle
lock
mov
mov
into
inc
pop
testb
icebp
popa
jle
jno
sbb
push
mov
inc
mov
mov
add
or
jecxz
xchg
jmp
mov
test
ret
rcll
jecxz
or
xor
das
cmp
xor
and
je
xchg
mov
or
mov
cs
cmp
les
rorb
and
mov
call
adc
mov
std
ds
dec
xchg
ret
xor
inc
adc
ret
shll
push
mov
pop
dec
gs
jns
inc
fdivr
xchg
mov
je
cmp
jp
lret
icebp
pop
or
cmc
aam
loope
lock
pop
pop
test
sub
popa
rcrl
jno
mov
adc
mov
jl
arpl
je
imul
and
fisubl
xor
dec
sbb
and
inc
pop
rcl
jl
cmp
cmp
cld
insl
cmp
imul
sbb
mov
out
adc
jae
insb
pop
insl
es
cmp
adc
sub
out
mov
cs
scas
xchg
test
in
mov
add
int
pop
xchg
pop
pminsw
cmp
ftst
jne
lahf
test
push
test
int3
push
or
outsl
mov
and
jge
xor
sbb
cmpsb
and
lret
repnz
pop
sbbb
repnz
jge
mov
ljmp
inc
and
into
rcll
insb
in
testl
and
inc
xor
mov
jle
shl
xor
mov
push
mov
popa
and
ret
shrb
cmp
adc
sub
lret
and
mov
pop
or
mov
xchg
xchg
cmp
test
xor
aam
dec
pop
call
xor
xor
mov
fwait
cwtl
sbb
sbb
std
fildl
cmp
test
or
lea
cmpsb
cmp
push
sar
fwait
stos
scas
hlt
fmul
movsl
pop
pop
mov
fmuls
call
jnp
mov
repnz
aad
pop
mov
jmp
lds
cwtl
sub
xor
lds
pop
in
sub
cmpsb
sbb
mov
pop
push
subl
test
fcompl
dec
scas
mov
mov
dec
in
in
sub
in
ljmp
jge
push
jns
es
testb
mov
xlat
mov
or
jnp
inc
fwait
push
repz
xor
rorb
hlt
jl
out
or
cmpsb
adc
and
test
dec
sbb
dec
dec
mov
adc
mov
aad
push
sub
aas
call
adc
mov
clc
outsl
mov
and
dec
xor
mov
test
xchg
daa
hlt
dec
js
rcrb
sub
aam
js
arpl
int
jbe
stc
cs
dec
js
out
xor
outsb
stos
pop
jg
mov
mov
and
ljmp
cmp
pop
jp
push
addb
pop
jno
cld
notb
leave
jmp
pushf
ds
mov
sub
xchg
pop
dec
adc
adcb
or
call
push
and
push
aad
pop
adc
adc
xchg
and
cmp
pop
fnstenv
stos
cld
jo
xchg
mov
jae
pop
jecxz
mov
rorb
xchg
and
mov
xor
outsl
sub
repnz
or
push
push
dec
or
insl
mov
xchg
sub
xor
incb
test
inc
cli
or
mov
sbb
andl
sti
into
enter
add
xlat
in
mov
subl
and
daa
loop
push
ss
or
lret
xchg
sub
fwait
and
aad
or
push
test
xchg
jmp
es
pop
icebp
mov
stos
xor
cld
xchg
xchg
int
shrb
cmp
rorl
adc
add
fwait
ljmp
and
or
xchg
and
out
pop
fisttpll
mov
xor
add
cmpsl
mov
adc
std
and
pop
testb
cmpsl
mov
loop
dec
adc
cmp
jns
testl
inc
test
lret
dec
cmc
mov
mov
jnp
in
dec
or
mov
push
int3
mov
mov
sbb
repnz
leave
aaa
daa
sub
sbb
or
jae
popf
xchg
fistps
ret
in
inc
repnz
sbbl
cmp
imul
adc
rcrb
pusha
mov
movsb
aad
mov
test
mov
fbstp
pusha
jb
aad
fildl
jbe
inc
jbe,pn
ds
shll
mov
out
mov
fstps
dec
mov
cmp
bound
adc
dec
jb
cld
popf
inc
es
movl
inc
decb
popf
mov
jecxz
std
lret
jae
cmp
or
jmp
dec
mov
dec
mov
xor
sbb
sbb
or
or
cmp
and
push
sar
push
daa
inc
sub
shll
mov
loope
js
sbb
push
mov
aas
sub
sub
push
xor
or
xor
sbb
ret
cli
or
jmp
mov
inc
add
and
and
sbb
pop
adc
mov
jmp
scas
xor
cmc
sbb
cmpb
js
add
or
pop
leave
sbb
xor
mov
imul
lret
sti
or
push
pop
jmp
frstor
or
loopne
cmpsb
cmpsb
test
loopne
mov
xchg
or
or
shl
or
mov
orl
sbb
adc
push
pop
es
and
jl
inc
push
outsl
push
jne
repnz
xor
mov
je
sahf
mov
pop
insb
add
sub
addr16
cmp
push
mov
and
lcall
dec
inc
mov
add
mov
adc
lret
lods
jg
adc
mov
pop
repz
push
das
adc
cli
gs
xchg
inc
loop
ror
cltd
xlat
cmpsb
mov
xor
sbb
mov
or
cmp
pop
repz
or
jns
jno
cwtl
mov
insl
movhps
push
clc
xchg
xor
and
push
jl
xchg
dec
jg
and
xchg
movsb
outsl
pop
add
xchg
pop
std
sub
add
outsb
test
push
cmp
sbb
mov
cli
aam
es
adc
xchg
clc
ret
push
mov
shlb
les
pop
aam
cmp
add
xor
jnp
or
or
lods
xchg
mov
jo
jae
out
enter
imul
fsubrl
jecxz
jle
lock
mov
mov
into
inc
pop
testb
icebp
popa
jle
jno
sbb
push
mov
inc
mov
mov
add
or
jecxz
xchg
jmp
mov
test
ret
rcll
jecxz
or
xor
das
cmp
xor
and
je
xchg
mov
or
mov
cs
cmp
les
rorb
and
mov
call
adc
mov
std
ds
dec
xchg
ret
xor
inc
adc
ret
shll
push
mov
pop
dec
gs
jns
inc
fdivr
xchg
mov
je
cmp
jp
lret
icebp
pop
or
cmc
aam
loope
lock
pop
pop
test
sub
popa
rcrl
jno
mov
adc
mov
jl
arpl
je
imul
and
fisubl
xor
dec
sbb
and
inc
pop
rcl
jl
cmp
cmp
cld
insl
cmp
imul
sbb
mov
out
adc
jae
insb
pop
insl
es
cmp
adc
sub
out
mov
cs
scas
xchg
test
in
mov
add
int
pop
xchg
pop
pminsw
cmp
ftst
jne
lahf
test
push
test
int3
push
or
outsl
mov
and
jge
xor
sbb
cmpsb
and
lret
repnz
pop
sbbb
repnz
jge
mov
ljmp
inc
and
into
rcll
insb
in
testl
and
inc
xor
mov
jle
shl
xor
mov
push
mov
popa
and
ret
shrb
cmp
adc
sub
lret
and
mov
pop
or
mov
xchg
xchg
cmp
test
xor
aam
dec
pop
call
xor
xor
mov
fwait
cwtl
sbb
sbb
std
fildl
cmp
test
or
lea
cmpsb
cmp
push
sar
fwait
stos
scas
hlt
fmul
movsl
pop
pop
mov
fmuls
call
jnp
mov
repnz
aad
pop
mov
jmp
lds
cwtl
sub
xor
lds
pop
in
sub
cmpsb
sbb
mov
pop
push
subl
test
fcompl
dec
scas
mov
mov
dec
in
in
sub
in
ljmp
jge
push
jns
es
testb
mov
xlat
mov
or
jnp
inc
fwait
push
repz
xor
rorb
hlt
jl
out
or
cmpsb
adc
and
test
dec
sbb
dec
dec
mov
adc
mov
aad
push
sub
aas
call
adc
mov
clc
outsl
mov
and
dec
xor
mov
test
xchg
daa
hlt
dec
js
rcrb
sub
aam
js
arpl
int
jbe
stc
cs
dec
js
out
xor
outsb
stos
pop
jg
mov
mov
and
ljmp
cmp
pop
jp
push
addb
pop
jno
cld
notb
leave
jmp
pushf
ds
mov
sub
xchg
pop
dec
adc
adcb
or
call
push
and
push
aad
pop
adc
adc
xchg
and
cmp
pop
fnstenv
stos
cld
jo
xchg
mov
jae
pop
jecxz
mov
rorb
xchg
and
mov
xor
outsl
sub
repnz
or
push
push
dec
or
insl
mov
xchg
sub
xor
incb
test
inc
cli
or
mov
sbb
andl
sti
into
enter
add
xlat
in
mov
subl
and
daa
loop
push
ss
or
lret
xchg
sub
fwait
and
aad
or
push
test
xchg
jmp
es
pop
icebp
mov
stos
xor
cld
xchg
xchg
int
shrb
cmp
rorl
adc
add
fwait
ljmp
and
or
xchg
and
out
pop
fisttpll
mov
xor
add
cmpsl
mov
adc
std
and
pop
testb
cmpsl
mov
loop
dec
adc
cmp
jns
testl
inc
test
lret
dec
cmc
mov
mov
jnp
in
dec
or
mov
push
int3
mov
mov
sbb
repnz
leave
aaa
daa
sub
sbb
or
jae
popf
xchg
fistps
ret
in
inc
repnz
sbbl
cmp
imul
adc
rcrb
pusha
mov
movsb
aad
mov
test
mov
fbstp
pusha
jb
aad
fildl
jbe
inc
jbe,pn
ds
shll
mov
out
mov
fstps
dec
mov
cmp
bound
adc
dec
jb
cld
popf
inc
es
movl
inc
decb
popf
mov
jecxz
std
lret
jae
cmp
or
jmp
dec
mov
dec
mov
xor
sbb
sbb
or
or
cmp
and
push
sar
push
daa
inc
sub
shll
mov
loope
js
sbb
push
mov
aas
sub
sub
push
xor
or
xor
sbb
ret
cli
or
jmp
mov
inc
add
and
and
sbb
pop
adc
mov
jmp
scas
xor
cmc
sbb
cmpb
pop
icebp
add
or
pop
leave
sbb
xor
mov
imul
lret
sti
or
push
pop
jmp
frstor
or
loopne
cmpsb
cmpsb
test
loopne
mov
xchg
or
or
shl
or
mov
orl
sbb
adc
push
pop
es
and
jl
inc
push
outsl
push
jne
repnz
xor
mov
je
sahf
mov
pop
insb
add
sub
addr16
cmp
push
mov
and
lcall
dec
inc
mov
add
mov
adc
lret
lods
jg
adc
mov
pop
repz
push
das
adc
cli
gs
xchg
inc
loop
ror
cltd
xlat
cmpsb
mov
xor
sbb
mov
or
cmp
pop
repz
or
jns
jno
cwtl
mov
insl
movhps
push
clc
xchg
xor
and
push
jl
xchg
dec
jg
and
xchg
movsb
outsl
pop
add
xchg
pop
std
sub
add
outsb
test
push
cmp
sbb
mov
cli
aam
es
adc
xchg
clc
ret
push
mov
shlb
les
pop
aam
cmp
add
xor
jnp
or
or
lods
xchg
mov
jo
jae
out
enter
imul
fsubrl
jecxz
jle
lock
mov
mov
into
inc
pop
testb
icebp
popa
jle
jno
sbb
push
mov
inc
mov
mov
add
or
jecxz
xchg
jmp
mov
test
ret
rcll
jecxz
or
xor
das
cmp
xor
and
je
xchg
mov
or
mov
cs
cmp
les
rorb
and
mov
call
adc
mov
std
ds
dec
xchg
ret
xor
inc
adc
ret
shll
push
mov
pop
dec
gs
jns
inc
fdivr
xchg
mov
je
cmp
jp
lret
icebp
pop
or
cmc
aam
loope
lock
pop
pop
test
sub
popa
rcrl
jno
mov
adc
mov
jl
arpl
je
imul
and
fisubl
xor
dec
sbb
and
inc
pop
rcl
jl
cmp
cmp
cld
insl
cmp
imul
sbb
mov
out
adc
jae
insb
pop
insl
es
cmp
adc
sub
out
mov
cs
scas
xchg
test
in
mov
add
int
pop
xchg
pop
pminsw
cmp
ftst
jne
lahf
test
push
test
int3
push
or
outsl
mov
and
jge
xor
sbb
cmpsb
and
lret
repnz
pop
sbbb
repnz
jge
mov
ljmp
inc
and
into
rcll
insb
in
testl
and
inc
xor
mov
jle
shl
xor
mov
push
mov
popa
and
ret
shrb
cmp
adc
sub
lret
and
mov
pop
or
mov
xchg
xchg
cmp
test
xor
aam
dec
pop
call
xor
xor
mov
fwait
cwtl
sbb
sbb
std
fildl
cmp
test
or
lea
cmpsb
cmp
push
sar
fwait
stos
scas
hlt
fmul
movsl
pop
pop
mov
fmuls
call
jnp
mov
repnz
aad
pop
mov
jmp
lds
cwtl
sub
xor
lds
pop
in
sub
cmpsb
sbb
mov
pop
push
subl
test
fcompl
dec
scas
mov
mov
dec
in
in
sub
in
ljmp
jge
push
jns
es
testb
mov
xlat
mov
or
jnp
inc
fwait
push
repz
xor
rorb
hlt
jl
out
or
cmpsb
adc
and
test
dec
sbb
dec
dec
mov
adc
mov
aad
push
sub
aas
call
adc
mov
clc
outsl
mov
and
dec
xor
mov
test
xchg
daa
hlt
dec
js
rcrb
sub
aam
js
arpl
int
jbe
stc
cs
dec
js
out
xor
outsb
stos
pop
jg
mov
mov
and
ljmp
cmp
pop
jp
push
addb
pop
jno
cld
notb
leave
jmp
pushf
ds
mov
sub
xchg
pop
dec
adc
adcb
or
call
push
and
push
aad
pop
adc
adc
xchg
and
cmp
pop
fnstenv
stos
cld
jo
xchg
mov
jae
pop
jecxz
mov
rorb
xchg
and
mov
xor
outsl
sub
repnz
or
push
push
dec
or
insl
mov
xchg
sub
xor
incb
test
inc
cli
or
mov
sbb
andl
sti
into
enter
add
xlat
in
mov
subl
and
daa
loop
push
ss
or
lret
xchg
sub
fwait
and
aad
or
push
test
xchg
jmp
es
pop
icebp
mov
stos
xor
cld
xchg
xchg
int
shrb
cmp
rorl
adc
add
fwait
ljmp
and
or
xchg
and
out
pop
fisttpll
mov
xor
add
cmpsl
mov
adc
std
and
pop
testb
cmpsl
mov
loop
dec
adc
cmp
jns
testl
inc
test
lret
dec
cmc
mov
mov
jnp
in
dec
or
mov
push
int3
mov
mov
sbb
repnz
leave
aaa
daa
sub
sbb
or
jae
popf
xchg
fistps
ret
in
inc
repnz
sbbl
cmp
imul
adc
rcrb
pusha
mov
movsb
aad
mov
test
mov
fbstp
pusha
jb
aad
fildl
jbe
inc
jbe,pn
ds
shll
mov
out
mov
fstps
dec
mov
cmp
bound
adc
dec
jb
cld
popf
inc
es
movl
inc
decb
popf
mov
jecxz
std
lret
jae
cmp
or
jmp
dec
mov
dec
mov
xor
sbb
sbb
or
or
cmp
and
push
sar
push
daa
inc
sub
shll
mov
loope
js
sbb
push
mov
aas
sub
sub
push
xor
or
xor
sbb
ret
cli
or
jmp
mov
inc
add
and
and
sbb
pop
adc
mov
jmp
scas
xor
cmc
sbb
cmpb
cmp
add
or
pop
leave
sbb
xor
mov
imul
lret
sti
or
push
pop
jmp
frstor
or
loopne
cmpsb
cmpsb
test
loopne
mov
xchg
or
or
shl
or
mov
orl
sbb
adc
push
pop
es
and
jl
inc
push
outsl
push
jne
repnz
xor
mov
je
sahf
mov
pop
insb
add
sub
addr16
cmp
push
mov
and
lcall
dec
inc
mov
add
mov
adc
lret
lods
jg
adc
mov
pop
repz
push
das
adc
cli
gs
xchg
inc
loop
ror
cltd
xlat
cmpsb
mov
xor
sbb
mov
or
cmp
pop
repz
or
jns
jno
cwtl
mov
insl
movhps
push
clc
xchg
xor
and
push
jl
xchg
dec
jg
and
xchg
movsb
outsl
pop
add
xchg
pop
std
sub
add
outsb
test
push
cmp
sbb
mov
cli
aam
es
adc
xchg
clc
ret
push
mov
shlb
les
pop
aam
cmp
add
xor
jnp
or
or
lods
xchg
mov
jo
jae
out
enter
imul
fsubrl
jecxz
jle
lock
mov
mov
into
inc
pop
testb
icebp
popa
jle
jno
sbb
push
mov
inc
mov
mov
add
or
jecxz
xchg
jmp
mov
test
ret
rcll
jecxz
or
xor
das
cmp
xor
and
je
xchg
mov
or
mov
cs
cmp
les
rorb
and
mov
call
adc
mov
std
ds
dec
xchg
ret
xor
inc
adc
ret
shll
push
mov
pop
dec
gs
jns
inc
fdivr
xchg
mov
je
cmp
jp
lret
icebp
pop
or
cmc
aam
loope
lock
pop
pop
test
sub
popa
rcrl
jno
mov
adc
mov
jl
arpl
je
imul
and
fisubl
xor
dec
sbb
and
inc
pop
rcl
jl
cmp
cmp
cld
insl
cmp
imul
sbb
mov
out
adc
jae
insb
pop
insl
es
cmp
adc
sub
out
mov
cs
scas
xchg
test
in
mov
add
int
pop
xchg
pop
pminsw
cmp
ftst
jne
lahf
test
push
test
int3
push
or
outsl
mov
and
jge
xor
sbb
cmpsb
and
lret
repnz
pop
sbbb
repnz
jge
mov
ljmp
inc
and
into
rcll
insb
in
testl
and
inc
xor
mov
jle
shl
xor
mov
push
mov
popa
and
ret
shrb
cmp
adc
sub
lret
and
mov
pop
or
mov
xchg
xchg
cmp
test
xor
aam
dec
pop
call
xor
xor
mov
fwait
cwtl
sbb
sbb
std
fildl
cmp
test
or
lea
cmpsb
cmp
push
sar
fwait
stos
scas
hlt
fmul
movsl
pop
pop
mov
fmuls
call
jnp
mov
repnz
aad
pop
mov
jmp
lds
cwtl
sub
xor
lds
pop
in
sub
cmpsb
sbb
mov
pop
push
subl
test
fcompl
dec
scas
mov
mov
dec
in
in
sub
in
ljmp
jge
push
jns
es
testb
mov
xlat
mov
or
jnp
inc
fwait
push
repz
xor
rorb
hlt
jl
out
or
cmpsb
adc
and
test
dec
sbb
dec
dec
mov
adc
mov
aad
push
sub
aas
call
adc
mov
clc
outsl
mov
and
dec
xor
mov
test
xchg
daa
hlt
dec
js
rcrb
sub
aam
js
arpl
int
jbe
stc
cs
dec
js
out
xor
outsb
stos
pop
jg
mov
mov
and
ljmp
cmp
pop
jp
push
addb
pop
jno
cld
notb
leave
jmp
pushf
ds
mov
sub
xchg
pop
dec
adc
adcb
or
call
push
and
push
aad
pop
adc
adc
xchg
and
cmp
pop
fnstenv
stos
cld
jo
xchg
mov
jae
pop
jecxz
mov
rorb
xchg
and
mov
xor
outsl
sub
repnz
or
push
push
dec
or
insl
mov
xchg
sub
xor
incb
test
inc
cli
or
mov
sbb
andl
sti
into
enter
add
xlat
in
mov
subl
and
daa
loop
push
ss
or
lret
xchg
sub
fwait
and
aad
or
push
test
xchg
jmp
es
pop
icebp
mov
stos
xor
cld
xchg
xchg
int
shrb
cmp
rorl
adc
add
fwait
ljmp
and
or
xchg
and
out
pop
fisttpll
mov
xor
add
cmpsl
mov
adc
std
and
pop
testb
cmpsl
mov
loop
dec
adc
cmp
jns
testl
inc
test
lret
dec
cmc
mov
mov
jnp
in
dec
or
mov
push
int3
mov
mov
sbb
repnz
leave
aaa
daa
sub
sbb
or
jae
popf
xchg
fistps
ret
in
inc
repnz
sbbl
cmp
imul
adc
rcrb
pusha
mov
movsb
aad
mov
test
mov
fbstp
pusha
jb
aad
fildl
jbe
inc
jbe,pn
ds
shll
mov
out
mov
fstps
dec
mov
cmp
bound
adc
dec
jb
cld
popf
inc
es
movl
inc
decb
popf
mov
jecxz
std
lret
jae
cmp
or
jmp
dec
mov
dec
mov
xor
sbb
sbb
or
or
cmp
and
push
sar
push
daa
inc
sub
shll
mov
loope
js
sbb
push
mov
aas
sub
sub
push
xor
or
xor
sbb
ret
cli
or
jmp
mov
inc
add
and
and
sbb
pop
adc
mov
jmp
scas
xor
cmc
sbb
cmpb
sbb
aas
add
or
pop
leave
sbb
xor
mov
imul
lret
sti
or
push
pop
jmp
frstor
or
loopne
cmpsb
cmpsb
test
loopne
mov
xchg
or
or
shl
or
mov
orl
sbb
adc
push
pop
es
and
jl
inc
push
outsl
push
jne
repnz
xor
mov
je
sahf
mov
pop
insb
add
sub
addr16
cmp
push
mov
and
lcall
dec
inc
mov
add
mov
adc
lret
lods
jg
adc
mov
pop
repz
push
das
adc
cli
gs
xchg
inc
loop
ror
cltd
xlat
cmpsb
mov
xor
sbb
mov
or
cmp
pop
repz
or
jns
jno
cwtl
mov
insl
movhps
push
clc
xchg
xor
and
push
jl
xchg
dec
jg
and
xchg
movsb
outsl
pop
add
xchg
pop
std
sub
add
outsb
test
push
cmp
sbb
mov
cli
aam
es
adc
xchg
clc
ret
push
mov
shlb
les
pop
aam
cmp
add
xor
jnp
or
or
lods
xchg
mov
jo
jae
out
enter
imul
fsubrl
jecxz
jle
lock
mov
mov
into
inc
pop
testb
icebp
popa
jle
jno
sbb
push
mov
inc
mov
mov
add
or
jecxz
xchg
jmp
mov
test
ret
rcll
jecxz
or
xor
das
cmp
xor
and
je
xchg
mov
or
mov
cs
cmp
les
rorb
and
mov
call
adc
mov
std
ds
dec
xchg
ret
xor
inc
adc
ret
shll
push
mov
pop
dec
gs
jns
inc
fdivr
xchg
mov
je
cmp
jp
lret
icebp
pop
or
cmc
aam
loope
lock
pop
pop
test
sub
popa
rcrl
jno
mov
adc
mov
jl
arpl
je
imul
and
fisubl
xor
dec
sbb
and
inc
pop
rcl
jl
cmp
cmp
cld
insl
cmp
imul
sbb
mov
out
adc
jae
insb
pop
insl
es
cmp
adc
sub
out
mov
cs
scas
xchg
test
in
mov
add
int
pop
xchg
pop
pminsw
cmp
ftst
jne
lahf
test
push
test
int3
push
or
outsl
mov
and
jge
xor
sbb
cmpsb
and
lret
repnz
pop
sbbb
repnz
jge
mov
ljmp
inc
and
into
rcll
insb
in
testl
and
inc
xor
mov
jle
shl
xor
mov
push
mov
popa
and
ret
shrb
cmp
adc
sub
lret
and
mov
pop
or
mov
xchg
xchg
cmp
test
xor
aam
dec
pop
call
xor
xor
mov
fwait
cwtl
sbb
sbb
std
fildl
cmp
test
or
lea
cmpsb
cmp
push
sar
fwait
stos
scas
hlt
fmul
movsl
pop
pop
mov
fmuls
call
jnp
mov
repnz
aad
pop
mov
jmp
lds
cwtl
sub
xor
lds
pop
in
sub
cmpsb
sbb
mov
pop
push
subl
test
fcompl
dec
scas
mov
mov
dec
in
in
sub
in
ljmp
jge
push
jns
es
testb
mov
xlat
mov
or
jnp
inc
fwait
push
repz
xor
rorb
hlt
jl
out
or
cmpsb
adc
and
test
dec
sbb
dec
dec
mov
adc
mov
aad
push
sub
aas
call
adc
mov
clc
outsl
mov
and
dec
xor
mov
test
xchg
daa
hlt
dec
js
rcrb
sub
aam
js
arpl
int
jbe
stc
cs
dec
js
out
xor
outsb
stos
pop
jg
mov
mov
and
ljmp
cmp
pop
jp
push
addb
pop
jno
cld
notb
leave
jmp
pushf
ds
mov
sub
xchg
pop
dec
adc
adcb
or
call
push
and
push
aad
pop
adc
adc
xchg
and
cmp
pop
fnstenv
stos
cld
jo
xchg
mov
jae
pop
jecxz
mov
rorb
xchg
and
mov
xor
outsl
sub
repnz
or
push
push
dec
or
insl
mov
xchg
sub
xor
incb
test
inc
cli
or
mov
sbb
andl
sti
into
enter
add
xlat
in
mov
subl
and
daa
loop
push
ss
or
lret
xchg
sub
fwait
and
aad
or
push
test
xchg
jmp
es
pop
icebp
mov
stos
xor
cld
xchg
xchg
int
shrb
cmp
rorl
adc
add
fwait
ljmp
and
or
xchg
and
out
pop
fisttpll
mov
xor
add
cmpsl
mov
adc
std
and
pop
testb
cmpsl
mov
loop
dec
adc
cmp
jns
testl
inc
test
lret
dec
cmc
mov
mov
jnp
in
dec
or
mov
push
int3
mov
mov
sbb
repnz
leave
aaa
daa
sub
sbb
or
jae
popf
xchg
fistps
ret
in
inc
repnz
sbbl
cmp
imul
adc
rcrb
pusha
mov
movsb
aad
mov
test
mov
fbstp
pusha
jb
aad
fildl
jbe
inc
jbe,pn
ds
shll
mov
out
mov
fstps
dec
mov
cmp
bound
adc
dec
jb
cld
popf
inc
es
movl
inc
decb
popf
mov
jecxz
std
lret
jae
cmp
or
jmp
dec
mov
dec
mov
xor
sbb
sbb
or
or
cmp
and
push
sar
push
daa
inc
sub
shll
mov
loope
js
sbb
push
mov
aas
sub
sub
push
xor
or
xor
sbb
ret
cli
or
jmp
mov
inc
add
and
and
sbb
pop
adc
mov
jmp
scas
xor
cmc
sbb
cmpb
clc
or
add
or
pop
leave
sbb
xor
mov
imul
lret
sti
or
push
pop
jmp
frstor
or
loopne
cmpsb
cmpsb
test
loopne
mov
xchg
or
or
shl
or
mov
orl
sbb
adc
push
pop
es
and
jl
inc
push
outsl
push
jne
repnz
xor
mov
je
sahf
mov
pop
insb
add
sub
addr16
cmp
push
mov
and
lcall
dec
inc
mov
add
mov
adc
lret
lods
jg
adc
mov
pop
repz
push
das
adc
cli
gs
xchg
inc
loop
ror
cltd
xlat
cmpsb
mov
xor
sbb
mov
or
cmp
pop
repz
or
jns
jno
cwtl
mov
insl
movhps
push
clc
xchg
xor
and
push
jl
xchg
dec
jg
and
xchg
movsb
outsl
pop
add
xchg
pop
std
sub
add
outsb
test
push
cmp
sbb
mov
cli
aam
es
adc
xchg
clc
ret
push
mov
shlb
les
pop
aam
cmp
add
xor
jnp
or
or
lods
xchg
mov
jo
jae
out
enter
imul
fsubrl
jecxz
jle
lock
mov
mov
into
inc
pop
testb
icebp
popa
jle
jno
sbb
push
mov
inc
mov
mov
add
or
jecxz
xchg
jmp
mov
test
ret
rcll
jecxz
or
xor
das
cmp
xor
and
je
xchg
mov
or
mov
cs
cmp
les
rorb
and
mov
call
adc
mov
std
ds
dec
xchg
ret
xor
inc
adc
ret
shll
push
mov
pop
dec
gs
jns
inc
fdivr
xchg
mov
je
cmp
jp
lret
icebp
pop
or
cmc
aam
loope
lock
pop
pop
test
sub
popa
rcrl
jno
mov
adc
mov
jl
arpl
je
imul
and
fisubl
xor
dec
sbb
and
inc
pop
rcl
jl
cmp
cmp
cld
insl
cmp
imul
sbb
mov
out
adc
jae
insb
pop
insl
es
cmp
adc
sub
out
mov
cs
scas
xchg
test
in
mov
add
int
pop
xchg
pop
pminsw
cmp
ftst
jne
lahf
test
push
test
int3
push
or
outsl
mov
and
jge
xor
sbb
cmpsb
and
lret
repnz
pop
sbbb
repnz
jge
mov
ljmp
inc
and
into
rcll
insb
in
testl
and
inc
xor
mov
jle
shl
xor
mov
push
mov
popa
and
ret
shrb
cmp
adc
sub
lret
and
mov
pop
or
mov
xchg
xchg
cmp
test
xor
aam
dec
pop
call
xor
xor
mov
fwait
cwtl
sbb
sbb
std
fildl
cmp
test
or
lea
cmpsb
cmp
push
sar
fwait
stos
scas
hlt
fmul
movsl
pop
pop
mov
fmuls
call
jnp
mov
repnz
aad
pop
mov
jmp
lds
cwtl
sub
xor
lds
pop
in
sub
cmpsb
sbb
mov
pop
push
subl
test
fcompl
dec
scas
mov
mov
dec
in
in
sub
in
ljmp
jge
push
jns
es
testb
mov
xlat
mov
or
jnp
inc
fwait
push
repz
xor
rorb
hlt
jl
out
or
cmpsb
adc
and
test
dec
sbb
dec
dec
mov
adc
mov
aad
push
sub
aas
call
adc
mov
clc
outsl
mov
and
dec
xor
mov
test
xchg
daa
hlt
dec
js
rcrb
sub
aam
js
arpl
int
jbe
stc
cs
dec
js
out
xor
outsb
stos
pop
jg
mov
mov
and
ljmp
cmp
pop
jp
push
addb
pop
jno
cld
notb
leave
jmp
pushf
ds
mov
sub
xchg
pop
dec
adc
adcb
or
call
push
and
push
aad
pop
adc
adc
xchg
and
cmp
pop
fnstenv
stos
cld
jo
xchg
mov
jae
pop
jecxz
mov
rorb
xchg
and
mov
xor
outsl
sub
repnz
or
push
push
dec
or
insl
mov
xchg
sub
xor
incb
test
inc
cli
or
mov
sbb
andl
sti
into
enter
add
xlat
in
mov
subl
and
daa
loop
push
ss
or
lret
xchg
sub
fwait
and
aad
or
push
test
xchg
jmp
es
pop
icebp
mov
stos
xor
cld
xchg
xchg
int
shrb
cmp
rorl
adc
add
fwait
ljmp
and
or
xchg
and
out
pop
fisttpll
mov
xor
add
cmpsl
mov
adc
std
and
pop
testb
cmpsl
mov
loop
dec
adc
cmp
jns
testl
inc
test
lret
dec
cmc
mov
mov
jnp
in
dec
or
mov
push
int3
mov
mov
sbb
repnz
leave
aaa
daa
sub
sbb
or
jae
popf
xchg
fistps
ret
in
inc
repnz
sbbl
cmp
imul
adc
rcrb
pusha
mov
movsb
aad
mov
test
mov
fbstp
pusha
jb
aad
fildl
jbe
inc
jbe,pn
ds
shll
mov
out
mov
fstps
dec
mov
cmp
bound
adc
dec
jb
cld
popf
inc
es
movl
inc
decb
popf
mov
jecxz
std
lret
jae
cmp
or
jmp
dec
mov
dec
mov
xor
sbb
sbb
or
or
cmp
and
push
sar
push
daa
inc
sub
shll
mov
loope
js
sbb
push
mov
aas
sub
sub
push
xor
or
xor
sbb
ret
cli
or
jmp
mov
inc
add
and
and
sbb
pop
adc
mov
jmp
scas
xor
cmc
sbb
cmpb
fcoms
aas
add
or
pop
leave
sbb
xor
mov
imul
lret
sti
or
push
pop
jmp
frstor
or
loopne
cmpsb
cmpsb
test
loopne
mov
xchg
or
or
shl
or
mov
orl
sbb
adc
push
pop
es
and
jl
inc
push
outsl
push
jne
repnz
xor
mov
je
sahf
mov
pop
insb
add
sub
addr16
cmp
push
mov
and
lcall
dec
inc
mov
add
mov
adc
lret
lods
jg
adc
mov
pop
repz
push
das
adc
cli
gs
xchg
inc
loop
ror
cltd
xlat
cmpsb
mov
xor
sbb
mov
or
cmp
pop
repz
or
jns
jno
cwtl
mov
insl
movhps
push
clc
xchg
xor
and
push
jl
xchg
dec
jg
and
xchg
movsb
outsl
pop
add
xchg
pop
std
sub
add
outsb
test
push
cmp
sbb
mov
cli
aam
es
adc
xchg
clc
ret
push
mov
shlb
les
pop
aam
cmp
add
xor
jnp
or
or
lods
xchg
mov
jo
jae
out
enter
imul
fsubrl
jecxz
jle
lock
mov
mov
into
inc
pop
testb
icebp
popa
jle
jno
sbb
push
mov
inc
mov
mov
add
or
jecxz
xchg
jmp
mov
test
ret
rcll
jecxz
or
xor
das
cmp
xor
and
je
xchg
mov
or
mov
cs
cmp
les
rorb
and
mov
call
adc
mov
std
ds
dec
xchg
ret
xor
inc
adc
ret
shll
push
mov
pop
dec
gs
jns
inc
fdivr
xchg
mov
je
cmp
jp
lret
icebp
pop
or
cmc
aam
loope
lock
pop
pop
test
sub
popa
rcrl
jno
mov
adc
mov
jl
arpl
je
imul
and
fisubl
xor
dec
sbb
and
inc
pop
rcl
jl
cmp
cmp
cld
insl
cmp
imul
sbb
mov
out
adc
jae
insb
pop
insl
es
cmp
adc
sub
out
mov
cs
scas
xchg
test
in
mov
add
int
pop
xchg
pop
pminsw
cmp
ftst
jne
lahf
test
push
test
int3
push
or
outsl
mov
and
jge
xor
sbb
cmpsb
and
lret
repnz
pop
sbbb
repnz
jge
mov
ljmp
inc
and
into
rcll
insb
in
testl
and
inc
xor
mov
jle
shl
xor
mov
push
mov
popa
and
ret
shrb
cmp
adc
sub
lret
and
mov
pop
or
mov
xchg
xchg
cmp
test
xor
aam
dec
pop
call
xor
xor
mov
fwait
cwtl
sbb
sbb
std
fildl
cmp
test
or
lea
cmpsb
cmp
push
sar
fwait
stos
scas
hlt
fmul
movsl
pop
pop
mov
fmuls
call
jnp
mov
repnz
aad
pop
mov
jmp
lds
cwtl
sub
xor
lds
pop
in
sub
cmpsb
sbb
mov
pop
push
subl
test
fcompl
dec
scas
mov
mov
dec
in
in
sub
in
ljmp
jge
push
jns
es
testb
mov
xlat
mov
or
jnp
inc
fwait
push
repz
xor
rorb
hlt
jl
out
or
cmpsb
adc
and
test
dec
sbb
dec
dec
mov
adc
mov
aad
push
sub
aas
call
adc
mov
clc
outsl
mov
and
dec
xor
mov
test
xchg
daa
hlt
dec
js
rcrb
sub
aam
js
arpl
int
jbe
stc
cs
dec
js
out
xor
outsb
stos
pop
jg
mov
mov
and
ljmp
cmp
pop
jp
push
addb
pop
jno
cld
notb
leave
jmp
pushf
ds
mov
sub
xchg
pop
dec
adc
adcb
or
call
push
and
push
aad
pop
adc
adc
xchg
and
cmp
pop
fnstenv
stos
cld
jo
xchg
mov
jae
pop
jecxz
mov
rorb
xchg
and
mov
xor
outsl
sub
repnz
or
push
push
dec
or
insl
mov
xchg
sub
xor
incb
test
inc
cli
or
mov
sbb
andl
sti
into
enter
add
xlat
in
mov
subl
and
daa
loop
push
ss
or
lret
xchg
sub
fwait
and
aad
or
push
test
xchg
jmp
es
pop
icebp
mov
stos
xor
cld
xchg
xchg
int
shrb
cmp
rorl
adc
add
fwait
ljmp
and
or
xchg
and
out
pop
fisttpll
mov
xor
add
cmpsl
mov
adc
std
and
pop
testb
cmpsl
mov
loop
dec
adc
cmp
jns
testl
inc
test
lret
dec
cmc
mov
mov
jnp
in
dec
or
mov
push
int3
mov
mov
sbb
repnz
leave
aaa
daa
sub
sbb
or
jae
popf
xchg
fistps
ret
in
inc
repnz
sbbl
cmp
imul
adc
rcrb
pusha
mov
movsb
aad
mov
test
mov
fbstp
pusha
jb
aad
fildl
jbe
inc
jbe,pn
ds
shll
mov
out
mov
fstps
dec
mov
cmp
bound
adc
dec
jb
cld
popf
inc
es
movl
inc
decb
popf
mov
jecxz
std
lret
jae
cmp
or
jmp
dec
mov
dec
mov
xor
sbb
sbb
or
or
cmp
and
push
sar
push
daa
inc
sub
shll
mov
loope
js
sbb
push
mov
aas
sub
sub
push
xor
or
xor
sbb
ret
cli
or
jmp
mov
inc
add
and
and
sbb
pop
adc
mov
jmp
scas
xor
cmc
sbb
cmpb
pop
test
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
test
aas
add
test
add
lret
add
add
add
test
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
imul
gs
xor
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
add
add
je
imul
