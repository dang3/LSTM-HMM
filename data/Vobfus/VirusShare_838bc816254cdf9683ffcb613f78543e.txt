testb
jl
inc
add
aam
mov
mov
and
cmp
shlb
jns
cmp
or
cmp
sbb
sbb
xor
dec
loopne
in
xor
je
sub
pop
iret
xchg
out
gs
sbb
push
inc
sahf
and
cld
mov
and
inc
inc
inc
or
xor
and
xor
sbb
call
xor
pushf
cmp
out
out
fs
fcomp
adc
xchg
xchg
xchg
js
shrb
jo
adc
in
repnz
xor
adc
adc
and
iret
xchg
hlt
lods
adc
movsb
pop
inc
inc
inc
sahf
adc
mov
mov
test
mov
mov
xor
add
shlb
call
jmp
xor
das
loope
and
cld
inc
out
xchg
int
dec
xchg
dec
in
sub
incl
jne
dec
xor
inc
xlat
cli
repz
mov
bound
call
scas
stc
push
mov
jbe
add
fistps
cmpsb
cmp
xor
or
stos
jae
add
add
xchg
mov
outsl
mov
dec
or
add
jae
popa
outsb
addr16
std
in
mov
incl
add
xchg
inc
add
add
sub
fwait
imul
lods
add
and
pop
push
call
or
adc
movaps
faddp
xor
sub
add
pop
fnstsw
inc
popl
addb
and
mull
add
rolb
adc
add
incl
adc
leave
add
add
xchg
roll
incl
movd
fcoms
jo
outsb
insl
fisttpll
jmp
pusha
and
out
outsl
add
imul
xor
inc
jo
data16
jmp
pop
pusha
push
and
or
and
push
and
pusha
mov
mov
outsb
mulb
ja
cmp
fldz
fwait
jg
push
jo
setg
pusha
xchg
cmp
jnp
popw
jle
add
pusha
frstor
addr16
add
mov
out
idivb
cmp
rcr
sar
invd
mov
popf
sbb
cmp
and
pop
jnp
psubb
mulb
ss
popa
cvtpi2ps
cmp
sbbb
add
lret
lods
mov
sbb
xchg
subl
jl
cmp
fsubrs
add
aas
mov
ss
data16
push
add
add
jge
inc
push
cmp
add
cmpsb
mov
add
add
pop
out
and
inc
and
addb
xlat
popa
mov
or
or
ja
sbb
sub
sub
push
adc
test
out
push
xchg
xchg
pop
sub
mov
jmp
pop
xor
daa
mov
push
sub
jp
sbb
add
loopne
clc
cmc
jne
jae
mov
push
mov
arpl
lock
add
test
cli
outsl
das
and
add
jb
xor
add
das
xchg
lret
stos
or
adc
mov
add
sti
xchg
inc
add
insb
inc
sub
push
pushl
gs
xor
cmp
iret
adc
pop
xchg
xor
jp
push
fnstenv
adc
or
and
add
ss
adc
push
ja
or
lea
fstl
xor
es
bound
insl
and
mov
or
xor
add
and
testb
test
push
popa
out
add
adc
xor
jle
imulb
xor
sbb
jmp
sub
inc
outsl
insl
insl
fildl
mov
add
or
and
out
inc
mov
add
push
bound
insl
mov
or
icebp
dec
rorl
fcmovnbe
push
inc
fmul
and
fs
or
inc
es
into
sbb
outsb
or
push
fcomi
fisttpll
push
rolb
iret
icebp
adc
nop
dec
xor
xor
adc
rorl
or
jg
in
fists
adc
sbb
mov
cmp
lock
sbb
mov
fnstenv
sbb
add
sbb
adc
dec
mov
mov
and
sub
sub
or
push
imul
jne
gs
outsl
mov
push
scas
and
sbb
jae
fnsave
adc
inc
popa
insl
inc
nop
pop
lcall
adc
arpl
jg
mov
rolb
mov
rcpps
cmp
or
pop
cmpsb
or
in
push
and
jae
push
imul
insb
adc
xor
mov
nop
out
insb
sub
cmp
adc
xor
sbb
and
imul
pop
push
xor
sbb
push
pushf
addr16
sbb
stos
sbb
mov
fs
pop
dec
outsl
outsb
gs
pop
fldt
and
shll
add
and
sbb
movsb
pusha
ljmp
imul
and
ficoml
popa
pop
sbb
and
bound
nop
rcrl
and
fs
xor
dec
loopne
jp
fs
nop
xor
ja
shlb
push
lock
xor
pop
push
idivb
adc
sbb
pop
and
addl
sbbb
add
xor
ret
and
xchg
roll
sbb
cmpsb
and
xor
out
jbe
insb
sbb
or
daa
and
popa
jo
mov
pushf
loopne
adc
xchg
sub
jo
nop
rcrl
sarb
fsubrs
jbe
add
jle
cmpl
fs
or
ja
pop
subb
rcll
jge
xorl
jne
pusha
or
sbb
sub
xor
addb
mov
nop
shrl
inc
lcall
xor
sbb
add
ret
adc
xor
and
or
int
xchg
xchg
xchg
daa
nop
dec
push
stc
push
mov
ss
push
dec
shlb
cmp
jne
xchg
xchg
xor
outsb
xor
xor
test
xor
lea
inc
jb
jbe
adc
add
push
add
pop
insl
orl
add
xor
imul
js
sbb
sbb
xor
mov
xor
insl
xchg
arpl
xor
xor
xor
pop
sbb
push
lret
xorl
ss
lcall
sub
xor
pusha
sbb
inc
mov
mov
sbb
xor
ds
incl
leave
inc
and
xor
mov
ds
stos
leave
mov
nop
cmp
je
add
cs
jno
push
sahf
sub
xor
daa
dec
shll
jge
in
add
imul
dec
addr16
jnp
mov
lret
inc
add
xor
ss
sbb
adcl
ds
jmp
sbb
movlps
addl
imul
in
iret
roll
or
lock
pop
inc
xchg
add
jo
je
add
jmp
dec
push
addr16
pop
mov
adc
pop
add
mov
sbb
jo
jmp
add
sbb
incl
or
pop
dec
test
bound
icebp
in
mov
adc
or
adc
popa
jg
push
pop
push
inc
xor
and
jns
sub
or
sahf
push
xor
mov
enter
jmp
pop
js
pop
shll
xchg
mov
pop
pop
insl
addr16
jl
sbbb
cmp
pushl
std
orb
cwtl
adc
xor
add
and
and
insb
mov
test
int3
imul
add
mov
ret
or
mov
jo
in
jbe
test
add
sub
add
std
xchg
mov
or
int3
sub
loope
adc
add
xchg
cmp
mov
add
cmp
jl
add
and
mov
mov
mov
pop
sbb
mov
inc
faddl
cmpsb
imul
imul
mov
test
loop
mov
out
jno
sub
adc
pop
mov
insb
add
je
lret
and
xchg
movntps
and
cmpsb
pop
push
add
and
pop
outsb
mov
psubb
pushf
ret
inc
mov
or
orl
sub
and
mov
sbb
pushf
adc
sub
jg
loope
outsb
add
lahf
xor
xor
psraw
in
lahf
pop
insb
xchg
int
pushf
and
push
nop
and
jl
ret
add
pop
sbb
pop
fnstenv
jns
out
pop
adc
in
pop
mov
jbe
scas
fadds
jl
mov
hlt
mov
in
shrb
out
out
add
pop
inc
sbb
iret
fsubrl
mov
add
js
or
in
stos
js
or
add
adc
or
ss
inc
adc
clc
dec
mov
mov
test
or
push
pop
add
imul
add
int3
jne
pop
sub
push
mov
insl
popa
add
sbb
cmp
adc
enter
or
es
fsubrs
mov
in
xorl
ret
in
test
sub
push
sbb
mov
icebp
mov
or
push
fs
arpl
je
mov
mov
das
cwtl
fdivrl
pop
repnz
cwtl
fcoml
cwtl
loopne
arpl
daa
out
mov
sbb
add
fiaddl
and
iret
mov
addr16
ret
pop
fcoml
mov
in
mov
in
out
mov
loope
scas
jmp
xor
add
push
and
pop
push
repnz
clc
and
sbb
sbb
mov
pop
pusha
xor
ss
adc
push
decl
orb
test
xchg
adc
dec
and
lret
inc
xchg
dec
adc
jecxz
fdivl
and
mov
leave
pop
dec
arpl
xor
cmpsb
sbb
pcmpeqb
movl
add
sbb
scas
jle
int3
aas
cld
out
mov
cmp
andl
xor
add
pop
sbb
mov
or
xor
fwait
cli
outsl
aam
xlat
add
inc
cmp
aaa
in
or
adc
add
inc
ds
adcb
inc
add
mov
lcall
popf
jge
cmp
mov
sti
mov
xchg
orl
sub
arpl
pop
ret
or
movsb
or
dec
inc
cs
xlat
mov
pusha
mov
inc
lods
add
insl
out
mov
mov
or
rolb
pop
iret
fidivl
pop
pop
lock
ror
fadds
ficoms
fucomp
lahf
dec
mov
sarb
pop
dec
and
xchg
or
xchg
xor
pop
sub
adc
cmp
cvttps2pi
cmp
xor
fsubr
xorb
psubb
jmp
cwtl
add
sub
in
fisttpl
jle
pusha
or
pusha
sahf
xlat
cmovb
outsb
pop
and
add
stos
jnp
pop
mov
sahf
enter
mov
out
movsb
pusha
xchg
lock
dec
fisttpl
out
gs
dec
pop
xchg
lock
push
nop
sbb
scas
cmp
or
faddl
adc
outsb
mov
mov
pop
setbe
or
fsubl
inc
cwtl
fstpl
xchg
int
xchg
inc
cmp
rolb
and
das
int3
ficoms
inc
xchg
in
jb
arpl
mov
jb
fcompl
les
je
in
jmp
std
mov
adc
jae
xor
fs
pop
repnz
mul
negl
ss
or
lahf
xor
push
test
testb
pop
xchg
sti
enter
mov
pop
push
shrl
dec
out
dec
cmp
mov
cltd
ds
imul
add
enter
fsub
cmp
jae
or
xchg
and
mov
cmp
out
call
lds
or
jmp
ret
mov
sti
mov
stos
inc
pop
mov
add
adc
mov
sbb
and
adc
repnz
xlat
xor
push
or
xchg
and
pop
out
cmp
lsl
or
push
rcrl
or
test
out
adc
fstpl
xlat
cwtl
push
adc
das
inc
inc
sbb
sbb
sbb
pop
mov
repnz
call
pop
mov
pop
pushf
xchg
nop
dec
call
cwtl
scas
in
cs
xor
and
add
faddl
inc
imul
adc
das
or
mov
insb
pop
js
add
scas
dec
push
aas
mov
addps
adc
divb
push
dec
jg
ret
int
pop
pop
pushf
add
out
pop
xlat
popf
mov
lods
pop
jnp
aaa
mov
add
cmpsl
orb
outsl
scas
sti
fsubrl
mov
and
sub
or
sbb
aas
push
mov
icebp
xchg
insb
mov
xor
add
xchg
xchg
addb
data16
mov
adc
in
lret
mov
push
hlt
in
jl
addl
cmp
add
nop
arpl
call
pusha
adc
aaa
mov
fidivrs
cmp
inc
int
add
jne
nop
adc
rcrb
mov
mov
sub
popf
cmp
push
fs
int
push
enter
nop
adc
rcrb
sbb
pop
or
cmp
adc
mov
dec
mov
pop
push
add
out
jl
dec
pop
loope
pop
inc
inc
hlt
jecxz
scas
inc
pop
ja
pop
addr16
jmp
jecxz
push
pop
push
cmp
ret
add
pop
adcb
adc
jnp
jne
xlat
test
mov
pop
mov
mov
push
in
stos
adc
sbb
pusha
clc
mov
adc
outsl
add
and
adc
add
enter
or
sub
adc
xor
sbb
pop
fadd
sub
je
xlat
jne
insb
add
nop
pushf
add
int3
shlb
jae
and
add
in
pusha
pop
sbb
pop
pop
pop
pushf
stos
add
pop
jae
lahf
cs
stos
cltd
adcl
pop
aam
hlt
jg
sub
xchg
mov
cld
aaa
leave
dec
push
testb
cmpl
sub
mull
mov
lret
adc
xor
imul
addr16
or
lsl
addb
xlat
daa
in
into
loop
out
pop
pop
pop
hlt
out
testl
add
test
adc
mov
push
scas
js
inc
lock
sub
pop
fadd
xor
pop
faddl
cmp
in
scas
cmp
arpl
lock
cmp
clc
jbe
jmp
lret
xchg
and
cmp
shr
add
ljmp
emms
inc
test
out
mov
bound
jae
out
movsb
add
shll
dec
out
test
adc
movsb
or
pop
and
mov
or
je
inc
addb
inc
fisubrl
push
jl
js
xor
subl
xor
xor
xlat
xor
js
int3
js
test
inc
xor
inc
int
jbe
jnp
xchg
das
mov
push
sub
aas
push
add
mov
pop
shll
out
cmp
or
or
icebp
ret
ficoms
or
push
jnp
or
fs
pop
repnz
jne
or
jo
add
fs
notl
pop
fs
pushf
push
xchg
and
push
pop
movsb
pcmpeqw
cmp
cmp
inc
movsb
dec
xlat
pop
xchg
sbb
popf
ror
xor
mov
mov
add
jne
jo
ja
insb
sub
sbb
aam
mov
mov
loopne
mov
loop
test
arpl
xchg
cmp
fidivs
jmp
loope
dec
pop
repnz
enter
cmp
pop
pushf
cwtl
adc
cmp
pop
jb
jg
xchg
mov
push
cs
negl
jb
add
fwait
jl
jne
imul
add
or
jecxz
adc
nop
add
imul
mov
xor
fbstp
mov
dec
add
and
push
pop
shlb
arpl
fcomps
popa
sbb
xchg
dec
cmp
push
pop
xor
mov
nop
lcall
dec
push
pop
pop
mov
dec
jbe
jmp
jnp
sbb
cmp
cmp
or
or
mov
cmp
jg
je
push
ja
aaa
dec
add
jns
bound
pushl
insb
imul
dec
popa
insl
xor
je
push
sub
pop
test
fwait
lods
jns
leave
xchg
lock
rcrb
outsl
leave
and
sbb
xchg
or
jmp
adc
cmp
cmpb
ret
add
jae
cmpsl
enter
movsb
shrd
test
ja
or
fwait
aam
xchg
dec
mov
push
xchg
fwait
xchg
xor
inc
mov
cmpsb
flds
xor
aad
mov
jae
pop
fwait
scas
pop
add
test
call
fdivr
push
mov
insl
mov
add
xor
test
icebp
add
add
xorb
mov
push
pushf
das
arpl
hlt
cmp
cmp
push
add
xchg
xor
das
add
jmp
sub
cmpsl
dec
adc
sub
add
fs
cltd
sbb
sub
adc
outsl
and
adc
jns
outsl
fsts
loopne
mov
add
call
lcall
loope
mov
sbb
cmp
add
and
push
dec
bound
and
fwait
popf
roll
cld
dec
shl
mov
das
push
pop
rolb
les
data16
mov
jl
sub
ret
rolb
push
xchg
fs
fsubrl
cmp
or
add
popf
arpl
jo
pop
pushf
pcmpgtb
imul
mov
dec
aam
movsb
adc
cmp
inc
dec
pop
xchg
rclb
add
sti
or
push
fidivrs
mov
insb
or
sti
xor
add
js
mov
mov
mov
lcall
mov
repnz
or
aas
xchg
push
xchg
mov
mov
cwtl
or
sub
add
loopne
lcall
loopne
test
mov
add
insb
addb
es
nop
and
pop
popa
les
sub
test
enter
mov
and
mov
orl
mov
xor
shlb
call
pop
push
sub
mov
adc
bound
ja
jb
gs
out
mov
jo
sbb
popa
mov
jae
inc
xor
rorl
or
mov
aas
insb
or
jo
fstl
add
gs
push
lods
jmp
jbe
popa
outsl
or
jne
popa
xchg
pop
push
and
or
and
test
add
jne
jne
cs
rorb
mov
add
xchg
sbb
in
sub
outsl
inc
xor
mov
cmp
outsl
adc
stc
dec
sahf
mov
adc
lock
in
lret
shll
xchg
sbb
pop
lar
arpl
fs
mov
mov
jnp
pop
jbe
pop
clc
add
pop
sub
cmpsb
imul
adc
inc
clc
iret
pavgb
out
xor
pop
aas
pop
cwtl
pop
setl
xor
add
mov
orl
mov
and
lods
or
mov
mov
dec
inc
cld
pop
mov
testl
out
cmpl
faddl
sub
mov
add
ss
punpcklbw
pop
jg
and
aaa
jl
inc
testl
or
dec
pop
insb
lahf
inc
add
xor
inc
mov
jne
jb
inc
orl
add
rcrl
stos
inc
aas
scas
mov
and
push
sbb
pusha
loopne
sarl
sub
mov
and
shll
ret
int
dec
pop
sub
icebp
adc
and
add
cmpsb
cmp
inc
jb
ljmp
inc
or
rolb
insb
daa
loope
inc
inc
mov
into
add
jne
push
int3
daa
les
fmuls
add
add
mov
lcall
movsb
lcall
cmp
les
sub
shrb
call
or
ss
mov
test
fwait
cmpsb
js
or
je
pop
ss
mov
cld
jno
xor
inc
dec
mov
fadds
ret
fwait
into
xchg
add
pop
clc
mov
mov
mov
xchg
adc
cmp
inc
insb
dec
sbb
pop
jmp
pop
loopne
in
pop
insb
jmp
mov
pop
pop
or
push
arpl
scas
push
or
mov
push
jb
xlat
cmp
xor
das
pushf
and
jne
mov
scas
or
cmp
cmp
cmp
insb
jae
add
adc
daa
in
mov
daa
or
test
addr16
je
pop
cld
incb
cld
pop
insb
clc
jo
insl
pop
xor
test
sbb
decb
jmp
insb
sbb
fcmove
mov
or
or
insl
pop
jae
pop
das
adc
fcmovnbe
pop
outsb
mov
lods
sbb
adc
test
and
in
fldcw
in
xchg
hlt
test
push
xor
fldt
or
int3
in
in
cltd
inc
add
mov
adc
mov
mov
imull
mov
scas
pop
sbb
pop
push
imul
je
das
jns
cmp
imul
sbb
fcomps
and
popa
outsl
rorb
shrb
leave
popa
sarb
popa
imul
or
sub
hlt
test
sti
xchg
sbb
xchg
sbb
mov
les
add
sub
xor
add
pusha
leave
push
inc
lret
cmp
cmp
push
leave
mov
leave
and
js
jns,pn
cmpsl
sbb
inc
nop
pop
jo
push
dec
jo
mov
sbb
sbb
dec
xchg
in
andb
mov
pop
pushf
pusha
orl
call
jns
in
int3
pop
sbb
or
inc
inc
ds
inc
dec
sbb
std
cwtl
push
or
in
and
cld
subb
daa
pop
movsb
imull
fs
lock
sbb
in
fsubr
mov
and
pop
push
pop
cmp
int3
in
sbb
enter
jmp
jb
inc
push
pop
or
call
inc
or
in
sbb
nop
insb
and
jecxz
in
and
and
pop
sbb
loope
push
cmp
enter
push
inc
or
mov
push
adc
fldl
cmp
faddl
enter
pop
or
inc
dec
push
mov
xchg
addr16
push
lahf
fldcw
fadds
in
pop
sbb
pop
sbb
xor
and
mov
nop
inc
dec
push
rcl
mov
sbb
or
aam
inc
sbb
in
lock
dec
or
rclb
adc
rcrl
hlt
shlb
insb
and
iret
nop
inc
push
cmp
jb
into
js
lret
cmp
and
mov
nop
inc
push
cmp
jb
nop
movl
dec
adc
sbbl
cmp
les
leave
fadd
pop
adc
ret
inc
dec
test
shrl
adc
rcrb
mov
sbbl
enter
dec
push
xor
mov
nop
push
hlt
mov
pop
in
and
and
pop
sbb
mov
dec
push
xor
pop
sbb
mov
jb
nop
inc
cmp
mov
in
orl
cwtl
mov
pop
sbb
push
or
mov
cmp
enter
mov
enter
and
scas
insb
inc
dec
push
xor
scas
test
jb
inc
cld
lods
test
in
and
and
pop
sbb
loopne
je
cmp
enter
js
xor
leave
inc
mov
insb
sub
mov
jb
hlt
mov
in
and
mov
inc
push
add
mov
xchg
push
pop
shrl
dec
outsl
dec
imul
mov
add
dec
aaa
aaa
insb
push
setp
cmp
js
sbb
or
push
daa
mov
inc
imul
in
cmp
faddl
xchg
enter
fiaddl
nop
xor
push
in
add
xor
movsb
lds
inc
dec
cwtl
imul
ret
cmpsl
pusha
pop
sbb
add
movsl
pop
pop
or
sbbb
test
out
insb
mov
inc
adc
nop
add
pop
mov
test
cmp
inc
and
add
movaps
add
jg
enter
xlat
aam
scas
imul
add
sbb
maskmovq
notl
inc
mov
cmpsl
pushf
pop
scas
pop
jbe
pusha
sub
fsubs
aam
xor
add
scas
fstps
call
fnsave
into
scas
paddb
jo
sub
pmuludq
push
jne
fmuls
xor
xor
mov
cmp
addb
cmp
fdivr
fbstp
cld
or
sub
and
pop
add
pop
decl
add
add
adc
or
mov
hlt
call
cmp
dec
push
add
pushf
mov
pop
push
add
aaa
insb
dec
xor
aas
mov
enter
jl
call
xor
pop
mov
test
mov
hlt
call
and
or
mov
outsb
sbb
push
or
xchg
pop
sbb
cs
push
pop
pop
inc
xchg
ror
scas
mov
pushf
jmp
sub
shrb
mov
test
xchg
lret
mov
inc
add
push
jl
pushf
sub
and
lock
mov
rolb
cld
pop
mov
mov
xchg
and
orb
fsubl
in
push
fwait
add
dec
shrl
call
push
daa
cmp
xor
shll
mov
dec
rcr
out
add
push
fnstenv
cmpsb
mov
xor
ss
inc
scas
push
ret
pop
push
aas
cmpsb
imul
insb
lcall
inc
xor
shll
jg
cmpsl
mov
testl
dec
push
cmpsb
adcl
addb
aas
test
inc
dec
adc
popf
cmp
repnz
adc
inc
push
add
in
call
dec
pop
leave
sub
sbbl
loop
jge
test
in
push
aad
jnp
nop
and
cmc
mov
add
adc
leave
and
push
repnz
mov
adc
cmp
arpl
dec
push
mov
daa
bound
daa
inc
xchg
ror
and
lods
aad
pushf
ljmp
sbb
xor
dec
adc
pop
leave
fsubrl
and
imul
notb
insl
sub
negb
sub
mov
imul
repnz
push
mov
cmpsb
in
mov
add
mov
in
ror
adc
sub
mov
daa
fldenv
add
jge
pop
xor
dec
adc
in
or
imul
loop
movsl
ret
popa
psubb
and
hlt
dec
popa
stc
add
loope
mov
mov
js
pop
xchg
add
cmp
mov
mov
add
or
in
mov
and
addb
negl
shlb
call
mov
das
jae
push
mov
in
cmpsl
ljmp
or
out
add
xor
pop
mov
and
dec
xchg
shll
mov
in
pop
inc
xor
pop
lock
fistpl
xor
add
lret
pop
xlat
sub
data16
lock
dec
shll
jo
je
out
call
or
dec
rol
int3
fsub
hlt
cmpsb
imul
out
lcall
in
cmpsb
cmp
pushf
mov
xor
add
lock
int
add
ss
lea
fs
into
add
sub
je
testb
flds
rolb
xor
mov
rcl
call
in
aaa
cmpsb
shll
mov
lods
or
aas
pop
mov
pop
lcall
push
filds
insb
jl
lcall
les
sbb
mov
fidivs
mov
add
ja
xor
fstl
in
mov
lods
cmp
in
loope
loop
adc
adc
jl
mov
jne
gs
xor
jo
cmp
mov
sub
dec
dec
push
in
in
cmp
insb
and
call
loope
jg
out
out
mov
inc
stos
mov
insb
lcall
fdivs
inc
xor
push
lock
cld
xlat
xor
add
and
pop
xor
dec
shll
pusha
insb
js
push
aam
test
aaa
nop
out
cmpsb
fwait
sub
lods
add
aam
jmp
rcrb
add
add
or
sub
jmp
cmpsb
imul
adc
test
fwait
push
in
dec
movsb
scas
or
testl
mov
test
shrl
mov
lcall
fsubr
hlt
mov
xor
icebp
add
sub
fildl
or
daa
ljmp
add
inc
cmp
jg
shll
add
nop
pushf
je
shll
mov
int3
aaa
fcom
je
fld1
adc
lret
add
shlb
hlt
pop
add
xchg
cmc
jl
call
outsb
shll
fsubr
testb
add
xor
xor
roll
stc
mov
mov
test
mov
cmp
jg
add
pop
in
sti
xchg
push
roll
data16
push
xor
add
lock
lcall
sub
xor
dec
jmp
mov
pop
and
das
pop
jo
hlt
ret
dec
shll
sub
mov
ss
loopne
in
xlat
xchg
fst
clc
aaa
imul
add
shll
sub
xor
test
mov
cld
sub
add
jo
xlat
xchg
das
xor
cmp
sti
lcall
pop
enter
mov
scas
imul
add
sbb
xor
dec
imul
mov
pop
lods
pop
mov
lcall
add
xor
sub
inc
pop
push
xor
xchg
shlb
jl
aaa
add
and
xor
shll
cmp
pop
fs
shll
movsb
cli
fwait
scas
xor
enter
cmpsb
jmp
loopne
add
lcall
pop
pop
add
into
mov
fadds
ret
add
or
jmp
add
push
mov
popf
or
add
lcall
dec
mov
cmpsb
jmp
insb
sub
and
cmp
xor
cmpsb
imul
lcall
pop
push
cmpsb
orb
dec
movsb
mov
es
cmp
imul
arpl
sbb
or
adc
add
pushf
fdivl
jmp
scas
ja
xor
inc
and
sub
lret
cmpsb
jmp
nop
rcrb
or
xor
cld
mov
pop
lsl
popf
mov
xchg
add
lods
andb
adc
adc
enter
mov
dec
movsb
add
sbb
jmp
test
adc
aam
mov
mov
jl
insl
lcall
sbb
jae
adc
adc
pop
ss
gs
add
test
sbb
insb
dec
inc
mov
sbb
sbb
adc
add
insb
frstor
cmp
clc
push
push
jnp
add
jmp
popf
fistl
arpl
push
and
xchg
xor
push
cwtl
and
out
imul
sbbl
sub
mov
cmp
cmp
inc
add
outsb
out
add
adc
test
push
das
dec
fdivl
out
add
xor
mov
aaa
adc
or
outsb
shll
pushf
lods
das
sub
shll
call
xor
pop
out
add
arpl
fs
jmp
aam
cmp
dec
adc
fdivl
popf
add
xor
jnp
pop
pop
fdivrs
inc
imul
sub
push
adc
cmp
inc
in
jb
pop
insb
subl
rorl
popf
test
divl
lds
sbb
jl
push
sarl
push
pop
dec
xchg
pop
mov
pop
pushf
pop
xchg
adc
push
fwait
nop
in
fdivrs
arpl
xchg
nop
cmp
jmp
pop
cmpsl
pop
xchg
mov
jo
mov
lcall
test
outsb
in
lcall
loopne
aad
mov
push
pusha
in
into
adc
lods
cwtl
add
pop
cld
push
sub
aaa
and
pop
xlat
insl
out
xchg
pop
pop
stos
outsl
pop
out
pusha
mov
les
jecxz
xor
xchg
add
daa
pop
xor
lahf
jl
roll
dec
mov
int
mov
or
movsl
daa
add
add
outsb
pop
sub
sbb
add
je
and
daa
les
xchg
outsl
cmp
pop
sub
mov
jnp
mov
add
and
in
pop
xorb
cmp
enter
pop
daa
sbb
aam
pop
adc
pop
sbb
or
sbb
dec
fdivrs
fucomip
leave
add
jo
cmpsb
pop
fmull
enter
jno
mov
push
jmp
daa
inc
lcall
inc
push
fs
in
int3
fs
xchg
inc
cmpsb
pop
addr16
pop
inc
jb
lahf
cmp
dec
push
enter
jb
mov
push
jmp
lock
cmpsb
adc
lods
jmp
pop
int
xorb
jae
test
lcall
or
shll
mov
mov
pop
pushf
pop
lahf
cld
or
or
movsb
pop
or
in
in
add
and
fs
cmpsb
lods
sbb
push
nop
xchg
add
sbb
adc
enter
and
and
and
mov
pop
adc
xchg
int
adc
cmpsb
or
jbe
mov
pop
daa
adc
push
sbb
xor
cmpl
mov
clc
pop
daa
sbb
aaa
jnp
inc
adc
add
pop
xor
ss
jo
or
dec
rcll
sub
enter
pop
in
pushf
jl
sub
and
xor
aaa
sbb
aad
and
fdivs
pop
add
or
sahf
xor
xor
push
jns
cmp
xor
cmp
andl
jns
cmpsl
add
in
pop
daa
cmp
enter
and
pop
cmp
and
xor
cwtl
sub
ret
and
add
cmpsl
push
pop
mov
je
jnp
mov
push
enter
jnp
cmpsl
inc
push
stc
popw
daa
dec
add
dec
jae
sbb
push
add
xor
orb
dec
add
out
or
sbb
add
sbb
fs
sbb
xchg
cld
je
pop
int
add
adc
adc
xor
and
in
enter
test
fs
mov
fs
inc
push
lcall
pop
cmp
cmp
and
xorl
ss
dec
push
enter
lods
cmp
nop
inc
push
js
mov
mov
jl
pushf
sbb
or
xor
orl
lods
nop
dec
int3
push
les
xchg
cmp
mov
int3
cmpsl
mov
enter
addb
sub
sbb
sbb
xchg
cmp
and
fwait
add
movsb
setl
call
cs
test
mov
sbb
cmp
pop
cmpsl
orb
daa
movsb
xor
mov
xor
or
sub
sbb
add
int
lahf
mov
movsb
xchg
dec
sahf
pop
lods
xchg
test
mov
sbb
lock
inc
lcall
xchg
xchg
xchg
mov
mov
xchg
les
push
enter
aas
lods
xchg
xchg
xor
rcrb
cmp
add
and
mov
aaa
imul
ja
shll
sbb
mov
xor
fcomps
xor
enter
push
fdivl
enter
lock
dec
orb
sub
sub
imul
push
xlat
in
nop
add
and
enter
adc
js
pop
push
int
push
subb
mov
enter
inc
push
or
and
sbbw
test
jb
push
das
jl
insb
daa
nop
gs
das
or
inc
push
jbe
sbb
out
pop
test
mov
add
xor
pop
jno
adc
insb
lcall
inc
xor
shll
fnstenv
cmc
or
sbb
int
imul
dec
shll
test
pop
rcl
xor
lods
shll
adc
and
mov
cmpsb
imul
add
shll
xor
shl
stc
or
lret
data16
mov
sbb
shll
lcall
call
push
mov
imul
sarl
flds
and
loop
imul
add
sbb
xor
add
insl
xchg
dec
shl
cld
out
cli
and
mov
inc
leave
xorl
cmp
call
push
notb
sub
or
and
pop
mov
jb
push
mov
ret
or
pop
fs
ss
pop
inc
sub
mov
or
js
mov
or
mov
enter
inc
add
lret
gs
inc
flds
out
ja
push
xor
data16
sbb
ja
and
test
cmp
adcl
clc
xchg
pop
push
jbe
addr16
leave
adc
push
xor
adcb
sbb
and
mov
fadds
imul
lcall
and
pop
js
or
add
and
push
xor
dec
cmp
adcl
push
and
gs
xchg
jl
inc
push
ja
inc
leave
adc
in
mov
dec
scas
inc
loopne
sbb
imul
shll
and
inc
xor
nop
add
ret
imul
adc
sub
rolb
xor
sbb
or
repnz
insb
insb
mov
aaa
ja
mov
mov
imul
insb
insl
add
enter
cmp
outsb
lock
pop
addl
cmp
data16
push
mov
fbld
enter
dec
xor
scas
insb
and
pop
xchg
dec
test
gs
lret
dec
scas
insb
and
or
pop
xchg
inc
dec
sarb
in
push
sbb
insb
and
inc
sbb
inc
scas
or
add
sub
sbb
fs
mov
dec
fstps
inc
js
mov
push
jb
xchg
cmp
mov
std
arpl
cmp
setnp
cmp
adc
pusha
push
iret
adc
add
cltd
in
xchg
loopne
in
les
int3
add
fsubs
or
fdivrs
push
es
add
aam
jns
fs
adc
es
jl
mov
cwtl
add
outsl
adc
mov
enter
dec
xchg
mov
daa
pop
pushf
int3
or
adc
pop
out
daa
or
xchg
add
loope
and
mov
insb
add
xchg
arpl
mov
adcb
adc
test
and
adc
cmpsl
add
dec
pop
leave
sub
push
xchg
mov
movsl
nop
cmpsb
shlb
movsb
shrb
add
xchg
push
repnz
loopne
pop
aad
in
mov
cwtl
into
in
jl
loopne
inc
lods
cwtl
sub
scas
loopne
cld
push
rorl
fldcw
arpl
and
insb
lret
fistpl
jns
scas
test
decb
leave
sub
xchg
xor
push
nop
push
repnz
add
xchg
push
fucomi
xchg
xor
jbe
add
shl
shlb
jnp
jecxz
gs
mov
push
xlat
push
jb
or
mov
push
add
or
inc
jne
add
popf
inc
setbe
mov
cmpb
stos
repz
push
addl
stc
das
js
push
xchg
daa
inc
add
rcrb
data16
xor
cmp
pop
add
in
and
in
insb
in
rorb
sbb
sub
xor
das
sbb
pop
xchg
push
int
or
loopne
test
pushf
add
dec
push
and
in
sbb
lcall
nop
out
test
xor
mov
jae
dec
push
rorb
mov
adc
sub
push
rcrb
jo
scas
lock
rclb
jns
inc
clc
negl
filds
rcrb
pushf
sbb
in
mov
inc
mov
loopne
in
rorb
mov
clc
xorl
add
dec
clc
popl
xor
push
pop
jl
mov
and
pop
sub
pop
add
icebp
das
jae
in
jl
nop
ret
pop
xor
nop
add
pop
or
jl
jb
imul
pushf
cmp
fsub
xor
and
mov
fdivs
cmp
pop
adc
sub
xor
add
popf
push
mov
pop
inc
daa
pop
sarl
xorb
addr16
sbbl
or
cmp
sub
mov
or
aam
dec
sahf
in
cmp
jo
ret
in
pusha
push
cmp
sbb
and
xor
enter
shrb
add
cltd
xor
das
fs
cmp
xchg
sub
mov
mov
mov
fs
and
dec
shll
mov
mov
shl
clc
add
push
adc
sbb
and
cmp
dec
fs
shll
insb
add
cmp
lret
mov
js
sbb
or
mov
cmp
xor
stos
cwtl
lods
test
cmpsb
jmp
enter
add
jmp
jg
pop
shll
pusha
addr16
adc
and
xor
sub
dec
push
mov
inc
pop
fsubs
nop
xchg
iret
or
jo
mov
mov
aad
leave
add
fcomp
pop
jbe
mov
pop
lock
and
iret
xchg
dec
and
iret
pop
popaw
popa
int
adc
xor
sbb
mov
imul
cltd
mov
iret
add
fsubl
add
addl
add
movsl
mov
sar
call
push
outsl
arpl
je
popa
jae
push
outsl
adc
dec
add
fcoml
or
or
cmp
and
imul
jnp
add
jae
inc
mov
sti
jnp
outsb
adc
ja
arpl
push
inc
pop
insl
pushl
dec
push
dec
pop
dec
inc
xchg
popa
insb
insb
bound
add
jmp
inc
inc
inc
inc
dec
push
jno
popf
dec
popf
mov
je
jb
ret
insl
fs
mul
adc
outsw
inc
jo
outsl
adc
sub
jb
imul
jae
add
stos
xor
sub
clc
stos
lcall
xor
cmpsl
imul
or
das
add
pop
addr16
sub
sub
push
push
pop
inc
push
add
fdivr
inc
adc
xor
negb
imul
pop
or
insl
data16
inc
daa
xor
cmp
aaa
aaa
test
mov
add
jge
ljmp
imul
pop
mov
mov
add
addb
sub
adc
or
shlb
add
pusha
testl
xor
or
jmp
and
add
and
scas
jno
pop
jno
sub
pop
daa
dec
push
xchg
out
add
jge
jne
add
mov
lret
outsb
loope
mov
pop
push
dec
insb
or
addl
jns
jmp
mov
xchg
and
add
insb
sub
xor
dec
insl
imul
lea
gs
outsl
outsb
jne
insb
jae
and
es
add
sbb
push
sbb
sahf
pop
add
mov
cmp
js
mov
pop
jl
rolb
add
mov
or
pop
test
lahf
hlt
inc
mov
insl
cs
sahf
jo
pop
insb
or
out
push
insb
xor
popa
jns
xchg
lret
mov
lahf
mov
mov
je
jmp
add
push
fcomps
adc
or
orl
dec
test
jns
push
add
sbb
xchg
and
inc
or
sub
inc
dec
jle
cmp
push
pop
push
nop
and
sub
shlb
jo
dec
mov
xchg
add
pusha
push
xchg
dec
inc
inc
fdivs
orl
cld
inc
xor
js
or
sbbb
adc
xchg
fistpll
cmp
dec
push
mov
test
adc
adc
and
cwtl
pusha
enter
or
adc
inc
in
jb
sbbl
or
dec
jo
outsb
add
in
sub
test
and
pop
enter
push
add
in
dec
jo
imul
dec
dec
rsqrtps
inc
push
push
je
adc
movsl
add
in
mov
fldl
rcrb
xchg
sbb
ror
jnp
push
xor
push
xor
push
sbbl
sub
aam
movsb
inc
dec
enter
outsl
jns
pusha
fmuls
xchg
sbb
insb
inc
jb
sbb
leave
mov
lret
movsb
movsb
in
and
xchg
xchg
mov
or
decl
or
jbe
push
fcoms
clc
arpl
mov
add
ficoml
lods
jg
movsl
cmp
adc
clc
call
fmull
dec
mov
ret
idivb
cs
push
or
test
sub
jno
inc
cmp
addr16
insl
and
jae
dec
imul
and
jne
jl
mov
imul
add
cs
dec
inc
inc
add
add
add
or
inc
sbb
cmpsl
push
jmp
pusha
pop
aaa
pop
seto
lock
mov
sub
fs
lcall
test
test
nop
sbb
outsl
insl
xor
dec
das
xchg
xchg
pop
pusha
or
pop
xor
or
sub
mov
xchg
insl
mov
xor
daa
adc
test
pop
add
and
cmp
es
push
xchg
mov
and
and
jae
xlat
or
pusha
outsl
and
xor
sub
into
xorb
add
pop
sbb
mov
sub
cmpsl
cmp
stc
and
sbb
mov
addr16
inc
sub
cmp
pop
or
lock
mov
loope
aas
or
xor
enter
cltd
pop
xor
xor
das
imul
jbe
jne
lods
xor
addr16
pop
push
mov
ret
dec
inc
aaa
es
sub
icebp
imul
add
pop
ja
arpl
or
arpl
sub
adcl
popf
or
pop
sbb
and
aaa
pushf
mov
sub
lcall
and
stos
lock
jge
ljmp
add
pop
lods
mov
dec
lcall
mov
mov
inc
ja
mov
and
std
jne
inc
push
xor
data16
rorb
push
cld
pop
pop
push
pop
push
inc
jae
pop
ja
imul
jg
mov
fisttpl
push
and
xor
test
inc
jb
push
dec
cs
jnp
push
bound
hlt
out
lahf
in
lods
test
jecxz
lahf
hlt
jecxz
pop
add
dec
add
fs
dec
insb
movsb
mov
or
fs
adc
jae
fs
nop
add
jnp
nop
add
cld
insb
daa
in
jecxz
jne
out
jb
push
test
je
jns
push
imul
mov
ja
dec
dec
add
push
inc
push
pop
inc
in
jb
push
cwtl
sahf
fmul
jns
daa
mov
test
sarb
sbb
popa
fs
jnp
and
xchg
mov
inc
push
push
mov
add
push
cmpb
or
push
pusha
inc
jb
or
or
jb
orl
mov
inc
jb
sbbl
movsb
jecxz
jo
sahf
adc
andnps
lcall
mov
stos
sbb
nop
xchg
sbb
sbb
mov
dec
or
or
movsl
add
lock
inc
push
jmp
push
aaa
pop
pop
sub
and
cld
inc
add
push
dec
jne
inc
js
push
add
dec
out
inc
adc
xchg
adc
inc
dec
dec
inc
dec
inc
xor
and
fs
loopne
jp
sbb
jmp
push
imul
inc
lods
in
pop
dec
sub
gs
inc
pusha
mov
push
dec
insb
lods
leave
cwtl
lds
sub
cwtl
or
pop
xor
imul
push
pop
pusha
xchg
inc
xor
fsubrs
inc
cld
fwait
lods
in
pop
insb
or
xlat
gs
jne
jmp
jns
push
jb
mov
inc
lods
push
lods
leave
and
fistpll
jg
lahf
dec
imul
nop
xchg
stos
jl
test
repnz
inc
insl
jae
bound
xor
fldt
xor
push
in
add
mov
xchg
pop
pop
popa
movsl
jo
pushf
cld
sbb
dec
adc
or
sbbl
xor
scas
test
scas
and
lods
dec
scas
pop
bound
pop
xor
mov
and
int3
or
pop
xchg
pop
add
jns
dec
adc
pusha
sarb
mov
mov
dec
inc
pop
mov
inc
aaa
mov
push
dec
int3
sbb
inc
jb
pop
jne
or
loope
inc
jo
out
push
rcl
push
pop
mov
fs
push
rcr
mov
shrb
leave
jo
sbb
xchg
pusha
rcrb
cmc
jb
mov
fsubrl
in
pop
in
mov
mov
or
sub
jbe
test
push
adc
vsubps
jecxz
or
js
jb
insl
dec
fistpl
push
push
dec
inc
lahf
outsb
imul
mov
mov
stos
hlt
cld
push
shlb
pop
dec
dec
pop
inc
je
adc
and
out
push
repnz
add
mov
add
jb
add
inc
xor
push
stc
adc
insb
or
mov
pop
mov
cwtl
or
inc
mov
sbb
and
and
lahf
cli
addr16
inc
push
lock
and
and
sbb
lret
mov
in
dec
jle
dec
inc
in
fildl
xchg
mov
mov
push
jnp
push
fiaddl
dec
cmp
jp
imul
dec
ljmp
outsl
jo
xchg
xchg
nop
lret
shlb
cmp
mov
xor
cmp
mov
xor
aas
cmp
cmp
dec
mov
push
pop
xchg
and
pop
setnp
or
cltd
cmp
nop
inc
icebp
xchg
add
pusha
push
cmp
insl
insl
jns
nop
jns
mov
lods
add
repz
xchg
fmuls
dec
push
fs
je
bndldx
pop
push
dec
nop
xchg
fucomip
dec
arpl
pop
push
das
cmp
sub
lods
daa
push
jne
jns
pop
xor
pop
pop
je
test
jmp
push
imul
shl
push
dec
or
addl
sbb
nop
cwtl
int3
mov
add
lods
pop
or
pop
stos
fsubl
shll
and
out
cmp
addr16
mov
aas
test
jo
sbb
inc
and
mov
inc
into
js
xchg
nop
mov
mov
cmpl
js
xchg
fdivl
in
enter
ret
inc
inc
dec
lods
inc
and
jb
and
dec
aam
push
xor
outsl
outsl
inc
mov
xor
mov
or
inc
push
insb
fmuls
mov
inc
shlb
sub
mov
loopne
inc
add
pop
jb
daa
lock
adc
mov
lods
and
and
filds
mov
cld
add
push
scas
in
pop
mov
push
mov
pop
dec
or
das
mov
mov
das
movsb
push
leave
and
adc
inc
fildl
nop
outsb
shll
call
xlat
fs
cs
adc
mov
jbe
xchg
xor
sbbl
sub
mov
outsb
nop
inc
or
inc
mov
dec
cmp
push
push
cmp
mov
cmp
mov
adc
adc
add
pop
test
mov
mov
outsb
and
sub
mov
sub
orl
push
push
mov
jae
mov
bound
jbe
js
mov
cmp
push
stos
push
dec
and
pop
xchg
mov
enter
push
movsb
andl
movsl
dec
inc
cmp
repnz
add
push
inc
sbb
and
pop
cmp
cmp
pop
pop
inc
jb
inc
adc
sub
or
and
and
inc
shll
jne
xchg
add
fwait
sub
xor
es
push
inc
outsl
cmc
pop
push
loopne
cmp
outsb
push
or
xor
gs
jp
addr16
fcoms
adc
add
push
popa
push
ss
cmp
pop
inc
fwait
bound
rcrl
subl
sbb
mov
sbb
cmovle
adc
jp
popa
push
inc
inc
stos
icebp
cmp
pop
pusha
cmpsl
jns
popa
jns
test
mov
and
xor
xor
call
push
sti
sbb
inc
nop
outsb
mov
dec
nop
add
sbb
dec
mov
stos
add
loopne
inc
mov
fs
aam
fst
mov
sub
inc
ss
add
insb
popa
pop
sub
mov
nop
sbb
je
mov
clc
imul
push
add
leave
sbb
imulb
or
insb
cmpsb
fcmovnu
addb
mov
movsb
test
lea
gs
int3
inc
subl
add
js
sbb
add
aaa
cwtl
add
jb
mov
and
popa
add
bnd
out
js
mov
add
xor
cwtl
enter
inc
or
rolb
in
jo
enter
fdivs
dec
aas
das
or
inc
add
iret
push
inc
rcrb
inc
ss
loope
fistpl
daa
add
push
imul
add
insl
jecxz
add
sub
pop
aas
xchg
mov
fimull
sbbb
mov
shlb
jae
and
shll
pop
and
or
cmp
stos
sbb
subb
or
push
ljmp
xor
mov
cmc
inc
xchg
jp
mov
sbb
pop
cmpb
xor
aam
cmpsb
rolb
pop
pop
jmp
jg
pop
sbb
ljmp
add
lock
ljmp
mov
or
pop
xor
push
mov
mov
es
or
roll
and
mov
cmp
das
nop
xchg
sbb
js
dec
mov
scas
imul
call
xchg
mov
ja
xchg
mov
xor
add
popa
inc
mov
pop
xor
jne
in
inc
mov
mov
dec
outsl
outsl
imul
popl
push
inc
jg
outsb
push
in
dec
adc
nop
cwtl
adcb
movb
inc
inc
pop
das
cmp
shlb
push
adc
addr16
data16
lcall
test
mov
push
push
fs
adc
dec
cmp
and
cld
mov
pop
dec
adcb
sub
outsl
data16
daa
mov
jg
dec
rol
pop
jb
enter
and
or
inc
pushf
jb
orl
daa
inc
adc
in
xor
fldenv
loopne
dec
leave
and
nop
or
ja
pandn
add
push
or
inc
add
sti
add
js
in
push
repnz
in
test
add
xchg
cmp
and
sbb
lock
int3
push
addps
push
inc
mov
in
pushf
cld
inc
add
cld
add
mov
test
pop
mov
inc
and
or
pop
inc
dec
leave
pop
or
pop
jnp
lock
add
xchg
add
inc
add
cmp
sti
and
and
push
fs
ret
enter
rcrb
dec
fmuls
loop
ljmp
in
sub
les
jae
inc
sub
mov
imul
sub
add
adc
adc
enter
mov
mov
xchg
sbb
int3
adc
pop
push
stos
sub
inc
mov
push
rol
enter
jb
add
inc
inc
adc
sub
repz
addl
mov
pop
lds
fidivrl
gs
aas
xchg
dec
push
fs
fs
rorb
pop
jae
push
icebp
jo
inc
cmp
lcall
nop
add
je
enter
das
insb
les
xorb
xchg
sbb
dec
or
mov
add
mov
mov
mov
outsb
popa
fwait
and
or
mov
pop
add
or
inc
push
in
sub
sub
and
inc
lock
js
mov
ja,pt
movl
jnp
or
add
adc
xor
das
jb
cli
ja
dec
xchg
add
cmp
mov
nop
sbb
push
lret
dec
fs
loopne
ljmp
mov
sub
sbb
arpl
xor
jg
jge
das
cmp
or
inc
fs
push
and
in
hlt
jbe
pop
push
cld
addr16
inc
enter
pop
jb
rcrb
and
push
push
in
pusha
pop
xchg
enter
dec
mov
dec
test
es
fcoml
cmp
clc
and
push
dec
imul
pop
xchg
nop
mov
xor
in
inc
add
hlt
leave
pop
movsl
inc
rcll
add
and
jb
inc
jl
sbb
mov
enter
insb
add
icebp
xchg
add
add
or
leave
call
add
outsl
insb
sub
sbb
test
mov
or
adc
sub
mov
mov
je
dec
pop
push
xor
scas
mov
pop
mov
ja
pop
aaa
popa
iret
pop
cmp
das
outsb
pop
cmpsb
jmp
scas
push
pop
jb
imul
rol
pop
add
inc
inc
imul
stos
inc
mov
je
je
popf
adc
push
out
pop
shll
insl
aas
fs
xchg
imul
testb
sbb
outsb
popa
sete
jne
xchg
push
cmovno
bound
mov
push
movq
es
and
punpckhwd
dec
or
repz
fidivs
js
push
xchg
lea
add
jo
ja
push
sti
pop
rcrb
push
add
ja
push
movsl
or
inc
test
test
push
sbb
pop
roll
fs
inc
jmp
jbe
push
xchg
dec
lea
sti
xchg
pop
push
adc
or
fistpl
cmpsl
ss
sbb
pop
addr16
clc
pop
insb
adc
aad
insl
xor
aaa
jns
outsl
popf
mov
pop
out
cwtl
inc
sbb
in
or
inc
mov
and
cltd
cmp
push
rcl
xor
js
into
add
dec
lahf
dec
ja
imul
add
cltd
cmovb
or
push
imul
push
nop
dec
cmp
loop
push
scas
jge
xor
add
aas
add
or
add
add
pop
mov
lds
int3
add
pop
jle
roll
insb
into
cmp
mov
sbb
js
or
sti
sub
leave
xorl
inc
decl
psadbw
sub
fucomp
mov
push
add
adc
dec
das
inc
jns
sbbl
leave
cmp
iret
dec
fildll
ss
insb
or
cmp
push
push
dec
pusha
dec
adc
mov
xchg
imul
pushf
or
dec
aad
shlb
icebp
add
in
add
aam
pop
in
in
pusha
loopne
jo
leave
sbbl
and
add
movsl
jle
imul
ror
dec
push
in
js
shr
inc
mov
fs
das
movsb
inc
jl
icebp
adc
dec
mov
pop
mov
push
movsb
test
nop
hlt
dec
jae
sbb
mov
sub
repz
pushf
mov
stos
xchg
cmp
xchg
or
sbb
jo
add
subl
lods
pop
and
mov
mov
int3
leave
sbbl
jns
shl
xorl
ljmp
sbb
xchg
and
add
sbb
jae
int
int3
or
and
orb
push
outsb
jb
mov
add
rcr
enter
test
testl
fsub
sbb
pop
leave
or
outsb
push
cwtl
pop
push
cwtl
aas
lock
or
dec
jnp
ds
xor
aaa
jg
hlt
cld
repnz
gs
mov
mov
add
mov
int3
or
pop
or
or
je
and
mov
aas
dec
sub
cmc
xchg
add
sbb
inc
aam
cmc
push
dec
out
inc
test
inc
js
sub
aad
mov
or
pop
inc
mov
leave
cmp
aam
in
cmp
call
add
leave
dec
push
in
inc
or
or
dec
pop
jae
aas
inc
dec
inc
jb
adcl
and
push
test
xchg
add
fcoms
inc
pusha
bswap
and
popa
cmp
sti
xor
insb
je
pusha
and
pop
jb
mov
sti
inc
aas
js
orl
dec
or
enter
insl
inc
addb
xchg
sub
iret
inc
popa
jle
inc
mov
dec
test
jno
and
in
dec
push
nop
cwtl
sub
xchg
mov
add
jns
xchg
aas
adc
pushf
mov
repnz
movsb
sbb
popa
arpl
mov
test
adc
xchg
mov
xlat
pop
nop
inc
mov
mov
dec
cmp
sbb
je
enter
leave
orl
aad
arpl
inc
xchg
sbb
leave
sbb
int3
aam
mov
push
outsb
xchg
sub
add
xor
fisttpll
jbe
je
or
dec
push
dec
clc
add
jp
sbb
loope
ucomiss
push
inc
subl
ja
and
add
cmpsb
enter
subb
outsl
movsb
mov
push
pop
or
dec
inc
inc
push
aas
iret
dec
sbb
add
icebp
or
mov
mov
push
push
imul
or
inc
adc
inc
shr
add
das
sbb
out
test
pop
insl
add
push
cmp
pop
rcll
out
insl
les
xchg
dec
push
xor
pop
je
sti
push
jl
add
pop
aas
pop
add
and
mov
imul
paddsb
push
cmpsl
pop
xchg
bswap
inc
cmc
xchg
push
shll
add
jae
dec
and
mov
pushf
mov
push
fsub
pop
js
xor
roll
mov
add
imul
push
das
pusha
fisubl
or
xchg
jo
lea
addb
je
outsb
inc
test
jbe
sbbl
sub
nop
sbb
sti
mov
popa
jo
jnp
inc
dec
push
dec
inc
push
push
test
add
lock
xchg
adc
xchg
add
aaa
in
lret
inc
fisttpl
xchg
dec
push
adc
adc
adc
pop
push
popa
jbe
fnstcw
nop
inc
dec
xchg
sbb
pop
pop
pop
das
test
dec
push
xchg
popa
rorl
push
dec
cmp
jne
inc
and
xor
dec
push
dec
inc
xor
and
push
and
fdivl
cmp
subb
inc
fsubl
and
inc
sub
and
movsb
sub
push
dec
stos
jb
aaa
push
fnstenv
je
inc
push
imul
dec
add
push
enter
mov
scas
cmp
test
fsubl
xchg
stos
inc
lds
dec
sub
inc
dec
bound
fstpl
push
orl
inc
inc
jb
pop
orb
push
add
in
add
pusha
push
lods
sbb
and
insb
je
fisubrs
push
adc
push
inc
push
push
dec
push
in
ficomps
sbbb
add
push
in
push
test
sbb
orl
movsb
cmpsb
insl
push
in
fisubrs
push
cwtl
or
xor
jo
add
or
flds
pop
pop
ja
rcrl
add
push
mov
dec
daa
int
pop
testl
sbb
rcr
and
or
xorl
jnp
jno
xor
mov
adc
das
add
repnz
push
or
xor
add
test
aaa
and
jbe
inc
shlb
mov
sub
ja
in
dec
outsb
lahf
adc
pushf
movsb
xor
pusha
and
movl
sbb
test
push
mov
dec
adc
mov
enter
mov
mov
pusha
inc
push
in
enter
mov
xchg
sahf
into
jle
mov
push
inc
loope
int3
and
mov
roll
push
jo
jmp
cmp
test
push
dec
ljmp
ret
adc
int
sbbb
sbb
out
cwtl
popf
aad
inc
aas
aas
or
dec
xor
dec
add
jbe
pop
mov
sub
add
incl
sub
sub
push
cmpsl
mov
imul
nop
fiaddl
loop
leave
sbbl
rcl
ja
cmp
stos
xor
aaa
and
dec
cwtl
lock
mov
or
push
addr16
pop
xchg
adc
inc
cld
xor
cmp
inc
clc
push
pusha
inc
xchg
cmpsw
add
or
xor
jecxz
inc
outsl
and
jecxz
inc
push
sbb
jnp
js
add
test
or
enter
fadds
push
in
pop
xor
sub
fsub
add
enter
adc
inc
sub
add
mov
cmpl
xchg
inc
pop
cmp
insb
in
push
lahf
push
adc
js
jecxz
insl
adc
out
lret
adc
fwait
adc
and
inc
push
inc
dec
int3
in
xchg
sbb
ret
sbb
or
mov
jae
add
add
sbb
xchg
rdmsr
or
xor
andl
push
sbb
gs
mov
xlat
and
fisubrs
lcall
push
addl
add
add
popf
sbb
mov
adc
dec
lcall
xor
std
jnp
xchg
xchg
fwait
in
sbbl
push
pop
inc
add
mov
push
pavgb
xchg
outsl
jae
insl
mov
dec
push
mov
les
sub
and
xchg
les
push
adc
add
push
iret
sbb
psllw
pop
pop
rolb
dec
cltd
dec
jae
xor
in
push
sti
xlat
push
or
das
add
dec
inc
push
pop
xor
dec
sbb
or
mov
dec
iret
add
or
mov
aaa
leave
or
or
dec
xor
sbb
push
mov
mov
out
inc
sti
mov
dec
sbb
mov
es
push
aad
xor
inc
push
icebp
and
outsb
add
in
or
and
xor
jl
jmp
cs
cs
gs
sar
xchg
dec
and
or
out
inc
push
repnz
inc
pop
inc
or
rcrb
ljmp
call
or
jg
push
push
push
and
inc
dec
ja
inc
loopne
push
arpl
push
popf
lea
stos
outsb
mov
aad
mov
fdiv
outsl
push
jo
setae
push
arpl
dec
fisttpll
arpl
call
fs
lcall
cmp
ja
or
sub
jne
push
add
notl
pop
aas
and
insb
pop
imul
adc
arpl
adc
daa
dec
mov
inc
aaa
cmp
adc
adc
pop
pop
cmp
add
sub
jnp
cmp
jns
sbb
inc
pop
and
inc
es
pop
notl
lods
push
pop
mov
negl
push
pop
pop
push
adc
xchg
movl
add
xchg
mov
add
add
jnp
jns
add
fs
jge
cltd
or
xchg
cmpsb
push
cmp
mov
out
pop
jo
mov
mov
pop
mov
rolb
add
test
adc
lcall
jns
mov
nop
add
xchg
add
cwtl
inc
mov
and
adc
ds
adc
or
add
mov
mov
roll
pop
jb
scas
add
ljmp
and
push
daa
iret
push
jbe
dec
dec
inc
jmp
nop
pop
jb
mov
push
mov
jmp
xor
nop
or
xlat
dec
inc
push
dec
push
cs
hlt
in
movsb
adcb
lds
fldcw
enter
cwtl
lods
in
pop
mov
sbb
and
in
inc
movsb
lods
inc
jmp
mov
cli
int
inc
adc
je
mov
mov
test
push
mov
xchg
mov
dec
push
add
les
pop
jno
push
addr16
pusha
or
imul
lahf
call
mov
lock
jb
mov
in
mov
sub
in
pop
jmp
dec
testb
bswap
insl
cwtl
fwait
insb
adc
imul
pusha
add
arpl
adc
es
ja
and
mov
push
mov
testl
jb
mov
int3
jb
daa
mov
call
add
pusha
in
add
xchg
add
xor
push
enter
clc
add
and
xchg
push
push
test
insb
daa
insl
pop
inc
jo
outsb
ja
outsl
je
repnz
imul
jo
and
pushf
out
sub
sbb
push
push
dec
popl
pop
aad
push
rolb
pop
jbe
sbb
sub
add
jb
mov
xor
fstps
or
dec
and
adc
add
or
mov
sub
nop
dec
push
and
mov
sub
and
lock
pusha
fxch
ljmp
adc
andl
cmp
lds
push
outsl
pop
and
dec
lods
inc
enter
dec
les
mov
das
dec
push
push
dec
dec
push
fs
cld
dec
push
test
les
stos
push
out
bound
add
mov
daa
dec
dec
icebp
pop
pusha
adc
sbbb
pop
xor
cwtl
fs
inc
int3
or
lods
out
lcall
insb
ja
add
dec
adc
jp
jbe
dec
les
jae
or
pop
and
pushl
pop
inc
push
adc
stos
bound
gs
fs
aas
arpl
mov
aam
fs
jnp
fldenv
push
jmp
iret
or
les
cmp
push
inc
out
arpl
push
mov
mov
cmc
adc
add
pop
mov
add
push
xchg
lods
fsts
popa
fwait
insl
dec
jae,pt
ja
pop
dec
je
rcrl
dec
lcall
movsb
in
stos
push
xlat
loope
aas
add
xlat
inc
iret
jno
cmp
xor
dec
and
or
je
push
add
mov
pop
add
insb
jmp
push
lret
arpl
jns
outsb
cmovs
insb
sub
pusha
psrad
movl
inc
pop
insl
adc
arpl
pop
popa
jne
pop
jo
jne
or
xchg
or
aaa
pop
add
push
mulb
pop
sbb
mov
sbbl
mov
popa
insl
negl
pop
xor
sub
cmp
insl
mov
jg
dec
add
sbbl
mov
sbb
test
jae
xchg
pop
imulb
xchg
jo
sub
inc
pop
testb
nop
xor
jo
outsb
mov
or
pop
inc
adc
cmp
add
push
addr16
loope
inc
imul
imul
jo
movsb
idiv
add
inc
xchg
pop
jo
pop
push
mov
ja
xchg
jbe
mov
jmp
or
enter
jbe
cmp
adc
push
outsl
jne
xchg
lock
insl
packssdw
insb
or
push
jmp
adc
push
es
lods
outsb
or
sub
xchg
jg
js
cmp
and
inc
mov
hlt
pop
mov
push
mov
cli
decl
add
popa
in
dec
shll
inc
cmp
push
pop
push
mov
call
sahf
mov
fsts
notb
and
sub
mov
cmpsb
outsl
test
adc
cmpsl
notl
dec
daa
dec
pop
jno
aas
movsl
js
fsubs
and
xor
sbb
mov
sbb
mov
push
dec
sbb
lea
jae
sbbl
pushw
adcb
pop
dec
ret
inc
inc
pop
jno
in
push
inc
jnp
inc
mov
adc
test
dec
cmp
add
and
imul
outsl
insb
xchg
sbb
test
adc
jl
sbb
mov
orb
add
sub
xchg
dec
push
nop
orb
jo
fs
add
sub
sti
xchg
xchg
jo
in
pushf
les
int3
mov
inc
leave
dec
push
mov
lds
int3
mov
cmove
lods
mov
leave
nop
pop
push
or
sbb
and
mov
xchg
cwtl
std
push
fs
mov
mov
nop
dec
push
int3
fdivs
jb
daa
inc
adc
rcr
xchg
filds
sbb
jae
scas
and
cmp
xchg
fistl
loopne
lock
dec
lock
jp
inc
dec
pop
dec
dec
push
pop
inc
inc
stos
jl
shlb
xchg
add
xchg
inc
or
aaa
cwtl
add
lcall
imul
jp
fs
daa
insl
imul
push
arpl
fs
mov
push
movsb
and
ror
mov
sub
pop
mov
sub
xchg
sub
test
notb
pop
or
mov
pop
cmpl
outsb
loope
sbb
dec
fwait
sub
enter
add
pop
mov
fucomip
pop
jb
or
add
cmp
sbb
push
je
pushf
subl
outsl
add
jbe
rclb
or
call
outsl
adc
jp
push
in
divl
add
and
and
dec
jne
cmp
cli
fisubrs
or
dec
and
rclb
mov
or
or
jne
jnp,pn
outsl
and
cwtl
in
inc
push
outsb
bound
sbb
mov
ret
arpl
push
and
jno
pop
add
xchg
xor
cmp
xlat
data16
insb
shrb
gs
movsb
outsl
pop
jae
or
sbb
dec
daa
cmp
mov
arpl
pop
and
outsl
dec
lcall
jne
sub
add
vaesdeclast
retw
movsl
imul
jnp
inc
mov
add
pop
sbb
push
outsl
in
inc
sub
mov
lret
add
inc
xor
popa
dec
aam
or
lea
mov
xor
mov
je
sbb
cmp
es
sbb
imul
jb
mov
cmp
or
pop
adc
pop
negl
adc
fwait
or
gs
fimuls
out
sbb
and
sbbl
fldcw
or
scas
ss
add
cmp
xchg
dec
or
leave
insb
fcom
mov
inc
pop
lods
gs
mov
sub
sub
popa
add
imul
dec
add
insl
push
loope
je
mov
incl
fstp
push
xor
mov
mov
bound
inc
mov
cmp
cmpsl
insl
lahf
cmp
fbstp
jp
pop
imul
push
jns
movsb
cmp
add
push
ret
pop
test
pop
jo
jo
je
push
cmp
sti
mov
jnp
jnp
fs
int3
jne
test
popa
add
and
ret
bound
mulb
inc
in
imul
addr16
faddl
jmp
aaa
inc
gs
xchg
jae
out
sub
jp
gs
test
imul
lea
or
pusha
or
or
add
dec
test
add
cltd
outsl
ja
and
inc
mov
jae
mov
dec
jmp
daa
jbe
int3
jl
iret
arpl
and
shl
mov
xchg
insl
push
sbb
or
and
inc
or
xchg
dec
sbb
call
push
sbb
in
and
sbb
in
mov
ja
cmovo
fadds
int
lds
outsl
push
out
add
leave
xor
jns
pushf
add
sub
cmp
adc
jmp
popa
push
xor
lods
insl
testl
imull
xchg
xchg
fistps
addl
push
jns
jae
fbld
or
pop
adc
jnp
mov
xchg
cmp
jae
or
inc
xchg
mov
push
divps
cmp
pop
sbb
cs
sub
mov
mov
jbe
mov
push
inc
dec
mov
gs
test
mov
dec
xor
pop
add
out
dec
iret
or
fwait
jo
adc
push
cmp
jmp
fwait
adc
enter
arpl
and
sub
std
jae
cmpl
adc
fwait
add
fwait
mov
js
and
cmp
xor
shll
addl
push
daa
sub
bound
ret
dec
adc
or
pop
sbb
imul
xchg
push
scas
mov
rcrl
xchg
cmp
loopne
xchg
mov
inc
loopne
and
inc
nop
dec
imul
cmp
arpl
pop
mov
and
add
mov
es
pop
inc
pop
xor
jmp
ficomps
inc
cmp
mov
dec
movsb
addl
cmp
movsb
ret
xlat
sub
push
dec
add
mov
cmp
jne
sbb
xor
sub
dec
rcll
inc
ss
dec
pop
popa
cmp
sub
adc
push
cmp
ds
push
xchg
fwait
lea
daa
lcall
cmp
icebp
jb
mov
cmp
jne
adcl
mull
dec
sbb
xorl
add
insb
mov
pop
gs
std
and
lods
sbb
jg
in
xor
subl
lods
enter
rcll
mov
and
jmp
data16
push
nop
dec
mov
mov
testb
adc
outsb
xchg
pop
jae
xor
adc
pop
sub
add
dec
sarb
les
sub
and
ret
testl
jne
lret
imul
insb
adcl
mov
mov
loopne
pop
pop
pop
xor
sbbl
mov
mov
adc
hlt
data16
out
jp
dec
pop
cmp
sub
sti
jne
or
cmp
adc
aad
fwait
inc
jne
mov
jg
cmp
movsb
cmc
inc
imul
xor
xor
sub
in
pop
jno
push
pop
stos
pop
pop
jo
adc
pop
mov
dec
arpl
bound
add
sbb
adc
pop
cmp
dec
mov
bound
jmp
jae
cmp
add
xor
push
jl
js
andl
fs
popa
adc
and
addl
mov
inc
push
lock
mov
vpshld
aaa
ja
and
sub
sub
stos
or
fwait
sbb
dec
dec
mull
sbbl
shll
imul
sub
lcall
pop
push
adc
bound
pop
cmp
adc
dec
dec
adc
mov
aaa
sub
inc
jg
add
inc
dec
inc
pop
inc
mov
sbb
sahf
mov
sti
ret
cs
test
movsl
dec
enter
data16
imul
lret
insl
test
xor
cwtl
dec
shl
cmpsl
fnsave
sbb
aas
fildll
sub
lods
cmp
addr16
or
adc
popf
and
inc
flds
push
dec
fisttps
aaa
pop
sbb
sub
andl
jns
stos
out
insb
fs
mov
cmp
push
outsl
or
jecxz
dec
push
xchg
clc
and
inc
jns
mov
addl
loopew
adc
add
inc
aas
sbb
sub
ret
push
dec
lds
or
push
add
jge
dec
imul
fadds
or
outsl
pop
xor
cmp
add
test
jg
push
mov
push
adc
jbe
xor
lock
outsl
jbe
jne
out
or
xchg
dec
arpl
xchg
cmp
mov
push
dec
sbb
sbb
shll
arpl
jge
gs
and
fnstenv
push
out
lss
jp
mov
xchg
mov
inc
pop
adc
lods
pushf
iret
sub
jo
dec
aaa
and
xor
sub
fwait
and
cmpsl
pop
cmp
xchg
aaa
jmp
mov
cmp
mov
out
mov
out
ja
inc
fldenv
stos
scas
adcl
or
pop
aas
stos
mov
sbb
adc
push
cltd
inc
mov
cmp
bound
dec
and
fsubs
fildll
jmp
stos
jb
out
jmp
movsb
pop
inc
packsswb
test
add
lds
dec
sbb
mov
pop
pop
jmp
ret
mov
test
mov
inc
leave
mov
fmuls
add
insb
add
insb
and
mov
rclb
mov
rorl
dec
enter
into
jo
inc
gs
dec
subl
mov
aam
inc
dec
pop
subb
aas
pop
or
xor
add
popf
push
bound
or
adc
js
int
outsb
lret
push
fcmovne
fs
add
cmc
lcall
aaa
or
dec
pop
das
inc
mov
daa
push
out
mov
fucomip
and
jne
push
or
mov
cwtl
pop
jmp
pop
insb
jne
sub
mov
dec
mov
and
mov
mov
sbb
scas
xor
add
inc
dec
test
cmpsl
xchg
ret
cmp
add
adc
cmpsl
iret
push
leave
push
cmp
aaa
pop
xor
int
mov
or
pop
cmpsl
push
scas
pop
or
dec
push
insl
pop
pop
insl
nop
rclb
es
test
mov
bound
sbb
cmp
push
adc
inc
sub
inc
push
add
inc
lahf
outsl
fs
mov
mov
sub
rorl
adc
cltd
stos
scas
jo
xor
or
imul
mov
ret
dec
jns
mov
xchg
xlat
roll
addr16
cwtl
xchg
push
inc
sbb
fstl
dec
mov
xchg
insb
jnp
push
inc
cmp
inc
in
and
push
mov
add
leave
pop
push
jg
xor
xor
movsl
sub
mov
daa
leave
rcrb
imul
inc
jo
adc
dec
popa
xor
push
pop
mov
push
add
cmp
mov
imul
mov
cmp
push
dec
sub
outsb
test
mov
loop
dec
adc
aad
les
jae
pop
call
add
or
adc
push
fisubs
aad
sub
std
adc
sahf
dec
sbb
inc
outsb
in
jecxz
or
pop
lea
mov
push
daa
inc
xor
cmc
cwtl
sbb
dec
jns
lds
mov
jae
push
gs
push
fsts
repz
lahf
decl
inc
pop
jl
and
into
push
mov
daa
mov
nop
in
jae
xor
scas
testl
or
insb
subl
inc
xor
adc
cs
jae,pn
stos
push
inc
cmp
or
push
insl
leave
dec
dec
xchg
xor
jecxz
out
mov
xor
pop
and
lods
lcall
testl
and
fs
xor
push
sub
ret
test
lahf
mov
adc
jno
insl
outsl
andb
cli
push
add
pusha
xchg
and
adc
hlt
and
scas
out
adc
xchg
popf
push
adc
shll
push
mov
pop
or
push
mov
xor
mov
and
cmpsl
insl
ja
jp
dec
cmp
lods
lods
jae
aas
inc
enter
xchg
cmpsb
sub
shrl
push
xchg
cmp
xchg
sbb
dec
pop
pusha
hlt
cwtl
test
jg
sub
fs
fwait
imul
jbe
test
xor
mov
in
loope
call
push
scas
push
outsb
jnp
pop
xchg
icebp
dec
fwait
push
imul
popa
test
fistps
out
stos
ja
xchg
inc
xchg
jge
dec
leave
inc
push
or
sub
push
pusha
push
or
invlpg
lret
sub
rcll
add
xorb
and
and
flds
rorl
xor
pop
lds
inc
int
sbb
outsl
orl
push
ret
mov
xchg
jne
or
dec
inc
rorl
es
or
xchg
cmc
mov
or
cmp
in
popa
jo
sbbb
adc
andl
imul
mov
adc
outsw
xor
int
sub
inc
iret
insl
mov
or
arpl
mov
jg
aas
addr16
movsl
inc
cmp
lods
sbb
nop
push
aaa
pop
sub
mov
movsb
cs
sbb
mov
xor
xor
adc
mov
add
in
sub
push
ss
lds
mov
jns
fs
addr16
dec
mov
mov
cmp
cmp
sbb
test
xchg
out
add
daa
and
imul
inc
add
popf
loop
add
mov
pop
ret
cmp
rolb
sti
xor
loope
or
mov
mov
or
jnp
popa
flds
pop
lret
ja
mov
pop
fldl
sti
sbb
addr16
test
or
or
fstl
mov
lock
ret
fcmovne
push
arpl
add
fs
cmp
pop
push
inc
xor
and
dec
xlat
ja
sbb
mov
lock
xor
push
stos
and
jns
std
popa
das
bound
flds
jae
mov
dec
xor
sub
cmp
push
dec
negl
push
push
xor
mov
cmp
or
push
pusha
mov
into
test
imul
fwait
add
and
mov
movsl
cmp
and
cmp
or
jne
and
and
jecxz
adcl
cmp
xchg
sti
sub
testl
push
mov
mov
sub
dec
xor
popf
loop
mov
jecxz
xchg
data16
adc
scas
and
es
sbb
daa
outsl
sub
cmp
mov
inc
insb
inc
adc
outsl
sub
pop
inc
stos
inc
xor
mov
and
mov
sub
imul
xchg
dec
mov
data16
ja
adc
arpl
add
pop
int3
mov
lds
xor
push
push
cli
pop
add
xchg
mov
test
pop
out
cwtl
adc
test
stos
lea
and
mov
ja
pop
push
rorl
push
addr16
addb
out
adc
lods
dec
adc
test
adcb
and
xchg
test
test
mov
scas
xchg
sbb
or
sbb
mov
mov
cmp
add
mov
in
or
adc
pop
fldl
or
dec
fnstenv
dec
and
inc
int
shrl
int
aas
add
popa
leave
inc
fisttpl
cmp
jl
lret
push
sbb
jns
arpl
mull
xchg
sti
pop
shlb
ljmp
mov
xchg
rol
and
jbe
sbbl
inc
aam
dec
xor
test
xor
xchg
pop
outsl
out
sub
jl
jp
icebp
fs
sub
fs
inc
xor
jnp
and
repnz
xchg
or
adc
dec
in
cmc
push
push
mov
cltd
jne
and
or
mov
or
lds
xor
xchg
daa
stc
pop
pushf
shll
cmp
xchg
mov
shr
arpl
inc
push
xchg
dec
mov
cmp
shrb
or
inc
imulb
xlat
dec
arpl
add
lods
or
or
adc
fisubs
sub
add
fs
sub
scas
push
lahf
cmp
or
subl
int
jmp
das
fistpll
fucom
gs
dec
and
popa
arpl
or
nop
pusha
sub
or
jns
pop
mov
shrl
mov
cs
adc
insb
subl
inc
out
les
cmp
popa
sbb
cwtl
mov
es
push
dec
adc
daa
je
loopne
rcrl
gs
lret
ficoms
int3
inc
dec
sbb
sbb
sbb
popa
mov
aaa
imul
imul
jl
xor
cmp
outsl
adc
adc
bswap
mov
ja
mov
push
leave
xchg
movsb
xchg
popf
push
jg
ret
fwait
adc
movsb
test
test
loope
andl
cmpsl
sub
movsb
lds
lock
pop
adc
xchg
inc
addl
jge
and
dec
shll
andb
jne
fs
mov
xor
popa
subl
xchg
push
sub
fistpl
or
xor
adc
xlat
pop
loope
js
in
jo
lahf
mov
cmp
sub
or
lods
aaa
fistpll
fsts
pusha
sbb
add
out
nop
je
dec
leave
dec
xor
jne
add
stc
jnp
mov
es
jge
orl
xchg
sub
xchg
outsl
popa
lahf
add
or
push
jne
adc
jb
ja,pt
and
movsl
or
test
inc
andl
sbb
test
adc
inc
jnp
add
sub
add
xchg
and
inc
outsl
xchg
push
cmpsl
and
mov
pop
shll
pushf
push
sbb
dec
flds
or
orb
jmp
int3
push
xchg
rcll
lret
sub
pop
inc
pop
fildl
sbb
jns,pn
xchg
into
int3
gs
fwait
repz
inc
or
lock
pop
add
pop
push
outsb
xlat
into
call
lods
and
add
mov
lea
xor
ds
shrb
movsl
mov
ljmp
shll
and
imul
ret
jecxz
and
push
inc
addr16
xchg
mov
pop
jecxz
or
cmp
mov
ret
test
pop
fldt
and
pop
or
xor
stc
cmp
or
push
sbb
sti
aas
xchg
push
loopne
das
jg
cmp
push
inc
push
jae
shll
xor
lea
add
add
push
or
dec
jns
aad
pop
adc
push
sub
pop
and
and
ja
xchg
test
aas
dec
add
pop
test
cmp
outsl
stc
dec
adc
into
ret
mov
xor
or
cmpsl
add
add
fs
jg
fs
dec
pop
jb
and
jbe
and
or
out
inc
xorl
notl
rep
adc
cmpsl
pop
and
sub
rclb
mov
je
dec
mov
insb
lahf
pop
add
out
jae
or
add
pop
xor
add
inc
and
inc
mov
daa
sub
js
out
testl
inc
or
mov
inc
sarl
xchg
xor
sub
xor
sbb
sbb
inc
add
inc
xchg
cmp
xor
xor
jmp
mov
and
mov
ss
dec
sub
dec
inc
pop
stc
fistps
cltd
cltd
xchg
inc
xor
popa
in
dec
cmpsb
insb
js
xor
inc
cmpsb
ss
imul
or
outsl
and
or
sub
popa
inc
pop
cmp
dec
mov
inc
inc
cwtl
mov
cmp
xor
ja
testl
inc
inc
or
or
xlat
inc
sbb
leave
xchg
jnp
inc
insb
add
ss
aas
addr16
xor
xor
xor
aaa
inc
enter
inc
xor
test
repz
bound
dec
lea
jb
popf
xchg
je
cmp
push
aas
inc
pop
mov
pop
popl
imul
cmp
inc
or
roll
lods
or
rclb
sub
push
push
cmc
xchg
flds
add
jge
stos
add
cs
dec
shrl
push
inc
jne
das
dec
mov
pop
les
orl
fwait
sbbl
cmp
jae
dec
rcll
inc
push
mov
out
movsl
add
loop
or
cltd
pop
and
aaa
mov
daa
inc
add
and
inc
shll
mov
xor
pop
dec
cmp
imul
push
xchg
dec
in
and
dec
enter
pusha
adc
popf
xlat
lods
bound
cltd
cmpl
fldl
push
mov
dec
mov
fldl
pop
xor
push
add
and
mov
adc
insb
pop
jb
or
pop
adc
adc
adc
inc
adc
lock
inc
jl
dec
jle
hlt
inc
cld
inc
or
or
test
ljmp
mul
mov
jg
add
shll
dec
fwait
js
lea
ret
mov
sbb
pop
push
iret
addr16
dec
and
inc
arpl
enter
movsl
imul
inc
xor
or
add
jbe
push
sub
pop
pop
jns
xchg
gs
subl
pusha
lret
jp
sub
data16
dec
test
pop
ja
shlb
xlat
int
test
and
jno
arpl
dec
imul
add
sub
pop
adc
test
arpl
pusha
mov
or
pop
test
xchg
pop
and
fsts
aas
pop
or
test
lods
fldenv
pop
xchg
ss
pop
xor
inc
inc
mov
das
inc
xor
push
outsl
push
cltd
add
dec
jne
je
pop
enter
xchg
or
dec
or
leave
test
inc
or
ja
push
out
sbb
test
lret
push
les
dec
xor
movb
add
imul
aas
out
dec
stc
xchg
or
xor
test
loope
xchg
inc
inc
stos
inc
push
push
roll
das
pop
adc
xchg
push
pop
cwtl
or
dec
jecxz
ds
int3
addl
cmc
push
movsl
lret
lret
jmp
insb
dec
pop
push
imul
das
movsb
fwait
push
and
insb
pop
and
scas
sbb
pusha
and
sub
xor
mov
pusha
aam
aaa
cmp
aaa
or
sub
testl
mov
pop
pop
and
cmp
jge
xchg
or
movb
cmp
jbe
adc
adc
stos
jo
or
push
jmp
and
repnz
gs
adc
scas
or
int3
pop
movsb
sub
inc
xor
repnz
add
sbb
and
pop
or
pop
or
int3
mov
out
mov
notl
imul
repnz
sub
orl
add
and
sbb
mov
pop
in
fildll
inc
leave
sbbl
jb
or
dec
push
in
mov
xor
andb
or
dec
cld
jmp
dec
push
sbb
fldt
subb
outsb
mov
and
push
pop
mov
push
rclb
pusha
sti
dec
mov
and
cmp
pusha
inc
insb
add
aas
and
fs
scas
and
popa
jo
cmpsl
sub
pop
sbb
mov
sub
leave
xchg
mov
arpl
pop
and
xor
or
jbe
imul
dec
stos
inc
mov
add
andl
cmc
mov
lea
cmp
and
cs
push
and
add
cmp
gs
jo
aad
aaa
adc
inc
adc
inc
mov
mov
inc
std
dec
fimull
adc
mov
push
xor
push
test
pop
arpl
adc
jecxz
xor
call
jbe
js
adc
fld1
push
xor
leave
and
sbb
sub
mov
inc
mov
call
outsl
xor
and
leave
cs
mov
inc
or
sbb
sub
xor
xchg
cmpl
xor
adc
and
dec
dec
mov
rol
xor
lret
pushf
push
adc
or
imul
outsl
nop
ror
faddl
cld
pop
inc
and
push
xchg
push
inc
lret
adc
sbbl
pop
rolb
sub
lds
inc
popa
mov
test
jl
add
xchg
cmpsl
popa
add
leave
jb
and
leave
pop
inc
test
nop
das
cmpsl
stos
dec
jecxz
jnp
popa
inc
jmp
out
inc
pop
jo
pop
sti
push
pop
adc
pop
xor
add
pop
or
test
pop
or
jmp
imul
adc
adc
cmp
ss
and
dec
rorl
pusha
scas
xchg
cmp
pop
or
adc
xor
sub
xor
xor
cmp
push
sbbl
and
pushf
xchg
mov
mov
mov
xor
or
popf
jo
or
xchg
sub
subb
add
mov
jae
mov
adc
jo
test
orl
jne
dec
clts
das
or
sub
inc
pop
push
iret
aaa
enter
or
daa
dec
adc
fadds
addr16
push
aaa
testb
pop
pop
ss
and
pop
add
pop
push
imul
add
test
popf
pop
cmp
inc
pop
pop
pop
inc
pushf
inc
jecxz
inc
adc
mov
in
dec
pop
push
pop
mov
add
test
fsubr
leave
cmc
add
add
or
inc
xor
mov
sub
daa
insb
push
mov
adc
je
inc
lods
dec
xchg
ret
das
adc
loopne
popf
sbb
pop
push
jae
out
sub
addr16
xchg
pushf
add
xchg
lret
rorl
mov
cbtw
push
cmp
xor
in
lods
pop
enter
imul
inc
cmpsl
insb
aaa
fcomps
hlt
sbb
adc
and
inc
mov
mov
mov
mov
movsb
mov
lods
xlat
xor
repnz
inc
xchg
inc
dec
xor
add
jmp
mov
imul
loopne
lock
fsubrs
mov
jne
int3
js
pop
cs
int
shlb
jns
jae
jb
cmpsb
imul
inc
lcallw
fwait
mov
cltd
inc
add
lahf
in
inc
push
pop
cmp
test
addr16
xor
add
push
push
clc
fstps
pusha
or
adc
adc
popa
push
fisubl
scas
scas
inc
xor
dec
and
push
pop
imul
repnz
fmuls
mov
jmp
imul
sahf
and
xor
xor
sub
testl
das
inc
es
dec
dec
xlat
popl
inc
lcall
add
sub
gs
or
es
sub
inc
dec
es
data16
lcall
add
or
jne
leave
push
dec
leave
mov
and
add
and
xchg
xor
sbb
xlat
verr
int
iret
add
imul
adc
arpl
and
add
das
js
or
add
mov
jns
sub
sub
les
xor
leave
es
and
dec
xor
hlt
pop
and
int3
imul
pop
sbb
test
je
sti
cmp
subl
repnz
sbb
negl
xor
or
sbb
xor
and
xor
cltd
lods
pop
pop
and
cmpsl
sub
mov
int
or
scas
movsb
cltd
lods
jno
cmp
inc
push
imul
add
fwait
add
and
jne
cmp
dec
pop
aaa
xor
sub
imul
dec
xor
add
inc
jnp
imul
imul
outsb
add
iret
jae
dec
lret
sbb
shlb
jo
dec
enter
xor
loopne
inc
test
adc
and
dec
jbe
add
ja
or
xlat
or
fadds
sti
push
xor
or
pop
stos
insb
fstps
sub
sub
add
subl
inc
xor
rolb
adc
add
cmp
test
in
xorb
lret
jge
nop
test
xchg
xor
sub
push
add
test
popl
sub
add
pop
add
dec
rol
push
addl
loopne
adc
or
iret
xchg
or
xchg
jns
sub
fistpll
in
shrb
and
and
xorb
add
or
sbb
add
vpshaw
nop
xchg
jnp
imul
jl
lcall
lcall
and
dec
add
mov
outsb
inc
xchg
inc
fcompl
jno
mov
xor
test
xchg
inc
inc
dec
jge
xor
pop
pop
test
xor
push
stos
mov
add
rorb
sbb
mov
push
sbb
lcall
push
dec
cmp
and
or
push
adc
add
mov
cmp
xchg
lock
sti
inc
xor
xchg
xor
add
sbb
outsl
iret
in
push
mov
mov
xchg
sub
nop
push
xor
adc
or
and
sub
xor
jmp
mov
inc
idivb
sbb
dec
sbb
sub
pop
jnp
or
jmp
fisttpl
lcall
mov
mov
adc
shlw
out
mov
inc
leave
or
ljmp
adc
fstpl
or
or
test
inc
insb
or
js
adc
jns
and
or
outsl
and
jg
mov
add
pushl
in
mov
dec
stos
or
data16
or
dec
das
cmp
sub
push
inc
out
mov
jmp
push
iret
inc
jae
pop
cwtl
dec
xchg
or
sub
cltd
or
adc
xchg
mov
lock
sti
adc
mov
or
inc
sahf
cmp
jp
push
cmpsb
mov
push
pop
or
inc
inc
mov
leave
pusha
fisttpll
stos
add
inc
dec
xchg
aas
pusha
cmp
adc
stc
les
lahf
and
jg
pop
mov
hlt
push
sub
movsb
inc
aaa
pushf
dec
ljmp
inc
xchg
xchg
daa
addl
nop
enter
pushl
mov
mov
mov
sub
arpl
jnp
aas
sub
gs
adc
mov
push
jb
ret
pop
add
push
sub
je
loop
mov
sub
inc
pusha
fildl
adc
adc
xchg
imul
cmc
insb
incl
imull
and
inc
push
push
adc
das
pop
arpl
pop
nop
dec
mov
push
push
push
cmp
stos
push
sbb
popl
in
pop
cmp
xchg
cmp
insb
stos
or
ret
pop
nop
adc
or
pop
or
lcall
stos
inc
shll
stos
aaa
xlat
or
mov
movsl
adc
add
std
xchg
fisttps
out
insb
adc
add
dec
xchg
pop
push
add
or
mov
or
adc
je
sbb
add
fwait
or
pop
or
daa
mov
std
out
movntps
sbb
mov
add
mov
cmp
add
out
push
adc
xchg
pop
dec
dec
xchg
popw
lods
add
imul
or
add
xor
insb
insb
add
enter
fisubs
out
dec
add
inc
addl
out
divl
int
std
imul
fwait
arpl
in
adc
add
out
sbb
adc
push
add
addr16
notl
into
sbb
je
jmp
push
fs
jo
or
push
push
or
add
or
loope
xor
jb
sub
in
or
xchg
fmul
sub
inc
xchg
jns
mov
test
pop
mov
pop
sar
popa
xchg
lret
test
fldenv
cmpl
aaa
xor
inc
and
or
fcomi
push
ljmp
adc
lcall
mov
repz
mov
enter
daa
mov
push
fsubrs
inc
adc
in
sub
les
cltd
or
sti
outsb
add
or
cmp
call
decl
inc
fildll
dec
ss
adc
mov
xchg
insl
or
stos
sbb
pop
inc
push
clc
push
dec
sysexit
adc
cltd
and
decl
mov
std
hlt
push
pop
hlt
mov
push
or
lret
push
and
insb
mov
push
scas
adc
enter
sub
inc
sbb
pop
add
push
xchg
xor
popa
and
jno
call
out
mov
or
popf
fcoml
aam
inc
test
inc
ret
fdivs
xor
fadds
mov
add
repz
mov
push
out
dec
cmpl
out
push
jno
incl
or
insb
fs
jp
fildll
or
das
push
add
or
test
ljmp
add
lea
or
outsb
notb
movb
into
push
xchg
loopne
out
adc
ss
andb
mov
sbb
push
mov
jno
xor
push
mov
inc
sbb
push
pop
dec
or
and
add
andl
xor
add
xor
add
sbb
sbb
nop
fistl
push
jne
pop
or
cli
pop
xchg
call
sub
daa
orl
int3
sbb
or
pusha
sbb
xor
push
adc
outsl
xor
stos
jae
bound
sbb
and
cmp
adc
push
sub
arpl
ss
add
mov
push
pop
lcall
pop
pop
fldenv
xchg
fdivs
stos
sbb
negb
insl
fcmovnb
add
inc
push
inc
jmp
lahf
mov
pop
mov
jecxz
dec
pop
adc
xor
sub
inc
and
xchg
add
pop
push
cmp
sbb
pop
sbbl
or
pushf
inc
insb
aaa
and
incl
or
mov
fs
out
push
mov
cmp
ja
imul
add
jno
adc
fs
and
push
idivl
sbb
orl
and
dec
xchg
or
sub
jo
xor
cmp
add
jmp
lret
xor
push
ret
jbe
xchg
fs
sti
pop
std
daa
adc
addl
adc
cmp
pusha
push
xor
and
and
jle
movsl
icebp
mov
adc
insb
xchg
pop
leave
jae
add
das
adc
push
rcrl
jo
pop
jg
and
inc
pop
sbb
add
dec
leave
inc
cli
lods
sti
inc
in
andb
push
frstor
cld
mov
aaa
xlat
inc
icebp
call
mov
and
and
and
or
cwtl
pop
das
inc
out
or
add
mov
or
pop
fsubs
in
add
sbb
testb
and
add
popf
jnp
loopne
sti
cmp
add
sbb
add
xchg
push
lds
or
mov
je
add
adc
test
pop
loopne
push
call
add
cmp
ficomps
and
and
cmp
adc
nop
je
ja
sbb
and
lods
add
imul
adc
xchg
cmp
adc
adc
pusha
inc
sbb
out
jae
sbb
jmp
int
sub
push
dec
adc
cli
push
pop
xchg
add
imul
push
sbb
dec
or
movsl
and
in
and
mov
pop
add
inc
push
mov
fidivs
mov
rcrb
jecxz
cmp
mov
loop
fnstenv
iret
cmp
jo
stos
push
and
fwait
or
in
add
xor
faddl
pusha
lahf
pusha
das
mov
add
data16
adc
loopne
fwait
cmp
and
les
pop
enter
jg
push
sti
push
pusha
shl
fdivrs
sbb
dec
addb
cmpsl
or
test
fildl
insb
and
cmpsb
sbb
inc
std
call
adc
test
or
or
mov
out
movsb
mov
daa
sbb
mov
or
sub
inc
adc
add
jge
subl
cmp
lar
lret
add
dec
xchg
add
insb
pop
dec
es
je
dec
jne
xor
je
xchg
out
jg
adc
movsl
pop
inc
dec
or
dec
sahf
cmp
xchg
test
sub
addl
ss
scas
rolb
mov
xchg
dec
xor
inc
add
jae
push
enter
fstpt
idivl
and
and
cld
clc
and
or
and
and
or
in
stos
popa
daa
xor
xor
pusha
sbb
aaa
pop
dec
fmuls
cmp
iret
jae
add
push
es
addb
push
add
pop
adc
mov
cmp
popa
add
out
nop
push
es
fsubs
pop
xor
push
outsl
call
gs
fwait
push
stc
mov
and
ds
pop
sbb
loop
cmp
js
and
test
inc
or
add
inc
and
ja
mov
nop
data16
js
sub
dec
out
sbb
test
xchg
sbb
scas
fmul
adc
inc
repz
add
dec
inc
mov
inc
pop
adc
or
and
dec
negl
call
and
push
das
jbe
adc
push
add
filds
or
das
insb
and
insb
xor
arpl
adc
insb
in
cltd
mov
negl
pop
sub
push
inc
call
sbb
xchg
sbb
xchg
jo
push
pop
jo,pn
jo
mov
mov
test
add
or
sub
or
mov
mov
sbb
scas
cmc
push
js
cmc
cmp
mov
or
mov
or
pop
adc
mov
jmp
and
cmp
fsub
and
stc
lret
leave
add
pop
mov
and
and
cmp
push
in
loopne
inc
mov
jo
loopne
loopne
insl
scas
and
lea
jbe
inc
adc
sbb
ss
fs
jg
xor
or
je
jo
pusha
mov
es
imul
testl
faddl
adc
pop
inc
add
add
loopne
adc
pop
pusha
std
push
cmp
sbb
fs
adcl
imul
lds
sub
ds
das
adc
push
pop
lods
inc
add
test
loopne
in
push
mov
xchg
xchg
mov
mov
add
and
insb
xchg
add
imul
and
fisttpl
fldcw
std
xchg
stc
xor
inc
sub
fcomps
and
push
lret
sbb
dec
sbb
in
or
adc
and
or
decl
fsubl
and
adc
js
ret
jo
xchg
pop
adc
mov
xor
je
xor
mov
adc
pop
fwait
or
push
pop
test
xchg
xor
jl
push
adc
add
out
or
lods
out
dec
pusha
fwait
push
and
sbb
and
pop
or
cwtl
out
pop
out
push
dec
cmp
sub
mov
sbb
hlt
fisubl
repz
xchg
adc
pop
outsl
mov
adc
sbb
ret
push
adc
sar
or
push
xchg
mov
cmp
mov
jnp
push
mov
orb
and
push
mov
and
mov
push
pop
push
popa
mov
enter
adc
adc
sub
icebp
push
daa
add
jne
loopne
imul
push
pop
jne
push
add
xchg
push
push
fs
push
out
and
and
add
add
add
or
push
pushf
add
adc
cld
mov
in
push
xor
or
lds
sti
sub
subb
xorb
adc
cmp
rol
pop
inc
out
int
mov
mov
xor
pop
push
xchg
pop
jb
jo
and
das
sbb
inc
push
xor
mov
imul
add
or
jp
sub
jg
cmp
adcb
xchg
mov
xchg
pop
mov
add
dec
ret
xor
in
push
adc
jecxz
std
push
xchg
adc
sti
pushf
add
pop
pop
pop
push
mov
sti
daa
std
imul
pop
sti
addr16
push
or
push
xor
sub
setns
push
aam
jg
adc
pop
fs
dec
das
scas
or
add
inc
or
insl
imul
and
pop
inc
mov
pop
bnd
mov
or
dec
pop
mov
sbb
adc
xchg
sbb
sbb
mov
test
jg
loop
sbb
jmp
pop
nop
insb
aas
add
fcoms
nop
adc
inc
adc
hlt
fstps
pop
jo
fistpl
pusha
jo
test
testb
popa
pop
into
push
push
arpl
xor
mov
adc
nop
xchg
fs
mov
dec
call
insb
sbb
stos
popf
cmpl
pop
mov
xchg
std
xor
sbb
adc
push
mov
decl
or
roll
push
xchg
enter
fs
aam
lcall
pusha
sbbl
dec
ret
xchg
add
outsb
cmp
mov
xchg
jge
adc
ret
inc
or
cmp
push
sbb
data16
cmp
mov
insb
lret
sub
sub
or
add
ss
pop
shll
jbe
imulb
xchg
roll
xor
ret
sbb
testl
cmp
aam
pop
or
inc
cltd
xor
mov
push
xor
movsl
or
pop
mov
ret
pop
xor
mov
or
repz
hlt
add
sti
iret
mov
or
mov
or
cld
mov
jb
aam
sub
jbe
push
or
add
pop
inc
pusha
insl
cmpsb
and
cmp
xchg
cmp
push
jmp
jae
stc
cld
pop
sbb
cmpsb
push
cmpxchg
mov
pusha
mov
jp
xor
fisubrs
int3
push
xlat
inc
push
insb
filds
jo
xcrypt-ecb
cmpsl
dec
mov
dec
add
enter
jl
pop
insb
movl
sbb
loopne
and
xor
stos
pop
iret
scas
sarl
dec
dec
push
pop
xchg
add
out
scas
add
cli
cmp
mov
insl
jmp
and
insb
or
cld
insb
add
shrl
lds
xor
adc
dec
xor
inc
inc
jp
adcl
add
iret
push
dec
and
or
jne
mov
pop
scas
push
jo
pop
jb
in
out
in
fistl
xchg
jl
mov
js
js
loope
enter
ret
loope
dec
push
and
addr16
pop
insb
xor
sbb
adc
adc
and
pusha
pusha
mov
xchg
inc
mov
xchg
loop
pop
addr16
inc
push
or
arpl
ja
data16
pop
sub
mov
or
mov
push
or
cmp
sub
sub
sub
pop
push
mov
cmp
and
enter
add
loop
adc
add
push
dec
sahf
add
jle
dec
mov
add
xor
add
add
pop
inc
incl
and
mov
call
enter
xchg
jecxz
js
or
fwait
incb
decb
add
insb
sbb
pop
add
adc
je
das
cmp
shll
psubsb
push
cld
arpl
jg
mov
das
out
push
cltd
mov
movsl
cltd
xchg
or
mov
inc
cwtl
and
sbb
orl
cmpsb
mov
and
rclb
repnz
jbe
xchg
or
dec
pop
add
dec
xchg
mov
fwait
pusha
inc
pop
test
or
cmp
cmp
push
jb
adc
push
and
test
hlt
or
mov
sbb
mov
push
fcmove
inc
adc
sti
inc
sbb
sub
push
aas
adc
inc
sti
stos
and
sub
pushl
daa
and
daa
inc
xlat
dec
fs
je
sub
or
fs
xor
mov
cmp
push
call
sub
or
cld
ja
aaa
xchg
popf
cmc
rcrb
adc
pop
lahf
outsb
pop
fsubs
xlat
lahf
pop
inc
fwait
jb
inc
insb
jb
mov
mov
xchg
pusha
in
loopne
jle
cltd
nop
jp
cs
cmc
xchg
pop
cmc
ljmp
cmp
sub
mov
and
mov
inc
xchg
cwtl
lcall
push
cmpsb
pop
dec
ss
sbb
pop
add
add
movsl
push
and
std
sbb
pop
xor
push
dec
fs
pop
xlat
imul
xor
adc
add
jge
insb
pop
or
inc
push
repz
push
mov
sub
lret
daa
sbb
jnp
cmp
sub
dec
decb
insl
ja
mov
push
pushf
cmp
sub
clc
lods
push
mov
cmc
incb
shrb
pop
pushl
cmp
pop
push
loopne
call
xlat
or
xor
dec
or
dec
add
mov
adc
pusha
inc
adc
in
xor
and
pop
adc
in
push
or
sub
or
ret
adc
fstpt
xor
and
imul
xor
fists
insl
rcrb
jo
sub
mov
jg
mov
jg
imul
pop
and
pop
rcrb
and
pop
inc
and
mov
xchg
or
les
and
and
add
cmovl
jno
popf
or
rcll
or
cltd
mov
fwait
scas
in
jo
lods
inc
and
subb
adc
jb
push
and
sbb
inc
adc
add
popa
pop
or
inc
aam
mov
pop
or
adc
movsb
push
into
inc
nop
rorl
mov
push
cwtl
and
sbb
or
dec
fs
or
and
or
and
add
subl
sbb
or
and
daa
jo
dec
sub
ret
aas
fcompl
xor
xchg
sub
add
mov
jbe
cmp
push
jb
dec
push
dec
push
add
xchg
je
arpl
add
push
cmp
cltd
and
add
push
fcmovu
adc
and
xor
sub
adc
or
xor
shrl
xor
lds
orl
cmp
inc
fldt
and
or
add
test
dec
rclb
and
filds
dec
lcall
push
das
subl
adc
mov
lds
push
pop
aas
fs
xor
mov
dec
leave
push
mov
xor
cltd
sub
sbb
lcall
cmpsl
inc
pop
test
pop
push
pop
and
adc
sub
cmp
and
insb
mov
outsb
mov
std
lcall
shll
xor
outsl
push
push
add
scas
xor
dec
push
adc
stos
or
out
inc
repnz
addb
data16
or
sub
xchg
fs
enter
ret
dec
mov
arpl
pop
or
sbb
shll
cmc
xchg
mov
mov
faddl
sbb
into
inc
xchg
xchg
cmp
push
add
insl
nop
add
movsb
iret
or
and
and
insb
pop
insb
adc
or
or
stc
sbbb
insb
dec
xchg
jo
or
add
sbb
xchg
xor
insb
pop
jo
xchg
or
aaa
insb
test
inc
mov
test
adcl
fsts
add
mov
mov
outsl
xor
jb
xchg
hlt
hlt
hlt
add
mov
sub
cmp
aad
inc
orb
mov
insb
fcmovb
sub
and
add
push
push
xchg
jmp
add
sar
or
aam
insl
push
mov
adc
adc
dec
inc
xchg
stos
xor
or
adc
jbe
pop
jnp
mov
aaa
pusha
ja
sbb
xchg
inc
jle
cmp
sbb
mov
add
cwtl
addb
pusha
test
add
mov
and
sub
pop
jge
shll
rorl
sbb
or
cwtl
cmpsl
add
xor
xor
sbb
sub
sbb
jo
cmc
sub
and
movsb
out
xorb
mov
push
push
mov
xstore-rng
cmpsl
pop
xor
xchg
and
jbe
add
and
jb
sbb
sub
xor
ljmp
sti
shlb
pop
aad
push
enter
xchg
mov
xor
sarb
int
sbb
xor
push
inc
jbe
sub
or
leave
or
push
pop
cmp
mov
sbb
test
lea
adc
add
add
nop
jp
cmp
arpl
inc
pop
nop
dec
jmp
add
aam
adc
fidivl
mov
call
jns
adc
das
mov
xor
push
push
sub
or
sub
mov
sub
or
xchg
mov
gs
pop
xchg
lahf
roll
dec
inc
or
xor
dec
xor
or
jmp
call
roll
movzwl
xor
mov
add
shll
add
adc
sub
std
push
adc
fwait
or
and
pushf
adc
rorl
cltd
ror
out
add
dec
push
lods
cmpsl
adc
inc
push
rorb
add
mov
jb
or
pop
stos
in
xor
sub
stos
movsl
shrl
cmp
popf
sbb
cmp
cmp
pop
cwtl
les
add
stos
or
scas
add
mov
dec
xchg
fildl
dec
add
and
or
sbb
adc
push
imulb
sbb
jo
and
lds
jnp
adc
mov
add
jecxz
push
sbb
sbb
sub
loopew
lea
cld
dec
jbe
lock
je
cmp
or
push
jnp
cmp
push
adc
inc
add
pop
nop
aaa
xor
xor
mov
or
leave
andb
add
test
pop
insl
jp
pushl
add
mov
sbb
add
pusha
das
push
push
mov
dec
xor
jo
add
mov
inc
movsb
lret
mov
sti
in
add
add
das
jo
jo
fwait
dec
sbb
add
nop
xchg
add
push
xor
jo
iret
sti
stc
jg
xor
bound
push
and
outsl
xchg
xchg
cmp
jg
fsubrl
sbb
lods
push
push
add
mov
inc
and
repnz
push
xor
sahf
cmp
lds
dec
cmp
je
xor
pushf
lret
in
inc
mov
push
adc
loop
sbb
pop
lret
adc
pusha
pop
je
sub
ret
jns
add
incb
lret
fs
outsb
mov
adc
sbb
or
lods
imul
sub
add
stos
inc
lock
btc
fs
push
pop
repnz
imul
and
inc
xchg
ret
adc
pusha
sub
adcb
addl
xchg
enter
pop
add
sbb
add
pop
inc
add
pusha
sbb
add
jg
push
enter
nop
cmc
jo
das
jno
or
dec
sub
popf
sub
xor
fwait
inc
lcall
add
sub
mov
push
or
sbb
add
add
cmp
es
decb
mov
int3
dec
sbb
add
or
iret
adc
adc
inc
repz
cmp
or
inc
xchg
repz
lcall
scas
dec
pop
add
pop
and
mov
or
add
in
xlat
cmp
pop
sub
xchg
outsb
push
xor
in
mov
xchg
fs
mov
mov
jp
jo,pt
inc
insb
xor
stc
bound
pop
pop
insb
leave
call
xchg
push
inc
and
mov
imul
add
push
data16
cmp
dec
mov
mov
dec
pop
jae
and
add
dec
push
ja
add
shl
outsl
hlt
nop
fistl
inc
call
jb
pop
xchg
and
xchg
push
mov
add
pushf
scas
sub
lea
std
decb
lods
mov
inc
movsb
in
hlt
adc
and
sti
iret
icebp
jle
inc
out
das
in
mov
call
xor
pop
sub
mov
shll
cmp
scas
push
lsl
fs
push
dec
mov
mov
and
add
aaa
addb
arpl
shll
add
cmp
add
mov
sbb
add
addl
popf
xchg
cmp
add
nop
mov
add
mov
push
adcl
adc
addb
in
push
mov
mov
pop
xchg
addr16
add
cmp
sbb
fs
andl
lret
repnz
add
cmp
ds
cmp
and
add
lret
mov
in
in
add
or
cmp
push
adc
cwtl
fildll
lods
mov
add
insl
ret
in
push
pop
mov
mov
add
mov
sub
jno
or
push
mov
pusha
inc
jo
mov
cmpsb
adcl
push
imull
fistpl
add
movb
test
sub
pop
adcl
add
popa
add
dec
xlat
push
dec
add
inc
push
sub
js
mov
xchg
mov
sbb
sahf
dec
push
mov
mov
adc
movsb
lock
and
mov
outsl
mov
dec
sbb
out
pop
loopne
insb
insb
push
adc
and
ja
call
push
lods
lcall
adc
sub
je
pushl
pop
or
add
aas
testb
push
add
sbb
xor
inc
icebp
cld
add
mov
dec
pop
sub
inc
add
mov
or
mov
lods
push
addr16
scas
into
out
or
sbb
or
movsl
test
pop
nopl
adc
data16
nop
hlt
iret
xorb
or
xchg
dec
mov
cmp
push
push
xor
insl
insl
shlb
inc
pushl
or
or
pop
push
les
add
dec
mov
inc
mov
repz
dec
adc
incl
mov
test
dec
lahf
sahf
andl
lods
and
sbb
clc
ret
gs
insb
fbld
jno
ja
frstor
lcall
fldl
cmp
inc
mov
cmp
dec
sub
jmp
fs
dec
andl
add
inc
inc
loope
sbb
out
dec
push
jno
sbb
add
fisubl
push
in
sbb
dec
mov
pusha
or
je
test
loopne
je
and
jp
add
pop
sbb
mov
test
pusha
inc
pop
jmp
sti
cmp
add
pop
mov
adc
sbb
insb
lret
push
inc
sbb
mov
lret
dec
aad
ljmp
add
sbb
and
xchg
jg
xchg
aaa
xor
push
ljmp
inc
aaa
mov
push
jne
shrl
cmp
stos
jae
pushf
mov
pop
and
addl
dec
test
pop
inc
sbb
imul
push
std
jp
jl
stc
lahf
add
dec
test
xlat
adc
sbb
lret
adc
pusha
pop
hlt
mov
loope
sarb
repz
int
mov
movsb
push
push
mov
inc
push
sbb
cmp
sbbl
fs
sbb
popa
neg
loope
dec
xor
push
fbld
lret
cltd
inc
mov
jo
fistpl
fildll
or
fs
aaa
dec
les
cmovb
adc
mov
dec
orl
daa
or
dec
daa
dec
jns
out
mov
lret
addr16
push
rorl
jb
je
mov
and
and
sbb
pushf
inc
leave
sbb
push
stos
movsb
fcomps
popf
push
add
mov
data16
xor
in
incb
cmp
or
sbb
int3
jo
and
cmp
xor
push
leave
lret
lds
invd
sbb
dec
or
mov
mov
jl
cs
test
aas
mov
fs
rorl
sub
pushf
add
xor
mov
xor
push
insb
ret
sub
lods
int3
adc
push
lock
push
sbb
scas
inc
mov
out
xor
imul
push
inc
inc
jecxz
pop
push
or
mov
xor
pop
pop
add
adc
dec
pop
pop
mov
cmp
in
mov
inc
sub
sub
xchg
scas
pusha
mov
bound
shrl
cmp
sbb
stos
sbb
cmp
or
shlb
adc
iret
adcl
lret
pop
sub
cmp
js
xchg
add
and
jbe
sbb
jo
outsl
mov
dec
add
add
pop
jb
xchg
sbb
jo
pop
mov
push
jb
je
mov
or
pop
roll
lahf
rcr
push
enter
sbb
leave
inc
xor
and
repnz
jb
adc
enter
adc
adc
inc
ds
adc
outsl
roll
xor
dec
shl
jb
sub
cmpl
push
xor
in
push
arpl
jb
or
stos
jb
push
lock
mov
dec
stos
pop
or
imul
outsl
jl
lds
push
or
dec
and
dec
push
test
mov
push
lods
mov
sbb
and
add
movsb
jns
jl
add
or
xorb
sub
cmpsl
addl
push
mov
adc
fcoml
add
fs
out
cmp
cmp
iret
push
or
sub
or
orb
lods
cmp
push
sbb
dec
pop
push
pop
xlat
pusha
cmp
bound
jnp
inc
sub
xchg
cltd
adc
cmc
sbb
ja
push
dec
xor
mov
jl
lds
mov
xchg
scas
stos
ficompl
addr16
aas
shl
pop
xor
cmp
sub
mov
popf
or
loopne
add
mov
int3
mov
push
mov
mov
inc
and
dec
and
sub
dec
dec
dec
ret
xchg
or
scas
adc
lods
xlat
lea
movsl
dec
add
jo
mov
cmp
jo
sbb
out
insb
sbb
or
clc
or
and
iret
and
mov
sbb
roll
xlat
add
add
test
mov
or
dec
jmp
je
test
pop
push
in
cmp
fmull
inc
je
sbb
and
gs
mov
and
pop
add
insb
negl
mov
inc
push
mov
xor
daa
int3
push
xlat
add
mov
or
mov
fs
push
pop
add
nop
mov
decl
ret
sbb
xchg
leave
js
sbb
mov
cwtd
int
cltd
das
mov
xchg
sub
jbe
add
jo
inc
popa
or
imull
dec
inc
out
adc
sar
add
push
add
adc
test
push
xor
mov
enter
mov
inc
and
rorb
sbb
or
and
sarl
or
mov
adc
sti
std
xchg
lea
popa
adc
loop
pop
arpl
push
ret
pop
ja
pop
pusha
sub
mov
into
and
hlt
add
push
adc
andb
or
push
or
mov
cld
xor
jae
inc
ja
shlb
adc
add
push
dec
out
mov
or
sub
add
lret
cmp
cs
lods
inc
inc
dec
xchg
push
imul
inc
cmp
sub
pusha
cmp
sub
mov
add
popf
out
shlb
out
addb
lret
mov
popa
les
mov
lds
xor
or
nop
sti
cld
and
jnp
inc
mov
in
imul
nop
in
sbb
add
lock
cmp
xor
xchg
arpl
inc
dec
adc
enter
inc
jecxz
das
push
insl
and
inc
daa
cmp
es
xchg
xor
adc
inc
mov
push
push
add
dec
shll
dec
inc
inc
cmp
cmp
sarl
aad
mov
xlat
push
rcrl
cld
mov
jae
pop
sub
sub
mov
sbb
xor
mov
push
pop
mov
add
sti
out
cltd
or
rcll
push
int
pop
rcrl
call
cwtl
pop
insl
xchg
in
ss
push
ret
pop
adc
jbe
mov
lea
or
andl
imul
sub
pop
enter
jns
sub
cmp
scas
jo
loop
dec
pop
in
sub
stos
add
xor
in
add
add
adc
test
mov
mov
add
aad
pop
xor
cmp
js
xchg
xor
dec
or
cmp
out
mov
std
push
or
cmpsl
je
add
js
test
adc
lret
inc
loopne
aas
movsb
pop
pusha
or
fmuls
add
insb
push
add
add
lret
mov
stos
or
shlb
mov
jg
and
adc
and
push
mov
pop
push
cs
inc
mov
and
and
mov
divb
sub
inc
inc
sbbb
enter
pop
inc
cmp
adc
xchg
daa
mov
sub
aas
xor
sbb
inc
sbb
inc
push
sbb
ret
mov
xor
or
arpl
lret
std
lock
and
std
adc
in
add
jbe
cmp
les
push
inc
lods
pop
cmp
stos
ss
pop
xchg
popf
sub
pop
push
shll
xor
push
lods
inc
dec
je
leave
sub
xchg
sub
dec
mov
mov
push
push
push
cli
repnz
mov
xchg
xor
or
loop
dec
jp
xor
cmp
jbe
cli
push
push
aaa
push
sbb
jno
lret
push
in
fstpl
jns
repz
cmp
jnp
or
or
daa
imul
ja
or
add
test
loopne
xchg
cwtl
movsb
pop
arpl
dec
or
jo
and
and
pop
jne
cmpsb
push
sub
mull
dec
adc
cmp
test
les
xchg
add
pop
add
xor
mov
push
adc
xlat
js
sub
add
dec
mov
lock
cwtl
dec
push
adc
call
pop
push
xchg
fsubs
fcoms
stos
outsl
jae
sbb
jae
sub
xchg
lcall
sbb
cmp
faddl
sbb
shr
inc
das
add
sbb
cmp
sub
xor
cli
mov
or
or
cmp
cmp
push
mov
pop
xor
adc
mov
fs
popa
rdmsr
mov
push
jecxz
js
add
inc
pop
rclb
xor
and
add
push
pop
sbb
cltd
in
and
inc
sbb
and
ret
cmp
xor
mov
mov
fwait
in
mov
js
mov
lcall
sbb
or
lret
gs
cmovo
hlt
dec
jne
outsl
inc
test
mov
or
in
push
repnz
cld
insb
and
mov
sbb
sbb
or
push
int
testl
sbb
inc
jne
add
or
pop
mov
jge
setnp
lds
mov
and
inc
mov
sbb
mov
mov
dec
daa
and
add
adc
cmp
lods
pop
add
xchg
jae
leave
xor
xor
fs
push
ljmp
adc
pop
or
gs
mov
dec
adc
cmp
add
inc
repz
pop
adc
xchg
xchg
rclw
nop
in
fldenv
push
dec
dec
push
push
or
pop
or
orl
pop
call
xchg
xor
hlt
in
add
orl
imul
dec
push
sub
arpl
or
push
sub
out
fsubs
or
inc
xor
pusha
mov
in
pop
add
inc
pop
nop
push
pushf
push
dec
mov
sbb
xor
push
and
fistps
movsl
mov
sub
ret
pop
stc
das
sbb
cmp
das
pop
mov
push
or
test
inc
js
and
rorl
pop
mov
xchg
pop
pop
mov
loop
inc
sub
pushf
or
lock
xor
mov
adcl
mov
pop
jg
jg
addl
jo
jmp
stos
aad
leave
xor
cmp
mov
add
popl
xor
test
daa
and
pop
bound
push
cli
push
sub
popa
es
cmp
repnz
push
add
pop
or
and
outsl
or
push
cmp
mov
cmp
cmp
add
and
mov
or
fisttpll
mov
paddusb
lods
add
jb
jae
iret
sbb
aad
add
jno
pop
cmpsb
adc
sbb
or
ja
adc
sub
xor
inc
xchg
push
mov
pop
push
xor
mov
sbb
xchg
cwtl
add
dec
dec
push
mov
es
addr16
inc
and
jle
pop
mov
sahf
pushf
adc
adc
and
and
push
mov
or
push
mov
pop
outsb
pop
push
sbb
fiadds
push
cmp
lret
and
inc
adc
test
add
ds
mov
fmuls
sub
insl
adc
das
adc
sub
pop
add
shrb
push
ret
mov
xchg
xor
cmp
add
add
and
popl
inc
insb
inc
add
cmp
and
sbb
push
push
inc
mov
push
dec
or
sbb
pop
sbb
sbb
sbb
add
or
pop
inc
sbb
cmpsb
orb
fcmovnb
add
pop
add
orb
outsb
xchg
sub
push
mov
sub
or
jo
into
mov
sub
cmpsb
inc
rclb
popa
loop
fmull
mov
add
or
outsb
dec
sarb
cmpsb
ret
adc
mov
or
mov
cmp
jmp
dec
inc
and
push
or
sbb
add
test
ret
add
add
dec
and
add
jecxz
subl
push
dec
ret
add
xchg
mov
jo
push
fs
push
xorb
push
sub
rolb
in
or
aas
xor
sub
and
push
lock
cmp
push
in
orb
pushf
adc
push
dec
pop
ss
addl
mov
jmp
dec
adc
and
add
seta
jno
and
adc
int
jo
dec
dec
fwait
mov
stos
push
shll
orl
aaa
inc
aas
jo
sbb
push
jbe
cmp
enter
jbe
push
out
adc
cmp
sbb
or
aaa
lods
and
mov
sub
adc
test
data16
pop
and
jo
iret
cmp
cmp
mov
xor
pop
and
dec
mov
push
jno
and
and
fmuls
add
pop
pop
cmp
push
rorb
jnp
adcb
cmp
and
nop
add
pop
adc
dec
add
jno
inc
dec
mov
and
jno
incb
lock
mov
add
cmp
xchg
das
dec
movsl
sub
add
imul
insl
aas
push
insb
push
invd
add
mull
lock
push
mulps
in
dec
in
dec
pusha
nop
add
sub
dec
jl
push
sbb
jmp
xchg
gs
push
add
add
xor
add
jp
push
push
adc
ret
test
push
mov
push
pop
pop
cmp
stos
and
push
nop
in
pusha
sbb
lahf
cmp
adc
and
enter
je
add
mov
in
and
and
push
adc
clc
add
inc
sub
xchg
imull
ret
std
hlt
cmpb
in
mov
xor
xor
mov
xorl
pop
xor
sbb
sbb
and
jp
data16
or
sub
nop
out
sbb
dec
push
sub
es
in
pop
cld
jae
cld
and
dec
fs
and
mov
movl
add
jae
les
mov
inc
dec
sub
lret
hlt
test
pop
cmp
and
insb
imul
stos
xchg
daa
or
daa
lret
mov
rcrl
hlt
jmp
sbb
add
out
and
mov
inc
xchg
es
rclb
push
je
sqrtps
inc
push
clc
in
arpl
push
adc
mov
js
push
sbb
add
std
cmp
sub
mov
testl
add
xor
ret
xor
adc
test
inc
cmp
adc
leave
jbe
sub
add
mov
or
adc
mov
add
loopne
adc
cmpsb
das
loope
xchg
or
sub
or
jns
loopne
insb
jmp
adc
sub
sub
cmc
or
or
fwait
sub
daa
sbb
adc
xchg
add
or
sbb
jbe
pop
add
dec
les
ret
sbb
sbb
add
pusha
stos
cmp
and
decb
add
jo
sub
pop
xor
popa
movaps
or
mov
ret
add
mov
xorl
add
arpl
push
pop
xor
sbb
xor
fldl
dec
mov
and
and
fisubrl
push
scas
or
sbb
and
mov
push
adc
popa
rcrl
out
or
pop
sbb
popa
xchg
addl
inc
or
jae
stos
mov
cmp
lret
push
mov
sub
dec
mul
fcmovu
std
add
adc
pop
or
sub
and
push
sbb
mov
add
rcl
push
into
or
or
xor
and
cld
sbb
jle
aas
push
insb
sbb
or
insl
mov
insb
or
xor
insl
xchg
cmp
adc
stc
cld
pop
adc
push
icebp
loopne
cmp
cli
push
dec
mov
push
sbbb
test
in
pop
mov
insb
mov
adc
dec
xor
std
idiv
or
daa
cld
in
ret
add
push
dec
outsb
int
sbb
or
inc
add
rolb
addr16
jge
mov
mov
dec
and
cmp
pop
pop
inc
and
rorb
rorl
add
fchs
je
add
les
mov
js
inc
or
or
push
lcall
insl
pop
and
movsl
fadd
xor
fsubs
mov
xorl
adc
and
sub
sbb
std
xor
cmp
pushw
cmpsl
dec
mov
and
cmp
clc
dec
adc
das
sub
push
jnp
pop
add
push
push
cmp
jb
sub
and
or
xchg
mov
and
dec
in
xchg
icebp
adc
pop
and
mov
add
xchg
push
nop
adc
inc
add
sub
cltd
movb
mov
sbb
imul
or
daa
xorl
sti
je
aad
lret
fprem1
je
dec
add
push
ja
pusha
adc
leave
add
jae
call
fs
call
push
iret
nop
or
xchg
pop
adc
xor
insb
sbb
test
orb
cmpsl
pop
jae
rorl
or
add
and
and
int
je
dec
sbb
cmpb
pusha
shlb
sbb
push
add
pop
lcall
loope
sarb
leavew
mov
sub
subl
sbb
jno
js
inc
push
stc
mov
mov
cmp
jnp
in
cmp
inc
sbb
lods
cmp
mov
push
or
and
imul
js
sub
pushf
pop
jge
pop
adc
repz
push
daa
sbb
imul
push
xlat
and
or
pop
inc
mov
lahf
pop
stos
cmp
popa
and
es
pop
mov
dec
sbb
pop
sub
mov
pushf
jae
out
mov
add
mov
rcrb
movb
mov
movl
je
add
hlt
xchg
mov
fwait
lea
add
sti
add
je
add
push
sbb
pop
nop
or
mov
loope
ss
nop
incl
stos
fcomi
jbe
push
cmpl
push
and
cmp
hlt
or
and
mov
bound
jb
sub
call
pop
popl
sbbb
xor
xor
and
movsb
fldt
sbb
mov
xchg
aas
add
jb
ret
inc
pusha
ja
loopne
fisttpl
add
inc
sub
and
inc
mov
inc
inc
nop
or
inc
add
inc
inc
enter
add
and
inc
or
mov
xchg
adc
push
rolb
xchg
sub
jmp
loopne
sub
into
mov
pop
jmp
sub
adc
sbb
xlat
inc
jb
cmp
sub
cmp
cmp
push
add
sub
ss
aam
es
ss
add
add
flds
or
or
mov
jo
add
pop
push
add
add
clc
jbe
hlt
imull
mov
push
inc
dec
lods
pop
dec
add
cmp
and
or
adc
pop
push
addr16
shll
xor
or
inc
negl
fs
adc
dec
fs
jl
arpl
cmp
inc
jl
enter
add
jecxz
inc
lods
or
inc
divl
push
push
cmp
add
ds
test
lea
cmp
lods
xchg
inc
xor
adc
out
mov
xor
add
popa
fcmovnu
loopne
mov
or
and
das
and
mov
daa
cmp
out
sub
xchg
push
sbb
movsb
mov
add
fisubl
das
add
or
jl
or
aaa
out
add
add
ljmp
sbb
mov
out
xor
lds
push
outsl
and
ss
xor
mov
ss
sub
jae
mov
inc
inc
push
or
and
jo
sbb
dec
add
push
outsl
xchg
mov
cs
hlt
or
xor
cmpsl
or
jo
fadds
sbb
insl
out
in
fs
jmp
fs
incb
decb
or
fiaddl
sub
int
pop
xchg
mov
push
rolb
inc
cmp
pop
sbb
cs
lock
dec
repz
pop
pusha
adc
shll
rolb
sbb
dec
shll
int3
add
dec
paddusb
adc
sar
mov
les
push
push
dec
inc
jne
faddl
or
ja
std
shlb
adc
add
adc
add
add
xor
and
enter
enter
add
adc
push
push
enter
pop
jp
inc
pushf
imul
add
mov
insl
dec
mov
or
add
std
pop
or
popf
sti
xchg
std
cmp
sbb
hlt
or
inc
sub
pop
orb
jb
adcl
rolb
in
stos
cwtl
movsl
cwtl
cmp
dec
inc
jp
push
adc
sub
and
xchg
cltd
test
stos
int3
addr16
push
out
dec
push
cld
cld
pop
add
push
or
add
out
lcall
daa
adc
shlb
cmpsb
add
mov
js
xor
mov
pop
mov
mov
sbb
mov
mov
andb
push
and
or
orb
add
iret
pop
push
pop
popf
insl
inc
rcll
push
or
popa
sarb
cmpsl
adc
add
sub
add
loopne
or
adc
bound
loop
jl
sbb
xchg
inc
mov
mov
sub
xor
push
sti
or
mov
pop
das
cmc
xchg
inc
div
outsb
fsubs
inc
or
insb
mov
push
adc
sbb
imul
add
and
stos
in
adc
ret
sbb
add
out
push
adc
or
adc
scas
insb
push
and
xchg
or
mov
scas
inc
mov
enter
or
mov
call
adc
iret
dec
addr16
and
out
lods
sub
dec
les
adcl
xchg
imul
fs
inc
mov
pause
nop
sub
sbb
insl
iret
and
pop
lret
pop
movsb
and
imul
fstpt
in
or
sbb
inc
mov
inc
popa
data16
cwtl
outsl
mov
fwait
sub
sub
and
adc
sub
andb
dec
data16
push
cwtl
sub
dec
mov
pop
jo
adc
addl
sbb
or
push
add
push
pop
je
pushf
inc
mov
or
or
fwait
lea
mov
add
inc
push
adc
mov
jno
push
add
xchg
push
xor
xchg
fs
cmp
or
pop
int3
dec
cmp
and
sub
inc
jl
and
lods
push
and
add
pop
and
xor
movsl
bound
imul
add
push
popf
mov
inc
jne
cmp
je
xchg
jecxz
scas
test
adc
dec
rorb
sbb
inc
orl
adc
sbb
xchg
or
push
push
pop
or
movsb
dec
outsl
push
mov
movsb
sbb
in
mov
adc
xchg
enter
cmp
inc
movsl
pusha
jnp
add
jle
pop
add
sub
lock
cmp
xlat
mov
sbb
pop
xor
lods
sub
cld
in
push
adc
std
jle
in
add
cmp
push
in
pop
int3
roll
cmp
fstps
adc
movsb
cltd
jp
scas
sarl
dec
subl
scas
sub
aas
push
pop
pusha
adc
xchg
sbb
fidivl
add
or
xchg
mov
popa
insl
mov
sbb
inc
out
mov
xor
sub
daa
push
rorl
fsubs
inc
test
mov
mov
imul
enter
dec
cwtl
cmpsb
inc
xor
push
hlt
cwtl
rolb
imul
add
adc
push
bound
enter
adc
jne
leave
adc
jmp
xchg
sbb
mov
cltd
popw
stos
cli
pop
test
inc
push
jmp
xor
or
cmp
adc
adc
pop
ret
add
and
out
add
push
in
data16
fadds
adc
insl
je
pop
cmp
jo
push
inc
dec
pusha
add
loop
lods
add
sbb
arpl
pop
xor
es
sbb
jmp
adc
bound
push
popa
call
loopne
xorl
or
out
sub
push
inc
xorb
add
inc
ja
xchg
stos
cs
sti
pop
incb
out
xorb
xchg
es
pop
mov
insb
pop
into
js
pop
xor
aaa
xor
pop
jne
inc
sbb
xorl
leave
xor
xchg
dec
xor
mov
cld
jne
mov
sub
push
inc
or
cmp
pop
sub
out
test
push
outsl
int
data16
push
cmp
mov
sti
scas
cmp
jo
push
add
mov
test
das
imul
pop
xor
gs
cmp
or
sub
rolb
xchg
cmp
outsl
inc
or
inc
push
loopne
ja
inc
aaa
push
xchg
add
rol
push
out
mov
stos
cwtl
adc
adc
out
ret
xor
rcl
test
xchg
mov
rorl
pusha
es
addb
pop
add
dec
dec
inc
sub
cmp
adc
lds
mov
or
xchg
rcrl
bound
les
sbb
int3
ja
mov
xchg
sub
push
inc
and
rcrl
add
xchg
inc
inc
test
dec
add
add
inc
bound
sahf
mov
in
adc
dec
test
rcrb
adc
pop
xchg
fisttpl
xchg
inc
and
push
adc
cmp
inc
cmp
ret
and
pop
fisttps
inc
push
nop
mov
jo
xchg
hlt
nop
jo
add
xchg
add
iret
fwait
std
xor
cmp
addl
or
leave
pop
inc
rcrb
cmp
add
dec
rolb
xor
add
and
daa
sbb
nop
dec
push
sarl
in
sbb
or
leave
jle
or
push
add
sti
ret
addb
pop
cmpsl
sbb
mov
xchg
dec
pop
call
cmpsl
and
dec
pop
pop
and
xor
jp
lahf
and
sbb
inc
ret
jnp
cmp
adc
ret
jmp
lods
inc
or
sbb
scas
sbb
test
push
sbb
in
sbb
inc
loop
dec
push
test
dec
aaa
mov
ja
add
ret
ret
pop
sbb
scas
xchg
fisubs
sub
stos
inc
add
push
int3
cs
jae
xor
test
cmp
or
dec
lahf
in
leave
push
push
outsb
add
or
mov
push
mov
std
dec
mov
adc
popa
mov
jno
mov
mov
add
inc
inc
mov
test
mov
add
les
addr16
sub
push
pop
jb
nop
addr16
sbbl
xor
xor
push
enter
imul
test
sub
mov
push
or
xor
iret
dec
adc
sbb
fadds
in
and
push
or
pop
adc
mov
mov
pop
adc
push
or
mov
pop
dec
sbb
adc
hlt
fimull
cmp
lods
pushf
sub
cld
or
cmp
mov
jmp
mov
inc
adc
fsubrl
mov
and
jbe
call
add
or
jae
xchg
mov
add
loopne
cmp
lahf
pushf
or
loope
outsb
xorl
jno
pop
scas
add
cmp
jbe
dec
push
and
shl
sbb
popa
push
aaa
inc
push
mov
rcrl
shlb
push
rcr
push
notl
daa
pop
sub
popa
pushf
and
adc
leave
sub
outsl
and
loopne
mov
mov
shl
or
dec
cmp
in
movsb
adcl
and
lods
cmp
cmp
xorb
test
lret
xor
pop
cs
jecxz
test
stos
sub
fmuls
movsl
insb
shl
sub
lock
out
sbb
xchg
add
sbb
iret
loopne
into
mov
in
incb
adc
addr16
das
cmp
inc
int3
push
mov
xchg
lods
lods
pushf
inc
and
push
xchg
ss
cmp
rcl
fimull
cmp
dec
sbb
mov
adc
test
cmp
pop
xchg
ret
add
mov
adc
inc
iret
or
add
push
jne
fsubrl
inc
sub
fwait
xor
xor
mov
out
cmp
add
or
sub
xor
sbb
cmp
xor
ss
shr
mov
push
add
stc
or
lods
es
push
inc
fldl
call
inc
adc
lds
sti
inc
mov
or
push
arpl
push
mov
sbb
andb
jecxz
sar
fs
fucom
imul
xor
test
xchg
imul
iret
out
add
fmuls
or
add
and
xor
jbe
xor
and
mov
fsubl
or
jae
mov
shrb
imul
rolb
sbb
lds
sbb
ror
pop
or
cmp
sarb
inc
pop
shll
and
fiaddl
fmull
and
rorb
scas
add
add
add
sysenter
inc
push
inc
pop
inc
mov
or
sub
call
imul
push
das
adc
cmp
or
inc
test
dec
test
xor
sbb
xchg
or
mov
fsubl
pop
pop
mov
and
test
mov
xor
lret
mov
sbb
in
sub
pusha
mov
lods
mov
xchg
dec
les
rolb
add
movl
mov
add
jne
ret
sub
mov
and
stos
mov
sub
sbb
adc
movsl
leave
add
adc
mov
fdivl
or
sub
inc
int
movsb
cs
insb
adc
das
and
jae
mov
scas
or
lods
subb
insl
rcl
adc
mov
fldl
addr16
add
jne
out
or
loopne
idiv
repnz
inc
mov
cmp
sub
in
jmp
add
add
push
lea
push
aaa
and
insl
sub
sub
jl
jno
fiadds
dec
adc
scas
xor
inc
pop
fs
test
into
add
loopne
mov
sub
xchg
dec
inc
bound
dec
lss
add
sbb
adc
adc
pop
xor
insb
sub
orb
push
pop
adc
pop
out
or
jno
sub
data16
push
xor
mov
add
pop
leave
and
add
or
and
push
xor
xchg
or
and
mov
mov
sbb
int3
cmp
or
insb
sbb
fcompl
and
pop
ror
sbb
add
call
or
ds
push
pop
jbe
insl
pop
add
pmaddwd
sbb
sbb
movsl
insb
negb
jle
aaa
add
mov
pusha
inc
outsl
shld
mov
push
inc
sub
pop
inc
enter
pop
fildl
test
sub
xor
js
je
in
push
adc
jne
xor
das
ljmp
adcl
add
adc
dec
hlt
xor
jbe
rol
push
movl
push
or
or
subb
test
aaa
mov
je
cmp
xor
insb
push
inc
inc
pushf
or
sub
cli
push
fidivs
xor
mov
fldenv
inc
cmc
xchg
add
cwtl
and
and
or
sub
es
insb
xor
lods
lahf
mov
adc
mov
mov
xor
daa
pop
pop
push
pusha
icebp
add
jno
mov
add
sbb
add
push
in
sbbl
push
add
lret
out
nop
pop
xor
mov
push
scas
jne
sub
call
inc
sbb
shrb
cmc
shlb
mov
ds
mov
imul
js
adc
push
push
cmp
pushf
stc
ljmp
sub
add
pop
pop
pop
sti
and
sub
lcall
test
adc
out
mov
mov
sti
pop
fwait
mov
fldt
sbb
sbb
daa
pop
and
test
incb
mov
ljmp
or
jno
rcrb
data16
lcall
out
movb
mov
lods
enter
add
pop
jbe
insl
adc
adc
popa
push
xor
jmp
adc
add
ret
mov
pushf
push
mov
cmp
or
in
jecxz
shll
out
scas
xor
sbb
jp
or
enter
jecxz
mov
hlt
incb
je
fstps
outsb
dec
std
mov
add
dec
popa
sub
aas
and
push
add
adc
ja
mov
or
stos
lds
adc
adc
lret
mov
push
push
push
sbb
lret
push
mov
cmp
bound
adc
pop
jp
out
sub
lods
add
adc
mov
xchg
adc
pop
pushf
adc
cwtl
adc
and
shrb
loop
xor
or
sbb
mov
push
decl
pop
subb
icebp
cmpb
jl
ficoms
sub
pop
mov
adc
sub
test
inc
adc
sbb
imul
shll
inc
inc
mov
dec
sbb
mov
adc
pop
int3
mov
dec
shrb
mov
in
aam
sub
movsb
in
and
aam
insl
pushf
in
xor
and
or
xor
mov
test
push
enter
push
add
sbb
push
sub
shlb
dec
sbb
sbb
xor
fisttpl
mov
pushf
or
shrl
adc
push
sub
push
dec
xchg
cmp
lods
out
mov
mov
push
pushf
mov
push
out
add
add
lods
push
out
enter
in
lcall
les
push
dec
movsb
sbb
loopne
jbe
mov
jbe
mov
mov
sbb
data16
insl
xor
test
lods
outsb
add
unpcklps
adc
outsb
sarl
insb
addr16
pop
shrb
mov
mov
hlt
add
jno
xorb
jecxz
arpl
xlat
fcoms
je
xlat
or
sbb
add
jo
in
and
cmp
enter
push
cmp
push
daa
fs
push
fidivrl
xor
outsb
add
pop
into
mov
roll
lcall
xchg
and
sbb
pop
sbb
push
push
xor
sbb
pop
pop
push
insb
test
jo
inc
inc
inc
or
es
push
sbb
rcrl
je
push
testl
push
ss
inc
mov
push
nop
gs
cmp
add
push
loope
mov
sbb
and
in
mov
cmp
add
gs
dec
enter
sub
mov
mov
pusha
inc
pop
mov
ljmp
adc
or
cld
mov
in
adc
inc
std
add
aam
in
adc
mov
mov
insl
out
cmp
aas
cmp
sbb
pop
mov
lea
inc
mov
mov
push
out
push
pop
sti
adc
mov
push
xor
inc
adc
std
imul
mov
or
push
cmp
pushl
arpl
in
and
imul
inc
add
insl
call
mov
or
add
jno
pop
xor
mov
adc
add
push
cmc
inc
mov
xchg
cld
and
sti
ds
xor
leave
add
lahf
adc
xor
aam
push
and
sub
pop
xchg
mov
je
lret
mov
inc
sub
xchg
mov
or
adc
inc
xor
and
ja
sub
add
addr16
add
mov
sbb
popa
inc
jl
lock
xchg
adc
inc
or
movl
movsb
loop
push
and
dec
inc
pop
push
loop
loopne
cmp
mov
jle
arpl
sbb
adcb
or
mov
pop
and
push
out
jne
mov
and
pusha
js
adc
ljmp
lock
loopne
inc
adc
cs
pusha
std
mov
cmp
cmpsb
pop
daa
pop
int
inc
mov
sbb
adc
sar
fbstp
and
adc
stos
add
bound
sbb
int
push
ss
push
xor
cs
in
or
jle
sub
adc
push
xchg
orb
popf
cmp
or
mov
sub
sub
aam
push
adc
push
iret
pop
outsl
cmp
lods
inc
dec
mov
lea
fwait
sbb
rcrb
or
inc
adc
add
jmp
cmp
adc
adc
pusha
or
sbb
ficomps
pusha
inc
pop
push
jne
negb
fwait
adc
es
xchg
adc
inc
fs
gs
pop
insb
fs
in
clc
cmp
mov
pop
imul
add
jmp
pop
cmp
jbe
dec
js
cmp
and
stc
mov
insb
or
mov
aad
sub
jnp
push
add
loop
push
add
dec
mov
les
cmp
sub
test
iret
repz
mov
adc
shrl
mov
adc
pusha
adc
jl
fs
adc
fdivs
and
sbb
insb
sub
idivb
incb
push
pusha
fisttpl
inc
cwtl
cmpsb
xchg
or
fmull
jne
incl
pop
test
mov
dec
call
cmp
or
dec
cld
jno
sub
adc
adc
push
int
andb
add
jge
imul
test
mov
rorl
adc
fistpl
adcl
sbb
push
addr16
sbb
xor
ds
imulb
or
mov
xor
notb
adc
mov
dec
es
sub
int3
roll
mov
sbb
fcmovne
mov
jo
dec
psubusw
dec
in
test
add
fistps
push
add
sti
jmp
cmpsb
add
push
sbb
add
pop
and
cs
fildll
pop
push
or
jne
inc
lods
dec
cs
sub
xchg
sahf
xor
das
adc
mov
xchg
adc
push
cmpsl
lret
push
adc
mov
or
and
sub
push
push
test
lods
pop
mov
divl
cmp
pop
jae
aas
fcmovu
mov
xor
ss
or
xor
dec
inc
dec
adc
shl
ja
lds
in
add
fwait
cmc
mov
int3
or
insb
push
inc
aam
cmp
dec
inc
pop
cmp
sbb
pop
cwtl
add
les
mov
push
daa
loope
fldenv
mov
lds
jno
incb
jns
sbb
adc
loopne
addb
sbb
cmp
rcrb
jns
shr
cmc
aam
mov
push
mov
xor
pop
ja
mov
jge
data16
cltd
sbb
add
roll
jo
pop
adc
inc
imul
add
and
imul
dec
push
arpl
pop
add
push
fimuls
inc
xorl
add
jl
xchg
cwtl
insl
or
sbb
or
cwtl
mov
lods
mov
int3
or
adc
mov
ss
lods
mov
leave
aaa
sbb
pop
imul
pop
outsl
pop
sahf
scas
pop
gs
sbb
frstor
and
sbb
inc
sbb
addr16
fdivr
out
jb
and
fmuls
es
es
das
fwait
jge
popf
adc
jo
sbb
push
adc
arpl
fimuls
cmp
into
mov
mov
pop
loope
dec
out
sti
adc
jo
xchg
adc
mov
popf
adc
or
clc
cmp
and
pop
rcrb
sti
lcall
std
sub
push
or
push
add
imul
add
add
or
add
sub
mov
lock
cwtl
dec
xlat
pop
pushf
inc
mov
xor
sbbb
or
or
push
xor
cmp
enter
inc
inc
in
and
add
imul
addr16
xchg
dec
push
nop
inc
cmp
test
nop
dec
or
xchg
add
dec
sbb
andnps
cltd
fs
dec
adc
adc
jo
sub
xor
scas
and
adc
add
adc
dec
aas
lcall
jbe
lahf
add
cmp
fsubl
push
sbb
adc
inc
and
leave
in
shlb
sahf
pusha
mov
out
inc
repz
and
lods
movsb
or
pop
add
fisttpl
push
leave
sbb
jecxz
mov
push
fidivl
push
xor
pop
sahf
out
nop
push
jnp
rolw
jo
mov
je
inc
xchg
cmpsl
and
add
aaa
pop
xchg
mov
es
ds
cltd
loopne
xchg
sub
inc
xchg
or
xchg
outsl
test
int
pop
por
in
pop
daa
xor
andl
add
incb
insl
add
inc
cmp
cmp
testl
cmpsl
add
dec
and
mov
sub
xchg
xor
inc
or
adc
sbb
in
or
add
inc
fistpll
pushw
repz
in
or
push
or
inc
arpl
add
adc
xchg
inc
jecxz
push
sbb
nop
add
lods
add
scas
inc
int
rolb
in
inc
jno
mov
add
cmp
ss
sbb
imul
and
push
shll
jecxz
push
bound
insb
in
movsb
test
or
xor
push
push
push
inc
mov
and
xlat
mov
inc
popa
push
adc
xchg
sub
mov
stos
fisttpl
pushf
das
mov
adc
insb
dec
cmpsb
shlb
js
sub
sub
or
jae
adc
sbb
stos
and
mov
sbb
sub
adc
pop
sarl
inc
pop
inc
test
and
mov
add
ds
and
sub
mov
fnsave
cmp
jno
mov
and
pop
push
pop
adc
inc
inc
xchg
dec
fnstenv
push
dec
dec
aam
adc
fildll
push
sub
pop
imul
cmp
sbb
pop
or
cmp
xchg
or
mov
xor
aad
mov
sub
fsubs
repz
push
ja
add
lods
pop
test
add
inc
mov
inc
rcl
xorw
fs
dec
add
pop
push
xor
imul
hlt
inc
add
mov
nop
or
push
xor
pusha
inc
and
inc
xor
or
loope
adc
mov
add
stos
push
add
jl
mov
sbb
mov
inc
add
pop
faddl
sub
clc
lcall
pop
or
xor
mov
cwtl
or
dec
sbb
xchg
add
jo
xchg
lock
outsl
add
or
mov
jp
daa
int
js
dec
insb
aaa
xchg
or
pop
and
adc
jae
pusha
mov
jle
or
mov
inc
inc
push
push
rorl
push
and
nop
ret
je
or
push
adc
sub
sti
sub
aad
notb
andl
add
insb
add
xchg
adc
pop
adcb
push
add
pop
inc
dec
adc
pusha
xchg
stos
push
shlb
out
sub
insb
fs
daa
hlt
add
or
jnp
inc
inc
inc
xor
in
and
stos
xor
sub
mov
cmpl
adc
push
add
outsb
lcall
lods
add
or
add
add
inc
and
orb
ss
mov
sbb
add
inc
xor
sbb
adcb
jo
mov
add
push
push
push
cs
pop
cmp
adc
adc
mov
das
loopne
sbb
lods
cmc
and
in
test
sbb
xor
lds
fdivr
ds
jmp
pop
jae
test
push
fnstenv
mov
lret
divb
enter
or
bound
push
cwtl
js
add
jo
ss
pop
imul
daa
and
rorl
adc
jo
push
fmul
inc
mov
fiaddl
mov
lret
sbb
aaa
adc
adc
add
dec
test
push
ss
adc
adc
ret
stos
call
outsb
sbb
out
adc
jecxz
test
stc
adc
sbb
insb
inc
andb
fcomps
cmp
lcall
enter
stos
mov
addb
mov
sbb
inc
push
xor
cmp
daa
and
and
int
aam
insl
sarb
push
ljmp
stos
outsl
mov
ljmp
inc
dec
xchg
dec
xchg
into
mov
inc
movsb
int
loopne
mov
or
sub
cmc
push
scas
pusha
test
push
pop
fcomps
pusha
in
or
fwait
lods
insb
xor
popa
sub
jo
mov
imul
add
incb
sub
xchg
push
sub
pop
add
push
mov
cmp
sub
fsubrl
sbb
aaa
xor
daa
or
inc
imulb
popf
add
loope
xchg
out
mov
push
movsb
add
pop
or
in
push
out
push
and
nop
cmp
add
mov
lret
xor
cmp
xor
cmp
shl
es
add
xchg
add
xorl
push
fsts
mov
mov
fistpl
movsb
add
jns
add
es
popa
push
es
add
add
lea
mov
add
rolb
loopne
sub
cmp
adc
cmp
lods
cmp
ret
xchg
loopne
fsubs
sbb
xor
insb
mov
adc
cmp
ljmp
js
cmp
cmc
mov
inc
push
pop
fs
pop
bound
or
test
sbb
add
push
or
mov
inc
gs
ljmp
jnp
cwtl
push
andb
sbb
or
add
push
fmull
push
adc
cld
add
push
sub
xadd
daa
and
mov
lds
xor
mov
push
sbb
mov
push
out
inc
push
inc
dec
std
je
aaa
loopne
lods
add
loopne
add
or
insb
pop
add
add
mov
inc
inc
jae
stos
popl
pusha
cmp
flds
movsb
ret
sar
xchg
sub
add
pop
ja
stos
cmp
xor
xor
or
fs
push
or
insb
pop
jo
inc
lcall
inc
lcall
jne
in
xor
test
adc
inc
mov
mov
add
add
adc
jae
outsl
je
push
or
xchg
bound
inc
inc
xlat
add
andl
jb
or
roll
and
stos
and
lods
xor
arpl
fildll
or
push
push
aaa
test
jb
dec
sbb
gs
or
rorb
jnp
push
adc
add
adc
mov
add
mov
push
xchg
pop
cs
adc
in
sti
pusha
add
jne
jae
sbb
sbbb
mov
ss
insb
outsb
add
int
lock
and
insl
addb
sub
rdmsr
sbb
mov
or
pop
pop
imul
jmp
sub
dec
xor
push
subl
push
xlat
pop
aaa
dec
popa
mov
adc
push
fstl
mov
jle
mov
jb
pop
and
pop
loope
hlt
outsb
dec
and
xlat
pop
add
fisubrs
and
out
sahf
inc
pusha
jo
jo
add
stos
and
inc
xchg
sbb
inc
adc
sbb
inc
shrl
lock
loopne
add
sbb
pusha
xchg
push
scas
xor
js
add
dec
jge
pop
add
fildll
inc
add
fwait
inc
or
add
and
and
popa
and
push
fwait
aad
insl
adc
out
push
hlt
or
out
xlat
add
push
scas
or
nop
add
addb
dec
jb
or
ud1
xchg
aaa
sbb
andb
add
rolb
mov
cmpl
adc
lea
in
stos
xchg
adc
div
adc
cmp
jnp
ret
popw
cmp
sbb
test
push
mov
add
dec
dec
xchg
dec
sti
lcall
aas
sbb
pusha
decb
jo
jo
inc
inc
and
xlat
jge
push
aam
cmp
add
test
mov
or
fldl
rcll
push
iret
in
or
mov
sbb
or
cltd
adcl
mov
add
jno
scas
sub
dec
je
ds
jne
inc
mov
or
data16
subb
out
shlb
xor
pushf
adc
sbb
test
sbb
loop
push
sub
or
or
and
outsb
adc
aas
fldcw
js
test
mov
jp
cmp
and
outsb
je
pop
push
push
fiadds
ss
mov
decb
xor
and
hlt
sbb
movsb
stc
sar
inc
mov
repnz
lods
popf
lret
xchg
inc
repnz
arpl
adc
xor
push
outsl
or
test
rolb
imul
or
sub
pop
sub
bound
pop
outsl
cs
add
les
and
inc
push
and
dec
inc
cmp
mov
mov
dec
mov
lcall
add
inc
dec
and
mov
lds
push
dec
stos
mov
nop
das
mov
pop
rolb
iret
mov
mov
cmp
pushf
add
scas
fdivs
in
xchg
lock
aas
stc
test
aas
loope
addr16
daa
loopne
es
adc
inc
subb
and
fmull
sbb
pop
xor
sub
pop
cmp
sbb
inc
sub
mov
add
nop
dec
or
cltd
les
push
ret
xor
cs
int
iret
xchg
push
inc
xor
mov
push
pop
push
adc
push
imul
test
inc
subb
pop
pop
xchg
xchg
add
loopne
cmp
loopne
iret
out
xor
add
jno
out
inc
push
xchg
xchg
xchg
fdivr
enter
jns
incb
mov
mov
imul
mov
loopne
mov
and
test
hlt
dec
add
ss
inc
out
roll
xor
in
cld
jl
or
xchg
cli
test
xor
push
push
roll
mov
or
shlb
in
mov
iret
or
sub
pop
push
adc
pop
stos
pop
cs
cmp
push
pushf
cmp
inc
xor
sub
lock
pop
xor
clc
fsubrs
xor
pop
push
add
in
int
xor
cmp
insb
push
lret
xor
add
push
nop
sbb
and
in
pop
stos
in
sbb
pop
cmp
add
leave
movsl
in
sub
das
or
dec
and
sbb
or
pop
push
pop
inc
dec
mov
push
pushaw
xor
sbb
inc
sbbb
dec
lds
inc
insb
std
stos
or
lea
xor
push
dec
sbb
sbb
dec
sti
or
aad
addb
nop
aaa
mov
mov
push
insb
ss
inc
push
cld
decb
shr
hlt
cmp
xor
inc
aam
mov
pop
daa
stos
mov
jbe
pushf
bound
flds
xor
loope
dec
jo
or
push
aaa
insb
test
dec
xor
sbb
pop
mov
mov
push
pop
dec
daa
add
loope
push
add
add
inc
movsl
and
lret
pop
ds
add
push
adc
and
add
scas
pop
dec
cmp
push
add
sbb
push
or
add
or
inc
inc
test
repnz
adc
outsl
xor
add
cmpsl
mov
or
adc
test
pop
std
insb
sbb
fstps
push
shlb
lret
dec
pusha
add
out
dec
push
rolb
sub
push
pop
xchg
outsl
lret
popa
nop
mov
and
adc
push
test
and
sub
mov
sahf
call
mov
cmp
sbb
adc
pop
aam
stos
or
push
push
push
fsts
add
mov
popf
cmp
dec
addr16
pop
add
sbb
ret
push
add
bound
add
cmpsb
std
decb
in
push
add
jg
lret
rolb
in
ljmp
in
sub
decb
mov
or
mov
pop
adc
dec
xor
testb
adc
lock
cmp
mov
jnp
shlb
jmp
pop
inc
xchg
fiadds
daa
cwtl
push
enter
adc
dec
and
push
sub
inc
dec
ds
mov
and
nop
push
or
cmp
cmp
cwtl
or
fcompl
add
mov
stos
sbb
mov
lret
push
imul
xor
js
sbb
inc
sbb
sbb
push
xchg
sub
das
inc
pop
inc
dec
mull
jnp
push
out
mov
pop
push
xchg
mov
arpl
xor
and
add
xor
mov
fstpl
adc
mov
out
cwtl
and
sbb
ret
pusha
dec
add
cli
jle
scas
sub
movsb
sub
mov
add
add
pop
dec
push
orb
add
sub
jnp
mov
inc
jo
ret
push
adc
xor
dec
clc
aad
cmp
dec
scas
aam
push
sub
cs
mov
or
mov
add
ror
jno
xor
xor
iret
loop
add
push
lret
nop
lock
test
mov
sbb
inc
pop
mov
clc
adc
pusha
cmp
adc
aas
push
xchg
shll
addl
aaa
or
and
and
or
arpl
and
add
mov
in
pop
xor
rorb
xor
xor
pop
sub
sub
stos
fsubrs
add
je
add
shrd
lds
xorl
aaa
mov
mov
pop
adc
inc
lahf
add
gs
mov
and
sahf
pop
insb
or
popa
dec
cmp
es
test
add
push
imul
sub
cmp
movsl
bound
cmp
pushf
call
int
idivb
test
pop
pop
leave
shrw
es
loopne
cld
test
pop
daa
pushf
add
roll
imul
xchg
jmp
dec
cmp
cwtl
outsb
call
push
in
adc
xor
ss
adc
xchg
adcb
andb
adc
or
or
inc
cmp
or
xchg
xor
mov
rcll
push
fs
outsl
inc
cld
or
add
mov
adc
pushf
leave
es
es
jle
ss
push
add
nop
out
mov
jae
out
sahf
xchg
mov
mulb
xor
sbb
insb
sarb
pop
xchg
xchg
and
push
push
push
ja
xor
in
pusha
adc
call
int
fldl
inc
in
inc
testl
sbb
das
pinsrw
lods
xor
add
xchg
sub
add
inc
add
inc
pop
dec
dec
repnz
jno
add
cld
std
imul
adc
pop
lcall
or
std
clc
jl
push
adc
ret
sub
dec
ds
mov
add
mov
fs
jne
jbe
pop
ss
inc
imul
dec
push
flds
fisttpl
adc
adc
aas
adc
sbb
xchg
add
pop
lea
jecxz
push
mov
clc
cmp
mov
lret
test
push
push
inc
out
sub
and
or
adc
mov
adc
or
add
cmpsb
push
mov
popa
adc
std
jle
fwait
stos
pop
add
mov
sti
sub
sub
jno
add
pop
and
push
dec
cwtl
push
jo
inc
mov
sub
adc
call
mov
sub
shlb
sti
pop
cmp
push
cmp
or
pop
sarl
xchg
aaa
out
shll
adc
sbbb
lods
mov
addr16
and
cmc
sub
mov
les
mov
or
sti
lcall
cmp
js
sub
pop
imul
xor
sub
and
aad
xchg
dec
cmp
add
inc
sbb
xlat
pushf
xor
sub
sbb
push
inc
add
cmp
das
mov
adc
sbb
push
sbb
mov
inc
lods
adc
sub
sbb
add
nop
jl
add
js
cli
add
or
push
jle
sub
mov
aam
push
sbb
mov
cmp
adc
out
or
pushw
jl
pop
sbb
imul
jle
scas
lahf
fldenv
bswap
jo
and
mov
icebp
jb
movsb
mov
add
push
pop
je
add
push
adc
imul
sbb
fadds
and
pop
add
push
jbe
addb
aas
int3
adc
sahf
add
sbb
pop
fs
orb
ja
imul
add
lcall
sub
cli
inc
add
mov
add
mov
pop
sarb
test
add
sbb
add
sbb
nop
gs
pop
sbb
add
sbb
and
gs
xchg
and
sbb
and
add
cmp
push
sbb
inc
xchg
add
sub
nop
sub
pop
xchg
add
sub
nop
gs
das
insl
xor
pop
push
outsb
xor
gs
xchg
xor
jge
push
sbb
xor
add
xorl
cmpb
cmp
add
cmp
cmp
pop
push
cmp
nop
gs
aas
xchg
inc
and
enter
xchg
mov
enter
inc
mov
subb
mov
mov
inc
mov
mov
dec
mov
dec
mov
mov
dec
ret
stos
and
add
and
or
push
xor
or
or
dec
sbb
mov
and
add
add
js
jo
inc
mov
sbb
pop
ret
add
xchg
mov
lcall
inc
push
add
mov
inc
xlat
stc
fs
in
subb
adc
pop
cld
negb
mov
aas
adc
mov
sub
xchg
lods
aam
cmp
js
inc
lods
sbb
add
cwtl
sbb
inc
cmovo
and
sub
adc
xor
daa
ficoml
add
sub
mov
pop
sub
cmpsl
add
sbb
xchg
xchg
or
in
push
je
lods
add
popa
cmpsb
mov
push
xchg
sbb
push
testl
push
out
or
insl
sbb
fadds
mov
sub
fdivr
xor
ret
pop
or
daa
or
subb
cld
add
inc
mov
stos
dec
imul
sub
adc
xchg
xorb
jg
add
flds
in
test
and
add
adc
adc
inc
push
sbb
or
add
aas
pop
seto
inc
xor
sbb
inc
test
dec
xchg
add
cltd
adc
fs
xchg
scas
adc
ret
sbb
nop
adc
fcoms
push
in
push
and
repnz
xor
add
pop
adc
lret
enter
es
enter
dec
inc
sbb
mov
or
push
sbb
enter
imul
xor
lret
sbbb
enter
pop
subb
inc
mov
enter
dec
mov
xor
and
in
add
sbb
pop
inc
push
sub
push
cmp
nop
gs
daa
cmp
inc
push
sub
sub
xchg
add
sub
nop
gs
cmpsb
sub
cmp
sbb
pop
sahf
add
subb
cld
sub
das
iret
add
enter
sbb
imul
xchg
out
sub
cli
sub
xor
lret
jae
insb
daa
dec
xor
xor
add
pop
add
lods
fcomps
incl
sbb
jno
pushf
push
xchg
and
mov
test
xchg
push
mov
mov
and
inc
mov
iret
add
cvtpi2ps
in
movsl
adc
inc
sbb
inc
daa
sar
mov
cmova
add
xchg
test
das
sbb
cmp
mov
pop
dec
aam
cmp
mov
cld
inc
mov
add
mov
push
sbb
addr16
stos
or
rcll
xchg
cmp
test
xor
xchg
xor
jmp
out
ja
xor
add
or
test
and
testb
test
or
add
test
dec
cmp
mov
mov
adc
pop
fwait
mov
dec
xchg
push
jno
mov
add
mov
cmp
sub
cmp
cmp
sbb
daa
movsb
cs
mov
addr16
inc
fiadds
int3
sbbl
insb
inc
and
in
and
das
ret
shlb
jle
rclb
ret
mov
pushf
inc
mov
add
add
lods
pushf
sbb
mov
jo
pop
or
test
add
in
add
je
adc
lret
pop
mov
je
ja
pop
push
outsl
ror
test
imul
push
pusha
icebp
and
push
push
aad
cmp
jo
add
cmp
testb
mov
sub
inc
pop
outsb
in
and
push
je
call
jg
iret
push
loopne
xchg
and
mulb
inc
push
js
es
out
sti
and
dec
js
push
dec
js
xor
cmc
and
fstps
and
ljmp
sbb
mov
or
sahf
xchg
and
push
push
std
push
rcrb
inc
add
add
iret
enter
pop
adc
mov
pop
or
iret
enter
add
pop
inc
inc
scas
add
pushf
and
xlat
adc
imul
and
aad
push
mov
insb
fcoms
enter
sahf
xchg
in
mov
mov
lcall
or
push
inc
cmpsb
mov
dec
push
dec
leave
call
dec
pop
bnd
jbe
jmp
sub
jbe
call
mov
push
addr16
add
rorb
sub
add
cld
push
cmp
mov
mov
cmp
mov
xchg
inc
sahf
xchg
pop
test
push
aas
jae
mov
jp
mov
enter
inc
jae
sbb
ret
call
inc
jmp
push
adc
xchg
lahf
push
mov
sub
pop
push
mov
dec
push
fwait
nop
ret
andb
fwait
shll
shll
dec
push
xchg
sbb
pop
aad
out
mov
push
mov
das
sub
cwtl
push
and
pusha
pop
sbb
adc
inc
push
inc
les
pop
addl
inc
dec
cmp
or
inc
cmp
sub
adc
loope
push
cmp
xchg
adc
daa
adc
xor
insl
sub
mov
cmp
adc
add
adc
lcall
push
pop
cmp
leave
push
jmp
loopne
inc
daa
call
push
popa
out
sub
fisubrl
mov
daa
add
sub
push
dec
mov
mov
imul
bound
cmp
inc
cwtl
imul
pushf
adc
push
or
and
push
jg
sar
repz
faddl
imul
outsb
pop
jnp
add
add
jb
and
pop
int
iret
mov
inc
adc
pop
ss
inc
insb
pop
loope
adc
js
adc
dec
jecxz
popa
pop
cmp
enter
sbb
or
add
lods
mov
insl
loope
and
and
cs
gs
push
sub
and
pop
adc
or
jnp
popf
push
lret
dec
adc
in
les
pop
sub
dec
nop
add
mov
mov
mov
inc
dec
add
push
sbb
add
add
add
add
or
adc
cmpl
lret
sbb
jg
pop
pop
test
adc
or
pop
leave
pop
add
in
pop
xor
cmc
inc
add
add
fs
call
pop
test
adc
mov
loope
rcll
add
pop
pop
dec
jns
test
dec
shrl
pusha
lfs
decb
inc
or
dec
cli
add
add
enter
xchg
subb
outsl
cmp
dec
cmp
xchg
rorb
inc
inc
xchg
dec
js
aas
pop
imul
push
xchg
popf
insb
fnsave
pop
push
push
or
dec
shr
loopne
xchg
sbb
int3
addr16
pop
test
adc
adcl
daa
mov
cli
mov
adc
xchg
fwait
leave
inc
cmc
xchg
addr16
xchg
inc
test
movsl
pop
test
nop
xor
jbe
test
sarb
sbb
cmc
js
mov
das
sbb
add
mov
mov
pop
inc
hlt
add
orb
sbb
lcallw
pusha
ss
dec
cmp
push
adc
mov
sub
ss
fldl
imul
jmp
and
fnstenv
inc
fldlg2
sub
push
mov
daa
insb
ret
jne
mov
sar
xchg
mov
xchg
nop
jb
fstps
cld
sahf
add
gs
and
or
mov
ss
enter
or
add
inc
sub
jle
adc
pop
enter
dec
pop
xor
test
lods
cltd
cmp
inc
in
jb
and
inc
and
dec
add
subl
enter
xor
adc
or
dec
and
enter
xchg
xchg
jecxz
and
or
lret
push
xchg
or
in
fmul
or
aaa
add
sub
adc
sbb
or
insb
pop
dec
push
mov
subl
sub
cs
ss
cld
std
or
in
std
or
js
sub
hlt
imul
cmp
xchg
daa
and
sub
movsb
addb
push
pop
cltd
sahf
add
nop
mov
aaa
and
shll
test
pop
rcrl
add
pop
push
jo
sbb
lahf
xor
rcrl
add
sub
inc
xor
or
in
movsl
sbb
aaa
push
mov
or
nop
mov
sub
fnstsw
std
add
mov
pop
xorb
jns
inc
adc
push
sbb
pop
ds
sub
stos
xor
add
inc
adc
ljmp
pop
pop
movsb
and
pop
sti
push
cwtl
jmp
pop
imul
or
insl
cmp
or
inc
les
adc
adc
push
xor
push
cmp
cvttps2pi
cmc
sub
insl
sub
push
cmp
sbb
insl
mov
insb
add
invd
out
dec
and
push
in
sti
lea
jecxz
cld
inc
adc
in
xor
fstl
hlt
cld
iret
mov
arpl
neg
loopne
dec
add
cld
add
add
aam
adc
add
adc
pop
idivb
es
or
insb
push
ret
mov
add
jmp
sti
cmp
pop
xchg
sub
and
aad
xchg
movsl
pop
adc
sti
cmp
hlt
cli
imul
cli
cli
adc
cli
insb
loopne
inc
mov
pop
lcall
sbb
inc
je
push
cli
sbb
imul
sbb
hlt
stc
dec
stc
stc
lahf
dec
repz
stc
imul
inc
mov
stc
stc
sbb
imul
rcrb
inc
adc
cmp
add
hlt
clc
mov
clc
xchg
sub
imul
cwtl
xchg
mov
jp
imul
pop
imul
ds
nop
leave
inc
sahf
iret
mov
mov
imul
pop
xor
fdivrs
or
adc
add
lret
jmp
sbb
sbb
add
mov
or
adc
add
push
insb
sbb
pop
nop
or
inc
or
imul
adc
mov
mov
lods
pop
dec
or
and
sub
push
pop
pop
aam
or
push
push
push
adc
xchg
and
or
mov
pop
imul
aas
dec
inc
and
mov
jb
adc
out
xor
sbb
and
or
addr16
xorb
sbb
pop
adc
dec
inc
pop
and
jnp
frstor
inc
and
cmp
xorb
enter
xor
repnz
push
lea
xchg
push
ja
shrl
cmpsb
pop
add
cli
les
fs
aad
cli
xor
shll
stc
stc
stc
stc
popf
ss
sar
stc
stc
clc
add
or
inc
pop
cmp
popa
cwtl
adc
xor
sbb
jmp
mov
adc
notb
int3
sub
mov
mov
pop
sar
mov
jnp
or
sbb
inc
or
hlt
add
lock
shlb
sub
add
cld
int3
pop
ds
fnstsw
pop
and
std
pop
and
cs
nop
pop
shrb
les
mov
and
push
orl
int3
cs
mov
in
pop
push
call
in
int3
jg
sbb
or
mov
sub
hlt
sar
fmuls
inc
add
pop
inc
lods
jge
mov
test
or
xor
mov
adc
or
pusha
int3
dec
outsl
mov
clc
int3
xor
push
pop
jp
daa
pop
test
push
js
or
lods
dec
sub
fildl
nop
and
push
int3
rolb
imul
aas
das
inc
xor
sar
push
or
mov
popf
leave
pop
rclb
cli
int3
mov
or
sub
mov
popf
or
push
sbb
jb
je
inc
call
push
jae
cmp
sub
dec
lcall
dec
inc
imul
cmp
movsb
cltd
in
xor
xor
xor
dec
fiadds
mov
mov
pusha
std
mov
popa
inc
mov
orb
imul
pop
pop
mov
dec
fstps
test
aaa
in
adc
out
lret
add
adc
dec
push
mov
sbb
xchg
dec
cltd
push
call
addl
mov
aaa
inc
imul
sub
filds
lock
cwtl
mov
rolb
lret
add
shrb
pop
sbb
dec
sbb
lret
add
or
stos
cwtl
leave
pushf
push
popa
sbb
xchg
test
push
jae,pt
push
adc
add
xor
add
jae
inc
outsb
imul
addb
xor
pop
iret
push
or
andb
jb
adc
sub
adc
adc
mov
xor
test
clc
int3
sub
jecxz
int3
shll
test
dec
pop
dec
dec
inc
inc
cmp
dec
shll
xor
sub
frstor
add
push
jo
inc
inc
leave
cmp
mov
std
sub
fs
inc
adc
xchg
add
jns
inc
and
dec
push
push
sbb
add
pop
insb
or
inc
subl
or
bswap
push
or
jl
jnp
mov
mov
cmp
adc
js
xchg
sbb
mov
rclb
or
sahf
fbld
add
adc
ja
add
nop
xor
gs
enter
adc
and
bound
jo
mov
ret
adc
popf
adc
jecxz
pop
cmp
lods
or
cld
cmp
xor
lock
dec
add
pop
xor
xchg
push
bound
int3
repnz
leave
pusha
dec
pop
or
jl
enter
dec
je
enter
les
decb
mov
inc
add
cltd
enter
mov
nopl
and
add
add
dec
ds
orb
sbb
mov
mov
js
jp
cmovbe
ficomps
nop
inc
adc
xchg
cmp
notb
jo
lods
push
add
mov
inc
addb
movsb
lahf
rclb
inc
inc
or
pushf
mov
add
pusha
push
mov
pop
pop
inc
sbb
mov
add
sbb
sbb
xchg
xor
sbb
and
pusha
hlt
push
xor
or
pop
ficoml
sbb
add
outsl
push
movsb
pop
mov
and
fs
add
call
nop
subb
fbstp
add
add
or
push
adc
jnp
add
add
jg
xor
or
ficoms
or
aaa
movsb
mov
add
push
mov
push
add
xchg
loop
mov
push
push
fiadds
mov
data16
inc
add
rolb
jne
ss
repz
pop
fildl
xchg
mov
sbb
arpl
and
sbb
icebp
and
sbb
add
add
dec
dec
and
das
imul
pop
pop
mov
xchg
mov
mov
std
fisttps
in
inc
andb
push
add
out
and
jmp
dec
add
nop
loop
mov
jb
or
rcll
xchg
xchg
dec
or
idivb
push
adc
or
jae
arpl
add
pusha
decb
insl
mov
mov
sbb
fsubs
add
inc
adc
add
lret
push
pop
movsl
pop
jae
and
jne
sbb
imul
daa
sbb
or
pushf
sbb
pop
hlt
cmc
imul
adc
movsb
roll
or
add
sub
mov
jp
xor
movsl
and
push
lcall
and
xchg
pop
pop
push
adc
sbb
or
mov
xchg
cmp
leave
mov
add
nop
outsl
decl
add
add
and
add
adc
inc
push
leave
jae
add
stos
test
or
add
lret
das
lock
mov
cmp
xor
or
dec
sahf
insb
pusha
pop
adc
and
adc
adc
insb
sbb
mov
adc
add
rcll
fs
rcrb
add
rcr
mov
inc
jmp
insl
jg
pop
test
and
popa
adc
xor
imul
test
arpl
mov
out
inc
mov
dec
adc
jb
add
add
push
sbb
orl
or
push
sbb
sbb
pop
dec
mov
lods
mov
jnp
sbb
push
xor
test
and
add
sbb
xchg
sbb
js
add
add
sub
adc
jns
aam
push
and
xor
mov
fsubrs
imul
xor
lock
or
fdivs
and
jg
push
mov
push
adc
or
andb
test
pop
xor
or
push
lock
insl
xchg
cmp
push
add
lcall
adc
es
mov
or
sbb
fwait
pop
call
roll
fbld
mov
sbb
ds
add
sbb
or
adc
sub
mov
inc
xchg
addl
leave
and
and
xchg
cld
loopne
push
mov
call
xor
or
or
jbe
lods
insl
or
popw
inc
repnz
adcl
add
inc
pop
xor
enter
mov
nop
pushf
pushf
imul
pop
add
fildl
gs
and
or
xchg
repnz
add
add
enter
enter
insb
or
add
and
xor
stos
nop
xlat
nop
in
outsb
nop
push
popa
dec
push
mov
pop
sub
pushf
inc
sub
popf
add
addb
xchg
add
xchg
repnz
in
add
adc
sub
pop
add
xchg
mov
adc
xor
mov
aad
ljmp
aam
dec
mul
or
mov
inc
popf
mov
or
lret
and
push
adc
repz
adc
xor
cmp
aaa
sub
adc
inc
lret
mov
pop
jne
imul
int
subb
xchg
and
adc
cmp
jmp
or
push
pop
inc
push
outsl
xor
push
push
pop
inc
inc
sbb
pop
inc
push
pop
sbb
sbb
pop
inc
push
or
push
pop
inc
mov
movsb
popf
pop
inc
push
pop
pop
movsl
scas
and
iret
or
mov
and
lcall
push
sbb
dec
mov
pop
shlb
and
test
mov
pop
mov
mov
sbb
sub
inc
sub
jns
sub
inc
jns,pn
scas
sub
scas
fdivp
das
xor
scas
inc
fildl
xor
push
and
and
and
ss
lcall
sahf
xchg
stos
nop
cmp
cmp
xor
cmp
dec
sahf
xchg
xor
cmp
stos
xor
enter
mov
push
enter
push
enter
inc
inc
in
out
cmp
pop
inc
inc
xchg
addr16
cmp
jl
sub
dec
xchg
jne
sbb
pusha
push
adc
inc
fistps
mov
lds
mov
pop
xchg
add
rorl
push
sub
inc
sub
daa
jnp
jo
ja
cs
es
xor
push
sub
or
adc
mov
add
sbb
pop
mov
jb
adc
out
mov
into
sbb
or
inc
push
nop
add
add
add
cltd
inc
push
push
nop
sub
adc
inc
push
pop
add
pushl
ret
and
adc
sub
daa
jnp
rcrl
sbb
mov
sbb
push
arpl
in
adc
bound
add
movsb
or
lods
pusha
xor
rcrl
lret
cmp
rorl
sbb
add
ret
push
sbb
lahf
scas
or
push
sub
push
jno
in
lods
nop
or
pop
push
jno
dec
jne
out
dec
jbe
cs
stos
and
insl
adc
pusha
push
pop
dec
add
sub
xor
adc
cld
add
flds
int3
push
and
rclb
or
aad
mov
shrb
cmp
sbb
and
pextrw
xor
jmp
adc
dec
pop
dec
add
dec
enter
mov
and
sbb
sbb
adc
leave
mov
jmp
call
xchg
add
sub
push
xor
and
pop
lahf
stos
pop
sub
cmp
push
pop
insb
and
or
fwait
push
and
cmp
test
test
test
fmuls
test
and
jns
in
add
adc
cld
mov
sub
aaa
sets
mov
xor
sbb
mov
lret
xor
xchg
add
je
add
sub
sbbb
insb
cmp
xor
or
mov
adc
pop
fcmovu
pop
ds
scas
xor
cs
sub
add
sbb
xorb
pusha
xchg
cmpsb
sahf
adc
inc
push
aam
xor
or
repnz
pop
push
ljmp
push
dec
jno
aam
cmp
push
test
cld
sub
push
sbb
push
pop
frstor
add
cmp
pop
repnz
bound
and
adc
pop
sub
test
sbb
sub
sbb
sub
pop
mov
and
jo
inc
sub
test
xor
inc
jno
aas
aas
mov
shll
pop
inc
and
mov
lret
add
add
xor
inc
pop
or
push
mov
dec
mov
add
repz
adc
push
dec
sbb
jae
cmpsb
insb
pop
orb
std
hlt
or
xchg
mov
dec
or
and
or
sub
add
sub
pop
pop
sbb
daa
sbb
jbe
dec
mov
jnp
cmp
adc
and
add
cmp
pushf
outsb
or
sub
scas
adc
lahf
mov
push
dec
mov
fistpl
sbb
pop
xor
xor
xor
inc
xor
or
add
sbb
lahf
add
add
outsl
aaa
add
dec
pusha
inc
cmp
or
add
cmp
test
bound
sub
je
es
test
add
es
aas
clc
inc
nop
test
add
es
test
add
nop
xchg
sub
inc
cld
in
hlt
fs
test
xchg
inc
shlb
or
movsb
dec
cltd
inc
cmpsb
xchg
mov
sub
inc
add
mov
out
cmp
sbb
and
cmpsl
dec
pop
sbb
jmp
push
pop
shlb
mov
and
movb
and
loopne
sbb
jb
dec
or
mov
push
add
and
add
push
repz
adc
push
push
add
outsl
and
es
add
and
xchg
add
push
stos
and
push
push
adc
ja
sbb
push
add
mov
add
add
adc
cwtl
sti
push
push
andb
sub
lahf
add
or
testl
add
jp
push
xlat
lret
jb
inc
xorb
xorl
mov
popf
mov
and
mov
test
or
hlt
sbb
inc
mov
pop
pop
mov
test
cwtl
add
or
add
mov
fldcw
dec
filds
lods
mov
mov
sbb
or
pop
out
xchg
data16
pop
cmp
xor
cmp
pop
and
or
in
jae
mov
fisttpl
jbe
cmp
dec
mov
or
pusha
loope
call
dec
lret
cmp
pop
insb
push
push
ljmp
or
cmp
push
and
or
pusha
test
cmp
and
insl
xor
sbb
sub
rcrl
sub
and
or
inc
adc
pop
les
rcll
sbb
or
sub
or
add
mov
addr16
and
jecxz
out
outsb
push
add
addr16
and
xchg
nop
xchg
or
mov
cmc
xchg
pop
and
or
ss
push
xor
lods
call
pop
mov
xchg
dec
ret
or
enter
test
lods
xchg
sub
fidivs
cmpsb
lods
rcrb
sbb
in
xor
dec
lods
mov
cltd
mov
dec
push
inc
push
nop
add
add
cwtl
sbb
pop
inc
push
or
mov
fs
or
inc
xchg
js
loopne
push
xchg
imul
dec
or
leave
or
push
jl
adc
dec
fcompl
pop
lahf
mov
add
jmp
pusha
and
int3
add
mov
dec
push
cltd
xchg
add
push
shl
adc
ret
or
cmp
add
test
daa
enter
push
daa
sbb
subl
jo
sbb
pop
adc
int
sub
xor
add
pop
push
insl
pop
shrb
cmp
lods
inc
add
xor
rcl
mov
cwtl
and
adcb
pusha
mov
dec
test
into
mov
adc
add
mov
mov
mov
add
mov
cmp
sub
aas
or
add
adc
mov
add
xchg
pop
sahf
push
lahf
movsl
mov
aas
jo
add
std
aas
or
cld
add
std
dec
sbb
mov
inc
je
std
in
lods
xchg
arpl
sub
and
push
sbb
add
mov
and
xchg
dec
xchg
sbb
pop
int3
cld
mov
in
mov
es
cld
or
pop
push
xor
and
sbb
and
or
add
add
xor
sbb
or
sub
and
ss
sub
std
and
or
aaa
xor
std
imul
sbb
inc
das
or
rorb
jae
mov
mov
xchg
inc
pop
add
or
pop
stos
into
xchg
mov
cld
mov
or
add
dec
cmpsb
and
add
lcall
addl
andl
inc
adc
push
sahf
imul
sub
add
pushf
movsb
add
add
loop
sahf
push
or
push
fstpt
adc
cld
cmp
or
testb
xor
jl
into
shl
jbe
cwtl
inc
in
outsb
les
lods
mov
addr16
mov
fstl
inc
jae
cmp
add
xor
add
xor
sbb
inc
jo
loop
xchg
in
fwait
or
ljmp
mov
cmp
subb
pop
mov
push
dec
add
sti
mov
and
nop
scas
roll
adc
jbe
xor
insb
and
or
sub
call
push
or
dec
xor
push
sbb
inc
push
sahf
inc
cmp
fiadds
lahf
push
sbb
inc
sub
push
and
rcrl
adc
mov
dec
add
scas
sub
arpl
and
pusha
in
test
or
and
dec
std
imul
xor
pusha
lret
enter
lcall
mov
enter
push
add
inc
and
das
jae
push
inc
ror
insb
and
aam
addl
shll
add
lea
out
adc
or
or
movd
adc
gs
test
repz
sub
jns
jl
ss
nop
or
sbb
mov
jne
add
cmpsl
fisttpll
inc
cmpb
add
xlat
lods
xchg
mov
test
jg
or
xchg
icebp
jbe
test
jb
and
enter
leave
add
or
addl
or
xor
jge
punpckhwd
or
cld
jo,pt
in
sbb
sbb
mov
push
sub
mov
jo
mov
push
pop
stos
shrl
cmp
dec
cmp
push
fmuls
pusha
lods
xchg
mov
dec
add
popa
rcrb
shrl
call
out
fists
leave
pop
hlt
sti
add
movsb
dec
adc
push
imul
push
cmp
sti
add
add
ret
aaa
add
cltd
iret
adc
mov
or
and
pop
mov
adc
jb
sbb
fsubrl
or
mov
fisubs
pop
lcall
pop
or
push
add
cmpsb
adc
mov
call
dec
jnp
sub
jbe
push
test
loopne
push
push
js
sbb
popaw
shlb
and
cmp
adc
insb
inc
fadd
pop
cwtl
sub
and
insl
and
pop
ss
xor
pop
dec
sbb
mov
sbb
pop
enter
and
mov
xor
pop
inc
loope
movsb
cs
pop
adc
xorb
pop
sbb
popa
sbb
call
fcoms
or
xor
fsubs
testb
pop
sub
pop
sbb
sti
sub
add
add
shlb
add
in
add
jnp
and
in
jns
leave
add
inc
cs
addr16
ret
xor
xor
ret
inc
push
cmp
fldenv
mov
mov
aam
les
into
dec
or
add
lret
stc
pusha
add
int3
push
ja
add
xchg
mov
pusha
sbb
stos
pusha
mov
pop
lds
jbe
add
xchg
sahf
xor
jo
jo
test
adc
xchg
or
pop
in
push
mov
adc
mov
mov
xchg
sub
lret
mov
aas
popf
int3
or
or
addb
bswap
out
subb
sbb
or
push
xorb
sub
int3
mov
repnz
or
into
cwtl
inc
xchg
addr16
push
iret
shr
iret
sub
shrb
int3
call
xchg
pop
popa
shlb
in
push
into
iret
rolb
fnstsw
js
jno
sti
scas
add
rorb
rcl
push
xchg
xor
repnz
add
xor
add
mov
jo
add
cwtl
sbb
jno
add
aad
or
enter
xchg
add
int3
adc
fadds
outsl
in
xchg
mov
jae
pop
subb
int3
adc
dec
adc
fldl2e
sti
or
int3
xchg
sar
xor
sti
or
xchg
xor
sub
pop
mov
imul
pop
sarb
mov
mov
sub
int
mov
pushf
mov
movsb
movsb
movsb
mov
and
sti
xchg
sti
mov
push
cmp
leave
int3
sbb
lods
mov
pop
movsl
xchg
nop
mov
mov
pop
imul
push
inc
inc
sub
imul
jnp
ds
jmp
inc
jae
ficompl
in
fistl
daa
adc
jno
sti
xor
out
adc
jmp
fistpll
popf
cltd
or
pop
adc
pop
push
inc
loopne
dec
push
sbb
inc
loope
and
inc
or
cmp
adc
and
push
dec
inc
xor
enter
xchg
or
xor
fdivl
dec
dec
mov
inc
inc
xchg
push
and
scas
push
sbb
call
sbb
jmp
mov
ljmp
jmp
pop
or
les
push
xor
jb
dec
scas
in
or
mov
popa
outsl
out
pop
adc
fs
pop
adc
adc
pusha
push
adc
and
or
sti
pusha
addb
adc
pop
icebp
mov
inc
cs
pushf
insb
push
repnz
push
test
mov
fsubs
and
testb
mov
lods
addr16
push
mov
or
and
repz
xchg
add
inc
sub
pop
imul
mov
pop
std
ss
and
add
pop
lret
sub
in
cltd
mull
pop
and
jl
add
clc
mov
stc
cli
sarl
insl
pop
dec
sarb
cli
pop
mov
insb
adc
mul
pusha
xchg
cld
push
push
and
add
loope
dec
xchg
sub
insb
push
std
sti
mov
std
imul
cmp
xchg
or
shrl
dec
cli
je
sahf
xchg
dec
mov
push
add
sbb
rcll
pop
fs
push
mov
xchg
xor
mov
aam
cmp
imul
cmp
add
mov
sbb
stos
bound
pop
jg
add
xor
fisttpll
add
inc
rcll
xchg
and
add
add
in
add
adc
cli
add
ret
fs
inc
add
cld
or
adc
adc
in
sbb
sbbb
or
jo
mov
popf
and
flds
movb
or
lahf
add
sbb
jb
ret
push
cld
sbb
add
pop
dec
mov
loopne
and
or
leave
gs
cld
and
add
sub
in
popf
cmc
push
dec
jno
sub
jb
fwait
pop
dec
cmp
dec
fldenv
push
or
insl
mov
leave
sbb
xchg
mov
and
add
sbb
sub
fld
dec
sbb
or
jl
in
mov
sub
add
jl
lds
push
or
or
sar
push
adc
enter
das
adc
sbb
adc
xor
arpl
cmp
adc
mov
xchg
sub
add
nop
fsts
sbb
xchg
sbb
push
sbb
add
sbb
add
jb
nop
sbb
push
int
cmp
and
pop
and
scas
inc
and
in
and
inc
scas
inc
push
and
fs
es
scas
inc
push
fs
sub
adc
and
orl
enter
sub
enter
xor
pop
xorl
sub
mov
rorb
test
addb
in
add
lret
push
mov
xor
outsb
mov
add
push
xchg
inc
xor
add
xor
xchg
das
pop
insb
nop
insb
rolb
cli
add
adc
adc
adc
mov
in
xchg
sub
xor
push
cmp
cmp
and
dec
jnp
xor
sti
sub
pusha
xchg
dec
cmpb
mov
movsb
jmp
lock
add
sti
imul
inc
addl
fdivs
add
sarb
lods
test
mov
xor
cwtl
pushf
arpl
dec
shll
sti
pop
add
das
test
add
dec
and
shl
cmpsl
xor
mov
inc
add
mov
or
leave
inc
add
dec
mov
cmp
xor
stos
mov
mov
mov
loope
xor
inc
pusha
mov
xchg
jp
sub
outsb
sbb
out
pop
cmp
inc
inc
and
add
imul
dec
mov
push
jbe
sbb
hlt
cmp
sbb
cs
loope
pop
hlt
dec
mov
rorl
mov
xor
scas
push
mov
mov
xchg
sub
mov
fcoml
aas
mov
test
dec
daa
and
pop
lods
add
inc
loopne
mov
jmp
cld
decb
push
xor
adc
adc
sbb
test
add
mov
test
hlt
jb
ret
add
fdivrs
cs
arpl
aam
cmp
call
jne
sub
ds
pushf
test
jo
sub
insl
aam
sub
sub
dec
push
rcll
or
loopne
lods
fs
daa
and
sub
fsub
xchg
push
sbb
fadd
push
mov
mov
or
int3
pop
xchg
aad
pop
push
shlb
cmpsl
add
in
add
add
int3
jp
in
nop
dec
int3
xor
add
add
out
ds
repnz
popa
add
sbb
cmp
add
inc
movsb
int3
cs
test
jmp
inc
mov
push
and
inc
mov
out
add
test
xor
les
lahf
sub
inc
mov
in
add
and
and
xchg
dec
cmp
dec
lahf
sub
inc
mov
dec
push
nop
and
dec
and
in
inc
xchg
negl
stos
mov
mov
dec
rorb
add
ds
repnz
cltd
or
scas
inc
dec
out
rorb
add
dec
lods
inc
or
lods
incb
and
stc
push
leave
push
lods
or
sbb
or
add
mov
push
add
push
xor
inc
push
cs
sahf
pop
add
pushf
inc
push
dec
dec
push
push
fiadds
dec
dec
push
push
and
pop
and
pop
bound
andl
pop
out
jb
repnz
cmp
mov
and
mov
in
cs
and
pop
add
xchg
out
inc
fbld
sbb
and
mov
pop
mov
pusha
pop
popa
jb
dec
adc
push
cmp
add
lock
dec
xchg
push
inc
add
lea
stos
push
into
loope
aad
inc
or
add
sbb
or
in
or
mov
loopne
add
in
pop
mov
add
sbb
nop
les
cmp
mov
testb
add
adcb
and
adc
inc
je
fidivl
insl
push
cmove
add
fidivrl
inc
shrl
pop
sub
mov
out
dec
inc
mov
movq
jns
push
jo
aad
xchg
push
mov
pushf
inc
or
stos
add
push
in
sbb
sub
dec
shll
dec
or
out
jno
lret
je
adc
test
daa
or
or
rolb
add
push
xor
xor
mov
push
and
xor
cld
std
cltd
inc
pop
leave
cld
std
cld
std
and
test
add
test
in
in
or
pop
and
inc
xchg
adc
add
xor
xchg
movsl
add
int3
int3
xchg
nop
int3
add
add
or
enter
adc
decl
or
add
out
arpl
jb
adc
add
xor
js
outsb
xor
add
std
cmp
inc
popl
push
loopne
movsb
jp
cld
das
fisubrl
stos
cltd
into
lods
std
fdivrl
xorb
dec
mov
iret
xchg
add
jl
std
or
rcrb
sub
ss
xchg
dec
add
dec
add
ret
or
jno
push
adcb
and
pop
adc
pop
int
or
or
add
mov
cmp
clc
adc
sbb
xchg
dec
add
add
std
jo
std
or
add
lods
xchg
xchg
add
sahf
mov
add
andl
inc
aam
xor
adc
sbb
std
in
test
xchg
push
mov
and
xchg
in
mov
cmp
adc
mov
fucomi
sub
and
divl
cmp
push
aad
sbb
sbb
add
cmpb
add
mov
sti
insb
cmp
insl
jne
cmp
test
adc
or
mov
js
imul
add
je
shrb
pop
or
js
sbb
cmp
and
adc
cmpsb
push
mov
sbb
faddl
add
adc
mov
push
mov
nop
xor
adc
xchg
jg
and
xor
xchg
nop
sub
sbb
stos
and
clc
or
add
xor
push
enter
jb
enter
sbb
xchg
pop
jb
js
add
xchg
xchg
and
xchg
std
dec
subl
push
jle
mov
mov
rolb
push
xor
enter
nop
pop
or
roll
sub
xor
and
adc
sbb
andl
sahf
jb
jb
test
inc
pusha
inc
push
xchg
sbb
sbb
sub
push
lcall
sub
mov
test
mov
outsb
adc
outsb
add
pop
pop
dec
lcall
add
inc
call
cwtl
jmp
lret
push
dec
mov
cltd
push
addr16
ss
clc
push
add
xchg
lcall
inc
pop
pop
inc
dec
mov
fmuls
mov
and
sbb
call
add
popf
push
cwtl
pop
sarb
insb
orb
int3
mov
pusha
arpl
and
out
pop
shrb
mov
jno
cmp
in
xchg
jg
inc
sub
adc
push
cmpsb
jnp
aad
add
inc
xor
mov
sub
rorb
test
pop
dec
bound
jl
test
ljmp
inc
rcrl
aas
lret
cmp
stos
add
dec
add
xchg
rcll
push
and
ret
push
xchg
js
pop
jb
add
mov
add
adc
bound
cmpsb
and
fnstsw
loop
add
or
mov
mov
fs
mov
mov
mov
inc
mov
push
and
test
add
cmpb
mov
mov
inc
inc
push
mov
sbb
mov
enter
push
and
orb
lods
or
xor
lds
es
push
xor
add
aas
jo
sbb
add
enter
mov
leave
adc
add
xor
ljmp
std
or
sbb
shrb
test
xor
adc
bound
ja,pt
test
add
ret
scas
or
or
inc
adc
std
sub
pop
push
cltd
and
jo
dec
imul
cmp
cld
add
adc
jnp
fwait
pop
inc
enter
test
shr
mov
add
adc
push
pop
int3
dec
cmp
fistpll
sbb
or
sti
cmp
sti
fdivr
shrb
popa
push
sti
sti
inc
xor
enter
into
sti
sti
mov
ljmp
adc
test
cmp
sub
sub
mov
sbb
push
std
lods
mov
pop
ror
mov
lods
mov
xchg
xchg
lods
mov
pop
mov
xchg
iret
and
daa
adc
lods
lcall
repnz
sti
sbb
push
fldl
jo
add
fcom
mov
into
or
sbb
rorl
and
jecxz
rcl
pop
in
mov
aam
jne
and
aas
sub
sbb
cwtl
push
and
fcom
inc
test
fmuls
push
cmp
sbb
mov
or
andb
push
mov
adcb
std
xchg
ret
add
add
pop
push
sahf
add
fnsave
cld
and
lods
push
or
xor
pusha
mov
dec
dec
push
xchg
add
sbb
adc
enter
push
add
stos
stos
bound
lret
jl
mov
mov
ret
movsb
or
std
jbe
adc
or
in
or
pop
faddl
mov
cmp
cwtl
push
xchg
adc
add
rclb
mov
xor
push
add
insb
lods
test
and
pushf
shll
insb
push
dec
pusha
dec
aam
sti
fisubs
mov
test
add
or
aaa
aam
fnstcw
cmp
mov
push
mov
xchg
mov
add
or
lods
gs
fmul
mov
cwtl
mov
outsl
nop
cmpsb
imul
int3
and
sbbl
sbb
adc
add
push
add
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
and
dec
data16
sbb
loope
daa
mov
pushl
adc
adc
inc
inc
outsb
imul
das
dec
outsb
jbe
imul
add
lret
mov
lret
add
xchg
sti
lret
mov
cs
imul
mov
fwait
or
push
push
add
mov
lret
push
or
ja
js
inc
cs
add
fs
data16
push
xor
mov
sub
cwtl
sbb
popa
mov
adc
add
inc
inc
mov
bound
mov
popaw
arpl
inc
inc
loope
call
mov
mov
jb
pop
xchg
gs
movl
pop
pop
xchg
gs
adc
int
aas
add
push
insb
lret
mov
jb
arpl
pop
sbb
test
mov
cmp
test
lods
fs
imul
bound
push
sbb
insl
flds
imul
inc
inc
lds
add
mov
sarl
or
push
add
adc
fmul
pop
fiaddl
sbb
xor
adc
setb
add
pop
jo
fdivs
or
pop
push
mov
xchg
sub
add
push
pop
je
pop
popa
test
add
cs
jnp
add
cld
push
scas
jmp
mov
xchg
cs
mov
shlb
sti
add
shrb
jae
arpl
lret
negl
inc
sbb
sub
clc
mov
and
add
add
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
add
sub
mov
incl
add
add
cmp
add
add
add
add
add
add
add
orb
add
cwtl
add
adcb
add
fadds
add
cmp
add
add
add
add
jne
add
add
jo
add
cmp
add
add
add
add
add
add
add
sbb
add
call
add
add
add
add
add
add
add
add
xchg
add
sub
add
mov
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xchg
ja
ja
ja
ja
jo
ja
ja
ja
pushl
ja
ja
ja
pushl
add
add
add
jg
pushl
outsb
outsb
pusha
ja
pushl
out
outsl
out
outsl
out
pusha
pop
jg
ja
pushl
outsb
outsb
pusha
pusha
ja
ja
pushl
data16
pop
jg
ja
pushl
outsb
pusha
add
pusha
pusha
ja
push
pushl
out
outsl
out
pusha
data16
push
ja
pushl
outsb
pusha
data16
pusha
pushl
ja
jo
ud0
mulb
pushl
pushl
pusha
add
push
pusha
pusha
pushl
out
pusha
data16
pusha
pusha
lock
pushl
pusha
data16
add
pusha
xchg
pushl
jmp
mulb
data16
ud0
pushl
pushaw
push
pusha
data16
mulb
pushl
mov
outsb
pusha
outsb
mulb
ud0
pushl
or
pushaw
out
mulb
pusha
pushl
add
pusha
clc
pushl
add
mov
incl
pushl
add
add
clc
ud0
jo
add
add
decl
jo
add
add
clc
out
out
ud0
add
add
decl
jo
add
add
clc
jo
add
add
decl
mov
clc
add
add
add
decl
add
decl
decl
add
incl
add
mov
mov
incl
add
incl
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incl
add
incl
add
inc
arpl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
add
pushl
add
add
pushl
out
pusha
ud0
jo
imul
pusha
pusha
pushl
pusha
outsl
pusha
pusha
pushl
out
add
pushl
testb
add
pushl
out
push
mulb
pushl
xchg
pusha
pushl
or
jo
or
incl
add
or
jg
add
js
add
mov
loopne
jae
loopne
jb
loopne
cmp
add
clc
add
add
add
and
add
je
add
add
addb
add
add
loopne
add
loopne
lock
add
loopne
add
loopne
clc
add
arpl
add
add
add
add
and
add
add
call
jne
adc
add
add
sub
add
xor
add
popa
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
and
and
and
and
and
add
sub
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
pop
add
add
jb
add
sub
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jae
add
jbe
add
add
js
add
add
add
add
leave
xchg
add
mov
add
xchg
add
in
add
hlt
xchg
add
add
add
adc
add
add
add
inc
add
addb
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
inc
dec
dec
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
