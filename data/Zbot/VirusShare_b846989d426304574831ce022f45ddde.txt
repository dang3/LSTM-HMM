dec
push
inc
gs
inc
dec
js
insb
push
add
add
push
scas
add
lods
fcomps
mov
divb
int3
add
out
xor
repnz
fcmovnu
mov
sbb
pop
repz
into
aas
inc
dec
jb
inc
js
test
pusha
cs
mov
mov
sarb
inc
mov
fstpt
ret
mov
cmp
shlb
push
mov
fldt
negl
repz
mov
jle
enter
out
insb
mov
mov
sub
jne
mov
rolb
dec
jge
mov
pop
orb
loope
adc
xchg
frstor
and
daa
rolb
outsl
mov
andb
outsb
out
dec
es
xor
xchg
lds
in
in
cmp
enter
das
cmpsl
or
push
jno
lea
icebp
fwait
popa
xor
std
push
lds
cmc
aam
loop
sbb
sbb
addr16
rorl
out
xchg
mov
inc
cmp
and
gs
scas
jae
jo
repnz
pop
xor
cmovne
cmp
rcr
mov
test
push
imul
push
or
push
cmp
pop
mov
test
or
cs
push
out
ss
dec
and
mov
ret
mov
repz
mov
test
push
mov
xlat
pop
iret
cmpl
lds
mov
mov
or
push
add
mov
mov
sub
mov
push
cld
or
add
mov
add
add
push
or
stos
mov
sbb
lock
mov
and
icebp
sub
cmc
mov
xchg
push
dec
sbb
aad
arpl
inc
cmc
dec
ret
loopne
movsb
scas
or
es
push
movsl
push
pop
roll
and
jmp
push
cmp
sbbb
push
add
psrlw
insl
mov
jne
mov
lret
stc
sbb
mov
xchg
mov
clc
dec
sbb
inc
lods
into
xchg
insl
adc
sbb
loope
outsl
mov
push
sbb
mov
mov
cmpsl
inc
loopne
inc
adc
lret
pop
into
xchg
inc
cmp
pop
test
and
fistps
ficoms
mov
sbbb
inc
js
cmpsb
sbb
dec
jnp
mov
das
sbb
fistpll
stos
add
sbb
addr16
xchg
push
enter
in
aaa
sbb
gs
mov
add
lods
arpl
fdiv
test
add
in
sti
dec
and
insb
or
sub
in
dec
adc
mov
push
cltd
inc
loopne
or
outsb
lret
mov
int
pop
xchg
shrb
bound
imul
mov
sti
push
cmpsl
or
or
fcomip
inc
jne
les
imul
mov
rorb
int
aam
leave
das
les
rclb
jge
ud0
pfpnacc
mull
push
aam
push
imul
imul
sub
xor
int3
shlb
sub
sub
out
in
xor
std
and
fisubs
fwait
sub
lock
mov
xchg
push
jl
out
pop
hlt
mov
in
fwait
lods
adcl
mov
xchg
mov
xlat
inc
cmp
cmp
inc
sub
inc
inc
sub
shlb
outsb
or
lea
and
dec
jp,pt
fiaddl
xor
inc
pop
loope
or
push
lea
or
jae
repnz
xchg
mov
xchg
or
arpl
fisubs
push
in
cmpsl
ja
dec
adcb
enter
lahf
sub
jmp
or
das
mov
aad
mov
rclb
rolb
jmp
adc
cwtl
sbb
enter
xchg
mov
ljmp
test
rep
dec
xlat
dec
xchg
fsts
xchg
stos
jne
faddl
xorb
mov
mov
sbb
ret
sub
sbb
sti
sbb
or
rclb
inc
call
push
roll
bound
lea
jno
inc
jne
rol
sbb
ss
stos
cmp
mov
std
xor
sbb
xchg
cld
mov
and
sub
mov
sbb
or
mov
cmpsb
mov
adc
adc
dec
fwait
adc
jp
sub
mov
popa
mov
popf
adc
mov
mov
aam
lock
sub
mov
iret
std
sbb
iret
sbb
je
xchg
jl
mov
xchg
mov
cmp
dec
out
mov
jnp
jo
jmp
aaa
cmp
push
imul
pop
mov
in
mov
pop
rcll
ljmp
lods
or
fst
jne
imul
nop
loop
je
or
lret
adc
dec
push
push
fsubl
or
dec
sbb
fidivrl
sbb
xlat
clc
jmp
mov
test
add
pop
sbb
xor
popa
div
in
daa
ss
push
add
or
jge
popa
mov
cwtl
cmp
jecxz
mov
lcall
decl
jge
gs
lahf
push
jl
int3
ljmp
xchg
popa
sub
pop
lret
arpl
popf
ret
mov
adc
insb
xor
push
loopne
cltd
push
aaa
pop
js
pop
add
das
movsl
fsubs
inc
mov
fcomp
call
mov
adc
in
jle
fists
in
gs
dec
in
scas
call
mov
push
xchg
xchg
call
inc
mov
adc
dec
movsl
iret
pop
and
adc
pop
dec
push
test
and
rol
adc
ljmp
pop
ss
negl
pushf
and
push
ret
rorb
inc
ja
inc
cmp
rorb
scas
insb
ds
cmp
gs
push
popf
dec
xchg
mov
sub
jle
sub
and
jmp
imul
cmp
lret
std
push
popf
aaa
mov
std
add
inc
dec
shrl
add
cs
sti
mov
divl
dec
adc
aas
xchg
mov
in
mov
xchg
les
jns
push
xchg
cwtl
sbb
or
mov
call
sub
rorb
insb
lods
loope
aas
mov
pop
in
js
push
mov
xlat
push
jg
sub
aad
mov
adc
in
fsub
xlat
inc
push
push
mov
push
imul
xchg
mov
imul
dec
jecxz
push
loopne
mov
int
or
sbb
aam
and
push
xorb
ljmp
leave
fsubrs
pop
movsl
pop
lret
cmp
jg
push
je
lahf
jnp
bound
push
data16
xchg
test
jge
bound
sbb
pop
add
and
aaa
and
je
jl
pusha
sti
cmp
insl
jb
iret
lods
mov
mov
lcall
push
test
jne
outsb
sahf
xor
push
fsts
xchg
cli
push
mov
cmp
xlat
fs
dec
xchg
test
mov
inc
cmpsl
sbb
sub
mov
jne
dec
jns
mov
inc
pop
outsb
cs
mov
sar
jecxz
fnstsw
jl
cmp
push
mov
shrb
je
push
mov
jne
cmp
add
or
jge
add
cmp
lock
pop
enter
ss
roll
dec
jae
push
rclb
loopne
xchg
mov
and
sbb
jmp
inc
popa
int
bound
add
pop
xor
dec
lods
stos
dec
dec
adc
into
std
sbb
stos
or
scas
in
cmp
dec
push
cli
fildl
lods
aam
ja
jg
add
rcrb
jne
nop
insl
punpcklbw
dec
mov
popf
rolb
lahf
jns
adc
test
or
jns
adc
scas
fnstsw
sub
push
aam
fs
jge
jle
jmp
hlt
xor
cltd
dec
xchg
xor
fwait
scas
addr16
mov
mov
sbb
and
jge
cli
dec
prefetch
inc
push
sahf
repz
mov
jns
mov
sbb
or
cmp
inc
lock
ja
pushf
adc
addl
xor
gs
bound
dec
jl
mov
jp
mov
dec
push
lcall
push
fcomps
mov
add
mov
pusha
repnz
lods
mov
idivb
into
sbb
inc
scas
dec
fwait
push
arpl
or
rcll
mov
sarl
mov
mov
test
loopne
and
out
mov
inc
inc
and
gs
nop
or
out
out
push
dec
movsl
mov
scas
call
or
dec
push
push
xchg
ror
cmp
sub
cli
push
in
add
sti
lea
xchg
mov
repz
in
out
pop
and
push
and
add
insl
pushf
mov
fcomps
iret
fcmovnb
push
sub
rorl
sub
inc
loope
fidivl
add
sbb
push
xlat
call
adc
jo
je
lret
mov
hlt
ficoml
xchg
test
mov
add
std
lcall
adc
inc
xlat
adc
add
pusha
mov
jne
push
sbb
push
push
aas
mov
inc
dec
subb
xor
jae
inc
jb
cltd
popa
ljmp
bound
sub
jge
rorl
mov
dec
jno
sbb
pop
and
rolb
and
sub
dec
aam
sbb
add
loopne
loopew
or
sbb
pop
adc
repnz
pop
rcl
test
aad
test
push
jns
jge
lahf
mov
in
fisttpll
flds
mov
sbb
mov
dec
scas
fisubrl
test
hlt
pop
pop
xchg
out
repnz
movsl
clc
xor
cmova
dec
push
push
into
loopne
mov
xor
mov
pusha
lods
sub
aam
repnz
xchg
add
or
in
stc
pusha
bswap
pop
sahf
mov
push
iret
cmp
adc
xchg
cld
call
bound
lods
sahf
mov
in
and
insl
shlb
adcl
and
inc
lds
push
adc
call
cmp
inc
mov
xor
fidivs
scas
and
xchg
das
pushf
mov
cld
test
lods
add
mov
inc
ficoms
lahf
ds
test
js
jmp
dec
sub
shrb
ret
add
jbe
jecxz
xchg
mov
scas
or
push
movsb
sub
fcmovne
pusha
andl
add
fnstenv
cmp
and
scas
inc
icebp
pop
sbb
jo
mov
sbb
repz
xchg
and
rcl
push
add
jge
stos
test
ret
in
or
in
adc
movsb
in
out
jbe
daa
fs
adc
call
push
data16
fidivl
mov
in
pop
enter
mov
lea
loopne
or
mov
fxch
xor
pop
cmp
xchg
repz
mov
jo
stos
mov
lcall
pop
int3
push
fisttpl
jbe
int3
pop
dec
shrb
xchg
push
aad
mov
adc
data16
sub
andl
sbb
cld
stc
movsl
in
sbb
sub
mov
dec
fs
dec
mov
sbbb
jmp
mov
fwait
inc
mov
jl
rorl
cmp
push
mov
cld
mov
shr
mov
mov
bound
lahf
out
cld
adc
sbb
aad
push
nop
lock
repnz
lods
ljmp
cld
or
ret
shll
movsl
repnz
xchg
nop
in
lds
pushf
mov
rcr
pop
sbb
push
sub
or
sbb
sahf
sarb
mov
fs
roll
pop
es
adc
or
lods
xlat
icebp
lret
test
negb
shlb
jbe
adc
xchg
scas
shl
cmp
iret
jmp
mov
aaa
or
addb
testb
ja
or
push
shl
mov
mov
or
hlt
push
movsl
pop
fiadds
ret
mov
push
xchg
cmp
add
and
imul
inc
je
icebp
add
out
int
ret
stos
pushf
mov
mov
mov
imulb
push
adc
or
test
sahf
cmp
inc
sbb
js
test
fldt
in
xchg
jge
outsl
cs
cli
sbb
push
mov
or
jmp
push
iret
jo
mov
fdivrl
iret
lds
push
aad
call
adcl
insb
xor
lret
divl
jge
xchg
sub
nop
adc
icebp
mov
insb
sahf
imul
jl
mov
outsl
add
arpl
inc
movsb
into
mov
add
pop
and
cld
pop
cmp
xchg
nop
jecxz
out
data16
lcall
je
mov
push
out
sbb
cltd
fdivs
mov
push
pusha
adc
test
jmp
fiaddl
leave
jo
popf
mov
xchg
sub
xor
pop
js
stos
adc
push
ficoms
cmp
mov
push
loopne
jmp
call
and
test
mov
and
mov
inc
sub
xor
cltd
leave
xor
andb
pop
adc
and
jbe
sub
mov
daa
divb
mov
ja
xchg
xchg
in
sbb
ja
cli
pop
xor
idivl
movl
in
mov
jle
movsb
jmp
xchg
clc
sahf
ja
jne
imul
jb
ds
dec
dec
ret
inc
sub
test
ljmp
and
mov
cmp
mov
sub
dec
sar
and
adc
mov
mov
mov
jg
fbstp
mov
dec
fsts
push
push
or
and
imul
mov
mov
add
cltd
mov
lods
shll
pop
fucomip
sahf
out
aam
push
fsubs
ret
int
jnp
or
lock
imul
jge
fimuls
mov
arpl
jmp
fs
sahf
aad
stos
push
out
fldcw
push
lret
fisttpl
mov
jae
pop
test
jmp
mov
or
mov
xor
shl
mov
dec
adc
dec
mov
mov
xor
pop
fimuls
pop
dec
adcl
lods
mov
push
or
in
xchg
add
stos
loopne
push
inc
jg
adc
sbb
into
xchg
mov
xchg
xchg
cmp
rcll
or
adc
test
repz
out
pop
pop
in
pop
pop
inc
ja
leave
dec
lret
add
repz
cmp
dec
lods
in
dec
dec
stos
or
adc
cli
cmpl
ret
jp
push
fildll
xchg
fstps
test
push
clc
fidivl
mov
jp
hlt
aad
xchg
xchg
subl
inc
adc
mov
xor
jmp
pop
inc
out
dec
push
add
mov
cwtl
repnz
aaa
out
int3
cltd
jnp
pushf
pop
jecxz
fs
jns
dec
xchg
mov
repnz
mov
push
icebp
cmp
clc
dec
xor
lahf
bnd
mov
scas
jb
pop
fcmovnb
push
cld
jp
dec
mov
mov
fisubs
xlat
jo
pop
push
sti
hlt
or
aam
in
adc
ds
ds
push
mov
fsubs
dec
mov
and
sub
in
cld
neg
jne
dec
sbb
icebp
and
add
push
cmp
pop
andb
xlat
ljmp
cld
pop
pushf
outsl
cmc
out
jg
movsl
or
pop
popf
cmc
rcl
dec
pop
push
xchg
lahf
loope
mov
dec
xchg
inc
pop
lret
and
push
nop
and
push
ljmp
add
xchg
or
sbb
xor
mov
fimull
and
hlt
mov
imull
sub
pop
dec
lea
scas
mov
push
jmp
push
dec
jns
jo
loop
inc
xor
jo
fcomip
inc
mov
sub
cmp
iret
push
sub
sub
dec
sub
aaa
xchg
add
hlt
bound
int
push
add
lea
rorb
jge
and
jle
cmpsl
and
js
out
loop
outsb
mov
inc
out
out
and
imul
hlt
xchg
mov
hlt
and
sti
or
mov
jp
push
arpl
out
daa
mov
push
sbb
insb
movsl
jecxz
xchg
push
fbstp
insl
js
add
in
dec
add
es
enter
addl
pop
sbb
and
xlat
dec
add
jnp,pt
je
clc
mov
pop
push
imul
idivl
daa
mov
lcall
push
in
add
stc
cltd
sahf
in
or
int
and
xor
xor
mov
cwtl
add
cmc
pop
push
cli
mov
repz
pushf
xchg
xor
xchg
or
push
and
pop
jmp
lea
std
xchg
mov
js
pushf
mov
cs
sbb
hlt
test
mov
add
adc
xor
in
test
out
inc
push
jns
inc
sub
xchg
fwait
repz
outsb
jmp
gs
rcr
jns
inc
sub
inc
icebp
xor
xor
and
mov
push
adc
rcrb
repz
scas
push
aam
std
scas
pop
call
lahf
pop
test
fistpll
cmp
daa
xor
scas
fisubrs
lods
sbbb
outsb
loop
push
xchg
cmc
stos
or
or
push
aaa
gs
movsb
mov
jnp
cmc
jge
push
jge
sub
hlt
aas
pushf
dec
testb
popf
aad
out
jnp
mov
inc
leave
jmp
movsl
clc
cli
inc
sbb
in
inc
rcrl
loop
xchg
pop
push
loope
mov
mov
cmc
dec
mov
cmp
pop
ja
inc
mov
push
imul
into
jbe
sbb
and
sbb
xlat
sbb
fsubrl
sbb
fs
imul
add
fnstenv
loop
out
adc
pop
lods
lret
xchg
ret
push
jae
shrl
xlat
cmc
add
jb
daa
fcom
loopne
jbe
sbb
sbb
inc
mov
fwait
nop
orl
xor
jle
movsb
adc
mov
jle
popf
lock
insb
mov
aad
pushf
lcall
jecxz
ss
xorb
hlt
mov
adc
cmp
nop
or
loop
lret
repz
add
dec
adc
adcl
out
imul
pop
scas
fsubrl
rcrb
lcall
dec
xchg
mov
push
xor
test
mov
adc
ljmp
mov
jp
adc
add
sub
bswap
and
or
push
cmc
xlat
push
mov
sbb
fmulp
dec
sbb
push
adc
mov
movsb
adc
mov
mov
loope
data16
push
sbb
xor
xchg
mov
mov
and
cmp
inc
xlat
pusha
aaa
mov
je
scas
movsl
or
stc
sbb
or
fsubrl
and
pushf
dec
push
icebp
sbb
test
cmpsb
pushf
loopne
orl
daa
lock
mov
dec
and
js
popf
iret
rolb
mov
repz
mov
stos
pushf
and
push
push
adc
lret
adc
mov
lcall
xchg
xlat
dec
ds
and
jmp
fisubrs
fs
fwait
and
pop
xor
arpl
test
dec
jmp
dec
dec
ror
aad
jle
push
subl
movsb
pushf
mulb
aad
pusha
jnp
dec
add
xor
ljmp
sbb
into
in
add
call
lods
mov
dec
jp
jg
data16
lret
cmpsl
lret
and
mov
repz
jb,pt
icebp
test
and
jg
hlt
dec
cmp
and
insl
push
or
arpl
sbb
cltd
loop
pop
push
and
scas
and
mov
jbe
dec
add
xchg
push
lret
pusha
dec
clc
cmp
adc
mov
mov
sbb
ljmp
jg
jmp
or
adc
xchg
jne
jo
sub
out
jmp
adc
xchg
jb
mov
xchg
sub
imul
pop
fidivrl
cmp
loope
fwait
imul
test
nop
sub
loopne
es
jecxz
sbb
push
lret
ds
in
popf
in
inc
jo
sub
xor
add
ss
push
cmp
popa
xor
mov
adc
aaa
push
mov
fistl
mov
or
fiaddl
and
xor
in
fmull
shrl
sub
lea
sub
or
or
jno
test
subl
adc
lret
sub
mov
adcb
xchg
adc
or
sub
ljmp
add
scas
cmpsb
mov
push
es
xor
sahf
test
loopne
lods
rclb
out
mov
or
xchg
inc
push
sbb
inc
sbb
cs
cmpsl
je
push
mov
ds
cmpsb
into
sub
ja
xchg
add
mov
cs
pop
bound
ljmp
shl
cmp
add
lock
repz
sub
dec
push
cwtl
das
sbbl
test
jno
jge
xor
fildl
hlt
jno
out
lcall
orl
aad
sbb
sbb
sub
lret
lcall
mov
nop
inc
pop
inc
imul
pushl
mov
mov
test
frstor
cmp
mov
je
adc
sbb
sub
imul
push
shll
xor
jecxz
arpl
cmc
lods
mov
push
clc
sti
mov
mov
out
push
sti
imul
fnstsw
mov
cmpsb
out
push
in
add
decb
mov
sub
js
mov
sbb
in
and
repz
pusha
lods
int3
data16
xor
inc
push
xor
add
stos
fdiv
pop
aas
cld
imul
insl
jg
outsb
inc
insb
orb
xchg
mov
cmpsb
inc
mov
mov
sub
les
fstpt
and
push
push
pop
imul
push
sbb
mov
insb
jecxz
pusha
test
lods
incl
daa
repnz
mov
mov
fldcw
daa
in
fists
pop
pusha
mov
mov
inc
rcrb
clc
fldcw
sti
js
xchg
icebp
or
test
std
jecxz
xchg
stos
mov
xorl
out
call
inc
iret
xchg
xchg
mov
cmc
jo
mov
cmp
push
clc
repz
lret
and
sub
out
mov
mov
sub
ja
in
jns
push
mov
cmp
test
xor
nop
fincstp
addr16
shlb
inc
cmp
pop
addr16
pop
les
stos
sbb
jge
mov
flds
or
notb
enter
xor
aas
sbb
ja
test
sub
fstpl
icebp
dec
addr16
mov
ljmp
inc
inc
or
jmp
inc
test
xor
lcall
into
jg
cmp
lods
adc
outsl
mov
xor
jae
pop
mov
lock
add
adc
ljmp
out
add
loopne
leave
xor
pop
or
daa
jmp
lock
jle
dec
sti
rclb
insb
inc
dec
and
in
sub
aad
das
mov
aas
inc
xchg
lea
in
or
sub
push
sbbl
ja
mov
dec
jne
pop
loope
pusha
jle
stc
add
lods
aam
push
iret
push
mov
mov
cmc
pop
mov
insl
pop
xor
test
addr16
fstpl
shlb
xchg
icebp
dec
push
mov
adc
int3
or
sahf
cmc
ret
jbe
xor
jnp
adc
rorl
sbb
mov
test
daa
inc
dec
cmp
lret
and
ds
mov
pusha
gs
imul
sub
mov
dec
jg
in
lods
imul
cmp
in
inc
mov
cmpsb
add
movsb
xor
std
adc
in
dec
cwtl
insb
or
fadds
mov
cmp
or
jae
sub
or
nop
psubsb
xchg
repz
insb
mov
pextrw
jl
sbb
sbb
aaa
jge
xor
repnz
in
push
loop
aam
and
or
jge
pop
aas
mov
xchg
xchg
dec
fnsave
out
sub
mov
xlat
mov
in
roll
adc
cmp
in
sub
adc
adc
jbe
leave
mov
mov
loopne
push
mov
sbb
test
dec
jp
les
pusha
test
adc
das
push
adc
aas
xchg
aas
testl
insb
mov
push
mov
add
cs
leave
std
mov
cwtl
out
xchg
and
mov
outsl
jl
push
jecxz
mov
mov
mov
fildl
mov
iret
pop
mov
out
fldcw
pop
mov
es
cmp
pop
int
ret
jp
movsl
sub
mov
dec
in
push
push
fldt
xchg
lcall
fidivrl
ja
push
push
and
pop
loopne
icebp
lods
mov
mov
push
pop
jmp
lds
jge
out
pop
repz
jnp
sti
test
or
mov
in
pop
add
sub
popf
ja
fimull
push
mov
pop
pop
pop
repnz
jmp
mov
add
pop
mov
and
ja
jae
add
xor
fiadds
les
pop
xorb
sahf
jno
push
fbld
ret
out
mov
jle
imul
das
into
lods
inc
outsl
inc
xchg
nop
out
stc
dec
sub
js
mov
xor
dec
cld
pop
loope
adc
in
mov
push
push
mov
cli
mov
test
mov
or
cmp
mov
test
mov
lcall
pushf
adc
dec
mov
imul
sti
pop
gs
es
mov
out
add
mov
scas
gs
in
mov
shl
daa
lahf
clc
jne
and
xlat
and
push
xchg
sub
add
dec
mov
jae
insl
aam
fistpl
and
je
or
xchg
lret
movsb
inc
fstpt
pop
mov
inc
pop
mov
rol
and
xor
mov
lds
pop
cmp
jno
scas
ja
and
mov
in
push
push
jle
push
mov
inc
ja
mov
push
out
stos
imul
sub
mov
stc
aaa
xor
xorl
cmp
mulb
ss
mov
std
mov
pop
leave
xor
rorb
stos
test
pushf
test
adc
inc
dec
cmc
mov
jg
mov
dec
data16
lea
das
fstl
push
or
mov
cmp
sbb
movsl
subl
push
sahf
jge
fnstsw
test
mov
sub
jl,pn
jle
mov
std
dec
cmc
and
add
das
dec
mov
cld
into
mov
xchg
xchg
mov
imul
xchg
dec
sbb
push
mov
pop
or
cmpsb
and
lods
add
dec
enter
xor
imul
dec
in
scas
test
out
mov
rorl
push
mov
mov
rol
outsl
fstp
inc
jge
lea
jns
fdivrs
mov
outsl
add
xchg
cmp
sbb
sbb
daa
cmp
leave
stc
or
pop
pop
mov
add
and
popf
mov
scas
mov
pop
ja
cmp
ds
jne
push
repnz
mov
mov
out
lret
or
add
leave
push
in
outsl
dec
sub
movups
inc
out
in
outsl
loopne
adc
cmp
into
inc
push
inc
dec
xchg
repz
test
fisttpl
repnz
fldenv
in
mov
insb
sbb
rcrl
pop
out
mov
jecxz
gs
mov
and
xor
mov
pop
test
jae
inc
shll
leave
mov
movsb
adc
shl
and
fcomps
rorb
inc
cmpsl
sbb
push
loope
mov
cmpsl
icebp
les
in
int
and
mov
jae
test
inc
daa
lea
ss
enter
fldl
or
std
sub
dec
cmc
sbb
xor
ficompl
stos
ljmp
mov
mov
test
int
cmc
lds
mov
xor
adc
cltd
cmc
mov
js
popf
mov
notb
fsub
test
mov
pushf
out
scas
jae
in
lock
sbb
sti
jnp
dec
insb
test
lcall
test
dec
enter
adc
dec
icebp
or
idiv
xlat
ret
sarb
adc
pop
je
and
call
jno
dec
out
lods
loopne
jnp
mov
sub
mov
sbb
mov
fs
inc
or
or
into
rolb
xorl
test
add
and
lea
and
ret
jecxz
stc
xor
call
std
mov
and
call
sbb
andb
fdivrs
sbb
dec
outsl
xchg
loop
shll
scas
stos
and
ja
and
inc
mov
call
sub
cmp
adc
lods
stc
sub
push
mov
cs
pop
sub
hlt
and
mov
push
insb
push
aad
cmp
dec
cmp
pop
fsubr
je
movsb
sbb
push
test
movsb
lret
loopne
xchg
fcom
push
out
inc
outsb
loope
das
add
add
cs
and
dec
xchg
cmp
sbb
cmp
xor
adc
pop
mov
pop
sub
je
rolb
aaa
push
mov
xchg
ja
pop
je
pop
and
pop
mov
leave
insb
cmp
jne
aaa
aas
mov
repz
pop
mov
imul
out
imul
mov
push
xchg
mov
sarb
xchg
mov
sarl
nop
jp
dec
outsl
pusha
test
mov
js
add
fnstenv
dec
outsb
incl
push
xchg
adc
push
push
mov
arpl
add
lods
ds
test
sub
jmp
cmpsl
aaa
mov
ficoml
or
sbb
fs
loopne
jo
cld
jg
xchg
subl
xlat
cmpsl
fimull
scas
pop
cmc
adc
inc
sub
jge
cmp
push
sbb
cs
push
sar
lods
push
fsubrs
or
pop
orl
mov
call
mov
fmul
jp
pop
dec
and
xchg
dec
faddp
xchg
mov
or
jae
and
lcall
scas
mov
sub
imul
sub
sti
mov
sub
xchg
imul
ljmp
jbe
fistl
xchg
sub
fdivrp
sbb
in
cmpsl
push
call
mov
cmp
out
jbe
xchg
imul
into
lods
negl
scas
test
sub
or
xchg
insb
add
in
iret
xchg
adc
test
adc
ret
int3
shll
jns
fildl
push
insb
sub
or
jb
test
mov
mov
rcrb
mov
iret
adc
cmp
gs
fstl
je
repnz
jbe
jno
sub
push
mov
pusha
dec
pop
cwtl
sbb
loop
sub
cld
out
in
mov
out
outsb
mov
hlt
jno
movsb
jl
and
imul
mov
xorb
adc
dec
arpl
adc
mov
jbe
mov
mov
rorl
sub
cmp
sbb
int
aam
ret
movsl
les
push
loope
enter
cli
call
es
bound
dec
call
or
lret
xor
lcall
scas
jnp
xor
je
or
adc
dec
pusha
icebp
frstor
iret
sbb
bound
in
sub
pop
xor
lret
out
xlat
mov
mov
jne
adc
inc
pushf
lahf
pminub
sub
cmp
push
iret
js
dec
lahf
xor
xlat
std
fcoml
call
cmp
cltd
addr16
iret
repz
pop
inc
inc
cltd
push
loopne
roll
push
addr16
jb
lret
mov
cltd
inc
pop
or
aam
es
in
stos
cmp
adc
sub
out
sub
outsb
adc
sahf
je
daa
jl
inc
test
lds
pop
mov
std
jnp
jg
push
iret
mov
jl
movsl
popa
mov
mov
adc
and
int3
pop
aaa
stos
std
ss
mov
sahf
in
aaa
inc
and
adc
jp
movsl
push
fildl
insb
pop
mov
test
setbe
psrlw
mov
xor
std
es
les
mov
mov
ficoms
adc
jmp
repnz
popf
test
xor
fstpt
arpl
add
jbe
hlt
cmp
xlat
push
inc
or
sbb
or
adc
inc
cmovo
sarb
push
xor
inc
and
js
mov
pop
or
ss
addr16
mov
pop
daa
inc
mov
js
adc
adc
push
les
or
xchg
scas
add
pop
sub
cwtl
mov
outsb
ret
sahf
cmp
lock
repnz
jecxz
sbb
pop
dec
out
push
in
fbld
mov
xor
insb
xor
or
clc
arpl
rorl
jmp
ret
hlt
test
jnp
and
outsl
or
clc
dec
daa
jnp
popa
imul
sahf
push
inc
fistpll
sub
mulb
jo
pop
sub
int3
sahf
adc
movl
lods
jo
mov
mov
xchg
js
stos
sub
fiaddl
sti
adc
jo
sbb
xchg
cmp
push
inc
xchg
mov
jns
push
dec
mov
dec
outsb
stc
iret
insl
and
mov
xchg
inc
repnz
les
movsl
add
ret
insl
sbb
lcall
pop
xorl
jb
mov
xchg
aaa
or
xchg
add
sbb
or
mov
mov
cmc
inc
insb
fwait
mov
and
jg
icebp
add
movsb
repz
adc
rcr
push
sbbb
pop
subb
or
lret
hlt
add
in
or
sub
dec
notl
jno
pop
sti
movsb
xor
mov
in
sbb
add
mov
push
pusha
gs
ds
shlb
or
out
or
sbb
fstl
push
or
iret
cmpsb
insl
movsb
xchg
mov
mov
pop
frstor
stos
in
enter
rcl
sbb
push
mov
sub
push
lret
out
fstpt
jnp
lret
repnz
xchg
push
ljmp
int
xchg
jns
mov
insb
cmp
xchg
outsl
ret
push
bnd
cmc
insb
mov
and
fisttpl
je
mov
pop
pop
xlat
outsl
cmc
sarb
cmc
jp
lods
xchg
divl
and
pop
popf
inc
or
outsl
rclb
jnp
fsub
fidivl
in
je
pop
nop
cmp
xor
push
xor
hlt
cmpsb
push
repnz
fwait
sbb
icebp
mov
iret
in
xor
jg
cmc
or
mov
ret
mov
jno
xor
jle
rcll
push
popf
dec
jmp
icebp
lcall
gs
xor
ljmp
lret
jmp
rcrl
sar
insl
cltd
and
xor
inc
jp
aad
mov
int
lods
xorl
and
pop
add
test
gs
cmp
clc
decb
loopne
mov
mov
jnp
enter
push
shrl
mov
cmp
mov
nop
xchg
test
mov
mov
pop
pusha
mov
jg
pop
mov
mov
add
mov
adc
mov
jg
jno
in
xlat
fxch
mov
bndldx
cs
in
ja
negl
insl
pop
adc
imul
dec
xchg
sahf
ret
and
jnp
rcr
daa
add
cltd
adc
inc
and
mov
mov
sbb
lahf
mov
cwtl
pushf
paddd
add
mov
dec
stc
dec
cmp
mov
mov
cmp
cmpb
psubq
out
push
aam
pop
xor
push
cmp
ror
lret
call
mov
or
idivl
jmp
in
insb
dec
clc
pop
leave
ss
push
jae
std
fisttpl
lahf
insl
fimull
rcrb
xor
jmp
mov
sub
lret
adc
outsb
repnz
dec
adc
push
pop
scas
xchg
add
jno
lods
xchg
push
cmp
and
xchg
mov
ret
shrl
scas
adcb
aaa
sub
sub
push
repz
push
lret
sbb
mov
into
stos
xchg
addl
adc
inc
outsl
dec
pop
jno
or
adc
inc
mov
cmpsb
or
and
ffree
push
in
out
xchg
loop
add
xor
data16
and
lds
pop
pushf
xchg
mov
and
sub
mov
iret
xchg
and
dec
jmp
mov
jae
in
xchg
and
in
in
inc
pop
jnp
in
push
sti
sub
push
inc
cmpsb
sbb
iret
dec
shr
inc
inc
out
xchg
add
aam
sbbl
data16
mov
loop
ljmp
cmp
pop
ss
pop
xorl
sahf
push
xchg
inc
inc
in
or
mov
xchg
xchg
mov
mov
lret
iret
xor
cmpsb
mov
cmc
lret
notb
aad
bnd
lea
icebp
out
insb
ss
repz
mov
jb
sbbb
popa
mov
fmuls
mov
rcrb
cmp
jae
gs
into
insl
cmp
adc
mov
sbb
pop
adc
mov
mov
cwtl
ljmp
icebp
inc
ret
hlt
lret
and
pop
mov
ss
insl
popf
fmuls
xchg
iret
ret
cmp
mov
push
and
jnp
xor
gs
insl
loope
loopne
mov
rclb
mov
add
rclb
lods
pop
insb
add
cmp
rorb
fildl
dec
add
addl
sbb
jmp
cwtl
sub
or
bound
inc
jg
or
sbb
xor
adc
idivl
mov
or
ljmp
mov
mov
push
sti
sbb
jbe
pop
sub
mov
bound
inc
aam
push
cmp
push
jnp
and
pop
mov
jge
mov
inc
aad
sti
scas
fwait
lret
icebp
add
cmp
push
ss
cli
nopl
repz
popf
sti
inc
movsl
lret
cmpsl
in
push
test
cmp
mov
enter
sub
loop
insb
movsb
in
pop
fs
sub
jb
xor
pop
repnz
sahf
insb
pushf
imul
adc
test
xchg
ss
lods
dec
inc
movsb
adc
cmp
popa
repnz
push
adc
fcomps
movsl
or
or
sar
mov
fstpt
imul
and
cmpsb
add
sub
pop
xchg
inc
cmpsl
push
pop
outsb
jecxz
lea
subb
lcall
pop
push
mov
fidivrl
adc
jne
and
aas
pop
xchg
cmp
xchg
and
les
adc
loop
adc
push
cmp
mov
pop
jp
int
stos
push
popa
adc
adc
xor
push
pusha
mov
leave
sbbb
fwait
daa
or
pop
cltd
push
pop
or
mov
stos
pop
push
test
mov
clc
imul
cmp
out
cli
dec
add
inc
sub
xor
sub
test
hlt
and
adc
dec
mov
loope
add
sti
adc
fcomi
xchg
sbb
add
push
cmp
or
push
scas
push
shld
adc
fs
rorb
xor
cmp
daa
decb
and
cwtl
dec
inc
movsb
int
stos
gs
dec
std
test
inc
in
xor
nop
cld
pusha
int3
sbb
pop
pop
aas
ja
sub
jae
and
cltd
mov
jle
jmp
outsb
mov
cmpsb
les
inc
mull
inc
adc
push
jo
jns
xchg
inc
add
outsb
mov
mov
cs
and
jne
inc
roll
fcmovu
pop
jnp
adc
adc
xsaves
adc
push
fstp
sbb
js
inc
jb
sbbl
icebp
cltd
jl
jae
jge
insb
rolb
sbb
repz
inc
aad
test
lahf
movsb
xchg
and
stos
loop
cli
adc
adc
ss
jbe
repz
and
sub
pop
std
repz
cld
adc
sbb
in
es
or
dec
pop
xlat
and
fldcw
sbb
add
es
daa
sub
aas
cmp
cmp
adc
je
fnstcw
jbe
jnp
adc
mov
stos
mov
add
int
pusha
ljmp
pop
mov
sbb
xor
or
scas
pop
sbb
leave
cmp
mov
jo
push
mov
dec
mov
insb
sti
sti
pop
decl
inc
pop
xchg
inc
cmp
and
lcall
lods
ja
or
mov
fnsave
clc
rorl
push
aas
sbb
addr16
stos
xor
addr16
clc
stc
xlat
push
idivb
pop
cwtl
repz
mov
pop
hlt
xchg
and
pop
popa
mov
jno
inc
or
dec
jg
push
sub
jle
or
mov
add
popa
adc
lret
imul
imull
fisttps
mov
dec
test
cmpsl
out
loopne
mov
cmp
jnp
cmp
mov
push
and
dec
adcb
xchg
adc
sub
dec
test
xchg
lret
and
lahf
mov
xor
outsb
mov
and
stc
mov
mov
add
mov
outsb
cmp
addr16
stos
cmp
loop
sahf
adc
jmp
sub
ficompl
jge
jb
sbb
cmp
add
mov
adc
mov
rclb
push
data16
dec
out
dec
adc
adc
loop
add
mov
lahf
out
jnp
imul
dec
cmpsb
xchg
fdivs
repz
push
sti
jnp
add
inc
sub
pop
push
movsb
jb
jl
sbb
aaa
repnz
dec
xchg
jno
xor
in
lods
sbb
cli
sub
enter
es
outsb
xchg
mov
das
mov
stos
push
insl
pop
xorb
sub
lea
stc
add
sahf
fcomip
repz
dec
cmp
add
sbb
and
inc
and
inc
mov
and
inc
mov
inc
addr16
mov
push
inc
repnz
push
and
ljmp
fsubl
cwtl
mov
bound
dec
xor
iret
test
jns
adc
push
pop
cmp
push
lret
jno
xor
stc
das
xchg
dec
fisttpll
push
out
and
xor
fidivl
xchg
ret
cwtl
xchg
dec
arpl
mov
or
rolb
testb
jno
gs
in
or
jae
inc
cmp
testl
dec
outsb
fidivs
loop
adc
loopne
das
outsb
cmpsl
adc
out
push
aam
stos
jne
test
pushf
data16
cmp
inc
lahf
xor
mov
pmaxsw
and
and
das
xchg
cmpsb
repnz
dec
and
out
outsl
sbb
cli
rclb
dec
mov
lea
popa
repz
lcall
fcompl
pop
in
mov
sbb
testl
mov
dec
iret
call
aam
adc
cmp
pop
xchg
cld
xchg
inc
push
dec
dec
inc
jmp
sbb
sbb
inc
adc
and
cmpsl
add
rcrb
inc
insb
sbb
sti
leave
aaa
jbe
lcall
sub
sbb
fsubs
add
int3
lea
pushf
pop
jmp
jnp
int
add
loop
call
mov
sub
scas
mov
jae
repz
insb
add
imul
dec
dec
repz
rcrl
cld
and
xchg
les
sahf
fstpl
bound
cmpsb
adc
das
ja
pop
dec
xchg
pop
xchg
push
std
leave
mov
mov
and
ja
bnd
or
xchg
in
mov
add
pop
lods
aas
jno
in
popf
push
inc
movsl
call
push
xor
popa
inc
pop
scas
lret
daa
add
mov
clc
push
add
or
xchg
mov
add
dec
out
mov
mov
test
out
mov
test
mov
nop
clc
pop
push
and
int3
pop
test
dec
xor
out
ja
test
je
test
and
mov
mov
imul
int
daa
test
pop
repnz
ret
jo
jb
add
and
jge
xchg
out
or
imull
mov
cmp
stos
icebp
sub
cmc
aad
mov
aaa
sub
stos
cmp
scas
stc
sub
jno
shlb
out
movsl
loop
xchg
push
xor
sub
rolb
pop
mov
imulb
mov
rcl
bound
xor
call
fisubl
jle
mov
pop
insl
xor
sti
mov
push
xor
mov
mov
cli
adc
pop
in
mov
add
lea
mov
mov
addb
adc
cltd
or
push
ret
shrb
jo
mov
xor
sahf
cmp
fstl
sbb
push
pop
xchg
xor
lret
push
fdiv
fwait
testb
or
ss
std
mov
and
mov
and
out
pop
ja
adc
mov
xor
ret
pop
xlat
sbb
ret
in
push
cmp
std
mov
fwait
testb
lret
xchg
xor
cmp
mov
or
popa
sbb
pop
lcall
pop
loope
xchg
scas
je
jae
imul
std
jae
jnp
push
lock
aas
adcb
mov
or
push
sbb
js
jno
in
cltd
inc
mov
and
outsb
mov
push
imulb
and
loop
insl
repnz
mov
pop
das
xor
fistpl
adc
jno
les
pop
iret
cli
xchg
inc
decb
insl
jp
cmp
xor
push
xchg
pushf
pop
mov
into
cmp
dec
adc
sub
scas
sbb
mov
mov
mov
push
mov
adc
into
mov
pusha
sbb
jo
and
push
dec
jmp
or
push
jmp
add
and
push
dec
shr
jnp
pop
xor
stc
pop
loop
scas
and
call
stos
dec
mov
lret
sahf
adc
mov
jno
xchg
jmp
mov
jl
stc
sub
cmpsl
mov
aas
mov
or
xchg
xchg
cmp
sti
ja
push
stc
inc
mov
dec
and
or
xchg
and
xlat
dec
xor
xchg
stc
into
in
enter
cmp
in
ja
in
in
sub
or
dec
adc
dec
stc
jp
mov
les
mov
push
xchg
xchg
sub
jle
or
lea
and
mov
mov
js
sbb
xchg
or
dec
out
lds
push
orl
fbstp
dec
aad
test
xor
insl
in
mov
or
jnp
adcb
and
dec
loopne
stos
lret
repz
or
mov
insl
shll
adc
fwait
push
xor
inc
and
inc
pop
das
ficompl
pop
ds
jne
pop
jg
adc
pop
mov
data16
loope
cmovbe
sbb
iret
test
movsb
fwait
jb
lds
ss
xchg
dec
les
lret
popa
xchg
out
pop
ds
aad
xchg
pop
sti
jecxz
test
popa
xchg
inc
and
mov
int
mov
repnz
rcrl
adc
mov
pop
cmp
push
mov
pop
in
inc
mov
sub
mov
sub
cli
cmp
sahf
jecxz
lds
stc
inc
and
insl
sbb
cmp
clc
popf
pop
repz
rcll
insb
imul
push
add
hlt
and
jbe
mov
pop
mov
js
lret
clc
jge
lret
sbb
push
fwait
aaa
leave
dec
in
pusha
lret
or
mov
lret
and
sarb
cs
xor
mov
jbe
je
jmp
sti
movsl
out
cli
addr16
out
sub
iret
cmpl
test
inc
out
aad
xlat
push
dec
lret
outsl
in
inc
sub
push
push
daa
mov
add
call
or
mov
push
lods
out
mov
lea
loop
cmpsl
adc
adc
lcall
push
frstor
mov
in
icebp
ror
test
cli
pop
cmpsb
les
push
pop
test
cmpl
cld
addr16
out
inc
mov
xor
dec
mov
jb
nop
jge
add
push
add
jne
lcall
xchg
out
sub
pop
in
mov
addl
int
shld
ljmp
in
cs
and
jae,pt
imul
leave
fwait
sarl
ret
arpl
insl
pushf
inc
es
push
jmp
xchg
xor
adc
shlb
call
push
push
mov
dec
inc
sbb
jg
mov
fcmovnb
or
out
pop
jg
dec
cs
jne
jecxz
into
dec
loopne
call
shld
int
push
adc
mov
jmp
or
sub
sbb
cmp
outsl
dec
jns
sub
aaa
adc
dec
sub
sbb
push
jmp
push
rolb
jne
je
pushf
aaa
arpl
pop
les
add
adc
adc
inc
pop
mov
pusha
pop
fisttpl
fldcw
and
mov
fnstsw
cld
lcall
xorw
xchg
popf
aas
insb
roll
cmp
ret
cmp
shll
xchg
push
out
in
dec
popa
mov
adc
test
lock
xchg
inc
pop
andb
ja
mov
iret
jecxz
es
sbb
and
mov
scas
lds
pusha
sahf
jmp
and
into
ja
jnp
xchg
cmp
mov
jns
push
add
jmp
xchg
mov
fcompl
iret
ret
loope
and
test
push
ret
mov
insl
in
cmpsb
int
xchg
lcall
leave
sbb
xchg
jle
push
mov
add
test
nop
mov
outsb
roll
or
orl
xchg
adc
lcall
add
mov
decb
pusha
xchg
mov
in
dec
out
in
jg
fildll
lret
jb
cmp
xchg
gs
popf
lret
dec
imul
lret
adc
lcall
shrb
sub
lcall
das
ljmp
sub
mov
aad
sub
jnp
mov
add
sub
push
sti
sbbl
stos
mov
jge
sbbl
mov
dec
pusha
sbb
popf
and
xor
call
jecxz
insl
adc
mov
in
fldenv
bound
popw
inc
xchg
cltd
mov
es
fdivrs
xor
mov
es
movb
jae
mov
jmp
and
jg
scas
in
insl
mov
imul
mov
outsl
stc
iret
fcmovne
ret
xor
jbe
icebp
lock
pop
pusha
stc
pop
fiaddl
in
bound
add
and
test
sub
jle
jnp
loope
mov
inc
mov
enter
mov
lea
jnp
and
movsb
mov
pop
inc
fidivrl
scas
aaa
or
lock
mov
ds
or
or
cld
dec
cmp
cmp
test
xchg
pop
cmc
lahf
jge
aaa
cld
and
stos
fcmovb
xchg
outsl
ror
dec
lretw
enter
ds
adc
xor
je
push
pop
add
lds
or
sbb
out
mov
mov
das
xor
sbb
loope
dec
inc
mov
jb
add
icebp
pop
daa
daa
mov
or
jge
ljmp
add
push
mov
add
xchg
jne
fwait
mov
add
and
test
in
enter
sbb
fs
data16
int3
mov
xchg
dec
mov
dec
cmpsl
dec
mov
rdpmc
mov
xchg
xchg
cmp
les
rorb
adc
jbe
mov
pop
or
cmp
repz
or
mov
aam
hlt
popf
aam
push
mov
dec
mov
push
mov
sub
or
insb
mov
ja
cmp
scas
cwtl
shll
rorl
add
pop
cs
xlat
sub
scas
hlt
lcall
dec
sti
hlt
push
in
pusha
data16
jno
inc
lcall
aad
lret
xchg
mov
dec
cmpsb
xchg
outsb
inc
push
ss
cltd
ja
leave
loope
popf
ljmp
push
adc
popf
ja
std
xchg
rorb
decb
xchg
arpl
lods
in
add
and
jg
in
les
aaa
jge
mov
insl
mov
lods
ja
fadds
shrb
mov
xor
jo
mov
mov
mov
stos
in
in
and
lcall
push
mov
test
dec
jle
mov
repnz
xor
lret
insb
shl
lahf
fistpl
xchg
lea
movsb
mov
fmuls
enter
data16
test
loope
mov
or
sub
leave
mov
lea
jb
mov
lods
mov
mov
cmp
dec
mov
inc
sbb
adc
ja
sti
mov
test
roll
nop
popf
mov
xchg
shl
roll
fcmovb
lods
testl
mov
loop
adc
in
nop
je
scas
push
mov
out
dec
dec
xor
mov
mov
loopne
xchg
pop
xchg
pusha
popf
cld
xchg
fmull
xor
ja
xorl
lret
and
jno
sti
insl
adc
pushf
adc
adc
and
js
into
mov
push
add
dec
push
add
movl
cli
jb
inc
sti
sbb
sub
jecxz
mov
aad
adc
inc
adc
out
flds
lcall
out
pop
jo
arpl
test
push
test
jno
decl
int
dec
cltd
mov
push
mov
xchg
xor
nop
daa
push
rol
mov
pop
mov
test
std
inc
mov
and
fs
push
jns
insl
cmpsl
int
mov
into
inc
add
stos
int
lods
push
out
sbb
enter
mov
or
aam
or
imul
cmc
pushf
jo
mov
pop
push
cld
in
pop
lret
add
xchg
cld
mov
cld
fldt
mov
xchg
adc
mov
sub
mov
mov
shl
mov
popa
es
mov
inc
test
pop
ljmp
int3
mov
and
inc
dec
jl
xchg
sbbb
cmp
fstps
pop
scas
cmpsb
pop
mov
sub
xchg
xchg
jg
mov
aad
add
mov
and
imul
jecxz
mov
out
daa
cmp
loopne
repz
sub
jno
clc
outsl
gs
fwait
std
sub
out
iret
jo
int
jae
mov
jo
hlt
enter
or
fdivrl
test
mov
xor
adc
lea
sub
mov
jns
jg
sub
mov
sub
push
and
cltd
mov
test
aam
add
lretw
push
xchg
aaa
push
xchg
xor
sbb
insl
sub
add
lods
push
cmp
pop
leave
mov
xchg
rcll
addr16
and
jno
sub
test
add
mov
jge
jne
pop
adc
push
xchg
call
cmp
addr16
jg
xchg
icebp
in
push
prefetcht2
aad
and
jb
and
xchg
push
dec
mov
mov
scas
dec
mov
mov
cmc
dec
sbb
xlat
loope
out
mov
ja
adc
xlat
movsl
arpl
repnz
aam
lahf
sub
dec
imul
rorb
shlb
xor
dec
xor
ja
mov
sbb
inc
lods
inc
xor
add
adc
inc
xchg
inc
xor
xor
inc
into
push
pop
notb
push
je
mov
cmp
lea
loopne
inc
mov
xor
pop
sbb
jg
je
push
sbbb
loope
fbstp
and
imul
cmp
adc
xchg
xchg
jecxz
adc
out
fldln2
pop
mov
jle
outsl
nop
or
push
movsl
out
int
imul
rolb
inc
loopne
sbb
nop
jmp
ljmp
popf
mov
mov
push
negb
xchg
mov
mov
add
xor
push
sahf
ja
adc
xor
outsl
out
mov
jae
orl
dec
push
repz
dec
sbb
cmc
xchg
cmp
jge
sub
leave
xor
stos
pop
in
ss
repnz
enter
mov
xor
jmp
add
cmp
in
lret
push
mov
cmp
mov
mov
and
jp
sbb
cld
aaa
fsubrl
pop
push
lock
xor
lods
add
cmpsb
dec
xchg
aad
loopne
call
mov
cmpsl
jmp
mull
push
mov
add
fnsave
push
in
fnstsw
cmp
stc
bsf
leave
push
push
std
inc
push
test
icebp
push
pop
sub
pop
lcall
and
mov
push
push
aam
gs
pop
push
aad
sub
fwait
push
or
bound
push
mov
mov
push
or
xchg
std
pop
rcrl
and
sbb
and
sub
cwtl
outsl
add
int
lock
pop
shrl
fcompl
dec
and
scas
in
fidivrl
sub
scas
add
sub
imul
pop
and
incb
dec
adc
flds
dec
fistpl
lea
adcl
pop
xchg
lcall
xchg
repz
mov
jge
and
sub
nop
bound
inc
movsl
lods
into
bound
lahf
daa
jmp
and
sub
push
pushf
mov
aaa
dec
out
mov
pop
sbb
aam
dec
xor
mov
sahf
xor
push
add
push
add
jb
mov
dec
cmp
jne
mov
cmp
jp
xchg
andb
insl
hlt
das
add
lods
ds
lret
aam
fbld
pop
xchg
popf
sbb
mov
stos
in
and
inc
jmp
in
sub
jge
shlb
fsubr
out
lock
int
cmp
addl
aam
dec
inc
add
js
clc
fdivs
aad
jns
mov
inc
xchg
int3
add
lds
lea
mov
or
cwtl
aas
aaa
dec
sbb
loope
movsb
pusha
fidivs
loopne
stos
push
cld
imull
pop
jo
data16
xchg
pushf
mov
and
sbb
cmpsb
imul
inc
jecxz
pop
pop
mov
dec
inc
jmp
adc
int3
leave
lea
sbb
pop
mov
add
pop
imul
lret
popl
sub
fwait
xor
fisttpll
out
lcall
rorb
jmp
or
sahf
xor
sbb
jbe
mov
fbld
insl
jge
arpl
rcl
dec
fwait
in
outsb
lods
jle
stc
mov
pushf
lcall
xchg
add
lea
ret
imul
or
push
jmp
sub
dec
fs
in
out
into
jns
inc
xchg
or
ret
scas
push
inc
sbbl
imul
cmp
or
mov
inc
lahf
outsb
jnp
or
adc
cmp
dec
dec
hlt
test
mov
fs
xor
nop
das
add
jmp
xchg
mov
xchg
pop
mov
xchg
sbb
clc
dec
pop
pusha
stos
lds
and
xchg
or
jne
cmc
cmp
mov
inc
je
test
xchg
ljmp
pop
shlb
rorb
mov
inc
lahf
mov
dec
dec
leave
mov
jb
dec
push
sbb
sub
xor
cmp
inc
stos
xchg
pop
push
outsb
stmxcsr
mov
pop
loop
mov
add
jge
xor
int
dec
push
push
adc
dec
out
ficompl
adcb
ret
adc
xor
test
shlb
iret
cmp
and
int3
cli
addr16
rorl
stos
mov
shrb
adc
pop
iret
imul
stos
jle
pop
xchg
movsb
shr
incb
and
jno
jmp
in
test
pop
sti
dec
lret
hlt
sub
iret
movsl
xchg
dec
lods
fs
mov
mov
out
cs
jb
lock
adc
cmp
mov
int3
cmp
mov
inc
std
dec
movsl
mov
mov
cmpsl
test
cmpl
repz
sbb
int3
gs
pop
push
je
jmp
push
xor
jl
mov
pop
mov
loope
dec
cmpl
push
inc
enter
aas
cli
push
push
out
jl
loope
jge
adc
pop
or
sub
sub
nop
je
ja
nop
add
inc
mov
add
mov
test
add
pop
fs
pop
inc
sub
jns
ss
roll
icebp
pop
sbb
mov
add
jg
insb
out
mov
adc
sti
pushf
mov
pop
or
mov
das
or
xchg
or
cmpsl
pop
lea
push
mov
lcall
call
xchg
imull
mov
addb
in
mov
xchg
ds
jecxz
pop
mov
push
out
jg
imul
and
bound
cmc
mov
je
fldl
jmp
xchg
sahf
mov
stos
aaa
loopne
jo
enter
push
add
test
inc
inc
cmpsb
cmc
ftst
sub
jl
mov
xor
les
pusha
mov
sbb
fistps
imul
pop
cmp
fmul
sub
faddl
xor
sub
ljmp
hlt
cmp
fnstenv
xchg
sbb
inc
adc
in
mov
bound
mov
aaa
mov
std
loope
mov
sub
ljmp
imul
adc
or
ljmp
mov
xrelease
adc
sbb
and
outsl
fimuls
sub
jbe
popl
aaa
pop
pop
jo
xor
repz
or
sbb
inc
and
fisubs
dec
or
lds
xchg
jns
mov
es
jo
cs
or
lods
mov
xchg
push
mov
add
add
rdtsc
push
cld
or
insb
and
push
aad
sahf
push
arpl
push
or
or
fwait
pop
mov
inc
lds
rorw
pop
add
test
or
repz
xchg
mov
mov
lea
stos
addr16
aas
mov
add
insb
bound
add
dec
push
xor
imul
push
gs
dec
pop
iret
imul
insl
scas
mov
lods
add
add
xchg
pushl
inc
dec
ja
pop
adc
mov
adc
sbb
sarb
leave
push
pop
mov
cmp
mov
cmp
cld
out
dec
das
aas
adc
jge
pop
pushf
dec
ret
loopne
in
out
sbb
mov
enter
and
into
mov
or
js
out
les
add
ret
and
mov
bound
push
ret
sub
pop
loope
lret
sub
cmp
xchg
repnz
pop
lock
insl
clc
push
adc
dec
sub
fsubrs
mov
jnp
jge
and
sarl
ret
cmp
icebp
dec
stos
cmp
jo
adc
mov
lahf
xchg
xchg
sbb
dec
jg
xor
rcll
outsl
cs
xchg
sti
call
xor
stos
and
outsb
adc
pop
dec
out
sub
jno
lock
dec
mov
fistl
adc
aam
dec
mov
repz
daa
sbb
loopne
data16
inc
mov
add
mov
dec
pop
pop
cmc
sahf
rol
xorb
xor
imul
push
pop
cmpsl
dec
push
insl
sahf
inc
mov
je
movsl
sbb
dec
dec
pop
aad
adc
lods
adc
xchg
into
push
sub
jbe
add
sar
std
aam
or
push
dec
mov
mov
inc
mov
test
add
pop
pusha
mulb
pop
lock
fsts
or
lea
cltd
div
sbb
into
fdivl
std
ds
fdivl
cmp
rclb
test
popa
dec
dec
outsb
mov
lds
cmc
imul
bswap
fstpt
psrlw
sti
cmp
cmpsb
mov
aas
cmp
cmpsl
jbe
sahf
cmpsl
dec
pop
jmp
mov
idivb
and
aaa
or
pop
xor
lahf
xor
test
sbb
xlat
decl
mov
popf
cmp
loope
test
int
loope
xor
push
fmull
lods
adc
or
dec
xchg
jge
cmp
mov
sti
icebp
call
jl
inc
xor
push
cld
push
mov
aad
inc
lahf
lcall
mov
cwtl
movsl
out
addr16
pop
cs
scas
push
sub
shl
mov
aad
imul
sbb
mov
push
mov
pop
cmp
andb
ljmp
add
jecxz
loopne
icebp
or
cmpsl
cs
push
dec
aas
lock
rclb
arpl
push
cmpl
test
mov
out
repz
adc
int3
aad
pop
in
cmp
push
shr
push
pop
fiadds
and
les
sub
cli
inc
add
pop
imul
sbb
adc
mov
flds
imul
popa
outsl
daa
mov
pop
mov
sti
aaa
mov
ljmp
push
fdivrl
or
loopw
sub
xchg
lea
pop
rolb
test
aas
inc
fimull
xor
mov
mov
clc
mov
outsl
rclb
push
out
nop
mov
sbb
sbb
pop
xchg
enter
mov
adc
adc
push
out
mov
add
pop
push
aam
mov
inc
data16
jnp
sbb
out
pusha
push
mov
iret
dec
mov
popf
lds
outsb
and
pop
jecxz
aad
xchg
push
lea
xor
pop
icebp
nop
cmpsl
inc
mov
loop
or
enter
test
idivl
mov
cmc
arpl
jmp
push
jae
dec
ret
fsts
iret
mov
sub
movsl
inc
pushf
les
pop
cmp
popa
movsl
cld
mov
mov
hlt
rcll
dec
sbb
out
adc
lods
xor
or
and
fstps
and
xchg
loope
pop
mov
std
mull
rorl
lods
sub
sbb
xchg
hlt
movsl
inc
sti
add
cmp
add
lret
cli
lea
hlt
icebp
ret
xchg
mov
je
cmp
aaa
xchg
xchg
das
pop
scas
aaa
rol
int3
sbb
incl
ret
fistps
rcll
adc
int
add
lock
out
sbb
or
imul
popa
aam
out
sub
int
pop
lret
lods
dec
sti
sub
roll
push
lods
lods
xlat
xchg
cli
aaa
and
dec
adc
mov
inc
xor
jl
jmp
inc
push
mov
push
jns
push
pop
mov
outsl
test
in
lods
ja
mov
ss
jo
into
inc
rcrb
shr
movsl
repnz
jnp
fldcw
adc
push
pop
xor
push
xchg
and
mov
inc
adc
and
les
or
fs
mov
add
repz
sarl
cltd
adc
mov
pop
fsts
xchg
or
js
insl
mov
fimuls
sub
lods
mov
cmc
push
jns
push
std
cmpsb
in
inc
inc
adc
sub
and
sar
xchg
xchg
icebp
xor
addr16
imul
xor
cli
daa
mov
mov
jnp
pop
sub
scas
push
add
pop
add
pop
jle
dec
stc
test
jl
mov
dec
dec
mov
inc
out
push
cmp
jge
push
popf
mov
aam
sub
repz
sbb
push
sbb
jl
sahf
sbb
data16
filds
cmc
outsl
jae
int3
data16
xchg
mov
cmp
or
andb
movsl
mov
sti
mov
jp
sbb
add
jns
jb
mov
cs
jno
loopne
hlt
jg
push
hlt
push
cltd
lds
adc
test
jmp
subb
aas
icebp
jl
pop
cmp
lds
loop
cwtl
lahf
adc
test
aas
out
js
and
or
jmp
mov
aad
jmp
xchg
adcb
sub
sub
cwtl
push
mov
inc
and
inc
cltd
inc
lret
fnstcw
xchg
out
xor
inc
pushf
test
xor
loopne
cltd
dec
fstps
inc
xchg
stos
lock
fildll
and
xchg
mov
push
iret
fldt
lahf
jo
ret
imul
dec
mov
inc
movsb
scas
adcl
inc
jg
push
stos
dec
mov
lock
scas
mov
lret
fucomp
adc
jne
lahf
lret
add
cmpsl
dec
inc
das
imul
mov
xchg
test
dec
lods
rolb
lcall
xor
or
dec
inc
ret
loop
sub
in
cld
and
popf
lds
scas
insb
rolb
dec
pusha
rorb
ret
icebp
inc
dec
ss
push
sbb
jl
and
jp
pop
jo
mov
inc
mov
cs
shrl
es
add
mov
cltd
xor
sub
lock
sbb
mov
jbe
enter
sub
inc
mov
push
dec
shr
inc
adc
insl
ret
shlb
cmp
jns
fwait
aam
push
ss
loopne
pop
pop
je
push
mov
mov
aas
enter
adc
in
mov
lds
cmc
mov
bound
add
adc
xchg
in
iret
inc
add
testl
sub
mov
mov
mov
push
icebp
add
movsb
fldt
pop
mov
and
scas
push
shll
stos
fidivl
scas
sti
mov
pop
arpl
push
adc
incl
add
pop
shrl
mov
xchg
mov
xchg
dec
jl
inc
cmpsl
jnp
mov
jb
jcxz
mov
mov
mov
xchg
ja
xchg
lret
add
std
fwait
mov
imul
push
ja
cmpl
inc
mov
jecxz
fidivl
adc
xchg
movsb
test
xlat
xor
mov
filds
push
hlt
in
addl
dec
push
mov
mov
lock
imul
lock
ror
into
ja
push
out
loope
ja
testl
outsb
or
fwait
xlat
mov
cmovge
lods
repz
and
or
xchg
sbb
in
inc
jno
mov
stos
and
pop
mov
xchg
mov
cmp
cmc
ja
or
out
push
inc
shr
in
test
jle
sub
and
inc
sub
mov
scas
xchg
push
and
int3
jmp
mov
shll
mov
pop
push
fcoms
sbb
mov
imul
rcll
dec
cmp
enter
cmp
lahf
pop
lret
hlt
fdivl
lcall
jb
and
or
fs
dec
shrl
sbb
ljmp
dec
daa
out
push
stc
and
stc
xchg
and
les
or
adc
pop
popf
aas
jne
shlb
aad
mov
lea
stos
hlt
sbb
mov
outsl
das
dec
sti
push
in
out
xchg
or
or
inc
popa
outsl
sbb
sbb
adc
pop
loope
sbb
jmp
cmpsb
xchg
cmc
aad
in
shll
cltd
jmp
jo
inc
insb
add
and
sbb
mov
leave
push
adc
in
xchg
mov
arpl
cmp
push
mov
dec
addl
mov
cmp
jbe
ljmp
lock
insb
pop
fimull
movsb
mov
iret
scas
es
outsl
mov
push
xchg
mov
push
and
fdivrl
sbb
repz
frstor
cmpsb
stc
es
cmpsb
xor
sub
sbb
xor
cltd
jbe
push
pop
in
and
clc
out
orl
push
mov
xchg
int
enter
ss
stos
iret
bound
jp
out
int
mov
xchg
xchg
and
mov
mov
inc
repz
sbb
mov
nop
jge
in
xor
add
inc
imul
inc
sub
mov
stos
neg
add
adcl
lods
adc
inc
mov
lods
sbb
sbb
pop
div
jae
pusha
and
mov
sub
mov
pop
in
sub
movsb
data16
lahf
mov
mov
pop
add
dec
adc
and
aaa
sub
cmp
and
inc
inc
call
jl
andw
pop
ds
push
adc
cld
adcb
test
jmp
push
xchg
aam
and
cmp
adc
jp
pop
dec
pop
ljmp
sub
mov
push
aaa
lea
push
in
stc
out
enter
and
out
js
mov
repz
jno
jb
push
dec
movsl
inc
jb
xchg
not
add
inc
and
aad
in
testl
stos
push
or
lea
or
cmpsb
jnp
mov
aaa
repnz
dec
dec
sub
mov
jp
pop
push
pop
fs
popa
jecxz
lret
pop
shr
mov
loope
test
in
mov
fcmovnb
cld
jecxz
out
push
mov
out
or
and
adc
hlt
jnp
or
inc
xor
test
lea
cmpsl
lahf
jbe
repz
std
loop
sti
sub
mov
scas
aaa
jecxz
imul
sub
aam
mov
cltd
cmp
sbb
and
ss
or
out
adc
fs
je
stc
mov
push
adc
clc
aas
add
stc
lcall
mov
js
lea
xor
mov
in
adc
xchg
sub
sbb
jle
mov
mov
dec
jecxz
js
sbb
lret
pop
adc
add
pop
adc
xor
cmpsl
push
es
mov
imul
cltd
mov
in
imul
fwait
ret
lods
stc
js
lret
imull
pusha
mov
fbld
sub
dec
loopne
into
fdiv
arpl
into
loope
mov
fistl
jb
jnp
aad
xchg
sub
addr16
jne
test
repz
test
fcomps
cltd
popl
lcall
mov
ss
insb
into
mov
push
pop
ss
adc
setbe
test
pop
xchg
pop
stos
call
mov
or
xchg
insb
jmp
sbb
inc
sub
test
xchg
push
loop
pop
mov
in
insb
sub
and
mov
inc
stc
push
notl
into
push
pop
ss
ljmp
cmc
test
rclb
push
adc
xor
lret
pop
inc
fimuls
and
push
xchg
jmp
inc
and
pop
mov
add
fwait
dec
add
cmpsb
mov
jnp
or
std
pusha
inc
jecxz
adc
cwtl
sbb
addb
sub
xchg
lods
dec
cs
insb
sub
stos
not
inc
out
and
cmp
loopne
hlt
jmp
pop
stc
push
push
or
addr16
pop
rorl
xchg
pop
jmp
jp
dec
inc
ss
push
xor
sbb
shlb
cmpsb
jle
and
stos
int
stc
xor
inc
pop
mov
lods
mov
or
mov
aad
mov
jge
mov
ret
sub
aad
stos
mov
rcr
in
or
stos
dec
pushf
inc
cmpsb
and
clc
cmp
add
mov
subb
arpl
test
stos
cs
sbb
outsl
xor
jnp
in
fnstenv
push
dec
popf
bound
push
std
daa
push
push
in
push
and
jle
je
mov
lock
popf
jp
pop
lds
jge
pop
movaps
jle
notl
mov
outsb
fldl
jne
jmp
ja
aas
pusha
icebp
aaa
notl
das
fnstcw
inc
inc
pop
stos
mov
cmpsl
addr16
icebp
adc
das
enter
fdivs
stc
and
sti
fwait
test
pop
je
fisubrl
repnz
push
push
leave
sub
jp
aas
dec
mov
lods
cmp
pop
and
push
cmp
push
cmpsb
out
adc
mov
sub
call
imul
test
hlt
or
outsb
jae
xchg
stc
jl,pt
add
jbe
shll
push
push
ror
insl
xchg
cmpb
jo
loope
or
sub
enter
shlb
jle
xchg
jo
fs
fnstsw
dec
inc
call
or
mov
mov
lds
arpl
out
mov
js
or
sub
rorl
js
in
jecxz
xchg
and
addr16
cmp
test
mov
jmp
mov
dec
mov
mov
mov
je
insl
out
adc
push
or
sti
pop
insb
pushf
jg
aad
popf
or
je
and
or
push
adc
xchg
pop
pusha
pushf
cmp
pop
and
cltd
dec
adc
repnz
movsb
cmpsb
popf
sarb
mov
push
mov
jecxz
mov
call
dec
stos
mov
push
rolb
in
add
rep
sbb
inc
and
out
mov
arpl
in
sarb
es
push
test
js
mov
add
nop
mov
jns
rorb
and
cmp
mov
dec
divl
sub
lock
dec
jmp
jae
in
stos
jb
rcr
cmp
sub
cs
xor
cmp
ss
movsl
pushf
aad
dec
mov
pop
in
jmp
mov
sbb
scas
dec
pop
cmc
xchg
or
push
stc
cltd
cmp
in
inc
pop
add
cmp
test
inc
dec
aam
daa
daa
push
imulb
adc
repz
sbbl
sbb
pop
int
add
int
push
mov
push
in
xor
jo
xlat
mov
fucomp
rolb
mov
icebp
push
iret
es
cmc
mov
data16
aam
cli
inc
das
mov
imul
push
je
jmp
loop
dec
orb
xchg
mov
shl
adc
shr
pop
test
insl
push
mov
mov
mov
sbbb
fstpt
das
clc
movsl
cmpsl
fistps
lahf
and
aam
aaa
pop
leave
jo
mov
mov
and
pop
mov
outsl
jmp
cmp
sbb
std
pop
push
fisubl
adc
mov
xchg
push
inc
fsubp
lcall
cli
fwait
test
in
cmp
lock
insb
push
stc
push
fstpl
out
out
sub
cmpsl
fwait
lret
cmpsb
nop
mov
cmp
mov
push
xor
icebp
sbb
out
std
jno
xchg
fadd
insl
and
mov
pop
mov
and
mov
inc
or
dec
push
push
pusha
in
inc
fs
jmp
inc
inc
cltd
mov
sbb
adcl
fldl
shr
and
dec
mov
rcll
ss
pop
mov
cwtl
adc
rcrb
ret
cwtl
inc
in
push
stos
jae
jo
lcall
mov
xchg
dec
lahf
sbb
mov
fdiv
push
outsl
mov
dec
mov
jge
bound
fwait
push
dec
es
ja
push
adc
lahf
mov
pop
pop
cmp
push
cmp
stos
lret
rclb
and
mov
pushf
roll
pusha
xor
inc
mov
das
add
mov
lahf
pop
imulb
aaa
mov
addl
js
jmp
cmp
push
jbe
mov
sub
jae
dec
int3
pop
cmc
arpl
sbb
mov
mov
sbb
popf
rolb
daa
push
jle
and
popf
dec
jne
mov
test
pop
mov
ds
dec
and
les
mov
movsl
into
push
adc
repz
cmpsl
sbb
lret
cltd
dec
ss
ds
or
jge
aad
sub
hlt
and
test
dec
or
push
fwait
inc
mov
lcall
jnp
jl
pushf
pop
imul
repz
shlb
add
pop
mov
sbb
jle
push
fs
push
inc
std
adc
sub
not
sbb
frstor
test
popf
push
rcrb
imul
loope
xchg
inc
dec
fimull
jle
bound
daa
dec
xor
clc
vpmullw
inc
inc
je
cmp
clc
lods
mov
pop
cmpsl
mov
stos
div
inc
xor
jns
pop
subb
mov
xchg
aas
idivl
push
cmpsl
out
inc
rclb
xor
and
fldt
subps
mul
cmp
sub
adc
stc
mov
cmp
push
imul
mov
into
dec
addr16
mov
dec
jno
movsl
inc
jnp
out
lret
ja
test
and
inc
cmpsb
sbb
jecxz
cli
cmp
out
in
sbb
popf
adc
add
ret
mov
mov
movsb
je
mov
dec
push
insb
inc
dec
jg
add
jns
sbb
int3
add
fnstenv
fidivl
fidivl
mov
fadd
or
sbb
stos
pop
orl
dec
jle
in
enter
cmc
xchg
cmp
mov
jge
jmp
ret
push
mov
pushf
mov
repz
mov
cmp
sbb
aas
sbb
push
mov
mov
xor
xchg
ss
inc
ficompl
cs
icebp
dec
and
jmp
lods
lahf
jb
sarb
mul
ja
mov
mov
test
cmp
les
push
bnd
call
fwait
cmp
inc
hlt
inc
ret
jmp
or
fnstsw
jg
mov
adc
mov
cmp
mov
cmc
dec
aas
in
pop
enter
icebp
push
scas
flds
ret
dec
inc
mov
orb
mov
dec
or
hlt
dec
insl
popa
fstpt
in
arpl
push
jno
and
out
clc
leave
jnp
cli
les
xchg
in
or
loop
xor
aad
pop
cli
mov
push
mov
iret
cmp
mov
mov
rcl
adc
inc
mov
nop
clc
fiadds
cld
js
and
jbe
jo
push
xor
negb
test
pop
rcrl
repz
pop
sub
nop
in
jle
mov
mov
and
or
lods
xor
cmpsl
pusha
fstl
adc
clc
xchg
fistps
mov
lcall
and
xchg
repnz
inc
mov
mov
in
xor
iret
xor
popa
pop
test
mov
mov
sub
aam
adc
mov
xchg
dec
out
call
and
jo
pop
and
jp
repz
mov
int
dec
push
xor
movsb
mov
loop
push
adc
cmp
movsb
sub
lret
lock
fwait
mov
pop
jae
movsb
mov
ret
jmp
cwtl
xchg
ss
xchg
dec
mov
cmp
lcall
jg
test
jmp
stos
lret
push
mov
pushf
inc
pop
inc
mov
xor
sub
int
xchg
shrb
jbe
sbb
jp
pop
pop
shl
clc
xor
dec
push
cmpl
pop
adc
je
mov
mov
inc
inc
std
and
push
mov
into
fstpt
cmp
push
xchg
jg
jmp
xchg
push
sub
inc
sbb
add
sub
pop
mov
cmp
insl
stc
adc
or
adc
sub
ftst
and
jne
fisubrs
sub
xchg
scas
fisubrs
call
sbb
jmp
cmp
dec
aam
loop
mov
fwait
js
mov
lret
pop
mov
lret
andl
paddb
sbb
addr16
out
lods
cmp
stos
sarb
push
jae
jnp
test
mov
iret
cli
rcrb
jns
xchg
outsb
mov
je
iret
out
fimuls
jmp
ret
jnp
sub
shlb
out
test
sarb
sbb
movsb
push
rorb
test
dec
addr16
and
ss
icebp
pop
sub
push
adc
call
jle
stc
fldl
add
pop
shrb
cmp
xchg
pop
jmp
jmp
jecxz
std
jb
stos
inc
bound
bound
mov
dec
inc
pop
sti
filds
mov
stos
push
mov
cmpsb
daa
jg
mov
cli
jg
leave
push
adc
inc
mov
mov
push
lds
test
adc
jne
insl
das
popa
lea
lret
js
pop
cmp
out
cmpl
inc
jp
mov
jno
jne
xor
and
popa
push
jb
scas
aas
jle
sti
into
out
addb
mov
lret
insl
adc
mov
sub
je
mov
mov
mov
push
lods
jb
loop
push
inc
cmp
pop
iret
adc
xor
clc
mov
iret
push
cmc
push
test
frstor
lahf
incb
jnp
push
insb
rolb
sub
insl
sarl
dec
mov
pop
mov
xor
cmpsb
ss
push
mov
xchg
and
push
and
pop
andl
pop
jle
sbb
int
jecxz
adc
ds
mov
pop
cmpsl
out
xchg
das
add
ret
cmp
dec
out
xor
pushf
clc
stc
jns
pop
pusha
out
mov
lods
mov
data16
lods
dec
mov
cmpsb
lods
jns
adc
cwtl
mov
mov
popf
lock
dec
mov
sub
ja
dec
inc
lret
int3
ljmp
sub
pop
addr16
push
mov
xchg
or
fprem
ja
movsl
in
sbb
jp
in
and
shr
inc
loope
mov
or
fstp
in
popl
and
data16
sub
cmpsb
iret
ljmp
test
test
repz
inc
sub
clc
popf
sub
mov
xchg
jbe
mov
pop
push
in
and
xchg
mov
sub
js
fcmovu
mov
or
jne
mov
stos
mov
pop
and
ss
pop
or
scas
xchg
cmp
push
xor
pop
cwtl
imul
divl
out
jl
shrb
mov
sub
and
aas
movb
test
xor
push
push
mov
clc
in
adc
mov
inc
hlt
xchg
leave
lods
sub
cmp
or
inc
xchg
dec
or
pop
movsl
push
and
push
push
lahf
mov
cld
shr
iret
cmp
inc
sti
pop
out
loope
scas
pop
clc
testb
inc
xor
mov
fucomp
ret
and
push
jbe
mov
mov
add
pop
stos
jle
lods
cmp
sbb
push
sti
ret
pop
addr16
lock
and
mov
cld
out
and
xorb
out
push
sbb
jns
sub
test
data16
xor
stos
xorl
and
sbb
dec
das
call
jnp
push
jle
shl
shlb
push
sub
aam
pusha
sbb
xchg
sti
fstpl
insl
int
cltd
sahf
pop
pusha
push
or
add
ljmp
call
iret
outsl
mov
or
jg
adc
bound
addr16
or
cmp
addb
ror
jae
imul
xor
sbb
mov
xor
ret
jmp
popf
adc
cli
inc
gs
loop
fimull
push
lods
xchg
and
inc
cmpsb
mov
lds
pop
scas
icebp
gs
pop
xorl
add
adc
lock
jno
js
stos
std
mov
or
js
cmp
jl
loope
add
nop
scas
sub
stos
cmpl
movsb
pushf
dec
mov
xor
mov
mov
jns
jecxz
test
js
imul
mov
mov
sbb
rcrl
mov
shrl
and
orb
imul
call
pop
imul
lods
nop
mov
les
and
insl
mov
or
insb
repz
xchg
cmp
inc
imul
mov
dec
adc
aad
push
imul
jg
mov
add
pop
insb
cs
pop
aam
inc
add
sbb
sub
push
xor
hlt
pushf
xor
iret
testl
add
pop
inc
mov
xchg
clc
in
or
adc
push
int
dec
jg
cld
push
add
adc
or
pop
negl
dec
outsb
test
xchg
mov
pop
jl
int3
popa
xorb
nop
repnz
pop
nop
push
push
and
and
rclb
jle
in
jp
lea
mov
std
ljmp
push
loope
out
ficoms
sub
leave
and
jp
sahf
fdivl
jo
cmc
pop
ret
loope
jp
mov
jne
lcall
mov
ficompl
fisttpl
mov
jle
cmp
mov
add
cmc
inc
and
dec
push
imul
mov
jno
ljmp
loope
inc
clc
fwait
lcall
mov
in
pop
jge
xchg
mov
bound
lcall
pop
cmp
shlb
jnp
pop
lahf
xchg
gs
and
add
pop
jp
and
mov
addr16
or
push
cmp
xchg
jne
sub
imul
sub
mov
mov
lods
enter
sub
dec
xor
and
data16
negl
mov
xchg
xchg
dec
bound
roll
pop
jns
jg
std
cld
jae
call
push
in
aaa
or
adc
inc
insl
sub
shl
and
test
xor
aas
inc
stc
jo
add
popa
xchg
hlt
xor
add
clc
inc
dec
mov
dec
push
arpl
sarb
fs
and
and
mov
jle
pusha
mov
in
mov
jl
mov
movsb
and
aad
ret
addr16
xchg
or
jecxz
jg
dec
test
sub
pusha
jnp
fwait
sub
sti
and
arpl
and
fdivrs
push
lret
add
ret
mov
pop
in
shlb
mov
push
in
stc
mov
test
adc
push
or
cwtl
cmp
out
fldcw
pop
mov
mov
aas
data16
lahf
fisubs
sub
shll
insl
flds
cmc
dec
fisttps
mov
js
cmp
lds
aam
adc
inc
jne
ffreep
mov
or
notb
test
or
xchg
add
scas
cli
aas
not
add
int3
jno
cmc
hlt
aad
inc
repz
xchg
inc
mov
outsb
lcall
lcall
jns
cmpsb
inc
mov
in
inc
js
aas
cli
sbb
scas
fwait
data16
inc
and
pop
or
and
pop
dec
movsb
js
or
push
fstpt
xchg
dec
add
sub
and
shrb
mov
jle
outsl
les
xor
repz
mov
mov
ret
sub
incl
aaa
pop
mov
or
out
mov
cmpb
pop
lret
jge
push
sahf
std
jno
notl
andnps
enter
sti
sbb
mov
and
mov
inc
and
sub
aas
pushf
scas
cmp
cmp
cmp
adc
cltd
inc
lds
and
pop
int
mov
cwtl
push
adc
lds
rolb
cmpsb
lret
and
in
cmp
add
add
lea
pop
shll
push
roll
xlat
add
adc
xchg
cmp
outsl
fisubrl
mov
pusha
sarb
jb
xor
sahf
ds
into
add
inc
cltd
jae
rolb
pop
xor
shr
adc
jno
ret
push
push
xchg
mov
test
jge
pop
sbb
sub
mov
jnp
js
pop
mov
add
and
cld
dec
rcll
mov
test
fs
insb
outsb
pop
push
lcall
out
sbbb
popa
rcrb
mov
test
roll
xor
push
or
iret
in
lods
xor
cltd
adc
ret
jg
inc
jp
inc
mov
cmc
mov
push
sar
or
pushf
test
sub
fwait
loop
cli
stos
std
outsl
in
sahf
jnp
cmp
mov
push
sbb
xor
insb
mov
cmp
imul
loop
mov
add
lods
incl
jmp
cwtl
orb
pop
outsb
hlt
jp
mov
push
cmp
outsl
icebp
loope
cmp
or
lods
das
and
int
cmp
movl
testl
inc
sub
cmp
arpl
inc
xor
shll
aas
jns
push
fisttpl
xlat
popa
xchg
sbb
in
inc
sbb
xchg
int
aaa
stos
inc
ficomps
dec
daa
jecxz
cmp
icebp
xor
jb
pop
push
fwait
cld
rcll
inc
dec
jmp
js
sub
bnd
add
stos
fsubl
out
jne
dec
enter
iret
xor
inc
dec
push
test
sub
out
jg
mov
dec
idivl
add
or
test
push
subl
jno
jmp
mov
dec
push
add
dec
mov
nop
pop
dec
mov
sbb
push
je
xor
pop
mov
push
xchg
pop
lds
pop
in
fldt
cmp
jne
dec
daa
dec
sub
sbb
add
aad
lcall
pushf
sbb
pop
cmpsb
inc
push
sahf
inc
jnp
push
or
add
mov
pusha
sarl
jge
sar
int3
popf
cmc
out
inc
popf
mov
mov
mov
adc
dec
movsl
arpl
push
or
jne
sub
fsubrs
scas
adc
fwait
fs
or
jns
add
fistpl
test
jg
insl
adc
mov
or
push
fnstenv
rol
cli
divl
push
js
arpl
mov
pop
sbb
mov
xor
mov
xor
mov
sub
shrb
sbb
sub
lahf
push
mov
mov
cmp
dec
inc
mov
push
fs
imul
xchg
or
inc
pop
or
push
arpl
negb
lods
add
fimull
insb
cmp
dec
and
xor
push
inc
jne
cwtl
repnz
fneni(8087
xchg
icebp
add
sbb
aad
cmp
xorl
stos
sub
mov
add
fisubrs
sub
jg
mov
xchg
icebp
cmc
or
mov
dec
lret
fwait
insl
inc
mov
jae
cmp
xchg
xor
daa
xchg
subb
mov
and
inc
xlat
data16
lods
into
mov
jae
and
inc
shrb
leave
jnp
mov
jge
mov
int
test
mov
and
cs
arpl
std
mov
pop
xlat
andb
lret
mul
repnz
sbb
xlat
lea
mov
cmp
inc
push
dec
xchg
pop
pop
jne
dec
sbbl
dec
fstpl
xchg
push
outsb
aas
mov
and
jge
lock
or
popf
push
or
js
outsl
fimull
insl
or
mov
jge
mov
cmp
popa
cmp
ds
in
dec
outsb
xchg
mov
jns
loope
pop
loopne
clc
dec
or
adc
push
add
test
dec
and
into
cmp
ja
mov
cmp
jnp
sti
cs
jge
adc
jle
fs
fwait
enter
insl
and
cmp
out
mov
mov
jmp
pop
jmp
fisttpll
xlat
lahf
pop
loop
push
je
out
shlb
addr16
mov
pop
inc
jmp
aaa
xchg
sbb
bound
fisttpl
mov
insb
mov
and
inc
add
or
in
iret
push
jg
push
pushf
xchg
bound
mov
pop
add
adc
rolb
push
scas
jne
add
pop
push
lods
inc
out
pop
mov
test
bnd
pop
adc
insb
in
fs
lods
jae
cmp
mov
dec
cld
jb
jno
add
sbbl
or
add
jne
lds
cmp
adc
and
or
cmp
xor
ja
aas
jl
push
xchg
pop
add
sbb
push
cmp
xor
or
into
pop
into
cmp
add
jae
add
lahf
mov
cmpsl
in
sub
packsswb
lret
fidivrs
repnz
popa
xor
push
in
xor
push
xor
fcmovnb
sub
iret
cmp
shl
fsubrs
jmp
test
lds
pushl
out
cmc
push
and
adc
sub
in
jg
ljmp
out
or
adc
mov
sti
stos
push
inc
or
outsl
addr16
in
mov
js
mov
mov
lret
stc
scas
fcomps
sbb
fistpll
das
cli
mov
add
add
sbb
sbb
jge
cmpsb
jl
mov
inc
mov
cwtl
movsl
push
or
lds
mov
sahf
or
jns
rclb
fsubp
sub
icebp
mov
fistpl
cwtl
fdivs
inc
pop
cmp
mov
pushf
dec
xor
notb
adc
pop
in
add
push
roll
into
lea
stc
xchg
iret
nop
or
adc
push
mov
sub
push
nop
xchg
pop
pop
andb
mov
into
test
mov
jl
adc
sub
jns
sub
dec
lret
adc
xchg
lahf
push
shll
orb
push
pop
dec
mov
mov
or
imul
or
repz
cmp
pop
incb
jo
enter
dec
push
int3
repnz
xor
push
adc
lret
mov
and
sbbl
and
outsb
pop
bound
jl
sbb
mov
pusha
repz
test
aam
pop
mov
cmc
popf
test
inc
inc
add
in
ds
mov
ret
mov
jo
in
sbb
int
icebp
dec
push
sub
mov
pop
je
popf
mov
inc
cs
lret
fdivr
mov
pop
mov
dec
or
xor
lcall
stc
daa
push
shll
mov
mov
sub
mov
aam
sbb
pop
mov
inc
fptan
out
mov
nop
jmp
ja
pop
dec
in
push
aam
mov
inc
ret
das
jno
int3
hlt
pop
or
push
in
cmpl
mov
call
push
pop
test
clc
sbb
shrl
outsl
fadd
sub
test
mov
out
xchg
push
xchg
mov
loope
mov
daa
dec
pop
lods
mov
mov
jge
loop
xor
xor
pop
mov
xchg
xchg
mov
adc
imul
mov
mov
xchg
lods
mov
dec
push
jecxz
cmp
sbb
leave
pop
push
out
cmp
push
add
addb
mov
adc
dec
ret
cs
or
jg
sbb
dec
jnp
lret
mov
jbe
cli
inc
sub
shl
xor
call
and
insl
adc
lods
daa
fistpl
out
test
add
sarb
aam
decl
mov
xor
add
popa
outsb
loope
xchg
mov
in
out
mov
xor
xchg
jns
out
lea
mov
call
dec
mov
xor
push
ds
adc
mov
int
add
mov
cwtl
cltd
xor
test
push
and
jmp
inc
sbb
inc
dec
inc
push
lret
pop
inc
xor
cltd
mov
mov
loopne
repz
loop
das
aad
pop
insl
int
mov
ds
mov
jle
imul
mov
inc
ret
lea
mov
and
pop
loopne
sub
add
je
xor
sub
jae
es
std
shlb
lods
dec
das
rcll
xchg
lods
cmpsl
mov
cmp
fldenv
repnz
push
insl
pop
xor
xor
pop
arpl
aaa
adc
imul
cmpb
and
jns
mov
mov
aaa
loop
xchg
popf
mov
or
xor
sahf
pop
push
sbbb
dec
int3
scas
pusha
test
sbbb
cmp
xchg
add
and
lods
adc
lret
inc
lret
inc
dec
add
jp
mov
call
mov
into
test
ret
adc
adc
sti
mov
mov
mov
out
aam
pop
rorb
push
sahf
adc
cmovp
push
xchg
dec
popf
and
imul
pop
jmp
cmc
subl
movsb
stos
sarl
dec
js
fwait
negl
stos
fs
dec
cmp
sub
es
adc
dec
xchg
neg
jge
pop
addb
lea
add
push
je
xorb
pushf
jp
cld
dec
xchg
movsl
stos
ljmp
fdiv
push
cld
scas
mov
push
ds
xorb
jne
or
add
mov
jmp
out
cmp
lods
mov
repnz
in
xchg
nop
mov
loopne
dec
push
mov
inc
jle
sub
or
cmp
test
mov
aas
xor
push
add
mov
mov
xchg
mov
cli
shlb
lods
lea
stc
add
add
std
and
lahf
pop
and
xor
mov
cmp
sbb
les
testb
loop
push
pop
outsb
mov
das
mov
in
add
js
xlat
sbbb
sar
lahf
stos
fstpl
stos
mov
outsb
mulb
out
push
jns
add
sar
into
mov
movsl
pushf
mov
fnstsw
shlb
je
or
popa
testb
cwtl
mov
sti
pop
mov
mov
iret
sbb
scas
adc
push
shl
mov
cltd
movsb
dec
cs
movsb
ret
lahf
xchg
xchg
jge
pop
test
add
fs
jp
dec
add
dec
push
lds
sbb
jl
mov
insl
les
inc
das
movb
lahf
sbb
loopne
in
imul
jae
jge
jns
mov
add
sahf
xchg
lret
or
daa
sbbb
out
mov
jge
ss
cld
retw
jp
out
lcall
in
mov
fdivr
mov
sub
fstpt
in
lods
jle
outsl
mov
mov
rorl
xchg
pop
push
sub
cmp
outsb
and
mov
sbb
jmp
int
cmpsl
xor
mov
inc
rclb
lret
mov
mov
mov
add
mov
daa
icebp
push
cmpsb
test
jae
icebp
mov
jg
push
aas
loopne
gs
imul
mov
push
pop
mov
int3
mov
stc
xchg
adc
push
scas
jle
imul
aas
pop
lds
out
inc
fsubrp
xor
xor
mov
xlat
and
xor
mov
push
jmp
mov
sub
icebp
cs
mov
xchg
add
fisttpll
inc
jp
rcl
mov
addr16
push
xchg
xor
xorl
in
data16
push
mov
out
inc
xor
out
pop
sbb
test
aam
nop
cmp
lock
pop
push
mov
sub
mov
mov
daa
sti
push
jbe
cmp
add
jnp
jns
xchg
inc
sti
jne
push
roll
pop
orl
jno
sbb
jmp
int3
scas
mov
out
imul
inc
jb
sarb
sub
das
out
mull
cmp
pop
dec
test
ss
cmp
test
clc
ljmp
scas
and
sti
jne
mov
xchg
add
daa
and
xchg
lds
mov
xchg
jmp
hlt
mov
mov
enter
pop
inc
in
cwtl
cld
in
dec
in
add
push
cmpsl
xchg
aad
inc
sbb
fwait
pop
notb
js
or
insb
mov
mov
add
dec
xor
inc
mov
jae
sbb
repz
cmpsb
fcom
sbb
mov
icebp
lahf
sub
dec
jl
cmc
enter
fs
mov
and
test
inc
inc
fcom
jns
mov
mov
gs
jp
pop
pushf
rorb
or
fmuls
cmp
lahf
and
push
xchg
add
mov
xlat
xchg
pop
push
and
test
inc
cmpsb
aas
and
adc
adcl
pushf
cmp
xchg
into
and
push
jbe
sub
aad
push
inc
popf
or
jb
in
xchg
fld
aam
call
test
jbe
add
lea
stc
fs
lahf
clc
insl
adc
scas
mov
xchg
sub
push
mull
adc
pop
push
pop
xor
pop
test
nop
sbb
loop
push
int3
pop
repz
add
or
lea
dec
mov
pop
movsb
iret
xchg
push
daa
and
add
mov
add
pushf
icebp
push
pop
dec
int3
pop
mov
lret
ss
lret
push
xor
mov
sti
std
push
pop
rclb
inc
aas
jns
sbb
int
xor
js
sti
imul
add
xor
pop
in
xchg
mov
fwait
pop
scas
cmc
push
ret
test
adc
fs
push
sub
flds
mov
add
jo
call
mov
add
inc
shld
dec
leave
xlat
stos
aad
adc
xor
or
cmc
cmc
ss
cmp
nop
lods
add
xchg
mov
mov
sbb
clc
cmpsl
or
mov
sub
mov
jmp
fwait
imul
add
sub
xchg
push
and
loopne
sbb
scas
cmp
les
movsl
sbb
test
push
pop
push
lods
test
jae
dec
xor
out
mov
xchg
addb
push
out
push
or
mov
mov
xor
movsl
bound
sbb
cmpl
jnp
and
dec
jecxz
sub
loop
inc
xor
xor
notb
dec
and
or
lds
cltd
mov
cmpsb
dec
sti
and
push
fucom
add
pop
ret
mov
pop
es
sub
ss
bound
jl
fldenv
lods
sub
int
inc
es
pop
loope
mov
xchg
aas
inc
push
push
and
ficomps
pop
xor
es
pop
fimuls
and
pusha
cltd
mov
xor
jp
movsl
cmp
or
sahf
lcall
mov
dec
lret
das
aas
popa
in
or
movsl
cmpsb
les
push
mov
mov
pop
mov
fsubrl
popf
or
sbb
push
sub
adc
sub
add
lock
push
mov
jne
or
movsb
mov
pop
mov
mov
shrl
xchg
cmp
ds
loopne
popf
mov
enter
imul
xchg
pop
add
repz
into
pop
into
sub
sub
jne
mov
mov
xchg
adc
sub
dec
xlat
cmp
pminsw
ss
inc
mov
and
notb
lret
sbbb
mov
mov
push
inc
xchg
cmp
jb
lock
nop
inc
in
lock
shrl
adc
mov
outsb
mov
out
ret
mov
cli
xchg
pop
mov
test
out
iret
shrb
push
fs
int
out
push
adc
mov
sahf
push
imul
cltd
loop
je
cs
lret
jae
jne
setg
mov
leave
sub
jne
cmp
cli
dec
pop
lcall
cmp
movsb
and
mov
push
jb
xor
jecxz
or
cmc
cmc
aas
dec
mov
xor
popa
mov
test
sbb
fimuls
out
mulb
dec
xor
inc
jle
mov
js
sbb
cmp
and
add
clc
push
leave
push
ret
add
or
cli
push
daa
and
iret
and
shrb
cmp
jp
mov
clc
mov
stos
push
movsb
test
jp
jno
jbe
jbe
scas
pop
nop
lret
out
ficomps
mov
cmp
jnp
mov
rorb
test
mov
sbb
les
fcmove
mov
movsl
sti
and
mov
inc
mov
cmp
push
adc
cmpsl
scas
data16
rorl
mov
mov
adc
push
xchg
mov
addr16
lret
or
cmp
jp
xor
sbb
or
jb
and
cltd
filds
fldt
stos
daa
mov
out
mov
push
orb
pop
rcrl
lods
or
cmpl
xor
or
cmp
xchg
pusha
clc
and
nop
dec
or
lret
xor
outsl
dec
incb
shl
stos
mov
in
pop
enter
cltd
dec
lret
popf
std
mov
das
fisubrs
mov
mov
out
popf
cwtl
pop
sub
sub
lcall
add
fs
jnp
add
mov
jg,pt
sub
add
jbe
cmp
inc
pop
fidivl
sub
sahf
xor
sub
aam
xor
mov
pop
mov
and
push
int
sub
mov
flds
repz
dec
mov
hlt
in
mov
test
adc
fwait
notl
pusha
mov
js
pop
movsl
test
or
cmpsl
add
and
gs
xchg
inc
cmp
lahf
jl
lcall
pushl
ja
push
stc
test
in
adcb
ja
sbb
jb
lcall
jp
rcll
jbe
out
mov
mov
int3
in
out
dec
ficompl
movsb
xchg
mov
ffreep
out
jns
push
fbld
in
inc
outsb
das
cs
jecxz
push
movsb
cmp
push
fldt
sbb
cld
insb
in
mov
dec
mov
mov
adc
ds
fistpll
and
scas
lds
shlb
xchg
std
sbb
sbb
stos
or
sub
das
jno
std
adc
loope
mov
mov
das
test
inc
insl
pop
filds
mov
mov
ret
or
sub
repz
cmp
jp
jmp
aad
daa
out
push
gs
lods
xchg
lds
mov
pop
jecxz
xchg
push
js
jg
and
dec
mov
xor
test
jns
mov
mov
jp,pt
pop
pop
sbb
ret
jge
fiadds
shrl
mov
sbb
push
and
dec
adc
xor
loopne
pop
outsb
negb
fdivs
xchg
cs
inc
in
lret
test
and
insb
and
and
jne
shlb
inc
out
out
jg
xchg
pop
shrl
pop
lock
jecxz
mov
lds
and
push
aad
xchg
inc
xchg
mov
adc
pop
daa
mov
ret
sbb
repnz
ja
mov
data16
push
push
sarl
sbb
iret
inc
pushf
dec
sbb
sbb
lcall
loope
mov
out
adc
fwait
cmpsb
popa
jo
sub
cmp
mov
mov
lret
mov
out
mov
cmp
sbb
pop
or
mov
in
add
jns
mov
xchg
cmp
mov
loopne
das
test
xchg
pop
push
jbe
addr16
pop
popf
outsl
ds
pop
mov
dec
cmp
mov
jo
sahf
sub
xor
insb
cmpsl
inc
and
sbb
pop
sbb
aad
adc
add
jno
xchg
push
jno
stc
or
es
cmpsl
mov
jae
jp
rorl
mov
adc
cmpsb
test
fwait
lahf
aaa
daa
or
lret
test
fisubs
cmpsb
cmp
lahf
and
xchg
jp
insl
mov
jne
jne
repnz
js
cs
imull
add
iret
subb
mov
push
in
inc
in
je,pn
sarb
imul
cmp
inc
lods
xor
jno
shr
mov
jno
or
std
push
movsl
mov
pop
int3
pushf
jae
xor
test
inc
xor
sub
call
or
push
fildll
pop
mov
filds
sub
add
outsb
inc
jmp
rorb
xchg
popf
dec
mov
dec
xchg
or
sbb
in
push
adc
cmp
ja
lret
cmc
mov
outsb
cmp
test
insb
pop
div
sahf
adc
jge
push
lock
divb
sti
cmp
mov
test
push
cmc
stc
cmpsb
push
cmp
adc
lret
xchg
mov
mov
jg
cld
pusha
mov
sbb
das
test
stos
xchg
adc
loop
mov
insb
dec
ljmp
adc
sbb
xor
lcall
pop
aas
leave
ret
jmp
add
xchg
inc
mov
daa
loop
mov
addr16
push
ss
inc
mov
cmpsl
insb
jno
out
insl
pop
sbb
loopne
je
scas
lahf
sbb
adc
push
and
scas
mov
xor
dec
inc
dec
sbb
mov
dec
es
xchg
add
sub
pop
sbb
rcr
sbb
sub
psubq
popa
fadd
or
push
jmp
mov
pop
out
sbb
dec
mov
daa
roll
mov
mov
loop
lcall
jno
ljmp
jmp
inc
aam
loop
call
lret
mov
lea
mov
mov
mov
inc
stc
cmp
scas
adc
xor
mov
repz
inc
cmp
and
pop
cmp
jecxz
jnp
cld
lock
and
push
adc
xchg
pop
call
dec
pop
in
adc
dec
inc
fsubrl
push
mov
enter
test
inc
jae
popf
aam
dec
sti
pusha
jns
scas
dec
sub
mov
lcall
inc
add
xlat
ljmp
mov
adc
cwtl
sub
shlb
sbbb
mov
jg
xor
fwait
loope
xchg
pop
jg
incl
leave
fistps
mov
mov
inc
sbb
nop
cmp
and
push
jl
ror
xchg
cmp
jo
insw
mov
jae
jg
sbb
fsub
stc
mov
rcll
call
ficoml
or
test
or
xor
fwait
sbb
sbb
jl
nop
and
or
jne
sbb
cmp
mov
insl
push
adc
mov
lret
push
mov
decb
dec
adc
fldenv
in
aaa
pop
pusha
aaa
pop
mov
mov
out
jnp
shll
pop
test
push
or
mov
jle
xor
mov
dec
jmp
cltd
adc
lock
pop
movsb
pusha
mov
shll
sarl
and
or
pop
sti
jecxz
mov
and
jg
scas
out
js
adc
pushfw
adc
xorl
push
jmp
mov
ds
mov
int
cld
stos
push
rol
fmuls
pop
inc
data16
mov
rolb
mov
adc
ss
inc
lock
mov
leave
mov
xchg
sbb
outsb
cmp
adc
mov
aad
mov
fldt
xor
push
xchg
push
enter
jbe
es
rcll
cmp
aam
lss
cmp
mov
xchg
or
outsl
xchg
movsb
movlps
xor
add
mov
in
ret
xchg
sti
mov
inc
lock
mov
adc
adc
xchg
and
lea
notl
or
jl
hlt
test
mov
pop
shll
mov
iret
sbb
std
lahf
sub
mov
imul
sbb
ljmp
nop
movsl
mov
outsb
cmp
cwtl
shlb
xchg
out
mov
dec
bswap
mov
scas
pop
add
bound
mov
ret
loop
jge
and
lods
xor
xor
rol
or
mov
arpl
insb
push
fs
and
mov
xor
jmp
nop
cmpsb
dec
mov
frstor
iret
iret
in
std
xchg
lahf
ret
pop
pop
ja
ds
jecxz
enter
add
lods
into
and
loopne
aad
fdiv
test
movsl
repz
leave
and
hlt
ljmp
jbe
sbb
shrb
cltd
hlt
lea
mov
mov
or
or
mov
faddl
pushf
sub
ja
or
pusha
loopne
mov
and
or
pop
test
lods
into
sbb
loop
jmp
orb
xor
xchg
add
es
push
fisttps
addb
sarl
jl
xor
cs
int3
in
cmp
sbb
pop
inc
pushl
ret
daa
and
or
add
xor
sti
pop
xor
idivl
xchg
rcl
imul
inc
lods
and
or
jg
xchg
push
sahf
lock
out
dec
nop
mov
pusha
into
loope
jb
push
insl
and
lock
push
mov
fs
repz
ret
xorb
cmpsb
cmpsb
ret
jp
fistl
push
insl
loopne
stos
mov
insb
in
mov
sub
adcl
push
loope
mov
add
rcl
and
fst
lods
lods
pop
scas
cmp
fsub
jl
push
loope
outsb
loopne
sub
mov
dec
push
stos
insl
hlt
mov
inc
popf
bswap
loope
adc
push
fidivs
cmp
jmp
in
cmpsb
xor
adcb
lds
lock
push
gs
and
fnstsw
add
mov
push
push
es
cli
adc
repz
rorl
push
add
movsb
call
insb
cmp
loope
inc
fdiv
jnp
jp
dec
orl
adc
sub
stos
lock
ret
sahf
das
sub
ljmp
andl
xchg
add
int3
sbb
mov
mov
cmpl
or
dec
out
cld
int
sarl
pop
imul
jnp
mov
mov
daa
test
int3
jg
add
inc
scas
rorl
and
pop
scas
adc
into
outsl
mov
fstl
xchg
add
xchg
dec
jns
bound
mov
xor
int3
rclb
cmc
pop
daa
arpl
mov
lret
and
arpl
fmull
out
xchg
or
xlat
enter
data16
sub
adc
inc
fmul
sbb
push
arpl
cmp
xchg
cmc
sub
pop
int3
add
imul
loop
mov
bound
push
loop
or
dec
sbb
xsaveopt
push
std
jno
xchg
push
js
cmpsl
jmp
xor
push
xor
inc
ret
mov
adc
and
nop
jo
and
lcall
outsl
out
pop
scas
out
testb
sub
add
jae
jnp
lea
adc
dec
call
lods
lcall
je
push
and
iret
popa
decl
push
mov
pop
mulb
push
push
cwtl
in
ss
or
cld
subb
and
in
mov
jbe
cmp
test
cli
mov
pop
mov
sbb
mov
nop
or
ficoml
cmpsl
icebp
ljmp
adc
shl
pop
sahf
into
mov
mov
sar
rorb
jp
inc
cmp
mov
jmp
test
xchg
xor
popf
insb
es
sbb
inc
sub
fld
dec
push
cld
call
enter
nop
jo
cld
push
adc
mov
or
popa
inc
js
aad
mov
dec
adc
stos
xor
inc
sbb
aas
jle
enter
imul
push
adc
lahf
les
jbe
mov
jns
mov
imul
add
xchg
mov
mov
push
fistpll
mov
iret
addb
shrb
xor
pop
mov
sub
xor
enter
es
xchg
dec
out
divl
cmp
stos
idiv
testb
popf
jl
jmp
add
lret
inc
sbb
testl
mov
nop
cmc
sub
push
mov
mov
leave
mov
mov
dec
fwait
imul
sarl
jge
jo
jle
mov
mull
dec
mov
out
cmpsl
in
hlt
out
add
cmp
sbb
dec
inc
add
sbb
jb
mov
lcall
xchg
insl
cmpb
out
mov
insl
loop
sbb
mov
sti
mov
pop
jp
inc
jg
sbb
roll
mov
fnsave
sub
inc
inc
sub
in
push
repnz
or
push
sub
add
pop
xor
shll
sub
xor
sub
loope
jg
jg
mov
jnp
or
sub
data16
int
sbb
xchg
movsl
fdivs
sbb
in
movsb
js
mov
or
mov
dec
les
jo
sahf
fisubs
test
ljmp
shll
das
shrb
popa
push
dec
shr
and
jns
cmp
out
add
lahf
outsb
add
and
cltd
xor
inc
xor
xchg
outsb
inc
outsl
xchg
je
adc
mov
popa
pop
push
jp
scas
dec
call
loope
out
jge
mov
sbb
sbb
in
add
cbtw
inc
mov
mov
subb
jmp
adc
sbb
mov
pop
pop
xchg
into
dec
in
les
push
xor
mov
xor
mov
adc
mov
and
icebp
data16
jnp
mov
mov
lret
dec
repz
jmp
pop
xchg
pop
dec
xor
mov
mov
dec
repnz
mov
xchg
jl
mov
mov
mov
xchg
push
xor
xchg
sub
adc
imul
jo
sahf
cltd
mov
pushf
movsl
sbb
test
das
jg
xlat
outsl
xor
cmp
lea
shrl
adc
push
outsl
sub
cwtl
out
aas
push
hlt
cmc
mov
popa
gs
lods
loopne
cli
mov
sub
xor
sub
and
xlat
xor
cwtl
adc
scas
in
cmp
add
test
sbb
mov
iret
mov
ljmp
push
inc
bound
lahf
pop
pop
ret
sub
mov
les
push
ret
xchg
aad
cmp
and
inc
ret
push
shr
sbb
test
int3
repnz
shrb
push
dec
adc
sbb
arpl
xor
and
mov
sub
push
adc
stc
out
in
or
fcmove
lret
daa
cmp
sahf
adc
mov
pop
push
movsl
inc
decl
cmp
push
cmp
lods
inc
xchg
or
fiadds
stc
dec
cltd
jne
fldt
cmp
add
or
push
lods
and
push
xor
movsb
jge
mov
xchg
sub
cmp
ljmp
sub
push
pop
test
mov
sbb
repnz
add
add
lcall
cld
or
fpatan
jp
push
lds
test
leave
test
imul
lahf
das
dec
cli
daa
nop
xchg
mov
out
xor
xchg
add
sub
sbb
inc
jbe
fcoml
sbb
add
stos
xor
mov
scas
xchg
push
shlb
push
xchg
adc
adcb
mulb
test
inc
mov
inc
loope
push
xor
xchg
push
mov
imul
cmc
xor
insl
mov
push
and
push
iret
fnstsw
stos
fwait
or
dec
addr16
mov
inc
sbb
test
push
scas
xlat
mov
sub
mov
stc
pop
mov
inc
sbb
into
or
inc
mov
add
pop
pop
mov
imul
decb
jl
negb
fisubs
cltd
in
jle
sbb
flds
dec
lock
sbb
lods
ret
stc
cltd
xchg
dec
shrl
jne
jne
cwtl
leave
pop
insb
mov
jg
xor
push
jge
jp
push
xchg
mov
fwait
mov
inc
or
aas
cmp
or
lock
pop
pop
mov
push
sub
bnd
xor
mov
jbe
push
adc
adc
push
test
enter
outsb
stc
mov
push
xorl
add
jns
int
movsb
imul
inc
mov
inc
stos
stos
jmp
adc
mov
jns
pop
fwait
pop
aam
add
cltd
sbb
pop
pop
mov
popa
or
xchg
xchg
xchg
daa
jge
test
lods
out
inc
out
dec
mov
and
mov
or
stos
sbb
out
cmc
sar
js,pn
loopne
lahf
cmpsl
add
pop
sbbl
xor
add
add
cmpsb
cs
rolb
movsl
and
fcoms
stc
mov
add
push
mov
sub
insb
in
stos
xor
jmp
jl
lahf
inc
sbb
dec
mov
data16
jo
mov
inc
mov
out
fwait
xchg
aam
sub
cltd
xchg
cmc
outsl
ret
mov
das
sub
notb
mov
insl
cwtl
mov
push
cmc
pop
push
jl
in
add
mov
inc
adc
or
enter
cmpsb
pop
movsb
ds
add
and
mov
fildl
test
xchg
mov
scas
addr16
xchg
scas
cwtl
lods
pop
in
frstor
rolb
in
stc
jnp
ret
fcomip
cmp
es
bound
dec
sbb
int3
outsb
int
pop
inc
pop
adc
ret
outsb
rolb
mov
xchg
or
xor
jno
adc
out
pop
push
inc
push
add
sub
xor
adc
lods
outsb
test
push
mov
lods
imul
les
mov
inc
adc
sahf
xor
ja
mov
into
test
cmc
leave
sub
mulb
and
jbe
mov
mov
and
out
dec
inc
jbe
xor
add
clc
inc
dec
mov
jp
nop
sub
dec
aad
ficomps
xor
cmpsl
add
scas
jmp
jmp
in
or
and
je
mov
push
xchg
mov
inc
inc
xchg
addl
ficomps
or
jmp
ja
pop
inc
jp
mov
test
aaa
and
inc
jecxz
add
ss
shrb
scas
mov
fisubs
ja
ljmp
scas
pushf
scas
mov
cmpb
es
push
jle
sbb
mov
addr16
and
push
sbb
js
pop
cmp
and
ja
ljmp
ret
push
je
xchg
insl
jb
xlat
push
cmp
push
mov
add
jnp
lock
add
in
repz
add
cmc
pop
pop
imul
cmpsb
scas
push
in
cmp
fnsave
or
lret
repz
mov
jp
or
jmp
adc
pop
jbe
push
icebp
cwtl
cmc
lock
test
or
ja
jge
fdivs
mov
sbb
dec
mov
orl
out
mov
das
lods
mov
lret
push
cltd
mov
pop
mov
cmp
pop
in
jmp
dec
movsl
cmp
outsb
inc
dec
xor
sub
addr16
dec
sbb
into
adc
cld
xor
sbb
inc
jo
and
cmp
jmp
mov
inc
out
pop
add
sbb
push
jl
push
add
lret
test
lret
fsts
adc
dec
lret
or
sahf
xchg
cmp
inc
pop
out
sub
pop
es
pop
cmp
or
hlt
add
jnp
lcall
scas
or
rcl
lods
inc
pusha
call
pusha
mul
or
negl
insl
or
push
mov
push
mov
mov
cltd
or
stos
std
fimull
test
jmp
test
fimull
mov
add
and
dec
outsl
pop
push
out
cmp
jmp
mov
xchg
fwait
lods
stc
adc
and
xchg
mov
jns
std
in
cmpsl
repz
sub
pop
sbb
cwtl
js
aas
iret
push
daa
jmp
pop
cmp
push
cltd
mov
xchg
xlat
xor
adc
arpl
cmp
lock
xor
iret
dec
jb
mov
shrl
je
sub
arpl
mov
push
xchg
jbe
mov
and
movl
movsb
into
leave
mov
movsb
mov
jp
push
push
ret
push
push
mov
mulb
rorb
pushf
stos
das
mov
mov
cmp
aas
jae
mov
cbtw
or
addr16
xchg
dec
sbb
or
fldenv
xchg
or
das
cmp
xchg
and
mov
mov
stos
loop
sub
cmp
inc
xor
fwait
aam
arpl
push
sbb
rcr
lahf
dec
inc
test
sbb
sub
jl
push
fiadds
add
mov
xchg
cltd
and
popa
xor
ret
mov
enter
mov
bound
and
inc
add
movsl
jns
mov
repz
mov
xor
out
pop
mov
into
les
jb
lcall
sbb
mov
push
inc
jo
and
mov
in
add
out
mov
fs
xchg
aam
jge
std
repnz
stos
out
stos
cmp
ja
fstps
aad
push
popa
push
cmp
pop
inc
mov
cmp
sbb
clc
push
call
jns
sub
mov
lret
mov
xchg
int3
mov
mov
mov
mov
dec
lcall
pop
arpl
push
aad
inc
mov
lcall
add
cmp
ret
and
test
call
mov
xlat
mov
cmc
cmp
mov
adc
jns
push
popf
movsl
push
xor
pop
call
pop
nop
sub
lods
in
jnp
outsl
xor
addr16
popf
mov
mov
xchg
lahf
push
in
and
pop
fnstsw
xchg
repnz
std
jo
push
xchg
aas
push
pop
lcall
jns
pop
jg
push
xchg
iret
mov
cld
xchg
movsl
sar
mov
rorl
test
adc
mov
std
xor
sbb
fmul
popf
insb
mov
xchg
stos
fnsave
pushf
mov
lock
add
pusha
sub
loope
insb
ret
cmp
clc
xbegin
push
jb
push
daa
daa
pop
inc
lcall
adc
inc
mov
loope
pop
push
outsb
nop
pop
inc
adc
in
or
out
mov
das
xchg
adc
loopne
sub
mov
inc
mov
les
cmp
mov
mov
icebp
sub
mov
rcrl
lea
sub
cmpsl
or
hlt
fistl
push
pop
mov
ret
stos
mov
imul
hlt
mov
daa
mov
in
sbb
jb
out
cmpsl
mov
int3
repz
into
scas
dec
jge
xchg
notb
lcall
pushf
pop
scas
pop
or
lahf
hlt
outsl
test
lcall
xchg
push
addl
jg
and
out
mov
pop
orb
mov
xor
inc
out
rorb
rorb
iret
lcall
dec
and
mov
das
out
jae
movsb
test
mov
inc
push
lods
cmc
pop
mov
push
in
ret
pusha
xorl
inc
adc
xor
mov
enter
jne
lock
push
mov
lahf
and
dec
cltd
aaa
xor
sub
mov
mov
shll
leave
jge
test
add
dec
loopne
enter
scas
jecxz
dec
xchg
mov
inc
adc
cmp
andb
add
add
pop
addr16
mov
ss
push
pop
subb
repnz
out
mov
and
lods
mov
jnp
push
add
pop
ss
xchg
or
push
jae
adc
andl
xchg
or
shlb
mov
rcrl
dec
add
adc
rcrb
pop
or
dec
mov
and
aam
mov
roll
mov
inc
pop
mov
cmp
inc
icebp
mov
mov
xchg
sbb
and
cwtl
and
push
and
cmpsb
loope
sbb
ds
out
mov
clc
or
sub
js
sbb
mulb
mov
outsb
test
xchg
int
cwtl
mov
and
jnp
cmpsb
out
mov
aaa
sub
push
mov
xchg
rcl
pusha
cmp
mov
incb
stos
sub
aam
jno
pop
sub
adcb
adc
jae,pn
in
lock
fsubr
es
xor
push
imul
push
sub
inc
add
jbe
aas
xor
cmp
cld
add
sbb
lock
fidivrs
or
sub
out
ds
xor
jmp
popa
ja
test
jle
add
dec
or
mov
mulb
xchg
and
xor
pop
leave
ficomps
push
push
and
dec
cmpsb
push
sbb
nop
aad
push
andb
insb
inc
mov
scas
in
es
pop
imulb
and
jl
inc
jo
test
leave
xorb
sar
add
shlb
ja
adc
cwtl
mov
add
call
fdivs
and
push
add
sub
mov
and
sub
pop
push
or
je
repz
shrb
insb
mov
rorb
dec
ss
fxch
mov
and
sti
mov
xchg
icebp
jb
mov
add
sti
ljmp
pop
repnz
pushf
pop
dec
ficomps
test
add
testl
adc
jge
sti
xchg
fistps
gs
sbb
and
or
pop
xor
push
push
xor
in
sub
cmp
lret
stos
lret
and
sbb
mov
aas
addb
fst
mov
push
add
test
imul
out
jge
lds
jo
lcall
xor
pop
push
jmp
loopne
add
or
mov
incb
je
into
xchg
aam
dec
jbe
subl
fisttpl
rolb
out
shrl
lock
addb
and
mov
cs
mov
inc
into
xor
je
sbb
hlt
js
lcall
pmaxub
clc
mov
adc
in
nop
jl
dec
mov
daa
add
in
xchg
cs
in
mov
out
or
mov
ret
ja
js
dec
sbb
in
fs
scas
push
iret
xor
addr16
add
mov
mov
jle
and
sub
and
mov
jmp
push
fidivrl
adc
dec
adc
mov
pop
aam
leave
gs
mov
xchg
mov
fsub
repnz
sbb
sbb
rolb
inc
push
push
or
lods
repnz
addr16
cmp
or
push
adc
mov
fcompl
xor
insl
mov
dec
lds
mov
jo
mov
lahf
fisubs
in
mov
add
mov
mov
adc
and
add
pop
test
dec
sti
pop
jmp
lea
mov
int
inc
mov
ret
sub
aam
out
aaa
mov
xor
inc
xchg
lcall
dec
pusha
lea
inc
imul
or
ret
out
push
xchg
pop
aam
lock
test
out
into
iret
xchg
ljmp
jns
nop
cwtl
bound
test
loope
push
pop
add
negb
xchg
push
or
in
cmpsl
dec
jmp
outsb
insb
push
dec
pusha
stos
clc
shrb
inc
inc
inc
or
sub
xchg
mov
sub
jb
stos
jae
shrb
sbb
and
pop
dec
adc
push
add
and
pop
dec
sub
mov
jmp
arpl
pop
data16
dec
popa
mov
adc
cmc
std
pop
stos
stos
std
xchg
call
dec
loopne
bound
stc
subl
repnz
cs
push
test
mov
mov
adc
dec
mov
jle
and
test
faddl
xchg
mov
adc
notb
arpl
cmpsl
mov
int3
sbb
push
subl
icebp
and
sbb
add
xor
ret
mov
adc
jle
rep
lods
je
push
dec
test
mov
add
mov
cmp
pop
or
cli
push
popf
cwtl
pop
imul
jp
dec
iret
test
out
ret
or
dec
es
push
scas
cltd
pop
insb
mov
sub
sbb
pop
dec
mov
sbb
negb
movsl
jbe
into
nop
ret
pop
cmc
mov
pop
mov
lea
jmp
mov
test
mov
add
sub
inc
ret
repnz
in
insl
add
jmp
and
fldl
push
out
xor
xchg
add
adc
fs
mov
in
adcb
mov
pop
xchg
es
sahf
jmp
insb
mov
pop
rcrb
cmc
sub
adc
nop
cmc
sub
sahf
in
push
jnp
xchg
outsl
pop
lods
outsb
push
mov
aad
lods
jge
and
lods
pop
ud1
mov
pusha
popf
hlt
xchg
add
mov
xor
push
sbb
or
repnz
js
popa
and
fwait
adc
lea
and
dec
lods
ret
test
test
mov
das
xchg
jnp
add
push
dec
sub
js
orb
mov
sub
lret
stc
out
mov
mov
daa
test
int
mov
imul
push
leave
test
pop
mov
sub
stos
rcll
loop
xorl
cmp
sti
or
fisttpl
pop
out
mov
popa
cwtl
sbb
xchg
jae
sub
mov
mov
popa
lds
xchg
pop
mov
push
push
cmp
cmp
insb
jne
inc
sbb
add
lcall
jg
pop
movsb
mov
jg
lods
cmp
fldt
mov
aaa
or
add
test
lcall
jp
jmp
inc
cltd
gs
sub
or
inc
sbb
daa
pushf
pop
push
adc
and
cld
and
lds
mov
icebp
pop
push
dec
leave
mov
nop
sti
dec
pop
and
sahf
mov
pushf
pop
icebp
mov
fcmovnbe
or
cmpb
pusha
mov
lret
dec
imul
push
jge
cmc
add
lock
cmpsl
aam
push
inc
adc
or
xor
and
mov
out
lret
add
mov
and
push
cmp
push
mov
xchg
cmp
dec
js
xchg
shl
out
test
xor
cld
inc
push
dec
clc
xchg
add
in
inc
sti
lods
jg
scas
xor
and
fadds
call
ja
xor
in
sbb
and
cmp
repnz
rorl
das
pop
cmpsb
cmp
mov
stos
pop
dec
subb
jg
push
iret
cmp
xor
mov
test
mov
sbb
sbb
xor
or
sbb
push
inc
lods
aaa
dec
mov
mov
push
jne
mov
leave
add
add
jle
dec
ss
inc
add
sbb
shlb
pop
int3
and
pushf
call
xchg
ljmp
sbb
sub
sbb
push
cli
insl
stc
imul
push
sub
xor
add
cmp
xor
pop
popf
dec
loope
mov
push
mov
cmc
andl
sub
nop
ret
clc
jbe
pushf
pop
inc
cmp
adc
pop
push
add
adc
clc
mov
subb
adc
es
stc
fidivrs
push
xrelease
xchg
inc
pop
aam
add
es
xchg
mov
xchg
xchg
mov
stos
fsubs
outsb
test
scas
pop
or
lds
imul
jmp
add
mov
jge
pop
cmp
sub
dec
push
int
pop
jge
mov
shll
pop
pop
sarb
stc
mov
cld
jb
pop
xchg
jb
dec
push
xor
push
sti
dec
fiaddl
pop
call
and
xchg
inc
sub
pop
mov
imul
pop
cmpsl
or
ds
loop
sarb
scas
mov
fsubs
add
inc
shlb
fdivl
lret
jae
adc
outsl
sub
cmp
push
rolb
not
cmp
xchg
pushf
fnstsw
push
ret
add
popa
fwait
and
ja
aas
jo
jns
mov
les
sbb
mov
jg
cmp
dec
push
pop
gs
jno
jl
xchg
and
push
push
jns
or
fs
ror
lods
push
sub
jb
das
jno
push
rcl
pop
cld
js
iret
mov
adc
dec
cmp
cmpsl
jb
call
in
or
inc
test
or
pop
int
mov
lret
push
gs
add
xchg
sub
je
sbb
and
aaa
hlt
jne
sub
xchg
xor
fwait
in
stos
icebp
xchg
mov
or
scas
xchg
sbb
pushf
repnz
repnz
mov
sub
movsl
xlat
dec
data16
lret
cmpb
out
sub
cli
add
mov
mov
rcl
testl
lods
repnz
dec
dec
cmc
cwtl
ret
jg
adc
jl
xlat
mov
pop
sbb
jecxz
jne
js
aam
fstl
or
in
jle
cmc
fidivl
xor
out
loopne
push
loopne
dec
cmp
xchg
xor
sub
inc
sub
or
test
call
in
insb
je
insl
cmc
shll
pop
dec
fucomip
mov
movsl
pop
cmp
popf
inc
scas
dec
pop
inc
cmp
test
mov
in
call
jb
mov
pop
cmp
popa
sub
and
test
add
push
push
out
mov
test
xor
inc
inc
mov
cmp
mov
jmp
into
inc
push
es
out
scas
or
data16
xor
jecxz
into
pop
pop
push
mov
mov
leave
adc
cs
popf
or
dec
fldl
bnd
push
mov
or
movsl
mov
pop
outsb
pop
mov
das
loopne
or
popa
mov
sub
or
shl
out
cmp
out
xor
and
dec
mov
cmp
out
cmp
cmp
loope
fdivrs
inc
adc
sub
xchg
dec
jno
ret
gs
lock
mov
jno
ret
bound
int
dec
ret
cmpsb
mov
jno
dec
xchg
lea
fidivrl
dec
sub
mov
fwait
in
aam
add
or
pop
or
ljmp
lds
cmp
pop
scas
cmp
loop
jo
xor
popf
fisttps
aas
xchg
or
and
mov
fs
sti
mov
push
pop
pop
movsb
xchg
push
dec
or
mov
subl
lods
jg
push
sbb
loopne
lods
mov
sarb
mov
in
adc
lock
jns
xorb
fs
jecxz
sub
loope
jb
cmc
pop
ljmp
dec
lret
sbb
push
jb
dec
and
mov
add
xchg
mov
inc
lahf
ljmp
call
lock
jns
xor
inc
sub
int3
push
xlat
mov
mov
repnz
xor
pop
or
cmp
inc
or
nop
ds
mov
rclb
fisttps
xor
repz
cmpsl
cmp
scas
shl
aam
insb
and
lea
xchg
out
xor
jecxz
inc
mov
pop
ja
sbb
cltd
shrb
out
inc
pop
xlat
loop
arpl
inc
jmp
mov
stos
mov
inc
xlat
and
fwait
loop
xor
sbb
jb
andb
dec
popa
xchg
loope
std
jge
imul
mov
insb
aam
popf
pop
push
shrb
fnstcw
push
add
mov
push
sbb
gs
out
xor
test
stc
jae
push
push
xchg
or
rcl
ucomiss
sub
xor
jns
stos
ljmp
cli
out
jb
test
clc
pop
or
ret
mov
sbb
dec
xor
cmc
add
shl
inc
push
pop
xchg
dec
js
incl
sbb
mov
push
adc
push
push
jle
sbb
lds
or
inc
stos
jbe
xchg
nop
sbb
fscale
mov
cmpsb
add
jle
mov
fcomps
add
jnp
shr
dec
lahf
dec
gs
jecxz
dec
and
mov
pushf
push
mov
sbb
push
jnp
in
out
sub
push
xchg
inc
loope
inc
pushf
mov
mov
adc
jl
outsl
or
out
fcmovnu
daa
cltd
rclb
xchg
mov
xor
sarl
sub
imul
outsl
imul
or
jns
lods
cld
mov
gs
jns
sub
xor
xchg
mov
mov
scas
rcr
movsl
dec
cmpsb
adc
leave
jns
mov
aas
into
jecxz
test
pop
sarl
bswap
or
lret
and
lahf
lea
adc
jle
jg
jg
mov
or
xchg
xchg
movsl
sbb
inc
shll
adc
dec
dec
test
sub
sahf
dec
lret
push
lock
nop
mov
jge
je
sub
out
mov
ret
xor
push
add
mov
xchg
dec
decl
mov
add
xchg
test
sbb
mov
outsb
push
sti
imull
repz
loopne
cmp
sub
push
enter
cmpl
cmp
ljmp
mov
adc
inc
out
add
dec
ja
and
popa
pop
cmp
pop
movsl
cmpsl
aam
inc
xchg
sub
pushf
lea
sbb
sbb
test
or
lea
push
ret
cmp
sub
mov
les
sub
repnz
or
sub
pop
mov
pop
nop
les
lods
mov
push
stos
repz
xchg
add
mov
std
xchg
push
push
push
gs
in
mov
bnd
mov
pop
jnp
fs
jo
int3
mov
fidivl
inc
adc
imul
xchg
adc
cwtl
mov
mov
push
mov
movsl
mov
lock
sub
shl
sub
or
fcom
loope
jmp
sub
mov
movsb
std
cmpsb
hlt
jnp
imul
jnp
sti
dec
xchg
pop
movsb
movsb
inc
imul
out
cmp
inc
sbb
scas
jg
pop
mov
inc
mov
xchg
stc
loope
rcrl
xor
xchg
repnz
dec
repnz
mov
enter
pop
adc
dec
shll
movsb
int
lock
rolb
adc
call
or
cmp
and
outsl
andb
mov
jl
mov
daa
imul
pop
je
push
es
or
mov
mov
into
sbb
mov
addr16
push
jle
mov
add
sar
xor
cmpsb
in
mov
jl
xchg
inc
lods
arpl
mov
lock
and
fimull
cltd
jle
scas
ljmp
incl
dec
jns
sbb
orb
out
push
and
pop
pop
sbb
adc
pop
out
mov
loopne
lcall
test
loop
and
pcmpgtd
loope
dec
fisttpl
clc
loope
mov
mov
shll
sbb
call
cmovne
clc
push
insb
mov
xor
xlat
pushl
lea
inc
in
imul
lret
and
push
in
cmp
aam
mov
push
or
mov
add
mov
ret
sbb
ret
xor
push
mov
and
andb
aam
sbb
fisubl
roll
cwtl
andl
adc
xchg
push
nop
mov
sbb
add
sub
rcrb
dec
sbb
pop
jge
pushf
fwait
pop
flds
or
push
sbb
scas
xor
cs
add
rcrb
push
jg
test
test
inc
fldenv
mov
lds
repz
test
mov
jns
push
mov
adc
inc
popf
imul
sub
sbb
pop
jecxz
cmp
inc
xchg
test
mov
adc
and
sbb
xchg
sbb
mov
dec
ds
les
jle
popa
mov
aas
rcrb
or
mov
je
test
xor
sub
inc
push
dec
mov
insb
out
imul
adc
icebp
cmp
xchg
push
test
ja
cli
scas
jg
loopne
in
mov
aaa
adc
ret
xor
lods
shlb
push
sbb
mov
mov
loope
push
sbb
lock
and
sub
or
dec
sbb
scas
pop
sbb
pop
ja
add
dec
mov
outsl
sub
pusha
xlat
test
and
insl
out
cmpsl
sbb
sti
loopne
pushf
and
into
xor
sub
notl
out
push
dec
jnp
cwtl
inc
std
dec
and
mov
dec
bound
dec
into
push
xor
negl
inc
dec
mov
in
dec
fisttpl
xchg
sub
pop
ret
xchg
xor
imul
cmp
vphsubbw
es
push
adc
fldz
mov
lock
dec
cmp
xor
cmp
lods
sbb
inc
loope
sub
inc
fcoms
jmp
mov
clc
lahf
imul
outsl
cmp
ret
jecxz
pop
dec
testl
jb
inc
sbb
push
mov
mov
xor
and
pop
popf
daa
lcall
hlt
mov
les
lock
lock
sub
ret
movsl
shlb
loop
sbb
lcall
addr16
sbb
cs
pop
dec
popf
add
inc
das
jl
push
and
sti
adc
push
loop
int3
jecxz
cs
push
dec
adc
pop
xor
sbb
stc
aad
call
outsb
paddsb
cld
pop
sbb
sub
shrl
mov
lret
nop
mov
adc
fisttpll
inc
dec
lret
test
jmp
fs
in
fs
mov
divb
iret
mov
lret
imulb
pop
test
cmpsb
insl
or
arpl
movsb
ret
pop
in
data16
cld
lcall
out
jb
call
xchg
out
mov
roll
sbbb
mov
popf
lahf
xrelease
arpl
stos
daa
fcoms
out
and
push
lock
sti
ds
stos
xchg
addr16
int3
sbb
xor
popa
lods
push
cmp
andb
ror
mov
sbb
xlat
fcmovnbe
sbb
sub
cmp
fs
lcall
cltd
add
insb
pop
or
mov
and
cmp
loop
repnz
cwtl
in
xor
adc
aad
or
into
test
jmp
scas
wrmsr
mov
sti
jno
push
repnz
cmpsl
movsl
frstor
dec
test
gs
mov
stc
out
repnz
mov
mov
sbb
enter
lret
xchg
fnsetpm(287
jg
add
ja
enter
inc
es
push
xor
cld
adc
andb
xchg
sarb
stos
jmp
mov
bound
jmp
inc
fistpll
mov
jns
jbe
lds
mov
xchg
push
movsl
js
aas
mov
dec
inc
lods
pop
cwtl
popa
loope
arpl
inc
cltd
popf
div
pop
int3
dec
cmp
add
push
nop
out
cmc
daa
xor
xor
stc
js
dec
pop
pop
adc
subb
adc
pop
lods
push
add
loopne
hlt
inc
mov
imull
push
clc
adc
jg
cs
adc
and
gs
decb
outsb
enter
pop
ja
clc
idivb
jno
out
out
push
lcall
cmp
std
and
jo
clc
aam
cmp
mov
iret
adc
mov
scas
mov
lret
clc
insl
add
std
mov
imul
sub
or
sbb
cltd
xchg
repz
push
push
xor
clc
enter
std
bound
test
dec
adc
popa
cli
xor
cmp
xor
rcl
repnz
mov
and
and
xchg
push
lret
xor
rcrb
xchg
leave
arpl
xorb
test
outsl
and
pushf
jge
inc
mov
dec
sub
int
das
lahf
or
jno
inc
ja
push
mov
in
jne
adc
pushl
insb
daa
mov
into
adc
pop
cmp
cwtl
cld
adc
cmc
outsl
pop
xchg
sahf
stos
mov
and
sub
addb
jge
or
cmp
pop
stc
test
and
jns
loope
fcmovne
dec
call
xor
addr16
or
or
aam
shr
add
sub
xchg
and
stos
push
icebp
loope
test
idivb
lock
dec
pop
sbb
aas
pop
sub
pop
clc
ljmp
xchg
add
dec
pop
cmp
cmp
jmp
idivb
das
sbb
int3
cmp
adc
std
loop
jo
inc
xchg
push
jl
mov
loope
frstor
movsb
lods
stos
test
adc
sbb
jbe
mov
pop
das
into
pop
dec
pop
push
xchg
sbb
adc
incb
stc
push
cmc
add
ljmp
popa
inc
test
mov
or
scas
scas
or
scas
ficompl
mov
pslld
mov
dec
rcll
divl
sbb
cli
int
test
lods
sub
xor
push
test
jmp
subb
or
inc
out
mov
pushf
ret
stos
xchg
sub
jo
cli
adc
xor
icebp
and
cmp
fistpl
stos
arpl
sub
popa
movsl
jnp
jns
dec
and
pop
mov
dec
cmp
cmc
or
vmovss
adc
or
mov
ja
adc
push
cmp
jo
jl
or
inc
ss
adc
filds
in
std
mov
out
xchg
push
push
in
subb
scas
jl
push
inc
cltd
inc
jns
daa
cmpsb
out
mov
mov
inc
mov
in
outsl
mov
ficompl
sbb
pop
outsl
insl
and
jle
aaa
or
in
jno
call
test
cmpl
popa
or
and
pushl
mov
adc
sub
xchg
lahf
jb
inc
mov
test
cmp
in
or
inc
out
pop
jg
enter
cmc
pop
sbb
jo
mov
pop
xchg
sti
out
mov
data16
inc
sub
mov
jg
pop
cmp
fs
inc
popa
or
sub
xor
xor
or
leave
sbb
lret
mov
inc
jmp
cmp
stc
in
loopne
leave
sub
enter
ret
jnp
mov
sti
clc
mov
test
cmp
loope
data16
stc
mov
inc
popa
out
or
xor
fwait
aad
das
fisubs
cmpsb
mov
out
shr
insl
mov
leave
mov
fimuls
mov
cltd
mov
decb
push
cmp
scas
mov
das
out
imul
sahf
cmpsl
lock
jo
xchg
jae
inc
lahf
out
and
adc
or
xchg
sbb
or
add
add
mov
pop
mov
dec
fcomip
jno
dec
sub
pop
pop
mov
push
inc
mov
es
mov
gs
xor
dec
aaa
cmpsb
in
popa
out
ds
inc
inc
dec
inc
imul
ljmp
jo
mov
mov
add
jae
js
jmp
pop
adcb
xchg
aad
adc
pop
sub
dec
mov
frndint
cmp
pop
xor
mov
sbb
test
adc
xor
dec
out
das
pop
push
cmp
push
cmpsb
je
pushf
sub
mov
mov
scas
jmp
pop
mov
movl
insb
js
inc
andb
rol
in
mov
mov
xor
pop
loop
pop
cmp
pop
sbb
rcll
sub
lret
push
mov
lret
shrl
mov
push
fwait
cmp
mov
xchg
sub
xchg
test
in
mov
mov
and
mov
mov
cmp
test
not
rcr
lods
push
sub
pop
sbb
adc
clc
jge
popf
sub
xchg
mov
rclb
xchg
daa
movsb
mov
mov
cwtl
shrl
mov
imul
bound
repnz
xchg
jno
aam
and
xchg
inc
cltd
scas
xchg
stos
xlat
or
mov
pop
jmp
jle
fs
clc
add
jae
test
jecxz
andl
dec
cwtl
negb
mov
and
push
movsb
mov
or
cwtl
mov
push
scas
xor
jl
cltd
jge
jae
ja
or
js
imul
rorb
ds
mov
cld
xchg
ja
notl
add
pop
pushf
sahf
push
shr
and
cmp
es
and
rcrl
orb
sbb
sahf
jo
adc
rclb
std
call
jno
push
pop
and
sub
je
sbb
aam
ret
sub
aad
addr16
jp
popa
pop
les
int
jle
cmp
ss
mov
ja
sub
dec
jns
and
xchg
repz
popa
mov
and
shrb
addr16
jmp
mov
pop
popf
push
mov
sbb
cmc
adc
mov
jmp
cmp
ret
jge,pn
mov
scas
dec
lcall
push
fistl
mov
pop
mov
mov
je
ror
jecxz
xchg
cmpsl
sub
cli
std
push
push
fstp
fwait
pop
nop
push
stos
inc
and
lcall
jae
lret
cmc
adc
add
push
adc
push
repz
adc
xchg
xor
fidivrl
out
dec
inc
mov
xchg
sub
jbe
andb
mov
enter
hlt
mov
mov
xchg
in
pop
and
enter
out
xchg
movsl
xchg
adc
pop
aad
mov
lds
jg
dec
sbb
dec
dec
in
xchg
xor
sahf
outsl
or
je
xorl
and
wbinvd
dec
jbe
ljmp
je
xor
les
or
xchg
ja
or
dec
test
jo
movsb
cld
inc
add
jecxz
insl
aad
pop
pop
lods
dec
lret
mov
test
mov
outsb
lds
add
shl
sbb
inc
cmp
adc
jnp
dec
jg
jb
dec
loopne
insb
lret
imul
test
aad
int
out
sbb
jb
add
iret
xchg
or
sub
jmp
stos
push
popf
xor
push
std
pop
push
pop
push
repz
imulb
dec
das
enter
adc
xor
jae
ss
cli
sbb
mov
mov
cmc
jne
mov
gs
outsb
mov
and
pushf
and
xor
adc
je
out
movsl
movlps
popf
xchg
mov
pop
fwait
xchg
pusha
pop
push
aas
cmpsb
or
mov
fists
mov
jno
stc
and
mov
aaa
in
lock
and
into
and
add
or
and
inc
xchg
arpl
lods
ljmp
jle
adc
or
mov
xor
bnd
sub
mov
faddl
xchg
sbb
add
pop
mov
and
mov
shll
lds
dec
mov
js
addr16
inc
test
std
pop
js
into
rorb
mov
inc
add
clc
mov
stos
dec
iret
movsb
pop
cwtl
mov
flds
repnz
sti
xor
aas
sbb
cmpsl
or
and
dec
ljmp
xchg
inc
cltd
scas
test
aad
lcall
dec
mov
out
popf
adc
xchg
dec
and
cmp
nop
cli
xchg
addr16
js
jne
fstpl
xchg
out
mov
mov
aaa
dec
push
stos
daa
xchg
cmpsb
aaa
inc
out
movsl
cmp
dec
pop
movsl
sbb
sbbl
sub
xlat
sbb
icebp
add
rcrb
mov
adc
cmp
aaa
scas
insl
loope
fs
daa
push
cmp
pop
push
cmp
add
or
jmp
mov
inc
repnz
std
mull
icebp
sub
cmp
jg
enter
or
pop
xchg
push
shll
pop
sub
mov
mov
je
cld
andl
scas
das
call
cmp
ljmp
xlat
rclb
mov
shll
mov
dec
pop
dec
ret
aam
sbb
dec
loop
jl
clc
sbb
push
lret
and
lock
arpl
ljmp
xlat
movsb
push
mov
cs
mov
pop
aas
add
out
nop
cmp
stos
fcomp
sub
scas
push
notl
mov
rcr
dec
or
jae
movsl
cwtl
push
lods
mov
insl
cltd
adc
mov
fwait
adc
ss
fs
shrl
cmp
stos
mov
popa
push
stc
aad
xchg
loopne
jg
add
mov
jmp
push
inc
dec
and
out
arpl
outsb
xor
lods
add
xchg
mov
out
lea
jmp
in
dec
sbb
push
or
pushf
xor
mov
push
xor
inc
pusha
sub
ljmp
repz
fistpll
scas
push
cmpsl
mov
inc
pop
cmpsl
fwait
sub
aam
adc
inc
cwtl
dec
sbb
cmpsl
mov
push
sti
lods
outsl
pop
adc
mov
xor
jmp
push
jge
dec
jp
mov
lret
push
ljmp
sub
jmp
mov
cwtl
lret
jg
mov
cmp
or
movsb
mov
jmp
repz
push
dec
add
test
mov
push
nop
sbb
sub
push
movsl
and
pop
pop
addr16
aad
push
sarb
mov
ret
sbb
pop
je
clc
cmp
nop
jns
mov
out
xor
popa
pop
insl
inc
adc
sbb
daa
mov
popa
int3
add
add
push
psrlw
movsl
fnsave
jmp
mov
mov
mov
push
and
mov
cwtl
mov
mov
or
sti
imul
lods
push
test
adc
fucomp
shr
imul
test
sahf
rolb
lds
add
or
mov
out
sbb
adc
push
cmc
insl
inc
sbb
sti
out
and
cmc
scas
push
fistps
sbb
aaa
pop
xor
mov
push
sbb
pop
mov
pusha
mov
jbe
or
cmp
repz
jne
and
and
int3
cltd
jbe
imul
pop
rorl
pushf
lcall
mov
cltd
mov
dec
mov
mov
iret
cltd
jbe
add
hlt
sbb
inc
xchg
outsb
and
or
mov
pop
dec
gs
fdivs
xor
addr16
stos
rclb
mov
pop
aaa
popf
stos
js
push
or
push
xchg
pop
push
xor
adc
fwait
add
pusha
mov
mov
mov
jmp
inc
out
fstpl
add
jo
sahf
lods
xchg
jne
sahf
fs
xchg
stos
push
sub
or
fisubrs
loop
cmp
sbb
ficoms
pop
xlat
dec
or
repnz
std
dec
out
lea
pop
stc
aam
lret
sub
pop
fstpt
and
and
xlat
add
mov
push
mov
mov
push
pop
daa
jno
jle
or
mov
cmpl
js
fwait
jecxz
jle
ficompl
mov
pop
push
jl
xchg
xchg
call
mov
sub
push
call
aaa
test
cmpsb
mov
cmpsl
mov
icebp
dec
push
inc
outsb
adc
pop
or
pop
pop
aaa
aam
ljmp
mov
and
scas
dec
icebp
ss
push
cs
push
dec
lock
stos
adc
loopne
push
mov
mov
mov
xchg
xchg
inc
xor
dec
mov
call
push
sbb
scas
aam
cmpsl
sub
imul
fldenv
rcl
test
inc
or
nop
mov
ret
sub
cmp
inc
faddl
sbb
or
xor
dec
scas
dec
and
imul
bound
test
cltd
stos
mov
std
enter
rol
icebp
xchg
adc
lret
ds
out
aad
mov
sahf
cmpb
es
mov
cmc
stos
jno
outsl
std
inc
mov
or
cmpsb
sbb
inc
inc
xor
mov
in
int
dec
cmp
adcb
ds
das
cmpsl
xorb
jo
loop
dec
dec
aam
mov
imul
ret
dec
rorb
and
fucomip
frstor
out
lret
add
pop
cs
out
lock
push
push
or
cmpsb
sbb
push
cmp
test
pop
int3
pop
xchg
shlb
jp
jmp
push
aam
cwtl
dec
sub
leave
icebp
sbb
lods
sti
jg
jg
rcll
cli
push
rolb
data16
add
push
pop
jbe
jo
lock
dec
inc
je
adc
pop
mov
jb
imul
daa
repnz
aad
pushf
inc
cs
lret
sub
call
cmpsb
sbb
xor
push
adc
push
jo
jg
loopne
inc
xchg
or
daa
mov
lock
int
fbld
mov
sarb
out
in
movups
mov
test
add
xchg
cmp
adc
pushf
cltd
jae
dec
les
scas
test
mov
loop
aad
mov
pop
jl
repnz
mov
test
test
imul
mov
or
popa
fmulp
xchg
inc
jmp
lods
sarl
sahf
fidivl
pop
popa
popa
jmp
lds
sbb
pop
iret
mov
in
jl
sub
dec
pop
mov
pop
mov
icebp
jbe
in
ja
xchg
sub
mov
mov
xchg
push
mov
jl
bnd
mov
push
and
cltd
sub
mov
lcall
mov
testl
cmp
enter
pop
lods
mov
imul
pop
adc
ss
pop
mov
and
mov
pop
leave
sub
fbstp
repz
jnp
dec
mov
dec
lret
cli
mov
sbb
stc
loop
xchg
mov
nop
and
push
and
add
add
in
clc
arpl
lahf
loopne
dec
orb
jl
aas
lret
cmpsl
loop
in
push
stc
push
adc
scas
lds
cmp
mov
mov
ret
add
pop
sbb
mov
or
call
cmp
sarl
out
lds
shlb
sbb
out
cmpl
movsb
rol
pop
xchg
mov
pop
xor
and
jne
insb
fadd
fsubs
fadds
jmp
mov
ss
dec
fimull
mov
mov
and
dec
push
sbb
insl
nop
cwtl
psrlq
push
testl
lret
dec
out
pop
xchg
bound
popa
mov
xchg
andl
pop
dec
xchg
aam
test
in
sub
dec
adc
inc
xchg
test
insl
mov
jnp
xor
jge
sub
sbb
xor
xchg
sbb
fs
inc
xchg
inc
and
mov
push
fidivrs
cld
pop
jg
cmp
fsubs
out
repnz
pop
and
or
lods
call
pusha
mov
xchg
adc
nop
daa
sbb
les
cmp
xchg
dec
add
push
mov
dec
mov
jle
cmp
or
fidivrs
imul
adc
nop
xor
push
cmpsb
mov
and
test
movsb
repnz
lods
cld
xchg
jns
and
in
xchg
into
rolb
insl
xchg
leave
mov
ret
repz
int3
fwait
adc
ljmp
andl
adc
jl
adc
movsl
loope
mov
jge
dec
aas
mov
jge
mov
int3
std
aaa
out
sti
inc
and
mov
jg
pop
pop
mov
sub
outsb
adc
dec
pop
jmp
ljmp
cmc
push
lods
xchg
push
fldenv
mov
add
mov
pop
cmp
les
cmp
out
iret
pop
pop
mov
sbb
jbe
mov
xor
cmp
movsl
sub
mov
adc
ret
in
pop
sub
inc
sarb
lcall
lcall
in
add
shlb
lret
inc
shll
inc
mov
push
aam
les
push
test
push
or
and
in
jns
xor
inc
push
data16
pop
inc
cmp
jae
mov
cltd
mov
xchg
push
popa
sbb
mov
mov
and
in
daa
int3
stos
xchg
call
aam
pop
loopne
dec
stc
sub
mov
or
insb
adc
xor
lret
adc
hlt
hlt
adc
sahf
out
test
inc
sub
and
push
and
or
jmp
sbb
loope
adc
in
push
push
xor
and
pop
ds
mov
inc
inc
enter
and
push
or
and
pmulhw
pop
and
jae
pop
out
insl
cwtl
sub
mov
out
call
hlt
push
cwtl
and
push
js
ja
in
dec
fildl
push
popf
pop
pop
test
adc
std
lock
xchg
jg
fstl
inc
stc
outsb
jecxz
mov
add
aad
loop
jmp
popa
mov
or
xchg
dec
dec
push
enter
shl
ret
iret
jae
and
sbb
adc
icebp
ret
repnz
mov
jb
push
loope
jp
sbb
push
push
xor
dec
loop
sbb
adc
gs
mov
mov
adc
or
repz
cmpsl
dec
add
jmp
addr16
stc
mov
add
lcall
in
aaa
cmp
out
ret
and
jae
loope
pop
lahf
lcall
cmpsb
pop
stc
mov
xchg
push
loopne
jecxz
or
jmp
lds
ret
out
sub
push
clc
push
adc
mov
sahf
dec
cmp
pop
jmp
xor
outsb
mov
mov
dec
and
mov
pusha
mov
jp
mov
add
jg
sbb
mov
adc
or
sbb
inc
out
in
mov
imul
inc
xchg
data16
cld
pop
jp
ret
xor
pop
addr16
and
mov
movsb
out
and
cs
pop
bound
jl
mov
loop
sti
ret
xchg
icebp
dec
inc
fstpt
ficompl
cmp
ljmp
cld
cmpsb
mov
push
xchg
je
dec
sti
dec
outsb
push
xor
in
int3
dec
mov
out
cli
rcrl
add
fdivrs
lret
aaa
popa
jle
xor
inc
jle
lea
repnz
pop
imul
data16
repnz
out
xchg
inc
mov
mov
dec
add
add
jae
and
cmp
pop
popf
cmpsb
lods
sub
ja
mov
xchg
shl
jno
mov
lahf
xor
xor
arpl
and
pop
pop
fisttps
test
jecxz
sbb
dec
inc
sub
into
cli
stos
sbb
xor
adc
push
xchg
dec
dec
cltd
mov
js
mov
mov
ret
lods
jb
leave
push
pop
mov
mov
mov
xchg
faddl
mov
xchg
scas
in
jne
inc
pop
sbb
pop
mov
lock
mov
adc
mov
inc
lret
add
mov
xor
out
xchg
outsb
or
dec
pushl
xor
aas
jo
pop
jbe
sub
pop
fwait
pop
or
push
lcall
into
dec
out
in
clc
xor
mov
pop
decb
push
cmp
inc
inc
mov
iret
cs
mov
es
jo
shl
jbe
inc
repz
in
cli
push
cmp
push
inc
rclb
sbb
dec
pop
lods
dec
sbb
cmp
fs
lods
xchg
jmp
ja
sbb
mov
mov
out
pop
scas
ds
daa
mov
sti
sub
ret
inc
popa
push
fldenv
leave
push
inc
sbb
loop
inc
pop
fistpll
outsb
cmc
mov
xor
aam
pop
repz
sti
outsl
xor
mov
mov
iret
out
in
ffree
stc
call
loopne
bound
mov
lret
mov
and
pop
arpl
mov
adc
ljmp
pop
jge
inc
in
mov
inc
pop
mov
cmp
movsl
leave
dec
stos
shl
xor
inc
adc
cmp
or
pushf
loop
inc
and
hlt
mov
lds
idivb
scas
push
inc
adc
sbb
cwtl
ret
mov
mov
jnp
mov
subb
add
xchg
lock
out
and
fldt
rcr
inc
dec
ss
sti
pop
orb
imul
sub
mov
xchg
jle
out
xchg
pop
inc
into
add
xchg
xchg
popa
jl
pop
leave
daa
push
cmc
arpl
push
or
aam
add
dec
mull
or
adc
test
lds
test
adc
pushf
and
dec
mov
sbb
dec
mov
inc
jb
push
popf
pop
icebp
sub
or
cmc
sbb
fldenv
lea
pop
sarb
insl
stc
popa
mov
xchg
pop
sbb
mov
push
into
je
pop
popf
testb
rorb
xor
inc
and
push
ss
pop
test
mov
adc
xor
shll
ljmp
or
xchg
jo
sub
sbb
fcmovnbe
ret
mov
add
push
les
sub
gs
fnsave
in
ror
cwtl
jae
ljmp
xchg
incb
movsb
nop
fucomi
nop
pop
ja
and
jb
push
dec
adcl
cmp
pop
cmpsb
pop
mov
jne
mov
xchg
or
sub
add
xor
repnz
mov
mov
push
enter
fwait
das
lcall
insb
adc
int
push
hlt
shll
imul
cmp
xchg
adc
std
out
inc
shrl
sti
sub
xor
jbe
mov
push
cld
push
test
insb
scas
or
jb
pop
xchg
xchg
mov
repnz
stos
scas
insl
cmp
pop
insl
test
sub
jo
mov
test
or
gs
mov
insl
xor
push
mov
cli
rcll
add
ss
inc
or
fildll
ljmp
mov
push
mov
movsl
pop
fdivrs
stos
sub
push
lea
out
sub
into
ss
imul
mov
jbe
ss
ret
mov
les
xor
sbb
hlt
mov
pop
sub
movsl
push
and
fdivrp
lret
aam
in
add
mov
or
sbb
add
push
lret
mov
aas
jb
mov
dec
dec
pop
rcl
sub
push
or
adc
test
cmpsb
lret
repz
add
pop
cld
pop
jle
insb
out
out
or
pusha
out
into
mov
in
fnsave
push
sarl
lock
fs
cwtl
stos
jno
loope
test
scas
and
sub
pop
jae
jo
out
mov
ss
gs
inc
cmp
outsl
mov
or
adc
sub
sub
outsl
or
or
lret
test
clc
lret
inc
stos
sbb
rol
rclb
je
out
lret
jmp
mov
cmpb
mov
and
and
out
sub
popf
insl
leave
dec
lods
lods
mov
mov
cmp
aas
out
aas
add
mov
jl
fdiv
sub
cmp
cmpsb
fadds
pushf
cli
sub
sbb
inc
jno
es
icebp
sbb
mov
enter
pop
inc
jg
mov
sbb
jns
movsb
sub
push
or
out
lahf
mov
call
sbb
add
add
mov
cmp
mov
loop
cmpsl
xor
movsb
xchg
adc
rorl
cmp
nop
xchg
hlt
cltd
dec
sbb
cmp
ss
mov
push
sbb
or
or
push
lahf
push
rorl
out
inc
xchg
repz
jae
pop
cwtl
aas
push
mov
jae
dec
ljmp
adc
out
std
pop
int3
repnz
mov
xor
or
flds
mov
jnp
into
loopne
out
and
push
pusha
or
push
adc
push
mov
dec
je
mov
dec
insl
add
ret
xchg
jnp
mov
sub
mov
xor
dec
dec
mov
mov
push
das
pop
mov
mov
pop
aad
xchg
jb
jb
xor
sbbb
push
imul
jbe
mov
pop
mov
xor
lcall
xor
inc
mov
xor
jno
xchg
lahf
mov
test
adc
out
lret
loop
mov
cmp
int3
xchg
xchg
ljmp
in
aaa
inc
popa
jnp
les
jno
pop
addr16
sbb
and
jecxz
mov
sub
fists
pop
or
shrb
out
add
sub
cmpb
and
div
and
and
movsb
jp
scas
addr16
cmp
out
ljmp
mov
dec
mov
mov
adc
aaa
pop
xor
sbb
mov
jbe
xchg
sub
js
fcoml
out
xchg
inc
sbb
add
or
js
jp
mov
fadds
ss
lret
push
jmp
xor
adc
inc
hlt
mov
sub
repz
hlt
cmp
lods
sub
mov
xchg
enter
xchg
mov
mov
adc
std
and
hlt
pushf
inc
sub
adc
pop
shl
push
test
pop
inc
pop
loopne
cmp
xchg
pop
sbb
cltd
cmp
shll
test
in
inc
ret
xchg
fwait
mov
imul
lahf
sbb
ret
push
push
inc
pop
dec
inc
idivl
pushf
imul
mov
mov
clc
xchg
outsl
mov
nop
negb
push
scas
loopne
dec
cmp
std
cmp
lcall
or
cmpl
lret
stos
popf
movsl
shlb
in
test
ss
mov
test
mov
jmp
sbb
repnz
push
stc
je
cmc
sbb
sbb
repnz
cmp
lock
xchg
push
xchg
data16
aas
push
imul
push
pop
scas
insb
les
jo
or
lods
inc
push
mov
jb
jg
inc
loop
mov
fstp
rcrl
or
and
mov
inc
pop
loope
xchg
jo
adc
subb
mov
fs
inc
push
daa
mov
jecxz
enter
or
filds
dec
and
gs
dec
sbb
sub
sbb
pop
adc
daa
daa
ret
popf
push
xor
movsb
and
imul
iret
add
mov
ss
sbb
movsb
xchg
or
fidivl
dec
out
inc
pop
aam
enter
dec
inc
mov
pop
lcall
xor
fwait
pop
dec
push
inc
iret
sub
lahf
cmpsl
jbe
or
lahf
inc
popf
popa
sahf
dec
cmp
sti
out
adc
and
fs
xchg
test
lods
pop
mov
or
rcrb
repz
or
xor
jmp
insl
js
mov
cmp
sbb
test
ficoms
icebp
push
sbb
xor
dec
into
xor
rcrl
sbb
mov
inc
popa
icebp
add
rolb
cmp
xchg
mov
mov
and
shl
jbe
xor
inc
ss
mov
pop
mov
push
xchg
dec
dec
cmp
mov
add
test
mulps
cmp
pop
into
jnp
out
insl
pop
pop
dec
xchg
mov
xor
pop
mov
sbb
cmp
pop
mov
push
pop
jge
inc
pop
popa
imul
jnp
dec
and
les
int3
xchg
test
sbb
xor
lock
push
movsb
mov
aas
test
ss
jne
sbb
and
xchg
lods
stos
repnz
sahf
lret
mov
or
mov
mov
cmp
scas
shrb
and
outsl
es
inc
les
push
dec
xchg
fwait
cmp
sbb
mov
cmc
jle
or
ss
or
cmp
mov
pop
fimuls
ficoms
ret
div
and
or
je
pop
insl
mov
mov
insb
adc
aad
test
stc
mov
dec
jns
idivl
adc
fiaddl
outsb
mov
inc
mov
scas
insl
sub
jno
mov
arpl
popf
and
stc
dec
call
scas
add
lret
and
mov
cs
scas
xor
push
add
push
les
ficoms
adc
in
lret
cli
adc
cs
pop
int3
add
sub
mov
xor
xchg
adcl
sbb
loop
jbe
fdivrp
lret
xchg
mov
xlat
push
shrl
in
jns
ljmp
mov
mov
daa
dec
inc
pushf
lds
push
into
dec
jp
adc
cs
mov
inc
xor
nop
out
ficoms
aas
roll
xor
fs
subb
push
add
rcrb
imul
mov
vphaddwd
lds
mov
lods
test
push
mov
adc
aaa
and
ret
cmc
loop
cli
xor
push
pop
jno
xor
repnz
push
popa
ss
push
inc
or
mov
imul
pop
in
push
ja
sti
adc
push
pop
sbb
loope
or
sub
xchg
sbbl
jmp
lods
int3
xchg
pop
dec
sbb
out
lds
loop
mov
sbb
cmpsb
clc
lcall
mov
loop
ds
js
or
xor
fisubl
adc
dec
push
sbb
push
aad
mov
enter
mov
in
pop
cmp
jg
movsb
movsl
add
in
roll
mov
pop
and
in
lahf
jbe
cmpsb
repnz
mov
pop
movsb
push
mov
jns
std
xlat
sub
cmp
fdivl
pop
cli
scas
sub
sbb
cmp
rcr
xor
xchg
push
scas
jecxz
repz
sub
jge
lret
and
dec
add
adc
pop
jnp
jbe
dec
pop
lods
enter
stos
inc
lock
xlat
or
xchg
mov
daa
std
aas
xchg
sub
jbe
pop
push
pop
outsl
add
scas
repz
call
scas
xor
cli
pop
pop
dec
push
sbb
outsb
mov
gs
pop
jo
jae
xchg
jp
add
out
mov
jo
std
mov
dec
out
loop
sti
mov
iret
xchg
cmp
sub
dec
cwtl
ficompl
daa
push
cmpsb
or
in
fadd
aam
imul
in
inc
sub
cmp
sub
mov
dec
jb
push
fs
aaa
out
sti
sub
sbb
sub
xor
xor
push
xchg
outsl
sbb
test
mov
scas
push
lods
mov
fcmovne
push
pushf
js
cmp
loop
data16
cmpsb
dec
es
incl
pop
mov
jmp
pop
mov
mov
and
loopne
xchg
ds
or
sub
fs
lcall
sub
in
xor
mov
mov
xchg
dec
out
jle
lock
jae
or
enter
mov
xchg
ss
cmpsl
mov
mov
out
clc
inc
mov
std
sahf
xorb
mov
lea
xor
enter
fisttpll
dec
mov
or
arpl
jne
movaps
lcall
imul
mov
daa
cwtl
pop
mov
adc
mov
push
loope
pop
sub
mov
push
or
dec
jae
dec
mov
stc
in
add
les
mov
ss
mov
mov
test
call
push
arpl
fwait
test
nop
mov
es
and
inc
dec
inc
push
loop
sub
dec
mov
imul
stos
lahf
in
popa
mov
das
mov
dec
out
jg
fisubs
fistps
repnz
add
push
fsts
pop
jge
out
aas
cmp
dec
jg
jp
mov
mov
stos
andl
xchg
loop
daa
pop
inc
inc
daa
cs
add
mov
jp
stc
dec
pop
js
dec
cmpsl
sbb
rcrb
and
push
or
cmp
inc
pushf
pop
loopne
and
cmc
mov
out
push
loope
mov
nop
scas
push
test
ret
jns
mov
lret
mov
and
mov
push
jne
lods
test
test
cwtl
imul
lahf
sub
enter
loope
loopne
mov
push
es
sub
cld
or
rcll
enter
in
push
ret
jne
jp
test
inc
lret
loop
mov
add
inc
lods
xor
gs
pop
mov
jle
xor
addr16
sub
push
mov
push
fistl
inc
xor
push
outsb
push
add
mov
daa
movsb
pop
cmp
fsubl
fimuls
ficomps
out
mov
jge
outsl
jecxz
jo
mov
sti
sub
gs
cmp
push
rcll
cmpb
fsts
jbe
inc
scas
xor
or
xchg
mov
sbb
dec
pushf
stos
xchg
xor
push
sbb
mov
fdiv
test
jns
pop
and
int3
sbb
push
sbb
movsb
cmp
add
sbb
xchg
sbbl
incb
pop
and
out
insl
push
movsb
push
mov
lahf
insb
mov
mov
stos
int
js
pushf
sub
push
fwait
push
or
mov
ljmp
nop
cli
lea
arpl
pop
fstpl
int3
lea
push
mov
push
cmp
mov
xor
inc
movsl
loopne
xor
roll
imul
rolb
push
rorb
xor
outsb
notb
or
aas
in
mov
fld
xchg
xchg
jl
rcrl
faddl
fnstcw
mov
lea
aaa
sahf
imul
movsl
jne
and
sbb
leave
pop
clc
cld
fldcw
int3
stc
xor
sbb
mov
mov
cmp
jae
ret
pop
push
jle
sbb
out
popf
cmp
notb
or
hlt
dec
pushf
inc
lods
cmp
fwait
pusha
jp
jle
je
mov
pop
sbb
shlb
out
decb
xchg
std
jo
push
ljmp
pop
sub
xchg
ds
adc
mov
clc
mov
fs
mov
test
lahf
xor
test
xchg
push
ljmp
mov
jbe
or
stc
mov
insl
repnz
fcmovnb
mov
pop
lcall
iret
shl
out
ds
sbb
jmp
cmp
rdtsc
adc
movsb
push
add
cmpl
shll
decl
mov
cmp
in
sbbl
leave
adc
pop
sbb
push
push
fs
xchg
data16
and
jb
sub
dec
das
push
jnp
add
fmuls
shrb
pop
adc
mov
push
jno
jl
mov
repnz
mov
mov
inc
cs
repz
mov
js
jbe
pop
sbb
add
out
xor
jne
arpl
out
and
adc
pop
mov
xchg
push
fs
mov
mov
lock
dec
das
negl
xchg
pop
pop
inc
pop
pop
push
mov
lods
jmp
adc
into
mull
sub
inc
mov
sar
xchg
jmp
sub
and
cld
mov
mov
cmp
xchg
das
mov
fwait
inc
cmp
mov
rorb
mov
scas
popa
movsl
adc
fsubl
lcall
or
addr16
dec
pop
test
cmpsl
dec
mov
mov
leave
js
mov
ds
dec
call
pop
sub
push
push
movsb
stos
test
repnz
xor
mov
ret
mov
push
les
sbb
jns
sbb
sarl
mov
test
call
add
rcll
jg
jnp
stos
aas
and
je
icebp
xor
ljmp
loopne
mov
je
xchg
subl
mov
lcall
ret
lea
xlat
pusha
push
mov
jp
lahf
inc
mov
cmpsb
xchg
jg
mov
fisttpl
cmpsl
pop
std
shlb
popa
xchg
das
inc
lods
cs
xchg
push
mov
cmc
cmc
fsubp
mov
sarb
xor
roll
fbld
cwtl
jbe
mov
insl
xchg
sub
les
jbe
out
jl
xchg
xor
push
mov
cmp
call
sarb
cmp
push
fnsave
mov
insl
jle
dec
jmp
cld
ret
cmp
cmp
and
mov
adc
cwtl
int
add
sbb
cmp
mov
out
lock
mov
push
pop
sub
ficomps
ss
ja
fidivs
add
sti
cmp
stos
push
leave
scas
xor
add
jmp
in
cmpsb
sub
mov
rep
insb
and
or
ja
xor
push
out
and
inc
in
cmp
mov
mov
push
add
mov
sub
cmpsb
stos
addr16
push
mov
cs
push
pop
inc
or
push
or
scas
rcrl
cmc
or
xor
test
inc
fmull
sub
les
jae
stos
idivb
mov
add
cmpb
sbbb
imul
mov
add
sub
adc
mov
mov
mov
imul
mov
pop
cltd
pop
dec
mov
lock
in
jle
rorb
aad
ret
cmp
roll
add
jns
jecxz
adc
out
add
jmp
inc
lret
fadd
cmp
sbb
daa
mov
aaa
ja
addr16
and
insb
out
mov
movl
popa
test
adc
cmpsl
in
loop
jae
inc
cmc
or
fdivs
cmpsb
push
cmp
mov
stc
add
inc
jae,pn
jmp
xor
negl
mov
int
aam
repz
dec
cmp
insb
xor
ljmp
push
add
push
out
outsl
dec
xor
or
rcll
cmc
pushf
int
xor
cmp
ja
sbb
scas
mov
cmpsb
cmp
setge
subb
jp
push
leave
sbbb
xlat
sarb
and
popf
sbb
jecxz
sub
mov
iret
fcmovne
adc
cld
pop
shlb
xor
cmc
add
lea
mov
inc
sahf
sahf
sub
imul
int3
addr16
movsb
pop
lods
pop
test
dec
js
sti
movsb
loope
fsub
adc
xlat
or
mov
pop
sbb
orb
icebp
fcmovu
stos
push
fnstcw
cmp
push
incb
dec
in
imulb
and
lods
outsl
mov
or
and
pcmpeqb
std
fistps
fadds
jge
sub
lock
rcrl
jmp
idiv
inc
add
adcb
popa
adcb
mov
sub
xor
add
mov
sub
sub
sub
xor
mov
sub
xor
mov
rol
add
add
add
add
mov
add
mov
add
sub
add
mov
mov
push
mov
mov
pop
mov
mov
cmp
je
mov
mov
sub
sub
mov
add
ror
sub
jmp
sub
add
leave
ret
push
mov
sub
xor
mov
sub
call
mov
sub
mov
add
mov
mov
mov
add
add
mov
cmp
je
add
sub
mov
sub
cmp
je
imul
jmp
mov
mov
mov
sub
add
add
sub
push
dec
ret
int3
int3
int3
int3
push
mov
push
push
or
cmp
ja
ror
mov
shr
mov
sub
sub
add
sub
inc
mov
mov
sub
add
mov
sub
mov
mov
leave
ret
push
mov
push
push
sub
cmp
jne
add
sub
mov
mov
pop
or
and
add
cmp
je
sub
push
push
push
push
call
xor
mov
sub
mov
mov
push
leave
ret
int3
push
mov
sub
xor
xor
add
mov
sub
cmp
je
add
mov
mov
add
mov
mov
inc
mov
add
xor
mov
mov
mov
sub
mov
sub
cmp
je
xor
cmp
jl
ror
add
add
mov
add
shl
add
xor
lea
xor
mov
mov
mov
add
lea
add
cmp
jle
sub
mov
mov
push
mov
pop
add
inc
mov
add
add
add
sub
add
cmp
jne
mov
mov
and
add
sub
cmp
jne
imul
and
sub
jmp
xor
sub
sub
mov
mov
mov
add
mov
sub
mov
add
sub
cmp
jne
and
sub
xor
test
je
shr
add
imul
mov
push
sub
and
pop
mov
add
add
sub
add
mov
shr
mov
cmp
je
sub
cmp
jne
sub
sub
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
and
cmp
je
shl
add
mov
cmp
jne
mov
mov
mov
sub
mov
mov
push
call
mov
sub
sub
and
lea
rol
mov
sub
xor
sub
mov
sub
add
mov
sub
mov
mov
sub
add
add
sub
mov
cmp
jne
or
add
or
sub
mov
and
mov
add
add
sub
mov
xor
add
add
xor
cmp
jne
add
mov
sub
sub
mov
push
sub
mov
mov
add
add
xor
add
sub
xor
cmp
jne
rol
call
add
mov
mov
push
sub
xor
pop
mov
or
cmp
jne
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
xor
mov
shr
mov
add
sub
push
push
call
inc
mov
pop
mov
pop
mov
mov
add
cmp
je
sub
mov
sub
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
xor
mov
push
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
insb
jo
addr16
add
add
add
add
add
outsl
inc
ja
push
insb
insl
add
addr16
add
push
inc
add
add
dec
ja
add
inc
inc
jne
dec
dec
push
jbe
add
add
add
add
jbe
insb
jp
add
push
dec
jae
push
jno
add
add
add
add
dec
outsl
add
add
add
inc
bound
add
ja
dec
push
add
add
imul
add
push
imul
push
add
jae
dec
dec
dec
push
dec
outsl
jo
gs
inc
add
jo
insl
popa
add
add
add
push
jo
push
add
add
add
add
dec
fs
add
add
fs
dec
dec
addr16
inc
bound
imul
dec
dec
add
js
push
add
dec
dec
jns
insb
je
pop
push
imul
add
add
dec
gs
push
push
inc
arpl
add
dec
add
je
add
insl
dec
push
je
jno
inc
add
js
inc
data16
jp
add
push
dec
arpl
pop
add
add
add
add
add
insl
inc
push
add
add
add
push
pop
add
data16
add
add
add
insb
add
add
inc
jno
outsl
add
push
add
add
outsb
jb
add
inc
jp
push
dec
jb
push
pop
fs
add
dec
push
dec
push
add
add
add
jb
jns
add
add
add
jbe
add
add
jp
add
add
add
add
add
add
add
add
add
push
outsb
add
add
jb
add
outsl
dec
ja
jp
push
addr16
push
arpl
ja
add
add
jns
dec
push
jns
fs
dec
je
inc
add
jp
outsl
bound
arpl
dec
push
push
pop
jbe
dec
dec
inc
add
add
add
inc
imul
add
add
add
imul
push
inc
add
jb
push
outsl
push
bound
outsl
inc
arpl
jne
inc
bound
arpl
bound
push
jae
push
add
add
dec
insl
push
push
inc
dec
push
add
add
add
add
arpl
bound
add
dec
push
add
push
push
add
dec
add
add
inc
push
add
add
dec
push
inc
push
add
outsb
push
push
push
dec
outsb
add
insb
push
js
inc
push
add
push
jne
add
add
add
add
pop
addr16
outsb
dec
push
pop
outsb
inc
dec
jo
jae
je
imul
addr16
dec
pop
add
add
push
js
dec
push
add
add
inc
jp
data16
add
add
add
imul
push
jne
popa
add
add
pop
add
add
add
add
gs
inc
jno
arpl
add
ja
add
inc
jp
inc
add
add
outsb
ja
js
add
add
addr16
add
push
push
push
dec
add
push
je
add
inc
outsb
add
dec
data16
je
push
jbe
add
jns
add
dec
inc
pop
add
jns
add
add
addr16
je
jo
add
js
add
je
pop
add
add
add
imul
add
inc
inc
push
outsb
dec
jbe
fs
push
jne
dec
inc
bound
jno
insw
jb
add
add
inc
insl
inc
inc
popa
add
add
outsb
add
add
dec
dec
push
outsl
add
push
push
jbe
add
imul
add
dec
jo
dec
jo
pop
arpl
dec
pop
add
jae
add
outsb
inc
dec
ja
insl
jne
bound
pop
outsl
add
jae
push
push
push
fs
imul
add
jne
add
dec
dec
bound
jp
pop
inc
jne
push
push
imul
dec
jae
jno
add
push
push
jo
je
add
jb
bound
add
outsl
bound
push
jp
push
dec
push
ja
push
dec
addr16
inc
js
gs
add
add
push
push
jns
add
jne
push
pushw
add
add
jbe
inc
je
push
insw
add
jne
jp
dec
jb
bound
add
arpl
add
dec
js
gs
ja
je
dec
push
jo
add
add
push
jno
push
inc
add
push
jo
js
imul
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
andl
call
call
mov
call
mov
call
call
call
mov
mov
push
pushl
pushl
call
add
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
je
call
pushl
call
push
call
pop
pop
ret
cmpl
je
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
je
call
pop
ret
pushl
mov
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
push
call
mov
pushl
pushl
call
pop
test
pop
je
mov
test
mov
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
shl
mov
add
andl
mov
mov
inc
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
lea
mov
mov
mov
mov
mov
addl
inc
inc
cmp
jl
xor
mov
lea
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
leave
ret
push
push
push
mov
mov
test
je
mov
add
cmp
jae
lea
cmpl
je
push
call
mov
add
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
pop
ret
push
call
call
cmp
mov
je
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
push
mov
pop
pop
ret
xor
pop
ret
call
mov
cmp
je
push
call
orl
ret
mov
movl
movl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
mov
cmp
je
push
mov
test
jne
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
push
pushl
call
pop
ret
jmp
jmp
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
xor
cmp
push
mov
jle
mov
push
push
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pushl
call
pop
pop
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
mov
xor
mov
cmp
je
add
inc
cmp
jl
mov
shl
cmp
jne
mov
ret
xor
ret
push
mov
pushl
call
pushl
call
pushl
call
pushl
call
pop
ret
push
push
mov
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
push
call
pushl
call
pop
add
cmp
jl
pushl
call
pushl
call
pushl
call
pushl
call
pop
pop
ret
push
mov
mov
push
cmpl
lea
jne
push
push
call
mov
pop
test
jne
push
call
pop
push
call
cmpl
pop
push
jne
call
mov
jmp
call
pop
push
call
pop
pop
pushl
call
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
pushl
push
call
push
call
ret
push
mov
test
je
push
call
push
call
pop
test
pop
je
push
push
call
push
call
add
pop
ret
push
call
pop
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
push
ja
push
call
push
call
push
mov
call
add
test
je
mov
jmp
test
jne
push
pop
add
and
push
push
pushl
call
pop
pop
ret
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
sub
push
push
push
push
call
pushl
call
mov
pop
cmp
pop
mov
jne
xor
jmp
test
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
push
pop
cmp
jne
push
andl
pop
xor
mov
cmp
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
andl
push
pop
xor
mov
lea
rep
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
push
call
pop
mov
mov
jmp
andl
xor
mov
stos
stos
stos
jmp
cmpl
je
call
call
jmp
or
push
call
pop
mov
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
adc
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
adc
pop
adc
push
adc
dec
adc
inc
adc
cmp
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
adc
mov
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
inc
add
inc
add
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
les
inc
add
adc
aam
inc
add
adc
in
inc
add
adc
hlt
adc
pop
adc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
adc
add
adc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
push
call
push
mov
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
mov
ret
mov
cmp
jbe
xor
ret
push
mov
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
push
push
push
lea
shl
push
pushl
call
test
je
or
jmp
mov
xor
cmp
mov
mov
jle
jmp
xor
mov
push
push
call
test
jne
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
jmp
xor
push
mov
mov
mov
xor
pop
cmp
lea
rep
jl
push
pushl
call
test
jne
mov
xor
lea
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
incl
lea
cmp
jl
test
jne
cmp
jg
cmp
lea
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
andl
lea
mov
mov
andl
lea
mov
cmp
mov
je
mov
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
mov
cmp
jne
cmpl
je
mov
cmp
jge
mov
shr
or
or
jmp
add
mov
shr
or
or
cmp
jne
mov
mov
cmp
jne
cmp
jne
incl
addl
cmpl
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
mov
cmp
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
push
call
mov
mov
push
mov
call
pop
mov
pop
pop
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
sub
mov
sub
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
sub
dec
sub
inc
sub
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
sub
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
sub
add
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
inc
add
inc
add
sub
add
sub
add
sub
add
sub
add
sub
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
inc
add
sub
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
lods
add
fisubrl
add
add
mov
add
add
add
test
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
add
ds
add
mov
add
mov
add
mov
add
scas
add
scas
add
lret
add
scas
add
subb
add
scas
add
fs
add
pop
scas
add
dec
scas
add
inc
scas
add
sub
add
add
add
hlt
scas
add
loop
add
enter
mov
add
lcall
add
add
push
scas
add
xor
add
and
add
add
add
call
test
add
dec
test
add
sub
add
push
test
add
or
add
add
add
lods
stos
add
fisubrl
add
add
add
adc
add
and
add
xor
add
dec
stos
add
pop
stos
add
outsb
stos
add
jl
add
mov
add
cmpsb
stos
add
mov
stos
add
fsubrs
add
add
add
jo
add
pusha
lods
add
dec
lods
add
cmp
add
lods
add
add
add
hlt
stos
add
loop
add
into
stos
add
mov
stos
add
lcall
add
add
outsb
stos
add
bound
add
dec
stos
add
ds
add
xor
add
add
add
jae
add
je
add
add
xorb
add
adc
lods
add
fisubrl
add
scas
lods
add
mov
lods
add
add
add
push
lods
add
inc
lods
add
sbb
add
push
mov
add
add
add
dec
insb
add
mov
dec
shll
les
inc
mov
inc
sbb
mov
inc
mov
imul
imul
iret
and
mov
xor
clc
cs
mov
xor
or
sbb
mov
cmp
sub
mov
int
mov
mov
lds
clc
std
mov
movsl
mov
and
push
adc
lds
ret
outsb
fsubl
sbb
push
xchg
sbb
andl
icebp
xor
xor
and
subb
dec
stc
daa
inc
int3
cwtl
or
sti
sbb
adc
sub
jg
adc
lds
mov
cli
mov
pop
jecxz
jg
daa
repz
fisubs
jne
pop
xchg
jb
or
mov
scas
jg
cmpsl
or
and
int3
fwait
das
adc
sub
mov
jl
adc
in
shll
ss
xchg
leave
faddl
rcrb
cmpsl
inc
push
pop
fisttps
cltd
pop
xchg
mov
out
or
adc
aad
movsb
lahf
jns
int
jmp
fsubrp
mov
push
adcl
xor
hlt
jbe
push
cmp
or
les
cmp
mov
fsubr
push
cmp
insb
pop
roll
and
adc
iret
inc
pop
jae
out
adc
mov
clc
mov
mov
mov
ljmp
ss
add
xor
and
imul
mov
jbe
repz
mov
add
ficoms
rcrl
xor
insb
ret
ds
cld
jo
test
sbb
in
and
mov
push
out
jp,pn
pop
cs
fisttpl
shr
xchg
pop
cmp
int
call
scas
push
add
mov
or
jo
jp
and
fisubl
mov
mov
cmp
fwait
dec
rol
mov
stos
je
int
leave
sbb
out
lcall
scas
xchg
mov
sbb
popf
stos
es
shlb
ficomps
ljmp
pop
add
fmuls
roll
jno
jge
add
jge
push
stos
sahf
test
sbb
mov
push
mov
sarl
cmp
inc
fdivs
test
pop
or
sahf
fsubrs
dec
testb
imul
aam
test
shlb
stos
mov
add
repnz
frstor
aaa
in
imul
inc
pop
cld
xor
inc
rcll
bound
sbb
sahf
std
push
adc
jge
call
xchg
in
das
cmp
incb
dec
filds
lcall
sbb
adc
mov
stos
pop
xor
gs
sbb
hlt
aam
ss
and
and
xchg
mov
and
dec
add
mov
pop
dec
mov
test
adc
sub
mov
cmpsl
xchg
les
jle
jns
xor
cmp
mov
cmp
dec
xchg
or
sub
stc
xchg
icebp
stc
inc
cmpsl
in
std
sbb
daa
mov
sti
jmp
in
lock
adc
pushf
sbb
lds
mov
fldcw
pop
movsb
cmp
orb
add
enter
mov
push
mov
xchg
aas
mov
sub
mov
sub
mov
out
sti
and
adc
jg
cmp
pop
sbb
daa
mov
lahf
pop
jno
hlt
cmp
adc
idiv
dec
push
sahf
sbb
ret
push
mulb
fwait
mov
test
gs
scas
loop
aas
push
cmp
sub
mov
fnstenv
movsb
push
sbb
jg
or
sbb
adc
mov
xorl
xchg
xlat
clc
jb
push
movl
push
imul
shrb
cmp
push
mov
xor
jo
and
dec
aad
sbb
hlt
push
sti
es
inc
jle
test
jno
push
add
mov
jb
mov
mov
and
enter
int
add
arpl
inc
loope
adcl
in
or
mov
inc
push
fisttpl
cmp
fsubrs
js
xchg
mov
fistpll
jle
mov
pop
fcom
stos
aam
cwtl
push
or
pusha
inc
xchg
cmpsb
lods
lret
fs
xchg
dec
push
mov
sbb
cwtl
ss
and
sti
stc
call
add
cmp
xchg
mov
out
in
inc
inc
xchg
dec
shlb
xor
xor
imul
dec
andl
jl
dec
or
fcompl
mov
mov
ds
repz
in
xor
adc
xor
xor
das
nop
mov
mov
sbb
sub
je
das
dec
mov
cli
dec
or
dec
push
cld
xor
mov
scas
insl
outsl
imul
in
daa
cmp
xor
cmp
pushl
mov
jmp
fidivl
add
inc
lea
shlb
es
lahf
loope
popf
mov
sbb
idivb
mov
jmp
push
mov
outsb
xchg
jb
stos
in
arpl
adcl
les
jp
push
pop
popa
pop
out
aaa
xlat
popf
xor
je
ret
imul
loop
lock
lock
jbe
addr16
mov
lods
jecxz
sahf
xchg
and
out
cmc
mov
ljmp
icebp
xor
fiadds
ds
cmpsb
mov
jg
sti
push
pop
ret
mov
inc
aaa
ja
jmp
xchg
fistl
pop
cmp
imul
mov
adc
mov
cmp
add
das
pop
test
inc
popf
xchg
xchg
test
inc
outsb
and
lret
mov
cs
push
sbb
pusha
cli
es
add
jmp
pop
int3
arpl
jle
out
jl
push
mov
sahf
jne
ds
jmp
inc
add
pop
or
mov
mov
mov
inc
inc
sar
mov
or
andl
sti
cmp
int3
repz
inc
jge
adcb
aam
mov
inc
cmpsb
icebp
loope
addb
xor
outsb
add
cmp
std
xchg
or
pop
out
rcll
lds
decl
iret
int3
xorl
push
ja
js
xchg
sbb
xlat
pop
test
push
adc
push
subl
xchg
dec
dec
add
sub
daa
dec
xor
sub
dec
outsb
mov
lods
scas
aad
jne
stos
pop
cmpsb
aaa
test
daa
xor
aaa
call
xchg
fmuls
flds
or
or
xchg
lock
loope
imul
popf
push
mov
pop
lods
adc
push
jp
popf
lods
mov
jae
sbb
xor
jge
fdivs
in
push
mov
cmc
pushf
jno
test
mov
push
int
or
xchg
fs
push
xor
pop
int3
or
adc
xchg
stc
mov
jno
dec
lods
adcb
sbb
out
test
aaa
fnstenv
insl
cmpsl
lds
cwtl
aas
in
inc
and
lods
ja
mov
fadds
add
push
push
push
sub
or
stos
cld
sub
add
mov
pop
stos
fs
pop
jge
ret
cmp
xor
in
jno
ds
mov
xor
xchg
sahf
or
add
pop
pextrw
insl
leave
mov
adc
mov
dec
out
xchg
add
aaa
jg
test
pop
stos
outsb
shrl
cmp
stc
test
mov
mov
test
sbb
movl
inc
mov
addr16
loope
push
movsl
xor
fisubs
add
adc
stos
push
outsb
sbb
mov
inc
or
hlt
aaa
ficompl
push
inc
cwtl
mov
xchg
notl
lds
scas
int
cwtl
icebp
das
xchg
jae
imul
push
sbb
ja
cli
jae
sbbb
or
scas
movsl
rol
jo
fcomps
aam
mov
aaa
jb
or
sbb
xor
xor
jno
add
iret
lods
or
cmp
in
push
push
out
aas
addr16
mov
arpl
cmp
or
mov
push
dec
mov
sub
jecxz
cmp
mov
ds
mov
sub
sbbb
xchg
aas
pop
and
test
mov
int3
mov
sub
ret
push
inc
cmp
push
mov
cmp
pusha
cmp
insb
cs
call
mov
sub
cli
loop
hlt
fdivrp
xchg
cmc
aaa
fcomps
je
or
rcr
dec
xchg
ret
cld
mov
fmul
adc
lcall
inc
out
push
cmp
pop
sahf
push
ja
mov
jns
dec
in
cmp
dec
shl
pop
xchg
xchg
add
cmpsb
mov
pop
add
movsb
test
insl
mov
and
test
je
or
or
mov
dec
outsb
enter
mov
out
imul
es
mov
sbb
fwait
les
ja
and
push
ret
mov
imul
push
dec
sbb
dec
mov
adc
aad
inc
test
and
mov
call
les
sub
pop
lcall
sub
out
push
inc
lret
lods
and
jge
shrl
push
push
mov
popa
insb
add
leave
pop
fnstsw
adc
sub
hlt
pusha
in
icebp
pop
push
lret
dec
lds
xchg
popf
arpl
cmpsl
pusha
stos
add
imul
loop
out
test
rorl
pop
pusha
mov
jnp
lret
dec
loopne
imul
int
and
orb
ljmp
jae
lods
jmp
jp
repz
push
and
push
pop
pop
adc
jbe
pcmpgtw
mov
stos
sub
lea
les
mov
repnz
imul
hlt
scas
mov
mov
shr
aam
jle
icebp
mov
mov
mov
lock
je
popf
hlt
jno
lcall
mov
ss
dec
pop
fistpll
xor
mov
fidivl
pushf
jae
mov
repnz
mov
lods
aam
jbe
jb
sarb
jmp
xor
scas
imul
dec
mov
cltd
xchg
pop
jp
push
add
sub
pop
mov
rcrb
adc
pop
subb
push
in
dec
inc
dec
pop
in
pop
sbb
cld
cmp
fcmove
pop
xchg
jo
inc
push
sbb
and
push
leave
mov
sub
and
mov
sub
lock
pop
dec
data16
adc
repnz
fstpl
movl
mov
xchg
out
mov
push
into
push
cli
ret
xchg
lea
sub
or
test
scas
xchg
jne
arpl
cmp
jp
push
js
jecxz
mov
insb
inc
mov
cmp
leave
hlt
and
and
fldt
fisubrl
in
pusha
sbb
add
mov
inc
and
add
mov
jl
push
ret
or
nop
xor
push
pmaddwd
sbb
aas
sahf
cmp
mov
xchg
sbb
imul
movsl
in
ljmp
fs
repnz
in
adc
lods
cmpl
popa
mov
or
mov
cmp
and
jg
mov
jae
mov
leave
call
loopne
pop
repnz
test
add
std
xor
mov
mov
xor
sahf
xlat
stc
or
lcall
xlat
push
ljmp
test
adc
stc
mov
subl
shr
mov
jnp
push
lock
adc
add
fsubs
lods
mov
outsl
sbb
jno
push
and
cmpsl
mov
xor
je
decb
push
enter
push
jnp
push
gs
loop
flds
out
cmpsl
push
test
aam
aas
cs
xchg
lcall
add
mov
pop
push
add
test
test
sbb
sub
fdivs
sbb
adc
adc
dec
imul
sbb
pop
dec
pop
lods
cmpsl
test
dec
testl
testl
push
les
pop
push
mov
add
adc
fdivs
cmp
pop
mov
add
out
inc
aam
lods
ljmp
lea
and
pop
or
ret
mov
hlt
out
push
mov
push
sbb
and
sub
outsb
add
shr
jne
pop
xor
scas
jecxz
cmp
cmp
imul
sub
test
daa
or
insl
nop
push
int
mov
xor
insb
inc
add
xor
scas
imulb
repnz
test
inc
cmpb
jo
test
adc
sti
dec
test
mov
enter
sub
jnp
sbb
sub
inc
cmp
jae
adc
out
aas
insb
daa
mov
roll
sub
faddl
xchg
cli
fwait
or
fs
adc
loope
adc
xor
xor
xchg
push
lret
and
sub
lods
push
add
push
jp
jl
out
and
mov
mov
jo
scas
and
adc
stc
loop
xor
inc
mov
sbb
sti
stos
mov
icebp
or
cmp
aad
inc
fisttpl
pushf
add
cwtl
ss
rolb
repz
and
in
sbb
test
or
scas
sbb
push
jns
xchg
and
adc
inc
sub
lahf
in
mov
repnz
pop
and
outsb
aam
test
fisubrl
xchg
lret
sti
cld
xchg
xor
lcall
mov
pop
mov
enter
cmpsl
push
pop
jge
xchg
add
jns
xor
dec
stos
loope
pop
insl
stc
fisttps
mov
cmp
mov
in
dec
dec
dec
es
fistl
cmp
icebp
jge
push
cmpsb
or
push
std
lock
sub
aam
mov
cmp
in
hlt
cli
and
cld
xor
insl
or
js
das
or
or
stc
pop
aad
and
pop
imul
gs
mov
int3
push
cmp
lret
adc
xchg
popa
repnz
pop
mov
mov
add
rcrb
into
jne
fsubp
popa
loop
insb
shll
outsb
jge
xchg
add
push
jb
cltd
lcall
mov
adc
fcmovnbe
test
sbb
mov
hlt
ret
stc
mov
bound
cwtl
iret
outsl
mov
arpl
push
sub
aam
adc
rcrb
adc
pushf
inc
nop
push
dec
adc
clc
and
dec
mov
lods
psubw
sub
push
fwait
adc
push
jle
cmp
add
cmpsl
sbb
cmp
mov
sahf
mov
in
cmp
and
cld
jno
shll
mov
sub
xor
pop
int
daa
xorl
jae
xlat
or
sbb
push
jecxz
jne
mov
cmp
cli
rcrb
lods
xchg
sub
add
push
and
xor
mov
pusha
mov
inc
lods
sub
mov
cmc
xchg
mov
ss
jg
mov
icebp
pop
leave
fcomps
faddl
xor
cltd
push
test
test
pop
in
aam
sbb
adc
icebp
loope
hlt
xchg
in
mov
jle
sahf
arpl
jmp
and
fstp
cmp
aaa
ret
sbb
mov
and
sahf
cmp
dec
adc
sbb
xchg
jmp
test
lcall
movsl
sub
inc
xchg
inc
jmp
js
aaa
ljmp
xor
adc
inc
fsubr
and
sub
test
fstps
xlat
mov
push
daa
sahf
xor
lock
pop
mov
inc
test
cmp
iret
mov
lock
data16
lcall
cmp
sub
lret
cli
sub
mov
stos
xorl
push
jge
js
lock
push
arpl
adc
imul
test
clc
lea
jnp
jle
pop
orl
mulb
mov
scas
cmp
pop
dec
test
test
fisttps
ds
mov
sahf
dec
xchg
pop
fldcw
ja
xor
sub
xchg
stos
out
clc
pop
sub
mov
or
out
fcompl
es
insl
outsb
pushf
into
call
repz
in
dec
lret
in
pop
push
hlt
cs
xor
dec
fdiv
aas
shrb
loope
jne
pop
jge
fwait
jns
push
inc
pop
fdivl
add
pushl
stos
mov
hlt
div
xor
mov
mov
andb
mov
lock
aaa
sbb
xchg
xchg
or
ffree
imul
cwtl
pop
negl
testb
or
jae
shlb
mov
push
adc
xor
enter
stos
cltd
push
dec
adc
pop
fcomps
adc
sbb
in
cs
lock
test
jnp
mov
xchg
es
ds
andl
popa
lock
inc
dec
repz
push
mov
mov
loope
test
cs
ss
out
adc
adc
sub
loop
gs
inc
fwait
imul
mov
xlat
and
jno
js
mov
incb
lods
sarl
test
or
sub
jmp
sbb
push
mov
repz
enter
test
inc
mov
add
and
push
jnp
mov
icebp
sahf
dec
push
lods
pop
repz
jbe
fldt
and
mov
xchg
cmpsb
jo
inc
leave
pop
and
clc
xchg
shlb
scas
cmpsb
pop
fdivrl
ret
rorb
push
dec
jae
and
leave
fmuls
add
cwtl
shlb
sub
out
fs
call
stc
rcrl
sahf
jl
cmp
jge
mov
int
pop
xor
jns
cltd
mov
aam
lret
icebp
xchg
xchg
inc
jb
inc
or
sbb
jp
inc
scas
shlb
xor
xchg
pop
mov
add
insb
and
mov
addr16
xchg
fcmovbe
xor
roll
cs
sub
rcrl
shrl
loop
cmp
mov
mov
mov
repz
pop
sub
cli
jp
mov
cld
xor
lcall
hlt
xor
add
push
sbb
out
xor
test
cmp
sbb
jb
adc
jle
dec
fdivr
mov
sub
mov
and
into
loope
pop
aam
repz
xchg
aas
outsl
lret
iret
adc
cmc
rorb
push
je
xor
sub
fcompl
jl
call
fcoml
add
sarb
sarl
cmp
xor
arpl
push
mov
cmp
and
dec
sub
mov
imul
aad
neg
and
lods
dec
stc
inc
fisubs
test
xchg
xchg
mov
pop
dec
adc
dec
xor
mov
push
test
inc
in
push
cmc
mov
fmuls
mov
inc
ja
in
mov
lcallw
add
or
popa
das
mov
push
mov
shrl
adc
dec
xchg
adc
dec
mov
adc
push
movl
sahf
mov
and
loop
cmpsl
fst
loop
ss
hlt
dec
xor
sub
pop
into
mov
nop
stos
mov
test
scas
fs
daa
push
cltd
lods
mov
ficompl
mov
add
mov
decl
lret
test
jmp
mov
sbb
nop
test
pop
andl
mov
sbb
arpl
dec
js
sbb
outsl
pop
push
xor
adc
xchg
push
push
cwtl
cmp
outsl
xchg
movsb
add
mov
xchg
and
stc
inc
adc
inc
aas
test
mov
pop
stos
dec
insb
add
and
les
sub
lahf
imul
fucomp
adc
push
dec
xchg
daa
pop
out
jo
jg
rorl
mov
or
pop
mov
daa
jecxz
jae
push
push
js
dec
sbb
push
jbe
and
dec
enter
test
or
aaa
pop
nop
dec
out
cmc
cmc
push
xchg
push
cmp
jb
int
xchg
xor
aam
stos
loop
repz
mov
ljmp
iret
nop
dec
cmp
inc
add
jg
js
cmp
repz
cmp
mov
test
loope
icebp
bound
push
xor
or
in
jb
and
int
out
cwtl
sub
repz
mov
imul
adc
lret
lahf
jp
cmc
cmp
pop
in
movsl
out
push
test
pushf
scas
hlt
push
movsb
ret
add
je
cwtl
push
sbb
jl
cmp
mov
sahf
xchg
fcoml
and
adc
ljmp
mov
sti
rclb
xlat
lcall
test
mov
aam
mov
enter
adc
mov
fs
mov
fwait
adc
and
cmp
or
popf
pop
and
sub
pop
mov
push
out
adc
cld
lret
dec
lea
push
add
ficomps
adc
aas
push
add
ja
xchg
sub
ja
mov
scas
scas
bound
jns
insl
mov
add
push
daa
ss
shrl
daa
mov
les
test
cmpsl
ja
aas
jo
cmp
insl
cmp
add
and
daa
adc
js
cli
rclb
jp
xlat
jae
test
inc
cmp
fcmovb
mov
adc
jae
nop
jbe
inc
and
cld
inc
lea
js
mov
iret
fcmovne
pushf
bound
fldenv
and
addr16
cmp
fsubp
push
cmpsb
cmp
jnp
idivl
inc
dec
mov
jo
loop
cmp
sbb
or
daa
mov
jb
pop
shl
fcmovnbe
fdivl
leave
jmp
test
hlt
ss
aaa
out
movsb
sub
dec
jg
lret
jge
mov
sbb
mov
lahf
adc
mov
adc
aad
ds
sahf
jbe
bound
xchg
enter
shll
lret
xlat
jb
add
stos
and
jae
push
mov
je
in
leave
enter
mov
mov
mov
es
push
lods
pusha
rol
call
inc
jg
mov
iret
mov
sub
jbe
dec
inc
push
cmp
and
lods
sbbl
or
pop
outsb
push
ja
sub
lods
addr16
xor
test
ficompl
mov
push
xor
fndisi(8087
dec
cli
adc
lcall
push
sub
inc
cli
adc
and
and
cwtl
aaa
outsl
je
test
sbb
into
mov
or
xchg
mov
xchg
and
leave
jbe
mov
inc
dec
jns
gs
push
or
pop
inc
in
xor
inc
std
cmp
inc
xchg
jecxz
jecxz
int
dec
es
cmp
dec
fsub
loop
cmp
mov
stos
pop
cmc
cmc
pop
fsubl
sbb
sub
push
and
add
adc
mov
xchg
shlb
add
ret
ss
add
cmp
cmp
lods
push
jle
pop
cli
sub
sbb
push
jo
repnz
pop
dec
lea
cs
push
mov
mov
ficoms
int
inc
mov
div
loopne
adc
addb
hlt
lds
push
add
sub
or
push
imul
add
insb
inc
dec
negl
jbe
jle
test
add
das
cmpb
fwait
lahf
sbb
xchg
inc
adc
leave
imul
test
fwait
in
inc
mov
dec
sub
push
scas
sar
int3
lcall
shlb
stos
mov
mov
fcmovnb
mov
xchg
mov
pop
lret
hlt
loop
js
in
sbbb
ja
mov
test
cmp
mov
and
sbb
aas
mov
dec
cmp
stos
add
movsb
cmp
fsubrp
push
das
das
rorb
and
icebp
and
push
daa
daa
sbb
mov
jae
or
mov
or
int
imul
sub
mov
stos
add
call
sbb
ljmp
sub
adc
andb
or
cltd
xor
lods
adc
jbe
push
sbb
fstl
loope
jbe
adc
mov
not
mov
pop
icebp
fstpl
ja
mov
out
cmp
dec
into
mov
dec
and
mov
push
cmpsb
xchg
xchg
xor
cmp
arpl
jne
pop
sti
or
pop
and
leave
push
lret
clc
sbb
sub
adc
push
ds
icebp
mov
push
repz
cmp
mov
add
cmp
push
pop
lods
add
mov
lret
pop
pop
loope
sbb
sti
add
dec
jecxz
xor
sub
ds
mov
gs
scas
pop
jb
dec
xor
xlat
pop
call
xchg
data16
cmp
aad
pop
leave
data16
mov
pop
cltd
cmc
fisttps
mov
ret
mov
xchg
in
or
mov
mov
push
sub
stc
xchg
mov
jnp
xchg
in
add
lret
rolb
imul
shrb
xchg
daa
xchg
pushf
fs
js
pop
mov
xor
lock
jne
mov
dec
ljmp
in
mov
xchg
fisubrl
mov
daa
mov
out
mov
sbb
inc
fcoml
cmc
fsubr
xchg
cmp
icebp
daa
jl
inc
fwait
cmpsl
and
insb
jb
gs
and
fildll
and
notb
cmp
pop
arpl
insb
adc
outsl
rorl
addl
mov
push
jmp
xchg
mov
adc
jbe
adc
sub
call
bound
lcall
dec
pop
fs
std
cmp
inc
cmp
jbe
subl
mov
xchg
arpl
iret
vpaddq
push
pop
mov
or
push
outsl
pop
movsb
or
jecxz
mov
ret
nop
or
inc
roll
test
inc
push
add
test
mov
in
scas
pop
pop
mov
mov
in
dec
xor
dec
mov
pop
mov
ret
pop
or
ds
das
scas
out
push
and
mov
or
pop
out
cld
cmp
cltd
cltd
jo
mov
pop
jge
out
sbb
das
fmulp
cwtl
cli
jne
pop
std
mov
jbe
ret
popa
mov
ret
mov
cmpsb
ja
inc
je
sub
aad
mov
jno
dec
in
stos
xor
pop
lock
lret
cld
adc
in
test
arpl
pop
lret
in
mov
mov
cmp
sti
stc
data16
rol
and
mov
sar
pop
lahf
out
push
pop
mov
into
push
test
xchg
cmpb
sti
push
sti
xchg
or
test
loop
shlb
fildl
sub
inc
cmp
stc
out
adc
dec
sub
cmp
outsl
and
cltd
jb
mov
jl
push
dec
lock
push
shrl
push
cmpsb
or
jno
sub
movups
loop
dec
jecxz
fdivrs
aam
in
je
sbb
jl
cs
mov
adc
iret
or
out
mov
pushl
or
pop
loope
data16
mov
mov
and
clc
xor
ljmp
aad
in
outsl
fdivl
loop
out
leave
mov
lods
std
pop
adc
mov
fildl
mov
fdivs
mov
ss
in
mov
sbb
lds
mulb
scas
mov
cmpsl
notl
shlb
sub
add
or
loop
adc
lret
inc
inc
iret
movsl
testl
lds
ss
sarl
or
in
sar
mov
stos
dec
jae
imul
add
orl
dec
dec
pop
and
sub
mov
add
lret
fisubrs
es
and
mov
sbb
pop
mov
sub
jns
inc
push
jmp
dec
fstpt
sbb
shlb
pushf
lahf
hlt
mov
movsb
rclb
jne
mov
xor
inc
test
sti
mov
call
mov
xor
and
dec
mov
and
iret
mov
lods
nop
jnp
gs
jnp
outsl
int3
jo
adc
repz
and
adc
jle
pop
cltd
daa
das
adc
out
xchg
mov
dec
pop
dec
xchg
pushf
sub
mov
xchg
sbb
sbb
sub
mov
jns
sub
insl
pushf
leave
pop
mov
xchg
andb
fidivl
xchg
loopne
add
ja
jae
lcall
ficomps
scas
pop
test
adc
dec
dec
dec
jns
cli
fdivrs
adc
sti
and
mov
pop
inc
lds
add
ja
imul
jno
push
pop
icebp
test
add
in
xchg
insb
xchg
ret
xor
adc
add
shl
inc
push
mov
pop
mov
xchg
lahf
adc
aaa
lds
mov
inc
out
ret
stos
adc
lcall
iret
dec
mov
ljmp
bound
ja
adc
xor
jp
xor
dec
push
es
jae
push
cmp
dec
lahf
shlb
sub
cmp
ss
lret
cmp
adc
scas
imulb
pop
rcrb
loope
cmc
and
and
mov
pop
mov
cltd
dec
inc
mov
sbb
mov
xchg
arpl
mov
popf
xchg
leave
inc
xor
je
cmp
cwtl
arpl
bound
dec
inc
fistps
push
mov
xor
jl
or
imul
hlt
loope
or
fs
dec
inc
add
loope
js
stos
mov
vphaddbw
cmp
loopne
lret
pop
mov
inc
mov
lods
loopne
ja
jmp
fdivl
repz
mov
push
aaa
cltd
xchg
push
jae
adcb
sub
pop
sbb
xchg
jns
mov
xorl
jae
adc
clc
push
jbe
aaa
fisubrs
pop
xor
aaa
sahf
insl
loopne
cld
mov
sahf
jl
cwtl
xor
sub
enter
push
add
sbb
jmp
jnp
or
js
xor
cld
out
mov
out
ret
sub
fucom
push
sub
das
stos
jbe
sti
out
inc
and
inc
sbb
imul
mov
je
sub
test
cmpb
xchg
movsb
add
push
sbb
lret
cmp
jo
clc
scas
mov
ja
das
adc
imul
and
jge
lret
mov
dec
or
mov
lea
stc
loopne
jmp
mov
stos
dec
bound
inc
movsb
lret
jbe
notb
lds
mov
cmc
outsl
mov
inc
arpl
pop
and
adc
lret
sub
scas
jp
pop
loope
iret
xchg
std
mov
jns
xchg
add
insl
jno
or
fsub
insb
rol
sub
enter
pop
add
mov
dec
xor
sbb
les
fcmovne
lods
or
inc
fidivrl
sub
inc
adc
or
hlt
dec
pop
in
mov
mov
dec
int3
addl
jmp
push
mov
sbb
fiaddl
fnsave
imul
sub
inc
xchg
mov
sbb
and
imul
cmp
clc
inc
or
stos
mov
lods
fwait
add
cmp
mov
sbb
inc
mov
mov
xchg
xlat
dec
pop
mov
frstor
jmp
mov
sub
jnp
xor
aam
or
push
mov
ds
call
mov
rcll
push
mov
dec
push
xlat
pop
cmpxchg
xchg
aam
jecxz
xor
std
ficoml
xchg
pop
daa
fcomps
iret
ja
xchg
in
sbb
mov
out
je
pop
rclb
in
ret
sarl
cltd
jns
loop
lcall
cli
loopne
push
fcoms
xchg
mov
mov
test
fucomi
lds
inc
fdivrp
mov
push
lahf
ret
mov
or
ss
daa
clc
mov
dec
cmp
sbb
imul
int3
pop
shlb
lds
xchg
imul
test
xchg
int3
cwtl
xor
jmp
jns
mov
clc
pop
imul
stos
inc
inc
xor
std
xorl
faddl
jl
mov
inc
jecxz
xchg
add
xchg
das
inc
cltd
mov
pop
mov
lcall
loopne
mov
fldenv
mov
ljmp
adc
insl
or
loop
leave
outsl
std
lsl
dec
pop
or
cmp
cmp
lock
adc
sbb
push
cli
pop
fwait
jne
xchg
loop
stos
lds
mov
subb
test
lret
mov
mov
and
sub
dec
jae
mov
rcrb
pop
fldl
testb
outsl
int3
pop
push
movsl
ds
or
lods
or
bound
rorb
clc
jg
out
stos
add
orb
outsb
xchg
loope
mov
shl
or
jnp
scas
fst
leave
mov
xchg
lret
popf
xchg
test
addr16
jnp
popa
arpl
inc
mov
push
add
test
sbb
scas
and
dec
fistpll
mov
fdivr
mov
shlb
xchg
mov
ljmp
lock
push
inc
mov
adc
sbb
aaa
pop
test
pushf
rcrb
mov
ffree
sub
cld
int
jmp
adc
jg
push
leave
mov
js
icebp
scas
dec
mov
mov
aaa
add
adc
jg
xchg
mov
pop
or
cmp
jno
or
not
xchg
cmp
jns
adc
cmp
jns
repz
lods
daa
cltd
xor
sbb
mov
xor
xorl
movsl
xchg
mov
jmp
clc
hlt
xor
xlat
call
cli
cmpsl
dec
add
inc
jnp
add
xchg
es
out
outsb
cmp
xor
xchg
repnz
aas
inc
in
addr16
rdtsc
mov
insl
mov
xor
in
mov
pusha
out
adc
jge
adc
xor
dec
mov
dec
and
jnp
lea
push
inc
adc
mov
mov
out
stos
outsb
stc
inc
jno
addl
pop
out
cmc
pop
pop
aam
jo
shrl
pushf
test
mov
stos
outsl
push
mov
mov
aam
pop
pop
adc
cmpsl
fwait
lock
mov
imul
xchg
jmp
cmovb
ds
or
inc
push
lahf
mov
mov
xor
test
insl
jo
or
outsb
cld
out
fcoml
push
jnp
cs
fs
mov
lahf
stos
shl
repz
push
cmp
xchg
pop
cmp
adc
mov
jle
or
pop
xor
inc
out
jmp
jae
inc
fstl
add
aas
mov
xchg
test
dec
mov
inc
test
pop
rcrl
pop
lods
int
push
das
mov
mov
pop
lret
mov
divb
fwait
dec
in
loope
repnz
bound
jge
int
nop
addr16
add
das
test
and
test
inc
jecxz
cmp
mov
nop
lcall
add
dec
push
push
xchg
push
mov
sub
out
std
xchg
pmuludq
lcall
out
xor
fwait
xor
mov
imul
jb
imul
jg
sbb
add
or
ret
insl
jmp
xorl
xchg
adc
aas
add
das
inc
popf
xchg
adc
push
sbb
sarb
xchg
inc
loop
mov
outsl
or
pop
jns
sbb
in
add
fs
inc
cmp
or
popf
jae
and
mov
rorl
pop
subl
xor
or
filds
fdivrs
aam
out
and
out
mov
sbb
sarl
mov
pop
mov
jbe
xlat
fisubs
sbb
mov
inc
js
rolb
push
call
jnp
pop
outsb
and
mov
mov
bound
test
sarl
test
aam
sbb
ffree
outsl
sbb
adc
ljmp
sbb
dec
gs
insl
ficomps
mov
aaa
or
mov
and
lock
pop
loope
dec
mov
in
aaa
dec
pop
push
inc
in
and
cmc
aaa
mov
sub
dec
mov
icebp
pop
mov
dec
vdivsd
mov
ljmp
call
cmp
adc
mov
fstpt
repnz
cltd
inc
cli
xlat
addb
mov
mov
js
xlat
jno
add
int3
mov
js
jnp
aas
cwtl
call
fs
mov
push
adc
pusha
lahf
cmc
mov
stos
ss
imul
xchg
cmc
popf
lds
push
add
fsubrl
mov
push
xor
or
out
mov
scas
mov
or
icebp
jae
mov
mov
adc
rorb
pushw
cmp
or
inc
mov
aad
push
scas
loopne
fstps
adcb
jecxz
adc
scas
and
jecxz
hlt
or
and
push
xor
mov
xchg
movsl
cli
cmp
cmp
iret
sub
lea
sbb
add
div
and
out
lods
or
mov
dec
xchg
lock
xor
fldl
stos
xchg
add
jge
mov
rcrl
jg
stos
jge
cmpsb
jmp
pushf
iret
xor
sbb
pop
loopne
rcll
or
test
fisubrl
repnz
mov
push
popa
xor
nop
test
rorb
xlat
jmp
cmp
sub
dec
adc
cld
test
dec
popf
call
inc
out
xor
adc
inc
dec
xchg
pop
push
lret
aam
roll
aam
mov
hlt
das
mov
pop
mov
dec
xchg
pop
mov
jbe
inc
sub
mov
pop
push
mov
loop
pusha
sbb
lock
push
cmp
test
add
xchg
loope
xchg
push
push
into
lods
faddl
jmp
sbb
jl
int3
adc
adc
std
adc
loope
lods
negb
xor
gs
lcall
push
enter
push
movsl
jbe
stos
shlb
std
sub
push
rol
push
pop
push
insl
mov
stos
push
mov
lods
sbb
mov
add
ss
inc
ret
cmpsl
dec
popf
scas
ficomps
cltd
inc
out
lahf
mov
mov
push
sub
pushf
mov
xchg
dec
imul
stos
enter
jl
incl
aam
sub
sarl
inc
ljmp
adc
xor
mov
mov
jo
push
aas
ret
jmp
push
add
inc
mov
fistpl
lret
push
cld
aam
fiaddl
sub
add
call
pop
ror
movsl
lods
mov
xor
leave
cmp
cmp
pop
mov
add
mov
push
in
pop
dec
jge
pop
test
and
rorl
pop
cmpsb
dec
mov
mov
mov
xorl
inc
mov
pop
aad
xchg
cli
and
lods
jmp
inc
dec
cltd
mov
int
sub
xchg
cli
jecxz
fbstp
cmp
inc
jmp
lcall
cmp
hlt
dec
sbb
pushf
out
out
adc
jne
out
hlt
mov
jno
neg
jmp
pop
fs
sbb
and
xchg
aad
mov
sbb
push
cmp
sbb
sbb
jbe
mov
pop
sub
lods
in
and
pop
and
into
scas
mov
sarb
fnstsw
daa
and
aaa
jno
mov
mov
mov
add
lret
mov
ss
cwtl
hlt
push
jle
fldl
fwait
inc
xchg
add
sbb
mov
ret
sub
xor
fldcw
pop
mov
cmpl
mov
pop
push
mov
lds
mov
hlt
lock
daa
dec
pop
mov
mov
jge
sub
testb
mov
inc
xor
cmp
outsb
mov
mov
insl
mov
inc
xchg
dec
push
subw
push
pop
lods
sub
cmpsl
xor
and
inc
cmp
sbb
pop
adc
jmp
push
aas
inc
paddusw
js
incl
jae
pusha
push
jl
push
cwtl
inc
data16
imul
pop
push
lock
xchg
mov
jns
pop
sbb
or
sub
jmp
leave
fs
cmpl
out
ljmp
mov
dec
mov
dec
ror
add
xchg
clc
mov
aam
pusha
addl
cli
aad
fildll
cld
sbb
fdivp
mov
imul
insb
mov
repz
adc
xchg
movsl
mov
loope
push
mov
or
in
mov
into
push
dec
and
mov
fldcw
xchg
jne
int3
pop
addr16
push
pop
mov
sbb
sarl
movsl
leave
dec
add
aad
add
push
int
mov
xlat
cli
fcoml
std
ret
jb
or
push
fdivs
dec
jno
mov
push
and
mov
fwait
jg
and
sbb
mov
push
xor
stos
ljmp
fwait
stos
or
es
mov
mov
adc
shl
cmp
ds
cmpsl
push
filds
daa
xorb
sarb
testl
mov
sub
pop
stos
int3
mov
mov
mov
sbb
ljmp
shll
std
or
test
push
leave
mov
roll
mov
mov
stos
inc
mov
shlb
dec
mov
or
push
xchg
pop
mov
fidivl
push
pop
fsubs
popf
xchg
mov
imul
or
jl
cmp
rorl
popf
xchg
jmp
fldt
adc
fs
push
mov
xor
stos
xchg
jmp
out
stc
cmp
xchg
mov
push
arpl
mov
push
sbb
cld
in
cmp
push
popl
fidivs
bound
out
push
push
add
xlat
repnz
inc
lds
sub
add
mov
push
xchg
insl
xor
sahf
lcall
push
mov
xchg
cmp
movsb
imul
sbb
pusha
loop
arpl
int
repnz
add
loop
das
loop
mov
jbe
sub
push
das
jne
add
test
adc
ja
pop
loope
pop
mov
subl
test
sbb
iret
shrb
hlt
inc
sbb
aad
sub
cmc
push
mov
or
leave
out
into
jmp
push
in
imul
pop
mov
fcmovnbe
pop
mov
jnp
imul
add
test
or
mov
mov
xchg
fadd
dec
into
fnstsw
sbb
sbb
lret
mov
push
mov
in
adc
cmc
aad
pushf
repz
mov
subb
lahf
js
popa
add
mov
cmp
in
in
xchg
mov
stc
test
movsb
outsb
push
dec
dec
sbb
shll
push
notb
pop
xchg
lds
das
lock
xchg
mov
pop
push
inc
push
loop
aad
xor
jae
cmp
xchg
jle
xorb
and
sub
or
jge
aaa
cwtl
shlb
pop
adc
and
sub
in
fnstenv
adc
in
cmp
imul
pop
or
call
cmp
aas
out
aam
lcall
and
add
arpl
data16
lea
sub
leave
mov
lret
sbb
inc
mov
out
xchg
jne
pop
rcl
sub
xor
jmp
push
sub
sub
scas
hlt
pop
mov
xchg
inc
xchg
mov
fbld
cs
lahf
and
pop
dec
pop
divb
xchg
repnz
leave
orl
int3
and
lcall
enter
add
das
imul
xchg
rorl
mov
dec
mov
cmp
mov
mov
or
push
push
jns
push
inc
mov
pop
or
and
pop
push
sub
jge
xor
ds
inc
xchg
mov
sub
jae
jae
orb
xchg
icebp
sub
out
inc
xchg
mov
out
mov
imul
incl
sti
push
in
bound
xor
repz
sahf
into
sahf
cmc
add
push
inc
lret
movsb
in
push
jbe
sti
dec
dec
cmpsb
sbb
shll
icebp
jmp
test
aam
cld
pop
pop
or
or
scas
xor
cmp
add
xlat
enter
xchg
imul
push
fadds
pop
sbb
jnp
idivb
sbb
je
out
push
fbld
or
shlb
js
pop
dec
std
sti
or
pop
gs
xchg
daa
pop
add
pop
decl
pushf
mov
incb
lcall
jmp
lret
push
test
scas
lock
test
shll
out
or
out
loope
addr16
adc
push
daa
jo
jo
jnp
lret
data16
dec
test
inc
lret
leave
scas
ffree
mov
mov
dec
mov
mov
scas
push
loope
adc
icebp
push
fimuls
add
jge
ja
aas
stc
cli
in
mov
dec
xor
mov
xchg
sbb
dec
imul
mov
jno
jmp
pop
dec
mov
push
or
dec
std
aad
dec
aam
jl
or
arpl
popf
add
sub
inc
lock
xchg
or
add
jmp
mov
stc
push
xor
jnp
lcall
rcr
dec
ljmp
stc
in
imulb
rcll
sub
jns
daa
int
incb
pop
mov
add
mov
and
adc
clc
imul
sbb
cmp
cmpl
rorl
push
xchg
sbbl
cs
pushl
xchg
xlat
test
sti
or
mov
xchg
scas
push
test
or
call
xchg
mov
or
sub
jp
xchg
ret
fwait
lds
push
test
sub
pop
lea
mov
mov
clc
mov
add
jno
add
imul
lods
xor
mov
xlat
ror
in
orb
das
popf
lods
enter
add
mov
lea
scas
mov
outsb
mov
or
aam
xchg
add
test
jg
nop
fstpl
sub
mulb
adc
inc
jp
mov
inc
aaa
movl
cmpsb
inc
push
and
cltd
xchg
sahf
into
mov
lcall
leave
pop
out
shrl
scas
fs
jae
jp
pop
mov
out
inc
mov
push
push
xchg
cli
pop
inc
sti
cli
out
push
or
cwtl
into
loopne
out
pop
rclb
shlb
mov
push
cmp
daa
push
sub
xor
sbb
inc
inc
insl
movsl
cmp
xchg
or
cmp
dec
scas
pushf
xor
gs
rcr
mov
inc
inc
mov
pushf
xchg
push
ja
out
cli
push
in
out
and
ficompl
lods
push
cld
or
std
popf
ret
rcrb
negb
or
cmp
inc
mov
jl
daa
popa
call
inc
mov
sub
lahf
stos
inc
mov
jnp
int
sbb
shl
push
adc
mov
xor
pop
sbb
mov
fidivl
add
sbb
mov
mov
xchg
sbb
jge
lret
xor
inc
inc
mov
mov
pop
outsb
sbb
popf
out
mov
mov
mov
xchg
cli
dec
cmp
cmp
jmp
mov
in
sub
sub
pop
loopne
push
jl
mov
sbb
sub
push
int
and
sub
fsubs
lret
cltd
arpl
movsb
pop
cs
jmp
cs
enter
xor
lods
pop
mov
push
xchg
fucom
dec
push
cmp
inc
dec
das
test
in
call
xorl
mov
dec
insl
pop
fld
inc
lahf
dec
push
jecxz
or
jae
adc
sub
adc
ljmp
lods
mov
lea
rorb
push
or
cmp
fisttpl
xor
push
add
lods
cmc
xchg
test
pusha
and
aam
mov
inc
notl
mov
jle
jecxz
seta
inc
aam
iret
cmc
sub
mov
shrl
scas
dec
cwtl
es
cld
scas
inc
pushf
jg
cltd
xor
aaa
ret
pop
popf
sti
fwait
insl
lock
cld
fwait
sbb
sbb
movsl
aam
jne
lock
test
stos
pop
leave
fidivl
jl
aas
outsb
jae
scas
in
vunpcklps
cltd
daa
add
testb
out
test
mov
gs
fwait
inc
fstpl
subb
inc
in
inc
iret
jl
pop
into
cmp
rcl
cwtl
and
enter
test
int3
roll
add
jnp
loope
lret
pop
shlb
add
jb
arpl
flds
pop
sub
pop
lea
pop
sbb
mov
dec
outsl
dec
sarb
stc
jecxz
or
test
stos
mov
adc
mov
xchg
in
inc
aad
sahf
xor
pushl
lcall
adc
mov
sbb
fs
arpl
call
xor
mov
jb
xchg
test
pop
or
push
stos
popa
jbe
jmp
popa
xor
mov
fwait
inc
stc
mov
outsb
fs
lret
pop
loope
or
xor
out
sub
cli
aad
push
mov
dec
mov
ss
and
lcall
fcomps
mov
out
xchg
or
stc
mov
cmpsl
pop
push
adc
ficompl
repnz
int
push
fnstsw
cli
js
cwtl
sbb
int3
mov
push
pop
adc
cltd
nop
sub
pop
stc
dec
xor
lahf
leave
add
out
xchg
aaa
lret
inc
sahf
jp
cmpsb
es
xor
jecxz
mov
xorb
out
orb
pop
and
jle
xchg
push
lea
pop
popf
movl
pop
ret
lret
pop
js
mov
mov
push
pop
and
addr16
cmpsb
or
decb
xor
push
lds
adc
cmp
sbb
sub
push
mov
add
icebp
test
xchg
addl
push
lods
mov
sbb
icebp
mov
mov
loope
jl
ss
inc
nop
sbb
jo
dec
aas
and
adc
leave
rclb
sub
xor
inc
xchg
das
adc
inc
mov
inc
push
adc
adc
repz
adc
scas
mov
pop
add
stc
out
xchg
pop
outsb
mov
call
pop
mov
fstpt
mov
adc
shrl
pop
sbb
movsl
je
xchg
xlat
or
jae
inc
cld
mov
mov
sbb
lahf
loopne
and
push
fsubr
cmpsl
sahf
in
fmuls
mov
and
and
and
sti
mov
subb
cmp
pop
roll
pop
mov
push
out
xor
test
xor
jns
es
std
cmp
int
js
sbb
adc
mov
sahf
repz
dec
jnp
int3
jmp
addr16
adc
mov
sub
outsl
or
lret
jb,pt
bnd
push
in
and
xorb
lods
aam
xchg
rcl
cli
dec
in
std
xor
or
cmp
dec
add
mov
cmpsb
jo
ret
jno
inc
jae
ljmp
inc
sbb
pop
mov
in
sub
push
stos
imul
ret
jae
and
mov
and
roll
repnz
or
jb
mov
in
pop
lcall
pop
pop
pushf
lcall
mov
test
mov
cs
sbb
mov
arpl
cmc
push
cmp
faddp
push
dec
push
pop
xchg
pop
rorb
jo
loopne
scas
fiaddl
sub
mov
add
pop
es
cmpsb
mov
les
pop
movsl
sbb
in
push
sub
adc
sub
dec
jnp
mov
je
jb
movsl
arpl
jne
xchg
jo
cs
cwtl
mov
or
test
push
stc
cmp
hlt
int
enter
out
inc
mov
push
pop
sbb
xorb
add
add
or
mov
fisubrs
pop
cmp
ljmp
in
sub
mov
call
cwtl
mov
and
jmp
lock
fdivl
mov
adc
or
int3
out
shl
mov
fs
adc
pop
add
gs
mov
pop
shlb
aaa
mov
popf
stos
inc
mov
add
sub
xchg
pop
in
out
mov
lret
adc
xchg
xor
stos
mov
pop
and
call
imul
je
inc
movzwl
ror
std
pop
cli
mov
or
sub
dec
mov
test
push
pop
push
sti
rclb
mov
outsl
cmpsb
ja
add
inc
popa
dec
jb
mov
cltd
xor
mov
lret
in
outsb
add
mov
mov
cmp
sbb
rorl
les
lods
rcrl
xor
pop
jno
push
xchg
insb
aad
dec
dec
push
inc
dec
and
mov
mov
mov
add
movsb
add
lret
jg
push
or
add
movsb
outsb
pop
or
or
xor
xor
insl
mov
jo
or
popa
push
xchg
sub
test
out
out
xor
adc
ds
jg
and
fsubs
jle
adc
push
inc
out
in
scas
cmp
pop
mov
out
faddl
fwait
stos
mov
popa
arpl
jae
mov
cmp
jb
test
daa
pop
xor
cmp
cmp
fistpl
add
fsubrl
dec
push
pop
xchg
sbb
aad
in
in
inc
lods
in
fdivs
mov
push
ficompl
adc
mov
push
ss
les
mov
dec
mov
call
xchg
inc
xchg
hlt
sti
mov
cmp
xchg
xchg
in
pop
cld
add
cs
in
push
fsub
xor
pop
mov
hlt
inc
ss
or
lods
rcll
and
pop
out
cmpsb
int3
inc
dec
mov
lods
add
and
jae
mov
jg
xor
jnp
cmp
sub
xorb
in
mov
les
or
or
rorb
lahf
adc
outsb
fdivs
not
sbb
lahf
in
jb
or
into
xchg
push
jge
jl
int3
xchg
mov
push
pusha
shrb
andb
clc
ss
pop
xchg
pop
test
inc
sbb
outsl
out
pop
fisttpll
lds
pop
pushf
out
bound
fldcw
call
dec
or
adc
fcmovu
xor
insb
gs
xlat
clc
jo
fwait
insl
ljmp
sub
hlt
movsb
int
sbb
xchg
jmp
les
mov
pop
dec
cmc
mov
cld
xlat
inc
dec
pop
aad
popf
icebp
sbb
mov
mov
into
pusha
ret
mov
jb
mov
clc
inc
add
push
ljmp
jmp
push
jp
sub
cmpsl
je
scas
sub
mov
mov
int3
jl
sbb
pop
mov
push
jbe
aam
neg
pop
jns
sub
push
jl
sahf
adc
jbe
dec
cld
mov
out
inc
xchg
call
add
ret
or
out
scas
sub
pop
inc
aaa
cli
imul
addr16
jg
pop
add
nop
and
pop
in
inc
dec
xor
and
mov
or
mov
fadds
sbb
ja
sbb
aaa
xor
nop
sar
or
test
fistpl
lcall
dec
mov
sbb
das
insb
sbb
scas
fisubl
js
lret
aad
lret
push
and
cmp
imul
push
ljmp
push
add
incb
mov
out
xlat
jmp
iret
std
loop
jmp
dec
push
adc
adc
pop
sbb
jo
xchg
inc
loope
push
or
loope
adc
xlat
inc
pop
xor
test
mov
cmp
mov
adc
cltd
push
jmp
cmp
xchg
repz
push
ljmp
sbb
leave
adc
shrl
in
inc
cmp
outsb
leave
outsl
ss
mov
jbe
pop
in
mov
push
sbb
ljmp
inc
inc
fstpt
dec
cmp
stos
inc
adc
sti
push
lock
sub
outsl
xchg
out
ja
sti
dec
jne
inc
pop
insl
repnz
lcall
jmp
gs
or
fimuls
aaa
mov
and
xor
xor
pop
mov
xchg
repz
mov
cld
sbb
lcall
pop
inc
and
in
xorl
push
sbb
add
pop
add
sbb
add
pop
mov
pop
clc
imul
dec
movsb
xchg
xor
xor
xchg
dec
outsb
fildl
xchg
stos
int3
push
mov
or
xor
push
fcmovnb
test
repnz
or
rcrb
jmp
dec
mov
out
lret
cmpsb
xchg
dec
jnp
addr16
mull
enter
jp
jo
mul
cmp
sub
insb
test
loop
mov
pop
cmp
or
dec
out
mov
mov
mov
repnz
lods
push
adc
inc
leave
ja
call
cmp
cmpsl
mov
in
dec
loope
inc
and
outsb
xlat
push
call
popf
call
mov
scas
sub
test
imulb
mov
call
ror
bound
pusha
cmpsl
mov
iret
or
xor
pop
cld
sahf
and
loopne
clc
lock
and
mov
adc
push
xor
mov
out
andb
cmp
mov
jl
lret
hlt
push
out
mov
fistpll
push
cmpl
and
push
imul
lahf
shrl
mov
pop
mov
into
out
add
sbb
dec
jl
shl
dec
mov
rorb
frstor
ror
pop
cmp
or
jg
sti
push
sahf
hlt
jg
aam
push
mov
xor
stc
mov
lods
test
je
hlt
jne
rclb
sub
mov
outsb
pushf
icebp
push
xor
pop
scas
orb
push
mov
test
mov
lods
clc
test
or
mov
and
je
inc
push
pop
cld
fsts
push
inc
inc
pop
les
dec
fucom
cmc
pop
dec
pop
lret
pop
data16
dec
sbb
cmp
lret
leave
mov
stos
fldcw
jl,pt
or
mov
add
movsb
cltd
or
outsb
adc
pop
ret
pop
int3
in
xor
inc
pop
imul
clc
iret
imul
je
adc
daa
lods
lret
sbb
sub
push
cld
or
jl
xchg
movsb
push
and
loope,pn
daa
adc
inc
sahf
inc
mov
pusha
adc
adc
sub
and
cmp
test
loopne
or
lods
jle
xchg
mov
mov
imul
sub
jo
fistl
dec
xchg
cmc
mov
xchg
icebp
push
subb
fidivl
fisttpll
lea
pop
cwtl
movl
mov
ret
add
test
popa
repnz
push
jbe
test
test
aas
test
fwait
pop
cmp
mov
pop
inc
xor
sbb
ss
pop
xchg
jmp
adc
fsubl
scas
repnz
mov
cmp
aas
pushf
stos
scas
or
push
lret
lock
iret
inc
inc
and
cmp
inc
orb
stos
movsl
daa
mov
pushf
aad
sub
insb
outsl
jno
aas
mov
mov
movsl
jns
lods
cli
pop
hlt
out
jecxz
in
shrb
rorl
add
scas
jge
sti
dec
inc
mov
mov
aas
cmc
hlt
xchg
fcmovnb
jne
mov
or
divb
lret
pop
mov
leave
jl
mov
sub
daa
movsl
and
in
cs
stc
clc
push
jb
inc
xlat
mov
push
imul
jp
dec
inc
mov
add
sbb
repz
mov
pop
cld
ficompl
or
dec
xlat
jecxz
mov
add
xchg
mov
and
lcall
test
jae
aaa
imull
aas
sbb
jno
mov
lcall
es
inc
xor
xor
cmpl
jo
jae
out
fdivs
aaa
sub
mov
insb
jl
lds
xchg
add
and
cmp
jo
stos
scas
int
push
aaa
inc
addr16
or
dec
lods
and
add
add
jae
cmpl
jg
in
lret
xor
mov
push
or
shlb
and
or
lea
pop
jle
lea
pop
mov
pushf
push
cmp
imul
in
push
insl
ss
arpl
repnz
aaa
inc
adc
fwait
repz
sbb
mov
or
adc
mov
mov
sub
or
inc
sbbb
or
sti
jo
sub
loopne
in
aas
adc
push
lret
enter
call
sub
ficompl
int
inc
into
mov
cmp
jo
gs
fstpl
mov
jle
mov
enter
shrl
push
pop
adcb
push
dec
popa
orl
orb
add
orb
popa
repz
xor
idiv
jno
ja
cmp
cmp
xor
mov
adc
dec
jg
pop
push
xchg
push
sbb
cwtl
jne
xchg
cltd
outsb
pop
mov
mov
jecxz
push
test
inc
push
push
mov
scas
std
lea
add
in
sbb
adc
mov
lock
pusha
mov
les
and
ja
inc
repz
add
adc
popa
outsl
mov
into
inc
rcll
mov
rclb
pop
mov
movsl
loop
xor
data16
ja
add
cmp
inc
movsl
sarl
add
ret
mov
mov
cmp
or
fs
aas
add
js
xor
sub
lretw
fnstenv
sub
fsts
sub
mov
popl
mov
repnz
push
popf
mov
popl
addl
pop
int3
dec
in
and
xchg
cmp
daa
or
jo
data16
stos
pop
push
mov
sbb
jbe
mov
jne
pushf
lods
adc
sub
inc
shll
dec
lahf
push
pushf
rcrl
sub
xchg
mov
or
cmpsb
xchg
imul
dec
xor
adc
les
fildl
lds
push
cmp
and
addr16
mov
mov
jle
loop
sub
loopne
jno
cmpsb
xchg
dec
mov
scas
icebp
mov
push
scas
lea
jno
lock
leave
loop
pop
sti
ss
xor
inc
mov
lret
and
jle
mov
jmp
sub
add
add
arpl
cwtl
or
cltd
notb
mov
subl
pop
lea
or
aas
lret
adcb
or
ficoms
xchg
mov
cltd
dec
cmc
mov
adc
push
cmp
fmull
mov
xchg
iret
and
insl
xor
inc
out
mov
and
insb
mov
cmp
jecxz
addr16
dec
push
rcll
cmp
movsb
outsl
xchg
xchg
cltd
shrb
js
shrl
fcomi
jmp
in
jp
dec
sub
js
aad
and
mov
or
aad
ljmp
daa
mov
cmp
push
mov
mov
jnp
nop
movl
arpl
cmpl
loopne
dec
dec
push
mov
dec
lods
xchg
or
icebp
das
in
jnp
xlat
xchg
xchg
aam
fsts
ret
lcall
push
or
in
and
outsl
jno
test
in
inc
lods
xchg
pop
lods
mov
pushf
faddl
push
fbstp
push
mov
lds
xlat
sbb
mov
inc
fidivl
mov
divl
je
xor
test
popa
mov
pushl
ret
xchg
xchg
jbe
dec
push
or
daa
push
fisubs
mov
xchg
enter
add
into
or
xchg
push
les
das
push
mov
add
call
div
in
lret
rcl
jbe
popf
mov
stc
out
lods
insb
push
cmpsl
jge
mov
sbb
adc
jbe
orb
stos
ret
notl
aas
or
mov
or
xor
test
add
rorl
cltd
arpl
sahf
mov
jns
jg
push
sub
sbb
idiv
movsl
js
loope
xchg
add
cmp
leave
cmp
cli
iret
adc
xor
test
mov
push
xchg
pop
bnd
dec
inc
push
xorb
cli
inc
pop
push
clc
out
int3
cmc
js
xor
push
bound
cmp
jmp
push
cld
outsl
cmp
lock
out
push
xor
jl
in
dec
mov
mov
and
in
jp
arpl
stos
js
das
movsb
insl
jb
out
xor
mov
and
fistl
repz
pop
ret
inc
ret
bound
enter
mov
and
mov
xor
out
bound
repz
add
into
or
sti
push
mov
test
mov
add
xor
sbb
sbb
cli
xchg
xchg
test
dec
jle
push
pop
pop
mov
mov
or
mov
aaa
xchg
rorl
fs
mov
lcall
pop
mov
in
sahf
mov
xchg
icebp
fwait
lods
sbb
mov
dec
cmp
ret
and
or
jle
fucomip
xor
movsl
sub
cmp
mov
dec
leave
inc
aaa
push
push
xchg
cmpsl
add
rcl
sub
inc
ret
push
addl
out
xor
daa
jmp
xor
sub
shlb
dec
mov
mov
sub
es
push
or
inc
cmpsb
std
lcall
mov
test
call
xchg
incb
inc
add
lcall
jmp
fidivrs
shr
imul
mov
jo
inc
fadds
mov
popf
sbb
repz
scas
test
and
xchg
mov
rcl
int
daa
ja
cs
jmp
xchg
pop
sar
addb
in
pushf
lcall
cli
lcall
aam
mov
fcompl
fcompl
mov
jnp
mov
popa
push
ss
dec
mov
mov
mov
add
stos
mov
ds
out
pop
add
insl
xchg
xor
jno
and
ja
or
jmp
dec
jmp
std
or
fildl
jb
push
aas
inc
addr16
nop
repnz
mov
mov
cmp
rorl
lcall
xor
dec
mov
addl
dec
cld
pop
and
es
stos
out
test
mov
sbb
pop
mov
mov
imul
mov
ds
orb
into
mov
sbb
cwtl
mov
popfw
pop
movl
js
nop
fidivl
sbb
add
jns
repz
sbb
push
into
and
mov
jb
scas
inc
popf
orl
xchg
xchg
mov
das
cltd
pushf
mov
lods
call
inc
jmp
in
shrb
int
push
sub
xor
aad
sbb
jo
cmp
cltd
and
sub
je
sarb
or
in
pop
adc
mov
adc
mov
mov
ja
fsubrs
mov
add
mov
xor
imul
xlat
out
imul
leave
or
pushf
jae
mul
in
stos
ret
sbb
xchg
das
jmp
xorl
jns
sub
xchg
pop
push
adc
cmpsb
or
xchg
jge
mov
dec
mov
cwtl
pop
arpl
cmp
rolb
gs
inc
movsb
out
pop
jo
dec
mov
jmp
test
add
mov
in
cld
xor
sbb
mull
inc
pop
adc
movsl
sub
sarb
lods
adcl
pop
adc
stos
dec
sbb
mov
adc
int3
roll
loop
in
add
ret
mov
inc
sub
in
outsb
cld
mov
cmp
pop
cmp
mov
in
aaa
bound
sub
push
cmp
pop
leave
xor
mov
jmp
imul
push
sbb
leave
jl
cmpsb
test
inc
xchg
sbb
cmpsb
fbld
or
scas
subb
ja
adc
test
push
add
test
iret
dec
arpl
xchg
ds
ret
mov
sbb
arpl
adc
or
ret
lahf
xlat
sti
out
sub
sub
repz
pop
push
cltd
fnstsw
loope
sub
inc
rcr
inc
sbbl
fsts
cmp
jg
loope
sub
dec
std
xchg
loopne
lods
inc
pop
aad
lea
cld
mov
or
call
jmp
xchg
mov
ja
dec
or
scas
jle
cmpsb
cmp
add
mov
fmuls
call
loope
and
cmpsl
movsb
ficoml
test
out
ja
xlat
xlat
fwait
jmp
mov
push
inc
xor
mov
stos
in
repz
pop
push
mov
rcrb
pusha
push
les
repnz
cltd
push
cmc
pop
cltd
jno
sbb
jb
pop
test
jge
in
cmp
aaa
jae
movsb
js
test
mov
mov
dec
or
js
xor
push
and
mov
icebp
fstl
fbld
and
js
mov
int3
inc
sbb
dec
out
daa
and
lcall
lret
jnp
js
mov
fsubrl
xor
pop
mov
sbb
cli
or
lcall
mov
pop
sub
sbb
cmc
dec
fs
imul
gs
cmp
push
cmpb
mov
adc
fistl
push
loop
cli
inc
int
mov
test
cld
les
hlt
ja
cmp
hlt
inc
push
mov
orb
cmpb
data16
mov
push
cli
dec
mov
cmpsb
xchg
popl
mov
aad
int
pop
mov
call
sub
in
add
mov
or
adc
xor
dec
push
mov
out
sub
sbb
mov
fists
dec
loope
es
rolb
mov
repnz
lock
test
xlat
mov
dec
shrl
dec
push
xchg
dec
leave
iret
pop
hlt
loop
add
xchg
aas
jp
call
sahf
cmc
pop
xrelease
mov
ret
xchg
mov
jmp
daa
jl
push
mov
pop
sub
dec
dec
lcall
xor
dec
std
xor
out
loope
scas
or
fwait
push
mov
lods
aad
clc
repz
adc
mov
mov
ljmp
pop
cmpsl
xchg
adc
test
lods
cmp
dec
push
shl
ljmp
scas
adc
dec
dec
sbb
pusha
cmp
iret
push
in
push
std
hlt
imul
mov
test
sub
xchg
leave
mov
pop
mov
lret
rolb
lret
push
sbb
fdiv
ljmp
sbb
mov
mov
in
ret
mov
daa
push
movsl
or
addr16
arpl
ljmp
arpl
adc
cmp
mov
mov
push
cmp
xchg
lds
and
inc
pop
push
je
adc
mov
sub
xchg
gs
pop
repnz
daa
jns
aaa
sar
dec
stc
dec
in
jmp
push
je
lret
pop
mov
leave
andl
loope
adc
ret
scas
pop
dec
add
sahf
inc
lcall
lock
lret
mov
int3
insl
push
ljmp
dec
mov
pop
add
jmp
aaa
aas
adc
icebp
pop
add
js
fst
pop
jo
js
ja
vmread
adc
daa
xor
dec
in
sbb
daa
repnz
jns
test
mov
add
mov
mov
push
jae
and
dec
cmp
push
cmpsl
or
adc
xchg
jmp
fimuls
inc
jp
or
neg
out
ljmp
adc
movsl
pop
js
cmp
jb
test
xchg
inc
movsl
sub
push
lret
xchg
aas
mov
out
cmpl
dec
out
fbstp
pop
jp
mov
jbe
pop
sub
adc
pop
loopne
push
mov
push
push
mov
pusha
gs
std
cmp
lahf
and
push
dec
mov
stos
shl
and
add
push
xchg
mov
lods
push
jg
xchg
negb
add
loop
fstps
aam
out
aaa
loopne
pop
and
mov
cmp
and
or
inc
in
mov
insl
dec
xchg
xor
jo
mov
fildll
scas
cmp
insl
jb
ficomps
aas
test
jge
roll
and
mov
rsm
cmpsb
push
push
jne
adc
jl
jns
or
sub
lret
popf
mov
sahf
xchg
xor
js
xchg
cmp
es
leave
inc
push
cmp
cltd
popf
inc
or
daa
jp
mov
arpl
in
inc
cmp
xor
mov
fsubr
jp
mov
cmc
add
sti
fsubrs
dec
out
cltd
xor
pushf
cltd
out
jg
fwait
mov
add
cld
adc
push
dec
push
mov
dec
mov
xchg
jmp
cmp
scas
arpl
xchg
mov
jge
or
testb
pop
bound
adc
movsb
jecxz
das
ja
out
sub
aas
cmc
pop
repz
sub
adc
movsb
push
add
inc
or
inc
add
es
out
jp
and
pop
sbb
push
jecxz
dec
dec
and
fneni(8087
lret
and
daa
js
andb
jno
repz
fisttps
add
jle
nop
movsb
jl
pushf
lcall
add
or
dec
sbb
out
inc
scas
adc
test
jmp
or
push
dec
iret
pop
pop
fistl
inc
js
je
jge
mov
stos
ljmp
int
das
popf
lods
mov
cld
push
fs
sub
sub
sahf
jbe
and
sub
dec
cld
lds
jnp
enter
test
fisttps
xchg
push
xorb
push
mov
xlat
mov
fmulp
call
push
adcb
cmc
and
adc
mov
aas
pop
jg
push
fwait
add
xor
fnop
mov
fs
mov
push
pop
mov
inc
jmp
inc
ljmp
cmp
mov
pop
inc
cmpsb
xchg
mov
sub
sahf
xor
arpl
fiaddl
stos
movsl
sbb
or
pop
lds
or
jmp
push
jle
pop
aaa
lea
pop
stos
mov
mov
mov
mov
adc
ret
or
lcall
sub
in
call
into
in
push
pop
notl
mov
mov
loope
lret
cmp
adc
shlb
movsb
addr16
and
push
cmpsl
push
push
pop
popf
mov
mov
enter
sbb
mov
testb
bound
xchg
add
jae
jno
xor
outsb
and
push
sub
ja
out
add
data16
sbb
mov
cmp
stos
les
je
bound
cmp
dec
fists
xchg
push
ss
and
imulb
pop
inc
pop
cwtl
pop
jo
pop
push
fs
mov
mov
pop
cmpl
dec
push
xor
aaa
outsl
mov
movsl
xchg
and
fcoml
add
punpckhdq
out
insb
push
jl
rcll
mov
xchg
mov
ret
dec
movl
pushf
ljmp
dec
and
ficomps
ja
int3
out
sbb
lcall
cmp
jnp,pn
sbbl
loope
dec
dec
dec
cmc
and
fidivl
add
push
stos
dec
nop
int3
fnstsw
out
aam
out
jg
push
pop
pop
inc
mov
fdiv
inc
rcll
jecxz
or
pusha
nop
mov
sbb
cmpb
std
jp
jmp
sbb
notw
xchg
es
cli
jp
mov
push
pop
jge
push
jbe
jbe
mov
sahf
pop
jmp
int3
cmp
ljmp
stos
push
enter
loope
int3
frndint
cmpsl
in
or
pop
or
sub
xchg
es
and
ljmp
pop
push
jmp
cld
js
jne
mov
add
mov
mov
notb
jmp
jge
adc
adc
rol
and
and
outsb
incl
pop
es
es
add
jne
fistpl
adc
dec
sbb
fmulp
in
mov
sub
lret
mov
jmp
sarb
jecxz
cmp
mov
push
hlt
aad
sub
scas
cwtl
push
xorb
jbe
and
and
out
sar
cld
mov
das
jle,pt
push
xchg
call
push
pop
stos
shrb
mov
pop
out
test
add
rcl
clc
movsb
stos
rcrl
push
push
push
fisubrs
cmp
mov
jo
fsubs
rclb
and
out
pop
dec
aaa
jp
mov
sahf
out
fistpl
out
fistpll
ds
fimull
bound
mov
inc
xor
inc
test
pop
dec
lret
leave
sub
fbld
rorb
sahf
cli
in
hlt
jns
push
lock
inc
pop
xor
sub
clc
sbb
dec
sub
out
jle
sbb
popf
jmp
jne
popf
add
arpl
mov
sub
lret
lret
pusha
daa
dec
sub
sbb
sbb
and
test
pop
xor
mov
cmp
jl
push
sub
out
iret
sbb
and
sahf
daa
dec
loope
mov
pop
push
fldt
push
xchg
sbb
pop
imul
stos
test
cmp
gs
cmpsb
call
sbb
std
in
inc
jno
adc
jle
shl
jo
shlb
jmp
push
fwait
cmp
cmp
stos
xchg
dec
sub
xlat
jns
shrl
sbb
sub
hlt
add
xor
jo
and
push
dec
repz
and
push
inc
cli
mov
ljmp
and
push
and
ja
and
inc
icebp
jbe
adc
push
cwtl
popf
xor
adc
push
cmp
hlt
push
jp
bnd
mov
xchg
mov
xlat
test
mov
sbb
pop
pop
nop
stos
adc
pop
sbb
hlt
xor
mov
iret
into
scas
gs
cmp
loope
leave
cli
mov
ja
movsl
nop
es
pop
mov
push
je
adcl
es
mov
call
jnp
sub
push
xor
inc
stc
sub
gs
jae
pop
or
or
mov
ja
call
ja
xchg
adc
pop
imul
cltd
daa
xor
shr
andl
arpl
jge
ljmp
fucom
mov
cmpb
push
int
sbb
std
and
notl
popa
mov
inc
and
pop
fs
outsb
enter
inc
jns
clc
and
lock
lret
adc
icebp
xchg
roll
cltd
add
movsl
arpl
pop
xorl
mov
test
bnd
inc
lods
enter
std
xchg
mov
mov
xchg
scas
in
sbb
adc
lcall
or
or
ds
mov
daa
fldenv
call
inc
cmp
xchg
int3
xchg
hlt
and
in
enter
mov
fcompl
jbe
imul
sub
rolb
cmp
jae
mull
adc
hlt
push
adc
jno
pop
mov
aaa
and
jl
jae
xchg
dec
cvtdq2ps
cli
cs
push
ljmp
jne
jo
adc
int
mov
stos
sub
mov
jbe
mov
sarl
mov
sbb
mov
add
pop
sub
dec
loop
je
out
aad
adcl
mov
push
sbb
xor
sahf
inc
mov
outsl
mov
imul
xor
mov
jp
fcomps
inc
ljmp
jae
mov
mov
mov
mov
fwait
das
xor
cmp
mov
dec
ljmp
mov
jne
outsl
loop
fistl
and
xchg
inc
enter
xchg
jae
adc
ret
repnz
and
xchg
dec
pop
jg
stos
test
add
add
mov
fdivrp
enter
lret
xor
add
dec
out
test
xor
outsl
sti
in
mov
js
mov
bswap
xlat
xchg
jmp
lods
push
lock
into
adc
and
push
cmp
sbb
dec
add
push
inc
rcrb
ja
cli
jns
push
mov
dec
fdiv
xor
lock
jp
test
dec
stos
jbe
xchg
stc
les
xor
jns,pn
xchg
lds
mov
fwait
rolb
in
sbb
inc
shlb
xchg
xor
sub
jg
repz
mov
xor
pop
xor
push
daa
add
mov
push
les
dec
sarb
int
fstp
push
addr16
mov
lcall
rcrb
jbe
inc
xlat
lea
testb
dec
add
mov
jo
mov
aaa
push
dec
cmp
sbb
mov
rep
xor
pop
cmpsl
pop
mov
pusha
ss
fnstsw
rcl
xchg
loop
mov
pop
lock
lahf
bound
ss
adc
shl
or
mov
cmpsl
adc
xor
xor
mov
je
pushf
inc
or
fidivrs
mov
cmp
clc
push
jl
stos
cmp
fistps
and
mov
maxps
lret
andb
dec
inc
arpl
dec
push
mov
mov
add
sub
clc
dec
lret
mov
xchg
gs
stos
out
push
adc
pop
fstps
shlb
xchg
push
and
jg
inc
or
or
sbb
or
or
sbb
xchg
inc
dec
ss
xor
je
stos
or
pop
mov
add
es
or
testl
fs
addb
xchg
scas
lret
js
pop
mov
imul
adc
shl
jae
arpl
ret
mov
cmpl
lcall
fsubrs
xor
jo
test
pop
lret
push
or
pop
dec
inc
sub
cli
dec
or
push
pusha
adc
sbb
cmp
xchg
mov
xor
data16
jmp
mov
mov
push
fxam
and
pop
pushf
lds
shrl
mov
stc
adc
mov
or
adc
cs
sub
pop
mov
push
inc
or
jnp
stc
mov
gs
cwtl
je
and
insl
arpl
xchg
lahf
mov
nopl
mov
jmp
scas
lods
push
cmpsl
pop
pushf
dec
cwtl
xlat
in
call
jns
mov
inc
iret
or
cs
popa
int3
decb
cs
push
xchg
xor
sub
xchg
or
pop
int3
aam
dec
mov
jmp
test
push
inc
mov
lcall
hlt
in
fdivrs
xor
fwait
daa
gs
dec
rol
sub
jmp
mov
fwait
sub
mov
push
stc
sahf
adc
pop
mov
fs
test
push
andl
out
jno
sub
cmpb
jg
push
mov
add
xor
lret
and
mov
or
cmpsl
cwtl
aam
jle
push
jo
mov
cltd
sub
sub
jmp
test
aad
addr16
sbb
shll
cmp
imul
cmp
and
imul
int3
pop
lods
cli
or
neg
insl
insb
negb
ja
fnsave
ss
sub
dec
arpl
sbb
push
repnz
lcall
mov
dec
jg
out
sbb
mov
call
lret
sub
inc
mov
dec
xor
mov
addl
xchg
dec
jbe
and
push
sub
sub
xor
jnp
mov
movsl
inc
pop
ss
jns
xchg
repz
inc
shrl
pop
andl
and
sbb
jae
out
mov
enter
or
push
aas
pop
negb
in
mov
call
adc
jae
lcall
mov
mov
cli
cmp
dec
lcall
xchg
inc
dec
imul
sbb
sub
or
and
mov
lods
in
xchg
lcall
inc
outsl
out
jae
xor
iret
sti
or
popf
in
lds
stos
push
mov
mov
mov
and
fists
clc
mov
push
mov
jae
xchg
cmpsl
cmp
addr16
add
sbb
pop
fldt
dec
outsb
adc
adc
cmp
xor
rorb
xchg
pop
mov
in
mov
ds
movsl
fisubl
mov
fbstp
jbe
lret
ficoml
add
lods
loope
jp
push
cmpsl
mov
pop
xchg
jp
dec
loopne
imul
dec
pop
faddp
xchg
cmp
or
test
addr16
sarl
adc
inc
sbb
add
btl
cmp
jle
int3
xor
mov
mov
lock
fnstenv
fwait
mov
push
aaa
xorl
sbb
cmp
add
push
je
add
jnp
lcall
leave
sbb
jle
mov
cmp
leave
dec
ret
in
mov
or
cmpsl
jno
clc
fdivrs
and
jb
ljmp
mov
sub
repz
pushf
ffree
sub
test
mov
cmp
ret
lods
xchg
enter
xor
fisttpl
inc
dec
mov
icebp
jl
jle
inc
fidivs
hlt
cli
mov
xor
cwtl
jbe
insb
pusha
sub
popa
push
outsl
mov
jecxz
dec
pop
or
inc
cmc
and
rorb
xchg
mov
aaa
sahf
mov
icebp
adc
xchg
ljmp
int3
or
cld
ficomps
inc
xor
je
ds
fmul
setle
push
cmpl
lock
sub
in
sahf
repnz
dec
insl
scas
ljmp
call
add
cmpsl
pop
hlt
enter
inc
inc
sahf
jp
insl
and
pop
shr
mov
cs
mov
adc
idivb
inc
push
jnp
add
adc
sub
fucomp
cld
insl
pop
mov
mov
mov
into
cmpb
iret
popa
sub
cmp
cmp
fsts
pop
pop
cwtl
cld
rcl
mov
mov
test
and
inc
mov
dec
jge
inc
cli
jnp
fsub
rcrb
add
mov
fildl
add
sbb
dec
gs
mov
jno
or
sbb
sti
pop
das
hlt
and
xchg
jl
gs
ret
jo
inc
pop
pop
mov
xor
fwait
enter
ss
ds
ret
fcomps
sbb
andl
aam
lock
js
in
push
sbb
mov
insb
popf
icebp
call
icebp
push
pop
in
in
call
push
xchg
dec
popa
sahf
push
lahf
pop
cwtl
sub
jo
in
push
or
je
inc
shrl
cltd
mov
xor
fadds
cli
aas
pushl
aas
sub
aas
or
jbe
sbb
ljmp
push
loopne
or
fsubrl
out
in
pop
inc
int
out
jnp
rcrb
and
loopne
punpckhdq
push
xchg
push
jbe
inc
mov
and
hlt
pushf
add
in
pop
and
jo
fwait
lods
mov
mov
popa
and
jmp
lea
ds
pop
add
mov
es
out
lods
jno
add
movsb
adc
imul
adc
xor
xchg
mov
subl
sbb
imul
or
cmpl
sarb
rol
push
add
or
xor
lods
imul
pop
loop
xlat
fucom
sub
push
or
aaa
js
push
movswl
lahf
or
ss
out
rcrb
jp
jbe
pop
repz
cwtl
sub
jo
scas
cmpl
fildll
xchg
popf
jne
popf
inc
js
xchg
in
addr16
cld
jp
loope
shlb
xchg
mov
xchg
sub
cmpl
cmpsl
call
sub
ja
stos
and
ljmp
mov
lods
clc
outsb
inc
xchg
enter
pop
and
mov
add
inc
les
cmp
jp
lods
cmp
xor
ss
loope
orl
pop
jl
dec
cmp
add
mov
mov
mov
cmp
xor
push
paddsb
cs
mov
or
xor
push
int
mov
jns
out
andl
cli
and
sbb
xchg
adc
adc
push
popf
jmp
xor
lods
or
mov
lret
in
pop
xor
push
cld
push
into
cltd
bound
cwtl
xor
sbb
and
shll
or
shll
and
push
dec
mov
hlt
xchg
test
inc
fildll
repz
xchg
mov
cmp
ficoml
je
and
cmp
nop
adc
out
or
push
nop
adc
push
cmp
dec
lds
iret
popf
push
or
mov
mov
mov
inc
add
dec
imul
out
xor
leave
add
mov
pop
dec
outsb
xchg
sbb
psraw
adc
mov
mov
test
in
mov
add
mov
sbb
repnz
scas
or
aas
leave
dec
out
push
push
data16
xor
shll
sbb
sarl
lods
aas
ss
push
dec
cmpsl
aas
js
sbb
pushf
cmp
push
test
aas
inc
push
or
repz
nop
lock
push
sbbl
fucomip
push
into
inc
or
or
or
pop
jo
scas
jae
inc
icebp
dec
rorl
and
mov
ret
scas
cmp
jnp
cwtl
cmp
add
adc
jnp
cmp
aad
mov
repnz
scas
movsb
or
movl
dec
mov
cmpsl
sub
dec
adc
pop
andb
test
xor
je
faddl
outsl
cmp
cmp
xchg
sbb
cltd
mov
pop
fldt
call
mov
jbe
js
jbe
push
cld
pusha
in
xor
in
pop
cs
and
call
sub
cmpsl
aad
test
jno
lods
aaa
lcall
mov
sbb
push
push
cld
outsb
jno
in
sbb
mov
scas
adc
push
cmp
jle
ret
adc
jecxz
or
xchg
and
into
loope
sub
ljmp
pop
hlt
orl
jmp
push
fnstenv
filds
or
push
mov
ret
data16
lcall
pop
out
lcall
enter
icebp
fcoms
les
mov
xchg
or
xchg
scas
int
iret
fstl
mov
js
jl
cmc
cltd
rcll
pop
faddl
mov
insb
leave
push
push
loope
mov
rorb
xor
mov
push
pop
lods
jbe
scas
sbb
add
call
xchg
pop
push
rclb
inc
call
inc
jp
scas
jge
idivb
jnp
mov
mov
sbb
pusha
outsb
xor
ds
andb
or
movl
push
enter
cmp
xchg
je
mov
sbb
not
dec
dec
dec
inc
nop
dec
push
or
and
in
pop
jb
movsl
push
cmp
clc
add
add
out
inc
stos
fwait
out
mov
add
xor
mov
mov
xchg
push
or
insb
mov
in
sub
pushf
jb
add
ljmp
sbb
movapd
les
test
fistpll
pop
or
pop
aad
push
aaa
pop
push
sub
sub
push
outsb
pop
cmp
mov
add
shlb
cmpsl
out
data16
inc
mov
jmp
dec
mov
and
and
je
jb
jns
fwait
mov
fisttpll
into
xchg
xchg
push
test
sub
push
movl
pop
add
cltd
push
jbe
in
lcall
cmp
popa
adc
adc
and
std
jmp
insb
mov
dec
push
loop
scas
mov
xchg
lods
out
and
out
imul
pop
outsb
xchg
test
jno
xchg
xchg
dec
push
jp
ds
xchg
sbb
push
xlat
push
sbb
or
sub
std
int3
fs
mov
loope
pop
in
sub
push
sub
push
jae
cwtl
imul
or
mov
mov
inc
stc
push
in
sub
popa
lea
xchg
jmp
fidivl
imul
xlat
clc
sbb
jmp
movsl
sahf
xor
fildll
repz
inc
arpl
cmc
xor
fs
xchg
int3
sbb
pushf
imul
lret
pop
stos
ja
int
pusha
jnp
jge
fincstp
aas
and
fwait
mov
iret
dec
pop
or
lret
test
pop
scas
pop
in
ljmp
pop
pop
sti
repnz
push
addr16
shrl
rcrb
popf
xchg
push
nop
imul
xchg
jge
mov
insl
insb
sub
cli
sub
cld
push
pop
push
mulb
push
out
rorb
fstpt
xchg
sub
shll
jbe
sbb
subl
mov
leave
pop
popf
and
cmpsl
mov
addr16
incb
jae
call
inc
pop
popa
iret
push
inc
xor
insb
stos
jbe
jecxz
jl
xchg
insl
fisubrs
pusha
xchg
ret
imul
shll
stos
add
popf
jb
test
inc
rol
test
or
insb
mov
cmp
je
cld
and
and
lcall
sbb
arpl
and
nop
mov
dec
mov
push
nop
mov
adc
mov
lcall
or
sbb
inc
cmpsl
movsb
arpl
repz
mov
addl
ds
add
pop
add
mov
rorw
lret
mov
push
push
mov
test
pop
xor
test
jo
mov
mov
jp
cli
arpl
mov
dec
out
ss
jne
das
sub
jmp
cmp
pop
jno
repnz
or
enter
lret
pop
cmp
cmp
fisubrs
out
mov
add
loope
sti
int
pop
es
out
push
cmpsl
jl
mov
sub
xchg
nop
adc
jnp
mul
sub
xchg
sub
or
or
and
das
xor
push
in
lea
pop
inc
jp
jp
cld
push
cs
jmp
sbb
mov
xchg
fstl
and
mov
outsl
mov
insl
cmpsb
xchg
inc
mulb
add
or
push
push
es
lods
push
fisttpll
mov
inc
pop
test
pop
cmpsl
mov
pop
mov
dec
pushf
xor
das
mov
ljmp
sub
sub
dec
in
lds
stos
shlb
iret
andl
prefetchwt1
inc
imul
ds
insl
cmp
cmp
adc
subb
aas
or
int3
mov
in
push
fs
subl
movsb
sub
hlt
jns
mov
add
pop
std
push
cs
inc
sub
repz
mov
ret
cmp
cmp
ljmp
jmp
sub
add
or
mov
stc
arpl
jne
cld
cmc
inc
jbe
into
mov
rcrl
mov
xchg
xlat
addb
test
push
lret
sbb
push
xor
iret
xchg
pop
adc
adc
pop
adc
mov
cmpb
mov
cmc
ljmp
pop
jmp
xchg
dec
push
inc
cmp
daa
ret
clc
pop
push
test
add
mov
sub
and
sub
jo
mov
or
dec
repnz
jl
sub
jle
outsb
adc
lret
push
cmpsl
cmp
adc
or
pcmpeqd
movsb
in
xchg
ss
or
movsb
test
xorl
ja
mov
and
jae
int3
mov
ret
sub
fwait
inc
ret
test
icebp
jns
sbb
xor
mov
jbe
test
mov
xchg
jl
cmp
push
out
popf
inc
dec
fidivrl
and
sti
cwtl
jl
add
add
add
jge
inc
add
jne
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
pushl
daa
inc
add
daa
inc
add
jmp
daa
inc
add
daa
inc
add
ljmp
inc
add
inc
add
add
mov
add
and
add
or
add
subb
adc
add
or
add
hlt
test
add
add
loopne
add
mov
add
add
add
add
lods
add
movsb
xor
add
lods
add
fisubrl
add
add
mov
add
add
add
test
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
add
ds
add
mov
add
mov
add
mov
add
scas
add
scas
add
lret
add
scas
add
subb
add
scas
add
fs
add
pop
scas
add
dec
scas
add
inc
scas
add
sub
add
add
add
hlt
scas
add
loop
add
enter
mov
add
lcall
add
add
push
scas
add
xor
add
and
add
add
add
call
test
add
dec
test
add
sub
add
push
test
add
or
add
add
add
lods
stos
add
fisubrl
add
add
add
adc
add
and
add
xor
add
dec
stos
add
pop
stos
add
outsb
stos
add
jl
add
mov
add
cmpsb
stos
add
mov
stos
add
fsubrs
add
add
add
jo
add
pusha
lods
add
dec
lods
add
cmp
add
lods
add
add
add
hlt
stos
add
loop
add
into
stos
add
mov
stos
add
lcall
add
add
outsb
stos
add
bound
add
dec
stos
add
ds
add
xor
add
add
add
jae
add
je
add
add
xorb
add
adc
lods
add
fisubrl
add
scas
lods
add
mov
lods
add
add
add
push
lods
add
inc
lods
add
sbb
add
add
add
mov
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
je
popa
insb
inc
jb
gs
add
je
outsl
outsb
jae
insb
gs
outsl
fs
pop
add
insl
imul
outsl
arpl
jae
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jns
inc
gs
imul
js
dec
outsb
addr16
push
add
lcall
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
nop
add
outsl
ja
arpl
insb
insb
inc
popa
jb
adc
inc
gs
insb
addr16
je
insl
dec
outsb
je
push
add
je
insb
addr16
je
insl
dec
outsb
je
mov
push
gs
imul
outsl
outsl
imul
add
add
jb
outsb
push
outsl
inc
insb
imul
add
imul
popa
jae
inc
js
add
mov
fs
jne
jae
jb
add
inc
gs
jb
jo
add
pop
add
gs
je
dec
outsb
jne
add
gs
arpl
arpl
add
jae
jb
dec
outsb
jne
je
insl
push
add
inc
insb
imul
arpl
outsb
add
mov
dec
outsb
data16
popa
je
push
arpl
add
arpl
insb
addr16
jne
je
outsb
add
mov
insb
addr16
jne
je
outsb
inc
push
add
xchg
add
outsl
ja
imul
addl
gs
imul
jae
add
add
jne
inc
push
imul
add
push
gs
outsl
arpl
add
push
add
je
outsl
arpl
add
mov
popa
je
push
imul
or
inc
gs
inc
add
add
insb
gs
jae
inc
inc
add
push
gs
inc
add
inc
jb
popa
je
push
imul
inc
add
add
outsb
fs
imul
clc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
popa
addr16
outsl
jae
outsl
add
je
imul
outsb
addr16
add
repnz
je
jae
outsb
arpl
jns
je
je
add
popl
inc
gs
imul
outsl
arpl
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
insb
insb
dec
gs
dec
outsl
outsl
imul
add
imul
jae
popa
addr16
add
fiadds
inc
outsb
jne
push
imul
xchg
push
gs
imul
js
inc
add
add
outsb
fs
gs
popa
addr16
imul
add
add
outsb
fs
gs
popa
addr16
add
add
push
outsl
jae
push
jne
je
gs
popa
add
inc
push
xor
cs
insb
add
sbb
inc
gs
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
gs
push
gs
imul
jb
popa
je
push
gs
imul
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
gs
popa
insb
jne
inc
js
add
in
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
pop
add
push
gs
imul
popa
jae
dec
bound
arpl
add
push
imul
jb
outsl
addr16
je
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
dec
outsb
imul
add
imul
imul
imul
xor
cs
insb
add
push
push
inc
push
popa
imul
je
jo
gs
jbe
outsb
je
add
inc
add
inc
push
outsl
arpl
je
add
push
add
inc
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
add
push
push
inc
inc
jb
popa
je
inc
jbe
outsb
je
add
add
inc
inc
outsl
outsb
outsb
arpl
adc
push
push
inc
inc
insb
outsl
jae
inc
jbe
outsb
je
push
push
xor
xor
fs
insb
add
call
push
gs
imul
inc
js
je
jb
arpl
jae
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
outsb
add
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
testb
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
je
dec
popa
outsb
fs
add
add
je
imul
addl
je
inc
jb
je
arpl
push
arpl
outsb
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
push
gs
popa
insb
jne
add
push
insb
jae
insb
insb
outsl
arpl
add
insb
jae
jb
add
add
je
popa
jae
inc
jb
outsl
jb
add
push
insb
jae
gs
popa
insb
jne
add
inc
gs
jne
jb
outsb
je
push
add
adc
dec
gs
jo
gs
jb
jns
adc
dec
gs
jo
jb
popa
je
add
push
add
popa
jo
jb
add
xlat
add
insb
push
outsb
ja
outsb
add
gs
imul
imul
inc
jb
je
arpl
push
arpl
outsb
add
gs
jb
je
arpl
push
arpl
outsb
add
push
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
rolb
popa
je
insb
inc
jo
inc
js
je
add
add
popa
jo
insb
insb
outsl
arpl
add
inc
gs
push
dec
outsb
outsw
add
add
je
inc
push
add
xchg
add
je
inc
dec
inc
push
add
sbb
dec
gs
jo
gs
insb
insb
outsl
arpl
add
inc
popa
fs
jb
je
push
je
add
push
jb
arpl
fs
jae
add
push
add
fs
imul
add
jne
dec
jne
je
inc
jns
gs
outsl
push
imul
inc
add
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
push
je
imul
push
adc
inc
add
push
inc
in
push
stc
cmpsb
es
stos
stc
sub
stc
inc
hlt
je
fcomps
daa
jge
push
rolb
pop
pushf
sbb
push
sub
stos
rcrl
bound
xor
mov
sar
dec
sbb
icebp
jbe
stos
sarl
js
cld
push
stc
jg
sbb
inc
mov
icebp
adc
scas
xchg
stc
mov
cmovns
jp
mov
add
sbb
push
jb
dec
bnd
icebp
sub
jb
inc
add
pop
icebp
cmp
jb
xchg
jb
mov
jmp
sar
out
pop
dec
imul
fdivrp
mov
dec
mov
icebp
xlat
pop
inc
sahf
jmp
icebp
addr16
xor
jae
push
jg
es
jae
jp
jmp
icebp
rcl
and
jmp
icebp
xchg
sti
pushw
jae
push
mov
push
push
jb
mov
jb
icebp
inc
adc
mov
xchg
mov
icebp
cs
inc
mov
pop
adc
dec
iret
mov
cmp
inc
test
mov
fistl
test
push
cmp
mov
push
jae
adc
jae
jp
jae
js
mov
pop
jns
arpl
in
jbe
or
repnz
idiv
xor
cmp
mov
jae
jnp
mov
int3
movl
mov
jne
mov
cmpsb
setp
xor
imulb
mov
and
repz
mov
mov
fsubrl
mov
cmpsb
repz
lods
jns
stos
pop
repz
and
repnz
xor
cli
imul
jno
jno
xchg
ds
cmp
nop
cld
je
icebp
add
inc
das
leave
jnp
daa
xchg
sbb
and
pop
ret
fildl
pop
jl
loop
cmp
repz
and
icebp
popa
fs
cli
scas
cmp
pushf
pop
xor
aas
das
dec
add
ss
sub
cld
xor
jge
shll
mov
sti
movsl
dec
test
ret
mov
jb
loopne
mov
adc
sub
mov
fwait
and
jnp
fs
stos
xor
sti
dec
cs
jp
cmpsb
xchg
push
addl
dec
inc
andb
orb
xor
mov
cmp
icebp
insl
or
mov
cmp
pushl
jge
fwait
stos
je
repz
clc
mov
inc
js
jle
repz
mov
push
repz
sub
lret
or
or
sarb
cmpsb
test
jae
repz
mov
jnp
xchg
jns
repz
or
xchg
jg
mov
cmpl
add
rcl
add
repz
ds
pop
ret
js
andl
jecxz
xchg
sti
xchg
cmpsl
stos
and
dec
cmp
cli
mov
das
adc
mov
pop
xchg
push
cltd
xchg
or
mov
clc
xor
out
jno
jmp
cli
nop
jecxz
inc
outsb
mov
mov
push
xlat
mov
enter
mov
jo
loopne
int3
jne
hlt
stos
or
sarl
adc
fistl
dec
sub
repz
not
jns
mov
cmpsl
pop
es
or
mov
xor
sub
dec
lahf
dec
mov
mov
pop
rorb
cmpl
cmp
fwait
pop
dec
aam
pop
mov
push
mov
data16
mov
clc
stc
push
ja
cli
and
stc
pop
cltd
add
push
fadd
stc
inc
sub
cli
inc
and
stc
inc
jne
stc
inc
aaa
enter
in
data16
inc
push
pop
xchg
ds
push
push
jge
or
xor
shl
jae
mov
lret
shrb
push
mov
pop
push
xor
adc
jae
jmp
int
jno
dec
fldl2t
jne
cmpsb
outsl
jecxz
jns
lods
ffree
push
fadds
and
xchg
lods
dec
and
popf
dec
lods
add
cmp
pop
movsl
iret
or
xchg
dec
xchg
outsl
rorl
mov
push
cltd
sbb
aas
jae
ret
jmp
jle
xchg
xchg
jg
push
andl
push
sbb
ds
jg
aad
std
jbe
pop
adcl
je
inc
dec
fnstcw
adc
aaa
adc
aam
add
adc
dec
adc
ja
lret
test
outsb
lcall
pop
jl
imul
mov
fstpt
sbb
in
test
pop
icebp
fsubs
mov
clc
push
jge
pop
shl
enter
mov
push
lods
sbb
pop
or
in
adc
mov
xchg
dec
scas
sbb
add
dec
adc
jo
mov
movsl
xchg
cmc
daa
xchg
cmp
jae
out
fwait
mov
inc
mov
jmp
and
lea
dec
sub
fistpl
scas
sub
int3
shrb
fxch
cld
mov
testl
lds
adc
adcb
or
cmp
hlt
adc
xchg
mov
adc
aam
jecxz
and
and
idivb
lcall
cmpsl
sub
sbb
xchg
pop
dec
mov
lods
or
aaa
outsb
mov
adc
cs
pop
adc
das
testb
mov
or
insl
in
cmp
xchg
ja
cmpsb
cmc
lods
adc
mov
into
mov
outsb
push
push
dec
test
mov
adc
in
fcmovu
mov
enter
adc
xchg
icebp
cmp
imul
fadds
mov
popf
pushw
scas
subl
lds
mov
inc
cmpsl
shlb
jbe
data16
sbb
push
cmp
mov
in
shlb
lsl
jmp
outsl
mov
cltd
inc
cmp
jnp
aad
lock
cld
outsl
mov
addr16
cmp
add
ss
fldenv
add
pop
shld
mov
pop
lcall
xchg
jns
cld
xor
adc
daa
outsl
jle
movsb
add
repnz
shrl
out
mov
mov
test
addr16
xchg
push
stc
or
incb
inc
jns
mov
or
cmp
jne
icebp
fcmovbe
or
in
xlat
cmp
dec
jnp
in
mov
test
sbb
inc
push
and
insb
ret
cmp
in
push
das
jmp
stos
push
xor
pop
cwtl
lcall
loope
xchg
add
repz
add
lods
cmp
stos
push
mov
cwtl
lds
xor
sub
xor
out
sub
adc
lods
test
mov
stc
push
fdivrl
and
cmp
sbb
cmp
jg
jno
jb
fcompl
xlat
xchg
mov
fdiv
inc
pop
loope
pop
arpl
dec
cwtl
and
dec
mov
pop
jns
xchg
cmp
mov
rorl
out
xor
outsb
fldenv
sti
jp
mov
pop
lds
dec
or
mov
mov
fldl
faddl
jno
push
stos
bound
or
imul
sbb
adc
mov
fistps
in
pushaw
push
lea
mov
std
pusha
mov
addr16
outsb
mov
clc
orl
les
mov
xor
gs
jge
pop
xchg
jmp
lahf
push
or
rcl
mov
es
xor
sbb
sbb
ljmp
les
mov
sub
sub
and
push
dec
and
or
rcrl
pop
ret
and
or
xchg
in
xchg
xchg
cmp
add
fiaddl
fdiv
cmp
fwait
cmp
or
jnp
sub
sub
std
ss
aam
jge
adc
push
stc
jge
aad
jnp
aam
in
adc
imul
cmc
gs
popf
fldl
pop
int3
int3
jp
jmp
cmpsb
xchg
test
fcomps
lcall
xor
test
out
cwtl
mov
adcb
pop
icebp
pop
lea
jg
mov
fscale
mov
jmp
inc
lods
std
mov
out
test
push
mov
fwait
test
pop
mov
enter
rcrl
push
outsl
pusha
push
jge
jne
sub
cld
out
xor
clc
jl
push
xor
xchg
in
outsl
or
or
sub
mov
fs
lret
int
mov
stos
test
js
xorl
lock
inc
mov
push
aas
in
loope
cmp
mov
push
or
fisubrs
push
sar
pusha
adc
dec
sbb
mov
data16
push
mov
cli
pop
cmp
dec
daa
imul
cmp
adc
inc
xlat
orb
test
sub
mov
mov
jl
das
cmp
add
add
sar
push
cmpsb
jl
mov
nop
mov
sbb
xchg
push
sti
into
mov
cmp
loopne
call
add
jp
out
sub
add
fs
mov
cmp
mov
inc
mov
xor
xor
mov
jb
add
or
mov
push
mov
in
mov
arpl
push
sbb
repz
push
xor
inc
out
les
sub
call
mov
xchg
mulb
mov
sbb
es
popa
stos
lret
cmp
jno
roll
leave
push
and
and
sbb
add
fs
iret
add
data16
int3
push
adc
cwtl
out
mov
rcr
sahf
test
mov
dec
arpl
sub
mov
inc
lret
add
push
dec
insb
or
mov
mov
add
cmp
shrl
rcl
shll
mov
jb
pop
jle
ljmp
cli
out
xchg
out
pop
ja
cmp
mov
cmpsl
jbe
shrb
ret
in
shlb
push
sub
xchg
sbb
aas
bound
mov
push
imul
mov
popf
add
cli
push
xchg
leave
add
fs
push
subb
jae
loope
in
jmp
lds
push
mov
imul
jno
cmc
sub
cld
xchg
xchg
dec
in
out
mov
sarb
int3
sbb
imulb
scas
ljmp
les
mov
lock
mov
dec
jnp
jo
mov
test
add
push
int3
lret
dec
xor
dec
adc
mov
jne
cmp
lea
in
ja
mov
adc
mov
in
jns
pop
insl
pop
das
iret
add
xchg
stos
loop
aas
or
loope
xor
mov
addr16
push
mov
pop
loope
mov
lea
mov
ds
dec
and
enter
negl
stos
lret
adc
mov
adc
pop
pop
addr16
inc
mov
cmc
inc
push
mov
iret
es
jl
xor
cmp
mov
push
pop
outsb
jecxz
xor
lock
repnz
push
mov
cli
lret
rcll
dec
adc
lcall
sbb
mov
xchg
cmp
repnz
fistpl
insl
inc
sub
out
xchg
loop
fistpl
fists
mov
fcomi
fsubrs
or
dec
xor
adc
jl
mov
sub
xchg
push
adc
shlb
xchg
mov
or
adc
mov
icebp
icebp
pop
lret
cmp
jle
aam
xor
movq
aam
jno
or
in
xor
mov
adc
cmp
pop
test
out
sbb
cmc
cmc
dec
insl
cmpsb
jl
pop
push
lcall
fwait
add
cmp
cli
xchg
jbe
test
fidivs
fidivl
roll
hlt
lds
repnz
insb
jge
sub
xchg
in
aaa
cmp
movb
stos
jb
ror
sbb
jle
add
pop
fisttpl
add
rcrl
and
inc
insl
mov
ss
in
sbb
std
lret
repnz
out
shll
add
sub
mov
adc
popf
cmp
inc
or
lods
or
pushf
jns
and
iret
inc
pop
pop
dec
notb
sub
cltd
or
sarl
lods
push
out
pop
mov
das
cmp
dec
sti
push
adc
cmp
inc
pusha
jne
repz
xor
xorl
hlt
sbb
xchg
pushf
jb
xchg
sbb
and
push
xchg
in
pushf
cmp
lret
cmp
ss
or
xchg
cli
dec
pop
mov
jae
test
adc
mov
mov
cmp
cmp
inc
mov
out
inc
subl
sub
mov
je
imul
cmp
pop
test
xor
aam
dec
jne
mov
cs
dec
push
mov
sub
xlat
insb
movzbl
jae
sahf
pop
add
jg
shrl
in
pusha
mov
std
daa
xor
stos
inc
subb
addr16
push
sar
pushf
sub
cmpsl
ret
into
mov
dec
jge
aam
cmp
or
and
inc
pop
and
sub
lods
cmp
inc
pop
inc
push
push
scas
into
add
pop
mov
adc
jne
dec
cld
jne
fidivl
push
in
cmp
dec
cmp
test
stc
mov
jle
and
in
mov
pop
aaa
cmp
ss
mov
test
lret
adc
clc
push
xor
sbb
nop
inc
sub
stos
icebp
add
push
push
mov
icebp
xchg
in
lcall
ljmp
in
aaa
mov
mov
jae
in
mov
mov
or
add
jo
int
mov
enter
outsb
ds
std
xchg
ret
mov
push
lahf
xchg
in
fistpll
repnz
hlt
or
jmp
mov
adc
subb
subb
xor
dec
or
jecxz
cmp
subb
enter
xchg
addl
lcall
lcall
cmpsl
cmp
outsl
jl
lea
in
push
scas
xchg
lcall
loopne
aaa
push
inc
mov
sarb
jle
push
aaa
mov
in
pop
pop
stc
hlt
xchg
ljmp
push
pop
mov
jo
pop
ret
push
mov
mov
mov
les
sub
or
mov
sbb
jo
adc
cmp
xchg
in
les
xor
movsl
lods
xchg
xor
dec
add
jns
scas
imul
outsl
jle
adc
cli
jo
outsl
mov
push
js
daa
test
dec
loope
mov
or
fadd
or
adc
mov
mov
js
je,pn
gs
aad
mov
push
testb
push
fst
es
jb
mov
mov
aam
loope
movl
test
cld
jno
imul
cmp
shrl
rorl
mov
pop
sub
jl
int
pop
jle
mov
dec
xchg
mov
pop
and
mov
sbb
jle
stc
dec
fwait
mov
inc
lahf
adc
fwait
outsb
popf
mov
test
movsl
xchg
push
rorb
pop
push
je
jnp
lods
mov
imul
fcom
sbb
and
cltd
dec
les
jae
call
fwait
into
push
jmp
sub
xor
pop
mov
mov
cs
out
aad
sub
mov
imul
dec
cmpl
adc
mov
add
sti
shll
push
mov
stos
jle
idiv
andl
bswap
mov
mov
out
addr16
adc
inc
hlt
or
insl
xchg
das
jge
jno
jge
and
xor
mov
adc
std
addb
push
aaa
rclb
add
and
mov
jecxz
push
int
je
cmc
mov
sbb
mov
mov
fwait
sbb
lret
shr
add
push
test
dec
sub
sub
lods
dec
add
push
icebp
jmp
xor
sub
in
inc
pop
xchg
dec
adc
xor
test
imulb
or
js
inc
xlat
aad
push
int
mov
mov
es
or
sbb
xorl
adc
adc
sub
mov
jle
pop
jae
lret
into
loope
scas
sbb
xor
mov
out
inc
and
cld
xchg
lcall
out
enter
pop
pop
add
mov
aas
test
and
xchg
movsb
inc
cltd
adc
and
loopne
adc
fcmovne
pop
cmpsl
jnp
data16
out
fsub
inc
cwtl
mov
cmpsb
icebp
pop
add
jb
adc
cs
or
rolb
xor
sti
mov
adc
jmp
push
pop
add
mov
test
std
cmc
mov
cs
out
mov
int
out
and
stc
faddl
dec
fstpl
add
pop
push
inc
xchg
test
jns
adc
movsl
sti
mov
insl
rcrl
push
mov
push
or
push
lods
popa
dec
inc
pop
mov
inc
mov
or
test
fstps
push
sbb
dec
lahf
and
or
and
xchg
xlat
mov
movsl
pop
sbb
push
out
jg
or
lds
stos
sbb
test
orb
push
add
pop
dec
and
js
test
mov
out
or
imul
jge
mov
mov
das
icebp
sahf
scas
mov
mov
mov
inc
test
and
mov
js
jp
in
mov
stos
pop
loope
test
pop
movsb
mov
add
push
bound
dec
cli
dec
xor
sbb
daa
mov
in
ds
cmp
call
stos
movsb
pop
jecxz
inc
ficompl
mov
xor
jae
test
jmp
sbb
xor
jbe
test
push
imul
or
gs
fbstp
mov
loop
mov
dec
out
mov
adc
fistpll
fimull
int3
mov
xchg
dec
xor
xlat
mov
mov
jnp
or
mov
das
mov
push
bound
leave
mov
je
in
in
bnd
lea
pop
jmp
mov
jnp
pop
jbe
pop
inc
xchg
ja
inc
nop
mov
hlt
cwtl
jb
lods
jle
xchg
aad
xchg
icebp
jbe
jmp
or
cld
dec
push
mov
loope
mov
jo
movsb
pop
mov
dec
popa
scas
push
aam
push
dec
aam
add
pop
pop
ljmp
xchg
sub
mov
repz
cmp
outsl
push
in
daa
fldcw
stos
dec
or
lea
xlat
into
cmc
mov
outsb
fst
push
test
push
jg
flds
mov
lock
addr16
repz
sub
push
lret
in
dec
mov
dec
jbe
loop
mov
push
xchg
adc
sti
sub
or
ds
jp
mov
sub
dec
jbe
jp
ret
adc
dec
hlt
sub
cvtpi2ps
or
shl
sbb
test
and
lahf
adc
mov
adc
sti
sahf
lds
sub
dec
adc
xchg
cmpsl
xchg
cli
fstpl
insl
je
adc
xchg
jno
jns
out
mov
xchg
lock
out
cld
inc
mov
pop
imul
sub
push
inc
dec
dec
in
pop
jp
jge
cmpsl
jecxz
mov
push
lock
xchg
lods
mov
mov
fdivrl
shrl
dec
cli
mov
push
push
pop
rolb
es
and
aas
clc
addb
outsl
std
jg
mov
lcall
lods
xor
adc
and
or
lds
fildl
jecxz
ljmp
push
pop
jae
in
and
mov
mov
pop
leave
outsl
mov
stc
out
ret
test
ficoml
cpuid
repnz
jns
loopne
movaps
ds
insb
popf
xor
pop
cmpsb
mov
pop
push
jmp
mov
xchg
sbb
jl
stos
pop
jns
in
pop
adc
test
xor
int
in
test
add
push
pop
pop
jmp
ja
xchg
fs
sbb
jae
cltd
add
mov
clc
movsl
mov
mov
rcll
ja
lods
fsts
jae
mov
shll
dec
out
pusha
jo
lea
mov
aad
addl
std
aad
cmc
jae
fwait
outsb
jp
movsb
dec
es
jbe
add
outsb
and
push
sub
pop
sbb
push
lea
dec
mov
movsl
ss
testl
insl
or
add
xchg
inc
sti
in
outsl
ficomps
mov
loope
sbbb
pop
mov
dec
mull
add
dec
pop
jp
sbb
lods
jg
push
test
cltd
push
sub
std
add
xor
test
daa
call
xor
rcrl
jns
mov
ss
test
and
or
or
jl
xchg
or
lea
fiadds
push
mov
cmc
lahf
call
xor
cmp
out
mov
adc
in
mov
out
and
cmp
add
mov
mov
dec
addr16
arpl
outsl
lahf
xorb
mov
add
jmp
push
out
clc
iret
lods
or
cmp
fisubs
aaa
out
and
jl
stos
push
inc
pop
adc
imul
hlt
mov
mov
in
and
mov
into
hlt
and
jnp
jne
in
xor
in
orb
inc
and
bound
jg
int3
push
gs
dec
pop
mov
or
xor
fnsave
pop
jge
dec
gs
adc
jno
fmull
mov
pop
and
sti
sbb
mov
mov
push
xchg
cwtl
or
ljmp
jbe
sbb
push
xchg
add
dec
test
sbb
cltd
mov
sbb
add
jne
loopne
push
or
dec
xchg
cmpsb
sti
pop
pop
adc
add
addr16
mov
and
mov
xor
fsts
imul
test
dec
jne
cmp
loope
stos
inc
int3
xor
decb
test
jl
dec
das
inc
stos
mov
bound
mov
add
push
add
jnp
xchg
mov
inc
xchg
mov
rcrb
mov
pop
add
shlb
cmpsl
xor
mov
jge
rorb
mov
aad
mov
in
es
call
shlb
pop
divb
ljmp
adc
in
pop
xchg
dec
sub
rcrb
es
stos
sbb
lret
fdecstp
dec
xchg
add
out
inc
xor
into
jl
repnz
inc
xor
cmpsb
xlat
and
sbb
dec
mov
xchg
push
repz
add
adc
xor
pmaxub
xor
cmp
mov
out
cmpsl
pop
pop
push
lea
mov
pusha
inc
sbb
mov
outsb
inc
inc
les
scas
mov
cmp
lods
add
push
cmp
loop
cmc
rorb
int3
pop
dec
dec
push
jp
xchg
mov
xchg
mov
pusha
js
lcall
add
xor
mov
mov
cmpl
and
jbe
mov
pop
popf
and
push
inc
ret
or
and
out
inc
xor
popf
dec
mov
scas
ss
xor
add
cmp
adc
lret
sbb
xor
ret
mov
and
gs
sarb
loop
lret
arpl
mov
in
cli
mov
into
mov
sub
cwtl
push
addr16
test
add
cmc
fnstcw
mov
sub
je
ss
sarb
pop
pop
mov
outsb
movsl
jno
inc
fdiv
aam
and
jae
push
adcl
push
jbe
and
adc
cs
xchg
bound
and
fdivs
test
or
cmp
iret
xor
fisttps
scas
in
pushf
test
cld
mov
sti
pop
push
xchg
mov
cmp
push
jnp
cltd
mov
fldcw
arpl
dec
fcoml
mov
xchg
cmpsb
js
adc
test
in
mov
push
xor
mov
stos
fsubl
sbbl
in
dec
clc
mov
sub
in
gs
in
repz
mov
cmp
call
cmc
mov
mov
push
out
or
clc
std
cwtl
dec
notb
dec
and
js
mov
popa
jae
pusha
ficoml
insl
jle
push
aam
pop
pop
scas
jbe
sub
lcall
mov
int3
xor
mov
icebp
sbb
and
jne
nop
and
jbe
pop
stos
lret
ret
and
pop
outsb
fdivrp
pop
inc
orl
out
mov
cmp
lock
jecxz
loope
rcll
mov
sub
jge
push
cmp
out
xchg
mov
mov
int3
mov
ret
inc
push
and
insl
mov
out
jle
mov
xor
fildl
mov
push
les
aam
lds
sarl
leave
insb
mov
xchg
push
pop
lds
in
pop
jp
sub
lods
mov
imul
xchg
pop
mov
or
mov
push
cmp
ret
sahf
pushf
test
in
movsb
sti
or
push
pop
addr16
imul
sbb
std
or
sub
lock
push
aad
pop
cmp
es
mov
adc
in
in
mov
jno
mov
and
rorb
mov
ds
ja
jge
pushf
pop
mov
dec
aam
icebp
insl
xor
push
test
jle
push
out
sub
mov
xor
aas
mov
mov
inc
jns
mov
lock
stc
xor
psubsw
sahf
psrld
mov
mov
mov
pop
mov
mov
call
jns
loopne
pop
pop
mov
out
xor
or
push
add
out
gs
iret
sub
aaa
xor
pop
repnz
push
stc
je
mov
or
sub
mov
lea
push
nop
mov
push
outsb
movsb
and
jae
outsb
sub
movaps
cmp
push
sahf
popa
cmp
fnstenv
cld
test
hlt
add
mov
jle
jae
ret
pop
out
daa
hlt
out
sbb
pushaw
cmp
sbb
add
push
nop
jbe
push
or
push
jnp
sti
pop
pop
add
cs
imul
sbb
aam
jae
jb
sbb
sbbl
pop
in
stc
xor
push
sbb
lods
rorb
lds
sub
out
pop
mov
shrb
and
lret
fwait
xchg
call
sub
push
adc
jecxz
lock
repnz
movsb
sbb
adcl
outsb
or
jg
pusha
pop
and
xchg
cmp
and
jno
icebp
ret
loopne
xchg
add
clc
rclb
and
inc
movb
int3
pop
pop
repnz
mov
and
adc
leave
push
pop
jp
mov
daa
movsb
ss
in
xor
rol
call
and
js
jl
enter
je
mov
mov
loope
out
bnd
into
jns
fdivrl
mov
ds
lret
mov
sarl
pop
inc
inc
stc
push
outsb
movsl
setns
jb
pop
pop
daa
loop
mov
ds
or
iret
sub
pusha
notl
adc
mov
jae
jmp
cld
pop
ljmp
inc
decb
mov
ja
cmp
popf
ret
or
push
or
jge
inc
push
cmp
test
testb
push
jl
mov
mov
adc
cmpsb
xor
inc
pop
xchg
ret
pop
mov
dec
out
loopne
in
lea
ja
outsl
dec
mov
stos
or
int3
add
inc
push
pop
push
sbbl
in
pop
test
sar
leave
das
test
dec
pop
or
xchg
fldcw
fimuls
mov
or
push
push
push
test
add
popf
div
addl
lods
cmp
jno
cli
pop
cmp
clc
pop
repz
aaa
adc
test
adc
xchg
mov
inc
stos
imul
rorl
cltd
mov
pop
adc
mov
mov
movsl
lea
mov
movsl
scas
cmp
push
adc
call
push
push
loop
mov
push
clc
xchg
mov
fisttps
xor
push
add
aam
jns
dec
clc
dec
inc
lahf
xor
or
adc
adc
movsl
cmpsb
fdivl
outsb
lock
xchg
imul
or
or
ds
dec
dec
mov
add
mov
out
jo
push
pop
mov
mov
data16
les
pusha
sub
clc
loope
and
lret
mov
push
fiadds
adc
mov
jbe
jp
test
push
aas
sub
and
or
cmp
fdivr
mov
pusha
sub
cltd
lret
jp
pop
mov
mov
adc
pop
shr
push
xchg
xchg
pop
out
and
mov
inc
out
imul
shll
inc
xchg
dec
mov
cmp
sub
rcr
pop
push
xchg
cmp
mov
cmp
adc
jg
sbb
mov
sub
sbb
mov
rorb
sbb
sbb
or
out
xor
and
out
adc
xor
adc
xor
data16
fsubs
inc
adc
cmp
add
dec
scas
int
scas
je
lahf
dec
cmp
lods
mov
in
mov
int3
jg
outsb
pop
xor
xchg
mov
mov
aas
cmpl
aas
mov
mov
lds
push
insb
mov
sub
daa
popa
hlt
repnz
mull
xchg
iret
sarb
sti
dec
movsl
cltd
lahf
push
jne
je
popa
nop
and
jnp
cmp
jb
scas
test
out
fcomps
push
dec
jp
mov
je
cmp
pop
jmp
or
pusha
ljmp
aam
movsl
xor
out
imul
inc
pop
pop
mov
push
jmp
fnstsw
jno
ss
xor
loop
sub
in
call
mov
nop
mov
cmpsl
xchg
pusha
jecxz
push
ljmp
lods
adc
adc
pop
repz
mov
dec
and
popa
xlat
and
ss
jge
outsb
adc
neg
mov
imul
ss
inc
cwtl
mov
sub
cltd
jbe
mov
and
sbb
mov
xchg
and
lret
xor
or
sarb
jge
std
mov
std
es
movsb
jb
or
mov
in
push
dec
xor
mov
insb
sub
sub
xorl
stos
or
adc
sbb
ja
rcll
lret
adc
mov
adcl
sbb
push
outsb
sbb
sbb
mov
mov
push
pusha
push
xor
mov
fidivl
pop
out
clc
aad
movsl
xor
je
outsl
add
or
or
push
mov
repz
jo
out
mov
add
test
jo
jg
xor
lahf
ficomps
xchg
push
jns
scas
icebp
dec
mov
call
lock
mov
sbb
insl
push
popa
jbe
lods
test
sbb
xchg
jg
shrb
push
cs
mov
fstl
cltd
push
push
out
jecxz
add
fwait
cli
movsb
mov
je
mov
fisubrl
lock
mov
insl
sub
outsl
adc
movsl
dec
bound
insb
jnp
sbb
mov
std
inc
ja
cmp
data16
jp
and
push
adc
in
jge
push
hlt
lds
push
adc
insl
cmp
fsubr
dec
sbb
addr16
rorl
shlb
into
add
xor
imul
mov
negl
sub
orl
ftst
mov
mov
dec
subb
fcmovnb
and
into
push
bound
xchg
xchg
push
popa
sub
sub
adc
mov
scas
sbb
sub
dec
jmp
mov
sub
cwtl
xor
scas
jmp
pusha
scas
add
ror
rorl
adc
iret
jge
inc
mov
repz
or
gs
ja
mov
negb
xor
pushf
pusha
push
dec
jle
jns
ja
loop
enter
outsl
scas
fs
bound
out
aad
jle
jmp
andl
mov
mov
shll
adcb
push
or
mov
dec
das
cmpsb
or
popf
std
jns
outsb
les
mov
out
scas
pop
jne
lods
negb
or
jae
or
jns
pop
add
loopne
sarl
jo
psubb
test
mov
or
pop
or
ljmp
pop
fstpt
inc
push
jl
test
sbb
xchg
push
lcall
dec
sbb
push
rclb
cmp
sub
sub
jmp
es
and
mov
push
fs
insl
in
cmp
rcrl
sub
call
out
jno
and
call
adc
aad
xor
negl
fmull
fstl
pop
stos
fs
cmc
ljmp
mov
out
insl
outsb
idiv
pop
or
cli
les
ss
and
add
mov
and
mov
sarb
cwtl
mov
mov
cltd
div
fmuls
dec
pause
cli
faddl
add
scas
sub
add
inc
xchg
cmp
push
lods
iret
lahf
xchg
cwtl
mov
scas
add
xchg
add
or
push
enter
out
shlb
nop
sbb
lret
inc
lods
pop
xchg
gs
adcl
loopne
or
dec
adc
imul
push
or
movsl
xchg
mov
mov
mov
jecxz
outsb
fsubrl
fidivrs
push
movsl
fs
nop
shlb
pop
pop
mov
rorb
jmp
xchg
fs
imul
test
mov
jp
outsb
or
push
push
fstpt
push
out
xchg
lds
xlat
ret
ficompl
add
in
shrb
inc
push
shrb
cli
mov
fwait
orb
in
cmpl
hlt
ljmp
ror
repnz
stos
mov
cwtl
inc
jo
jmp
dec
pop
sbb
inc
mov
sbb
insl
dec
and
push
fiadds
mov
fstp
lods
fldcw
jg
push
stc
and
or
jae
pop
popa
mov
add
jno
or
add
sti
into
cmp
jp
jbe
sbb
adc
push
sub
cmp
arpl
roll
xor
movsb
adc
push
aad
mov
jb
mov
sti
stos
icebp
test
mov
jge
aam
push
dec
push
or
and
sub
insb
int3
sbb
js
mov
and
pop
lret
adc
sbb
ret
and
sar
cs
mov
iret
leave
movsb
lcall
enter
dec
in
xchg
or
mov
adc
cwtl
sub
cmp
xchg
cltd
dec
cltd
imul
mov
hlt
lock
push
xor
pop
mov
cwtl
adc
mulb
jg
xchg
fs
out
jae
inc
push
cmpsb
lods
sub
les
out
dec
sti
ljmp
or
lods
lods
pop
out
out
enter
fstl
dec
cwtl
push
push
push
out
or
sbb
ret
and
enter
jb
push
jp
stos
cmc
faddp
std
pop
imul
mov
mov
xchg
xor
add
mov
scas
adc
stos
call
daa
inc
xorb
test
jmp
leave
movsl
addr16
hlt
mov
leave
cmpsl
adc
mov
in
repnz
xchg
ds
inc
lods
pop
lods
repz
sbb
scas
fbld
mov
or
sub
dec
cmp
fildl
mov
ljmp
mov
mov
sbb
jno
cli
add
stos
arpl
andb
iret
jg
xchg
in
pop
mov
jg
jns
jno
inc
pop
test
mov
pop
in
imul
xor
in
neg
aaa
mov
loopne
adc
out
ljmp
mov
push
stos
cwtl
cltd
shll
fiaddl
cmp
jl
bnd
mov
mov
aad
mov
shlb
inc
rcll
out
jle
cld
popl
xor
daa
mov
mov
lds
mov
adc
mov
sti
in
shll
test
in
test
lea
jecxz
add
orb
cmp
popl
js
push
xor
xchg
ret
fs
add
stos
xchg
popa
jl
loopne
in
mov
addl
mov
lea
scas
stc
jecxz
fbld
hlt
cmp
sbb
dec
lock
mov
push
push
jnp
fs
in
stc
inc
imul
cli
nop
mov
mov
sub
mov
and
mov
mov
push
test
call
push
aad
dec
pop
add
pop
mov
or
lcall
add
inc
mov
pop
xchg
mov
ficompl
mov
xorl
test
inc
xchg
sub
sub
push
dec
lcall
lds
lahf
pop
in
jecxz
dec
idivl
inc
repz
sub
add
or
mov
and
jbe
jmp
pop
fidivl
outsb
iret
adc
ljmp
cwtl
rorl
fwait
mov
adcb
jne
sub
fucomi
and
mov
adc
mov
jnp
ss
popa
add
ljmp
les
test
fsubrl
cli
push
mov
push
push
and
scas
mov
lret
repz
cmp
pop
addl
ret
jnp
imull
adc
jmp
fdivr
pop
out
inc
push
loope
xor
and
in
imul
test
enter
adc
push
cmp
push
daa
fisttpll
hlt
shrl
loop
bound
test
fwait
scas
mov
xchg
fiadds
jno
mov
stos
adc
xor
xor
ficoms
or
jp
icebp
out
rorb
into
jp
add
aad
lock
bound
mov
aas
es
inc
mov
lock
sbb
sbb
mov
aas
and
adc
adc
cmpb
and
sub
movsl
pop
mov
into
mov
add
aad
xor
dec
pusha
out
adc
inc
cmp
out
inc
jbe
cmp
sbb
repz
movsl
es
addr16
aas
push
test
jae
cmp
cmp
sbb
sahf
cmp
mov
int3
mov
sbb
addr16
ret
test
push
jle
mov
push
xchg
mov
gs
push
ret
out
ja
mov
fnstsw
ret
jns
mov
repz
xchg
inc
jno
cmp
aam
cmp
dec
ret
arpl
inc
scas
push
mov
outsb
lret
mov
pushf
inc
popf
fistl
jmp
loope
mov
ss
nop
cmp
lods
or
lcall
push
xor
mov
loope
pusha
mov
mov
push
js
and
push
je
xchg
jle
dec
fldz
call
gs
popa
jae
daa
push
mov
mov
out
mov
fs
scas
aam
push
dec
sbb
aas
sbb
mov
loop
or
imul
sbb
cmp
jmp
dec
mov
or
and
mov
insb
xlat
push
test
jl
hlt
jge
pusha
pusha
cmp
testb
or
nop
dec
mov
cmp
jmp
es
pop
or
push
faddl
ja
std
pop
add
mov
xchg
and
mov
lea
out
je
ret
lock
repz
dec
inc
insb
add
rolb
fs
inc
out
hlt
popf
cmc
and
inc
inc
loopne
fs
sbb
stos
in
sub
aas
or
aad
xor
mov
fisubrs
mov
xchg
cmc
ret
arpl
xchg
lahf
mov
les
push
test
mov
and
push
rorl
xor
lods
inc
xchg
enter
clc
fidivrl
adc
sub
and
clc
fstl
popaw
xor
fidivrs
rcll
icebp
lds
rcrl
sub
roll
loope
pusha
xor
push
push
dec
sahf
out
push
pop
push
or
aam
ficomps
mov
cs
rcl
sub
movsb
jp
add
push
out
xchg
call
pusha
fiaddl
lea
sub
push
ja
cmp
add
out
sbb
iret
sub
or
cmp
fidivrs
insb
cmpsl
movsb
stos
mov
cmp
popf
scas
rorb
andb
sarl
in
dec
xchg
cld
leave
cmp
cmpsb
jp
add
in
adc
pop
xor
nop
mov
cld
popf
jle
test
sbb
cltd
sub
in
stos
std
adc
dec
inc
out
mov
pop
sbb
xor
dec
mov
inc
xchg
addr16
fsubrs
int
push
pop
cld
or
cmpsl
addl
sub
xchg
pop
test
test
imul
and
add
mov
cmp
add
push
aam
movl
pop
sahf
fs
test
mov
stos
push
lock
push
mov
roll
mov
loope
je
xlat
dec
ret
lret
fwait
sub
sub
jg
subb
loope
int3
gs
cmp
cmc
xor
push
dec
inc
sbb
dec
pop
inc
out
js
out
pop
fisttpll
mov
mov
loopne
cmp
push
mov
mov
fstpl
in
dec
xchg
data16
pop
bound
out
sahf
mov
dec
aas
pop
ljmp
push
fisubrl
mov
outsb
cmp
insb
cmp
in
push
adc
sub
add
ds
outsb
movsb
std
ficompl
mov
cmc
and
jno
lds
ljmp
push
and
add
scas
push
fstpt
dec
dec
mov
loope
jae
jge
in
cmp
sahf
lret
aaa
fcmovne
std
mov
imul
int3
popf
daa
jecxz
mov
lcall
lret
add
rcrl
jecxz
sub
dec
into
sbb
jno
stos
push
imul
out
pop
pop
pop
mov
je
stc
mov
mov
fdivrp
push
stos
cmp
das
int3
das
in
lds
mov
shrl
add
add
lods
jns
mov
add
push
inc
mov
iret
push
cmp
or
and
in
jno
iret
call
or
popa
mov
in
call
aam
cmpsl
inc
out
mov
inc
in
pop
jg
cltd
xor
lods
pop
into
mov
in
icebp
push
ja
out
lahf
lds
aad
xchg
inc
jp
out
sub
leave
pop
add
mov
test
stos
jecxz
sahf
imul
xchg
lock
inc
jo
push
hlt
xchg
stc
push
ja
rcl
adc
movsb
jl
xor
jge
pop
cmp
negb
sub
or
push
outsl
pop
mov
rorl
jns
mov
or
push
jo
push
mov
cmp
lods
jb
push
mov
add
dec
push
enter
push
mov
es
psubd
sbb
enter
repnz
rcrl
and
sub
les
or
sti
pop
mov
xor
sbb
scas
in
mov
lret
mov
loop
mov
ficoms
dec
jmp
adc
mov
ret
test
sbb
nop
data16
popl
jnp
pushf
rcrb
push
push
pop
subl
jae
adc
mov
shlb
sub
bound
dec
cld
lods
fucomip
mov
cld
mov
data16
daa
cmp
jmp
mov
mov
mov
nop
outsl
sub
addr16
rorl
adc
outsl
jmp
jno
fdivl
pop
dec
lcall
pushf
imul
lods
cmp
in
mov
pusha
pop
xor
clc
jg
jge
mov
mov
push
repz
xor
inc
decl
ret
fdiv
imul
je
in
xor
dec
ss
pop
out
les
mov
push
sahf
call
add
gs
add
add
bound
adcl
dec
cmp
pop
add
jno
out
test
inc
mov
dec
mov
jne
loope
fs
shlb
cmp
jno
jb
movsb
movb
push
arpl
push
out
or
xor
jbe
loopne
es
and
push
int3
addr16
jbe
neg
iret
jbe
cmp
nop
jo
adc
mov
icebp
jo
xchg
xchg
iret
aam
fdivr
jp
ja
inc
nop
cli
outsb
add
jnp
jns
push
mov
nop
leave
cld
inc
in
xchg
mov
ss
mov
daa
aam
add
fstpl
mov
dec
aam
xchg
mov
xchg
mov
cmp
lahf
cli
out
stc
xor
cmpsl
xlat
xchg
or
in
sbb
mov
mov
cltd
out
xchg
fprem1
cli
aad
sbb
adc
icebp
jp
or
and
push
cld
std
xor
inc
popf
xchg
mov
loopne
cld
push
adc
add
pop
dec
test
inc
bound
mov
inc
lret
outsl
sti
sbb
test
inc
test
jns
js
xor
je
jae
cld
fnstcw
mov
shll
les
jb
mov
dec
fcmovu
add
fwait
pop
cmp
addb
sbb
stc
sbb
cld
jns
pop
or
pusha
scas
call
pusha
fcomp
lahf
fwait
mov
notb
jae
add
pusha
xor
cwtl
in
fcomps
xor
stc
inc
fsubl
adc
pop
mov
or
out
stc
xlat
scas
orl
sub
clc
add
xchg
test
and
ret
loope
jecxz
repnz
mov
in
inc
xchg
out
daa
mov
inc
mov
and
test
mov
dec
ja
fcmove
jnp
jbe
inc
xor
stos
fstps
fidivrs
push
out
xor
scas
fsubs
data16
movsb
pusha
ja
push
stc
fwait
inc
and
mov
bound
add
ljmp
pop
push
das
mov
in
xor
push
adc
mov
and
imul
pop
rclb
mov
cltd
enter
cmpsl
jns
enter
lea
sub
sub
cltd
lret
insb
rcll
xor
cwtl
cmp
bound
iret
push
dec
arpl
cmpb
lock
xchg
out
fdivr
inc
and
aas
idivb
in
push
iret
iret
lds
push
adc
mov
or
hlt
dec
jle
inc
push
add
mov
sbb
jns
push
loope
push
lea
adc
repnz
cmpsb
mov
mov
xchg
cmp
inc
out
cmp
adc
repnz
adc
test
movsl
mov
mov
xchg
push
jne
fisubl
cs
pop
or
addr16
adc
lods
icebp
adc
jge
sub
outsl
roll
push
dec
outsb
lock
ret
pusha
push
lods
mov
test
mov
divb
xchg
popl
in
lcall
xchg
stc
or
pop
and
cmp
andb
cmp
outsl
jns
cs
cmp
cmpb
xchg
xlat
je
scas
ja
shlb
dec
sarb
rclb
dec
pop
or
sub
ljmp
call
xchg
nop
insl
mov
xor
sbb
xchg
dec
push
adc
cld
pop
jnp
jae
mov
mov
mov
or
cs
enter
cmpb
mov
test
lds
lret
fistl
jo
add
out
dec
cmc
jnp
sub
push
mov
dec
leave
andb
jbe
inc
jb
hlt
fidivl
ficomps
repnz
push
xchg
push
icebp
mov
add
xchg
lcall
or
push
scas
aad
in
ds
lods
xchg
jecxz
mov
sub
sahf
cmpsl
jne
movsl
je
popa
test
fmull
mov
push
iret
jge
imul
dec
add
pop
bound
push
add
jge
adc
insb
loope
push
bound
stc
out
gs
push
les
push
pop
pushl
sub
cltd
or
imul
dec
and
mov
inc
rorb
fidivl
pop
and
xchg
outsb
call
lock
cmc
adc
outsl
mov
aam
jmp
outsl
push
add
mov
ret
adc
mov
call
cmpsb
add
outsb
xchg
dec
xchg
nop
in
popf
adc
pop
and
push
sub
adc
pop
push
stc
lcall
adc
shl
cmpsl
stos
fistpl
jecxz
pusha
out
loope
out
adc
sub
cmc
dec
nop
xchg
fisubs
lods
sbb
es
and
jo
jne
cltd
xor
inc
outsb
jl
stos
adc
dec
loop
jmp
mov
lret
stos
shll
push
enter
sbb
adc
cmp
sbb
mov
mov
loopne
lock
arpl
cmp
fldenv
dec
scas
dec
dec
pop
stos
sbbl
aaa
fiaddl
dec
loope
or
adc
jge
fisttps
sbb
insl
mov
jp
dec
adc
jmp
mov
es
adc
or
nop
cmp
es
ret
xchg
sbb
xchg
push
xchg
arpl
test
sbb
mov
mov
sti
dec
lods
pop
lahf
fisubl
out
es
sbb
insl
in
lods
cmc
and
xor
loope
hlt
sbb
insb
or
mov
mov
mov
or
mov
movb
addr16
push
or
or
mov
sarl
vmread
xchg
and
popf
xchg
adc
xor
dec
mov
xor
pop
sub
adc
inc
mov
pop
js
cmpsb
jp
lock
int
ja
sub
lret
jno
lret
sbbl
jo
add
in
pop
mov
cmp
pop
in
aam
jns
sbb
scas
jl
in
sbb
inc
and
sub
mov
or
cmp
jae
addl
mov
xor
add
inc
xor
sub
cmp
xchg
nop
ljmp
pop
and
inc
push
aad
mov
fidivs
dec
cmp
inc
pop
into
sti
loope
leave
iret
ret
cli
loopne
test
divb
sbb
xor
in
hlt
dec
je
push
leave
shll
mov
mov
shlb
mov
faddl
scas
push
sbbl
mov
sbb
adc
mov
adc
mov
in
sbb
jle
ror
popa
pop
ds
push
dec
clc
mov
jo
mov
arpl
nop
fcomps
lcall
in
icebp
dec
ljmp
and
ds
inc
inc
pop
loop
jp
stc
mov
leave
stc
add
imul
ds
and
xchg
sbb
in
hlt
adc
mov
cmp
jle
inc
lock
stc
gs
and
adc
xor
or
mov
loop
add
cmp
jg
push
lret
cld
xor
cwtl
xchg
pop
outsb
lea
shr
dec
sub
into
mov
cmp
addr16
pop
mov
les
lds
mov
and
pop
and
cmp
and
hlt
mov
rolb
lret
or
push
ret
jl,pn
cltd
jne
mov
or
mov
shll
out
add
fcmovne
fmul
std
push
aaa
jb
ret
cmp
leave
stc
lods
stc
rcr
pop
in
out
sub
adc
movsb
mov
mov
jnp
dec
lcall
insb
xorl
ret
xchg
lods
cmp
and
mov
xlat
cmp
sub
jmp
mov
add
test
xlat
shr
push
mov
lods
out
clc
sarb
ret
out
rorb
stc
mov
fwait
xchg
ja
mov
cld
cmp
mov
sbb
push
jge
cwtl
or
inc
lret
jo
movsl
lahf
pop
enter
aaa
ljmp
push
sub
push
dec
mov
lcall
push
adc
mov
push
jb
and
jg
sub
mov
jnp
pop
leave
out
imul
xchg
stos
roll
pop
clc
xor
xor
inc
ret
enter
cmc
xor
pop
mov
fiaddl
into
ljmp
andb
sahf
push
dec
test
or
xchg
inc
xchg
arpl
js
shrb
sbb
add
pushf
testl
imul
and
lds
hlt
mov
mov
das
xor
cmp
fnstsw
testl
cli
lods
mov
pop
mov
ja
fcmovnb
popa
cmp
int
dec
je
in
jne
cmp
sbb
pop
xchg
jp
daa
jno
cmp
js
and
dec
outsl
dec
imul
mov
mov
sahf
dec
xorl
push
adc
ret
ds
cmp
addr16
lea
dec
ja
addr16
arpl
movsb
xor
ss
adc
pop
shl
in
ret
outsb
push
dec
adc
js
pop
mulb
dec
cmp
rclb
push
movsb
lret
xchg
push
cli
inc
test
fisubrs
and
fs
arpl
roll
int3
adc
mov
cmp
test
rcrb
dec
sbb
xor
sbb
adc
or
and
outsl
loope
outsl
mov
add
adc
sub
mov
mov
scas
jno
lcall
stos
jnp
mov
or
aad
in
fsubr
dec
dec
mov
jno
and
mov
movsl
ficoml
mov
xchg
imul
sahf
lods
je
pop
jno
fucomi
mov
jg
dec
mov
or
clc
or
cmpsl
pop
sbb
jbe
insb
cs
inc
dec
loopne
mov
testl
push
pavgb
sbb
pop
mov
cmp
sub
gs
mov
scas
enter
or
mov
dec
or
cltd
jns
xor
fwait
or
jnp
cmp
pop
pop
ds
lea
mov
push
jmp
inc
sub
xchg
insb
nop
mov
pop
push
inc
scas
push
jl
loope
into
lds
dec
cmp
pop
push
imul
rcl
popa
ds
xchg
push
push
dec
inc
icebp
cwtl
out
add
jns
mov
out
mov
dec
data16
ss
call
imul
jne
jns
and
test
test
inc
inc
sub
in
sub
xchg
cli
or
jmp
out
clc
jecxz
push
sub
test
jae
inc
lcall
inc
add
or
pop
pop
pop
sbb
hlt
pop
jns
inc
out
jbe
jmp
pop
jb
xor
xlat
ds
shll
sar
push
inc
mov
divb
xor
mov
fs
lea
cmpsb
sbb
push
mov
and
psllq
test
cmp
or
cmp
jl
mov
and
push
mov
dec
push
outsl
out
and
idiv
les
jge
ret
mov
inc
xor
test
cmp
ljmp
mov
push
jne
and
test
lock
adc
cld
loopne
cld
or
iret
cmp
cmp
pop
movsb
ret
xchg
cmpsl
lods
leave
cmc
fwait
pop
arpl
ja
mov
dec
dec
out
test
dec
mov
and
iret
fcoms
leave
rorl
fisttps
inc
mov
ss
mov
sub
mov
xchg
imulb
ljmp
adc
sub
push
nop
in
mov
jl
fs
inc
cmp
jno
call
mov
lret
dec
xor
and
test
pushf
mov
clc
jbe
mov
call
sub
int
mov
daa
addr16
shlb
xor
test
insl
jge
std
fnsave
enter
mov
push
jle
push
dec
adc
mov
sbb
inc
in
and
sub
test
imul
rcr
or
inc
out
push
xchg
sti
push
inc
add
sub
xor
dec
cli
int3
arpl
or
adc
outsl
std
pop
fwait
sub
in
aas
push
lret
fwait
pop
mov
mov
ret
sti
cmp
cltd
stc
adcl
cltd
push
push
addr16
popa
adc
cltd
icebp
addb
sub
mov
mov
cmp
inc
test
xchg
jb
mov
cmpsb
xchg
addr16
adc
lock
adc
xchg
pop
iret
sarb
into
jb
cltd
xchg
repnz
xchg
xchg
mov
shrl
mov
adc
xchg
sahf
and
fldt
add
push
push
jo
mov
outsb
testb
mov
cld
shr
in
mov
inc
inc
mov
cmp
adc
std
jo
inc
xchg
lods
add
push
icebp
test
idivl
or
lahf
sahf
addr16
adc
push
aas
fmul
les
sub
pop
scas
xchg
call
xchg
or
int
xor
dec
repnz
adc
xor
lods
mov
jle
fld
rcrb
out
cld
movsl
jg
adc
das
gs
add
mov
insb
fcmovnu
adc
cmp
call
jo
sbb
inc
push
sbb
hlt
rorl
js
add
sub
sbb
imull
xor
mov
ljmp
sbb
lds
div
pop
sub
das
lcall
repnz
jmp
stc
dec
hlt
insb
mov
stos
xchg
dec
test
xchg
pop
adc
imul
and
cmp
les
inc
roll
out
mov
or
cmc
jns
mov
cmpsl
or
pop
cli
inc
push
xchg
stc
mov
cmp
je
jle
and
mov
mov
and
dec
ret
loopne
adc
xchg
inc
sub
inc
mov
cmp
out
mov
sub
jmp
sarl
mov
mov
push
popf
mov
or
fcompl
dec
add
jb
mov
add
into
mov
mov
ss
lods
inc
jmp
repz
add
mov
icebp
sub
push
jae
mov
cmp
lret
jle
into
add
dec
repnz
sub
pushf
add
fdivs
aad
mov
repz
sub
into
fists
nop
pushf
adc
test
mov
mov
jno
sbb
fcompl
xor
repz
rol
or
cltd
sbb
sbb
addb
mov
pop
and
int
stos
xchg
jg
in
and
std
test
push
lods
xor
lsl
mov
pusha
sub
xchg
lock
push
frstor
mov
pushf
shll
insl
cmp
add
int
pop
js
mov
mov
addr16
lret
mov
xor
jo
mov
add
mov
into
insb
jne
test
sahf
pop
mov
pop
and
xchg
fbld
mov
cs
jp
cmp
es
push
mov
sbb
xchg
test
jl
fimuls
stos
lcall
repz
add
pushf
test
xchg
add
in
sbb
mov
je
call
es
daa
lock
clc
int3
in
sbb
arpl
dec
push
inc
xor
push
icebp
test
mov
push
mov
pop
dec
xor
leave
mov
xchg
xchg
push
into
mov
addr16
inc
stos
and
movsl
fadds
subb
and
jge
mov
imul
in
mov
loop
add
in
test
dec
fmuls
cltd
std
xchg
ret
leave
push
mov
sbb
mov
inc
mov
sbb
mov
sub
loop
dec
lock
or
stos
dec
mov
fstpl
inc
dec
ret
std
pop
cli
test
xchg
pop
dec
out
mov
fsubr
cld
inc
ss
push
andb
scas
enter
jecxz
pop
push
push
cmp
dec
push
push
aaa
idivb
mov
mov
test
cltd
xchg
add
fcmovnb
rcl
jns
rcll
dec
rcrb
fcomi
xor
sbb
test
xor
dec
mov
bound
ljmp
mov
pop
je
adc
inc
fisubs
sub
lods
xchg
dec
out
jp
push
push
inc
mov
push
jae
adc
ret
ret
insl
aas
sub
push
mov
inc
sbb
xchg
loope
out
jle
dec
mov
in
mov
scas
push
ficoml
dec
push
icebp
in
sbb
pop
dec
mov
xchg
data16
dec
add
push
sahf
push
or
xchg
fiadds
insb
fs
pop
xchg
xor
iret
scas
repnz
dec
shll
lock
jl
or
jl
mov
dec
sub
outsb
je
pop
cmp
xor
jmp
jb
fstps
pop
cmp
test
imul
and
push
add
jbe
lahf
mov
insl
ljmp
ret
jnp
inc
cmpsl
bound
stos
add
ja
int3
pop
push
or
movhps
jl
scas
notl
into
insb
jmp
imul
shll
jb
mov
mov
cmp
test
adc
xor
add
out
xchg
aas
dec
lds
xchg
iret
jmp
test
ret
pusha
and
cmp
sbb
popf
xchg
lea
adcb
mov
mov
les
std
mov
icebp
mov
jle
xor
int
lods
sbb
xor
pusha
dec
ss
mov
lret
rclb
loope
call
ret
push
jns
jbe
rcl
sub
jno
inc
int3
das
jno
push
dec
pop
imul
pop
scas
sbb
ljmp
into
mov
lods
test
fsubrs
push
mov
jns
mulb
aad
jne
in
mov
push
push
es
jle
leave
jne
movsl
adc
iret
jp
ss
jmp
bound
icebp
lds
push
cmpsl
ja
aaa
stos
sub
xchg
add
mov
adc
ret
adc
pcmpeqd
aam
inc
cmpsb
stos
mov
xor
xchg
jno
mov
out
mov
out
cld
dec
movsb
pop
jecxz
pop
adc
in
adc
out
push
xchg
add
imul
rcrb
lods
push
cs
lods
jo
dec
shlb
cmpsb
ja
inc
loop,pt
cmpsb
or
pop
lret
or
adc
rorb
aam
push
in
xor
cmp
popl
jb
addr16
or
add
xor
cmp
push
outsb
imul
dec
push
adc
lahf
jg
fstp
mov
ja
mov
jnp
mov
push
lret
pop
sub
mov
or
sbb
scas
test
xor
add
inc
popf
daa
scas
inc
daa
add
or
pop
ss
and
mov
in
mov
mov
adc
jle
jne
shll
push
cmp
and
and
push
test
pop
je
pushf
mov
dec
xchg
test
std
xorb
scas
dec
push
mov
rcrb
in
or
push
bound
dec
push
jl
pop
sbb
xor
fwait
cwtl
mov
mov
ficoml
pop
ja
mov
mov
stos
jl
or
mov
ds
push
mov
inc
mov
cmp
shrb
xor
mov
in
mov
push
lahf
aad
lret
sbb
mov
jecxz
cmp
or
stos
xlat
mov
jnp
sub
inc
xchg
inc
add
sub
jbe
jp
add
xor
frstor
xor
mov
cmp
dec
xchg
push
or
test
fnstenv
and
pusha
adc
in
fsts
and
cmp
adc
dec
mull
out
sbb
pop
pop
mov
sbb
mov
and
pusha
and
addl
mov
ret
imul
adc
mov
aaa
mov
sahf
push
icebp
ret
xchg
rcrb
cmpsl
xchg
or
sahf
sbb
pop
ret
movsb
adc
sbb
enter
nop
lods
adcl
cmp
cwtl
icebp
xor
sub
data16
arpl
push
sbb
sub
jo
mov
movsl
inc
mov
jp
add
pop
cmpsb
push
xchg
cmp
subb
and
mov
mov
out
inc
andl
int
ljmp
loope
aaa
xorl
inc
orl
sbbl
mov
and
repz
fsts
push
aad
and
adc
add
out
inc
aas
test
jae
pop
repnz
lea
jbe
iret
dec
les
aad
shr
push
add
mov
pop
idiv
js
daa
fwait
inc
mov
gs
ss
lret
and
aam
pop
and
std
mov
pop
out
cld
xor
js
ret
enter
push
mov
enter
and
dec
or
nopl
jne
mov
push
mov
and
inc
sbb
mov
daa
adc
adc
xchg
in
push
inc
imul
rolb
loope
adc
jns
je
int3
loope
xor
negb
sub
loop
pop
jae
aad
into
out
in
push
add
push
add
xchg
add
aaa
aaa
loopne
xor
and
pop
mov
loop
movb
dec
cs
xor
add
jl
daa
xchg
aad
inc
xlat
dec
lahf
stos
push
xor
jl
les
outsb
inc
cmp
lret
icebp
pop
movsb
cmp
push
xchg
adc
sarb
mov
lcall
lds
movsb
xlat
xadd
mov
xor
fimull
fdivrl
or
xlat
addr16
repz
mov
sub
adc
or
sti
lods
push
and
inc
repnz
xor
add
cli
arpl
flds
dec
cmpsl
dec
inc
sbb
lea
es
jmp
mov
mov
movsb
andl
add
pop
lds
pop
hlt
mov
dec
sub
fstps
add
movsb
xlat
out
sti
test
popf
jg
push
or
icebp
sub
in
movsl
popf
fsts
adc
fistpl
lret
inc
adc
push
xor
gs
cmp
xchg
cmp
rdpmc
stc
sahf
arpl
lcall
mov
pushf
sub
jmp
push
insb
aaa
call
scas
inc
pop
notl
adc
lret
and
jecxz
addl
cmp
lahf
xchg
lock
leave
and
cmp
pminub
mov
cmp
repnz
dec
pop
push
lret
shll
aad
mov
or
cwtl
fst
mov
mov
jmp
xchg
xchg
add
filds
cmp
arpl
out
in
out
in
jle
xor
mov
cmc
xor
add
mov
pop
mov
cmpsb
cmp
dec
icebp
dec
xchg
imul
in
in
dec
sbb
and
int3
out
xor
xchg
enter
inc
iret
les
xor
fnsave
repnz
shlb
pop
xor
sub
dec
jb
addr16
sbb
leave
mov
pushf
dec
add
test
pop
add
jmp
subb
mov
jl
out
orb
data16
xor
cmp
js
sub
popl
sahf
jae
mov
cld
pop
jbe
out
sbbb
aas
pop
fwait
pop
inc
cltd
and
sbb
adc
fs
xchg
nop
and
jns
jo
shrb
push
pop
mov
in
jbe
add
adc
fsubrs
pop
lcall
mov
daa
nop
enter
xor
fabs
mov
cltd
xchg
insb
les
dec
test
rcrl
insb
add
or
repnz
xchg
nop
push
adcb
dec
ror
xor
divl
xchg
ds
mov
sbb
insb
lret
nop
dec
sbb
cmp
mov
dec
and
add
add
insl
bound
dec
shrl
xlat
xchg
hlt
sub
lcall
lods
sub
inc
addl
inc
addr16
out
cmpb
clc
adc
inc
std
push
jno
psubw
gs
cmpsb
daa
loop
jnp
ret
pop
rolb
jecxz
and
or
dec
push
jno
movb
and
fcoml
lds
mov
cs
cwtl
mov
dec
out
push
in
inc
aas
mov
in
cmp
insb
inc
push
stc
xchg
shrl
mov
in
ds
and
push
push
bound
arpl
pop
lods
adc
add
popa
mov
popf
sub
mov
fidivs
cmp
in
mov
out
enter
add
jle
mov
rorb
push
out
outsl
lds
hlt
mov
inc
push
test
or
mov
int
and
push
aaa
xlat
mov
mov
mov
cltd
imul
mov
sub
jl
or
addr16
fisttps
push
pop
mov
in
icebp
scas
sbb
pmaddwd
call
jge
clc
cmpsl
sub
enter
pushf
scas
mov
push
sub
mov
add
xor
and
rolb
push
adc
or
jns
lret
stos
adc
repnz
dec
jecxz
mov
jmp
movsb
push
and
arpl
inc
rcrb
filds
dec
clc
cmp
cli
insl
mov
xor
sub
push
inc
hlt
cmc
adc
nop
jns
cmp
xchg
inc
adc
enter
scas
lea
sbb
add
inc
fdiv
sarl
push
lea
std
cmpl
dec
inc
out
leave
repnz
add
inc
jmp
mov
ret
dec
dec
mov
xor
insb
int
call
cmc
xchg
lret
int3
inc
cwtl
out
ficoml
std
add
cmpsl
cwtl
jl
or
adc
repnz
movsb
int3
les
pusha
jp
cmp
and
or
imul
ss
test
sub
sub
sarb
pop
cmpsl
jae
sub
popf
shrl
test
andb
push
loopne
js
pusha
mov
fwait
test
xchg
lahf
das
imul
shrb
or
sbb
in
rol
cs
ljmp
mov
mov
std
inc
dec
and
xchg
ja
arpl
push
mul
add
icebp
lret
gs
outsl
loope
out
fsubl
fcomps
cmp
push
or
lcall
icebp
std
mov
mov
xor
xchg
xor
jnp
mov
je
sub
icebp
fmuls
jg
or
mov
ss
cs
add
out
adc
mov
gs
cmc
adc
xor
sbb
aam
xor
xchg
nop
cwtl
ds
cwtl
pop
mov
movsb
jno
mov
jmp
daa
sahf
aaa
je
sbb
inc
out
dec
cmpsb
or
xor
lret
or
pushf
mov
pop
sbb
aas
loopne
pop
stos
ret
mov
leave
mov
xor
pop
pop
loope
insl
or
adc
jge
outsb
mov
add
arpl
in
and
sbb
loopne
stos
mov
dec
lock
into
iret
test
add
insl
cmp
xor
mov
adc
sbb
and
in
mov
sub
fidivl
int
in
mov
sar
nop
cmp
or
xchg
mov
lock
pop
sti
or
jecxz
cwtl
dec
sub
cmp
inc
cmc
adc
push
mov
add
and
into
pop
lds
inc
pop
sub
lock
push
js
sbb
xchg
pop
sub
icebp
mov
scas
xor
dec
jmp
mov
loopne
aas
lahf
stc
lds
rcll
jmp
in
inc
outsb
inc
int
add
dec
jae
dec
jne
test
dec
mov
shrl
jle
dec
or
fsubl
add
in
out
adc
dec
push
add
mov
jno
mov
pop
dec
pop
sub
bnd
cmp
push
lods
xchg
cmp
jae
xchg
push
and
out
les
lahf
in
outsb
add
das
jg
cmp
andl
pusha
xlat
testl
add
lods
inc
xor
jmp
push
push
mov
sub
sub
gs
pop
xchg
fcmovnu
push
ret
mov
insl
std
pop
dec
rcrl
comiss
js
loope
mov
jae
xor
or
stos
cmp
mov
sbb
mov
insl
and
xor
mov
xor
sbb
push
pop
jecxz
loop
out
mov
mov
and
pop
jo
dec
mov
lods
fisttps
xor
sub
sbb
mov
push
pop
mov
lods
repnz
div
in
mov
fstps
popa
lods
mov
aam
pop
dec
push
xor
setae
repnz
bound
xchg
or
out
mov
sbb
mov
aaa
pop
sub
movsb
add
or
fdivs
cli
mov
icebp
mov
xor
add
cmp
adc
rcrl
fimuls
stc
icebp
imul
fmull
inc
adc
out
imul
scas
fmull
push
jo
or
aaa
aaa
cmpsb
pop
cmp
push
jg
pop
insb
mov
dec
test
lods
cmpsl
mov
fwait
xor
insb
cmc
or
outsl
cmc
inc
xor
cmp
jl
cmp
pop
repz
sbb
test
test
stos
outsb
jmp
popa
es
stos
ret
fisttps
xchg
mulb
or
dec
js
push
insb
adc
pushf
cmp
das
jmp
push
xor
jg
cwtl
jb
insb
pop
outsl
adc
stc
add
sbb
loopne
or
sub
shrb
xchg
insb
add
lods
xchg
rclb
add
int3
push
xchg
aas
or
out
test
sub
mov
out
sub
fcom
stos
sub
dec
loopne
aad
mov
repz
xchg
data16
sub
cltd
and
lods
inc
call
xor
cmpsl
mov
scas
adc
mov
and
movsb
mov
xor
lea
movsb
sahf
lret
and
jle
call
sub
dec
dec
ss
das
push
push
imul
aad
in
mov
test
mov
shr
lcall
push
fwait
mov
pop
jno
cltd
out
pushf
adc
mov
cld
pop
push
ja
cs
pop
cmp
push
div
lods
cwtl
jmp
inc
leave
push
push
cli
imul
add
cmp
enter
les
repz
mov
mov
clc
adc
popa
or
ret
loope
inc
pop
cli
pop
iret
jge
and
sub
stc
dec
dec
dec
not
mov
adc
frstor
and
mov
xchg
inc
mulb
pusha
out
inc
xchg
mov
jge
aaa
xlat
aaa
push
mov
xor
jno
xchg
into
mov
mov
aam
loop
mov
sbb
aad
js
inc
shrl
or
or
mov
lock
inc
jbe
loop
fwait
xchg
pop
xor
dec
aad
test
ret
cs
in
cli
inc
and
shll
sbb
pusha
push
je
mov
bound
mov
xor
cmp
push
jae
adc
sbb
in
ret
popa
xor
push
leave
and
icebp
cmp
inc
mov
loop
cmpsb
sahf
inc
cmp
mov
jmp
push
int3
shll
mov
leave
call
pop
adc
push
cmp
fildll
es
int
or
inc
test
xor
mov
lock
fbld
sub
fs
add
imul
add
aam
push
lods
push
dec
jmp
popf
addl
ret
adc
push
cmc
out
mov
xchg
js
push
out
insb
out
or
sub
in
xlat
jle
mov
cmp
push
xchg
xor
fucomip
mov
cmp
ret
les
xchg
rclb
data16
notl
cmp
loop
js
xchg
stc
jae
xchg
pop
lock
pop
lods
mov
mov
jae
lock
arpl
dec
andb
pop
clc
xchg
in
gs
add
ret
scas
js
lcall
sbb
lret
insl
jle
fcomp
or
pop
popa
and
pop
popa
push
push
sbb
push
aas
idiv
stc
out
add
add
in
and
test
sub
xchg
cmp
popf
call
jbe
cmpsb
mov
pop
aas
inc
xor
inc
dec
inc
shr
stc
pop
add
dec
inc
dec
iret
insl
scas
add
jecxz
push
test
xchg
idivb
xor
mov
hlt
push
enter
mov
iret
addr16
inc
pop
pop
xor
sbbl
sbb
and
adc
sub
sahf
adcb
dec
in
push
inc
pop
push
xchg
scas
call
xchg
stc
iret
xlat
lahf
mov
test
lcall
cmp
mov
lods
sub
mov
xor
or
mov
xchg
cwtl
outsb
xchg
cmp
xchg
insl
nop
cmp
dec
mov
sub
out
jbe
and
insl
pop
in
dec
je
push
loope
mov
pop
ficompl
sahf
jmp
inc
ja
mov
ret
lcall
mov
or
and
and
aad
xchg
cli
divl
pop
jne
push
bound
xchg
push
inc
mov
fs
popa
hlt
push
xor
jl
push
push
nop/reserved
adc
dec
arpl
loopne
mov
in
das
inc
insb
cmp
lock
fwait
testl
lods
stos
fnstsw
jmp
adc
sbb
aaa
mov
push
test
outsl
xchg
mov
push
sbb
fwait
cmp
pop
mov
sbb
gs
xor
stos
adc
lea
iret
test
cmp
popf
cmp
mov
cmp
inc
cmp
xor
or
sahf
test
jle
xchg
test
mov
scas
mov
popf
push
adc
cmp
jne
outsl
cmp
fwait
mov
push
xlat
pop
lock
pop
sbb
cwtl
jne
lea
add
and
jge
mov
js
ss
adc
mov
cmpb
inc
jnp
xchg
out
sti
pop
ss
ror
shrb
jg
mov
imul
jae
sahf
aas
xchg
inc
ds
cmpsl
test
fwait
mov
aaa
hlt
test
sub
out
sbb
sbb
mov
and
or
mov
adcb
aaa
jae
mov
cli
dec
movsb
pop
and
or
and
test
push
test
pusha
insb
xlat
lea
xchg
push
mov
push
push
and
sbb
fisttpll
cmp
ds
out
or
loope
push
cwtl
add
push
rcll
bound
pop
sarb
add
pop
les
cltd
jp
mov
or
enter
cmpsl
xor
xchg
mov
xor
js
std
xchg
cmpsl
pop
pop
es
mov
inc
ss
cmp
jno
loopne
lcall
and
sahf
scas
sbb
mov
and
sahf
inc
jae
xchg
pushf
aas
xlat
push
lret
rorl
lahf
lock
fcmovbe
pop
fdiv
inc
or
faddl
out
std
jns
adc
sbb
rclb
hlt
inc
cltd
add
cli
fwait
pop
mov
xchg
xor
daa
addr16
mov
jno
pop
ja
test
clc
push
push
jb
fwait
lea
push
jecxz
loop
mov
pushf
cmp
popf
mov
insl
fadds
popf
adc
pushf
cmp
mov
pop
idiv
lods
jo
dec
mov
mov
xchg
ret
mov
sub
adc
fwait
inc
xchg
rorl
fnsetpm(287
jl
mov
mov
push
lea
fstp
loope
daa
inc
ss
shr
lods
jns
push
push
mov
and
push
fmull
jecxz
outsl
leave
and
xchg
fisttpl
inc
xchg
enter
dec
movsl
inc
push
jg
adc
add
test
rorl
inc
dec
and
lcall
or
adc
sbb
mov
inc
inc
mov
orb
adc
and
push
push
fists
jbe
sahf
xchg
arpl
out
int3
or
in
out
das
cwtl
or
fistps
cmp
sbb
in
push
lock
daa
mov
pop
pop
mov
repz
mov
shl
add
jno
push
fistps
iret
jnp
lret
shl
test
cmp
sbb
push
mov
push
inc
scas
and
lock
dec
jmp
ljmp
fistps
pop
mov
outsb
adc
cmp
pusha
dec
je
adc
inc
mul
mov
cmpsb
jb
aas
scas
sar
cmpsb
cmp
imul
xor
outsl
imul
adc
movsl
mov
aam
and
push
jne
je
add
fidivl
add
adc
std
xchg
test
mov
mov
sbb
xchg
dec
pop
lods
mov
aad
cmp
insb
pop
out
inc
dec
inc
gs
ret
adc
dec
mov
pop
loope
and
aaa
rcll
pop
pop
in
pop
ss
sti
insb
fisubs
mov
pop
in
inc
outsl
stos
add
lahf
dec
sbb
sbb
mov
into
sbb
xchg
pop
cmp
xor
aad
pop
sub
push
and
dec
lods
outsl
not
pop
adc
sarl
mov
push
std
pop
fisubl
xor
jg
mov
inc
cld
push
out
adc
jns
mov
cmpsl
cmp
sbb
cmp
js
gs
mov
sbb
mov
scas
inc
popa
and
mov
mov
gs
js
test
andl
repnz
mov
in
in
int3
loope
pop
push
mov
ss
inc
add
inc
mov
fmulp
adc
mov
xor
frstor
bnd
xor
inc
mov
jge
xchg
push
mov
add
inc
rcrb
popa
aas
inc
inc
jmp
dec
aam
mov
mov
outsb
xchg
popf
mov
cmp
sub
out
dec
fdivrl
cmp
mov
lret
xchg
scas
mov
adc
cmc
out
int3
testb
xor
mov
loop
dec
lcall
aam
cmp
popa
jle
cli
shll
cmp
enter
mov
mov
xchg
jge
xor
pop
and
push
addr16
addr16
fimuls
scas
out
pop
or
ljmp
dec
add
fdivr
jl
shl
std
dec
mov
cmc
pop
lea
sarb
aad
lods
int3
inc
enter
ds
pusha
mull
lret
jae
pop
sarl
jg
pushf
cmp
add
stos
fwait
pop
repz
aaa
add
cs
out
xor
repz
addr16
mov
xor
jo
sbb
lock
lods
lods
scas
mov
popf
js
mov
xor
hlt
imul
pushf
cwtl
je
test
add
add
or
js
jle
and
adc
push
dec
jp
andl
in
cs
jg
cltd
mov
gs
mov
fst
push
outsl
cmpsb
in
add
sbb
movsl
je
or
add
pop
push
or
pop
xchg
xlat
movsl
mov
arpl
ss
cmp
outsb
test
and
movsb
jnp
inc
hlt
push
ret
inc
fwait
cmp
cmpsb
orl
jb
cmp
sbb
dec
shl
jl
test
or
into
add
add
push
cmp
fldt
dec
shll
lds
std
pop
std
xchg
call
push
cmc
dec
imul
pop
mov
dec
sbb
arpl
lret
cmp
fdivs
xchg
and
sbb
aaa
notb
jb
sub
push
jecxz
mov
mov
cld
fstpt
inc
fnstenv
scas
mov
rolb
pop
xor
dec
out
inc
add
hlt
fbld
fstpt
jmp
jb
mov
mov
xorl
sub
add
clc
mov
or
push
inc
xchg
int
add
or
sub
bound
cmpsb
aad
fwait
mov
out
mov
xorb
les
adc
adc
sbb
dec
es
mov
push
insb
cli
lea
or
icebp
cmp
sbb
js
repnz
shl
jbe
cmp
outsb
jecxz
in
sbb
mov
sub
pop
jmp
pop
repnz
or
lock
jo
das
ja
inc
sub
fs
outsl
ret
std
aam
out
mov
adc
iret
xor
hlt
dec
enter
or
dec
and
leave
xor
jns
repz
jl
shll
lods
fdivs
data16
sub
inc
imul
lea
add
pushf
lret
popf
mov
pop
sbb
cli
loopne
iret
and
jg
int
or
push
mov
stos
add
sub
xchg
fcoms
adc
jno
scas
lret
mov
sub
scas
cmc
pop
xor
fistl
pop
test
dec
add
bound
inc
or
or
andb
cmp
cwtl
mov
inc
xor
loope
mov
sbb
sbb
arpl
push
leave
es
cmp
repnz
jl
cltd
ret
sbb
push
push
mov
adc
gs
sbb
sbb
out
shlb
or
sarl
stos
and
adc
add
xchg
andnps
jae
add
cmp
dec
inc
jno
adc
mov
mov
sbb
ds
loop
and
mov
pop
aam
mov
jns
cmc
into
dec
cmp
sub
stos
and
test
dec
or
xchg
xchg
cmp
xor
inc
jmp
movb
leave
imul
inc
out
js
jp
jbe
mov
inc
or
call
pop
mov
mov
lods
clc
pop
cmc
ds
and
inc
lock
jl
jnp
adc
mov
subl
or
stos
jne
in
loop
xchg
mov
push
leave
jmp
xchg
xor
cmp
aam
or
pop
ja
iret
imulb
xchg
xchg
rorl
mov
mov
mov
sbb
adc
fsubr
adc
mov
movsl
les
and
mov
ja
xchg
lds
stos
pushf
push
inc
pop
jae
fwait
inc
xchg
rorb
iret
or
repz
xor
adc
fistl
pop
push
add
jo
dec
jmp
mov
pop
jg
push
pop
xchg
fcmovnbe
lea
repnz
insb
inc
or
fnstenv
and
ds
cmp
xor
lea
mov
xchg
cmp
add
lcall
push
ja
or
add
fldenv
rcll
je
add
and
inc
pushf
shlb
and
dec
and
sbb
and
ror
pop
out
inc
insl
bound
fst
and
inc
adc
push
out
mov
inc
push
pop
dec
mov
movsl
mov
pop
call
jne
push
sbb
stos
jo
add
push
sbb
jle
add
mov
add
scas
ss
icebp
imulb
cmpsl
rclb
fwait
mov
mov
cmpsb
test
mov
lds
or
sub
je
mov
xchg
imul
adc
adc
push
cli
hlt
js
mov
or
mov
popa
inc
add
sbb
cmp
xchg
inc
ja
icebp
ja
mov
cmc
pop
jns
fs
popf
mov
pop
mov
jns
iret
sub
and
jge
cmc
inc
inc
cmp
fwait
sub
enter
fdivrl
js
std
lock
jo
sti
cmp
fiadds
into
call
jge
mov
sub
xchg
add
and
inc
leave
or
out
stc
adcb
push
stos
fildll
lret
imul
jo
mov
cmp
push
mov
movsl
mov
cld
jmp
mov
rclb
in
or
adc
pop
pop
cmpsb
cmp
pop
add
mov
fs
mov
and
dec
scas
and
or
cld
int3
jp
aam
xchg
ror
arpl
ret
pop
push
int
xchg
xlat
jecxz
testb
xchg
xchg
scas
insb
cs
jns
mov
ficoms
loopne
adc
sub
rcr
sub
and
outsl
inc
out
mov
pop
repz
push
hlt
scas
sbb
flds
stos
xor
enter
mov
jae
lock
xchg
shrl
xchg
xlat
xchg
fisubrl
or
shl
mov
shrl
add
mov
daa
adc
jp
adc
mov
jno
push
sbb
movsb
inc
mov
lds
sbb
sbb
pop
jno
lods
dec
rorl
loopne
repz
in
mov
mov
mov
jge
subb
jmp
sbb
cmpsb
loopne
leave
arpl
shlb
not
movsl
xor
xchg
or
iret
addl
dec
dec
loop
push
ret
pop
arpl
push
ljmp
scas
out
cs
and
push
rcl
clc
pop
pop
fisubs
push
outsb
aam
push
imul
enter
stos
add
add
dec
out
insl
mov
stc
loope
xchg
js
lods
xor
jge
mov
daa
popf
xchg
dec
popa
sub
cmp
outsl
xchg
shll
psrlw
push
push
adc
pop
movsl
add
xor
mov
jp
in
inc
out
and
cmc
aad
cmp
sub
push
ret
jbe
inc
push
sub
pop
lds
outsl
roll
sub
xor
lock
mov
jge
lods
sti
xchg
bound
adc
jns
sbb
pop
adc
and
cmp
sarb
scas
rorl
cmp
sub
sub
adc
push
xchg
adc
or
sbb
frstor
and
cmp
nop
and
mov
jbe
sahf
rcll
imul
leave
cmp
orl
cs
dec
sahf
dec
ljmp
orb
nop
jnp
fidivs
fwait
sbb
mov
add
mov
cmp
cwtl
ret
mov
mov
mov
cmp
pop
mov
xor
movsb
push
jno
aas
es
and
mov
and
sti
cmp
jp
popf
and
fstl
add
rorl
sarb
lods
popa
fsubs
sbb
daa
pop
pop
mov
rorl
push
cmp
in
ficomps
leave
pushl
popa
sti
mov
fcomps
lods
dec
inc
jg
dec
and
aaa
aas
je
fistl
inc
fisubrs
push
adc
mov
dec
cmp
arpl
pop
adc
xchg
out
add
jno
movsl
out
mov
lock
daa
pop
pop
dec
sub
jne
mov
jbe
mov
pushl
xor
fadds
cmp
and
or
imul
idivl
and
outsb
fildl
jbe
fdivrl
ljmp
add
fs
ja
sbb
int
pushf
dec
mov
out
ss
mov
jmp
mov
imul
mov
out
inc
xchg
xchg
xor
popf
dec
int3
sub
inc
dec
xchg
ja
insb
nop
push
ljmp
scas
sbb
imul
jne
ficoml
mov
dec
aaa
push
loope
cmp
cmpsl
mov
inc
mov
jl
sbb
xchg
fmuls
rorb
or
push
lea
outsb
and
pop
and
push
incb
stos
dec
aas
adcb
shlb
cmp
xchg
pop
mov
mov
mov
push
cmc
jo
mov
mov
inc
push
adc
jg
aam
mov
addr16
mov
adcl
int3
mov
fidivl
shrb
xchg
js
xor
sar
sub
mov
cmc
pop
sbb
cmc
and
jg
mov
mov
fstpt
psubq
add
mov
pop
sbb
xchg
out
int
xchg
push
sbb
shll
std
sub
nop
and
dec
sbb
test
test
cs
lret
jmp
adc
jg
cmp
add
adc
cmp
and
es
out
adc
cmpsl
fwait
loopne
fcoms
mov
pop
ljmp
xchg
lret
mov
jo
jnp
pop
into
mov
popf
lcall
popa
dec
add
xor
cltd
cmp
pop
faddl
loopne
stos
movzbl
leave
test
pop
push
rclb
sbbb
ljmp
loope
jp
cld
xchg
icebp
add
xor
jg
ror
add
xor
xor
ror
mov
cmpsl
mov
test
cmpsb
imul
pusha
mov
int3
shlb
mov
inc
xchg
sub
out
popa
pop
xchg
and
insb
mov
out
pop
sbb
frstor
sarb
dec
xchg
xor
push
neg
ljmp
pop
loop
cli
xchg
es
and
inc
adc
jae
sbb
gs
leave
test
das
or
cmp
mov
loopne,pn
shrl
jp
or
fsubl
fistpl
dec
add
push
jns
bnd
xchg
sub
out
dec
inc
and
adc
mov
fisubs
jno
sahf
pop
lcall
xchg
scas
add
fwait
jnp
cmp
je
push
popf
xchg
clc
pop
test
sub
fidivl
int3
mov
jnp
adc
jbe
xor
not
lods
loopne
cmp
hlt
push
aas
inc
or
jnp
mov
sarb
xor
mov
in
imul
fs
fimuls
stos
and
mov
int3
hlt
or
mov
jb
sub
cltd
out
mov
sub
pop
or
push
test
scas
sbb
or
jbe
int3
sbb
cmp
shll
cmp
ds
lea
pop
mov
mov
lods
xchg
lcall
and
push
in
pop
pop
out
pop
outsl
cmp
fdivl
fadds
repnz
ret
push
add
pop
fisttpll
fmull
stos
ds
xchg
xor
xchg
scas
sbb
or
outsl
lret
dec
sub
dec
add
notl
mov
sub
aad
mov
in
dec
fildll
pop
sub
daa
movsb
inc
and
test
lea
jo
rcll
jbe
ss
xor
xchg
fnstsw
testb
xlat
cmp
fs
jno
cmpsb
das
or
lahf
aam
clc
or
xor
jmp
xor
push
pop
mov
or
insl
int3
and
test
ss
dec
jg
sahf
aas
mov
stc
sub
rorl
xor
xorb
and
mov
insb
leave
je
clc
and
and
ds
xchg
fmuls
das
or
pmulhuw
loopne
mov
dec
add
sub
inc
adc
mov
sbb
daa
jge
and
adcl
fidivrs
push
andl
insl
test
inc
adc
pop
jns
cwtl
test
mov
shll
loopne
fstps
icebp
sub
push
loope,pn
sub
out
cmp
std
fadds
jmp
jne
mov
imul
decl
lcall
add
sbb
xabort
sbb
pop
fs
xor
mov
xchg
xor
mov
mov
inc
sub
sub
xchg
add
notl
inc
xor
inc
sbb
push
icebp
scas
cmove
add
mov
mov
ds
jp
push
add
sub
outsl
iret
repnz
mov
iret
popa
mov
xchg
jae
or
sub
outsl
sub
js
and
dec
fisttpl
mov
int3
adc
mov
rclb
sahf
int
xorb
scas
incb
and
dec
icebp
or
scas
loope
push
pop
movsb
add
or
jmp
xchg
mov
mov
sub
shrl
popa
movsl
dec
sahf
inc
mov
pop
stos
sbb
stc
and
pop
and
lcall
testb
pop
cmp
cmc
or
adc
lods
mov
cmp
es
pop
push
pop
shll
lret
adc
jmp
ror
imul
leave
stos
dec
ds
test
mov
mov
or
xlat
mov
cmp
lret
or
clc
sub
xor
fiaddl
loope
fidivrs
lret
sub
shrb
jo
push
jo
sti
sub
mov
dec
jno
push
ljmp
sbb
mov
sbb
int
push
in
popa
pop
add
push
test
adc
xlat
addr16
cld
hlt
movsb
sub
outsl
call
lods
or
lds
fcom
jae
push
add
dec
mov
jnp
add
jae
and
sub
dec
sub
inc
jbe
xor
pop
pop
cli
aad
adc
or
push
ljmp
push
mov
xchg
in
cs
xchg
mov
dec
ficompl
mov
xor
push
repz
testb
jae
out
cld
and
sti
cmp
adc
and
outsl
ror
xlat
sub
dec
cmp
mov
push
push
mov
push
aaa
inc
adc
add
incb
inc
xor
xchg
fcmovb
xchg
pop
cmpsl
or
jne
xchg
xor
scas
or
imul
inc
shlb
dec
sub
adcb
adc
lret
inc
xor
testl
jnp
adc
jle
mov
xor
xchg
cmpsl
pop
jl
xchg
pushf
lahf
aas
push
sbb
mov
sub
inc
and
dec
inc
adc
imul
xchg
mov
scas
adc
push
mov
sbb
leave
jl
pop
and
push
xchg
jnp
pop
sub
insl
or
stos
sbb
lds
pusha
mov
sub
repnz
cmp
inc
mov
lods
cmp
xchg
or
and
ftst
mov
hlt
sub
sbb
add
pop
ja
sub
insl
shrb
inc
adc
iret
out
dec
and
cmpsb
icebp
add
cld
pop
sub
xchg
adc
test
cmp
mov
push
mov
lahf
xchg
arpl
add
or
into
out
pushf
aas
sub
xchg
and
mov
sbb
push
lock
inc
and
pop
fldl
icebp
add
nop
ret
pop
or
sbb
cmp
mov
xor
xchg
popa
mov
mov
pop
sub
clc
or
ficompl
jnp
repz
arpl
push
fldcw
pop
adc
dec
sub
mov
xor
cmpsb
test
cli
jne
push
pop
popa
insl
rorb
popf
inc
adc
out
dec
pop
pusha
dec
sub
pop
add
or
jmp
call
pop
mov
gs
adc
icebp
aas
fisttpl
into
cwtl
testb
fdivrs
outsb
stc
fildl
xor
jae
data16
and
xchg
xchg
inc
ds
mov
jno
push
outsl
and
out
stos
das
mov
pushf
repz
scas
jnp
jmp
xchg
pop
or
lahf
cmp
dec
xor
shl
jl
out
inc
pop
xchg
sahf
cmp
loop
fs
or
imul
js
dec
movsb
cli
sub
xchg
mov
sub
dec
jns
popa
ret
xor
xor
mov
insb
push
fs
mov
outsl
push
lock
lret
arpl
xchg
xchg
add
arpl
mov
push
popl
push
jbe
sbb
add
pop
adc
scas
and
in
inc
dec
xor
mov
cltd
cmp
sbb
mov
fimull
iret
aad
out
fbld
or
gs
push
bound
adcb
test
or
add
xchg
and
jg
xchg
xchg
aas
add
test
pushf
inc
xor
push
mov
jne
repnz
cmc
mov
movsb
inc
mov
inc
daa
cwtl
cmp
push
loop
das
mov
stc
add
lahf
push
add
loopne
das
addb
inc
call
sahf
sub
out
cltd
and
movsb
sub
mov
sarb
dec
mov
sbb
sub
dec
adc
cwtl
daa
cwtl
data16
adc
xor
popa
int3
mov
mov
dec
loopne
jecxz
jp
mov
bound
fdivrs
sbb
shrb
sbb
notl
icebp
sbb
sti
arpl
push
arpl
loopne
mov
dec
fbld
jge
inc
mov
popf
out
jmp
imul
mov
and
int3
add
xor
arpl
fsub
adc
cmpsl
out
cmp
scas
push
data16
xchg
fnstcw
test
sub
add
and
test
nop
jo
loop,pn
pop
push
outsl
mov
jo
das
rcll
in
dec
sbb
push
cmp
popl
jo
movaps
lahf
xor
aam
lret
mov
mov
mov
xchg
and
dec
sar
or
cli
or
push
insb
rol
test
sbb
out
pop
adc
push
imul
popa
leave
push
filds
jmp
mov
repz
scas
sahf
xor
xor
cmp
inc
xor
mov
mov
mov
mov
cmp
and
sub
and
std
pop
lods
add
cmp
jns
test
mov
sub
fldenv
jnp
int
push
xchg
inc
xor
sub
out
cmp
nop
repnz
pushl
std
inc
jecxz
jno
mov
xor
ret
cs
fwait
sti
adc
lods
push
in
add
icebp
fnstenv
popf
ss
push
push
or
sub
mov
cmp
push
or
mov
in
das
xchg
xchg
lret
jge
dec
andb
or
outsl
mov
push
pop
in
hlt
xchg
pop
lock
iret
mov
aas
mov
xor
cmc
xchg
inc
fsub
jno
jb
inc
cmp
cmp
gs
stos
or
mov
imul
icebp
andb
add
lret
add
jno
pop
clc
mov
sbb
test
or
scas
aaa
mov
mov
mov
divb
cld
decb
mov
sub
sar
xor
mov
mov
cmp
test
outsl
rol
sub
test
cld
push
xchg
cmp
lcall
lea
mov
cmp
push
jl
pusha
rclb
jp
out
cmp
fisubs
mov
xor
push
mov
iret
xchg
das
fwait
and
ss
mov
push
loopne
pop
cli
add
rorb
out
push
mov
push
dec
and
lret
dec
adc
dec
imulb
xchg
bts
or
movsb
push
ljmp
dec
lea
jno
inc
ret
inc
push
ljmp
loope
inc
xor
out
inc
aad
push
movsl
sbb
loope
mov
xchg
hlt
cs
fsubp
pop
inc
inc
sub
jnp
or
out
sbb
bound
dec
dec
sbb
add
push
add
loopne
and
mov
cmp
mov
xchg
push
add
add
pminub
xchg
sbb
mov
inc
push
ficoml
dec
jmp
cmp
cld
add
inc
repnz
pop
call
or
imul
jb
add
out
xor
sbb
sub
mov
xor
push
fsubrl
pop
push
aam
inc
fidivl
or
sub
inc
xor
or
jge
pop
lret
enter
orb
push
repz
cmc
pop
mov
inc
sbbl
inc
icebp
mov
in
sub
pop
movsl
mov
gs
mov
sub
rcrb
int
and
mov
mov
ret
push
int
aam
xor
or
ret
inc
pushf
dec
mov
xor
pusha
je
int3
shrl
loop
popa
sbbb
add
mov
bound
lcall
sbb
cmpsl
mov
jp
xchg
in
mov
jecxz
sbb
sbb
scas
iret
aam
xor
push
sahf
aad
mov
cmp
sarl
sbb
cmp
jnp
cltd
mov
jl
sub
pop
mov
push
jle
cmp
fisubrs
flds
and
sub
mov
es
cltd
ds
mov
xor
cmc
roll
mov
dec
aaa
mov
fcomps
dec
or
fdiv
dec
out
xchg
push
not
bound
out
fnstsw
xchg
sti
lock
addl
out
sbb
mov
push
lock
mov
sbb
stc
adc
ds
test
jno
shll
pop
push
mov
fimull
ds
aad
cmp
fcmovbe
adc
cmp
add
jl
xlat
cmp
jmp
push
sub
xlat
pop
lock
dec
daa
rolb
in
lods
notl
dec
out
push
out
jp
pop
in
push
add
aaa
cltd
cwtl
push
lods
dec
dec
out
rol
mov
scas
scas
pusha
aad
cmp
rolb
out
mov
inc
fcomi
jecxz
int
jno
adc
enter
adc
incb
inc
inc
int3
call
push
lea
dec
call
push
aam
xorb
xor
call
xchg
push
or
gs
mov
cmp
roll
call
jbe
mov
xchg
push
sub
sti
das
cmpsl
sbb
mov
push
roll
push
xchg
xor
dec
xchg
mov
stc
daa
sti
mov
fwait
pop
scas
push
pop
arpl
imul
in
mov
and
add
movsb
mov
hlt
push
push
xor
out
inc
mov
xchg
sub
sub
cwtl
push
sub
fsts
mov
jbe
mov
loope
xor
lods
mov
int
jle
js
jg
push
insb
je
xchg
xor
nop
xlat
mov
ret
fcoml
pusha
aam
jg
jne
icebp
add
out
test
mov
neg
cmpb
ret
inc
in
dec
dec
arpl
stos
xchg
sbb
sub
out
or
push
fisttps
fnsave
stos
and
mov
das
lret
mov
sub
nop
fnsave
es
xchg
mov
out
pop
andb
jecxz
mov
jns
hlt
xchg
add
call
pop
dec
push
rcll
or
jno
scas
pop
sbb
lods
cli
ss
lcall
inc
adc
cltd
mov
sbb
or
cmpsl
mov
and
sub
mov
fisttpl
inc
fwait
pop
mov
test
cmp
sub
inc
aam
mov
sub
or
rcll
dec
sub
pushf
sarl
sbbl
lods
xor
pushf
adc
push
lret
mov
nop
push
lret
xchg
jp
mov
sbb
hlt
pop
xchg
das
addr16
mov
mov
dec
fadds
adc
sub
inc
mov
xchg
out
jl
lods
mov
out
mov
shl
es
sub
push
nop
gs
dec
xor
fadd
jge
sahf
adc
dec
mov
rorl
into
push
xor
mov
and
fndisi(8087
pop
inc
pop
daa
js,pt
jne
pop
loope
pop
xchg
mov
fstpl
imul
roll
dec
sarl
pushf
les
xor
mov
cmp
mov
std
aam
scas
arpl
sete
pop
adc
or
push
lods
sbb
xorl
push
bound
call
shlb
xchg
repz
jl
add
hlt
scas
dec
leave
mov
aam
mov
dec
jp
sti
pop
or
dec
pushf
add
pop
mov
ds
repnz
test
jg
scas
icebp
das
insb
cmp
aas
lock
lock
jle
int
jne
aas
cmpsb
repnz
pushf
dec
mov
jbe
mov
arpl
aaa
and
out
cli
sbb
xor
push
rorb
cmpsb
sbb
cmpsb
shlb
aad
push
add
ds
sahf
iret
cmp
dec
fisttpll
xchg
mov
cmp
ja
stos
shl
mov
loope
or
mov
mov
xchg
inc
rolb
aaa
aam
push
addr16
mov
mov
js
and
hlt
adc
mov
push
jnp
out
mov
xor
fisubs
sub
notb
in
cmp
jno
fisubrs
repnz
jne
out
stos
fists
sarl
insl
mov
je
cmp
loope
sbb
ret
mov
xchg
push
xchg
ds
aam
fmuls
jp
movsb
mov
mov
cmp
or
and
idivl
mov
js
daa
insb
stc
sbb
subl
jae
add
xchg
jb
dec
mov
xor
mov
jbe
sbb
adc
lret
xchg
cmp
jl
xchg
ds
push
mov
scas
lea
orl
sti
aad
hlt
clc
js
xchg
dec
jae
pop
int3
xchg
jnp
pop
push
mov
js
mov
dec
xchg
neg
inc
outsb
mov
fwait
xor
bound
and
repz
push
mov
mov
add
jnp
sub
ds
js
xor
test
adc
lsl
sbb
das
mov
mov
ret
out
mov
xor
or
inc
cmpsl
push
frstor
int3
loope
rcrl
imul
xchg
pop
xor
adcb
rolb
lcall
aad
dec
pop
jo
and
test
xbegin
ljmp
mov
aas
pushf
sub
pop
mov
add
pushl
iret
roll
mov
popf
stc
jecxz
lea
fsts
push
adc
lods
jne
push
lea
jns
in
xor
sub
add
jle
xor
cmp
out
hlt
mov
jns
subl
xchg
sbb
aad
sbb
push
push
stos
shll
loope
jae
jne
mov
lret
scas
xlat
mov
sub
sub
sbb
adc
cmp
arpl
test
stos
xor
jno
add
push
cmc
pushf
imul
sub
sti
outsb
push
aad
jl
inc
jl
cwtl
and
data16
pop
in
xchg
test
inc
ds
add
jle
jne
mov
sub
dec
inc
sub
jmp
inc
sbb
mov
jb
cli
sbb
inc
int
fnstcw
add
adc
clc
or
push
xor
lods
mov
insb
imul
stos
call
in
push
lret
mov
sub
inc
test
mov
mov
xchg
pop
jae
inc
jg
subb
push
repnz
push
and
sbb
js
push
push
sub
push
sub
inc
pushf
adc
test
test
std
loopne
lahf
aam
mov
test
xchg
rclb
bswap
cltd
ss
sub
mov
scas
jae
mov
out
xchg
dec
incl
aas
sub
ror
jo
push
or
dec
add
mov
iret
loop
xorb
cmp
fbld
and
dec
test
cs
push
cmp
sbb
repz
call
mov
fidivrl
or
sbb
xchg
pop
scas
push
cmp
jns
in
lods
or
dec
adc
adc
dec
jbe
jb
xchg
xlat
out
mov
jb
add
add
push
or
roll
dec
into
out
or
or
cs
sub
or
xchg
jmp
push
mov
repnz
movsb
push
mov
jecxz
xchg
ja
xchg
nop
xchg
hlt
loop
mov
rorl
pop
xor
xor
and
push
push
jno
dec
out
int3
in
mov
clc
xchg
xchg
pop
inc
mov
inc
dec
addr16
inc
ljmp
mov
dec
xchg
pop
push
rorb
jns
push
mov
xchg
inc
inc
xchg
jno
lcall
push
js
mov
xor
inc
and
xor
mov
xor
jl
mov
sbb
ja
inc
jmp
xchg
xorb
in
cmp
scas
rolb
mov
lahf
pop
jmp
aad
js
in
or
lahf
in
jnp
and
adc
clc
cmp
fwait
mov
mov
xchg
mov
int
loop
lahf
rclb
aaa
test
mov
leave
xor
or
lcall
add
sub
mov
jno
les
mov
clc
xchg
aaa
mov
jnp
push
call
cmpsl
sbb
add
addb
inc
or
mov
cmp
data16
add
imul
mov
cmc
or
jnp
inc
push
pushf
out
dec
lods
dec
xchg
mov
cli
out
popf
lahf
ret
cld
mov
pop
xlat
enter
cmpsb
mov
dec
repnz
mov
mov
push
cltd
lea
movsb
mov
div
mov
sti
pop
jo
leave
sbb
or
add
push
loop
or
mov
fildll
ljmp
sub
add
pop
dec
mov
out
rol
mov
or
jae
pop
lods
mov
mov
and
push
sbb
les
lods
sub
fwait
adc
mov
jae
nop
js
pop
test
hlt
dec
outsb
mov
xchg
dec
out
pop
lock
jnp
push
mov
inc
and
adc
dec
loop
and
sub
push
lcall
aad
jge
repz
and
jp
lret
cmp
push
sbb
cwtl
or
jmp
sahf
xchg
fisttpll
scas
into
test
out
ror
data16
clc
mov
xchg
xchg
dec
push
insl
in
mov
fstpl
sub
ljmp
cmpsb
ficompl
mov
or
pop
pop
cld
orl
xor
ret
dec
lret
outsl
and
add
mov
loope
mov
push
jne
arpl
arpl
pushf
push
jg
mov
sub
shl
mov
sbb
mov
push
dec
inc
pop
jne
pop
into
insl
dec
mov
mov
mov
stos
push
cwtl
int
adc
mov
aam
mov
fcomps
xchg
mov
adc
or
shll
pop
mov
inc
pop
or
divl
mov
lahf
and
mov
pshufw
sbbb
in
fdivp
test
sbb
ret
mov
jp
mov
push
pop
cmc
test
and
add
movsb
test
jo
iret
push
dec
or
in
and
pop
push
js
mov
and
out
fdiv
ror
dec
xchg
inc
push
pop
les
daa
adc
test
fcoms
out
in
dec
cmp
cltd
movsl
or
inc
or
push
test
dec
daa
mov
lcall
pop
xchg
scas
aad
adc
repnz
xchg
out
fwait
mov
int3
lahf
mov
enter
dec
pop
xchg
jle
ret
add
pop
test
roll
pop
mov
jecxz
inc
arpl
rclb
enter
movsl
cli
mov
xchg
sub
lcall
stos
xlat
add
xlat
mov
rcrl
cmp
lea
or
xor
std
std
cmp
fcoml
cmp
pop
mov
or
xlat
inc
fs
leave
rcrl
mov
sbb
into
lcall
bound
sbb
pop
inc
push
lods
repz
mov
xor
rolb
xlat
filds
add
or
push
jmp
clc
shl
sub
jl
push
or
dec
jo
into
popa
sbb
int
mov
xchg
into
xchg
dec
lcall
pushf
fadds
or
dec
sbb
sbb
fisubl
jmp
adc
fwait
popa
jae
xor
mov
push
pop
stc
ret
insl
push
call
cmp
adc
adc
lock
mov
mov
sub
dec
xor
js
jmp
inc
das
fstl
cmp
adc
sbb
int3
cmp
inc
mov
pop
imul
lret
loopne
or
adc
mov
int
xchg
repz
jne
daa
mov
aas
sti
repz
inc
mov
outsb
fcos
add
mov
iret
and
xchg
jns
dec
imul
sub
jmp
adc
aad
fimuls
xorl
aas
inc
mov
js
dec
jecxz
xchg
aas
xor
adc
gs
sahf
add
roll
repnz
sub
or
cltd
add
pop
fbld
andb
shlb
gs
sub
ret
or
sub
push
or
pop
in
push
jbe
push
ja
lcall
mov
iret
adc
outsb
jg
push
popa
outsl
test
xchg
pusha
scas
jmp
test
push
cmpsb
test
shll
cmp
inc
data16
inc
sub
xchg
and
out
xor
xchg
mov
imul
out
jbe
les
xor
mov
in
rcr
jmp
inc
movsl
addr16
mov
pop
into
clc
test
and
adc
cld
sbb
cwtl
sbb
shrl
inc
pop
sbb
stos
xchg
lock
jmp
dec
xchg
add
adc
jl
or
adc
stos
outsb
mov
push
xchg
rclb
shrl
mov
pushf
andb
sub
xor
iret
iret
cli
fiaddl
jb
outsb
into
sub
int
jp
cmp
or
ds
cmp
add
push
loop
out
dec
fisubl
xor
and
and
xchg
outsl
insl
sti
fisubrs
sbbl
xchg
xor
rorb
adc
and
aas
mov
jno
cmp
dec
pop
es
mov
push
and
mov
sub
sbb
mov
sub
add
dec
shlb
and
stos
pop
fiaddl
mov
mov
sbbb
lods
leave
lret
xor
sahf
js
jmp
inc
adc
pop
ficompl
mov
ljmp
xchg
out
mov
adc
xor
leave
gs
rorb
mov
sbb
out
adc
push
mov
sbb
jp
xor
push
lret
into
lahf
mov
sbb
aas
cld
inc
lods
ret
cmp
in
filds
mov
adcl
mov
lods
inc
int
loop
les
push
mov
adc
push
cs
dec
or
pop
push
lods
mov
sarb
mov
and
jo
outsb
cld
stos
and
std
frstor
jae
xor
aaa
jge
rcrb
adc
leave
pop
lea
xor
inc
mov
cmp
aaa
xor
push
inc
sbb
dec
in
fdivl
mov
add
sti
lods
and
dec
mov
inc
mov
sub
jb
std
stc
xchg
and
pop
mov
pop
jle
outsl
std
pop
sar
or
inc
hlt
mov
mov
rcrl
daa
into
stos
mov
shll
test
inc
or
jl
pop
jecxz
dec
insl
add
sarb
xchg
scas
adc
shll
mov
loop
test
decl
push
dec
aam
or
fidivl
orb
pop
jg
cwtl
add
xor
arpl
std
test
icebp
mov
add
rorb
push
mov
mov
push
mov
push
rcl
push
xor
popa
sub
sub
test
sarb
jle
mov
or
add
cli
xchg
push
and
movsl
or
jmp
int
lods
out
fisttpll
pop
lock
sarb
mov
mov
xchg
mov
mov
les
pop
push
mov
fwait
pop
xor
dec
push
push
pusha
mov
sub
jns
cmp
or
sub
jg
xchg
mov
into
js
aad
data16
xorl
pop
dec
insb
es
jne
dec
push
inc
mov
bnd
sbbb
test
mov
sbb
gs
push
sbb
rol
scas
mov
add
iret
pop
pop
dec
mov
push
dec
lahf
fildll
dec
ret
jg
mov
icebp
cwtl
or
clc
pop
pop
cmp
jmp
in
mov
sbb
inc
cld
das
cld
scas
mov
hlt
gs
stos
jno
ror
bound
sub
pop
out
sbb
loop
sub
movsb
jmp
rol
insl
daa
incb
mov
or
aaa
fwait
dec
out
pop
mov
mov
inc
bound
add
lea
in
and
and
cmp
xchg
cmp
pop
and
adc
cltd
or
fs
dec
adc
or
ljmp
shrb
xlat
iret
or
fcmovbe
insl
xchg
lret
push
cmp
dec
jbe
push
push
mov
rcrb
cmp
ret
ret
push
aaa
lret
icebp
insl
mov
adc
int
test
mov
ljmp
fisubs
in
clc
repnz
imul
cmc
int
xor
popa
cs
jl
mov
cmpsl
mov
inc
into
fildl
and
ret
dec
push
mov
lret
sar
adc
mov
inc
ljmp
je
insl
cmovge
test
test
outsl
movsb
pop
cmovle
mov
out
sub
cmc
mov
test
jl
and
mov
push
and
inc
xchg
roll
pop
cmp
pop
insl
enter
inc
add
pop
xchg
and
lcall
and
les
xchg
shrd
repnz
sbb
xor
jge
mov
je
jno
int3
ja
and
sahf
popa
mov
insb
test
add
mov
pop
jl
ret
fdivl
test
mov
jns
mov
adc
xor
pop
or
lret
mov
pop
jle
popf
jle
inc
test
pop
out
push
mov
mov
sbb
push
mov
xor
inc
fisubl
ds
pop
mov
mov
sub
adc
pop
fnsave
loopne
xchg
cmp
fstpl
ret
incl
aam
cmp
ret
jmp
pop
imul
rcrl
fidivl
xchg
push
aas
fstpl
mov
data16
testl
mov
mov
sub
jecxz
je
fsubs
jno
dec
mov
xor
cld
cmp
mov
push
fisttpll
fwait
int3
leave
loopne
jno
xchg
pop
addr16
test
mov
push
and
push
insl
outsb
fwait
push
adc
pop
add
push
adc
inc
push
push
mov
je
push
popf
inc
adc
enter
pop
lock
and
push
popf
push
jecxz
xchg
jl
leave
inc
sti
loopne
xchg
jg
mov
xor
sub
jne
dec
xchg
pop
jmp
push
cmc
dec
mov
pop
stos
pop
into
sbb
cmc
sub
dec
fiadds
sbb
std
xchg
jp
bound
cmp
sbb
inc
inc
jbe
scas
or
xchg
mov
xchg
stos
rorl
pop
jne
push
xchg
out
mov
lea
dec
dec
addr16
lahf
ljmp
adc
jg
lods
jne
leave
adc
sbbl
and
icebp
sbb
decl
jae
dec
dec
cmp
movb
sti
je
popf
mov
and
incb
frstor
pop
mov
ja
sbb
xchg
rcrl
mov
in
ss
pusha
sub
mov
mov
mov
testb
xor
pop
sub
stos
pushl
lods
push
or
sbbb
in
ja
test
ret
nop
adc
cmp
and
sbb
fidivrs
sbb
cmpsl
dec
jg
cmpsl
adc
mov
or
ret
cmpl
inc
lret
mov
popa
ja
icebp
push
idivl
das
pop
ds
in
repnz
pop
ds
or
test
and
scas
sub
jmp
mov
subb
fisubrs
jg
ud2
xchg
repz
dec
test
rcll
pop
mov
mov
cltd
sbbl
hlt
xor
mov
push
xorb
dec
test
and
outsl
push
xchg
xor
lret
aaa
xchg
inc
add
fs
cli
ljmp
addb
lcall
arpl
mov
mov
out
dec
mov
and
loope
or
lock
sahf
jp
push
xchg
fiadds
repnz
adc
outsb
dec
and
stos
in
imul
pop
cli
dec
xchg
stos
cwtl
in
int3
cmp
sbbl
jno
mov
or
jmp
out
ja
sbb
lahf
mov
cmp
call
rcrb
adc
stc
jnp
cmc
xor
adc
mov
adc
int3
popa
push
je
setp
out
and
sub
inc
sti
jg
lahf
pop
in
sub
inc
dec
jl
fsubl
movsb
or
mov
xor
pop
loope
mov
jmp
adc
mov
push
push
jnp
push
out
mov
fldcw
xor
and
cmpsb
daa
jp
xchg
pusha
movsl
xor
push
mov
adc
pushf
insl
movsb
int3
push
mov
push
std
adc
cld
xor
sahf
sarl
cmpsb
je
pop
hlt
add
mov
test
insl
mull
sub
gs
jle
mov
and
sbb
das
xor
or
sub
cmc
or
and
aam
in
xchg
arpl
or
icebp
sub
inc
cli
popf
test
or
sbb
fidivs
cmpsb
add
test
xchg
jne
aad
sub
jecxz
mov
push
add
cltd
mov
mov
pop
orb
data16
sbb
cmpsl
mov
loope
cmc
stos
enter
or
jg
sbb
push
or
xor
scas
out
out
and
sub
js
ret
inc
mov
or
lcall
mov
lret
lea
lea
add
pop
push
push
mov
pop
adc
jg
shlb
ds
cmp
lods
xchg
mov
shrb
dec
sbb
cmpsl
int3
lods
jg
pop
mov
pop
jo
insl
jo
int3
test
or
inc
mov
loopne
sbb
xlat
ss
dec
mov
scas
push
testl
xchg
ficomps
jbe
js
mov
hlt
dec
insb
mov
xchg
xchg
sub
or
jbe
inc
cli
movsl
push
or
xor
adc
dec
mov
dec
pop
scas
mov
into
test
sbb
insb
rcrl
jecxz
je
pop
jge
dec
xor
add
es
das
pop
imul
push
mov
push
cmp
xor
add
mov
popa
jbe
sub
cld
dec
sbb
adc
inc
inc
adc
cs
out
loop
inc
cmp
sub
stos
mov
sbb
jno
or
jle
nop
or
pop
bound
mov
add
cmc
jge
push
in
add
fwait
bound
nop
pushf
or
sub
mov
out
insl
popfw
xchg
push
mov
cmpsb
dec
cmovge
xchg
adc
or
jle
in
sbb
hlt
inc
addb
ss
ja
movb
jbe
out
lahf
ljmp
lahf
inc
mov
cmp
dec
loope
stos
js
movsb
push
insl
mov
push
xchg
insl
lock
sbb
mov
add
std
cmc
movsb
test
inc
xor
frstor
dec
stos
sub
pop
psubusw
push
sbb
and
or
xchg
lahf
add
cmc
jecxz
pop
imul
repz
call
and
cli
sub
cmpsb
jns
dec
pusha
test
add
enter
inc
sub
jbe
xor
clc
fcom
mov
xlat
lcall
or
aas
mov
sbb
movsl
mov
xlat
adc
loope
dec
ret
enter
inc
xchg
daa
stos
xor
out
and
scas
stos
out
push
out
push
aas
fistps
pmullw
or
xor
jns
les
or
sarl
cmpl
fwait
sub
adcl
adc
daa
repz
and
pop
push
lds
or
outsl
xchg
inc
sbb
sub
sub
into
pop
dec
cmpsl
fldenv
iret
mov
imull
pop
sbb
cld
adc
test
fiaddl
pop
push
mov
dec
jbe
cmp
lea
ret
test
xor
sbb
push
xchg
divl
fnsave
push
push
add
cmp
fs
push
jmp
mov
sti
adcb
repnz
xor
inc
sub
jg
outsb
cltd
repnz
adc
cmp
mov
sti
xchg
push
or
mov
sub
mull
cmp
call
xor
add
xchg
test
and
cmp
sti
xorl
fstpl
cs
pop
lea
inc
pop
and
popf
adc
call
dec
int3
mov
push
mov
pushf
dec
daa
fistpll
scas
icebp
mov
loopne
shll
ljmp
fldenv
dec
push
popf
add
ret
cmp
test
xchg
lock
pushf
jno
jb
shll
xchg
int3
cmpb
sahf
or
cmc
xchg
nop
jmp
jb
ja
push
pop
outsb
mov
aad
jle
inc
xchg
dec
sbb
dec
je
mov
mov
mov
cmp
mov
adc
imul
mov
dec
iret
insb
inc
stc
aam
mov
pop
add
ljmp
fstpt
pop
and
popf
or
and
or
cmpsb
dec
fsts
andl
xor
add
inc
ret
loopne
pop
pop
popa
xchg
mov
and
adc
or
xchg
jecxz
add
jle
cwtl
sub
adc
cmp
fbstp
cmp
mov
add
pop
mov
pop
mov
loop
xlat
xor
adc
pop
xor
sbb
push
ret
cli
push
push
adc
adc
data16
jmp
mov
adc
xor
vorps
daa
add
popa
mov
cmp
stc
sub
mov
cmpl
hlt
sbb
push
icebp
lcall
stos
loopne
mov
xlat
out
loopne
movsl
sub
add
adc
stc
mov
scas
mov
pop
fsubrl
stos
jbe
int3
movsb
jne
test
ds
insl
cltd
inc
frstor
data16
lods
rdpmc
rorb
push
cltd
out
xor
cwtl
xchg
add
pop
jl
dec
push
sub
lods
xchg
fwait
ja
sbb
jne
xchg
aam
aaa
mov
lret
fs
ja
pop
mov
mov
jno
adc
sbb
cmp
xor
cs
push
add
mov
jg
aas
andl
pop
shrb
outsl
les
cs
mov
sbb
dec
add
repnz
push
pop
add
sbb
andl
mov
fldcw
pop
xchg
hlt
jbe
ret
sub
fidivrl
pop
push
mov
iret
popa
inc
jp
push
push
data16
pop
insl
lahf
gs
and
pop
xchg
mov
cmpsb
fldl
daa
add
dec
xor
stos
iret
pop
outsl
lods
or
fldcw
aam
sub
mov
lret
sbb
xor
idivl
nop
xor
dec
lret
push
cmp
scas
fisttpll
inc
mov
insb
cmp
xlat
push
xor
jp
pop
setb
xor
imul
pop
jae,pn
into
and
add
fisubl
inc
or
insl
idivl
dec
sbb
xor
rolb
insb
sahf
pop
inc
shl
lcall
or
adc
inc
int3
in
ds
inc
add
push
or
sub
fwait
adc
sti
sub
mov
jle
push
iret
sub
sub
jbe
int
cmp
jg
mov
mov
scas
aaa
dec
xor
mov
or
icebp
imul
pop
jns
outsb
js
ret
jg
cmp
imul
pop
mov
mov
aas
int
pop
jle
adc
and
mov
pusha
lock
mov
adc
fmul
rcrl
inc
es
jo
and
imul
sbb
enter
shll
mov
shrb
scas
sti
add
pusha
mov
loop
loopne
cmpsl
mov
lcall
xor
sub
orb
mov
mov
and
pop
mov
cmp
mov
xor
add
iret
pop
mov
push
ret
xor
mov
cld
or
fstpt
les
fstpt
stos
enter
shrd
pop
repz
aas
jno
pushf
xor
inc
adc
pop
cmp
pop
aas
pop
arpl
test
dec
pop
popa
or
dec
ljmp
addb
push
inc
pop
pop
pop
mov
cmpsb
scas
or
push
cwtl
mov
jle
mov
dec
sti
int3
insl
pop
jl
movl
das
sbb
push
adc
popf
gs
pusha
sbb
pop
push
out
popf
out
fiaddl
lret
sub
fbld
push
popl
hlt
es
jl
rclb
dec
or
les
je
mov
out
cs
add
outsl
das
sub
or
xor
leave
idivl
insl
mov
iret
and
push
call
scas
and
mov
aas
push
mov
xchg
mov
push
inc
clc
sub
lcall
dec
mov
push
std
push
xchg
pop
in
add
push
cli
adcb
sbb
rcrl
test
jg
and
mov
jmp
sbb
cmp
push
in
xchg
mov
ss
mov
lds
daa
aad
mov
dec
mov
add
cmp
imull
gs
in
sbb
movl
int
xchg
fdivrl
out
dec
mov
jnp
lret
aam
and
mov
mov
or
pop
and
jmp
daa
xchg
jge
mov
adc
jns
std
and
repnz
jl
jle
dec
out
or
cmpsl
gs
pop
aam
mov
inc
jmp
dec
push
xchg
sahf
es
xchg
inc
lret
inc
mov
aas
or
dec
fsubr
and
pop
push
cmp
aam
out
push
or
and
xchg
mov
or
cmp
movsb
in
push
mov
adc
test
pop
pop
rcl
inc
sbb
lods
pop
push
andl
cwtl
popa
fsubl
dec
mov
stos
adc
cmp
cmpsl
icebp
xor
mov
movsl
fcoms
sbb
lea
add
adc
cmp
sub
jns
clc
lret
adc
pop
inc
add
imul
pmaddwd
sahf
mov
pop
xchg
pushf
jl
test
imul
cwtl
lret
adc
mov
jo
pop
lods
mov
pop
imull
das
mov
cmp
sahf
addr16
mov
adc
xor
ret
cmp
ljmp
push
lahf
jecxz
cltd
ficoms
adc
ror
cmp
xchg
sub
test
jle
push
push
sub
xor
pusha
addl
std
pop
dec
sub
arpl
inc
xchg
out
push
cs
aam
icebp
ds
adc
jae
fcmovu
mov
jp
daa
push
sbb
mov
sbb
test
dec
adc
addr16
mov
cmp
cltd
aaa
push
mov
in
jp
repz
js
and
push
and
xchg
jbe
movnti
lds
xorb
popa
sarb
or
call
fs
mov
adc
gs
out
out
push
decb
inc
jge
stos
mov
xchg
in
pop
add
adc
fisttpl
sub
icebp
pusha
xor
repnz
mulps
push
sub
mov
sbb
int3
idivl
divb
cmp
cmp
cltd
outsb
scas
pop
stos
iret
push
movsl
dec
inc
dec
mov
fwait
dec
or
and
fisubrl
jg
testb
fs
aam
sub
in
out
ret
cwtl
or
cmp
xor
sub
movsl
dec
mov
sbb
out
pop
arpl
jmp
cmpsb
enter
mov
mov
lahf
xchg
push
push
mov
lods
cmp
inc
lcall
or
inc
sbb
xchg
insl
inc
jg
xlat
adc
xor
idivb
mov
sub
sbb
mov
mov
insb
dec
outsl
addr16
pop
xor
pop
cmp
jnp
push
mull
sub
stos
sub
jo
sbb
inc
cli
and
jb
xor
mov
iret
ss
int3
andl
int3
lahf
pop
mov
jb
mov
jmp
xchg
mov
out
out
xor
ss
jg
fisubs
push
add
pop
mov
das
xor
adc
push
jg
cld
sbb
or
popf
push
fwait
jns
inc
push
adc
das
push
push
je
xchg
jg
mov
lret
or
lock
es
ret
std
loop
loop
stos
and
push
or
adc
mov
out
adc
sub
rorl
daa
inc
sti
add
ja
cmpsb
cmp
mov
xor
mov
xor
aad
mov
fisubs
xchg
icebp
xchg
mov
popf
movl
cmpsb
jo
fnstsw
inc
pop
lret
test
sub
jne
aam
out
jmp
cmp
pop
mov
aas
les
xor
cwtl
sbb
jg
icebp
cmp
push
jmp
pop
int
push
aam
lods
adc
scas
testl
and
outsl
orl
mov
jmp
push
sbb
push
outsb
sub
fstps
icebp
pop
je
mov
popf
dec
cld
mov
cmpsb
pop
xchg
test
pusha
jo
aam
out
xor
add
rcrb
sub
adc
xchg
arpl
mov
addb
lock
and
sbb
sub
mov
jae
shlb
scas
adc
adc
or
sub
inc
dec
test
ret
out
inc
lods
add
lods
sub
and
pop
sub
scas
and
enter
sbb
sahf
aas
out
fnstsw
stc
jmp
sbb
mov
inc
pop
xor
jb
mov
dec
in
add
xor
aas
mov
cli
jge
xor
nop
xor
mov
xor
dec
push
into
and
loop
popa
push
cmc
sahf
ret
lret
add
testb
movsl
push
xlat
test
mov
fwait
cmpsb
in
repnz
lcall
shrl
mov
cmp
xchg
jno
aaa
in
inc
cmpsl
fbld
loop
jg
add
outsb
pop
js
push
add
in
inc
fdivs
bound
pop
mov
jae
bound
call
movsl
sub
cmpsl
push
pop
jae
xor
sbb
repz
imul
inc
fwait
jnp
inc
test
mov
sbb
inc
rol
jne
cwtl
arpl
push
imul
mov
mov
adc
shr
jne
mov
leave
mov
lock
ja
inc
mov
inc
test
mov
imul
out
in
inc
mov
pop
shll
mov
enter
jbe
and
rorl
cmp
or
cli
scas
shrl
push
pop
or
inc
in
lock
push
pop
and
int
idivb
push
mov
jnp
fbld
imul
hlt
sti
xor
cmp
shrb
inc
inc
cmpl
rcll
test
out
dec
lods
rcrl
mov
sti
and
xchg
mov
or
lret
adcb
jnp
aad
push
stos
cmp
pop
outsb
or
rclb
sub
stos
mov
bound
mov
jecxz
pop
stos
insl
jae
push
and
sarb
dec
not
xchg
out
insb
xor
mov
jae
mov
adc
test
bound
xor
mov
repnz
ljmp
and
pop
pusha
movsl
shlb
jbe
aas
dec
hlt
in
jge
imul
lahf
inc
jne
lea
jmp
push
lods
or
movsl
or
dec
inc
das
stc
mov
lret
jnp
dec
jecxz
movsl
mov
cmpsb
add
leave
and
negl
outsb
aad
jne
lods
or
orb
inc
test
xlat
mov
jo
and
inc
leave
outsb
add
out
outsl
xlat
iret
or
pop
out
jo
dec
cmp
ljmp
rorb
mov
mov
mov
push
fisttps
sar
mov
inc
fcoms
shll
orb
or
idivb
xor
pop
mov
jae,pn
ds
jbe
sbb
cmpsl
test
sti
and
jae
test
fs
dec
mov
push
daa
in
push
ss
es
jle
pop
fcoms
adcl
je
pusha
sbb
xchg
mov
scas
repnz
lock
imul
xorb
outsb
outsl
out
negl
or
scas
cmp
xor
cmpsb
xor
adc
jae
fs
in
or
mov
dec
or
mov
inc
jge
dec
aad
subl
pop
push
outsl
sahf
icebp
test
xor
sbb
pop
pop
adc
rcll
dec
mov
es
inc
test
sbb
ljmp
sub
mov
flds
ss
mov
jecxz
pop
int3
push
dec
add
jecxz
ss
outsl
adc
cmpb
jae
mov
ror
fcoml
inc
adc
mov
mov
or
pop
xlat
aaa
inc
sub
mov
ja
add
clc
dec
je
adc
mov
mov
push
push
aas
mov
jno
cmc
popf
addr16
leave
push
in
ds
insb
xchg
jo
iret
jb
jns
in
nop
xchg
lds
and
clc
lcall
pop
das
int
dec
sti
sub
daa
adc
les
pop
test
cmp
sub
jae
push
pop
lahf
and
adc
sbb
aas
iret
xchg
push
mov
cmp
push
test
pop
stos
int
sti
jne
cmpb
jecxz
sub
lock
dec
stc
das
jno
and
mov
mov
mov
lds
in
call
int3
pop
fcoms
enter
lahf
dec
mov
fildl
cmp
nop
jns
popf
imul
or
mov
fisubs
cmp
cmpsl
out
loop
inc
adc
push
lea
ss
lods
jl
ljmp
imul
addr16
sahf
mov
jl
inc
addr16
push
push
sub
in
inc
cltd
xor
sub
cmp
push
or
mov
stos
verw
cmp
mov
sbb
int
push
or
or
sbb
jecxz
jns
cmpl
std
xchg
pop
or
mov
loopne
xor
in
xlat
ret
mov
inc
jns
rolb
lea
mov
cmp
sub
fstl
push
and
nop
dec
dec
ja
xlat
sub
xor
clc
adc
int
adc
jp
dec
jbe
and
and
push
xor
xchg
repnz
mov
mov
xorl
leave
mov
sub
stos
add
stc
mov
cmpb
fnstenv
mov
enter
test
stc
in
arpl
pop
daa
jb
addb
add
push
shr
mov
bnd
xchg
dec
push
and
rorb
dec
jle
enter
mov
loopne,pn
cltd
popa
jne
lret
push
inc
leave
mov
sub
lock
addr16
sub
mov
mov
les
jecxz
je,pn
pop
jecxz
inc
cmpsl
mov
in
add
ds
lods
cld
bswap
sti
cli
jo
dec
or
xchg
cmc
inc
xchg
inc
cmpb
inc
jae
inc
das
push
dec
add
inc
sbb
fnsave
adc
sahf
or
add
mov
xorb
mov
cmp
std
push
cwtl
dec
repnz
mov
or
rcrl
sub
inc
jnp
mov
negb
or
fdivs
mov
adc
and
je,pn
push
cmpb
or
das
pop
inc
fwait
xor
test
and
movsl
cmpsb
cmp
cltd
xchg
pop
push
or
mov
mov
cwtl
loopnew
xor
mov
lds
outsb
movsb
aam
jmp
dec
adc
jp
xchg
xchg
iret
pop
xchg
sbb
mov
mov
sbb
icebp
gs
or
in
negl
test
or
scas
xchg
pop
sub
pop
adc
jns
test
pop
fildl
imul
push
jl
mov
ss
mov
cwtl
movsl
je
rorl
aam
push
lods
pop
aad
lds
cmp
adc
rorl
mov
scas
xor
filds
mov
lahf
jge
mov
xor
test
mov
add
mov
data16
inc
mov
lret
mov
push
ds
shlb
stos
add
out
clc
push
add
je
mov
adc
dec
xorl
mov
cltd
inc
clc
jns
push
mov
into
in
pop
in
mov
xchg
test
gs
mov
pusha
into
xchg
pop
or
fdivs
fimull
mov
mov
sbb
lods
pushf
mov
mov
pop
xor
sbb
leave
add
push
das
cmp
dec
xor
adc
jno
icebp
test
aam
std
out
imul
insl
dec
shl
and
adc
loope
mov
sub
loopne
ds
sub
mov
adc
outsb
int3
mov
pop
ljmp
sbbb
cmpl
jmp
inc
xchg
adc
shrl
sti
dec
or
lods
sbb
jecxz
enter
add
sub
aas
inc
lgs
iret
inc
in
pop
sbb
lret
lret
pop
xchg
inc
cmp
in
dec
xlat
push
add
loope
mov
das
mov
jl
lods
pop
loope
dec
clc
push
mov
adc
inc
hlt
pushf
sub
fisubs
mov
movsl
idivl
sahf
pop
sbb
fstl
dec
and
fcomps
gs
mov
jge
push
pop
enter
adc
mov
outsb
pop
inc
loopne
push
subb
lret
xchg
mov
dec
push
xchg
dec
shrb
mov
xor
and
and
test
test
inc
ds
dec
inc
adc
xorl
enter
loopne
insb
ret
pop
in
lret
xchg
jo
leave
mov
pop
sti
jmp
mov
test
je
mov
sbb
mov
cwtl
pop
pop
adc
mov
xchg
pop
or
jle
inc
stos
cmp
add
or
pop
out
push
cld
lods
jo
pop
pop
repnz
hlt
ret
jae
addl
paddsb
lods
mov
sub
js
into
outsl
mov
leave
xchg
inc
fsub
mov
cmpl
adc
scas
inc
out
xor
loope
dec
pop
pop
lock
pop
fiaddl
inc
popa
adc
mov
cwtl
mov
jle
jno
add
inc
inc
sbb
aaa
shlb
fildl
sbb
xchg
pushf
fsubl
dec
nop
cmpsl
movsb
inc
fcos
sbb
pop
cs
or
push
aam
mov
repz
test
xchg
pushf
out
adc
mov
imul
and
mov
xor
sti
cmp
imul
mov
mov
cld
pop
rcll
icebp
stos
jle
push
lods
and
lock
imul
out
mov
adc
lahf
pop
sbb
xor
jle
je
int3
clc
daa
dec
in
jnp
std
add
int3
mov
outsl
stos
cmpsb
push
lods
hlt
jge
scas
inc
xor
fnstenv
cmp
stos
cmp
fdivl
xorl
mov
aam
adc
cmp
dec
pop
add
inc
adc
nop
call
jg
test
fimuls
fsubl
or
movsb
icebp
mov
push
out
push
mov
mov
cltd
cwtl
jne
mov
sub
lret
pop
ror
lcall
cwtl
in
imul
xor
aas
sbbb
lock
jmp
into
arpl
out
jne
sbb
stos
mov
adc
inc
loope
mov
adcb
gs
insb
addb
jg
push
dec
ja
std
mov
xor
xchg
sub
xor
dec
arpl
in
aad
sub
ljmp
push
lret
jge
xor
repz
bnd
cmpsb
sbb
lahf
adcl
enter
repz
cmp
ret
fs
in
lret
jnp
ficoms
xchg
ss
mov
imul
mov
imul
jle
xchg
inc
mov
shlb
lods
movb
mov
and
outsl
pop
fsubl
sbb
inc
ret
dec
scas
dec
cmp
sbb
imul
jnp
pop
xor
imul
test
ss
lock
pop
adc
in
jno
adc
aas
rcll
in
or
cmpl
dec
push
add
sbb
icebp
mov
sbb
mov
inc
mov
pop
cli
pop
xchg
popf
cmp
ficompl
fsubs
sbb
scas
into
cs
gs
adc
xlat
add
dec
add
xlat
repz
push
into
lahf
mov
repnz
icebp
mov
push
pop
popf
dec
mov
gs
and
dec
xchg
jne
bound
loopne
dec
adc
testl
mov
mov
imulb
push
ret
lock
sbb
push
xor
fisttpl
push
sbb
and
sbb
cmp
shll
popf
lret
ds
mov
int
push
cmpsl
push
mov
or
pop
sbb
pop
sub
push
scas
push
out
scas
push
mov
sti
mov
outsb
jbe
mov
mov
cmpl
mov
sbb
dec
push
jno,pt
mov
push
add
in
cmp
ret
mov
stos
jb
and
imull
adc
not
scas
jo
jne
ljmp
fcompl
or
push
sub
sbb
insb
mov
int3
lods
pop
push
ret
out
jb
jb
jb
inc
inc
dec
xor
sbb
cld
pop
xor
dec
dec
nop
inc
dec
outsl
hlt
sbb
int
push
mov
add
clc
cmp
add
xchg
mov
xchg
mov
call
fbstp
nop
dec
das
mov
jae
aam
out
mov
das
sub
inc
cmp
orb
push
stos
js
je
inc
pop
cld
and
sbb
out
jne
ja
jg
adc
jnp
push
and
adc
movsl
jnp
mov
test
add
mov
sbb
fildl
mov
mov
or
cmp
xor
mov
les
cmp
cmp
ret
push
cld
push
xchg
ds
push
push
movb
push
dec
fcmovnb
ds
cmp
call
or
fistpl
sti
push
and
mov
mov
mov
shr
xor
jns
orl
sub
scas
mov
out
mov
mov
jp
popa
int
test
jl
in
sarl
lret
ds
inc
popf
jno
lods
insb
inc
daa
cmc
push
add
js
int3
fldcw
xlat
aas
outsl
mov
fucomi
shll
insl
cmpsb
sbb
mov
xor
data16
test
mov
out
addr16
test
push
cmpsb
fisttpll
jle
imul
jle
clc
pop
pop
mov
enter
scas
pop
sbb
scas
add
dec
ret
pop
jno
sti
fmull
jne
iret
xchg
mov
inc
adc
mov
je
push
xor
test
jns
shl
push
xchg
xchg
jae
aas
and
adc
xor
in
lcall
ljmp
out
sub
into
fld
cmp
cmp
test
pop
dec
and
add
xor
leave
sub
movsb
ret
in
jge
cmpsb
lock
enter
sbb
in
mov
cmpsb
daa
xchg
aad
lock
mov
nop
outsl
inc
pop
dec
mov
inc
aaa
imul
in
pop
movsb
jle
pushf
fs
jns
push
dec
jmp
js
dec
out
sub
gs
mov
fsubr
or
mov
mov
setg
cwtl
repz
adc
fwait
call
lret
pop
sbb
clc
dec
aas
gs
loopne
bound
dec
mov
sub
inc
loope
add
dec
out
cltd
out
xchg
push
sahf
adc
lods
pop
mov
adc
cli
clc
bound
iret
aad
lods
sahf
in
inc
dec
mov
dec
ret
data16
test
data16
fnstcw
xchg
push
jnp
mov
dec
mov
xchg
adc
stc
scas
popl
dec
out
sbb
xor
das
ds
mov
daa
add
sub
addr16
jae
mov
jns
mov
dec
jle
das
mov
movsb
or
xchg
lds
xchg
or
pop
ficoms
mov
pop
fdivs
or
mov
push
and
repz
mov
mov
fwait
adc
cmp
mov
push
std
and
fnstcw
out
mul
out
pop
ret
mov
mov
jle
sbb
outsl
push
pop
adc
mov
lea
push
pop
cmp
pop
test
cmpsl
jp
hlt
push
pop
nop
cmpsl
jnp
movsb
loopne
scas
sub
pop
pop
pop
dec
xchg
mov
dec
movsl
fmulp
jecxz
pop
test
test
jo
fwait
enter
mov
loopne,pt
fdivrl
aaa
jle
pop
rclb
cwtl
rorb
aad
aaa
movl
aas
in
cmp
idivb
pop
iret
cli
and
iret
adc
fiaddl
aad
cmp
aaa
jg
loopne
imul
mov
xchg
mov
pop
inc
jb
xchg
mov
mov
jne
add
outsb
shrb
int3
pop
sub
sbb
xlat
nop
outsl
inc
mov
js
leave
push
bound
or
sub
inc
jl
dec
push
push
mov
sahf
rorb
ss
push
and
aam
test
dec
mov
add
or
dec
mov
xchg
mov
shll
outsb
push
adc
jg
dec
sub
imul
mov
cmpsb
movaps
cmpsl
inc
jg
cmp
cwtl
call
sbb
mov
jp
out
pushf
inc
test
pop
adc
cmp
popa
jecxz
cltd
inc
shll
sbb
mov
ret
or
xor
fidivl
shlb
xchg
jl
popf
testl
cmp
or
iret
call
mov
inc
xor
addb
xlat
xchg
dec
leave
mov
mov
xchg
mov
movsl
or
mov
adc
je
mov
ds
aam
lret
cmc
outsb
dec
lea
xchg
adc
jmp
and
xor
xchg
sbb
je
gs
mov
cmpsl
or
fsubrs
or
xlat
push
into
inc
jo
cld
add
cmp
movsbl
call
dec
lret
sub
add
adc
cmc
ljmp
mov
insl
inc
test
pop
push
cmp
sbb
jae
pushf
jbe
dec
call
xchg
xchg
sbb
add
push
dec
xor
lret
mov
or
fcomi
out
cmp
mov
add
lahf
push
push
dec
sub
cmc
ret
pop
pop
mov
xor
loope
in
cld
cltd
mov
into
mov
mov
push
sbb
sbb
fmull
rcll
out
div
mov
push
cmp
lds
mov
aaa
shrl
lea
fs
xlat
inc
jmp
andb
jne
jae
mov
cmp
sub
fstl
das
lods
sub
sub
lock
sub
lods
leave
xchg
mov
mov
lret
loop
insl
sbb
mov
xchg
jmp
adc
lock
andl
xchg
repz
xor
xor
push
imul
into
addb
cli
movsb
mov
ffree
pop
add
inc
inc
imul
add
adc
and
and
mov
pop
push
pushw
fdivrs
lds
fs
xor
lahf
push
pop
lret
rorb
pop
push
mov
jecxz
pop
fisttpll
inc
sub
lods
mov
cwtl
mov
mov
out
fldt
jno
lea
int
xchg
mov
fdivl
inc
lahf
push
sub
cmp
ret
test
push
xor
xor
call
adc
pop
test
dec
lods
jg
gs
es
rcrl
ss
inc
fwait
mov
inc
mov
test
div
jb
xor
scas
stos
imul
pop
nop
dec
pushf
test
or
lret
aam
push
fldl
ficomps
popa
xchg
shr
dec
mov
rcr
cmp
and
stos
mov
cld
add
adcb
inc
jecxz
mov
cmp
ljmp
iret
jno
and
mov
mov
pop
push
iret
rorl
pop
push
cwtl
fidivrl
mov
xor
insb
cs
mov
pop
in
pop
and
negb
enter
aad
test
push
test
loopne
daa
sbb
and
or
xlat
jle
inc
sub
lods
dec
mov
jle
and
mov
mov
push
out
jae
movsl
aad
sub
add
gs
aaa
test
fdiv
mov
jnp
sub
int3
sub
in
mov
inc
jno
hlt
pop
adc
fsubrl
sub
adc
pop
xchg
aam
sub
push
insb
push
and
jo
cmc
or
push
shrl
dec
push
pop
xchg
or
rolb
test
rcr
add
cli
int
fsts
pop
sar
sub
xchg
adc
cs
xor
mov
cmp
imul
int3
jmp
cs
jbe
cmp
add
in
dec
jne
push
jo
mov
inc
mov
enter
cmpsl
sub
sub
out
sti
test
aaa
jbe
iret
std
sub
fmulp
add
jo
imul
int3
subl
js
pop
pop
and
inc
addr16
dec
sbb
shl
lcall
popa
xlat
movsb
adc
aam
stc
xchg
mov
js
mov
xchg
in
cmp
sti
jle
mov
sbb
sbb
outsl
sbb
add
cmp
mov
mov
jp
sub
hlt
inc
das
loopne
fs
push
lock
fs
sahf
popa
adc
inc
lods
test
mov
aas
or
adc
leave
adc
not
and
mov
decb
test
sbb
test
fisubrs
adc
pop
dec
out
js
jb
iret
bound
pop
in
popa
cltd
push
imul
cmp
pushf
adc
xorl
imul
repz
jns
sub
ss
mov
add
jno
iret
ds
push
sar
fadd
and
lahf
pop
cmpl
shrl
andl
shl
subl
jno
ret
lods
test
sbb
cmpsb
sbb
mov
pop
mov
or
fwait
pop
scas
shll
test
cmc
das
sbb
inc
pop
cltd
dec
push
insl
insb
pop
idivl
scas
icebp
mov
cmp
sub
pop
loopne
cmp
adc
pushf
mov
rep
mov
lcall
pushf
sbb
push
xchg
mov
insb
mov
dec
adc
rol
or
push
xchg
je
movsl
jle
xor
test
cmpsl
mov
xchg
sbb
xor
adc
scas
push
cmp
add
aad
push
or
jne
adc
adcl
and
sbb
mov
lds
cmp
repnz
outsb
and
movsb
add
mov
xor
into
lret
pop
mov
lret
cmp
jl
sar
sub
mov
ja
jmp
jno
fsts
xor
loope
imul
jg
js
adc
push
outsl
and
outsl
divl
mov
mov
push
insl
outsb
or
or
xor
mov
clc
mov
or
sub
cmpsl
call
add
hlt
mov
into
push
jno
dec
ss
cmp
or
mov
xor
pushf
scas
cmp
mov
dec
daa
aad
sarb
out
xchg
dec
push
fdivr
lret
xor
mov
pop
ljmp
loope
fwait
je
imul
popa
sbb
push
sub
ss
push
and
mov
jb
shlb
xchg
xchg
xor
push
pop
pushf
jle
inc
in
sub
jae
dec
xor
movsl
add
andl
add
inc
dec
stc
gs
sbb
cmp
pop
sub
cmc
cs
notb
xchg
ja
test
rolb
pushf
testl
jmp
insb
out
out
pop
mov
xchg
pop
dec
repz
mov
fldl
mov
mov
adc
or
test
mov
bound
jae
rorl
mov
fstl
pop
xor
sti
scas
lock
mov
xor
jmp
sub
pop
and
mov
popf
pop
dec
iret
jb
and
mov
lods
or
sbb
pop
adc
lea
dec
push
sarl
jmp
inc
or
lret
xchg
push
aaa
int3
mov
in
sarl
stc
cmp
lea
add
sub
and
fsub
xlat
dec
loopne
fstpt
mov
out
and
fs
cmpsl
ret
pop
xor
xlat
or
pop
repz
enter
mov
into
xchg
xchg
inc
cmp
aam
jecxz
push
xorl
or
xor
pop
mov
cmp
inc
xor
mov
test
mov
addb
fs
jns
mov
lds
mov
enter
sbb
fstpl
adc
fstps
mov
xor
incl
sbb
cmpsb
or
imul
sarl
jl
out
push
adc
subb
inc
fs
stc
pop
rorb
int
mov
cld
or
loope
xchg
outsl
pop
in
je
mov
outsl
inc
pop
mov
test
pop
sbb
mov
cmpsb
inc
das
pop
clc
or
mov
test
dec
es
outsb
push
add
jno
in
pop
lods
cli
lahf
push
out
and
cmc
aaa
cmp
inc
inc
mov
cld
js
out
xor
sub
jnp
pop
jle
sbb
icebp
sub
push
push
push
std
mov
sbb
popf
adc
mov
test
add
lock
imul
enter
jle
punpckhdq
sub
push
and
push
push
xor
fs
cli
insl
mov
jae
lret
mov
cmpsb
or
mov
test
or
rorl
mov
xchg
int3
lcall
or
or
lods
sti
or
scas
cmc
in
cmp
in
adc
sub
cltd
test
add
or
enter
jl
out
mov
pop
jns
lret
daa
xchg
mov
mov
mov
mov
push
add
loope
ret
mov
mov
xchg
mov
cmp
movsl
fistpll
clc
and
mov
xor
mov
fisubrs
dec
scas
enter
in
or
push
push
or
mov
stos
mov
xchg
es
lods
negl
repnz
in
or
lods
cwtl
ss
sbb
cmpsl
or
add
or
jae
mov
jl
sub
ja
or
or
imul
test
rorb
cmpsb
adc
or
inc
popa
cmp
insl
push
test
test
pop
fsubrl
push
test
pop
inc
sbb
int
cmpb
sbb
lock
rorb
int
mov
mov
xor
mov
arpl
fsubrs
jl
ljmp
jmp
mov
ja
cwtl
mov
mov
stos
outsl
mov
mov
sbb
icebp
mov
rorb
int
push
cld
aam
mov
mov
pop
mov
movsl
mov
into
outsl
neg
popa
sub
mov
pop
fsubrl
movsl
jmp
shrl
or
sbb
mov
addl
mov
es
das
ret
sub
loop
mov
aam
cmp
dec
es
clc
push
sbb
lock
push
ret
mov
rep
jmp
mov
and
inc
fnstenv
cwtl
ss
mov
lahf
xor
mov
cwtl
imul
sahf
dec
data16
push
dec
cs
lcall
cmp
mov
or
out
xor
mov
sub
out
pop
add
dec
arpl
xor
lock
add
sub
mov
mov
les
shrl
jae
pop
ret
mov
pop
mov
sbb
adcl
loopne
sbb
ret
mov
lret
icebp
sarl
lea
dec
pop
div
cltd
adc
cmp
push
and
gs
xchg
cmp
dec
sbb
fbstp
das
daa
ret
in
mov
mov
popf
mov
aam
cmp
lods
repz
leave
mov
sub
in
fdivs
push
cmp
outsl
mov
jmp
dec
sub
loopne
mov
test
rorb
iret
mov
pop
mov
xchg
inc
lret
push
pusha
inc
mov
mov
sarb
xchg
in
cmp
clc
lds
in
jbe
test
fisubs
sub
fsts
add
dec
out
test
or
jp
sub
xor
adc
andl
mov
aas
push
mov
add
lret
jge
xchg
mov
xchg
rclb
mov
pop
ja
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
or
add
call
add
add
add
add
add
add
test
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
shlb
add
add
andb
dec
movsb
inc
add
add
add
movsb
inc
add
add
add
mov
add
mov
inc
add
add
mov
add
js
inc
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
inc
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
