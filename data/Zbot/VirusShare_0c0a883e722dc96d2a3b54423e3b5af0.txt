call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
pop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
jmp
ret
mov
xor
add
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
mov
test
je
add
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
.byte
dec
and
add
and
add
and
add
and
add
and
add
and
add
add
fisubs
add
or
add
mov
add
push
and
add
add
and
add
add
and
add
add
mov
and
add
add
add
add
and
add
and
add
and
add
add
and
add
add
jle
add
adc
add
and
add
and
add
add
add
add
jo
add
pop
and
add
add
add
add
nop
and
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
fisubs
add
or
add
mov
add
push
and
add
add
and
add
add
and
add
add
mov
and
add
add
add
add
and
add
and
add
and
add
add
and
add
add
jle
add
adc
add
and
add
and
add
add
add
add
jo
add
pop
and
add
add
add
add
nop
and
add
add
add
inc
gs
je
dec
popa
outsb
fs
add
repnz
imul
jb
je
arpl
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
imul
outsb
je
outsl
insb
add
dec
outsl
arpl
dec
outsl
arpl
aam
inc
gs
jb
jbe
push
jns
gs
add
add
popa
jo
gs
jb
jns
aad
inc
gs
gs
inc
imul
jae
jb
outsb
inc
add
out
inc
gs
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
popa
jo
jb
add
push
push
je
imul
inc
add
jge
dec
jo
outsb
dec
jne
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
cmp
fs
imul
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
xchg
add
je
jne
jb
outsb
je
push
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
imul
insl
gs
insb
outsl
jae
add
push
dec
inc
dec
xor
cs
insb
add
aaa
add
ja
push
fs
inc
gs
push
jns
push
imul
gs
push
gs
dec
gs
imul
insb
outsl
jae
push
push
popa
je
add
xor
jae
push
push
popa
je
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
inc
gs
push
outsl
insb
outsl
jb
jle
inc
gs
imul
gs
add
add
je
push
outsl
outsl
insb
add
mov
push
gs
imul
gs
add
addb
jae
push
arpl
add
add
ja
push
popa
arpl
jb
jne
add
outsb
push
push
popa
je
add
push
dec
inc
dec
inc
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jl
jp
lods
stos
lods
add
cmpsl
test
mov
mov
mov
lret
leave
lret
int
rcl
shr
rcl
shl
iret
rcl
hlt
into
int3
int
mov
out
mov
in
mov
mov
stos
stos
lods
lea
fwait
fwait
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
leave
lret
rcl
cld
fcomp
xlat
std
fcomp
fcomp
fdivr
aam
rcl
sar
int
int3
aad
dec
rcl
inc
ret
mov
mov
lods
iret
movsl
mov
mov
das
das
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
lret
lret
ror
aam
aam
xlat
fcom
call
fdivr
aam
dec
into
int
int3
int3
int
aam
int3
into
into
inc
mov
mov
ljmp
cmpsl
cmpsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
push
or
inc
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
mov
call
rcl
call
xlat
fdivr
fcom
xlat
call
aad
dec
into
into
dec
lret
into
int3
into
inc
mov
mov
mov
cmpsl
cmpsl
cmpsb
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
push
imul
cmp
push
das
or
push
sbb
aaa
cmp
and
adc
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
leave
call
iret
iret
call
aad
call
rcl
inc
leave
enter
inc
ret
ret
mov
mov
ljmp
movsl
movsb
sahf
pushf
sahf
cwtl
xchg
xchg
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
outsl
xor
jle
jge
jg
jb
jb
arpl
mov
cmp
cmp
mov
jo
outsl
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
leave
mov
mov
mov
ljmp
movsl
movsl
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
cltd
fwait
in
addb
prefetchw
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsl
add
pop
or
jnp
nop
mov
xchg
xchg
xchg
incb
jp
jp
jl
jo
outsl
out
addr16
jae
je
jg
jg
jns
jp
arpl
fs
inc
inc
cmp
sbb
sbb
movups
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsb
lcall
nop
incl
test
xchg
xchg
xchg
lahf
lahf
lahf
sti
mov
xchg
xchg
mov
jp
jns
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
lcall
mov
cmp
xchg
std
mov
jle
jb
jo
je
je
jle
jg
addb
push
cmp
ss
and
cmp
mov
test
lods
sti
lods
lods
stos
stos
lods
stos
test
movsl
mov
xchg
xchg
xchg
incl
jg
jns
jp
jp
jnp
mov
cwtl
movsb
movsl
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
push
push
push
prefetch
inc
inc
inc
dec
imul
xchg
xchg
leave
cltd
fwait
cltd
fistps
lcall
mov
mov
mov
mov
lea
lcall
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jnp
scas
cmpsb
stos
add
adc
test
mov
incl
xchg
decb
xchg
xchg
pushf
sahf
sahf
std
movsb
movsl
mov
out
xchg
xchg
xchg
in
xchg
in
test
push
jne
or
add
inc
daa
daa
daa
push
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
lea
nop
call
mov
cmpsb
ljmp
cmpsl
lods
pushl
lahf
mov
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
adc
scas
mov
ret
lcall
mov
decl
call
xchg
xchg
pushf
popf
pushf
movsl
mov
stos
movsl
movsb
mov
fstpt
jl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
popa
jne
jae
mov
lahf
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
mov
xor
jbe
mov
cmpsb
mov
mov
lods
stos
mov
mov
add
shll
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
xchg
cltd
lcall
mov
movsb
movsl
std
movsb
movsb
movsb
stc
cwtl
cwtl
fwait
out
xchg
xchg
nop
xchg
xchg
les
cwtl
fwait
in
xchg
xchg
out
lea
stc
xchg
test
std
xchg
je
fwait
imul
ljmp
cmp
mov
jae
mov
outsb
ljmp
pcmpgtw
stos
or
lods
or
mov
jge
mov
mov
stos
pushf
movsb
mov
movsl
add
mov
add
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
popf
lcall
pushf
pushf
call
xchg
xchg
decl
cwtl
xchg
call
cwtl
fwait
cld
cwtl
cwtl
pushf
stc
lahf
fwait
mov
cld
sahf
mov
xchg
imul
xchg
dec
js
fwait
cmp
cltd
sub
push
addr16
sahf
sbb
movsb
adc
ljmp
adc
adc
lods
packuswb
lods
adc
mov
push
mov
imul
mov
fwait
lods
mov
lods
lods
scas
movsl
movsb
mov
add
add
add
add
add
pop
pop
adc
mov
jmp
xchg
xchg
lcall
lahf
jmp
movsl
jmp
xchg
xchg
decl
mov
xchg
xchg
xchg
js
cltd
jno
cltd
arpl
call
sub
decl
adc
or
pop
call
add
mov
adc
lods
sbb
mov
outsl
pushl
sbb
jb
mov
and
rcrb
inc
aas
test
ret
mov
scas
scas
mov
mov
movsl
movsb
add
pop
pop
adc
scas
mov
shlb
sahf
sahf
popf
jmp
cmpsb
jmp
test
cmpsb
lcall
orb
dec
jno
mov
imul
sub
mov
incl
or
test
push
incl
add
popl
push
call
add
sahf
add
or
pushl
daa
jbe
mov
sub
sub
inc
sub
jg
xor
dec
inc
mov
leave
lea
cld
scas
mov
lret
mov
add
add
add
add
add
push
push
adc
test
ljmp
lahf
jmp
test
ljmp
lods
lods
pushl
scas
lods
jmp
mov
xchg
push
incl
or
addl
incl
add
add
mov
push
decl
pop
call
add
sahf
add
movsb
add
lods
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
mov
cmpsl
cmpsl
ljmp
mov
pushl
mov
pushl
stos
stos
lcall
es
decl
adc
mov
pop
decl
or
add
decl
add
popl
push
call
add
add
test
pop
ljmp
sbb
test
lret
dec
inc
call
inc
call
inc
call
dec
xchg
call
dec
xchg
fisttpl
fisttpll
fsts
call
test
std
mov
mov
movsl
movsb
mov
or
add
add
add
add
dec
dec
adc
jl
movsl
popf
mov
lcall
test
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
ss
decl
sbb
call
adc
decl
push
decl
add
xchg
add
sahf
add
mov
add
stos
add
mov
gs
mov
dec
call
push
cwtl
fcoms
fistl
fistpl
fistps
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
mov
mov
add
add
add
inc
inc
adc
ja
lahf
fwait
sahf
jmp
lahf
fwait
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
call
call
or
xchg
add
xchg
add
lcall
jmp
add
mov
fs
mov
xor
fstps
fbld
fisubs
in
cmpsb
jmp
cmpsb
call
push
jmp
stos
faddl
mov
cmpsl
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
je
fwait
xchg
lcall
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
cltd
das
outsb
lcall
sub
xchg
sbb
pop
call
add
mov
add
lods
add
mov
pushw
movq
roll
fsubl
jmp
jo
jmp
jo
jmp
jo
ljmp
jmp
mov
out
jbe
out
jbe
out
je
jmp
xchg
mov
cmpsb
test
lahf
mov
sahf
add
jge
ds
adc
outsl
js
mov
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
outsb
lcall
cmp
mov
push
call
add
mov
add
add
mov
pushl
add
leave
sbb
fsts
in
mov
jmp
jg
in
jg
in
cmpl
push
xchg
push
cmpl
jmp
mov
inc
mov
stos
cmpsl
popf
popf
pushf
daa
mov
lahf
lahf
add
add
add
add
aaa
cmp
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarb
ret
pushl
insl
mov
lcall
jmp
aaa
jbe
cltd
sbb
add
sahf
add
add
stos
add
lods
add
add
mov
add
iret
and
movsl
ljmp
out
mov
push
xchg
ret
push
nop
ret
push
xchg
ret
push
nop
ret
push
xchg
mov
in
mov
fidivl
clc
stos
stos
stos
mov
popf
popf
xor
pushf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
ret
inc
mov
jge
lcall
dec
cmp
dec
test
movsl
xor
cltd
adc
lcall
jmp
add
mov
fs
mov
add
movl
jmp
ja
out
xchg
vlddqu
push
cltd
push
lcall
clc
sahf
lret
cld
sahf
into
sti
sahf
int
cld
lcall
fbstp
enter
mov
sahf
sahf
lahf
aas
nop
nop
add
add
add
ss
or
cmp
outsb
dec
dec
dec
jecxz
pop
popa
call
mov
mov
mov
mov
inc
inc
mov
lahf
lcall
push
mov
lods
dec
xchg
mov
push
pop
lcall
add
lods
add
mov
mov
add
movl
je
filds
out
mov
push
movsl
int
mull
iret
sti
cmpsl
iret
cli
cmpsb
iret
sti
test
iret
stos
sar
std
cmpsl
sar
negl
lret
enter
mov
into
sahf
lahf
lahf
dec
xchg
xchg
xchg
add
cltd
cltd
add
add
add
xor
add
sub
or
bound
pop
xlat
je
jo
mov
mov
ret
mov
ret
inc
enter
rol
mov
test
mov
push
mov
lods
dec
xchg
lahf
sbb
lcall
add
add
mov
arpl
mov
add
into
add
add
fists
jl
out
pop
test
negb
sar
cli
mov
cli
mov
sti
scas
sar
std
mov
std
mov
cld
mov
std
mov
std
mov
std
mov
push
movsl
mov
dec
enter
mov
fisubl
xchg
xchg
or
add
add
xor
push
add
dec
dec
ss
outsl
mov
xlat
fsubr
xlat
not
rcl
std
lret
int
dec
leave
leave
dec
lret
leave
dec
leave
leave
inc
enter
lahf
scas
ljmp
push
mov
lods
cmp
arpl
mov
add
mov
fs
mov
add
rolb
jo
xlat
add
add
jmp
jae
sti
scas
aam
cld
mov
cld
mov
cld
mov
xlat
cld
mov
fdivr
inc
std
mov
int3
call
leave
int
mov
mov
xchg
or
add
add
xor
add
add
or
enter
jecxz
pop
out
jmp
test
jecxz
leave
fstp
fsubp
xlat
cli
xlat
std
int
iret
mov
push
cmp
sub
mov
add
mov
popa
mov
add
lret
call
add
fildl
jne
in
jbe
out
das
xchg
clc
mov
sti
mov
loopne
inc
loope
std
inc
loopne
std
leave
inc
fdivrp
dec
fdivrp
std
leave
dec
cli
mov
leave
fmul
iret
mov
mov
xchg
adc
add
add
std
add
incl
std
std
add
div
or
out
in
pop
in
out
in
sub
out
in
dec
call
call
jmp
aad
jmp
mov
xchg
test
ja
movsb
adc
jmp
pusha
pushl
add
les
imul
add
fadds
jb
filds
jbe
jmp
inc
popf
sti
mov
loop
std
lret
dec
in
dec
in
std
int3
in
dec
loop
std
int
std
shl
shl
call
in
std
shl
cld
out
mov
xlat
inc
out
cmpsb
cmpsl
cmpsl
mov
xchg
cwtl
add
add
add
incl
std
std
incl
idiv
testl
lock
out
repnz
pop
in
repnz
cmp
out
in
pop
fsubp
loop
les
xchg
sti
sahf
es
mov
add
add
mov
fs
add
movl
jno
fiaddl
jbe
jecxz
jp
in
adc
pop
test
cld
mov
dec
in
cld
shl
call
jmp
std
shl
call
call
std
out
fld1
std
fldl2e
shl
push
ret
in
leave
leave
lret
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
cld
add
cld
clc
add
sti
clc
add
div
or
aam
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
lret
call
add
fldl
jne
call
sbb
cli
cld
fsubr
fldl2e
fldl2e
std
fldpi
fucomp
fucomi
std
fsubr
fucomip
jmp
in
fucomip
std
shl
push
ret
aad
out
fdivr
iret
ror
clc
stos
stos
lods
lods
xchg
xchg
xchg
outsb
outsl
outsb
add
add
mov
loopne
add
mov
cltd
repnz
and
mov
add
mov
mov
add
int
outsb
call
add
fiadds
jae
ljmp
cli
mov
std
aam
std
loopne
std
fsubr
std
fldl2e
std
fldl2e
std
fsub
cld
in
aam
cli
shl
cld
shl
stc
iret
clc
int
push
rcl
out
mov
fcomp
xlat
sti
mov
mov
lcall
add
add
add
fcom
add
enter
mov
lahf
jmp
sub
mov
add
mov
mov
add
iret
add
fadds
jae
loopne
jns
ljmp
cli
xchg
cli
lret
cli
int3
loop
sti
stc
rcl
cmc
mov
sar
repnz
into
out
mov
int3
jmp
ret
call
shl
jmp
fnstsw
in
mov
mov
xchg
add
add
add
into
int
mov
mov
cmpsb
loopne
xor
pop
ljmp
add
mov
add
into
or
rorl
jbe
fsts
js
loop
cmp
ljmp
jmp
scas
std
loop
ret
cld
fbstp
mov
enter
int
rcr
loopne
shl
xlat
fcmovb
call
in
test
out
lock
call
lret
stos
lods
lods
adc
cmpsb
cmpsb
cmpsb
add
ret
mov
sahf
stos
aam
dec
cmp
test
insb
scas
es
mov
ja
mov
inc
xchg
ret
stc
lret
test
mov
out
mov
rcl
mov
lret
rcl
int
aam
shlb
xlat
aam
jg
fcmovu
jb
fnstsw
gs
in
out
call
xor
div
cmc
and
lock
sbb
fcmovnu
or
mov
into
add
add
add
rolb
mov
stos
xchg
lock
xchg
ljmp
mov
sarb
mov
ret
mov
cmpsl
enter
lret
mov
enter
int
addr16
rcll
rcl
dec
xlat
inc
aam
xor
daa
fistpl
fcmovu
fstl
fsubp
loope
in
call
lock
add
sti
cmc
add
std
add
std
incb
incb
mov
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
rcll
les
mov
daa
int
shlb
rcl
rcrl
rcl
rclb
rcl
rorl
rcl
aam
rcr
fadds
add
add
in
add
in
ljmp
incb
mov
mov
add
ret
vmovapd
mov
mov
push
rol
or
enter
enter
leave
add
aad
add
fcom
add
xlat
add
add
aam
add
xlat
loop
xlat
aam
add
loope
add
fsubp
add
out
add
repnz
std
add
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
les
mov
mov
mov
test
test
cmpsl
cmpsl
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
into
jmp
aad
cmc
rcl
aam
into
ror
cli
int
int
int3
lret
lret
mov
mov
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
into
iret
sar
xlat
aad
aad
aad
iret
iret
iret
dec
iret
int
lret
mov
mov
cld
stos
lods
stos
icebp
cwtl
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jae
jne
data16
dec
inc
dec
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
int3
lret
rcl
call
rcl
dec
int3
int3
inc
mov
rol
pushl
test
lahf
xchg
xchg
cwtl
jmp
jno
xchg
pop
pop
push
dec
add
add
add
add
add
add
addb
test
jns
imul
pop
pop
pop
movsb
push
push
push
stos
push
insb
insb
push
pop
pop
cmp
cmp
pop
jno
jo
scas
scas
scas
pop
mov
mov
mov
mov
sar
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
fwait
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
pushf
xchg
cltd
fcoml
addb
jge
jl
jns
jns
jns
jp
jp
jp
je
je
push
push
push
cmp
jae
sahf
sahf
pushf
mov
scas
lods
repz
scas
scas
sti
scas
lods
lods
std
test
test
sahf
sahf
popf
call
xchg
call
mov
scas
jmp
lods
lods
leave
cmpsb
cmpsb
movsb
cltd
je
jb
adc
adc
add
add
add
add
insl
outsb
insl
pop
xchg
mov
loop
cltd
popf
incl
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
lcall
mov
call
sahf
ljmp
scas
std
mov
scas
mov
mov
mov
cmpsl
mov
jg
pop
pop
pop
or
scas
mov
cmpsl
sahf
movsl
decl
lea
lcall
sahf
mov
negl
jg
stos
push
push
push
jo
push
push
outsl
insb
insl
outsl
xchg
subl
nop
mov
lcall
mov
mov
xchg
mov
push
mov
mov
mov
out
lods
lods
insl
stos
test
add
add
add
pop
popa
popa
or
mov
in
movsb
cmpsl
call
xchg
xchg
call
cwtl
xchg
cwtl
cwtl
fwait
lcall
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
mov
xchg
jbe
notb
pop
jle
pushf
dec
jl
movsb
inc
jns
lods
ss
scas
sub
mov
insl
ljmp
sbb
mov
scas
mov
mov
scas
jle
movsb
mov
add
add
add
pop
or
mov
call
lahf
lahf
jmp
mov
xchg
decl
orl
xchg
jae
cld
cwtl
pusha
cmp
dec
jns
nop
cmp
nop
daa
call
lcall
push
pusha
jmp
sbb
sbb
mov
jno
mov
and
mov
stos
mov
scas
lods
scas
xchg
popf
popf
lahf
adc
add
add
popa
pusha
pop
or
stos
mov
stos
movsb
cmpsb
jmp
cmpsb
cmpsb
ljmp
test
lcall
pop
jnp
mov
push
mov
arpl
mov
pop
incl
add
pop
call
add
or
jb
mov
jl,pn
ret
xor
enter
lret
dec
pop
xchg
inc
stos
mov
mov
scas
movsb
test
test
pusha
pusha
pop
or
movsl
test
test
test
ljmp
mov
pushl
xchg
mov
decl
push
pop
incl
add
push
call
add
lahf
add
movsl
add
mov
outsb
inc
ss
lret
inc
mov
into
inc
call
inc
call
inc
xchg
fiaddl
call
arpl
stc
mov
mov
movsl
mov
incb
add
add
pop
pusha
pusha
or
mov
ljmp
mov
mov
mov
stos
lcall
push
call
pop
pop
decl
add
xchg
add
lahf
add
cmpsl
add
scas
add
mov
dec
xchg
call
pop
fwait
fistpl
jmp
pop
sahf
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
cmpsb
xor
add
add
dec
pop
jge
jl
pushf
xchg
cltd
jecxz
sahf
mov
pushl
mov
mov
jmp
sub
lcall
and
call
push
lcall
add
scas
add
mov
xor
jmp
insl
stos
jmp
outsl
stos
ljmp
in
jae
jmp
js
call
test
std
mov
cmpsl
test
addb
add
dec
pop
outsb
insl
insb
bound
cltd
cwtl
pushl
mov
mov
mov
jbe
lcall
ja
pushf
sub
xchg
or
lcall
ljmp
add
or
call
inc
xchg
jmp
jns
ljmp
out
test
push
xchg
fldcw
mov
push
lcall
add
sub
push
push
dec
pop
pushw
loopne
mov
mov
rol
ret
ret
ret
mov
pushf
jmp
inc
cmp
sub
cltd
or
mov
add
mov
arpl
mov
push
jbe
loope
mov
push
xchg
ret
push
cwtl
push
xchg
push
fwait
leave
cli
fwait
leave
clc
xchg
jmp
stos
mov
lods
popa
mov
add
add
xor
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
ret
inc
xchg
test
movsl
pop
xchg
lods
dec
cmp
and
lahf
add
cmpsl
add
mov
arpl
mov
add
fldenv
cmp
mulb
sar
cli
stos
sar
cli
stos
iret
cld
lods
sar
stos
sar
sti
cmpsl
int
out
dec
rol
stos
stos
test
or
add
add
dec
dec
dec
aaa
je
jae
stos
stos
test
out
int
cmc
lret
lret
leave
lret
leave
std
leave
enter
mov
stos
bound
jmp
add
mov
gs
add
iret
add
fildl
je
ljmp
std
mov
std
mov
fdivr
std
mov
std
mov
sar
jmp
rol
mov
scas
mov
add
add
add
add
pop
or
aam
dec
loope
loop
fsubp
fistps
fcmovu
out
shll
test
je
movsl
or
scas
add
mov
add
add
loop
jl
lock
mov
sti
ret
loopne
std
loope
inc
loopne
inc
loopne
dec
loopne
dec
std
fdivr
out
mov
lret
mov
xchg
pushf
popf
popf
sbb
add
add
std
std
add
std
add
jmp
in
sbb
in
in
xor
loope
in
lds
mov
mov
add
mov
arpl
ret
dec
add
faddl
jbe
ljmp
cld
ret
sti
shl
shl
shl
call
out
std
aad
fsubr
shl
push
enter
lret
sar
mov
mov
add
std
add
incb
cld
cld
pop
aad
aam
mov
pop
xchg
sahf
or
pop
pushl
add
roll
jo
filds
jne
in
and
std
shl
fsubr
std
std
fsubr
std
cld
xlat
out
std
cld
shl
push
jmp
rcl
sti
mov
sahf
lahf
das
add
add
int3
into
int
mov
bound
lods
add
mov
add
roll
jno
loopne
jns
out
das
xchg
stc
lcall
cli
lret
test
aad
bnd
aam
lock
aam
out
aad
out
shl
in
in
fsubr
leave
mov
test
std
add
add
add
aad
push
mov
jb
or
insb
inc
pop
jno
int3
and
cs
ficoms
clc
loop
mov
out
in
lret
mov
lret
ror
fmulp
sarl
in
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsb
les
push
xchg
mov
nop
fidivrl
andb
int
mov
iret
mov
jge
vpunpckhqdq
int3
int
rcl
rorb
cmp
fnstsw
das
in
fisubs
loop
lock
jmp
or
incl
std
add
mov
jns
mov
mov
mov
mov
xor
leave
enter
rcl
pop
sarl
or
or
int
add
std
add
std
add
add
add
into
int
or
int3
int3
int
lods
stos
stos
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
fwait
add
ret
enter
enter
enter
ret
ret
ret
mov
scas
insb
lods
lods
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
aad
std
rcl
sar
iret
iret
into
std
mov
mov
sarl
gs
pop
push
add
add
add
add
add
add
add
add
jb
jno
addr16
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
into
call
aam
dec
int
dec
mov
ljmp
mov
mov
add
xor
add
sbb
je
je
xchg
adc
arpl
mov
addr16
jb
pusha
bound
pusha
pusha
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jb
and
add
pop
add
add
jb
jb
fwait
xchg
fwait
mov
test
clc
xchg
test
test
push
push
push
inc
mov
pushf
into
mov
lahf
lahf
sti
xchg
xchg
xchg
decb
lea
lods
test
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
pushf
popf
popf
cmc
lcall
mov
push
push
imul
jle
lea
testl
mov
mov
xchg
mov
test
scas
push
stos
lods
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
lcall
cltd
cltd
lcall
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
nop
fs
lcall
ljmp
pop
jo
mov
insb
pushl
sahf
scas
lock
mov
imul
int3
add
xchg
pop
scas
movsb
stos
test
popf
sahf
lahf
jmp
cmpsb
call
jle
lea
xchg
inc
jae
mov
push
mov
call
or
mov
push
outsl
mov
es
shlb
inc
aas
test
mov
scas
mov
stos
stos
test
add
fwait
mov
cld
cmpsl
cmpsb
cmpsb
pushl
scas
mov
mov
sub
adc
xchg
push
decl
add
add
mov
adc
shlb
dec
inc
mov
iret
inc
mov
inc
mov
aad
xchg
dec
cwtl
mov
mov
mov
movsb
mov
add
push
imul
movsl
lahf
movsb
cld
scas
lods
scas
pushl
mov
movsl
call
sbb
pop
call
add
mov
add
mov
push
xchg
fistpl
loope
mov
jmp
cmpsw
call
lcall
cmpsb
cmpsb
cmpsl
pop
add
add
popa
popa
popa
adc
sahf
pushf
fwait
cld
mov
mov
mov
mov
mov
pushf
dec
jge
popf
xor
cwtl
and
call
add
stos
add
mov
dec
xor
call
jnp
out
jle
push
jle
fstps
mov
and
add
add
dec
adc
push
cmp
mov
ret
mov
arpl
lcall
add
add
mov
gs
or
dec
xchg
out
lea
push
xchg
xchg
stc
xchg
jmp
cmpsl
inc
mov
movsl
sub
inc
inc
inc
adc
push
xchg
mov
mov
inc
sarl
ljmp
sbb
cmpsb
add
mov
gs
add
adc
jmp
scas
push
test
clc
lods
sar
cli
lods
sar
cld
scas
sar
std
lods
sar
in
mov
inc
mov
cmpsb
ds
incl
xor
outsl
jo
scas
mov
mov
aad
aad
aad
rcl
shr
leave
lret
mov
mov
jmp
add
les
push
aam
jb
out
test
clc
nop
ret
mov
fdivr
std
ret
inc
std
ret
lock
ret
in
test
dec
addl
stos
add
jmp
or
jmp
out
outsb
movsl
and
pop
mov
add
faddl
jne
lock
dec
in
std
shl
call
in
std
aam
std
aad
push
fdivr
rol
int3
in
scas
scas
scas
popa
addl
add
incl
std
std
incb
int3
lret
shrl
mov
add
mov
add
loope
js
hlt
push
cmpsl
std
enter
jmp
aam
cld
shl
cli
aam
push
leave
fdivr
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
lods
add
mov
push
jae
fstpl
cmp
insb
lods
cld
out
mov
aam
call
rcl
out
shl
in
aad
jmp
fcmovu
scas
ret
lds
lcall
sarb
xchg
dec
and
push
mov
shlb
int3
ja
mov
xlat
mov
lret
vmovdqu
lret
into
pop
fst
aad
in
loope
out
call
sbb
mov
mov
cmp
movsb
scas
arpl
mov
ret
mov
les
sbb
bswap
into
int3
or
aad
push
incl
jg
addb
std
incb
lods
incb
rol
add
incl
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
and
in
js
xor
mov
ljmp
in
add
in
pop
andnps
out
xchg
adc
test
mov
scas
pop
nop
mov
int3
icebp
sub
cli
sahf
leave
mov
call
inc
cmp
gs
pop
sub
es
mov
cmpsl
stos
pop
xor
add
test
aas
stos
mov
mov
ds
jge
jae
hlt
scas
mov
pop
aas
add
sahf
mov
enter
and
call
adc
pop
movsl
addb
cmpl
bound
jmp
lret
imul
rclb
inc
roll
int3
xchg
shl
inc
push
xchg
mov
lcall
push
push
fbld
and
cwtl
imulb
jns
push
pop
jbe
add
mov
fldt
push
iret
sbb
out
inc
lods
lds
testb
js
rcrb
mov
in
pop
popa
jmp
xor
out
cld
jo
sahf
pop
xor
push
cltd
xor
cli
repz
popf
inc
mov
push
mov
fs
and
sub
scas
pop
insb
sbb
cmp
std
cmp
inc
inc
mov
in
mov
xorl
out
idivb
rcrb
cwtl
scas
push
or
clc
jns
dec
repnz
shlb
pop
xor
push
movsb
push
popaw
mov
jnp
inc
gs
pop
flds
mov
and
inc
cltd
inc
jae
mov
jmp
scas
xor
aam
loopne
adc
mov
sti
inc
es
cmp
sub
adc
mov
xchg
rorb
xor
fnstsw
sub
push
sti
test
mov
das
shrb
cmpsl
add
mov
popa
adc
mov
jae
stos
pop
jle
or
test
fldcw
cs
lea
ret
clc
mov
lcall
std
pop
stc
mov
fmulp
jb
jo
ss
pusha
or
jg
dec
dec
clc
loop
jno
push
lret
cmp
jp
sahf
loop
inc
js
int
scas
bound
mov
scas
xchg
fprem
sub
out
sub
in
pop
test
and
mov
movsb
rolb
jne
fs
jle
inc
mov
gs
daa
mov
clc
leave
repz
mov
out
mov
mov
mov
bswap
lods
sti
fstpt
adc
iret
loope
dec
inc
push
xchg
adc
daa
xchg
cmp
in
sbb
cmc
cmp
dec
mov
test
arpl
ss
rcll
or
popf
pop
mov
pop
ret
ja
loopne
inc
insb
cwtl
lods
fnsave
and
lahf
out
sub
in
mov
push
jge
add
push
mov
jno
sub
adc
iret
roll
cmp
dec
pop
mov
adc
mov
pop
mov
stc
pop
and
sarb
push
mov
push
pop
fnsave
push
push
ficompl
roll
pusha
jp
hlt
in
outsb
xor
jnp
push
jle
shlb
inc
adc
jmp
icebp
out
jnp
lahf
scas
pop
scas
mov
mov
lods
imul
pop
sti
repnz
dec
or
add
sbb
pop
test
xor
stos
mov
and
int
es
es
repnz
adc
pop
hlt
bound
inc
and
jno
xchg
stos
stos
or
adc
xchg
aad
add
xor
or
dec
or
fistpl
pop
out
pop
sbb
inc
adc
inc
rolb
pop
les
mov
jne
mov
outsb
and
and
push
mov
xchg
cmp
mov
mov
fstpt
push
lret
mov
js
jl
cwtl
pop
and
or
cmp
pop
fiaddl
sti
pop
pop
dec
or
dec
fidivrs
sti
cmp
fwait
jbe
int3
mov
mov
sbb
xor
and
jnp
and
xchg
insb
sarl
ret
loopne
movsl
sub
icebp
rolb
rcrb
mov
scas
or
movsb
and
mov
add
insb
cmpsl
sub
lcall
fs
add
and
xor
jle
lock
cltd
jo
inc
push
lret
xchg
push
push
mov
movsl
xchg
lock
mov
or
pop
stos
mov
fs
add
or
mov
roll
nop
pop
icebp
sbb
test
movsb
bound
ret
mov
aam
arpl
pop
jle
mov
lahf
mov
out
xchg
xchg
push
mov
leave
jg
dec
sbb
lods
jmp
jp
leave
pusha
les
or
pushf
mov
and
stc
loope
ljmp
cltd
cmp
cmp
push
or
fisttpll
dec
shll
ds
push
sbb
jne
inc
data16
not
adc
pusha
mov
pop
hlt
mov
js
lea
stc
nop
xorl
scas
insl
add
sbb
pop
cld
stos
jg
sub
int3
scas
mov
push
push
rolb
dec
push
pop
repz
mov
lret
aam
fs
mov
mov
lea
lods
inc
add
fstps
cmp
cmpsl
dec
jecxz
imul
outsb
adc
xchg
test
and
inc
ret
pop
repz
mov
xchg
sub
mov
frstor
pop
inc
insl
jb
call
rclb
or
inc
idivb
jne
in
pushf
mov
movups
cmp
ds
mov
fadds
jo
dec
bound
subb
cmpsl
lods
push
aad
imul
pop
loop
lahf
adc
push
lods
mov
es
add
popa
clc
push
in
push
in
sbb
je,pt
jo
popf
xor
xchg
xchg
sub
sbb
push
dec
in
inc
push
jo
jno
aaa
into
test
clc
jbe
insl
daa
mov
sub
cmp
or
push
mov
loope
pop
xor
outsl
orl
ja
sbb
adc
adc
and
push
call
pop
aaa
ud0
or
pop
xchg
and
lcall
mov
cld
out
test
or
push
push
mov
rcrl
jb
jns
fildll
lret
data16
cld
pop
sbb
dec
pop
ss
jo
cmp
ret
rcrl
jb
das
pop
loopne
dec
push
nop
daa
subb
pushf
mov
sbb
out
test
sub
cmp
inc
dec
ljmp
pushf
or
out
es
cmp
mov
lea
shrb
in
push
dec
inc
sbb
es
das
or
outsb
push
cwtl
adc
out
cmpsl
and
fbstp
lahf
out
iret
movl
dec
loopne
rolb
pop
mov
xor
aaa
les
xor
pop
dec
inc
aam
push
inc
sub
aas
push
in
inc
push
cmp
jecxz
rcrl
and
jbe
cmp
stc
rclb
jno
push
inc
or
inc
push
sbb
xor
ljmp
jno
fistl
add
test
lods
inc
cmp
lret
aad
les
imul
subb
loop
aad
pop
sahf
jp
add
int
push
mov
out
inc
ficompl
fwait
cmp
int3
inc
popa
clc
jno
pop
icebp
push
xchg
jg
lds
js
jno
popf
xor
xchg
xchg
sub
imul
dec
sbb
shrb
loopne
mov
lock
loopne
or
loope
je
jle
popa
lods
shrl
sbbb
mov
out
xchg
aad
aam
push
or
fstps
mov
insl
inc
dec
mov
sub
mov
loopne
mov
negb
insl
jnp
lea
and
cmp
pop
scas
pop
mov
mov
cmc
mov
shrl
mov
mov
jg
aad
or
sub
and
bound
mov
jnp
sbb
vmptrld
into
stc
xor
mov
ret
mov
arpl
aam
into
lds
dec
loopne
out
inc
fadds
sub
jmp
sbbb
or
sbb
cwtl
fdivl
lahf
stos
inc
adc
fwait
xor
mov
les
pop
xlat
into
gs
cli
std
xchg
and
testb
mov
or
adc
lret
push
ljmp
test
jg
add
scas
aaa
enter
sar
xchg
clc
fstpt
aad
sahf
cld
xchg
in
inc
fcomp
testb
ds
adc
fiaddl
test
push
loop
adc
cmp
shrl
lret
mov
fldl
into
pop
xchg
cs
out
fnstenv
sub
nop
push
add
jae
jnp
adc
pop
pop
mov
sub
mov
lcall
fwait
sub
cmp
mov
inc
iret
andw
sub
outsb
jae
repz
addr16
mov
not
sub
or
shrb
mov
das
aam
aas
sbb
rcrl
push
fld
adc
pusha
aad
mov
adc
ret
pop
jmp
or
rcrb
outsb
pop
das
xchg
mov
ret
jns
mov
dec
out
mov
enter
enter
dec
xchg
cld
xchg
out
xor
push
psrlw
repz
ficoms
xor
adc
xchg
sub
xor
inc
ficomps
cmp
out
not
outsb
sbb
lods
inc
loopne
shrl
add
jge
outsb
mov
dec
test
mov
sub
mov
inc
dec
dec
fistpll
ljmp
dec
fstps
mov
outsb
fnsave
mov
mov
scas
inc
repz
pop
icebp
cmpsl
adc
scas
test
das
js
and
cmp
dec
loope
shrb
adc
sbb
dec
jmp
movsb
cmp
sbbl
loop
xlat
outsb
mov
das
je
movsl
cmp
xchg
lcall
sub
or
mov
cmp
mov
sub
popa
mov
push
daa
jnp
imul
add
cmp
cwtl
das
pop
sbb
orl
mov
jge
adc
xor
push
inc
add
pop
sahf
push
rcrl
cltd
push
stc
nop
rorb
pop
imulb
dec
sub
je
sbb
inc
inc
fdivl
jmp
cmp
inc
mov
stos
jecxz
mov
icebp
mov
push
clc
popl
sub
lcall
mov
jle
inc
mov
call
dec
insl
ret
pop
cltd
imul
movsb
cmp
pop
insl
rcl
push
pop
lock
push
in
xchg
pop
xlat
outsb
xchg
mov
mov
inc
xor
arpl
int3
arpl
lcall
sarb
idivl
in
popf
lret
xchg
shrl
arpl
and
and
mov
push
sub
xchg
sub
dec
scas
inc
cmp
pop
fsubrs
jge
lods
jno
cmp
out
test
mov
lods
inc
pop
test
mov
inc
fisubl
lret
dec
in
cmp
inc
fdivrp
iret
sbbl
xchg
jne
enter
shll
mov
in
mov
dec
js
je
push
lcall
fsubrl
sti
popf
jno
cmp
dec
pop
xchg
push
jg
inc
cmp
imul
inc
push
add
popf
xor
pop
mov
mov
push
sbb
cmpsb
cmp
and
pushf
xor
mov
inc
adc
add
jp
jnp
inc
insl
mov
mov
mov
mov
mov
push
sub
int
daa
pop
repnz
inc
xchg
sub
pop
lock
xchg
pop
neg
imul
mov
out
xchg
cmp
adcb
fsubs
mov
xchg
or
cmp
into
sub
aaa
cmp
pop
push
call
in
mov
arpl
push
pop
jp
jp
inc
flds
test
push
sbb
lahf
and
jns
int
and
iret
or
shrl
lcall
jle
push
jo
js
mov
or
xor
adc
mov
loop
mov
pusha
test
push
imul
stc
adc
jg
mov
jge
jmp
pop
adc
cmp
cmp
into
push
lods
cli
ret
pop
icebp
mov
test
rcl
test
popa
cwtl
call
cwtl
das
pop
sti
sub
jne
push
and
add
and
movsl
fwait
mov
iret
cmp
mov
outsb
add
leave
inc
xor
jb
sbb
fildl
add
in
repz
repnz
call
jmp
pop
hlt
movsb
fwait
jmp
lock
mov
xor
lret
ror
pop
mov
ljmp
aas
std
jns
out
iret
push
adc
mov
shlb
out
cltd
ss
mov
leave
lret
add
mov
fdivl
into
hlt
or
loop
jo
jmp
pushf
testb
sahf
mov
sub
pop
lock
mov
movsl
xor
loopne
add
fbld
scas
push
insl
mov
pushf
jb
pop
xor
xchg
negb
lds
shrb
cmc
arpl
das
stos
xchg
push
aas
add
out
shll
lods
ret
push
jb
cmp
inc
sbbl
jnp
dec
out
pushf
pop
cmc
or
cs
xor
dec
shrl
push
aam
in
sub
pushf
xor
cli
cmpsl
ds
test
xchg
mov
dec
push
jmp
lahf
push
lods
adc
or
mov
les
mov
rcrb
adc
mov
pop
scas
out
lcall
xorl
adc
jmp
mov
and
inc
xlat
stc
inc
sbb
insb
mov
add
inc
mov
jns
pop
fisubs
in
inc
nop
sub
in
mov
fldcw
sbb
rclb
cmp
mov
cli
xchg
sbb
mov
loopne
mov
xor
mov
call
cmpsl
fs
popf
xor
test
mov
gs
cmp
rclb
popa
clc
add
mov
lods
cltd
xor
lcall
ljmp
pop
scas
cmpsl
lahf
jle
pop
leave
push
jmp
pusha
repnz
negb
cmc
pop
hlt
int
pop
scas
push
out
pop
mov
ja
add
push
jecxz
mov
scas
insl
stos
mov
decb
test
fadds
test
sub
cmp
xor
dec
xchg
shlb
dec
in
mov
addl
or
lret
push
sbb
dec
aaa
data16
push
mov
mov
fcoml
inc
das
mov
mov
push
shrl
xchg
add
add
outsl
push
jb
pop
call
or
jne
and
xchg
fnsave
je
xchg
gs
jnp
adc
arpl
outsl
je
popa
xchg
sub
xlat
outsb
loope
out
bound
jecxz
jl
mov
mov
loopne
inc
mov
imul
aad
push
sbb
dec
cmp
cwtl
xchg
pop
mov
fistpl
add
mov
mov
lods
and
pusha
push
int
cmp
jbe
insb
inc
sti
leave
pusha
sub
dec
shrl
mov
out
test
pop
dec
mov
jge
ja
movsl
leave
pusha
mov
jne
pusha
sarl
lods
into
rcl
push
scas
sarl
stos
out
gs
cmp
fnstsw
sbb
xchg
fnsave
lret
push
fidivs
xchg
mov
push
mov
push
fcom
and
cli
xchg
mov
xchg
xchg
sub
mov
inc
mov
hlt
jl
int3
popa
cmp
call
shlb
sti
orl
leave
test
sti
repnz
invd
add
xor
into
add
push
sub
and
out
cmp
sub
cmp
in
fsubp
mov
imul
or
mov
inc
lret
mov
test
mov
fnstsw
inc
xor
xor
mov
or
jne
lea
dec
test
movsb
lods
imull
outsb
jnp
lea
xor
pushf
test
sbb
mov
add
dec
push
jle
lds
cmpsl
dec
jecxz
sbbl
stos
inc
push
mov
lret
or
fiaddl
push
in
xor
inc
cmpsl
sarb
dec
rcrb
pop
inc
fisttpl
movsl
inc
fcoml
cmp
insb
ljmp
pop
out
pop
iret
mov
hlt
das
test
cmp
mov
push
or
push
xor
dec
cmc
xchg
sub
nop
or
jno
inc
jno
xor
rclb
fbstp
mov
cmpsb
cmp
cwtl
cmp
xchg
imul
mov
rcrl
mov
test
jge
inc
push
adc
scas
mov
out
sti
xchg
lret
or
mov
mov
xchg
out
or
dec
mov
fldt
ja
mov
scas
leave
mov
jno
jmp
adc
cmp
fsubrl
xchg
mov
sti
xchg
rcl
adc
or
ja
sbbl
scas
movsb
fnstenv
rclb
jnp
adc
je
iret
out
xchg
mov
xchg
adc
imul
imul
dec
jecxz
sahf
test
fwait
or
gs
out
call
call
sbb
sbb
mov
or
push
jmp
jle
cld
stos
sub
jns
inc
lahf
cmc
bound
or
push
in
jo
std
xchg
lahf
clc
mov
ljmp
or
xchg
sub
dec
push
popf
xor
push
sbbl
pop
dec
filds
jl
stos
scas
inc
sbb
rolb
add
sub
push
icebp
test
ficomps
gs
xor
int3
jmp
mov
cmp
repnz
xor
shlb
mov
movsl
lret
mov
cwtl
in
or
outsb
dec
loope
add
mov
and
jb
mov
sbb
dec
pop
out
inc
jmp
inc
sbb
lods
inc
sbbb
insl
mov
insb
add
mov
jne
in
test
xchg
adc
jbe
xor
adc
in
subl
jb
shll
gs
add
ret
push
lret
int3
cltd
jecxz
or
push
dec
adc
sub
test
popf
scas
inc
lret
loope
push
push
scas
cmp
lcall
mov
xchg
jp
in
lock
and
push
xchg
outsl
adc
dec
adc
push
pop
pop
add
mov
mov
cmpsl
cmc
enter
fsubs
mov
nop
push
mov
inc
repz
xchg
shrl
mull
mov
xor
ret
mov
repz
or
sub
mov
xor
pushf
and
popa
sub
fsubrs
cmp
outsl
lods
lods
test
pop
push
out
inc
jbe
imul
divb
into
cmp
and
or
mov
mov
sbb
data16
addr16
leave
push
mov
ja
ja
fisttpl
cmp
fdivl
test
sub
movl
jnp
or
into
mov
les
fidivrs
adc
jnp
pop
icebp
in
pushf
adc
lods
inc
push
call
jmp
or
popf
int3
inc
mov
cmp
sub
outsb
add
imul
adc
fildll
cmp
xor
inc
xlat
imul
imul
push
xchg
sub
mov
xchg
popl
push
adc
sbb
iret
rcrl
add
push
popf
shll
mov
mov
fdivrp
xchg
fists
mov
add
adc
mov
mov
ret
xchg
push
in
and
aaa
adc
xor
aam
pushw
test
mov
addl
pop
stc
js
mov
sbb
loop
mov
adc
int
mov
mov
iret
shl
mov
mov
fnstenv
mov
cmp
pop
mov
int
jl
inc
sbb
dec
push
cmpsl
ds
push
iret
aas
mov
and
pusha
xchg
sbb
dec
divl
enter
imul
add
movsb
in
ds
lds
repz
sbb
gs
or
mov
icebp
mov
sbb
icebp
push
lods
and
ret
inc
ss
pop
lret
xchg
pop
repz
scas
call
sbb
fwait
out
shll
shrl
out
out
arpl
rorb
lret
sbb
fcomps
mov
dec
inc
faddp
lea
rcrb
ds
mov
loop
and
rcrb
mov
and
adc
mov
xor
movsb
cmp
stos
in
jb
loopne
adc
aad
dec
out
push
lcall
add
ljmp
xchg
adcb
out
test
or
xor
jns
inc
int
popf
mov
inc
mov
test
pop
mov
test
ds
cmpsb
out
test
cmp
push
outsb
add
imul
or
jb
std
push
sbbb
push
add
sahf
xor
mov
jnp
add
movsb
in
es
repnz
mov
sahf
iret
data16
adc
or
pause
sub
dec
fstps
and
scas
xchg
inc
fld
into
jl
es
pop
sbb
inc
stos
inc
mov
pop
std
xchg
fdivl
push
out
push
jmp
mov
sbbb
je
leave
pop
mov
cmp
jecxz
lods
jne
les
sbb
fidivl
movsb
cmp
xor
stos
inc
dec
cmp
pop
cmp
lods
pop
leave
pusha
push
cmp
mov
insl
shlb
out
mov
out
or
aad
psubb
aam
pop
cmc
loopne
and
xor
pop
scas
out
repz
jnp
pop
imul
pushf
mov
stos
inc
aas
das
cwtl
das
mov
ret
fstpt
jbe
lds
sub
or
mov
mov
ret
insl
add
xor
lahf
popa
push
xchg
sub
mov
test
fwait
aam
rol
lds
jle
stos
test
pop
mov
lods
push
movsl
fidivs
ret
cmp
xor
pop
repnz
push
pop
testb
loopne
sti
cmp
in
mov
cmp
push
out
cmp
adc
jno
or
mov
inc
fstl
dec
test
sbb
and
mov
sbb
pop
mov
jp
mov
pusha
lds
out
in
dec
imul
lret
xor
mov
fst
and
loopne
jp
pop
mov
in
call
xor
nop
ja
repz
xchg
pop
xor
push
test
lea
hlt
dec
jle
inc
mov
lea
push
cltd
xor
mov
sbbl
mov
inc
pop
out
jb
imul
dec
jb
jge
sub
repnz
rcrl
push
mov
inc
test
lds
cmp
xchg
fnsave
cld
dec
sahf
lods
rcrl
xchg
pop
fsubrl
mov
xchg
cwtl
int
cmp
fisubl
inc
fucomp
dec
mov
fcoml
or
orl
jns
pop
stos
addr16
mov
lret
xor
mov
aad
cld
ljmp
lret
xlat
inc
xlat
ja
jmp
mov
and
iret
negb
rcl
sbbl
cmc
cs
xchg
testb
bound
cmp
push
inc
mov
out
xor
out
aam
fldl
mov
inc
adc
xchg
mov
icebp
ret
dec
mov
lea
ret
jecxz
lods
pop
shll
mov
loope
cwtl
nop
daa
mov
sub
ss
xchg
cmp
jnp
pop
lahf
pusha
testl
test
fisubs
add
xchg
jne
hlt
inc
pop
push
in
dec
fs
ds
xor
imul
sub
sbb
bound
cld
imul
pop
mov
sbb
push
enter
sub
adc
dec
ss
insl
push
sub
cbtw
pop
add
jl
repz
test
adc
add
add
adc
jae
gs
nop
pop
xor
jle
jns
repnz
shlb
lods
in
in
sbb
jnp
sub
xor
mov
push
fdivl
scas
cmp
mov
mov
or
push
mov
or
sti
jo
mov
adc
call
sbb
fildll
or
ja
inc
jl
out
push
outsl
mov
popa
adc
and
jmp
jmp
jno
adc
out
inc
pop
mov
ja
add
call
xchg
jmp
fists
and
out
xchg
xchg
add
in
xchg
mov
jb
mov
filds
inc
aaa
test
inc
xchg
popa
in
dec
jge
lahf
jecxz
mov
fbld
mov
push
xor
inc
je
adc
gs
dec
addr16
adc
push
cmp
subl
cmpl
cltd
xchg
jno
mov
jg
cmpsb
adc
sub
les
das
das
cltd
inc
pushf
push
insb
sbb
cmp
or
cmp
int
jbe
adc
or
push
push
add
scas
andl
xchg
push
pusha
test
sahf
push
sbbl
std
inc
notl
pushf
repz
pushf
orb
adc
add
add
jnp
out
xchg
sarb
mov
xlat
popl
xor
mov
push
lods
test
jg
ljmp
cwtl
mov
sarl
les
sbb
rcrb
sub
mov
lods
imul
rcrl
mov
shrb
call
mov
xchg
sub
jns
adc
push
popf
sahf
sub
jo
mov
shll
add
cltd
inc
xchg
dec
stos
clc
cmp
jne
out
lret
lds
push
std
fcmovu
and
jbe
xchg
rcrl
cwtl
in
fnsave
sahf
mov
mov
out
cmp
mov
fdivp
les
inc
les
ljmp
fimuls
call
fs
inc
in
pop
cmpsb
adc
cmp
push
mov
out
loope
testl
fidivrl
scas
sti
xchg
decb
fcmovnbe
int
fidivs
push
mov
cltd
inc
mov
dec
adc
jno
aas
shlb
mov
stos
push
jle
imul
and
sbb
dec
add
ss
adc
mov
xor
and
mov
or
add
adc
adc
add
rclb
sti
xor
fmuls
inc
fnstsw
cwtl
jo
xchg
imul
mov
jge
pop
sti
stc
in
imul
mov
and
daa
mov
push
push
popf
inc
inc
push
sbb
loopne
cld
dec
je
push
fldcw
inc
ror
cmp
push
and
mov
cmc
cmp
testb
lds
das
call
and
and
pusha
fwait
pusha
stos
adc
pop
xor
add
test
dec
mov
std
sub
rorl
mov
sub
test
lret
cmc
mov
push
out
mov
popf
fnsave
push
mov
inc
roll
repnz
mov
pop
or
imul
pushf
aad
dec
or
jecxz
gs
repz
xchg
mov
lods
push
fnsave
pop
inc
stos
add
jns
mov
mov
popa
jmp
lret
sbb
pop
es
mov
andl
xor
outsl
ja
montmul
cmpsb
pop
fdivrs
bound
mov
xchg
cmpsl
jns
scas
daa
daa
mov
insb
int
xor
in
std
push
leave
pop
scas
cli
js
dec
test
adc
dec
and
pop
movsl
mov
dec
rol
ds
mov
bndldx
xchg
sarb
inc
loope
adc
sub
fcoml
xor
pop
out
push
lahf
cmp
xor
add
and
dec
push
jl
ds
stos
insb
cmp
mov
pop
rolb
push
mov
mov
and
ficompl
ret
mov
loop
ror
fidivrs
insl
xchg
sbb
mov
mov
aad
cmp
pop
dec
or
mov
pop
out
inc
loopne
and
popf
imul
adc
mov
scas
out
fsubrs
or
es
and
test
and
cmp
fldl
insb
pop
or
lcall
inc
inc
out
out
sti
pusha
xchg
push
movsb
mov
sub
scas
ror
or
adc
push
and
fdivl
mov
pop
loop
lcall
dec
mov
dec
sub
or
xchg
ds
dec
xor
scas
inc
pop
out
mov
pop
loope
xchg
loope
test
push
stc
push
mov
cmp
push
mov
cmp
mov
and
lock
fstpt
lods
sti
sahf
outsb
test
xchg
sub
dec
int
push
adc
xor
ret
test
cmc
xchg
imul
out
faddl
mov
ret
or
not
sub
hlt
cmc
push
push
xor
gs
cmp
mov
jns
enter
xlat
sbb
mov
and
lcall
subb
mov
mov
sub
or
andb
mov
addr16
lahf
stos
gs
xor
sbb
stos
ja
mov
adc
stos
insb
push
into
or
out
mov
mov
cltd
push
mov
mul
jnp
mov
rcrb
mov
mov
imul
cmp
stc
out
imul
enter
mov
gs
sar
fwait
sbbb
lock
lods
xchg
sti
mov
xchg
sub
out
push
in
fistps
lods
int3
xchg
pusha
out
add
pop
ja
scas
inc
add
std
xchg
gs
scas
dec
and
hlt
fwait
sbb
jbe
or
js
sahf
xchg
pop
cltd
sub
in
data16
sub
lret
pop
pop
mov
les
aas
movsb
lods
subl
mov
mov
cmc
push
rclb
clc
jg
jp
ss
cmc
in
or
pop
stos
insb
mov
dec
push
popf
jge
ss
sbb
lea
pop
add
lret
sbbl
out
cmp
xchg
xor
mov
test
cltd
or
aad
adc
stos
lock
pop
daa
inc
mov
dec
jecxz
jp
repz
outsl
inc
xlat
mov
outsb
ror
sbb
sbb
mov
test
lahf
outsl
insl
aas
mov
sbbl
cli
adc
shlb
pop
push
push
cmc
pop
jnp
sbb
or
arpl
fsincos
idivl
sub
mov
inc
in
aas
and
xor
mov
jmp
xchg
int3
push
outsl
mov
add
mov
clc
dec
add
js
scas
xchg
and
pushf
pop
scas
cltd
inc
int
add
es
mov
xchg
cs
jns
jle
and
adc
fs
test
test
daa
push
scas
loop
adc
out
outsb
jbe
imul
mov
mov
sub
jge
pop
sbb
mov
add
cmp
mov
leave
je
dec
jmp
mov
push
adc
mov
dec
sub
mov
sub
repnz
cld
dec
loopne
in
and
das
xor
pop
push
dec
sahf
xchg
gs
add
stc
ficomps
ss
inc
jecxz
adc
iret
popfw
mov
fistl
out
sbb
sub
lods
pop
lret
leave
sbbb
sbb
or
pop
pop
fwait
add
push
ret
mov
scas
lock
sbb
sbb
cmp
jno
mov
das
lcall
shlb
pop
lods
xchg
dec
xchg
clc
pop
imul
mov
mov
popf
and
dec
ret
sub
imul
jne
cmp
cltd
and
popf
add
push
ljmp
pop
lods
jne
pop
es
cmpsb
dec
pushf
push
imul
fsubrl
mov
sub
repz
inc
inc
fidivs
loopne
cmp
gs
xchg
cmpsl
push
xchg
push
inc
sbbl
aam
or
dec
in
outsl
pop
out
xchg
xor
jp
inc
or
lods
sub
mov
movsl
mov
add
aad
add
pop
rcrl
cli
xchg
xchg
xchg
sub
sbb
pushf
jne
xchg
cmp
sub
push
paddb
cld
pusha
in
push
shlb
jle
js
mov
fnstenv
cmpsl
lret
xor
adc
out
fldl
jbe
add
sbb
hlt
inc
test
xchg
out
xchg
shrl
mov
ffreep
and
cmp
cmp
subb
or
and
icebp
lea
inc
loopne
lods
in
cmp
les
adc
addr16
push
mov
xlat
jle
bound
and
pop
ret
test
cmp
sub
pop
aaa
shl
xor
cwtl
mov
xchg
mov
mov
stos
xchg
mov
jo
mov
mov
push
leave
js
jns
mov
fwait
imul
xchg
imul
jle
sbb
mov
les
xor
mov
sub
push
sub
xor
cmpsb
aas
cmovo
dec
add
mov
cmp
test
xor
push
xor
sub
iret
pop
outsl
andl
andl
mov
mov
ret
cmp
xor
sub
rolb
daa
and
in
xchg
push
dec
xor
jo
fs
push
cmp
push
inc
xchg
jb
jno
or
andl
or
pop
cs
mov
loopne
dec
or
mulb
lret
push
mov
push
loopne
pusha
loope
ljmp
and
sarl
test
mov
repnz
int
push
cmc
cmpsb
jg
pop
add
imul
hlt
xchg
fwait
nop
dec
rcl
jns
daa
clc
inc
pop
lods
les
scas
cmc
into
loope
clc
sbb
shll
or
dec
aaa
jnp
imul
mov
mov
fstpt
mov
mov
sub
clc
test
lock
sub
pop
jo
ds
inc
adc
jne
fcmovnu
and
or
jg
mov
xchg
and
pop
shll
dec
popa
lret
pop
push
mov
jp
dec
imul
fnsave
mov
scas
sub
push
xor
add
aas
add
outsl
and
mov
mov
loop
shrb
add
mov
mov
popf
movsb
pop
pop
sub
addr16
stos
sbbl
sbb
outsl
test
cwtl
push
test
cmpsb
fisttpll
cld
mov
rorb
icebp
enter
push
movsb
sbb
sbb
enter
call
jbe
pop
mov
jae
and
pop
mov
jmp
jmp
ss
lahf
js
dec
jp
pop
push
decb
xor
daa
cmp
lock
inc
xlat
mov
int3
cmp
jo
xorb
stc
or
jge
and
sub
mov
inc
pop
xchg
and
push
adc
add
dec
subl
xchg
out
lds
mov
add
or
adc
pop
or
sub
sub
sub
cmp
jge
out
aaa
xor
jmp
cmp
and
sbb
nop
std
cmp
inc
jmp
gs
and
dec
xchg
jge,pn
stos
mov
in
cltd
test
and
inc
fmulp
test
out
fcomps
mov
jns
pop
imul
lcall
enter
mov
add
fsubl
xor
mov
xlat
outsb
mov
stc
mov
dec
in
push
out
pop
shrl
ja
daa
in
xor
jmp
aaa
data16
aas
imul
test
cmp
fcmovnu
test
out
popa
loope
stc
pusha
cli
and
sub
fstps
fwait
mov
in
mov
dec
or
repz
imul
mov
mov
cs
mov
mov
call
adc
mov
inc
out
mov
scas
repnz
and
xor
cmc
ret
ljmp
scas
cmp
insl
fisttpll
stos
cli
xchg
jbe
leave
sbb
cmp
and
dec
push
movsl
sbbb
mov
rolb
jle
mov
sub
mov
push
arpl
inc
cmc
test
mov
int
sub
dec
cltd
dec
popa
add
stos
fbstp
mov
mov
loop
mov
call
lahf
dec
jecxz
mov
rep
inc
fcmovnbe
fnstsw
imul
fs
and
test
sbb
pop
pop
arpl
cmp
aam
mov
out
add
sub
pop
jl
mov
cltd
jae
aam
mov
cs
jns
mov
xor
sub
mov
or
and
imul
cmp
int3
popf
pop
in
test
in
and
movl
xor
popl
push
xor
xchg
pop
fstpl
xchg
sub
lahf
or
je
jg
outsl
ss
adc
xchg
adc
sbb
pop
inc
bound
or
imull
dec
testb
xor
dec
je
ret
sub
outsb
sub
lahf
inc
cmp
ja
ss
out
neg
aam
fildl
les
xchg
lcall
out
push
sbb
cmp
adc
adcw
sub
sbbl
or
insl
and
xor
test
adc
mov
inc
pop
out
js
xchg
loope
les
into
or
dec
fs
loopne
movsb
pop
popa
inc
xor
loope
fwait
ja
jle
rcr
aam
adc
and
ja
aaa
mov
and
ja,pn
cmp
out
sub
inc
iret
jecxz
cmp
sub
loop
in
adc
and
lea
cmpsb
jecxz
mov
lcall
adc
push
in
push
cld
loop
subl
cwtl
or
daa
mov
pop
and
sbb
sbb
adc
mov
ds
mov
data16
mov
pop
es
dec
insl
std
filds
imul
negb
in
in
test
and
into
gs
loopne
push
clc
pop
xor
test
scas
scas
mov
xchg
jb
gs
ja
pusha
mov
mov
adcl
out
inc
sub
cwtl
push
scas
lds
cmp
mov
cmp
xchg
pop
ja
fists
inc
xchg
push
push
mov
xor
popa
jo
ljmp
cmpsl
jmp
divl
pusha
and
push
pop
aaa
lea
mov
adc
jg
xchg
lea
dec
mov
jnp
cmpsb
mov
hlt
jno
test
fdivl
inc
pop
rcrl
xlat
mov
inc
into
push
dec
sub
xchg
jbe
out
dec
sbb
xchg
pop
popf
jns
mov
hlt
push
and
and
repnz
pop
jmp
sbb
inc
mov
ss
push
lods
cmp
mov
lock
jne
fidivrs
adc
pop
cmpl
pop
lret
sbb
push
inc
xchg
jmp
sbbb
cs
ja
inc
mov
fwait
test
push
test
mov
fistpl
mov
cltd
ss
cmp
gs
sub
mov
jl
lods
jno
ss
xchg
xor
imul
or
mov
add
decb
xor
push
or
cmpsb
rcrl
push
fisubrs
jb
outsb
add
push
xorb
dec
hlt
iret
jmp
icebp
test
jge
aaa
ljmp
pop
clc
add
mov
pavgw
mov
pushl
clc
stos
pop
lret
pop
adc
js
rcr
inc
fimull
mov
outsb
pop
cmp
mov
sbb
push
repz
addr16
shrl
sti
shrl
add
aas
ret
pop
adcb
ljmp
test
push
mov
push
es
mov
lds
sub
stc
ljmp
push
mov
push
sbb
inc
dec
dec
add
in
shrl
sub
fcoml
or
mov
push
scas
sub
fisttpll
jg
gs
fildll
inc
dec
aam
cwtl
ljmp
mov
addr16
mov
std
xchg
bound
jb
mov
int3
mov
sub
jns
hlt
fisttpll
ljmp
stos
loope
sti
jecxz
inc
add
pusha
ljmp
and
mov
ljmp
pop
repz
pop
scas
mov
lret
bound
iret
popf
xor
aad
fadds
neg
xor
and
mov
pop
call
int3
mov
cmpsb
ja
xchg
insb
in
cmpsb
push
mov
test
xorl
jl
das
fsubl
rcrl
jb
inc
xchg
add
test
test
push
leave
xchg
sub
movsb
sbb
dec
dec
lds
imulb
push
pop
cmp
dec
ret
hlt
imul
inc
mov
lds
mov
mov
xchg
or
cmp
dec
int
addl
jp
pop
imul
jb
jb
add
cmpsl
mov
sarb
add
nop
ret
daa
stos
xchg
push
xor
lret
lods
mov
push
fistpll
adc
mov
scas
cs
jns
imul
pop
mov
sub
fdivrs
mov
scas
mov
xor
pop
in
jmp
mov
xchg
cmp
cltd
jbe
mov
dec
out
fists
movsb
cmp
and
and
add
in
cwtl
cmp
lcall
push
mov
pop
loopne
xchg
xchg
add
leave
arpl
inc
jnp
stos
inc
jle
das
repnz
outsl
fwait
push
insl
scas
loopne
imul
inc
sub
movsb
cmp
or
push
dec
fs
xchg
mov
into
sbb
sahf
ds
rorb
outsb
pusha
xor
fsubl
dec
xchg
jb
dec
movsb
test
out
adc
xor
aad
aaa
nop
push
leave
push
mov
cmp
frstor
mov
jp
orb
push
fwait
repnz
and
pop
inc
enter
sub
mov
mov
andl
mov
push
mov
aam
imul
lcall
adc
mulb
idivl
out
add
mov
fcomip
mov
lods
out
and
sbb
inc
loope
shlb
std
push
adc
in
iret
xchg
or
lcall
adc
out
add
xchg
and
pop
cwtl
fiaddl
repz
mov
aas
inc
dec
out
sbbb
mov
mov
pop
xor
call
or
inc
outsb
sbb
sbb
mov
mov
fdivs
aad
andl
mov
fistps
sub
xchg
push
adc
cs
add
addr16
xor
aaa
rorb
es
sbb
cmp
shrb
out
lret
mov
sub
and
push
frstor
dec
adc
outsl
lahf
call
sub
aam
dec
stos
daa
cmp
outsb
dec
xor
jge
shl
pop
daa
cmc
xor
push
sub
fisubrl
mov
insb
cpuid
imul
lods
mov
mov
rorl
and
ss
inc
adc
in
jg
pop
pop
xchg
dec
shll
add
mov
mov
xor
push
popf
enter
push
dec
jecxz
sub
das
aad
popa
fdivl
test
in
add
mov
and
or
pop
dec
icebp
sbb
out
jge
fdivrp
nop
adc
add
test
sub
sbb
daa
adc
cmp
insl
pop
lock
mov
ja
cwtl
int3
fistl
movsb
pop
xor
outsb
xchg
je
sub
iret
cmc
jle
jnp
push
fwait
push
mov
lcall
pop
adc
ret
add
xchg
lret
ds
mov
ret
pop
xor
jb
or
or
aad
mov
rorb
mov
push
out
push
mov
xchg
pop
ljmp
inc
mov
cmp
and
mov
dec
and
mov
mov
daa
insb
xor
and
xchg
or
hlt
iret
sbb
gs
and
mov
imul
adcl
jns
adc
jae
push
pop
mov
movsl
or
outsb
xor
xor
mov
lea
bswap
dec
hlt
shll
test
filds
das
cmp
or
xchg
cltd
cmp
jmp
inc
ljmp
mov
inc
jbe
je
adc
mov
pop
dec
scas
cmp
cmc
mov
js
or
cltd
cmpsl
cmp
push
mov
mov
and
fsubs
push
je
inc
rcrl
or
stc
in
icebp
daa
mov
call
and
pop
roll
fisubl
mov
bound
push
popf
push
mov
inc
jle
inc
xchg
mov
jg
or
sbb
or
adc
fs
arpl
int
pop
into
push
ror
mov
pushf
dec
and
lods
dec
int3
decb
popa
cmp
in
pop
sahf
mov
nop
insl
fldt
lcall
push
ljmp
cmc
adc
inc
and
fisubl
aam
cmp
subb
mov
sub
xlat
xor
jae
inc
sahf
pop
dec
add
sub
je
scas
and
je
inc
mov
push
mov
int3
arpl
pop
jmp
loope
and
push
popf
xchg
lock
dec
ret
jp
testb
adcl
mov
pop
movzwl
inc
cmp
repnz
test
push
loop
into
enter
dec
and
ja
daa
loop
sbb
decl
testb
sbb
leave
mov
dec
ss
mov
mov
xchg
dec
pop
sahf
fs
jnp
or
mov
inc
lcall
inc
fdivl
mov
lods
push
imul
lock
xor
add
adc
data16
mov
push
sahf
roll
inc
jle
stos
jle
mov
dec
cmpb
jmp
cmc
push
push
and
int3
push
jae
add
xchg
ret
jl
les
jg
jb
daa
mov
mov
and
fnstenv
dec
pop
rcll
mov
jbe
xor
std
xchg
push
inc
lahf
ss
fstpl
mov
mov
and
inc
lods
mov
jns
mov
mov
mov
push
call
sbb
outsl
testl
or
xor
or
push
sub
mov
mov
add
jb
fmuls
push
in
mov
mov
or
mov
pop
sbb
dec
fcom
xor
and
test
dec
popa
roll
push
out
arpl
jb
mov
fs
add
pop
rcrb
dec
fisubl
pop
sub
out
push
cmp
pop
xlat
les
mov
mov
popa
add
outsl
jne
and
or
jecxz
mov
imul
rolb
push
movsl
xchg
mov
fldt
sbbl
int
and
push
fsubrl
repnz
dec
inc
dec
arpl
jnp
sahf
push
mov
fisttpll
lcall
pop
adc
clc
mov
out
cmp
repz
cmp
notb
roll
addl
loop
push
insl
sbb
jbe
adc
or
cmp
imul
xor
xor
add
mov
roll
xor
dec
jne
pop
cmpsl
imul
lret
sti
aaa
jmp
loope
add
lahf
push
mov
cmp
pop
and
xchg
pop
repz
add
push
repnz
xrelease
enter
or
mov
mov
mov
mov
call
loope
test
cmpsl
mov
pop
dec
ror
mov
xchg
mov
push
ret
jge
push
les
insl
shrb
ret
pushf
xchg
enter
lods
cmc
or
sub
fistl
dec
lret
bound
or
cmpl
push
xchg
rcl
daa
aad
sub
idivl
fildl
pop
add
test
scas
cmc
mov
ret
test
cli
inc
dec
add
enter
popf
cmp
mov
arpl
xor
mov
push
xchg
popa
enter
pop
ret
push
cwtl
stos
sbb
xor
mov
in
add
lods
push
call
sbb
jne
lret
fists
xor
mov
or
lods
cmpsb
or
dec
aaa
mov
pop
dec
loopne
cltd
or
mov
ret
hlt
hlt
xor
push
mov
in
aas
mov
ret
outsl
loop
mov
imulb
xor
mov
mov
lock
in
dec
cmp
mov
cmpsl
xor
dec
divb
inc
pop
int
cmp
enter
stos
scas
enter
mov
jne
jno
arpl
test
repz
call
and
hlt
jbe
jge
and
sbb
inc
mov
push
add
lds
arpl
int
jbe
mov
adc
cmpl
push
mov
push
cmp
dec
adcb
xor
mov
jnp
mov
fs
sbb
iret
cmpsl
cmp
fptan
leave
jb
addr16
xchg
sbb
pop
jle
fdivrs
jmp
jmp
push
jnp
divl
jo
mov
mov
add
call
and
xlat
sahf
int
cli
add
jns
xor
lock
lea
aam
pop
ss
mov
sbb
add
mov
mov
cmpsb
push
stc
mov
dec
jo
and
mov
lods
popa
je
dec
xor
push
mov
les
loope
cmp
bound
jae
pop
loop
jmp
pop
mov
pop
jb
pop
repnz
cmp
mov
imul
xchg
mov
jbe
dec
fdivl
std
xchg
or
fldenv
ja
sbb
adc
pushf
arpl
test
call
xchg
xor
insb
fidivl
inc
dec
push
dec
stos
mov
stos
jg
fidivs
mov
mov
les
mov
dec
scas
fwait
aad
out
and
insl
add
sbb
jbe
aaa
mov
stc
cmpsl
mov
push
dec
jnp
push
push
out
add
cmp
inc
push
add
popa
cmpsl
fidivl
call
stc
lret
or
xchg
std
xchg
arpl
fisubrl
popf
popa
clc
into
cmp
maxps
mov
push
or
in
add
push
and
mov
ret
mov
clc
mov
mov
sub
repnz
decb
ljmp
xor
xor
fs
or
faddl
or
aam
and
testb
mov
pop
cmp
pop
test
adc
adc
xchg
repnz
call
add
shlb
lret
push
sbb
out
xchg
sbb
add
sub
and
add
lods
pusha
iret
das
push
xor
loope
fadds
mov
dec
sbb
shlb
lea
jle
out
cld
add
inc
adc
rclb
test
jne
sbb
mov
fisubrs
mov
lret
push
fdivrp
addr16
mov
insb
ror
sahf
mov
adc
adc
jbe
pop
scas
repnz
loopne
dec
mov
push
mov
cmp
mov
imul
mov
and
andb
lock
scas
ja
pop
cwtl
sub
lret
call
push
dec
dec
mov
test
loopne
adc
jecxz
fnsave
pop
push
mov
push
aad
push
out
mov
test
ret
cmp
inc
and
in
dec
xchg
sub
enter
xor
push
mov
pop
sahf
mov
fisubl
or
mov
frstor
fildll
sbb
movb
pop
dec
mov
add
rorb
adcl
xchg
cmp
xor
popf
lods
xor
subb
movsb
mov
xor
push
mov
fwait
shlb
daa
xor
and
sbb
xor
inc
inc
push
out
out
cmc
xchg
test
std
mov
jnp
out
mov
or
cld
jnp
shrb
ret
sub
popf
sbb
cmp
shl
jnp
je
inc
or
and
and
push
or
mov
cltd
jno
dec
bnd
mov
xlat
popa
mov
fbstp
dec
cmc
cld
sbbb
fwait
dec
call
lret
jge
aad
sti
or
pop
adc
dec
ss
mov
clc
int3
push
fdivs
ss
movsb
xchg
and
sub
shr
ljmp
imul
jl
stos
cmp
sbb
and
filds
jecxz
testl
push
dec
sub
sbb
stc
dec
aaa
fidivrs
aad
push
lahf
pop
adc
in
jp
dec
repz
bound
bound
iret
jne
sub
mov
inc
push
push
cmpsl
add
mov
inc
into
dec
sub
mov
es
popa
in
mov
jno
lahf
jne
arpl
pusha
mov
lods
lret
dec
sbb
cmc
in
int
les
inc
inc
push
pop
hlt
pop
bound
in
sbb
cmp
sub
push
mov
xchg
mov
dec
mov
adc
test
call
je
lret
or
adc
and
xor
test
subl
add
dec
out
jo
int
js
adc
xor
mov
cmp
gs
xor
arpl
js
xor
mov
bound
push
hlt
fs
int3
fdivrs
ljmp
fucomp
cmp
jl
orb
pop
shll
mulb
mov
lret
shlb
out
lods
test
sarl
xchg
sub
movb
adc
lods
repz
add
xor
mov
sub
and
scas
fstps
into
cmpl
imul
jmp
stos
imul
dec
mov
mov
xchg
enter
or
and
popf
fimull
and
int3
cs
push
insb
out
jmp
add
imul
mov
add
sbb
icebp
dec
leave
lods
mov
mov
mov
or
mov
test
xchg
add
inc
shll
add
sbb
sub
std
and
dec
fwait
movsb
test
sar
dec
in
jl
and
sub
adc
aad
ds
dec
test
pop
xor
fs
cmp
cld
jge
adc
flds
jnp
cmp
mov
sar
das
lahf
insb
ficoms
shlb
iret
xor
cmp
lock
push
or
cmpb
loop
test
add
rol
push
push
std
push
js
pop
sar
adc
sub
pop
out
ss
lods
rclb
daa
push
leave
out
xchg
mov
fnsave
jo
lret
cld
push
test
enter
shl
push
lock
fsts
leave
xchg
cmp
das
push
push
imul
dec
jg
idivb
jle
inc
sub
cmp
jl
cmpsl
and
lds
mov
cmpsb
mov
cmp
mov
inc
arpl
lret
inc
mov
mov
mov
jp
mov
popa
xchg
and
test
outsl
sbb
dec
pop
dec
jae
push
movsl
adc
repz
mov
popa
clc
sub
dec
and
lahf
lcall
xchg
int3
fiadds
mov
je
mov
and
adc
inc
iret
mov
shlb
ja
ja
sbb
cmp
insb
les
xor
icebp
pushf
lods
adc
jmp
sbb
shll
jle
dec
in
mov
jno
pushf
xchg
repz
es
hlt
mov
popa
insb
in
lds
or
xlat
jp
and
scas
pop
repnz
or
lock
pop
mov
dec
repz
pusha
rcrb
sbb
or
xor
or
mov
inc
push
hlt
jb
dec
mov
jbe
lods
push
mov
mov
negb
mov
mov
adc
sub
jmp
sub
jp
sub
add
jae
cltd
aam
xchg
outsb
add
cmp
mov
sbb
aad
jg
stos
inc
outsb
clc
push
pop
lods
or
fstpt
into
out
call
or
sahf
into
fadd
push
imul
and
and
mov
stc
mov
sti
mov
rolb
fisttpl
push
in
repz
leave
movsb
add
je
enter
loopne
adc
push
out
xor
cmp
or
cli
and
call
mov
pop
pop
lock
adc
leave
pusha
mov
cmpsb
mov
and
inc
pop
cmpsb
insl
movsl
cmp
enter
std
cmp
scas
mov
push
imul
xchg
xchg
lcall
xchg
mov
xcrypt-cbc
cmpsl
adc
mov
dec
mov
push
xchg
call
fs
imul
inc
pop
jb
jecxz
mov
pushf
add
clc
mov
cmp
add
std
sbb
add
dec
loop
test
pop
xchg
adc
and
int
jnp
sbb
rolb
inc
repz
and
into
adc
divl
push
sbb
mov
adc
or
cmp
cli
repz
mov
sti
in
stos
mov
or
jge
subl
sbb
dec
shrb
xchg
xchg
push
ret
rcrb
mov
fnstcw
sbb
notb
pop
jmp
mov
rcrb
shll
cmpsb
popf
xor
or
mov
faddl
add
dec
pop
sub
out
and
lock
test
fimuls
mov
mov
push
scas
repnz
jg
dec
lock
inc
cmc
mov
mov
push
jo
sarb
dec
mov
cmovbe
pop
xor
push
mov
mov
jne
loopne
push
cli
jp
jbe
arpl
xor
aad
lahf
mov
xchg
mov
dec
and
sub
and
clc
fcomi
out
sub
cmpb
lds
test
icebp
cmc
cmpsb
fucomip
sub
or
dec
leave
out
push
cmp
outsb
je
sarl
ficomps
mov
rcrb
icebp
xchg
cmp
pusha
call
or
jg
add
cli
ds
push
mov
or
cmpsl
fbstp
rcll
ja
push
cmp
mov
outsb
ja
push
ffree
xor
arpl
ds
mov
into
subl
add
dec
adc
and
flds
add
dec
inc
and
dec
ret
or
mov
loope
sub
scas
sub
test
out
aam
xchg
out
out
jne
aad
and
pop
in
push
ficompl
mov
xchg
mov
inc
dec
cmp
jl
addr16
adc
xchg
cs
pop
in
or
lcall
mov
out
mov
pop
or
lret
clc
imull
outsb
cmp
push
inc
sti
dec
push
sbb
lret
inc
jbe
dec
cmpsb
xor
iret
movsb
pop
out
out
jne
jno
jne
add
cmp
pop
jbe
lods
popf
ja
inc
fxch
movsb
mov
rol
inc
push
pop
aaa
stos
dec
lods
lret
cmp
call
popf
roll
ja
mov
fisubl
es
pop
or
nop
stos
fucom
xor
mov
fstpt
adcl
stos
lock
pop
and
adc
ret
clc
jae
movsl
dec
loopne
pop
push
dec
lret
jae
fidivrs
jo
jecxz
cmpsb
add
bound
inc
jmp
jb
fiadds
sti
adc
aaa
cmp
jne
push
push
dec
sub
dec
and
jbe
loope
push
test
push
movsl
movsb
fisttpll
dec
push
sub
daa
ret
jnp
add
loopne
cmp
movsb
jno
dec
cmpsl
or
mov
insl
hlt
sub
pop
shrl
mov
pop
sub
loop
je
pop
pop
sbb
sbb
rorl
and
add
add
xor
les
fisttpl
cmpsb
xor
jne
fucomip
push
dec
pop
sti
push
xchg
lea
xor
test
movsb
adc
pop
std
pop
jge
cmp
insl
add
clc
mov
insl
stos
or
ret
xor
and
testb
and
push
test
data16
sub
adc
loop
or
fbstp
jnp
sbb
test
jb
lahf
pop
sub
sub
pop
loop
jmp
cs
mov
cltd
iret
and
nop
ss
xor
pop
cwtl
or
sbb
dec
test
mov
mov
sub
fmul
pop
mov
insb
xorl
fnstenv
sub
xor
movsl
enter
add
cmp
jecxz
mov
out
pop
push
call
imul
movsl
dec
in
mov
adc
and
cmpsl
les
fnstcw
or
push
inc
test
arpl
push
adc
test
daa
lret
push
fwait
xor
iret
outsb
lcall
test
push
in
in
pusha
xor
aas
add
std
mov
cwtl
dec
popaw
jg
nop
arpl
dec
cltd
xor
xor
mov
notb
jnp
sbb
push
lods
adc
stc
xchg
popa
pmaddwd
idiv
jb
imul
xlat
mov
cmp
ljmp
in
inc
xchg
cmp
push
cmp
push
add
push
xor
dec
outsb
push
pop
dec
pop
aas
cmc
movsl
int3
mov
lret
xor
mov
data16
pop
or
jb
mov
nop
jae
add
bnd
dec
or
imul
and
fsubrp
sbb
jns
inc
outsl
outsb
sahf
lcall
mov
mov
mov
jle
cmp
xor
dec
arpl
dec
mov
sub
in
sar
dec
add
mov
push
xor
xchg
and
xchg
xchg
jecxz
jecxz
clc
and
lds
sub
stos
repz
dec
sub
sub
inc
xchg
stc
ror
int3
mov
mov
add
pop
jg
cwtl
adc
ss
cltd
arpl
leave
adc
sbb
popl
nop
push
sub
stc
sub
roll
cmpsb
imul
jae
jne
daa
mov
push
mov
rcr
jl
xor
lcall
js
es
mov
jmp
xchg
sbb
mov
jge
popf
cmp
push
fs
xor
cmpl
inc
data16
loop
sbb
sbb
pop
cmc
subl
loope
sub
sbb
mov
adc
fwait
push
jns
xchg
loopne
addr16
cwtl
decb
and
xor
mov
sub
das
les
or
sub
fists
mov
xor
imulb
xchg
cs
adc
call
fiaddl
cwtl
jge
in
or
and
ja
gs
loopne
push
mov
repz
and
insl
xchg
xchg
mov
sub
pushf
push
jmp
push
ljmp
jno
icebp
inc
ja
incl
js
iret
xor
adc
push
inc
mov
jmp
adc
add
adc
xlat
mov
mov
inc
out
insb
mov
test
iret
mov
rcrl
inc
pusha
cwtl
mov
lea
sub
xor
cmp
test
icebp
fisttpll
cmpsb
jno
cmc
lret
xor
in
inc
inc
sub
add
es
mov
sbb
rorb
cmp
pop
icebp
stos
push
cmp
mov
inc
inc
stos
call
cld
sbbl
push
pop
lock
xor
imul
mov
cmpsb
cld
outsb
mov
push
sbb
fldpi
in
fdivs
jbe
xchg
sub
adc
mov
and
inc
cmc
lahf
int
shlb
es
jecxz
loopne
push
or
inc
mov
dec
or
stc
mov
and
inc
and
mov
les
out
cli
out
jmp
push
pop
push
fsubs
out
dec
sbb
mov
xor
sbb
jno
sbb
mov
int3
test
scas
aam
iret
shll
pause
repnz
push
push
leave
pop
insl
push
stc
scas
or
cmp
dec
ss
subl
mov
xor
outsb
cmp
pop
and
jb
mov
iret
repz
outsl
and
lock
in
shl
add
sti
outsb
dec
and
adc
lock
out
sahf
xor
nop
jmp
sub
mov
inc
cmp
jb
cwtl
mov
pop
fwait
cmpsb
cmp
dec
xchg
jge,pn
xchg
adc
xchg
and
imul
mov
xor
arpl
pop
cli
pop
and
cmp
lea
push
inc
jecxz
dec
pop
into
add
das
aaa
clc
xorb
xchg
sub
dec
adc
inc
imul
cmpsl
aam
in
and
stc
pop
les
ds
in
jg
fmul
sub
sub
popf
or
add
pop
push
push
jmp
sbb
inc
fsubr
sub
pop
into
fsubr
sti
dec
orl
arpl
lahf
xor
adc
push
add
adc
adcb
push
lods
xchg
ds
cmp
cmpsl
mov
fld
mov
mov
movsb
icebp
jge
dec
push
mov
jbe
fdiv
add
xchg
mov
adc
dec
and
daa
div
xchg
mov
loope
inc
cmpsl
pop
repz
das
jle
cmp
mov
aam
sahf
test
sbb
jg
popa
or
pop
jae
pop
dec
fbstp
pop
push
push
sti
idiv
repz
lods
and
xchg
pmaxub
push
lea
or
int3
and
ret
push
ds
outsb
aad
fdivl
cld
or
jae
setg
lods
sub
cwtl
inc
xor
arpl
sub
xchg
sub
push
jmp
inc
rol
shrb
bswap
orl
sti
xor
or
mov
inc
mov
jns
clc
add
jns
xchg
insl
dec
cs
dec
or
hlt
sbb
mov
push
cmp
dec
mov
add
lcall
sbb
mov
adcb
push
mov
loope
mov
ja
jne
lret
rol
addr16
push
dec
pop
ret
push
cmp
sarl
mov
or
shl
cli
adc
out
cli
rol
jns
mov
sbb
jg
mov
out
xor
dec
addr16
jl
popa
xor
push
rcr
out
add
in
test
and
fucomp
lock
xchg
add
cs
mov
cmp
sahf
jno
mov
sbb
and
jne
loop
cwtl
adc
cwtl
xcrypt-cbc
cmpsl
aam
je
mulb
repnz
jno
mov
adc
out
test
cmp
cmp
adc
repnz
clc
push
mov
add
mov
add
iret
push
dec
filds
leave
add
mov
cs
pop
sub
cmp
test
lods
popa
mov
xchg
int
ret
dec
adc
ja
mov
push
push
jb
movsb
push
pushf
es
ret
test
and
pop
das
or
insb
inc
stos
add
in
mov
repz
xchg
in
shll
sub
in
ret
mov
clc
push
les
popf
clc
xor
push
sub
lret
mov
lret
shrb
xchg
call
call
mov
adc
jne
aam
js
nop
pop
inc
insb
mov
mov
rcrl
mov
or
nop
dec
fistpll
popf
and
movsl
ja
cli
cmp
jb
fsubrl
fnstsw
dec
std
pop
push
movsl
dec
adc
sbb
xor
adc
sbb
leave
les
pop
push
add
cs
pusha
mov
sbb
sub
cmp
lret
sti
push
imul
push
lock
test
sbb
cmp
push
data16
jg
arpl
push
into
loopne
leave
push
imul
and
pop
mov
test
in
dec
leave
cli
sub
in
xor
in
mov
mov
jmp
mov
push
mov
jo
inc
push
test
out
mov
jns
bnd
sbb
xor
scas
inc
jbe
insb
adc
push
out
cmp
jbe
mov
push
pop
sbb
push
sub
or
ss
loopne
xor
add
rcrb
inc
les
rcll
mov
int
imul
cmpsl
adc
and
aaa
xor
inc
xchg
int
icebp
mov
fwait
sti
test
cmpsl
nop
imul
out
dec
shl
filds
aad
popf
xor
seto
sbb
cltd
jle
int3
dec
sahf
sbb
mov
adc
add
imul
inc
inc
into
mov
and
cmp
xchg
scas
mov
jmp
cmp
insb
jp
fidivrs
int
fisubrl
cwtl
xor
xchg
mov
inc
mov
cmc
adc
mov
jno
mov
iret
dec
lock
and
fcoml
in
ljmp
mov
xor
add
fbld
ret
and
repz
repz
mov
mov
sbb
aad
sub
mov
dec
lret
inc
fstpl
aad
jp
sbb
out
or
push
inc
jl
adc
sbbl
mov
add
dec
add
sub
pop
pop
jl
and
outsb
cmpsb
mov
std
into
mov
or
ss
push
sbb
ljmp
call
push
cmp
movd
adc
pusha
jnp
jo
test
xor
ljmp
mov
ljmp
movsb
fdivl
fcmovne
xor
in
subl
or
mov
popa
insl
mov
ret
mov
xchg
data16
push
dec
cltd
gs
shufps
outsb
fcoml
xchg
push
push
cmc
mov
lds
pop
xor
mov
inc
imul
jns
enter
mov
sub
popa
jb
adc
subb
mov
mov
insb
rcrl
xchg
imul
cmp
push
jle
add
aaa
push
lret
push
in
xchg
sbb
lahf
inc
sub
and
movsb
sub
xorb
pop
mov
xchg
daa
pop
pop
xor
lods
rcrb
add
dec
arpl
imul
movsl
les
mov
xchg
lahf
inc
fs
fstpt
pop
push
mov
xor
sahf
inc
sub
ficoml
in
psubd
adc
addr16
mov
popf
out
push
dec
pop
outsl
jns
push
stos
mov
pop
aas
dec
xlat
sbb
loope
cmp
adc
push
dec
mov
pop
repnz
je
lock
xchg
icebp
cmpsb
inc
push
jmp
rolb
lcall
in
mov
in
fiaddl
sbbb
jne
es
dec
dec
cmp
mov
xchg
jecxz
lahf
pop
jnp
dec
loopne
xchg
imul
dec
andb
fistps
xorb
cltd
negl
cmp
sti
sbb
ret
cmpsl
dec
or
insl
inc
add
sbb
rolb
data16
or
mov
bound
fnstsw
pop
adc
lahf
xchg
imul
pop
icebp
enter
adc
scas
inc
inc
jns
mov
ficomps
stos
jae
mov
jecxz
mov
ja
movsb
and
push
xchg
mov
push
sahf
jne
mov
xor
inc
into
mov
mov
cmpsb
inc
and
cs
insl
inc
xlat
pop
pop
les
fisttpll
sub
sbb
ljmp
mov
mov
loopne
testl
jb
gs
cld
ja
cmp
xchg
call
inc
adc
movsl
movd
sbb
inc
fdiv
cmp
lahf
add
out
and
bound
adc
inc
fisttpl
leave
add
inc
jnp
ret
lods
gs
lahf
int
fildll
dec
out
orl
push
mov
mov
movsb
and
imul
jecxz
js
sub
repz
adc
mov
data16
adc
icebp
lret
cmpsl
jnp
ja
pop
imul
sub
jmp
push
jp
std
pop
fwait
add
pusha
fsts
push
sub
sbb
xor
stc
loop
xchg
unpckhps
sbb
pop
pop
call
pop
sub
sbbb
push
inc
mov
insb
lahf
xor
out
daa
pop
or
xor
shlb
shr
or
pop
mov
add
cmp
pop
xchg
lcall
lea
fwait
xor
cmp
popf
rorl
mov
xchg
das
jl
sbb
add
push
out
mov
int
jbe
sbbl
xchg
sub
imul
cmp
pusha
andl
mov
inc
sub
ljmp
insl
push
shrl
std
and
lds
jl
ja
xor
cmp
xlat
outsb
pop
pop
ja
aad
push
cld
jno
imul
pop
icebp
xor
stc
sbb
and
xor
fmuls
pop
cmp
fdivrl
ss
lea
adc
bswap
arpl
cs
data16
xor
movl
popf
fcom
dec
loop
cmp
mov
fdivs
hlt
mov
xchg
jmp
jl
mov
shll
mov
xchg
cli
ss
sub
sti
push
inc
add
fnstenv
sbb
inc
popf
cmp
xchg
xchg
pop
int
inc
int3
pop
out
mov
dec
imul
leave
icebp
jns
fs
lods
and
or
xor
addr16
sbb
pushf
inc
out
cltd
xor
hlt
mov
add
es
cltd
push
jae
pushf
int3
lock
jbe
out
roll
cmp
jge
mov
mov
dec
js
stc
shrl
sahf
loop
push
cmp
cmp
jle
mov
mov
sub
repnz
lods
gs
fidivl
in
stos
push
adc
dec
jns
fsubl
test
rcrb
int3
mov
xor
rorl
fdivl
push
push
shl
add
mov
enter
ret
mov
fld
test
cmpsl
sbb
paddq
or
cs
out
jmp
push
push
add
inc
stos
notb
xchg
cmp
jle
push
mov
gs
fsubl
cmp
push
sbb
mov
jne
gs
push
pop
int
lods
xor
nop
xor
movsl
cwtl
push
int
aad
cmp
and
inc
or
call
in
lock
cwtl
out
lea
nop
cltd
xor
cmp
js
in
cmc
pop
push
sbb
lods
pop
push
cmp
mov
rorl
pop
jnp
jg
insb
sub
in
in
push
sbb
imul
aad
and
icebp
imulb
daa
popa
jbe
inc
or
into
pop
ljmp
mov
jnp
out
push
lods
inc
test
lret
pop
pop
cltd
jns
cli
and
aas
roll
xor
clc
popa
jl
andl
pop
out
das
lcall
clc
sub
loop
ss
mov
xchg
stc
mov
jns
push
sbbl
mov
mov
and
xor
xchg
int3
sub
aad
dec
cmp
sbb
outsl
into
and
inc
jge
fdivs
ret
js
xchg
add
xchg
dec
lahf
mov
cwtl
and
add
mov
dec
fistpll
out
notl
cwtl
jnp
leave
insl
test
cmp
add
and
ss
cmpsb
cmp
dec
inc
xchg
xor
in
pop
lock
mov
scas
insb
mov
push
out
into
gs
call
in
xchg
aad
or
negl
adc
nop
and
sahf
push
jnp
aaa
jb
gs
or
pop
dec
insl
or
mov
fildl
mov
push
inc
mov
xchg
in
dec
mov
xor
fnstenv
xor
out
cli
testl
aaa
jbe
cld
mov
pop
mov
mov
push
loopne
test
rorl
cli
and
cmc
cltd
adc
fldpi
push
cmpsb
cmp
pop
push
cmc
insl
out
sbb
mov
cmp
sbb
sbb
jno
and
cmp
adc
jae
test
xchg
adc
xchg
adc
repnz
fwait
jae
lock
cmp
and
sbb
mov
push
mov
pop
imul
dec
fs
addr16
jbe
out
test
les
int
pop
mov
ljmp
mov
divb
push
fsubrp
xchg
cmp
mov
movsb
pop
out
adc
mov
stos
lock
mov
sub
sub
test
mov
lea
add
jns
enter
dec
cmpsl
push
lret
enter
or
adc
push
fldl2t
jp
pop
push
sbb
test
sub
mov
stc
pop
addr16
cmp
aad
pop
orl
fists
mov
cmp
cmpb
aad
shlb
repnz
repnz
scas
inc
mov
inc
sub
xchg
out
in
dec
int3
xchg
mov
out
push
lds
sub
out
push
mov
bound
gs
or
das
insb
sub
sub
gs
xor
movsb
rclb
imul
je
scas
mov
pop
fadd
arpl
mov
add
pop
add
cmp
xchg
push
push
out
xchg
add
pop
mov
movsl
sub
jmp
sub
cmpsb
int
mov
lds
jns
pop
dec
xlat
outsb
cmp
cmp
xchg
sbb
testb
mov
mov
mov
cmp
out
sbb
adc
jb
pop
lahf
xchg
bnd
inc
and
adc
das
idiv
inc
cli
jp
movq
or
lock
testb
mov
xchg
sub
xor
push
mov
dec
enter
enter
imul
sub
int3
push
xchg
cmp
loop
sbb
repz
jns
add
xor
jne
dec
aaa
ss
sti
xchg
mov
pop
movzwl
std
movsl
xlat
cmc
jge
movsb
mov
das
fxch
in
push
xor
mov
aam
mov
jge
pusha
je
push
outsb
out
sbb
sti
pop
jmp
cmp
fmuls
mov
in
fwait
push
sub
sbb
mov
and
push
mov
stos
fldenv
sbb
mov
mov
vpminsw
xor
sub
mov
mov
inc
push
sub
sbb
leave
cmp
in
jmp
into
imul
push
push
sub
idiv
ret
xchg
xor
and
fsubrl
pop
daa
mov
push
rcll
leave
mov
push
pop
insb
dec
dec
nop
push
jns
fnstenv
inc
xchg
dec
pop
dec
addr16
sub
ja
mov
adc
xor
bound
addl
xor
cli
sbb
mov
dec
dec
add
out
lock
fistpl
push
fisttpll
push
dec
inc
dec
out
aad
or
xchg
mov
or
data16
stc
and
cltd
xor
cwtl
pop
fndisi(8087
mov
dec
ja
call
sti
xchg
scas
cmp
sub
sub
cs
loope
xchg
mull
orl
adc
jle
sbb
notl
cmc
cmpl
clc
bound
jp
iret
mov
inc
add
nop
push
sub
inc
daa
outsl
repnz
pop
fstpl
cmp
cmp
pop
es
fs
inc
xchg
ss
or
dec
fdivl
arpl
push
mov
and
icebp
jmp
cmp
nop
cld
xchg
lret
mov
ds
and
ret
xor
ja
pop
sbbl
in
jo
repz
stos
aad
mov
mov
pop
stos
fld
mov
out
jle
scas
les
fsubrp
cltd
mov
out
xor
and
lret
dec
shrb
rcl
shll
or
arpl
mov
nop
hlt
fimull
xchg
add
xchg
dec
bound
mov
cmp
out
repnz
jmp
sub
iret
jno
insl
cs
dec
loope
dec
call
xor
dec
mov
push
sarb
insb
imul
ja
mov
lock
test
cmp
push
sub
push
popf
sub
mov
test
aam
or
cmp
add
pop
lods
outsl
xchg
mov
outsl
mov
or
pop
jle
jbe
aad
pop
xor
cmc
ja
daa
cmpb
out
inc
sub
shll
jo
loope
aad
add
mov
into
subl
push
sub
pop
adc
xlat
xchg
test
adc
jne
cmpxchg
das
clc
shll
enter
sbb
ret
jo
mov
mov
mov
mov
xor
fstps
push
and
lds
imul
adc
inc
out
pop
sbb
sbb
pop
cli
test
mov
call
mov
push
sbb
ficomps
lahf
scas
clc
enter
data16
add
dec
lret
pop
cmp
jbe
mov
fbstp
into
sti
jmp
popa
sbb
cltd
out
mov
int
dec
adcb
mov
dec
iret
mov
and
lds
gs
fstpl
addr16
out
dec
add
daa
pop
cltd
stos
iret
cmp
int
jno
mov
lret
lcall
ja
jae
pop
mov
addr16
pop
aas
rcl
rcrl
dec
and
iret
or
pop
jbe
mov
add
push
rol
push
inc
push
dec
pop
inc
repnz
inc
adc
and
add
pop
rcrb
fadd
aad
insl
pop
pop
lods
cmp
daa
lahf
adc
dec
sub
repz
adc
or
mov
les
outsl
push
pop
jecxz
pop
out
imul
call
or
push
mov
mov
xor
orb
and
and
mov
push
xor
mov
jp
je
into
movsl
push
adc
inc
push
gs
add
mov
lahf
sub
insl
mov
mov
cmp
jne
dec
repz
xchg
push
lods
subl
dec
sbb
movsl
addr16
fwait
clc
mov
mov
mov
rcrl
fstpt
shlb
cmp
hlt
xchg
dec
test
push
mov
fildl
push
daa
shlb
loope
cmp
pop
adc
dec
in
leave
ret
jnp
mov
add
sub
shrl
pop
xchg
mov
sahf
rorl
xchg
cwtl
outsl
out
sbb
testb
jecxz
push
cmp
pop
mov
repz
insb
jg
in
arpl
sbb
fisttpll
imul
mov
shll
mov
cli
subl
pushw
jne
stos
movsb
or
mov
aad
or
dec
dec
xchg
fwait
scas
scas
in
mov
ror
lret
mov
pop
xchg
jns
ret
ds
xor
call
pusha
mov
jns
cmp
ds
cmpsb
pop
xchg
adc
add
jno
xor
jnp
ljmp
daa
fiadds
mov
aad
sbbl
call
xlat
cmp
mov
cmpsb
dec
pop
fmuls
repnz
push
sbb
pop
sbb
or
add
dec
jno
ljmp
jno
les
in
sub
inc
lret
out
jmp
enterw
adc
and
adc
lea
jae
jae
out
fs
test
add
ss
ds
jns
nop
daa
mov
mov
jg
ficompl
imul
pop
loopne
or
scas
jns
xor
cmc
add
jl
push
mov
mov
mov
dec
in
add
jmp
out
fwait
inc
popf
mov
push
and
ficomps
mov
mov
aam
ret
add
pop
xchg
stos
dec
pop
popl
xchg
and
pop
cmc
sub
scas
lret
sti
decl
pushf
scas
pop
lock
or
xor
bound
sub
call
imul
add
pop
ljmp
jno
andb
in
pop
iret
clc
mov
fsts
push
loopne
repz
xchg
jge
movsb
data16
outsb
pop
push
les
push
repz
cmp
pop
jns
icebp
mov
add
jecxz
and
std
inc
add
adc
mov
sbb
mov
repz
or
push
cmp
jl
push
leave
out
and
sbb
shll
test
fmull
sub
js
or
push
sub
movsb
pusha
adc
cmp
xchg
mov
adcl
xor
aad
fidivs
cli
loopne
sub
popf
or
stos
xchg
jno
mov
fistpl
or
js,pt
sub
mov
ja
pop
fdivl
or
and
test
mov
lahf
ja
call
stos
leave
outsl
mov
lock
bt
data16
dec
pop
mov
mov
stos
nop
insb
jp
iret
cmp
addb
dec
fs
and
mov
ret
pop
xor
jge
xchg
lahf
jmp
mov
mov
ret
mov
cmp
push
aad
sbb
pop
repz
xlat
out
popf
jp
popf
inc
jecxz
jnp
lcall
xor
les
or
loopne
out
inc
mov
int3
arpl
test
mov
jno
test
cmpsl
repz
inc
cmc
or
jecxz
fsubrl
sub
sub
hlt
or
and
pop
cmp
lea
mov
fstpt
inc
or
push
sti
aam
lock
arpl
pop
push
jnp
subl
push
std
xchg
addb
jbe
dec
loope
pop
xchg
repnz
mov
enter
mov
decb
mov
pop
sahf
fwait
push
pop
icebp
lods
and
push
sbb
pop
outsl
cld
sbbl
stos
fdivrl
lock
push
int
pop
iret
jae
daa
int
mov
inc
and
aam
pop
jmp
movsb
cmp
pop
lds
test
jge
mov
adcb
std
and
or
push
mov
inc
pop
lahf
mov
xlat
aaa
inc
icebp
idivl
and
or
aaa
clc
mov
pop
ss
mov
dec
xor
in
or
out
xor
mov
or
cltd
sub
imul
mov
cmp
fnsave
dec
inc
xchg
dec
outsl
lret
mov
ss
cwtl
sub
movsl
inc
xchg
push
lods
xor
idivb
pop
pop
repnz
aaa
rcrb
data16
mov
loopne
pushf
mov
ret
pop
jp
lret
cmp
bound
hlt
cmp
addl
fs
jmp
or
stc
jge
jmp
push
lret
dec
pop
jl
loop
scas
lahf
scas
call
dec
in
aas
sbb
pop
fdivp
rol
movsl
addr16
out
loope
arpl
or
cwtl
stos
add
fcomi
rcrb
rcll
in
add
dec
add
xchg
mov
jge
dec
imul
mov
cs
gs
mov
bound
mov
xchg
inc
push
xor
inc
push
adc
popa
jnp
lcall
xchg
push
jge
insb
sarl
dec
aaa
data16
fcmovnbe
mov
mov
loopne
adc
into
mov
push
addr16
daa
imul
push
mov
dec
out
stos
add
mov
cmp
enter
aas
in
sbb
mov
cmp
std
adc
mull
lds
jmp
mov
push
mov
in
xor
sbb
sbb
mov
adc
or
mov
and
outsb
out
mov
test
sub
mov
mov
mov
cmpsl
outsl
testl
xchg
dec
adc
pop
inc
pop
sbb
jne
lcall
mov
ret
pop
jno
aas
adc
mov
mov
or
and
push
call
dec
sti
sahf
push
stos
outsl
sub
pop
stos
inc
loopne
add
hlt
ret
mov
into
sbb
jg
or
fsubrs
scas
cmp
in
inc
fincstp
jae
jne
mov
push
insl
jge
dec
lods
inc
aad
sbb
or
or
mov
cmpsb
dec
pusha
filds
dec
scas
es
roll
xchg
sub
shl
pop
fs
cmpsb
dec
lds
cwtl
aas
jnp
sub
xor
cltd
push
test
cmp
sahf
xchg
sub
lods
daa
imul
hlt
lock
pop
push
cmpsb
jnp
cmc
outsb
cmp
imul
lahf
ret
dec
cltd
stos
repz
lret
add
push
or
call
cs
fidivrl
mulb
ljmp
into
sbb
pop
mov
push
xchg
sub
adc
mov
dec
jle
jl
pop
pop
fistl
loopne
and
jp
mov
push
and
pop
lods
pop
xor
jnp
dec
and
fwait
in
adc
or
push
movsl
aad
push
inc
push
xchg
xor
dec
daa
pop
or
outsl
jmp
add
test
aam
cmpsb
out
push
pop
out
or
xchg
cs
scas
push
jmp
daa
mov
mov
pop
xor
pop
push
jecxz
add
jecxz
stos
das
mov
pop
cltd
pop
sarb
pop
loope
insl
pop
jo
cmp
push
mov
testl
sbb
cwtl
stos
cmp
mov
jecxz
xor
sbb
loop
out
lods
xchg
sub
adc
adc
push
mov
lret
bound
into
gs
fs
xchg
add
test
icebp
cmp
rcll
inc
cmc
mov
jo
dec
loop
adc
mov
mov
add
mov
jmp
push
push
es
jmp
imul
enter
iret
push
enter
outsb
inc
fiadds
stos
xor
xchg
pushf
mov
negl
scas
shll
jecxz
int
in
inc
pop
pusha
push
push
mov
fcmovnb
inc
jno
sbb
xchg
lret
pusha
add
out
daa
iret
add
sbb
push
push
dec
add
in
fwait
outsl
cmpl
jp
and
arpl
inc
push
shll
mov
pop
js
fdivrl
roll
test
mov
fnstenv
ficoms
jbe
pop
sbb
leave
add
test
sub
sbb
mov
js
dec
xor
push
iret
movl
push
mov
aas
mov
push
cs
lods
add
pop
and
mov
pop
and
scas
inc
mov
in
mov
xor
mov
dec
mov
sbb
pop
inc
cli
pop
cmp
adc
cmp
mov
test
mov
loopne
pop
scas
aas
pop
outsb
in
xchg
stos
and
iret
in
add
jbe
data16
xchg
push
cmp
add
test
rorl
add
test
pop
imul
fnsave
aad
test
cs
out
pop
pop
mov
pop
pop
jbe
fs
and
push
fldcw
imul
mov
and
add
xor
fstp
or
cmp
jle
cmp
sbb
test
jbe
pop
xchg
push
loop
xchg
xchg
push
data16
andl
rorb
ret
mov
insb
and
push
xor
push
pop
jge
push
cmp
mov
jne
loope
or
rep
adc
into
cmp
add
inc
imul
and
inc
push
dec
pop
idivb
adc
shll
aaa
pop
xchg
in
xlat
inc
cmpb
jmp
or
daa
mov
xor
mov
enter
jne
leave
into
push
push
pop
cmp
xchg
adc
xor
fildl
stc
cmp
insl
sub
mov
pop
enter
sub
mov
cmpl
and
std
mov
and
imul
mov
jne
and
jge
das
lret
test
testb
in
pop
sub
fists
shl
and
stc
push
lods
mov
sbb
push
dec
mov
pop
or
mov
lret
cmpsb
testl
data16
test
cmc
dec
cmp
mov
xchg
or
rcrb
jmp
dec
dec
enter
repnz
jne
cmpsb
lods
ljmp
xchg
out
andb
test
lds
test
dec
in
shlb
jno
ja
aas
or
pop
lcall
xor
and
jecxz
mov
ds
repz
dec
lret
loopne
sub
hlt
movsb
xchg
scas
orb
ljmp
mov
jne
pusha
jno
mov
pop
add
ja
and
mov
fildll
mov
shll
lds
xchg
sub
or
clc
xor
vpsrld
or
daa
jae
pop
dec
in
in
cmp
sub
scas
mov
mov
out
arpl
mov
rol
jo
mov
add
test
mov
cmp
mov
lahf
sbb
lahf
mov
or
xor
xchg
arpl
bound
xchg
andl
mov
les
icebp
jno
pop
movsb
sbb
or
cmp
push
stc
dec
dec
mov
and
sbb
jmp
pop
pop
push
rcll
adc
add
pop
insl
xor
lret
add
mov
es
adc
xor
pusha
jecxz
dec
mov
sub
dec
add
ret
test
sub
frstor
push
ret
call
int
outsl
sbb
fbstp
cmp
adc
aaa
and
pushf
pop
jmp
aam
sahf
or
and
in
xchg
pop
loop
jne
xcrypt-ecb
cmpsl
iret
and
jns
scas
pop
sbb
cmp
inc
pushf
and
dec
loop
inc
pop
fdivl
stos
mov
lret
fcomip
lock
lret
mov
xor
lock
pop
aad
addb
fs
fsubl
push
inc
lea
ljmp
lea
mov
xchg
add
es
icebp
dec
push
push
mov
pop
out
into
gs
dec
cwtl
xor
jns
xor
jmp
shl
xlat
cmc
mov
mov
out
in
dec
jmp
out
inc
dec
mov
mov
mov
out
std
mov
bound
cmp
sbb
inc
xlat
xchg
lea
mov
mov
cmp
nop
lods
adc
outsb
adc
or
adc
sbb
ret
cs
mov
repnz
cmpsl
pop
stos
test
pusha
add
pop
mov
stos
test
stc
push
cmpsl
xrelease
xor
push
pop
in
cld
cmpl
mov
out
inc
pop
adc
inc
dec
mov
lahf
pop
xor
xchg
sbb
fimuls
push
or
mov
push
push
lret
ror
arpl
xchg
push
mov
sti
jo
inc
aaa
sbb
imul
test
test
or
and
cmp
push
fcomip
cmp
jg
loop
ficompl
call
adc
and
dec
fsts
bound
or
cmp
mov
and
sahf
repnz
arpl
xchg
iret
popf
push
sbb
jp
ja
pop
movsb
cmp
arpl
push
xchg
ret
cmpsl
insb
inc
popa
dec
lods
mov
dec
loope
xchg
notl
sbb
mov
lret
mov
stos
add
add
mov
test
imul
push
mov
mov
lods
cmp
es
xchg
lock
in
mov
jl
adc
movsb
xchg
xor
imul
inc
cltd
loopne
ja
cld
inc
xor
ljmp
test
jmp
sbb
and
sbb
in
rcrb
and
sbb
inc
scas
sahf
lods
jmp
ljmp
adc
popf
cmp
fistps
andb
lods
push
dec
in
stos
pop
ljmp
push
mov
mov
fidivrs
sbb
dec
inc
sbbl
push
xchg
call
stos
movsl
jl
shrb
pop
jge
pop
push
shlb
inc
loop
push
insb
in
sub
pop
in
xor
les
xor
mov
inc
pusha
mov
adc
and
movb
orl
stos
mov
pop
xor
or
xchg
repz
xor
and
clc
out
mov
mov
stos
mov
inc
mov
mov
mov
iret
jo
fidivrl
push
leave
lahf
jb
call
push
cwtl
add
das
imul
in
push
push
insb
les
shll
sarb
repz
imul
adc
shll
pop
out
addr16
sub
cs
inc
mov
mov
xchg
lock
mov
lea
loope
ficoms
mov
mov
scas
jmp
ficoml
ret
insl
add
mov
or
popf
add
fstpl
sbb
js
xchg
push
and
movsl
inc
cmp
aad
xchg
dec
mov
lahf
data16
mov
jbe
fnstsw
insl
orl
sbb
mov
cs
dec
fisubrs
jg
icebp
cmp
call
into
jecxz
iret
mov
cmpsl
mov
fidivrs
movups
adc
in
inc
xchg
negb
lcall
leave
jecxz
jle
fidivs
add
xlat
sbb
clc
dec
cwtl
mov
xchg
js
les
shl
sub
adc
rcr
pop
cmp
sbb
push
xchg
aas
cwtd
xlat
mov
fdivrl
enter
fadds
and
incl
je
sbb
adc
repz
ja
sub
orl
jp
pop
pushf
shll
sti
or
ret
clc
and
mov
jmp
dec
test
pop
inc
out
fldt
movsl
lds
loop
cwtl
std
pop
out
add
imul
aaa
adc
out
aaa
jb
je
test
stos
cmp
or
lret
cs
sahf
data16
xor
jno
mov
jecxz
es
subl
sub
xor
lcall
and
call
gs
dec
mov
add
shll
and
bound
lret
movsb
or
imul
pop
or
push
adc
mov
pop
outsl
push
out
shll
cld
hlt
cmp
and
add
ss
fsts
mov
add
lock
dec
icebp
or
in
insb
out
mov
lds
jmp
addl
test
mov
lods
mov
dec
jmp
inc
loop
int3
lds
into
cmp
xchg
inc
xchg
push
ljmp
pop
lds
and
cmp
jae
mull
sbb
lahf
subb
mov
jmp
xor
inc
sub
lock
inc
negl
out
push
vcvtss2sd
test
rol
push
nop
ss
dec
iret
rclb
cmpsl
fisttps
loop
jae
shrb
dec
mov
pushf
push
cmp
repz
out
push
lahf
outsl
daa
rcrl
mov
cli
fnstenv
jmp
rorb
testl
mov
jo
aas
push
lahf
arpl
pop
fnstcw
xchg
mov
mov
push
push
mov
sti
or
sbb
jle
adc
sbb
cmp
and
outsb
push
mov
jmp
int
int3
fidivrl
push
mov
call
mov
sahf
mov
add
outsb
iret
lods
jo
lcall
ljmp
dec
pop
nop
jge
jge
mov
fistps
roll
cmpb
mov
lret
cld
mov
and
frstor
lret
or
mov
sbbb
jecxz
addr16
push
stos
push
xor
cli
cmp
subl
sti
add
jae
or
xchg
shlb
adc
pop
sub
fwait
es
je
andl
incb
inc
push
fildll
add
dec
shrl
pop
xor
rorb
call
ss
mov
outsb
and
sub
imul
iret
ret
into
nop
mov
xor
in
or
pop
incb
fistpll
push
in
test
shll
cmp
mov
loope
xor
shll
mov
ret
push
in
jg
mov
js
je
push
cs
clc
fsubrl
inc
push
mov
adc
sbb
mov
xchg
std
xchg
xchg
lret
sbb
jae
and
push
into
sbb
or
jns
push
popf
ja
std
fdivrl
xor
nop
inc
test
and
fidivrs
push
dec
inc
fsubrl
mov
ret
hlt
jge
sub
mov
pop
lods
ret
push
jp
mov
jne
push
bound
fdivs
ljmp
movsl
fidivrl
or
rcrl
je
ljmp
insb
mov
push
outsl
add
jg
and
stos
inc
js
testb
dec
test
push
push
jbe
subl
sbb
ror
pop
xor
mov
cmpsl
xor
mov
cltd
test
lds
insl
sbb
rorb
add
xchg
mov
lods
lods
xor
add
enter
adc
cmp
dec
imul
movsl
cltd
scas
loope
pop
sbb
sub
subb
mov
jbe
sarb
cmp
cmp
sub
mov
pop
repnz
lds
loope
shl
mov
xchg
scas
inc
ret
movsl
mov
mov
mov
pop
loope
mov
mov
outsb
push
int3
ret
in
std
out
push
and
mov
inc
mov
outsb
sbb
lea
xchg
push
outsl
pop
ss
xor
jno
add
jae
lea
mov
loop
call
inc
movl
sbb
out
inc
cwtl
stc
fsubl
xchg
sbb
mov
orb
das
es
scas
aas
xor
or
add
sbb
jg
in
sbb
mov
mov
mov
mov
enter
cmp
push
dec
sahf
sbb
mov
das
addr16
cmpl
mov
and
ret
jmp
xor
jae
inc
cmp
pop
fwait
jp
push
les
ret
jo
fnstcw
dec
or
movsl
cmp
and
xor
aas
xchg
jg
hlt
mov
in
js
mov
and
fdivrp
enter
sub
xchg
pop
jge
das
mov
movsb
inc
clc
cmp
cmpsl
and
outsl
cli
fdivl
push
push
lcall
push
jmp
xchg
gs
sti
push
lret
add
fcoms
pop
dec
push
xchg
sbb
pop
and
aaa
out
dec
mov
mov
cmp
mulb
scas
fisubrl
add
sti
push
jp
jnp
incl
in
test
mov
sub
inc
mov
leave
fisubs
jecxz
addl
outsl
mov
int3
xor
push
jmp
mov
negb
nop
cmpsb
sbb
push
inc
ret
movsb
mov
frstor
inc
ficoms
loop
loope
sbb
xchg
mov
dec
fs
fnstsw
ds
and
xor
jg
fnsetpm(287
ret
mov
in
jns
pop
je
pop
repz
stc
dec
inc
inc
mov
scas
mov
sub
imul
dec
outsb
sbb
sbb
sub
cli
dec
dec
jmp
cmp
ret
dec
or
sbb
je
rol
mov
push
sbb
ljmp
adc
aas
inc
adc
call
addr16
fcmovne
gs
xor
mov
addr16
imul
inc
lea
xlat
cmp
jg
aaa
xor
push
mov
aas
sti
xacquire
push
cmpsl
loope
push
in
out
test
push
rcr
nop
xlat
add
sub
add
lahf
hlt
filds
mov
sub
adc
jb
mul
and
call
cmp
and
aam
mov
and
pop
repnz
inc
in
inc
push
movsb
mov
push
fs
fnsave
mov
roll
ds
fs
xlat
ficomps
push
adc
xchg
loop
sub
dec
imul
iret
push
jmp
ds
cmovge
mov
addr16
aam
int
xlat
dec
cmp
jge
insb
cs
sbb
xchg
ret
fstps
fisubrs
fldenv
mov
lea
mov
push
or
mov
ret
or
test
lcall
clc
inc
inc
fidivrl
stos
mov
fwait
add
mov
mov
lods
nop
push
cmp
cmp
add
xor
lods
mov
xchg
aad
add
push
ss
cmp
hlt
movl
ficompl
xor
mov
push
mov
lea
movsb
inc
repnz
add
xchg
xchg
dec
in
mov
fadd
mov
insl
int
adc
jle
or
scas
inc
icebp
das
cwtl
stos
pusha
mov
fisttps
rorl
push
push
xchg
call
and
fst
pop
fildl
cmp
cld
movsl
mov
cli
insl
lods
aad
pop
out
int
adc
shlb
jnp
mov
fsubrs
inc
or
lahf
hlt
sahf
sub
pop
stos
mov
aas
push
jnp
mov
mov
sub
xor
sbb
stos
lods
pop
fpatan
cmp
mov
ss
mov
pushf
xor
jb
dec
xchg
or
js
lcall
out
pop
pushf
jecxz
in
xor
and
roll
inc
jmp
call
add
cmpl
add
outsb
mov
jns
mov
int3
inc
sub
in
in
inc
cli
add
jmp
jmp
mov
fdivp
dec
fbld
lds
iret
sub
pop
lock
ljmp
pop
mov
outsb
aad
mov
test
mov
test
stmxcsr
mov
push
hlt
rorl
sarl
dec
insl
mov
inc
add
cmp
adc
iret
mov
inc
mov
inc
sbb
jb
mov
sub
addb
mov
push
test
ja
aas
shlb
cld
call
ja
out
sahf
cmp
orl
andb
int
mov
dec
ss
ds
xchg
xchg
int3
mov
es
test
std
cltd
int3
lods
pop
xor
in
xchg
sub
jp
mov
rcrb
dec
xchg
clc
ja
bound
lret
popf
addb
sbb
movsl
xchg
jecxz
repnz
mov
call
adc
rol
jae
sbb
xchg
shll
and
push
push
mov
in
dec
test
push
dec
adc
xor
lods
cmp
lea
jns
adc
out
jmp
and
and
repnz
mov
mov
jns
iret
xor
sti
loope
dec
or
push
push
aas
hlt
xchg
bound
das
nop
mov
sub
xorb
jbe
xchg
sbb
xor
movsl
insb
lock
push
int3
jb
push
xor
mov
fisubs
jns
or
stos
or
mov
outsl
icebp
push
inc
push
inc
mov
into
stos
push
xchg
inc
or
popa
iret
jne
mov
inc
sahf
mov
jae
mov
neg
repnz
ss
jnp
dec
mov
lret
scas
or
out
leave
outsb
ret
enter
or
pop
mov
or
xor
loop
subl
loopne
ja
cmpsl
hlt
scas
push
test
inc
push
cli
sub
mov
push
das
and
leave
add
mov
mov
and
xchg
sub
clc
lahf
adc
stc
addr16
cld
push
es
jecxz
je
xchg
pop
push
test
sub
cltd
imul
or
mov
cmpsb
pushf
mov
mov
cmpsb
add
jle
loopne
out
stc
test
mov
insl
movsl
fstp
jae
push
xor
lods
test
in
push
loopne
mov
lods
jg
sub
rorl
enter
add
add
mov
addr16
or
fwait
scas
psubusw
js
adc
push
or
jg
add
aas
sub
in
adc
mov
add
fildll
sub
add
bound
in
das
fwait
movsl
iret
mov
mov
xchg
xorl
jbe
ret
mov
movlhps
and
nop
cmp
fildll
xor
mov
add
in
hlt
dec
and
mov
jbe
out
pop
lea
or
sti
frstor
xor
scas
cli
push
repnz
rclb
push
xchg
mov
mov
mov
xchg
adc
ss
rcrb
or
jno
pop
xchg
out
sahf
pop
clc
xchg
fwait
lods
cmp
ljmp
and
mov
pop
jp
push
scas
xchg
jle
fldl
lret
add
out
cmpsl
push
gs
iret
inc
and
jge
sub
push
mov
jbe,pt
mov
test
pop
negl
fsubrl
xchg
pop
cmp
repnz
jmp
push
xchg
stos
leave
adc
xor
ja
fwait
arpl
pop
xor
lretw
push
inc
pop
mov
and
add
push
mov
jns
pop
sbb
mov
inc
mov
inc
push
cs
ja
testb
mov
mov
ljmp
lea
adc
mov
std
mov
insl
aam
push
inc
out
push
pop
inc
xlat
push
inc
test
pop
cmp
mov
icebp
cmpl
movsl
js
sahf
les
cmc
jb
mov
sbb
call
add
in
outsl
xor
jle
push
gs
fnstcw
inc
fidivl
ds
push
sbb
jge
mov
js
test
adc
repnz
push
mov
jnp
aad
stos
jmp
dec
sbb
mov
imul
adc
xor
call
test
int
nop
add
mov
jo
ret
pusha
lahf
clc
pop
testl
std
fbstp
fs
aam
and
leave
int
fucomp
fwait
inc
in
push
pop
cli
jmp
sar
insl
ds
mov
mov
jg
shlb
pop
std
loop
pop
dec
and
aad
fnsave
aad
mov
jne
sub
mov
gs
in
xor
ret
pop
gs
inc
dec
mov
push
shr
fisubrl
push
test
icebp
fincstp
and
mov
outsl
dec
ret
roll
sbb
or
add
fwait
dec
and
mov
sbb
imul
sbb
mov
xchg
lea
mov
dec
scas
xchg
in
pop
mov
and
sub
jmp
pop
dec
push
jbe
and
cmp
push
sbb
dec
mov
cmp
scas
js
push
scas
cltd
xor
or
push
std
call
lds
xor
outsl
mov
or
and
rcr
sbb
movsl
adc
or
add
cmpsl
jp
pop
xor
and
out
cmp
push
add
add
stos
push
xchg
fldl
imul
jae
inc
rorl
inc
xchg
push
lods
loop
aam
sbb
int3
cmp
pop
push
stos
jle
adc
leave
inc
addl
inc
cld
test
outsb
call
mov
aas
mov
ja
or
jg
fdivl
mov
sbb
inc
adc
push
cli
loopne
pop
scas
add
jno
xchg
push
xchg
add
repnz
mov
adc
pop
insl
hlt
sub
or
ja
adc
shll
icebp
movsl
ja
mov
scas
adc
scas
stos
ja
hlt
sbb
xlat
pop
jo
aaa
into
stos
xorl
rcrb
mov
push
repnz
inc
sbb
fcmovne
add
jb
xchg
add
sub
add
clc
dec
sbb
mov
and
mov
mov
imul
je
lcall
test
sub
pop
imul
ss
jbe
dec
and
out
insb
popf
pop
dec
sarl
jnp
ror
inc
xchg
insl
adc
xor
sbb
sti
stos
cld
add
dec
ret
jle
xor
cmp
xchg
lods
les
mov
adc
insb
pop
jnp
out
mov
arpl
fsubrs
or
push
cmp
add
inc
das
and
jbe
and
xchg
dec
clc
js
mov
cld
ja
adc
stc
arpl
sbb
xchg
ret
jns,pn
cmp
movsl
mov
aas
mov
int3
leave
enter
rorl
push
hlt
dec
in
jecxz
pop
jno
push
xchg
xchg
mov
fbld
mov
fisubl
inc
int3
adc
xor
in
sbb
pop
inc
std
cmp
repnz
mov
fsubrs
movsb
push
mov
cltd
push
sub
mov
pushf
xor
mov
jnp
xchg
mov
leave
inc
lods
cmp
mov
dec
addr16
inc
fs
xchg
mov
fldl
dec
push
enter
lods
and
call
mov
mov
pop
into
orl
adc
int
jecxz,pn
ficomps
into
cmp
sarl
mov
je
mov
jo
xor
jg
and
dec
push
or
loope
and
push
pop
push
scas
mov
xor
aad
mov
pop
xchg
cmp
xchg
jge
xor
les
out
mov
addl
mov
or
cld
lds
movsl
mov
lods
movl
mov
clc
popf
inc
xlat
sub
test
test
ss
in
das
sub
pop
negl
in
mov
or
mov
add
dec
mov
xor
xchg
sub
pop
lea
adcb
mov
pop
mov
mov
mov
push
push
xor
lcall
inc
lods
xchg
xor
sub
lret
sbb
adc
xor
pushf
cli
push
inc
outsb
hlt
jnp
mov
or
mov
jbe
sti
mov
adc
les
jl
push
pop
es
sbb
adc
mov
push
cmpsb
in
shlb
add
rcl
test
daa
stc
xor
or
sbb
xchg
and
addl
cmpsl
jo
cmp
cmpsb
jnp
pop
xchg
daa
pusha
pop
movsl
cld
int
ficompl
fwait
inc
test
mov
sbb
lods
cmp
stos
test
dec
xor
ret
fs
ficoml
adc
mov
adc
ss
addr16
jnp
int3
mov
stos
xchg
imul
mov
mov
test
nop
pop
shll
test
sbb
pop
in
inc
jnp
cmp
loop
lret
push
push
lds
push
inc
lret
lods
and
pop
lret
fwait
sti
imul
push
dec
or
jne
mov
mov
jbe
fmul
cmc
push
call
and
mov
fisttpll
push
js
mov
mov
mov
dec
lahf
cmpsl
mov
adc
dec
and
imul
add
xchg
inc
iret
into
sbb
repnz
and
mov
ljmp
scas
loope
dec
mov
sti
popf
aas
mov
das
push
xor
sub
mov
iret
mov
ja
cs
clc
adc
je
and
sbb
dec
push
push
mov
sbb
mulb
in
ret
repz
and
neg
pushf
mov
in
or
cmp
lcall
in
mov
jg
outsb
mov
ds
rorb
cmc
idiv
add
into
fs
out
adc
mov
stc
out
sub
outsl
add
mov
or
jne
out
lcall
sbb
int3
sar
fwait
inc
fcomps
or
loop
push
insb
xchg
data16
fdivs
int3
pop
mov
push
ljmp
jno
enter
sub
stos
inc
cmp
cmp
push
mov
rcrb
mov
iret
cld
leave
mov
cmp
stos
iret
push
sub
test
push
stos
jl
fbld
fmulp
cmp
jecxz
cld
sar
adc
enter
cmp
cmc
das
jne
add
mov
jo
fwait
lods
lods
sarb
xchg
cmpsb
addr16
dec
adc
xchg
jecxz
clc
lret
push
ja
in
push
and
stos
sbbb
repnz
icebp
pushf
mov
and
fcomps
inc
test
adc
out
add
mov
cli
shl
sti
push
bound
hlt
push
clc
or
adc
mov
pop
movb
shll
aam
mov
pop
loopne
int
cmc
pop
mov
pop
sbb
aad
add
or
iret
cmp
cmp
mov
les
xor
xor
push
lods
mov
ret
and
sub
dec
scas
xchg
or
mov
pop
pop
imul
cmp
imul
mov
movsl
arpl
xchg
adc
jecxz
sarl
jl
fmul
jae
xchg
dec
dec
sbb
xor
mov
mov
inc
shrl
or
adc
xchg
stc
jl
out
ds
add
mov
outsb
jnp
lea
pop
push
fs
subl
pop
cmp
pop
repnz
sub
scas
rorl
cltd
shrb
push
cmpb
ficoml
enter
mov
das
dec
add
inc
test
mov
repnz
pop
xchg
push
add
jae
mov
xor
lret
mov
and
push
insb
dec
sub
icebp
xchg
pop
sbb
xlat
loop
push
enter
sub
mov
cmp
shr
sbb
repnz
cwtl
mov
and
mov
test
cmpsb
dec
adc
dec
nop
testl
outsb
add
xchg
out
ljmp
lock
and
jns
scas
inc
std
repz
mov
cmp
loop
adc
cmp
and
sbb
test
sbb
and
icebp
aaa
loope
jecxz
sbb
loope
adc
lahf
rcr
dec
stos
mov
out
fs
sti
inc
insl
jmp
dec
or
jne
xchg
fidivl
add
mov
xor
sbb
jl
imul
cmpsb
loopne
add
inc
fs
mov
fbld
pop
inc
repnz
mov
lds
imul
xlat
sub
inc
push
cmp
loope
add
gs
mov
push
insl
in
out
lret
mov
jb
mov
mov
ret
cmpsl
xor
fidivs
filds
mov
decb
in
jbe
test
push
aaa
out
cmp
movl
and
pop
add
push
jmp
mov
into
jg
jae
and
enter
pop
inc
shlb
mov
out
loop
js
cmpsl
cmpsl
mov
gs
xchg
and
push
jp
mov
stos
mov
mov
icebp
mov
sub
aad
jb
sbb
cmp
adc
and
add
shrb
ljmp
popl
sub
ret
mov
sbb
mov
sub
call
pop
push
in
fisttpll
hlt
subb
pop
out
sub
xchg
cmp
inc
xor
sbb
test
pop
mov
addr16
outsl
cmp
mov
insl
mov
mov
sahf
pusha
aaa
and
aas
or
inc
fistl
or
mov
fsubs
xchg
repz
xlat
iret
inc
insl
inc
imul
adc
rcrl
inc
push
push
adc
scas
xchg
jo
outsb
xchg
sti
adc
sbb
adc
inc
inc
mov
in
cmp
outsb
lds
pop
sbb
adc
cltd
sahf
xor
stc
xor
arpl
or
iret
pcmpgtb
inc
out
fsts
mov
inc
adc
daa
lret
xchg
repz
pop
ds
push
xor
xlat
inc
int
andb
fisubrs
push
cmp
pop
push
in
loope
and
daa
testl
ret
xor
mov
jo
inc
cs
cmp
lods
adc
pushl
inc
xlat
inc
scas
pop
lret
ja
pop
push
xchg
jns
mov
fisubrs
sbb
lea
jle
inc
mov
add
fisttpll
and
xchg
call
js
repnz
mov
lahf
enter
sti
lods
dec
adc
stos
xchg
sbb
in
inc
xchg
pusha
and
repz
sbb
xchg
gs
in
mov
dec
andb
mov
jle
xchg
fwait
mov
rcrb
lea
cmp
mov
push
inc
pushf
push
mov
pop
aas
add
mov
ficomps
add
bound
xlat
fs
pop
cmp
rclb
cmpsl
iret
adc
push
lock
cmc
jmp
mov
xor
xchg
fucomi
mov
push
mulb
mov
outsb
push
push
and
and
pop
pop
movsb
cld
dec
popa
jle
dec
and
push
repz
aaa
dec
fsubrl
xorb
mov
int
enter
jmp
bnd
pop
je
les
xchg
loopne
lret
lcall
add
push
pop
ja
ds
dec
lds
sbb
jae
jae
pop
cmp
jge
push
and
jo
aas
sbb
scas
pusha
mov
push
xchg
popf
mov
pop
popf
xor
clc
sbb
adc
and
push
add
aam
nop
subl
mov
cmp
out
push
clc
negb
jge,pt
outsb
in
dec
icebp
lret
add
and
inc
and
cmp
inc
mov
sub
pop
leave
mov
jl
and
jne
mov
test
xchg
mov
push
test
insb
add
cld
jp
or
jns
pop
and
push
lret
and
add
lcall
push
in
into
int
sub
mov
rorl
jo
ret
popf
mov
icebp
sahf
jo
xor
mov
mov
mov
scas
mov
sahf
in
jge
inc
cmpl
and
mov
or
mov
mov
lock
lods
inc
adc
fimuls
fdivr
in
sbb
aaa
lret
notb
mov
add
mov
jae
mov
xor
lods
outsl
sub
mov
rol
fnsave
sahf
or
mov
loopne
neg
and
sub
dec
add
imul
xchg
push
test
rolb
add
jle
imul
inc
scas
lds
idivb
in
mov
fs
jno
ljmp
dec
mov
repnz
add
mov
scas
dec
leave
jecxz
pop
mov
movsl
cmp
jo
inc
xchg
jns
shlb
lcall
pop
xchg
adc
mov
into
push
gs
jne
pop
inc
jmp
xor
xchg
cwtl
mov
fmuls
negl
out
sarb
ficoml
xor
cmpsb
lock
sbb
mov
lret
jg
and
mov
shl
fcmovnb
test
hlt
inc
inc
es
jne
lret
data16
frstor
in
push
cli
test
int
push
ljmp
movsl
cmp
and
jmp
outsb
ret
jle
lret
mov
enter
aas
imul
add
jp
test
fldenv
popa
scas
push
jo
or
fistpl
xor
repz
mov
sarb
mov
add
pop
push
inc
sahf
cli
xchg
add
mov
int3
lcall
ror
pushf
data16
into
mov
test
xchg
adc
jp
aas
mov
popf
test
scas
inc
imul
mov
xchg
std
jae
inc
mov
or
pop
stos
mov
fldt
insl
out
push
mov
lds
push
scas
push
xor
outsw
into
jb
pop
in
test
jns
or
sahf
ja
xor
cmp
stc
nop
daa
sub
jp
cs
mov
repz
or
cmp
aad
shrl
testb
xchg
roll
out
js
das
and
pop
dec
ror
xor
int
outsl
iret
adc
fdivrs
stos
push
lret
ret
jg
sbb
jge
stos
pop
shrb
outsb
or
mov
fsubl
mov
mov
out
enter
es
adc
popa
outsl
xorb
jecxz
xchg
ret
jle
pushw
or
fcmove
sub
arpl
mov
bound
icebp
out
push
push
lret
cmp
das
add
lahf
enter
push
movsl
xor
lahf
inc
cmc
jecxz
jecxz
xor
jnp
and
in
fldenv
out
pop
push
jmp
jmp
jae
and
and
loope
inc
and
sti
les
leave
je
aaa
ret
push
adc
push
lea
jne
adc
inc
cmp
inc
frstor
test
pop
imull
push
les
and
fisubrl
bound
jae
out
movsb
ds
mov
pop
ds
mov
add
sub
or
hlt
or
cmp
mov
out
pusha
pushf
js
push
mov
xlat
loop
enter
sub
popf
cmp
add
push
inc
push
adcb
outsb
mov
mov
dec
iret
adcb
and
or
adc
aas
mov
jno
pop
adc
mov
dec
inc
or
lret
cmp
cmp
cltd
cmpsl
cmp
xor
rolb
and
push
dec
and
fisttpl
jg
mov
out
push
jl
mov
add
lds
push
sub
mov
aam
movsb
mov
add
ja
stos
sti
rcrb
decb
outsl
adc
fcmovnb
jns
mov
hlt
adc
js
mov
jmp
and
push
stos
xchg
popa
das
adc
std
sub
cmp
and
mov
pop
or
icebp
aas
lret
push
pusha
js
push
mov
cld
cmp
pop
orl
sbb
and
pop
push
mov
and
cld
fisttpll
sbb
mov
ret
arpl
adc
mov
hlt
lret
bound
iret
jmp
dec
pop
xor
ret
sarl
icebp
rcrb
lahf
ss
je
jb
and
jo
hlt
call
adc
inc
pop
divb
imul
pop
jle
loope
dec
sahf
repz
push
inc
cmp
pop
test
pop
js
push
leave
sbb
and
pop
test
adc
sub
aaa
lods
je
mov
flds
and
push
add
out
outsl
cmp
push
sub
cmc
fwait
mov
js
sahf
xor
and
push
out
gs
outsl
push
fsts
je
mov
pop
test
aad
add
in
jmp
out
or
test
xor
pop
out
lahf
xchg
sub
push
mov
push
and
pop
add
mov
shlb
ret
gs
mov
inc
fnsave
cmp
stos
adc
jbe
popf
cwtl
pop
sbb
ljmp
out
lock
sahf
dec
pop
xchg
xchg
std
and
shr
repnz
mov
nop
mov
shrl
loopne
jmp
imul
popl
iret
in
insb
rclb
xchg
decl
js
shll
enter
lods
data16
mov
pop
xor
mov
pop
cmpsl
lds
mov
push
sbbb
loope
ficompl
andb
inc
xor
fsts
clc
fstpt
dec
addr16
in
into
cmp
fisubrs
imul
and
sub
push
rep
lret
jle
lea
pushf
mov
sti
add
jnp
dec
adc
hlt
inc
lds
sub
xlat
arpl
lods
dec
decb
push
xor
jne
sub
jp
stc
subl
btc
lret
jne
daa
xchg
mov
dec
and
aam
aad
leave
xchg
orb
inc
repz
jge
adc
cltd
popa
sbb
adc
xchg
imul
add
hlt
addr16
sahf
mov
shlb
shrl
pop
adc
bound
std
rcl
xchg
movsb
aam
sbb
push
mov
ja
dec
add
push
test
lret
cld
push
jo
fmulp
clc
mov
js
std
cs
mov
les
ftst
mov
adc
sbb
adc
lcall
movsl
mov
jmp
fldt
sub
jns
ja
pop
icebp
pop
adc
cmp
jnp
ret
daa
adc
loope
popa
sahf
scas
bound
sub
addr16
adc
pop
and
in
add
inc
sub
rcrl
sub
imul
push
cmp
add
fcomip
mov
mov
cs
repz
pop
xorl
aad
int
fwait
int
or
repnz
cmp
adc
xchg
bound
or
aaa
mov
popa
jnp
add
xor
jmp
inc
xchg
jbe
in
mov
in
pop
pop
decl
movb
push
in
lcall
jno
dec
jb
jae
iret
xchg
xchg
ljmp
test
or
xor
add
lret
cli
call
fimull
adc
sbb
adc
jg
outsl
jg
popa
push
jle
pop
ret
cld
cs
iret
inc
popf
cltd
ds
push
mov
dec
push
cmp
das
mov
jae
dec
cmp
loope
push
fwait
and
adcb
xor
lret
ret
jb
push
stos
and
xchg
pushf
shrl
or
lods
mov
pop
mov
in
mov
adc
xor
clc
outsl
mov
sub
lock
add
xchg
cs
pusha
and
add
lcall
sahf
lods
or
je
rclb
out
and
lods
dec
jmp
cmpsb
dec
jmp
pop
pop
inc
fs
stos
xchg
jno
cmpsl
lea
push
or
adc
rcrb
loopne
daa
or
mov
jno
pop
in
inc
xchg
mov
mov
jns
mov
mov
lods
sub
lods
into
test
pop
gs
push
test
xor
icebp
leave
addr16
rclb
and
inc
into
mov
or
lods
subb
lods
inc
pop
add
arpl
xchg
add
in
xor
popf
fs
pop
or
mov
stos
lahf
inc
fstpt
xor
in
or
xor
scas
and
pop
out
into
shlb
pop
xor
mov
lahf
out
pop
ret
pop
mov
adc
loop
and
inc
push
hlt
stos
mov
inc
loop
jnp
sti
lock
or
mov
and
in
movsl
push
loope
jmp
cmp
mov
xchg
lods
loope
iret
mov
inc
xchg
sub
dec
rcl
sbb
call
sti
sub
dec
mov
jle
or
mov
xchg
add
push
fmuls
stos
sub
jae
add
add
adc
inc
xor
pushf
pop
xor
fdivrl
push
or
leave
sub
mov
adc
mov
cltd
sub
aas
push
mov
data16
pop
jne
and
push
pop
adcb
jmp
jae
or
ret
lcall
jne
inc
in
fnstsw
mov
out
jmp
mov
and
cmp
sub
mov
sbb
cmpsl
adc
inc
dec
push
shll
sti
cmpsb
mov
dec
shll
or
mov
imul
sbb
xchg
sbb
inc
insl
jge
insb
outsb
aad
dec
add
and
and
shlb
pop
dec
add
lcall
and
mov
mov
imul
imul
lret
ficompl
mov
les
movsl
cmp
pusha
mov
mov
cld
jbe
les
and
pop
aaa
iret
jp
enter
call
dec
ret
cltd
xor
cmc
adc
mov
push
adcb
pop
add
sbb
dec
gs
negl
pop
and
lcall
xor
and
cmp
mov
icebp
push
movsb
xchg
icebp
inc
xchg
lods
ret
lcall
sub
fnsave
lret
fstpl
and
cmp
pop
and
mov
cmp
insl
filds
dec
loopne
adc
xchg
jge
sbb
incb
add
push
pop
fidivl
xchg
ficoml
mov
cmpsl
or
nop
adc
xor
jne
inc
push
out
fldlg2
xlat
cmp
inc
hlt
cmp
stos
fnstcw
pop
dec
or
jae
pop
in
push
imul
test
in
mov
jp
test
ret
adc
xchg
dec
mov
add
sbb
and
or
adc
mov
dec
mov
pop
jle
fidivs
adc
insb
push
push
dec
decl
xor
pop
or
loope
aas
pusha
pop
or
lods
and
sub
std
push
std
mov
xchg
sub
pushf
xchg
sub
mov
testl
mov
shrl
xchg
adc
cmc
nop
cmp
in
sub
icebp
test
jae
imul
xchg
and
inc
popf
cmpsb
inc
sub
adc
inc
lcall
pop
out
mov
outsb
loope
int
mov
aam
sbbl
sti
push
inc
push
je
inc
fstps
popa
jb
insl
or
cmp
popf
cmpsb
cmp
xchg
insb
dec
in
or
mov
jmp
ja
addr16
add
test
cmp
push
sbb
hlt
push
mov
fwait
pop
scas
inc
hlt
adc
jns
test
jmp
mov
fnstcw
hlt
push
xor
jae
jmp
dec
mov
pop
push
mov
cmp
xchg
imul
pop
aaa
scas
pop
push
das
ret
or
ss
je
dec
hlt
iret
xchg
mov
cs
mov
clc
imul
jb
xor
sti
nop
cld
lds
testl
lahf
mov
imul
jge
xchg
lret
push
sahf
out
mov
lods
xor
mov
sbb
mov
ss
ss
ficoms
in
mov
stc
bound
xor
lods
jge
stos
cmp
sahf
adc
loopne
and
mulb
jae
shrb
mov
cmp
js
rcrl
icebp
jnp
cmp
push
sbb
jl
pop
pop
scas
test
sbb
leave
pop
mov
sub
and
push
sub
shrl
imul
inc
cmpsl
mov
aam
movsl
insl
stc
push
scas
movsb
adc
sarl
adc
inc
ja
ficoms
rcrb
in
mov
inc
lcall
sbb
mov
loop,pn
negl
mov
xor
sbb
mov
push
test
pop
fcmovne
xchg
jnp
scas
iret
fsts
mov
xchg
cmp
jbe
out
gs
jbe
dec
push
js
lcall
outsl
aam
sub
mov
in
add
sub
mov
lcall
dec
scas
pop
push
xchg
jp
das
xor
adc
incl
out
pop
lock
dec
ja
and
inc
xchg
xchg
leave
xchg
imul
adc
ljmp
call
hlt
lds
pop
stos
mov
int
xor
xor
dec
aam
enter
test
cwtl
adc
outsl
js
push
rcrb
sti
dec
sub
insb
dec
dec
test
adc
mov
ljmp
push
inc
fldl
call
inc
jmp
or
push
or
leave
sbb
and
mov
dec
cmp
repnz
pop
icebp
insb
dec
jle
or
out
push
lahf
subl
fmuls
bound
sbbl
jl
test
test
insl
sahf
bound
pop
iret
mov
mulb
aad
daa
jbe
aas
xor
add
out
loopne
iret
mov
or
dec
sbb
push
sbb
ja
sub
sti
xchg
mov
xor
in
shlb
fstps
dec
clc
cmpsl
sti
cmpsb
push
mov
mov
icebp
sub
icebp
outsl
xorl
cmp
push
lahf
je
lea
mov
cmp
fsubl
push
lcall
adc
push
repz
or
scas
dec
xor
sub
addr16
lret
jmp
push
mov
inc
fwait
xchg
xor
adc
scas
mov
push
xchg
jo
push
mov
inc
hlt
adc
scas
sbb
shrb
xlat
outsb
aam
adc
pop
add
pop
mov
push
push
sbb
fld
lds
in
iret
jle
jbe
popf
or
in
and
in
pop
dec
out
test
mov
mov
repnz
xchg
inc
xchg
cli
inc
stos
mov
sbb
and
inc
lret
push
xchg
in
xchg
mov
sarb
cmpsb
std
or
sti
adc
arpl
subl
add
xor
dec
jmp
shlb
mov
add
sbb
shlb
int
dec
dec
lcall
dec
cld
cltd
dec
test
jecxz
fnstenv
mov
mov
in
or
xchg
insl
mov
push
jb
mov
xchg
push
sti
es
adc
movsl
push
pushf
imul
inc
repz
cmpsb
push
ret
xor
jns
mov
cld
add
mov
lods
pusha
mov
adcb
mov
jae
arpl
popa
cmpsl
add
sub
mov
xor
add
jne
fdivrs
mov
jns
int3
cmpsb
dec
into
xor
xchg
mov
mov
fisubrl
hlt
push
cmp
fsubs
sub
mov
xor
imul
vpshldvq
bound
in
stc
clc
rcl
test
xchg
xchg
cli
and
lret
arpl
loope
cli
loopne
das
xchg
insl
jns
aad
iret
fcmovne
jge
inc
filds
cmp
sbb
push
jge
ret
loopne
jnp
fs
cmp
mov
cmp
cmp
dec
je
lods
pop
aam
mov
neg
pop
lods
mov
ret
outsl
pop
jecxz
xor
pop
dec
pop
cmc
mov
pushf
xchg
sub
enter
xor
stos
jae
sub
jae
aas
mov
mov
ja
dec
pop
push
pusha
ja
inc
jg
xor
jle
dec
movsb
shrb
loope
test
inc
mov
js
lret
and
scas
jecxz
pop
or
mov
fdivrl
aaa
cmpsb
outsb
cmp
negl
jg
xchg
mov
lcall
call
mov
jle
in
xchg
fcoml
lods
mov
cmc
jle
and
lods
ljmp
xchg
shl
cs
xor
arpl
loop
sbb
sub
into
ss
nop
test
mov
add
push
imul
jge
jb
cmp
ret
pop
ljmp
add
jnp
les
push
imull
fcmovnb
ljmp
mov
movsb
pop
xchg
pushf
xchg
jns
push
lcall
sahf
test
push
lcall
pop
hlt
adc
push
aaa
sarb
stos
lea
test
data16
cltd
xchg
lds
lods
into
arpl
mov
jmp
xchg
xchg
movsl
adc
nop
or
notb
mov
pop
das
sbb
insb
sub
das
pop
sbb
dec
dec
xlat
xor
shlb
shlb
push
sti
xchg
ret
mov
lahf
out
outsb
pushf
cs
adc
jnp
in
sub
test
arpl
ds
mov
xchg
push
imul
add
or
adc
or
pop
cli
or
outsl
cld
push
or
mov
and
sti
mov
imul
out
imul
fcomi
int
outsl
pushf
push
fidivrl
inc
pop
test
adc
xorl
xor
adc
std
and
xor
lcall
stos
sbb
sbb
dec
in
xor
push
int
push
cmp
sbb
dec
lds
xchg
push
xor
stc
adc
dec
clc
testb
mov
xor
xchg
out
push
lods
add
fs
sub
push
or
pushf
mov
hlt
and
cmp
push
popf
insl
push
jl
push
into
lahf
xor
les
inc
fldenv
dec
adc
and
pop
mov
adc
mov
and
ret
insl
cld
xchg
clc
lcall
inc
imul
test
aad
sub
imull
mov
jns
out
jge
dec
or
repnz
jmp
push
cltd
pop
or
push
lret
sub
mov
cmpsl
sarb
cmpsl
add
lock
in
js
inc
adcl
xor
test
add
mov
sub
jne
ret
sbb
daa
add
push
cmp
imulb
and
xchg
sbb
aad
lock
mov
cmp
test
sti
movb
fs
lods
jno
sti
jbe
xchg
jo
ret
jae
push
cld
out
mov
pop
mov
movsb
mov
enter
pushf
sahf
jmp
jmp
popa
lods
imul
dec
pop
adcl
call
inc
fisubl
xor
or
cmp
cwtl
or
into
add
add
or
mov
imul
dec
push
scas
xchg
loope
inc
fstpt
lahf
xlat
push
sarl
std
sarb
xchg
mov
xor
sbb
insb
push
xor
jbe
mov
outsl
je
adc
adc
cltd
pop
stos
aas
add
jecxz
lahf
test
jmp
mov
pop
outsl
jae
push
mov
cmpsl
stos
cmp
shlb
sub
pop
fdivp
dec
test
xchg
mov
mov
sahf
sti
mov
xor
sub
mov
addr16
dec
in
adc
pop
pop
lock
dec
and
pop
mov
mov
stos
andl
or
cmp
shlb
fidivrs
add
mov
testl
inc
push
je
dec
push
pop
jmp
xchg
or
mov
imul
jg
mov
push
mov
out
xorl
push
pop
fisubrl
test
ljmp
lret
cmp
scas
push
notb
loop
fwait
cmp
loope
cmp
aam
cmp
imul
out
daa
jge
jno
bound
repz
cmpsb
rcll
je
cmp
sub
mov
mov
pop
insb
inc
sbb
jp
fisttps
js
fcomps
adc
jecxz
lret
and
add
aas
pop
lahf
or
mov
sub
jb
insb
mov
mov
and
mov
inc
sbb
popf
xor
hlt
push
jmp
lahf
inc
jo
ljmp
xchg
aam
in
pop
or
push
add
xchg
fdivs
gs
sub
jno
inc
bound
dec
cmp
push
cmp
in
mov
pop
ds
imul
fsubp
cmpsb
mov
arpl
scas
mov
dec
addl
sbb
out
adc
stos
inc
test
shlb
pusha
sub
test
lods
mov
js
cmpsl
outsb
shlb
mov
stos
mov
in
js
stos
fstpl
insl
adc
hlt
add
std
iret
jae
lcall
dec
rcll
jecxz
mov
xchg
jmp
inc
inc
repz
in
test
cltd
hlt
rclb
lea
js
dec
outsl
pop
jnp
nop
outsb
cmp
negb
cmpsl
out
mov
push
repnz
mov
out
out
cwtl
rcrl
xchg
sub
sahf
mov
movl
and
or
jns
sahf
loopne
lcall
jl
dec
scas
or
stc
pop
lods
xchg
or
xchg
dec
mov
adc
sbb
cmp
inc
and
jnp
pop
test
pusha
or
cwtl
jge
push
mov
sbb
je
add
cltd
xor
icebp
out
push
sarl
test
cwtl
out
mov
add
leave
jle
pop
pop
inc
inc
dec
repz
jo
test
loop
jle
dec
mov
imul
aam
dec
dec
dec
cmc
stc
or
ret
xchg
sub
fwait
xor
insb
and
mov
rcrb
lds
jnp
push
jmp
xchg
sub
push
cmpsl
mov
jae
sbb
jle
and
push
xchg
xor
daa
repz
in
and
xchg
mov
movsb
add
pop
cwtl
xor
jge
imul
das
mov
pop
fidivl
shll
les
sahf
cmp
mov
roll
sub
pop
pop
or
mov
cmp
ficompl
pop
jns
or
aad
push
push
test
and
push
jl
xor
das
xlat
pop
mov
sub
cmp
das
popl
cld
push
adc
mov
xchg
in
sub
das
outsl
ss
addr16
les
mov
cmp
test
adc
sub
gs
pop
lock
and
push
push
cmp
js
adc
aad
bnd
pop
in
jl
push
inc
pusha
cmp
rcrb
enter
mov
popa
arpl
mov
in
stc
dec
dec
cmp
xor
idivl
push
add
mov
aas
push
cli
es
sbb
xor
repnz
imul
mov
mov
sub
xchg
sbbl
fstps
adc
or
mov
mov
cmp
adc
stos
xchg
test
dec
cmp
sahf
popf
fidivl
rorb
jecxz
sub
movsl
ljmp
push
pop
cwtl
aas
jg
lret
cmp
loop
in
fld
pop
fdiv
mov
mov
pop
mov
mov
jnp
sub
jl
mov
pop
lcall
and
aad
xor
mov
loope
xorl
movsl
mov
lds
sbb
mov
outsl
xchg
or
rcr
xchg
idivl
jbe
pop
sub
lahf
jp
jp
leave
mov
aaa
pop
cltd
lods
andl
gs
incl
roll
mov
mov
out
ror
call
adc
popf
adc
insb
sub
jmp
ret
mov
mov
insl
in
cmc
push
mov
cwtl
adc
xchg
mov
mov
inc
mov
jnp
lret
iret
mov
pcmpgtd
mov
add
mov
jg
cld
aas
mov
push
jne
and
jecxz
into
push
int3
in
stos
fs
repz
das
fmul
cmpsl
aad
les
xor
outsb
rol
jae
push
mov
sbb
mov
in
mov
movsb
shlb
jle
sub
or
aaa
and
dec
ficompl
jg
mov
add
xchg
out
test
out
lret
adc
std
push
or
pop
sbbb
jecxz
adc
inc
mov
jns
ljmp
add
mov
add
add
or
push
lcall
push
rol
push
dec
and
mov
cltd
shr
lret
leave
mov
test
xchg
out
dec
cmp
push
mov
mov
in
lcall
xlat
mov
mov
pop
mov
fidivrs
sbb
aas
lret
add
aam
jbe
es
inc
inc
pop
dec
fdivl
les
pop
pop
xor
outsl
pop
and
nop
xchg
and
shrb
add
outsl
loop
in
cmc
push
stos
jnp
xchg
sbbl
and
aad
pop
iret
orl
movsb
mov
lret
cs
cld
mov
add
popa
adc
stos
ret
and
sub
popf
mov
in
sub
mov
mov
out
mul
xchg
mov
hlt
sub
mov
rcrl
push
sbb
xor
shr
stos
pop
inc
inc
pop
add
rol
cmp
sub
repz
insb
jecxz
ja
push
and
jp
mov
movsb
je
mov
xchg
ds
stos
out
fistpl
add
pop
xor
dec
mov
cwtl
std
or
mov
and
adc
and
fsubl
or
adc
add
jecxz
insb
jmp
cmp
out
mov
pop
int
insl
adc
rcrb
add
fs
mov
push
xchg
test
or
in
sbbl
outsl
int3
ds
jmp
or
fadd
loop
mov
jbe
popa
test
into
repz
cmp
push
lods
mov
pop
pop
popa
pop
insb
shlb
cmp
push
roll
pop
clc
cmp
push
ds
scas
mov
jno
fisubs
jle
lods
xchg
loop
xor
gs
lods
out
scas
pop
jo
enter
fidivs
mov
push
lahf
divl
dec
and
outsb
test
mov
cmp
outsb
xor
add
sbb
ss
xchg
test
cltd
std
test
cmp
mov
cmp
lods
push
out
insb
xchg
mov
mov
ror
xor
lahf
movsb
mov
xchg
popl
mov
loopne
mov
daa
or
push
mov
fnstcw
in
sbb
or
or
mov
mov
add
cmp
pushf
push
decl
lods
aaa
and
movsl
xor
int
jno
ss
cltd
sbb
int3
sub
push
jo
sub
enter
xchg
pop
xorl
aaa
out
stc
adc
mov
xor
scas
pop
lcall
clc
and
idivl
mov
pusha
out
dec
insl
out
cld
lcall
jne
addb
sub
fdivrl
mov
outsb
sbb
push
cmp
arpl
add
ss
aas
les
push
push
pop
gs
xor
imull
mov
and
inc
and
fsincos
xchg
mov
push
repz
mov
in
std
cmp
add
shrb
push
jae
adc
out
arpl
inc
fimull
test
notl
or
xchg
mov
inc
push
pop
sub
int
mov
jno
pop
push
push
popa
jg
inc
mov
mov
inc
fidivs
mov
push
sbbl
stc
repnz
inc
jns
mov
adc
cltd
stc
lds
or
aas
mov
cmp
pop
jmp
push
daa
js
xchg
push
add
xor
movsb
mov
leave
gs
ficoml
test
arpl
xchg
bound
ja
je
mov
scas
nop
add
inc
sbb
inc
fmull
hlt
mov
fwait
pop
mov
inc
cwtl
das
je
cli
xchg
or
dec
mov
sahf
or
cld
int
or
jno
nop
icebp
outsb
repz
out
jb
inc
ljmp
add
stc
nop
addr16
loop
leave
adc
push
out
adc
xchg
test
fdivs
mov
inc
cmp
jne
cmp
inc
inc
pop
lcall
stc
je
jo
subb
jecxz
sub
test
and
lret
mov
insl
xchg
jmp
adc
sub
fsubrl
cmc
movsb
cmp
sbb
ret
imul
cbtw
je
in
push
xor
stc
pusha
imull
jo
mov
mov
mov
mov
xchg
mov
push
xor
mov
insl
fmul
divb
sub
or
or
cs
insl
ja
call
jp
hlt
lret
mov
adc
sbbb
mov
push
cmp
aas
dec
mov
out
int
and
jmp
add
sbb
push
pop
adc
push
imul
adc
and
xor
fs
mov
cmpl
jbe,pn
jle
movsb
push
shlb
scas
ret
and
jnp
add
sbb
mov
pop
inc
enter
sbbl
mov
loope
imull
ljmp
lods
mov
jbe
xor
dec
stos
lods
fcompl
mov
jl
jge
addr16
pop
fistpll
push
stc
cs
testb
pop
fdivr
loop
cs
lret
cmpsb
add
cs
mov
add
sbb
icebp
adc
sarl
adc
call
out
jnp
jns
shlb
inc
sbb
push
lods
in
sub
inc
shr
adc
or
xchg
pop
jne
shrl
xor
ljmp
xlat
xchg
and
inc
fadds
sbb
mov
imul
or
jb
fisttpl
xchg
ret
cmp
xor
loope
adc
xchg
mov
sbb
sbb
data16
stc
js
adc
inc
fsts
pop
lahf
push
xor
aad
jns
ja
pop
cs
xor
xlat
lahf
push
int
jbe
das
inc
leave
mov
cmp
test
sbb
xor
push
mov
dec
mov
hlt
or
cmp
cltd
gs
push
bound
js
add
dec
pop
andb
nop
rclb
mov
xor
sahf
sub
mov
ss
stos
or
int
in
rcrb
push
cmp
xor
lcall
into
lock
pop
pushf
xchg
loope
pop
insl
imul
out
add
nop
xor
in
jne
push
ret
sbb
call
adc
lret
and
stos
jne
fisubrl
jne
outsb
mov
fisttps
rolb
and
cmp
andl
and
xor
call
lcall
dec
push
jb
mov
sub
and
aas
dec
inc
mov
sbb
sbb
addr16
incb
scas
out
cltd
data16
and
jl
and
sahf
push
in
hlt
jb
add
out
add
or
lret
push
inc
mov
mov
incb
out
sub
mov
push
sarb
imul
adcl
out
loope
and
test
std
push
or
mov
pop
inc
stos
sbb
cmp
push
lret
mov
movsl
xchg
pop
in
loop
inc
enter
inc
notl
mov
int
insl
mov
lea
popf
test
dec
cltd
xor
adc
add
loopne
scas
ss
and
out
insb
cld
mov
aaa
pushf
repnz
xlat
test
jp
ss
cmpl
maxps
cmpsl
push
sbb
or
pop
lds
scas
lahf
sub
pop
rcr
push
dec
bnd
or
shll
aam
es
jecxz
sub
push
push
ret
mov
jo
test
push
in
aas
push
or
adcb
mov
push
mov
mov
std
test
ljmp
xchg
lcall
lret
scas
sub
push
adc
outsl
stc
repnz
xchg
push
inc
test
lret
fs
xor
mov
ljmp
cltd
addb
pop
or
mov
inc
mov
push
sti
test
fwait
mov
mov
imul
test
pop
int
push
sub
dec
mov
adcl
stos
out
ds
cmp
dec
sbb
or
fcomip
lahf
pusha
mov
insb
in
shl
xchg
dec
pop
shrb
push
clc
stos
ljmp
sbb
cmc
out
mov
pop
cmp
stos
imul
daa
pop
in
stc
xor
jg
jmp
daa
notl
sbbl
jmp
ror
mov
add
inc
xchg
pop
jmp
adc
shlb
and
and
or
lods
pop
push
stos
pusha
mov
das
fistpll
lods
or
mov
push
push
cmpsb
or
jno
lret
cld
jbe
xchg
movsb
cwtl
mov
dec
fildll
cmp
inc
xchg
sbb
sub
cmpsb
aam
mov
das
pop
jbe
inc
inc
add
mov
rcr
int3
mov
push
test
push
jne
dec
mov
jl
sub
dec
pop
and
or
aam
mov
or
or
scas
scas
or
push
stos
pop
xchg
pushf
int3
sbb
xor
adc
aam
sbb
gs
scas
gs
psubq
inc
push
cmc
sbb
inc
mov
shl
ret
pxor
cli
sarl
leave
adc
dec
mov
push
cwtl
das
inc
cmp
cwtl
loope
or
xor
iret
cld
inc
add
inc
orb
add
cmp
push
stos
pop
xchg
jbe
add
xor
sbb
and
test
dec
fnstenv
cmp
dec
int3
into
enter
repnz
js
inc
scas
xchg
mov
adc
fisubrl
jbe
push
bnd
push
add
std
or
lret
loopne
push
mov
adcl
push
cmp
add
gs
into
data16
fstpl
xchg
dec
mov
cmpb
mov
ljmp
repz
negl
sarb
adc
lea
ficoml
aam
les
inc
cwtl
push
push
jne
ret
loope
jb
jmp
jmp
fwait
mov
shll
push
jp
jnp
ds
jg
lret
mov
outsl
mov
popa
adc
push
popa
daa
decb
pop
adc
or
nop
out
and
xor
pop
xchg
push
jb
aas
fsubr
pop
add
mov
inc
clc
push
testb
and
fs
and
out
xor
push
and
mov
jae
xor
rorb
add
and
and
shr
popa
ret
add
jnp
ret
rcrl
mov
enter
mov
in
sahf
push
and
mov
push
jle
stos
movsb
mov
fstps
repnz
fnstcw
fisubs
xchg
aas
jge
fwait
test
sub
push
subb
fnstenv
mov
ljmp
imul
sub
dec
pop
fbstp
cs
xor
pop
push
cmpsl
pop
cmp
ret
test
push
imul
push
std
cltd
js
cwtl
and
pop
or
sbb
in
pop
pop
adc
push
pop
cld
mov
cmp
outsb
jl
xchg
lock
xchg
mov
bound
adc
movsl
dec
lret
addr16
add
jmp
cmp
sbb
addr16
ljmp
in
cmpsl
ficomps
jb
or
fs
dec
jne
scas
push
xor
popf
pop
dec
inc
sbb
inc
pop
lahf
dec
xchg
cmp
lahf
sub
das
pop
sbb
pop
jge
mov
inc
mov
xlat
test
jno
jge
dec
mov
sub
sbb
ret
pop
shlb
lea
aam
sahf
push
inc
or
mov
mov
mov
push
cmpsl
out
xor
and
nop
xor
icebp
loope
cmc
or
hlt
int3
testl
fistpl
jbe
inc
fcomps
jo
insl
sub
xchg
mov
adc
mov
leave
xchg
inc
shl
repnz
fdivs
add
out
jne
xchg
mov
in
xor
insb
fsubrl
lds
inc
inc
xchg
ja
rcrl
lret
adc
add
nop
add
jmp
mov
in
add
js
add
pop
dec
scas
cs
lcall
iret
jne
in
andl
lods
or
fwait
mov
sub
and
cld
pop
aas
xchg
jmp
mov
outsb
jl
adc
mov
cmp
bound
insl
jo
push
ret
cmp
in
xor
cmp
lahf
jae
lret
rclb
mov
repz
or
mov
mov
jne
add
push
insb
push
addb
inc
mov
or
add
or
popa
lea
cmp
in
adcb
xchg
aam
jmp
xor
fcoml
sarb
dec
jmp
or
popa
xchg
mov
std
movsl
out
fnstsw
cmc
adc
sbb
stos
jbe
mov
lret
xor
mov
in
push
pop
mov
xor
adc
add
sub
dec
lea
mov
cmp
js
mov
cmp
xchg
inc
faddl
mov
sahf
xchg
mov
mov
push
repz
mov
lret
jle
jge
mov
out
jae
hlt
outsl
or
push
das
mov
fcoms
pop
sub
ljmp
stc
ret
sub
mov
dec
cmp
xor
lret
sbb
dec
aad
icebp
aas
popf
mov
mov
sbb
mov
cmp
test
sub
lahf
into
ret
test
dec
sbb
insl
rcrb
idivl
mov
je
shll
ret
ds
pop
cmc
push
push
adc
clc
jl
sub
sbb
test
pop
pandn
pop
out
pop
add
shlb
loopne
cmp
push
fidivl
add
xorb
fisttpl
leave
test
popa
pusha
nop
roll
mov
scas
test
sbb
inc
sti
mov
cmp
or
in
dec
push
into
push
hlt
decl
fdivs
sub
jl
xor
push
dec
in
jmp
jnp
icebp
pop
sbb
repnz
mov
inc
movsb
std
jb
notl
fistl
sbb
stos
adc
insl
add
pop
shrl
or
incl
mov
fidivl
pop
pop
imul
loop
jb
jnp
sbb
insb
les
mov
cmpl
mov
loopne
fsub
fstpt
xchg
xlat
outsl
andl
loop
adc
ret
cmp
jecxz
lods
fsubs
loope
adc
dec
inc
mov
arpl
pop
mov
or
repz
cmp
dec
xchg
xchg
xor
mov
sub
push
sub
ljmp
pop
add
sti
cmp
push
adc
adc
xor
loopne
jb
dec
loop
pushf
sub
inc
nopl
stos
ja
mov
adc
add
push
cmp
cmp
mov
inc
bound
xchg
push
lods
dec
cmpsl
sbb
mov
push
xchg
test
jge
add
sbb
mov
dec
dec
scas
rcll
loopne
loopne
test
and
or
mov
mov
iret
push
mov
pop
cmc
arpl
push
or
jmp
dec
decl
repnz
xor
rorb
inc
data16
mov
cmpb
bound
or
mov
dec
xlat
push
jae
or
test
inc
fdivs
or
mov
nop
cmovbe
fsubrs
xlat
lcall
cmp
sbb
ljmp
or
mov
add
femms
mov
ljmp
jp
mov
xchg
jbe
shrl
cmp
or
or
sbb
dec
and
out
jle
aad
jmp
dec
movsb
xor
test
mov
idiv
mov
push
add
or
jne
jno
nop
inc
cmp
push
adc
scas
sub
popf
xor
xchg
hlt
push
sarb
mov
je
movsb
int
add
cmpsl
in
shlb
mov
in
mov
pop
push
lods
out
testl
popf
inc
imul
xchg
test
or
push
fbstp
out
popf
mov
sbb
cmpsl
mov
dec
jp
mul
call
inc
sbb
mov
ljmp
jmp
insl
sbb
lahf
fs
imul
pop
mov
xchg
gs
out
shl
in
int
pop
or
bound
sub
or
xlat
mov
sbb
lock
mov
shl
push
push
test
aam
rolb
mov
ljmp
pop
mov
mov
adc
adc
mov
loope
mov
push
cs
addr16
pop
imul
movsb
cwtl
dec
mov
xchg
sub
out
inc
test
sbb
dec
shr
jnp
aam
push
and
or
push
das
jbe
mov
mov
pop
scas
mov
loop
int
mov
insw
jnp
push
pusha
jl
ffree
test
xchg
add
dec
xchg
xlat
ficomps
xlat
daa
outsl
movsb
fwait
call
into
addr16
pop
jge
mov
in
mov
pop
pop
dec
std
mov
out
mov
dec
mov
test
mov
push
mov
fmuls
sub
iret
jb
lret
sub
dec
dec
lods
imul
test
adc
in
stos
std
jo
cs
push
mov
lcall
loope
sbb
mov
mov
mov
ret
mov
xchg
out
sub
cmpb
cmp
dec
pop
mov
dec
cmpsl
lds
mov
mov
or
push
cld
mov
jmp
mov
inc
cmp
pop
lods
xor
or
in
sbb
jp
xchg
arpl
clc
cwtl
jnp
int3
imul
shlb
movsb
mov
xor
sbb
jns
xor
ret
push
xchg
cld
rcl
sub
xchg
mov
addr16
jae
imul
xor
pop
leave
mov
push
sbbl
xchg
jp
add
add
mov
jl
xor
sahf
insb
js
je
shrl
mov
lret
mov
push
ss
pop
sahf
fcmovnu
fsubrp
and
inc
push
xchg
mov
lret
daa
xchg
cltd
loopne
aaa
jp
lahf
negl
inc
imul
in
push
and
pushf
fldenv
sub
sbb
in
shlb
mov
push
in
addr16
and
repnz
test
loopne
cli
repz
daa
insb
js
fstpt
iret
mov
xlat
mov
xor
push
adc
cmp
jge
lcall
fnstenv
cmp
push
jmp
loop
jo
popa
test
rorb
addl
lahf
lret
out
ficomps
subb
mov
sub
sbb
es
fildll
hlt
mov
xor
jge
test
inc
outsl
loop
jbe
mov
cmpsl
test
push
adc
repnz
add
test
and
aad
mov
push
xchg
test
lret
int
inc
ret
mov
mov
push
jne
inc
std
inc
xrelease
daa
xor
sbb
push
insb
dec
cli
cli
xchg
sub
iret
mulb
jae
inc
push
or
mov
or
mov
sub
test
scas
inc
jmp
or
sbb
mov
sarl
mov
vpaddb
jno
mov
adc
inc
inc
xchg
ret
sti
xchg
push
pop
test
repnz
rorl
das
call
cli
pusha
repz
ljmp
daa
scas
xorb
leave
mov
int3
fsubr
lcall
scas
adc
and
loop
mov
lcall
or
mov
sbb
lret
cli
pushf
leave
sub
dec
push
adc
iret
add
imul
jno
jno
mov
adc
mov
mov
imul
pop
in
and
xlat
into
pop
jno
cmpsl
mov
in
add
lcall
mov
mov
dec
into
jecxz
and
data16
jle
mov
sbb
sub
imul
mov
mov
cmp
jmp
sbb
fstpt
nop
jae
loope
sbb
xor
ljmp
cmc
pcmpgtw
stos
xchg
jge
shlb
mov
in
lcall
dec
fimull
pop
push
icebp
fxch
fldenv
pop
adc
mov
xorb
and
cli
mov
sub
push
jl
loop
cld
inc
add
sahf
daa
pop
rol
cwtl
repnz
in
lret
mov
in
loop
leave
in
stos
data16
daa
enter
mov
fs
and
add
das
xchg
popf
js
mov
and
sbb
adc
jns
test
es
inc
mov
jnp
lods
push
aam
or
jmp
dec
mov
out
orb
mov
mov
mov
mov
sub
xchg
inc
gs
and
leave
cmpsl
out
lret
icebp
xor
and
in
xchg
cmp
rcr
push
inc
or
fadds
jle
ret
out
shrl
add
pusha
mov
xchg
lds
bnd
andl
addb
mov
pop
sub
add
fiadds
fstl
aaa
dec
or
arpl
je
mov
ja
add
enter
iret
fldt
and
mov
aaa
int3
inc
rorb
shlb
aaa
test
mov
mov
xchg
aas
ds
loope
sbb
mov
mov
out
in
daa
xor
shr
clc
repz
sub
sbb
mov
xlat
test
aaa
repnz
add
push
adc
sub
repz
mov
cmp
sub
push
dec
cmp
pushf
sarl
inc
adc
scas
jg
fcmovne
pop
bound
pop
cli
ljmp
xor
test
into
mov
push
cs
imul
xchg
iret
fcmovnu
xor
movsl
sbb
jge
pop
sbb
sub
mov
negb
xchg
ret
jle
mov
and
sub
outsb
decl
sbb
push
dec
push
inc
pop
inc
out
xchg
inc
push
jmp
js
sub
int3
and
pcmpgtb
xchg
xchg
call
sbb
jmp
arpl
movsl
jae
test
movb
xchg
pop
xchg
sti
insb
in
pop
in
xchg
push
push
iret
orl
xchg
or
ret
scas
dec
repz
jb
inc
adc
mov
aaa
mov
mov
mov
daa
out
xlat
and
jbe
xor
int
enter
call
cmp
ret
xor
xchg
cmpsl
les
test
mov
inc
sub
and
add
mov
inc
lds
rclb
dec
dec
pop
cmp
mov
sbb
test
sbb
cmp
jecxz
or
loop
je
sub
jecxz
add
das
clc
mov
pop
push
xchg
cmpsl
sub
jb
movsb
sub
ja
fcmovb
outsb
loope
je
cmp
test
popa
jnp
inc
cmpsb
or
insb
sbb
sub
cmp
popa
mov
sbb
les
jge
ss
inc
mov
adc
mov
es
stc
rcll
stos
sbb
dec
fucomi
mov
push
push
pop
out
inc
movsb
or
lret
out
and
rolb
lret
int3
daa
mov
fcomps
xor
test
inc
cwtl
push
push
inc
test
xor
mov
fisubrl
js
adc
xorl
and
dec
mov
addb
push
mov
add
mov
nop
mov
outsb
into
xor
addb
or
incl
xor
out
ss
lods
sub
push
add
iret
scas
or
xchg
xlat
xor
in
fsubs
pop
repz
cmp
decl
cmc
sub
aaa
leave
dec
add
jnp
xlat
cmp
popa
xor
in
add
push
mov
ljmp
scas
cltd
dec
int3
out
push
loope
mov
loopne
out
xchg
jp
dec
and
and
cmpb
dec
mov
data16
dec
pop
add
in
int3
ficoms
xchg
mov
add
pop
xchg
test
jb
jge
xor
cmp
mov
enter
movsb
and
mov
jne
out
mov
cltd
add
and
mov
adc
and
push
inc
pop
hlt
push
inc
imul
jbe
ror
imul
mov
jmp
cmp
cltd
into
push
sahf
into
mov
dec
mov
std
xchg
fnsave
outsl
and
mov
xchg
jne
dec
jp
xor
push
push
das
pop
inc
jae
sbb
cmp
sbb
pop
gs
or
out
cltd
adc
mov
and
ss
popf
or
pop
adc
lods
add
aas
pop
das
inc
dec
mov
push
aam
js
sub
aaa
cwtl
stos
cltd
jle
and
repz
jg
in
mov
dec
jno
outsl
xor
out
jnp
mov
mov
pop
xor
sub
fsubrl
stos
fdivrs
std
movsb
cwtl
popl
push
test
dec
cmpsb
shll
and
dec
xor
lds
adc
sbb
cmp
or
lock
gs
flds
dec
xor
int
stos
sbb
mov
adc
sbb
mov
cltd
mov
scas
inc
xor
xor
push
mov
cmpsb
loop
add
pop
sub
fists
mov
test
adc
cmp
cs
xor
divl
hlt
mov
out
fs
aas
iret
sti
fs
imul
orb
cmp
ret
pop
test
test
jns
sbb
fldenv
lret
lahf
mov
scas
jne
push
sub
jnp
and
jnp
sbb
in
xor
pop
imul
cwtl
pop
shr
test
add
jne
dec
xchg
fwait
mov
cmp
pushf
and
adc
stos
es
sub
push
lods
mov
xor
push
sbb
sub
ja
mov
cmp
mov
and
push
pusha
xchg
ljmp
addb
jb
jns
adc
dec
je
clc
mov
dec
jne
push
fbstp
inc
adc
lds
push
rcrb
daa
dec
mov
xchg
push
sub
inc
shrb
cmp
or
xchg
pop
pop
mov
aad
mov
sbb
test
cli
xchg
sub
mov
aam
arpl
cmp
pop
jno
call
ficompl
test
mov
dec
out
jle
test
xor
repz
sbb
and
mov
mov
pop
jp
or
arpl
inc
pop
cmp
mov
jmp
fidivrl
mov
mov
sbb
add
add
nop
dec
mov
inc
jne
imull
sbb
mov
fs
imul
mov
mov
ficompl
xchg
imul
fs
adcb
cwtl
mov
repnz
sbb
imul
mov
movsl
inc
jge
xchg
and
mov
sbb
cltd
test
or
jmp
mov
mov
movsb
pop
lcall
fnstenv
aam
js
xchg
dec
mov
and
cmpsb
loope
mov
pushl
icebp
flds
je
jne
rcrb
pop
sub
aad
xchg
mov
idivl
in
mov
aaa
orl
clc
sahf
xchg
sbb
jbe
cmpsb
jb
jmp
xorl
xor
scas
inc
ret
xchg
xchg
rolb
xchg
sub
xorl
rcrl
xchg
add
cmp
movsb
clc
jae
outsl
mov
inc
push
clc
fdiv
and
jb
inc
mov
lcall
leave
test
mov
push
push
mov
mov
lahf
pop
mov
cmp
or
bound
xchg
or
jo
in
ficoms
dec
cmp
push
adc
or
int3
and
pop
std
sbb
lods
add
cmpsl
ret
xor
mov
loop
cmp
cmpsl
pop
fwait
cmpsl
mov
dec
xor
mov
daa
mov
xchg
sub
dec
in
leave
sti
aas
sub
sbb
fwait
cmpsl
arpl
hlt
addr16
xchg
dec
mov
lea
out
pop
arpl
push
sub
add
mov
mov
in
imul
jmp
push
outsb
jecxz
movsl
sub
pop
les
cwtl
std
mov
loop
push
repnz
inc
outsl
int
pop
fistl
inc
notb
daa
sbb
in
scas
pop
cwtl
mov
addr16
add
mov
push
xchg
fisubrs
pop
negb
cmp
rorb
loop
fs
jno
orl
stos
fmul
sahf
xchg
rcrb
out
ret
int3
push
sub
jl
jbe
pop
out
push
adc
cwtl
adc
sbb
add
jnp
in
les
pop
inc
pop
dec
sub
xlat
inc
xchg
es
pop
pop
fwait
xor
dec
push
sub
and
inc
pop
out
pop
insl
push
xchg
jge
pop
lods
xchg
xchg
loop
sbb
das
mov
pop
push
int
aas
into
je
jo
dec
xchg
dec
fnstenv
xchg
rcl
inc
cmpsl
in
push
and
test
pusha
fistpl
mov
push
push
xchg
jge
data16
inc
loope
mov
fs
lret
push
test
push
cmpsb
and
mov
sbb
jg
push
mov
js
adc
lahf
jge
leave
mov
fistpl
xchg
and
leave
jl
and
test
xchg
das
add
mov
clc
push
push
stos
push
testb
in
xchg
xor
push
in
divl
stos
addl
data16
mov
inc
fcomi
xchg
insl
add
xchg
int3
dec
pop
into
xlat
and
xor
inc
xchg
cli
push
adc
ret
sub
leave
pop
out
xchg
ss
mov
movsl
cmp
repnz
add
sbb
mov
adc
dec
xor
dec
cltd
xchg
push
imul
sbbl
cwtl
repz
out
ret
inc
mov
mov
cld
or
aaa
mov
mov
out
jno
push
in
aas
xchg
pop
and
jl
in
xor
insb
push
push
mov
xor
je
mov
cmpsl
js
mov
push
xchg
cmpsl
fidivrl
imul
pop
pop
cmc
dec
test
push
inc
xor
iret
or
imul
js
fstps
xchg
scas
nop
clc
cltd
lret
push
test
xor
and
notl
cwtl
lock
xorl
cmp
movsb
dec
testb
test
nop
mov
out
inc
sbb
clc
sarl
jge
xor
xor
outsb
jo
pop
scas
mov
loopne
push
xchg
xchg
aaa
repz
and
push
lcall
ficompl
fcomps
fldcw
js
andl
sub
push
ds
or
orl
adc
adc
push
out
cmpsb
cli
into
sbb
sbb
mov
pop
lds
inc
push
hlt
gs
shl
cmp
jecxz
fldz
mov
mov
adc
xchg
mov
shl
mov
insl
adc
cwtl
das
cmp
addl
add
std
mov
jg
and
je
imul
scas
xchg
int
dec
ror
xor
rcrb
or
adc
enter
xchg
sub
imul
sbb
adc
add
arpl
push
lods
hlt
or
stc
xchg
xor
xchg
repz
into
ss
cmpsb
mov
in
shrl
mov
jge
dec
imul
sahf
xlat
jo
adc
jle
inc
fsubl
lds
xchg
ljmp
lcall
pop
ljmp
hlt
mov
ss
adc
sub
call
jbe
lds
loop
jp
pop
ds
lret
push
movsb
jmp
cmp
sub
dec
pop
dec
nop
pop
push
enter
jg
sbb
enter
loop
outsl
dec
inc
mov
add
mov
call
mov
pop
push
sbb
xchg
jg
ret
push
jle
adc
ffree
sarb
andl
scas
and
mov
enter
outsl
jae
mov
outsl
cmpsl
pop
icebp
cwtl
push
jp
pushf
aas
movsb
push
pop
fldlg2
fwait
or
gs
adc
mov
push
inc
xlat
mov
push
pop
cmc
xchg
movsl
xchg
bound
cmp
xchg
mov
mov
inc
in
sub
gs
dec
xor
out
ds
push
mov
sbb
aaa
pop
cmp
andb
xchg
addr16
rorl
stc
jbe
mov
insb
inc
jg
xor
dec
jmp
push
sbb
fldenv
mov
add
outsb
mov
aas
inc
mov
mov
inc
inc
xchg
iret
xchg
and
xchg
add
and
lea
jnp
pop
not
andb
scas
xor
std
movsb
and
cmp
rcll
das
ror
adc
sub
jne
and
movsl
fdivp
cld
xchg
and
xchg
dec
repz
lcall
and
pop
and
bound
sbb
add
test
data16
iret
or
gs
insb
mov
fstpt
xchg
pop
ret
push
push
es
sub
jae
mov
loopne
sbb
xor
mov
push
xchg
int3
cs
bound
fwait
pop
ss
int
jp
outsl
inc
clc
je
mov
sub
popa
negl
addb
or
jge
fsubs
insl
sub
stos
lahf
imull
pop
mov
push
imul
jecxz
add
inc
mov
jno
idivb
jmp
or
cs
cltd
call
mov
dec
in
mov
out
inc
xlat
stc
mov
or
adc
push
lcall
idivb
hlt
out
popf
sub
cltd
jbe
xchg
jg
les
mov
push
rcrl
jge
sbb
jle
out
add
lods
or
push
testw
data16
dec
mov
and
mov
push
push
dec
push
xorb
and
pop
or
xchg
sbb
in
in
xlat
aam
in
pop
fistpll
cli
pop
jae
add
xor
sub
bound
or
push
xchg
add
pop
in
jge
sahf
orl
adc
add
mov
push
in
push
out
leave
test
mov
add
push
icebp
push
addb
mov
ja
out
mov
lods
xchg
rcrb
mov
and
ficoml
xor
adc
sahf
inc
and
sub
push
dec
std
nopl
inc
rcrl
jecxz
out
mov
insb
pop
sbb
mov
xchg
xchg
outsl
mov
loopne
cmp
xor
xchg
xchg
xchg
xchg
dec
pop
aas
or
data16
cmc
push
push
popf
mov
sub
mov
mov
sbb
add
adc
enter
mov
std
mov
scas
shl
or
clc
jnp
sub
sub
sbb
cmp
or
lcall
lea
ret
jle
inc
cs
mov
cmpsb
mov
popa
push
pop
lock
ror
push
in
loop
arpl
lods
sub
addb
nopl
fucomi
setl
mov
das
xor
insb
push
cs
xor
dec
xor
mov
pop
in
add
add
nop
jae
sti
mov
dec
pop
push
mov
sub
rorl
jns
ljmp
jnp
cmp
scas
jnp
push
push
enter
jne
fst
fisttpl
xor
divl
jp
mov
or
out
ret
rcl
inc
filds
xor
add
in
xchg
iret
mov
data16
lahf
test
mov
outsb
mov
cltd
mov
cmpsb
rol
jmp
dec
mov
lock
sbb
or
adc
pushf
pop
mov
std
inc
insb
scas
and
data16
dec
call
dec
cmpsl
cmp
es
popf
mov
inc
mov
cmp
cmc
xchg
fcoms
fcmovb
sub
outsb
dec
in
loope
stc
push
pop
inc
jl
andl
adc
divb
mov
fadd
rorb
inc
les
cmpsl
stc
out
mov
and
add
adc
hlt
mov
pop
jmp
jecxz
aas
dec
xchg
add
push
sub
dec
je
in
les
ds
sub
out
jae
xchg
das
mov
jl
mov
jp
sub
jb
mov
cs
pusha
pop
negb
mov
push
mov
jo
test
and
bound
push
aaa
popa
mull
adc
ds
xor
pop
add
loop
sub
mov
movsl
cld
and
scas
call
insb
test
mov
jb
out
and
sbbb
jecxz
imul
mov
push
push
call
enter
fucomi
cwtl
inc
inc
add
ja
in
shlb
sbb
scas
mov
jecxz
lea
mov
pop
push
jmp
cmovbe
negb
xchg
gs
pop
xor
jbe
or
js
cmp
push
and
or
jno
loop
repz
out
push
imul
adc
pusha
jo
mov
dec
int3
add
mov
xchg
aam
dec
aas
cmp
repnz
jg
pop
adc
inc
pop
xchg
xchg
xchg
data16
cwtl
mov
imul
pop
sbb
jns
scas
inc
and
mov
mov
out
xchg
mov
je
fmull
mov
push
xor
test
mov
xchg
mov
mov
or
adcl
cltd
das
les
mov
mov
outsl
js
mov
add
stos
mov
out
jle
cmp
inc
push
lcall
pop
lcall
daa
fisubs
xlat
or
mov
pop
mov
lea
mov
outsb
icebp
imul
fldt
shll
mov
push
mov
mov
lea
cltd
sbbb
test
and
in
cwtl
xor
testl
movsb
into
push
stos
in
ljmp
cli
jae
push
out
adc
clc
inc
inc
cli
cmp
int3
push
inc
push
dec
adc
sub
jl
sbb
pop
loopne
mov
push
adc
mov
out
cmp
jns
ljmp
push
in
xor
in
test
popa
stos
inc
xor
or
aam
pop
imulb
sbb
mov
icebp
mov
stc
sbb
mov
xchg
mov
push
mov
icebp
sahf
cld
insl
jmp
sbb
or
mov
mov
xchg
sbb
outsb
iret
pop
dec
push
es
mov
not
ret
mov
arpl
pop
imul
xor
je
cmp
sahf
ret
cwtl
imul
mov
sbb
or
in
push
inc
lret
sbb
xor
mov
mov
adc
cs
sub
je
cmp
jbe
pop
das
xchg
mov
fldl
test
mov
or
pop
loop
xlat
mov
xchg
in
mov
les
fists
mov
dec
orl
pop
push
aam
lods
sbb
adc
mov
jl
pop
gs
sub
stos
loopne
sbbl
jp
sub
mov
xchg
push
andb
repz
ljmp
push
jne
in
dec
dec
mov
fisubl
xchg
pop
dec
sub
js
arpl
int3
lods
fsubrl
into
jnp
inc
cld
out
pop
push
xchg
aad
jae
aad
sbb
mov
in
cltd
rol
icebp
mov
mov
iret
addr16
flds
or
xor
sub
jle
scas
mov
xor
stc
sarb
push
in
cmp
xor
leave
or
mov
or
iret
xorb
sbb
mov
xchg
cli
xchg
js
add
cs
sbb
stc
mov
rclb
fwait
pop
cmpsb
and
jmp
adc
xchg
pop
push
insb
jecxz
push
outsb
add
sub
sub
dec
je
shrb
push
inc
and
enter
cmp
repz
mov
mov
jmp
je
mov
pop
mov
add
cmp
xor
js
pop
jne
inc
js
push
cmp
adc
pop
fists
jge
lds
lahf
movsb
push
dec
jp
lds
ret
andb
fistps
sbb
and
xchg
daa
insl
nop
daa
aaa
dec
pop
leave
jns
scas
adc
cmc
addr16
movsl
out
xlat
dec
sub
hlt
sahf
or
jno
outsb
fdivl
and
mov
cmp
jo
sbb
jl
es
fiadds
jge
mov
add
scas
ror
ljmp
mov
push
and
mov
sub
shrl
inc
sbb
push
addr16
adc
sti
xchg
and
adc
sbb
cmpb
sbb
adc
shlb
sbb
inc
cmp
mov
adcb
ds
xchg
daa
cmp
inc
stos
jae
scas
xor
jns
int
out
xchg
sbb
jno
mov
mov
mov
sub
pop
sub
mov
mov
icebp
out
pusha
xchg
das
cmpsb
ds
add
inc
lds
xchg
out
cli
sub
push
and
push
or
xchg
sub
xchg
dec
or
lahf
pop
in
jl
test
out
das
addr16
push
movsl
adc
inc
daa
insl
sarb
lahf
test
lcall
jbe
mov
jb
pop
sub
les
adc
inc
jne
and
sub
pop
xchg
pop
mov
in
sub
ss
mov
push
pop
in
adcl
arpl
fs
mov
loope
dec
mov
lds
inc
add
lahf
cmp
mov
ret
lcall
clc
fwait
sub
imul
mov
add
fisubrs
int
sti
stos
sub
sbb
notl
leave
mov
and
int
fmul
xchg
or
adc
jecxz
fildll
filds
incl
fisubl
cmc
push
imul
jbe
and
clc
cwtl
aaa
into
clc
jb
or
sub
insb
adc
sbb
cpuid
xchg
aam
push
and
dec
cmp
loop
mov
sbb
fcomps
les
mov
add
sbb
lods
add
mov
lods
and
pop
out
popa
loopne
mov
pop
add
mov
gs
jbe
jle
sbb
mov
and
iret
incb
fnstsw
xlat
in
jmp
or
sub
xor
jns
adc
xor
shll
mov
lahf
pop
pop
loope
aad
mov
dec
es
add
adc
pop
mov
and
bound
xchg
pushf
outsb
add
push
lea
or
hlt
mov
fbstp
or
aam
jge
aas
mov
push
negb
inc
scas
outsb
loopne
jno
popf
inc
arpl
movsl
imulb
and
mov
and
jns
test
push
push
negb
scas
daa
cmp
xor
cwtl
xor
in
popf
or
ljmp
lahf
add
pop
push
jnp
out
pusha
sbb
push
in
cmp
push
icebp
dec
vcvttpd2dqx
out
sbb
into
gs
push
pop
mov
rolb
aaa
jge
fwait
push
cli
insb
add
jne
push
orb
sbb
sub
insb
jae
scas
fmull
pop
add
or
mov
inc
flds
or
stos
sahf
sub
scas
or
fdivl
ss
push
sbb
stos
fisubl
ja
lret
ret
dec
rorw
sbb
mov
test
mov
cld
negb
xchg
lcall
jbe
pop
mov
int
outsb
lret
lods
inc
out
out
sbb
into
lret
addr16
data16
inc
fmull
and
fcompl
sub
fnstsw
push
insb
arpl
xchg
dec
xchg
jmp
fs
ds
ss
and
push
jge
mov
sbbb
leave
out
into
pop
stos
test
out
mov
sub
dec
mov
lea
gs
pop
fs
inc
mov
mov
xchg
popf
call
clc
rcrb
icebp
jb
pop
mov
push
int3
mov
xor
insb
pusha
gs
sbb
xchg
mov
dec
or
dec
aas
and
jl
pop
push
xlat
sub
pop
fcmovbe
sub
lods
push
outsl
and
iret
fcmovne
je
addr16
mov
sub
cli
mov
lods
jnp
je
add
scas
jp
loope
and
sbb
je
xor
jle
adcb
andl
mov
jb
or
mov
or
cmp
push
stos
lods
inc
or
in
aam
cmpl
movw
pushf
ficoms
arpl
inc
nop
inc
pusha
jnp
and
lock
cmp
test
ds
loopne
dec
test
das
mov
js
mov
cmp
daa
fbld
adc
and
test
adc
mov
mov
push
sub
xor
mov
ret
popf
bound
lahf
push
sahf
jp
jnp
or
jne
or
sbb
jae
mov
mov
mov
xchg
pop
inc
adc
pop
xor
popf
inc
pop
test
ret
or
outsl
cmpb
into
cmp
lret
and
call
stc
or
xchg
test
xchg
ret
push
lods
xchg
lods
sub
dec
iret
push
outsb
or
mov
int3
xchg
inc
ds
insb
or
mov
mov
mov
test
and
jnp
pop
scas
xchg
push
sub
repnz
jb
xor
sub
movsb
out
pop
test
inc
sbb
sarb
sahf
adc
int
rcrl
dec
gs
rorl
xlat
jae
jle
xorl
js
xchg
pop
sbb
aad
out
mov
cmp
call
or
jae,pt
inc
jae
insl
and
sub
mov
mov
jmp
test
outsb
int3
fdiv
cmp
sbb
cmp
and
mov
lret
mov
dec
pop
outsl
mov
mov
xor
sub
dec
and
jns
insb
decl
jae
enter
popf
insb
mov
fistpll
jae
cltd
cmc
xchg
mul
loop
adc
xchg
push
insb
jecxz
or
and
fmul
in
je
mov
jo
and
enter
clc
stc
pop
jmp
and
cmpl
fwait
or
inc
inc
movsb
ljmp
or
lock
insw
adc
inc
lea
out
and
jnp
mov
push
es
cmp
rorb
pop
shlb
sti
mov
or
and
ret
jp
jge
sti
pop
ret
pushf
pop
jge
inc
push
jp
loope
mov
add
mov
icebp
outsl
daa
imul
push
mov
sub
shlb
dec
dec
push
sti
xchg
mov
stos
or
xor
and
cmpsl
and
push
or
dec
push
cltd
or
dec
cmp
data16
pop
sub
xchg
add
sbb
andb
or
imul
aaa
into
clc
mov
pop
std
lods
jo
mov
push
or
ja
and
test
sbb
ds
ret
jle
adc
aas
jmp
out
inc
sti
mov
adc
and
sbb
and
jmp
aad
cmp
stos
cmp
xchg
adc
ja
int
or
cmpsb
addr16
ljmp
pop
sbb
pop
jmp
pop
push
inc
pop
xchg
pop
mov
les
stos
cmp
xor
xchg
aas
lcall
inc
adc
jo
fildll
mov
xor
pop
jge
xchg
sbb
sbbl
fldt
scas
popa
stos
mov
push
cmp
dec
mov
inc
adc
int3
pop
push
pop
movsl
icebp
xchg
mov
js
mov
jp
gs
xchg
sub
push
mov
ss
mov
arpl
out
mov
jo
cmp
mov
jne
add
test
sub
mov
notb
popf
jmp
push
jns
hlt
scas
push
lret
inc
scas
call
outsl
ljmp
mov
add
stos
lahf
jne
addr16
dec
cwtl
enter
mov
test
inc
and
xchg
mov
loopne
xchg
lods
pop
ds
xor
pop
sahf
sbb
adc
push
add
lret
testb
imul
jmp
frstor
fiaddl
adc
sub
xchg
sub
sbb
inc
sbb
push
int3
idivl
daa
stos
cmpsb
xchg
sbb
shld
aam
sbb
loopne
xchg
pop
sahf
mov
dec
sti
add
dec
ss
gs
mov
cltd
mov
inc
addr16
test
je
inc
inc
jae
xchg
pop
push
add
or
imul
insl
in
adc
and
cmpsl
lock
rclb
mov
xchg
push
or
popa
inc
push
jb,pn
popf
xchg
imul
adc
xchg
dec
fcmovb
or
sbbl
loop
sub
imul
pushf
lret
pop
xchg
int3
mov
das
inc
pop
and
cmp
and
jle
frstor
lret
pop
dec
mov
das
das
or
jp
or
inc
jg
lahf
ljmp
std
fwait
out
xlat
movsb
push
mov
sbbl
or
repz
sahf
mov
call
mov
cmp
sti
adc
pop
aaa
cltd
push
xchg
repnz
mov
push
and
stos
outsl
shll
mov
sub
lret
sub
lock
xor
adc
mov
repz
adc
mov
std
imul
sub
pop
ficompl
adc
push
xor
adc
cld
sub
mov
gs
sbb
xlat
inc
in
mov
loope
xchg
push
fcomip
mov
push
pop
ds
jmp
push
sub
push
movsb
and
pop
dec
jno
jnp
adc
mov
out
add
and
lret
sar
mov
cmpsl
aad
jbe
add
sbb
jg
sbb
popa
add
mov
push
daa
out
xchg
popf
stc
popf
das
xchg
lods
or
lea
sub
push
sub
cmpsl
push
mov
push
cli
dec
out
fisubrs
das
xchg
into
aam
jle
or
adc
lret
jp
add
jb
adc
out
add
and
pop
jbe
inc
adc
cs
sbbb
mov
popf
mov
insb
lahf
or
in
sbb
mov
xchg
push
test
jle
adc
push
mov
mov
fisttpll
ret
push
aaa
inc
addl
dec
adc
pop
sahf
in
xor
popl
data16
aad
sbb
xchg
leave
push
jae
gs
xchg
mov
cmp
clc
fidivl
inc
and
cltd
mov
and
insl
pushf
in
pop
or
push
sahf
mov
xor
add
flds
scas
push
les
stos
mov
pop
cwtl
mov
pop
dec
hlt
push
jbe
cltd
cmp
sub
xor
adc
mov
hlt
cmp
mov
cs
xlat
cs
ret
enter
mov
rclb
outsl
xchg
sbb
es
adc
clc
jl
aas
int
movsb
xchg
loop
and
ret
addr16
clc
sub
xor
or
int3
test
out
mov
jge
cmp
dec
dec
push
or
jo
cld
sub
es
push
mov
push
das
or
dec
pop
fcmovnb
push
xchg
add
mov
aaa
sahf
mov
inc
pushf
xchg
add
fnstcw
mov
xchg
push
lret
sbb
sbb
fbstp
dec
or
push
push
add
jle
jno
jo
addr16
cltd
pop
test
decl
push
mov
repz
call
mov
mov
or
rcrb
mov
pushl
sahf
add
scas
and
outsb
test
inc
lret
mov
cmc
mov
mov
negb
lcall
lods
jo
pushl
mov
or
les
outsl
cs
xor
fwait
rcr
lret
add
jle
xor
and
cmp
sbb
jmp
mov
jo
cli
xchg
or
xchg
test
pop
xchg
fidivrl
mov
pop
add
adc
test
pop
movsl
sbb
inc
clc
add
js
scas
inc
jmp
repnz
das
es
mov
push
bound
jmp
jmp
add
fsubrp
pusha
cmp
fisubrl
jno
mov
popa
and
sbb
in
add
repz
and
fnsave
xchg
ret
call
jmp
xor
mov
test
sbb
or
repz
cld
pop
aaa
push
sub
cmp
xchg
test
fistl
inc
push
sbb
loope
jb
push
lock
mov
and
test
mov
je
xor
cs
sub
push
scas
jl
loopne
jno
xchg
inc
sub
in
inc
mov
insb
jle
lea
mov
push
sub
lret
mov
sbb
stos
cwtl
out
jae
mov
xchg
jbe
int
nop
daa
cmpsb
out
negb
xor
mov
loope
xchg
add
mov
stos
mov
fnstsw
push
std
adc
push
call
fsubrl
insb
je
push
xor
aam
push
cmc
mov
out
cmp
pusha
or
out
mov
xor
or
ja
mov
nop
inc
test
adc
mov
iret
aaa
mov
dec
or
mov
hlt
inc
adc
xor
fbstp
push
fcmovne
pop
push
idivb
mov
mov
ds
imul
sbb
mov
dec
dec
imul
rorl
adc
in
fidivrs
aad
repz
test
or
inc
cmpl
jo
addl
push
or
mov
cmp
stos
pop
mov
addl
dec
fsts
jo
mov
sub
shrb
stos
cmpsl
lods
xchg
and
xchg
sbb
push
repz
mov
loop
rol
fs
or
mov
push
cmpsl
xchg
ds
mov
das
jge
xor
lock
push
inc
jmp
adc
in
xor
sti
stos
add
push
xchg
inc
inc
sarl
aad
mov
cmp
or
int3
das
lds
jge
mov
mov
push
in
xor
xor
adc
scas
sbb
mov
loope
ljmp
insl
std
das
sub
pop
or
sub
rcll
je
sbb
dec
jb
adc
pusha
leave
arpl
cmp
movsb
and
xchg
push
sbbl
ljmp
das
mov
or
pop
mov
push
sub
xchg
mov
cmc
mov
xor
imul
icebp
mov
scas
sbb
or
mov
lret
sbbb
jl
mov
cmp
and
inc
fsubl
mov
arpl
lret
mov
popf
sbbb
sub
hlt
pop
mulb
lret
fwait
inc
inc
inc
aaa
in
dec
inc
mov
or
lods
mov
ja
rcrl
jmp
outsl
lds
push
inc
inc
mov
jb
jg
pop
ret
out
dec
arpl
add
ds
jno
lahf
mov
pop
repz
movsl
mov
pop
js
lahf
mov
lret
pop
or
mov
ret
dec
xchg
fdivrs
add
fyl2x
cmp
outsb
cmovg
push
or
push
loop
in
jmp
fdivr
xchg
jp
add
cmp
call
ret
xchg
js
loop
sub
loop
fnstcw
sbb
sti
xor
outsl
scas
fs
and
loop
mov
dec
adc
sub
cld
or
les
ljmp
mov
jmp
add
mov
cwtl
jp
jne
xor
cmp
inc
les
mov
pop
icebp
xchg
aas
dec
mov
jae
mov
cmpsb
inc
inc
fnstenv
data16
sub
pop
in
dec
dec
test
jecxz
lods
inc
ret
mov
jecxz
lret
dec
push
aaa
sub
pushf
loop
add
outsl
out
mov
or
and
sbb
mov
mov
fdivs
or
test
dec
xchg
xlat
dec
in
inc
loopne
data16
call
push
sti
popa
shrl
sbb
cmp
popf
mov
sub
sub
int3
jmp
in
push
add
insb
adc
or
loop
add
out
and
fmul
add
jns
cmp
jnp
andb
rclb
andb
jno
dec
das
addr16
dec
mov
fwait
xor
adc
lods
push
mov
mov
cmp
into
mov
stos
jg
and
pusha
inc
inc
cmpsl
outsl
pop
sub
iret
orb
pop
call
mov
repnz
push
es
adc
xor
pop
lret
sub
imul
mul
popa
pop
mov
sar
je
or
inc
mov
cmpsl
push
out
out
xchg
ja
mov
les
sub
push
or
jo
cmp
sub
adc
enter
mov
sub
sbb
stos
ret
out
pop
leave
xor
adcb
and
leave
pusha
lret
fucom
cmp
mov
mov
cmpsb
shl
dec
testb
mov
sub
xchg
xor
push
sub
pop
and
scas
mov
jge
jns
insb
add
mov
pop
ljmp
jecxz
call
inc
rorb
adc
andl
lret
pusha
xchg
jbe
mov
cli
adc
mov
pop
xor
and
int
ljmp
test
mov
ffree
cmc
fmuls
mov
jl
lods
xchg
int
aas
sti
test
add
call
add
push
jo
int3
cs
xchg
cs
insl
cmp
sub
cmc
cli
pop
les
sbb
roll
outsl
mov
adc
mov
mov
inc
call
cmc
shrb
dec
pop
mov
mov
test
lods
mov
ss
mov
xchg
sub
cmc
mov
pop
test
in
outsl
rol
push
pop
mov
xchg
pop
aaa
sub
mov
cmp
imul
out
lds
pop
or
ret
xor
dec
mov
ret
inc
testl
outsl
int
fwait
inc
stos
out
mov
cmp
ljmp
fsubl
xor
push
out
xchg
lret
mov
jmp
and
xchg
inc
bswap
inc
popf
jo
push
xchg
rolb
movsb
mov
mov
inc
sarb
sub
mov
fidivl
outsb
aaa
inc
pop
cmp
xchg
push
das
xor
jmp
push
in
xchg
insb
jbe
sbb
test
andb
and
rclb
call
jmp
into
sub
push
pop
mov
sub
insb
mov
push
loop
je
ds
xor
imul
add
dec
adc
push
pop
test
jl,pt
xor
stos
mov
icebp
pop
out
rol
pop
jp
rcrl
pop
ret
idivl
push
adc
xor
xor
mulb
mov
out
add
sub
mov
adc
push
out
xor
dec
divb
xchg
inc
js
inc
negb
testb
pop
or
jo
in
test
outsl
aaa
inc
out
add
in
xchg
repz
and
lahf
je
dec
repnz
mov
clc
dec
and
iret
pop
jmp
scas
fstpl
shlb
mov
movsb
out
push
adc
js
mov
aad
sti
sub
push
insb
and
push
hlt
inc
jge
lock
in
mov
int
stos
cmp
push
lcall
ljmp
lret
inc
dec
sbbb
cmp
xor
jns
loopne
faddl
in
jl
pavgb
jp
jmp
pop
leave
jo
and
pusha
insl
scas
mulb
movsl
cmp
add
dec
xchg
sub
test
mov
stc
pop
loopne
jp
les
loop
pop
sahf
pop
or
in
sbb
rcl
add
pop
flds
outsb
dec
adc
add
push
xlat
pop
and
lcall
in
push
addr16
loope
xor
or
jnp
sar
nop
cmp
and
add
das
xor
shll
push
mov
rorb
xchg
xchg
scas
mov
cmp
pop
pop
mov
pop
jbe
adc
jmp
lahf
mov
pop
out
mov
mov
xchg
pop
cmp
pop
shlb
jnp
mov
cwtl
adc
adc
xor
ficomps
mov
dec
dec
mov
push
addl
add
adc
ss
xchg
arpl
sbb
adc
fidivrl
sbb
and
into
int
fmulp
loopne
gs
pop
add
out
add
xor
in
xchg
jo
mov
cmp
push
or
sbb
mov
dec
jmp
in
or
mov
repnz
jp
insb
mov
jle
jae
outsl
lcall
inc
arpl
lcall
push
mov
jbe
stos
and
in
pushf
pop
inc
xor
jbe
fwait
or
sub
mov
mov
mov
jl
pop
icebp
push
pushf
call
movsb
ret
mov
pop
mov
mov
inc
fisubrl
std
out
add
popa
int3
jle
dec
movsl
sbb
outsl
dec
dec
push
or
packssdw
add
inc
pop
cmpsb
inc
pop
cmpsl
ret
ljmp
insl
push
pusha
aas
or
push
xchg
fwait
and
sbb
push
mov
jg
data16
int
daa
lcall
or
add
cmpsl
rcrb
ds
mov
call
out
pusha
stos
int3
movsb
dec
add
push
add
in
xchg
pop
inc
das
cmpsb
lods
push
int
mov
jo
mov
lock
adc
lret
mov
repz
insl
and
shrl
mov
xor
adc
insb
mov
int3
imul
imul
pop
out
jl
push
or
sbb
popa
btc
sbb
rol
push
arpl
scas
scas
inc
loope
add
sbb
dec
push
adc
cmp
test
arpl
aaa
mov
fadds
xchg
ja
pop
into
sbb
lcall
add
out
xor
out
sub
cmc
shrl
sub
ja
jb
scas
inc
xor
andb
fwait
xchg
push
repz
stos
jo
popf
and
test
or
nop
cmc
fcoms
out
test
movsl
jge
dec
out
cmpb
std
jl
dec
mov
sti
imul
adc
jp
pop
cmp
or
sub
xor
sub
dec
sub
cmp
adc
cmp
lahf
pushf
push
sub
jl
push
xor
xchg
addl
sub
jae
xchg
xor
push
idivl
and
in
jg
add
jge
pushf
inc
jne
cltd
stc
daa
outsl
insl
add
or
scas
cmp
or
mov
insb
mov
cs
ds
cmp
dec
scas
lods
inc
loope
or
ja
push
fucomp
adcl
jle
ljmp
insl
data16
test
or
dec
or
dec
jbe
sub
test
mov
jp
ljmp
jnp
add
or
lods
lock
call
jge
in
in
rcrb
mov
repnz
insl
add
cmp
mov
lea
add
lea
icebp
jb
out
stos
jne
test
aas
lods
push
lret
adc
mov
jecxz
xchg
mov
inc
icebp
imul
and
dec
and
lahf
xor
mov
cmpb
mov
ret
in
pusha
mov
pop
fcoml
push
adc
jo
aad
pushf
mov
testl
push
fcoms
adc
dec
inc
and
adc
mov
pusha
shl
jno
xchg
inc
add
sbb
cmpsb
test
in
scas
push
sti
jns
ljmp
cmp
test
movsb
pop
pop
mov
sbb
inc
pop
rorl
hlt
pop
scas
and
clc
sub
rorb
sbb
or
mov
scas
push
lahf
pusha
stc
je
aaa
aaa
dec
bound
adc
arpl
cmp
ds
lods
mov
lret
inc
jae
or
movsl
cmp
outsl
jl
xchg
dec
inc
inc
cmc
adc
dec
pop
cmp
ret
mov
out
dec
lcall
leave
loope
je
repz
inc
and
xchg
cli
add
jg
dec
push
test
adc
jecxz
or
adc
dec
push
push
xchg
dec
shll
adc
jmp
or
xchg
inc
les
mov
mov
mov
mov
pop
call
cmpsl
mov
xor
xor
test
lea
xor
xchg
xchg
and
test
inc
push
insl
lods
inc
pop
and
ljmp
inc
lock
ljmp
jno
pop
adc
xchg
and
outsl
jns
xlat
hlt
mov
mov
std
movsb
aas
imul
jle
add
sub
sub
fisubrl
mov
jb
orb
push
out
inc
or
insl
clc
aaa
stos
inc
fnstsw
incl
pop
imul
cmp
out
scas
lods
mov
jmp
xor
jmp
movsb
daa
inc
inc
push
out
mov
mov
sub
aaa
stos
mov
cld
std
in
or
xor
and
leave
lcall
xchg
push
mov
xchg
aas
dec
clc
jle
xlat
jg
movsb
aaa
outsl
sbb
out
test
push
fadd
push
loop
jo
xor
dec
xchg
test
cmpsb
popf
into
xchg
inc
jp
test
icebp
jecxz
or
notl
test
mov
stos
add
fldcw
shl
pop
and
test
dec
movsl
stc
iret
mov
imul
ja
repz
xor
sbb
xlat
sbb
mov
xor
push
pushf
dec
push
addb
push
add
fcomps
jb
icebp
nop
gs
cwtl
and
flds
insl
mov
push
lods
jo
test
or
cld
loop
aaa
dec
fidivl
inc
in
je
stc
and
lret
jge
ficoms
ljmp
mov
xchg
lret
bnd
and
or
imul
push
lock
shlb
out
mov
or
adc
push
pop
hlt
scas
sub
xchg
fnop
jnp
jle
hlt
dec
cmp
adc
pop
ja
sbbb
nop
movsb
pop
scas
pop
mov
mov
sub
mov
pop
nop
daa
push
xor
dec
jmp
cmp
movsl
sub
push
scas
out
sub
repnz
mov
pusha
popf
adc
mov
xor
ret
sbb
idivb
inc
aad
sti
out
and
inc
jnp
popa
mov
es
fbstp
add
or
lods
push
jp
mov
mov
and
mov
mov
add
adc
in
call
sub
pop
lret
adc
nop
pop
jo
sub
sbbl
dec
sub
gs
mov
push
push
in
add
pop
add
out
out
mov
ret
hlt
adc
mov
add
lock
sbb
fwait
lods
and
fdivl
inc
jecxz
fstps
fstp
dec
cmp
stos
enter
gs
mov
ret
cmc
popa
jnp
faddl
xchg
push
movsb
into
mov
das
add
cltd
cmpsb
adc
cmpsl
pop
dec
fwait
xchg
ret
fcomip
hlt
clc
arpl
mov
call
cmp
js
pop
inc
aas
dec
int3
adc
jbe
cmp
fstl
xchg
jne
sub
mov
or
inc
shlb
push
mov
pop
inc
fsubl
shll
out
ljmp
out
xchg
sub
pushf
cmp
loopne
xor
clc
popa
loope
repz
add
jl
adc
xor
xchg
mov
sbb
xchg
fcomi
adc
in
dec
loopne
jl
test
push
add
test
pop
push
sbbl
hlt
pusha
pop
aad
mov
cmp
fldcw
dec
push
sti
and
xor
inc
push
xor
jp
int3
and
dec
arpl
shrl
pop
inc
xchg
cmp
out
fsubp
fwait
cs
pushl
or
sub
mul
add
ds
stos
jb
ds
loope
ret
out
ret
addr16
dec
stos
mov
jne
fwait
pusha
xor
jbe
inc
push
jmp
sbb
push
add
test
mov
mov
jl
out
xor
sbb
icebp
dec
rol
icebp
inc
xor
dec
in
mov
xchg
cmp
dec
xchg
jecxz
jbe
adc
pop
cmp
int
jo
bound
aad
stos
sbbb
mov
inc
leave
fcomps
cmc
xchg
mov
jecxz
pop
mov
sub
js
sbb
pop
dec
sub
mov
jge
ss
lods
cli
cltd
nop
je
testl
pop
shlb
jecxz
pushf
xchg
adc
sub
je
test
adc
lds
adcl
out
mov
or
lea
orb
jge
bound
loopne
xchg
jge
aaa
cmp
mov
pop
lcall
inc
popa
cwtl
sarb
pop
adc
lea
jmp
mov
push
clc
push
inc
call
or
in
mov
jo
sbb
mov
xchg
xchg
inc
mov
xlat
sbb
and
ret
roll
in
pop
pop
mov
std
mov
mov
rcrl
xchg
in
pop
or
jmp
mov
inc
ror
mov
and
cmpsl
js
or
test
shrl
mov
loop
negb
aam
xchg
mov
pop
jmp
sbb
mov
jne
cmpsl
or
sub
adc
adc
testl
lret
pushf
xchg
push
xchg
sub
js
jp
rorb
out
add
lods
xchg
xor
daa
jp
andl
pop
dec
cwtl
mov
pushf
repz
int
sti
xchg
iret
inc
push
ds
lock
or
filds
mov
in
arpl
call
xchg
cmpsl
out
pop
mov
xor
cmp
fidivs
scas
insb
test
xor
push
test
lcall
js
cmpsb
inc
cs
dec
pusha
push
loopne
cmp
lods
outsl
in
addl
inc
fidivrl
mov
es
xchg
adc
cmpsb
add
sub
push
lahf
or
stc
adc
xchg
xor
fisttps
mov
cmp
mov
imul
push
mov
push
cmp
ss
cmp
push
insl
push
push
xchg
les
sbb
push
add
sub
mov
lods
sub
lahf
sub
sub
js
jb
int3
mov
popa
inc
orb
adc
arpl
mov
into
gs
xchg
mov
call
stc
shrl
je
and
inc
filds
arpl
mov
ret
rcrl
mov
daa
xor
sti
test
mov
ljmp
push
out
jg
mov
pop
cli
add
xor
aad
gs
jno
jb
ret
dec
arpl
pop
inc
push
stos
cli
sub
fiadds
std
add
sbb
mov
fistl
mov
xchg
adc
mov
jp
or
aam
fimuls
jle
into
sub
aas
fs
hlt
test
jnp
fsubs
dec
cmp
ss
call
push
movsl
pushf
iret
inc
bound
jle
sbb
inc
adc
pop
mov
loopne
xchg
xor
mov
dec
addl
adc
mov
add
or
dec
dec
push
out
push
jno
out
jl
inc
sub
jae
call
sbb
sbb
mov
cmp
jnp
jl
mov
pop
push
jl
mov
data16
dec
or
jno
mov
mov
xor
cltd
pop
das
fsubr
jno
xchg
inc
testb
enter
xor
pop
cld
stos
ss
push
ljmp
scas
fiaddl
or
xchg
cmp
mov
inc
int3
je
xlat
int
aas
dec
fstl
jle
add
mov
add
in
bnd
adc
xchg
lds
dec
adc
lods
xchg
hlt
inc
push
aaa
mov
xchg
testb
daa
mov
dec
and
insl
push
xchg
jbe
mov
lea
sub
mov
dec
push
sbbl
out
push
jbe
lock
sub
leave
jns
cld
dec
outsb
add
in
fpatan
adc
cmpb
and
loope
jg
cmpsl
jns
cltd
push
mov
cmpsl
in
aaa
jae
cld
stos
loop
repnz
sbb
cmp
jns
sti
stos
stos
mov
fdivl
push
jge
adc
xor
push
test
mov
aam
push
push
popf
fdivrs
xor
gs
out
in
and
mov
lcall
cmp
pop
or
stc
jmp
imul
aaa
or
push
mov
xor
mov
jg
and
sub
std
mov
int3
dec
lahf
push
inc
jns
aas
mov
push
aaa
test
rcrb
sbbb
out
mov
loopne
shll
test
inc
mulb
adc
and
cmpsl
div
aas
and
pop
fidivrl
icebp
xor
inc
mov
mov
call
aam
fwait
clc
daa
pop
jle
mov
pop
or
inc
in
aad
data16
and
out
pop
imull
ljmp
test
or
decl
rol
movsb
mov
test
or
nop
std
fdivrl
imul
sub
jo
push
pusha
jns
stos
add
imul
sahf
xchg
and
int3
sub
xor
jb
scas
into
enter
sub
xchg
or
aad
sub
shlb
jnp
or
or
xchg
add
inc
add
and
add
popa
das
or
dec
mov
jne
je
xchg
mov
maxps
xchg
adc
inc
lds
stos
sub
aad
jb
jbe
jmp
imul
imul
icebp
orb
shlb
mov
and
pop
jmp
mov
int3
push
sbb
les
movsb
stos
sbbb
mov
xchg
stos
mov
loopne
ret
inc
clc
aad
push
in
insb
xor
pop
jae
xor
dec
rcrl
mov
jecxz
out
xchg
sub
pop
out
cli
jecxz
mov
repz
cwtl
adc
pop
das
pushf
or
jo
out
lret
or
add
lahf
repnz
xchg
sbb
mov
ret
push
int3
jecxz
in
pushf
jge
pop
and
adc
pop
pop
pop
and
data16
fwait
xchg
pusha
std
sub
repz
mov
popf
cmpsl
xor
sub
xor
add
jnp
cld
popf
mov
out
sub
clc
cmp
xchg
dec
xchg
adcl
mov
mov
push
inc
push
imul
into
pop
in
out
push
sub
out
outsb
mov
js
pop
movsb
cs
test
outsb
test
xor
add
fbld
pushf
int3
addr16
add
pop
in
pop
inc
lods
xchg
js
inc
pop
dec
dec
dec
loop
or
pop
xchg
dec
imul
pop
jg
mov
sub
ja
mov
cwtl
fisubrl
insb
pop
xchg
inc
push
dec
sbb
push
sbb
jnp
pop
test
add
aam
dec
inc
sub
xchg
test
sbb
add
ss
std
test
das
cmp
push
pushf
fwait
iret
fdivrp
push
adc
sub
into
adc
ss
imulb
mov
scas
lea
or
stos
aas
xchg
mov
gs
xchg
jmp
pop
in
mov
in
adc
je
loopne
cmp
jge
xlat
mov
dec
popa
fbld
movsb
jo
and
sahf
cli
mov
dec
sub
iret
mov
clc
mov
push
pop
les
jp
shr
xor
pop
mov
dec
dec
icebp
jns
pop
xor
jns
pop
mov
xchg
inc
push
mov
pop
xorl
lea
mov
xchg
xor
cmp
ds
xlat
pusha
outsb
fucomp
xchg
sbbl
out
mov
adc
push
mov
aas
clc
adc
xchg
pop
mov
push
repnz
sti
cmpb
icebp
pop
push
movsl
gs
sbb
repnz
jg
pop
push
push
test
fdivl
adc
pop
lret
into
cli
xchg
sar
pop
insl
addr16
es
mov
jl
fnstenv
push
mov
xchg
push
sbb
jp
mov
xchg
aas
dec
out
push
sbb
stos
xchg
lods
mov
cmp
into
imul
aam
vandpd
daa
jne
pop
xor
in
inc
ret
adc
repnz
out
add
js
ret
mov
test
test
adc
xchg
scas
cpuid
idiv
pop
mov
into
enter
lock
inc
ljmp
icebp
xchg
push
incl
add
sub
scas
fisubrs
fldln2
pusha
jle
mov
fmuls
dec
push
stc
sub
mov
xor
stos
rol
shll
push
mov
test
test
xchg
mov
jo
das
mov
push
add
sbbl
out
sahf
repz
cmp
loope
push
mov
ret
add
jne
fstpt
adc
mov
dec
lods
sbbb
or
cs
js
cli
push
jmp
sahf
and
cmc
jne
push
xchg
sub
lods
push
loopne
out
lods
adc
ljmp
gs
xchg
inc
aad
jns
mov
enter
aas
insl
cmc
int
pop
test
push
ret
hlt
jbe
icebp
lahf
movsb
adc
or
push
scas
insl
daa
jns
mov
scas
cltd
aaa
push
iret
cld
xchg
xor
cmp
adc
jno
xchg
sbb
xor
jae
inc
jbe
lret
iret
scas
pop
and
out
repz
insb
pop
xchg
adc
mov
cli
dec
mov
add
or
repnz
rcll
mov
stos
jecxz
push
sbb
lods
add
jo
pop
jbe
int
cmp
orl
xor
xchg
cmp
inc
in
lcall
mov
ret
jmp
imul
or
andb
lahf
xchg
inc
xchg
pop
js
push
out
sbb
mov
cs
dec
scas
jg
divb
inc
mov
pop
xchg
lods
shl
fnsave
push
or
out
out
stc
pop
repnz
les
pop
xor
mov
mov
dec
xor
sub
mov
sbb
dec
rol
xor
insl
jbe
cmp
mov
dec
or
fsincos
inc
and
adc
fwait
xor
xor
dec
mov
adc
fwait
je
out
sahf
xchg
sarb
fstpl
add
pop
enter
adc
sub
sbb
jp
decl
into
and
cmp
daa
xchg
mov
add
outsl
xchg
stos
scas
and
lea
pushf
into
cmc
push
pshufw
stc
insb
shll
and
cmp
dec
jnp
mov
jg
shrb
or
jle
mov
pop
mov
lea
leave
mov
push
add
repz
pop
insb
pop
repz
jg
cmp
outsl
cmpsb
clc
and
test
aaa
pop
test
push
ljmp
push
cmp
lcall
sbb
cmpsl
lahf
mov
lds
lea
jge
jae
xchg
lret
cmp
jmp
roll
lcall
push
pop
pop
inc
push
jmp
subl
int3
scas
movsb
ja
mov
aaa
push
push
sub
je
adc
and
mov
push
jmp
push
repz
xor
push
sti
xchg
cmp
add
xchg
mov
sbb
pushf
xlat
repnz
mov
les
clc
add
mov
mov
rcr
aad
mov
xchg
icebp
outsl
cmpps
adc
push
insl
pop
push
fwait
mov
sub
sub
jmp
dec
aam
nop
inc
adc
cmpsl
fdivl
out
dec
inc
sub
lahf
inc
loopne
jb
ljmp
lret
or
out
inc
cmp
insl
test
inc
pop
xchg
add
in
sub
push
int3
clc
push
jae
inc
sbb
push
add
pop
testb
rol
lret
xchg
jge
ret
divb
pop
push
mov
jecxz
lock
daa
sbb
ja
fimuls
pushf
in
mov
sbb
add
inc
es
inc
dec
xor
xlat
fnstcw
or
dec
cmp
into
enter
xor
loopne
int
insb
mov
pop
and
rol
or
enter
push
sub
jle
push
jns
hlt
mov
sti
lea
adc
jg
aaa
xor
push
mov
or
jno
lods
mov
test
movsb
mov
xchg
popf
jp
mov
gs
or
xlat
xchg
pop
mov
addb
test
adc
xchg
data16
ds
mov
inc
popa
xor
test
leave
fldenv
jp
fs
pop
lods
mov
pop
rcr
loopne
idivb
adc
enter
popf
and
lea
sub
xchg
sbb
or
and
xchg
sahf
jnp
andb
leave
pop
adc
es
lods
jbe,pn
dec
data16
outsl
bts
mov
lret
out
adc
test
insb
shrl
xchg
rcl
sbb
inc
add
inc
and
jbe
sbb
and
scas
adc
hlt
mov
insb
pop
dec
sahf
pushf
xor
int
cs
ss
push
andb
jl
call
pop
cmp
dec
add
xor
out
sahf
xchg
ja
sahf
mov
rcrl
jl
aaa
lret
mov
lods
ret
xchg
repnz
xor
cwtl
dec
lea
push
shll
stos
lds
out
xchg
sub
imul
pop
decb
rcl
fsts
push
aaa
pop
add
cmpsb
inc
ret
dec
mov
shr
cmp
mov
xchg
pop
mov
sbb
out
outsb
clc
test
mov
jle
aaa
out
testb
clc
adc
mov
xchg
test
lds
add
mov
xchg
adcb
dec
dec
lock
xor
data16
lods
sub
inc
mov
scas
fstps
test
jns
hlt
mov
lret
rcll
mov
bound
cltd
jle
outsl
inc
clc
xchg
push
sbb
adc
test
rcrb
jge
nop
mov
pop
sbb
idivl
aaa
lods
inc
test
into
or
mov
cmpsl
into
int3
and
jne
dec
out
stos
add
aam
sti
mov
inc
pop
inc
sub
pop
cmpsl
dec
and
aam
js
movsb
xorb
mov
jmp
pushf
push
fxch
xchg
bound
cmp
mov
and
sub
and
shr
pop
adc
iret
or
mov
lahf
imull
ret
sub
mov
aam
sbbl
ja
insb
rep
mov
rcr
in
sub
mov
loopne
inc
sub
xchg
jecxz
dec
pop
or
and
ds
dec
mov
sahf
leave
xor
clc
cmp
cmp
divl
dec
and
sbb
aam
pop
pop
cmpsl
es
xchg
and
loop
jge
dec
cmp
push
enter
insl
add
pop
fidivs
xor
lcall
sbb
fnsave
cmpsl
sub
push
jmp
xchg
fucomip
rcll
push
into
dec
leave
pop
dec
fcompl
jnp
inc
xchg
insb
daa
push
lcall
mov
mov
inc
sbb
push
cmp
pushf
daa
nop
xor
insb
repz
insl
pop
lock
cmp
mov
dec
ret
fistpll
leave
inc
inc
mov
insl
arpl
pop
xchg
sub
lds
out
imul
nop
scas
jns
fcmovnu
inc
imulb
ja
aam
cld
clc
cmpsl
test
pop
outsl
out
test
adc
xor
jne
mov
rol
push
ljmp
movsw
nop
adc
xchg
pop
mov
mov
movsl
addl
dec
sub
jge
in
adc
push
inc
sbb
dec
mov
mov
into
pop
and
fnstcw
ret
push
cmp
adc
xchg
movsl
cmp
cmpsl
cmp
xor
jmp
aad
xor
stos
int3
jg
rol
pop
add
mov
push
lods
and
dec
pushf
mov
icebp
fildll
ss
push
aaa
dec
fadds
in
jmp
shrl
stc
rcrb
push
je
and
or
pop
mov
push
orl
dec
dec
iret
mov
ret
out
cs
inc
clc
adc
inc
sbb
shrb
xor
inc
loope
jne
sbb
mov
test
sbb
mov
add
xchg
jo
out
mov
add
inc
jbe
xchg
jae
and
dec
mov
aad
xor
mov
and
sbb
test
push
in
in
mov
mov
subl
add
orb
enter
adc
jmp
into
shrl
mov
pop
cwtl
adc
pop
jecxz
xor
jmp
repnz
cli
lea
cmp
cltd
adc
pop
jno
sub
jbe
adc
mov
fsubl
lret
and
cltd
push
rcrb
iret
fiaddl
pusha
test
fcomip
sub
add
push
pop
loopne
mov
pop
testl
lret
rcrl
or
lcall
cmpsb
jns
dec
dec
bound
xchg
andb
push
sub
dec
inc
jae
inc
jge
nop
imul
cmpb
adc
pop
call
mov
mov
xor
dec
add
fbstp
adc
mov
scas
out
cltd
and
adc
add
cmp
jg
les
idivb
in
mov
xchg
add
aam
scas
and
lret
data16
insb
or
sub
or
addr16
mov
sub
repnz
roll
add
notb
or
mov
fcoms
in
mov
jecxz
xchg
outsl
mov
mov
dec
scas
shll
sbb
xchg
and
jecxz
mov
push
mov
test
inc
pop
inc
sub
loopne
xchg
and
popa
jbe
adc
dec
ljmp
cli
dec
fildll
ss
in
int3
data16
stc
popf
je
inc
lret
push
mov
shlb
and
aam
and
fists
cld
fstps
mov
into
xchg
in
jno
adc
es
xor
sbb
ficoms
lods
out
in
iret
sti
xchg
arpl
sbb
push
mov
mov
xchg
sub
fdiv
dec
adc
mov
popa
mov
mov
push
xor
ss
pop
push
aas
es
in
rclb
xchg
daa
mov
stc
dec
sub
jecxz
gs
dec
out
or
cwtl
imul
adc
addr16
xlat
outsb
xor
sbb
cmp
lahf
mov
divb
lret
pop
imul
into
pop
jge
jbe
fistpl
int3
mov
stc
aas
xor
add
out
rcl
and
jmp
mov
add
push
stos
clc
ja
jae
jmp
sbb
leave
push
insl
jb
pop
and
imul
aam
xchg
cmc
stc
dec
out
sbb
xor
push
mov
iret
ja
add
lock
cmp
scas
xor
lahf
ss
jge
inc
push
push
scas
shlb
scas
fdivrs
sub
inc
stc
dec
xor
js
mov
lods
mov
inc
jno
mov
nop
sbbl
dec
loopne
jle
mov
jo
cmc
pop
mov
push
leave
push
adc
fwait
and
xchg
mov
inc
sub
push
call
xor
fbstp
mov
jmpw
jg
sbb
sbb
xchg
pop
je
fistl
jg
push
lods
xlat
add
stos
fnsave
sbb
cmpsl
sahf
sbb
subl
sub
push
pushf
adc
fldenv
mov
out
jp
lock
jne
mov
nop
dec
xlat
je
fwait
jge
out
clc
jno
mov
and
inc
in
xchg
push
adc
rcrl
sbb
push
ljmp
call
daa
push
aad
sub
frstor
and
pushf
cmp
inc
jmp
filds
jae
aam
sbbl
add
pop
mov
push
nop
dec
dec
cmp
fistpll
data16
push
stos
jno
lret
clc
ja
iret
and
cmp
fiaddl
lea
adc
inc
xor
mov
es
ret
cmpsl
mov
adc
or
push
pop
out
ret
fcomi
popa
adc
and
xchg
sub
inc
shlb
orb
pop
push
cmp
push
push
pop
mov
adc
sub
mov
mov
sbb
xchg
loop
pop
xchg
loopne
aam
lods
add
lret
sbb
mov
jmp
test
jl
jnp
ret
enter
xchg
jmp
dec
pop
and
push
in
add
dec
cmp
cltd
xor
in
cmp
test
imul
jns
and
push
in
es
pusha
sti
imul
jp
mov
jns
cltd
xor
orb
fwait
call
adc
mov
jl
xor
push
mov
sub
and
aam
or
test
inc
jp
jl
dec
sub
and
in
rcrb
stos
psrlw
push
out
sbb
inc
shl
mov
nop
adc
ss
cli
icebp
out
scas
sti
aas
add
pop
push
fsubs
sbb
sbbl
sub
int
xchg
sub
jno
dec
push
fsub
inc
add
jae
inc
push
and
or
jle
cmp
fiaddl
mov
add
xchg
shr
test
and
dec
add
xlat
push
xor
icebp
mov
fimull
loope
add
dec
add
xor
xor
lds
xor
pop
fnstenv
frstor
sub
jae
or
out
jno
xchg
cmpsl
pop
mov
in
dec
dec
in
scas
mov
jae
add
lcall
pop
inc
pop
adc
xchg
xor
idivl
imul
pop
mov
hlt
xchg
rcr
cmc
inc
inc
push
es
scas
call
ror
push
xor
xor
daa
adc
nop
xchg
fstpt
fpatan
sar
mov
and
sti
ja
cmp
das
outsl
dec
mov
loope
lds
xchg
xchg
jne
jp
jo
arpl
movsb
inc
add
pushl
jnp
fwait
test
inc
mov
and
xchg
insl
inc
inc
jmp
mov
pop
stc
sbb
insl
mov
ret
adc
scas
lcall
pop
sub
loope
cli
cld
rclb
cmp
mov
imul
addr16
rolb
push
popa
and
fcomp
jae
les
mov
add
int3
jo
in
mov
mov
push
push
sahf
out
incb
and
and
or
les
call
dec
dec
pop
gs
dec
pop
clc
cmp
scas
test
and
mov
sbb
inc
or
xor
mov
jmp
sbb
push
mov
mov
mov
les
bound
out
mov
nop
addl
jnp
mov
sbb
sub
sbb
lcall
jge
je
aas
cmp
fadd
xchg
push
jae
imul
loopne
lds
fiaddl
mov
fidivrs
push
rol
jno
ret
lahf
cltd
sub
mov
je
inc
mov
ja
or
aam
data16
stos
sub
fisttpll
cwtl
out
outsb
push
pop
fistps
leave
icebp
xchg
jnp
cmp
pop
mov
mov
cmp
push
push
push
pop
mov
loop
mov
pop
cwtl
mov
jmp
enter
and
cmp
mov
dec
and
cmpsl
adc
xchg
dec
jge
je
adc
sbb
jg
in
push
adc
jns
xor
rorb
cmp
xchg
sbb
int
imull
js
jmp
adc
mov
popf
xor
lahf
test
add
je
ret
mov
pop
mov
push
or
fnsave
lcall
mov
mov
cwtl
in
ret
push
and
out
test
mov
fsubrp
mov
jp
mov
inc
out
jae
push
in
lock
cmc
cwtl
dec
or
insl
mov
shl
cmpsb
les
les
out
ret
dec
mov
inc
push
mov
ss
loope
sti
jecxz
dec
lret
gs
and
insb
sub
repz
int3
adc
dec
fnstsw
lods
dec
cmp
xor
cmp
jns
fwait
cltd
pop
dec
dec
add
jnp
mov
push
jno
xchg
sub
test
sbb
dec
fiadds
mov
xchg
mov
push
lock
cmp
clc
mov
lcall
push
xor
sbb
decb
jne,pn
mov
mov
sbb
ret
orb
push
dec
fiaddl
iret
jae
and
daa
insl
gs
int3
inc
mov
fucomi
jge
jo
xchg
imul
popf
and
adc
sbb
pop
out
or
dec
pop
dec
and
mov
lahf
or
rolb
call
xchg
add
sahf
popa
idivb
int
les
mov
pop
inc
inc
push
out
or
mov
sbb
mov
jge
insl
fdivrs
pop
or
mov
fisubl
dec
popa
lret
jg
mov
mov
sbb
shlb
dec
dec
jle
test
jns
decl
xchg
imul
add
mov
mov
imul
mov
fnsave
adc
les
into
push
test
aas
mov
fwait
inc
popa
mov
loop
sub
inc
xchg
in
stc
into
loope
pop
xchg
cmp
mov
push
jmp
fdivs
scas
aad
xchg
es
sub
test
mov
and
dec
dec
fisubrs
mov
aad
testb
nop
mov
pushf
scas
fstl
fwait
xchg
fadds
adc
andb
sbb
loope
loope
cmp
cmp
lds
insb
sub
bound
dec
pusha
pop
adc
es
leave
mov
or
cld
in
lret
int3
cmp
insl
sbb
sbb
mov
dec
cmp
imul
jl
xor
lock
popf
jmp
or
aaa
cmp
nop
and
or
cmp
sahf
dec
mov
in
es
sub
aas
jnp
dec
add
xchg
movsl
jecxz
aad
fstps
idivb
cmp
pop
xchg
cs
mov
sub
push
push
cmp
push
mov
mov
mov
bnd
test
sbb
nop
shll
imul
cmpsb
inc
cmp
jle
dec
add
popf
cmp
cld
xchg
repz
xor
or
mov
orl
shll
mov
jns
xor
pop
mov
cmpsl
ds
mov
cmp
sub
cmp
cltd
push
sub
xor
jae
outsl
push
and
shlb
rorb
jle
xchg
sub
pop
daa
dec
mov
mov
xchg
lret
push
pop
stc
mov
enter
push
mov
lods
jae
pop
pushf
jbe
pop
mov
pop
xchg
add
bound
and
call
xchg
mov
sti
jno
loop
orb
cmp
rclb
jbe
fisubs
ss
push
adc
aam
mov
sbb
push
iret
sub
adc
test
pop
in
dec
rcr
outsb
insl
das
sbb
mov
dec
outsl
push
imull
pushf
dec
loop
shl
test
imul
stos
xchg
xchg
fs
movsl
pushf
xor
jmp
enter
sbb
add
cld
subb
xchg
test
mov
cmp
or
cmp
sub
shrl
add
popa
nop
fcomps
cmp
mov
sbb
test
cmp
sub
push
clc
mov
cwtl
sub
xchg
mov
das
sbb
pop
imul
sbb
add
xchg
xor
sbbb
fsubl
movb
insb
push
jg
loop
mov
pusha
scas
adc
dec
inc
lahf
mov
push
cmpl
ja
or
mov
or
cmp
xor
sub
dec
jmp
dec
xchg
in
cmp
divb
jb
shl
lods
mov
adc
or
mov
mov
ret
popa
xchg
xor
dec
xchg
ljmp
sub
icebp
mov
push
push
icebp
jmp
or
in
cli
ljmp
sahf
xor
mov
pop
arpl
jae
mov
sbb
sub
cmp
add
mov
sbb
mov
daa
lcall
inc
fsubrs
add
mov
dec
cmp
sub
xchg
sub
pop
mov
rcl
nop
xlat
sbb
int3
mov
lcall
movsl
inc
mov
and
scas
lds
and
mov
loopne
stos
roll
in
add
fcomps
pop
mov
test
sub
loop
xor
dec
cs
and
repz
popfw
es
addr16
in
pop
adc
pop
jmp
nop
jnp
nop
push
lock
out
mov
add
or
arpl
fdivrs
xchg
popa
mov
xlat
sub
test
pop
adc
daa
xchg
ficoml
lock
movsb
lock
std
mov
xchg
out
dec
mov
xor
nop
and
popf
push
cmpsb
cld
repz
or
push
outsl
dec
mov
and
test
add
cmp
mov
dec
pop
ficompl
mov
xor
fwait
pop
ret
adc
pop
lock
xor
pop
pmulhuw
mov
lds
or
jbe
or
add
jnp
jnp
ljmp
cmp
push
jp
addl
fsubrp
or
je
sub
int
lods
test
ljmp
scas
shll
adc
pop
inc
mov
lock
dec
dec
mov
cld
out
push
loope
bnd
std
cmpsb
jecxz
push
js
and
mov
cmpsl
sbb
dec
sub
loope
xor
dec
pop
cmp
inc
das
add
clc
mov
fisttpl
es
jae
cwtl
das
adcb
inc
lods
pusha
negb
sbb
shl
jb
jle
add
mov
mov
mov
jecxz
cmp
lds
push
jns
mov
dec
xor
inc
pop
inc
jo
loopne
fsts
clc
dec
imul
testb
or
push
xor
loop
adc
aaa
xchg
inc
sub
bound
pop
mov
jo
scas
pop
ficoms
cmp
movsl
aas
mov
shll
shrl
mov
push
rcll
lods
xlat
mov
and
xchg
xor
es
mov
hlt
or
pop
popa
clc
mov
daa
sti
jg
ficoms
clc
test
lret
dec
gs
in
mov
xor
cmp
test
sbb
testl
jno
sbb
jle
shrl
fwait
jecxz
inc
cld
out
sahf
xor
fidivrs
inc
repz
aam
mov
push
xchg
pop
repnz
repnz
cld
inc
push
xor
orb
adc
outsb
mov
push
mov
xchg
jb
push
scas
xor
imul
jg
cwtl
cmp
xchg
lahf
jle
push
fldenv
std
addl
test
sub
gs
inc
inc
xor
in
stos
inc
xchg
fnstcw
sub
lret
dec
mov
dec
stos
bound
in
mov
xchg
cmp
and
test
testl
outsl
lods
fwait
inc
xor
add
scas
xchg
hlt
insb
or
call
jnp
mov
dec
pop
subl
loop
mov
hlt
cmp
add
aam
es
inc
fldenv
inc
imul
or
popf
popa
jns
mov
in
jno
xor
popa
test
jg
and
lret
mov
fsubr
or
push
push
sub
cmpsl
popa
nop
jmp
add
je
pop
mov
push
out
xor
xchg
sbb
inc
mov
cld
mov
dec
ss
mulb
test
divb
dec
add
fldln2
and
pop
sti
shrl
arpl
stc
adc
jbe
dec
adc
arpl
addb
cld
pop
mov
ss
loope
fwait
in
mov
aaa
mov
imul
mov
enter
push
aam
mov
adc
add
into
xor
add
movsb
fildl
popa
fists
xchg
sub
pop
icebp
lds
es
cmp
out
dec
adc
rcll
icebp
in
movsb
mov
dec
sub
jge
jecxz
mov
cmpsl
add
aas
xor
bound
stos
adc
push
xor
and
adc
inc
lcall
negb
loop
sbb
in
out
sub
or
lock
or
jno
xlat
mov
push
test
sbb
xor
xchg
lock
btsl
pop
lods
xchg
jnp
xor
lock
shrb
pushf
push
jo
mov
or
dec
fldenv
mov
mov
fstpt
scas
xchg
scas
sahf
add
mov
push
sub
outsb
in
bound
fisubs
fistpll
push
mov
fldcw
sub
das
push
leave
jp
mov
sbb
subl
cmp
fbstp
add
test
mov
dec
adc
dec
ret
mov
ret
ret
lods
inc
aaa
mov
cmp
mov
loopne
sub
push
inc
xor
pop
xlat
jb
cmp
push
testl
inc
inc
sbb
and
jecxz
inc
xor
or
mov
xchg
sub
jne
cmpsb
adc
fcoms
cltd
hlt
jmp
jmp
int3
insl
push
jmp
sbb
loopne
pop
out
pop
inc
js
cmp
pusha
ljmp
mov
icebp
mov
ja
jo
dec
mov
jns
jmp
mov
or
addr16
ds
mov
jo
fisttpll
or
lret
pop
les
decl
xchg
or
sub
fidivl
addl
in
inc
add
mov
cmc
int
notb
inc
jmp
mov
xor
jo
repz
out
imull
outsb
mov
stc
and
sub
inc
sbb
fnstsw
cmp
ficoms
aas
aad
push
mov
vsubsd
mov
lret
sbb
int
lock
inc
push
push
into
call
add
cmp
in
jnp
outsl
jle
mov
test
adc
add
xchg
stos
subb
jns
inc
outsb
fsubr
imul
scas
mov
and
movsl
stc
and
loope
push
cltd
dec
lahf
out
jl
wbinvd
daa
mov
andb
psubd
mov
lcall
jg
pop
pushf
or
cmp
mov
dec
dec
ljmp
pop
pop
inc
pop
fmuls
icebp
mov
cmp
xchg
ja
jne
inc
xchg
sbb
mov
cmc
stc
loop
ljmp
ds
inc
xor
mov
jnp
iret
sbb
xor
insl
imul
pop
adc
outsl
mull
daa
xchg
pop
fwait
push
mov
and
clc
add
test
lret
pusha
repnz
mov
mov
ror
jle
inc
pushf
aaa
lahf
dec
pop
add
pushf
lea
mov
add
call
xchg
xchg
ljmp
jmp
xchg
lcall
xor
jle
cmp
push
outsl
sbb
outsl
xor
pusha
in
sbb
or
ss
aam
push
push
xchg
dec
in
pusha
inc
push
mov
jno
xor
pusha
pop
sub
dec
fdiv
lea
pop
lock
mov
adc
jne
and
pushf
mov
cmp
lods
testl
jl
enter
push
in
dec
rorb
mov
in
pop
lahf
pop
test
rcrl
push
in
cmp
mov
lock
push
inc
adc
inc
push
xchg
pop
xor
leave
and
test
push
mov
push
xor
jge
push
loopne
push
mov
das
jo
inc
xchg
dec
jle
popf
scas
push
icebp
jg
xchg
call
adc
sub
sbb
jmp
addr16
xor
inc
cmpsl
mov
scas
outsb
push
je
pop
adc
cmc
mov
outsb
mov
inc
sbb
xor
dec
mov
ret
mov
fdiv
add
insl
cmp
hlt
pop
pop
ficomps
mov
cmp
mov
jmp
and
loope
mov
dec
leave
and
in
adc
imul
jae
mov
or
dec
pop
push
repz
xor
sbb
icebp
mov
mov
cvtps2pd
xchg
mov
dec
dec
add
push
or
xchg
enter
xchg
clc
inc
push
adc
mov
mov
insl
xor
or
dec
filds
cmc
les
movsl
repnz
mov
pop
dec
or
mov
push
loopne
xlat
loope
stc
popf
dec
int
push
jp
popf
stc
mov
add
mov
pop
pop
adc
outsb
mov
add
dec
pop
ret
push
and
mov
out
inc
inc
idiv
dec
jge
jnp
sbb
pop
mov
cld
ja
xlat
outsb
cli
adc
scas
insb
idivl
add
fldenv
mov
test
lock
shl
mov
push
sbb
sub
mov
push
sub
mov
ret
popa
ja
xchg
dec
sbbl
dec
stos
hlt
cli
mov
add
or
mov
pop
popf
pop
repnz
ljmp
fisubl
mov
or
test
iret
fistl
cmp
or
fs
lret
push
pusha
push
mov
lock
dec
pushf
cmp
daa
cmp
stos
loop
lret
fisttpl
fucomp
push
fsubrs
fmuls
cmp
or
test
mov
int3
xchg
pusha
cltd
outsb
aaa
inc
rolb
aaa
jmp
mov
push
add
sub
out
add
in
jae
das
rorl
mov
dec
outsl
cltd
mov
aad
in
adc
sti
fwait
pop
and
arpl
jmp
xchg
sti
sub
or
andb
movsb
xchg
xchg
imul
cs
popa
add
push
daa
shll
xchg
ljmp
mov
xchg
mov
sub
xorb
dec
sub
in
leave
adc
adc
aam
stos
orl
xchg
sub
xchg
add
mov
popf
sub
xchg
shlb
int
iret
mov
sub
inc
stos
aam
jae
cmp
adc
cmp
push
mov
rorb
xchg
mov
pop
stos
pop
orb
orl
inc
dec
xor
push
jmp
in
push
xorl
out
jg
lea
mov
incl
add
mov
mov
push
xchg
sub
addr16
stc
test
cmp
test
pop
mov
into
xchg
ds
out
repz
push
pop
fidivrs
dec
lret
cs
pop
popa
bound
imul
push
jp
jp
cmp
jo
aas
xor
cmp
fwait
and
int
mov
push
jecxz
jno
xchg
or
popa
xor
popa
push
movsb
sub
ss
cwtl
jns
pop
repnz
and
jl
or
int
in
mov
mov
enter
loope
mov
sar
andl
fsub
xchg
and
inc
loop
pop
xor
repnz
orb
xor
jle
xor
xchg
sub
mov
ja
jmp
and
fwait
xchg
jecxz
std
cld
cltd
mov
add
aad
inc
mov
xchg
lcall
dec
ss
pushw
jns
add
test
sub
cltd
lods
jg
push
call
add
mov
sete
dec
pop
dec
das
pusha
inc
push
xor
push
push
rcrl
inc
clc
cltd
mov
jecxz
xor
sahf
xchg
push
mov
xor
icebp
ja
dec
rcrb
lcall
mov
inc
lods
xchg
fistpll
mov
push
mov
dec
test
mov
cli
test
pop
lods
shl
mov
dec
sbb
sub
ja
scas
pusha
jb
jbe
repnz
mov
mov
mov
shlb
add
push
mov
and
dec
rcl
std
leave
inc
test
iret
xchg
jno
pop
cmp
mov
push
push
ds
fwait
outsl
cli
or
mov
adc
dec
sub
or
sub
adc
jge
mov
jae
inc
sub
inc
pop
iret
rcrb
je
leave
fwait
cld
mov
shlb
dec
mov
mov
lock
mov
lret
fstps
fisttpll
push
xchg
mov
fnstsw
mov
lcall
jno
pushf
mov
pushf
lret
cmp
ljmp
cltd
push
xchg
cmp
idiv
fwait
dec
sti
push
or
out
mul
shlb
cwtl
loopne
xlat
icebp
sbb
je
insb
pop
inc
fistl
jb
pop
push
mov
nop
loopne
aam
sbb
call
cmpb
xchg
inc
test
jg
leave
jmp
clc
push
jmp
imul
xchg
jge
outsb
mov
shl
jle
shlb
jecxz
lods
pop
xor
movsb
xchg
jle
repz
xor
sti
lret
xlat
fnstsw
enter
dec
sbb
test
ret
repz
add
scas
pop
adc
sbb
imul
sub
shll
jl
jmp
loop
adc
jmp
push
mov
fcmovu
int3
es
lock
pop
mov
mov
jnp
push
outsb
stos
fidivs
xlat
pop
insl
clc
mov
test
das
cli
xor
cmp
sbb
mov
aaa
ds
jo
dec
ds
call
fmuls
mov
adc
idivl
addr16
repz
scas
or
adc
ret
cmp
mov
sbb
mov
dec
mov
add
or
cltd
std
idivl
jo
push
jnp
pushl
pop
cmpb
mov
movsl
add
pushf
js
mov
jno
pop
cwtl
pushl
sahf
stos
sub
and
xchg
adc
jo
das
testl
int3
mov
add
sub
adc
je
mov
push
inc
dec
push
xchg
orl
cmc
adc
jge
cmpsl
sub
xor
sti
pop
or
jecxz
dec
pop
dec
jle
addr16
es
sbb
lods
bnd
and
jnp
ret
pop
jmp
stos
test
subb
xchg
dec
les
movsb
jmp
and
fldcw
popf
stc
pop
imul
mov
pop
lret
lcall
in
imul
sbb
repnz
loope
cmpsb
fwait
aaa
inc
testb
ss
push
fwait
jbe
xchg
and
xchg
mov
int3
cmp
push
mov
cmpsl
ret
lcall
push
lods
cs
adc
das
dec
mov
xorl
mov
aam
test
cmpsl
push
out
adc
aam
daa
adc
or
jle
adc
add
cmp
movsb
inc
repz
or
pop
cmp
icebp
add
out
das
xor
sbb
mov
or
xor
sbb
push
loope
sti
or
cld
popf
repz
lcall
cmp
in
lods
pusha
pop
fisubs
inc
add
icebp
les
sbbl
or
or
and
mov
add
fsubs
aas
sbb
inc
push
testb
and
xchg
shl
sahf
mov
jp
ret
scas
jo
sbb
jg
mov
imul
or
pop
jecxz
rorb
aaa
jge
sbb
aas
xchg
add
in
jmp
push
aas
test
movsb
mov
repnz
and
mov
rcr
popa
movsb
cmpsl
jge
cmp
push
mov
in
cmpsl
out
mov
pop
sub
mov
scas
xor
jbe
mov
mov
sbb
xchg
mov
daa
data16
sahf
cmp
cwtl
cmp
mov
mov
fidivrs
push
shll
cmp
or
cmp
adc
inc
adcb
into
daa
mov
cltd
xor
cmpsb
sti
test
pusha
jbe
pop
mov
insb
in
sbb
mov
and
mov
add
cmp
bound
push
push
repnz
mov
sbb
mov
mov
jmp
add
movsl
movsb
repz
sub
mov
test
test
pop
mov
push
aaa
push
shrb
cmp
push
pop
adc
jae
js
or
call
cmp
sbb
orl
xor
int
out
sbb
ss
inc
xadd
mov
int
or
add
pop
in
push
adc
xor
insl
pop
inc
pushf
leave
mov
cmp
aad
imul
imul
jo
inc
rcrl
pop
lock
dec
fcmovnb
ret
dec
pushf
add
mov
std
arpl
dec
push
subps
into
pop
pop
xor
jle
jno
dec
cmp
lods
inc
dec
pop
jecxz
aam
mov
jmp
fildll
pushf
fcompl
mov
xchg
insb
fwait
cli
sbb
mov
fstps
test
loope
icebp
mov
int3
arpl
js
iret
jl
nop
sti
scas
mov
pop
jno
mov
sub
outsb
out
or
add
sbb
mov
pop
lods
mov
push
lods
add
add
dec
and
push
pop
mov
test
jmp
ds
rcrl
daa
xorl
int
xchg
pop
roll
mov
hlt
loope
and
jle
pop
sub
adc
xorl
mov
nop
fadds
fisttps
mov
scas
inc
data16
insl
lret
cmp
hlt
xchg
dec
sub
push
sub
insb
movsb
xchg
mov
sbb
daa
inc
sbb
lds
lods
jo
arpl
mov
gs
mov
push
int3
and
jno
cmp
sub
add
jecxz
fwait
std
into
insl
or
dec
fisubs
out
fsubrl
popa
jmp
jb
test
inc
and
adc
out
mov
sub
jge
lods
xor
xor
mov
sbb
aad
pop
dec
push
pusha
lock
mov
push
sbb
mov
imul
xchg
inc
frndint
sub
in
loop
or
mov
adc
dec
jne
jl
subb
mov
in
mov
popf
jb
rorb
int
std
nop
ds
out
inc
inc
pop
sbb
add
jl
or
repnz
jl
sbb
adc
aas
outsb
add
popa
and
push
frstor
in
loop
xor
xor
in
lds
cmp
inc
mov
cwtl
ljmp
call
xor
dec
and
lret
popa
loope
mov
setl
inc
mov
fstpt
out
xor
add
mull
cmpl
or
mov
mov
pusha
push
xchg
cmp
test
stos
or
xor
insb
cmp
mov
jns
xchg
lahf
mov
mov
inc
ja
data16
addr16
adc
push
xchg
push
test
pop
sahf
data16
lret
xorb
decl
sbb
push
in
inc
xcrypt-ctr
cmpsl
sbb
mov
test
push
pop
mov
les
adc
outsb
sahf
jle
fs
std
call
push
or
ds
and
add
cmp
sbb
movsb
mov
inc
jb
sbb
jle
jecxz
dec
pop
call
sub
mov
mov
and
das
jmpw
incb
les
movsl
adc
in
pop
mov
lret
jbe
mov
dec
jae
ljmp
scas
nop
adc
icebp
cmpsb
int
mov
jge
inc
pusha
test
scas
imul
cwtl
das
lods
call
mov
jns
fwait
push
mov
pop
pusha
orb
pop
mov
mov
data16
hlt
mov
mov
push
push
push
pop
xor
cld
stos
inc
sahf
test
xor
test
gs
shrl
cmp
push
inc
ficoms
push
pop
mov
cwtl
mov
push
jmp
mov
popf
jb
icebp
mov
pop
add
scas
push
pop
dec
cmp
iret
fidivrl
fstp
enter
pop
xor
in
push
popa
call
mov
ja
mov
shrb
fsubrl
dec
xchg
pop
xor
fidivrl
nop
aam
mov
ret
fidivl
int
lret
jae
cwtl
aad
inc
push
mov
test
xchg
xchg
out
sarl
mov
int3
in
cmpsl
inc
dec
mov
hlt
fstp
mov
pop
mov
rcr
mov
stos
mov
sbb
push
daa
or
out
enter
std
sbb
inc
pop
cli
mov
lcall
cmpsb
cmpb
enter
or
ret
call
inc
adc
int3
xor
int3
dec
inc
pop
add
push
xor
push
jns
mov
cmp
add
int
pop
pusha
test
and
mov
shl
cli
jne
mov
jge
jne
mov
xor
mov
jecxz
bound
jge
pop
cmp
sub
outsl
jg
and
pop
ds
mov
sbb
dec
ja
xlat
insl
fs
sbbl
mov
inc
stc
repz
sbb
int
xchg
push
shll
ret
test
ret
pop
jg
cs
inc
dec
pop
popf
stos
out
pop
adc
and
push
mov
push
jo
fcoml
mov
fnstsw
or
xchg
loope
shll
xor
and
xchg
jle
push
mov
xor
and
imull
popf
mov
sbb
into
nop
notl
ret
ret
fbstp
cmc
or
and
and
xchg
or
addr16
push
mov
cmp
xchg
aad
pop
fisubrl
xor
push
jo
jg
sub
mov
cmpsl
pushf
popa
in
hlt
sbb
notb
jne
pusha
jl
jb
jmp
or
pushf
adc
inc
fs
jp
sub
adc
out
xchg
lahf
dec
aam
add
adc
test
and
mov
cli
xor
lods
mov
pop
sub
insb
pushl
daa
icebp
movsl
clc
mov
pop
ja
add
push
add
ja
and
into
fcomps
dec
pop
lcall
repz
mov
xchg
push
jle
stos
sarb
push
mov
aaa
in
sub
mov
fildl
push
xchg
jbe
mov
xchg
dec
fpatan
jge
push
pop
fs
mov
cmp
push
mov
and
push
push
mov
popa
arpl
gs
push
test
jb
inc
int
xlat
nop
and
jp
mov
test
dec
fxtract
mov
dec
jne
movsb
mov
data16
mov
data16
ss
xchg
arpl
lds
mov
and
push
ret
sbb
pop
mov
adc
mov
inc
dec
and
xor
cmp
imul
push
pop
push
xchg
mov
int
sbb
adc
repnz
pop
cli
inc
shrb
and
push
fildll
es
sbb
pop
mov
mov
dec
imul
push
mov
stc
out
cld
xor
fs
jb
in
sub
add
js
add
xchg
fadd
mov
sbb
dec
sub
jecxz
out
xchg
movsb
xchg
dec
adc
sbb
adcb
dec
lods
mov
pop
add
sarb
cltd
adc
push
push
add
test
pop
mov
sub
cmc
mov
lods
mov
in
imulb
fisubrl
fnstcw
les
cmp
mov
dec
push
out
jge
dec
in
mov
xchg
sub
add
in
leave
cs
and
xchg
adc
adcb
nop
jnp
add
test
inc
cmp
add
dec
and
add
mov
dec
shll
es
fwait
sub
mov
divl
dec
icebp
sbb
cmpsb
dec
movsl
mov
fldt
and
xchg
shlb
shrb
cld
xchg
aad
mov
dec
xor
dec
arpl
push
xchg
and
ljmp
addl
jae
shl
mov
int
repz
pop
xchg
push
xor
push
push
icebp
push
jne
mov
inc
rolb
inc
push
sbb
lret
pusha
gs
ret
out
shrb
das
pop
popa
mov
dec
loop
and
aad
dec
dec
add
into
xchg
or
popf
adc
xor
cmp
rolb
mov
inc
xor
rcr
adc
and
arpl
jg
scas
lret
xor
sbb
pop
scas
xchg
pop
pop
xchg
dec
xor
sub
shl
xor
mov
xchg
cmp
test
dec
push
nop
sbb
adc
sub
pushf
idivb
adc
push
inc
add
cli
outsl
adc
fiadds
decl
mov
ret
and
mov
push
mov
movsb
sub
mov
dec
inc
rorb
in
dec
pop
iret
sbb
sbb
sub
js
arpl
insl
mov
cltd
xor
dec
or
shll
mov
lret
xor
scas
push
cs
sub
inc
add
test
push
pop
popa
mov
jnp
or
jmp
leave
sub
ss
cmp
pop
or
push
test
outsb
add
push
outsl
addl
pop
out
pushf
sbbl
jg
cltd
test
dec
xorb
nopl
int3
push
stos
js
loope
inc
adc
or
pop
in
dec
mov
mov
sub
jge
add
mov
and
fidivl
add
adc
pop
mov
adc
xor
dec
jb
mov
in
push
filds
push
cwtl
lret
and
pop
imul
cmp
push
push
mov
cmp
push
fiaddl
add
xlat
cs
cmpsl
je
xor
je
shl
or
mov
xchg
jae
inc
dec
mov
sub
pop
lret
fiadds
leave
ja
out
lods
inc
push
mov
out
push
sub
sub
gs
mov
mov
push
push
lods
fsubr
and
mov
jns
stos
cld
xchg
and
sbb
add
sti
pop
movsl
fbld
bswap
jne
or
push
test
nop
inc
adcl
sbb
xchg
dec
cmp
out
sti
stos
xor
stos
inc
dec
fsts
test
cld
add
stc
out
ss
xorl
mov
push
jecxz
mov
mov
je
fistpll
icebp
cmp
adc
adc
add
mov
rcrb
fimuls
test
outsl
push
movsb
pop
lods
pop
outsl
mov
mov
fidivl
jnp
mov
push
dec
mov
mov
popa
pop
mov
cld
aad
lds
push
in
out
or
cmp
xchg
das
or
or
mov
movsb
jg
imul
pop
stc
pop
push
lret
xchg
push
shll
add
mov
pop
int
pop
imul
call
mov
sbb
adc
push
xlat
repz
inc
pop
mov
adc
xor
and
mov
push
ret
dec
in
mov
rol
push
mov
lcall
cld
psraw
adc
subl
inc
insb
shlb
sbb
push
push
push
fs
enter
dec
add
movsb
cs
xor
pop
sub
bound
addr16
mov
outsl
xchg
cmpsl
adc
mov
push
adc
xor
push
fnstcw
cmpsl
mov
push
jnp
test
pop
imul
mov
fs
or
js
movsl
push
inc
aam
xchg
and
mov
inc
or
fisttps
sbb
dec
mov
fcmovb
pop
daa
mov
and
pop
cmp
jecxz
push
add
inc
inc
mov
test
inc
fmul
bound
test
xchg
mov
fistpl
mov
mov
sbb
inc
shl
rorb
call
ret
in
jnp
sub
dec
in
sub
in
lret
lahf
movsl
sahf
jae
mov
and
xor
cmp
mov
adc
sahf
fwait
insl
outsl
pushf
lods
xchg
call
xchg
mov
int
push
lods
ljmp
jae
arpl
subb
mov
mov
test
dec
cmpsb
cli
hlt
out
lock
sbb
inc
and
mov
ljmp
orb
cvtdq2ps
js
xor
js
adc
xchg
mov
xor
xchg
ds
push
mov
loop
cmpps
addr16
popa
mov
call
loope
lret
shrb
loopne
push
aaa
iret
and
ret
cmp
es
popa
lret
stos
xchg
shll
mov
jb
dec
ja
call
or
xchg
cmp
ror
mov
push
movsb
shr
xchg
mov
mov
dec
loop
sbbl
clc
test
scas
sbb
and
lcall
fcoml
test
jo
pop
mov
pop
call
inc
sbb
ljmp
sarb
mov
inc
xchg
aam
push
mov
add
es
lods
loop
adc
xchg
add
pop
aas
test
sub
jb
dec
sbb
inc
xchg
adc
into
mov
aad
add
cli
fisubrl
pop
lds
add
sti
fwait
xor
adc
lret
mov
in
pop
jo
arpl
cmpsb
xchg
mov
loopne
adc
pop
xor
jno
in
jns
stos
push
fsubr
xchg
jecxz
cmp
push
flds
cmp
lods
xchg
out
jne
testl
pop
sub
pop
inc
aas
push
movsl
cwtl
lcall
sbb
cmp
xor
cltd
mov
push
mov
push
or
push
test
leave
nop
xchg
dec
push
fs
jge
nop
repz
jns
pop
insb
rcrb
insb
addr16
pop
adc
xchg
aas
jae
movsb
cmp
add
adc
enter
mov
sti
psrlq
dec
mov
mov
mov
jl
test
jl
inc
jb
cmp
out
incl
std
leave
int
test
mov
sahf
jne
pop
push
push
ret
fisttps
xchg
test
dec
sub
test
scas
cmc
gs
jle
call
test
jp
lahf
mov
pop
xorl
xchg
mov
lods
inc
mov
js
dec
pop
mov
mov
ljmp
dec
int3
pop
cmc
xchg
sbb
sbb
cltd
test
jmp
repnz
lods
xchg
iret
push
mov
lods
std
push
popf
mov
cld
xchg
cmp
xlat
out
push
and
jnp
or
or
ret
popf
adc
or
popa
jnp
dec
repz
add
and
ficoml
enter
xor
repz
push
jge
outsl
add
fwait
pop
mov
jp
sub
out
faddl
pop
mov
pop
jp
jb
cs
inc
sbb
sbb
jl
in
enter
push
orb
jnp
or
int
jge,pt
bound
and
xor
push
int
fisubl
cmp
or
adc
xlat
test
fimull
cmp
push
xchg
negb
into
or
mov
shll
loopne
insb
jo
sahf
aam
mov
jge
inc
or
mov
fnsave
push
fisttpll
mov
and
sub
cs
leave
push
ficompl
or
push
insl
cwtl
dec
scas
iret
std
mov
push
test
mov
and
push
mov
outsb
xor
dec
sbb
pop
jmp
scas
inc
dec
leave
cmp
xor
ja
push
mov
cmp
or
imul
je
stc
lahf
xchg
ret
jnp
sarb
call
cltd
std
mov
aam
or
hlt
cmovp
adc
in
push
jp
mov
or
stos
aam
test
clc
mov
js
pop
add
aas
xor
sub
mov
xchg
jle
add
push
push
xchg
cmpb
rcrb
add
stc
push
xchg
testb
jne
mov
in
jne
xchg
jno
fsubrl
mov
pop
ss
push
inc
shll
rcrb
lret
es
dec
in
not
mov
in
cmp
gs
xchg
mov
push
cmpsb
dec
les
dec
sahf
xor
arpl
test
xchg
imul
ds
mov
xchg
cmp
xor
es
or
in
loop
dec
push
pop
inc
mov
out
je
loopne
push
dec
ss
in
xor
adc
fstpl
sbb
cltd
and
inc
push
in
dec
cltd
inc
pop
inc
cmp
in
out
jle
mov
insb
push
ret
mov
repnz
lods
test
jl
push
jge
leave
jb
pop
or
push
aam
mov
in
repz
xor
jecxz
out
push
mov
fdivl
ficoml
jge
push
loop
inc
add
rcll
icebp
nop
push
lds
or
mov
xor
scas
mov
push
pop
fstpt
and
jb
jnp
mov
xor
sbb
pop
xchg
mov
repnz
inc
inc
mov
adc
jge
loopne
pop
xchg
movsl
add
stos
addr16
movsb
jbe
mov
add
ja
sbb
mov
iret
mov
dec
and
in
push
or
add
movsb
fnsave
cmpsl
test
sahf
push
or
lods
xor
sbb
fcompl
ja
xchg
in
addb
add
push
push
mov
jle
mov
pushf
cmp
dec
icebp
lods
sub
scas
loop
data16
icebp
inc
ja
inc
ret
xor
dec
xchg
jbe
leave
ljmp
cmpb
pop
pop
dec
icebp
sti
outsl
mov
adc
pop
adc
dec
fsubl
lea
xor
inc
mov
pop
sarl
scas
lock
out
inc
fcmovne
mov
push
xchg
sbb
mov
inc
mov
insb
or
jb
insb
mov
jmp
pop
sti
movsb
fisubs
jmp
mov
fsubp
push
push
pushf
fwait
jg
sbb
mov
xor
insb
rcrl
push
fldt
iret
and
daa
add
jae
push
mov
sub
push
mov
xchg
movsb
mov
pop
jl
mov
sbb
xchg
dec
add
add
testb
xor
xor
jle
mov
sahf
aas
and
mov
fcmovne
push
adc
or
jb
or
push
pushf
jns
dec
or
stos
sahf
xlat
jg
es
adc
mov
iret
int
jle
mov
int
es
popf
gs
pop
mov
vmwrite
les
adc
pop
pop
subl
sahf
dec
pop
clc
xor
xchg
stc
cwtl
mov
xor
sbb
stos
outsl
movb
cld
fwait
lods
dec
mov
jl
aas
xor
mov
ss
or
xchg
mov
push
and
fsubrl
or
mov
xchg
stos
enter
sub
icebp
mov
mov
movsl
or
dec
fisttps
xchg
cmpsb
dec
xor
xchg
push
test
and
mov
insl
sbb
lds
int3
adc
push
hlt
xchg
xcrypt-ctr
cmpsl
outsb
or
cmpsb
hlt
scas
push
sub
or
daa
xor
pop
stos
dec
call
xor
jno,pn
inc
icebp
flds
jae
adc
add
stos
inc
ljmp
ja
daa
jp
bound
pop
rclb
imul
test
push
loopne
push
hlt
pop
jl
add
inc
aaa
mov
out
and
and
xchg
pop
or
popf
xor
lea
sub
inc
mov
lret
jecxz
mov
pop
add
stos
xchg
jne
shrl
adcb
xchg
pop
cmpsb
pop
nop
add
adc
xor
je
mov
fcmovne
cmp
mov
sbb
mov
mov
or
ret
sub
ja
cmp
xor
nop
sbb
mov
cli
test
push
jp
js
xor
aas
xor
jmp
and
call
jb
mov
lret
cmp
outsb
enter
adc
insl
aad
pop
mov
xlat
outsb
das
in
rcrl
mov
xchg
jmp
mov
pusha
test
inc
aas
popa
inc
in
xor
push
repnz
xor
pop
adc
jno
cmpsb
mov
mov
aaa
mov
dec
mov
pop
jb
sub
xchg
mov
lahf
jle
jmp
jmp
leave
inc
jne
fcoml
lds
ljmp
subl
idivb
dec
aas
push
ficomps
adc
sub
push
cwtl
add
leave
xor
cltd
mov
shll
xor
push
cs
xchg
adc
cs
test
test
mov
mov
inc
fsts
mov
jns
icebp
dec
pop
mov
inc
fildl
sub
xor
rolb
xchg
ss
jmp
and
jmp
dec
daa
test
sarl
sbb
and
inc
pop
xchg
xor
xchg
rorl
push
subb
cmp
cwtl
mov
std
sbb
mov
mov
sbb
sbb
lods
shrb
pop
insl
subl
loope
sub
cmp
jno
dec
lock
mov
lahf
mov
jp
sbb
movsb
push
cltd
in
or
xchg
bound
outsb
sub
out
cltd
rclb
pop
fwait
xchg
inc
cwtl
push
inc
mov
jno
outsb
ljmp
jnp
sbb
icebp
inc
xor
push
jl
loopne
ds
sbb
pop
and
pop
int
popa
cld
push
out
jno
xchg
insb
andl
xor
stos
jnp
testb
sub
pop
fbld
movsb
adc
stos
add
xor
jbe
inc
lret
jb
in
add
push
mov
pop
cmpsb
ljmp
fstpt
leave
int
ss
lods
push
incb
shr
and
les
push
pop
mov
mov
xor
xchg
test
add
mov
imul
bnd
push
adc
add
mov
inc
lret
out
aad
sahf
cmp
insb
shlb
adc
mov
pop
stos
pop
fsubl
ret
outsl
adc
lods
insl
or
or
je
aaa
rolb
notl
popa
sub
mov
mov
cmp
ja
in
cli
adc
cmc
dec
sbb
inc
enter
fnstsw
psrlw
repz
scas
inc
adc
and
insl
mov
jmp
xchg
dec
movb
push
lcall
sbb
fwait
data16
cs
push
ret
loopne
mov
outsl
lods
lock
imul
xor
jno
jp
repnz
in
fwait
int3
adc
jb
and
pushf
xchg
ds
sbb
adc
sbb
int
shr
sub
es
pusha
sbb
jmp
pop
or
mov
out
fsubrs
xchg
jmp
xchg
pop
xlat
shll
data16
cmp
and
cltd
sub
leave
leave
sbbl
sub
loopne
inc
and
inc
mov
mov
adc
mov
xor
add
push
mov
movsl
dec
addl
lret
mov
pop
rcrb
and
jbe
mov
in
cs
sarb
cwtl
mov
mov
jle
ja
mov
test
sub
sub
les
lock
add
es
insb
mov
test
mov
sahf
push
push
mov
sub
test
cmpsb
mov
popf
cmp
mov
pop
rclb
shl
jmp
jae
xor
sbb
loopne
idiv
and
les
stos
pusha
and
stos
fcmove
das
shrl
push
push
sahf
std
test
test
test
std
lods
mov
lea
shrb
in
pop
mov
sub
divb
adc
jo
cmp
fnstcw
fisubs
sbb
pop
xchg
push
addr16
das
pop
cmp
dec
push
cmpl
out
in
aad
cmp
jl
push
pop
mov
push
lods
xchg
lods
inc
sbb
xor
je
lcall
rol
and
out
push
inc
sub
jo
popa
lea
fwait
cltd
mov
jbe
xchg
imul
mov
xchg
cmp
jns
dec
or
pop
mov
push
sti
pop
mov
fmul
push
or
xorb
pop
jno
mov
cmp
mov
aam
sbb
in
dec
jle
leave
scas
sub
mov
insl
cmpsl
mov
cmp
sti
push
or
movsb
cmp
jl
inc
cmp
pop
fcmovnb
sahf
adc
fpatan
mov
sub
inc
std
je
ja
sub
les
jmp
les
repz
add
ss
call
mov
popl
negb
mov
out
sti
mull
ficoms
out
std
mov
or
mov
mulb
test
push
hlt
test
cmpl
dec
in
fidivs
add
add
cwtl
and
push
shll
push
sub
fwait
jmp
pop
incl
in
jmp
ljmp
test
or
shlb
xchg
pop
mov
sub
mov
imul
mov
push
fsub
cmpsl
jno
stc
popf
mov
mov
mov
mul
js
adc
fsubl
and
and
repnz
inc
push
ret
dec
fcomip
adc
sbbl
push
and
fwait
dec
notb
sub
push
and
stos
mov
movsl
mov
mov
xchg
push
les
stos
sbb
push
push
popa
lds
jecxz
pop
push
aaa
repz
cli
icebp
add
cmp
or
add
inc
xchg
sub
frstor
cmp
push
enter
cmp
pop
outsl
inc
sub
inc
pop
out
jae
les
mov
cwtl
icebp
mov
ds
pop
pop
leave
mov
mov
jge
adc
mov
in
insl
or
dec
ss
dec
sub
jb
mov
divb
dec
push
arpl
pop
ret
sarl
inc
and
sub
and
adc
das
dec
cmp
xchg
dec
in
add
fwait
imul
xor
sbb
sub
aas
xchg
aas
aad
lcall
cmp
pop
mov
fs
and
out
adc
imul
in
fildl
xchg
push
ja
cli
push
xchg
pushf
sbb
fs
ret
xchg
mov
xor
in
test
jne
push
out
arpl
inc
xlat
dec
lea
data16
push
mov
xor
inc
or
test
cmp
scas
xchg
inc
repz
clc
xchg
outsl
push
cltd
test
sbb
add
repz
shll
mov
push
cmpb
cmp
pushf
xchg
sub
xrelease
push
sub
inc
push
jecxz
push
fcom
sbb
mov
jge
inc
inc
push
ss
or
push
pop
pop
fists
mov
jne
xor
jae
lret
push
lock
and
mov
jno
repnz
push
or
pop
pushl
mov
push
dec
idiv
adc
dec
dec
pushf
cli
dec
aad
loop
stos
jbe
xchg
imul
jo
out
xor
sub
addr16
add
pop
mov
sbb
loope
mov
dec
pushl
mov
icebp
sbb
xor
arpl
xchg
mov
jno
or
mov
mov
fcmovb
xorb
or
ja
dec
hlt
aam
jae
out
out
xor
push
push
lods
cmpb
push
push
out
lods
rclb
push
out
jmp
push
out
pop
pop
jo
fwait
sub
int3
pop
clc
mov
dec
and
adc
cwtl
hlt
jl
iret
andb
cmp
cltd
add
mov
sbbb
fsubrl
sub
lret
xor
data16
cmpsl
ds
xlat
imul
movsb
pusha
push
ljmp
call
cmp
subl
in
pop
leave
pop
cli
cmp
inc
pushf
addr16
or
in
scas
jle
lods
adc
or
push
js
inc
xchg
or
push
out
outsb
or
jecxz
pop
lcall
and
inc
in
mov
push
mov
xor
inc
xlat
pop
fisubl
jl
xor
gs
jo
push
and
fidivrl
xchg
jge
sbb
out
pop
or
test
inc
sub
add
iret
xor
and
ret
jp
xchg
add
into
aam
dec
ret
push
arpl
int3
pop
es
lret
mov
push
mov
in
ljmp
out
or
adc
mov
inc
jno
xchg
pop
cmp
jb
cmp
int
iret
stc
jge
outsb
fs
outsb
mov
decb
scas
test
or
mov
fst
addr16
ljmp
icebp
push
inc
pushf
movsb
xchg
push
notb
sub
or
bound
sbb
add
cmp
adc
cmp
mov
jp
leavew
dec
adc
ds
loopne
jno,pn
shlb
sub
frstor
sbb
push
inc
stc
imul
lds
push
in
dec
add
lcall
pop
add
adc
sub
insl
pop
mov
mov
and
fdivrs
hlt
dec
test
and
out
and
pandn
dec
cli
out
aaa
insl
xor
pop
inc
add
in
outsl
mov
ret
jl
lar
pop
aam
or
ljmp
shl
movsb
push
and
call
addr16
sub
es
lret
cli
jl
mov
mov
push
mov
insb
icebp
xchg
sbb
dec
pop
pop
lcall
inc
push
lcall
in
xor
adc
insl
xor
fidivs
pop
imul
mov
int
aas
ret
cmp
inc
aam
repnz
lds
add
mov
sbb
les
mov
loop
inc
test
jmp
mov
cmpsl
adc
cs
pop
jbe
in
and
test
addr16
push
insl
loop
sahf
popa
or
lea
cmp
xchg
pop
pop
lret
xor
lcall
stc
adc
shlb
in
cmpsl
adc
xchg
lret
in
mov
dec
xchg
push
out
lods
addr16
cltd
into
adcb
rol
xor
out
lods
lea
cmpsb
sub
jmp
push
push
push
push
sub
push
aas
in
bound
fcmovne
sbb
inc
xlat
insl
xor
movsl
jecxz
jecxz
xor
cmp
adc
or
pop
xchg
aam
mov
mov
ljmp
adc
movb
mov
pop
sub
sub
sbb
sbb
push
jge
in
popl
shl
or
mov
cld
and
dec
loop
negl
sbb
hlt
mov
dec
fnstsw
xchg
xor
incb
je
das
mov
mov
iret
data16
and
stc
stc
pop
ja
call
push
cli
push
pop
testb
add
xchg
fmull
frstor
dec
inc
lds
mov
ffreep
inc
das
cmp
pusha
pop
shr
push
ret
int3
mov
add
jns
xchg
fwait
xchg
push
mov
jge
cmpsl
cmp
jne
push
sbbl
pop
inc
cmpl
ljmp
scas
inc
sar
push
fsub
mov
lods
lea
scas
enter
std
adc
ficoml
or
xlat
outsb
out
std
lret
decl
add
mov
inc
or
hlt
mov
mov
ds
outsb
hlt
xchg
push
mov
mov
les
mov
popf
fldl
push
sub
sbb
xlat
repz
stos
clc
lds
mov
imul
in
and
pop
in
daa
repz
insl
lahf
push
or
lods
sarb
mov
cmp
gs
repz
scas
mov
adc
or
shlb
sub
cmp
pop
mov
xor
push
mov
mov
jge
out
adc
mov
sbb
mov
cs
add
inc
loopne
nop
mulb
test
test
push
outsb
cmp
int3
xchg
jge
pop
sub
cmp
push
cmp
je
es
adc
xor
mov
xchg
iret
lods
inc
fsts
xchg
nop
adc
adc
cltd
jecxz
sub
imul
dec
mov
in
xor
xor
add
ret
lret
mov
mov
aad
inc
arpl
pusha
lahf
jo
mul
cmp
ljmp
insl
cld
sbb
and
cmp
sbb
loopne
in
dec
stos
in
repnz
dec
jle
push
xchg
popa
mov
jae
inc
gs
xchg
inc
int
faddl
mov
test
cmp
ljmp
push
je
dec
jle
jo
inc
std
mov
cmpsl
or
les
or
push
fwait
xchg
mov
addr16
pop
mov
in
jle
lea
add
xchg
cmpsl
popf
dec
scas
jb
rorb
jae
lock
imul
aam
xchg
call
mov
ljmp
and
dec
sbb
push
mov
jb
jecxz
dec
adc
hlt
dec
fistps
mov
xlat
or
push
push
sub
jbe
dec
dec
rorb
rorb
stc
push
adc
or
push
aam
dec
scas
call
sub
loop
xchg
cmpsb
push
push
and
nop
daa
or
xor
outsl
pop
pusha
adc
mov
xorb
jl
jnp
mov
fistps
mov
popa
sbb
test
leave
push
mov
punpckhwd
lcall
stc
and
insl
nop
inc
mov
test
not
lret
leave
add
stc
scas
pop
iret
ja
mov
mov
cmc
push
imul
sbb
xchg
cwtl
lock
cli
jge
mov
fisttpll
cmp
cmp
fwait
insb
mov
sbb
dec
fmull
pop
data16
testl
dec
cmpsl
fstp
bound
out
xchg
std
dec
repz
jno
pop
cmp
mov
xchg
mov
movsb
lea
or
pop
sahf
pop
jge
nop
enter
sti
xor
call
ljmp
mov
ljmp
lret
stc
rclb
fstps
jge
inc
cli
cmp
int
mov
xchg
mov
cwtl
pop
mov
sub
imulb
mov
push
mov
rol
sbb
test
iret
mov
sbb
imul
std
cmp
mov
add
mov
cmp
arpl
add
mov
outsb
loop
idivb
xor
xor
add
and
or
test
and
nop
pop
pop
inc
out
decb
pop
cmc
inc
sbb
mov
push
loope
jp
mov
push
jbe
add
jnp
pop
sub
lea
mov
or
xchg
add
push
jae
lods
int3
jno
push
rclb
jecxz
repz
testb
aad
adc
loop
inc
dec
aad
out
xorb
rcll
cli
lods
xchg
or
mov
movsl
arpl
xchg
jp
ret
jg
fistpll
lods
cmc
push
cmp
nop
addr16
aam
cmp
imul
hlt
and
push
mov
push
push
mov
ja
cmp
test
jo
and
notl
xor
jno
mov
ljmp
shlb
out
repnz
mov
or
inc
sbb
push
insl
cmp
jo
daa
outsb
and
jnp
leave
cwtl
int
loope
pop
push
push
or
mov
test
daa
sbb
dec
dec
insl
clc
cltd
aaa
mov
xor
int
clc
mov
sub
leave
fidivs
cmc
mov
cwtl
in
xchg
mov
aad
sub
jb
dec
nop
in
jl
xchg
mov
push
scas
mov
pop
out
jns
dec
stos
adc
ja
shll
int3
dec
sbb
mov
add
sub
sub
cltd
sbb
dec
hlt
ret
loopw
lcall
mov
cmp
movsb
xchg
xchg
sbb
decl
cmp
dec
data16
push
xchg
xor
pop
mov
fwait
cmp
pop
and
nop
aam
fs
or
leave
mov
sub
iret
xchg
push
fistpl
pop
adc
gs
jge
pushf
testl
ljmp
adc
jle
sub
fdivs
add
xchg
jge
testb
stos
cld
shlb
out
test
out
cwtl
cmpsb
cmp
incl
mov
popf
sarb
add
jge
or
sarl
mov
jle
fsubr
popa
mov
push
hlt
pop
push
jg
das
and
mov
push
inc
popa
push
and
or
loop
xor
test
mov
mov
fiadds
jmp
repz
mov
and
daa
mov
fisubrl
ficoml
pushf
loopne
sti
test
int3
xor
in
fsts
cmp
insl
insl
xor
int
je
rcll
lea
mov
sub
push
ljmp
mov
xor
dec
fucomip
addl
outsl
sbb
or
mov
lea
scas
decl
pop
int3
loop
dec
sub
je
sti
icebp
jl
xchg
fwait
stc
mov
movl
imul
rclb
inc
ret
or
xor
and
aad
mov
sbb
sub
add
cmp
mov
lds
test
les
mov
jg
push
xchg
jge
cli
jns
add
mov
jne
cmp
loop
mov
push
jecxz
and
ds
cld
xchg
sub
test
ljmp
jl
cmp
mov
or
jno
aad
mov
xchg
adcl
xchg
xor
xchg
in
sbb
movsl
and
and
push
loope
or
xchg
dec
outsl
inc
mov
cltd
sub
das
add
adc
mov
push
sarl
jnp
push
mov
jle
mov
fld
in
push
mov
addl
jg
lods
enter
ret
mov
pop
pop
mov
adc
and
mov
and
push
dec
and
stc
adc
lods
cmp
push
out
pop
mov
repnz
adc
mov
inc
jnp
rol
int
or
pop
mov
outsb
mov
adc
pop
cmp
out
test
adc
bound
jecxz
dec
ljmp
scas
cmp
inc
shl
xor
fistps
les
mov
push
mov
push
lret
frstor
mov
pop
sahf
and
jmp
mov
and
scas
push
push
mov
push
and
fcomps
add
dec
aam
pop
mov
mov
outsb
xchg
out
mov
xor
imul
int3
shl
test
sbb
mov
sets
mov
bound
jns
cmp
ret
cmc
adc
dec
shrb
sbb
out
mov
xor
xor
les
aas
andb
inc
loop
cmp
rorb
or
xor
adc
jnp
das
outsb
xchg
sbb
sti
ss
jo
dec
data16
incb
xchg
rcrl
mov
testl
jb
jmp
js
xchg
test
mov
xorb
sub
shl
sub
xchg
push
add
lahf
xor
and
shrl
dec
xchg
sti
cmpsl
je
push
xor
adc
inc
push
das
mov
lock
jb
adc
ficompl
in
inc
xor
fs
orb
call
fsub
add
cmp
jecxz
fs
cmp
sti
fwait
push
dec
stos
lret
jp
jle
sbb
outsb
jp
insb
out
mov
mov
sahf
mov
mov
push
faddp
call
in
adc
out
mov
adc
les
outsl
adc
cld
fcomps
mov
dec
ret
pusha
xchg
sbb
aam
pusha
stos
iret
mov
and
inc
xchg
xor
sbb
sahf
shrb
adc
fs
mov
dec
and
jg
mov
test
popf
push
mov
jo
mov
fwait
aas
add
xor
xor
jmp
push
js
dec
sbb
cmp
and
push
push
lods
das
or
cmp
mov
mov
sbb
xchg
outsl
js
xlat
inc
add
dec
inc
xchg
or
lea
aaa
stos
lods
daa
xchg
mov
xor
cmpb
xchg
clc
mov
popf
andb
or
push
lock
int
dec
js
into
mov
lea
mov
xor
mov
push
test
adc
cmpsl
xchg
jp
dec
inc
idivb
shr
xlat
xchg
jae
mov
sbb
iret
lret
add
cmp
xlat
popf
ret
pop
outsb
lock
inc
data16
sahf
pop
sub
js
scas
or
lds
lcall
push
sahf
adc
and
jg
cld
loopne
push
jno
mov
add
push
cmp
mov
or
hlt
test
rcrb
and
pop
and
test
js
loop
lods
add
mov
cmp
adc
lcall
sbb
iret
xor
fidivrl
xor
shll
mov
jecxz
pop
ficomps
adc
add
cmp
inc
test
xchg
shr
aad
aad
jmp
in
ljmp
ficompl
push
add
shlb
add
sub
daa
and
cmp
repnz
or
bound
mov
ss
push
pop
ret
cmp
xchg
mov
inc
adc
dec
test
xchg
add
fbstp
gs
inc
shlb
rol
cmp
div
aaa
ret
loop
mov
js
sub
mov
jbe
inc
mov
imul
ds
mov
cmp
mov
loop
sub
ret
sbb
jb
cli
data16
outsb
cltd
in
out
adc
pop
fdivs
int
loop
push
push
loopne
lahf
mov
adc
jnp
and
inc
push
fsubl
mov
mov
or
pop
sahf
add
stos
sub
roll
sub
ljmp
dec
fisttpll
pop
adc
adc
adc
test
mov
pop
cltd
push
sbb
ret
jp
pop
xor
push
dec
jo
push
mov
imul
cmpsl
mov
enter
add
and
mov
pop
xor
ret
pop
or
push
addb
mov
lea
imul
mov
mov
push
in
sub
mov
dec
add
ja
pop
pushf
fdivl
dec
cmp
sbb
call
fisubrs
in
stc
inc
clc
push
out
iret
popf
xor
scas
and
es
rcrb
in
mov
mov
cmp
jno
jle
das
xchg
mov
ljmp
addb
mov
mov
sbb
int3
xor
dec
call
jp
xchg
sub
cmp
mov
fstps
adc
xor
mov
rorb
push
cmp
push
mov
or
lcall
cltd
cmp
out
fiadds
int
sub
imull
aam
daa
jne
adc
inc
decl
ds
mov
cwtl
mov
jo
cmp
outsb
pop
adc
mov
fstl
mov
and
dec
adc
test
xor
jp
lret
push
push
jecxz
hlt
scas
xchg
lds
movd
and
shrl
test
popa
incl
out
dec
cwtl
inc
xor
in
data16
pop
fstl
dec
mov
movsb
lcall
insb
add
add
jg
sbb
loop
sarl
pop
ljmp
mov
pop
and
cmp
aaa
push
icebp
mov
fistpl
mov
push
mov
fwait
sbb
pop
sahf
subb
testb
or
mov
xchg
push
mov
push
mov
or
jge
xor
xor
fsubs
push
pushl
xor
mov
pop
aaa
sbb
lock
and
sub
int
push
fs
push
xchg
stc
pushf
mov
mov
sti
adc
mov
adc
sub
dec
sub
dec
pop
push
enter
mov
xchg
add
jo
cmp
mov
shll
cmpl
cmp
or
bound
in
xorl
mov
add
les
pusha
pop
cmpsl
loopne
pop
adc
sti
iret
sub
loope
inc
enter
push
xchg
mul
add
or
ficoms
jno
cmp
jecxz
xor
cmpsl
cmp
notb
adc
inc
add
inc
jp
in
or
movsl
imul
dec
push
andb
fcmovnbe
rolb
shlb
jge,pn
fnsave
jae
xchg
mov
jno
mov
xor
pop
push
lock
insb
inc
ss
add
push
pop
dec
pop
js
lock
jge
fimull
shlb
js
pushf
ja
add
or
lods
rcrb
call
push
mov
outsb
push
cltd
push
int
xchg
call
xchg
jbe
xor
fbld
push
inc
cld
fnsave
adc
dec
xor
xor
sub
scas
push
enter
lahf
and
sub
jo
imul
adc
add
jle
std
hlt
dec
and
rclb
nop
jecxz
and
cmp
mov
ret
cli
enter
mull
push
inc
push
adcb
jmp
out
test
dec
and
mov
mov
jge
ljmp
je
jae
outsl
pop
or
sti
adc
out
lods
fcom
aam
sbb
fmul
jo
fidivs
sub
jmp
test
mov
jp
adc
ret
je
iret
shll
mov
cmp
rcr
fsubl
mov
cmp
popf
repnz
mov
xor
mov
and
push
sti
add
mov
in
pop
mov
jge
xor
cmc
pop
flds
sbb
and
jp
push
or
inc
sahf
xchg
inc
stos
in
ficoml
fldcw
mov
test
adc
xchg
not
sarb
enter
fnstcw
mov
cwtl
sahf
and
movsb
rcrb
add
mulb
loope
jmp
dec
cmp
pop
lahf
sub
or
test
pop
jle
pop
adc
dec
pushf
lea
outsb
adc
mov
lret
jne
call
mov
std
cmp
xchg
sub
test
mov
repnz
divl
dec
loopne
pop
shrb
push
popf
sub
mov
pusha
pop
xsha1
cmpsb
mov
xor
adc
xor
lock
imul
enter
imul
daa
movl
dec
sub
jmp
leave
mov
imul
cli
or
ljmp
jmp
adcb
or
sub
enter
test
repnz
cli
xchg
adc
push
cmp
movsb
xchg
add
aas
aad
push
mov
lods
cli
add
stos
mov
push
bound
lret
adc
cwtl
lret
jb
adc
lahf
ret
ja
cs
roll
xchg
jo
sbb
adc
pop
pop
fxch
out
jbe
pop
pop
pop
jbe
jb
and
stos
xorl
push
adc
lock
add
aaa
out
ret
xchg
pop
lods
cmp
xor
cmpsl
cmp
mov
shll
add
sbb
xor
decb
dec
fdivrp
shll
ss
cs
lcall
inc
cmpsb
test
add
inc
xor
mov
mov
pop
rcrl
push
mull
jb
or
arpl
int
jns
adc
xorl
adc
push
test
inc
data16
xor
jecxz
mov
jns
mov
or
sub
jb
ret
sub
sub
cmpsb
sub
iret
pop
cltd
rorl
inc
sarb
or
add
es
stc
cltd
xor
rcll
dec
icebp
xchg
leave
add
es
out
stc
add
iret
mov
or
pop
adcb
xchg
gs
inc
xchg
mov
lret
bound
jmp
scas
sahf
jns
repz
xchg
loop
pop
icebp
dec
and
push
push
dec
dec
xchg
push
add
out
insl
sbb
jne
pusha
mov
rcrb
sub
lret
jge,pn
fwait
into
insl
shlb
out
popa
imul
mov
and
lods
push
mov
ljmp
jae
outsl
out
in
stos
mov
push
add
nop
icebp
nop
push
jecxz
jmp
xchg
fsubrl
inc
inc
scas
ja
jg
ret
sbb
xor
enter
inc
fstpl
mov
lahf
in
mov
lret
or
scas
rclb
mov
sbb
loope
push
xchg
push
mov
mov
and
mov
add
sub
mov
mov
push
jp,pn
pop
sub
leave
mov
cmp
mov
int3
ficomps
out
inc
xorb
scas
inc
or
int3
iret
clc
dec
xchg
pop
jp
push
jno
dec
xchg
adc
jg
jns
pop
out
jae
add
xchg
lcall
sub
insb
shrb
lcall
movsl
sbb
pop
cmp
iret
adcb
shll
or
and
scas
jns
jb
dec
ljmp
andl
call
in
stos
int
dec
lods
inc
andb
ficoms
mov
fsubrs
xchg
jno
out
mov
push
out
pop
adc
daa
cwtd
and
mov
cmpsb
adcb
les
rcrb
pop
clc
stc
sbb
sub
sahf
xor
xor
js
in
mov
aad
mov
push
pop
and
ficoml
adc
mov
xor
test
ret
adc
outsb
add
movsl
data16
ds
add
push
repz
dec
outsl
icebp
insb
inc
out
mov
aam
push
xchg
jecxz
aam
movsl
sarl
call
icebp
sbb
pop
add
std
jp
cmp
xchg
push
adc
in
cmc
cs
adc
mov
idiv
dec
ret
lods
sbb
and
sbb
gs
gs
or
fsubrs
pop
or
jl
imulb
adc
inc
push
mov
xorl
push
adcb
inc
push
aad
and
dec
inc
push
fsts
jne
jnp
sub
sbb
sub
jns
stos
std
mov
pop
jg
mov
push
lods
jae
andb
xchg
sub
pop
jae
adc
out
stos
cwtl
push
rol
xor
das
xchg
ret
jns
cmc
ljmp
add
jno
jns
loop
adc
push
enter
xchg
stos
xrelease
std
mov
scas
arpl
aas
aam
sub
mov
jne
cs
xlat
jmp
loop
pinsrw
imull
adcl
js
fiadds
and
xlat
test
pop
mov
repz
ror
fs
or
lds
or
in
xchg
aaa
enter
jb
inc
pop
push
xchg
sahf
push
adc
fidivrl
mov
pop
dec
out
cs
into
pop
fidivrs
cld
mov
mov
int3
mov
or
daa
adc
push
and
out
and
mov
jmp
cmp
adc
xchg
mov
std
loope
aam
scas
inc
or
inc
int
lea
xchg
js
addr16
insl
jge
jge
or
jae
add
test
clc
xchg
in
and
and
cmp
mulb
jecxz
les
mov
add
fwait
jbe
jb
mov
stc
cwtl
push
test
mov
mov
pop
das
lea
mov
pusha
ficoms
fsubrs
jnp
push
mov
idivb
lret
stc
nop
mov
sahf
pushf
xor
push
out
bound
faddl
push
sbb
ljmp
outsb
mov
cmp
stc
cmp
sub
cmp
movb
aam
xchg
fisttps
imul
aaa
mov
es
mov
mov
jg
sbb
leave
cli
sbb
dec
sub
ss
inc
repz
jns
fisubrl
adc
test
mov
cmp
sbb
in
dec
or
mov
leave
out
xchg
into
cmp
jg
mov
inc
pop
mov
insl
in
dec
mov
push
cmc
inc
push
rol
subl
test
out
push
stc
xchg
push
lds
jg
sbb
xor
imul
pmullw
shrb
fwait
cmp
mov
ret
js
fnstenv
xlat
sbb
push
clc
call
test
sbb
jne
xor
movsb
repnz
mov
mov
xchg
dec
and
mov
imull
fdivr
cwtl
pop
punpckldq
mov
inc
sub
loopne
jne
or
lds
mov
insb
dec
ret
popf
add
jmp
mov
push
lods
rcl
pop
shll
ret
cmpsb
add
cmc
sub
lahf
push
or
or
fs
andl
jns
stc
rcrb
add
xchg
pop
sub
pushf
sbb
jle
movsb
js
push
adc
ret
hlt
ljmp
add
fistpll
and
push
ss
sarb
repnz
loopne
out
mov
gs
pop
jbe
cmp
xchg
int
fcompl
pop
cmc
pop
lea
subl
mov
jnp
or
in
adc
test
aad
ret
call
mov
jno
or
pop
pop
stos
inc
ret
inc
adc
enter
movsl
mov
inc
testb
das
xchg
aam
sub
hlt
pop
insl
js
leave
pop
repz
mov
sbb
dec
or
mov
daa
nop
pop
jne
mov
mov
and
push
mov
sbb
cmp
jbe
mov
ror
xchg
sbb
iret
outsb
sub
add
pop
scas
sub
add
cltd
xor
inc
pop
roll
add
insb
xchg
push
jns
inc
and
out
push
or
inc
inc
mov
aas
in
dec
rclb
fwait
lock
jp
scas
das
cld
add
scas
cmpsl
push
sbb
dec
icebp
pop
cmp
repnz
test
lock
sub
mov
push
xor
xor
scas
sbbb
cmp
push
mov
add
xchg
fidivl
out
cwtl
pop
out
jecxz
mov
dec
repz
popa
sub
lds
sub
js
lods
popl
dec
call
mov
mov
test
stos
or
sub
lret
and
add
add
call
dec
out
jge
sti
data16
xchg
sbb
je
pop
cli
mov
test
lret
mov
ja
jg
fisttpl
adc
aam
push
lock
mov
mov
sbb
pusha
mov
xchg
fcoms
sbb
lods
fdivrs
lods
mov
fwait
adc
cmc
cltd
cmp
and
mov
pop
jge
ret
mov
std
mov
mov
mov
aam
dec
adc
insl
aad
cltd
cltd
lods
add
iret
dec
inc
xchg
inc
jne
xor
cwtl
mov
sub
or
xor
sub
fdivrp
xchg
adc
push
mov
push
lds
cmp
bound
add
cli
mov
mov
xchg
and
sub
mov
sbb
xchg
cmp
or
mov
jecxz
scas
mov
into
nop/reserved
ss
ss
sbb
fmull
lret
add
inc
add
pop
repnz
jns
mov
jg
testb
jmp
xor
cli
pushf
dec
sub
pop
push
adc
add
add
and
icebp
dec
add
out
cmpsl
hlt
pop
int
cmp
cmp
cli
loopne
xchg
ljmp
sbb
pop
fdivrl
cmpsb
jns
shr
inc
imul
mov
mov
mov
outsb
mov
in
inc
pusha
lahf
bound
dec
inc
fiaddl
cmpsb
pop
mov
adc
pop
mov
jb
xlat
pop
icebp
or
and
scas
pop
je
int3
inc
push
out
out
outsb
or
pop
repz
int3
push
test
mov
dec
cmpsb
cmp
fmuls
xchg
xchg
aad
pop
nop
repz
cmp
add
pop
xor
test
push
aas
aad
addl
and
mov
test
mov
jmp
mov
insl
mov
insb
out
mov
frstor
or
pop
out
jbe
andb
xor
les
mov
fsubrs
inc
lods
cmpsb
into
adc
js
and
jp
push
js
out
jae
jge
daa
and
fstpl
lret
movsb
xor
fnstcw
stos
push
leave
pop
and
pusha
fdivr
sbb
movsl
sbb
ljmp
pop
pop
idivb
push
jge
subl
cmp
shlb
shlb
lods
adc
clc
nop
xchg
mov
sub
test
adc
mov
in
inc
dec
jle
mov
pop
fldl
imul
ljmp
xor
cld
aas
xchg
xor
movsb
pop
xchg
jne
jmp
mov
pusha
push
out
faddp
jmp
out
mov
push
int3
jge
push
mov
in
test
rorb
fmul
incl
push
xchg
adc
add
gs
mov
ss
jae
cmp
loop
sti
das
arpl
dec
dec
sti
stos
push
mov
lahf
cmp
mov
add
dec
rcrb
jp
dec
std
fbstp
rcrl
inc
out
mov
pop
add
dec
add
fcomip
mov
jge
sub
pop
sub
xor
bound
ja
loop
add
dec
mov
mov
mov
cltd
les
xchg
cs
mov
sub
adc
mov
push
in
add
sbbb
in
insl
or
mov
insb
loope
pop
outsb
mov
or
mov
inc
in
and
xchg
dec
cli
daa
mov
cmc
scas
mov
in
repz
or
ja
xor
mov
sbb
mov
ds
shrb
mov
mov
cwtl
adc
fdivr
aaa
mov
add
mov
cmp
lock
movsb
push
mov
xchg
movsl
sti
sahf
adc
lcall
cwtl
pop
in
gs
cmp
mov
cwtl
cmp
out
ja
decb
lret
mov
sbb
ret
sbb
adcl
mov
sbb
push
xchg
test
lret
sub
ss
repz
inc
sar
popf
inc
push
mov
inc
sbb
nop
and
test
and
in
xor
popf
jmp
pop
or
dec
lahf
cmpb
cmp
cltd
xor
adc
mov
cltd
or
or
stos
iret
mov
mov
xor
pop
loop
rcrb
pop
or
fsubr
inc
adcl
pop
ljmp
push
mov
push
outsb
lahf
cmp
dec
test
enter
dec
jae
mov
ret
sbb
bts
leave
roll
jne
nop
sti
test
in
mov
icebp
lret
leave
jp
les
push
pop
outsb
pop
ds
outsl
lock
fcompl
popf
pop
inc
jno
cs
mov
outsb
jnp
pop
xlat
popa
and
xor
pop
arpl
add
mov
pop
imul
push
mov
test
sbb
fs
add
jmp
push
ror
jnp
inc
push
gs
jno
adc
sbb
mov
xor
pop
repnz
or
subb
clc
adc
bnd
cmp
insb
enter
jbe
addl
sub
test
repnz
push
add
mov
pop
lret
lret
aam
mov
push
mov
loopne
add
push
mov
add
int3
scas
or
test
mov
cmp
pop
xor
mov
imul
and
inc
sbb
leave
dec
lret
ss
mov
mov
ja
or
mov
dec
aaa
pushf
fwait
add
cmp
push
sbb
daa
outsl
les
mov
stc
jb
dec
sbb
das
dec
adc
cmpsb
mov
loope
scas
aam
mov
int3
xor
push
xchg
mov
test
insl
jb
jg
jno
sbb
stos
lcall
and
add
xor
and
xchg
mov
mov
test
adcb
sbb
xor
dec
popf
dec
notl
pop
mov
xlat
lods
mul
pusha
add
hlt
push
in
jno
fs
dec
sbb
sub
pushf
nop
add
inc
cmp
ja
ja
int
mov
and
bound
pavgw
loop
lods
dec
aas
sahf
hlt
imul
leave
inc
fnstenv
psllq
mov
int3
jmp
icebp
leave
and
sti
mov
jg
add
or
loopne
push
test
popf
add
js
lea
mov
jb
imul
bound
iret
out
push
inc
and
lahf
stos
dec
mov
cwtl
lahf
shrl
inc
jecxz
jmp
jecxz
pop
adc
leave
xchg
pop
rcrl
and
mov
xor
push
inc
push
jno
xchg
sub
lock
inc
clc
sub
fidivrs
cwtl
out
ja
xchg
sub
mov
pop
and
push
jge
xchg
das
push
sbb
or
lds
stos
movsb
lret
int3
sub
ret
jg
jecxz
add
mov
mov
adc
or
add
es
sarl
or
aam
out
test
test
imul
mov
addl
sub
mov
fnstcw
ja
loop
add
mov
jmp
daa
bound
nop
je
push
jg
scas
inc
aaa
fsubs
insl
mov
mov
pop
mov
cmpsb
in
mov
je
mov
arpl
fs
sub
leave
into
xchg
into
push
test
js
mov
fcoml
sub
mov
stos
loop
jae
cs
pop
enter
push
std
cmpsb
in
inc
data16
ja
and
sar
mov
jae
inc
imul
stc
xor
lret
rcrb
lcall
shlb
lcall
shlb
add
sbb
push
pop
lods
xchg
aas
es
mov
lret
out
xchg
inc
in
push
or
insl
mov
loop
push
jle
xchg
add
mov
or
in
add
imul
out
call
or
popa
lods
jl
adc
xchg
movsl
pop
aad
or
cmp
fwait
sub
or
ja
sub
subps
loop
stos
ja
mov
icebp
and
in
shlb
xor
jle
sub
rorl
mov
fsubrl
push
mov
fs
jno
shll
xchg
adc
fdivl
inc
inc
add
and
test
dec
pop
jbe
fldenv
outsb
test
push
cmpsl
daa
add
cmc
iret
jno
adcb
xor
imul
out
ljmp
clc
fsubrs
fidivs
add
and
mov
ret
cmp
xchg
add
and
push
icebp
add
jge
sbb
or
xchg
add
in
sbbl
out
pop
mov
outsb
iret
inc
jge
dec
mov
faddl
mov
push
dec
dec
push
add
sbb
mov
dec
outsl
imul
dec
add
mov
pop
pushf
jae
push
cmp
xor
add
sbb
jmp
and
inc
cld
and
inc
scas
pop
xchg
roll
sbb
cli
out
sub
arpl
mov
add
out
adc
pop
notb
pop
ss
getsec
sbb
cmp
or
cltd
sub
adc
movsb
fs
cmp
dec
aam
lret
mov
jnp
cmpsl
jbe
add
and
jo
ret
inc
stc
dec
jle
add
cmc
dec
jnp
xchg
imul
cmp
add
pusha
dec
mov
bound
add
sbb
add
out
jnp
dec
jmp
mov
iret
in
add
add
ja
pop
jl
inc
aas
add
lods
fistpll
push
das
lock
jb
pop
clc
insb
mov
insb
sbb
sub
add
mov
fstpl
lds
pop
or
sbb
cmp
cmp
aad
mov
cs
popa
pop
inc
fdivl
shrb
adc
ja
inc
push
mov
cld
aad
or
sub
loope
mov
mov
inc
test
inc
pop
fstpl
jg
imulb
jb
arpl
pop
xor
cmp
sub
push
addr16
enter
pusha
ds
gs
adc
leave
cwtl
inc
pop
mov
int3
dec
push
jno
or
lods
cmp
in
xchg
scas
or
les
sub
test
xor
popa
subl
dec
and
jno
stos
mov
add
fwait
sub
shr
sahf
pusha
shrb
push
mov
lcall
loope
or
push
cltd
xor
xchg
scas
adc
xchg
pop
xchg
xor
ret
lds
insl
mov
sbb
jno
movsb
lods
fdiv
faddp
adc
adc
xor
lahf
and
mov
jle
xorl
adcl
sti
data16
mov
pop
mov
fdivrs
mov
cli
inc
add
push
fstpt
cmpsl
add
mov
push
mov
sub
dec
adc
add
mov
inc
push
xorl
push
fistps
insl
into
mov
mov
pop
lock
and
rcr
or
out
sbb
daa
xchg
sub
mov
inc
lret
push
mov
js
int
dec
les
cmp
ret
fbstp
push
lods
inc
adc
test
mov
test
out
push
andl
push
cmp
test
stc
mov
imul
sbb
pop
imul
scas
jns
mov
test
jb
xlat
test
pushf
push
clc
fwait
jge
adc
jp
inc
decl
outsb
loope
imul
movsb
js
lds
sub
mov
jp
fwait
jle
icebp
mov
jne
jo
shll
arpl
add
cmp
mov
ds
cmp
in
outsb
ret
push
sub
rclb
sbb
jns
or
mov
jp
push
mov
aas
mov
repnz
jmp
mov
sub
inc
pop
cmp
and
test
aas
aad
ror
arpl
inc
inc
push
mov
jmp
jnp
imul
and
mov
into
popf
aas
pop
shr
lods
outsl
sbb
cmpsb
mov
ds
std
dec
mov
repz
push
in
inc
aas
js
xlat
in
fbld
mov
cwtl
jne
inc
scas
ret
cmpsb
repz
mov
fldcw
int3
mov
push
cmp
push
jmp
jbe
cmp
jo
jne
mov
jmp
cli
jne
mov
pop
adc
iret
sub
jo
fiaddl
jp
aas
pop
cs
outsb
cmp
xchg
test
pop
mov
popa
mov
ret
lock
repz
mov
leave
adc
arpl
pop
push
adc
movsb
cmp
subl
cmp
scas
insl
inc
lds
xor
mov
clc
xchg
shr
xor
sub
stos
and
fimull
ja
mov
sahf
lods
outsl
xchg
outsl
ret
mov
xchg
xchg
mov
rcrb
xchg
popa
rorl
and
add
inc
aaa
scas
push
fadds
icebp
sbb
clc
out
pop
dec
add
cmovs
xchg
add
ljmp
jmp
lea
dec
add
or
scas
pusha
test
add
mov
mov
add
add
pop
std
lcall
jecxz
adc
mov
and
mov
ljmp
push
in
in
jb
rcr
inc
bound
pop
inc
cld
jmp
pop
rcr
aas
push
mov
adc
int3
jg
sbb
fnstsw
fsubl
roll
inc
cld
mov
adc
and
imul
cmp
jae
shl
inc
flds
dec
push
pop
sbb
test
cmovs
popf
xor
jne
aam
test
mov
pop
mov
cmpsl
mov
andl
into
xchg
les
jl
adc
dec
push
rorl
arpl
das
int3
inc
lods
fs
push
pushf
scas
xchg
fidivl
in
lods
rcrl
int
cltd
scas
loope
stc
mov
add
test
std
aam
rcr
das
xchg
lcall
lcall
cld
sbb
sub
jmp
mov
mov
inc
ds
daa
push
aaa
xchg
cmp
mov
mov
fistps
xorl
pop
hlt
leave
mov
gs
daa
mov
mov
imul
mov
lods
ja
adc
aas
push
ja
fs
pop
inc
inc
repz
pop
in
xor
xor
aam
inc
popf
sbb
cwtl
das
mov
pop
in
mov
jns
mul
call
push
add
jle
adc
adc
test
int3
call
mov
jo
mov
inc
mov
push
jge
xor
bound
sahf
mov
dec
push
js
aaa
mov
mov
stos
and
std
cmpsb
xor
cli
dec
js
cmp
test
cmp
fabs
and
out
mov
pop
jne
dec
xchg
pop
push
cmp
ljmp
adc
out
imul
loop
push
add
mov
mov
ret
push
cwtl
and
lea
push
or
js
mov
hlt
sbb
mov
mov
call
jmp
jbe
push
xor
cltd
bound
daa
push
inc
push
lods
mov
xor
lret
cmpsb
lock
xchg
test
outsb
jle
ret
pop
mov
out
loop
xchg
fstps
dec
mov
cmp
fldenv
cmp
repnz
xor
jnp
fisubs
dec
sbbb
cmp
push
ret
xor
lds
int3
dec
aaa
jns
enter
cmp
cs
jns
repnz
outsl
and
repz
inc
mov
or
xlat
or
repnz
cmpl
xchg
mov
jmp
jns
das
push
lahf
jo
imul
jmp
or
adc
mov
orb
int
mov
xor
mov
mov
inc
mov
mov
mov
dec
sarl
or
lret
and
push
mov
jmp
or
dec
iret
outsb
sbb
sbb
cmp
mov
cmp
mov
jp
push
adcl
pushl
mov
fisttpl
lret
rcll
inc
fdivrs
ss
cmp
push
iret
daa
dec
lret
push
fs
add
fstpt
or
mov
xchg
mov
pop
in
pushl
add
xchg
and
pop
dec
add
sahf
push
and
and
and
rorb
into
fs
out
fnsave
xchg
add
cmp
jne
xor
lods
andl
sbb
in
cmpb
xcrypt-ofb
cmpsl
je,pn
sbb
jb
repz
cwtl
jmp
xlat
popa
cmp
jbe
inc
sub
inc
imul
ss
jp
cmp
sbb
mov
ja
cmp
adc
jge
and
in
faddl
push
mov
pop
adc
je
adc
test
arpl
dec
test
dec
scas
sbbb
inc
mov
cmpsb
test
mov
pop
repnz
sbb
sub
push
icebp
pop
mov
sub
jae
sbb
pop
xchg
adc
pop
xor
in
movsl
mov
mov
mov
out
push
jne
mov
xchg
sub
jns
jp
sub
cmpsl
es
pop
dec
dec
pop
jg
fildll
lahf
cwtl
das
or
xchg
sub
cltd
pusha
push
lods
push
test
push
lret
and
imul
jecxz
shlb
mov
adc
arpl
mov
sub
stos
adc
inc
mov
lods
fistl
outsb
sub
inc
aas
lret
insb
movb
dec
mov
cmp
arpl
in
lods
inc
movsl
push
xor
sbb
adc
aas
bound
fdivrs
cmp
test
js
std
xchg
out
fldl
fisttps
lahf
fistl
add
outsl
gs
pop
sbb
popa
loope
inc
testl
inc
popf
and
jmp
sbb
les
mov
addr16
pop
add
rclb
pop
pop
out
imul
jg
stos
aam
xchg
push
popf
mov
arpl
repnz
lahf
gs
loopne
push
dec
icebp
aaa
jle
addr16
ljmp
lock
add
out
dec
jecxz
sbb
into
sbb
mov
outsb
xor
mov
sub
imul
add
push
imul
outsl
mov
cs
pop
pushf
and
inc
xchg
sub
ljmp
adc
in
hlt
jl
and
fwait
ss
int
xlat
fimuls
mov
cmp
out
dec
pop
cmovae
or
mov
loopne
jecxz
int
push
push
push
subb
cmc
mov
sbb
mov
jl
or
cs
and
out
les
push
jae
clc
jne
pop
je
jle
lods
mov
bound
or
imul
xchg
inc
push
aad
arpl
jbe
fs
push
xchg
dec
dec
and
push
mov
ds
adc
pop
push
push
add
pop
cld
xchg
lea
jecxz
cmp
xchg
out
push
pop
fcomp
xchg
imul
pusha
popf
adc
mov
js
push
mov
push
push
int3
imul
cmpsl
mov
in
jbe
aad
sbb
ret
mov
in
sub
or
mov
out
popa
mov
push
dec
test
sub
sbb
dec
ja
jge
jo
mov
adc
shll
loope
jae
in
inc
xchg
fwait
xor
push
fbstp
push
push
fdivrl
je
fldcw
mov
aas
dec
shr
add
jp
and
add
jle
ret
aaa
xor
jp
pop
filds
xchg
cmp
testl
push
test
cmp
std
xor
sub
enter
or
jb
adcb
cli
pop
imul
and
add
mov
stos
popa
or
fsub
mov
fsubrs
dec
les
jle
or
xlat
cmpb
ljmp
ljmp
roll
sbb
or
push
xchg
mov
and
cmpsb
or
push
insl
mov
xor
jo
and
inc
or
adc
adc
mov
jge
out
pop
xor
push
cld
mov
or
mov
lods
pop
repz
mov
mov
jae
xchg
sub
shrb
std
mov
cmp
sbb
jmp
xchg
xchg
sub
mov
mov
adc
std
gs
mov
sub
inc
sbb
dec
arpl
inc
ljmp
sub
cmp
inc
lock
and
push
stos
inc
popa
mov
leave
loope
nop
ret
movsl
es
lahf
pop
inc
xlat
xchg
andl
jae
dec
fidivrl
pop
jmp
js
hlt
xor
pop
pop
mov
aam
xor
fsubrp
pop
push
and
and
fcoms
and
mov
mov
dec
fsubrp
add
filds
and
pop
mov
cmp
test
mov
fwait
mov
fcompl
xor
mov
dec
mov
cmp
in
clc
lds
cmp
dec
dec
and
insb
das
mov
push
ffree
aam
xorl
fs
in
pop
test
movsb
mov
pop
mov
bound
fdivl
mov
roll
cmpsl
inc
dec
jmp
jb
loop
and
leave
rcrl
fcomps
lods
fbstp
fdivl
int3
dec
test
sti
jbe
ja
jno
sbb
sbb
movsl
dec
js
pop
lods
aas
nop
daa
retw
scas
xor
loopne
xor
xor
ret
jmp
mov
sub
sbbb
popa
outsb
sbbb
lret
stc
jecxz
mov
push
cmc
ja
cwtl
cmpsb
std
dec
std
std
push
xor
cmp
insb
xor
add
inc
mov
pop
mov
loop
shl
add
and
xchg
int
ret
xor
scas
push
push
ret
repz
incb
mov
lea
fiaddl
out
je
sbb
mov
add
cmpsb
clc
ljmp
outsb
adc
mov
sub
outsb
push
outsl
push
push
mov
pop
addr16
cmp
test
sbb
lahf
insl
cmpsb
in
aaa
test
mov
cmc
lret
gs
loopne
jbe
jnp
jl
and
add
int3
movsl
and
mov
xchg
decb
dec
mov
sti
pop
ss
cld
push
jmp
stc
popf
pop
or
xor
movlps
mov
xor
mov
push
mov
test
mov
lods
jb
outsl
sub
pop
imul
push
out
lea
ficoml
dec
js
out
cmpb
sti
scas
inc
faddl
scas
arpl
adc
fdivrs
testl
adc
jmp
movl
adc
mov
movsl
jb
xlat
stos
pop
out
dec
adc
jnp
jne
cmp
jb
pushf
fadds
shlb
cmpb
jle
cmc
and
fwait
xchg
and
sub
sub
sarb
push
shlb
popa
jno
pop
arpl
data16
cltd
xchg
imul
aas
pshufw
jg
aad
andb
mov
adcl
jnp
cmpsb
or
xor
icebp
xchg
popa
loope
mov
je
aas
lret
push
or
sub
xor
mov
push
push
cs
pop
popa
in
lods
add
adc
push
rcll
mov
pop
shlb
into
push
inc
push
push
pop
sub
sti
lods
xor
fstpl
cmp
cli
jne
stos
rcrl
stc
test
xlat
stos
lahf
push
sub
mov
out
pop
push
addr16
add
sbb
sbbb
pop
mov
fucomip
test
test
push
fdivp
sub
mov
jmp
pop
aad
pop
lds
push
pop
pushf
test
std
mov
sbb
jnp
inc
adc
xchg
push
jge
mov
or
mov
jbe
mov
fistpl
adc
mov
outsl
clc
mov
out
les
stos
movsb
in
or
in
adc
cwtl
mov
add
mov
pusha
sbb
sbb
cmp
outsl
cmp
mov
inc
mov
cmp
popa
dec
add
test
fildll
enter
outsb
incb
lcall
jmp
pop
idivl
sub
mov
cld
dec
ss
stc
xor
sbb
sub
clc
arpl
mov
sub
test
lds
sub
pop
cmp
jbe
repnz
add
pop
mov
sub
out
pop
xchg
sbb
imulb
mov
xchg
and
clc
xor
movsl
data16
xlat
xlat
mov
mov
xchg
pop
push
xlat
sub
enter
loopne
sbb
add
xor
adc
mov
push
mov
or
cmp
pushw
js
call
js
jge
test
xchg
adc
leave
push
sahf
ljmp
jnp
les
mov
ret
shl
fs
adc
js
cmp
lcall
fcompl
xchg
cmpsl
push
adc
inc
out
xchg
xchg
cmp
call
jg
pushf
cmpb
into
mov
mov
je
scas
xchg
and
mov
out
xor
jmp
pop
mov
add
sbb
cltd
and
dec
repnz
stc
and
gs
xchg
fdivl
xor
and
sub
or
stos
add
dec
inc
int3
pop
in
insl
mov
popf
shlb
and
cld
or
sub
mov
pop
mov
cmp
fwait
sub
sbbl
loopne
lea
sub
or
outsl
mov
mov
jne
inc
mov
sbb
ljmp
lahf
mov
mov
jmp
xor
cwtl
shlb
and
mov
cli
shrb
xchg
pushf
mov
lret
rorb
fwait
imul
cli
and
imull
push
pop
aam
lds
mov
mov
sahf
test
mov
add
jle
cmc
mov
fcom
inc
outsl
adc
add
push
pop
aam
add
imul
in
notl
sbb
das
rcrl
scas
pusha
adc
adc
fsubrs
sub
xor
insl
out
hlt
jg
xchg
insl
or
sub
inc
pop
push
in
xchg
jp
dec
push
sub
jae
popf
cmc
pop
xchg
negl
push
call
jno
out
mov
daa
mov
push
jo
lcall
dec
sbbb
test
dec
call
sbb
or
push
sbb
inc
cltd
jae
adc
push
filds
movsb
data16
lods
movsl
cmp
testl
or
ret
or
mov
orl
ja
ljmp
jl
xchg
or
and
pop
ja
ret
jns
sbbl
push
ljmp
jmp
jecxz
popa
xchg
sub
and
dec
out
jo
adc
xchg
xor
ret
ljmp
das
pop
xorb
vshufps
jp
add
pop
mov
cli
sub
enter
jge
les
fs
pushf
cmp
imul
in
add
sub
loope
not
sub
pop
mov
popf
mov
mov
sub
xor
push
ss
dec
mov
adc
inc
std
xor
push
and
pop
mov
pop
sub
mov
lds
push
dec
or
push
push
movsl
inc
cmp
sub
fwait
or
testl
out
ja
test
xchg
jb
imul
sahf
xchg
mov
ret
filds
jle
mov
sbb
enter
punpckhbw
mov
lret
cmp
mov
jle
arpl
inc
and
adc
pop
adc
lods
in
jo
int
xor
ja
gs
cld
xchg
and
sbb
pop
loopne
sub
mov
dec
movsl
cmp
imull
adc
int3
mov
test
fnstenv
pop
pop
push
nop
add
xor
pusha
insl
push
add
addr16
sub
loope
test
ret
mov
xor
pop
or
scas
scas
shrb
flds
mov
add
pop
lea
mov
inc
das
jg
insl
inc
pushf
pop
mov
aas
dec
and
push
jae
into
or
push
xchg
fs
in
inc
and
push
cmp
mov
jns
outsb
sub
movsl
mov
xor
and
stos
outsl
loope
and
imul
adc
std
imul
push
mov
mov
arpl
sub
mov
pop
insb
icebp
adc
pop
add
sahf
add
das
xchg
cmc
stc
shlb
dec
inc
sbb
stos
inc
mov
sbb
mov
and
aad
pusha
subl
mov
incb
jp
inc
push
aaa
icebp
xchg
int3
dec
pop
out
mov
outsb
jp
mov
mov
ret
add
arpl
nop
or
imul
cmpsb
jge
adc
mov
sbb
add
push
mov
add
or
or
repz
js
cltd
mov
lret
stos
out
inc
jmp
cmpsb
mov
sahf
shl
or
dec
xor
dec
lds
cmp
mov
sbb
pop
rcll
divb
add
pop
das
out
jge
pop
fdivrs
jecxz
xchg
lret
testl
mov
jmp
mov
dec
jnp
add
adc
sbb
cmp
icebp
flds
sbb
push
mov
or
outsl
stc
mov
ret
outsb
jmp
sbb
aas
mov
and
dec
add
mov
fcmovnb
xor
dec
or
jl
loopne
stos
int3
ss
popf
inc
jl
test
add
cmpb
test
lods
inc
inc
insb
sarb
jmp
daa
fs
add
or
cmp
dec
repnz
mov
cld
lods
xor
lods
iret
xchg
dec
in
call
aas
adc
popa
ret
xor
ds
int
pop
cmp
mov
add
push
rcr
outsb
jle
pusha
les
mov
xor
gs
and
pop
jl
mov
dec
out
push
call
dec
loop
data16
jmp
sahf
add
je
adc
fs
popf
into
cmp
and
std
xchg
movsb
hlt
aaa
lret
cwtl
sbb
xchg
jg
jmp
enter
sbb
ja
lods
pusha
insl
mov
je
decl
repnz
aas
and
pop
xchg
sub
into
movsl
mov
fisubrs
lahf
sub
mov
mov
push
jae
lock
sub
adc
mov
jge
push
shll
fdivrs
push
pushf
inc
imull
insl
imul
fnstcw
scas
mov
nop
out
xchg
sbb
fsubl
repnz
bound
repnz
dec
ds
insl
test
adc
dec
push
inc
out
pushf
mov
out
sbbb
cmovbe
push
stos
in
aaa
mov
in
xor
add
scas
stos
icebp
ja
scas
ret
or
push
mov
push
dec
out
imul
int3
and
enter
test
popl
popf
and
daa
pushf
outsb
and
movsl
jl
cltd
arpl
flds
arpl
xchg
lea
jecxz
stc
dec
sbb
fmull
pop
ja
xor
xchg
lret
xchg
mov
hlt
in
add
lea
testl
add
outsl
fsubp
enter
cmpb
leave
cmp
pop
cmovne
mov
call
les
sub
insb
add
xor
lahf
jge
xchg
sub
icebp
add
mov
dec
or
sti
and
fdivrs
out
push
mov
lods
int3
cmp
addl
shlb
inc
mov
xor
movsb
lcall
jle
push
dec
xlat
push
jno
ja
mov
mov
cli
std
test
pusha
imull
jle
js
pop
mov
sbb
cmp
arpl
mov
les
xchg
insb
inc
fldcw
leave
icebp
movsl
addr16
test
jmp
jno
stos
mov
fs
aaa
mov
out
mov
lret
inc
ret
enter
jl
mov
movups
mov
lds
or
mov
cmp
adc
test
or
jb
and
or
lods
dec
fs
xchg
adc
push
hlt
cmp
sub
mov
mov
fbld
sub
outsb
idiv
xor
sbb
mov
cmpsb
in
adcw
sahf
push
pusha
pop
sahf
pop
lea
pop
hlt
mov
xlat
outsb
fwait
adc
lds
mov
xchg
es
shll
or
dec
and
mov
sub
jg
mov
add
xlat
sub
int
bound
adc
pop
fwait
sub
cmpsl
adc
push
fsubrs
shll
pushf
stc
pop
daa
fsubs
inc
sbb
jmp
push
cmpsb
xor
aas
fucomp
stos
xor
or
aad
in
sbb
jmp
leave
push
inc
cmc
test
xor
add
sub
mov
pop
mov
sub
insb
push
jecxz
roll
fcmovnbe
mov
add
jns
dec
inc
arpl
data16
push
cmc
ret
pop
xor
aaa
dec
and
mov
adc
js
insb
mov
int
and
push
test
cmp
pop
mov
inc
repnz
inc
adc
int3
fs
cmp
mov
ljmp
mov
xchg
add
xlat
fiadds
shll
xlat
int3
inc
push
js
push
hlt
pop
icebp
dec
data16
daa
xchg
sub
and
mov
jnp
ret
mov
dec
push
rorb
fmull
testb
out
es
imul
lret
xor
and
fnstenv
shrl
test
repnz
je
pop
pop
inc
cmpsl
jp
jno
push
dec
js
jae
leave
rcr
inc
or
jle
mov
iret
mov
push
sti
or
je
or
jns
xchg
into
fs
sahf
mov
loope
sbb
shlb
sub
aaa
mov
loope
pusha
inc
loope
mov
adc
out
adc
cld
mov
jg
sub
ret
xchg
xchg
scas
lret
in
cltd
inc
adc
mov
sbb
add
sar
inc
jnp
mov
mov
mov
xchg
or
fadds
dec
pusha
lds
push
xchg
loop
push
shlb
aad
push
enter
or
test
push
insl
and
out
std
xor
pop
xor
mov
xchg
or
int
aaa
mov
and
roll
or
lock
pop
fldt
dec
inc
add
mov
icebp
mov
push
xor
xchg
mov
xor
adc
xlat
movsb
lods
mov
add
sahf
xchg
scas
cld
jns
mov
add
sbb
or
add
test
nop
out
xchg
mov
vpmaddwd
sub
cwtl
mov
inc
ljmp
sbb
mov
dec
cmpsb
rclb
out
out
clc
sahf
inc
mov
adc
jge
nop
sub
jbe
cmpsl
adc
sub
pop
pop
sub
pop
les
rcl
lods
mov
cmp
fabs
es
xlat
inc
inc
ja
lods
lcall
fnsave
sub
popf
mov
loope
lret
push
fstp
push
dec
repnz
lock
out
inc
data16
inc
arpl
mov
lods
inc
sbb
cmp
xchg
fs
shlb
arpl
push
test
imul
lret
mov
cmp
sbb
icebp
movsl
leave
int3
mov
push
mov
adc
loop
call
aas
btl
arpl
inc
ds
xchg
sub
jecxz
inc
leave
jecxz
lea
adc
xchg
call
xchg
or
in
sub
stos
pop
mov
jne
sub
xchg
xchg
loope
ss
fdivrl
aad
int3
stos
jl
push
std
shlw
insb
adc
rcrl
xchg
popf
mov
mov
bound
dec
leave
push
jnp
push
pop
cld
mov
ja
sbb
xor
xor
lock
inc
jbe
mov
xor
loop
push
out
and
adc
pop
mov
clc
fwait
in
arpl
jns
mov
fadd
sub
cmp
xchg
imul
outsb
popa
mov
cmpsb
mov
sub
pop
loope
jne
add
mov
loopne
sbb
push
xlat
js
je
lods
movsl
xor
int
stos
sbbl
jp
adc
push
repnz
sbb
cwtl
xor
dec
jno
mov
stos
aad
stos
jge
xor
pop
xor
push
xchg
dec
push
in
jecxz
sbb
xor
sbb
mov
or
xchg
lret
xchg
pushf
sar
adc
repnz
in
stc
repnz
inc
xor
cld
xchg
cmpsl
mov
nop
out
xchg
jp
jns
and
inc
incb
cmp
ljmp
leave
inc
pop
rcl
mov
ljmp
call
popf
mov
lea
jbe
sub
popf
add
adc
pop
into
movsl
popf
mov
mov
filds
or
scas
adc
incl
jmp
pop
push
sbb
mov
cmp
lock
shrl
rcrb
pushf
mov
inc
adc
jnp
push
ljmp
dec
std
xchg
imul
xchg
or
push
in
sbb
ret
cmp
sbb
mov
shl
xchg
push
jp
rcrl
daa
sbb
push
sbb
pop
in
test
xor
cltd
enter
xchg
xor
int3
ss
movd
test
mov
lock
ljmp
xchg
sbb
ficomps
inc
dec
int3
xor
arpl
sub
inc
lods
adc
outsl
pop
in
and
jmp
sub
jne
out
lret
pop
cwtl
cmp
insb
jp
imul
or
rclb
and
jb
jbe
push
sahf
sbbb
shll
add
lock
and
cwtl
xchg
sub
mov
loopne
cltd
sub
fdivl
cmpsl
jle
pop
push
pop
jb
add
jae
dec
scas
out
test
mov
insl
or
adc
mov
xchg
nop
clc
inc
xchg
gs
fs
mov
sub
sub
pinsrw
popf
or
inc
mov
inc
or
lahf
inc
stos
add
sbbb
mov
aad
imul
inc
and
mov
adc
stos
loopne
inc
adc
jbe
int3
scas
stos
push
in
jno
cwtl
mov
into
fbstp
aad
sbb
or
xchg
pop
cmp
pop
add
lods
xor
mov
xor
jno
cmp
add
jecxz
shll
std
xchg
dec
lahf
fistl
or
add
mov
adc
mov
insl
jbe
mov
mov
cld
dec
jg
icebp
int
mov
push
jle
aaa
sub
sub
sbb
clc
sub
negb
xor
ficoml
dec
sbb
int3
xchg
xchg
mov
cmpsb
pop
imul
lahf
test
inc
cltd
out
addb
add
lock
lods
and
cmp
jne
in
xor
dec
data16
orb
sbb
fcoml
scas
out
add
dec
dec
cmpsb
and
stc
addr16
push
or
jno
nop
mov
push
jb
daa
and
nop
loope
inc
lods
in
add
push
aam
sbb
cmpsl
mov
je
stc
out
ud0
mov
es
shl
inc
or
inc
fcmove
mov
lcall
dec
movzbl
mov
call
or
adc
xchg
mov
jmp
push
pop
in
cwtl
test
cmp
mov
in
xor
mov
lcall
cmc
mov
jmp
fisubrl
or
pop
fsubrs
sbbb
mov
idivb
mov
sbb
pop
jno
or
and
ret
lea
push
sub
in
stc
repnz
dec
mov
arpl
xchg
mov
in
jp
jbe
lret
inc
fsts
mov
cmp
jmp
sbb
xor
nop
cs
xchg
cmp
sbb
out
pop
es
and
cwtl
fcmovbe
mov
rorl
push
ljmp
popf
push
lahf
repz
xchg
out
leave
dec
loopne
fstpt
push
or
daa
shl
push
add
cmpsb
ret
lret
cmp
push
mov
dec
mov
cmp
pop
push
aas
aam
in
adc
inc
pop
mov
xchg
xor
jecxz
or
inc
mov
in
xor
fwait
and
pop
fcmovne
push
or
imul
push
cwtl
add
xchg
insb
mov
pop
lahf
ffree
fnstsw
das
out
ja
mov
aam
jne
dec
or
shrl
fwait
mov
shr
es
jmp
inc
mov
mov
std
es
aaa
pushf
add
cmc
jmp
sbbb
or
ss
xchg
scas
in
insl
inc
mov
fmulp
fdivrp
sub
mov
jle
inc
fldcw
lret
cmc
and
jp
call
test
loop
and
xchg
fistps
enter
mov
fiadds
mov
addb
leave
adc
mov
and
lods
pop
jbe
sahf
and
test
jbe
imul
clc
fildll
aas
scas
sbb
mov
sbb
dec
rcll
ds
stc
dec
hlt
rcl
jne
mov
pop
xor
dec
loope,pt
dec
pop
popf
stc
cmp
or
fsts
das
std
fs
test
cli
ljmp
sub
pop
int
pushl
ficoms
ss
out
ret
dec
mov
push
push
je
pop
sbb
xor
pop
icebp
and
jno
shll
lea
mov
add
xorl
xchg
dec
jl
add
je
cmp
jne
pop
aas
push
cmpl
test
test
xlat
cs
mov
mov
or
addl
lret
push
mov
push
into
push
stos
fdivl
ret
jne
add
lods
int
int
mov
testl
mov
lods
jp
sbb
jbe
jmp
mov
clc
mov
cmp
add
add
insb
lret
fwait
pop
pop
into
sbb
xchg
mov
mov
sbb
sub
pop
mov
sbb
fnstsw
cmpsl
mov
mov
push
test
push
mov
rcr
pop
or
jns
jo
scas
fsub
out
les
adc
cs
fsubs
sbb
mov
cmpsb
inc
aas
dec
inc
adc
popl
xchg
imul
push
cltd
ds
int3
mov
lods
in
push
fistps
loop
aas
dec
add
and
and
ret
or
imul
push
push
pop
add
pop
fldenv
push
cwtl
stc
nop
aas
paddd
shrb
adc
pop
addb
inc
xchg
and
outsb
stc
add
data16
imul
inc
sti
mov
push
fnstenvs
cmp
stos
aad
sti
imul
push
out
mov
fidivs
pop
mov
jl
add
adc
mov
cmp
xchg
inc
cwtl
shlb
daa
mov
flds
subl
insb
dec
sub
jnp
clc
push
movl
and
fisubrs
test
dec
dec
adc
mov
shl
fisubrs
xchg
das
sbb
pop
push
cmp
not
vmovdqu
enter
loop
decb
ss
lds
mov
notl
je
mov
inc
fwait
mov
sub
sbb
pop
cmc
mov
sub
das
fisttpl
shl
fcoml
div
adc
add
fisubl
test
mov
pop
js
push
daa
arpl
push
dec
fsubrl
and
mov
jne
mov
adc
fdivrl
dec
cmp
xchg
out
jp
flds
xchg
jne
insl
push
test
fdivrp
mov
xor
fisttpl
lahf
or
rolb
es
inc
cmpsb
test
and
push
lcall
xchg
inc
inc
mov
je
push
lahf
jbe
ds
adc
jae
loope
inc
pop
sbb
jecxz
jnp
or
dec
jae
imul
imul
xor
or
push
mov
mov
fnstsw
movsl
test
and
inc
testl
pop
shlb
and
and
adc
lods
enter
mov
ret
inc
push
mov
fs
cmp
ss
mov
mov
jmp
addb
clc
fcmovnb
pusha
loope
cmp
leave
out
sub
push
xchg
dec
dec
aad
dec
shl
icebp
insb
sarl
imul
add
rcll
add
sub
leave
pop
nop
sub
fstpl
inc
add
mov
push
cwtl
xor
inc
cwtl
daa
test
jg
mov
lret
dec
or
cmpsl
enter
fbstp
mov
adc
jmp
adc
jne
xorb
or
cli
jno
pop
mov
in
aaa
sarb
outsb
loope
iret
fimuls
pop
xchg
push
sbb
jle
pop
lock
data16
jns
imul
jns
test
jmp
add
inc
ficomps
mov
mov
in
adc
mov
imulb
rcpps
jge
add
insl
inc
aas
adc
mov
sbb
clc
mov
pop
ret
lcall
sbb
imul
fwait
adc
stos
lahf
mov
in
push
dec
push
xchg
aas
std
xchg
jno
testb
inc
or
pop
dec
or
xchg
loope
hlt
adc
sub
mov
xchg
dec
hlt
adc
mov
mov
dec
outsb
inc
jp
mov
push
xchg
cs
push
jno
iret
sbbb
and
pop
push
mov
push
mov
in
xchg
sbb
jge
mov
and
sub
xchg
push
orb
xchg
mov
xchg
sub
push
add
push
notl
lods
adcl
loopne
movsl
addr16
shll
add
jbe
adc
jne
adc
lds
mov
sbbb
outsb
lds
imul
mul
cwtl
xor
pushf
xor
jmp
fbstp
push
sub
mov
and
mov
jbe
sub
scas
cmp
test
add
sbb
or
jg
aas
push
mov
sarl
or
jl
mov
lret
pop
iret
jp
test
lcall
inc
mov
mov
dec
pushf
dec
inc
outsl
sbb
xchg
or
fiadds
lret
addr16
jnp
repnz
lock
mov
iret
inc
cwtl
stos
cmp
cmp
pop
insb
scas
adc
test
xor
repz
inc
lret
mov
aad
les
cmpsl
out
adc
jb
cwtl
push
adc
ret
fsts
into
faddl
mov
inc
or
xchg
sub
inc
mov
js
nop
adc
pop
dec
loop
pop
xchg
sub
inc
lock
and
into
fildll
jno
cld
dec
pop
cmpsl
inc
mov
sub
push
pusha
ss
sub
pop
pop
lret
sbb
dec
dec
pop
pop
or
adcl
jl
mov
xchg
add
xor
cmp
iret
fisttpll
into
loopne
mov
stos
imulb
dec
fs
dec
pop
add
xor
pop
xchg
mov
repnz
xchg
sub
not
sbb
mov
cld
imul
daa
data16
lea
mov
rcll
xchg
adc
mov
sub
pop
hlt
stos
ljmp
movsb
mov
pop
dec
mov
adc
in
push
jo
cmp
subb
xchg
lock
sbb
cmp
and
jge
leave
xchg
sbb
bswap
fimuls
and
mov
push
lahf
xchg
test
mov
and
sub
jae
mov
xor
or
loopne
dec
xchg
insl
adcl
mov
lahf
pop
dec
shrl
outsb
leave
pop
addb
cmp
mov
mov
and
xchg
pop
repnz
jae
cmpsl
clc
pop
jns
mov
addl
sub
into
pop
sbb
jnp
testb
lds
pop
insb
das
xchg
dec
mov
fcoml
scas
iret
push
cmpb
arpl
dec
and
std
in
std
mov
mov
adc
pop
jg
push
mov
in
mov
push
scas
pop
outsl
push
lods
push
jle
movsb
cli
fldcw
mov
testl
pop
iret
mov
mov
jle
jle
pop
in
xor
ljmp
adc
movsb
pop
cmp
sahf
push
addr16
jle
aam
shll
cmp
aad
push
jne
mov
movsl
ja
iret
in
xor
xor
repz
push
sbbl
jno
xchg
dec
loop
out
jl
shrl
ja
xor
mov
data16
fwait
hlt
cmp
inc
in
pop
sti
mov
lret
ljmp
jno
setns
out
lods
push
jne
adc
ja
sbb
bound
dec
pop
cmp
js
ja
pop
xor
cwtl
xchg
mov
inc
mov
sbb
xor
cs
jecxz
pushw
icebp
lods
mov
cmp
inc
outsb
xor
out
mov
enter
jno
push
jle
jp
cmp
test
sbb
fstp
jae
cmpb
xlat
pop
pop
lock
ja
insl
icebp
aaa
and
add
sbb
xor
in
or
pop
cmp
jecxz
adcb
jl
gs
adc
jle
pop
mov
nop
add
pop
inc
sbbb
lahf
je
adc
mov
js
push
mov
push
or
insb
push
movsl
popf
sbb
mov
jmp
mov
or
arpl
test
sbb
stos
or
sub
clc
pusha
fisttpll
aaa
shrl
jne
test
jg
and
mov
call
and
nop
ljmp
mov
mov
jne
xorl
sub
jbe
pop
mov
sbb
lock
lret
inc
or
mov
pop
pop
xchg
in
mov
push
xor
adcb
or
pop
jmp
dec
cmc
jmp
rcrl
pop
rclb
and
sub
sbb
adc
push
jne
sarl
pop
in
insb
cmp
jle
dec
in
ljmp
repnz
adc
xchg
sub
leave
push
lcall
pop
mov
inc
push
loopne
sub
int
lods
in
mov
addl
ja
lahf
cmpsl
int
push
jns
mov
dec
inc
jbe
pop
lds
add
adc
mov
mov
add
mov
filds
aam
and
arpl
gs
xor
inc
out
pushf
jno
int
leave
int
mov
add
xor
movsl
sbb
mov
andl
add
or
lret
xor
shlb
shlb
inc
insl
xchg
sub
outsl
js
aaa
lds
jmp
data16
rcl
push
xor
inc
mov
in
mov
mov
aas
dec
ja
add
gs
in
mov
push
cmpb
icebp
xchg
mov
roll
xlat
outsb
push
and
cmp
sbb
pop
xchg
sub
ss
adc
into
aad
dec
sub
sti
xchg
adc
cld
mov
jl
and
adc
addb
sub
pop
enter
out
sub
icebp
xchg
lock
push
sbb
pop
add
out
cmpsl
ret
in
test
subl
mov
mov
adc
outsl
aam
mov
dec
xchg
enter
or
cmp
orb
mov
push
lock
std
das
mov
mov
test
fs
idivl
jmp
adc
mov
jmp
sub
das
or
std
pusha
scas
test
adc
div
and
lahf
push
xchg
call
icebp
push
mov
or
add
mov
addr16
sbb
lret
shlb
fwait
push
les
or
scas
jmp
testl
roll
push
add
mov
les
or
jecxz
sub
cltd
xchg
mov
jp
push
in
and
movb
aad
test
mov
mov
sbb
sub
mov
mov
cwtl
and
rcrb
shr
into
push
or
in
mov
fbstp
push
or
les
lcall
out
lds
pop
jp
hlt
cmpsb
inc
fwait
sti
in
jle
sub
add
jo
scas
inc
gs
cmpb
movlps
xor
jno
sahf
fcompl
or
and
or
ss
add
xor
mov
add
ds
sbb
xchg
je
fcompl
add
rorb
bound
mov
cmp
test
out
xor
js
jbe
jne
xor
mov
jmp
or
mov
mov
push
mov
popa
fwait
push
or
shrl
jno
add
out
int
dec
aad
movsl
or
ror
idiv
loop
mov
jo
pop
fiaddl
mov
cli
fs
or
call
and
inc
xchg
inc
sbb
cmp
sbb
mov
mov
and
mov
or
shlb
stos
inc
mov
pop
add
jb
and
rclb
or
adc
or
jl
fwait
movsl
lds
inc
xchg
sub
add
daa
mov
in
cwtl
sub
sbb
jae
or
mov
incl
idiv
inc
fnstcw
aas
lds
xor
push
std
pop
sti
fwait
sbb
xchg
push
aaa
mov
mov
mov
xchg
in
adc
xchg
dec
xor
cmc
jle
lret
lea
iret
add
push
lods
push
push
xchg
mov
or
xchg
in
lcall
in
aad
add
int
mov
adc
aad
sahf
mov
sub
rcr
jbe
or
lret
ja
jae
fsubr
std
xchg
sub
enter
sbb
mov
andb
daa
fs
cltd
bound
sub
mov
repz
and
shl
fcomip
and
hlt
mov
cmpb
jns
or
adc
leave
arpl
in
xor
xchg
pop
sti
adc
or
xchg
add
orb
mov
bound
xchg
mov
subb
dec
movsb
out
gs
jne
lods
inc
in
jp
or
pop
imul
push
stos
mov
dec
in
cmp
dec
in
leave
testb
cmpsb
lods
out
js
sti
push
lods
pop
mov
into
ficompl
mov
add
pop
mov
cmp
divl
icebp
sbb
mov
xor
pop
in
adc
jae
cli
lods
fidivl
or
cmc
jle
out
jecxz
add
out
dec
sub
test
and
mov
xchg
outsl
dec
add
fstpt
icebp
movsb
inc
insl
push
inc
push
mov
pop
cwtl
fsub
movsl
pushf
scas
mov
mov
jmp
xorb
adc
cli
shll
repz
loope
cs
push
mov
shll
cmpsb
xchg
int
lcall
jge
dec
cmp
test
lea
cld
jae
mov
daa
inc
out
data16
inc
call
push
mov
jmp
lds
push
dec
pop
dec
ror
adc
test
pop
lret
mov
dec
leave
mull
in
shlb
inc
ficoms
ja
inc
and
dec
sub
cmp
fs
outsl
int
dec
xchg
ljmp
mov
sub
lea
shl
insl
int
adc
cmp
push
rolb
popa
cld
ljmp
xchg
addr16
mov
insb
sub
sbb
jge
cmp
das
es
insb
stos
dec
or
scas
or
mov
mov
cmc
stc
movsl
add
inc
cmp
or
fistpl
xor
ret
lret
cltd
or
mov
mov
and
lock
aas
jnp
cmp
add
xchg
mov
xor
mov
push
push
movl
xchg
mull
jnp
xor
enter
pop
fiadds
or
mov
mov
or
hlt
lods
out
adc
rorl
in
in
add
mov
and
pop
fsubrl
idivb
and
aaa
xor
data16
xchg
adc
pop
pop
add
nop
stos
pop
pop
sbbl
bound
cmpsb
jae
and
scas
xor
push
jo
pop
add
ljmp
jns
and
fldenv
jle
xchg
cmp
les
inc
decl
mov
std
fistps
and
cmp
inc
mov
aad
outsb
mov
test
mov
mov
enter
in
aaa
xchg
push
dec
pop
fmull
cs
and
les
mov
mov
loop
fisubrs
out
jg
xchg
lea
cmpsb
mov
mov
and
lods
lret
adc
xchg
mov
into
sbb
bound
sbb
dec
out
inc
fildl
rcrb
add
jb
or
sub
js
pop
add
xchg
xor
cmpsb
hlt
sub
xchg
or
pushf
xor
sub
andl
or
imul
lds
out
or
test
mov
sbb
xchg
add
cmp
stos
inc
or
and
shr
push
pop
popw
cltd
adc
fiaddl
push
sbb
js
sbb
aas
repnz
pop
cmp
xchg
adc
push
sub
dec
popf
outsl
lcall
inc
fsubrl
arpl
stos
xchg
sbb
xchg
or
ja,pn
xor
xchg
jb
sub
inc
jmp
add
or
andl
pop
mov
popf
cmp
xlat
add
add
mov
jo
jp
mov
push
dec
add
incb
je
mov
repz
inc
fcoml
or
mov
adc
jl
in
and
dec
ret
jle
stos
push
test
push
cmc
movl
or
mov
out
neg
in
daa
xor
jno
and
loop
call
and
xchg
fadd
xchg
mov
mov
lock
cmp
div
push
out
xchg
aas
stos
in
rorl
clc
jle
fimull
aaa
clc
sti
popf
data16
je
add
jbe
mov
iret
fistpl
inc
pop
cs
push
xor
sub
push
xchg
xchg
imul
test
enter
sti
lods
pop
ficomps
cli
mov
fldcw
mov
jo
push
jb
sbb
loope
ret
loope
mov
pop
adc
imul
bound
stos
jo
dec
movsl
int3
xchg
mov
cmc
jg
scas
rorl
mov
adc
mov
imul
push
sub
int3
dec
jb
cmp
or
mov
ljmp
inc
sahf
sti
nop
or
out
mov
insl
rcl
add
scas
cli
inc
adc
pop
sbb
imul
jmp
adc
mov
pushf
iret
andl
fimull
xor
or
sbb
pop
std
movsb
jg
popa
push
test
mov
sbbb
jno
add
test
mov
mov
aam
mov
xchg
adc
loop
push
dec
jne
cli
sub
fs
jo
xor
xchg
add
pop
andl
push
pop
sahf
jp
mov
je
jecxz
icebp
adc
das
dec
mov
lahf
push
or
lods
lock
cwtl
scas
cmc
adc
divl
outsl
scas
sub
divb
push
imul
les
mov
dec
out
sbb
jne
outsl
cmp
clc
mov
lods
mov
pop
stc
sub
ret
jo
cmpsb
sub
pop
stos
pop
inc
sbb
mov
imul
enter
notb
addl
lret
adc
adcl
pop
jp
xchg
xchg
mov
sahf
sub
jp
in
popa
and
fnstsw
pusha
lea
xor
test
stos
mov
lret
pop
jb
sub
into
scas
jg
mov
jno
xchg
sub
cmp
and
pop
insl
call
sub
mov
cmp
lods
jle
inc
mov
adc
sub
js
mov
dec
mov
jbe
jnp
jle
pop
cmc
clc
jnp
inc
lods
sbb
cmp
dec
pop
xchg
out
adc
aaa
push
lds
out
pop
adc
fsubl
popa
pop
emms
sahf
jno
adc
ret
daa
push
push
add
sbb
jle
addl
stc
push
inc
inc
xchg
pop
out
gs
repz
ds
sub
pop
mov
sti
ja
repnz
push
xchg
data16
sub
mov
sub
xor
cmp
pop
bound
pop
mov
hlt
sub
xchg
mov
sbb
lds
jg
movsb
ja
nop
sbb
js
mov
xchg
repz
cmp
xchg
or
rol
fwait
sti
insl
pop
and
xchg
inc
fiadds
shl
pop
movsl
fdivl
xlat
cmp
xchg
inc
mov
pop
hlt
imul
adc
push
pop
cmp
rcll
cmp
mov
push
or
shl
jne
fmulp
pop
clc
jl
sbb
jle
mov
mov
mov
and
cli
scas
rclb
xchg
xor
enter
cmp
xor
sub
dec
mov
call
stc
stos
mov
lea
xchg
arpl
mov
test
ret
cmpsb
cmp
add
les
pop
test
or
das
cmp
lcall
sub
cmp
test
pop
mov
add
lods
adc
shl
pop
ret
inc
cmp
push
out
fcmovnbe
std
add
pop
test
orb
shlb
inc
inc
mov
mov
sub
ds
mov
fistps
and
jno
cs
sub
lcall
pop
popf
cmp
std
jae
dec
loope
push
pusha
imul
push
mov
mov
rol
loopne
inc
loope
xchg
cmpsb
mov
push
sub
xor
pop
cmc
push
xchg
sub
lcall
sarb
enter
pop
je
pop
je
xchg
dec
and
out
pop
xchg
sbb
movsb
sbb
mov
dec
in
jle
jmp
repz
push
js
push
testl
testl
int
mov
les
inc
rorb
pop
hlt
popa
imul
es
jne
jg
xor
jp
lock
sub
cli
pop
cld
sbb
addl
repz
mov
xor
xchg
mov
mov
frstor
aas
and
std
add
das
fs
fsub
push
jae
das
js
popa
in
shll
lods
dec
sbb
pop
or
sbb
int3
enter
or
int3
push
pop
dec
call
cld
sub
andb
test
jb
aas
add
idivl
mov
mov
mov
stos
lcall
pop
or
in
call
jno
sbb
loope
bound
std
xchg
xchg
cmp
sbb
mov
out
push
les
rcll
mov
mov
jo
jb
les
js
sbbb
pop
pushl
jge
xchg
xchg
movsl
fisubrl
sub
or
mov
fsubr
sub
mov
pop
ret
mov
jne
in
negl
fsubrs
sub
imul
out
jmp
push
hlt
push
xorl
fdivs
and
insb
sub
outsl
cmp
jno
jmp
or
jns
mov
adc
mov
dec
jns
inc
testl
pop
mov
andl
mov
jl
or
push
rcrl
mov
lret
pop
pop
mov
xor
iret
ss
dec
cmp
dec
outsl
jb
ss
imul
lcall
nop
mov
sbbb
icebp
fnstenv
pop
testl
pop
xor
sub
xchg
sarb
dec
ficompl
outsb
mov
mov
js
fcmovb
push
lret
jbe,pt
cmp
cmp
xor
clc
cld
dec
mov
stos
ret
xorl
cmp
jecxz
fdiv
lock
test
sbb
adc
subb
jb
dec
mov
add
or
xor
fcmove
outsl
xchg
mov
dec
add
arpl
pop
call
movsb
in
push
repnz
repnz
pop
mov
mov
cmpb
testl
sahf
out
mov
outsb
divl
enter
insb
jle
movsl
mov
push
mov
fstpl
lcall
jge
cwtl
jae
pop
nop
pop
inc
lock
push
push
sub
dec
daa
lahf
push
or
out
dec
test
in
dec
cmpsb
fwait
pop
mov
or
dec
aad
fldt
push
sbb
movsl
popa
adc
adc
push
mov
aam
dec
into
bnd
ret
jae
add
js
testl
adcb
mov
popf
sub
repz
mov
cmp
sub
sbb
mov
jecxz
push
add
andb
and
jp
out
jb
and
add
test
add
jnp
mov
lds
sub
insl
xorb
aam
mov
clc
xor
push
pop
dec
push
xchg
add
sbb
pop
mov
sub
pop
imul
notb
repnz
dec
sbb
les
insb
push
or
mov
arpl
xchg
dec
sti
ja
sbb
xchg
hlt
lret
adc
adc
push
sbb
out
sbb
stos
mov
xorl
arpl
push
repnz
push
fcompl
cli
fcoml
cmpsb
mov
lock
shr
xor
cli
adc
pop
xchg
cs
inc
push
clc
pop
add
fsubl
mov
push
loope
mov
loope
pop
push
ficoml
pop
loopne
pop
sub
xchg
fs
push
xor
dec
mov
ja
push
rcll
fcmovnu
push
jle
push
mull
push
xchg
aad
inc
imul
gs
scas
pop
mov
pusha
push
mov
fisubs
adc
cmp
insl
mov
and
push
sbb
call
mov
les
jb
pop
test
fstps
mov
xchg
or
movsb
cmpb
jge
fnsave
into
adc
lods
jl
push
cmp
popa
test
mov
pusha
lea
out
fstp
sub
frndint
dec
test
rcl
fstps
cs
push
in
add
in
inc
sbb
mov
out
mov
xchg
cmp
add
jno
add
dec
adc
pop
repnz
fwait
dec
mov
xchg
xchg
cmp
lret
xor
stos
cmpsl
rcrl
rcr
orb
enter
hlt
js
es
movsl
sub
mov
dec
ds
mov
and
mov
mov
or
pop
push
jb
xor
outsb
addr16
repnz
ficompl
push
sbb
loop
inc
mov
jge
stos
aas
push
jno
incb
shl
or
aam
aam
and
out
hlt
jle
bound
xchg
fdivrs
les
imul
out
add
xchg
outsl
lea
jae
mov
dec
mov
stos
xchg
inc
flds
pushf
mov
or
ret
cwtl
andl
sahf
loopne
xchg
mov
mov
sarb
sub
xor
arpl
push
or
scas
aas
mov
mov
lahf
incl
and
shrb
push
jno
mov
dec
inc
aam
pop
js
test
mov
dec
mov
cmpsb
in
fsts
mov
shr
mov
imul
jge
lods
cmpsl
ds
fnstsw
fidivrs
lret
les
aaa
adc
lcall
fcomi
xchg
cmp
jbe
push
in
sbb
je
pop
lods
mov
inc
jo
sbb
inc
lret
sbb
cld
jne
leave
sbb
xor
sub
add
xor
cmp
push
int3
jg
movsb
add
mov
adc
inc
and
push
scas
dec
sbb
scas
fldcw
test
or
gs
pop
pop
loopne
mov
fimull
insl
call
bound
inc
out
sbb
add
sub
int
dec
iret
pop
hlt
das
add
adc
xor
and
add
mov
test
add
dec
clc
out
ret
and
out
and
aam
xor
jecxz
aas
mov
rcr
xchg
mov
sbb
mull
or
xchg
mov
scas
out
test
fisttps
test
sarb
sub
daa
pop
sub
push
or
insb
xlat
fwait
pop
jecxz
je
inc
xor
imul
call
out
sbb
push
xor
xor
cmp
inc
pop
hlt
cmp
divb
test
jecxz
insb
stos
mov
cmp
outsb
sar
push
and
sbb
in
and
fmull
lret
loopne
arpl
fld1
cli
hlt
ljmp
incb
dec
testw
mov
sbb
push
push
and
scas
inc
sub
pop
mov
pop
add
jecxz
mov
mull
mov
sub
movsl
shl
shl
mov
cmc
and
roll
mov
dec
pop
scas
and
jnp
inc
xchg
mov
xchg
add
bnd
sbb
in
cmp
shrl
je
sbb
fbstp
imul
xchg
lods
mov
sbb
enter
loop
pop
scas
mov
cmpsb
mov
pop
push
or
xchg
pop
mov
scas
push
repnz
in
inc
dec
jo
ret
aam
pushf
incb
flds
and
adc
daa
mov
sub
pushf
sahf
fmul
xchg
test
mov
fildl
mov
lahf
mov
jg
add
pop
addr16
or
in
fldt
cmp
test
insl
jb
ds
clc
pop
flds
aas
push
cmp
mov
pop
out
sub
adcb
rcll
xchg
and
mov
nop
inc
rclb
in
stos
adc
repz
adc
andb
push
setle
mov
push
xrelease
ds
shr
std
test
cwtl
sbb
test
imul
out
adc
dec
ss
mov
icebp
movsb
push
divl
das
mov
aaa
sbb
push
pop
movsl
ficomps
pop
cld
adc
ss
fsubrl
addr16
imul
mov
mov
or
imul
mov
sub
addb
jl
jo
cltd
xor
xchg
std
cmp
nop
lcall
inc
gs
lret
fndisi(8087
js
in
xlat
shr
push
sbb
adc
out
cmpsl
inc
pop
cmpb
out
fistpll
leave
mov
jmp
sub
or
jno
push
lods
pusha
adc
add
dec
or
xchg
dec
loop
inc
adc
push
cwtl
add
cmpsb
jge
mov
insl
sub
cmp
cmp
pop
nop
add
aam
scas
enter
cltd
mov
int3
mov
lcall
push
loope
cmp
push
cmp
pop
fnstcw
pop
mov
loope
mov
gs
rol
and
or
mov
shl
js
or
push
adc
outsb
xchg
push
cltd
cmp
insl
jp
xchg
imul
sarb
fcomps
dec
fadds
fsubrl
scas
jg
test
outsl
sub
and
sti
mov
add
xchg
lods
push
lds
pop
inc
popa
jecxz
push
sub
mov
push
and
mov
gs
ficompl
pop
jbe
jmp
push
inc
fmul
xor
es
mov
clc
fadd
push
out
jl
inc
sub
fldl2t
idivl
aad
sub
adc
or
daa
sub
out
mov
faddp
pop
vmovmskps
ret
insb
into
inc
scas
fsubrp
sub
jmp
inc
fsubrs
movsb
inc
fistpll
loop
xchg
les
enter
dec
in
sbb
inc
and
cwtl
mov
sbb
mov
cmp
inc
mov
test
cmp
sbb
jl
sbb
xor
push
jns
mov
insl
lds
test
jno
test
sbb
hlt
cltd
xor
sahf
rolb
ret
sub
sbb
ja
cwtl
push
mov
ljmp
stos
xlat
test
mov
jae
andb
cmp
in
or
push
adc
xor
movsl
fldt
pop
add
ret
inc
pop
outsb
mov
lret
js
jecxz
mov
mov
daa
cmp
mov
dec
fistpll
das
push
ja
data16
jno
mov
mov
mov
push
fsubrs
xchg
dec
incl
and
and
jg
out
push
xchg
pop
cmp
jne
int
push
xor
adc
jle
aad
outsl
add
lret
or
lock
sarl
push
push
lcall
lock
or
loop
outsb
dec
mov
int3
mov
popf
push
push
ror
movsl
cmp
and
stc
mov
inc
je
cld
stos
or
pop
adc
test
test
mov
mov
lea
jl
lods
dec
mov
test
pusha
in
xor
cmp
mov
loopne
xchg
cmc
mov
add
xor
mov
sahf
clc
mov
adc
rol
lret
xor
dec
mov
mov
mov
mov
mov
mov
jle
dec
fprem
jne
rolb
je
data16
sbb
inc
xlat
xlat
adc
ret
jno
sub
lcall
and
jl
inc
xlat
fcomps
in
sbb
stos
push
je
sbb
adc
mov
ja
loope
mov
popl
and
movsl
icebp
push
insl
int3
das
sbb
push
mov
incb
inc
ljmp
cbtw
mov
insl
into
mov
loop
out
dec
mov
xchg
lahf
pop
mov
mov
mov
stos
mov
mov
sbb
xlat
scas
cmp
fistl
and
fmull
mov
and
adc
loope
cli
call
stc
sbb
ljmp
shll
lret
aam
jbe
pushf
mov
cmp
fadd
pop
mov
test
jbe
sub
fs
cmp
and
dec
sub
out
idivb
jecxz
stos
lock
cmpsb
xorl
push
insl
xor
cwtl
stos
punpckhwd
jg
test
daa
clc
dec
mov
jge
or
cmpl
std
les
jae
sbb
mov
cmp
test
ficoml
jne
fchs
add
xor
cltd
cltd
push
or
pop
rolb
outsl
xchg
test
fwait
sbb
add
mov
lret
lret
add
mov
push
dec
ljmp
les
xor
add
push
jmp
push
push
lahf
cltd
adc
daa
cltd
scas
inc
mov
sar
pusha
cli
sub
dec
or
jp
ja
fdivl
mov
rcl
cmp
imulb
fs
rcl
jecxz
jmp
add
loop
pop
ljmp
or
movsl
sbb
or
adc
adc
cld
outsl
es
ret
sbb
push
jle
bound
fwait
adc
shlb
mov
pop
rcl
js
lods
push
call
push
test
mov
sbb
mov
out
je
rclb
cmp
jecxz
das
pop
push
add
adc
nopl
push
wbinvd
cmp
nop
push
and
add
mov
cmp
xchg
clc
sarb
ffreep
loope
in
mov
es
xchg
rclb
leave
push
xchg
dec
fldt
shrl
hlt
mov
xlat
adc
leave
outsb
cmp
mov
icebp
popa
mov
les
cli
insb
fildll
iret
or
mov
or
jmp
popa
mov
mov
stc
aam
ljmp
push
or
and
push
add
inc
inc
cmp
cmpsb
lock
insb
cmpb
mov
clc
and
fmul
mov
into
sub
insl
add
mov
mov
test
cltd
cli
icebp
call
test
mov
pop
jnp
aaa
iret
insl
sbb
mov
mov
mov
jo
add
xor
stos
loope
scas
adc
push
call
inc
jecxz
sub
and
lret
adc
shrl
cmp
insl
jns
sti
stos
and
aas
mov
jno
cmpsl
cmp
shl
fdivrs
push
test
arpl
ficoml
mov
lea
int
jl
cwtl
inc
stc
jge
cmp
cmp
push
insl
loopne
out
add
sahf
mov
outsb
jle
xor
or
mov
ja
cltd
or
fdivrl
mov
jnp
jge
xor
and
or
mov
mov
xchg
adc
scas
sbb
mov
jo
mov
into
es
repz
xchg
cmp
pop
ljmp
lock
adc
je
cmp
pop
mov
mov
xchg
add
inc
cmpsl
push
push
or
int3
jmp
clc
out
and
inc
dec
nop
daa
addl
mov
cs
outsl
cltd
arpl
nop
sub
ret
popf
pop
dec
dec
and
add
xchg
sbb
cmc
mov
adc
adc
lds
fs
stc
jnp
imulb
xor
fcompl
push
mov
ret
jae
hlt
pop
lods
js
xchg
pop
enter
jg
xchg
sub
lahf
mov
xchg
subb
mov
ja
push
pop
dec
cmpsl
scas
add
xor
sub
in
fimuls
adc
inc
sub
pop
xchg
cmpsl
jbe
push
adc
xor
out
inc
mov
and
fistl
or
or
sub
repz
cmp
fwait
leave
push
leave
push
pop
cmpsb
lcall
cmp
mov
repnz
add
sub
pop
ja
enter
dec
pop
aad
in
sar
testl
movsb
repnz
iret
jl
pop
sub
xlat
hlt
adc
test
ds
call
or
jge
push
popf
sbb
psubd
data16
lahf
loopne
dec
ficoml
in
mov
add
mov
mov
cmp
xchg
sub
mov
sub
je
loope
xlat
xchg
cs
sbb
or
dec
in
mov
inc
bound
insb
fs
fldpi
orb
dec
fidivs
push
pop
cmp
int3
sub
pop
fwait
push
movsl
int3
pop
aam
xchg
dec
sub
insl
mov
jmp
jge
jge
mov
inc
and
adc
es
push
add
push
call
insb
xchg
adc
loope
std
push
popf
cs
notb
xchg
clc
movsl
mov
xor
lahf
fs
mov
inc
fidivrs
dec
data16
popa
cltd
imul
rcll
cmpsl
or
jnp
lahf
add
add
outsb
mov
sbb
into
mov
cmp
scas
ret
iret
cmpsb
xchg
sbb
ds
sahf
dec
add
roll
enter
mov
jne
loope
adc
sti
out
data16
cmp
xchg
pop
mov
cs
repz
adc
or
std
cltd
ss
lock
pop
add
mov
adc
jge
bound
nop
and
add
aam
xor
test
jnp
xchg
ds
popa
add
shll
sbb
sbb
dec
scas
int
outsb
xor
shll
outsb
je
xchg
popf
xchg
hlt
mov
jae
in
push
movsb
cli
cmp
cmp
ret
roll
and
cs
out
out
jle
inc
lcall
and
xchg
jg
aad
fcomps
xchg
adcb
andl
add
cmpb
dec
cld
lcall
jbe
popf
mov
xchg
sub
mov
cmp
jae
jge
mov
enter
adcb
sub
loopne
and
inc
aaa
mov
insl
in
mov
fimuls
push
loope
xchg
andl
jecxz
pop
lcall
jae
dec
mov
in
push
leave
dec
fsubrs
insb
adc
and
inc
lea
fs
xor
adc
and
inc
sub
nop
pop
gs
add
js
pop
stos
add
cmp
mov
mov
and
movsl
push
lock
and
mov
movsb
adc
push
loope
loop
divl
das
mov
fwait
xor
lods
jl
bound
popf
faddl
icebp
xchg
mov
sbb
push
jmp
cli
lcall
out
or
inc
cmp
shrl
pushf
and
movl
cmpsb
push
les
inc
divb
adc
dec
mov
out
loop
sub
xchg
fs
sub
out
lods
ja
and
ja
push
cs
or
std
push
in
add
test
jnp
std
loop
fwait
scas
imul
shlb
je
adcl
clc
aaa
outsl
das
cmp
jmp
inc
scas
js
mov
pop
in
fsubrs
orb
mov
pop
cmc
pop
mov
or
jns
rorl
and
add
dec
dec
bnd
loopne
or
add
push
xor
jecxz
and
test
fsts
in
push
adcb
xchg
out
push
push
xor
shll
add
inc
push
lcall
jno
xchg
add
sub
sbb
stc
sub
inc
push
lahf
and
jbe
iret
mov
test
rorl
leave
pop
add
out
push
lahf
pop
or
scas
sub
ja
stos
popa
outsb
ret
incb
clc
ret
and
push
das
mov
jb
gs
fwait
sar
ficoms
jl
push
inc
mov
fsts
out
test
outsb
and
xor
movsl
hlt
adc
push
roll
mov
xor
jbe
push
decl
push
cs
sub
clc
jecxz
imul
mov
mov
sar
jo
sti
pop
fiadds
nop
fadd
push
push
sub
lods
mov
xchg
jmp
add
rolb
xchg
imulb
iret
daa
dec
xorl
cld
lcall
mov
push
in
lahf
jbe
dec
mov
xchg
cwtl
dec
iret
dec
jle
mov
nop
add
je
clc
adcl
out
add
movsl
and
push
sub
or
xchg
imul
mov
scas
jb
data16
sahf
ja
jns
mov
or
sahf
and
sahf
pop
and
sub
adcl
fimull
shrb
dec
stc
in
out
xchg
fldenv
ret
or
shr
loope
cltd
inc
fstpt
les
lods
push
lcall
call
cmp
sub
mov
mov
pop
je
iret
adc
mov
push
faddl
je
push
mov
lret
inc
mov
add
add
mov
push
pop
insl
inc
mov
cltd
sub
sub
mov
pop
adc
or
shrl
scas
xor
inc
ja
test
popf
stc
dec
jge
jo
sbb
pop
mov
xorps
movsl
jl
sub
out
cltd
in
push
daa
xchg
movsb
inc
leave
mov
mov
aad
add
mov
loope
lds
in
jge
push
pop
or
push
jb
sbb
xor
mov
fwait
push
cmp
sub
fwait
xor
mov
mov
mov
popa
xchg
ret
ffreep
inc
push
sarl
imul
push
fisttps
push
lds
cmc
adc
mov
adc
push
add
cmpsl
xchg
sarb
jle
cmp
ret
rcrb
das
adc
popa
cmp
pop
push
inc
mov
mov
cmp
add
dec
rcrb
jno
dec
xchg
lcall
push
out
cmpb
data16
leave
mov
cmc
xchg
and
scas
call
in
mov
int
or
mov
dec
cli
jge
and
sbb
mov
scas
bound
push
sarl
enter
lock
dec
or
fidivl
jno
xor
dec
ljmp
enter
jmp
rcl
loope
push
es
sahf
mov
pop
mov
in
inc
fcoml
add
ret
inc
sub
movsl
cmp
pop
pusha
mov
mov
in
or
mov
nop
adc
cld
ret
push
imul
sti
pop
dec
push
divl
mov
ljmp
dec
je
mov
jmp
gs
nop
dec
or
add
mov
out
inc
dec
inc
outsl
shrb
sbb
add
das
shll
cs
xchg
sub
dec
push
cs
xchg
cmpsl
mov
mov
jmp
sarl
inc
cmp
push
add
test
iret
inc
add
xor
inc
repz
jp
push
stos
adc
iret
and
add
or
lods
test
xchg
fs
or
scas
push
jmp
js
insb
lds
sbb
rorb
movsb
jge
fldt
inc
fimuls
repnz
in
inc
add
sahf
mov
and
pop
xchg
cmp
or
jo
loop
fs
mov
movsl
imulb
sub
jno
jbe
pop
or
cmpsl
sub
in
inc
add
add
ror
decl
lods
xchg
cmp
or
pop
mov
mov
jae
ret
push
pop
cli
dec
jns
sub
sub
push
lea
out
mov
add
in
inc
or
jecxz
hlt
int
bnd
mov
rcrl
fwait
or
out
mov
divl
jg
xor
dec
mov
dec
sub
jl
aaa
or
in
xchg
adcl
inc
xchg
mov
and
or
lock
test
pop
cmp
cmp
loope
lea
mov
std
das
add
and
push
push
mov
dec
js
mull
lret
test
idiv
add
sbb
mov
popa
js
push
xchg
fwait
insb
pop
mov
enter
loop
test
pop
mov
rclb
cmpsb
sahf
dec
rcrl
mov
scas
out
cmp
inc
gs
cwtl
faddl
mov
cmp
popf
push
jp
std
popa
jne
lods
jns
adc
pop
sbb
push
pushf
xlat
xor
adc
add
fbld
gs
clc
push
sub
xor
int3
and
push
pop
lods
xchg
sbb
sti
adc
jns
cld
adc
shlb
mov
arpl
jb
cmp
xchg
jecxz
clc
mulb
jb
sub
cmp
xchg
pop
mov
add
das
pop
pushf
aaa
or
mov
insl
pusha
imul
jbe
cmc
dec
outsl
pop
outsb
ret
mov
aad
cld
mov
fistl
mov
mov
adc
sub
adcb
outsb
ret
stc
xchg
fidivs
jmp
dec
lahf
dec
add
sti
jb
pop
in
fisttpll
jae
jbe
fidivs
andb
jnp
mov
add
cmc
or
dec
adc
shrb
or
out
xchg
sbb
std
sbbl
adcl
pop
insl
mov
pop
mov
fucom
push
mov
push
xchg
xlat
mov
pop
add
ficompl
stc
mov
inc
insl
out
xor
lret
daa
mov
pop
cmc
pop
dec
push
icebp
call
imul
fisttpll
xchg
dec
push
pop
mov
push
xor
pop
arpl
xchg
fadds
lahf
ss
jnp
jb
in
jmp
scas
cld
xchg
loope
sbb
and
inc
pop
test
pusha
mov
mov
les
cmc
aad
xor
outsl
js
xchg
call
adc
ret
arpl
test
outsl
sbb
fstl
imulb
add
aam
into
shl
sbb
sub
and
pop
imul
inc
stos
inc
jbe
mov
jb
dec
leave
test
and
jns
and
xor
or
out
dec
stos
adc
sbb
shrb
loopne
sub
insb
test
rorl
jae
xchg
mov
cmp
testl
add
mov
movsl
inc
insb
lret
sub
popa
jle
popf
jmp
xor
jno
and
iret
add
xor
loopne
xor
add
es
call
pop
jl
push
cli
fwait
push
inc
sbb
xchg
stos
xchg
inc
jecxz
inc
sbb
js
stos
add
pusha
cmc
jne
adc
xor
cli
or
int3
cmpsl
lds
or
enter
hlt
subb
into
lahf
leave
sub
cli
sub
adc
xchg
pop
adc
dec
jecxz
arpl
jns
gs
std
rcrl
push
popf
int
add
out
and
pop
dec
and
icebp
sbb
andl
or
pop
imul
sub
divl
and
and
imul
sbb
leave
lea
sbbl
xchg
sub
repz
rcll
test
cmp
outsl
mov
fidivrl
fldcw
mov
ficoml
push
fsubrs
and
jg
daa
mov
xchg
push
int
test
mov
jne
sbb
adc
mov
inc
pop
out
xor
sub
and
jns
insl
add
jg
idivl
test
or
addr16
add
cmp
rclb
push
dec
xchg
gs
in
in
sbb
insl
add
idivb
daa
lods
mov
outsb
mov
dec
sub
aam
adc
iret
pop
cmp
push
jnp
mov
or
cwtl
add
xchg
push
out
std
or
in
lods
repz
mov
iret
push
dec
and
shr
std
add
inc
inc
fs
add
adc
push
ficoms
lcall
nop
je
inc
cmp
lea
xchg
je
mov
cld
pop
dec
movsl
push
adc
ds
cld
ss
int3
test
push
fcomi
lcall
out
xchg
sti
shl
sub
jne
sub
imul
mov
rclb
test
or
xor
lret
mov
push
push
inc
addr16
cld
jmp
jge
pop
xor
insb
xchg
jnp
fisttps
lcall
lods
pop
rcpps
mov
je
add
jno
movsl
sbb
pop
scas
fistps
inc
frstor
insl
stc
jb
call
aam
push
scas
jno
mov
leave
enter
and
int3
and
jl
testl
pusha
mov
adc
mov
pop
neg
cmp
sbb
mov
test
ss
dec
inc
pop
or
mov
xor
xchg
outsb
add
inc
mov
leave
in
ja
xor
sbb
subl
adc
lds
cmp
fwait
aas
je
jo
loop
loop
push
jne
out
pop
rclb
je
mov
inc
mov
in
sbb
je
jmp
jg
xchg
xor
ficoms
sti
movsb
dec
call
push
in
inc
jb
xor
mov
mov
iret
and
adc
xor
jae
mov
mov
fldenv
push
je
sarl
insb
insl
repnz
lds
out
add
sbb
jno
nop
push
jl
dec
pop
xlat
sbb
fcomps
out
mov
mov
jmp
push
insl
add
xlat
hlt
or
mov
nop
mov
int3
pop
mov
lock
jecxz
pop
cwtl
call
dec
mov
adc
mov
pop
call
sahf
push
iret
mov
mov
jno
xchg
ret
fisubrs
cmp
clc
inc
out
inc
push
mov
push
aad
sahf
adc
mov
xchg
popf
ret
cmp
lds
dec
jecxz
xchg
sarl
or
insb
jge
in
bnd
out
stos
adc
inc
push
repnz
add
and
xor
inc
adc
push
pop
addr16
sbb
dec
sub
add
movsl
xor
ret
scas
or
or
jle
repnz
test
mov
data16
fisubrl
xor
xchg
fstpt
out
pop
cmpsb
call
ljmp
pop
mov
mov
sarl
add
sbb
mov
pop
cli
fcmovu
nop
mov
leave
xchg
sub
stos
lods
pop
push
call
add
ljmp
das
jecxz
mov
cmp
and
cmp
and
fwait
cmp
and
sbb
out
sub
repnz
enter
dec
xor
jae
pop
adc
popf
adc
mov
roll
or
nop
inc
ss
pushf
je
mov
popa
mov
cmp
popa
loope
mov
cmp
mov
push
jp
rcrb
sbb
add
ds
fs
call
mov
mov
xor
out
cmp
test
lret
inc
xchg
dec
in
bound
cmp
xor
aad
out
shl
daa
push
push
or
sub
mov
push
or
adc
cli
inc
jge
test
outsl
mull
sub
dec
aaa
jle
and
stos
xor
test
scas
jge
ljmp
jge
sbb
pop
hlt
cmp
jnp
fdivrs
in
subl
sbb
mov
dec
loope
sbb
xor
and
or
ret
pop
jle
ljmp
popf
popf
cmpb
and
inc
adc
jb
lock
aam
mov
sub
push
xchg
das
mov
mov
test
in
jle
rorb
jmp
jp
add
mov
pop
loope
add
jne,pt
fwait
bound
jne
shl
stc
rcrb
ret
shl
push
jb
repnz
or
mov
jle
add
cmp
daa
inc
fimuls
pop
pop
inc
cmp
xchg
je
mov
fistps
or
and
adc
ficoms
fcmovu
and
sub
pusha
xor
into
mov
cmp
sub
loop
and
push
rolb
inc
mov
cli
jmp
enter
aad
sar
cmpsl
notb
mov
mov
arpl
xchg
imul
insl
mov
add
lea
scas
sub
cwtl
lahf
cmp
inc
mov
mov
jmp
or
mov
das
movsl
test
xlat
sarb
mov
jne
fistl
sarl
aad
jae
fwait
sub
rorb
jmp
push
push
jbe
daa
sbb
adc
cmpsl
out
xor
inc
sahf
xor
ja
mov
inc
xor
fsubrs
jb
pop
and
testb
pop
mov
add
mov
xor
lds
loope
insb
pop
addr16
or
sub
xlat
adc
and
inc
mov
sbb
jp
testl
in
and
push
pushf
lea
sti
cli
aad
enter
lret
jo
cld
add
dec
subps
out
lea
insl
clc
pushf
arpl
dec
rolb
mov
addr16
sub
jmp
mov
jecxz
sti
movb
mov
neg
out
sti
popf
inc
mov
cld
xchg
fsubr
add
pop
mov
inc
dec
iret
or
in
or
cmp
sub
arpl
sub
mov
sbb
cmp
mov
jle
or
mov
fwait
or
add
xchg
ja
sbb
fidivs
lea
jmp
shl
adc
pop
jne
cmp
jnp
loopne
subl
test
ficoml
add
mov
jp
das
sub
adc
in
mov
cld
rcrb
imul
sbbl
xchg
mov
cmp
insl
jge
jno
shrl
aam
cmpsl
push
sub
xchg
push
lcall
lods
cwtl
shr
cltd
dec
sub
loopne
jno
push
xchg
sbb
insl
cli
stos
mov
clc
popa
mov
or
mov
loopne
fldt
fnsave
add
inc
icebp
ds
imul
mov
movsb
jns
in
stos
rcr
add
rorl
sub
adc
xchg
out
imul
insb
xor
js
lods
dec
sbb
jge
cmp
dec
hlt
aad
or
dec
inc
loop
arpl
in
test
xchg
mov
jne
xor
clc
sahf
push
into
inc
sahf
or
push
and
add
std
cmpsb
cmpsl
add
or
call
jnp
lds
lahf
cli
sbb
add
scas
insl
and
jge
inc
or
cmp
inc
cmp
push
push
mov
or
cmpb
mov
lahf
adc
jecxz
notl
mov
pop
dec
dec
or
ja
sahf
and
mov
loope
jg
les
incl
shr
popa
iret
xlat
lcall
mov
pop
imul
or
adc
cwtl
pop
clc
call
loopne
add
and
aaa
dec
dec
dec
dec
push
sub
xchg
cmp
int3
dec
aad
imul
adc
lret
test
inc
xor
cld
adc
fwait
movsl
data16
stos
movsl
icebp
xchg
data16
cld
lret
test
inc
ret
jg
xchg
call
inc
xlat
clc
jge
loopne
pop
fistpl
insl
fisubl
in
int
cmp
xchg
pop
dec
sahf
jl
mov
push
jbe
daa
xor
inc
mov
sbb
ds
faddl
or
jb
mov
jne
jge
das
fcmovb
jecxz
mov
inc
pop
or
mov
add
xor
pop
ja
or
pop
call
mov
pop
inc
fadd
insb
ljmp
imul
je
xorb
mov
pop
add
or
dec
mov
mov
call
sbb
pop
push
out
add
jae
fidivrl
out
jge
int
xor
cmp
push
sub
out
andl
inc
mov
call
cltd
stc
adc
cld
mov
mov
pop
dec
push
js
or
mov
es
dec
dec
dec
inc
notl
insl
stos
xchg
cmpsb
lock
inc
in
addr16
pop
mov
adc
sbb
aas
or
mov
add
sbb
mov
sub
pushf
sub
popa
clc
sahf
fnstenv
clc
dec
sub
adc
outsl
push
sub
clc
pop
cmp
cld
mov
loop
ret
xor
jecxz
dec
loope
inc
mov
movsb
shll
mov
testb
xchg
push
add
pop
lahf
xor
fs
testb
sbb
test
add
aaa
ret
mov
cmpb
pop
js
in
into
adc
aad
push
mov
add
xchg
sti
xchg
sub
pop
les
loop
mov
mov
or
sarl
mov
adc
xchg
stos
into
sub
ret
frstor
dec
loopne
lods
inc
inc
pushl
adc
in
int
push
sbb
jp
xchg
dec
lcall
shll
sbb
lock
insb
mov
jp
cli
jno
xchg
rcr
das
testl
lock
add
pop
sti
stos
loope
xchg
xchg
out
inc
in
test
jg
imul
ret
or
dec
int
xchg
jnp
pop
add
fidivs
mov
sub
inc
inc
and
sub
lret
xor
push
ljmp
out
rcl
pusha
stc
out
int3
dec
adc
aaa
xchg
add
adc
das
aas
mov
dec
add
bound
ja
insb
filds
inc
stc
nop
mov
pop
adc
data16
jae
add
imul
cmpsb
jecxz
mov
fdivs
push
mov
jge
outsb
sub
ss
std
mov
fimuls
mov
xchg
mov
es
pop
scas
sarl
sbb
inc
mov
jle
push
push
mov
mov
or
test
or
test
dec
cmp
vprotw
pusha
repnz
stos
test
push
jb
test
lret
loope
cmpsl
add
arpl
mov
rcrl
add
and
jbe
add
dec
dec
push
jmp
fucomp
fwait
push
cmp
test
arpl
out
push
movb
addr16
popf
push
jmp
xor
les
mov
cmp
and
repz
mov
mov
les
fwait
sbb
cltd
xor
add
adcl
pop
xchg
jns
scas
les
fcoms
and
ja
jae
cmp
sub
fs
sub
pop
lea
pushf
xchg
lret
mov
test
xchg
mov
popa
cmp
jp
xchg
in
cmp
sarl
ret
fmuls
mov
mov
jno
ja
and
daa
xlat
aad
or
push
std
mov
mov
pop
fsubr
clc
mov
fiadds
xchg
popa
xor
cmc
arpl
pop
push
jmp
pushf
repnz
jmp
inc
dec
jmp
mull
test
scas
inc
cmpsb
js
inc
mov
push
in
aaa
xchg
cltd
pop
les
mov
mov
push
hlt
adc
jp
xchg
shlb
cli
das
bound
iret
inc
sub
movsl
fwait
adc
add
xchg
cmp
xchg
mov
into
jl
mov
push
roll
xor
mov
mov
mov
rolb
and
lea
pop
repz
mov
popa
lods
fidivs
cwtl
push
ja
push
inc
pop
jecxz
mov
and
add
scas
jno
inc
hlt
dec
and
idivl
jg
ds
shrb
mov
mov
xchg
fwait
cmpsl
aam
insl
rcrb
frstor
inc
scas
xor
lcall
inc
sub
pop
adc
mov
dec
daa
sti
dec
in
or
rcrb
xchg
sbb
aad
dec
jp
sbb
lret
xlat
cmpsl
jge
pop
cmpsl
movsb
and
inc
mov
xor
dec
xchg
xor
icebp
pop
gs
inc
cmp
jmp
fdiv
addb
inc
xlat
outsb
mov
das
test
or
cmp
fldenv
xor
sbb
adc
loopne
inc
mov
lock
pop
mov
aaa
lock
mov
cmp
arpl
loopne
xchg
fldl
repnz
lds
push
push
fisttpl
push
push
imul
mov
cmp
sub
int3
or
xchg
push
add
clc
int3
and
inc
fcmovu
cmp
mov
loop
push
test
in
fmuls
jp
add
roll
inc
bound
inc
sub
push
inc
testl
iret
inc
pushf
adc
xchg
mov
nop
adc
nop
aas
rcrl
add
mov
sahf
in
stos
xor
ret
sbb
add
add
shlb
cmc
push
xchg
adc
sbbl
or
sbb
test
jle
mov
mov
sti
xor
data16
xchg
inc
ret
jae
push
popa
js
andb
add
out
shl
repnz
fisubl
add
cmp
mov
popf
xor
push
and
leave
mov
jp
inc
sbb
fcoml
outsb
and
rep
jmp
or
mov
ss
jecxz
cmp
add
daa
add
loop
testl
ret
add
test
aas
add
xor
and
js
ds
sbbb
outsl
notb
mov
es
mov
cmpsb
push
cli
mov
iret
data16
jecxz
adc
into
in
nop
sbb
and
sbb
push
lods
pusha
cmp
mov
movsl
mov
dec
orb
jnp
fucomip
xlat
das
sbb
jno
daa
mov
shlb
pop
lret
push
mov
mov
push
dec
sub
cmp
mov
loope
fnstsw
loope
xchg
pop
fldl
mov
dec
inc
xchg
test
sub
mov
pushf
jmp
pushf
push
inc
into
push
jb
jl
std
push
fisubs
mov
popa
jne
jb
stos
aas
xchg
lret
int3
stc
bswap
mov
out
inc
push
jmp
dec
inc
aas
adc
lds
push
mov
or
xchg
arpl
sub
add
in
cwtl
xchg
jp
xchg
dec
test
aad
dec
fdivrs
mov
pop
repnz
xchg
cltd
dec
dec
cwtl
lret
shr
ds
subl
pop
scas
and
test
insb
push
and
mov
leave
mov
xchg
lods
pop
sbb
dec
stc
mov
jne
sub
mov
adc
jne
xor
fdiv
stos
stos
fidivrl
or
cmp
jb
sub
cmp
cmp
icebp
inc
sbb
in
imul
in
xor
cmp
xlat
add
add
mov
js
mov
xchg
bound
mov
or
mov
mov
sbb
out
and
bound
repnz
jns
add
jg
pop
fistpll
jge
sbb
push
dec
sub
lcall
jne
imul
movsl
jge
adc
or
mov
les
sub
stos
and
mov
add
out
loope
ljmp
dec
pop
sub
cli
mov
test
enter
adc
aaa
or
push
sub
jmp
sub
jle
xchg
mov
mov
not
adc
into
pop
mov
push
mov
les
inc
notb
inc
pusha
dec
push
cli
jb
sub
cmp
inc
push
les
xchg
push
outsl
outsl
lret
bound
or
insb
push
jmp
data16
or
pop
daa
cmp
push
mov
sti
or
and
mov
mov
call
add
int
stos
pop
imul
adc
jg
loop
xchg
mov
or
es
loop
inc
bound
outsl
or
in
xchg
test
je
xor
xchg
dec
in
sub
loope
mov
inc
xor
pop
mov
cmp
xchg
adc
jmp
adc
icebp
mov
mov
loopne
ds
sbb
push
in
js
sbb
mov
jle
mov
xchg
fs
jno
add
push
xchg
orb
stos
lret
pop
mov
aam
mov
xchg
decb
enter
sbb
movsl
push
es
js
arpl
je
add
cli
xchg
out
push
push
lods
or
movsb
ja
push
adc
sbb
scas
add
cwtl
inc
jg
adc
ret
sub
mov
jae
cwtl
aas
jmp
cltd
or
cmp
pop
dec
sahf
push
loope
insb
adc
jns
xor
addr16
sti
iret
xchg
enter
scas
inc
inc
jnp
push
jp
mov
rclb
xchg
jecxz
push
sbb
jnp
dec
clc
xchg
aas
lds
mov
aas
ror
pop
in
or
rcrb
cmp
dec
inc
rol
jns
nop
shll
mov
mov
jb
movsl
push
xchg
cli
fistl
push
sbb
mov
enter
dec
cmp
cmp
test
mov
out
xchg
jnp
dec
or
enter
jle
mov
mov
fnstenv
push
scas
stos
xor
xor
or
sub
mov
sbb
cmpxchg
pop
addr16
out
cmc
lea
mov
lea
xchg
and
sub
flds
lahf
lods
pop
test
ja
cmp
cmp
cmp
mov
inc
push
mov
out
adc
nop
push
dec
push
and
xchg
mov
add
jnp
aad
dec
and
loope
les
test
stos
push
int3
popa
repnz
enter
cmpsl
inc
adc
leave
pop
ds
test
and
out
int3
loop,pn
addr16
dec
xor
dec
xor
inc
scas
dec
outsl
bound
in
ficoms
sub
adc
das
ret
push
out
in
jbe
fsubrs
lock
scas
lcall
add
sub
popf
mov
add
mov
add
out
shlb
call
aas
jg
outsl
test
clc
adc
andb
test
shll
xchg
outsl
daa
inc
add
and
pop
dec
pop
xor
xor
icebp
int3
fdivl
cmova
jp
rcrl
pusha
negl
xchg
sti
mov
mov
popa
lods
xor
push
aas
jns
lss
cmp
test
sub
inc
loop
dec
mov
pop
dec
adc
out
call
push
xor
and
in
push
mov
stos
out
or
mov
jbe
fcomps
int
lods
test
cmpsl
dec
dec
leave
in
mov
arpl
fxch
int
lcall
jmp
aaa
int3
mov
jge
imul
pop
cmpsb
cmpsb
popf
sub
jmp
push
lcall
push
stc
andb
iret
xor
lcall
cmp
mov
test
push
xor
mov
and
pop
insl
add
in
lds
mov
aad
nop
lock
ret
xchg
mov
dec
arpl
loopne
inc
adc
pop
lret
sub
push
aad
outsb
push
popf
pop
push
test
adc
jne
jo
insl
jge
xchg
mov
mov
add
cmpsl
or
and
and
lcall
popf
idivb
lods
mov
mov
mov
test
lret
dec
fsubs
jecxz
sbb
dec
sub
sti
bound
dec
aad
jp
cld
outsl
xchg
mov
mov
aaa
pop
and
in
stos
inc
pop
xchg
inc
adc
notl
movsl
dec
cmc
data16
push
pop
pop
xchg
push
add
sahf
push
cli
push
lods
movsb
jmp
dec
xor
rclb
popf
mov
gs
adc
sub
jae
subb
rcr
js
add
add
xor
mov
or
fisttpll
mov
pop
cmp
push
sub
test
cld
xchg
xlat
outsb
lds
mov
xor
cmc
cmp
popf
add
pop
xchg
inc
pop
addr16
ds
dec
pop
fldcw
xchg
pusha
lret
cmp
ss
pop
dec
fisttpl
cmc
push
sbb
out
es
xchg
sub
loope
fs
adc
sbb
sbb
xor
nop
push
or
jle
lods
aad
fisubrs
repz
dec
push
fucom
and
repz
lock
data16
sbb
test
out
aas
cmp
bound
adc
pop
xor
adc
call
fs
bound
jge
aas
test
mov
lods
or
in
ds
leave
add
testb
sbbl
pop
ja
mov
nop
sbb
popa
xorl
sbb
fxch
jns
fiadds
test
out
lock
sub
ror
xlat
scas
add
call
or
fwait
sbb
sbb
icebp
xchg
mov
or
mov
adc
xor
mov
aaa
push
adc
lret
ds
or
insl
pop
push
es
in
outsb
test
aas
outsl
mov
mov
push
jecxz
and
cmpsb
adc
cmp
mov
aad
dec
adc
mov
pop
scas
push
fsubrs
fisubs
sub
dec
test
pop
rorl
adcb
fsubs
aam
les
cmc
push
pop
jmp
and
lahf
icebp
push
mov
adc
cwtl
adc
inc
js
xlat
insl
pop
adc
jae
hlt
mov
xchg
xor
push
jp
mov
dec
xchg
jmp
into
ss
loope
imul
mov
pusha
lea
lods
mov
icebp
js
ret
adc
hlt
addb
ret
adc
jg
scas
push
adc
sbbl
inc
pop
mov
sahf
pop
rclb
mov
mov
dec
jnp
in
sbb
and
adc
mov
and
jo
movsb
iret
adc
sbb
inc
cmp
cmpps
pop
lods
ja
adc
cmpsl
es
lods
dec
cmp
adc
dec
mov
inc
rclb
aad
inc
addr16
loop
andl
in
xlat
xchg
dec
out
out
jl
jns
sbb
inc
inc
xchg
mov
fadds
adc
loope
sbb
pop
push
aas
add
pop
xchg
fidivrl
add
lahf
pop
scas
mov
jp
add
push
xchg
xchg
rorl
aas
mov
test
add
insl
loopne
jg
hlt
ljmp
scas
mov
dec
or
mov
xchg
fcompl
push
adc
movsl
jns
fsubrs
adc
stc
das
lds
lods
es
jmp
push
fidivrs
xchg
pop
cmpsb
pop
pop
out
mov
xchg
lds
sbb
ret
sub
push
sbb
sub
cld
push
xor
adc
notb
dec
aas
and
dec
push
and
add
jp
ret
out
mov
mov
mov
pop
sbbl
mov
adc
or
iret
push
movsb
lods
sub
lcall
or
sub
movsb
xchg
lods
sti
cmp
addr16
mov
cmpsb
out
add
pop
clc
mov
sbb
sub
inc
mov
mov
jo
cmp
in
push
pop
andb
mov
scas
mov
fwait
push
push
xlat
lods
push
and
pop
pop
out
fcmovnb
fisttpl
mov
or
pushf
jae
xor
dec
sbb
outsl
pop
repz
push
stos
jne
cmp
imul
fistps
shr
idivl
xor
ret
lret
data16
gs
ljmp
pop
xchg
cltd
ljmp
sahf
loopne
mov
push
dec
pushf
or
jno
lds
popa
add
mov
add
jb
inc
mov
inc
ffree
push
nop
outsl
lock
test
divb
pusha
addl
lods
or
scas
nop
leave
add
std
mulb
decb
mov
lret
popf
addr16
mov
scas
jno
jmp
cli
int
adc
sub
clc
sub
dec
sub
mov
sbb
adc
daa
jge
scas
xor
shll
movsl
popa
repnz
xor
aaa
imul
in
sahf
lcall
push
and
xor
mov
repz
xchg
dec
lcall
xor
iret
loopne
push
pop
ret
mov
aaa
mov
fdivrs
jl
sub
sub
mov
mov
fwait
push
mov
loopne
out
loope
mov
xchg
out
rclb
leave
xchg
mov
faddl
or
jbe
push
sub
push
stc
sbb
clc
ret
repz
rcr
mov
and
test
scas
xor
push
xor
xlat
xor
repz
pop
and
add
mov
popf
xor
pop
jmp
push
or
das
imul
pushf
cmc
out
mov
pop
loop
mov
push
add
push
and
inc
cmp
fsub
rcrl
js
out
lods
sarl
mov
xchg
lods
add
in
sbb
in
inc
push
mov
fisttpl
cld
lret
bound
ret
jmp
and
pop
cld
mov
fucomp
mov
in
sub
mov
ja
iret
loop
fsts
or
jae
adc
pop
out
or
loop
inc
insb
sbbl
cmp
jl
cwtl
in
rorb
imul
inc
inc
mov
test
push
xchg
pop
rcl
loop
pop
cwtl
das
cmp
sub
or
or
push
popf
xchg
aaa
je
adc
adc
inc
mov
add
dec
sub
js
rolb
imul
les
out
ret
mov
clc
mov
shrb
mov
sbb
aas
dec
mov
ror
leave
loopne
outsb
adc
push
rcrl
adc
push
push
mov
push
sahf
xor
insb
sarb
cwtl
sbb
in
std
orb
sbb
add
xchg
mov
arpl
sbb
jae
cli
push
mov
scas
jo
mov
push
xchg
dec
xchg
dec
scas
mov
out
vshufpd
test
outsb
mov
xchg
leave
jns
cld
and
push
or
fildll
adc
xchg
add
ret
stc
icebp
and
pusha
mov
inc
mov
mov
sub
fwait
pop
pop
dec
lds
negl
out
fwait
daa
rorb
in
popa
vpshad
mov
and
rolb
inc
cmc
pop
hlt
es
mov
push
mov
sbbl
mov
mov
sar
xchg
cwtl
int
jbe
xor
shll
fdivrs
mov
mov
xchg
xlat
out
or
pop
xchg
pop
jne
insb
aaa
into
fwait
and
push
jne
cs
jb
imul
popf
mov
push
loop
outsl
push
outsb
mov
into
xor
sbb
jmp
mov
push
cld
xchg
iret
or
movsl
mov
js
dec
sub
sbb
adc
pop
xchg
jae
jecxz
out
iret
shr
cld
mov
push
rcrl
sbb
inc
jns
loop
push
xchg
insl
mov
shll
and
and
clc
iret
fisttps
pop
hlt
roll
or
and
jne
dec
pop
scas
xchg
mov
cltd
xchg
mov
shll
mov
xchg
cmp
in
mov
sbbb
jge
jge
lods
inc
add
xchg
jecxz
orl
jle
and
in
push
pushf
cli
stc
mov
adc
test
stos
js
clc
lock
rcrb
xchg
loope
and
out
inc
fstpl
ljmp
daa
mov
cmp
daa
cmc
mov
lea
js
lcall
loop
loopne
xor
mov
fildll
xchg
popf
xor
in
in
push
pop
xchg
inc
push
mov
jg
fs
push
out
push
and
mov
movsb
mov
mull
mov
adcl
lock
into
and
and
adc
mov
enter
push
inc
mov
stos
adc
pop
rclb
sbb
inc
stos
ret
or
leave
lods
ret
ret
mov
adc
movsl
test
inc
xor
cld
jo
lds
push
mov
shrb
iret
sub
dec
inc
or
pusha
std
in
and
mov
in
jle
int
cs
sub
repz
mov
jmp
add
mov
lret
push
jmp
mov
sub
mov
clc
mov
mov
xchg
fcmovnu
repz
out
pop
in
sbb
lods
mov
mov
ret
sti
push
fnsave
outsl
adc
rcrl
mov
addr16
sbb
mov
cmpsl
insl
pop
pop
ljmp
call
push
gs
ror
mov
loope
iret
and
lds
in
sub
stc
adc
add
mov
adc
and
mov
mov
jmp
lods
cmp
push
sbb
jno
loopne
push
cmp
rorl
jbe
mov
pushw
mov
mov
adc
mov
inc
test
outsb
add
gs
pop
sahf
in
mov
adc
hlt
cmp
lods
xor
jae
mov
frstor
adc
pop
dec
outsl
mov
push
loopne
loop
stc
popf
cs
mov
jmp
sahf
jns
lock
cli
jmp
cmp
inc
fadd
sbb
pop
pop
in
and
lds
clc
cmp
cmpsb
mov
pop
xor
pop
jmp
lds
leave
loope
divl
clc
aad
xchg
xor
or
aad
xchg
inc
dec
jb
cmp
jno
rclb
or
inc
jns
jne
push
push
jo
bound
sub
xor
aas
int3
dec
call
sbb
rcl
stc
stc
push
cmpsb
aam
mov
pop
int
sbb
in
fdivl
jge
iret
movsb
push
mov
pushf
sub
mov
ss
movaps
xlat
pop
xor
jns
jl
mov
jae
lods
xor
negb
cli
mov
pop
sub
xor
stc
popf
adc
xor
test
cmp
push
jne
xor
sbb
pop
imul
sub
faddl
sti
gs
mov
divl
jo
loopne
lret
adc
or
aam
test
pop
push
lea
dec
fcmovb
or
fldl
jno
mov
and
test
jae
jnp
in
pop
jg
dec
lods
imul
add
cltd
xchg
mov
adc
mov
pop
imul
jg
in
scas
inc
je
cli
jnp
inc
mov
int3
out
mov
pop
or
icebp
xchg
push
scas
inc
sbb
inc
push
add
pop
push
add
pop
xchg
push
jbe
scas
in
cmp
mov
subb
adc
push
lret
fprem1
add
sbb
cs
xchg
add
mov
push
xor
in
jmp
outsb
int
or
adc
and
pop
xchg
mov
push
loop
jae
mov
mov
into
in
jno
mov
cld
adc
std
leave
adc
jb
jo
mov
dec
mov
and
ljmp
jne
outsb
jae
lcall
sbb
inc
popa
or
add
jb
fistps
scas
inc
pop
loopne
rclb
push
and
adc
decl
xor
pop
neg
insl
adc
sahf
fsts
shl
mov
mov
mov
dec
pop
dec
adcb
pushf
sub
lea
lahf
mov
push
outsl
test
pop
js
test
roll
movsl
clc
gs
dec
xchg
sub
test
bound
in
stc
jecxz
jle
sar
pushf
movsb
rcrb
scas
lds
adc
pop
push
lahf
cli
fwait
outsb
sarb
or
clc
mov
jo
sarb
pop
pusha
pop
fisttpl
aas
rcll
xchg
adc
xor
dec
mov
shlb
punpckldq
dec
adc
jg
cli
inc
push
xchg
lock
pop
fwait
mov
out
push
xchg
jle
out
ffree
add
cmpsb
notb
shr
xor
or
sbb
daa
mov
call
mov
sahf
or
sbb
loopne
dec
std
push
push
test
sbb
cmpsb
addr16
dec
push
mov
push
jae
cmp
and
pop
and
iret
push
pop
bound
mov
add
push
aaa
imul
icebp
mov
les
push
jae
mov
fcomps
loopne
int
test
xlat
pop
in
pop
popl
push
fbld
lahf
lret
inc
insl
sub
mov
push
xchg
insl
lds
and
fdivl
div
xchg
mov
jge
or
dec
dec
sub
mull
pop
test
inc
and
dec
mov
sti
mov
dec
pop
imull
movsl
inc
rcrl
mov
pop
movsl
cld
mov
sbb
or
mov
jno
cmp
xchg
cmp
js
dec
xchg
jp
popa
call
pushf
xchg
add
pop
jle
jmp
outsl
repz
ret
cmp
test
mov
scas
sahf
mov
xchg
sbb
hlt
pop
insl
push
call
aam
jo
sbb
jmp
sbb
xchg
inc
lret
loop
test
mov
jne
adc
pop
cmp
fwait
imul
add
push
inc
mov
dec
mov
popa
jns
enter
sub
mov
add
sbb
or
lcall
imulb
sub
xchg
adc
andb
jmp
hlt
js
push
xchg
sub
xchg
dec
inc
mov
add
or
mov
movsl
clc
jne
out
fnstcw
add
xor
fsubs
mov
adc
jb
push
movsb
iret
jle
mov
push
leave
loope
movsb
push
scas
mov
dec
loope
xor
gs
fsubrl
je
cmp
lret
xchg
push
mov
movsl
imul
mov
mov
outsb
test
mov
add
xchg
sbb
mov
loope
iret
jb
mov
push
insl
xor
and
push
test
and
jmp
sub
pop
sbb
imul
or
push
icebp
movsb
aas
jl
jo
in
imul
in
push
loop
es
stc
jae
sub
cmp
test
rorb
or
and
push
push
cltd
fnstenv
dec
les
pop
push
push
sarb
mov
les
push
ds
jae
imul
and
jnp
fwait
inc
mov
iret
lods
add
dec
push
sbb
mov
in
fsubl
push
mov
in
push
mov
mov
repz
test
mov
dec
mov
lret
mov
jo
fwait
mov
ljmp
das
jae
sub
sbb
add
stos
fstp
and
push
mov
movsl
mov
inc
mov
neg
sub
mov
fsts
add
jp
fwait
cmp
xchg
pop
or
fidivs
jne
lcall
inc
mov
xor
add
addl
ds
pop
jl
lahf
inc
xchg
sbb
outsb
push
xchg
fimuls
cltd
jo
and
xchg
jge
xchg
inc
pop
xor
jo
enter
fs
jno
ffree
mov
test
jno
lock
push
fdivrs
inc
mov
lcall
push
pop
stos
jmp
ss
daa
ffreep
xor
sub
imul
push
jo
js
cli
pop
jl
push
mov
fcmovu
jbe
xchg
inc
lret
xor
es
mov
int
mov
cltd
pop
subl
xchg
push
out
call
aam
ja
mov
popa
or
imull
dec
pop
jmp
int3
bound
mov
mov
das
sahf
push
enter
stos
xor
lds
lods
xchg
add
sbb
jecxz
in
add
lock
mov
pop
aad
ja
mov
mov
sbb
cmpsb
lock
inc
bound
leave
mov
mov
rcl
repnz
lock
sbb
pop
loope
les
pop
cmc
fwait
jge
add
jbe
and
gs
and
mov
mov
cmp
pusha
enter
mov
cmp
xlat
and
sub
pop
push
imul
lods
push
xlat
stos
lret
jb
scas
mov
repnz
fnsave
rclb
insb
out
test
xchg
inc
fsubr
imul
adc
add
bound
sbb
mov
aaa
and
adc
insl
mov
scas
xchg
rcrl
mov
es
test
inc
xor
sub
repz
push
jmp
inc
dec
jmp
lods
inc
pop
test
dec
jl
jecxz
mov
dec
repnz
iret
cmp
rclb
adc
mov
lock
xchg
push
inc
loope
xchg
paddsw
repnz
cmp
and
jecxz
mov
daa
ja
mov
xor
stos
popa
adc
lock
cmp
rcr
xor
sub
leave
ds
and
mov
mov
push
sbb
cmp
push
cmc
inc
mov
dec
loope
subb
push
cmp
jp
icebp
mov
push
adc
push
pop
and
les
jne
ret
repz
adc
movsb
testb
jmp
adc
mov
dec
pop
fdiv
mov
dec
cli
out
imul
and
fnsave
ja,pt
xlat
or
xchg
and
fistps
xlat
cmp
add
sbb
mov
mov
push
jg
xor
lcall
aad
xchg
dec
jne
xorl
cmc
mov
sub
cmpsl
ret
cld
and
sub
fbstp
outsb
fbstp
popf
cli
xchg
popl
xchg
inc
mov
out
aam
or
add
jbe
stos
addl
push
jae
push
pop
sti
stc
pop
iret
and
loop
repnz
sub
push
daa
mov
mov
pop
leave
aad
push
shr
jns
cltd
ret
or
test
iret
jecxz
xchg
dec
and
popl
and
push
in
ljmp
pushl
xchg
sub
xchg
gs
push
ret
pop
test
loope
cmp
inc
pop
jmp
push
daa
inc
jb
cs
test
lret
scas
bound
orb
inc
jmp
gs
mov
mov
imul
adc
dec
hlt
dec
gs
push
xorb
dec
test
jnp
cs
data16
mov
jns
or
sbb
push
ja
push
and
mov
sbbb
or
adc
int
orl
scas
mov
imul
out
popf
pop
in
xchg
mov
and
pop
aaa
xchg
sbb
mov
xchg
and
mov
rcrb
stc
psubsb
push
pop
loope
jle
push
mov
stos
and
cmp
das
cmp
mov
fiaddl
cmpsl
popa
add
sbb
movsl
adc
push
inc
xor
mov
cs
cmp
jnp
scas
inc
lahf
inc
int
iret
mov
insl
bound
dec
pop
jge
inc
les
dec
jle
mov
ds
jbe
inc
je
daa
mov
cmpsl
xchg
outsb
jl
push
leave
cld
push
cmp
and
fsubr
std
push
xchg
clc
xor
mov
adc
add
shlb
iret
pop
cltd
pop
sub
push
adc
sbb
fmuls
push
mov
inc
insb
frstor
outsl
lods
movsl
inc
dec
and
inc
loope
mov
jne
push
lds
cld
sub
imul
nop
cli
or
sbb
jmp
mov
xchg
aas
dec
dec
ljmp
mov
push
sub
sbb
adc
inc
sbb
decb
jne
faddl
cltd
cld
mov
sub
shll
scas
push
out
push
sahf
jo
lret
loope
push
and
or
cmpsl
stos
add
out
mov
inc
xchg
mov
pop
mov
addr16
adc
arpl
jno
shlb
pushf
mov
xor
xchg
stos
mov
sbb
je
call
jbe
adc
test
xor
les
jg
push
popa
je
shlb
jo
sub
ss
out
out
in
test
xlat
jb
sti
or
xchg
push
sahf
and
sbb
lods
xor
xor
xorl
jecxz
ja
andl
repz
and
jbe
jbe
dec
mov
jb
imul
push
int3
pop
fsubr
jno
jl
lret
aaa
idiv
ljmp
and
inc
sahf
push
mov
dec
jp
and
stc
lock
cmc
adc
cld
test
xor
sbb
mov
movsb
rcl
gs
loop
mov
ret
sub
cmp
and
mov
lret
pop
outsb
cmp
pop
jno
loop
cmp
arpl
nop
ret
gs
mov
std
push
cs
adc
xchg
jp
inc
lods
rcl
call
push
adc
inc
xor
xchg
jle
push
mov
jns
std
cmp
pop
and
out
mov
flds
xor
ljmp
inc
je
repz
xchg
lods
add
cmc
mov
stos
push
fdivrl
mov
push
inc
add
push
in
jp
int
daa
orb
insl
and
inc
xchg
rcrl
mov
jp
xchg
xchg
jge
imul
std
push
mov
dec
int
shr
push
mov
and
out
repnz
inc
pop
ficoml
ss
push
aaa
or
sbbb
sahf
shll
lock
cmpsl
rolb
popf
test
sbb
std
jne
cs
and
pop
xchg
and
dec
pop
fpatan
push
repnz
es
dec
pop
shlb
adc
push
out
fwait
out
xor
adc
cli
jne
and
add
leave
and
sbb
xchg
xchg
cmpsl
cmp
jbe
mov
jg
inc
pop
fnsave
dec
pop
and
push
fistl
push
ret
xchg
ficoml
repz
add
stos
loopne
mov
outsb
out
xor
cmp
mov
icebp
pop
shlb
into
xor
dec
pop
pop
daa
push
jno
int
mov
pop
pop
jne
pop
decb
lahf
ds
aad
fildl
fdivrs
mov
fdivrs
sahf
in
cmpsl
and
xchg
mov
cmpsl
sbb
push
mov
lods
shrl
push
loope
mov
mov
mov
aaa
into
push
incl
fdivp
jp
fdivl
push
sbbb
xor
aaa
mov
ret
fiaddl
jmp
sub
mov
pusha
adc
inc
mov
bound
lds
pop
ret
jbe
pop
sub
pop
sbb
cmpsl
int
push
fnstcw
pop
movsb
nop
test
out
loop
adcb
mov
xchg
in
jg
push
jnp
in
push
fdivs
cltd
push
aad
or
xor
ja
js
lahf
push
push
adc
xorl
jecxz
inc
mov
mov
mov
repnz
and
out
cld
shlb
xchg
push
or
pop
dec
repnz
pop
rclb
mov
fadd
mov
pop
add
arpl
jmp
inc
loop
jb
mov
xorb
pop
xor
xchg
add
mov
and
lds
jo
pop
mov
jmp
loop
sbbl
lds
dec
dec
xor
in
jb
sub
inc
imull
pop
xchg
jmp
add
xor
repz
inc
ds
add
xor
inc
pop
pushf
dec
shl
push
add
imull
mov
add
pop
lea
mov
outsl
sub
shr
pushf
push
mov
xor
gs
sarl
and
jp
pop
nop
xchg
outsb
sbb
and
lret
add
stc
mov
mov
sub
jle
ret
scas
jbe
sbbb
xor
fxch
cmpsl
xorb
adc
mov
repz
frstor
es
outsb
inc
iret
mov
lods
gs
jb
adc
out
dec
in
mov
xlat
inc
fsubr
sub
jge
mov
add
push
mov
pop
dec
nop
popa
or
lcall
mov
sbb
rcrl
arpl
movsb
pop
in
sbb
in
test
fs
and
inc
xor
sbb
popf
stc
roll
add
popf
push
mov
test
pop
movsb
js
aam
adc
add
mov
jmp
add
shrb
daa
inc
fs
push
cmpsl
pop
pop
jge
jmp
or
incb
out
pushf
loop
adc
dec
and
lock
mov
aaa
in
jge
push
mov
mov
mov
adc
inc
mov
cmp
dec
xchg
sbb
shl
out
sbb
sbb
in
jg
pop
das
jo
lods
les
jb
roll
aad
mov
movsl
xor
pop
sub
in
les
data16
jg
lds
mov
pop
adc
roll
xor
sbb
imul
leave
movsb
mov
mov
ficomps
cmp
popf
stc
in
xchg
add
mov
mov
adc
add
pushf
fdivrl
mov
dec
shlb
aam
out
xor
xchg
mov
mov
pop
pop
and
dec
repz
pop
cmp
cmp
jl
sub
pushl
adc
dec
and
mov
pop
and
outsl
push
push
lock
sti
fwait
lahf
daa
cld
ds
push
in
mov
mov
cs
ljmp
mov
mov
je
sub
subl
dec
jge
mov
jno
pushf
xor
ljmp
jne
or
out
mov
sbb
cwtl
pop
dec
neg
sbb
sub
xorl
shr
inc
cltd
cmp
insb
jl
roll
mov
repz
loope
mov
imul
cmp
cmp
lret
pop
cmp
jmp
mov
cmp
adc
inc
adc
imul
aas
inc
mov
dec
and
xchg
lret
push
and
push
cmpsl
rorl
jp
or
scas
xchg
dec
mov
adc
dec
loop
fidivs
cs
fisubs
pop
lcall
sarb
out
mov
bound
xor
mov
add
rcl
and
jecxz
lods
adc
inc
mov
lds
mov
into
invd
in
add
cmp
cmpsl
cmpsb
cmp
jecxz
les
ja
ljmp
and
ret
sub
lds
out
mov
pop
sub
aaa
sbb
inc
stos
clc
lea
mov
into
jne
and
and
popf
mov
xlat
lcall
and
and
cmc
mov
cmp
aad
push
jg
jo
mov
cmc
ret
lcall
push
popa
mov
xor
push
push
mov
mov
test
les
cli
dec
popa
stos
xor
push
cltd
mov
push
movsl
and
jle
into
leave
and
std
testl
insb
imul
fmull
addr16
mov
mov
sbb
jecxz
test
lret
das
dec
jle
into
sub
and
jno
test
push
int
test
inc
xlat
push
ret
jnp
sub
mov
sbb
mov
inc
mov
in
mov
mov
mov
shll
sar
cmp
hlt
jb,pt
cmp
xor
andl
add
je
mov
dec
inc
push
rolb
iret
lahf
or
mov
jns
pop
repnz
sbb
and
pop
dec
popf
out
inc
inc
loop,pt
jb
pop
adc
aaa
mov
adc
inc
push
jb
push
sub
inc
and
es
push
into
fnstenv
imul
icebp
aam
cltd
inc
lret
negl
inc
cwtl
loope
dec
fs
call
and
imul
inc
add
mov
push
scas
add
pop
xor
test
ret
mov
xor
dec
cmpsl
xor
xchg
cmp
lds
fmull
aad
arpl
js
adc
inc
pop
flds
jp
repnz
sub
dec
or
push
loope
outsl
call
cmp
lods
imul
addr16
sarb
into
inc
pop
adc
aas
cmp
pop
cmp
ds
add
xor
test
les
fwait
cmc
scas
sbb
xchg
sub
jbe
dec
in
fstl
xor
rclb
repz
add
mov
fcomip
loope
sbb
add
dec
add
aam
out
jmp
jle
lcall
mov
mov
xchg
cmp
lods
lcall
xor
sahf
clc
fsts
xchg
jb
je
cmpsl
push
sbb
fs
push
sbb
test
mov
push
ficoms
std
rorb
jle
adc
dec
jno
jle
and
add
sub
imul
test
cltd
aaa
xlat
jmp
mov
frstor
add
adc
out
inc
adc
mov
xchg
movsb
dec
xor
shll
jmp
enter
jnp
sarl
mov
xchg
fldcw
push
mov
hlt
scas
and
fcomps
ja
aaa
xchg
adc
ret
mov
inc
pop
mov
push
loope
xor
jno
sbb
pop
scas
push
out
sub
add
dec
or
out
xor
lea
divl
push
pop
jp
xor
jle
rcr
out
fsts
adc
jbe
pop
fwait
das
dec
pop
movsb
jl
loopne
in
dec
js
dec
push
xchg
ret
ret
jmp
icebp
jmp
xor
scas
nop
test
rorb
adc
dec
cli
inc
xor
push
call
mov
mov
int
dec
lock
shl
andb
aas
jno
xor
loop
out
inc
mov
movsl
cld
ljmp
in
test
movsl
iret
push
jne
mov
cmc
dec
cmp
movsl
icebp
test
repz
pop
xchg
imul
or
cmp
and
pop
inc
inc
bound
jecxz
push
add
jmp
rcrl
jo
out
inc
inc
sub
mov
in
loope
sarl
sbb
lret
mov
test
sub
xor
push
aas
sahf
fldcw
and
sub
movsl
pushf
add
sti
mov
out
inc
mov
outsl
test
jl
mov
test
imul
and
int
cmpsl
bound
xor
dec
mov
dec
popa
lock
jecxz
ret
jnp
out
add
dec
push
repnz
and
test
sub
pushf
adc
iret
les
ds
dec
jecxz
mov
mov
or
rorb
imull
adc
das
mov
scas
or
imul
lock
sub
adc
sbb
test
pop
inc
out
xor
xchg
popa
mov
cmp
cmp
and
jg
hlt
insl
dec
movsb
mov
mov
xchg
mov
xchg
xor
gs
jg
jns
in
push
shrl
bnd
jo
jle
jns
mov
mov
sbb
andl
test
ja
jae
sbb
ljmp
mov
mov
ljmp
push
push
jmp
fdivrp
outsl
std
fnstcw
push
or
add
pop
das
leave
ss
mov
rcrl
inc
dec
cli
aas
or
in
lds
jne
xchg
pop
movswl
mov
cmp
cmp
scas
ljmp
loope
add
push
mov
popl
sahf
inc
add
mov
outsb
outsb
pmaxub
mov
jae
pop
push
ss
adc
fsubs
in
dec
pop
es
mov
xchg
sbb
fdivrs
outsl
jb
test
and
mull
xchg
push
lahf
das
adc
adc
or
jp
jns
and
movsb
call
idivl
lods
mov
mov
inc
pop
dec
jae
mov
lret
lret
jns
lret
pop
leave
outsb
or
idivb
jo
jge
xchg
fstpl
xchg
rorb
lock
and
xor
outsl
enter
push
into
push
and
jecxz
sbb
pop
push
pusha
inc
fstl
cld
or
pop
push
fld
add
dec
cmp
aaa
xor
push
jo
test
add
sarb
mov
jnp
or
stos
cmp
jne
jo
mov
popf
inc
mov
lret
jb
sub
cld
rcl
pop
sub
sarl
repnz
cmpsb
mov
jle
lea
mov
adc
inc
xor
jle
and
add
dec
aam
lret
or
in
cmp
pop
insl
adc
push
mov
inc
inc
xor
dec
dec
loop
xchg
cwtl
add
cld
das
clc
xchg
adc
sbb
push
mov
inc
scas
mov
or
push
mov
push
mov
dec
popa
or
mov
sub
fldenv
mov
sub
push
mov
inc
and
add
push
mov
mov
or
cmc
sbb
pop
iret
mov
lods
cmp
roll
shll
adc
or
nop
scas
sti
lret
push
nop
lcall
sarl
rolb
sbb
push
add
int
xchg
add
xchg
out
mov
add
adc
inc
insb
imul
mov
cmp
iret
mov
mov
loopne
and
test
adc
stos
jae
xchg
jae
jmp
jg
nop
pop
cmp
nop
outsl
scas
fsubrl
fbstp
sbb
mov
inc
sbb
dec
popa
jmp
xchg
mov
pop
out
lret
jnp
and
test
adc
test
mov
rcl
call
fs
cmpsl
fnsave
sub
addr16
xchg
cltd
xor
out
cmp
or
or
push
cmc
mov
pop
clc
nop
mov
fisubl
push
mov
sub
rcrl
gs
js
pop
inc
mov
xor
repz
fidivrl
jns
mov
lcall
pushf
repnz
cmp
xor
idivb
cmp
mov
jnp
xchg
cwtl
out
inc
lahf
ret
inc
sbb
mov
xchg
testb
jmp
call
or
adc
call
or
cmp
dec
fisttpll
mov
push
adc
ret
pop
iret
data16
xchg
fadds
push
in
sub
push
jne
loop
xchg
sub
test
fildll
pop
fstpt
je
clc
movsl
pop
popa
clc
nop
pop
push
pop
test
or
and
adc
mov
or
mov
pop
push
data16
push
jno
je
shrl
imul
ret
push
lahf
jp
inc
lods
rcr
push
dec
push
xchg
jnp
sbb
sarb
dec
push
pop
xchg
mov
ja
out
pushf
cmp
or
lcall
inc
or
cmpsb
sbb
cwtl
pop
popf
cltd
rol
xchg
lea
loopne
shlb
add
mov
sub
and
ret
imul
test
cmp
stc
andb
xchg
add
adc
push
scas
xor
int3
scas
mov
loopne
sub
shlb
addr16
iret
ja
jb
lock
ljmp
jbe
in
test
das
pusha
das
int
dec
call
js
pop
sarb
in
push
lods
cs
ficomps
mov
pop
scas
popf
sbb
cmpsl
dec
xorb
lret
aam
pusha
and
lods
jmp
adc
adcl
shl
icebp
pop
push
jno
push
insb
mov
fidivl
push
and
cmp
iret
insw
pop
out
xchg
dec
pop
add
ret
xchg
das
call
rcrb
add
inc
mov
fcoml
test
sbb
cmp
push
mov
lods
imul
mov
cmp
mov
cwtl
and
cwtl
adc
pusha
add
int3
cmc
mov
popa
xchg
bound
mov
into
movsl
sub
push
inc
fst
fwait
repnz
pop
sbb
movsl
outsl
aaa
ljmp
lea
inc
lahf
loope
xchg
xlat
in
xchg
cltd
cld
insl
cmc
add
ret
aad
and
adc
addr16
jb
int
jns
loope
hlt
jle
mov
and
pop
das
sbb
mov
dec
ret
popa
or
imul
pop
fidivl
mov
sbb
in
int
aaa
out
mov
dec
xor
jno
sbb
divl
sub
sbb
dec
sbb
dec
cmp
rol
pop
xchg
sub
jnp
sub
test
movsb
insl
jge
xorl
push
je
dec
mov
ret
in
rcr
or
jne
pop
scas
pop
inc
mov
jns
jb
aad
push
jnp
test
aad
fists
shlb
jge
pop
fdivs
adc
rcrl
xchg
fnsave
out
mov
mov
sub
dec
filds
jl
andb
jns
or
arpl
pop
roll
pop
sub
inc
mov
add
mov
jg
or
outsl
dec
hlt
jl
in
jns
dec
cmpsb
imul
mov
sbb
dec
jnp
mov
inc
cmpb
mov
jp
add
out
lret
cld
pushf
daa
popf
sbb
adc
push
jmp
xchg
call
fistps
sti
sbb
mov
loop
inc
in
sbbb
sub
sbb
push
inc
and
mov
sarb
sbb
add
pop
ss
pusha
inc
sti
gs
fldenv
push
xchg
rcrl
xchg
repnz
scas
push
jne
pop
ds
xchg
add
stos
cmpsl
pop
inc
or
mov
mov
adc
push
and
jl
cld
xor
leave
bound
fisubs
xor
incb
inc
mov
mov
in
repnz
cmp
adc
add
popa
jns
mov
sbb
mov
jg
mov
subl
mov
mov
inc
adc
fildl
pushf
or
je
fsubl
std
into
mov
repnz
mov
mull
add
imul
cmp
mov
lcall
lret
inc
push
mov
das
sub
pop
repnz
add
xlat
cmp
mov
mov
mov
adc
inc
jle
sbbl
test
mov
mov
dec
sbb
dec
iret
pop
xchg
sub
iret
pop
insl
bound
mov
push
movsb
push
cmp
add
mov
icebp
movsb
jnp
xor
loope
das
daa
cmc
mov
mov
scas
sarb
popa
leave
cmp
mov
cmp
xor
or
lods
xacquire
mov
jno
lahf
xor
fs
mov
test
cs
xlat
sbb
das
sub
fdivs
rcrb
jle
lret
adc
enter
and
inc
clc
inc
push
in
pop
popf
repnz
jl
mov
sbb
shrb
sub
push
push
or
jne
js
sbb
shrb
imul
inc
lock
ja
xlat
adc
loopne
adc
mov
adc
xchg
mov
fwait
mov
test
lret
sub
dec
push
lds
in
loope
cmp
addb
or
mov
daa
inc
sbb
xchg
adc
jae
mov
sub
loop
sbb
lcall
sub
in
or
imul
nop
sbb
lea
clc
mov
cmpsb
xor
pop
and
add
in
mov
mov
imul
xchg
hlt
aad
add
sub
aaa
call
mov
push
adc
sbb
mov
bound
xchg
scas
sbb
mov
aam
jno
jle
popf
imul
rdtsc
lods
jl
int
pop
push
adc
xor
mov
sub
bound
cmpsl
ds
lret
adcl
inc
clc
lods
ret
fldcw
int
mov
imul
inc
pop
int
or
adc
dec
popf
in
cmp
out
add
inc
inc
dec
sbb
icebp
mov
inc
push
fidivl
inc
push
and
pop
imul
mov
in
insl
or
leave
or
inc
jb
xchg
jo
scas
inc
popf
ja
sbbb
in
aas
mov
adc
adc
das
dec
insl
xor
scas
insl
mov
adc
inc
xlat
pop
pop
cmp
les
jnp
pushf
jbe
jmp
or
xchg
mov
ljmp
mov
jmp
lahf
push
repnz
cmp
xchg
cmp
fldenv
push
jns
jg
jne
jle
ljmp
dec
jo
in
fdiv
mov
mov
aaa
and
int
scas
ret
mov
in
bound
add
inc
xorl
testb
push
inc
fdivrs
ficomps
adc
repnz
mov
test
fs
cmp
or
sbb
pop
sub
mov
insb
pop
mov
jmp
mov
stc
add
loope
scas
jns
or
xchg
ss
mov
mov
jl
add
daa
sbb
and
push
test
aam
xchg
movsb
jb
popa
xor
jns
inc
cmp
mov
inc
pop
andb
aam
fnstsw
add
lret
push
mov
xchg
sub
negb
shll
loopne
dec
xor
rcrl
movsl
out
iret
in
lcall
sub
arpl
jb
jmp
aas
push
add
jl
jno
sbb
scas
outsb
ss
imul
loop
test
jmp
mov
mov
filds
dec
jne
sbb
lods
cmp
and
mov
push
pushf
shrl
adc
ljmp
pop
inc
icebp
dec
loop
inc
pop
mov
ret
sub
aaa
lret
cld
pop
int3
arpl
pop
scas
ja
hlt
and
cwtl
xor
cmpsl
xchg
out
inc
sbb
movsl
mov
inc
pop
jns
push
and
pop
push
out
vmovlps
or
or
cmp
adc
fmuls
sbb
pop
dec
mov
push
xchg
inc
into
pushf
mov
dec
xor
add
inc
pop
aad
repz
dec
ret
repz
cmp
push
push
outsb
jge
xchg
aaa
lret
cld
or
jns
pop
lcall
lea
lea
sbb
inc
mov
rorl
lret
jmp
in
mov
mov
or
jbe
sub
cmp
cmp
mov
push
and
cld
push
dec
adcl
mov
add
into
inc
lahf
sbb
cmp
insl
mov
stos
adc
xor
mov
jne
pop
clc
pop
or
jge
inc
arpl
xchg
or
ficomps
pop
test
lcall
icebp
insl
jg
fisubrl
dec
inc
inc
jg
mov
and
popa
mov
repz
leave
gs
cmpsb
push
jmp
fiadds
cmp
jmp
xor
pop
bnd
adc
pop
insl
mov
mov
scas
outsl
cmpsl
incl
mov
sbb
sub
jge
jo
shlb
inc
les
inc
cld
pop
inc
xor
xchg
cmp
sahf
rdpmc
mov
lock
cld
pusha
add
jo
gs
pop
int3
int
xchg
sbb
add
das
int
mov
vpsrad
sub
cwtl
sub
mov
inc
cltd
xor
aam
cli
or
pop
xchg
mov
pop
pop
xor
and
push
test
and
jnp
iret
ss
test
iret
push
push
push
xor
clc
daa
inc
es
xchg
xor
div
xor
shlb
push
cmp
je
jmp
dec
push
jecxz
xor
popf
fstpl
push
loope
lds
bnd
and
push
imul
dec
cmp
cmpsb
les
inc
nop
setb
ret
outsb
icebp
pop
or
rcr
gs
push
push
dec
mov
push
jae
pop
aam
dec
ja
rorb
shr
xchg
jns
inc
push
dec
pop
cmp
sahf
outsb
es
xchg
stos
outsl
push
fnsave
jne
jo
test
jge
cmpsl
mov
mov
sub
add
inc
pop
outsl
ja
push
and
and
loope
push
pushl
and
int3
lods
stc
ja
mov
xchg
ret
jp
xor
mov
notb
dec
fs
shrd
and
adc
pushf
xor
cmp
pop
mov
pop
lds
ficomps
enter
xchg
pop
pushf
into
xchg
iret
pop
iret
push
out
es
stos
mov
jbe
jo
iret
add
pop
inc
andl
test
push
nop
mov
enter
movsb
or
adc
fmull
pop
push
popa
imul
repnz
xor
fs
popf
push
push
mov
xor
pop
imul
hlt
push
add
cmpsb
lods
shl
ljmp
mov
dec
cmp
cmp
cmpsl
mov
mov
int3
cltd
enter
clc
int
sbb
test
ret
adc
xor
loop
cmpsl
pop
dec
pop
rorl
xchg
mov
sti
je
inc
fistl
clc
pop
js
std
ret
jl
cmpsb
mov
pop
mov
sti
pushf
mov
cli
xchg
xchg
leave
lret
pop
mov
in
sub
clc
fadds
loopne
pop
xchg
pop
scas
fdivr
inc
cli
jne
xchg
pop
dec
mov
in
test
int
sti
scas
xchg
mov
sbb
das
cmp
jg
pop
rcrb
daa
jge
mov
push
les
cmc
std
xchg
mov
int3
or
mov
lahf
sti
mov
dec
bound
ficomps
xchg
or
je
add
xor
pop
add
xor
pop
mov
mov
adc
jnp
or
divl
mov
sbb
mov
cmp
jg
andb
rolb
or
ficoml
mulps
popa
mov
mov
xchg
add
je
bound
push
mov
aam
or
sub
aaa
dec
sar
cmc
sahf
cmpl
sub
scas
pop
movsb
mov
stc
push
add
cmp
movsb
cmp
arpl
outsb
fisubrs
add
xor
xor
xchg
pop
cld
cltd
pop
cltd
xchg
into
xchg
sub
mov
xor
in
aam
in
xor
aas
mov
stos
das
pop
je
xor
xchg
hlt
cmp
jno
rcrb
adc
loop
pop
push
fdivrs
cmp
push
dec
repnz
xor
fisubl
cmp
es
mov
outsl
stc
ficoms
fisttpll
int
mov
test
imul
adc
xchg
xchg
es
dec
sbb
push
xchg
pusha
mov
sub
ret
sbb
sub
adc
ret
adc
sub
cmpl
jno
outsb
loope
sbb
bound
sub
js
mov
cmpsb
and
and
jns
addl
adc
xor
dec
and
jnp
ja
hlt
stos
push
mov
fdiv
adc
mov
cld
lds
jbe
jmp
fistps
cld
outsl
lea
loop
pop
inc
nop
mov
lret
jns
push
test
call
sarl
push
mov
jb
or
jg
into
ficoml
rorb
push
cmp
pop
jae
pop
lret
mov
dec
es
popf
decl
jecxz
hlt
addr16
xchg
dec
sbb
mov
dec
in
mov
add
dec
cld
out
and
repz
cmpsl
mov
loope
pop
idivl
cmpsl
xchg
outsb
enter
les
mov
rcrb
dec
insb
int3
jg
call
dec
outsl
or
jp
mov
mov
push
sbb
test
push
push
hlt
and
push
adc
lcall
mov
push
adc
dec
fsubrl
jb
and
inc
das
daa
loop
lret
pop
shl
sbb
or
fisttpl
aad
sub
sbbb
out
aaa
xchg
add
xchg
js
push
xchg
inc
loope
rolb
add
inc
jb
cmpsb
push
sti
xlat
mov
push
push
dec
mov
fucomp
sbb
mov
dec
movsl
int
fnstsw
mov
lock
cmp
mov
or
mov
or
mov
adc
ja
cmp
movl
dec
cmpsb
lea
add
push
adc
fnstcw
scas
sbb
pop
insl
sbb
imul
sbb
nop
or
fwait
shll
pop
cmpps
gs
pop
add
lds
mov
mov
sub
mov
shlb
lea
xchg
jne
into
mov
jns
or
js
sahf
adc
sbb
fsubp
mov
notb
mov
push
ljmp
fistps
push
adc
cld
and
iret
xchg
mov
xor
cmp
xchg
push
mov
es
cmpsb
jbe
fmuls
in
fwait
mov
movsb
fs
mov
adc
sub
enter
aam
cmpsl
cmp
bnd
or
mov
movsl
mull
inc
shrl
mov
movb
insb
fidivrs
add
dec
xchg
or
sub
test
stos
jmp
lcall
xor
xchg
mov
enter
jo
adc
cmp
mov
mov
and
xchg
hlt
sub
pop
sbb
xchg
sahf
icebp
dec
hlt
aas
jmp
jae
jns
fcmove
pop
pop
scas
mov
push
jmp
fcmovb
test
pop
add
xchg
cmpsb
push
adc
push
mov
or
xchg
xchg
clc
pop
popf
push
inc
in
test
imul
cmp
loopne
and
mov
out
les
push
fdiv
mov
mov
rcrb
adc
stos
call
jne
movsl
cmp
shlb
mov
jp
adc
test
cmp
jns
pop
or
popf
iret
test
jmp
repnz
inc
inc
dec
jne
pop
mov
dec
mov
mov
mov
fdivl
sub
mov
lret
sti
jns
cmpsl
sbb
cmpsl
popa
xor
add
inc
lret
mov
push
jb
sahf
daa
push
mov
insl
mov
push
cmpl
std
dec
cmp
fsts
mov
loope
push
out
cmp
fnsave
lds
imul
push
jp
mov
sbb
adc
mov
jecxz
faddl
ret
dec
and
inc
std
imul
jns
mov
test
dec
loope
ror
inc
dec
or
idiv
lahf
mov
ret
xor
add
jecxz
push
push
scas
shrb
pop
cli
adc
push
mov
int3
cli
cmpsb
adc
cli
or
stc
pop
decl
xor
stc
xchg
mov
mov
sbb
xchg
inc
in
adc
cld
popf
push
clc
sahf
cmp
call
inc
jl
scas
cmp
sbb
popf
dec
mov
sub
and
rcll
jl
in
and
aam
mov
insl
pop
cli
push
cmpsl
ret
fldenv
sub
push
daa
or
mov
nop
adc
jmp
je
jne
js
fld
pop
add
jecxz
push
and
out
inc
pop
pop
divb
jge
gs
shl
scas
pop
ds
aas
mov
in
mov
mov
xor
shrb
push
aam
scas
inc
jg
xchg
add
jne
bound
mov
div
popa
fsub
popf
xor
sub
decb
jbe
cmpsb
xor
or
mov
mov
push
sub
dec
mov
into
lahf
jb
lods
aam
pusha
pusha
fnsave
pop
adc
pop
jbe
jle
cwtl
push
adc
mov
jecxz
sub
adc
mov
mov
aam
mov
sbb
loope
xorb
sub
xchg
inc
adc
dec
sahf
jecxz
pop
out
mov
rcr
popa
test
cmp
push
outsb
cmpsb
cmp
repz
neg
cltd
or
sahf
xor
pop
mov
into
scas
in
mov
cmp
mov
pop
push
or
sub
pop
mov
fistl
cmp
or
and
or
rclb
push
xchg
pop
fcmovne
push
in
mov
shr
test
je
mov
dec
push
bnd
jae
outsb
push
push
test
push
daa
mov
adcl
das
mov
mov
mov
scas
lcall
shl
jne
mov
jecxz
imul
imul
int
pop
add
popa
ja
push
pop
adc
nop
aaa
sub
in
out
sbb
cmp
push
dec
in
xchg
out
loop
mulb
mov
sub
test
hlt
xchg
arpl
lods
mov
sbb
data16
xor
popf
and
test
add
fildll
or
cmp
inc
xchg
push
pop
xor
pop
cltd
negl
mov
in
lret
mov
stos
ret
fimuls
and
adc
mov
add
cmc
add
mov
daa
cmp
ds
sbb
dec
fcomps
popf
mov
outsb
loope
push
push
loopne
sub
sub
fbstp
sub
lret
push
sbb
cmc
ja
imul
test
stos
inc
repnz
movsl
dec
daa
cltd
les
fcoml
ficompl
adc
add
fisubl
out
push
jae
or
sub
and
jg
insb
mov
push
or
sbb
pop
icebp
mov
pop
sti
je
fdivrp
movsb
push
incl
xchg
dec
mov
sbb
enter
jns
push
inc
fstps
pop
out
adc
pushl
dec
adc
and
stos
inc
inc
lret
in
hlt
icebp
pusha
jno
adc
jge
adc
je
sar
pop
cli
and
in
test
mov
push
sub
inc
adc
jg
xchg
xchg
pop
das
shll
clc
cmpsb
test
jmp
add
and
add
pop
jae
js
lock
cli
adc
mov
scas
loop
rcrb
dec
das
imul
sbb
cmp
mulb
scas
imul
decb
pop
add
sub
push
and
outsb
ja
outsl
mov
push
call
cli
stos
xor
lds
mov
sub
decl
aad
fadd
add
scas
iret
data16
repnz
nop
hlt
mov
jae
jp
sub
lret
cld
push
rcr
mov
daa
cmc
shlb
std
mov
in
cmc
jecxz
lahf
clc
lret
and
popf
subb
mov
adc
inc
mov
fstenv
int3
loopne
jp
testl
mov
pop
dec
add
xorb
fstp
sub
sahf
pop
stc
loopne
jp
sbb
fwait
add
cld
out
xchg
and
xchg
gs
shl
adc
mov
or
pop
adc
mov
out
outsb
cmpsl
rcrl
clc
push
dec
movsl
lds
hlt
xchg
fnsave
jecxz
arpl
popf
jo
push
add
xor
les
sarl
cld
scas
and
icebp
jno
leave
mov
push
pop
repnz
repz
pop
aad
pop
dec
push
adc
cvtdq2ps
push
cmpsb
mov
mov
inc
fnstsw
adc
into
push
ds
inc
mov
sbb
mov
fs
mov
mov
pop
jne
push
repz
push
dec
xchg
jnp
sahf
shll
mov
mov
sti
xchg
insl
or
xor
xchg
lods
add
sub
fsubl
cmpsb
pop
jg
cli
mov
sbb
jmp
repz
imul
and
adc
jle
cmpsl
xchg
xchg
mov
cmp
mov
mov
ljmp
adc
mov
repz
mov
sub
insb
das
stos
dec
popa
shlb
sub
pop
enter
imul
subb
in
sub
loopne
int3
and
push
and
mov
or
scas
pop
dec
repz
mov
fxtract
lock
sub
into
xchg
sub
mov
mov
iret
add
or
mov
push
imul
in
ficomps
fmulp
add
lods
sbb
ds
xlat
xchg
pop
mov
sbb
xchg
shr
in
inc
aaa
lds
or
push
or
fmuls
push
xor
pop
mov
push
xlat
xor
lds
push
jb
add
dec
jecxz
and
cmp
fdiv
mov
mov
sti
test
shll
fsubrp
pop
enter
push
xlat
add
mov
lods
imul
aaa
and
retw
sub
mul
push
mov
mov
jg
cmp
xchg
loope
dec
dec
push
mov
or
or
stos
mov
idiv
jle
fdivrl
inc
cwtl
xchg
js
bound
dec
mov
shrl
ss
add
arpl
imul
inc
mov
mov
xlat
mov
lea
in
and
add
xchg
add
roll
repz
fmulp
xchg
nop
cmp
test
test
xchg
pop
jp
or
dec
mov
jge
and
jns
jo
lahf
xchg
mov
out
or
pop
fcmovb
jne,pn
add
mov
pop
std
xchg
push
mov
fildl
sbb
addb
sbb
or
and
je
inc
out
adc
xchg
out
bound
call
mov
bound
sbb
mov
imul
test
pop
jmp
test
inc
jmp
out
push
sub
xor
add
inc
inc
push
mov
jle
adc
sarl
daa
negl
add
rclb
mov
out
sti
mov
lcall
sbb
or
dec
repz
imulb
push
xor
push
push
test
xor
leave
and
xor
stc
sub
arpl
popa
daa
mov
cwtl
lahf
inc
sbb
jp
jmp
add
sub
ss
ja
cmp
rcr
jge
loop
mov
gs
lret
hlt
jno
frstor
dec
jmp
mov
pop
lods
inc
rcrl
lock
pop
insl
movb
push
pop
add
pop
leave
push
inc
stc
pusha
arpl
jmp
xor
jmp
mov
mov
in
cmpsl
sbb
aad
test
or
mov
mov
lds
rorb
add
inc
sbb
les
stos
adc
outsb
jl
cmpl
xchg
cmpsb
and
sub
hlt
cmp
retw
test
xchg
jle
xor
jbe
inc
or
push
stc
mov
push
leave
fisubl
xor
xorl
xor
hlt
push
jo
mov
dec
mov
fwait
adc
addr16
inc
scas
push
sti
fdivs
notl
rcr
sub
dec
add
hlt
jno
fsts
loopne
and
dec
inc
push
aam
jno
or
ret
jp
int
out
or
inc
adc
pop
mov
pop
call
shr
cltd
jns
pop
sub
icebp
jno
bound
or
mov
add
gs
add
rclb
and
adc
push
push
pop
xchg
xchg
sbb
insl
popf
pop
aaa
out
add
xchg
add
mov
loopne
cmp
iret
pop
out
mov
outsb
lea
xchg
dec
push
mov
sbb
or
cmp
dec
dec
mov
loope
dec
flds
jns
je
xor
repz
add
jo
adcl
lods
adc
sbb
sahf
and
stos
and
je
xor
lods
dec
pop
sub
repz
dec
je
jle
ljmp
cmpsl
jns
add
imul
cli
xchg
stos
inc
inc
push
call
push
xchg
stos
inc
cld
adc
inc
inc
dec
lock
jne
push
and
sbb
jnp
or
clc
andb
pop
insb
add
cmp
dec
adc
aam
cmpsb
mov
stc
jae
sbb
lret
cld
loope
pop
aas
mov
pop
out
sub
cmp
cwtl
out
xchg
pop
xchg
push
outsb
std
je
fidivs
xchg
dec
xor
sbb
fstp
jo
das
mov
pushf
mov
cmpsb
xor
ss
or
out
inc
jg
mov
dec
xor
push
fsubrs
sbb
pop
cbtw
insb
sbb
push
adc
lds
xchg
repnz
jo
cwtl
lods
mov
in
mov
test
xchg
ds
fs
jno
add
leave
mov
xor
cmp
mov
mov
xchg
testb
popf
mov
add
xchg
ret
ret
ljmp
inc
cmp
cmp
pop
add
or
jne
sub
inc
jb
fnsave
enter
mov
cmpsl
cmpsl
out
stos
cmp
cmc
and
cmpsl
pop
ret
cwtl
in
adc
std
aam
adc
aam
add
and
xor
fbstp
sahf
xor
cmc
inc
int
jbe
dec
aaa
mov
sub
xchg
in
cmpxchg
rol
and
jecxz
loopne
inc
add
in
mov
and
orb
lret
mov
sub
addr16
adc
inc
add
mov
cmpsl
jmp
out
pop
dec
and
ret
mov
dec
das
sarb
loope
daa
add
jle
sbb
xor
ds
jo
jo
mov
jb
sub
repz
and
inc
fs
cmc
shr
subl
jb
adc
jo
cld
mov
mov
mov
add
dec
dec
add
cmc
sbb
adc
or
testb
cmc
push
incb
jl
pop
negb
pop
xor
sub
push
cld
roll
and
inc
mov
mov
loope
subb
lds
out
sub
out
test
loop
add
push
andl
inc
cs
xor
add
xor
outsl
sub
xor
test
in
adc
subb
inc
pop
push
int3
mov
mov
sbb
dec
sarb
xchg
pop
sbb
xor
repz
cmpsb
test
inc
xor
add
push
cwtl
lods
addb
xchg
jg
stc
xlat
xchg
inc
adc
fisubrs
push
icebp
add
pop
leave
mov
jecxz
inc
loopne
divl
cmp
adc
pusha
outsl
out
dec
in
insl
mov
cmpsb
sbb
jl
lahf
cmp
cmp
mov
lods
sti
loop
mov
push
cmp
scas
stos
sbb
imul
mov
xchg
and
rcrb
push
out
xchg
cmp
loopne
mov
loopne
or
mov
andl
insl
mov
scas
inc
mov
jnp
dec
lods
inc
stc
pop
je
movsb
inc
or
dec
and
sbb
ds
das
lret
lea
es
pusha
mov
xchg
jbe
lods
fisttpl
push
cmp
xchg
or
sbb
dec
jmp
dec
scas
xchg
jae
loopne
jo
pop
stos
iret
repnz
js
out
ret
dec
loop
dec
in
mov
pop
call
ror
fadds
frstor
fidivs
fnstsw
js
lock
pushf
lea
cmpsl
mov
stos
mov
fs
and
inc
sub
add
les
mov
adc
cmp
pushf
or
ss
cs
fisubrs
add
and
push
pop
sti
mov
clc
test
sbb
in
push
jecxz
push
jbe
mov
push
lret
dec
aas
push
addr16
pop
outsb
push
imul
xor
test
sbb
mov
mov
int3
mov
or
dec
sub
pop
and
add
enter
adc
jae
jg
test
out
daa
push
fldcw
int
mov
inc
jno
cs
addr16
or
andb
inc
pop
jmp
pop
test
repnz
push
out
push
mov
xchg
out
push
mov
clc
movsb
int
cld
insb
inc
push
or
cmp
xchg
cmpsl
dec
adc
ss
popa
inc
cltd
cmp
push
out
fdivrl
push
aas
mov
jg
stc
cmp
dec
repz
pop
sbb
aas
xor
in
mov
cmp
cs
in
sbb
imul
xchg
scas
arpl
out
and
out
push
jbe
and
fcoms
fidivrl
das
mov
jge
shlb
mov
cmp
push
aad
rclb
xor
ret
test
stos
cs
cmp
movsl
scas
push
mov
cs
clc
jnp
cmpxchg
xchg
out
push
mov
jno
push
and
sub
jno
out
sahf
cmp
sub
push
xor
add
xchg
hlt
mov
push
push
xchg
sti
or
imull
popf
scas
or
nop
inc
fidivl
enter
lods
cmp
push
testb
outsl
push
or
mov
inc
out
movsl
sar
push
add
mov
ja
std
faddp
fmuls
pop
in
inc
inc
imul
xchg
push
adc
cmp
pop
lret
xor
mov
rorb
jl
ret
outsl
dec
ds
adc
filds
fcmovu
outsl
loop
adcl
pop
jbe
pop
aas
and
dec
cmp
mov
adc
inc
stos
xor
inc
in
mov
fbstp
cmpsb
dec
adc
add
outsl
jno
or
outsb
lea
rcrl
mov
movsb
repnz
mov
push
push
xchg
dec
jl
cli
jne
pop
fsub
or
in
push
mov
shll
aas
mov
cld
lahf
jp
fs
cmpl
pop
test
loope
das
mov
add
jne
daa
push
cmpsl
dec
insb
je
xchg
in
popf
lock
mov
stos
fldt
shrl
inc
pushf
push
scas
mov
stos
add
push
xchg
fidivrl
or
xchg
and
mov
jle
jecxz
int
idivl
sarl
std
and
loope
jle
add
cmpsl
out
gs
xchg
int3
adc
xchg
pop
testb
jg
push
and
test
mov
loop
dec
psrad
insl
imul
out
sahf
lods
fiadds
push
aam
pop
and
testb
in
pop
jns
cmp
cltd
les
sbb
das
adc
add
int
mov
mov
clc
and
clc
push
cmp
in
mov
jp
sub
add
mov
sbb
inc
fcompl
mov
xor
arpl
hlt
inc
or
adc
popa
mov
inc
aaa
mov
shrb
push
inc
popf
sub
inc
mov
mov
xchg
xchg
sub
cmpsb
je
stos
push
xchg
inc
repz
mov
push
or
sahf
pop
arpl
cmp
lahf
jnp
inc
pop
jb
xchg
movsl
xchg
cmpsl
jp
jecxz
insb
and
lock
pusha
add
test
sub
fisubrs
add
fidivrl
mov
lret
bound
mov
cmp
xchg
sub
mov
pop
scas
scas
xchg
mov
xchg
mov
inc
lret
data16
mov
cltd
lods
rcl
sahf
mov
sbb
mov
jno
xor
add
mov
and
xchg
mov
xchg
dec
xor
js
hlt
sub
add
add
pop
lds
lea
aaa
or
xlat
jbe
mov
mov
arpl
sbb
push
mov
jp
out
and
inc
or
cltd
test
test
fucomip
and
in
pop
push
xor
mov
fs
jle
jo
and
xor
jp
fisubrl
sti
fwait
stos
scas
subb
je
sarl
cmp
mov
les
clc
xor
jmp
mov
and
mov
mov
adc
das
lock
sbb
inc
loopne
icebp
push
mov
xchg
xor
nop
daa
insl
imul
pop
adc
mov
rcl
pop
mov
fdivl
pusha
ss
test
stos
jne
mov
jle
clc
sub
rcll
push
daa
push
pop
mov
nop
pop
add
scas
stos
ds
sub
dec
pop
test
into
sub
dec
jns
loope
sub
cs
cli
adc
out
repnz
jae
loop
jp
adc
cmp
ret
cld
cmp
popa
rcll
je
mov
or
mov
loopne
enter
adc
ror
adc
push
inc
sub
jae
jno
outsl
shlb
push
cmc
pop
out
mov
fwait
cld
xchg
pop
in
out
mov
mov
lods
mov
pop
dec
pop
aaa
mov
aad
inc
loop
mov
das
outsb
adc
jg
gs
out
les
sub
dec
xchg
inc
xchg
jns
rol
xor
push
dec
btc
pop
push
dec
loope
imul
ljmp
call
cmpl
mov
lret
into
adc
mov
mov
inc
add
inc
cmp
inc
cwtl
xchg
pushl
sbbl
dec
scas
insb
sub
imull
addb
mov
mov
mov
pop
xchg
and
pop
xor
push
mov
icebp
fsubrl
insb
or
mov
repz
gs
sahf
xchg
out
lcall
xor
sbb
pmulhuw
inc
inc
subb
ja
fsubrs
pop
mov
movntq
mov
ret
shll
test
jge
sub
imul
stos
add
addb
mov
ljmp
adc
mov
push
cwtl
arpl
lcall
popa
clc
pop
jnp
sub
sti
xchg
inc
sub
insl
sub
cmp
xchg
idivb
hlt
pusha
mov
daa
mov
pop
das
push
icebp
cmp
or
pop
cwtl
cmpb
lds
mov
prefetch
std
and
test
xchg
fbstp
leave
hlt
stc
orl
pushf
lahf
hlt
loope
adc
xor
andb
add
mov
test
rcrb
sbb
mov
sarb
lret
lret
pop
xor
loop
test
je
stos
mov
data16
jb
in
push
add
add
mov
repnz
add
sub
jne
inc
leave
movsb
cltd
ret
jle
jge
repnz
idivb
push
xchg
jmp
push
rcrb
and
rcrl
jb
mov
cmp
testb
imul
dec
push
fcmove
pop
add
in
jnp
hlt
cmpb
sbb
cmp
mov
sahf
loope
and
rcl
lock
xchg
mov
jno
add
js
mull
fsubs
fwait
adc
in
xchg
mov
dec
loopne
rcrl
pop
push
jmp
sbb
insb
pop
sbb
jae
insb
jp
ja
mov
hlt
mov
xchg
sbb
aam
call
xchg
jp
push
lods
shlb
pushf
movl
jp
sbb
add
in
dec
sarl
dec
sub
jecxz
mov
jno
adc
imul
test
cmc
aas
adc
add
pop
pop
in
xor
xor
or
dec
fcmovnb
mov
xor
arpl
lds
dec
mov
bnd
xlat
mov
popf
pop
movsb
lds
push
ja
mov
ljmp
push
push
or
pop
jno
push
subb
sbb
pop
add
mov
mov
add
mov
mov
out
xchg
adc
lea
jno
xchg
out
rclb
push
mov
cmp
xchg
repz
jge
pop
mov
decl
std
mov
or
std
mov
sbb
mov
scas
inc
ret
es
leave
int
aas
fnstcw
cmp
dec
out
add
jl
jno
jmp
lret
xorb
cmp
and
sub
xor
stos
cmp
imul
fiadds
out
enter
clc
jbe
xor
dec
push
sti
mov
and
xchg
inc
add
stc
and
or
out
movsb
mov
sbb
jle
or
add
in
pusha
pop
sub
bound
in
loop
dec
adc
sbb
out
movsl
ret
push
xchg
mov
cmp
sub
pusha
fbld
fwait
xchg
mov
sarb
int3
dec
cmpsb
inc
or
sub
and
push
ss
mov
inc
out
or
or
jg
xchg
mov
or
int3
pop
and
fisttpl
popa
in
stos
add
add
xchg
das
push
testb
inc
push
aas
js
movsl
jl
mov
add
loope
push
mov
shlb
push
add
and
and
inc
dec
push
scas
push
mov
loopne
jbe
add
sub
mov
push
mov
mov
inc
out
inc
fdivs
push
xchg
jg
fsubr
mov
cmp
clc
xchg
in
jp
mov
mov
fisttpl
shrl
push
loope
cmp
shr
sbb
push
jne
fmul
sti
es
stc
in
cmp
lods
out
cltd
std
inc
stc
int3
dec
cmp
mov
push
repnz
cmp
or
dec
mov
mov
outsb
add
lods
mov
inc
push
ret
pusha
sub
into
orb
pop
and
inc
fisubrs
and
imul
cli
pop
cld
and
sti
imul
fstpl
loop
xchg
dec
in
pop
cmp
or
pop
xchg
aad
int3
shlb
pop
hlt
add
sbb
hlt
pop
dec
push
outsb
mov
mov
or
xor
cld
lcall
jo
int3
adc
inc
lods
lret
push
inc
arpl
dec
mov
jnp
jmp
mov
sbb
sbb
and
notb
cld
pop
scas
push
movsb
and
mov
es
or
add
int3
fisubs
loope
dec
mov
jg
in
fbstp
dec
sub
inc
xchg
adc
outsb
pop
test
xchg
or
or
mov
lcall
pop
ja
xor
das
add
mov
rcrl
scas
push
loope
pusha
aaa
xchg
add
mov
popf
lock
sti
pop
dec
movsb
jnp
cmp
mov
loopne
sahf
cmp
adc
cltd
push
jno
cld
mov
fwait
xor
lock
and
mulps
push
out
lahf
cmpsb
lds
mov
xorl
mov
js
in
pop
mov
in
aas
lea
icebp
push
decb
loope
and
mov
iret
add
mov
jnp
lahf
movsb
fwait
cmp
mov
aam
xchg
pop
int3
add
sahf
mov
test
xlat
inc
repz
pop
aam
dec
push
jne
inc
addr16
hlt
cmpsb
enter
xlat
lahf
push
inc
push
jge
mov
push
push
mov
push
mov
stos
and
mov
adc
dec
imul
xor
ret
xlat
mov
outsl
incb
mov
jg
fwait
mov
inc
loopne
and
dec
fnstcw
aaa
lods
into
and
jl
lods
xor
inc
add
cmpsb
jb
mov
jns
or
add
cld
sub
fdivl
int3
mov
leave
push
scas
push
cmpsb
in
inc
in
ja
rol
lds
pop
fwait
lds
mov
and
std
test
push
gs
rcrb
xor
arpl
loopne
lods
test
imul
cli
aam
sub
testb
xor
xor
push
xchg
stos
test
sub
add
and
adcb
jmp
mov
push
xor
and
inc
push
bndstx
pop
cmp
mov
sub
push
xor
push
pop
xor
lock
mov
xchg
mov
sub
mov
sbb
sub
sub
les
int
lock
aas
pop
lret
mov
pop
push
fwait
leave
enter
inc
ret
es
adcb
dec
add
push
mov
rorb
cmp
lock
out
add
insl
jge
scas
pop
popf
xor
int
mov
aad
mov
fcompl
movsb
or
enter
dec
cmpsb
bswap
lret
sub
sub
in
xchg
ss
adc
js
in
stos
xchg
dec
mov
test
adc
int3
xor
push
push
inc
and
push
aad
les
pushf
icebp
dec
in
in
sbb
dec
cwtl
mov
mov
je
popf
xchg
jne
test
cltd
int3
fdivl
or
push
fdivrl
shrl
outsb
frstor
dec
inc
mov
add
aad
jg
xchg
dec
sbb
daa
cmp
pop
cmpsl
fs
movsl
dec
push
loop
repz
or
pop
dec
add
std
mov
or
mov
lcall
lret
jne
in
lcall
fwait
xchg
popa
clc
pop
lret
and
fidivl
dec
in
orl
xor
es
stos
loope
and
xchg
mov
jle
rcll
add
popf
cld
cmpsl
cmp
xchg
out
leave
test
xchg
xchg
ficoml
jno
or
jbe
jno
xchg
repz
lds
in
icebp
jge
cmpsb
add
mov
xor
sbbl
xchg
pop
and
mov
cltd
jo
cmp
adcb
cmpsb
lea
jne
popf
and
ja
lahf
mov
and
xor
ss
out
iret
push
insl
std
mov
xor
das
mov
jg
mov
xor
push
cmp
inc
in
stos
mov
movsl
fadds
jno
xchg
pop
jae
pop
mov
lahf
data16
rcrb
arpl
test
std
inc
sub
jns
data16
jle
push
rolb
popf
jnp
cmpsb
adc
inc
ljmp
sahf
adc
and
shrb
sahf
cmp
in
or
jno
bound
cmp
hlt
push
cli
roll
push
or
cmpsb
and
inc
cmp
xchg
pushf
lret
lret
pop
or
xchg
inc
inc
lods
movsl
fsubs
lahf
inc
mov
je
je
xor
push
or
mov
pop
xchg
in
aam
lea
push
nop
por
into
push
call
out
sahf
outsl
sbb
add
rcll
xchg
xor
nop
dec
aaa
push
or
js
cmpsb
cmp
lret
pop
repnz
aad
gs
dec
aaa
push
jge
mov
stos
push
insl
stos
loope,pt
divb
pop
and
mov
ljmp
push
jne
pushf
imul
mov
ljmp
out
cli
or
inc
loopne
and
jbe
test
aam
and
add
sub
jle
adc
sub
clc
pushf
subb
and
pop
movsl
sbb
aam
stos
sub
popa
test
je
stc
js
push
loop
mov
rorb
cmp
cwtl
icebp
push
xchg
inc
pop
push
movsb
addr16
dec
push
test
bound
aam
pop
fistpl
sub
jo
es
sub
cli
ss
push
stc
dec
repz
cmp
jo
inc
lcall
aam
cld
pop
sbb
mov
cmc
subb
fcmovb
leave
sub
int3
lret
or
mov
pop
movsl
xor
rcrb
pusha
int3
imul
outsb
sub
subl
inc
xchg
aam
add
adc
jle
sub
jns
dec
out
mov
add
nop
int3
outsl
out
adcb
hlt
mov
daa
sub
adc
dec
arpl
jecxz
mov
fistpll
sub
dec
mov
nop
mov
test
decl
in
fisubrl
sbb
adc
mov
mov
insb
add
ljmp
clc
dec
adc
pushf
sti
cmpl
dec
filds
movsb
data16
inc
pop
sbb
imul
stc
pop
out
xchg
pop
insb
testb
enter
lods
je
adc
push
andl
push
pusha
pushf
outsl
test
inc
negb
mov
mov
ret
js
repnz
xchg
sub
and
ret
hlt
xchg
sbb
mov
lock
sbb
inc
sub
aas
push
pop
insb
dec
pusha
scas
xchg
scas
lea
xchg
add
shll
push
cmpsb
mov
sub
jle
fldl
or
pusha
add
es
adcb
in
xorl
pop
adc
lods
inc
imul
cmpl
xchg
pop
repz
shll
ret
hlt
mov
xchg
adc
lods
loopne
cmpl
push
xor
stc
loop
xchg
fisubrs
imul
lret
movsl
xlat
out
popa
aad
xor
or
loopne
loop
insb
sbbl
stos
sub
loop
ds
add
cmp
dec
stos
xlat
push
or
mov
loopne
mov
pop
cmc
pusha
stos
ljmp
cmp
stos
imul
out
pop
loopne
mov
lock
jbe
sub
cwtl
das
arpl
stos
add
roll
dec
push
push
jnp
add
shlb
incl
pop
cmp
js
rcrl
les
insb
mov
subl
xor
dec
pushf
mov
cld
inc
rol
mov
pusha
fwait
xor
push
push
mov
jbe
adc
sbb
or
sub
addr16
jmp
cltd
jge
pop
sbb
dec
mov
mov
stos
insl
lea
shrb
pop
inc
sbb
xchg
popa
stos
mov
rcr
mov
jp
ljmp
adc
add
or
cmp
add
stos
cmc
pop
xor
xchg
testb
pop
push
out
sbb
repz
pop
lret
or
add
pop
loop
xchg
mov
iret
pop
fisttps
dec
data16
xor
shrb
jb
cmp
fisubl
pop
stos
add
mov
mov
fisubrs
adc
mov
mov
cmp
out
xor
loop
adc
iret
jae
repnz
jge
jno
lahf
sahf
push
pop
mov
adc
push
aam
shll
mov
shlb
inc
ror
jno
imull
mov
fsubrl
mov
sbbl
lret
shr
push
sub
fldcw
ja
add
ljmp
bound
cmc
loope
xor
arpl
mov
je
int3
fsubr
xchg
cmpsl
cmp
call
and
xchg
test
inc
xor
cwtl
inc
lret
xchg
or
cwtl
cmpsb
call
cmp
movsl
repnz
std
fldl
imul
cli
sbb
pop
xor
and
mov
insl
mov
cltd
or
fs
mov
cmp
arpl
into
pushf
xor
popa
daa
xchg
aas
aad
dec
call
cmp
jne
push
mov
or
xor
repnz
sbb
xchg
mov
fisubrl
in
push
ljmp
jno
jmp
jnp
push
jmp
cs
xchg
and
xchg
popa
leave
int
ss
inc
icebp
shl
ljmp
add
je
ret
dec
mov
out
sahf
jne
shrl
xchg
sbb
mov
push
fld
add
push
fs
movsl
xor
insl
test
add
sub
movsb
pop
inc
cmpsl
cmp
ja
je
jb
mov
dec
jns
loope
fcoml
dec
add
xor
add
xor
sub
xchg
addr16
dec
push
sub
sbb
scas
xchg
pop
push
mov
push
ret
or
sub
mov
mov
in
adc
sub
dec
frstor
push
loopne
xorb
push
aas
jae
or
pop
ja
xlat
mov
loopne
dec
fiadds
inc
jp
dec
xchg
test
mov
icebp
or
jo
jo
cmpsb
push
sub
inc
popf
xor
test
mov
push
push
pop
jmp
mov
test
inc
dec
pop
nop
jl
inc
sarl
jl
scas
call
pushf
pop
sahf
sub
lret
cs
lret
mov
and
push
into
sub
imul
fstps
std
xchg
lret
pusha
push
and
dec
std
pop
push
and
adcl
xchg
mov
jmp
or
inc
push
xchg
addr16
xor
popf
xor
cltd
mov
push
cwtl
pop
leave
arpl
stos
fmulp
imul
iret
push
insl
cli
mov
add
mov
jecxz
xlat
cmp
inc
rcrb
outsb
xchg
into
out
inc
cmp
jmp
sub
inc
cmp
lds
pop
rcrb
mov
push
aaa
pop
mov
adc
popf
xchg
into
sub
cmp
dec
jle
dec
mov
pusha
lds
sahf
xor
vmovupd
and
push
idivb
mov
std
dec
fimull
repz
std
xor
movsb
stc
adc
addr16
cli
pop
dec
and
inc
fidivs
popf
and
mov
pop
push
inc
cmp
cmp
mov
ficoml
nop
add
sbb
pusha
cli
mov
cld
imul
and
dec
cmp
fucomip
cmc
xchg
inc
imull
iret
xor
inc
test
je
mov
or
jp
jle
dec
xlat
pop
dec
insb
pop
sti
pop
mov
pusha
call
lods
xorl
stos
jle
push
in
outsl
lahf
or
xchg
xchg
daa
mov
pop
inc
and
xor
mov
inc
popa
clc
jbe
clc
jo
data16
mov
dec
xor
push
push
mov
mov
jge
inc
sahf
xchg
jns
int
outsb
pop
or
xchg
push
in
daa
lods
mov
adc
icebp
sub
mov
mov
xchg
dec
je
dec
add
sub
dec
jae
mov
mov
les
push
add
xor
jge
cmp
jp
mov
pop
inc
jbe
jae
fs
adc
mov
xchg
imul
aam
popf
mov
fldenv
and
rolb
adcb
mov
movsb
sbb
sarb
loop
dec
mov
shll
jmp
sub
and
sub
mov
dec
jge
mov
es
imul
dec
icebp
inc
inc
pop
out
pop
sub
stos
fimuls
aam
mov
pop
adc
sub
pop
mov
scas
dec
fbld
lods
test
sub
mov
popf
adc
inc
test
lods
push
mov
or
mov
jp
mov
fxam
enter
mov
fnstenv
repz
ss
pop
les
add
pop
pop
rorb
sub
pop
repnz
xlat
fildll
or
data16
mov
shrl
std
sbb
add
push
pop
sub
mov
dec
aam
mov
sub
push
add
push
je
jge
adc
mov
xor
pop
icebp
xlat
or
addr16
push
sti
neg
imul
clc
push
std
inc
jb
mov
loopne
or
xor
jl
xchg
dec
cs
cmp
lds
dec
jmp
in
sub
aam
sbb
hlt
jl
xorb
std
lods
push
das
ljmp
jbe
stos
cli
test
std
or
testb
enter
jmp
or
mov
inc
stos
push
mov
int
mov
jae
mov
sub
stos
js
es
lea
jae
dec
sub
pop
jl
out
andl
aas
lret
jbe
cmp
cld
fisubs
xchg
sub
add
inc
add
sub
shrb
dec
adc
cmp
cmp
popf
rcrl
adc
cltd
or
xchg
pop
incb
and
lret
push
adc
nop
pop
jae
fsts
ss
out
push
sbb
insl
enter
xor
dec
dec
iret
repz
push
stc
data16
fisubrs
repnz
sbb
inc
fsubr
cmp
jbe
and
cmpsl
push
scas
inc
dec
mov
sbb
imul
lcall
loop
nop
adc
int
cmp
js
jmp
ds
rorb
mov
nop
cmp
sbb
ljmp
sub
push
inc
test
adc
fdiv
push
sub
push
andb
jnp
cmp
daa
lcall
inc
pop
push
lea
scas
lods
pop
cs
fcoml
xchg
mov
cwtl
andb
outsl
jge
xor
jl
push
sub
push
mov
mov
mov
lods
sub
cmp
sbb
mov
mov
shr
data16
js
std
addr16
std
or
lahf
lret
loopne
add
lods
sub
mov
inc
movsb
ss
jg
loopne
push
sub
pop
xor
out
mov
sbb
rcll
sub
xlat
jae
les
cmp
jge
hlt
inc
inc
mov
stos
ds
adc
add
sbb
int3
xor
xor
cmp
mov
shr
mov
cmpsb
fimull
xor
sahf
pop
mov
bound
sub
sahf
cli
and
push
ds
ds
sahf
xlat
lock
add
push
in
or
pop
mov
inc
and
out
das
lcall
push
jae
jp
jae
ljmp
notb
cmpsl
imul
dec
in
inc
rcrb
shlb
ja
out
add
int
dec
xchg
aad
jmp
and
pushf
nop
icebp
adc
mov
in
cmp
sub
or
insl
ljmp
push
jmp
outsl
or
mov
cwtl
inc
lcall
scas
ficoml
roll
sbb
xor
dec
cmpsb
xchg
pop
outsb
lret
gs
notl
int
shr
jl
sbb
shlb
insb
xchg
mov
scas
in
inc
xchg
mov
subb
into
jg
imul
call
hlt
xor
outsl
addr16
sub
into
loop
sub
addr16
xor
mov
iret
addb
sbb
in
push
aam
mov
icebp
or
xlat
jge
xchg
xlat
mov
pop
add
mov
mov
loopne
fcompl
stos
sbb
sbb
ds
sub
fwait
orb
and
stc
lret
data16
rorb
mov
mov
in
cmp
fbstp
xchg
add
insb
mov
iret
lahf
add
mov
cmp
testl
pushf
aas
mov
insl
mov
and
mov
jne
push
cmpsl
inc
mov
mov
pop
test
arpl
je
fsubrs
clc
shlb
sub
subl
pushf
sti
push
dec
aad
rol
loopne
and
into
fidivrs
jb
cmc
lret
dec
and
in
shlb
xchg
jo
push
jne
push
std
packsswb
pop
les
dec
mov
jnp
sub
or
mov
push
in
sub
xchg
jae
fidivs
outsb
sbbb
push
or
sar
cmpsb
loopne
out
adc
mov
jle
enter
or
ret
repz
jne
adc
jle
jb
popa
ret
minps
fs
pop
mov
scas
add
or
add
je,pn
stos
inc
in
push
jae
repz
mov
aam
daa
idiv
inc
xlat
sbb
mov
sbb
imul
mov
and
outsb
pop
mov
int
cmc
pop
repz
mov
pop
sub
sbb
repz
lock
loopne
xchg
dec
or
lea
ss
sub
adc
inc
pushf
add
fs
xchg
popa
mov
xchg
add
jg
ds
sbb
and
aas
xor
imul
das
xchg
add
aaa
push
pop
mov
pushf
scas
dec
xchg
mov
ret
mov
les
and
ds
in
xor
dec
mov
andl
mov
pop
daa
mov
mov
ret
cwtl
mov
fcmove
ret
add
iret
mov
in
mov
in
push
and
lea
cmpsl
push
xor
in
in
xchg
movsl
cmpsl
jbe
or
xor
lahf
jno
xchg
fsubrs
fadd
fwait
popa
lods
xchg
in
ficoml
lods
mov
imull
pop
xor
out
ret
jnp
or
pushf
pop
iret
mov
stc
test
mov
pop
leave
mov
int
out
icebp
movsl
sub
push
imul
shl
lods
out
xchg
cmp
call
sbb
dec
into
test
mov
out
jge
mov
fcmovbe
les
xchg
pop
out
mov
outsb
lar
aas
cltd
sbb
addl
ret
sbbb
fisubs
daa
mov
dec
mov
inc
jnp
mov
xor
push
jno
xchg
pop
mov
pop
push
add
insl
popa
push
inc
xor
inc
in
les
in
addr16
mov
shll
ret
mov
js
popa
aas
iret
data16
cli
inc
addr16
push
cmp
stos
xchg
jp
adc
je
sub
and
mov
in
jecxz
xchg
daa
pop
call
idivl
out
js
adc
inc
popa
mov
jno
add
dec
xchg
mov
inc
jmp
xor
ljmp
call
test
icebp
loopne
mov
cltd
pop
push
dec
sarb
repnz
out
ss
mov
mov
imul
pop
jnp
push
insb
pushf
cmpsb
mov
popf
cs
ret
ret
sbb
push
inc
xchg
push
jle
adc
mov
lcall
ds
push
add
mov
push
idivb
outsb
pushf
aas
pop
ja
in
push
push
mov
jo
aas
ljmp
sahf
cmp
scas
cmp
lret
jno
notl
and
std
push
aas
mov
xchg
rcrb
rorl
int
dec
cmpsl
sub
push
scas
adc
xchg
push
daa
adc
lcall
lods
test
cmc
adc
cmp
mov
bound
ldmxcsr
iret
insl
lea
inc
leave
jo
push
inc
push
lret
add
xor
mov
xor
fnstenv
jb
mov
inc
inc
mov
cmp
stc
sub
jo
loop
adc
or
cmpxchg
vmovdqa
jl
iret
enter
mov
cli
mov
push
dec
and
fmull
fs
aaa
xchg
fimuls
xchg
or
xor
je
adc
repz
mov
mov
mov
shlb
xchg
dec
sahf
decb
shrb
into
gs
mov
push
cmp
cltd
xchg
add
xor
divl
push
mov
push
test
repnz
cmpsb
test
pop
out
cmpsl
fdivs
test
movsb
push
mov
xor
lods
jmp
fiaddl
mov
cld
or
aam
mov
test
int3
das
ret
or
inc
das
cltd
test
movl
icebp
mov
mov
rsqrtps
or
or
clc
dec
fldenv
mov
mov
mov
push
cmp
xchg
in
sahf
sbb
cmp
pop
pushf
int3
lea
add
mov
ljmp
data16
mov
dec
je
cli
xor
sbb
fadds
rol
repz
pop
jno
sub
lahf
sbb
js
or
daa
add
mov
mov
lods
fdiv
sarb
jo
shr
movb
jg
lcall
xor
jae
outsl
jno
adc
dec
ja
add
test
add
mov
pop
out
inc
ficoml
xor
shlb
popa
jl
or
cmp
ficoms
dec
ficoms
pop
out
mov
jl
mov
fxch
mov
insb
push
pop
xor
gs
fs
jnp
sub
xor
mov
ds
push
jno
jae
shlb
lret
push
aad
loop
pop
clc
fsub
movsb
or
sub
jo
stos
mov
insb
xor
pop
lcall
mov
mov
rolb
in
test
loopne
hlt
xchg
decl
mov
dec
inc
inc
mov
enter
jmp
jl
and
mov
into
gs
push
jmp
std
imul
data16
dec
mov
push
mov
jne
pop
out
mov
aam
cmp
fucomp
jb
jnp
fnstenv
mov
dec
jmp
sti
lock
mov
mov
push
insl
jmp
cld
xchg
lods
cwtl
divb
xchg
mov
dec
inc
cmp
xor
sub
add
mov
icebp
pop
ljmp
jno
jnp
add
jp
jne
adc
mov
loop
popf
or
nop
or
notl
mov
scas
shlb
mov
outsb
repz
xchg
mov
mov
jecxz
hlt
dec
add
sbb
sub
mov
icebp
roll
jge
clc
sub
mov
roll
mov
hlt
and
stos
int
fildll
jb
clc
pop
out
popa
sti
bnd
leave
lock
lcall
cltd
in
repz
call
jns
repz
mov
call
push
mov
push
fidivrl
repnz
push
sti
stos
popa
lahf
sbb
pop
pop
shrl
inc
cwtl
sub
add
fucom
stos
mov
fnstsw
mov
xchg
add
mov
xorl
mov
int3
shrb
or
inc
lods
imul
insb
call
xor
jne
shl
fsubl
dec
xchg
mov
andl
cmp
push
pop
div
dec
jb
jg
jge
push
pop
cmp
cmp
in
test
cmp
sub
pop
inc
xchg
cs
addr16
pop
pop
or
cmpsl
lea
pop
or
sub
cmpsb
jbe
in
sub
pop
lock
xor
imul
push
loope
aaa
jge
pop
scas
jle
add
mov
cmp
iret
or
js
xor
mov
hlt
cmpsb
loop
in
shll
lahf
stos
jae
lock
test
xor
je
inc
stc
mov
xor
dec
cmpsb
nop
lock
inc
arpl
out
dec
xchg
mov
pmulhuw
xchg
mov
and
mov
mov
push
es
lahf
add
jbe
or
jl
test
ret
and
ret
inc
lahf
pop
mov
addb
cmpsl
pop
loopne
ror
shlb
pop
out
pop
dec
icebp
into
out
gs
mov
adc
mov
push
in
mov
call
hlt
sahf
addr16
push
fsubrs
iret
mov
repnz
imul
pop
sub
ret
push
rorb
mov
sbb
xchg
jge
xchg
pusha
out
or
aas
fwait
adc
jbe
fbstp
popa
xchg
inc
popa
fistps
push
orl
jo
cmp
jne
cmp
ss
in
xor
or
add
ljmp
and
add
out
mov
clc
sbb
mov
dec
mov
mov
mov
aad
filds
inc
pop
cs
vhaddps
cmp
mov
xor
dec
adc
jg
and
cmpl
movsl
shrb
pop
stos
dec
add
mov
addb
fnstsw
inc
mov
int3
in
aaa
and
add
mov
xchg
cli
jbe,pn
popf
loop
lahf
addb
mov
xchg
test
and
xor
and
pop
jo
movsb
or
faddl
popf
mov
lods
das
mov
mov
mov
jp
aam
mov
or
xchg
xor
push
sub
bound
dec
add
js
push
and
popa
clc
sbb
ret
add
add
fsubr
add
cmp
and
psraw
das
mov
enter
push
mov
cmc
lret
insb
idivl
scas
add
dec
cmc
js
cmp
in
aad
aas
rclb
std
test
rcrb
inc
in
push
cmp
imulb
push
pop
mov
repz
xchg
sub
cmp
es
pop
dec
adc
jecxz
jnp
pop
repz
inc
xchg
xchg
xchg
xchg
jp
or
xor
imul
nop
filds
pop
xor
int3
shlb
pop
insb
lods
inc
sahf
scas
jp
ret
ds
bound
arpl
xorb
pop
es
add
pop
mov
pop
push
inc
xchg
imull
movsl
lock
cmc
cld
les
notb
std
adc
ja
sbb
cwtl
cmp
or
push
in
mov
nop
or
xor
adc
int3
mov
adc
pop
repnz
pop
mov
rorb
cmp
das
mov
mov
outsb
mov
dec
sbb
das
fs
mov
jg
stos
daa
das
cmp
adc
adc
pop
ss
into
loop
cwtl
lea
and
dec
shlb
scas
adc
dec
dec
mov
int3
xchg
movsb
mov
jae
ror
pop
push
and
cs
sbb
xchg
xor
scas
lds
mov
push
cltd
repz
jmp
pushf
divb
adc
push
xlat
repz
lret
xor
sub
je
shlb
fdivp
js
dec
aas
dec
pop
jno
jae
ja
cltd
lock
or
ja
cmp
aaa
adc
jmp
aas
rcl
xor
push
xor
mov
push
cmp
cs
scas
arpl
out
ret
sbb
pop
int3
pop
mov
mov
fsubrs
push
test
adc
stos
aad
dec
mov
or
inc
loope
cmp
mov
in
pop
or
iret
pop
mov
xchg
leave
dec
lret
out
sub
mov
cmp
andl
jnp
adc
mov
loopne
pop
les
fisttpl
or
dec
mov
cmp
cmp
pop
fimuls
shl
push
pop
loope
sbb
notb
cmc
mov
push
or
or
inc
push
inc
and
inc
xchg
hlt
lahf
jp
jbe
inc
test
in
jns
cld
outsl
rclb
cld
add
lret
sub
cltd
repz
or
add
sarl
ds
and
xchg
xor
add
push
or
xor
sbbl
imul
or
xor
hlt
addr16
mov
inc
movsb
fldcw
or
cmp
jo
jp
ja
or
sbb
movsl
movsl
lds
in
repnz
insl
inc
pop
xchg
lds
ljmp
testb
inc
mov
adc
lret
push
mov
cmp
movsb
jg
fistpll
xchg
sbb
outsb
bound
sbb
jnp
mov
push
or
push
sbb
push
or
push
mov
jnp
test
lock
stos
or
pop
mov
dec
loopne
pop
cmp
dec
fsubl
push
lods
jbe
fisubrs
mov
aas
cmp
mov
xor
mov
pushf
sub
push
xchg
and
test
into
mov
jbe
jo
sbb
xchg
scas
inc
push
sub
mov
pop
push
lret
mov
daa
sbb
std
jl
and
aam
xchg
or
out
mov
mov
jg
popf
subb
das
mov
idivb
xchg
sub
icebp
pop
mov
pop
pushf
or
jp
gs
pop
int3
sahf
js
test
jns
jecxz
mov
jmp
or
jp
push
lea
aad
lods
cmc
adc
cmpsl
pop
fs
in
fwait
mov
inc
push
addr16
sbb
movsb
sub
mov
push
mov
jnp
sub
xchg
pop
inc
mov
xlat
loope
roll
fistps
xor
movsb
inc
lcall
fisubl
sbb
sub
dec
js
notb
mov
push
add
fsubs
les
pop
in
aam
mov
into
push
mov
jae
mov
pop
cmp
scas
mov
cmp
outsl
jnp
push
pop
aad
adc
pop
pop
mov
sarb
and
xor
mov
arpl
loopne
push
push
jae
arpl
jb
xsha1
cmpsb
lea
push
mov
aad
les
inc
movsl
push
xchg
dec
pop
inc
jle
bound
mov
test
cmp
jae
es
pop
pop
or
inc
leave
icebp
repnz
pop
xlat
xchg
cmp
push
pop
adc
xchg
jmp
xchg
or
push
loope
or
dec
add
sub
jle
cmp
fcmovnb
test
test
leave
pop
dec
bnd
cwtl
cmc
inc
or
lcall
movsb
mov
cmp
rcll
fimull
jl
pop
fs
lretw
cmp
sbbb
pop
sub
lods
std
sbb
ds
test
or
or
mov
aas
das
fimuls
bound
adcl
fdivs
pop
scas
int
adc
lea
jns
mov
add
xchg
sub
and
mov
shld
outsb
ds
cs
popf
add
xchg
push
mov
pop
insl
pusha
out
les
cwtl
pop
or
add
or
addb
push
fwait
mov
addl
ja
enter
xchg
out
adc
cmp
mov
mov
insl
sbb
xor
push
pop
add
adc
sub
cmp
cmc
xchg
add
adc
in
xor
out
nop
add
cmp
mov
cwtl
cmpsl
cld
aam
fnstcw
push
into
or
add
stc
push
test
push
inc
sub
and
inc
cs
aam
test
or
mov
add
je
adc
paddsw
loope
sbb
jecxz
fmuls
xchg
push
jge
jne
mov
fmull
push
cltd
sub
rcrb
mov
loopne
outsb
xchg
xor
push
adc
sbb
lea
in
adc
test
je
cmp
lods
imul
iret
fisttpl
test
out
adc
xchg
dec
icebp
mov
mov
xchg
dec
sub
xchg
jmp
div
adc
jo
stc
pop
cmp
shll
mov
aam
testb
push
or
dec
jg
cmp
xor
nop
rcr
and
rol
test
loopne
outsl
prefetcht2
xchg
daa
push
add
push
loop
and
call
jle
pop
cli
andl
icebp
dec
dec
das
dec
sub
rcll
adc
gs
jecxz
jl
sbb
call
sbbb
imul
test
fistl
loopne
sbb
jb
jecxz
incl
stc
js
and
mov
lcall
fimuls
out
test
cld
jge
xor
pop
outsl
mov
idiv
and
incb
arpl
movb
lcall
cmpsb
cmp
cmpb
imul
jmp
stos
lret
out
cltd
test
push
adc
fldenv
mov
jb,pn
fmuls
cltd
out
sarl
iret
xchg
addb
inc
clc
bound
dec
xchg
or
mov
test
push
dec
js
pop
jmp
cltd
test
or
and
addr16
scas
mov
lcall
jbe
lcall
movsb
push
mov
insb
repz
sub
jmp
or
sti
repz
sbbb
insb
call
lcall
mov
pop
test
movsl
out
out
jg
and
out
insl
add
adc
push
ja
int3
mov
jns
mov
xor
xchg
xchg
xor
and
inc
int
and
js
cmp
repnz
dec
jno,pn
jb
inc
iret
fcompl
cltd
xchg
cmp
fcoms
incl
adc
lea
add
scas
bound
mov
cli
mov
mov
test
sub
lahf
or
inc
ljmp
call
cmpsl
cwtl
push
popf
lret
jns
sbb
leave
iret
xor
pop
mov
neg
mov
xchg
xchg
add
sbb
xor
std
jo
mov
cmp
push
jecxz
jbe
add
movsb
dec
xchg
xor
jl
sub
mov
iret
and
subl
lea
dec
dec
fistpll
into
cmp
cmp
and
sbb
int3
pop
daa
fdivrl
cmp
lahf
cmp
cmp
shl
jnp
add
inc
push
jmp
sbb
and
inc
jo
sub
or
cmp
and
loope
pop
jl
stos
gs
inc
jne
test
push
sub
dec
lods
mov
and
adc
mov
push
mov
xor
mov
mov
push
mov
insb
sub
adc
idivb
jmp
mov
jge
popa
cmp
pop
xchg
adc
adcl
push
scas
outsl
shrl
cmp
aad
add
xchg
add
mov
jo
inc
divl
adc
mov
filds
xlat
lods
inc
out
dec
sbbb
stos
movsl
sbb
sahf
add
dec
addr16
sub
std
lcall
dec
mov
ret
mov
das
lret
dec
xlat
mov
cltd
pop
mov
stos
adc
dec
fldenv
lds
repz
mov
sub
xchg
ficoms
in
xchg
dec
cmpsl
inc
cli
or
sarl
andb
jmp
stos
mov
mov
rol
ret
stos
out
lock
pop
in
imul
in
cmp
push
mov
shl
js
lods
test
inc
popf
enter
test
bound
repnz
mov
or
mov
shr
mov
dec
pop
xchg
shrl
ds
mov
cmp
push
lods
pop
cmp
nop
cltd
scas
xor
pushf
xchg
psrad
jno
push
dec
add
mov
sbb
lret
and
sub
pop
insl
dec
pop
pusha
jg
mov
or
andl
adc
sbb
ret
adc
insl
stc
fdivl
jne
ret
adc
sub
inc
loope
in
icebp
in
shrb
and
jmp
insl
jno
ss
popa
and
cmp
fs
push
insl
jge
push
mov
xchg
xor
ret
mov
sbb
mov
mov
cmp
adc
imul
fidivrl
dec
sub
inc
pop
stc
dec
addb
push
popf
dec
movsb
mov
jne
sysret
and
nop
daa
cmpb
inc
and
sti
pushf
xor
lret
inc
pop
int
pop
cmc
in
jle
dec
mov
jl
negl
xor
in
bound
push
in
test
mov
mov
nop
xchg
daa
mov
call
or
mov
lea
mov
int3
adc
cmpsb
jbe
jnp
cmp
add
add
adc
dec
cli
aaa
fcoms
mov
inc
push
push
jle
lea
push
pop
data16
das
stos
inc
popa
out
jmp
popf
or
jns
sbb
in
lods
fdivr
adc
insl
divb
cmc
push
adc
popa
repnz
popa
adc
xchg
sub
push
fcmovu
push
mov
pop
jp
ljmp
hlt
mov
pop
lahf
pop
fs
repnz
and
and
add
std
gs
pop
sub
in
jl
sahf
testl
lods
push
fisubs
ss
jge
mov
lahf
mov
mov
pop
outsl
mov
scas
xor
out
adc
daa
test
test
fidivl
mov
clc
or
pop
lock
int
mov
fists
dec
mov
outsb
jp
scas
call
rcrb
imul
sub
xchg
insl
sub
ret
xor
pop
hlt
test
nop
push
pusha
leave
jnp
lods
pop
call
iret
stc
scas
push
aam
add
mov
mov
add
pop
outsb
fsts
test
mov
xor
lret
xchg
sbbb
jo
aam
xor
testl
mov
inc
out
sub
inc
add
sahf
or
jge
jp
repnz
xchg
pop
loop
in
xchg
xchg
aaa
mov
stos
jle
repnz
adc
lahf
nop
or
loop
and
test
cld
mov
adcl
xchg
fdiv
lds
fdivp
add
adc
fnstcw
mov
fnstcw
loope
lds
adc
insl
into
adc
sbb
in
xor
mov
xor
fs
ror
test
mov
dec
dec
mov
lods
cmp
mov
sub
inc
lret
push
cld
or
and
cwtl
pop
xor
lret
cwtl
pop
hlt
lret
std
in
mov
popa
adc
in
add
subl
out
xor
inc
andb
push
and
fldenv
rcll
mov
adc
into
subb
inc
arpl
les
mov
out
add
shll
xchg
add
decb
mov
push
push
sahf
mov
xor
mov
fsubr
shll
jbe
jb
dec
xchg
fwait
rcrl
cmpl
mov
mov
fcoml
out
stos
push
fcoms
fwait
pop
lret
cmpl
movsb
shrl
scas
aas
mov
fdiv
pop
rcll
add
cmp
mov
or
fsubrs
imul
mov
pop
xchg
lock
mov
pop
repnz
add
jne
icebp
cmp
les
movsl
and
insb
xchg
xchg
pop
cmc
shrl
push
or
or
mov
dec
sbb
movsl
mov
push
sub
adc
in
push
aad
repnz
loope
adc
inc
into
das
lods
ret
pushf
outsl
sbb
movsb
mov
iret
sub
adc
fimuls
add
cltd
jge
icebp
mov
jne
shlb
pop
es
mov
frstor
or
xlat
shl
adc
loopne
inc
lahf
inc
enter
cmp
aas
jb
xchg
mov
shll
fnstcw
push
jno
push
mov
pop
repz
lds
popf
call
stos
mov
or
imul
out
dec
lahf
and
mov
shll
push
out
adc
sbb
sarl
push
add
rcrb
lahf
mov
dec
dec
mov
cmp
dec
mov
xchg
dec
dec
lahf
in
sub
in
negb
cs
loopne
dec
hlt
mov
and
push
sti
add
push
inc
jne
pop
iret
scas
and
adcb
shrl
adc
xlat
movsb
aam
jge
cmp
lea
mov
dec
pusha
xchg
or
shrb
and
fldt
rcrl
loop
fwait
testb
xor
pop
fimull
lret
mov
in
sbb
mov
negl
push
inc
sbb
inc
jecxz
push
add
aam
jge
divb
lcall
xchg
adc
and
push
pusha
sub
pop
or
sbb
icebp
fdivl
js
lar
or
xor
inc
sahf
cmp
and
cs
dec
mov
dec
xchg
push
stos
loop
insl
pop
jne
xor
test
test
dec
sbb
cmpsl
and
inc
push
pop
std
inc
lods
xor
sti
pop
mov
sbb
gs
das
addr16
add
lcall
bound
pop
das
fildl
cmp
jle
jno
mov
call
jno
leave
fnstenv
inc
jl
mov
push
adcb
cmc
mov
jns
pop
cmp
fldl
imul
add
push
inc
xor
mov
sbb
addr16
rolb
lcall
insb
lods
or
push
and
pushf
clc
std
js
mov
sahf
pusha
xchg
add
fistpl
add
or
fcmovbe
enter
lahf
lea
xor
outsl
outsb
mov
loopne
cmp
jbe
jne
pop
bound
pusha
xor
push
lods
xlat
fidivrs
push
out
into
xchg
ret
sbb
inc
xor
xchg
bound
add
cmc
mov
sub
rolb
popf
ja
jae
sub
push
mov
pop
out
fcmovu
hlt
rcl
repnz
clc
mov
adc
imul
jmp
scas
aas
push
pop
fbstp
sti
fists
add
lret
pop
cli
outsb
dec
ret
outsl
imul
fwait
cld
jg
jns
sahf
sbb
outsl
inc
dec
lock
xchg
hlt
jge
hlt
dec
sub
pop
out
push
adc
mov
cmp
mov
sbb
lods
xorl
lock
lea
imul
dec
or
shll
rcrl
inc
mov
stos
or
pop
sub
test
sub
inc
inc
std
mov
rol
loopne
mov
mov
rcrl
js
sub
sarl
mov
inc
stos
cmp
js
xor
pop
imul
sarb
mov
insl
mov
clc
cmpsl
std
mov
mov
icebp
out
arpl
inc
fs
fadd
jecxz
jnp
sbb
jae
lcall
jmp
or
stos
push
mov
loope
dec
mov
xlat
cmp
imulb
fdivr
xchg
stc
fisttpl
xlat
cmp
insb
mov
sub
xchg
aaa
dec
int3
jns
adc
pop
and
cmp
scas
pop
mov
push
xchg
jno
je
ljmp
xor
push
imul
cmpsb
jne
and
loopne
xor
rep
push
add
push
xchg
jle
bound
sbbl
out
push
xor
gs
daa
fmuls
leave
pop
frstor
xchg
add
insl
push
pop
push
sbbl
inc
popa
sbb
pop
pop
ljmp
insb
lds
xor
mov
lret
pop
stos
sbb
repnz
out
aam
xchg
add
les
popf
cmpsb
mov
std
dec
leave
push
js
push
icebp
int3
adc
adc
push
fcomps
jge
adc
testb
ds
cs
mov
push
mov
pop
int
je
adc
pop
and
cmc
scas
fidivl
jle
dec
shll
iret
int
adc
mov
cmpsl
mov
mov
cmp
enter
pop
xchg
and
aad
adc
push
add
adc
hlt
jl
sarl
inc
mov
popa
push
push
pop
inc
push
push
and
xchg
repz
clc
stc
dec
cmp
scas
inc
sbb
inc
test
ljmp
mov
pop
sub
mov
pop
lock
mov
inc
or
xor
stos
enter
mov
mov
loope
mov
or
push
and
cmpsl
dec
enter
or
xchg
adc
fildl
imul
sti
lcall
test
adc
xchg
sbb
repz
ja
pop
hlt
mov
or
pop
in
push
es
mov
test
mov
adc
popf
inc
call
scas
mov
add
pop
mov
pop
cmpsb
bound
lahf
xchg
mov
stc
push
lea
daa
jle
and
xor
movsl
das
shl
xor
push
ljmp
stc
pop
into
cld
and
test
int
sbb
idivb
jp
cs
fidivs
inc
inc
mov
push
jle
arpl
jb
jle
dec
xchg
and
test
popf
jnp
mov
or
push
or
nop
mov
mov
leave
jecxz
hlt
imul
daa
ret
orl
lcall
add
scas
adc
rorb
cwtl
mov
inc
data16
pop
insb
mov
mov
sub
int3
inc
mov
into
or
adc
push
jg
mov
je
xor
movsb
inc
ss
gs
aaa
dec
pop
insl
xchg
insl
pop
pop
inc
fwait
or
dec
lock
push
inc
js
or
dec
movsl
cmp
les
adcb
rcll
je
sahf
xchg
pushf
pop
xchg
fs
mov
aaa
mov
jnp
insb
addl
test
or
pop
nop
or
daa
add
push
or
mov
pusha
mov
stos
mov
out
jo
mov
jg
ja
sub
cs
xor
data16
push
jp
xchg
mov
cs
or
inc
jge
xchg
scas
mov
andb
cltd
mov
ss
stos
repnz
pop
insb
mov
or
hlt
jnp
sbb
mov
jl
in
mov
add
mov
mov
jb
push
ficoml
inc
sti
push
js
and
int
mov
stos
inc
mov
jnp
or
dec
test
xor
fs
data16
cwtl
rorb
adc
addb
mov
hlt
test
pushf
ret
fcmovbe
and
fidivl
in
mov
and
jmp
pop
xor
mov
sbb
cltd
test
fdivr
dec
rdtsc
enter
dec
push
xor
cmpsl
add
cmp
xor
adc
push
test
cmp
adc
int3
popa
out
cwtl
fldenv
nop
xchg
push
cs
mov
pop
out
notl
sub
fnstsw
jmp
mov
loop
ret
push
imul
fildll
das
adc
sbb
mov
sbb
dec
mov
or
jmp
jg
cli
gs
js
sbb
ret
mov
fimull
and
xchg
into
sbb
loop
out
jmp
add
mov
rcrl
mov
hlt
push
jle
xchg
in
sbb
sbb
mov
imul
rolb
and
lret
mov
jbe
jbe
push
cwtl
out
cmp
shr
dec
mov
add
xor
jge
stos
dec
movups
or
inc
sti
push
mov
fimull
or
test
mov
adc
ds
popa
mov
cmp
mov
stc
jl
sbb
in
leave
mov
dec
adc
cmpsl
shlb
or
pop
jge
fsubrs
sbb
lds
lcall
xchg
cmp
pop
lret
divl
mov
dec
mov
xchg
sub
jl
stos
popa
adc
aaa
daa
mov
stos
lods
mov
leave
fldt
test
out
adc
sbb
add
fistps
rcrl
int3
xchg
aam
inc
pushf
scas
loope
into
sbb
jae
cmp
out
mov
test
mov
dec
jecxz
les
pushf
mov
lret
stos
xchg
xor
cmp
inc
push
jmp
jno
fnstenv
lods
neg
andl
inc
push
and
adc
and
jp
sbb
test
and
in
and
dec
push
or
hlt
or
pop
movsl
mov
and
sbb
lea
push
in
inc
scas
sub
jae
dec
xor
and
fiaddl
dec
divb
cmpl
inc
fstpt
repnz
rolb
mov
add
pop
movsb
ja
xor
inc
gs
cmp
scas
inc
aad
jecxz
sub
iret
mov
xorb
sub
lods
popf
sbb
xchg
hlt
leave
mov
gs
jbe
dec
add
daa
shl
leave
xlat
xor
dec
inc
les
or
or
sbb
xor
lea
popf
push
adcb
push
sbb
xor
lds
adc
sub
inc
jno
pop
loop
jge
sahf
dec
mov
js
stc
jmp
daa
iret
add
jb
xor
jae
or
push
dec
xchg
jne
add
mov
adc
ds
sbb
add
sarl
nop
add
lds
xchg
xchg
dec
dec
pop
and
les
vpmaddwd
mov
add
lods
shlb
jo
sub
jle
inc
cmp
ret
clc
cmp
cmp
cmp
push
jae
movsb
sbb
aam
imul
lods
xchg
dec
movsl
sbbl
and
cld
lods
leave
jecxz
sbb
stos
add
sbb
nop
push
gs
sbb
fs
and
xchg
pop
aaa
mov
lcall
mov
xor
push
aas
and
inc
xor
mov
or
aas
int
sbb
pop
xor
push
and
xchg
das
cltd
fiadds
cltd
inc
mov
movb
mov
cmp
pop
xchg
pop
add
pop
pop
push
outsb
xchg
adc
dec
cld
adc
mov
mov
je
sbb
and
mov
outsl
incb
cmpsl
jno
jno
adc
test
in
sub
add
and
stc
dec
inc
aad
ljmp
bound
vpshufhw
jmp
sti
inc
cmp
sub
lret
fmull
mov
loopne
jns
mov
shrb
or
scas
jge
in
adcl
loop
insb
dec
arpl
dec
iret
push
in
sti
stc
add
inc
fs
clc
adc
sub
lret
lret
jg
inc
and
sti
pop
pop
mov
push
lahf
test
dec
les
adc
mov
sub
outsl
dec
nop
scas
call
cmpsl
insb
sahf
push
inc
inc
xchg
xor
int3
outsl
jns
inc
push
sbb
xor
pop
out
rcrl
fnstsw
mov
adc
lock
sbbb
vaddpd
dec
mov
loope
add
repz
push
cmp
nop
fisubs
movsb
adcb
lret
lods
cmp
mov
icebp
mov
mov
and
int
push
or
push
sub
popf
mov
push
xchg
dec
cli
jne
cmp
in
test
mov
fidivs
scas
lods
and
scas
lods
rcr
mov
imul
mov
jg
jecxz
out
xchg
jnp
dec
int
pop
fsubs
dec
or
je
mov
add
xchg
cmpsl
notb
int3
mov
cmp
jne
pop
aaa
and
stos
repnz
std
arpl
lret
hlt
xor
mov
sbbb
das
jmp
xchg
mov
sub
or
les
pop
ficoml
push
loope
fs
test
nop
pop
adc
cmp
pop
xchg
pop
rcrb
out
pusha
fistps
insl
mov
lock
mov
js
xor
insb
add
repnz
movsl
sbb
ret
out
sub
lret
mov
cmpsl
int
mov
and
mov
shrl
cwtl
mov
outsl
mov
sub
mov
add
pop
fdivp
sbb
jno
push
cmp
xchg
jge
aam
cs
mov
test
in
jns
aaa
dec
fiaddl
cmc
ljmp
xor
jns
adc
xor
push
pop
icebp
addb
xor
dec
xchg
cmpsl
insl
jge
mov
xor
adc
dec
rcrl
push
and
cmp
pop
fnstsw
fbstp
inc
data16
sbb
jge
inc
dec
lds
ret
dec
shll
rcr
jmp
inc
xchg
push
movsb
cmp
inc
shlb
jp
cmp
push
fcos
or
or
and
dec
fists
mov
mov
lahf
sbb
pop
adc
testb
fcoml
dec
adc
outsb
pushf
or
xchg
repnz
aad
fcomps
repz
adc
mov
nop
jne
cmp
aam
pop
sbb
xor
test
xlat
ljmp
sahf
sub
xor
fwait
add
mov
inc
data16
cmp
mov
sbb
adc
arpl
roll
mov
pushf
inc
push
js
aaa
and
lea
scas
clc
scas
test
loope
pop
mov
in
lret
loop
loop
aad
shll
imul
aad
in
stos
xlat
sub
fwait
andb
cmp
mov
jp,pt
nop
cs
test
sbb
pusha
pop
mov
cltd
mov
and
movsl
pop
mov
dec
lock
sub
loopne
xchg
xchg
stos
iret
cmp
mov
mov
mov
push
ljmp
icebp
gs
pop
cmp
adc
or
push
pop
fstpt
jns
ds
cmp
mov
mov
gs
fmul
mov
xor
cmp
cmpsl
jns
cmp
cmpsb
mov
xor
loope
mov
scas
cld
push
or
sarb
adc
inc
add
cmpsl
xlat
mov
aad
stos
mov
pop
adc
or
dec
gs
and
insb
pop
fiadds
mov
add
aam
mov
out
mov
jl
pop
sub
or
xor
cwtl
mov
jmp
mov
sub
test
pop
shl
cmp
cs
clc
mov
cmp
aas
pop
dec
push
xchg
dec
dec
sahf
lret
sub
dec
dec
lret
arpl
ljmp
outsl
mov
xchg
add
jb
mov
nop
call
cs
adc
sarb
lods
pop
mov
xor
jge
jnp
xor
outsl
aaa
pop
ret
loopne
lret
daa
roll
stos
sub
mov
rcrl
test
or
ja
js
shlb
pop
mov
iret
cmpsl
mov
cs
repnz
xor
fxam
pop
fldenv
inc
push
pusha
lds
fidivl
aad
repz
inc
push
iret
mov
int3
mov
out
cmpb
stos
test
fcoms
jg
jae
iret
and
add
mov
loope
mov
xlat
ss
mov
sbbb
arpl
sbb
ret
inc
fnsave
je
pop
mov
dec
test
fnstcw
push
dec
xor
mov
and
dec
or
mov
xor
movsb
roll
xorl
test
in
push
js
addl
cltd
mov
scas
inc
xchg
rorb
mov
test
aad
mov
imull
into
add
mov
xor
ljmp
sbb
test
mov
adc
xor
jo
cmpsl
mov
jg
mov
push
mov
inc
fnstenv
fsubrs
dec
dec
dec
in
aaa
outsb
xchg
test
popa
movsb
add
push
push
imul
pop
scas
out
xor
mov
mov
jno
fnsave
adc
ret
jge
lds
enter
sbb
sub
push
imul
push
add
mov
cmp
enter
shl
data16
mov
dec
in
or
mov
mov
lods
inc
pop
out
cmpsb
push
jbe
mov
stos
and
add
lds
call
push
test
cmp
jl
inc
add
lods
mov
test
hlt
outsl
add
pop
pop
lea
test
adc
lds
clc
popf
test
aad
xchg
pop
addb
movsb
iret
movsl
in
ret
xchg
std
or
aas
sbb
mov
cmp
adc
or
sahf
adc
mov
int
inc
aas
add
or
cli
xchg
jl
push
imul
push
push
lods
es
stc
pop
repnz
push
lret
sbb
fucomp
jbe
or
fwait
inc
fstpl
push
mov
lahf
rep
push
stos
jg
sahf
mov
sbb
and
push
jns
or
fsts
xor
out
loope
dec
fwait
insb
repnz
icebp
insb
jmp
jmp
add
adc
or
in
scas
xor
pop
add
arpl
push
nop
pop
punpckhwd
mov
inc
js
fildll
rcrl
je
push
and
into
cwtl
scas
or
jp
rclb
jo
repnz
jae
push
xlat
hlt
xchg
aas
mov
jnp
cmpsl
push
arpl
fmul
dec
sbb
push
test
in
cmc
cs
push
adc
or
iret
push
sub
inc
in
idivl
in
pop
movsb
mov
shr
std
ja
lods
xchg
cli
inc
add
or
jp
mov
jo
xor
out
fistpl
sub
leave
fwait
inc
inc
push
fldenv
adc
or
shlb
add
add
adc
inc
sbb
loop
mov
outsb
mov
pop
insl
adc
dec
cld
lock
xor
lret
pop
popf
jb
mov
xor
add
mov
lahf
fstpl
mov
inc
in
lret
and
data16
mov
push
sarl
shld
and
mov
jl
loope
aaa
push
idivb
mov
cmp
cld
mov
imull
adc
les
adc
sub
jp
notl
jb,pt
loop
nop
dec
and
movsl
jp
outsb
fldt
or
jns
mov
es
push
scas
out
jno
mov
aaa
add
cld
in
es
xor
mov
push
mov
out
adc
fnstenv
cmp
testl
popf
add
adc
xor
xchg
insl
adc
test
lret
hlt
leave
jg
das
subb
inc
fisttpl
dec
loop
adc
subb
pop
ror
push
cmpsl
pop
loopne
into
jns
faddp
lock
xchg
inc
pop
cmpsl
in
bound
iret
test
hlt
lcall
loope
mov
push
jge
mov
into
gs
mov
add
test
adc
lds
cld
xor
aam
and
je
or
mov
sub
test
jae
jle
adc
sub
clc
pop
push
pop
jmp
jno
and
out
outsb
aaa
dec
stos
cmp
in
les
jl
xchg
cmp
aaa
negl
inc
xor
pop
add
mov
xchg
fbstp
add
stos
cmp
cmp
sets
cmp
push
mov
test
fucomip
dec
xchg
xchg
clc
in
inc
test
pop
mov
fsubrl
xchg
mov
pop
ret
addl
loop
mov
flds
dec
dec
cltd
jge
dec
in
xchg
mov
cmp
adc
push
hlt
mov
clc
xchg
xor
sub
loopne
out
movl
jbe
scas
xor
xchg
jge
pusha
push
mov
inc
xor
pop
dec
adc
in
xor
lea
lods
jmp
mov
xchg
popf
jl
outsl
add
aas
insl
iret
inc
fcmovb
or
ss
dec
int
mov
mov
sbb
mov
loop
cmpsb
aad
and
test
pavgb
leave
dec
std
push
or
sub
xchg
out
ds
cltd
pop
test
and
int
and
mov
test
pushf
imul
ds
add
dec
repnz
aas
mov
shll
mov
sub
sub
dec
add
adc
ds
mov
iret
fucomp
popa
pop
push
jne
xchg
das
inc
mov
add
push
rcl
jbe
jnp
and
mov
adc
mov
inc
shr
jbe
pop
ljmp
lock
repnz
xchg
xlat
stos
xchg
jb
lret
jp
add
push
and
int3
int
icebp
repz
dec
dec
xor
mov
mov
and
sub
repz
push
outsl
js
fcmove
inc
lcall
in
in
test
xchg
or
mov
rcrl
add
popf
or
and
fmuls
loopne
inc
push
outsb
int
push
scas
sub
lret
adc
andb
shlb
mov
inc
sbb
cmp
or
pop
in
jecxz
and
rorb
movsb
stc
xor
ror
hlt
push
inc
push
ret
nop
lcall
out
shll
inc
push
add
test
adc
fisubrs
cwtl
aam
lods
sbb
push
int
negb
jo
cltd
jl
or
dec
xchg
inc
xchg
xor
lcall
insb
xchg
insl
frstor
pop
shrb
add
cmp
rcl
test
mov
rclb
loop
rorb
lahf
xor
inc
data16
fsave
sub
sub
cmp
rcll
sub
adcb
or
ret
add
push
test
adc
mov
or
inc
in
fs
push
rorl
xchg
dec
and
ret
jp
daa
ret
mov
lods
jp
into
push
and
in
dec
ds
ja
into
jns
sbb
ret
mov
sub
pop
push
cmp
je
shlb
push
fildll
aas
pop
cmpsl
sbb
mov
hlt
fldl
mov
shll
push
dec
dec
push
xchg
ret
scas
mov
cmp
scas
push
int
pmuludq
mov
pop
sbb
adc
in
and
adc
aas
lods
sbb
push
aaa
jbe
sub
jg
inc
fcomps
jnp
in
outsl
negl
xor
cli
test
daa
outsl
push
sahf
in
xchg
cmc
pop
test
data16
and
inc
cmc
push
mulb
sbb
pop
sahf
cs
fwait
js
cmp
xlat
frstpm(287
fisubl
ds
das
stos
xor
cmp
dec
mov
jo
lret
push
enter
jmp
pop
fidivrl
xchg
jp
mov
cld
ljmp
cmpsb
inc
rcr
push
inc
aam
aaa
xchg
add
icebp
dec
lahf
push
mov
lods
int
sbb
mov
imul
loopne
stos
test
shrl
int3
inc
ja
adcl
xchg
ljmp
xor
dec
xor
les
mov
add
jns
fnstenv
shlb
jo
xor
or
jnp
xlat
test
mov
push
or
test
add
inc
add
pop
adc
xchg
adc
in
loope
xchg
sub
cmp
mov
and
scas
dec
inc
mov
aaa
leave
sbb
jbe
inc
lods
call
sub
jb
push
dec
mov
and
nop
push
lahf
mov
mov
jno
loopne
push
cld
cwtl
mov
sbb
rol
push
hlt
pop
mov
movsb
cmp
jne
out
shrb
cltd
or
cmp
push
add
loop
rorl
xchg
insb
jp
sub
sbb
loopne
mov
in
add
dec
xchg
xor
test
sub
sar
xchg
add
lcall
mov
ja
jmp
or
cmpsl
xor
pop
cmp
push
ret
xlat
lret
pop
repz
and
scas
into
cmp
cli
cld
stos
fsubrs
push
pop
mov
lret
adc
xor
cmp
dec
movups
and
ds
ret
or
scas
in
dec
imul
sbb
pop
sub
dec
cmpsb
sti
cld
mov
test
aam
test
movsl
mov
dec
insl
orl
push
sbb
cmpl
mov
into
fdivl
ja
lcall
jbe
loopne
jecxz
cwtl
add
dec
add
and
cmp
xchg
jl
pop
scas
mov
iret
lock
add
jbe
lods
les
out
gs
xor
test
daa
and
in
xchg
out
xchg
sbb
nop
loopne
stc
dec
std
or
xchg
cwtl
dec
push
repz
fistpll
and
and
push
or
je
fnstcw
cmp
icebp
sbb
leave
divl
lret
clc
arpl
out
filds
shll
stos
sarb
lret
add
xor
cmp
aaa
mov
fxtract
in
sti
push
xchg
lods
icebp
sbb
jnp
test
xchg
shll
dec
ds
pop
repz
or
jbe
adc
dec
ja
mov
lret
dec
pop
out
sbb
push
inc
testl
in
pop
mov
dec
mov
icebp
mov
push
lcall
inc
out
mov
inc
sar
pop
dec
and
xor
fcoml
clc
mov
gs
push
in
adc
ret
dec
divl
sub
scas
xchg
mov
fwait
jb
inc
xchg
xor
add
jnp
adc
pop
lock
arpl
outsb
fbld
sub
pop
or
pop
repz
stos
in
xor
popa
xor
lcall
les
insl
fwait
das
push
icebp
fwait
push
mov
aaa
les
cmp
or
pop
lock
aaa
xchg
out
xchg
push
cmpsl
mov
mov
repz
imul
iret
push
or
lret
ljmp
dec
push
rcl
jo
repnz
sub
aas
call
push
jb
mov
into
lods
pop
rolb
push
push
fs
xchg
pop
mov
mov
jb
mov
push
jnp
loopne
cmpsb
lock
dec
or
icebp
xchg
ss
in
in
arpl
xchg
sbbl
mov
mov
dec
adc
lcall
loope
sbb
mov
push
xor
jne
adc
adc
mov
lods
mov
jnp
in
nop
in
mov
adc
repz
lret
and
dec
push
mov
shll
add
mov
cltd
dec
int3
in
xor
or
sub
mov
push
xorb
loope
push
lea
jb
movsl
out
mov
lahf
xor
pop
pop
les
loope
mov
push
and
insl
and
pop
mov
push
stos
and
push
mov
fidivrl
movsl
leave
lret
icebp
and
jp
repnz
pop
imul
pushf
add
scas
hlt
dec
push
and
adc
fs
push
sub
repz
gs
mov
lods
repnz
add
loop
mov
movsb
call
lcall
xchg
insl
cld
xor
or
stos
dec
lods
push
pushf
stos
js
daa
lcall
inc
es
sbb
ret
dec
push
icebp
cld
or
mov
mov
mov
or
xor
call
pop
std
aaa
xchg
jne
and
ret
stc
sbb
iret
xchg
outsb
xor
push
push
mov
pop
push
sub
mov
nop
jl
imul
sbb
add
cmpsb
xchg
add
mov
fnstsw
fcmovne
push
xor
sbb
add
sahf
add
movsl
jmp
and
pop
mov
fisubrl
lahf
pop
jb
inc
in
push
loope
inc
mov
dec
mov
push
sub
pop
inc
sub
mov
and
cmpsb
inc
call
hlt
pop
cmc
test
mov
out
andb
arpl
jge
sub
jmp
adcl
adc
xor
scas
mov
push
xlat
mov
pop
mov
mov
xor
les
testl
loop
xchg
xor
jmp
add
std
pop
std
cld
inc
test
fucomi
jl
or
sub
into
addr16
outsl
add
mov
add
cmp
dec
jl
stos
mov
push
mov
pushf
mov
ret
and
jecxz
mov
pop
jmp
icebp
movsl
nop
aas
and
test
insb
xor
cmp
ret
push
sub
or
mov
pop
cmp
andl
sub
js
mov
add
jae
xchg
and
add
jecxz
aas
push
dec
dec
cmp
notb
cmp
cmpsl
in
push
dec
dec
popa
pop
and
push
inc
cmp
scas
aaa
and
dec
loop
imul
ds
adc
mov
ret
xor
mov
sti
or
lcall
dec
das
ret
mov
jp
pop
lods
adc
fadd
scas
shll
jb
popa
in
ret
test
or
mov
jmp
sti
fwait
arpl
in
mov
cmp
xchg
sub
insl
sarl
push
lret
bound
mov
push
in
jmp
pop
scas
out
fnstcw
nop
es
push
aas
icebp
ficoms
jo
adc
addr16
jge
lds
push
pop
imul
xchg
add
loop
popf
jp
mov
cmc
sub
outsb
or
mov
mov
es
add
xor
dec
repnz
mov
jo
sahf
jmp
xlat
jg
push
aad
outsl
pop
insl
ret
xchg
stos
clc
adcb
push
cmpl
inc
xchg
mov
inc
adc
and
cli
adc
jl
sbb
out
jo
jle
mov
adc
stos
or
shll
jnp
jnp
std
fidivrl
clc
lret
cmp
dec
pop
je
xchg
xor
push
xchg
cli
stos
jecxz
data16
xor
jge
pusha
shrl
or
inc
pop
es
pop
xor
lret
loope
sub
adc
jle
rcrl
push
mov
idivl
fs
mov
jns
xor
mov
mov
ret
pop
lods
jnp
lret
adc
loopne
fdivrs
push
or
dec
dec
pop
sbb
cmp
data16
fwait
add
jo
xchg
jg
xchg
and
jl
test
rolb
xchg
dec
jmp
cmp
enter
fdivp
pop
jo
inc
loope
jp
aaa
inc
fwait
mov
and
mov
mov
add
sbb
sar
std
jo
lahf
pop
out
and
or
jp
addr16
and
imul
subb
sbbl
xchg
mov
add
arpl
adc
fstps
sahf
and
pop
mov
dec
jecxz
jb
sbbl
lea
xor
adc
xchg
cmpsb
aad
pop
mov
lret
in
lds
adc
fsub
sub
xchg
outsb
fxch
sti
andl
iret
lcall
call
mov
jne
jge
push
push
fbld
mov
inc
mov
inc
shrb
add
push
cltd
mov
popf
mov
into
loopne
call
mov
jns
mov
lret
repz
jmp
sub
cltd
cwtl
call
adc
aaa
shlb
push
cld
pop
fdivl
or
lods
jmp
cmpsl
insb
popf
stc
aas
outsl
push
inc
push
loop
and
sbb
lea
push
test
neg
adc
loopne
inc
sbb
push
pushl
out
fnstcw
int3
and
push
cmp
lcall
dec
adc
add
vmovupd
test
movsl
ds
sbb
aas
fists
mov
flds
popa
clc
add
pop
cmc
mov
xchg
mov
cmpsb
leave
sbb
rorl
jo
pand
lret
sbb
push
pusha
insl
push
test
sbb
popf
bound
push
mov
jbe
push
sahf
pop
shlb
cwtl
ret
aam
mov
fidivs
imul
pop
xchg
jecxz
add
sbb
push
popf
bound
xlat
outsb
xor
and
fistl
dec
loope
or
sbbl
xchg
loop
or
jns
sbb
push
leave
test
and
movsb
ret
in
mov
xchg
sub
mov
push
mov
ret
stc
rorl
xchg
iret
push
add
addr16
mov
mov
scas
fstl
fisubl
sub
mov
in
scas
lcall
lock
imul
int3
dec
pop
bnd
call
dec
dec
stos
mov
lcall
mulb
setle
test
ret
cltd
xchg
jne
iret
mov
out
lock
push
sub
inc
repz
pop
xlat
fadd
jbe
imul
cmp
push
out
xchg
push
lods
adc
repz
sub
lahf
mov
daa
ds
dec
inc
mov
xchg
dec
ljmp
mov
push
add
sub
or
addr16
or
jge
mov
mov
out
xchg
push
rcrb
sub
sub
ds
or
aas
pop
jb
pop
notl
jne
pushf
xor
stc
mov
mov
or
push
cmp
in
nop
xor
pop
push
adc
dec
fwait
xor
lret
jb
repz
shl
scas
test
daa
pop
cltd
adc
or
lea
dec
fists
loopne
dec
ds
jecxz
insb
inc
test
push
dec
sub
ret
push
stos
add
lret
loop
lods
pop
lcall
ja
lcall
fs
movsb
pop
lock
and
or
cmpsl
jae
pop
and
mov
jp
stos
xchg
cmovnp
pop
jecxz
dec
mov
jmp
xor
lcall
sub
dec
aas
dec
jl
cltd
sbb
hlt
cmp
sub
push
cmc
pop
xor
pop
gs
push
cmp
loopne
mov
loop
aad
mov
pop
jg
in
mov
ret
leave
aam
pop
enter
daa
ficomps
es
xchg
jecxz
ret
jbe
shrb
enter
in
mov
mov
cmp
jecxz
pop
ficompl
xor
movsb
jge
sub
ret
mov
and
jne
lock
outsb
jo
fidivl
or
cmc
inc
pop
sub
mov
xor
sub
loopne
jle
cmc
push
pop
lds
das
or
adc
push
popf
insl
xchg
fwait
sbbb
bnd
adc
subl
mov
shll
pop
insb
sub
cmpsl
decb
inc
call
aad
ljmp
mov
mov
lret
adc
sub
hlt
mov
hlt
aas
adc
call
mov
clc
cmp
sub
fdivs
jns
stc
std
cmp
addr16
lock
popf
mov
pop
mov
xchg
jbe
cmp
pop
and
out
pusha
add
sub
pop
dec
cmp
pop
lret
add
mov
je
jnp
cli
xor
or
loopne
in
clc
or
add
mov
add
repnz
imul
xor
xchg
test
xchg
addr16
lock
or
adc
test
rorb
dec
lret
pop
jo
dec
cmp
shl
mov
jo
xor
push
fxch
pop
in
lea
inc
loope
test
mov
or
push
mov
aam
repnz
fisttpl
add
test
das
inc
mov
addr16
and
leave
fs
lcall
mov
int3
arpl
test
adc
test
jnp
add
cli
and
sbb
pop
movb
xchg
sbb
dec
movsb
cmc
pop
out
xor
cwtl
test
int
sub
mov
int3
pop
js
mov
xchg
mov
popf
xor
mov
dec
imul
jnp,pt
shrl
cmp
mov
ucomiss
jo
movsl
aam
push
imul
adc
inc
leave
lods
xor
cld
inc
dec
scas
jne
adc
pop
cs
pop
sbb
mov
xor
push
popa
sbb
sub
mov
in
cltd
xchg
mov
roll
or
test
dec
jae
jecxz
jno
dec
stos
jb
out
fiadds
mov
sbb
aas
cltd
sbb
adc
xor
in
test
daa
int
push
mov
pop
loop
ds
mov
in
push
push
fucompp
call
pop
lock
or
pop
xlat
scas
dec
and
data16
xor
add
in
test
loope
popa
clc
mov
sahf
add
jmp
rolb
adc
jbe
bound
cmpsb
and
pop
sbb
mov
test
push
nop
adc
sub
sbb
cmpsb
mov
jbe
fidivl
in
and
sldt
jb
fidivrl
or
xchg
data16
sti
adc
pushf
xorb
insl
shll
or
and
addb
out
bound
leave
fsts
adc
ret
lds
dec
mov
cmpsl
out
gs
int3
mov
or
mov
mov
push
insl
adc
sbb
fwait
xchg
sarb
push
call
in
cld
or
hlt
add
icebp
aad
sar
in
fwait
sbb
sub
adc
gs
mov
xchg
lret
rcrl
pop
cmp
ficomps
or
push
push
loope
mov
dec
movsb
aam
mov
into
jle
cmp
cli
andb
xchg
mov
mov
daa
std
or
adc
dec
ficomps
js
ljmp
push
push
iret
ret
inc
cld
jno
and
insb
xlat
add
loope
roll
xor
fsubrp
jg
cmp
addl
push
pop
aaa
pop
pop
sbb
xchg
mov
arpl
movsl
cmc
fistpl
sti
pop
add
loopne
and
cmp
out
aaa
push
lcall
xor
push
scas
add
or
mov
mov
and
xchg
aas
fmuls
in
nop
xor
dec
mov
or
in
xor
lock
fnstsw
imul
xor
xchg
push
pop
sahf
jno
in
jg
shlb
push
in
jne
or
push
fidivl
addr16
mov
xorl
lret
push
lea
fidivrs
jo
jae
ds
inc
xor
sub
jne
icebp
das
and
xchg
pop
cld
sub
pop
outsb
dec
fsubs
rcrl
push
scas
mov
int3
fcomi
cmpsb
push
lahf
test
popa
dec
je
outsb
mov
dec
mov
or
leave
pop
rcl
aaa
popa
mov
jno
sahf
lcall
or
out
dec
xorl
aas
scas
add
mov
fistps
mov
shrb
sub
movb
shll
aad
lret
cld
int
mov
fstps
pop
sar
adc
sub
shr
pop
dec
lahf
adc
add
xchg
inc
movsb
cmp
in
pop
or
mov
pop
xorl
pusha
xrelease
inc
std
cmpsl
sbb
and
imulb
lds
imul
orl
ljmp
insb
mov
jo
jle
jb
loope
dec
or
das
pop
dec
sub
loop
xchg
fcoms
mov
pop
sub
idiv
or
and
imul
sbb
loopne
loopne
pop
lret
jge
dec
pop
gs
ror
in
xor
lret
imul
or
and
in
add
hlt
mov
adc
popf
and
leave
and
inc
and
inc
lahf
xchg
or
add
jle
and
imul
mov
mov
cmc
jle
loop
hlt
stos
cmp
push
aaa
stos
add
movsl
cmp
jbe
pop
xchg
scas
mov
cmp
call
mov
or
pop
bound
hlt
cld
aam
cmp
xchg
push
aas
pop
cmp
mov
out
jg
sti
cli
adc
dec
fcoms
push
imul
mov
add
leave
cs
mov
xchg
mov
loopne
sbb
rcrb
sub
lret
sub
jnp
test
loope
ds
ljmp
jno
sbb
cmp
push
mov
push
mov
push
bound
sbb
stos
push
fdiv
mov
cmpsb
lods
xchg
mov
or
in
jecxz
lret
testb
jne
sbb
loope
arpl
jge
jns
sub
add
out
out
shlb
ret
pop
jb
jns
rcrb
loop
pop
add
xor
cmp
fiaddl
in
fwait
adc
je
cmp
add
xor
mov
in
jg
jno
or
push
jnp
popf
jmp
xchg
or
push
xchg
fwait
push
cmpsl
xchg
out
sbb
mov
lods
loope
mov
add
out
adc
pop
dec
dec
aaa
es
or
in
pop
xchg
push
push
out
inc
aaa
fldcw
xchg
dec
enter
add
pop
xchg
mov
test
cmpsl
inc
jmp
aaa
xor
cltd
inc
shufps
pop
fiaddl
add
aaa
jb
and
aam
sbb
dec
sub
loope
lahf
jae
stc
cmp
div
mov
les
push
loope
addb
roll
pushf
jns
pop
dec
and
cli
xchg
xchg
or
divl
add
xor
mov
xchg
out
ret
add
into
mov
pop
lods
hlt
or
push
dec
add
jnp
in
inc
ret
xchg
xchg
mov
jle
movsb
or
cmp
mov
jbe
movsb
cmpsl
scas
test
push
leave
jmp
pop
imul
mov
inc
ret
pop
push
stos
js
push
ja
je
les
jns
ficomps
stos
mov
adc
push
enter
out
repnz
ret
or
popf
std
sahf
and
imul
test
data16
mov
dec
aam
sub
fs
push
stos
stos
aad
sbbl
sub
jp
addr16
fwait
inc
in
adc
movb
sub
inc
mov
aas
dec
jecxz
cwtl
loopne
enter
xchg
data16
es
lahf
xor
inc
pusha
lods
mov
jns
inc
mull
fsubl
leave
test
das
xor
sub
add
adc
aad
and
cmp
dec
xchg
movsb
inc
mov
push
out
xchg
dec
push
mov
xlat
lea
ss
in
push
std
xchg
lock
jle
das
ja
in
fs
movl
mov
add
inc
push
jb
imul
xchg
mov
pop
mov
adc
xchg
int3
outsb
or
lods
push
dec
pop
xchg
stos
pop
push
adc
mov
cmpsb
loope
jne
jnp
sub
xchg
popa
add
jge
hlt
scas
cld
andb
aaa
push
fld
pop
ja
push
popf
cmpsl
jg
xchg
jge
adc
jg
lea
rol
sub
cmc
jb
out
pop
lcall
xchg
jae
inc
dec
cmp
out
cltd
std
inc
test
inc
inc
bound
dec
ret
jbe
out
adc
xchg
out
jae
je
sbb
je
xsha256
daa
dec
push
or
lods
push
xor
stc
nop
xor
pusha
aad
fistl
sub
cmp
cmp
sahf
pop
insl
push
jo
or
std
clc
cmpsb
cli
cmpsb
adc
mov
or
xor
xlat
lret
push
sub
xor
pop
sbb
test
or
sbb
ret
pop
movb
mov
inc
jle
jp
in
rcrb
idivb
lret
and
ja
sub
dec
cmpl
lock
out
cltd
aad
push
mov
out
xchg
dec
lcall
jns
add
inc
push
mov
jl
arpl
loop
ds
jnp
rcrb
inc
xor
xor
dec
and
popa
jecxz
xchg
add
orl
rolb
out
cmp
movsl
jge
fs
xchg
mov
in
stc
fstps
fsubrs
inc
pop
jo
and
lcall
mov
or
mov
clc
push
jl
jle
pop
jns
xchg
es
loope
ret
inc
sbb
xchg
push
mov
repz
lds
jge
sahf
jns
push
pop
and
in
cli
lahf
test
pop
pop
insl
hlt
push
xor
add
int
jns
dec
mov
lcall
lea
xlat
out
outsb
stos
in
sbb
xchg
pop
xor
jae
adc
ss
pop
imul
lock
testb
push
mov
pop
and
mov
mov
fadds
lock
hlt
jns
push
pop
cs
fs
jns
or
jmp
icebp
add
arpl
mov
iret
inc
inc
call
sti
mov
mov
pop
pop
jg
sub
sub
repnz
jnp
mov
negl
aad
jno
ret
push
daa
lcall
cmp
shlb
lret
leave
out
ficoml
xor
arpl
xchg
je
xchg
into
gs
xlat
mov
inc
les
or
out
jmp
mov
ss
inc
fcomps
mov
lret
cmc
scas
xchg
popa
les
insl
mov
or
mov
shrl
lods
cs
mov
sbb
add
sub
jp
in
mov
out
inc
sub
sahf
scas
ds
pop
cmp
mov
test
scas
sub
hlt
or
inc
push
mov
mov
push
std
leave
pop
lea
and
enter
inc
andl
xor
sub
fs
inc
xchg
scas
mov
inc
mov
insl
imul
bound
sti
into
cmp
fs
lock
xchg
inc
mov
hlt
or
mov
dec
loopne
xor
das
lahf
bound
pop
push
jmp
movzwl
data16
enter
xor
test
mov
aad
icebp
dec
mov
getsec
into
inc
xchg
mov
gs
in
push
stos
jae
ret
push
mov
sbb
mov
xchg
pop
enter
sub
cmpsl
scas
or
daa
sbb
ret
inc
mov
mov
xchg
enter
inc
bound
mov
add
jle
cmp
pop
xor
cltd
push
mov
jle
pop
jo
insl
add
shll
cmp
cmp
shrb
and
insl
xchg
jecxz
fwait
dec
cmc
xor
outsb
and
scas
inc
negl
mov
subb
shrl
xor
jbe
add
xor
sti
ficompl
pop
push
jmp
fstps
mov
arpl
rorl
enter
jl
js
jle
inc
dec
sbb
push
cmp
out
add
faddl
and
int
movsl
pop
mov
add
subl
jle
loopne
dec
gs
sarl
pop
sub
jg
xchg
jg
sbb
xchg
jl
outsb
sub
outsl
adc
mov
les
in
mov
movsl
jge
mov
stos
sub
sbb
loopne
outsb
inc
ss
adc
aas
mov
out
subb
dec
jge
mov
enter
xor
fisubrl
mov
push
fs
mov
sub
movb
in
dec
pop
jmp
fstl
repnz
mov
xor
pusha
mov
xor
rclb
lds
mov
lods
or
cmp
adcb
outsl
int
push
out
das
inc
lret
jbe
push
lds
imul
add
shl
jb
movsb
sub
jns
les
arpl
or
push
fwait
aas
test
mov
loope
push
xchg
inc
xor
xor
push
push
imul
sbb
xor
and
les
repz
pop
mov
dec
jmp
mov
outsb
mov
mov
call
xchg
lahf
mov
scas
jmp
fldl
lock
pop
adc
frstor
pop
mov
push
fcoml
imul
sbb
adc
inc
push
inc
leave
loopne
sti
and
mov
push
sti
mov
xchg
gs
lea
fprem
clc
fwait
out
jne
out
pop
movsl
mov
pop
das
test
add
sbb
jmp
cmpsb
cmp
cmc
out
hlt
sahf
sub
in
add
into
xor
pop
jecxz
inc
push
jns
cmpsb
sbb
xor
jae
pushf
movsb
stos
sbb
test
std
push
or
aaa
mov
push
mov
mov
add
sub
pop
enter
testl
rorb
xchg
cmp
fsubr
cmp
xlat
lea
dec
aaa
jle
imul
jg
in
mov
ds
or
jl
sbb
fsubrp
les
aas
jnp
dec
mov
cmpsl
xchg
dec
in
enter
jecxz
jp
lods
mov
andl
inc
mov
bound
jns
cmc
bound
xchg
push
xchg
scas
arpl
movsl
addl
popf
xchg
lahf
iret
sarl
call
mov
icebp
mov
sub
test
lds
std
mov
dec
mov
jle
hlt
fwait
jle
jno
or
loope
in
mov
push
cmp
insl
in
or
test
lea
dec
pop
clc
vphaddwq
cmp
add
outsb
xlat
adc
dec
or
or
lods
pop
je
or
cmpb
and
xchg
sub
jmp
cld
dec
ret
sub
xor
mov
cld
lcall
push
jae
sub
add
pop
jge
push
mov
pop
jne
add
ret
sub
dec
add
int3
stos
or
xchg
ror
jmp
push
xchg
cmpsl
ret
cmc
out
idivl
xchg
mov
pop
jns
rcll
imul
cmpsl
or
cs
jnp
adc
dec
jne
jl
cltd
std
fcomip
xchg
stos
lods
mov
or
xchg
lahf
in
shl
mov
cmp
or
cli
lea
pop
js
inc
jne
sub
pushf
pop
inc
jecxz
xchg
jo
aam
test
or
adc
sbb
outsb
roll
inc
imul
mov
and
jmp
in
or
insb
add
mull
and
in
inc
enter
in
or
leave
fists
xchg
lods
mov
xchg
jl
fwait
xor
mov
mov
or
xchg
outsb
movsl
fdivl
add
jmp
and
bound
lret
outsl
add
fmull
test
jno
mov
mov
push
sbb
pop
cwtl
cmp
add
scas
repnz
cwtl
clc
jno
or
adc
and
arpl
test
hlt
mov
xrelease
test
adc
sub
xchg
dec
dec
popl
cmc
dec
pusha
xor
jns
iret
data16
jbe
jbe
or
push
mov
dec
mov
faddl
mov
cld
mov
insb
cltd
jb
mov
mov
sbb
cmp
or
rcrl
dec
dec
pop
jbe
cmp
js
in
pop
pop
pop
loopne
dec
adc
push
or
mov
loop
pop
es
adc
cmpsb
xor
inc
loopne
push
or
aam
sub
fbld
jg
hlt
fnsave
push
inc
mov
jno
je
jno
fidivrs
or
jo
es
cwtl
cmp
jnp
stos
lock
fistpl
aad
push
sbb
out
pop
and
scas
mov
sbb
fnstsw
or
push
ljmp
jno
mov
pop
addb
xchg
lcall
jnp
jb
jmp
es
xchg
fwait
sti
int3
mov
and
xor
cmpsl
mov
imul
mov
sub
xor
xor
jmp
mov
int
sub
or
mov
popf
inc
jge
jae
clc
or
lcall
xor
cmp
pop
mov
int3
sub
mov
pop
mov
mov
pop
jmp
sbbl
cmp
popf
cltd
jmp
add
or
dec
repz
cltd
hlt
jmp
or
xor
xlat
cltd
clc
pop
mov
repnz
push
dec
lcall
push
or
mov
sbbl
jb
push
jnp
aaa
lret
mov
daa
inc
push
mov
mov
add
mov
cltd
hlt
outsl
testb
or
adc
pop
pop
pop
cltd
aaa
and
push
pusha
loop
jle
movsb
xor
mov
in
test
shll
daa
mov
adc
push
ljmp
or
add
es
ret
push
xchg
push
cltd
subb
sbb
mov
popa
insl
pop
je
ss
je
aam
jle
adcb
lea
push
cs
addr16
jo
scas
xor
inc
das
and
add
mov
sahf
and
les
xor
fisubrs
iret
mov
lds
mov
lds
dec
sahf
stos
ds
aas
cmp
lods
mov
test
jns
movsb
nop
push
adc
xor
fs
arpl
mov
and
add
mov
xchg
xor
test
mov
das
test
stos
inc
mov
cmc
mov
xchg
adc
stos
xchg
pusha
mov
testl
or
xchg
mov
sub
mov
inc
in
stos
mov
rclb
mov
jmp
test
pop
repz
addr16
pop
jne
xchg
jle
xchg
mov
fwait
mov
addr16
add
pop
scas
cmpsb
jb
adcl
notl
push
inc
push
inc
sarb
rcrb
pop
sub
inc
or
mov
jo
fstps
fdivrs
xlat
andb
sarb
popa
clc
loop
inc
in
movsb
inc
add
icebp
sbb
stc
mov
mov
cmp
adc
push
push
loopne
pop
or
jl
sbb
movsb
jg
lods
cwtl
xor
jb
ret
lahf
dec
mov
mov
in
outsb
mov
inc
repnz
test
mov
pop
aaa
jecxz
push
cmp
mov
mov
movsb
scas
inc
add
ds
negl
dec
out
jle
lods
mov
adc
in
mov
mov
push
and
xor
xlat
pop
int3
fstpl
shrb
outsl
sub
xchg
imul
aaa
add
and
mov
xor
xlat
shlb
gs
xchg
jge
lea
out
jg
fst
gs
inc
cmc
enter
and
iret
and
in
fsubrs
rcrl
sahf
stos
mov
cmp
mov
lods
aas
out
fwait
sbb
cmp
cs
jae
jno
xchg
pushf
push
fmulp
mov
and
lahf
popf
lods
movsl
inc
stc
mov
jg
lcall
daa
cmp
stos
pop
std
xchg
dec
mov
push
lcall
fs
sub
jmp
lods
popa
icebp
test
je
hlt
in
and
sub
add
xchg
outsl
mov
bound
movsb
into
xchg
in
sub
fstp
mov
ljmp
es
call
ret
xor
push
push
and
out
fs
lds
ja
jno
das
divb
pop
push
mov
imul
sub
push
fwait
xor
rclb
mov
mov
sbb
and
jb
push
loop
in
add
fsubrl
sbb
cmp
fsubrl
cmp
repz
push
mov
testb
jmp
mov
cld
push
mov
pop
aaa
or
inc
mov
mov
dec
mov
jnp
jmp
arpl
cwtl
push
mov
or
insl
rcrl
jno
lret
mov
popa
arpl
lahf
stos
jbe
test
scas
or
xchg
fstps
les
push
sbb
sub
pop
jecxz
xchg
mov
xchg
loope
mov
lahf
stos
push
lods
pop
in
clc
into
enter
sbb
test
mov
push
mov
cmp
cmpsl
mov
vsubpd
inc
sbb
imul
xor
mov
iret
mov
test
pusha
fsubl
mov
jg
stos
jnp
mov
leave
push
mov
xchg
mov
and
cmp
sub
xchg
ret
cmp
shlb
and
movsl
lds
jno
mov
add
arpl
xchg
add
mov
dec
push
jl
lahf
pop
test
cmp
in
in
sub
dec
into
outsl
mov
out
xchg
push
int3
jb
pop
mov
neg
std
in
out
in
jle
repnz
add
scas
das
inc
xchg
xor
cld
dec
repz
push
adc
ljmp
push
pop
or
dec
sbb
dec
xchg
mov
adc
cmp
fsubrs
test
lcall
adc
mov
fstps
push
fistpl
pop
pop
ds
sub
movsb
cltd
shl
jp
lods
add
inc
add
cmp
aaa
xchg
cmp
fprem1
push
xor
sti
cld
push
aad
inc
btc
lods
cmpsl
jo
push
push
fldenv
es
in
ljmp
lahf
mov
push
popf
or
mov
pop
cmc
lock
scas
fdivs
inc
push
fstpl
sbb
mov
test
outsb
imul
scas
xchg
sub
cli
sub
xor
stos
push
out
push
cmp
pop
popf
subb
xlat
pop
xor
inc
inc
xorb
gs
js
mov
cld
out
subb
test
sub
les
pop
jmp
loope
shrb
jg
mov
adc
aaa
add
mov
adcb
rol
dec
pop
dec
jl
shrb
xor
jb
and
xchg
mov
les
lock
notb
cmp
js
mov
sbb
pop
ret
pop
sti
scas
pop
neg
and
pop
std
jge
das
orb
in
xor
ds
jl
xchg
mov
push
push
aaa
sub
imul
jecxz
push
cmp
sub
pop
jo
imul
cmp
pop
lock
jecxz
dec
mov
ret
sarb
push
jno
js
sbb
inc
sbb
inc
setge
xchg
clc
mov
xchg
pop
rol
adc
andb
mov
adcl
xor
or
jecxz
in
jo
sub
dec
adc
pop
mov
sbb
adc
fldenv
out
outsl
adc
sbb
ret
mov
loope
sahf
in
sub
pop
and
dec
cmp
test
or
cmp
or
pop
popf
adc
movsb
mov
mov
sbb
xchg
sub
scas
leave
pop
je
or
ds
mov
cli
adc
pop
push
dec
push
fdivp
cmp
lret
arpl
fisubl
out
lods
in
fiaddl
adc
inc
addb
clc
xchg
or
mov
fwait
aas
push
or
repz
in
push
loopne
xchg
js
stc
test
movsb
aas
nop
dec
shrl
inc
popa
neg
jae
data16
mov
popf
xchg
cmp
pop
dec
popa
fdivrs
mov
mov
or
aas
adc
test
dec
gs
cmp
sub
push
sarl
leave
daa
push
stos
arpl
aad
add
xor
sar
ret
insl
inc
repnz
xchg
inc
lret
mov
or
shrl
pop
cmp
and
push
mov
sbb
push
negb
out
out
lcall
jbe
inc
fmul
lret
in
mov
rorb
icebp
add
xor
push
dec
jmp
inc
xchg
popf
pop
loopne
cltd
jb
adc
xor
mov
jno
scas
push
sti
loopne
test
popa
rolb
jecxz
sub
test
inc
scas
call
inc
aas
fldenv
arpl
int3
aad
gs
mov
xchg
negl
sbbb
mulb
into
adc
shl
fbstp
lods
mov
pop
sub
jp
and
adc
push
push
out
xchg
jecxz
cmp
push
sti
popa
test
push
movsb
cmp
sub
xor
les
movsl
jbe,pt
cmp
fucomi
divl
adcb
xchg
lret
clc
aad
mov
jg
repz
cli
xchg
or
jp
push
add
pop
mov
ret
mov
lret
xchg
out
adc
jb
mov
and
push
sbbl
push
movsb
lahf
leave
dec
fbld
mov
aas
dec
fbstp
inc
sbb
cmpb
dec
in
push
xchg
rcrb
sub
xor
shrb
pop
adc
jecxz
out
xor
into
pop
lret
mov
jns
or
shl
icebp
lods
add
adc
js
jbe
mov
pop
mov
divl
adc
xchg
add
sbb
insl
aam
xchg
insl
sub
stos
scas
pop
jmp
dec
je
andb
xchg
fs
enter
rorl
in
xlat
jo
add
or
cmp
mov
cmp
mov
push
pop
sarl
cmpsb
inc
and
mov
jg
jnp
and
or
or
sbb
rcl
jae
daa
and
shll
add
into
test
sub
push
pop
call
pushf
stos
pop
cmp
vmulss
in
lahf
stos
fwait
sub
xor
cmp
testl
mov
adc
or
daa
in
insl
pop
mov
out
mov
sub
repz
push
stc
cmp
adc
js
out
test
mov
and
test
push
inc
loop
scas
cmpsl
ds
jb
cli
mov
rolb
or
lods
inc
andb
fcoml
sub
jmp
dec
mov
cmpsb
les
add
scas
cmp
xor
int3
jg
sbb
dec
or
jl
les
clc
push
jecxz
negl
loop
cwtl
mov
xchg
inc
mov
push
xchg
fucomip
or
dec
fs
pop
mov
adc
outsb
inc
jmp
jne
push
mov
adc
std
or
iret
mov
cmp
ror
in
sti
loope
sub
sahf
xor
in
fiadds
sub
jo
mov
jp
sbb
mov
das
call
or
fstpl
push
je
repnz
into
sbb
xor
jle
xor
hlt
adc
mov
mov
fidivs
xchg
shrl
push
fnstenv
pop
mov
jno
xor
sbb
andl
mov
icebp
mov
sarb
imul
add
sbbl
mov
lahf
mov
fldl2e
int
or
mov
in
jno
pop
filds
popa
out
mov
popa
nop
clc
xchg
or
lret
push
cltd
jbe
les
mov
xchg
pop
adc
cmp
cs
in
push
repnz
jbe
or
push
cmp
inc
sbb
xchg
repz
hlt
pusha
cltd
pusha
mov
xchg
mov
in
inc
mov
shrl
movsb
adc
jno
nop
js
icebp
jb,pn
ds
or
rcl
cmc
or
add
mov
test
mul
cmp
andb
stos
inc
mov
ja
cmp
gs
sbb
sahf
sbb
mov
je
sub
dec
popf
mov
imul
inc
daa
in
into
inc
pop
adc
aad
lcall
mov
out
in
pop
enter
ss
out
enter
or
cmp
adc
xor
jmp
and
sub
cwtl
inc
cmpsb
repnz
xchg
scas
or
xchg
dec
jnp
fucomip
push
pushf
rcl
loopne
cmp
icebp
mov
roll
jg
jo
and
xchg
es
dec
sub
lock
adc
push
inc
mov
frstor
push
nop
roll
xor
lret
adc
jo
cmp
lret
test
int
push
aas
mov
test
lods
pop
call
and
mov
add
push
movsl
mov
iret
mov
mov
fildll
rcrb
inc
stc
clc
pop
mov
ljmp
outsl
add
mov
in
xor
mov
lcall
in
xchg
leave
movsb
in
les
pop
into
add
cmp
dec
mov
mov
fs
jp
xchg
lock
adc
rolb
rcr
and
insb
cld
jne
aas
iret
sbb
gs
pop
fidivl
in
js
add
push
out
dec
push
or
adcb
insb
or
adc
sti
jecxz
sbb
and
mov
adc
mov
and
sarl
cli
mov
pushf
add
stos
xlat
data16
int
enter
jno
int3
call
or
mov
push
mov
jle
popa
sahf
test
rolb
cmp
into
out
mov
or
pushf
mov
mov
xchg
test
lret
int3
mov
and
std
push
gs
inc
orl
add
lahf
pop
and
xchg
outsb
sub
lahf
mov
push
loopne
test
jg
cmp
sub
add
hlt
cmp
and
lret
jb
notb
pop
in
aaa
add
fsubl
incl
add
fistl
scas
or
dec
sbb
mov
rol
fsubr
cmpsb
imul
insb
or
inc
pop
sub
mov
mov
ljmp
decl
cmpsl
jns
pop
arpl
ret
push
adc
out
dec
lods
inc
mov
insl
mov
insb
ffreep
cs
dec
addl
in
subb
cmp
fucom
test
xor
cmc
and
push
aad
xlat
xchg
mov
mov
jp
bound
fsub
fs
xor
ds
sub
test
inc
jno
retw
out
jbe
pop
aad
hlt
xor
mov
mov
cmp
push
xor
bound
lods
cmp
or
es
dec
dec
adc
mov
sbb
inc
in
fdivr
lahf
mov
sub
pop
lds
movsb
lret
sbb
jp
and
dec
and
cmp
sahf
test
pop
icebp
int3
daa
lods
sub
or
jbe
stos
xor
movd
jl
stc
adc
or
mov
dec
loopne
jnp
jge
in
sbb
int
repz
das
mov
jge
icebp
or
scas
out
enter
adc
dec
inc
push
adc
sbb
or
out
xor
push
fisttps
lock
inc
pop
dec
pusha
es
dec
pop
cmp
xlat
cmp
pushf
loope
dec
and
fisttps
cwtl
pop
in
stos
rcll
mov
jno
push
pop
aad
sbb
loopne
test
sbb
lret
adc
mov
dec
push
out
adc
xor
mov
setle
xchg
rorb
scas
mov
jl
jno
xchg
inc
sub
test
xor
mov
or
sub
cltd
jmp
add
sbb
mov
ljmp
gs
lret
bound
scas
jmp
rcl
cwtl
test
icebp
aam
and
mov
dec
iret
repnz
add
ds
sarb
es
jg
inc
mov
ljmp
les
les
xchg
nop
sub
lahf
sahf
xor
xor
pop
int3
subb
test
adc
mov
or
or
fnstenv
fisubrs
pop
inc
cmc
adc
add
jns
icebp
icebp
lods
and
imul
add
xor
js
stos
xchg
inc
xchg
sub
fstp
jg
mov
push
mov
les
jp
orl
xchg
pop
sbb
outsl
dec
jle
pop
das
decb
pop
sub
mov
ficoml
les
ret
sub
lea
imul
aad
cwtl
xor
cmc
popa
xchg
xchg
rcrb
mov
daa
push
push
pop
fwait
stos
mov
int
mov
jp
pop
cwtl
in
inc
jnp
unpckhps
repnz
xchg
stos
sbb
decl
push
jl
mov
sub
or
lcall
adc
sub
aaa
into
pop
out
ds
xchg
scas
push
sbb
mov
das
shl
in
sahf
test
xchg
xchg
inc
mov
jecxz
hlt
or
sub
mov
adc
sbb
pop
rol
sbb
popa
clc
movsb
iret
dec
pop
jbe
jg
notl
mov
pop
pop
mov
imul
push
pop
mov
icebp
shll
add
pop
insl
sbb
mov
ljmp
loop
jb
mov
shl
aas
lcall
div
xchg
sbb
push
outsl
cltd
push
dec
leave
pop
fisttpl
outsl
push
in
mov
dec
jae
mov
dec
popf
push
inc
repnz
jle
cmc
nop
insb
ss
aaa
scas
bound
pusha
imul
enter
push
jmp
int
out
and
push
leave
sarb
jno
xchg
dec
jmp
cld
pop
and
push
jmp
add
call
fistl
mov
xor
je
adc
jecxz
addr16
cmp
je
xchg
cli
inc
xor
xchg
push
or
cmp
xchg
cmp
cmpb
xor
mov
jbe
loope
mov
jle
mov
jge
xorb
fucomip
jp
jg
jns
jmp
adc
sbb
lock
xchg
and
lahf
cmpsb
in
sbb
incb
lds
mov
icebp
jnp
dec
cmc
jns
test
sbb
ret
sbb
lods
in
dec
lahf
into
es
rcrb
int
icebp
leave
pusha
pop
test
sub
rol
add
jo
or
adc
es
int3
lea
movsb
pop
scas
jb
int
aam
and
jg
xchg
pop
cmp
aaa
pop
ds
je
pop
xchg
pop
cmp
movl
mov
testb
fistps
mov
mov
fstpl
jnp
add
xor
jge
or
fsubs
xchg
xchg
inc
repz
outsb
jo
dec
dec
inc
mov
dec
and
lea
lods
popa
push
jmp
or
jo
cmp
adc
mov
int
jg
stos
mov
dec
pop
inc
aad
jbe
nop
xor
notb
int3
adc
or
out
xchg
sbb
fwait
imul
cmp
imul
push
mov
xor
jl
xor
push
sub
shl
scas
outsb
add
mov
inc
fs
push
cmpsl
lds
clc
or
mov
sbb
xor
in
dec
and
jmp
movsl
or
xchg
into
push
out
jbe
jp
fcoml
mov
push
cmc
inc
dec
in
pop
xchg
sub
pop
cmc
adc
pop
nop
fisttpl
push
pop
dec
add
outsb
sahf
pop
mov
or
in
and
mov
test
inc
aam
add
sbb
in
ret
shrb
jle
leave
mov
xchg
call
test
pop
mov
fdiv
pop
mov
cmp
sti
fcomi
xor
push
xlat
call
mov
mov
outsl
lcall
in
sbb
mov
jb
mov
jl
xchg
xchg
jns
sbb
mov
xchg
sub
or
imul
jecxz
addr16
or
js
sarl
and
mov
mov
ficoml
cmp
outsb
inc
fsubl
dec
pushf
aam
iret
push
push
sti
mov
push
xchg
cmp
xchg
mov
add
push
ss
cltd
and
mov
dec
and
push
stc
mov
mov
fcmovne
test
sub
mov
mov
jecxz
aam
mov
mov
mov
rcrb
mov
notb
mov
adc
xchg
fsubl
stc
adc
or
mov
inc
jbe
in
lret
loop
pop
mov
or
sub
jb
fnstenv
xor
stc
ljmp
imul
xor
mov
or
or
pop
into
sahf
mov
dec
orb
shrl
cmp
loopne
fldl2t
xor
mov
push
xor
dec
pop
data16
push
fs
xchg
sub
sub
rorb
scas
jecxz
cli
inc
dec
adc
inc
fsubl
out
mov
into
arpl
ja
dec
loop
cwtl
sbb
and
cmp
cltd
push
jg
shll
xlat
pop
push
pop
icebp
imulb
push
push
loopne
inc
hlt
addr16
ja
aas
loopne
es
fistpl
ss
icebp
mov
daa
push
inc
pop
movsl
jae
scas
repnz
clc
stos
dec
xor
xor
mov
popf
push
cmp
or
cmc
rorl
enter
shlb
xchg
mov
mov
mov
lret
xchg
mov
loope
jbe
movsl
xchg
shrl
add
xor
je
jno
iret
daa
outsl
cmpsl
dec
gs
add
mov
dec
xor
int3
fcmovnb
stc
in
jae
mov
mov
mov
out
mov
sub
lret
dec
xlat
lds
das
pusha
jl
push
bound
sbb
jg
in
xor
sbb
add
sahf
lods
xor
je
push
dec
cwtl
pop
insl
fisubs
dec
mov
lock
les
xor
mov
or
jg
push
mov
mov
jmp
test
sub
mov
xchg
mov
dec
xchg
mov
add
bndstx
inc
insb
adc
sbb
dec
std
mov
bound
and
pcmpeqw
xor
movsl
xchg
xchg
lds
push
xchg
mov
xchg
aad
int
je
imul
xor
sub
push
jae
adc
pop
inc
repnz
outsb
sub
inc
pop
dec
jnp
and
movsl
push
out
ficomps
test
mov
ss
hlt
fwait
icebp
xor
push
movsl
enter
ret
or
add
cmp
jno
mov
aaa
jle
sub
add
dec
stc
cmpb
xchg
icebp
lods
adc
lahf
push
cmpsb
inc
frstor
jp
out
cmpsb
dec
fbld
int
jl
dec
and
mov
push
jle
dec
pop
test
sete
xor
ficoms
mov
xor
mov
push
xor
aas
jo
scas
add
dec
jnp
xchg
and
cmp
sub
mov
add
dec
mov
fwait
add
mov
out
mov
fwait
sbb
ret
push
out
out
inc
int
and
int
aad
arpl
mov
cmpsl
mov
or
adc
out
jmp
fcomps
shlb
dec
hlt
sbb
popf
xor
sub
pop
out
dec
cmovle
dec
jg
sti
mov
subl
jb
fwait
cs
xchg
ret
stc
or
jbe
in
iret
dec
sub
jg
das
js
leave
movsb
repnz
sub
xchg
ds
fwait
data16
cmp
mov
sarb
scas
pause
icebp
jnp
out
pushf
js
mov
fdivrl
shl
pop
sahf
ss
out
cmpsl
push
enter
fucomp
sahf
lret
mov
adc
test
inc
fwait
leave
sbb
pushf
loopne
loop
mov
lock
jno
add
lds
inc
pop
sbb
hlt
mov
gs
xchg
mov
adc
add
scas
testb
out
xor
aaa
fstpl
dec
sbb
loope
cmpl
cld
lahf
cmc
cmp
dec
mov
mov
inc
cld
test
sub
mov
sub
js
call
mov
mov
mov
pop
cli
int
std
inc
int3
mov
xor
pop
inc
inc
bound
lods
ret
lcall
pop
mov
pop
cmp
roll
jg
and
cli
lret
sbb
push
adc
fsubrp
xchg
inc
cmpsl
mov
fs
addr16
rclb
fnstsw
mov
test
lret
jae
jle
aas
addb
inc
call
jecxz
inc
je
pop
push
cmp
push
test
push
js
and
sub
das
repz
stos
vucomisd
fisubrl
or
sbb
jno
lahf
mov
jnp
cmp
mov
dec
pop
pushf
call
push
sti
rcll
xor
jno
mov
int3
dec
icebp
cmp
mov
ret
jle
mov
subb
sar
outsl
rcrb
push
mov
push
rol
test
je
cmp
xchg
xorb
jecxz
icebp
pushf
fisubs
or
js
in
mov
dec
cmp
pop
aad
mov
add
sbb
dec
out
aad
add
mov
and
aaa
icebp
sbb
aam
mov
xor
mov
cmpsl
testl
popf
mov
test
arpl
xor
or
rclb
dec
xor
stos
clc
mov
sarl
hlt
std
pop
mov
sbb
mov
or
in
mov
mov
jnp
push
push
xlat
in
dec
icebp
xor
jo
ret
rorl
sbb
scas
pop
imul
lcall
mov
cmpsl
fmull
outsb
sub
xor
arpl
cmpsl
adc
jl
lock
jmp
pop
pop
fisubrl
or
nop
mov
push
sub
cmp
loop
es
xchg
push
push
adc
fdivs
push
mov
lods
pusha
fbstp
sbb
ss
mov
pop
fisubl
das
in
lea
mov
outsb
iret
fstps
test
cmp
pop
fucomip
cmp
lret
mov
xchg
insb
sub
mov
push
iret
aas
push
cmc
cmp
pop
icebp
jnp
inc
arpl
push
and
test
daa
into
xchg
mov
sub
and
ss
les
cmp
add
mov
in
inc
aas
xor
sbb
ljmp
adc
sbb
data16
sbb
and
xchg
aaa
outsb
jecxz
mov
dec
pop
mov
pop
mov
sbb
mov
mov
mov
lahf
mov
pusha
jnp
push
xor
les
push
sub
sbb
popa
iret
shlb
fistl
loope
xor
sub
scas
loope
and
shrb
mov
push
mov
pop
jge
nop
inc
icebp
xchg
mov
xchg
fdivp
es
pushf
dec
rclb
scas
push
icebp
jecxz
pop
sbb
add
mov
mov
das
and
fbstp
inc
cltd
push
clc
dec
std
cltd
jp
mov
fcomps
shll
pushf
mov
into
jle
pop
call
dec
xchg
repz
xchg
sbb
xor
fs
push
sub
outsl
data16
cwtl
nop
sbb
cmc
adc
cmp
add
xchg
add
mov
xchg
test
or
movsb
mov
mov
jecxz
pop
leave
fistpll
push
ficoml
ds
cmp
mov
push
sbb
xchg
test
dec
adc
pop
fimuls
mov
cmp
and
cwtl
subb
aad
push
pop
ror
mov
or
xchg
jl
push
test
fstps
cmp
repnz
push
mov
xchg
cmp
and
mov
mov
adc
xchg
push
xor
test
cmp
mov
add
mov
orb
andl
mov
int
enter
sbb
xor
sbb
cmp
stos
aam
jnp
jns
mov
fldl
in
shrl
mov
xchg
addr16
xor
icebp
push
repnz
dec
fs
pop
dec
popa
and
sub
cld
mov
push
or
mov
sub
xlat
sbb
adc
sub
mov
mov
jns
push
sub
test
arpl
cmp
jmp
xchg
mov
dec
and
iret
adc
jl
xchg
fnstcw
insb
mov
sub
outsb
les
jne
jecxz
lahf
scas
pop
jp
cmp
lcall
outsl
adc
jno
add
adcl
js
bound
ja
mov
incb
inc
out
cld
cmp
inc
sub
out
adc
sbb
xchg
lss
cmp
sti
stos
lcall
iret
add
rep
js
je
cmp
pop
ss
fiadds
adc
lods
mov
jg
hlt
jnp
pop
mov
test
out
nop
adc
loopne
jle
ja
jnp
dec
adc
inc
in
testl
lcall
lret
push
sti
hlt
outsl
xchg
ret
sub
xchg
daa
or
xlat
mov
mov
mov
cmpl
adc
ret
inc
xor
aaa
ja
int
and
inc
cwtl
or
dec
cmp
inc
mov
push
or
jge
cwtl
sahf
shlb
xor
xor
sbb
mov
sbb
push
scas
daa
xor
test
test
rcrl
xlat
pop
push
dec
outsb
pop
sbbb
push
stc
xchg
mov
jb
and
js
jle
pop
mov
push
loop
adc
aas
push
inc
test
cmp
and
dec
dec
fcompl
movsl
icebp
push
lock
inc
sub
jb
mov
inc
and
mov
imul
and
xchg
cwtl
sub
repnz
xchg
dec
inc
popf
xchg
daa
ficoml
and
stos
cmc
dec
jecxz
adc
xchg
or
or
outsl
sbb
mov
lcall
push
mov
bndldx
lods
sbb
or
notl
lods
adcl
gs
bnd
inc
cmpsb
adc
dec
popf
add
cmp
cmc
in
jno
dec
push
cmp
adc
aas
cwtl
gs
mov
inc
add
stc
xor
adc
lea
mov
mov
cmp
push
mov
adc
xchg
and
xchg
pushf
jmp
stc
pop
mov
xor
ret
jne
rolb
fmul
fistl
mov
scas
test
shll
push
xor
test
sbb
out
xchg
hlt
sbb
lahf
adc
repnz
out
mov
dec
stc
test
jns
sub
movsl
clc
inc
fs
ljmp
sub
or
sub
cs
mov
lds
out
shl
adc
insb
fidivrs
lcall
out
test
or
fs
scas
or
into
mov
imul
loop
mov
aam
loop
repz
cltd
in
xor
ds
push
sbb
pop
adc
cmp
push
or
lods
pushf
shlb
aas
outsl
or
test
sbb
icebp
mov
loop
jp
pop
divl
pop
sbb
bound
flds
sub
je
sbb
mov
mov
or
data16
test
int
mov
and
xchg
sbb
fstpt
pop
jl
xchg
scas
inc
add
xor
pushf
scas
test
cmc
sub
dec
jnp
dec
test
shrl
adc
jl
addr16
es
loope
inc
adc
adc
adc
ss
push
pop
xchg
and
and
cmc
cmp
fcoms
test
js
dec
xchg
push
fsubrp
cmpsb
rorl
movsb
or
adc
jp
adc
dec
cwtl
push
ss
push
leave
sbb
dec
data16
pop
push
sarb
mov
and
adc
add
pop
jmp
nop
lock
mov
add
push
scas
aas
es
lods
adc
loope
pop
outsb
rol
dec
aam
adc
ss
pop
inc
xchg
mov
jo
cmc
or
cmp
pop
popf
inc
negb
scas
jecxz
xchg
jne
push
dec
sbb
rorb
push
mov
aad
pusha
pop
into
jne
fbstp
cmp
loope
jle
mov
push
sub
pop
in
imul
adc
lcall
or
repz
out
jne
out
mov
adc
mov
jae
xor
cmp
push
cmp
mov
inc
fs
in
mov
in
repz
pop
fcompl
mov
mov
pcmpgtw
je
inc
pop
insl
inc
jae
push
insl
pop
mov
test
js
mov
lret
aam
stos
cltd
push
adc
jg
or
das
jl
imul
and
jg
leave
dec
lock
loop
pop
cmpsb
repnz
lret
stos
jp
xor
imul
clc
inc
je
inc
fucomp
push
mov
xchg
bound
add
jo
in
lods
jne
iret
jle
scas
jnp
test
cmc
icebp
test
mov
xchg
out
cmp
rorb
add
ret
movsl
cmp
push
xchg
pop
dec
fsub
pop
lret
dec
mov
or
pop
rcr
aad
sbb
add
xor
daa
mov
xlat
pop
adc
xorl
icebp
es
iret
jno
out
ret
es
pop
clc
bound
mov
jmp
out
cwtl
pop
loopne
into
gs
add
shrb
jge
mov
or
lret
xchg
mov
inc
cmp
fwait
popa
es
dec
pop
mov
inc
xor
inc
push
sbb
aaa
cmp
add
xor
and
call
xor
aam
aam
fstpt
clc
or
imul
push
mov
lods
add
cmpsl
pop
mov
sbb
dec
xchg
xchg
imul
mov
cmp
clc
out
cmp
xor
xchg
pop
cld
pop
out
and
sub
in
fistl
out
mov
mov
inc
jb
xchg
mov
adc
hlt
pop
push
add
cld
das
aad
push
imul
or
jmp
xor
xchg
sub
push
xor
push
jbe
inc
cwtl
test
mov
jnp
insl
ljmp
aam
test
in
pop
sahf
rolb
repnz
xchg
jnp
or
ja
int3
fwait
xchg
scas
xchg
push
mov
scas
daa
push
je
orl
mov
mov
cld
lea
or
ds
scas
jge
ja
cmp
sub
data16
and
fucomi
int3
lret
and
mov
dec
int
mov
push
cwtl
repz
jns
mov
jo
inc
pop
pop
movsb
mov
or
loop
jge
cmp
sbb
ret
sbb
bound
into
push
ret
jle
push
icebp
repz
adc
sbb
hlt
mov
or
popl
adc
jne
jne
mov
dec
pop
fisubl
add
rcr
pop
xor
loope
xchg
pop
adc
sub
or
push
sbbl
jne
jo
int3
shlb
es
imul
std
lock
and
xchg
push
push
mov
aas
and
xchg
das
icebp
lahf
arpl
xchg
sbb
test
adc
add
xchg
or
xchg
lds
xchg
adc
rcrb
sbb
outsb
sbbb
lcall
mov
mov
and
cmpb
adc
jg
jbe
outsl
iret
pop
jae
movsl
push
mov
loope
pop
jmp
cmp
adc
ret
push
loope
xor
imul
jno
clc
out
mov
rcl
xor
pop
daa
outsl
icebp
idivl
push
in
cli
mov
mov
adc
xchg
and
jo
inc
pop
test
and
pop
popf
sub
pop
sub
xor
sbb
test
mov
popf
test
je
cmpsb
xchg
sub
in
cmpl
loope
adc
sbb
pop
das
push
xor
xchg
jno
jne
idivl
xchg
shrb
cmp
xchg
inc
stos
jmp
sbb
or
pop
fwait
inc
mov
inc
cmp
pop
es
shll
or
rorl
adc
push
adc
push
sbb
cmc
sbb
xchg
popa
or
jmp
shll
popf
cmc
adc
add
and
mov
imull
sti
sete
cmp
movsb
dec
mov
add
mov
push
add
dec
test
outsl
push
jmp
lret
xlat
xor
or
or
add
inc
shr
xchg
mulb
jle
sub
cmpsb
mov
mov
jecxz
outsl
mov
popl
jg
jg
inc
shl
pop
ficoml
fisttpll
in
ja
sar
pop
mov
add
mov
mov
cld
xchg
frstor
nop
sbb
xchg
or
push
jecxz
cmp
call
fistps
hlt
popa
sbb
loopne
ss
and
leave
adc
push
or
xchg
adc
mov
fstl
shr
roll
fistps
or
aam
fcomps
jge
push
sbb
cld
cmpsl
pusha
ret
and
outsl
jo
sbb
mov
pop
in
lods
fwait
jg
xchg
jb
cwtl
out
ds
cmc
aas
push
stos
mov
dec
rcrb
dec
fdivl
test
movl
inc
mov
iret
adc
call
test
outsl
loop
cs
push
mull
js
data16
xchg
scas
sbb
xor
adc
inc
arpl
adc
cmp
sub
dec
imul
call
sub
loop
xchg
dec
test
arpl
out
bound
out
adc
lds
shl
ficoms
fmull
fdivl
or
dec
mov
cld
add
clc
and
test
sbb
mov
xor
adc
outsb
sbb
or
cmp
in
rcrl
lods
jl
pop
sti
enter
jb
xchg
mov
dec
divl
push
mov
cmp
inc
sbb
inc
xchg
mov
clc
lcall
pusha
test
stos
nop
sub
mov
imul
aad
mov
ret
cmp
lcall
sysret
and
jns
sub
jecxz
mov
or
jp
fwait
frstor
push
aad
sub
sub
mov
movsl
push
mov
ds
negl
test
push
push
testb
jle
out
dec
mov
xchg
xor
jne
inc
sti
pop
and
inc
pushf
insl
insl
in
or
pop
das
mov
cwtl
test
scas
dec
idivb
push
daa
ljmp
push
mull
xchg
test
sbb
jmp
fsts
call
mov
pop
je
dec
pusha
stos
jecxz
cmp
sub
push
xlat
fstpt
dec
aam
cld
inc
lods
ja
xor
jmp
pop
out
shrl
aad
adc
jb
hlt
iret
xchg
int3
mov
pop
xchg
mov
xor
dec
mov
cltd
inc
daa
mov
arpl
inc
push
div
jecxz
mov
pop
jge,pt
stc
and
sarb
stos
daa
mov
push
cmpsl
pop
sub
repnz
cmp
pop
xchg
push
mov
aad
mov
mov
mov
push
test
mov
sbb
mov
bswap
cmpsb
aam
fbld
cld
test
ja
cli
xor
and
pop
add
stos
inc
inc
and
imul
sbb
dec
imul
sbb
push
movsl
shrb
push
shlb
lods
jno
stc
dec
in
xor
sbb
mov
push
pop
mull
push
cmp
mov
xor
xlat
shr
xchg
stc
mov
pop
cwtl
pop
lret
pop
mov
add
call
ror
or
loopne
outsl
je
shll
xchg
fidivrs
push
movsb
cmp
lret
int3
lock
dec
movsl
adc
xchg
xchg
jnp
mov
add
pop
xor
dec
dec
mov
arpl
dec
push
mov
jnp
ss
xchg
js
orb
or
mov
cmc
jmp
push
fsubrs
push
xchg
incl
pop
stc
fdivl
xor
ss
ror
cmp
xor
cmpxchg8b
jle
sbb
addb
cwtl
test
call
ret
sbb
push
cwtl
in
jb
sub
xor
xor
stc
das
cmp
add
lds
pop
sbb
xchg
pop
jmp
and
and
and
sub
das
shll
fwait
clc
or
ljmp
nop
je
adc
leave
das
fwait
push
lods
lcall
out
mov
ljmp
imul
lods
and
mov
inc
mov
icebp
in
shrl
or
std
mov
dec
fs
subl
pop
call
pop
stos
mov
dec
inc
inc
stos
orb
and
std
xor
inc
fidivs
push
push
fstps
mov
and
inc
in
repnz
mov
push
cmp
xchg
jmp
mov
insl
enter
cmp
push
jae
loopne
xchg
mov
mov
imul
mov
mov
push
test
push
pop
lret
and
mov
jns
or
xor
xchg
ss
mov
add
sub
or
inc
clc
mov
cmp
outsb
pop
test
rorb
lahf
pushf
ss
adcb
test
inc
test
mov
push
incl
xchg
jo
jge
sub
dec
call
decl
cltd
sahf
push
testl
clc
xor
cmp
outsl
fs
fsubrs
pop
fdivrs
mov
ds
jmp
push
divl
in
fcomps
xchg
in
in
cmp
cs
and
mov
add
test
adc
pop
mov
mov
negl
mov
cmpl
lods
stc
cmp
xor
fcomi
cmp
repz
pop
fisubrl
jno
pop
mov
pusha
int
inc
push
imul
mov
jns
jae
mov
and
orb
add
or
inc
inc
cpuid
push
inc
loope
push
in
repz
hlt
in
mov
xchg
mov
or
rcl
xchg
hlt
dec
dec
cli
jle
mov
adc
dec
jle
lahf
mov
adc
mov
xlat
arpl
push
je
stos
sub
push
push
inc
push
push
mov
sbb
jle
sbb
mov
iret
jl
dec
mov
sub
inc
lret
hlt
pop
xor
imul
aas
stos
insb
cmpsb
sub
cmp
cmp
add
fisubl
scas
jae
fnstenv
inc
jns
fdivrp
gs
jnp
xchg
mov
jl
mov
mov
into
adc
mov
mov
int3
roll
test
int
cmpsb
fwait
xor
pop
push
push
in
mov
inc
inc
jo
xchg
mov
mov
xchg
lahf
lods
out
test
mov
movsl
stc
or
and
push
pusha
lds
into
adc
jp
dec
lods
and
mov
mov
xchg
stos
xchg
sub
bound
sbb
dec
scas
push
repz
ret
lret
movsb
cmp
lds
test
adc
sub
adc
in
fimuls
xchg
call
rcr
pop
ret
jecxz
fisttps
testl
or
push
sbbb
pop
shrl
sbb
push
jae
jl
mov
cld
push
sub
and
bound
stc
fimuls
loopne
mov
inc
lds
cmpsb
imul
aam
cld
cwtl
sub
inc
sbb
pop
inc
sub
fstl
test
sbb
addr16
je
sbb
call
or
loopne
icebp
pushf
adc
insl
push
test
sbb
mov
mov
lods
cmp
loop
fnstcw
enter
xor
jo
jle
insl
lahf
mov
lahf
lret
push
add
sahf
clc
sbb
sub
sub
sbbb
jno
push
adcl
scas
cmp
leave
loopne
bound
addr16
sti
pop
push
cmp
loopne
test
dec
shll
adc
pop
push
jle
xor
enter
dec
mov
push
insl
mov
sti
xor
insb
pusha
les
ror
jno
push
sbb
dec
jmp
mov
add
rcrl
out
or
xchg
fs
mov
or
add
inc
in
out
aaa
cmp
xchg
sub
mov
into
push
push
or
out
xor
xchg
shl
mov
push
dec
dec
and
mov
fadds
out
mov
iret
cmp
outsb
sub
inc
pop
cmp
or
add
dec
scas
shlb
xlat
sbb
pop
sbb
scas
mov
sti
mov
jp
xchg
cmpsl
jnp
mov
cmpsb
aad
jg
testb
shll
fists
dec
into
add
add
mov
inc
sbb
pop
mov
xchg
in
in
mov
sbb
mov
int
ljmp
or
movsbl
lcall
mov
push
lock
inc
jmp
jae
add
cwtl
fwait
push
out
out
adc
flds
cmp
jno
mov
outsl
jecxz
push
into
lods
add
pop
cmp
pop
test
mov
ficomps
mov
or
imul
pusha
dec
xchg
dec
cmp
push
leave
jg
fmull
test
test
lcall
aaa
dec
xchg
cwtl
xor
mov
daa
xchg
mov
std
lock
and
inc
gs
jecxz
inc
push
pop
inc
loopne
push
xchg
xor
jg
ss
imul
mov
lock
pop
dec
popf
pop
mov
outsl
in
pop
fs
fnsave
cmp
fwait
adcl
jl
aas
cltd
rol
xchg
loope
inc
mov
ret
lods
leave
pusha
cmp
pop
out
inc
mov
dec
mov
lds
add
and
push
rorl
pop
stc
xor
loop
pop
jne
xor
lret
push
push
popf
test
and
mov
mov
sub
xlat
pop
pushf
add
xor
inc
mov
lahf
and
movsl
shl
fildll
push
mov
sbb
and
cltd
mov
fisubrl
ljmp
mov
daa
lcall
push
or
andl
out
cli
mov
test
mov
dec
add
sbb
das
push
fwait
sti
or
addr16
pop
shll
cmp
xchg
dec
fcomi
lods
jae
cld
popl
ret
fiaddl
push
les
sub
idivl
and
dec
cs
pop
push
lds
adc
int
sbbl
das
xchg
mov
loop
inc
into
mov
mov
lds
loop
cmpsl
push
jno
ja
int3
xchg
loope
lahf
icebp
inc
sub
call
inc
aad
pop
bound
subl
sbb
outsb
das
jbe
mov
jecxz
je
jbe
sub
jne
cmpb
add
cmpsl
fdivrs
lcall
and
push
cld
xchg
test
cli
inc
stc
inc
je
push
pusha
insb
xchg
mov
out
jmp
mov
cld
mov
int3
mov
adc
sbb
arpl
mov
cld
xchg
adc
notl
or
in
xor
addr16
sbb
sbb
dec
cmpsl
xor
icebp
test
push
or
cmp
xchg
ret
outsl
pop
fsubrs
pop
jo
inc
aaa
enter
push
je
cmp
jle
es
jl
pop
fildl
adcb
fnstsw
aas
mov
add
andb
cmpsb
jp
iret
pop
fisubrs
mov
and
adc
loope
out
or
ja
out
icebp
dec
and
ret
cmc
fbld
adc
sbb
pop
dec
std
inc
fdivs
dec
rorb
icebp
incb
xchg
aas
lahf
aas
or
add
cmp
loope
aad
sub
int
lahf
mov
fisttpl
jns
fidivrs
outsl
cmpsl
dec
cmpsl
jns
jns
jg
sbb
mov
xor
mov
mov
pop
mov
notb
pop
xchg
insl
sar
or
xor
push
notl
inc
cmc
push
push
fmulp
lret
lret
pushaw
mov
mov
bound
jb
mov
adc
cmp
adc
lds
loopne
movsb
aas
sti
push
jg
fs
mov
lret
pusha
lods
jecxz
inc
sub
sti
nop
mov
sarb
pushf
fdivrl
adc
push
or
push
rol
je
mov
mov
pop
adcb
jg
adc
mov
mov
in
push
pop
lock
lret
add
mov
subb
sub
mul
mov
add
js
aam
dec
push
mov
fistl
pop
fiaddl
sbb
js
iret
in
int3
and
mov
pushf
dec
push
mov
push
scas
call
push
or
xor
fucomp
gs
out
push
lods
adcl
mov
jge,pn
push
jo
cmp
xchg
adc
movsb
lods
xchg
stc
xchg
push
sub
push
int
inc
fstps
push
call
mov
inc
sub
lahf
out
sub
imulb
dec
rolb
aam
xchg
or
pop
add
jbe
mov
adc
dec
ret
outsb
sarl
cwtl
lock
inc
aas
inc
repnz
mov
mov
mov
mov
cmp
mov
add
ds
xchg
ljmp
imul
fs
inc
outsl
push
sbb
mov
dec
or
ss
lret
outsb
cli
mov
jmp
sbb
pop
push
sub
cld
fnstcw
xor
mov
ror
ss
and
pop
hlt
dec
inc
mov
pop
adc
or
jae
sbb
lods
xchg
das
ja
je
push
sbb
mov
inc
es
lahf
fsubrl
pop
xchg
frstor
jg
dec
sub
insb
xchg
dec
iret
sbb
aas
icebp
dec
imul
scas
cmpsb
push
adc
lret
cmc
or
loopne
imul
les
pop
jl
lret
insl
test
xor
in
adc
dec
mov
push
ret
scas
sbbl
or
fmuls
imul
popf
rorb
es
test
test
push
pop
call
dec
xor
outsb
xchg
scas
ret
add
fprem1
push
xchg
jbe
out
pop
mov
sub
nop
jne
shrl
mov
and
mov
pop
fists
pop
call
cmc
out
aas
sbb
push
jae
sbb
xchg
stos
add
sub
sbb
das
je
idivl
mov
pushl
inc
pop
pop
inc
or
orb
hlt
scas
push
mov
outsl
in
mov
addr16
xchg
cs
adc
ljmp
cmc
int3
sti
xor
xor
mov
fistps
adc
mov
pop
out
js
fidivrl
and
in
negb
jae
dec
sarl
push
pop
add
inc
into
xlat
mov
mov
rorb
mov
add
cli
add
mov
lret
push
xchg
mov
dec
in
lods
pop
arpl
mov
inc
sbb
or
pop
push
dec
or
lds
or
push
pop
fsubs
adc
lcall
pop
scas
stos
pop
mov
fistpll
or
aad
xor
xchg
adc
add
mov
sbb
jne,pt
pusha
adc
rclb
sbb
adc
shrl
dec
movsl
push
int
dec
mov
je
jle
stos
add
xchg
pop
mov
mov
repz
out
imul
mov
dec
mulb
call
mov
dec
stc
cmc
lds
and
pop
xchg
sub
in
xchg
les
inc
dec
mov
jmp
shlb
mov
mov
push
shr
push
mov
repz
mov
jns
push
pop
divl
fmul
pushf
pop
jae
aaa
out
sub
hlt
lahf
rolb
adcb
out
xor
insb
inc
in
je
std
clc
cmp
pop
sub
pop
arpl
data16
pusha
add
sub
pop
xlat
xlat
jp
cltd
in
adc
add
adc
jbe
pop
out
dec
in
dec
xchg
cmp
sbb
popf
jo
inc
inc
andb
mov
push
hlt
test
mov
std
or
iret
into
mov
inc
pop
jnp
inc
out
inc
sti
fsubr
jno
addr16
jp
push
sbb
xchg
mov
pmaddwd
mov
mov
xlat
sub
aam
mov
xor
mov
out
es
daa
in
dec
xor
push
cmc
xor
or
ljmp
push
inc
pop
mov
cmpsl
lcall
scas
push
jl
fisttpll
sbb
popa
lods
push
inc
pop
push
xor
mov
jl
xor
lcall
xchg
in
push
mov
es
in
or
scas
jae
inc
sub
cmp
dec
mov
dec
sub
imul
dec
cmp
sbb
mov
or
adc
and
mov
aas
fwait
cld
jns
add
iret
and
jo
xor
pop
jg
jns
jns
inc
ret
pop
sub
dec
mov
rcl
dec
es
push
inc
sahf
sahf
sub
push
inc
sbb
stc
outsb
and
mov
jmp
pop
loope
lds
or
hlt
aas
and
inc
cwtl
xor
cmp
adc
lea
int
pusha
addb
adcb
in
push
jb
test
out
pusha
nop
daa
stc
test
sub
cli
adc
mov
cs
rcll
pop
icebp
out
jae
adc
cmp
dec
xor
or
imul
sub
mov
arpl
and
imul
mov
fsts
dec
add
adc
ret
arpl
repz
bound
sub
into
mov
in
sbb
out
das
sar
xlat
xchg
test
sub
test
ret
xor
xlat
leave
cs
sub
sub
mov
dec
test
mov
rclb
jmp
push
outsl
bound
mov
pop
pop
rorl
jp
cltd
movsb
dec
decl
xor
nop
std
lods
push
ljmp
push
daa
add
dec
pop
clc
cmpsb
add
stos
outsl
push
xchg
fisubrs
push
jbe
jns
mov
scas
sarl
mov
dec
loopne
add
fisttpl
sub
into
dec
mov
lret
jae
sub
stos
push
sbbl
cmp
mov
push
test
fidivrl
daa
out
out
bound
mov
cmp
lcall
call
dec
mov
test
insb
xchg
std
xor
mov
gs
mov
cmp
loope
dec
add
push
push
std
cmp
xor
sbb
lahf
leave
dec
mov
out
insb
adc
shrb
je
dec
xor
jae
pop
push
and
mov
or
jbe
dec
aad
repz
or
ja
or
lret
nop
gs
xchg
and
xor
sti
lret
dec
dec
jb
das
in
movsl
push
mov
movsl
and
cmp
cmp
inc
shlb
loopne
sbb
mov
lahf
test
adc
mov
hlt
push
jge
stos
pushf
cli
test
clc
xorl
sbb
frstor
jnp
les
js
and
xor
pop
repz
mov
sbb
mov
sub
xor
int
fbstp
out
xchg
icebp
sahf
scas
std
xchg
loope
mov
mov
lret
test
jbe
mov
sti
inc
push
neg
insl
jge
movsl
das
test
jne
xchg
out
jmp
sub
icebp
movsl
mov
sbbl
push
lea
jb
add
in
dec
mov
test
inc
sub
push
das
push
fisubrl
lea
jo
add
shll
jecxz
sbb
push
aam
in
mov
lret
jmp
cmp
repnz
pushf
xor
sbb
and
lahf
or
leave
push
push
daa
inc
movsl
fnstsw
imull
repz
pop
sbb
adcb
cmpsl
adc
xor
and
and
adc
test
pop
push
add
push
lcall
mov
mov
xor
mov
mov
mov
rclb
sbb
clc
inc
imul
mov
dec
outsl
jge
ret
stc
adc
dec
inc
or
pop
outsl
sub
push
sub
cs
pop
shrb
adc
add
jb
sbb
inc
xchg
push
mov
ds
mov
sbb
lret
mov
adc
loopne
subb
in
sub
and
cmp
arpl
test
scas
ljmp
lahf
movsb
fsubs
or
mov
push
mov
flds
popa
mov
push
mov
pop
push
xchg
insb
adc
outsl
sub
iret
cli
rcll
data16
fidivrl
mov
xor
test
popa
lret
into
push
loop
xor
xor
add
dec
jecxz
dec
push
popf
insb
xchg
les
dec
sbb
notl
in
pop
arpl
cmpsb
mov
loopne
es
stc
and
mov
and
cmpsl
shl
adc
popf
mov
xchg
jle
pop
xchg
cmp
mov
pop
insl
xchg
pop
xor
lods
stc
xchg
adcl
pop
jg
jge
test
mov
cmc
mov
mov
mov
leave
mov
outsl
jle
shlb
mov
subl
add
outsb
push
fwait
add
xchg
pusha
sub
cmpsl
xrelease
call
jmp
mov
mov
fistl
movl
or
sbb
std
inc
das
cmp
jne
insl
ljmp
sbb
push
insl
mov
dec
daa
or
addr16
sarb
out
and
dec
mov
jp
mov
test
cmpsb
outsb
ret
lcall
jbe
es
lret
push
movsb
jnp
or
sub
inc
mov
push
mov
xchg
jmp
int
sbb
cmp
cs
repz
stos
repz
ds
repz
sbb
sub
popa
add
adc
in
aad
mov
test
scas
jns
shll
xchg
cld
inc
lahf
stos
push
out
mov
fidivs
push
pop
in
xor
jle
xchg
mov
push
lahf
jge
loopne
mov
ljmp
adc
inc
scas
inc
xor
mov
out
dec
inc
fdivp
adc
sbb
push
loop
test
mov
repnz
xchg
mov
xor
jb
mov
xchg
ss
xor
cmp
mov
push
mov
sub
lcall
jo
cmp
mov
or
add
mov
imul
lds
into
add
dec
fsubl
cmpsl
push
pop
insb
sti
xor
push
mov
shlb
mov
cmp
out
cmovbe
es
insl
dec
jbe
sub
idivl
xorl
mov
jb
stc
xchg
aad
or
negb
mov
sbb
insb
subb
xchg
aaa
int
pop
mov
fxam
pop
fbld
push
fists
sbb
mov
xlat
fwait
jp
push
xor
add
pusha
repnz
cmc
mov
repz
aad
adc
fs
jne
lods
cmp
pop
xorl
loop
adc
pop
sub
inc
sbb
aam
scas
cmp
test
mov
ffree
testb
inc
mov
fdivl
xchg
das
ss
xchg
enter
mov
mov
adc
ja
jno
out
sub
add
xchg
in
iret
daa
mov
roll
mov
mov
arpl
jns
test
sbb
shrb
loope
ret
mov
sbb
mov
repnz
and
or
inc
fldt
adc
clc
xlat
push
es
push
jmp
ret
jmp
jg
sbb
stos
inc
sti
jnp
adc
aas
loopne
mov
or
in
push
mov
fists
fs
sbb
push
pop
and
dec
scas
ja
shr
mov
ljmp
lds
ret
pop
push
rolb
cmp
lock
test
pop
or
add
mov
sbb
mov
ja
aaa
push
jnp
adcb
mov
nop
imull
sbb
imul
jns
mov
in
mov
ret
stos
xchg
fbstp
adc
std
inc
cmpsb
insb
pusha
ds
stc
or
lret
lret
mov
insl
lock
pop
mov
mov
jb
psraw
push
add
mov
push
lods
sbb
cmp
xchg
xor
repz
fnstsw
sbb
cmpsb
fs
push
and
add
dec
sbb
mov
ja
cli
pushf
shr
cmpsb
in
dec
and
sbb
mov
push
mov
lahf
push
push
lods
popf
or
xor
mov
jp
jmp
sub
aaa
std
cltd
daa
mov
adc
ret
in
js
dec
xchg
push
in
jl
or
aad
scas
lret
gs
cmpsb
lock
pop
jbe
sub
mov
lret
jnp
aas
incl
jnp
xchg
fdivs
cmpsb
cld
je
xor
jae
inc
in
or
sbb
arpl
iret
lahf
int
lret
jp
mov
add
inc
inc
sub
adcl
push
out
xor
test
cld
pop
das
sti
push
fdivrs
dec
push
jb
aad
bound
adc
inc
sbb
mov
jae
imul
movsl
fidivs
sub
cli
mov
fisttps
es
decb
cmpsb
addr16
jb
sub
adc
int
push
popf
pusha
add
std
mov
xchg
mov
movsb
lcall
push
loopew
leave
leave
dec
pushf
dec
lods
lds
outsl
outsl
dec
push
mov
cs
xchg
xlat
rorb
or
les
outsb
inc
push
dec
and
pop
push
inc
sbb
xchg
es
ss
movsb
icebp
mov
popf
ljmp
sbb
leave
popf
add
es
lret
js
test
daa
scas
or
add
push
into
inc
out
in
cltd
pop
or
cmp
data16
stos
xchg
insl
pop
push
cltd
test
pop
xchg
mov
pop
lret
jno
sbb
cmp
xorb
or
inc
in
sub
push
and
dec
addr16
out
lods
shrb
jb
cmc
into
scas
xchg
ret
push
cmp
aas
iret
xor
pusha
addb
xor
cmp
jecxz
test
ret
test
sahf
neg
xchg
icebp
or
or
sbb
repz
jecxz
pushf
cmp
lock
cmp
push
and
stc
popf
sbb
dec
and
shl
mov
xor
sbb
lahf
int3
mov
push
iretw
lcall
xchg
iret
test
ret
and
push
pop
mov
mov
sar
mov
cmp
lods
or
shrb
adc
xchg
fstpt
pop
pop
pop
movsb
mov
hlt
leave
aam
xor
jp
push
pop
push
inc
fadds
pop
imul
pop
adcl
xor
cltd
ljmp
lock
dec
xlat
leave
xchg
gs
sub
in
mov
sbb
jbe
movsb
sub
int
jmp
add
in
ja
or
push
movsl
stc
jg
push
movsl
out
inc
popf
jge
sub
les
testl
sub
repnz
xchg
sbb
xchg
out
aad
lret
repz
fildl
ljmp
mov
add
cmpsl
in
cltd
adc
nop
xor
rorl
orb
mov
inc
xlat
aam
pop
loope
stos
mov
jle
loopne
sub
into
sbb
inc
fstl
push
lahf
or
push
pop
out
idivl
xchg
xchg
pop
negl
rcrl
or
rcrb
adc
cmpsl
ret
jnp
add
adc
xor
cld
and
stos
cmp
les
and
loopne
ror
mov
lock
mov
in
push
test
rclb
add
lock
adc
jmp
outsb
fists
popa
sbb
dec
ret
and
or
outsb
gs
xchg
lret
aaa
sarb
sub
lock
out
dec
xor
mov
lret
push
xchg
inc
mov
repnz
das
cmp
sbb
push
out
fbld
xchg
jl
sbb
call
insb
cmp
outsl
inc
outsl
lds
aad
inc
xor
jmp
daa
xchg
pushf
mov
stc
pop
sub
jae
cs
arpl
andb
add
inc
ds
or
enter
int3
add
into
pop
ss
inc
ret
call
mov
std
sar
cmp
setle
mov
dec
fildll
push
ret
mov
cmp
frstor
and
cltd
in
hlt
notl
mov
jecxz
and
mov
xor
ljmp
bound
stos
jne
jns
movsb
cmp
imul
mov
mov
cld
imul
mov
xor
xor
mov
inc
push
xor
fdivrs
stos
jmp
call
jae
sub
jge
imul
or
xchg
rclb
push
xorb
sub
movsb
mov
pop
out
pop
lock
push
jmp
fsubr
jmp
xchg
mov
lods
aad
or
xchg
push
int
mov
add
and
out
les
cmp
and
testb
xchg
cmp
push
mov
push
mov
mov
stc
mov
mov
fstps
je
jb
pop
xor
sbb
pop
scas
inc
mov
mov
repz
shl
adc
lret
mov
adc
push
int
inc
test
outsb
jl
mov
mov
jnp
xchg
mov
pop
jp
add
jne
push
xchg
shl
adc
data16
pop
scas
fnstcw
pop
jecxz
push
sti
xchg
mov
add
mov
adc
popf
mov
mov
mov
cmp
push
mov
nop
insb
mov
movsl
sbb
repz
mov
or
fcompl
mov
mov
fsts
push
xchg
pop
ja
adc
fsubr
test
bound
insl
int3
sti
iret
ret
fdivs
and
jae
adcl
daa
mov
icebp
pop
ss
lods
jmp
cli
add
sub
xchg
gs
imull
sub
enter
sti
pop
leave
sub
test
adc
mov
pop
std
dec
inc
lds
inc
push
ljmp
add
add
sbb
dec
inc
sahf
clc
jbe
cmp
sbb
jns
aad
lods
testl
xor
xchg
outsb
in
xor
insl
xchg
aam
mov
cmp
dec
pop
in
lds
imulb
push
add
lods
sub
and
flds
push
outsl
cmp
test
inc
subl
xchg
push
sbb
sbb
mov
xor
int
or
xor
mov
adc
mov
in
popf
xor
aas
es
fcomp
and
xor
scas
sahf
lret
in
mov
subb
adc
dec
mov
add
add
je
daa
and
pop
scas
mov
or
data16
add
adc
cmc
fwait
cmp
in
mov
sbb
add
test
mov
xchg
dec
add
repz
sahf
add
test
popf
cmp
movb
add
cwtl
sub
into
fcompl
lcall
iret
push
sbb
insl
stos
jle
pop
loope
or
rcr
xchg
repz
jne
pushf
or
inc
mov
jne
cs
mov
push
mov
push
cwtl
leave
fyl2xp1
leave
in
cmp
out
sbb
cmp
cmp
in
lock
pop
shrl
outsl
adc
and
gs
push
sub
fstp
mov
add
es
sbb
xor
fidivs
rcr
mov
mov
add
xchg
aam
popf
ljmp
popa
shrb
insl
cs
pusha
or
popf
mov
push
push
mov
stos
adc
lret
add
das
push
shll
hlt
push
fstps
ja
add
mov
seta
rcr
fistps
inc
lods
mov
iret
and
jbe
inc
pop
int3
test
js
sbb
sub
arpl
shrb
lds
fldl
jge
insb
xor
das
jl
jbe
stos
xchg
cld
nop
subb
xor
leave
inc
inc
xchg
pop
push
xchg
xchg
enter
mov
movsl
xchg
sbbb
ja
negb
jp
xchg
adc
push
mov
filds
incb
or
mov
mov
sub
adc
les
dec
cmp
lods
and
jg
leave
push
inc
or
fs
mov
js
shlb
sub
mov
mov
jmp
and
mov
cmc
ds
jne
ret
push
mov
inc
mov
pop
mov
push
insb
sbb
fimull
jle
xchg
test
bnd
mov
push
mov
or
xchg
mov
lret
xor
out
fucomp
sbb
xor
nop
mov
dec
rcll
sbb
push
iret
fdivrl
lret
fildll
das
add
fwait
je
sub
pop
sbb
mov
sub
in
inc
adc
test
jmp
sbbl
stos
mov
adc
push
stos
fnop
or
subb
call
lahf
aas
adc
fucomi
loop
ret
jmp
loop
sahf
push
repz
icebp
test
pop
mov
fstps
xor
repnz
mov
mov
push
cs
push
std
into
das
ret
jmp
adc
roll
and
push
cld
out
inc
cwtl
fs
fldenv
jmp
fidivrl
into
int
push
or
add
loop
xchg
and
cli
or
in
fiadds
xchg
sub
mov
sbb
jmp
mov
mov
movsb
lods
test
jo
sbb
and
cmc
mov
xor
adc
lahf
fs
jmp
ja
pop
out
sahf
fwait
xor
mov
mov
sarb
lahf
movsl
pop
pop
jns
rol
fnstenv
lods
xchg
dec
adc
dec
fsubs
mov
xchg
xor
push
adc
xor
add
in
icebp
or
loope
popa
push
ss
sbb
mov
scas
sahf
mov
add
sub
dec
popa
inc
cli
inc
cmp
xchg
inc
lods
addr16
lods
pop
cmp
in
jmp
or
repz
rcrl
fimull
xor
pop
pushf
push
push
mov
mov
xchg
frstor
mov
dec
test
xchg
outsb
xchg
and
sbb
pop
adc
and
popa
sub
imul
sub
xchg
loope
add
xor
ret
pop
mov
cmovs
pop
cmp
out
sub
jno
ja
jnp
adc
jno
loope
arpl
xchg
mov
insb
inc
test
cwtl
test
stos
sarb
mov
jbe
test
sahf
in
add
lcall
and
cmpsl
call
in
jns
loope
mov
push
andl
mov
das
push
in
faddl
push
xor
cmpl
inc
or
xchg
add
inc
sub
scas
jmp
jp
mov
mov
pop
stos
loopne
cmp
rcr
popa
inc
and
xor
inc
mov
push
inc
push
in
mov
std
aaa
mov
hlt
adc
and
mov
adcb
test
push
mov
push
cmp
inc
inc
je
daa
outsl
inc
mov
jae
fmul
in
loope
fdivrs
sbb
sbb
adc
test
mov
cmpsb
fiadds
loopne
sub
lret
mov
jne
das
je
aad
xchg
jp,pn
jmp
das
imul
and
imul
imul
jnp
xchg
and
xor
lret
addr16
xchg
pop
cltd
mov
xor
aas
and
decb
lock
lret
leave
adc
je
cmp
push
jo
adc
mov
xor
sbb
inc
or
mov
dec
xor
out
ja
xchg
mov
sub
stos
dec
inc
jl
stc
gs
push
xchg
pusha
sub
xchg
addr16
dec
dec
inc
mov
sub
push
rorb
pop
hlt
push
jae,pt
sbb
xlat
outsb
fwait
xchg
jns
mov
cmc
lea
or
aad
lods
sub
bound
mov
cmp
jno
xchg
pop
jl
inc
sbb
into
cs
cmp
test
xor
adc
lods
sub
add
cmp
addb
repz
add
cmp
jg
add
inc
lret
push
jecxz
push
pop
sbb
enter
push
add
sti
rolb
sbb
sub
outsb
cmp
pop
inc
add
sub
xchg
add
dec
add
in
sbb
inc
in
loopne
ljmp
mov
mov
in
add
adc
and
mov
push
mov
cmp
mov
sbb
mov
xor
mov
int3
or
std
in
dec
in
pop
push
inc
call
insl
cmp
and
aam
xchg
xor
jae
in
cli
sub
dec
testl
dec
inc
call
insb
pop
int
jg
mov
adc
pop
loop
and
mov
shrl
std
ss
ds
and
jbe
mov
test
mov
or
rcll
adc
int
stos
dec
add
pop
mov
mov
lds
and
and
sbb
mov
les
ret
jecxz
or
jae
mov
adc
cmpsl
jno
pop
hlt
popf
xchg
push
jmp
in
xchg
lcallw
sbb
mov
or
pop
and
push
lock
sub
int
scas
mov
insb
repz
fdivl
mov
cmp
adc
mov
dec
or
add
notb
push
jns
shl
adc
loope
fidivrs
rorb
shrb
loopne
pushf
test
ficoml
cmp
inc
popf
push
xchg
ljmp
test
pop
jecxz
mov
not
jl
inc
push
fdivrs
popa
mov
mov
js
adc
mov
push
fmul
jo
je
in
data16
inc
ljmp
mov
std
adc
and
pop
sub
aaa
bound
lret
fwait
pop
push
es
scas
or
sub
repnz
dec
mov
nop
mov
sahf
xor
adcl
fcmovnu
lods
mov
push
insb
incb
sbb
push
add
pop
cmp
fildll
pop
cmpl
pop
xlat
scas
sbb
fcmovb
cmc
jne
cmp
scas
push
push
pop
shlb
fwait
mov
je
imul
hlt
mov
aad
sbbb
jno
enter
cmpsb
adc
in
inc
lock
ss
outsb
in
stos
ret
std
test
adc
mov
repnz
jecxz
mov
mov
aam
pop
cmp
icebp
movsl
outsl
lods
lea
out
cld
and
lods
sbbb
stos
adc
js
arpl
mov
roll
mov
aam
jmp
test
lods
adc
inc
rcll
jmp
adc
push
in
pop
fisubrs
sbb
xor
je
add
mov
ret
data16
movsb
xor
stos
cld
jl
lahf
jge
cmpsl
ret
mov
jae
pusha
sub
dec
loop
lret
pop
mov
add
fwait
das
popa
mov
push
xchg
sbb
test
mov
pop
mov
cld
push
pop
push
sub
iret
scas
inc
sbb
imul
cltd
jg
adc
cmpsb
insl
adc
inc
scas
cs
loopne
mov
sbb
nopl
jbe
push
fsubrl
add
int3
add
nop
ljmp
lods
push
stos
dec
adc
sub
fsincos
jle
dec
jae
dec
movsl
call
aas
xlat
sbb
fnstsw
inc
push
pop
inc
jmp
mov
cmpsl
cld
mov
es
push
shlb
sbb
mov
hlt
ljmp
push
ja
or
rorb
addb
insb
and
lea
fnstcw
imul
inc
xor
or
xchg
ffree
insl
xlat
add
insl
int3
mov
in
pushf
bnd
push
std
xchg
shrb
sbb
outsl
push
call
mov
and
aam
sbb
testb
test
mov
push
push
jo
sub
xor
pop
gs
and
sbbb
std
lock
push
xlat
outsb
adc
sbb
divb
cmc
enter
iret
adc
int3
lods
fucomp
jo
in
push
jb
subl
faddp
insl
dec
pusha
pop
sub
sar
jl
adc
and
cmpsl
ret
mov
xor
je
push
jae
add
adc
nop
mov
fimull
std
fidivl
push
cmp
or
push
in
test
sub
mov
dec
sti
sub
sub
popf
cld
sbb
je
cmp
push
sti
dec
add
add
out
lds
cltd
add
xchg
push
fiaddl
mov
lock
adcl
sti
int3
add
ds
imul
pop
insl
jns
sbb
sub
mov
inc
inc
je
jno
mov
mov
jne
mov
xchg
adc
sbb
cmp
sbb
mov
addb
popa
popa
xor
dec
push
jmp
push
push
or
je
ss
jge
mov
outsl
cwtl
lea
adc
popf
jnp
mov
mov
adc
mov
mov
data16
mov
adc
sub
sarl
sbbl
mov
mov
lds
mov
in
ret
push
push
call
iret
data16
fiaddl
dec
mov
ja
jo
aas
xchg
xorb
sub
push
insl
sti
dec
mov
inc
and
mov
mov
dec
sbb
and
je
call
fisubl
into
and
push
push
jmp
xor
pop
mov
int3
out
jl
sub
dec
sub
and
into
push
cltd
dec
insl
shlb
fsts
xor
mov
fnsave
cli
cld
add
sbb
push
jo
or
lret
xchg
mov
es
test
jle
dec
mov
jle
inc
lret
ret
outsl
xchg
call
xor
dec
jge
jg
mov
lock
dec
jnp
mov
xchg
repnz
lcall
and
jp
rcll
test
xor
popa
push
out
addl
pop
fidivrl
test
testl
shll
cld
pop
xchg
test
pop
inc
fimuls
and
add
mov
and
daa
pop
mov
or
xor
push
jp
push
pop
jb
pop
sub
jecxz
cmp
sub
pop
lcall
scas
adc
add
addr16
inc
lret
enter
inc
int3
int3
dec
push
xchg
inc
pop
mov
lds
js
jle
push
adc
and
adc
cwtl
sbb
push
out
ret
stos
jbe
gs
dec
loopne
cld
inc
push
dec
dec
adc
dec
pop
stos
or
pop
and
sbb
aad
jno
mov
aas
push
vmovlpd
mov
jle
jl
in
lods
jmp
pop
imul
lcall
dec
stos
sub
or
dec
dec
push
cmpsb
test
push
pop
mov
sbb
jbe
test
shlb
adc
sbb
lock
aas
negb
mov
movsb
imull
jp
mov
stos
in
add
sbb
sti
adc
mov
leave
mov
jbe
fidivrl
sub
movsl
add
mov
test
mov
add
adc
sbbl
xlat
loopne
ret
jge
xorb
sahf
mov
xchg
lahf
adc
add
add
push
repnz
ja
push
js
test
jl
inc
and
mov
mov
insl
push
shrb
movsl
push
xor
inc
sbb
jne
nop
push
ret
or
dec
add
test
xlat
mov
pop
loope
stc
push
rclb
add
cmp
insb
sub
in
ds
mov
add
jae
adcl
xchg
inc
and
xchg
xor
lret
pop
sub
arpl
push
outsb
mov
ss
adc
pop
pop
mov
mov
ret
xor
xor
stc
popf
sub
repz
loope
jb
add
and
sbb
divl
push
cmp
inc
pushf
sbb
jp
xor
mov
xor
mov
in
mov
adc
push
mov
xchg
push
inc
mov
inc
sbb
test
mov
daa
les
adc
stc
add
xchg
adc
mov
and
pop
imul
shl
stos
mov
fstpt
std
cmp
mov
push
xor
jmp
pusha
jp
aaa
sbb
push
cmp
xor
das
xchg
push
sub
fldcw
popa
lods
shufps
aad
dec
nop
pop
cmp
adc
push
xor
cs
adc
leave
inc
pop
arpl
jmp
int3
out
lcall
and
or
add
daa
mov
adcb
jp
jno
stc
out
or
pop
ljmp
mov
jno
mov
cmp
inc
inc
xchg
xor
add
pop
dec
fidivl
mov
rcll
cmp
outsb
sub
xchg
jb
pop
cmp
sub
sbb
mov
adc
ss
in
in
rclb
inc
and
xchg
jp
inc
dec
or
lock
ds
or
leave
mov
dec
scas
inc
imul
sti
fidivrs
add
dec
pop
cs
outsb
jl
daa
or
in
xor
cmc
xor
inc
shrb
jno
pop
push
lcall
dec
aas
jp
repnz
mov
iret
xchg
lea
stc
dec
das
or
dec
icebp
sbb
and
ja
out
push
mov
std
lret
cmp
jno
mov
pop
call
fsubrs
test
dec
sbb
les
pop
cs
lock
arpl
and
mov
mov
jae
fildll
data16
orl
cmovnp
aas
jo
fsubrl
popa
imul
xchg
iret
pop
insl
ret
jmp
cld
pop
mov
sbbl
mov
mov
adc
lcall
jnp
call
lcall
cld
or
rcl
in
add
adc
add
je
rcrb
xchg
mov
push
mov
sub
fldl
pusha
lock
lcall
mov
cmp
pop
test
ret
cmp
xor
daa
adc
aas
mov
outsb
sbb
cmp
test
inc
mov
push
repz
jbe
xor
push
repnz
call
pop
insl
ret
jl
out
mov
pop
shrb
or
push
xchg
xor
add
sbb
add
or
and
xchg
arpl
push
push
test
pop
out
icebp
mov
popa
lea
call
xor
leave
mov
aas
repz
mov
fnstenv
clc
or
enter
mov
xchg
ret
test
and
xor
push
jo
sub
sbb
sbb
and
gs
sub
in
add
push
inc
lods
ljmp
popf
and
add
int3
jbe
cmpsl
xor
mov
mov
push
cltd
in
popf
pop
inc
fcmovne
lret
sti
ljmp
dec
mov
pop
mov
inc
inc
lahf
mov
add
or
jne
or
cmp
cmp
push
pop
mov
int3
lods
lods
inc
xlat
out
jno
xchg
clc
lret
mov
outsl
stos
sub
dec
sub
dec
in
in
sbbb
arpl
stos
fistpl
sub
pop
fs
test
xchg
in
ljmp
sub
pusha
in
cmp
mov
loop
xchg
sub
add
mov
dec
ja
sub
shl
mov
jecxz
addr16
dec
push
mov
cltd
inc
scas
dec
popf
push
arpl
push
and
inc
fucompp
std
insl
mov
lahf
push
shrl
xor
out
xchg
adc
and
test
dec
adc
pop
push
js
jmp
xchg
fsubrs
fs
push
cmpsl
xchg
test
push
fistpl
sub
mov
rorl
or
xlat
jl
cli
lods
mov
inc
sbb
movsb
xchg
xchg
and
fistl
pop
mov
rcrl
hlt
arpl
das
pop
iret
pop
jno
mov
faddp
gs
or
inc
mov
cli
mov
mov
push
cmpsb
insb
sub
addr16
js
gs
pop
xchg
or
xor
dec
sbb
pop
ja
cmp
daa
sub
insb
jle
mov
ret
push
daa
mov
sbb
cld
testb
pop
mov
jmp
xorl
and
inc
pop
push
imulb
out
sbbb
fnsave
pop
push
jae
jnp
pop
xchg
frstor
and
xor
lds
inc
dec
in
dec
adc
cwtl
imul
sub
sbb
inc
push
ja
lcall
adc
dec
mov
fcmovnbe
mov
add
add
lret
jge
mov
adc
xchg
cmpsl
cltd
fsubl
lret
mov
add
mov
fwait
xor
enter
xchg
decb
push
test
inc
adc
int
mov
mov
not
or
or
aad
or
cmpsl
insl
iret
and
jns
xchg
data16
cs
movb
xchg
xor
sub
cmp
into
incl
ret
loopne
pop
push
sbb
clc
jo
pop
sub
cmpb
push
daa
fldt
xchg
aam
jb
es
ret
daa
or
pop
adc
sbb
xor
dec
and
in
add
inc
mov
aad
sub
cmp
mov
jecxz
add
call
cmp
push
jns
mov
and
xorl
inc
add
adc
and
lods
lds
jne
adc
movhps
or
jle
cmp
pop
jmp
aaa
das
pushf
mov
fstpl
sub
and
pop
out
xlat
call
cltd
mov
mov
in
ja
xor
xlat
fnsave
je
out
inc
add
mov
mov
sbb
sbb
icebp
cwtl
mov
sub
insl
vpmaxsb
sbb
jnp
cmp
aad
testl
fisubl
scas
inc
jo
adc
fiaddl
sbb
in
adcl
sahf
popf
lret
fcomip
mov
sahf
adc
pop
popf
outsl
add
scas
push
xchg
push
call
push
xor
test
jle
add
lcall
test
shlb
mov
fucom
mov
inc
jg
adc
repnz
xor
ss
jne
mov
mov
mov
adc
xchg
cmp
inc
mov
pop
push
xlat
sub
sub
mov
ret
dec
jge
sahf
in
push
lcall
mov
lea
loopne
insl
cwtl
sub
ds
imull
xor
xchg
mov
insl
mov
rclb
mov
mov
in
push
rcrl
faddl
bound
cltd
test
sub
pop
or
jg
out
push
es
aaa
xchg
into
pop
idivb
mov
mov
mov
push
leave
push
test
ja
inc
leave
xchg
imul
dec
lock
repnz
addl
fwait
aad
int3
stos
lahf
sbbb
dec
loope
test
ja
push
filds
jle
movsb
scas
lcall
cmp
loop
mov
icebp
pop
push
aas
iret
shll
jp
scas
inc
je
icebp
xor
pushl
cmp
pop
or
and
mov
ss
mov
xor
sbb
sbb
pop
mov
mov
out
fs
dec
sbb
sbb
imul
mov
outsb
fs
push
dec
cwtl
xor
mov
imul
inc
cmpsb
jle
int3
out
lahf
jbe
icebp
popf
test
jecxz
sbb
inc
mov
or
movsl
cmp
xlat
jp
loope
and
adc
movsb
inc
das
shlb
fs
mov
xlat
cmc
js
push
lret
test
stc
xchg
push
fsubrs
push
jl
loope
and
xor
lahf
arpl
stos
fdivrs
pop
js
scas
inc
xchg
push
notl
jge
jle
aad
or
pushf
push
or
cmp
test
cmp
dec
fsubrp
jae
dec
scas
and
cmc
shl
fcomps
gs
or
ret
xor
insl
pop
or
lds
aas
out
xchg
pop
jle
mov
or
push
jae
lock
mov
lds
fisubs
into
pop
push
icebp
mov
jl
loope
push
xor
mov
sub
jle
xchg
dec
pusha
dec
loop
push
and
dec
push
cmpsl
hlt
push
stc
and
xchg
push
or
cmpsl
cmp
test
push
out
rcrl
mov
andl
xor
and
mov
push
mov
cmp
inc
idiv
pushf
xlat
mov
jl
aam
lcall
pop
mov
andl
push
adc
repnz
ja
sahf
xchg
xor
mov
sbb
mov
cmp
add
inc
and
or
pop
bound
pop
xchg
mov
mov
es
xchg
jmp
pop
add
mov
push
pusha
movsb
out
enter
shll
push
push
mov
lods
sub
ret
pop
push
and
add
nop
loop
or
xchg
out
lock
lret
mov
popa
sbb
xchg
sub
fs
in
ficompl
das
jp
mov
lods
lret
mov
push
lcall
and
pop
gs
jmp
sti
inc
gs
mov
xor
rolb
cwtl
add
pushf
cmpsl
iret
daa
mov
jno
cs
xchg
adc
nop
in
das
clc
xchg
js
inc
xchg
or
mov
flds
dec
into
cli
cld
fsubrl
int
push
mov
and
je
shrb
iret
pop
jl
mov
cmpsb
sbb
loopne
push
jmp
xor
inc
cmp
mov
push
mov
add
jge
jg
les
das
aaa
push
xor
pop
dec
push
cmpsb
dec
xchg
pusha
insl
test
push
out
dec
jb
test
int
lea
aaa
movsb
push
cmpsl
adc
js
fildll
and
ds
mov
fdivr
pushf
lret
ss
cmpsb
and
and
out
mov
lods
mov
dec
push
push
les
loope
mov
jl
push
mov
decb
stos
sbb
and
xchg
stos
aaa
leave
int3
pop
sti
push
pop
icebp
test
fs
js
jne
xor
mov
mov
dec
outsl
pop
mov
pop
xchg
push
rorb
aas
arpl
out
adc
mov
or
cmp
push
pushf
sub
add
inc
iret
and
sbb
mov
std
repz
push
pusha
inc
and
es
lock
dec
inc
jne
aad
loop
mov
sbbl
dec
jge
idivl
mov
fsubrl
rcr
adc
roll
sub
or
adc
mov
idivl
inc
xchg
stc
xchg
lea
and
aad
ljmp
in
jmp
push
imul
mov
pop
out
mov
fidivs
pop
inc
fmull
and
mov
mov
mov
pop
mov
add
push
shrb
ret
inc
and
push
in
test
outsl
ss
push
jp
sbb
dec
pop
inc
push
out
je
shrb
shl
mov
into
fs
enter
mov
cmpsl
inc
aam
mov
push
mov
negl
lds
pop
jae
fld
imul
aas
imul
test
pop
xor
in
dec
test
sub
sbb
aas
push
in
insb
mov
adc
mov
xchg
test
sti
or
addb
adc
mov
mov
adc
loopne
push
lea
mov
xchg
idivl
pop
add
xchg
repz
fisttps
jbe
inc
sub
idivl
pushf
scas
pop
sub
push
popa
mov
in
test
push
or
mov
filds
fsubrs
jo
enter
jns
repnz
jbe
cs
add
in
sbb
push
xchg
aaa
jnp
insb
and
inc
jle
pop
add
int
gs
pop
insl
add
jo
mov
andb
sbb
inc
popa
fmul
aaa
loop
push
sahf
mov
or
dec
push
adc
xchg
cmc
adc
dec
jmp
sbb
cmc
arpl
fwait
sub
je
rcrl
aaa
or
gs
icebp
inc
in
lret
out
push
cwtl
push
inc
lcall
ds
mov
lds
jp
je
jnp
and
cli
fdivp
sub
pop
adc
stos
lods
add
fmulp
xlat
stos
pop
push
popa
ret
mov
cs
cld
inc
inc
popa
add
out
xchg
and
mov
addr16
mov
cmc
cmp
aam
addr16
rcrb
stc
pop
xchg
mov
mov
sahf
add
shll
clc
xchg
xor
dec
movsl
mov
push
pop
in
mov
adc
enter
mov
sub
inc
rcll
mov
add
fildl
pop
mov
or
push
aam
add
jmp
jns
aas
lock
sub
dec
xchg
lcall
mov
mov
adc
jl
pushf
or
dec
inc
xlat
jle
pop
push
fcmovnu
cmp
scas
mov
shrb
je
jmp
mov
fnsave
imul
pop
outsb
sub
fcoms
js
lcall
mov
and
inc
mov
xor
das
push
sub
divl
fs
inc
jne
insl
in
clc
sahf
ret
mov
add
lods
sbb
js
nop
out
cmc
aas
dec
xchg
bound
and
fimuls
pop
and
sbb
fs
mov
mov
inc
popa
pop
lods
mov
in
loope
fcompl
aam
stos
andl
adc
decb
cmp
out
or
pop
daa
mov
jg
mov
lcall
daa
insl
rol
cmp
loop
adc
ja
bound
push
pop
in
xorl
add
jne
aam
adc
pop
mov
jge
pusha
stc
mov
jmp
or
lock
xchg
ficoml
push
jb
mov
stos
mov
xchg
rcll
nop
aam
ret
mov
loope
push
test
cltd
hlt
aaa
adc
push
xchg
mov
inc
rcrb
jno
cmp
repz
cld
xchg
jmp
mov
in
cmp
lcall
sub
pop
ja
push
loopne
mov
push
cmpsl
pop
neg
je
into
sbb
pop
daa
cmp
insb
aam
lret
jae
inc
das
mov
popa
popa
add
iret
les
cmpsl
outsl
gs
jg
and
notl
add
sti
add
stos
fld
sub
int3
xor
pop
popa
movsb
mov
mov
lds
bound
and
mov
cli
pushf
push
cmp
xchg
xchg
jp
rcrb
out
aas
shlb
push
mov
sbb
ds
imul
add
outsl
imull
movsb
push
notl
lds
push
sub
jle
testb
fisttpll
pop
fsub
imul
cmp
mov
fbstp
loopne
or
xchg
idivb
or
adc
pop
pop
cli
mov
xchg
bound
insb
outsb
add
lock
pop
and
push
adc
outsl
mov
cmc
sub
xchg
xchg
mov
dec
jns
movsl
nop
adcl
add
dec
mov
jmp
nop
and
fidivl
andl
mov
add
scas
ss
sbb
lret
roll
imul
sbb
pop
mov
mov
and
fildl
aam
sub
arpl
bound
scas
cld
mov
sbb
sbb
pop
add
in
call
jp
push
xchg
mov
aam
cli
movsl
jb
iret
aad
pop
mulb
dec
dec
push
fldenv
or
icebp
push
les
pop
cmpsb
jl
es
or
mov
out
adcb
mov
out
mov
jae
mov
lock
outsb
imulb
fcompl
mov
sbbl
into
mov
add
test
push
out
popf
fiadds
in
sbb
or
xchg
add
mov
lea
jb
bound
mov
mov
insb
lahf
jle
rcrl
ljmp
inc
xor
jno
push
push
push
in
mov
insb
fidivs
mov
movlps
mov
imul
push
in
sbb
dec
nop
xor
push
cmp
dec
jnp
aam
mov
dec
loopne
imul
lcall
pop
rcrb
loop
and
mov
xor
add
faddp
fwait
mov
cld
mov
ret
sbbl
cmc
fbstp
pop
sub
popa
std
loope
jae
cmpsl
divb
clc
or
in
mov
mov
add
ds
fidivrl
imulb
neg
adc
les
sbb
shl
cmc
loop
push
popf
scas
cmp
mov
addr16
and
rcr
sbb
insb
adc
mov
das
and
mov
mov
pushf
jo
aam
mov
pusha
mov
add
repz
arpl
test
xorb
outsb
movsl
jae
xlat
and
sub
in
jne
stos
add
push
jle
xchg
pushf
xor
lods
enter
mov
test
ds
pop
dec
nop
pop
roll
iret
cmp
lret
nop
out
cld
sarl
gs
cmp
inc
insl
sub
insl
nop
mov
inc
or
sub
lods
or
sti
mov
push
xor
test
pop
mov
lock
ljmp
out
mov
fnstcw
pop
jl
or
stos
add
push
aaa
xchg
sub
or
leave
and
lods
enter
lods
ljmp
mov
in
icebp
lods
or
jmp
lcall
loope
shrl
arpl
jle
sbb
dec
out
mov
scas
sub
add
lock
rcrb
pop
clc
push
add
mov
mov
int
aaa
or
push
out
mov
bound
push
int
or
ret
xchg
jle
lea
icebp
dec
sub
fsub
xchg
mov
cli
ljmp
dec
or
ss
jno
mov
push
sahf
test
mov
cmp
inc
sub
in
sti
dec
enter
or
xor
and
xorb
mov
fisubl
or
sti
adc
scas
repnz
sbb
mov
ja
mov
sbb
cmp
test
out
jno
xchg
mov
cltd
out
js
mov
popa
sbb
je
mov
imul
xchg
std
inc
dec
xchg
cmp
cs
pop
idivl
mov
cmp
add
dec
jae
bound
sbb
dec
lcall
iret
lods
or
mov
sub
cmp
and
mov
mov
dec
je
mov
jecxz
fs
bound
addr16
sub
insl
push
pop
imul
xchg
sub
jmp
mov
repz
dec
xchg
jmp
cmp
push
xor
out
mov
cmp
jmp
aam
addb
scas
lret
push
imul
ret
repz
ljmp
sti
mov
push
jne
arpl
dec
addr16
cmpsl
leave
ds
jp
mov
mov
mov
cs
out
ja
mov
hlt
sub
dec
push
xor
test
cmp
cmp
ljmp
add
repnz
scas
popa
rclb
repz
test
pop
movsb
push
push
add
clc
cmp
mov
popf
je
lret
jb
jmp
sub
mov
push
jmp
or
fsts
mov
mov
fidivrl
xchg
jns
fidivl
rcrl
pop
fnstenv
lock
enter
gs
lea
ds
pop
lock
pop
mov
and
dec
imul
aas
clc
pop
js
mov
xchg
sub
addl
arpl
in
and
mov
sarb
rcrb
aam
sub
sub
in
in
test
jae
and
fsts
inc
jae
mov
sub
bound
pop
jge
jge
jae
jnp
pushf
stos
dec
pushf
sbb
arpl
int
cli
inc
mov
pop
jmp
sti
xchg
out
scas
imul
lahf
in
andb
pop
push
push
mov
fidivl
inc
cwtl
call
cmp
mov
xor
dec
aaa
std
pop
imul
mov
movl
fdivp
js
outsb
mov
cld
fsubrs
test
inc
pushw
add
icebp
leave
mov
jecxz
pop
mov
mov
jno
sub
mov
and
movsl
lea
push
popf
mov
sub
stos
cmp
xor
rorb
mov
adc
fstpt
adc
loope
pop
jo
inc
daa
js
cmp
sub
jo
or
repz
mov
mov
push
shll
or
pop
ljmp
pop
stc
loopne
out
and
aas
loopne
aas
dec
xchg
inc
push
int3
inc
call
cmp
mov
ret
ja
cli
int
fcoml
mov
bound
out
dec
dec
fldt
lods
dec
jns
xor
fwait
push
mov
iret
shlb
notl
fistl
xorb
jno
sub
pop
adc
push
pop
xchg
int3
add
loopne
and
gs
mov
adc
push
or
rcl
shl
insb
add
leave
mov
add
stos
nop
and
imul
fwait
xor
ds
dec
push
in
xchg
fdivl
pop
scas
mov
dec
imul
jp
adcl
stos
add
jo
fs
and
pop
scas
push
jns
ds
jg
mov
cmpsl
jg
cmpsb
mov
lods
adc
jbe
das
icebp
sub
push
jmp
push
into
jmp
sbb
xchg
cmp
call
mul
add
js
test
fs
cmpsl
out
lods
shlb
int
and
lahf
push
movl
xlat
jecxz
loope
mov
enter
shrb
xchg
mov
add
mov
cmp
imul
leave
sub
out
inc
rcrl
mov
imul
sti
call
xchg
fs
cmp
add
imul
and
leave
insl
fdivr
pushf
push
mov
sahf
xor
outsl
push
and
and
cld
nop
js
aaa
mov
sbb
mov
inc
mov
pop
mov
pop
pop
je
mov
add
arpl
jnp
mov
cltd
loopne
sti
pop
testl
loop
aad
int
test
mov
in
xor
andb
ret
and
lret
bound
mov
xchg
jno
push
in
push
gs
sbb
push
daa
mov
mov
pop
mov
sbb
lods
out
push
sbb
jle
imul
fdivl
xor
jp
mov
mov
add
inc
or
mov
lret
pusha
iretw
xchg
cmc
xor
sarl
push
mov
mov
daa
dec
jge
lcall
sub
add
ds
jo
lahf
pop
mov
push
shrl
movsl
das
add
adc
dec
mov
mov
push
and
inc
inc
fsubrp
xchg
ret
mov
mov
xor
out
mov
cmp
lret
add
scas
push
inc
and
fistpl
pop
mov
ss
cmp
push
sub
and
mov
xchg
mov
dec
ds
daa
sub
adc
jge
and
push
mov
pop
push
and
adc
out
mov
dec
lret
fwait
jmp
pop
push
stos
cmpsl
or
test
loope
outsb
rorl
test
aad
sub
or
sbb
aad
rorb
lods
xor
vsubpd
cmp
in
add
sub
pusha
lahf
sub
push
push
bnd
and
int3
addr16
pop
out
lret
sti
adc
xor
xchg
jp
xchg
cwtl
out
fists
in
scas
ja
daa
and
pop
pop
inc
fmull
arpl
jno
xor
rol
push
add
sbb
int3
in
pop
cmc
xchg
fldl2t
sbb
inc
jmp
cltd
imul
aaa
scas
scas
or
mov
jne
mov
lock
xchg
mov
xor
sbb
mov
stos
mov
data16
mov
xlat
fdivs
dec
mov
mov
les
xlat
mov
ficoml
test
adc
call
or
ds
add
xchg
inc
fwait
scas
test
lret
ror
xor
mov
sbb
test
adc
mov
xlat
insl
mov
ret
arpl
xchg
jge
adc
jle
sub
stos
std
mov
push
test
mov
cmp
call
dec
jle
repz
mov
daa
mov
das
inc
mov
fists
sub
inc
orb
popf
es
les
cs
in
outsb
fwait
inc
lret
dec
mov
xchg
xor
cmp
std
xor
inc
pop
adc
std
adc
movl
adc
ljmp
inc
ljmp
lods
mov
loope
gs
out
fbld
cmp
pop
insb
push
jmp
mov
adc
lret
es
adc
fwait
sub
mull
mov
pushf
repz
lods
mov
jg
jle
mov
push
adc
dec
lcall
xchg
lock
sbb
sub
and
mov
lds
xor
in
mov
cli
dec
pop
adc
push
mov
clc
jnp
repz
add
ja
sbb
sub
xor
std
sbb
out
movsl
cmp
les
enter
addr16
pop
pop
or
pop
add
addr16
pop
lods
push
push
stc
test
addr16
loopne
add
pushf
inc
dec
and
mov
jbe
imul
shl
leave
cmpsl
xor
cmp
andb
xchg
mov
scas
outsb
daa
add
mov
cltd
ffree
mov
inc
xchg
add
lret
push
sub
cmp
dec
sub
or
rorb
lret
daa
cmp
jns
out
int3
stc
std
aad
in
lahf
cmpb
insl
inc
rcrb
pop
test
adc
rcl
loop
and
mov
ret
mov
fildl
stc
jbe
xchg
test
stos
je
mov
mov
nop
nop/reserved
mov
test
shll
mov
pop
sub
cmp
movsl
hlt
push
xor
sbb
notb
push
jo
subl
test
mov
xchg
jle
lds
pushf
inc
shl
andb
sub
mov
iret
adc
add
es
data16
mov
sub
cmp
in
add
adc
sahf
mov
push
imul
stos
in
push
daa
lahf
idiv
mov
dec
lcall
or
daa
setle
les
rcll
stc
mov
ret
sbb
in
push
jbe
push
sbb
repnz
mov
add
sbb
xor
std
and
in
jmp
inc
shlb
dec
push
mov
inc
cmp
divps
cmp
dec
adc
inc
cmp
jp
fsubrs
sbb
jg
inc
daa
jg
and
icebp
ja
notl
pop
clc
inc
push
lods
arpl
and
adc
push
cmp
out
mov
push
lret
bound
outsl
jnp
es
mov
aad
aaa
lods
dec
jne
pop
xlat
enter
jl
sahf
repnz
lds
cltd
cmp
jl
loope
and
clc
mov
jp
lods
lret
pop
lahf
xor
mov
xchg
cmpsl
push
adc
stc
mov
std
les
mov
mov
xchg
cmp
adc
mov
movsb
jecxz
xchg
or
cmpl
jecxz
je
jb
jne
mov
dec
movsb
imulb
and
jno
xor
es
mov
clc
xchg
js
cli
inc
arpl
push
cltd
sub
loope
sbb
jmp
push
hlt
mov
adcb
aad
cmp
cltd
cmc
xchg
cli
jp
ret
dec
mov
into
mov
loopne
cmp
mov
inc
outsl
int
test
jge
pop
imul
mov
inc
ret
jl
ret
push
in
sti
mov
dec
fs
adc
inc
mov
mov
stos
xor
sbb
sbb
mov
imul
jp
xlat
inc
movsb
fwait
mov
ret
pop
jne
dec
shl
jb
cmp
cmpsb
dec
mov
cwtl
sbb
mov
imul
cld
mov
pop
mov
iret
xchg
outsb
in
jl
push
aam
dec
addr16
lcall
dec
mov
or
decb
dec
cmpsb
mov
dec
fcom
pop
cmp
and
clc
sbb
ss
or
xor
in
add
sub
cwtl
xor
mov
cmc
dec
cmpsl
notb
mov
dec
in
ja
rorl
test
pop
jmp
mov
outsl
jle
mov
jno
lahf
and
outsb
mov
nop
cmova
popa
xor
push
sbb
nop
std
inc
fidivs
mov
cmpb
ret
in
dec
cmpsl
es
sub
adc
lods
shl
gs
sub
icebp
movsl
outsb
add
outsb
idivb
mov
and
cmp
inc
andl
repnz
sub
cmp
daa
cmp
nop
add
xchg
imul
xchg
mov
ret
jmp
lahf
xchg
pop
push
add
movsb
cmp
or
shrl
enter
cmc
inc
fidivl
push
imul
jns
cs
push
pop
adc
es
cmc
mov
xchg
sub
cmp
outsl
mov
xchg
lahf
imul
pop
sbb
fmuls
in
mov
fists
mov
pop
push
xor
cmp
arpl
push
jmp
test
out
test
aam
mov
call
or
cmp
js
mov
sahf
xor
ret
sahf
xor
and
mov
std
clc
loope
rcll
mov
or
mov
pop
xlat
movswl
inc
cmpsl
pop
xchg
push
test
stc
jo
mov
bound
bound
fs
mov
out
lcall
pop
adc
out
sub
rcrl
inc
mov
jl
mov
andb
int
jb
ret
out
aas
add
xor
dec
inc
out
ja
aaa
aad
mov
push
xchg
push
mov
idiv
push
push
add
inc
mov
push
xchg
movsb
pop
jge
adcb
push
jp
xor
fwait
shrl
loope
mov
arpl
inc
jae
or
out
cmp
in
mov
mov
jae
xor
in
sub
and
es
das
xchg
inc
int
xor
mov
xchg
or
scas
in
rclb
sub
sbb
cwtl
pop
inc
mov
aas
clc
loopne
mov
into
jb
adc
pop
inc
pop
lock
cmp
sbb
add
les
sub
in
lcall
mov
fcompl
paddusw
dec
jns
shll
xor
adc
pop
cwtl
adc
and
clc
lahf
and
xlat
imul
mov
es
mov
inc
adc
and
and
cs
jne
jb
xchg
jge
push
inc
pop
push
cmpsb
xchg
push
mov
movsb
insb
repz
pop
enter
lds
cmp
lea
sbb
lret
aad
jmp
out
cld
insb
jl
fdivp
sbb
test
lods
inc
addr16
sbb
mov
xor
push
loop
mov
adc
insb
imul
dec
ljmp
faddl
ljmp
xchg
jns
mov
pop
and
cmc
xchg
stos
adcl
mov
pop
mov
test
sbb
pushf
repnz
pop
lret
jecxz
cld
jge
pop
ret
cwtl
sbb
add
loope
lret
xchg
xchg
inc
clc
incl
dec
jmp
ja
push
clc
add
jp
and
stos
add
int3
lods
sbbb
adc
fisttpll
and
mov
mov
push
fisttpll
add
push
add
dec
dec
mov
add
int3
setle
push
dec
xor
or
andb
iret
jbe
mov
fisubl
mov
adc
dec
enter
ss
lea
in
test
lods
xor
xor
or
and
lods
xor
enter
fisubrs
mov
inc
jle
jo
mov
and
mov
xchg
sub
push
leave
sahf
aam
mov
jnp
leave
jo
inc
cmp
xor
lock
or
hlt
shlb
inc
cwtl
jbe
pop
fistpll
and
lret
inc
push
rorb
dec
push
push
stos
jae
mov
xchg
cmp
push
jae
push
cwtl
loopne
and
pop
mov
fistps
imul
sbb
std
mov
icebp
adc
inc
and
add
jle
outsb
inc
fwait
pop
xchg
mov
xchg
test
xchg
fs
add
mov
push
jne
push
xchg
movsl
cmp
dec
or
call
test
adc
pusha
insl
add
negl
movsl
ret
in
loop
pop
jnp
add
mov
jmp
jp
test
rorb
leave
je
or
ds
insb
dec
pop
and
pop
add
adc
jno
adc
sub
aaa
outsl
ret
popf
dec
jecxz
xchg
scas
in
dec
cld
lret
call
mov
fistpl
pusha
mov
in
sbb
clc
aam
mov
push
das
jg
fldl
adc
jne,pn
or
fldt
lahf
inc
jb
adc
pop
xchg
leave
pop
mov
popl
xchg
decb
mov
lret
xchg
pop
repz
je
lcall
push
pop
scas
mov
xchg
mov
add
and
mov
pop
cmc
dec
std
adc
cmpsl
push
cmpsb
jmp
jl
sahf
or
scas
xchg
popa
sbb
push
fnsave
loopne
jbe
mov
add
icebp
pop
sti
mov
xchg
lcall
pop
mov
sarb
fisttps
sbb
mov
adc
popa
mov
push
call
dec
adc
jbe
push
subb
int3
std
sub
repz
and
scas
lcall
or
cmp
stc
gs
jns
adcb
xchg
mull
rclb
cmc
imul
pop
mov
movsb
jo
jb
es
iret
adc
push
fsubrs
test
aaa
dec
addl
cmpsb
fs
inc
xlat
push
in
adc
movsb
not
dec
pop
mov
xorb
fmuls
jecxz
hlt
mov
pop
or
adc
stos
das
cld
cmp
out
mov
imul
lock
sti
cmp
sbb
adc
mov
movsl
sarl
inc
fidivl
imul
mov
setle
test
rclb
dec
lock
shrl
ret
shll
sbb
push
int
and
cli
adc
mov
mov
leave
push
jecxz
test
lds
iret
dec
pop
std
sahf
mov
mov
sbb
int
pop
xor
out
enter
arpl
jae
addl
into
cmp
jb
stos
hlt
popa
ret
mov
pusha
das
rcrb
xchg
icebp
es
popa
pop
adc
add
arpl
cmpsb
pusha
not
rclb
call
fisubrs
adc
es
pushw
push
push
jg
push
es
je
icebp
xor
movsb
push
sti
cpuid
clc
clc
mov
cmp
ret
daa
aad
pop
xor
mov
mov
mov
mov
push
hlt
push
mov
cmp
sarb
add
mov
adcl
inc
pop
mov
out
and
cmp
jo
cmp
outsb
out
lock
mov
psadbw
pusha
dec
fdivrs
cmp
out
mov
adc
fwait
jbe
sbb
loope
xor
scas
inc
or
cs
inc
cmp
add
incb
popf
mov
iret
mov
sub
das
xchg
push
push
pop
xor
xor
cltd
xchg
outsl
rcl
outsl
and
nop
jl
inc
in
insb
lahf
gs
push
push
mov
xchg
mov
mov
nop
loope
mov
push
in
test
add
out
mov
sarb
jecxz
or
adc
lahf
or
cmp
pop
scas
xchg
xchg
test
scas
mov
and
jnp
icebp
xor
mov
test
cmpsl
xchg
mov
addl
int
jmp
push
jne
adc
jb
es
and
pop
pmaxub
popa
stos
and
pop
dec
sahf
les
shll
adc
push
in
clc
sub
fsubrp
popf
mov
add
mov
jmp
xor
cmp
out
xchg
in
pop
cmc
add
es
stc
imul
mov
inc
arpl
pop
mov
mov
and
leave
adc
enter
mov
orb
mov
or
in
call
jbe
cmpsl
enter
aam
pop
or
loop
lea
pop
mov
jo
sbb
jo
in
iret
fistpl
fdivs
mov
scas
mov
rol
shrb
push
xchg
fs
daa
push
or
jae
movsl
gs
fwait
lods
inc
clc
mov
push
stos
cltd
repz
ret
in
xor
mov
insb
les
enter
push
popa
mov
test
or
xchg
jne
in
lcall
test
loopne
inc
cmp
data16
bound
xor
enter
movsl
xchg
mov
sub
adc
cmp
icebp
outsl
add
dec
test
jo
mov
cmp
fwait
int
mov
int3
mov
fwait
jne
cmp
sbb
adc
nop
jnp
loope
xor
xchg
jecxz
push
mov
out
mov
pop
push
ds
jl
ds
loope
cmp
repnz
push
cli
xchg
fildl
dec
imul
in
sbb
sub
push
lds
fsts
inc
mov
ja
xchg
ljmp
jg
inc
ds
sub
lea
ss
repz
outsb
test
shl
roll
test
mov
ss
and
leave
enter
mov
jle
js
fwait
lahf
insb
ret
sub
in
popa
stc
inc
xlat
xchg
fnclex
mov
call
mov
xchg
sbb
pop
daa
inc
mov
jb
mov
inc
vcmpss
push
cmp
mov
sbb
fwait
adc
jno
mov
xchg
push
pop
xor
enter
mov
or
in
repnz
pop
pop
pop
inc
inc
das
imul
inc
pusha
mov
mov
add
lods
xorl
loop
inc
xchg
jns
daa
push
adc
out
out
fcomps
clc
fbstp
sti
out
mov
dec
cmp
xchg
sbb
jg
inc
dec
in
adc
out
out
pop
cmp
mov
dec
data16
out
dec
and
scas
sub
test
add
jmp
stos
sub
fwait
xchg
dec
xor
sbb
dec
loop
cmp
mov
sub
test
add
mov
pop
push
mov
push
push
fneni(8087
jbe
fldt
rcrl
ja
xor
fs
pandn
fiadds
sbb
test
fcomip
xor
jbe
inc
push
cltd
push
xor
sbbb
xchg
push
or
xor
pop
enter
push
jmp
test
inc
insb
add
pop
mov
xchg
jno
cltd
and
cmp
daa
sub
test
push
imul
rcrb
loopne
pop
push
imul
jg
sbb
cmp
inc
fstpl
aas
add
sub
push
or
cmp
pushf
push
sub
out
orl
cmp
xlat
dec
enter
outsl
xchg
jg
push
mov
dec
aas
cli
xchg
jno
cld
xchg
cmp
andb
movsl
jle
sbb
cli
aam
outsl
cmc
mov
inc
adc
shrb
sbb
xchg
dec
pop
xchg
hlt
out
and
adc
or
inc
pop
pop
es
xchg
inc
and
into
gs
lret
pushf
xchg
icebp
fmulp
mov
arpl
mov
cmp
cld
push
fbstp
lret
data16
nop
inc
fsts
loop
sub
cmp
mov
adc
mov
xor
stos
aaa
int3
jb
mov
adc
fldcw
rclb
movsb
adc
mov
mov
bound
test
movsl
sbb
dec
inc
repz
outsb
xor
setle
dec
cmpsb
lods
push
loopne
xchg
inc
flds
nop
loope
ret
jb
sub
cld
jae
scas
xor
pop
xrelease
mov
call
pop
loopne
push
sbb
pop
movsl
fdivl
in
movsb
pop
mov
mov
cmc
xchg
out
es
shll
jle
xor
push
mov
sbb
test
lret
jmp
adc
mov
mov
cmpsb
aas
addr16
inc
pop
aad
mov
push
add
xor
inc
in
fmulp
pushw
pop
call
std
xchg
mov
stos
xchg
sub
sarl
enter
iret
and
push
adc
out
hlt
sbb
cmp
inc
stc
mov
iret
dec
aam
in
or
push
inc
pop
adc
cs
mov
lock
sbb
cmpsb
pop
cmp
in
pop
xor
daa
into
cmpsb
xlat
inc
popa
clc
je
cs
scas
fdivr
xchg
gs
pop
xchg
ds
movsb
inc
pusha
ficoms
stos
push
add
mov
pusha
aad
xchg
mov
aas
daa
cmp
xchg
xchg
mov
sbb
inc
sub
jae
jge
mov
sbb
dec
mov
cmc
std
fcoms
repnz
nop
xchg
add
inc
ss
xor
xchg
sbb
xor
jg
out
shrb
cmp
push
decl
or
int
sbb
out
cmp
int
sti
hlt
sbb
push
lret
xlat
outsl
lret
cmp
fistps
cmpsb
sti
cs
pop
jno
cmpl
push
jecxz
push
push
lds
sub
scas
sbbl
mov
jmp
pop
outsl
lods
inc
pop
jmp
push
lds
push
mov
insl
mov
iret
push
lock
xchg
rolb
fsubl
cmp
bound
cmc
adc
dec
hlt
mov
jecxz
dec
push
inc
mov
dec
xchg
push
pop
testb
jge
jnp
aad
lods
xor
mov
lret
dec
jge
dec
lcall
pop
insl
lods
in
and
lea
push
jg
mov
les
sbb
adc
sahf
es
js
cmp
cmp
mov
aaa
or
push
test
jecxz
das
push
sub
ss
jae
pop
sbb
divps
insl
pop
loop
cs
pop
inc
sbb
movb
sahf
js
cmpsb
mov
aam
dec
mov
call
adc
mov
pushf
test
repz
scas
cmc
mov
mov
movsb
jecxz
aas
mov
pusha
insl
pushf
inc
iret
cmp
adc
and
and
sub
inc
jg
orl
test
dec
mov
mov
cmc
mov
dec
or
shlb
es
fdivrl
or
push
xchg
fmul
dec
or
push
inc
inc
pushf
push
sub
dec
dec
repnz
das
jl
push
in
sbbb
mov
mov
jne,pt
sysexit
push
add
in
scas
jo
push
mov
jmp
xchg
idivl
xchg
gs
mov
adc
adc
test
and
fstp
test
test
mov
fimuls
jae
or
sbb
iret
cmpsb
xor
push
loop
scas
enter
outsl
ret
add
ret
and
jno
ss
add
lods
or
xchg
or
cmp
push
pop
outsb
jne
fildl
pop
sub
inc
and
clc
fistpll
mov
das
mov
ljmp
dec
push
jo
daa
lock
dec
or
push
popa
pop
fsts
outsb
test
or
inc
fldenv
cli
and
or
cmp
inc
loope
pop
jbe
add
bound
int
pushf
jbe
or
popa
cli
lcall
pop
arpl
nop
daa
xchg
fdiv
imulb
sub
xor
pop
inc
es
aad
es
lds
lret
lcall
jns
xchg
pop
rorl
es
xor
loopne
mov
sub
test
loopne
jge
cmp
stc
dec
mov
add
pop
jno
and
dec
pop
ss
sub
ret
hlt
inc
mov
push
mov
pop
xchg
je
sahf
or
repz
xor
and
jg
add
mov
sbb
or
xor
in
mov
mov
ficomps
or
mov
sub
cmp
sbb
mov
dec
insl
jge
pop
pop
hlt
dec
xor
mov
sarb
in
push
out
dec
mov
add
fisttpll
hlt
mov
dec
mov
pop
xchg
jecxz
sub
mov
loopne
nop
push
movsb
xor
xor
or
push
outsl
xchg
jbe
adc
push
mov
pop
filds
and
xchg
loope
mov
jg
mov
test
adc
scas
mov
lahf
lods
pusha
pop
lods
and
out
and
adc
movsl
add
cmp
adc
lods
jge
pop
stos
jae
fdivrl
sub
or
daa
dec
andl
add
xor
out
loop
mov
dec
fisttps
scas
sbb
sub
pop
fadd
inc
movl
cld
pop
pushf
gs
arpl
repnz
sub
push
stos
mov
int
jle
or
aad
movsb
test
mov
popa
outsb
fcomps
or
mov
rorb
cmp
and
sbb
cltd
adc
dec
sub
jmp
outsb
xchg
sbb
sbb
inc
sbb
mov
push
bnd
jo
popa
fdiv
shl
call
cmp
jbe
adc
rorl
imul
stc
outsb
pop
cmc
push
int3
std
insl
pop
out
das
and
sub
stos
or
mov
int
xchg
sub
sbb
gs
mov
pop
jl
sub
nop
xchg
pop
inc
lds
in
jns
les
xchg
sbb
into
pop
adc
loopne
call
sbbb
enter
xchg
cmp
pop
and
xlat
add
test
pop
lock
es
fadds
xchg
dec
inc
jb
pop
out
sbb
push
cmp
mov
insl
in
mov
in
cmc
insl
xorb
push
aad
std
xchg
fwait
out
sbb
loope
cmpsb
cmp
jge
sahf
pop
repnz
xorb
mov
jns
lea
popa
adcb
repnz
repnz
aaa
fiaddl
sub
bound
leave
xor
xchg
mov
dec
jne
cmp
movsl
dec
movsb
cs
scas
inc
cmp
push
ficompl
fstpt
adc
das
out
sub
xchg
adc
std
daa
test
mov
ror
ret
push
mov
movsl
cli
clc
mov
movsb
xorb
jmp
imul
or
mov
mov
sub
negl
cmp
repnz
jo
lds
mov
sub
stos
aam
pop
aam
loopne
mov
dec
jmp
js
sub
adc
dec
mov
xchg
push
out
sbb
icebp
lods
jle
push
scas
jmp
dec
inc
sbb
dec
bound
jae
cwtl
sub
sub
test
out
ret
xor
add
movsl
fsubrl
push
mov
ljmp
mov
sahf
scas
sbb
jno
stc
lcall
ret
test
daa
jle
std
aam
lret
xchg
movsb
inc
adc
push
shlb
dec
test
and
fidivl
cld
add
inc
mov
push
mov
jae
pandn
test
add
fidivrs
aam
cld
add
lods
pop
cmpsl
test
test
sbb
stos
jle
cmp
out
das
cmp
xor
ds
mov
fistps
adc
outsl
in
dec
adc
shll
sub
jle
cmp
ljmp
mov
aam
adc
jbe
push
stos
cmc
jnp
stos
in
imul
cmp
xlat
push
not
pop
ret
xor
jecxz
out
push
inc
or
adc
shlb
subl
loopne
pop
loope
xchg
inc
aas
int
sub
xchg
add
mov
pop
mov
out
jno
xor
movsb
mov
jno,pn
test
inc
ds
loope
cmp
push
xchg
daa
cmpl
call
stc
test
add
je
mov
and
lret
dec
cmp
sub
mov
cmp
stc
adc
jl
inc
xchg
insb
add
faddl
jl
jle
mov
jecxz
leave
gs
sub
ret
stc
nop
push
outsb
mov
inc
hlt
pop
mov
ret
lds
fists
adc
push
and
dec
jno
xor
loopne
xlat
push
loop
inc
dec
and
pop
psllw
stos
repnz
call
fidivs
stc
lock
xchg
mov
pop
dec
test
pop
jmp
inc
call
fidivs
inc
fucomp
mov
mov
int3
sar
cmpsb
movsb
cli
adc
aas
pop
and
fwait
xchg
dec
ljmp
lds
ds
cmpsl
xor
jmp
adc
mov
lds
xlat
out
aas
aaa
jns
cmp
push
stos
fisubrs
xchg
cmp
fs
cltd
mov
and
aas
add
jno
int
adc
fstpt
or
inc
movsb
daa
sbbb
lds
stc
adc
test
dec
mov
or
xchg
fnstcw
imul
shrb
sahf
js
mov
das
jg
sbb
leave
dec
pop
add
inc
jecxz
insl
push
jle
sub
pop
outsl
sbb
gs
lds
pop
xchg
sbb
fbld
push
sbb
ss
push
and
popa
jno
mov
sbb
pop
dec
mov
in
fisttps
or
cmp
pop
xchg
pop
lds
scas
dec
dec
test
js
or
int
ja
or
mov
lea
sbb
sub
outsl
or
jb
dec
in
imul
mov
inc
rcll
jle
push
adc
add
cmp
mov
loopne
test
mov
push
out
ss
push
shll
gs
insb
jle
popf
outsl
ss
xchg
sub
adc
sub
mov
unpckhps
inc
out
add
mov
addr16
aas
or
ja
xor
test
loope
push
dec
fcompl
pop
imul
jle
jae
cli
test
push
push
test
add
icebp
pop
jmp
mov
push
mov
cmpsb
mov
xor
lods
or
push
lret
setg
enter
adc
push
sbb
in
movsb
das
addr16
adc
inc
jg
jae
in
add
jbe
push
mov
lcall
fwait
mov
sarl
add
mov
jl
test
inc
add
pop
repz
loop
testb
into
in
xor
mov
sbb
mov
push
lods
mov
ret
push
je
inc
pop
jae
dec
add
push
jne
jne
in
dec
jecxz
cltd
mov
or
stos
inc
jb
xlat
outsb
and
mov
test
mov
pop
stos
jno
ds
test
or
dec
mov
cmp
movsl
fs
repnz
stos
mov
sub
int
cmp
mov
mov
int
je
aas
imul
leave
pusha
aam
inc
fcomps
sub
or
and
scas
mov
mov
mov
enter
jp
mov
fisubrs
repnz
or
bound
lahf
mov
and
push
xor
es
adc
or
and
sub
sub
jecxz
xchg
pop
daa
mov
jb
arpl
cmp
inc
or
xor
adc
ficoms
arpl
mov
inc
mull
cmpsl
mov
or
repz
or
mov
push
or
in
cmpsl
pop
not
les
loope
mov
js
rolb
and
xor
sbb
pop
icebp
dec
movsl
std
inc
push
pop
incl
std
pop
adc
mov
std
push
mov
xlat
or
movsb
pop
xor
sbb
mov
push
fst
mov
pop
bound
xchg
lret
jnp
ss
neg
mov
mov
outsl
popa
adc
fimuls
fildl
jns
fisubrs
sbb
lret
mov
mov
movsl
xchg
xor
pushf
rol
xchg
inc
jge
and
incl
mov
stos
mov
stos
push
mov
scas
cmp
mov
mov
aas
add
das
inc
fldenv
push
aam
test
pop
lods
jb
pushf
bound
pop
out
loopne
call
jmp
les
xchg
fs
and
mov
jle
repz
dec
movsb
sub
xor
jecxz
dec
jne
xlat
cmpsb
push
xchg
xchg
cmp
loopne
mov
mov
lods
xor
cmp
test
push
pop
push
jbe
mov
and
mov
push
test
aam
stc
jae
push
movsl
jns
loopne
jmp
mov
icebp
stc
inc
fsubr
icebp
cmpsb
cmp
dec
popa
les
jle
jbe
jle
mov
jnp
mov
aas
bound
scas
xchg
pusha
cmp
rclb
pop
scas
add
push
ss
andl
mov
out
push
iret
dec
movb
add
in
test
jge
sub
or
jns
mov
pusha
and
repnz
cmp
mov
sbb
sub
dec
pusha
ljmp
jne
in
rcr
outsl
add
pop
nop
int
jecxz
push
scas
inc
sub
lods
mov
addr16
subl
loope
and
repnz
dec
inc
pop
sub
mov
rcll
repnz
icebp
jae
cwtl
sub
fstl
mov
or
mov
dec
inc
add
mov
jb
push
mov
out
xchg
mov
xchg
lahf
inc
shlb
mov
pop
test
lret
sbb
push
or
fdivs
cmpsl
divb
out
in
mov
inc
test
push
pop
in
push
movsb
jnp
shl
lahf
fs
add
xchg
cmpsb
push
aam
push
xchg
js
cmc
xchg
fwait
sbb
insb
sub
sbb
mov
pop
pop
movsb
lahf
dec
test
xor
lods
mov
repz
inc
xor
jp
dec
lret
cld
sar
cld
pop
icebp
xchg
sub
dec
jecxz
mov
lods
push
movsl
push
shll
pop
sbb
data16
xor
in
in
test
sub
mov
cmp
cmp
je
or
iret
mov
incb
or
cmp
add
pop
shl
ss
push
fs
scas
in
sti
lcall
jnp
mov
nop
inc
pushf
sub
xor
in
shlb
in
dec
xchg
and
cmp
or
pop
mov
pop
mov
mov
mov
cmp
insl
les
sbb
hlt
mov
imul
outsl
mov
fbld
jge
jb
mov
cs
mov
xor
aad
mov
int
repz
in
and
jg
fstps
mov
or
sub
les
mov
in
ljmp
sub
imulb
pop
dec
pop
outsl
std
dec
fildll
cmc
in
cmp
insb
cli
or
cmp
adc
aam
gs
in
pop
sub
mull
or
fmull
pop
inc
inc
push
imul
sub
ret
outsb
mov
ret
cmc
adc
repnz
adc
jnp
or
jecxz
loopne
add
inc
mov
push
xchg
sub
and
xchg
add
unpcklps
xchg
or
mov
fisttpl
push
sub
xor
lds
push
xor
cmp
movsb
stos
aaa
sub
mov
dec
sbb
pushf
subb
or
in
and
rcrl
testl
lahf
or
mov
push
jmp
lret
inc
jo
jae
pop
outsb
push
xchg
ljmp
jp
ja
add
jge
scas
daa
pop
cmp
inc
int
jmp
pop
mov
jne
pop
pop
ret
pop
push
jno
stc
sub
ficoms
or
clc
cltd
in
arpl
and
insl
popa
idivl
push
jno
loopne
js
in
fs
ljmp
lea
add
jmp
cmp
stos
and
mov
repnz
shlb
fwait
es
inc
ret
hlt
jo
push
popfw
mov
cmp
outsl
jle
push
push
cmp
or
daa
mov
cmp
mov
clc
pop
jmp
pop
dec
xchg
sbb
sub
cmp
mov
push
lret
aam
and
sbb
repz
movsl
sub
ja
enter
hlt
incl
stos
in
cmp
sbb
jge
lret
cli
fs
in
repnz
fcoms
enter
mov
jl
lahf
mov
dec
inc
and
icebp
pop
in
xchg
mov
or
cmp
pop
popa
hlt
and
inc
cmp
stos
das
sbb
jge
push
inc
pusha
loop
cld
sbb
insb
test
cmp
and
adc
fisubs
mov
or
cmp
mov
pushf
rol
sbb
jns
aaa
mov
jl
imulb
or
cmp
icebp
ficoml
cmpsl
or
mov
or
pop
dec
pop
and
nop
adc
inc
mov
scas
sub
cli
sub
sbb
mov
push
push
pop
hlt
cmp
call
mov
daa
and
ret
cmp
lahf
je
ret
ret
xchg
shrb
cmpsl
faddl
or
movl
aad
cltd
mov
loopne
data16
insb
inc
fcmovnbe
add
pop
cmp
mov
sbb
and
mov
or
push
add
adc
rolb
sbb
inc
sub
mov
fs
es
das
out
cmpsl
push
push
std
mov
sub
adc
xor
sti
mov
push
repnz
push
mov
and
adc
stc
mov
jae
or
es
ja
cmpsb
js
cltd
and
scas
add
popa
sahf
icebp
lea
push
outsl
cmpl
out
sbb
add
test
push
sub
dec
into
cmpsl
cmp
in
dec
dec
ret
and
sbb
and
xor
push
outsl
sbb
outsb
push
dec
xchg
out
cmpsb
jb
jecxz
loope
mov
xchg
and
sbb
aas
dec
bnd
and
xchg
pop
push
imul
imul
int3
jae
gs
mov
jle
mov
lret
mov
pop
jmp
jmp
jo
fwait
xor
enter
jl
xchg
adc
popa
inc
ds
jge
call
inc
sub
dec
pop
xchg
pop
sahf
mov
cs
xchg
loopne
fstenv
pop
testl
mov
pusha
repz
fstpl
mov
test
jp
fstpt
jecxz
lcall
outsl
inc
add
mov
mov
xchg
xchg
pop
mov
push
mov
adc
dec
mov
mov
fidivrs
fimull
push
mov
jg
fnstsw
ss
dec
pop
rclb
adc
ljmp
pop
jae
das
cli
xchg
popa
adc
sbb
enter
push
stos
sub
pop
int3
fdivr
mov
int3
or
sahf
ret
repz
add
lret
icebp
or
and
scas
adc
xchg
sub
int
cmc
lods
push
mov
inc
fcmovnbe
repz
dec
lahf
xor
mov
adc
push
sub
push
inc
icebp
jge
out
adc
jbe
ss
push
arpl
adc
push
push
inc
sbb
push
dec
cmpsl
mov
faddl
aad
fcmovbe
iret
mov
sti
dec
jb
cmpsb
fsubrs
push
push
mov
loope
out
jne
js
das
xor
pop
push
out
xor
in
rorl
movb
push
cs
xchg
sub
lahf
jmp
xor
push
in
into
rolb
cwtl
lahf
aam
popa
sub
mov
jae
mov
subl
call
test
mov
cmp
in
sbb
inc
fisubrl
loope
mov
lock
jbe
jle
xchg
push
les
into
sbb
pop
imul
add
js
xchg
sub
loope
fdivp
test
push
mov
push
xor
in
inc
mov
insl
or
inc
mov
je
lcall
dec
in
in
cld
ljmp
iret
fs
dec
xlat
int3
jnp
mov
fistpl
push
dec
lods
push
sub
mov
sti
stos
xor
sbb
lret
ljmp
push
and
jns
dec
pop
les
push
push
push
arpl
add
movsb
xchg
jno
pop
or
ds
hlt
push
or
enter
xor
jmp
xchg
add
xor
outsl
jge
dec
add
mov
and
pop
call
sbbl
xor
add
push
add
nop
or
int
sub
or
int
xchg
hlt
pop
scas
in
cmp
mull
scas
inc
ds
out
cltd
mov
add
decl
rcl
cltd
xchg
ja
pop
loop
lock
lea
imul
je
lods
inc
xchg
sbb
mov
shlb
int
adc
push
jecxz
call
imul
leave
test
jae
xor
add
inc
mov
jae
dec
ret
sbb
pmaddwd
adc
mov
bound
jecxz
jl
xor
push
xor
shll
push
dec
mov
loopne
adc
jl
or
ret
jnp
nop
sbb
xor
jecxz
xor
push
jp
or
push
push
out
dec
inc
std
xor
cmp
xchg
mov
inc
stc
leave
sbb
arpl
xlat
xchg
shr
jnp
mov
mov
or
and
cltd
xor
movl
in
jb
rcr
xor
xlat
adc
sub
xor
dec
cmc
xchg
mov
jl
and
sahf
mov
inc
adcb
je
fwait
lods
sbb
adc
hlt
divb
enter
push
dec
adcb
sbb
cmp
xor
mov
jne
test
std
mov
enter
cmp
mov
popf
fnstenv
les
jle
push
lret
roll
les
lods
fbld
push
shll
mov
rclb
out
push
rorb
or
jb
sbb
push
jb
imul
scas
push
jp
xor
daa
mov
dec
loope
sti
jb
mov
adcl
adc
icebp
nop
dec
test
pusha
xchg
inc
inc
jns
loope
push
push
jo
cmp
pop
test
add
pop
jns
lods
fcmovnb
frstor
outsb
add
ljmp
popf
or
cmp
jmp
inc
pop
mov
outsl
and
imul
pop
xlat
lahf
nop
gs
aam
push
and
iret
adc
mov
dec
xchg
cmpsl
dec
lock
add
negl
test
lea
dec
pop
lock
push
and
dec
sbb
or
push
and
stos
push
xchg
addb
mov
pop
add
loope
ljmp
push
mov
push
jmp
mov
stos
dec
mov
add
and
arpl
mov
xlat
rolb
pop
nop
add
mov
arpl
pop
lods
cmpsl
mov
roll
aam
popa
data16
pop
pop
or
test
mov
insl
adc
push
int
iret
out
subb
push
jbe
xchg
push
pop
jae
xchg
scas
jo
loopne
arpl
in
test
addl
xchg
das
jnp
cmp
xchg
in
cmp
fsubrl
xlat
insl
adc
dec
and
cmc
sub
imul
mov
ds
aam
or
mov
jp
push
push
andl
add
mov
pop
jl
or
dec
shld
aad
out
in
cli
ss
sbb
push
pop
lret
fisubs
jmp
dec
jmp
push
xchg
add
fsubl
test
xchg
push
cld
call
mov
arpl
leave
xchg
leave
mulb
xlat
shl
hlt
mov
outsb
inc
scas
outsl
xor
jp
mov
cmpsl
es
lret
push
dec
neg
jge
cmpsl
das
add
rol
cmp
loop
out
lcall
lock
xchg
scas
nop
lea
je
mov
xchg
dec
lea
mov
mov
fadd
pop
or
or
xlat
insb
sbbl
loop
jg
add
repz
push
xchg
pop
and
dec
test
test
inc
inc
push
add
pop
sub
or
add
cmp
mov
jl
sub
xchg
shlb
xor
push
mov
loope
push
cltd
dec
imul
jne
xchg
push
jns
notl
in
xchg
sti
mov
or
fs
jnp
adcb
enter
and
out
idivl
cmp
or
fs
dec
cmovnp
sahf
mov
shl
shr
adc
mov
inc
loopne
adc
lret
lods
dec
jp
inc
adc
xchg
sbb
out
jp
mov
in
ret
lret
stos
mov
push
arpl
xchg
jbe
or
rorb
cwtl
loope
out
adc
cmc
jge
cmp
adc
push
inc
fimuls
and
xor
ja
shr
daa
dec
sbb
inc
mov
repnz
ds
cmp
sbb
sbb
ds
and
gs
scas
xor
imul
iret
and
xor
stc
addl
iret
sti
pushf
xor
mov
gs
xor
and
loopne
es
lock
push
sbb
pop
repnz
int3
test
mov
jle
jl
jmp
es
xchg
mov
dec
xchg
sub
push
sbb
push
sbb
cmpsl
pop
mov
ljmp
adc
scas
jb
dec
jo
mov
imul
mov
cmpl
psrlq
jbe
rorb
andl
icebp
add
jo
mov
dec
mov
and
mov
rcrb
xchg
cltd
xor
sbb
faddl
cmpsb
dec
jae
adc
mov
push
xorb
sbb
xchg
push
inc
ds
add
push
sbb
mov
and
jg
sub
sbb
pop
pop
aas
outsl
clc
cmp
cmp
xchg
sbb
iret
mov
stos
nop
xchg
jle
enter
jl
inc
xchg
scas
popf
mov
mov
xchg
xor
and
sbb
or
cli
cli
scas
jle
cmp
cli
popa
out
xchg
sbb
and
push
movsl
push
getsec
xchg
sbb
inc
pushf
scas
jno
cwtl
pop
mov
ficomps
jge
fldenv
repnz
in
mov
add
clc
incb
divl
cmp
stos
or
inc
xchg
adc
mov
jecxz
xor
cltd
lea
mov
jecxz
xchg
add
dec
mov
lret
test
or
je
push
clc
fcoml
mov
aad
xchg
lret
ja
fstps
sbb
jo
xlat
cmp
decb
push
int
adc
pop
pushf
es
arpl
jge
cld
inc
jbe
ja
dec
pop
xor
inc
lods
cmpsl
or
cs
int
mov
cmpsb
daa
sbb
pushf
dec
fwait
add
xchg
les
in
sahf
push
xchg
pop
push
jb
sbb
sbb
mov
jecxz
pop
in
add
push
sub
hlt
mov
dec
xor
jbe
adc
int
in
ja
out
xor
stos
or
std
xchg
add
test
push
insl
cmpsb
cmp
dec
adc
inc
inc
and
jae
inc
dec
dec
sbb
clc
xchg
mov
cli
xor
cmpb
stc
push
xor
inc
dec
cltd
es
inc
lods
push
mov
add
mov
addr16
or
lahf
hlt
cltd
xor
mov
je
lods
idivb
push
dec
shl
les
sbb
lds
scas
stos
sbb
jb
xchg
mov
push
sahf
adc
mov
test
in
inc
pop
pop
and
mov
dec
and
out
mov
fstpt
in
jge
cmpsb
mov
pop
or
nop
pushf
cmp
fcoms
in
adc
jecxz
pcmpeqd
test
cli
mov
leave
or
lds
orl
dec
out
add
es
mov
frstor
cld
mov
inc
and
fwait
xchg
add
xchg
stc
cmp
mov
mov
stos
cmp
jo
jb
lcall
inc
inc
mov
cld
and
cmpsb
pop
jb
mov
cmpsl
sti
lret
shlb
push
loopne
arpl
dec
dec
insl
inc
pusha
test
xchg
sub
pop
pop
rcll
dec
cmpsb
sbb
inc
or
scas
xor
inc
mov
out
cltd
frndint
pop
loop
sahf
adc
xchg
dec
pop
jb
mov
nop
daa
loopne
es
stc
mov
out
pop
cmp
jnp
mov
insb
sbb
popf
cwtl
cmp
add
mov
imul
pop
push
lods
and
movsb
cmp
mov
jo
fisubrl
inc
push
jmp
cmp
std
sbb
mov
xor
in
and
cwtl
xchg
lods
push
mov
push
xor
stc
inc
loop
dec
push
inc
mov
icebp
iret
add
lods
xor
fwait
gs
mov
push
test
lods
xchg
adc
int3
sbb
add
cmp
cmpsb
inc
and
scas
xchg
into
or
add
jns
adc
mov
orb
test
lahf
mov
mov
je
lods
stc
inc
ret
xlat
inc
sbb
and
sub
ja
cmp
add
xchg
pop
sbb
fistpll
sbb
adc
gs
dec
or
fsubrs
inc
xorw
push
pop
jne
add
aad
xor
outsb
cmp
clc
mov
gs
jl
dec
movlps
or
pop
jg
add
mov
pop
fdivrl
xchg
ficomps
sbb
ja
ror
das
or
sbbl
fstpt
subl
rcrl
mov
lret
int3
jb
shlb
sbbb
adc
in
or
xchg
xchg
mov
lock
in
ds
or
push
add
loope
arpl
mov
pop
adc
adc
push
pop
mov
mov
stos
test
test
cli
pop
xor
adc
movsb
addr16
inc
mov
mov
push
inc
aas
ja
test
mov
aad
arpl
cmp
je
mov
aad
mov
inc
out
xor
mov
test
sbb
dec
mov
ret
push
popa
inc
pop
fsubp
in
mov
pop
pop
xor
popa
daa
inc
bound
insb
pop
insl
cmp
fstl
sub
lods
bound
push
inc
shlb
inc
ss
out
rorl
sub
adc
cs
cs
jns
jnp
mov
arpl
mov
adc
test
mov
shll
aas
mov
fsubrl
pop
mov
and
cmc
fcoml
movsb
out
lea
pop
pop
sub
inc
pop
jns
scas
out
jg
fs
sbbl
aam
insl
fdivrl
xchg
add
call
or
popa
fucomp
testl
jle
in
ds
adc
or
pop
shrl
bound
pop
fistpll
icebp
mov
xchg
lods
in
sahf
sahf
stos
leave
int
into
and
stos
mov
xchg
ss
data16
cli
or
das
sbb
movsb
add
mov
lds
xchg
mov
into
imul
loope
inc
jae
or
mov
mov
xchg
fdivrl
push
fcos
adc
pop
adc
push
jecxz
xchg
add
insl
add
sbb
inc
dec
decb
mov
loope
jb
leave
xchg
lahf
out
xchg
sbb
shrl
stos
jl
repz
inc
mov
push
int3
adc
std
das
call
cwtl
daa
rcrl
sub
rol
jne
popa
cwtl
push
pop
ret
xlat
push
je
and
aad
xorl
sub
sahf
jmp
es
fs
test
pop
loop
adc
mov
imul
jmp
mov
pop
outsb
xlat
jmp
jae
loop
mov
aaa
cld
and
adc
jnp
push
mov
and
enter
imul
sub
mov
push
loop
popa
clc
loop
fs
cli
les
jle
test
data16
jo
lahf
xor
xchg
mov
add
ret
sbb
aas
dec
outsb
shrl
inc
xchg
mov
mov
adc
outsb
jg
mov
pop
mov
push
test
sub
jmp
mov
aaa
xchg
shrl
aad
in
and
xchg
mov
leave
sbb
ret
cmp
loope
dec
inc
fwait
jae
dec
jmp
dec
sbb
mov
insb
nop
push
lahf
test
lret
inc
mov
fnstsw
sti
sub
xchg
popa
mov
sbb
cli
sbb
cwtl
das
mov
mul
cmp
mov
idivl
mov
call
data16
lock
mov
repz
mov
ljmp
mov
leave
hlt
icebp
mov
clc
je
mov
andl
inc
or
cmp
jb
pop
push
mov
repnz
nop
fists
lcall
adc
and
js
sbb
cmp
stos
andl
lcall
mov
cld
xchg
mov
cmpsb
int
push
xlat
or
jb
nop
xchg
rcll
ds
scas
pusha
leave
out
mov
les
mov
mov
adc
push
ret
and
add
xor
das
dec
fwait
insl
mul
mov
push
xchg
add
pop
jecxz
or
push
mov
imul
inc
and
or
cli
ss
mov
fdivrl
pop
push
dec
jecxz
xor
inc
jo
out
stos
fstpt
fldt
int
jmp
xchg
and
adc
mov
mov
or
sbb
xor
pusha
add
push
or
push
call
mov
outsl
adc
mov
stc
xchg
and
subl
push
sub
les
dec
jecxz
xor
push
mov
cmp
ja
pop
xchg
mov
jo
fsubr
movsl
loope
fisttps
orb
xchg
lds
into
add
stc
jne
push
cs
decb
jb
push
out
lds
clc
sub
jno
stc
xchg
outsl
xchg
pop
in
adc
and
dec
push
fstl
movb
jl
sti
jmp
and
mov
mov
jne
nop
ja
test
inc
popa
ljmp
ret
inc
lret
outsb
mov
fiaddl
lods
movsb
inc
fildl
mov
bound
sbb
inc
nop
fs
sub
outsl
sub
xchg
cmc
outsb
or
jle
ret
shlb
in
jge
jecxz
xor
and
fsubs
out
popa
testl
add
fnstcw
call
outsb
les
in
stos
dec
adc
pop
int3
jecxz
and
out
fnstsw
int3
out
addl
and
loope
pushf
sub
cmp
nop
les
aaa
divb
jge
sub
cmpsb
cmc
loope
sub
or
pop
mov
add
xor
inc
inc
pop
cmp
aas
inc
mov
inc
sub
rcrl
rcll
dec
fbstp
fwait
imul
mov
push
mov
bswap
xchg
xor
push
imul
pop
imul
push
cmp
pop
cli
int3
arpl
or
shlb
pop
repnz
or
mov
jns
shll
xor
arpl
cmc
adc
data16
aam
sbb
mov
xor
xchg
pusha
gs
pop
ret
adc
adc
and
out
icebp
jno
xchg
mov
fisttps
xchg
mov
mov
fistpl
sub
out
lods
cmp
stc
insl
pop
out
add
push
fildll
jo
scas
aaa
cmp
jbe
xchg
imul
lock
or
xor
push
jnp
mov
ret
push
jo
ret
scas
test
push
inc
add
push
add
jecxz
pop
repz
ljmp
or
imul
add
iret
ja
ljmp
push
push
flds
push
mov
int3
arpl
into
and
std
push
lods
ljmp
lock
xlat
roll
nop
xchg
mov
mov
in
dec
stc
pop
das
int
inc
xor
push
or
pushf
scas
mov
lret
jp
push
mov
xchg
leave
pop
imul
inc
inc
inc
mov
mov
outsb
mov
push
mov
lods
mov
in
xor
inc
jp
adc
jmp
jnp
scas
fnstsw
lods
xchg
inc
xchg
lea
sbb
sti
inc
repnz
mov
idiv
xchg
sub
and
mov
nop
mov
fidivs
dec
nop
cmpsl
imul
cli
xchg
mov
sbb
insl
inc
in
mov
cmp
or
mov
adc
icebp
dec
sbb
dec
jo
pop
or
lea
cmp
ljmp
mov
iret
arpl
data16
bound
dec
mov
rolb
clc
bound
repnz
sarl
aaa
bound
mov
shl
mov
pop
call
mov
aam
ret
pop
xchg
popa
jb
sub
shll
pop
xchg
popa
jne
push
mov
rcrb
mov
test
lcall
xlat
imul
sub
sub
mov
or
push
jp
and
outsb
test
enter
inc
push
jns
push
inc
mov
lahf
xor
adcl
inc
ss
inc
das
dec
ljmp
cltd
lea
inc
mov
js
jmp
fstps
dec
pop
mov
fimull
adc
idivl
xor
mov
push
in
push
pop
fadds
lcall
xlat
imul
sub
pop
mov
fnstsw
jno
and
xlat
jo
pusha
cmp
rclb
stos
xorl
adc
mov
mov
test
or
dec
mov
xchg
test
mov
pop
scas
out
orl
shrb
mov
sbb
hlt
adc
ret
adc
lods
ret
mov
ljmp
and
mov
xchg
shr
adc
add
mov
mov
stos
inc
push
fldl
jmp
outsb
repz
lds
inc
mov
daa
or
adc
adc
sbb
in
dec
adc
xchg
push
out
in
cmp
dec
sbb
sub
xor
std
mov
shlb
sbb
stos
std
inc
imulb
lods
mov
stc
stos
loop
lcall
pop
pop
or
das
pop
mov
cli
nop
adc
or
cld
faddl
es
jae
dec
xor
pop
outsb
lahf
cmp
push
ds
cmpsb
jge
test
and
mov
js
and
outsb
xor
fisubrs
int
push
js
push
in
mov
ret
je
and
inc
fmul
dec
icebp
insb
imul
add
push
add
test
or
sbbb
and
ret
pop
lock
xchg
pop
cs
int
ss
fnstenv
pop
jmp
mov
divl
xlat
jle
pop
lea
inc
jnp
call
mov
sbb
sub
push
popf
shl
xchg
pop
sbb
stc
jb
cmp
fstps
pop
les
push
cli
loop
pop
stc
xchg
test
xchg
dec
out
std
add
jbe,pn
xlat
xor
lods
add
fdivl
jb
ret
cltd
pushf
sbb
je
fldl
mov
repnz
xchg
bound
pop
and
xor
mov
enter
test
in
sti
js
loop
add
dec
int
les
push
cli
mov
adcl
das
ret
xor
sub
inc
sti
jge
in
mov
cmp
dec
or
cmp
sbb
cmp
inc
inc
sahf
cli
and
jno
push
rclb
cmpsb
add
mov
movsl
stc
pop
sahf
loope
cmpsb
cmp
mov
filds
cmpsl
fbstp
xor
cli
add
mov
das
jge
add
shrl
in
sbbl
and
add
jle
in
addl
xchg
pushf
add
mov
popa
das
xchg
sahf
add
enter
xchg
pop
das
pop
lea
lcall
in
xchg
add
mov
aad
push
add
test
scas
outsl
mov
fistpl
lods
cmp
sbb
sub
scas
xchg
push
sti
mov
mov
dec
or
jo
add
es
xchg
mov
or
outsb
loope
sbb
lods
lds
jb
mov
mov
xchg
pop
sbb
adc
xor
xor
mov
push
cmpsl
es
sub
xlat
leave
xor
jb
notl
stos
xchg
and
cmp
pop
add
and
dec
add
lahf
dec
call
jb
mov
and
push
lds
ljmp
popa
mov
dec
lds
outsb
inc
or
sub
cmc
and
lods
push
add
shrl
xor
out
das
or
lret
data16
leave
pusha
push
pop
push
std
aaa
stos
test
gs
clc
dec
adc
or
and
mov
jmp
mov
xchg
sub
popa
dec
sbb
sbb
idivb
call
xor
lahf
mov
cmp
pop
fidivl
jp
mov
in
xor
jno
sub
add
jge
adc
aaa
mov
mov
cmp
push
xor
dec
cld
cmpsb
push
mov
je
movsl
subl
pop
xor
in
pop
xor
mulb
int3
arpl
add
mov
and
sub
cmpl
popa
jb
push
cld
int
xchg
lcall
clc
lods
cmp
dec
scas
js
aaa
arpl
jmp
incl
dec
mov
outsl
enter
push
movsl
imul
cmpsb
ja
test
pop
push
fldcw
pop
cmp
outsb
pop
adc
call
jecxz
cli
ss
sbb
dec
inc
pop
mov
sbb
jg
and
jb
aas
xchg
pop
int
fdivr
or
push
mov
mov
addr16
mov
jecxz
pusha
pop
fcompl
dec
js
cwtl
ret
push
je
xchg
sub
fwait
stc
inc
inc
out
xchg
push
loope
ficoml
aaa
cmpsb
clc
in
adc
ret
add
lret
aam
addl
mov
icebp
sub
push
js
outsl
sub
repz
repnz
in
jno
enter
insb
and
jg
nop
dec
out
je
popf
lds
insl
inc
bound
inc
in
push
push
push
pop
push
mulb
inc
mov
out
xchg
insl
or
cmp
jne
leave
js
pop
mov
xchg
pop
sbb
add
xor
xchg
sbb
les
mov
popa
pusha
or
shrb
aaa
popa
jp
inc
in
jnp
fsubr
out
sbb
lcall
lret
jb
lret
inc
ss
mov
mov
jae
imul
mov
mov
adc
push
xor
pop
cwtl
cmp
divl
and
dec
je
pop
divl
mov
add
je
xorl
sbb
cwtl
dec
sbb
mov
mov
cmp
jno
lds
mov
out
rclb
adc
test
pop
push
sub
enter
sbb
pop
jle
sub
test
pop
ljmp
or
out
xchg
in
aam
sbb
adc
cltd
sti
mov
xchg
jmp
hlt
sti
and
repz
inc
mov
shl
pop
arpl
mov
fdivrl
push
cltd
xor
lret
cmpsb
fisttpll
movsl
leave
repz
insb
enter
iret
cmp
jl
fidivl
pusha
test
in
sub
aad
out
test
imul
sub
clc
add
adc
push
or
cmp
arpl
in
repz
in
sub
jl
jle
insb
je
xor
push
xor
inc
sbbl
adc
js
addb
adc
scas
jo
and
scas
into
out
push
or
push
lods
sub
xchg
sahf
jne
shlb
out
adc
jno
loop
mov
cmp
mov
pusha
jp
or
pushl
cmp
out
cmpsl
ds
push
adc
inc
push
data16
or
add
mov
push
pusha
sub
and
push
lret
imul
test
pop
out
test
aad
sarb
mov
cld
loop
push
inc
test
or
fwait
inc
pop
mov
ja
sbb
arpl
cltd
push
lods
or
add
lods
inc
sub
out
inc
lahf
sbb
les
and
adc
data16
xor
imul
loopne
mov
popa
iret
cmp
scas
fildl
xchg
inc
jno
jns
imul
xor
mov
push
and
xor
or
xor
jnp
or
popf
dec
lcall
aas
in
fistpll
loop
push
cli
inc
inc
cmp
popf
lret
pop
flds
adc
sahf
icebp
mov
xchg
ja
ror
sbb
hlt
addr16
aam
inc
testb
jo
out
cs
dec
mov
aad
push
pop
imul
ret
daa
aam
xchg
sub
cmc
les
in
insb
mov
daa
mov
int
fsubrl
push
pusha
adc
mov
and
gs
adc
ret
xchg
mov
xrelease
test
fs
mov
push
outsl
outsl
andl
xchg
fs
jmp
cmp
bound
xchg
fucomi
jp
into
clc
sbbl
lcall
and
inc
lock
sub
mov
fldt
mov
xchg
ret
fldcw
imul
xor
pusha
punpcklbw
mov
adc
in
and
pop
dec
jl
loop
test
jbe
pop
in
xchg
roll
and
jo
shlb
inc
xor
sbb
ljmp
xchg
hlt
int3
jnp
inc
in
mov
lods
fwait
jae
push
je
push
cltd
jae
xchg
pop
cmp
movsl
cld
adc
mov
mov
adc
fdivl
xor
aas
push
add
nop
mov
inc
sub
lret
mov
aaa
cld
pop
addr16
cmp
xchg
stc
mov
sub
gs
lock
mov
and
flds
xchg
xchg
add
out
and
xchg
mov
xor
jbe,pt
mov
cld
dec
xchg
rcll
out
xor
fisttpl
ja
sti
movsl
push
in
sbb
mov
aaa
gs
push
inc
std
and
pushl
cmpsl
fwait
xchg
out
ds
lods
jmp
push
dec
pop
repz
push
mov
aas
iret
jb
mov
xchg
xchg
xor
movsl
stc
orl
pop
xor
or
popf
in
mov
pop
lcall
out
fnstcw
pop
mov
cmpsb
cmp
jge
dec
mov
inc
sbb
xor
movsl
hlt
std
mov
dec
mov
and
add
andb
mov
aad
fistpl
xor
mov
es
shr
out
out
testl
stc
rorl
jbe
insb
dec
imul
inc
dec
dec
icebp
push
mov
xchg
outsb
dec
in
cmp
pop
scas
inc
push
leave
in
ficomps
daa
lret
pop
hlt
cld
inc
mov
fwait
lret
test
aad
ljmp
outsb
add
push
mov
push
iret
jae
fsubs
mov
push
fdivs
inc
and
insb
add
jns
and
or
addr16
mov
xor
fidivl
rorl
cld
lret
xchg
icebp
push
les
test
jp
jae
pop
mov
jp
das
pop
cwtl
stos
mov
insl
xchg
dec
ret
sbb
sbb
movsb
adc
inc
add
sarl
stos
dec
shlb
inc
mov
inc
mov
dec
mov
sbb
popa
pop
pop
pop
aam
xor
test
test
push
mov
jnp
cli
jmp
add
js
mov
mov
mov
add
icebp
lods
aam
xchg
inc
call
push
xchg
sbb
insb
es
xlat
outsb
lds
enter
lret
mov
enter
int
adc
lea
adc
ss
fcmovnb
xor
add
aad
adc
inc
cwtl
lods
sub
scas
pop
int
scas
mov
and
leave
jne
out
and
aas
pop
es
pop
loope
inc
in
and
dec
or
and
popa
pop
cltd
std
sbb
mov
ds
std
pop
ss
lret
bound
push
push
mov
xor
cmp
mov
bound
and
repnz
inc
and
inc
lret
xor
xchg
pusha
xchg
pop
invd
iret
lcall
fnsave
pusha
test
adc
aaa
int
lret
and
sub
sbb
subb
pop
cmp
pushf
and
lods
mov
arpl
mov
pusha
repnz
cmp
pop
adc
fidivs
mov
pop
icebp
mov
daa
mov
inc
lret
repnz
lcall
fimull
shll
push
cli
clc
jg
test
shrb
push
movsl
lahf
stos
in
xchg
xor
pop
outsb
dec
test
aaa
push
imul
in
adc
aaa
int
imul
stos
mov
xchg
addr16
aad
add
mov
and
inc
inc
or
jmp
mov
lcall
add
das
xor
scas
repz
push
mov
push
enter
adc
lds
imulb
ret
aam
pop
jo
add
add
or
repz
imul
adc
cli
sbb
adc
dec
iret
orb
mov
jle
or
lods
rcrb
pusha
jl
cmc
jo
cmp
sbb
lcall
adc
lcall
stos
outsl
jge
fidivl
cli
or
sar
jo
add
adc
xor
daa
outsl
cld
movsb
mov
lea
scas
xchg
mov
jmp
sbb
idivl
mov
sarl
cmpsb
fsubr
and
mov
cmp
mov
lds
mov
stos
hlt
test
movsl
mov
and
jae
mov
loopne
das
out
shrl
xlat
dec
dec
mov
stos
pop
mov
adc
jae
xchg
adc
mov
dec
sub
inc
mov
push
push
cmp
out
push
out
jne
mov
jnp
test
loop
hlt
push
ret
fmuls
subb
rcr
arpl
insl
adc
sub
lret
jno
jmp
add
aam
mov
add
sar
in
adc
mov
test
adc
in
mov
cmp
or
cmp
adc
push
xor
je
bound
push
iret
pop
jle
jmp
sbb
and
cmp
popa
sub
aam
add
push
mov
lds
dec
or
jg
add
stos
addr16
xor
sarb
imul
xchg
jg
adc
pop
xchg
or
cmpb
mov
aam
nop
push
xchg
lahf
mov
adc
xor
xlat
jbe
cmp
std
call
test
cmp
in
dec
sbb
icebp
and
shl
inc
ja
cmp
inc
mov
sub
inc
pop
push
mov
lret
in
stos
mov
sarb
movb
imul
sbb
loope
aad
test
jl
test
inc
enter
and
ror
jo
loope
scas
adc
aaa
pushf
nop
mov
pop
pop
fdivrl
jmp
aad
sbb
jl
rcrb
movsb
mov
sti
lret
ss
fisttps
adc
sbb
add
sbb
push
dec
int3
arpl
push
pop
sbb
das
push
popa
es
mov
fstl
xchg
dec
lahf
pop
mov
pushf
icebp
jmp
stos
lods
inc
and
test
xchg
mov
push
mov
shl
lock
add
mov
out
cwtl
test
and
pushf
jne
stos
mov
push
fdivrl
adc
inc
inc
adc
enter
stos
mov
xchg
sti
inc
cmc
adc
add
pop
fmuls
lods
xorl
pop
stos
das
xor
cltd
hlt
scas
xchg
jno
or
nop
and
or
leave
mov
aas
xchg
pop
cmp
aad
lods
push
cmp
gs
mov
inc
scas
push
push
mov
and
incb
test
test
cli
cmc
cmp
mov
push
mov
ds
ja
mov
bound
sahf
imul
pop
inc
push
fdivrl
pop
mov
add
sbb
jns
xchg
add
insl
int3
lret
cs
adc
fidivl
push
in
or
mov
xlat
cmpsb
inc
push
pop
or
mov
jne
mov
cs
adc
cmc
or
movsl
dec
icebp
pop
jle
scas
push
int
and
popa
mov
sub
jg
dec
lds
jo
or
addr16
paddsb
fidivl
lret
nop
cmp
pop
sbbb
sub
das
aad
sbb
shrb
imul
push
sbb
push
dec
mov
addr16
push
sub
aaa
or
loopne
add
pop
sahf
or
xchg
cmpb
cmp
pop
js
lods
and
incl
jbe
push
cmp
mov
repnz
xchg
add
mov
addr16
pop
mov
mov
mov
test
add
cwtl
sub
mov
mov
ret
jg
pop
jb
pop
subl
out
xchg
jp
jo
lea
pop
call
jo
cmp
jmp
mov
mov
inc
push
es
xor
mov
jb
out
sbb
xor
cmpsb
cwtd
test
jae
out
adc
testl
adc
mov
out
out
mov
pop
ljmp
and
jno
cmp
sbb
arpl
jb
push
and
pushf
mov
lock
stos
jl
push
mov
sbb
xor
test
loopne
cmp
ror
lahf
cli
mov
lods
jbe
sbb
dec
jl
stos
mov
insl
hlt
fadd
cmpsb
sbb
jle
rolb
mov
jmp
enter
jae
mov
lcall
and
xor
imul
xor
jg
add
in
pop
push
mov
add
sub
dec
pop
filds
insb
inc
in
dec
mul
mov
popa
lcall
gs
fistl
mov
scas
mov
pop
in
arpl
and
xchg
es
jns
ja
ja
sbbl
cwtl
pusha
mov
ret
stos
inc
mov
cmp
mov
sub
sbb
stos
mov
orl
jb
sbb
adc
lods
inc
inc
shrl
add
sar
fsubr
push
addl
cld
mov
scas
inc
repnz
std
or
sub
aad
rorl
push
jg
mov
sub
mov
gs
xlat
outsb
xchg
xchg
je
cmc
int
dec
shrb
test
xor
jmp
mov
insl
jnp
pop
cmp
dec
jmp
pop
sahf
movl
push
mov
rol
popf
cmp
sbb
cmpsl
sar
jp
dec
in
fwait
mov
jmp
jle
std
and
mov
in
mov
aaa
lea
movsb
jmp
sub
mov
sahf
je
fisttps
mov
push
sbb
xchg
cld
movl
int3
mov
push
cmp
jg
cmpsb
and
pop
out
cwtl
xchg
sub
adc
push
push
enter
jne
push
or
cltd
je
inc
push
scas
inc
sbb
test
iret
xchg
jmp
es
orb
adc
mov
out
lock
pop
lahf
movsl
into
in
jbe
negl
fs
or
adc
inc
sub
js
cltd
clc
stc
mov
fidivs
fcoms
jg
hlt
jno
mov
mov
fwait
pop
popa
add
jne
insl
push
jg
lret
insl
stc
pop
adc
and
xchg
outsb
cmp
or
pop
cs
xchg
insb
dec
cmp
or
jmp
pop
cld
xor
push
sti
ficompl
add
inc
popf
add
adc
and
inc
cli
fwait
cmpsl
xor
push
inc
inc
roll
adc
movsl
je
pop
sub
fs
cmpb
jbe
clc
dec
pop
fwait
cmp
hlt
enter
dec
fidivrl
daa
call
aam
jg
imul
or
lods
push
or
incl
adc
jmp
cli
or
sub
mov
dec
lret
out
stos
push
aad
ret
mov
repnz
jg
inc
test
fists
push
pusha
data16
test
ret
jnp
dec
dec
jmp
ds
mov
cmpsl
jo
lea
sbb
and
repz
cmpsb
push
mov
ja
jae
clc
push
mov
push
sub
lock
or
xor
dec
add
jae
lock
pop
cmpsl
add
xchg
shll
aam
dec
stc
ds
add
and
int3
xchg
mov
dec
lock
sub
sbb
negl
push
cltd
out
cmp
xor
mov
cmp
mov
dec
scas
inc
sub
add
insb
mov
sbb
das
mov
sub
cmp
je
nop
nop
adc
or
lcall
jmp
pop
stc
xor
push
scas
lock
test
std
sarb
push
add
notl
imul
enter
or
add
xchg
rcll
hlt
fimull
cwtl
ret
jp
or
dec
dec
addr16
mov
or
loope
inc
add
fs
int3
pop
mov
pop
xchg
cmc
sub
stos
or
jbe,pn
pushf
test
repnz
fisubs
cmp
sbb
inc
lret
lahf
cmp
roll
sub
js
pop
or
cmp
test
sbb
xchg
sub
mov
pop
push
mov
jne
cmp
movsb
cmp
lcall
es
loop
inc
loopne
add
outsl
jnp
lods
push
adc
hlt
fs
test
mov
lods
out
lret
popf
add
cmp
int
inc
jae
dec
xchg
jbe
lds
int
mov
push
fcoms
dec
das
push
filds
dec
mulb
out
mov
dec
mov
lcall
cmp
cs
dec
sub
xchg
mov
mov
or
adc
push
mull
cltd
test
cmpl
push
mov
jmp
inc
dec
pop
push
jno
mov
fidivl
sbb
jl
iret
mov
push
test
mov
adc
add
cmp
outsl
jne
pop
sbb
add
and
jp
mov
lret
inc
es
mov
popa
and
scas
push
inc
cmovnp
sub
xchg
jp
inc
nop
stc
iret
frstor
std
push
iret
movsl
inc
and
test
push
fsts
inc
mov
sub
test
or
stos
inc
xlat
and
cmp
adc
xor
in
out
add
je
les
pop
cmc
jecxz
lds
movsl
inc
xor
dec
dec
sbb
ret
jle
inc
lcall
sub
enter
add
push
dec
jb
cmpsb
pop
cmp
add
insb
xor
cmp
into
pop
out
test
lahf
daa
cmp
andl
fbstp
pop
xor
icebp
add
and
add
adc
xor
outsl
lahf
inc
mov
mov
divl
sub
sarl
mov
jb
adc
sbb
outsl
add
adc
cmc
xchg
cmpsl
inc
mov
adc
mov
mov
xor
jno
repnz
push
sti
pop
ret
pop
mov
dec
dec
cltd
insb
jle
lds
mov
pop
shll
or
sub
pop
out
xchg
data16
xchg
lahf
adc
pop
outsl
and
lods
incb
int
push
pop
hlt
dec
sbb
hlt
cs
and
popf
pop
xor
stos
cli
and
psubsb
push
or
jns
leave
shrb
pop
les
iret
cmp
add
sub
jns
rol
mov
xchg
push
xchg
ret
cmp
sbb
scas
mov
and
adc
in
cltd
cmpsl
xchg
stc
aam
stos
mov
push
out
xor
cmp
jge
lods
ljmp
es
push
aam
inc
stc
sub
push
or
pop
and
xchg
insl
pop
sahf
sahf
mov
out
es
cld
idivb
stos
and
fnsave
mov
cmpsl
sbb
aas
push
jo
lock
fwait
cli
pop
popf
jno
cmpsb
fwait
cli
aam
add
fldt
sbb
inc
hlt
stos
repnz
xchg
sub
arpl
iret
push
inc
out
jne
dec
scas
pop
dec
add
inc
scas
mov
adc
mov
add
dec
lods
add
push
lods
ja
cmp
cmp
ficompl
clc
in
out
jp
fnstsw
jae
ljmp
mov
cli
lea
adc
shl
inc
cmp
pusha
pop
inc
sbb
lcall
or
mov
or
sub
add
push
pop
sahf
lcall
sbb
fucom
sub
xchg
adc
add
xchg
stc
sti
cltd
std
xor
push
dec
jno
imul
stc
and
nop
repz
subb
xchg
not
dec
repz
mov
rcl
outsb
scas
inc
mov
andl
pusha
pop
xor
pop
mov
imul
bound
idivb
shlb
jo
js
stc
mov
ljmp
fstp
aam
pop
pop
inc
test
jg
je
pushf
movsl
imul
jnp
subl
jle
jl
cmpsl
mov
or
inc
jae
sub
jnp
repnz
pusha
or
cltd
std
scas
loop
dec
aad
or
movsl
pop
daa
outsl
aam
cltd
xor
aad
sbb
jb
cmp
inc
mov
xor
sub
pop
hlt
fs
inc
dec
js
fidivrs
inc
enter
add
mov
jae
andl
push
jge
jnp
aam
mov
dec
xchg
scas
pop
movsb
repnz
les
les
and
dec
orl
aad
push
testb
push
push
mov
jbe
mov
loope
dec
mov
xchg
nop
sbb
push
and
pop
or
repnz
or
mov
cwtl
sub
lock
and
sub
movsl
pop
xor
ret
scas
lods
stos
inc
adc
mov
xor
pop
stos
les
vpor
mov
insb
cmp
imul
test
int
and
das
es
and
inc
mov
sub
add
lret
clc
or
orl
ret
mov
adc
jns
push
xor
xchg
add
in
push
out
xor
push
jne
xchg
insb
add
mov
fsubp
pop
ja
dec
pop
data16
cmp
sub
pop
jb
mov
shrl
test
pop
mov
icebp
mov
out
add
ss
fbld
shrl
xchg
mov
fcmovbe
insl
or
js
inc
push
shrl
arpl
xchg
shlb
pop
push
les
jns
dec
scas
insb
test
sahf
fcoml
stc
enter
fs
jle
mov
jno
ret
mov
ret
dec
loope
shll
leave
add
sub
add
mov
ss
adc
inc
js
lods
popa
fdivl
fidivrl
or
fwait
xor
xchg
sub
jl
call
into
outsl
push
add
lea
add
xchg
ss
inc
test
ja
adc
pop
insb
add
jnp
mov
jmp
xchg
sbb
or
pop
pop
divb
ljmp
mov
jnp
push
sbb
push
mov
jp
jbe
jmp
cmc
mov
jp
lcall
fnsave
and
stos
jmp
testl
stos
in
mov
and
push
sub
xchg
stos
icebp
ret
je
mov
jb
bound
repz
adc
dec
pushf
dec
in
imul
sbb
shlb
cmp
inc
nop
mov
push
adc
fwait
xor
xor
fidivl
addl
mov
mov
or
testb
add
jecxz
loope
xor
mov
pop
pop
jbe
ss
shlb
out
aaa
pop
xor
insl
fs
test
in
in
lret
bound
inc
inc
push
and
cmp
and
outsl
jnp
xchg
sub
stos
adc
and
lret
test
imul
xchg
jo
ret
cli
mov
popa
mov
nop
daa
xor
loop
jns
pop
inc
fisttpl
lahf
repnz
jmp
in
xchg
or
test
cltd
mov
pop
repz
or
cmp
inc
fcomps
or
cmp
hlt
mov
push
xor
jbe
mov
push
and
mov
sbb
imul
lcall
daa
rcr
xor
pop
inc
movsb
cmp
loopne
gs
add
mov
lcall
push
pop
in
popl
adc
int3
out
loope
pop
ret
add
xchg
mov
mov
insl
fdivl
adc
inc
js
lds
push
in
cmpsb
adc
je
jg
cmc
lods
fdivrl
movsl
mov
pop
icebp
cmp
sbb
add
mov
arpl
inc
fs
mov
test
mov
jae
dec
mov
je
push
test
jp
and
dec
jg
mov
push
jle
int
and
push
jg
pop
scas
lds
mov
sub
pop
jle
das
scas
int
mov
mov
dec
out
gs
xchg
mov
into
out
adc
mov
insl
push
lods
lahf
mov
fsubrs
and
push
dec
adc
sbb
dec
adc
adcb
dec
pushf
xor
nop
shlb
pop
pop
hlt
xor
sti
sub
sub
jno
push
sub
aaa
dec
ret
pusha
div
or
imul
insb
add
out
je
adc
pop
dec
xor
push
fwait
or
mov
adcb
lret
xor
andb
mov
mov
inc
push
out
test
cmp
push
out
pop
test
enter
xchg
popa
clc
and
leave
push
out
push
push
lret
sti
or
or
enter
mov
xchg
lret
cli
mov
aas
pop
bound
popf
xchg
shrb
lea
pop
pop
push
mov
roll
enter
pop
push
call
outsl
std
fwait
stc
leave
and
push
push
or
sti
pushf
hlt
mov
daa
shlb
dec
dec
jecxz
int3
lods
inc
add
sub
jp
js
scas
inc
cmpsl
test
inc
fnstsw
jbe
inc
shlb
je
pop
cmpsb
xchg
out
test
sbbb
pop
test
xchg
outsb
sbb
popa
mov
data16
xchg
data16
xchg
push
out
nop
mov
lds
cmpsl
xchg
pop
iret
xchg
nop
inc
ffree
mov
mov
pop
fsubrs
fs
inc
cltd
mov
mov
fs
in
mov
cmp
out
adc
je
ds
mov
pop
out
fimuls
jge
xor
sub
outsl
xchg
dec
pop
icebp
jle
repnz
popf
mov
lret
or
jbe
ljmp
testb
xchg
es
cmp
or
push
pop
sub
aaa
movsb
mov
fimuls
insb
xorl
add
subl
cmpsl
pusha
mov
scas
inc
mov
fistpl
jbe
jl,pn
pusha
test
fiadds
pop
mov
xlat
pop
icebp
add
iret
test
inc
fcmovbe
je
xchg
enter
inc
jg
jns
mov
fmul
jb
les
lds
idivl
sti
adc
cld
adc
add
les
jle
in
cmp
mov
insl
outsb
adc
outsb
add
xchg
out
mov
call
or
outsb
add
xchg
out
call
mov
in
xchg
popa
test
inc
fnsave
into
gs
shrl
dec
in
addl
shrb
daa
and
das
jp
popa
clc
stc
cmpsb
jl
xlat
daa
popf
xor
clc
pushf
xor
dec
mov
hlt
cmpl
dec
push
and
xchg
sub
sbb
add
jae
flds
sub
lret
rcll
out
sbb
jg
mov
mov
mov
das
xchg
ja
xor
jbe
mov
mov
stos
scas
push
pmuludq
jnp
mov
loopne
ss
repz
int3
outsb
fisttps
ror
dec
in
mov
pop
sbb
lds
mov
cmpsl
gs
pushf
xchg
xchg
or
push
cmpsl
xchg
sbb
jnp
dec
loop
ficoms
inc
dec
mov
js
pop
lds
test
fisubs
cmc
test
jecxz
mov
and
jle
repz
das
sub
pop
mov
int
aas
out
test
cvtps2pd
inc
loope
shll
cmp
fsubrl
or
std
or
stos
mov
pushf
nop
jmp
inc
ret
aas
mov
testb
rclb
es
push
lods
pop
push
xchg
sbb
sub
dec
jp
out
xchg
aad
and
fbstp
bound
cmp
sub
jmp
cmpb
imul
fisttpl
pop
mov
outsb
mov
adc
movsb
mov
notb
jmp
push
mov
cmp
xchg
daa
shlb
loopne
push
fstpl
scas
xor
sti
xchg
inc
fcmovb
int
adc
and
mov
into
inc
mov
push
mov
lods
ljmp
daa
loop
rol
iret
cmp
negb
sbb
xor
add
lcall
pop
leave
jmp
dec
loop
fldl
ja
cwtl
dec
aas
push
aam
addb
mov
sub
int
jl
fcompl
sub
cmp
shrl
cld
setno
mov
insl
inc
into
xor
mov
inc
inc
sbb
pushf
dec
mov
push
mov
xchg
insl
push
stos
pop
add
inc
cmpsb
cmp
sbb
popf
push
mov
mov
clc
syscall
loopne
sbb
adc
addr16
dec
cmp
pop
mov
pop
les
cld
jecxz
mov
adc
xchg
xchg
jl
xchg
out
xor
in
sbbl
dec
roll
int3
jb
flds
push
jmp
sti
jmp
and
pop
enter
pop
das
rcr
out
mov
dec
pop
or
dec
mov
repz
imul
outsl
mov
push
int3
fs
mov
jo
jp
lcall
mov
or
mov
cltd
cld
sub
mov
shlb
push
jae
mov
rol
inc
rclb
xchg
xchg
and
xchg
dec
ret
lods
jnp
ficomps
jns
stc
mov
addr16
sub
pushl
movsl
xor
jp
in
sahf
sbb
cltd
hlt
lds
or
or
hlt
aad
int
xchg
sub
and
pop
mov
mov
jae
out
xchg
in
jno
lret
aam
pushf
xor
mov
sar
mov
enter
les
sub
and
pop
rolb
inc
mov
fdivrl
mov
into
and
movsb
sbb
bound
mull
test
lret
clc
and
jae
mov
cs
push
enter
cli
ss
push
xor
xchg
pop
outsb
or
fcoms
pop
cmp
mov
inc
mov
cmp
sti
stos
jge
mov
ljmp
cmc
dec
pop
jecxz
mov
push
mov
jae
mov
lcall
push
pushf
popf
xchg
and
push
sbb
push
adc
xchg
daa
pusha
sub
jbe
stos
dec
jbe
and
imul
imul
inc
stos
cs
jns
insb
dec
mov
jmp
test
sub
pop
sub
push
in
ljmp
out
sbb
push
cmpsb
cli
sub
aam
addl
inc
je
pop
rorl
sub
stos
pop
fists
add
in
and
jmp
dec
mov
cli
sbb
pop
icebp
push
sbb
repnz
pusha
mov
iret
cmp
mov
inc
sbb
das
fcom
out
popa
lahf
mov
xor
and
inc
dec
aam
cmpsb
inc
fwait
repz
hlt
xchg
adc
jns
mov
mov
add
pop
repnz
mov
in
movl
mov
iret
lods
lcall
insl
xchg
ja
aam
fs
push
mov
jo
jo
outsb
nop
mov
js
bound
outsl
mov
pop
subl
sub
sub
jge
aad
cmp
fstl
rclb
pop
xor
imul
add
mov
fcoms
jae
or
cmp
inc
outsl
xchg
jl
dec
or
push
dec
nop
mov
or
scas
mov
stc
testl
adc
repz
lea
sbb
mov
push
inc
pop
bnd
test
push
cwtl
imul
adc
jae
hlt
imul
test
out
shlb
or
cltd
jb
mov
and
mov
push
cmp
or
fcoml
pop
in
test
cmpl
sahf
stos
sbbb
pop
hlt
cmp
hlt
jg
cmp
test
sbb
xchg
add
popf
or
pop
mov
push
cs
or
push
jo
into
cmp
repnz
ret
add
loopne
in
mov
bswap
imul
push
cmp
lods
pop
add
gs
sbb
rcrb
xlat
dec
fstpt
mov
rol
fildl
mov
mov
mov
cs
idivb
cmpsb
or
dec
in
mov
jecxz
popf
mov
xor
or
stos
aaa
jmp
gs
cmc
inc
push
int
popa
and
dec
shlb
jmp
int3
imul
or
out
sbb
filds
pop
add
aam
add
ret
aad
leave
leave
inc
out
imul
xor
aaa
inc
dec
loope
and
push
mov
and
dec
lock
aas
mov
inc
int
adc
sub
xor
xchg
xchg
lea
push
cmp
orb
jno
pop
shl
and
xchg
lock
hlt
fwait
adc
sub
movsl
adc
lcall
roll
data16
mov
and
movsb
repnz
fsub
xchg
sub
fmulp
inc
lret
push
dec
aad
mov
sub
movl
or
adc
add
je
fs
xor
xchg
imul
push
and
sub
das
frstor
loop
test
aaa
fstpt
out
sbb
sub
lock
repnz
rcll
cs
fadds
insl
insl
lahf
mov
andb
imull
lcall
loop
jecxz
pop
shlb
pushl
pop
mov
push
and
inc
mov
mov
mov
pop
repnz
cmp
jge
cmp
pop
xor
in
aaa
adc
mov
adc
addl
lret
and
jae
in
sbb
pop
iret
lea
ljmp
and
sub
xchg
xchg
mov
clc
stc
sub
sbb
cmc
sbb
jo
call
mov
in
dec
mov
fcmovbe
dec
out
pop
enter
jo
push
sub
mov
cmc
sbb
xor
sbb
sti
xchg
rol
cmp
hlt
add
into
frstor
in
daa
rcl
dec
in
roll
push
les
scas
push
pop
cli
cmpsb
call
es
daa
inc
mov
imul
inc
lods
aas
les
and
fs
jno,pt
mov
aad
cmpsb
mov
mov
mov
xchg
push
fs
and
add
jo
mov
push
cmc
cmp
cmp
push
xchg
mov
add
lds
jmp
imul
sahf
xor
xor
cmp
mov
mov
insl
cmpsl
arpl
fdivrs
xchg
mov
outsl
xchg
lret
jnp
mov
clc
push
fisttpl
stc
and
repz
test
or
push
mov
sbb
xor
mov
or
fsubrs
in
push
xchg
imul
int3
pop
aam
add
in
popf
sbb
cld
outsb
addr16
cmp
daa
ljmp
push
stos
rolb
aam
pop
hlt
cmp
mov
stos
jle
hlt
push
inc
fsubrs
out
and
f2xm1
inc
fcmovnu
fstl
int3
sti
adc
imulb
sbb
cld
mov
rorb
std
xchg
inc
push
aam
pushf
dec
arpl
cmpsl
push
cmpl
sarl
mov
faddp
aaa
fsubrl
and
int3
pop
out
rorl
movsl
add
push
xchg
mov
arpl
scas
rclb
sbb
sti
ss
cmp
shlb
push
rorl
mov
push
aam
movsl
ljmp
aad
dec
fisubs
popa
mov
iret
sbb
add
and
ret
fstpl
inc
addr16
sbb
xor
lret
subl
jae
dec
sbb
xchg
pop
add
shlb
sub
adc
sbb
sahf
inc
fcmove
out
jmp
cli
and
stos
fsubrs
into
fisttpl
scas
shlb
mov
les
mov
inc
call
test
sbb
js
nop
mov
movsl
and
jae
jmp
popa
jnp
aad
cmpsb
cmp
fsubs
test
aad
imul
push
xor
sbb
fwait
mov
movups
xchg
mov
cltd
pop
adc
mov
push
adc
add
pop
sarl
pop
fists
push
cmpl
mov
sub
ss
test
sbb
scas
movsb
addr16
and
outsb
iret
inc
ss
jae
out
arpl
cmp
adc
dec
xchg
ret
fs
xor
stos
inc
out
lret
inc
inc
or
es
and
jae
adc
inc
sub
cwtl
mov
mov
push
sarl
jecxz
xchg
xchg
pop
mov
sbb
dec
std
int3
push
rcrl
aas
aam
sub
ret
adc
inc
lds
fidivrs
rcrl
aam
or
jb
jno
aad
jecxz
fwait
xchg
push
rcl
outsb
fdivl
add
mov
rolb
inc
xlat
sahf
mov
push
rclb
shll
add
fiaddl
push
inc
rolb
or
repnz
xchg
sbbl
mov
clc
xchg
es
or
inc
cmp
daa
xchg
dec
or
fs
jnp
adc
test
cmp
imulb
adc
int3
pop
adc
shrl
outsb
aad
sti
mov
sbb
lods
test
hlt
daa
mov
jnp
sbb
add
push
aaa
fwait
inc
mov
insb
fisubl
sub
mov
cld
fistl
loop
adc
pslld
jl
lret
das
movsb
testb
xchg
repnz
mov
loope
in
and
movsl
shlb
xchg
push
mov
pop
das
filds
and
mov
jmp
or
data16
test
xlat
or
loopne
sti
pop
test
cld
repnz
fcom
sub
inc
fcmove
rorl
les
dec
in
and
xchg
mov
jb
add
fldl
add
fdivl
gs
mov
aas
push
ss
insb
xor
popf
in
sbb
loope
mov
xor
and
arpl
in
ds
mov
jo
fs
hlt
and
jns
adc
mov
add
xchg
fmull
dec
jns
cmp
mov
jge
and
stos
cmp
push
xor
ret
pop
ja
add
dec
daa
fnstcw
outsl
cld
sub
jp
fiaddl
jecxz
icebp
addr16
leave
inc
mov
push
repnz
xor
arpl
repnz
cmpsl
scas
fs
push
int
pop
sbb
xchg
das
negb
fwait
dec
mov
jne
imul
scas
mov
mulb
les
xchg
push
xlat
jae
jecxz
outsl
mov
mov
ret
icebp
add
loop
adc
xchg
adc
notb
pop
daa
in
xchg
movmskps
lods
push
or
lock
mov
out
das
stos
negb
sti
jge
and
lods
stc
xor
mov
jo
and
sub
sarb
enter
divb
mov
enter
cmpsb
cmp
xchg
nop
and
sti
das
push
inc
stos
xor
jg
in
mov
and
inc
mov
sbb
xorl
or
or
sbb
adc
add
xlat
out
data16
in
aam
inc
ror
dec
mov
shrb
xchg
aad
stos
jmp
add
xchg
ss
into
aas
out
inc
out
gs
movups
cmp
add
stc
and
sbb
sub
sbb
out
sub
int
cld
xor
lds
int
jae
ss
les
mov
pop
insl
sbb
mov
xchg
imul
outsl
je
xor
mov
jle
adc
sub
sub
cmp
xor
xor
pop
in
popf
aas
into
daa
das
in
out
int
out
loope
adc
mov
fsts
mov
sbb
mov
aad
leave
call
jmp
rcrb
xor
rcr
push
aam
jecxz
sbb
mov
mov
dec
sbb
inc
mov
cmp
shlb
pop
jns
dec
subb
adc
push
int
cmpb
push
cmp
fists
pop
push
leave
xchg
jmp
adc
cmpsb
icebp
shrl
adc
call
gs
push
jmp
das
repz
int3
cmp
in
aam
lock
clc
jecxz
int3
arpl
cmp
and
std
xlat
cmp
pop
sbb
addr16
iret
data16
push
xor
add
mov
ret
out
jecxz
cmc
dec
daa
mov
jo
dec
shrb
insb
int3
stos
inc
mov
fucomip
xor
mov
test
enter
and
loopne
adc
movb
les
adc
and
shr
xchg
or
lret
adc
xchg
jp
xchg
inc
scas
pop
ficomps
pushfw
ljmp
jg
inc
inc
cmp
mov
dec
pop
jo
xchg
dec
push
int
push
inc
mov
sahf
mull
fdivrs
jno
call
stos
push
out
inc
mov
inc
sti
xor
shlb
inc
imul
pop
cmp
popf
and
jmp
xor
and
addr16
xlat
cmp
pop
movsl
dec
jo
sbb
jle
clc
xor
push
loopne
push
jns,pn
into
xor
stos
mov
clc
push
mov
fs
pop
add
cmpb
mov
jle
mov
mov
pop
or
nop
push
mov
dec
out
push
mov
jle
dec
mov
push
cmpsb
cmp
inc
and
icebp
das
imul
loop
xchg
int3
push
divb
mov
push
test
cli
flds
xchg
mov
js
clc
sbb
scas
mov
sub
rcll
or
inc
inc
or
inc
sub
mov
pop
add
add
cltd
or
sbb
add
ss
fwait
sub
add
clc
and
imul
pop
pusha
stos
xchg
pop
or
xchg
mov
pop
xor
cmpsl
adcl
sbb
mov
cmp
adc
pop
addb
and
mov
sbb
mov
add
outsb
lods
mulb
pusha
testl
inc
sbb
sarl
mov
repz
es
add
mov
icebp
scas
mov
mull
jne
movsl
mov
pop
shll
aad
lods
sbb
mov
dec
aam
nop
inc
mov
mov
fists
pushf
jnp
test
mull
ss
xor
arpl
sbb
add
sarb
repz
call
push
and
iret
inc
and
mov
arpl
les
cli
and
xchg
jmp
jo
movsb
or
loop
out
sbb
or
loop
add
xchg
pop
sbb
out
xchg
and
adc
hlt
adc
cwtl
inc
fdivs
lret
gs
cmp
test
dec
jbe
push
in
lods
jne
jne
adc
xchg
nop
ret
xchg
xchg
jge
fisubrl
bound
icebp
add
aam
mov
sub
out
idivl
fdivrl
into
xchg
mov
hlt
loope
mov
repnz
and
leave
or
jg
mov
mov
mov
jbe
arpl
ds
inc
lahf
pop
daa
in
pop
in
mov
push
or
push
cs
insl
rol
mov
cmpl
add
xchg
jno
fnstenv
aaa
test
fstp
push
loope
mov
leave
mov
data16
sbbl
sub
aas
lahf
aam
ds
dec
test
scas
xchg
fcmovne
xor
sarb
cmp
std
test
jmp
lods
ss
andl
push
add
xchg
push
jae
jae
icebp
sub
xor
in
daa
mov
into
fisttpll
jl
scas
and
or
pushf
and
std
imul
ret
mov
std
sbb
repnz
cmc
daa
mov
test
lret
lret
xchg
aas
icebp
push
inc
mov
xchg
cmp
and
inc
aaa
push
jbe
ss
xchg
sub
adc
inc
leave
and
imul
pop
jne
orb
push
push
rcrl
xchg
sub
dec
aaa
mov
pop
sbb
mov
out
xor
divl
out
popa
fildl
mov
lods
outsl
inc
iret
into
cmp
push
mov
bound
mov
inc
sub
js
push
movsb
jns
jo
dec
cmp
test
mov
test
mov
jae
outsb
mov
xor
outsl
ret
fwait
arpl
loop
inc
subb
imul
adc
movsl
push
je
xor
ret
jbe
iret
and
xor
jns
loopne
adc
mov
fstpl
or
fcmovne
ljmp
jecxz
inc
jecxz
push
or
mov
xchg
add
call
mov
gs
rcrb
fistl
pop
cmc
in
add
inc
jg
call
outsl
stos
sti
pushl
shl
mov
pop
mov
aaa
sub
psubb
dec
pop
sub
je
mov
dec
cmp
push
mov
call
divl
fistpl
and
mov
in
inc
int
inc
cmpsl
jge
ret
sub
push
addl
outsl
imul
hlt
mov
sbb
setno
flds
gs
inc
xchg
inc
fisubrl
jp
loop
dec
inc
mov
dec
ds
mov
clc
push
mov
push
int3
push
int
push
es
push
int
mov
lock
stc
jnp
jns
xlat
cmp
xchg
jno
int
stos
orb
lret
bound
jge
popf
xor
xor
icebp
lods
insl
dec
les
or
jmp
ljmp
dec
and
gs
xor
sarb
out
pop
aam
in
adc
ljmp
ljmp
jno
rorb
add
jns
sub
outsl
loop
pop
adc
mov
pop
dec
loope
and
mov
rep
outsb
enter
and
movsb
xlat
outsl
or
mov
cli
js
cmc
dec
out
mov
les
dec
push
fcoml
popf
ss
push
into
jle
sub
bound
fisttpl
inc
iret
gs
mov
pop
jp
mov
xlat
and
pop
aam
pop
scas
inc
push
dec
inc
mov
inc
dec
pop
repz
mov
aad
mov
arpl
pop
lock
aas
loope
jle
imul
sbb
jmp
jne
push
cmp
mov
arpl
lds
mov
rorl
call
cli
cmpsb
mov
sbb
movsb
lahf
shl
jnp
or
scas
movsb
popf
nop
mov
repnz
test
add
pop
mov
cmpsl
pushf
jns
and
jle
lods
jno
jmp
into
sub
jmp
sub
jno
or
fsubs
and
cmp
pop
movsb
js
cld
dec
icebp
sub
lods
jae
xor
mov
ret
ds
and
ret
outsl
flds
rorl
jbe
dec
xlat
inc
fisttpll
pusha
mov
jb
jns
cmp
stos
and
test
add
iret
or
test
lret
jecxz
pop
fucomip
mov
mov
hlt
push
out
rclb
or
push
xchg
sub
push
dec
mov
fcmove
data16
movsl
cmp
sub
ret
pop
in
or
cmp
sub
add
xchg
mov
ficoms
push
mov
jbe
cld
cmpsl
cmp
das
leave
sbbl
push
pop
icebp
sbbl
paddq
push
mov
ret
fidivs
xchg
adc
sbbb
push
popf
xor
call
jno
push
mov
xchg
stos
inc
les
fcoms
call
sub
mov
jge
sub
into
sahf
sbb
jmp
pop
inc
jo
push
jnp
test
daa
xchg
pop
int
jp
cmp
sbb
push
jb
pop
movsb
aaa
add
push
mov
mov
fildl
xchg
push
fidivrl
lods
test
lret
sti
andb
dec
sarl
call
push
popa
outsl
xchg
mov
dec
in
adc
dec
imul
push
iret
fwait
xchg
mov
sub
lods
pop
lock
and
or
xchg
sub
push
aam
jns
xchg
sub
mov
lret
xorl
sbb
add
add
add
into
sbb
loopne
xchg
jnp
sti
out
mov
or
mov
cs
repnz
int3
hlt
jb
cmp
xchg
imul
sbbl
test
pop
fcmove
pop
in
cli
jg
mov
cmp
pop
mov
inc
and
shrl
cmpsl
fistpll
inc
cwtl
negl
mov
xchg
and
cmp
js
xor
stos
xor
push
call
out
adc
jns
pop
push
gs
loope
pop
mov
jo
imul
in
jae
sub
mov
aad
pop
sub
popf
sub
mov
jb
in
enter
imul
xorb
push
test
and
push
enter
or
lret
hlt
inc
jb
popa
rcrl
xchg
test
mov
adc
xchg
pop
dec
in
xorl
insl
cmp
or
mov
fstpt
push
pusha
je
xor
lea
mov
pushf
mov
dec
dec
xor
clc
out
fists
dec
lock
cmp
xchg
mov
fisttps
test
mov
dec
inc
push
and
jmp
cmp
popa
mov
in
inc
cpuid
push
test
adcb
xor
mov
cmpsl
adc
push
pusha
into
adc
into
lds
cmp
rcr
scas
jae
outsb
adc
ljmp
push
popa
arpl
scas
dec
or
jge
inc
push
rolb
cmp
pop
outsb
inc
mulb
ds
and
xchg
mov
mov
arpl
dec
aas
test
add
lret
jmp
mov
inc
testb
icebp
jecxz
out
inc
jg
adc
loopne,pt
pop
arpl
imul
popa
icebp
ret
popf
icebp
nop
imull
mov
adc
xchg
xor
inc
mov
ss
daa
aas
test
cmp
cs
mov
pop
movsb
das
sbb
mov
dec
shr
inc
jle
pop
ljmp
test
mov
and
xchg
mov
or
nop
sub
dec
mov
cmp
adc
sub
and
push
fstp
rcrl
push
inc
adc
pop
or
int3
or
icebp
push
daa
push
dec
bound
adc
mov
and
scas
inc
mov
mov
stos
push
push
in
xchg
pop
cmp
fisubrs
push
lods
jno
out
dec
dec
jecxz
add
lcall
mov
sti
arpl
sbb
jbe
add
mov
ds
jnp
xchg
sarl
cli
xchg
lods
jno
lahf
bound
stos
ds
jne
and
sahf
sar
pop
add
iret
cs
in
lahf
shrb
ret
add
inc
shrb
cmp
pushf
iret
xor
rolb
pop
jne
mov
jnp
xor
jae
cli
add
cmp
mov
push
lret
sbb
mov
adc
fnsave
cmp
mov
mov
int3
mov
mov
iret
mov
test
jmp
testl
sub
pop
stos
cmp
pop
cli
dec
or
fadds
jne
push
fistpl
jp
sub
arpl
int3
or
aaa
sbb
popf
inc
ss
push
dec
daa
negl
fwait
lcall
ljmp
mov
lods
jbe
xor
lock
and
or
push
lods
xor
pop
lods
xor
push
mov
sub
dec
cmp
inc
repz
cmpsl
sub
push
sbb
pop
lds
xor
insl
repz
cmp
rcrb
test
fistpl
shrl
xor
test
pop
call
mov
and
or
sbb
and
cld
sub
clc
loopne
cmp
cmp
xchg
fstps
shll
mov
out
popa
jmp
outsl
mov
xchg
cmp
pop
push
or
inc
pop
out
sbb
std
cmc
sub
push
push
pop
call
cld
inc
or
rcr
jg
sub
pop
test
mov
out
jb
xor
inc
or
aam
sbbl
repz
movsl
call
enter
out
inc
movsl
into
xchg
jnp
adc
jo
rolb
mov
mov
add
leave
xchg
xchg
xorl
and
lock
in
outsl
gs
orb
dec
adc
ret
inc
pop
push
stc
mov
es
stos
movsb
movsb
sub
fnsave
lret
mov
dec
pop
pop
jmp
xor
xchg
cmp
inc
or
in
dec
jp
das
mov
insl
test
in
sti
bound
cmpsl
sbb
enter
test
sti
loop
pop
mov
mulb
jecxz
adc
addr16
inc
bswap
andb
adc
push
ds
add
lock
enter
xchg
inc
popa
mov
sbbl
test
out
in
out
insl
sti
clc
sbb
fxam
or
loop
dec
or
cld
sbb
mov
mov
adcb
adc
cld
jmp
push
popa
out
shll
and
into
jnp
inc
rcrl
jno
sbb
aas
xchg
add
loop
xchg
inc
inc
stc
adcb
add
cld
mulb
les
loope
int
inc
adc
test
dec
cmc
xchg
cwtl
add
jge
es
push
out
inc
adc
push
aam
sub
fistpl
mov
dec
push
mov
mov
push
add
das
push
les
out
imul
lods
push
jns
addr16
movsl
and
mov
xor
sbb
es
dec
adcl
mov
lods
arpl
sbb
sbb
fwait
cmpsb
jnp
test
nop
std
cld
push
cmp
mov
sti
sub
cmpsb
insl
out
and
jno
adc
xchg
inc
fildll
and
xchg
inc
cltd
insl
add
and
cmp
cld
and
push
pop
sbb
add
mov
lret
add
cmp
dec
pop
ret
xchg
or
aam
inc
mov
jge
mov
or
out
add
xchg
rcr
arpl
push
ljmp
mov
sbb
fdivrl
or
pop
sti
movsb
pop
adc
pop
mov
jg
add
cmp
pop
sarl
mov
fstpt
sahf
xchg
inc
pop
mov
clc
cmpsl
test
cmpl
jle
add
xor
test
and
mov
mov
mov
ret
jo
leave
mov
jmp
mov
notb
add
mov
push
add
cmpsb
adc
nop
jp
fnstcw
repz
mov
stc
pop
lret
cmpsb
jae
and
cltd
cmp
jnp
fdivrs
repz
ja
fldl
xchg
pop
clc
pop
lret
jecxz
push
sbb
cmp
repz
in
cmc
arpl
mov
jmp
mov
flds
je
pop
add
lret
gs
or
xor
fcomip
and
pop
shr
repnz
push
add
mov
aad
jle
add
icebp
push
hlt
pushf
insl
repz
ljmp
push
scas
ss
loopne
adc
leave
jl
sbb
in
outsb
mov
insl
jae
and
cwtl
lock
into
cwtl
loop
leave
dec
lret
clc
sahf
push
std
mov
and
jmp
fcomps
xor
dec
cltd
bound
mov
push
push
popa
cmpsb
sub
and
jno
es
push
fs
lret
lahf
cld
add
xor
mov
and
jo
pop
ret
cmc
fs
ljmp
xor
mov
add
pop
add
ljmp
ret
loopne
and
gs
shll
mov
add
fldl
jbe
sbb
stos
arpl
nop
sarb
lds
pushf
lret
lcall
jne
cltd
ret
into
sarl
fsub
addr16
rcll
sub
stc
cltd
fadds
adc
push
rorb
inc
mov
fists
leave
and
test
cltd
rolb
nop
int
lret
add
fdiv
pop
xchg
iret
stc
arpl
and
mov
iret
in
fldl
xor
sbb
mov
lds
xchg
pop
movl
mov
mov
cs
std
pop
idivb
dec
or
jge
jg
cmp
in
lahf
jno
pop
aaa
cmpsl
xor
cmp
stos
add
cmp
out
lods
daa
mov
idivb
jmp
adcl
adc
fistps
sub
xor
cmp
sbb
jo
inc
popf
ds
adc
and
rolb
repz
add
mov
ret
aam
icebp
icebp
dec
pop
shll
jmp
adc
sub
enter
add
sbb
loope
pop
lock
int3
call
jg
es
cwtl
scas
cmp
lret
xchg
int3
repnz
or
jle,pt
mov
and
fs
test
or
pop
shlb
sub
sbb
test
pop
jl
sbb
sub
cmp
mov
mov
sub
push
in
add
sub
stc
pop
int
rclb
test
test
jo
pop
mov
ret
jge
add
lcall
or
frstor
jo
jnp
mov
lods
imul
jl
push
sbb
mov
test
sub
ret
inc
push
xchg
xchg
jb
shlb
int3
jle
insl
add
andps
inc
pop
mov
xchg
cmp
pop
fwait
xorb
iret
lods
arpl
sub
sbb
inc
inc
adc
es
and
out
push
pop
sbb
scas
int
jns
mov
jp
mov
out
in
xchg
aaa
jnp
das
mov
imul
push
sub
stos
aam
test
pop
repnz
push
cmpsb
aaa
cltd
into
test
mov
movsb
mov
jo
clc
push
inc
or
lock
js
repnz
xor
cmpsb
xor
stos
fdivl
aad
hlt
int
stc
pop
mov
xor
jnp
push
adc
popa
jmp
into
std
je
test
icebp
adc
daa
fmull
xlat
dec
jno
sbbl
dec
mov
push
mov
scas
xor
mov
and
jmp
sbb
fisubrs
mov
mov
test
lods
xor
mov
dec
maxps
aad
or
pop
enter
xchg
aaa
jae
push
clc
data16
and
sub
cmp
int
xorl
rorl
mov
gs
xor
mov
mov
mov
pop
cli
jo
lea
fmull
fdivr
pop
aam
add
ds
movsb
cmp
shl
jg
imulb
jg
repz
xor
bswap
loope
cmc
pop
inc
std
out
push
lahf
adc
xchg
xchg
or
bswap
ja
jmp
stc
leave
mov
add
push
sub
mov
mov
sub
test
aaa
leave
cld
mov
adc
mov
cld
arpl
sub
adc
fiadds
dec
jmp
pop
into
add
push
cmp
or
sub
nop
loop
gs
adc
imul
push
in
jb
pop
mov
mov
lahf
inc
cmp
cmp
das
aas
xchg
xchg
sub
mov
or
push
pop
sti
sub
outsl
in
pop
xor
dec
push
es
orl
push
rcl
dec
or
or
xor
cli
fidivl
cmpsb
sbb
fidivrl
inc
and
nop
push
xchg
js
inc
ljmp
mov
mov
sub
dec
scas
mov
sahf
in
je
cmp
movsl
mov
sub
popf
add
ja
shrb
cmpsl
pop
imul
mov
or
fnstcw
lcall
or
add
in
push
cs
mov
mov
mov
mov
add
jg
rcrl
enter
repz
pop
adc
ds
orb
fisubs
mov
lea
stos
test
cmpl
sbb
sub
or
cmp
push
jmp
jle
push
int
outsl
roll
xchg
mov
xchg
inc
or
int3
out
jae
out
add
data16
mov
jbe
mov
and
out
fdivs
cwtl
inc
pop
push
test
mov
int3
push
int3
les
dec
lods
xchg
cmp
test
mov
push
mov
sbb
dec
pop
cmpsl
addb
jl
adc
push
xchg
inc
add
outsb
int
xchg
mov
adc
mov
fadds
xchg
pop
test
cmpsl
cmp
adc
iret
jo
in
cltd
mov
add
fwait
rorb
stc
stc
add
out
jo
out
pop
cld
cmpsb
push
or
jns
mov
xchg
inc
fcoml
add
add
dec
or
mov
int
mov
push
jmp
or
inc
mov
mov
in
loopne
and
imul
xor
jge
add
cli
inc
push
and
cli
push
dec
lock
xchg
push
add
dec
or
fcoml
lods
inc
push
pop
cli
gs
cmp
arpl
repnz
jg
stos
lds
lret
mov
and
aad
xor
jb
pop
cs
xor
fisubl
pop
aad
in
imul
mov
xor
jo
pop
mov
enter
sbb
cltd
cmp
xor
mov
xor
sarb
sub
insl
repz
cmp
mov
out
cmp
fwait
jmp
jecxz
lret
sti
fisttpl
lret
js
dec
loopne
push
out
dec
push
cmp
popa
in
jl
cmp
out
jecxz
and
inc
push
das
cmp
jg
cmp
lcall
addr16
adc
shr
bound
adc
push
mov
dec
arpl
dec
xchg
dec
sbb
dec
or
and
jns
dec
cmp
xlat
cmp
mull
in
adc
sub
pop
mov
fidivrs
lea
rcrl
or
outsl
sub
xchg
cmp
addr16
movsb
das
mov
cmpsb
xchg
adc
xchg
inc
push
enter
dec
test
sbbl
inc
ds
sbb
jle
cmp
sub
es
pop
pop
in
mov
push
jnp
mov
xlat
cmp
sub
dec
jecxz
mov
jp
fwait
scas
xor
aad
xchg
dec
or
sub
lcall
mov
stos
mov
jno
adc
pushw
lret
dec
cmc
adc
or
fsubs
sbb
pop
mov
inc
outsb
add
inc
xchg
or
or
pop
aas
movsl
pop
jge
mov
flds
dec
icebp
sbb
and
popa
jmp
shlb
movsl
sub
mov
mov
ljmp
mov
lods
mov
popf
cmp
int
jl
mov
stos
insl
icebp
add
mov
ss
std
popa
aam
jp
cmp
hlt
arpl
faddl
push
loop
das
stos
push
cli
inc
adc
mov
mov
fidivrl
lahf
dec
loope
stos
out
jnp
notb
jo
push
lock
cli
xor
in
insb
ljmp
mov
mov
or
push
pushf
ds
push
jbe
shrl
xchg
stos
sbb
mov
movsb
xor
test
mov
add
paddusw
lods
cmpsb
and
cmp
xor
adc
aaa
cmp
xor
sar
mov
jmp
popa
lret
mov
jbe
addb
mov
pop
sub
push
jge
pop
fsub
scas
xor
xor
fbld
inc
or
cmc
movsb
inc
pop
sbb
cmp
adc
and
push
jne
addl
pop
add
mov
dec
cmc
pop
inc
xchg
imul
cltd
loop
add
cs
pop
pop
push
inc
orb
mov
test
mov
outsl
jmp
inc
pop
icebp
gs
pushf
jmp
repz
hlt
mov
cmp
outsl
das
dec
icebp
pop
loope
movsb
jb
mov
inc
outsb
push
sub
cmc
push
mov
jg
fisubl
pop
cmp
push
cli
mov
lret
cmpsl
fildl
xor
das
scas
pop
and
add
icebp
insl
add
xchg
sahf
js
mov
lds
cs
scas
repnz
or
inc
pop
and
push
lock
add
adc
out
cmc
popa
leave
stc
test
jg
dec
stos
xor
cli
popa
push
pop
jnp
fwait
test
ret
inc
mov
test
movsl
pop
lret
fidivl
sarb
or
push
test
stos
pop
fs
add
call
xchg
cmp
cmp
xlat
nop
lcall
imul
push
sub
pushf
xor
imul
push
cli
inc
dec
mov
xchg
insb
imulb
in
jle
inc
arpl
push
clc
out
js
sbb
sti
mov
push
jae
adc
arpl
out
mov
pop
iret
bound
sbb
nop
outsb
mov
inc
push
and
push
cld
test
insl
icebp
mov
stos
adc
mov
cmpsl
jns
daa
aaa
scas
sub
pop
ret
iret
mov
lods
sub
test
out
fildll
and
lea
cmp
mov
jg
pop
push
imul
aam
jecxz
sbb
add
fimull
das
mov
mov
add
push
into
mov
lods
sti
arpl
test
pop
shl
aaa
cmpsb
into
or
jg
pop
xchg
inc
scas
xchg
sub
xor
pop
clc
stc
sub
out
out
push
jbe
push
mov
xchg
jns
iret
dec
int
sti
jo
fdivrs
outsl
adc
mov
dec
in
ss
fbld
and
pusha
mov
push
cld
repz
pop
sub
movl
dec
out
pop
xchg
fs
and
into
sub
mov
xchg
pop
daa
jecxz
sbb
sbb
dec
xchg
mov
mov
pop
stc
rcll
jl
adc
std
and
mov
sbb
rcrl
cmpsl
notrack
negl
inc
sub
push
pop
mov
sbb
push
clc
cwtl
fldenv
cmpsl
mov
inc
or
dec
mov
and
add
dec
adc
push
lds
sar
sbbb
in
push
cld
stos
push
out
mov
stos
sbb
aam
push
int3
push
je
jle
notl
jp
notl
loop
jg
clc
jle
sub
xchg
cmp
mov
dec
adc
dec
adc
cmp
jg
fldt
jo
jmp
and
pusha
jl
mov
ljmp
aas
lahf
mov
repnz
push
cmpsl
mov
jne
pop
pop
loop
jnp
das
cld
mov
cmp
dec
test
pop
paddsw
rclw
push
in
pop
cwtl
stc
fnstcw
movb
repnz
fistpl
test
and
ljmp
scas
push
mov
aad
cmp
rclb
js
imul
xlat
test
cld
ret
add
pop
sub
icebp
pop
push
aas
fdivs
pop
fmuls
mov
pop
cmpsl
jae
pop
or
mov
jae
sti
sbbl
push
sti
xchg
cmp
jae
sub
jp
mov
rolb
adc
inc
lret
xchg
ljmp
fldl2e
mov
loopne
xor
imul
das
ret
lea
in
leave
pop
clc
cltd
adc
sti
ret
mov
jge
jmp
icebp
inc
adc
mov
push
dec
cmc
out
mov
mov
lea
cmp
stos
mov
cmp
sbb
and
idivb
shll
jnp
pop
outsl
cmp
clc
sbbb
ljmp
push
mov
add
test
pushf
inc
push
fbstp
sahf
push
mov
mov
les
lahf
insb
test
push
sbb
push
icebp
pop
adc
mov
js
je
fisubrs
dec
lods
or
flds
call
inc
or
icebp
pop
mov
scas
scas
xor
inc
movsl
sub
jb
orl
cmp
adc
xchg
and
xchg
push
rorl
popf
inc
sbbb
aad
xor
jns
fwait
sub
sarb
ds
inc
sbb
es
mov
leave
xchg
cmp
negl
sub
pop
pusha
test
insb
mov
stos
push
lret
es
adc
jo
or
aam
pop
jbe
xchg
mov
pop
mov
or
inc
or
or
jbe
mov
popa
jle
push
cli
repnz
rolb
mov
leave
es
xchg
mov
stos
call
bound
xlat
mov
pop
xor
jecxz
mov
sbb
std
pop
pop
inc
jbe
xchg
cmpl
test
inc
rdmsr
or
insl
inc
das
jnp
and
mov
mov
cmp
and
fs
out
adc
mov
push
jp
push
clc
inc
jo
mov
movsb
mov
mov
cmpsb
cmp
mov
lods
ljmp
adc
dec
out
faddl
dec
cld
jne
jae
daa
stos
packsswb
mov
pop
mov
std
dec
adc
sbb
push
imul
scas
jecxz
dec
adc
xchg
adc
fidivrs
cld
sahf
cmp
inc
dec
or
xor
fidivl
push
lock
inc
lret
push
mov
test
sbb
xlat
or
mov
mov
sbb
sarb
std
pop
xor
les
fistpll
mov
cmc
mov
pop
add
addr16
les
push
sbb
push
sti
lock
xor
jae
test
pushw
shlb
fs
dec
adc
or
jp
pop
mov
subb
fcomp
xorl
gs
pop
in
or
dec
push
cli
stc
adc
cwtl
int3
out
push
enter
inc
mov
in
dec
mov
push
clc
pusha
das
int
enter
jmp
mov
sbb
inc
or
pop
add
ja
ljmp
xchg
inc
stos
mov
mov
cld
out
or
ret
test
xchg
fstp
jl
leave
dec
push
xchg
mov
out
aaa
lret
sub
and
cmp
push
sarb
inc
aad
fcoms
jmp
adc
fidivl
add
cmp
js
adc
aaa
bound
pusha
pusha
cmc
mov
cmc
xor
in
jne
and
jg
push
je
sub
pop
mov
int3
mov
mov
sarb
scas
and
mov
jo
jae
pop
push
mov
rol
xchg
inc
rorb
in
fcmovnu
roll
pop
test
sahf
pop
sbb
lds
jmp
repz
movsb
and
and
ljmp
push
inc
adc
dec
adcb
pop
cmp
pop
xchg
cmp
jae
lods
cmp
scas
xor
sub
sbb
adc
inc
stc
arpl
iret
xchg
xlat
lahf
dec
adc
mov
sub
fisttpl
aad
ljmp
das
insb
out
movsl
sbb
test
out
jae
movsb
psubq
mov
lods
add
mov
xor
flds
pop
xor
pop
add
mov
mov
imul
mov
movsb
cs
jecxz
and
outsb
hlt
test
mov
int
ret
ja
pop
sub
xor
jo
sbb
repnz
jmp
decl
jbe
pop
add
pop
add
dec
js
negl
jns
mov
test
cmpsb
faddl
mov
mov
cli
movsl
adc
test
and
cmp
mov
xchg
inc
test
mov
ficoms
dec
mov
imul
add
sbb
bound
sub
cmp
out
and
pushf
aaa
sbb
xchg
aas
fcmovne
cmpsl
add
dec
fbstp
push
push
int
adc
and
test
mov
scas
mov
inc
xchg
mov
xchg
cmp
ret
fdivs
cltd
cmp
and
enter
adc
loope
addb
jl
int3
pop
les
push
aad
or
cmpl
and
xor
je
cmpsb
sub
test
scas
icebp
fs
xlat
addb
push
add
add
mov
mov
leave
mov
mov
cmp
mov
mov
inc
mov
cli
dec
mov
inc
xchg
pushf
xlat
js
lds
or
ret
aas
fwait
sbb
jno,pt
ja
cltd
insl
stos
sub
lods
inc
cld
clc
mov
sub
lods
xor
dec
sbb
fsubl
gs
mov
xor
mov
dec
xchg
cmp
shlb
pusha
int
jbe
jne
jmp
clc
fldt
xor
sbb
xchg
pop
inc
adc
sbb
pop
imul
mov
frstor
adc
cmp
push
xor
jge
pop
push
stc
or
lods
xor
pop
aam
fs
jae
jbe
dec
repz
pop
add
mov
lods
int
jle
push
adc
dec
adc
inc
orl
rorl
out
cmp
cltd
inc
pop
xchg
dec
adc
mov
jb
in
pop
add
mov
sbb
lea
adcb
pop
cli
inc
dec
xchg
inc
and
adc
ljmp
das
add
test
pop
cmpl
ret
roll
dec
xor
loope
popf
lret
daa
addr16
pushf
cmp
jp
scas
stos
push
imul
insl
cmpsl
negl
jle
adc
scas
mov
pop
int
jae
pop
les
jns
icebp
mov
pop
adc
mov
and
lahf
in
xor
ret
mov
dec
or
lods
fsubr
imul
ret
nop
dec
or
stos
sub
pop
sti
mov
arpl
out
inc
pop
sub
mov
adc
push
insb
int3
or
inc
jae
loope
cltd
arpl
int3
jle
ljmp
shrl
pop
test
repz
psubusw
pop
lods
pop
xchg
ds
fiaddl
movsb
pop
sub
cltd
mov
clc
and
pop
mov
jl
pop
add
push
scas
mov
scas
xor
mov
test
mov
mov
dec
pop
inc
xchg
mov
outsl
jmp
sbb
pop
notb
ror
fs
fldl
sub
lods
xor
rcl
jp
push
add
push
inc
add
mov
and
faddl
mov
add
int
repnz
and
xchg
inc
int3
cmp
outsb
in
and
push
mov
or
pop
ret
shlb
mov
jne
xorb
jmp
fisubrs
stos
cs
mov
xor
dec
test
mov
cmp
rorb
ss
imul
loopne
cmp
push
fbstp
hlt
rclb
mov
divl
int
pop
jmp
iret
xchg
mov
daa
stos
fisttpl
mov
or
push
rclb
pop
in
adc
inc
push
int
leave
dec
or
aaa
clc
cld
pop
scas
xor
mov
push
divb
insb
pop
movsb
sub
lds
xor
xchg
mov
sbb
test
mov
iret
pop
lds
xor
cmpsl
pop
cli
or
gs
xor
xor
aad
enter
test
out
mov
jne
mov
in
sbb
cmc
pusha
add
fucomp
add
insb
pop
mov
jns
cmp
push
xor
adc
fnstcw
dec
lea
sub
rcll
xchg
sti
mov
call
mov
loopw
out
jge
inc
jae
gs
jo
dec
outsb
xchg
aas
lcall
dec
or
jle
js
sbb
addr16
dec
pop
mov
lret
or
lahf
and
cmp
leave
jo
test
cmp
stos
xor
lret
inc
or
add
xor
stos
pop
iret
xchg
jne
and
xchg
bound
movsl
lcall
mov
iret
push
ret
pop
push
ret
cmp
pop
mov
rcrb
or
test
dec
dec
or
aaa
mov
adc
dec
or
les
xchg
inc
dec
sub
sbb
fs
out
mov
xor
enter
mov
adc
mov
inc
adc
inc
xor
adc
test
jnp
fbstp
mov
add
arpl
stos
sub
lock
fstpt
or
pop
cwtl
aas
pop
add
mov
push
lods
xor
add
jl
mov
fs
mov
sbb
adc
scas
xor
in
popa
ljmp
push
cld
aad
mov
arpl
lret
cmp
data16
aas
sub
jle
sub
jb
lcall
push
xor
or
in
and
jp
fcmove
iret
aad
mull
arpl
push
out
jb
adcb
test
mov
lods
jecxz
mov
mov
sbb
sti
pop
movsb
push
scas
sub
push
lret
loopne
cmc
fs
stc
movsb
xor
into
pop
mov
mov
inc
adc
das
lods
and
rclb
xor
mov
enter
sbb
jl
les
bound
xchg
sub
mov
repz
paddw
sti
pop
inc
or
push
jne
mov
xchg
lods
sub
decl
push
sub
stos
sub
cmp
mov
lea
mov
rol
pop
add
ds
and
and
ds
mov
mov
fiaddl
shll
xchg
fiaddl
mov
jmpw
arpl
push
mov
call
push
pop
mov
popf
mov
pushf
mov
stos
and
jne
inc
or
sbb
test
inc
push
add
lock
adc
pop
push
cli
mov
cwtl
and
ss
stc
xor
notl
push
mov
mov
orb
jne
cmp
mov
js
imul
fcmovne
pop
stc
outsb
add
jae
push
arpl
mov
aaa
fnstsw
mov
sub
jle
push
add
fs
add
pop
pop
iret
cmp
mov
mov
mov
ror
lcall
jp
xor
xchg
enter
adc
sarb
lret
mov
cld
je
jg
pop
arpl
dec
push
adc
sahf
loope
pop
mov
mov
in
jb
xor
dec
aad
fidivrl
add
mov
inc
adc
lock
inc
push
mov
xor
jb
es
xor
fs
and
jns
int3
stos
jo
inc
mov
mov
dec
lret
insb
inc
or
inc
pop
mov
aad
mov
shrl
inc
or
push
ret
mov
mov
stos
xor
rorl
or
mov
dec
out
jbe
push
inc
mull
mov
lcall
outsl
jmp
mov
mov
adc
cmpsl
fucomip
push
in
xor
bound
mov
cld
add
jl
ljmp
cld
fdivrs
loop
pop
push
and
push
sbb
jp
jbe
mov
mov
in
lock
out
imul
xor
cmpsb
xor
and
sbb
ds
push
add
inc
daa
sbb
loop
outsb
jmp
stc
in
jae
out
cwtl
push
add
ret
ds
inc
andnps
or
popa
hlt
xor
imul
adc
bound
xor
dec
outsl
fstpt
xchg
loope
and
jns
pop
aaa
mov
loopne
add
test
mov
loop
fs
out
adc
dec
gs
jge
cwtl
das
and
sbbl
inc
mov
pop
mov
add
pop
and
ds
mov
adc
das
cli
nop
cmp
aas
pop
add
xor
xchg
push
mov
movsl
mov
rcrb
mov
push
out
and
aaa
popf
xchg
xor
ret
call
xor
in
icebp
pop
outsb
repnz
jl
sahf
cmp
dec
push
je
xchg
or
xchg
dec
and
jl
push
out
mov
filds
jge
inc
or
outsb
cmp
sbb
dec
mov
or
jp
fistps
or
adc
addb
cmp
lock
leave
nop
loop
mov
or
mov
pop
nop
cmp
lret
push
int3
popf
mov
lret
mov
mov
movsl
push
lret
fildl
std
push
add
jno
lds
mov
sub
lea
stos
pop
add
jge
add
cld
insb
push
mov
in
lcall
mov
mov
sub
test
into
loop
add
into
sbbb
stos
fcomps
or
das
sbb
pop
pop
or
js
pop
add
cmp
loopne
outsl
xor
push
aaa
into
xchg
adc
mov
loopne
xchg
cmp
cmc
sbb
pushf
sub
loopne
cltd
cmp
adc
lcall
dec
dec
movsb
fldl
jno
loopne
mov
xchg
movsb
or
cs
pop
imul
mov
sub
out
shlb
add
dec
loope
and
sbb
bound
xchg
ja
cmp
lret
cld
pop
movsl
cmp
sbb
ret
pop
mov
xchg
mov
ret
sbb
hlt
add
xchg
xor
push
mov
addr16
lock
movsb
cmp
aad
ja
jmp
pop
icebp
daa
or
js
jp
mov
xchg
fwait
xchg
sub
in
mov
and
icebp
mov
inc
shrb
pop
xsha1
cmpsb
mov
fucom
push
movsl
sbb
dec
loop
cmp
imul
orl
fisubrs
psubb
sbb
jge
movsb
cmp
xlat
ret
bnd
pop
inc
sbb
xchg
mov
cmp
enter
add
pop
lock
rcll
ja
outsb
jbe
out
cmpsl
xchg
sub
enter
loop
dec
adc
xchg
sub
xor
mov
mov
ret
hlt
fisttpl
xchg
sub
pop
imul
loopne
mov
incb
push
dec
loop
and
add
mov
push
in
rcrl
cmpsb
cmp
dec
pop
les
outsl
xchg
mov
ret
repz
xchg
xor
push
mov
addr16
lock
mov
ja
jmp
pop
icebp
es
js
jns
mov
xchg
lcall
in
mov
pop
pop
icebp
mov
inc
shrb
pop
xsha1
cmpsb
mov
sub
movsl
pop
decl
xor
sub
push
imul
mov
push
clc
movsl
cmp
xor
pop
jge
movsb
cmp
ret
bnd
pop
inc
sbb
xchg
scas
xchg
cmp
enter
add
pop
lock
cmp
push
cmp
push
outsb
jne
out
cmpsb
xchg
sub
jbe
stc
loop
dec
adc
xchg
sub
xor
mov
mov
rcl
repz
xchg
sub
pop
push
dec
loopne
mov
incb
or
test
jbe
cmp
leave
rcrl
cmpsb
cmp
dec
pop
les
outsl
xchg
mov
ret
repz
xchg
das
adc
push
mov
addr16
lock
mov
ja
jmp
pop
icebp
and
inc
js
js
mov
xchg
cltd
xchg
sub
in
mov
push
pop
icebp
mov
aas
shrb
pop
xsha1
cmpsb
mov
sub
movsl
push
decl
xor
sub
imul
loope
movsb
xchg
fsubrl
or
das
xchg
jge
movsb
cmp
ret
bnd
pop
inc
sbb
xchg
scas
xchg
cmp
enter
add
pop
lock
cmp
push
cmp
push
outsb
je
out
movsl
xchg
sub
jbe
clc
loop
dec
adc
xchg
sub
xor
mov
lahf
mov
xchg
fisttpl
xchg
sub
pop
addr16
movsl
cwtl
jg
loopne
mov
incb
or
loop
and
add
mov
push
jecxz
rcrl
cmpsb
cmp
dec
push
les
outsl
xchg
mov
ret
repz
add
inc
dec
push
mov
addr16
lock
mov
ja
jmp
pop
icebp
and
xchg
sub
ja
mov
xchg
cwtl
xchg
sub
in
mov
sbb
shrb
pop
xsha1
cmpsb
mov
sub
movsl
adc
aaa
sub
push
mov
mov
fldt
or
movsl
cmp
xchg
jge
movsb
cmp
aam
pop
push
bnd
pop
inc
sbb
xchg
lods
xchg
cmp
enter
jmp
cmp
push
cmp
insl
jae
lock
mov
push
mul
mov
adc
xchg
sub
data16
mov
sahf
xchg
xchg
fimull
mov
sub
pop
data16
cmpsb
xchg
jle
loopne
mov
incb
or
and
add
mov
pop
loop
rcrl
cmpsl
ds
push
lds
xchg
mov
rcrl
cld
add
inc
dec
pop
mov
pop
lock
mov
ja
ljmp
sub
jbe
mov
xchg
xchg
xchg
cs
mov
imul
push
icebp
mov
cmp
xsha1
cmpsb
mov
sub
cmpsb
adc
dec
loop
ss
add
mov
imul
sub
xchg
pusha
dec
ret
pop
jl
movsl
cmp
popf
loope
iret
aam
pop
push
icebp
call
pop
inc
sbb
xchg
lods
xchg
cmp
into
sbb
lock
cmp
push
cmp
insb
jae
icebp
movsb
lea
maskmovq
mov
adc
xchg
cs
xor
push
sahf
xchg
xchg
mov
sub
pop
data16
scas
mov
incb
or
cmp
test
pop
imul
je
cmp
mov
aas
xor
push
pop
mov
xchg
lahf
test
sbb
icebp
cld
add
inc
dec
and
xchg
mov
ja
jmp
or
adc
mov
nop
xchg
cwtl
das
leave
mov
imul
add
aam
outsl
pop
xsha1
cmpsb
mov
sub
cmpsl
adc
dec
loop
ss
imul
mov
fisubrl
or
movsl
cmp
mov
pusha
dec
ret
pop
jnp
cmpsb
cmp
into
aam
pop
push
lock
pop
inc
sbb
xchg
lods
xchg
cmp
int
mov
out
lock
cmp
push
imul
mov
les
neg
mov
adc
cwtl
das
dec
xor
push
popf
test
xchg
fmuls
mov
ret
adc
lods
mov
call
or
cmp
xchg
lea
cmp
mov
clc
add
js
push
pop
xchg
sahf
cmpsl
in
fnstcw
add
inc
dec
and
xchg
sahf
aas
iret
mov
psubsb
pop
hlt
and
xchg
cs
jnp
je
mov
xchg
cltd
xor
mov
push
call
repnz
cmp
insb
insl
push
adc
shrb
test
cld
dec
jecxz
xor
gs
push
addb
pop
rcr
imul
cmc
cmpsb
cmp
pop
dec
les
jg
ds
loop
int
lds
add
pop
inc
push
mov
jns
cwtl
stos
xchg
cmp
lret
pop
mov
in
icebp
push
push
ds
aaa
js
imul
sub
hlt
fnsave
dec
xor
imul
lock
push
movsl
pop
adc
mov
sub
pop
arpl
test
stos
mov
out
push
out
push
xchg
push
pop
insl
add
jno
cmp
lods
mov
faddp
ret
pop
idiv
test
jns
push
pop
test
xchg
pushf
movsl
in
xlat
mov
add
inc
dec
and
xchg
pushf
aas
int
jns
out
pop
hlt
pop
or
adc
mov
lea
aam
loopne
mov
sbb
repz
aad
imul
xchg
fcomp
adc
sub
das
arpl
jle
dec
in
lahf
mov
rcl
imul
repz
ds
inc
lds
cmpsl
ds
cltd
jecxz
lret
rol
pop
add
add
push
aas
pop
mov
ja
cwtl
test
cmp
mov
jecxz
repnz
ds
xor
pop
repz
mov
adc
xor
shrl
addr16
cltd
xor
insb
in
aam
cmpsb
add
es
test
test
lret
cld
add
mov
dec
push
insl
add
jo
cmp
fadd
les
std
test
jp
push
pop
subb
fwait
mov
pop
mov
testb
daa
aad
dec
and
xchg
lcall
in
pop
hlt
sbb
jnp,pt
jo
mov
mov
aad
mov
push
add
mov
aaa
aad
imul
mov
fstl
test
stc
dec
in
xor
popa
dec
insb
add
dec
in
sahf
mov
rcl
imul
repnz
and
mov
pop
inc
pop
ja
cmpsl
lods
cwtl
in
lret
pop
add
add
push
and
cmpsb
nop
ds
pop
mov
loop
repz
ds
xor
adc
pop
repz
xchg
adc
fidivl
xor
imul
dec
xchg
xor
mov
aad
ljmp
mov
and
adc
test
xor
loop
push
sti
add
xor
mov
dec
push
insl
add
outsl
cmpsl
mov
ret
hlt
sti
test
jnp
dec
pop
subb
lcall
mov
hlt
add
aas
inc
and
xchg
cwtl
aas
leave
mov
adc
ljmp
cmp
adc
mov
xor
lods
insl
fsubp
mov
adc
cmc
mov
xor
adc
mov
fistl
test
clc
dec
out
cs
pop
dec
insl
add
orb
popf
mov
iret
shrb
add
test
and
pop
jbe
cmpsl
ds
xchg
in
leave
int3
lds
add
push
cmp
mov
movsb
mov
mov
loopne
hlt
adc
aas
dec
xor
fs
hlt
fwait
test
adc
fdivs
xor
aad
pop
arpl
mov
rcll
test
or
mov
das
push
pop
adc
cmpsb
scas
xor
loopne
imul
add
xor
mov
dec
push
outsb
add
lahf
cmpsb
mov
fadd
pop
repnz
stos
inc
sub
pop
jle
add
sarl
add
and
xlat
cmp
pop
pop
cmc
xchg
inc
xlat
mov
adc
call
fwait
xor
cmp
push
mov
xor
loopne
dec
adc
cmc
mov
xor
insl
push
adc
mov
ficoml
test
daa
sub
insl
add
jg
in
fwait
mov
int
insb
add
out
test
and
pop
je
test
stos
xchg
in
lret
pop
std
call
in
push
cmp
mov
mov
les
mov
movhps
dec
xor
bound
cmc
lcall
adc
mov
or
fwait
xor
aad
pop
bound
mov
iret
adc
cmp
das
push
pop
adc
lea
in
scas
xor
ffreep
imul
add
xor
mov
dec
push
outsl
push
test
aas
popf
movsl
lea
mov
stos
inc
sub
in
inc
dec
leave
pusha
jge
add
shlb
add
xlat
cmp
mov
lea
jl
loopne
pop
negb
add
adc
push
mov
xor
fistpll
mov
xor
outsb
gs
adc
mov
fsts
stos
or
dec
out
sub
enter
add
jle
out
cltd
mov
lret
shrb
add
test
and
pop
jb
test
jl
lret
cld
out
lcall
and
mov
ret
and
or
jnp,pn
pusha
push
cltd
xor
aam
dec
push
push
pushf
xor
aad
pop
popa
mov
mov
adc
cmp
xor
push
pop
adc
in
lods
xor
ffree
insb
add
push
call
dec
push
outsl
push
subb
pushf
mov
pop
out
imulb
jge
dec
leave
pusha
jnp
add
xchg
pushf
out
into
mov
mov
and
inc
fdivrs
inc
and
mov
jge
pop
notb
add
imul
mov
fnstsw
lea
dec
adc
jg
cmc
mov
xlat
adc
and
xor
pop
inc
outsb
add
lods
cwtl
mov
lret
add
in
stos
inc
push
and
pop
jno
test
jge
enter
in
fwait
push
sbb
jge
aaa
and
mov
shll
repnz
or
inc
fadds
jl
pop
pop
notb
mov
mov
xor
es
insl
pop
pop
mov
mov
int3
adc
aaa
push
xor
dec
pop
adc
out
stos
xor
fcmovnb
insl
add
cld
push
call
dec
dec
outsl
push
subb
fwait
mov
enter
stos
inc
es
jle
inc
leave
pusha
jns
add
jle
mov
mov
push
or
cmp
and
mov
jle
fsubp
pop
notb
popf
xor
xor
mov
xor
fstpt
mov
xlat
outsb
popa
dec
adc
mov
adc
and
xor
pop
inc
outsl
push
jbe
dec
out
xchg
lea
int3
insl
add
ljmp
push
cmp
stos
inc
movsl
nop
out
ret
pop
clc
jecxz
pushf
adc
out
dec
xor
add
fdivrs
fstps
or
inc
flds
jge
pop
fs
notl
mov
adc
add
popf
xor
and
outsb
push
pop
mov
mov
lret
sti
add
xor
push
push
lods
xchg
out
test
lret
fld
outsb
add
sub
pop
jle
stos
inc
cltd
lahf
mov
in
repnz
inc
and
call
popa
ja
push
popf
xchg
cwtl
call
mov
sbb
inc
fidivl
cmp
popa
clc
mov
jg
fsub
pusha
notl
popf
xor
xor
adc
addl
jo
fidivrl
mov
fsubrs
dec
adc
lea
aam
stos
add
daa
xor
pop
inc
outsl
push
je
push
out
xchg
lea
lret
outsb
add
sbb
lea
cmp
pusha
insl
jb
inc
movsb
mov
jle
vpunpcklbw
loope
pushf
adc
call
mov
popf
test
mov
and
out
xlat
pop
testb
inc
fiaddl
jge
pop
arpl
xchg
jl
xor
iret
mov
xor
push
pop
mov
mov
enter
add
nop
xor
xor
dec
push
pop
scas
xchg
popf
cmpsl
xor
add
sub
lea
dec
jno
jge
stos
inc
xchg
sahf
sarb
lods
inc
and
jg
inc
lret
bound
push
popf
nop
xchg
jmp
mov
sbb
fidivl
push
popa
clc
xchg
jg
popa
clc
adc
popf
xor
xor
gs
mov
xor
mov
mov
mov
sub
adc
mov
rcll
call
push
inc
outsl
push
jb
push
call
vmovdqu
cld
out
inc
sbb
mov
imul
mov
lret
filds
orb
mov
pushf
addl
mov
pop
testb
inc
fildl
jge
pop
bound
xchg
jp
xor
mov
cmp
fsubrs
pop
mov
lea
adc
testl
xor
dec
push
sbb
fwait
movsl
ss
mov
push
jmp
adc
or
lods
inc
xchg
pushf
nop
daa
into
mov
popa
call
or
cmpb
arpl
sahf
mov
and
lahf
sbb
inc
cmp
mov
test
pop
fcomp
stc
psubd
pop
arpl
push
jg
sahf
xor
rcl
mov
es
jno
inc
push
lods
js
clc
mov
xor
lret
lods
add
push
jmp
push
jo,pt
jo
push
jmp
ret
enter
in
inc
push
sbb
es
aaa
lret
outsl
lods
inc
mov
ret
hlt
fldl
popf
push
push
ljmp
imul
fnstenv
shll
add
inc
fdivrl
and
arpl
xchg
js
xor
lret
mov
aaa
aaa
push
fnstenv
pop
mov
mov
les
xchg
xor
xor
dec
push
sbb
lcall
pop
in
cmc
push
jmp
jg
or
lods
inc
xchg
lcall
out
scas
inc
pop
or
cmpl
pop
or
lds
or
xor
es
test
sbbl
or
das
adcb
dec
mov
xor
rcl
mov
nop
and
inc
pop
scas
ja
clc
scas
cwtl
xor
lods
add
push
ljmp
jno
outsl
je
jmp
ret
pop
clc
jecxz
inc
adc
ss
bound
lods
inc
lahf
mov
cmpb
pop
sahf
or
cs
or
cmp
jmp
cmp
je
out
inc
push
mov
cs
jb
jae
push
in
lea
loopne
std
pop
test
sub
mov
cmp
push
in
cmp
lahf
pop
cs
insl
lods
cs
test
pusha
movsb
mov
xchg
mov
testl
clc
mov
cltd
arpl
test
pop
xor
imul
jnp
adc
repnz
js
ret
cmp
add
push
subb
jo
insb
jbe
pop
push
ss
test
or
fmuls
gs
ret
repnz
mov
cmp
adc
enter
out
idiv
cmpsl
out
and
mov
cs
jno
loop
into
cltd
mov
into
das
adc
lods
jo
bound
push
mov
mov
pop
mov
cmp
and
jo
xchg
out
push
out
mov
jecxz
imul
mov
cwtl
adc
mov
sbb
cmpsl
jmp
ret
les
rcll
sbb
jecxz
mov
icebp
add
or
inc
adc
mov
popf
cmpsb
pop
rcll
test
lea
jg
ss
mov
je
inc
jmp
pushf
push
mov
insl
sbb
clc
out
lock
inc
jbe
in
loope
decl
jp
in
dec
mov
gs
stos
or
bound
cmc
or
es
out
dec
out
mov
xchg
jmp
in
clc
jb,pt
push
mov
inc
mov
push
jno
cld
jge
inc
mov
dec
mov
fsubr
add
mov
or
int
daa
mov
push
pop
pop
ret
lret
lret
inc
rcrb
shlb
in
mov
loope
pusha
cmp
int
or
arpl
rcll
loopne
popl
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
mov
jmp
movsb
sub
inc
inc
pop
xchg
call
jle
fiaddl
mov
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
loopne
add
sbbb
test
mov
xchg
jge
in
arpl
add
arpl
imull
dec
cmc
std
out
mov
jne
mov
test
loopne
cmp
test
fildll
mov
push
ret
dec
sahf
cmc
lret
popa
int
mov
jecxz
mov
ljmp
aad
pop
stos
das
movsb
in
fdivr
push
rcrl
sbb
cmpb
mov
add
scas
xchg
aas
mov
jae
inc
notb
arpl
sbb
mov
test
insb
fimuls
bound
and
fs
jge
std
stos
mov
lcall
pop
stos
mov
mov
stos
and
pop
mov
cwtl
mov
dec
add
hlt
pop
sub
cwtl
and
mov
into
sbb
test
xchg
dec
jmp
pop
sbb
pop
mov
pop
sbb
cmp
mov
adc
mov
shlb
insb
pop
test
lods
xchg
dec
imulb
cld
add
lods
sub
mov
sbb
ss
mov
and
adc
shl
dec
xor
adc
mov
mov
daa
pop
push
in
movsb
lahf
sub
xor
xlat
push
stc
subl
mov
mov
and
daa
sub
les
inc
jbe
inc
cmp
xor
xchg
cs
adc
scas
xchg
ret
jmp
sbb
fs
mov
les
lock
sub
imul
cld
lea
lds
push
xchg
enter
push
cltd
mov
movsb
add
and
add
dec
pop
mov
jnp
and
psubd
cmpsb
sahf
push
cmpl
xor
dec
cs
mov
xor
pop
mov
shll
dec
subl
inc
cmp
fdivrs
