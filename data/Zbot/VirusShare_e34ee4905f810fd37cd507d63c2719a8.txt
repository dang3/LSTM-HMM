inc
and
add
add
add
add
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
pop
add
and
add
pop
add
pop
add
pop
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
add
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
push
mov
push
ds
mov
cs
cld
repnz
mov
push
ds
mov
aam
inc
pop
inc
mov
into
daa
inc
sbb
sbb
inc
sbb
push
rolb
sub
sbb
xor
sbb
inc
sub
scas
into
into
into
into
into
faddl
lahf
cs
cs
dec
aas
lcall
cs
adc
dec
xor
repz
dec
lods
inc
sub
inc
mov
je
inc
mov
leave
xor
cs
cmp
cs
enter
pop
aad
das
add
sbb
aad
fidivs
ljmp
cmpsb
cmp
dec
inc
sub
dec
cs
stos
xor
cs
xor
xchg
inc
sub
test
out
fwait
lods
inc
or
sar
inc
lret
je
xor
dec
push
enter
xor
cs
mov
icebp
xor
sbb
mov
inc
or
jmp
cs
mov
and
inc
ret
adc
and
xor
xor
add
les
cs
in
loop
loop
sub
mov
xchg
cs
mov
cs
xor
cs
fisubs
xor
daa
test
out
sbb
xor
xor
xchg
daa
addl
xor
cs
and
cs
sbb
push
fs
idiv
or
cs
sbb
push
inc
inc
sbb
inc
enter
iret
inc
enter
xlat
inc
enter
filds
out
in
loopne
incb
cs
ds
rcr
cmpsb
cmp
mov
xor
xor
inc
or
ljmp
push
inc
mov
mov
xor
roll
ljmp
inc
or
xor
xor
sbb
mov
mov
xor
loopne,pt
ds
cs
cs
movl
xor
cs
enter
scas
inc
or
cs
mov
xor
divl
xor
xor
enter
adc
xor
inc
sub
scas
scas
add
out
xor
cs
or
cs
mov
inc
enter
out
and
adc
xor
or
xor
lahf
lea
cs
out
mov
mov
add
jns
cs
call
mov
lret
lahf
mov
cs
mov
clc
out
add
ljmp
or
lcall
xor
xor
sub
sar
lret
add
inc
enter
xor
daa
inc
mov
mov
sbb
fdivrs
andl
inc
sub
dec
fwait
shld
dec
xor
sub
cs
inc
fsubrs
sbb
test
pop
inc
xchg
inc
fadds
sub
mov
mov
cs
xor
adc
mov
cmc
fiaddl
pop
movsb
sbb
testl
xchg
out
inc
sbb
ljmp
scas
mov
ss
pushl
add
xor
mov
or
test
xor
adc
inc
jbe
mov
jbe
movsb
jbe
adc
inc
push
sub
cmc
ds
jbe
inc
lds
cs
inc
dec
ret
mov
pop
inc
loope
cs
mov
cmp
xor
cs
dec
push
jbe
mov
add
add
outsb
test
cli
sbb
xor
xor
jbe
mov
inc
pop
rolb
inc
mov
mov
into
ss
inc
inc
into
ds
inc
inc
shlb
sub
sub
dec
popf
rcrb
mov
mov
cs
push
inc
inc
scas
sahf
mov
shll
inc
cs
inc
mov
ficoms
call
inc
mov
inc
mov
add
mov
cs
call
dec
mov
sub
and
pop
xor
cs
call
divb
cs
call
inc
scas
mov
mov
scas
inc
inc
mov
dec
enter
push
inc
mov
inc
mov
inc
sbb
dec
enter
push
fs
cs
mov
inc
ds
mov
inc
cs
mov
shlb
fsubs
inc
push
add
sub
cs
das
aas
cs
into
sub
daa
inc
sub
inc
mov
mov
push
mov
mov
cli
mov
jmp
cs
inc
mov
inc
pushl
pop
cs
mov
mov
sub
inc
push
mov
mov
call
fs
sub
shld
inc
sub
inc
push
mov
mov
call
fs
sub
cmovne
inc
sbb
xchg
scas
dec
fmul
decl
cs
sub
ds
pop
add
xchg
scas
add
fcoms
fs
sbb
into
xchg
scas
dec
pop
push
sub
fs
sub
xor
mov
inc
mov
movsb
mov
mov
enter
push
cmp
add
sub
dec
mov
outsb
cs
pop
movsb
and
cs
sub
int
mov
mov
into
mov
aam
aas
call
mov
out
stos
xchg
xor
movsb
cmovl
xchg
cs
and
adc
inc
mov
mov
cs
mov
inc
scas
mov
or
cs
into
push
add
mov
cs
inc
mov
aam
into
push
inc
mov
aaa
jne
cs
mov
aaa
gs
enter
sbb
cli
mov
dec
mov
xor
sub
dec
into
fiaddl
scas
inc
call
sub
cs
mov
inc
scas
mov
fisubrl
daa
inc
scas
mov
cs
cs
call
sub
pop
inc
sub
inc
mov
sbb
sub
daa
sub
lahf
into
inc
mov
sub
inc
scas
mov
sub
or
and
daa
inc
scas
mov
cs
cs
sub
in
mov
inc
pop
xor
mov
inc
sub
cs
inc
mov
inc
mov
mov
dec
shr
cli
inc
enter
ret
cli
inc
enter
ja
enter
inc
cli
inc
enter
daa
fiaddl
cli
inc
sbb
paddusb
inc
sbb
sub
cs
sub
inc
sub
and
inc
sub
pop
cli
inc
mov
inc
mov
inc
mov
inc
mov
cli
inc
mov
inc
mov
dec
ret
inc
enter
and
inc
enter
cli
inc
enter
pop
cli
inc
enter
sub
mov
inc
enter
jne
inc
mov
cs
inc
enter
sub
and
cli
inc
enter
sub
mov
inc
and
cli
inc
sub
sub
cld
stc
cs
or
cli
inc
enter
ret
cld
cmp
sub
add
inc
sub
fdivs
jnp
cs
dec
cmp
sub
mov
inc
mov
sub
sub
pop
dec
fcomps
sub
cs
dec
cmp
add
dec
mov
outsb
inc
scas
inc
sub
sub
out
mov
sub
test
sub
and
pop
and
mov
cs
mov
inc
mov
inc
enter
inc
dec
inc
scas
ss
pop
cmp
sbb
mov
jmp
mov
cs
cmpsb
inc
mov
scas
push
movsb
inc
mov
sub
inc
scas
sahf
xor
outsb
sbb
outsb
inc
shlb
sub
xor
cs
das
xor
cs
ds
mov
jb
cs
cmp
scas
dec
cmp
cs
mov
mov
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
push
cs
inc
cmp
sub
dec
cs
inc
cmp
sub
outsl
cs
inc
cmp
sub
jge
cs
inc
cmp
sub
sub
cs
inc
imul
mov
sub
sub
sub
inc
mov
sub
cs
cmp
dec
cmp
sub
xor
out
sub
mov
sub
sub
pop
cmp
bound
push
clc
jne,pn
bound
xchg
jmp
mov
js
cs
jmp
and
sbb
mov
cs
into
inc
mov
mov
inc
mov
inc
mov
and
cs
into
inc
mov
sub
sub
pop
inc
inc
inc
dec
inc
enter
incl
dec
enter
enter
xor
shrb
data16
inc
mov
cs
into
inc
mov
sub
sub
scas
cmp
daa
cs
js
fsubs
enter
inc
mov
enter
inc
enter
xor
inc
enter
int3
into
adc
add
inc
mov
xor
inc
push
jle
aas
outsl
cs
xor
test
testl
mov
cs
roll
inc
fmuls
push
out
dec
sarb
inc
fdivr
inc
fmuls
inc
fmuls
inc
fdivr
dec
popf
push
inc
fsubr
xor
sub
fmul
inc
fsubr
mov
inc
xor
xchg
and
or
inc
push
xor
iret
xor
xor
push
push
inc
sub
inc
inc
xor
xor
iret
inc
fsubs
cmpsb
push
inc
enter
xlat
xor
enter
inc
fcoms
xor
pop
inc
fadds
movsb
dec
ja
cs
xor
pop
inc
shlb
inc
fcoms
inc
enter
dec
cmp
sub
out
inc
enter
xor
shrb
outsb
sub
xor
add
into
inc
mov
sub
sub
outsb
inc
das
iret
xor
cs
daa
inc
enter
inc
mov
xor
cs
cs
cs
pop
mov
sub
sub
mov
inc
mov
inc
mov
inc
mov
nop
dec
mov
insb
inc
xchg
inc
mov
push
pushf
into
inc
mov
adc
inc
nop
inc
ds
push
test
xor
inc
dec
in
ljmp
inc
pop
inc
scas
ss
fimull
xor
cs
dec
aaa
sub
cs
dec
aaa
sbb
cs
xor
cs
cs
cs
dec
aaa
fldt
cs
adc
lds
cs
ret
test
xor
dec
popf
into
inc
inc
enter
mov
aaa
mov
cs
mov
ljmp
fdivrl
nop
push
sub
push
xor
dec
popf
and
popf
loop
xor
push
add
push
inc
enter
push
mov
inc
xor
lret
xor
dec
popf
and
popf
loopne
xor
push
test
push
inc
sub
inc
sub
inc
lods
cmp
divl
data16
popf
and
popf
loopne
sub
daa
ds
mov
dec
popf
and
popf
loop
inc
enter
pop
xor
inc
enter
pop
adc
enter
into
dec
dec
popf
push
inc
sub
ds
inc
enter
cmovl
lock
xchg
scas
scas
add
shll
push
inc
les
ficoml
nop
dec
aaa
sub
cs
mov
cs
das
das
cs
mov
scas
add
cs
fdivrs
dec
inc
dec
inc
enter
xor
dec
dec
aaa
lods
cs
and
and
pop
movsb
mov
inc
mov
xor
xor
mov
fisubrl
cmp
mov
sub
pop
cmp
pop
pushl
cs
mov
into
jbe
sub
aas
push
cs
sub
xchg
scas
inc
mov
rolb
inc
fadds
xchg
sarl
push
xor
inc
dec
inc
cmp
rcll
and
mov
popf
rcl
sbb
sub
inc
fdivrs
inc
les
into
sub
cmp
daa
add
mov
mov
xor
sahf
xor
xor
fdivrs
inc
enter
add
scas
mov
push
scas
add
shll
xor
sbb
xchg
scas
shll
mov
cmp
in
xor
test
mov
into
ss
fcoms
cmp
push
loopne
inc
fcoms
xor
push
mov
ds
sbb
inc
fmuls
inc
fsubs
dec
popf
push
inc
adc
sub
and
cmp
dec
xor
xor
xor
enter
inc
fcoms
xor
pop
inc
sbb
movsb
xchg
mov
adc
xor
inc
into
ss
fcoms
cmp
sbb
scas
shll
dec
inc
scas
ss
cs
fmull
cs
fadds
rorl
cs
ds
scas
scas
add
adc
xor
ds
mov
xor
ds
lret
sub
call
inc
enter
sbb
inc
sub
xchg
roll
mov
add
movsb
lret
ss
popf
inc
mov
mov
sub
movsb
sub
lret
es
movsb
and
inc
mov
sbb
mov
mov
inc
scas
sub
int
push
dec
cs
dec
inc
scas
mov
sub
push
dec
sub
dec
inc
shlb
pop
inc
mov
cmp
pop
inc
mov
enter
pop
dec
xor
sub
in
ljmp
inc
pop
xor
ds
xchg
sub
sub
mov
sub
test
sub
and
mov
cs
int
aaa
sub
cs
sbb
cs
or
cs
mov
xor
cs
and
loop
cmp
xor
cs
mov
xor
inc
mov
dec
aaa
shlb
cs
mov
inc
ds
mov
fiaddl
cmpsb
xor
inc
sbb
mov
cs
fiadds
push
cli
inc
mov
cli
inc
mov
mov
cli
inc
mov
call
inc
mov
inc
mov
rolb
pop
mov
adc
or
mov
push
adc
mov
adc
notb
clc
cli
mov
sub
mov
fdivrs
ds
enter
inc
sub
mov
nop
inc
inc
inc
into
pop
inc
mov
push
inc
cs
mov
push
inc
inc
push
pop
inc
shll
pop
movsb
push
sbb
ss
fidivrl
push
inc
into
inc
xor
sahf
movsb
sub
mov
enter
enter
mov
mov
shrb
into
inc
mov
test
decl
mov
inc
sahf
inc
mov
sub
sbb
cs
sbb
xor
sbb
xchg
rorl
outsb
cli
movsb
lret
lock
mov
inc
dec
inc
mov
push
dec
inc
lret
mov
sbb
mov
xor
into
inc
mov
xor
into
call
ss
mov
cmp
push
pop
rolb
inc
xor
ds
scas
shlb
cs
mov
xor
inc
dec
popf
mov
adc
xor
sahf
sbb
enter
enter
mov
mov
rolb
pop
sub
into
cmp
cs
incl
scas
push
sub
fcmovu
dec
daa
sub
adc
inc
lret
inc
adc
scas
push
repnz
sub
inc
xor
sahf
sbb
mov
dec
enter
sbb
inc
enter
fsubrl
jle
mov
xor
xor
sub
cmpsb
sub
sahf
pop
mov
cli
inc
fsubrl
xor
cs
fildl
inc
mov
inc
xor
mov
scas
in
in
mov
fadds
dec
popf
sarb
dec
popf
mov
aam
xchg
sub
cmp
push
insb
inc
mov
mov
inc
fidivrs
xor
xor
mov
xor
and
icebp
xchg
scas
in
in
mov
fadds
xor
pop
sub
sub
cs
inc
mov
cli
inc
mov
sub
fiaddl
ds
inc
mov
fdivr
inc
mov
aaa
test
cs
aaa
jo
cs
mov
xor
mov
add
sub
inc
call
xor
cs
aaa
lahf
cs
sub
xchg
pop
dec
popf
cmpsl
sub
ret
inc
sub
inc
sub
xchg
pop
dec
popf
cmpsl
and
ret
inc
sub
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
movsb
sub
sbb
xor
inc
xor
ds
sub
xchg
pop
cli
xor
cs
cmp
sub
xchg
pop
cli
inc
cmpsl
sub
ret
inc
jecxz
test
sub
cs
movsb
sub
insb
inc
sub
xchg
pop
inc
mov
push
out
cs
test
movsb
mov
add
in
ljmp
inc
pop
sar
inc
fisubrl
cli
test
stos
mov
cs
xchg
lret
stos
sub
cs
sub
sub
push
call
shrl
mov
sub
cs
movsb
lds
xor
fsubs
dec
fdivl
xchg
fildl
xchg
sub
inc
inc
push
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
in
and
or
xchg
lret
dec
aaa
mov
ljmp
fcmovu
mov
sub
sub
sub
cmp
nop
xchg
in
cmpsb
dec
push
lock
mov
sub
cs
inc
movsl
mov
cs
test
cs
xchg
mov
mov
cs
movsb
mov
xor
sbb
dec
adc
xchg
adc
xchg
rorl
fsub
ret
inc
pop
das
add
das
and
mov
or
xchg
mov
sar
inc
mov
inc
mov
fadds
rcr
mov
sub
sub
sub
mov
cli
test
mov
cli
xchg
ret
mov
cli
movsb
ret
push
fmull
mov
lods
mov
sub
cs
movsb
lds
xor
sbb
dec
adc
xchg
sbb
cli
inc
inc
into
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
or
push
cmp
scas
ljmp
inc
mov
fimull
shrl
sub
cs
cs
fsubs
cli
movsb
mov
test
xor
mov
xor
cmpsb
dec
inc
int
mov
xchg
sub
cli
movsb
pop
sbb
xchg
scas
in
cli
inc
xor
daa
ljmp
pop
inc
mov
rolb
cmp
ds
dec
inc
enter
dec
inc
inc
aas
ds
fadds
inc
mov
rolb
cmp
ds
inc
mov
call
inc
pop
xor
mov
sub
or
pop
mov
xchg
adc
xor
movsb
sbb
xor
aam
inc
mov
inc
mov
mov
cmp
mov
mov
cmp
mov
mov
cmovl
dec
cs
mov
mov
mov
jecxz
sub
sub
cmovno
cli
inc
mov
xchg
loope
mov
aaa
pop
out
cs
call
jecxz
rcrl
inc
call
loope
push
out
cs
call
mov
js
cs
aad
mov
fcoms
dec
lea
mov
xchg
mov
rorl
dec
mov
cs
mov
mov
cs
mov
mov
cmp
cmp
call
stos
scas
das
adc
das
mov
xchg
filds
daa
xchg
mov
xchg
cmp
insb
movsb
sbb
xor
sub
mov
fadds
xor
pop
sub
cmovno
daa
inc
enter
daa
das
adc
inc
enter
mov
ds
dec
inc
enter
mov
mov
aas
ds
enter
mov
shll
xchg
aam
sub
inc
mov
daa
or
out
lods
mov
js
xor
out
and
jg
cs
mov
and
out
mov
mov
sub
sub
mull
or
fidivs
cs
pop
xchg
sbb
bsr
sub
or
xor
cs
mov
mov
unpcklps
inc
mov
pop
xchg
in
ss
dec
fwait
scas
mov
inc
mov
xchg
cmp
mov
xchg
mov
cmp
lds
cmovne
movsb
mov
mov
pop
xchg
mov
mov
cmovne
lret
test
xlat
inc
mov
pop
xchg
in
ss
aas
mov
inc
enter
dec
pop
das
adc
das
mov
xchg
mov
mov
iret
test
inc
enter
xor
inc
mov
into
add
inc
enter
xor
inc
inc
enter
iret
inc
mov
cmp
sub
inc
enter
dec
aaa
xor
enter
dec
pop
das
adc
das
mov
dec
fwait
roll
test
int
lds
cmovl
dec
xor
inc
mov
mov
lea
inc
enter
pop
xchg
mov
mov
cs
mov
pop
or
lret
sub
xchg
mov
dec
dec
cmp
enter
pop
xchg
mov
mov
cs
mov
pop
or
and
sub
inc
mov
int
aaa
mov
cs
mov
pop
or
subb
sub
mov
fadds
xor
pop
sub
or
daa
inc
enter
pop
mov
sub
pop
or
iret
sbb
xlat
pop
or
fists
mov
sub
or
divl
mov
sub
inc
mov
inc
enter
mov
xchg
mov
cs
xor
xchg
rcrl
xchg
lret
xor
inc
mov
xor
inc
call
cs
enter
inc
xchg
mov
inc
enter
pop
inc
mov
filds
daa
xchg
lret
xchg
mov
daa
xchg
lret
test
dec
inc
push
mov
movsb
mov
cs
mov
xchg
mov
xor
xchg
rcrl
xchg
fildl
inc
mov
mov
mov
inc
fdivr
inc
mov
filds
daa
xchg
mov
inc
mov
mov
enter
xchg
fildl
sbb
xchg
mov
test
inc
enter
daa
xchg
mov
test
movsb
rcrl
pop
inc
mov
filds
daa
xchg
mov
xor
movsb
iret
adc
inc
mov
lds
adc
inc
mov
lds
mov
fists
dec
mov
movsb
mov
push
mov
filds
call
mov
xor
sar
mulb
sub
xchg
mov
sub
inc
mov
mov
daa
dec
xor
xchg
mov
sub
daa
xor
pop
xchg
mov
pop
dec
xor
in
ljmp
pop
xor
movaps
pop
daa
or
mov
sub
mov
cmp
iret
jo
ds
lods
mov
sbb
mov
sub
or
pop
leave
or
pop
xchg
lret
xor
sbb
xchg
mov
inc
mov
mov
call
mov
mov
xor
xor
cs
sub
jmp
sub
xor
cs
mov
mov
sub
sub
mov
sub
inc
enter
xor
aas
enter
daa
inc
mov
cs
enter
xor
dec
lea
enter
cmovne
call
sbb
dec
fcoms
in
das
mov
xor
aas
enter
daa
dec
fcoms
xor
dec
lea
test
add
dec
fcoms
test
test
aas
fcoms
out
inc
fcoms
mov
mov
rol
aas
fcoms
daa
inc
fsubs
xchg
lret
xor
dec
lea
dec
iret
inc
push
bound
daa
xchg
lret
xor
dec
lea
enter
push
xchg
lret
xor
dec
lea
enter
xor
dec
lea
mov
xchg
mov
js
cs
mov
pop
cmp
mov
sub
xor
pop
leave
or
sub
or
sub
inc
mov
lret
dec
aaa
mov
cs
mov
jmp
cmp
ljmp
pop
xor
xor
fiaddl
cmp
sbb
xchg
scas
add
cmp
lcall
sub
inc
pushf
inc
filds
incl
sbb
pop
sub
sub
inc
dec
cmp
sub
sub
dec
cmp
sub
pop
sub
dec
inc
lcall
in
in
shll
add
xor
xor
cs
scas
cmp
push
nop
inc
push
add
sar
inc
push
mov
scas
inc
push
ds
rcrl
pop
xchg
sar
inc
mov
dec
cmp
sub
ds
sub
ss
inc
mov
xor
fcmovu
dec
aaa
lea
cs
cs
popf
scas
outsb
inc
mov
shll
pop
lahf
mov
cs
mov
cs
enter
daa
cs
roll
in
cli
movsb
enter
dec
xchg
shrl
sub
popf
enter
inc
dec
inc
inc
cli
mov
dec
popf
inc
lods
sub
cs
movsb
int
inc
inc
call
das
cmpsb
insb
cs
mov
ds
popf
and
dec
stos
cmpsb
insb
movsl
mov
cs
test
movsb
int
push
add
sub
enter
enter
add
add
inc
sbb
dec
popf
ret
das
cmpsb
nop
cs
push
mov
sub
sub
in
ljmp
enter
shrl
sub
xchg
scas
cli
movsb
enter
scas
add
xor
pop
inc
mov
sbb
scas
add
xchg
sbb
into
inc
mov
dec
mov
dec
cmp
inc
mov
cs
mov
cs
mov
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
cs
inc
mov
iret
sub
cmp
cs
mov
push
xor
xor
inc
sub
lret
fisubrl
ljmp
inc
sub
mov
pop
inc
fdiv
inc
sub
movsb
and
pop
xchg
in
call
sbb
add
inc
sub
dec
popf
cmpsb
in
movsb
ljmp
adc
inc
data16
ds
cmpsb
mov
fmuls
test
ds
cs
fsub
inc
fsubs
xor
inc
mov
aam
sbb
enter
push
cmp
daa
inc
sahf
inc
mov
ss
inc
call
jmp
in
shll
inc
mov
sub
xor
inc
xchg
shll
mov
inc
dec
fbstp
cs
push
cwtl
mov
cmp
inc
xor
xor
movsl
sub
cs
movsb
mov
out
xchg
scas
cli
inc
xor
fbstp
cs
faddl
inc
cmp
xor
cs
ds
add
das
mov
aas
ds
mov
inc
das
and
or
cmp
xor
cs
in
mov
inc
pop
xor
cs
ss
mov
push
inc
roll
xor
outsb
xor
roll
int3
sbb
inc
inc
cmp
daa
sub
xor
cs
fwait
inc
xchg
mov
cs
ds
aaa
dec
cs
sub
std
sbb
fadds
xor
push
inc
scas
ss
ds
loopne
xor
inc
aam
inc
mov
inc
xor
inc
call
cmp
sahf
dec
mov
mov
mov
cmp
pop
inc
mov
enter
movsb
mov
xor
fsubrl
add
inc
sbb
mov
mov
sub
outsb
inc
enter
inc
test
inc
push
dec
xor
movsb
lret
adc
test
pop
add
add
sub
scas
into
pushl
clc
imull
mov
sub
sub
mov
sub
inc
mov
mov
cs
aas
mov
inc
mov
cs
fcoms
xchg
fnsave
dec
roll
pop
scas
aas
enter
pop
inc
fdiv
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
scas
dec
fsubrs
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
scas
inc
fcomp
inc
fcoms
xchg
fnsave
dec
roll
pop
scas
inc
enter
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
scas
sub
inc
enter
xor
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
scas
sub
enter
dec
aaa
xor
mov
mov
cs
ds
scas
call
sub
push
ds
xor
add
sbb
dec
mov
adc
inc
scas
mov
add
add
enter
iret
add
cs
mov
sub
mov
sub
mov
mov
call
add
cs
fcoms
xchg
fnsave
dec
roll
pop
xchg
enter
pop
inc
fmul
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
xchg
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
xchg
out
fcoms
xchg
fnsave
dec
roll
pop
xchg
out
push
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
xchg
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
xchg
inc
inc
enter
dec
aaa
xor
mov
mov
cs
ds
cmpsl
inc
mov
into
inc
mov
into
jmp
sub
inc
scas
mov
inc
enter
add
sub
iret
add
cmpsl
xor
mov
xor
ds
sub
mov
sub
inc
enter
xor
aas
enter
pop
inc
call
inc
mov
movsb
enter
add
cs
fcoms
xchg
fnsave
dec
roll
xor
enter
pop
inc
fadd
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
inc
mov
cs
rorl
xor
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
inc
mov
cs
shll
inc
fsub
inc
fcoms
xchg
fnsave
dec
roll
xor
out
push
inc
enter
xor
dec
push
mov
cs
ret
sub
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
fcoms
xchg
fisttpll
mov
cs
dec
ret
sub
inc
enter
dec
addr16
mov
cs
in
xchg
in
dec
inc
mov
movsb
enter
pop
sub
lahf
inc
enter
add
sub
inc
jmp
enter
dec
xor
xor
pop
inc
call
movsb
mov
and
mov
mov
fadds
rcl
inc
mov
mov
cs
sub
inc
mov
aam
pop
inc
mov
inc
ds
mov
inc
cs
cmpsb
inc
enter
mov
rclb
mov
cs
sub
cs
mov
cmp
mov
sbb
call
and
inc
mov
push
ds
mov
inc
xor
daa
shll
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
mov
sub
mov
movzbl
or
mov
cmp
mov
movzbl
sbb
mov
mov
xor
leave
ret
push
mov
sub
movzwl
mov
and
movzwl
mov
sub
mov
cmp
mov
movzbl
adc
mov
leave
ret
push
mov
sub
cmp
mov
movzbl
sbb
mov
movzwl
mov
xor
mov
mov
mov
and
mov
leave
ret
push
mov
sub
movzbl
mov
add
mov
mov
mov
or
mov
test
mov
mov
adc
mov
leave
ret
push
mov
sub
test
movzwl
mov
sbb
mov
mov
mov
xor
mov
movzwl
mov
and
leave
ret
push
mov
sub
movzwl
mov
xor
mov
cmp
mov
mov
sbb
mov
test
mov
mov
adc
mov
leave
ret
push
mov
sub
mov
movzbl
or
mov
test
movzbl
mov
adc
mov
cmp
mov
movzwl
adc
leave
ret
push
mov
sub
mov
mov
or
mov
movzbl
movzbl
and
mov
mov
mov
and
mov
leave
ret
push
mov
sub
movl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
ja
movzwl
mov
and
mov
mov
adcb
mov
mov
xor
mov
mov
mov
push
push
mov
mov
and
mov
xor
mov
add
cmp
je
movzwl
movzwl
and
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmpl
movl
movb
je
cmp
jle
mov
xor
jmp
mov
and
mov
lea
mov
mov
mov
adc
mov
mov
xor
add
mov
mov
xor
sub
mov
mov
xor
mov
sub
sub
mov
pushl
cmp
mov
mov
sbb
pushl
mov
mov
pushl
call
cmp
mov
mov
adcb
mov
mov
mov
cmp
sbbl
xor
add
mov
mov
rcl
mov
mov
xor
add
mov
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xor
movl
cmpl
jl
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
movl
cmpl
jge
mov
push
lea
and
mov
mov
imul
imul
mov
lea
and
mov
or
xor
mov
mov
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
lea
mov
mov
movzbl
and
mov
xor
xor
lea
xor
movzbl
mov
xor
mov
mov
imul
mov
and
mov
xor
add
mov
imul
lea
and
mov
or
cmp
jne
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
sub
mov
movzbl
xor
mov
cmp
mov
mov
sbb
test
mov
mov
adc
mov
leave
ret
push
mov
sub
movl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
push
call
cmpl
jb
mov
movl
cmpl
jae
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
mov
and
mov
mov
add
mov
mov
mov
mov
movzwl
add
push
pop
sub
add
cmpl
mov
mov
pop
jne
movzwl
xor
mov
xor
add
leave
ret
push
mov
sub
movl
movl
mov
movl
cmpl
jge
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jb
xor
mov
add
mov
movl
mov
xor
add
mov
mov
mov
lea
push
mov
xor
add
mov
push
pushl
add
pushl
push
push
mov
mov
pushl
pushl
call
add
leave
ret
push
mov
sub
movl
mov
movl
cmpl
jle
mov
movzbl
or
mov
movzwl
mov
adc
mov
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
incl
mov
mov
shl
test
movzwl
mov
sbb
mov
push
mov
mov
mov
mov
shl
cmp
mov
adc
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
movzwl
or
mov
mov
lea
mov
mov
mov
add
mov
mov
dec
not
and
movl
cmpl
je
mov
mov
lea
mov
mov
mov
mov
sub
mov
jmp
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
cmp
jg
mov
sar
mov
jmp
mov
or
mov
movzwl
sub
mov
mov
mov
sub
xor
cmp
mov
mov
mov
jne
mov
pop
leave
ret
movl
movl
movl
movl
mov
ret
push
mov
sub
push
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
cmpl
ja
mov
or
mov
mov
addb
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
movl
call
test
je
call
mov
mov
xor
add
mov
add
mov
mov
movl
mov
movl
movzwl
xor
mov
mov
xor
add
mov
mov
mov
xor
mov
add
mov
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
add
add
imul
movl
cmpl
jae
mov
cmp
mov
sbb
mov
mov
mov
mov
xor
add
cmp
jne
movzbl
movzbl
xor
add
add
mov
add
mov
mov
mov
cmp
jle
movzbl
or
mov
jmp
mov
sar
mov
mov
mov
xor
movzbl
xor
add
imul
movzbl
sub
jmp
mov
movzbl
cmp
movl
adcl
xor
sub
sub
mov
movzwl
movzwl
sub
mov
mov
mov
xor
add
ror
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
imul
xor
add
imul
mov
xor
test
mov
mov
adc
mov
xor
movl
cmpl
ja
mov
sbb
mov
add
mov
add
imul
incb
mov
cmpl
jle
movzbl
and
mov
jmp
mov
sbb
mov
sbb
mov
xor
add
imul
add
mov
xor
add
imul
decb
mov
mov
xor
mov
mov
xor
lea
xor
xor
mov
cmp
adcl
add
cmp
jne
mov
cmp
mov
shlb
xor
add
pop
pop
pop
leave
ret
push
mov
push
push
pop
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
test
jne
movl
cmpl
jle
mov
movl
addl
andl
xor
add
mov
inc
cmp
jb
mov
mov
push
push
xor
cmp
jne
call
mov
cmp
mov
movzwl
sbb
mov
mov
mov
movzbl
sub
xor
lea
mov
mov
test
mov
adc
mov
xor
mov
add
inc
mov
or
mov
movzwl
mov
xor
mov
cmp
jne
test
je
push
pop
cmp
lea
mov
mov
movzwl
sbb
mov
mov
sub
sub
mov
xor
add
mov
dec
jne
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
inc
mov
cmp
je
mov
cmp
jbe
dec
mov
jmp
test
jne
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
mov
mov
add
mov
div
lea
mov
cmp
jne
push
push
call
mov
add
cmp
jne
pop
ret
push
push
movl
call
cmp
je
push
mov
cmp
jae
test
je
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
mov
div
lea
mov
jmp
test
jne
mov
jmp
dec
mov
cmp
jne
pop
ret
push
mov
sub
mov
movl
movl
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
push
movl
cmpl
je
mov
push
mov
push
lea
mov
pushl
pushl
call
mov
lea
mov
mov
movzbl
xor
mov
xor
mov
add
cmp
je
mov
jmp
push
pushl
push
pushl
call
lea
mov
mov
mov
movzbl
sub
add
mov
xor
pop
mov
inc
mov
add
pop
pop
leave
ret
push
mov
sub
push
push
movl
lea
movl
push
mov
call
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
push
push
pushl
push
push
push
push
call
cmpl
jb
mov
movl
cmpl
jge
lea
mov
mov
movzwl
sub
movzbl
mov
adc
mov
mov
mov
xor
mov
mov
add
mov
movl
mov
cmp
mov
mov
adcb
mov
mov
test
jne
mov
mov
cmpl
je
push
push
add
push
pushl
pushl
call
add
mov
mov
test
je
movl
mov
jmp
cmp
je
mov
mov
xor
xor
xor
add
lea
div
push
push
shl
mov
call
pop
cmp
jne
mov
add
jmp
mov
sub
mov
mov
xor
pop
test
je
mov
pushl
push
push
push
push
pushl
pushl
call
movl
cmpl
jl
movzwl
inc
mov
movzwl
rcl
mov
add
mov
movl
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
push
pushl
mov
call
mov
jmp
cmp
jne
mov
mov
xorl
push
push
push
push
push
pushl
call
add
mov
mov
mov
add
mov
mov
dec
xor
mov
and
mov
xor
mov
add
jne
mov
mov
xor
xor
xor
add
addl
xorl
add
div
shl
mov
pushl
pushl
call
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
lea
movl
cmpl
jbe
mov
movzbl
and
mov
mov
mov
adcb
xor
mov
mov
movzbl
and
mov
push
xor
mov
shr
mov
pop
div
cmp
jbe
mov
xor
inc
xor
mov
cmp
jne
pop
xor
pop
inc
pop
leave
ret
push
mov
push
push
mov
movl
movl
cmp
je
cmpl
jne
push
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movl
cmpl
jle
mov
xor
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
pushl
pushl
pushl
call
jmp
pushl
pushl
subl
orl
pushl
pushl
pushl
pushl
cmp
movl
sbbl
pushl
call
test
mov
movzbl
adc
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
or
mov
add
pop
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
movzwl
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
xor
leave
ret
push
mov
sub
mov
mov
push
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
xor
movl
cmpl
ja
push
movl
mov
add
movl
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
cmpl
jnp
movzwl
or
jmp
mov
mov
and
mov
and
mov
mov
lea
mov
lea
mov
or
mov
mov
lea
mov
lea
mov
lea
movzwl
inc
mov
mov
lea
mov
cmp
jl
mov
and
jmp
mov
xor
mov
add
mov
lea
mov
lea
mov
test
mov
adc
mov
lea
mov
lea
mov
or
mov
mov
mov
mov
add
mov
cmp
mov
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
movl
cmpl
jle
mov
and
mov
mov
mov
sub
mov
mov
test
mov
mov
sbb
mov
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
imul
movl
mov
mov
movl
mov
pushl
movzwl
ror
mov
mov
push
push
lea
push
mov
mov
pushl
pushl
call
push
push
lea
push
mov
mov
pushl
pushl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
movl
cmpl
jle
movzbl
adc
mov
movzwl
sbb
mov
mov
mov
mov
xor
xor
lea
add
cmp
je
mov
mov
mov
sub
mov
xor
add
mov
mov
mov
cmp
movzwl
sar
mov
mov
xor
add
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
xor
movl
cmpl
jb
mov
mov
shlb
pop
div
cmp
je
cmp
je
push
xor
mov
mov
xor
mov
mov
pop
div
cmp
jae
cmp
je
cmp
movzwl
movzbl
sbb
mov
push
xor
mov
movzbl
or
mov
pop
div
cmp
ja
cmp
je
xor
add
mov
div
cmp
je
cmp
jne
movzbl
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
mov
mov
mov
movl
jmp
movl
cmpl
jbe
mov
cmp
mov
sbb
mov
mov
add
mov
mov
add
mov
jmp
test
lea
mov
mov
mov
sbb
mov
mov
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
add
mov
mov
xor
inc
xor
cmp
jne
pop
pop
ret
push
mov
sub
push
push
call
cmp
jle
xor
jmp
push
push
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
lea
call
movl
cmpl
ja
mov
mov
sbbb
movzwl
mov
adc
mov
push
pop
push
mov
mov
movzwl
and
mov
pop
push
pop
push
cmpl
jno
movzbl
movzwl
add
mov
jmp
mov
mov
and
mov
mov
mov
add
mov
mov
mov
cmp
mov
mov
sbb
mov
mov
cmp
mov
mov
sbb
mov
pop
push
cmp
mov
mov
adc
mov
mov
pop
push
mov
mov
sub
mov
mov
mov
pop
push
mov
pop
cmp
jb
mov
sub
jmp
mov
or
movzbl
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
test
mov
mov
sbb
mov
mov
mov
mov
pop
mov
test
mov
mov
adc
mov
push
mov
mov
mov
mov
mov
pop
push
mov
pop
push
mov
test
mov
sbb
pop
mov
mov
xor
push
push
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
call
cmpl
jb
lea
movl
cmpl
jne
mov
mov
or
mov
push
mov
mov
mov
mov
call
add
cmp
adcl
xorl
lea
push
call
test
je
lea
lea
call
xor
mov
call
mov
call
mov
call
mov
sub
mov
call
lea
mov
movzwl
rcl
mov
mov
lea
call
mov
mov
call
mov
movzwl
add
mov
mov
call
mov
mov
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
call
mov
mov
call
call
mov
mov
sub
mov
pop
pop
test
je
call
movl
cmpl
jb
mov
mov
xor
mov
mov
mov
add
mov
mov
movzwl
and
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
mov
cmp
movzbl
adc
mov
add
mov
mov
leave
ret
call
test
je
push
call
push
mov
sub
movl
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
movl
movl
movl
movl
movl
mov
mov
xorl
adcl
andl
movl
call
test
je
push
push
push
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
movl
cmpl
je
mov
mov
add
jmp
cmp
jne
lea
mov
call
mov
mov
mov
movzbl
add
mov
mov
xor
xor
sub
sub
xor
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
movzwl
sub
mov
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movl
movl
cmpl
jae
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
pushl
mov
mov
pushl
lea
push
call
call
test
je
mov
mov
sub
mov
andl
addl
jmp
mov
mov
mov
mov
mov
add
lea
mov
mov
cmp
mov
mov
sbbb
add
mov
mov
mov
leave
ret
push
mov
sub
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movl
movl
cmpl
jge
movl
mov
mov
sub
movl
mov
mov
mov
cmp
jb
mov
and
mov
jmp
mov
mov
or
mov
and
mov
push
push
mov
mov
xor
xor
test
mov
mov
adc
sub
mov
mov
mov
movl
movzbl
mov
sub
mov
xor
mov
add
movzbl
or
mov
push
mov
mov
orl
mov
imul
mov
rclb
mov
movl
cmp
mov
movzbl
sbb
addl
mov
mov
xor
lea
mov
mov
xor
mov
add
movzbl
ror
mov
mov
xor
movzwl
add
cmp
ja
movl
cmpl
jne
lea
mov
mov
mov
xor
mov
mov
addb
movl
mov
mov
shr
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
xor
test
mov
sbb
mov
add
mov
movzwl
cmp
jne
mov
mov
xor
add
imul
mov
mov
mov
push
cmp
adcl
orl
call
test
je
movl
cmpl
jge
mov
xor
add
movzbl
push
mov
cmp
jg
mov
xor
jmp
movzbl
shl
mov
mov
mov
and
mov
xor
add
imul
mov
mov
call
test
jne
mov
mov
xor
add
imul
cmp
mov
sbbb
mov
movzbl
cmp
movzbl
adc
mov
sub
xor
movzwl
push
mov
add
mov
mov
call
test
jne
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
xor
lea
mov
xor
xor
xor
cmp
orl
adcl
orl
xor
mov
lea
movl
cmpl
ja
cmpl
je
mov
or
mov
jmp
mov
mov
sub
movzbl
and
mov
mov
add
movzwl
cmp
mov
jbe
jmp
mov
movzwl
add
mov
movl
mov
mov
xor
xor
cmp
adcl
orl
sbbl
lea
xor
mov
lea
mov
mov
movzwl
xor
xorl
mov
mov
xor
add
imul
mov
movzbl
mov
sub
cmp
adcl
xor
cmp
je
addl
mov
mov
cmp
je
andl
mov
xor
sub
movzbl
xor
add
mov
mov
imul
mov
jmp
mov
xor
sub
movl
cmpl
jae
add
mov
addl
mov
mov
xor
add
cmp
je
addl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
xor
lea
mov
jmp
orl
test
lea
mov
mov
mov
sbb
mov
imul
mov
mov
xor
add
movzbl
add
xor
cmp
pop
pop
pop
je
movl
cmpl
jl
mov
mov
adcb
mov
mov
addb
mov
xor
mov
xor
add
mov
cmp
mov
jne
mov
xor
mov
sub
add
mov
mov
mov
mov
leave
ret
push
mov
sub
movl
movl
movl
movl
lea
mov
lea
mov
lea
mov
push
mov
mov
lea
push
mov
mov
mov
push
mov
movl
mov
mov
mov
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
lea
push
cmp
sbbl
orl
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
call
mov
cmp
je
mov
cmpl
je
cmpl
jne
mov
jmp
cmp
je
movl
cmpl
je
test
movzwl
adc
mov
mov
add
xor
cmp
je
mov
cmp
jne
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
addb
mov
xor
xorl
add
cmp
jb
mov
addl
mov
cmp
jae
mov
movzwl
mov
dec
cmp
ja
addl
mov
mov
addb
mov
andl
mov
xor
movl
cmpl
ja
mov
add
imul
movzwl
mov
lea
push
mov
rclb
mov
xor
add
mov
imul
mov
add
orl
push
pushl
mov
call
cmpl
je
mov
xor
inc
xor
mov
jmp
mov
mov
mov
cmp
sbbl
xorl
add
xor
mov
mov
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movl
cmpl
jae
xor
cmp
jnp
mov
movzwl
sub
mov
jmp
mov
mov
add
movzbl
mov
sub
mov
mov
add
mov
cmp
lea
mov
mov
mov
adc
mov
imul
mov
cmp
js
movzbl
mov
adc
mov
jmp
lea
mov
mov
mov
add
mov
movzwl
adc
mov
mov
mov
mov
mov
imul
xchg
dec
dec
cmp
jne
movzwl
movzwl
and
mov
mov
mov
mov
xor
lea
mov
mov
or
mov
add
mov
mov
add
dec
jne
jmp
mov
mov
call
mov
jmp
cmpl
je
mov
mov
sub
mov
jmp
lea
mov
mov
mov
xor
movzbl
mov
sbb
mov
xor
pop
mov
mov
pop
pop
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
pushl
push
call
jmp
mov
xor
add
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
push
push
pushl
call
jmp
mov
xor
add
leave
ret
push
mov
sub
mov
mov
add
mov
movzwl
movzbl
add
mov
mov
movzbl
add
mov
leave
ret
push
mov
sub
mov
movzbl
add
mov
mov
mov
and
mov
mov
sub
mov
leave
ret
push
mov
sub
mov
mov
sub
mov
movzwl
mov
xor
mov
mov
mov
or
leave
ret
jmp
push
mov
sub
cmp
movzbl
mov
sbb
mov
mov
add
movzbl
mov
sub
mov
leave
ret
jo
insb
xor
xor
dec
cmp
ja
inc
push
and
and
and
jns
jne
and
xor
data16
push
inc
and
jae
bound
xor
inc
add
jo
add
inc
add
inc
add
add
daa
adc
sub
add
add
inc
add
add
inc
add
jo
add
add
add
add
mov
inc
add
inc
add
add
ljmp
add
or
cld
fdivrp
sti
cli
stc
clc
push
push
push
push
dec
call
inc
add
inc
add
add
nop
jo
add
jo
add
jno
add
inc
add
jge
add
call
jne
add
inc
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
add
add
add
add
std
std
xor
cli
push
std
hlt
sbb
icebp
cmp
into
std
dec
fsts
fcoms
idiv
ss
std
xor
cli
push
std
hlt
sbb
icebp
incb
std
into
std
dec
fldenv
fsubs
idiv
ss
std
decb
std
idiv
imul
std
dec
fnstenv
fdivs
sub
inc
aaa
push
ss
clc
xor
std
xor
stc
imul
cmp
repnz
std
icebp
flds
inc
sub
push
aaa
pusha
ss
xor
std
xor
stc
imul
incb
std
repnz
std
icebp
fsts
push
sub
pusha
aaa
jo
ja
incb
std
std
imul
idiv
outsb
std
repz
std
icebp
fldenv
bound
jno
jo
xorb
clc
incb
std
std
imul
idiv
sbb
hlt
std
repnz
fnstenv
jb
andl
xchg
clc
incb
std
std
imul
idiv
imul
iret
flds
daa
nop
aaa
mov
pop
std
std
imul
idiv
imul
std
icebp
fsts
daa
mov
clc
decb
std
std
sbb
cli
insl
std
stc
std
clc
fldenv
daa
mov
shlb
aaa
shlb
xlat
stc
cmp
std
adc
sti
decb
std
hlt
std
repnz
fld
fadd
sub
daa
shlb
loopne
out
incb
add
jno
add
jno
add
inc
add
add
push
xchg
gs
add
add
add
loopne
inc
add
fs
push
or
add
inc
inc
add
ja
add
pop
jne
sbb
push
add
gs
push
add
inc
add
jne
push
add
add
inc
add
dec
add
add
add
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
sbb
inc
sbb
adc
add
add
add
add
imul
add
add
add
dec
add
add
add
add
jns
add
jns
add
imul
outsl
add
dec
add
inc
add
imul
add
add
add
inc
je
add
out
jmp
inc
add
out
lcall
add
out
js
inc
add
out
decl
and
push
std
incb
add
or
xchg
add
pop
add
pop
add
or
and
add
sbb
push
popa
insl
dec
insb
insb
push
imul
add
data16
std
imul
adc
stc
imul
idiv
push
std
cmc
std
hlt
fsts
fcoms
idiv
add
add
add
fs
bound
add
add
gs
xor
add
inc
push
imul
jne
imul
inc
imul
inc
dec
add
add
jbe
add
adc
xchg
or
add
jbe
jae
add
push
imul
inc
std
jle
incb
pop
idiv
mov
std
pop
mov
pop
sub
add
pusha
inc
add
std
sbb
imul
std
sbb
adc
sub
sub
std
incb
add
std
sbb
adc
sub
sub
std
push
adc
std
sbb
insl
std
adc
std
decb
xor
inc
or
arpl
jae
orl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
jns
pop
xchg
xor
or
cmp
inc
xchg
out
shlb
push
jbe
gs
gs
aaa
pop
ja
sbb
xchg
xchg
test
arpl
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
add
add
jne
xor
jne
cmp
addr16
inc
cmp
push
aaa
ss
dec
pop
aas
data16
popa
add
aaa
xor
cmp
jp
cmp
and
and
push
jns
pop
sub
jbe
and
add
add
xor
push
jne
inc
xor
inc
popa
jno
inc
push
xor
inc
js
dec
push
arpl
aaa
pop
sub
cmp
xor
xor
dec
add
ja
push
jp
and
add
add
data16
cmp
add
dec
ss
insb
add
jo
and
inc
dec
add
xor
dec
jne
jne
bound
and
jp
jo
add
xor
ss
push
xor
xor
add
dec
jbe
add
and
xor
jns
push
xor
outsb
xor
xor
and
and
imul
and
dec
add
dec
and
and
jns
addr16
and
xor
xor
jp
inc
add
jae
xor
push
xor
inc
pop
data16
outsl
and
add
outsb
add
jbe
xor
add
ja
add
and
add
xlat
jmp
add
add
add
add
add
or
add
add
add
sbb
ret
jo
adc
mov
nop
nop
frstor
adc
mov
imul
inc
repnz
cltd
or
sbb
push
addr16
movsl
lcall
iret
add
addr16
rorb
pop
jb
lcall
cmp
ja
jl
insl
in
pop
fldt
pop
stos
jb
and
adc
cmp
jecxz
fldenv
xor
pop
push
pop
out
dec
das
enter
icebp
lods
push
dec
cmp
mov
enter
xor
arpl
mov
aas
ljmp
xchg
aad
or
into
cmp
call
repnz
loop
mov
ljmp
cwtl
pop
xchg
adc
call
xchg
das
pop
jns
out
mov
xor
stos
sti
repz
cltd
out
pop
sarb
fs
pop
cmc
sti
lcall
adc
sub
scas
pop
push
mov
sahf
inc
rol
cmp
xor
cmp
cmpsl
loope
jl
pop
dec
dec
xchg
adc
inc
scas
inc
push
xor
rorl
or
mov
cmp
inc
hlt
mov
cmp
rcrl
lcall
das
ss
pop
andb
out
or
rcrl
ret
dec
das
notl
dec
shrl
lds
adc
mov
pusha
adc
add
pushf
adc
or
shll
jnp
stc
inc
add
fisubl
fdivr
jg
mov
push
sbb
mov
loop
arpl
xor
and
sbb
xchg
xchg
dec
mov
in
xor
data16
imul
jecxz
mov
loope
mov
inc
xchg
stos
or
mov
xchg
int
xor
mov
cltd
xor
sbb
inc
mov
out
imul
xor
iret
mov
loopne
push
sarl
mov
ret
fwait
sbb
inc
fisttps
gs
hlt
mov
stos
add
mov
imull
icebp
cmpsl
arpl
push
mov
adc
sarb
xchg
xchg
cs
add
dec
lods
add
nop
mov
mov
int
fsubl
mov
or
into
adc
andb
mov
pop
ss
data16
pop
or
or
xchg
mov
pop
fisttps
jno
andb
sbb
push
outsl
pop
mov
push
pop
jae
sbb
repz
pop
dec
push
sub
scas
mov
push
sbb
movsb
outsl
stos
fs
sarl
ds
hlt
and
xchg
inc
pop
jg
xor
mov
inc
inc
dec
jp
cmpsl
sub
and
js
loop
xlat
xchg
pop
mov
sar
xor
mov
cmp
je
mov
popf
jg
mov
mov
in
and
and
and
pop
popf
sbb
in
inc
xchg
push
sbb
mov
repnz
sbb
enter
scas
mov
scas
inc
xor
out
in
shl
and
mov
inc
mov
inc
cli
add
ja
or
outsb
xchg
ljmp
ds
inc
fcmovne
out
xchg
das
inc
sbb
movsb
shl
mov
adc
aad
dec
xchg
ss
mov
gs
pop
pop
add
in
sahf
loop
mov
shrl
mov
mov
mov
mov
dec
stos
push
cmp
add
ss
in
mull
outsb
or
punpckhdq
sub
push
mov
div
leave
xchg
iret
out
mov
in
popf
xlat
test
sbb
jns
xorb
and
into
jge
lods
lret
sub
sub
xorl
subb
jle
mov
je
repnz
mov
push
mov
leave
outsb
stc
cmp
mov
mov
jo
fcomi
icebp
outsb
shrl
stos
or
ret
bnd
mov
and
mov
popa
lods
add
and
and
mov
shl
roll
xor
cmp
adc
push
xor
pop
fcomps
cmp
in
mov
xchg
lret
sti
outsb
nop
push
in
cmpsb
hlt
jg
jle
outsl
jg
pop
or
cmpb
enter
push
add
loope
or
xchg
mov
icebp
and
lds
scas
mov
les
insl
cmp
shll
xchg
jo
jbe
or
lock
xchg
ja
dec
sahf
lret
mov
and
jecxz
adc
push
or
insb
sub
sbb
add
xchg
xchg
adc
sbb
jne
push
pop
and
adcb
and
sub
inc
repz
and
or
test
rclb
pushl
mov
js
sbb
scas
int
in
and
jmp
rcll
push
and
pop
push
or
ss
in
pop
cmp
push
sub
insb
es
or
add
sub
lods
push
mov
pushf
pop
or
dec
add
icebp
pop
fisttpll
mov
imulb
mov
enter
xor
adc
cmp
int3
lahf
das
scas
jo
and
jmp
int3
leave
addr16
jne,pn
lret
mov
push
inc
pop
mov
mov
repnz
aaa
ficompl
push
in
pop
je
mov
lret
and
mov
fcompl
or
int3
mov
adc
add
arpl
xchg
dec
leave
lock
into
es
and
std
dec
sub
mov
rorb
mov
xchg
dec
orb
icebp
sub
or
dec
fdivrs
jne
cmp
shlb
insb
adc
cwtl
lea
shrb
cwtl
push
addb
orb
stos
pminsw
mov
mov
adc
mov
stc
movsb
add
aaa
xorl
push
es
dec
mov
movsb
sbb
pop
xor
and
pop
shlb
sub
inc
cwtl
sub
mov
cwtl
add
roll
fadds
in
out
out
inc
les
fs
out
aaa
jbe
mov
add
cwtd
jge
push
adc
or
adc
or
mov
lock
jae
xor
shrl
sbb
sub
pop
cmp
xor
jecxz
inc
adc
push
jb
mov
sahf
cltd
pop
pop
xchg
movsl
lahf
xor
shrb
push
ficomps
dec
negl
inc
jns
mov
es
and
jg
std
repnz
pop
or
jp
jmp
mov
xchg
add
addr16
arpl
outsl
int
jmp
add
lcall
fs
in
repz
push
out
mov
sub
push
mov
movsb
jle
sbb
mov
popf
clc
bound
notl
jmp
adc
repz
and
out
gs
push
push
loope
cmp
test
insl
ja
bound
or
mov
pushf
pop
ror
sahf
stc
out
dec
jl
sahf
pusha
and
pop
mov
clc
push
loop
sub
mov
outsb
mov
aam
sti
cmp
lret
xchg
sti
jno
mov
aad
jmp
mov
fmul
ret
ffreep
in
lret
add
cld
fwait
mov
sbb
or
mov
jb
dec
cmpsb
mov
push
mov
xchg
jnp
jne
jl
mov
lret
outsl
aam
sbb
mov
ljmp
test
pop
pop
pop
cltd
mov
fnstsw
xchg
cltd
xchg
mov
icebp
popf
fdivs
cmp
mov
jno
mov
and
ja
je
gs
fnstcw
mov
enter
or
loopne
fdivs
sub
imul
add
dec
xchg
inc
into
fisttpll
dec
fucomip
add
sbb
lock
rorl
cmpsb
insl
out
subb
xchg
iret
fdivrl
mov
adc
test
ja
or
ds
fisubl
iret
lods
mov
pop
lret
test
arpl
addr16
aad
inc
mov
mov
jnp
lret
mov
ljmp
pop
xor
jo
and
insl
dec
inc
sbb
mov
mov
add
inc
imul
xor
push
cmp
push
add
jb
jl
int
sbb
jp
mov
mov
or
xor
dec
cld
cli
test
adc
sbb
pop
dec
ljmp
ret
cli
adc
or
sti
xchg
mov
les
fadds
mov
mov
stc
push
call
cmpsb
fildl
into
add
mov
pop
mov
cmp
call
cmp
loop
jle
inc
mov
mov
jle
movsl
ljmp
mov
inc
aam
pop
jmp
push
in
jmp
inc
xchg
sbb
aaa
mov
cwtl
fstpl
nop
dec
lods
xor
loopne
jbe
imul
cmp
fnstsw
test
into
fiaddl
loopne
mov
test
hlt
push
mul
push
and
inc
shll
xor
xor
sahf
pop
xchg
sub
lea
jo
dec
pop
or
mov
xchg
or
lcall
cmp
outsb
fisttpl
mov
je
cmc
mov
cmp
test
mov
adc
mov
outsb
addr16
mov
xchg
xlat
push
xor
test
adc
test
mov
insb
xchg
cltd
lds
in
stc
addr16
cmp
pushf
adc
inc
out
adc
add
xorl
filds
dec
frstor
jmp
mov
add
dec
ret
mov
pop
dec
or
int3
or
lcall
clc
out
or
dec
mov
lods
inc
scas
sub
sbb
jge
movsl
popf
mov
stc
dec
add
iret
sub
and
loope
popa
inc
adc
test
fstps
or
cmp
popa
jnp
cmp
cld
fs
aaa
cwtl
lods
enter
push
movsl
jg
and
add
aad
push
nop
mov
les
sti
sbb
addr16
inc
sti
xchg
out
and
jg
mov
outsb
jb
hlt
or
jno
hlt
pop
inc
mov
pop
aad
fs
mov
rcrb
stc
or
and
pusha
hlt
nop
fmuls
addb
pop
mov
or
cmpsl
arpl
test
cmp
daa
stc
cmp
fs
lahf
rolb
loope
testl
mov
pop
xchg
mov
xchg
cltd
lea
or
and
fadd
enter
lcall
jno
cmp
hlt
fldt
jge
loopne
jg
jnp
cmpsl
add
jb
inc
es
jb
cmp
sbb
xor
xchg
ljmp
mov
movsl
bound
mov
ret
arpl
mov
mov
sbbb
and
bound
cmc
jbe
lea
jecxz
and
fmull
xor
test
mov
cmp
xchg
inc
sub
cwtl
arpl
rol
pop
mov
inc
cltd
xlat
jo
jo
movsl
sbb
pop
cld
sub
addr16
xor
gs
loop
lcall
call
ss
push
pop
bound
rcr
in
stos
dec
push
mov
cmpsl
sti
mov
add
or
pushf
adc
repnz
and
dec
push
mov
bound
xchg
or
and
addr16
adc
out
xchg
loope
mov
xor
lahf
inc
add
int
xlat
lods
lret
mov
test
aaa
jo
adc
cmp
adc
push
jge
cmp
mov
sbb
sub
imul
mov
sub
jne
ja
xchg
adc
add
add
testb
imul
jns
fisubrl
mov
push
loop
sbb
dec
int
cld
dec
dec
adc
cs
test
lods
sti
or
mov
popf
push
shl
lds
mov
inc
fmulp
jge
dec
jp
stos
sbb
cmp
push
dec
test
leave
or
enter
jne
and
xor
and
mov
mov
inc
mov
ja
xchg
testl
and
test
call
ljmp
adcb
push
mov
and
add
leave
loopne
leave
add
mov
rclb
jg
out
jmp
jecxz
sbb
mov
in
push
sbb
shl
and
aaa
in
cwtl
lock
adc
jmp
sbb
pop
mov
mov
xor
in
push
jp
cmp
xlat
dec
shlb
push
scas
sub
add
dec
jp
xchg
push
icebp
aaa
mov
insl
sbb
das
jnp
cmp
push
cmpb
cmp
xor
lcall
or
inc
in
push
and
pop
adc
and
loope
mov
aaa
mov
sub
inc
push
sbb
stc
pop
in
jb
ret
push
fcmovb
lret
inc
xor
mov
add
or
inc
inc
cmpb
aas
fwait
dec
lea
cmp
fs
leave
xor
jne
loop
mov
dec
jo
push
mov
jp
mov
lds
mov
mov
xchg
add
insb
das
xor
in
scas
adc
stc
sbb
shll
notl
lds
sub
xlat
xor
inc
lods
mov
push
sbb
jne
cmp
adc
xor
inc
cmp
ret
or
mov
insl
fdivrl
adc
pop
outsb
mov
push
inc
inc
sbb
push
pop
jp
or
inc
sbb
ret
je
pop
mov
push
dec
leave
mull
xor
dec
mov
fldcw
sti
mov
mov
mov
jno
add
ret
adc
pop
xchg
adc
mov
bound
jb
adc
rorb
adc
mov
pop
mov
bound
pusha
mov
pusha
and
mov
pop
repz
cmp
call
das
sarl
test
mov
int
popf
popa
shlb
dec
lret
sbb
pushf
xor
mov
fwait
mov
mov
jne
sbb
mov
xchg
daa
mov
and
mov
xchg
gs
pusha
outsl
push
xacquire
stos
sub
and
mov
mov
lcall
divb
fs
jnp
dec
rolb
stos
pop
xorl
lea
mov
or
xorb
mov
loop
mov
xchg
or
cmp
loop
out
cmp
inc
dec
bound
mov
mov
cltd
jecxz
adc
shlb
aas
rorb
xchg
cmpb
sub
cmp
inc
stc
sbb
sub
add
pop
js
stos
xor
pop
fwait
jge
ljmp
sti
idivl
lahf
lds
push
pop
in
pop
or
nop
arpl
pop
mov
mov
mov
mov
and
push
test
jo
pop
push
jmp
es
sbb
inc
push
inc
dec
das
jmp
fmull
aas
cmpsl
sub
mov
loop
ss
mov
mov
test
push
add
cmp
pushf
jae
cmc
or
outsb
dec
adc
inc
cmp
in
fldcw
cli
push
bswap
sub
test
sub
cltd
or
xor
sti
test
mov
or
pop
test
scas
adc
cltd
jno
subb
movsl
mov
arpl
adc
push
cmp
mov
sbb
xor
aaa
xchg
jl
xchg
pop
imul
lcall
insl
xchg
lea
mov
aad
mov
fcomps
dec
aas
ret
lahf
adc
movsl
mov
sub
inc
xlat
popl
inc
or
sub
mov
mov
and
pop
mov
js
xchg
jae
cmp
pop
xchg
mov
pop
xor
jl
mov
sub
cmpsb
mov
pusha
mov
sbb
xorl
shll
leave
dec
shlb
sbb
mov
and
or
rcrb
xchg
mov
pop
ja
jb
pop
shl
mov
inc
addr16
mov
and
xchg
pop
lods
in
add
lahf
cmp
and
pop
xlat
fadds
aad
fstps
adc
rclb
lock
roll
rorl
das
bound
xlat
jge
pop
cmp
ljmp
mov
mov
ret
hlt
fisubrs
loop
fistpll
xchg
cmpsl
int
arpl
int3
mov
fcoms
mov
mov
aad
scas
inc
mov
sub
sbb
jno
test
das
repz
mov
jne
clc
push
xor
lock
cld
decl
insb
bound
jle
or
rclb
sub
mov
mov
mov
and
hlt
pop
xchg
mov
ret
nop
fnsave
or
js
and
lahf
jge
cmp
les
shr
lahf
stos
add
inc
imul
dec
pminub
pop
lock
mov
fwait
out
mov
stos
out
pushf
jl
xchg
in
loope
sub
xor
enter
dec
hlt
sbb
rorl
outsl
dec
shl
push
jg
and
lods
iret
push
movsl
into
push
jns
jb
cwtl
sbb
test
jae
inc
jo
sbb
fwait
rorl
inc
imul
rcrb
sbb
mov
mov
popf
mov
repz
jp
nop
bnd
in
add
daa
arpl
cmpsl
gs
inc
mov
pop
jbe
jle
int3
inc
stc
jbe
xchg
ss
sub
out
cmc
fstpt
jge
lret
sub
pop
andnps
mov
test
shrb
mov
jno
or
push
xlat
test
cmp
jns
add
mov
outsl
sbb
push
out
mov
jo
daa
mov
pop
pop
pop
mov
push
sbb
push
sbb
cmp
cmp
arpl
push
sbb
les
pop
clc
aad
fnstcw
cmp
cmpsb
adc
cmpsl
adc
aam
add
stos
loope
and
mov
pop
push
test
call
testl
jno
and
orl
or
out
into
popa
push
nop
add
xor
enter
out
mov
and
sti
cmpsb
mov
ficompl
out
in
sti
mov
add
fidivs
push
add
xchg
xchg
sbb
adc
stos
frstor
xchg
xor
call
xchg
aam
sub
lods
std
mov
js
push
dec
xchg
out
pop
or
ficomps
cmova
add
sub
lods
bnd
push
adc
push
xchg
mov
movsb
pushf
cmpsb
xchg
pop
sub
push
lods
inc
rcll
nop
sti
adc
xchg
test
push
in
lret
pushf
cmp
cmpsb
pop
ret
lret
lahf
gs
out
xor
pusha
mov
cmp
jp
cmc
adc
leave
or
std
pop
dec
ja
movsl
sbb
jno
add
je
inc
stc
int
adc
push
add
pop
or
in
mov
mov
clc
cmc
fildl
rolb
pushf
mov
and
fcomps
xchg
jmp
xchg
sbb
mov
xor
add
in
cmp
add
pop
in
mov
dec
mov
push
bound
inc
aaa
addr16
dec
cmp
clc
and
xchg
sbb
out
rolw
cmc
mov
movsl
jae
cmpsb
cwtl
std
and
or
js
in
cmpsb
adc
aaa
negl
adc
repnz
inc
mov
daa
cwtl
cmp
jbe
cmp
mov
and
cmp
sbb
mov
test
std
inc
cmp
adcl
movsb
rcl
xor
push
enter
mov
lock
cltd
dec
xor
xchg
push
cmp
cmpsl
push
xchg
hlt
mov
mov
int
fbstp
ficomps
insl
jl
sbb
and
rorl
daa
sarl
ds
rcrl
iret
sti
and
adc
mov
dec
sub
jbe
inc
sbb
ss
jno
shrl
scas
add
out
arpl
andb
sbbb
dec
push
lar
adc
aad
xchg
je
dec
fucomp
loope
scas
clc
xor
cmpsb
pop
xor
adc
shrl
fwait
mov
inc
push
mov
mov
xor
mov
jne
daa
xchg
das
rcll
notl
sbb
dec
cwtl
sti
xorl
fimuls
into
movsb
loopne
cs
dec
inc
pop
sub
xorb
and
in
inc
cmp
mov
xchg
xor
mov
out
jns
sbbb
mov
pop
jae
inc
jmp
cmp
and
inc
cmp
arpl
fisttpll
and
int
cmp
outsl
pop
mov
cmc
mov
daa
pop
pop
and
sbb
dec
dec
sbb
xlat
ficoms
mov
test
fcom
mov
cli
jg
cs
leave
pusha
repz
push
inc
jns
inc
jb
lods
push
xchg
dec
cld
call
lret
push
ljmp
xchg
xchg
cld
mov
pusha
cli
lret
jge
and
push
flds
dec
sarl
mov
add
js
lods
in
rep
pop
insb
xchg
add
inc
sub
inc
shlb
or
stos
cmp
ja
outsl
repz
add
call
or
icebp
aad
inc
jae
xlat
outsb
lahf
xlat
jmp
or
add
in
psubsw
bt
jnp
mov
push
pop
lods
mov
into
rorl
adc
mov
sbb
mov
lret
test
sarl
jl
aas
pop
pushf
mov
and
loop
push
inc
mov
mov
enter
test
dec
stc
adc
cmc
lock
dec
mov
fnstsw
lret
push
inc
pop
sbbl
push
int
shlb
js
mov
mov
cmp
test
mov
sbb
xor
jmp
mov
or
mov
enter
inc
push
cmpsb
cmpsb
stos
movsb
pop
test
shll
jo
test
mov
pop
mov
cmp
sbb
pop
les
popf
sub
pop
xor
or
out
push
mov
dec
stc
fadds
sub
pop
jne
xor
insb
shll
pop
pop
ret
cmp
adc
enter
mov
rcrb
rclb
sahf
mov
cld
sbb
jbe
sbb
push
or
out
out
adc
lahf
jo
fisubs
sbb
add
jbe
push
xchg
push
mov
mov
fld1
add
mov
int3
divb
mov
jg
movsl
out
flds
dec
call
adc
xchg
mov
jmp
adc
mov
push
fsincos
addr16
rolb
xor
xchg
test
and
mov
and
lds
adc
lea
test
lods
adc
add
lods
popf
in
adc
pop
cwtl
add
mov
xor
push
mov
mov
sub
bound
std
andb
ds
in
nop
inc
or
mov
cmp
push
sub
imull
shr
sub
or
clc
scas
fcoml
cmp
inc
xchg
jnp
popa
test
add
scas
sbb
cs
pop
sub
xor
lret
mov
xchg
movsl
push
es
mov
add
xor
scas
pop
pop
add
mov
fidivs
mov
sarl
and
dec
jnp
jb
mov
mov
out
dec
cmp
mov
in
dec
in
or
out
out
and
add
shlb
fs
orb
daa
xor
push
in
clc
imul
sub
ret
push
xchg
sahf
pop
xchg
js
cld
adc
sbb
cltd
clc
pop
push
xchg
sahf
or
pop
mov
lods
sbb
inc
jmp
imul
in
in
mov
xor
xchg
inc
repnz
in
rclb
sbb
in
mov
leave
jle
push
std
movsb
fldlg2
xchg
cmpl
je
xchg
sub
dec
xchg
adc
and
ret
rcll
and
cmc
add
mov
mov
fadds
in
in
sarl
mov
fldenv
add
fbld
insb
jp
in
sbbl
sahf
sahf
and
testb
jae
cmp
addr16
push
cmp
lods
sbb
mov
sub
call
sub
enter
cli
adc
push
cwtl
ret
mov
lcall
ljmp
add
mov
cmp
test
fwait
sti
call
fldcw
fcoms
mov
lock
jg
aas
int3
aam
loope
loop
mov
pop
mov
test
ja
aam
mov
cmp
out
iret
repnz
add
test
insl
mov
cs
xchg
jnp
or
mov
mov
addr16
mov
mov
mov
imul
outsb
push
or
out
sbb
inc
sbb
testb
mull
incb
xor
pop
mov
jecxz
out
int3
xor
mov
jb
or
incl
cmp
aam
mov
insl
xchg
data16
mov
sub
stos
adc
xor
mov
mov
push
les
xor
cmp
aas
fsubl
pop
inc
xor
jl
inc
adc
cmp
dec
push
ss
jg
sub
pop
movsb
mov
jge
mov
aaa
scas
adc
mov
divl
bound
cwtl
push
in
add
xor
inc
cmp
sub
sti
cmp
rclb
jmp
icebp
lods
push
hlt
jle
icebp
mov
ficoml
push
jl
push
lcall
out
in
jne
or
pop
lahf
fidivs
add
lods
not
pusha
sbb
push
scas
mov
push
cmp
and
lods
jle
jnp
iret
adc
cmpsl
fdivrs
subb
xchg
ss
xor
stos
loop
pop
icebp
das
xchg
cmp
dec
sbb
jl
and
fimuls
jge
mulb
lret
sub
test
or
shll
mov
sub
rolb
inc
inc
clc
pop
cmpsb
adc
or
mov
push
push
xor
insl
lods
push
and
cmpsb
fists
test
mov
adc
les
ja
lock
xlat
lds
sahf
xchg
aas
mov
lcall
push
int
insb
lret
ficompl
xor
mov
pop
dec
sbb
pushf
out
mov
dec
mov
add
xorb
adc
ss
int
xchg
xchg
mov
pop
cwtl
xor
jne
adc
stc
sub
test
inc
loopne
flds
adc
out
rcl
icebp
xchg
stos
stos
push
inc
pop
push
insb
cld
std
loop
inc
adc
insl
push
cltd
rorb
jle
imul
mov
jg
rcrl
fbstp
cmp
add
test
sub
movsb
das
xlat
pop
movsb
faddp
xor
pop
and
xchg
scas
adc
push
adc
add
xchg
cmp
xchg
mov
add
ret
mov
push
cmc
mov
dec
aam
inc
adc
mov
clc
test
pop
xor
aas
adcl
jne
cli
and
push
js
ds
push
add
orl
inc
mov
jnp
cmpb
mov
cmp
add
lods
mov
mov
jns
popf
pop
mov
mov
adc
jb
jnp
jno
xlat
sbb
mov
divl
xchg
negb
xor
sbb
icebp
push
negb
into
jge
and
test
fwait
sbb
xchg
dec
xchg
jmp
adc
loop
push
jmp
xchg
lahf
pop
test
jb
add
inc
jns
jno
fcmovne
jmp
not
push
jmp
and
adc
xor
fcmovb
test
daa
sahf
dec
dec
mov
iret
adc
push
popa
cwtl
adc
mov
sarl
dec
adc
adc
and
fs
int
or
test
scas
enter
hlt
enter
xchg
jge
popa
sbb
loopne
mov
xor
lret
cmpsb
stc
jne
sti
xorl
lods
fdiv
jae,pt
dec
dec
enter
rcrb
adc
pop
push
fmull
repz
jmp
jne
js
xor
pop
pop
stos
xor
push
sub
lods
pop
mov
sbb
pop
sti
mov
movsl
or
jno
add
repz
ss
dec
or
add
add
outsl
cwtl
xlat
adc
pop
int
iret
stos
pop
and
fsubrl
or
std
push
adc
jno
dec
adc
stos
leave
jo
xchg
xchg
cmp
leave
add
int
cmp
inc
or
leave
and
lcall
push
push
fistpll
pushf
sub
testb
rorl
or
mov
xchg
pop
addl
pop
sbb
push
xchg
push
xchg
lock
push
and
pop
jo
inc
xchg
push
shll
sbb
stos
sbb
pushf
mov
ror
lahf
ljmp
jp
mov
sub
fs
cmc
push
icebp
repnz
rcrl
shlb
fiaddl
pop
into
push
icebp
cld
std
lret
popf
add
inc
inc
ret
call
pcmpgtd
mov
mov
addb
xor
dec
incb
add
jle
cli
lea
insl
shll
lock
sbb
mov
pushf
enter
lahf
inc
xor
jbe
xchg
fld
push
xchg
mov
sub
mov
push
push
cmpsl
inc
shl
xor
sub
ret
arpl
xlat
push
bound
rolb
out
jb
xchg
inc
mov
in
arpl
push
pop
fldcw
and
lcall
andl
sbbb
imul
adc
imul
sub
das
mov
es
aad
adc
pusha
pop
push
in
daa
stos
ds
lods
stos
lods
mov
jg
lret
sbb
shlb
xchg
aas
push
xlat
icebp
adc
xchg
cs
inc
pusha
xor
adc
dec
aam
and
cwtl
push
movsl
mov
lret
mov
aas
lret
add
out
mov
mov
xchg
add
mov
mov
pop
rorb
clc
jl
fdivrl
icebp
cli
popf
mov
adcl
jns
push
jl
sub
into
add
imul
pop
das
add
inc
mov
in
adc
ljmp
jb
call
adc
std
adc
pop
inc
pushf
cmp
pop
int3
or
int
and
lcall
jae
fdivs
xchg
ljmp
mov
or
adc
xor
mov
dec
or
xor
in
ja
in
lods
hlt
push
cmp
imul
pop
out
xchg
addl
js
mov
cwtl
fnsetpm(287
pop
adc
daa
inc
fdiv
movsl
push
jo
push
out
cld
sub
inc
pop
sub
and
cwtl
push
add
mov
xchg
pop
mov
stc
add
pop
and
sbb
in
jl
hlt
jmp
scas
jmp
sbb
add
rcrl
xor
cmpsb
dec
pop
out
aam
sarb
pop
jle
sbb
movsl
stos
sbb
pop
dec
pop
add
sarb
ret
jne
sub
xor
push
add
insb
inc
out
sub
fwait
ret
mov
je
in
jne
lret
enter
sbb
std
inc
dec
gs
mov
inc
xor
gs
movsl
push
lock
sbb
pop
clc
fsubs
add
dec
loop
in
lea
cmp
jno
or
lcall
jbe
rcr
int3
dec
adc
inc
out
movsb
cmpsl
mov
dec
and
jae
repz
loopne
insb
inc
push
pushf
mov
jl
cld
and
outsl
sbb
xor
outsb
xor
pop
sbb
stc
xor
jle
adc
push
xchg
scas
inc
sarl
testb
lock
mov
pop
adc
cmp
push
movsb
fmulp
xlat
test
mov
adc
or
cld
icebp
xchg
mov
psubq
adc
inc
mov
mov
mov
adc
clc
xor
ds
cmp
bnd
mov
insl
js
out
loope
jno
pop
int
je
push
enter
pop
in
or
movlps
push
pushf
sub
dec
mov
popf
sbb
repz
pop
mov
dec
and
xchg
ds
call
lock
inc
jl
jae
jae
imul
dec
aam
mov
jmp
or
inc
call
jmp
pop
jl
cld
adc
pushf
movsb
jno
xchg
cmp
iret
dec
test
mov
push
or
pop
mov
mov
push
mov
adc
call
sub
mov
or
rcrb
sub
fidivs
loopne
stos
aaa
aas
icebp
or
sbb
sahf
push
fists
cmc
mov
and
cs
pop
add
icebp
adc
inc
repz
gs
xor
adc
adc
fisttpl
or
cmp
xor
nop
xchg
gs
and
mov
mov
xchg
and
lock
push
test
pop
mov
test
mov
incb
adc
push
sbb
stc
movsb
es
lods
aaa
inc
jne
sub
out
xlat
insl
je
fildl
addr16
outsl
dec
cli
dec
lods
clc
mov
mov
sub
stos
xchg
sbb
and
addr16
xchg
jne
outsb
add
in
jae
sbb
mov
mov
outsb
outsb
out
push
xorl
inc
les
xchg
cmp
test
sbb
fnstcw
movntq
out
jno
mov
pop
jl
sub
pop
bound
add
mov
xor
jne
test
lret
imul
loop
inc
arpl
shl
jg
sbb
insl
outsb
push
test
push
dec
imul
sbb
in
jnp
push
pop
in
outsl
push
or
imul
add
and
shrl
jae
push
es
xchg
pop
jae
arpl
je
mov
sti
xchg
adc
push
ret
inc
dec
lock
scas
push
test
mov
ror
or
cmp
loop
sub
add
sub
incb
add
xchg
and
pusha
enter
leave
std
imulb
jo
xor
cwtl
aad
xchg
ds
roll
adc
mov
cs
mov
outsl
jb
or
xor
and
scas
xor
cmp
setnp
inc
inc
js
outsb
mov
or
inc
push
pop
mov
out
fimull
aas
sub
lcall
jno
ret
push
or
aas
mov
xchg
aam
add
lret
jmp
mov
xchg
or
xor
test
dec
sti
inc
enter
or
mov
clc
scas
daa
lds
xchg
sti
cwtl
inc
icebp
and
pop
mov
enter
adc
sahf
or
fisttps
addb
sbb
add
sub
push
or
movsb
inc
into
jmp
push
lret
adc
rorl
movsb
mul
int
jb
rcrb
sub
lock
vpcomuq
dec
lods
adc
add
mov
pop
in
xchg
orl
or
cmp
push
xor
std
dec
cmp
dec
arpl
push
dec
adc
sarb
lods
ficoml
cmp
lahf
and
push
test
bound
cld
pop
dec
pop
cmp
inc
notb
cmp
xor
dec
shrl
lret
pop
push
ja
rorb
insl
cmp
jmp
rcll
cmpsl
adc
lahf
arpl
fcomps
ja
outsb
jae
push
sahf
mov
int
pop
bound
xchg
jae
loop
in
les
mov
das
pushf
and
fs
inc
daa
xchg
fstpl
fadds
sti
dec
gs
pop
pop
fisubs
cmp
mov
cmp
dec
jae
mov
aam
daa
dec
lods
fsubrl
aad
push
lock
and
dec
sub
mov
jbe
ljmp
push
dec
sbb
int3
stos
pop
mov
dec
jg
xchg
in
mov
cli
dec
push
sbb
jge
dec
and
pop
add
mov
stos
xor
call
sbb
outsl
repz
jb
inc
mov
sarb
nop
add
sub
xchg
push
repz
dec
inc
mov
cmc
daa
jb
fisttps
mov
nop
dec
shrl
and
outsl
dec
lods
jmp
outsb
loop
fsts
push
dec
jb
add
and
orb
adc
inc
push
fninit
mov
jle
adc
mov
std
hlt
iret
adc
ret
out
mov
mov
test
imul
xor
xor
loope
movl
sub
inc
pop
inc
mov
outsl
xor
fstpt
xor
cwtl
imul
cmp
lods
mov
sbb
test
je
push
sub
mov
shrl
arpl
outsl
or
xlat
sub
shll
xchg
aad
stos
insl
pop
inc
jbe
jnp
roll
clc
fwait
cld
pop
into
outsl
std
sbb
fimuls
pop
pop
push
inc
push
and
in
fucom
push
shll
mov
in
pop
fimull
inc
xor
psubusb
imul
pushf
pushf
jmp
fsubrs
insb
sub
aad
lcall
sbb
std
stos
outsl
or
addl
push
sbb
push
rcrb
aam
lea
adc
push
stc
push
adc
add
adc
lahf
mov
pop
out
pushf
pop
xchg
rorb
loope
mov
dec
mov
insl
cli
cmp
jae
push
stos
in
xchg
inc
jmp
xchg
leave
mov
mov
mov
call
and
xchg
in
inc
cmpsl
sbb
jle
push
vpsllw
je
je
push
inc
repz
repz
aas
outsb
cmp
fwait
push
mov
cmc
fwait
test
cmp
xchg
hlt
jb
movsl
scas
fmull
cwtl
fsubr
jge
rolb
sub
and
std
pop
fwait
cmp
es
push
cmp
jo
lret
sbb
lock
add
sbb
mov
bound
or
pop
mov
jno
aas
push
aam
js
xor
movsb
scas
fs
cmp
pop
aam
mov
lret
aad
adc
dec
nop
sbb
push
inc
and
xor
xor
push
pop
repz
aaa
repz
arpl
pop
mov
mov
stos
in
and
cmp
loopne
xor
imul
repz
xchg
adc
jge
jno
cmp
rep
out
jmp
xchg
loopne
add
cld
lahf
rdmsr
pop
mov
mov
inc
addr16
ja
mov
push
sbb
cmpsb
rol
and
rclb
xchg
and
hlt
pop
cmpsb
sbb
xorl
mov
pop
cmp
dec
andl
sub
lock
popf
pop
xchg
or
xchg
lahf
fsubrl
stc
mov
sahf
fcom
arpl
adc
js
mov
mov
cmp
xchg
push
jmp
fimuls
in
je
jns
mov
push
xchg
or
sbb
pop
popa
out
lods
xchg
xor
inc
pop
jae
std
mov
add
call
cmpl
xor
pop
mov
jns
sub
xchg
leave
frstor
mov
jb
xchg
pusha
arpl
pop
insb
mov
outsb
ja
mov
movb
int
sbb
push
xchg
mov
outsb
jge
cmpsb
in
pop
pop
imul
xor
daa
pop
fldl
pusha
xor
jne
jae
cmc
movsl
or
movsb
gs
lcall
dec
scas
popa
cmpsb
loope
and
lret
movsl
out
cmpsb
int
scas
pop
arpl
shr
inc
sbb
std
mov
jbe
sahf
scas
jle
fstpl
jno
pop
push
or
shr
xchg
jnp
outsl
sub
mov
out
call
ror
cmpsb
pop
lds
pop
mov
lods
inc
ljmp
test
sub
outsl
pusha
pop
ds
bound
xchg
fwait
sbb
insl
das
cmpsl
or
jns
dec
idivl
or
mov
jnp
and
pop
popa
push
pusha
loopne
or
xchg
and
or
or
and
lret
mov
aad
push
push
jbe
or
adc
push
push
imul
push
adc
cmp
pop
fs
out
ss
ljmp
mov
jnp
xorl
sub
sub
scas
cli
movsl
xchg
cmc
pushf
xchg
scas
stos
dec
mov
fmuls
orb
dec
adc
leave
ja
insl
stos
int3
daa
jmp
adc
sbb
mov
and
lcall
sbb
mov
js
clc
mov
push
js
pop
not
adc
cmp
loopne
fidivrl
js
stc
rorl
xor
outsb
push
out
xor
pop
adcl
add
add
add
add
add
ret
add
add
add
sbb
cmp
mov
nop
nop
nop
nop
outsl
pop
nop
nop
in
mov
adc
es
cmpsl
dec
add
in
add
xlat
das
mov
aaa
xor
out
push
add
inc
jmp
lds
int3
cmp
jb
and
xchg
popa
stos
jp
ja
mov
dec
cmpsb
notb
and
repnz
cmp
int
clc
sub
adc
push
mov
roll
add
stc
push
dec
mov
sarl
dec
data16
ret
cli
test
cmp
pusha
addr16
inc
pusha
add
lret
xchg
xlat
bound
push
add
push
add
mov
jmp
adc
sub
mov
test
mov
sti
stos
sbb
jne
fadd
inc
xchg
mov
loopne
xlat
add
sbbb
fs
lret
aaa
cmc
fsubr
mov
cwtl
mov
cmpsb
push
pop
movsb
pop
lods
divb
sahf
iret
mov
and
lock
cli
pop
jge
jb
adc
pop
ss
mov
mov
es
pop
fwait
or
inc
inc
movsb
xchg
xchg
add
jmp
mov
xchg
mov
sarl
jg
sub
sub
scas
fidivl
push
xchg
push
stos
jl
xor
push
orl
mov
add
adc
enter
pop
cli
out
add
xchg
lds
cmp
test
lds
adc
ljmp
jl
pop
daa
scas
iret
mov
aam
mov
mov
sbb
shlb
fiaddl
and
pop
cmpl
xchg
push
loope
mov
scas
and
xlat
or
and
mov
addb
mov
int
mov
xor
lock
xchg
push
xchg
test
cld
scas
stos
pop
pop
xchg
sbbb
rcll
test
adcl
mov
loopne
xor
data16
hlt
lods
sarb
orl
iret
mov
dec
push
pop
xchg
xor
xchg
in
inc
push
add
andb
je
inc
inc
pushl
out
mov
scas
push
test
dec
pop
add
xchg
pushf
jno
rcll
shr
xor
mov
jae
sbb
sub
leave
sub
xchg
mov
xor
out
std
and
mov
andb
or
jnp
xchg
mov
xchg
dec
aam
mov
mov
push
and
ret
test
rcrb
mov
sbb
or
and
jp
ret
in
xchg
popf
insl
fwait
cmp
add
xor
scas
insb
jo
mov
xchg
in
movsl
ficoml
subl
or
mov
sbb
mul
ret
icebp
loop
xor
outsb
lea
pop
and
pushf
fimull
pop
jmp
push
cmp
fwait
pop
mull
xor
pusha
lret
outsb
addr16
xchg
lahf
push
xchg
fadds
jmp
inc
adc
pop
xor
pop
test
or
pop
adc
movsl
jl
jge
push
inc
fimuls
test
clc
sbb
add
stc
lret
xchg
sbb
push
les
mov
stos
push
pop
gs
and
stos
icebp
xchg
enter
inc
dec
fsubl
sub
out
add
ja
dec
lea
mov
sub
mov
pop
lock
add
je
cltd
add
nop
sbb
and
lahf
orb
jl
and
mov
pop
mov
movsl
jne
push
inc
and
nop
mov
jl
fldt
sbb
rclb
fsubr
bound
add
jle
jge
sub
insl
les
sbb
sub
std
shlb
mov
out
das
mov
push
bound
sub
das
sbb
jge
pop
push
enter
clc
fcom
movsb
xor
aaa
imul
cmp
sub
pop
roll
xchg
dec
cmp
ror
stc
out
adc
push
mov
movsb
insl
mull
inc
jo
pop
je
loope
rcr
mov
cltd
mov
xorb
xchg
insl
out
adc
xchg
into
and
inc
dec
movsb
fcompl
dec
push
xchg
push
push
fs
mov
cmc
in
iret
fs
adc
dec
insb
and
and
push
lcall
ds
lcall
pushf
mov
sub
fildl
or
xor
ror
add
mov
mov
or
inc
cmp
jo
stc
out
ja
or
jno
rcrl
insl
push
das
imul
je
xchg
adc
addl
cmp
mov
and
xchg
loope
jns
shrb
push
mov
out
ja
loope
mov
aaa
loop
mov
call
repz
mov
pop
cmc
in
dec
pop
inc
icebp
lret
xchg
jae
imul
inc
mov
adc
scas
jbe
pop
sub
clc
xor
sbb
or
mov
xchg
mov
push
negb
out
add
sub
nop
mov
jp
cmp
mov
lea
js
scas
out
cli
add
mov
pushf
xchg
in
sbbb
jbe
mov
mov
out
scas
lds
xor
je
sub
xor
adc
push
cli
adc
lahf
aas
xor
cmp
lcall
ja
sub
jo
stos
lcall
call
rol
jecxz
jns
aas
sub
out
hlt
divl
lock
mov
xor
lods
xor
jae
jmp
inc
sbbb
fnstenv
mov
fdivp
mov
test
int
fimull
push
xor
mov
iret
inc
imul
insl
cmp
cli
outsb
lds
js
cmpb
loop
iret
clc
pop
inc
mov
inc
adc
push
aas
outsl
or
add
outsb
hlt
dec
jmp
jnp
pushf
or
mov
popf
scas
arpl
outsb
jb
add
pop
cs
aam
orl
test
cmp
cltd
inc
mov
dec
add
pop
xchg
lcall
jg
sub
std
hlt
and
xchg
mov
aas
pop
je
mov
jae
xor
loopne
aad
cli
sbb
adc
adc
and
jnp
cmp
movsl
push
call
xchg
sbb
jge
in
push
ljmp
jecxz
sub
fisttps
jecxz
sbb
xor
add
mov
pushf
push
jp
aas
imul
incl
mov
mov
cmpsl
adc
sub
aaa
jmp
divb
in
xchg
cmc
faddl
cmp
and
jg
xorl
shlb
pushf
stos
inc
inc
push
ds
imul
push
mov
push
mov
cmp
in
ret
out
xchg
pop
jae
xor
lock
jge
fstps
jle
add
movsb
sbb
jo
xor
test
add
push
sti
loope
mov
loope
push
adc
fisubrl
dec
mov
sub
imul
lock
repnz
inc
xor
insb
sbb
sbb
popa
pop
test
out
dec
mov
push
aam
xor
jg
pop
das
adc
cmp
js
or
jne
ja
sbb
in
adc
popa
jl
fsubl
and
imul
dec
sbb
hlt
push
in
sbb
mov
repnz
rcrl
mov
mov
mov
rcr
lcall
push
jecxz
jge
cmc
xchg
orb
cmpsb
test
sahf
xor
adc
movsl
xor
data16
inc
sub
mov
fildll
add
pop
imul
inc
in
xor
push
test
sbb
fadd
push
das
hlt
out
into
ljmp
pop
push
pop
cmp
jns
rcrl
add
pusha
loope
pushf
fdiv
sub
mov
int
jne
adc
cwtl
loope
lds
ss
xor
bnd
test
fcoms
pushl
ret
xchg
xchg
jbe
cld
xchg
sbb
adc
push
je
push
daa
pop
xchg
push
adc
aas
inc
mov
adc
cmp
mov
out
test
adc
mov
jbe
enter
jo
fisttps
push
inc
mov
pushf
cmp
mov
dec
test
mov
push
outsb
dec
cmp
push
jecxz
test
shr
adc
lcall
mov
je
pop
je
inc
mov
loopne
push
sar
fcoms
adc
push
or
int
pop
ja
js
lods
shlb
hlt
xchg
repz
rcr
sbbb
out
out
cwtl
xor
popf
fisttps
dec
push
ljmp
or
add
scas
shl
hlt
jne
jp
mov
je
inc
shlb
int
mov
stc
pop
sub
popa
cmpl
pop
sbb
jl
clc
push
sbb
fidivl
mov
dec
rolb
cmp
cmp
lahf
mov
ret
adc
in
lahf
orl
mov
jle
inc
xor
cld
adc
pop
cmp
es
in
and
int
or
mov
ljmp
out
pop
xchg
push
mov
dec
dec
in
push
sbb
pop
les
jmp
inc
movsb
sbb
pop
cmc
or
pusha
xchg
add
xchg
dec
xchg
cmp
push
pop
push
pop
fcomip
jne
dec
cmpsl
cmpsl
shr
fdivl
std
cmpsb
cwtl
xor
push
cli
add
jge
out
enter
shll
sub
rcr
ficomps
clc
in
cs
jmp
cmp
scas
dec
into
pop
insb
nop
jbe
jle
inc
iret
mov
test
mov
xchg
pusha
sbb
fwait
jl
and
cmp
jg
stos
shll
dec
push
cmp
cli
sub
dec
cmpsb
outsb
inc
in
data16
lahf
jp
hlt
mov
je
lds
sub
in
push
loope
xor
cmpsb
adc
mov
popf
xchg
jge
or
push
in
jmp
pop
dec
mov
jge
cmp
dec
test
push
sbb
les
push
dec
aaa
sahf
or
adc
sub
lods
loop
dec
push
js
sbb
lahf
xor
aam
out
xor
js
mov
sub
insl
xchg
out
sbb
scas
shrb
mov
add
xor
pop
or
rolb
sbb
inc
push
cwtl
imulb
std
xchg
adc
push
leave
dec
fnstcw
jne
mov
stc
idivb
inc
add
loop
rclb
leave
mov
scas
sub
mov
ret
sub
xchg
mov
lret
xor
aaa
fsubrl
lods
std
mov
pop
dec
les
not
jp
movsb
mov
inc
int3
leave
adc
ret
mov
xor
sbb
mov
scas
sbb
mov
dec
or
sub
mov
sbb
hlt
scas
ds
mov
jnp
popf
jge
xchg
mov
push
aaa
dec
imul
subb
and
lds
pop
and
mov
push
repnz
and
shr
lret
js
aas
mov
push
jp
xchg
stos
pop
lods
mov
mov
sti
adc
pop
jne
adc
ret
nop
aam
outsl
bts
and
popf
adc
outsl
mov
bound
mov
or
sbb
lret
mov
or
or
dec
cmp
push
sub
sbb
shll
sbb
add
pop
lds
jbe
dec
push
cmpsb
jp
inc
testb
test
scas
push
ja
xchg
aam
pusha
xchg
lock
xor
sbb
push
cmp
push
out
sti
xor
les
lock
fcomps
and
shrl
pop
sbb
fbld
ja
mov
scas
sarb
cmp
pop
into
iret
bnd
mov
mov
pop
sbb
pop
inc
fimuls
mov
push
push
ret
fcoml
cmc
cmp
push
outsl
andb
xlat
sbbl
mov
mov
jecxz
lea
push
xor
pop
add
loope
sbb
dec
stc
adc
fucomip
xlat
jbe
shrl
in
jg
jns
jo
cltd
mov
mov
aam
mov
lea
lahf
pusha
incl
adc
outsb
jle
pop
popf
scas
scas
sbb
pop
xor
push
mov
mov
and
mov
outsl
add
nop
iret
mov
repnz
lret
das
in
daa
adc
jo
and
jmp
add
xchg
out
out
out
push
mov
xor
mov
imul
mov
ret
and
push
dec
or
mov
inc
inc
push
sbb
cmpsb
dec
sbb
fmull
add
jp
popa
mov
dec
xchg
jnp
push
inc
jb
les
jbe
test
ds
cmp
sub
fnstenv
fists
mov
je
arpl
mov
sbbl
dec
arpl
xchg
je
int
das
gs
jno
dec
nop
cmp
pop
icebp
icebp
testb
mov
add
ret
or
addr16
xchg
sub
das
cwtl
inc
repnz
popf
mov
cmp
repz
push
pop
adc
dec
mov
loop
sub
adc
push
test
in
push
push
das
clc
test
push
int
adc
mov
cmpsb
dec
sbb
push
sahf
int
int
sbb
push
mov
push
jbe
xchg
aas
imul
jns
stos
push
neg
insl
inc
pop
xchg
lds
cwtl
push
ja
inc
lret
sub
shrb
mov
mov
or
and
ljmp
mov
sahf
jne
in
cwtl
and
call
jbe
push
inc
les
std
and
movsb
push
xlat
cmp
and
out
movsb
push
cmpsb
mov
dec
hlt
sbb
fmull
mov
cmp
mov
xchg
jns
fld1
aad
sub
dec
mov
pop
push
jnp
inc
xor
test
inc
jecxz,pn
or
aam
push
dec
xchg
add
sbb
xlat
jno
push
pop
inc
and
orb
mov
add
aas
iret
daa
je
mov
sub
adc
sub
and
addr16
shll
and
or
jne
mov
aam
cmp
nop
cmp
xchg
cmp
add
aas
test
lods
push
mov
mov
inc
idivb
rcll
mov
in
or
mov
jecxz
inc
pop
dec
mov
out
sbbl
push
in
jae
mov
sbb
adcl
es
cmc
push
xor
jbe
je
fs
push
pop
pop
loop
sub
xchg
sub
pop
lahf
faddl
mov
test
jg
jmp
xchg
and
aas
fs
sbb
mov
cmc
jg
into
sbb
sub
cwtl
sbb
call
push
fcoms
jmp
jno
sbb
cli
mov
lods
clc
mov
xchg
dec
dec
gs
dec
fcmovnb
pop
stos
sbb
pop
jb
and
loopne
and
pop
cltd
int
les
in
stc
je
dec
xchg
inc
addr16
push
sbb
bnd
cltd
stos
cmp
cltd
ljmp
sub
mov
xchg
out
ds
xchg
jbe
imull
dec
add
mov
add
mov
sub
pop
pop
add
or
xchg
fmulp
xor
xor
int
xchg
xor
jbe
fwait
movsl
pop
lods
loop
or
and
leave
insb
add
mov
dec
dec
cmp
jne
aam
mov
test
cmp
inc
and
push
lcall
das
xchg
shll
jl
add
je
pop
out
adc
sub
sub
cmp
mov
push
cmp
imul
lods
psrlq
jae
xchg
ret
popa
pop
mov
fs
in
divb
cmp
lret
in
cmp
dec
inc
pop
push
sbbl
mov
ss
movsl
js
insb
xchg
push
cmpsb
mov
xor
add
ja
sbb
push
mov
in
xchg
xchg
cmp
xchg
adcl
ja
nop
xchg
or
lods
gs
push
dec
fstps
lcall
or
or
sub
in
das
dec
test
lock
shrl
pop
adc
dec
imulb
adc
stos
push
into
lcall
cmp
daa
shrb
scas
or
ficomps
inc
add
cmpsb
adc
push
jnp
mov
mov
xor
or
cmc
sbb
sbb
test
cli
push
mov
xor
push
leave
sbbb
mov
test
idivb
int3
dec
sbb
test
out
lock
mov
imul
xor
jne
loop
lret
push
push
les
scas
pop
jb
xchg
orl
dec
inc
pop
or
out
and
repnz
cmp
add
jnp
pop
xchg
sbb
and
sbb
cmp
mov
push
or
rorl
push
jne
adc
adc
mov
shl
in
call
xor
fnstcw
xchg
outsl
cmp
lea
inc
pop
push
stc
dec
inc
test
mov
sbb
or
add
adc
lds
xchg
pop
mov
or
dec
mov
push
ficoms
cmp
ss
push
xchg
dec
adc
mov
vcvtpd2psy
xorb
xlat
aaa
ds
mov
lods
inc
stc
push
jbe
dec
cmp
mov
add
insl
cltd
insb
mov
test
inc
loop
sub
pop
aas
insb
xchg
call
sub
xlat
sar
cltd
mov
mov
pop
mov
mov
xor
xchg
pop
cld
in
mov
mov
gs
sar
xchg
mov
xorb
push
leave
pusha
or
inc
outsl
bound
ror
jle
or
outsl
fnsetpm(287
xor
push
jle
shll
xchg
dec
imul
pop
dec
shll
jl
xchg
lahf
les
or
lea
aas
pop
sbb
xor
repnz
and
xor
mov
add
xchg
lea
push
outsl
cs
movsb
adc
push
mov
dec
fidivl
cmp
fcoml
xor
mov
inc
popa
pop
in
mov
movsb
and
mov
fcomps
ret
cmpsl
inc
mov
divb
and
mov
test
sbb
fmuls
cmp
inc
mov
test
hlt
roll
cmpsl
insl
add
enter
push
enter
push
iret
dec
sbb
xlat
jp
add
rcrl
push
xlat
add
xchg
testl
push
add
push
ja
loopne
dec
movsl
dec
ss
dec
inc
fisubs
std
pop
and
lock
pop
addb
lahf
sbbl
xchg
pusha
xor
insb
mov
pusha
mov
in
jo
mov
daa
xor
push
out
pop
sub
or
jge
std
inc
inc
pop
fisttpll
mov
inc
test
cmovae
mov
stc
fists
or
rcl
lahf
fsubr
sbbb
push
sbb
movsb
sti
push
fmuls
push
jle
mov
popa
xchg
xchg
or
and
xchg
cmp
xor
ss
insl
rclb
and
xchg
add
mov
int3
mov
xlat
imul
xor
xchg
pop
outsb
lcall
jae
ret
mov
cmp
inc
xchg
cs
fwait
push
lods
mov
push
sbb
xchg
mov
fs
imul
jl
sub
pop
cmp
mov
mov
pop
pop
jae
leavew
mov
xor
dec
test
mov
xchg
pushf
push
mov
pop
push
xchg
clc
mov
int3
jo
sub
xor
and
stos
mov
out
and
xchg
mov
addr16
inc
lret
mov
sbb
fsubr
dec
jle
and
inc
out
xlat
add
xor
clc
sti
xchg
js
repnz
pop
call
stc
sbb
jns
dec
arpl
call
mov
cmc
adc
fld
mov
mov
jmp
xchg
xlat
pop
js
mov
inc
shlb
test
and
jl
push
mov
loopne
push
out
sub
out
dec
lret
jns
sbb
push
aad
out
inc
mov
mov
mov
push
daa
or
ret
add
shrl
mul
mov
cmp
fsubrp
lods
lret
and
cmp
or
lahf
push
mov
iret
in
aad
cmpsb
inc
enter
push
hlt
popf
repnz
and
mov
rorl
aas
add
mov
loopne
and
adc
add
xchg
ret
test
insl
negb
push
jb
scas
cli
shll
ds
jns
cmp
andl
mov
jp
lods
call
pop
addb
mov
xor
jmp
jp
in
outsb
test
xor
xchg
fimull
cli
mov
test
pop
mov
push
sub
inc
mov
fsts
lock
mov
push
pop
out
or
pop
inc
mov
or
inc
mov
jno
outsb
mov
inc
jle
std
dec
push
and
jo
ret
popa
sbb
adc
lods
push
push
add
push
mov
hlt
pop
xchg
dec
data16
pop
pop
ficomps
push
test
xchg
loop
sti
adc
ficoms
insb
pop
rolb
imul
mov
or
fcomps
test
outsb
enter
mov
les
add
xlat
call
out
cmpsl
das
sub
ret
in
dec
rcrl
add
into
cs
sti
mov
adc
movsl
pop
mov
dec
test
jmpw
mov
mov
ret
js
cmp
jbe
jl
fiaddl
inc
sub
repz
jne
into
jne
js
jle
mov
cmp
mov
inc
mov
push
test
adc
xor
dec
fisubl
dec
insb
xchg
adc
and
mov
inc
movsb
sub
pop
shlb
cmp
mov
mov
mov
fs
mov
cmpsl
and
fstpt
stc
nop
pop
hlt
xchg
roll
fld
les
mov
data16
xor
xchg
das
out
sbb
ja
xor
fnstcw
push
add
pop
xchg
ja
add
and
mov
sbb
enter
int3
icebp
push
mov
clc
pop
jb
jg
stos
jo
xor
push
and
das
cmp
rol
sub
cli
xor
movsb
sub
xor
dec
xchg
mov
mov
and
fldenv
in
movsl
lock
sub
or
decl
cmpsl
jg
fs
mov
jge
dec
sub
push
out
test
mov
adc
jmp
push
mov
xor
mov
rol
mov
mov
mov
movsb
in
mov
xorb
push
out
data16
loopne
or
sbb
cltd
jnp
fnstcw
clc
xorb
pop
mov
ja
jbe
add
or
push
loopne
rcrb
gs
pop
xor
and
mov
cli
popa
adc
daa
adc
icebp
push
ds
into
push
jno
inc
sar
push
rorl
push
push
test
stos
cltd
imul
mov
and
adc
mov
sahf
imul
cmp
mov
dec
xlat
sti
sti
movsl
push
callw
jg
test
in
movsl
imul
arpl
ds
pop
adc
out
cmp
mov
push
mov
dec
repz
sbb
into
arpl
xor
cmpsb
mov
dec
jbe
xor
push
xor
dec
dec
mov
insl
nop
or
int
call
mov
mov
or
cmpsl
cmp
jb
mov
ja
cmp
leave
out
stos
cs
mov
cmp
or
loop
mov
cmp
iret
lcall
xchg
divb
int3
mov
push
fs
sbb
xchg
adc
cmc
push
stos
adc
adc
hlt
outsb
pop
test
push
pop
cmp
dec
shrl
xchg
xchg
shll
cmc
aad
inc
xchg
repnz
pop
ss
sub
xchg
int
cmp
call
inc
hlt
nop
push
push
shrb
mov
rep
test
aam
xchg
mov
addr16
push
fcmovne
loop
add
mov
pusha
insl
xchg
rorl
loop
cmc
fcoms
jbe
sbb
int
mov
cmp
sub
jae
pop
jl
xchg
lea
xor
push
call
ds
jno
jae
inc
pusha
pop
inc
mov
jle
push
dec
icebp
dec
mov
sti
cs
scas
dec
cmc
or
mov
push
js
gs
push
ja
bound
adcb
ficoms
bnd
fistps
or
sbb
and
xor
cwtl
dec
std
test
adc
dec
aas
mov
and
sub
cltd
inc
jbe
or
lods
fsubp
cmp
cmp
sbb
dec
movsb
jbe
mov
jno
mov
xchg
sbb
icebp
and
sbb
nop
mov
sar
test
xor
pop
add
push
fsubrl
cmp
aad
jle
pop
cmc
imul
mov
aad
mov
lahf
mov
inc
and
jns
hlt
add
sahf
in
and
cld
aad
loope
mov
jle
data16
xchg
insl
scas
sub
inc
jecxz
jnp
cwtl
dec
fidivl
push
jl
std
fisttpll
push
clc
cmpsl
imul
mov
push
cmpb
mov
and
fdivp
sub
push
pop
dec
das
push
and
fs
pusha
clc
dec
repz
push
adc
outsb
outsb
in
cmc
aam
sbb
leave
push
js
xor
scas
xchg
push
cmc
mov
imul
xor
bound
hlt
or
jo
repz
mov
mov
inc
cwtl
cs
pusha
sbb
jmp
or
push
push
jg
test
rolb
hlt
lods
das
mov
ds
icebp
adc
xor
in
pop
stos
jns
mov
mov
or
sbb
push
push
xchg
movsl
ja
loopne
jae
loopne
and
mov
es
adcb
xor
xchg
out
popa
cs
mov
enter
mov
ret
sub
inc
pop
dec
movsb
cmp
dec
mov
mov
ljmp
mov
mov
je
jne
pop
shl
mov
inc
pop
mov
add
mov
dec
and
scas
addr16
add
jecxz
fstpl
cmc
dec
pop
int3
icebp
out
push
cmp
push
or
xor
jg
int3
int3
jge
push
nop
mov
sbbl
mov
mov
add
xor
push
daa
push
cli
mov
sub
or
push
xchg
movsl
aad
dec
inc
and
hlt
pop
push
pmaddwd
pop
cli
movsb
lds
sbb
push
push
clc
inc
jge
ljmp
inc
sub
in
sti
insb
add
xor
outsb
add
cld
aas
hlt
ret
sub
cld
nop
inc
pushf
sub
jle
nop
pop
rol
jno
fsubrs
xor
push
pop
repnz
test
cld
mov
mov
shr
insb
mov
cmp
pop
cmp
in
out
mov
loope
jns
adc
sub
ret
lock
mov
cli
stc
mov
movsb
pop
rcrb
xor
xchg
sbb
xchg
push
push
hlt
adc
rcll
pop
call
addb
xchg
adc
cmp
pop
dec
loop
in
mov
xchg
mov
jno
aam
lahf
icebp
xchg
fimuls
mov
mov
xchg
outsl
int3
add
mov
and
sahf
and
daa
aad
xor
loop
test
cld
mov
out
js
or
fs
lcall
add
arpl
add
mov
xor
mov
dec
xchg
add
or
fildl
pop
mov
inc
ret
insb
xlat
out
cmp
mov
test
fsubrl
cmc
inc
pop
out
sbb
push
or
mov
jp,pt
mov
movsl
fdivrs
in
dec
adc
mov
jmp
ret
outsb
xchg
iret
out
xor
and
addr16
scas
ror
les
cmp
pop
sub
stos
mov
add
add
mov
cmc
mov
lock
lods
sub
aaa
and
mov
shl
orl
stos
int
pop
jle
rorb
jae
into
loope
mov
mov
sub
fidivrl
das
and
test
ss
repnz
icebp
fs
ss
scas
push
data16
push
cld
xchg
mov
aaa
lods
pop
jnp
sbb
mov
arpl
js
adc
sub
stos
push
inc
dec
adc
or
dec
lret
subl
int
push
add
jbe
mov
aad
in
mov
gs
clc
push
das
inc
dec
mov
mov
leave
cmp
jle
jmp
fucomip
leave
fidivs
cmpsl
cmpsl
jmp
adc
and
ss
inc
loopne
mov
or
mov
inc
inc
pop
outsb
adc
xchg
cld
xchg
push
push
push
pop
lret
mov
pop
testb
or
push
imul
inc
scas
mov
ds
mov
in
jle
ds
fmull
call
cmp
mov
adc
and
inc
test
int3
testl
test
mov
movsb
lret
xchg
js
pusha
jmp
sbb
push
sub
aas
dec
in
stos
adc
or
je
add
adc
adc
mov
inc
add
xor
ds
push
pop
sbb
jnp
in
add
std
stos
aas
int3
sub
adc
pop
stos
push
les
cmp
or
lds
mov
loopne
lock
scas
xchg
pusha
inc
notb
dec
out
iret
jp
enter
pop
inc
sbb
icebp
popf
push
lock
testl
fcompl
jmp
mov
or
mov
das
sbb
pop
mov
or
dec
mov
loop
and
scas
sbb
sarb
out
cmpsb
pop
dec
in
push
sub
mov
in
stos
jbe
xchg
mov
mov
sbb
xchg
insl
insl
subl
mov
sbb
es
xchg
stos
jns
bnd
jb
cli
fwait
stc
pop
add
seto
sbb
popa
insl
loope
imul
lcall
jo
lea
jmp
pusha
loopne
inc
jmp
dec
jle
insl
in
outsb
cmc
jo
add
cmp
adc
sbb
shrb
add
imul
or
cmc
fs
mov
movb
pop
lods
jae
iret
shlb
fisttpl
jb
pop
fcoms
mov
aaa
gs
jecxz
int
push
in
insl
cmp
fstpl
stos
push
mov
enter
sub
imul
adc
xchg
inc
cmp
dec
and
flds
push
fs
cmpsb
fldt
pop
pop
sbbb
or
jno
jmp
or
ret
jl
xor
fsubrl
push
aad
mov
in
jmp
mov
rolb
adc
pop
in
xor
mov
and
nop
imul
add
cmpsl
popa
xchg
int
jo
mov
loop
insb
flds
nop
cmp
lret
stos
jno
fdivrs
inc
xor
mov
aam
cltd
mov
push
divl
insl
repz
jge
dec
shufps
mov
les
adc
dec
loop
leave
les
xor
scas
outsb
leave
and
cwtl
and
sbb
xor
inc
sub
out
mov
neg
xor
pop
inc
jp
aam
sbb
mov
push
jne
lcall
in
and
lods
jecxz
test
jo
sub
adc
ds
gs
xchg
mov
xchg
mov
stc
inc
cmp
dec
mov
cmp
ret
lods
movsbl
popf
lret
jmp
outsb
xor
xchg
inc
je
or
repnz
movsb
adc
push
mov
mov
and
sbb
stc
test
jmp
cmp
fiadds
mov
cmp
mov
aas
out
pushf
mov
or
je
test
mov
popf
jecxz
or
cmp
insb
pushf
xchg
inc
lret
cmpsb
inc
out
test
mov
jp
cmp
loop
or
fcmovb
mov
sbb
xchg
scas
xchg
ficomps
test
scas
std
out
xor
mov
loopne
inc
xchg
adc
fisttpll
ret
cmpsl
jnp
mov
inc
sbb
inc
pop
mov
leave
xchg
sti
sbb
xorl
fsin
add
sub
fiadds
adc
push
hlt
pusha
sti
mov
or
add
mov
inc
push
in
pop
dec
ret
clc
scas
mov
mov
ret
stos
das
sarl
scas
add
or
and
and
push
out
cli
ljmp
sbb
aaa
push
cmp
dec
aas
lods
cli
sbbb
movsb
push
cmp
add
xchg
add
in
push
pushf
adc
rclb
enter
push
mov
cmp
ror
add
std
dec
jo
pop
xchg
pop
dec
insl
aaa
pop
or
dec
mov
mov
cmpb
movsl
int3
pop
sbb
sub
mov
inc
cmp
cvttps2pi
add
scas
and
fadd
and
out
insl
dec
fmuls
adc
mov
mov
jmp
lret
sub
dec
sbb
out
sahf
jae
push
jbe
mov
jmp
jp
sahf
testl
push
jno
notl
pop
loope
loopne
mov
and
shrl
mov
pop
mov
ret
mov
push
inc
scas
or
ss
pavgw
sbb
pusha
inc
xchg
sub
sbb
leave
mov
mov
fisubrs
pop
iret
das
cs
inc
adcl
faddp
cwtl
fwait
bnd
fwait
adc
cmpb
icebp
jno
sub
mov
aaa
scas
and
mov
and
aaa
lea
add
sub
push
into
cltd
js
jns
lods
xchg
or
jl
xchg
out
pusha
addb
into
adc
adc
movsl
orb
fwait
and
daa
fst
in
jge
xchg
sub
dec
pop
ds
bound
mov
pop
fs
add
outsb
stos
lods
mov
dec
pop
mov
aad
inc
into
cli
xlat
mov
xchg
out
mov
rcrl
mov
shrl
retw
js
scas
arpl
cmp
shl
pop
sar
pop
lods
push
dec
xchg
sbb
outsl
call
cli
jns
rolb
inc
insl
bound
inc
data16
push
push
divl
lret
jb
mov
movsl
xor
sti
int3
fcomps
xor
andl
out
loopne,pn
or
inc
fdivs
fiaddl
sbb
test
xchg
and
fists
pop
imul
cmpb
mov
je
or
test
fsubrl
sbb
and
bound
or
rcll
pop
int3
xor
je
lcall
cli
insl
or
and
mov
push
xchg
stos
mov
shr
pop
mov
push
add
cmpsl
imul
mov
add
movsl
vunpckhpd
fsubr
scas
xchg
jb
or
jns
push
mov
addr16
xchg
cmpsb
pop
aaa
push
add
sbb
pop
inc
xchg
dec
sbb
mov
mov
ljmp
xchg
sahf
ret
fs
pop
xchg
jge
xchg
jns
inc
xor
cmpsb
movsb
dec
dec
or
push
sbb
cmpsb
dec
mov
sub
jg
add
sarl
cmp
ret
mov
mov
pop
leave
push
xor
mov
xchg
pop
je
jmp
mov
lea
out
insl
stos
ficoml
pop
or
je
mov
jne
jo
lret
or
cmc
cmp
aad
idivl
insb
add
dec
daa
cmp
into
cmp
movsb
sbb
xchg
sub
cmp
adc
lods
fists
inc
cwtl
sbb
sub
sbb
mov
scas
aas
jmp
mov
jge
mov
add
pop
mov
mov
out
and
lock
sub
adc
test
add
pop
add
pop
lcall
adc
int
dec
push
xor
mov
pop
mov
mov
ret
jns
dec
xor
scas
js
out
insl
mov
cmp
mulb
call
and
adc
test
jg
fistpll
in
inc
sub
jecxz
shrl
adc
imul
dec
ds
fiaddl
call
inc
or
enter
in
dec
inc
mov
int3
roll
add
sub
add
push
or
adc
es
enter
jmp
subl
lods
add
xchg
mov
push
icebp
lret
out
add
mov
xchg
psraw
jge
xor
lcall
adc
stos
add
inc
and
add
add
test
sub
js
or
ret
mov
mov
loope
cwtl
and
mov
fnstcw
cmpsb
and
lea
push
stc
xor
cmp
mov
call
mov
jnp
inc
fimuls
fisttpll
jnp
push
dec
mov
test
xorb
cmpsl
int3
xchg
fldcw
lret
call
mov
dec
xchg
jmp
punpckhbw
mov
sub
xlat
xchg
pusha
jecxz
lret
lcall
nop
es
daa
ja
ja
lds
sub
xchg
sub
jle
repz
dec
or
jns
dec
dec
xor
cmp
jmp
cmp
inc
je
xor
cmp
pop
inc
add
loop
outsl
xor
and
and
mov
repnz
shrl
mov
lea
stc
lahf
shl
cwtl
jmp
or
lock
stos
fisttpl
push
mov
mov
js
mov
sbb
jno
sub
sbb
xchg
ficoms
mov
cmp
repz
lahf
loope
mov
jle
pop
int3
xchg
fcoml
pop
cwtl
enter
lret
mov
es
pushf
add
rcr
ljmp
push
push
leave
jmp
cld
add
mov
mov
xor
inc
dec
sbbb
cli
dec
mov
adc
push
and
mov
cmpsb
movsb
movsl
xlat
or
push
pop
dec
insl
mov
mov
jl
test
dec
cmc
push
out
popa
test
insl
xchg
sub
lock
dec
add
push
sbb
cmp
xchg
fcomip
pop
fcom
fiadds
xchg
pop
jb
test
dec
hlt
add
add
jmp
push
jnp
mov
sbb
ja
daa
mov
xchg
test
int3
xchg
jle
dec
int3
jo
in
sbb
ficomps
sbb
dec
fcomip
popa
imul
gs
hlt
jb
adc
test
je
aad
ss
sub
sub
pop
orb
jo
fldt
fs
cwtl
movsl
lcall
jne
add
mov
adc
ds
xchg
add
gs
cld
insl
pop
imulb
mov
mov
testb
pop
xlat
adc
lds
mov
push
std
gs
into
lock
xor
cmp
lahf
adc
sub
add
adc
mov
pop
fnstenv
fsts
add
cmp
repnz
adc
mov
es
lods
sbb
mov
pop
pop
mov
inc
lods
sysenter
xchg
fwait
pop
cmp
jb
cmp
fldl
add
mov
test
mov
lock
sub
ds
xchg
inc
es
jne
test
lahf
xlat
cmpsb
pop
insl
sub
ds
dec
mov
aaa
movsb
sub
mov
xor
mov
xchg
pop
mov
fdivs
xchg
push
out
or
es
loope
jl
mov
in
sub
xchg
mov
mov
imul
add
xchg
lret
loope
andb
shl
cmp
test
pushf
sbb
gs
or
xlat
mov
adc
in
je
pop
push
daa
push
xchg
xlat
inc
xchg
incl
movsl
inc
mov
jno
ljmp
lods
subl
cs
inc
lods
sub
and
iret
fs
mov
mov
or
in
fs
jns
push
mov
xor
dec
pop
mov
mov
aas
jg
aas
aam
inc
and
inc
data16
and
into
movsb
xchg
sub
or
xchg
mov
cmc
push
nop
mov
jne
sub
mov
sbb
mov
arpl
jmp
dec
xchg
xchg
popf
loop
sub
maskmovq
notl
pusha
pop
iret
fwait
xor
movl
stc
sti
popf
xor
push
sbb
xchg
push
pop
pop
and
pop
pop
mov
pushf
mov
or
test
push
and
pop
or
repz
xor
push
mov
and
outsb
fisubrl
iret
out
fnsave
test
fwait
lods
adc
mov
adc
aas
cmp
mov
out
dec
movsl
repz
jnp
rcl
stos
xchg
push
sbb
orb
lahf
enter
lock
test
push
xchg
inc
mov
stos
fsubrs
add
push
dec
jno
dec
loopne
lods
or
scas
rorb
pop
outsl
in
mov
out
les
test
gs
pop
fiadds
pop
and
push
out
fnstenv
pop
call
bound
inc
add
nop
sub
or
add
gs
jp
mov
mov
test
and
pop
stos
jecxz
shl
sub
repnz
pop
xchg
out
lret
idivl
mov
lret
lock
mov
cwtl
out
adc
xchg
sub
adc
lock
aad
lret
xchg
push
mov
dec
sahf
sarl
mov
scas
lea
push
test
pause
lcall
fstpl
sti
lds
pop
push
mov
lods
inc
out
add
adc
add
mov
pop
add
adc
add
add
add
add
add
add
pop
in
inc
jmp
loope
jne
in
pop
nop
nop
fwait
mov
je
xor
add
dec
mov
idiv
or
mov
sti
pop
cmp
jae
je
jl
call
fwait
inc
cmp
cmp
mov
jb
xor
cmp
aam
jb
rol
inc
sbb
insb
lcall
pop
popa
add
lcall
pop
jae
or
pop
push
nop
bound
sub
das
data16
insb
lock
aaa
incl
jne
mov
cli
ja
xor
or
or
push
xor
mov
dec
jae
jmp
xor
test
xlat
mov
mov
fistl
icebp
divb
pop
xchg
repnz
push
cmp
sti
dec
add
lds
add
mov
pushf
inc
or
inc
dec
jae
test
in
insb
mov
xchg
xor
mov
push
das
addl
mov
mov
jb
fldcw
dec
ljmp
ret
iret
pop
push
push
mov
ret
sub
in
sub
test
or
enter
test
cs
movsb
sub
call
in
mov
add
adc
mov
sub
nop
rcrl
int3
adc
adc
cmp
push
mov
ja
popa
call
push
or
fisubrs
into
xadd
insl
and
cmp
adc
test
or
xchg
fbld
jnp
pop
fbld
adc
pop
pop
dec
cli
outsl
pushf
dec
and
mov
mov
pop
sub
adc
mov
out
imul
fs
mov
dec
inc
push
out
and
push
push
jl
dec
mov
mov
insl
movsl
adc
sarw
pop
movsb
int3
shr
mov
mov
fwait
jle
jmp
faddl
sti
inc
or
shrl
clc
mov
mov
pop
leave
sub
cltd
push
xchg
sbb
dec
inc
xchg
cmpxchg
icebp
add
push
jo
rorb
mov
add
jmp
js
sub
mov
rorl
loop
mov
repz
mov
pop
adc
int
inc
push
popf
jecxz
or
insb
cmc
mov
push
prefetchwt1
xchg
xchg
push
jl
cmc
sub
fsubr
xor
adcb
mov
jg
shlb
inc
es
cwtl
shll
test
push
sub
mov
xchg
ljmp
out
imul
pop
push
cmpb
dec
mov
fldl
sbbb
push
les
shlb
movsl
add
push
fwait
js
addl
sbb
inc
ret
sbb
sar
lods
mov
daa
mov
pop
lds
cld
popf
sarl
aad
push
test
mov
pop
inc
ret
push
fmull
popf
inc
imul
and
popa
push
mov
mov
jle
cmp
scas
fisubrs
or
addr16
or
mov
idiv
aaa
jecxz
sub
shrl
mov
adc
jecxz
and
push
push
and
inc
sbb
subl
arpl
mov
lods
movsl
bound
add
cld
xor
adc
jle
or
in
imul
dec
in
mov
insl
push
adc
jmp
jmp
cvtdq2ps
inc
cmp
hlt
add
test
add
sbb
xor
imul
aam
mov
xor
das
sub
fwait
jns
xchg
icebp
insb
addl
pshufw
roll
and
aaa
xchg
hlt
cmp
push
imul
adc
int
sub
pop
cltd
aaa
adc
ds
cmp
mov
xlat
xchg
pop
push
xchg
movsb
dec
iret
mov
test
sub
jns
sti
fdivrs
stos
or
repz
jae
push
jns
test
push
fwait
insl
mulb
das
notl
sub
add
dec
into
rorl
add
jo
xchg
mov
mov
mov
scas
mov
cmp
pop
es
lret
jae
sub
or
test
fistps
or
sub
call
mov
jae
and
sbb
sbb
adc
mov
idivl
sub
sti
push
shlb
daa
mov
jnp
inc
dec
hlt
mov
xchg
push
dec
jbe
push
sub
xchg
in
push
cmpl
sahf
jno
faddp
ds
mov
fsubrl
jle
stc
pusha
xor
dec
repnz
call
sbb
outsl
jg
dec
lds
push
push
inc
inc
lds
fucom
stos
daa
adc
jb
inc
std
inc
cld
aas
inc
xor
cltd
popf
out
mov
dec
mov
test
repz
icebp
add
mov
mov
fistps
pop
pop
mov
xchg
push
hlt
shrl
stc
jmp
push
shll
mov
mov
push
inc
pop
movsl
sub
pop
cs
lea
and
ret
add
daa
push
pop
pushf
dec
pop
aas
call
ss
pop
jo
sbb
mov
inc
les
adc
divl
stc
mov
gs
cmpsb
push
xchg
and
shrl
jg
call
and
aaa
push
ret
cwtl
adc
gs
xlat
les
andb
xchg
out
sbb
jae
notb
jl
dec
mov
cmp
insb
lahf
push
mov
mov
adc
pop
arpl
pop
sarl
xor
in
ja
mov
out
idivl
cmp
xor
mov
repz
test
pop
or
cltd
loopne
loopne
sbb
sti
stc
push
outsb
ss
mov
push
or
push
add
adc
daa
push
mov
jmp
aaa
cmpsb
je
daa
insb
lcall
pop
pusha
mov
inc
fwait
xor
xchg
sub
mov
and
mov
fisubs
daa
push
push
lods
pop
and
in
data16
rol
test
push
jnp
pop
arpl
fistpll
adc
jo
int
dec
je
out
pop
fsubl
inc
mov
xchg
clc
mov
dec
jmp
imul
mov
mov
lods
ficoms
ja
lcall
xchg
xchg
mov
adc
mov
stos
adc
test
add
aaa
addr16
and
jle
fstpl
sbb
sbb
inc
dec
dec
push
or
jl
pushf
jle
popa
movsb
add
mov
xor
cmp
adc
cmp
push
or
stos
movb
lret
enter
rol
pop
and
cmc
es
in
jmp
loop
sub
sbb
sub
aas
pushf
jp
push
jno
add
dec
imul
popa
sysexit
xor
mov
mov
fiaddl
adc
mov
pop
mov
xchg
daa
push
sub
sahf
inc
in
add
cmp
dec
lahf
push
xchg
jmp
push
roll
in
push
pop
lods
inc
mov
stos
test
cmp
imulb
mov
orl
dec
jo
ficoms
idiv
xchg
mov
mov
inc
call
loop
xchg
and
cmpsb
and
xor
push
lea
push
mov
push
movsb
pop
xor
jmp
jne
in
sub
mov
stc
xor
jp
lret
or
xchg
adc
pop
ja
enter
in
gs
sti
jnp
and
lods
jl
enter
outsl
xchg
adc
cmpsl
loopne
push
adc
jne
ss
imul
mov
cltd
pop
dec
aaa
idivb
or
push
xor
sub
ljmp
push
sbb
sbb
fimuls
adcb
fadds
jns
or
inc
lret
stc
cmpsb
orb
jns
arpl
mov
and
addr16
enter
shl
sub
leave
mov
lcall
arpl
dec
or
data16
loop
in
pop
sub
arpl
sbb
mov
leave
push
mov
mov
sub
shlb
xchg
scas
jg
rorb
push
push
dec
out
inc
sbb
mov
ja
shrl
psubd
and
cli
ret
out
hlt
loope
andnps
pop
mov
rorl
out
jb
xor
inc
sub
mov
xor
sti
pop
xor
andl
popa
mov
mov
dec
cmp
out
adc
inc
and
fadds
or
fs
js
mov
xchg
pop
mov
jb
test
xchg
test
pushf
fistpl
sub
inc
mov
mov
cwtl
xor
clc
lds
insl
mov
inc
sti
fndisi(8087
push
nop
imul
push
pop
jmp
scas
pushf
jns
mov
popa
ficoms
xchg
pop
pop
inc
mov
sub
sbb
notl
sub
pop
inc
sbbl
push
aas
add
push
outsl
aad
xor
lret
insb
bound
adc
clc
adc
cmpsl
clc
in
sarb
adc
in
ret
sti
inc
insl
into
pop
mov
pop
adc
cltd
sbb
jg
dec
test
push
lods
idiv
hlt
cli
popa
and
adc
call
nop
call
jge
popa
testl
cli
fnsave
inc
or
and
sub
jb
pushf
ljmp
hlt
clc
mov
mov
add
popa
or
mov
in
fmull
push
jle
shll
in
xor
xor
push
in
out
push
mov
int3
cmp
std
outsb
imull
dec
in
dec
out
and
data16
sbbb
xorl
add
inc
in
sbb
xchg
xor
push
and
xor
mov
mov
or
test
push
cmp
leave
sbb
pop
jge
jnp
pop
lods
and
sbbl
push
pop
aaa
sti
outsl
xor
movsb
aam
std
in
cmpsl
push
divl
and
movsl
pop
mov
inc
cmp
dec
mov
subb
adc
push
sbb
mov
mov
movsb
lret
shr
cld
add
outsl
sub
lcall
fdivrs
psadbw
pushw
movsb
inc
insl
mov
xchg
xchg
inc
test
mov
sbb
and
and
int3
std
daa
popa
xchg
jg
mov
js
push
nop
lret
imul
mov
shr
testb
jp
jno
imul
lods
daa
jecxz
outsl
hlt
adc
out
push
div
or
push
dec
popf
push
or
nop
jle
test
pop
mov
sarl
ret
or
aad
cmp
xchg
jmp
mov
outsb
in
dec
sub
pushf
stos
dec
cltd
das
cs
out
mov
cli
ret
or
int
adc
imul
add
push
outsb
mov
mov
dec
ljmp
lods
in
sub
aas
cwtl
out
jae
test
leave
sbb
in
popa
scas
or
xchg
mov
jns
mov
mov
adc
test
xchg
test
jbe
ficompl
mov
test
pop
mov
mov
jb
mov
jecxz
xchg
std
mul
in
imul
mov
fdiv
sub
inc
leave
in
ror
dec
sub
stos
mov
mov
in
int
lods
and
inc
cltd
in
popa
shlb
sub
pop
cmp
mov
scas
push
fucomip
dec
andl
push
aaa
test
or
or
cmp
xchg
and
cs
add
loope
fldt
lods
out
mov
mov
and
mov
outsb
std
mov
popa
icebp
mov
lods
into
stos
xor
mov
lods
add
insl
cmp
mov
icebp
das
outsl
mov
insl
push
outsl
or
pop
lret
shl
mov
nop
iret
shll
imul
negb
mov
sahf
pop
fdivl
mov
loopne
xor
sub
shrb
pop
jp
and
stos
loope
fstps
int
lock
pushf
mov
jo
fisubl
jmp
xor
adc
dec
xchg
pinsrw
or
out
fldenv
mov
int
push
jl
sbb
pop
das
pop
in
adc
dec
cld
addr16
add
or
aas
dec
cli
dec
cmp
scas
dec
or
mov
mov
xor
dec
mov
icebp
fs
mov
xchg
imul
cmp
fwait
lret
rcrl
jge
into
fstpt
xchg
mov
mov
es
cmpsl
jns
shlb
mov
in
mov
push
inc
outsb
xor
or
push
shlb
xchg
add
pop
jl
out
js
and
dec
imul
adc
ss
popa
dec
adc
xchg
es
lahf
push
lds
adc
outsl
insl
xlat
jnp
cmpsb
adc
mov
addb
nopl
into
inc
mov
push
and
shll
lods
cli
cmp
aaa
inc
popa
fwait
add
cmp
cltd
inc
repz
add
out
gs
clc
data16
jae
cmp
mov
sahf
mov
jg
cwtl
call
jg
jb
inc
xchg
inc
test
out
xchg
xchg
jbe
push
push
cltd
jo
push
mov
ds
sahf
cmpsl
or
or
stos
ljmp
daa
les
mov
mov
jecxz
out
lahf
dec
mov
xchg
test
adc
loopne
inc
stc
push
sarb
push
add
jp
ret
out
imul
adc
sbb
jae
data16
mov
cmp
adc
pop
push
scas
pop
je
sbb
mov
pop
insl
rcll
sti
sbb
ljmp
push
test
mov
cmp
fwait
add
lcall
xchg
in
push
jg
xor
and
out
data16
sub
adc
sbb
and
es
cltd
mov
ja
mov
push
stc
adc
int3
mov
pop
int
push
dec
rcrb
lods
in
stos
test
sbbl
fstpl
test
pop
lret
inc
insl
cmp
push
dec
ljmp
lods
jo
sti
push
sbb
pusha
test
das
stos
stos
xor
mov
dec
icebp
mov
xchg
cmpsl
jae
jne
mov
xchg
int3
nop
je
rorl
nop
sbb
jns
or
push
add
addr16
xor
cmp
cmp
mov
pop
pop
adc
loop
cmp
enter
nop
mov
in
jns
jmp
push
adc
fucom
out
les
jle
dec
jp
sbb
jb
out
xor
out
test
repnz
outsl
lods
movsl
push
stos
xchg
js
add
mov
stos
sbb
xor
jns
or
fisubl
mov
pop
cmp
mov
mov
repnz
adc
mov
int
dec
jne
dec
stos
test
shlb
sbb
push
call
or
add
popa
mov
cmp
leave
pop
or
aad
fildll
sahf
or
scas
sub
mov
mov
lock
movsb
cmp
outsl
cmp
jmp
adc
push
mov
mov
test
loope
nop
je
push
lods
or
mov
das
inc
js
nop
pop
cmp
mov
xchg
jg
or
es
nop
sbb
and
loop
inc
pop
popa
js
int3
mov
cmp
mov
adc
pop
ror
cs
or
mov
or
push
lods
sarb
loope
rcll
jmp
push
fnstenv
mov
aad
add
cli
rol
movsb
fcompl
out
and
sub
shl
outsb
mov
xor
rcll
bound
dec
movsb
inc
mov
addl
inc
shll
mov
sub
mov
pop
xchg
ffreep
jmp
jle
mov
adc
mov
inc
pop
lock
inc
aas
cmp
in
popf
sub
xchg
dec
jp
mov
inc
xor
cmp
push
js
mov
in
inc
fistps
or
jecxz
mov
push
cwtl
mov
mov
or
xchg
or
cwtl
cmp
inc
add
icebp
xchg
lods
les
sbb
cltd
mov
shll
arpl
stos
mov
push
nop
mov
repnz
test
sbb
jae
mov
mov
jnp
sti
repz
xchg
pop
ds
stos
imul
pop
sbb
sub
push
xor
mov
sub
adc
shll
mov
movsb
cltd
push
xchg
mov
sbb
lret
lcall
fs
jae
jecxz
xchg
hlt
aaa
jg
mov
shl
cmp
xchg
aaa
fstpt
cld
popl
outsl
bound
std
ds
and
inc
add
dec
inc
rorl
enter
icebp
push
les
adc
sbb
sbb
dec
mov
inc
ss
and
push
mov
fmul
and
push
insl
sbb
xor
in
push
add
jb
push
and
cmp
xchg
mov
repz
dec
pop
cli
dec
lods
add
mov
mov
test
mov
cld
daa
pop
dec
leave
pop
js
gs
stos
xchg
push
leave
xchg
roll
pop
push
sti
jnp
cli
loope
sbb
sub
add
jmp
insl
mov
ja
into
shll
cs
sbb
push
loope
mov
inc
add
in
rolb
dec
cwtl
lock
pop
or
sub
sub
fldl
pop
lds
into
adc
add
sub
rsm
nop
jp
pop
sub
lock
iret
rorb
ret
mov
push
test
testb
dec
xchg
sub
ror
insb
pop
leave
mov
ret
fdivrl
xor
and
mov
pop
cltd
jmp
loop
inc
loopne
insb
mov
adc
iret
xor
pop
aas
jb
mov
cmpsl
es
gs
mov
xchg
lds
das
repz
dec
dec
fisttpll
loop
cmp
dec
mov
sbb
pushl
inc
xchg
je
xor
fwait
lahf
sub
aad
inc
fs
fsubp
out
inc
push
push
in
sub
pop
xchg
leave
data16
loope
mov
fstl
outsb
addb
leave
das
dec
loope
outsb
sbb
pop
sub
mov
loopne
dec
pop
jne
pop
or
loopne
fwait
nop
mov
stos
clc
call
inc
cmp
imul
mov
sub
int
push
jp
mov
cmc
test
mov
scas
test
jns
xchg
inc
aam
sti
adc
add
bound
xor
out
cmp
or
mov
xchg
addr16
scas
stos
gs
jmp
push
sbb
inc
pusha
jl
pushf
jb
les
leave
inc
sbb
fs
das
out
paddb
cmp
fisubrl
cmc
pop
mov
in
or
xor
sahf
mov
arpl
inc
js
jecxz
sbb
insb
jmp
mov
inc
xor
sub
jbe
mov
mov
xorl
lea
xor
insb
jmp
rcr
mov
jl
fs
test
push
xchg
cmp
aad
sbb
cltd
push
cmpsb
mov
lods
js
outsl
pop
cmc
jo
outsb
xor
fwait
adc
pop
cwtl
sub
lock
rol
ss
aad
pop
jl
sub
dec
std
and
pop
inc
push
movsl
sub
adc
lret
add
fmulp
scas
stos
jp
mov
and
sub
sbbl
add
push
pop
adc
cli
imul
or
jno
inc
aad
jmp
in
adc
mov
ss
dec
inc
adc
dec
shl
or
fsubrs
sbb
rcrl
gs
inc
jp
add
push
jns
int
test
add
fcoml
or
fstpl
adcb
sbbb
in
mov
sub
iret
lret
cwtl
pusha
or
mov
sbb
jae
jl
je
jge
adc
xchg
stos
dec
jne
movsl
js
inc
ret
dec
cmp
loop
in
inc
test
adc
fsubrl
jecxz
pop
fstpt
push
cmpsb
cmp
test
jo
push
mov
push
incb
mov
imul
jle
sbb
lret
mov
aas
and
mov
adc
jmp
jmp
repz
dec
inc
arpl
mov
cmpsl
push
or
leave
jno
mov
xchg
and
xchg
push
and
push
repz
loopne
inc
cltd
gs
in
mov
pusha
dec
adc
sbb
rorb
mov
lods
sub
or
xchg
in
jne
xchg
clc
ret
incb
mov
xchg
inc
xchg
dec
adc
in
xor
xorb
sub
int
mov
int3
js
lock
or
xchg
lahf
gs
cli
lods
pusha
inc
daa
and
loop
inc
sbb
or
call
xor
xor
mov
les
add
imul
ljmp
push
out
ret
push
add
or
push
push
push
lods
dec
aad
in
fwait
sbb
sbb
sub
sti
push
mov
mov
dec
sbb
in
lods
xor
jl
jp
xchg
in
out
dec
push
fbld
lahf
rcrl
mov
int3
jp
test
sub
in
xor
daa
dec
loope
fdivrs
mov
outsl
nop
pusha
lret
pushf
sbb
add
outsl
push
out
mov
lock
xor
pusha
outsb
sbb
mov
dec
push
cld
mov
sub
sbb
mov
xchg
xchg
das
push
scas
or
mov
cmp
je
push
out
roll
pushf
stc
movsb
xchg
xchg
pop
repz
jmp
cmp
or
or
push
nop
push
fidivl
or
pop
mov
in
or
repnz
fildll
jo
sub
mov
push
jp
movd
idivb
jne
fucomi
scas
dec
adc
push
mov
icebp
sbb
test
mulps
int3
leave
cmp
add
add
mov
mov
inc
in
mov
rclb
cmp
and
js
jle
ja
stos
inc
ljmp
xor
fwait
roll
mov
ret
jmp
fsub
fldt
mov
lods
lahf
mov
in
iret
cmp
xor
pop
sbbl
mov
lret
cmp
dec
stos
loopne
xorb
dec
enter
or
into
aad
jnp
fsts
out
pop
cmp
lret
leave
ljmp
and
or
pop
cwtl
mov
dec
imul
flds
sub
inc
mov
adc
nop
xchg
cld
ret
xchg
push
dec
out
mov
sbb
xchg
lcall
jno
xchg
insb
imul
ficoms
cmp
pop
pop
mov
mov
or
daa
in
fldcw
pop
ror
ret
orl
enter
int3
arpl
sub
inc
sbb
sub
adc
lret
stos
lret
stos
icebp
inc
imul
stc
rorl
mov
mov
mov
adc
dec
es
lret
shll
sub
cmp
bound
push
fiadds
cmp
lret
bound
or
fisttpl
out
pop
repnz
outsl
loop
jl
sti
xor
cmpl
dec
or
xor
dec
xor
sahf
stc
sub
daa
mov
call
mov
gs
shl
int3
in
inc
or
js
pop
jnp
push
mov
mov
fistps
roll
xor
test
mov
and
cwtl
out
rcr
pop
cmp
push
jge
mov
incb
outsl
jne
cmp
cmpsl
bound
sarb
dec
jbe
inc
add
fdiv
mov
add
add
dec
dec
pop
and
adc
fwait
push
push
jb
lret
cli
mov
inc
cmpsb
repz
mov
adc
mov
pop
cmpsb
jmp
pop
push
cmp
loopne
dec
dec
mov
jge
div
dec
fcomps
clc
sub
lds
repnz
cmp
adc
sub
jmp
js
out
dec
movsb
int
add
roll
push
add
add
cmp
lahf
fadds
inc
dec
cltd
xchg
adc
ss
stc
sahf
sub
sub
and
mov
fwait
inc
cmp
sbb
mov
shl
mov
lods
dec
xor
bsf
ljmp
test
rolb
or
xchg
enter
add
sti
or
xrelease
push
mov
and
mov
and
test
ret
pop
jp
mov
icebp
inc
adc
push
adc
mov
xchg
icebp
mov
daa
add
jb
xchg
xor
sub
add
xlat
pop
rorl
scas
inc
in
andb
cmc
fcmovu
out
ja
je
pop
mov
in
lret
add
or
outsb
sub
add
add
xchg
xor
data16
push
cmp
sub
fcoml
es
jg
outsb
sbb
adc
or
xor
rcrb
xchg
lcall
pop
out
ret
std
xchg
xor
push
jg
lcall
ljmp
bound
adc
aaa
mov
clc
sbbl
inc
or
cmpsb
imul
push
movsl
js
dec
push
jge
stos
mov
jl
andb
pop
xchg
enter
push
xchg
sbb
jecxz
add
call
loope
add
xlat
cs
dec
stos
xor
adc
sub
imull
psrad
lret
in
sub
rolb
and
or
adc
data16
push
std
sbb
leave
add
rcll
inc
outsl
je
shll
sbb
and
add
add
mov
adc
push
rclb
stos
mov
xor
aam
cwtl
stc
in
jle
cmc
movsb
jae
inc
mov
int3
cld
sti
push
jg
or
fisubrs
sbb
and
rcpps
sbb
pushw
dec
sahf
lret
inc
dec
pop
push
clc
mov
mov
je
shlb
pop
xchg
imul
in
xor
jbe
dec
lock
out
aas
addr16
addb
xchg
scas
repz
cmp
mov
push
cmp
lods
adc
push
push
pushf
mov
and
xchg
and
mov
xchg
enter
in
addr16
gs
orb
push
jns
mov
cld
je
push
popa
or
rol
bound
stos
add
push
push
inc
inc
sub
jle
mov
add
out
dec
push
arpl
fmuls
test
and
insl
xlat
mov
sub
xorl
xchg
jns
pop
stc
push
ljmp
sbb
rorl
inc
cmp
jae
ret
pop
popf
xor
stc
sti
jnp
sub
cmpsb
repnz
loopne
int
lea
test
rorl
into
add
mov
enter
ja
push
sub
hlt
call
out
sub
outsl
cs
in
fsubrs
call
mov
pusha
loope
addb
sti
mov
call
fldl
dec
fdiv
sbb
push
aam
adc
add
enter
dec
jmp
push
adc
xor
shlb
scas
xor
jnp
dec
adc
in
ja
imull
cmpsl
cltd
bound
adc
gs
or
mov
out
or
jbe
push
mov
imul
mov
or
pop
add
dec
xchg
inc
leave
jp
cld
andb
inc
add
shrb
std
cmp
pop
out
jp
mov
aaa
shll
cmpsb
int
add
flds
mov
inc
xor
orl
inc
xlat
insl
out
hlt
mov
adc
sti
in
sub
inc
jae
jns
cld
lret
xchg
jg
adc
push
mov
jp
stos
add
mov
fwait
cmp
shll
pop
inc
cmp
adc
push
jo
ficomps
dec
aad
aad
ja
inc
test
inc
inc
adc
cmp
dec
jp
xor
sbb
arpl
mov
ds
fbstp
mov
dec
xchg
pop
lods
out
iret
jnp
and
sub
int
cmp
xchg
ret
cmp
test
popa
jp
scas
and
sbb
nop
inc
fstpt
sbb
add
js
jp
and
loop
xchg
pushf
cmp
xor
daa
dec
aaa
sub
loopne
lods
jle
mov
mov
loopne
imul
and
fldl
mov
cmpsl
push
cmp
mov
adc
jne
jo
jp
add
cmp
add
out
test
jb
push
adc
sti
stc
add
add
and
adc
imul
or
dec
and
ret
xor
jb
ljmpw
sbb
loop
mov
mov
in
sti
jmp
stc
loop
fidivl
shrb
fdiv
inc
cmp
jle
bound
call
loopne
gs
mov
fldenv
pop
ss
std
pop
jecxz
jge
pop
and
pop
insl
clc
cmc
jae
push
xchg
clc
mov
cmp
mov
push
xchg
xchg
pop
mov
popa
ret
mov
add
sbb
mov
pop
lods
mov
test
mov
fsub
inc
sbb
pusha
push
xchg
aam
jg
gs
push
lret
xlat
jbe
stc
lret
fnsave
and
or
sub
lret
out
lret
push
dec
inc
push
jno
cs
inc
cmp
mov
rorl
dec
pop
inc
sub
leave
pop
fcmove
jmp
movsl
dec
leave
pusha
xchg
sbb
sub
aas
and
cmpsb
adc
mov
adc
xchg
adc
jnp
bound
lcall
mov
leave
out
popa
mov
lods
shrb
sbb
ds
sub
lret
pop
cmp
xor
aaa
lahf
or
fdivs
adc
add
inc
orl
cmpl
cmp
sbb
cltd
adc
les
add
daa
int
xor
imul
mov
test
pop
repz
mov
xchg
inc
jns
lahf
jmp
out
mov
popa
adc
fdiv
pop
test
popa
push
sub
push
mov
neg
dec
cmp
negl
push
pop
mov
repnz
mov
lret
or
stc
cmp
aam
push
inc
or
xchg
cmp
jns
dec
rorl
repz
jnp
test
in
xor
repz
arpl
call
cmp
cmp
std
into
dec
pop
add
jg
dec
es
xchg
pop
mov
jecxz
test
sbb
push
push
jbe
xor
mov
xchg
outsl
jnp
xchg
mov
jp
cmpb
xchg
adc
mov
movb
jb
jne
add
lahf
add
fldcw
cltd
fbld
lret
or
repnz
sub
jp
xchg
xchg
pop
movsl
arpl
cmp
cmc
mov
sbb
es
sub
sub
clc
je
and
adc
sub
scas
sbb
out
cmp
sbb
and
lahf
aaa
cltd
jmp
cs
pushf
aam
push
cli
xchg
loopne
dec
and
popf
aad
leave
mov
inc
adc
fwait
sbb
mov
jmp
aad
add
hlt
mov
out
and
sub
mov
lcall
lcall
pusha
fdivl
fs
xlat
lret
jg
scas
xorb
sarl
pop
inc
xchg
xor
test
or
int3
add
push
enter
add
leave
dec
push
fisubrs
iret
jecxz
cmp
lret
pop
or
cmpsb
xchg
loop
js
aam
insl
subb
cld
loop
xchg
jns
push
adc
push
pushf
dec
xor
and
xor
out
cmp
push
push
test
ljmp
adc
enter
mov
mov
jmp
mov
push
adc
xor
jp
dec
loop
pop
fstpl
stos
jl
pusha
in
fsubrs
or
push
xlat
sti
cmp
into
int
jne
bound
imul
dec
jbe
jp
jae
leave
mov
cmp
ljmp
enter
and
jnp
jp
mov
and
enter
dec
push
dec
not
mov
icebp
push
sbbl
es
inc
insb
lods
out
js
fiaddl
jg
mov
dec
out
test
cmp
jle
lahf
push
std
fsubrs
nop
lds
scas
push
adc
jns
sub
loope
cli
ret
mov
pop
xchg
sbb
xchg
aad
imul
fbld
and
lock
testl
adc
icebp
in
xor
adc
cmc
and
rolb
loope
xchg
jb
mov
mov
hlt
xlat
in
lcall
mov
cmpsl
enter
push
mov
test
cmp
dec
das
shrl
nop
icebp
ds
cmp
jp
into
sbb
pop
add
aad
cli
loop
mov
les
outsb
cmp
dec
jae
pop
jae
inc
sti
mov
jmp
adc
dec
dec
lds
mov
movsl
xchg
mov
dec
mov
xchg
push
into
push
call
bound
movsl
dec
and
addl
and
xchg
aaa
push
add
cmp
cmp
movsl
push
jle
bound
cmp
imul
inc
adc
data16
outsl
fs
ret
push
lods
mov
clc
fs
andl
ljmp
ss
scas
or
sub
sbb
lods
mov
mov
adc
out
adc
les
adc
nop
lcall
repz
or
rcr
fwait
xor
mov
mov
jmp
pop
or
out
lea
sbb
adc
mov
mov
cmp
pop
loope
mov
add
pop
movsb
push
aas
mov
enter
push
and
pop
jnp
inc
mov
adc
cs
or
jmp
push
push
mov
mov
clc
mov
dec
push
mov
sub
lods
nop
aad
cmp
add
jns
ljmp
stos
in
out
push
jg
arpl
jo
inc
xor
data16
mov
test
ja
data16
or
mov
sbb
mov
ret
pop
popf
sbb
xchg
mull
cli
stos
je
dec
adc
mov
scas
adc
sub
mov
lods
jno
jae
dec
push
jecxz
push
sub
xor
sarl
pop
enter
mov
pop
jo
aas
jmp
cmp
addl
fstpl
movsb
pop
mov
leave
movsb
lock
xchg
mov
push
xor
or
lods
call
sbb
inc
mov
cmp
cmpsb
into
inc
push
pop
inc
div
push
or
push
ds
cmp
aad
sbb
jge
pushf
in
lahf
sub
dec
cmp
ret
pop
and
xchg
xlat
scas
pop
je
and
cmp
lcall
addl
and
mov
xchg
push
sbb
or
les
out
and
or
pop
out
jecxz
popf
cmp
sub
cmpsb
push
dec
mov
arpl
mov
pop
add
or
mov
mov
fcoms
inc
cmp
into
lods
push
cmp
inc
mov
and
cwtl
mov
iret
sbb
mov
pop
xchg
pop
out
mov
jmp
in
in
add
bound
push
add
cmp
mov
adc
add
mov
cld
addl
leave
inc
add
jno
xchg
add
sbb
inc
es
lock
inc
test
jge
bound
test
cmp
push
pop
ftst
xlat
ss
ficoms
inc
dec
add
fidivrs
mov
cmp
xlat
mov
jge
xor
push
jbe
int
inc
cmp
jne
pushf
mov
jecxz
push
aam
xor
scas
adc
orl
dec
sbb
fwait
mov
mov
jp
push
das
inc
adc
fadds
add
cmp
mov
mov
outsl
aad
sbb
je
roll
push
mov
adc
fdiv
sub
xor
mov
int3
cwtl
shll
or
pop
lods
cmp
push
cmp
ljmp
jo
push
or
pop
cltd
and
adc
int
lods
cmp
and
dec
mov
cmc
sub
into
sbb
sbb
mov
pop
movsb
outsb
ss
mov
iret
and
stos
push
fadds
hlt
andl
aas
enter
jo
fdivl
popf
stc
aam
jle
ljmpw
fcomps
pop
mov
clc
cmpsl
mov
jle
mov
lock
sub
pop
int3
jg
icebp
loopne
dec
mov
push
sahf
pop
or
fsts
stos
mov
fidivrl
mov
sbb
add
mov
add
movsb
mov
ds
pusha
sbb
push
inc
lcall
int3
dec
out
sub
mov
bound
jo
pop
mov
pop
mov
adc
shl
les
inc
xchg
pop
push
mov
fnstcw
xor
fidivrl
sub
scas
cwtl
pushf
or
frstor
dec
jg
daa
sub
dec
pop
sub
add
dec
lock
jmp
pusha
and
mov
jno
fisttpl
shll
addb
ss
into
scas
in
mov
jp
mov
inc
arpl
cmc
hlt
cmpsl
adc
mov
push
jl
cmpsb
add
in
and
es
push
in
xchg
pop
sub
mov
sbb
pop
or
mov
scas
xor
pop
scas
or
dec
and
mov
xlat
bound
cmpsl
imul
clc
lcall
xor
lods
lcall
aad
and
std
jns
in
pop
cmp
cvtps2pd
and
mov
push
mull
pop
xor
mov
and
lock
lea
aam
fidivl
pop
ret
pop
jecxz
out
or
outsb
outsb
pop
or
and
sub
test
loope
sbbb
push
ds
mov
das
pop
sarl
xchg
lea
push
leave
scas
insl
sub
daa
loope
jno
stos
jmp
sahf
clc
dec
mov
shrb
shl
inc
and
clc
incb
jmp
lcall
popf
jp
adc
fwait
mov
fistpll
mov
xor
cmp
popf
hlt
ror
jno
push
jo
xchg
insb
shlb
push
je
adc
outsl
and
pushf
xchg
pop
subl
scas
jo
xor
sti
jge
jnp
push
or
sbb
inc
fidivs
xchg
cmp
cld
jne
movsl
mov
xor
popf
movsl
mov
jge
jl
pop
pop
dec
jne
ljmp
jbe
sub
cmp
cmp
add
xlat
in
xchg
outsb
loopne
push
loope
loopne
out
stc
pop
jne
jecxz
mov
inc
aad
jae
das
or
loope
mov
addb
fildl
mov
fmul
and
jl
push
pusha
xchg
dec
jmp
xchg
sahf
outsb
xor
les
inc
hlt
push
repnz
cmc
jae
sub
stos
and
js
jns
repnz
mov
jnp
ret
ljmp
mov
test
pop
jmp
lahf
rol
mov
popl
push
cmp
mov
jmp
push
sub
adc
lret
mov
enter
lret
mov
mov
cmpsb
push
mov
out
jmp
icebp
fcmovnu
addl
push
fldl
bswap
mov
push
cmp
mov
jle
pop
jne
leave
hlt
pusha
ret
xor
lea
enter
icebp
pop
shlb
lea
adc
repz
push
inc
lret
sbb
adc
popf
jbe
stc
ret
std
inc
mov
fimuls
call
push
xchg
pop
mov
test
stos
ss
inc
movsb
jl
repz
scas
imul
ss
dec
mov
mov
aas
pop
faddp
lock
jns
cmp
pop
cld
or
shl
mov
mov
inc
pop
xchg
dec
sub
mov
sbb
mov
in
jb
test
rol
inc
push
decb
jp
sarb
adc
addr16
or
idivb
movsb
test
add
fildl
add
mov
add
add
add
add
add
add
dec
and
outsb
cmp
cmp
push
and
inc
dec
xor
inc
dec
xor
inc
push
inc
dec
js
add
dec
xor
dec
aaa
and
addr16
xor
dec
js
aas
and
add
dec
xor
and
push
arpl
xor
add
outsl
and
xor
aas
gs
and
add
aas
insb
insb
insb
dec
sub
inc
jo
dec
adc
movsl
add
add
adc
sti
pop
adc
push
or
add
push
adc
lods
push
adc
rclb
adc
add
add
jl
add
or
add
pop
adc
dec
add
add
jno
add
add
add
pop
adc
xor
add
adc
dec
sub
adc
pop
jo
add
pop
adc
mov
or
add
add
adc
push
jb
add
inc
adc
rorb
adc
mov
add
adc
add
adc
add
adc
in
adc
fwait
inc
adc
popa
sub
adc
push
inc
adc
cld
pop
adc
fs
add
adc
mov
adc
fldt
add
adc
imul
adc
pop
aaa
adc
je
adc
sbb
adc
mov
adc
or
adc
cmpsb
inc
adc
jne
adc
mov
sbb
add
xor
jae
arpl
xor
pop
push
je
jo
and
pop
xor
dec
add
inc
and
jbe
fs
pop
cmp
xor
js
js
sub
jp
push
ss
pop
xor
and
jo
pop
and
add
inc
jo
xor
push
imul
xor
cs
xor
xor
add
arpl
outsl
aaa
bound
cmp
pop
cs
insb
sub
push
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
or
pop
or
or
inc
add
or
adc
inc
add
or
sbb
inc
add
or
and
inc
add
or
sub
inc
add
or
xor
inc
add
or
cmp
inc
add
or
inc
or
inc
or
dec
or
dec
or
push
or
push
or
pop
or
pop
or
arpl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
mov
inc
add
or
xchg
or
fwait
or
lahf
or
inc
xor
pop
push
push
push
pop
dec
dec
add
aaa
pop
xor
inc
pop
dec
push
add
ss
pop
inc
xor
xor
add
xor
push
xor
pop
inc
pop
add
push
xor
inc
push
pop
xor
dec
add
inc
aaa
xor
cmp
pop
xor
xor
inc
push
xor
inc
dec
pop
push
add
xor
inc
push
pop
dec
dec
add
inc
pop
inc
push
pop
xor
inc
pop
dec
pop
dec
xor
cmp
cmp
add
xor
pop
inc
cmp
pop
add
cmp
xor
inc
xor
dec
push
pop
xor
xor
dec
add
inc
cmp
pop
xor
pop
push
dec
dec
add
xor
xor
ss
add
inc
pop
pop
inc
push
xor
inc
xor
add
dec
pop
push
xor
push
push
add
push
pop
cmp
pop
cmp
add
pop
push
inc
push
pop
push
xor
cmp
pop
cmp
push
dec
inc
pop
dec
push
xor
inc
push
inc
xor
inc
dec
pop
inc
add
push
add
add
push
add
push
add
dec
pop
add
push
add
xor
aaa
dec
add
aaa
add
inc
add
inc
pop
add
add
push
add
push
add
xor
inc
add
push
add
inc
add
push
add
xor
pop
add
inc
add
push
add
xor
add
inc
add
xor
dec
add
dec
add
add
add
add
dec
add
xor
inc
add
add
pop
add
add
add
add
inc
add
dec
add
cmp
dec
add
pop
add
dec
add
add
add
inc
add
pop
add
dec
add
dec
add
push
add
add
inc
add
add
dec
add
add
add
push
add
add
push
add
push
add
inc
inc
add
dec
add
add
xor
pop
add
add
add
add
inc
push
loopne
mov
dec
mov
cld
sub
dec
cmp
push
jae
imul
jno
jb
jb
fs
jne
ja
jo
bound
lcall
add
add
add
add
add
add
add
jecxz
nop
repnz
dec
push
pushf
mov
add
into
add
add
pop
mov
mov
clc
imul
roll
dec
cmpsb
ret
sbb
shll
xchg
mov
lret
movsb
movl
or
lock
test
std
jnp
pop
jl
pop
call
sbbl
pop
add
xchg
les
mov
rcll
and
mov
add
jl
data16
sti
call
bound
test
xchg
and
lock
lock
aas
bswap
inc
mov
addr16
jle
enter
adc
lea
imul
lods
test
hlt
xor
fwait
jecxz
sub
shlb
push
cmpsb
push
stc
xchg
sbb
in
fs
pop
cltd
iret
std
mov
dec
or
test
pop
and
outsb
push
inc
cld
xorl
in
enter
xor
pop
fs
aaa
cmp
sbb
pushf
gs
cmpsb
jmp
add
inc
pop
push
pusha
pusha
in
xor
fnstcw
xchg
imul
icebp
xchg
sbb
subb
ja
xlat
xchg
push
dec
sbb
orb
and
xor
dec
subb
sbb
dec
not
fs
and
testl
clc
sbb
sub
mov
inc
lea
and
xor
stc
int3
testb
add
xlat
or
ja
and
clc
lods
xchg
pop
scas
lahf
pusha
push
insl
cmc
lcall
test
inc
xchg
mov
adc
jnp
cmpl
imul
in
sub
leave
shl
mov
pushf
mov
js
mov
adc
xchg
inc
xor
in
cmp
jge
xor
imul
mov
enter
shld
int3
ss
adc
fwait
inc
push
mov
xlat
out
dec
adc
mov
jnp
pop
jmp
cli
jbe
dec
mov
iret
jecxz
mov
fwait
enter
sbb
add
and
repnz
pop
xor
pop
xchg
push
test
fmul
mov
stos
js
xchg
or
or
jmp
jae
sbb
mov
stos
hlt
outsl
stos
call
dec
lods
add
cmc
push
adc
push
push
cmc
and
mov
inc
xlat
hlt
add
incb
xchg
popf
mov
jne
fsubrl
sub
imul
lock
out
xchg
scas
pop
push
xlat
and
pop
sbb
mov
cmpsb
outsb
cmc
daa
add
das
lock
xchg
movsl
push
loopne
and
jns
shl
push
std
sub
xor
loop
inc
mov
mov
dec
pop
hlt
xchg
fnstenv
and
test
xchg
xor
jb
arpl
jle
jo
push
push
sbb
sbb
test
cmp
or
mov
and
popa
jg
fnstsw
dec
into
lods
mov
jmp
xor
jmp
push
mov
mov
ds
add
bound
jg
xor
sbb
push
jle
lret
adc
or
scas
push
fldenv
cli
adc
into
in
mov
iret
lods
sbb
out
into
aaa
or
pop
cmp
mov
repz
push
fsubl
or
mov
jo
insb
cmp
fsubrl
outsl
xchg
testb
dec
sub
ret
cmp
sbb
or
test
add
enter
pusha
mov
adc
mov
sub
and
dec
les
lcall
push
mov
sbb
adc
pop
xor
fstl
lock
scas
test
mov
sbbl
inc
iret
fsubs
in
shlb
imul
cmp
call
jg
xchg
test
mov
inc
inc
inc
nop
adc
or
adc
mov
sbb
lret
xchg
xor
xchg
xlat
or
int3
sub
mov
pop
jmp
fbstp
les
mov
jmp
and
kxorb
clc
or
iret
xchg
repz
jge
testl
imul
cmp
sahf
aas
dec
pop
fcmovnb
sub
popa
mov
sub
jmp
and
gs
mov
pop
popa
or
adc
jns
mov
mov
sbb
rcrb
lods
and
jg
test
cmp
out
inc
movsb
xor
ret
dec
call
pop
mov
and
mov
adc
cmp
pop
pusha
test
leave
cmp
cltd
out
push
sbb
stos
jle
sahf
or
sbb
call
mov
mov
leavew
pop
add
les
int3
mov
sub
mov
mov
add
adc
and
xor
inc
jnp
sub
sub
fistps
mov
push
dec
pop
dec
in
mov
lcall
push
mov
es
sbb
and
sbb
mov
sbb
push
dec
cmc
mov
push
jmp
repnz
inc
xor
fldlg2
sub
and
nop
and
faddl
pop
and
lods
mov
int
push
sbb
stc
jp
insl
mov
mov
sbb
add
dec
cmc
jo
rorb
lret
imul
mov
mov
mov
push
nop
mov
ror
pop
pushf
aaa
lret
cli
mov
fs
decb
pop
xorb
jmp
enter
stos
and
jo
xchg
dec
xchg
dec
adc
or
pop
cmp
nop
push
pop
cmc
sbb
mov
sbb
mov
mov
aas
sub
test
sbb
mov
sbb
sbb
xorb
sbb
adc
or
xor
pop
iret
ljmp
aaa
cmp
fucomi
sbb
fs
sub
adc
jle
jmp
into
outsb
adc
adc
cmp
xchg
mov
inc
jecxz
fiadds
or
hlt
mov
mov
lea
dec
mov
mov
popl
pop
movsb
roll
mov
fxch
mov
pusha
cs
loop
leave
cmpsb
push
dec
inc
std
cmp
cmp
push
adc
pop
loope
fisubs
inc
or
pop
add
ret
xchg
fistps
out
stc
or
inc
sbb
and
fldenv
jmp
sub
sub
add
jle
mov
inc
jmp
pop
sub
mov
test
bound
add
or
mov
dec
hlt
and
das
rcll
pop
mov
xchg
mov
cmpsb
inc
and
aam
xchg
sbb
jo
mov
jge
inc
mov
push
arpl
add
inc
mov
repnz
mov
sub
mov
out
mov
cmp
aam
mov
shll
popa
mov
mov
lea
adcb
or
xor
push
inc
or
push
sbb
cwtl
cltd
mov
cli
je
dec
pushf
mov
mov
shl
fmuls
jmp
xor
mov
or
pop
cs
mov
pop
cwtl
mov
repnz
xlat
pop
in
jge
ret
dec
and
pop
lock
sbb
adc
add
jmp
sub
dec
xor
fs
out
adc
lods
adc
mov
test
sub
inc
dec
outsl
shll
mov
fld
cmp
jb
xchg
xchg
mov
cmp
or
push
pop
dec
pop
xor
arpl
sbb
push
cwtl
pushf
sti
push
sub
bound
adc
inc
cwtl
sub
mov
cwtl
mov
stos
pusha
clc
out
stos
test
scas
push
testl
dec
mov
pop
dec
xchg
xor
mov
jns
sub
fisttps
jge
xorb
jnp
ss
repz
inc
lret
fs
sbb
add
or
ja
sub
jns
out
xchg
imul
fidivrs
mov
inc
loop
or
lock
test
test
mov
and
sub
add
xor
xchg
jae
movb
jae
add
aam
inc
into
inc
cmp
int3
fwait
xchg
pusha
outsl
cmpsl
mov
stc
mov
xlat
add
fidivrl
loope
lcall
or
mov
xor
movsl
iret
cmp
decl
mov
loop
sbb
push
cmp
dec
and
mov
repnz
not
dec
xorl
cmc
mov
or
mov
cmpsb
pop
mov
jp
test
scas
pop
or
push
xor
flds
mov
jp
cld
mov
sbb
addl
out
bound
cmc
or
les
imul
ds
repz
mov
negb
jecxz
shlb
xor
movsb
adc
rcll
mov
pop
dec
pop
lret
repz
sbb
xlat
mov
std
outsb
ds
cmp
lcall
inc
push
adc
sbbb
xchg
ljmp
jle
ljmp
mov
xor
cmp
cmp
mov
inc
dec
adc
adc
adc
push
and
cltd
dec
sbb
lods
stos
or
aaa
adc
push
push
sub
ljmp
sbb
ss
xchg
mov
addb
sti
mov
mov
lahf
imul
arpl
daa
push
mov
xchg
loopne
add
sbb
sbb
add
popa
jbe
dec
and
push
push
arpl
scas
lods
stos
sbb
fidivs
fbstp
push
push
mov
psrad
pop
pop
jbe
push
mov
add
or
stos
mov
jmp
icebp
popa
movl
jbe
int
sbb
or
ljmp
pop
dec
sub
sbb
adc
xchg
insl
imull
sbb
mov
ss
imul
and
jbe
mov
addr16
dec
insl
mov
mov
lahf
in
pop
mov
push
cmp
jb
mov
cmpsl
mov
fsubrs
aaa
xor
pop
pop
out
pusha
adc
pop
lods
xchg
mov
or
fstl
adc
mov
inc
insb
cltd
or
jmp
ja
push
imul
rolb
inc
cs
pop
add
add
loope
xchg
and
xchg
xor
mov
inc
inc
mov
push
add
out
mov
flds
jle
rolb
fldt
mov
adc
in
daa
pusha
mov
sub
cmp
lods
adc
pop
ret
insb
sbb
mov
sbb
push
fs
mov
sbb
and
inc
jbe
jg
mov
cmp
mov
pop
shrl
sub
pop
cmp
xorl
ljmp
push
sub
pop
push
cwtl
adc
xor
fcompl
les
bound
pop
or
inc
inc
loopne
lret
or
push
add
outsb
test
dec
dec
cmc
ljmp
adc
jle
jle
ret
cli
call
mov
push
add
push
mov
arpl
push
addr16
jns
ret
stc
sahf
pop
rolb
or
insl
cld
sub
pop
sbb
ljmp
call
jge
arpl
xchg
xchg
lea
fucomip
shlb
data16
enter
push
cwtl
push
clc
out
pop
xor
orb
das
out
cmp
js
push
xchg
roll
test
cmp
and
push
or
leave
mov
dec
ljmp
ds
sahf
push
out
inc
test
das
in
ja
ficomps
add
and
push
sbb
lret
clc
insl
cmp
push
imul
lods
leave
jne
fsubrl
push
sub
cld
jae
cmp
in
dec
test
xor
stos
xchg
xor
xor
pusha
mov
dec
movsl
iret
outsb
andl
xchg
or
cmp
xchg
out
mov
rcll
sbb
nop
push
out
sbb
loopne
outsb
and
lock
or
push
pop
dec
inc
incl
lods
cmpsl
xchg
and
loop
sbbl
xor
in
test
in
rorb
ret
adc
adc
enter
test
sti
ss
mov
and
push
xchg
mov
ljmp
mov
in
in
mov
pushf
jecxz
incl
mov
mov
pop
insl
and
add
jmp
add
mov
jp
repz
dec
adc
pop
inc
das
dec
sahf
lock
cmpsl
mov
cmp
hlt
rcll
jle
xor
sub
aaa
pop
push
imul
add
pop
xchg
fdivs
push
lock
fsubrl
mov
call
cwtl
push
pop
out
mov
int3
jno
aas
dec
rcrl
ror
std
xchg
sub
daa
sub
inc
jl
jge
imul
sub
xchg
lcall
loope
out
pop
mov
mov
push
test
ret
cmp
loope
push
dec
jmp
xor
dec
icebp
mov
movsb
mov
dec
mov
fcmovbe
xchg
out
sbb
add
sarl
mov
jl
dec
jg
in
out
or
mov
leave
mov
adc
sbb
adcb
mov
xchg
pop
aaa
movsl
xchg
decb
dec
sbb
call
paddb
xchg
inc
and
jle
sbb
mov
jmp
jbe
sub
xchg
push
fwait
pop
jo
fs
mov
sti
push
push
and
inc
rcrb
cli
mov
aas
add
repnz
xchg
movsl
aaa
jo
sub
dec
mov
or
mov
cltd
pop
fxch
mov
dec
dec
bound
pop
xchg
mov
adc
cld
stos
sub
sbb
fmuls
fists
fcmovne
xchg
aaa
add
lods
add
add
push
cmpsl
fucomi
lock
into
out
shrb
sub
loope
pop
ret
mov
jbe
push
jle
rcll
inc
cmpsb
adc
or
adc
push
popa
pcmpeqd
dec
add
fidivrl
in
inc
rorb
mov
jl
fcompl
ljmp
add
cmpsl
or
xchg
imul
repz
dec
jno
mov
aad
cmp
sbb
adc
or
cmp
push
or
push
int3
lods
loope
dec
leave
mov
jns
iret
pop
loope
jg
cmp
out
popf
in
aad
daa
mov
pop
and
ljmp
sarl
pushf
cmp
pop
and
push
leave
std
dec
mov
and
aaa
pop
pop
jle
mov
sbb
iret
es
adc
inc
repz
stos
push
movsl
lret
imul
lret
mov
cltd
das
dec
faddp
ficoml
out
push
movb
cmpsl
mov
mov
icebp
lods
stos
cli
rol
push
out
cmp
hlt
cmc
not
test
stc
pop
mov
pop
mov
js
aad
mov
jg
mov
sbb
mulb
out
fdivp
sbbb
mov
fwait
imul
repz
in
ret
jge
loop
or
sarb
cwtl
in
aad
fadd
cmpsb
push
into
jg
stos
adc
test
movl
cld
jmp
aad
pop
in
fsts
xor
cmp
dec
mov
loopne
sarl
call
add
sbb
cltd
sar
ljmp
mov
sub
cmp
xlat
sub
jg
nop
stos
into
xchg
faddl
and
ret
int
sbb
jl
scas
fcmovnbe
insb
cs
je
movsl
push
notb
adc
dec
loop
jbe
ljmp
bound
or
setne
sub
icebp
sbb
jecxz
lods
loop
flds
mov
or
mov
and
fiaddl
mov
jbe
frndint
repz
pop
in
icebp
cmp
jbe
lods
inc
popa
cli
cmp
dec
cmp
inc
fcomi
pop
test
pop
stos
mov
sarl
jg
rcrb
adc
in
adc
into
js
pop
xlat
pop
or
push
sub
ret
fistl
loop
fldl
add
sub
bound
jno
ss
mov
push
movsb
in
mov
arpl
add
pop
les
and
ja
sahf
daa
fidivl
es
scas
jb
adcl
fimuls
nop
add
pop
jne
iret
fstpl
pop
xor
mov
and
and
inc
mov
in
pop
negb
pop
adc
mov
repz
xchg
push
and
dec
enter
xchg
out
cli
or
out
xchg
sbb
push
sub
mov
aad
jp
test
dec
je
push
imul
in
idivb
hlt
jl
in
sti
stc
js
or
scas
test
jge
lcall
je
mov
push
outsl
shll
dec
int
mov
pop
push
fwait
dec
mov
mov
cmp
or
aam
jle
adc
xor
mov
adc
insb
into
lahf
sub
mov
pop
int3
aad
or
enter
andb
xchg
mov
cmp
fnsave
push
cld
adc
in
cwtl
dec
cwtl
sbb
sbb
adc
ljmp
jbe
cmp
xchg
push
sub
mov
ljmp
inc
mov
pop
pop
mov
dec
jg
aad
hlt
jmp
or
daa
lods
pop
fmull
shlb
jbe
add
out
insl
call
stos
push
mov
scas
push
iret
pop
aam
and
rcl
pop
pusha
sbb
sub
xchg
bts
mov
pop
clc
mov
mov
mov
test
xor
adc
xchg
inc
out
jnp
sbb
inc
or
mov
jecxz
aam
mov
sbb
cmp
test
scas
adc
push
cmc
mov
jmp
daa
insb
test
xchg
cmc
fldcw
jne
sub
push
pop
arpl
loope
fnstenv
dec
lahf
xor
lret
xchg
test
inc
jns
sahf
sbb
jl
shl
test
mov
addr16
mov
mov
push
and
into
or
mov
mov
daa
lret
push
shlb
cmp
jb
ret
ret
adc
add
daa
sub
daa
xchg
sub
add
cli
or
push
push
add
repnz
sbbl
mov
lods
push
js
inc
test
mov
ret
cmc
enter
sbb
mov
pop
sbb
cmp
push
push
inc
mov
shll
or
xchg
add
out
sbb
ret
repz
pop
or
inc
pop
rcr
cmp
mov
rcrl
lret
aas
mov
js
inc
xchg
dec
pop
xchg
adc
test
inc
mov
movsl
daa
and
mov
aas
ja
loopne
inc
mov
and
jmp
and
cmp
out
stos
push
jo
ja
mov
push
pop
sub
xchg
mov
lret
imul
in
push
xchg
jmp
in
movsb
pushf
popa
mov
movsl
cmp
jp
add
cwtl
cmpsb
inc
add
jl
popf
push
ja
mov
inc
and
adc
jp
pop
repz
cli
cmc
into
push
sub
lret
and
jno
lods
sbbl
mov
ljmp
inc
adc
lret
dec
cmp
xor
mov
push
xor
dec
lcall
les
sbb
mov
sbb
pop
daa
mov
adcl
mov
iret
mov
imul
push
stos
mov
out
inc
aas
cmpsb
mov
dec
adc
mov
mov
push
cmp
cs
out
ljmp
mov
out
iret
mov
cmp
xchg
add
lds
scas
adc
pusha
subl
mov
mov
xor
push
stos
push
out
xor
cltd
aaa
leave
and
push
mov
popf
imul
neg
shlb
lds
sbb
mov
xor
and
ss
arpl
xchg
testl
xchg
mov
xchg
xor
sub
mov
inc
jno
aas
repz
scas
out
dec
scas
sar
or
clc
dec
fsubs
mov
xor
mov
pop
add
cwtl
rolb
cmp
mov
and
in
xchg
mov
cltd
xor
inc
lret
adcl
cmp
mov
sbb
inc
dec
dec
filds
sbb
pop
push
cmpsb
iret
jle
adcb
adc
mov
loopne
push
dec
pop
cmp
aad
out
in
mov
cmp
aaa
adc
shrb
cmp
lahf
inc
mov
leave
sahf
xor
or
push
pusha
jp
cmp
aam
lcall
scas
lds
negb
push
cwtl
adcb
sub
xlat
inc
mov
out
mov
mov
pusha
cltd
testb
jecxz
mov
popa
xchg
xor
xchg
in
fs
cmpsl
pop
cmc
ficoml
mov
add
insl
call
push
imul
xor
sub
mov
scas
ja
pusha
rolb
sbb
adc
arpl
mov
pop
jae
mov
cmpsl
in
add
lods
je
jmp
add
fsubrl
jnp
pop
xchg
mov
xchg
popa
or
cs
loopne
je
pusha
aad
stos
and
popa
stos
and
mov
sbb
fisubrs
adc
lahf
push
and
xorl
dec
xor
xchg
call
jns
xor
xchg
xor
pop
xor
es
les
ret
stos
mov
push
loope
aaa
pop
dec
cmc
aas
xor
lcall
andb
cmpsb
outsb
pop
dec
outsb
and
sub
cmp
addr16
inc
hlt
lret
ret
in
pop
jl
adc
push
cmp
inc
iret
ret
inc
stc
daa
fwait
sar
jnp
mov
add
pop
or
mov
ret
bound
pop
arpl
cmp
mov
iret
sti
lahf
cmpsl
push
cmp
filds
push
es
xlat
xchg
lret
xor
cmp
jp
and
mov
ret
cmpsb
loope
repz
movsb
shrb
xlat
push
xchg
movsb
es
stos
movsl
adc
sub
lock
add
xchg
out
mov
aas
adc
jbe
cwtl
dec
mov
cmp
in
psrlq
mov
push
push
loope
xchg
push
xor
fdivrp
repz
lcall
xor
adc
or
adc
aaa
xchg
adc
xchg
or
into
mov
jge
jle
mov
push
clc
pop
mov
pop
jge
in
popa
loop
dec
mov
sbb
xor
mov
fbstp
and
adc
hlt
int3
lcall
sub
pop
mov
mov
insb
nop
xchg
cmp
mov
push
jl
mov
popf
push
stos
lret
or
jecxz
jge
scas
mov
add
sub
jp
loope
mov
adc
sbb
bound
cmc
mov
js
lret
push
mov
push
inc
pop
imul
out
jbe
pop
sbb
jo
cmp
sbb
jmp
fs
pop
pop
cltd
mov
add
cmpsl
and
mov
sub
leave
je
cmpsl
in
jb
ja
sbb
js
jne
test
add
cwtl
dec
sti
push
mov
mov
ljmp
or
adc
sub
lods
or
or
outsb
mov
cli
rcll
sub
or
and
cs
imul
or
mov
or
lock
pop
iret
popa
insl
push
jmp
insb
mov
and
inc
das
dec
inc
sti
ja
cmp
aas
lock
ja
or
jne
imul
push
pop
mov
pop
cmp
lods
int3
sbb
lds
mov
push
movb
sbb
lret
add
nop
adc
insl
movsb
js
inc
xor
add
jb
adc
sub
or
mov
popf
fiadds
call
stos
lea
decb
cld
gs
ss
xchg
push
fidivrl
cltd
cmpsl
adc
out
xor
mov
sub
shlb
lea
enter
add
push
jp
jae
paddsw
mov
loop
je
mov
mov
fnstenv
xor
insl
cmc
xlat
jnp
imul
loopne
mov
je
push
fistl
call
inc
or
inc
fildll
not
dec
sbb
and
xchg
test
xchg
push
dec
fisubl
sti
push
cld
pop
jbe
inc
aas
sbb
data16
push
sti
and
ret
and
xchg
or
inc
test
ss
push
in
addr16
out
and
mov
sbb
pushf
sbb
dec
je
das
jmp
inc
imul
cmpsl
fbstp
and
dec
inc
adc
pop
in
mov
mov
push
test
push
imul
mov
mov
inc
cmp
je
pop
lds
xor
or
in
jmp
xor
mov
sub
insl
and
inc
mov
inc
pushf
jns
cwtl
testl
shr
mov
cmpb
bound
pop
test
rcll
push
dec
mov
hlt
xor
mov
pop
or
outsb
daa
sub
outsl
sub
incb
lds
ret
and
rorl
gs
leave
push
dec
mov
jecxz
lods
jb
mov
sub
ret
cmp
mov
jae
and
cmp
test
jbe
mov
push
stos
pop
jae
das
add
aas
fimull
jmp
leave
test
add
jo
add
mov
out
in
mov
nop
aad
test
adc
fnstenv
notb
mov
aas
inc
mov
sbb
push
jecxz
dec
cmp
pop
out
cmp
inc
push
inc
pop
dec
mov
int3
mov
out
iret
je
subb
fistpl
jg
dec
enter
cmp
push
mov
imul
mov
rclb
and
outsl
cmp
dec
vmovsd
sbb
lock
pop
jnp
sub
int3
adc
pop
push
xchg
leave
cli
push
xchg
clc
ret
stc
push
and
pushf
and
adc
pop
loope
adc
in
loop
jns
frstor
inc
mov
xor
arpl
insl
jbe
and
mov
lcall
stos
pop
lcall
push
call
jg
out
bound
push
loopne
or
or
cmc
inc
mov
and
or
dec
add
inc
ja
fists
mov
and
xor
outsb
inc
lea
dec
push
dec
lcall
pop
xlat
sub
sbb
jo
movsl
sub
mov
or
repnz
add
jecxz
adc
lahf
lret
push
lahf
and
dec
jle
lcall
sub
or
out
xor
shll
flds
xorb
and
std
test
xorb
pop
ss
shrb
sbb
jl
inc
adc
cmp
sub
cmpsb
push
jp
jnp
adc
cmp
aas
jo
lds
pop
outsb
notl
adc
mov
or
inc
int
repnz
lds
sub
mov
cld
pop
int
ret
cmp
cmp
push
add
adc
mov
lods
fstpt
push
cmovl
stos
add
mov
add
sub
xchg
stos
test
pop
add
sbb
repnz
inc
in
xchg
push
into
pop
out
lods
sub
xor
in
xchg
dec
inc
lret
insb
movsl
adc
in
nop
stc
jg
jp
fsubrs
jl
and
xor
fldenv
lea
jns
jo,pt
mov
push
es
inc
jp
sbb
add
jne
pop
pop
ja
fadd
clc
into
inc
data16
mov
mov
ja
aas
dec
cwtl
xchg
loop
mov
mov
push
xor
xor
daa
or
sub
out
jae
push
fidivs
addr16
loopne
test
imul
stos
sub
fisttpl
jo
xlat
xchg
cs
int
movsb
popa
std
mov
fstpt
sub
mov
jle
into
mov
nop
pusha
sbb
add
xchg
xor
add
push
adc
outsl
or
mov
cmp
stc
jp
imul
inc
and
cmpsb
movsb
adc
mov
sub
test
xor
push
adcb
neg
cmpsl
insl
mov
rorb
dec
and
and
dec
out
push
mov
arpl
xor
scas
insb
push
shlb
mov
pminub
imul
jnp
lret
jge
fimull
push
xor
jecxz
aad
jbe
test
leave
movsb
push
sbb
adc
daa
sub
mov
inc
cwtl
xor
orl
or
jg
addl
push
orl
ror
mov
inc
jo
popa
jnp
imul
inc
stos
inc
out
jne
cmp
loop
movsb
imul
add
sbb
add
dec
mov
pop
push
gs
imul
sbb
loopne
inc
sub
je
mov
push
call
adc
or
lret
inc
mov
jb
mov
mov
jae
outsb
push
hlt
stos
xlat
mov
mov
and
fdiv
mov
xor
xchg
lcall
shll
sbb
cmpsb
negl
xchg
xchg
pop
ljmp
scas
pop
jne
std
sbb
xchg
push
push
add
push
pop
mov
pushf
lea
add
add
dec
dec
cli
or
shrl
or
pop
xchg
jne
adc
sbb
jno
test
int
icebp
and
je
clc
and
cmc
es
emms
in
stos
pop
sub
xorl
or
add
mov
xor
xor
push
mov
outsl
pop
sti
roll
jg
pop
jnp
jbe
addr16
cmpsb
cmp
dec
mov
mov
cmp
pop
into
hlt
out
xchg
push
repnz
xchg
inc
push
addr16
xor
mov
addr16
sbb
cmp
xlat
fcmovbe
jg
hlt
lock
pop
xchg
jle
mov
mov
xor
xor
call
or
mov
jp
subb
call
pop
sti
dec
mov
pop
xor
loopne
xchg
sub
stos
cmpsl
or
lret
fistps
inc
repnz
pusha
addr16
arpl
fiadds
sub
movsl
gs
ljmp
push
pushf
dec
sbb
xor
sahf
xor
rcll
push
xchg
fdivrs
popa
movsl
popa
pushf
push
jno
pop
je
push
mov
mov
divl
ljmp
or
mov
adc
pop
add
jecxz
jnp
int3
sahf
mov
mov
cmp
mov
push
and
clc
push
or
mov
pop
lret
js
xor
ficoml
lgdtl
jl
lock
cmp
mov
pop
imul
or
in
xor
pushf
sub
mov
or
xchg
mov
lcall
mov
pop
xchg
clc
mov
sbb
stc
and
mov
mov
adc
add
inc
shr
popf
movsb
jmp
inc
out
test
add
negb
fwait
cmp
mov
jbe
mov
add
jecxz
inc
jns
sbb
mov
mov
imul
out
and
out
mov
pusha
loopne
push
mov
and
xchg
push
cmp
jb
mov
int3
or
jmp
faddp
loope
jbe
jg
jecxz
das
cmp
and
repz
fsubrl
dec
popa
sbb
sbb
out
sbb
mov
xor
nop
icebp
jbe
mov
mov
iret
mov
stos
jp
jmp
ds
in
call
and
in
push
or
es
inc
push
cli
mov
les
mov
cmp
cld
mov
pop
xor
xor
push
fs
lret
aaa
mov
jns
xchg
mov
aad
mov
iret
aaa
xchg
and
or
add
and
xchg
sti
mov
sub
in
orl
mov
cwtl
sbb
inc
out
ja
stos
arpl
es
jp
test
sub
pop
and
lret
dec
lock
loopne
push
inc
jns
aad
dec
xchg
inc
jl
aam
int
xlat
xchg
xchg
mov
xor
insl
add
out
aas
pop
add
aad
fisubs
add
popf
lods
test
mov
cmc
sub
push
inc
mov
jl
out
pop
push
cs
fwait
lea
jno
adc
icebp
push
inc
idivl
jge
push
out
outsb
int3
js
add
xor
jle
dec
mov
les
jb
mov
fstl
cld
bound
inc
test
loopne
sbb
xor
inc
mov
aaa
lcall
insb
popf
stos
notl
or
call
imul
ljmp
bound
imul
add
iret
fs
addr16
pop
sbb
icebp
or
into
xor
outsl
into
les
enter
push
pushf
push
negb
inc
xchg
cld
pop
dec
jp
fldt
arpl
lret
repz
xor
pop
sbb
mov
js
fs
nop
inc
jns
pop
lock
sti
bnd
mov
cwtl
call
jmp
punpckhwd
cs
mov
push
add
mov
insb
sub
sahf
pop
test
dec
or
mov
jmp
popa
xchg
cmp
push
movsl
arpl
push
or
ljmp
push
mov
aam
sub
lret
dec
loopne
imul
test
test
cltd
jo
inc
sbb
testb
add
shll
mov
rcrb
mov
popf
mov
xor
jb
pushf
in
sbbl
push
rclb
xor
mov
aaa
mov
xchg
test
and
mov
sbbl
fcoms
cmc
pop
jle
es
fisubl
add
mov
mov
out
or
cwtl
inc
inc
xchg
cli
and
sahf
xorl
pop
pop
pop
pop
push
xchg
outsl
in
ss
arpl
rcll
sar
loop
int
mov
push
sub
iret
mov
ret
mov
test
or
add
sub
lahf
and
ret
repz
jno
mov
pop
repz
xchg
dec
call
call
dec
add
push
in
add
xor
sub
sub
mov
data16
push
mov
leave
js
ss
dec
popa
outsb
cmp
jle
fimuls
movsl
cmpsl
xor
sub
sub
xchg
test
mov
lea
dec
dec
sbb
pop
adc
lock
mov
sub
sbb
jl
dec
in
ds
xorl
repnz
push
sub
cli
rol
scas
pop
push
pop
adc
in
xor
jb
daa
iret
push
inc
xlat
les
or
lds
dec
sub
popa
jmp
call
jp
imul
outsl
leave
cmp
out
pop
jl
loope
pop
jecxz
adc
pop
das
cld
mov
xlat
icebp
movsb
mov
out
dec
jmp
stos
mov
jle
sbb
aad
call
leave
lods
jmp
jnp
and
sbb
or
inc
addl
dec
mov
into
add
pop
push
fisubl
add
pop
hlt
mov
shlb
jle
mov
and
jae
cltd
mov
push
xlat
or
dec
ret
sbb
jno
in
mov
imul
jnp
fwait
int
mov
sbb
test
cs
popa
lds
orl
sub
ffree
movb
cmp
pop
sub
fnclex
clc
jne
xchg
or
adc
cmp
push
test
jno
js
push
out
mov
xchg
xor
mov
lds
sub
mov
cmpsb
imul
out
in
mov
outsl
cwtl
dec
cltd
inc
out
push
mov
fsubs
repz
ja
data16
pop
pop
in
cmp
push
out
adc
in
shr
mov
xchg
mov
nop
or
out
in
jge
fwait
aad
les
dec
dec
stos
repz
or
jo
jbe
xor
inc
adc
dec
dec
xor
loopne
sbb
mov
stc
fcompl
subb
icebp
aam
cmp
add
jae
xchg
or
push
cmp
aam
cmpsb
jecxz
adc
insl
dec
punpckhbw
dec
sahf
mov
and
xorb
adc
and
lock
in
mov
imul
add
nop
data16
pop
ljmp
cmp
cmpsl
add
sti
xchg
test
in
xor
adc
jnp
jmp
hlt
mov
pop
dec
xchg
jae
stos
pusha
out
mov
pop
sub
fimull
nop
mov
pop
mov
jl
iret
sub
aas
pusha
xchg
xor
and
stos
xchg
inc
icebp
repnz
and
sub
fcomps
sub
dec
pop
mov
dec
aam
sub
xchg
shrb
mov
mov
sahf
sti
pop
test
divb
push
hlt
cmp
cmp
mov
out
aam
daa
cmpsb
xchg
dec
rol
sbb
mov
lods
mov
std
push
mov
in
pop
aad
mov
mov
jne
clc
lods
mov
cmp
or
xor
mov
mov
gs
enter
test
repz
inc
dec
in
pusha
sub
cwtl
pushf
sub
jo
and
jo
lods
push
dec
stos
scas
icebp
pop
inc
xor
add
add
daa
lods
fcomps
pop
jne
gs
jle
stc
sbb
sbb
jns
cmpsl
lret
int3
lret
test
aad
pop
leave
cmpsb
sub
ja
fildl
push
in
loopne
jg
pop
mov
insl
pop
data16
ffree
subb
ds
mov
ja
in
cmpsb
out
dec
jbe
loope
int3
adc
sbb
push
sub
cmp
and
cmp
jnp
movsb
icebp
xor
sub
je
mov
jne
repnz
loop
rcr
mov
jae
jmp
ret
out
or
jne
push
cmpsl
pop
adc
sub
mov
pop
xor
mov
aaa
cmp
mov
add
lahf
xor
in
jns
mov
out
inc
inc
and
mov
int
jmp
push
lahf
sub
push
jg
ja
imul
push
out
das
filds
push
mov
sub
sub
adcb
mov
mov
jge
adc
fimuls
and
mov
pop
xor
mov
rcrl
sbb
iret
repz
pop
xor
daa
imul
divb
mov
leave
dec
ret
jb
mov
or
xor
sbb
lahf
xchg
inc
ss
jne
fs
jns
sysret
mov
mov
mov
repnz
dec
add
shll
and
inc
push
or
adc
pop
mov
imul
jmp
mov
lods
mov
test
sahf
and
mov
mov
mov
jbe
leave
shll
or
dec
xlat
cmpsl
decl
adc
adc
fstl
shlb
fistpl
inc
loop
xor
inc
mov
andl
rcrb
cmpsb
mov
das
decb
lds
js
cld
jg
inc
jmp
int3
mov
sub
cltd
je
fisubrl
xchg
inc
pushf
fidivl
dec
pop
out
repnz
and
sbb
xchg
sub
pop
jmp
testb
ret
jp
andl
roll
dec
frstor
into
stos
lods
in
jle
xchg
insb
aad
xor
push
jo
in
sbb
leave
push
add
mov
rcrl
add
fcmovnb
sbb
xchg
mov
daa
mov
and
mov
loop
sub
jmp
add
test
push
or
xchg
xchg
ret
shl
das
mov
jle
or
and
mov
jge
arpl
or
jb
cli
gs
adc
lea
xchg
notb
push
mov
shlb
shr
shll
push
in
hlt
decb
jb
mov
pushf
xor
sub
xor
xlat
test
cmp
rorb
push
je
mov
sbb
mov
divl
pop
xchg
add
dec
lock
nop
leave
dec
lea
pop
popa
pop
fldenv
dec
ficompl
pop
aad
pop
add
cmpsl
add
sbb
jne
push
jg
mov
es
idivb
scas
cld
fdivs
push
ss
or
mov
xor
or
jno
mov
dec
pop
mov
xchg
addr16
jmp
aas
inc
aad
sub
dec
jl
mov
push
insl
push
jmp
dec
loopne
mov
push
and
loopne
adc
mov
lock
sbb
lock
addb
test
push
xor
cmp
pusha
jae
ljmp
push
addr16
mov
bound
add
shlb
mov
repz
mov
divl
mov
push
int3
nop
pop
lret
xor
ja
sar
sub
mov
pop
xchg
std
paddq
jle
push
or
cwtl
sub
and
cmp
jmp
push
out
out
dec
jns
add
sub
cmp
cmc
lock
cwtl
iret
adc
ljmp
mov
jbe
setne
int
loope
rcrb
out
int
das
pop
adc
in
pop
fprem
test
inc
jg
pusha
push
inc
push
mov
leave
in
inc
xchg
xorb
sub
adc
rcll
xor
cmp
iret
lahf
xor
jg
add
xor
popf
addr16
pop
dec
cs
push
cmc
jecxz
xor
inc
jb
cmp
jp
inc
or
push
out
xchg
sbb
add
add
add
add
add
add
add
add
or
js
add
jge
js
nop
nop
push
mov
dec
fidivl
adc
push
pop
xor
add
out
xor
push
aaa
lret
shrb
push
hlt
pop
dec
sbb
xor
xor
mov
and
ficoms
xor
daa
sbb
addl
push
sbb
dec
repz
sbb
xchg
sub
nop
bound
les
and
mov
sti
sbb
inc
mov
imul
inc
push
mov
jo
pop
push
call
lds
xchg
ss
je
fmuls
outsb
stc
fldpi
adc
gs
xchg
xchg
mov
and
and
mov
leave
outsb
push
lock
mov
jl
pop
popa
add
ss
popf
nop
cmpsb
xchg
fwait
and
enter
dec
repnz
arpl
mov
dec
ss
hlt
or
ja
adc
pop
and
jg
jge
or
ljmp
pop
xchg
mov
in
dec
jno
insl
stos
jle
clc
xchg
mov
or
popf
jp
fmuls
sub
mov
sub
scas
shr
jns
js
ficoml
daa
inc
pop
dec
sbb
es
mov
pop
sub
mov
cld
rclb
adc
pop
sbb
add
inc
adc
and
adc
inc
lahf
adc
std
xchg
mov
dec
inc
jl
jg
xchg
out
mov
std
out
sub
cld
in
push
xor
popf
shlb
fiadds
jle
jbe
xlat
int3
mov
out
xor
idivb
or
lahf
fs
ret
daa
adc
pushf
call
insb
mov
sbb
stos
out
pop
xchg
and
int
cmc
cwtl
mov
mov
cmp
loope
cmp
in
jb
cmpsb
cmc
shl
jp
subb
faddl
mov
insl
cmp
mov
push
gs
cs
daa
push
lds
lahf
pushf
mov
sub
fdivrs
ret
andl
or
fwait
or
and
dec
push
fistl
pop
das
daa
xor
arpl
cmp
adc
mov
dec
sub
in
lods
xchg
jl
mov
shrl
shrl
shl
push
jge
mov
das
push
sbb
pop
inc
mov
mov
sarl
lret
pusha
inc
fimuls
ja
lcall
subl
test
in
addl
aad
xchg
je
jnp
mov
lea
fsubs
add
or
out
aaa
ds
push
xchg
es
mov
and
fcomps
fwait
mov
test
out
sub
cmp
out
jp
mov
fcompl
in
pop
pushf
xor
js
lret
cmp
mov
adc
sbb
dec
les
or
jo
fneni(8087
mov
mov
jg
xchg
cmp
jno
xchg
and
mov
filds
addl
lcall
or
pop
xor
sub
or
add
aaa
sbb
mov
cmpsb
test
fcmovnbe
cmc
push
imul
test
aam
mov
clc
add
pop
rcll
rclb
adc
fisttpll
sub
mov
sahf
mov
and
jo
jo
addr16
repnz
cmp
test
push
jg
mov
mov
pop
stos
push
shl
push
cmp
in
out
lahf
loopne
das
xor
js
dec
inc
push
inc
icebp
mov
jno
and
mov
xor
and
jg
sub
push
scas
sub
add
aaa
sub
leave
xor
push
pop
cld
test
jbe
ficompl
sbb
dec
sbb
icebp
subb
data16
pop
iret
dec
arpl
push
aaa
jp
idivl
lret
dec
pop
loopne
bound
inc
clc
nop
mov
push
gs
jb
xchg
cltd
cmp
das
mov
push
sti
mov
leave
fmuls
movl
xchg
bound
and
xchg
push
pop
cltd
dec
mov
sarb
outsl
pop
xchg
dec
dec
shr
inc
fstpl
jmp
into
call
movsb
data16
fcmovnb
js
adc
lods
outsb
mov
lret
imul
xchg
pop
lods
lods
sahf
add
std
inc
jmp
cltd
ja
aad
and
jnp
insb
push
xchg
cmp
out
sub
mov
test
loopne
xor
xchg
add
fists
mov
rorl
jne
xor
pop
mov
xchg
add
adc
in
ror
push
fstpl
mov
add
movsb
iret
jnp
cs
sub
or
dec
mov
inc
push
clc
cmpsl
and
imul
subl
je
rcrl
dec
sbb
xchg
pusha
repz
mov
repnz
adc
arpl
sub
stos
clc
jl
xchg
jmp
and
ret
inc
repnz
jae
mov
cmpsl
pop
push
jbe
push
mov
add
loopne
outsb
lret
in
adc
jne,pn
pop
jb
mov
xchg
stc
mov
lret
add
adc
int3
xchg
rcrl
rorb
mov
adc
popf
loop
sub
out
push
jge
insl
pop
cltd
ret
and
test
out
jge
push
pop
leave
cmp
push
inc
xor
inc
xlat
sub
out
adc
push
into
xchg
cmpsb
pushf
xlat
dec
and
cmp
and
aaa
sub
xchg
xor
or
aad
aas
xor
sub
push
pop
movsl
jno
fiadds
sub
jae
jo
push
adc
pop
int3
insb
mov
pop
insl
in
mov
pop
jne
fdivrl
stos
in
xor
idivb
and
cwtl
jg
stos
add
add
lods
loopne
jmp
push
call
jnp
sbb
xchg
int3
nop
dec
mov
inc
loopne
rorb
pop
pop
xchg
loope
popf
mov
lahf
pop
shlb
mov
shl
mov
sbb
lods
add
mov
imul
mov
iret
ret
cmp
int3
jp
lahf
out
inc
ret
shl
sub
popf
mov
pop
popf
mov
bound
scas
mov
lahf
push
xchg
inc
xchg
push
add
mov
lret
ja
adc
dec
sbb
sahf
dec
cs
jge
inc
xor
mov
xchg
inc
cmp
sub
push
cli
int
les
scas
imull
ret
int
ret
pop
dec
push
pop
lcall
ja
xchg
fisubrs
jmp
mov
mov
jle
in
hlt
jecxz
push
jbe
dec
push
js
or
xor
pusha
scas
dec
repnz
or
sahf
dec
adc
rcrl
dec
aad
dec
out
jno
cltd
push
out
rcrl
mov
scas
in
dec
jg
xchg
and
stos
mov
lds
nop
stos
mov
in
push
out
lcall
adcl
fimuls
or
jae
xchg
fidivrl
mov
sti
std
jp
shlb
sub
pop
and
jbe
xchg
dec
mov
adc
pop
or
push
add
lret
mulb
xor
sarl
dec
adc
out
mov
rcr
sub
lret
mov
pop
loop
insb
pusha
incl
or
call
fs
cmpsb
push
xchg
cli
dec
sti
push
cli
leave
xchg
imul
lds
mov
ret
mov
leave
add
addr16
inc
scas
mov
fs
ficompl
lea
test
jbe
xchg
jg
icebp
es
cmp
bound
aaa
imul
mov
ds
dec
ds
jmp
cli
xchg
sub
pop
mov
das
dec
pop
pop
sub
loopne
outsl
imul
dec
andb
imul
roll
sub
jge
xchg
nop
inc
jnp
insl
std
pop
rol
mov
xchg
sbb
int
mov
sti
sbb
inc
mov
mov
ja
cmpsb
out
dec
mov
and
inc
push
jnp
lret
inc
decb
jnp
mov
dec
test
insb
add
mov
test
sbb
pop
dec
or
js
push
mov
cmpsb
insl
mov
fcoms
cmp
mov
add
popf
jbe
daa
dec
or
lretw
inc
popf
mov
xchg
lret
push
loopne
jl
cld
pop
iret
push
mov
xchg
cmp
pushl
sub
insb
or
nop
outsb
mov
std
insl
push
push
test
popa
and
stc
push
ljmp
xlat
and
mov
cwtl
in
and
lcall
cltd
mov
inc
sbb
mov
arpl
xor
xchg
mov
or
inc
loop
test
push
or
and
cwtl
or
sbb
mov
test
pop
cmpsl
mov
mov
push
imulb
adc
add
loopne
sub
jp
jge
or
repnz
repz
mov
sub
ljmp
dec
mov
scas
lcall
outsl
jne
pop
xor
mov
int3
mov
divl
dec
in
mov
aaa
int
mov
popa
xchg
mov
dec
aad
xor
ffree
xor
pop
cmp
addr16
or
push
mov
jg
push
sbb
jg
cmp
iret
ja
jnp
in
xorb
jge
bound
repz
pop
dec
or
dec
jbe
mov
add
push
mov
mov
push
mov
pop
in
cmp
add
sahf
jecxz
adc
inc
ret
std
xlat
call
hlt
cmc
test
adc
mov
popa
in
in
or
mov
mov
push
lret
out
sub
pop
push
cli
or
mov
in
aam
mov
inc
or
or
add
sbb
js
jl
mov
int
add
adc
jae
jno
jo
mov
add
fs
filds
nop
jle
mov
xchg
mov
xchg
cmpb
jns
adc
add
push
mov
sarb
add
sbb
or
pop
in
sbb
movsb
cmp
js
xor
add
pop
notb
data16
out
push
jo
nop
leave
or
add
call
popf
fs
shr
popa
scas
xchg
cmp
test
jb
repnz
and
scas
mov
fcmovne
dec
bound
jns
xchg
je
cmp
mov
stc
imul
sub
mov
movsb
cltd
rolb
test
shlb
cpuid
pop
aas
mov
push
add
dec
shll
dec
dec
shll
xchg
arpl
cmp
int3
and
push
fmul
fcoms
rcrb
add
pop
sbb
cmp
ret
leave
dec
push
js
push
rorb
mov
call
cmpsl
sbb
add
data16
sbb
and
push
idiv
dec
stc
mov
cmp
pusha
pop
in
xchg
shll
pop
jp
push
mov
into
xlat
shll
fs
test
aam
dec
gs
cs
push
enter
ja
ljmp
push
cs
mov
aaa
test
and
adc
popa
push
pop
cltd
clc
daa
or
in
daa
inc
in
dec
pop
inc
sub
cmc
sub
sbb
mov
push
pop
shll
push
shlb
adc
xor
imul
lock
popa
ds
das
int3
std
fdivrp
mov
push
fcoms
clc
cltd
popa
ficoms
xchg
mov
clc
sbb
add
das
mov
push
lods
lods
xor
negl
xchg
jns
sahf
mov
mov
or
pop
and
sbb
dec
lock
shrl
lods
cmpl
xchg
jns
adc
pop
xchg
daa
imul
lock
je
outsb
inc
pop
popf
das
dec
sbb
mov
test
cmc
add
scas
cmpsl
mov
push
es
xor
jecxz
mov
icebp
cltd
dec
aas
hlt
xor
jnp
test
pop
fdiv
pop
and
mov
xchg
jbe
or
leave
jnp
inc
fs
sub
cmc
test
mov
dec
dec
shrb
sbb
in
mov
fwait
add
xchg
in
and
inc
push
test
ret
scas
push
ret
add
int3
scas
mov
push
inc
pop
loope
ficoms
push
bound
add
jmp
insl
cmp
lock
movhps
fldenv
pop
sub
enter
jo
subl
push
sub
test
ljmp
pusha
in
xor
aaa
in
cmp
or
testb
cmp
adc
lods
mov
cmc
std
jmp
and
mov
lods
xor
daa
mov
and
cld
fimuls
jb
xchg
in
add
add
movsl
jae
cltd
add
nop
orl
repz
out
jecxz
sub
stos
cmp
and
mov
xchg
ret
cmp
outsl
ds
sbb
sub
mulb
add
cmc
push
insl
leave
adc
cmp
fcoms
sbb
inc
out
xor
mov
in
cltd
inc
je
mov
ret
xchg
cltd
cmp
push
xor
jp
adc
pop
je
cltd
lret
push
xchg
adc
popa
insl
xchg
mov
into
add
xor
pop
js
cmp
and
mov
call
jmp
mov
xor
lods
idiv
ljmp
push
sbb
pop
mov
hlt
xchg
sti
out
push
push
int3
call
sbb
popa
mov
sub
mov
mov
add
mov
cmpsb
cmc
sbb
jg
cmp
insb
out
mov
je
or
nop
mov
insl
and
cmp
cmpsl
ljmp
sbb
or
push
xchg
and
cmp
mov
pop
pop
dec
jge
cs
pop
xor
or
jp
imul
das
pop
scas
aam
scas
call
inc
mov
jg
pop
in
in
aam
xchg
and
jns
loop
outsl
clc
sub
scas
fcmovnu
xchg
and
fisubrs
mov
dec
loop
shll
adc
shr
cmpsl
mov
lcall
repz
dec
push
mov
ds
xor
cmp
or
or
js,pn
inc
mov
cmpsb
add
rcl
sbb
inc
loop
test
sub
in
inc
inc
insb
sub
in
in
pop
jmp
or
addl
sub
into
out
jmp
or
inc
sub
and
mov
and
xchg
pop
clc
adc
add
push
out
in
movsl
jnp
xchg
jp
pop
sub
and
pusha
pop
insl
leave
dec
stos
pop
rolb
imul
dec
fnsave
jo
pusha
jns
mov
add
notl
dec
addb
data16
adc
dec
sub
shll
mov
lret
add
cmp
xlat
pop
jl
testb
xchg
jae
cmp
jge
mov
addl
pop
xlat
sbb
and
mov
loope
daa
xchg
int
lcall
xor
push
loopne
xlat
out
sbb
jno
pushf
adc
js
inc
aaa
jb
cmp
mov
cwtl
and
jg
cmp
sub
push
dec
jo
fcmovnu
adc
cld
mov
xor
fisubl
mov
mov
cmp
addl
inc
sahf
inc
fcompl
ja
idivb
outsb
setbe
jecxz
notb
pushaw
mov
mov
scas
pushf
mov
mov
inc
andl
arpl
repnz
stos
adc
add
adc
sbb
inc
test
cld
rclb
mov
test
jl
insl
dec
pop
lods
cmp
in
fs
sbb
xor
cmpsl
add
nop
les
iret
jae
sub
rol
add
fnstsw
insb
xchg
inc
add
jp
js
js
popa
mov
dec
clc
sub
adc
movsl
add
ret
cld
cwtl
add
mov
icebp
scas
loopne
pop
andb
shl
dec
rcrb
inc
mov
adc
push
notb
imul
lea
mov
mov
test
sub
inc
sbb
imul
xchg
or
mov
dec
jbe
sub
sub
test
cmp
ja
addr16
adc
pop
cmpb
lods
mull
fcompl
sarl
mov
inc
push
mov
push
push
push
fcoml
mov
loope
outsb
pushf
cmpsb
lods
je
sub
fs
js
leave
xchg
subl
mov
lock
imul
jg
add
and
orb
xor
mov
dec
imul
jns
mov
bnd
sbb
or
cs
add
in
shll
xchg
push
jne
subl
cltd
adc
aam
mov
rolb
pop
jge
into
inc
fadds
inc
ret
inc
cmc
inc
pop
cmpsl
imul
aam
call
std
fndisi(8087
push
leave
xchg
pop
cltd
stos
jo
mov
push
shl
cmc
lret
mov
and
js
ds
jne
pushf
lods
dec
les
inc
orb
ss
cmp
sbb
pop
xchg
xor
mov
pop
lock
addr16
jae
jb
ss
divb
mov
push
in
sbb
icebp
clc
test
ret
dec
movsb
inc
or
push
scas
mov
stc
sarb
push
xchg
inc
cmpsl
int3
icebp
xchg
push
mov
sub
push
shlb
or
insb
jne
out
ljmp
popa
std
mov
pop
adc
sahf
or
or
into
push
push
out
pop
test
mov
bound
insl
les
bound
jge
data16
aad
adc
cmpsl
les
mov
movsb
mov
stos
xchg
ja
rcl
inc
sub
aaa
add
lods
loopne
lret
mov
inc
cmp
lret
cmp
add
scas
fdivs
xorl
cmp
cmpl
ret
inc
or
bound
add
std
jns
fidivrs
push
nopl
das
sbb
adc
fldl
insl
inc
out
or
push
out
pop
pop
nop
mov
das
mov
xor
jg
mov
jl
shlb
push
aas
mov
pop
arpl
neg
out
cs
lahf
aad
fwait
mov
add
lcall
insl
inc
je
repnz
jecxz
pop
test
daa
mov
cmp
cli
jmp
cld
das
repnz
daa
adc
sbb
orl
movsl
cmp
mov
push
mov
lods
adc
ja
sbb
cwtl
cmc
inc
mov
inc
fisubl
addl
popf
insl
imul
mov
popa
push
inc
pop
jns
shlb
cmp
out
xchg
adc
lds
dec
push
out
loopne
int3
xlat
mov
dec
out
dec
mov
mov
cmp
sbb
adc
mov
daa
imul
sub
imul
aad
xchg
and
xlat
loopne
icebp
aad
mov
jp
lea
lods
call
nop
dec
ss
or
aas
testb
aas
xor
cld
fwait
xchg
mov
pop
sub
and
cs
xchg
mov
inc
out
inc
psrad
aas
dec
sbb
lock
test
popa
and
out
lods
mov
ss
ja
xchg
xor
jne
xchg
cmpsb
pop
adc
push
mov
jns
xchg
or
loopne
lock
cmp
insl
loopne
inc
push
add
cmp
pop
cwtl
sarb
push
push
add
scas
in
xchg
and
cmpsl
not
inc
jno
in
pop
fs
xchg
sti
aas
fdivl
jnp
test
add
jnp
pop
loop
adc
jo
and
orl
negb
push
cmpsb
pop
pop
mov
gs
cli
sub
jle
add
mov
sahf
std
push
jecxz
xchg
dec
dec
ficompl
loopne
loop
fnstsw
lods
in
loopne
mov
adc
shrb
inc
enter
fldcw
cmp
notb
aad
xchg
mov
sbb
mov
push
ror
xor
scas
inc
pop
cwtl
stos
push
push
sbb
int3
inc
mov
and
xchg
jo
outsb
lea
mov
pop
xor
lea
out
xchg
mov
in
mov
xchg
xor
mov
dec
jb
ss
adc
je
xor
add
pcmpeqd
xchg
dec
andb
lret
pop
lret
outsl
pop
pop
imul
das
mov
les
iret
scas
insl
xchg
fildll
roll
test
iret
sarb
xchg
clc
loopne
cmc
cmc
jle
subl
fdecstp
sbb
dec
mov
mov
lea
cwtl
stc
pop
out
out
or
cmp
ss
in
xchg
and
xchg
data16
scas
xchg
push
fs
fsubrl
xchg
pop
sub
decl
pop
lret
repz
lds
mov
mov
mov
lcall
in
shlb
mov
cwtl
xchg
add
inc
push
jp
add
xchg
cmp
gs
mov
sbb
cltd
outsl
adc
fidivrs
mov
jecxz
idiv
mov
adc
mov
mov
addb
mov
sahf
push
ret
pop
xlat
fistpll
fildl
or
popf
xchg
mov
gs
ret
inc
mov
rclb
pushf
or
movsl
and
jl
int3
pop
cwtl
mov
neg
jmp
adc
xchg
daa
sbb
popa
insb
icebp
inc
and
or
test
loop
or
xor
mov
clc
ja
scas
mov
add
les
xchg
popa
or
mov
in
aad
jge
fcomps
pop
scas
insl
call
jae
xor
loopne
xor
hlt
out
pushf
mov
nop
pop
mov
imul
push
pop
outsb
out
test
movsbl
int3
lahf
or
stos
mov
mov
push
sbb
mov
stc
push
xor
in
xlat
out
jbe
add
mov
test
cmp
pusha
jnp
fs
pusha
or
loopne
stos
push
sbb
std
stc
xchg
push
fucomi
test
mov
out
jg
cmp
jp
cmc
adc
rorl
adc
mov
cmp
jo
inc
outsl
test
mov
dec
in
ss
mov
std
ljmp
inc
push
mov
mov
in
shl
and
dec
testb
push
data16
mov
mov
test
sub
cmp
xchg
jbe
sti
xchg
pop
lcall
ret
cmpsb
xchg
xlat
test
rcll
ja
mov
jge
bound
aaa
pushf
mov
xor
in
loope
lds
pop
pusha
dec
lahf
or
cmpsb
pop
pop
mov
rorl
cs
mov
popa
sahf
pop
add
mov
inc
and
add
aas
jae
add
js
cmp
movsl
xor
push
mov
mov
and
lret
jle
or
stc
xchg
mov
lcall
lahf
lock
call
out
mov
into
stos
mov
divl
in
pushf
jg
repnz
push
xchg
dec
pop
push
or
and
inc
mov
fwait
cmp
pop
fs
or
stos
loope
jne
or
and
fucomip
fwait
sbb
inc
int
cmpsl
or
jno
xchg
fstpl
push
popl
sti
xchg
lods
mov
push
mov
cld
insb
fidivl
mov
lods
sub
jne
aaa
dec
or
mov
lods
jne
mov
cltd
jmp
dec
outsl
sub
in
into
mov
mov
aaa
pop
jp
ret
rclb
ret
push
push
cltd
hlt
xor
sahf
arpl
out
ss
sti
sbb
icebp
fdivrl
ljmp
jge
cmc
rcrb
clc
loop
mov
mov
dec
mov
leave
ljmp
lcall
add
xchg
in
cli
mov
mov
cld
mov
lcall
or
push
test
sbb
cld
and
les
mov
xchg
enter
sub
adc
jae
xchg
xor
jg
lea
enter
mov
adc
lcall
pop
stos
ficomps
popf
pushf
in
loope
mov
fwait
test
jp
cld
nop
fnstenv
sbb
sbb
cmp
add
inc
out
or
sbb
test
dec
mov
mov
testl
push
add
fwait
push
int3
push
pushf
int
sub
test
cltd
negb
clc
mov
pop
int
stos
mov
out
pushf
or
rclb
or
push
cwtl
lret
shrl
lds
cmp
xchg
inc
cmc
repnz
mov
cmp
or
xor
or
outsl
gs
mov
inc
leave
fisttps
pop
nop
xor
or
xchg
cmpsb
fwait
enter
xchg
xchg
aad
fcom
lods
sbb
push
dec
xor
outsb
mov
and
es
rorb
mov
xchg
das
out
icebp
movsb
rolb
ds
scas
ljmp
lods
popfw
or
outsb
ja
dec
jb
and
add
jl
shr
es
or
stos
std
stc
add
mov
clc
shlb
loop
or
rcrl
xchg
rolb
sub
add
mov
std
mov
into
inc
push
aaa
fistpl
sbb
fbstp
pop
pusha
arpl
pop
lret
into
xabort
adc
jmp
xchg
cltd
outsb
jbe
cmp
cmp
sbb
pusha
std
inc
jge
mov
cmpsb
daa
loop
add
jmp
das
dec
cmp
mov
scas
testb
insl
push
scas
xor
mov
fdivr
jge
test
out
lret
mov
outsl
fistps
iret
je
pop
in
push
outsb
pop
cmp
out
mov
jno
xor
fstl
jle
and
xor
add
lcall
push
xchg
add
sahf
packssdw
ffree
mov
aam
shlb
popa
lds
jge
imul
pop
xchg
sub
sbb
test
inc
cmc
pop
dec
arpl
jecxz
pop
aaa
mov
out
sub
mov
mov
popf
push
ljmp
leave
pop
fists
call
addl
lahf
ret
sub
out
mov
mov
sub
cmp
dec
lret
pop
sbb
and
gs
jg
cs
fsubrp
decl
insl
jmp
mov
mov
pop
andb
add
push
std
add
mov
std
sbb
sbb
popf
es
daa
dec
sbb
push
ret
pop
dec
cli
inc
xor
and
add
rclb
push
lret
lea
inc
jecxz
hlt
xchg
mov
pop
sub
mov
movsl
cmp
mov
icebp
cmp
es
popf
mov
arpl
and
ljmp
pop
pop
mov
push
cmp
push
pop
push
pushf
and
sub
dec
fisubs
ds
add
aad
popf
fwait
xchg
or
ficompl
mov
loopne
add
dec
push
lea
leave
bound
mov
jo
mov
push
xchg
sti
dec
lock
push
lret
dec
mov
dec
fsubrl
push
repnz
lret
push
cmpsb
ror
stos
add
imulb
mov
lods
sbb
fs
xor
or
into
lods
popa
loop
in
push
stos
inc
push
std
lock
subb
lods
sbb
pop
lods
pop
sub
sarb
cmpsl
mov
jnp
mov
adc
into
pushf
push
repnz
insb
int3
mov
cwtl
xchg
outsl
idivl
xchg
repz
jp
fs
xchg
dec
outsl
pop
leave
cld
xchg
pop
mov
jmp
mov
sbb
jns
jno
or
sub
ljmp
fcomps
xor
push
and
sub
sub
mov
push
cmpb
add
aam
push
xor
ret
sbb
cwtl
hlt
aas
sbb
dec
stc
and
pop
stos
int
xlat
cmp
nop
and
jb
add
cmpsl
pop
gs
int3
std
std
add
imul
jbe
loopne
rclb
push
shrb
jl
mov
je
mov
lds
scas
mov
in
jl
pop
mov
adc
aas
cmp
enter
mov
mov
sub
ret
inc
push
and
lods
std
and
cmpb
mov
push
mov
stos
mov
das
cmp
outsb
mov
cwtl
xchg
sub
das
jno
nop
mov
mov
into
sbb
sbb
xor
cmc
jb
fwait
rclb
test
adc
test
jae
sbb
pop
sbb
cmpsb
sarl
inc
daa
push
ret
dec
mov
ret
fists
xlat
xor
ret
cmp
xor
pop
jae
xchg
sarl
aas
jg
or
mov
jnp
push
movsb
xchg
jo
arpl
mov
std
dec
cmc
mov
aaa
or
xchg
lret
out
cmp
int
xchg
in
cmp
mov
fidivrl
in
fidivrs
mov
pop
add
pop
lods
jmp
mov
leave
push
cmp
repnz
fisubrl
jmp
es
inc
or
sbb
push
out
in
mov
jne
clc
xorps
sbb
sarb
sbb
add
mov
fadds
lcall
add
daa
sub
add
pusha
mov
pop
mov
sahf
mull
add
dec
push
int3
cli
mov
xchg
std
push
mov
pop
enter
cli
jo
iret
inc
cli
sub
adc
xor
xchg
lods
or
pop
xchg
add
repz
inc
ss
pop
enter
ss
shl
xlat
outsb
mov
sub
cmp
dec
decb
cmp
inc
clc
in
sub
inc
push
xor
addr16
jne
fimull
mov
sub
sbb
mov
shrw
fadd
and
ret
test
push
js
gs
fsts
lock
in
in
lea
sahf
bnd
mov
mov
jne
repnz
js
xchg
cmpsl
xlat
mov
mov
pusha
add
ds
xor
fnsave
jnp
sbb
mov
sbb
mov
mov
div
cmp
aam
mov
rcrl
dec
insb
jo
xor
or
lds
sub
lahf
cltd
mov
popa
outsl
nop
pop
sbb
cwtl
stos
cmpl
fwait
xlat
fcomi
fwait
lds
inc
lods
xchg
cmc
aas
fiadds
cmp
pop
cmp
lret
imul
jnp
jno
adc
xor
sbb
call
ret
leave
sbb
cwtl
cmp
hlt
inc
xchg
jp
inc
cwtl
fstpt
and
ja
lods
mov
fcom
inc
push
daa
in
jecxz
fwait
iret
out
and
cmp
repz
add
popf
pop
ret
leave
stos
fcompl
lcall
mov
mov
test
fstpt
ljmp
xchg
lods
pop
adc
jne
jecxz
lds
jae
push
push
mov
and
pop
fdivrl
hlt
jbe
mov
mov
sub
rcl
push
push
notl
push
aaa
ljmp
lods
push
cmpsl
clc
mov
lock
xchg
mov
pop
or
iret
fistps
dec
dec
xchg
imul
pop
push
pop
pop
jl
shll
adc
jbe
daa
mov
mov
fwait
das
mov
dec
aas
out
out
jb
mov
push
stc
arpl
mov
push
cmp
push
shll
pop
imul
cltd
or
fwait
mov
addl
cmp
adc
mov
rcll
das
fildll
xor
xchg
rcrb
into
push
test
rorb
xchg
jnp
cmp
pop
push
mov
ror
test
xorl
test
mov
and
fwait
jae
pop
xchg
iret
sbb
pop
outsb
xor
lock
inc
in
fwait
inc
mov
or
lea
sub
pop
sbb
aam
sub
sti
mov
lods
mov
das
xchg
mov
push
cltd
sahf
mov
and
pop
addr16
nop
popa
sbb
cli
call
fistpll
popf
push
mov
xchg
sbb
add
ds
and
insl
adc
pop
push
cmpsl
mov
cmc
lods
xor
les
mov
jg
xorb
lock
bnd
movsl
mov
mov
xchg
mov
repnz
jbe
xor
mov
int
xchg
lock
and
push
clc
jg
int
and
dec
lret
push
fsubrs
pop
sbb
sarl
cltd
add
add
and
pop
pop
ljmp
dec
dec
in
xor
push
ret
shrb
sub
cmpsl
mov
mov
test
das
pushf
inc
cmc
mov
mov
xor
test
adc
dec
je
mov
not
cmp
pusha
hlt
sub
cmp
ljmp
cli
cld
xchg
out
pop
jns
mov
mov
es
movsl
push
lock
stc
mov
int3
loopne
dec
or
mov
aam
jbe
ss
aam
aas
mov
out
push
xchg
cwtl
or
out
dec
adc
inc
rcrb
mov
fisubs
mov
shll
jl
lret
jmp
sub
adcl
lods
ja
mov
pop
mov
aad
rolb
fistpl
das
into
dec
mov
mov
fwait
add
xchg
mov
dec
out
fistl
std
in
push
lods
or
in
hlt
jbe
aad
repnz
cli
or
movsb
push
or
cmp
inc
dec
rolb
lock
push
mov
lea
stos
sbb
fcoms
aas
cmp
cmp
mov
lahf
mov
das
faddl
xor
aas
pop
jg
lds
jmp
addb
loop
add
xchg
ja
add
adc
sarb
fcmovb
mov
xor
subb
lods
inc
ret
inc
or
les
daa
dec
bound
dec
jno
gs
adc
popa
xor
lods
mov
cmpl
negl
and
and
inc
fmull
adc
popa
xchg
insb
push
ds
test
insb
push
js
push
mov
cwtl
add
add
ret
inc
hlt
inc
testb
dec
pop
xchg
cld
daa
sub
and
push
jp
sub
je
lods
cmp
fs
cmpxchg
pop
sbb
stc
push
bnd
arpl
cmp
fucomip
dec
jnp
or
pop
and
and
movsl
lret
dec
notl
jge
cmp
mov
ret
in
notb
xchg
and
bnd
xchg
sbb
add
mov
push
push
mov
andb
int3
inc
pop
jb
mov
mov
adcb
xchg
jg
fcmovnbe
cmp
xchg
lret
or
sahf
sub
or
mov
jl
pop
fwait
push
xor
cmpsl
add
sbb
fidivs
inc
pop
jo
dec
in
push
insb
cmp
cmp
enter
jl
icebp
mov
aad
ja
push
popa
xlat
pushf
mov
cmp
das
loopne
dec
adc
xor
push
insl
stc
popf
push
loope
push
pop
cltd
xchg
mulb
push
fidivrs
repnz
xchg
xor
je
mov
in
test
loope
aam
push
or
lcall
inc
iret
sbb
adc
sub
hlt
fdiv
jns
cmpsl
aaa
xchg
cltd
pop
push
xor
cmpl
lods
or
and
or
add
test
hlt
xchg
jno
js
xor
push
sbbl
lods
ficoml
xor
xchg
jl
cmpsl
xor
dec
mov
jb
test
frstor
mov
adc
mov
ljmp
jae
imul
jnp
adc
outsb
cmpb
fstps
mov
xor
mov
xchg
loop
gs
sub
ret
sahf
mov
jno
push
fwait
sbb
inc
popl
icebp
mov
add
lea
push
or
mov
nop
sbb
sbb
into
fcmovbe
ret
or
cld
xchg
std
add
pop
and
mov
outsl
arpl
add
xchg
insl
xchg
jnp
fwait
mov
push
scas
adc
add
aad
out
std
negl
add
sbb
mov
ljmp
push
or
jecxz
mov
addr16
adc
sbb
lods
fldcw
inc
cmp
mov
push
xchg
into
mov
ja
xor
gs
sub
xchg
jmp
movsb
pop
out
mov
mov
sbb
jg
insb
mov
push
dec
mov
mov
cmpb
outsb
sbb
add
sbb
imul
sti
call
dec
leave
push
inc
and
cmp
gs
mov
sub
and
inc
and
or
mov
mov
push
les
dec
mov
inc
imul
mov
ss
into
and
xor
add
pop
ljmp
xchg
mov
dec
sbb
or
pushf
xor
aas
mov
or
xor
stos
mov
hlt
xchg
xor
out
sahf
push
mov
pop
fldt
mov
insl
jb
inc
daa
cmp
dec
xor
imul
ret
dec
cmp
add
sub
sub
adc
bound
adc
push
in
or
cmpsl
mov
nop
cs
inc
mov
iret
xchg
into
dec
mov
frstor
sub
jmp
outsb
mov
notl
pop
pop
addr16
push
xor
ljmp
insl
push
hlt
mov
jmp
sete
cltd
sub
lcall
mov
andl
dec
xchg
shlb
push
xchg
xorl
push
test
pop
test
shrl
xor
movb
fwait
jp
shr
and
push
xchg
fwait
pop
scas
test
sub
add
add
nop
xchg
add
and
jp
xchg
insb
ljmp
sahf
xchg
pop
mov
clc
mov
inc
mov
sbb
jmp
pop
mov
cmpsl
jg
lret
mov
inc
or
mov
push
rep
punpcklwd
and
jge
int
sbb
rcr
xor
out
push
hlt
mov
and
mov
in
shr
lret
es
lret
jp
jno
int3
enter
mov
fdivrs
rcrl
push
mov
inc
push
hlt
xor
inc
in
mov
add
sbb
nop
lahf
jae
inc
sub
sbb
inc
push
sub
pushf
push
cltd
sar
push
and
mov
and
pop
orl
das
xchg
pushf
sbbb
jbe
mov
in
subb
outsb
idivb
ficompl
movsl
xchg
sbb
mov
sub
in
dec
xor
pop
mov
ljmp
inc
lea
sub
add
inc
push
and
fcompl
adc
in
popf
iret
insb
sbb
mov
xor
xor
in
mov
mov
call
and
dec
xor
push
cmc
jbe
dec
pop
inc
orl
shl
jecxz
arpl
lahf
jne
dec
sbb
sub
xchg
pop
rcr
sub
push
repz
lods
adc
in
xor
aas
push
mov
cmc
out
fbstp
outsl
pop
ss
fstps
push
je
mov
or
je
sbb
popf
add
mov
mov
and
push
dec
or
jmp
mov
mov
xchg
call
add
aas
cmp
push
stos
pop
pushf
lock
out
xchg
fnsave
or
push
xchg
clc
cmpsb
cwtl
add
sarl
jg
fwait
add
pop
add
adc
pop
add
jns
scas
pop
hlt
ds
sbb
jle
mov
les
pop
sarb
sub
sub
lahf
jmp
subb
mov
jb
rcrl
repz
jnp
call
lahf
imul
xchg
pop
ret
std
loopne
pusha
fldcw
pop
or
adc
ja
scas
and
loope
sahf
push
cmp
insb
and
popf
inc
mov
xchg
fwait
mov
mov
dec
lcall
decl
iret
neg
xor
in
push
repnz
popa
sbb
jmp
int3
outsl
jge
push
sbb
leave
ds
pop
add
outsb
or
push
dec
dec
je
mov
mov
mov
fldt
or
jns
pop
stos
scas
aaa
bound
fs
out
les
mov
xor
or
or
lahf
arpl
push
jne
xorl
add
push
dec
xchg
xor
loop
stos
inc
lret
pop
stc
jecxz
or
jp
ljmp
xor
arpl
add
jmp
pop
fiaddl
add
mov
mov
call
pop
enter
sahf
jns
stc
pop
jg
ja
std
les
movsb
cmp
push
cs
fisttpll
mov
imul
aam
adc
pushf
out
sbb
mov
add
cmpsl
sbbb
xor
xor
test
sbb
fwait
dec
xchg
mov
loopne
rcrb
push
sarl
arpl
push
testl
lods
cmpsl
in
cmp
inc
sub
arpl
and
and
inc
out
adc
test
xchg
push
mov
imul
sbb
adc
cmpsb
hlt
sub
jl
jnp
rcrl
in
popa
pop
sub
loopne
xlat
and
adc
aad
clc
sbb
mov
inc
scas
pop
rol
xchg
xchg
data16
icebp
or
fsts
add
add
rolb
pushf
faddl
add
lea
adcb
nop
nop
jge
nop
nop
lock
push
cmp
stc
mov
mov
pushw
ret
lods
les
outsl
insb
and
inc
push
sbb
imul
push
pop
test
je
popa
mov
jecxz
sarb
xor
jne
inc
std
fimull
mov
int
scas
inc
or
mov
pusha
rcrb
push
inc
xor
pop
cmp
sbb
sbb
mov
lock
adc
out
xchg
push
inc
test
and
xchg
fdivrl
or
pop
inc
lret
int3
xor
call
xchg
movsl
mov
dec
addr16
or
and
fimuls
pop
mov
push
movsl
push
jno
in
stos
scas
inc
mov
jb
xchg
xchg
add
mov
xchg
dec
into
lahf
fs
push
dec
mov
sbb
cmp
sbb
cmp
cwtl
jmp
jmp
inc
divl
xor
fcoml
mov
or
push
push
adcb
inc
dec
shlb
das
pop
mov
jp
pop
test
cmp
pop
add
or
sahf
ljmp
in
adc
in
les
or
lahf
jmp
test
sub
inc
mov
cmc
and
mov
adc
push
xchg
pop
js
add
pushf
adc
pop
int
shrl
jg
sbb
pop
std
push
push
je
xchg
and
jnp
cli
into
jnp
jl
lds
xchg
cs
inc
mov
jns
dec
pop
dec
mov
dec
sbb
inc
inc
xchg
xor
and
loopne
add
fwait
pusha
mov
adc
xor
push
inc
jmp
and
pushf
jg
jnp
mov
push
mov
out
cmp
sbbl
loopne
cld
fnstsw
and
dec
fimull
lcallw
dec
in
jmp
mov
outsb
dec
push
mov
xchg
out
ss
popa
mov
xor
xchg
enter
jp
mov
jle
mov
mov
mov
cmp
repnz
and
dec
stc
in
out
mov
mov
int3
pop
sbb
loope
div
and
sbb
pop
push
dec
fldt
adc
or
sub
cltd
jbe
cwtl
sti
and
xchg
fcompl
mov
cmp
int3
pusha
mov
pop
int3
and
cli
test
cs
movsb
movsb
or
mov
test
cmp
sbb
jmp
mov
test
addl
nop
lods
mov
es
sbb
mov
mov
sub
sub
xchg
xchg
dec
outsl
pop
dec
cmp
addr16
jge
fsubrs
or
icebp
jae
sti
pop
inc
pop
pop
out
xchg
xchg
mov
bound
cmp
pushf
xchg
cli
insl
pop
shrb
jge
push
ljmp
pushf
repz
pop
shlb
and
pop
jnp
sub
cmp
in
popa
out
bound
movsb
aas
sbb
xchg
cmp
aad
rcrl
fcoms
cmp
mov
leave
mov
pop
cmc
std
push
cltd
or
dec
and
cmc
sbb
jge
sub
aaa
ds
lods
mov
imul
cpuid
imul
pop
cmp
imulb
push
xchg
je
push
add
push
arpl
adc
fidivrs
mov
cltd
push
lcall
add
push
les
stos
dec
scas
mov
stos
pop
popf
ret
mov
jb
enter
cld
or
inc
dec
pop
dec
adcl
leave
jmp
jbe
imul
pop
add
test
mov
and
fldcw
xchg
mov
sub
addr16
cmp
lods
xchg
and
mov
es
and
xor
hlt
and
stos
dec
push
dec
sbb
rorb
sbb
popa
jp
adc
int3
mov
cmp
xor
pop
arpl
scas
outsl
int
out
popa
cmpsl
iret
jns
mov
or
cmp
xchg
mov
pop
mov
aam
das
adc
cli
mov
pop
dec
cmp
pushf
cmp
mov
pop
dec
test
jne
movsl
fmuls
cld
or
cmp
inc
push
sbb
out
ja
add
mov
push
subl
push
shrb
add
jae
xor
push
ljmp
adc
aam
mov
js
addr16
push
rcrb
mov
jl,pt
cs
sahf
in
or
inc
aam
scas
dec
std
pop
call
cmp
into
lock
mov
clc
rolb
decb
sub
testl
lcall
jbe
jns
in
adc
pop
xchg
roll
cmp
or
dec
push
inc
mov
inc
hlt
mull
out
push
push
div
cmp
aas
stos
adc
and
stos
ja
dec
mov
cltd
aaa
popa
jnp
fsub
fbstp
dec
pushf
pop
mov
imul
scas
arpl
movsb
mov
shlb
hlt
mov
xchg
inc
jo
xor
fidivrs
loop
mov
xor
dec
aad
push
cmp
sar
sbb
xor
popa
in
faddl
jp
test
mov
pop
sub
jl
movl
aad
or
xchg
int3
jns
ljmp
insb
mov
dec
nop
sub
mov
sub
mov
dec
in
add
rol
add
xor
dec
stc
jo
leave
sbb
pop
fcom
and
aam
insl
push
jbe
imul
mov
lcall
xchg
pushf
or
test
push
bound
sbb
loopne
cs
test
shrb
mov
roll
sbb
movsb
lret
push
mov
pop
fnstenv
icebp
and
push
pop
cmpl
test
femms
rcll
and
inc
movsl
out
xchg
or
shll
xorb
cmp
jnp
dec
fisubrs
jbe
movsl
pop
sub
notb
mov
sbb
loope
fs
jmp
mov
je
pusha
adc
adc
inc
adc
push
outsl
cmp
sub
bound
js
pop
jbe
notl
bound
dec
inc
push
subb
fwait
xor
jb
clc
push
or
loope
xchg
xor
push
sti
ljmp
outsl
sahf
test
std
stos
sub
mov
dec
or
fs
inc
adc
pop
outsb
lock
adc
subl
push
push
lcall
pop
jmp
fistpll
xor
aaa
dec
mov
cs
movsb
push
push
pop
pop
mov
mov
fsubrs
out
sbb
jo
xchg
and
leave
cli
lds
cltd
mov
dec
pusha
in
push
adc
mov
addr16
rol
sub
fnsave
ror
ss
inc
int3
inc
push
mov
pop
xor
cmpsb
adcl
movsl
sub
pop
sbb
mov
lret
sbb
aam
ret
sbb
pushf
hlt
jmp
add
mov
es
sub
in
scas
xor
jmp
pop
pop
cli
adc
pop
loope
ret
lahf
cli
int3
xor
add
int
lock
sub
pusha
fcompl
xchg
cli
pop
sbb
adc
dec
ja
jecxz
ret
addb
fdivrs
or
or
sbb
aam
push
test
pusha
or
mov
jo
fwait
jnp
push
or
and
jb
into
push
xchg
inc
ret
jecxz
cli
fwait
sahf
mov
jmp
in
push
imul
add
sbb
fdivrl
mov
loopne
stos
mov
mov
and
sub
test
pop
xor
fwait
orb
xor
push
mov
cmp
stos
lock
xchg
push
hlt
pop
xchg
adc
movsb
sti
inc
les
popf
and
jo
sub
pop
pop
and
xchg
loopne
inc
mov
jo
into
arpl
sub
mov
pusha
add
rorb
clc
aam
xor
adc
int
shrb
mov
adc
xor
push
scas
cmpsl
push
pop
test
test
push
ss
lahf
into
pushf
fsub
and
daa
jno
xlat
adc
jne
leave
aas
pusha
dec
test
test
and
mov
mov
pushf
sub
sub
movsb
lahf
arpl
pop
xchg
aad
cli
sub
dec
test
ret
pusha
cmp
sti
adc
repz
jp
push
push
push
scas
bnd
mov
push
push
ds
je
lcall
add
cmp
loopne
xchg
movsb
movsb
loopne
ljmp
icebp
mov
push
jb
sbbb
and
stos
cld
cmp
dec
mov
fs
push
adc
sbb
cld
sbb
jbe
loopne
push
jl
fdivp
dec
imul
inc
adc
icebp
dec
imull
push
inc
sbb
mov
xor
das
pop
fstpl
push
xor
data16
sbb
pop
imul
jmp
jnp
inc
inc
sbb
sub
ss
xor
dec
or
pop
ds
mov
mulb
ret
imul
fdivr
push
mov
mov
jmp
jb
cmp
cwtl
out
movsl
repnz
adc
xchg
idivb
dec
dec
mov
cmpsl
cmpsb
xlat
scas
adc
ret
movsb
andb
mov
xchg
sub
xchg
jmp
inc
stc
jl
push
pop
aaa
fwait
div
mov
mov
jns
sub
xor
and
scas
sti
jmp
daa
outsb
daa
mov
in
mov
mov
inc
xchg
pop
sub
rorl
sub
out
adc
aaa
hlt
xchg
push
mov
or
pop
je
sub
fwait
fnstenv
jb
stos
sbb
ficompl
and
imul
cltd
jae
movsb
push
fiadds
repz
dec
xor
dec
jb
xlat
cmc
pop
fidivl
cld
fcmove
sbb
mov
outsl
ror
popf
or
mov
or
inc
popf
loop
dec
sub
cltd
pop
pop
das
fcomps
je
cld
mov
into
mov
jno
sbb
fucomi
push
ret
dec
pop
or
ja
or
mov
mov
sbb
jbe
ljmp
mov
lret
rclb
jle
sbb
jns
fstl
pop
mov
add
mulb
cmp
nop
testl
lret
int3
hlt
and
jp
clc
test
rcrl
jno
fldt
mov
js
jp
shr
xchg
add
in
dec
sar
inc
gs
push
stos
es
div
add
gs
and
push
addl
mov
pop
push
cmpsl
cwtl
pop
loopne
push
adc
cmp
add
iret
sahf
fldt
scas
and
aas
cs
pop
mov
call
inc
lret
xchg
fidivs
inc
mov
sbb
cmc
fdivrs
dec
xor
or
icebp
push
xchg
jmp
cmp
test
or
push
lcall
push
lret
mov
dec
je
popf
jo
xor
add
movsb
adc
idiv
es
push
jl
movsb
jp
pop
imul
stos
cmpsl
sub
xchg
inc
or
ficoml
lret
jecxz
jns
xchg
imul
daa
mov
jb
mov
mov
sub
pop
mov
jo
pop
test
pop
das
pop
cltd
aas
sbb
outsl
xor
popf
push
aam
push
inc
sbb
lret
inc
xchg
rorl
out
jne
pop
inc
jmp
push
fdiv
add
inc
dec
fisubrl
pop
imul
in
hlt
add
add
xchg
dec
icebp
cmp
out
cmp
add
mov
cmp
and
mov
sbb
in
into
or
loope
mov
and
mov
jp
xor
mov
xchg
xchg
scas
aas
mov
jl
sub
jnp
sub
mov
mov
xchg
pop
or
xchg
and
loop
outsl
test
popf
scas
add
cmpsl
adc
mov
xchg
sub
or
insb
mov
sub
xchg
lret
mov
mov
pop
push
cmp
cld
imul
xchg
mov
lds
movsl
ffreep
imul
pop
mov
or
sub
lods
push
push
sbb
inc
jmp
lds
stos
pushf
imul
lret
ret
ja
ret
cmpsb
sbb
mov
mov
outsl
or
dec
mov
jb
insl
scas
repnz
xlat
dec
mov
or
nop
lret
pop
mov
lcall
xchg
mov
mov
xchg
call
outsb
mov
inc
adc
es
fs
lcall
push
imul
cmp
std
inc
data16
inc
out
incb
xchg
dec
sub
mov
call
rorl
shrl
pop
mov
pop
stos
adc
les
mov
dec
lret
sbb
mov
jnp
mov
inc
xchg
les
mov
add
dec
icebp
push
jl
sub
push
jns
pusha
dec
jle
sbb
ret
pop
cmp
imul
dec
sub
scas
and
mov
in
jg
cmp
iret
pop
fdivs
faddl
xlat
gs
jle
outsl
mov
sub
push
aas
push
jmp
mov
int
hlt
cmp
dec
int
imul
jns
repz
sub
outsl
pop
lret
adc
mov
push
fwait
in
cmp
or
out
mov
sbb
adc
clc
pop
push
lds
pop
mov
aam
dec
sbb
add
popa
lock
movsl
pop
loope
in
inc
xor
sub
add
xor
bound
gs
or
or
xor
mov
and
add
jns
jp,pn
mov
fmulp
sub
cmp
add
cs
rcl
shrl
je
pop
imul
mov
je
repz
in
loope
fwait
imul
push
ja
mov
lcall
mov
addr16
and
cmp
pop
cltd
jo
and
xor
xchg
cmp
pop
sbb
mov
fdivr
sbb
popf
xchg
xchg
gs
sub
repz
sub
push
leave
jnp
and
filds
jne
insl
jb
dec
adc
jp
push
sbb
mov
cmp
and
pushf
xor
push
mov
add
pop
rcrl
sahf
xchg
pop
push
inc
addr16
mov
repnz
cmp
dec
mov
es
lds
imul
fcom
push
fistpll
test
dec
or
adc
jns
in
lcall
jg
mov
jae
adc
icebp
ror
scas
cmp
outsl
mov
mov
repz
in
push
xchg
lret
in
mov
mov
xorl
pushf
push
lret
adc
lret
loope
xor
xor
add
cwtl
lock
fnstcw
scas
gs
dec
decl
pusha
lcall
cmc
filds
inc
or
pop
addl
int3
or
jp
or
inc
shl
inc
shl
out
inc
jp
mov
scas
stc
push
faddp
xorl
repz
rcrl
aam
or
adc
push
dec
adc
lret
sbb
aad
fidivl
mov
mov
jp
push
inc
push
jl
sbb
daa
lcall
jecxz
inc
jns
fcmove
adc
pop
addr16
leave
in
push
sub
ljmp
fcoml
popf
pop
xchg
sub
cmc
pop
sbbl
repnz
mov
aam
jge
add
stos
mov
fildl
add
cmp
jne
leave
add
cmp
adc
ja
mov
or
push
push
cltd
lods
in
popf
cmp
push
add
xor
scas
arpl
or
jo
xchg
cmovp
movsl
call
lock
jae
jbe
cmpsl
sbb
js
push
mov
ror
pop
movsl
or
aad
jge
mov
jns
aaa
in
aam
jl
orl
mov
in
mov
push
xor
cmp
mov
pop
je
aam
xor
imul
xchg
jp
jmp
sub
jle
sbb
cwtl
xchg
pusha
push
dec
popf
fdivl
mov
mov
call
fsubl
mov
dec
mov
fdivs
push
mov
inc
pop
jae
fcomps
dec
or
sub
push
test
sub
and
jns
rcrb
clc
js
sub
dec
pop
movsb
xrelease
je
fadds
adc
outsl
sub
sub
cld
pop
rcr
std
inc
outsb
push
in
xchg
sbb
inc
cmp
lock
dec
add
dec
leave
xchg
subl
testb
fists
ss
cmp
test
imul
adc
mov
aam
lret
sbb
stos
scas
pop
loopne
repnz
dec
cmpb
xor
sub
fimull
lahf
dec
pushl
add
dec
fwait
sbb
cmc
aam
xor
icebp
jbe
xchg
es
inc
cmp
dec
add
jns
add
enter
ret
lret
outsb
fcompl
jno
shrl
insl
rcrl
jae
xor
shll
or
cmp
mov
mov
cwtl
shrb
sahf
push
repz
mov
adc
movsl
cmp
negb
jnp
xchg
pop
in
xor
ret
in
dec
repz
xor
mov
into
adc
dec
mov
xchg
ret
out
cmp
adc
mov
hlt
test
cli
dec
pop
cmpsl
push
movsb
sbb
mov
into
gs
mov
xchg
testl
and
lcall
xor
stos
cld
dec
push
push
sub
mov
lret
dec
inc
pusha
outsb
push
lods
popa
movsl
add
mov
jp
shlb
es
inc
into
pop
clc
adc
dec
sbb
das
subb
cli
pop
gs
iret
in
mov
pop
adc
adc
xchg
pop
in
jge
inc
mov
push
leave
push
mov
mov
ja
arpl
aaa
or
sti
jg
int3
add
mov
xor
sub
xchg
and
fstpl
pop
in
xor
pusha
xchg
or
jmp
shlb
aaa
fisubl
out
fistpll
add
push
xchg
pop
mov
fcoml
movsb
js
mov
shll
mov
mov
mov
cmc
inc
jnp
cmp
lret
mov
in
adc
dec
icebp
mov
fiaddl
pop
sub
imul
jecxz
add
fidivs
gs
fs
test
sarl
add
negl
and
pop
ret
adc
sbb
rolb
jge
mov
iret
in
sbb
bound
mov
xor
mov
push
sub
iret
pop
jle
int
xchg
pushf
sahf
stc
pop
movsb
lahf
inc
xchg
fiadds
int3
cmpsl
sub
movsl
xchg
sub
jl
lods
pushf
push
cmp
mov
xchg
es
iret
xchg
jp
sbb
rep
das
sbb
div
addr16
stos
addr16
jge
adc
js
je
jne
loope
addr16
shl
js
mov
in
adc
pop
bnd
lret
cmp
ljmp
test
aaa
imul
or
xor
push
data16
xor
jecxz
or
or
in
push
mov
pushf
in
popf
js
daa
popa
sbb
popa
jo
insb
sub
mov
xor
cltd
cmp
jg
pop
jecxz
out
ss
data16
push
or
ret
push
shl
jb
jge
xchg
mov
xchg
cltd
adc
leave
pop
add
mov
and
into
outsl
es
and
ljmp
push
stc
dec
stos
lods
sahf
and
sbb
icebp
cmp
xchg
push
xchg
out
add
imul
push
fmuls
jle
adc
cmp
or
xlat
jns
sbb
popf
int3
dec
dec
jg
or
jno
xor
mov
or
mov
xor
push
lcall
adc
mov
mov
inc
movsb
sub
call
rclb
pop
sbb
pop
fwait
xchg
cli
sahf
shlb
mov
inc
daa
ds
mov
or
mov
dec
mov
hlt
jne
leave
pop
stos
mov
out
mov
or
loopne
cltd
jae
jp
testb
add
outsb
sbb
call
hlt
insb
mov
and
sbb
mov
mov
jl
jle
aas
ss
jns
sahf
iret
outsb
cmp
sahf
fs
jge
pop
leave
sub
cmovg
in
stos
stos
clc
jmp
mov
fidivrs
push
orb
xor
movsb
mov
sbb
dec
testb
xchg
ja
ror
sub
adc
or
adc
notl
sub
xlat
sbb
testb
int
mov
fwait
stc
cwtl
cmp
mov
outsl
xor
sbb
mov
add
enter
out
clc
ja
shrl
and
dec
out
and
addl
pop
jne
jmp
sub
jge
lods
lcall
push
jl
mov
ds
mov
xchg
push
out
push
pop
mov
ret
cmc
in
xchg
idiv
js
pop
sbb
jp
add
loop
call
fadd
or
ffreep
insb
cmp
hlt
adc
jo
fst
jge
push
clc
dec
push
orl
aam
jno
pop
mov
mov
xor
xchg
mov
roll
xchg
push
hlt
inc
push
lret
insb
cmc
gs
xor
push
mov
in
je
test
cmp
fsts
mov
loope
adc
and
movsl
mov
ljmp
mov
movsb
xor
push
xchg
xchg
mov
mov
pop
test
adc
jo
jbe
jo
mov
sbb
jae
daa
or
repz
xchg
jns
pop
jge
xchg
dec
xchg
add
mov
loopne
and
imul
repz
das
dec
sbb
push
adc
cmp
cli
orb
cld
mov
inc
je
insb
arpl
push
repz
ds
or
testl
and
dec
jno
mov
cmp
inc
xchg
inc
adc
mov
xchg
fwait
push
ds
daa
jge
popa
or
clc
sahf
jg
mov
int
incl
mov
stos
aad
sub
out
lret
ficomps
jle
jmp
add
sbb
jns
loopne
push
cmp
or
in
sti
push
sub
orb
gs
push
dec
fdiv
xor
pop
fsts
mov
popa
into
jb
in
push
push
or
stc
or
push
add
sahf
jp
lret
scas
xchg
jns
rcrb
sub
addr16
adc
jb
mov
int3
ss
sub
jne
inc
mov
xchg
mov
int3
mov
pusha
sub
pop
je
xchg
or
inc
push
add
cmpsb
inc
mov
pop
cmp
inc
dec
pop
fidivl
and
dec
jmp
mov
inc
lds
dec
ljmp
das
add
push
aas
jo
mov
sbb
push
jnp
add
pop
dec
movsb
je
jg
adc
sub
inc
xchg
inc
mov
jecxz
mov
je
add
roll
shrl
mov
icebp
mov
negb
es
sahf
cmp
in
outsl
sub
outsb
orb
push
cmpsl
frstor
xor
add
jmp
cwtl
ljmp
cmp
jne
pop
inc
xchg
rcl
push
out
mull
cmpsl
mov
cmp
icebp
in
ret
jle
imul
mov
sub
push
mov
outsl
clc
push
xlat
lods
jno
lock
push
fdivr
pop
and
mov
scas
sbb
jno
push
mov
ret
add
ficoml
dec
pop
data16
leave
leave
ja
add
mov
lret
pop
fisttps
mov
es
mov
pop
dec
mov
mov
faddl
cmp
cmpb
sti
adc
add
ds
fnstenv
rolb
xorl
cmp
arpl
xlat
sarl
push
jmp
push
adc
mov
lock
in
mov
lcall
imul
add
inc
fisttpll
cmp
cwtl
hlt
push
shlb
lea
pop
push
xchg
fmulp
rcl
mov
enter
jnp
ljmp
and
std
fwait
cmp
ja
lea
lea
ss
jbe
out
xchg
mov
movsb
or
repnz
xchg
in
mov
sbb
pop
adc
and
mov
xchg
dec
loop
or
pop
jne
inc
pop
mov
sbb
mov
mov
or
fiadds
rclb
addr16
fsubrp
iret
outsb
dec
dec
sahf
xchg
mulb
cltd
jno
dec
pop
sbb
pop
popf
cli
pusha
lcall
sub
rolb
sub
mov
mov
cli
cmpsl
mov
push
insb
out
mov
fmuls
cltd
outsb
jecxz
fistpll
sarl
jb
fisttpll
inc
hlt
imul
dec
and
dec
nop
cmp
pushf
fisubrl
mov
arpl
mov
data16
mov
push
cmp
push
shrl
push
push
sar
ret
add
cmpsb
and
xor
mov
and
mov
and
cmp
jo
jnp
pop
insb
dec
cmpsl
mov
xor
je
mov
xor
jmp
je
cmp
inc
into
or
out
fadds
adc
ljmp
jmp
mov
iret
out
xor
cmpsl
cmp
imull
stos
call
lods
jae
mov
mov
lahf
call
sub
sub
movsb
xlat
or
jl
imul
bound
mov
fldcw
aaa
test
pop
xorl
out
and
jl
rcll
cs
ret
rcll
mov
mov
jmp
pop
addr16
out
repz
sbbb
adc
test
inc
idivb
gs
repz
add
mov
and
rcr
mov
inc
or
cltd
fistl
jle
mov
xlat
pushw
and
fbstp
cld
mov
inc
sbb
pop
out
cmp
stc
leave
cld
dec
mov
mov
fninit
push
or
fdivrs
add
addl
in
mov
mov
fwait
testb
xor
movsl
ja
inc
arpl
pop
inc
sub
jg
les
jae
jmp
jne
test
cmp
gs
adc
mov
test
jno
push
roll
or
stos
les
fwait
add
sub
xor
xchg
and
pop
outsb
sbb
push
cli
rcr
sahf
and
call
and
dec
mov
and
outsb
add
sbb
ficoms
mov
and
jae
call
inc
lea
test
lahf
das
loope
mov
in
outsb
push
sbbb
push
sti
push
mov
gs
les
mov
mov
or
scas
mov
add
dec
xchg
fbstp
ret
xchg
outsb
push
mov
movsb
dec
xor
jl
outsb
repz
shll
mov
adc
xor
jle
mov
stos
icebp
ss
mov
and
jbe
neg
outsl
pusha
jbe
jae
jle
rcll
lods
or
sub
pop
fldcw
jmp
int
jns
pop
xor
jno
jo
sub
in
mov
cmpb
dec
iret
and
data16
push
adcl
dec
mov
sub
inc
repnz
dec
mov
dec
or
leave
mov
mov
lods
in
mov
in
sbbb
sbb
data16
ljmp
mov
ljmp
sbb
mov
scas
jge
push
iret
mov
imul
sti
out
jecxz
rclb
popf
jb
lcall
loopne
fmull
sub
jp
popa
jmp
out
mov
fstl
roll
pop
mov
in
xchg
xchg
xchg
out
adc
or
jb
aaa
movzwl
repnz
sub
pop
push
mov
xchg
loopne
dec
and
mov
mulb
jnp
sahf
sbb
out
call
sub
pause
imul
sub
rorb
les
out
xor
mov
rcl
mov
scas
jg
lahf
push
pop
data16
push
pop
push
outsb
repz
sub
call
lret
ja
pop
fiadds
push
ljmp
mov
out
push
lret
andb
mov
fidivs
or
mov
outsl
sub
icebp
mov
hlt
lret
imull
xor
sub
movsb
mov
jbe
insl
pop
and
sbb
leave
adcl
enter
inc
add
or
sbb
nop
insb
inc
lcall
lahf
popf
mov
adc
cmc
ja
mov
jmp
mov
int3
leave
inc
popf
xlat
loope
xlat
int3
cmp
pop
imul
or
imul
fldt
stos
xor
sbbl
pop
std
jne
mov
loopne
jle
test
stos
jns
xor
out
sub
inc
repnz
mov
push
adc
je
xchg
mov
loope
or
inc
bound
lahf
pop
loop
mov
in
imul
xchg
push
adc
jo
pop
loope
subl
in
in
dec
and
cld
and
dec
dec
xor
xchg
push
cs
std
out
sub
sti
xchg
or
in
dec
push
sub
ret
pop
pavgw
popf
out
and
or
cld
and
mov
fdivp
cld
ljmp
or
hlt
mov
scas
xchg
cmp
mov
and
or
notl
sti
mov
jecxz
lock
push
arpl
outsl
pop
jg
jo
inc
and
int
sti
cli
xor
enter
icebp
enter
and
mov
out
movsl
shll
adc
add
jnp
cmc
sbb
imul
pop
jne
test
sbb
ret
loopne
js
push
dec
jp
idiv
push
push
ss
movb
pop
xor
jo
push
scas
and
mov
pop
int
addr16
sahf
dec
divl
dec
mov
imull
ds
or
in
xchg
sub
and
mov
xchg
cmp
nop
pop
push
ja
or
inc
jo
lea
sbb
mov
js
pop
push
lahf
lods
and
iret
mov
jg
add
mov
enter
mov
mov
mov
mov
and
hlt
and
sbb
bound
jmp
outsb
sbbl
push
imul
subb
jo
aaa
ja
repz
cs
std
fbld
cli
imull
jno
movsb
mov
cmp
fisttpll
cwtl
pop
cwtl
adc
cmp
mov
loope
test
jne
mov
mov
cmp
nop
int
rclb
repnz
scas
mov
stos
cmpl
in
sbb
dec
sahf
xchg
cmp
ret
pop
ja
ret
sub
or
inc
cmp
jne
jmp
push
movsb
jmp
xor
mov
sub
mov
add
fs
jno
fcomp
sbb
xchg
aas
lahf
add
arpl
popa
adc
push
dec
psubsw
cs
gs
push
dec
pop
mov
sbb
pop
lock
or
mov
mov
add
adc
aam
ljmp
pop
imul
xchg
nop
pop
pop
or
jns
fldl
or
ret
xchg
scas
push
stos
les
add
test
inc
leave
and
xor
jl
inc
push
xor
iret
fsub
sahf
nop
in
cmpsb
xchg
push
sbb
jp
out
cmp
mov
mov
mov
sbb
out
dec
jmp
sbb
popf
jmp
daa
fiadds
shrl
inc
dec
or
std
dec
mov
adc
jno
inc
add
and
inc
movsb
mov
cs
nop
mov
jno
inc
sbb
jns
lea
insl
dec
pop
fstl
add
and
inc
sti
or
inc
jns
icebp
mov
inc
cltd
call
push
cmp
xor
aam
inc
arpl
lods
data16
test
fisttpll
repz
fldenv
xor
movsl
push
hlt
pop
inc
loope
jbe
repnz
aad
cmpsl
xor
outsl
push
jnp
add
test
jbe
in
bound
fsubrs
adc
leave
out
lods
adc
pop
inc
jne
movsl
jmp
arpl
imul
pop
pop
sub
push
sub
jp
add
cmpsb
stos
pop
leave
add
mov
sbb
lea
xchg
adc
xor
mov
and
push
push
int3
cmp
cltd
mov
int
and
leave
jmp
add
dec
push
dec
jg
fwait
jbe
cmc
mov
mov
std
insl
lds
jmp
xor
test
push
mov
jp
or
add
popf
mov
pop
loopne
jg
inc
pop
mov
out
or
push
inc
sbb
fcoml
aad
shl
loope
lds
jnp
aam
mov
mov
fidivrl
push
jbe
in
int
jns
pop
pop
fsts
lcall
dec
inc
rclb
xor
jns
push
mov
loopne
shr
imul
xchg
lahf
je
and
mov
leave
shrl
or
ljmp
sub
push
stos
iret
ja
push
xor
dec
fwait
shll
xchg
les
jnp
add
cmp
sub
jge
scas
push
out
cmp
popf
and
daa
xor
and
aam
pop
xor
and
xchg
sbb
fwait
ret
sti
je
popa
lcall
aad
dec
out
fwait
pop
pop
arpl
xchg
dec
ja
mov
test
rcll
fadds
into
lret
fcoms
sub
push
sbb
mov
rcrb
lock
mov
faddp
daa
outsb
and
cmp
xor
xorl
jge
xchg
lcall
sti
outsb
mov
mov
int
movsl
jmp
iret
push
notl
sbb
adc
jns
dec
or
jle
in
je
in
jl
push
push
ret
xor
gs
or
add
jg
lcall
daa
xlat
adc
xlat
pop
or
mov
push
mov
push
mov
data16
in
fs
cmp
aam
les
rcr
arpl
sub
rorb
stos
sbb
movsb
out
jno
inc
and
mov
sbbl
push
or
or
add
xchg
pop
popf
pop
and
repnz
mov
mov
mov
xchg
inc
push
in
pop
movsl
push
int3
mov
iret
leave
xchg
ret
imul
inc
shrd
aam
fdivrl
addr16
and
push
les
or
lods
fwait
and
jnp
test
mov
mov
addr16
and
test
lea
imul
gs
lds
ror
lea
scas
xchg
shrb
scas
inc
dec
call
jp
fwait
repz
mov
cli
or
sub
ror
inc
mov
rcrl
sbb
shrd
ret
or
mov
dec
je
push
dec
jg
sub
mov
jl
movsb
mov
cli
shrl
pushf
jle
lods
and
loopne
mov
negb
arpl
cli
dec
jmp
xor
idivl
inc
aas
adc
mov
out
mov
jmp
outsb
and
fldpi
scas
dec
subl
pop
or
sahf
sbbb
je
and
shrl
sbb
pop
push
or
shll
dec
test
mov
cmp
insl
int
icebp
push
test
add
stos
push
mov
sahf
xchg
mov
sarl
div
adc
adc
jle
lods
xchg
dec
and
popf
pop
mov
and
pop
fs
dec
std
stos
push
and
push
test
xor
in
out
stos
out
dec
ret
jp
mov
mov
xor
jg
push
lods
out
adc
push
aad
test
or
jb
fstl
adc
mov
sbb
and
jecxz
push
addr16
stc
jne
popa
ja
pop
lahf
pushl
mov
gs
fwait
insl
push
adc
xor
shrl
lret
jae
pop
push
sub
mov
lea
jns
mov
mov
mov
or
test
js
jp
mov
mov
adcb
and
push
fs
sbb
repz
jp
out
fs
add
clc
test
add
push
cli
aas
int
jg,pn
xor
inc
adc
pushf
gs
xchg
loope
xchg
inc
imul
cld
add
dec
adc
ret
sub
mov
jl
xlat
cltd
fadd
push
ret
mov
mov
dec
ja
mov
mov
scas
jo
daa
pop
outsl
repz
mov
es
mov
push
inc
imul
test
add
pop
cld
cmp
pusha
cmp
jno
mov
lea
lret
cmpsl
call
mov
push
and
imul
addr16
adc
sbb
jnp
int3
shl
pop
add
jmp
inc
sti
lods
jno
rcr
nop
cmp
fsubrl
and
mov
mov
enter
fldcw
push
jae
insb
cmpsb
fs
je
cwtd
imul
fidivrs
stc
push
gs
xor
or
repz
in
mov
add
aas
notl
dec
sbb
les
xor
xchg
jns
lret
repz
jg
mov
or
cmpsl
rcrl
xchg
orb
push
adc
xor
xor
int3
sbb
fwait
push
das
das
mov
pusha
push
jmp
das
test
std
ret
fwait
out
dec
mov
mov
inc
mov
cmp
xchg
xchg
jg
mov
insl
popa
mov
sub
inc
iret
xlat
lahf
lea
loope
test
test
ja
aad
inc
add
js
icebp
or
lods
jge
mov
jne
hlt
ficomps
lret
aas
stc
mov
sarb
sarb
daa
incb
out
js
xchg
outsl
cmp
clc
add
call
jnp
orb
testl
or
add
clc
sub
cmp
daa
fwait
cs
mov
cmp
iret
push
jecxz
int3
jnp
dec
jbe
and
mulb
rclb
insb
jle
in
adc
jp
incb
mov
push
imul
mov
stos
xor
js
ja
loope
roll
add
fistpll
js
lcall
mov
enter
xchg
mov
sbb
imul
loop
pop
cli
xor
jmp
xchg
lahf
data16
scas
aaa
ss
loope
inc
out
lcall
adc
push
add
or
mov
fildl
adc
adc
push
jle
ret
pop
lock
cmc
std
xor
dec
add
push
rcrb
and
pushf
std
ret
cwtl
mov
fs
arpl
lahf
and
fwait
les
jb
psubq
add
pop
lods
jns
jbe
push
insb
mov
dec
jge
adcl
dec
xor
ja
call
cmpsb
mov
ret
or
push
out
daa
pushf
cmp
outsl
cmpsl
fnstcw
push
into
sub
repnz
sub
sub
mov
xchg
mov
dec
add
mov
push
cmc
cwtl
psubsb
xchg
into
mov
cmp
pop
sbb
push
lock
std
pushf
mov
xor
sbb
ds
imul
stc
iret
sti
cli
fldenv
push
cli
add
lahf
loopne
popa
aaa
push
sub
enter
mov
jmp
or
pop
int3
fsubrs
aad
mov
xchg
aad
inc
push
lret
sbb
pop
int
icebp
and
arpl
xchg
sbb
add
out
shll
push
cs
lcall
aaa
xor
jnp
mov
mov
dec
jo
test
popa
imul
mov
xor
outsb
jbe
sub
lret
mov
sub
mov
pop
ret
test
jle
mov
enter
test
and
mov
mov
cltd
adc
mov
jb
loop
push
sub
adc
repnz
mov
add
pop
jg
inc
mov
sbb
lds
jno
dec
push
jl
int
xchg
mov
repnz
int
popa
std
jno
negl
dec
andb
movsbl
in
imul
lret
xorb
or
xor
sti
gs
aam
jle
xchg
in
mov
jae
test
inc
add
nop
cmpsb
xor
push
push
cmpsl
mov
and
pop
sbb
sbb
cmp
or
call
ja
inc
add
aam
test
mov
pop
adc
xchg
aad
mov
push
push
mov
add
mov
in
stc
xor
pop
or
inc
pop
lret
xor
xor
xor
mov
or
add
and
adc
push
in
test
ret
andb
add
jne
pop
out
jo
push
adc
mull
cmpsb
pop
cmpsb
inc
inc
je
mov
orl
mov
jle
movsl
xchg
mov
jne
ficoml
std
dec
imul
orb
fcmove
pop
lods
dec
mov
xchg
and
lret
lcall
sub
dec
mov
pop
sub
mov
mov
mov
lock
sub
insb
mov
cwtl
mov
xor
or
dec
cwtl
push
mov
adc
cmpb
icebp
pop
dec
rcrl
jae
test
popf
gs
test
addr16
jmp
push
push
repz
cmp
jno
jl
push
testb
adc
js
data16
pop
std
es
mov
loop
std
fisttpll
add
push
mov
lock
lcall
dec
pop
and
je
sahf
into
pop
repz
xor
and
ja
scas
sub
jp
push
push
aad
lcall
insb
es
sahf
pop
pop
nop
cmp
mov
lods
lods
mov
xchg
shlb
popa
dec
fiadds
addr16
leave
or
push
dec
lret
hlt
shr
mov
icebp
enter
mov
lods
pop
mov
imul
je
lock
fs
mov
pop
jnp
clc
loop
mov
dec
mov
popf
ret
inc
loopne
push
jo
outsl
jmp
dec
xor
cmp
mov
sti
jbe
push
or
mov
adc
mov
in
pop
xor
icebp
cmpsl
out
xchg
pop
into
loope
jmp
sbbl
js
divb
and
test
js
scas
in
mov
add
and
xor
cmp
or
add
add
add
mov
add
jbe
jns
aad
ja
movsb
leave
out
mov
nop
xlat
mov
in
fildll
dec
jne
mov
adc
dec
rcr
iret
cmp
inc
test
mov
xchg
xchg
out
call
and
movsl
pusha
out
out
adc
pop
inc
insb
jmp
aaa
add
xor
pop
dec
jns
and
lods
mov
or
lret
iret
or
dec
cmc
aad
mov
mov
aas
xchg
jbe
ds
movsl
mov
push
lcall
push
ret
and
inc
jnp
fdivrs
cld
mov
loopne
jecxz
xchg
sub
pushf
mov
mov
test
xor
mov
mov
je
add
xchg
cli
sub
xchg
scas
bound
and
shll
xchg
fidivl
iret
inc
cwtl
and
out
jecxz
mov
movsb
cmpsb
mov
jmp
xchg
adc
dec
mov
shll
add
rolb
dec
add
adc
inc
lods
dec
pop
inc
movl
fwait
sti
hlt
cmp
jnp
push
scas
lea
dec
mov
mov
lahf
cmp
pop
int3
mov
and
test
les
sbb
loope
lahf
cs
lods
push
loop
aaa
add
cltd
imul
das
jle
push
jne
jmp
out
mov
add
adc
cmp
ja
jecxz
mov
xchg
nop
fwait
shl
fcoms
roll
xchg
push
jne
adcl
mov
and
lock
push
pop
sbb
jb
roll
mov
adc
dec
add
mov
stc
or
push
mov
jle
push
xchg
mov
jge
daa
sub
jecxz
jns
pop
jmp
repz
pop
sub
outsb
leave
ud1
rcrb
jp
cmc
sti
xchg
cltd
fisttpll
push
inc
fistpl
adc
jle
cmp
pop
lea
jo
dec
sbb
pop
mov
xchg
in
repnz
jl
and
jecxz
jecxz
lahf
pop
add
jno
into
dec
cs
cmp
cli
in
inc
clc
mov
mov
loop,pn
xchg
ss
out
cmp
mov
add
fs
and
test
out
mov
lahf
lods
hlt
mov
xchg
mov
sub
adc
mov
fwait
sahf
sti
xor
and
lea
insl
adc
jg
imul
jge
sbb
and
cs
pop
jp
jge
lcall
dec
sub
test
xchg
jns
and
adc
and
popf
push
xchg
jae
mov
call
fnsave
out
out
jle
fisubl
nop
loop
adc
iret
xchg
xor
mov
push
loop
sbbl
icebp
or
xchg
stos
add
lods
lret
fisubs
pop
adc
mov
inc
cltd
xchg
insl
outsl
lea
cmp
push
cmpsb
add
push
loope
or
sbb
cs
jns
icebp
push
icebp
loope
lcall
jno
xchg
popa
and
dec
gs
icebp
adc
cld
rclb
cli
out
lods
fxam
repnz
aaa
sbb
inc
iret
aas
ljmp
ficomps
cmpsb
xchg
jae
fiadds
sub
and
add
sub
gs
cmc
in
and
mov
lods
pop
sar
mov
add
cmp
and
mov
clc
dec
cmp
cmpsb
jg
mov
and
sbb
dec
stos
xor
loope
add
stos
mov
pusha
jbe
lret
aam
cmp
sub
mov
or
in
fcompl
dec
in
push
cli
ja
push
fisubs
inc
sub
and
or
fwait
fwait
movl
pusha
pop
push
cmp
ret
mov
fstps
ret
dec
fistpll
cmpsb
ret
das
dec
and
aad
dec
subl
inc
cmpsb
in
push
stc
jecxz
out
ss
jecxz
mov
push
push
push
fnsave
aam
testb
arpl
dec
aas
or
and
nop
dec
aaa
add
or
lahf
cmc
pop
test
nop
fisttpll
jne
insb
pop
inc
push
push
test
in
outsl
int
xchg
mov
sti
xchg
pop
and
mov
and
call
std
or
int
mov
adc
mov
out
les
clc
shrb
pop
popw
push
insb
dec
jmp
fwait
pop
mov
bound
rorb
push
out
cmp
das
pop
or
clc
add
repz
int3
cs
in
fnstcw
mov
das
or
dec
test
adc
loope
mov
push
cmc
xor
pusha
pop
push
mov
xor
jne
cltd
pop
frstor
hlt
scas
and
sub
add
push
mov
jp
sbb
les
xlat
pop
xlat
pop
mov
aas
popa
adc
dec
pop
pop
sbb
sbb
enter
jne
cmc
push
cmp
call
testl
adc
adc
repz
mov
scas
push
mov
in
sub
cltd
dec
imul
notl
or
adc
imul
mov
mov
and
cli
cmp
sub
jp
xor
addb
rcrb
int
or
loope
inc
cmp
pop
bound
mov
mov
loope
cmc
and
push
nop
xor
popa
or
fs
inc
clc
xchg
adc
lar
jl
imul
addr16
or
outsl
push
inc
push
xchg
sbb
sbb
add
inc
bound
adcl
jp
pop
sub
adc
rol
push
ds
push
in
add
mov
andb
dec
push
sti
inc
adc
fwait
sbb
icebp
clc
and
fdivl
call
pushf
insl
sbb
mov
ret
jl
pusha
push
pop
push
inc
push
ljmp
xor
sub
test
xor
mov
das
cli
loopne
mov
fistpll
icebp
rcll
dec
add
in
shl
ss
or
pop
mov
xchg
mov
xchg
push
gs
xor
cmpsl
or
les
ret
sarb
in
xorl
arpl
testb
mov
in
adc
push
jae
nop
mov
cmp
aas
test
test
into
xchg
cmp
sub
xlat
xor
jmp
sti
inc
dec
in
aaa
scas
fcomp
xor
iret
cmp
adc
mov
movsl
jo
adc
scas
cmp
jg
int
aad
pushl
out
cmc
mov
mov
adc
out
jne
fs
repz
dec
dec
cmp
xchg
push
roll
dec
add
movl
push
ja
adc
cld
daa
xor
sub
and
dec
mov
lret
or
gs
xlat
sub
push
enter
ljmp
pop
inc
push
xchg
lds
idivl
daa
push
mov
jge
pop
sbb
mov
shrb
shlb
inc
divl
mov
orl
inc
sub
pop
or
shlb
cmc
inc
xchg
mov
stc
add
outsb
xor
mov
leave
dec
xorl
jnp
sub
inc
repnz
mov
movsb
mov
adc
fists
sbb
inc
mov
or
dec
daa
dec
mov
xor
les
pop
dec
push
add
in
rcrb
push
and
push
popa
mov
xor
test
je
adc
movb
inc
mov
or
call
or
push
lods
adc
movsb
rcr
pop
in
xchg
mov
test
mov
xor
js
loope
sbb
out
jmp
xlat
xchg
gs
shlb
test
xlat
ret
out
repnz
js
frstor
mov
and
mov
subl
cmp
inc
int3
and
dec
je
loopne
fwait
out
test
sbb
out
mov
mov
fimuls
or
pusha
mov
nop
andb
mov
cltd
cld
push
mov
or
push
lea
pop
pushl
mov
jg
out
scas
push
imul
or
jo
or
push
or
popf
mov
inc
pusha
loopne
les
test
jl
and
imul
icebp
outsb
mov
jle
jp
shr
sub
out
iret
fadd
mov
sti
dec
scas
cmp
or
xor
xor
xchg
dec
sahf
lcall
xor
sbb
or
or
push
inc
xor
mov
mov
add
pop
xchg
or
arpl
test
stc
cmp
or
inc
arpl
cwtl
jge
out
insl
ss
fnsave
mov
lods
filds
das
xchg
stc
cmpb
sbb
push
cmpsl
arpl
xchg
popa
gs
clc
or
sub
jle
mov
sub
ret
jb
xchg
mov
loope
insb
sbbb
insb
cs
dec
add
cmp
fs
or
cmp
add
test
in
leave
xor
or
fldt
popf
nop
loope
dec
jns
mov
addr16
push
fisubs
sbb
mov
imul
push
or
pop
mov
jmp
dec
mov
jns
std
adc
test
push
outsb
jge
sahf
in
add
ss
hlt
mov
mov
out
movsb
clc
xchg
rcll
push
xchg
inc
mov
lock
out
xor
jle
and
imul
mov
cmp
out
stos
imul
push
subb
sbb
sar
cs
inc
sti
mov
pop
pop
mov
pushf
pop
mov
je
or
pushf
jmp
pop
inc
lock
xchg
cmp
cmp
out
pop
movsb
push
xchg
mov
jnp
mov
mov
test
mov
mov
shl
mov
jno
dec
hlt
sub
imul
into
test
call
popa
pop
cs
lcall
push
pop
mov
lcall
loope
cmp
loop
gs
xlat
adc
out
aaa
cmp
fcom
jecxz
movsb
mov
ffree
movl
add
adc
cltd
jns
lods
lret
push
xor
mov
pop
cmp
sbb
test
adc
push
repnz
add
inc
inc
ret
mov
out
popf
pop
mov
adc
inc
clc
xchg
test
ss
and
inc
scas
iret
call
add
sub
adc
pop
mov
arpl
out
cltd
jg
mov
outsb
fwait
ja
imul
dec
inc
mov
lods
pop
outsb
mov
popf
sub
pop
add
xor
mov
mov
into
addl
inc
repz
outsl
mov
rorb
lods
bound
shll
jg
outsb
dec
ja
or
mov
add
adc
cmp
fwait
lret
dec
test
lods
sbb
jl
sub
adc
movsb
popa
cmp
jb
movsl
mov
shll
test
mov
rcrb
fmull
das
mov
shlb
test
adc
iret
ljmp
cmpsl
xchg
je
stos
dec
jno
cmc
or
mov
in
or
cmp
mov
mov
shrl
jle
out
and
enter
mov
sbb
ljmpw
mov
movsb
ss
pushf
mov
mov
and
or
or
and
add
mov
or
test
pop
mov
sub
xchg
adc
sbb
cmc
mov
jae
xchg
push
sub
stos
lods
dec
mov
adc
fstl
jl
jmp
hlt
xchg
data16
cwtd
out
or
xchg
mov
pop
js
loope
scas
lret
xchg
and
ret
fwait
pop
fdivr
aas
xchg
paddsw
dec
je
xchg
mov
les
icebp
mov
insb
add
insl
sarb
mov
hlt
lods
sub
sub
call
bound
mov
pop
roll
xchg
mov
adc
fildll
add
imul
xchg
dec
inc
pop
je
xor
pop
stos
inc
stc
mov
mov
outsb
aaa
rclb
mov
fnsave
xor
and
sahf
jle
fidivs
negb
jno
addr16
testl
mov
cmpsb
dec
inc
pushl
sub
stc
xlat
imul
pop
mov
pop
rcrl
xchg
scas
scas
mov
jns
lret
adc
popa
cmpsl
lret
enter
jb
push
push
jmp
sbb
or
les
xor
cmp
std
pop
dec
cmc
lret
xchg
mov
std
ss
sbb
hlt
imul
jp
cwtl
aaa
cmpsb
aam
and
mov
fwait
addr16
mov
sub
in
mov
xchg
adc
sub
sti
push
ficoms
scas
xchg
sub
cmp
movsl
enter
add
xchg
cmp
fwait
sti
shll
insl
xor
adc
outsb
ds
cs
frstor
cmp
mov
sub
fsub
test
sbb
cltd
loope
pusha
jb
mov
aad
out
fstpt
mov
pop
and
flds
sbb
repz
mov
inc
enter
imull
ljmp
rolb
sbb
inc
adc
push
pusha
dec
das
and
jecxz
dec
sahf
mov
or
addr16
xor
repnz
xchg
push
sub
psubusb
or
pop
pop
push
mov
rol
rolb
lods
and
jl
inc
int3
pop
jl
movsl
push
inc
jp
call
sbb
push
ds
mov
jecxz
mov
enter
sub
outsl
mov
hlt
cmp
loopne
out
lret
dec
cmpsl
test
maxps
in
jb
sub
sbb
in
xchg
in
adc
mov
jae
inc
test
dec
rclb
mov
jl
xor
pop
das
add
mov
pop
adc
popa
inc
push
ja
jo
jno
sub
rep
inc
xchg
push
lock
loopne
mov
nop
pop
adc
das
sub
inc
fsubr
pop
mov
xor
pushf
mov
int3
ja
mov
orl
mov
stc
mov
mov
lods
and
or
xor
cwtl
adc
out
sbb
mov
cwtl
aad
ss
pusha
cmp
movsl
push
data16
pushf
cmp
and
xor
add
cld
and
sub
jmp
add
test
cmp
bound
rol
mov
jae
dec
pop
repnz
inc
int3
icebp
fisubl
add
negl
pop
adc
dec
mov
add
mov
insb
sbb
mov
mov
js
fwait
outsl
arpl
xchg
ss
aaa
xlat
mov
ljmp
lods
mov
fs
xchg
mov
call
and
icebp
popa
add
mov
clc
jge
js
mov
aad
mov
push
mov
xlat
mov
aas
lret
shll
lea
fsubrs
es
cmp
lret
stos
fdivp
pop
rcll
mov
add
adc
fbstp
out
int3
mov
mov
popf
lods
shll
mov
inc
int3
addr16
leave
xor
cmp
pop
repz
out
aas
test
mov
loope
cmpl
push
jl
test
cmp
mov
mov
xchg
movsl
into
je
imul
fistpll
clc
fdivrp
scas
mov
push
inc
inc
sub
mov
or
adc
mov
loope
sahf
jmp
ds
xchg
out
cmp
sahf
popf
icebp
jle
jnp
push
mov
int
sub
mov
js
mov
xor
orl
bound
mov
out
cmp
push
pop
ja
repz
es
in
test
stos
pop
mov
or
and
je
into
lods
cmpl
cltd
icebp
cmp
fbstp
or
std
mov
push
push
jge
inc
rcr
dec
cmp
imul
shrl
sbb
jno
jb
mov
aad
scas
mov
lods
les
adc
sub
lea
test
xor
pop
cmpsb
or
jmp
repz
cmp
jne
xchg
addr16
cli
adc
sysenter
loop
testb
mov
dec
fildll
repz
movsl
and
lods
in
xlat
sub
into
push
les
hlt
jmp
dec
jns
in
sbb
mov
fsubs
flds
adc
movsb
dec
testb
adc
mov
in
inc
adc
sti
mov
shl
mov
movsl
ljmp
nop
jbe
xor
jne
or
mov
repnz
imul
popf
inc
js
and
mov
dec
cmp
hlt
insb
jmp
test
inc
pop
add
dec
or
cmp
jg
movsb
and
push
icebp
scas
jne
ret
repnz
mov
sbb
subl
mov
rorl
popa
mov
jmp
aam
cmp
dec
and
xchg
rcl
xchg
xchg
nop
cli
insb
aam
out
push
es
and
shll
xchg
add
or
add
iret
lods
sbb
push
xlat
adc
adc
movsl
add
mov
xor
test
cmp
pushf
jle
pushf
repnz
pop
lea
lret
jbe
mov
push
test
mov
cmp
lahf
mov
fdivr
dec
or
fucom
mov
loopne
pop
inc
and
pop
data16
cmp
test
cld
je
pop
mov
in
dec
fsub
mov
xchg
iret
test
push
lcall
pop
add
ret
xchg
imul
pusha
sbb
jecxz
in
imul
popa
add
xchg
inc
repnz
rorb
mov
or
jmp
scas
iret
lret
xchg
ret
clc
push
popf
push
dec
clc
ja
shlb
push
lret
pop
sbb
mov
hlt
adc
and
das
lahf
jns
add
add
dec
jle
xchg
leave
sub
jg
insl
mov
xor
in
aam
repz
in
popf
mov
cmp
inc
shll
dec
mov
int
xor
ds
std
push
mov
stos
push
test
and
ret
mov
mov
cltd
sbb
inc
sub
xchg
popf
xchg
movsl
shll
enter
popf
shrb
mov
into
test
cmp
or
movsl
je
fnstsw
xchg
aas
push
or
sbb
push
loop
mov
fucom
repz
ja
pop
in
cmp
mov
jbe
hlt
cmp
mov
and
icebp
out
pop
mov
jp
lods
out
dec
nop
mov
add
fdiv
mov
pusha
fwait
rorl
jb
fwait
dec
test
push
movsl
jo
dec
fdivrl
sbb
jp
xchg
stc
dec
aad
pop
outsl
nop
cmp
xchg
ljmp
jae
int3
and
lods
pop
dec
or
xor
mov
adcl
mov
jo
pop
rcrl
arpl
lret
pop
in
xchg
test
popf
ret
jmp
orb
pop
dec
jnp
mov
add
sub
iret
mov
test
or
push
cmp
imul
sub
mov
shr
fldl
and
fs
outsb
mov
sbb
adc
fists
dec
in
clc
cmp
or
mov
into
jl
repnz
ret
out
push
out
push
sahf
sbb
loope
testb
les
dec
sti
mov
add
or
data16
ljmp
pop
or
xchg
mov
ja
jmp
clc
roll
call
and
loope
adc
dec
enter
adc
jbe
lcall
test
mov
mov
fstpt
ds
pop
leave
xor
push
cmc
ret
movsl
jnp
sahf
fxtract
fisubl
clc
push
add
jg
mov
mov
add
outsb
pop
pusha
sar
dec
fcom
ljmp
leave
push
inc
xor
in
mov
pop
fimull
lret
aas
sti
mov
dec
xor
enter
divl
scas
xor
insl
lea
and
sub
ja
mov
pinsrw
sar
loopne
ret
fimull
mov
loope
pop
jle
jge
jnp
dec
inc
cwtl
mov
arpl
loope
mov
jnp
and
rorl
dec
sub
pop
fs
sbb
mov
push
adcb
pop
jecxz
push
loop
scas
je
inc
mov
mov
lds
sbb
jge
in
pop
shll
leave
mov
dec
loop
jg
icebp
adc
cmp
icebp
push
mov
dec
cwtl
test
pop
repnz
jnp
lea
and
popl
aam
mov
adc
cmp
cmp
sbb
int3
roll
daa
aad
mov
call
jmp
cli
push
inc
mov
mov
cwtl
and
in
loopne
fisubrs
mov
add
pop
sbb
lret
movsb
sti
popf
and
fucom
gs
add
sbb
orl
jnp
xchg
lock
movzwl
cli
push
loop
cmp
fcoml
and
and
outsb
and
call
je
jb
ljmp
xor
daa
xor
insl
lock
lds
dec
jl
data16
cmp
aaa
mov
ret
xor
jae
fs
add
xchg
adc
stos
dec
inc
stos
and
jns
push
push
sub
ret
sbb
push
jge
fsubp
jnp
das
mov
sarb
fimull
fsub
adc
dec
inc
fs
lret
shll
fadd
lret
jg
inc
adc
push
fidivs
arpl
inc
dec
aas
mov
mov
nop
jnp
fsts
pop
nop
out
jbe
in
out
ret
adc
in
mov
out
sub
jne
enter
adc
les
pop
inc
xchg
add
inc
add
gs
cmp
hlt
and
testl
xchg
js
fs
call
push
aad
and
icebp
xchg
dec
add
xor
cs
cmc
ret
mov
and
sarb
cld
ja
jmp
xlat
mov
stos
push
push
lds
mov
call
comiss
mov
xor
push
outsb
jo
les
ret
pop
dec
repz
add
aaa
repnz
push
mov
dec
jno
xor
call
repnz
push
mov
jbe
nop
mov
mov
in
inc
pop
movb
aam
hlt
daa
xor
mov
mov
rorb
leave
cmp
push
je
lods
loopne
in
and
adc
add
xchg
mov
or
mov
xchg
loop
xor
inc
std
icebp
xor
outsl
cmp
call
inc
loope
lock
cs
push
in
or
inc
mov
pop
adc
dec
dec
fstl
sysenter
pop
xchg
subl
stc
je
int3
mov
jmp
test
and
sub
push
push
lret
push
ljmp
pop
test
shll
and
lods
jae,pn
popf
pop
ss
lods
mov
push
call
test
mov
jp
in
dec
aad
xchg
popa
push
lock
push
dec
jmp
jmp
inc
mov
into
out
push
xchg
addr16
mov
shr
cmp
mov
lahf
imul
add
adcl
inc
mov
cltd
sbb
jno
pop
jns
loope
stc
or
inc
inc
xchg
push
insb
ret
into
xchg
inc
and
sub
mov
mov
mov
push
gs
inc
mov
mov
jge
push
sarl
inc
out
hlt
jg
divb
mov
fmuls
mov
std
pop
hlt
pushf
fdivs
fwait
pop
push
sub
xor
jne
and
cmp
js
hlt
je
scas
fwait
cs
cmp
cmp
aas
mov
fst
dec
push
int3
or
push
sbb
pop
pop
and
jl
in
insl
push
pop
or
daa
inc
fdivrl
loope
cmp
fstps
jb
mov
cmpb
les
xchg
stc
in
pop
stc
arpl
mov
mov
push
inc
sti
xor
sbbb
xlat
xor
inc
add
push
cwtl
xchg
sub
jg
fldl
popa
aaa
shll
stc
jmp
or
rcrl
pop
or
test
and
imul
lds
or
fisubrs
sahf
xor
xor
lea
es
xor
add
loop
push
imul
pushf
in
and
sbb
adc
adc
adc
jne
mov
jp
pop
sub
xlat
frstor
push
pop
pop
clc
in
or
andb
adc
xchg
jb
test
push
and
mov
push
pop
shrb
ds
and
dec
imul
push
xor
mov
outsb
jne
inc
ret
dec
mov
cmpsl
jno
ret
dec
fwait
ja
push
in
orl
jecxz
jnp
ret
out
in
fs
mov
xor
nop
push
mov
cmp
push
imul
and
hlt
outsb
jnp
mov
xor
sbb
jno
insl
orl
cmp
and
int
movsb
cltd
test
add
mov
movsb
dec
fbld
dec
and
push
jb
std
fildll
adc
pop
faddl
js
push
stos
lret
pop
std
ret
or
push
js
sbbb
add
je
fisubrs
mov
call
pop
xchg
push
push
bound
imul
aam
cwtl
aas
sub
jae
arpl
inc
pop
pop
test
ret
jns
stos
jbe
outsb
les
or
mov
mov
push
jg
bound
add
mov
sbb
jge
ret
mov
jle
xchg
jo
mov
xchg
jge
mov
sbb
out
and
xor
mov
data16
push
int
push
insb
sub
mov
jmp
fbstp
and
pusha
imul
mov
fcoml
stos
sbb
cltd
scas
mov
cmpsl
shll
loope
scas
repnz
adc
fiaddl
imul
cmp
pop
gs
daa
jno
pop
dec
sbb
gs
test
jmp
sub
or
ds
mov
stc
js
pop
lds
aaa
cmc
add
jae
aad
cmc
adc
cli
loop
ds
jg
insl
inc
or
mov
sub
das
mov
mov
repz
lods
je
loopne
add
ret
int3
jg
loope
incb
ds
dec
mov
cmp
mov
out
dec
sbb
xlat
jmp
xor
movsb
movl
in
xchg
jno
popa
lret
pushf
popa
aad
dec
cmc
sbb
aas
xor
add
lock
xor
xchg
xchg
leave
inc
sub
push
jp
push
mov
rcrb
loopne
adc
jp
xchg
inc
mov
enter
pop
test
cmp
cmp
push
cmpsb
loope
sub
push
xchg
pushf
mov
mov
push
add
mov
jno
fcmovb
test
mov
mov
out
or
icebp
jne
mov
adcb
mov
ljmp
cmp
jb
inc
aad
pop
mov
add
scas
or
mov
lock
lea
add
movsb
push
dec
out
fcompl
xor
loopne
push
xorl
xchg
jmp
pop
push
testl
sbb
and
sarl
adc
cmc
cld
push
xchg
mov
inc
mov
or
ror
sub
push
sub
lcall
fucomip
and
sarb
adc
dec
pop
push
xor
pop
push
fxch
adc
leave
sbb
arpl
fimull
roll
mov
xchg
fnstcw
dec
stos
imul
sti
out
xorl
jl
subl
cmc
aad
jmp
or
inc
test
mov
out
aam
mov
add
lret
fisttps
add
push
lahf
lcall
aam
and
jp
xor
arpl
cmc
push
pop
inc
ds
out
adc
adc
les
dec
out
roll
add
in
mov
and
jae
imul
loop
lret
inc
fs
sub
xchg
sbb
in
mov
inc
leave
inc
mov
rcl
adc
or
fwait
jge
pop
xchg
mov
push
dec
out
lret
sub
orl
dec
add
push
push
pop
test
and
jnp
and
pop
push
sub
bt
je
pop
clc
xchg
movsb
outsl
jb
xchg
loopne
or
stos
or
jl
xchg
pushf
xchg
pop
stc
dec
jbe
or
shlb
jg
out
sbb
xor
cmc
add
ret
jmp
popa
pop
ret
xchg
adc
fisttpl
mov
and
add
rorb
mov
adc
mov
mov
jg
das
fsubrl
pop
dec
clc
sub
dec
enter
js
movsb
mov
out
repz
lods
mov
scas
rorb
add
pop
es
mov
shll
cmp
push
imul
mov
mov
xchg
or
jno
insl
cmp
pop
aad
mov
inc
das
daa
xor
mov
push
or
pop
dec
cld
jns
sbb
popa
in
cmp
clc
adc
push
jae
scas
push
das
lods
jl
push
lods
cmp
jns
shlb
pop
ds
mov
dec
sbb
bound
jecxz
or
out
bound
jg
in
aaa
xor
std
mov
inc
arpl
cmp
leave
inc
iret
jmp
mov
or
and
xchg
test
xchg
imul
add
rclb
int3
daa
inc
fcmovb
addb
into
jge
lds
pop
and
sarb
mov
movsb
aaa
cmp
inc
dec
pusha
aaa
testb
pop
and
xlat
mov
and
or
cs
lcall
pop
clc
sahf
cmp
rep
add
incb
sbb
mov
and
adc
out
cli
aad
xchg
xlat
mov
and
std
jnp
or
cmp
or
es
pusha
lods
sbb
xlat
jmp
fistpl
and
into
dec
rolb
xchg
mov
xor
repz
iret
fmuls
jae
in
aam
leave
push
mov
jl
iret
inc
mov
pop
inc
push
cmp
push
cmpsb
popf
mov
ucomiss
adc
aam
cld
push
add
testl
jge
pop
int3
pop
rcrb
loopne
xchg
lock
jg
cmc
lds
insl
fld
xchg
jb
test
mov
sahf
sub
xchg
dec
clc
movb
and
mov
test
fwait
cmp
xchg
enter
xchg
mov
pop
pop
loop
adc
aad
in
ficomps
std
fs
ljmp
out
jle
xor
sti
cmp
in
icebp
shl
js
mov
push
popf
in
mov
and
inc
or
dec
insl
dec
and
or
icebp
sbb
mov
inc
gs
scas
fs
sub
lds
std
into
ja
jmp
push
lds
xor
scas
mov
in
dec
addr16
or
xor
jl
mov
test
aad
aad
sahf
add
dec
fcmovne
jnp
lods
icebp
fst
nop
cltd
and
outsb
jbe
xlat
mov
cmp
daa
xchg
xchg
jmp
mov
xor
roll
mov
lret
mov
sbb
je
scas
mov
mov
xchg
loope
add
dec
vpavgb
insl
jb
xchg
mov
jo
mov
jmp
cli
inc
into
push
lods
jle
pop
int3
sti
fidivs
pop
movsl
xor
push
xorb
sub
xor
fdivrs
out
mov
les
pop
in
test
ss
movsb
mov
test
fs
mov
lret
in
in
sbb
lds
lods
xchg
maxps
fisttpl
iret
mov
lcall
pop
inc
int3
and
pop
daa
push
and
pop
pusha
out
decl
add
nop
test
push
xorl
ds
and
xchg
mov
mov
pop
std
js
lods
fcoml
in
mov
movsl
sbb
repnz
jae
mov
push
sbb
cmp
arpl
aas
mov
xchg
outsl
cmp
pop
push
jbe
ds
sti
jp
add
dec
adc
mov
inc
or
push
ret
xor
cld
xor
lret
andl
jmp
inc
call
cli
or
jo
movl
pop
or
inc
fnstcw
sub
fdivrs
push
mov
cld
xor
ret
das
push
push
inc
jns
mov
or
and
cmp
andl
mov
std
ficomps
mov
sbb
sbb
xor
mov
fbld
push
stos
pop
dec
int3
inc
cmp
cld
cmpsl
mov
pop
mov
dec
jae
jbe
xchg
fimuls
pop
or
xchg
in
sbb
and
ficomps
push
push
xchg
pop
jno
aad
mov
jno
cmp
add
mov
mov
cmp
les
nop
cmc
movsl
scas
shlb
out
push
push
test
les
pop
call
test
mov
not
mov
pop
mov
xchg
fcompp
and
lret
adc
push
and
stc
out
push
cmp
cmpl
repnz
adc
jp
adc
sti
cmp
enter
pop
inc
or
dec
shr
jnp
xor
sub
mov
xchg
add
int3
adcb
pop
push
mov
or
add
jmp
cmpsb
fadd
insl
popf
or
sbb
das
fdivl
dec
aas
pushf
xchg
lea
inc
and
xchg
ret
push
ret
jnp
je
stc
xor
fcmovbe
aaa
dec
pop
mov
push
incb
xchg
xlat
or
sub
push
mov
imul
xor
add
sub
push
lds
fwait
ja
insl
lret
addr16
cmp
dec
xor
add
push
dec
cmp
std
pop
das
sbb
cli
lea
sub
les
flds
outsl
mov
sbb
aad
pushf
adc
lds
sub
inc
cmp
daa
xchg
scas
lds
ficoms
or
mov
andl
daa
xchg
imul
mov
dec
xlat
js
push
sub
mov
and
jecxz
pushf
jne
adc
adc
rcr
mov
or
insb
imul
push
icebp
push
outsl
adc
mov
cld
loope
dec
or
jns
std
mov
mov
and
aas
insb
ljmp
int
inc
test
mulb
testb
into
stc
imul
test
out
push
addr16
imul
inc
inc
mov
jle
jle
mov
out
rorl
pop
lock
daa
ss
pop
lods
xchg
xor
sub
inc
add
out
mov
clc
sbb
pop
jmp
inc
outsl
push
cmpl
in
fists
cmp
sahf
adcl
test
fdivl
ret
lods
faddp
push
fcmove
ret
pop
inc
inc
dec
aas
dec
jp
sub
jl
sub
daa
jmp
mov
rcr
push
movsl
jmp
roll
iret
mov
inc
enter
cmc
dec
jmp
vpmulhw
xchg
dec
mov
notb
mov
mov
or
outsb
xor
loopne
mov
push
aas
dec
jge
rorl
adc
lods
fmuls
arpl
mov
rcr
ret
mov
mov
jo
mov
jnp
pushf
imul
ficompl
or
or
xchg
xchg
add
rol
push
std
push
ret
and
inc
ss
outsb
test
aas
adc
mov
inc
loope
ljmp
dec
bound
mov
rcrl
outsb
fidivl
push
mov
pop
mov
lret
jbe
sub
lcall
fsubrl
stc
jbe
push
fistpl
ja
in
xor
xor
imul
hlt
not
inc
jl
jle
cmp
xchg
addr16
subb
push
imul
data16
aaa
out
xchg
mov
fidivrs
mov
imul
repnz
adc
push
inc
xchg
das
dec
sub
in
in
lds
mov
xor
add
jbe
aas
andb
xchg
ret
inc
stos
fs
mov
repnz
push
subl
xor
scas
sti
rolb
push
pop
ret
xor
ret
mov
xchg
pop
inc
and
cmc
push
cli
mov
inc
push
lea
push
mov
inc
outsl
mov
test
andb
ret
outsb
imul
mulb
inc
out
aad
pop
scas
cmpsb
cmp
pop
mov
clc
mov
jl
test
jge
push
nop
stos
add
loope
mov
fidivl
add
cbtw
and
and
push
aad
and
dec
out
pop
lds
lret
jle
pop
pop
insb
std
and
pop
xchg
add
add
stos
inc
cli
pop
outsb
xchg
xor
mov
fistpll
and
stc
in
sbb
daa
adc
mull
sbb
rorb
shl
fs
testl
aam
aaa
push
inc
mov
sbb
sti
scas
fdivrl
push
mov
push
inc
or
daa
pushf
adc
shl
mov
mov
ret
or
pop
clc
popf
dec
imul
movb
sbb
cmpsb
adc
fwait
cli
iret
punpckldq
cmp
ficomps
subb
jae
inc
sbb
jo
in
and
fwait
sub
shlb
aad
lret
aam
int
pop
repnz
mov
cmp
insl
fdivs
ficoms
jo
push
stos
cmp
fwait
not
mov
sub
cmp
ret
mov
aad
mov
mov
fwait
cmp
in
imulb
or
ror
lea
shlb
push
icebp
pop
and
inc
rolb
das
cmp
xchg
in
std
cmp
push
cltd
aad
lret
xchg
adc
xchg
out
test
and
rcll
enter
inc
mov
inc
cmp
int3
ret
inc
jnp
jmp
testl
push
cmpsb
addr16
mov
inc
shll
pushf
dec
push
xchg
sub
cmp
cwtl
jnp
sbb
out
xor
add
test
insl
sarb
int
or
stc
jecxz
sbb
sarl
jns
push
jb
loopne
jge
mov
ja
dec
cmpsb
jecxz
cmp
cwtl
push
adc
lods
jg
jge
sub
xor
cmp
jmp
faddl
jl
sbb
loop
inc
lcall
sarl
fldpi
and
and
dec
mov
jg
mov
mov
stc
movsb
shrb
xchg
cmp
inc
mov
mov
subl
sub
dec
sarl
nop
lahf
push
aad
push
ljmp
and
out
rcr
dec
xlat
mov
cmp
push
sbb
xchg
dec
pop
dec
push
cli
or
sbb
outsl
push
movsb
or
decl
lods
imul
in
adc
popfw
ret
stc
sbb
mov
cli
jns
ss
fs
mov
dec
mov
dec
jecxz
pop
adc
xlat
sarb
push
lcall
or
movsl
ret
pushf
pop
ret
add
lahf
jo
rcl
adc
arpl
out
add
hlt
cmpsb
flds
popa
jb
sub
sbb
mov
add
sarb
daa
outsb
movsl
dec
ret
jbe
push
pop
add
addb
lea
pop
jns
movsl
dec
test
adc
ds
xor
jl
dec
or
mov
xchg
sti
xor
push
push
jbe
pusha
std
mov
std
adc
mov
and
pusha
ljmp
pop
jge
clc
lds
orl
lods
test
aam
pop
sahf
mov
xor
sub
push
xor
xor
sti
movsl
out
cmc
inc
roll
or
sbb
jp
fistps
xchg
push
mov
arpl
adc
cld
pop
cwtl
outsb
push
in
int3
and
mov
jl
mov
add
and
pusha
dec
pop
xchg
xchg
xor
pop
and
call
xor
out
sub
lahf
inc
or
adc
data16
scas
test
push
xor
aas
imul
das
mov
push
pop
insb
xor
loop
insl
std
mov
push
aad
inc
rcr
movsl
push
aas
push
mov
dec
mov
sbb
push
loope
in
or
dec
shr
mov
test
push
fstpt
lea
out
ret
mov
or
stc
mov
mov
and
fsubs
mov
popf
jns
ret
adc
nop
jb
int
inc
xchg
sub
xorl
repnz
sub
mov
roll
fcoml
pop
loope
into
cmpsb
shl
mov
mov
mov
imul
mov
xor
sub
inc
adc
ds
fldt
mov
test
and
repz
and
mov
push
sbbb
sub
or
in
imul
sub
or
cmp
ljmp
mov
mov
sbb
psubw
scas
jg
or
sub
xor
pop
push
orl
test
dec
mov
push
adc
sub
pop
jge
xchg
fistps
dec
inc
and
jecxz
mov
aad
jne
add
addr16
xor
fucomi
mov
pushf
lock
mov
loopne
scas
push
jo
mov
inc
mov
pushf
or
dec
sub
mov
push
hlt
arpl
lahf
shlb
add
add
add
add
add
movl
sub
idivb
clc
xor
xchg
pop
xchg
mov
cmp
sub
cmp
test
and
test
jl
out
ss
adc
or
mov
aad
mov
ds
mov
xchg
push
jge
aaa
int3
mov
dec
mov
cli
sbb
and
pop
or
mov
test
xchg
mov
divl
jge
xor
cmp
cmp
data16
and
xor
icebp
lcall
pusha
js
cmp
pop
pop
jecxz
mov
sti
dec
jnp
ljmp
mov
arpl
pop
dec
scas
out
clc
enter
clc
loopne
or
fists
mov
push
divl
outsl
scas
orb
xchg
sbb
mov
jg
fwait
ja
inc
aas
mov
mov
cs
xor
pop
lahf
push
pop
out
les
pop
push
in
rorb
sbb
dec
lea
mov
movsl
jmp
inc
in
mov
ljmp
xchg
dec
sbb
xchg
pop
mov
mov
dec
bound
out
xchg
cmpsb
adc
hlt
jge
inc
test
sub
pop
xchg
loopne
lds
stos
add
cmc
out
mov
push
inc
lea
cmp
icebp
push
sbb
push
cltd
clc
push
fsubrp
aam
lods
inc
pop
pop
cmp
out
or
push
inc
push
mov
stos
les
mov
and
in
pop
iret
fwait
pop
mov
xorb
push
and
mov
out
cmp
xor
push
lcall
les
inc
adc
pop
roll
sbb
mov
mov
inc
mov
leave
pop
pop
inc
and
jb
push
cltd
das
in
push
cwtl
pop
pop
imulb
push
jecxz
addr16
js
call
adc
shlb
test
and
dec
xchg
into
xor
fwait
scas
insb
cmp
sbb
popl
push
into
cmp
or
call
nop
das
pop
test
inc
jmp
pop
or
push
add
push
dec
mov
lahf
sahf
xor
dec
pusha
and
jnp
leave
cmp
add
jo
adc
mov
cmp
mov
hlt
sarl
inc
inc
or
in
cmp
jbe
push
icebp
mov
sti
inc
dec
idivl
xchg
xor
add
pop
xchg
in
pop
fsubrs
mov
xchg
or
sahf
dec
jns
sarl
jo
js
leave
adc
sub
lahf
pop
add
or
and
adc
cmpb
mov
mov
inc
setae
jecxz
fistpll
orl
ljmp
inc
sub
push
lret
sbb
pop
push
cmp
sarl
out
fmuls
mov
and
add
sub
testb
aaa
repz
std
jb
data16
incb
or
shr
ss
cmp
sbb
stc
add
dec
xor
push
scas
andl
imul
sub
or
pop
mov
popf
loope
repnz
pop
movsl
sbb
jbe
mov
in
xor
adcb
lea
xor
aam
nop
adc
movsl
push
pop
outsb
xchg
mov
in
fistpl
mov
mov
jl
push
lods
in
repnz
and
call
aaa
inc
fistl
addr16
cli
out
jmp
xor
ret
pop
xchg
sub
insl
into
sbb
adc
and
xor
outsb
loop
negb
push
cld
insl
loopne
sub
loop
mov
push
sbb
arpl
mov
inc
fwait
jnp
addr16
xchg
imul
sub
mov
add
sub
xor
sysenter
xor
fs
scas
into
lret
ret
loop
std
int3
sub
mov
int3
aam
jnp
cmc
and
dec
dec
push
icebp
push
sti
jmp
std
cmp
imul
push
call
pop
add
sub
lods
cmp
sbb
ret
mov
cltd
mov
setne
imul
sub
imull
cld
cltd
mov
xchg
mov
test
mov
xsha1
cmpsb
sub
popf
jo
pop
adc
mov
inc
incb
pop
cmp
inc
std
inc
xchg
mov
mov
mov
clc
pusha
pop
fisubrs
lret
mov
insb
jmp
push
loop
pop
mov
lret
mov
int3
hlt
sub
loopne
dec
mov
jp
adc
add
jne
cmp
icebp
xchg
in
sub
fnsave
push
xor
jp
jl
negl
arpl
aas
mov
add
pop
ret
adc
xor
shl
push
cmp
add
test
pop
add
jns
jle
add
cld
jl
adc
mov
inc
push
or
mov
icebp
stc
ss
loop
in
jae
push
fwait
mov
std
inc
enter
stos
lock
sbb
lahf
inc
cmpsl
mov
cmp
jo
outsl
cmp
xchg
icebp
push
xchg
sti
outsl
adc
cmp
mov
cmpsb
movsb
out
xchg
insl
jmp
adc
sbbl
and
imul
mov
dec
and
push
jl
cwtl
mov
jbe
xlat
pop
dec
xchg
jb
or
sub
cmp
mov
or
pop
or
das
push
xchg
int3
addl
jae
sbb
test
xchg
and
fistpll
jle
lds
mov
xor
push
gs
and
pop
sub
xchg
xchg
in
xchg
lret
jae
sub
fs
in
flds
fidivrs
outsl
popa
popa
and
loop
dec
mov
push
push
sub
mov
mov
mov
jl
add
inc
jno
xor
fists
sti
mov
mov
popf
call
loope
xchg
das
jmp
xor
shrb
or
int
icebp
xor
test
xchg
jg
aam
dec
add
hlt
out
mov
leave
fsubl
outsw
push
test
lahf
cmp
and
int
cwtl
adc
add
xor
leave
addr16
dec
divb
std
inc
jno
push
movsb
fs
pop
leave
rolb
cmpsb
scas
bound
fs
out
inc
dec
xor
lods
fwait
mov
push
stos
pop
mov
add
xchg
jb
aaa
sub
imull
mov
mov
add
or
sbb
in
out
mov
mov
std
xchg
movsl
adc
mov
ret
fucomp
mov
sbb
iret
or
sbb
and
inc
sub
add
xchg
inc
pop
lret
adc
jns
es
xchg
sub
fadds
scas
lret
sbb
add
fiadds
les
pop
test
sub
loop
aas
cli
ss
adc
int
xchg
jmp
mov
das
sub
cmpsl
adc
out
push
sub
cli
adcb
scas
ja
imul
mov
fmuls
movsb
add
jne
push
test
sub
and
or
mov
sub
test
xor
stos
addb
mov
imul
pop
into
mov
xchg
jbe
cmp
cwtl
ret
das
and
add
int3
push
popf
test
cmp
rol
rorb
fmull
jne
sahf
cmp
push
mov
mov
dec
in
fadds
mov
inc
mov
popf
fdivrs
xlat
gs
cmc
insb
movsb
test
mov
xchg
enter
sub
lret
sbb
sbb
jae
adc
mov
mov
in
add
pusha
xchg
xchg
xchg
std
and
int3
xchg
in
xchg
scas
shlb
movsb
pop
clc
es
ja
add
mov
mov
cmpb
sahf
mov
lods
xchg
leave
push
cmp
xchg
xchg
cltd
xchg
out
mov
scas
arpl
lods
aam
add
imul
inc
push
mov
dec
lds
or
mov
push
imul
in
dec
movsl
ret
xrelease
test
push
pop
push
pop
dec
fdiv
xlat
mov
cmp
lret
stc
repnz
cli
nop
clc
arpl
sub
jmp
adc
outsl
pushf
xchg
mov
inc
push
xor
sbb
xor
or
shlb
andl
stos
adc
inc
sbb
sbb
les
sub
push
adc
ss
filds
dec
popf
imul
imul
subb
xchg
xchg
mov
push
aaa
jb
ret
sbb
jne
lgs
mov
xchg
and
dec
dec
loop
loopne
sub
testl
xor
aad
enter
pop
pop
jbe
pusha
jae
or
dec
mov
jno
inc
call
jle
int3
arpl
mov
sub
cmpsl
adc
mov
sbbb
ja
mov
sti
popa
je
aam
fwait
ret
call
imul
ljmp
outsb
xor
mov
xor
addl
fsubrl
enter
sbbl
pop
test
sub
pop
bound
pop
rcrb
xchg
pushf
mov
addb
or
dec
adc
je
jnp
jle
add
test
mov
insb
and
and
jmp
push
roll
fld
cltd
or
lret
push
pop
in
jp
jg
outsb
icebp
cmp
mov
sbb
jge
cmpsl
fbstp
pushf
int
inc
dec
ljmp
add
xlat
pop
or
jne
loope
sbb
sub
adc
pop
rcrb
add
add
add
add
.byte
xchg
add
insl
dec
jne
xor
dec
and
push
xor
cmp
and
jbe
inc
pop
and
pop
push
xor
jb
arpl
dec
jb
push
sub
cmp
jne
push
xor
and
push
dec
cmp
push
add
cmp
xor
cmp
xor
add
push
dec
insl
dec
push
jbe
imul
add
insb
and
xor
and
arpl
xor
dec
inc
add
add
aad
jmp
add
adc
add
add
add
add
add
pop
add
pop
add
add
xlat
cmp
add
cmp
add
cmp
add
add
xor
insl
add
mov
add
outsl
cmp
add
add
cmp
add
sub
pop
add
pop
add
pop
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
outsb
dec
pop
pop
cmp
cmp
gs
add
inc
push
inc
push
pop
inc
jno
outsl
arpl
jbe
inc
pop
inc
push
inc
dec
push
inc
inc
dec
inc
pop
add
dec
push
inc
js
push
dec
dec
pop
inc
dec
inc
push
inc
push
push
push
pop
inc
inc
pop
inc
dec
dec
inc
pop
add
push
inc
inc
dec
inc
push
dec
push
dec
inc
inc
inc
inc
dec
pop
inc
inc
pop
inc
dec
dec
inc
pop
add
popa
dec
push
pop
dec
push
push
inc
inc
pop
inc
pop
dec
inc
pop
add
fs
jbe
popa
inc
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
inc
pop
add
jae
push
dec
pop
push
inc
dec
push
push
push
dec
push
inc
popa
pop
inc
inc
pop
inc
dec
dec
push
inc
inc
inc
pop
add
pop
pop
push
push
pop
je
bound
push
inc
inc
pop
inc
pop
push
inc
pop
dec
inc
pop
add
pop
jo
jo
pop
pop
pop
dec
pop
outsl
inc
inc
pop
inc
push
inc
dec
pop
dec
inc
pop
add
pop
pop
dec
pop
push
push
pop
pop
pop
push
inc
inc
js
jno
inc
pop
inc
push
inc
pop
dec
inc
inc
pop
add
pop
push
pop
inc
push
push
jo
pop
data16
inc
dec
push
pop
arpl
ja
jb
inc
pop
inc
dec
dec
inc
pop
add
push
dec
arpl
dec
addr16
pop
outsb
inc
inc
inc
pop
inc
push
inc
inc
push
inc
dec
push
inc
dec
inc
pop
add
pop
pop
jne
pop
outsb
push
pop
pop
pop
dec
push
dec
inc
inc
pop
inc
push
inc
pop
dec
dec
inc
pop
add
jno
pop
pop
pop
pop
addr16
jne
pop
jno
ja
inc
pop
inc
push
inc
inc
dec
inc
pop
add
pop
and
jp
jp
jae
jne
je
dec
xor
add
jno
aaa
and
dec
push
dec
push
xor
and
xor
pop
xor
and
and
outsb
inc
aas
jne
xor
add
add
dec
aaa
aaa
xor
inc
push
jno
add
push
pop
cmp
aaa
insl
add
aaa
ss
xor
inc
and
insl
insl
dec
and
addr16
cmp
js,pn
and
aaa
dec
jne
cmp
push
inc
js
dec
push
cmp
aaa
dec
push
xor
add
push
popa
popa
jp
dec
xor
ss
sub
push
add
and
dec
pop
and
outsl
add
add
xor
gs
xor
aaa
push
dec
and
and
xor
.byte
mov
pop
add
add
adc
add
add
add
add
mov
adc
add
add
add
add
add
add
fsubl
pop
add
adc
add
and
add
adc
add
pop
add
pop
add
add
add
pop
add
add
add
add
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
pop
add
and
add
pop
add
pop
add
pop
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
add
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
dec
jo
outsb
inc
imul
add
or
inc
gs
imul
push
add
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
insl
fs
xor
cs
insb
add
adc
imul
add
gs
add
fs
insb
cs
insb
add
dec
outsl
arpl
add
je
jb
arpl
jae
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
gs
jne
jb
outsb
je
imul
jns
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
inc
fs
lret
jae
inc
inc
push
dec
gs
fs
jns
add
xchg
add
je
outsl
insl
insl
push
jb
jo
jb
imul
gs
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
imul
bound
gs
add
sti
add
je
outsl
arpl
push
imul
inc
gs
jne
jb
outsb
je
push
dec
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
jb
insb
insb
push
imul
add
mov
inc
jb
ja
arpl
inc
js
add
inc
insb
outsl
jae
inc
gs
je
jo
add
inc
gs
push
imul
xchg
add
inc
imul
jae
popa
addr16
add
popl
inc
gs
imul
outsl
arpl
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
push
ja
jb
add
push
add
gs
je
inc
popa
jb
je
adc
inc
gs
insb
addr16
je
insl
push
gs
push
add
add
outsb
fs
imul
add
je
jne
jae
jb
xor
inc
push
gs
add
add
push
jae
push
imul
arpl
push
push
inc
push
xor
cs
insb
add
or
push
jo
inc
add
push
popa
je
dec
popa
imul
gs
jns
add
dec
push
inc
push
dec
cs
insb
add
add
je
imul
jae
or
push
gs
dec
jne
push
add
stos
add
gs
je
push
arpl
outsb
add
add
jb
je
push
je
add
add
je
jb
jae
dec
jb
inc
js
movl
inc
outsl
outsb
je
push
add
inc
inc
dec
xor
cs
insb
add
add
add
add
add
add
and
add
dec
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
ret
add
inc
add
enter
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
xor
add
add
add
call
or
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
sbb
add
add
enter
or
jmp
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
add
add
add
add
add
add
add
add
add
push
add
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
out
cwtl
sub
add
push
add
add
add
add
sbb
add
add
enter
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
not
hlt
testl
add
fiaddl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
aaa
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
add
and
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
aaa
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
add
and
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
aaa
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
add
and
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
aaa
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
add
and
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
aaa
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
add
and
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
aaa
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
add
and
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
aaa
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
add
and
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
aaa
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
add
and
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
aaa
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
add
and
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
fsubl
inc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
add
add
sbb
add
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
je
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
jae
jg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
mov
call
and
cmp
cmpb
ds
sarb
fistpll
out
out
idivl
std
ds
aas
or
aas
aas
aas
dec
aas
push
aas
push
aas
xchg
lea
mov
les
fidivrl
stc
aas
add
add
add
add
or
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
lods
xor
xor
dec
ss
ja
jge
xorl
ss
adc
adc
cs
jns
mov
mov
mov
mov
aaa
lret
aaa
fdivs
out
or
adc
sub
dec
cmp
test
lods
cmp
cmp
cmp
cmp
and
das
cmp
push
cmp
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
mov
cmp
loope
in
cmp
push
ds
and
daa
ds
ds
ds
ds
test
mov
ds
ds
ds
loop,pt
out
in
ds
aaa
aas
cmp
aas
push
aas
repnz
add
add
add
add
xor
xor
jno
ja
jge
xorl
xor
xor
xor
xor
adc
push
jo
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorl
xor
fdivs
aaa
ss
mov
pop
aaa
stos
aaa
shlb
fdivl
jecxz
jmp
aaa
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
jns
mov
mov
scas
cmp
cmp
cmp
cmp
cmp
pop
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
xchg
cmp
scas
cmp
les
loope
icebp
cmp
push
ds
xor
inc
ds
jnp,pt
jg
test
mov
ds
ds
ds
ds
sarl
fdivrs
ds
aas
xor
fs
xchg
aas
popf
aas
mov
aas
mov
aas
aam
cmc
aas
cli
aas
add
add
add
add
add
or
xor
xor
xor
xorb
xor
shll
xor
xor
xor
xor
xor
xor
xor
jle
xchg
xor
fdivl
add
push
xor
push
xor
xor
xor
xor
xor
xor
xor
bound
les
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
test
xchg
xor
in
call
ss
ss
movsb
ss
ret
ss
sbb
push
aaa
bound
in
dec
cmp
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsb
cmp
js
jl
xlat
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cli
cmp
adc
sbb
push
ds
ds
ds
ds
ds
ds
ds
jle,pt
test
mov
xchg
ds
mov
ds
xlat
fnstsw
out
in
ds
add
add
add
xor
inc
xor
xor
xor
xor
je
xorb
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
and
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
outsb
cmp
jbe
jp
jle
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
push
add
add
cmp
inc
.byte
