add
add
adc
inc
add
and
sbb
add
cmp
inc
add
and
inc
add
and
sub
add
sbb
add
add
cmp
add
push
cmp
clc
dec
inc
add
add
inc
inc
add
or
or
or
imul
or
add
jl
add
add
add
add
add
xchg
add
rorb
mov
add
les
push
add
xchg
inc
add
add
inc
add
sbb
inc
add
and
inc
add
add
inc
add
and
sub
add
sub
inc
add
add
and
inc
add
add
add
add
dec
inc
add
add
addb
add
mov
add
inc
mov
add
jl
inc
add
adc
cmp
sub
dec
dec
nop
jmp
mov
shl
mov
push
push
call
mov
call
pop
call
call
push
call
pop
push
push
call
mov
push
jmp
jmp
xor
mov
ret
mov
ret
pusha
mov
push
push
ret
mov
or
je
cmpl
jae
mov
call
mov
push
push
call
push
call
or
jne
mov
call
push
push
pushl
call
pushl
call
pop
ret
mov
or
je
call
mov
cmp
jae
mov
call
ret
cmpl
jb
pushl
call
or
je
push
push
call
push
call
pushl
call
ret
ret
cmpl
jb
call
pushl
call
ret
mov
mov
mov
ret
nop
push
mov
add
push
dec
jne
mov
add
xor
xor
mov
movl
mov
movl
fldl
fmull
add
fstpl
call
add
mov
fstp
xor
mov
lea
shl
sub
shl
sub
shl
add
xor
inc
inc
cmp
jl
lea
movl
movl
mov
cmp
jge
inc
cmp
jl
mov
cmp
jge
inc
cmp
jl
mov
cmp
jle
cmp
xor
xor
mov
movl
mov
movl
fldl
fmull
add
fstpl
call
add
fstp
add
ret
nop
nop
nop
push
push
mov
add
push
dec
jne
mov
add
xor
mov
lea
shl
sub
shl
sub
shl
add
xor
inc
inc
cmp
jl
mov
movl
xor
xor
addl
mov
movl
mov
movl
fldl
fmull
add
fstpl
call
add
mov
xor
mov
lea
movl
mov
xor
mov
movl
mov
movl
fstp
fldl
faddl
add
fstpl
call
add
fstp
call
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
cmp
mov
jge
cmp
mov
add
pop
ret
add
add
add
add
lahf
inc
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
push
mov
xor
mov
mov
cmp
jle
movl
xor
xor
mov
add
movl
mov
lea
movl
fldl
faddl
fstpl
call
add
mov
fstp
cmp
jle
cmp
mov
push
push
push
call
add
inc
add
cmp
jg
mov
cmp
jge
dec
cmp
jl
xor
xor
mov
movl
mov
movl
fldl
fdivl
fstp
jmp
nop
stc
lds
rcrb
rorb
add
or
cmc
add
xchg
enter
xor
movl
movl
mov
movl
xor
mov
mov
cmp
movl
fldl
fdivl
fstp
jge
inc
cmp
jl
xor
pop
pop
pop
mov
pop
ret
add
add
filds
lock
push
mov
push
push
mov
imul
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
push
push
push
lea
mov
call
test
jne
mov
jmp
cmpl
je
call
jmp
lea
mov
push
push
push
push
push
push
push
mov
movw
mov
incl
mov
incl
push
push
call
add
push
call
pop
mov
test
je
mov
mov
mov
pop
pop
pop
mov
pop
ret
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
mov
inc
add
add
je
cmp
bound
pop
popa
insb
insb
outsl
arpl
add
add
add
add
add
add
in
add
mov
call
movw
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
add
add
nop
add
pushf
push
inc
add
fs
popa
insb
insb
outsl
arpl
sub
add
add
add
xor
add
add
jae
add
inc
add
add
add
add
add
add
add
inc
add
add
jae
cmp
gs
gs
imul
add
push
mov
mov
pop
ret
nop
nop
push
mov
mov
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
add
mov
call
lea
mov
push
push
push
push
push
push
push
mov
movw
mov
lea
incl
mov
incl
push
push
call
add
mov
pop
ret
push
call
pop
ret
push
mov
add
mov
call
movw
incl
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
call
subl
push
push
call
add
mov
mov
mov
pop
ret
nop
nop
nop
push
push
push
mov
mov
cmpl
jne
mov
cmp
je
cmp
jne
movl
jmp
movl
mov
mov
add
dec
dec
not
and
push
push
push
push
call
mov
test
jne
xor
jmp
mov
mov
pop
pop
pop
ret
nop
nop
push
push
push
mov
mov
push
push
push
mov
push
call
mov
mov
test
setne
and
pop
pop
pop
ret
nop
push
push
push
mov
mov
test
mov
je
push
push
push
push
call
test
jne
mov
mov
sub
call
xor
jmp
add
sub
test
jne
mov
pop
pop
pop
ret
nop
push
push
push
call
dec
je
xor
ret
mov
ret
push
push
push
call
dec
je
xor
ret
mov
ret
nop
nop
nop
push
call
cmp
je
push
call
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
test
je
test
je
cmpl
jne
xor
jmp
push
call
mov
test
jne
xor
jmp
push
push
call
mov
push
push
call
mov
push
push
call
mov
mov
cmpl
je
cmpl
je
mov
cmpl
jne
xor
jmp
mov
pop
pop
pop
pop
ret
xor
ret
nop
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
call
pop
pop
ret
push
mov
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
call
test
jne
movl
movl
movl
movl
movl
mov
mov
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
call
pop
pop
ret
push
mov
push
call
pop
mov
push
mov
push
call
add
pop
ret
nop
nop
ret
nop
nop
nop
movl
ret
nop
cmpl
je
call
ret
ret
nop
nop
nop
push
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
jmp
mov
add
add
add
mov
mov
add
cmp
jl
mov
xor
add
add
add
xor
mov
mov
ret
push
mov
push
push
push
mov
mov
mov
xor
cmp
jae
or
jmp
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
lea
xor
mov
and
add
add
cmpl
jne
mov
add
add
and
lea
mov
mov
mov
and
add
add
call
add
mov
sub
sub
sub
lea
mov
and
movl
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
lea
mov
xor
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
and
mov
mov
add
add
cmp
jbe
testb
je
sub
mov
sub
mov
and
sub
cmp
jbe
or
jmp
sub
mov
and
mov
add
mov
mov
and
movl
mov
and
cmp
jae
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
and
add
add
add
mov
mov
mov
mov
and
add
mov
mov
jmp
or
jmp
mov
sub
mov
sub
add
mov
and
xor
mov
add
push
call
pop
add
xor
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
add
and
cmpl
jne
call
mov
cmpl
jne
mov
add
add
and
add
mov
test
je
mov
mov
sub
cmp
jae
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
cmp
jae
mov
jmp
mov
add
cmp
jae
mov
jmp
mov
mov
dec
add
add
cmp
jae
mov
jmp
mov
dec
not
and
add
mov
mov
mov
sub
add
call
test
je
mov
sub
add
push
push
call
add
xor
jmp
mov
mov
add
call
test
je
addl
mov
add
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
lea
lea
lea
cmp
jae
mov
jmp
lea
call
test
jne
or
jmp
mov
add
cmp
jae
mov
jmp
mov
dec
mov
add
add
add
cmp
jae
mov
jmp
mov
dec
mov
not
and
test
mov
je
mov
mov
add
cmp
jne
cmpl
jge
mov
mov
sub
test
je
mov
mov
add
call
test
je
add
mov
push
push
call
add
jmp
or
jmp
mov
mov
sub
call
test
je
mov
sub
add
mov
incl
mov
mov
mov
add
add
sub
push
push
call
add
xor
jmp
or
jmp
mov
test
jne
mov
mov
call
test
jne
mov
call
or
jmp
add
mov
push
push
mov
push
call
add
xor
pop
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
and
add
add
mov
cmp
jbe
mov
jmp
mov
mov
sub
cmp
jbe
xor
jmp
dec
not
and
mov
mov
test
je
mov
mov
add
add
cmp
jne
mov
sub
push
push
call
add
jmp
decl
mov
mov
mov
mov
sub
sub
mov
mov
call
sub
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
add
cmp
jbe
mov
sub
mov
add
call
mov
sub
sub
mov
mov
jmp
mov
test
jne
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
and
cmp
jb
add
call
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
mov
test
je
call
lea
mov
test
je
mov
sub
and
add
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
orl
mov
and
add
add
testb
je
mov
and
add
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
and
orl
mov
and
cmp
jae
mov
add
add
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
and
cmpl
jne
mov
cmp
jbe
mov
jmp
mov
cmp
jbe
push
call
pop
call
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
xor
mov
add
and
lea
mov
call
test
je
addl
sub
mov
mov
mov
pop
pop
pop
ret
nop
push
mov
mov
test
jne
xor
pop
ret
cmp
jb
push
call
pop
pop
ret
push
call
pop
pop
ret
nop
push
mov
push
push
mov
test
jne
xor
jmp
call
cmp
jae
mov
jmp
lea
and
cmpl
jne
push
call
pop
cmp
jae
mov
add
mov
add
add
mov
cmp
je
mov
andl
lea
mov
and
andl
mov
mov
mov
mov
mov
call
mov
jmp
mov
mov
cmp
jne
mov
add
add
add
jmp
add
cmp
je
mov
test
je
mov
jmp
mov
jmp
mov
mov
mov
cmp
jbe
movl
mov
jmp
mov
cmp
ja
mov
mov
cmp
jne
mov
cmp
je
mov
and
mov
sub
cmp
jae
andl
mov
and
andl
cmp
jb
mov
mov
mov
mov
lea
mov
mov
mov
call
mov
jmp
mov
sub
mov
and
mov
add
add
lea
mov
lea
mov
cmp
jae
add
add
add
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
jmp
jmp
lea
push
call
pop
test
jne
call
push
call
pop
jmp
call
xor
pop
pop
pop
ret
nop
nop
add
movl
push
call
mov
add
ret
push
push
push
push
push
mov
test
je
mov
mov
decl
mov
lea
test
jl
mov
mov
mov
sub
push
mov
pop
mov
sub
sub
mov
mov
mov
call
mov
call
dec
add
test
jge
mov
test
jne
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
call
mov
add
mov
and
add
add
cmp
jae
mov
jmp
lea
and
mov
and
cmp
jne
call
mov
jmp
mov
and
test
je
mov
and
add
add
cmp
ja
xor
test
mov
je
mov
and
cmp
jb
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
andl
mov
and
add
mov
mov
sub
cmp
jb
sub
mov
mov
and
add
mov
and
add
add
mov
lea
mov
and
orl
cmp
jae
mov
add
add
add
jmp
cmpl
je
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
jmp
call
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
add
and
mov
mov
and
sub
cmp
jne
mov
jmp
mov
sub
cmp
jae
call
mov
push
call
pop
mov
test
je
push
push
push
call
add
push
call
pop
call
mov
jmp
jmp
mov
sub
cmp
jae
mov
push
call
pop
mov
call
test
je
mov
push
push
push
call
add
push
call
pop
call
mov
jmp
jmp
lea
mov
add
sub
add
call
sub
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
test
jne
push
call
pop
xor
jmp
test
jne
push
call
pop
jmp
mov
and
cmp
jb
push
push
call
add
jmp
push
push
call
add
test
je
mov
jmp
lea
mov
call
push
call
pop
mov
test
je
mov
mov
and
cmp
jb
mov
mov
and
push
push
push
call
add
push
call
pop
call
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
test
jne
xor
pop
ret
add
mov
and
mov
pop
ret
nop
nop
ret
nop
nop
nop
ret
nop
nop
nop
push
push
push
call
add
push
push
push
push
call
add
push
call
add
ret
nop
nop
nop
push
mov
add
mov
call
movw
push
call
incl
incl
incl
incl
movl
mov
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
call
decl
decl
push
push
call
add
decl
decl
push
push
call
add
decl
cmpl
je
xor
push
mov
call
mov
mov
mov
pop
ret
nop
nop
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
lods
sub
add
push
add
cmp
bound
pop
arpl
je
add
dec
pop
inc
add
add
add
add
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
push
add
je
cmp
bound
pop
je
jo
imul
add
add
add
add
add
add
xor
incl
add
add
inc
add
add
add
add
add
inc
add
add
push
push
push
push
inc
dec
jne
gs
push
mov
push
mov
test
je
cmpl
je
xor
mov
push
call
testb
je
push
call
pop
pop
pop
ret
push
mov
add
mov
push
mov
call
test
je
decl
push
push
call
add
testb
je
push
call
pop
mov
mov
pop
mov
pop
ret
nop
nop
push
mov
add
mov
push
mov
call
test
je
decl
push
push
call
add
testb
je
push
call
pop
mov
mov
pop
mov
pop
ret
nop
nop
push
mov
add
mov
call
movw
push
call
movl
incl
mov
mov
mov
pop
ret
nop
push
mov
add
mov
call
decl
cmpl
je
xor
push
mov
call
mov
mov
mov
pop
ret
push
mov
mov
test
je
mov
mov
testb
je
push
call
pop
pop
ret
push
mov
add
mov
call
movl
cmpl
je
movw
mov
mov
mov
decl
push
mov
push
call
add
testb
je
mov
push
call
pop
mov
mov
mov
pop
ret
push
mov
push
push
mov
mov
mov
mov
mov
shr
shr
cld
rep
mov
and
rep
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
cmp
jb
je
std
lea
lea
and
rep
mov
shr
shr
sub
sub
rep
cld
jmp
cld
shr
shr
rep
mov
and
rep
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
mov
test
je
mov
lea
mov
mov
shr
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
dec
je
mov
mov
lea
dec
jne
mov
mov
mov
pop
pop
ret
mov
mov
pop
pop
ret
and
je
mov
dec
je
mov
mov
pop
pop
ret
nop
nop
push
mov
push
mov
mov
mov
cld
rep
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
cld
repnz
lea
mov
mov
repnz
not
sub
xchg
mov
shr
shr
cld
rep
mov
and
rep
mov
pop
pop
pop
ret
mov
test
jne
mov
add
mov
sub
and
je
not
and
je
test
jne
test
jne
test
jne
jmp
add
testb
je
testb
je
testb
je
dec
and
jmp
dec
dec
dec
mov
dec
sub
ret
nop
nop
push
mov
push
push
mov
mov
xor
cld
repnz
mov
lea
and
mov
jecxz
mov
mov
test
je
inc
inc
dec
jne
mov
shr
jecxz
mov
mov
test
je
mov
mov
test
je
mov
mov
test
je
mov
add
mov
add
test
je
dec
jne
movb
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
mov
cmp
jl
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
add
add
cmp
jge
test
jne
xor
jmp
mov
mov
cmp
jne
inc
inc
dec
jne
xor
mov
xor
mov
sub
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
call
pop
mov
inc
push
call
pop
mov
test
je
push
push
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
xor
mov
jmp
inc
add
cmpw
jne
mov
pop
ret
push
mov
push
push
mov
push
call
pop
mov
xor
mov
mov
mov
cmp
jbe
mov
mov
inc
add
add
cmp
ja
mov
movw
mov
pop
pop
pop
ret
nop
push
mov
add
mov
lea
mov
movl
movw
movw
movl
addr16
mov
mov
pop
ret
addr16
ret
sub
inc
inc
inc
js
xor
rolb
push
push
push
push
push
pushl
pushl
pushl
pushl
call
add
pop
pop
pop
pop
add
ret
push
mov
add
push
push
push
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
mov
movzwl
add
mov
test
je
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
push
push
call
add
test
je
cmpl
je
mov
jmp
testb
je
pushl
pushl
push
push
call
add
test
je
mov
jmp
add
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
mov
call
xor
mov
test
je
test
je
mov
test
je
push
push
mov
call
add
mov
test
jne
inc
cmp
jl
mov
mov
pop
pop
mov
pop
ret
push
mov
add
xor
xor
xor
push
push
push
mov
mov
mov
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
testb
jne
push
push
push
call
add
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
pushl
pushl
call
add
test
je
xor
jmp
cmpl
je
pushl
pushl
call
add
test
je
push
push
push
call
add
mov
testb
jne
xor
jmp
xor
mov
mov
movzwl
add
mov
test
je
testb
jne
cmpl
je
mov
and
cmp
je
xor
jmp
mov
mov
mov
mov
add
mov
testb
je
mov
mov
push
pushl
call
add
test
jne
testb
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
add
test
je
mov
mov
mov
mov
jmp
jmp
cmpl
je
cmp
jne
mov
jmp
cmpl
je
cmpl
jne
push
push
push
call
add
push
push
pushl
push
push
pushl
pushl
push
push
call
add
test
je
cmpl
je
cmp
jne
mov
or
jmp
incl
mov
mov
mov
add
jmp
cmpl
jne
incl
mov
movzwl
add
jmp
mov
mov
mov
cmpl
je
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
push
mov
mov
cmpl
jne
push
push
push
call
add
mov
test
jne
xor
jmp
mov
add
mov
cmpl
je
mov
mov
mov
pushl
push
call
add
test
je
mov
mov
mov
jmp
testb
je
movzwl
add
test
je
lea
push
pushl
push
push
call
add
test
je
mov
mov
mov
jmp
add
jmp
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
push
call
add
push
push
call
add
ret
nop
nop
nop
push
mov
push
mov
test
jne
mov
pop
pop
ret
cmpw
jne
push
push
push
call
add
movzwl
add
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
je
xor
jmp
mov
or
test
je
xor
jmp
movzwl
add
cmpw
jne
push
push
push
call
add
movzwl
add
cmpw
jne
push
push
push
call
add
movsbl
movsbl
inc
inc
cmp
je
xor
jmp
test
jne
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
movzwl
movzwl
mov
mov
and
test
je
and
andl
cmp
je
test
jne
mov
mov
and
and
cmp
je
mov
and
not
and
test
je
xor
jmp
or
orl
cmp
je
xor
jmp
mov
mov
mov
jmp
mov
and
test
je
mov
cmp
je
test
jne
mov
or
je
xor
jmp
mov
mov
mov
jmp
push
push
call
add
test
je
mov
jmp
test
je
testb
je
testb
je
push
pushl
push
push
call
add
jmp
xor
pop
pop
pop
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
testb
je
push
call
pop
pop
ret
push
mov
push
push
mov
mov
mov
cmp
jne
mov
jmp
cmpl
je
mov
testb
jne
cmpl
je
mov
testb
je
xor
jmp
push
call
pop
push
push
call
pop
mov
pop
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
sete
and
pop
pop
pop
ret
nop
nop
nop
push
mov
add
mov
push
push
push
mov
call
cmpl
mov
jne
lea
mov
push
push
push
push
push
push
push
mov
mov
lea
mov
push
push
call
add
test
je
testb
je
xor
jmp
sub
cmpl
je
push
push
push
call
add
mov
jmp
mov
mov
add
sar
and
mov
mov
mov
test
je
cmp
jne
cmp
je
mov
test
jne
test
jne
push
call
pop
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
cmpl
jne
cmpl
je
mov
jmp
cmpl
jne
mov
jmp
mov
mov
movzbl
lea
push
call
pop
mov
push
inc
push
pushl
call
add
mov
movb
mov
jmp
pushl
call
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
mov
mov
cmpl
jne
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
movzwl
add
lea
push
push
push
push
call
add
test
je
mov
jmp
mov
test
je
push
push
push
call
add
xor
pop
pop
pop
ret
nop
nop
or
add
add
xor
add
add
jae
add
inc
add
add
add
add
add
add
add
dec
add
cmp
je
jo
pop
imul
add
add
add
add
xor
add
add
ja
add
inc
add
add
add
add
add
clc
cmp
add
push
add
gs
imul
jae
add
push
cmp
add
add
add
add
push
mov
push
mov
test
je
push
push
call
add
testb
je
push
call
pop
pop
pop
ret
nop
nop
cmpl
jne
movl
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
mov
cmp
je
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
call
andl
mov
cmp
je
call
call
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
nop
push
mov
add
mov
push
push
push
call
call
andl
mov
cmpl
jne
pushl
push
push
call
add
call
mov
movw
call
movw
jmp
call
call
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
call
andl
mov
cmpl
jne
pushl
push
push
call
add
mov
call
call
ret
nop
nop
nop
push
mov
add
push
mov
test
setne
and
test
jne
test
jne
lea
push
call
pop
mov
push
push
call
add
push
call
add
call
pop
pop
pop
pop
ret
nop
push
mov
push
mov
call
add
mov
movl
movl
pop
pop
ret
nop
push
mov
mov
pop
ret
nop
nop
push
mov
add
push
push
push
mov
mov
mov
cmpl
jne
xor
jmp
mov
cmp
je
cmp
jne
mov
mov
call
call
cmpl
jne
cmpl
je
push
call
pop
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
push
push
push
push
call
add
test
jne
xor
jmp
cmpl
je
mov
mov
cmp
je
cmp
jne
mov
cmp
jb
cmp
jbe
push
push
push
push
push
call
add
mov
mov
lea
push
call
pop
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
xor
mov
movl
push
call
pop
pop
ret
nop
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
mov
mov
pop
ret
nop
movl
ret
nop
movl
movl
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
addr16
pop
ret
push
mov
mov
mov
cmp
jne
mov
addr16
pop
ret
cmp
je
cmp
je
mov
jmp
mov
mov
jmp
jmp
nop
nop
mov
mov
jmp
push
push
push
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
xor
pop
pop
ret
mov
push
call
cmp
sete
and
pop
pop
ret
nop
nop
nop
push
mov
mov
push
call
cmp
sete
and
pop
ret
nop
push
mov
push
push
push
mov
cmp
jb
push
call
pop
jmp
mov
sub
jb
je
dec
je
jmp
xor
jmp
mov
jmp
mov
jmp
push
call
pop
jmp
push
call
pop
andl
push
push
mov
push
mov
push
call
mov
inc
jne
call
push
call
pop
mov
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
jb
push
call
pop
jmp
mov
inc
cmp
jae
xor
jmp
mov
push
call
pop
mov
testb
je
push
push
mov
push
call
add
mov
testb
jne
mov
push
push
mov
push
call
add
mov
jmp
mov
xor
mov
xor
mov
jmp
lea
jmp
mov
inc
cmp
jne
incl
movb
inc
movb
inc
jmp
mov
inc
lea
mov
sub
cmp
jge
mov
sub
cmp
jb
lea
mov
sub
lea
push
push
mov
push
call
add
lea
sub
cmp
je
cmp
jne
or
jmp
mov
sub
add
jmp
add
mov
sub
cmp
jb
mov
sub
mov
push
call
pop
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
mov
test
je
movb
xor
pop
ret
nop
nop
nop
push
push
push
call
xor
mov
mov
jmp
testb
je
cmpl
je
push
call
pop
inc
add
mov
add
test
jne
call
mov
pop
pop
pop
ret
nop
nop
push
mov
push
mov
cmp
jb
push
call
pop
pop
pop
ret
push
lea
push
mov
push
mov
push
mov
push
call
dec
je
call
pop
pop
ret
mov
pop
pop
ret
nop
nop
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
testb
je
mov
push
call
pop
andw
xor
mov
lea
mov
mov
cmpl
je
test
jbe
movl
test
jne
push
call
pop
mov
test
je
orw
jmp
or
jmp
mov
mov
mov
cmpl
jne
orw
xor
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
test
jne
call
xor
jmp
cmp
je
or
jmp
push
call
cmpl
pop
jl
testb
jne
lea
cmp
jne
xor
mov
lea
cmp
jne
mov
mov
xor
jmp
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
or
jmp
xor
push
call
pop
mov
pop
pop
pop
ret
nop
push
push
push
push
call
xor
mov
mov
jmp
mov
test
jge
mov
add
inc
sub
push
mov
mov
push
movsbl
push
call
add
cmp
je
testb
jne
orw
inc
add
mov
add
test
jne
call
mov
pop
pop
pop
pop
ret
push
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
mov
test
je
mov
mov
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
testb
je
mov
cmpl
je
push
movsbl
push
call
add
inc
jne
xor
jmp
decl
inc
cmpl
jne
mov
jmp
jmp
mov
test
je
cmp
jb
mov
mov
add
test
jl
test
jne
or
sub
mov
jmp
push
call
pop
test
je
xor
jmp
push
push
mov
push
call
mov
add
add
mov
mov
add
jmp
cmpl
je
cmpl
je
push
call
pop
test
je
xor
jmp
push
push
movsbl
push
call
add
cmp
je
cmp
jbe
xor
jmp
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
xor
mov
movl
ret
nop
mov
push
call
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
test
je
cmpl
jne
call
cmpl
jne
mov
shl
push
call
pop
mov
test
jne
push
call
pop
push
push
mov
push
call
add
mov
cmpl
jne
push
mov
shl
add
push
call
add
call
mov
mov
push
call
pop
pop
pop
pop
ret
push
mov
cmpl
jne
push
push
push
call
add
mov
mov
mov
push
call
pop
cmpl
je
call
pop
ret
nop
nop
nop
push
mov
xor
mov
jmp
cmpl
je
inc
add
cmp
jl
cmp
jne
or
pop
ret
mov
mov
mov
mov
pop
ret
push
mov
mov
mov
cmp
jne
xor
mov
jmp
inc
add
cmp
jge
cmpl
jne
mov
cmp
jbe
cmp
ja
or
pop
ret
mov
test
je
cmpl
je
or
pop
ret
mov
mov
mov
pop
ret
push
mov
mov
cmp
jae
xor
mov
pop
ret
nop
nop
nop
push
mov
add
mov
test
push
mov
lea
je
cmpl
jne
dec
add
test
jne
test
jne
test
jne
xor
jmp
lea
add
mov
jmp
mov
xor
mov
add
movl
cmp
jle
mov
mov
mov
test
je
or
test
jne
or
test
je
or
mov
inc
incl
addl
cmp
jg
shl
push
push
push
call
add
xor
pop
pop
pop
pop
ret
nop
nop
push
push
push
add
push
push
call
add
mov
push
call
mov
cmp
jae
mov
movl
xor
mov
lea
push
call
movzwl
mov
test
je
mov
mov
add
mov
lea
add
cmp
jne
movl
xor
mov
cmp
jge
mov
inc
xor
test
je
or
test
je
or
test
je
or
jmp
or
mov
inc
and
or
mov
add
cmp
jl
mov
lea
jmp
xor
inc
mov
add
cmp
jb
mov
shl
push
push
push
call
add
cmpl
jne
push
call
mov
push
call
mov
push
call
mov
xor
mov
push
call
pop
test
jne
cmpl
je
orl
cmpl
je
orl
jmp
andl
inc
add
cmp
jle
add
pop
pop
pop
ret
nop
call
add
ret
nop
nop
nop
push
mov
push
mov
test
jl
cmp
jle
mov
call
mov
movsbl
mov
jmp
neg
cmp
jge
call
movl
call
mov
or
pop
pop
ret
push
call
mov
and
mov
and
push
call
pop
mov
pop
ret
call
and
push
call
pop
ret
nop
nop
push
mov
push
push
push
push
mov
mov
mov
mov
mov
neg
cmp
jle
push
lea
push
mov
push
call
add
add
add
testb
je
cmp
je
cmp
jne
push
call
pop
test
je
or
jmp
xor
mov
jmp
mov
test
jne
test
jne
orw
or
jmp
orw
cmpl
je
cmpl
je
push
call
pop
test
je
or
jmp
mov
lea
neg
mov
push
push
mov
push
call
add
lea
add
add
testb
je
cmp
je
cmp
jne
push
call
pop
test
je
or
jmp
xor
mov
jmp
push
lea
push
movsbl
push
call
add
cmp
je
testb
jne
orw
or
jmp
xor
mov
pop
pop
pop
pop
pop
ret
push
mov
push
push
lea
call
pop
push
push
push
mov
push
push
push
call
add
mov
push
call
pop
mov
pop
pop
ret
nop
push
mov
push
push
call
add
xor
lea
mov
inc
shl
lea
add
mov
add
cmp
jl
mov
lea
jmp
mov
movb
shl
inc
lea
add
mov
add
cmp
jb
movsbl
testb
jne
andw
push
testb
je
mov
jmp
xor
push
push
push
call
add
lea
movsbl
testb
jne
lea
andw
push
lea
testb
je
mov
jmp
xor
push
push
lea
push
call
add
pop
ret
nop
nop
push
mov
call
testb
je
push
call
pop
mov
push
call
pop
xor
mov
xor
mov
lea
testb
je
lea
push
call
pop
lea
mov
push
call
lea
pop
xor
lea
mov
xor
mov
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
push
mov
push
push
mov
sub
mov
cltd
idiv
mov
mov
test
je
cmpl
jne
call
cmpl
jne
mov
shl
push
call
pop
mov
test
jne
push
call
pop
push
push
mov
push
call
add
mov
cmpl
jne
push
mov
shl
add
push
call
add
call
mov
mov
push
call
pop
pop
pop
pop
ret
mov
test
je
push
call
pop
xor
mov
movl
ret
nop
push
mov
cmpl
jne
push
push
push
call
add
mov
sub
mov
cltd
idiv
mov
mov
push
call
pop
cmpl
je
call
pop
ret
push
mov
push
mov
mov
cmpl
je
mov
test
je
mov
cmp
ja
xor
push
mov
push
mov
push
push
call
add
test
jne
movl
xor
mov
pop
pop
ret
nop
nop
nop
push
mov
push
mov
cmpl
jl
push
call
pop
mov
test
je
mov
cmp
jbe
mov
mov
mov
incl
incl
pop
pop
ret
push
mov
push
mov
mov
mov
add
mov
and
cmp
jge
add
mov
jmp
add
mov
shr
dec
dec
test
jge
pop
pop
ret
push
mov
add
xor
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
lea
jmp
xor
mov
mov
inc
test
je
cmp
jne
mov
cmp
jne
inc
xor
mov
testb
je
cmpb
je
lea
push
push
call
add
mov
inc
lea
push
push
call
add
jmp
lea
xor
mov
xor
mov
or
movb
mov
mov
xor
mov
mov
mov
inc
cmp
jl
movsbl
cmp
jg
mov
add
xor
mov
xor
mov
cmp
ja
jmp
xchg
dec
inc
add
add
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
dec
inc
add
dec
inc
add
pop
add
or
jmp
test
jg
or
jmp
test
jg
cmpb
je
mov
jmp
and
mov
jmp
or
mov
jmp
test
jg
test
jne
or
mov
jmp
addl
mov
cmp
mov
mov
jge
cmpl
jge
mov
neg
mov
or
jmp
mov
mov
mov
jmp
cmp
jne
mov
inc
mov
jmp
cmp
jge
mov
incl
jmp
add
cmp
jg
cmpl
mov
jne
movsbl
mov
jmp
mov
add
lea
movsbl
add
mov
jmp
cmp
jne
mov
add
lea
movsbl
add
mov
jmp
or
mov
jmp
or
mov
and
jmp
or
mov
and
jmp
cmpb
jne
cmpb
jne
add
or
and
mov
jmp
cmpb
jne
cmpb
jne
add
or
and
mov
jmp
cmpb
jne
cmpb
jne
add
or
and
mov
jmp
cmpb
jne
inc
and
mov
jmp
movl
jmp
movl
jmp
movl
lea
mov
movb
xor
jmp
movl
mov
test
je
addl
mov
mov
mov
mov
mov
jmp
test
je
addl
mov
test
mov
mov
je
mov
cltd
mov
mov
jmp
mov
xor
mov
mov
jmp
test
je
addl
mov
test
mov
mov
je
movswl
cltd
mov
mov
jmp
movzwl
xor
mov
mov
jmp
addl
mov
test
mov
mov
je
mov
cltd
mov
mov
jmp
mov
xor
mov
mov
lea
mov
cmpl
jne
cmpl
jne
cmpl
jne
mov
movb
jmp
or
mov
push
push
mov
push
mov
push
pushl
pushl
call
add
cmpl
jl
mov
push
call
pop
mov
mov
mov
cmpb
jne
decl
jmp
cmpb
je
incl
decl
mov
mov
mov
mov
cmp
jle
mov
sub
mov
jmp
addl
mov
lea
mov
mov
push
mov
push
call
add
movb
and
lea
mov
jmp
test
jne
or
test
je
addl
mov
lea
mov
mov
movw
movl
mov
movl
jmp
addl
mov
lea
mov
xor
mov
movb
mov
mov
movl
jmp
test
jne
or
test
je
addl
mov
mov
mov
movl
cmpl
jne
movl
jmp
addl
mov
xor
mov
mov
mov
cmpl
jne
movl
cmpl
je
cmpl
jl
mov
jmp
mov
mov
xor
mov
jmp
dec
incl
add
test
je
cmpw
jne
jmp
cmpl
jl
mov
jmp
mov
mov
xor
mov
jmp
dec
incl
inc
test
je
cmpb
jne
jmp
test
je
mov
jmp
mov
mov
push
and
lea
push
push
mov
push
cmpl
jge
mov
jmp
mov
push
mov
push
call
add
mov
and
push
mov
push
call
add
mov
test
je
cmpl
jle
mov
push
call
pop
mov
mov
cmpb
jne
decl
mov
cmp
jle
mov
sub
mov
mov
cmpb
je
cmpb
je
mov
cmpb
je
decl
mov
mov
mov
cmpl
jle
decl
mov
push
call
pop
mov
test
je
cmp
jne
cmpl
jg
movl
jmp
cmp
je
cmp
jne
or
subl
subl
jns
xor
mov
mov
add
test
jne
mov
cmp
jle
lea
push
push
call
add
decl
mov
cmp
jg
test
je
lea
push
push
call
add
lea
push
push
call
add
cmpl
jle
mov
sub
mov
sub
mov
cmpb
je
mov
cmpb
je
mov
cmpb
jne
lea
push
mov
incl
mov
push
call
add
decl
decl
jmp
lea
push
push
call
add
mov
addl
test
jne
cmpl
je
mov
xor
mov
mov
mov
mov
jmp
mov
addl
mov
push
lea
push
call
add
mov
cmpl
jle
xor
mov
lea
lea
cmp
jge
mov
inc
mov
inc
incl
inc
cmp
jl
mov
addl
test
jg
lea
mov
mov
mov
cmpl
je
mov
sub
jmp
lea
push
mov
incl
mov
push
call
add
mov
addl
test
jne
jmp
lea
push
push
call
add
mov
addl
test
jg
jmp
addl
mov
test
mov
mov
je
mov
mov
mov
jmp
test
je
mov
mov
mov
jmp
mov
mov
mov
jmp
lea
push
push
call
add
mov
incl
mov
test
jne
lea
push
call
cmpl
pop
je
or
jmp
mov
pop
pop
pop
mov
pop
ret
push
push
call
xor
mov
jmp
testb
je
push
call
pop
inc
add
cmp
jb
call
pop
pop
ret
nop
nop
nop
push
mov
mov
mov
cmp
jg
je
sub
je
dec
je
jmp
sub
je
dec
je
jmp
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
xor
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
cmpl
setb
and
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
movzwl
cmp
setb
and
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
push
mov
push
movzwl
push
call
add
pop
ret
nop
push
mov
mov
mov
cmp
jbe
xor
pop
ret
mov
cmpl
jne
cmpl
jne
movswl
movzwl
and
pop
ret
mov
movzwl
and
mov
pop
ret
nop
push
mov
push
push
cmpl
mov
jne
xor
jmp
mov
cmpl
je
cmpl
jge
movswl
movzwl
and
jmp
lea
lea
push
push
push
push
call
movzwl
and
pop
pop
pop
ret
nop
nop
nop
push
mov
mov
mov
test
je
cmpb
je
test
jne
xor
pop
ret
xor
mov
testb
je
cmp
jl
push
push
mov
push
push
push
mov
push
call
test
jne
or
pop
ret
mov
pop
ret
push
push
mov
push
push
push
mov
push
call
test
jne
or
pop
ret
mov
pop
ret
nop
nop
push
mov
push
push
mov
mov
mov
test
je
test
jne
xor
jmp
cmpb
jne
test
je
movw
xor
jmp
mov
cmpl
je
test
je
xor
mov
mov
mov
jmp
xor
mov
testb
je
cmp
jl
test
je
mov
jmp
xor
push
push
mov
push
push
push
mov
push
call
test
jne
cmp
jl
cmpb
jne
or
jmp
mov
jmp
test
je
mov
jmp
xor
push
push
mov
push
push
push
mov
push
call
test
jne
or
jmp
mov
pop
pop
pop
ret
nop
nop
nop
push
mov
push
mov
test
jne
xor
pop
pop
ret
mov
cmpl
je
cmpw
jbe
or
pop
pop
ret
mov
mov
mov
pop
pop
ret
xor
lea
mov
push
push
push
push
lea
mov
push
push
push
mov
push
call
test
je
cmpl
je
or
pop
pop
ret
pop
pop
ret
nop
nop
nop
push
mov
push
push
push
push
mov
mov
xor
test
je
cmpl
jne
xor
jmp
test
je
mov
cmpl
je
cmp
jae
xor
mov
mov
cmpb
jne
mov
jmp
inc
add
cmp
jb
mov
jmp
mov
mov
push
push
push
push
push
mov
push
call
mov
test
je
mov
dec
jmp
call
cmp
je
or
jmp
mov
mov
jmp
xor
mov
testb
je
inc
inc
mov
add
test
je
cmpb
jne
sub
mov
mov
push
push
mov
mov
push
push
push
mov
push
call
mov
test
jne
or
jmp
mov
jmp
jmp
mov
cmpl
je
push
call
pop
jmp
push
push
mov
push
push
push
mov
push
call
mov
test
jne
or
jmp
mov
dec
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
mov
mov
lea
mov
jmp
add
dec
je
cmpw
jne
test
je
cmpw
jne
sub
sar
jns
adc
inc
pop
pop
ret
mov
pop
pop
ret
nop
nop
nop
push
mov
add
xor
push
push
mov
xor
cmpl
je
cmpl
jne
xor
jmp
cmpl
je
mov
cmpl
je
cmp
jae
mov
cmpw
jbe
or
jmp
mov
mov
mov
mov
mov
addl
cmpw
jne
mov
jmp
inc
cmp
jb
mov
jmp
lea
push
push
mov
push
mov
mov
push
push
mov
push
push
mov
push
call
mov
test
je
cmpl
jne
mov
dec
jmp
cmpl
jne
call
cmp
je
or
jmp
cmp
jae
lea
lea
push
push
push
push
push
mov
mov
push
push
mov
push
call
mov
cmpl
je
cmpl
je
or
jmp
mov
add
cmp
jbe
mov
jmp
xor
mov
lea
lea
cmp
jge
mov
mov
test
jne
mov
jmp
inc
inc
inc
inc
cmp
jl
addl
cmp
jb
mov
jmp
mov
cmpl
je
mov
push
call
pop
jmp
lea
mov
push
push
push
push
push
mov
push
push
mov
push
call
mov
test
je
cmpl
je
or
jmp
mov
dec
pop
pop
mov
pop
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
push
push
push
push
xor
mov
mov
or
jne
or
je
or
je
or
jns
neg
neg
sbb
or
or
jns
neg
neg
sbb
xor
mov
mov
push
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
pop
test
je
neg
neg
sbb
pop
pop
pop
pop
ret
div
xor
jmp
push
push
push
push
mov
mov
or
jne
or
je
or
je
mov
mov
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
pop
pop
pop
pop
ret
div
xor
jmp
push
push
push
push
xor
mov
mov
or
jne
or
je
or
je
or
jns
neg
neg
sbb
or
or
jns
neg
neg
sbb
mov
mov
push
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
mov
mov
pop
test
je
neg
neg
sbb
pop
pop
pop
pop
ret
div
xchg
xor
jmp
push
push
push
push
mov
mov
or
jne
or
je
or
je
mov
mov
xor
xor
shl
rcl
rcl
rcl
cmp
jb
ja
cmp
jb
sub
sbb
inc
loop
mov
mov
pop
pop
pop
pop
ret
div
xchg
xor
jmp
cmp
jl
cmp
jl
xor
xor
ret
mov
shl
xor
ret
shld
shl
ret
cmp
jl
cmp
jl
sar
mov
ret
mov
cltd
sar
ret
shrd
sar
ret
cmp
jl
cmp
jl
xor
xor
ret
mov
xor
shr
ret
shrd
shr
ret
push
mov
add
push
push
mov
mov
mov
mov
mov
mov
test
jne
fldl
jmp
fldl
fstpl
fwait
test
jne
fldl
jmp
fldl
fstpl
fwait
mov
lea
mov
mov
mov
push
call
pop
test
jne
mov
push
push
push
lea
push
call
add
add
sub
jb
jmp
call
movl
jmp
call
movl
lea
push
call
pop
fldl
pop
pop
mov
pop
ret
push
mov
add
push
mov
cmp
jge
fldt
jmp
cmp
jle
mov
fldt
jmp
test
jne
fldt
jmp
mov
test
jge
mov
neg
mov
and
sar
test
lea
mov
mov
mov
mov
mov
mov
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
test
je
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
sar
test
je
mov
fldt
fldt
fmulp
fstpt
fwait
test
jge
fldt
fdivrs
jmp
fldt
pop
mov
pop
ret
add
add
add
cmpb
mov
lea
fnstsw
fnclex
movzwl
mov
pop
ret
nop
push
mov
lea
fstcw
mov
mov
jecxz
mov
and
not
fwait
movzwl
and
or
mov
fldcw
mov
pop
ret
nop
jmp
jmp
jmp
jmp
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
call
pop
ret
fninit
push
pushl
call
add
ret
nop
nop
push
mov
lea
mov
testb
jne
fildll
mov
pop
ret
mov
mov
mov
mov
movw
fldt
mov
pop
ret
nop
nop
nop
mov
mov
cmpw
je
fldt
fistpll
fwait
ret
mov
mov
mov
mov
ret
nop
nop
nop
mov
fldt
fxam
xor
fstsw
fstp
fwait
ret
nop
nop
nop
push
mov
add
push
push
push
mov
mov
cmp
jl
cmp
jg
cmpl
jne
cmpl
jae
jmp
jge
cmpb
je
movb
inc
mov
mov
neg
adc
mov
neg
mov
lea
mov
cltd
push
push
mov
mov
call
mov
mov
cltd
push
push
mov
mov
inc
call
mov
mov
cmp
jne
cmp
jne
jmp
dec
mov
cmp
jge
add
mov
inc
jmp
add
add
mov
inc
lea
cmp
jne
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
push
mov
test
jne
mov
mov
jmp
mov
mov
lea
mov
mov
and
mov
and
cmp
jne
fldt
fstpl
fldl
jmp
cmp
jae
mov
mov
mov
mov
jmp
cmp
jne
push
push
call
add
mov
push
push
call
add
test
jne
fldt
fstps
flds
fstpl
fwait
jmp
fldt
fstpl
fwait
push
mov
push
call
fldl
add
jmp
mov
or
or
or
or
jne
fldt
fstpl
fldl
jmp
cmp
jbe
xor
mov
mov
call
movl
cmpw
je
fldl
fchs
jmp
fldl
jmp
fldt
fstpl
fldl
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
mov
cmp
jl
cmp
jg
test
jge
cmpb
je
movb
inc
neg
lea
mov
xor
div
mov
inc
mov
xor
div
mov
test
jne
jmp
dec
mov
cmp
jge
add
mov
inc
jmp
add
add
mov
inc
lea
cmp
jne
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
mov
push
mov
push
call
add
pop
ret
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
cmpl
jne
xor
mov
mov
mov
mov
pop
ret
cmpl
jne
mov
pop
ret
xor
pop
ret
nop
nop
push
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
mov
mov
xor
or
je
div
mov
mov
div
mov
mov
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
mul
add
adc
mov
mov
mov
mul
add
adc
mov
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
dec
cmp
jb
mov
jmp
cmpb
je
mov
cmp
jne
dec
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
push
call
pop
mov
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpb
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmp
jne
cmpl
je
mov
jmp
mov
mov
xor
or
mov
repnz
not
sub
mov
xchg
shr
mov
rep
mov
and
rep
jmp
cmpl
je
movb
inc
cmpb
je
cmpb
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movb
inc
mov
mov
inc
test
je
movb
inc
inc
test
jne
xor
lea
jmp
mov
inc
dec
jne
mov
mov
inc
inc
inc
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
dec
je
jmp
dec
je
cmpb
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movb
inc
movb
jmp
lea
mov
inc
mov
inc
mov
inc
test
je
mov
mov
inc
test
je
mov
inc
mov
inc
test
jne
cmpb
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpb
je
mov
mov
inc
mov
and
or
mov
inc
dec
jns
neg
movb
inc
jmp
movb
inc
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movb
lea
mov
test
je
mov
mov
cltd
idiv
dec
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
push
call
pop
cmp
je
cmp
jne
jmp
sub
cmp
jb
mov
jmp
cmpw
je
mov
cmp
jne
sub
mov
pop
pop
pop
pop
ret
nop
nop
push
mov
add
push
push
push
push
call
mov
pop
mov
cmpl
jle
movl
mov
mov
mov
and
mov
cmp
jne
mov
neg
test
jle
xor
mov
mov
jmp
mov
test
jg
mov
jmp
cmpw
jne
inc
incl
mov
push
lea
push
lea
push
push
mov
push
call
add
mov
mov
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmp
jne
cmpl
je
mov
jmp
mov
push
push
call
add
jmp
cmpl
je
movw
add
cmpw
je
cmpw
jne
cmp
jl
cmpl
jne
mov
jmp
mov
cmp
jg
cmp
jg
test
jg
movw
add
mov
mov
add
test
je
movw
add
inc
test
jne
xor
lea
jmp
mov
add
dec
jne
mov
mov
add
inc
add
mov
test
jne
add
cmp
jge
mov
sub
mov
add
push
push
push
call
add
add
add
dec
je
jmp
dec
je
cmpw
jne
push
mov
push
mov
push
call
add
mov
cmp
jne
movw
add
movw
jmp
lea
mov
add
mov
add
mov
add
test
je
mov
mov
add
test
je
mov
add
mov
add
test
jne
cmpw
jne
push
mov
push
mov
push
call
add
mov
jmp
cmpw
je
mov
mov
add
mov
and
or
mov
add
dec
jns
neg
movw
add
jmp
movw
add
cmp
jl
mov
jmp
cmp
jl
mov
jmp
mov
movw
lea
mov
test
je
mov
mov
cltd
idiv
add
add
mov
mov
mov
dec
cltd
idiv
mov
test
jne
pop
pop
pop
mov
pop
ret
nop
push
mov
cmpl
mov
je
add
jmp
add
pop
ret
nop
nop
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
pop
mov
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
test
jne
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movsbl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
add
xor
xor
lea
push
push
push
lea
movl
movl
movb
movb
movb
movb
movb
mov
mov
movl
mov
mov
mov
mov
push
call
mov
pop
mov
incl
mov
push
call
pop
mov
inc
jne
movl
jmp
push
call
pop
test
jne
decl
js
cmp
jne
movb
jmp
cmp
jne
mov
mov
mov
decl
js
incl
mov
push
call
pop
mov
cmpb
jne
cmpb
je
cmp
je
cmp
je
movb
movzwl
cmp
jne
cmpl
jne
test
jle
mov
jmp
xor
mov
jmp
cmp
jl
cmp
jg
sub
inc
test
jg
mov
test
mov
je
mov
jmp
or
cmpl
je
decl
jmp
cmp
jg
mov
add
lea
add
mov
jmp
cmp
jg
mov
lea
mov
mov
mov
push
push
call
add
test
je
lea
mov
jmp
mov
mov
mov
mov
jmp
mov
cmp
je
cmpl
jne
mov
xor
cmp
je
cmp
jne
movl
decl
js
incl
mov
push
call
pop
mov
cmpl
je
xor
cmp
mov
jne
movb
jmp
cmp
je
cmp
jl
cmp
jg
mov
add
lea
add
add
mov
cmp
jle
movb
jmp
mov
push
push
call
add
decl
cmpb
je
neg
negb
test
jge
xor
mov
mov
mov
jmp
cmpb
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movw
jmp
xor
mov
mov
mov
movl
jmp
cmp
jle
mov
jmp
mov
mov
lea
sub
push
add
call
pop
fstpt
fwait
test
je
test
jle
mov
jmp
mov
neg
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivrp
fstpt
fwait
jmp
fldt
fldt
fmulp
fstpt
fwait
cmpb
je
fldt
fchs
fstpt
fwait
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xor
mov
cmpl
jl
mov
push
push
call
add
decl
xor
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
incl
mov
push
call
pop
mov
decl
js
cmp
jne
incl
mov
push
call
pop
mov
decl
js
cmp
jne
cmpb
je
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
mov
mov
mov
test
je
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstpl
fwait
jmp
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
fldt
fstpl
fwait
pushl
pushl
mov
push
pushl
pushl
push
call
add
fstps
fwait
pop
pop
pop
pop
pop
ret
movl
movl
ret
nop
nop
nop
push
mov
fldl
mov
shl
je
jb
fsqrt
pop
ret
fstp
pushl
pushl
push
lea
push
push
push
call
add
jmp
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
add
mov
movb
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
mov
mov
movb
dec
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
add
mov
dec
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movb
incl
movb
mov
test
jg
mov
sub
cmp
jle
mov
mov
movb
mov
sub
sub
test
jle
push
push
mov
push
call
add
mov
movb
mov
pop
pop
pop
mov
pop
ret
nop
nop
push
mov
add
push
push
push
movw
mov
sub
je
sub
je
sub
je
jmp
mov
flds
fstpt
fwait
jmp
mov
fldl
fstpt
fwait
jmp
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
and
mov
test
setne
and
mov
mov
lea
push
call
and
pop
cmp
jne
mov
test
jg
neg
inc
cmp
jle
mov
push
push
mov
push
call
mov
add
mov
movw
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
movzwl
and
mov
add
imul
mov
xor
mov
add
and
mov
lea
lea
lea
movswl
and
add
mov
sar
test
mov
je
incl
mov
test
jg
mov
sub
test
jl
cmp
jle
mov
mov
sub
test
je
mov
test
jge
mov
neg
cmp
jle
mov
push
call
pop
fstpt
fwait
test
jge
fldt
fldt
fdivp
fstpt
fwait
add
jmp
fldt
fldt
fmulp
fstpt
fwait
sub
test
jne
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jae
incl
inc
cmp
jg
cmpl
jle
movswl
mov
fildl
fldt
fdivp
fstpt
fwait
dec
jmp
lea
push
call
pop
fstpt
fldt
fldt
fcompp
fnstsw
sahf
jbe
decl
dec
cmpl
jle
movswl
mov
fildl
fldt
fmulp
fstpt
fwait
inc
test
jl
lea
push
lea
push
call
mov
add
add
xor
add
mov
mov
movw
sub
test
jne
mov
movzbl
and
xor
test
jne
jmp
lea
push
call
pop
movsbl
or
movsbl
add
mov
sub
dec
je
jmp
test
jne
incl
cmpl
jg
mov
movw
addl
movw
mov
test
jg
mov
sub
cmp
jle
mov
mov
movw
mov
sub
sar
jns
adc
sub
test
jle
push
push
mov
push
call
add
mov
movw
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
add
push
push
mov
cmp
jne
call
mov
jmp
cmp
jne
call
mov
jmp
cmp
jne
mov
mov
test
je
lea
push
push
call
test
jne
push
call
pop
or
jmp
xor
mov
movb
inc
inc
cmp
jl
test
je
cmpl
jbe
lea
jmp
and
lea
jmp
movb
inc
inc
xor
mov
cmp
jle
add
mov
test
je
cmpb
jne
mov
mov
orb
inc
inc
cmp
jl
cmp
jne
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
xor
mov
lea
jmp
orb
inc
inc
xor
mov
cmp
jle
mov
jmp
xor
mov
xor
pop
pop
mov
pop
ret
nop
nop
nop
mov
ret
nop
nop
call
push
call
pop
ret
nop
nop
nop
push
mov
mov
cmp
jbe
xor
pop
ret
push
call
pop
pop
ret
nop
nop
push
mov
push
push
mov
mov
xor
xor
mov
testb
je
cmpb
jne
inc
test
jne
mov
jmp
xor
mov
shl
movzbl
or
cmp
jne
mov
inc
jmp
xor
mov
cmp
jne
mov
mov
inc
test
jne
mov
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
push
mov
movb
lea
mov
jmp
push
call
pop
mov
sub
dec
test
jle
push
push
push
call
add
addl
mov
mov
test
jne
pop
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
push
push
mov
push
push
mov
push
push
push
push
call
add
push
call
pop
add
push
mov
push
call
add
push
call
pop
call
pop
ret
nop
nop
add
push
call
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
push
push
call
add
mov
add
ret
nop
nop
push
mov
push
push
push
push
mov
push
push
push
push
push
push
mov
push
call
mov
test
je
call
mov
lea
push
push
push
call
pop
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
call
pop
pop
pop
pop
pop
ret
push
push
call
mov
call
mov
push
add
call
mov
pop
pop
ret
nop
nop
push
mov
mov
movl
xor
pop
ret
nop
nop
push
xor
mov
call
shr
movzwl
test
jne
mov
pop
ret
mov
push
push
call
push
call
cmpl
je
mov
jmp
mov
pop
ret
push
mov
add
cmpl
push
push
mov
jne
cmpl
jne
cmpl
je
push
lea
push
push
call
push
lea
push
call
add
mov
test
jne
push
lea
push
call
add
mov
test
jne
lea
jmp
inc
call
or
push
push
push
push
call
jmp
push
call
mov
lea
push
push
push
push
push
call
push
lea
push
push
call
pop
push
push
push
call
push
lea
push
push
push
push
call
jmp
cmpl
je
cmpl
je
push
call
pop
mov
test
je
cmpl
je
cmpb
je
push
push
call
add
pop
pop
mov
pop
ret
nop
push
mov
mov
push
call
pop
pop
ret
nop
push
mov
mov
push
call
pop
push
call
pop
pop
ret
nop
push
add
push
call
mov
push
push
call
push
push
call
test
je
movl
jmp
movl
push
call
mov
sub
jb
je
dec
je
jmp
movl
jmp
movl
jmp
movl
jmp
movl
add
pop
ret
nop
nop
nop
push
call
pop
push
call
pop
ret
push
call
pop
call
ret
nop
nop
ret
nop
nop
nop
push
mov
push
mov
call
test
jne
cmpl
je
call
call
call
jmp
xor
mov
cmpl
jne
test
jne
call
call
call
call
call
mov
push
call
pop
call
pop
pop
ret
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
push
push
push
call
add
pop
ret
nop
nop
nop
push
push
push
call
add
ret
nop
push
push
push
call
add
ret
nop
push
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
push
mov
push
call
add
pop
ret
nop
nop
nop
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
cmpl
je
xor
xor
mov
mov
mov
mov
push
call
pop
mov
mov
push
mov
push
push
call
add
test
je
push
push
call
add
decl
jmp
xor
xor
mov
mov
mov
mov
mov
mov
pop
ret
call
cmpl
je
mov
push
call
pop
mov
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
push
mov
mov
cmp
jne
addl
mov
shl
push
mov
push
call
add
mov
test
jne
push
call
pop
cmpl
je
push
call
pop
inc
push
call
pop
mov
test
jne
push
call
pop
xor
push
mov
or
repnz
not
sub
mov
xchg
mov
mov
shr
rep
mov
and
rep
pop
jmp
mov
mov
mov
mov
incl
pop
pop
pop
pop
ret
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
incl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
inc
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
incl
mov
mov
cmp
je
cmp
je
mov
cmpb
je
mov
mov
jmp
cmp
jne
incl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpb
jne
incl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movb
incl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpb
je
incl
mov
cmpb
jne
mov
pop
pop
pop
mov
pop
ret
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
push
mov
mov
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
cmpl
je
mov
cmpb
jne
cmpb
jne
mov
movb
addl
jmp
mov
mov
xor
mov
testb
je
cmpb
je
mov
mov
incl
incl
mov
mov
mov
mov
incl
incl
pop
pop
pop
ret
nop
nop
nop
push
mov
add
push
push
push
lea
lea
mov
mov
push
mov
push
call
add
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
addl
mov
mov
cmp
je
cmp
je
test
jne
mov
push
call
pop
add
add
push
call
pop
mov
mov
test
jne
push
call
pop
jmp
xor
jmp
addl
mov
mov
cmp
je
cmp
je
mov
cmpw
je
mov
mov
jmp
cmp
jne
addl
jmp
push
push
call
add
mov
mov
cmp
je
test
jne
mov
cmpw
jne
addl
jmp
mov
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
mov
cmp
je
cmp
je
test
jne
mov
movw
addl
test
je
mov
push
mov
push
call
add
jmp
push
mov
push
call
add
mov
cmpw
je
addl
mov
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
nop
mov
test
je
push
call
pop
xor
mov
ret
nop
nop
nop
push
mov
push
mov
mov
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
cmpl
je
mov
cmpw
jne
cmpw
jne
mov
movw
addl
jmp
jmp
mov
cmpw
je
mov
mov
mov
mov
addl
addl
mov
mov
mov
mov
addl
addl
pop
pop
ret
nop
push
push
call
pop
mov
mov
test
jne
push
call
pop
push
mov
push
push
call
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
xor
xor
mov
mov
ret
nop
nop
nop
push
push
push
push
push
cmpl
jne
cmpl
jne
call
mov
test
jne
push
call
pop
xor
xor
mov
jmp
lea
inc
add
add
push
call
pop
mov
test
jne
lea
push
call
pop
mov
mov
test
jne
xor
jmp
push
mov
push
push
call
add
jmp
xor
mov
jmp
push
call
pop
test
jne
dec
inc
add
mov
test
jne
lea
push
mov
inc
push
call
add
test
mov
jne
xor
jmp
cmpl
jne
xor
mov
mov
mov
jmp
mov
add
inc
inc
add
push
call
pop
mov
test
jne
jmp
xor
mov
mov
mov
jmp
push
call
pop
test
je
mov
mov
jmp
dec
add
add
inc
add
mov
test
jne
mov
test
je
push
call
pop
mov
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
call
test
jne
push
call
pop
ret
mov
mov
push
push
call
add
ret
nop
nop
push
mov
xor
mov
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
xor
mov
call
mov
test
je
mov
test
jne
mov
jmp
xor
mov
cmp
jg
je
cmp
jg
je
sub
je
dec
je
jmp
sub
je
sub
je
jmp
add
cmp
ja
jmp
fmull
inc
add
mov
mov
orb
add
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
mov
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
movl
mov
jmp
mov
jmp
mov
cmp
jne
xor
jmp
test
jne
mov
jmp
xor
cmp
mov
je
cmp
je
cmp
jne
call
push
mov
push
call
add
lea
push
mov
push
mov
push
call
mov
add
not
and
jmp
lea
push
push
mov
push
call
add
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
push
mov
cmpl
jne
mov
jmp
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
push
cmpb
mov
jne
movl
push
push
call
movb
push
call
pop
mov
inc
jne
call
movl
or
jmp
cmp
je
cmp
jne
mov
jmp
call
mov
test
jne
or
jmp
mov
test
jne
push
call
pop
mov
test
jne
call
movl
or
jmp
xor
mov
xor
inc
mov
add
cmp
jl
mov
mov
mov
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
cmp
je
cmp
jne
mov
jmp
call
mov
test
je
mov
test
jne
mov
jmp
push
call
pop
mov
inc
jne
mov
jmp
mov
cmp
je
test
jne
add
sub
jb
sub
je
sub
je
jmp
call
jmp
push
call
pop
jmp
xor
mov
xor
mov
push
push
push
call
add
xor
pop
pop
pop
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
xor
ret
nop
xor
ret
nop
push
mov
add
push
push
push
cmpl
je
movl
movl
mov
jmp
movl
movl
xor
mov
cmp
je
xor
mov
mov
lea
mov
jmp
mov
cmpl
mov
je
mov
jmp
mov
cmpl
je
mov
jmp
mov
mov
cmpl
jne
mov
cmp
jae
mov
cmp
jne
call
add
cmp
jb
jmp
mov
add
cmp
ja
mov
cmp
jne
call
sub
cmp
jbe
incl
addl
mov
mov
cmp
jg
add
cmp
jne
pop
pop
pop
mov
pop
ret
nop
nop
push
push
push
cmpl
jne
movl
push
push
call
add
push
push
call
add
call
mov
test
je
push
push
call
add
xor
lea
jmp
mov
mov
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
push
push
call
add
ret
nop
push
mov
add
push
push
push
mov
mov
and
mov
call
mov
push
mov
push
call
add
mov
push
call
pop
mov
push
call
pop
movl
mov
lea
mov
call
call
mov
call
mov
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
mov
push
call
add
call
mov
test
je
mov
movl
push
push
call
add
xor
mov
lea
jmp
mov
mov
push
push
call
add
incl
add
mov
cmp
jg
push
push
call
add
testb
je
mov
jmp
inc
mov
cmp
je
cmp
je
cmpb
jne
mov
inc
jmp
mov
jmp
inc
mov
test
je
cmp
je
cmp
jne
cmpb
jne
inc
jmp
inc
mov
test
je
cmp
je
cmp
je
call
push
push
push
push
call
push
call
add
push
call
pop
jmp
mov
push
mov
push
mov
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
nop
add
push
call
testb
je
movzwl
jmp
mov
add
ret
call
mov
ret
call
mov
ret
push
add
xor
movl
lea
push
call
cmpl
jne
mov
push
lea
push
lea
push
call
call
add
mov
add
pop
ret
nop
call
ret
nop
nop
push
mov
mov
push
call
pop
ret
push
mov
mov
push
call
pop
ret
push
mov
mov
push
mov
push
call
pop
ret
push
mov
pop
ret
nop
push
mov
pop
ret
nop
xor
ret
nop
push
call
mov
test
jne
call
mov
call
mov
mov
pop
ret
nop
nop
push
mov
push
call
pop
mov
test
je
mov
mov
jmp
push
call
pop
mov
test
je
push
push
push
call
add
test
je
movl
xor
xor
mov
xor
mov
xor
mov
mov
cmpl
jne
mov
push
call
pop
mov
test
jne
push
call
pop
xor
jmp
mov
push
push
mov
push
call
add
mov
push
call
pop
mov
pop
ret
nop
nop
nop
push
mov
push
mov
mov
push
call
pop
mov
mov
mov
mov
push
call
pop
pop
pop
ret
nop
nop
nop
push
push
call
add
ret
nop
push
push
mov
call
mov
test
je
push
call
pop
jmp
mov
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
mov
push
call
pop
mov
mov
test
jne
pop
pop
ret
nop
push
mov
push
call
cmpl
jl
mov
push
call
pop
mov
shl
lea
add
push
call
mov
mov
shl
lea
add
mov
push
incl
call
pop
ret
push
mov
mov
push
call
pop
ret
nop
nop
push
mov
mov
push
call
pop
ret
nop
nop
push
mov
add
push
push
mov
lea
mov
mov
rep
movsb
mov
push
lea
push
call
add
lea
push
call
pop
pop
pop
mov
pop
ret
nop
nop
push
call
movl
ret
nop
nop
nop
push
push
call
push
call
mov
cmpl
jne
movl
ret
mov
mov
jmp
ret
push
mov
push
mov
push
call
pop
test
jne
cmp
ja
call
testb
je
call
call
orl
call
mov
pop
pop
ret
pop
pop
ret
push
mov
push
mov
call
cmp
jne
call
andl
pop
pop
ret
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
pushl
push
push
push
call
add
test
je
mov
jmp
movzwl
mov
movzwl
test
je
pushl
push
pushl
push
call
add
test
je
mov
jmp
mov
movzwl
test
jne
xor
jmp
pushl
push
push
push
call
add
test
je
mov
jmp
test
je
testb
je
mov
jmp
testb
jne
xor
jmp
test
je
test
jne
testb
jne
test
jne
testb
jne
mov
jmp
xor
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
test
mov
jne
test
je
push
push
push
call
add
test
je
push
push
push
call
add
test
je
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
push
call
add
jmp
push
push
push
call
jmp
mov
xor
mov
call
jmp
push
push
push
call
jmp
mov
test
je
push
push
push
call
add
jmp
and
dec
je
dec
je
dec
je
sub
je
jmp
push
push
call
add
jmp
push
push
call
jmp
mov
mov
call
jmp
push
push
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
mov
xor
test
je
jmp
inc
mov
inc
test
jne
pop
ret
push
mov
push
lea
push
mov
inc
inc
push
push
push
call
pop
pop
ret
push
mov
push
push
push
cmpl
mov
je
mov
jmp
xor
testb
je
or
mov
cmpl
jne
pushl
call
pop
mov
push
call
pop
push
push
pushl
push
push
call
add
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
push
pushl
call
add
jmp
push
pushl
call
jmp
mov
mov
call
jmp
push
pushl
call
jmp
mov
test
je
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
push
call
add
and
dec
je
dec
je
dec
je
sub
je
jmp
pushl
call
pop
pop
pop
ret
pushl
call
pop
pop
ret
mov
call
pop
pop
ret
pushl
call
pop
pop
ret
mov
test
je
push
push
push
call
add
pop
pop
ret
push
mov
add
mov
push
push
push
call
mov
call
orl
call
test
je
movzwl
add
jmp
xor
mov
call
mov
mov
call
mov
mov
mov
movzwl
test
mov
je
mov
jmp
xor
test
mov
je
mov
mov
mov
lea
push
call
pop
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
movb
push
pushl
mov
add
push
call
add
mov
cmpl
je
mov
cmpl
jne
push
call
pop
mov
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
mov
sub
push
push
push
call
add
testb
je
cmpl
jne
push
push
push
call
add
mov
mov
movw
pushl
pushl
pushl
mov
add
push
call
movw
add
jmp
call
movw
call
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
push
push
push
push
call
mov
addr16
pop
pop
pop
mov
pop
ret
mov
add
push
push
push
push
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
push
push
push
mov
add
push
pushl
push
push
push
push
push
mov
mov
mov
call
mov
test
jne
call
cmpb
je
lea
jmp
mov
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
pop
pop
pop
pop
pop
ret
push
mov
add
mov
test
jne
movl
movl
xor
lea
mov
orl
mov
mov
mov
mov
call
mov
pop
ret
push
mov
add
mov
push
push
push
mov
call
test
jne
push
push
push
call
add
movw
push
pushl
push
push
pushl
pushl
call
movw
add
jmp
call
movw
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmpb
je
testb
je
mov
mov
lea
movzwl
push
pushl
push
push
call
add
mov
movb
cmpb
je
mov
test
jne
push
push
push
call
add
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
call
cmpl
jne
push
push
push
call
add
call
mov
call
mov
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmp
je
push
push
push
call
add
mov
mov
movzwl
mov
mov
mov
mov
push
call
pop
push
call
pop
mov
cmpl
jne
pushl
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
cmp
je
push
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmpb
je
push
push
push
call
add
mov
mov
mov
test
je
mov
testb
jne
mov
mov
testb
sete
and
lea
mov
mov
movb
mov
mov
add
mov
movzwl
mov
mov
test
je
mov
movzwl
mov
test
je
testb
je
push
push
pushl
call
movl
add
jmp
testb
je
test
je
test
je
testb
je
push
push
push
call
add
movl
jmp
test
jne
push
push
push
call
add
testb
jne
push
push
push
call
add
mov
mov
mov
push
pushl
call
add
test
jne
mov
mov
push
pushl
pushl
call
add
mov
mov
cmp
je
movl
push
lea
push
pushl
call
add
jmp
testb
je
mov
cmp
je
push
push
push
call
add
push
pushl
call
add
test
jne
push
pushl
pushl
call
add
mov
movl
testb
je
mov
cmpl
jne
push
push
push
call
add
mov
pushl
mov
pushl
pushl
pushl
call
movl
add
jmp
push
pushl
pushl
call
add
jmp
test
je
push
lea
push
pushl
call
movl
add
jmp
cmp
je
push
push
push
call
add
push
pushl
pushl
call
add
cmpl
jne
testb
je
testb
je
movzwl
push
pushl
push
pushl
call
add
movb
pop
pop
pop
mov
pop
ret
push
mov
add
xor
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
movzwl
jmp
mov
mov
mov
movzwl
add
mov
movzwl
mov
add
sub
jb
sub
jb
je
dec
je
jmp
jmp
mov
mov
mov
mov
movw
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
mov
movw
jmp
call
add
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
mov
test
jne
test
je
mov
cmp
je
push
push
push
call
add
mov
mov
mov
push
call
pop
push
call
pop
jmp
mov
mov
mov
add
mov
pushl
pushl
add
push
push
call
add
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
je
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
pushl
pushl
call
add
pop
ret
push
mov
push
mov
push
push
call
add
mov
addr16
pop
pop
ret
push
mov
push
push
mov
mov
add
jmp
mov
test
jne
mov
jmp
push
pushl
push
pushl
pushl
call
add
test
je
mov
jmp
add
cmpl
jne
xor
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
cmpl
jne
xor
jmp
call
mov
testb
je
push
pushl
call
add
mov
cmpl
jne
mov
test
je
jmp
push
mov
pushl
pushl
mov
pushl
mov
pushl
call
add
test
jne
add
cmpl
jne
mov
mov
mov
mov
call
mov
mov
jmp
mov
movzwl
test
je
mov
movzwl
mov
add
movzwl
mov
add
mov
cmp
ja
jmp
sbb
inc
add
mov
inc
add
movsl
inc
add
sub
je
jmp
mov
mov
add
pushl
pushl
call
add
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jne
mov
cmpl
jb
mov
cmpl
jbe
pushl
pushl
pushl
push
push
call
add
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
call
add
push
pushl
call
add
mov
mov
mov
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
add
call
andl
mov
cmpl
jne
cmpl
jne
mov
pushl
call
mov
mov
pop
cmpb
je
mov
add
jmp
mov
mov
push
push
call
pop
push
push
push
push
push
call
add
mov
mov
mov
mov
mov
mov
call
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
push
push
push
push
mov
mov
mov
mov
call
pop
pop
pop
pop
jmp
mov
cmpl
je
mov
mov
mov
mov
mov
test
jge
mov
testb
je
mov
mov
mov
xor
jmp
test
je
mov
xor
mov
add
mov
mov
mov
mov
jmp
mov
test
je
push
push
push
call
add
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
push
mov
add
mov
push
push
push
mov
mov
mov
call
testb
jne
push
push
push
call
add
cmpl
jne
push
push
push
call
add
movw
movw
mov
mov
cmp
jae
test
jne
push
push
push
call
add
test
jne
test
je
mov
jmp
mov
mov
sub
push
movzwl
push
pushl
push
push
pushl
call
movw
add
jmp
call
movw
call
movw
jmp
call
movw
call
mov
addr16
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
mov
jmp
mov
add
cmpl
je
mov
mov
testb
je
pushl
pushl
push
push
pushl
push
push
call
add
xor
sub
cmp
jae
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
cmpl
je
mov
mov
jmp
mov
mov
test
je
cmp
ja
pushl
pushl
pushl
pushl
pushl
call
add
jmp
cmp
ja
push
push
push
call
add
mov
mov
movzwl
add
mov
mov
cmpl
je
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
mov
mov
test
je
testb
jne
push
push
push
call
add
testb
je
mov
cmp
ja
pushl
pushl
push
push
pushl
mov
add
push
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
sub
addl
jmp
mov
movzwl
add
mov
mov
test
jne
push
push
push
call
add
movl
testb
je
mov
mov
mov
testb
jne
push
push
push
call
add
mov
imull
cmp
jbe
sub
jmp
mov
add
mov
movl
testb
je
mov
mov
mov
cmpl
jbe
pushl
pushl
push
pushl
push
call
add
jmp
pushl
pushl
push
push
push
push
push
call
add
xor
sub
cmp
jae
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
cmpl
je
pushl
pushl
push
push
pushl
pushl
pushl
pushl
call
add
jmp
add
jmp
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
push
mov
mov
testb
jne
push
push
push
call
add
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
test
jne
push
push
push
call
add
cmpl
jne
mov
imull
mov
mov
xor
div
mov
mov
cmp
jbe
cmpl
je
push
push
push
call
add
mov
imul
sub
cmp
jae
push
push
push
call
add
mov
imul
add
cmpl
je
pushl
pushl
push
pushl
push
push
push
call
add
jmp
sub
pushl
pushl
push
push
push
push
push
call
add
mov
addl
test
jne
pop
pop
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
mov
mov
testb
jne
push
push
push
call
add
mov
and
cmp
je
mov
jmp
cmpl
jne
mov
jmp
cmpl
jne
mov
add
mov
mov
jmp
mov
sub
sub
cmpl
je
push
push
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
add
xor
push
push
push
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
sub
mov
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
mov
mov
mov
testb
je
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
cmpl
jg
mov
testb
jne
mov
mov
and
cmp
jne
mov
incl
jmp
xor
jmp
mov
cmpl
jne
sub
jmp
testb
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
jmp
mov
mov
mov
mov
testb
je
mov
mov
mov
mov
testb
je
mov
testb
je
testb
je
xor
mov
testb
jne
push
push
push
call
add
testb
je
mov
add
mov
jmp
mov
mov
mov
mov
mov
testb
je
mov
testb
je
addl
push
lea
push
pushl
call
add
mov
mov
mov
testb
je
mov
mov
testb
jne
push
push
push
call
add
imul
cmp
jae
sub
add
jmp
mov
mov
mov
test
je
mov
add
mov
jmp
mov
mov
test
je
mov
testb
jne
push
push
push
call
add
mov
mov
mov
test
je
xor
mov
testb
jne
push
push
push
call
add
mov
test
mov
mov
mov
mov
mov
je
mov
mov
mov
and
mov
cmp
jne
addl
mov
testb
je
mov
testb
je
test
je
push
lea
push
pushl
call
add
mov
mov
mov
cmpl
jne
test
je
mov
cmpw
je
mov
movzwl
add
test
jne
push
push
push
call
add
mov
mov
jmp
xor
mov
cmp
jb
mov
jmp
mov
jmp
xor
mov
testb
je
pushl
pushl
pushl
pushl
pushl
call
add
jmp
pushl
pushl
push
pushl
push
pushl
pushl
call
add
test
je
mov
testb
je
mov
cmpb
je
mov
mov
mov
mov
mov
call
mov
and
cmp
jne
and
cmp
jne
subl
mov
testb
je
mov
mov
mov
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
jmp
mov
cmpl
je
mov
movzwl
push
mov
pushl
pushl
call
add
jmp
pushl
call
pop
xor
mov
mov
add
cmp
ja
xor
pop
pop
pop
mov
pop
ret
push
mov
push
mov
cmp
jne
or
pop
pop
ret
mov
cmpw
jne
mov
add
mov
mov
add
mov
jmp
mov
add
push
push
push
call
add
test
je
or
pop
pop
ret
movzwl
pop
pop
ret
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
inc
outsl
jb
popa
outsb
and
sub
sub
jns
imul
xor
and
jb
popa
outsb
and
jb
outsl
jb
je
outsl
outsb
add
add
add
inc
add
adc
in
inc
add
add
fs
add
add
mov
inc
add
ljmp
enter
and
inc
add
add
aad
add
add
ljmp
sub
inc
add
nop
xorb
add
scas
inc
add
mov
add
inc
add
inc
add
scas
inc
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
add
mov
add
inc
add
add
inc
add
mov
add
inc
add
inc
add
mov
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
in
push
mov
add
push
dec
jne
mov
add
push
push
push
lea
lea
movb
movb
movb
mov
mov
mov
mov
mov
mov
call
pop
mov
movb
movb
movb
xor
inc
mov
add
add
mov
add
mov
dec
mov
cmp
jne
mov
cmp
jne
mov
inc
mov
cmp
jne
mov
add
add
mov
mov
test
jl
inc
lea
mov
mov
inc
inc
dec
jne
movw
movw
mov
mov
mov
add
mov
cmp
je
add
mov
cmp
je
mov
test
jl
inc
lea
xor
mov
xor
mov
inc
dec
jne
movw
movw
mov
mov
mov
add
mov
cmp
je
add
mov
cmp
je
lea
call
pop
pop
pop
mov
pop
ret
pop
sub
fmuls
add
out
add
add
add
fmuls
add
add
add
mov
or
mov
sbb
mov
mov
bound
and
adc
sbb
sbb
xchg
and
adc
sbb
sbb
sbb
mov
bound
bound
and
adc
sbb
sbb
andb
mov
and
adc
sbb
sbb
mov
bound
and
adc
sbb
sbb
sbb
and
adc
sbb
sbb
out
daa
outsb
and
out
outsb
mov
insb
cmpsl
jmp
mov
insb
cmpsl
jmp
mov
call
daa
fwait
lret
bound
daa
push
jg
sbb
insb
stos
arpl
insb
pop
in
in
subl
and
sbb
sbb
insb
mov
insb
cld
insb
cld
insb
mov
pop
outsb
mov
in
insb
mov
outsb
mov
insb
mov
outsb
mov
insb
mov
outsb
mov
mov
and
inc
insb
cmpsl
ljmp
subl
popf
in
insb
aaa
es
mov
in
insl
lods
in
stos
pop
xchg
movsl
insl
lods
loopne
stos
pop
xchg
fnsave
mov
insb
mov
in
insb
das
in
in
subl
mov
insb
mov
in
call
in
outsb
mov
insb
mov
insb
fucom
sbb
sbb
scas
fs
sbb
adc
sbb
sbb
lahf
and
adc
sbb
sbb
xchg
and
adc
sbb
sbb
andb
lea
sbb
mov
bound
bound
mov
xor
pop
sbb
pop
out
out
and
sbb
sbb
sbb
andb
mov
and
sbb
sbb
sbb
mov
bound
and
sbb
sbb
sbb
mov
bound
bound
and
sbb
sbb
sbb
mov
bound
and
sbb
sbb
sbb
andb
mov
sbb
cmpsb
and
sbb
sbb
and
sbb
sbb
sbb
mov
rcrb
sbb
mov
fistps
sbb
andl
ficomps
sbb
mov
fstpl
sbb
andb
fcompl
sbb
xchg
and
sbb
sbb
sbb
xchg
and
sbb
sbb
sbb
test
bound
and
sbb
sbb
sbb
out
bound
sbb
mov
sbb
andb
dec
sbb
sbb
sbb
mov
bound
sbb
sahf
and
sbb
sbb
sbb
sbb
andb
push
sbb
sbb
sbb
mov
bound
sbb
mov
bound
sbb
mov
bound
sbb
andb
push
sbb
sbb
and
sbb
sbb
sbb
sbb
popf
and
sbb
sbb
sbb
mov
int3
sbb
sbb
sbb
mov
lret
sbb
sbb
xchg
and
sbb
sbb
sbb
xchg
and
sbb
sbb
sbb
test
aam
sbb
andb
rcrl
sbb
out
sbb
sbb
sbb
mov
cld
sbb
sbb
sbb
andl
cli
sbb
sbb
sbb
andb
clc
sbb
sbb
sbb
sbb
xchg
and
sbb
sbb
sbb
test
sbb
sbb
sbb
out
jmp
sbb
stos
and
sbb
sbb
sbb
test
call
and
sbb
sbb
sbb
andb
cmc
sbb
sbb
sbb
sbb
xchg
and
sbb
sbb
sbb
test
lock
sbb
sbb
out
bound
sbb
sbb
sbb
mov
bound
sbb
sbb
sbb
xchg
and
sbb
sbb
sbb
xchg
bound
sbb
sbb
sbb
cmpsb
and
sbb
sbb
sbb
mov
bound
sbb
sbb
sbb
test
bound
push
jmp
sbb
mov
sbb
outsb
mov
sbb
sbb
mov
sbb
sbb
mov
sbb
sbb
mov
sbb
sbb
mov
sbb
sbb
and
rcrb
sbb
mov
sbb
outsb
mov
sbb
sbb
mov
sbb
sbb
mov
sbb
andl
sbb
out
and
adc
sbb
ja
sbb
xchg
out
insb
jb
adc
sbb
sbb
xchg
lret
add
sbb
fnsave
sbb
sbb
inc
adc
sbb
sbb
xchg
call
sbb
fnsave
sbb
sbb
inc
andl
sbb
cltd
adc
sbb
out
insb
bound
sbb
sbb
sbb
inc
adc
sbb
sbb
xchg
out
insb
mov
outsb
mov
sbb
sbb
insb
jp
sbb
sbb
fs
xchg
testl
sbb
sbb
fdivrl
sbb
sbb
out
and
sbb
sbb
out
out
bound
mov
out
xor
pop
mov
out
xor
mov
sbb
mov
mov
mov
mov
outsb
mov
sbb
out
cltd
in
pop
out
out
sbb
sbb
sbb
pop
test
jecxz
out
out
insb
mov
sbb
out
out
mov
mov
imul
aam
cmpsl
insb
stos
adc
das
insb
lods
insl
cld
fnstsw
fnstsw
movsb
insl
cld
fnstsw
push
sbb
sbb
sbb
sbb
insb
mov
fwait
aad
stos
jae
das
insl
out
outsl
jmp
push
out
dec
mov
out
out
outsl
sti
in
scas
out
dec
jmp
in
sub
jmp
scas
fs
sbb
stc
push
pop
call
mov
mov
aam
out
std
out
out
sbb
sbb
sbb
adc
adc
sbb
and
xor
dec
sbb
sbb
mov
pop
sbb
outsl
sbb
sbb
sbb
bound
cmp
repnz
mov
sbb
add
sbb
sbb
insb
and
sbb
sbb
bound
and
sbb
bound
fcompl
in
dec
xchg
lret
insb
out
sbb
das
in
sbb
test
add
sbb
out
sbb
sbb
sbb
sbbb
aaa
and
sbbl
out
sbb
and
andb
bound
xor
sbb
push
sbbb
sti
xchg
and
bound
sbb
out
bound
aam
insb
sbb
mov
testl
fcompl
bound
clc
sbb
sbbl
sbb
and
xchg
imull
cs
bound
jb
adc
and
xor
xchg
and
mov
sbb
sbb
sbb
xchg
sbb
bound
sbb
add
bound
out
push
bound
outsl
bound
insb
mov
sbb
jb
push
insb
sbb
out
mov
sbb
xchg
and
out
adc
mov
sbb
bound
and
andl
cld
sbb
in
test
sbb
bound
bound
jb
and
jb
sbb
push
adc
insl
test
bound
bound
xor
sbb
out
mov
bound
sbb
bound
sbb
sbb
bound
sbb
sbb
jae
popf
bound
mov
daa
and
bound
xchg
insb
sbb
and
frstor
sbb
mov
mov
sbb
in
sbb
in
sbb
sbb
sbb
or
insb
frstor
jnp
cmpsb
adc
int
cmp
pushw
pop
mov
sbb
sbb
clc
sbbl
and
sbb
inc
out
mov
sbb
rcrb
outsb
sbb
and
imul
bound
xchg
mov
outsl
rol
and
sbb
and
and
fmulp
bound
ja
mov
sbb
in
cmp
imul
sbb
sbb
bound
adcb
add
sbb
mov
sbb
insb
mov
adc
mov
and
inc
mov
and
aad
faddl
fwait
mov
outsl
insb
pop
bound
and
out
mov
lea
adc
das
andl
sbb
xchg
adc
sbb
sbb
sbb
rsqrtps
sbb
sbb
sbb
out
sbb
stos
insb
and
in
sbb
sbb
xchg
sbb
fstl
and
jmp
xchg
stos
fdecstp
cmc
lock
sbb
sbb
push
bound
and
insb
mov
mov
sbb
ret
leave
pop
prefetcht1
test
and
push
sbb
mov
sbb
sbb
and
sbb
sbb
sbb
sbb
sbb
pop
bound
bound
cmpsb
sbb
sbb
and
sbb
bound
out
sbb
mov
sbb
mov
mov
sbb
cmp
inc
xchg
and
sbb
sbb
sbb
and
out
jb
aam
sbb
sbb
sbb
aam
sbb
pop
dec
bound
sbb
bound
in
data16
mov
sbb
sbb
outsb
lea
sbb
sbb
insb
and
and
mov
and
out
bound
sbb
jb
sbb
stos
sbb
sbb
add
push
or
add
add
add
popa
outsb
jns
outsl
fs
and
jae
add
add
cld
incl
add
add
add
add
incl
add
add
add
inc
add
add
add
incl
add
add
pop
inc
add
inc
add
push
inc
add
pop
inc
add
add
cld
incl
add
add
add
add
incl
add
add
int
add
inc
add
add
add
incl
add
add
int
add
add
xchg
hlt
inc
add
incl
add
add
inc
add
add
add
incl
add
add
jb
outsb
fs
insl
add
imul
and
fs
imul
and
insb
insb
and
jb
outsb
fs
insl
and
imul
insb
outsb
fs
insl
add
outsl
jb
outsb
fs
insl
inc
push
jns
inc
gs
gs
and
jno
imul
insb
outsb
fs
insl
inc
push
jns
inc
jb
gs
gs
and
jno
jo
add
outsl
jb
outsb
fs
insl
inc
push
jns
push
gs
insb
insb
outsl
arpl
insl
and
jno
jo
imul
add
add
add
enter
loopne
inc
add
sbb
sbb
inc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
sub
inc
add
inc
add
inc
add
gs
je
outsb
and
popa
jo
insb
outsl
arpl
add
sub
add
add
mov
inc
add
add
add
add
hlt
inc
add
add
aam
inc
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
lcall
add
add
add
push
pop
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
sub
add
add
fdiv
inc
add
incl
add
add
iret
inc
add
add
add
incl
add
add
add
add
and
insl
gs
arpl
je
outsl
outsb
and
outsl
ja
add
and
arpl
je
outsl
outsb
and
outsl
ja
add
and
insb
outsl
arpl
gs
gs
imul
outsl
ja
add
jb
jb
jb
jae
fs
add
add
xor
inc
add
add
add
incl
add
add
add
add
add
add
cmp
outsl
je
jo
add
sub
popa
insl
add
je
jo
arpl
add
add
je
jo
arpl
add
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
sub
popa
insl
add
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jae
sub
popa
jae
sub
js
je
jo
arpl
add
pop
push
push
push
push
inc
sub
jbe
je,pt
dec
popa
jae
sub
js
je
jo
arpl
add
jbe
je,pt
inc
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
inc
push
inc
push
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
outsl
je
jo
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
pop
push
push
push
push
inc
sub
push
jns
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
arpl
push
je
and
jl
and
pop
push
push
push
push
inc
sub
arpl
push
je
sub
popa
jae
sub
js
je
jo
arpl
add
imul
jns
gs
inc
sub
arpl
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
push
jns
push
je
and
cmp
and
imul
jns
gs
inc
sub
push
jns
push
je
sub
je
je
jns
push
je
sub
cmp
js
je
jo
arpl
add
arpl
push
je
add
je
jo
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
popa
bound
je
sub
xor
cmp
js
je
jo
arpl
add
fs
js
je
jo
arpl
add
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
and
inc
popa
outsb
daa
je
popa
fs
jae
and
popa
jae
and
fs
jae
and
outsb
outsl
and
jae
and
popa
jae
and
je
jns
outsw
jne
sub
add
je
jo
arpl
fdivr
jmp
add
add
add
add
cmp
push
cmp
mov
inc
add
add
incl
add
add
aam
add
add
pushf
add
add
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
inc
add
incl
add
add
aam
add
add
add
add
push
je
arpl
dec
jbe
jb
insb
outsl
ja
add
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
pusha
add
add
add
add
add
insb
outsl
arpl
imul
fs
and
imul
popa
bound
arpl
popa
je
outsb
and
outsb
fs
and
imul
insb
outsl
arpl
add
outsb
fs
gs
arpl
arpl
popa
je
outsb
and
outsl
bound
and
outsb
fs
and
imul
add
add
add
push
or
or
add
sub
sub
sub
sub
sub
add
push
push
push
push
push
push
push
push
push
push
push
push
push
cvttps2pi
add
sub
sub
adc
sbb
add
sub
sub
push
push
push
push
push
push
and
add
adc
sub
adc
adc
adc
adc
sub
sub
adc
adc
push
add
add
push
adc
adc
adc
adc
adc
adc
sbb
push
adc
adc
adc
adc
adc
xor
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
inc
add
fldl
dec
fldl
pop
fldl
insl
fldl
jg
inc
add
fldl
mov
inc
add
fldl
out
inc
add
fldl
or
inc
add
fiadds
and
inc
add
fiadds
pop
fiadds
push
fiadds
xchg
inc
add
fiadds
mov
fiadds
jecxz
inc
add
filds
push
filds
sub
filds
push
filds
push
filds
sbb
add
filds
mov
inc
add
filds
loopne
inc
add
filds
or
inc
add
loopne
add
inc
add
inc
add
add
inc
add
add
inc
jb
outsl
jb
xor
dec
outsb
jbe
insb
imul
imul
bound
add
and
arpl
imul
and
arpl
jns
push
popa
je
and
je
outsw
jne
add
and
outsb
jns
outsl
jo
outsb
and
insb
gs
push
gs
imul
fs
imul
and
insb
and
insl
bound
add
insl
outsl
jb
and
outsb
popa
and
jae
gs
je
outsb
outsl
jne
push
outsl
jb
add
jbe
insb
imul
jns
bound
imul
fs
jae
add
jbe
insb
imul
outsl
outsb
insl
outsb
je
dec
outsb
jbe
insb
imul
je
dec
outsb
jbe
insb
imul
jae
arpl
add
jbe
insb
imul
inc
popa
and
fs
jae
add
and
arpl
fs
arpl
inc
je
gs
jo
gs
jb
insl
outsl
jbe
and
jb
outsb
je
imul
jns
dec
outsl
je
jae
insl
and
imul
insl
outsl
jb
and
insb
gs
dec
outsb
jbe
insb
imul
outsb
je
inc
jb
and
je
je
outsl
and
add
arpl
outsw
jb
popa
je
gs
outsl
jb
inc
jb
jae
sub
arpl
insb
imul
and
outsb
jns
outsl
jo
outsb
and
insb
gs
dec
outsl
and
imul
gs
gs
dec
outsb
popa
jo
jb
jo
imul
dec
and
outsb
je
outsl
insb
and
gs
je
outsl
outsb
add
arpl
popa
bound
imul
and
add
insb
and
and
add
and
popa
arpl
insb
gs
outsl
outsb
and
imul
gs
insb
and
imul
gs
fs
and
insb
and
jae
gs
add
and
outsb
jns
insb
imul
outsl
imul
jo
jo
add
je
and
addr16
outsb
je
push
gs
insb
je
je
outsl
and
add
insb
and
jb
popa
fs
gs
jae
jae
push
outsl
jae
imul
popa
fs
outsl
arpl
dec
jo
jb
je
outsl
outsb
and
je
jo
jb
imul
and
arpl
jo
outsl
arpl
jae
dec
outsb
je
jb
jne
je
and
outsb
arpl
outsb
and
insb
insb
add
jo
je
outsl
jne
jo
je
gs
outsl
jb
dec
outsl
and
arpl
fs
arpl
outsl
jb
popa
fs
jae
add
jae
jne
arpl
je
insl
jo
jb
jb
insb
jns
jne
popa
jbe
imul
insb
outsl
arpl
fs
arpl
jb
jno
imul
jae
jne
arpl
bound
jns
dec
outsl
je
popa
and
arpl
jns
dec
jae
popa
and
arpl
jns
add
arpl
jns
outsb
outsl
je
gs
jo
jns
push
outsb
imul
outsb
and
jb
jb
cmp
add
add
add
add
arpl
popa
je
outsb
and
outsl
bound
and
jb
popa
insl
and
imul
insb
insb
outsl
arpl
imul
gs
insl
and
imul
popa
bound
arpl
popa
je
outsb
and
jb
popa
insl
and
imul
je
insl
pop
insb
outsl
arpl
add
jb
popa
insl
jae
arpl
add
outsb
jne
insb
sub
add
add
jne
insb
add
add
add
push
push
add
pop
push
push
push
push
add
push
add
or
add
push
push
push
push
push
push
push
push
adc
nopl
or
push
push
pop
push
sbb
push
push
push
adc
push
push
push
or
push
push
push
push
push
push
adc
invd
or
push
push
push
adc
push
push
push
adc
or
push
or
push
push
push
nop
nop
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
add
add
in
add
in
add
in
add
in
add
in
add
in
add
add
daa
in
add
in
add
in
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
add
add
jecxz
add
add
add
jecxz
add
out
add
inc
add
add
add
add
sub
add
add
add
add
cmp
das
and
add
inc
and
pop
add
add
add
outsb
fs
jns
push
jne
jae
popa
jns
push
gs
gs
popa
jns
push
push
popa
jns
inc
jb
fs
jns
push
popa
je
jb
popa
jns
push
jne
fs
jns
dec
outsl
outsb
add
add
add
add
imul
push
jne
add
outsb
jne
jb
add
bound
popa
jb
add
jb
push
imul
jne
add
insb
jns
inc
jne
jne
je
push
gs
gs
bound
add
je
bound
add
jbe
insl
bound
add
gs
bound
add
outsb
add
bound
dec
popa
jb
inc
jo
add
jns
dec
jne
add
insb
add
add
jo
dec
arpl
outsl
jbe
inc
arpl
inc
add
add
and
jae
gs
outsl
jb
add
cmp
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
add
leave
sbb
jo
test
lds
iret
decl
js
roll
mov
or
mov
fdivrp
popf
sti
jmp
stos
push
inc
xchg
push
cmpsb
scas
mov
pop
or
addl
lds
mov
and
and
add
add
cmp
in
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
cld
popa
inc
add
popa
inc
add
bound
or
add
imul
data16
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
arpl
data16
and
outsl
popa
je
outsb
and
imul
insl
popa
je
and
je
insb
imul
add
xor
add
add
cmpb
add
add
lock
add
add
add
cmp
jg
out
jg
jg
add
jg
add
add
add
addb
lock
add
add
add
incl
add
add
lock
jg
add
add
lock
incl
add
add
lock
add
add
lock
add
addb
add
add
add
lock
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
dec
dec
add
dec
inc
add
inc
push
inc
dec
dec
push
add
inc
inc
push
inc
dec
dec
push
add
push
push
add
dec
push
push
add
sub
sub
inc
add
sub
dec
add
add
add
sub
dec
add
inc
add
add
add
add
sub
dec
add
dec
add
cmp
add
add
add
add
add
add
add
jg
add
add
add
sar
add
add
add
add
add
add
add
add
add
add
jg
add
add
add
sar
add
add
and
clc
jg
jno
je
add
add
jb
outsl
jb
and
jae
gs
and
fs
and
arpl
jae
popaw
imul
inc
inc
push
and
insb
and
je
imul
imul
jae
gs
imul
insb
gs
add
imul
and
and
add
and
and
and
and
and
and
add
add
add
jb
gs
xor
cs
insb
add
je
jb
arpl
fs
jae
add
jb
popa
outsb
xor
add
add
outsb
outsl
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
xor
inc
add
addl
and
inc
add
add
add
add
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
jbe
arpl
add
and
popa
arpl
outsw
jb
arpl
insl
popa
outsb
and
and
addr16
outsb
je
add
add
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
and
popa
arpl
outsw
jb
arpl
jns
outsl
data16
insl
insl
popa
outsb
and
add
add
inc
add
addb
add
add
je
outsl
data16
insl
outsl
jb
and
and
gs
jb
jbe
add
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
imul
insb
and
je
popa
insb
insb
outsl
arpl
and
insl
outsl
jb
and
jb
outsb
jbe
jb
outsb
insl
outsb
je
bound
imul
jb
popa
je
outsb
and
jbe
jb
outsb
insl
outsb
je
insb
outsl
arpl
add
add
add
add
or
add
or
add
sldt
add
add
add
add
add
add
adc
add
add
adc
add
add
nop
nop
add
add
add
add
arpl
popa
je
outsb
and
gs
je
insb
outsl
arpl
add
add
gs
je
outsb
and
jb
popa
and
popa
and
imul
add
insl
popa
jo
outsl
jb
and
jb
jb
add
add
fdivr
incl
add
add
in
inc
add
add
mov
add
fdivr
incl
add
add
inc
add
add
icebp
movsl
inc
add
cmpsb
inc
add
incl
add
add
add
or
add
jo
inc
add
add
pop
pop
pop
inc
push
push
fs
dec
outsl
outsl
imul
arpl
dec
popa
jae
and
and
js
xor
xor
and
cmp
jl
sub
outsl
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
arpl
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
fs
jb
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
insl
data16
dec
popa
jae
and
and
js
xor
xor
and
js
arpl
add
popa
je
add
and
popa
je
and
js
arpl
add
je
inc
fs
js
arpl
add
jb
fs
js
arpl
add
addr16
jns
add
arpl
add
inc
push
push
gs
gs
imul
add
arpl
add
add
arpl
add
jb
je
sub
push
push
popa
fs
cmp
add
arpl
add
push
je
sub
push
push
popa
fs
cmp
jb
je
add
arpl
add
push
je
sub
je
bound
jb
cmp
je
je
add
arpl
add
push
je
sub
jb
inc
outsl
jo
and
js
arpl
add
fs
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
sub
cmp
js
arpl
add
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
jns
gs
inc
and
arpl
jb
js,pt
inc
popa
jae
add
arpl
add
je
je
sub
arpl
fs
js
arpl
add
push
je
sub
imul
jae
jp
add
arpl
add
jb
je
and
and
jb
je
and
fs
push
push
add
arpl
add
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
add
and
addr16
and
outsb
je
js
and
and
popa
insb
pop
jne
ja
outsb
sub
and
js
arpl
add
addr16
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
and
bound
jne
and
outsb
je
js
and
and
js
gs
imul
insb
gs
sub
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
fs
js
arpl
add
gs
push
je
sub
arpl
imul
and
jb
jns
gs
insb
popa
jae
je,pn
arpl
jb
outsl
jne
je
and
data16
popa
addr16
js
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
outsb
je
cmp
jbe
jb
outsl
jne
je
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
pop
push
push
push
push
inc
sub
push
jns
gs
popa
jae
sub
js
arpl
add
insl
push
jns
add
arpl
add
insl
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
jb
je,pn
popa
inc
insb
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
je
outsl
jne
je
js
arpl
add
fs
outsl
jne
je
cmp
and
gs
inc
outsl
jne
je
jl
and
gs
inc
outsl
jne
je
cmp
js
arpl
add
inc
outsl
jne
je
cmp
and
je
outsl
jne
je
js
arpl
add
pop
inc
dec
inc
push
push
sub
jb
jns
gs
popa
jae
sub
js
arpl
add
sub
jae
outsb
gs
popaw
jb
sub
jbe
je
fs
pop
sub
cmp
js
arpl
add
push
je
sub
inc
insb
popa
addr16
and
inc
push
inc
push
inc
pop
push
push
push
push
inc
dec
jl
push
inc
push
inc
pop
push
inc
push
push
inc
dec
sub
js
arpl
add
push
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
push
je
sub
push
jns
gs
je
je,pn
jo
popa
jae
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
pop
inc
dec
inc
push
push
sub
push
je
sub
push
jns
gs
popa
jae
sub
es
fs
push
je
sub
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
sub
js
arpl
add
je
je
sub
push
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
gs
push
jns
gs
insb
popa
jae
je,pn
arpl
popa
addr16
and
pop
dec
inc
push
pop
inc
push
dec
push
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
inc
push
push
inc
pop
add
arpl
add
jb
jns
gs
popa
jae
and
and
dec
push
pop
push
push
push
add
arpl
add
add
arpl
add
sub
inc
js
xor
add
inc
add
inc
add
inc
inc
push
push
add
clc
push
add
js
add
mov
add
add
add
add
push
add
push
add
add
add
add
push
add
mov
add
sbb
push
add
aas
push
add
push
push
add
outsl
push
add
jns
add
cltd
push
add
mov
add
int
add
add
add
sbb
push
add
aas
push
add
push
push
add
outsl
push
add
jns
add
cltd
push
add
mov
add
int
add
add
add
loope
add
out
push
add
add
push
add
sub
inc
push
add
push
push
add
pop
push
add
addr16
add
jns
add
push
add
movsl
push
add
mov
push
add
in
add
cmc
push
add
add
push
add
das
push
add
cmp
add
add
arpl
add
add
xchg
add
push
add
mov
add
push
add
jmp
add
add
add
push
add
xor
push
add
pop
push
add
imul
add
push
add
mov
push
add
jecxz
add
cmc
push
add
pop
push
add
pop
push
add
and
add
push
add
dec
push
add
gs
add
jne
add
adcl
xchg
push
add
test
push
add
aad
add
add
add
loope
add
out
push
add
add
push
add
sub
inc
push
add
push
push
add
pop
push
add
addr16
add
jns
add
push
add
movsl
push
add
mov
push
add
in
add
cmc
push
add
add
push
add
das
push
add
cmp
add
add
arpl
add
add
xchg
add
push
add
mov
add
push
add
jmp
add
add
add
push
add
xor
push
add
pop
push
add
imul
add
push
add
mov
push
add
jecxz
add
cmc
push
add
pop
push
add
pop
push
add
and
add
push
add
dec
push
add
gs
add
jne
add
adcl
xchg
push
add
test
push
add
aad
add
add
add
in
push
add
or
add
pop
add
inc
pop
add
push
pop
add
imul
jns
add
lea
add
pop
add
lret
pop
add
fstpl
add
pop
add
sti
pop
add
pop
pop
add
pop
pop
add
xor
add
add
add
push
add
or
add
pop
add
inc
pop
add
push
pop
add
imul
jns
add
lea
add
pop
add
lret
pop
add
fstpl
add
pop
add
sti
pop
add
pop
pop
add
pop
pop
add
xor
add
add
add
push
inc
push
dec
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
add
outsl
jb
push
jns
je
insl
push
push
ja
push
add
add
inc
fs
arpl
add
add
fs
jne
imul
inc
arpl
js
add
inc
insb
insb
outsl
arpl
gs
outsl
arpl
insb
jns
outsb
imul
add
inc
gs
arpl
add
add
je
arpl
imul
imul
outsb
je
outsl
insb
add
add
inc
gs
imul
push
jns
outsl
jne
je
add
dec
bound
arpl
insb
gs
inc
jne
imul
add
add
je
imul
imul
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
gs
je
inc
imul
jns
js
add
add
inc
jb
popa
je
inc
imul
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
inc
js
je
jb
arpl
jae
add
inc
gs
inc
push
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
imul
push
jo
arpl
js
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
gs
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
arpl
push
imul
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
inc
dec
inc
push
add
add
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
je
dec
popa
outsb
fs
add
add
inc
gs
je
imul
push
add
add
inc
gs
gs
imul
inc
gs
gs
imul
add
inc
gs
outsl
insb
jne
gs
popa
insl
gs
outsl
jb
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
add
popa
jo
insb
insb
outsl
arpl
add
dec
gs
jo
jb
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
arpl
inc
jb
add
add
insb
je
inc
jns
gs
outsl
push
imul
add
dec
jo
outsb
push
gs
popa
jo
outsl
jb
push
add
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
add
push
popa
imul
jo
imul
push
je
push
outsb
ja
outsb
add
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
add
push
gs
imul
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
inc
insb
insb
outsl
arpl
add
add
inc
jb
add
add
inc
gs
popa
insb
jne
add
add
push
gs
popa
insb
jne
add
add
push
gs
js
gs
imul
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
push
jne
jb
add
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
imul
insb
gs
jne
jo
je
push
je
jb
add
add
push
jb
je
inc
imul
imul
insb
gs
arpl
outsb
inc
add
add
inc
push
inc
imul
gs
imul
add
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
add
inc
fs
jb
popa
je
push
je
imul
insb
gs
add
add
inc
outsb
jne
inc
imul
gs
arpl
push
add
add
jne
push
push
push
imul
add
inc
gs
popa
jo
jne
add
add
inc
gs
gs
outsl
popa
jb
push
je
je
add
add
inc
gs
imul
outsw
add
add
je
imul
js
dec
outsb
addr16
push
add
add
dec
jae
push
jo
popa
dec
jne
gs
arpl
add
dec
jae
imul
imul
add
jae
popa
addr16
outsl
js
add
add
jae
dec
gs
popa
addr16
add
add
push
gs
popa
jb
outsb
je
add
push
jb
outsb
jae
popa
je
dec
inc
dec
push
jns
inc
arpl
insb
add
add
push
outsb
jo
arpl
inc
inc
insb
push
popa
jb
insl
add
add
jo
imul
cmp
add
add
add
add
add
add
add
sub
add
pusha
add
cmp
add
add
cwtl
rolb
dec
pusha
add
pop
pusha
add
add
add
push
jb
push
arpl
inc
cs
add
inc
gs
js
gs
inc
dec
dec
imul
pop
inc
push
push
fs
dec
outsl
outsl
imul
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
popl
add
push
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
nop
add
add
pop
add
in
add
add
add
loopne
add
adc
add
in
add
add
add
push
add
add
dec
add
dec
add
add
pusha
lock
mov
dec
xchg
jmp
mov
adc
mov
gs
shl
or
lret
cmpsb
or
repz
imul
fs
cmc
push
push
mov
cmp
test
das
pop
jl
mov
out
xlat
push
and
fistpl
rorl
jge
xor
dec
push
adc
cli
mov
xlat
dec
pop
inc
in
andl
jmp
mov
adc
arpl
fs
push
ret
out
or
int3
inc
dec
jne
xlat
pop
dec
sub
sarl
dec
jae
andb
mov
repz
xor
sbbl
lss
dec
dec
shl
mov
imul
in
cmpsb
mov
inc
push
imul
fisttpll
mov
jle
sub
aas
adc
xor
jle
leave
ja
daa
adc
pop
fs
mov
dec
cmpsb
leave
push
jb
rcrl
popa
inc
push
push
iret
pop
xchg
or
popf
xor
mov
iret
mov
dec
in
out
iret
leave
pop
imul
repz
add
mov
call
mov
xor
sub
rcl
adc
repz
cmpsb
or
mov
sarl
ror
add
or
push
lcall
out
mov
repz
xor
sbbb
leave
mov
repz
shl
lods
push
imul
mov
aam
mov
imul
fsts
daa
rcll
fst
lahf
mov
js
sub
adc
adc
xor
arpl
adc
repnz
mov
jns
leave
jae
shll
mov
iret
imul
mov
ljmp
test
jae
mov
lret
adc
mov
test
cs
dec
push
daa
imul
jae
dec
fisubrs
adc
jno
popf
es
jae
dec
imulb
sub
or
mov
adc
push
jae
and
push
mov
test
mov
mov
jae
ljmp
testb
mov
mov
test
pop
mov
mov
dec
jae
mov
pop
cmpsl
mov
lcall
imul
fstpl
mov
out
jbe
dec
adc
adc
push
pop
out
lahf
in
leave
shll
adc
sub
iret
mov
loop
leave
dec
repz
push
cwtl
sub
out
dec
ficompl
push
repz
mov
push
adc
fidivs
outsl
repz
mov
dec
xor
cltd
pop
sub
repz
add
jbe
shll
addb
ror
mov
dec
in
out
iret
rcrb
adc
rcr
dec
sbb
and
out
call
mov
repz
or
icebp
shl
adc
repz
cmpsb
or
iret
rorl
ror
and
out
inc
push
aas
adc
pop
jbe
mov
lahf
repz
adc
lea
sub
mov
lods
push
imul
mov
inc
push
imul
mov
outsl
imulb
stos
adc
adc
ljmp
sahf
leave
movsl
push
daa
adc
pop
mov
cmpsb
leave
jae
shrl
hlt
addr16
iret
imul
mov
ljmp
test
jae
mov
lret
adc
fisubrs
add
push
daa
lahf
imul
lret
addr16
popa
fisubrs
adc
push
lret
lahf
jae
and
test
mov
mov
cmpsl
jae
fimuls
mov
jae
dec
cmpsb
mov
dec
push
lahf
sub
sub
jae
ljmp
testb
mov
sahf
push
test
add
push
lea
rorl
cld
mov
add
imul
mov
loop
test
in
push
sbb
mov
jmp
daa
adc
sub
iret
mov
clc
cmpsb
leave
or
iret
push
cwtl
sub
out
dec
fistps
xchg
repnz
mov
push
sbb
adc
fdivs
lods
repnz
mov
dec
xor
test
repnz
adc
mov
shll
mov
and
iret
mov
dec
in
out
iret
enter
adc
shl
dec
sbb
and
and
push
mov
repz
cmp
dec
shl
adc
repz
cmpsb
or
iret
shrl
iret
dec
sahf
or
push
or
adc
dec
jbe
jg
lahf
repz
lcall
cmpsl
repz
shl
mov
imul
in
cmpsb
mov
inc
push
imul
frstor
mov
imul
adc
xor
push
daa
adc
sub
dec
mov
dec
cmpsb
leave
inc
jb
shll
inc
aaa
push
iret
gs
mov
ljmp
test
jb
mov
lret
adc
sbb
push
jb
mov
lret
dec
push
daa
mov
imul
lret
data16
pop
fisubrs
adc
xor
pop
repnz
dec
sbb
sub
sub
dec
or
pop
iret
xor
es
outsl
jbe
push
mov
repz
decl
cmpsl
repz
out
push
imul
in
cmpsb
mov
jl
imul
fstpl
mov
arpl
sub
aas
adc
xor
imul
jp
mov
jg
leave
dec
jb
rcrl
inc
xor
push
iret
or
leave
int3
jb
mov
ljmp
test
jb
mov
lret
adc
scas
fisubrs
adc
push
daa
sahf
imul
in
data16
dec
fisubrs
adc
pop
lret
sahf
jae
cmp
test
mov
mov
cmpsb
jae
and
mov
sub
sub
push
mov
push
dec
sub
jae
ljmp
testb
mov
cwtl
push
test
and
addr16
push
imul
mov
ficomps
imul
mov
loop
test
in
push
scas
out
lahf
fcomps
adc
sub
into
mov
cmpsb
leave
mov
sub
out
dec
in
pop
leave
enter
aam
pop
inc
adc
in
leave
repnz
mov
dec
xor
in
pop
sub
dec
ffree
into
shll
mov
push
ror
mov
dec
in
out
iret
rcrl
adc
rcr
dec
sbb
and
push
adc
adc
repz
cmp
and
out
movsl
sub
sbb
shll
ror
ds
or
mov
repz
push
jp
adc
dec
jbe
lss
xor
adc
in
xor
or
cmc
mov
lahf
lock
xchg
sbb
gs
in
mov
push
mov
ret
insl
in
pop
fsubrp
test
scas
jo
adc
xchg
sbb
mov
dec
sbb
in
cmp
in
dec
ljmp
and
fcoms
jo
push
add
jne
xor
dec
mov
cwtl
aas
jl
cwtl
movsb
jmp
fsubr
jae
imul
dec
cwtl
mov
shll
inc
in
push
dec
pusha
mov
inc
cmp
scas
sub
sbb
mov
or
adc
pusha
xor
mov
stos
out
adc
fbstp
dec
fxch
and
mov
jmp
ds
dec
loop
frstor
stos
enter
xchg
int
mov
push
add
adc
rol
jle
sub
imul
scas
xor
stc
inc
inc
out
sbb
into
mov
popa
call
out
loopne
or
imul
leave
jb
pusha
dec
xchg
dec
xchg
daa
fcom
dec
mov
adc
rolb
test
mov
leave
xchg
jb
shll
push
cmp
add
jb
cmp
mov
daa
jl
or
repz
jl
leave
fs
pop
mov
in
add
push
sub
es
jae
jl
cmp
imul
cli
shlb
adc
addr16
shlb
or
mov
adc
and
addr16
or
dec
fisubrl
mov
cmp
mov
out
ror
popa
inc
scas
addr16
iret
pop
xchg
or
fsubl
mov
jne
ror
push
sbb
mov
adc
mov
lahf
pop
rorl
dec
cld
daa
mov
lock
cmp
dec
adc
adc
fisttpll
dec
sub
jmp
or
push
popa
pop
cmp
mov
fsubr
or
pop
iret
stc
js
test
xchg
imul
sbb
loopne
popf
sbb
addr16
or
or
pop
jmp
enter
dec
adc
add
xchg
dec
fbstp
popf
mov
dec
sbb
jp
push
ret
popa
or
mov
adc
nop
sbbl
mov
dec
xchg
jle
mov
xor
jmp
or
aad
sahf
addr16
negl
repz
lods
cltd
in
dec
imul
and
dec
push
das
lea
push
dec
mov
xchg
sbb
dec
jl
aas
dec
test
xchg
or
sets
cmpsl
pop
or
daa
scas
lock
or
in
out
iret
cld
addr16
cmp
lods
xor
and
daa
and
sbb
leave
dec
jl
mov
mov
in
lahf
leave
shlb
adc
adc
mov
lahf
sbb
dec
int3
cld
addr16
cmp
int3
mov
repz
fsts
daa
push
loopne
sbb
insb
cmp
xchg
adc
dec
outsl
push
inc
movl
out
fsubrs
daa
dec
pop
ret
sbb
pop
loopne
push
ret
call
mov
jecxz
fldcw
push
xchg
test
cmpsb
mov
adc
sbb
pop
dec
ss
add
push
sub
imul
mov
pop
pop
adc
jnp
leave
sub
pop
sti
adc
dec
fcomi
jne
lret
pop
xchg
xor
xor
and
rcrl
out
pop
outsl
xor
mov
mov
pushf
aad
sbb
nop
loop
add
cmp
or
dec
std
out
insb
xchg
inc
int
add
xor
sub
in
in
popf
dec
outsb
or
sub
xor
inc
sbb
lds
xchg
sarb
cmp
or
xor
nop
lds
int
xchg
and
and
cmp
and
fmuls
mov
pop
in
movsl
lods
pop
shrl
paddsb
mov
dec
sub
cli
xor
in
test
sahf
ret
mov
pmulhuw
enter
dec
ljmp
outsb
sbb
popa
and
mov
xchg
xchg
dec
fcoml
mov
out
negl
inc
adc
rorl
lods
aam
push
in
and
add
shrl
cli
ja
daa
and
sub
in
jge
into
in
or
sbb
imul
dec
out
int
gs
cs
aad
in
cmpl
adc
lods
ds
push
orl
in
cmpsl
scas
outsl
filds
dec
pop
and
xor
pop
ffree
scas
stc
push
mov
fwait
add
loope
push
mov
adc
inc
jg
lods
into
in
or
xchg
imul
mov
cmp
movsl
mov
fidivl
add
shrl
cmp
adc
lea
sub
jmp
in
lea
or
fistpll
or
jne
test
or
jmp
pop
enter
gs
imul
sbb
push
or
decl
cmp
mov
fisttpl
or
adc
out
faddl
pop
xchg
lods
lcall
cs
add
cmp
outsl
pop
pop
sarl
xchg
push
lret
mov
lea
lods
and
roll
test
xor
out
add
xlat
add
cmp
out
ja
sub
test
shr
sqrtps
push
mov
xchg
or
mov
cmp
out
and
cmp
cmp
lods
adc
in
and
mov
mov
mov
or
adc
cwtl
xor
lods
lods
cld
cmp
rcll
and
and
xor
jne
dec
add
sbb
mov
iret
adc
inc
pushf
imul
xchg
pop
imul
in
popf
xchg
enter
outsl
lret
sti
xchg
rorl
nop
test
pop
cs
sbb
sbb
shrb
sbb
std
xchg
or
imul
in
leave
cmp
icebp
mov
mov
mov
pop
sbb
imul
in
mov
dec
mov
cld
pop
dec
and
nop
pop
int3
dec
xor
and
addb
xchg
adc
sub
sti
mov
jge
sub
out
shrb
or
mov
push
stc
cs
xchg
into
in
outsb
pop
lds
add
add
push
enter
lods
out
cmpsl
sbb
cmp
pop
sbb
daa
fidivrs
or
mov
adc
mov
mov
mov
mov
outsb
sbb
lods
push
roll
fldt
xor
add
fsubs
adc
outsl
pop
xor
or
fstp
ret
sub
dec
push
mul
xor
ljmp
lret
sbb
add
mov
pop
and
repz
rorb
int3
pop
rclb
mov
xchg
jne
mov
inc
scas
pushf
in
pushf
test
call
fistps
js
lods
sti
mov
insb
fildll
xchg
add
xor
repnz
shl
xchg
es
test
dec
adc
mov
scas
sbb
leave
lods
jecxz
jbe
xchg
add
jo
add
in
push
mov
push
push
xor
xor
dec
jbe
sbb
inc
or
mov
sbb
and
jg
xchg
push
push
jge
pop
fcoml
gs
cmp
jb
xor
jg
dec
rolb
in
cwtl
mov
dec
out
scas
push
in
sbb
cs
sbb
mov
and
shrl
xchg
dec
add
arpl
mov
mov
inc
push
xor
cmp
in
fildll
sub
cmpsl
js
dec
arpl
xchg
sahf
imul
outsl
testl
jae,pn
mov
jmp
sbb
insb
inc
dec
call
mov
xor
sub
movsl
pusha
les
pop
popf
incb
repz
push
aad
xchg
xlat
adc
mov
sbb
jl
neg
fcoml
jb
cmp
mov
mov
insl
push
fildl
fldlg2
pushf
cld
mov
insb
insb
pop
mov
or
imul
mov
dec
addr16
lret
xchg
fwait
repz
loope
out
stos
arpl
adc
mov
ja
mov
jno
adc
sarl
jae
mov
jae
xor
out
sarl
mov
jae
xor
jae
xchg
outsl
sarl
push
xchg
test
test
xlat
xchg
push
adc
in
int3
mov
dec
inc
sti
call
enter
in
sbb
movsb
in
xor
pop
pop
lods
pop
xor
xchg
sub
loope
dec
es
pop
rcll
lock
jo
add
pop
jne
and
stc
mov
mov
repz
les
in
jl
adc
pusha
lds
roll
lock
loope
scas
popf
push
cwtl
mov
sbb
mov
in
dec
out
adc
inc
in
out
sub
sbbb
std
daa
dec
inc
xchg
in
push
pop
stos
mov
or
movsb
fs
sbb
sub
cmp
or
loopne
lods
cwtl
xchg
idivl
jno
incb
pop
movsl
test
xor
data16
loopne
fisttps
std
xlat
aad
shlb
add
out
addb
aas
mov
or
and
mov
mov
and
jmp
fimuls
lahf
rolb
out
inc
mov
ljmp
stc
in
push
outsb
divl
pop
std
jge
popf
rcll
lods
sbb
mov
jb
add
adc
dec
pop
adc
jmp
jno
outsb
mov
cltd
and
cmp
fdiv
shlb
cwtl
rolb
icebp
push
out
mov
xchg
imul
sub
sub
dec
imull
imul
ja
mov
out
mov
xchg
stos
imull
stos
xchg
lret
ja
aaa
or
imull
jmp
dec
ja
aaa
or
int
mov
test
inc
xchg
xchg
dec
testl
aaa
mov
jne
aad
adc
mov
xchg
pop
addb
les
dec
shr
cmc
clc
leave
push
add
mov
mov
jb
pop
pop
dec
jg
fs
push
fs
ret
insl
test
add
fisubrs
in
push
sub
sahf
stos
cmpsl
outsb
into
inc
testl
sbb
imul
ret
xor
adc
sbb
lahf
lods
adc
dec
into
mov
and
testb
sub
ret
dec
fcmovnu
imul
cltd
xchg
cs
imul
lret
je
addr16
mov
mov
dec
aam
pushf
add
adc
add
ds
int
frstor
mov
jge
rorb
xchg
aas
push
and
jge
vpaddsb
icebp
mov
add
dec
stos
jne
in
das
lea
pcmpgtd
lods
hlt
outsl
dec
push
dec
rorb
mov
adc
sbb
mov
popa
mov
xchg
fbld
lock
repz
lods
shl
lret
add
into
xchg
adc
in
flds
notb
scas
fiadds
hlt
xor
mov
fbstp
rcll
inc
and
xor
rorl
jae
cmp
dec
jno
jmp
mov
in
adc
repz
mov
ror
inc
loopne
negl
das
cli
mov
subb
fcom
lret
xor
inc
xchg
insb
pusha
rcl
shrb
mov
mov
ja
mov
hlt
pop
leave
rcrb
cmp
jb
js
mov
push
mov
mov
lahf
rcr
test
push
sbb
out
lahf
lods
mov
inc
ja
mov
mov
jle
fucomip
cmp
scas
lods
ss
lds
or
adc
inc
mov
fmul
pop
mov
mov
add
push
pop
fdivrs
mov
pop
int
clc
or
into
sbb
cs
mov
add
pop
sbb
int3
xchg
pusha
push
call
dec
mov
inc
pushl
and
dec
xor
popa
lret
xchg
sub
pushf
and
clc
mov
xchg
push
pop
xlat
mov
mov
inc
xchg
sbb
es
lods
inc
xor
jmp
addr16
roll
loope
mov
jno
iret
nop
mov
test
cli
insb
fsubs
sub
das
rolb
mov
and
xor
sarb
xlat
mov
pushf
xchg
into
sti
mov
mulb
pop
inc
cmpsb
int3
jnp
cwtl
inc
movsb
leave
inc
pushf
fdivrs
rolb
dec
lods
icebp
addb
ficompl
sbb
jge
and
test
sub
cmp
imul
sub
inc
pop
dec
jmp
faddl
fs
pushw
stos
testl
insb
fcoms
movsl
stos
add
shr
fwait
int
test
cmp
pop
arpl
mov
jb
dec
lret
enter
test
pop
rol
or
jbe
ret
add
js
xchg
sbb
or
xor
xchg
mov
aad
subl
jecxz
mov
je
cmp
int
jg
ficompl
insl
dec
pop
rorl
sti
pop
mov
hlt
sarl
mov
push
sbb
in
outsl
lea
xchg
ss
jb
push
in
das
inc
xor
popf
stos
popf
xor
fldt
push
bnd
dec
xchg
sub
loope
dec
push
sbb
or
lods
add
stos
ss
mov
mov
push
insb
and
mov
fs
icebp
daa
sbb
out
or
jp
cmp
in
lods
scas
sub
js
cmp
int
mov
xor
fildll
sbb
mov
jge
int
jb
jecxz
jp
lods
and
jne
ret
push
xchg
popf
insl
mov
dec
rol
mov
mov
stc
push
dec
fdivs
adc
cmp
and
jnp
data16
inc
cmp
xchg
imul
inc
stos
pop
push
imulw
lret
aaa
in
frstor
nop
cmp
adc
pop
dec
and
lcall
mov
das
or
mov
mov
repz
mov
inc
push
sub
pop
push
fcompl
adcl
repz
jno
mov
xor
adc
push
adc
sub
test
fidivs
or
test
pop
pusha
outsl
or
sbb
testb
enter
je
mov
push
inc
jmp
sub
cs
fists
adc
dec
dec
cs
rcrb
and
push
cmp
jne
adcb
adc
iret
jns
out
or
sub
fistpll
dec
lods
call
cmp
mov
fsubr
in
mov
lods
std
sbb
xchg
incl
add
mov
jmp
pop
xchg
fiaddl
and
test
movsb
call
es
sub
xor
pop
in
mov
inc
push
add
cmp
lea
cmp
inc
dec
popf
std
mov
and
cmp
movsb
popf
repnz
sub
insb
jmp
jnp
rorl
ljmp
and
hlt
inc
mov
movsb
jmp
call
add
adc
inc
inc
es
leave
lret
pushf
push
push
cmp
lea
cmp
orl
fld
scas
and
test
jb
jge
mov
mov
add
les
push
les
jmp
pop
jnp
push
mov
pop
adcl
mov
xchg
jge
sbb
lea
std
push
mov
mov
mov
pusha
out
jle
lret
xchg
cmp
mov
bound
daa
jmp
scas
lahf
outsl
cmp
addr16
sub
out
inc
in
adc
ret
or
in
or
call
or
sarb
iret
lds
cmp
mov
ss
es
aas
push
les
jnp
sub
adc
stc
inc
lods
jnp
test
jmp
pop
iret
pop
gs
movsb
cld
cmpsb
mov
or
jecxz
mov
jae
dec
pusha
push
and
stos
iret
cmp
shrb
das
pusha
mov
loop
adc
lret
push
or
sub
out
mov
ret
inc
fs
cmp
dec
scas
mov
ds
sbb
loope
jge
and
ret
mov
leave
ror
scas
insb
filds
mov
or
jnp
lock
sbb
xor
cmpsb
outsl
and
aas
les
adc
jmp
xor
ficompl
lahf
jbe
jecxz
add
xchg
xor
or
mov
movsl
adc
lock
scas
cwtl
xor
jmp
cmp
fdivs
adc
or
push
pop
push
test
inc
outsb
lds
popf
mov
rorl
xor
bound
and
ret
outsl
jg
add
pusha
outsb
cmc
je
mov
sti
dec
cmp
pop
sbb
stos
pop
pushf
jg
test
into
dec
cmp
mov
mov
push
mov
xor
push
into
mov
sub
inc
dec
movnti
cmp
mov
jmp
scas
hlt
cli
sbb
repnz
out
mov
mov
lcall
push
pop
ffreep
push
pop
or
stos
pop
sbb
iret
add
frstor
xor
xchg
or
pusha
fwait
mov
mov
outsb
int
out
scas
cli
xor
repz
and
mov
adc
cltd
sahf
ss
pop
adc
sub
and
xor
sbb
cs
adcl
in
mov
out
bound
test
adc
cs
mov
mov
add
scas
mov
cld
loopne
stos
ret
jb
sub
pop
and
inc
sbb
imul
es
fcomps
sti
pop
aas
icebp
push
lea
xchg
xchg
xchg
aad
mov
int3
pop
xor
sbb
test
or
orb
iret
add
mov
xor
stos
lret
and
popf
lahf
insl
inc
push
sbb
bound
mov
pop
cli
mov
loop
ret
int
mov
push
push
cs
sub
and
mov
lds
inc
enter
cmp
jbe
adc
and
add
mov
push
flds
int
push
test
inc
mov
dec
push
inc
mov
adc
and
call
or
mov
xchg
out
leave
add
faddl
dec
mov
shr
xchg
dec
rcll
nop
rcll
cli
popf
je
mov
sub
push
jge
into
and
mov
clc
orl
lock
addr16
push
inc
scas
clc
push
popl
cmp
push
in
fs
into
dec
push
jb
cmp
js
or
or
fmull
pop
pop
jmp
cmp
add
cmp
dec
mov
jg
xchg
hlt
and
decb
fldl
push
push
mov
js
leave
and
pop
and
and
lret
sbb
lock
cmp
and
nop
xchg
and
jp
and
in
add
lea
and
imul
adc
add
push
sub
jo
ret
arpl
dec
xchg
pop
shrb
hlt
test
lods
push
mov
inc
popf
mov
adc
pop
cmp
mov
or
pop
pop
insb
pop
add
mov
pop
test
stos
mov
mov
mov
out
or
lcall
test
clc
pop
leave
mov
ret
movsl
xchg
fs
popf
mov
enter
push
lret
pusha
nop
xlat
mov
xchg
sub
add
or
xchg
cld
mov
dec
fcoms
jbe
sub
dec
in
jmp
in
insl
adc
cli
push
aad
add
sahf
mov
popa
inc
xchg
mov
sub
xchg
push
pushf
jl
gs
mov
scas
push
dec
sahf
mov
ds
pop
icebp
mov
je
sbb
decb
ss
sbb
mov
adc
enter
cli
or
mov
test
jge
mov
or
xor
cltd
mov
push
push
or
sarb
arpl
daa
jge
into
subb
shll
sub
inc
adc
fdivl
pop
test
add
popf
sbb
call
lret
dec
adc
pop
mov
gs
cmp
icebp
scas
or
ficoml
enter
adc
lahf
pushf
loope
push
movsb
iret
jge
push
pop
enter
dec
dec
pop
xchg
imul
hlt
sub
test
call
jge
into
inc
call
jb
jl
js
dec
push
mov
lds
mov
cmp
push
sub
stos
mov
inc
int
pushf
and
cli
lea
and
test
xor
cmp
inc
fstps
fldenv
jne
cmp
loope
sbb
and
pop
push
jmp
and
inc
enterw
cmp
sub
cmpsl
and
sbb
loope
into
push
test
test
add
mov
cmp
mov
es
mov
je
movsl
xor
jb
lods
inc
push
fstpl
dec
push
mov
test
pop
scas
pop
gs
cmp
imul
dec
lret
cwtl
nop
push
mov
and
test
mov
xor
enter
mov
xchg
pusha
push
xchg
push
mov
or
cmp
mov
mov
in
les
test
add
popf
mov
mov
xchg
push
mov
enter
insb
pushf
notl
push
sbb
dec
pop
mov
adc
push
int3
icebp
mov
mov
fldenv
enter
and
mov
jl
pop
sub
leave
outsl
xchg
push
pushf
pop
pop
gs
js
mov
pop
or
ret
cmp
and
aas
rolb
movsl
cmp
ds
enter
mov
xor
nop
and
mov
outsl
xchg
add
test
inc
orl
cmp
lock
mov
cmp
test
ja
insb
push
mov
les
push
jl
std
rclb
and
jl
sub
outsl
adc
fsubl
cltd
test
add
popf
sbb
sti
mov
lret
inc
adc
icebp
scas
mov
gs
popf
mov
inc
inc
frstor
dec
push
jle
jp
lret
js
leave
push
pop
mov
movsb
push
jge
push
sbb
negl
jmp
lret
xchg
inc
cli
cmpsl
hlt
cmc
and
scas
fs
call
jb
jl
js
dec
mov
add
call
or
xchg
fcom
div
mov
hlt
mov
gs
and
or
enter
je
icebp
mov
addl
push
and
push
fs
scas
test
pop
addr16
ret
or
push
dec
insb
loop
jl
add
dec
stos
mov
mov
test
aaa
dec
ljmp
lods
dec
iret
mov
mov
sahf
cmp
jns
xorl
out
clc
dec
dec
mov
test
jge
mov
outsb
lea
adc
cld
lret
adc
dec
lock
cmp
pop
mov
adc
mov
lret
add
sbb
mov
xchg
lock
loope
ret
mov
jmp
fmul
shlb
xchg
or
cmp
or
xor
xchg
xchg
pop
jae
jbe
xor
aad
xchg
xor
xor
sub
mov
lods
dec
or
das
scas
adc
push
in
jmp
pop
push
xchg
or
inc
pop
mov
inc
dec
mov
mov
pusha
xchg
mov
cltd
cmp
je
jno
pop
sub
or
mov
xchg
test
lods
ficomps
cltd
adc
inc
inc
xor
ret
dec
adc
aad
bound
incb
test
mov
sbb
cli
adc
out
push
jmp
fs
sub
insb
das
fcmovne
fsubl
pop
repnz
aas
mov
mov
xchg
ss
or
mov
sarl
push
pop
adc
mov
aaa
mov
jg
fisubs
pop
and
or
pop
les
xchg
adc
fstl
dec
cmp
xchg
pop
inc
icebp
sarb
mov
pop
out
jae
fadd
jmp
mov
mov
dec
mov
cmp
jbe
test
in
and
sahf
jg
pusha
popa
and
cmp
sub
cld
and
popa
or
fisubrs
mov
lods
xchg
in
add
xchg
push
push
xchg
outsl
xchg
rdtsc
stos
pop
lods
mov
repnz
loope
sub
mov
lods
or
push
icebp
push
dec
fidivs
or
mov
mov
dec
pop
sub
adc
jp
imul
sub
push
dec
cmp
test
jmp
daa
bound
stos
stos
in
mov
rol
je
inc
cld
mov
inc
clc
adc
or
jne
int
pop
enter
xchg
sub
pop
stos
pop
mov
pusha
clc
lcall
in
jb
mov
dec
sbb
mov
dec
fcmove
mov
sub
jg
push
xor
pushf
fdivrs
push
arpl
mov
inc
adc
cmpl
in
or
mov
ljmp
push
leave
mov
arpl
xchg
arpl
mov
dec
push
mov
stc
mov
imul
xor
prefetch
in
push
xchg
hlt
jp
cmpsb
aam
pusha
popf
call
lcall
sarl
loope
movsb
mov
xchg
lret
aaa
inc
arpl
inc
aam
fadds
adc
cmp
push
pop
xor
filds
in
and
add
pusha
sub
inc
out
imul
loopne
mov
cmp
stos
cmpsl
lahf
cwtl
fisubl
fistpl
xor
push
aas
or
fdivrl
mov
fisubl
fsubs
loope
mov
cs
push
jo
imul
clc
jnp
fstps
pusha
ror
mov
fsubr
fiaddl
lods
aaa
xor
shr
inc
fucomip
fiaddl
jl
inc
fisubl
cltd
jge
jge
or
pop
xor
cmp
jne
mov
xchg
inc
and
fmuls
or
cmp
xchg
inc
dec
push
inc
mov
jge
nop
add
cmp
xchg
cmpsl
pop
aad
shrb
adc
movsl
pusha
shlb
adcb
xchg
and
imul
jno
fistl
jne
cwtl
cmp
out
cmp
testb
daa
mov
out
pop
inc
ja
jmp
sub
in
mov
sbbb
lahf
mov
in
loop
pop
in
and
and
sbb
mov
outsb
and
adc
cli
jl,pt
pop
movsb
jp
xor
or
rorb
and
dec
add
pushf
sbb
daa
lds
dec
mov
movsb
push
jge
push
movsb
enter
pop
dec
int
iret
nop
stos
xchg
psubd
hlt
push
iret
test
pop
subb
into
jns
fs
leave
aad
mov
outsl
push
jmp
xchg
call
or
icebp
cmp
jno
add
add
popf
int
push
lret
mov
or
adc
mov
mov
pushf
mov
int3
push
inc
mov
adc
cmpsl
dec
les
bound
cld
jge
ror
inc
inc
in
fsub
movsl
movsl
adc
es
popf
adc
enter
stos
lret
push
nop
shlb
mov
test
inc
enter
mov
and
shll
mov
sbbb
push
loope
loope
pop
mov
xlat
or
mov
and
movsl
adc
add
popf
test
stc
test
pop
xchg
jno
jp
icebp
sub
out
sbb
aam
gs
enter
xchg
fstpl
xchg
dec
out
adc
cmp
pushf
cmp
jge
into
sbb
jmp
cmp
js
or
loop
pop
mov
mov
call
lret
cmp
and
adc
or
loope
mov
scas
outsb
or
mov
rorb
adc
sbb
cmp
in
inc
mov
sbb
std
test
jo
std
mov
test
push
and
cli
xor
and
pop
add
sbb
addr16
les
dec
cmp
cmp
mov
pop
add
into
iret
test
in
or
inc
adc
mov
movsl
and
bound
inc
mov
mov
or
outsb
gs
mov
push
sbb
lods
inc
or
add
daa
adc
and
divl
gs
sti
mov
fwait
scas
pop
or
pop
ror
cmpsl
aam
test
insl
pushf
mov
lds
les
test
cli
mov
arpl
mov
lds
or
adc
enter
mov
mov
fmull
pop
mov
movsb
or
lds
jmp
rclb
push
cmp
lds
sahf
jne
push
fs
adc
outsl
rol
jb
cmp
js
or
loop
pop
and
pop
lret
add
cmp
std
pop
cmp
inc
data16
sarl
push
aaa
push
mov
inc
or
inc
scas
data16
mov
xchg
jge
lods
leave
cltd
inc
negb
and
aaa
and
stc
inc
cmp
lret
popa
nop
adc
sarb
and
fldl
xor
xor
mov
mov
dec
popf
rcl
and
mov
push
dec
push
dec
js
pop
adc
rolb
push
je
sbb
xchg
js
daa
in
jge
into
adc
arpl
mov
cmp
pop
jae
aaa
sub
outsb
bound
fimull
fwait
lret
push
adc
sbb
dec
je
xchg
xlat
daa
or
ljmp
fdivr
clc
in
pusha
inc
xchg
fdivrl
das
incb
popf
push
outsb
test
cld
mov
imul
and
pop
test
mov
mov
push
jns
andl
dec
lcall
jno
dec
or
jge
mov
dec
xchg
fucomp
loop
sbb
adc
cli
out
lea
popf
rorb
xchg
lock
pop
leave
sub
gs
mov
sbb
call
mov
adc
push
js
dec
in
mov
int
dec
into
mov
push
jb
cmp
js
or
loop
in
ds
test
add
popf
sub
call
nop
dec
and
jp
and
lret
add
andl
jb
jl
js
dec
imul
dec
sahf
cmp
inc
mov
xor
jae
aam
cs
push
or
pop
in
jge
into
pop
call
jb
mov
out
fcompl
sub
test
add
mov
mov
lods
inc
mov
out
gs
fisttpll
stc
les
fstpl
sbb
cld
sbb
aas
leave
fwait
inc
cmpsb
fdivl
movsl
data16
lock
popf
shrl
enter
cwtl
lret
aad
push
mov
ret
or
lret
mov
iret
pop
rcl
cmpsl
add
leave
and
into
push
pushf
push
cld
into
lods
test
pop
mov
sub
in
mov
jg
movsl
aaa
pop
mov
scas
add
popf
jle
je
imul
arpl
push
adc
gs
inc
mov
dec
scas
adc
push
in
ror
mov
pop
test
enter
mov
int3
daa
xchg
sub
or
repnz
fucom
lcall
into
xor
ss
push
push
mov
iret
sub
mov
push
jle
out
dec
lcall
insl
dec
xor
mov
or
movsb
or
pop
xlat
sub
fstpl
fstp
cs
stc
push
xchg
dec
push
mov
cmpsb
popa
push
sti
jns
push
push
xor
hlt
xchg
gs
dec
out
push
adc
cmpsl
jnp
mov
jecxz
das
mov
pop
jge
mov
repz
ret
ds
enter
sub
iret
mov
inc
pop
fmuls
cs
ret
mov
outsl
inc
outsl
les
cmp
bound
inc
or
sub
jae
add
js
push
push
mov
movnti
push
mov
arpl
sub
test
jno
jns
and
mov
outsl
jl
sub
rorb
jnp
and
stc
ror
dec
sub
add
pop
dec
mov
lods
pop
addr16
mov
mov
lock
lahf
push
push
sbb
sbb
jl
imul
dec
subl
push
mov
into
repnz
adcb
mov
movsb
xchg
cmp
out
mov
in
call
nop
orl
jmp
adc
push
popf
into
mov
or
insl
clc
rcl
pop
pop
pop
and
icebp
xchg
mov
push
push
adc
cmp
call
jae
cld
dec
aas
std
outsb
dec
add
mov
mov
out
ja
sub
int
jne
in
loope
dec
xchg
cld
xchg
popf
into
call
sbb
xor
inc
jno
mov
aam
dec
fisubs
leave
xchg
mov
xsha1
cmpsb
mov
data16
pop
jo
pop
dec
xor
cmp
mov
in
out
nop
inc
push
popa
mov
mov
ficompl
std
cmc
mov
mov
mov
jge
and
aad
mov
mov
pop
aas
inc
lret
in
dec
xor
mov
dec
xchg
sbb
int
sub
mov
shll
sahf
and
fadd
jle
leave
dec
jl
sub
add
or
js
es
mov
lods
iret
out
xor
ja
cmpl
sahf
fmulp
and
aam
inc
dec
cmp
sub
psubsw
mov
mov
or
data16
shrb
mov
mov
sub
orb
jg
mov
enter
mov
xchg
lret
push
pop
leave
test
clc
pop
loopne
jmp
cmp
push
xchg
or
mov
mov
aaa
aad
add
adc
add
daa
std
test
mov
add
dec
pop
ret
xchg
mov
js
pop
jg
in
xor
pop
cmpsb
add
shl
jl
mov
mov
pop
pop
call
xor
mov
add
and
inc
mov
push
jle
mov
js
dec
pop
mov
and
cmp
outsb
movsb
add
rorl
mov
mov
dec
add
leave
inc
test
and
sub
fnsave
or
cmp
pmulhw
data16
outsl
jne
xor
adc
jecxz
xchg
pop
loopne
push
std
xchg
jge
add
int3
add
jno
xor
test
mov
jmp
shl
xchg
ss
std
xchg
sahf
pusha
clc
sbb
push
pop
in
sbb
lods
pop
dec
xor
cmpsb
jno
mov
lret
jle
loope
mov
dec
shll
sbb
in
jbe
ljmp
xchg
pminub
pop
cmc
scas
std
add
cwtl
outsl
xor
pop
ds
and
test
jo
mov
push
pop
and
sbb
aas
cmp
xchg
add
js
rcl
lcall
xchg
sbb
mov
std
int3
out
fcmovnbe
pop
sbb
dec
sub
push
jo
cmpsl
imul
mov
aam
mov
mov
std
in
aad
jge
pop
fisubrs
inc
lret
shll
xchg
push
jecxz
push
pushf
push
jge
pop
leave
std
xchg
pminsw
hlt
pop
pop
jmp
std
push
pop
pop
adc
dec
lahf
xchg
sete
and
pop
out
mov
std
int3
and
add
or
pusha
lret
rcll
push
pop
out
lock
mov
mov
cmp
jae
test
cmpsl
inc
or
add
sbb
add
fbstp
add
add
sub
xchg
sub
mov
fistpll
cmp
jno
lods
mov
mov
adc
cmpb
xchg
inc
xor
negb
xchg
int
fbstp
cwtl
outsb
sbb
add
jns
jg
push
stc
dec
add
loope
lcall
jge
jb
cli
leave
mov
sbb
mov
cwtl
std
scas
mov
out
pop
mov
enter
lods
fistpll
out
imul
adc
cld
mov
xor
xor
pop
mov
mov
and
push
sub
xchg
jge
pop
jl
adc
jo
dec
jl
insl
sbb
fimuls
and
mov
xchg
sar
jecxz
jne
ds
pop
bound
and
orl
outsb
inc
sub
sub
shll
ds
sbb
sub
cmp
push
mov
movb
inc
push
pop
sbb
inc
sbb
jae
popf
push
jecxz
aad
push
sub
out
mov
lahf
mov
pop
mov
icebp
out
inc
xchg
test
and
in
mov
cmpsb
in
leave
push
jb
lds
push
std
popa
popf
jl
mov
icebp
fldpi
mov
mov
sub
mov
ja
inc
es
sub
add
cmp
add
and
int3
push
lods
negl
shrl
push
ja
hlt
dec
add
dec
mov
test
adc
cmp
mov
cmp
dec
lock
sbb
cld
dec
loope
cwtl
sub
mov
xchg
fcoms
out
sub
sbbb
sub
cmp
ret
jl
add
add
cmp
adc
push
ds
mov
fsubrl
movsl
repnz
xchg
cmp
les
enter
pop
lret
daa
add
or
cmpsl
mov
cmp
je
jbe
cmc
or
les
das
stos
fldl
sub
into
sub
ret
je
mov
cld
sbb
in
pop
mov
add
and
cltd
les
bnd
gs
in
jae
mov
xlat
fisttpll
mov
and
pop
push
subl
push
mov
xchg
inc
mov
mov
in
fs
mov
mov
cmp
insb
mov
pop
ds
adc
mov
lock
mov
push
jo
adc
lret
lock
mov
jo
shrb
sub
or
out
stos
or
or
dec
loop
add
and
leave
jne
mov
or
cmpsb
push
jle
cmpsb
outsl
into
sbb
shl
jne
aad
push
inc
jp
inc
mov
rcl
jnp
xchg
shrl
mov
jae
jae
mov
rorl
xchg
je
dec
js
data16
jmp
inc
and
jno
iret
cli
jg
mov
pop
stos
cmpsl
mov
leave
daa
call
pmulhw
push
pop
arpl
xadd
rol
mov
jo
mov
lock
push
lret
adc
dec
jo
mov
lock
cld
sub
imul
loope
int3
adc
das
rorb
lock
dec
xchg
mov
cmp
inc
sub
fs
cmp
iret
sub
data16
sbb
push
push
mov
out
push
cli
mov
in
and
jge
or
cmp
or
jl
pusha
push
add
leave
pushf
ror
dec
sar
fadds
fldenv
aaa
test
imul
or
mov
int
insl
test
nop
jmp
mov
pop
call
lods
xchg
sub
mov
inc
pop
outsb
jmp
ret
dec
mov
mov
sub
pop
and
cmp
or
outsl
pop
lock
pop
outsl
cmp
push
call
mov
cwtl
sub
sbb
enter
cwtl
out
stos
enter
and
aas
and
lods
out
mov
push
or
call
repz
pop
sub
dec
pop
pop
or
cmp
in
cltd
push
inc
addps
mov
notb
pop
dec
push
xchg
lcall
xlat
idivb
adc
ds
mov
out
mov
mov
pop
xor
mov
ss
js
and
roll
sti
jnp
and
jnp
adc
adcl
cmp
nop
mov
pop
push
into
sti
cmp
or
sti
lcall
cmp
arpl
cmp
shll
sti
aad
inc
jnp
and
sti
repz
pusha
jnp
cmp
xchg
push
xor
xor
jae
jl
inc
pop
mov
push
jo
inc
xor
cs
pusha
insl
enter
cwtl
lods
mov
sub
and
enter
cwtl
push
pusha
es
loopne
dec
movsl
pusha
test
andl
clc
ret
dec
popa
mov
pop
dec
pop
loopne
cmp
pusha
jge
cmp
mov
cmp
and
enter
cwtl
js
xlat
enter
cmp
loopne
dec
mov
scas
cwtl
dec
mov
or
dec
or
jmp
or
dec
push
or
test
loopne
cwtl
mov
add
enter
cwtl
add
loop
loop
add
mov
pusha
mov
dec
and
dec
sahf
sbb
sbb
sub
pop
outsb
xor
pop
lret
sbb
sarb
bound
sbb
adcb
gs
jecxz
mov
cmp
and
adc
scas
jmp
add
and
xchg
xor
dec
out
sbb
pop
inc
pop
es
lods
test
loop
add
adc
pop
fistpll
out
lahf
inc
ja
sbb
xchg
lahf
ja
pushf
cmpsl
inc
pop
leave
aaa
out
pop
sub
lret
cmpsl
dec
pushf
jl
out
stos
inc
es
mov
pushf
mov
pop
and
xchg
imul
scas
mov
lahf
jg
inc
sahf
mov
scas
jl
push
inc
xchg
insb
pop
cmp
flds
stos
jg
inc
xchg
das
fs
xor
das
pop
inc
push
jg
pop
shlb
out
sbb
test
insl
stc
jge
dec
movsb
pop
inc
pop
mov
repz
jbe
data16
xchg
xor
mov
xchg
xchg
pop
mov
xor
hlt
cld
nop
push
fldl
inc
mov
add
nop
xor
mov
xor
stc
nop
notb
and
xchg
xor
nop
cmp
or
sbb
jae
dec
push
notb
int
jl
pushf
adc
adc
sbb
xor
nop
adc
adc
push
push
adcb
movsb
lock
mov
push
aad
lret
mov
pop
xchg
nop
insl
pushf
push
rcrb
xchg
xor
xor
jne
xchg
xchg
push
rcll
test
shlb
or
nop
push
or
adc
adc
xor
mov
adc
push
hlt
xor
lock
xor
push
ret
push
adcl
xchg
jle
push
push
lods
adc
push
jl
inc
repz
jnp
bound
adc
xor
mov
sub
cwtl
adc
and
inc
xchg
inc
and
adc
fs
mov
in
mov
fs
in
loope
test
push
roll
push
jno
stos
in
push
movsb
push
pop
in
add
nop
jne
lea
hlt
loop
stos
int
fstpl
sub
sarb
int
pop
pop
sub
inc
jle
fwait
std
xchg
lea
adc
out
sbb
in
pop
testl
fisttps
sub
dec
inc
inc
pop
mov
in
xchg
testl
fbstp
cmpsl
mov
pop
inc
push
sbb
xchg
repnz
ljmp
imul
shr
call
roll
fistl
rclb
adc
dec
cmp
xorl
nop
pop
rcrb
xor
xchg
push
les
mov
je
fists
shll
jle
adc
xor
mov
sbb
nop
adc
out
cli
pop
and
jns
xchg
in
test
loop
or
movsl
inc
cmpsl
out
pop
cmpsb
cmpsb
test
add
mov
mov
mov
insb
sbb
or
mov
mov
sbb
inc
jge
mov
inc
nop
out
shl
shl
xchg
dec
sbb
scas
adc
scas
adc
jo
push
ljmp
leave
dec
js
and
sbbl
sarl
orl
mov
je
mov
test
cwtl
sbb
dec
js
pop
cmp
loopne
cwtl
aad
imul
mov
sti
xchg
icebp
data16
nop
popa
sbb
aam
nop
add
inc
push
ja
push
cmpsb
adc
push
jne
test
lret
mov
cld
jge
cwtl
mov
rorb
xor
loop
ret
arpl
and
ret
inc
add
dec
test
iret
push
mov
push
imul
fisubrs
insl
sub
xchg
lret
mov
call
xor
jg
inc
stos
das
xchg
or
mov
hlt
addl
sbb
mov
mov
add
lret
clc
out
inc
mov
push
into
xchg
sbb
rorb
pop
sbb
inc
and
sbb
insl
das
mov
iret
jg
pop
add
push
sahf
cli
loopne
and
sahf
hlt
inc
movsb
dec
js
fadds
in
scas
adc
lds
and
sub
icebp
lret
mov
nop
mul
inc
sub
inc
jge
mov
aas
or
pusha
dec
xchg
mov
gs
call
outsl
mov
lret
lahf
mov
dec
mov
or
mov
xchg
out
add
popf
das
int3
cmp
or
sti
das
stos
inc
pop
jg
pop
fldcw
dec
xchg
filds
pop
imull
in
xchg
scas
inc
xor
add
jae
mov
xchg
rolb
fistps
xchg
incb
scas
jg
inc
lods
das
fadd
or
sbb
lret
das
mov
pop
jmp
fists
pop
scas
jbe
cmpsb
jg
inc
movsl
mov
out
or
in
mov
mov
fucomip
pop
dec
pop
test
cmpsl
daa
lahf
inc
testl
loopne
pop
jecxz
add
add
adc
xor
xor
xchg
push
rcll
dec
push
add
mov
repz
mov
push
dec
adc
push
xchg
push
xor
repz
lea
fistl
ret
repz
push
inc
xchg
fists
adc
repz
push
mov
mov
repz
mov
push
js
cmpsl
push
push
xchg
jbe
ds
adc
stos
xchg
jae
cli
xor
repz
repz
xor
push
jo
scas
push
aaa
adc
mov
repz
xchg
mov
mov
imul
ljmp
push
push
xchg
xor
repz
adc
mov
xor
repz
repz
in
push
gs
mov
mov
repz
pop
xor
fsts
adc
push
push
mov
repz
sahf
mov
push
sbb
xchg
pop
xor
sub
shlb
mov
xchg
rep
repz
xor
push
or
shll
xor
iret
push
xchg
adc
push
inc
mov
repz
repz
lcall
mov
jno
pause
xchg
sub
adc
xchg
xor
repz
push
insb
xchg
lret
push
and
lcall
xor
xchg
mov
push
push
mov
rep
repz
sbb
fs
push
fistl
jno
fnstenv
xlat
xchg
pop
push
xchg
sahf
repz
push
sbb
fistl
adc
repz
xor
xchg
rclb
adc
push
push
mov
repz
push
adc
mov
xor
add
leave
mov
adc
cmpsl
xchg
rcpps
xor
xor
push
or
stos
push
inc
adc
mov
repz
inc
xor
rclb
pop
push
jle
xchg
int
test
mov
sti
xchg
bound
jp
adc
stc
mov
adc
mov
pop
pop
out
enter
or
jmp
pushf
push
jg
shll
imul
mov
std
mov
cld
loope
cltd
dec
inc
stos
pop
enter
imul
jmp
inc
das
sbb
xor
fs
pause
add
xchg
push
push
ret
repz
xor
sbb
adc
push
inc
mov
repz
repz
mov
push
aad
fwait
dec
or
cmp
inc
mov
ja
notl
sub
imul
sbb
mov
dec
push
mov
sub
lds
mov
rcll
cmp
xchg
push
mov
mov
ret
and
or
daa
les
lret
cld
jle
push
fldl
pop
pop
adc
iret
jmp
dec
fs
sbb
or
cmp
lret
and
enter
inc
dec
mov
in
movsb
lock
sub
shl
clc
mov
lret
fstl
icebp
fsubrl
jge
cmp
xchg
sbb
push
test
sub
repz
or
jmp
or
add
add
sbb
jo
dec
std
ja
pop
outsb
test
loope
popa
and
mov
mov
add
cld
mov
dec
lret
xchg
cli
sbb
aad
std
sahf
add
jl
jnp
repz
je
lock
dec
cs
sub
sbb
cmpsl
lds
testb
push
je
loop
jmp
aam
and
hlt
xor
test
fs
inc
into
push
call
jb
jl
js
inc
imul
adc
icebp
lcall
and
mov
fldl
inc
mov
or
movsb
jp
and
movl
decb
jno
sub
shr
mov
adc
cmp
or
pop
mov
mov
sbb
popf
jno
add
shll
imul
fnstcw
cmp
dec
aam
dec
aaa
adc
clc
mov
aad
dec
mov
test
stc
clc
add
lahf
xor
cmc
inc
add
fnsave
cld
and
push
mov
cmpsb
leave
inc
sbb
dec
adc
dec
mov
mov
test
pop
mov
cwtl
insl
icebp
inc
call
shrl
out
lcall
or
loopew
testl
pop
rclb
fidivrl
dec
push
inc
out
push
out
cli
push
dec
inc
dec
sub
aaa
lods
nop
push
xor
mov
hlt
mov
ja
sbb
pushf
sub
inc
cwtl
andb
ret
rol
loopne
push
addr16
inc
cmp
push
stc
add
popa
dec
pop
shr
push
sub
push
inc
pusha
push
andb
pop
stos
enter
sbb
lret
popf
or
cli
in
lds
sub
insb
add
mov
xor
pushf
inc
ja
cmp
mov
pop
cmp
pop
inc
sub
push
push
dec
mov
mov
decb
mov
mov
jg
ret
shll
andb
jmp
rcll
mov
lds
out
jmp
inc
jmp
adc
jmp
or
xchg
test
push
sbb
mov
cmp
pusha
pusha
sahf
arpl
mov
hlt
add
jne
callw
mov
out
jmp
fcomps
in
jmp
mov
sbb
inc
insl
inc
mov
mov
adc
lds
inc
jno
int3
and
dec
mov
jecxz
xchg
ja
xlat
into
adc
mov
movsb
xchg
gs
cwtl
pop
icebp
daa
ror
mov
outsb
mov
enter
int3
or
enter
adc
sar
or
mov
push
jle
call
popf
out
ljmp
jmp
or
lock
testl
cwtl
xchg
in
jmp
mov
sbb
lods
cwtl
out
jle
mov
adc
adc
fdecstp
icebp
cmp
ret
loopne
adc
mov
mov
dec
cmp
ljmp
jl
cmpl
shr
clc
mov
cmp
stos
mov
stos
fdivl
or
mov
stc
mov
repz
dec
gs
dec
inc
cmp
fisttps
loopne
and
fs
xor
inc
push
push
sub
test
rcll
sub
shll
addr16
test
sti
mov
pop
jno
shrl
mov
dec
frstor
fs
cmp
dec
xchg
xchg
or
mov
adc
mov
aaa
aas
mov
add
push
nop
jo
jmp
add
or
xor
xchg
sub
int3
push
and
push
fidivrl
dec
adc
cs
xor
sub
repnz
pop
test
fwait
mov
inc
or
adc
mov
jg
xchg
mov
out
push
fcoml
adc
ja
lods
xor
cmp
xchg
xor
loop
adc
xchg
jo
lods
sub
out
inc
cmp
mov
ljmp
mov
pusha
pop
scas
lea
xchg
repz
sbb
dec
jg
xchg
dec
hlt
adc
push
add
xor
xchg
sti
mov
in
jno
hlt
int3
mov
gs
mov
xchg
scas
inc
in
xchg
cld
in
mov
into
and
dec
lods
out
fisttpll
push
pop
push
mov
out
sub
inc
or
mov
and
mov
inc
fisubs
bnd
dec
xchg
mov
ss
rcl
rcll
test
std
adc
imul
out
les
push
and
adc
lahf
fstl
or
das
jl
push
xlat
jp
shll
in
dec
mov
fstp
mov
aad
pusha
repnz
or
pop
adc
popa
dec
cltd
clc
sbb
xlat
xor
lds
shlb
adc
xor
in
nop
aad
mov
std
test
pop
mov
mov
fildll
cld
sub
clc
in
sbb
xchg
push
shlb
jle
mov
cmp
lcall
mov
mov
dec
dec
inc
jecxz
roll
repz
jo
add
jg
mov
insb
push
js
sub
insb
or
pop
mov
fmulp
push
jne
test
xchg
xor
es
or
add
clc
test
push
push
sub
lods
sbb
mov
mov
int3
pop
pushf
lock
jne
xchg
push
out
pop
push
outsb
je
mov
gs
or
int3
inc
insb
xchg
mov
cld
lcall
insb
sahf
rcr
xor
push
inc
icebp
clc
ficomps
mov
jne
loop
repz
and
lock
mov
cmc
adc
je
ret
fadd
pop
pop
mov
jo
fwait
jecxz
and
shr
popf
jae
add
push
xchg
pusha
cmpsb
ds
out
mov
jg
jns
add
xlat
enter
add
jno
mov
jne
pop
movsl
lods
or
push
mov
dec
mov
dec
xor
scas
push
xchg
fcomi
dec
add
adc
leave
hlt
pop
mov
mov
out
jp
add
sysenter
jno
mov
mov
gs
xchg
jp
adc
sub
cld
daa
mov
cwtl
movsb
in
loope
mov
push
insl
andb
cmp
cmp
addr16
xlat
leave
push
xor
mov
pop
cwtl
or
lahf
xor
adc
inc
sub
adc
and
xchg
lock
mov
sbb
loop
jo
cmpsb
movsb
sbbb
xchg
push
inc
outsb
mov
pop
outsb
adc
or
pushf
or
and
mov
push
fimull
mov
add
mov
ds
add
daa
cmp
fistpl
das
into
adc
lahf
or
or
jbe
sbbb
lods
test
inc
lock
fdivr
adc
dec
es
xchg
ror
jle
in
inc
cmp
and
push
cmp
inc
mov
ljmp
mov
dec
jp
scas
mov
add
jl
and
lock
fcmovb
xor
dec
jecxz
fildll
push
mov
jb
in
sub
push
pop
xchg
fxch
les
cld
lock
loop
cmp
ja
fyl2x
lods
add
stc
cli
mov
pusha
push
bnd
mov
fs
int3
out
xchg
pusha
inc
stos
int
xchg
stc
inc
or
or
cwtl
sub
dec
push
call
inc
push
rcll
sbb
and
sub
ffreep
mov
or
fsubr
xchg
jnp
dec
sub
mov
cmp
sub
dec
repnz
and
dec
sub
jle
outsb
cmpsl
adc
dec
push
pop
xor
std
pop
sub
mov
mov
xor
mov
lds
mov
les
rcl
cld
loopne
jle
jecxz
xor
jne
push
add
ja
ja
adcb
scas
xchg
data16
inc
popa
scas
loope
dec
mov
add
cmpsb
lods
add
add
dec
cwtl
dec
cmp
and
repz
enter
jp
xorl
or
sbb
dec
arpl
jl
aam
pop
sti
add
mov
push
js
int3
push
dec
dec
push
mov
inc
gs
inc
pusha
cmc
sbb
imul
and
ja
fcomps
add
or
int
xor
dec
subl
mov
out
es
pop
mov
loop
cmpsl
push
fmull
fstps
xor
js
cmpsb
inc
xchg
lock
mov
testl
mov
lods
loopne
leave
out
jne
mov
inc
mov
out
out
ret
cmpsl
fwait
xchg
jp
je
test
lahf
mov
push
sbb
fistpl
mov
movb
push
cld
clc
aad
jg
and
xchg
or
fstpl
dec
xor
mov
lcall
jne
mov
fadd
xor
mov
cwtl
aad
cltd
sub
mov
cwtl
add
or
mov
push
dec
mov
mov
movsb
adc
in
mov
imul
dec
sbb
lahf
mul
lods
addb
pop
dec
loop
enter
cli
cmpxchg
int3
adc
push
stc
nop
pusha
sbb
pop
xchg
scas
shl
pop
mov
les
jle
adc
add
scas
and
fistps
push
mov
push
scas
mov
mov
jecxz
movsl
mov
in
sub
out
hlt
and
push
mov
clc
pop
mov
pop
sub
out
inc
icebp
pop
mov
data16
xor
insb
insb
jmp
jne
outsb
xor
stos
sbbb
mov
es
sub
cmp
jl
daa
cmp
hlt
stos
mov
repz
fisubrs
lock
mov
cltd
arpl
out
in
lds
and
ret
cmp
mov
insl
out
mov
nop
sbb
cmp
dec
sbb
in
lea
nop
aam
pusha
inc
mov
enter
mov
lock
mov
loope
mov
fsubrl
imul
incl
mov
sbb
cmpsl
xchg
adcb
sbb
pop
rcr
movsb
icebp
dec
push
ljmp
pop
enter
cmp
addl
xchg
sti
loopne
gs
cmp
mov
bound
ret
into
in
cmp
ret
mov
repnz
test
dec
or
rcll
shr
inc
stos
cwtl
mov
add
xchg
dec
push
nop
and
into
inc
sti
rclb
test
sub
cmp
mov
fsubrl
incl
cmp
push
xor
ret
fsubs
and
xor
fistl
ss
es
std
clc
xor
out
sub
or
jecxz
ljmp
arpl
nop
cs
push
and
inc
shll
push
aad
sbb
sarl
xor
pop
add
or
rep
fsubrl
and
pop
sub
sub
sarb
sbb
add
leave
lods
mov
jae
int
jle
gs
clc
vmovups
rolb
ret
shll
int3
mov
push
lock
xor
xchg
xor
mov
lods
aad
pop
ds
fwait
jae
add
sbb
icebp
shlb
out
adc
sub
in
das
test
dec
cld
inc
rcll
push
jmp
mov
enter
and
es
js
or
mov
sub
add
cmpsb
popa
iret
push
sbb
fsubrs
or
cmp
data16
mov
lods
xlat
sti
ror
jge
test
aam
xor
or
test
outsb
int
nop
nop
and
negl
scas
push
inc
into
push
xchg
repz
xchg
rcll
sub
lea
cmpsl
test
cltd
or
stos
leave
or
dec
push
pushf
push
pop
inc
aaa
sub
out
mov
lods
push
jnp
inc
pop
lock
dec
cmp
fnstsw
sub
outsl
ljmp
pusha
out
pop
jbe
cltd
mov
out
outsb
jge
fmul
addb
add
popa
inc
mov
xchg
bound
jnp
fldenv
jnp
sub
dec
sub
in
fstpt
les
rcrb
jl
lcall
xchg
xchg
add
rorl
out
and
inc
add
ror
mov
xchg
out
pop
outsl
or
xchg
arpl
mov
mov
dec
push
mov
inc
push
aam
and
sbbb
pop
cwtl
sti
fdivrp
sbb
out
fs
xchg
jl
pop
push
xor
cmc
or
mov
cmp
add
dec
arpl
dec
cmpsb
pop
adcb
mov
dec
dec
int3
cmpsl
icebp
push
adc
pop
lods
rorl
jae
in
and
out
and
icebp
nop
pop
mov
clc
push
and
movsl
popf
rclb
test
stos
shr
lock
mov
dec
sub
jmp
cmp
xor
pop
push
push
mov
xor
mov
mov
dec
test
lret
mov
leave
incb
arpl
das
es
in
popa
sahf
mov
fsubrs
xchg
mov
adc
lret
mov
scas
sub
nop
push
push
fcmovnb
xchg
add
daa
sbb
push
mov
xor
int3
cmpsl
xchg
push
and
sahf
shlb
dec
or
pop
and
jno
or
aas
pop
outsb
outsb
add
or
jno
lods
pop
sbb
push
fld1
divb
mov
ret
loopne
xchg
mov
mov
xchg
pop
sbb
cwtl
xor
testl
mov
add
inc
xor
pop
mov
dec
and
add
dec
or
out
in
pusha
cmp
or
lods
sub
xor
cmpsl
jo
pop
mov
push
in
dec
movsb
inc
repz
rcll
call
jno
mov
add
mov
xor
pop
imul
fwait
mov
popl
cld
or
subb
xchg
std
imull
push
pop
in
adc
mov
mov
call
adc
iret
clc
das
adc
xchg
mov
inc
cmp
call
in
test
mov
pop
or
hlt
in
not
cmpb
adc
push
scas
aam
popa
adc
icebp
stos
mov
push
cmp
xchg
inc
push
scas
or
push
mov
std
pop
cmp
cltd
data16
mov
js
xchg
sub
xchg
jae
mov
decl
fs
sahf
aas
xor
loopne
push
outsl
cmp
or
daa
mov
aad
mov
lcall
xchg
das
aaa
popf
cmpsb
lcall
mov
push
ss
mov
dec
xor
mov
dec
lahf
add
in
xlat
lret
call
cmp
fists
adc
or
sub
out
adc
out
ja
pop
xor
mov
dec
push
into
repnz
aas
dec
mov
xor
mov
pop
bound
mov
or
lret
pop
dec
lea
mov
js
and
mov
xor
lea
lret
pusha
jl
iret
push
adc
rep
aam
ljmp
adc
sub
xchg
sub
sub
xor
jnp
inc
xchg
push
add
int
sub
cmp
inc
add
insb
cmp
fstps
in
lret
pop
sbb
test
imul
bound
xor
jo
aaa
jbe
mov
stos
mov
lcall
mov
sub
mov
push
jne
xor
clc
mov
push
inc
or
sarb
mov
jne
das
out
inc
outsl
orl
in
insb
fisubrl
push
cmp
pop
xlat
imul
out
mov
cmp
xchg
lahf
fcoms
mov
pop
sbb
cmp
jge
cmp
dec
sti
subl
clc
call
pop
mov
sub
inc
xchg
aam
clc
jbe
imul
cltd
andl
stos
ds
mov
pop
sub
sbb
pushf
ret
or
test
sub
xor
jno
xor
mov
addr16
lcall
icebp
rolb
mov
push
pop
jle
dec
lock
mov
xor
loopne
loop
pop
gs
adc
lahf
mov
pop
bound
adc
daa
fld1
mov
clc
and
dec
pop
test
or
jmp
insb
push
jg
xchg
test
repnz
adc
in
push
push
mov
aam
sbb
and
xor
imul
sub
jle
movsl
mov
xor
cmc
push
insl
sbb
das
ds
fs
movsl
ret
xchg
out
pushf
sti
mov
add
shrl
xor
mov
sar
mov
shll
sahf
mov
xor
jae
add
push
pop
add
xchg
rcrl
mov
dec
fisubs
pop
mov
enter
cmc
inc
dec
push
mov
nop
push
add
xchg
xlat
shrb
fmul
mov
mov
adc
into
adc
sub
inc
mov
loopne
insb
mov
into
in
sbb
js
or
mov
adc
xchg
mov
push
and
popf
cmpsb
mov
mov
out
or
cmp
sub
dec
mov
movsl
sahf
mov
shl
rcrb
inc
mov
lahf
push
scas
pop
pop
add
out
xchg
leave
sub
mov
jns
jo
ljmp
and
sub
mov
inc
adc
cltd
sar
test
sub
fistl
add
mov
inc
sub
xchg
adc
aas
push
jb
rorl
mov
dec
das
and
daa
shlb
pop
call
push
movsb
lods
les
lock
pop
outsb
mov
adc
imul
pop
mov
xor
mov
mov
mov
mov
adc
push
adc
lods
xchg
rol
adc
jmp
sub
adc
pop
clc
fdivrs
xor
mov
int
mov
mov
lock
repz
sub
mov
dec
add
insl
sbb
jg
into
in
cmp
xchg
mov
lahf
or
adc
div
fucom
loopne
mov
fcomps
xor
mov
addr16
inc
mov
xor
sbb
fsubrs
push
jnp
and
scas
inc
pop
outsl
mov
xor
movsb
out
in
arpl
loopne
and
clc
es
fs
or
int3
cltd
js
aad
sub
pop
or
jmp
out
std
movsl
lods
sub
es
je
xor
jns
or
sub
jno
or
sbb
dec
xchg
mov
test
dec
mov
cbtw
dec
xchg
cmpsl
into
out
push
icebp
cmp
sbb
cmpsb
aam
imul
repnz
sub
jb
inc
shr
xor
xchg
and
or
mov
pop
ja
hlt
call
dec
or
in
and
cmpsl
lret
insb
pop
dec
sub
mov
pusha
cmp
test
je
nop
push
ret
mov
xchg
mov
sbb
mov
xlat
mov
push
mov
and
fxsave
ja
frstpm(287
cmp
sbb
repnz
inc
sbb
add
rcrl
dec
mov
mov
cltd
addr16
fnsave
add
clc
cwtl
cmpsb
push
cwtl
pushf
pop
in
or
dec
jge
loop
aaa
jge
mov
xchg
out
je
add
arpl
outsl
fdivl
dec
dec
lods
sub
cmc
mov
pop
jg
movsb
sub
and
ror
pop
lock
cmp
mov
mov
in
inc
fdivrl
adc
repnz
popa
pop
mov
arpl
jae
sbb
addb
cmc
add
pop
int3
aam
xlat
add
jl
and
mov
je
fisubl
xchg
cld
jecxz
in
pop
pusha
pop
clc
cwtl
jl,pt
mov
jb
xor
pop
dec
inc
sub
push
je
fs
pop
sbb
into
or
mov
imull
inc
mov
fmuls
mov
stos
push
jbe
dec
jmp
and
or
mov
and
test
xor
mov
ja
inc
imul
rcrb
xorb
scas
scas
pop
pop
sbb
mov
les
daa
sbb
shll
cld
xchg
cmpsl
cmc
adc
pop
jge
push
insb
in
into
jmp
call
push
aam
sbb
pop
je
inc
mov
jle
pusha
jb
adc
test
cltd
sti
int
add
push
mov
mov
or
cwtl
mov
bound
pop
mov
out
mov
dec
pop
add
faddl
xor
xchg
cmc
roll
pop
outsl
xorl
pop
movsb
lods
leave
iret
add
push
or
call
sub
test
mov
sbb
jae
fnstsw
xchg
dec
sahf
mov
dec
inc
in
mov
sbb
stos
pusha
pushf
shll
lahf
push
stos
pop
idivl
je
pushf
inc
push
lods
ret
xor
les
cli
push
add
cmpsb
mov
iret
es
cmpsb
mov
jae
in
in
pop
pop
xor
xchg
sar
in
mov
pop
or
mov
adc
out
xchg
mov
pop
sub
cmp
es
movl
and
cmp
push
jb
ja
cmpsl
aad
jmp
sbb
jae
test
movsb
mov
pop
and
xor
inc
rolb
icebp
or
mov
mov
add
sti
mov
daa
push
ret
lcall
and
in
cltd
lods
aam
inc
push
xor
mov
clc
mov
das
mov
xor
push
xchg
stos
xchg
push
pop
ja
pusha
jge
cmp
hlt
adc
das
inc
jb
mov
push
cli
lods
enter
sub
fcmovnb
mov
fwait
push
das
dec
pop
mov
pop
inc
pop
sub
insb
cmpsb
sbb
sbb
sbb
pop
shlb
and
out
and
ljmp
add
jle
inc
test
jae
dec
sti
cltd
mov
mov
pop
loopne
fimuls
adc
nop
int3
dec
aas
sar
and
inc
sub
push
push
lret
pop
enter
push
lret
adc
movsb
xchg
jmp
ljmp
lahf
pop
push
in
stos
cmp
jg
inc
mov
dec
sbb
cmp
stc
pop
insb
jge
mov
cltd
fwait
stc
xor
fadd
jne
mov
ret
mov
ret
std
xor
loope
movsb
xchg
pop
and
mov
movsl
fwait
es
cld
mov
push
iret
cmc
push
add
test
xlat
push
outsb
das
add
cld
push
xor
ja
test
xlat
dec
out
insl
mov
jno
ljmp
int3
mov
mulb
jo
jecxz
repnz
movsb
sti
bound
dec
jle
cltd
mov
mov
cmp
jp
pop
add
inc
push
subb
test
fwait
orl
lret
sbb
pop
cmp
sarl
pop
mov
push
or
mov
lret
cmc
and
cmp
je
pop
inc
fsubrl
pop
jnp
jne
mov
and
mov
lods
cwtl
jl
lcall
or
sub
xlat
push
scas
lods
and
cmp
xor
int3
dec
jle
aas
adcb
jl
fst
jle
fistpll
jp
xor
fistps
aas
push
add
fs
mov
cmp
push
icebp
movsb
lock
dec
mov
xchg
mov
push
sbb
es
test
addr16
int
cmp
aas
push
xor
mov
cmp
cltd
es
fidivl
mov
jne
mov
push
lret
fstps
int
aam
mov
mov
xor
dec
dec
jmp
jno
int3
repnz
jbe
cmp
ret
dec
dec
out
cmp
lea
leave
jbe
outsl
xchg
xchg
das
or
fisubl
dec
xchg
pop
push
ficoml
mov
xor
xchg
lcall
cmpb
je
sbb
leave
inc
test
fbld
xor
mov
mov
stos
test
ja
cmp
dec
test
jae
dec
subb
pop
imul
bound
sarb
sub
ret
jbe
fdivrl
pop
fsubl
pop
inc
mov
cmovge
ljmp
fimull
adc
push
int3
jg
pop
fnstenv
subb
in
adc
jmp
ljmp
pusha
or
ss
dec
mov
fucomi
jno
pop
or
gs
mov
arpl
or
aaa
sbb
xchg
mov
jae
rol
inc
add
sub
lods
mov
les
mov
mov
sbb
mov
incb
lock
sbb
jae
pop
sbb
mov
dec
sbb
mov
cmp
push
lret
lret
ja
inc
xchg
sahf
pop
outsb
inc
cwtl
lods
call
stos
push
xchg
jmp
loope
andb
mov
pusha
orb
loopne
mov
shr
adc
jno
xor
aaa
lods
es
push
xor
xor
adc
adc
mov
jecxz
aas
inc
cmp
pop
call
out
xor
ja
clc
xchg
push
pop
mov
push
je
add
int3
mov
and
push
cmp
mov
mov
jle
adc
push
data16
into
divl
ret
fldl
sbb
adc
stc
je
xchg
and
or
cmp
clc
mov
out
adc
fdivr
add
outsl
push
popa
stos
xchg
nop
jl
stos
ljmp
xchg
jle
push
push
jl
je
out
jge
test
xor
test
pop
cld
std
mov
leave
cld
int
mov
jne
cmpsb
repnz
nop
mov
cmp
xor
cmp
cmp
mov
insb
sub
insb
push
fdivrs
rcrb
sbb
add
push
int3
lret
aaa
jbe
stc
push
add
cli
or
test
loopne
xor
andb
lods
movsb
enter
in
xor
push
xchg
jge
aam
push
dec
mov
push
jp
jne
dec
mov
popa
iret
repz
in
pushf
jl
sub
mov
rcrb
stos
popf
dec
or
pop
mov
xchg
mov
mov
gs
aas
aaa
ljmp
in
jge
into
dec
call
fmuls
add
and
ror
aad
imul
loope
testl
arpl
xchg
call
or
mov
push
push
xor
and
inc
push
inc
cli
and
or
xchg
les
pop
aam
das
daa
jle
sbb
adc
bound
inc
dec
fidivrs
cmp
ret
popf
add
mov
shl
and
add
out
dec
xor
rcrl
adc
inc
sub
mov
push
sbb
fistps
jmp
minps
jne
and
test
in
mov
cmp
xchg
cmp
or
push
popf
xor
adc
or
sbb
int3
mov
add
aaa
out
imul
je
inc
andl
mov
mov
fbstp
call
or
dec
mov
lea
int3
int3
sbb
and
cmpsb
outsl
leave
mov
mov
jno
stos
dec
popa
aaa
movsb
push
and
add
mov
pop
pop
icebp
out
mov
je
mov
ss
cld
or
imul
mov
xchg
dec
test
mov
das
rcr
mov
into
into
in
lret
idiv
fisubs
in
xor
movsb
mov
aas
adc
xor
mov
cmpsb
mov
push
adc
pushf
addb
sub
inc
xchg
mov
pop
add
in
pop
and
iret
cmp
iret
dec
jbe
int3
lret
fildll
push
cli
pusha
jo
dec
or
mov
xor
mov
or
scas
sarl
dec
imul
leave
jle
mov
add
mov
jp
sbb
sti
int3
adc
push
cmp
call
pop
sbb
pop
and
sbb
inc
imul
enter
dec
and
add
nop
jb
fwait
dec
pusha
pop
clc
pop
pop
mov
mov
scas
xchg
ss
push
cs
lds
lea
shlb
mov
adc
cmp
and
aaa
lds
cmp
dec
sbb
push
adc
jg
in
das
cld
into
lcall
jo
stos
test
dec
jbe
jp
leave
push
jecxz
sub
lods
lods
cmp
cmp
hlt
cmc
cmp
in
add
inc
int3
lods
dec
and
jmp
push
out
jl
das
pop
mov
fsubrs
cld
jecxz
push
pop
clc
mov
fsubrl
aaa
in
xchg
mov
in
das
in
xchg
cld
xor
push
out
test
mov
mov
cmp
xor
aam
or
dec
jmp
pop
mov
dec
mov
movsl
jbe
int3
cmp
push
jmp
mov
mov
adc
lret
mov
pop
loope
xchg
lahf
jp
or
adc
pop
loopne
or
and
inc
xor
xor
cltd
cmp
nop
sbb
add
and
mov
jae
sti
data16
jo
enter
dec
push
movsb
shr
mov
int3
fisttpl
mov
adc
or
ficoml
and
and
ljmp
jg
sub
push
add
mov
int
out
enter
mov
push
je
jb
push
push
jmp
pop
ds
ss
test
sub
das
stc
inc
mov
lcall
sahf
loop
pop
sbb
cli
cmp
push
push
jbe
loope
popf
xchg
xorb
jg
inc
mov
lret
add
inc
sub
out
xchg
inc
pusha
inc
rolb
call
rorl
sub
xchg
mov
pop
mov
add
imul
jge
jg
cmp
sub
or
add
mov
js
sub
jecxz
cs
lret
pop
dec
jl
loopne
xor
clc
outsl
cltd
rcl
loopne
xchg
decl
sbb
clc
out
ret
lret
addr16
pop
stc
sub
hlt
rol
xor
cmpsl
or
mov
mov
jno
test
nop
in
cld
les
fcoms
xchg
lods
stc
aad
jae
mov
ss
sub
dec
push
jo
dec
aam
and
lret
dec
pop
cmp
or
bound
cmpsl
mulb
or
cld
or
xchg
xor
and
iret
rcrl
sahf
or
xchg
daa
lock
sbb
stc
sub
dec
pop
pop
and
or
mov
inc
subl
pushf
mov
and
imul
popf
fs
xor
mov
and
lahf
sbb
sbb
sbb
shll
jle
insb
fldl
jne
in
jge
test
in
dec
insb
mov
faddl
cmpsb
ret
sbb
pushf
and
sbb
pop
shlb
cltd
insl
ds
jle
call
in
jo
movsl
cwtl
adc
mov
loop
cmp
inc
inc
jbe
push
jo
test
mov
add
adc
rorb
pop
sarl
movsb
adc
push
ret
jb
test
sbb
sbb
int
stc
jl
and
js
pop
adc
jge
mov
jno
mov
sti
push
int3
in
and
imul
or
inc
jno
jp
adc
mov
jbe
pusha
fnstsw
sub
xchg
test
sbb
in
cmpsb
insb
mov
jmp
data16
jp
sub
roll
and
pop
outsb
stos
js
adc
dec
sarb
cmpsl
aam
jp
ja
cmpsb
dec
ret
mov
addr16
stos
and
mov
mov
sub
out
dec
jp
inc
sahf
cmp
daa
and
das
or
loop
cltd
and
cmp
or
mov
cmpsl
lret
push
inc
lock
inc
fnstcw
jbe
mov
or
jnp
movsl
or
mov
xchg
sub
inc
pusha
jns
lds
mov
jl
pop
jnp
stos
daa
jbe
cmp
mov
insb
push
dec
fwait
es
imul
cli
movsl
sbb
push
pop
sub
fwait
cs
mov
imul
lock
inc
fcmovu
jmp
push
in
ret
jbe
lods
push
js
clc
sub
jmp
xchg
dec
jle
addl
loopne
cmc
or
mov
gs
adc
jns
rorb
bound
popf
mov
fdivs
adc
dec
lret
pop
je
or
xor
sbb
data16
pusha
or
dec
push
addb
xchg
aas
shrb
jae
or
sti
nop
pop
inc
or
stc
inc
mov
nop
mov
dec
test
mov
mov
pushf
dec
lcall
cmp
js
dec
add
sar
cld
adc
cwtl
dec
xor
adc
mov
lods
xor
mov
and
lcall
stos
repz
es
add
sbb
int3
pop
jle
jo
add
insb
or
dec
enter
mov
xor
dec
xor
enter
adc
arpl
xor
cltd
test
dec
lahf
push
insb
push
add
pusha
movsb
sahf
and
dec
mov
push
jb
lahf
cmp
push
and
mov
xchg
mov
outsl
dec
test
outsb
addr16
getsec
xchg
mov
loop
lret
adc
fwait
out
xchg
jecxz
or
iret
lret
aaa
and
inc
das
cwtl
pop
rdmsr
pop
mov
lret
sub
sub
mov
and
sub
jo
dec
mov
adc
sahf
add
js
and
push
pushf
xor
outsl
jl
xor
push
dec
cmp
imul
xchg
movsb
cmp
lock
mov
insl
mov
dec
inc
mov
mov
leave
pop
jo
pushf
and
cltd
or
in
repz
cmpsb
mov
out
xor
sub
cmp
add
adc
jmp
mov
jne
sti
add
sub
mov
bound
shlb
push
xor
push
dec
mov
sub
ret
das
sub
mov
cmpsb
mov
xor
adc
dec
push
xor
iret
cmpsl
out
jl
inc
sbb
sub
hlt
mov
xchg
pop
dec
ds
xor
jne
jl
iret
mov
lea
xor
xchg
sub
out
lcall
cmp
sub
push
xchg
insb
sub
gs
sub
or
cmp
shlb
push
scas
mov
xor
cld
or
out
or
pop
and
loopne,pt
pushf
jb
adc
gs
add
add
or
mov
ret
test
push
adc
lcall
pop
xchg
test
int3
out
cmp
inc
or
repnz
dec
xchg
jg
dec
adc
daa
add
jle
notl
sub
adc
pop
arpl
xor
movl
cmp
bound
push
xchg
jge
pop
mov
push
fsubrs
dec
sbb
mov
pushf
push
cs
scas
lret
sub
sbb
inc
adcb
hlt
xchg
loop
sbb
or
dec
xor
scas
adc
scas
lods
stc
sbb
sub
mov
mov
pop
cmpsb
iret
mov
add
repz
mov
cwtl
in
xchg
lods
dec
adc
adcl
int3
ret
ficomps
jns
pop
mov
mov
sarb
sub
jle
mov
push
adc
rolb
js
xchg
fdiv
sbb
outsl
out
mov
mov
fadds
sbb
or
mov
mov
pop
xor
xor
mov
outsb
jp
push
pop
outsl
fisubs
xchg
iret
stos
mov
jbe
and
cmpsl
mov
push
lcall
sbb
cmp
push
and
or
fs
push
push
fcoml
aam
insb
sbb
xchg
arpl
loop
mov
push
out
fldt
daa
dec
cmpsb
int
sub
es
gs
insl
push
sbb
out
cmp
cmp
push
rorb
jecxz
sub
sub
dec
out
shrb
fbld
test
push
jns
rcl
ret
call
out
push
xchg
outsl
insb
in
lret
das
addr16
or
or
xlat
pop
rclb
sub
mov
push
insb
iret
cmc
loopne
scas
push
lock
mov
imul
pop
pop
aas
xchg
cmpb
scas
movsb
test
out
pop
xlat
hlt
ficomps
dec
pop
icebp
jmp
les
call
insl
mov
push
jg
aaa
loop
enter
push
out
sti
pop
jg
gs
sti
adc
push
sbb
add
insl
loopne
push
aaa
push
adc
sbb
ret
pop
xchg
mov
sbb
jno
cld
dec
and
sbb
inc
movsb
mov
movsl
mov
and
inc
stc
lods
jns
jl
inc
push
fisubrl
push
mov
and
mov
xor
and
mov
cs
adc
cli
push
fldt
mov
jb
mov
dec
cmovbe
and
jne
sti
pop
fldt
jle
outsb
pop
mov
mov
imul
xor
cltd
pushf
fs
inc
sbb
and
xchg
cwtl
mov
sub
or
lcall
cwtl
xor
bound
fstp
pop
in
jle
dec
pop
clc
or
dec
xor
loopne
pusha
addr16
inc
loop
sbb
mov
mov
sbb
shll
fisubs
mov
loop
cmpsl
lds
mov
inc
dec
test
ss
jle
loope
test
mov
mov
mov
sti
out
xor
pop
movsl
aas
arpl
stc
mov
mov
aaa
or
in
mov
xchg
scas
mov
dec
adc
jp
push
sbb
in
loop
and
mov
rcll
jbe
xchg
sti
ret
std
sbb
outsl
cmpsl
push
imulb
mov
cld
xchg
fcmovne
or
arpl
push
lods
push
sub
and
int3
mov
sub
cs
jnp
and
iret
dec
pop
dec
das
jmp
xchg
pop
outsl
mov
add
leave
sub
sub
mov
movsl
int3
jp
out
mov
cmpsb
in
jns
ret
ds
test
adc
loopne
bound
dec
adc
mov
sbb
dec
push
int3
sbb
gs
sbb
adc
repz
fsubrs
push
outsb
lea
mov
or
add
outsb
dec
aad
xchg
lods
int3
xor
xchg
mov
cmp
pushf
dec
test
inc
adc
xchg
sbb
cmp
sahf
add
dec
ljmp
lret
xchg
cmp
cmpsb
fs
xlat
push
push
pop
aam
mov
pop
mov
fs
jecxz
or
cmp
inc
fadd
pop
add
adc
xchg
cmpl
adc
cld
or
or
xchg
push
repz
das
into
xchg
test
orb
loope
mov
test
sub
push
adc
xor
iret
mov
lcall
inc
mov
mov
sahf
jl
les
jns
outsl
sbb
mov
mov
sub
mov
mov
in
pop
dec
mov
inc
push
jae
aaa
scas
jne
sub
mov
insb
jbe
inc
dec
push
popa
repz
inc
xor
push
sti
xchg
xchg
push
mov
mov
bound
xor
xorl
lea
push
xchg
push
sub
popf
push
sub
or
les
insl
xor
imul
lret
jg
out
dec
inc
adc
lret
lret
mov
pop
repz
sets
inc
movsb
push
fwait
movsl
lods
fsubrs
out
ret
push
in
fisubrl
jl
loopne
inc
imul
je
cmp
pop
dec
cmpsb
jns
xchg
jle
call
dec
mov
stos
lahf
dec
xchg
or
clc
gs
js
jecxz
cmp
popf
sub
dec
les
jmp
pop
repnz
test
xlat
imul
push
pushf
and
pop
push
into
in
inc
sub
popa
push
lock
or
add
sub
insb
clc
mov
test
dec
push
int
add
mov
mov
or
jl
mov
int3
inc
insb
iret
fcmovne
or
mov
or
ja
int3
sbb
outsl
sbb
mov
into
imul
add
out
inc
ds
xor
cld
cmc
daa
cmp
cmc
imul
push
aaa
sbb
cmpsl
out
adc
sub
cmp
push
xchg
fwait
movsb
outsb
xor
cwtl
cmp
stos
sbb
loop
dec
pop
fsub
inc
fwait
mov
stos
and
mov
pushf
out
adc
stos
push
jge
cmp
rcl
ljmp
sbb
aam
add
sub
adc
inc
fs
inc
out
idivl
jmp
and
mov
or
and
inc
xchg
cmp
xlat
mov
mov
pop
mov
xor
es
xchg
popf
xchg
sahf
and
fstpt
add
cmp
mov
xor
xor
clc
or
xchg
xchg
or
and
adc
test
mov
cmpsl
or
and
test
and
add
addr16
mov
ret
adc
mov
enter
mov
xchg
movsl
mov
cmp
cli
cmp
jne
in
or
mov
les
bound
es
iret
push
test
mov
push
pop
add
mov
xchg
and
xchg
arpl
fidivl
stos
xorl
fwait
push
ror
jg
jo
fbld
add
mov
dec
ret
daa
sbb
push
aad
insb
jne
jb
addr16
xchg
push
sbb
inc
enter
ds
cmpsl
inc
loope
adc
adc
cmpsb
fs
push
loop
mov
mov
bound
repz
xchg
popa
mov
shr
test
push
ljmp
sub
mov
mov
rcll
mov
xchg
adc
mov
push
fidivrl
mov
xchg
and
movlhps
xor
out
in
outsl
mov
mov
test
faddp
iret
clc
dec
mov
int
xchg
jmp
push
xchg
sub
and
call
lea
jmp
outsb
xchg
dec
cltd
or
xor
xor
pop
add
pop
mov
mov
mov
and
adc
inc
inc
jg
dec
fisttpl
xor
les
movb
push
mov
xor
cmp
pusha
xchg
in
out
cwtl
in
adc
push
mov
pop
mov
xor
outsb
mov
jecxz
mov
out
out
das
push
shlb
into
inc
lds
iret
mov
mov
mov
push
inc
and
mov
popf
cmp
mov
inc
cli
fcmovb
dec
test
in
dec
mov
jbe,pn
repnz
or
daa
cmp
in
push
stc
hlt
cld
ja
jo
cmp
test
std
fmull
lahf
fisubrl
mov
mov
inc
call
pop
jge
call
and
inc
cmpsb
fidivrl
xchg
daa
jno
push
aaa
aas
push
out
dec
les
sub
mov
js
sub
lcall
lret
insl
aas
push
nop
inc
push
mov
xlat
pushf
sbb
mov
xchg
push
lea
decl
inc
push
adc
cmc
cmpsb
jl
shrb
outsb
lock
and
dec
inc
dec
std
into
push
mov
sbb
xor
imul
incl
call
in
movsb
lret
jl
outsb
leave
cmpsl
scas
jp
pop
inc
inc
xchg
in
aad
sub
enter
xchg
xchg
repnz
mov
loope
xchg
push
mov
cli
fsubrl
cmp
sub
fs
adc
cs
dec
pop
jae
mov
xchg
push
out
or
lods
jne
adc
loopne
jbe
scas
or
and
fwait
lods
cmpsb
mov
push
subb
popa
mov
or
adc
inc
addr16
cmp
mov
cmp
data16
mov
rol
daa
ret
cmp
enter
sbb
cmp
fiadds
cld
scas
loopne
adc
arpl
test
js
cmpsl
fistps
lods
into
push
jecxz
nop
adcb
sahf
or
ss
mov
repz
jb
xor
jne
and
ds
jne
cmp
mov
xor
jge
aam
add
mov
loope
incl
push
mov
xadd
xor
loopne
ds
xchg
pop
shrb
inc
cmpsb
into
in
sbb
pop
jmp
mov
enter
in
sub
mov
pop
jne
jb
cmc
in
cld
cmp
inc
inc
sbb
mov
lods
ljmp
stc
out
adc
jb
mov
dec
mov
push
mov
push
fiadds
jno
sub
or
enter
lods
or
mov
sbb
dec
mov
mov
cs
imulb
xchg
mov
inc
dec
cmp
jmp
neg
repz
adc
cmp
xchg
xchg
hlt
jp
mov
imul
scas
jg
push
xlat
popf
in
inc
adc
xor
xchg
push
hlt
pop
cmp
fs
data16
out
scas
xor
lods
int3
outsl
test
or
dec
test
cmp
and
mov
repnz
jp
and
and
popf
in
jne
sub
jg
fstpl
xchg
cmpsl
jae
pop
push
dec
xor
das
cmc
dec
jbe
imul
in
mov
outsl
jp
cmp
mov
cs
fildll
in
mov
add
int
jge
je
das
mov
sub
mov
insb
pop
mov
cmpsb
lds
mov
pushf
movsb
pop
rorb
call
mov
jno
out
and
sahf
data16
push
ljmp
pop
loopne
pop
dec
xor
mov
adc
cmp
repnz
sub
adc
arpl
adc
data16
jo
rorl
cmp
sbb
mov
pop
mov
mov
sbb
sub
pop
shl
adc
xor
ljmp
repz
xchg
or
mov
and
cmp
in
mov
xchg
push
fnstenv
int
or
jne
addr16
jle
sbb
scas
fs
add
or
out
mov
mov
cmpsl
std
fbld
call
jb
inc
cmp
dec
mov
cmp
xor
sbb
shlb
adc
push
jecxz
pop
int
mov
lods
xor
fpatan
rol
mov
lods
pop
jnp
inc
dec
imul
lds
jle
addr16
and
bound
sbb
pop
inc
sti
cmp
inc
pop
inc
and
push
popf
movl
jg
cmpb
push
or
loopne
push
dec
jge
aaa
cmp
cs
in
jmp
mov
shrl
pop
in
clc
sarl
inc
push
jbe
push
hlt
fisttpl
insb
xchg
mov
push
je
aaa
push
inc
adc
push
test
inc
mov
push
repz
nop
out
xlat
clc
movsb
xchg
in
mov
xchg
pop
push
push
jmp
sahf
out
gs
jno
pusha
ss
in
ja
mov
lock
xchg
pop
sbb
pop
les
imul
bound
sbb
pop
mov
adc
mov
xchg
bound
js
adc
inc
fidivrl
jbe
or
sbb
addr16
xchg
je
sbbb
sbb
mov
sbb
mov
setl
inc
test
fcmovnbe
xor
mov
dec
jae
inc
jne
push
push
add
inc
sti
idiv
int
jmp
push
jecxz
pushf
jae
ja
sti
lock
mov
add
mov
in
imul
sub
dec
ljmp
add
outsl
or
or
cli
ljmp
lea
ss
sub
lahf
pop
dec
mov
lods
mov
or
jb
pop
jo
mov
sbb
dec
insl
jle
push
mov
dec
cmc
shl
xor
sub
stc
xor
fwait
xchg
outsl
jecxz
out
push
leave
pop
jle
mov
xchg
int
mov
call
addb
repnz
lds
out
cmpsb
rdmsr
mov
dec
sub
lods
into
push
jae
movsl
or
out
push
stos
pop
outsl
xor
sub
repz
pop
pop
pop
xor
stos
addps
jo
stos
mov
or
rcll
and
test
pusha
lret
hlt
ret
sbb
clc
nop
inc
cmp
loopne
mov
mov
fsubs
hlt
sbb
and
outsl
in
ret
cmp
int3
fs
jns
cld
xor
ret
add
shlb
adc
ret
js
sub
jmp
outsb
sbb
cltd
iret
fisttpl
mov
movsb
pushf
aaa
sbb
stc
sub
test
xor
sub
je
sub
push
sahf
setbe
out
jge
jl
out
jecxz
mov
into
mov
push
sbb
dec
cmp
mov
jnp
cmpsl
and
mov
cmp
pop
cmp
inc
inc
xor
pop
outsl
add
add
int3
mov
jnp
adc
jle
in
fisubl
xor
std
test
js
dec
jns
cmp
sbb
fcmovnb
inc
pop
sahf
xor
or
daa
mov
pop
pop
adc
adc
xlat
adcb
fnsave
inc
push
or
aam
push
push
fmull
adc
out
testl
loop
pusha
es
or
ss
les
jecxz,pt
add
push
bound
int
fs
bound
lods
inc
jp
adc
gs
insb
push
xchg
test
push
xor
or
pop
add
cmp
add
lahf
fistps
or
push
pop
cli
jno
movsb
cmp
mov
xchg
stos
ljmp
enter
aam
pop
test
aas
sbb
roll
lahf
mov
sbb
std
pop
pop
sbb
sahf
sub
xor
jecxz
ljmp
movaps
in
push
mov
mov
mov
inc
mov
pop
fwait
int
pusha
test
sar
or
mov
clc
jae
inc
pop
mov
adc
fcomps
ds
jge
sub
mov
and
and
scas
pop
test
add
and
xchg
dec
testb
imul
ret
jo
cmc
ljmp
in
out
dec
sbb
shlb
jnp
out
jo
push
add
adc
jg
lods
dec
and
jle
push
mov
ret
push
call
push
mov
sbb
cs
mov
pop
adcl
mov
cli
bound
das
movsl
pop
inc
iret
out
push
repnz
loop
push
ljmp
insl
lea
sarl
jns
jns
pop
imul
mov
xchg
ficoml
fsub
xchg
fwait
jnp
fisubrl
xor
push
cmpsl
push
and
aaa
adc
negl
pop
cmpsl
push
ds
pop
gs
pop
cltd
lods
pop
or
dec
push
rorb
repnz
adcl
lahf
aaa
dec
pop
test
pop
pop
fcmovnu
and
enter
test
or
jno
jns
add
subps
daa
hlt
std
push
test
lds
cmpsl
add
xorb
xchg
fstl
add
xorb
pop
sbb
test
mov
in
fucomp
xor
cmp
sbb
fbld
sbb
stos
loope
stc
jbe
push
jno
int3
lods
test
mov
or
xor
arpl
stos
sub
push
add
fsubrs
and
js
dec
test
fistps
xchg
cmp
fldenv
jmp
inc
jae
mov
sarb
aad
cli
or
xor
inc
dec
jl
subb
movsl
cld
mov
add
loope
pop
shlb
push
sub
mov
sbb
out
mov
lret
subl
pop
rcll
xor
js
stos
pop
cmpl
push
add
mov
pop
ss
movsl
out
cmp
jnp
dec
mov
out
jecxz
shll
jbe
xchg
add
or
mov
out
test
push
fsubrl
cli
stc
icebp
decb
lods
or
lea
std
in
stos
xor
sti
pushf
add
js
scas
pop
inc
fs
or
in
xchg
adc
xchg
hlt
sbb
fstps
pop
or
pushl
ds
push
pop
add
test
jmp
jge
jns
outsl
aad
add
mov
out
testl
jbe
inc
fisubl
lock
mov
ret
and
dec
add
push
aam
cmp
inc
pop
adc
test
sar
sub
imull
ljmp
idivl
sub
mov
jns
dec
std
es
jnp
jp
or
xor
das
push
sub
out
je
mov
and
rcrl
les
pop
add
lahf
pop
push
push
out
addr16
xchg
fildll
xchg
and
and
addl
call
jbe
pop
cmp
pop
or
xchg
test
mov
adc
movsb
outsb
lcall
nop
mov
fisttpl
adc
xchg
into
movsb
or
pushf
rorb
inc
mov
test
lock
leave
add
fs
fwait
mov
imul
into
jne
sbb
sbb
pop
arpl
out
mov
cmc
add
cmp
mov
xchg
orb
sbb
sub
pushf
sub
mov
jo
jnp
jge
das
dec
push
sub
mov
int
jns
loopne
stos
lods
retw
loop
ljmp
cmp
cmpsb
add
ror
mov
out
pop
sub
jp
lcall
addr16
sbb
jo
inc
inc
ret
movsb
inc
les
stc
loopne
lods
std
sti
add
outsl
shll
das
push
call
push
mov
and
outsl
xor
ja
int3
add
les
popf
fldl
xor
cmp
adc
pop
push
sbb
push
cmpps
ljmp
pop
pop
adc
inc
fidivrl
adc
andb
js
mov
rcr
ret
or
push
inc
mov
xor
pushf
mov
insb
push
xchg
or
jae
insl
lods
push
imul
dec
nop
pop
lds
pop
sbb
lret
mov
sbb
shll
loop
fwait
add
push
sub
pop
decb
ja
push
cmp
repnz
call
adc
lods
push
lock
mov
cmpsb
cmpsb
sti
aad
adc
mov
fwait
jp
mov
jl
fs
jb
xchg
push
pop
inc
test
push
into
stos
xchg
dec
lahf
inc
mov
out
je
lods
test
fbld
mov
sub
push
test
test
xorw
mov
push
into
dec
outsl
jne
pusha
or
mov
jae
adc
mov
addr16
mov
insb
mov
rcl
scas
out
scas
add
movsb
cmp
dec
dec
scas
fistpl
repz
adc
loop
inc
in
lods
mov
mov
sbb
sub
add
hlt
cmpsl
imul
lock
and
add
cmpsl
shrb
and
mov
insl
dec
adc
sahf
insb
push
sbb
enter
jecxz
push
add
mov
push
mov
push
insb
cmpl
fidivrs
out
in
sbb
and
aaa
fcoml
in
cwtl
cld
outsb
ffree
dec
setg
jne
pop
outsl
stos
loope
or
je
mov
xchg
mov
ljmp
push
mov
incl
test
pop
jmp
pop
sbb
or
add
adc
por
aas
sbb
push
mov
xchg
mov
test
jne
mov
addr16
xchg
aas
repnz
faddl
mov
sti
mov
sbb
iret
insl
cmp
jle
and
andl
int3
xor
mov
push
decl
jge
stos
cmp
lret
fcmovnu
sbb
jne
push
mov
stos
and
hlt
add
daa
imul
sbb
mov
mov
jmp
imul
stos
popf
sub
pop
xchg
fnstcw
out
jp
or
lahf
fidivrl
fidivrs
adc
mov
adc
test
lds
iret
adc
mov
push
lcall
mov
jg
in
mov
orl
inc
mov
mov
cmp
and
or
sbb
sbb
pop
sbb
jge
bound
cli
repnz
call
andl
inc
stos
lds
lahf
push
mov
repz
pop
hlt
fists
outsb
aaa
mov
pop
adc
push
jnp
imul
in
push
mov
out
aad
jo
add
mov
mov
push
or
icebp
pop
mov
in
ljmp
ds
dec
lcall
add
repz
jl
adc
lds
sub
sbb
stos
xor
je
loop
aam
lock
sbb
pop
xlat
cli
xor
inc
or
dec
or
cmpsl
roll
push
into
faddl
xchg
fmuls
and
xor
jmp
xchg
fsub
jmp
into
pop
in
cmc
mov
loop
jmp
xchg
pop
add
jo
test
insl
push
fisttps
fwait
ljmp
fisubs
das
mov
and
cmpsl
push
andl
pop
push
pop
jecxz
test
mov
ficoml
push
or
frstor
dec
and
out
out
call
inc
pushf
jmp
imul
fldl
inc
mov
and
rcrb
adc
cmp
ljmp
loopne
xchg
mov
cmp
mov
test
sub
bound
shlb
ret
scas
sub
mov
mov
in
or
inc
jl
lea
pushf
andl
pop
pop
in
adcb
xor
xchg
in
fsubs
cwtl
inc
pop
test
js
or
stos
push
lods
sti
insb
ljmp
dec
pop
dec
sarb
scas
sahf
cs
pop
iret
mov
push
dec
and
stos
cmp
clc
push
adc
mov
dec
gs
push
scas
adc
or
push
std
xchg
sbb
inc
push
in
lock
fisubl
sbb
xorb
outsb
ret
jle
cwtl
jecxz
push
mov
xchg
sub
push
jno
mov
inc
mov
push
clc
jecxz
nop
loopne
jae
clc
cmpsl
jmp
out
xchg
sahf
mov
push
int3
push
and
test
fnstenv
repz
in
mov
inc
push
int
or
add
int3
jmp
scas
jae
mov
add
sub
pop
sahf
pop
lods
and
das
jnp
cli
inc
out
add
xor
enter
xor
push
sahf
je
insl
mov
mov
mov
jo
cmp
imul
inc
add
cli
adc
out
cmp
pop
ljmp
iret
push
push
scas
inc
nop
aas
xchg
mov
jl
movsl
xlat
push
cmp
lea
iret
cmpsl
dec
cmp
dec
xor
je
inc
shrb
jecxz
rolb
stos
ret
mov
mov
in
jecxz
test
xchg
int
adc
mov
ja
dec
dec
cmp
subl
dec
add
cmp
sbb
ja
xor
lret
les
jmp
imulb
mov
fbstp
movsb
dec
rcl
rcrl
or
mov
mov
jno
push
mov
and
stos
out
dec
ret
pop
in
mov
clc
pop
sbb
shl
jnp
popa
cmpsl
sarb
pushf
xchg
in
js
and
cmc
lcall
xor
popa
fistpll
std
xor
negl
fsubl
or
xchg
test
scas
cmpsl
xor
adc
aad
push
push
cmpsb
decb
dec
dec
fcoml
gs
or
inc
sub
cmp
sti
mov
jecxz
cltd
cmp
lret
xorl
mov
sahf
jns
or
push
imul
cli
jp
dec
test
jle
inc
cs
imul
and
insb
in
pop
and
xchg
outsl
jae
or
sbb
mov
push
pop
daa
dec
sarl
add
jnp
xor
rcrb
fs
inc
xor
outsl
hlt
mov
pop
scas
mov
jbe
movsl
mov
mov
cmp
les
xchg
jmp
jb
hlt
inc
mov
xchg
xor
std
inc
pop
sbb
inc
aas
clc
sub
xor
lock
mov
mov
xor
rorl
int3
fcmovne
lcall
push
or
adc
or
rcrl
pop
mov
sahf
lret
jmp
xor
dec
xor
fmuls
jns
or
dec
dec
push
clc
fdiv
mov
add
test
sbb
add
fbstp
inc
loopne
xchg
and
movsb
sbb
pop
mov
mov
mov
pop
and
pop
pop
jg
add
mov
push
inc
mov
dec
dec
pop
add
pop
and
stos
sbb
scas
sbb
shl
jnp
aam
jnp
adc
adc
jne
imul
shrb
pop
push
iret
push
push
sbb
insl
cmpsl
xor
fimull
lret
in
mov
insl
lret
sti
mov
icebp
and
adc
sub
pop
data16
xor
sti
fists
shll
fnstenv
sbbl
repz
dec
pop
pushf
out
out
ja
fs
cmp
mov
mov
loop
ja
xlat
and
sar
popf
jo
and
xchg
sbb
clc
cmp
pop
divb
insl
cwtl
enter
xchg
jp
loop
xor
imul
mov
popf
mov
add
cld
fimull
push
push
int3
jae
ss
or
add
insb
mov
xor
mov
es
mov
cmc
out
gs
scas
add
jo
add
rorl
sahf
movsb
pop
and
add
dec
pop
mov
xlat
inc
arpl
cmp
fsubrl
pop
jo
sbb
lock
sbb
push
in
call
inc
jnp
fsubs
sbb
lret
in
lret
mov
push
adc
mov
xchg
lcall
dec
movsl
push
fldcw
nop
pop
sub
sbb
call
out
add
outsb
mov
mov
jns
xchg
add
daa
ja
insl
sub
mov
gs
int3
jp
and
insb
mov
cwtl
fsubrp
mov
mov
xchg
pop
outsb
add
push
xchg
push
push
popa
xchg
subl
pop
and
push
and
inc
into
xchg
mov
es
fdivl
sbb
inc
mov
adc
mov
jo
test
lods
mov
pop
daa
mov
fsubrs
mov
xor
or
addr16
sub
dec
adc
mov
addb
movsb
add
cmpl
and
lods
jns
xchg
xorb
xchg
dec
daa
ss
std
jmp
adc
into
mov
and
pop
das
mov
sbbb
in
adc
rcl
stos
add
sub
pusha
sub
das
pusha
cmpsl
cmp
insb
cmpsl
int3
sbb
imul
int3
sbb
lret
bound
push
cmp
jge
mov
xchg
and
icebp
xor
or
adc
sarl
and
push
je
adc
mov
outsl
sub
xchg
pop
mov
jne
int
inc
pop
data16
mov
sub
cmp
push
mov
cmp
aaa
pop
insb
repz
fnsave
adc
fiaddl
mov
scas
sbb
pop
mov
dec
insb
pusha
inc
mov
dec
mov
lahf
js
or
mov
les
jns
shll
rcl
enter
xchg
dec
mov
sbb
and
test
pop
les
cltd
push
xchg
or
mov
ud0
mov
xor
dec
idiv
sub
cwtl
sub
popf
icebp
mov
inc
or
shrb
in
jbe
sbb
cmc
imul
sahf
mov
cld
dec
aas
cli
cwtl
mov
icebp
push
nop
cmp
jp
or
bound
outsb
stos
in
addr16
fwait
xor
inc
popf
sub
inc
jmp
mov
popa
lea
int3
inc
in
mov
mov
pop
aaa
fs
and
pushf
sub
outsb
cmp
ja
mov
dec
rcl
xchg
insb
daa
outsl
adc
pusha
stc
push
and
adc
std
cwtl
add
aam
lcall
ds
cwtl
mov
ds
adc
js
or
xorb
aas
mov
inc
inc
imul
call
ret
sbb
cwtl
pop
mov
sbb
stc
hlt
adc
les
adc
pop
out
cmp
shrl
les
test
out
push
cmova
popf
lods
aaa
cmpsb
ss
inc
push
sbb
jae
out
lcall
xchg
push
rcrb
sbb
ds
shll
lods
jl
cmc
pushf
loop
mov
fldt
dec
cmp
adc
dec
jnp
adc
add
pop
and
lods
es
add
push
call
adc
mov
jl
negb
sub
pop
int
xchg
adc
lods
push
ja
lock
inc
push
add
mov
xchg
adc
inc
imull
dec
or
int3
mov
xor
scas
xor
pop
push
scas
scas
cmpsl
cli
jno
ds
adc
clc
fcoms
addr16
add
enter
cmp
stos
imull
cwtl
neg
dec
out
das
jp
xor
cmp
lds
aam
lods
push
in
bound
jmp
bsf
daa
push
push
lret
outsb
insl
movsb
pop
mov
popa
jl
ja
inc
fisubl
jle
xchg
cmpsl
hlt
mov
cmpsl
xor
cmp
jns
cld
mov
rclb
xor
cmp
fcmovnbe
lods
xor
fs
cltd
mov
cmp
shld
xor
inc
jmp
mov
sub
push
sub
cmp
das
add
pusha
inc
movsl
cmc
out
xorb
sbb
in
cld
push
inc
daa
xor
jecxz
mov
das
sti
mov
dec
sbb
and
sti
bnd
aad
cld
xchg
cltd
sbb
sbb
adc
push
jp
inc
pop
loop
add
dec
add
dec
cli
sbb
mov
pop
popf
mov
xor
jbe
popf
sbb
sti
fldl
cmp
inc
cmp
lcall
ret
shll
dec
enter
outsb
hlt
cld
mov
jbe
loopne
fucomi
popa
popa
pop
xor
mov
imul
xor
dec
lret
push
pop
out
mov
cmp
xchg
outsl
dec
sbb
sahf
nop
and
ljmp
int3
adc
mov
cmc
jnp
push
fwait
jmp
xlat
add
int
out
mov
dec
sub
or
lcall
out
stc
and
or
fcompl
iret
cld
xor
cmp
or
sub
lahf
jns
dec
xchg
aad
sub
cmp
andb
push
pop
dec
sub
xor
sbb
jmp
out
test
dec
stos
test
mov
push
and
icebp
push
push
mov
jle
mov
ljmp
pop
ja
sbb
insl
inc
mov
shlb
cmp
inc
lcall
pushf
inc
add
or
popa
xor
test
lret
fst
addr16
push
loopne
jge
jecxz
aaa
outsb
movsb
decl
out
shrb
sbb
inc
sub
aaa
add
clc
mov
mov
loop
jmp
into
inc
popf
fcompl
ja
jo
pop
xor
push
mov
and
and
dec
icebp
xchg
pop
dec
cltd
ds
mov
pop
pop
sub
mov
iret
lret
imul
push
and
push
and
repz
lods
mov
jnp
inc
lret
and
adc
push
repnz
lods
lea
xor
divb
jns
enter
fdivrl
fs
or
lds
jnp
jne
scas
mov
jmp
lret
push
or
ja
nop
sbb
xorb
aas
mov
and
sub
lea
pop
out
imul
jae
loop
test
xchg
inc
pop
ss
mov
rcrb
lret
ds
loopne
inc
testl
mov
inc
adc
xchg
fldenv
aam
test
add
sahf
xor
mov
clc
and
push
mov
xchg
mov
xchg
and
sub
ds
imul
scas
pusha
jae
pop
sub
int3
shl
mov
aad
push
xor
adc
mov
push
fsubrs
dec
jae
inc
jg
sub
mov
push
cmp
inc
add
inc
into
mov
push
filds
mov
push
sub
fcmovne
jecxz
test
mov
scas
leave
cmp
jle
push
test
lods
pop
les
inc
andb
push
shrl
idivl
inc
scas
jns
popa
push
mulb
adc
pop
pop
jno
insb
xchg
and
xchg
mov
ret
add
idivl
sub
popa
pop
pop
arpl
cld
repz
das
arpl
ror
add
int
daa
push
orl
and
pop
aas
pop
sub
jo
aam
dec
adc
mov
push
pop
loop
je
popf
inc
or
dec
mov
xor
ja
sub
das
or
add
sub
pop
xor
arpl
inc
cs
push
std
or
sarb
aaa
rcrl
data16
stos
pop
mov
inc
shll
mov
fstpl
in
loop
xchg
jecxz
xlat
sbb
push
fisubrl
aam
loop
sub
ss
mov
lret
mov
fldl
mov
adc
xchg
pop
into
ljmp
jp
cmp
add
and
xor
adc
sar
xor
popf
loop
xchg
icebp
cs
pop
lea
mov
or
pop
add
cmp
push
mov
xor
adc
mov
lahf
daa
mov
stc
lock
mov
cmc
sbb
cld
add
orb
xchg
mov
pop
rcrb
mov
movsb
arpl
lods
cmc
push
adc
xor
jno
testb
shrl
test
xor
scas
pusha
sar
je
add
push
jb
cmp
andl
add
rorb
mov
iret
pop
mov
cmp
outsb
repnz
clc
ljmp
add
pop
adc
ds
popf
mov
mov
imul
test
lods
mov
sarb
ret
add
dec
jae
pop
jl
xchg
pushf
pop
cmp
dec
pop
fs
pop
and
stos
iret
add
imul
repz
arpl
int
cmpsl
xor
dec
imul
mov
sbb
enter
movsb
mov
rorl
and
jle
in
adc
push
aas
sub
pop
or
int3
push
test
stc
test
and
xchg
lcall
fadds
xor
xor
xchg
rcr
lock
sub
mov
mov
xor
jl
addr16
cmp
pop
push
cmp
sub
mov
push
sub
arpl
fs
mov
mov
sbb
lret
sub
push
cmc
iret
mov
filds
movsl
adc
push
gs
or
adc
sbbl
fwait
mov
inc
mov
movsb
xchg
ffree
jnp
pop
or
pop
sbb
sbb
pop
sbb
data16
sbb
jecxz
jg
enter
cmp
mov
cli
js
movb
xchg
push
mov
mov
mov
jae
dec
arpl
aad
lods
mov
add
or
add
cli
outsl
inc
insb
sub
fbstp
and
mov
cmp
icebp
call
mov
pop
inc
or
xchg
in
mov
pop
mov
inc
addb
fwait
call
outsb
jge
pop
jo
push
xchg
fidivrl
mov
mov
xor
add
push
jecxz
or
jno
lock
or
and
cwtl
cs
xor
dec
and
into
enter
sbb
push
inc
xlat
popa
dec
xlat
pusha
add
adc
jmp
rorb
lret
test
stos
fucomip
xor
lcall
or
sbb
in
shlb
rcr
lret
gs
mov
mov
mov
mov
int
jbe
push
insb
or
psubsb
mov
ss
mov
mov
aaa
fistps
cmp
lret
pop
xor
add
adc
clc
outsb
popf
fstps
andl
pushf
pop
or
jne
clts
jne
scas
cmp
pushf
xchg
popf
or
test
sub
sub
leave
ds
push
outsl
leave
mov
sahf
sahf
in
lods
sbb
sti
adc
enter
pusha
mov
adc
out
shlb
ja
add
xchg
sub
cmpsl
jno
insb
inc
and
pop
dec
cmp
cmp
mov
popa
jns
push
dec
pop
inc
fwait
jmp
cwtl
ja
hlt
nop
pop
xchg
adc
inc
mov
or
sub
or
stos
jecxz
int
xlat
pop
stos
jno
outsl
jb
dec
mov
rorl
push
lea
sbb
leave
dec
sbb
bound
cmp
adc
daa
leave
dec
jne
pop
sbb
inc
daa
outsb
clc
xor
js
and
packssdw
and
xchg
data16
cltd
add
lea
xchg
clc
addr16
xchg
xchg
sahf
out
stos
ss
mov
xchg
hlt
sahf
push
mov
xchg
in
mov
ss
test
stos
jle
ja
sub
inc
mov
mov
fisttps
dec
add
out
cwtl
stos
mov
xor
jns
xchg
jmp
in
inc
push
mov
adc
fcomp
sbbb
mov
adcb
cmc
mov
lahf
cmpsb
notl
jge
and
adc
mov
ret
pop
sbb
mov
inc
cld
scas
fistpll
cltd
int
sbb
nop
and
sub
les
sub
pop
push
pop
daa
cmp
or
mov
jmp
aas
mov
add
jmp
or
sbb
sub
dec
xchg
jno
cmp
imul
jo
push
or
dec
push
pop
dec
mov
cmove
xchg
jo
clc
pop
mov
pop
jmp
rolb
fimull
inc
imul
sub
dec
fcmovu
dec
cmc
cmp
push
push
sti
pop
and
and
out
jle
xlat
jnp
lahf
adc
popa
pop
dec
cmpsb
sti
push
xchg
inc
xchg
sub
popa
mov
faddl
lahf
mov
addr16
paddd
cmp
jb
je
mov
push
lcall
push
xor
mov
jge
aam
jp
addr16
ret
or
jecxz
lds
in
pushf
push
movsl
or
ret
cmp
inc
orl
pop
mov
sbb
fidivl
sub
xchg
scas
pop
into
xor
mov
shl
ja
and
paddusw
inc
mov
lds
enter
rorl
enter
ret
sub
repnz
jp
ficomps
and
xchg
bound
in
loopne
mov
fistl
pop
xchg
fcomi
cmpsb
dec
inc
aad
push
pop
scas
movsb
pop
mov
iret
add
lock
incb
test
call
mov
add
bnd
stos
xlat
push
push
sub
jb
scas
test
inc
call
insl
dec
mov
or
es
pop
xchg
xchg
rcrb
imul
push
xchg
inc
js
testb
dec
test
shl
or
fwait
bound
mov
or
pop
push
ficoms
cld
jmp
js
fmull
addr16
push
into
test
out
xchg
jae
lds
test
cld
sub
xchg
jne
sub
mov
fs
lret
inc
test
out
dec
xchg
pop
mov
lahf
push
sbb
jno
iret
push
sub
push
xor
addr16
mov
mov
int3
cwtl
jg
add
or
xchg
dec
mov
xchg
adc
pop
and
orb
inc
cld
lret
xor
pop
inc
insb
add
and
push
cs
or
mov
sub
test
mov
mov
inc
incl
mov
add
dec
jne
add
test
jno
or
sarb
add
sti
add
adc
dec
mov
enter
fldt
mov
ficompl
cs
sar
das
lock
dec
enter
in
sbb
sub
dec
cmpsl
mov
push
xchg
icebp
rorl
inc
mov
mov
cld
and
push
psubsb
inc
idiv
or
into
dec
ss
xchg
sarb
push
cmp
mov
adc
les
lahf
imul
dec
outsl
push
jl
addr16
mov
loope
push
xchg
adc
shl
punpckhdq
cmp
and
shlb
xlat
mov
mov
cmp
aad
jl
push
es
mov
repnz
push
mov
pop
cmpsb
sub
add
test
xchg
push
sub
inc
inc
outsl
push
adc
pushf
fs
lock
and
push
lock
sbb
mov
clc
in
je
lods
subl
sbb
mov
pop
movsb
push
sbb
add
movsb
dec
push
mov
adcl
dec
movl
jno
ss
add
orl
mov
or
mov
mov
mov
xchg
ja
sub
xor
and
popf
jb
cmp
out
mov
scas
mov
scas
jmp
lret
lea
ds
xchg
sar
and
enter
mov
xor
sub
jb
cmp
mov
adc
test
mov
lcall
stos
push
stos
adc
mov
xor
inc
mov
out
xor
sub
cli
xor
jmp
stc
lods
push
aas
aam
test
jnp
pop
dec
adc
mov
in
inc
mov
sbb
and
shll
lock
mov
mov
popa
inc
imul
fwait
jae
cmp
ficoml
push
cld
mov
testb
inc
sub
mov
jmp
fcompl
sti
mov
or
sbb
rorb
pop
and
jo
or
aam
hlt
or
pop
pop
jnp
in
mov
add
lock
test
pop
data16
cmp
mov
callw
cs
inc
and
rcrb
clc
cli
cmp
mov
gs
or
cli
pop
jl
pop
rcll
adc
lock
mov
jecxz
test
add
sub
outsb
arpl
mov
inc
inc
test
sbb
mov
pop
test
adc
jle
jge
and
lahf
jb
dec
cmpsl
popf
push
scas
add
jecxz
popa
add
sbb
push
jb
in
add
adc
cmp
inc
mov
gs
jle
jae
sbb
frndint
mov
ljmp
loop
es
leave
sahf
push
mov
xchg
jnp
mov
hlt
dec
fwait
sahf
fistl
into
jecxz
stos
mov
or
std
mov
xchg
adc
lcall
js
mov
lea
fcomp
xchg
add
push
add
adc
sbb
jp
ds
insl
jns
test
lret
movsl
outsb
mov
mov
lcall
pop
lock
mov
push
insb
adc
pusha
mov
in
jo
ja
fdivrp
stos
js
mov
test
aad
xchg
adc
das
pop
pop
or
inc
out
aaa
xchg
push
leave
outsb
cmp
mov
inc
xchg
cltd
and
out
lds
sub
mov
jbe
je
nop
sbb
clc
push
cmp
das
add
jmp
push
xchg
add
pop
les
and
mov
or
sbb
or
pop
add
cmp
mov
inc
push
and
xlat
cmp
jle
icebp
daa
in
hlt
mov
mov
inc
mov
pop
jo
mov
enter
and
pop
xchg
pop
xor
and
outsl
sbb
mov
loopne
xchg
push
enter
mov
adc
adc
imul
out
movsl
test
pop
mov
dec
cltd
mov
lcall
and
xchg
add
das
adc
xchg
test
sti
fcmovne
push
lret
jo
mov
jg
inc
in
imul
sub
xchg
or
stc
and
sarb
mov
sbb
incl
sub
lds
dec
call
inc
cmp
incl
scas
sub
sti
idivl
leave
ds
popa
call
sub
cmc
xchg
mov
mov
dec
aas
jl
lock
push
ljmp
pop
sbb
dec
sbb
mov
sbb
outsl
pop
sub
mov
jle
incb
or
clc
and
clc
sub
dec
jg
mov
push
adc
hlt
cmp
into
and
mov
jns
into
jnp
sub
out
xchg
push
adc
fisttpl
jmp
aad
aaa
pushl
push
jo
xor
jge
dec
out
fs
outsb
mov
in
or
jnp
mov
mov
jnp
inc
xorl
outsb
sub
mov
out
sbb
inc
sub
out
xchg
in
dec
mov
sbb
pusha
xchg
rcrb
or
add
ljmp
push
xchg
add
daa
std
ss
lds
jmp
sbbl
shrb
jp
xor
push
push
addr16
push
pop
fisttpll
jp
cmpsb
in
pop
cltd
lcall
adc
imul
call
mov
push
out
pop
pusha
and
dec
pop
int3
cmp
pop
sub
mov
mov
xchg
add
push
mov
mov
mov
shr
test
es
sbb
jle
std
inc
and
mov
je
jnp
jns
cmpsl
mov
ss
call
sbb
xchg
dec
lds
xchg
pop
xchg
jle
mov
mov
fwait
test
push
push
int3
mov
popa
or
cltd
adc
add
movsl
jle
pop
mov
and
sub
sbb
xor
nop
imul
push
inc
mov
mov
sub
inc
pop
clc
xor
fs
or
inc
aaa
lret
mov
jns
inc
mov
and
imul
and
out
xchg
add
mov
pop
or
xchg
jle
jbe
add
jmp
pushf
mov
push
inc
dec
adcb
push
and
jnp
xchg
enter
and
or
add
dec
cmpsl
sbb
jmp
adc
jmp
aas
aas
lret
stc
fmul
or
xchg
arpl
movsl
mov
and
ja
je
repz
jl
lods
xchg
data16
mov
inc
cmpsl
mov
pushf
and
stos
push
and
movsb
add
or
stos
or
mov
mov
mov
cmpsb
scas
mov
xchg
mov
mov
scas
adc
aam
adc
inc
loopne
aaa
test
xchg
imul
inc
shl
mov
dec
lock
push
dec
cmpsb
insl
inc
js
sbb
ror
push
mov
cmp
add
lds
test
xlat
arpl
mov
test
xor
xadd
cmp
das
loop
add
adc
popf
cwtl
jge
inc
cld
add
adc
ds
adc
imulb
jmp
imul
shl
lcall
xchg
out
pop
cmp
movsl
dec
outsb
sbb
outsb
mov
fsubrs
dec
js
xchg
pop
pop
in
sub
dec
mov
fmul
movsl
fwait
sahf
dec
aas
sub
repz
in
fwait
cmp
stc
shrl
outsl
inc
push
lea
xchg
or
ds
adc
pop
ret
dec
and
cmp
fdivr
mov
call
in
mov
cli
movsb
adc
jle
mov
cmp
cli
add
aad
cmpsl
xor
ds
das
jmp
js
cwtl
adc
aas
data16
jnp
dec
fists
stc
mov
iret
daa
adc
pop
mov
int3
pop
das
movsb
mov
loopne
pop
shll
sti
jbe
jns
pop
push
push
orb
pop
je
cld
sub
mov
adc
xchg
push
lcall
cld
mov
lea
xor
push
inc
add
inc
pop
adc
into
push
inc
iret
fcomps
add
cmpsb
clc
popf
sbb
hlt
push
pop
dec
data16
jle
sbb
mov
fs
jmp
pushf
inc
lds
jmp
add
cmpsl
call
mov
out
and
dec
mov
sub
and
pop
xor
movsb
dec
in
sbb
ret
clc
xlat
rorl
xor
dec
dec
adc
hlt
mov
shlb
sub
jo
mov
xchg
lds
cmp
adc
sahf
xchg
data16
jg
popa
popf
scas
mov
lock
mov
xchg
adc
mov
cwtl
test
int
out
inc
push
mov
movb
xor
push
cmp
dec
inc
pop
inc
jmp
scas
jmp
jae
mov
cmpsl
jo
out
pushf
insb
jge
xor
in
and
push
faddl
loop
mulb
mov
push
cmpsl
jb
mov
mov
sub
test
rcl
xor
pop
shlb
inc
pop
or
mov
mov
sbb
pop
mov
xchg
mov
jae
xchg
dec
mov
loope
sub
shll
mov
scas
mov
push
imul
cmp
jecxz
push
or
test
sahf
loopne
daa
mov
pop
fcompl
cli
sub
xor
pop
cltd
pop
xor
bound
sbb
cmp
loop
loopne
fcomi
mov
out
ljmp
cmpl
data16
pushf
fnsave
aad
scas
jo
jo
cwtl
sbb
sti
lret
xchg
ljmp
test
jmp
cmp
cmp
pop
lock
out
ficoml
xchg
mov
jae
jmp
adc
xchg
cmp
insl
in
sbb
popa
iret
test
fwait
sub
rcll
fimuls
repz
pop
in
dec
push
call
cmc
and
pop
pop
cmp
pushf
fcomps
jns
test
and
out
add
cmc
idiv
imul
fldcw
jo
fdivrl
loopne
lahf
sub
dec
and
aad
enter
cmp
dec
stos
cmc
mov
jge
insl
or
fldl
xlat
cltd
in
mov
outsb
daa
mov
ja
cmp
lcall
out
and
cmc
jmp
pusha
movsl
adc
jbe
sbb
pop
dec
or
movsl
aad
adc
push
sub
jnp
lcall
lods
xchg
xchg
push
jecxz
jg
fs
shll
nop
mov
adc
push
fstpl
mov
inc
add
inc
jo
popf
push
test
mov
add
cmpsb
pop
pop
pop
xor
sub
out
lahf
cmp
jg
arpl
cmp
out
test
mov
call
ror
cli
mov
sahf
pop
dec
and
xchg
je
and
add
jae
cmp
push
popf
fwait
or
add
fadd
inc
sub
std
adc
add
int3
dec
negb
push
jne
xorl
test
xor
mov
inc
add
sub
lods
fidivrl
xor
das
pop
xchg
mov
sbb
fstpt
jecxz
pop
or
cs
or
pop
or
add
repnz
jbe
stos
mov
pop
adc
ror
xchg
out
mov
jbe
and
stos
test
movsb
push
pusha
xchg
mov
adc
out
test
and
aam
fnstsw
xchg
fld
xor
pushf
and
loopne
in
popf
ret
call
pop
popf
fnsave
lcall
enter
je
enter
bnd
sbb
sti
ja
fidivrl
jno
pushf
inc
cltd
in
repnz
inc
push
repz
pusha
and
xchg
cmp
div
sahf
stc
mov
mov
scas
dec
je
jnp
jbe
jg
pop
rclb
mov
mov
pop
add
test
xchg
push
fcoml
xchg
out
pop
push
enter
les
in
data16
ficompl
fs
xlat
fidivl
dec
call
out
clc
push
pop
jae
sbb
adc
or
jp
sub
fstpt
sti
sbb
adc
sbb
in
or
rcrb
pop
stos
add
cmpsl
pushf
sbb
test
stc
xor
int3
jo
gs
in
scas
push
aam
fstl
mov
mov
hlt
push
mov
cwtl
and
daa
ds
ja
fcmovnu
push
lock
adc
push
inc
adc
pop
sbb
xchg
addr16
stos
pusha
push
sbb
fcoml
dec
pop
test
ds
mov
hlt
xor
sbb
repnz
fwait
mov
outsl
and
mov
dec
push
mov
add
sbb
loope
popf
pop
lds
lret
in
in
cmp
and
mov
out
adc
aam
int3
dec
mov
pop
fcomps
mov
xchg
mov
or
fiadds
fistpl
jecxz
pop
mov
inc
push
and
ret
mov
add
fdivl
je
lret
jno
push
popf
sbb
in
jg
dec
scas
dec
sub
jle
stos
sbb
push
mov
pop
iret
and
inc
adc
inc
jge
push
or
icebp
jne
inc
push
fdivrl
in
adc
cmp
mov
push
loopne
jns
inc
jmp
pop
cmp
lcall
mov
sub
jns
mov
push
mov
cwtl
mov
bsf
push
pop
movsb
in
or
loope
rcrb
cmp
sub
int3
mov
fidivs
fisttpll
cmp
mov
fsubs
test
dec
movsl
in
and
stos
loopne
mov
sub
pop
imul
and
fdivr
sti
aad
push
inc
dec
pusha
daa
mov
adc
jmp
lock
imul
stos
sub
or
out
into
mov
pop
int
sub
int
xchg
or
or
mov
and
outsb
call
dec
inc
cmp
adcl
jae
lods
and
movl
popf
xlat
or
mov
ja
jbe
add
leave
je
enter
push
inc
std
mov
mov
repnz
addr16
jo
push
std
cmp
inc
ds
sub
imul
adc
push
push
pop
cld
inc
aaa
dec
adc
fsubr
push
inc
out
xchg
orl
in
cmp
mov
xor
cld
clc
mov
push
mov
loope
jne
test
sub
out
lea
mov
pop
sahf
sbb
xor
mov
dec
aaa
mov
mov
adc
jmp
arpl
or
lret
das
mov
stos
vshufpd
jge
pop
mov
cmp
ds
mov
mov
es
into
jmp
sbb
ficompl
pop
decb
mov
repnz
fistpll
test
fs
sub
add
aaa
add
jnp
mov
mov
inc
orb
int
call
push
stc
iret
call
call
rcll
pop
jo
inc
cli
cmp
shrb
adc
stos
xchg
push
fiadds
sub
mov
je
ret
mov
or
jbe
mov
nop
mov
fcoml
push
fildll
sub
into
and
mov
and
outsb
sbbb
xor
add
gs
pushf
cmpsb
and
jl
loopne
push
sub
adc
lret
testb
or
add
mov
es
scas
adc
mov
dec
cld
cmp
arpl
push
push
cld
adc
xchg
push
mov
aam
xlat
iret
inc
or
lret
std
aas
stos
roll
and
imul
adc
mov
mov
add
gs
dec
push
test
sub
fnstsw
pop
cmp
dec
negl
lret
xchg
arpl
out
and
mov
mov
cmp
decb
clc
ja,pn
add
mov
mov
adc
sub
enter
xor
inc
cmp
mov
jae
fsubp
lcall
cld
pop
jp
xlat
cmp
bound
add
int3
mov
loopne
pop
or
scas
sahf
call
pop
push
inc
imul
sbb
stos
cmp
inc
dec
sub
jns
dec
jmp
dec
sbb
cmp
inc
mov
cld
data16
cmpsl
out
leave
and
call
shlb
loopne
fcompl
arpl
into
xor
dec
push
jbe
add
xlat
pop
sub
cmc
fldt
jmp
or
int3
adc
add
gs
cmp
ja
xchg
mov
sti
dec
jne
xor
leave
leave
jno
xor
pop
incl
sbb
ror
movsl
mov
repz
lock
lea
inc
lahf
cmp
and
adc
insb
icebp
fcoms
xchg
int
xor
xor
sbb
sub
mov
mov
icebp
test
mov
sbb
fdivl
je
daa
inc
mov
cli
sbb
sbb
mov
fidivl
and
aas
imul
pop
aad
mov
sbb
push
addr16
mov
push
sbb
cld
je
push
invd
jge
pop
push
incl
int
push
cltd
push
and
subl
adc
xchg
adcb
aaa
mov
divl
lcall
or
and
and
and
sub
stos
cmp
mov
lahf
mov
orl
mov
clc
cmp
pushf
sti
mov
ret
sub
je
mov
lds
push
test
inc
dec
and
loopne
rorl
push
lret
test
addb
sub
fs
sti
pop
xor
out
push
test
mov
scas
in
stc
nop
lods
aas
test
or
push
mov
jne
mov
or
push
adc
das
cmp
jl
bound
repz
mov
lds
insl
inc
jb
cmp
pop
fiadds
pushl
test
cmp
ret
mov
jecxz
xchg
pop
stos
data16
pop
les
testb
or
xchg
jo
iret
jle
fldcw
pop
sbb
pop
mov
mov
test
push
adc
dec
cs
push
add
test
scas
ret
iret
sub
push
js
jg
lds
ret
movsl
mov
loopne
pop
mov
lock
call
inc
arpl
inc
outsl
mov
vpcmpgtb
fmul
insl
outsb
sbb
cmp
fisubl
outsb
addr16
stos
enter
addr16
dec
jb
in
cmpsl
pop
mov
inc
test
xchg
loop
sbb
mov
cwtl
cmpsb
mov
cmpsl
xchg
mov
fnsetpm(287
push
pusha
mov
outsb
into
mov
xor
call
xchg
rcll
test
sub
sub
imul
sub
mov
sbb
mov
aam
mov
addr16
cld
pusha
push
jmp
xor
adc
mov
int3
sub
and
add
cli
fs
inc
aas
movsb
dec
test
call
sub
pop
int
add
push
or
lahf
das
jle
in
mov
loopne
fistps
push
jns
sub
loop
adc
loope
lods
lahf
jbe
std
lret
xchg
jp
mov
mov
stc
shl
push
mov
push
shll
mov
dec
adc
jp
cmpsb
fcmovnb
jecxz
and
and
mov
adc
cs
clc
insb
lret
test
mov
dec
xor
rcr
dec
jbe
int
movsb
mov
jnp
dec
fcompl
or
in
leave
aad
mov
ss
push
lcall
loope
pop
sub
xorb
loope
insl
mov
sbb
cmp
imul
add
mov
adcb
xlat
out
pop
aas
sbb
or
mov
push
cmpsl
int3
fcompl
mov
add
adc
je
jmp
pop
cmp
jb
mov
mov
or
mov
or
out
shrb
jecxz
das
fs
fsubrl
aam
push
popf
lret
push
adc
mov
shrb
lret
inc
xlat
std
out
scas
xchg
mov
push
xor
xchg
les
daa
dec
add
int3
add
sbb
fwait
ljmp
fdivr
sub
aaa
mov
sbb
pop
dec
xchg
mov
scas
mov
test
inc
icebp
mov
cmpsl
out
lahf
xchg
fnsave
pop
pop
cmc
dec
jp
xchg
fs
int
adc
xor
jne
dec
push
and
dec
pop
mov
jmp
jo
repz
mov
ljmp
test
mov
mov
out
cmp
cmp
xor
fsts
jno
xor
jecxz
mov
ljmp
xchg
daa
data16
pop
je
dec
pushl
jl
clc
pop
out
dec
mov
rcll
loope
mov
ficoms
ja
ss
jo
stos
pop
test
cmp
outsl
outsl
adc
outsl
cmp
mov
adc
data16
insl
out
inc
jns
das
dec
dec
imul
cmp
mov
jb
inc
loopne
mov
dec
ret
dec
push
add
push
pop
xchg
je
repz
movsl
sbb
loop
sahf
mov
lahf
push
pop
inc
ret
xor
outsl
push
dec
daa
pop
aad
xchg
in
insb
xchg
stos
lret
loope
mov
stos
pop
inc
pop
xchg
lds
mov
jp
and
addr16
cmp
jb
jp
adc
xor
or
lcall
dec
cmp
lret
adc
or
push
push
les
fmull
ret
xchg
popa
cmc
dec
fs
mov
sahf
arpl
sub
jge
fsubrl
rol
xchg
xor
inc
or
xchg
fs
outsb
pop
stos
push
sbb
add
add
arpl
out
adc
stc
jnp
imull
mov
loop
sub
test
jbe
and
xchg
clc
xlat
sti
clc
out
mov
and
add
int3
pop
sub
pop
outsl
fwait
stc
mov
xor
cmc
jmp
cs
call
das
or
mov
jl
out
mov
push
mov
in
pop
sbb
push
jmp
fs
inc
adc
adc
outsb
nop
mov
push
fs
test
bound
scas
out
mov
dec
jo
pop
lods
insb
es
mov
cmp
inc
mov
mov
sbb
loopne
outsl
pop
leave
dec
fwait
popf
push
cwtl
mov
fwait
out
in
hlt
sbb
mov
pop
or
ficoms
dec
add
sbb
xchg
cltd
int3
subl
cltd
cmpsb
popa
mov
es
jbe
call
pop
jnp
out
cmp
roll
scas
cli
jmp
mov
jns
js
sub
test
es
into
fistpl
jae
push
bound
pop
sub
fistps
loopne
insl
mov
sbb
pop
jae
pop
iret
jg
adc
add
insl
pop
sub
out
push
xor
add
dec
mov
sub
fdivs
cmpsl
sbb
mov
dec
repz
cmp
test
into
inc
sub
enter
add
push
dec
ret
fs
xchg
mov
loop
dec
lea
cmpsl
mov
clc
add
xchg
cld
pop
lds
call
inc
push
add
mov
repnz
imul
dec
fnstsw
fmuls
mov
enter
pmaxub
lods
mov
mov
orl
add
xchg
pushf
cmp
pop
xchg
sbbl
adc
popf
icebp
les
andl
push
sbbb
daa
fdivrs
test
adc
and
gs
shll
push
shl
and
jmp
cmp
aam
cmpsl
adc
stos
jae
jnp
cli
inc
sub
insl
push
pop
jecxz
pop
or
or
dec
and
je
cmp
mov
add
stc
mov
mov
les
mov
jo
mov
inc
movsb
pop
xchg
push
popf
test
in
out
and
mov
lahf
ret
in
repz
lcall
mov
xchg
into
pop
pushf
jb
pop
je
sarl
pop
fnstenv
clc
nop
mov
mov
ucomiss
jae
insl
int3
or
xor
jbe
mov
pop
repnz
mulb
rorb
scas
push
bound
loope,pt
push
mov
mov
push
mov
aad
cmpsb
arpl
sbb
pop
mov
mov
andl
dec
push
decl
fisttps
dec
adc
xor
shll
ret
jmp
inc
push
enter
dec
pop
cli
jmp
mov
cmpsb
pop
lds
xlat
inc
jbe
pop
adc
xor
cmp
push
sbb
dec
adc
rcl
xchg
inc
gs
adc
xchg
int3
sysret
frstor
add
js
adc
push
stos
pop
aam
and
pusha
cli
sub
adc
dec
xchg
iret
adc
mov
pop
inc
cltd
testl
inc
jo
mov
fmul
test
nop
pop
xchg
xchg
push
jge
push
sub
sub
or
popa
mov
pop
push
loopne
test
in
jmp
cs
sarb
enter
inc
xchg
inc
push
loop
in
add
lcall
jmp
or
cs
adc
sbb
mov
xchg
test
push
add
pop
add
adc
or
mov
in
vsubps
mov
sbbb
sbb
das
pusha
inc
cwtl
jne
inc
push
bound
add
inc
mov
insb
sub
pop
add
push
fwait
arpl
fsubr
xchg
ss
sub
mov
inc
sbb
push
aaa
daa
fwait
jmp
mov
sbb
push
fnstcw
cmpsl
pop
push
notb
call
jmp
leave
enter
scas
inc
xor
mov
xor
xor
lds
arpl
jl
sub
push
sub
dec
insl
add
aad
out
and
enter
cltd
lret
push
xchg
sbb
sub
pop
xchg
call
xchg
stos
ret
inc
test
cmp
fisubrl
push
sub
divb
sub
push
data16
sub
mov
push
movsb
in
mov
push
or
adc
fwait
movsl
je
stos
inc
push
pop
in
insl
cltd
and
push
add
shrl
insb
jo
push
mov
and
mov
sbb
movsb
stos
popf
or
xor
insb
sub
fidivrs
push
js
adc
or
pop
fstpl
movsb
enter
cmc
push
xor
xor
push
test
scas
pop
outsl
cmc
push
sbb
sbb
in
xor
mov
fistps
push
jge
sbb
push
xchg
cli
mov
sti
dec
hlt
sbb
dec
imul
les
sbb
push
and
push
or
inc
shrl
scas
iret
enter
mov
test
scas
into
cmp
xor
repnz
arpl
xchg
jo
negl
dec
xlat
test
jbe
iret
pop
mov
lret
adc
int
xchg
add
jne
jb
icebp
adc
addr16
cmpsl
cmp
mov
pop
mov
sti
xor
fs
into
lcall
cmp
movsb
hlt
inc
shl
pushf
xor
movsl
fcmovnb
push
inc
in
das
inc
outsb
push
inc
sub
popa
or
jb
sub
dec
jo
daa
jp
or
fcos
ret
ds
scas
dec
xchg
jl
pop
sbb
shl
jl
sub
fldenv
fnstenv
jg
es
cmp
in
and
into
cmc
add
test
les
pop
adc
pop
fmuls
ret
dec
cli
add
inc
hlt
test
aam
mov
mov
and
push
inc
insl
pop
push
cwtl
addr16
stos
and
leave
add
fcompl
xor
mov
rol
fdivrl
push
sub
add
lods
mov
jge
dec
mov
xchg
ljmp
mov
pop
jo,pt
les
dec
rcl
stc
push
mov
sub
push
fmul
jbe
dec
mov
dec
pop
sbb
shlb
and
js
andl
xor
xor
out
mov
data16
push
xchg
test
lds
stos
lea
or
mov
push
or
xor
push
iret
dec
jge
xor
fwait
repnz
jmp
out
sub
or
lret
jp
andl
adc
sti
adc
pop
xor
adc
sahf
imul
sub
add
lahf
pop
or
push
call
mov
aaa
incb
in
and
mov
test
lcall
add
out
pop
jecxz
pop
js
into
mov
dec
mov
mov
or
shlb
cmp
bound
push
mov
mov
test
call
inc
adc
fildl
fcomip
and
pushf
fcmovb
cmp
in
pop
pop
sahf
dec
fimuls
mov
pushf
mov
push
push
jge
xorl
repnz
sahf
or
iret
push
adc
pusha
mov
mov
fistps
shll
lods
into
cmpsb
sub
jecxz
cli
or
into
push
push
arpl
int
sub
push
movsb
push
scas
repz
bound
push
push
or
cmp
mov
rcll
shlb
sti
outsl
or
popa
js
xor
inc
lods
cmp
aas
ss
mov
sub
lods
ss
ss
fdivp
out
jecxz
inc
shll
jg
mov
int
xchg
sbb
pop
lret
lock
repz
add
scas
lret
push
daa
xor
jbe
jg
sub
repz
call
push
mov
movl
scas
jle
icebp
int
stc
pop
int3
movsb
mov
daa
sti
xchg
ljmp
cmp
pop
xchg
mov
and
add
dec
lret
push
out
add
shrb
add
popa
idivl
push
add
jg
ret
inc
push
or
or
insb
aad
jo
stos
dec
dec
xor
cmpsl
testl
push
sub
mov
gs
test
xchg
add
ret
mov
test
insb
aam
test
sbb
enter
mov
push
or
fsubrs
outsl
fistps
enter
xor
push
test
popf
in
cmp
mov
inc
cmpsl
jae
mov
and
lahf
test
push
pop
add
fsub
xor
jb
push
stos
jne
lret
mov
fucomip
ds
outsb
xor
and
and
xsavec
xchg
pop
sti
movsb
cmc
arpl
jae
jecxz
iret
pop
push
add
lea
xchg
inc
push
in
ret
cmp
mov
cmp
and
clc
jae
data16
daa
std
push
lret
ss
push
push
add
out
add
outsl
cwtl
mov
sub
pop
cld
fwait
push
sbb
push
sub
add
jae
shl
inc
dec
xchg
mov
jmp
cmp
stos
movsl
pop
loope
out
ficompl
mov
sti
and
add
lcall
test
movsb
es
in
or
dec
mov
int3
xchg
xchg
push
cs
outsb
lcall
lds
andl
mov
imul
jmp
loop
ret
push
loope
jnp
pushf
dec
xor
outsl
mov
outsb
daa
mov
sub
mov
dec
jae
iret
in
xor
pop
sbb
adc
pop
xchg
ret
lods
push
loopne
pop
cmc
lahf
scas
or
xorl
cwtl
mov
push
jle
xor
cmpsb
pop
aas
call
mov
add
dec
push
loopne
mov
push
scas
cmp
push
mov
pop
lods
popa
and
jecxz
jp
mov
xor
xchg
nop
fwait
inc
shl
pop
jmp
es
or
add
fildll
shlb
fucomip
mov
les
cltd
les
xor
sbb
test
in
xchg
out
and
xchg
lock
sub
rol
roll
int
adc
jp
adc
adc
mov
cli
adc
nop
dec
cmpsl
aas
les
lret
cmp
mov
lea
insl
addb
adc
fldt
lcall
xor
call
xor
stc
mov
push
fiadds
mov
pop
jg
or
cltd
add
mov
jbe
stc
scas
pop
nop
mov
mov
inc
xchg
sbb
addr16
repnz
mov
fstps
pop
aas
inc
and
daa
lret
movsb
pop
pop
in
cs
repz
es
scas
aaa
cmp
outsl
rep
mov
shrl
mov
rorb
mov
jo
mov
int3
rclb
leave
ds
daa
inc
dec
addr16
push
filds
imul
pushf
dec
inc
decb
sarb
nop
ja
mov
xchg
scas
xchg
rcr
pop
jae
jge
mov
movsl
lods
sub
int
mov
push
cmc
jbe
arpl
insl
aad
push
ficoms
gs
pop
dec
cmpb
jno
lcall
mov
test
out
cmpsb
arpl
lret
lods
sbb
out
std
imul
addr16
imul
ja
int3
lds
cli
inc
psllq
jp
mov
rorb
push
nop
xor
cwtl
xchg
mov
push
test
mov
push
test
jb
aaa
aam
mov
mov
lret
jo
ret
xchg
sahf
outsl
lods
push
adc
mov
inc
xchg
mov
jmp
xchg
and
enter
push
aaa
sub
movb
xchg
jp
loopne
adc
cwtl
loope
xchg
xor
cmp
dec
jne
and
jns
jp
out
out
test
jp
inc
inc
xchg
gs
in
push
jmp
xchg
mov
push
arpl
jb
pop
lret
into
push
in
arpl
add
lock
push
push
jmp
xor
inc
mov
inc
jo
insb
out
enter
fbld
arpl
mov
cs
inc
dec
push
fsts
in
inc
jmp
inc
rcrl
outsb
sbb
mov
inc
cs
pop
mov
ret
nop
or
negl
add
pop
push
pop
ljmp
iret
mov
jns
aad
pop
imul
out
jne
popf
mov
insb
sub
mov
subl
inc
stos
dec
movsl
idiv
mov
iret
in
outsl
cmp
data16
sbb
int
sub
ficoms
push
add
rcll
or
in
xlat
sub
scas
mov
push
pushf
dec
roll
mov
les
sub
or
mov
push
outsb
shrl
out
test
and
enter
jg
outsb
inc
clc
mov
jl
call
out
xor
mov
cli
pop
out
clc
cmp
ja
pop
sub
cwtl
xchg
fcmovnu
pop
or
pushf
popf
mov
insb
mov
lcall
dec
xor
lret
leave
add
shll
xchg
je
int3
fwait
scas
cmp
test
mov
lcall
loope
outsb
xchg
fimull
jo
pop
inc
xor
lret
addr16
mov
loopne
ds
cmpb
das
std
cmp
pop
push
cli
mov
inc
fwait
cmpsb
dec
mov
call
cli
insb
or
cmp
in
test
xlat
pop
adc
lods
fdivrs
lock
pop
outsb
mov
fiadds
aas
pop
inc
into
loopne
jno
lods
imull
rorb
mov
add
and
and
pop
ret
mov
pop
addr16
pop
sbb
ficoms
or
mov
adc
fisttpll
aam
mov
enter
inc
fidivrl
loopne
and
xchg
xchg
add
xchg
add
fwait
shrb
test
mov
and
stos
push
fisubrs
out
mov
sbb
mov
cmpsl
xor
cmc
aam
add
jb
ljmp
pop
idivb
std
jecxz
jmp
daa
jge
add
sbb
push
subl
and
sub
add
add
sub
sub
sti
mov
inc
repz
jb
cltd
jns
imulb
jbe
bnd
or
mov
pop
loop
fisttpll
mov
fdivrl
insl
pop
shrb
je
xchg
jle
mov
jl
cmpsl
subb
jg
push
int3
stos
gs
mov
inc
jecxz
shrb
push
iret
xorb
out
insb
sub
dec
add
mov
pop
sub
push
in
and
data16
jle
scas
ljmp
cltd
int
mov
ja
push
jp
mov
mov
scas
xchg
xor
mov
je
test
imul
mov
aad
ja
push
sub
dec
cmpsb
add
xchg
movsb
mov
test
mov
fs
add
stos
fnstsw
jg
xchg
inc
pop
pop
into
jns
adc
mov
lahf
mov
jge
mov
sbb
pop
cs
dec
mov
push
rcl
jecxz
or
fimuls
loopne
inc
cmp
inc
or
add
test
testb
nop
loopne
sahf
inc
sub
dec
ret
dec
sbb
xlat
addr16
sub
xor
mov
stos
sbb
test
add
xlat
and
xchg
clc
enter
test
or
mov
ljmp
popa
push
dec
xor
or
shr
push
sub
adc
lahf
and
dec
mov
rcrl
pop
outsb
pop
ror
imul
mov
jns
test
adc
out
enter
testl
sub
dec
mov
mov
aam
add
imul
cmp
subl
push
or
ds
call
loopne
call
push
les
dec
and
or
sahf
or
fsts
push
testb
out
mov
fcmovb
data16
stos
mov
push
push
fcoml
jle
fldcw
sbb
mov
out
dec
stos
hlt
cmp
js
push
int3
jnp
push
je
clc
out
pop
stos
mov
xchg
sbb
jae
cmpsl
cmp
dec
jbe
mov
cmpsl
adc
xchg
push
pop
idivb
push
push
pop
call
loop
cli
jnp
les
xlat
mov
mov
push
cld
test
ficoml
rolb
mov
jge
ljmp
xor
out
mov
cld
ror
adc
aas
stos
push
jmp
pop
addr16
int3
fstps
ss
mov
fsubs
push
mov
jmp
mov
jge
cmp
dec
inc
push
ss
xchg
ret
xchg
cli
cmp
aas
sub
outsb
orl
int3
clc
js
push
sti
popf
cltd
pop
das
dec
jp
inc
dec
call
mov
xchg
daa
jmp
mov
lahf
add
mov
jmp
outsl
jp
ret
loopne
scas
loope
pop
pop
jae
sarb
or
lock
or
push
push
cwtl
jno
fisttps
lcall
shrb
mov
inc
iret
sub
sbb
lods
jae
mov
xor
or
pop
loope
sbb
xor
repz
mov
push
xor
xor
xor
call
jno
fnstcw
into
dec
sbb
out
inc
sar
cmp
add
mov
sbb
shll
das
dec
cmp
or
aas
push
adc
sbb
das
inc
ficompl
push
stc
add
or
cmp
in
xor
hlt
dec
inc
lret
push
dec
bound
aaa
adc
ss
sbb
adcl
int3
or
ja
orb
flds
popf
mov
pop
mov
jnp
jno
insb
mov
in
xor
inc
mov
gs
mov
or
pop
mov
jecxz
outsl
jb
cli
in
lret
push
mov
dec
cmpsl
inc
push
xor
adc
push
cmove
aam
mov
add
xchg
xchg
push
stc
pushl
jno
cmpsl
inc
jmp
add
data16
add
js
and
xchg
or
and
out
mov
lods
call
hlt
fcmovbe
sbb
push
jne
dec
sub
xor
sarl
orb
mov
fstp
lock
sub
cld
push
fwait
test
inc
mov
sahf
adc
aad
or
sub
dec
xchg
xor
imul
adc
test
repnz
or
sub
test
push
sbb
pop
test
aas
in
mov
mov
fsubl
jo
xlat
push
dec
push
fidivs
xlat
xor
xor
fmull
shrl
decl
push
imul
or
call
rorl
push
fsub
fldenv
mov
push
sub
sub
push
icebp
pushf
stos
pop
imul
jg
insl
mov
lret
and
stos
sbb
or
out
pop
cmp
xor
pop
pop
inc
mov
add
xchg
mov
test
jne
inc
into
pop
les
mov
sbb
push
jnp
flds
movsb
push
push
sbb
js
out
mov
scas
int
add
cld
dec
mov
mov
xchg
xchg
pusha
push
aam
mov
std
loopne
bound
daa
out
and
xorb
mov
jnp
imul
sub
xchg
push
dec
clc
lods
pop
mov
push
mov
rcrl
push
fisttpl
les
and
je
push
jmp
mov
gs
outsl
scas
mov
adc
push
mov
and
mov
insb
adc
fsubl
jl
dec
cmp
push
mov
jmp
cmpsl
hlt
shrb
inc
bound
mov
loopne
mov
xor
push
lahf
sub
push
sahf
negb
stos
or
jmp
popa
adc
daa
gs
cli
aad
add
mov
pop
xsaveopt
orl
dec
dec
xor
insl
sahf
nop
in
pushf
fisubs
test
fcomp
insb
mov
or
out
out
sub
clc
add
movsl
xchg
insl
mov
call
cltd
fisttpl
jnp
pop
pusha
bound
mov
mov
popa
sahf
jno
sub
jae
xchg
add
sbb
out
fisubrs
add
xchg
inc
jp
loopne
inc
fwait
add
xchg
jl
lds
dec
pop
push
shlb
fdivl
adc
mov
mov
ja
xchg
lods
jge
push
enter
mov
push
mov
mov
sbb
jg
mov
les
pushf
cltd
push
lods
mov
lods
or
dec
adc
push
add
test
xor
pushf
add
in
jb
dec
hlt
outsl
xchg
pop
sbb
pop
std
inc
hlt
test
lea
adc
and
scas
cs
arpl
inc
cli
mov
jmp
rclb
js
arpl
inc
add
mov
aam
arpl
sti
aam
or
cmpsl
in
xchg
push
xor
mov
jle
and
insl
aaa
in
jno
jae
pop
ja
or
mov
test
and
sbb
xchg
lahf
ja
call
fsubr
xchg
fldt
mov
sbb
and
cmpsl
nopl
loop
inc
add
cmp
dec
movsb
push
cmpsl
stos
fisttpl
or
cli
push
add
fstps
mov
lods
mov
loop
rep
push
int
pop
cli
sbb
in
in
mov
movsl
mov
ffreep
out
add
in
mov
dec
inc
jg
push
dec
andl
das
xor
cmp
and
and
and
cmp
jne
cwtl
mov
inc
lods
sbb
cmp
mov
mov
ljmp
push
mov
pop
cli
pop
jnp
es
testl
push
pop
clc
imul
mov
fstpt
add
jae
jne
dec
sbb
insl
cmp
jp
sbb
xchg
xor
xchg
and
pop
and
inc
sbb
sub
mov
lea
cmp
lret
xchg
cmp
es
jae
pop
mov
lcall
mov
inc
lods
fstpl
add
or
or
push
mov
mov
es
dec
jecxz
pop
mov
iret
push
push
inc
leave
mov
cli
movsb
cwtl
mov
dec
outsl
scas
insb
ja
xchg
and
push
decl
test
mov
add
cmc
loopne
inc
pop
push
mov
push
add
jae
adc
pusha
lds
pop
mov
test
leave
mov
xor
jg
ja
dec
mov
pusha
xchg
pslld
pop
jmp
outsb
mov
jp
xor
outsl
mov
mov
pop
mov
nop
jge
mov
scas
add
and
sarb
outsb
xchg
lcall
mov
xchg
insb
sbb
std
xchg
repz
jno
adc
ja
xchg
and
jmp
fildl
jb
sarb
adc
dec
cli
mov
outsb
outsb
into
jp
inc
xlat
int
and
xchg
and
sbb
imul
pop
adc
jae
shrb
cmpsl
clc
sahf
sbb
dec
jmp
in
cmp
stos
sbb
jnp
stos
dec
mov
pop
out
stos
scas
in
mov
mov
xchg
lret
dec
jle
lock
adc
popf
test
fcompl
mov
push
data16
sbb
or
mov
call
sbb
jns
jecxz
loop
cmp
into
xor
sahf
and
mov
jb
repnz
or
pop
jae
mov
ss
adc
fstps
scas
outsb
jmp
and
inc
pushf
pop
outsl
aaa
and
adc
add
clc
les
xor
mov
fidivs
jecxz
repz
dec
popf
les
and
xchg
add
aam
or
push
lret
enter
outsb
xchg
std
jnp
mov
pusha
pop
xchg
xchg
pop
movl
mov
inc
out
pop
pop
leave
aam
in
lcall
in
push
mov
adc
arpl
mov
or
or
cld
or
addl
push
jbe
xchg
add
add
inc
jmp
lods
clc
in
or
ss
jbe
inc
cmpsl
scas
adc
or
jb
fmuls
and
stos
xchg
addr16
xchg
out
lds
lea
xchg
adc
mov
add
mov
sahf
adc
lcall
add
sti
push
pop
ret
xchg
pop
push
xchg
scas
cmp
mov
xor
pusha
out
pop
or
jp
add
adc
dec
mov
or
inc
scas
or
adc
mov
pop
inc
jle
or
or
or
jcxz
out
and
push
cmpsl
mov
movsb
jo
insb
pop
push
imul
lds
lret
lret
cs
fcmovnb
mov
adc
xlat
mov
push
push
sbb
std
fsubr
add
adc
pushf
cmpsb
test
outsb
sbb
call
outsb
add
adc
and
sbb
test
adc
mov
ret
cmp
ja
fildl
xchg
outsb
loopne
inc
mov
in
xchg
repnz
in
in
or
dec
cmp
scas
rcrb
cld
inc
xor
pop
sub
add
fisubrl
mov
das
insl
xchg
ja
push
or
test
mov
hlt
outsb
addl
test
leave
dec
je
mov
je
add
add
inc
and
jge
shll
xchg
popa
xchg
rclb
adc
lret
xchg
cld
sbb
icebp
aad
xchg
cmp
mov
cwtl
into
mov
xchg
dec
mov
dec
sbb
repnz
jmp
mov
add
cltd
inc
adc
pop
mov
aad
mov
jmp
sub
clc
rcr
lds
lcall
add
xchg
lahf
loope
inc
rcrb
popa
and
mov
bound
xchg
mov
out
fcmovnbe
or
and
out
mov
stos
iret
dec
xor
pop
dec
or
push
sub
pop
fiaddl
mov
dec
cli
shrl
push
jns
neg
mov
adc
inc
ss
ret
cmp
int
pop
in
out
xchg
movsb
add
xchg
or
adc
push
push
xchg
in
dec
or
daa
repnz
ja
pop
dec
and
mov
fcmovu
loopne
add
in
scas
fcoml
xchg
ss
cmpsb
ljmp
aas
add
pop
cmp
push
js
dec
push
add
repz
jp
xor
add
cwtl
rcl
xchg
and
adc
sub
inc
cli
sub
push
fucomi
jnp
nop
pop
push
js
subb
mov
add
push
dec
jmp
sub
push
or
movsl
xchg
shll
push
insl
fcompl
movsb
subb
divl
or
lock
push
ljmp
fcoml
movsl
rolb
xor
clc
mov
push
pushf
rcl
sti
imul
idivb
mov
add
xor
mov
in
add
cltd
mov
mov
jg
sbb
insb
nop
pop
sbb
and
adc
mov
mov
les
jg
jge
jmp
rcll
mov
adc
lds
xchg
xlat
outsl
addb
jno
addr16
cmp
mov
dec
inc
pop
mov
or
addr16
adc
xor
imul
imul
push
shll
out
sub
or
mov
jle
imul
in
pop
gs
cmp
add
pop
add
fs
ret
push
pushf
aaa
inc
and
pushf
ds
sbb
fldcw
fstps
bound
pop
in
xchg
push
adc
daa
test
rol
xlat
fs
xchg
sub
aaa
outsb
test
insl
add
loope
cmp
mov
mov
adc
jmp
add
test
shrl
pop
add
ficoms
pop
pop
or
and
lock
loop,pn
sti
cmpsl
in
pop
stos
mov
in
imul
jae
add
mov
inc
jmp
pop
std
adc
hlt
cltd
adcb
lahf
push
js
mov
inc
mov
out
sarl
clc
test
sub
add
adc
stos
je
dec
mov
mov
outsl
fsubrl
xchg
pop
inc
inc
sbb
das
sbb
ret
rorb
stos
or
rcll
scas
icebp
dec
xlat
popf
addl
xor
add
shl
adc
and
fwait
and
xor
outsl
into
jl
int3
or
ret
aaa
mov
movsl
and
pop
cli
mov
xlat
leave
xchg
push
movsb
push
div
frstor
scas
loopne
mov
mov
push
jo
inc
jb
jo
or
jae
and
repz
jo
in
push
ficoml
ja
ss
sbb
cmp
xchg
movsl
and
xchg
insl
popf
repnz
out
mov
out
push
pop
loope
add
pushf
sbb
push
push
fsts
sub
ret
mov
and
jbe,pt
popa
mov
aas
pop
test
pop
mov
lcall
push
mov
lahf
lret
dec
dec
imul
mov
xchg
push
push
psllw
xchg
data16
push
aas
hlt
jmp
sbb
mov
int
jl
xchg
or
daa
clc
cmp
sbb
push
adc
leave
in
lahf
insl
movsl
fcom
leave
mov
mov
and
arpl
rcr
and
pop
push
add
sub
sub
inc
jnp
sub
cmpsl
fldt
push
and
sbb
mov
jnp
cli
cld
pop
test
push
add
and
add
subl
das
mov
negl
in
les
pop
cmp
inc
stos
or
enter
jns
js
dec
dec
cmp
orl
lods
inc
rcll
jge
push
test
add
xor
sti
or
jae
rcr
ret
and
sbb
dec
mov
aam
xchg
push
test
mov
jp
mov
or
lods
cmp
ret
or
subl
push
out
adc
pop
mov
cmp
add
cmpsl
icebp
fs
les
jo
push
jae
fildl
movsb
in
cmp
popf
adc
std
test
mov
jns
cmpl
cmp
mov
mov
daa
pusha
or
xchg
mov
jbe
gs
roll
dec
test
aam
daa
add
sahf
adc
aas
push
outsb
lret
rolb
sbb
and
aas
inc
or
adc
xchg
nop
repz
addr16
push
loop
mov
imul
cmp
mov
les
pop
or
and
test
mov
enter
int
cmp
iret
add
dec
xor
loope
jp
dec
cli
dec
push
iret
movsl
mov
ss
scas
into
add
and
inc
mov
jae
sti
rcl
sub
add
pop
iret
dec
jg
push
mov
in
mov
push
inc
idiv
xchg
out
out
jae
add
add
sub
fistpl
test
pop
mov
aad
adc
add
lahf
orb
mov
pop
xchg
adc
stos
dec
rol
test
pop
sti
in
mov
test
inc
ficoms
gs
cld
fistpl
mov
adc
mov
call
inc
or
repz
dec
push
shll
sub
xchg
add
cld
addr16
hlt
imul
ja,pt
pop
pop
sahf
pop
ja
xchg
movsl
cmpsb
sub
xlat
pop
filds
or
push
jne
scas
pop
mov
or
xchg
and
arpl
jecxz
cmp
iret
mov
js
cmp
cld
xchg
loopne
mov
imul
mov
jns
cmpsl
mov
stos
je
and
mov
pop
dec
add
insl
repz
mov
dec
xlat
dec
jb
popf
add
adc
inc
lods
jge
sub
loope
xor
sub
shlb
mov
sbb
pop
cmc
mov
adc
sbb
fidivs
push
pop
xor
xor
push
jmp
sub
lods
insl
hlt
rclb
cmpsl
or
xor
mov
int3
add
cmp
adc
cmp
inc
rcrb
push
jo
mov
mov
push
mov
repz
arpl
adc
out
jmp
lods
sub
xor
sub
pop
aaa
adc
pop
inc
sub
xor
lahf
pop
mov
dec
dec
mov
fwait
arpl
les
aaa
cmp
call
lods
fs
aad
ds
icebp
xchg
test
push
bound
adc
cmc
loopne
push
stos
dec
sbb
jb
out
jne
jae
dec
adc
sbb
arpl
pop
cltd
mov
inc
jne
insl
mov
daa
add
sub
dec
jecxz
adc
cmpb
mov
imul
xchg
mov
jns
bound
cld
shll
push
sub
movsl
mov
mov
inc
inc
loop
jb
mov
mov
lahf
sub
or
mov
stc
sbb
mov
mov
in
jo
enter
negb
aas
insb
imul
push
call
das
pusha
or
mov
mov
aas
notl
jp
lods
in
push
test
mov
aam
rorl
incl
sub
sbb
push
add
jmp
ljmp
ffreep
out
add
push
inc
cmp
stos
push
pavgb
push
dec
enter
sub
or
add
and
sahf
and
push
insb
adc
shlb
sbb
les
mov
jp
je
xlat
cmpl
jp
ljmp
mov
movsb
jp
jns
leave
cmp
shrb
lret
xor
mov
in
push
mov
jbe
ljmp
mov
dec
and
daa
and
cmp
test
outsl
pop
les
jbe
iret
mov
inc
xor
insl
mov
sbbb
xor
cli
movsl
and
jae
mov
dec
xor
mov
repnz
int3
xchg
sub
push
adc
inc
lret
pop
outsb
add
outsl
cmpsb
or
xchg
push
pop
push
ret
hlt
sub
lods
ret
add
adc
xor
arpl
fisubrl
out
cmpsl
lea
cmpsl
imul
out
sbb
dec
sub
int3
fs
std
push
dec
pop
mov
jns
mov
mov
fsubl
aad
pop
push
outsl
imul
scas
ja
dec
jnp
jns
inc
mov
pop
mov
cli
inc
jnp
dec
fdiv
inc
in
cmp
cmpsb
lretw
popa
enter
pop
cmpsl
mov
das
dec
sub
das
sahf
dec
inc
sub
cs
repnz
inc
test
pop
adcb
adc
lret
add
call
or
roll
xchg
pop
roll
imul
sbb
leave
mov
lcall
aas
xor
cmpsb
lea
pop
fistpl
ffree
cmp
lods
pushf
stos
hlt
push
sbb
out
lea
and
push
loopne
mov
dec
sarb
cmp
js
cli
stc
in
pop
jmp
in
cltd
es
movl
dec
cli
fsubp
fdiv
xchg
and
wbinvd
out
sub
aaa
mov
xchg
xor
insl
dec
bound
mov
int
cmp
fwait
xor
xchg
mov
mov
xor
push
scas
ds
movl
xchg
mov
ficoms
addb
stos
rorl
out
and
ret
repnz
jmp
je
jl
jo
mov
sub
bound
pop
fs
repz
mov
mov
mov
jno
cmp
push
pop
sub
mov
arpl
add
adc
mov
push
adc
cli
xchg
or
lods
imul
fcomi
dec
dec
stos
jmp
sub
cmp
xchg
repnz
push
insb
cld
fbstp
adc
dec
or
push
cld
lock
push
mov
xchg
mov
xor
js
dec
adc
jmp
out
adc
mov
dec
jl
push
pop
inc
dec
or
push
ficoml
repz
cwtl
cmp
jo
loope
mov
pop
dec
add
sbb
insl
cmp
mull
jbe
xchg
inc
in
cmp
fnsetpm(287
cmp
xchg
iret
mov
xlat
sbb
test
scas
and
das
inc
xchg
cs
adc
sbb
aaa
push
mov
or
and
hlt
or
push
and
jp
adc
mov
mov
loop
inc
jnp
mov
jle
xchg
push
cmpsl
inc
or
fnsave
mov
xchg
bound
sub
insl
sbbb
aam
ret
test
cmp
push
arpl
push
sub
daa
lahf
xchg
int
ss
insl
aam
les
stc
imul
mov
repnz
mov
popf
popf
lds
lahf
cmpl
lea
iret
notl
popf
repz
and
jmp
scas
push
inc
cmp
iret
xlat
jo
sahf
sub
inc
xlat
jo
addr16
push
mov
push
sbb
mov
std
ljmp
repz
testl
xchg
outsb
sub
or
pop
pusha
dec
popf
dec
push
xor
test
adc
pusha
negb
lods
xor
into
pop
std
dec
outsl
cmpl
pop
dec
mov
in
cwtl
ret
push
mov
xchg
pop
add
and
inc
mov
mov
xchg
push
xchg
sbb
adc
in
mov
in
push
imul
pusha
mov
jle
cmpsl
pop
xor
ror
jae
sbb
jmp
movsb
loop
call
jmp
out
fsubs
or
loopne
scas
sbb
mov
insl
add
adc
movsl
enter
push
lcall
push
add
lods
pop
shll
in
pop
jb
fmuls
dec
pop
cmp
adc
xor
or
cli
rcl
pushf
cli
adc
inc
inc
dec
add
push
push
inc
mov
dec
push
js
sti
push
sbb
pop
aam
hlt
push
and
mov
push
out
std
sub
jp
addr16
add
xor
push
stc
call
adc
push
test
mov
aad
push
shrb
in
and
loope
jnp
lods
and
mov
pop
out
mov
out
xor
inc
jl
fsts
mov
cmp
or
xchg
comiss
mov
test
cmp
and
mov
or
mov
xor
inc
or
xchg
cld
cmpb
xor
and
add
adc
inc
aad
add
xchg
sub
fistl
loope
insb
pop
gs
movsb
inc
cmp
pop
dec
cmp
fmulp
jne
in
shlb
subps
jmp
and
out
xlat
jle
dec
mov
add
fistl
jbe
out
sub
ljmp
jb
test
enter
add
mov
dec
or
sub
addr16
pop
jmp
mov
je
cwtl
inc
stc
xchg
and
icebp
movsb
cli
into
imul
bound
cmp
test
jmp
notl
dec
ret
andb
mov
adc
int
dec
add
add
js
xchg
dec
popf
mov
mov
mov
xchg
push
arpl
les
sub
int
popf
leave
dec
sub
dec
aaa
mov
es
push
addr16
inc
xchg
pop
lods
leave
jp
mov
mov
in
int
dec
test
je
add
push
mov
aam
push
in
mov
or
cwtl
push
inc
cmp
data16
stc
arpl
jge
sbb
popa
jl
sbb
mov
idivl
mov
pusha
lds
xchg
inc
fsubs
daa
leave
pusha
xor
test
xchg
jle
ljmp
test
pop
fildll
test
test
loopne
stos
jge
lcall
add
das
lock
pop
jb
test
xlat
jp
inc
mov
repz
sti
mov
test
mov
xlat
push
dec
addr16
jmp
iret
ja
pop
aas
pop
sbb
pop
add
rorb
leave
xchg
pop
test
std
shlb
and
and
or
push
push
mov
xor
xchg
jnp
and
inc
jb
in
pop
and
int3
sbb
jnp
daa
xor
lods
sbb
hlt
and
sarb
and
les
push
push
leave
xchg
jb
push
lds
sbb
nop
add
pop
push
xchg
mov
push
sub
inc
cs
pop
xchg
aaa
nop
lret
inc
inc
inc
xchg
test
mov
mov
sub
xchg
inc
pop
cmp
enter
pop
inc
sub
inc
mov
lcall
aam
nop
xor
xchg
push
inc
jg
cmpsl
popf
fistl
jne
xor
jmp
push
gs
push
dec
lcall
mov
cmp
popf
sub
in
aam
sub
pop
add
cmpsl
jae
bound
enter
in
jmp
rcl
cmp
movsb
push
test
addr16
repnz
out
lcall
xor
test
sub
mov
jmp
add
in
out
mov
fs
fstpt
jnp
clc
xchg
out
aam
stc
mov
adc
js
in
aam
cmp
jecxz
cmp
cmp
lods
xor
pop
push
lcall
xor
je
lds
sub
pop
daa
shrl
mov
or
les
divl
mov
inc
jbe,pt
imul
or
dec
sti
xchg
cmpsl
and
push
loope
in
std
rclb
mov
jge
inc
daa
sbbb
push
jbe
mov
ss
and
mov
rcl
xor
pop
jecxz
and
jl
xor
sbb
clc
aad
mov
mov
sahf
iret
sbb
pop
ss
lret
and
and
arpl
adc
jo
adc
out
gs
sbb
ficoml
adc
mov
jge
sbb
adc
lds
arpl
negl
in
mull
fsubrs
inc
mov
inc
int
insb
or
push
pop
sub
adc
cltd
xchg
inc
add
fwait
aam
cmp
cs
lret
mov
test
pop
add
add
mov
adc
cmp
sbb
mov
lahf
xor
clc
sub
movsb
and
shrl
xor
xor
pop
in
or
frstor
push
cmp
imul
jl
push
fs
dec
cmp
cmp
add
pop
addr16
push
repz
adc
inc
std
pop
pusha
jmp
jae
push
sub
pushf
mov
mov
push
test
mov
subb
mov
jnp
add
adc
and
stos
dec
ljmp
cltd
lds
mov
lcall
insl
mov
lahf
shrb
jae
pop
cld
outsb
cmp
or
dec
leave
dec
mov
adc
adcl
out
sbb
int3
dec
sbb
mov
aas
shrl
push
imul
cwtl
inc
jae
arpl
mov
pop
xor
cli
ficomps
out
mov
out
imul
jmp
add
cmp
fsubr
jo
cmp
and
daa
sbb
iret
push
fwait
push
rolb
push
mov
mov
test
adc
cmpsl
test
enter
sbb
pop
xor
imul
inc
lock
cmp
xor
add
sbb
enter
adc
je
into
aaa
inc
shll
in
mov
add
std
aam
add
subl
xchg
into
enter
sub
inc
xlat
adc
xchg
sub
dec
mov
sub
mov
cmp
inc
dec
fisttps
addr16
xor
dec
fs
addr16
mov
aad
mov
dec
or
cmc
jmp
pushf
dec
mov
pop
push
rcrb
inc
lahf
mov
sti
add
sub
mov
ficomps
fistpl
call
shll
loope
test
int
jp
push
xchg
pop
rcrb
mov
call
mov
and
test
mov
jae
mov
mov
pushf
popa
or
hlt
aaa
cld
xorl
repnz
sbb
aas
mov
adc
sbb
cmp
mov
mov
xchg
jno
xor
insl
lret
inc
movsb
pushf
and
lods
jbe
syscall
in
push
push
dec
inc
int3
adc
shrb
icebp
pop
dec
loopne
stc
or
jge
mov
dec
jne
adc
lea
adc
pop
gs
test
push
sbb
loope
xor
and
cli
xchg
inc
repz
movl
mov
aam
xor
xchg
sti
add
arpl
out
adc
dec
fwait
ja
test
out
cwtl
stos
pop
sbb
mov
jae
clc
ficoms
xchg
inc
or
jbe
xchg
push
addr16
cmpsl
jnp
mov
inc
sarb
inc
outsb
mov
mov
or
outsb
outsl
mov
cmp
add
movsb
jne
loopne
jno
sahf
jecxz
cmp
and
jne
iret
clc
pushf
cs
sbb
jns
sbb
in
lret
mov
movsb
mov
xor
int3
mov
popf
cmp
mov
xchg
pop
inc
mov
sbb
lcall
lods
in
cmp
xchg
les
in
inc
hlt
loop
add
mov
jne
jmp
imul
imul
push
adc
loopne
mov
test
fwait
xor
ret
mov
mov
add
cmpsb
mov
sub
jno
mov
cmp
dec
sti
in
mov
dec
xchg
mov
sub
push
pop
pop
and
and
pop
loopne
pop
dec
dec
popa
scas
sub
xor
out
lret
cmp
arpl
repz
cli
sbb
push
lock
je
fwait
adc
mov
fidivl
mov
fstpt
inc
push
dec
outsb
or
or
mov
pop
and
sbb
in
push
xor
or
int3
mov
pop
scas
test
jnp
int3
cli
sub
pop
dec
pop
out
jb
gs
testb
push
sub
sbb
inc
clc
into
adc
pop
repnz
cltd
int3
psubq
stos
push
pushf
repz
mov
out
pusha
in
or
cwtl
lods
pop
inc
inc
fcompl
shl
sbb
dec
rol
pop
loopne
cmpb
mov
data16
test
sbb
push
dec
or
inc
jno
insb
xor
leave
ljmp
stos
or
sub
fwait
out
sub
insl
cmp
jno
mov
and
inc
hlt
out
xchg
ja
push
out
xor
mov
push
xchg
in
pop
and
sub
mov
mov
scas
xchg
aas
add
xchg
int3
adc
imul
dec
mov
insb
sub
out
es
push
pop
fisttpl
enter
push
leave
mov
xchg
xchg
mov
jne
inc
js
adc
cmp
pop
cmpsl
insb
inc
and
inc
ficoml
shlb
xor
or
ljmp
dec
pop
cmpsb
fxam
cli
lret
inc
sub
call
add
or
test
out
inc
and
and
mov
jecxz
cmp
xchg
dec
ror
movsb
cmp
xchg
inc
movsl
sub
int
cmc
cwtl
in
pushf
adc
cwtl
push
mov
adc
sti
sbb
mov
push
or
stos
dec
dec
fldcw
dec
jmp
xchg
push
mov
push
sub
inc
in
xchg
jnp
sbb
mov
mov
inc
xchg
jl
xchg
nop
pop
inc
jecxz
ret
mov
out
leave
out
fiadds
rclb
imul
xor
cmp
cltd
inc
add
mov
pop
out
mov
pop
mov
cmpsl
cmp
push
rcrl
push
mov
loop
loope
mov
pop
cmp
pop
push
sub
repnz
pop
push
addr16
mov
push
jecxz
mov
in
jo
sub
xadd
add
xlat
sbb
push
roll
not
lock
jae
lcall
push
ja
addr16
cld
mulb
or
leave
icebp
jl
stos
outsl
in
sub
pop
aaa
es
loopne
insl
ja
daa
and
cmpsb
pop
xor
sbb
push
sti
mov
in
and
aaa
jmp
sub
jne
stos
je
mov
test
xchg
cmp
xchg
daa
lods
mov
aaa
sbb
and
mov
addr16
inc
cmpsl
in
mov
bound
add
das
sub
lret
jns
into
out
jle,pt
pushf
adc
and
out
add
rcrb
out
mov
in
inc
dec
outsb
out
in
dec
mov
stc
push
inc
mov
jg
lods
mov
das
lods
push
add
pop
std
inc
popf
and
lret
push
movsb
jp
mov
sti
push
iret
cmc
fisttps
sbb
pop
fs
nop
mulb
in
sub
mov
cltd
ja
dec
and
shr
and
xor
rcl
sbb
scas
imul
mov
inc
inc
xchg
loope
int
popf
pop
test
clc
pop
jge
icebp
fmul
or
out
filds
in
dec
push
xor
insb
cmp
fcoml
shl
inc
dec
and
loopne
sbb
dec
inc
and
pop
and
dec
cli
add
pop
in
std
je
pop
xor
hlt
and
or
and
shll
pop
pop
adc
xchg
lods
insl
loop
enter
mov
fwait
dec
cmpsl
add
sub
xchg
sahf
test
sbb
add
fsubs
cs
adc
stos
and
mov
mov
ja
push
hlt
mov
xlat
xchg
les
mov
mov
sbbb
insl
mov
push
test
jmp
sahf
mov
aam
aaa
movsb
or
les
popf
mov
stos
aaa
or
push
repnz
ds
adc
movsl
or
subl
and
xchg
addl
js
in
fimull
test
mov
rcrb
mov
mov
push
pop
and
test
jl
cld
in
dec
pop
pop
push
iret
ds
cmp
faddl
lods
add
test
push
test
int3
std
push
test
pop
lea
cmpb
outsl
cmp
inc
adc
jl
jne
push
aam
rcl
loop
insb
or
test
sbb
outsb
repz
add
mov
das
hlt
in
and
lods
xchg
adc
imul
sub
and
nop
xchg
pop
out
push
rcll
mov
subl
stc
adc
shr
cmpsb
and
pop
gs
enter
cmp
std
inc
cltd
xchg
dec
dec
popa
cmp
mov
lock
pop
adc
mov
cs
mov
xchg
xor
mov
hlt
out
pop
and
mov
mov
mov
dec
dec
and
xchg
pop
fwait
mov
mov
push
cmc
mov
mov
lods
or
mov
dec
enter
cmp
notb
pushf
add
mov
movsb
or
lds
sbb
int
test
ja
and
xor
dec
xlat
shrb
xor
xor
inc
int3
cmpb
insl
push
mov
into
and
adc
into
pop
and
jl
add
pop
mov
test
jp
icebp
or
sub
jg
lods
in
mov
mov
mov
aas
js
mov
outsl
incl
lds
scas
and
mov
push
test
add
inc
or
fisubrs
and
and
or
mov
out
jo
pop
fs
mov
out
ficoml
push
xchg
or
dec
and
int
idivl
nop
pop
out
add
jl
popf
xchg
loopne
lcall
inc
jnp
fs
xor
cmp
jno
push
mov
xchg
cmpsl
subb
add
lock
mov
sti
sbb
stc
enter
jb
mov
push
sbb
and
inc
insb
dec
repz
push
lds
gs
pop
addr16
adc
cs
cmpsl
push
dec
mov
mov
or
out
movsb
vcvttps2dq
jg
ret
outsl
add
or
bound
xchg
sub
ss
aas
test
into
imul
adc
adc
insb
add
mov
test
fs
es
ljmp
das
xorl
shlb
cmc
fildl
enter
push
or
ljmp
je,pt
pop
imul
jmp
xchg
jbe
cmp
mov
push
lods
outsl
mov
jp
sub
sti
test
cltd
incb
dec
enter
xchg
test
adc
and
loop
adc
clc
or
insl
adc
mov
rclb
sbb
mov
mull
mov
pop
or
add
mov
mov
pop
dec
movsl
push
or
push
adcb
mov
into
je
iret
xchg
arpl
int3
mov
ljmp
int3
pop
sarl
or
and
lea
and
pop
in
sbb
insl
jecxz
mov
xchg
mov
out
adc
pslld
fs
or
sub
push
stc
jmp
pop
push
cwtl
fs
push
xchg
in
lcall
pop
cli
mov
cmp
aaa
xor
sahf
fisubl
dec
test
or
inc
add
enter
dec
or
pop
lea
pop
inc
pop
dec
daa
cmp
scas
sti
int
cmp
les
enter
sbb
adcb
mov
xlat
jp
mov
scas
and
fisttps
nop
movl
xchg
enter
out
mov
fmul
out
xchg
xor
in
xchg
pop
mov
xchg
add
pop
jbe
sub
mov
idivl
mov
jnp
push
std
mov
sbb
je
mov
clc
andb
cmpsb
pop
sbb
das
sub
arpl
out
out
jnp
mov
inc
cmp
pop
pop
loop
mov
pop
pop
sbb
lahf
enter
pushf
pop
adc
pushf
dec
imul
imul
gs
jns
fimuls
ret
jmp
cwtl
pop
xor
push
adc
outsl
push
out
sbb
stos
clc
out
add
mov
scas
aam
push
mov
lock
sbb
pop
adc
mov
das
mov
in
and
xchg
push
out
popa
out
or
xor
or
sbb
out
xchg
push
in
and
sub
dec
shlb
mov
xor
jle
add
add
cmp
lret
mov
lds
mov
mov
lret
sbb
or
das
pop
outsl
out
int3
push
add
mov
mov
push
jnp
out
stos
xchg
shl
push
scas
andb
hlt
inc
or
cmp
jne
pop
jmp
jo
loope
mov
in
je
ss
or
fmull
arpl
bound
pusha
and
int
jmp
mov
sbb
mov
stos
xchg
xchg
leave
xor
and
into
ret
in
popf
fdivr
mov
fisubs
mov
and
add
push
adc
mov
pop
bound
jb
adc
xor
jbe
add
call
pop
xchg
push
imul
cmc
mov
push
pop
add
aam
test
int3
cli
jnp
or
cltd
data16
mov
jecxz
cs
xor
repz
xchg
cmpsb
cltd
mov
jmp
jmp
pop
jno
out
fisttpl
loope
push
fistpl
or
mov
inc
stos
mov
mov
daa
sbb
xchg
ja
add
aad
cwtl
mov
jb
fcoms
sub
std
scas
stc
pusha
push
sub
sub
xchg
cmp
out
mov
sarb
and
inc
jmp
rcrl
fimull
jno
int3
sbb
std
xchg
jecxz
jmp
cwtl
push
mov
in
pop
sub
popf
pop
add
cmp
cmp
inc
in
iret
imul
ret
mov
test
dec
sbb
rcll
adc
add
fisubrs
jge
dec
fldcw
or
aam
adc
pop
outsl
int
push
leave
call
out
mov
sbb
pop
dec
dec
pop
add
outsb
pop
pop
add
daa
xchg
adcb
mov
lods
in
std
sub
mov
adc
sub
sub
out
mov
imul
mov
rol
test
inc
xor
dec
pop
sbb
add
jno
fucom
jnp
or
sub
inc
movl
sbb
pop
inc
addl
mov
test
mov
add
repnz
ret
mov
jecxz
pop
stos
add
fdivp
sub
jb
or
pusha
push
sub
subb
mov
in
xchg
dec
lcall
adc
les
mov
data16
imull
outsl
in
pop
fcomps
sbb
cmp
dec
clc
lods
std
cli
push
ljmp
out
stos
dec
xchg
pop
pusha
push
daa
outsl
outsl
pop
inc
movl
test
outsl
fildl
lahf
cltd
cmp
sub
mov
add
mov
repnz
and
pop
sbb
lock
stos
sub
mov
adc
dec
push
dec
and
fdivrl
jne
cmp
cmp
push
aas
sub
sub
dec
add
stc
push
cs
outsb
mov
inc
sahf
test
jne
xor
ret
daa
test
imul
xchg
shlb
ja
stos
leave
sbbl
movsb
cltd
inc
cmp
cmpsb
fcmovnb
sub
jge
popa
lock
dec
loop
cmc
popa
cmp
mov
adc
mov
cli
pop
or
shrl
daa
ljmp
mov
cltd
jnp
sahf
jg
xor
jnp
xlat
sahf
pop
call
adc
lahf
adc
cmp
mov
outsb
cs
test
sub
cli
jb
jmp
cmp
and
add
enter
aaa
push
mov
mov
js
mov
mov
xrstor
push
sbb
cmp
jnp
rcll
dec
pop
mov
push
in
and
les
es
xchg
ja
cwtl
push
add
dec
sarb
dec
cmp
pop
push
daa
push
inc
fs
idivl
pop
dec
cmp
jg
pop
dec
push
jae
nop
repz
lods
inc
nop
xlat
std
mov
xor
sti
or
aam
add
out
cmp
add
cmc
cmp
mov
pusha
add
lret
adc
sub
fs
aas
xor
xor
dec
out
aam
mov
mov
mov
sbb
or
pop
cltd
mov
mov
mov
dec
stos
imul
lcall
and
sarb
cmp
adc
ficoml
cmc
push
fldl
mov
push
pop
mov
cmp
and
inc
jp
sbb
inc
stc
jae
incl
cli
subb
in
sub
mov
push
aas
out
or
rorl
mov
push
icebp
push
jno
cmc
jb
xor
outsl
sub
dec
inc
push
js
mov
enter
push
adcl
jae
adc
mov
lods
lret
add
roll
das
xchg
sti
into
aad
jg
mov
arpl
sub
stos
cli
int
pop
xchg
test
adc
cmp
or
negl
inc
mov
stc
xchg
repz
or
mov
sbb
int
and
cs
mov
and
add
lods
mov
stc
xchg
clc
inc
dec
lret
loope
push
sbb
rclb
jmp
pop
movsb
dec
test
das
cmpsb
cmp
std
adc
outsb
add
inc
lods
dec
add
pop
aad
insb
mov
xchg
jne
inc
mov
add
decl
lea
dec
arpl
jno
aaa
xor
push
mov
xor
adc
es
push
jnp
ror
mov
lds
loop
lret
fimull
mov
sbb
loopne
mov
orl
testl
fmull
xor
les
cmp
jns
pop
cmpsl
pop
cltd
pop
jno
aaa
int
and
dec
push
leave
cmp
sub
daa
push
mov
xor
add
outsb
mov
lcall
mov
mov
push
js
sub
xchg
loop
dec
push
mov
ds
scas
xchg
fsubrl
cwtl
mov
outsl
imul
jmp
insl
add
fucomp
adc
push
or
icebp
mov
push
xchg
jb
sbb
sbb
mov
into
xor
mov
cmp
mov
in
sbb
stos
cmp
jg
negl
out
iret
test
adc
arpl
cwtl
xor
call
stos
add
shrl
pop
add
mov
pop
mov
into
sub
and
cmp
dec
pop
out
fwait
jbe
mov
or
nop
sarb
fisttpl
fnstcw
add
mov
add
icebp
popa
dec
outsl
or
cmp
mov
jl
dec
fwait
test
sub
jp
xor
cltd
xor
cld
aas
cmp
nop
and
daa
mov
or
rorl
sbb
xor
xor
mov
popf
push
mov
adc
xchg
nop
out
jo
xchg
adc
mov
sbb
dec
mov
push
or
or
loop
fdivr
or
or
jp
lock
mov
or
sbb
dec
xor
xchg
fisubs
pop
pop
shll
fstpt
dec
neg
imul
enterw
inc
popf
pop
and
data16
mov
xor
pop
roll
mov
pusha
ret
shlb
xor
fcoml
pop
rcll
or
mov
and
push
les
sub
mov
adc
mov
outsb
pushf
movsb
mov
mov
push
lds
mov
or
cwtl
pop
mov
mov
pop
or
jno
mov
xchg
pop
mov
jle
test
sbb
sub
sub
into
loopne
lcall
aam
mov
xchg
rcrb
mov
xor
pop
inc
in
loopne
lcall
gs
sbb
jp
push
or
inc
adc
aam
cmp
xor
dec
jno
fisubrl
dec
and
push
jmp
lods
icebp
ja
dec
adc
mov
loopne
push
mov
xchg
cmp
dec
nop
cmp
lds
pop
scas
int
xlat
lcall
mov
imul
rcrl
mov
and
pushf
push
in
popf
popa
pop
or
pop
int3
fisubs
ja
mov
lods
push
aas
mov
xchg
dec
push
fbstp
mov
movsl
xchg
mov
inc
inc
cwtl
pop
les
add
dec
adc
gs
sub
sub
jae
adc
in
fidivrs
sub
test
xlat
push
jecxz
xchg
ja
pop
xor
and
jmp
mov
and
push
jmp
push
mov
call
jle
rcrb
push
lret
mov
mov
pop
lcall
dec
xchg
sbb
dec
add
mov
jnp
mov
and
ss
out
and
cmc
lahf
dec
imul
sub
xchg
sbb
sub
outsb
sbb
imul
aam
xchg
mov
mov
push
lcall
out
lods
fildll
xchg
fmuls
push
js
in
mov
sbb
in
mov
mov
rclb
cmpsl
mov
icebp
or
add
push
cmp
xor
hlt
inc
or
int3
pop
mov
xchg
pop
adc
inc
idivb
sarl
int
pop
jno
mov
mov
rolb
aad
mov
push
and
inc
mov
enter
sbb
and
or
or
mov
es
mov
test
fisubs
push
cld
push
aas
adc
and
mov
add
jmp
push
mov
push
or
in
sub
pusha
pop
or
mov
mov
jno
aam
push
sbb
popw
xor
mov
cmp
cmpb
dec
push
in
mov
pushl
inc
pop
mov
dec
lret
out
mov
shr
mov
imul
outsl
jns
or
das
mov
xchg
jns
inc
scas
icebp
call
and
in
imul
pop
mov
mov
cmp
das
in
pop
dec
jae
sbb
xor
mov
mov
push
xchg
mov
pop
repnz
xor
jne
inc
popa
push
jl
cmp
push
push
xchg
dec
lret
jmp
inc
mov
rcr
jecxz
daa
sbb
lret
pushf
lret
pop
cmp
insl
dec
pushf
pop
in
popa
or
in
enter
leave
movsb
movsb
push
xor
pop
out
inc
inc
enter
pop
fstl
xchg
cwtl
xlat
ret
adc
sbb
popa
int
cmpsl
loop
mov
or
cmp
scas
cmp
or
sbb
lods
push
daa
call
jnp
lcall
es
sahf
mov
push
popa
ja
adc
add
mov
leave
rol
lods
cmpsb
mov
push
pop
ja
outsl
ds
rol
inc
not
jnp,pn
fisubl
sub
push
inc
movsl
imul
push
pop
cmp
ficompl
push
loop
inc
push
outsb
sbb
js
sub
sbb
iret
mov
mov
pusha
cwtl
cmpsl
rep
loop
mov
inc
xchg
mov
or
loopne
sub
pop
xchg
and
cltd
mov
mov
in
sub
sub
pop
fsubp
sub
xchg
popa
mov
push
shll
inc
out
loop
int3
jns
dec
cld
dec
and
cmpsb
mov
cmp
fwait
inc
pop
and
into
jb
bnd
fcmovnu
and
inc
cmp
pusha
ret
inc
sahf
pop
inc
lret
cmpl
lahf
repz
adc
sbb
sub
lret
sbb
adc
fisttpll
ret
adc
pop
stc
into
ljmp
inc
sbbb
or
adc
jl
lahf
in
int3
idivl
fs
jae
pop
outsb
scas
fwait
movsl
cmpsb
mov
inc
push
addr16
mov
jne
cli
leave
loop
jb
jmp
push
inc
xor
inc
arpl
push
fistl
repnz
mov
sbb
mov
mov
dec
xor
aad
push
test
cmpsl
fisubs
movsl
cmpsb
lcall
nop
xor
add
frstor
pop
jle
push
add
lods
fs
push
aam
mov
mov
cmp
mov
mov
sbb
adc
repnz
aad
imul
jmp
test
movsb
xchg
xchg
mov
in
lock
cltd
je
xlat
into
cs
ret
xor
mov
mov
and
jns
push
push
sub
cmc
push
push
sar
sub
fwait
rolb
push
mov
test
mov
sub
dec
and
pop
ret
xor
sub
insb
mov
pop
push
nop
lcall
add
and
inc
cmp
jbe
je
mov
dec
mov
rcrl
fisubl
aaa
sub
scas
jne
inc
dec
rcrl
mov
cld
mov
pop
inc
lret
sti
aam
fidivl
adc
test
push
mov
outsb
push
dec
inc
add
sbb
std
daa
into
dec
inc
inc
xchg
stos
xchg
int
push
jne
cmpsb
sbb
js
jecxz
cmpsl
scas
or
sbb
xchg
pop
out
aad
call
pop
ret
in
lods
popa
imul
out
mov
popa
adc
xchg
shlb
into
adc
push
adc
jmp
imul
pop
jns
or
fs
insl
aad
es
xor
pop
pop
stos
xchg
or
push
imul
xchg
jne
js
sbb
mov
hlt
dec
inc
in
daa
sub
pop
dec
xchg
inc
inc
push
sti
lret
frstor
ret
adc
and
xorl
lahf
mov
imul
jmp
xchg
or
xorl
sbb
xchg
call
js
sbb
jns
add
stos
jp
add
inc
pop
aaa
push
notl
and
int
cmp
mov
pop
test
fwait
iret
sbb
mov
pop
test
xchg
pushf
inc
add
adc
pushf
repz
pushf
aas
dec
adc
dec
movsl
push
add
daa
scas
scas
repz
pop
jae
xor
jl
pop
outsl
cmpsl
sub
add
jge
push
inc
out
imul
dec
adc
mov
sub
and
xchg
fistl
mov
fistps
dec
push
jae
mov
fisubrl
repnz
mov
add
testl
into
rclb
push
mov
orl
fmul
ljmp
shlb
push
fsubrl
enter
cmc
xchg
out
xchg
mov
jmp
addl
xchg
daa
jb
out
adc
incl
pusha
pop
scas
mov
shrb
ljmp
int3
lods
inc
daa
mov
mov
xor
addr16
xlat
adc
cmp
int3
lock
sti
mov
mov
aas
jae
aam
lods
je
lcall
rcr
orps
out
or
cmp
pop
dec
lea
xacquire
movsl
pop
int3
jns
push
mov
push
test
jmp
xchg
dec
cmpsl
scas
jl
jns
xor
jns
sbb
fdivr
xor
adc
andb
out
test
rcr
imul
xchg
lock
and
shlb
push
loopne
std
and
shlb
out
sbb
dec
aam
mov
lock
adc
sbbb
xchg
fwait
mov
in
sti
fwait
subl
pop
insl
jmp
xchg
adc
mov
mov
and
pop
repz
cmpsb
sbb
loopne
and
insb
sub
xchg
out
push
lea
and
mov
pop
jo
adc
ss
inc
pop
dec
iret
adc
test
shlb
jg
pop
cmp
add
fadd
rol
mov
push
dec
sub
inc
mov
mov
mov
jp
les
ret
pop
lahf
ds
outsl
mov
das
mov
push
dec
adc
pop
pop
pop
pop
or
adc
inc
pusha
ret
mov
aad
roll
gs
fbstp
cmp
mov
and
repz
mov
das
aas
add
pop
lock
xchg
cwtl
daa
imul
cmp
ja
pop
jmp
push
xchg
cltd
js
dec
pop
add
push
sbb
mov
sbb
jo
shrb
sub
add
jge
inc
popa
rcr
xor
jmp
lret
test
adc
jae
aas
fnstenv
ljmp
sbb
ret
mov
inc
imul
and
arpl
mov
mov
aas
xor
push
add
inc
shl
pop
scas
fsubs
dec
fnstenv
dec
imul
mov
mov
xchg
dec
inc
adc
loopne
push
cmp
aas
push
push
clc
stc
xor
push
lret
pop
pop
add
pop
dec
fbld
popa
fwait
stos
inc
or
stc
xchg
pusha
sbb
add
jmp
cmc
rsqrtps
sub
add
loope
mov
sbb
stc
pushf
lea
jmp
mov
imul
shlb
push
adc
jl
sbb
cwtl
sbb
int
pop
xchg
rcl
jae
mov
jo
in
adc
div
push
cmp
sbb
out
es
sub
int
add
add
daa
xchg
fistps
gs
fcompl
xchg
cs
mov
adc
or
pop
pop
adc
mov
mov
jmp
push
out
push
stos
adc
xchg
mov
lret
mov
add
mov
outsb
push
nop
subb
mov
in
cmp
jb
stos
fistps
or
iret
stos
dec
sarb
adc
push
imul
dec
test
sub
adc
pop
je
jg
scas
cmp
lods
sbb
sbb
cmpsl
ds
in
jecxz
test
push
bound
dec
scas
in
and
dec
in
mov
xchg
sub
mov
rol
cmp
adc
mov
call
fldpi
das
aam
xchg
stos
and
add
mov
inc
mov
cmp
push
mov
les
push
mov
mov
enter
test
pop
mov
jmp
pop
std
dec
mov
push
ficomps
stos
incl
mov
repnz
shrl
inc
push
push
in
imul
les
insb
loopne
jbe
cs
sar
daa
out
enter
test
cmc
int
addr16
mov
push
pop
jo
mov
push
out
fists
push
pop
jae
js
sbb
inc
xchg
inc
push
in
mov
jo
movsl
sbb
sub
pop
sar
mov
cmpsl
mov
pop
pop
lds
in
int
sub
daa
mov
and
inc
xchg
adc
leave
mov
jns
push
jns
icebp
mov
jg
mov
or
or
cli
or
ss
fs
loop
sub
sub
test
outsb
inc
icebp
fsubrl
shrl
jecxz
and
xor
jb
sar
add
add
sbbl
jns
loope
data16
lea
test
pop
mov
push
sahf
inc
pop
and
xorb
mov
leave
mov
pop
cld
xchg
mov
jae
pop
leave
pop
pop
loop
outsl
sbb
cmpsl
or
sbb
xchg
sub
adc
movsl
or
adc
and
xchg
test
sub
jp
jae
addr16
bound
sbb
mov
mov
xor
ror
sar
xorl
in
dec
cmp
imul
jle
xor
xchg
into
mov
nop
outsl
shlb
xchg
int3
mov
dec
gs
lods
lea
test
test
mov
nop
xchg
sbb
or
pop
dec
mov
enter
or
insb
or
loope
adcl
xor
xchg
cmpsb
inc
dec
mov
test
iret
and
mov
es
mov
dec
mov
add
std
push
jecxz
ret
inc
mov
leave
ss
loop
pop
aas
cs
xchg
add
test
int
leave
pop
popa
cmpl
rorb
sti
push
std
xchg
push
sub
mov
push
std
ljmp
pop
iret
bound
leave
mov
testb
test
mov
rorb
xchg
pop
fcomp
inc
fcoml
cmp
pop
insb
call
ss
mov
call
mov
sub
add
aam
leave
cmp
inc
add
test
xchg
outsl
push
je
enter
repnz
push
and
imul
shll
int
dec
xchg
dec
ficoml
repnz
push
fwait
nop
mov
test
imul
adc
rcrb
stc
or
out
inc
dec
mov
xor
jp
int3
popf
loopne
stos
outsl
push
push
dec
pop
les
scas
mov
rclb
enter
adc
out
loopne
push
sub
mov
wrmsr
mov
lods
jecxz
bound
popf
and
test
pop
repz
jae
adc
dec
sub
enter
les
and
mov
lret
adc
mov
xor
jns
call
add
pop
iret
add
push
addl
dec
and
cmpsl
pop
inc
sbbl
daa
imul
les
pop
pop
fisubl
sbb
jno
pop
mov
stos
pop
sub
lcall
push
ja
or
cs
mov
or
mov
add
repz
sbb
ret
data16
or
out
incl
icebp
mov
outsl
inc
cmpsl
add
sbb
repz
mov
mov
mov
lret
movsl
repz
ljmp
pop
in
lock
pusha
mov
loopne
inc
and
std
jo
aaa
push
clc
das
repnz
push
ljmp
mov
stc
xchg
cmpl
xchg
mov
jmp
ds
push
je
popa
enter
mov
or
mulb
repz
sub
inc
mov
pop
inc
push
inc
pop
cwtl
or
lahf
xor
daa
xchg
sbb
inc
push
mov
xchg
add
jecxz
push
outsb
mov
arpl
pop
jge
xlat
ficomps
push
pop
inc
cltd
scas
adc
xchg
sbb
jb
cmpb
jno
push
push
imul
dec
adc
add
push
pop
fcmovnbe
aas
bound
test
lock
pop
adc
jge
push
or
jae
aaa
into
jno
lcall
les
pop
mov
loope
mov
mov
pushf
dec
imul
dec
repz
mov
addr16
sbb
sbb
and
pop
hlt
lods
pop
jae
int3
rclb
mov
xchg
dec
adc
adc
push
jecxz
sbb
sub
jae
orl
sub
add
jo
shll
mov
js
out
int
xor
mov
pop
xchg
fs
add
push
jg
sub
mov
rorl
jae
fwait
in
jmp
loopne
cs
out
fadds
jb
std
and
loopne
shlb
mov
lret
faddl
and
jae
cmp
or
pushf
pushf
adc
mov
repnz
outsb
out
pop
and
adc
or
lds
pop
or
fisubrl
js
fildll
jae
scas
pop
mov
call
sub
imul
dec
lahf
hlt
or
in
aaa
stc
cmp
pop
ret
lock
sub
loop
inc
inc
push
pop
repnz
adc
push
mov
sbb
and
jle
xchg
push
mov
cmp
stos
push
xor
push
jle
mov
cmp
ror
add
sub
or
pop
cwtl
fwait
sub
std
push
std
sub
xchg
les
int3
sub
bound
xor
lret
outsl
mov
mov
adcb
rorl
adcl
xchg
sub
dec
push
mulb
aad
stos
mov
aad
sahf
movsb
insl
push
dec
xchg
leave
sti
cltd
aaa
or
jmp
sbb
add
mov
sub
cmp
in
adcb
movups
sbb
inc
repz
pop
jmp
sub
daa
inc
lds
add
je
repz
cltd
jns
stos
pop
xor
pop
das
push
mov
push
add
gs
xlat
xor
hlt
pop
and
xchg
inc
dec
aas
jecxz
jle
xor
push
enter
stos
iret
in
sti
jecxz
mov
lods
sbb
push
lock
mov
mov
cmp
fdivrl
movsl
pop
pusha
cld
repz
mov
jb
push
sbb
rcrl
and
jb
lcall
test
push
lea
imul
pop
push
mov
out
dec
pusha
fdiv
lret
mov
push
dec
lret
adc
sbb
in
push
adc
pop
push
inc
jnp
or
jecxz
les
movq
stc
insb
ret
pop
pop
inc
push
mov
push
xchg
mov
lret
xchg
fwait
mov
lock
fists
dec
nop
xor
push
dec
sahf
imul
xchg
push
pop
xchg
pop
xor
xchg
and
adc
cld
call
mov
xor
out
push
movsl
dec
mov
into
mov
pop
and
out
iret
adc
xchg
bound
xchg
and
inc
out
and
jl
into
add
dec
shlb
outsl
cwtl
mov
xor
mov
xchg
lret
sub
dec
or
das
fiaddl
stc
mov
in
fidivrs
cmp
xchg
dec
mov
push
pop
mov
jne
hlt
lret
andb
xchg
out
or
and
cld
enter
sbb
pop
inc
push
sar
add
inc
pop
stos
sub
andb
test
jge
popa
or
jb
movsb
mov
movsl
push
cmp
pop
adc
pop
sbb
sbb
popf
mov
lcall
out
mov
mov
inc
mov
popf
pop
lahf
inc
sub
dec
lret
sbb
add
jg
push
out
sub
xchg
xchg
lcall
neg
xrelease
jmp
inc
mov
out
or
jle
xchg
adc
push
sbb
push
ffreep
sbb
cwtl
aad
jle
pop
cmpsl
push
fs
pop
addr16
mov
hlt
xchg
cmpsl
dec
mov
add
movaps
mov
pop
aas
pop
fdivl
or
push
lcall
lds
sub
jp
sub
sub
ja
jno
mov
sbb
cli
cmp
ds
jae
ja
cmpsb
pop
or
adc
adc
paddd
into
and
fidivl
orl
pushf
jg
mov
xlat
xchg
dec
pusha
ljmp
mov
pop
outsb
jae
ret
pop
and
pop
mov
jae
mov
out
ficomps
push
or
enter
cmpsl
mov
adc
inc
dec
aam
pop
jbe
aam
jg
pushf
sub
cmp
mov
aam
pop
pop
jb
mov
cmp
fstl
adc
dec
dec
fstpl
mov
jne
orl
pop
lahf
test
jp
or
in
xchg
mov
jmp
out
jp
jne
mov
les
shll
je
adc
adc
mov
adc
xchg
cmpsl
mov
dec
test
leave
lahf
cmpsl
jns
sub
or
mov
in
aas
aaa
mov
fwait
orb
clc
adc
xchg
fimuls
xor
xchg
lahf
leave
jecxz,pn
sbbb
outsl
sarl
mov
adc
in
scas
add
es
enter
cmc
cmp
lods
ss
dec
mov
xor
scas
mov
pop
xchg
mov
xchg
int3
mov
aas
popf
and
outsl
leave
inc
sbb
push
in
xchg
js
in
sbb
pusha
jp
xlat
sub
mov
jo
xchg
fldln2
lret
arpl
jp
xchg
xchg
scas
outsl
adc
xor
mov
cmp
push
imul
inc
imul
add
sti
int
xchg
inc
mov
push
sub
pop
xlat
nop
push
mov
into
pop
push
jmp
leave
scas
xor
mov
xchg
aas
xchg
mov
andb
mov
pop
call
dec
jb
aam
push
nop
pop
lret
out
inc
mov
and
inc
iret
hlt
mov
test
in
pushf
and
nop
outsl
call
pop
shlb
out
rorl
mov
arpl
push
addr16
inc
insb
push
dec
cltd
mov
mov
mov
fistl
sub
mov
mov
cmpsl
jl
or
cltd
and
add
push
push
cmc
xchg
and
dec
cmp
fcoms
mov
dec
in
gs
adc
jnp
inc
push
push
or
call
cwtl
lret
or
and
xor
dec
clc
inc
mov
mov
out
push
mull
popf
jle
rorl
jnp
jb
dec
test
cmp
adc
mov
fwait
inc
inc
fdivrl
and
jnp
inc
cli
movsb
outsb
adc
cmp
cmpb
jne
add
call
dec
aas
mov
mov
test
shrb
xchg
pop
ret
loop
iret
lea
dec
cmp
xchg
popa
push
xchg
inc
mov
daa
xor
int3
pop
add
adc
ffree
xchg
inc
jl
inc
js
hlt
inc
lahf
aas
mov
mov
sbb
or
addb
cmp
loope
std
movsb
and
sub
mov
fisttpll
insl
mov
inc
cld
dec
pop
ljmp
xor
xor
inc
loope
push
mov
adc
imul
mov
es
mov
push
in
cmp
dec
mov
inc
sbb
adc
fstl
xor
popf
cli
andl
sti
push
mov
gs
pushf
dec
pop
adc
jns
xchg
movsb
enter
dec
enter
xchg
fistl
inc
adc
add
or
subb
aad
sbb
dec
sbb
fisttpll
and
ljmp
repnz
movsl
and
mov
aam
inc
dec
std
cmp
into
inc
cli
testb
xchg
jne
xchg
mov
sbb
add
cld
out
push
jle
add
fs
jae
imul
adc
in
mov
stos
dec
inc
test
mov
sub
rorb
loopne
push
dec
cmpsl
mov
xchg
popf
addr16
es
cld
sub
int3
sti
fildll
inc
mov
mov
inc
mov
inc
mov
repnz
cmp
push
scas
arpl
adc
mov
arpl
loop
int
je
outsb
and
push
fsub
pop
fs
cmp
bound
ss
inc
in
inc
mov
decl
adc
cmp
es
ror
jmp
pop
xor
xor
sbb
sbb
sti
repz
add
sbb
xor
xchg
or
cli
es
pop
int3
shll
popa
rolb
xor
cltd
outsb
je
call
mov
nop
xlat
sub
loope
sbbl
mov
sbb
xchg
add
stos
data16
mov
or
mov
test
add
push
sub
sahf
sub
mov
jnp
mov
sarl
dec
mov
adc
sbb
fs
fistl
mov
cltd
sbb
movsb
mov
es
mov
cmp
cmc
pop
movsb
mov
outsb
dec
pop
cmp
sbb
xchg
popa
dec
fsubrs
loopne
or
les
out
mov
call
outsl
xchg
cmp
pushf
ret
les
jne
cmpsb
add
add
xor
xchg
sbb
fdivl
jbe
shlb
pushf
jl
inc
pushf
dec
dec
les
xchg
and
adc
daa
adc
xchg
mov
jmp
sbb
or
jge
fisubl
das
mov
fprem1
xlat
mov
loope
push
insl
push
and
lahf
push
fs
dec
addb
cmp
cld
popa
dec
daa
icebp
cmc
shlb
add
rorb
addl
xor
in
les
out
into
lea
mov
and
int3
mov
test
out
lock
cmc
adc
inc
cmp
inc
mov
cmp
sbb
add
fwait
sbb
fistps
cltd
mov
lods
inc
jbe
ljmp
lea
add
lea
out
nop
add
paddd
or
outsl
jl
sbb
mov
xchg
pop
call
mov
aad
dec
lahf
jecxz
mov
inc
shll
or
cmove
inc
jge
shrb
cmpsb
rolb
or
xlat
hlt
pushf
lods
and
cmp
xor
mull
aad
dec
fwait
xor
fistl
jge
jae
aam
pop
mov
gs
mov
jae
cwtl
out
or
mov
cmc
jp
daa
js
popf
outsl
rolb
and
stos
push
xchg
es
repz
jp
clc
fiaddl
xor
pop
push
mov
xor
lods
jmp
pop
cmpsb
inc
stc
rcll
or
lea
and
das
and
mov
jge
add
mov
stos
mov
pop
xor
cs
inc
jae
dec
cltd
jne
bound
icebp
dec
cwtl
xchg
fwait
movsl
mov
xchg
cli
mov
pushf
mov
fs
je
dec
pop
testb
inc
data16
rcrb
pop
push
popf
mov
pop
inc
pop
mov
fimull
outsl
loopne
icebp
jb
add
shlb
fdivs
movl
and
movhps
or
xor
into
fs
icebp
dec
inc
mov
adc
dec
xchg
pop
xor
iret
sti
pop
and
loopne
int3
insl
movsb
rclb
imul
loope
cmp
adc
jo
mov
dec
push
cs
sub
xor
fdivrp
push
inc
mov
inc
out
int
or
sub
jnp
xor
mov
and
lret
call
cmpsb
shl
sbbl
push
dec
call
bound
mov
xor
mov
movzbl
loope
jle
mov
in
and
sub
outsb
mov
jmp
data16
push
dec
xor
outsb
cld
push
cmp
mov
popf
dec
mov
pop
or
sahf
adc
push
pop
adcl
out
mov
int3
scas
pop
or
adc
jns
fcoml
ljmp
add
xchg
push
xor
push
adc
dec
stc
das
or
aaa
add
adc
hlt
cmp
xchg
stc
pop
or
outsb
cmp
ja
loopne
push
jne
imul
mov
sub
cmp
in
stos
mov
or
cmpsl
loop
clc
stos
ficoml
push
leave
fldt
scas
in
ret
cmpsl
das
insb
mov
pop
je
test
jne
jmp
enter
shlb
lock
adc
shr
jne
roll
or
sbb
mov
add
adc
addr16
dec
les
popf
out
sbb
cmp
cmp
dec
fiaddl
cmc
scas
xchg
xchg
jno
and
addr16
adc
dec
inc
call
push
or
adc
push
repnz
test
xor
push
and
jne
repz
out
pusha
xchg
pmulhuw
les
or
out
shld
mov
mov
ret
fidivrl
jae
jno
mov
adc
mov
cmp
les
in
push
int
inc
sbb
aad
mov
jl
add
xchg
pop
aaa
lock
push
push
ss
xchg
jne
test
xchg
xchg
in
lea
or
ret
jp
scas
lock
outsb
mov
outsl
fadd
push
shlb
shll
into
pop
leave
addr16
add
adc
push
jmp
bound
ficomps
daa
repz
loope
les
adc
lret
xchg
cs
pop
js
mov
popa
ret
push
xchg
push
cwtl
popaw
dec
pop
jl
xchg
push
loopne
bound
sub
push
imul
aad
stos
sub
jno
mov
out
adc
std
inc
add
inc
mov
in
lret
jo
pop
in
and
cmp
test
mov
cmp
clc
mov
cmp
dec
daa
xchg
mov
cld
test
sbb
aam
cmp
in
stos
fs
push
and
cs
fisttpll
jg
or
sti
xor
test
ljmp
fcoml
mov
mov
fistps
fidivs
sbbl
fistl
mov
add
jge
popf
mov
pop
fstpl
add
inc
repnz
test
repz
les
mov
js
popf
test
xor
gs
mov
dec
int3
out
fwait
mov
pop
movl
mov
lret
call
xchg
ds
and
mov
ljmp
mov
mov
fidivs
cmpsl
addr16
jb
loop
sub
rcrl
loopne
les
mov
mov
push
cld
pop
imul
test
inc
inc
mov
out
inc
shrl
add
push
sbb
shlb
pop
dec
mov
popa
mov
imulb
mov
in
je
sbb
and
mov
cmp
repnz
inc
mov
sub
out
inc
inc
push
flds
jmp
jmp
cmp
pop
pop
mov
movsb
imul
cli
add
lret
cmc
cld
adc
pop
aam
cmpsl
and
pop
fidivs
dec
mov
pop
xlat
or
popa
pop
jg
push
pop
xchg
ret
out
les
repz
lock
ljmp
and
popa
cmp
fnsave
je
add
add
adc
add
inc
jno
shr
push
imul
mulb
sbb
inc
mov
cmpsb
rcrl
mov
pop
push
mov
push
pop
lods
enter
sbb
shll
sbb
cli
cmp
mov
or
xchg
cmp
js
sub
push
fadd
add
rorb
jmp
lds
pusha
pop
mov
xchg
insb
dec
nop
lret
shl
sahf
push
mov
or
test
scas
push
out
test
pop
xchg
out
xchg
and
mov
pop
outsb
inc
mov
and
imul
cmp
sbb
sbb
nop
loop
add
add
mov
mov
ror
pop
push
xor
and
pop
scas
aaa
jge
leave
dec
xchg
dec
adc
iret
xchg
mov
lret
in
sti
insl
lret
sbbl
jmp
lahf
sub
cmp
pop
insb
loopne
adc
dec
add
jne
fs
fwait
jb
sbb
iret
adc
pop
and
and
fisubs
adc
push
add
xor
xchg
mov
into
lods
andl
out
test
xor
mov
pop
fwait
pop
sbb
lock
xchg
jecxz
xor
cmp
dec
fwait
into
iret
cli
and
push
dec
mov
cmp
aad
out
loop
push
add
js
orb
xchg
inc
cmpsb
mov
decl
xchg
and
cmp
stc
jge
fimull
inc
jae
fwait
push
test
nop
xchg
int
mov
push
xchg
cmp
jo
movsl
cmp
mov
or
xchg
mov
push
mov
add
pop
adc
popf
push
and
add
jne
xor
mov
push
lcall
jle
add
push
fwait
lea
adc
jne
or
sub
sub
xlat
jmp
roll
aaa
push
stos
andb
jae
inc
stc
aas
pop
cwtl
stos
call
inc
sbb
imul
jo
push
xor
add
aam
setp
out
repz
pop
mov
dec
pop
repz
out
pop
add
lods
pop
jae
jo
call
andl
ds
inc
pop
gs
rcrb
lahf
add
sub
lret
xchg
or
mulb
push
sbb
and
xor
xor
or
out
mov
aad
das
imul
shlb
addr16
pop
jbe
and
dec
cmpsl
ds
sub
pop
push
xchg
dec
xchg
pop
inc
jge
cmpsl
outsl
push
dec
and
jmp
mov
push
jne
jg
xor
push
fwait
push
xor
aam
push
pop
lods
repnz
xlat
pop
push
xor
jge
mov
jmp
or
xor
push
inc
test
mov
lahf
fwait
cmpsb
fs
mov
xor
pop
push
cmpsl
sub
filds
pop
xchg
fldenv
aam
xchg
sbb
les
and
scas
insl
insl
add
pop
add
fidivrs
popa
sbb
adc
jns
or
dec
mov
sbb
shll
call
cwtl
movsl
ss
sub
lds
lods
mov
sti
add
adc
std
ds
dec
in
es
mov
cmp
scas
mov
pop
pop
daa
out
aas
xchg
repz
sub
inc
lds
mov
loopne
push
dec
jnp
and
shrb
int3
stos
into
ret
fcomip
enter
fldl
out
and
jmp
out
dec
dec
pop
call
in
xor
into
mov
int
pop
and
out
sub
sbb
mov
jmp
and
imul
mov
pop
xor
add
sbbb
xchg
in
push
in
jns
je
dec
insb
cmp
lret
cli
shll
and
out
mov
or
repnz
adc
xchg
lcall
out
and
adc
mov
or
lahf
es
xor
cs
mov
loopne
or
xor
jns
aas
sbb
repz
int3
inc
adc
jo
call
adc
dec
sarb
sti
sar
lret
nop
push
fwait
jo
adc
lahf
test
adc
aam
and
sbbl
push
cmp
inc
aad
push
cmpl
push
jle
pop
inc
pop
nop
fidivl
push
popa
test
fs
mov
imul
outsl
mov
movsb
loopw
mov
inc
push
adc
cltd
xchg
mov
ret
in
cmp
xchg
xchg
cli
into
jp
out
and
fdivl
cltd
pop
jp
inc
xchg
or
and
cmp
fidivs
movsb
sbb
mov
inc
pop
jnp
clc
pop
jae
les
out
lock
xlat
mov
rcr
jns
jnp,pn
dec
stos
ret
imul
push
mov
aad
mov
cmp
and
pop
push
mov
test
or
loop
mov
cmpsb
cmp
fstpt
dec
adc
or
sbb
mov
inc
add
inc
lcall
cmp
add
push
pop
fmul
cwtl
imul
clc
shrb
test
paddb
dec
jno
out
pop
stos
sub
cli
ret
mov
add
jne
nop
fisttpll
push
aam
jbe
sbb
insw
addl
movsb
mov
icebp
outsl
fldenv
or
lcall
push
addr16
pop
jl
sub
add
out
lds
stos
cmp
pop
and
sbb
clc
scas
mov
and
popf
pop
mov
push
pop
pop
loop
je
out
jp
adc
cmc
xchg
mov
add
lds
inc
xchg
push
cltd
popl
xor
and
js
cs
xor
data16
loopne
shrl
pop
jnp
adcb
adc
dec
push
mov
pop
mov
stos
pushf
bound
cmpsb
fldt
cli
scas
repz
in
or
scas
movsb
push
sahf
mov
call
cli
rclb
cmpsb
repz
das
rolb
mov
jb
pop
fs
adc
inc
in
std
scas
fs
pop
rcll
repz
inc
cmp
cmp
repz
xor
inc
dec
stos
add
cmp
mov
or
enter
pop
rorl
dec
jo
xor
dec
mov
mov
daa
mov
push
mov
sahf
add
or
repz
cmp
push
xchg
out
adc
mov
mov
and
mov
adc
mov
jle
jb
pusha
enter
jo
dec
pop
lret
xor
call
data16
add
pop
mov
sub
sub
psrlw
loope
jae
dec
xchg
insl
add
push
mov
jbe
pushf
pushf
ficomps
mov
das
movsl
sbb
mov
fwait
add
jp
out
jecxz
cmp
imul
insb
push
je
sub
adcb
shll
imul
dec
gs
sbb
sub
lds
rclb
das
sub
sahf
xlat
daa
dec
adc
lods
xor
fs
xchg
mov
je
mov
movsl
push
sahf
push
dec
cmpsb
pop
mov
xchg
cmp
imul
out
inc
fldt
fldt
push
paddsw
aas
or
xchg
or
add
push
jae
adc
ret
in
mov
icebp
jo
mov
insb
xchg
jb
pop
pop
push
sub
scas
mov
push
xchg
xchg
pop
das
stos
outsl
dec
dec
in
push
inc
insb
flds
aam
sbb
andl
repnz
in
adc
out
mov
loop
jle
mov
cmp
ljmp
xchg
aam
add
jmp
pop
jo
test
jg
ja
push
loop
repz
stos
push
adc
sbb
sbb
pop
mov
jmp
or
xchg
mov
fisttpll
or
add
arpl
and
ret
jp
cmpsb
cmpsb
jecxz
js
leave
mov
add
notl
ret
sbb
sub
mov
fs
lsl
mov
or
sub
push
sub
jae
std
sub
inc
aaa
and
mov
out
lret
lret
dec
fisttpll
push
mov
popf
and
pop
push
mov
jecxz,pt
sahf
mov
shlb
aaa
out
dec
ss
lret
mov
lahf
xorl
ss
mov
or
rorb
insb
inc
inc
jecxz
sbb
push
fisubs
ficoml
loopne
repz
mov
push
mov
add
pop
loop
insl
in
mov
adc
push
btr
stc
imull
out
mov
addl
sbb
xchg
inc
ljmp
fildl
adc
ds
imul
or
pop
es
sub
inc
jne
and
test
and
aas
fsubs
lcall
mov
fiadds
insb
dec
imul
pop
push
mov
out
sarl
pop
ret
fdivrs
dec
mov
xchg
mov
xor
addr16
nop
bound
xchg
test
sbb
mov
xchg
daa
pop
add
popl
sub
dec
in
das
clc
or
xor
sub
xor
fsubrs
xchg
jae
out
stos
add
or
mov
fisubrl
pop
inc
push
jle
add
push
cmp
cltd
xchg
dec
sub
imul
jp
push
fucomp
das
scas
testl
pop
rorb
ljmp
mov
xor
pop
sub
or
dec
mov
adc
js
mov
dec
cs
shll
leave
mov
inc
lods
push
mov
xlat
pop
and
add
jmp
mov
daa
std
leave
mov
mov
loopne
add
push
jecxz
aam
jno
or
mov
mov
adc
pop
adc
push
cmpsb
pusha
or
adc
mov
es
mov
repnz
js
jae
mov
cmpsb
mov
ds
aaa
push
fsub
cmc
int3
mov
cmp
adc
push
sbb
pop
out
add
pop
fs
adc
ja
or
jle
fldt
mov
xor
outsb
data16
push
and
clc
jae
lods
xchg
inc
out
iret
lcall
xor
jnp
and
push
mov
cmpsb
jecxz
mov
xchg
mov
xchg
lock
xor
cld
mov
mov
mov
aaa
cmc
int3
inc
in
ds
and
lods
add
or
cmp
push
sub
jg
addr16
xor
and
inc
push
ljmp
sahf
and
push
add
push
cld
push
ds
iret
int3
add
pop
js
lahf
fcmove
test
push
aad
jnp
cmp
push
pop
adc
push
test
mov
mov
icebp
gs
mov
sar
jno
push
push
jg
mov
xor
cmp
bound
add
clc
lds
mov
imul
cmp
stc
out
mov
add
ret
and
inc
mov
mov
xor
inc
jo
add
xlat
lods
or
aaa
ficoms
lds
jmp
cmp
xchg
sbb
int
lret
sahf
jns
fsubrs
mov
push
out
jnp
ds
push
xchg
fmuls
jne
inc
test
xor
scas
sub
jmp
mov
ret
std
sub
dec
inc
pop
addr16
test
mov
repnz
xchg
aaa
inc
adc
fwait
jno
cmpsb
xchg
das
int3
push
je
cltd
mov
adc
ja
sbb
cli
push
xor
inc
out
xor
pop
fisubl
and
aam
pushl
push
scas
aam
adc
mov
jae
dec
cmc
stos
lahf
sbb
dec
cmpsb
inc
pop
jmp
lods
add
outsl
out
cwtl
xchg
and
pop
sbb
inc
scas
jae
pop
fdivr
ret
inc
mov
dec
jnp
andl
repz
push
mov
punpckldq
iret
fcoml
in
popa
mov
gs
lahf
sbb
mov
push
jg
in
mov
les
push
mov
out
repnz
aas
cmp
fcmovnb
push
jnp
mov
cmp
cmp
and
jne
pop
push
repz
lcall
fdivs
into
mov
mov
jne
sub
inc
lods
mov
push
mov
fs
mov
int
das
mov
mov
test
mov
fs
pop
pop
mov
mov
pop
jp
cmpsb
push
push
loop
xlat
loop
mov
fldl
mov
and
mov
outsl
mov
add
push
xchg
les
push
add
pop
cmp
insb
jmp
jbe
jnp
or
mov
popf
xor
ljmp
mov
and
in
popa
cmp
adc
mov
push
imul
data16
push
dec
push
rolb
xchg
inc
and
fdivp
test
cltd
dec
xchg
andb
daa
loop
out
inc
cmp
cmp
xchg
add
adcl
adc
mov
sti
push
sub
mov
in
rcll
add
insb
jb
in
data16
dec
mov
test
daa
popl
push
int
test
cmp
sub
and
mov
repz
pop
outsb
pop
aad
adc
out
pushf
jmp
mov
cmp
in
nop
mov
stos
add
jp
mov
shufps
repz
inc
daa
or
int
ret
ret
fucomi
adc
sub
leave
fdivl
mov
lret
popf
sahf
pushf
ror
in
jg
lods
sbb
xchg
jo
aas
inc
xlat
lds
imul
mov
add
fwait
test
cmpsl
les
xchg
rclb
ja
jno
adc
mov
gs
mov
pop
cwtl
inc
fistps
lods
or
dec
adc
push
dec
xchg
mov
repz
cwtl
jmp
and
pusha
fdivr
jp
adc
dec
loope
mov
sahf
movsl
mov
shl
dec
jg
out
test
dec
sub
inc
cmp
pusha
out
xchg
ret
cmpl
mov
add
mov
mov
sarl
js
test
lcall
addr16
in
push
lods
fcoms
lahf
cmp
sbb
or
movsl
rcrl
cld
push
addr16
adc
in
mov
inc
pusha
jne
adc
push
lods
dec
fbld
rolb
aam
popa
pusha
adc
pop
mov
stc
push
mov
xchg
popf
push
jo
ljmp
repz
adc
xchg
cmp
xor
push
sbb
stos
sbb
movsl
mov
setg
iret
and
out
orl
and
and
sub
mov
jno
and
ret
add
test
fists
rorb
xchg
out
ljmp
pop
lock
xchg
pop
ds
dec
jne
cmpsl
fnsave
ret
xchg
mov
xor
jecxz
mov
xchg
ret
dec
gs
and
popf
andb
je
mov
mov
mov
dec
cmp
jnp
push
dec
push
mov
jns
call
xor
sbb
pslld
out
xor
data16
fnstcw
push
pop
mov
and
mov
aas
pop
inc
pop
arpl
or
push
lret
mov
adc
pop
sbb
cwtl
ja
cmc
es
or
pushf
adcl
sub
jmp
pop
cld
jb
imull
xor
stc
inc
insl
cwtl
inc
daa
arpl
xchg
add
add
push
lcall
mov
out
and
cmp
cmp
movsl
adc
pushf
push
mov
inc
cwtl
test
dec
mov
icebp
cmp
cmpsb
jge
mov
xchg
cmp
push
aaa
jnp
in
sbb
mov
pop
lods
push
scas
out
xchg
fsubs
movb
mov
fdivrl
je
xchg
decb
xchg
dec
cmp
inc
fsubrs
cli
shrb
mov
dec
mov
jecxz
in
mov
xor
mov
push
mov
lret
jbe
jecxz
push
filds
mov
cwtl
push
clc
jmp
hlt
pop
sbb
enter
js
ficoms
mov
test
jp
pop
int
mov
pushl
ret
sarb
hlt
jle
dec
pop
in
icebp
mov
sbb
aaa
push
jnp
rcll
test
mov
jae
cli
cmp
outsb
repz
jb
dec
mov
adc
in
call
cld
xor
sbb
in
lret
mov
movsb
mov
lret
and
cld
mov
mov
das
test
push
jb
mov
pop
bound
fiaddl
test
fdivrs
xor
add
fnstcw
xor
imul
incl
icebp
cli
inc
ss
lcall
setnp
cmp
inc
movsb
lods
aad
sarb
pop
in
inc
ficomps
fwait
sbb
push
inc
addr16
cld
mov
pushf
sub
inc
lods
imul
sub
ljmp
and
pop
dec
mov
ret
test
lods
mov
xchg
and
inc
in
jae
mov
pop
sahf
xor
fsub
xchg
or
movsb
test
pusha
ja
mov
fs
xchg
lret
pop
jmp
xchg
aam
mov
mov
popf
jg
xchg
ret
test
dec
push
fistl
cmp
test
pop
mov
nop
out
sub
xchg
pushl
jecxz
jmp
call
dec
xlat
mov
add
cmp
jl
add
test
mov
dec
cwtl
lahf
sub
jmp
in
repnz
mov
jnp
fwait
jle
sbb
mov
cmp
jg
icebp
fstpt
cmp
dec
pop
cmp
insl
mov
xor
out
insl
dec
add
repnz
lods
lret
jb
lods
cs
outsb
add
sbb
fists
push
push
jno
pop
nop
xchg
in
xchg
pop
pop
loopne
fs
scas
sbb
fstl
xor
mov
push
mov
inc
popa
pop
imul
out
xchg
jl
pop
inc
xor
dec
cli
mov
test
leave
out
loop
push
std
or
imul
cmpsb
mov
scas
fcmovnbe
sub
fsubrl
and
imul
pop
loope
sub
jecxz
mov
push
orl
push
sub
test
sub
cmpsl
imul
stos
sub
inc
cmp
movsb
inc
jb
bound
inc
push
ljmp
xchg
push
fsubrs
inc
iret
testb
pop
rorb
jecxz
ds
test
xor
out
mov
push
inc
js
cmp
pop
and
pushf
into
xchg
sub
sarb
loopne
int3
cmp
adc
mov
dec
add
add
mov
std
inc
lods
pop
inc
push
mov
add
adcb
mov
fldt
mov
pop
fcompl
enter
js
int
outsl
inc
test
adc
adc
mov
ret
xor
dec
subb
lock
mov
mov
mov
or
adc
mov
xor
lock
pop
out
lret
push
addr16
fsubrl
adc
mov
cmpsl
bt
adc
push
sub
fnstcw
push
sbb
push
dec
lods
xor
lods
pop
fwait
inc
mov
sbb
call
inc
cmp
dec
daa
lret
dec
pop
cmc
mull
xor
movsb
fwait
scas
hlt
pop
xor
add
lret
shl
pop
sbb
stos
fistps
jmp
shll
cmpsl
adc
jge
and
jecxz
pusha
mov
sub
test
test
dec
cld
sbb
add
xchg
xor
mov
pushf
mov
insl
and
xchg
pop
arpl
pop
ljmp
in
or
jns
iret
rcrb
cld
adc
cmp
ja
mov
cmp
pusha
movl
jge
ljmp
cmp
fdivs
mov
push
pop
bound
xchg
addr16
shl
leave
adc
fisubrs
and
mov
pop
xchg
add
outsb
in
test
inc
pop
outsb
dec
test
inc
push
insl
mov
scas
add
test
dec
xchg
lods
lcall
icebp
call
mov
sub
shrl
jns
insl
fsubl
sarb
sub
daa
mov
scas
pop
adc
sbb
sarl
mov
lcall
mov
stos
lock
sub
mov
lds
mov
pop
cwtl
ret
push
xchg
push
add
xchg
rcll
jb
add
ds
arpl
jns
add
in
imull
inc
mov
and
pop
sahf
js
xchg
imul
imul
dec
xchg
cmp
jp
mov
leave
inc
push
test
hlt
js
mov
mov
mov
mov
rcrb
add
mov
cmp
mov
or
lods
loop
sub
test
mov
jmp
and
clc
outsb
inc
lods
pop
int3
push
pop
outsb
dec
mov
xchg
dec
jnp
xor
test
pop
adc
inc
xchg
jmp
inc
pop
sbb
jns
jge
stos
xchg
dec
lret
mov
je
fdivrl
repnz
jbe
xchg
xchg
pop
testl
xor
gs
xor
mov
cltd
sahf
lahf
aaa
stc
jmp
xchg
lret
cmp
and
pop
mov
fcoms
push
aam
lods
mov
lcall
mov
in
ss
inc
popf
mov
jbe
btr
and
daa
movl
and
cmp
stos
and
out
xor
cmp
jge
xor
cmp
jo
mov
push
fs
and
jecxz
push
adcl
jnp
xor
enter
ret
add
insl
dec
xchg
xor
clc
add
jecxz
pop
sub
mov
popf
xchg
sti
lret
xor
dec
lds
jns
insb
pop
enter
xchg
and
pop
dec
roll
out
pop
pop
cwtl
sub
addr16
cmp
or
ljmp
mov
or
sub
mov
daa
insl
dec
cld
lods
sti
sub
int
pusha
mov
ja
rolb
sub
jmp
out
jle
and
nop
jno
adc
mov
cmp
mov
pushf
mov
xchg
sub
add
jg
clc
fwait
outsl
pop
sub
adc
insl
mov
push
push
pop
cmpl
popa
push
cmp
sub
nop
or
imul
push
out
push
jb
xchg
mov
repnz
mov
or
cmc
fyl2x
pop
fdivs
lea
mov
test
in
frstor
adc
fcoml
mov
mov
mov
stos
arpl
xchg
mov
and
pop
adc
cli
fwait
mov
lret
insl
adc
insb
xor
fstl
fstps
push
fldenv
leave
bound
insb
aam
sub
mov
xchg
jp
out
cmpsb
mov
fiaddl
inc
xchg
in
dec
ret
xchg
mov
repz
scas
jo
out
aaa
iret
pop
repnz
ja
iret
addr16
loopne
push
cmp
fdivs
jecxz
stc
iret
fs
hlt
xor
mov
push
sub
mov
enter
mov
adc
jne
sub
xor
cmp
mov
pushf
outsb
iret
movsl
icebp
sub
fadds
mov
shrb
fisttpll
gs
scas
out
jg
or
dec
cmp
mov
pop
data16
xor
fwait
lret
push
or
inc
sub
imul
mov
xchg
and
pushl
jb
xchg
xchg
jecxz
add
or
pop
or
pop
les
outsl
or
addps
mov
xor
cmp
xchg
adc
jl
or
data16
dec
pop
gs
movsl
add
mov
xor
cmc
lret
dec
add
in
inc
and
jnp
pushl
push
cmp
mov
mov
cs
outsl
cld
xchg
sbb
out
mov
push
lcall
in
jge
xorl
out
add
popf
inc
fstps
or
rcrb
test
shrl
jl
scas
imull
xchg
shl
jle
mov
stos
lret
repnz
add
ljmp
xchg
mov
cmp
mov
xchg
inc
mov
cmp
leave
stc
mov
stc
mov
push
jg
mov
or
jmp
ret
xchg
sbb
xchg
inc
cmc
cmpsl
jnp
inc
scas
jg
adc
insb
outsb
fimull
mov
cld
add
push
repz
mov
andb
ljmp
mov
test
inc
insl
or
xlat
dec
ret
fdivs
add
std
pop
ss
popf
lea
mov
mov
push
fs
push
cmp
mov
pop
jge
xchg
std
adc
sbb
adcb
dec
jmp
in
gs
rorb
pop
outsl
mov
gs
insl
and
ffreep
or
lods
mov
js
inc
roll
int3
fidivrl
pop
movsb
adc
and
or
jl
ret
fwait
sbb
pop
xor
negl
out
mov
adc
rorb
js
das
xor
cmp
addr16
mov
subl
fwait
push
push
fwait
inc
or
loopne
outsl
mov
aad
pop
mull
inc
adc
cwtl
jmp
daa
rcrl
lahf
sahf
stc
jle
jnp
pushf
test
or
dec
pop
clc
pop
enter
sub
mov
sti
shrl
jle
mov
out
fsts
aas
inc
insl
cmp
or
cmc
cmp
aas
repz
das
pop
sub
imul
or
mov
in
in
in
jecxz
scas
popf
jnp
fimull
pop
sub
and
cmpsl
xchg
aas
int3
cwtl
les
js
sbb
loope
stos
leave
jnp
pop
sub
repz
xchg
sbb
add
and
inc
test
pusha
mov
jns
arpl
and
sbb
movl
and
js
mov
pop
cmp
cld
push
data16
scas
je
test
mov
xchg
cmpsl
das
cltd
test
out
jb
mov
jb
movsb
popf
add
js
mov
add
pop
dec
in
ret
pop
inc
rorl
inc
mov
pop
daa
and
rol
jmp
fcomps
xchg
add
fistps
sub
lods
enter
add
out
or
cmp
push
jb
sbb
mov
adc
jb
xor
ja,pt
int3
ds
sahf
push
or
clc
pop
sub
imul
out
lock
jmp
adc
xchg
or
mov
jp
push
pop
cmp
call
pop
cmp
xchg
push
push
mov
push
or
push
or
loope
add
aad
add
bound
jbe
xor
push
mov
pop
outsb
loopne
push
sbb
repz
mov
mov
stos
fs
mov
scas
cmp
int3
inc
xchg
lea
std
xor
pop
mov
mov
and
imul
inc
and
push
fimuls
cmc
icebp
xchg
loope
inc
test
push
or
test
add
jl
in
ret
filds
mov
mov
popa
sub
xchg
sub
jecxz
push
repnz
sbb
xor
sbb
or
or
je
sub
out
repz
add
iretw
nop
mov
cli
and
xchg
xor
mov
arpl
dec
cmpsb
rcll
std
pop
sub
inc
aam
mov
lahf
adcb
or
shrl
clc
jnp
xchg
mov
loopne
and
out
or
aad
das
sbb
pop
aad
inc
scas
movsl
push
or
clc
in
add
fisttps
add
jl
addr16
test
ja
andl
and
in
loop
mov
mov
mov
xchg
add
shrb
lret
xorb
xor
jnp
pop
stc
adc
mov
movsl
lahf
mov
mov
inc
stos
scas
jae
mov
xor
xchg
add
fwait
outsb
and
outsl
out
pop
pop
push
fidivs
daa
xor
std
lods
psubd
ficoms
repz
adc
mov
je
pop
push
jle
inc
adc
repz
xor
mov
test
pop
adc
fwait
shr
adc
leave
xchg
sub
add
inc
xchg
mov
cmp
shlb
and
push
test
outsb
out
lds
dec
pop
and
mov
sbb
loopne
loop
and
call
add
dec
pop
sbb
stos
xor
jmp
jae
or
jg
adcb
and
out
cld
aad
pop
insl
test
addr16
push
inc
jno
arpl
imul
jae
jns
xor
es
mov
or
fldlg2
mov
rcll
cmp
inc
mov
jle
sbb
sub
call
daa
mov
std
or
mov
pop
aad
push
jl
lds
jbe
push
mov
sub
dec
std
xchg
push
mov
dec
je
xchg
adc
stos
in
js
mov
pop
mov
sahf
jge
inc
cmpl
jl
out
xchg
hlt
popf
fistl
jo
cmp
push
pop
xchg
mov
cmp
inc
dec
adc
cmpsb
das
rorl
jo
dec
mov
jmp
jp
and
sbb
movsl
push
int3
sbb
imul
add
pushf
cmp
inc
inc
aad
scas
jae
imul
imul
pop
jl
jns
scas
int
fbstp
iret
and
pop
in
add
cli
inc
sbb
sub
xchg
jmp
clc
and
pop
ss
push
jb
mov
insl
loope
cmp
add
les
pop
pop
jo
mov
fwait
repz
add
aaa
cmp
inc
xchg
gs
sbb
out
sub
les
aad
cmp
pop
fdivr
repz
mov
or
out
icebp
pop
aas
fcomp
mov
cmp
daa
out
nop
dec
push
mov
and
dec
jg
mov
es
sub
scas
or
int3
ljmp
in
mov
insb
add
mov
test
cmpsb
inc
xchg
enter
mov
adc
outsb
cmpsb
les
mov
addr16
inc
pop
and
pop
testl
inc
mov
jg
cmp
push
sub
out
or
pop
mov
jle
out
pop
lret
or
dec
or
inc
sahf
xchg
iret
mov
xchg
fs
daa
rclb
mov
cwtl
loope
inc
and
out
in
shlb
into
inc
mov
jns
xchg
stos
dec
popf
inc
xor
stos
and
ret
xor
outsl
sub
jae
pop
pop
cli
and
add
or
adc
in
scas
dec
mov
fisubrs
imul
ret
imul
hlt
add
jle
mov
mov
xor
shll
pushf
ret
jg
les
sbb
mov
iret
push
cli
mov
mov
das
mov
sbb
ljmp
cmpsb
pop
mov
pop
fidivs
fisubrs
stos
repz
jmp
dec
mov
or
addr16
push
sub
mov
mov
and
in
lods
test
mov
pop
mov
or
cmpsb
setge
dec
xor
fisubl
add
fs
stos
adc
cmpsl
outsl
or
xor
mov
fstp
jle
es
adc
jmp
mul
lret
pop
push
int3
mov
cmc
xchg
loopne
dec
jge
push
stos
sub
insl
pop
sbb
jae
cwtl
sbb
xor
leave
pop
adc
movsl
push
cmp
fcompl
push
dec
push
loopne
adcb
xor
imul
sbb
dec
or
call
addr16
mov
pop
int
fists
mov
pop
in
fdivs
lock
adc
mov
lahf
pop
out
shrl
popf
loope
mov
or
adc
imulb
mov
push
mov
bound
cmp
mov
fcom
loope
mov
pop
pop
cmp
cli
mov
xchg
lods
pop
push
mov
fstpt
pop
adc
stc
and
dec
push
jl
adc
pop
add
push
mov
and
cmp
mov
lock
or
test
dec
jl
std
dec
sbb
insb
mov
and
mov
adc
stos
ret
dec
js
pop
mov
ret
cmp
ret
movsb
cmp
popf
mov
dec
lock
push
outsl
imul
es
push
mov
rolb
mov
xor
dec
aad
push
movsb
std
out
xchg
jnp
mov
or
bound
push
cmpl
pop
mov
jle
sbb
cmp
int
in
enter
sbb
aad
inc
daa
in
xchg
mov
xchg
es
jge
addr16
outsb
jecxz
mov
pop
xor
mov
sub
xchg
pushf
xor
rcr
adc
adc
add
push
push
jae
push
mov
xchg
arpl
xorb
cmc
fsubrl
iret
jp
movsb
adc
cmpl
aaa
mov
jae
stos
test
add
sub
mov
mov
inc
stc
arpl
repz
lock
mov
pop
jne
test
cmp
mov
dec
shll
xor
fucomi
test
out
divl
loop
shll
cmpl
inc
cmpsl
sbb
addr16
pop
and
pushf
arpl
mov
mov
add
int3
clc
adc
mov
outsl
test
out
jns
leave
jecxz
mov
add
xchg
nop
cmp
and
push
hlt
mov
pushf
repz
sbb
sub
rcll
add
dec
repnz
imul
mov
mov
shrl
pop
xchg
andl
cmp
lods
mov
shlb
roll
xchg
loope
fs
sbb
into
xchg
add
repnz
sub
in
adc
pop
adc
or
enter
xor
sahf
pop
shrl
testb
adcb
stos
pop
js
push
in
pop
jnp
test
sbb
and
stc
dec
adc
dec
inc
sbb
incl
mov
in
cli
cltd
sub
nop
js
or
ud0
cmp
cwtl
cmp
in
ret
and
out
cmp
outsb
mov
lock
sbb
cmp
and
mov
jmp
sub
pop
push
add
into
pop
adc
aam
hlt
or
aas
mov
sub
inc
pop
inc
arpl
push
rorl
bound
cmpsl
insb
test
push
pushf
clc
fcompl
xchg
pop
adc
sahf
pxor
jmp
hlt
mov
sarb
mov
xorl
sub
repnz
sarl
ja
pop
push
in
ja
out
clc
xor
xchg
dec
mov
fnstcw
mov
jnp
cmp
lret
inc
call
gs
incl
pop
scas
add
fdiv
leave
dec
mov
cmp
ret
add
dec
pop
mov
jns
stos
jge
jp
jecxz
dec
cs
imul
test
xchg
mov
dec
mov
aas
cltd
insb
call
jg
sbb
stos
mov
pusha
stos
cmp
fsubl
orl
or
sbb
fiadds
xor
mov
xchg
push
lret
call
jg
xor
jl
test
lods
out
mov
das
bound
push
in
sub
cmc
adc
sub
mov
cmc
stos
mov
xchg
loop
pop
mov
add
inc
or
pop
cmpsb
dec
push
and
add
push
movsb
int
mov
mov
sub
arpl
jbe
cmp
outsb
into
scas
imul
lea
push
cmp
inc
repnz
jmp
mov
pop
in
ret
sub
test
push
repz
jo
mov
popf
inc
dec
lret
out
out
sub
cli
mov
gs
sahf
push
jle
jl
push
pop
xlat
imul
cltd
rclb
push
aaa
into
insb
fsubl
test
push
cmc
into
cs
adc
pop
jno
inc
and
aaa
fadd
ret
jecxz
aaa
mov
call
scas
in
int3
inc
loope
mov
fs
rsm
xchg
leave
enter
fsub
mov
ret
or
js
movsl
mov
xchg
and
push
fs
jl
jecxz
lock
lret
mov
push
jg
cmc
mov
jmp
lock
cmpsl
fldl
lcall
sbb
xorl
or
test
and
mov
mov
jb
sub
pop
xchg
in
inc
shrb
mov
scas
mov
pop
imul
outsl
testl
pop
in
cs
dec
rcrb
push
std
xlat
pop
xor
xor
xor
jp
mov
loop
sti
in
add
mov
fstps
lods
leave
inc
out
push
mov
cmp
jno
xchg
addb
jne
dec
jne
xlat
or
xchg
sahf
fcomi
push
jg
or
shlb
pop
rcrl
xor
sbb
roll
xor
xor
and
rclb
bound
xchg
add
jno
lret
movsb
mov
outsb
out
lea
out
mov
stos
lock
lds
mov
sar
mov
cmpl
add
addr16
cwtl
mov
arpl
jmp
cmpsb
scas
leave
dec
in
hlt
xor
push
mov
or
mov
scas
mov
sbb
mov
jle
addr16
aam
mov
fnstcw
sub
pushf
dec
popa
insl
ja
roll
pop
push
xchg
sbb
dec
lods
ja
movsl
jno
addr16
push
pusha
mov
xor
dec
sub
inc
xchg
mov
out
fistl
aad
mov
sbb
test
ret
lret
jmp
push
call
pop
mov
lods
cmp
lock
cs
cmp
lock
cmp
dec
test
lods
xor
mov
and
mov
call
scas
push
xchg
mov
push
popa
lds
mov
xor
mov
push
pop
out
sub
dec
or
jecxz
dec
cmpsl
fiaddl
negb
xlat
adc
stos
sub
and
jmp
scas
cmpsl
ja
test
xchg
nop
or
loopne
lea
xor
add
iret
in
dec
out
cmpsl
or
sti
push
xchg
and
push
jl
into
xor
dec
or
or
jge
popa
aam
and
cli
cltd
cmp
ja
lcall
and
xlat
inc
push
fstpl
push
cwtl
jb
mov
ja
iret
mov
aaa
enter
shrb
rorl
ffreep
fcoms
std
xor
in
jae
aaa
xor
aad
ret
mov
push
insl
filds
lds
orl
clc
test
xchg
scas
int
dec
xor
aaa
leave
inc
mov
sbb
pop
outsl
or
sub
add
adc
and
sbbb
ja
call
pop
lods
xchg
add
push
push
test
jne
in
dec
sub
jns
push
ja
mov
sbb
mov
mov
xchg
shlb
rcll
imul
loop
mov
adc
cld
add
mov
loop
loope
out
adc
jnp
leave
mov
sti
pop
xchg
fnstcw
inc
daa
jae
cmpsl
fldcw
mov
push
out
xchg
xchg
pusha
xlat
jae
pop
xchg
pushf
divb
cmp
js
ret
out
stos
inc
enter
pop
fwait
popa
jb
xchg
ljmp
cmp
dec
cmpsl
out
mov
repnz
sbb
cli
mov
jne
and
dec
outsl
sbb
dec
push
pop
lcall
push
icebp
pop
xor
iret
adc
lods
ret
insl
das
sbb
les
rcrb
push
dec
sub
mov
movsb
push
or
adc
in
sbb
dec
aas
lret
and
popf
push
cmp
lds
mov
scas
push
outsl
inc
xor
lods
mov
adc
cmpsb
outsl
or
add
test
aaa
addl
cmp
test
sbbl
scas
xchg
push
and
adc
mov
js
push
xorl
inc
es
rorb
mov
xchg
pop
mov
jnp
ficoms
mov
xchg
inc
pop
insb
lret
mov
fs
sti
push
pop
and
aam
int3
add
addr16
jo
adc
fistl
add
cmp
movsb
mov
jmp
inc
outsb
cmp
pop
push
xchg
xchg
dec
jmp
and
je
pop
fidivrs
jb
jns
in
mov
cmp
and
cltd
test
das
arpl
fs
fldenv
sbb
inc
imul
stos
sub
sub
mov
cltd
dec
add
loopne
push
lahf
insb
mov
movsl
scas
call
mov
lea
test
pushf
xchg
test
jne
xchg
lahf
mov
pop
pop
hlt
test
sti
mov
cmpsl
and
pop
or
or
inc
mov
lret
syscall
sti
jns
add
add
sub
mov
mov
xchg
mov
insl
out
jns
sbb
es
popa
or
jmp
xlat
dec
into
mov
cli
xchg
add
pop
ljmp
rcl
adc
aad
js
lods
movsl
cmp
lods
xchg
pop
loopne
adc
inc
mov
fsub
mov
dec
loopne
dec
int
jb
les
rcrb
mov
mov
xchg
std
mov
fcmovu
pop
gs
pop
lret
add
jno
fcomip
dec
xchg
ret
mov
sbb
jl
pop
adc
rol
sbb
push
push
insb
cmpsb
sub
loope
stc
cmp
pop
or
add
xlat
lock
out
ret
adcl
push
sbb
inc
mov
dec
mov
and
push
iret
daa
push
loopne
xor
mov
add
or
out
data16
out
push
or
js
bound
loope
push
xor
cmp
mov
sub
cli
ret
mov
xor
mov
pop
jg
movsb
mov
movsb
push
sub
addr16
jne,pn
mov
je
xor
inc
mov
fcomp
xorb
movsl
xor
dec
inc
movsl
pop
xor
sar
dec
and
inc
insl
imulb
jp,pn
and
nop
mov
adc
adc
jecxz
lahf
push
jle
lret
adc
pop
dec
push
filds
cmp
outsl
cmp
fs
in
pop
outsb
lock
ja
cmpsl
loop
jecxz
rcr
loope
push
mov
pop
mov
jp
xchg
sbb
clc
popa
bound
mov
jge
adc
push
sub
loop
das
xchg
push
outsb
pop
lock
pop
cltd
and
mov
popa
fcmovb
mov
fisubrl
lods
push
fsubrl
xchg
and
mov
push
in
je
call
sub
icebp
mov
and
and
jae
jb
xchg
jns
mov
fmulp
test
adc
pop
cwtl
test
mov
xor
ss
test
mov
gs
cli
adc
pop
xchg
pop
imul
mov
mov
jbe
inc
mov
sub
pop
sub
xor
and
lods
or
pop
in
movsl
iret
jae
enter
lret
sbb
mov
in
push
fidivl
jg
pop
pusha
std
push
inc
add
jo
mov
push
imul
neg
out
add
mov
push
mov
enter
add
loopne
rcl
pushf
mov
lods
cmpsb
dec
cmp
rcl
arpl
xlat
enter
push
push
mov
subl
roll
sbb
mov
push
push
cli
fistl
sub
mov
cmp
out
pushf
mov
lods
sub
push
sub
inc
mov
int3
mov
das
notb
imul
je
std
mov
aad
jnp
mov
jle
push
jle
rcl
jnp
test
lahf
imul
shll
adc
out
scas
imul
jl
ret
cmp
leave
pusha
dec
and
fsubrl
adc
jbe
xor
xchg
or
test
mov
cltd
jecxz
pop
lahf
cltd
ds
cmpsl
mov
xor
add
fs
shll
mov
in
test
test
jae
fcomp
pavgw
into
xchg
xchg
xor
sbb
sub
jnp
dec
out
lcall
ret
mov
std
sbb
lcall
subl
push
or
lea
les
je
int3
or
mov
pusha
cmp
xchg
test
popf
mov
imul
xor
inc
inc
sbb
xlat
or
pushl
jne
loopne
add
dec
std
mov
fmuls
jno
add
xchg
insl
push
jmp
mov
repz
ficompl
pop
fmuls
adc
std
iret
push
mov
jecxz
sub
lds
fistps
cmp
jo
xor
test
mov
fcoms
cmpsb
push
cwtl
or
dec
jg
add
addl
loopne
fisttps
imull
cld
ja
mov
insl
jnp
mov
xchg
jae
je
test
addr16
push
jmp
adc
inc
int
movsb
push
cld
sub
out
pop
xchg
xchg
pop
cmp
das
xchg
jb
add
pop
pop
sbb
sub
cwtl
movsl
cmp
pop
outsb
insl
xor
xor
aad
movsb
sbb
scas
out
add
mov
push
adc
scas
inc
cmpsl
add
dec
jne
xchg
cmp
inc
jns
sahf
inc
idivl
mov
ret
lock
pusha
and
xchg
add
xor
dec
mov
sahf
xchg
test
push
dec
inc
movsl
xchg
or
mov
inc
in
or
cmp
rclb
repnz
jnp
xchg
enter
out
out
mov
lret
shll
scas
int3
or
setg
aas
jbe
jl
push
mov
out
jl
scas
repz
pop
mov
in
and
push
fldenv
mov
stos
or
outsl
ficompl
pushf
dec
mov
xor
cwtl
loop
ret
idivb
add
in
loopne
jecxz,pt
bound
push
adc
in
lds
pop
in
clc
iret
cmpsl
add
adc
xchg
pop
sbb
xor
ja
les
fiaddl
mov
jno
sub
gs
ljmp
lods
and
xor
mov
or
mov
jge
fdivrl
inc
ret
sub
outsb
mov
lods
out
fistps
sub
test
sahf
add
sarb
push
scas
xor
loop
cmp
adc
call
js
cmp
pop
out
in
cmpsb
jge
addr16
inc
jo
int3
out
pop
lods
frstor
dec
fidivs
dec
jle
mov
daa
xchg
adc
movsb
test
xchg
cmp
mov
fdivp
test
scas
gs
hlt
cli
lahf
jge
cmp
into
or
mov
lock
sub
xor
mov
pop
mov
aam
into
rcl
mov
fidivrs
push
xchg
in
sbb
popf
xor
adc
repz
and
inc
scas
mov
xchg
mov
in
xchg
cmp
jnp
pop
mov
add
sub
cltd
pop
mov
xor
pop
shlb
fbstp
rclb
int3
xlat
lods
sub
or
xchg
xor
and
aad
lahf
xor
fidivs
repz
sub
ds
mov
insl
inc
in
mov
sub
insl
dec
cmc
ror
and
imul
mov
rolb
int
clc
push
adc
ror
adc
shll
cmc
or
mov
dec
jl
mov
jne
xlat
adc
sbb
cltd
push
fsubp
mov
out
mov
pushf
cmp
stc
out
cmp
mov
dec
xor
or
xor
dec
xchg
sbb
movsb
xchg
sbb
in
fbstp
push
xchg
aas
push
sarb
dec
mov
fcmovbe
les
js
pop
push
jns
adc
in
sub
dec
scas
out
jmp
push
cmpsb
xor
mov
sbb
sub
enter
or
inc
add
cltd
rorb
jae
enter
cwtl
scas
cltd
test
pop
mov
pop
dec
or
xchg
inc
js
and
mov
xchg
fnstenv
mov
add
rcrb
ret
mov
pop
add
cmp
inc
lret
sub
dec
ret
mov
fbld
notb
inc
jbe
xchg
cmp
cmp
in
jbe
lcall
fisubs
mov
xchg
mov
daa
push
aaa
insb
fsubl
stos
cmp
fwait
loop
sub
sbb
cld
loop
push
les
sarl
movsb
pop
adc
sub
shrl
xchg
pushf
das
xchg
dec
inc
pop
dec
adc
mov
jmp
or
push
jb
mov
push
test
outsb
xor
mov
xchg
lock
outsl
pop
push
jmp
sbb
mov
aas
call
and
xlat
mov
outsb
int3
lret
pop
enter
ret
mov
stos
mov
and
jge
or
pop
adc
stc
xchg
out
aad
inc
mov
stc
mov
mov
dec
jmp
loope
or
mov
dec
cwtl
imull
or
cli
lret
leave
mov
cltd
dec
mov
push
dec
pop
push
rorb
jb
aam
ret
jp
pop
cmp
xlat
loope
enter
mov
lea
movsb
gs
call
or
cmp
dec
jno
decb
imull
or
jns
mov
dec
es
in
je
mov
imulb
jmp
repz
sub
loop
mov
xlat
movsb
mov
in
es
jmp
and
mov
and
mov
sbb
inc
jmp
sahf
repnz
xor
push
xor
jg
inc
lahf
cmp
dec
aas
mov
pop
jecxz
in
inc
enter
xor
mov
mov
cmpsb
inc
mov
mov
sti
push
and
and
cwtl
in
test
or
jecxz
xor
mov
cmp
add
mov
cmc
scas
pop
test
pushf
push
and
or
aad
in
and
repz
jns
pop
push
jns
aas
sub
mov
lahf
leave
dec
gs
mov
repz
push
enter
pop
pop
or
jae
aaa
and
in
movsl
and
sub
pop
xor
test
notb
fstpl
push
repz
sbb
mov
add
imul
inc
or
gs
clc
cli
dec
mov
jo
sub
in
shll
mov
loop
inc
jle
lret
es
in
clc
in
sub
cs
push
or
fisubl
add
dec
mov
jno
pop
pop
inc
or
stos
lods
and
stos
test
in
jo
ret
push
push
pop
ja
xchg
aaa
cmp
mov
daa
jno
pop
xchg
ljmp
and
rcrl
or
pop
loope
sub
fstp
test
lods
xor
xchg
adc
pop
xchg
test
cmp
inc
dec
cmp
mov
repz
xchg
mov
lret
lock
daa
jae
pop
pushf
add
sub
push
mov
mov
sub
or
dec
dec
je
adc
add
es
add
clc
icebp
jmp
and
push
jge
jnp
insb
stc
jmp
ss
outsb
mov
ss
call
sbb
pop
add
jb
sbb
mov
das
add
into
adc
cltd
popa
test
stos
mov
aam
pop
sbb
mov
push
cmp
sbb
dec
pop
hlt
inc
sbb
push
add
aam
and
pop
ret
inc
jo
push
add
aaa
mov
cmc
ficoml
pop
sub
mov
xchg
adc
call
dec
push
out
mov
or
lods
lcall
adc
and
call
cmp
adc
cmc
incb
int3
mov
and
cltd
fldcw
dec
add
jmp
lods
xchg
lahf
sub
and
std
lahf
fidivrl
cmp
xorl
sarb
jle
lods
sub
in
fchs
shll
pop
lea
mov
sbb
jae
add
dec
jno
outsl
pop
lods
jae
insl
insl
inc
fs
insl
sub
orl
cmpsl
push
jge
outsb
das
out
push
pop
sbb
call
dec
aas
jnp
cli
js
mov
pop
cld
ja
mov
adc
xchg
sub
inc
mov
add
orl
adc
stos
or
arpl
sbb
jmp
stos
jb
icebp
mov
push
aad
dec
sahf
mov
push
add
das
cltd
lods
add
xor
mov
mov
inc
insl
data16
push
xlat
push
cmp
jmp
adc
fstpl
push
imul
insl
fs
mov
push
int
call
mov
int
mov
insl
cld
scas
mov
repz
mov
cltd
mov
fcompl
and
cmp
push
cmpsl
push
adc
in
lret
das
rol
mov
dec
cmpsb
cltd
add
jmp
mov
pop
mov
sbb
mov
xor
aas
xchg
cmpsb
dec
xor
xchg
pop
mov
test
sti
mov
mov
and
mov
lods
fdivr
xlat
jmp
aad
pop
outsb
loop
adcl
mov
jbe
pop
pop
mov
andb
push
cmp
mov
test
xor
adc
sub
ret
and
xlat
imul
ret
mov
xor
test
stc
cmp
push
lock
add
sub
lret
ja
ja
lock
push
xchg
call
ret
scas
lds
cltd
out
pop
lret
mov
loopne
stc
jg
vmaxsd
mov
push
xor
movsl
cmpb
test
xchg
adc
cmpsb
lock
popl
jnp
dec
test
into
mov
aas
mov
pop
adc
and
clc
iret
mov
mov
ret
andb
xchg
mov
push
pop
movsl
mov
pop
out
sub
push
fcoml
xchg
fnstcw
xchg
mov
mov
clc
insb
jecxz
adc
mov
roll
pushf
testl
ja
lds
fcmovu
push
jno
xchg
cmp
dec
fnstsw
adc
test
ja
cs
add
dec
roll
fisttpl
loop
lods
mov
cltd
repz
sub
lret
outsl
jl
jae
push
cs
inc
cmp
das
xchg
jl
sti
adc
and
out
loopne
cmp
flds
aam
ficomps
lds
xor
xor
pop
ja
mov
xchg
cmp
les
outsb
push
lahf
xor
test
mov
mov
push
inc
cmp
lret
fidivs
dec
enter
pop
rcrb
scas
in
call
icebp
mov
cmpsl
out
adc
cmp
gs
mov
out
push
gs
jp
loopne
cmp
inc
adc
rolb
jg
loopne
imul
mov
in
xor
xor
shll
leave
shld
movsb
lods
into
or
cli
xlat
in
jle
adc
or
shrl
pop
sbb
out
pop
cmpsl
xchg
inc
pop
push
in
xchg
ret
cmp
sub
ret
shrl
adc
ja
add
dec
sahf
mov
sub
shl
ret
cmp
pop
pop
pop
add
adc
sbb
cld
lret
mov
daa
daa
pusha
loope
out
mov
or
dec
xor
shrl
enter
or
sub
mov
push
repz
xor
sbb
and
mov
ds
jg
lret
cmp
adc
inc
mov
aas
lea
aaa
ror
and
xor
adc
mov
mov
in
ss
loopne
sbb
fisttpl
shrb
pop
xor
inc
jns
dec
lcall
gs
mov
aam
int
add
and
mov
push
js
rolb
adc
test
or
xchg
dec
inc
sbb
out
jns
xchg
ficompl
iret
sub
xor
adc
cmc
xchg
sub
jl
insl
dec
dec
test
push
mov
lods
pushw
in
mov
pop
jge
push
stos
movsl
mov
and
jns
sbb
add
jo
leave
and
out
mov
enter
or
push
mov
jle
out
push
fstpl
insb
aaa
cmovno
lcall
fs
shl
lahf
cltd
add
inc
ret
sub
jnp
repz
inc
mov
mov
dec
js
lcall
dec
test
jae
adc
xchg
ret
fldl
outsl
inc
cmp
mov
out
les
out
sub
cmp
pop
push
aad
sbb
inc
and
lock
push
mov
out
inc
adc
add
pop
xchg
mov
pop
fstpl
push
and
mov
ljmp
mov
outsb
xor
dec
inc
dec
std
movsl
mov
jmp
add
xchg
xor
mov
pop
and
shl
fstps
and
fsqrt
ficoml
pcmpeqd
movsb
pop
out
scas
imul
push
mov
dec
daa
xor
xchg
push
stos
int
in
mov
mov
push
loopne
pushf
jl
xchg
mov
rcr
jns
in
cmp
cmp
scas
mov
inc
mov
scas
xlat
xchg
divl
scas
add
inc
lods
push
xor
insl
xor
scas
pop
lea
sti
insl
out
add
push
mov
mov
or
arpl
add
fxch
pop
je
sub
and
cld
lds
ljmp
ret
pop
jecxz
xchg
pop
loop
xlat
push
sbb
xor
sub
add
mov
aad
pop
jno
insb
and
sub
scas
lret
int3
lock
hlt
inc
stos
and
mov
adc
push
push
pop
jne
mov
adc
mov
jl
cmp
cmp
iret
out
add
repnz
push
xchg
fwait
mov
out
in
hlt
insl
cmp
lret
mov
pushf
push
push
outsb
addb
cwtl
test
aaa
jno
dec
or
aad
add
mov
xor
loop
sub
mov
fsubs
push
adc
int3
xor
push
loope
and
dec
push
push
pop
mov
stos
jecxz
lcall
and
or
cmpsb
pop
and
lea
test
dec
popf
fisubs
lret
cmpsl
stos
mov
mov
lcall
xchg
cmpsl
and
test
rclb
mov
popa
stos
dec
mov
push
jge
lea
pop
jne
mov
enter
xlat
les
xor
mov
lock
xor
adc
push
mov
xchg
mov
push
loop
sub
loope
sarb
lods
mov
adc
cmpsb
or
adc
aam
or
sbbb
mov
loop
jge
hlt
cmp
sub
sbb
cmp
mov
or
stos
mov
sub
push
mul
leave
or
lss
rol
dec
iret
mov
movsl
mov
scas
ss
mov
in
push
aam
xchg
ljmp
mov
stc
lds
mov
mov
mov
xor
xor
popa
jle
mov
or
pop
test
out
adc
repz
jns
jmp
mov
imul
jb
add
inc
cmc
add
scas
jmp
push
aaa
std
jp
js
xor
jle
popa
repz
icebp
xchg
push
mov
mov
fwait
int
das
fildll
mov
xor
mov
xchg
cmpsl
push
inc
adc
sub
mov
inc
bnd
pop
mov
xor
adc
xor
aad
insb
stos
pop
jne
out
stc
lods
xchg
adc
jbe
aas
fidivrs
xchg
std
pop
xchg
dec
mov
aaa
xor
jo
xor
xor
cmp
cld
test
jg
repz
call
popf
add
clc
icebp
and
fwait
jle
pop
or
lret
in
in
test
push
addr16
add
lods
outsb
pushf
cmp
mov
fstpt
or
mov
in
lahf
lcall
and
dec
out
push
xchg
cld
in
inc
mov
out
mov
movsb
pop
mov
sub
out
dec
stos
jae
jno
sbb
nop
stos
test
lret
fdivs
cmpsb
sub
adc
rorb
or
xor
cmpl
pop
xor
subl
imul
sub
jle
adc
xchg
mov
push
mov
add
adc
insl
cmpsb
add
cli
dec
ret
fistpl
and
sub
test
and
pop
pop
xchg
out
and
repz
js
cld
data16
ljmp
lods
shll
aaa
sub
fcmovnbe
or
scas
je
in
stos
es
fstpl
pop
mov
cld
movsb
and
movsl
add
std
push
jbe
out
repz
mov
mov
dec
in
cmpl
and
rcrb
xlat
int3
js
pop
je
cmp
mov
lds
jge
je
cmp
fwait
jle
dec
push
clc
std
inc
popa
cmp
icebp
and
dec
aaa
sar
pop
xor
pusha
mov
jmp
adc
adc
inc
mov
dec
pop
adc
pop
xor
fst
mov
shll
popf
add
ja
inc
cmc
test
pop
cs
fidivs
sar
inc
loope
aas
pop
mov
sbb
call
movsl
mov
push
movsb
push
inc
jbe
xchg
mov
cmp
push
loop
stos
or
xorb
ret
cltd
fldt
push
jmp
sub
test
cmp
imul
mov
iret
scas
lds
sbb
xchg
or
jns
lret
pop
pop
sbb
stc
xchg
mov
cmpxchg8b
loop
stos
cmp
add
push
pop
push
fisttps
inc
xor
cmpsb
les
in
xchg
inc
mov
pop
shll
push
and
pop
add
push
shll
inc
pop
dec
and
adc
mov
aad
mov
popf
aad
pop
cmpsl
dec
pop
cwtl
in
fisubs
es
inc
pop
jae
inc
and
mov
leave
movsl
mov
xor
mov
aam
sarb
pop
lcall
aam
push
mov
call
xchg
dec
jg
mov
pop
push
sahf
inc
scas
imul
adc
jnp
mov
shlb
mov
push
jecxz
in
mov
cld
xor
lret
push
mov
sbb
and
sti
and
rorb
outsb
fisubrl
add
push
gs
mov
mov
mov
pop
and
out
lahf
pop
mov
inc
shll
and
and
inc
sarl
mov
jge
aam
pop
cwtl
test
push
ja
or
lret
inc
mov
into
and
jne
sub
mov
pop
pop
jae
or
inc
out
cli
pop
mov
leave
jns
push
pop
fxch
add
out
inc
and
mov
cmp
shlb
push
enter
cmp
or
dec
xor
jl
mov
in
mov
dec
sarl
fcompl
data16
fs
iret
lret
imul
scas
add
aaa
test
cmpsl
or
cmp
dec
push
dec
fbstp
sub
fwait
push
mov
push
mulb
rolb
enter
lock
lret
mov
xchg
aam
mov
push
cmp
div
cmpb
outsb
pusha
adc
xor
sbb
repnz
pop
jns
aad
jmp
adc
hlt
xor
mov
sub
mov
ret
and
xor
jmp
mov
mov
push
scas
adc
call
leave
pop
mov
cwtl
scas
imul
rcrl
xor
js
dec
scas
pop
push
add
dec
lahf
sbb
push
sahf
add
adc
cmp
cmp
test
loopne
sub
mov
lret
cwtl
repnz
push
jno
arpl
cs
or
lods
insl
les
imul
lahf
std
xor
push
fadd
jns
cmp
inc
movsl
fnstsw
push
pusha
and
cwtl
mov
in
scas
std
jo
dec
repnz
inc
cmp
arpl
cmc
sbb
inc
mov
mov
mov
fwait
ds
add
pop
jo
sub
loope
jb
iret
fstl
outsb
aam
fdivs
das
or
pop
push
aad
scas
jb
push
add
arpl
dec
outsl
insb
xchg
popa
loopne
pop
inc
sarl
adc
xlat
je
push
and
outsb
sub
mov
mov
lds
jo
jns
pop
xchg
cmp
sbb
lods
pusha
push
in
jle
xor
aam
test
inc
mov
sbb
lret
add
adc
lock
and
mov
jmp
jl
push
test
dec
out
jne
jmp
ds
lds
cmpl
punpcklbw
pop
lds
mov
mov
push
mov
sub
mov
mov
fstpl
push
inc
es
loop
or
in
or
xchg
iret
add
adc
sub
mov
cmp
out
mov
adcb
out
xor
dec
cmpb
pop
jo
cs
mov
mov
dec
sbb
enter
mov
jae
cmp
pop
das
add
jmp
mulb
test
mov
pop
test
mov
and
pop
imul
xor
andl
es
xor
ret
popa
dec
mov
fimuls
cmp
cs
movsl
mov
mov
scas
or
push
sub
std
pop
adc
xchg
insb
push
in
push
sbb
jnp
jl
and
out
in
or
imul
sarb
insl
lahf
sbb
push
mov
leave
mov
mov
sbb
sub
push
jae
stc
mov
jle
xchg
sub
xchg
sbb
xchg
sub
and
or
sbb
mov
jecxz
or
mov
or
icebp
sti
push
mov
or
cld
outsb
xchg
popf
jmp
je
fstl
loopne
cmc
stos
or
int3
xchg
push
add
fisubrs
mov
jg
stc
clc
mov
dec
xchg
mov
mov
cmc
and
test
ret
inc
testb
lea
leave
out
call
pop
jnp
mov
inc
lock
scas
mov
add
adcb
cmpsl
cmp
jg
out
shrb
repz
jne
fists
jne
cld
or
clc
mov
mov
add
push
fs
shll
add
xor
mov
sub
adc
iret
jmp
insb
add
test
xor
mov
push
adc
shlb
mov
lret
stc
fs
mov
call
mov
out
xlat
imul
lahf
fcompl
push
into
pop
pushf
icebp
mov
push
inc
sub
outsb
sub
add
mov
out
mov
jl
pushf
mov
sahf
out
or
pusha
imul
add
mov
repz
mov
fisttpl
push
popf
push
repz
mov
daa
cmp
in
cli
int3
andl
fimuls
mov
jecxz
or
inc
pop
jb
outsb
pop
rorb
pop
fsubrl
cmp
jle
inc
rcl
repz
mov
stc
scas
outsb
daa
mov
out
inc
cmpsl
mov
cmp
pushf
int
mov
pop
sbb
lret
adc
push
jnp
rolb
jns
mov
inc
scas
mov
jg
cmp
out
imull
orl
sbb
movsb
cmp
enter
cmp
jecxz
mov
and
mov
mov
mov
cld
cmc
lret
xchg
add
pusha
xchg
pop
imul
pop
cmp
shrb
sub
outsl
sbb
lahf
jl
push
stos
inc
scas
insl
or
adc
jg
adc
sbb
mov
insl
or
in
dec
popf
cld
push
je
inc
fisubl
mov
push
pop
stc
jmp
repz
add
cmp
sub
push
fdivs
daa
addr16
fiadds
in
push
mov
adc
sub
inc
jo
call
into
test
ss
ret
fadds
mov
mov
repnz
ja
fsubs
dec
ja
sub
cmp
stc
mov
push
mov
cmp
jns
pop
cs
test
test
js
fisubs
test
adc
pop
mov
adc
cmpsl
pop
mov
or
push
inc
adcb
adcl
lods
jge
push
pusha
dec
fcmovnb
stos
imul
push
test
pop
pushf
or
pushf
in
mov
out
pop
out
movups
mov
dec
lea
mov
add
jne
jb
jns
pop
test
inc
push
mov
pop
sub
test
cmp
sub
les
iret
sub
pop
ja
mov
cmp
call
xchg
loopne
aas
xor
jae
inc
sub
repz
imul
aaa
pop
sti
xchg
lods
mov
and
inc
jo
adc
imul
sbb
fcomps
shld
fstpt
je
or
sub
sbb
enter
popf
aam
dec
lcall
jo
add
push
mov
in
pop
lret
jns
jae
movsl
in
out
pop
cmc
test
and
mov
mov
stos
and
or
cli
sbb
add
pop
adc
jge
cmpsl
enter
sbb
lret
mov
sbb
into
mov
sub
pop
or
xor
and
stos
arpl
push
stos
addr16
or
loopne
ret
mov
mov
clc
add
xchg
jmp
mov
mov
movsl
in
inc
xchg
dec
in
cmp
mov
cld
cmp
popf
data16
rorl
xor
pop
fwait
jge
out
pop
dec
jns
jp
push
jno
xor
sub
cmp
aaa
or
push
mov
scas
jl
xlat
loopne
inc
push
jno
mov
mov
adc
aam
inc
inc
xchg
lret
sbb
push
repz
fs
cld
vminsd
pop
xor
lcall
testl
mov
arpl
ljmp
rcrb
mov
or
fidivrs
jno
mov
push
fists
subb
sbb
fcompl
ret
dec
inc
xor
jnp
test
in
mov
scas
imulb
xor
call
popf
mov
enter
lret
jae
outsl
jl
fisubs
movsb
sbb
or
jmp
and
and
xchg
aas
mov
in
adc
inc
pop
mov
cmp
mov
lcall
cmpsl
add
xor
xor
fwait
pop
scas
xor
and
mov
shrb
mov
cmp
orl
mov
pop
std
ja
out
jp
and
shl
inc
daa
and
repnz
mov
xor
arpl
mov
cwtl
orb
and
cltd
adc
add
aaa
fists
mov
cmpsl
ret
push
incl
mov
addr16
pop
repz
or
adc
jns
add
nop
inc
mov
test
dec
sub
or
std
outsl
loopne
jbe
fst
dec
pop
xor
test
and
fistpl
rolb
add
or
push
sub
pop
nop
call
test
pop
lds
inc
add
mov
int
popa
ja
inc
shl
add
jno
in
dec
push
sbb
dec
inc
shrl
and
test
pusha
inc
ret
int3
dec
push
pop
shlb
xlat
fisubrs
mov
loopne
cmp
xchg
mov
mov
or
into
nop
addr16
mov
xchg
idiv
gs
inc
cs
and
in
scas
inc
movsb
testb
jp
lock
push
mov
lcall
sub
insl
ljmp
sub
lods
leave
loop
leave
enter
imul
xor
fisttpl
enter
shrb
out
pushf
ret
adc
out
outsl
push
cmpsl
mov
push
sbb
std
and
es
inc
dec
sbb
enter
fbld
scas
xor
lcall
mov
cmp
cmpsl
xchg
ror
jg
add
into
jg
and
jns
xor
test
test
inc
add
lock
or
aas
lea
scas
adc
mov
adc
fistpll
repnz
das
add
push
and
mov
pop
sti
mov
cli
mov
jno
add
js
subb
popf
and
sbb
jns
mov
fistl
daa
dec
mov
and
add
mov
inc
ljmp
stos
movsb
mov
sub
loope
movsl
sbb
lahf
xchg
or
mov
lock
insb
sub
xchg
push
push
pop
jl
scas
out
sbb
push
push
test
imul
sbb
jmp
dec
add
mov
push
mov
lea
inc
and
and
inc
sbb
jae
lods
and
and
add
sbb
xor
stos
outsl
arpl
jns
adc
cmp
hlt
sbb
shrb
mov
aam
push
inc
pop
push
imul
aas
sbb
mov
cmpsb
shll
cmp
adc
and
mov
xchg
dec
and
mov
cmp
jb
stos
addr16
pop
mov
mov
lret
fbstp
sub
in
fs
cld
lcall
add
pusha
sbb
out
push
ss
mov
popl
sub
cmpsl
or
cmc
bound
or
jno
ror
lods
jb
pop
test
mov
pop
stos
add
in
dec
add
adc
cmovae
add
mov
pop
mov
inc
pop
dec
or
mov
ror
dec
or
xchg
add
pop
in
mov
addr16
xorl
movsl
and
out
sub
jns
loope
pop
repz
or
xchg
mov
mov
sahf
xor
cmpsb
mov
push
addr16
mov
and
int3
pop
add
push
or
mov
cmp
or
ret
jae
pop
data16
movsl
stc
inc
ret
adcl
mov
inc
rcrl
lcall
push
fwait
call
shl
idivl
and
fistl
cmpsl
cmp
flds
repnz
or
ret
scas
add
test
aad
popf
mov
xor
xchg
pushf
push
adc
or
xor
mov
cmp
js
dec
pushf
xor
adc
sub
loop
and
ret
lea
shr
aaa
leave
xlat
mov
or
into
sbb
mov
xor
lea
out
mov
or
adc
jns
cld
sbb
movsl
mov
imul
frstor
xchg
mov
in
jl
or
cmp
cltd
inc
mov
add
adc
lret
mov
jo
imul
adc
jmp
roll
dec
inc
lcall
addr16
push
bound
sub
inc
push
call
rorl
ljmp
mov
and
push
jl
push
add
pop
sub
lods
jle
or
test
xchg
mov
mov
stos
push
in
inc
mov
xor
sbb
gs
sub
scas
jle
popf
sub
mov
fmuls
inc
mov
ret
fisttpl
lea
push
add
push
sub
in
mov
push
jecxz
xor
imul
test
and
addr16
roll
out
mov
add
mov
aas
or
bnd
sar
lds
add
pushf
xchg
mov
mov
rolb
imul
stos
cld
jae
in
adc
jecxz
push
fidivrl
iret
decl
imul
lret
jns
test
mov
inc
sub
adc
jns
sbb
cmp
jmp
cmp
arpl
mov
lahf
rcll
lods
inc
xor
addr16
insb
stc
in
lods
fmuls
enter
clc
arpl
pop
push
js
test
add
icebp
mov
decb
dec
mov
sbb
pop
mov
lret
pop
imul
push
lds
pushf
or
mov
test
pop
mov
add
mov
icebp
dec
mov
pop
and
jg
mov
xchg
xchg
sub
and
cmp
lock
cwtl
test
adc
out
jge
hlt
push
insb
adc
xchg
jg
adc
ret
xor
adc
fldenv
add
and
in
mov
fnstsw
fs
pop
sub
dec
inc
cmp
imul
rdpmc
push
fs
mov
mov
mov
add
jae
sub
dec
sarl
les
xlat
cmpsl
enter
hlt
push
repnz
out
les
imul
sub
sti
les
xor
mov
aaa
daa
lcall
pop
adc
push
stos
pushf
mov
outsl
push
loop
jbe
mov
nop
pop
push
adc
add
mov
or
inc
movsb
pop
mov
in
push
jle
mov
pop
push
std
push
fs
rclb
mov
andb
sbb
mov
test
clc
sub
add
adc
lea
push
push
xlat
popf
faddl
inc
mov
pop
mov
sub
call
addb
cmp
shl
mov
fidivs
add
int
pushf
dec
or
push
stc
jb
loope
xchg
jp
sbb
loopew,pt
pushl
xchg
cmp
jl
fcompl
sti
inc
jecxz
adc
push
xor
pop
outsb
mov
clc
sbb
xor
dec
push
sti
jbe
loopne
int
roll
cs
and
mov
mov
sti
cmp
xchg
movsl
xchg
call
cmpl
dec
out
mov
adc
xlat
mov
inc
imul
and
cli
imul
mov
sub
add
sbb
repz
mov
ja
sbb
addr16
xchg
or
inc
std
lret
inc
scas
sahf
addr16
daa
jl
jnp
jmp
pop
mov
lock
and
pop
cmp
dec
lret
dec
sbb
or
test
aaa
mov
fdivrl
outsl
jmp
push
mov
pop
push
sbb
popa
std
iret
js
daa
rcrb
test
cmp
stos
in
lahf
lahf
lds
inc
push
add
xlat
adc
dec
cmpsl
and
nop
ret
test
pop
mov
cltd
and
and
pop
ret
dec
pusha
xchg
outsl
leave
mov
test
inc
iret
fnsave
scas
pop
push
mov
adc
push
ret
icebp
pop
jp
je
cmpsl
gs
incb
or
push
cmp
cmp
mov
and
imul
mov
insb
mov
sub
xchg
xchg
cmp
gs
dec
or
mov
test
sbb
stos
jmp
jmp
movsl
inc
pop
push
insb
jnp
cld
mov
adc
and
sti
pop
xchg
pop
cli
add
out
test
pop
pop
test
jge
push
adc
push
fs
aam
cwtl
inc
cmp
std
add
jbe
aaa
sahf
das
push
fisttpl
test
sbb
scas
mov
pop
adc
test
mov
pop
cmp
sbb
xor
enter
and
add
jp
je
xor
cmp
out
add
adc
cmp
daa
pop
int
and
xlat
inc
and
lods
push
fstps
xchg
repz
xchg
mov
adc
mov
fwait
outsb
pop
sbb
cmp
addr16
in
mov
mov
mov
imul
add
inc
and
xchg
repz
inc
or
xlat
int3
addr16
out
lds
fs
jns
sub
or
gs
and
cmpsl
and
shrl
testl
fs
nop
xor
mov
daa
lcall
mov
cltd
jmp
jne
in
enter
fstl
scas
sub
pop
dec
mov
fistl
and
jnp
scas
mov
lret
adc
or
adc
cmp
imul
or
mov
aas
pop
movsl
sti
pop
lahf
test
add
popf
mov
xchg
xchg
orl
xchg
int
movsl
hlt
iret
test
pop
out
push
and
clc
add
jmp
lahf
cmpsb
jno
push
jge
scas
adc
or
and
dec
test
fwait
cmp
hlt
xchg
add
push
dec
push
pop
xchg
push
push
mov
push
repz
daa
cld
cld
jnp
inc
jns
jmp
adc
aas
sar
ljmp
cld
shrl
lret
arpl
pop
mov
add
xlat
add
cmp
push
inc
mov
or
out
and
call
jb
jl
jne
aad
nop
stos
adc
pop
or
das
mov
sti
push
aas
and
pop
pop
pop
movsl
daa
lods
or
push
pop
mov
cmpsl
or
iret
pop
xor
gs
mov
or
rcll
push
lret
call
and
out
stos
mov
ja
and
out
xchg
lret
mov
xchg
dec
fistl
lds
leave
dec
cmp
arpl
push
push
jae
out
mov
and
mov
or
cltd
aas
lcall
push
scas
lret
imul
stos
pop
loope
mov
jge
test
sbb
pop
and
cmp
enter
adc
sar
sahf
roll
push
sub
shll
xchg
icebp
mov
sub
mov
repnz
push
test
fs
jge
into
out
dec
jp
mov
in
cltd
inc
lea
popa
enter
mov
xchg
and
mov
loope
and
movsb
jno
mov
cmp
aad
jns
mov
je
pop
lds
popa
push
lods
into
icebp
push
jb
cmp
js
or
mov
scas
gs
fs
adc
inc
add
test
mov
push
aad
or
adc
mov
cmc
sub
leave
std
adc
jns
lods
push
mov
mov
insl
or
cmc
sarb
icebp
jge
and
lds
mov
add
popf
xor
enter
lods
rcl
mov
jge
mov
stc
popf
enter
fisttpll
insl
or
or
out
loope
inc
les
lea
mov
push
dec
push
xor
xor
leave
roll
dec
jno
movsl
jns
sub
outsb
leave
enter
mov
jne
jns
mov
and
cltd
test
loope
mov
imul
mov
mov
sbb
and
movsl
sahf
mov
sub
mov
dec
cmp
push
adc
nop
std
or
fdivrl
popa
jg
icebp
sub
in
test
sarl
mov
and
cmp
and
mov
push
lods
test
test
stos
push
test
cmp
add
mov
push
gs
lds
xchg
sbb
ds
cltd
call
cmp
in
mov
movsb
syscall
mov
jno
fldcw
test
test
push
sub
std
push
and
inc
jl
sub
icebp
push
call
or
xchg
shrb
hlt
jne
gs
push
stos
mov
jl
sub
mov
jge
into
sub
popf
movsl
xchg
jmp
js
dec
jns
jge
mov
loope
gs
dec
cmp
jne
cmp
mov
and
cli
mov
mov
inc
movsl
movsl
mov
adc
push
fnstsw
lds
inc
push
xchg
into
aad
cmp
push
add
cmp
cmc
lds
imul
cmp
jne
cltd
sub
add
sbb
insl
inc
adc
and
leave
fsts
mov
pop
ds
and
cs
call
or
rcl
adc
hlt
loope
gs
cltd
mov
outsb
test
leave
ror
mov
pop
inc
popf
sbb
cmp
and
jns
mov
jge
and
lds
imul
xchg
or
push
sub
clc
stc
leave
mov
adc
enter
popf
mov
enter
lods
lret
xchg
nop
pop
mov
and
movsb
dec
mov
sub
or
dec
xchg
popa
sbb
inc
lds
movsb
aad
mov
jmp
and
jge
into
sub
movsl
shrl
lods
cmp
js
or
loop
cmp
mov
xchg
sbb
xchg
cltd
nop
rclb
mov
imulb
mov
pop
push
es
out
sub
add
sbb
adc
or
lret
notb
cmp
cmp
popf
adc
pop
pushf
add
insb
movsl
xchg
jns
adc
mov
and
pushf
xchg
push
nop
test
add
stos
mov
hlt
movsb
lahf
lods
or
and
add
mov
cmpsl
push
lahf
fnstcw
scas
repz
dec
cmpb
lods
adc
mov
sub
mov
aad
jmp
sbb
fildll
jle
jp
les
repnz
imul
mov
sarl
xor
sbb
scas
pop
outsb
xchg
std
clc
adc
test
lcall
xchg
jmp
cmp
jg
push
push
cmp
xor
setnp
xor
cmpl
push
dec
out
xor
movsl
daa
xchg
and
outsb
inc
inc
mov
xchg
and
cwtl
pop
maskmovq
jle
loope
xchg
fldt
dec
shlb
mov
mov
ss
mov
sbb
mov
add
fcom
dec
lods
mov
test
push
add
mov
lods
xor
push
aaa
dec
fistl
sbb
mov
in
loop
push
and
stc
faddl
dec
lahf
push
je
or
xchg
movsl
dec
stos
mov
in
and
mov
mov
mov
mov
mov
movsl
pop
xor
or
pop
add
adc
inc
shlb
rorl
stos
xchg
add
inc
xor
mov
pop
bndstx
mov
sbb
push
push
jecxz
lret
popa
dec
scas
or
pusha
cmpsb
mov
out
jle
es
cli
mov
lea
cmpsl
cwtl
sahf
addr16
sbb
jnp
pop
or
pop
sub
aam
pop
je
xor
sub
out
aad
lea
imul
or
push
ror
testl
pop
dec
mov
sub
pop
shrb
mov
mov
xchg
cmc
data16
aam
pop
stos
shlb
insl
dec
addl
lods
clc
sbb
add
push
bound
sbb
mov
dec
outsb
add
iret
roll
fimuls
sub
or
and
popa
nop
repnz
xor
ret
dec
mov
add
and
inc
mov
fdivrs
leave
or
sub
adc
add
and
pushf
shrb
mov
mov
mov
push
enter
xor
test
out
cmp
adc
insb
push
mov
pop
lret
adc
aaa
xor
adc
mov
sub
add
icebp
rorl
mov
or
int
xor
sbb
aam
dec
aam
inc
push
and
xchg
daa
push
lcall
cli
dec
fdivr
and
hlt
mov
mov
xlat
bound
clc
mov
add
in
jp
cs
sbb
jp,pn
or
hlt
xchg
cwtl
adc
mov
jnp
pusha
cmp
mov
xor
sub
popf
sahf
mov
xchg
outsb
xor
into
fldz
rolb
jno
mov
lret
push
cli
subl
mov
xchg
xlat
xor
push
mov
push
fs
pop
aaa
mov
loop
sbb
dec
mov
popf
inc
xor
call
clc
sub
mov
mov
dec
mov
ret
outsl
inc
mov
pop
imul
je
cs
and
xor
ss
inc
mov
rclb
gs
cmp
or
jbe
aas
dec
dec
lds
sarl
mov
imul
sbb
xor
pop
cli
fs
sbb
stos
cmpl
push
adc
adc
sbb
lock
inc
mov
mov
fnstsw
mov
sbb
and
inc
test
aad
inc
xor
cmp
fbld
push
xchg
adc
ljmp
loop
mov
and
mov
sbb
sarb
push
or
mov
insb
into
or
shl
pop
xor
push
fdivs
repnz
in
jmp
insb
ds
mov
add
mov
fistpl
outsb
nop
inc
cmp
fucomp
cmp
xchg
popf
daa
les
les
std
jno
testb
cmpl
bound
and
cmp
out
adc
clc
ret
into
pop
push
inc
pop
das
mov
xchg
lret
pop
dec
adc
jo
pop
cmpsl
jecxz
sub
into
into
in
mov
inc
fcomps
cmc
loop
dec
out
mov
aaa
sub
addr16
pop
cmp
cmp
dec
cmpsb
add
push
ret
adc
lods
xchg
cmp
xor
xlat
pop
xor
pop
mov
ljmp
dec
xor
or
sub
push
scas
xor
fdiv
push
xlat
pop
add
outsb
mov
movlps
flds
dec
jle
or
jae
jns
out
mov
mov
xlat
repz
popf
or
lret
cmp
int3
cld
pushl
shll
adc
ds
pop
cmp
sub
mov
pop
cmp
scas
nop
adc
pushf
jg
push
or
and
push
add
jecxz
test
les
jge
adc
je
out
mov
mov
or
jo
add
in
jg
push
jecxz
pop
dec
ret
lret
mov
outsl
xchg
jno
aam
and
aaa
popf
xor
call
lret
dec
les
inc
scas
cmc
mov
in
mov
push
adc
xchg
jge
push
popa
or
or
adc
shlb
nop
popf
cmp
dec
xor
add
add
test
pop
in
test
fs
dec
rcr
or
stos
push
jne
enter
dec
lret
imul
xchg
lods
jmp
stos
lock
jmp
inc
sbb
in
call
jb
mov
xchg
loop
fmull
mov
mov
leave
movsb
sarl
pop
pop
gs
push
icebp
and
mov
fnsave
mov
jns
in
and
sbb
push
fldt
and
mov
mov
push
or
std
adc
sbb
xor
popa
push
loope
mov
in
fs
popl
and
push
in
fnsave
cmp
jmp
cmc
loopne
mov
sbb
fldcw
cmc
pushf
and
test
or
mov
lds
and
mov
and
push
jmp
shrl
mov
loope
jp
icebp
push
lret
push
into
rorb
xchg
xchg
nop
in
push
lods
sub
popf
aad
inc
sub
not
test
mov
in
sbb
jge
into
sub
test
jmp
lahf
std
in
shll
js
shll
mov
jno
xchg
mov
psadbw
mov
in
mov
jno
mov
gs
pusha
cmp
add
shll
mov
inc
lods
aad
push
pop
inc
mov
and
fwait
mov
aad
jno
dec
ja
cmp
mov
addl
and
or
pop
into
jg
out
xchg
cmc
jb
jl
js
dec
outsl
mov
lds
sahf
pop
push
xchg
fistpll
sbb
fsub
flds
insb
arpl
dec
pop
enter
inc
lds
mov
loop
fdivrl
imul
cld
test
mov
popa
adc
mov
int
lcall
dec
mov
adc
adc
and
inc
daa
cs
rol
add
iret
loop
add
nop
cmp
out
test
lods
sub
dec
and
paddq
xor
cmc
mov
xchg
leave
xchg
fistpl
cmpsl
push
jne
push
xchg
mov
loop
fnsave
or
imul
rorl
mov
cwtl
sahf
stc
pop
push
add
loope
imul
test
pushf
dec
mov
mov
mov
aam
pushf
sahf
es
ds
jne
cs
pushf
mov
push
js
ret
subb
out
in
es
mov
fcomp
xchg
bound
or
mov
shll
dec
jecxz
aaa
out
and
inc
scas
subl
movsl
sbb
fiaddl
sbb
jne
cmp
mov
sahf
xchg
jb
stos
orl
dec
or
mov
lahf
repnz
lods
cmp
lahf
sub
into
cli
xchg
arpl
mov
jl
adc
fidivs
insb
cmpsb
dec
cmp
pop
ret
mov
aas
inc
ss
or
inc
fwait
scas
mov
dec
sub
push
xor
es
mov
jp
cmp
xchg
pop
pop
xchg
xor
adc
and
xor
rorb
aas
xor
sti
int3
push
fmull
aas
dec
divl
xlat
dec
add
cwtl
lods
push
mov
adc
jl
push
loop
je
mov
pop
mov
and
into
xor
adc
aas
popa
dec
pop
jb
test
idivb
pop
and
fwait
and
adc
push
and
xchg
sarb
push
inc
loopne
leave
xchg
out
movsb
pop
cmp
push
jle
sub
mov
fs
inc
sbb
lea
mov
cmpl
xchg
mov
into
ror
push
mov
lret
cmc
into
pop
testb
shll
repnz
movsb
push
out
rcrl
insl
inc
jne
mov
pop
cmp
xchg
adc
stc
adc
ss
hlt
lea
cmp
sbb
out
mov
fsubl
loop
mov
stos
popf
xor
stos
mov
push
mov
pop
pop
je
jns
je
add
fs
sbb
out
add
outsb
lret
jmp
jge
add
and
mov
aas
xchg
sbb
addr16
mov
mov
test
loop
fs
and
or
xor
lock
movsb
loopne
out
add
push
cmpb
jbe
push
jne
cmp
pop
ret
push
xlat
xor
ljmp
roll
jo
nop
int3
push
bound
fnstcw
dec
sahf
adc
addr16
jge
out
sub
insb
cmp
jns
fs
int3
and
fldl
es
adc
cwtl
and
fs
add
xchg
outsb
in
push
test
popf
sub
ret
ja
in
jns
aad
xor
test
xchg
mov
cmpsl
pop
push
imul
sbb
aam
loope
mov
ret
aas
fsubr
xor
pop
in
hlt
test
jo
pop
std
mov
dec
nop
mov
lds
sub
pop
mov
into
out
aaa
aaa
in
xchg
jbe
or
sbb
cmpsb
adc
sub
ret
test
mov
ss
push
and
rcr
or
xor
dec
loope
pop
adc
dec
aad
pop
lret
push
jge
pop
stos
ror
dec
sarl
xchg
fs
lahf
mov
outsb
std
add
mov
hlt
ja
sbb
mov
dec
add
movsb
mov
sbb
inc
repz
fdivs
in
out
xor
or
xor
imul
add
pusha
add
mov
cmp
adc
sub
pop
dec
fsubrp
mov
push
lcall
je
test
xchg
pop
mov
out
mov
mov
sub
mov
arpl
sti
rol
jb
ja
aam
cmp
push
ss
push
pop
addr16
adc
test
mov
loopne
testb
xor
cld
cmpsl
sub
jne
in
mov
xor
xchg
xlat
int3
push
pop
insl
xchg
movsb
xor
loope
sahf
lods
mov
mov
call
and
lea
clc
in
mov
test
mov
ret
xchg
pop
mov
add
fstps
inc
add
ljmp
int3
subb
push
mov
xchg
push
repz
adc
xchg
push
add
fdivrl
dec
imul
xchg
push
or
sarb
out
popa
orb
imul
out
in
lock
jno
call
hlt
out
and
dec
and
add
scas
fmulp
fisttpll
or
or
out
pop
jle
pop
xor
push
and
test
or
pop
les
imul
loopne
imul
add
outsb
sahf
cwtl
jl
pushf
jp
pop
lods
lret
sbb
xchg
or
pop
inc
gs
mov
sub
pop
push
pop
pop
pop
pop
jge
jnp
insb
ljmp
sub
adc
flds
outsl
xor
mov
sahf
sahf
and
movsb
cmp
sbb
inc
push
or
mov
inc
out
or
push
lret
add
sbb
add
mov
mov
std
sub
xchg
jns
loopne
jb
and
push
jl
pusha
test
arpl
mov
mov
cs
sbb
les
xor
or
lret
out
jmp
adc
xorb
lds
xor
or
adc
push
sbb
mov
xchg
and
push
push
pop
pusha
sub
jno
dec
xor
mov
inc
sbb
sbb
jmp
lcall
sub
pop
adc
je
pop
sbb
pop
mov
test
aam
xor
xchg
adc
dec
pop
jns
jo
dec
mov
cltd
fisttps
in
movsl
repnz
inc
xchg
xchg
inc
push
into
test
fistps
ret
cmp
dec
jp
ficoml
mov
sbb
rorb
sub
jp
cmp
shr
sub
jns
pop
sahf
sahf
fnstenv
xor
lods
mov
inc
cmp
loope
stos
sbb
jp
pop
add
adc
je
dec
push
mov
xchg
lds
cwtl
cld
or
lahf
out
add
push
mov
push
stos
dec
lods
xor
mov
sahf
mov
lret
pop
or
popa
adc
mov
adc
dec
out
or
outsb
fsubrs
cmp
jp
data16
icebp
mov
pop
movsb
in
lods
adc
ja
mov
xchg
mov
out
mov
xchg
imul
mov
nop
cmpsb
icebp
inc
out
movsb
insb
xchg
incb
xchg
dec
rorl
sub
mov
ss
rcr
test
ljmp
insl
incl
rclb
mov
fimull
inc
rcrb
clc
data16
mov
imul
lcall
sbb
mov
sahf
mov
pop
ds
xchg
dec
xchg
test
test
or
std
and
sub
lock
mov
fldcw
pop
loop
and
jl
nop
adc
push
pushw
and
in
and
pushf
dec
cmp
jecxz
fsubs
into
mov
adc
scas
mov
data16
cli
and
mov
jo
pop
movsb
cmpsl
into
pop
pop
jecxz
fldcw
dec
rcrb
lret
xor
cwtl
xor
es
jnp
sbb
add
sbb
insl
scas
adcb
in
lahf
into
xor
aad
out
cmp
pop
mov
mov
jbe
xchg
jnp
jle
dec
or
pusha
pop
jge
dec
dec
outsb
cmp
es
inc
inc
outsb
pop
loop
mov
sbb
adc
cs
stc
adc
sbb
push
aam
sbb
sub
or
fstl
mov
dec
sbb
add
repz
push
jl
mov
les
fidivrl
popw
sbbl
xchg
andb
cld
imul
or
out
xor
cmpxchg
xchg
push
hlt
xchg
inc
mov
mov
insl
outsb
shr
es
int3
cmp
leave
push
jne
jge
push
int3
sub
rep
pop
pop
adc
add
mov
test
mov
pop
xchg
jle
or
push
sub
push
mov
int3
jne
loop
fcoml
push
sub
arpl
push
subb
das
arpl
lahf
mov
movsb
sub
sub
roll
xor
lret
out
push
push
out
and
clc
mov
mov
sahf
fcmovbe
jns
cwtl
in
sub
xor
les
mov
movsl
xchg
pushf
dec
cmp
in
call
and
out
stc
outsb
ja
rcr
jp,pn
mov
and
fcoml
mull
jb
add
test
mov
mov
dec
mov
cmp
rcll
sub
aam
mov
or
rorl
fst
add
push
mov
cli
in
outsb
lahf
in
imul
sarb
notb
ret
dec
in
stc
lret
lock
hlt
jge
pusha
loopne
dec
jmp
sbb
cmp
icebp
sbb
scas
clc
pop
pop
jnp
mov
adc
shlb
sub
mov
and
mov
jl
pop
stc
inc
call
sub
lods
sbb
insl
dec
mov
cltd
cmp
mov
stos
test
std
or
add
add
out
xor
mov
pop
xor
jg
cmc
mov
mov
inc
dec
lods
dec
stos
xchg
xlat
sub
inc
popa
push
lods
mov
add
aas
xor
adc
and
nop
lcall
dec
vmwrite
shlb
push
ds
addb
or
and
out
cmc
mov
pusha
adc
xchg
sub
xor
out
xor
mov
cltd
out
cwtl
jle
xchg
mov
hlt
mov
imul
xor
lcall
sub
out
or
mov
jns
out
add
push
js
xor
dec
pop
or
mov
jmp
push
cmp
or
xor
push
jg
cld
aas
mov
std
sbb
adc
out
mov
jo
jbe
adc
dec
xor
add
mov
outsl
and
push
aas
mov
cmp
cli
mov
lock
cmpb
xchg
sbb
test
or
xor
cld
stos
fs
xor
pop
jle
push
popf
ret
jge
ljmp
int
or
std
push
shll
fistps
cmp
not
cmp
out
dec
xor
js
mov
mov
stc
mov
ljmp
or
inc
jne
stos
lret
dec
pop
mov
in
xor
inc
enter
dec
mov
scas
into
inc
rolb
inc
sbb
jo
push
int
mov
cmpsb
cmp
pushf
jnp
clc
xchg
arpl
xchg
aaa
cwtl
sbb
pushf
rcrb
inc
mov
fwait
stos
sub
add
aad
ss
push
xchg
lock
cmpl
push
push
inc
and
or
pop
nop
cmc
jge
mov
mov
and
mov
gs
push
les
repnz
and
cltd
add
mov
dec
icebp
gs
inc
cld
je
stos
sub
data16
sbb
repnz
rcr
add
xchg
test
cmp
inc
loop
mov
cmpsl
or
mov
lret
hlt
mov
and
rcrb
inc
jge
fidivrs
inc
ficompl
hlt
push
movsb
mov
loope
shrb
in
sub
mov
and
out
in
xchg
adc
rorl
inc
or
loop
out
mov
xchg
aam
inc
sub
stos
mov
jp
sbb
sbb
incl
data16
mov
mov
addr16
cmp
lret
jbe
in
in
jbe
clc
add
aas
lods
sbb
test
mov
cmpsl
jmp
popf
sub
in
mov
push
pop
rorb
test
pop
add
xor
out
lret
lods
inc
pop
jno
pushf
mov
dec
adc
lret
xor
xor
mov
push
icebp
std
lahf
lods
jb
jae
add
lret
xchg
jnp
in
cmp
mov
out
stos
movsb
sbb
lea
sbb
push
lret
out
jmp
sbb
mov
mov
mov
dec
shlb
out
inc
imul
pusha
nop
insb
mov
movsl
lods
fdivr
test
cmc
ja
fistpll
cltd
mov
and
lds
adc
push
push
sbb
divl
adcl
les
jle
inc
add
aas
lcall
divl
enter
sub
lahf
fsubrp
mov
aad
sub
add
push
sub
adc
mov
xchg
mov
push
xor
in
xor
inc
push
sarl
into
add
movsb
ret
or
jle
push
jae
hlt
jmp
adc
rcrl
es
sarb
inc
cmp
push
ficoml
sub
aad
cs
mov
data16
fisttpl
fwait
add
jle
outsb
adc
pushf
mov
andb
cld
aam
xor
xor
popf
fnstsw
inc
mov
add
int
dec
jmp
stos
push
jbe
and
test
outsb
fstps
cs
or
pop
xchg
hlt
aam
adc
movsl
adc
mov
ret
hlt
mov
dec
cmp
not
lahf
stc
filds
sbb
xor
bound
sbb
pop
dec
in
mov
adc
pusha
outsb
and
dec
or
andb
pop
gs
mov
xor
inc
out
iret
mov
xchg
mov
gs
add
pushf
arpl
lods
dec
mov
pop
les
sbb
xor
push
mov
sub
jns
mov
lock
es
xchg
sbb
repz
add
lcall
pop
cmp
popf
and
in
mov
scas
add
les
pop
mov
call
pop
cs
enter
sub
fsts
clc
dec
std
je
push
test
push
cmp
push
or
lret
mov
push
lods
mov
repz
xchg
in
das
fwait
cmc
xor
push
mov
mov
jo
jle
adc
adc
mov
mov
or
jle
jnp
dec
and
inc
or
lret
sbbb
adcb
leave
icebp
mov
adc
sbb
adc
das
adc
mov
mov
pop
pop
mov
jge
inc
sahf
xor
movsl
lds
dec
daa
inc
clc
and
test
repnz
repnz
or
js
sbb
and
xchg
jg
mov
cld
jns
inc
shr
adcl
test
mov
add
test
jmp
movsb
mov
ret
xor
pop
lcall
ss
adc
clc
popa
cmpsb
or
shr
fcmovnbe
sbb
test
cld
test
cmpb
mov
or
push
xchg
sbb
fwait
adc
mov
inc
pop
dec
mov
mov
rcll
jo
and
pop
sti
mov
es
in
pop
pop
sub
pop
stos
or
lods
jecxz
pop
add
mov
cld
xor
xchg
xchg
clc
ja
fadd
negb
dec
aas
cmp
inc
js
int3
mov
cli
loop,pn
iret
inc
push
cwtl
inc
and
mov
add
test
dec
lock
incb
gs
fiadds
jne
rorl
daa
pop
lock
rcll
mov
icebp
dec
add
int3
jecxz
das
push
dec
es
repz
bound
shrl
js
cltd
or
mov
sub
fwait
stc
or
xchg
pop
jbe
inc
andb
xchg
cmpsb
frstor
inc
in
test
mov
sub
jo
sahf
sub
inc
iret
push
push
mov
cld
test
cwtl
mov
test
sbb
insb
lret
push
xchg
xlat
call
and
or
ret
adc
mov
sti
mov
cwtl
popl
dec
push
test
adc
int
adc
jle
xchg
stos
ret
jle
lahf
out
xor
cmp
lods
inc
xchg
push
push
fwait
sub
or
xchg
xor
push
cmp
jbe
in
insb
jno
mov
addss
sbb
fstpl
mov
shr
cmp
jl
jecxz
decl
inc
divb
xlat
mov
mov
pop
fists
ret
cmpsb
lretw
adcb
clc
popf
and
mov
fldenv
mov
fs
lods
test
sbb
mov
mov
jo
popa
test
in
fcomps
in
aad
push
cld
and
je
xchg
mov
cltd
fcomps
movsl
test
icebp
pop
imul
push
daa
and
xor
ja
or
cmp
and
mov
stc
call
std
insb
and
sarb
nop
mov
test
push
aaa
bound
fdivl
lret
dec
sahf
loopne
in
ret
icebp
fdiv
push
inc
movsl
xchg
mov
lret
in
in
das
loope
sbb
and
lea
aas
movsb
sarl
movsb
mov
fcmove
xchg
int
mov
movsb
push
out
sub
xchg
fs
test
sub
cmp
xor
in
adc
and
imul
popa
pushf
icebp
les
mov
cmpsb
dec
fs
jl
xor
test
cmp
cmp
mov
in
cli
mov
jl
or
xchg
sub
push
and
push
cmp
push
jecxz
or
dec
and
pop
mov
jns
decl
mov
sarb
sub
sbb
pop
test
cmp
pop
insb
or
push
cmpb
mov
rorb
add
dec
idivb
jae
jns
scas
into
mulb
push
mov
addr16
adc
mov
movsl
and
shlb
les
into
adc
mov
dec
mov
iret
pop
lods
push
cmpsl
dec
lret
ficompl
mov
lods
sub
xor
dec
mov
sbb
mov
dec
mov
mov
ljmp
js
stos
pop
sbb
adc
lcall
inc
sub
movsb
out
and
adc
sbb
mov
add
mov
int3
xorl
mov
cmp
pop
pop
mov
pop
inc
popf
aad
test
push
lock
dec
add
xchg
mov
push
xlat
nop
roll
or
out
xchg
dec
jecxz
bound
cs
test
out
inc
inc
cld
fwait
or
sahf
imulb
push
ja
pop
add
adc
mov
xchg
sub
imul
push
pop
dec
es
push
roll
push
pop
mov
shlb
jge
mov
inc
inc
mov
notl
and
and
cmc
adc
xchg
stos
jne
pop
adc
dec
movsb
cmp
xor
mov
sbb
cmpsb
pop
xor
icebp
xchg
pop
lret
test
aam
cwtl
aam
imul
movsb
and
xor
mov
jle
lret
sub
scas
insl
and
mov
mov
mov
mov
pop
sbb
cmp
or
lcall
sti
leave
dec
clc
cmp
mov
popa
cmp
aam
jb
fisttpl
insb
stos
ljmp
dec
ljmp
adc
add
call
jno
lahf
sub
cwtl
jae
lock
xchg
es
jb
lds
shlb
sbbb
fmul
outsb
out
das
cmp
pushf
mov
push
es
xorl
mov
add
jb
pop
test
sub
push
shlb
je
orb
dec
adc
fs
loopne
daa
in
lcall
fninit
xchg
lock
cli
adc
mov
cmpl
sahf
je
movsb
xor
jmp
xchg
inc
into
call
jp
sahf
test
or
sub
mov
insb
std
mov
test
fldcw
es
ficompl
push
call
push
hlt
cmpsl
and
dec
mov
inc
scas
mov
cmc
or
je
shrb
enter
or
or
cmpsl
add
addr16
xlat
fists
sub
iret
and
enter
shll
mov
mov
mov
xchg
loope
mov
cwtl
fs
cli
xchg
sub
movsl
pop
xchg
popf
cmp
pop
outsl
pop
mov
loopne
fwait
roll
jg
call
out
mov
and
mov
or
ss
in
sub
inc
adc
imul
gs
sbb
jne,pt
out
faddl
dec
lock
pop
cmp
decb
enter
sub
sar
push
or
mov
imul
dec
mov
fs
or
nop
rorb
rclb
pushf
jno
pusha
insb
and
stc
rcr
call
adc
decl
clc
jecxz
roll
push
outsl
lea
and
es
inc
xor
in
push
jo
insl
imul
and
incb
push
inc
ror
stos
pop
nop
jbe
rep
mov
jecxz
mov
jp
leave
pop
es
pop
fwait
mov
movsb
jmp
stos
and
dec
in
mov
test
or
inc
insb
sbb
fdivs
adcb
push
dec
mov
dec
in
lret
mov
fyl2x
sbb
es
inc
lds
inc
test
cwtl
xchg
cltd
jle
sbb
lods
test
shrl
fs
add
mov
xchg
pop
mov
adcl
out
loopne
cmp
dec
ja
mov
cmp
js
push
test
inc
cmp
js
mov
fs
inc
pop
mov
iret
sarl
ss
stos
xchg
sub
xchg
lea
ds
out
xchg
bound
adc
adc
mov
dec
add
dec
jmp
test
pop
jl
lea
or
mov
add
loop
mov
popa
sub
lea
mov
and
fs
test
sbb
fimull
inc
jle
hlt
pushf
inc
push
mov
lods
adc
outsl
in
pushf
aam
ret
pop
cld
scas
lret
lahf
dec
out
pushl
sbb
test
in
inc
roll
cmp
cmp
movsl
mov
or
stc
mov
jne
pop
es
inc
mov
sahf
jl
loopne
lods
or
insb
cmp
scas
int
xor
mov
jno
aad
scas
iret
decb
pop
sti
mov
gs
lock
push
movsl
cmp
push
jg
or
pop
movsl
test
add
les
push
xor
push
push
dec
lds
lahf
inc
dec
and
sub
cmp
insb
push
shll
sbb
cs
fwait
xchg
inc
dec
adc
push
adc
push
mov
xchg
icebp
jecxz
xor
adc
cwtl
pop
pop
push
rcl
add
dec
mov
push
sbb
jnp
jo
cli
push
pop
mov
mov
mov
xor
jecxz
fwait
out
xor
out
sub
cmp
scas
dec
cmpsb
jns
cmpb
inc
rorl
ljmp
out
xchg
lahf
lock
pushf
xlat
and
xor
roll
and
ret
push
pop
dec
stos
ret
ret
push
dec
fsubrs
jae
xchg
out
lods
test
push
cmp
xchg
cmpsb
repz
ja
cmp
sbb
scas
sbb
fidivs
xor
jnp
push
xchg
inc
sbb
sarb
insl
dec
mov
adc
push
daa
fmul
adc
jg
nop
or
enter
jge
aaa
rcl
and
push
mov
sub
roll
pop
jl
stos
mov
scas
mov
sub
xchg
xor
sub
jp
mov
mov
mov
xorl
add
pop
mov
pop
add
addl
lds
es
or
dec
add
pushl
dec
sahf
arpl
mov
jge
out
cwtl
cltd
jno
jle
push
inc
lods
fsubl
inc
or
and
fs
add
in
cmp
add
jmp
dec
cmpsb
and
dec
fidivs
inc
sub
divb
xor
cs
addr16
xor
jp
and
adcb
xlat
mov
cmp
call
push
lret
add
fisttps
pop
mov
pop
je
shl
inc
addr16
in
jb
xchg
stc
cltd
into
mov
push
loopne
pop
add
add
mov
stos
push
add
add
sub
cwtl
enter
and
inc
adc
fstps
cs
lods
shll
lea
fsubrl
jp
cwtl
outsb
dec
jbe
in
and
inc
push
cmp
push
push
aaa
bound
dec
outsb
addr16
cmp
outsl
jl
lds
fs
cmp
ret
loop
ret
scas
in
mov
sub
pop
mov
inc
mov
rcr
dec
sub
or
scas
dec
or
jecxz
dec
loopne
mov
popf
cmp
and
ror
fs
jmp
cmc
or
cli
daa
jne
push
pop
mov
fxch
sub
movsl
fimull
stos
mov
push
testl
arpl
pop
jl
icebp
dec
js
imul
jmp
sub
push
cmp
loope
out
mov
dec
pop
cmp
sbb
dec
popf
in
idivl
push
jecxz
dec
jnp
pop
mov
pop
add
fmul
inc
inc
cmp
arpl
sbb
or
cmp
outsb
mov
into
mov
in
scas
pop
push
mov
adcb
push
cmp
jmp
fadd
sbb
or
mov
sbbl
imul
inc
fcmovu
mov
outsl
sbb
pop
les
push
mov
lods
sahf
fdivrs
test
ficomps
jmp
or
pop
fnstcw
cmp
in
out
cmc
mov
xor
jp
cltd
mov
sbb
mov
jb
fldenv
push
ss
sub
addb
rep
sub
cmp
and
push
jl
adc
in
add
inc
stos
int
in
leave
out
outsl
ret
mov
mov
mov
cli
or
push
xchg
sbb
mov
sub
and
loopne
add
cmp
or
dec
lods
cmp
adc
repz
out
sub
ficoml
and
jns
sub
repz
cmpsb
adc
arpl
in
mov
push
js
loopne
pop
icebp
shrl
push
xchg
in
rorl
call
jnp
in
jge
mov
mov
jmp
jmp
fisubs
xchg
xor
jb
les
icebp
and
lea
test
in
lcall
push
push
enter
or
int3
cmp
movl
stos
lahf
jg
or
or
jns
into
test
adc
std
sahf
clc
lods
adc
mov
mov
repnz
adc
andb
mov
loope
mov
jo
ljmp
push
cmpsl
cmp
push
jle
dec
xor
popa
js
jbe
xor
int
int3
inc
push
add
lods
ficompl
lock
mov
mov
outsb
lods
es
pushw
cmp
dec
adc
inc
lea
inc
mov
ljmp
sub
mov
test
imul
pushf
test
adc
jnp
dec
ret
or
dec
add
lret
out
aas
push
or
mov
je
xor
push
in
push
mov
mov
mov
sbb
int3
aaa
sub
pop
ss
pop
and
int3
adc
sub
pop
mov
xchg
leave
xchg
mov
jbe
jecxz
sbb
test
bound
push
rcr
xchg
out
ds
in
ret
scas
or
xlat
sub
mov
lretw
mov
push
xchg
mov
sub
test
or
cwtl
enter
add
dec
cmp
repz
sbb
aad
rcrb
inc
cld
mov
xchg
ljmp
or
pop
xlat
xchg
adcb
and
mov
shrb
adc
push
shlb
ljmp
and
and
sub
in
jp
mov
fists
insb
sbb
push
sahf
shlb
pop
mov
insl
and
mov
mov
sarl
and
scas
pop
pop
and
xchg
add
xchg
or
inc
test
mov
outsl
movsb
adc
sub
inc
rolb
insb
outsb
out
mov
or
aam
cmp
inc
jecxz
xor
adc
push
jle
je
imul
xchg
shrl
inc
and
mov
je
mov
jno
xor
jl,pt
inc
cmpsl
loop
in
es
mov
and
wrmsr
mov
dec
mov
mov
fxch
stc
add
jae
iret
mov
lret
test
mov
stos
aam
test
cmp
sbb
inc
rcrb
push
pop
xor
pop
xchg
inc
mov
inc
movsb
cmpsb
mov
fcoml
adc
mov
lret
lds
cli
iret
inc
sbb
cmp
jmp
rorb
enter
into
rorb
push
fcoml
dec
test
test
or
mov
stos
jb
rorb
push
ret
sahf
jnp
mov
dec
insb
nop
mov
pusha
inc
pop
adc
xchg
add
daa
fcmovbe
mov
jns
adc
div
mov
pushf
sub
jns
push
cmp
or
mov
imulb
lahf
mov
clc
push
or
jno
iret
mov
jae
lcall
jle
in
sub
addr16
xor
mov
mov
mov
dec
leave
in
repz
push
jg
pop
dec
xor
aam
jne
repnz
stos
sub
mov
adc
loope
sbb
fscale
or
shrl
int3
inc
and
std
mov
xchg
and
cmp
lret
jb
hlt
mov
sub
xlat
movsb
or
arpl
aam
das
out
push
mov
call
fisubl
loop
xchg
shlb
sbb
jle
and
ja
push
popf
jnp
ljmp
push
fldenv
or
lods
adc
inc
nop
ret
jnp
out
mov
in
dec
mov
adc
in
jb
iret
sub
sub
pop
mov
call
divb
loope
pop
push
mov
inc
pusha
add
aad
mov
mov
xlat
lret
adc
jnp
inc
jp
mov
sbb
les
mov
inc
mov
lods
call
repnz
jne
pop
fidivrl
cmp
clts
push
addr16
mov
push
cmpsl
data16
jnp
loopne
pop
rorb
mov
jbe
pop
mov
stos
xchg
jp
and
jne
fs
in
mov
sub
and
scas
sbb
xchg
ret
aad
ret
pop
push
adc
xor
ror
clc
adc
ljmp
sub
mov
sbb
and
ficompl
aam
dec
jg
aaa
xchg
xchg
xor
pop
add
loop
roll
mov
or
push
jmp
outsb
cmp
push
fdivl
aas
pop
mov
jb
movsb
xchg
pop
les
pop
jl
repz
adc
addr16
adc
ss
mov
mov
and
cli
and
std
ret
or
add
sbb
mov
pop
loope
in
xchg
orb
ss
out
out
inc
inc
jmp
xchg
adc
and
aad
inc
mov
jb
inc
iret
jl
call
js
xor
shll
push
pop
in
out
dec
sahf
xchg
cs
push
out
and
mov
inc
xchg
lds
xlat
scas
mov
jne
xchg
or
sbb
ds
mov
inc
in
pop
xchg
mov
int3
adc
movsb
pop
int3
sbb
lods
mov
inc
or
fistpl
aad
testl
dec
push
lahf
das
and
or
sub
into
in
xchg
data16
xchg
ja
sub
scas
sti
push
cmp
dec
repnz
jnp
rcr
hlt
jo
int3
fsubs
fiadds
jecxz
dec
scas
pop
es
jbe
sbb
jb
mov
mov
call
xorl
push
inc
mov
cmp
push
inc
sub
xchg
sbb
mov
fildll
das
sahf
cwtl
pop
xchg
or
fwait
ljmp
xor
mov
add
xchg
xchg
jecxz
cmp
sub
ljmp
lods
lods
xchg
fstps
pop
mov
test
cmp
jno
or
inc
inc
push
dec
pushf
push
mov
mov
push
loop
inc
icebp
int3
out
pop
mov
pop
cs
fsub
mov
and
inc
aaa
sub
xchg
rcll
imul
and
mov
pop
popf
enter
out
andl
or
outsl
sub
jp
mov
mov
dec
inc
push
out
push
sub
dec
mov
fs
cmp
sbb
mov
mov
aam
bound
das
inc
and
jns
fsubl
xlat
mov
xchg
mov
nop
sbb
pop
or
aad
dec
mov
clc
xchg
shlb
or
sub
fwait
push
mov
fisubs
out
and
pop
mov
in
outsb
sbb
imul
call
pop
push
push
dec
push
in
mov
pop
inc
nop
sti
pop
inc
pop
jp
xor
jl
sub
cmp
xchg
dec
out
pusha
mov
xlat
out
and
cmc
push
mov
jnp,pn
orl
pop
fildll
outsw
pop
je
dec
imul
pop
mov
dec
sbb
cltd
js
outsb
xor
push
jns
test
jmp
inc
xor
add
xchg
pop
cmp
loopne
dec
out
mov
ds
lods
xchg
xchg
jecxz
aad
adc
cld
push
fs
pop
pop
in
sub
sbb
pop
mov
mov
in
imulb
xor
fstl
cmp
test
loopne
sbb
xor
push
not
je
adc
mov
mov
std
push
popa
loop
hlt
mov
xchg
add
fs
insl
imul
mov
jne
mov
sbb
inc
dec
pop
outsb
push
push
das
mov
int3
je
sbb
jl
xor
loope
into
push
or
ds
adc
ja
cmp
out
adcl
lds
outsl
pop
jle
jnp
xchg
sbbl
inc
or
jl
call
mov
aaa
xor
enter
cmp
or
movsb
inc
cmp
or
ja
shlb
inc
sbb
pop
xchg
adc
push
fwait
es
lret
lea
sbb
mov
hlt
cmpsb
xchg
fs
mov
or
in
jmp
jmp
cwtl
ss
sbb
pop
rcrb
jle
pop
mov
ret
movsl
and
xor
lods
or
add
fsubs
out
xchg
jl
sbb
cli
mov
stos
mov
loope
xorl
xor
pop
lcall
aam
movsl
dec
loope
fisubl
sbb
insl
inc
cmc
xlat
mov
and
mov
out
fwait
or
push
shr
xchg
ret
pop
jne
mov
clc
sub
cmpl
jl
sti
pusha
jecxz
mov
subb
es
or
sub
test
mov
ret
psubq
fbstp
mov
inc
addb
mov
adc
movsb
out
cmpsb
leave
mov
cltd
into
repnz
scas
push
add
mov
aaa
mov
popf
movsb
call
cmpsl
andb
add
cmpl
jmp
mov
or
pop
or
fwait
sbb
aas
inc
sub
adc
data16
cmpsl
out
outsb
xor
push
cli
bound
shrl
and
cmpsb
lret
bound
lret
imul
xor
lcall
ret
mull
popl
sub
stc
jbe
fsts
sub
pop
and
pop
sti
mov
dec
daa
lahf
mov
jle
int
ret
mov
pop
aas
sub
or
push
inc
popf
lcall
xchg
or
popf
aaa
cmp
inc
inc
or
test
pop
test
jbe
gs
std
adc
add
mov
sbb
hlt
jmp
mov
stc
mov
out
dec
mov
ja
mov
xchg
ficompl
mov
mov
sub
adc
and
adc
adc
subl
dec
dec
or
stos
pop
push
adc
jbe
out
add
out
mov
push
scas
sti
outsb
dec
clc
dec
mov
push
clc
add
cltd
and
in
add
push
test
pop
and
rorl
gs
jno
dec
push
imul
test
inc
outsb
insb
push
inc
bound
jb
xchg
dec
lret
mov
jnp
lret
pushf
adc
mov
jo
or
je
dec
shll
inc
jmp
pusha
pop
mov
nop
dec
xchg
xchg
repz
lret
mov
push
cld
adc
add
in
and
scas
ljmp
aas
mov
jmp
cltd
inc
ret
sbb
or
lahf
insl
lcall
cmpb
es
pop
jae
int3
mov
std
sub
rolb
mov
mov
ja
js
dec
or
inc
dec
sub
or
std
cmpsl
aaa
jecxz
js
push
hlt
loopne
aas
cmp
pop
or
mov
sahf
nop
or
mov
out
mov
jno
adc
jnp
or
sbb
adc
sahf
ss
mul
sbb
jo
cmp
sbb
xor
pushf
mov
add
xor
lods
dec
add
test
mov
fwait
sbb
adcb
mov
mov
pop
push
rorl
imul
fcom
mov
outsb
out
cmc
out
icebp
out
inc
xor
jbe
mov
les
or
pop
mov
ja
in
pusha
ljmp
stos
cmp
movsb
cmpsb
ret
jno
sti
cmpsl
je
outsl
fmuls
xchg
outsl
xor
sub
fld
insb
jns
xor
xchg
push
in
imul
or
sahf
xlat
xor
pop
iret
sbb
fprem
or
sahf
xor
in
stos
jecxz
aas
mov
adc
fldenv
rcr
mov
pop
or
add
enter
push
or
dec
andb
inc
ja
pop
pop
fadds
inc
dec
mov
xchg
push
cmp
or
repnz
pop
and
lahf
jnp
sahf
push
incl
enter
clc
in
xor
imul
mov
arpl
inc
inc
arpl
mov
or
popf
imul
gs
punpckldq
rorb
add
cmp
or
cltd
jp
lret
in
in
mov
mov
mov
movsl
xchg
mov
fmul
mov
arpl
out
test
mov
inc
mov
ljmp
pop
xchg
aam
jae
inc
fadds
je
ret
mov
clc
addb
push
push
xchg
mov
jl
sbb
xor
xor
and
pop
cld
xchg
xlat
jmp
test
push
pop
mov
mov
mov
pop
loope
pushf
sti
rcrl
test
aam
push
xchg
movsb
in
iret
imul
popf
iret
mov
jb
adc
mov
movsb
or
pop
inc
adc
mov
jnp
inc
xor
jp
loop
push
cwtl
cmpsb
push
aas
lds
pop
pop
add
add
call
aad
imul
repnz
js
push
mov
adc
aad
daa
xchg
int3
cmp
xor
out
fwait
sub
mov
or
inc
dec
jg
xor
rolb
aas
cwtl
inc
imul
or
sub
dec
into
push
jg
xchg
aas
jb
push
mov
negb
and
and
int3
push
push
cwtl
fcmovnu
loop
push
sbb
push
inc
enter
lea
mov
cli
mov
inc
dec
xchg
jnp
rclb
sub
ret
js
std
daa
loop
inc
mov
inc
jge
popf
test
cmp
mov
cs
pop
mov
xor
push
dec
jmp
pop
jae
dec
shrl
sbb
pop
mov
jbe
subb
repz
cmpsl
test
mov
adc
test
test
mov
jne
inc
ret
dec
notb
sub
js
dec
xchg
test
loop
jmp
scas
into
addr16
int3
dec
mov
icebp
aam
enter
cmp
repz
jno
push
loope
mov
mov
rcll
nop
push
and
mov
mov
mov
xchg
sbb
les
xchg
loope
pop
pop
sbb
aad
shrl
rcrl
dec
subl
lea
push
mov
add
fistpll
cmp
push
ljmp
loope
pop
mov
shl
mov
sub
iret
inc
sub
clc
xchg
mov
lahf
pop
fists
jg
mov
push
pop
imul
mov
pop
insl
xchg
fidivs
pop
mov
pop
cmp
lcall
adc
xchg
inc
adcl
push
je
cmpsb
les
cmc
repz
pop
popf
orl
arpl
test
push
loopne
push
jbe
stc
repz
dec
pop
push
dec
sub
mov
push
iret
add
repz
daa
inc
pop
shrb
and
cltd
cmp
sub
cmc
sub
test
pop
cld
add
adc
add
add
cmpsb
dec
aad
out
mov
pop
jbe
insl
sub
sbb
inc
ja
aas
dec
sub
shlb
leave
addr16
cmpsb
pop
mov
imull
insb
jg
pop
popa
mov
add
cmp
lods
daa
iret
adc
movsb
insb
or
in
xchg
pop
jo
insb
insb
mov
or
jg
call
and
push
stos
xchg
daa
and
je
test
push
jge
lods
pop
imul
int3
shlb
cmpsl
mov
sbb
xlat
pop
adc
pop
xchg
sub
inc
mov
jle
pushf
pop
xchg
jg
dec
out
shr
cmp
pop
fdivrl
aam
adc
popf
mov
mov
sub
movsl
adc
xchg
push
addr16
fisttpl
adc
jmp
dec
inc
outsl
les
and
xor
xchg
sbb
push
sbb
test
sbb
enter
call
cmp
push
xchg
cmp
test
pop
iret
inc
fimull
and
inc
sbb
mov
adc
jnp
cmc
loop
loopne
daa
mov
or
jne
das
mov
bnd
arpl
stos
inc
pop
sbb
xchg
iret
sub
dec
dec
mov
cmp
js
fdivrs
faddp
cmp
add
in
shrb
xor
cmp
shr
or
xchg
jge
in
sbb
or
mov
sbb
pop
push
push
mov
rolb
xlat
fcomi
loopne
in
mov
out
push
pusha
nop
sub
xor
jl
ja
lcall
sub
inc
outsb
cmc
mov
jb
mov
xlat
xlat
cmpsb
mov
inc
fwait
cld
jne
ds
fs
fcomps
or
add
mov
pop
cmpl
cmp
mov
xor
je
sbb
nop
mov
jno
mov
adc
or
into
movsb
push
adc
iret
sbb
jl
pop
stos
push
pop
jno
shr
push
sti
popa
sarb
fsubrs
icebp
outsl
stos
aad
lods
enter
xor
mov
jg
and
and
push
push
sahf
call
cmp
fwait
inc
jno
pop
mov
clc
adc
add
sbbl
cmpb
cmc
ret
rcl
fadds
jecxz
or
das
fldcw
cmp
xor
push
test
push
mov
pop
mov
orl
fistps
jmp
in
dec
test
mov
pop
gs
cld
sub
cmpsl
push
dec
je
out
jecxz
inc
fiaddl
mov
ljmp
or
mov
dec
cmp
xor
pop
and
xchg
cmpsb
fcoms
sub
fistpl
add
mov
mov
int
sub
pop
cltd
jecxz
inc
loopne
and
mov
data16
mov
sbb
jecxz
mov
clc
dec
mov
pop
scas
push
les
cmp
fstl
pop
push
push
lods
adcl
jno
sub
les
xor
movsb
fmull
pop
or
movsb
mov
xchg
or
inc
jge
sub
fs
add
or
adc
sub
jle
adc
mov
jecxz
shlb
inc
mov
xchg
imul
mov
sbb
lods
insl
movsb
imul
iret
dec
mov
lock
or
mov
test
and
fbstp
bound
or
and
add
fwait
pushf
test
scas
loop
flds
mov
cmp
jmp
jmp
push
adc
loop
rol
int3
inc
pushf
fwait
cmp
or
sub
in
sbbb
jno
dec
mov
in
jl
shl
ljmp
sub
xor
mov
loope
fcmovnbe
inc
and
xchg
repz
cwtl
jae
rcll
xchg
fs
mov
mov
mov
mov
jl
adc
jmp
mov
push
js
fisttps
fcmovu
aam
adc
out
mov
fs
fadds
cwtl
les
loopne
sub
shll
leave
cmpsb
lock
and
daa
fdivl
shlb
loop
out
push
iret
fs
gs
jb
dec
mov
adc
rclb
loop
lret
mov
scas
and
xor
sbb
pop
pushf
mov
jg
pop
insl
scas
into
mov
add
out
nop
nop
mov
popa
xor
cmpb
sbb
insl
add
push
mov
mov
pop
cmp
aam
fidivrs
ret
cmp
dec
fwait
aas
or
dec
stos
or
adc
cmpsb
int
pop
fnstenv
cmc
cld
je
outsb
outsb
pop
push
jae
adc
subl
lea
or
mov
mov
mov
mov
jge
addr16
sti
movsb
inc
mov
in
inc
adc
pop
push
rcll
mov
in
lods
cmpsl
mov
call
adc
xchg
adc
scas
cld
dec
ds
and
mov
adc
fcmovnu
and
es
sar
rcrb
lcall
mov
loope
iret
sub
enter
fistps
jecxz
jecxz
ds
add
add
mov
cmp
ret
adc
xchg
or
mov
mov
mov
orl
fwait
xlat
in
inc
mov
lock
push
or
xchg
scas
xor
imul
or
leave
dec
in
fiaddl
mov
or
pop
pushf
push
add
jle
fbld
cmpsb
or
lods
inc
add
rcrl
cli
cmpsl
and
sub
lahf
sbb
jecxz
mov
fcmove
inc
pop
shlb
push
xor
into
fwait
xchg
and
divl
mov
inc
mov
repz
dec
push
pop
adc
and
mov
pop
jb
mov
xor
sbb
fs
out
stos
jo
in
mov
lret
jne
cmpl
or
jge
mov
fimuls
inc
outsl
push
cld
add
pop
test
ss
lock
cmp
lcall
inc
mov
je
cmpsl
divl
decl
jo
fsubrs
jns
mov
push
ja
jecxz
repz
lret
mov
cmc
adc
push
mov
or
pop
test
and
adcb
mov
les
add
imul
dec
add
stc
add
mov
cwtl
dec
sahf
jecxz
inc
adc
fdiv
sub
xchg
mov
mov
gs
pop
mov
and
es
mov
or
sbb
mov
sti
test
loopne
jl
mov
jg
mov
sub
mov
mov
daa
add
movsb
scas
lods
popf
in
lods
push
lock
mov
push
sub
daa
in
flds
pop
lds
inc
dec
mov
shl
sub
popa
gs
fdivrl
inc
mov
icebp
mov
test
pusha
aaa
add
jae
jp
clc
adc
ljmp
cmp
xor
fstpl
outsl
mov
daa
addl
fiaddl
mov
orb
fildll
inc
mov
sbb
push
mov
lock
into
out
dec
lret
ficoml
in
fs
movsl
int3
ds
mov
mov
sbb
andb
mov
ret
fmull
clc
push
in
add
outsl
dec
neg
sub
icebp
push
mov
lods
pop
mov
aad
jl
insb
jmp
sbb
js
imul
loope
xchg
xor
jne
ficoml
mov
data16
mov
jle
pushf
popf
xchg
mov
mov
sbb
ficompl
fdivs
sbb
test
pop
sbb
pop
and
cmpb
cld
adcb
das
push
adc
fwait
inc
sbb
lahf
fcmovne
pushf
dec
mov
dec
sti
pop
sbb
test
lods
cmpsl
divl
aaa
sti
and
bound
je
fsubs
js
in
pop
scas
repnz
adc
xchg
dec
and
enter
lcall
inc
lret
adc
mov
mov
mov
mov
sbb
sub
xchg
jle
rcr
sub
mov
lods
push
jns
mov
xchg
mov
cmpsb
mov
and
pop
adc
or
cmp
imul
in
adc
rcrl
add
jb
or
add
push
int
push
pop
cmpsl
sahf
or
mov
sbb
das
mov
shlb
cmp
lds
je
lret
out
cmc
aaa
mov
int3
jns
and
filds
mov
pusha
nop
cmp
mov
ja
inc
and
or
out
daa
or
jae
xchg
xor
and
pop
cmp
pop
mov
cmp
stos
in
xor
sbb
xchg
inc
cmc
dec
sub
xor
ret
mov
mov
cmpsl
std
pop
shrb
shrb
mov
sub
jnp
frstpm(287
pop
pop
sbb
gs
inc
and
lods
jnp
dec
or
sbb
or
aaa
lea
mov
mov
stos
push
cmp
imul
mov
add
jb
mov
mov
mov
cmp
fs
jecxz
shlb
dec
and
imul
pop
mov
mov
xchg
cmpsl
arpl
push
mov
or
insb
sbb
fwait
int
dec
and
xchg
push
test
cmp
dec
bound
mov
inc
mov
fcom
and
sbbl
cld
mov
jns
jecxz
lods
int
mov
dec
lret
sbb
push
cmp
xchg
cmp
push
fs
or
fstl
mov
bound
dec
in
pop
insl
xchg
pop
mov
dec
lcall
push
ds
aam
lret
shrl
cmp
js
cmpsl
pop
icebp
cmp
std
jmp
xchg
push
or
inc
int3
cmp
jp
loope
psraw
mov
inc
adc
pop
ss
sub
ds
cld
jb
test
adc
lea
test
std
scas
pushf
mov
or
jae
test
aam
fidivs
pop
or
mov
stc
lcall
dec
outsl
push
jmp
mov
jno
das
rcr
jo
mov
aas
xchg
pop
pop
mov
fnstsw
mov
mov
in
insl
push
fwait
test
sti
aad
mov
into
sub
ja
popa
insb
push
inc
out
push
xor
mov
pop
lods
and
pop
es
jl
xor
subl
push
leave
cmp
push
mulb
in
enter
adc
pop
imul
lds
hlt
sbb
pop
jg
and
shll
dec
pop
popf
push
xchg
inc
jecxz
sti
fsubs
push
out
inc
jge
test
outsl
adc
je
sbb
test
mov
or
test
mov
push
inc
add
mov
sahf
fwait
pushf
leave
xchg
xchg
or
inc
dec
xor
clc
call
push
inc
dec
pop
ja
lock
mov
sti
sbb
into
cli
lcall
lahf
lret
movsl
sub
mov
rcrl
cmp
pop
xor
inc
mov
adc
push
xlat
xchg
cmp
mov
xchg
sti
imul
test
insl
stc
push
inc
mov
bound
pop
cltd
jo
dec
outsl
mov
fcmove
inc
cltd
add
push
into
aas
push
jo
xor
mov
scas
cmc
lahf
sbb
pop
mov
mov
test
out
stc
dec
out
jb
inc
fcoms
add
lret
scas
xchg
lock
sbb
ss
mov
loope
cwtd
out
pop
ljmp
add
and
sbbl
pop
mov
mov
sub
mov
cmpsl
jns
xchg
fstl
lahf
lds
push
pushf
lahf
jno
ja
xor
cmpsb
sti
cmp
sub
mov
repz
js
in
and
filds
add
incb
imul
inc
cmp
sub
cs
pop
push
int3
xor
push
push
pushf
xchg
sbb
fcomps
xor
inc
push
cmp
movsb
mov
sub
dec
cmpsb
or
cmpb
out
mov
fstpt
call
lret
mov
inc
jmp
and
adc
cs
mov
jmp
pop
ret
add
aas
mov
mov
dec
mov
sti
out
ds
outsb
pop
imul
int3
pop
cmp
push
mov
iret
enter
sti
leave
aam
pop
decb
bound
std
xchg
inc
adc
aaa
adc
mov
or
add
mov
dec
shrl
lds
fs
imul
aam
fwait
cli
sbb
pop
je
sub
in
push
add
test
inc
adc
fisubrl
repnz
mov
aaa
ljmp
pushf
sti
sub
dec
pop
dec
icebp
cmp
mov
or
jg
pop
aad
fnsetpm(287
imul
xor
aaa
sbb
or
cwtl
inc
fiadds
mov
cmp
add
mov
lret
jmp
lods
imul
pop
push
shl
aaa
nop
mov
pop
outsb
add
jnp
pop
test
dec
add
mov
out
and
jnp
das
mov
stos
stos
add
mov
popa
pop
int
add
je
addr16
cmp
pop
je
mul
xchg
cmp
xchg
dec
lret
in
roll
out
inc
cmp
es
sub
xchg
push
pop
and
outsl
adc
arpl
mov
or
or
lret
sbb
jb
push
pop
data16
test
jns
add
clc
sbb
idivb
pusha
adc
fsubr
ret
pop
or
cmpsl
push
cmp
ja
test
push
dec
lret
jne
sti
mov
jl
lret
fidivs
into
xchg
mov
lret
addr16
push
pop
jbe
xchg
push
adc
inc
lahf
push
rcrl
push
shll
sbb
sbb
dec
mov
subl
int
ret
push
out
mov
ret
mov
sbb
jae
mov
loope
leave
cld
fmuls
test
cmp
mov
mov
insb
hlt
mov
xor
sub
inc
mov
jmp
mov
dec
cwtl
lret
cli
pushf
jl
jns
add
lret
add
rorb
inc
push
xchg
lret
clc
push
dec
stos
mov
sub
gs
mov
jmp
out
and
je
iret
data16
adc
adc
inc
addl
scas
lock
into
cmp
mov
shrl
xor
push
popa
lea
inc
sar
cmp
fucomi
repz
cmpsb
jecxz
xor
shll
sub
lret
mov
mov
insb
icebp
xchg
dec
add
sbb
jle
fimull
jl
pop
xor
sub
mov
mov
into
test
dec
outsl
add
dec
xchg
int3
and
mov
lea
roll
scas
hlt
pop
inc
mov
dec
outsb
xchg
push
cltd
push
jb
imul
inc
xor
xorb
shrl
adc
negl
fisttpl
fldenv
sbb
mov
shlb
and
aad
push
cmp
mov
pop
flds
adc
call
pop
nop
mov
lret
and
insb
outsb
push
cmp
sub
cmpsb
clc
imul
rcrl
mov
dec
daa
mov
cltd
push
loop
sbb
fdiv
stos
inc
xchg
rolb
mov
jp
rcrl
pop
push
dec
mov
or
xor
pop
fcmovnbe
xor
fdivrl
imulb
into
ds
les
repz
repz
or
pusha
cmp
daa
lock
cmp
scas
das
inc
daa
push
test
mov
adc
outsb
or
enter
fsubrl
xchg
mov
sub
dec
xchg
int3
je
mov
and
movsl
leave
jb
ss
add
cmc
and
imul
or
popa
xlat
and
xchg
pop
mov
add
out
push
inc
cmp
insb
bound
inc
dec
addr16
mov
sbb
enter
inc
lods
or
xchg
mov
ror
xor
jmp
xlat
cmp
xchg
mov
or
in
xchg
mov
mov
lods
cbtw
sbb
jmp
or
addr16
fwait
mov
inc
dec
fcompl
push
sbb
aaa
mov
adc
inc
push
int3
push
and
sub
push
popf
clc
mov
mov
lret
popf
mov
dec
add
sbb
pop
idivb
mov
push
ja
mov
mov
repnz
ret
xchg
imul
pop
in
mov
int
fnstsw
push
xchg
lock
int3
les
jnp
sub
lret
mov
fwait
out
push
cmp
sub
and
mov
sti
jne
in
lret
data16
xchg
push
push
sbb
stos
xchg
cmpsb
adc
in
enter
mov
xor
pop
gs
sbb
dec
mov
xor
xor
push
inc
xchg
mov
fbld
in
je
in
or
cmpsb
xor
cmp
add
push
lcall
dec
repz
cmpsl
inc
stos
cmpsb
leave
pop
out
gs
push
ret
inc
sbb
add
mov
mov
pop
mov
mov
sub
xchg
or
fwait
out
push
xor
push
aas
cmpsb
push
dec
adc
mov
test
cmpsl
mov
jge
jno
and
aam
pop
sub
xor
push
imul
je
cmp
dec
and
pop
xchg
xor
ljmp
mov
fildl
jo
bound
out
add
je
adc
dec
xor
int
lea
iret
pop
add
insb
add
jmp
pushf
pop
mov
jmp
push
inc
pusha
xchg
cmp
add
clc
lcall
sbb
push
adc
mov
test
adc
and
imul
sbb
mov
fdivrs
xor
xor
inc
cs
les
push
lock
mov
jl
mov
pop
push
int
notl
mov
movsl
cmpsl
adc
out
or
aaa
xchg
inc
and
outsb
mov
data16
and
xorl
pop
sub
add
cmp
adc
jge
subl
pop
pop
adc
fldenv
jno
inc
push
outsl
stc
fs
mov
fstl
fs
rorb
in
cmpsl
jae
data16
and
stc
xor
dec
lahf
xchg
dec
popa
xor
or
inc
cmp
mov
fwait
dec
inc
mov
bound
scas
in
push
pop
sub
cmpsb
loopne
fadds
adc
push
or
dec
and
test
pop
sar
pop
into
jno
loop
inc
cmp
push
xlat
sti
ljmp
and
xchg
enter
jae
aam
sbb
imul
repnz
sahf
mov
add
add
incb
jmp
aas
lcall
mov
xchg
in
idivl
and
xchg
insb
mov
in
jmp
or
ficoml
sub
mov
gs
cmp
imul
mov
and
lock
arpl
iret
dec
cwtl
sahf
adc
nop
cltd
loop
mov
ret
or
jno
push
insl
outsl
add
add
mov
aam
sbb
or
sub
jno
in
mov
rolb
xchg
pop
test
insl
jg
mov
cmp
sbb
fisubrs
pop
jle
push
pop
cmp
shll
adcb
push
sahf
inc
push
in
sbb
cmp
movsb
xlat
cltd
shl
arpl
out
mov
xchg
ljmp
pop
cmpsb
sub
jg
cmp
imul
call
int
std
stc
and
push
jno
outsb
fcomps
lcall
pop
je
loop
push
xchg
clc
add
mov
mov
pusha
sahf
cwtl
les
and
adc
int3
sbb
sub
lods
xor
sub
lret
and
mull
inc
lods
loopne
frstor
inc
jecxz
loopne
xor
xor
fdivrl
xor
into
pop
adc
fdivl
cmp
ja
inc
sbb
movsb
jb
popf
cmp
xchg
push
repz
popa
adc
push
add
xchg
inc
adc
ret
mov
and
sub
pop
dec
jae
mov
adc
test
es
and
movl
scas
lahf
rcl
int
pop
ja
push
and
das
mov
stos
data16
cmp
sub
imul
sub
add
repnz
outsl
nop
in
jmp
xchg
test
ljmp
jno
push
xchg
das
lret
pop
fdiv
push
jns
mov
mov
arpl
in
out
lods
sub
xorl
dec
mov
fwait
repnz
or
mov
mov
dec
mov
mov
mov
loopne
inc
stc
scas
mov
adc
faddl
pop
pop
jg
mov
dec
cmp
or
movsl
lods
rorl
scas
mov
jge
mov
dec
iret
pushf
jb
outsb
loope
mov
into
out
mov
aas
ja
and
in
add
push
pop
cmp
pop
mov
inc
sub
mov
in
stos
movsl
sete
adcb
xchg
jp
mov
dec
loope
notb
arpl
pop
mov
test
pop
pop
inc
movsl
jl
dec
xchg
add
ret
shrb
push
pop
insl
jecxz
sub
mov
out
rorb
sbb
cmp
pop
jp
enter
test
jo
dec
lea
in
xor
loop
add
xor
popa
stc
inc
arpl
mov
dec
pushf
mov
stos
pop
scas
sahf
mov
push
loop
in
push
cwtl
pop
xlat
shll
outsl
arpl
ffreep
rcrl
sahf
mov
cmp
pop
aad
bound
lea
int3
call
dec
push
cmp
inc
pop
dec
sbb
pop
jae
and
push
arpl
test
fmulp
mov
mov
fbstp
adc
lds
mov
sub
mov
xchg
out
das
clc
lahf
mov
cmp
test
adc
sbb
cmpsb
mov
rol
cs
adc
push
xor
aad
movsb
mov
xchg
addl
pop
add
loop
adc
xor
lcall
xor
iret
inc
loop
push
xchg
inc
lock
xor
stc
js
lock
lret
mov
dec
mov
enter
mov
cmp
push
xchg
adc
sbb
loop
xchg
xor
aaa
dec
jo
mov
pop
push
or
push
xor
lds
jno
pop
mov
jnp
mov
orl
inc
mov
decl
lock
cli
mov
sub
sarb
mov
inc
mov
scas
push
fwait
lods
mov
push
jnp
lret
or
xor
enter
ret
mov
push
daa
movsb
addr16
sahf
pop
std
jge
pop
or
add
cmp
ljmp
jg
sub
add
push
call
mov
cmp
mov
dec
mov
push
pushf
daa
push
jmp
push
lea
push
ljmp
arpl
add
push
dec
sbb
bound
sarb
inc
xchg
scas
xchg
push
push
jmp
test
in
mov
ret
imul
cmpsl
mov
push
cmpsl
inc
sbb
jae
jg
repnz
jp
insl
xchg
lret
sub
out
xor
fmull
insl
insb
pushf
inc
movsb
out
test
into
push
enter
mov
leave
jl
rcrl
ret
enter
test
cmpsl
mov
fildl
xchg
test
xor
call
inc
movsb
scas
je
mov
cli
xchg
movsl
adc
or
cmpsl
inc
dec
mov
and
xchg
sar
mov
jnp
cwtl
dec
daa
xlat
push
xchg
sbb
addr16
and
push
mul
xlat
jl
inc
cld
or
idivl
std
into
test
int3
lea
repz
ret
jecxz
mov
pop
push
mov
int
and
arpl
mov
adcl
outsb
xorb
jp
mov
lods
imul
xor
fs
sbb
pop
aaa
add
inc
stos
lret
and
lods
inc
ja
pop
xchg
xor
sub
mov
or
fs
inc
mov
xor
lahf
dec
stos
popa
and
testb
cmpl
xchg
int
sub
xchg
outsl
fldl
insl
pop
iret
fidivl
xor
out
fxtract
sahf
sbb
fstl
loope
mov
pop
cli
fistl
xor
and
cld
into
je
adc
mov
inc
dec
outsb
loope
bound
jmp
sub
mov
mov
push
mov
std
je
shrl
inc
js
xlat
out
dec
lods
ret
jmp
out
add
aam
jl
add
add
outsl
cmc
out
or
scas
bound
scas
aad
data16
sbb
sbb
out
xlat
fstl
jns
push
xchg
test
orb
fs
test
xor
mov
pop
mov
shlb
das
repnz
adc
inc
in
xchg
pop
mov
jno
and
sti
lret
or
pop
pop
ljmp
mov
lock
add
outsl
xor
test
hlt
or
pop
pop
shr
dec
pop
popa
pop
pop
pop
fwait
out
pop
inc
mov
addr16
inc
dec
pop
cwtl
jbe
jg
lds
gs
xor
ds
sub
fwait
call
fadd
aad
xchg
in
out
cmc
mov
adc
xchg
mov
mov
push
inc
std
xor
dec
int
jns
pusha
nop
add
enter
rolb
out
cmovp
mov
lds
sbb
fs
add
sbb
stos
sub
pushf
pop
sbb
cmp
cltd
inc
cmpsl
repnz
inc
data16
rcrl
les
mov
loopne
shlb
mov
repz
test
push
nop
dec
arpl
sub
add
jg
fwait
xor
push
cld
xchg
lock
insb
imul
add
out
punpckhbw
repz
jg
xchg
cli
xchg
insl
push
clc
shll
or
jl
push
cmp
popa
imul
xor
sub
adc
lea
nop
inc
sbb
jl
cwtl
aas
shrl
in
pop
es
mov
ja
jb
or
jb
jae
inc
cmp
mov
mov
xor
jg
sub
cld
incl
mov
aam
lret
mov
mov
pop
jns
les
std
cmp
jl
mov
outsl
push
addr16
jno
stc
mov
outsl
in
pop
inc
pmuludq
clc
and
icebp
sbb
sbb
fidivrs
inc
sbb
jg
cmpsl
dec
inc
sbb
add
outsb
inc
jae
enter
int3
out
aas
notb
mov
adc
xchg
lret
mov
out
and
bound
dec
jp
cmp
mov
dec
test
xchg
mov
lcall
in
push
aaa
or
dec
out
jmp
jnp
cmpsb
dec
jge
jecxz
inc
je
sbb
pop
scas
int
dec
lds
adc
repz
cmp
subb
dec
fmuls
or
cmp
push
push
cmp
pop
movsl
stos
mov
mov
and
testb
sub
lret
mov
push
movsb
test
daa
dec
rorl
stc
cmp
out
je
sub
sbb
lock
test
sub
inc
lahf
cmp
sbb
in
mov
push
adc
push
dec
dec
fdiv
arpl
inc
fs
into
dec
lods
ljmp
or
test
pop
inc
iret
jmp
and
inc
add
pushf
sub
push
lds
add
xorb
add
pop
leave
cmc
lahf
enter
cmp
mov
fistl
and
sub
sub
lods
push
aam
adc
sarb
js
xor
dec
inc
mov
mov
and
cs
popf
push
in
mov
xor
ret
and
cmp
repz
sub
jl
add
jge
dec
inc
and
insb
aam
call
mov
inc
push
sbb
xlat
inc
fcoml
xchg
xor
daa
inc
roll
and
dec
mov
incl
sub
add
fucomi
outsl
jp
imul
jle
adc
enter
stos
jo
mull
nop
and
cld
mov
addr16
enter
test
scas
pushf
xchg
jle
mov
ret
lea
pop
pop
outsl
jmp
js
cmp
sbb
add
jmp
mov
gs
xor
insl
dec
inc
pop
std
mov
inc
ja
xor
adc
sub
inc
repnz
mov
mov
push
popa
push
sub
mov
enter
sbb
pop
outsl
adc
add
jl
mov
inc
push
lock
cli
xchg
mov
push
inc
in
ss
enter
mov
shl
hlt
gs
and
cli
das
sbb
xor
out
sahf
lcall
pusha
pop
push
jge
nop
dec
sbb
or
sbb
mov
xchg
mov
sub
xchg
loopne
adc
loope
rol
adc
aam
mov
adcb
jmp
push
sbb
adc
mov
call
mov
push
xor
lret
movl
mov
aad
cmp
cmp
idivb
test
or
xchg
sbbl
jno
inc
mov
adc
mov
pushf
stos
sti
call
pop
xchg
ss
mov
movsb
add
xor
fnstenv
jmp
test
pop
imul
stc
out
mov
or
scas
xorb
insb
addr16
stc
nop
inc
pop
xchg
popf
dec
daa
aaa
sub
int3
cli
fidivrs
lods
imull
notb
mov
dec
xchg
negb
ljmp
and
jp
cmp
mov
or
adc
stc
cltd
ret
stc
out
cmp
leave
in
xlat
cmp
fs
pop
test
pop
ret
inc
push
lahf
into
lods
pop
and
ja
mov
test
out
inc
bound
pop
sbb
fdivl
out
cmpsl
les
scas
je
add
sub
add
xor
cmp
enter
push
or
sahf
hlt
ret
cmp
sahf
xor
lods
jb
cmp
mov
sbb
cmpsb
cmpsb
jecxz
dec
mov
stc
mov
mov
or
push
in
fcoml
in
into
movsl
std
mov
mov
pusha
mov
dec
pop
lahf
cmpsl
mov
xchg
dec
jnp
sbb
dec
lret
mov
lods
add
push
aam
adc
mov
xchg
cltd
fwait
in
mov
mov
push
inc
icebp
in
std
iret
jl
sti
stc
ret
mov
mov
mov
mov
test
xchg
lods
adc
add
adc
stc
into
nop
negb
mov
push
pop
fcmovb
insl
pushf
aam
popf
cmp
rol
lretw
mov
sub
xchg
mov
push
fbld
pop
ffreep
jmp
loope
sbb
and
jmp
jmp
cltd
inc
add
inc
cmp
cmp
pushw
xchg
push
imul
sub
push
mov
push
push
test
or
xchg
fs
std
scas
adc
aad
lods
clc
fdivs
stos
sub
pop
or
xlat
pop
push
lahf
cmp
cmp
fs
mov
sbb
pop
mov
imul
call
adc
mov
dec
xor
mov
pushf
test
test
dec
cmp
insl
push
mov
mov
adc
cmpsl
stos
inc
xchg
push
sbb
test
xchg
xlat
cltd
sbb
lret
test
jno
or
or
mov
pop
dec
out
in
dec
aas
or
std
shl
mov
or
inc
rclb
and
fidivl
in
dec
dec
jnp
std
cld
movhps
dec
mov
sub
jmp
jle
pop
mov
jae
xchg
mov
jns
mov
mov
push
cmpsl
adc
xlat
in
roll
sahf
sbb
mov
xchg
and
mov
xchg
lahf
ret
fcoml
insb
movsl
mov
fs
inc
clc
fxch
mull
or
push
add
sti
gs
adc
or
add
inc
add
add
fidivs
ret
imul
andb
ljmp
jmp
js
filds
sbb
cmp
cmp
fistl
mov
push
mov
call
mov
mov
int
fdivs
lock
sbb
sbb
cmp
sarl
mov
sbb
into
jo
xor
sbb
inc
ja
pop
sub
adc
std
mov
enter
push
jp
fdivrs
in
lret
push
dec
jbe
push
lret
mov
xor
and
mov
rcrb
fldl
pop
cmp
mov
push
mov
inc
or
xor
mov
mov
jne
adc
pop
lcall
mov
mov
dec
adc
insl
sub
xchg
sahf
sbb
add
xor
int3
stos
sti
or
cwtl
xor
in
test
xchg
cmpb
enter
add
cmpsb
sbb
inc
rorl
dec
minps
shll
sbb
pop
pop
pop
xor
or
pop
or
ret
and
mov
aas
jge
out
pushf
sti
sbb
fwait
in
jmp
mov
jo
mov
aam
jnp
mov
pop
pop
cmpsb
push
push
push
cmp
arpl
nop
les
dec
dec
lods
adc
and
jmp
sbb
dec
icebp
ja
cmp
sbb
adc
jns
pop
pop
cmp
and
pop
adc
mov
lret
adcb
sub
dec
dec
dec
jns
in
jne
cld
mov
repz
cmp
inc
and
push
lock
ja
pop
ljmp
sysexit
push
in
adc
repz
in
cmpsb
push
mov
pop
repnz
jle
das
sahf
ss
mov
mov
mov
clc
and
out
and
cmpsl
scas
lods
and
test
lret
pop
sbb
or
hlt
and
dec
insl
pop
mov
dec
pop
out
push
ss
jmp
cmp
sbb
xlat
mov
or
mov
shll
sbb
adc
dec
iret
andb
mov
jmp
xor
and
aaa
xor
arpl
pop
stos
jo
lock
cwtl
neg
xor
cwtl
cmc
in
add
fldcw
mov
das
push
fcmovnu
jbe
sub
imul
imul
or
leave
sbb
outsl
push
mov
add
shll
mov
jmp
lock
mov
outsl
test
jg
mov
mov
out
loop
inc
sbb
or
sbb
mov
mov
dec
jb
mov
leave
add
mov
pop
outsb
fiaddl
adc
enter
inc
inc
jo
rcr
loope
xor
mov
sub
add
inc
inc
push
popa
jecxz
loope
cs
sbb
or
cmp
adc
fmull
dec
lock
or
daa
filds
cmpl
jnp
mul
mov
mov
push
push
out
rorl
in
cmp
inc
js
inc
dec
les
aas
ss
lret
pop
adc
retw
mov
adc
xor
and
and
pop
mov
dec
xorb
push
xor
mov
dec
and
mov
rolb
jnp
enter
std
sbb
dec
sub
call
adc
iret
or
cltd
mov
rolb
sti
jmp
fimull
aad
sbb
push
and
mov
pop
imull
xor
push
pop
clc
push
in
xchg
rclb
mov
xchg
out
push
sub
mov
mov
jmp
xor
sbb
lcall
jae
cmpb
testl
cmp
inc
pop
pop
fwait
add
dec
in
add
cmp
sbb
in
jbe
outsl
fs
xchg
sbbl
pop
repnz
lods
add
outsl
lahf
fs
xchg
mov
push
je
jg
repz
xor
xchg
inc
xor
sub
gs
lret
push
mov
aad
popf
ret
jae
cld
cmpsl
pop
stos
dec
and
sub
leave
push
cmp
xor
into
cmc
xor
adc
cmp
mov
pop
test
cmpsl
sub
scas
sbb
mov
mov
cmpsl
inc
js
jb
lock
imulb
in
xlat
jg
sbb
sub
sub
lds
outsb
inc
dec
xchg
ss
mov
fisttpl
jecxz
pusha
push
fs
and
mov
pop
in
out
test
push
dec
mov
push
inc
mov
jle
shrb
jle
pop
sbb
cmp
cwtl
push
and
push
push
pusha
jg
test
add
cs
and
mov
insl
js
mov
and
repz
pop
aaa
jno
push
jmp
js
pop
loop
jae
sub
imul
cmpsl
fs
inc
leave
cmp
ss
mov
mov
fidivrs
cs
fdivrs
jle
pusha
pop
mov
inc
pop
jmp
xchg
test
mul
insl
gs
movsb
ds
stc
out
cmp
lcall
jo
shl
mov
int
das
aaa
dec
mov
fstpl
cmpsb
cmpsl
fwait
ss
xchg
cmpsl
je
test
mov
add
js
repnz
cmp
mov
dec
push
iret
xchg
pop
mov
incb
push
inc
mov
pop
mov
testb
xor
jg
sub
mov
xlat
addr16
push
xchg
dec
jp
push
lods
xchg
fists
push
cmp
pop
enter
dec
inc
pop
negl
jbe
sub
fwait
test
mov
stos
cwtl
sub
in
mov
out
mov
and
mov
in
jmp
stos
add
fcompl
aam
xchg
push
inc
test
insb
rcrb
shrb
cmpsb
repnz
aas
push
jae
mov
jae
dec
mov
pop
pusha
in
test
sub
lret
dec
dec
add
in
jmp
dec
push
aaa
pop
in
push
cld
pop
adc
pop
popf
gs
sbb
inc
outsb
inc
mov
call
inc
call
popf
sti
dec
inc
rcll
pop
testl
cmp
fbld
pop
sarb
xor
jnp
int3
sbb
xchg
pop
rcrl
out
icebp
push
addr16
add
pop
push
pop
xor
adc
out
dec
movl
sub
mov
out
add
rol
cmpsb
call
in
in
mov
push
push
lods
lahf
jecxz
or
stos
mov
sub
push
jmp
in
mov
nop
dec
hlt
lahf
adc
imul
pop
push
adc
dec
movsb
and
cmpsb
and
mov
inc
es
and
inc
sub
pop
repz
mov
cmpsb
xchg
rcll
mov
es
and
xor
ret
adc
rcrl
fs
mov
jle
mov
mov
mov
mov
and
and
icebp
inc
nop
pop
addb
push
pop
aad
push
adc
scas
cmc
xor
dec
mov
out
xor
lret
dec
adc
dec
inc
mov
imul
push
cwtl
icebp
sbb
jae
lcall
jp
fdivrp
xor
mov
movsl
dec
push
mov
xchg
add
mov
xor
jp
xor
pop
sbb
mov
mov
xchg
dec
push
sbb
inc
mov
repnz
or
mov
push
leave
inc
xor
dec
pop
aaa
pop
shlb
fs
repz
in
pop
filds
mov
dec
lods
arpl
mov
inc
jmp
addr16
cld
push
lea
sbb
pop
or
adc
lds
fmuls
lcall
xor
push
adc
das
repz
push
inc
int3
mov
aas
push
xchg
sub
mov
call
fs
dec
nop
push
icebp
push
inc
fcompl
imul
ret
sti
and
aaa
jmp
sub
mov
add
ss
daa
cmp
sbb
sbb
stos
cmpsl
out
inc
mov
repz
cmp
mov
int3
push
cltd
mov
jbe
mov
repz
lret
fists
test
mov
mov
mov
mov
popf
dec
mov
idiv
push
and
dec
ret
dec
out
sbbl
test
xor
imul
cmpsb
cmp
dec
rcl
bound
add
mov
loop
pop
lods
insb
xor
out
xchg
mov
cmp
pop
xor
cmp
pop
cld
in
rol
push
mov
mov
not
mov
daa
js
js
pop
test
pop
das
xchg
ds
test
loop
rcrl
out
fwait
xchg
fbld
mov
cmp
nop
iret
push
or
xchg
mov
int
test
int3
or
outsl
jg
xorl
xchg
aas
test
aas
xchg
loope
movb
ret
repz
jb
fsubrl
outsl
ficomps
orb
adc
inc
sub
mov
pop
inc
or
jmp
insb
lods
stos
inc
adc
popf
not
xchg
xchg
jns
repnz
ja
lods
xor
inc
mov
xlat
aaa
inc
push
cmp
pop
sub
cmp
clc
add
mov
jb
subl
adc
mov
cmp
adc
andl
lret
out
das
clc
and
mov
popf
lret
cltd
cli
iret
inc
xchg
sbb
xchg
iret
lock
into
inc
testl
sub
test
lea
test
sub
aad
shlb
das
je
inc
fstpl
aam
mov
pusha
int3
adc
dec
jmp
or
cmp
leave
lret
jmp
cld
bts
xor
ds
stos
push
sub
cmp
lcall
fdivrp
sbb
push
jno
movsl
pop
imul
xchg
repz
loopne
jp
cld
xchg
mov
push
fsub
mov
sbb
stos
cmp
mov
out
mov
jmp
pop
rclb
sahf
push
xor
mov
fwait
or
popa
ret
dec
sbb
rclb
pop
jmp
ds
xor
test
out
loopne
mov
jnp
sbb
add
cwtl
mov
cmp
mov
inc
pusha
xorl
cmpsb
add
inc
push
pop
mov
hlt
push
sbb
mov
das
scas
outsl
lret
call
xchg
dec
cs
sub
xor
cmp
cmpsl
xorl
mov
pop
mov
or
cmp
sarl
jnp
pop
jmp
pop
jne
and
jle
shlb
pusha
call
pop
insl
mov
mov
popf
jbe
sti
fsub
adcl
jae
sub
call
fwait
jecxz
popf
mov
sahf
fstpt
sbb
aam
fmuls
stos
rolb
in
and
testl
in
lret
or
push
push
lret
pop
xor
pop
test
es
sbb
pop
in
lahf
mov
push
mov
leave
lods
cmp
stc
xchg
mov
sub
jle
fisubrs
xor
or
outsb
and
or
push
rclb
mov
lret
pop
adc
xchg
lods
xchg
in
lret
mov
xchg
jno
ljmp
pop
rcll
not
xorl
sub
add
ret
ds
aad
push
pop
nop
inc
jo
fwait
sbb
bnd
add
fmull
or
and
pushf
cmc
lods
sub
pop
xlat
ja
push
mov
inc
add
dec
or
xor
push
xlat
cmp
stc
cmp
xor
push
dec
or
stc
sbb
sahf
outsl
stc
add
into
lret
pop
lahf
push
push
data16
lcall
jae
scas
mov
mov
dec
jb
add
pop
das
lds
pop
sbb
ret
push
jae
dec
dec
add
mov
add
je
push
xchg
mov
pop
lret
lcall
jb
and
sbb
icebp
pop
push
sub
aad
and
movsl
in
mov
sbb
shrl
mov
cmp
int3
dec
lret
inc
sub
mov
jecxz
in
cmpsb
xchg
jmp
and
and
or
test
xchg
movsl
xchg
out
icebp
jb
pop
xor
movsb
mov
lods
mov
imul
mov
mov
sbb
scas
in
jbe
sub
stos
or
add
stos
xchg
jmp
lods
in
cmp
cmp
xchg
or
push
sbb
adcl
lods
xchg
dec
jo
out
jae
fwait
push
push
rcrb
ljmp
test
sub
or
adc
aaa
mov
pop
sub
xchg
cmp
adc
sbb
jno
sbb
push
gs
js
inc
xchg
push
sti
leave
hlt
stc
push
add
sbb
xor
cwtl
inc
mov
add
nop
arpl
movsl
dec
out
mov
sbb
inc
lcall
fnsave
jge
popf
testb
sbb
out
dec
mov
loopne
mov
out
jne
pop
daa
xchg
icebp
xchg
xor
rcrl
mov
pop
sbb
in
push
mov
out
xchg
or
mov
test
add
mov
sarl
cmpsl
aam
mov
cmp
or
mov
rolb
mov
inc
sbb
in
pushf
lods
sub
xchg
sub
ljmp
adc
dec
sub
add
mov
dec
lcall
out
xchg
sub
mov
jns
xchg
icebp
jmp
clc
cli
push
jo
push
mov
aaa
or
mov
popf
daa
xchg
mov
js
inc
inc
mov
inc
sbb
cmpsl
stc
adc
mov
clc
or
sbb
jns
dec
xor
aam
inc
cli
mov
jmp
test
add
dec
jge
dec
in
cmpsl
jno
jns
push
ss
outsb
and
stos
shll
pop
and
push
test
negl
fwait
mov
lods
jno
jb
repz
sub
arpl
push
xor
xor
sub
enter
jp
cld
sbb
lcall
push
pop
lret
inc
mov
icebp
cld
dec
jp
mov
or
outsl
lret
jmp
sub
mov
mov
mov
test
inc
add
cmp
cmp
std
movsb
in
push
lods
out
loopne
popf
ret
imul
add
pop
pop
mov
dec
inc
sbb
sub
mov
sub
repnz
fs
push
in
imul
and
adc
shll
out
loopne
stos
stc
repnz
mov
adc
sub
iret
mov
dec
pop
hlt
dec
scas
mov
in
lret
pop
fsub
imul
es
or
mov
xor
add
fisubrl
lds
xor
addr16
loope
enter
pop
or
scas
mov
jl
fxam
fadd
mov
xlat
pop
pop
test
jae
cmc
cmp
cld
data16
mov
das
mov
out
and
icebp
pop
xchg
loopne
sbb
mov
rcrl
ljmp
inc
dec
gs
daa
movsb
fidivrs
test
xor
lcall
ret
inc
inc
dec
lret
loopne
inc
mov
lret
sti
in
repz
shr
les
adc
pop
add
leave
cmp
or
fwait
and
jecxz
and
sbb
dec
dec
cmp
jecxz
into
sahf
pop
sahf
lahf
mov
cmpsb
sbb
gs
pop
or
or
mov
add
loopne
xlat
pop
pop
cmp
adcb
push
movsl
addl
xlat
xchg
or
pop
mov
xor
jo
or
ss
pop
pop
mov
loop
cmp
sbb
xchg
jns
ljmp
add
daa
roll
out
test
xor
cmp
js
jo
in
out
adc
roll
stos
test
rclb
dec
cwtl
std
stos
adc
testl
out
dec
decl
sub
inc
test
ljmp
sbb
stos
lahf
mov
movsb
ficoms
jmp
aas
add
sbb
ja
lahf
mov
fs
cltd
and
aas
test
jecxz
dec
insb
sbb
sbbl
inc
dec
jl
icebp
push
scas
enter
and
fldl
inc
adc
in
sub
les
jne
push
and
push
jecxz
lahf
shl
aad
hlt
xchg
nop
aas
aam
push
repz
cli
gs
mov
jmp
fbld
pop
repnz
mov
mov
fbld
sbb
xchg
mov
or
push
inc
sarb
add
test
dec
mov
ret
je
mov
add
leave
lea
hlt
repnz
pop
aas
in
and
and
mov
push
outsl
push
push
das
or
movsb
call
push
sarl
lss
or
lcall
cli
jo
adc
and
dec
dec
scas
cli
sarl
mov
in
xchg
lahf
mov
dec
jnp
addr16
mov
test
jmp
xor
jnp
dec
inc
dec
push
xor
and
push
mov
orl
mov
add
in
mov
out
inc
outsl
arpl
mov
fcmovnu
mov
popf
mov
mov
js
dec
or
push
pop
loop
fstl
cmc
sbb
decb
dec
push
cmp
lea
ja
cs
dec
xor
mov
insl
mov
push
sbb
push
repnz
insl
mov
fstl
dec
repnz
adc
leave
je
or
or
jle
outsl
mov
or
daa
ja
push
shll
ret
out
push
call
fsubrs
mov
xor
jmp
push
hlt
insl
or
pop
pop
xchg
push
and
or
icebp
out
stos
cwtl
dec
std
in
sub
popa
mov
dec
push
sbb
cmp
shll
push
jb
push
mov
mov
sub
or
jmp
stos
push
dec
xchg
sub
dec
imul
stos
add
stos
pop
lret
mov
repz
imul
lahf
jmp
dec
ja
aaa
or
int
mov
inc
xchg
xchg
dec
testl
aaa
mov
jne
aad
adc
mov
xchg
mov
jne
mov
aad
adc
divl
cmc
xlat
push
ja
aaa
adc
ljmp
mov
xchg
into
or
inc
push
sbb
ror
dec
cmpw
retw
push
sbb
rorl
cmpsb
inc
pop
cmpsb
xchg
dec
mov
inc
push
fwait
rorw
out
mov
mov
push
cs
ret
lahf
fcmovnb
xchg
das
or
inc
lcall
pop
shrl
dec
xchg
scas
mov
shrl
pop
inc
xchg
scas
mov
inc
lcall
pop
add
xchg
aaa
mov
push
xlat
mov
lods
out
out
divl
jo
shlb
mov
out
mov
xchg
mov
jo
mov
shlb
aaa
adc
divl
lock
push
ja
aaa
adc
shlb
sbb
mov
out
divl
jo
shlb
mov
out
mov
xchg
mov
jo
mov
shlb
aaa
adc
divl
lock
push
ja
aaa
adc
shlb
sbb
mov
out
or
pop
sbb
cmp
cmpsl
rorl
mov
ret
pop
sbb
jnp
out
jnp
daa
rorl
dec
cmpsl
add
sbb
sarl
sbb
push
jg
xlat
ret
dec
fistl
jg
xchg
inc
scas
sbb
jg
xlat
orl
push
sar
mov
ret
scas
sbb
inc
dec
pop
pop
xchg
decl
xlat
sar
dec
push
add
sbb
shll
mov
push
add
cmp
xchg
sbb
inc
dec
jmp
xor
jmp
xchg
sbb
inc
jae
sub
xchg
fwait
jmp
ret
dec
imul
sbb
roll
mov
push
pop
mov
ret
hlt
xchg
dec
or
dec
dec
in
cmp
fs
mov
ret
pushf
sbb
jl
and
int3
mov
int3
dec
add
in
dec
mov
ja
nop
call
das
shr
xchg
jae
xor
jae
mov
adc
scas
shr
xchg
dec
xor
jae
adc
aaa
rcrl
adc
jae
mov
jae
xor
mov
cpuid
scas
inc
mov
ret
arpl
arpl
cmpl
jae
lahf
and
packsswb
inc
out
orl
pavgw
cmpl
iret
outsl
lahf
ror
jg
scas
aas
mov
pop
mov
jmp
cmpsl
movb
sbb
xchg
into
xor
mov
and
jae
rolb
rclb
js
mov
lock
push
jecxz
mov
jo
mov
lock
mov
push
inc
adc
jne
mov
test
pop
lea
clc
jg
out
insb
mov
call
xchg
loop
xor
and
jbe
test
stc
rolb
out
pop
test
in
mov
fs
inc
xchg
sbb
sbb
push
sbb
mov
in
xchg
inc
pop
pusha
adc
lock
dec
test
shlb
fiaddl
xchg
adc
add
test
arpl
xchg
adc
cmp
loope
and
xor
sbb
stc
pusha
cltd
adc
mov
movsb
mov
jne
mov
aam
aam
imulb
sbb
scas
roll
adcb
mov
jae
xor
roll
mov
sub
dec
sbb
adc
inc
std
cld
int
mov
adc
jp
xor
xlat
sub
and
popf
jo
outsl
jg
cmp
adc
xlat
pop
les
mov
sub
enter
incb
int
mov
add
dec
stos
sub
push
lock
add
rolb
and
push
push
sahf
les
dec
fisubl
cmpsb
lahf
dec
sub
mov
jecxz
cmp
in
mov
add
mov
and
jmp
test
or
loop
movsb
adc
cmp
sub
sub
xor
mov
jl
jl
push
lds
xor
addr16
lods
cld
jns
enter
fwait
dec
push
xchg
lret
cmp
push
in
int3
inc
stos
inc
jns
shrl
adc
and
and
jnp
pop
nop
dec
jecxz
or
push
push
cld
xor
fnsave
sub
insb
push
out
sti
rcr
mov
lods
arpl
jp
imul
mov
cmc
hlt
es
push
out
nop
inc
xchg
stos
scas
iret
mov
shlb
adc
sub
aam
xor
push
jbe
adc
jb
repnz
xor
ret
mov
leave
adc
fwait
in
ds
xchg
sbb
xor
push
jbe
loopne
sahf
lock
sub
dec
clc
movsb
lret
fs
and
loop
fucom
cwtl
inc
rcrb
cld
dec
cli
cmpsb
or
push
dec
rolb
add
mov
push
xchg
das
inc
pop
fwait
repz
dec
pop
and
sub
subl
and
sub
add
xor
mov
addr16
jp
stc
scas
cmpsl
rorl
int3
leave
stos
dec
or
cld
xchg
rcrl
mov
mov
lea
ja
mov
pusha
and
or
xchg
stos
rcll
sub
pop
test
sti
lods
ret
mov
dec
sahf
mov
inc
cmpsb
xchg
mulb
cmp
fisubrs
ja
mov
ja
adcb
bound
scas
add
gs
xchg
dec
mov
rorb
cwtl
stos
mov
lods
call
and
mov
add
fdivl
cmpsb
push
or
or
adc
xor
imul
test
sbb
dec
push
fmuls
std
cli
je
add
add
imul
icebp
cltd
push
sarb
add
mov
mov
testb
addr16
cli
dec
insl
scas
mov
cmp
jae
test
pop
dec
cmp
cwtl
push
es
fcomps
push
mov
cmpsl
scas
pop
stc
addr16
mov
push
jg
push
jp
in
pop
inc
jg
cld
xlat
push
scas
inc
push
pusha
fstps
cmp
dec
std
cmpsb
lcall
mov
mov
add
dec
popl
aas
push
aas
rorl
pushf
jo
ret
xor
jb
xor
loop
ret
jl
es
sti
test
sub
push
cs
sbb
jg
jo
stos
inc
mov
daa
aam
mov
sbb
adc
xchg
jle
inc
and
inc
cmpsl
pop
pop
adc
mov
push
push
incl
daa
sbb
rorl
sub
arpl
or
in
cmpsl
daa
fistpll
stos
mov
sahf
mov
mov
fisubrl
in
lea
jb
popf
jge
xor
dec
adc
xor
push
ja
out
lcall
jle
add
cmpsl
fsub
sub
mov
cmp
push
sbb
jo
push
push
pop
arpl
jge
xor
in
pop
xor
xchg
push
xchg
mov
jg
movsb
mov
pop
xchg
test
inc
xchg
sbb
push
adc
mov
mov
adc
ljmp
push
jle
iret
cmc
push
sbb
aad
mov
jg
imul
xchg
cs
pushf
cli
rolb
jg
mov
cmp
leave
leave
movsl
sbb
and
pop
jae
xor
xchg
pop
rorl
ret
cmp
aaa
dec
jo
xchg
clc
shrb
shl
xchg
xchg
xor
jae
mov
inc
into
and
inc
mov
cmp
lret
or
push
insl
push
sbb
imul
sbb
mov
xchg
sub
xchg
es
dec
das
cmpsl
loope
mov
and
jo
mov
cld
add
pop
add
rorl
jg
pop
stos
ss
mov
roll
cmc
mov
mov
pop
cld
sbb
xchg
test
jnp
inc
mov
push
adc
adc
push
dec
lock
fs
repnz
mov
pop
into
ljmp
xlat
idiv
push
pop
ljmp
sub
mov
adc
sub
adc
test
pop
lret
cmp
shrb
orb
add
push
cmc
adc
aas
xchg
je
aaa
and
jecxz
subl
sbb
nop
dec
push
out
xchg
test
jbe
pop
xchg
popf
mov
pop
sub
adc
push
pop
mov
in
stc
jp
shrl
lahf
mov
push
sti
mov
sub
shlb
test
lock
movsb
pop
adc
xchg
stos
push
ret
stos
push
outsb
adc
mov
nop
mov
icebp
lret
adc
sbb
adcb
fucom
push
pop
lret
orb
stc
mov
xchg
outsl
inc
or
jb
gs
mov
jecxz
push
push
repnz
inc
push
cmp
lods
sbb
inc
push
int
add
fld
mov
pop
test
mov
and
mov
xor
call
gs
in
jo
push
inc
dec
popa
xor
mov
xor
popa
lahf
leave
cmp
jne
add
mov
rclb
xor
cmp
iret
enter
push
mov
data16
into
add
ret
arpl
stos
and
add
pop
inc
jne
shlb
adc
dec
gs
mov
pop
test
je
mov
mov
pop
fcomp
mov
pop
cmpsl
gs
and
xchg
out
das
lods
test
mov
scas
dec
popl
fs
mov
jb
lea
call
daa
mov
ljmp
daa
in
inc
cmpsl
fwait
pop
addr16
dec
out
aas
add
pop
lahf
mov
jns
mov
enter
je
ss
or
and
push
bound
jnp
push
pop
icebp
push
lods
sbb
jno
mov
xlat
xor
dec
aas
inc
out
mull
pop
mov
push
adc
push
jl
outsb
lods
clc
lds
pop
into
int
adc
lret
xor
insl
sahf
int3
aam
xor
push
shrl
pop
push
jg
pop
inc
pop
arpl
inc
bound
aam
jno
lret
sub
cwtl
shlb
movsl
sbb
mov
lret
sub
mov
or
push
movsb
jno
bound
adc
xchg
jg
cmp
mov
negb
cmpsb
das
repnz
pop
das
mov
lds
loope
push
jo
mov
movsb
loop
repnz
cs
jg
daa
mov
dec
push
push
jg
xchg
js
mov
popa
push
jb
xchg
lock
cli
cli
mov
add
jle
cmp
stos
jae
jae
mov
inc
push
mov
ret
int3
dec
fs
clc
xchg
push
sub
std
scas
adc
xchg
sbb
imul
adc
adc
jge
cltd
xor
insl
jg
enter
loopne
test
push
enter
test
shll
jno
jno
inc
add
out
dec
adc
jo
sbb
test
mov
scas
ficoms
loop
xlat
add
fbstp
js
fdiv
lds
or
xlat
adc
mov
sub
pusha
lock
xchg
add
loop
faddl
xchg
push
push
push
dec
sbb
pop
gs
mov
fidivs
add
jb
sbb
inc
test
std
repnz
inc
xchg
lret
fsubrl
push
and
mov
enter
dec
fisttpl
sub
cmp
lods
cmp
stc
and
or
lods
xchg
sbb
je
xor
in
ret
inc
sub
lods
ret
push
jmp
xor
jmp
iret
loopne
adc
jl
mov
out
push
rorb
ja
cwtl
push
jl
jecxz
in
leave
cmp
arpl
pop
push
jp
dec
xor
mov
mov
mov
inc
mov
addl
hlt
xchg
mov
jl
lcall
addl
add
dec
movsb
xchg
add
outsl
jp
lds
push
dec
test
mov
outsb
sub
push
sbb
push
fcomi
test
mov
cltd
sub
xchg
jae
fldt
lods
shl
enter
adc
push
stos
lahf
icebp
insb
push
cld
repnz
or
mov
lods
and
lahf
cmp
jbe
dec
jno
cmp
lahf
test
push
addr16
xor
mov
jl
mov
dec
jle
pushf
fmuls
popa
mov
lock
out
adc
mov
xorb
rolb
in
loop
hlt
movsb
adc
cmp
jp
repz
mov
jbe
pushf
sbb
addr16
cmp
pop
ret
cmp
dec
mov
pushf
in
js
xor
call
and
shr
adcb
lea
dec
daa
testb
sbb
xor
repz
cmc
into
adc
pop
push
loopne
adc
or
push
divb
les
sub
pop
jge
je
jbe
mov
or
jg
lret
adc
push
and
aas
loope
xorb
jge
or
xchg
sbb
test
stos
fistpll
loopne
push
xor
push
fcoml
es
cltd
in
cmp
mov
jo
mov
dec
pop
iret
stos
pop
sbb
jle
cmpl
aam
sarb
sub
pop
jp
adc
lret
rep
and
mov
jne
xor
out
mov
adc
sub
aad
mov
mov
jns
shr
shrl
and
pushf
push
jo
rclb
test
sub
or
push
mov
push
dec
sbb
mov
sbb
sub
adc
mov
ja
test
dec
enter
inc
daa
decb
fmuls
popf
and
sbb
imull
push
inc
std
fs
add
stos
add
jb
mov
loopne
and
add
jnp
bound
pop
lret
sub
sbb
pop
cmp
addr16
in
mov
scas
jbe
dec
jno
push
pop
les
out
xor
sti
and
sub
sbb
ljmp
pop
rcrb
inc
enter
inc
push
pushf
sti
xor
lea
daa
addr16
lods
in
imul
pop
push
test
mov
jno
movsl
adcl
mov
lahf
and
adc
mov
stos
push
in
insb
mov
cltd
cmp
lods
jo
sub
stos
cld
test
or
mov
rcrb
cmp
std
xchg
sarl
push
lods
orb
cs
cmp
xor
or
lret
xchg
ljmp
gs
inc
xchg
call
sub
loop
mul
inc
call
jp
movsl
loopne
xor
fsubr
adc
adc
imul
iret
xchg
mov
inc
sbb
repnz
dec
cmpsl
pop
adc
sub
add
pop
daa
xor
push
arpl
mov
fnstsw
lods
sub
pop
in
inc
test
sub
pop
push
out
and
jl
push
stc
cmpsb
add
mov
addr16
push
jno
mov
sbb
mov
test
add
enter
rcrb
or
dec
mov
inc
sbbl
push
or
leave
pop
insb
mov
into
rol
adc
hlt
push
movsl
push
imul
push
movsl
push
xchg
or
jmp
jmp
or
ret
mov
sub
pop
push
push
clc
add
cmc
mov
out
out
andl
mov
push
sarb
mov
inc
dec
call
fcompl
iret
je
mov
mov
rolb
shll
scas
mov
sub
mov
es
jle
xchg
imul
mov
xchg
lahf
es
xlat
jb
ret
ja
and
adc
in
aas
cmp
and
xor
jg
in
call
mov
push
xchg
pop
mov
and
arpl
stos
les
fs
ja
mov
pop
jle
ret
jo
icebp
repnz
add
stc
stos
jle
lock
xchg
cmp
test
xchg
mov
add
mov
sub
and
pop
gs
js
dec
cmp
fdivs
lods
lea
cld
add
mov
dec
int3
xchg
fistl
in
loopne
mov
out
pop
and
push
add
inc
or
cltd
xor
cmp
or
adc
ret
fidivrl
inc
mov
and
mov
and
lret
sub
fistpl
mov
add
popa
pushl
enter
sub
sub
cltd
stc
dec
and
fisttpl
lea
mov
mov
dec
ss
or
fwait
xchg
je
in
mov
arpl
mov
fsubrl
test
imul
cmp
mov
into
push
lock
pop
leave
fisttps
jle
adc
and
call
push
jp
or
test
popf
push
mov
mov
pop
jne
aas
or
mov
inc
into
cld
shlb
jp
es
jp
lret
add
add
bound
test
mov
nop
out
mov
call
pusha
mov
hlt
xlat
pop
or
mov
lods
jg
xchg
jo
arpl
ss
cmp
inc
incb
fs
loop
sub
dec
lret
push
xor
stos
lret
mov
inc
into
lret
imulb
inc
cld
rcl
jmp
adc
ss
mov
mov
add
lea
dec
push
push
push
jg
test
fdivl
push
pop
mov
dec
xchg
xchg
orl
fcompl
mov
push
lods
xchg
repnz
and
xchg
and
fcoml
inc
psrad
pop
repz
dec
sub
and
hlt
es
xorb
xor
pop
sub
leave
dec
subb
cmpsb
adc
andl
add
push
lret
add
push
nop
loop
lock
adc
push
xchg
adc
std
jb
je
push
cs
jge
lods
ret
push
scas
cmp
fiaddl
cs
lcall
pop
pop
or
dec
jo
jbe
mov
cmc
out
cli
loopne
xchg
pop
or
and
cmp
mov
adc
jl
push
scas
or
ret
add
into
out
rcrb
mov
push
pop
test
andl
jb
xchg
in
jno
xor
dec
xor
or
enter
nop
ja
pushf
mov
or
sti
clc
cmp
jne
mov
pushf
in
mov
lret
xlat
lock
push
sti
sbb
test
test
mov
xor
stos
push
mov
insl
imul
fimull
jge
pushf
sub
push
lcall
cmp
repnz
lods
pop
xor
rolb
loopne
jbe
add
loop
lahf
inc
out
adcb
mov
fs
sbb
cmpsb
inc
loopne
pop
lods
std
jb
fcmovbe
xchg
inc
xor
or
cld
push
dec
xchg
push
decl
sub
jmp
and
jl
bound
gs
and
xlat
inc
iret
pop
sarl
mov
add
addr16
mov
test
xorb
push
and
data16
add
cmp
fwait
ljmp
cmp
dec
imul
movsl
jo
pop
sub
inc
and
sub
inc
jl
adc
into
sbbb
mov
mov
or
mov
sbb
xchg
orb
hlt
adcl
inc
cmp
sbbb
mov
xor
cmp
fxch
add
inc
push
loop
gs
stos
enter
mov
adc
lahf
add
rcr
sbb
xlat
loopne
repz
imul
and
or
or
je
sbb
insl
push
jecxz
daa
inc
cmp
mov
dec
sbb
movzwl
xchg
lcall
ficomps
jne
xor
mov
xor
pop
vsubps
movsb
cli
xchg
mov
or
xor
inc
adc
int
push
stc
add
push
mov
add
jmp
and
cmp
lcall
sbb
cmp
in
repnz
mov
and
scas
mov
jae
pop
add
push
cwtl
add
mov
add
dec
mov
ds
loope
scas
xchg
sub
mov
sbb
ret
mov
add
xor
xor
cmp
jb
xchg
adc
sub
dec
into
xchg
nop
out
sbb
sbb
aam
mov
cs
jbe
shlb
les
cli
mov
fisubrl
sbb
jge
cmp
test
hlt
mov
ljmp
test
mov
in
pop
jp
movsl
mov
pop
adc
sub
and
into
insl
xchg
push
mov
xchg
outsl
pop
loopne
js
inc
sar
xor
xchg
mov
jns
movsb
lock
jg
aas
into
pop
cli
xor
decl
push
push
adc
imul
adc
sub
xchg
xchg
aaa
je
lcall
mov
jnp
das
ret
mov
mov
js
pop
jg
enter
sub
and
addr16
jb
mov
lcall
push
mov
outsb
adc
inc
mov
rorb
test
dec
int
rcrl
xchg
repz
xchg
add
fidivrs
mov
xchg
cmp
addl
jb
popf
aaa
jae
xchg
dec
repnz
cld
clc
jg
dec
inc
pop
fsubr
ret
movsl
fwait
push
enter
popf
fldt
enter
das
lret
iret
nop
pop
mov
das
imul
movsb
stos
mov
cmp
dec
mov
fisttps
xchg
pop
sbb
adc
sbb
jae
pop
mov
dec
sti
mov
adc
nop
fists
scas
cli
jg
das
sub
xchg
out
pushf
clc
mov
scas
lret
xor
clc
xor
dec
out
or
pop
outsb
test
enter
jae
les
pop
jae
cmpsl
pop
dec
addr16
mov
bound
jae
adc
cmpsl
mov
mov
pop
push
fdivs
and
mov
out
daa
ljmp
call
lcall
mov
pop
clc
sub
int3
in
jae
imul
dec
jmp
inc
inc
repnz
dec
mov
adc
lret
xchg
fadds
push
pop
jg
cs
jno
jl
idivb
iret
orl
cltd
negl
xor
dec
push
xor
jns
test
dec
mov
icebp
sbb
xor
decl
lret
adc
mov
fcmovnu
daa
scas
es
add
movsl
cmp
push
jne
sub
fsubrs
cmp
or
fdivrs
push
cld
mov
fadds
cmp
dec
pop
dec
jl
jle
jb
xor
xor
sub
jno
das
dec
inc
xor
push
cld
pusha
aas
jl
fnsave
std
in
push
xor
mov
cwtl
les
or
inc
dec
xchg
mov
cwtl
adc
sbb
repnz
mov
pop
outsb
push
xchg
mul
dec
ret
sbb
mov
add
lds
dec
fldenv
pop
adc
dec
shll
pop
xchg
sti
push
sub
xchg
dec
sub
mov
sbb
sub
cld
push
out
outsb
jo
sti
fisubs
cld
sbb
cmp
or
iret
sti
inc
xor
push
imul
repz
out
stos
xor
stc
cmp
shlb
push
cli
cli
and
lea
cmpsb
jecxz
out
cmp
clc
lock
xor
or
loopne
bound
call
loop
jle
stos
in
cmp
cmc
in
cwtl
pushf
popl
mov
lods
insb
jge
mov
sub
insl
push
sub
cld
cmc
stc
loopne
mov
push
rcrb
dec
adcb
lds
stos
sbb
push
jmp
sbb
test
xor
lret
in
loope
pop
pop
aad
dec
xchg
imul
cmp
dec
sub
cltd
in
dec
pop
outsb
push
in
rorl
jmp
test
imul
hlt
and
ds
ja
or
lret
jne
lret
ret
mov
cwtl
rclb
clc
mov
mov
stc
push
pop
loop
test
mov
and
ljmp
xor
jnp
mov
lds
int
mov
push
and
dec
xchg
lret
rcrl
sub
ss
stc
cmp
mov
clc
flds
ljmp
dec
cmp
push
enter
jge
or
sbb
xor
or
jae
std
das
idivb
pusha
mov
xor
cmp
sub
lahf
sti
pop
into
jg
add
lds
scas
sbb
cmp
pop
and
mov
pushf
testl
data16
mov
mov
xchg
dec
push
push
mov
lahf
adc
mov
cs
push
in
ljmp
shrb
xorb
scas
mov
dec
iret
cmp
xor
or
sbb
insb
iret
rcrl
test
xor
fdivl
fscale
pusha
mov
mov
int3
jo
push
mov
inc
pop
cs
fsubrs
push
mov
sbb
rcrb
out
jle
push
mov
icebp
jo
mov
adc
mov
lods
cmpsb
jp
nop
sbb
into
cltd
cmc
cmpsb
imul
aad
sub
cmp
xlat
or
sbb
lcall
insb
arpl
fxch
dec
dec
mov
dec
andb
sysenter
pop
or
dec
xor
insl
sbb
ss
xchg
cld
popf
lds
into
in
cmpb
fcomps
into
insb
fstpl
jp
gs
fwait
jb
sbb
inc
dec
stc
sbbb
notb
push
inc
out
push
imul
cwtl
lea
loope
adc
adc
and
and
pop
and
dec
mov
xchg
call
aaa
sbb
push
int
fldcw
mov
adc
je
sbb
ds
fadds
add
mov
fimuls
xor
loopne
repnz
out
ds
cmp
pop
sub
repnz
scas
mov
and
lahf
xchg
les
mov
xchg
jp
xchg
add
loopne
lea
es
fbld
ss
and
leave
add
sub
cmp
cld
push
or
inc
addr16
jnp
dec
mov
push
xor
mov
call
hlt
popf
xchg
mov
lahf
lcall
inc
pusha
nop
push
jp
add
and
int3
xchg
mov
iret
and
divl
mov
xlat
push
addr16
int3
mov
mov
gs
hlt
and
mov
lret
nop
addr16
push
or
notl
nop
jnp
icebp
inc
add
push
pusha
mov
mov
dec
pop
loopne
stc
push
pop
push
and
pushf
pop
and
sub
or
aas
ret
jnp
jae
sub
mov
aam
rcrb
movsl
cmp
inc
out
shlb
fsubrl
fmuls
mov
adc
jl
jmp
mov
xchg
out
mov
lock
aad
mov
ds
loope
lock
rcl
mov
jg
adc
aas
lcall
out
or
and
dec
inc
addl
or
and
cli
sbb
call
push
ja
cmp
nop
or
repnz
pop
pop
jle
jp
jg
inc
sbb
jl
mov
lock
lds
imul
xor
pop
xchg
mov
add
fstl
or
cmp
shlb
sti
mov
outsb
jb
aaa
stos
jb
push
sub
sbb
mov
inc
add
or
and
das
nop
sub
add
adc
mov
stos
dec
aad
stos
or
mov
fiaddl
mov
sub
dec
movsb
push
sub
and
fdivl
mov
or
pusha
adc
pop
adc
lock
aaa
cmp
sub
int3
in
outsb
out
mov
cmp
arpl
incl
out
dec
sti
mov
shl
stos
mov
adc
andb
push
mov
lods
mov
fldt
jecxz
rcll
xchg
dec
push
cs
scas
fsubl
push
fidivl
mov
dec
gs
jns
out
repnz
stos
insb
pop
les
mov
or
xor
negl
data16
bound
icebp
repnz
xchg
lret
arpl
add
hlt
jle
cltd
rorl
xor
mov
sbb
leave
dec
ret
out
mov
xchg
pusha
cltd
jno
xchg
icebp
loopne
xchg
lods
data16
xchg
imul
jle
mov
aam
mov
fiadds
and
enter
rolb
sub
jp
je
outsl
fcmovnb
pop
xor
bound
rol
in
or
add
cmova
sbb
sbb
cmp
push
out
adc
mov
cmp
movsb
ret
mov
sti
xor
ljmp
sahf
mov
cmpsl
lcall
pop
fsub
push
insb
mov
sahf
in
cli
jg
pop
loope
shrb
mov
out
mov
inc
or
inc
pop
jecxz
cmpsb
xchg
xchg
int
xorl
or
rorb
shll
into
cmp
into
dec
mov
sbb
and
cltd
fimuls
scas
test
aam
popf
rclb
mov
add
test
repz
fsts
mov
add
inc
cwtl
push
out
mov
and
add
ja
cmp
jg
jne
lret
xchg
mov
pop
gs
and
and
dec
nop
dec
insl
cmp
clc
cld
icebp
inc
in
dec
xor
xchg
adc
pmaxsw
dec
pop
adc
dec
pop
pop
mov
add
cmp
pop
test
daa
push
xchg
pop
cmp
popf
movsl
sbb
bound
test
mov
add
add
mov
ret
jo
pop
data16
mov
inc
or
stc
leave
popf
adc
aas
jae
shrb
jl
push
fsubl
leave
fimuls
mov
sarb
add
rorl
test
stc
cld
leave
lret
test
aam
mov
dec
std
orl
push
pop
mov
sbb
inc
std
or
lea
sbb
xchg
add
or
insb
xchg
inc
test
xchg
lods
nop
std
xorb
pop
mov
sbb
xor
cltd
dec
scas
mov
jl
mov
cmc
sub
bound
das
test
sbb
cld
lea
sbb
sti
test
ljmp
mov
pop
xor
loopne
mov
pusha
icebp
xchg
lods
sbb
jp
fnstsw
adc
insb
mov
ja
inc
xchg
dec
cltd
mov
popf
mov
mov
daa
pop
and
adc
je
nop
into
adc
push
adc
jne
pop
negl
call
pop
movsb
mov
std
fldenv
mov
lahf
cwtl
push
and
popa
das
sti
sub
jb
movsb
push
hlt
pop
mov
sbb
sbb
adc
ret
fdivs
xchg
pop
dec
push
fidivs
fcompl
xor
outsl
cmp
ja
mov
pop
outsl
scas
fsubr
jne
pusha
push
outsl
jmp
xor
aad
outsb
mov
stos
pop
jno
aaa
imul
fdivl
pop
pop
mov
sbb
stos
pop
sti
gs
or
cwtl
push
inc
jmp
nop
add
decl
push
jne
adc
test
cwtl
popa
push
aam
test
enter
fldcw
and
jp
fists
mov
pop
dec
int3
pop
jl
gs
lret
cltd
ljmp
js
dec
sbb
inc
jno
cmp
or
sub
dec
imul
mov
fstl
jle
lods
imul
mov
int
sahf
cmpsl
jl
push
and
cmp
xchg
sub
loopne
out
out
mov
xor
insl
mov
repz
and
push
es
aaa
mov
pop
fwait
.byte
.byte
add
add
insb
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fs
enter
cmp
sbb
and
sub
cmp
dec
ds
ds
ds
jle
mov
aas
pop
aas
ss
ds
dec
aas
push
aas
pusha
aas
insb
aas
jae
mov
out
cld
xor
cmp
inc
ss
ss
ss
les
fdivl
sti
or
sbb
cmp
je
pushf
aaa
test
loop
add
adc
cmp
aaa
dec
cmp
aaa
daa
cmp
inc
cmp
ja
cmpsb
cmp
cmp
cmp
out
sti
cmp
cmp
cmp
xchg
cmp
mov
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
add
or
push
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
cmpsb
xor
xor
xor
xor
and
sub
xor
xor
xor
xor
xor
add
add
mov
cmp
sbb
outsl
cmp
cmp
cmp
cmp
dec
cmp
jae
cmp
cmpb
aas
mov
aas
lds
add
inc
xor
jnp
xorl
xor
xor
xor
xor
xor
xor
xor
jp
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
ss
xor
cmp
dec
cmp
ret
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
xor
add
add
add
dec
cmp
cmp
movsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
mov
idivl
add
popa
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
push
cmp
pop
cmp
cmpl
cwtl
ds
loopne,pt
adc
xor
enter
inc
xor
push
mov
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
inc
aaa
push
aaa
pop
aaa
addr16
nop
aaa
xchg
aaa
std
aaa
adc
mov
cmp
cmp
cmp
jl
enter
das
cmp
cmp
cmp
inc
add
or
add
dec
aaa
push
aaa
fnstcw
mov
cmp
mov
dec
cmp
cmp
cmp
add
sub
cmp
xchg
cmp
cmp
cmp
sbb
dec
cmp
cmp
cmp
cmp
cmp
jle
add
or
adc
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
pop
cmp
push
cmp
and
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
push
xor
jge
xchg
xor
xor
xor
xor
fwait
xor
outsl
xor
xor
xor
xor
xlat
xor
mov
xor
xor
ret
ss
ss
xor
xor
xor
xor
xor
xor
xor
xor
jge
ss
divb
add
add
add
xor
cli
aaa
adc
aas
cmp
mov
cmp
cmp
stos
cmp
cmp
cmp
cmpsl
cmp
das
cmp
fidivrl
xor
cmp
cmp
cmp
mov
aas
add
add
add
xor
xor
jnp
cwtl
xor
out
xor
sbb
xor
inc
xor
aaa
xor
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
into
ss
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
aas
cmc
aas
add
add
add
dec
xor
adc
mov
mov
xor
xor
xor
jne
xor
xor
xor
sahf
xor
iret
xor
cli
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
les
out
stc
cmp
push
sbb
data16
inc
aas
pop
aas
loop
add
add
sbb
pop
aas
insb
aas
dec
aas
push
aas
ljmp
xor
or
inc
ss
aaa
pop
aaa
xchg
call
cmp
cmp
in
fstpt
lcall
cmp
cmp
push
cmp
insb
cmp
sarl
stc
cmp
cmp
inc
cmp
fwait
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
insl
jbe,pt
cmc
ds
in
cli
or
sbb
and
sub
xor
cmp
mov
xchg
xor
xor
xor
xor
xor
xor
pop
xor
jns
std
xor
xor
xor
jl
nop
xor
xchg
xor
xor
xor
jle
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
add
add
lds
push
cmp
idivl
cld
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
sub
das
ds
ds
imul
ds
aas
cmp
movsb
aas
test
xor
xor
xor
xor
xor
dec
xor
push
xor
jg
mov
xor
pop
xor
js
jg
test
in
xor
xor
xor
cmp
xor
xor
xor
ss
aas
cmp
cmp
cmp
cmp
xor
xor
mov
pop
ss
imul
ss
aaa
jo
jne
cwtl
aaa
popf
aaa
loop
lock
cmc
aaa
sarb
cmp
cmp
mov
add
adc
cmp
cmp
cmp
cmp
cmp
jge
sbb
and
mov
stos
aas
mov
mov
mov
aas
into
aas
aam
fidivrl
loop
call
aas
cli
aas
ret
xor
xor
xor
xor
xor
xor
mov
adc
xor
xor
xor
xor
xor
xor
xor
push
xor
jbe
jnp
test
lods
xor
loope
out
pop
aaa
and
xchg
aaa
cltd
aaa
and
sub
push
cmp
cmp
pop
cmp
test
mov
ret
cmp
cmp
cmp
data16
cmp
cmp
pop
cmp
cmp
mov
add
xor
xor
xor
xor
adc
sbb
push
xor
sub
xor
xor
inc
xor
dec
xor
xor
data16
xor
jle
test
mov
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
xor
rolb
enter
aam
sbb
and
hlt
cmp
hlt
ds
ds
add
xor
xor
cmp
pop
aas
fs
jo
pusha
aas
insb
aas
js
nop
aas
mov
aas
int3
aas
fdivrs
fdivrl
hlt
aas
cld
aas
loopne
in
call
xor
xor
inc
xor
xor
xor
xor
insb
xor
je
js
jle
xorb
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
fs
test
lods
cmp
sarb
cmp
test
add
adc
mov
test
fdivs
in
call
xor
xor
xor
xor
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
int3
add
add
fdivl
loopne
in
inc
aaa
inc
aaa
dec
aaa
dec
aaa
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
adc
adc
sbb
sbb
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
enter
shlb
aam
fdivs
fdivl
loopne
in
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
adc
add
add
add
or
or
pop
sub
mov
add
mov
.byte
or
