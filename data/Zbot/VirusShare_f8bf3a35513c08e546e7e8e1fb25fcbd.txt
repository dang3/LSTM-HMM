xor
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
and
add
and
add
add
add
and
add
and
add
pop
add
and
add
and
add
pop
add
add
add
pop
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
and
add
add
add
pop
add
add
add
add
pop
add
and
add
add
add
and
add
add
add
push
mov
push
ds
mov
cs
cld
repnz
mov
push
ds
mov
aam
inc
pop
inc
mov
into
daa
inc
sbb
sbb
inc
sbb
push
rolb
sub
sbb
xor
sbb
inc
sub
scas
into
into
into
into
into
faddl
lahf
cs
cs
dec
aas
lcall
cs
adc
dec
xor
repz
dec
lods
inc
sub
inc
mov
je
inc
mov
leave
xor
cs
cmp
cs
enter
pop
aad
das
add
sbb
aad
fidivs
ljmp
cmpsb
cmp
dec
inc
sub
dec
cs
stos
xor
cs
xor
xchg
inc
sub
test
out
fwait
lods
inc
or
sar
inc
lret
je
xor
dec
push
enter
xor
cs
mov
icebp
xor
sbb
mov
inc
or
jmp
cs
mov
and
inc
ret
adc
and
xor
xor
add
les
cs
in
loop
loop
sub
mov
xchg
cs
mov
cs
xor
cs
fisubs
xor
daa
test
out
sbb
xor
xor
xchg
daa
addl
xor
cs
and
cs
sbb
push
fs
idiv
or
cs
sbb
push
inc
inc
sbb
inc
enter
iret
inc
enter
xlat
inc
enter
filds
out
in
loopne
incb
cs
ds
rcr
cmpsb
cmp
mov
xor
xor
inc
or
ljmp
push
inc
mov
mov
xor
roll
ljmp
inc
or
xor
xor
sbb
mov
mov
xor
loopne,pt
ds
cs
cs
movl
xor
cs
enter
scas
inc
or
cs
mov
xor
divl
xor
xor
enter
adc
xor
inc
sub
scas
scas
add
out
xor
cs
or
cs
mov
inc
enter
out
and
adc
xor
or
xor
lahf
lea
cs
out
mov
mov
add
jns
cs
call
mov
lret
lahf
mov
cs
mov
clc
out
add
ljmp
or
lcall
xor
xor
sub
sar
lret
add
inc
enter
xor
daa
inc
mov
mov
sbb
fdivrs
andl
inc
sub
dec
fwait
shld
dec
xor
sub
cs
inc
fsubrs
sbb
test
pop
inc
xchg
inc
fadds
sub
mov
mov
cs
xor
adc
mov
cmc
fiaddl
pop
movsb
sbb
testl
xchg
out
inc
sbb
ljmp
scas
mov
ss
pushl
add
xor
mov
or
test
xor
adc
inc
jbe
mov
jbe
movsb
jbe
adc
inc
push
sub
cmc
ds
jbe
inc
lds
cs
inc
dec
ret
mov
pop
inc
loope
cs
mov
cmp
xor
cs
dec
push
jbe
mov
add
add
outsb
test
cli
sbb
xor
xor
jbe
mov
inc
pop
rolb
inc
mov
mov
into
ss
inc
inc
into
ds
inc
inc
shlb
sub
sub
dec
popf
rcrb
mov
mov
cs
push
inc
inc
scas
xchg
mov
shll
inc
cs
inc
mov
ficoms
call
inc
mov
inc
mov
add
mov
cs
call
dec
mov
sub
and
pop
xor
cs
call
divb
cs
call
inc
scas
mov
mov
scas
inc
inc
mov
dec
enter
dec
inc
mov
inc
mov
inc
sbb
dec
enter
pop
push
fs
cs
mov
inc
ds
mov
inc
cs
mov
shrb
fsubs
inc
push
add
sub
cs
das
aas
cs
into
sub
daa
inc
sub
inc
mov
mov
push
mov
mov
cli
mov
jmp
cs
inc
mov
inc
pushl
pop
cs
mov
mov
sub
inc
push
scas
inc
mov
call
fs
sub
shld
inc
sub
inc
push
scas
inc
mov
call
fs
sub
cmovne
inc
sbb
xchg
scas
dec
fmul
decl
cs
sub
ds
pop
add
xchg
scas
add
fcoms
fs
sbb
into
xchg
scas
dec
pop
push
sub
fs
sub
xor
mov
inc
mov
movsb
mov
mov
enter
push
cmp
add
sub
dec
mov
outsb
cs
pop
movsb
and
cs
sub
int
mov
mov
into
mov
aam
aas
call
mov
out
stos
xchg
xor
movsb
cmovl
xchg
cs
and
adc
inc
mov
mov
cs
mov
inc
scas
scas
decb
cs
into
push
add
mov
cs
inc
mov
aam
into
push
inc
mov
aaa
jne
cs
mov
aaa
gs
enter
sbb
cli
mov
dec
mov
xor
sub
dec
into
fiaddl
scas
inc
call
sub
cs
mov
inc
scas
scas
aam
sub
daa
inc
scas
scas
cs
cs
call
sub
pop
inc
sub
inc
mov
sbb
sub
daa
sub
lahf
into
inc
mov
sub
inc
scas
xchg
sub
or
and
daa
inc
scas
scas
cs
cs
sub
in
mov
inc
pop
xor
mov
inc
sub
cs
inc
mov
inc
mov
mov
dec
shr
cli
inc
enter
ret
cli
inc
enter
ja
enter
inc
cli
inc
enter
daa
fiaddl
cli
inc
sbb
paddusb
inc
sbb
sub
cs
sub
inc
sub
and
inc
sub
pop
cli
inc
mov
inc
mov
inc
mov
inc
mov
cli
inc
mov
inc
mov
dec
ret
inc
enter
and
inc
enter
cli
inc
enter
pop
cli
inc
enter
sub
mov
inc
enter
jne
inc
mov
cs
inc
enter
sub
and
cli
inc
enter
sub
mov
inc
and
cli
inc
sub
sub
cld
stc
cs
or
cli
inc
enter
ret
cld
cmp
sub
add
inc
sub
fdivs
jnp
cs
dec
cmp
sub
mov
inc
mov
sub
sub
pop
dec
fcomps
sub
cs
dec
cmp
add
dec
mov
outsb
inc
scas
inc
sub
sub
out
mov
sub
test
sub
and
pop
and
mov
cs
mov
inc
mov
inc
enter
inc
dec
inc
scas
ss
pop
cmp
sbb
mov
jmp
mov
cs
cmpsb
inc
mov
scas
push
movsb
inc
mov
sub
inc
scas
xchg
xor
outsb
sbb
outsb
inc
rcrb
sub
xor
cs
das
mov
ds
mov
jb
cs
cmp
scas
dec
cmp
cs
mov
mov
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
push
cs
inc
cmp
sub
dec
cs
inc
cmp
sub
outsl
cs
inc
cmp
sub
jge
cs
inc
cmp
sub
sub
cs
inc
imul
mov
sub
sub
sub
inc
mov
sub
cs
cmp
dec
cmp
sub
xor
out
sub
mov
sub
sub
pop
cmp
bound
push
clc
jne,pn
bound
xchg
jmp
mov
js
cs
jmp
and
sbb
mov
cs
into
inc
mov
mov
inc
mov
inc
mov
sbb
cs
into
inc
mov
sub
sub
pop
inc
inc
inc
dec
inc
enter
incl
dec
enter
enter
xor
shrb
data16
inc
mov
cs
into
inc
mov
sub
sub
scas
cmp
daa
cs
js
fsubs
enter
inc
mov
enter
inc
enter
xor
inc
enter
int3
into
adc
add
inc
mov
xor
inc
push
jle
aas
outsl
cs
xor
test
testl
mov
cs
roll
inc
fmuls
push
out
dec
sarb
inc
fdivr
inc
fmuls
inc
fmuls
inc
fdivr
dec
popf
push
inc
fsubr
xor
sub
fmul
inc
fsubr
mov
inc
xor
xchg
and
or
inc
push
xor
iret
xor
xor
push
push
inc
sub
inc
inc
xor
xor
iret
inc
fsubs
cmpsb
push
inc
enter
xlat
xor
enter
inc
fcoms
xor
pop
inc
fadds
movsb
dec
ja
cs
xor
pop
inc
shlb
inc
fcoms
inc
enter
dec
cmp
sub
out
inc
enter
xor
shrb
outsb
sub
xor
add
into
inc
mov
sub
sub
outsb
inc
das
xor
cs
daa
inc
enter
inc
mov
xor
cs
cs
cs
pop
mov
sub
sub
mov
inc
mov
inc
mov
inc
mov
nop
dec
mov
insb
inc
xchg
inc
mov
push
pushf
into
inc
mov
adc
inc
nop
inc
ds
push
test
xor
inc
dec
in
ljmp
inc
pop
inc
scas
ss
fimull
xor
cs
dec
aaa
sub
cs
dec
aaa
sbb
cs
xor
cs
cs
cs
dec
aaa
fldt
cs
adc
lds
cs
ret
test
xor
dec
popf
into
inc
inc
enter
mov
aaa
mov
cs
mov
ljmp
fdivrl
nop
push
sub
push
xor
dec
popf
and
popf
loop
xor
push
add
push
inc
enter
push
mov
inc
xor
lret
xor
dec
popf
and
popf
loopne
xor
push
test
push
inc
sub
inc
sub
inc
lods
cmp
divl
data16
popf
and
popf
loopne
sub
daa
ds
mov
dec
popf
and
popf
loop
inc
enter
pop
xor
inc
enter
pop
adc
enter
into
dec
dec
popf
push
inc
sub
ds
inc
enter
cmovl
lock
xchg
scas
scas
add
shll
push
inc
les
ficoml
nop
dec
aaa
sub
cs
mov
cs
das
das
cs
mov
scas
add
cs
fdivrs
dec
inc
dec
inc
enter
xor
dec
dec
aaa
lods
cs
and
and
pop
movsb
mov
inc
mov
xor
xor
mov
fisubrl
cmp
scas
fisubrl
pop
cmp
pop
pushl
cs
scas
sub
pop
aas
push
cs
sub
xchg
scas
inc
mov
rolb
inc
fadds
xchg
sarl
push
xor
inc
dec
inc
cmp
rcll
and
scas
dec
popf
rcl
sbb
sub
inc
fdivrs
inc
les
into
sub
cmp
daa
add
mov
mov
xor
sahf
xor
xor
fdivrs
inc
enter
add
scas
mov
push
scas
add
shll
xor
sbb
xchg
scas
shll
mov
cmp
in
xor
test
mov
into
ss
fcoms
cmp
push
loopne
inc
fcoms
xor
push
mov
ds
sbb
inc
fmuls
inc
fsubs
dec
popf
push
inc
adc
sub
and
cmp
dec
xor
xor
xor
enter
inc
fcoms
xor
pop
inc
sbb
movsb
xchg
mov
adc
xor
inc
into
ss
fcoms
cmp
sbb
scas
shll
dec
inc
scas
ss
cs
fmull
cs
fadds
rorl
cs
ds
scas
scas
add
adc
xor
ds
mov
xor
ds
lret
sub
call
inc
enter
sbb
inc
sub
xchg
roll
mov
add
movsb
lret
ss
popf
inc
mov
mov
sub
movsb
sub
lret
es
movsb
and
inc
mov
sbb
mov
mov
inc
scas
pop
sub
push
dec
cs
dec
inc
scas
scas
fsubrl
push
dec
sub
dec
inc
shrb
pop
inc
mov
cmp
pop
inc
mov
enter
pop
dec
xor
sub
in
ljmp
inc
pop
xor
ds
xchg
sub
sub
mov
sub
test
sub
and
mov
cs
int
aaa
sub
cs
sbb
cs
or
cs
mov
xor
cs
and
loop
cmp
xor
cs
mov
xor
inc
mov
dec
aaa
shlb
cs
mov
inc
ds
mov
fiaddl
cmpsb
xor
inc
sbb
mov
cs
fiadds
push
cli
inc
mov
cli
inc
mov
mov
cli
inc
mov
call
inc
mov
inc
mov
rolb
pop
mov
adc
or
mov
push
adc
mov
adc
notb
clc
cli
mov
sub
scas
dec
fdivrs
ds
enter
inc
sub
mov
nop
inc
inc
inc
into
pop
inc
mov
push
inc
cs
mov
push
inc
inc
push
pop
inc
shll
pop
movsb
push
sbb
ss
fidivrl
push
inc
into
inc
xor
sahf
movsb
sub
scas
dec
enter
enter
mov
mov
shrb
into
inc
mov
test
decl
mov
inc
sahf
inc
mov
sub
sbb
cs
sbb
xor
sbb
xchg
rorl
outsb
cli
movsb
lret
lock
mov
inc
dec
inc
mov
push
dec
inc
lret
mov
sbb
mov
xor
into
inc
mov
xor
into
call
ss
mov
cmp
push
pop
rolb
inc
xor
ds
scas
shlb
cs
mov
xor
inc
dec
popf
mov
adc
xor
sahf
sbb
enter
enter
mov
mov
rolb
pop
sub
into
cmp
cs
incl
scas
push
sub
fcmovu
dec
daa
sub
adc
inc
lret
inc
adc
scas
push
repnz
sub
inc
xor
sahf
sbb
mov
dec
enter
sbb
inc
enter
fsubrl
jle
mov
xor
xor
sub
cmpsb
sub
sahf
pop
mov
cli
inc
fsubrl
xor
cs
fildl
inc
mov
inc
xor
mov
scas
in
in
mov
fadds
dec
popf
sarb
dec
popf
mov
aam
xchg
sub
cmp
push
insb
inc
mov
mov
inc
fidivrs
xor
xor
mov
xor
and
icebp
xchg
scas
in
in
mov
fadds
xor
pop
sub
sub
cs
inc
mov
cli
inc
mov
sub
fiaddl
ds
inc
mov
fdivr
inc
mov
aaa
test
cs
aaa
jo
cs
mov
xor
mov
add
sub
inc
call
xor
cs
aaa
lahf
cs
sub
xchg
pop
dec
popf
cmpsl
sub
ret
inc
sub
inc
sub
xchg
pop
dec
popf
cmpsl
and
ret
inc
sub
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
movsb
sub
sbb
xor
inc
xor
ds
sub
xchg
pop
cli
xor
cs
cmp
sub
xchg
pop
cli
inc
cmpsl
sub
ret
inc
jecxz
test
sub
cs
movsb
sub
insb
inc
sub
xchg
pop
inc
mov
push
out
cs
test
movsb
mov
add
in
ljmp
inc
pop
sar
inc
fisubrl
cli
test
stos
mov
cs
xchg
lret
stos
sub
cs
sub
sub
push
call
shrl
mov
sub
cs
movsb
lds
xor
fsubs
dec
fdivl
xchg
fildl
xchg
sub
inc
inc
push
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
in
and
or
xchg
lret
dec
aaa
mov
ljmp
fcmovu
mov
sub
sub
sub
cmp
nop
xchg
in
cmpsb
dec
push
lock
mov
sub
cs
inc
movsl
mov
cs
test
cs
xchg
mov
mov
cs
movsb
mov
xor
sbb
dec
adc
xchg
adc
xchg
rorl
fsub
ret
inc
pop
das
add
das
and
mov
or
xchg
mov
sar
inc
mov
inc
mov
fadds
rcr
mov
sub
sub
sub
mov
cli
test
mov
cli
xchg
ret
mov
cli
movsb
ret
push
fmull
mov
lods
mov
sub
cs
movsb
lds
xor
sbb
dec
adc
xchg
sbb
cli
inc
inc
into
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
or
push
cmp
scas
ljmp
inc
mov
fimull
shrl
sub
cs
cs
fsubs
cli
movsb
mov
test
xor
mov
xor
cmpsb
dec
inc
int
mov
xchg
sub
cli
movsb
pop
sbb
xchg
scas
in
cli
inc
xor
daa
ljmp
pop
inc
mov
rolb
cmp
ds
dec
inc
enter
dec
inc
inc
aas
ds
fadds
inc
mov
rolb
cmp
ds
inc
mov
call
inc
pop
xor
mov
sub
or
pop
mov
xchg
adc
xor
movsb
sbb
xor
aam
inc
mov
inc
mov
mov
cmp
mov
mov
cmp
mov
mov
cmovl
dec
cs
mov
mov
mov
jecxz
sub
sub
cmovno
cli
inc
mov
xchg
loope
mov
aaa
pop
out
cs
call
jecxz
rcrl
inc
call
loope
push
out
cs
call
mov
js
cs
aad
mov
fcoms
dec
lea
mov
xchg
mov
rorl
dec
mov
cs
mov
mov
cs
mov
mov
cmp
cmp
call
stos
scas
das
adc
das
mov
xchg
filds
daa
xchg
mov
xchg
cmp
insb
movsb
sbb
xor
sub
mov
fadds
xor
pop
sub
cmovno
daa
inc
enter
daa
das
adc
inc
enter
mov
ds
dec
inc
enter
mov
mov
aas
ds
enter
mov
shll
xchg
aam
sub
inc
mov
daa
or
out
lods
mov
js
xor
out
and
jg
cs
mov
and
out
mov
mov
sub
sub
mull
or
fidivs
cs
pop
xchg
sbb
bsr
sub
or
xor
cs
mov
mov
unpcklps
inc
mov
pop
xchg
in
ss
dec
fwait
scas
mov
inc
mov
xchg
cmp
mov
xchg
mov
cmp
lds
cmovne
movsb
mov
mov
pop
xchg
mov
mov
cmovne
lret
test
xlat
inc
mov
pop
xchg
in
ss
aas
mov
inc
enter
dec
pop
das
adc
das
mov
xchg
mov
mov
iret
test
inc
enter
xor
inc
mov
into
add
inc
enter
xor
inc
inc
enter
iret
inc
mov
cmp
sub
inc
enter
dec
aaa
xor
enter
dec
pop
das
adc
das
mov
dec
fwait
roll
test
int
lds
cmovl
dec
xor
inc
mov
mov
lea
inc
enter
pop
xchg
mov
mov
cs
mov
pop
or
lret
sub
xchg
mov
dec
dec
cmp
enter
pop
xchg
mov
mov
cs
mov
pop
or
and
sub
inc
mov
int
aaa
mov
cs
mov
pop
or
subb
sub
mov
fadds
xor
pop
sub
or
daa
inc
enter
pop
mov
sub
pop
or
iret
sbb
xlat
pop
or
fists
mov
sub
or
divl
mov
sub
inc
mov
inc
enter
mov
xchg
mov
cs
xor
xchg
rcrl
xchg
lret
xor
inc
mov
xor
inc
call
cs
enter
inc
xchg
mov
inc
enter
pop
inc
mov
filds
daa
xchg
lret
xchg
mov
daa
xchg
lret
test
dec
inc
push
mov
movsb
mov
cs
mov
xchg
mov
xor
xchg
rcrl
xchg
fildl
inc
mov
mov
mov
inc
fdivr
inc
mov
filds
daa
xchg
mov
inc
mov
mov
enter
xchg
fildl
sbb
xchg
mov
test
inc
enter
daa
xchg
mov
test
movsb
rcrl
pop
inc
mov
filds
daa
xchg
mov
xor
movsb
iret
adc
inc
mov
lds
adc
inc
mov
lds
mov
fists
dec
mov
movsb
mov
push
mov
filds
call
mov
xor
sar
mulb
sub
xchg
mov
sub
inc
mov
mov
daa
dec
xor
xchg
mov
sub
daa
xor
pop
xchg
mov
pop
dec
xor
in
ljmp
pop
xor
movaps
pop
daa
or
mov
sub
mov
cmp
iret
jo
ds
lods
mov
sbb
mov
sub
or
pop
leave
or
pop
xchg
lret
xor
sbb
xchg
mov
inc
mov
mov
call
mov
mov
xor
xor
cs
sub
jmp
sub
xor
cs
mov
mov
sub
sub
mov
sub
inc
enter
xor
aas
enter
daa
inc
mov
cs
enter
xor
dec
lea
enter
cmovne
call
sbb
dec
fcoms
in
das
mov
xor
aas
enter
daa
dec
fcoms
xor
dec
lea
test
add
dec
fcoms
test
test
aas
fcoms
out
inc
fcoms
mov
mov
rol
aas
fcoms
daa
inc
fsubs
xchg
lret
xor
dec
lea
dec
iret
inc
push
bound
daa
xchg
lret
xor
dec
lea
enter
push
xchg
lret
xor
dec
lea
enter
xor
dec
lea
mov
xchg
mov
js
cs
mov
pop
cmp
mov
sub
xor
pop
leave
or
sub
or
sub
inc
mov
lret
dec
aaa
mov
cs
mov
jmp
cmp
ljmp
pop
xor
xor
fiaddl
cmp
sbb
xchg
scas
add
cmp
lcall
sub
inc
pushf
inc
filds
incl
sbb
pop
sub
sub
inc
dec
cmp
sub
sub
dec
cmp
sub
pop
sub
dec
inc
lcall
in
in
shll
add
xor
xor
cs
scas
cmp
push
nop
inc
push
add
sar
inc
push
mov
scas
inc
push
ds
rcrl
pop
xchg
sar
inc
mov
dec
cmp
sub
ds
sub
ss
inc
mov
xor
fcmovu
dec
aaa
lea
cs
cs
popf
scas
outsb
inc
mov
shll
pop
lahf
mov
cs
mov
cs
enter
daa
cs
roll
in
cli
movsb
enter
dec
xchg
shrl
sub
popf
enter
inc
dec
inc
inc
cli
mov
dec
popf
inc
lods
sub
cs
movsb
int
inc
inc
call
das
cmpsb
insb
cs
mov
ds
popf
and
dec
stos
cmpsb
insb
movsl
mov
cs
test
movsb
int
push
add
sub
enter
enter
add
add
inc
sbb
dec
popf
ret
das
cmpsb
nop
cs
push
mov
sub
sub
in
ljmp
enter
shrl
sub
xchg
scas
cli
movsb
enter
scas
add
xor
pop
inc
mov
sbb
scas
add
xchg
sbb
movb
inc
fsubl
mov
dec
cmp
inc
mov
cs
mov
cs
mov
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
cs
inc
mov
iret
sub
cmp
cs
mov
push
xor
xor
inc
sub
lret
fisubrl
ljmp
inc
sub
mov
pop
inc
fdiv
inc
sub
movsb
and
pop
xchg
in
call
sbb
add
inc
sub
dec
popf
cmpsb
in
movsb
ljmp
adc
inc
data16
ds
cmpsb
mov
fmuls
test
ds
cs
fsub
inc
fsubs
xor
inc
mov
aam
sbb
enter
push
cmp
daa
inc
sahf
inc
mov
ss
inc
call
jmp
in
shll
inc
mov
sub
xor
inc
xchg
shll
mov
inc
dec
xlat
xor
cs
push
cwtl
mov
cmp
inc
xor
xor
movsl
sub
cs
movsb
mov
out
xchg
scas
cli
inc
xor
xlat
xor
cs
faddl
inc
cmp
xor
cs
ds
add
das
mov
aas
ds
mov
inc
das
and
or
cmp
xor
cs
in
mov
inc
pop
xor
cs
ss
mov
push
inc
roll
xor
outsb
xor
roll
int3
sbb
inc
inc
cmp
daa
sub
xor
cs
fwait
inc
xchg
mov
cs
ds
aaa
dec
cs
sub
std
sbb
fadds
xor
push
inc
scas
ss
ds
loopne
xor
inc
aam
inc
mov
inc
xor
inc
call
cmp
sahf
dec
mov
mov
mov
cmp
pop
inc
mov
enter
movsb
mov
xor
fsubrl
add
inc
sbb
mov
mov
sub
outsb
inc
enter
inc
test
inc
push
dec
xor
movsb
lret
adc
test
pop
add
add
sub
scas
into
pushl
clc
imull
mov
sub
sub
mov
sub
inc
mov
mov
cs
aas
mov
inc
mov
cs
fcoms
xchg
fnsave
dec
roll
pop
scas
aas
enter
pop
inc
fdiv
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
scas
dec
fsubrs
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
scas
inc
fcomp
inc
fcoms
xchg
fnsave
dec
roll
pop
scas
inc
enter
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
scas
sub
inc
enter
xor
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
scas
sub
enter
dec
aaa
xor
mov
mov
cs
ds
scas
call
sub
push
ds
xor
add
sbb
dec
mov
adc
inc
scas
mov
scas
push
dec
add
add
enter
iret
add
cs
mov
sub
mov
sub
mov
mov
call
add
cs
fcoms
xchg
fnsave
dec
roll
pop
xchg
enter
pop
inc
fmul
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
xchg
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
xchg
out
fcoms
xchg
fnsave
dec
roll
pop
xchg
out
push
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
xchg
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
xchg
inc
inc
enter
dec
aaa
xor
mov
mov
cs
ds
cmpsl
inc
mov
into
inc
mov
into
jmp
sub
inc
scas
mov
scas
push
push
inc
enter
add
sub
iret
add
cmpsl
xor
mov
xor
ds
sub
mov
sub
inc
enter
xor
aas
enter
pop
inc
call
inc
mov
movsb
enter
add
cs
fcoms
xchg
fnsave
dec
roll
xor
enter
pop
inc
fadd
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
inc
mov
cs
rorl
xor
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
inc
mov
cs
shll
inc
fsub
inc
fcoms
xchg
fnsave
dec
roll
xor
out
push
inc
enter
xor
dec
push
mov
cs
ret
sub
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
fcoms
xchg
fisttpll
mov
cs
dec
ret
sub
inc
enter
dec
addr16
mov
cs
in
xchg
in
dec
inc
mov
movsb
enter
pop
sub
lahf
inc
enter
add
sub
inc
jmp
enter
dec
xor
xor
pop
inc
call
movsb
mov
and
mov
mov
fadds
rcl
inc
mov
mov
cs
sub
inc
mov
aam
pop
inc
mov
inc
ds
mov
inc
cs
cmpsb
inc
enter
scas
inc
rclb
mov
cs
sub
cs
mov
cmp
mov
sbb
call
and
inc
mov
push
ds
mov
inc
xor
daa
shll
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
mov
mov
mov
mov
mov
mov
mov
ret
movl
movl
movl
movl
mov
ret
push
mov
sub
mov
mov
add
mov
cmp
movzbl
movzwl
adc
mov
movzwl
mov
sub
mov
leave
ret
push
mov
sub
mov
mov
and
mov
mov
and
movzbl
mov
add
leave
ret
push
mov
sub
mov
mov
add
mov
mov
mov
xor
mov
test
mov
mov
sbb
mov
leave
ret
push
push
movl
call
cmp
je
push
mov
cmp
jae
test
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
div
lea
mov
jmp
test
jne
mov
jmp
dec
mov
cmp
jne
pop
ret
push
mov
sub
movl
movl
movl
cmpl
jg
mov
mov
addb
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
orb
mov
mov
mov
mov
lea
mov
mov
mov
xor
mov
xor
push
mov
add
mov
cmp
lea
mov
mov
mov
adc
mov
mov
mov
push
movzwl
and
mov
pop
sub
add
cmpl
mov
mov
pop
jne
mov
xor
add
leave
ret
push
mov
sub
movl
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
cmpl
jle
xor
mov
add
mov
movl
mov
xor
add
mov
mov
add
mov
mov
lea
push
mov
xor
add
mov
push
pushl
add
pushl
push
push
mov
mov
pushl
pushl
call
add
leave
ret
push
mov
push
push
mov
movl
movl
cmp
je
cmpl
jne
push
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
sub
mov
mov
movl
cmpl
jb
mov
mov
adc
mov
and
mov
mov
xor
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
mov
mov
mov
sub
mov
mov
mov
mov
mov
and
add
pop
mov
sub
mov
mov
mov
rorb
mov
mov
xor
mov
mov
xor
leave
ret
push
mov
sub
mov
mov
push
push
test
movzwl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
movl
cmpl
jl
movzwl
movzbl
and
mov
push
movl
mov
add
movl
mov
mov
mov
movzwl
or
mov
mov
xor
add
mov
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
movzwl
and
mov
lea
mov
lea
mov
cmp
jp
movzbl
and
mov
jmp
mov
sbb
mov
mov
or
mov
lea
mov
lea
mov
xor
mov
lea
mov
lea
mov
mov
shlb
lea
mov
lea
mov
mov
dec
mov
lea
mov
mov
mov
mov
add
mov
mov
mov
cmp
mov
sbb
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
movl
cmpl
jb
mov
mov
mov
mov
lea
lea
subl
andl
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
lea
add
mov
mov
lea
mov
mov
movzwl
or
mov
mov
mov
movl
mov
mov
mov
mov
and
mov
movl
mov
pushl
mov
push
push
lea
push
mov
mov
pushl
pushl
call
push
push
lea
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
pushl
xorl
pushl
call
movl
cmpl
jge
mov
mov
and
mov
mov
movzwl
adc
mov
mov
mov
mov
mov
xor
xor
lea
add
cmp
je
mov
mov
mov
mov
addb
xor
add
mov
sub
mov
mov
mov
mov
xor
add
mov
pop
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
cmpl
jbe
movl
movl
cmpl
jns
mov
shl
mov
jmp
mov
and
mov
mov
sub
mov
push
cmp
movzwl
sbb
push
mov
xor
mov
add
mov
movl
call
test
je
call
mov
mov
xor
add
mov
mov
mov
add
mov
mov
movl
cmp
mov
sar
mov
mov
movl
mov
mov
xor
add
mov
mov
mov
xor
mov
add
mov
cmp
je
mov
cmp
jle
mov
sub
jmp
mov
mov
xor
mov
mov
orb
xor
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
movl
cmpl
jl
mov
mov
sbb
movzwl
xor
mov
mov
rcrb
mov
mov
mov
mov
xor
add
cmp
jne
movzbl
movzbl
xor
add
add
movzwl
rcl
mov
mov
mov
movzbl
xor
add
subl
xorl
sbbl
imul
movzbl
sub
jmp
mov
movzbl
xor
sub
sub
mov
mov
test
movzwl
adc
mov
xor
add
ror
mov
mov
movl
cmpl
jle
mov
xor
add
imul
xor
add
imul
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
and
mov
xor
add
imul
incb
cmpl
jae
movzwl
mov
xor
mov
jmp
mov
movzwl
sub
mov
mov
mov
or
mov
mov
mov
xor
add
imul
add
test
movzwl
adc
mov
mov
xor
add
imul
cmpl
jle
mov
sbb
jmp
mov
sub
mov
mov
neg
mov
decb
mov
mov
xor
lea
xor
xor
mov
add
cmp
jne
movl
cmpl
ja
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
push
pop
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
test
jne
movl
cmpl
je
mov
mov
addb
mov
xor
add
mov
inc
cmp
jb
push
movl
addl
subl
push
push
push
xor
call
test
jne
mov
mov
cmp
jne
call
mov
mov
mov
sub
mov
mov
mov
xor
lea
mov
cmp
lea
mov
mov
mov
sbb
mov
mov
xor
mov
add
mov
inc
movzwl
xor
mov
cmp
jne
test
je
push
pop
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sub
sub
mov
xor
cmp
sbbl
add
mov
dec
jne
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
movl
movl
movl
movl
movl
mov
mov
movl
test
xorl
adcl
call
test
je
push
push
push
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
movl
cmpl
jge
mov
mov
or
mov
mov
add
movzbl
movzbl
or
mov
mov
mov
add
jmp
cmp
jne
lea
mov
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
xor
xor
sub
sub
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
push
push
movl
movl
mov
xor
movl
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
ja
mov
adc
mov
and
mov
mov
mov
add
mov
mov
mov
pushl
mov
mov
pushl
movl
xorl
lea
push
call
call
test
je
mov
mov
sub
mov
addl
jmp
mov
mov
or
mov
mov
mov
mov
lea
mov
sub
mov
mov
mov
cmp
mov
sbb
add
mov
mov
mov
mov
mov
leave
ret
push
mov
sub
mov
movl
movl
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
push
movl
cmpl
jg
mov
push
mov
push
lea
mov
pushl
pushl
call
mov
mov
addb
mov
mov
xor
mov
xor
mov
add
cmp
je
mov
jmp
push
pushl
push
pushl
call
mov
mov
and
mov
lea
mov
mov
mov
mov
xor
add
mov
xor
mov
mov
and
mov
pop
add
pop
pop
leave
ret
push
mov
sub
push
push
cmp
adcl
xorl
sbbl
movl
lea
movl
push
subl
orl
addl
mov
call
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
movl
cmpl
jbe
mov
mov
sub
mov
lea
mov
mov
mov
add
movl
mov
cmp
mov
mov
adc
mov
mov
mov
test
jne
mov
mov
cmpl
je
push
push
add
push
pushl
pushl
call
add
mov
mov
test
je
movl
mov
jmp
cmp
je
mov
mov
xor
xor
xor
add
lea
div
push
push
shl
mov
call
movzbl
rcr
mov
pop
pop
test
je
movl
cmpl
jle
mov
mov
and
mov
pushl
push
push
push
push
pushl
pushl
call
add
mov
movl
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
mov
push
pushl
mov
call
mov
jmp
cmp
jne
mov
mov
push
push
push
push
push
andl
pushl
call
add
test
mov
sbbb
mov
mov
dec
movl
cmpl
jbe
test
movzbl
adc
mov
xor
mov
xor
mov
add
jne
mov
movzbl
xor
mov
mov
mov
xor
xor
xor
add
add
div
shl
mov
pushl
pushl
call
lea
xor
mov
mov
cmp
movzwl
sbb
push
xor
mov
or
pop
div
cmp
jbe
mov
orb
mov
xor
inc
cmp
sbbl
xor
mov
cmp
jne
pop
xor
pop
inc
pop
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
xor
add
leave
ret
push
mov
push
mov
push
movl
cmpl
jg
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
pop
div
cmp
je
cmp
je
push
xor
mov
movzbl
add
mov
pop
div
cmp
jae
cmp
je
push
xor
cmp
lea
mov
mov
mov
sbb
mov
pop
div
cmp
ja
cmp
je
xor
add
mov
or
mov
mov
div
cmp
je
cmp
jne
movl
cmpl
jl
mov
mov
and
mov
mov
mov
mov
add
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
mov
mov
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jb
mov
mov
add
mov
mov
add
mov
jmp
movl
cmpl
jae
mov
mov
orb
mov
mov
mov
mov
add
mov
mov
add
mov
cmp
jne
mov
sar
mov
jmp
mov
sbb
mov
movzbl
dec
mov
mov
xor
inc
xor
cmp
jne
pop
pop
ret
push
mov
sub
push
push
call
cmp
jle
xor
leave
ret
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
mov
lea
cmp
adcl
call
movl
cmpl
ja
mov
movzbl
or
mov
movzwl
movzwl
adc
mov
mov
movzwl
sbb
mov
push
pop
cmpl
js
mov
mov
xor
mov
jmp
mov
mov
sbb
mov
mov
mov
sbb
push
mov
test
mov
mov
adc
pop
push
movzbl
mov
or
mov
pop
push
cmp
movzbl
mov
sbb
mov
mov
mov
mov
mov
pop
movzwl
mov
or
mov
push
mov
mov
pop
push
test
lea
mov
mov
mov
sbb
mov
mov
pop
push
mov
movzwl
mov
add
mov
pop
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
push
mov
sbbl
orl
mov
mov
xorl
addl
mov
mov
mov
movzwl
add
mov
pop
mov
mov
push
mov
movl
cmpl
jbe
mov
or
mov
mov
mov
mov
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
or
pop
push
mov
pop
push
mov
pop
mov
mov
xor
push
push
mov
mov
movzbl
add
lea
mov
push
xorl
sbbl
sbbl
mov
mov
mov
mov
call
add
lea
push
call
test
je
lea
lea
call
movl
cmpl
jbe
cmp
mov
sarb
xor
mov
call
mov
call
mov
call
mov
movl
subl
xorl
call
lea
mov
inc
mov
mov
mov
lea
call
mov
mov
add
mov
mov
call
mov
mov
call
mov
mov
mov
orb
mov
call
mov
cmp
mov
sbb
mov
call
mov
mov
call
call
pop
pop
test
je
call
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
pushl
call
cmpl
jb
cmpl
jle
movzbl
add
mov
jmp
mov
rorb
mov
mov
addb
mov
mov
mov
movl
cmpl
jge
mov
mov
xor
mov
mov
movzwl
sub
mov
mov
mov
add
mov
mov
jmp
push
call
push
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
movl
cmpl
jg
xor
mov
mov
movzwl
and
mov
incl
mov
mov
mov
or
mov
mov
shl
push
lea
mov
mov
mov
and
mov
mov
mov
cmp
mov
sbb
mov
shl
mov
mov
mov
shl
cmpl
jl
mov
add
jmp
mov
sub
mov
sub
mov
mov
mov
mov
or
mov
mov
shl
mov
mov
mov
sub
mov
mov
mov
mov
mov
cmpl
je
lea
mov
mov
mov
sbb
jmp
mov
mov
add
mov
mov
mov
imul
mov
mov
dec
not
and
mov
addl
andl
mov
lea
mov
mov
mov
mov
sub
mov
jmp
movzbl
shl
mov
mov
sub
mov
cmp
mov
sbb
mov
mov
mov
sub
xor
cmp
mov
jne
mov
pop
leave
ret
jmp
push
mov
sub
mov
mov
mov
mov
and
movl
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
jbe
mov
mov
adc
mov
movl
mov
mov
mov
push
push
cmp
mov
mov
sbb
mov
mov
mov
mov
mov
add
xor
xor
sub
mov
mov
movzwl
mov
xor
mov
mov
movl
mov
xor
mov
cmp
mov
adc
add
push
mov
movzbl
mov
xor
mov
mov
orl
mov
imul
mov
cmpl
jo
mov
movzwl
sbb
mov
jmp
movzbl
mov
add
mov
mov
mov
and
movl
addl
mov
mov
xor
lea
mov
or
mov
mov
mov
xor
mov
add
mov
rol
mov
mov
xor
movzwl
add
cmp
ja
movl
mov
cmp
mov
mov
sbb
add
movl
cmpl
jg
mov
and
mov
mov
mov
mov
cmp
sbbl
xor
mov
add
mov
movzwl
cmp
jne
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
xor
add
imul
mov
cmp
jb
mov
mov
xor
jmp
mov
and
mov
movzbl
xor
mov
mov
push
call
test
je
cmp
je
movzwl
adc
mov
jmp
lea
mov
mov
mov
sbb
mov
mov
sbb
mov
xor
add
movzwl
and
movzbl
push
mov
mov
xor
add
imul
mov
mov
call
test
jne
movzwl
mov
or
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
movzwl
push
movl
cmpl
je
mov
mov
call
test
jne
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
lea
mov
xor
xor
xor
xor
mov
cmp
adcl
xorl
lea
mov
add
movzwl
cmp
mov
jbe
jmp
mov
mov
add
mov
movl
mov
mov
xor
xor
lea
movl
cmpl
je
xor
mov
xorl
mov
mov
add
mov
mov
xor
add
imul
mov
or
mov
movzbl
mov
sub
xor
cmp
je
addl
mov
mov
cmp
je
andl
mov
xor
sub
add
mov
mov
imul
mov
jmp
mov
andl
xor
sub
add
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xor
add
cmp
je
addl
jmp
movl
cmpl
jl
movzwl
mov
xor
mov
mov
mov
xor
lea
mov
jmp
cmpl
js
mov
mov
add
mov
jmp
mov
mov
adc
mov
mov
mov
add
mov
orl
mov
imul
mov
mov
xor
cmpl
jg
mov
sar
mov
jmp
mov
or
movzbl
xor
add
xor
cmp
pop
pop
pop
je
mov
xor
add
mov
cmp
mov
jne
mov
xor
mov
sub
add
mov
mov
mov
mov
leave
ret
push
mov
sub
movl
movl
movl
movl
lea
mov
lea
mov
lea
mov
push
lea
push
mov
mov
mov
push
mov
movl
mov
not
mov
mov
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
add
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
cmp
xorl
sbbl
andl
call
mov
cmp
je
mov
cmpl
je
cmpl
jne
mov
jmp
cmp
je
movl
cmpl
jle
mov
add
xor
cmp
je
mov
cmp
jne
mov
xor
add
cmp
jb
mov
mov
mov
and
addl
mov
cmp
jae
mov
xor
mov
movzwl
mov
dec
cmp
ja
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
addl
mov
andl
movzbl
mov
sub
mov
mov
xor
mov
add
imul
movzwl
mov
cmp
movl
sbbl
andl
lea
push
mov
xor
add
mov
imul
mov
add
push
mov
sub
pushl
mov
call
cmpl
je
movl
cmpl
ja
mov
xor
inc
xor
mov
jmp
mov
mov
mov
add
xor
mov
mov
cmp
je
movzwl
mov
xor
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
add
mov
mov
imul
cmp
mov
movzwl
sbb
mov
mov
movl
cmpl
jb
mov
mov
and
mov
mov
sbb
mov
mov
mov
mov
mov
imul
xchg
dec
dec
cmp
jne
mov
mov
movzwl
movzwl
and
mov
mov
xor
cmp
lea
mov
mov
mov
sbb
lea
mov
add
mov
mov
add
dec
jne
jmp
mov
mov
call
mov
jmp
mov
mov
subb
xor
pop
pop
mov
mov
pop
leave
ret
push
xor
inc
mov
cmp
je
mov
cmp
jbe
dec
mov
jmp
test
sbbl
orl
addl
test
jne
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
xor
mov
div
lea
mov
cmp
jne
push
push
call
mov
add
cmp
jne
pop
ret
push
mov
push
mov
push
mov
lea
mov
mov
mov
xor
movl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
ja
mov
mov
sbb
mov
mov
or
mov
add
mov
push
mov
sub
lea
and
mov
mov
imul
imul
mov
lea
and
mov
or
xor
mov
mov
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
mov
xor
cmpl
jl
movzwl
sar
mov
jmp
mov
and
mov
mov
xor
xor
lea
xor
mov
cmp
mov
mov
adcb
imul
mov
and
mov
xor
add
mov
imul
lea
and
mov
or
cmp
jne
pop
pop
leave
ret
push
mov
sub
movl
mov
movl
cmpl
jae
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
push
mov
and
push
mov
xor
mov
add
cmp
je
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
cmpl
movl
movb
je
mov
mov
xor
add
mov
mov
xor
sub
mov
sub
sub
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
sub
mov
pushl
movl
cmpl
je
movzbl
and
mov
pushl
mov
mov
pushl
call
mov
mov
mov
xor
add
mov
mov
add
mov
mov
xor
add
mov
mov
jmp
test
mov
sar
mov
mov
xor
pop
add
pop
leave
ret
xor
outsl
outsb
dec
bound
inc
jns
inc
add
inc
jbe
add
jno
add
sub
js
dec
ss
aaa
add
push
sub
ja
pop
push
push
adc
xor
add
inc
add
inc
add
add
cs
sub
add
add
inc
add
add
inc
add
jo
add
add
add
add
add
add
add
add
push
jo
add
ljmp
add
or
cld
fdivrp
sti
cli
stc
clc
push
push
push
push
dec
call
inc
add
inc
add
add
addr16
xchg
nop
jo
add
jo
add
jno
add
jge
add
call
jne
add
jne
add
jne
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
add
add
add
add
std
std
xor
cli
push
std
hlt
sbb
icebp
cmp
into
std
dec
fsts
fcoms
idiv
ss
std
xor
cli
push
std
hlt
sbb
icebp
incb
std
into
std
dec
fldenv
fsubs
idiv
ss
std
decb
std
idiv
imul
std
dec
fnstenv
fdivs
sub
inc
aaa
push
ss
clc
xor
std
xor
stc
imul
cmp
repnz
std
icebp
flds
inc
sub
push
aaa
pusha
ss
xor
std
xor
stc
imul
incb
std
repnz
std
icebp
fsts
push
sub
pusha
aaa
jo
ja
incb
std
std
imul
idiv
outsb
std
repz
std
icebp
fldenv
bound
jno
jo
xorb
clc
incb
std
std
imul
idiv
sbb
hlt
std
repnz
fnstenv
jb
andl
xchg
clc
incb
std
std
imul
idiv
imul
iret
flds
daa
nop
aaa
mov
pop
std
std
imul
idiv
imul
std
icebp
fsts
daa
mov
clc
decb
std
std
sbb
cli
insl
std
stc
std
clc
fldenv
daa
mov
shlb
aaa
shlb
xlat
stc
cmp
std
adc
sti
decb
std
hlt
std
repnz
fld
fadd
sub
daa
shlb
loopne
out
incb
add
jno
add
jno
add
inc
add
add
jne
add
inc
add
add
add
aam
inc
add
fs
push
or
add
cmp
sbb
add
pop
jne
sbb
push
add
gs
push
add
inc
add
jne
push
add
add
inc
add
dec
add
add
add
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
sbb
inc
sbb
adc
add
add
add
add
imul
add
add
add
dec
add
add
add
add
jns
add
jns
add
imul
outsl
add
dec
add
inc
add
imul
add
add
add
cmp
inc
add
out
lcall
inc
add
out
call
add
out
pushl
inc
add
out
decl
and
push
std
incb
add
or
xchg
add
pop
add
pop
add
or
and
add
sbb
push
popa
insl
dec
insb
insb
push
imul
add
data16
std
imul
adc
stc
imul
idiv
push
std
cmc
std
hlt
fsts
fcoms
idiv
add
add
add
fs
bound
add
add
inc
add
push
add
pop
add
inc
add
push
add
push
add
add
add
popa
add
ja
jae
js
add
add
data16
add
add
jne
gs
xor
add
inc
push
imul
jne
imul
inc
imul
inc
dec
add
add
jbe
add
adc
xchg
or
add
jbe
jae
add
push
imul
inc
std
jle
incb
pop
idiv
mov
std
pop
mov
pop
sub
add
pop
inc
add
std
sbb
imul
std
sbb
adc
sub
sub
std
incb
add
std
sbb
adc
sub
sub
std
push
adc
std
sbb
insl
std
adc
std
decb
xor
inc
or
arpl
jae
orl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
jns
pop
xchg
xor
or
cmp
inc
xchg
out
shlb
push
jbe
gs
gs
aaa
pop
ja
sbb
xchg
xchg
test
arpl
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
add
add
and
xor
js
js
push
aaa
insb
dec
add
data16
cmp
push
add
cmp
jns
xor
cs
js
je
imul
and
xor
jae
push
bound
xor
push
fs
inc
add
pop
jo
outsl
js
jne
xor
push
ss
add
jbe
fs
and
push
and
push
and
jne
pop
addr16
aaa
jbe
push
push
xor
add
jb
dec
jae
and
jo
xor
push
dec
cmp
jb
insb
inc
cmp
outsl
and
dec
add
jo
dec
and
push
add
cmp
cmp
bound
xor
outsl
and
fs
arpl
xor
and
and
insb
and
inc
insl
dec
and
jbe
fs
add
ja
arpl
add
sub
jae
cmp
cmp
jne
xor
jne
je
xor
and
xor
push
xor
push
inc
bound
data16
addr16
and
inc
xor
dec
xor
dec
cmp
jp
pop
push
xor
and
add
data16
jae
pop
lds
add
add
add
add
aaa
add
add
iret
add
movsl
pop
pop
lcall
pop
mov
mov
imul
es
daa
call
add
xlat
das
mov
aaa
xor
out
push
add
inc
jmp
lds
int3
cmp
jb
and
xchg
popa
stos
jp
ja
mov
dec
cmpsb
notb
and
repnz
cmp
int
clc
sub
adc
push
mov
roll
add
stc
push
dec
mov
sarl
dec
data16
ret
cli
test
cmp
pusha
addr16
inc
pusha
add
lret
xchg
xlat
bound
push
add
push
add
mov
jmp
adc
sub
mov
test
mov
sti
stos
sbb
jne
fadd
inc
xchg
mov
loopne
xlat
add
sbbb
fs
lret
aaa
cmc
fsubr
mov
cwtl
mov
cmpsb
push
pop
movsb
pop
lods
divb
sahf
iret
mov
and
lock
cli
pop
jge
jb
adc
pop
ss
mov
mov
es
pop
fwait
or
inc
inc
movsb
xchg
xchg
add
jmp
mov
xchg
mov
sarl
jg
sub
sub
scas
fidivl
push
xchg
push
stos
jl
xor
push
orl
mov
add
adc
enter
pop
cli
out
add
xchg
lds
cmp
test
lds
adc
ljmp
jl
pop
daa
scas
iret
mov
aam
mov
mov
sbb
shlb
fiaddl
and
pop
cmpl
xchg
push
loope
mov
scas
and
xlat
or
and
mov
addb
mov
int
mov
xor
lock
xchg
push
xchg
test
cld
scas
stos
pop
pop
xchg
sbbb
rcll
test
adcl
mov
loopne
xor
data16
hlt
lods
sarb
orl
iret
mov
dec
push
pop
xchg
xor
xchg
in
inc
push
add
andb
je
inc
inc
pushl
out
mov
scas
push
test
dec
pop
add
xchg
pushf
jno
rcll
shr
xor
mov
jae
sbb
sub
leave
sub
xchg
mov
xor
out
std
and
mov
andb
or
jnp
xchg
mov
xchg
dec
aam
mov
mov
push
and
ret
test
rcrb
mov
sbb
or
and
jp
ret
in
xchg
popf
insl
fwait
cmp
add
xor
scas
insb
jo
mov
xchg
in
movsl
ficoml
subl
or
mov
sbb
mul
ret
icebp
loop
xor
outsb
lea
pop
and
pushf
fimull
pop
jmp
push
cmp
fwait
pop
mull
xor
pusha
lret
outsb
addr16
xchg
lahf
push
xchg
fadds
jmp
inc
adc
pop
xor
pop
test
or
pop
adc
movsl
jl
jge
push
inc
fimuls
test
clc
sbb
add
stc
lret
xchg
sbb
push
les
mov
stos
push
pop
gs
and
stos
icebp
xchg
enter
inc
dec
fsubl
sub
out
add
ja
dec
lea
mov
sub
mov
pop
lock
add
je
cltd
add
nop
sbb
and
lahf
orb
jl
and
mov
pop
mov
movsl
jne
push
inc
and
nop
mov
jl
fldt
sbb
rclb
fsubr
bound
add
jle
jge
sub
insl
les
sbb
sub
std
shlb
mov
out
das
mov
push
bound
sub
das
sbb
jge
pop
push
enter
clc
fcom
movsb
xor
aaa
imul
cmp
sub
pop
roll
xchg
dec
cmp
ror
stc
out
adc
push
mov
movsb
insl
mull
inc
jo
pop
je
loope
rcr
mov
cltd
mov
xorb
xchg
insl
out
adc
xchg
into
and
inc
dec
movsb
fcompl
dec
push
xchg
push
push
fs
mov
cmc
in
iret
fs
adc
dec
insb
and
and
push
lcall
ds
lcall
pushf
mov
sub
fildl
or
xor
ror
add
mov
mov
or
inc
cmp
jo
stc
out
ja
or
jno
rcrl
insl
push
das
imul
je
xchg
adc
addl
cmp
mov
and
xchg
loope
jns
shrb
push
mov
out
ja
loope
mov
aaa
loop
mov
call
repz
mov
pop
cmc
in
dec
pop
inc
icebp
lret
xchg
jae
imul
inc
mov
adc
scas
jbe
pop
sub
clc
xor
sbb
or
mov
xchg
mov
push
negb
out
add
sub
nop
mov
jp
cmp
mov
lea
js
scas
out
cli
add
mov
pushf
xchg
in
sbbb
jbe
mov
mov
out
scas
lds
xor
je
sub
xor
adc
push
cli
adc
lahf
aas
xor
cmp
lcall
ja
sub
jo
stos
lcall
call
rol
jecxz
jns
aas
sub
out
hlt
divl
lock
mov
xor
lods
xor
jae
jmp
inc
sbbb
fnstenv
mov
fdivp
mov
test
int
fimull
push
xor
mov
iret
inc
imul
insl
cmp
cli
outsb
lds
js
cmpb
loop
iret
clc
pop
inc
mov
inc
adc
push
aas
outsl
or
add
outsb
hlt
dec
jmp
jnp
pushf
or
mov
popf
scas
arpl
outsb
jb
add
pop
cs
aam
orl
test
cmp
cltd
inc
mov
dec
add
pop
xchg
lcall
jg
sub
std
hlt
and
xchg
mov
aas
pop
je
mov
jae
xor
loopne
aad
cli
sbb
adc
adc
and
jnp
cmp
movsl
push
call
xchg
sbb
jge
in
push
ljmp
jecxz
sub
fisttps
jecxz
sbb
xor
add
mov
pushf
push
jp
aas
imul
incl
mov
mov
cmpsl
adc
sub
aaa
jmp
divb
in
xchg
cmc
faddl
cmp
and
jg
xorl
shlb
pushf
stos
inc
inc
push
ds
imul
push
mov
push
mov
cmp
in
ret
out
xchg
pop
jae
xor
lock
jge
fstps
jle
add
movsb
sbb
jo
xor
test
add
push
sti
loope
mov
loope
push
adc
fisubrl
dec
mov
sub
imul
lock
repnz
inc
xor
insb
sbb
sbb
popa
pop
test
out
dec
mov
push
aam
xor
jg
pop
das
adc
cmp
js
or
jne
ja
sbb
in
adc
popa
jl
fsubl
and
imul
dec
sbb
hlt
push
in
sbb
mov
repnz
rcrl
mov
mov
mov
rcr
lcall
push
jecxz
jge
cmc
xchg
orb
cmpsb
test
sahf
xor
adc
movsl
xor
data16
inc
sub
mov
fildll
add
pop
imul
inc
in
xor
push
test
sbb
fadd
push
das
hlt
out
into
ljmp
pop
push
pop
cmp
jns
rcrl
add
pusha
loope
pushf
fdiv
sub
mov
int
jne
adc
cwtl
loope
lds
ss
xor
bnd
test
fcoms
pushl
ret
xchg
xchg
jbe
cld
xchg
sbb
adc
push
je
push
daa
pop
xchg
push
adc
aas
inc
mov
adc
cmp
mov
out
test
adc
mov
jbe
enter
jo
fisttps
push
inc
mov
pushf
cmp
mov
dec
test
mov
push
outsb
dec
cmp
push
jecxz
test
shr
adc
lcall
mov
je
pop
je
inc
mov
loopne
push
sar
fcoms
adc
push
or
int
pop
ja
js
lods
shlb
hlt
xchg
repz
rcr
sbbb
out
out
cwtl
xor
popf
fisttps
dec
push
ljmp
or
add
scas
shl
hlt
jne
jp
mov
je
inc
shlb
int
mov
stc
pop
sub
popa
cmpl
pop
sbb
jl
clc
push
sbb
fidivl
mov
dec
rolb
cmp
cmp
lahf
mov
ret
adc
in
lahf
orl
mov
jle
inc
xor
cld
adc
pop
cmp
es
in
and
int
or
mov
ljmp
out
pop
xchg
push
mov
dec
dec
in
push
sbb
pop
les
jmp
inc
movsb
sbb
pop
cmc
or
pusha
xchg
add
xchg
dec
xchg
cmp
push
pop
push
pop
fcomip
jne
dec
cmpsl
cmpsl
shr
fdivl
std
cmpsb
cwtl
xor
push
cli
add
jge
out
enter
shll
sub
rcr
ficomps
clc
in
cs
jmp
cmp
scas
dec
into
pop
insb
nop
jbe
jle
inc
iret
mov
test
mov
xchg
pusha
sbb
fwait
jl
and
cmp
jg
stos
shll
dec
push
cmp
cli
sub
dec
cmpsb
outsb
inc
in
data16
lahf
jp
hlt
mov
je
lds
sub
in
push
loope
xor
cmpsb
adc
mov
popf
xchg
jge
or
push
in
jmp
pop
dec
mov
jge
cmp
dec
test
push
sbb
les
push
dec
aaa
sahf
or
adc
sub
lods
loop
dec
push
js
sbb
lahf
xor
aam
out
xor
js
mov
sub
insl
xchg
out
sbb
scas
shrb
mov
add
xor
pop
or
rolb
sbb
inc
push
cwtl
imulb
std
xchg
adc
push
leave
dec
fnstcw
jne
mov
stc
idivb
inc
add
loop
rclb
leave
mov
scas
sub
mov
ret
sub
xchg
mov
lret
xor
aaa
fsubrl
lods
std
mov
pop
dec
les
not
jp
movsb
mov
inc
int3
leave
adc
ret
mov
xor
sbb
mov
scas
sbb
mov
dec
or
sub
mov
sbb
hlt
scas
ds
mov
jnp
popf
jge
xchg
mov
push
aaa
dec
imul
subb
and
lds
pop
and
mov
push
repnz
and
shr
lret
js
aas
mov
push
jp
xchg
stos
pop
lods
mov
mov
sti
adc
pop
jne
adc
ret
nop
aam
outsl
bts
and
popf
adc
outsl
mov
bound
mov
or
sbb
lret
mov
or
or
dec
cmp
push
sub
sbb
shll
sbb
add
pop
lds
jbe
dec
push
cmpsb
jp
inc
testb
test
scas
push
ja
xchg
aam
pusha
xchg
lock
xor
sbb
push
cmp
push
out
sti
xor
les
lock
fcomps
and
shrl
pop
sbb
fbld
ja
mov
scas
sarb
cmp
pop
into
iret
bnd
mov
mov
pop
sbb
pop
inc
fimuls
mov
push
push
ret
fcoml
cmc
cmp
push
outsl
andb
xlat
sbbl
mov
mov
jecxz
lea
push
xor
pop
add
loope
sbb
dec
stc
adc
fucomip
xlat
jbe
shrl
in
jg
jns
jo
cltd
mov
mov
aam
mov
lea
lahf
pusha
incl
adc
outsb
jle
pop
popf
scas
scas
sbb
pop
xor
push
mov
mov
and
mov
outsl
add
nop
iret
mov
repnz
lret
das
in
daa
adc
jo
and
jmp
add
xchg
out
out
out
push
mov
xor
mov
imul
mov
ret
and
push
dec
or
mov
inc
inc
push
sbb
cmpsb
dec
sbb
fmull
add
jp
popa
mov
dec
xchg
jnp
push
inc
jb
les
jbe
test
ds
cmp
sub
fnstenv
fists
mov
je
arpl
mov
sbbl
dec
arpl
xchg
je
int
das
gs
jno
dec
nop
cmp
pop
icebp
icebp
testb
mov
add
ret
or
addr16
xchg
sub
das
cwtl
inc
repnz
popf
mov
cmp
repz
push
pop
adc
dec
mov
loop
sub
adc
push
test
in
push
push
das
clc
test
push
int
adc
mov
cmpsb
dec
sbb
push
sahf
int
int
sbb
push
mov
push
jbe
xchg
aas
imul
jns
stos
push
neg
insl
inc
pop
xchg
lds
cwtl
push
ja
inc
lret
sub
shrb
mov
mov
or
and
ljmp
mov
sahf
jne
in
cwtl
and
call
jbe
push
inc
les
std
and
movsb
push
xlat
cmp
and
out
movsb
push
cmpsb
mov
dec
hlt
sbb
fmull
mov
cmp
mov
xchg
jns
fld1
aad
sub
dec
mov
pop
push
jnp
inc
xor
test
inc
jecxz,pn
or
aam
push
dec
xchg
add
sbb
xlat
jno
push
pop
inc
and
orb
mov
add
aas
iret
daa
je
mov
sub
adc
sub
and
addr16
shll
and
or
jne
mov
aam
cmp
nop
cmp
xchg
cmp
add
aas
test
lods
push
mov
mov
inc
idivb
rcll
mov
in
or
mov
jecxz
inc
pop
dec
mov
out
sbbl
push
in
jae
mov
sbb
adcl
es
cmc
push
xor
jbe
je
fs
push
pop
pop
loop
sub
xchg
sub
pop
lahf
faddl
mov
test
jg
jmp
xchg
and
aas
fs
sbb
mov
cmc
jg
into
sbb
sub
cwtl
sbb
call
push
fcoms
jmp
jno
sbb
cli
mov
lods
clc
mov
xchg
dec
dec
gs
dec
fcmovnb
pop
stos
sbb
pop
jb
and
loopne
and
pop
cltd
int
les
in
stc
je
dec
xchg
inc
addr16
push
sbb
bnd
cltd
stos
cmp
cltd
ljmp
sub
mov
xchg
out
ds
xchg
jbe
imull
dec
add
mov
add
mov
sub
pop
pop
add
or
xchg
fmulp
xor
xor
int
xchg
xor
jbe
fwait
movsl
pop
lods
loop
or
and
leave
insb
add
mov
dec
dec
cmp
jne
aam
mov
test
cmp
inc
and
push
lcall
das
xchg
shll
jl
add
je
pop
out
adc
sub
sub
cmp
mov
push
cmp
imul
lods
psrlq
jae
xchg
ret
popa
pop
mov
fs
in
divb
cmp
lret
in
cmp
dec
inc
pop
push
sbbl
mov
ss
movsl
js
insb
xchg
push
cmpsb
mov
xor
add
ja
sbb
push
mov
in
xchg
xchg
cmp
xchg
adcl
ja
nop
xchg
or
lods
gs
push
dec
fstps
lcall
or
or
sub
in
das
dec
test
lock
shrl
pop
adc
dec
imulb
adc
stos
push
into
lcall
cmp
daa
shrb
scas
or
ficomps
inc
add
cmpsb
adc
push
jnp
mov
mov
xor
or
cmc
sbb
sbb
test
cli
push
mov
xor
push
leave
sbbb
mov
test
idivb
int3
dec
sbb
test
out
lock
mov
imul
xor
jne
loop
lret
push
push
les
scas
pop
jb
xchg
orl
dec
inc
pop
or
out
and
repnz
cmp
add
jnp
pop
xchg
sbb
and
sbb
cmp
mov
push
or
rorl
push
jne
adc
adc
mov
shl
in
call
xor
fnstcw
xchg
outsl
cmp
lea
inc
pop
push
stc
dec
inc
test
mov
sbb
or
add
adc
lds
xchg
pop
mov
or
dec
mov
push
ficoms
cmp
ss
push
xchg
dec
adc
mov
vcvtpd2psy
xorb
xlat
aaa
ds
mov
lods
inc
stc
push
jbe
dec
cmp
mov
add
insl
cltd
insb
mov
test
inc
loop
sub
pop
aas
insb
xchg
call
sub
xlat
sar
cltd
mov
mov
pop
mov
mov
xor
xchg
pop
cld
in
mov
mov
gs
sar
xchg
mov
xorb
push
leave
pusha
or
inc
outsl
bound
ror
jle
or
outsl
fnsetpm(287
xor
push
jle
shll
xchg
dec
imul
pop
dec
shll
jl
xchg
lahf
les
or
lea
aas
pop
sbb
xor
repnz
and
xor
mov
add
xchg
lea
push
outsl
cs
movsb
adc
push
mov
dec
fidivl
cmp
fcoml
xor
mov
inc
popa
pop
in
mov
movsb
and
mov
fcomps
ret
cmpsl
inc
mov
divb
and
mov
test
sbb
fmuls
cmp
inc
mov
test
hlt
roll
cmpsl
insl
add
enter
push
enter
push
iret
dec
sbb
xlat
jp
add
rcrl
push
xlat
add
xchg
testl
push
add
push
ja
loopne
dec
movsl
dec
ss
dec
inc
fisubs
std
pop
and
lock
pop
addb
lahf
sbbl
xchg
pusha
xor
insb
mov
pusha
mov
in
jo
mov
daa
xor
push
out
pop
sub
or
jge
std
inc
inc
pop
fisttpll
mov
inc
test
cmovae
mov
stc
fists
or
rcl
lahf
fsubr
sbbb
push
sbb
movsb
sti
push
fmuls
push
jle
mov
popa
xchg
xchg
or
and
xchg
cmp
xor
ss
insl
rclb
and
xchg
add
mov
int3
mov
xlat
imul
xor
xchg
pop
outsb
lcall
jae
ret
mov
cmp
inc
xchg
cs
fwait
push
lods
mov
push
sbb
xchg
mov
fs
imul
jl
sub
pop
cmp
mov
mov
pop
pop
jae
leavew
mov
xor
dec
test
mov
xchg
pushf
push
mov
pop
push
xchg
clc
mov
int3
jo
sub
xor
and
stos
mov
out
and
xchg
mov
addr16
inc
lret
mov
sbb
fsubr
dec
jle
and
inc
out
xlat
add
xor
clc
sti
xchg
js
repnz
pop
call
stc
sbb
jns
dec
arpl
call
mov
cmc
adc
fld
mov
mov
jmp
xchg
xlat
pop
js
mov
inc
shlb
test
and
jl
push
mov
loopne
push
out
sub
out
dec
lret
jns
sbb
push
aad
out
inc
mov
mov
mov
push
daa
or
ret
add
shrl
mul
mov
cmp
fsubrp
lods
lret
and
cmp
or
lahf
push
mov
iret
in
aad
cmpsb
inc
enter
push
hlt
popf
repnz
and
mov
rorl
aas
add
mov
loopne
and
adc
add
xchg
ret
test
insl
negb
push
jb
scas
cli
shll
ds
jns
cmp
andl
mov
jp
lods
call
pop
addb
mov
xor
jmp
jp
in
outsb
test
xor
xchg
fimull
cli
mov
test
pop
mov
push
sub
inc
mov
fsts
lock
mov
push
pop
out
or
pop
inc
mov
or
inc
mov
jno
outsb
mov
inc
jle
std
dec
push
and
jo
ret
popa
sbb
adc
lods
push
push
add
push
mov
hlt
pop
xchg
dec
data16
pop
pop
ficomps
push
test
xchg
loop
sti
adc
ficoms
insb
pop
rolb
imul
mov
or
fcomps
test
outsb
enter
mov
les
add
xlat
call
out
cmpsl
das
sub
ret
in
dec
rcrl
add
into
cs
sti
mov
adc
movsl
pop
mov
dec
test
jmpw
mov
mov
ret
js
cmp
jbe
jl
fiaddl
inc
sub
repz
jne
into
jne
js
jle
mov
cmp
mov
inc
mov
push
test
adc
xor
dec
fisubl
dec
insb
xchg
adc
and
mov
inc
movsb
sub
pop
shlb
cmp
mov
mov
mov
fs
mov
cmpsl
and
fstpt
stc
nop
pop
hlt
xchg
roll
fld
les
mov
data16
xor
xchg
das
out
sbb
ja
xor
fnstcw
push
add
pop
xchg
ja
add
and
mov
sbb
enter
int3
icebp
push
mov
clc
pop
jb
jg
stos
jo
xor
push
and
das
cmp
rol
sub
cli
xor
movsb
sub
xor
dec
xchg
mov
mov
and
fldenv
in
movsl
lock
sub
or
decl
cmpsl
jg
fs
mov
jge
dec
sub
push
out
test
mov
adc
jmp
push
mov
xor
mov
rol
mov
mov
mov
movsb
in
mov
xorb
push
out
data16
loopne
or
sbb
cltd
jnp
fnstcw
clc
xorb
pop
mov
ja
jbe
add
or
push
loopne
rcrb
gs
pop
xor
and
mov
cli
popa
adc
daa
adc
icebp
push
ds
into
push
jno
inc
sar
push
rorl
push
push
test
stos
cltd
imul
mov
and
adc
mov
sahf
imul
cmp
mov
dec
xlat
sti
sti
movsl
push
callw
jg
test
in
movsl
imul
arpl
ds
pop
adc
out
cmp
mov
push
mov
dec
repz
sbb
into
arpl
xor
cmpsb
mov
dec
jbe
xor
push
xor
dec
dec
mov
insl
nop
or
int
call
mov
mov
or
cmpsl
cmp
jb
mov
ja
cmp
leave
out
stos
cs
mov
cmp
or
loop
mov
cmp
iret
lcall
xchg
divb
int3
mov
push
fs
sbb
xchg
adc
cmc
push
stos
adc
adc
hlt
outsb
pop
test
push
pop
cmp
dec
shrl
xchg
xchg
shll
cmc
aad
inc
xchg
repnz
pop
ss
sub
xchg
int
cmp
call
inc
hlt
nop
push
push
shrb
mov
rep
test
aam
xchg
mov
addr16
push
fcmovne
loop
add
mov
pusha
insl
xchg
rorl
loop
cmc
fcoms
jbe
sbb
int
mov
cmp
sub
jae
pop
jl
xchg
lea
xor
push
call
ds
jno
jae
inc
pusha
pop
inc
mov
jle
push
dec
icebp
dec
mov
sti
cs
scas
dec
cmc
or
mov
push
js
gs
push
ja
bound
adcb
ficoms
bnd
fistps
or
sbb
and
xor
cwtl
dec
std
test
adc
dec
aas
mov
and
sub
cltd
inc
jbe
or
lods
fsubp
cmp
cmp
sbb
dec
movsb
jbe
mov
jno
mov
xchg
sbb
icebp
and
sbb
nop
mov
sar
test
xor
pop
add
push
fsubrl
cmp
aad
jle
pop
cmc
imul
mov
aad
mov
lahf
mov
inc
and
jns
hlt
add
sahf
in
and
cld
aad
loope
mov
jle
data16
xchg
insl
scas
sub
inc
jecxz
jnp
cwtl
dec
fidivl
push
jl
std
fisttpll
push
clc
cmpsl
imul
mov
push
cmpb
mov
and
fdivp
sub
push
pop
dec
das
push
and
fs
pusha
clc
dec
repz
push
adc
outsb
outsb
in
cmc
aam
sbb
leave
push
js
xor
scas
xchg
push
cmc
mov
imul
xor
bound
hlt
or
jo
repz
mov
mov
inc
cwtl
cs
pusha
sbb
jmp
or
push
push
jg
test
rolb
hlt
lods
das
mov
ds
icebp
adc
xor
in
pop
stos
jns
mov
mov
or
sbb
push
push
xchg
movsl
ja
loopne
jae
loopne
and
mov
es
adcb
xor
xchg
out
popa
cs
mov
enter
mov
ret
sub
inc
pop
dec
movsb
cmp
dec
mov
mov
ljmp
mov
mov
je
jne
pop
shl
mov
inc
pop
mov
add
mov
dec
and
scas
addr16
add
jecxz
fstpl
cmc
dec
pop
int3
icebp
out
push
cmp
push
or
xor
jg
int3
int3
jge
push
nop
mov
sbbl
mov
mov
add
xor
push
daa
push
cli
mov
sub
or
push
xchg
movsl
aad
dec
inc
and
hlt
pop
push
pmaddwd
pop
cli
movsb
lds
sbb
push
push
clc
inc
jge
ljmp
inc
sub
in
sti
insb
add
xor
outsb
add
cld
aas
hlt
ret
sub
cld
nop
inc
pushf
sub
jle
nop
pop
rol
jno
fsubrs
xor
push
pop
repnz
test
cld
mov
mov
shr
insb
mov
cmp
pop
cmp
in
out
mov
loope
jns
adc
sub
ret
lock
mov
cli
stc
mov
movsb
pop
rcrb
xor
xchg
sbb
xchg
push
push
hlt
adc
rcll
pop
call
addb
xchg
adc
cmp
pop
dec
loop
in
mov
xchg
mov
jno
aam
lahf
icebp
xchg
fimuls
mov
mov
xchg
outsl
int3
add
mov
and
sahf
and
daa
aad
xor
loop
test
cld
mov
out
js
or
fs
lcall
add
arpl
add
mov
xor
mov
dec
xchg
add
or
fildl
pop
mov
inc
ret
insb
xlat
out
cmp
mov
test
fsubrl
cmc
inc
pop
out
sbb
push
or
mov
jp,pt
mov
movsl
fdivrs
in
dec
adc
mov
jmp
ret
outsb
xchg
iret
out
xor
and
addr16
scas
ror
les
cmp
pop
sub
stos
mov
add
add
mov
cmc
mov
lock
lods
sub
aaa
and
mov
shl
orl
stos
int
pop
jle
rorb
jae
into
loope
mov
mov
sub
fidivrl
das
and
test
ss
repnz
icebp
fs
ss
scas
push
data16
push
cld
xchg
mov
aaa
lods
pop
jnp
sbb
mov
arpl
js
adc
sub
stos
push
inc
dec
adc
or
dec
lret
subl
int
push
add
jbe
mov
aad
in
mov
gs
clc
push
das
inc
dec
mov
mov
leave
cmp
jle
jmp
fucomip
leave
fidivs
cmpsl
cmpsl
jmp
adc
and
ss
inc
loopne
mov
or
mov
inc
inc
pop
outsb
adc
xchg
cld
xchg
push
push
push
pop
lret
mov
pop
testb
or
push
imul
inc
scas
mov
ds
mov
in
jle
ds
fmull
call
cmp
mov
adc
and
inc
test
int3
testl
test
mov
movsb
lret
xchg
js
pusha
jmp
sbb
push
sub
aas
dec
in
stos
adc
or
je
add
adc
adc
mov
inc
add
xor
ds
push
pop
sbb
jnp
in
add
std
stos
aas
int3
sub
adc
pop
stos
push
les
cmp
or
lds
mov
loopne
lock
scas
xchg
pusha
inc
notb
dec
out
iret
jp
enter
pop
inc
sbb
icebp
popf
push
lock
testl
fcompl
jmp
mov
or
mov
das
sbb
pop
mov
or
dec
mov
loop
and
scas
sbb
sarb
out
cmpsb
pop
dec
in
push
sub
mov
in
stos
jbe
xchg
mov
mov
sbb
xchg
insl
insl
subl
mov
sbb
es
xchg
stos
jns
bnd
jb
cli
fwait
stc
pop
add
seto
sbb
popa
insl
loope
imul
lcall
jo
lea
jmp
pusha
loopne
inc
jmp
dec
jle
insl
in
outsb
cmc
jo
add
cmp
adc
sbb
shrb
add
imul
or
cmc
fs
mov
movb
pop
lods
jae
iret
shlb
fisttpl
jb
pop
fcoms
mov
aaa
gs
jecxz
int
push
in
insl
cmp
fstpl
stos
push
mov
enter
sub
imul
adc
xchg
inc
cmp
dec
and
flds
push
fs
cmpsb
fldt
pop
pop
sbbb
or
jno
jmp
or
ret
jl
xor
fsubrl
push
aad
mov
in
jmp
mov
rolb
adc
pop
in
xor
mov
and
nop
imul
add
cmpsl
popa
xchg
int
jo
mov
loop
insb
flds
nop
cmp
lret
stos
jno
fdivrs
inc
xor
mov
aam
cltd
mov
push
divl
insl
repz
jge
dec
shufps
mov
les
adc
dec
loop
leave
les
xor
scas
outsb
leave
and
cwtl
and
sbb
xor
inc
sub
out
mov
neg
xor
pop
inc
jp
aam
sbb
mov
push
jne
lcall
in
and
lods
jecxz
test
jo
sub
adc
ds
gs
xchg
mov
xchg
mov
stc
inc
cmp
dec
mov
cmp
ret
lods
movsbl
popf
lret
jmp
outsb
xor
xchg
inc
je
or
repnz
movsb
adc
push
mov
mov
and
sbb
stc
test
jmp
cmp
fiadds
mov
cmp
mov
aas
out
pushf
mov
or
je
test
mov
popf
jecxz
or
cmp
insb
pushf
xchg
inc
lret
cmpsb
inc
out
test
mov
jp
cmp
loop
or
fcmovb
mov
sbb
xchg
scas
xchg
ficomps
test
scas
std
out
xor
mov
loopne
inc
xchg
adc
fisttpll
ret
cmpsl
jnp
mov
inc
sbb
inc
pop
mov
leave
xchg
sti
sbb
xorl
fsin
add
sub
fiadds
adc
push
hlt
pusha
sti
mov
or
add
mov
inc
push
in
pop
dec
ret
clc
scas
mov
mov
ret
stos
das
sarl
scas
add
or
and
and
push
out
cli
ljmp
sbb
aaa
push
cmp
dec
aas
lods
cli
sbbb
movsb
push
cmp
add
xchg
add
in
push
pushf
adc
rclb
enter
push
mov
cmp
ror
add
std
dec
jo
pop
xchg
pop
dec
insl
aaa
pop
or
dec
mov
mov
cmpb
movsl
int3
pop
sbb
sub
mov
inc
cmp
cvttps2pi
add
scas
and
fadd
and
out
insl
dec
fmuls
adc
mov
mov
jmp
lret
sub
dec
sbb
out
sahf
jae
push
jbe
mov
jmp
jp
sahf
testl
push
jno
notl
pop
loope
loopne
mov
and
shrl
mov
pop
mov
ret
mov
push
inc
scas
or
ss
pavgw
sbb
pusha
inc
xchg
sub
sbb
leave
mov
mov
fisubrs
pop
iret
das
cs
inc
adcl
faddp
cwtl
fwait
bnd
fwait
adc
cmpb
icebp
jno
sub
mov
aaa
scas
and
mov
and
aaa
lea
add
sub
push
into
cltd
js
jns
lods
xchg
or
jl
xchg
out
pusha
addb
into
adc
adc
movsl
orb
fwait
and
daa
fst
in
jge
xchg
sub
dec
pop
ds
bound
mov
pop
fs
add
outsb
stos
lods
mov
dec
pop
mov
aad
inc
into
cli
xlat
mov
xchg
out
mov
rcrl
mov
shrl
retw
js
scas
arpl
cmp
shl
pop
sar
pop
lods
push
dec
xchg
sbb
outsl
call
cli
jns
rolb
inc
insl
bound
inc
data16
push
push
divl
lret
jb
mov
movsl
xor
sti
int3
fcomps
xor
andl
out
loopne,pn
or
inc
fdivs
fiaddl
sbb
test
xchg
and
fists
pop
imul
cmpb
mov
je
or
test
fsubrl
sbb
and
bound
or
rcll
pop
int3
xor
je
lcall
cli
insl
or
and
mov
push
xchg
stos
mov
shr
pop
mov
push
add
cmpsl
imul
mov
add
movsl
vunpckhpd
fsubr
scas
xchg
jb
or
jns
push
mov
addr16
xchg
cmpsb
pop
aaa
push
add
sbb
pop
inc
xchg
dec
sbb
mov
mov
ljmp
xchg
sahf
ret
fs
pop
xchg
jge
xchg
jns
inc
xor
cmpsb
movsb
dec
dec
or
push
sbb
cmpsb
dec
mov
sub
jg
add
sarl
cmp
ret
mov
mov
pop
leave
push
xor
mov
xchg
pop
je
jmp
mov
lea
out
insl
stos
ficoml
pop
or
je
mov
jne
jo
lret
or
cmc
cmp
aad
idivl
insb
add
dec
daa
cmp
into
cmp
movsb
sbb
xchg
sub
cmp
adc
lods
fists
inc
cwtl
sbb
sub
sbb
mov
scas
aas
jmp
mov
jge
mov
add
pop
mov
mov
out
and
lock
sub
adc
test
add
pop
add
pop
lcall
adc
int
dec
push
xor
mov
pop
mov
mov
ret
jns
dec
xor
scas
js
out
insl
mov
cmp
mulb
call
and
adc
test
jg
fistpll
in
inc
sub
jecxz
shrl
adc
imul
dec
ds
fiaddl
call
inc
or
enter
in
dec
inc
mov
int3
roll
add
sub
add
push
or
adc
es
enter
jmp
subl
lods
add
xchg
mov
push
icebp
lret
out
add
mov
xchg
psraw
jge
xor
lcall
adc
stos
add
inc
and
add
add
test
sub
js
or
ret
mov
mov
loope
cwtl
and
mov
fnstcw
cmpsb
and
lea
push
stc
xor
cmp
mov
call
mov
jnp
inc
fimuls
fisttpll
jnp
push
dec
mov
test
xorb
cmpsl
int3
xchg
fldcw
lret
call
mov
dec
xchg
jmp
punpckhbw
mov
sub
xlat
xchg
pusha
jecxz
lret
lcall
nop
es
daa
ja
ja
lds
sub
xchg
sub
jle
repz
dec
or
jns
dec
dec
xor
cmp
jmp
cmp
inc
je
xor
cmp
pop
inc
add
loop
outsl
xor
and
and
mov
repnz
shrl
mov
lea
stc
lahf
shl
cwtl
jmp
or
lock
stos
fisttpl
push
mov
mov
js
mov
sbb
jno
sub
sbb
xchg
ficoms
mov
cmp
repz
lahf
loope
mov
jle
pop
int3
xchg
fcoml
pop
cwtl
enter
lret
mov
es
pushf
add
rcr
ljmp
push
push
leave
jmp
cld
add
mov
mov
xor
inc
dec
sbbb
cli
dec
mov
adc
push
and
mov
cmpsb
movsb
movsl
xlat
or
push
pop
dec
insl
mov
mov
jl
test
dec
cmc
push
out
popa
test
insl
xchg
sub
lock
dec
add
push
sbb
cmp
xchg
fcomip
pop
fcom
fiadds
xchg
pop
jb
test
dec
hlt
add
add
jmp
push
jnp
dec
notl
inc
sbb
add
adc
add
int3
mov
dec
mov
push
xchg
sub
addb
add
add
add
add
addl
add
add
add
sub
scas
movsl
shrl
jns
nop
nop
ret
pop
nop
nop
xchg
scas
and
pop
in
pop
stos
dec
xor
inc
fisttpl
shrb
pop
daa
icebp
gs
mov
sbb
push
cmp
lret
js
pop
or
cmpsl
int
push
stc
cmpsb
pop
frstor
in
jns
inc
ja
inc
lods
push
divb
insl
pop
sub
fstpl
pop
cmpb
mov
cs
bound
ja
lds
sbb
aam
int3
mov
sub
cltd
subl
sbb
cs
push
xchg
test
icebp
mov
loopne
cwtl
adc
in
in
fucom
repz
in
mov
out
jmp
xchg
or
pop
rclb
cmpsl
jne
popa
jnp
ret
sub
jno
mov
stos
pop
push
pop
add
fimull
xlat
mov
inc
loop
jns
lahf
jb
mov
aaa
and
bound
inc
push
mov
ja
lahf
icebp
int
jg
push
lcall
gs
pop
jmp
mov
cmc
stos
xlat
cwtl
add
arpl
push
das
adc
mov
mov
fcomps
push
lahf
dec
xor
pop
shrl
cltd
nop
iret
push
dec
jl
sti
pushf
imul
ret
leave
sub
daa
sbb
shl
or
and
dec
ss
sbb
cmp
jns
push
fstpt
mov
lahf
and
sbbl
pop
mov
push
xchg
xor
testb
repnz
mov
jb
mov
negb
lret
mov
mov
jbe
pop
mov
pop
jmp
mov
ret
push
mov
out
cmp
and
std
lahf
lea
inc
dec
cmpsl
xlat
jbe
adc
mov
push
fisttpll
inc
and
mov
icebp
inc
push
and
cltd
in
leave
sbb
mov
mov
xchg
or
jns
add
cmpsb
daa
inc
cld
sbb
decl
insl
mov
js
or
add
ficompl
sub
pushf
sub
out
dec
fidivl
insb
pop
insl
xchg
jns
pop
test
pop
pop
adc
jnp
jae
push
sbb
leave
call
jmp
fwait
sub
fnstsw
mov
stos
ja
sarl
into
fs
mov
mov
inc
gs
push
popa
add
sbb
es
mov
shl
add
xchg
mov
std
daa
mov
and
mov
sbb
jmp
movsl
lea
imull
sub
cmp
loopne
popf
push
mov
add
xchg
fs
das
rol
vpsubsw
inc
jle
orb
arpl
daa
fisttpll
and
in
gs
movsb
inc
jo
mov
iret
cmp
xchg
mov
adc
xor
and
push
shl
mov
jae
or
pop
mov
xor
stc
stc
xchg
push
sub
cmp
inc
rcrb
push
mov
xchg
mov
sti
mov
dec
xchg
pop
je
dec
dec
sbb
pop
dec
testl
mov
nop
fiadds
aad
cmpsl
gs
outsl
sbb
jg
sbb
mov
es
add
or
push
inc
fdivrs
mov
mov
fistpll
test
xor
ss
mov
loop
dec
mov
addr16
aad
add
popf
sub
mov
pusha
filds
push
addr16
cltd
dec
es
add
loope
adc
push
jmp
out
adc
fstl
sub
inc
or
shll
outsl
test
mov
int3
lret
insl
ret
ljmp
addr16
cmp
cs
inc
mov
insb
rolb
cmc
cmp
mov
push
or
imul
stos
mov
lods
mov
popf
pop
push
ja
xor
mov
int
daa
sub
or
aam
mov
push
rclb
jbe
std
or
mov
out
out
push
and
pop
sub
iret
xchg
sbb
or
ljmp
lock
xchg
adc
shrb
cmp
mov
sarl
inc
pusha
inc
pop
leave
mov
jecxz
and
test
fwait
push
daa
add
in
xor
lahf
clc
gs
dec
pop
iret
roll
mov
popf
xor
gs
or
cmp
mov
clc
inc
rorb
and
dec
dec
mov
pop
or
lcall
inc
roll
imul
loopne
xor
sbb
xchg
xlat
addr16
pop
mov
iret
push
bound
push
rclb
lea
pop
les
mov
lcall
mov
in
ja
push
pop
fcomi
adc
and
adc
aad
shr
pop
xor
lods
add
das
out
lods
int3
enter
icebp
and
cmp
dec
dec
mov
aad
push
xor
jl
daa
inc
cwtl
fst
pop
repnz
inc
or
aas
imul
call
daa
in
stc
mov
hlt
ljmp
ficompl
mov
xchg
das
lret
xchg
out
xchg
cwtl
pusha
mov
adc
sti
stos
gs
ret
pop
pop
out
or
shrb
xor
aam
mov
repz
lcall
push
loop
fsubrs
js
movsl
mov
mov
cmp
inc
cmp
push
mov
hlt
jae
dec
jl
scas
add
insl
push
inc
xor
shll
loope
xchg
dec
pop
inc
notl
inc
inc
mov
mov
leave
or
movsl
cmp
xor
das
roll
pop
fildll
sbbb
shll
cli
mov
dec
imul
pop
push
adc
das
mov
cmpsl
sbb
jbe
jle
adc
movl
js
sti
mov
stc
jnp
mov
fiaddl
lea
mov
jl
sbb
pop
cs
and
sbb
mov
adc
mov
dec
xchg
arpl
rcll
fwait
imul
rorb
imul
imull
int
lret
loope
xor
jo
sbb
mov
add
outsb
mov
leave
jge
jg
addr16
cmp
iret
xor
fisttps
adc
inc
add
loopne
inc
mov
push
add
push
ret
stos
sbb
icebp
xchg
inc
push
cmpsl
mov
ffree
into
mov
adc
jns
xchg
cs
mov
das
into
int
mov
dec
push
and
movsl
sbb
xchg
adc
inc
ss
std
jnp
leave
pop
adc
xchg
imul
dec
xchg
or
jg
jmp
pop
add
mov
add
mov
mov
mov
out
inc
sbb
dec
pop
dec
pop
scas
sub
loopne
out
jl
stos
movsb
push
out
enter
shrl
and
mov
es
in
jg
fs
sub
inc
mov
andl
leave
rcrb
aad
sub
std
mov
test
popf
mov
xor
mov
cli
pusha
adc
je
jmp
or
ss
inc
sbb
mov
mov
pop
mov
or
in
aad
sub
inc
pushf
adc
scas
mov
out
ja
shrb
inc
xor
mov
repz
rol
or
lret
mov
cli
int3
mov
aam
leave
inc
xor
das
leave
fildl
mov
jnp
jne
loopne
aad
scas
out
dec
mov
movsb
or
mov
push
cs
pop
orb
out
aaa
lods
cmp
gs
shll
mov
ljmp
sub
dec
mov
cmp
push
jp
add
movsl
shrb
and
in
push
cld
or
sub
test
ret
mov
push
sbb
notl
notl
in
jge
out
xlat
filds
add
jns
xor
pop
xor
lret
sbb
rol
xchg
jno
sub
ja
and
lahf
orb
mov
xchg
and
sub
ret
bnd
push
jg
outsb
mov
je
lock
inc
shl
jmp
jne
stos
aaa
jae
clc
or
and
cmp
mov
leave
test
mov
cmp
enter
frstor
sub
xchg
je
fcmovnbe
shlb
and
mov
adc
cmp
and
cli
fcmovnbe
push
xchg
jmp
pop
nop
sti
mov
hlt
in
outsb
les
jg
jb
ljmp
mov
inc
or
mov
lods
push
cmpsb
mov
or
les
icebp
je
cmp
xchg
jae
das
ds
sbb
sar
jbe
ja
lock
dec
xchg
ror
adc
jo
mov
adc
and
push
xchg
mov
pop
les
jle
adc
mov
sbb
pop
mov
jl
loopne
shll
loop
add
or
subl
pusha
repz
dec
or
sar
sub
stos
test
rorb
inc
sub
mov
imul
js
xchg
incl
fcoms
sub
in
roll
add
push
mov
int
push
xchg
and
or
adc
sub
add
insb
test
and
pop
lods
sub
push
mov
ljmp
leave
pushf
xchg
add
add
adcb
mov
cs
xor
ljmp
int3
dec
and
lahf
insl
cmp
jo
cwtl
jmp
xor
jne
int3
scas
xor
cs
dec
lock
imul
aaa
data16
pop
ficoml
in
and
in
sub
inc
in
mov
xchg
push
mov
lock
arpl
mov
leave
int3
std
and
inc
mov
incl
dec
shlb
or
in
pop
add
dec
sub
mov
stc
icebp
pusha
dec
or
mov
ret
or
jmp
gs
insb
push
xchg
lea
aam
pop
fstps
addb
mov
add
stos
popa
subl
mov
movsb
add
inc
movsb
stc
scas
aaa
xchg
xlat
ja
mov
mov
mov
mov
rorb
dec
and
std
sbb
movsb
sub
movsl
pop
js
jge
mov
daa
repnz
inc
ja
bound
adc
xchg
test
arpl
jns
fdiv
ror
pop
cwtl
les
rorl
inc
xor
push
aam
cmpb
out
cltd
add
test
jge
jnp
lret
jp
push
mov
mull
imul
push
loop
stc
sbb
mov
shrl
add
rcll
or
pop
sub
add
inc
jl
jecxz
or
insl
stos
icebp
bound
mov
xor
pop
es
lahf
mov
sub
fmulp
sahf
dec
popa
lcall
cmp
push
std
popf
and
fwait
or
rcrb
test
mov
pop
jg
clc
jmp
arpl
pop
flds
outsl
jp
add
mov
std
push
xor
push
rolb
repz
cmp
lcall
jl
dec
mov
push
enter
jle
sbb
clc
pusha
jno
enter
dec
popf
cmp
mov
movsb
adc
movsb
icebp
repz
inc
mov
and
adc
mov
adc
cmpsb
bound
adc
cmp
enter
out
sahf
rorb
and
or
sbb
sub
dec
mov
pusha
aam
outsb
mov
lds
cmp
mov
xchg
lret
mov
jg
mov
lea
js
mov
jmp
add
mov
fbstp
in
cmp
push
cld
jmp
jmp
aam
jne
imul
aam
popf
in
insl
xchg
in
pop
ljmp
outsl
mov
fwait
cltd
pop
test
inc
pop
pop
fstpl
jbe
call
pop
cmp
fstp
pop
cmp
mov
jno
mov
pop
jl
aaa
dec
xlat
sahf
out
fldenv
out
rclb
mov
jmp
jbe
jae
jge
enter
or
imul
adc
sbb
xor
add
pop
into
cmp
sbb
mov
lock
xchg
insl
nopl
andb
mov
shr
les
test
pusha
or
push
jo,pt
dec
mov
lods
test
fwait
lret
lock
mov
ds
inc
in
mov
sbb
inc
xchg
push
lret
leave
arpl
inc
mov
aad
fisttpl
pop
data16
bound
aaa
mov
xchg
pop
mov
ret
mov
sti
xor
mov
sub
adc
mov
out
mov
push
test
in
sbb
xchg
cs
mov
mov
jo
adc
dec
sti
mov
cld
filds
sbb
pop
popf
ljmp
cli
data16
or
leave
mov
mov
mov
push
cmp
adc
add
fcmovnu
mov
add
dec
cmp
std
cmp
mov
push
push
xor
add
into
mov
push
into
push
ljmp
xlat
enter
pop
dec
jmp
hlt
add
inc
and
aaa
xchg
aam
fnsave
push
loopne
dec
mov
xchg
aas
gs
cmp
cmc
nop
imul
sub
test
lea
rol
dec
jmp
dec
in
idivb
out
int3
push
cmp
out
mov
jb
inc
popl
sub
mov
cld
mov
jns
outsb
mov
lea
cmpsb
pop
dec
jb
dec
jecxz
xchg
popa
mov
fldcw
cmp
cmp
fmul
paddsw
mov
cmc
cmp
fwait
inc
rcll
ret
xor
call
test
xor
ffree
mov
subb
xlat
lds
cltd
lret
stc
in
mov
adc
shrb
push
adc
ljmp
jo
xchg
xchg
out
fldl
or
jmp
add
sti
jae
mov
dec
fistps
mov
stos
xchg
xchg
add
lcall
gs
ret
imul
scas
lods
fs
or
jb
jge
or
mov
into
adc
adc
sub
pop
sahf
jno
loope
popf
iret
adc
shrl
lcall
popa
jne
fs
jnp
ret
cld
stos
fmulp
aaa
or
fnsave
and
cmp
add
subb
mov
cmp
sbb
push
and
inc
push
mov
fiadds
jb
jge
loopne
xchg
mov
xchg
inc
or
shlb
enter
stc
xchg
sbbb
fsqrt
cmp
xorl
loop
mov
hlt
cmpsl
or
adcb
push
ljmp
popf
sahf
cmp
movsl
arpl
stc
loopne
lahf
fs
mul
sarb
enter
int3
mov
add
popf
mov
xchg
orl
cltd
sub
fmuls
jmp
enter
lcall
jnp
scas
and
hlt
cmp
mov
fcmovnbe
pop
add
push
jb
jnp
or
es
cmp
out
mov
pop
and
cld
xchg
xor
and
mov
mov
mov
mov
mov
fisubs
ret
lea
jb
jecxz
mov
inc
sub
test
adc
pop
push
pushf
loopne
xchg
cmp
dec
xchg
push
nop
negl
add
cltd
iret
cmpsb
xor
xlat
inc
inc
sbb
arpl
mov
pop
lcall
lock
adc
sub
pop
fldt
sbb
in
sub
lcall
mov
push
stos
shlb
cmpsl
orl
push
cmpsl
mov
xchg
fwait
mov
push
repnz
mov
mov
cmpsl
fisubs
bound
or
in
and
mov
fcomps
jg
mov
and
sub
push
addr16
out
adc
sub
addr16
mov
test
inc
aaa
lock
cmp
fisttps
adc
aaa
xchg
stos
jecxz
xchg
jecxz
es
imul
sbb
imul
xchg
ja
pop
and
js
test
mov
sbb
adc
loope
and
fiaddl
dec
in
fucomp
adc
cld
jns
mov
mov
lods
es
mov
cmp
int3
dec
lods
fisubs
data16
pop
test
pop
jecxz
dec
jge
leave
jno
and
jne
jecxz,pt
stc
and
cmpsb
sub
leave
negb
xorl
ja
out
divl
mov
cmp
rorb
test
lret
rol
mov
mov
push
mov
and
push
andb
mov
leave
push
mov
dec
clc
push
dec
push
jnp
jmp
pop
cmp
jecxz
leave
dec
mov
sbb
insl
shl
push
jg
not
or
and
jmp
and
cwtl
inc
adc
push
and
cmpl
jp
cmc
xor
pop
shlb
cmp
pop
in
add
jnp
sar
jp
out
aaa
push
and
add
das
clc
dec
dec
mov
xchg
in
mov
movsl
cmp
push
or
and
xor
xor
or
dec
jg
and
fstps
loope
and
push
mov
jne
and
aaa
push
in
sbb
jb
imul
lret
mov
dec
stc
cmpsl
jecxz
test
xchg
add
inc
lods
mov
inc
dec
dec
test
imul
sti
fs
lea
mov
mov
leave
fwait
ret
adcb
jo
clc
bound
es
sub
cmpsb
mov
jecxz
mov
das
add
xlat
shll
mov
scas
aam
jno
adc
pop
sbb
out
lds
in
lea
sahf
xlat
sub
sbb
pushf
adc
push
lods
mov
pop
sbb
add
inc
xor
call
dec
or
cmp
push
or
or
outsb
mov
and
shrl
mov
ret
sbb
sbbl
xchg
push
cmp
or
sbb
push
pop
je
imul
jp
notl
xor
inc
mov
ret
sti
dec
cs
mov
cmp
inc
aam
popa
sub
adc
mov
mov
xchg
stos
adc
ret
adc
dec
xchg
pop
mov
js
fisubrl
inc
pusha
fildll
sbb
xchg
pusha
scas
loop
pop
and
aam
mov
pushl
gs
mov
mov
stos
int
mov
das
dec
xor
push
out
xor
ret
mov
sarb
popa
lcall
pushf
mov
xchg
fwait
ret
clc
and
stc
sahf
pusha
jmp
adc
push
lcall
push
stos
gs
int
lea
mov
test
hlt
mulb
cmpsl
sarb
stos
inc
xchg
sbb
pop
and
mov
out
mov
stos
mov
imul
xchg
mov
sbb
add
jmp
loop
cmp
cmp
xchg
popa
dec
out
stc
mov
mov
pop
rolb
aas
mov
mov
sub
pop
xor
shrb
fiaddl
jp
arpl
js
jge
stc
in
jbe
je
inc
and
lds
sti
stos
div
lahf
fwait
pop
fildl
jns
nop
pop
cmp
cmpsl
movsb
mov
iret
mov
fidivrs
iret
mov
shll
out
shr
pop
into
mov
mov
jp
pop
std
std
push
dec
push
hlt
ljmp
adc
shl
mov
leave
mull
sbb
mov
push
jne
push
dec
loop
pushf
cmp
outsb
jp
leave
dec
adc
mov
sub
inc
cmc
psubd
sub
int3
iret
ss
sub
xchg
lea
int
sti
in
ds
fsubrs
or
test
movsl
aad
mov
movsb
movsl
sbbb
mov
adc
pop
shlb
std
ror
add
and
jl
cmp
lcall
sub
xchg
push
decl
sub
pop
adc
dec
pop
xor
ret
shll
lods
movsl
mov
fcoms
aas
inc
gs
inc
mov
push
xlat
stos
sbb
mov
sbb
and
pop
mov
or
loop
scas
mov
rol
xor
xchg
mov
jl
xchg
pop
jp
cmpsb
sbb
in
popf
mov
mov
fisubs
outsl
sbb
mov
sub
pop
les
rcrb
jbe
mov
cmp
mov
or
dec
xchg
push
insb
pop
imul
mov
lods
out
mov
mov
lcall
in
xchg
cmpb
add
add
or
lcall
lock
and
cld
sbb
das
mov
rcrb
ljmp
leave
xor
xlat
ret
cmp
ficomps
pop
pop
mov
lret
arpl
insb
adc
and
popf
xlat
fdivrs
or
int3
cmp
fbstp
aas
xor
jno
pop
das
push
ret
add
repz
jne
les
in
test
jmp
pop
mov
or
push
rolb
jmp
daa
fisttpll
test
mov
rorl
mov
mov
pop
fsubs
std
adc
add
cmpsl
jge
js
mov
lahf
jns
add
nop
imulb
push
and
stos
ljmp
inc
stos
sub
mov
subl
pop
xchg
dec
jl
sbb
xchg
sub
xchg
adc
stos
sub
outsb
inc
enter
dec
inc
outsl
adcl
sub
inc
mov
outsl
and
jno
and
ds
push
push
shrl
inc
jmp
into
dec
jb
stc
push
sub
sbb
pop
mov
shlb
dec
jo
mov
push
test
cmp
in
sbbl
xchg
sbb
popf
jno
jp
mov
jmp
cmpsl
pop
add
repnz
cmpsl
and
repz
push
loope
std
lret
inc
xchg
mov
inc
scas
jbe
xchg
jbe
lret
adc
cmc
test
stc
cld
repnz
sub
decl
outsl
out
ficompl
test
ror
sub
jae
stos
rclb
xchg
xlat
mov
push
enter
mov
bound
outsl
mov
jae
incl
sub
push
int
in
pop
pop
bound
fcoml
mov
decb
xor
int3
push
arpl
jne
or
in
aad
fsts
cmp
int
data16
aam
mov
add
shlb
stc
adc
test
out
call
call
mov
and
dec
icebp
into
adc
jb
push
out
loop
inc
nop
or
push
xor
out
xchg
jns
sbb
and
movsb
movsl
cmpsb
xchg
in
sbb
mov
lea
fidivs
fiaddl
push
out
sti
clc
xchg
add
stos
outsl
sbb
push
frstor
scas
and
xor
aam
xchg
adc
add
add
ja
pop
xchg
jmp
sahf
jae
sub
and
mov
sbb
insl
dec
adc
sbb
lods
jne
lds
dec
cmpsb
movsb
les
pop
pushf
shrl
mov
lds
lcall
lret
cmpsb
cmp
cwtl
faddp
repnz
jno
lret
out
in
mov
pusha
pop
adc
jmp
adc
cmc
dec
in
popa
jno
ja
mov
lret
movsb
leave
stc
xor
movsl
push
icebp
adc
fisttpll
pop
int
mov
mov
cmc
or
inc
xchg
ret
add
rolb
pop
adc
fcmovnbe
xchg
jle
sbb
jle
sbb
cs
into
xor
sub
xchg
add
cmp
adc
dec
jge
push
push
popa
dec
lods
popf
and
mov
mov
cmp
clc
int3
mov
adc
shlb
xchg
lea
rcrl
sahf
std
sbb
sti
and
cmpsb
push
js
aaa
push
jae
popf
xchg
push
push
imul
daa
inc
not
xchg
cwtl
sarb
std
cmp
test
test
xor
and
std
js
and
cs
les
sub
test
or
inc
push
jge
nop
mov
aaa
adc
lock
xor
dec
sub
push
xor
xchg
cmpsl
cmpb
xor
cltd
jo
inc
xchg
sbb
pusha
out
pop
hlt
movsb
fdivrl
in
scas
int
jp
inc
daa
or
insl
inc
mov
aad
fldenv
ja
sbb
adc
adc
in
cli
js
sub
iret
push
sbb
sub
dec
push
test
jg
xor
inc
and
scas
jmp
inc
xorb
inc
dec
cwtl
loop
lret
adc
adcb
stos
jl
loope
jmp
xor
je
push
scas
in
push
inc
sub
mov
mov
pop
mov
and
daa
in
adc
xor
dec
sbb
jne
pop
subl
movsb
or
ret
into
cwtl
inc
jo
or
cmpsl
ficomps
mov
and
outsl
je
inc
dec
mov
xor
inc
in
adc
jns
mov
cmp
cmp
jae
inc
and
lret
xor
xchg
gs
cmp
mov
daa
out
cmp
pop
ror
pop
jl
outsl
pop
dec
and
jne
inc
ficomps
xor
test
adc
pushf
test
pop
jg
push
repz
stos
inc
jns
mov
cld
dec
lods
cs
xchg
addr16
lret
dec
inc
test
mov
dec
call
lret
ljmp
jge
push
rolb
inc
outsl
xor
jae
pop
and
xchg
lods
js
fldcw
insb
repz
push
xchg
in
jmp
inc
or
mov
pop
data16
dec
stos
mov
mov
out
iret
add
cltd
ja
addr16
adc
jmp
scas
lods
shll
pusha
jg
aad
in
into
mov
push
bswap
ja
jnp
lods
push
movsl
dec
xchg
pop
jmp
mov
dec
jl
mov
int3
mov
cmp
jg
clc
pop
popf
mov
jl
loop
pushf
leave
mov
add
lods
push
imul
dec
ljmp
pop
dec
lock
mov
mov
stc
push
dec
fdivp
lcall
sbb
push
sbb
add
add
cmp
and
test
xor
insl
pop
mov
f2xm1
leave
shl
test
enter
inc
xlat
enter
jecxz
test
or
mov
outsl
in
jo
push
popf
adc
stos
mov
lds
sbb
mov
pop
mov
mov
orb
mov
cmp
dec
push
popf
fmuls
stc
inc
xor
xor
nop
shrl
pop
mov
dec
pop
pop
leave
pop
aam
xchg
test
xchg
sbb
add
sahf
push
rcl
mov
cld
cs
jbe
sbb
shl
roll
mov
outsb
mov
fstpl
mov
hlt
rcl
call
jbe
mov
ret
fdivrp
call
add
push
jg
testb
insl
out
cmc
adc
dec
ljmp
xchg
arpl
adc
jbe
push
fstl
add
jne
cmc
popa
inc
or
mov
cltd
adc
mov
pop
test
add
out
movsb
adc
in
popa
imul
lods
xor
mov
lods
sub
cmc
add
fsubs
or
in
ds
mov
fnstenv
cmp
push
push
test
cmp
jne
out
push
cmp
scas
jno
xchg
and
jl
js
rorl
adc
mov
cmp
jnp,pn
les
add
movl
movsl
xchg
pop
sub
xor
push
je
pop
int
xchg
mov
scas
push
clc
lret
fimuls
rorb
repz
pop
jae
scas
jnp
fcmovnu
mov
pushf
xchg
adc
dec
adc
nop
xchg
adc
in
ss
jae
in
mov
outsb
sub
mov
in
xchg
filds
or
adc
push
xor
imulb
add
sub
addr16
bound
sahf
push
ret
xchg
xchg
push
lock
sbb
int3
insl
jbe
clc
sbb
sahf
pop
cld
lods
mov
lcall
cltd
imull
xchg
mov
js
mov
inc
xor
inc
fcmovu
test
cmpsl
mov
out
mov
je
push
xchg
in
movsb
push
leave
and
inc
xchg
sbb
or
mov
xchg
insl
icebp
adc
adc
and
rcrl
and
dec
mov
mov
inc
and
add
in
add
push
mov
aad
add
mov
fucom
jp
lcall
pop
sub
sahf
mov
flds
cmp
imul
out
rorb
stos
les
mov
sub
cwtl
cmp
rcl
pop
enter
cli
sbb
mul
adc
cwtl
xchg
stos
fisttps
ret
push
push
pop
mov
lret
push
adc
add
test
nop
mov
psubq
and
pop
pop
push
hlt
fcoms
xchg
insb
int3
inc
lock
add
loope
pop
insb
mov
jg
test
aam
aam
loop
cmp
mov
movsb
mov
incb
fldenv
xlat
insl
add
das
push
out
lods
movsl
xchg
lret
je
xchg
sahf
mov
push
addr16
mov
sbbb
xlat
leave
add
jg
sub
out
sbb
push
dec
fcmovnb
sbb
inc
in
testb
in
xchg
testl
iret
add
hlt
xor
pop
jae
cmp
pop
mov
mov
xchg
and
xor
cmp
or
sbb
int3
mov
lcall
sti
insl
ljmp
pop
sbb
mov
xor
xor
fs
fdivrl
ljmp
mov
aad
mov
jns
aam
inc
inc
push
inc
sarb
sub
aaa
mov
push
mov
sbb
jbe
adc
xchg
mov
pop
jbe
pop
xlat
cwtl
cmp
add
sub
bound
and
push
cmp
hlt
lods
jmp
mov
mov
inc
lret
jl
loopne
loopne
push
jle
negl
fidivl
in
ficomps
cwtl
xlat
jp
sub
add
out
pusha
idivb
scas
mov
push
sub
jle
scas
sbb
jnp
mov
fdivrs
and
cmpsl
dec
jle
mov
adc
stc
ss
insl
stos
cltd
xchg
loop
dec
cmp
xor
xor
mov
fmuls
call
sub
repnz
test
sbb
lahf
fcoml
xchg
mov
pop
push
rorb
inc
iret
sub
cmpsb
inc
xor
push
adc
jo
adc
push
std
push
or
fbld
es
daa
subb
les
loop
sarb
lock
sahf
lds
aas
adc
mov
xchg
int
sub
fisubrl
xor
lret
jbe
mov
sub
out
stos
pop
dec
mov
add
addl
xor
push
pushf
call
mov
std
xchg
fisttpl
inc
xchg
adc
hlt
mov
int
dec
andl
stc
int
test
cwtl
inc
mov
push
out
adc
adc
jo
stos
addr16
js
push
out
std
insb
inc
bound
cld
rcrl
rcrb
mov
in
imul
or
int
xor
jg
pop
mov
aad
dec
mov
aaa
not
test
adc
adc
pop
xor
inc
xchg
push
ss
adc
cs
adc
pop
ret
stc
mov
xchg
ret
imul
cmp
jmp
adc
mov
popa
jmp
test
int3
aas
push
xor
xchg
mov
mov
cli
mov
push
push
and
andl
and
inc
inc
sbb
stos
xor
fiadds
lods
add
subl
mov
mov
mov
test
xchg
popfw
iret
movsl
mov
fs
jb
jns
jno
mov
popa
mov
je
pusha
div
aad
testb
cmp
sbb
rol
or
into
cmova
sbb
fwait
adc
jmp
and
jmp
fwait
test
mov
add
xor
inc
xchg
cmp
inc
jns
rcll
adc
divb
and
xchg
push
jno
xor
or
xor
aas
in
dec
sahf
test
fucomi
dec
adc
iret
jp
jae
adc
adc
pop
cwtl
mov
popa
push
rcrl
adc
mov
out
and
int
lods
scas
test
stos
hlt
aad
imul
rclb
mov
jmp
mov
notb
jne
lret
sti
stc
push
pop
and
cmp
repnz
adc
mov
pop
je
jae
add
enter
rclb
xor
xor
dec
sub
add
js
pop
rolb
sbb
mov
imul
roll
inc
lods
arpl
jle
repz
or
call
and
jno
adc
stos
xchg
cmp
ret
add
or
xlat
lds
scas
int
xor
pop
inc
mov
ret
aad
xchg
stos
push
adc
leave
pop
stos
adc
cmp
divb
push
mov
cwtl
lods
inc
push
leave
and
sbb
push
pop
test
sub
and
pusha
mov
fidivs
add
adc
addl
push
iret
push
push
lock
xchg
and
xchg
movsl
jge
push
pop
cmp
push
setb
sbb
sbb
loope
lcall
xor
sbb
stos
sub
mov
lahf
mov
in
bnd
popf
push
xor
mov
rclb
fcmovb
and
into
inc
ror
push
add
xor
inc
ds
push
loop
cld
inc
ud0
mov
xchg
mov
in
push
cmpsb
lods
inc
dec
ret
xchg
movsl
jecxz
cwtl
cmp
insl
cli
xor
pop
fwait
lret
in
sub
and
loope
pop
pop
inc
sub
lahf
jmp
fnstenv
mov
scas
mov
jl
mov
mov
push
adc
xchg
shlb
inc
pop
cld
and
aaa
or
xor
xlat
out
xchg
xor
push
out
mov
inc
mov
neg
push
jl
aam
pop
pop
sbb
lcall
jge
addb
mov
pop
pop
pushf
ja
mov
in
fbstp
jb
dec
test
mov
dec
xchg
aad
push
push
xchg
pop
ret
push
pusha
sub
add
sub
gs
adc
jg
sbb
rcrb
stos
xchg
jl
stos
icebp
push
jns
rdtsc
xlat
jg
xchg
jl
cmp
xor
add
xchg
imul
lret
lret
mov
sub
adc
jmp
mov
add
cwtl
pop
shlb
popf
icebp
cli
jno
sbb
dec
xor
push
clc
jl
xchg
cmp
into
insb
xlat
pop
adc
push
in
add
cli
iret
mov
inc
scas
hlt
jg
imul
jmp
mov
jb
or
xor
fwait
and
inc
adc
and
movsb
lods
lret
fmul
pop
call
jae
or
rclb
je
mov
or
mov
test
ret
std
xor
inc
push
mov
xor
sahf
clc
mov
xor
hlt
shll
imul
sub
sbbl
in
mov
add
push
cwtl
xchg
fsubl
adc
cld
push
push
xchg
inc
inc
out
in
sub
and
mov
pop
push
es
sub
mov
aaa
roll
lahf
pop
adc
shlb
and
jmp
in
jmp
hlt
inc
sbb
in
sbb
dec
repnz
out
cmpsb
loop
mov
dec
add
sbb
pop
sbb
pop
add
rol
nop
add
xlat
jne
ret
stos
xchg
pusha
inc
dec
dec
add
sub
cmp
fwait
mov
je
ret
in
ret
insb
enter
sbb
push
push
out
gs
pop
lret
dec
repz
mov
mov
cmp
gs
lock
push
adc
fcomps
jle
xchg
inc
xchg
add
loop
cmp
push
and
inc
aad
dec
jnp
sub
fidivl
out
int3
es
movsb
inc
aaa
fnstcw
pop
rolb
adc
shrb
jp
repz
inc
loopne
jl
push
ljmp
iret
loopne
cmp
leave
pushf
sub
or
subl
dec
jns
mov
popa
ret
mov
cmp
mov
push
adc
test
lock
xlat
cvtpi2ps
pop
icebp
xor
ljmp
aad
pop
xor
aam
inc
adc
mov
imul
mov
ja
xchg
addr16
sbb
in
cs
mov
or
or
or
inc
repnz
pop
mov
insl
fiaddl
enter
lret
je
sub
inc
push
mov
in
sbb
push
xchg
add
popf
adc
mov
mov
outsb
ja
call
sub
inc
lock
push
data16
dec
lret
sub
sbb
jmp
mov
and
imul
call
sub
scas
inc
cmp
std
xchg
pop
fmuls
adc
jg
jno
push
cvttps2pi
mov
ja
sub
or
adc
or
aad
pop
hlt
xchg
out
push
mov
jle
or
loopne
sub
stos
je
mov
addb
frstor
sub
and
movsl
enter
icebp
cmc
mov
repz
aaa
insl
mov
add
adc
daa
cld
or
push
add
xor
scas
int
or
mov
sub
stos
xchg
add
add
test
push
call
pop
push
and
jns
cmp
mov
cs
outsl
stos
mov
movsb
cmp
test
sub
mov
mov
add
adc
cmp
je
outsl
push
inc
inc
lods
cli
movb
xlat
jl
mov
addr16
stos
dec
test
xchg
mov
xchg
mov
iret
ret
add
in
lret
jg
mov
mov
dec
mov
adc
jae
and
ljmp
push
outsb
lahf
xchg
cmp
test
inc
add
imul
insb
mov
out
popa
jg
subb
sbb
mov
jno
clc
stc
sub
pop
pop
push
test
cmp
jns
xchg
inc
leave
sbb
lea
cmpsb
shl
inc
das
lret
rol
insl
cmpsb
sbb
arpl
test
sbb
scas
test
jecxz
jnp
push
pop
in
aad
or
pop
or
ds
xchg
out
packssdw
in
sbb
and
enter
inc
or
mov
jns
jae
jg
jae
shll
in
push
sbb
adc
in
dec
lods
int3
scas
jne
sti
enter
push
data16
lret
jbe
or
shll
loop
and
fdivrp
adc
pop
roll
jp
inc
xchg
xchg
sub
inc
enter
leave
cwtl
xor
jp
xlat
inc
push
jns
xchg
mov
imulb
lcall
jb
adc
or
adc
mov
frstor
shrb
xor
fwait
test
and
inc
outsb
inc
pop
fimuls
mov
mov
push
pop
ret
lahf
fidivrl
rcrb
jno
or
pop
out
mov
aam
lcall
dec
sbb
add
xchg
pop
xchg
in
or
dec
test
xchg
mov
mov
mov
sti
sub
inc
mov
mov
jmp
cwtl
orb
sbb
pusha
dec
pop
movsl
add
into
movsb
push
inc
lret
ret
imul
mov
pop
mov
int
aam
addr16
adc
lock
movsb
shr
jle
dec
cs
pushf
dec
imul
pop
mov
lea
pop
adc
cmpl
jne
pop
xchg
pop
push
cmp
pop
dec
xor
arpl
cmp
dec
mov
cltd
mov
fdivs
add
ficompl
xor
inc
adc
push
jmp
jns
inc
jle
or
orl
loope
cld
push
adc
sbb
jbe
sbb
cltd
testb
push
shlb
rclb
mov
dec
icebp
shrl
cmpsl
adc
sbb
arpl
jno
insl
enter
ss
fcoms
xchg
outsb
xor
mov
sub
cmp
daa
shr
fldl
and
inc
cvtps2pd
gs
inc
ss
fimuls
mov
push
dec
dec
lcall
cs
push
arpl
dec
aam
xor
push
aad
jle
pop
shlb
xchg
sub
ljmp
sahf
dec
dec
jg
stos
push
push
mov
cmp
cltd
sarb
in
sbb
cli
pop
jge
dec
mov
rolb
and
mov
sbb
cltd
ret
call
jge
xor
push
xor
cmp
sbb
clc
push
xor
or
je
push
mov
incl
stc
cmpsb
dec
mov
pop
dec
cmpsl
fbld
sbb
dec
out
cs
mov
out
lods
fcomp
loop
mov
push
mov
outsl
idivb
push
in
dec
and
adc
inc
out
push
mov
mov
adc
or
pop
sbbl
std
sahf
pop
ret
jne
scas
icebp
leave
mov
push
imul
xor
xor
sbb
ror
lea
adc
pop
sbb
loope
stos
jle
mov
add
loopne
sbb
cmp
lods
cmp
sbb
loopne
xchg
pop
sbb
test
push
pop
sub
lods
sarl
fisubs
sbb
les
outsl
xlat
pushf
or
lods
mov
pusha
cmp
cmc
shll
xchg
push
jbe
sub
push
fwait
add
outsl
pop
clc
xchg
lret
insl
or
inc
push
cld
das
and
scas
stos
push
adc
lods
rcll
clc
in
adc
fistps
inc
dec
fsubrl
xor
cmp
inc
xor
pop
jmp
push
data16
pushf
mov
dec
addr16
aad
sbb
mov
aaa
enter
std
sub
in
lcall
mov
outsl
aam
push
popa
les
ja
adc
jnp
mov
sbb
cmp
or
pushf
mov
loope
and
add
mov
jnp
notb
ja
and
in
xchg
dec
add
xchg
cli
mov
mov
in
mov
jmp
mov
inc
ficomps
dec
mov
in
or
xchg
inc
loop
cmpsl
cmp
push
ss
repz
outsb
cmp
sbb
je
fwait
mov
out
test
xchg
aas
jb,pt
fwait
mov
fadd
jge
pmuludq
shr
hlt
adcb
movsl
xchg
inc
sub
std
and
push
es
add
pop
in
sbb
jno
std
xor
int
sbb
jo
jge
test
bound
sub
add
jge
mov
hlt
xor
hlt
movsb
or
call
sub
jae
stos
aam
sbb
into
scas
nop
pop
aad
inc
out
dec
je
sub
mov
iret
adc
repz
sbb
repz
pop
inc
and
mov
out
mov
pop
aaa
loop
stos
arpl
clc
cmp
dec
imul
mov
repz
adc
push
pusha
jle
icebp
jmp
fcoml
out
es
paddb
mov
pop
lahf
repz
and
add
push
mov
sub
aad
sti
stos
roll
and
hlt
and
sbb
and
and
pop
cmp
scas
cmp
sbb
fwait
sub
dec
xor
sub
lock
or
mov
aas
mov
test
arpl
xchg
pop
rcr
stc
mov
mov
jae
jmp
and
rcr
sti
cltd
enter
out
je
push
rep
scas
adc
dec
test
rcrl
mov
jo
xchg
pop
sbb
inc
pushf
sub
and
rcl
and
add
lahf
add
add
add
add
dec
jae
jb
jbe
and
inc
dec
push
dec
push
xor
and
add
cmp
add
aas
xor
cmp
inc
insl
dec
and
insb
add
push
jp
add
xor
xor
and
push
jns
xor
xor
aaa
push
cmp
push
inc
insb
inc
dec
jae
xor
imul
xor
inc
outsl
outsb
xor
cmp
inc
dec
xor
aaa
dec
push
and
cmp
imul
dec
xor
aaa
js
push
data16
jp
add
xor
gs
add
jae
add
sbb
add
inc
adc
jmp
adc
sahf
insl
adc
xchg
push
adc
lods
or
adc
lods
pop
adc
sbb
add
adc
roll
add
add
add
jb
add
adc
cmp
add
or
add
adc
add
and
add
adc
adc
fimuls
add
adc
test
add
sbb
add
pop
adc
mov
pop
adc
cltd
pop
adc
dec
dec
adc
mov
adc
fwait
cmp
adc
adc
and
add
push
adc
mov
adc
in
sub
adc
add
adc
pop
and
add
add
add
dec
adc
mov
add
add
add
and
add
inc
adc
scas
jb
add
sbb
adc
xchg
jns
add
adc
push
dec
adc
and
push
je
insl
dec
add
push
outsl
cs
add
inc
push
arpl
jns
cs
inc
add
aaa
aaa
gs
and
and
insb
aaa
xor
jae
push
xor
dec
jbe
pop
dec
je
dec
bound
jne
cmp
xor
jae
arpl
push
add
gs
and
add
fs
js
dec
xor
push
jp
xor
sub
and
xor
sub
and
js
xor
js
dec
jbe
jne
xor
and
push
data16
jne
pop
imul
js
xor
xor
ja
push
and
and
inc
outsb
fs
insb
and
ss
and
xor
push
arpl
gs
inc
xor
add
push
pop
imul
inc
add
fadds
in
inc
add
fadds
in
fadds
lock
hlt
fadds
clc
fadds
cld
fadds
add
inc
add
inc
add
flds
or
inc
add
flds
adc
inc
add
flds
sbb
inc
add
flds
and
inc
add
flds
sub
inc
add
flds
xor
inc
add
flds
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
flds
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
flds
enter
int3
flds
rcr
inc
add
flds
inc
dec
push
pop
dec
ss
inc
inc
pop
push
push
xor
dec
dec
pop
dec
dec
inc
dec
add
dec
xor
inc
pop
cmp
dec
inc
dec
aaa
pop
xor
pop
inc
pop
xor
dec
pop
pop
ss
aaa
dec
push
add
dec
pop
inc
push
push
xor
inc
xor
ss
push
dec
pop
pop
inc
ss
pop
push
add
xor
push
dec
pop
pop
dec
dec
dec
dec
push
add
dec
pop
cmp
dec
xor
inc
pop
xor
xor
dec
xor
aaa
cmp
pop
push
dec
pop
aaa
dec
push
push
inc
dec
add
aaa
pop
xor
cmp
dec
dec
push
pop
push
xor
xor
pop
cmp
dec
push
dec
pop
dec
dec
dec
pop
inc
push
cmp
pop
dec
add
xor
push
push
xor
dec
xor
add
inc
pop
xor
push
xor
add
dec
pop
dec
aaa
cmp
add
xor
pop
xor
push
add
xor
push
push
pop
dec
pop
pop
push
pop
cmp
inc
dec
push
xor
cmp
cmp
xor
push
add
add
pop
add
inc
add
add
pop
add
dec
add
pop
add
pop
add
push
add
add
add
cmp
aaa
add
inc
add
add
add
add
add
add
dec
add
aaa
add
pop
add
add
dec
add
xor
add
add
pop
add
add
dec
add
pop
dec
add
xor
pop
add
pop
add
add
add
dec
add
xor
cmp
xor
inc
add
add
add
cmp
xor
add
pop
add
add
dec
dec
add
push
add
inc
add
add
inc
add
pop
add
add
add
add
xor
xor
pop
add
inc
add
dec
add
add
push
add
add
cmp
dec
add
add
add
add
add
inc
push
movsl
push
xchg
in
movsb
nop
gs
xchg
xchg
add
pop
outsl
push
jb
jbe
ja
pop
bound
arpl
arpl
data16
inc
js
jo
bound
add
outsl
add
dec
out
ltr
add
or
add
jecxz
aam
dec
add
mov
add
add
push
add
add
flds
add
pop
add
test
add
add
push
fwait
xchg
fmul
in
mov
and
nop
nop
mov
bound
xchg
fdivr
mov
adc
push
cli
movsl
aad
xchg
js
pop
ja
jmp
sbb
loop
mov
hlt
jae
daa
lret
js
sub
cmp
ffreep
btc
adc
push
outsl
loopne
add
aas
sub
arpl
sbb
push
cwtl
pop
add
xor
push
or
sub
clc
jbe
mov
aas
xchg
iret
rolb
cmp
push
insl
jnp
and
testb
adc
in
inc
jmp
dec
decb
out
jp
mov
cli
ja
mov
loop
ja
addl
loope
jae
dec
jb
out
test
test
mov
out
mov
and
movsb
enter
xchg
fisubrs
xlat
xor
sbb
rcrl
popl
jmp
out
sub
loope
dec
xor
inc
aaa
add
lcall
mov
in
adc
subb
mov
in
sbbb
jno
jl
adc
push
shl
std
pop
enter
jbe
ljmp
mov
and
ret
mov
pop
js
mov
jp
and
jmp
imul
loopne
sti
adcl
xchg
jns
push
inc
fwait
cmpsb
jge
dec
mov
adc
lret
inc
ja
and
push
mov
and
out
push
aad
ficomps
fnstenv
mov
sub
into
mov
or
in
ljmp
and
cmp
cmp
cmc
stc
fcoms
call
xor
add
lock
into
pushf
dec
pop
mov
and
vpminub
push
stc
lods
sarb
cmp
mov
fldl2t
negb
popa
cmp
imul
push
jle
push
pusha
cmp
jae
into
loopne
lahf
xchg
aaa
lcall
pop
cltd
push
dec
fadds
inc
or
fnsave
mov
lds
mov
aad
xchg
inc
lret
int
jo
hlt
or
mov
push
shrl
push
push
insb
shlb
jmp
jo
dec
inc
popa
popa
jge
mov
mov
mov
jnp
int3
aaa
mov
lahf
mov
lret
or
xor
cmc
pop
sahf
push
jbe
or
sbb
mov
dec
and
clc
ret
mov
mov
das
test
mov
sub
push
loop
jb
mov
push
mov
fwait
adc
add
jns
test
mov
lcall
add
mov
arpl
jno
adc
jl
push
push
xchg
sub
test
insl
repz
popf
std
xchg
pop
pop
testl
imul
aam
xor
xchg
sbbb
add
sbb
push
test
mov
mov
cwtl
sbb
inc
xchg
sub
cmp
add
sbb
sub
sahf
jle
imul
inc
ja
sbbb
dec
jge
cmp
aad
xlat
ja
movsb
mov
sub
sub
lcall
pop
xchg
je
shll
adc
popf
mov
add
add
je
mov
inc
data16
stc
xchg
in
ret
and
or
pop
frstor
movhps
xor
add
sbb
mov
lea
push
shll
inc
jo
adcb
out
icebp
daa
or
pop
jnp
mov
adc
adc
xchg
pop
andl
or
imul
aaa
jns
lds
pop
jne
add
and
cmp
fimull
lods
lcall
xchg
pop
sub
sub
add
js
or
dec
jns
ret
sub
fists
adc
rolb
mov
xor
cmc
mov
enter
or
push
fstps
adc
mov
popf
icebp
mov
ficompl
popf
clc
repz
scas
fs
mov
mov
and
popa
roll
andl
add
idivb
dec
aas
dec
adc
std
data16
mov
inc
xor
inc
or
add
add
xor
push
in
push
inc
and
jp
lret
je
repz
pop
push
and
mov
dec
sub
scas
sahf
push
dec
pop
cmp
mov
insb
cmp
nop
xor
ds
mov
mov
lods
or
ficomps
dec
test
sub
jmp
ds
mov
mov
andb
pushf
jge
enter
mov
xor
or
imul
in
jb
cmp
jnp
ret
pop
in
out
loop
clc
jmp
mov
shrl
ret
scas
addr16
inc
jb
shlb
dec
int
sarb
nop
lds
aaa
pop
jbe
mov
pushf
sub
pop
mov
pop
icebp
mov
js
push
push
and
aas
shl
sbb
sbbl
cmp
mov
shrl
lret
js
dec
sbb
scas
mov
lock
cmovbe
shrl
adc
adc
inc
cs
xor
add
out
xor
push
aaa
lret
shrb
push
hlt
pop
dec
sbb
xor
xor
mov
and
ficoms
xor
daa
sbb
addl
push
sbb
dec
repz
sbb
xchg
sub
nop
bound
les
and
mov
sti
sbb
inc
mov
imul
inc
push
mov
jo
pop
push
call
lds
xchg
ss
je
fmuls
outsb
stc
fldpi
adc
gs
xchg
xchg
mov
and
and
mov
leave
outsb
push
lock
mov
jl
pop
popa
add
ss
popf
nop
cmpsb
xchg
fwait
and
enter
dec
repnz
arpl
mov
dec
ss
hlt
or
ja
adc
pop
and
jg
jge
or
ljmp
pop
xchg
mov
in
dec
jno
insl
stos
jle
clc
xchg
mov
or
popf
jp
fmuls
sub
mov
sub
scas
shr
jns
js
ficoml
daa
inc
pop
dec
sbb
es
mov
pop
sub
mov
cld
rclb
adc
pop
sbb
add
inc
adc
and
adc
inc
lahf
adc
std
xchg
mov
dec
inc
jl
jg
xchg
out
mov
std
out
sub
cld
in
push
xor
popf
shlb
fiadds
jle
jbe
xlat
int3
mov
out
xor
idivb
or
lahf
fs
ret
daa
adc
pushf
call
insb
mov
sbb
stos
out
pop
xchg
and
int
cmc
cwtl
mov
mov
cmp
loope
cmp
in
jb
cmpsb
cmc
shl
jp
subb
faddl
mov
insl
cmp
mov
push
gs
cs
daa
push
lds
lahf
pushf
mov
sub
fdivrs
ret
andl
or
fwait
or
and
dec
push
fistl
pop
das
daa
xor
arpl
cmp
adc
mov
dec
sub
in
lods
xchg
jl
mov
shrl
shrl
shl
push
jge
mov
das
push
sbb
pop
inc
mov
mov
sarl
lret
pusha
inc
fimuls
ja
lcall
subl
test
in
addl
aad
xchg
je
jnp
mov
lea
fsubs
add
or
out
aaa
ds
push
xchg
es
mov
and
fcomps
fwait
mov
test
out
sub
cmp
out
jp
mov
fcompl
in
pop
pushf
xor
js
lret
cmp
mov
adc
sbb
dec
les
or
jo
fneni(8087
mov
mov
jg
xchg
cmp
jno
xchg
and
mov
filds
addl
lcall
or
pop
xor
sub
or
add
aaa
sbb
mov
cmpsb
test
fcmovnbe
cmc
push
imul
test
aam
mov
clc
add
pop
rcll
rclb
adc
fisttpll
sub
mov
sahf
mov
and
jo
jo
addr16
repnz
cmp
test
push
jg
mov
mov
pop
stos
push
shl
push
cmp
in
out
lahf
loopne
das
xor
js
dec
inc
push
inc
icebp
mov
jno
and
mov
xor
and
jg
sub
push
scas
sub
add
aaa
sub
leave
xor
push
pop
cld
test
jbe
ficompl
sbb
dec
sbb
icebp
subb
data16
pop
iret
dec
arpl
push
aaa
jp
idivl
lret
dec
pop
loopne
bound
inc
clc
nop
mov
push
gs
jb
xchg
cltd
cmp
das
mov
push
sti
mov
leave
fmuls
movl
xchg
bound
and
xchg
push
pop
cltd
dec
mov
sarb
outsl
pop
xchg
dec
dec
shr
inc
fstpl
jmp
into
call
movsb
data16
fcmovnb
js
adc
lods
outsb
mov
lret
imul
xchg
pop
lods
lods
sahf
add
std
inc
jmp
cltd
ja
aad
and
jnp
insb
push
xchg
cmp
out
sub
mov
test
loopne
xor
xchg
add
fists
mov
rorl
jne
xor
pop
mov
xchg
add
adc
in
ror
push
fstpl
mov
add
movsb
iret
jnp
cs
sub
or
dec
mov
inc
push
clc
cmpsl
and
imul
subl
je
rcrl
dec
sbb
xchg
pusha
repz
mov
repnz
adc
arpl
sub
stos
clc
jl
xchg
jmp
and
ret
inc
repnz
jae
mov
cmpsl
pop
push
jbe
push
mov
add
loopne
outsb
lret
in
adc
jne,pn
pop
jb
mov
xchg
stc
mov
lret
add
adc
int3
xchg
rcrl
rorb
mov
adc
popf
loop
sub
out
push
jge
insl
pop
cltd
ret
and
test
out
jge
push
pop
leave
cmp
push
inc
xor
inc
xlat
sub
out
adc
push
into
xchg
cmpsb
pushf
xlat
dec
and
cmp
and
aaa
sub
xchg
xor
or
aad
aas
xor
sub
push
pop
movsl
jno
fiadds
sub
jae
jo
push
adc
pop
int3
insb
mov
pop
insl
in
mov
pop
jne
fdivrl
stos
in
xor
idivb
and
cwtl
jg
stos
add
add
lods
loopne
jmp
push
call
jnp
sbb
xchg
int3
nop
dec
mov
inc
loopne
rorb
pop
pop
xchg
loope
popf
mov
lahf
pop
shlb
mov
shl
mov
sbb
lods
add
mov
imul
mov
iret
ret
cmp
int3
jp
lahf
out
inc
ret
shl
sub
popf
mov
pop
popf
mov
bound
scas
mov
lahf
push
xchg
inc
xchg
push
add
mov
lret
ja
adc
dec
sbb
sahf
dec
cs
jge
inc
xor
mov
xchg
inc
cmp
sub
push
cli
int
les
scas
imull
ret
int
ret
pop
dec
push
pop
lcall
ja
xchg
fisubrs
jmp
mov
mov
jle
in
hlt
jecxz
push
jbe
dec
push
js
or
xor
pusha
scas
dec
repnz
or
sahf
dec
adc
rcrl
dec
aad
dec
out
jno
cltd
push
out
rcrl
mov
scas
in
dec
jg
xchg
and
stos
mov
lds
nop
stos
mov
in
push
out
lcall
adcl
fimuls
or
jae
xchg
fidivrl
mov
sti
std
jp
shlb
sub
pop
and
jbe
xchg
dec
mov
adc
pop
or
push
add
lret
mulb
xor
sarl
dec
adc
out
mov
rcr
sub
lret
mov
pop
loop
insb
pusha
incl
or
call
fs
cmpsb
push
xchg
cli
dec
sti
push
cli
leave
xchg
imul
lds
mov
ret
mov
leave
add
addr16
inc
scas
mov
fs
ficompl
lea
test
jbe
xchg
jg
icebp
es
cmp
bound
aaa
imul
mov
ds
dec
ds
jmp
cli
xchg
sub
pop
mov
das
dec
pop
pop
sub
loopne
outsl
imul
dec
andb
imul
roll
sub
jge
xchg
nop
inc
jnp
insl
std
pop
rol
mov
xchg
sbb
int
mov
sti
sbb
inc
mov
mov
ja
cmpsb
out
dec
mov
and
inc
push
jnp
lret
inc
decb
jnp
mov
dec
test
insb
add
mov
test
sbb
pop
dec
or
js
push
mov
cmpsb
insl
mov
fcoms
cmp
mov
add
popf
jbe
daa
dec
or
lretw
inc
popf
mov
xchg
lret
push
loopne
jl
cld
pop
iret
push
mov
xchg
cmp
pushl
sub
insb
or
nop
outsb
mov
std
insl
push
push
test
popa
and
stc
push
ljmp
xlat
and
mov
cwtl
in
and
lcall
cltd
mov
inc
sbb
mov
arpl
xor
xchg
mov
or
inc
loop
test
push
or
and
cwtl
or
sbb
mov
test
pop
cmpsl
mov
mov
push
imulb
adc
add
loopne
sub
jp
jge
or
repnz
repz
mov
sub
ljmp
dec
mov
scas
lcall
outsl
jne
pop
xor
mov
int3
mov
divl
dec
in
mov
aaa
int
mov
popa
xchg
mov
dec
aad
xor
ffree
xor
pop
cmp
addr16
or
push
mov
jg
push
sbb
jg
cmp
iret
ja
jnp
in
xorb
jge
bound
repz
pop
dec
or
dec
jbe
mov
add
push
mov
mov
push
mov
pop
in
cmp
add
sahf
jecxz
adc
inc
ret
std
xlat
call
hlt
cmc
test
adc
mov
popa
in
in
or
mov
mov
push
lret
out
sub
pop
push
cli
or
mov
in
aam
mov
inc
or
or
add
sbb
js
jl
mov
int
add
adc
jae
jno
jo
mov
add
fs
filds
nop
jle
mov
xchg
mov
xchg
cmpb
jns
adc
add
push
mov
sarb
add
sbb
or
pop
in
sbb
movsb
cmp
js
xor
add
pop
notb
data16
out
push
jo
nop
leave
or
add
call
popf
fs
shr
popa
scas
xchg
cmp
test
jb
repnz
and
scas
mov
fcmovne
dec
bound
jns
xchg
je
cmp
mov
stc
imul
sub
mov
movsb
cltd
rolb
test
shlb
cpuid
pop
aas
mov
push
add
dec
shll
dec
dec
shll
xchg
arpl
cmp
int3
and
push
fmul
fcoms
rcrb
add
pop
sbb
cmp
ret
leave
dec
push
js
push
rorb
mov
call
cmpsl
sbb
add
data16
sbb
and
push
idiv
dec
stc
mov
cmp
pusha
pop
in
xchg
shll
pop
jp
push
mov
into
xlat
shll
fs
test
aam
dec
gs
cs
push
enter
ja
ljmp
push
cs
mov
aaa
test
and
adc
popa
push
pop
cltd
clc
daa
or
in
daa
inc
in
dec
pop
inc
sub
cmc
sub
sbb
mov
push
pop
shll
push
shlb
adc
xor
imul
lock
popa
ds
das
int3
std
fdivrp
mov
push
fcoms
clc
cltd
popa
ficoms
xchg
mov
clc
sbb
add
das
mov
push
lods
lods
xor
negl
xchg
jns
sahf
mov
mov
or
pop
and
sbb
dec
lock
shrl
lods
cmpl
xchg
jns
adc
pop
xchg
daa
imul
lock
je
outsb
inc
pop
popf
das
dec
sbb
mov
test
cmc
add
scas
cmpsl
mov
push
es
xor
jecxz
mov
icebp
cltd
dec
aas
hlt
xor
jnp
test
pop
fdiv
pop
and
mov
xchg
jbe
or
leave
jnp
inc
fs
sub
cmc
test
mov
dec
dec
shrb
sbb
in
mov
fwait
add
xchg
in
and
inc
push
test
ret
scas
push
ret
add
int3
scas
mov
push
inc
pop
loope
ficoms
push
bound
add
jmp
insl
cmp
lock
movhps
fldenv
pop
sub
enter
jo
subl
push
sub
test
ljmp
pusha
in
xor
aaa
in
cmp
or
testb
cmp
adc
lods
mov
cmc
std
jmp
and
mov
lods
xor
daa
mov
and
cld
fimuls
jb
xchg
in
add
add
movsl
jae
cltd
add
nop
orl
repz
out
jecxz
sub
stos
cmp
and
mov
xchg
ret
cmp
outsl
ds
sbb
sub
mulb
add
cmc
push
insl
leave
adc
cmp
fcoms
sbb
inc
out
xor
mov
in
cltd
inc
je
mov
ret
xchg
cltd
cmp
push
xor
jp
adc
pop
je
cltd
lret
push
xchg
adc
popa
insl
xchg
mov
into
add
xor
pop
js
cmp
and
mov
call
jmp
mov
xor
lods
idiv
ljmp
push
sbb
pop
mov
hlt
xchg
sti
out
push
push
int3
call
sbb
popa
mov
sub
mov
mov
add
mov
cmpsb
cmc
sbb
jg
cmp
insb
out
mov
je
or
nop
mov
insl
and
cmp
cmpsl
ljmp
sbb
or
push
xchg
and
cmp
mov
pop
pop
dec
jge
cs
pop
xor
or
jp
imul
das
pop
scas
aam
scas
call
inc
mov
jg
pop
in
in
aam
xchg
and
jns
loop
outsl
clc
sub
scas
fcmovnu
xchg
and
fisubrs
mov
dec
loop
shll
adc
shr
cmpsl
mov
lcall
repz
dec
push
mov
ds
xor
cmp
or
or
js,pn
inc
mov
cmpsb
add
rcl
sbb
inc
loop
test
sub
in
inc
inc
insb
sub
in
in
pop
jmp
or
addl
sub
into
out
jmp
or
inc
sub
and
mov
and
xchg
pop
clc
adc
add
push
out
in
movsl
jnp
xchg
jp
pop
sub
and
pusha
pop
insl
leave
dec
stos
pop
rolb
imul
dec
fnsave
jo
pusha
jns
mov
add
notl
dec
addb
data16
adc
dec
sub
shll
mov
lret
add
cmp
xlat
pop
jl
testb
xchg
jae
cmp
jge
mov
addl
pop
xlat
sbb
and
mov
loope
daa
xchg
int
lcall
xor
push
loopne
xlat
out
sbb
jno
pushf
adc
js
inc
aaa
jb
cmp
mov
cwtl
and
jg
cmp
sub
push
dec
jo
fcmovnu
adc
cld
mov
xor
fisubl
mov
mov
cmp
addl
inc
sahf
inc
fcompl
ja
idivb
outsb
setbe
jecxz
notb
pushaw
mov
mov
scas
pushf
mov
mov
inc
andl
arpl
repnz
stos
adc
add
adc
sbb
inc
test
cld
rclb
mov
test
jl
insl
dec
pop
lods
cmp
in
fs
sbb
xor
cmpsl
add
nop
les
iret
jae
sub
rol
add
fnstsw
insb
xchg
inc
add
jp
js
js
popa
mov
dec
clc
sub
adc
movsl
add
ret
cld
cwtl
add
mov
icebp
scas
loopne
pop
andb
shl
dec
rcrb
inc
mov
adc
push
notb
imul
lea
mov
mov
test
sub
inc
sbb
imul
xchg
or
mov
dec
jbe
sub
sub
test
cmp
ja
addr16
adc
pop
cmpb
lods
mull
fcompl
sarl
mov
inc
push
mov
push
push
push
fcoml
mov
loope
outsb
pushf
cmpsb
lods
je
sub
fs
js
leave
xchg
subl
mov
lock
imul
jg
add
and
orb
xor
mov
dec
imul
jns
mov
bnd
sbb
or
cs
add
in
shll
xchg
push
jne
subl
cltd
adc
aam
mov
rolb
pop
jge
into
inc
fadds
inc
ret
inc
cmc
inc
pop
cmpsl
imul
aam
call
std
fndisi(8087
push
leave
xchg
pop
cltd
stos
jo
mov
push
shl
cmc
lret
mov
and
js
ds
jne
pushf
lods
dec
les
inc
orb
ss
cmp
sbb
pop
xchg
xor
mov
pop
lock
addr16
jae
jb
ss
divb
mov
push
in
sbb
icebp
clc
test
ret
dec
movsb
inc
or
push
scas
mov
stc
sarb
push
xchg
inc
cmpsl
int3
icebp
xchg
push
mov
sub
push
shlb
or
insb
jne
out
ljmp
popa
std
mov
pop
adc
sahf
or
or
into
push
push
out
pop
test
mov
bound
insl
les
bound
jge
data16
aad
adc
cmpsl
les
mov
movsb
mov
stos
xchg
ja
rcl
inc
sub
aaa
add
lods
loopne
lret
mov
inc
cmp
lret
cmp
add
scas
fdivs
xorl
cmp
cmpl
ret
inc
or
bound
add
std
jns
fidivrs
push
nopl
das
sbb
adc
fldl
insl
inc
out
or
push
out
pop
pop
nop
mov
das
mov
xor
jg
mov
jl
shlb
push
aas
mov
pop
arpl
neg
out
cs
lahf
aad
fwait
mov
add
lcall
insl
inc
je
repnz
jecxz
pop
test
daa
mov
cmp
cli
jmp
cld
das
repnz
daa
adc
sbb
orl
movsl
cmp
mov
push
mov
lods
adc
ja
sbb
cwtl
cmc
inc
mov
inc
fisubl
addl
popf
insl
imul
mov
popa
push
inc
pop
jns
shlb
cmp
out
xchg
adc
lds
dec
push
out
loopne
int3
xlat
mov
dec
out
dec
mov
mov
cmp
sbb
adc
mov
daa
imul
sub
imul
aad
xchg
and
xlat
loopne
icebp
aad
mov
jp
lea
lods
call
nop
dec
ss
or
aas
testb
aas
xor
cld
fwait
xchg
mov
pop
sub
and
cs
xchg
mov
inc
out
inc
psrad
aas
dec
sbb
lock
test
popa
and
out
lods
mov
ss
ja
xchg
xor
jne
xchg
cmpsb
pop
adc
push
mov
jns
xchg
or
loopne
lock
cmp
insl
loopne
inc
push
add
cmp
pop
cwtl
sarb
push
push
add
scas
in
xchg
and
cmpsl
not
inc
jno
in
pop
fs
xchg
sti
aas
fdivl
jnp
test
add
jnp
pop
loop
adc
jo
and
orl
negb
push
cmpsb
pop
pop
mov
gs
cli
sub
jle
add
mov
sahf
std
push
jecxz
xchg
dec
dec
ficompl
loopne
loop
fnstsw
lods
in
loopne
mov
adc
shrb
inc
enter
fldcw
cmp
notb
aad
xchg
mov
sbb
mov
push
ror
xor
scas
inc
pop
cwtl
stos
push
push
sbb
int3
inc
mov
and
xchg
jo
outsb
lea
mov
pop
xor
lea
out
xchg
mov
in
mov
xchg
xor
mov
dec
jb
ss
adc
je
xor
add
pcmpeqd
xchg
dec
andb
lret
pop
lret
outsl
pop
pop
imul
das
mov
les
iret
scas
insl
xchg
fildll
roll
test
iret
sarb
xchg
clc
loopne
cmc
cmc
jle
subl
fdecstp
sbb
dec
mov
mov
lea
cwtl
stc
pop
out
out
or
cmp
ss
in
xchg
and
xchg
data16
scas
xchg
push
fs
fsubrl
xchg
pop
sub
decl
pop
lret
repz
lds
mov
mov
mov
lcall
in
shlb
mov
cwtl
xchg
add
inc
push
jp
add
xchg
cmp
gs
mov
sbb
cltd
outsl
adc
fidivrs
mov
jecxz
idiv
mov
adc
mov
mov
addb
mov
sahf
push
ret
pop
xlat
fistpll
fildl
or
popf
xchg
mov
gs
ret
inc
mov
rclb
pushf
or
movsl
and
jl
int3
pop
cwtl
mov
neg
jmp
adc
xchg
daa
sbb
popa
insb
icebp
inc
and
or
test
loop
or
xor
mov
clc
ja
scas
mov
add
les
xchg
popa
or
mov
in
aad
jge
fcomps
pop
scas
insl
call
jae
xor
loopne
xor
hlt
out
pushf
mov
nop
pop
mov
imul
push
pop
outsb
out
test
movsbl
int3
lahf
or
stos
mov
mov
push
sbb
mov
stc
push
xor
in
xlat
out
jbe
add
mov
test
cmp
pusha
jnp
fs
pusha
or
loopne
stos
push
sbb
std
stc
xchg
push
fucomi
test
mov
out
jg
cmp
jp
cmc
adc
rorl
adc
mov
cmp
jo
inc
outsl
test
mov
dec
in
ss
mov
std
ljmp
inc
push
mov
mov
in
shl
and
dec
testb
push
data16
mov
mov
test
sub
cmp
xchg
jbe
sti
xchg
pop
lcall
ret
cmpsb
xchg
xlat
test
rcll
ja
mov
jge
bound
aaa
pushf
mov
xor
in
loope
lds
pop
pusha
dec
lahf
or
cmpsb
pop
pop
mov
rorl
cs
mov
popa
sahf
pop
add
mov
inc
and
add
aas
jae
add
js
cmp
movsl
xor
push
mov
mov
and
lret
jle
or
stc
xchg
mov
lcall
lahf
lock
call
out
mov
into
stos
mov
divl
in
pushf
jg
repnz
push
xchg
dec
pop
push
or
and
inc
mov
fwait
cmp
pop
fs
or
stos
loope
jne
or
and
fucomip
fwait
sbb
inc
int
cmpsl
or
jno
xchg
fstpl
push
popl
sti
xchg
lods
mov
push
mov
cld
insb
fidivl
mov
lods
sub
jne
aaa
dec
or
mov
lods
jne
mov
cltd
jmp
dec
outsl
sub
in
into
mov
mov
aaa
pop
jp
ret
rclb
ret
push
push
cltd
hlt
xor
sahf
arpl
out
ss
sti
sbb
icebp
fdivrl
ljmp
jge
cmc
rcrb
clc
loop
mov
mov
dec
mov
leave
ljmp
lcall
add
xchg
in
cli
mov
mov
cld
mov
lcall
or
push
test
sbb
cld
and
les
mov
xchg
enter
sub
adc
jae
xchg
xor
jg
lea
enter
mov
adc
lcall
pop
stos
ficomps
popf
pushf
in
loope
mov
fwait
test
jp
cld
nop
fnstenv
sbb
sbb
cmp
add
inc
out
or
sbb
test
dec
mov
mov
testl
push
add
fwait
push
int3
push
pushf
int
sub
test
cltd
negb
clc
mov
pop
int
stos
mov
out
pushf
or
rclb
or
push
cwtl
lret
shrl
lds
cmp
xchg
inc
cmc
repnz
mov
cmp
or
xor
or
outsl
gs
mov
inc
leave
fisttps
pop
nop
xor
or
xchg
cmpsb
fwait
enter
xchg
xchg
aad
fcom
lods
sbb
push
dec
xor
outsb
mov
and
es
rorb
mov
xchg
das
out
icebp
movsb
rolb
ds
scas
ljmp
lods
popfw
or
outsb
ja
dec
jb
and
add
jl
shr
es
or
stos
std
stc
add
mov
clc
shlb
loop
or
rcrl
xchg
rolb
sub
add
mov
std
mov
into
inc
push
aaa
fistpl
sbb
fbstp
pop
pusha
arpl
pop
lret
into
xabort
adc
jmp
xchg
cltd
outsb
jbe
cmp
cmp
sbb
pusha
std
inc
jge
mov
cmpsb
daa
loop
add
jmp
das
dec
cmp
mov
scas
testb
insl
push
scas
xor
mov
fdivr
jge
test
out
lret
mov
outsl
fistps
iret
je
pop
in
push
outsb
pop
cmp
out
mov
jno
xor
fstl
jle
and
xor
add
lcall
push
xchg
add
sahf
packssdw
ffree
mov
aam
shlb
popa
lds
jge
imul
pop
xchg
sub
sbb
test
inc
cmc
pop
dec
arpl
jecxz
pop
aaa
mov
out
sub
mov
mov
popf
push
ljmp
leave
pop
fists
call
addl
lahf
ret
sub
out
mov
mov
sub
cmp
dec
lret
pop
sbb
and
gs
jg
cs
fsubrp
decl
insl
jmp
mov
mov
pop
andb
add
push
std
add
mov
std
sbb
sbb
popf
es
daa
dec
sbb
push
ret
pop
dec
cli
inc
xor
and
add
rclb
push
lret
lea
inc
jecxz
hlt
xchg
mov
pop
sub
mov
movsl
cmp
mov
icebp
cmp
es
popf
mov
arpl
and
ljmp
pop
pop
mov
push
cmp
push
pop
push
pushf
and
sub
dec
fisubs
ds
add
aad
popf
fwait
xchg
or
ficompl
mov
loopne
add
dec
push
lea
leave
bound
mov
jo
mov
push
xchg
sti
dec
lock
push
lret
dec
mov
dec
fsubrl
push
repnz
lret
push
cmpsb
ror
stos
add
imulb
mov
lods
sbb
fs
xor
or
into
lods
popa
loop
in
push
stos
inc
push
std
lock
subb
lods
sbb
pop
lods
pop
sub
sarb
cmpsl
mov
jnp
mov
adc
into
pushf
push
repnz
insb
int3
mov
cwtl
xchg
outsl
idivl
xchg
repz
jp
fs
xchg
dec
outsl
pop
leave
cld
xchg
pop
mov
jmp
mov
sbb
jns
jno
or
sub
ljmp
fcomps
xor
push
and
sub
sub
mov
push
cmpb
add
aam
push
xor
ret
sbb
cwtl
hlt
aas
sbb
dec
stc
and
pop
stos
int
xlat
cmp
nop
and
jb
add
cmpsl
pop
gs
int3
std
std
add
imul
jbe
loopne
rclb
push
shrb
jl
mov
je
mov
lds
scas
mov
in
jl
pop
mov
adc
aas
cmp
enter
mov
mov
sub
ret
inc
push
and
lods
std
and
cmpb
mov
push
mov
stos
mov
das
cmp
outsb
mov
cwtl
xchg
sub
das
jno
nop
mov
mov
into
sbb
sbb
xor
cmc
jb
fwait
rclb
test
adc
test
jae
sbb
pop
sbb
cmpsb
sarl
inc
daa
push
ret
dec
mov
ret
fists
xlat
xor
ret
cmp
xor
pop
jae
xchg
sarl
aas
jg
or
mov
jnp
push
movsb
xchg
jo
arpl
mov
std
dec
cmc
mov
aaa
or
xchg
lret
out
cmp
int
xchg
in
cmp
mov
fidivrl
in
fidivrs
mov
pop
add
pop
lods
jmp
mov
leave
push
cmp
repnz
fisubrl
jmp
es
inc
or
sbb
push
out
in
mov
jne
clc
xorps
sbb
sarb
sbb
add
mov
fadds
lcall
add
daa
sub
add
pusha
mov
pop
mov
sahf
mull
add
dec
push
int3
cli
mov
xchg
std
push
mov
pop
enter
cli
jo
iret
inc
cli
sub
adc
xor
xchg
lods
or
pop
xchg
add
repz
inc
ss
pop
enter
ss
shl
xlat
outsb
mov
sub
cmp
dec
decb
cmp
inc
clc
in
sub
inc
push
xor
addr16
jne
fimull
mov
sub
sbb
mov
shrw
fadd
and
ret
test
push
js
gs
fsts
lock
in
in
lea
sahf
bnd
mov
mov
jne
repnz
js
xchg
cmpsl
xlat
mov
mov
pusha
add
ds
xor
fnsave
jnp
sbb
mov
sbb
mov
mov
div
cmp
aam
mov
rcrl
dec
insb
jo
xor
or
lds
sub
lahf
cltd
mov
popa
outsl
nop
pop
sbb
cwtl
stos
cmpl
fwait
xlat
fcomi
fwait
lds
inc
lods
xchg
cmc
aas
fiadds
cmp
pop
cmp
lret
imul
jnp
jno
adc
xor
sbb
call
ret
leave
sbb
cwtl
cmp
hlt
inc
xchg
jp
inc
cwtl
fstpt
and
ja
lods
mov
fcom
inc
push
daa
in
jecxz
fwait
iret
out
and
cmp
repz
add
popf
pop
ret
leave
stos
fcompl
lcall
mov
mov
test
fstpt
ljmp
xchg
lods
pop
adc
jne
jecxz
lds
jae
push
push
mov
and
pop
fdivrl
hlt
jbe
mov
mov
sub
rcl
push
push
notl
push
aaa
ljmp
lods
push
cmpsl
clc
mov
lock
xchg
mov
pop
or
iret
fistps
dec
dec
xchg
imul
pop
push
pop
pop
jl
shll
adc
jbe
daa
mov
mov
fwait
das
mov
dec
aas
out
out
jb
mov
push
stc
arpl
mov
push
cmp
push
shll
pop
imul
cltd
or
fwait
mov
addl
cmp
adc
mov
rcll
das
fildll
xor
xchg
rcrb
into
push
test
rorb
xchg
jnp
cmp
pop
push
mov
ror
test
xorl
test
mov
and
fwait
jae
pop
xchg
iret
sbb
pop
outsb
xor
lock
inc
in
fwait
inc
mov
or
lea
sub
pop
sbb
aam
sub
sti
mov
lods
mov
das
xchg
mov
push
cltd
sahf
mov
and
pop
addr16
nop
popa
sbb
cli
call
fistpll
popf
push
mov
xchg
sbb
add
ds
and
insl
adc
pop
push
cmpsl
mov
cmc
lods
xor
les
mov
jg
xorb
lock
bnd
movsl
mov
mov
xchg
mov
repnz
jbe
xor
mov
int
xchg
lock
and
push
clc
jg
int
and
dec
lret
push
fsubrs
pop
sbb
sarl
cltd
add
add
and
pop
pop
ljmp
dec
dec
in
xor
push
ret
shrb
sub
cmpsl
mov
mov
test
das
pushf
inc
cmc
mov
mov
xor
test
adc
dec
je
mov
not
cmp
pusha
hlt
sub
cmp
ljmp
cli
cld
xchg
out
pop
jns
mov
mov
es
movsl
push
lock
stc
mov
int3
loopne
dec
or
mov
aam
jbe
ss
aam
aas
mov
out
push
xchg
cwtl
or
out
dec
adc
inc
rcrb
mov
fisubs
mov
shll
jl
lret
jmp
sub
adcl
lods
ja
mov
pop
mov
aad
rolb
fistpl
das
into
dec
mov
mov
fwait
add
xchg
mov
dec
out
fistl
std
in
push
lods
or
in
hlt
jbe
aad
repnz
cli
or
movsb
push
or
cmp
inc
dec
rolb
lock
push
mov
lea
stos
sbb
fcoms
aas
cmp
cmp
mov
lahf
mov
das
faddl
xor
aas
pop
jg
lds
jmp
addb
loop
add
xchg
ja
add
adc
sarb
fcmovb
mov
xor
subb
lods
inc
ret
inc
or
les
daa
dec
bound
dec
jno
gs
adc
popa
xor
lods
mov
cmpl
negl
and
and
inc
fmull
adc
popa
xchg
insb
push
ds
test
insb
push
js
push
mov
cwtl
add
add
ret
inc
hlt
inc
testb
dec
pop
xchg
cld
daa
sub
and
push
jp
sub
je
lods
cmp
fs
cmpxchg
pop
sbb
stc
push
bnd
arpl
cmp
fucomip
dec
jnp
or
pop
and
and
movsl
lret
dec
notl
jge
cmp
mov
ret
in
notb
xchg
and
bnd
xchg
sbb
add
mov
push
push
mov
andb
movb
sti
xor
jge
aad
dec
xchg
mov
sbb
jecxz
xchg
sti
popf
xchg
fnstcw
add
add
add
xor
add
add
add
add
add
and
xchg
movsb
jl
inc
mov
nop
nop
cmc
sub
cmp
sbb
cmp
push
sarb
scas
jp
jb
adc
test
je
aad
ss
sub
sub
pop
orb
jo
fldt
fs
cwtl
movsl
lcall
jne
add
mov
adc
ds
xchg
add
gs
cld
insl
pop
imulb
mov
mov
testb
pop
xlat
adc
lds
mov
push
std
gs
into
lock
xor
cmp
lahf
adc
sub
add
adc
mov
pop
fnstenv
fsts
add
cmp
repnz
adc
mov
es
lods
sbb
mov
pop
pop
mov
inc
lods
sysenter
xchg
fwait
pop
cmp
jb
cmp
fldl
add
mov
test
mov
lock
sub
ds
xchg
inc
es
jne
test
lahf
xlat
cmpsb
pop
insl
sub
ds
dec
mov
aaa
movsb
sub
mov
xor
mov
xchg
pop
mov
fdivs
xchg
push
out
or
es
loope
jl
mov
in
sub
xchg
mov
mov
imul
add
xchg
lret
loope
andb
shl
cmp
test
pushf
sbb
gs
or
xlat
mov
adc
in
je
pop
push
daa
push
xchg
xlat
inc
xchg
incl
movsl
inc
mov
jno
ljmp
lods
subl
cs
inc
lods
sub
and
iret
fs
mov
mov
or
in
fs
jns
push
mov
xor
dec
pop
mov
mov
aas
jg
aas
aam
inc
and
inc
data16
and
into
movsb
xchg
sub
or
xchg
mov
cmc
push
nop
mov
jne
sub
mov
sbb
mov
arpl
jmp
dec
xchg
xchg
popf
loop
sub
maskmovq
notl
pusha
pop
iret
fwait
xor
movl
stc
sti
popf
xor
push
sbb
xchg
push
pop
pop
and
pop
pop
mov
pushf
mov
or
test
push
and
pop
or
repz
xor
push
mov
and
outsb
fisubrl
iret
out
fnsave
test
fwait
lods
adc
mov
adc
aas
cmp
mov
out
dec
movsl
repz
jnp
rcl
stos
xchg
push
sbb
orb
lahf
enter
lock
test
push
xchg
inc
mov
stos
fsubrs
add
push
dec
jno
dec
loopne
lods
or
scas
rorb
pop
outsl
in
mov
out
les
test
gs
pop
fiadds
pop
and
push
out
fnstenv
pop
call
bound
inc
add
nop
sub
or
add
gs
jp
mov
mov
test
and
pop
stos
jecxz
shl
sub
repnz
pop
xchg
out
lret
idivl
mov
lret
lock
mov
cwtl
out
adc
xchg
sub
adc
lock
aad
lret
xchg
push
mov
dec
sahf
sarl
mov
scas
lea
push
test
pause
lcall
fstpl
sti
lds
pop
push
mov
lods
pop
out
mov
cmpsl
aad
add
in
lret
dec
cli
push
mov
jmp
add
dec
cli
aas
sti
jl
addr16
xor
or
shl
and
cmp
pop
jb
push
fldenv
cmp
aam
mov
cmp
popl
out
xor
cmp
jb
or
sbbb
les
ret
movsb
xchg
mov
mov
jae
pop
test
mov
bound
lock
insl
insb
dec
or
mov
jne
sbb
pushf
enter
jmp
jb
sub
or
xor
pusha
lods
dec
decb
xor
xlat
repnz
arpl
dec
push
cmp
icebp
fstpt
pop
repz
dec
imul
cmp
push
push
dec
and
inc
sahf
xchg
xchg
dec
lds
push
adc
pushf
aas
cmpsl
cmp
mov
mov
jae
pop
mov
fildll
mov
mov
rol
sub
push
inc
lret
ljmp
mov
push
mov
fcoms
sub
or
movsb
js
sub
xchg
enter
test
in
cmp
inc
fisubrs
sub
adc
sarl
adc
mov
dec
mov
int3
pushf
popa
mov
dec
icebp
adc
stos
out
push
jnp
into
ja
clc
jge
or
insl
push
push
imul
mov
movaps
jb
mov
mov
hlt
testb
pop
lds
test
pop
sbb
xor
outsl
add
cli
xchg
dec
hlt
and
mov
sbb
outsb
pop
dec
xchg
pusha
fwait
dec
adc
shll
es
out
jecxz
mov
shll
incl
adc
cmp
movsb
push
and
testl
pop
aam
std
call
int3
dec
xchg
mov
pusha
movsb
sub
jle
fwait
clc
fs
cld
cltd
or
sti
push
insb
mov
mov
sub
sbb
push
xchg
pop
ret
call
das
add
icebp
shlb
or
pop
mov
js
loop
mov
repnz
mov
push
lea
cld
jo
and
imul
push
push
movsb
mov
mov
cmp
test
int
jecxz
popf
sub
xor
mov
xchg
mov
jmp
dec
fmul
sub
fstl
inc
shll
iret
mov
xchg
xor
in
test
dec
mov
mov
movsb
out
insl
aam
push
pop
pop
ret
jl
add
rcll
addl
js
add
jecxz
lods
rcl
movsl
cmpsb
ret
fwait
mov
push
inc
sub
or
add
push
cmp
rorl
aam
dec
adc
popf
adc
ret
xchg
fidivrs
pushl
popf
test
mov
or
rcll
push
push
dec
dec
imul
imul
addr16
cmp
fidivrs
scas
mov
aaa
or
gs
xchg
aam
jbe
jmp
iret
cld
mov
jecxz
test
push
sar
cld
cltd
mov
mov
xor
dec
test
mov
inc
bound
sarb
mov
fsts
arpl
pop
or
das
and
push
sub
sub
ret
in
dec
shl
adc
and
sub
addr16
cmp
std
test
inc
pop
jne
sbb
sti
js
cmp
add
fldt
sbb
fwait
cwtl
adc
icebp
mov
push
aam
jae
xor
jle
sub
insb
shufps
rcll
arpl
jl
sub
imul
pop
test
loope
sbb
gs
ljmp
pusha
push
aaa
sub
iret
xor
push
dec
xlat
insl
movsb
test
jbe
add
test
in
int3
sti
push
and
adc
jae
pop
push
push
push
jns
into
imulb
outsb
imull
das
add
add
dec
sub
popl
shrl
les
stos
xchg
mov
inc
push
jo
mov
scas
jnp
pop
int3
sbbl
into
call
sbb
int
pop
iret
fbld
movsb
fcmovne
aas
sub
out
push
inc
cli
out
sbb
sarl
loop
adc
or
adc
leave
jle
outsb
sub
jnp
ss
and
mov
fidivrs
inc
sbb
orl
cmpsl
sub
ficoms
aaa
in
push
sub
idivl
mov
dec
fdivs
call
insb
stc
fdivrl
adc
imul
repnz
shll
stos
jg
outsl
push
jb
lds
pop
push
inc
push
fwait
xor
adc
mov
inc
inc
mov
test
inc
cltd
iret
insb
mov
negl
pop
repz
sub
icebp
mov
stc
into
adc
hlt
mov
das
dec
or
stos
mov
cmp
push
aaa
lea
or
pop
add
jno
xor
mov
ret
test
dec
push
xchg
outsl
cmp
lcall
xchg
pushf
adc
pushl
pop
mov
sbb
clc
cmp
outsb
push
les
xor
or
cmpsb
rol
inc
lret
cmp
xlat
jg
int3
mov
rcll
and
cwtl
iret
ret
and
fistpll
mov
mov
mov
cmp
adc
out
cmp
popa
adcl
insb
out
mov
add
jge
push
shr
pop
push
add
xor
mov
xchg
jl
xor
orb
scas
dec
loop
outsl
push
lock
repz
loopne
mov
and
inc
dec
inc
ss
dec
push
jp
aaa
add
push
daa
mov
jmp
gs
je
cmpsb
mov
mov
sub
fwait
lret
inc
lods
sub
in
and
ror
and
jnp
call
pop
add
data16
arpl
add
pop
out
inc
les
inc
adc
cmp
je
dec
imul
pop
imul
sub
into
lods
add
inc
pop
push
fnstsw
push
cld
ss
mov
ja
xchg
add
outsb
movsl
pushf
call
sbb
scas
add
pop
mov
jle
sti
sbbl
shlb
jo
pop
jae
and
or
jl
push
cmp
mov
cld
jge
repnz
or
mov
outsb
movups
push
mov
mov
enter
rcrl
and
rcrl
xor
cmc
in
jmp
loop
add
sub
stos
xor
fdivrs
xor
lcall
addl
jge
jl
jg
xor
fcmovu
daa
mov
mov
adc
xchg
flds
adc
xchg
sub
push
roll
insb
push
ljmp
lods
lahf
push
dec
popa
movsb
cmp
inc
and
data16
fs
arpl
add
inc
fldcw
mov
mov
sbb
inc
and
dec
ficoms
mull
mov
iret
cmp
sub
clc
call
cld
pop
out
and
xor
jp
and
mov
mov
iret
push
sub
adc
shll
mov
sub
mov
xor
stc
sti
lret
xor
movsl
adc
xchg
pop
outsl
enter
enter
in
loopne
and
mov
cmp
xchg
xchg
out
xchg
adc
push
push
lea
or
call
faddp
pop
mov
xor
test
or
push
sub
stos
mov
imul
fadds
ljmp
out
popa
lret
fisubs
mov
xchg
inc
imul
or
xor
imul
push
or
stc
sbb
jo
pop
push
packuswb
ljmp
pop
inc
sbb
jo
leave
int
lds
lea
pop
add
bound
arpl
adc
mov
out
mov
adc
scas
sub
xchg
cmovns
imul
push
jmp
and
shrl
sub
mov
ja
psubd
rcl
hlt
and
push
out
psubsb
xor
pop
mov
fbstp
or
out
arpl
inc
inc
mov
sti
push
pop
xchg
xor
xorl
repnz
loopne
xor
pop
mov
cmp
dec
mov
and
jmp
jb
mov
xchg
das
sbb
or
jns
outsl
mov
pop
sbb
and
cmp
mov
inc
scas
push
xorb
loope
mull
add
lds
lock
dec
inc
jns
imul
mov
pushf
push
scas
jno
mov
repz
mov
fisubs
sbb
imul
pop
mov
xlat
ja
fildl
test
xor
or
jne
add
clc
clc
aad
clc
outsl
lret
pop
bound
adc
jnp
cmpsl
rcll
rorb
in
mov
jbe
mov
ret
pop
in
fwait
into
adc
pop
cmpb
test
and
dec
add
lock
jno
addr16
lods
popa
push
push
cli
mov
pop
jns
push
adc
jno
cli
stc
jge
int3
aam
jmp
dec
decl
inc
mov
hlt
and
pushf
rcrl
mov
or
xchg
ljmp
xor
rol
popa
ret
add
stc
push
fcoml
sti
cmp
mov
or
xor
cmpsb
dec
out
in
push
std
mov
in
or
insb
xor
std
in
dec
xchg
inc
mov
popa
inc
inc
in
pop
add
adcl
inc
xchg
mov
mov
mov
dec
aas
and
mov
and
mov
in
xchg
test
or
jns
test
pop
pop
pop
aad
add
lea
jge
jno
mov
iret
pop
and
movsb
outsl
pop
insb
in
mov
lods
div
push
pop
std
movsl
in
frstor
sub
cmp
push
jno
aad
mov
adc
fdivrs
mov
ss
sbb
mov
call
adc
lcall
xchg
data16
shll
mov
jae
std
inc
test
lods
and
nop
adc
sbb
repz
and
popa
lds
mov
push
popa
test
js
dec
sbb
add
sub
repz
hlt
sarb
inc
subl
fisubrs
outsl
cmp
pop
mov
adc
pop
testl
stc
or
jno
std
sub
or
pushf
rep
aad
jmp
xchg
out
sub
loop
cltd
mov
int
or
movb
add
adcl
mov
sub
addr16
data16
fidivrs
in
pmulhw
out
jne
test
mov
sbb
movsl
add
push
popa
mov
jnp
mov
movsb
call
mov
hlt
mov
push
cltd
xchg
inc
sub
mov
pop
jb,pt
testb
loop
leave
div
std
int
push
xor
fmuls
into
shrl
in
inc
in
sub
stos
inc
jae
cltd
rcl
push
pop
ror
push
frstor
stos
lods
mov
popa
jne
in
sub
cmpl
pop
xor
and
je
call
mov
xchg
test
dec
or
mov
pop
xor
mov
fcomi
das
jo
out
lcall
dec
sub
add
outsb
mov
xchg
and
in
scas
xchg
mov
push
das
sub
cmp
outsb
clc
icebp
jns
shrb
outsl
nop
pop
jno
rorb
pop
outsl
pop
lret
pop
in
rcrl
roll
jp
jmp
jno
cwtl
fcoml
pop
loope
insb
mov
int
jp
pushf
pop
stos
sub
sahf
and
mov
push
f2xm1
hlt
int
dec
data16
fcmove
arpl
test
sbb
push
xchg
cwtl
in
dec
xchg
push
int
out
les
pxor
mov
es
xchg
jl
add
leave
rorl
jg
sbb
pop
shrl
lods
leave
push
inc
loope
xchg
cld
sbb
dec
push
xor
insl
clc
dec
cmp
dec
sbb
sub
mov
pop
inc
mov
push
shr
push
add
imul
and
sarb
fcmovnu
into
mov
push
xchg
mov
cmp
outsb
mov
testl
movb
push
dec
fistpll
xor
sar
dec
push
xchg
jnp
cmc
add
out
ljmp
imul
sti
mov
outsl
repnz
push
int3
popa
or
mov
lahf
sbb
dec
adc
adc
xlat
lods
insl
inc
adc
cmpsb
and
hlt
adcb
sar
ss
sbb
push
ss
pop
lret
dec
lods
cmpsb
cmpb
repz
sbb
pop
push
cmp
roll
jae
add
mov
gs
inc
xor
aad
aas
sub
data16
clc
enter
and
mov
inc
sahf
cwtl
mov
push
nop
jg
test
and
cltd
out
mov
xchg
sub
cmpsl
push
push
imul
fstpl
ds
int3
or
nop
mov
push
dec
ljmp
dec
les
adc
dec
mov
loopne
lahf
iret
push
out
jnp
mov
xchg
cmc
je
inc
stc
adc
cmpsb
xchg
out
mov
jp
jae
xchg
out
ret
mov
adc
adc
sbb
popfw
push
test
cmp
pop
pop
cmpsb
pop
pop
xchg
adc
cmp
pop
mov
sbb
out
push
or
rcrl
jbe
add
test
dec
ljmp
loopne
repz
cld
movsl
fildll
fsubrl
lcall
outsl
in
adc
jno
and
push
jmp
push
ss
sub
fadd
sbb
rol
mov
inc
les
mov
ja
lea
stc
test
mov
mov
fs
stos
push
insl
in
pop
lods
mov
sahf
test
pop
test
lods
lret
cmpsb
pop
push
cmpsb
push
cmp
push
shr
loope
sti
dec
dec
add
in
in
sbb
gs
nop
mov
jne
popa
cs
jae
push
rcrl
or
sbb
lcall
das
mov
daa
pop
addr16
mov
pop
xor
cwtl
mov
xor
adc
pop
lock
es
loope
lahf
popf
adc
jp
nop
fucomp
out
les
mov
in
jle
fiaddl
movsl
jb
xor
xor
cmp
sub
test
push
or
stos
js
jb
mov
xchg
sbb
jo
ficoml
ja
mov
mov
mov
push
mov
dec
dec
push
cmp
shl
cmp
jne
dec
push
test
scas
mov
add
daa
mov
or
bound
in
add
outsl
mov
popa
divb
pop
push
leave
mov
mov
pop
adc
sub
or
jmp
ja
jnp
lock
aam
push
movsb
sbb
out
jle
sbb
adc
mov
adc
jle
cmp
jg
daa
enter
inc
adc
nop
mov
xchg
mov
out
mov
or
cmp
popa
and
pop
mov
mov
repz
or
fistl
rolb
lcall
cs
dec
or
xchg
stc
jp
add
lods
pop
push
xor
scas
aad
and
bound
fldl2t
es
sti
xor
dec
arpl
outsb
jno
dec
mov
clc
rcl
pop
rcr
and
adc
inc
outsb
loop
xchg
ret
xor
push
sub
sbb
and
mov
mov
cld
mov
mov
jmp
imul
inc
lret
in
push
jle
cli
fs
dec
mov
das
lods
lock
cmp
aas
cmp
jmp
push
xchg
jp
rcr
lock
fcomi
xor
pop
std
jb
mov
jecxz
shlb
mov
cwtl
cmpsb
lods
das
cli
add
or
sub
cmp
xchg
mov
sbb
xorb
les
cmpsb
pop
mov
pop
incl
es
hlt
mov
stos
mov
arpl
jo
jae
jns
scas
sbb
mov
pop
pop
sti
lods
mov
push
inc
call
sub
out
imul
sbb
push
adc
aad
adc
test
arpl
sti
mov
mov
sub
lret
negl
jp
mov
fs
jecxz
ret
movsl
hlt
sbb
mov
js
and
add
add
jns
sarl
data16
ds
mul
outsb
adc
mov
dec
enter
icebp
or
rclb
sub
fmull
sbb
inc
ss
filds
rorl
arpl
cwtl
and
insl
bound
adc
jmp
lahf
add
jnp
dec
and
push
or
repz
mov
add
adc
daa
ret
pop
das
icebp
stc
lods
sbb
cwtl
mov
leave
pop
test
pop
cmp
push
cli
xchg
shrl
add
push
and
jnp
sti
fucompp
fwait
loope
sub
repz
insl
les
mov
mov
into
ss
jb
pop
sbb
inc
push
add
inc
sbb
lods
lock
cwtl
or
add
aas
xor
bswap
add
gs
sub
into
add
loopne
cwtl
nop
add
jle
cmpsb
movaps
jp
nop
and
lock
aas
rorb
out
dec
rolb
xchg
push
es
mov
iret
test
mov
dec
shr
js
shrl
inc
pop
lea
fsubrl
loop
ret
ret
insb
xor
inc
mov
loop
xor
push
jmp
loopne
inc
xchg
pop
mov
mov
inc
fs
pop
and
movsl
lock
movsl
repz
das
dec
lock
loop
jge
dec
jge
out
cmp
sbb
cmp
clc
mov
fwait
inc
sub
aad
inc
lret
xchg
mov
push
xchg
pop
push
or
or
loope
in
mov
inc
adcb
fdivl
mov
or
mov
dec
push
loopne
cmpsb
loopne
dec
stc
cs
lcall
out
xchg
rcll
fwait
mov
and
adc
test
fidivrs
test
mov
sbb
cmp
mov
jns
clc
jbe
push
cmp
adc
sti
aaa
bound
xor
xor
or
int3
mov
jb
gs
stos
cltd
leave
jmp
mulb
sbb
sbb
popa
je
repz
mov
enter
das
xor
cmc
pusha
arpl
fimull
lret
outsl
out
xor
insb
out
out
push
mov
jg
sbb
jecxz
outsb
loop
mov
mov
push
xchg
adc
xor
mov
notb
lea
xor
lock
jmp
insb
aad
in
fstpl
fs
adc
fldt
outsb
sbb
or
cmpsb
enter
outsl
mov
xlat
fdivrl
jo
cmc
cltd
xchg
fwait
xor
pop
dec
pop
addr16
lock
les
shll
and
fisubrs
pop
pop
jp
push
std
test
call
sub
scas
cmp
cmp
cmp
lds
adc
add
aad
pop
jl
push
movb
cli
or
dec
xchg
inc
xor
popf
out
sar
out
pop
adc
aaa
rcll
sbb
or
add
int
jp
jns
inc
loopne
xchg
inc
add
sbb
or
in
test
cwtl
fsubl
sahf
sbb
mov
sbb
andb
inc
jmp
lret
lods
stc
iret
mov
je
mov
lock
jae
dec
sbb
dec
js
fs
mov
add
xor
inc
cmp
jecxz
cmp
test
outsl
out
mov
mov
cmpsb
jno
push
xchg
shll
imul
jo
push
xchg
jp
mov
js
inc
jle
xchg
pop
lret
in
sbb
inc
repnz
fisubrl
mov
fcompl
call
cmpsl
into
in
xchg
decb
lds
mov
xor
dec
or
dec
mov
mov
sub
inc
push
push
mov
sbb
repz
pusha
push
ljmp
mov
in
push
lock
es
shlb
inc
subl
pop
mov
das
or
jne
in
pop
ret
in
cmp
mov
inc
xor
int
pop
dec
push
pop
xor
daa
push
xor
adc
aaa
ljmp
or
push
mov
lock
mov
xchg
call
lods
ja
xor
inc
daa
mov
or
cli
jl
xor
xor
push
push
xlat
leave
decb
and
ljmp
adc
mov
push
push
icebp
scas
push
jb
push
fwait
mov
movsl
mov
push
push
in
push
test
arpl
xor
mov
mov
in
and
stc
sbb
jp
fdivrp
call
pop
push
and
mov
fs
jp
mov
sub
cwtl
jmp
in
and
nop
fsub
outsl
sbb
lock
dec
lret
pusha
ds
lods
sti
push
add
cld
mov
aaa
lods
xor
inc
mov
call
mov
mov
push
push
xchg
lock
sbb
mov
mov
int3
xchg
cltd
xorb
sub
and
or
nop
stc
repz
rcrb
or
push
rorb
dec
xor
push
inc
cs
push
sbb
stc
pop
in
mov
repnz
cld
mov
inc
push
xchg
jp
push
icebp
daa
jmp
leave
sbb
in
cltd
adc
dec
push
scas
cmp
notb
sti
pop
sbb
orps
in
leave
shl
int3
mov
into
xor
mov
loop
outsb
push
js
in
inc
inc
and
ds
and
xor
cmp
mov
js
outsl
sub
ljmp
sti
aam
mov
stc
pop
cs
fsubp
cmpsb
fdivrl
lods
data16
cmp
mov
mov
lahf
frstor
dec
orl
cmp
lret
jne
shlb
addb
or
sub
xchg
aad
flds
xor
add
dec
test
outsb
pop
and
mov
andl
loop
lods
mov
cwtl
inc
lods
outsl
imul
sub
inc
shrl
gs
lcall
sbb
dec
insl
push
jno
xchg
jecxz
ret
mov
and
xor
out
sbb
in
mov
pop
int3
sbb
cmp
fisubs
add
lret
imul
cmp
or
mov
enter
arpl
lret
repz
out
mov
imul
jl
aaa
aam
mov
movl
adc
inc
ds
sub
jecxz
arpl
push
mov
fidivs
push
dec
lret
imul
leave
mov
test
out
aad
es
and
or
out
loop
dec
outsl
sti
stos
xor
in
xor
movb
dec
jns
repz
xchg
mov
cmpsb
mov
and
ret
mov
cmp
mul
inc
or
test
pop
pop
push
mov
push
and
xor
sbb
mov
mov
push
out
mov
jne
dec
flds
jge
push
cmpsl
fs
fnstsw
outsl
jbe
xor
mov
add
dec
bound
add
lret
xorb
fdivl
dec
adc
xor
fwait
xchg
cmpsb
xchg
int
mov
adc
fwait
aam
aam
out
xchg
pop
or
push
pop
shl
xchg
dec
jmp
xchg
cmp
repz
ljmp
jge
fadds
sub
mov
push
movsb
std
xchg
mov
or
fucomp
dec
cmp
out
add
push
addr16
int
xor
mov
adc
add
fwait
cmp
incl
fadds
ss
fwait
sahf
sub
xchg
aaa
pop
sbb
and
in
mov
inc
movswl
mov
movsb
insl
jo
and
xor
adc
xchg
mov
mov
push
or
in
sbb
add
push
mov
pusha
push
xchg
or
adc
and
fiadds
ret
push
jp
and
icebp
mov
add
imul
xchg
arpl
daa
adc
inc
push
xchg
cmp
fstl
iret
cmpsb
dec
mov
icebp
test
incb
sbb
dec
mov
add
inc
ja
in
pop
inc
inc
scas
cmpsl
mov
out
and
je
cmp
lret
in
push
xlat
lds
mov
cmp
or
add
dec
mov
outsb
push
scas
scas
movsb
mov
sub
jb
mov
cmp
dec
or
mov
into
xor
pop
and
jo
mov
pop
lock
pop
xchg
dec
ljmp
mov
int
lea
mov
jne
inc
mov
adc
xor
xorl
pop
xor
stos
js
dec
bnd
jl
flds
scas
or
enter
push
or
bound
call
jge
xor
mov
add
xlat
xor
stos
call
mov
shrb
imull
stos
lret
repnz
and
mov
or
sub
lret
xor
inc
fldl
and
ss
shll
sbb
adc
xor
arpl
and
stos
fmull
imul
test
push
je
pop
xor
jb
mov
mov
fs
jle
in
cmc
jae
movsb
jno
cld
mov
xchg
mov
push
imul
sahf
push
sahf
pop
push
imul
repz
outsb
or
add
inc
ss
adc
xchg
push
adc
xor
mov
jae
sarb
minps
lahf
inc
add
xor
lods
out
jbe
pop
mov
mov
scas
shlb
xchg
lods
insb
xchg
cmp
push
jb
jns
jp
mov
pop
adc
xchg
mov
dec
push
mov
adc
xchg
inc
mov
and
outsb
push
xchg
in
shrl
gs
push
clc
dec
and
mov
mov
mov
or
popa
inc
testl
sahf
mov
jb
push
roll
jle
in
mov
out
mov
push
out
xor
and
ljmp
insl
enter
insb
xchg
push
test
xchg
pop
es
sbb
je
jbe
lea
push
mov
popf
dec
loopne
sti
ret
jb
scas
lret
test
daa
inc
mov
int
insb
bound
inc
dec
call
add
mov
ja
sti
fcom
imulb
call
sub
out
loope
in
orl
outsl
insb
call
roll
incb
scas
mov
movsb
cmp
add
add
fadd
iret
jmp
push
and
and
ror
dec
scas
mov
mov
xor
pusha
data16
mov
adc
dec
adc
pop
shll
or
inc
cmpsl
out
cmp
sub
mov
push
enter
mov
cmp
push
aaa
pop
add
mov
daa
or
aas
dec
dec
cltd
cmp
jp
fs
addb
add
mov
std
outsl
mov
out
add
mov
mov
aaa
sbb
xor
int
cmpsb
and
cmp
xlat
push
push
inc
xor
mov
inc
sbb
in
hlt
sub
adc
mov
sti
leave
jg
sub
lea
and
in
xchg
jns
stc
pusha
add
mov
lcall
loop
jae
jecxz
jne
shll
pop
ret
or
adc
pop
inc
dec
ficoms
aam
jo
dec
ja
mov
test
inc
ficoml
inc
mov
mov
xor
pop
pop
aad
sbb
mov
aam
lods
imul
xchg
adc
outsb
dec
aad
jg
xchg
jnp
push
iret
xchg
out
mov
popa
imul
and
xchg
xchg
mov
lahf
scas
add
pop
jp
sbb
ds
inc
xchg
nop
pushf
and
sti
dec
aaa
les
in
js
jns
and
mov
aaa
pop
sbb
daa
jecxz
mov
jle
xor
out
lds
std
call
fnstsw
ficoml
mov
mov
pop
add
insb
jb
cmp
inc
sti
cmp
and
sub
test
mov
xor
sbb
or
sbb
xor
push
jb
push
jg
mov
dec
pop
ss
dec
adc
mov
and
stc
ds
mov
dec
loop
mov
std
push
jmp
sti
cmpl
call
sub
rolb
jle
movsl
cmp
cmp
pop
inc
bound
pop
jnp
loopne
out
mov
push
insl
mov
je
pusha
jge
clc
xor
pop
pop
mov
jb
cmc
xchg
clc
jne
fmuls
cmp
shll
and
lods
btr
ret
jp
mov
pop
loop
popf
cmp
aas
loopne
mov
sbb
out
pusha
mov
xchg
data16
mov
stc
addr16
aaa
es
es
or
push
insl
jb
test
int
shl
lret
pop
dec
cs
mov
cmp
inc
or
sub
xchg
mov
dec
adc
sbb
xchg
adc
leave
adc
xchg
jmp
pusha
add
subl
and
mov
add
dec
das
leave
icebp
jnp
dec
inc
test
cmp
mov
test
out
sub
lcall
cmp
testl
mov
insb
lret
pop
cmp
cmc
inc
jp
or
out
sbb
dec
adc
push
cli
push
cmpl
mov
mov
cmp
mov
and
cmovp
adc
mov
xchg
jnp
xchg
imul
mov
aas
pop
popa
mov
or
in
cmc
hlt
jns
inc
iret
fstpt
push
mov
fmul
pop
in
pusha
imul
pop
push
push
or
push
fcmovne
xor
testl
inc
push
xor
movsl
loopne
mov
sub
in
mov
jns
inc
sbb
jnp
call
sahf
xor
and
in
repz
arpl
adcl
pop
cmp
es
add
sbb
dec
dec
push
mov
jecxz
adc
lds
jbe
push
jp
xchg
adc
xchg
xchg
add
jnp
mov
mov
and
sub
mov
fbstp
lret
inc
pop
jne
test
repnz
fnstcw
andb
xchg
decb
dec
nop
cli
xor
xchg
in
ss
movsl
pop
dec
mov
data16
pop
aaa
adc
sub
je
xchg
clc
fisubs
in
sub
push
or
scas
cs
sbb
aam
cmp
xchg
stos
lahf
and
push
movsb
pop
lods
jmp
cltd
mov
push
dec
cs
das
loopne
int3
aad
mov
mov
fwait
or
pop
adc
jmp
out
faddl
jmp
sub
imul
sub
fistl
push
mov
lds
lret
andb
mov
insb
fcompl
popf
mov
mov
pushf
cmpb
add
xchg
outsl
add
int3
les
push
or
sbb
iret
popf
out
aas
push
cltd
dec
cmp
dec
fidivs
fs
cmp
jecxz
cld
pop
sub
cmpsb
pop
cld
stos
icebp
or
mov
scas
dec
aam
nop
and
xchg
addb
loop
push
pushf
xchg
test
xor
inc
les
push
add
push
mov
into
in
pop
rol
adc
inc
rorl
push
mov
push
pop
lahf
sub
daa
cmpsb
xor
scas
insl
dec
insb
add
jl
in
fadds
fists
lahf
stc
sub
dec
sti
or
push
int
into
leave
jmp
sub
imul
popa
adc
jae
dec
dec
mov
dec
fsubr
enter
and
xchg
jp
push
cwtl
xor
mov
cmp
in
mov
jbe
imull
loope
mov
cmpl
jge
jg
insb
mov
je
add
jmp
mov
out
jge
shll
test
pop
pop
mov
xchg
push
sub
or
cli
pusha
dec
int3
pop
loope
ja
mov
fisttps
xchg
or
inc
pop
adc
mov
add
divl
bound
test
xor
jb
push
xor
and
es
xchg
jp
pop
lret
loope
mov
gs
out
push
icebp
lcall
das
cmc
pop
mov
mov
orb
jg
scas
xchg
rcrl
ds
cli
and
fmul
out
xlat
xor
jae
fnclex
add
outsb
xchg
xchg
jecxz
cmp
dec
pop
mov
add
mov
mov
adc
jmp
mov
aad
pushf
arpl
pop
and
push
outsl
mov
shrl
decl
xor
add
cmp
and
add
aad
iret
cmp
js
movups
movsl
fdivl
mov
outsl
fildl
mov
fistps
jecxz
mov
inc
jbe
iret
test
lods
cmc
push
mov
ss
es
fs
orl
lcall
lods
mull
dec
push
mov
push
lcall
int3
les
les
fcomps
addr16
push
mov
xchg
inc
jmp
fwait
movsb
jb
jno
or
and
xor
lea
out
cwtl
jl
dec
cmp
cmpb
aad
fwait
push
mov
cwtl
mov
loope
enter
movsb
mov
adc
outsb
enter
push
jmp
xor
mov
push
mul
mulb
or
mov
mov
push
rcll
clc
stos
out
mov
dec
clc
popf
push
sarl
nop
lods
lods
in
cmp
popl
jns
jo
stos
adc
jg
sbb
adcb
arpl
inc
lret
cmpsl
xchg
data16
insl
test
idivb
push
mov
cmc
stos
popf
fs
mov
dec
add
mov
cmp
scas
jp
sbb
dec
testl
add
or
repnz
cmp
lods
dec
sub
inc
loope
jns
aas
xor
enter
mov
mov
jo
pop
mov
dec
jmp
push
add
sbbl
std
pop
fwait
xor
xchg
ljmp
leave
inc
inc
push
pop
xor
lds
cmc
mov
cmp
mov
into
mull
sbb
movsl
mov
in
add
out
mov
ds
aad
fadd
aas
pushf
mov
loopne
jge
sub
lahf
pop
scas
adc
cmp
xlat
ljmp
and
je
pop
adcb
imul
push
adcl
ja
and
pop
pop
push
mov
sub
out
sbb
cmc
les
jecxz
sbb
mov
popf
push
cmpsb
arpl
cli
out
in
adc
cmp
sub
fmuls
adc
leave
mov
cmp
inc
daa
push
loopne
jne
and
xchg
and
adc
dec
xor
bound
mov
add
in
push
je
jmp
add
cli
push
arpl
sbb
pushf
stc
stc
pop
cmp
xchg
xchg
cmp
push
adc
out
addl
xor
cld
dec
leave
cmp
jnp
cmp
jno
idiv
mov
incb
iret
xchg
test
es
xchg
fcomps
hlt
jge
in
mov
bound
add
mov
ficomps
lock
adcb
sbb
cmp
testb
dec
fwait
mov
jne
pop
inc
repz
xlat
pop
xor
inc
aam
push
jbe
cmp
rclb
pop
xchg
lds
or
adc
jno
inc
idivl
test
dec
repz
movsb
xchg
sbb
push
lods
xor
mov
movsl
inc
xor
xchg
jmp
aas
xchg
sub
stc
aad
pusha
outsl
ret
data16
sbb
rcll
dec
mov
cmc
fcmovbe
fdivl
sub
daa
int3
cwtl
mov
inc
and
mov
or
in
lcall
andb
dec
sti
ljmp
and
pop
lods
ret
scas
popa
sbb
mov
dec
jge
cmp
dec
add
ss
cmc
mov
popf
inc
lahf
stos
mov
andb
sbb
iret
sub
andl
call
xchg
ljmp
mov
clc
stc
popfw
jle
es
data16
push
pop
rcr
push
popa
xor
jg
pop
cmpsl
out
mov
push
push
jno
sub
fyl2x
cli
loope
mov
dec
mov
or
sahf
inc
sar
mov
stos
cmp
cmp
daa
push
sbb
add
call
popa
lea
jbe
mov
cs
popf
and
add
add
add
add
xor
add
sub
add
add
add
jle
outsl
test
fsubrs
add
jne
nop
lret
mov
xor
gs
stc
cmc
pop
pop
cwtl
fcomip
mov
rcll
and
inc
loop
bound
add
mov
jns
push
add
stos
jg
and
fldt
arpl
add
mov
fcmovne
and
mov
push
sbb
dec
jno
inc
insl
jb
add
xorb
push
fs
sub
cmc
arpl
scas
test
jp
jl
inc
and
xor
int
shll
xchg
in
push
aas
sub
mov
dec
jns
sbb
es
or
sbb
js
pop
scas
in
mov
dec
and
or
dec
bound
imull
sti
inc
mov
test
jmp
xlat
lcall
push
insl
or
sahf
lcall
pop
in
in
cmc
adc
add
cmpsl
sarl
out
idivl
dec
xor
lds
and
push
jne
and
fcmovbe
lea
pop
pop
stos
stos
and
out
loopne
or
mov
repnz
pop
ja
or
mov
push
test
xchg
cmp
sbb
call
nop
or
insl
push
jmp
scas
stos
lea
rorb
insl
jno
inc
shll
clc
and
lcallw
andb
jp
data16
das
jmp
inc
ret
inc
pop
xor
mov
fistpl
hlt
and
push
jno
xor
sub
test
jp
outsl
adc
ficoms
cs
mov
lahf
scas
sub
and
sti
pop
dec
dec
gs
sbb
xchg
xor
cld
adc
mov
repnz
mov
jne
jl
sub
dec
cmpsl
dec
push
iret
push
cmp
pop
scas
mov
mov
jbe
mov
xchg
loope
xchg
mov
loopne
lahf
jne
add
in
inc
out
or
mov
inc
das
push
pusha
popl
jae
mov
mov
jmp
jl
clc
dec
pusha
cmpsl
xor
pushf
outsb
and
pop
xchg
push
repnz
jae
xchg
jns
ja
scas
stos
lret
test
push
dec
add
sub
xchg
ret
frstor
test
pop
jmp
add
mov
push
lock
dec
pop
dec
jle
dec
jmp
ret
push
add
push
push
rorb
lret
pop
jg
pop
addr16
imul
loopne
mov
cli
jmp
mov
dec
xor
fstpl
push
out
mov
repnz
push
int3
fsubs
out
mov
pusha
leave
pop
pop
stos
xor
and
inc
gs
or
jle
pop
jg
fisttpl
xchg
repz
pop
sbb
sbb
sbb
adc
cmpsl
stc
popf
test
std
ret
fiadds
xchg
inc
dec
adc
push
sub
xor
ss
pop
call
scas
rep
mov
ss
jnp
mov
mov
imul
sbbb
rorb
ret
mov
leave
pop
ret
or
sub
out
sbb
popf
or
roll
jp
adc
cmp
shrb
jp
in
mov
cltd
sub
sub
pop
jae
push
out
pop
jb
leave
jecxz
lcall
cmp
cmc
dec
shlb
push
test
std
jnp
pop
jl
pop
call
sbbl
pop
add
xchg
les
mov
rcll
and
mov
add
jl
data16
sti
call
bound
test
xchg
and
lock
lock
aas
bswap
inc
mov
addr16
jle
enter
adc
lea
imul
lods
test
hlt
xor
fwait
jecxz
sub
shlb
push
cmpsb
push
stc
xchg
sbb
in
fs
pop
cltd
iret
std
mov
dec
or
test
pop
and
outsb
push
inc
cld
xorl
in
enter
xor
pop
fs
aaa
cmp
sbb
pushf
gs
cmpsb
jmp
add
inc
pop
push
pusha
pusha
in
xor
fnstcw
xchg
imul
icebp
xchg
sbb
subb
ja
xlat
xchg
push
dec
sbb
orb
and
xor
dec
subb
sbb
dec
not
fs
and
testl
clc
sbb
sub
mov
inc
lea
and
xor
stc
int3
testb
add
xlat
or
ja
and
clc
lods
xchg
pop
scas
lahf
pusha
push
insl
cmc
lcall
test
inc
xchg
mov
adc
jnp
cmpl
imul
in
sub
leave
shl
mov
pushf
mov
js
mov
adc
xchg
inc
xor
in
cmp
jge
xor
imul
mov
enter
shld
int3
ss
adc
fwait
inc
push
mov
xlat
out
dec
adc
mov
jnp
pop
jmp
cli
jbe
dec
mov
iret
jecxz
mov
fwait
enter
sbb
add
and
repnz
pop
xor
pop
xchg
push
test
fmul
mov
stos
js
xchg
or
or
jmp
jae
sbb
mov
stos
hlt
outsl
stos
call
dec
lods
add
cmc
push
adc
push
push
cmc
and
mov
inc
xlat
hlt
add
incb
xchg
popf
mov
jne
fsubrl
sub
imul
lock
out
xchg
scas
pop
push
xlat
and
pop
sbb
mov
cmpsb
outsb
cmc
daa
add
das
lock
xchg
movsl
push
loopne
and
jns
shl
push
std
sub
xor
loop
inc
mov
mov
dec
pop
hlt
xchg
fnstenv
and
test
xchg
xor
jb
arpl
jle
jo
push
push
sbb
sbb
test
cmp
or
mov
and
popa
jg
fnstsw
dec
into
lods
mov
jmp
xor
jmp
push
mov
mov
ds
add
bound
jg
xor
sbb
push
jle
lret
adc
or
scas
push
fldenv
cli
adc
into
in
mov
iret
lods
sbb
out
into
aaa
or
pop
cmp
mov
repz
push
fsubl
or
mov
jo
insb
cmp
fsubrl
outsl
xchg
testb
dec
sub
ret
cmp
sbb
or
test
add
enter
pusha
mov
adc
mov
sub
and
dec
les
lcall
push
mov
sbb
adc
pop
xor
fstl
lock
scas
test
mov
sbbl
inc
iret
fsubs
in
shlb
imul
cmp
call
jg
xchg
test
mov
inc
inc
inc
nop
adc
or
adc
mov
sbb
lret
xchg
xor
xchg
xlat
or
int3
sub
mov
pop
jmp
fbstp
les
mov
jmp
and
kxorb
clc
or
iret
xchg
repz
jge
testl
imul
cmp
sahf
aas
dec
pop
fcmovnb
sub
popa
mov
sub
jmp
and
gs
mov
pop
popa
or
adc
jns
mov
mov
sbb
rcrb
lods
and
jg
test
cmp
out
inc
movsb
xor
ret
dec
call
pop
mov
and
mov
adc
cmp
pop
pusha
test
leave
cmp
cltd
out
push
sbb
stos
jle
sahf
or
sbb
call
mov
mov
leavew
pop
add
les
int3
mov
sub
mov
mov
add
adc
and
xor
inc
jnp
sub
sub
fistps
mov
push
dec
pop
dec
in
mov
lcall
push
mov
es
sbb
and
sbb
mov
sbb
push
dec
cmc
mov
push
jmp
repnz
inc
xor
fldlg2
sub
and
nop
and
faddl
pop
and
lods
mov
int
push
sbb
stc
jp
insl
mov
mov
sbb
add
dec
cmc
jo
rorb
lret
imul
mov
mov
mov
push
nop
mov
ror
pop
pushf
aaa
lret
cli
mov
fs
decb
pop
xorb
jmp
enter
stos
and
jo
xchg
dec
xchg
dec
adc
or
pop
cmp
nop
push
pop
cmc
sbb
mov
sbb
mov
mov
aas
sub
test
sbb
mov
sbb
sbb
xorb
sbb
adc
or
xor
pop
iret
ljmp
aaa
cmp
fucomi
sbb
fs
sub
adc
jle
jmp
into
outsb
adc
adc
cmp
xchg
mov
inc
jecxz
fiadds
or
hlt
mov
mov
lea
dec
mov
mov
popl
pop
movsb
roll
mov
fxch
mov
pusha
cs
loop
leave
cmpsb
push
dec
inc
std
cmp
cmp
push
adc
pop
loope
fisubs
inc
or
pop
add
ret
xchg
fistps
out
stc
or
inc
sbb
and
fldenv
jmp
sub
sub
add
jle
mov
inc
jmp
pop
sub
mov
test
bound
add
or
mov
dec
hlt
and
das
rcll
pop
mov
xchg
mov
cmpsb
inc
and
aam
xchg
sbb
jo
mov
jge
inc
mov
push
arpl
add
inc
mov
repnz
mov
sub
mov
out
mov
cmp
aam
mov
shll
popa
mov
mov
lea
adcb
or
xor
push
inc
or
push
sbb
cwtl
cltd
mov
cli
je
dec
pushf
mov
mov
shl
fmuls
jmp
xor
mov
or
pop
cs
mov
pop
cwtl
mov
repnz
xlat
pop
in
jge
ret
dec
and
pop
lock
sbb
adc
add
jmp
sub
dec
xor
fs
out
adc
lods
adc
mov
test
sub
inc
dec
outsl
shll
mov
fld
cmp
jb
xchg
xchg
mov
cmp
or
push
pop
dec
pop
xor
arpl
sbb
push
cwtl
pushf
sti
push
sub
bound
adc
inc
cwtl
sub
mov
cwtl
mov
stos
pusha
clc
out
stos
test
scas
push
testl
dec
mov
pop
dec
xchg
xor
mov
jns
sub
fisttps
jge
xorb
jnp
ss
repz
inc
lret
fs
sbb
add
or
ja
sub
jns
out
xchg
imul
fidivrs
mov
inc
loop
or
lock
test
test
mov
and
sub
add
xor
xchg
jae
movb
jae
add
aam
inc
into
inc
cmp
int3
fwait
xchg
pusha
outsl
cmpsl
mov
stc
mov
xlat
add
fidivrl
loope
lcall
or
mov
xor
movsl
iret
cmp
decl
mov
loop
sbb
push
cmp
dec
and
mov
repnz
not
dec
xorl
cmc
mov
or
mov
cmpsb
pop
mov
jp
test
scas
pop
or
push
xor
flds
mov
jp
cld
mov
sbb
addl
out
bound
cmc
or
les
imul
ds
repz
mov
negb
jecxz
shlb
xor
movsb
adc
rcll
mov
pop
dec
pop
lret
repz
sbb
xlat
mov
std
outsb
ds
cmp
lcall
inc
push
adc
sbbb
xchg
ljmp
jle
ljmp
mov
xor
cmp
cmp
mov
inc
dec
adc
adc
adc
push
and
cltd
dec
sbb
lods
stos
or
aaa
adc
push
push
sub
ljmp
sbb
ss
xchg
mov
addb
sti
mov
mov
lahf
imul
arpl
daa
push
mov
xchg
loopne
add
sbb
sbb
add
popa
jbe
dec
and
push
push
arpl
scas
lods
stos
sbb
fidivs
fbstp
push
push
mov
psrad
pop
pop
jbe
push
mov
add
or
stos
mov
jmp
icebp
popa
movl
jbe
int
sbb
or
ljmp
pop
dec
sub
sbb
adc
xchg
insl
imull
sbb
mov
ss
imul
and
jbe
mov
addr16
dec
insl
mov
mov
lahf
in
pop
mov
push
cmp
jb
mov
cmpsl
mov
fsubrs
aaa
xor
pop
pop
out
pusha
adc
pop
lods
xchg
mov
or
fstl
adc
mov
inc
insb
cltd
or
jmp
ja
push
imul
rolb
inc
cs
pop
add
add
loope
xchg
and
xchg
xor
mov
inc
inc
mov
push
add
out
mov
flds
jle
rolb
fldt
mov
adc
in
daa
pusha
mov
sub
cmp
lods
adc
pop
ret
insb
sbb
mov
sbb
push
fs
mov
sbb
and
inc
jbe
jg
mov
cmp
mov
pop
shrl
sub
pop
cmp
xorl
ljmp
push
sub
pop
push
cwtl
adc
xor
fcompl
les
bound
pop
or
inc
inc
loopne
lret
or
push
add
outsb
test
dec
dec
cmc
ljmp
adc
jle
jle
ret
cli
call
mov
push
add
push
mov
arpl
push
addr16
jns
ret
stc
sahf
pop
rolb
or
insl
cld
sub
pop
sbb
ljmp
call
jge
arpl
xchg
xchg
lea
fucomip
shlb
data16
enter
push
cwtl
push
clc
out
pop
xor
orb
das
out
cmp
js
push
xchg
roll
test
cmp
and
push
or
leave
mov
dec
ljmp
ds
sahf
push
out
inc
test
das
in
ja
ficomps
add
and
push
sbb
lret
clc
insl
cmp
push
imul
lods
leave
jne
fsubrl
push
sub
cld
jae
cmp
in
dec
test
xor
stos
xchg
xor
xor
pusha
mov
dec
movsl
iret
outsb
andl
xchg
or
cmp
xchg
out
mov
rcll
sbb
nop
push
out
sbb
loopne
outsb
and
lock
or
push
pop
dec
inc
incl
lods
cmpsl
xchg
and
loop
sbbl
xor
in
test
in
rorb
ret
adc
adc
enter
test
sti
ss
mov
and
push
xchg
mov
ljmp
mov
in
in
mov
pushf
jecxz
incl
mov
mov
pop
insl
and
add
jmp
add
mov
jp
repz
dec
adc
pop
inc
das
dec
sahf
lock
cmpsl
mov
cmp
hlt
rcll
jle
xor
sub
aaa
pop
push
imul
add
pop
xchg
fdivs
push
lock
fsubrl
mov
call
cwtl
push
pop
out
mov
int3
jno
aas
dec
rcrl
ror
std
xchg
sub
daa
sub
inc
jl
jge
imul
sub
xchg
lcall
loope
out
pop
mov
mov
push
test
ret
cmp
loope
push
dec
jmp
xor
dec
icebp
mov
movsb
mov
dec
mov
fcmovbe
xchg
out
sbb
add
sarl
mov
jl
dec
jg
in
out
or
mov
leave
mov
adc
sbb
adcb
mov
xchg
pop
aaa
movsl
xchg
decb
dec
sbb
call
paddb
xchg
inc
and
jle
sbb
mov
jmp
jbe
sub
xchg
push
fwait
pop
jo
fs
mov
sti
push
push
and
inc
rcrb
cli
mov
aas
add
repnz
xchg
movsl
aaa
jo
sub
dec
mov
or
mov
cltd
pop
fxch
mov
dec
dec
bound
pop
xchg
mov
adc
cld
stos
sub
sbb
fmuls
fists
fcmovne
xchg
aaa
add
lods
add
add
push
cmpsl
fucomi
lock
into
out
shrb
sub
loope
pop
ret
mov
jbe
push
jle
rcll
inc
cmpsb
adc
or
adc
push
popa
pcmpeqd
dec
add
fidivrl
in
inc
rorb
mov
jl
fcompl
ljmp
add
cmpsl
or
xchg
imul
repz
dec
jno
mov
aad
cmp
sbb
adc
or
cmp
push
or
push
int3
lods
loope
dec
leave
mov
jns
iret
pop
loope
jg
cmp
out
popf
in
aad
daa
mov
pop
and
ljmp
sarl
pushf
cmp
pop
and
push
leave
std
dec
mov
and
aaa
pop
pop
jle
mov
sbb
iret
es
adc
inc
repz
stos
push
movsl
lret
imul
lret
mov
cltd
das
dec
faddp
ficoml
out
push
movb
cmpsl
mov
mov
icebp
lods
stos
cli
rol
push
out
cmp
hlt
cmc
not
test
stc
pop
mov
pop
mov
js
aad
mov
jg
mov
sbb
mulb
out
fdivp
sbbb
mov
fwait
imul
repz
in
ret
jge
loop
or
sarb
cwtl
in
aad
fadd
cmpsb
push
into
jg
stos
adc
test
movl
cld
jmp
aad
pop
in
fsts
xor
cmp
dec
mov
loopne
sarl
call
add
sbb
cltd
sar
ljmp
mov
sub
cmp
xlat
sub
jg
nop
stos
into
xchg
faddl
and
ret
int
sbb
jl
scas
fcmovnbe
insb
cs
je
movsl
push
notb
adc
dec
loop
jbe
ljmp
bound
or
setne
sub
icebp
sbb
jecxz
lods
loop
flds
mov
or
mov
and
fiaddl
mov
jbe
frndint
repz
pop
in
icebp
cmp
jbe
lods
inc
popa
cli
cmp
dec
cmp
inc
fcomi
pop
test
pop
stos
mov
sarl
jg
rcrb
adc
in
adc
into
js
pop
xlat
pop
or
push
sub
ret
fistl
loop
fldl
add
sub
bound
jno
ss
mov
push
movsb
in
mov
arpl
add
pop
les
and
ja
sahf
daa
fidivl
es
scas
jb
adcl
fimuls
nop
add
pop
jne
iret
fstpl
pop
xor
mov
and
and
inc
mov
in
pop
negb
pop
adc
mov
repz
xchg
push
and
dec
enter
xchg
out
cli
or
out
xchg
sbb
push
sub
mov
aad
jp
test
dec
je
push
imul
in
idivb
hlt
jl
in
sti
stc
js
or
scas
test
jge
lcall
je
mov
push
outsl
shll
dec
int
mov
pop
push
fwait
dec
mov
mov
cmp
or
aam
jle
adc
xor
mov
adc
insb
into
lahf
sub
mov
pop
int3
aad
or
enter
andb
xchg
mov
cmp
fnsave
push
cld
adc
in
cwtl
dec
cwtl
sbb
sbb
adc
ljmp
jbe
cmp
xchg
push
sub
mov
ljmp
inc
mov
pop
pop
mov
dec
jg
aad
hlt
jmp
or
daa
lods
pop
fmull
shlb
jbe
add
out
insl
call
stos
push
mov
scas
push
iret
pop
aam
and
rcl
pop
pusha
sbb
sub
xchg
bts
mov
pop
clc
mov
mov
mov
test
xor
adc
xchg
inc
out
jnp
sbb
inc
or
mov
jecxz
aam
mov
sbb
cmp
test
scas
adc
push
cmc
mov
jmp
daa
insb
test
xchg
cmc
fldcw
jne
sub
push
pop
arpl
loope
fnstenv
dec
lahf
xor
lret
xchg
test
inc
jns
sahf
sbb
jl
shl
test
mov
addr16
mov
mov
push
and
into
or
mov
mov
daa
lret
push
shlb
cmp
jb
ret
ret
adc
add
daa
sub
daa
xchg
sub
add
cli
or
push
push
add
repnz
sbbl
mov
lods
push
js
inc
test
mov
ret
cmc
enter
sbb
mov
pop
sbb
cmp
push
push
inc
mov
shll
or
xchg
add
out
sbb
ret
repz
pop
or
inc
pop
rcr
cmp
mov
rcrl
lret
aas
mov
js
inc
xchg
dec
pop
xchg
adc
test
inc
mov
movsl
daa
and
mov
aas
ja
loopne
inc
mov
and
jmp
and
cmp
out
stos
push
jo
ja
mov
push
pop
sub
xchg
mov
lret
imul
in
push
xchg
jmp
in
movsb
pushf
popa
mov
movsl
cmp
jp
add
cwtl
cmpsb
inc
add
jl
popf
push
ja
mov
inc
and
adc
jp
pop
repz
cli
cmc
into
push
sub
lret
and
jno
lods
sbbl
mov
ljmp
inc
adc
lret
dec
cmp
xor
mov
push
xor
dec
lcall
les
sbb
mov
sbb
pop
daa
mov
adcl
mov
iret
mov
imul
push
stos
mov
out
inc
aas
cmpsb
mov
dec
adc
mov
mov
push
cmp
cs
out
ljmp
mov
out
iret
mov
cmp
xchg
add
lds
scas
adc
pusha
subl
mov
mov
xor
push
stos
push
out
xor
cltd
aaa
leave
and
push
mov
popf
imul
neg
shlb
lds
sbb
mov
xor
and
ss
arpl
xchg
testl
xchg
mov
xchg
xor
sub
mov
inc
jno
aas
repz
scas
out
dec
scas
sar
or
clc
dec
fsubs
mov
xor
mov
pop
add
cwtl
rolb
cmp
mov
and
in
xchg
mov
cltd
xor
inc
lret
adcl
cmp
mov
sbb
inc
dec
dec
filds
sbb
pop
push
cmpsb
iret
jle
adcb
adc
mov
loopne
push
dec
pop
cmp
aad
out
in
mov
cmp
aaa
adc
shrb
cmp
lahf
inc
mov
leave
sahf
xor
or
push
pusha
jp
cmp
aam
lcall
scas
lds
negb
push
cwtl
adcb
sub
xlat
inc
mov
out
mov
mov
pusha
cltd
testb
jecxz
mov
popa
xchg
xor
xchg
in
fs
cmpsl
pop
cmc
ficoml
mov
add
insl
call
push
imul
xor
sub
mov
scas
ja
pusha
rolb
sbb
adc
arpl
mov
pop
jae
mov
cmpsl
in
add
lods
je
jmp
add
fsubrl
jnp
pop
xchg
mov
xchg
popa
or
cs
loopne
je
pusha
aad
stos
and
popa
stos
and
mov
sbb
fisubrs
adc
lahf
push
and
xorl
dec
xor
xchg
call
jns
xor
xchg
xor
pop
xor
es
les
ret
stos
mov
push
loope
aaa
pop
dec
cmc
aas
xor
lcall
andb
cmpsb
outsb
pop
dec
outsb
and
sub
cmp
addr16
inc
hlt
lret
ret
in
pop
jl
adc
push
cmp
inc
iret
ret
inc
stc
daa
fwait
sar
jnp
mov
add
pop
or
mov
ret
bound
pop
arpl
cmp
mov
iret
sti
lahf
cmpsl
push
cmp
filds
push
es
xlat
xchg
lret
xor
cmp
jp
and
mov
ret
cmpsb
loope
repz
movsb
shrb
xlat
push
xchg
movsb
es
stos
movsl
adc
sub
lock
add
xchg
out
mov
aas
adc
jbe
cwtl
dec
mov
cmp
in
psrlq
mov
push
push
loope
xchg
push
xor
fdivrp
repz
lcall
xor
adc
or
adc
aaa
xchg
adc
xchg
or
into
mov
jge
jle
mov
push
clc
pop
mov
pop
jge
in
popa
loop
dec
mov
sbb
xor
mov
fbstp
and
adc
hlt
int3
lcall
sub
pop
mov
mov
insb
nop
xchg
cmp
mov
push
jl
mov
popf
push
stos
lret
or
jecxz
jge
scas
mov
add
sub
jp
loope
mov
adc
sbb
bound
cmc
mov
js
lret
push
mov
push
inc
pop
imul
out
jbe
pop
sbb
jo
cmp
sbb
jmp
fs
pop
pop
cltd
mov
add
cmpsl
and
mov
sub
leave
je
cmpsl
in
jb
ja
sbb
js
jne
test
add
cwtl
dec
sti
push
mov
mov
ljmp
or
adc
sub
lods
or
or
outsb
mov
cli
rcll
sub
or
and
cs
imul
or
mov
or
lock
pop
iret
popa
insl
push
jmp
insb
mov
and
inc
das
dec
inc
sti
ja
cmp
aas
lock
ja
or
jne
imul
push
pop
mov
pop
cmp
lods
int3
sbb
lds
mov
push
movb
sbb
lret
add
nop
adc
insl
movsb
js
inc
xor
add
jb
adc
sub
or
mov
popf
fiadds
call
stos
lea
decb
cld
gs
ss
xchg
push
fidivrl
cltd
cmpsl
adc
out
xor
mov
sub
shlb
lea
enter
add
push
jp
jae
paddsw
mov
loop
je
mov
mov
fnstenv
xor
insl
cmc
xlat
jnp
imul
loopne
mov
je
push
fistl
call
inc
or
inc
fildll
not
dec
sbb
and
xchg
test
xchg
push
dec
fisubl
sti
push
cld
pop
jbe
inc
aas
sbb
data16
push
sti
and
ret
and
xchg
or
inc
test
ss
push
in
addr16
out
and
mov
sbb
pushf
sbb
dec
je
das
jmp
inc
imul
cmpsl
fbstp
and
dec
inc
adc
pop
in
mov
mov
push
test
push
imul
mov
mov
inc
cmp
je
pop
lds
xor
or
in
jmp
xor
mov
sub
insl
and
inc
mov
inc
pushf
jns
cwtl
testl
shr
mov
cmpb
bound
pop
test
rcll
push
dec
mov
hlt
xor
mov
pop
or
outsb
daa
sub
outsl
sub
incb
lds
ret
and
rorl
gs
leave
push
dec
mov
jecxz
lods
jb
mov
sub
ret
cmp
mov
jae
and
cmp
test
jbe
mov
push
stos
pop
jae
das
add
aas
fimull
jmp
leave
test
add
jo
add
mov
out
in
mov
nop
aad
test
adc
fnstenv
notb
mov
aas
inc
mov
sbb
push
jecxz
dec
cmp
pop
out
cmp
inc
push
inc
pop
dec
mov
int3
mov
out
iret
je
subb
fistpl
jg
dec
enter
cmp
push
mov
imul
mov
rclb
and
outsl
cmp
dec
vmovsd
sbb
lock
pop
jnp
sub
int3
adc
pop
push
xchg
leave
cli
push
xchg
clc
ret
stc
push
and
pushf
and
adc
pop
loope
adc
in
loop
jns
frstor
inc
mov
xor
arpl
insl
jbe
and
mov
lcall
stos
pop
lcall
push
call
jg
out
bound
push
loopne
or
or
cmc
inc
mov
and
or
dec
add
inc
ja
fists
mov
and
xor
outsb
inc
lea
dec
push
dec
lcall
pop
xlat
sub
sbb
jo
movsl
sub
mov
or
repnz
add
jecxz
adc
lahf
lret
push
lahf
and
dec
jle
lcall
sub
or
out
xor
shll
flds
xorb
and
std
test
xorb
pop
ss
shrb
sbb
jl
inc
adc
cmp
sub
cmpsb
push
jp
jnp
adc
cmp
aas
jo
lds
pop
outsb
notl
adc
mov
or
inc
int
repnz
lds
sub
mov
cld
pop
int
ret
cmp
cmp
push
add
adc
mov
lods
fstpt
push
cmovl
stos
add
mov
add
sub
xchg
stos
test
pop
add
sbb
repnz
inc
in
xchg
push
into
pop
out
lods
sub
xor
in
xchg
dec
inc
lret
insb
movsl
adc
in
nop
stc
jg
jp
fsubrs
jl
and
xor
fldenv
lea
jns
jo,pt
mov
push
es
inc
jp
sbb
add
jne
pop
pop
ja
fadd
clc
into
inc
data16
mov
mov
ja
aas
dec
cwtl
xchg
loop
mov
mov
push
xor
xor
daa
or
sub
out
jae
push
fidivs
addr16
loopne
test
imul
stos
sub
fisttpl
jo
xlat
xchg
cs
int
movsb
popa
std
mov
fstpt
sub
mov
jle
into
mov
nop
pusha
sbb
add
xchg
xor
add
push
adc
outsl
or
mov
cmp
stc
jp
imul
inc
and
cmpsb
movsb
adc
mov
sub
test
xor
push
adcb
neg
cmpsl
insl
mov
rorb
dec
and
and
dec
out
push
mov
arpl
xor
scas
insb
push
shlb
mov
pminub
imul
jnp
lret
jge
fimull
push
xor
jecxz
aad
jbe
test
leave
movsb
push
sbb
adc
daa
sub
mov
inc
cwtl
xor
orl
or
jg
addl
push
orl
ror
mov
inc
jo
popa
jnp
imul
inc
stos
inc
out
jne
cmp
loop
movsb
imul
add
sbb
add
dec
mov
pop
push
gs
imul
sbb
loopne
inc
sub
je
mov
push
call
adc
or
lret
inc
mov
jb
mov
mov
jae
outsb
push
hlt
stos
xlat
mov
mov
and
fdiv
mov
xor
xchg
lcall
shll
sbb
cmpsb
negl
xchg
xchg
pop
ljmp
scas
pop
jne
std
sbb
xchg
push
push
add
push
pop
mov
pushf
lea
add
add
dec
dec
cli
or
shrl
or
pop
xchg
jne
adc
sbb
jno
test
int
icebp
and
je
clc
and
cmc
es
emms
in
stos
pop
sub
xorl
or
add
mov
xor
xor
push
mov
outsl
pop
sti
roll
jg
pop
jnp
jbe
addr16
cmpsb
cmp
dec
mov
mov
cmp
pop
into
hlt
out
xchg
push
repnz
xchg
inc
push
addr16
xor
mov
addr16
sbb
cmp
xlat
fcmovbe
jg
hlt
lock
pop
xchg
jle
mov
mov
xor
xor
call
or
mov
jp
subb
call
pop
sti
dec
mov
pop
xor
loopne
xchg
sub
stos
cmpsl
or
lret
fistps
inc
repnz
pusha
addr16
arpl
fiadds
sub
movsl
gs
ljmp
push
pushf
dec
sbb
xor
sahf
xor
rcll
push
xchg
fdivrs
popa
movsl
popa
pushf
push
jno
pop
je
push
mov
mov
divl
ljmp
or
mov
adc
pop
add
jecxz
jnp
int3
sahf
mov
mov
cmp
mov
push
and
clc
push
or
mov
pop
lret
js
xor
ficoml
lgdtl
jl
lock
cmp
mov
pop
imul
or
in
xor
pushf
sub
mov
or
xchg
mov
lcall
mov
pop
xchg
clc
mov
sbb
stc
and
mov
mov
adc
add
inc
shr
popf
movsb
jmp
inc
out
test
add
negb
fwait
cmp
mov
jbe
mov
add
jecxz
inc
jns
sbb
mov
mov
imul
out
and
out
mov
pusha
loopne
push
mov
and
xchg
push
cmp
jb
mov
int3
or
jmp
faddp
loope
jbe
jg
jecxz
das
cmp
and
repz
fsubrl
dec
popa
sbb
sbb
out
sbb
mov
xor
nop
icebp
jbe
mov
mov
iret
mov
stos
jp
jmp
ds
in
call
and
in
push
or
es
inc
push
cli
mov
les
mov
cmp
cld
mov
pop
xor
xor
push
fs
lret
aaa
mov
jns
xchg
mov
aad
mov
iret
aaa
xchg
and
or
add
and
xchg
sti
mov
sub
in
orl
mov
cwtl
sbb
inc
out
ja
stos
arpl
es
jp
test
sub
pop
and
lret
dec
lock
loopne
push
inc
jns
aad
dec
xchg
inc
jl
aam
int
xlat
xchg
xchg
mov
xor
insl
add
out
aas
pop
add
aad
fisubs
add
popf
lods
test
mov
cmc
sub
push
inc
mov
jl
out
pop
push
cs
fwait
lea
jno
adc
icebp
push
inc
idivl
jge
push
out
outsb
int3
js
add
xor
jle
dec
mov
les
jb
mov
fstl
cld
bound
inc
test
loopne
sbb
xor
inc
mov
aaa
lcall
insb
popf
stos
notl
or
call
imul
ljmp
bound
imul
add
iret
fs
addr16
pop
sbb
icebp
or
into
xor
outsl
into
les
enter
push
pushf
push
negb
inc
xchg
cld
pop
dec
jp
fldt
arpl
lret
repz
xor
pop
sbb
mov
js
fs
nop
inc
jns
pop
lock
sti
bnd
mov
cwtl
call
jmp
punpckhwd
cs
mov
push
add
mov
insb
sub
sahf
pop
test
dec
or
mov
jmp
popa
xchg
cmp
push
movsl
arpl
push
or
ljmp
push
mov
aam
sub
lret
dec
loopne
imul
test
test
cltd
jo
inc
sbb
testb
add
shll
mov
rcrb
mov
popf
mov
xor
jb
pushf
in
sbbl
push
rclb
xor
mov
aaa
mov
xchg
test
and
mov
sbbl
fcoms
cmc
pop
jle
es
fisubl
add
mov
mov
out
or
cwtl
inc
inc
xchg
cli
and
sahf
xorl
pop
pop
pop
pop
push
xchg
outsl
in
ss
arpl
rcll
sar
loop
int
mov
push
sub
iret
mov
ret
mov
test
or
add
sub
lahf
and
ret
repz
jno
mov
pop
repz
xchg
dec
call
call
dec
add
push
in
add
xor
sub
sub
mov
data16
push
mov
leave
js
ss
dec
popa
outsb
cmp
jle
fimuls
movsl
cmpsl
xor
sub
sub
xchg
test
mov
lea
dec
dec
sbb
pop
adc
lock
mov
sub
sbb
jl
dec
in
ds
xorl
repnz
push
sub
cli
rol
scas
pop
push
pop
adc
in
xor
jb
daa
iret
push
inc
xlat
les
or
lds
dec
sub
popa
jmp
call
jp
imul
outsl
leave
cmp
out
pop
jl
loope
pop
jecxz
adc
pop
das
cld
mov
xlat
icebp
movsb
mov
out
dec
jmp
stos
mov
jle
sbb
aad
call
leave
lods
jmp
jnp
and
sbb
or
inc
addl
dec
mov
into
add
pop
push
fisubl
add
pop
hlt
mov
shlb
jle
mov
and
jae
cltd
mov
push
xlat
or
dec
ret
sbb
jno
in
mov
imul
jnp
fwait
int
mov
sbb
test
cs
popa
lds
orl
sub
ffree
movb
cmp
pop
sub
fnclex
clc
jne
xchg
or
adc
cmp
push
test
jno
js
push
out
mov
xchg
xor
mov
lds
sub
mov
cmpsb
imul
out
in
mov
outsl
cwtl
dec
cltd
inc
out
push
mov
fsubs
repz
ja
data16
pop
pop
in
cmp
push
out
adc
in
shr
mov
xchg
mov
nop
or
out
in
jge
fwait
aad
les
dec
dec
stos
repz
or
jo
jbe
xor
inc
adc
dec
dec
xor
loopne
sbb
mov
stc
fcompl
subb
icebp
aam
cmp
add
jae
xchg
or
push
cmp
aam
cmpsb
jecxz
adc
insl
dec
punpckhbw
dec
sahf
mov
and
xorb
adc
and
lock
in
mov
imul
add
nop
data16
pop
ljmp
cmp
cmpsl
add
sti
xchg
test
in
xor
adc
jnp
jmp
hlt
mov
pop
dec
xchg
jae
stos
pusha
out
mov
pop
sub
fimull
nop
mov
pop
mov
jl
iret
sub
aas
pusha
xchg
xor
and
stos
xchg
inc
icebp
repnz
and
sub
fcomps
sub
dec
pop
mov
dec
aam
sub
xchg
shrb
mov
mov
sahf
sti
pop
test
divb
push
hlt
cmp
cmp
mov
out
aam
daa
cmpsb
xchg
dec
rol
sbb
mov
lods
mov
std
push
mov
in
pop
aad
mov
mov
jne
clc
lods
mov
cmp
or
xor
repnz
xchg
push
je
mov
ret
jno
push
cmc
dec
js
inc
pusha
js
enter
in
sub
xor
rorb
add
add
add
xchg
mov
jmp
jle
int
lods
rcll
nop
jae
std
dec
mov
xchg
xorl
stc
xchg
popa
insb
pop
pop
jb
into
and
clc
mov
pusha
mov
int
xchg
pop
pusha
ja
aaa
dec
outsb
mov
bound
adc
push
fisttpll
dec
cs
pop
pusha
cmpsb
jne
outsb
imul
jae
out
or
sub
imul
mov
cmpsb
movsb
movsl
sbbb
pop
in
cmp
push
std
popa
sbb
or
out
and
fildll
lcall
xor
shll
pop
ret
sahf
mov
sub
dec
jno
mov
or
adc
into
jmp
pop
cvttps2pi
ljmp
shrl
pop
outsl
mov
pop
mov
xchg
sub
xchg
insl
test
push
out
stc
cmpsl
jo
ds
pusha
dec
js
bound
fwait
and
dec
xor
pusha
add
push
or
xchg
or
sbbb
pop
loopne
xor
push
xlat
sti
repz
push
jmp
push
in
aas
dec
mov
test
cmc
xchg
adc
ja
imul
test
push
movsb
cmp
push
fbstp
sub
xor
push
ss
out
mov
dec
cmp
jnp
mov
ljmp
cmp
xor
pop
dec
dec
xchg
cmc
repz
sub
popf
int3
push
insl
push
mov
loop
mov
leave
mov
sub
nop
adc
pop
mov
mov
jnp
pop
lcall
loopne
cmp
sbb
mov
xchg
js
js
pop
xlat
stc
pop
loop
xchg
inc
cs
outsb
gs
inc
or
js
les
xchg
mov
pusha
je
xor
mov
fmull
or
and
sub
outsl
ret
add
add
sub
or
je
mov
fbld
push
xor
cmp
inc
pop
mov
test
inc
push
mov
fcmovbe
std
je
cmp
sbb
xchg
pop
repnz
xor
inc
lods
push
adc
and
jnp
dec
mov
lret
mov
out
xchg
iret
inc
sbb
xchg
cmp
lret
fcomps
call
mov
inc
pop
out
pop
stos
sub
xor
int3
and
movsl
enter
or
leave
push
mov
std
ficoms
push
and
ja
cmc
jmp
add
imul
mov
push
xchg
dec
and
mov
jecxz
or
jmp
in
adc
inc
push
imul
jae
loop
adcb
cmp
or
jp
shll
and
test
or
andb
adc
adc
in
add
pop
ds
jnp
test
cmp
mov
or
and
sbbb
mov
repz
ds
push
mov
mov
gs
xchg
mov
mov
imul
imul
rcrl
push
mov
push
xchg
mov
xchg
pop
xchg
xor
int
pop
jl
sti
sti
das
jnp
and
lds
dec
cs
jns
mov
lds
cmpb
sbb
xor
jns
call
pushf
add
pop
cld
pusha
add
fstpt
nop
test
xchg
fwait
xor
int3
mov
jmp
cmp
loope
mov
fcompl
orl
aas
jmp
add
dec
or
dec
fisubrl
mov
call
cmpsl
popa
mov
xchg
inc
out
lcall
out
mov
lea
movsb
bnd
pushl
mov
outsl
or
xor
push
pop
cli
jnp
push
cmp
in
idiv
outsb
dec
sbb
pop
mov
gs
xchg
int3
and
repz
pop
adc
inc
or
subb
rorb
jbe
cltd
sar
xchg
pushl
lds
test
pusha
cmp
movsb
pop
jp
das
lret
mov
call
es
cld
xchg
stc
jg
sbb
test
iret
lea
jmp
test
dec
lods
test
nop
es
xchg
xchg
out
pop
pop
lods
and
fbld
cmp
fsubrs
outsl
mov
dec
mov
dec
sti
movsl
insb
sub
aaa
mov
or
icebp
push
inc
xchg
xchg
mov
call
or
push
inc
cmp
xchg
repz
sub
shlb
jge
mov
les
hlt
out
movsl
out
pop
xchg
dec
mov
movsb
sub
adc
sahf
addr16
scas
push
aad
jecxz
fcoms
pop
lahf
mov
xchg
aas
cld
mov
sbb
cmc
rcll
in
cmp
pusha
pop
cmc
mov
cltd
hlt
in
aaa
sbb
fs
dec
out
dec
sub
jge
cmp
mov
jbe
imul
imul
push
call
loope
inc
adcb
inc
push
popa
clc
cmp
jno
and
lea
jp
add
imul
sbbl
dec
subl
sub
pop
stos
xorl
ret
popf
and
lods
popf
push
push
leave
jecxz
or
cld
dec
pop
mov
adc
dec
andl
mov
cmpxchg
push
dec
imul
push
mov
fnsave
push
and
jb
cmp
lahf
int3
jnp
mov
mov
or
cmp
sti
jg
in
adc
sbb
fisttpl
push
cmp
fcmovbe
pop
jp
popa
mov
and
push
out
jecxz
iret
ds
pop
mov
xchg
cwtl
int
outsl
stos
popa
mov
mov
jns
mov
loop
sbb
adc
nop
mov
lods
rcrb
stc
test
js
push
cli
aam
insb
adc
subb
pushf
add
cmp
pop
jne
push
lods
dec
ret
sub
or
cmpsb
cmp
ja
push
inc
stos
add
adcl
popa
xor
stos
mov
imul
icebp
add
movsl
movsb
push
cmp
mov
and
adc
or
je
ja
aam
fs
adc
les
jno
inc
xor
mov
push
jl
sahf
insl
enter
or
mov
aam
pop
jecxz
incb
into
push
notl
dec
push
mov
leave
cmpl
in
jns
enter
lcall
xor
mov
jbe
lods
and
xchg
mov
pop
inc
push
cmp
movsb
adc
push
push
testb
pop
mov
inc
aas
idiv
hlt
push
push
jmp
cmp
lock
mov
popa
push
je
out
sub
clc
xor
mov
adc
jb
fildll
lahf
xchg
imul
aam
mov
data16
mov
xchg
hlt
repz
jbe
jo
imul
xor
pusha
pop
jle
out
mov
scas
sarb
jns
aaa
fldl
fadd
jl
xchg
popa
mov
in
aad
jp
mov
sub
pop
pop
test
in
mov
mov
sub
mov
lds
xor
mov
dec
lret
mov
pop
cmp
mov
sbbb
frstor
cmp
mov
jo
add
cmp
mov
xlat
leave
xor
jmp
jbe
or
and
mov
out
sti
loopne
sbb
sarb
leave
stos
shr
repnz
xchg
ja
test
xchg
scas
pop
mov
and
rol
or
icebp
push
pushf
ss
fldenv
pop
fwait
rcll
jmp
jle
add
inc
out
push
cmp
paddusw
andb
std
std
movsl
xchg
or
fdivrs
lock
xor
pop
cmpl
add
movsl
int3
sbb
add
mov
je
loope
clc
xchg
test
inc
jecxz
fs
jp
jmp
int
add
adc
cmp
sahf
repnz
data16
push
jnp
stos
xchg
cli
test
inc
inc
test
flds
jl
ljmp
rcrl
sti
loope
push
inc
test
dec
call
stos
test
les
fs
or
inc
lock
outsb
cli
pop
xchg
adc
fldcw
xlat
ss
lcall
jne
fists
movsb
in
out
dec
add
cmp
test
fsubrs
pop
push
std
into
loopne
test
insb
fidivrs
imul
jo
dec
mov
fsts
cli
pop
leave
enter
shr
mov
inc
dec
rcll
push
add
xchg
jge
jae
fldl
ss
int
inc
xor
mov
xchg
jecxz
or
pop
fwait
stos
mov
jb
mov
aam
fstpl
inc
sbb
sbb
ret
mov
pop
stc
xor
pop
mov
in
insl
push
and
int3
xor
scas
inc
sub
int
cli
loope
lahf
xchg
sbb
mov
push
pop
cmc
xchg
dec
pop
lock
pusha
mov
push
sbb
xchg
jno
sbb
push
mov
ja
jno
ret
mov
stc
adc
push
sbb
ds
push
bound
or
pusha
push
test
ret
nop
adc
fwait
mov
adc
jb
iret
jecxz
cld
or
cli
fdivr
in
pop
and
mov
jnp
and
pop
mov
orb
pop
mov
dec
and
rcrl
dec
les
dec
dec
addb
enter
add
pop
jbe
scas
movsb
mov
lock
in
test
xchg
cmp
les
inc
imull
or
popf
into
sub
repnz
pop
xor
cltd
icebp
sub
mov
and
rolb
int
pop
jae
mov
insb
out
add
loopne
push
xor
cmpsl
rcrb
in
addr16
xor
pushf
pop
push
test
loopne
push
jne
into
and
and
fcomp
daa
popf
pop
es
xlat
push
leave
pop
mov
test
test
int3
push
aas
mov
lret
sub
lahf
dec
movsb
roll
pop
repz
sbb
daa
scas
cmp
pusha
jecxz
call
ds
mov
jne
push
clc
je
loopne
popa
ds
pop
sbb
inc
push
jns
cmp
movsb
jae
clc
ljmp
dec
mov
jb
in
xor
and
mov
fs
inc
xor
mov
xchg
pop
push
add
adcl
pop
cld
loopne
inc
add
jbe
jl
push
les
hlt
fcomp
cmpsl
insb
xor
imul
movsl
push
xor
mov
pushf
pop
mov
das
addr16
or
scas
add
inc
iret
sub
sub
dec
insb
imul
pop
addl
outsb
jnp
sti
cmp
mov
imulb
push
sar
jnp
dec
xor
imul
pop
push
inc
daa
mov
js
pop
ret
stc
sarl
in
adc
mov
lret
xor
fwait
jmp
dec
cwtl
and
push
out
mov
shll
test
scas
lock
pop
xor
ret
xchg
into
aam
fistps
xchg
andb
jl
mov
aaa
lcall
pop
mov
imul
divl
mov
in
and
mov
sahf
or
rcl
cmp
out
and
adc
xchg
in
lock
push
mov
out
scas
sub
inc
mov
stos
movsb
lea
imul
mov
jb
pop
repz
sbb
and
mov
cmc
jae
cltd
inc
fiadds
enter
dec
mov
daa
pop
aad
sbb
lret
pop
fiaddl
mov
popf
cs
lret
mov
xchg
inc
inc
push
je
dec
or
add
lcall
aam
nop
pop
cld
inc
fdivl
adc
mov
or
sbb
ja
ljmp
or
rorl
jne
lea
jp
sahf
shlb
pop
sbb
les
inc
xchg
jns
fnsave
lahf
or
mov
div
xchg
test
dec
ljmp
ljmp
pop
jp
shrl
push
sub
mov
cs
clc
js
in
arpl
add
in
inc
test
scas
stos
cli
jae
lock
mov
and
cmpsl
sti
push
gs
add
mov
sahf
pop
loopne
cli
pop
jne
and
add
jecxz
cmp
test
cs
xchg
aas
mov
inc
pop
popl
leave
and
dec
inc
inc
adc
ja
fisubrs
push
mov
xchg
fcomp
cmc
es
xor
sbb
xchg
xor
mov
jmp
or
ds
test
popf
and
mov
cmp
dec
mov
xor
nop
divb
push
xchg
dec
jo
pop
adc
pop
incb
push
pop
lahf
movsb
dec
xchg
push
pop
gs
ficoml
adc
cmpsl
stos
mov
inc
add
inc
mov
nop
repz
lock
xchg
mov
lea
push
movsb
out
sub
mov
adc
shlb
test
out
pop
pop
cwtl
push
das
out
pop
inc
sbb
or
out
sbbb
fmull
lret
aam
or
sbb
rcrl
fistps
das
jmp
add
add
pushf
dec
loope
mov
cmp
or
mov
jnp
inc
cmpsl
dec
out
xchg
stos
mov
add
test
xchg
mov
sub
mov
mov
je
rcrl
into
jp
rorb
mov
mov
imul
lahf
jo
inc
sub
sub
adc
repnz
mov
and
mov
leave
test
or
add
xchg
xchg
adc
sbbl
je
or
ljmp
push
xchg
xchg
andl
insb
or
sub
ss
xchg
mov
popf
shl
aam
cmp
fmuls
mov
mov
mov
or
lds
sbb
push
js
pop
mov
stos
xchg
jo
outsb
cmpsb
cmp
lret
les
or
cmp
lock
daa
ret
mov
bnd
outsl
add
nop
dec
jl
xor
dec
mov
adc
mov
xchg
ds
jecxz
mov
jp
call
fcoms
addl
mov
sbb
adc
xchg
imul
psraw
data16
xor
pop
sub
dec
ret
call
test
sarl
dec
jmp
adc
addr16
jle
jle
push
sbb
lret
iret
lret
dec
mov
bound
dec
mov
mov
aas
les
jns
out
jle
jl
ret
jecxz
aam
mov
dec
add
sub
cltd
xchg
repnz
and
mov
in
je
cmp
outsl
push
jne
pop
push
iret
lods
xchg
xlat
push
aas
add
fdivrl
cld
dec
mov
pop
jb
cmp
js
jns
hlt
lret
or
int
shrb
int
dec
mov
or
repz
or
sub
cltd
fwait
and
cmp
mov
xor
dec
int3
clc
push
inc
stos
push
push
lea
movsl
mov
jno
aam
stc
outsl
sbb
sub
mov
lock
loope
pop
gs
out
enter
pop
roll
xchg
in
sub
icebp
cmpsl
test
sub
ret
inc
mov
int
mov
jns
fisubrs
sbb
testl
fidivs
mov
and
shll
je
imul
and
cmpl
or
push
cmpsl
cmpsb
cmp
mov
mov
cmp
cltd
and
pop
pop
sbb
ret
cmp
scas
xchg
sbb
xchg
jge
mov
ficomps
add
jnp
repz
jge
dec
cmp
sbb
and
jne
mov
jb
insl
xor
adcl
jp
sbb
dec
cmp
pop
push
cmp
push
xor
pop
xchg
hlt
and
add
cltd
repnz
xchg
lret
addr16
lret
fwait
mov
cld
push
push
cmc
mov
dec
sub
lds
mov
idiv
sbb
idivl
sub
negl
jns
repz
lcall
jae
lret
inc
pop
in
cmp
scas
ror
lock
and
repz
rcll
xchg
pushf
in
push
lret
add
cmp
mov
add
xor
adcl
lret
mov
fdiv
dec
xor
in
mov
push
outsl
lock
fimull
scas
xor
push
inc
pop
sbb
inc
pop
call
int3
push
jno
xor
shl
not
aam
stc
inc
adc
xchg
xchg
lcall
jno
shrl
xlat
xor
dec
dec
notl
sbb
jno
sub
jp
fidivl
gs
xchg
sbb
mov
cli
inc
in
push
sbb
out
sahf
jl
call
fiadds
cmp
std
ficompl
cmp
out
ljmp
mov
fcoml
faddl
cmc
push
inc
push
fisttpl
pop
inc
mov
add
pop
mov
jne
jecxz
add
jmp
out
out
mov
add
in
popf
in
repz
jbe
ja
stc
in
or
lods
push
cltd
jno
fdivrl
pop
jne
int
dec
arpl
lock
jo
jae
dec
or
movsl
inc
out
sar
lods
mov
jbe
ds
mov
push
aam
jae
adc
jns
xchg
mov
in
aaa
in
jl
pop
xor
mov
dec
cmp
stc
sti
mov
pop
jo
sub
lret
sbb
xchg
imul
or
mov
inc
popf
jns
xchg
xor
cwtl
popf
lods
mov
mov
xor
call
dec
inc
jmp
add
push
fadds
push
jp
jbe
fists
sub
mov
mov
fwait
sub
sub
test
mov
ss
imul
js
clc
or
xchg
repz
sub
jbe
ljmp
jnp
adc
sub
xor
sar
lock
outsb
cld
rolb
add
int
fwait
push
add
rorb
ss
out
dec
leave
pop
stos
test
notb
dec
pop
fistpll
adc
inc
push
lret
inc
fmuls
ds
pop
jmp
dec
mov
inc
negl
sub
mov
pushf
xchg
jns
sti
xor
lods
mov
fcmovbe
lcall
icebp
jb
mov
ja
fwait
dec
add
clc
out
xor
jbe
mov
fdivrs
push
cltd
pop
cmpsb
mov
cs
ret
fcoml
shll
jno
rcll
insl
xchg
jmp
sbb
jl
cmpsb
or
outsb
shlb
fdiv
sarb
pusha
addl
negb
adc
xor
jns
xor
cmp
movsl
fidivrl
push
mov
push
xchg
mov
sti
repz
sti
dec
ret
out
jb
jno
adc
into
cs
out
push
jo
cmpsl
in
push
cmp
clc
cltd
sub
stc
xor
push
sbb
mull
mov
xchg
ds
push
xor
and
push
push
xchg
mov
loope
js
cld
mov
stos
pop
sbb
sub
fidivs
inc
mov
lret
push
xor
add
movsl
aam
sbb
pop
mov
gs
pop
addr16
dec
inc
orl
pop
or
cli
in
xchg
iret
fs
jge
push
mov
mov
push
push
in
pop
or
divl
popa
ja
aas
and
mov
in
arpl
sti
loope
sbb
lock
scas
mov
xchg
adc
lods
and
or
pop
frstor
xchg
pop
mov
ret
loopne
jmp
fisubl
aaa
daa
aas
push
sbb
pop
fists
sbbl
js
movsl
movsb
mov
mov
inc
adc
mov
rorl
mov
adc
cmp
jnp
jbe
loopne
icebp
mov
xchg
fisubrl
add
aad
mov
bound
fs
sbb
ficomps
xchg
pop
sti
sbb
shl
adc
xor
in
rolb
push
add
mov
fwait
out
cmc
sbb
inc
cmp
iret
add
daa
bound
jle
xor
xchg
xor
gs
pop
jl
iret
sar
int3
int
movsl
sahf
inc
pushf
rcrl
fs
pusha
loope
aam
sub
arpl
inc
pushf
lods
std
es
cmp
repz
es
js
jl
jne
xchg
lock
stos
push
stc
xchg
mov
je
mov
loope
xchg
cmp
and
js
cwtl
fsub
push
stos
jne
test
lret
inc
and
mov
data16
mov
or
mov
je
ffree
push
push
cwtl
addr16
jecxz
enter
xchg
popa
popa
or
xabort
mov
xor
sarb
jo
pop
popa
jg
sub
insb
push
jle
mov
cltd
and
push
jg
into
shll
jecxz
in
dec
adc
jb
add
xchg
shll
xor
inc
and
cmp
mov
adc
cmc
jl
imul
stc
and
lods
add
jne
cltd
jl
jb
pop
icebp
ror
push
add
xchg
popf
add
mov
icebp
mov
pop
mov
mov
hlt
jl
cmpsl
jno
std
mov
sbb
inc
or
jg
or
xor
movsb
aas
mov
mov
sbb
adc
shlb
dec
mov
mov
sub
jge
rcl
sub
jecxz
cmp
sahf
pop
inc
cli
jns
psllq
mov
in
inc
hlt
in
cmpl
mov
rcl
ror
loopne
or
mov
test
insl
or
outsb
push
jae
add
mov
add
sar
in
inc
push
adc
sbb
insb
call
mov
and
loopne
add
adc
jns
pop
xchg
jle
imul
or
iret
mov
stos
push
jge
mov
leave
dec
pop
rorb
lcall
mov
mov
mov
stos
xchg
out
xor
out
negb
test
sub
int
roll
push
adc
inc
ss
sub
push
insb
cmp
movswl
sbb
std
fisubrs
cmp
cwtl
pop
xor
push
sbb
inc
jae
add
loopne
jno
dec
xchg
ja
repz
imul
jno
and
push
lods
andl
out
orl
sbb
seto
call
lods
int
outsb
jl
rolb
outsl
pop
cmp
xchg
xchg
testl
push
iret
fsub
ret
out
fstl
in
js
cld
fstpt
sbb
in
add
add
call
sarb
pop
fists
clc
dec
cmc
cmp
mov
jo
jae
daa
into
subl
ds
add
les
mov
mov
or
xor
xchg
dec
fsts
inc
inc
sarl
push
jl
daa
gs
adc
xor
dec
cmp
loop
stos
test
push
jns
ljmp
loope
jl
movsb
movsl
shrb
add
rorl
shlb
addr16
push
aam
dec
shll
mov
sbb
movsl
loopne
repz
daa
adc
xlat
ljmp
and
jl
cltd
jns
pop
arpl
repz
lcall
dec
jge
sbb
xchg
lock
xchg
adc
out
and
jnp
sbb
sbb
cld
dec
arpl
xchg
adc
push
xchg
cli
mov
xchg
fisubrl
sub
ja
or
repz
ds
add
clc
mov
pop
xor
fidivs
pop
dec
aas
test
pop
outsb
mov
xchg
push
ja
fwait
daa
xchg
adc
mov
pushf
jg
sub
sbb
jmp
aad
stos
call
mov
adc
mov
sbb
rcll
and
scas
in
das
sub
imulb
push
gs
xor
add
fldcw
jp
test
popf
into
push
popa
add
in
dec
cmp
lods
and
jno
and
jp
adc
lret
pop
cmc
sub
push
pop
pop
jne
push
xor
int3
xchg
or
sub
mov
mov
mov
and
int3
sbb
dec
ss
js
and
sub
push
add
push
inc
inc
aaa
cmpsb
es
sub
insl
mov
stos
dec
xor
mov
push
inc
jmp
adc
dec
dec
add
loopne
movsb
add
das
fnstsw
sbb
sbb
mov
jnp
push
mov
jg
mov
sub
jle
mov
inc
std
push
xchg
bound
jecxz
inc
icebp
je
enter
adc
sub
jle
pop
outsl
sub
std
cmpsl
icebp
cmp
jge
ljmp
sub
mov
pop
leave
pop
mov
xchg
fcomi
mov
ljmp
sarl
xchg
ds
ret
out
les
push
mov
call
clc
icebp
imul
jno
jle
inc
push
or
outsl
sub
xlat
adc
jno
sti
push
fcoms
dec
mov
scas
das
sbb
mov
in
jns
lret
movsl
fistps
dec
es
and
xor
cmpsl
add
imul
pop
scas
movsl
add
xorb
push
mov
lock
xchg
inc
jb
cmp
outsl
sub
bound
loopne
adc
pop
fidivrl
xlat
cltd
add
movsl
xlat
cli
fstps
mov
mov
adc
mov
xlat
and
jb
jmp
sbb
mov
cmp
or
mov
push
xchg
lcall
js
add
inc
pop
sbb
adc
cwtl
pop
xchg
and
rorl
test
jnp
cmp
mov
iret
ficomps
adc
addl
sbb
xchg
std
sbb
icebp
mov
and
movsb
mov
mov
xor
jbe
sbb
xchg
mov
xchg
aas
or
mov
adc
dec
dec
adc
mov
or
push
jne
call
pop
mov
sbb
ret
mov
dec
sbb
fstl
push
faddp
fists
test
xchg
jno
sub
cli
dec
negb
lcallw
lea
stos
dec
rcrb
arpl
or
mov
stc
push
sub
jp
fcoms
hlt
outsb
inc
cltd
dec
mov
jb
dec
aaa
inc
out
or
arpl
dec
imul
pushf
cmp
or
push
mov
in
pushf
inc
mov
or
lret
push
sbb
dec
cmp
push
das
push
add
mov
cmpsb
add
xor
movsl
sbb
sub
dec
repz
xor
cmp
mov
jo
clc
jmp
loopne
cmp
pop
add
test
add
adc
enter
inc
adc
enter
or
jae
imul
insl
arpl
jmp
call
cmpb
mov
stos
mov
fadd
not
sub
lods
stos
add
insb
imul
push
mov
sub
xlat
clc
and
hlt
or
movsb
cmp
int
subl
in
fld
in
in
pop
aaa
adc
pop
inc
xor
shr
loopne
adc
jl
imul
fwait
cs
int
aaa
ret
mov
out
repz
xchg
stos
mov
cli
push
fcoms
test
rcrb
mov
adc
and
xchg
in
xchg
mov
testb
jo
mov
or
mov
push
push
rcrb
ret
mov
fisttps
es
dec
data16
xlat
rol
int3
adc
and
cld
and
cld
sbb
mov
decl
fdivr
filds
fstpt
rolb
inc
cmc
add
cmp
xchg
add
in
inc
and
jle
fwait
cmp
dec
leave
fnstcw
ja
pop
movsl
pusha
jmp
jle
pop
mov
lods
cmp
mov
jmp
sub
pop
fildl
cmpsb
gs
xchg
push
pop
jmp
pop
jmp
mov
les
jno
dec
sub
sarl
cmp
xor
mov
fwait
cmc
cltd
mov
ds
add
out
sub
sbb
add
in
cmp
sub
pop
aam
and
inc
imul
sbb
or
mov
pop
and
test
jo
das
jae
test
aaa
out
cmpb
idiv
mov
jno
loope
outsb
sti
in
xor
mov
push
push
sti
mov
ljmp
mov
pop
ret
scas
mov
add
inc
push
jl
mov
inc
ja
fbld
sbb
mov
mov
xor
mov
cs
xchg
out
addr16
imul
icebp
jle
stos
gs
mov
mov
adc
outsl
sub
xchg
jae
sbb
shrl
loopne
sub
pop
mov
pop
int
xor
xor
in
jno
cmp
add
iret
jecxz
dec
in
sub
test
mov
gs
dec
leave
jecxz
cld
mov
push
adc
pop
in
lret
sub
orb
dec
insb
imul
loopne
push
aad
sbb
mov
sub
ljmp
in
sti
movb
cmpsl
mov
bsf
mov
pop
lcall
shlb
test
fnsave
sub
lods
jp
xchg
mov
push
adc
mov
shlb
divb
out
pop
insb
and
ds
cld
adc
mov
mov
das
xlat
mov
lock
movsb
cmp
xor
pop
or
and
sbb
sahf
pop
scas
repz
sub
leave
imul
xchg
das
dec
iret
sub
rcl
jecxz
scas
push
jecxz
or
sbbb
lahf
mov
fdivrl
push
pop
ja
mov
push
repz
call
bound
dec
fadds
add
pop
push
push
fisubrs
stos
fimuls
out
stos
jg
mov
es
call
mov
jmp
movsb
jl
mov
lret
scas
insl
shl
sub
mov
or
jle
push
dec
lods
popw
out
mov
leave
sub
mov
cmpsl
test
js
jp
into
rorl
mov
push
mov
leave
popf
inc
les
jmp
leave
ja
cmc
xlat
es
jmp
jl
les
xlat
inc
and
xchg
loope
addr16
cmp
mov
fmuls
inc
mov
fidivrs
xorl
fcomi
mov
dec
jle
insb
stc
stos
pop
jne
lock
fcomps
xchg
mov
and
add
push
sub
out
iret
daa
loope
xchg
inc
inc
or
pop
xchg
jno
jge
leave
sub
or
mov
xchg
jle
data16
loope
rcrl
adc
push
jge
dec
cmp
lods
jo
andl
in
or
in
repnz
outsl
sahf
and
and
lock
lahf
and
adc
je
xchg
out
or
dec
xchg
dec
sti
mov
in
aad
sub
popf
or
fdivr
sbb
lds
fs
cmp
mov
xlat
scas
cmc
ljmp
test
or
mov
hlt
xchg
daa
mov
push
push
lock
dec
arpl
sbb
negl
add
mov
push
js
sti
aad
mov
outsl
jo
enter
icebp
and
pop
xor
lret
add
ret
jmp
movsl
and
stos
adc
xchg
leave
jnp
in
sbb
ss
insl
js
test
or
repz
ljmp
push
ljmp
mov
pop
push
int
jo
divb
jns
call
pop
out
aaa
je
or
sahf
and
testl
mov
ds
pop
pop
push
mov
out
popa
clc
pop
sub
sub
subl
sbb
pop
js
fldenv
lahf
mov
push
jecxz
mov
jg
popa
test
mov
mov
leave
sbb
ljmp
mov
idivl
outsb
bound
push
push
gs
imul
das
ja
les
cs
cwtl
fbstp
push
idivl
movsb
std
jge
orb
xor
adc
pop
jne
cld
jne
xchg
jge
insb
mov
cmpsl
repnz
xchg
inc
cmp
sub
lea
nop
sbb
std
mov
cmp
xorl
stos
in
push
lods
pop
out
pushf
hlt
pop
xchg
mov
push
ret
fstpl
ret
stc
sub
push
push
sahf
or
int3
jmp
shlb
or
and
inc
pop
movsb
inc
push
test
push
pop
jno
sub
and
mov
inc
adcl
fdivrs
sti
jmp
ret
popl
fisubs
or
pop
cmovl
cs
rorl
mov
mov
mov
dec
lock
adc
rcl
es
mov
pop
mov
cmp
cwtl
fnstsw
pop
jns
pusha
pushl
xchg
imul
imul
fisttpll
orb
or
xchg
scas
addb
mov
flds
in
cli
jl
lea
xor
push
in
out
fcoms
fnstenv
scas
cmpsb
push
cli
cmp
cmp
mov
jmp
jecxz
mov
jmp
jnp
out
loope
pushf
dec
mov
add
adc
add
inc
fiadds
push
pop
std
outsl
data16
or
mov
dec
dec
jno
inc
pop
int
add
movsb
insb
inc
je
je
out
mov
es
hlt
in
movsl
jns
inc
in
out
inc
cmp
mov
lds
dec
call
and
or
sti
xor
cltd
jns
inc
ds
stos
cmp
inc
mov
cmp
data16
lds
repnz
sarb
or
pop
movsl
outsl
mov
add
dec
nop
repnz
xor
cmpsl
js
jg
jb
sti
push
out
dec
jbe
pop
sbb
movsl
je
in
fmul
rorb
aam
pop
adc
inc
xchg
scas
jb
in
rol
stos
fst
imul
cwtl
pop
adc
xchg
cmpsb
mov
int
add
leave
sbb
mov
xor
test
mov
pushw
mov
push
dec
pop
cmp
jg
icebp
test
dec
pop
shr
pop
dec
jb
push
jbe
dec
fwait
movsb
xor
es
lds
insl
jg
popf
jmp
repnz
mov
mov
push
jp
cmovo
pop
adc
jg
loope
mov
pop
or
cmp
push
mov
add
jbe
mov
aam
daa
inc
mov
lcall
cmp
xchg
data16
mov
or
push
into
xor
fistl
mov
mov
aas
pop
lahf
jns
push
in
std
loopne
rorl
xchg
shr
add
mov
pop
leave
je
out
mov
or
jns
ljmp
mov
or
nop
push
xchg
mov
iret
popf
cmpsl
sub
imulb
jge
or
mov
fs
and
and
pop
or
dec
ret
popa
cmpsb
ret
and
dec
aaa
push
fldl
fwait
sbb
stos
push
test
rcrl
dec
push
js
aad
testl
daa
dec
test
insb
test
mov
pop
lret
into
adc
sbb
shl
mov
in
add
outsl
mov
cmp
xor
xchg
push
add
outsb
mov
daa
sub
lcall
subl
mov
xchg
lea
fdivr
mov
fisttps
mov
int
in
scas
push
jmp
jle
cmp
adc
mov
or
je
ret
testl
in
insl
lcall
xor
or
sub
call
dec
xlat
xchg
mov
jno
inc
mov
subl
mov
mov
fs
cmp
les
jo
ret
add
arpl
dec
rolb
xor
lret
stos
or
adc
mov
push
mov
inc
mov
xchg
cs
pop
mov
in
cmc
inc
repnz
mov
inc
mov
jne
movsl
fstps
faddl
icebp
sbb
imul
addr16
insl
fadd
pop
xchg
lods
pop
test
dec
lods
fdivrl
jnp
movsb
mov
or
fwait
aas
add
cmp
shll
test
lock
and
sub
xchg
int3
stos
sub
scas
xchg
jmp
insb
gs
das
scas
mov
lds
and
shrb
fiadds
dec
dec
arpl
repz
sbb
sub
lods
xor
into
rcl
mov
mov
sbb
mov
sub
test
push
push
rorl
jg
jl
mov
jb
cli
mov
negb
push
cli
andb
fistpl
mov
ljmp
jmp
dec
or
inc
aam
jp
inc
das
adc
dec
in
mov
je
and
adc
nop
sahf
jmp
fnstenv
lods
into
addl
cmpsl
jbe
or
or
decb
and
pop
das
push
shll
inc
shll
stc
int3
int3
incl
fidivs
mov
int
insl
push
pop
and
inc
imulb
mov
sahf
and
jae
mov
and
divb
dec
mov
popf
sbbl
inc
dec
rorb
and
push
leave
ja
clc
int
cli
test
in
mov
stos
add
mov
inc
fidivrl
repnz
rcl
jg
or
out
xor
lods
push
add
test
mov
addr16
push
jne
dec
cwtl
sahf
push
sbb
loope
stc
jecxz
push
popa
lahf
pop
pop
int
gs
ss
mov
xor
jns
jae
mov
sub
pop
and
pop
cmp
push
push
mov
xchg
inc
stos
js
add
ss
fs
repz
add
fbld
sbb
add
int
xchg
and
adc
push
gs
aam
cli
jg
subl
int3
in
jmp
loope
inc
xchg
imul
jns
dec
xlat
cld
adc
dec
sub
mov
jno
mov
cmp
jmp
cmp
xor
dec
jo
pop
scas
outsl
jge
pop
mov
jl
add
mov
pop
addr16
inc
lds
lock
add
and
rclb
lea
aas
js
sub
mov
push
push
test
outsb
loop
sbb
iret
adc
jge
ret
mov
sbb
repnz
lods
shrb
fcompl
sbb
add
rorb
in
nop
sbb
mov
or
fnstcw
adcl
bound
cltd
insb
xor
mov
cltd
mov
cmp
cltd
int
testl
mov
mov
lods
sub
call
pop
jmp
mov
xor
sub
mov
jg
aaa
shrl
cmpsl
or
pop
or
addr16
push
das
lock
sbb
int3
xor
push
pusha
inc
mov
test
cmpsb
das
or
dec
mov
xchg
fwait
add
mov
jg
or
sahf
mov
fbstp
xor
mov
pop
mov
push
add
mov
sar
cmpsl
mov
mov
nop
inc
pop
nop
nop
mov
xor
es
leave
mov
inc
sbb
pop
cmpsl
push
shl
xor
cmp
dec
imul
fimuls
jo
inc
ja
aad
xlat
xlat
push
insb
cmp
mov
xchg
pop
das
push
sub
addl
push
loopne
stc
idivb
mov
push
dec
adc
push
xchg
push
pop
xchg
les
mov
xor
cmovle
xor
je
repnz
pushf
jge
decl
cmpsb
flds
sub
in
fsub
ds
pop
lret
jg
xor
adc
sbb
hlt
jl
sub
cltd
or
push
pop
cwtl
add
inc
test
js
jno
cld
and
bound
fimull
mov
adc
fucom
xchg
cmpsl
cmpb
lds
mov
xor
xchg
mov
xor
test
jns
aaa
cltd
cmpb
test
mov
jnp
fmull
or
cmpsl
dec
jae
jb
ret
movsl
mov
icebp
pop
fsubrl
mov
fnstenv
ss
mov
sbb
push
mov
add
mov
add
lahf
sahf
or
in
jne
mov
icebp
cmp
inc
fimull
mov
nop
stos
aas
xor
into
jl
pop
imul
add
add
idiv
jnp
insl
pop
mov
outsl
cmp
dec
mov
mov
xchg
add
cmp
in
push
scas
and
push
stos
mov
pushf
jle
push
aad
mov
fwait
out
jne
xor
mov
sbb
add
lods
les
cmp
mov
cmp
dec
and
les
jnp
cwtl
inc
push
mov
xchg
mov
and
mov
movsb
cwtl
sbb
mov
pop
sbb
leave
dec
insb
data16
dec
pop
movsb
dec
test
sbbl
mov
aad
call
push
cld
mov
mov
mov
inc
sti
xorb
in
daa
push
add
fidivrl
imul
add
or
dec
leave
cmp
pop
pop
cld
pop
xchg
inc
inc
maxps
sub
repz
inc
cmp
or
sbb
push
out
mov
lods
xor
and
pop
mov
jnp
imul
sbb
lods
ss
stos
cmp
dec
into
fsubrl
aas
ret
xor
and
or
imul
add
or
pop
push
mov
mov
sub
or
insl
hlt
out
daa
cmc
imul
pop
add
sahf
jb
add
cmp
inc
bound
add
repnz
sub
fsubs
icebp
fnstcw
ret
pop
xchg
xor
aas
dec
sbb
jo
fnstsw
outsb
cwtl
sbb
iret
jle
sbb
pop
cmp
jmp
adc
mov
push
insl
xor
and
xchg
mov
lcall
fstps
aaa
push
jno
fcmovnb
xchg
xchg
push
setns
xor
sarl
subb
push
mov
scas
test
dec
push
lcall
add
in
sbbl
lods
pusha
fwait
int3
push
inc
pop
jns
mov
or
ret
test
and
and
add
xchg
cmp
cmp
pusha
ljmp
sbb
xchg
xor
mov
sbb
repz
das
pop
pusha
sahf
mov
stos
pop
inc
lret
in
fwait
jne
inc
fucomip
jmp
arpl
push
cmpsl
and
lea
push
push
or
shll
repz
outsb
cmc
ret
xchg
vmwrite
inc
jg
mov
sub
lcall
ljmp
imul
xor
cwtl
fnstcw
mov
int3
push
push
clc
in
fsubs
cmp
push
add
sti
test
inc
inc
inc
sbb
cs
sub
stc
nop
cltd
push
mov
and
aad
push
orl
pop
sbb
pushf
push
mov
jbe
subb
fdivp
pop
inc
mov
data16
andb
int
mov
sub
pop
pop
ds
xchg
jne
push
stos
sbb
adc
sub
enter
adc
pop
mov
cltd
test
aaa
ljmp
pop
lea
push
ss
ror
add
hlt
push
push
sub
sbb
movsb
fdivl
in
adc
insb
in
push
int3
hlt
sbb
sbb
and
xor
lea
mov
pop
sub
seta
popf
pop
jecxz
shll
fsubs
lahf
inc
test
sbb
add
sub
push
and
dec
repz
pop
adc
aas
rcrl
cmc
iret
mov
rcl
mov
mov
add
iret
sbb
jmp
mov
out
std
mov
imul
std
mov
je
loope
or
je
cmp
popf
mov
push
pop
flds
push
subb
dec
fsub
jmp
and
mov
mov
cmpsl
sbb
je
dec
inc
cmp
pop
cmp
pushf
push
stos
shlb
lock
jg
add
or
sbb
lret
icebp
fadd
lods
fwait
int
add
pop
pop
js
loope
mov
nop
add
hlt
pop
scas
fldt
inc
jnp
jmp
shrl
insb
sbb
rcll
cmpb
mov
imul
lods
std
jl
repz
inc
out
andl
pop
idiv
shrb
pusha
iret
loopne
pop
push
lods
add
test
xchg
jge
loope
and
dec
xchg
insb
or
xor
sub
mov
jmp
or
xor
jge
int3
mov
mov
sbb
shrb
pop
cmp
or
adc
mov
push
stos
add
dec
sub
outsb
aas
dec
push
aaa
dec
stos
sub
or
fucomi
mov
sarl
or
pop
inc
fs
sbb
lahf
rolb
xorb
or
cmpsb
xchg
arpl
mov
push
pop
xchg
inc
mov
in
jecxz
ljmp
iretw
loop
xor
lret
push
stos
dec
aas
pop
stc
push
stc
ret
adc
xor
and
xchg
arpl
insb
mov
cmp
insb
inc
add
mov
in
jge
in
rcrb
jns
neg
pop
sub
lretw
stos
sbb
les
push
cmp
pushf
mov
imul
adc
insb
xchg
add
adc
xchg
in
loopne
test
fwait
and
pop
push
pop
test
insl
push
pop
dec
ss
popf
push
pop
popf
imul
cltd
pushl
in
mov
sub
mov
mov
and
xor
cmp
cmpsl
push
adc
mov
fnstenv
ret
and
and
lret
dec
jl
pop
mov
jae
sbb
fwait
xlat
cmpsb
loopne
push
mov
outsb
inc
pop
jo
mov
dec
in
mov
mov
push
xchg
int
pop
xchg
pushf
cmp
xchg
sub
scas
pusha
inc
mov
pushf
pop
or
mov
mov
stos
es
rcr
iret
cmp
inc
test
mov
xchg
xchg
out
call
and
movsl
pusha
out
out
adc
pop
inc
insb
jmp
aaa
add
xor
pop
dec
jns
and
lods
mov
or
lret
iret
or
dec
cmc
aad
mov
mov
aas
xchg
jbe
ds
movsl
mov
push
lcall
push
ret
and
inc
jnp
fdivrs
cld
mov
loopne
jecxz
xchg
sub
pushf
mov
mov
test
xor
mov
mov
je
add
xchg
cli
sub
xchg
scas
bound
and
shll
xchg
fidivl
iret
inc
cwtl
and
out
jecxz
mov
movsb
cmpsb
mov
jmp
xchg
adc
dec
mov
shll
add
rolb
dec
add
adc
inc
lods
dec
pop
inc
movl
fwait
sti
hlt
cmp
jnp
push
scas
lea
dec
mov
mov
lahf
cmp
pop
int3
mov
and
test
les
sbb
loope
lahf
cs
lods
push
loop
aaa
add
cltd
imul
das
jle
push
jne
jmp
out
mov
add
adc
cmp
ja
jecxz
mov
xchg
nop
fwait
shl
fcoms
roll
xchg
push
jne
adcl
mov
and
lock
push
pop
sbb
jb
roll
mov
adc
dec
add
mov
stc
or
push
mov
jle
push
xchg
mov
jge
daa
sub
jecxz
jns
pop
jmp
repz
pop
sub
outsb
leave
ud1
rcrb
jp
cmc
sti
xchg
cltd
fisttpll
push
inc
fistpl
adc
jle
cmp
pop
lea
jo
dec
sbb
pop
mov
xchg
in
repnz
jl
and
jecxz
jecxz
lahf
pop
add
jno
into
dec
cs
cmp
cli
in
inc
clc
mov
mov
loop,pn
xchg
ss
out
cmp
mov
add
fs
and
test
out
mov
lahf
lods
hlt
mov
xchg
mov
sub
adc
mov
fwait
sahf
sti
xor
and
lea
insl
adc
jg
imul
jge
sbb
and
cs
pop
jp
jge
lcall
dec
sub
test
xchg
jns
and
adc
and
popf
push
xchg
jae
mov
call
fnsave
out
out
jle
fisubl
nop
loop
adc
iret
xchg
xor
mov
push
loop
sbbl
icebp
or
xchg
stos
add
lods
lret
fisubs
pop
adc
mov
inc
cltd
xchg
insl
outsl
lea
cmp
push
cmpsb
add
push
loope
or
sbb
cs
jns
icebp
push
icebp
loope
lcall
jno
xchg
popa
and
dec
gs
icebp
adc
cld
rclb
cli
out
lods
fxam
repnz
aaa
sbb
inc
iret
aas
ljmp
ficomps
cmpsb
xchg
jae
fiadds
sub
and
add
sub
gs
cmc
in
and
mov
lods
pop
sar
mov
add
cmp
and
mov
clc
dec
cmp
cmpsb
jg
mov
and
sbb
dec
stos
xor
loope
add
stos
mov
pusha
jbe
lret
aam
cmp
sub
mov
or
in
fcompl
dec
in
push
cli
ja
push
fisubs
inc
sub
and
or
fwait
fwait
movl
pusha
pop
push
cmp
ret
mov
fstps
ret
dec
fistpll
cmpsb
ret
das
dec
and
aad
dec
subl
inc
cmpsb
in
push
stc
jecxz
out
ss
jecxz
mov
push
push
push
fnsave
aam
testb
arpl
dec
aas
or
and
nop
dec
aaa
add
or
lahf
cmc
pop
test
nop
fisttpll
jne
insb
pop
inc
push
push
test
in
outsl
int
xchg
mov
sti
xchg
pop
and
mov
and
call
std
or
int
mov
adc
mov
out
les
clc
shrb
pop
popw
push
insb
dec
jmp
fwait
pop
mov
bound
rorb
push
out
cmp
das
pop
or
clc
add
repz
int3
cs
in
fnstcw
mov
das
or
dec
test
adc
loope
mov
push
cmc
xor
pusha
pop
push
mov
xor
jne
cltd
pop
frstor
hlt
scas
and
sub
add
push
mov
jp
sbb
les
xlat
pop
xlat
pop
mov
aas
popa
adc
dec
pop
pop
sbb
sbb
enter
jne
cmc
push
cmp
call
testl
adc
adc
repz
mov
scas
push
mov
in
sub
cltd
dec
imul
notl
or
adc
imul
mov
mov
and
cli
cmp
sub
jp
xor
addb
rcrb
int
or
loope
inc
cmp
pop
bound
mov
mov
loope
cmc
and
push
nop
xor
popa
or
fs
inc
clc
xchg
adc
lar
jl
imul
addr16
or
outsl
push
inc
push
xchg
sbb
sbb
add
inc
bound
adcl
jp
pop
sub
adc
rol
push
ds
push
in
add
mov
andb
dec
push
sti
inc
adc
fwait
sbb
icebp
clc
and
fdivl
call
pushf
insl
sbb
mov
ret
jl
pusha
push
pop
push
inc
push
ljmp
xor
sub
test
xor
mov
das
cli
loopne
mov
fistpll
icebp
rcll
dec
add
in
shl
ss
or
pop
mov
xchg
mov
xchg
push
gs
xor
cmpsl
or
les
ret
sarb
in
xorl
arpl
testb
mov
in
adc
push
jae
nop
mov
cmp
aas
test
test
into
xchg
cmp
sub
xlat
xor
jmp
sti
inc
dec
in
aaa
scas
fcomp
xor
iret
cmp
adc
mov
movsl
jo
adc
scas
cmp
jg
int
aad
pushl
out
cmc
mov
mov
adc
out
jne
fs
repz
dec
dec
cmp
xchg
push
roll
dec
add
movl
push
ja
adc
cld
daa
xor
sub
and
dec
mov
lret
or
gs
xlat
sub
push
enter
ljmp
pop
inc
push
xchg
lds
idivl
daa
push
mov
jge
pop
sbb
mov
shrb
shlb
inc
divl
mov
orl
inc
sub
pop
or
shlb
cmc
inc
xchg
mov
stc
add
outsb
xor
mov
leave
dec
xorl
jnp
sub
inc
repnz
mov
movsb
mov
adc
fists
sbb
inc
mov
or
dec
daa
dec
mov
xor
les
pop
dec
push
add
in
rcrb
push
and
push
popa
mov
xor
test
je
adc
movb
inc
mov
or
call
or
push
lods
adc
movsb
rcr
pop
in
xchg
mov
test
mov
xor
js
loope
sbb
out
jmp
xlat
xchg
gs
shlb
test
xlat
ret
out
repnz
js
frstor
mov
and
mov
subl
cmp
inc
int3
and
dec
je
loopne
fwait
out
test
sbb
out
mov
mov
fimuls
or
pusha
mov
nop
andb
mov
cltd
cld
push
mov
or
push
lea
pop
pushl
mov
jg
out
scas
push
imul
or
jo
or
push
or
popf
mov
inc
pusha
loopne
les
test
jl
and
imul
icebp
outsb
mov
jle
jp
shr
sub
out
iret
fadd
mov
sti
dec
scas
cmp
or
xor
xor
xchg
dec
sahf
lcall
xor
sbb
or
or
push
inc
xor
mov
mov
add
pop
xchg
or
arpl
test
stc
cmp
or
inc
arpl
cwtl
jge
out
insl
ss
fnsave
mov
lods
filds
das
xchg
stc
cmpb
sbb
push
cmpsl
arpl
xchg
popa
gs
clc
or
sub
jle
mov
sub
ret
jb
xchg
mov
loope
insb
sbbb
insb
cs
dec
add
cmp
fs
or
cmp
add
test
in
leave
xor
or
fldt
popf
nop
loope
dec
jns
mov
addr16
push
fisubs
sbb
mov
imul
push
or
pop
mov
jmp
dec
mov
jns
std
adc
test
push
outsb
jge
sahf
in
add
ss
hlt
mov
mov
out
movsb
clc
xchg
rcll
push
xchg
inc
mov
lock
out
xor
jle
and
imul
mov
cmp
out
stos
imul
push
subb
sbb
sar
cs
inc
sti
mov
pop
pop
mov
pushf
pop
mov
je
or
pushf
jmp
pop
inc
lock
xchg
cmp
cmp
out
pop
movsb
push
xchg
mov
jnp
mov
mov
test
mov
mov
shl
mov
jno
dec
hlt
sub
imul
into
test
call
popa
pop
cs
lcall
push
pop
mov
lcall
loope
cmp
loop
gs
xlat
adc
out
aaa
cmp
fcom
jecxz
movsb
mov
ffree
movl
add
adc
cltd
jns
lods
lret
push
xor
mov
pop
cmp
sbb
test
adc
push
repnz
add
inc
inc
ret
mov
out
popf
pop
mov
adc
inc
clc
xchg
test
ss
and
inc
scas
iret
call
add
sub
adc
pop
mov
arpl
out
cltd
jg
mov
outsb
fwait
ja
imul
dec
inc
mov
lods
pop
outsb
mov
popf
sub
pop
add
xor
mov
mov
into
addl
inc
repz
outsl
mov
rorb
lods
bound
shll
jg
outsb
dec
ja
or
mov
add
adc
cmp
fwait
lret
dec
test
lods
sbb
jl
sub
adc
movsb
popa
cmp
jb
movsl
mov
shll
test
mov
rcrb
fmull
das
mov
shlb
test
adc
iret
ljmp
cmpsl
xchg
je
stos
dec
jno
cmc
or
mov
in
or
cmp
mov
mov
shrl
jle
out
and
enter
mov
sbb
ljmpw
mov
movsb
ss
pushf
mov
mov
and
or
or
and
add
mov
or
test
pop
mov
sub
xchg
adc
sbb
cmc
mov
jae
xchg
push
sub
stos
lods
dec
mov
adc
fstl
jl
jmp
hlt
xchg
data16
cwtd
out
or
xchg
mov
pop
js
loope
scas
lret
xchg
and
ret
fwait
pop
fdivr
aas
xchg
paddsw
dec
je
xchg
mov
les
icebp
mov
insb
add
insl
sarb
mov
hlt
lods
sub
sub
call
bound
mov
pop
roll
xchg
mov
adc
fildll
add
imul
xchg
dec
inc
pop
je
xor
pop
stos
inc
stc
mov
mov
outsb
aaa
rclb
mov
fnsave
xor
and
sahf
jle
fidivs
negb
jno
addr16
testl
mov
cmpsb
dec
inc
pushl
sub
stc
xlat
imul
pop
mov
pop
rcrl
xchg
scas
scas
mov
jns
lret
adc
popa
cmpsl
lret
enter
jb
push
push
jmp
sbb
or
les
xor
cmp
std
pop
dec
cmc
lret
xchg
mov
std
ss
sbb
hlt
imul
jp
cwtl
aaa
cmpsb
aam
and
mov
fwait
addr16
mov
sub
in
mov
xchg
adc
sub
sti
push
ficoms
scas
xchg
sub
cmp
movsl
enter
add
xchg
cmp
fwait
sti
shll
insl
xor
adc
outsb
ds
cs
frstor
cmp
mov
sub
fsub
test
sbb
cltd
loope
pusha
jb
mov
aad
out
fstpt
mov
pop
and
flds
sbb
repz
mov
inc
enter
imull
ljmp
rolb
sbb
inc
adc
push
pusha
dec
das
and
jecxz
dec
sahf
mov
or
addr16
xor
repnz
xchg
push
sub
psubusb
or
pop
pop
push
mov
rol
rolb
lods
and
jl
inc
int3
pop
jl
movsl
push
inc
jp
call
sbb
push
ds
mov
jecxz
mov
enter
sub
outsl
mov
hlt
cmp
loopne
out
lret
dec
cmpsl
test
maxps
in
jb
sub
sbb
in
xchg
in
adc
mov
jae
inc
test
dec
rclb
mov
jl
xor
pop
das
add
mov
pop
adc
popa
inc
push
ja
jo
jno
sub
rep
inc
xchg
push
lock
loopne
mov
nop
pop
adc
das
sub
inc
fsubr
pop
mov
xor
pushf
mov
int3
ja
mov
orl
mov
stc
mov
mov
lods
and
or
xor
cwtl
adc
out
sbb
mov
cwtl
aad
ss
pusha
cmp
movsl
push
data16
pushf
cmp
and
xor
add
cld
and
sub
jmp
add
test
cmp
bound
rol
mov
jae
dec
pop
repnz
inc
int3
icebp
fisubl
add
negl
pop
adc
dec
mov
add
mov
insb
sbb
mov
mov
js
fwait
outsl
arpl
xchg
ss
aaa
xlat
mov
ljmp
lods
mov
fs
xchg
mov
call
and
icebp
popa
add
mov
clc
jge
js
mov
aad
mov
push
mov
xlat
mov
aas
lret
shll
lea
fsubrs
es
cmp
lret
stos
fdivp
pop
rcll
mov
add
adc
fbstp
out
int3
mov
mov
popf
lods
shll
mov
inc
int3
addr16
leave
xor
cmp
pop
repz
out
aas
test
mov
loope
cmpl
push
jl
test
cmp
mov
mov
xchg
movsl
into
je
imul
fistpll
clc
fdivrp
scas
mov
push
inc
inc
sub
mov
or
adc
mov
loope
sahf
jmp
ds
xchg
out
cmp
sahf
popf
icebp
jle
jnp
push
mov
int
sub
mov
js
mov
xor
orl
bound
mov
out
cmp
push
pop
ja
repz
es
in
test
stos
pop
mov
or
and
je
into
lods
cmpl
cltd
icebp
cmp
fbstp
or
std
mov
push
push
jge
inc
rcr
dec
cmp
imul
shrl
sbb
jno
jb
mov
aad
scas
mov
lods
les
adc
sub
lea
test
xor
pop
cmpsb
or
jmp
repz
cmp
jne
xchg
addr16
cli
adc
sysenter
loop
testb
mov
dec
fildll
repz
movsl
and
lods
in
xlat
sub
into
push
les
hlt
jmp
dec
jns
in
sbb
mov
fsubs
flds
adc
movsb
dec
testb
adc
mov
in
inc
adc
sti
mov
shl
mov
movsl
ljmp
nop
jbe
xor
jne
or
mov
repnz
imul
popf
inc
js
and
mov
dec
cmp
hlt
insb
jmp
test
inc
pop
add
dec
or
cmp
jg
movsb
and
push
icebp
scas
jne
ret
repnz
mov
sbb
subl
mov
rorl
popa
mov
jmp
aam
cmp
dec
and
xchg
rcl
xchg
xchg
nop
cli
insb
aam
out
push
es
and
shll
xchg
add
or
add
iret
lods
sbb
push
xlat
adc
adc
movsl
add
mov
xor
test
cmp
pushf
jle
pushf
repnz
pop
lea
lret
jbe
mov
push
test
mov
cmp
lahf
mov
fdivr
dec
or
fucom
mov
loopne
pop
inc
and
pop
data16
cmp
test
cld
je
pop
mov
in
dec
fsub
mov
xchg
iret
test
push
lcall
pop
add
ret
xchg
imul
pusha
sbb
jecxz
in
imul
popa
add
xchg
inc
repnz
rorb
mov
or
jmp
scas
iret
lret
xchg
ret
clc
push
popf
push
dec
clc
ja
shlb
push
lret
pop
sbb
mov
hlt
adc
and
das
lahf
jns
add
add
dec
jle
xchg
leave
sub
jg
insl
mov
xor
in
aam
repz
in
popf
mov
cmp
inc
shll
dec
mov
int
xor
ds
std
push
mov
stos
push
test
and
ret
mov
mov
cltd
sbb
inc
sub
xchg
popf
xchg
movsl
shll
enter
popf
shrb
mov
into
test
cmp
or
movsl
je
fnstsw
xchg
aas
push
or
sbb
push
loop
mov
fucom
repz
ja
pop
in
cmp
mov
jbe
hlt
cmp
mov
and
icebp
out
pop
mov
jp
lods
out
dec
nop
mov
add
fdiv
mov
pusha
fwait
rorl
jb
fwait
dec
test
push
movsl
jo
dec
fdivrl
sbb
jp
xchg
stc
dec
aad
pop
outsl
nop
cmp
xchg
ljmp
jae
int3
and
lods
pop
dec
or
xor
mov
adcl
mov
jo
pop
rcrl
arpl
lret
pop
in
xchg
test
popf
ret
jmp
orb
pop
dec
jnp
mov
add
sub
iret
mov
test
or
push
cmp
imul
sub
mov
shr
fldl
and
fs
outsb
mov
sbb
adc
fists
dec
in
clc
cmp
or
mov
into
jl
repnz
ret
out
push
out
push
sahf
sbb
loope
testb
les
dec
sti
mov
add
or
data16
ljmp
pop
or
xchg
mov
ja
jmp
clc
roll
call
and
loope
adc
dec
enter
adc
jbe
lcall
test
mov
mov
fstpt
ds
pop
leave
xor
push
cmc
ret
movsl
jnp
sahf
fxtract
fisubl
clc
push
add
jg
mov
mov
add
outsb
pop
pusha
sar
dec
fcom
ljmp
leave
push
inc
xor
in
mov
pop
fimull
lret
aas
sti
mov
dec
xor
enter
divl
scas
xor
insl
lea
and
sub
ja
mov
pinsrw
sar
loopne
ret
fimull
mov
loope
pop
jle
jge
jnp
dec
inc
cwtl
mov
arpl
loope
mov
jnp
and
rorl
dec
sub
pop
fs
sbb
mov
push
adcb
pop
jecxz
push
loop
scas
je
inc
mov
mov
lds
sbb
jge
in
pop
shll
leave
mov
dec
loop
jg
icebp
adc
cmp
icebp
push
mov
dec
cwtl
test
pop
repnz
jnp
lea
and
popl
aam
mov
adc
cmp
cmp
sbb
int3
roll
daa
aad
mov
call
jmp
cli
push
inc
mov
mov
cwtl
and
in
loopne
fisubrs
mov
add
pop
sbb
lret
movsb
sti
popf
and
fucom
gs
add
sbb
orl
jnp
xchg
lock
movzwl
cli
push
loop
cmp
fcoml
and
and
outsb
and
call
je
jb
ljmp
xor
daa
xor
insl
lock
lds
dec
jl
data16
cmp
aaa
mov
ret
xor
jae
fs
add
xchg
adc
stos
dec
inc
stos
and
jns
push
push
sub
ret
sbb
push
jge
fsubp
jnp
das
mov
sarb
fimull
fsub
adc
dec
inc
fs
lret
shll
fadd
lret
jg
inc
adc
push
fidivs
arpl
inc
dec
aas
mov
mov
nop
jnp
fsts
pop
nop
out
jbe
in
out
ret
adc
in
mov
out
sub
jne
enter
adc
les
pop
inc
xchg
add
inc
add
gs
cmp
hlt
and
testl
xchg
js
fs
call
push
aad
and
icebp
xchg
dec
add
xor
cs
cmc
ret
mov
and
sarb
cld
ja
jmp
xlat
mov
stos
push
push
lds
mov
call
comiss
mov
xor
push
outsb
jo
les
ret
pop
dec
repz
add
aaa
repnz
push
mov
dec
jno
xor
call
repnz
push
mov
jbe
nop
mov
mov
in
inc
pop
movb
aam
hlt
daa
xor
mov
mov
rorb
leave
cmp
push
je
lods
loopne
in
and
adc
add
xchg
mov
or
mov
xchg
loop
xor
inc
std
icebp
xor
outsl
cmp
call
inc
loope
lock
cs
push
in
or
inc
mov
pop
adc
dec
dec
fstl
sysenter
pop
xchg
subl
stc
je
int3
mov
jmp
test
and
sub
push
push
lret
push
ljmp
pop
test
shll
and
lods
jae,pn
popf
pop
ss
lods
mov
push
call
test
mov
jp
in
dec
aad
xchg
popa
push
lock
push
dec
jmp
jmp
inc
mov
into
out
push
xchg
addr16
mov
shr
cmp
mov
lahf
imul
add
adcl
inc
mov
cltd
sbb
jno
pop
jns
loope
stc
or
inc
inc
xchg
push
insb
ret
into
xchg
inc
and
sub
mov
mov
mov
push
gs
inc
mov
mov
jge
push
sarl
inc
out
hlt
jg
divb
mov
fmuls
mov
std
pop
hlt
pushf
fdivs
fwait
pop
push
sub
xor
jne
and
cmp
js
hlt
je
scas
fwait
cs
cmp
cmp
aas
mov
fst
dec
push
int3
or
push
sbb
pop
pop
and
jl
in
insl
push
pop
or
daa
inc
fdivrl
loope
cmp
fstps
jb
mov
cmpb
les
xchg
stc
in
pop
stc
arpl
mov
mov
push
inc
sti
xor
sbbb
xlat
xor
inc
add
push
cwtl
xchg
sub
jg
fldl
popa
aaa
shll
stc
jmp
or
rcrl
pop
or
test
and
imul
lds
or
fisubrs
sahf
xor
xor
lea
es
xor
add
loop
push
imul
pushf
in
and
sbb
adc
adc
adc
jne
mov
jp
pop
sub
xlat
frstor
push
pop
pop
clc
in
or
andb
adc
xchg
jb
test
push
and
mov
push
pop
shrb
ds
and
dec
imul
push
xor
mov
outsb
jne
inc
ret
dec
mov
cmpsl
jno
ret
dec
fwait
ja
push
in
orl
jecxz
jnp
ret
out
in
fs
mov
xor
nop
push
mov
cmp
push
imul
and
hlt
outsb
jnp
mov
xor
sbb
jno
insl
orl
cmp
and
int
movsb
cltd
test
add
mov
movsb
dec
fbld
dec
and
push
jb
std
fildll
adc
pop
faddl
js
push
stos
lret
pop
std
ret
or
push
js
sbbb
add
je
fisubrs
mov
call
pop
xchg
push
push
bound
imul
aam
cwtl
aas
sub
jae
arpl
inc
pop
pop
test
ret
jns
stos
jbe
outsb
les
or
mov
mov
push
jg
bound
add
mov
sbb
jge
ret
mov
jle
xchg
jo
mov
xchg
jge
mov
sbb
out
and
xor
mov
data16
push
int
push
insb
sub
mov
jmp
fbstp
and
pusha
imul
mov
fcoml
stos
sbb
cltd
scas
mov
cmpsl
shll
loope
scas
repnz
adc
fiaddl
imul
cmp
pop
gs
daa
jno
pop
dec
sbb
gs
test
jmp
sub
or
ds
mov
stc
js
pop
lds
aaa
cmc
add
jae
aad
cmc
adc
cli
loop
ds
jg
insl
inc
or
mov
sub
das
mov
mov
repz
lods
je
loopne
add
ret
int3
jg
loope
incb
ds
dec
mov
cmp
mov
out
dec
sbb
xlat
jmp
xor
movsb
movl
in
xchg
jno
popa
lret
pushf
popa
aad
dec
cmc
sbb
aas
xor
add
lock
xor
xchg
xchg
leave
inc
sub
push
jp
push
mov
rcrb
loopne
adc
jp
xchg
inc
mov
enter
pop
test
cmp
cmp
push
cmpsb
loope
sub
push
xchg
pushf
mov
mov
push
add
mov
jno
fcmovb
test
mov
mov
out
or
icebp
jne
mov
adcb
mov
ljmp
cmp
jb
inc
aad
pop
mov
add
scas
or
mov
lock
lea
add
movsb
push
dec
out
fcompl
xor
loopne
push
xorl
xchg
jmp
pop
push
testl
sbb
and
sarl
adc
cmc
cld
push
xchg
mov
inc
mov
or
ror
sub
push
sub
lcall
fucomip
and
sarb
adc
dec
pop
push
xor
pop
push
fxch
adc
leave
sbb
arpl
fimull
roll
mov
xchg
fnstcw
dec
stos
imul
sti
out
xorl
jl
subl
cmc
aad
jmp
or
inc
test
mov
out
aam
mov
add
lret
fisttps
add
push
lahf
lcall
aam
and
jp
xor
arpl
cmc
push
pop
inc
ds
out
adc
adc
les
dec
out
roll
add
in
mov
and
jae
imul
loop
lret
inc
fs
sub
xchg
sbb
in
mov
inc
leave
inc
mov
rcl
adc
or
fwait
jge
pop
xchg
mov
push
dec
out
lret
sub
orl
dec
add
push
push
pop
test
and
jnp
and
pop
push
sub
bt
je
pop
clc
xchg
movsb
outsl
jb
xchg
loopne
or
stos
or
jl
xchg
pushf
xchg
pop
stc
dec
jbe
or
shlb
jg
out
sbb
xor
cmc
add
ret
jmp
popa
pop
ret
xchg
adc
fisttpl
mov
and
add
rorb
mov
adc
mov
mov
jg
das
fsubrl
pop
dec
clc
sub
dec
enter
js
movsb
mov
out
repz
lods
mov
scas
rorb
add
pop
es
mov
shll
cmp
push
imul
mov
mov
xchg
or
jno
insl
cmp
pop
aad
mov
inc
das
daa
xor
mov
push
or
pop
dec
cld
jns
sbb
popa
in
cmp
clc
adc
push
jae
scas
push
das
lods
jl
push
lods
cmp
jns
shlb
pop
ds
mov
dec
sbb
bound
jecxz
or
out
bound
jg
in
aaa
xor
std
mov
inc
arpl
cmp
leave
inc
iret
jmp
mov
or
and
xchg
test
xchg
imul
add
rclb
int3
daa
inc
fcmovb
addb
into
jge
lds
pop
and
sarb
mov
movsb
aaa
cmp
inc
dec
pusha
aaa
testb
pop
and
xlat
mov
and
or
cs
lcall
pop
clc
sahf
cmp
rep
add
incb
sbb
mov
and
adc
out
cli
aad
xchg
xlat
mov
and
std
jnp
or
cmp
or
es
pusha
lods
sbb
xlat
jmp
fistpl
and
into
dec
rolb
xchg
mov
xor
repz
iret
fmuls
jae
in
aam
leave
push
mov
jl
iret
inc
mov
pop
inc
push
cmp
push
cmpsb
popf
mov
ucomiss
adc
aam
cld
push
add
testl
jge
pop
int3
pop
rcrb
loopne
xchg
lock
jg
cmc
lds
insl
fld
xchg
jb
test
mov
sahf
sub
xchg
dec
clc
movb
and
mov
test
fwait
cmp
xchg
enter
xchg
mov
pop
pop
loop
adc
aad
in
ficomps
std
fs
ljmp
out
jle
xor
sti
cmp
in
icebp
shl
js
mov
push
popf
in
mov
and
inc
or
dec
insl
dec
and
or
icebp
sbb
mov
inc
gs
scas
fs
sub
lds
std
into
ja
jmp
push
lds
xor
scas
mov
in
dec
addr16
or
xor
jl
mov
test
aad
aad
sahf
add
dec
fcmovne
jnp
lods
icebp
fst
nop
cltd
and
outsb
jbe
xlat
mov
cmp
daa
xchg
xchg
jmp
mov
xor
roll
mov
lret
mov
sbb
je
scas
mov
mov
xchg
loope
add
dec
vpavgb
insl
jb
xchg
mov
jo
mov
jmp
cli
inc
into
push
lods
jle
pop
int3
sti
fidivs
pop
movsl
xor
push
xorb
sub
xor
fdivrs
out
mov
les
pop
in
test
ss
movsb
mov
test
fs
mov
lret
in
in
sbb
lds
lods
xchg
maxps
fisttpl
iret
mov
lcall
pop
inc
int3
and
pop
daa
push
and
pop
pusha
out
decl
add
nop
test
push
xorl
ds
and
xchg
mov
mov
pop
std
js
lods
fcoml
in
mov
movsl
sbb
repnz
jae
mov
push
sbb
cmp
arpl
aas
mov
xchg
outsl
cmp
pop
push
jbe
ds
sti
jp
add
dec
adc
mov
inc
or
push
ret
xor
cld
xor
lret
andl
jmp
inc
call
cli
or
jo
movl
pop
or
inc
fnstcw
sub
fdivrs
push
mov
cld
xor
ret
das
push
push
inc
jns
mov
or
and
cmp
andl
mov
std
ficomps
mov
sbb
sbb
xor
mov
fbld
push
stos
pop
dec
int3
inc
cmp
cld
cmpsl
mov
pop
mov
dec
jae
jbe
xchg
fimuls
pop
or
xchg
in
sbb
and
ficomps
push
push
xchg
pop
jno
aad
mov
jno
cmp
add
mov
mov
cmp
les
nop
cmc
movsl
scas
shlb
out
push
push
test
les
pop
call
test
mov
not
mov
pop
mov
xchg
fcompp
and
lret
adc
push
and
stc
out
push
cmp
cmpl
repnz
adc
jp
adc
sti
cmp
enter
pop
inc
or
dec
shr
jnp
xor
sub
mov
xchg
add
int3
adcb
pop
push
mov
or
add
jmp
cmpsb
fadd
insl
popf
or
sbb
das
fdivl
dec
aas
pushf
xchg
lea
inc
and
xchg
ret
push
ret
jnp
je
stc
xor
fcmovbe
aaa
dec
pop
mov
push
incb
xchg
xlat
or
sub
push
mov
imul
xor
add
sub
push
lds
fwait
ja
insl
lret
addr16
cmp
dec
xor
add
push
dec
cmp
std
pop
das
sbb
cli
lea
sub
les
flds
outsl
mov
sbb
aad
pushf
adc
lds
sub
inc
cmp
daa
xchg
scas
lds
ficoms
or
mov
andl
daa
xchg
imul
mov
dec
xlat
js
push
sub
mov
and
jecxz
pushf
jne
adc
adc
rcr
mov
or
insb
imul
push
icebp
push
outsl
adc
mov
cld
loope
dec
or
jns
std
mov
mov
and
aas
insb
ljmp
int
inc
test
mulb
testb
into
stc
imul
test
out
push
addr16
imul
inc
inc
mov
jle
jle
mov
out
rorl
pop
lock
daa
ss
pop
lods
xchg
xor
sub
inc
add
out
mov
clc
sbb
pop
jmp
inc
outsl
push
cmpl
in
fists
cmp
sahf
adcl
test
fdivl
ret
lods
faddp
push
fcmove
ret
pop
inc
inc
dec
aas
dec
jp
sub
jl
sub
daa
jmp
mov
rcr
push
movsl
jmp
roll
iret
mov
inc
enter
cmc
dec
jmp
vpmulhw
xchg
dec
mov
notb
mov
mov
or
outsb
xor
loopne
mov
push
aas
dec
jge
rorl
adc
lods
fmuls
arpl
mov
rcr
ret
mov
mov
jo
mov
jnp
pushf
imul
ficompl
or
or
xchg
xchg
add
rol
push
std
push
ret
and
inc
ss
outsb
test
aas
adc
mov
inc
loope
ljmp
dec
bound
mov
rcrl
outsb
fidivl
push
mov
pop
mov
lret
jbe
sub
lcall
fsubrl
stc
jbe
push
fistpl
ja
in
xor
xor
imul
hlt
not
inc
jl
jle
cmp
xchg
addr16
subb
push
imul
data16
aaa
out
xchg
mov
fidivrs
mov
imul
repnz
adc
push
inc
xchg
das
dec
sub
in
in
lds
mov
xor
add
jbe
aas
andb
xchg
ret
inc
stos
fs
mov
repnz
push
subl
xor
scas
sti
rolb
push
pop
ret
xor
ret
mov
xchg
pop
inc
and
cmc
push
cli
mov
inc
push
lea
push
mov
inc
outsl
mov
test
andb
ret
outsb
imul
mulb
inc
out
aad
pop
scas
cmpsb
cmp
pop
mov
clc
mov
jl
test
jge
push
nop
stos
add
loope
mov
fidivl
add
cbtw
and
and
push
aad
and
dec
out
pop
lds
lret
jle
pop
pop
insb
std
and
pop
xchg
add
add
stos
stc
cli
lret
outsb
test
lret
ret
sahf
outsb
out
stc
adcb
cmp
sub
adcb
add
add
add
add
add
stos
add
add
sahf
add
add
jnp
push
add
and
lock
insl
inc
nop
xchg
adcl
cld
dec
lret
not
push
or
aaa
jp
pop
mov
cmp
pop
cmp
faddl
ret
pushf
push
push
lea
sti
push
pop
mov
repz
andb
popf
pop
or
cmpsl
imul
insb
movb
and
or
iret
fimull
cmp
mov
xchg
popl
imul
push
pop
or
outsl
fbstp
pop
fwait
and
jmp
jno
int
aad
pop
mov
shlb
and
lret
stos
fcomps
fimuls
ret
das
jge
jo
xlat
fwait
cmp
xor
push
cmp
push
jns
cmp
sub
aad
in
cmp
cmp
inc
or
mov
jne
fwait
xor
not
iret
pop
push
dec
push
inc
into
cmp
rcr
xchg
push
xchg
std
outsl
in
mov
mov
or
jp
in
outsb
mov
rclb
movsl
cltd
inc
enter
inc
fsub
inc
ds
inc
jnp
int3
cmpsl
stos
jmp
cmp
rorl
cmp
ljmp
shll
cli
xchg
mov
inc
cmp
inc
stos
cwtl
clc
and
sbb
sub
int
icebp
pop
push
scas
insl
pop
test
fsubrs
gs
mov
add
sub
dec
pop
cmp
cmp
fsubrl
loopne
jns
mov
jbe
ja
inc
cmp
adc
push
inc
push
jl
cwtl
lcall
xchg
cmpsb
xlat
inc
in
pushf
sbb
stos
fsubrl
jmp
test
loop
adc
inc
outsb
cmp
out
sbb
sarl
mov
rcl
mov
shll
and
or
popa
mov
mov
push
stc
inc
orl
je
inc
xor
push
sub
pmullw
shrl
lahf
push
rorl
movsl
jae
out
sti
mov
aad
aad
inc
out
dec
dec
in
sbb
xchg
lds
andb
push
fistl
or
push
sbb
dec
lcall
add
lods
jno
popf
adc
inc
push
popa
idivb
lods
or
sbb
push
add
arpl
jle
pop
inc
push
sarb
cmp
cmpsb
jecxz
pop
dec
push
jo
adc
dec
jo
mov
adc
lahf
ret
xlat
pop
sub
sub
popa
sub
fxtract
mov
jp
cmpsb
scas
dec
enter
mov
dec
loop
jge
pop
dec
movl
imul
or
clc
subb
pop
ret
cmp
dec
jns
lret
adc
dec
jl
xchg
or
and
xor
jbe
in
adc
cmp
aas
adc
js
and
mov
std
mov
cmp
clc
jge
xchg
sbb
daa
pusha
dec
movsb
adc
lods
mov
lds
pop
out
sarl
pop
push
jne
mov
not
pop
xor
cs
movsl
psubd
inc
out
sbb
shll
inc
fldl
xchg
fistpll
arpl
es
adc
hlt
in
cld
push
ds
push
mov
lret
mov
test
pop
adc
pop
and
daa
xor
cltd
call
loope
xor
sub
pop
add
mov
fcoml
jns
imul
or
das
xor
scas
insl
loop
xor
mov
hlt
sarl
push
aas
movsl
inc
push
das
mov
test
xchg
scas
dec
aad
cwtl
pop
fdivs
or
das
es
or
cmp
in
cwtl
dec
push
rcrl
xchg
lea
ret
xor
fsubrl
or
jge
mov
fwait
out
and
sub
xor
mov
hlt
stc
popf
test
rclb
xchg
ret
fmul
jb
and
cmp
jns
addl
lds
and
xchg
jae
lret
repnz
pop
test
repnz
loope
out
mov
xor
in
arpl
pop
or
xor
pop
and
sub
lahf
jb
sbb
or
test
mov
or
ds
push
pop
push
cld
testb
inc
icebp
sub
mov
sub
jo
mov
sbb
jge
fmuls
mov
loop
ret
mov
shlb
test
inc
or
out
adc
or
lcall
stc
call
test
mov
repnz
pop
xor
jg
leave
shll
xchg
pop
or
mov
xchg
and
ds
push
mov
xchg
sbbl
mov
test
adc
lret
push
or
mov
sub
mov
insl
dec
shlb
cmp
ret
out
jle
out
xor
push
pop
dec
loope
xlat
mov
cmp
cmp
test
and
test
jl
out
ss
adc
or
mov
aad
mov
ds
mov
xchg
push
jge
aaa
int3
mov
dec
mov
cli
sbb
and
pop
or
mov
test
xchg
mov
divl
jge
xor
cmp
cmp
data16
and
xor
icebp
lcall
pusha
js
cmp
pop
pop
jecxz
mov
sti
dec
jnp
ljmp
mov
arpl
pop
dec
scas
out
clc
enter
clc
loopne
or
fists
mov
push
divl
outsl
scas
orb
xchg
sbb
mov
jg
fwait
ja
inc
aas
mov
mov
cs
xor
pop
lahf
push
pop
out
les
pop
push
in
rorb
sbb
dec
lea
mov
movsl
jmp
inc
in
mov
ljmp
xchg
dec
sbb
xchg
pop
mov
mov
dec
bound
out
xchg
cmpsb
adc
hlt
jge
inc
test
sub
pop
xchg
loopne
lds
stos
add
cmc
out
mov
push
inc
lea
cmp
icebp
push
sbb
push
cltd
clc
push
fsubrp
aam
lods
inc
pop
pop
cmp
out
or
push
inc
push
mov
stos
les
mov
and
in
pop
iret
fwait
pop
mov
xorb
push
and
mov
out
cmp
xor
push
lcall
les
inc
adc
pop
roll
sbb
mov
mov
inc
mov
leave
pop
pop
inc
and
jb
push
cltd
das
in
push
cwtl
pop
pop
imulb
push
jecxz
addr16
js
call
adc
shlb
test
and
dec
xchg
into
xor
fwait
scas
insb
cmp
sbb
popl
push
into
cmp
or
call
nop
das
pop
test
inc
jmp
pop
or
push
add
push
dec
mov
lahf
sahf
xor
dec
pusha
and
jnp
leave
cmp
add
jo
adc
mov
cmp
mov
hlt
sarl
inc
inc
or
in
cmp
jbe
push
icebp
mov
sti
inc
dec
idivl
xchg
xor
add
pop
xchg
in
pop
fsubrs
mov
xchg
or
sahf
dec
jns
sarl
jo
js
leave
adc
sub
lahf
pop
add
or
and
adc
cmpb
mov
mov
inc
setae
jecxz
fistpll
orl
ljmp
inc
sub
push
lret
sbb
pop
push
cmp
sarl
out
fmuls
mov
and
add
sub
testb
aaa
repz
std
jb
data16
incb
or
shr
ss
cmp
sbb
stc
add
dec
xor
push
scas
andl
imul
sub
or
pop
mov
popf
loope
repnz
pop
movsl
sbb
jbe
mov
in
xor
adcb
lea
xor
aam
nop
adc
movsl
push
pop
outsb
xchg
mov
in
fistpl
mov
mov
jl
push
lods
in
repnz
and
call
aaa
inc
fistl
addr16
cli
out
jmp
xor
ret
pop
xchg
sub
insl
into
sbb
adc
and
xor
outsb
loop
negb
push
cld
insl
loopne
sub
loop
mov
push
sbb
arpl
mov
inc
fwait
jnp
addr16
xchg
imul
sub
mov
add
sub
xor
sysenter
xor
fs
scas
into
lret
ret
loop
std
int3
sub
mov
int3
aam
jnp
cmc
and
dec
dec
push
icebp
push
sti
jmp
std
cmp
imul
push
call
pop
add
sub
lods
cmp
sbb
ret
mov
cltd
mov
setne
imul
sub
imull
cld
cltd
mov
xchg
mov
test
mov
xsha1
cmpsb
sub
popf
jo
pop
adc
mov
inc
incb
pop
cmp
inc
std
inc
xchg
mov
mov
mov
clc
pusha
pop
fisubrs
lret
mov
insb
jmp
push
loop
pop
mov
lret
mov
int3
hlt
sub
loopne
dec
mov
jp
adc
add
jne
cmp
icebp
xchg
in
sub
fnsave
push
xor
jp
jl
negl
arpl
aas
mov
add
pop
ret
adc
xor
shl
push
cmp
add
test
pop
add
jns
jle
add
cld
jl
adc
mov
inc
push
or
mov
icebp
stc
ss
loop
in
jae
push
fwait
mov
std
inc
enter
stos
lock
sbb
lahf
inc
cmpsl
mov
cmp
jo
outsl
cmp
xchg
icebp
push
xchg
sti
outsl
adc
cmp
mov
cmpsb
movsb
out
xchg
insl
jmp
adc
sbbl
and
imul
mov
dec
and
push
jl
cwtl
mov
jbe
xlat
pop
dec
xchg
jb
or
sub
cmp
mov
or
pop
or
das
push
xchg
int3
addl
jae
sbb
test
xchg
and
fistpll
jle
lds
mov
xor
push
gs
and
pop
sub
xchg
xchg
in
xchg
lret
jae
sub
fs
in
flds
fidivrs
outsl
popa
popa
and
loop
dec
mov
push
push
sub
mov
mov
mov
jl
add
inc
jno
xor
fists
sti
mov
mov
popf
call
loope
xchg
das
jmp
xor
shrb
or
int
icebp
xor
test
xchg
jg
aam
dec
add
hlt
out
mov
leave
fsubl
outsw
push
test
lahf
cmp
and
int
cwtl
adc
add
xor
leave
addr16
dec
divb
std
inc
jno
push
movsb
fs
pop
leave
rolb
cmpsb
scas
bound
fs
out
inc
dec
xor
lods
fwait
mov
push
stos
pop
mov
add
xchg
jb
aaa
sub
imull
mov
mov
add
or
sbb
in
out
mov
mov
std
xchg
movsl
adc
mov
ret
fucomp
mov
sbb
iret
or
sbb
and
inc
sub
add
xchg
inc
pop
lret
adc
jns
es
xchg
sub
fadds
scas
lret
sbb
add
fiadds
les
pop
test
sub
loop
aas
cli
ss
adc
int
xchg
jmp
mov
das
sub
cmpsl
adc
out
push
sub
cli
adcb
scas
ja
imul
mov
fmuls
movsb
add
jne
push
test
sub
and
or
mov
sub
test
xor
stos
addb
mov
imul
pop
into
mov
xchg
jbe
cmp
cwtl
ret
das
and
add
int3
push
popf
test
cmp
rol
rorb
fmull
jne
sahf
cmp
push
mov
mov
dec
in
fadds
mov
inc
mov
popf
fdivrs
xlat
gs
cmc
insb
movsb
test
mov
xchg
enter
sub
lret
sbb
sbb
jae
adc
mov
mov
in
add
pusha
xchg
xchg
xchg
std
and
int3
xchg
in
xchg
scas
shlb
movsb
pop
clc
es
ja
add
mov
mov
cmpb
sahf
mov
lods
xchg
leave
push
cmp
xchg
xchg
cltd
xchg
out
mov
scas
arpl
lods
aam
add
imul
inc
push
mov
dec
lds
or
mov
push
imul
in
dec
movsl
ret
xrelease
test
push
pop
push
pop
dec
fdiv
xlat
mov
cmp
lret
stc
repnz
cli
nop
clc
arpl
sub
jmp
adc
outsl
pushf
xchg
mov
inc
push
xor
sbb
xor
or
shlb
andl
stos
adc
inc
sbb
sbb
les
sub
push
adc
ss
filds
dec
popf
imul
imul
subb
xchg
xchg
mov
push
aaa
jb
ret
sbb
jne
lgs
mov
xchg
and
dec
dec
loop
loopne
sub
testl
xor
aad
enter
pop
pop
jbe
pusha
jae
or
dec
mov
jno
inc
call
jle
int3
arpl
mov
sub
cmpsl
adc
mov
sbbb
ja
mov
sti
popa
je
aam
fwait
ret
call
imul
ljmp
outsb
xor
mov
xor
addl
fsubrl
enter
sbbl
pop
test
sub
pop
bound
pop
rcrb
xchg
pushf
mov
addb
or
dec
adc
je
jnp
jle
add
test
mov
insb
and
and
jmp
push
roll
fld
cltd
or
lret
push
pop
in
jp
jg
outsb
icebp
cmp
mov
sbb
jge
cmpsl
fistpll
pushf
sub
dec
cli
rclb
dec
add
int
jae
repz
sub
mull
push
xor
add
add
cmp
add
add
add
add
add
and
xor
arpl
push
push
dec
push
jne
xor
jns
xor
and
and
add
add
pusha
dec
add
add
data16
add
add
add
add
add
add
add
pop
add
add
pop
add
cmp
add
add
cmpb
add
pop
add
adc
add
add
add
add
ja
jp
cmp
cs
add
dec
dec
push
inc
push
dec
dec
dec
pop
dec
imul
imul
pop
inc
inc
inc
inc
pop
add
jbe
outsb
insb
jne
dec
pop
inc
jbe
arpl
pop
inc
dec
inc
inc
pop
add
gs
pop
push
inc
dec
pop
imul
jo
jo
push
inc
inc
pop
inc
pop
inc
push
inc
dec
inc
pop
add
cmp
outsl
and
fs
inc
jo
xor
xor
aaa
pop
xor
insb
imul
and
xor
inc
jbe
jb
push
inc
xor
dec
and
ss
push
aaa
aaa
push
add
js
aaa
xor
dec
push
inc
imul
cmp
dec
ja
gs
push
inc
xor
aaa
gs
insl
dec
and
and
dec
jae
dec
xor
dec
push
bound
and
add
jb
dec
pop
add
inc
dec
pop
jo
add
cmp
fs
jns
addr16
and
mov
pop
add
and
add
adc
add
and
add
pop
add
add
fsubl
pop
add
pop
add
add
or
pop
add
pop
add
and
add
add
sub
pop
add
and
add
add
xor
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
and
add
and
add
add
add
and
add
and
add
pop
add
and
add
and
add
pop
add
add
add
pop
add
and
add
and
add
and
add
and
add
and
add
and
add
pop
add
and
add
add
add
pop
add
add
add
add
pop
add
and
add
add
add
and
add
add
add
add
je
gs
je
je
add
je
outsl
jns
jne
jae
jb
out
inc
jb
insl
gs
arpl
add
jo
imul
gs
js
add
jge
dec
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
add
popa
jb
gs
inc
add
outsl
jo
dec
insl
popa
add
gs
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
add
outsb
fs
imul
inc
add
imul
xor
cs
insb
add
jle
inc
gs
gs
inc
push
je
outsb
outsw
add
roll
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
add
fs
popa
je
add
inc
gs
outsb
inc
outsl
js
mov
inc
jb
popa
je
push
outsl
insb
imul
add
je
inc
imul
bound
imul
dec
xor
cs
insb
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
gs
outsb
push
gs
js
gs
imul
gs
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
inc
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
jae
lds
insb
jae
jb
insl
jo
push
add
imul
jb
je
arpl
push
arpl
outsb
add
add
je
imul
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
jb
popa
je
add
xor
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
pop
add
je
dec
popa
imul
gs
jns
add
push
jo
inc
add
dec
push
inc
push
dec
cs
insb
add
add
je
popa
jbe
inc
imul
add
push
add
imul
js
add
inc
gs
imul
push
add
insl
fs
xor
cs
insb
add
adc
imul
add
gs
add
fs
insb
cs
insb
add
add
add
add
add
add
and
add
inc
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
addb
add
js
add
add
add
add
add
add
add
jl
add
nop
add
cmpb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
xor
add
pop
add
cld
cmp
add
or
add
inc
pop
add
add
and
incb
add
add
add
add
add
add
add
add
add
add
add
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
sub
add
sbb
add
cmp
add
add
sbb
add
add
xor
add
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
jo
push
inc
dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
std
mov
push
inc
inc
dec
incb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
fidivl
mov
ficoml
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
add
add
faddl
add
lods
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
pop
cmp
cmp
cmp
cmp
pop
cmp
cmp
jbe
mov
mov
xchg
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
fwait
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
stos
cmp
sarl
fnstcw
loopne
sub
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
xchg
cmp
movsb
cmp
sarb
adc
cmp
dec
ds
ds
bound
jb
fwait
mov
loop,pt
push
aas
cwtl
aas
mov
lret
aas
add
add
add
add
add
xor
xor
xor
jg
xorl
xor
xor
xor
xor
pop
xor
xor
test
mov
cltd
xor
xor
xor
xor
xor
xor
xor
popa
xor
test
mov
nop
xor
xor
xor
xor
xor
xor
je
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushf
xor
adc
xorl
xchg
ss
or
adc
sbb
pop
aaa
sub
push
aaa
pop
aaa
data16
ja
jnp
xorl
aaa
xchg
aaa
lcall
aaa
int3
aaa
shll
push
cmp
cmp
inc
cmp
pop
cmp
jo
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
daa
cmp
cmp
cmp
dec
cmp
push
cmp
jae
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jo
je
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
pop
cmp
cmp
jo
mov
xchg
cmp
scas
cmp
lds
add
or
cs
inc
ds
ds
cmpb
les
leave
ds
or
aas
and
aas
cmp
pop
aas
imul
aas
ja
test
sahf
aas
test
mov
mov
aas
loopne
out
jmp
icebp
aas
add
add
add
add
add
daa
xor
pop
xor
xor
xor
xor
xor
xor
sub
xor
jno
jp
xorb
xor
xor
xor
aaa
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
js
jge
mov
out
add
pop
arpl
mov
mov
xchg
ss
movsl
ss
outsb
aaa
je
aam
fidivl
jmp
aaa
divl
std
aaa
add
xor
imul
xchg
nop
cmp
cmp
fnstsw
jecxz
call
cmp
cmp
cmp
cmp
cmp
push
cmp
mov
cmp
cmp
cmp
dec
cmp
jo
jbe
mov
mov
cmp
fidivrl
call
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xor
scas
ds
ds
aas
and
sub
cs
cmp
aas
js
xchg
lea
xchg
aas
mov
add
pusha
add
in
add
add
xor
xor
push
xor
xor
xor
adc
push
xor
adc
adc
arpl
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
into
xor
add
add
or
push
xor
repnz
push
aaa
sbb
aaa
dec
aaa
push
aaa
icebp
aaa
add
sub
cmp
cmp
pusha
cmp
je
jp
xchg
lahf
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
sub
pop
cmp
jne
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
jo
add
add
xor
inc
xor
xor
xor
xor
je
xorb
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
aam
fdivs
fdivl
loopne
in
hlt
xor
xor
xor
xor
xor
add
add
mov
add
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
cmp
outsb
cmp
jbe
jp
jle
cmpb
cmp
cmp
cmp
cmp
adc
add
add
cmp
inc
.byte
