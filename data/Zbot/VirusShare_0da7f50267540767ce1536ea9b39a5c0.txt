push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
pop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
stos
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
neg
addl
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
jmp
ret
mov
sub
sub
mov
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
jg
mov
jle
mov
popf
dec
call
add
jne
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
incb
clc
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
and
add
and
add
and
add
add
aam
add
pop
and
add
and
add
add
add
and
add
add
adc
add
fsubs
add
dec
and
add
and
add
add
and
add
and
add
and
add
add
add
and
add
add
push
and
add
and
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
pop
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
and
add
and
add
and
add
add
aam
add
pop
and
add
and
add
add
add
and
add
add
adc
add
fsubs
add
dec
and
add
and
add
add
and
add
and
add
and
add
add
add
and
add
add
push
and
add
and
add
add
add
add
je
imul
bound
gs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
add
je
jb
jbe
je
push
jb
imul
push
add
add
popa
jo
jb
add
enter
jae
gs
popa
insb
jne
add
popa
je
inc
jbe
outsb
je
add
repnz
imul
jb
je
arpl
add
aad
inc
gs
gs
inc
imul
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
jbe
push
jns
gs
add
add
imul
outsb
je
outsl
insb
add
add
popa
jo
gs
jb
jns
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
gs
insl
gs
push
add
dec
add
je
jb
arpl
jae
gs
jo
add
fs
imul
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
gs
je
imul
inc
add
jle
dec
jo
outsb
dec
jne
gs
add
dec
add
insb
outsb
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xor
jae
push
push
popa
je
add
add
ja
push
popa
arpl
jb
jne
add
push
imul
gs
add
addb
jae
push
arpl
add
jae
push
push
popa
je
add
aaa
add
ja
push
fs
inc
gs
push
outsl
insb
outsl
jb
xchg
dec
jo
outsb
push
push
popa
je
add
inc
gs
push
jns
push
imul
gs
push
gs
inc
js
outsb
je
add
inc
gs
imul
gs
add
jl
inc
gs
push
gs
dec
gs
imul
gs
push
outsl
outsl
insb
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
arpl
push
dec
inc
insb
insb
outsl
arpl
jbe
add
push
jb
arpl
push
dec
inc
imul
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
outsb
outsb
arpl
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
insl
je
dec
inc
inc
inc
push
push
inc
inc
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
lcall
jg
add
jnp
stos
lods
stos
add
test
mov
mov
mov
lret
lret
int
rcl
in
rcl
shl
iret
ror
hlt
int3
int3
into
hlt
enter
leave
leave
out
vshufpd
mov
mov
lods
lods
lods
lea
fwait
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
rcl
sar
fcom
std
xlat
fdivr
fcom
aam
rcl
iret
dec
int
aam
aam
iret
iret
iret
inc
ret
std
mov
mov
scas
iret
movsl
movsb
movsl
xchg
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
scas
scas
sbb
mov
jnp
mov
sar
vpaddd
lret
lret
rcl
aad
xlat
call
xlat
xlat
call
aam
dec
int
dec
into
int3
call
dec
int3
int3
inc
rol
mov
mov
scas
std
test
cmpsl
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
dec
add
push
add
push
or
inc
or
sbb
push
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
int3
int3
call
rcl
fcom
fcom
xlat
call
aam
dec
int3
int3
dec
leave
lret
into
int3
inc
mov
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
fs
sbb
push
sub
ss
cmp
and
adc
push
pop
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
enter
ror
call
aam
call
call
ror
inc
enter
inc
mov
mov
ljmp
movsb
mov
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jle
jg
jg
jo
jno
bound
mov
cmp
inc
inc
mov
jo
outsl
nop
popa
popa
arpl
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
lret
leave
leave
inc
ret
ret
mov
mov
lods
scas
scas
jmp
fwait
cltd
call
xchg
xchg
xchg
xchg
cwtl
fwait
fwait
lcall
cmp
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsb
add
pop
or
pusha
xchg
lea
incb
jl
idivb
jmp
outsb
jo
push
data16
ret
jle
jns
jns
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
xchg
incl
addl
xchg
xchg
sahf
sahf
lahf
sti
mov
xchg
xchg
mov
jns
jp
cs
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
mov
std
xchg
jle
jb
jno
je
jae
jle
jge
test
xchg
addr16
cmp
ss
es
jg
jg
lcall
shrb
lods
stos
sti
lods
lods
lods
stos
lods
stos
test
test
std
fwait
lcall
mov
jge
js
js
jnp
jnp
xchg
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
mov
mov
push
or
xor
inc
dec
insl
insb
insb
jl
xchg
leave
fwait
cltd
fistps
cltd
cltd
stc
nop
std
mov
mov
mov
mov
mov
lcall
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jl
lods
cmpsl
stos
add
pop
adc
test
call
cltd
xchg
cltd
incl
xchg
decb
xchg
xchg
sahf
sahf
sahf
std
mov
mov
xchg
in
in
test
jne
cmovp
or
sub
push
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
std
lea
nop
call
lahf
sahf
jmp
cmpsl
lods
pushl
cmpsl
scas
mov
xchg
test
std
ret
xchg
scas
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
sahf
cwtl
lcall
mov
call
nop
nop
xchg
xchg
xchg
pushf
popf
sahf
movsl
movsb
mov
mov
cwtl
xchg
fstpt
jp
push
push
push
outsl
dec
dec
dec
pop
popa
popa
jne
je
mov
jg
test
mov
xchg
xchg
in
xchg
xchg
testl
lea
jmp
lahf
pushl
insb
xchg
mov
dec
xchg
mov
sub
mov
movsl
mov
mov
mov
lods
lods
lods
mov
mov
add
shll
adc
mov
ljmp
pushf
decl
nop
call
xchg
xchg
call
cwtl
fwait
lcall
mov
movsl
movsb
std
mov
cwtl
fwait
out
nop
xchg
nop
xchg
xchg
les
xchg
lcall
xchg
cmc
mov
nop
cld
xchg
adcb
lcall
jmp
inc
jl
mov
jns
mov
je
mov
outsl
ljmp
adc
stos
or
or
mov
jge
mov
mov
stos
pushf
movsb
movsb
mov
add
pop
pop
adc
mov
lcall
nop
xchg
call
lcall
lahf
lahf
lahf
lcall
cltd
call
xchg
xchg
xchg
cwtl
xchg
call
cwtl
lcall
lcall
pushf
mov
xchg
push
xchg
pop
jge
xchg
dec
jns
fwait
cmp
insb
pushf
pop
addr16
sahf
pop
arpl
mov
adc
stos
adc
lods
adc
lods
adc
lods
adc
mov
imul
adc
pushl
ds
lcall
lods
lods
lods
scas
movsl
movsb
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
popf
lcall
movsl
movsl
jmp
mov
cwtl
decl
mov
mov
mov
xchg
js
lcall
xchg
dec
jp
xchg
jo,pt
nop
sub
popa
decl
or
pop
call
add
sahf
pop
pop
jmp
sbb
mov
outsl
pushl
sbb
je
mov
and
rcrb
inc
inc
test
ret
xchg
scas
mov
scas
scas
mov
sahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
shll
lcall
movsl
movsb
jmp
cmpsl
cmpsb
ljmp
test
lcall
jg
decl
jo
mov
push
mov
arpl
mov
popa
decl
or
incl
add
xchg
push
decl
add
xchg
add
lcall
ljmp
and
mov
ja
mov
sub
shrl
inc
sub
inc
sub
xor
xor
dec
mov
cld
mov
mov
movsb
movsl
movsl
dec
mov
movsb
movsl
add
push
push
adc
test
ljmp
popf
jmp
test
lods
ljmp
mov
ljmp
mov
mov
mov
incl
or
xchg
push
incl
add
addl
incl
add
mov
push
decl
add
fwait
add
sahf
add
mov
adc
mov
aaa
cmp
cmp
dec
cmp
call
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
movsb
test
mov
mov
sahf
fwait
sahf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
test
push
incl
add
mov
push
call
add
popf
add
add
cmpsl
add
lods
add
mov
jb
les
test
leave
inc
dec
inc
call
inc
mov
roll
call
dec
xchg
fmuls
fisttpl
fisttpl
fsts
call
xchg
mov
mov
movsb
movsl
movsb
arpl
mov
add
add
add
cltd
xchg
cwtl
add
dec
adc
jp
movsb
lahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
call
push
pop
decl
or
add
xchg
add
xchg
add
popf
add
mov
add
stos
add
mov
fs
and
dec
dec
mov
aad
cltd
fcoms
ficoml
fstpl
jmp
pop
popf
ficomps
jmp
pop
mov
jmp
pop
lahf
fadds
mov
mov
cmpsl
cmpsb
test
lahf
sahf
sahf
or
xchg
xchg
xchg
add
inc
adc
jns
lahf
lcall
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
xchg
pop
call
and
xchg
pop
call
or
popl
push
call
pop
jmp
add
lods
add
mov
gs
mov
xor
call
pop
fwait
fstps
fisubs
fbld
in
cmpsb
jmp
fs
call
push
test
fildl
mov
cmpsb
test
lahf
mov
lahf
add
inc
inc
adc
jp
xchg
lcall
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
call
push
call
add
fwait
add
mov
add
lods
add
mov
pushl
movd
roll
fsubrl
jmp
outsl
lods
jmp
outsl
lods
call
je
jmp
mov
in
je
out
jne
out
je
out
jae
jmp
xchg
mov
cmpsb
test
lahf
sahf
lahf
pop
sahf
sahf
lahf
add
jge
cmp
aas
adc
outsb
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
outsl
lcall
aaa
je
lahf
xor
cltd
push
call
call
add
mov
add
mov
popa
pushl
add
enter
fistl
jmp
jbe
ljmp
in
jg
out
cmpl
push
test
push
cmpb
aam
inc
mov
test
daa
sahf
lahf
lahf
add
add
add
add
aaa
cmp
pop
pusha
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
ret
inc
ret
mov
mov
sahf
insb
mov
cltd
cmp
mov
inc
jge
mov
sbb
xchg
add
popf
add
add
stos
add
scas
add
mov
gs
mov
add
call
daa
cmp
jmp
mov
push
mov
push
pop
push
pop
push
nop
push
xchg
stc
xchg
clc
pop
out
mov
inc
clc
stos
stos
test
xor
pushf
pushf
add
add
add
inc
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
mov
jge
lcall
dec
cmp
dec
test
movsb
xor
lcall
add
mov
add
stos
add
mov
arpl
mov
add
leave
add
call
xor
call
xchg
push
fwait
enter
push
fwait
push
lcall
negl
cld
sahf
int
sti
cwtl
lret
push
xchg
ret
fidivrs
enter
mov
lahf
lahf
sahf
aas
popl
fwait
lcall
xor
add
cmp
outsb
dec
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
sar
inc
mov
mov
ljmp
xchg
movsb
sub
cltd
pop
pop
lcall
pop
ljmp
popa
mov
add
movl
jbe
fiadds
out
lea
push
movsl
int3
push
movsb
into
push
cmpsb
into
sti
test
sar
cld
test
iret
test
iret
push
lahf
jmp
mov
int
mov
mov
mov
xchg
xchg
add
lcall
xor
add
sub
or
inc
bound
pop
xlat
jne
jo
mov
mov
ret
mov
ret
ret
ret
inc
leave
inc
rol
mov
cmpsb
jmp
mov
scas
dec
test
mov
add
jmp
add
mov
mov
add
int3
add
add
ficoms
out
pop
cmpsl
push
popf
leave
cli
lods
sar
cli
scas
aad
cld
mov
cld
mov
std
mov
mov
std
mov
std
mov
mov
mov
push
movsl
jmp
mov
dec
enter
mov
fisubl
xchg
xchg
or
add
add
xor
sbb
outsb
outsl
outsb
mov
vpsubusb
xlat
xlat
jmp
xlat
fdiv
rcl
sar
lret
dec
leave
lret
dec
leave
leave
dec
lret
lret
enter
scas
jmp
push
mov
stos
cmp
lcall
add
lods
add
mov
mov
add
iret
add
add
filds
jae
jmp
jb
cli
lods
aad
mov
fcos
cld
mov
mov
xlat
cld
mov
fcos
inc
mov
int3
jmp
mov
call
leave
into
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
or
enter
in
pop
out
out
in
in
jecxz
jecxz
fsubp
fucom
fcmovu
fcomi
xlat
cli
aad
fdivr
into
rcl
mov
imul
jmp
add
mov
arpl
mov
add
leave
add
add
fldl
jne
in
jbe
out
das
xchg
clc
mov
cli
mov
std
ret
loopne
inc
loop
std
inc
dec
fdivrp
dec
fdivrp
dec
loopne
dec
fdivrp
dec
cli
mov
leave
fmul
into
mov
mov
xchg
adc
add
add
incl
std
incl
incb
repz
or
out
in
pop
in
in
in
sub
out
in
dec
call
call
call
aad
fcmovnu
jmp
mov
xchg
cmpsl
cmp
movsl
adc
pop
ljmp
add
mov
add
int
insl
fadds
jb
loopne
js
jmp
inc
popf
cli
mov
jecxz
dec
in
std
int3
in
dec
jecxz
dec
loop
std
int3
loop
std
int
shl
dec
jecxz
call
in
std
shl
cli
in
mov
xlat
inc
out
cmpsb
cmpsl
cmpsl
mov
cwtl
xchg
add
add
add
std
incl
incl
idiv
testl
repnz
out
repnz
pop
in
repnz
cmp
out
in
pop
loopne
loop
mov
xchg
sti
mov
pop
pop
jmp
add
mov
inc
add
enter
roll
jb
fiaddl
jne
in
jns
jmp
jle
cmc
pop
test
sti
mov
cld
shl
cld
shl
call
jmp
std
shl
call
out
call
fldl2t
std
dec
loopne
bnd
jmp
rcr
dec
lret
test
xchg
xchg
and
xchg
xchg
add
cld
add
cld
stc
add
sti
clc
add
div
or
aam
mov
je
negb
add
add
scas
add
mov
add
lret
call
add
fldl
jbe
call
sbb
sti
ret
fdivrp
std
fsubr
std
fldpi
fucomi
fucomi
fsubr
fucomp
fsubrp
fucomip
jmp
in
shl
push
ret
call
rcl
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsb
outsl
outsl
add
add
add
loopne
add
leave
lds
lods
jge
repnz
and
lahf
add
test
pop
pushl
add
ret
add
into
add
aad
jae
loopne
jne
jmp
sub
std
shl
fsubrp
std
fucomi
fldl2t
std
fucompp
xlat
out
in
shl
cli
shl
sti
shl
push
int
clc
int
push
ret
aad
out
mov
jmp
rcr
call
xlat
xlat
sti
mov
mov
lcall
add
add
add
fcom
add
enter
mov
sahf
jmp
sub
mov
add
mov
mov
add
rolb
jo
add
add
ljmp
sti
xchg
sti
enter
int3
loope
sti
clc
mov
aam
repnz
into
push
mov
int3
call
mov
sar
call
shl
jmp
in
mov
mov
xchg
add
add
add
int
add
rol
mov
cmpsb
loopne
xor
jmp
add
mov
addr16
mov
add
int3
push
jb
rorl
ficoml
js
loopne
cmp
call
scas
int3
ljmp
std
loopne
ret
cld
loopne
ret
cli
fstpt
enter
lret
int
fmul
into
rcl
shl
xlat
fcmovb
out
loop
in
out
test
out
out
popf
jmp
leave
lret
push
lods
stos
lods
adc
cmpsl
test
add
ret
ret
ret
mov
stos
aam
dec
cmp
sbb
cmpsl
push
insb
scas
and
jns
mov
inc
xchg
ret
push
mov
lret
test
mov
out
mov
mov
enter
int
ror
lret
mov
into
shlb
rcl
jg
jb
fnstsw
gs
jecxz
out
jmp
xor
div
cmc
and
repnz
fstp
or
mov
int
mov
add
mov
rol
mov
scas
mov
stos
xchg
lock
sbbb
xchg
cmpsl
sarb
stos
mov
ret
mov
cmpsl
mov
enter
int
ror
iret
addr16
rclb
rcl
dec
aam
aad
aam
aam
aad
xlat
daa
fistpl
fcmovnu
ficoms
fsubp
jecxz
fucomip
jecxz
out
jmp
jmp
out
add
sti
testb
std
std
add
incl
incl
mov
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
ret
ret
mov
daa
lret
ror
and
aad
sbb
rcll
rcl
rorb
rcr
push
rcr
fadds
fstp
add
loopne
add
in
add
in
jmp
lret
xlat
aam
incb
mov
mov
add
rol
vmovaps
mov
mov
push
ret
or
enter
leave
add
int3
lret
rolb
rcl
aad
aam
aam
aad
aam
aam
add
fchs
add
aam
add
loop
add
fucom
add
out
add
icebp
repnz
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
lds
mov
mov
mov
test
test
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
iret
into
jmp
aam
cmc
rcl
sar
ror
into
cli
lret
lret
lret
stc
lret
hlt
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
cmpb
inc
inc
aas
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
into
iret
sar
xlat
xlat
xlat
call
aad
call
ror
dec
iret
int
lret
lret
mov
mov
cld
lods
stos
stos
icebp
xchg
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
jae
jae
fs
inc
dec
inc
cmp
sub
sub
ss
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
int3
lret
rcl
call
rcl
dec
lret
vshufpd
rol
mov
mov
test
sahf
lahf
xchg
xchg
cwtl
jmp
jo
xchg
pop
pop
pop
dec
add
add
add
add
add
add
cmpb
jp
jl
test
jnp
push
imul
push
push
stos
push
outsb
outsb
push
pop
pop
cmp
aaa
cmp
jo
outsl
adc
mov
fstpt
mov
ret
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
cltd
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
cltd
cltd
add
pushf
xchg
cwtl
fcoml
addb
jl
jl
jp
jns
jns
jp
jns
jnp
jae
je
push
push
push
cmp
aaa
pushf
pushf
popf
mov
lods
lods
repz
lods
lods
sti
scas
lods
lods
std
cmpsl
cmpsl
test
popf
pushf
popf
call
test
call
mov
lods
jmp
scas
lods
leave
movsb
cmpsb
movsb
cltd
jb
jae
adc
adc
add
add
add
add
insl
outsl
outsb
pop
xchg
mov
mov
xchg
std
mov
xchg
lock
nop
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsl
jo
mov
lcall
std
lea
mov
xchg
xchg
xchg
lcall
movsl
test
std
mov
scas
mov
mov
mov
movsl
movsb
movsl
pop
addl
add
pop
pusha
popa
or
lods
mov
movsl
lahf
movsl
decl
mov
lcall
lahf
sahf
sti
lahf
mov
cwtl
call
push
push
push
jo
pop
push
outsl
imul
jg
subb
mov
std
xchg
xchg
ljmp
jle
pushl
pop
mov
jl
mov
scas
stos
insl
stos
stos
stos
or
add
add
add
add
popa
or
mov
in
mov
nop
call
xchg
lcall
lcall
pushf
sahf
pushf
cli
xchg
xchg
cltd
jmp
xchg
mov
xchg
orl
cld
xchg
pop
jle
pushf
dec
jp
movsl
inc
jns
scas
ss
mov
jae
scas
sbb
imul
sbb
mov
mov
scas
scas
jle
movsl
movsb
push
pusha
popa
popa
or
mov
in
movsl
cmpsl
lcall
popf
lahf
jmp
mov
xchg
decl
addb
xchg
jb
cld
xchg
pusha
test
xchg
dec
jns
nop
cmp
xchg
sub
xchg
sbb
cwtl
adc
mov
adc
insb
pushl
sbb
mov
and
pop
nop
mov
scas
lods
xchg
sahf
lahf
sahf
adc
add
add
popa
pop
pop
or
mov
test
mov
cmpsl
ljmp
test
cltd
decl
push
mov
decl
adc
or
mov
push
call
add
popf
add
cmpsb
or
jae
mov
jge,pn
ret
jg,pn
xor
leave
xor
xchg
inc
test
scas
movsb
test
add
add
add
add
pusha
or
cmpsb
test
jmp
scas
scas
pushl
mov
jmp
aas
jb
mov
pop
decl
or
add
decl
add
xchg
add
sahf
add
cmpsb
add
mov
insl
inc
aaa
cmp
inc
mov
rolb
roll
xlat
inc
xchg
fimull
call
bound
stc
mov
mov
mov
incl
add
add
pusha
pop
pop
or
mov
ljmp
mov
pushl
mov
ljmp
push
jge
nop
push
popa
call
pop
pop
decl
push
call
add
cmpsl
add
scas
add
and
iret
dec
nop
fstps
fcompl
fistps
jmp
pop
mov
fildll
dec
cmpsl
mov
ret
movsl
xor
addl
dec
dec
dec
pop
jle
jl
popf
xchg
cwtl
jecxz
mov
mov
mov
mov
mov
mov
mov
lahf
gs
xchg
sub
lcall
and
xchg
push
pop
call
add
add
scas
add
mov
imul
fisubl
jmp
insl
test
in
stos
call
jo
in
jae
jmp
jp
call
test
std
mov
cmpsl
cmpsl
inc
cmpb
add
add
dec
dec
dec
pop
outsb
outsb
imul
xchg
cltd
lcall
mov
mov
mov
jmp
cmp
mov
sub
cwtl
or
fwait
add
mov
add
mov
gs
or
call
inc
xchg
jmp
js
jmp
mov
push
xchg
push
xchg
fisubrl
mov
push
lcall
add
sub
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
ret
mov
xchg
test
sub
lcall
ljmp
add
mov
adc
jmp
pop
mov
push
xchg
push
cltd
xchg
enter
lret
pushf
lret
cwtl
jmp
lods
inc
mov
stos
popa
lahf
mov
add
xor
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
pushl
pop
mov
lods
dec
cmp
and
sahf
add
popa
pushl
add
lret
fldenv
cmp
jp
push
mov
sar
stc
test
cld
stos
iret
sti
stos
sar
stos
sar
cli
test
jmp
mov
inc
rol
stos
stos
stos
jne
sahf
pushf
or
add
add
push
push
dec
aaa
je
jae
stos
stos
test
out
int
cmc
leave
int3
lret
sti
enter
mov
mov
bound
jmp
add
mov
arpl
roll
dec
add
flds
jbe
ljmp
cld
mov
std
mov
fcos
std
mov
mov
sar
jmp
leave
dec
ret
mov
lods
mov
add
add
add
add
or
aam
dec
loope
loopne
loopne
fstp
ffree
fcmovnu
fcmovnu
aad
fsubr
mov
addr16
test
or
scas
add
mov
add
aad
jb
loop
jp
repnz
mov
cld
inc
loop
std
enter
leave
loopne
dec
fdivrp
dec
std
out
mov
lret
mov
xchg
pushf
sahf
pushf
sbb
add
add
incl
std
std
add
jmp
or
out
in
sbb
in
in
xor
loopne
loop
lds
mov
mov
add
mov
fs
add
int
insl
fldl
je
ljmp
sti
ret
fdivrp
cld
iret
out
shl
call
in
std
shl
std
aad
fsubr
shl
push
fdivr
fcmovne
sar
mov
mov
and
add
add
std
std
add
incl
std
cld
std
pop
aam
push
mov
pop
xchg
lahf
or
pop
pushl
add
rolb
jo
loopne
jbe
out
pop
mov
cli
mov
std
shl
std
fsubr
fsub
std
xlat
call
xlat
call
push
xlat
jmp
rcl
sti
mov
popf
lahf
das
add
add
int3
int
or
bound
lods
add
mov
add
add
loop
jns
out
das
xchg
push
lcall
cli
leave
fdivrp
test
xlat
icebp
ret
aad
out
ret
sar
out
vpsubw
aad
in
aam
jecxz
fucomp
mov
test
add
add
add
aad
push
mov
je
or
insb
inc
sbb
int
jl
xlat
sub
sti
fists
clc
in
mov
out
loop
leave
jmp
fdivrl
lret
leave
ffreep
sarl
in
fcompl
out
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsl
les
push
xchg
mov
fidivrl
andb
int3
lahf
mov
sarl
enter
lret
insl
aad
into
pop
rcl
rorl
cmp
fsubp
das
in
fisubs
loop
lock
jmp
or
incb
std
add
mov
scas
mov
scas
mov
push
mov
mov
shrl
leave
and
rcl
pop
rol
adc
rcl
or
loope
or
int
add
std
incb
std
incl
cltd
fwait
lcall
mov
rol
or
int
add
std
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
fwait
add
ret
mov
leave
mov
rol
mov
scas
mov
insb
stos
lods
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
std
rcl
sar
into
int
std
stc
mov
mov
test
jle
gs
pop
pop
add
add
add
add
add
add
add
add
jno
jae
data16
inc
inc
das
das
sub
inc
and
add
add
mov
mov
cmpl
dec
int3
into
call
aad
dec
into
int
enter
mov
lods
lods
jmp
mov
push
add
add
add
add
je
jne
xchg
aad
outsb
jo
bound
mov
data16
outsb
outsl
insl
jb
bound
pusha
pusha
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
xchg
cltd
lds
jb
es
daa
das
add
add
add
add
je
je
fwait
xchg
pushf
mov
test
xchg
xchg
or
addb
dec
dec
inc
mov
fwait
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
movsb
test
cld
mov
mov
xchg
xchg
xchg
cld
sahf
sahf
sahf
cmc
lcall
mov
push
push
imul
jle
mov
xchg
notl
mov
mov
cltd
mov
jno
mov
mov
stos
lods
lods
push
lods
stos
stos
add
add
add
cmpsl
mov
mov
lods
cld
xchg
xchg
xchg
call
cltd
lcall
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
nop
fs
push
jnp
pushf
inc
jne
movsl
cmp
scas
sub
jno
mov
insl
pushl
pushf
lods
lock
mov
imul
int
add
add
xchg
pop
lods
cmpsb
stos
test
sahf
popf
lahf
jmp
mov
xchg
decl
push
jbe
xchg
inc
jb
lea
push
mov
popa
call
or
or
scas
sbb
jae
mov
sub
lds
test
mov
scas
mov
test
add
add
je
mov
movsb
cmpsl
cld
test
cmpsb
ljmp
mov
lcall
sub
mov
pop
incl
add
decl
pop
jmp
adc
shlb
dec
inc
mov
aam
call
push
xchg
dec
cltd
mov
mov
mov
movsl
movsb
movsl
push
add
add
push
xchg
xchg
test
lahf
movsl
cld
lods
scas
scas
pushl
mov
ljmp
aaa
jo
xchg
sbb
pusha
decl
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
pop
movsb
jmp
movsl
call
lcall
test
cmpsl
pop
add
add
arpl
adc
pushf
lcall
mov
mov
scas
lcall
xor
lcall
lcall
add
mov
addr16
xor
jmp
outsl
lods
jmp
js
in
jnp
out
jl
push
jge
fistpl
mov
and
add
add
adc
push
cmp
mov
mov
ret
mov
arpl
jmp
add
test
pop
pushl
pop
insl
fmull
in
mov
push
xchg
push
xchg
enter
jmp
cmpsl
inc
mov
cmpsb
sub
inc
aas
inc
adc
push
xchg
mov
cld
rol
inc
vcmpsd
ljmp
pop
jmp
pushl
add
aad
js
ljmp
stc
lods
sar
cld
scas
sar
std
scas
sar
std
lods
sar
in
mov
inc
mov
movsb
ds
std
add
xor
inc
scas
mov
mov
mov
aam
fnop
rcl
out
leave
lret
mov
mov
jmp
arpl
ret
call
add
call
pop
cld
mov
fdivr
inc
std
ret
inc
icebp
mov
ret
test
jg
add
add
stos
stos
lods
add
jmp
or
out
jmp
outsb
fcomp
fisubl
movsb
outsb
ljmp
add
lret
fldl
ja
lock
dec
in
std
shl
call
out
call
in
call
in
test
call
into
in
scas
lods
lods
popa
addb
add
incb
std
incl
int3
int3
shrl
mov
add
mov
add
loop
jns
hlt
push
cmpsb
inc
loopne
call
shl
std
aam
sti
shl
push
leave
xlat
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
scas
add
mov
push
jne
fistps
cmp
out
mov
shl
call
ror
out
shl
in
rcl
ljmp
scas
push
fwait
cltd
cltd
add
mov
sahf
lods
xchg
inc
and
ret
int3
int3
ja
mov
xlat
mov
lret
adc
into
outsl
fmul
rcrb
rcl
dec
jecxz
fistpll
call
out
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
lds
sbb
bswap
int
or
aam
push
std
add
std
incl
stos
incb
sarb
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
and
loop
js
xor
mov
ljmp
loop
add
in
push
andnps
out
xchg
adc
test
mov
scas
pop
nop
mov
int3
icebp
sub
cli
popf
leave
mov
call
inc
cmp
gs
pop
sub
es
mov
cmpsb
stos
pop
xor
add
push
sbb
mov
ss
mov
xchg
ds
jge
jae
cmc
scas
mov
pop
inc
add
inc
mov
enter
and
jmp
adc
pop
movsl
cmpb
xchg
movsb
sub
bound
insl
sarl
mov
dec
outsb
lock
push
sbb
rolb
int
fisubrl
push
add
mov
add
jle
dec
out
xor
mov
movsl
mov
addr16
out
data16
add
jmp
notb
imul
jge
ret
loope
in
cmp
or
jae
repnz
push
stos
int3
test
add
mov
test
inc
sbb
nop
hlt
push
or
lods
stos
xorb
push
popf
jge
lahf
mov
xchg
aaa
cmpsl
add
inc
insb
sbb
cmp
adc
dec
lahf
cmp
fmul
mov
cmp
mov
aaa
and
mov
jmp
scas
clc
or
andb
loopew
shlb
lret
cmpsb
adc
cmpsb
daa
adc
and
ds
dec
stos
ret
insl
or
out
or
mov
mov
les
xor
insl
lods
mov
xchg
sbb
sbb
add
cld
pop
adc
mov
push
and
xchg
dec
lea
enter
loop
mov
repnz
cmpl
or
sahf
cmp
dec
ret
push
jno
push
lahf
addl
pop
mov
test
clc
std
fisttpll
int3
add
dec
push
push
push
shll
push
call
cld
mov
inc
adc
stos
cmpsl
ss
pop
test
push
decl
sahf
fistpll
test
mov
xor
ss
inc
adc
test
and
push
mov
lahf
cmp
push
push
js
inc
dec
and
scas
dec
cld
push
mov
xor
aad
mull
and
cli
adc
cmpsl
xor
mov
shrb
jbe
xchg
xchg
cmp
insb
pop
in
loopne
outsl
arpl
sub
notb
lret
adc
and
mov
xlat
fdivl
outsl
popf
shlb
xchg
mov
fmull
mov
push
sbb
mov
dec
repnz
xchg
xor
sahf
or
addl
xor
fistpll
lock
negl
mov
add
insl
adc
add
mov
fnsave
and
das
test
dec
in
cmp
or
sub
sahf
xbegin
je
arpl
xchg
out
cli
dec
cmp
push
or
sahf
jp
scas
sub
imul
xlat
loope
push
js
std
mov
mov
dec
mov
jle
adc
mov
lods
dec
mov
mov
rolb
push
in
xor
stos
push
sarb
insb
iret
shr
popf
bound
clc
in
dec
aaa
test
push
iret
xchg
enter
push
and
test
mov
out
iret
jnp
lock
cmp
adc
daa
insl
adcl
mov
fst
loope
call
dec
xor
push
mov
add
add
mov
adc
negb
xchg
jbe
fidivs
add
stc
pop
sbb
fidivrs
lcall
arpl
cltd
mov
jl
pop
rol
movsl
test
inc
popa
mov
call
popa
idiv
and
push
call
xor
inc
sbb
movsl
jg
sbb
inc
sub
stos
sbb
ljmp
or
lcall
loopne
test
dec
jb
adc
lcall
cmp
adc
int3
mov
pop
fbstp
out
mov
mov
and
ret
xor
jle
jno
xchg
shll
jo
gs
or
and
mov
cld
outsl
divb
out
int
adc
inc
push
jbe
out
dec
sbb
and
xor
cmp
insb
in
cwtl
inc
xchg
jle
jecxz
lds
fwait
inc
into
xchg
xor
cmp
xor
fld
dec
xchg
cmp
popa
enter
repz
jp
cmp
add
adc
cmpl
fwait
and
mov
mov
cmp
xchg
dec
sub
xor
roll
xchg
popf
xor
mov
es
and
add
jecxz
mov
jp
push
inc
dec
push
ds
pop
ja
inc
pop
out
stos
gs
cwtl
or
insb
inc
mov
mov
call
inc
sbb
out
mov
jp
addr16
mull
subb
stos
dec
mov
xor
adc
cwtl
fucomip
pop
mov
mull
popf
jge
cmp
inc
add
or
xchg
pop
hlt
mov
adc
iret
subl
sarb
push
sub
mov
fiadds
push
xor
jge
mov
test
ljmp
mov
push
test
mov
mov
loopne
mov
in
push
adc
stos
aam
sbb
testb
test
fists
pop
lret
in
mov
sbb
jg
mov
jb
or
push
cmp
jno
in
arpl
or
cmc
pop
pop
mov
dec
add
jo
inc
js
mov
mov
fcmovnu
int3
mov
sbb
movsl
lea
cmp
and
out
mov
push
sahf
xor
pop
cltd
mov
push
mov
fidivl
aad
cmp
jno
mov
dec
xchg
add
gs
in
mov
repnz
fsubs
or
mov
mov
or
das
bnd
push
and
or
mov
aaa
into
add
ficoms
push
leave
push
leave
mov
aad
sub
fldenv
lret
loop
sub
cld
add
sub
sbb
ds
insl
mov
mov
cmp
loope
je
pop
cmp
sub
push
pop
out
nop
aas
dec
fbstp
add
loop
data16
ret
mov
adc
mov
neg
mov
push
mov
fstp
jne
dec
fwait
xor
mov
sbb
es
cmp
pop
dec
cmc
mov
push
in
pop
fwait
adc
lods
in
xor
push
into
xchg
sub
inc
dec
out
and
add
je
cmpsb
in
and
enter
cmp
mov
mov
push
jp
cld
lcall
in
stos
ss
es
ljmp
lods
fcmove
lret
push
nop
mov
arpl
mov
ljmp
int3
pop
aaa
inc
push
cli
add
pop
push
push
lret
shlb
outsl
popa
inc
mov
jg
xor
popl
stos
negl
mov
gs
dec
cmp
mov
fsubrl
iret
push
inc
ja
ja
push
in
pop
cwtl
xchg
sub
jns
or
int
sub
shrl
and
xchg
jae
movsw
in
movsb
adc
ss
sbb
mov
mov
fisubl
or
test
adc
inc
jg
cmp
rol
pop
add
mov
jbe
or
pop
cmp
std
xchg
stos
pop
loopne
lret
sbb
loop
cmp
dec
add
out
mov
andb
in
jo
daa
mov
ret
scas
inc
cmc
pusha
adc
dec
mov
in
in
stos
inc
das
inc
pop
out
ss
xchg
sub
push
test
dec
mov
jbe
pop
orb
outsb
pop
mov
add
xchg
sub
and
pop
mov
pop
daa
add
jle
dec
push
ljmp
icebp
mov
xchg
fldcw
in
pop
jle
adc
xorb
inc
jnp
jge
xchg
sub
cmpsb
les
fisttpl
mov
movsb
xchg
sub
int3
sahf
xor
mov
movsb
cmp
push
lcall
cs
pop
add
test
cli
push
jmp
or
xchg
sub
cmp
cs
cmp
mov
and
inc
bound
add
jbe
fs
mov
cli
xchg
cld
xchg
lds
mov
lea
jno
scas
add
pop
ds
xlat
addr16
aad
xor
es
movsl
cmp
aam
sbb
data16
mov
iret
js
out
imul
aas
xchg
sub
lcall
pop
and
add
xor
pop
cmc
out
push
jo
inc
mov
push
push
lods
xchg
jnp
mov
outsb
lea
mov
adc
sbb
and
ss
mov
lret
push
dec
insl
push
out
xchg
push
cmp
insb
push
jge
lock
icebp
inc
fisubrs
nop
mov
cmp
and
jae
xchg
outsl
push
mov
sub
daa
push
popa
clc
lea
dec
cmp
es
pop
xor
dec
hlt
popa
clc
sub
jp
iret
jnp
clc
subl
dec
xchg
stos
cmpsl
adc
aas
cmp
stos
fsincos
xchg
or
outsl
push
mov
loopne
pop
shlb
mov
in
movsl
cmp
add
pop
scas
push
jmp
lea
int3
arpl
mov
es
inc
ja
pop
cwtl
arpl
scas
push
xor
insl
push
jne
mov
shlb
mov
jge
sbb
mov
lock
inc
fidivs
outsl
mov
fldl
dec
loope
dec
jecxz
repnz
pop
jns
outsb
imul
dec
add
mov
lahf
in
and
movsl
xchg
test
popf
les
in
subl
sbb
inc
push
and
pop
and
pop
jnp
and
hlt
mov
and
sbb
jmp
and
cmp
es
mov
sub
pop
jo
xchg
pop
pop
scas
dec
cmp
outsb
insb
fwait
xor
test
jo
sbb
add
int
stc
and
pop
mov
mov
cmp
movsb
dec
in
test
dec
loop
pop
jg
dec
sbb
dec
jo
scas
popa
loop
out
pop
adc
cmc
mov
lret
orb
test
jp
cmp
lods
shlb
into
outsb
add
and
dec
loop
lret
add
xchg
out
sahf
xor
jns
cmp
cmpsl
lcall
lea
push
pop
mov
cmp
sbb
mov
in
fidivl
nop
fidivs
ja
bound
xor
mov
mov
pop
sbb
in
orl
adc
roll
inc
xor
cmp
lods
push
in
addl
lds
xchg
sub
cmp
insl
call
cwtl
das
add
test
and
lahf
xchg
xchg
montmul
cmpsb
ret
adc
imul
stos
inc
lea
inc
jg
mov
xlat
outsb
dec
pop
sub
subb
pop
sub
or
fnstenv
xchg
mov
add
es
cwtl
fwait
or
push
sub
cmpsl
dec
popf
xor
dec
jns
dec
pop
mov
push
call
pop
icebp
fs
aam
test
imull
bound
gs
cmp
mov
push
mov
xor
pop
ret
mov
in
mov
mov
push
or
inc
sbb
imul
test
test
je
rcr
mov
arpl
cltd
aam
pop
xor
jle
fldl2e
push
out
and
mov
in
into
xchg
sub
push
sbb
jg
dec
loop
mov
popf
xor
xor
ljmp
sbbb
insb
lret
out
rclb
mov
ffreep
push
popf
push
add
xlat
xchg
les
jnp
mov
cltd
xor
mov
sub
sbb
ds
push
sub
dec
loop
ret
arpl
add
lods
leave
pusha
call
xchg
into
mov
pop
test
mov
ds
rclb
div
in
jne
pushf
xor
leave
imull
mov
jnp
push
in
popa
pushf
ret
pop
push
adc
test
ret
test
lea
jge
mov
dec
popa
clc
cmp
push
out
cs
inc
push
sqrtps
cmp
aam
mov
ja
pop
ss
test
lds
and
ret
movsb
int3
jae
mov
sub
pop
add
mov
push
xlat
dec
loop
sub
outsl
lcall
xor
dec
and
aas
jle
aam
pusha
or
nop
jb
pcmpgtb
rcrl
pop
imul
outsl
push
sub
jmp
mov
inc
fdiv
lods
test
push
xchg
inc
mov
dec
in
rolb
popf
ret
add
call
movsl
cmp
in
cmc
xor
xchg
sub
ret
repnz
jl
ss
popf
shrl
mov
xor
mov
ret
inc
sbb
adc
call
jmp
pushf
es
pop
lock
cmc
mov
imul
xor
test
stc
mov
mov
scas
leave
mov
ljmp
out
out
xchg
cs
mov
lret
scas
mov
inc
flds
ss
outsl
enter
sbb
add
and
mov
and
add
je
sbb
pop
xchg
testl
cmpl
fwait
xor
out
push
push
lods
jmp
in
push
jmp
xchg
and
idivl
sahf
fwait
sbb
pop
mov
popa
clc
outsl
stos
mov
mov
mov
pop
cmc
sub
xor
cmpsl
or
inc
fcmovbe
mov
stos
inc
jmp
or
outsl
jl
shrb
popf
jae
subps
test
mov
mov
ret
or
add
lea
mov
push
jmp
or
je
fsubl
mov
in
mov
mov
fimuls
push
aam
test
push
mov
mov
or
and
or
popa
cmp
jecxz
ret
insl
pop
jecxz
cmp
ss
mov
data16
and
inc
fmuls
test
push
jmp
sbb
outsb
adc
push
push
movsl
add
filds
mov
push
jl
or
mov
idiv
jae
jo
sbb
cmp
fcoms
testl
mov
repz
mov
pop
cmc
sub
test
push
add
or
jns
fisubrs
cmp
jge
xchg
rcrb
push
shll
in
mov
in
xor
xor
add
test
or
fmuls
lcall
and
add
inc
fmuls
push
fnsave
data16
sub
stos
xor
testl
and
push
movsl
mov
add
ja
les
roll
sub
jne
jmp
ds
repz
into
in
add
loopne
imull
pop
idivb
mov
ds
mov
mov
mov
sbb
pop
out
mov
ret
and
sbb
inc
cmpb
push
addr16
aaa
and
jo
push
jmp
sub
or
ja
sub
shrl
jno
sub
xlat
orl
aam
mov
shl
mov
movsl
clc
iret
xor
mov
or
lahf
jnp
and
sub
mov
out
sti
sbb
mov
in
stc
dec
push
fidivrl
data16
or
ds
push
clc
popl
adc
lret
rorl
cmp
sahf
push
or
xchg
dec
mov
dec
push
imulb
rclb
add
adc
push
jl
popf
adc
sti
jae
sub
mov
loopne
mov
in
les
mov
test
ljmp
add
movsb
pop
ljmp
nop
fisttps
out
aas
jnp
pop
cmpsl
and
dec
nop
jb
repz
pop
lcall
bnd
shrl
in
addb
mov
sbb
cld
mov
dec
in
mov
dec
add
call
push
inc
repnz
mov
arpl
cwtl
lock
push
shrl
incb
mov
in
push
or
cs
pop
roll
lret
loopne
push
jmp
add
sahf
test
lods
lret
mov
or
pop
shll
push
fstps
imul
test
loopne
adc
add
icebp
jne,pt
jo
mov
mov
lcall
int3
jnp
sarl
gs
ret
jmp
gs
pusha
or
jle
cmp
push
xorb
repnz
and
mov
jg
push
in
jmp
ljmp
daa
dec
jecxz
stos
addr16
fdivrl
in
push
push
in
push
jno
sbb
add
repnz
mov
push
outsb
xchg
cmc
mov
fistl
cmpsl
mov
fisttps
out
das
lock
cmpsl
xchg
adc
scas
scas
mov
jns
loop
xor
jle
push
popf
xchg
lahf
lds
mov
pop
or
mov
sbb
fsubrs
cmp
scas
adc
scas
mov
leave
pusha
jmp
or
sbb
lea
pop
stos
adc
decb
nop
daa
push
cmp
xchg
xchg
sub
push
scas
inc
insl
cli
inc
fldcw
mov
adc
sub
fwait
adc
std
xchg
bound
push
pusha
lret
mov
clc
cmp
ljmp
cmp
mov
sbbl
sti
cmp
cmpsl
rcrl
cltd
xchg
in
mov
mov
fs
mov
push
call
cmpsb
movsl
testl
cmp
js
mov
add
shlb
fidivrl
inc
fnstsw
fs
into
je
dec
addr16
xchg
call
sub
fidivrl
dec
aas
cmp
repz
fists
sub
fwait
xchg
xor
push
dec
push
mov
fcoml
test
jecxz
xor
loop
mov
je
adc
test
jb
mov
xchg
arpl
push
leave
xchg
sub
xchg
add
xchg
jle
repz
clc
cmp
test
enter
imul
insl
mov
fbstp
or
jl
add
imul
push
test
jl
int
and
pop
pop
adc
js
ficoml
cmpsl
int3
imul
sub
xor
addr16
push
mov
daa
shll
push
lods
ds
xchg
pop
jle
test
les
jecxz
sub
lds
insl
cmp
adc
or
jne
pop
xor
cltd
and
inc
cmp
out
insl
inc
stc
cmp
dec
loopne
jne
jno
pop
loopne
xchg
mov
fsts
push
call
mov
or
cld
push
dec
loop
fisubl
lret
js
xor
pop
lds
adc
adc
shlb
jae
or
mov
pop
xchg
mov
call
repz
fisubl
mov
xchg
fldl
mulb
rcrl
in
fnstenv
in
insb
jecxz
mov
aaa
mov
mov
std
stos
sahf
xor
movsl
and
ja
lcall
dec
bound
and
inc
ja
xchg
fs
mov
and
lods
inc
ja
pop
scas
nop
cwtl
lods
inc
das
mov
call
pop
sub
aam
inc
jg
cmc
ds
es
or
push
dec
mov
sub
cs
arpl
sub
jo
pushf
xor
xchg
xor
adc
ss
call
and
leave
pusha
jne
es
das
mov
cld
or
es
and
les
cwtl
das
shrl
mov
mov
ficoml
cmpsl
mov
pop
ret
repnz
jecxz
pop
adc
ss
in
fldt
and
stos
loope
lock
fbld
jmp
iret
xor
sbb
mov
shrl
pop
cmp
stos
or
arpl
shr
out
inc
lret
jp
loopne
std
xchg
repnz
add
shl
mov
hlt
es
or
mov
ret
fdivl
xchg
sub
rclb
mov
fldcw
fwait
loop
push
push
clc
push
aas
xchg
sub
jno
movsl
lcall
roll
hlt
xor
cmc
xchg
gs
or
test
shll
pop
ss
or
sbbl
jno
pop
inc
adc
nop
cltd
arpl
mov
mov
jo
xchg
out
or
in
sub
jno
out
cmp
out
test
inc
fld
subl
jmp
repnz
mov
ljmp
or
rcrl
sti
enter
nop
jmp
and
jmp
or
xchg
int
mov
add
dec
jecxz
and
sbb
dec
data16
cwtl
imul
pop
adc
xchg
mov
add
je
jnp
dec
loop
mov
loope
es
mov
inc
cmpsl
ds
iret
sub
mov
inc
sbb
lcall
pop
xchg
jp
or
ret
add
leave
pusha
push
and
and
loope
jns
ds
sub
popf
xor
insb
leave
pusha
sahf
into
es
cltd
xor
push
aad
mov
jbe
add
and
xchg
mov
aam
push
aam
stos
jo
sub
pop
addl
push
xlat
pop
repz
ja
mov
aas
dec
loope
mov
movsb
in
push
ret
ss
sbb
inc
shrb
push
lds
add
call
jo
shlb
aaa
into
inc
test
notl
lds
in
and
out
mov
sub
stos
inc
sbb
lret
mov
sub
popf
sbb
push
mov
push
call
cmp
xchg
inc
inc
sub
fs
int3
xchg
jecxz
mov
adc
inc
icebp
imul
shlb
mov
push
mov
push
mov
cmp
lock
lods
ja
adc
dec
inc
xor
test
mov
loope
loop
test
jg
xor
cli
xchg
fcoms
cmp
test
inc
flds
jl
mov
push
sbb
pop
dec
je
pop
cmpsb
outsb
aam
mov
roll
mov
loop
hlt
dec
data16
cmp
test
add
inc
fidivl
popf
xor
or
dec
out
mov
shr
add
adc
cwtl
cmp
scas
aad
out
xor
and
sti
push
lods
loopne
call
add
add
jae
sbb
dec
into
popf
fisubrs
mov
mov
movsb
mov
mov
dec
in
out
test
arpl
push
pop
mov
or
sbbb
mov
mov
jmp
testl
push
add
ret
ja
cmp
fwait
imul
pop
push
cltd
cmp
and
cmp
lds
inc
sahf
cmp
cwtl
addr16
or
cmp
inc
testl
loope
aad
leave
push
int
adc
pop
movsb
fidivs
inc
enter
lods
inc
movsl
addr16
dec
adc
mov
dec
insb
pushf
movsb
cmp
and
push
lock
popl
roll
sbbb
and
push
jg
add
ja
mov
int
pop
mov
aaa
inc
leave
sbbl
xchg
call
test
and
jbe
fsubrl
adc
fimull
lock
decl
xchg
push
test
es
dec
filds
lahf
shrl
mov
cli
add
xor
movsl
insb
hlt
jno
add
xchg
arpl
mov
mov
push
into
dec
stos
inc
lds
push
inc
enter
in
sub
sub
or
sbb
adc
xchg
std
adc
cld
xchg
sbb
test
push
or
mov
adc
lcall
and
movsb
push
adc
push
loop
out
push
or
push
and
in
ja
pop
movsl
push
lret
cmc
push
addr16
imul
inc
or
inc
mov
test
insl
xchg
sub
das
mov
pop
hlt
push
and
xchg
adc
loop
pop
xor
ret
sbb
mov
add
mov
loopne
pop
hlt
dec
dec
loop
adc
sbb
or
icebp
push
xchg
sbbb
adc
jae
pop
xor
clc
cs
lds
aaa
pop
pop
or
xchg
cltd
int3
push
and
adc
inc
popa
cmc
lock
and
adc
sahf
mov
fcomip
add
xchg
sahf
xor
bound
mov
jge
add
inc
sub
addb
xchg
pop
push
or
inc
lds
in
add
fdivr
sub
mov
leave
adcl
stos
data16
mov
xor
mov
mov
out
call
or
stos
movsl
inc
fcmovbe
int3
push
ljmp
push
movsl
shl
in
jecxz
mov
aaa
lds
loopne
lret
or
outsb
lods
mov
loope
push
mov
scas
out
repz
enter
push
enter
push
xchg
cmc
sub
jecxz
aam
ret
push
ror
jne
jmp
inc
push
push
mov
pop
out
in
mov
mov
pop
std
cld
sub
dec
xchg
jl,pn
iret
push
xchg
int
cmp
repz
jno
sbb
enter
add
data16
imul
sbb
lea
cmpsl
xchg
lds
push
repnz
fcmovnu
sbb
lods
lock
pusha
not
daa
sahf
xor
imul
push
lods
add
mov
push
fsubl
pop
repnz
cmp
stos
jnp
mov
or
push
sti
mov
mov
mov
inc
test
mov
shrb
es
and
add
lcall
lds
in
mov
cmpsb
cmp
gs
pop
sti
std
push
cmpsl
stos
fbstp
dec
pop
outsb
iret
mov
xor
loope
shrl
push
sub
push
dec
lds
ret
fstpt
inc
adc
mov
cmp
pop
jecxz
lods
out
inc
adc
loope
or
fidivl
jge
xchg
sub
sahf
stos
icebp
stos
dec
cmp
fbstp
dec
movsl
sub
or
cwtl
cmp
mov
shrb
adc
lds
cwtd
mov
push
adc
xchg
xor
int
inc
push
sbb
pop
pop
mov
xor
ds
dec
jge
shlb
sahf
iret
mull
jbe
aaa
add
or
mov
pop
inc
xchg
jnp,pn
mov
jp
push
jg
fdivl
outsb
data16
pop
loopne
dec
fwait
xor
inc
fdivr
pop
adc
add
jae
cmp
in
jae
outsl
cmpsb
jo
stos
aad
jg
int
iret
mov
xchg
pusha
add
gs
rclb
and
mov
add
mull
scas
xchg
sbb
mov
xchg
and
sbb
leave
jge
out
sahf
test
rorb
mov
mov
cwtl
clc
inc
pop
shlb
or
xchg
or
pushf
stc
nop
into
clc
mov
imul
lock
jmp
mov
fnstenv
outsl
sub
mov
mov
sbb
mov
loopne
mov
out
sub
mov
xchg
mov
xchg
sbb
popa
in
push
and
sub
inc
fisubs
fsts
or
hlt
popf
and
in
mov
scas
jnp
dec
les
popa
loopne
lods
cmpsl
scas
pop
pop
nop
das
sub
mov
mov
mov
call
clc
dec
clc
push
or
adc
cmp
insb
push
loopne
or
jb
push
pop
out
pop
sbb
rorb
sti
lea
sub
cmp
mov
jo
ds
inc
ja
and
xchg
fidivrs
rcll
xor
shlb
inc
test
daa
pop
insl
jmp
or
jne
out
xchg
pop
repz
movsb
in
das
sub
negb
and
sbb
fdivrl
mov
push
lds
pop
daa
inc
or
sub
pop
icebp
cmc
adc
pop
sub
or
addr16
andb
test
adc
mov
mov
push
imul
adc
clc
mov
mov
cmpsl
sbb
fnstsw
and
xor
stc
mov
sbb
dec
pop
pop
lret
fimuls
subb
sti
pop
cld
mov
dec
sbb
lods
push
testb
pop
dec
scas
sar
fsubrp
outsl
fwait
int
cmpsl
int3
scas
rolb
imul
mov
jl
xchg
lcall
xor
dec
push
jecxz
loop
mov
sarb
pop
and
pop
mov
in
and
sub
adc
inc
sub
mov
in
mov
mov
pop
loopne
xchg
test
push
mov
pusha
cwtl
pushf
adc
and
mov
xor
mov
cs
fistpl
decb
xchg
mov
mov
clc
pop
hlt
sub
jle
xor
and
add
test
push
cmpsb
mov
out
sub
and
aam
xchg
imul
iret
mov
pop
mov
adc
fsts
sarl
pop
add
hlt
mov
jnp
dec
orl
add
adc
aas
insl
hlt
dec
out
mov
jmp
inc
mov
xchg
pop
scas
jae
shll
subl
inc
ret
pop
jbe
fstpt
and
dec
sub
pop
shll
jecxz
into
adc
add
jmp
xor
dec
cmp
adc
inc
sbb
bound
test
xchg
mov
testb
mov
xlat
jle
int
lcall
movups
mov
cmc
insl
int3
in
inc
jne
retw
or
mov
push
movsl
ja
sub
jmp
sbb
sub
mov
into
outsl
add
push
lock
cld
mov
mov
sti
out
les
push
pop
insb
movsl
bound
add
mov
test
pop
or
or
and
push
mov
insl
xor
jg
sbb
sbb
pop
cmc
mov
test
cltd
into
adc
loopne
in
fcomp
push
test
loope
fidivrs
xlat
sub
inc
sbb
iret
fucom
out
movsl
sbb
mov
sbb
sbb
dec
test
insb
dec
jecxz
push
or
sbbl
xchg
push
cmp
pop
daa
insl
push
into
in
sbb
xchg
mov
js
push
or
mov
push
sbb
aam
push
jmp
cmc
test
sbb
jmp
push
push
xchg
and
loop
aas
dec
fucomip
insl
lock
ror
add
popa
mov
dec
push
cld
mov
cs
pop
cmpsb
inc
add
jns
enter
adc
or
add
pop
icebp
jmp
arpl
scas
iret
xor
add
xchg
xchg
sub
dec
aas
inc
out
fdivrl
push
loop
lds
in
les
leave
mov
xor
lcall
pop
pop
jbe
and
pop
js
xlat
xchg
push
sbbb
bound
sub
arpl
xor
xor
pop
repz
or
sub
or
loopne
mov
push
push
sub
je
loope
pusha
cltd
dec
adc
shl
mov
nop
and
es
lods
fsts
ja
sub
shrl
xchg
sbb
in
fdivrs
jae
jge
lds
dec
nop
sbb
add
aad
push
add
in
insl
push
subb
pop
add
dec
dec
fs
je
jle
jo
pmaddwd
mov
loopne
sub
leave
adc
jge
sarb
add
xlat
and
dec
inc
add
mov
inc
movsb
mov
lock
test
ss
outsb
add
adc
push
mov
push
inc
repz
daa
add
sub
pop
fists
insl
mov
fsub
mov
push
imul
push
xchg
mov
jns
mov
test
xor
sub
lret
mov
shlb
iret
fisubl
and
sarb
sub
aas
xor
mov
sbb
aad
les
push
push
bound
pusha
and
inc
popa
out
jno
mov
cli
pop
fbstp
pop
inc
mov
fs
mov
ja
and
negb
mov
test
dec
jecxz
jle
stc
push
xor
and
adc
mov
add
and
jl
push
jmp
in
aad
mov
xor
sbb
and
fwait
cltd
ficoml
mov
sbb
roll
or
push
jnp
lcall
jl
pop
jae
in
jl
je
xchg
addr16
inc
sbb
sub
push
mov
xchg
jg
clc
popl
mov
push
mov
add
cli
dec
sti
jbe
xchg
inc
stos
stos
sbb
dec
jns
push
dec
jae
dec
jle
bound
inc
pop
jne
add
iret
stos
mov
stos
aas
and
test
mov
lock
pushf
into
adc
lret
aad
std
xlat
cwtl
adc
in
lret
hlt
xlat
xchg
loope
push
jns
cld
and
or
leave
fdivr
ja
sti
and
icebp
repnz
mov
mov
lea
dec
shrl
das
les
in
push
push
inc
out
fistps
mov
test
adc
mov
mov
jno
lods
gs
xchg
int
or
cmp
dec
adc
das
xchg
and
stos
sub
cmpsl
dec
ret
arpl
bound
mov
fidivrl
pop
or
hlt
insl
and
push
adc
inc
jae
push
and
add
sbb
jle
pop
scas
addr16
ret
xchg
jmp
mov
or
or
or
stos
mov
je
mov
dec
pop
loopne
mov
xorl
push
mov
mov
xor
or
ljmp
mov
mov
push
fdivp
es
xchg
test
mov
mov
inc
testb
sbb
mov
xchg
inc
arpl
js
add
inc
pop
repnz
jnp
add
mov
aaa
test
sbb
insb
pop
cs
xor
addr16
inc
add
xor
in
push
cmp
pop
sbb
aam
pop
push
xor
sbb
xchg
sbbb
push
in
arpl
out
xchg
sti
adc
push
sub
test
aaa
add
xor
movsb
pop
jo
push
mov
ja
jge
sbb
test
mov
call
cwtl
lock
testl
mov
int3
movsl
fsubs
std
push
jmp
sbb
push
dec
pop
or
cltd
or
lahf
stc
test
sub
mov
pop
mov
in
jo
jo
das
push
add
mov
jp
je
adc
mov
lods
imul
gs
jle
push
or
mov
xchg
movsb
lds
add
iret
sub
shl
xchg
cmp
fsubs
fisubs
adcb
loope
inc
mov
stc
lds
jne
xchg
cmp
iret
sbb
lock
push
addl
inc
mov
push
jne
sub
push
ficomps
ljmp
sbb
sbb
adc
aas
jecxz
notb
lods
mov
and
pop
dec
pop
mov
cmpsl
pop
cmp
hlt
mov
out
push
into
bound
jle
push
bound
or
aad
and
push
je
nop
cmpsb
je
lea
pop
les
add
ficomps
or
das
rcl
xchg
pusha
push
mov
int3
cltd
dec
hlt
fwait
call
sbb
cs
sbb
test
adc
shlb
pop
inc
out
fcmove
sar
pop
cld
in
out
jno
nop
ficoms
mov
je
xlat
outsb
sbb
push
dec
sub
dec
ds
in
aas
adc
cmp
sub
aas
jge
mov
sbb
cmpsb
in
test
dec
aas
pop
mov
mov
jmp
jge
es
sbb
pop
ss
mov
mov
lret
lods
inc
bound
xor
lea
cli
lock
mov
cmc
xchg
adc
stos
ds
out
push
xor
mulb
xchg
pop
mov
out
pop
in
xlat
sub
dec
pop
or
hlt
mov
add
cltd
pop
xchg
add
sbb
mov
mov
subb
mov
jb
rcr
das
adc
subl
pop
cmpsb
jno
out
dec
sbb
mov
lahf
sub
add
and
dec
insb
mov
xchg
popa
mov
adc
xchg
in
dec
pushf
jmp
mov
je
xor
push
cmp
outsb
pop
ds
in
push
dec
push
dec
loopne,pt
pusha
sub
xor
je
mov
or
mov
cmc
jnp
jmp
xchg
in
fxrstor
ficoml
clc
nop
sub
arpl
inc
cmp
sub
push
dec
jb
pop
xchg
sarb
je
enter
adc
daa
sbb
call
xor
flds
cmc
adc
jbe
aaa
insl
loopne
pop
jno
sub
and
xorl
fidivrs
inc
adc
adc
xor
lahf
xlat
lret
sti
xor
mov
add
fsts
in
and
mov
std
inc
iret
js
pop
ficoml
arpl
dec
inc
jb
pop
sbb
lods
cmp
xchg
jb
xor
jne
es
pusha
xor
push
pop
lock
adc
rcll
inc
xchg
mov
mov
les
fmull
andb
mov
negb
popf
or
movsl
and
lock
loop
outsb
adc
pop
addl
sahf
pop
adc
test
out
rorl
cmp
les
xchg
jmp
inc
rcr
cwtl
fisttpl
jnp
daa
sbb
daa
sbb
out
inc
insl
xor
inc
mov
repz
xchg
scas
sti
pop
and
movsb
jae
jno
mov
icebp
mov
ror
popa
add
add
push
leave
pop
jns
pop
pop
insb
add
das
das
xchg
fmuls
inc
aas
sub
mov
jb
pop
jecxz
sbb
xor
sub
icebp
movl
ret
aaa
mov
push
std
movsl
and
mov
lret
mov
xor
dec
les
xchg
int3
bound
push
lock
in
add
mov
pusha
jbe
xchg
push
or
pop
xor
sub
xor
in
lods
pop
adc
jmp
in
adc
mov
aam
sti
xor
mov
and
mov
sti
es
lahf
pop
add
jle
jne
out
sbbb
xlat
pop
jb
xchg
bound
aam
xchg
mov
stc
movsb
xchg
and
outsl
clc
je
fldl
es
mov
fsub
imul
xor
add
sbb
sbb
pop
push
data16
mov
ja
ds
mov
dec
fs
add
incb
das
or
inc
std
addl
push
in
dec
ret
sti
loopne
or
xlat
lds
jmp
and
cmp
stc
nop
add
cwtl
imul
dec
in
pop
or
sub
loop
les
jnp
in
inc
sbb
repnz
popa
xlat
inc
dec
pop
rcrb
mov
call
es
cmp
movsl
stc
mov
ds
mov
js
ds
pop
gs
xchg
mov
stc
cmc
sbb
sub
mov
or
divl
scas
inc
cmp
pushf
das
rolb
es
and
jle
sbbb
jb
sbb
stc
pop
mov
mov
lods
repz
sbb
xchg
mov
push
adc
into
cmp
xor
int
pop
sub
leave
inc
cmpsb
xabort
cmp
aad
cmc
push
xlat
into
gs
or
jne
adc
pop
imul
je
dec
loop
fcoml
inc
sbb
mov
mov
popa
sub
xchg
lods
loope
aaa
cmp
je
or
inc
sbb
lods
cmpl
fbstp
add
leave
movsl
and
inc
cmp
cld
mov
nop
jmp
imul
pop
dec
jne
ret
stos
mov
fsub
dec
in
cmpxchg
or
xchg
cmp
enter
data16
xor
push
add
daa
pop
je
fimull
lret
push
adc
sahf
push
out
test
loop
mov
lahf
rcrl
leave
std
std
sub
frstor
lock
call
int
mov
fs
loopne
mov
mulb
jmp
repnz
outsb
inc
shrl
mov
ds
loop
insl
adc
lds
hlt
mov
jecxz
insl
mov
test
mov
loope
mov
cs
in
xor
add
rorl
adc
ss
subl
and
iret
bound
mov
mov
fsubrl
iret
out
push
mov
loop
in
into
dec
xchg
mov
out
shl
sbb
ljmp
lods
outsl
aas
pop
add
xor
test
int3
pop
sub
aas
or
scas
addr16
fimuls
ss
cmp
ret
bound
fsubr
out
in
inc
iret
xchg
or
mov
movsb
jb
popa
enter
leave
adc
repnz
lods
fucomp
test
pop
sti
out
stc
adc
lahf
jl
imul
dec
lea
imul
jb
leave
sub
xor
add
pop
scas
add
add
jne
sub
test
xchg
inc
jecxz
xchg
xchg
movsl
jp
mov
aam
aad
xchg
mov
aad
enter
add
test
daa
stos
mov
rclb
mov
sarb
cmp
mov
push
mov
push
in
xchg
add
jge
mov
mov
mov
fcomps
out
in
pop
inc
in
sbb
adc
aas
lock
aad
ret
mov
mov
add
repz
les
adc
mov
inc
mov
add
sbb
push
add
xor
lea
add
pop
pop
je
insl
pop
sub
notl
roll
sti
mov
test
sahf
stos
push
inc
lret
andl
fdivrl
stc
jg
inc
or
pushf
ds
into
or
adc
jmp
jle
pop
sti
jbe
mov
fcmove
stc
xchg
aas
sti
pop
inc
mov
dec
popf
cmpsl
jg
scas
inc
add
cmc
and
dec
push
sub
inc
cmpsb
inc
fsubl
push
scas
push
add
pop
mov
push
push
je
inc
les
dec
stos
shrl
insb
jp
insl
dec
sub
jle
in
das
sarb
outsl
insb
stos
lds
adc
fs
call
ret
das
data16
and
push
cld
push
stos
xchg
cmp
push
int3
in
inc
mov
jecxz
je
sbbb
push
fldl
mov
inc
xor
push
adc
pop
sarb
imul
mov
mov
aad
loope
pusha
push
cmp
mov
stc
xchg
in
fidivrl
cmp
mov
cmpl
cmp
dec
xor
cwtl
addr16
push
test
mov
inc
frstor
pop
fiadds
popa
add
jle
enter
add
out
push
loop
xchg
adc
mov
mov
lds
shl
in
loop
inc
mov
in
push
ds
jnp
call
jae
dec
push
lods
jp
es
cmp
sahf
in
xlat
mov
mov
pop
add
gs
xlat
xor
adc
push
popf
jmp
mov
adc
lret
mov
cmpl
sub
pop
mov
cltd
test
pop
cli
or
movsl
aad
mov
dec
pop
ja
push
movsb
and
lock
daa
mov
lahf
push
repnz
xchg
nop
cmc
push
lods
inc
test
test
adc
ficomps
adc
fwait
dec
sbb
lods
push
jo
fistps
sbb
jae
or
iret
jo
popa
jb
repz
fninit
push
sbbl
xchg
cmp
imul
add
cmp
rorl
shll
xchg
mov
and
arpl
jle
mov
mov
xchg
and
iret
scas
cli
js
aad
scas
fsubs
mov
stos
sub
mov
ret
push
aas
lock
in
data16
sbb
call
outsl
inc
outsl
add
inc
decb
jo
sbb
push
sub
js
jge
inc
and
sti
xchg
popa
sub
stc
inc
mov
push
and
jo
cltd
mov
adcl
inc
pop
push
and
xor
sbb
mov
xchg
fimuls
leave
sahf
or
stc
mov
jle
popa
sahf
test
loopne
mov
movsb
dec
mov
fdiv
and
mov
jno
shll
push
pop
dec
rdtsc
mov
gs
sub
mov
rolb
add
mov
pushf
push
out
daa
test
movsb
jb
cwtl
inc
mov
or
mov
daa
mov
fmull
ret
mov
fstl
xchg
jge
push
and
mov
in
movsb
or
test
int3
insb
pop
sbb
xchg
sbb
orb
sahf
mov
test
dec
push
adc
push
scas
add
mov
jbe
subl
jo
push
push
mov
es
aad
pop
sub
mov
jae
ret
inc
daa
inc
adc
lea
imulb
fbstp
jle
inc
cmpsb
xlat
lds
or
xchg
pop
adc
nop
dec
aaa
mov
loop
push
mov
xlat
aaa
out
stc
cwtl
lods
push
or
jle
cmp
roll
cmpsl
add
ljmp
push
push
jmp
xchg
rolb
sub
mov
or
xor
loop
sbbb
outsl
mov
in
icebp
jo
arpl
sbb
in
sti
cwtl
mov
shlb
cmp
je
push
aas
dec
xchg
test
idivb
pop
push
ds
jnp
orb
pop
sahf
filds
es
push
xlat
inc
mov
ss
daa
imul
mov
cmp
rcr
pop
xsha1
cmpsb
mov
ja
mov
ljmp
jno
iret
cli
and
sbb
inc
retw
mov
daa
call
xchg
pusha
cmp
mov
rorb
out
lds
idivb
push
cli
aaa
and
inc
pop
cld
sbbl
lods
xchg
ja
jmp
enter
mov
jno
sbb
in
scas
frstor
ss
inc
jns
mov
int
aas
push
xor
fucomp
push
mov
hlt
sbb
xchg
sahf
push
xchg
movsb
xchg
cmp
sahf
in
fldcw
movsb
mov
sahf
repz
cwtl
les
adc
push
xor
xor
mov
push
mov
sub
fmul
fsubs
cmp
mov
add
movsl
jae
adc
sbb
sub
inc
pop
dec
fs
xchg
jo
xor
repz
and
mov
rorl
lret
cld
fldpi
pushf
push
test
insl
enter
mov
arpl
addr16
fdivrl
movsl
dec
cmc
mov
add
mov
or
pop
push
in
mov
out
xchg
dec
adc
iret
lret
leave
adc
data16
into
iret
in
cltd
insb
mov
iret
inc
mov
mov
add
lcall
pop
aaa
dec
or
lds
pop
enter
repnz
add
sub
ss
or
loope
sub
in
push
xchg
jmp
test
scas
add
xchg
insl
cmp
nop
push
jecxz
pop
fwait
stc
cmp
and
cmp
mov
aam
cmp
push
ficoms
outsl
fisttps
sbb
mov
jo
sti
lahf
mov
ficoml
fsub
pop
shrl
mov
cmpsb
inc
xchg
cmpsl
ds
xor
or
adcl
xchg
sub
and
jne
fildl
insb
fsts
cmp
sbb
in
cmc
out
dec
test
flds
hlt
adc
mov
fsubr
push
shrb
cwtl
std
sahf
mov
cmp
adc
pop
outsb
mov
mov
fidivl
pop
in
test
cmpl
mov
popa
xor
fsts
call
sbb
test
outsb
push
aas
xorl
xchg
pusha
aaa
lret
sti
cmp
pop
popa
jns
mov
inc
test
xchg
mov
jecxz
testb
adc
mov
mov
xchg
and
xor
cld
cmp
arpl
jns
adc
nop
lcall
push
insb
and
push
mov
inc
xlat
fists
bound
fstps
or
dec
jae
fldt
push
dec
lahf
divps
test
into
ds
push
push
cld
das
xorb
adc
cli
loope
not
jecxz
lock
or
cmp
mov
pop
aad
roll
js
sub
dec
or
into
aad
sbb
leave
lcall
jmp
cmp
icebp
xchg
enter
add
cmpsb
xor
push
pop
lock
pop
mov
in
sub
jecxz
insb
ret
jg
inc
mov
cmp
test
es
push
xchg
adc
push
daa
ljmp
sub
jo
sub
rcrb
mov
xchg
mov
pop
push
stc
cmp
rclb
clc
inc
mov
fisubs
cmp
pop
cmpsl
xor
lds
imul
push
push
lea
mov
arpl
loopne
loop
jb
xchg
add
repnz
aas
lret
pop
mov
pop
movsl
cmpsb
pop
cmpsb
xlat
push
shlb
repz
dec
out
adc
inc
lock
aad
sbb
adc
rorb
xorb
scas
jmp
fs
lcall
or
adc
ja
mov
ret
popf
xor
loope
leave
in
test
push
andb
cmp
adc
cmp
jge
add
psadbw
dec
mov
dec
xchg
push
xor
inc
sahf
outsb
out
test
sbb
shrl
and
cmp
je
add
add
or
push
and
cmp
nopl
mov
fchs
jae
in
xchg
push
xor
jno
adc
dec
dec
loopne
outsl
test
adc
and
sbb
mov
sbb
jo
dec
loopne
dec
jne
dec
jecxz
cli
mov
faddp
adc
movsl
mov
ret
ds
lcall
adc
cmp
push
xchg
pop
mov
ds
outsl
xor
into
call
push
inc
pushf
aas
and
add
jo
pop
xor
idivl
cmp
sub
mov
outsl
dec
shrl
cmp
nop
mov
mov
popf
sti
mov
sub
and
sub
fidivrs
cmpsb
lock
out
gs
xchg
repnz
frstor
mov
mov
cmpsb
inc
imul
pop
jno
adc
test
jl
test
js
jb
clc
xchg
xchg
aas
ret
sub
inc
pop
lret
mov
xor
imull
jnp
pop
mov
iret
cmpsb
orl
lock
mov
test
mov
mov
inc
test
inc
movl
push
or
adc
nop
lret
xlat
stos
jmp
dec
dec
scas
mov
in
inc
pop
sub
mov
in
fisubrs
cmpsl
loope
push
push
inc
repnz
in
xchg
jge
iret
lods
addr16
es
inc
push
inc
add
jge
sub
inc
xchg
dec
inc
fwait
mov
and
pop
and
rcll
ja
mov
pop
shrb
aas
pop
sub
leave
popa
or
cld
or
icebp
out
lahf
sbb
sub
ret
xchg
mov
or
adc
out
loopne
mov
or
ja
mov
mov
and
fcmovnu
pop
loope
inc
stos
pop
push
icebp
jle
repnz
mov
push
add
mov
push
pop
sub
jmp
mov
aam
sub
rcrl
mov
xor
fnsave
mov
fcmovbe
inc
in
test
aam
frstor
cmc
movsb
dec
and
enter
mov
fisubrs
adc
push
lret
push
cmp
or
mov
jmp
rep
jbe
fildll
int
mov
movsl
rolb
mov
mov
jge
lods
dec
jg
ds
mov
or
out
mov
push
loop
sbb
pop
mov
mov
mov
sbb
insl
mov
xorb
jge
mov
mov
test
in
and
jnp
mov
test
jp
push
pop
cmpsb
xchg
into
pop
mov
xchg
arpl
adc
loop
jne
cli
es
outsb
sbb
dec
sub
jecxz
dec
scas
mov
negl
addw
cmp
cmp
bound
jb
add
jmp
ret
arpl
push
pop
or
lret
add
lods
cmp
sbb
or
leave
cmp
std
popf
loop
sarl
cs
add
cmp
jae
out
movaps
xlat
cmpsb
or
jle
out
data16
aam
roll
les
imul
imul
sub
pop
sub
jno
pop
test
je
cwtl
movsl
loopne
adc
jge
test
stos
fs
pop
mov
loopne
add
xchg
int
int3
cltd
lret
negb
scas
stos
add
ss
dec
test
outsl
mov
andb
fdivrs
fwait
out
pop
rorl
loope
iret
and
adc
mov
notl
or
pop
lods
leave
xor
sbb
mov
mov
aad
sbb
cmp
int
shll
cli
clc
iret
xchg
mov
lods
stos
cmpsb
pop
hlt
xlat
dec
mov
clc
inc
dec
aas
popl
in
aaa
sub
loope
aad
mov
sub
fwait
xor
ja
add
xlat
jno
sub
mov
mov
jne
sbb
iret
xchg
pop
out
dec
std
pop
repz
cld
push
imul
pop
add
scas
or
mov
inc
jne
ja
cs
cli
inc
and
xchg
cmpsl
cltd
rcl
dec
cwtd
pusha
dec
fbld
push
imul
xchg
sub
mov
addr16
decl
clc
dec
mov
imul
inc
rcrl
gs
adc
inc
loopne
xor
fbld
cltd
jle
ds
test
arpl
sbb
jo
pop
jge
sbb
std
sbb
xor
add
sbbb
sbb
add
incl
mov
push
je
push
test
xor
inc
mov
out
inc
ljmp
call
insb
test
xchg
test
push
mov
mov
jp
lock
mov
add
mov
jno
and
xor
cmp
jb
xchg
xchg
sarl
dec
or
adc
outsb
and
xor
out
add
or
sbb
jne
sbbl
xchg
xchg
imul
aam
cmpsl
cmpl
or
push
pushf
push
cmp
mov
pop
and
mov
or
jae
xchg
out
lret
mov
test
negb
dec
pushf
movsl
mov
jo
sbb
mov
shrl
fldenv
inc
aas
cmp
fidivl
shlb
shrl
xsha256
cmpsb
rorb
xchg
pop
outsb
and
daa
mov
mov
sbb
cmp
add
mov
mov
adc
mov
lods
xchg
pop
inc
int
mov
mov
insb
aad
sbb
add
cmp
out
sbb
lea
mov
ficoml
popa
clc
sub
lds
imul
je
mov
notl
jno
fisubs
xchg
pop
cmc
iret
add
sub
icebp
es
aad
leave
test
testb
test
mov
insl
clc
xchg
aam
adc
mov
fwait
adcb
dec
mov
jns
dec
sub
jge
push
and
xchg
and
movsb
jnp
jbe
or
lcall
jp
rcrb
jno
and
daa
lahf
ss
roll
push
stos
cmp
cmp
lret
insb
mov
or
inc
push
out
push
pop
addr16
mov
push
int3
push
add
es
aaa
mov
aas
dec
mov
pop
cmc
in
iret
push
jmp
or
inc
fiaddl
dec
mov
cli
and
aam
jo
cmc
or
xchg
add
adc
cmp
jl
jno
or
jbe
out
fisubrs
mov
jge
xchg
sub
push
lcall
xor
push
ljmp
sti
pop
jb
fs
stc
push
test
jmp
std
lods
testl
adc
xor
and
jecxz
jge
lock
sti
cmp
add
cmpb
jb
movsl
mov
lahf
sbb
in
jne
pop
cs
dec
add
add
cltd
xorb
loopne
out
test
xchg
jg
or
jbe
repz
mov
or
jnp
xlat
es
pushf
jl
daa
test
fisubrl
mov
repz
lock
jge
push
stos
xchg
or
es
sub
popf
fldt
outsl
popf
cld
and
decb
or
imul
xlat
sbb
pop
andl
add
gs
out
cli
dec
mov
lods
pop
icebp
lods
inc
and
lock
fstps
cmpsb
in
push
ds
dec
jo
aad
cmpsb
and
repz
hlt
lds
xchg
jne
fdivl
bnd
or
mov
icebp
mov
jns
mov
xor
inc
sbb
fbstp
frstor
arpl
repnz
add
hlt
leave
scas
mov
xlat
push
mov
cmpsb
fwait
in
mov
sub
push
adc
dec
daa
push
int
mov
jbe
shl
inc
dec
cmp
mov
cmp
or
mov
fildll
mov
outsb
add
dec
push
aad
mov
test
push
shl
icebp
mov
add
pop
les
dec
push
inc
imulb
and
xor
popa
popa
lahf
and
test
mov
mov
jle
xchg
fldt
pusha
inc
fcoml
cmp
insb
stos
mov
xor
inc
loope
mov
sub
cmpsb
add
lds
mov
xchg
sub
push
mov
dec
dec
aad
push
jle
sub
push
mov
mov
mov
ret
mov
outsl
jno
movsl
ds
add
mov
mov
pop
ja
imul
rorl
cmpsl
sub
add
adc
cmpsb
mov
adc
je
dec
sub
pusha
push
int3
fnsave
push
inc
into
adc
jno
cld
mov
popa
xor
cltd
stos
arpl
sbb
sub
inc
adc
cmp
data16
cwtl
into
cmpsb
jge
lcall
xor
mov
ret
int
sbb
and
dec
jns
mov
scas
ja
shll
out
push
js
mov
jp
jno
and
push
dec
js
std
fisubrs
das
ret
lods
cmp
lods
pop
push
popf
bound
jo
lods
add
aaa
jp
xchg
mov
iret
mov
add
sbb
jae
cmpsb
cmp
push
mov
into
xor
fsubrs
push
in
test
push
shll
fs
out
inc
mov
or
pop
mov
jne
sub
cltd
outsl
iret
mov
push
into
jno
scas
mov
xchg
jecxz
inc
pop
cmp
mov
sarl
pop
mov
cmp
fs
iret
xor
jg
push
add
mov
mov
mov
ret
mov
ja
imul
in
dec
out
jae
jp
mov
cli
cs
mov
jg
or
jmp
pushf
mov
push
xor
xchg
lods
int
out
xlat
mov
es
mov
stc
push
roll
add
or
inc
in
in
jmp
xor
ds
and
cmpsb
mov
inc
idiv
adc
lret
push
clc
pop
add
pop
xchg
dec
add
push
or
in
test
xchg
jmp
xchg
or
ret
shll
add
and
sub
subl
inc
xchg
and
repnz
cld
sti
arpl
fidivrs
ljmp
jne
aam
lea
adc
addr16
mov
inc
mov
insb
or
cmp
mov
and
and
iret
xchg
or
and
mov
adc
divb
add
leave
sahf
jbe
cltd
sbb
push
add
fldenv
fsubrs
xor
test
inc
sub
jmp
mov
mov
xor
iret
jp
mov
jp
aad
pop
sahf
sbb
xchg
sahf
xor
mov
sahf
mov
jne
or
decb
ss
inc
pushf
ret
iret
cmp
xor
jne
dec
arpl
out
in
popf
cmpb
sub
das
hlt
mov
mov
xor
in
lret
push
mov
sbb
fcmovne
insl
mov
stos
repnz
pop
xchg
sbb
repz
jae
lahf
mov
test
ret
lret
jecxz
orl
mov
cmp
mov
sbb
mov
adc
xchg
dec
fdivrs
mov
dec
rcr
stos
jbe
movsb
fldt
pop
sub
dec
lcall
cmpsb
sbb
mov
mov
shlb
into
lret
hlt
jge
mov
inc
pushf
scas
lret
pop
movsb
int3
out
or
mov
push
cmpsl
lcall
mov
test
mov
mov
pop
pop
xchg
mov
dec
lea
fwait
jp
or
push
mov
add
pop
or
pop
cmp
jns
cmp
in
fldln2
ret
jle
inc
or
scas
inc
in
icebp
shlb
mov
jge
pop
or
jbe
scas
xchg
cld
mov
pop
add
lods
jo
and
inc
pop
out
dec
add
psadbw
cmp
push
int
xchg
out
shrb
adc
les
mov
mov
movsl
into
and
loope
psubb
mov
adc
lret
mov
push
pop
scas
add
es
fidivl
ljmp
test
adcb
das
adc
test
xchg
mov
push
dec
imulb
aaa
pop
sbb
pop
mov
mov
movsl
iret
and
adc
push
imul
xchg
cmp
add
or
imul
jmp
sbb
mov
mov
lea
mov
out
in
sub
mov
jne
icebp
jae
jno
cld
ss
mov
mov
push
push
ss
mov
inc
adcb
gs
dec
pop
cmpsl
ds
jl
or
and
ja
enter
jne
dec
xor
aam
faddl
mov
push
std
jo
mov
iret
and
lea
pop
sub
movsb
xor
or
push
or
sahf
xchg
push
dec
loop
lahf
fsubrs
push
jle
mov
mov
mov
adc
xchg
and
lods
repz
test
stc
mov
lahf
cwtl
push
add
push
xchg
orl
loop
adc
pop
cmpsb
mov
movsl
mov
mov
dec
or
xchg
sbbb
and
mov
mov
mov
lds
clc
pop
iret
add
pop
call
jno
call
addr16
adc
cwtl
out
inc
inc
push
lcall
xchg
cli
or
icebp
call
rcr
sub
lret
icebp
jbe
pop
sub
cmp
aam
fldcw
and
jns
mov
push
inc
ja
jge
leave
mov
lret
add
test
add
cmpsb
loopne
pop
xor
or
ljmp
lret
inc
stc
xor
mov
clc
push
or
inc
mov
fnstenvs
js
cmpsb
imul
hlt
inc
imul
out
loop
shl
shll
rcl
xor
in
in
mov
xor
mov
popa
mov
pop
insb
adc
jb
scas
imul
dec
inc
lcall
pusha
ss
jl
pushf
lcall
stc
call
or
enter
mov
jle
shrl
sti
scas
fldl
push
movsl
dec
xchg
shlb
mov
push
rclb
xchg
aaa
xchg
adc
jbe
sbb
mov
pop
addr16
js
or
ficoms
in
inc
repnz
mov
ljmp
clc
or
int
jne
test
dec
cmp
lds
lahf
enter
sti
mov
cwtl
push
js
stc
jmp
lods
adcb
ss
sbbb
mov
aad
rolb
insb
jle
call
aas
push
gs
rcrb
imul
frstor
and
repnz
scas
and
xor
push
mov
out
bound
icebp
add
or
pop
pop
jl,pt
jnp
das
pop
mov
mov
ljmp
mov
cmp
mov
notl
adc
sti
dec
fisubl
jb
push
fwait
jo
arpl
in
xchg
bound
shr
push
mov
imul
call
into
push
inc
and
outsb
insl
push
add
push
shlb
repz
mov
push
or
imul
mov
call
hlt
fbld
lcall
sub
pop
icebp
cmp
addr16
sbb
movsb
fisubs
cmp
add
cmc
cmp
shlb
shll
movsb
fidivs
icebp
call
mov
adc
and
jns
enter
lret
add
into
sub
xchg
outsl
add
popf
mov
pop
xor
jno
jmp
fildl
clc
movntps
push
call
pop
jmp
jecxz
cmp
addb
sub
xor
mov
mov
int
mov
in
and
popf
sub
inc
cmp
jo
adc
int3
lret
cltd
xor
lods
push
sbb
jbe
pop
lahf
dec
stos
jle
fdivl
sbb
loopne
jecxz
rorb
pop
dec
in
pop
jecxz
jmp
imul
arpl
dec
inc
jmp
subl
fsubs
mov
mov
cmc
push
je
cwtl
mov
push
sti
dec
jne
adc
inc
push
in
stos
push
jb
fidivrl
leave
mov
xchg
leave
jecxz
jle
test
sbb
test
xchg
or
lcall
ljmp
and
adc
int
mov
fstl
mov
mov
lret
aam
out
mov
xchg
ja
xchg
pop
nop
fisttps
nop
popf
pop
out
into
mov
std
mov
orb
pop
inc
mov
je
add
enter
or
loopne
pop
stos
mov
out
push
repnz
pop
pop
ja
mov
dec
iret
mov
aam
test
cmpsb
inc
cltd
ja
xor
sahf
loope
push
sbb
inc
cld
jge,pn
out
into
mov
mov
jns
mov
data16
out
stos
dec
mov
das
inc
aad
call
leave
std
hlt
dec
pop
arpl
and
roll
fld
sbb
insb
incb
out
mov
xor
repnz
fldenv
pop
sbbb
inc
les
shrl
jno
out
jle
dec
mov
pop
inc
rol
dec
pop
xor
jp
repz
ds
push
cmc
push
loop
lock
mov
hlt
sbb
lods
sub
xor
leave
ja
sbb
into
icebp
pop
hlt
adc
shll
jl
or
jmp
sbb
mov
cmp
push
sahf
cli
mov
ret
jp
push
inc
lcall
loop
xlat
cmc
push
xor
dec
iret
mov
add
fwait
mov
sbb
pop
shlb
push
hlt
push
dec
cmc
leave
add
shr
cmp
sbb
jp
ret
scas
mov
lret
stos
test
nop
enter
adc
adc
inc
call
stos
and
lret
add
add
pop
scas
xchg
mov
cltd
or
movsb
scas
mov
fucomip
insl
cmove
aad
jb
mov
lret
fisubrl
push
push
mov
in
and
sti
xor
cltd
mov
jge
lret
push
cmp
shll
pop
sahf
out
pusha
adc
callw
dec
xlat
outsb
cmc
mov
sahf
cmp
testb
adc
fmuls
ret
lea
ds
jnp
sub
xchg
insb
sahf
xor
loop
sbb
lcall
cmp
scas
in
push
je
add
and
adc
daa
and
adc
inc
xlat
mov
lds
pop
inc
push
push
std
mov
xchg
adc
hlt
dec
cli
mov
adc
imul
cltd
sub
stos
and
in
lds
push
and
dec
dec
lds
sub
mov
int
int3
mov
mov
mov
sbb
fsubp
mov
xor
pop
fidivs
jl
add
or
add
dec
shl
jp
jge
inc
cmp
jecxz
call
cs
js
or
xchg
sti
sub
std
jae
call
cmpsl
mov
scas
mov
orb
inc
mov
cltd
inc
mov
outsl
out
addr16
pop
incl
mov
pop
cmpsb
mov
ja
scas
push
outsl
xor
pop
xor
pusha
push
iret
jmp
fwait
or
or
arpl
out
ds
inc
mov
mov
pop
in
jno
test
fisubs
scas
mov
xor
add
jmp
lods
pop
ja
inc
fstl
push
addr16
mov
and
mov
cmp
daa
fnstsw
aam
cmp
inc
rorb
sub
cmp
adc
jp
daa
mov
mov
in
movsb
imull
pop
mov
cmp
pusha
paddd
sub
nop
rcl
repz
fstpt
cmp
xor
scas
data16
negl
jns
pop
xchg
mov
mov
ret
dec
out
into
mov
sub
insb
aas
xchg
and
cmpsb
lods
repnz
pushf
pusha
xchg
jnp
outsl
sub
jb
int3
push
out
cmpsl
fldcw
rep
inc
ffreep
std
mov
sbb
add
lds
and
jno
pop
cmp
and
dec
loopne
jno
lahf
and
jb,pn
add
cld
xchg
mov
arpl
add
add
rorl
fsubs
mov
mov
insb
addb
js
pop
xchg
pusha
push
in
push
sbb
out
sti
fs
clc
cmp
mov
xchg
sbb
cmpsl
addb
sbb
imul
imull
lds
mov
dec
pop
fnstsw
lock
push
ljmp
jno
out
and
push
stos
add
mov
es
mov
and
xchg
push
ds
ftst
and
cltd
jnp
test
pop
pop
push
or
push
rclb
mov
inc
push
push
mov
in
out
mov
push
std
sbb
mov
out
sbb
push
filds
mov
xor
in
xchg
cmpb
jmp
add
xor
popa
add
xchg
outsl
fbld
mov
loope
cmp
xchg
lahf
addr16
ret
or
mov
ljmp
mov
xchg
jl
leave
cmpb
dec
push
xor
fsubl
repnz
loop
adc
xor
addl
xlat
mov
jno
xor
insl
adc
jecxz
int3
out
jle
inc
fdivrl
sbb
jle
cmpsl
mov
addr16
mov
ljmp
sbb
test
jnp
fnstcw
and
cli
cmp
inc
inc
fs
jne
add
clc
xchg
push
call
aas
or
jne
mov
cld
xchg
insl
or
psllw
aaa
xchg
adc
aam
fwait
test
pop
arpl
sub
jp
dec
jl
mov
mov
aaa
lods
inc
movsl
outsl
mov
jns
clc
xor
hlt
data16
scas
and
movsb
dec
mov
xchg
js
pop
idivb
sarb
scas
mov
xchg
xchg
sbb
cwtl
and
push
push
sbb
xor
std
and
jmp
xchg
out
mov
xchg
jb
test
add
lea
lods
aad
jo
rclb
cs
mov
outsb
imul
mov
inc
adc
dec
xchg
cld
cmp
mov
mov
cmp
cs
xlat
in
pop
push
mov
add
leave
jo
mov
inc
sbb
mov
stos
test
sbb
dec
cmp
pop
aad
dec
mov
jo
gs
dec
push
xchg
and
add
ds
out
rcrb
call
shlb
andl
adc
hlt
das
pop
cli
and
or
int
push
in
pop
out
sub
repnz
aas
outsb
rol
adc
movsl
push
mov
cmp
mov
ds
pop
cmp
jb
in
inc
fdivs
aad
push
xchg
movsl
jmp
repnz
rorb
adc
push
or
ret
arpl
into
and
dec
jae
xchg
mov
cmovl
subb
pop
xor
add
inc
add
data16
inc
xor
sbb
jnp
dec
sbb
xchg
mov
lcall
push
push
lods
imul
fs
aad
dec
dec
and
shll
push
cmc
ror
pop
out
cli
stos
aas
loope
in
ret
js
ret
mov
ret
mov
in
inc
aad
popl
fdivrs
add
enter
inc
je
std
ja
sbb
jne
push
ret
out
xchg
jne
mov
pushf
shl
roll
push
inc
sbb
mov
inc
ret
mov
stos
testb
mov
arpl
jb
dec
bound
sub
mov
sub
insb
jle
mov
mov
mov
pop
mov
dec
mov
or
fdivs
mov
xchg
aam
sub
sbb
dec
orb
sbb
inc
jmp
loope
mov
mov
shll
inc
cwtl
cs
iret
sub
mov
jns
xchg
aas
jnp
sti
cmp
or
adc
add
lret
mov
or
mov
test
or
stos
push
push
pop
movsb
arpl
nop
aas
fdivrs
jno
aas
pop
adc
push
shrl
jmp
push
test
xchg
lods
int3
mov
push
call
push
imul
jbe
cmpb
out
jno
out
sbb
xor
es
fstps
mov
add
lock
cltd
hlt
sbb
jnp
insb
aas
andb
sbb
xor
cmp
xchg
cmc
xchg
xchg
xchg
jle
leave
mov
dec
ret
ss
push
rorb
hlt
dec
dec
dec
sti
xor
jo
rorb
popf
jmp
call
out
add
aaa
hlt
xchg
repnz
dec
in
jge
push
outsb
in
mov
adc
pop
sbbb
subl
pop
pop
outsb
cmp
mov
lahf
ds
add
in
xlat
outsb
pop
pushf
pop
out
jl
shr
sti
cmp
fiaddl
mov
mov
xor
xor
cli
pop
in
out
pop
imul
mov
inc
cs
sbb
mov
jg
sub
lret
jne
popf
or
sbb
cmp
mov
push
mov
inc
and
leave
pusha
pop
mov
push
inc
lahf
mov
xchg
popf
and
ljmp
and
inc
pop
pop
insb
and
jns
sbb
pop
call
pop
cli
or
outsl
push
push
scas
ds
jo
fisubl
dec
fiaddl
xchg
cmp
in
push
cli
shlb
inc
push
inc
loop
aas
enter
dec
xorl
or
mov
xchg
cltd
sub
test
sub
hlt
out
arpl
ret
push
mov
fldt
pop
push
in
ret
ljmp
jmp
pop
data16
xchg
jl
ficoms
jb
or
lock
lahf
mov
mov
xchg
adc
test
pop
add
aas
out
and
les
lods
and
push
fisubs
push
push
mov
inc
gs
leave
or
xor
sub
push
lea
cmpsl
mov
xor
and
jnp
push
sub
push
js
imul
out
xor
xchg
pop
adc
mov
pop
pop
inc
sub
dec
mov
or
pop
mov
jno
mov
jle
add
mov
clc
add
jo
mov
outsl
jnp
xchg
clc
inc
repz
outsb
int
std
lahf
aad
scas
push
hlt
dec
out
push
mov
popf
jecxz
jle
xchg
push
jp
adc
popa
mov
dec
push
inc
xlat
ja
stc
ret
jecxz
sub
cmp
mov
lcall
jecxz
out
in
pop
and
adc
mov
mov
or
fwait
sti
push
mov
jbe
adc
fisubl
ds
dec
inc
xchg
jno
popa
xchg
stos
jecxz
cli
enter
lds
andb
push
bound
out
cmpsb
xchg
push
and
jne
push
shrb
cltd
mov
mov
lret
mov
add
pop
xor
pop
in
inc
xchg
repnz
adc
jnp
sbb
mov
xchg
shrl
mov
cmp
mov
lahf
add
rcrl
out
inc
xor
insl
mov
leave
mov
sbb
movsl
mov
fdivp
fdivrs
neg
pop
xor
add
mov
cmp
xchg
sbb
cs
xlat
adc
fwait
xor
jmp
jl,pt
and
test
push
mov
mov
in
fldl
ret
sub
aaa
sub
xchg
pop
sbb
hlt
ss
sti
pop
movsb
test
mov
es
cmp
mov
stos
lods
rol
int3
xchg
sub
xchg
out
push
hlt
je
jb
mov
icebp
or
jg
in
sbb
insb
jg
shl
xchg
xchg
fistpl
or
sub
sbb
lret
imul
adc
jbe
xor
dec
stc
adc
jp
sub
pop
outsl
inc
and
xor
lret
sti
mov
out
mov
cmp
out
push
and
fldt
jbe
push
call
sbb
int
repz
adc
or
aam
popf
fstpl
stos
fisubrl
jnp
lock
dec
repnz
mov
aam
add
xlat
mov
sbb
jne
mov
mov
push
adc
mov
and
cvtpi2ps
xchg
and
dec
add
push
cmc
pop
xchg
pop
cmp
inc
jl
xchg
pop
dec
cmp
out
inc
pop
and
decl
jbe
push
jbe
lret
sub
mov
mov
clc
xchg
mov
dec
cld
outsl
xor
shlb
rolb
movsl
das
sbb
lds
shll
pop
in
ljmp
mov
and
mov
mov
jae
inc
xor
cmp
popa
jecxz
dec
out
aad
push
sbb
mov
rcr
test
adc
mov
sbb
xor
and
ljmp
outsb
jnp
dec
inc
lds
xor
or
push
lret
repz
cmp
bnd
sbb
mov
outsl
pop
or
jns
mov
add
js
push
insb
sbb
xchg
add
imul
mov
xorl
jmp
out
jo
jae
sub
pop
stc
inc
out
mov
or
mov
jns
imulb
add
insb
mov
inc
mov
lods
fnclex
cs
fstps
pop
mov
pop
in
aas
mov
inc
int
jp
and
cwtl
dec
loope
sub
pusha
and
std
xchg
mov
ficomps
add
addl
sbb
cmp
rorb
sarb
and
fisttpl
popf
shr
stos
pop
push
popf
scas
loopne
mov
les
stos
and
shrb
fsubrl
mov
lods
inc
mov
sub
js
add
dec
xor
add
in
push
jae
add
cmpsb
cmp
jecxz
movsl
stc
or
mov
adc
inc
test
sub
shlb
dec
pop
bound
insl
inc
mov
jbe
sub
push
jl,pn
pop
daa
add
mov
or
lea
clc
or
mul
adcl
test
inc
out
mov
les
xlat
jmp
pop
mov
rolb
pusha
xorb
xchg
pop
sub
jne
mull
jnp
xchg
jo
es
mov
xor
xchg
add
dec
inc
fnsave
shll
mov
ror
mov
xlat
cmp
sub
fnstenv
mov
adc
ret
push
xor
xchg
pushl
repz
and
adc
nop
hlt
addr16
rorl
insl
jb
mov
rorb
or
or
sti
mov
sti
fwait
adc
jbe
and
outsb
fwait
xor
xor
inc
cltd
mov
dec
adc
mov
cs
stos
test
or
mov
incb
aam
mov
sbb
dec
pop
sbb
cmp
ja
xchg
lock
mov
fisubrl
ret
sbb
loope
movsb
aaa
jle
mov
out
test
or
test
popa
int
cmpsb
mov
addb
or
aaa
sar
lcall
in
insl
ret
insb
dec
xchg
and
adc
das
adc
ss
cmovno
add
adc
sahf
popa
cli
fsubl
faddl
rol
xor
aaa
stos
jge
mov
loopne
inc
push
adc
cmpl
pushf
xchg
std
pop
insl
fidivrl
or
insb
leave
pushf
xor
xor
into
lods
cmp
pop
sahf
sub
repz
mov
xor
and
pop
ja
rcrl
addr16
push
sub
mov
mov
std
jge
dec
fsubs
js
mov
fsubl
mov
push
cwtl
push
or
mov
fsubrs
out
dec
fxch
xchg
cmp
movsb
mov
mov
adc
jp
fsts
popa
out
mov
imul
sub
push
shlb
mov
sbb
sub
mov
push
dec
mov
add
gs
push
test
sbb
xor
leave
cmp
into
test
lods
test
movsb
or
jns
mov
loope
mov
pop
jmp
cmp
or
filds
ds
cmpsl
roll
test
mov
mov
lods
jl
loopne
rcrl
leave
and
inc
stos
pusha
adc
out
jno
out
mov
out
pop
outsl
cmc
cmp
xchg
add
je
je
lock
rorl
jl
outsl
cmp
insl
push
cmc
scas
jecxz
enter
adc
clc
cmpsl
pop
fwait
xor
pop
into
push
add
lcall
fs
stc
pop
loop
add
adc
push
mov
cs
or
sahf
push
mov
mov
xor
cmc
in
add
push
jl
notl
imul
lahf
arpl
jo
inc
in
scas
adc
out
sbb
mov
jg
aad
adc
test
inc
jae
sub
iret
stos
movsb
fnstcw
arpl
fistps
dec
in
test
std
clc
adcb
movsb
xor
fidivl
aam
das
sub
jge
test
or
pop
mov
call
jle
add
ret
mov
dec
fstps
xor
push
rorb
test
xor
gs
mov
into
jne
bound
test
mov
cmp
sbb
out
test
lcall
pop
cmp
or
add
popa
lock
stos
and
fs
jmp
pop
lods
jg
fldl2t
into
fidivs
mov
mov
aam
sbb
pop
subb
xchg
fistpll
test
jle
jo
mov
fsubl
adc
cmp
and
pop
cmpsl
ret
push
mov
js
jnp
and
jle
fisubl
mov
sub
cmp
scas
adc
movsb
xor
sub
cld
add
icebp
sbb
daa
push
add
push
lret
push
test
repnz
mov
ret
pop
jg
int
inc
mov
aas
mov
mov
mov
jnp
or
push
and
add
jo
lods
jecxz
idivl
fisubs
jp
sbb
std
xchg
out
clc
cmp
sub
data16
xor
xlat
cmp
lret
jl
adc
out
mov
into
sub
lcall
gs
lret
es
pop
push
adc
iret
dec
mov
enter
cltd
pop
test
stc
shrb
add
push
test
mov
sub
test
xor
bound
aam
js
data16
push
out
xchg
sub
mov
shl
inc
ret
cmp
add
repnz
sub
push
or
insb
fldl
jp
pop
push
cmc
repz
loope
push
fldcw
inc
cwtl
fisubrs
dec
cmp
enter
jno
push
push
mov
cmc
cmp
or
cmp
jns
fsubrl
mov
andl
sbb
mov
fimuls
fidivrl
xor
notb
adc
ret
xor
add
inc
daa
xlat
repz
daa
push
sub
ret
shlb
cmpsl
sub
es
clc
and
push
dec
ds
jno
popf
je
sbb
add
aaa
sbb
lret
rcr
in
call
add
push
repnz
inc
fs
xchg
or
jno
fs
dec
in
cmc
push
hlt
outsb
jmp
lahf
adc
out
outsb
mov
fpatan
adc
ret
rcrb
and
xor
mov
jns
jbe
inc
bound
push
cltd
testl
xor
lods
jb
cmpb
ret
mov
inc
in
popf
int3
daa
mov
les
fdivrs
xor
cmpsl
jbe
mov
cltd
push
lret
lret
fcompl
adc
mov
aaa
pop
pop
shll
sub
push
pop
adc
dec
inc
cmp
lods
dec
inc
inc
test
jecxz
push
mov
xchg
fdivrl
test
inc
adc
popa
aam
subl
mov
repnz
sub
imul
addr16
call
or
or
adc
popf
out
cmp
ss
testl
and
insb
jl
jecxz
jae
ds
bound
fsub
jle
mov
xor
xlat
mov
sbb
dec
mov
clc
pop
push
js
vrsqrtss
adc
cmp
mov
add
cmp
iret
pop
mov
jne
push
sub
adc
mov
fnstenv
in
jae
cmp
cmp
cli
mov
or
push
fimuls
insb
pop
imul
outsl
mov
cmp
scas
aas
push
jae
mov
jb
and
std
and
mov
adc
lcall
sub
ret
aad
hlt
adc
pop
lds
ret
out
dec
sbb
pop
fisttpll
xor
pusha
inc
adc
mov
jo
enter
scas
mov
mulb
je
cld
pop
repnz
mov
push
in
push
aam
or
xchg
lea
or
das
imul
add
and
push
adc
xchg
repz
repnz
push
out
mov
cld
lret
pusha
not
out
repz
jp
sahf
mov
add
repz
iret
icebp
mov
mov
adc
add
inc
pop
das
bound
dec
es
test
std
aam
jb
fsubs
cmp
ljmp
in
aam
pop
roll
lahf
mov
mov
sarl
hlt
icebp
mov
hlt
lds
xlat
jne
mov
in
lods
jne
or
out
xor
push
sbb
cmc
dec
aaa
push
jl
iret
dec
mov
sub
mov
popf
stos
test
fldenv
xor
adc
inc
stos
and
mov
push
repz
pop
lret
add
iret
xor
push
lods
inc
xor
xor
dec
popa
mov
push
or
shlb
dec
ret
pop
mov
push
xor
xchg
loope
lods
xor
int
lock
int3
xor
xor
sti
gs
inc
lret
roll
adcb
into
lret
or
sbb
dec
fisubrl
das
mov
out
jbe
hlt
mov
pop
adcl
insl
add
jo
inc
xchg
pusha
fimull
clc
fnsave
add
mov
test
loopne
xor
sub
addr16
fwait
popa
push
jb
fidivl
imul
lret
xlat
jnp
clc
xchg
cli
mov
inc
mov
outsb
xor
nop
pop
mov
je
or
mov
popf
push
jbe
cmp
sub
mov
or
xchg
mov
mov
mov
adc
daa
out
orl
in
add
mov
out
imul
aam
pop
pop
andb
insb
aaa
stos
outsl
push
out
mov
xor
loope
xlat
ret
outsl
cmp
lcall
fisubrs
pop
dec
mov
shll
lds
fdivl
mov
outsb
cmpsl
mov
push
lahf
mov
out
mov
dec
adc
xor
insb
sti
inc
adc
push
add
inc
mov
arpl
adc
andb
adc
or
pop
sbb
cmp
ds
out
out
lret
push
mov
ret
or
push
mov
fs
data16
add
insb
bound
std
inc
and
outsb
mov
cltd
xor
mov
gs
sti
imul
dec
xor
xchg
dec
push
dec
add
jge
and
iret
jbe
add
repnz
pop
mov
xchg
test
xchg
mov
pop
sbbb
sub
mov
cmc
ret
insl
push
adc
cmpsl
jnp
shrb
cmp
shlb
addr16
jl
and
shl
inc
int
fcomps
mov
stc
ret
pop
in
mov
rorl
outsb
adc
mov
ja
imull
loope
push
mov
jb
cmp
sbb
out
mov
jnp
mov
mov
movsl
jnp
dec
inc
es
std
imul
stos
outsl
loope
adc
push
pop
fstpt
test
pusha
mull
aad
pop
inc
add
adc
ds
ja
movsb
ret
and
push
stos
nop
jnp
and
add
shr
in
jo
dec
pop
inc
xchg
rcrl
lret
arpl
jno
outsb
cmpsl
sbb
nop
fst
sub
negl
xor
ret
pop
addb
loope
add
mov
roll
les
xchg
dec
cwtl
push
ret
cmc
dec
mov
mov
enter
addb
xlat
jae
xchg
dec
mov
in
std
aam
dec
push
push
mov
mov
movsl
add
mov
and
mov
xor
inc
out
out
in
push
hlt
pop
and
lea
stc
and
test
lea
dec
or
pop
inc
cs
mov
push
movsl
sub
pop
push
in
ss
fcompl
lea
iret
cmp
insl
mov
dec
aam
jge
or
test
test
xor
push
pop
jge
ja
insl
jmp
clc
cltd
sub
or
arpl
adc
aad
add
jp
mov
insb
xlat
sbb
lret
push
push
insb
adc
outsb
lds
dec
in
or
insb
mov
imul
jae
inc
push
or
xchg
cli
push
mov
ret
xlat
mov
cli
stc
lahf
mov
ret
and
sub
imul
rcrb
out
mov
cmp
sub
mov
je
ficompl
add
push
mov
andb
xlat
rorb
in
add
addr16
sub
mov
dec
jmp
xchg
inc
push
les
js
mov
jnp
fincstp
pop
lahf
and
push
mov
stos
and
std
into
imul
cwtl
inc
mov
out
lret
jecxz
js
cmp
xchg
dec
decb
mov
mov
dec
mov
movsl
jne
out
mov
leave
push
rol
and
jae
mov
xchg
in
xchg
add
push
fisttpll
int
movsl
mov
fstps
push
stc
mov
and
and
pop
cmc
testl
repnz
es
push
rep
aaa
mov
cs
mov
or
mov
xor
jmp
mov
popf
je
rolb
and
fdivrp
or
js
shrl
adc
pop
dec
aaa
jb
aas
inc
xchg
dec
ja
test
sahf
jno
dec
push
leave
and
popf
lock
push
mov
xchg
decb
inc
inc
adc
mulb
loope
adc
call
aaa
xchg
sub
inc
mov
je
adc
loop
add
inc
shrl
arpl
fidivrl
cld
stos
push
mov
lods
mov
fimull
loopne
cli
xchg
push
xlat
jecxz
and
cmpsb
push
out
xlat
icebp
aaa
mov
cmp
lret
mov
jns
sbb
pusha
ss
and
rcl
andb
mov
sarl
movsb
push
push
repz
daa
pop
or
std
dec
push
test
xchg
and
std
arpl
xor
sub
adc
scas
or
push
fsubrs
inc
fisttpl
jo
inc
sub
pop
in
xlat
adc
jmp
clc
sahf
icebp
adc
xchg
mov
loop
iret
fmull
dec
or
xchg
jns
aas
push
in
dec
shll
shll
out
add
aam
lods
scas
and
xchg
push
sti
std
mov
sub
fiadds
ret
pop
and
repz
or
push
in
sbb
cmp
out
test
sahf
sti
fsubs
jns
out
stos
mov
dec
out
repz
inc
dec
pop
jae
stos
fldcw
push
fmuls
xchg
js
out
imul
cmpsl
xchg
xchg
sbb
test
push
loope
jo
xchg
push
dec
cmp
insl
mov
mov
test
loop
adc
clc
clc
sbb
pop
ljmp
jecxz
xchg
pushf
scas
pop
xor
ucomiss
xor
cmpsl
sbb
add
bnd
shrl
dec
cs
repz
dec
test
in
mov
aas
adc
cwtl
data16
enter
jb
push
lea
jns
jge
dec
mov
jnp
dec
clc
dec
loop
iret
jne
mov
pop
aaa
or
push
sub
mov
inc
movsb
daa
lcall
adc
sub
or
ret
adc
dec
sti
xor
addb
lret
mov
push
lods
pop
lcall
pop
mov
outsb
push
rcrl
loopne
lock
sub
imul
rcrl
xchg
push
aad
cmova
mov
in
jo
xchg
inc
in
mov
cmp
sbb
add
sub
outsb
rcrb
and
call
add
popf
jne
cmp
xchg
loope
popf
daa
mov
xor
cld
mov
xor
clc
popa
insl
popa
jnp
or
repz
ss
jns
hlt
pop
add
inc
icebp
push
je
push
sahf
add
cltd
xchg
inc
fisubrs
bound
hlt
jb
sub
dec
and
imul
adc
add
and
jns
leave
pop
insl
imul
test
jl
and
sub
sub
jge
jb
xchg
insb
cmp
cmpsb
jo
fdivs
call
xor
adc
inc
mov
xor
mov
inc
or
das
xchg
push
sar
stos
dec
add
xchg
xor
xor
outsb
jl
psadbw
mov
stos
adc
insl
mov
in
mov
cmpsl
icebp
jo
sub
bound
dec
mov
lods
xor
cli
insl
add
dec
push
add
out
adc
cmp
cmp
imul
xchg
jmp
mov
loope
cmp
ss
stos
out
xchg
push
sbb
icebp
sarl
sbb
pop
mov
pop
rcr
push
mov
jg
dec
sub
xchg
inc
and
testb
mov
xchg
jmp
pop
rcr
jmp
testl
ja
rcll
insl
movsb
aad
pop
fildl
lods
stos
add
push
fsubr
addb
sub
jecxz
dec
icebp
lcall
sub
add
lea
mov
popa
push
in
xchg
lods
sub
out
lds
fildll
sub
inc
push
daa
sbbb
fnstcw
lods
sub
pop
mov
stos
aas
negb
sbb
sbb
jg
jb
ljmp
mov
or
cmp
rorl
xchg
jle,pt
fs
xchg
jmp
lahf
movsb
and
xchg
or
pop
and
xchg
ss
les
jb
into
adc
lds
orb
ljmp
lock
cmp
and
hlt
mov
inc
stos
mov
inc
push
pop
scas
mov
stc
lods
nop
insb
adc
je
mov
shlb
cwtl
dec
cmp
fwait
movsl
sub
sbb
xor
ljmp
or
add
xchg
jl
mov
cmp
pop
out
xchg
xchg
out
push
testl
cli
or
xor
cltd
cld
jmp
push
rcrb
push
sbb
stc
xchg
test
mov
in
inc
sbb
ja
push
xor
ss
jnp
jp
loop
fwait
sti
shl
sbb
pop
pop
lret
mov
mov
mov
push
fsubrs
sbb
aas
sub
dec
icebp
out
cmpsl
aas
cmp
mov
inc
pop
adcb
adc
dec
jnp
daa
mov
and
roll
cld
push
mov
je
jno
jmp
adc
gs
xchg
pop
in
xchg
addl
pop
jp
add
mov
mov
rclb
push
inc
fldenv
jmp
jnp
jg
std
pop
cld
aad
mov
xor
cld
push
xor
dec
or
andb
push
and
jl
jns
aam
jl
pop
lcall
inc
jo
mov
fldl2t
lds
out
dec
mov
mulb
and
jns
loop
and
rcll
iret
mov
fdivl
cld
add
mov
aad
push
push
outsb
cmp
adc
cs
xor
dec
jecxz
pop
and
inc
and
sub
popf
shrb
pop
shll
sahf
clc
fsubr
push
cmpsl
das
jle
cwtl
out
lret
cs
test
mov
stos
cmp
mov
pop
das
lret
into
inc
hlt
js
sub
push
subb
outsl
push
pop
cmpsb
push
xchg
jnp
jmp
je
les
jbe
stos
xchg
xor
mov
mov
add
lret
pop
lea
xchg
aaa
mov
mov
pop
ds
ds
idivb
jecxz
pushf
dec
call
repz
shl
mov
mov
cmp
xor
mov
in
pop
bound
icebp
dec
fldl2t
jg
sahf
repz
inc
mov
dec
insl
push
adc
mov
fs
pushf
hlt
mov
vdivss
pop
jecxz
cmpsb
add
jge
dec
movsb
cmp
xchg
out
pop
out
ret
aaa
jae
imul
dec
cmp
push
adc
cmp
cli
adc
popa
sub
arpl
testb
std
cltd
outsl
add
leave
xchg
in
test
push
loop
scas
sub
iret
mov
es
stos
in
enter
mov
iret
mov
int3
shr
push
lods
clc
cmp
popf
mov
dec
push
subl
sbb
sbb
mov
loope
pop
scas
fildll
shl
lds
leave
repnz
sti
arpl
xchg
fcoml
stos
leave
fisubrl
ret
add
mov
push
mov
lds
scas
mov
gs
shlb
orb
cli
mov
pop
dec
or
mov
cmp
jg
adc
push
mov
pop
jmp
pop
jns
in
lds
dec
fcomip
and
adc
les
and
dec
lret
std
sbbb
pop
jo
out
push
xchg
inc
fsubrs
jo
inc
sub
mov
pop
ljmp
adc
clc
sbb
ja
loope
inc
pusha
push
shrl
xor
or
ret
cs
andb
orb
xor
psrad
push
outsl
xor
pop
jo
cmpsb
inc
test
cltd
xor
mov
xorl
hlt
jge
adc
rcrb
jl
sahf
scas
in
rcll
and
iret
idiv
and
repz
mov
call
outsb
xor
push
incl
or
push
or
cli
inc
push
fbld
mov
lods
cld
or
pop
fsts
jno
xchg
aaa
ljmp
dec
push
jae
fucomip
je
and
mov
sub
movsb
push
or
sbbl
das
std
js
jmp
adc
in
je
leave
loop
and
push
fs
mov
mov
mov
and
cmp
mov
mov
push
or
das
cld
xchg
popa
add
sbb
sub
jl
je
sub
fs
add
stos
cwtl
ljmp
mov
mov
mov
pushf
xor
mov
imul
sub
out
pop
sbb
lods
push
push
pop
sbb
popf
iret
cmp
out
and
mov
mov
sbb
ja
out
mov
adc
rcrb
dec
rcrb
fs
push
notb
push
and
rclb
bound
rcrb
jle
std
pop
je
xchg
ja
jno
pop
inc
cld
testl
mov
outsl
lock
mov
adc
dec
cltd
xor
scas
xchg
or
pusha
jmp
ljmp
imul
loop
rolb
push
inc
pop
xchg
xchg
sub
jecxz,pt
sub
push
xchg
pandn
xchg
js
stos
shlb
jnp
addr16
xchg
out
out
adc
push
ljmp
pusha
shlb
int3
pusha
and
addr16
rol
cmp
enter
ja
inc
jle
xor
aam
jb
push
xchg
fs
test
or
daa
in
mov
xor
ret
and
pop
test
or
and
mov
ret
cmovp
movsb
xchg
cltd
shrl
mov
and
jl
fld
or
cmp
cmc
xorb
clc
and
sbb
pop
ret
jg
sahf
mov
pop
out
mov
pavgb
xchg
mov
dec
push
push
es
jg
jbe
mov
jae
jnp
mov
pop
lock
add
and
mov
sub
scas
mov
xchg
cmp
loop
cmp
das
nop
stos
pusha
and
cmp
push
out
imul
nop
pushf
mov
xchg
adc
dec
add
or
scas
mov
mov
aam
stos
inc
xor
enter
cmp
sbb
lock
out
pop
hlt
ja
subl
push
push
mov
nop
cmc
add
cmpsl
dec
fwait
push
popf
mov
cwtl
jnp
mov
sub
sub
jmp
sub
ja
dec
pop
fisttpl
fisubl
aam
mov
mov
mov
iret
popl
sub
icebp
inc
push
pop
cmpsb
sub
sub
sbb
dec
sbb
addr16
jl
push
unpckhps
add
in
idivb
test
leave
hlt
scas
jae
push
pushf
add
jno
xor
and
add
cmp
jg
scas
pop
pop
sbbl
imul
push
dec
and
push
cmpsb
inc
mov
add
inc
call
fisttps
sbb
jle
sbb
sbb
mov
arpl
add
add
fsubl
cli
lods
fwait
mov
add
std
sub
lahf
movsb
jnp
cwtl
mov
xchg
add
andl
pop
jb
xor
stos
jge
cmpsb
cmp
xchg
shrb
pop
adc
cmp
mov
inc
out
cli
jae
jl
loope
incb
aam
mov
aaa
insl
mov
push
hlt
mov
je
ret
jno
xchg
and
sbb
loope
push
push
fsubrs
je
jnp
loopne
dec
push
or
mov
aaa
pop
test
jae
fcompl
sub
xchg
pop
cmpsb
inc
stc
xchg
xchg
jmp
pop
pop
xor
xor
cld
cld
add
lcall
repz
mov
lods
ljmp
mov
mov
inc
shll
pushl
pusha
popf
ret
xor
sti
sub
sub
clc
pop
adc
jl
pop
test
loope
lahf
adc
imul
sti
fwait
divb
xor
ss
cli
cmp
mov
and
call
inc
or
std
jo
cmpsb
rcll
and
or
fcoml
xchg
mov
addr16
stc
stos
lret
cld
cmp
pop
sub
push
mov
imul
adc
jge
xor
jno
cmp
cwtl
repz
mov
pop
mov
testl
and
jns
sub
jecxz
aam
imul
sbb
call
nop
jl
aad
dec
mov
int
push
mov
inc
xlat
xor
popa
pop
adcl
push
xchg
xchg
mov
mov
or
pop
out
mov
pop
sbb
imul
push
dec
bound
adc
mov
xor
in
dec
pop
lea
add
xor
pop
imul
popf
mov
sbb
sarl
jge
xor
shrl
xor
cmp
daa
jl
and
fidivrl
movsb
add
add
leave
jo
out
mov
fs
je
int3
out
popf
or
add
inc
out
push
inc
adc
xchg
imul
popf
arpl
jp
xor
fnstenv
adc
daa
jbe
cwtl
outsl
cmp
mov
or
and
xchg
add
xchg
mov
mov
sub
in
div
stos
rcrl
and
cmp
cld
rolb
cli
mov
in
hlt
cmp
out
cmp
or
add
sti
mov
cli
xchg
xor
inc
pop
push
sbbb
stos
xchg
mov
test
xchg
xchg
sti
dec
mov
stc
nop
repnz
adc
scas
mov
stos
repz
ss
push
test
shll
sbb
mov
mov
push
inc
add
mov
push
lock
inc
shl
dec
incb
dec
adc
fiaddl
addl
lret
in
and
inc
dec
push
lods
mov
testb
cmp
testb
orl
cmp
iret
mov
add
push
loop
popa
or
dec
cs
popf
and
aaa
or
jno
test
repnz
sbb
xor
pop
or
jnp
std
jae
fstpl
inc
dec
push
xchg
push
mov
sub
inc
arpl
add
pop
repz
push
mov
cli
outsl
fidivrl
xor
xchg
mov
inc
daa
pusha
movsb
xchg
jnp
add
lods
out
jns
fiadds
test
in
out
negl
dec
arpl
jl
outsb
mov
xorl
ja
sub
and
hlt
cs
rolb
cmp
jno
fcmovb
adc
sub
arpl
adc
mov
aad
fimull
inc
aam
mov
rorb
sti
ja
js
add
lds
sub
sub
lods
xor
lahf
pushf
pop
popl
mov
cmp
sbb
add
sarl
inc
rorl
sbb
cli
aaa
mov
cmp
stos
orb
repnz
xor
icebp
fcompl
mov
cmp
sbb
jne
icebp
sub
push
loopne
adc
lods
fidivs
pop
hlt
mov
mov
xchg
or
fwait
cmp
sbb
xor
xchg
imul
fldt
xor
or
jge
pop
push
push
fwait
xchg
xchg
imul
dec
dec
xor
pop
jns
xchg
sub
sub
ret
and
sub
xor
aad
out
and
cmpsl
xchg
sbb
and
mov
pop
jnp
clc
fwait
adc
dec
xchg
gs
fadds
imul
mov
xchg
fldcw
xor
shl
dec
and
push
cmp
repnz
div
or
in
lahf
stos
or
lds
fsub
add
popf
push
fstps
xchg
xor
jle
repz
inc
das
data16
pushf
mov
divl
dec
inc
ret
adc
jmp
fnsave
scas
mov
pop
jge
outsb
push
loop
adc
jne
push
mov
mov
jae
ljmp
aam
pushl
mov
mov
cld
or
and
xchg
mov
and
and
lods
adc
outsl
push
cmp
mov
inc
mov
mov
bswap
int3
repz
xchg
mov
mov
adcb
mov
pop
jb
mov
nop
call
mov
and
outsb
xor
ss
test
xor
inc
sbb
sub
out
xchg
pusha
gs
sub
push
inc
pushf
rcrl
xor
xchg
cmp
out
inc
sub
pop
fxch
int
mov
sub
xchg
fcoms
sbb
pop
mov
sbb
rcrl
cmp
fs
jb
pop
in
out
fdivp
sbbl
pop
jo
jg
insb
mulb
push
pop
flds
loop,pn
int3
push
int3
xorb
sub
mov
out
inc
push
add
push
movsl
mov
push
cmpsb
cmp
adc
rcl
sbb
mov
cmp
aaa
adc
daa
adc
inc
sub
stos
or
push
decb
movsb
mov
cli
gs
jnp
lods
lea
iret
mov
cmp
pushf
and
xor
jae
aam
mov
int3
push
out
mov
cltd
out
xlat
scas
pushf
xchg
dec
cmp
bound
jecxz
sub
mov
jb
xchg
call
jns
mov
mov
lahf
mov
dec
pop
mov
insb
sarl
push
mov
cmpsb
call
mov
ljmp
mov
or
fmulp
bound
and
xchg
loopne
in
push
inc
inc
push
std
test
mov
fdivrs
idivb
lods
xor
sbb
jno
pop
mov
mov
dec
adc
and
rdpmc
push
stos
inc
lock
adc
int
or
inc
mov
inc
ret
in
int3
arpl
xchg
stos
call
inc
adc
aad
pop
in
dec
pop
mov
cmp
sbb
ds
dec
jp
into
mov
lods
mov
inc
lcall
loopne
daa
dec
roll
ficomps
mov
stos
xlat
cmc
loope
fcomip
inc
sbb
into
ja
xor
xlat
adc
daa
lcall
mov
jbe
cmp
loopne
int
ds
xchg
out
push
jmp
pop
fstps
mov
push
nop
ljmp
addr16
les
push
cmp
fiadds
add
push
jecxz
jmp
inc
sbb
es
int3
arpl
fidivl
or
jecxz
xor
adcl
mov
pop
or
icebp
into
and
jnp
sbb
cmp
cmc
push
add
clc
cli
mov
jg
pop
push
add
mov
bound
mov
mov
outsl
aam
fnsave
sbb
insl
mov
add
shlb
sbb
icebp
dec
test
je
outsb
xor
xchg
mov
jg
sub
xor
in
inc
out
test
inc
out
inc
or
jecxz
sbb
inc
hlt
push
and
xor
fidivrl
pusha
mov
sub
inc
push
movb
mov
cli
mov
stos
inc
sbb
mov
push
in
ret
pop
mov
push
pop
dec
mov
lds
mov
dec
leave
daa
push
push
cli
push
mov
cmp
imul
fxch
mov
push
adc
inc
adc
movsl
mov
mov
sub
and
dec
mov
jmp
cltd
fldl
xorl
into
cmpsl
sbb
sbb
test
lahf
mov
bound
loopne
mov
xor
cmc
stos
adc
add
mov
ret
gs
leave
pusha
fimull
and
mov
dec
pop
or
sbb
xor
xor
cmp
and
xchg
mov
add
pop
xor
sbb
enter
mov
sarb
cmp
jg
pop
hlt
jmp
push
fisttpll
jp
pop
ljmp
mov
lret
repz
loope
fwait
mulb
in
xchg
pop
sbb
add
xchg
jb
pusha
mov
sbb
mov
lahf
xor
or
ljmp
jle
dec
divl
sub
iret
xchg
scas
jae
mov
xlat
xchg
adc
mov
jmp
add
or
cmp
fldcw
xor
sbb
adc
dec
jge
lcall
test
lahf
fdivl
dec
cmp
mov
dec
add
inc
sbb
xor
lds
jle
push
dec
jecxz
mov
out
sbb
inc
xchg
cmp
aaa
lahf
push
lods
jle
ds
data16
int3
adc
dec
fldt
jecxz
ljmp
mov
mov
ljmp
fidivrl
sti
inc
pop
repz
mov
jnp
xchg
cmpsb
inc
adc
leave
pusha
xchg
mov
das
je
sub
xchg
stc
pop
jns
aad
dec
rolb
dec
fisubrs
popf
cmpsl
fidivrs
imul
into
gs
gs
in
ret
stos
sbb
andl
pop
hlt
inc
inc
dec
pop
dec
bound
jne
sbb
mov
hlt
or
push
sub
stos
mov
adc
jb
pop
or
lods
sbb
adc
or
cmp
aad
push
adc
mov
pop
cmp
sbb
lds
in
rorb
push
sub
stc
insb
jnp
movsl
in
or
xor
jno
inc
jmp
lret
mov
pop
cmpsl
cld
mov
in
add
pop
sbb
test
sbbb
inc
lods
mov
xor
cli
out
pop
das
and
popa
leave
inc
mov
stc
out
int3
and
push
add
arpl
mov
xor
sarb
popa
pushf
in
dec
adc
fnstenv
dec
mov
dec
lea
xor
push
pop
arpl
leave
sarb
inc
insb
jp
mov
jge
inc
cwtl
xchg
lea
fwait
cli
cmp
mov
mov
in
cmp
ss
pop
push
cltd
mov
cltd
pop
scas
in
mov
push
clc
adc
loope
into
and
pop
rorb
lahf
sub
iret
pop
cmp
mov
inc
int3
mov
cmp
push
sbbl
pop
xchg
xchg
sbbb
les
repnz
sub
lcall
subl
xor
cli
cmp
pop
mov
pop
sbb
bound
pop
divb
add
and
xor
cmp
int
dec
addl
push
sbb
icebp
or
push
cs
test
insb
into
sbb
insb
and
mov
test
data16
cmp
std
pop
mov
xchg
jle
into
cmpb
xrstors
jl
movsb
rcl
sub
inc
iret
xor
push
rcll
arpl
into
inc
and
aaa
pop
std
out
add
jne
mov
insb
popl
mov
dec
shl
in
jb
xor
adc
stc
nop
das
lcall
adc
es
xor
out
and
cs
pop
dec
cmp
test
and
jecxz
icebp
adc
ret
cmc
cld
xchg
daa
mov
inc
arpl
test
int
jo
fidivs
mov
in
cmovnp
inc
push
dec
xchg
arpl
daa
push
in
dec
fcoml
add
mov
cmp
cld
lcall
mov
mov
in
sub
outsl
lret
mov
fistl
jle
xlat
or
rcr
inc
inc
push
mov
push
out
push
push
aaa
dec
mov
xor
cmpsl
insb
add
iret
adc
in
sub
add
lock
stos
add
jnp
add
rcrl
pop
fcomps
nop
popf
add
movsl
sub
adc
pop
mov
fisttpll
mov
test
std
cmpsb
mov
xchg
sub
cld
push
sbb
mov
mov
popa
enter
mov
adc
into
mov
aad
shl
es
inc
xchg
mov
sti
data16
sub
adc
jae
push
fmuls
mov
ss
pop
ja
push
jmp
sti
fnsave
push
jno
add
or
mov
je
call
or
data16
stos
popf
or
push
mov
cmp
fwait
push
hlt
pop
std
clc
pop
inc
mov
and
loop
testl
cli
mov
adc
jne
mov
cmpsl
sbb
or
arpl
movsl
adc
jl
mov
add
dec
xchg
pop
mov
cmp
lret
cwtl
inc
xor
mov
stos
or
jbe
hlt
mov
fwait
mull
mov
fnstenv
addr16
xchg
xor
adc
shlb
adc
popa
and
pusha
fdivs
sbb
into
adc
clc
mov
dec
in
aad
cltd
and
das
imul
div
cmp
cmpsb
loopne
xor
sub
mov
mov
fsubs
xor
jp
mov
pop
enter
aas
or
inc
jns
jecxz
dec
imul
mov
lret
mov
sub
pop
add
pop
jbe
bswap
dec
xlat
pusha
ss
imul
mov
fcompl
pop
sub
adc
pop
inc
mov
push
sub
pop
stc
pop
aad
pop
mov
add
and
xor
mov
push
pop
push
insb
adc
and
xor
sub
call
sub
popf
ret
jnp
test
dec
iret
xor
pop
or
popf
loop
cld
pop
mov
push
lret
or
icebp
les
lods
stos
mov
add
jl
mov
pop
and
movsl
xor
inc
or
adc
std
xchg
cwtl
test
cs
jae
mov
ret
mov
dec
xchg
fdivs
negl
sarl
mov
push
pop
xorps
pop
dec
inc
std
mov
adc
cltd
fidivrs
sub
jmp
mov
xchg
jae
rcrb
mov
or
test
mov
mov
mov
fldenv
mov
and
mov
mov
cmp
dec
loopne
test
addr16
stos
in
jle
adc
fs
inc
movsl
mov
fwait
arpl
daa
bound
aad
fcmovnb
repnz
mov
jmp
xlat
cmp
mov
in
and
dec
dec
inc
lock
rcr
cmp
sbbl
pop
repnz
vcvtps2pd
xchg
adc
mov
push
inc
mov
int3
popf
sub
and
pop
mov
add
xor
ds
mov
push
addb
jmp
arpl
push
adc
sub
clc
and
add
in
sti
jg
fcomi
push
ds
mov
xor
movsb
jb
in
pop
sbb
dec
pop
pushf
xor
mov
xor
dec
mov
or
lret
sub
hlt
cli
fldl2t
sub
mov
mov
icebp
xchg
pop
and
cmp
dec
mov
mov
lods
fdivl
or
xchg
pop
sbb
rcr
mov
dec
cmp
fnstenv
out
mov
sbb
mov
sbb
mov
enter
test
jp
loopne
icebp
lcall
cmp
pop
repnz
decb
and
xchg
or
add
js
push
imul
add
fldt
mov
push
imul
in
jns
iret
or
fdivrs
shr
jne
adc
sbb
sbb
inc
std
lock
jl
lahf
jo
imul
mov
xchg
rclb
mov
jno
mov
inc
cmp
int3
pop
push
mov
sub
repnz
lods
fs
add
std
jl
lea
cmp
add
push
sbbb
rorb
sbb
out
mulb
add
in
fs
iret
test
xchg
cmp
jnp
outsl
shll
into
add
aas
lret
ljmp
out
cltd
pop
jge
cmpsl
cli
mov
fiaddl
pop
or
push
mov
subb
mov
push
popa
dec
ds
addr16
sub
xor
or
subb
cmp
mov
xlat
fsubrp
js
clc
sarb
pusha
int3
je
fs
daa
mov
xor
ret
fisubl
add
push
push
imul
pop
cmp
xor
sub
cmpsb
or
pop
rcrl
add
xor
mov
jl
jno
scas
sbb
add
iret
mov
mov
add
in
mov
pop
repnz
jns
lds
dec
repz
pop
fnstenv
std
test
scas
xchg
nop
mov
or
loopne
xchg
xchg
mov
mov
xor
push
sub
insl
sbbl
mul
dec
pop
mov
test
cmp
dec
cmp
pop
pop
inc
jns
jmp
or
scas
mov
jne
pop
jge
sbb
imul
lret
repnz
es
inc
and
popf
in
int
cmp
push
sub
dec
cmp
or
xor
jmp
add
mov
movsl
insl
aad
cmpsb
addb
dec
mov
dec
gs
xchg
mov
xchg
dec
dec
dec
in
not
ret
or
cmp
mov
mov
fwait
adc
push
or
mov
mov
pmulhuw
je
orb
mov
cwtl
sbb
mov
shll
test
inc
sub
xchg
test
gs
jae
dec
loopne
sub
push
jecxz
lret
aaa
or
stos
jne
sub
mov
pop
dec
leave
mov
insb
xor
jne
mov
std
test
or
pop
and
jg
push
sahf
add
test
jns
cmpsb
inc
fsub
repnz
mov
scas
push
jmp
push
dec
pop
inc
dec
imul
jb
les
stos
clc
test
sbb
xchg
inc
push
repnz
sarb
cs
repz
aam
mov
jmp
push
out
rcrb
and
dec
hlt
or
dec
pop
lea
xchg
or
je
dec
cmp
sbb
je
or
dec
adc
pop
push
int
aas
pop
mov
push
xor
mov
xchg
ret
and
xchg
loop
dec
push
in
iret
shrl
jbe
into
and
enter
cmpsl
mov
call
mov
sbb
sti
ret
outsl
and
aad
loop
loop
xor
scas
popl
mov
pop
testb
test
in
popa
mov
mov
xor
inc
loope
les
push
pop
xchg
inc
inc
nop
ret
fildl
or
inc
popa
add
ss
testl
es
sub
inc
inc
sbb
add
int
repz
mov
mov
pusha
xchg
fwait
xor
repnz
push
dec
add
gs
shrl
into
call
test
pop
testl
aam
mov
stos
aam
sub
push
pop
fstps
push
mov
mov
pop
sbb
jo
add
inc
fs
push
nop
dec
ds
adc
jmp
outsb
cmp
enter
mov
sbb
jle
fldt
sbb
jns
dec
aad
jmp
in
in
cmp
imul
pop
ds
cmp
push
movsl
or
pop
mov
push
daa
inc
ficomps
scas
jle
inc
in
out
iret
test
movsb
aad
lea
adc
aas
and
pop
push
repnz
daa
daa
scas
xor
xchg
adc
pop
bnd
mov
ret
jns
mov
or
dec
aas
jnp
ret
sbb
loop
shrl
aam
mov
jp
loop
mov
andl
jmp
mov
dec
inc
arpl
notb
test
scas
int
loopne
test
mov
dec
movsl
cmp
imul
adc
xchg
and
adc
and
jb
aas
jno
mov
fwait
mov
jp
sahf
xor
mov
mov
sbb
mov
imul
aad
push
xchg
pushf
xor
ret
ret
int
mov
dec
jne
cmp
fcoms
fmul
dec
scas
out
cmp
xorb
mov
push
add
mov
and
mov
sub
test
mov
dec
lret
mov
je
push
mov
push
jle
pushf
xorl
jle
lahf
addb
aas
add
mov
mov
mov
loopne
xchg
jb
shll
in
pop
lea
push
mov
aad
sub
imul
pop
stos
mov
sub
pop
mov
pop
imulb
nop
dec
pop
enter
test
xor
push
push
sbb
int3
add
aaa
xchg
push
call
jns
outsl
jnp
pushf
push
out
lds
inc
lods
xchg
in
movsb
addr16
mov
subb
test
cld
xchg
fidivs
testl
xlat
pushf
aad
imul
pusha
xchg
pop
adc
mov
sti
pop
sbb
lods
lret
pop
jo
adc
mov
leave
jnp
push
int3
gs
jae
out
inc
cwtl
add
ror
lahf
imul
ja
stc
aaa
repnz
pusha
aaa
add
push
pop
lret
decl
dec
and
cmp
test
fcoms
popf
mov
sub
outsl
pop
adc
xchg
mov
xor
imul
in
pusha
loope
dec
pushf
popf
jmp
push
inc
shrl
jl
data16
pushaw
notl
dec
sbb
jnp
sti
inc
stos
outsl
cmp
mov
adc
mov
xor
inc
cmpsl
sti
aaa
cmp
xchg
in
pop
pop
aaa
push
mov
insl
add
mov
mov
sbb
mov
xchg
mov
inc
popf
push
dec
xchg
call
dec
sub
and
dec
add
mov
jmp
sahf
loopne
mov
aad
lcall
jae
movsl
arpl
shlb
fcmovnbe
mov
pop
xchg
popa
ljmp
outsl
daa
mov
xchg
mov
mov
and
mov
mov
mov
mov
pop
sub
inc
aaa
loop
push
fisubrs
aaa
xchg
nop
psadbw
add
cs
loop
push
or
mov
sub
jo
pop
add
dec
std
cltd
xor
jb
lods
pop
insb
mov
call
enter
aaa
out
and
pop
in
call
adc
dec
testb
sub
pop
pop
pop
int
pop
cmp
lods
cmp
push
pop
jp
mov
iret
sbb
jle
push
lock
ret
cltd
les
cmp
xor
mov
push
jnp
adc
fisubs
xor
lods
push
lds
or
and
xchg
pop
and
push
xchg
lcall
inc
sub
push
mov
jo
cmp
shlb
inc
mov
jbe
sbb
and
imul
call
and
inc
and
popa
pop
das
bound
add
stos
add
sbb
push
stc
or
jmp
insl
sub
push
inc
jnp
and
js
lods
lods
add
es
dec
jbe
xchg
gs
cmc
dec
inc
mov
idivb
xor
outsb
popa
outsb
popf
fcomps
jp
cli
fsubr
fisttpl
sub
pop
lahf
mov
loope
sub
adc
leave
lods
fdivr
sbb
in
call
jb
lods
aaa
lds
iret
aad
mov
mov
ja
mov
cwtl
pop
addr16
stos
test
js
rcrl
inc
sti
stos
movsb
loope
in
xchg
out
add
in
pop
loop
xlat
and
and
rolb
imul
fwait
daa
aaa
pusha
ss
sbb
dec
inc
pop
cmp
mov
xor
add
adc
fxch
add
test
mov
stos
inc
cli
ret
jge
push
push
call
jecxz
xor
adc
mov
enter
add
pop
push
flds
push
sub
or
jnp
int
mov
es
mov
test
in
pop
jp
inc
cld
push
test
into
xor
ret
pushf
dec
leave
sti
sub
fnstsw
mov
xchg
jbe
or
mov
mov
fnstcw
sbb
lea
sub
out
popa
in
xchg
dec
scas
fidivrs
mov
inc
push
or
xor
shlb
push
cltd
inc
movsb
lods
jae
mov
sar
xchg
and
sti
dec
es
push
popf
mov
push
sahf
lock
insb
push
in
arpl
out
das
outsb
loope
xor
xor
jmp
ret
aaa
call
fldl
rcr
mov
mov
fwait
xor
int3
dec
pop
fld
mov
jmp
cmp
test
xchg
popa
jecxz
loope
lret
lock
loope
in
adcl
notb
movq
sub
adc
mov
test
sub
adc
mov
ss
movsl
cmpsl
test
cmp
mov
cmp
cld
or
orl
sbb
sahf
lods
dec
pop
mov
ficoms
mov
push
js
insb
mov
sbb
arpl
dec
cltd
test
cmp
ficoms
stc
jae
clc
sub
adc
dec
das
mov
or
cs
cmpsl
fisubs
or
sbb
lcall
lock
lods
into
xchg
jle
mov
pop
repz
cltd
inc
out
pop
or
mov
icebp
mov
or
sbb
cmp
enter
jne
lret
and
clc
mov
adc
lods
mov
aaa
dec
and
mov
addr16
lret
pop
imul
jmp
jbe
cmp
flds
and
imul
shl
mov
push
pop
fdivrl
dec
gs
sub
and
inc
rcr
aad
or
mov
pop
shl
xor
fwait
nop
iret
movsb
das
sti
pop
popa
lds
enter
push
ss
push
sub
es
fisubrs
or
popf
leave
fxch
and
push
pop
xor
or
shl
jp
cmc
fnsave
xor
out
push
xchg
andb
push
pop
popa
inc
fsts
sub
fcmovb
jmp
rcrl
clc
pop
push
and
loope
cli
inc
mov
push
aad
sub
loopne
pop
scas
pop
xchg
pop
shl
cmp
add
mov
fldcw
imul
mov
iret
pop
leave
jecxz
xor
popa
cmpsb
leave
push
fildl
pop
cmp
sub
xor
mov
pushf
xchg
jns
movsl
stos
mov
das
imul
fmul
inc
xor
push
xchg
jbe
out
dec
pop
ljmp
push
nop
mov
mov
mov
push
decl
and
xor
cmp
out
jecxz
lea
dec
xchg
inc
shrl
dec
cmp
mov
xor
mov
jmp
insl
mov
loope
add
out
mov
lods
xor
int3
in
dec
mov
mov
ss
int
pop
rclb
and
cmpsl
jns
xchg
and
mov
dec
push
out
fcmovnbe
testl
add
and
and
lock
outsb
movsb
xchg
arpl
push
dec
jp
sbb
pop
mov
rolb
imul
cmpsl
stc
rcrb
test
daa
fbstp
xor
ror
sbb
mov
aas
or
test
ja
adc
push
jnp
and
ret
add
es
inc
adc
inc
lret
add
push
push
jno
dec
mov
xchg
bound
fcompl
test
xchg
pop
add
dec
dec
sub
jns
push
lods
inc
out
imulb
fistpll
xor
mov
cld
mov
sbb
nop
pushf
rcll
lods
add
dec
popa
cmp
jbe
ja
aaa
jno
addb
adcb
add
fisttpll
lcall
sub
dec
rcrl
lods
mov
fsubs
sub
push
pop
mov
ret
mov
es
pop
pop
test
incl
shll
xchg
push
jle
cli
ja
mov
push
call
lahf
loop
js
andb
jmp
cld
and
in
mov
fldcw
out
push
shrl
outsb
movsl
test
mov
lock
popf
xchg
xchg
mulb
mov
xor
mov
dec
cmp
push
out
mov
aaa
call
push
mov
rorb
dec
dec
sti
test
mov
fcmovb
jle
adcl
fwait
je
mov
dec
bndstx
pop
fldl
push
jno
pop
test
inc
sub
outsb
add
dec
adcb
fwait
dec
out
mov
pop
cmp
add
repnz
les
mov
into
add
aad
mov
addr16
fisubl
sub
rcrb
bound
dec
and
popa
jp
fdivrs
das
aad
adc
sub
les
bound
jg
mov
dec
jl
mov
mov
test
sbb
push
xchg
scas
nop
shll
jmp
or
dec
mov
aad
in
adc
lods
inc
into
pop
cmp
pop
sbbb
popf
clc
stos
sbb
fists
cwtl
repz
mov
sub
inc
out
or
mov
or
cmpsl
dec
push
xor
or
xchg
and
into
test
addr16
jge
cltd
in
js
mov
stc
and
enter
in
inc
mov
repz
sahf
add
es
lahf
shrl
sbb
xor
sub
mov
mov
xchg
leave
insl
ret
out
aad
inc
fimull
jle
cltd
lock
fcoms
lock
pop
js
xchg
lods
ss
in
fstpt
cmp
ja
dec
inc
push
repnz
push
arpl
rol
ret
repnz
sbb
sub
push
es
scas
push
xchg
data16
int3
stos
inc
cmpsl
jp
xor
leave
mov
in
push
pusha
add
fcomi
stos
sarb
loop
out
dec
mov
out
and
or
sub
fucomp
fisubs
lods
clc
pop
stos
or
mov
mov
mov
cmp
mov
iret
jno
or
popa
push
sti
leave
sbb
and
out
fidivrs
sub
sbb
mov
jae
loop
lods
jecxz
push
pop
dec
push
or
inc
cmp
cmpsl
inc
sub
or
sbb
xchg
cmp
fisubs
sbb
jns
fstpl
pop
add
inc
fisubrl
addr16
cmp
mov
enter
mov
iret
data16
or
jae
rcll
xchg
repnz
mov
mov
xchg
es
sbb
jge
insb
stc
sbb
mov
mov
push
das
mov
rclb
out
jmp
icebp
loopne
je
xor
popa
sbb
xchg
sbb
sub
mov
inc
xor
add
sub
loope
gs
jb
pushf
mov
les
mov
lahf
lret
inc
mov
mov
jle
aaa
mov
rol
pop
mov
xor
std
scas
mov
in
push
fnsave
out
push
jmp
add
pop
in
cli
aad
stc
ret
push
das
mov
push
and
cli
stos
das
sub
popl
cltd
sbb
xchg
test
scas
addr16
xor
shll
cmp
fsubrl
sub
insl
shlb
scas
pop
out
adc
or
lds
pop
aad
jl
and
lcall
fisubrs
js
jbe
and
idivl
movsl
cltd
dec
movsl
inc
into
movsl
sbb
movsb
stos
sub
loop
adc
xor
mov
fadds
lds
loop
es
mov
dec
xor
insb
jns
and
imul
sbb
mov
add
in
test
mov
and
mov
cmp
dec
flds
mov
enter
jl
dec
fcmovne
inc
mov
cli
mov
clc
inc
cmpb
jae
sarb
pop
cmp
xchg
add
clc
and
movsl
jecxz
mov
dec
lahf
mul
aam
sbb
jl
sbb
es
in
dec
mov
add
lret
pop
iret
and
jae
mov
mov
shrb
outsb
jnp,pn
outsb
cmpsb
sbb
pop
lahf
pop
call
mov
cmp
adc
mov
pop
cwtl
jg
sub
and
addr16
pop
scas
mov
sub
int3
adcl
jo
mov
je
add
stos
jecxz
insl
mov
jns
mov
clc
xchg
push
mov
push
dec
cltd
cwtl
movsb
xchg
mov
aam
repnz
jnp
call
and
or
shr
lods
sub
sbb
lods
neg
sub
dec
ret
sub
lods
inc
outsb
jecxz
pop
adc
jg
jno
push
std
lods
idivl
and
js
popf
adc
enter
lods
cmp
mov
lcall
or
je
sti
cmpsl
xchg
add
jae
pusha
mov
orb
jp
sar
dec
ja
jns
adc
call
lea
and
loope
sub
jle
enter
sub
aaa
nop
test
leave
fwait
popa
xor
jo
gs
aam
fucomip
rol
mov
loope
push
divl
push
push
add
pop
xor
pop
pop
fsubl
daa
loopne
fwait
gs
adc
gs
inc
lahf
out
repz
or
push
and
andl
pop
jg
fs
inc
pop
je
aad
hlt
xchg
adc
mov
pop
outsl
data16
add
mov
inc
jp
xor
clc
and
or
xor
jne
xchg
cmp
xchg
jle
sahf
lods
and
out
xacquire
enter
push
dec
mov
sbb
mov
or
inc
testb
cwtl
add
test
sub
sbb
jne
clc
jle
movsb
call
mov
pop
icebp
dec
pusha
xor
push
mov
pusha
adc
arpl
and
scas
aam
sbbb
xor
and
mov
out
test
inc
pop
inc
popa
cwtl
jbe
repz
decl
inc
out
in
push
sbb
mov
stc
pop
enter
lret
mov
mov
xor
cmp
insl
push
addr16
outsl
aas
mov
cmp
pop
in
pop
pop
cld
pop
xor
int
cld
insb
fbld
push
cmp
pop
js
in
inc
loopne
cmp
addr16
jmp
jno
adc
aaa
xlat
jb
ret
lret
or
ljmp
loop
and
fs
aad
clc
sbb
cmpsl
cmp
js
fidivl
lahf
pop
and
cwtl
xor
dec
mov
or
adc
adc
dec
inc
fnstsw
loopne
mov
inc
adc
jae
jb
cwtl
xor
inc
mov
repz
repnz
mov
mov
mov
sub
enter
cmp
ljmp
mov
jb
lret
adc
pushf
push
ficompl
mov
xchg
mov
sub
add
xor
and
out
push
pop
insl
cmpsb
mov
sarb
inc
and
je
adc
repnz
jle
pop
jle
pop
cmp
test
mov
shlb
mov
dec
hlt
mov
imul
dec
nop
into
cmp
imul
ficoml
arpl
mov
in
aaa
and
imull
addr16
in
dec
lcall
pop
jnp
rcl
pushf
mov
mov
pop
adc
jbe
test
repnz
xlat
test
jl
sbb
loop
daa
in
mov
data16
je
pop
negb
addb
dec
cmp
fwait
xchg
mov
lahf
cmpsb
test
xlat
push
popf
or
xchg
jle
lea
inc
xchg
imul
inc
pop
cmc
js
push
mov
dec
add
jmp
push
out
or
jmp
data16
ret
cltd
repnz
xchg
sbb
movsb
rorl
mov
mov
orb
cmp
inc
aas
shlb
inc
fndisi(8087
addr16
test
fidivl
mov
inc
cltd
stos
das
mov
xor
inc
mov
dec
lahf
xchg
push
ljmp
ret
aam
orb
mov
int3
jo
shr
push
cs
mov
ret
xor
xchg
inc
pop
cwtl
scas
js
dec
pop
iret
pop
aaa
popf
xor
jmp
out
mov
cmpb
mov
fsubr
cmp
scas
jp
mov
out
adc
and
add
mov
push
daa
out
pop
sub
sqrtps
xor
outsw
pop
dec
and
add
push
mov
mov
pop
xor
cmp
push
mov
and
xchg
cld
pop
jbe
jne
jno
xchg
or
stos
cs
aas
adc
mov
cmp
adc
mov
cltd
push
bound
addr16
push
pop
pop
pop
repnz
into
push
jne
sarl
clc
and
popf
lcall
push
aad
sub
xchg
test
xlat
hlt
sbb
aad
into
addl
shrl
cmp
ss
xlat
arpl
ret
fbstp
inc
dec
cmpsb
jne
mov
aam
repz
xor
push
xchg
push
inc
pop
outsl
jl
sbb
sub
and
xchg
cwtl
gs
std
xor
jne
or
sbbl
inc
int
add
ret
jne
into
out
mov
pop
mov
fsubl
push
enter
sbb
insb
push
test
out
in
and
add
or
adc
xchg
arpl
xchg
jae
xlat
sub
dec
push
mov
movsl
xchg
adc
lea
ljmp
xchg
int3
inc
pusha
xchg
lds
pop
fildll
mov
lahf
popa
cmpsl
xlat
shll
lahf
jno
sti
mov
mov
add
add
cli
jno
mov
rcrb
or
ljmp
repnz
mov
add
push
sub
int
and
movsl
xchg
icebp
dec
lock
lea
push
insb
push
mov
dec
aad
jl
repnz
in
hlt
mov
jo
in
into
push
push
sti
lock
gs
and
int
cli
mov
push
push
sub
sub
mov
xchg
jae
xchg
dec
gs
sbb
es
add
and
pop
outsl
ret
sub
shlb
out
pop
int
push
inc
fs
mov
stc
pop
mov
add
js
or
hlt
das
div
inc
les
push
aas
push
jb
mov
pop
int
dec
out
in
pop
ret
xor
jmp
pop
sbb
xchg
cmp
adc
bound
dec
repz
add
inc
in
mov
js
jg
int3
and
pushf
lret
sarl
pop
scas
cwtl
lcall
mov
nop
scas
and
mov
xchg
add
icebp
mov
dec
pop
inc
shlb
jno
xor
popf
push
xchg
ljmp
or
xor
cmpsb
and
mov
add
mov
sahf
xor
popf
pop
aas
push
fmuls
pop
jmp
push
jne
fistl
push
mov
xlat
subb
into
andl
les
ljmp
aaa
scas
push
movsl
ds
inc
out
cs
popa
adc
jp
xor
aad
jb
lea
add
shll
mov
lock
fwait
repnz
mov
xchg
in
gs
repz
sub
fcmovnb
push
leave
dec
cmc
in
mov
mov
sbb
mov
loope
out
cmp
mov
insb
mov
mov
add
inc
arpl
mov
and
popa
inc
inc
mov
xor
sbb
sub
pop
int3
pop
std
add
in
push
or
aas
mov
test
mov
popf
xor
iret
xchg
jge
dec
ds
sub
pop
mov
ret
ds
cmc
jg
test
pop
jecxz
cmpsb
iret
test
lret
or
adcb
add
pusha
mov
sahf
stos
push
fucomp
jecxz
jbe
leave
arpl
push
shll
xchg
xor
mov
inc
andl
push
pop
lock
movsb
filds
fdiv
and
mull
les
or
fsubrl
lret
cli
testl
fistpll
and
cli
mov
xchg
push
sahf
push
lcall
rcr
outsb
mov
dec
ljmp
mov
shlb
ret
insb
out
stos
add
test
xor
imul
pushf
mov
pop
in
fxch
scas
clc
loopne
add
dec
jmp
mov
loopne
test
lock
je
lds
push
xor
xor
sbb
insl
or
adc
push
xor
out
dec
sub
mov
fwait
xchg
bound
add
aas
in
and
cmc
arpl
into
imul
stc
jl
adc
into
push
in
aad
imul
dec
xor
fsubs
jp
mov
filds
sarb
test
xor
jle
pop
sub
popa
mov
fisubrs
mov
dec
cltd
bound
mov
mov
sar
pop
test
fs
jge
push
andl
or
nop
mov
lcall
cmp
ret
mov
lock
stos
xchg
pop
add
imul
data16
xchg
sub
in
inc
adc
adc
lcall
or
jg
hlt
fstps
lahf
mov
pop
rcrl
cli
addr16
mov
push
lret
scas
xor
popf
call
pop
repnz
jo
adc
dec
sbb
inc
dec
imul
jl
test
xchg
xor
popf
in
lods
mov
and
dec
or
aaa
out
adc
xor
scas
ss
cltd
and
adc
xor
mov
pop
les
rorb
ss
xchg
sub
mov
fstpl
mov
jecxz
sarl
dec
jae
negb
and
test
cs
aaa
subb
sub
sbb
add
adc
sub
test
mov
ss
xchg
dec
in
cmp
in
adc
jae
push
lods
cwtl
xchg
mov
cmpl
cmp
jo
frstor
movsl
call
fisubrs
cld
in
pushf
lret
jle
xor
or
movsb
xor
out
out
sbb
push
and
ja
xor
jo
mov
fistps
in
jno
mov
sti
xchg
mov
jmp
jle
in
inc
dec
loop
pusha
popf
lods
dec
and
lods
push
add
jmp
fnstenv
jg
push
mov
jp
repz
movsl
mov
sbb
or
inc
sahf
and
loopne
jle,pn
hlt
inc
lods
and
out
orl
and
adc
stos
cmp
sub
repz
xchg
shlb
mov
fdiv
mov
fwait
cld
pop
mov
andl
fadds
lods
dec
scas
add
xchg
and
sub
mov
xorl
out
mov
xor
testl
push
jecxz
out
std
daa
push
inc
rolb
mov
add
bndstx
lds
pop
adc
mov
sub
xchg
jmp
outsb
jl
call
dec
mov
jo
mov
mov
sub
popf
and
imul
stos
push
sub
sub
fs
shll
subb
mov
rclb
mov
gs
jb
or
or
loopne
inc
cmp
jne
mov
cmpsl
mov
xchg
jae
insl
movsl
cwtl
pop
add
xchg
mov
jg
xor
cld
int3
mov
stos
push
lret
fisttpll
lret
in
js
xchg
jp
and
push
sbb
das
and
add
pop
cmp
ret
jp
dec
xchg
mov
sbb
mov
pop
pusha
xchg
jp
repz
xorb
cmpsb
out
mov
sbb
push
mov
dec
sbb
add
sbb
cli
imul
mov
jmp
inc
frstor
and
pushf
pop
xchg
cmpsl
rolb
inc
or
js
or
sbb
call
rcll
lods
pop
in
mov
xchg
sub
out
ficompl
or
inc
fnstcw
mov
aam
xchg
sarl
and
hlt
imul
stc
add
sbb
push
or
mov
mov
sub
int3
sarl
cmp
pop
sbb
jno
in
mov
movsb
adc
sbb
dec
jnp
inc
cld
push
icebp
test
movsl
lds
jb
mov
mov
mov
test
imul
cmp
call
sahf
imul
in
xor
xchg
mov
mov
ret
mov
sub
sbbl
std
pop
test
hlt
mov
add
mov
scas
ror
xlat
add
cmpsl
sbb
popf
vmovsldup
mov
imul
pusha
jae
add
or
push
add
or
push
ljmp
sbb
test
pusha
sub
call
loope
jae
wrmsr
push
fldenv
dec
mov
adc
mov
fsub
mov
adc
cmpsb
cmp
imul
dec
stc
jo
mov
and
push
test
or
inc
into
mov
cmp
inc
pop
fnsave
jo
dec
mov
clc
inc
inc
xchg
sbb
pop
cmpsb
lock
aaa
out
adc
and
subb
sahf
jnp
enter
and
and
sbb
test
xor
cli
sbb
xor
aad
stos
or
cmp
xor
cmp
stos
in
push
mov
xchg
dec
inc
push
xorl
leave
push
cmp
pusha
pop
pop
mov
int
sahf
fs
icebp
push
in
std
push
repz
push
mulb
xor
inc
or
pop
jbe
sarl
sub
hlt
in
test
daa
outsl
in
mov
or
aas
std
js
aad
adc
adcl
add
and
adc
sahf
xor
pop
fs
mov
cmpsl
pop
repnz
gs
adc
mov
imul
arpl
cmpsb
fisubs
inc
scas
pop
push
ds
js
sub
xchg
pop
inc
call
add
mov
push
sahf
out
pop
push
cwtl
xor
and
xchg
push
cli
mov
incl
cmpsb
roll
cmp
xor
in
ret
jecxz
gs
popa
in
dec
jge
jnp
push
repnz
leave
dec
fstl
mov
ljmp
jno
shll
dec
shlb
ds
aas
cmp
dec
mov
lret
les
xchg
nop
or
pop
sbbl
leave
sti
sbb
aam
imul
fwait
mov
and
pop
aam
dec
mov
in
adc
jne
push
lods
enter
push
sub
jmp
stos
sti
nop
sub
mov
test
sahf
in
pushl
ficoml
ds
jl
loop
fsts
test
sarl
es
int3
sub
mov
sbb
cld
xor
inc
mov
adc
popl
addr16
dec
or
xor
out
inc
ss
or
dec
fnsetpm(287
and
cs
inc
popa
gs
adcb
xor
insl
nop
mov
add
mov
push
dec
imul
hlt
mov
xor
lods
push
dec
cmp
sub
xchg
mov
push
out
pop
hlt
and
bound
mov
clc
popf
outsb
test
pop
mov
in
enter
enter
out
stc
aam
and
mov
jp
aad
pop
mov
cs
fnstcw
scas
jne
out
adc
xor
adc
repnz
pop
sbb
movsb
cmp
inc
out
or
hlt
call
mov
sub
and
mov
mov
mov
mov
sub
sub
daa
notb
jmp
jg
jle
clc
sbb
enter
mov
xor
jae
mov
repnz
adc
pop
mov
jae
scas
pop
insb
call
in
jg
xchg
sahf
pop
adc
lret
call
push
or
mov
push
and
adc
popf
jp
dec
inc
and
pop
bound
out
xchg
aaa
leave
or
inc
bound
sbb
pop
out
mov
pop
adc
mov
sti
loopne
push
outsl
or
xor
mov
pop
mov
or
pop
out
sahf
roll
adc
mov
in
lods
scas
inc
sbbl
fs
push
inc
push
jecxz
gs
negl
test
icebp
sbb
mov
shrb
sarl
test
push
lret
sbbb
ret
dec
scas
jo
jle
and
dec
bound
repz
or
rorb
lcall
shrl
pop
xor
in
jg
arpl
es
pushf
test
and
je
inc
jmp
add
arpl
jmp
pop
mov
mov
adc
lret
cmpsl
lret
sbb
sbb
loopne
aad
xlat
and
push
inc
jp
sahf
or
cs
cld
or
movsb
sbb
out
xchg
xor
mov
jne
or
pop
repz
gs
jns
mov
xchg
sub
add
xor
lcall
popf
pusha
mov
xchg
xlat
outsb
into
in
je
pop
cmpsb
pushf
insb
sub
jmp
or
lcall
mov
cmp
sbb
rorl
jge
add
push
jl
andl
std
add
clc
sub
push
jno
movsl
or
jecxz
out
mov
push
lds
mul
pop
mov
enter
jmp
jo
test
punpckldq
leave
xor
cmp
stc
pop
mov
stc
test
pop
lret
push
jmp
jne,pt
insl
cmp
fimull
mov
vpunpcklwd
mov
add
adc
mov
xlat
push
clc
adc
ss
aas
add
xlat
xlat
mov
dec
mov
add
mov
shrb
idivb
xor
pop
mov
int3
xor
sbb
mov
shl
add
push
das
mov
mov
jl
sbb
jle
push
adc
into
lods
fdivrs
ljmp
inc
or
stc
jo
out
sahf
nop
es
pop
mov
in
mov
in
ret
psrad
mov
ret
movsb
imul
daa
rcrb
jg
icebp
fistpll
mov
push
lea
aas
sbb
mov
and
out
jge
sbb
adc
test
jns
pop
out
jne
adc
inc
push
dec
jecxz
push
pop
orl
lock
or
rorl
jno
idiv
xchg
in
les
pop
or
mov
mov
mov
xchg
ds
and
inc
into
and
repnz
add
movsl
or
mov
les
and
xor
jmp
daa
sub
fwait
loope
cld
xchg
cmpsl
sub
nop
daa
xchg
pop
jle
popa
xor
inc
outsb
push
call
inc
rolb
and
stos
adc
int
lock
cmp
ficompl
cmp
mov
xor
jo
out
addr16
js
scas
test
icebp
xor
add
push
mov
push
dec
inc
lods
lahf
xlat
push
mov
jnp
scas
cmpb
or
sbb
jae
inc
mov
add
mov
xlat
icebp
nop
hlt
mov
cld
mov
inc
xchg
movsl
shlb
xor
sbb
call
cmp
ss
dec
mov
js
stc
add
lcall
mov
cmp
jae
xchg
sbb
xchg
add
shrl
ja
stos
ret
idivb
into
lea
or
orl
jae
fisubs
aas
stos
addr16
shrb
inc
jecxz
cmc
cltd
test
outsl
mov
and
mov
dec
jno
push
mov
mov
mov
pushl
pop
mov
call
ds
inc
xchg
push
fisttps
shlb
lcall
dec
test
sub
jg
sbb
aam
jl
mov
fbstp
out
out
jmp
sahf
and
fisubrl
int3
jo
mov
sbb
pop
mov
ret
out
add
stc
or
pop
lods
jae
frstor
lcall
xchg
lret
ss
sbb
or
outsb
cltd
jo
xchg
fwait
push
add
testl
xor
xchg
pop
lret
jo
std
cmp
fistl
xchg
mov
xor
cmp
test
sahf
hlt
addr16
aas
dec
adc
lret
in
pop
in
cmp
and
dec
shl
pop
push
jmp
mov
into
dec
pop
ljmp
aas
inc
das
adc
aaa
inc
push
lret
cli
jno
cli
push
in
popa
jl
mov
push
lret
dec
inc
push
jecxz
arpl
insl
push
out
aam
sub
aam
mov
and
sbb
mov
dec
lock
repz
out
xchg
movsl
dec
jl
loope
push
divb
and
loop
out
inc
ds
aas
arpl
outsl
pushf
repz
dec
fistpl
or
jmp
mov
xor
mov
scas
mov
jnp
xchg
js
roll
add
ds
cmp
in
pusha
fadds
orb
lahf
lods
pop
imul
stc
sahf
iret
pop
popf
adc
inc
repz
mov
cs
cmp
sbb
adc
dec
push
negb
jbe
xor
shrb
imul
lret
push
icebp
push
mov
mov
enter
fcomps
mov
pop
dec
mov
shlb
add
mov
and
and
cs
and
inc
dec
fsubl
cmp
xchg
push
lds
inc
pop
imul
or
inc
rcl
fistps
push
mov
sbb
cli
cmp
lock
rcrb
inc
in
mov
addr16
push
popf
xor
jmp
hlt
or
push
mov
or
cmp
insb
sub
sahf
sarl
inc
icebp
mov
inc
push
mov
sbb
lretw
imul
push
fsubs
fstpt
jne
cmpsb
push
pusha
cmp
push
outsl
mov
inc
and
mov
dec
mov
mov
xchg
imul
cmp
enter
cmpsb
dec
mov
mov
add
aad
jb
decb
dec
test
mov
xor
xchg
and
dec
or
or
dec
or
pop
lret
scas
icebp
jo
stc
adc
push
push
jns
pop
add
mov
sbb
cmpsl
inc
jno
cwtl
stos
and
mov
notl
ljmp
gs
ror
mov
lock
add
addr16
pop
fucomip
pop
addr16
in
test
xchg
je
stos
xor
sbb
clc
pushf
ret
sahf
ds
loopne
sbb
shrb
mov
aam
into
add
sbb
daa
outsl
lret
aad
bt
fnsave
push
nop
cltd
in
pop
out
in
hlt
lea
or
xchg
jnp
xchg
mov
out
inc
cmp
or
sbb
int
or
out
mov
cmpsb
std
xchg
rcrl
dec
push
int
and
jecxz
mov
add
xor
loope
mov
das
es
mov
jne
cld
shrb
or
aaa
pop
sahf
outsl
jecxz
inc
xor
sub
pop
ds
ret
sub
push
insl
mov
fstpl
or
mov
mov
push
outsl
and
jb
xlat
sbb
sbb
adc
in
loope
lea
adc
in
decb
outsl
ret
add
mov
neg
das
outsl
jl
cmpsb
jle
xchg
sbb
hlt
lds
cli
les
test
loope
cli
push
fldcw
lret
neg
lock
and
mov
imul
mov
mov
mov
fstl
nop
dec
mov
lcall
mov
xorl
push
add
arpl
imul
call
lret
pop
outsl
push
mov
push
cmp
shl
js
pop
mov
lea
mov
repnz
jge
xchg
outsl
ret
add
aaa
mov
lea
dec
mov
pop
xorl
aad
add
scas
decl
sub
xchg
das
xor
xchg
push
movsl
mov
mov
jp
rcll
mov
dec
js
jno
push
shlb
imul
mov
push
lods
inc
in
into
jle
jge
cmc
ja
fsubrp
test
dec
cli
xchg
mov
cmc
sbb
xor
inc
les
andb
pop
cs
mov
sub
popa
dec
movsb
rorb
pop
mov
movsb
ret
mov
lcall
mov
pop
lock
notl
push
sbb
lcall
das
inc
mov
loopne
imul
push
inc
das
lods
addr16
testl
aad
inc
xor
or
lahf
addl
sub
sub
mov
vpshlq
lock
je
pushf
lods
sbb
insb
stos
pop
neg
lea
cmp
inc
dec
xchg
pop
jae
jmp
fsubs
lock
jmp
push
add
mov
fildll
sbb
test
orb
pop
or
sbb
xchg
add
add
add
ljmp
xchg
inc
arpl
aaa
dec
or
cs
mov
mov
test
add
lret
jo
xchg
in
dec
dec
adcb
out
push
dec
fwait
pop
mov
inc
addr16
push
pop
mov
popf
mov
mov
lea
roll
iret
mov
icebp
outsl
lock
fwait
cmp
push
loop
pop
lahf
incb
out
cwtl
dec
pusha
test
out
sbb
outsb
into
push
outsb
rclb
cpuid
xchg
jg
dec
es
lahf
push
pop
into
inc
fldl
insl
mov
jmp
and
sub
aam
mov
pop
sub
pop
idivb
cmp
sbb
jae
mov
mov
xchg
or
mov
test
mov
ror
addr16
test
scas
out
mov
pop
mov
daa
adc
ss
outsb
insb
jle
xchg
aad
xchg
inc
cmp
jbe
loope
fmulp
adc
xchg
xor
add
cld
xchg
je
je
test
cmpsb
ds
popf
data16
or
xor
sub
sbbl
adc
xchg
xorl
daa
xor
and
push
in
mov
add
adc
repz
stos
inc
sub
nop
mov
leave
int3
test
push
outsl
sub
cmpsb
into
dec
cltd
out
test
insb
jne
popf
scas
xchg
add
mov
push
call
test
and
push
fs
cmpsl
aas
add
fimuls
jl
int3
jmp
jmp
addl
fwait
ds
arpl
aam
out
fstpt
push
pop
repnz
inc
data16
pop
dec
cmp
cli
in
sar
mov
cmpsb
mov
add
mov
fcompl
lock
sbb
jae
or
sbb
ret
les
incb
pop
cmp
cmp
mov
and
add
cltd
xchg
jae
add
xor
dec
cmp
push
dec
mov
sub
pushf
icebp
out
jle
lods
or
cmpxchg
cld
inc
pusha
add
imul
inc
push
out
or
gs
dec
adc
shr
int
mov
pop
imul
in
add
imul
lock
in
andb
shrl
dec
inc
loopne
or
in
adc
in
ljmp
movsl
in
cmpsb
mov
jle
inc
lods
mov
jae
push
lcall
push
fidivs
dec
mov
add
sub
xorl
rorb
insl
jns
jp
add
jmp
inc
or
icebp
lods
mov
into
icebp
xchg
cmc
ljmp
inc
and
pop
xchg
insb
repz
enter
lock
addr16
jae
and
mov
aas
lret
in
inc
cmpsb
xchg
mov
or
jo
and
int
xchg
bound
and
jge
or
rcrb
ret
push
in
lds
test
cmp
mov
sub
jp
inc
mov
lea
fcoms
or
ret
bound
stc
movsb
lods
mov
mov
jno
fisubl
sti
scas
pop
fmull
inc
xchg
and
mov
inc
jg
ljmp
push
int
xor
adc
stc
sbb
imul
ss
push
fcompl
mov
mov
mov
mov
push
cmc
jb
sub
mov
pop
bnd
xchg
push
push
out
stc
bound
adc
xor
and
mov
dec
fmuls
cmpsb
mov
and
insb
test
cwtl
out
push
ljmp
mov
or
inc
jo
xor
out
mov
int
pop
xchg
call
push
push
outsb
mov
sti
lds
cmp
fstpl
push
inc
es
int3
jg
int
push
shrl
rorb
scas
sti
push
icebp
cmpsl
iret
xchg
push
stc
dec
shl
dec
sbb
cmpsl
mov
mov
xchg
xchg
lods
jne
mov
jb
mov
pop
cmp
mov
ss
outsl
cld
push
in
sub
push
je
js
adc
jl
pusha
mov
jge
push
ss
push
push
push
pop
repz
shrl
add
push
mov
push
loope
xchg
dec
jecxz
es
xor
xchg
out
mov
xor
rclb
pushf
xor
cmc
fwait
mov
fcoms
cmp
dec
pop
inc
lret
or
xchg
mov
push
sbb
mov
repnz
nop
cld
and
or
into
int
inc
movsl
adc
add
push
mov
mov
jle
pushw
xor
nop
lahf
jl
in
aad
jbe
or
fxch
or
cmpsb
lock
sti
xchg
fcmovnb
cld
lcall
clc
sbb
negb
add
icebp
dec
add
scas
iret
gs
dec
arpl
push
in
test
and
sbb
mov
test
adc
fadds
mov
push
lahf
push
inc
pop
cmp
add
shrl
dec
mov
jnp
mov
xor
xchg
dec
scas
fbstp
rclb
xor
sub
add
divl
das
push
scas
pushf
andb
jae
xor
popf
xor
and
mov
jae
repnz
push
sub
popf
mov
or
and
dec
sub
mov
loope
les
inc
imulb
sbbl
repz
pop
aad
mov
jg
mov
jge
and
loop
push
sub
mov
jl
jecxz
push
in
scas
add
jg
xor
inc
push
xchg
mov
adc
pop
sub
push
push
dec
jns
sti
jecxz
ss
or
lock
cmp
sbb
neg
dec
xor
mov
icebp
fsts
js
aaa
into
repnz
add
imul
imul
jg
push
popf
sbb
sahf
and
pop
or
sub
sub
das
pusha
adc
and
xor
roll
jae
pop
sarl
cwtl
dec
repz
inc
shr
cltd
mov
cmc
add
lods
xchg
das
pop
outsb
stc
mov
sbb
test
mov
xchg
pop
mov
data16
push
mov
lods
mov
pop
xor
loope
mov
cmc
cmp
add
sbb
push
cmp
xchg
loope
ret
mov
cld
cmpsb
xor
adc
sub
sahf
orl
pop
mov
jns
and
push
inc
sbb
xor
ljmp
add
mov
shrl
push
ljmp
pusha
lret
stc
mov
cmp
jmp
jne
jbe
jns
lea
mov
lds
or
ret
lcall
cmpsb
divl
mov
aas
lcall
sub
push
sbb
mov
mov
lock
aam
xchg
js
or
pop
ret
push
pop
pop
fcomps
mov
mov
out
sbb
js
jb
in
scas
sub
push
loop
scas
xchg
mov
xor
sbb
loope
xor
sub
aam
in
mov
cmc
mov
sub
stos
nop
ljmp
lock
push
xchg
rcrl
pop
cs
xchg
clc
cmp
jge
jecxz
lods
push
out
and
add
jp
lods
sub
or
subb
dec
arpl
push
mov
cmp
imul
fdivl
ss
jg
fidivrs
push
inc
lods
insb
jl
popf
shr
inc
mov
dec
lods
cmpsb
lcall
pop
daa
jmp
loopne
jae
push
sub
fsubs
jns
test
xor
inc
fisttpll
jecxz
inc
jns
in
shl
push
loope
and
loop
push
inc
xchg
sub
dec
or
add
xchg
adc
and
push
jb
lahf
xchg
or
out
cmc
sub
mov
mov
gs
sbb
adcl
or
adc
nop
rcrb
bound
fwait
add
inc
jl
pushf
xor
mov
adc
adc
test
leave
test
cs
mov
jmp
std
cmp
adc
mov
scas
and
jbe
dec
mov
sbbb
and
jbe
pop
xor
repz
les
stos
call
sbb
sub
push
cmp
out
mov
call
mov
push
fcomp
hlt
push
cld
sbb
mov
gs
enter
ret
in
inc
or
push
pop
or
add
sub
pop
data16
in
jmp
in
aaa
loop
lods
fcoms
outsl
mov
mov
jle
cld
test
mov
inc
clc
mov
jle
sub
popf
fucomip
fs
push
in
jae
negl
scas
pop
out
or
and
jmp
std
adc
mov
xchg
cmp
imul
je
sbb
xchg
bound
pop
imulb
popf
rcrb
test
sti
testb
xor
movsl
shlb
inc
dec
pop
pop
arpl
xlat
xchg
mov
add
aad
and
push
ret
stc
stc
lret
mov
sbb
fisttps
popa
sub
adc
jne
mov
or
pop
add
std
cmp
pop
aaa
sbb
push
repnz
mov
xor
pop
outsb
loop
jae
push
mov
call
mov
push
add
cmp
inc
frstor
mov
mov
dec
jecxz
mov
insl
scas
notb
inc
stos
inc
push
aad
fnstenv
les
push
insl
cmp
hlt
test
push
xor
aad
lds
mov
add
dec
sub
and
xchg
fidivl
push
fwait
lcall
cmpb
push
xchg
repnz
pop
inc
push
inc
mov
cmp
sbb
popa
stos
sub
or
inc
xor
sub
ljmp
adc
mov
icebp
cmp
test
dec
fistpll
inc
push
je
je
pop
cwtl
popa
scas
fnstsw
mov
scas
sbb
or
xchg
push
scas
fdiv
pop
int3
shrb
repnz
loope
inc
dec
stos
dec
adc
imul
cwtl
ds
mov
jmp
in
xchg
out
xor
xchg
call
mov
dec
and
in
inc
add
mov
outsb
add
or
mov
hlt
adc
shrl
stos
push
dec
add
rol
xchg
imul
cmp
das
movb
hlt
mov
xor
outsl
ja
lahf
insb
in
jl
scas
mov
notb
les
dec
fimull
fildll
ret
dec
mov
outsb
iret
xor
aas
dec
dec
push
sub
mov
xor
add
add
mov
or
ljmp
push
add
lret
xor
xchg
bound
ja
mov
in
inc
lds
insl
arpl
push
aad
nop
mov
pop
out
cmp
sbb
ret
add
cmc
push
pop
jns
or
inc
cmp
repz
push
adc
xchg
mul
and
lahf
clc
add
dec
fisubrl
cmpsl
test
fstps
testl
imul
or
insb
xchg
inc
movsl
js
or
sbb
jge
rcrb
addr16
jns
iret
movsl
sbb
push
xchg
and
icebp
mov
cmp
ret
mov
shld
stos
lods
lcall
sbbb
mov
and
xor
leave
test
dec
scas
push
adcl
cmp
ror
lods
pop
hlt
sbb
repz
cwtl
xor
outsl
xlat
mov
push
in
push
mov
pusha
push
dec
dec
cmpsb
jmp
xlat
xchg
pop
out
adc
mov
jo
xchg
loope
inc
sbb
mov
mov
in
aam
repz
jmp
sub
shlb
inc
insb
mov
sub
cmc
push
in
dec
aad
push
or
and
dec
fiadds
mov
push
sub
incl
mov
insl
cmovns
adc
in
enter
push
lods
loope
ljmp
ljmp
out
mov
sub
jmp
push
out
add
bound
jbe
shrl
and
push
dec
jmp
xchg
push
les
adc
mov
cltd
js
inc
shll
ljmp
addl
inc
or
mov
movsb
aas
mov
push
lods
pop
xchg
push
xor
je
sti
push
pop
icebp
push
mov
xor
out
enter
sub
sbbb
or
and
shl
jbe
and
punpckhwd
mov
ficomps
mov
hlt
out
shrl
mov
or
push
or
push
inc
fidivs
mov
cmp
xor
mov
icebp
pop
cmp
test
pop
cmp
dec
iret
add
fstpl
ret
cmp
cld
outsl
in
cmpsb
dec
mov
aad
out
or
mov
in
sub
repz
mov
pop
js
sahf
mov
daa
lcall
push
in
fstpt
test
or
and
jb
enter
jae
add
sub
outsb
sub
fwait
jb
cli
sub
test
cmp
jno
repz
imul
mov
out
daa
push
lods
add
inc
sbb
and
enter
incb
imul
in
pushf
mov
add
jnp
in
sbb
adc
cmp
mov
lret
jge
imul
fs
arpl
add
fucomi
data16
test
push
scas
ret
mov
lcall
jmp
or
sahf
lock
in
cld
mov
repz
xor
jg
test
cmpsl
bound
ror
push
mov
mov
jb
xchg
in
leave
dec
js
test
mov
cmc
sub
ret
pop
out
loopne
enter
cmp
dec
inc
lods
fnsave
pop
mov
gs
push
outsl
xor
pop
push
std
mov
mov
outsb
loope
xor
lcall
in
mov
movsb
dec
mov
inc
ja
xor
test
add
push
mov
xchg
push
jnp
sbb
add
ljmp
in
mov
or
jmp
sahf
xor
inc
mov
xchg
push
les
lds
gs
clc
mov
dec
mov
cmp
fsubr
shlb
dec
test
pop
movsb
mov
shlb
mov
jg
sbb
cltd
ss
je
xor
mov
and
dec
add
out
lds
pop
cld
push
jmp
xor
sbbl
pop
shll
dec
pop
shlb
sahf
xor
or
adc
inc
dec
lret
es
xor
mov
pop
aam
stc
push
push
test
lods
sub
push
sbb
cwtl
xchg
ss
and
push
sbb
jns
xchg
cs
bound
adc
aas
lahf
popa
or
lret
fisttps
xchg
pop
jbe,pt
popa
mov
add
adc
add
dec
repz
adc
inc
inc
and
ds
sub
and
pop
or
sbb
pop
xor
push
push
xor
test
mov
loop
aas
shll
push
data16
jle
or
xor
insb
jns
aam
mov
movsb
negb
push
ret
lods
imul
mov
rol
rcrb
leave
dec
aas
roll
or
addr16
repnz
push
addl
mov
push
enter
movsb
cld
addr16
sbb
sub
xor
xlat
dec
pop
mov
shlb
sbb
mov
movsl
and
jnp
jge
pop
leave
popf
sub
mov
dec
mov
mov
mov
mov
xchg
cmp
add
jle
clc
jnp
adc
sti
clc
ss
data16
imull
push
inc
imul
dec
out
aam
rorl
int3
push
cltd
mov
fsubs
mov
movsb
pushf
or
test
or
add
subb
or
push
movsl
pop
sub
loop
clc
jns
sub
dec
cmp
test
stos
mov
sbb
push
data16
jns
jge
into
and
sahf
cwtl
arpl
fistl
into
jne
cmp
imul
pop
mov
dec
cltd
sbb
inc
mov
sahf
mov
in
and
sub
push
jp
adc
les
std
push
fbstp
fldt
lods
dec
enter
push
lret
loopne
mov
in
orb
loope
js
cld
movsl
and
adc
adcl
cltd
jge
ret
lods
sbb
push
mov
stos
aad
adc
stc
or
inc
cltd
sub
and
in
xor
sti
fwait
push
insl
jbe
cmp
xor
dec
je
and
add
stc
nop
int3
xor
mov
imul
lret
xor
lcall
fdivrp
xor
out
hlt
das
sarl
cmc
mov
nop
adc
enter
mov
pushf
test
or
jne
divl
pop
xchg
mov
mov
lds
mov
mov
jge
es
clc
push
fcmovnu
cmp
outsb
in
jo
push
pop
insb
mov
repz
mov
cvtdq2ps
or
adc
clc
or
dec
dec
andb
loope
cmp
mov
push
int
incl
push
inc
jl
lret
scas
push
out
mov
dec
jne
jp
lcall
xrelease
stos
add
call
into
or
push
inc
insl
add
pop
inc
int
mov
enter
das
jle,pt
ljmp
bound
into
hlt
cli
xchg
out
lcall
cmc
insb
xor
jo
push
mov
fnstenv
xchg
mov
xor
mov
add
jle
std
inc
push
faddl
push
shrl
out
in
xchg
or
jle
sub
rcll
loop
and
jnp
xchg
push
jge
mov
imul
data16
or
mov
ret
jg
data16
push
mov
xor
or
rcl
add
pop
int
adcb
xchg
aas
adc
and
jb
xchg
push
int3
mov
enter
lds
and
les
repnz
in
mov
addr16
imul
xchg
rolb
pop
pop
jne
adc
adc
and
xor
adc
out
push
std
xor
xor
arpl
ss
adcb
add
xchg
lret
popf
shl
fnstsw
scas
adc
cs
in
or
cmpsl
lods
push
call
pop
movsb
jno
mov
dec
fcomps
out
iret
jno
adc
mov
jmp
insb
pop
pushf
and
pop
repz
fbld
scas
xchg
sub
out
gs
xchg
shlb
rorb
ja
bound
xor
push
inc
jle
xchg
std
adc
or
cmp
mov
push
fwait
pop
and
jle
stc
ja
outsb
mov
pop
sbb
or
mov
jp
add
imul
xchg
or
pusha
in
mov
adcl
adc
mov
cwtl
aas
imul
les
mov
sub
aam
dec
or
jg
sub
aaa
mov
jne
mov
pop
cmp
mov
sbb
orb
sub
cmp
cmpsb
stos
aas
data16
xchg
cmp
inc
shlb
mov
movb
jne
and
pop
jae
dec
ja
inc
cs
push
pushf
push
mov
pop
jo
js
mov
xlat
leave
lock
mov
inc
pusha
mov
pop
loopne
jbe
outsb
add
mov
inc
jo
sbb
xor
xor
in
pop
stc
pop
scas
js
adc
sbb
aam
outsb
loope
jg
and
sbb
js
pop
mov
jb
repz
add
popa
xor
and
xor
dec
mov
fisubrl
out
mov
cmpsl
lock
adcb
in
add
es
testl
or
mov
mov
pop
lods
nop
adc
or
pop
cmpsl
jg
jns
enter
pushf
jns
jmp
xor
jno
inc
pusha
ficoms
cltd
add
lods
sbb
xor
in
je
negl
mov
adc
or
pop
cmp
pop
jecxz
xor
lea
push
dec
lahf
jo
sub
cmp
test
inc
jb
int
sbb
mov
out
mov
sbb
shlb
loop
xor
sub
les
xchg
andl
xchg
ja
add
sti
or
jb
int3
loope
push
cmp
push
repnz
cmc
aaa
jbe
rcll
lcall
jmp
lock
mov
outsb
pushf
lcall
mov
dec
add
nop
jmp
pushf
out
push
inc
cmp
ljmp
xor
mov
aad
lahf
xchg
addr16
daa
js
pop
dec
idivb
test
sbb
dec
push
inc
stos
lea
mov
lods
inc
cs
push
pop
das
dec
ss
dec
inc
leave
mov
arpl
fdivp
xor
stos
sbb
xor
adc
pop
mov
sbb
xor
cld
insl
das
test
mov
dec
ss
push
rclb
stc
sub
mov
call
movsb
inc
int
cmpsb
cmp
cs
xchg
stc
cmp
push
js
nop
pop
psraw
mov
mov
lcall
repz
sub
jne
ljmp
adc
aaa
fcmovne
cwtl
sub
pop
mov
andb
repz
stc
nop
and
and
rolb
pushf
inc
das
iret
negl
call
or
inc
cwtl
shlb
inc
xor
sub
aas
daa
ljmp
ja
push
nop
enter
sbb
adc
cld
fiadds
sbb
fbstp
fidivrl
pushw
std
pop
int
popf
stc
test
leave
jecxz
adc
xchg
ds
aam
in
imul
fnstenv
push
test
data16
push
aas
outsl
add
cwtl
pop
test
rcrl
mov
frstor
and
hlt
out
loop
mov
sbb
push
mov
pop
sbb
leave
pop
cmp
pop
leave
and
pop
icebp
iret
lret
or
fstps
lods
mov
andb
pop
dec
insl
xchg
sub
xlat
jb
adc
into
gs
add
cli
insl
arpl
sbb
push
movhps
cmpsb
ljmp
lods
xchg
xchg
xlat
cmpsl
data16
pop
leave
pop
repz
leave
pop
xchg
inc
cld
jp
sub
jecxz
imul
fucomip
inc
dec
and
lret
jmp
mov
sbb
and
leave
inc
mov
mov
push
or
or
outsl
shr
push
mov
xchg
pop
ds
out
xchg
orl
cmc
in
test
pop
adc
push
lahf
xor
in
test
addr16
sbb
mov
jo
aas
xchg
inc
shrl
inc
mov
clc
fmuls
sub
xlat
idiv
dec
out
test
scas
in
nop
add
decl
push
pusha
xor
mov
mov
sbb
lock
jmp
jmp
pop
xor
data16
shll
inc
lcall
inc
fdivl
sbb
inc
mov
aad
mov
mov
cmp
sbb
cmp
jl
push
fcomps
in
call
js
stc
inc
sahf
cmc
hlt
sbb
lahf
rorb
or
pop
inc
cld
stos
mov
ret
mov
popa
mov
mov
add
mov
sub
push
xchg
xchg
shll
pop
dec
dec
shrl
pop
lcall
js
scas
jo
or
cmpsl
push
bnd
stos
xchg
xchg
cwtl
mov
dec
sahf
movsb
xor
call
xchg
out
hlt
xor
xor
dec
mov
jle
loop
bound
out
test
xchg
ret
xor
cmp
hlt
and
jmp
and
adc
jle
mov
xor
cmp
shll
mov
js
pop
xchg
lods
xchg
in
xchg
mov
push
mov
faddl
movsb
dec
sarl
add
test
lea
mov
mov
shll
ror
sub
icebp
in
repz
inc
xchg
push
or
fisttpll
filds
push
cmpsl
cmpb
movsb
loope
cmp
jmp
sarl
jle
pop
jmp
sbb
popa
dec
inc
imulb
loope
flds
cmpsl
pusha
adc
xchg
jae
imulb
aam
cmp
subb
mov
out
mov
int3
outsl
out
push
out
push
cmpps
pop
insb
lods
cld
pop
mov
sub
lds
stc
loop
scas
mov
sub
repz
push
outsl
mov
sub
push
and
lret
add
fs
movsb
cmp
rol
imul
mov
hlt
push
movsl
inc
daa
or
jbe
ror
push
imul
popf
lods
mov
leave
sub
add
nop
stos
inc
lret
cmc
mov
push
jmp
in
mov
shl
popa
cmpsl
push
fdivl
cmc
push
sti
mov
xor
cld
cmpsl
and
movsb
xchg
inc
mov
mov
out
ss
cmp
sbb
jp
jle
sub
divl
adc
fwait
lock
mov
sbb
dec
sub
dec
scas
mov
push
sbb
or
xor
imul
std
divb
out
cmpsb
pop
test
mov
fstl
shr
jns
aam
dec
enter
cltd
lahf
mov
nop
shrl
sbb
outsl
leave
rorl
xchg
cld
movsl
cmpsb
cmp
inc
jne
rcrb
lods
cs
mov
xor
in
cmc
outsb
mov
sbb
enter
scas
pusha
pop
lcall
scas
in
les
mov
in
add
mov
aam
stos
aad
pushf
push
add
jl
test
lret
push
and
push
outsb
int
mov
jge
lcall
lahf
jp
dec
push
outsb
call
mov
xor
xchg
xlat
push
outsl
or
jb
dec
iret
ja
sbb
mov
arpl
sub
sbbb
clc
or
dec
dec
in
push
loop
adc
dec
nop
movsl
cmc
rol
adc
in
test
adc
scas
inc
ret
cmpl
push
xchg
mov
sbb
pop
jmp
popl
inc
rorl
divl
sti
dec
pop
pop
mov
lods
push
arpl
arpl
test
jno
mov
test
aad
or
fisttps
jle
pop
stos
pop
and
sbb
sbb
push
xchg
sbb
mov
popf
lret
jbe
gs
stos
xchg
scas
ja
push
mov
repnz
inc
or
inc
int
mov
mov
lods
insl
rcrl
lds
addb
clc
mov
sbb
pop
cmp
sbb
jecxz
jp
pop
imul
add
xor
pop
mov
xchg
cmp
jns
stc
pop
jmp
xchg
cwtl
adc
mov
ss
out
cmp
repnz
bound
jo
xor
xchg
jb
inc
pop
and
add
lods
fcomps
in
dec
pop
out
add
inc
push
cmpb
cmp
cltd
push
lahf
in
xor
or
xor
into
or
push
mov
push
jne
pop
popf
sarl
xchg
push
scas
and
cwtl
sub
add
jp
ss
mov
es
adc
add
push
add
mov
js
scas
mov
push
xorl
mov
pop
imulb
xchg
push
hlt
pusha
jno
fwait
std
fs
mov
mov
dec
sbb
lods
fnstenv
mov
stc
xchg
adc
pop
add
sub
scas
lea
mov
jg
jg
sub
dec
inc
pushf
idivb
jbe
inc
push
push
fwait
sti
sub
mov
adc
inc
hlt
pop
js
sbb
test
je
fisubs
adcl
paddd
jo
or
adc
ret
jo
xlat
lods
loopne
adc
mov
lahf
pop
jns
pop
adc
jle
pushf
scas
xorl
cltd
add
ret
sbb
sub
je
sbb
mov
ret
pop
sub
pcmpgtd
int3
and
or
das
outsl
ljmp
xlat
rolb
popf
add
fsubrl
loop
leave
in
cmp
imul
repz
sbb
dec
lahf
inc
mulb
sub
cmp
jb
lea
and
sub
out
aad
adc
and
sub
pop
sbb
pop
mov
pop
loop
cmpsl
pusha
negl
push
add
pop
cmp
popa
stc
shlb
push
insb
mov
sbb
xchg
in
push
inc
fyl2xp1
idivb
sub
jp
push
inc
in
outsl
and
mov
xor
into
push
sbb
bound
cmp
jge
push
popa
xor
js
arpl
add
xchg
xor
fidivs
jbe
insl
xchg
hlt
scas
xchg
testl
mov
mov
std
lods
cmp
adc
and
jge
xor
fistpl
shr
repz
cmpsl
and
dec
and
pop
clc
mov
jp
push
aas
fisubrs
cld
xchg
int3
inc
in
inc
mov
xor
xchg
xor
add
lods
xchg
icebp
enter
xor
outsl
mov
int
clc
fucomp
and
pushf
mov
sti
pushf
insl
jge
xchg
mov
mov
dec
mov
push
inc
repz
shll
sbb
fbld
inc
imul
imul
repnz
pop
int
xchg
das
jp
pop
icebp
xchg
dec
mov
mull
ja
std
in
jle
pop
push
aad
mov
push
out
sbb
xor
aaa
mov
fimull
movsb
jb
inc
fnstsw
mov
sub
push
sarl
add
and
cmpsb
dec
mov
push
sbb
mov
loop
aad
loopne
mov
pushf
popa
lods
nop
dec
jno
cmpsl
pop
inc
adc
test
shrl
repnz
jmp
filds
sub
movsl
mov
movsb
fs
jne
dec
cwtl
test
push
or
stc
je
pop
mov
xchg
dec
not
xor
outsl
push
arpl
rcrl
int
or
lcall
lods
and
cmp
pop
movsl
add
mov
jg
nop
push
push
ja
out
lcall
dec
sub
insl
pop
add
adc
orl
inc
dec
mov
daa
imul
out
mov
ljmp
cltd
sahf
inc
push
add
mov
sub
sti
cmpsb
sub
mov
sub
push
push
mov
lods
sub
or
subl
xchg
ret
pop
push
mov
out
jecxz
adc
subb
bndstx
fcmovnb
xor
jno,pt
bound
pop
repz
mov
add
lcall
sbb
hlt
adc
sysret
icebp
and
bound
addr16
mov
test
push
xchg
or
pop
mov
test
and
addb
push
jns
inc
sub
mov
shlb
push
cmpsb
mov
xchg
shl
xchg
out
xchg
nop
ret
jb
pusha
aam
fnstcw
cld
or
mov
lret
repnz
fdivrl
mov
mov
and
adc
pop
cmp
mov
inc
sbb
aam
add
adc
and
lahf
cltd
mov
inc
jmp
pop
icebp
aam
pop
mov
push
push
es
xchg
leave
dec
rclb
ror
mov
and
or
cmpsl
add
or
pop
jbe
testb
cwtl
sbb
roll
imul
and
cmp
mov
rcr
scas
push
mov
loopne
jmp
roll
stos
out
test
fdivl
or
or
jmp
push
movsl
std
push
mov
adc
inc
ret
filds
subl
inc
aad
popf
sub
inc
xor
nop
jp
movsb
stos
mov
mov
insb
and
rcrl
int3
pop
loop
scas
push
or
jb
js
das
jp
fidivl
orl
xchg
ss
dec
shrb
xor
sub
jp
xchg
inc
xor
mov
in
call
sbb
or
pop
leave
push
int3
arpl
push
pop
insb
jmp
leave
cmp
or
xlat
mov
cmp
lods
call
adc
sahf
sub
arpl
inc
cmpsl
sbb
pop
ficoms
lret
cmp
mov
mov
cmpsb
jle
shlb
dec
xchg
push
dec
cld
push
into
lods
inc
push
inc
dec
sbb
je
das
ret
ds
cld
dec
test
adc
inc
ss
movsl
ljmp
mov
add
stos
sub
das
jae
adc
adc
daa
imull
scas
jmp
mov
and
or
fwait
xchg
and
xor
or
and
test
adc
ja
mov
sbb
mov
mov
cmpsb
imul
pop
std
test
cmp
ret
in
cld
mov
inc
cmp
sbb
and
lods
xor
adcl
lock
xor
or
dec
mov
mov
out
pushf
pushf
mov
add
stc
fdivs
movsb
das
xsha256
cmpsb
aad
sahf
mov
loop
mov
adc
cwtl
inc
orb
das
pop
xrstor
bound
fisubrs
insl
stos
lret
nop
cmc
inc
ljmp
mov
or
dec
pop
imul
in
lods
pop
in
jns
xor
mov
inc
lods
dec
xor
jb
call
call
and
cld
xchg
adcl
outsl
lret
or
mov
lea
out
and
and
gs
lock
ljmp
nop
int3
cli
cltd
xorb
pop
dec
out
adc
pop
add
mov
int3
lea
sub
out
cmp
adc
inc
pop
push
inc
mov
fadds
int3
and
jnp
loope
scas
push
nop
and
leave
test
enter
bound
add
jno
jmp
ja
jmp
mov
in
mov
ss
inc
ss
add
insb
lret
lock
dec
daa
fwait
xchg
push
sbb
test
mov
test
jmp
cmp
adc
gs
mov
push
dec
mov
insl
or
jle
mov
pop
fcmovne
fsubrs
pushf
popa
cmpl
out
les
xchg
inc
dec
add
out
pop
loopne
dec
and
inc
dec
cmpsl
cmpps
or
mov
push
loopne
push
lock
inc
in
nop
push
fsubrl
sbb
jg
out
cmp
push
scas
jnp
push
neg
and
insb
jns
push
lret
xchg
jg
aas
enter
test
pop
pop
pop
inc
aam
xchg
je
adc
mov
mov
ret
aad
inc
aad
cmpsl
ds
dec
jg
mov
rol
pop
cwtl
das
and
and
ret
pushf
imul
push
xor
aaa
sbb
mov
xchg
mov
les
jnp
cmp
mov
lret
mov
sub
jo
shll
jne
push
push
dec
sub
negl
xor
rorl
add
fwait
pop
dec
popa
lods
mov
pop
jb
add
in
xor
out
test
movsb
pusha
ja
test
jne
enter
add
and
shll
inc
push
mov
dec
test
adc
sbb
or
mov
xchg
jl
pop
or
jge
sub
jnp
repz
dec
cmpsb
jns
aad
sbb
loope
loopne
rolb
clc
push
leave
push
fisubs
add
daa
lret
and
sbb
push
mov
nop
pop
mov
mov
mov
mov
fstpl
adc
inc
push
cmp
imul
je
sbb
jp
mov
push
pop
jmp
mov
and
mov
inc
mov
cmpsl
int
or
add
push
shll
pop
xchg
insl
loopne
push
add
jmp
mov
sub
adc
pop
loop
and
sub
xchg
push
pusha
aad
hlt
mov
mov
push
xchg
dec
pop
je
scas
mov
pusha
xor
jl
dec
sahf
insl
stos
jmp
mov
test
fildl
xor
enter
jno
lea
xchg
fyl2x
ret
mov
xor
nop
jecxz
sub
pop
js
mov
and
dec
testl
lret
dec
movsb
fmuls
jle
shl
pop
mov
mov
cs
ja
adc
leave
faddp
loope
call
mov
jmp
dec
out
jl
hlt
inc
addr16
stos
push
push
gs
adc
sarb
fcomi
sub
fisubrl
cld
mov
incl
mov
mov
push
and
lods
js
fs
inc
cmpl
xchg
sub
stos
scas
rcrl
scas
dec
cmp
test
jp
ret
or
dec
mov
inc
sbb
mov
lret
enter
in
mov
sub
jge
test
jbe
add
orb
rcrl
ja
movsb
rcrl
inc
jle
sbb
xchg
aas
adc
addr16
mov
shl
lods
pop
fs
dec
mov
pusha
mov
in
clc
xorb
fistps
push
rcr
jnp
or
sbb
mov
jne
insb
adc
sahf
imul
mov
mov
in
fs
lcall
cltd
or
xchg
sub
dec
cwtl
stos
jg
fsubr
into
jl
shr
jb
push
fistps
cld
or
inc
cmp
nop
sub
mov
inc
add
dec
insb
jle
mov
das
mov
push
or
mov
push
pop
mov
xor
iret
inc
jnp
div
in
pusha
push
push
add
cmpsb
cltd
test
and
pop
adc
jg
cld
insb
mov
pop
xor
adcb
into
lods
inc
notl
add
stos
jno
pop
clc
jb
insl
cmp
push
push
int
sub
cmpsl
in
into
sahf
js
cmpsl
scas
iret
or
ja
loope
cmp
loop
push
gs
leave
pop
sbb
scas
jno
inc
out
outsb
aas
add
stc
adcb
loopne
push
dec
cmpsb
cmp
cltd
and
sub
stos
mov
pop
je
add
and
movsl
inc
imul
js
push
or
pusha
mov
jbe
iret
push
push
popa
inc
loope
lds
push
and
ret
jecxz
daa
gs
xchg
mov
je
bound
sbb
dec
shl
bound
add
pop
outsl
push
xor
jecxz
repnz
or
dec
jmp
cmp
filds
clc
mov
mov
sub
mov
mov
inc
iret
jecxz
sar
outsl
mov
mov
push
inc
test
pop
pop
and
nop
mov
inc
rolb
mov
xor
imul
movsl
leave
imul
rclb
shrl
add
mov
xchg
data16
mov
imul
xchg
mov
sahf
xor
xor
xor
fwait
and
aad
in
mov
je
cmp
sub
shl
hlt
pusha
sub
push
nop
dec
test
mov
mov
mov
sbb
mov
pop
idivb
out
scas
sub
mov
xchg
add
pop
imul
xchg
out
aaa
mov
and
inc
fimull
sub
js
and
rorb
cmpsl
or
and
jg
shlb
aad
sub
dec
shrb
jmp
std
and
xchg
or
roll
sbb
les
mov
icebp
pop
sub
popa
adc
cmc
dec
fcomi
in
fsubrp
enter
loop
daa
mov
popf
insb
inc
lods
lods
xchg
cld
inc
mov
sub
je
mov
stos
aas
mov
mov
jge
mov
call
pop
enter
sahf
inc
popa
add
clc
xchg
inc
lods
pop
xchg
repz
lcall
push
scas
dec
imul
xlat
pop
dec
loop
push
push
sub
lret
xchg
ja
push
inc
adc
adc
jg
sub
movsl
push
inc
sti
inc
and
sbb
jle
xor
lahf
dec
pop
ror
pop
xor
sti
sbbl
cmp
pushf
mov
xlat
repz
dec
or
and
dec
mov
mov
cmc
mov
leave
enter
negl
outsb
hlt
xchg
sbb
mov
insl
cmp
stos
cmp
mov
inc
loop
cwtl
push
daa
or
pop
jb
nop
xor
push
push
in
fidivl
jb
or
push
pop
ret
pusha
stos
mov
mov
inc
int
mov
push
add
in
cs
sub
out
mov
sahf
loope
fsubr
jno
orb
push
adc
out
scas
add
xor
push
lock
bound
out
leave
and
clc
fdivp
xor
stos
push
mov
cltd
aas
mov
pop
xchg
push
ret
jmp
add
icebp
lret
pop
sbb
pushf
sahf
pop
mov
jbe
push
jnp
cmp
aaa
out
push
xchg
bound
mov
ss
sub
rclb
stos
cmp
fsubrp
dec
add
repz
xlat
jae
mov
adc
andl
test
mov
mov
inc
pop
xor
or
fcomi
insl
out
mov
ret
fs
jecxz
shlb
pop
mov
es
push
std
mov
sub
ljmp
fdivrl
rcr
cwtl
orl
jge
push
mov
adc
cs
xchg
mov
pushf
jmp
sbb
int3
subb
sbb
cmc
push
xchg
call
aam
mov
in
scas
inc
pop
and
cmp
jbe
or
dec
jge
pop
test
push
das
sbb
sub
mov
ret
mov
or
shl
pop
push
loop
mov
test
push
loop
loop
mov
jg
sub
xlat
and
jp
ja
pusha
popf
popa
icebp
xorb
or
cltd
rcrl
popf
adc
mov
sbb
enter
stc
and
pop
mov
popf
gs
into
fwait
push
or
ret
dec
xchg
jns
add
xchg
and
call
jns
pop
or
jmp
xchg
dec
in
or
dec
clc
out
js
ljmp
popa
ja
push
xor
inc
fmulp
dec
inc
out
imul
xchg
push
dec
in
xchg
sahf
inc
movsl
jmp
aad
and
and
pop
fcoml
jb
adcl
or
add
lcall
pop
mov
lret
aad
aaa
fldenv
stos
inc
cs
cmp
add
movsb
add
rcrl
je
mov
add
sub
and
dec
or
cmp
fwait
pop
jae
add
sub
mov
or
cmpsl
out
fsubrs
jne
imul
jns
sbb
lahf
cmp
or
cltd
test
jecxz
fbstp
add
imul
roll
cmp
sbb
clc
and
xor
call
jp
cld
mov
jmp
mov
hlt
std
inc
inc
pop
jno
xchg
in
fmull
out
inc
cmp
fsubs
fnsave
int3
xor
mov
popa
inc
push
dec
dec
outsb
cmp
scas
imul
int
sub
cmpsl
aaa
dec
ret
jae
and
push
or
outsb
pop
ds
arpl
pop
pusha
lret
cmp
icebp
aas
xor
ja
inc
mov
aam
loopne
add
fidivrl
negb
xor
add
jge
dec
lcall
cmp
add
pop
mov
into
das
dec
xchg
mov
fsubp
jmp
mov
aas
mov
sbb
and
fwait
inc
call
push
int3
outsb
stc
in
sar
test
sbb
pop
dec
inc
repz
jnp
hlt
les
sub
cmp
call
pushf
orb
cmp
mov
push
nop
push
pop
fsubr
sbb
repz
ljmp
jne
sub
sub
divl
mov
sub
and
fdivl
ret
xchg
int3
inc
mov
xchg
jp
js
call
adc
mov
and
and
mov
pop
call
cmp
sbb
fnstcw
movsb
push
cli
or
popf
cmp
sahf
sbb
xchg
fsubrl
mov
fucomip
pop
fs
push
aas
mov
sarl
sbb
int3
into
inc
pop
hlt
mov
sahf
out
push
insl
aaa
adc
fnsave
mov
inc
inc
cmc
jne
adc
shr
cltd
movsl
in
or
repnz
cwtl
dec
pop
sbb
dec
leave
mull
dec
mov
sub
outsl
pop
mov
lret
subb
inc
rclb
mov
repz
or
pop
shrb
rol
stos
jno
and
insb
push
lcall
fstpl
cwtl
mov
and
loopne
mov
mov
lds
shll
mov
sbb
ss
stos
and
push
leave
inc
jmp
jl
outsb
mov
aad
cmp
lods
pop
and
inc
lret
pop
je
insb
mov
push
inc
and
and
cmpsl
push
cmc
call
lds
xchg
std
bound
dec
test
outsb
sub
xchg
add
sbb
push
adc
and
sbb
sub
repz
in
xchg
sbb
mov
insb
shrl
lret
mov
mov
adc
lret
adc
decl
xchg
out
sbb
mov
rcl
repz
ret
dec
loop
mov
inc
imul
push
jmp
or
rclb
inc
add
pop
mov
iret
pop
popf
mov
in
adc
cmp
cmp
push
mov
sbb
xor
mov
scas
xchg
mov
inc
subl
and
cmp
orl
fisubl
cmpsb
adc
icebp
insl
sbb
in
mov
push
inc
loopne
popl
or
pop
loop
subl
adc
pop
cli
cs
push
cmp
xorl
notl
pop
and
das
hlt
imul
hlt
pop
add
in
adc
dec
pop
mov
mov
call
pushl
mov
loope
aad
push
inc
fidivrl
je
in
add
cltd
mov
shll
icebp
mov
pop
cmp
xchg
add
lea
daa
rcpps
or
and
sub
jbe
int3
pop
add
mov
sub
push
or
in
mov
mov
mov
mov
lret
xchg
mov
in
cmp
in
aaa
inc
xchg
jmp
dec
jl
cld
mov
fistl
rcrl
enter
mov
mov
dec
dec
loope
and
mov
out
or
jg
jns
fimuls
add
xor
cmc
jo
mov
je
dec
xor
rep
jno
dec
sbb
int3
addr16
in
aaa
mov
ds
push
rcrb
jb
mov
or
sub
cmpsb
sbb
fistl
orl
scas
out
pop
sub
dec
adc
mov
inc
outsb
sub
inc
or
xchg
stos
sbbb
clc
sahf
and
lret
sub
lock
icebp
adc
shl
jmp
xchg
das
sub
xor
out
sti
sub
sub
aam
sahf
xor
js
mov
jle
sbb
sti
jl
insb
aas
jge
cmpb
adc
test
push
dec
icebp
adc
insb
icebp
sbbb
sub
dec
mov
pushf
xor
lahf
inc
cmp
jns
arpl
pushf
cli
xchg
mov
mov
xor
pusha
imull
divb
pop
add
push
js
mov
sub
push
mov
pop
adc
or
std
popf
sub
std
push
fistpl
int
or
pusha
cli
jle
les
test
shr
repz
imul
push
dec
out
dec
dec
les
adc
por
dec
ret
pop
repz
mov
ljmpw
jmp
push
std
push
mov
leave
out
mov
pop
adc
popa
mov
iret
mov
int
aas
push
arpl
and
adc
test
int3
dec
push
mov
push
mov
adc
xlat
xchg
cmc
dec
jbe
ss
sub
cli
mov
adc
xchg
dec
pop
jle
mov
fidivrl
pop
pop
adc
xor
test
leave
jge
out
cs
lret
mov
inc
lret
jnp
inc
cld
jno
dec
rolb
jo
or
mov
adc
rorl
mov
jne
jg
shrl
mov
push
mov
sub
mov
fdivl
call
sbb
adc
xchg
jbe
daa
mov
shlb
xchg
pusha
ret
lcall
xchg
lods
mov
fists
aad
jae
call
cmp
sbb
and
mov
mov
out
test
repz
js
cmpsb
hlt
pop
nop
add
adc
aaa
or
das
and
xor
push
cmc
stos
xor
cmp
xor
stos
imul
mul
and
in
mov
cmp
sarl
jecxz
xchg
push
mov
inc
dec
imul
jmp
xchg
pop
dec
loope
mov
push
dec
ss
pop
push
repnz
out
cmp
add
out
rcrb
hlt
rep
loop
pop
adc
lea
mov
lret
sbb
dec
mov
pop
jmp
add
mov
decl
lret
jg
bound
push
push
sbb
fbstp
cli
rolb
lods
shll
out
xchg
rcl
push
icebp
repz
bound
push
sub
mov
cmp
cltd
cs
xor
sti
jb
push
repnz
mov
and
sub
sub
jg
sub
xchg
xchg
iret
xor
xor
jle
xor
mov
push
jno
mov
sbb
add
fildll
lret
shlb
cs
lahf
test
xchg
cmp
scas
aas
cli
jns
jno
jmp
iret
ret
mov
push
add
aam
ret
add
or
mov
es
imul
or
xor
divb
cli
notl
out
pop
jbe
add
outsb
stc
test
add
imul
out
cmp
mov
dec
push
mov
adc
das
push
mov
int3
jecxz
pop
dec
cmp
data16
lret
and
fs
jbe
pop
daa
mov
int
sarl
mov
std
in
mov
mov
lods
hlt
adc
clc
in
adc
dec
push
fists
mov
push
ja
sub
cli
mov
mov
cmpsl
sbb
jmp
add
ja
clc
mov
pop
mov
xorl
push
jmp
cmpb
mov
ret
cmp
sahf
pop
stos
xchg
lea
mov
in
mov
sbbl
adc
mov
xor
pop
out
sbbb
or
mov
mov
xor
ret
fcmovnb
mov
push
into
arpl
push
push
xor
mov
sbb
cltd
addr16
mov
in
data16
cwtl
jnp
xchg
and
push
inc
lods
xchg
and
fwait
lret
push
jmp
sbb
idivl
je
xchg
and
cs
movsl
pop
mov
dec
mov
sub
ss
xchg
scas
es
icebp
xchg
push
push
std
shr
xor
cmp
testb
jae
sub
mov
fistps
xor
xchg
mov
sub
cmp
mov
and
stos
xor
pop
sub
mov
out
mov
or
dec
pop
mov
mov
mov
lcall
jnp
xor
xor
outsb
ror
mov
callw
xor
jno
sbb
sub
mov
xchg
gs
mov
out
iret
loop
je
lahf
rorl
mov
mov
scas
jle
test
enter
cmp
in
add
je
lods
cmp
sbbl
loopne
ret
addl
fisttpl
hlt
or
movsb
jmp
sub
ficoml
dec
xchg
cwtl
dec
fs
cwtl
aas
cwtl
mov
mov
mov
dec
mov
jnp
pop
lods
push
mov
inc
loopne
or
imul
sub
clc
repz
orb
mov
inc
mov
cmpsl
imul
sbb
jne
dec
sti
arpl
rcl
xor
imul
push
leave
fucomip
add
test
push
mov
and
call
daa
outsl
mov
gs
sub
add
sbbb
sub
cwtl
aad
sbb
ret
mov
insb
mov
clc
mov
or
pop
push
xchg
adc
rorl
sbb
jl
and
adc
push
ljmp
jb
push
xor
ret
jae
xchg
mov
aad
ljmp
xchg
fcom
cltd
out
insl
pmaddwd
jne
mov
andl
cmp
shll
cs
and
push
leave
mov
push
negl
sub
idivl
cmpsw
push
and
push
push
xchg
mov
clc
nop
xchg
sub
jg
xor
xor
scas
dec
mov
xchg
fsts
mov
adc
sub
data16
xor
in
imull
pop
mov
les
in
in
sar
ret
inc
loope
pushf
jmp
jl
cwtl
mov
rol
mov
lods
ds
push
ds
add
pushf
movhps
testl
sti
xchg
xchg
lock
mov
xor
push
adc
cmp
mov
in
outsb
repnz
shrb
aas
je
ds
push
and
cwtl
orl
fldenv
and
in
mov
call
inc
jo
inc
das
imul
insl
pop
out
push
mov
pop
xor
stos
divb
or
mov
fimull
pop
cmpsl
mov
sub
xor
cmp
leave
dec
add
enter
test
cli
adc
lds
call
lret
out
add
leave
fisttpl
jne
sbbl
push
mov
loopne
inc
fistl
push
in
movsl
pop
dec
sub
fidivl
sbb
mov
dec
fucomip
js
out
and
stos
pop
pop
pop
adc
test
iret
sub
xor
mov
push
pop
out
je
add
xchg
dec
jne
ja
mov
jo
rol
pop
mov
ret
mov
in
jge
test
xchg
addr16
mov
mov
add
jcxz
js
add
in
mov
dec
lret
scas
jbe
xchg
or
cmp
pop
jno
mov
ds
cltd
dec
mov
je
add
js
push
test
xor
or
mov
stos
add
leave
mov
xor
xchg
mov
enter
aas
sbb
xlat
dec
mov
pop
xor
cmp
fcoms
pop
je
outsb
iret
repz
jmp
loope
jg
outsl
xor
ret
in
stos
xchg
cltd
iret
or
call
cmpsl
push
popa
jecxz
xchg
cmp
and
dec
scas
sbb
xor
testl
dec
scas
push
lret
mov
lock
jl
mov
js
out
stos
ret
push
sub
in
aas
inc
jae
jle
jne
mov
inc
iret
call
cmp
lods
stos
xchg
shlb
xchg
or
xor
mov
cmp
mov
iret
pop
stos
idivl
cmpsl
cmpl
out
cld
cmp
test
dec
jnp
out
mov
inc
addr16
leave
adc
add
jb
xchg
js
inc
inc
loopne
sub
repz
inc
lods
push
add
mov
loop
negl
rcl
xchg
cmp
adc
push
outsl
adc
ret
out
movsb
in
mov
cmpsb
loop
movsb
pop
out
or
fildl
insl
xor
inc
dec
in
mov
pop
lret
arpl
sbb
jp
lcall
jne
lods
pop
repz
pop
testl
xchg
sub
jb
pop
divb
jae
push
xor
lret
push
add
in
push
into
add
sub
loopne
or
mov
push
pusha
dec
mov
and
ret
sarl
cmc
dec
lock
and
and
cmp
sbb
dec
stos
mov
and
cltd
xchg
xchg
shlb
sbb
dec
and
mov
jnp
ljmp
xor
cltd
stos
jo
mov
jle
faddl
fadds
das
imul
popa
mov
sbb
add
xchg
loopne
mov
sbb
jne
push
mov
rorl
xchg
outsl
inc
outsl
pop
je
loopne
cmc
push
inc
daa
mov
stos
addr16
addr16
xchg
call
add
pop
addr16
stc
xor
mov
inc
push
push
push
js
adc
push
pop
mov
mov
mov
int
or
and
push
cs
jns
lods
dec
pop
test
sbb
cmp
cltd
out
das
push
out
sub
add
outsb
adc
mov
fucom
aam
lahf
stos
fdivrl
or
leave
fcos
adc
push
xor
iret
mulb
aam
out
aas
loop
ret
xchg
pusha
push
mov
inc
jp
mov
out
xor
dec
inc
add
mov
mov
push
inc
push
and
je
aad
jnp
adc
mov
ja
ja
stos
orb
xchg
stos
ljmp
bound
jns
mov
and
mov
or
adc
pop
ja,pn
pusha
js
lcall
mov
inc
push
aad
inc
sahf
ds
gs
push
sbb
or
cmc
push
aam
sub
pop
adc
inc
fimuls
fwait
mov
jmp
cmpb
ds
out
iret
pusha
aaa
addb
xchg
lcall
xchg
out
stc
cmp
fs
jp
cmp
inc
jecxz
rorl
jns
sub
pop
scas
add
into
jae
test
adc
negl
movd
push
in
stos
fdivl
cmpsl
ss
inc
push
lea
xchg
xor
xlat
gs
mov
pop
scas
clc
jno
xor
mov
cmpb
or
pushf
adc
push
fsubs
mov
je
jno
xchg
inc
fists
jl
mov
cmpsl
jle
jno
adc
xchg
add
xor
sbb
and
adc
jo
call
int
xchg
push
add
mov
xchg
jge
sub
jp
mov
clc
outsb
mov
fs
js
cltd
shlb
adc
daa
icebp
mov
pop
subl
jnp
dec
adc
jge
lret
sub
cld
movl
enter
xchg
or
xchg
mov
push
aad
cmpsb
mov
dec
mov
ljmp
mov
mov
mov
sub
xlat
push
enter
mov
push
inc
mov
and
sarl
add
mov
lret
rcl
jmp
xor
or
xlat
fisubs
mov
pop
xchg
rolb
mov
pop
sbb
or
xchg
inc
cmp
fstpl
push
pop
in
pop
lock
mov
pop
cmp
repz
mov
ljmp
inc
cltd
pop
cmpsb
repz
jne
inc
out
cwtl
stos
push
dec
sahf
mov
adc
jnp
inc
push
sub
arpl
cs
or
aaa
lds
inc
fsts
data16
lods
and
pop
push
or
mov
xorb
cwtl
in
repz
orb
cwtl
and
cmp
jmp
in
sahf
loop
shlb
lods
xor
xchg
popf
jne
repnz
push
pop
sub
pusha
cmp
jg
or
sub
fwait
push
jmp
mov
sbb
test
lret
jle
scas
insb
cmp
mov
mov
or
adc
pusha
je
pop
xor
dec
int
jge
pop
dec
fs
jb
pop
lret
mov
outsl
mov
xlat
xor
out
fcomps
popfw
mov
cmpsb
xor
adc
std
adc
out
cmpsl
sbb
xchg
jae
and
jmp
sbb
aas
pop
fldenv
mov
mov
aaa
push
mov
pop
xchg
add
lcall
xor
mov
repnz
mov
mov
mov
cmpsl
push
inc
shlb
popa
sarb
shr
imul
add
out
arpl
cmp
cmp
rorb
mov
push
cmpsl
pop
jno
inc
adc
xor
mov
arpl
movsb
arpl
and
test
popf
mov
xor
in
pop
repnz
aaa
rcll
mov
inc
cmp
popa
scas
bndstx
mov
cmpsl
push
stc
pop
xor
jae
outsl
sub
mov
jp
dec
inc
fbld
mov
imul
test
mov
stos
test
fsubrs
mov
dec
sbb
jb
rcrl
sti
cwtl
das
mul
negb
push
xchg
mov
adc
xchg
add
sbb
hlt
aam
das
lds
sub
mov
lock
pop
frstor
ss
mov
sbb
scas
mov
xor
ret
ret
pmullw
xor
out
test
stc
or
aaa
fdivr
nop
into
inc
pop
loopne
cld
sbbl
or
xor
fists
fiaddl
mov
mov
jne
jge
inc
outsl
sbb
imul
insl
add
pop
pop
sahf
adc
push
shrb
and
call
pop
stos
outsl
push
lcall
and
ss
sti
fisubrs
fstl
sbb
jg
inc
fidivs
movl
icebp
xor
sbb
or
imul
pop
addr16
lcall
ret
addr16
or
mov
ljmp
test
cmpsl
fdivr
jecxz
sub
loopne
leave
jle
sti
xor
fs
and
aam
inc
jae
pop
hlt
lret
xchg
sub
in
jl
cltd
insb
add
stos
iret
push
daa
or
add
cmpsl
insl
mov
mov
push
in
mov
pushl
call
shrl
mov
imul
or
pop
pop
dec
incb
jg
ja
push
push
inc
adc
mov
sbb
mov
cmp
sub
xchg
inc
mov
fmulp
ret
les
xor
daa
imul
mov
fsubrl
xlat
sahf
inc
out
cmp
push
and
jge
add
pop
sahf
sub
inc
outsb
adcb
das
push
fbld
sbb
mov
mov
jmp
or
pop
xchg
sub
ja
add
cmp
inc
and
fs
sbb
lea
mov
pop
inc
jnp
pop
adc
mov
sbb
cmp
sub
js
movsl
adcl
inc
pop
pop
and
mov
inc
xor
ja
stc
bound
mov
sub
das
test
lahf
sahf
mov
mov
stos
pop
push
sbb
ja
in
and
adc
sbb
mov
inc
in
jne
in
pushf
inc
add
aaa
leave
pop
pop
push
and
push
je
and
jne
pusha
orl
jge
out
ret
push
lods
mov
mov
push
pop
sbb
mov
mov
adc
inc
jnp
xor
scas
mov
lods
dec
loope
dec
mov
lods
mov
xchg
xlat
cmp
jnp
jg
sbb
add
aad
mov
pop
jecxz
and
jns
pop
outsb
sbbb
jno
push
nop
mov
xchg
mul
loope
addr16
add
shl
sahf
decb
rolb
cmc
mov
adc
adc
xor
jle
adc
mov
cmp
xchg
mov
cmp
inc
push
js
pop
out
imul
lahf
into
xlat
sub
int3
mov
movsb
loope
pop
sub
pop
mov
enter
sbb
aad
lahf
push
lods
shrb
mov
insb
sub
into
out
arpl
in
pop
mov
push
into
adcl
and
mov
out
adc
xchg
xor
call
mov
imul
ja
mov
mov
mov
jno
jmp
inc
jp
and
pop
add
push
sbb
ret
push
jmp
or
cmp
nop
jo
mov
imul
inc
xor
inc
test
push
movsl
loop
cwtl
xchg
inc
loope
cld
mov
mov
popf
mov
cmp
xor
sbb
jae
lahf
sub
sbb
mov
jmp
sub
mull
mov
push
adc
cmpsb
xchg
cmpsl
mov
xchg
mov
decl
mov
xlat
cmp
popf
loop
or
cmpsl
ds
test
dec
rcl
shrb
push
pop
hlt
out
sub
mov
inc
movsl
inc
pushf
shrb
outsl
adc
or
mov
jb
lods
imul
fsub
push
lds
pop
in
jno
lret
adc
arpl
mov
movsb
cmp
inc
or
aas
loop
mov
sub
jns
pop
shll
xchg
lret
rolb
push
inc
rolb
gs
insb
out
inc
mov
stos
nop
stos
jnp
repz
jne
cmp
adc
push
cmp
in
outsb
inc
sub
jae
imul
and
push
data16
pushf
cmp
jo
xlat
dec
mov
push
loop
in
mov
mov
scas
ret
lods
dec
ret
mov
out
xor
cs
sbb
pop
divb
jp
fcoml
pop
cmp
xchg
add
jecxz
rorl
sbbb
sbbb
popf
add
bound
lods
or
call
adc
xor
pop
js
push
jmp
push
cmpsb
push
out
mov
outsb
stc
add
enterw
mov
push
push
jo
pusha
cwtl
cmpxchg
repnz
pop
sahf
aaa
fiaddl
inc
dec
add
adc
into
jge
rcrb
bnd
jne
pop
sti
xchg
xor
sbb
les
aad
mov
jnp
mov
mul
mov
pop
sub
or
ss
push
or
fadds
inc
mov
outsl
in
leave
dec
xchg
outsb
add
aaa
and
xor
in
mov
jne
adc
xchg
daa
jne
das
lds
mov
bound
pushf
xlat
or
cmp
xchg
sbbb
cmc
and
dec
fisubl
shr
mov
clc
lods
xchg
es
rorb
add
cld
nop
push
xor
pop
loopne
cmp
sti
push
rclb
mov
xchg
add
mov
jl
cmpsb
out
inc
mov
ja
iret
push
inc
adc
jb
loopne
mov
lock
xchg
or
pop
mov
outsl
jg
sahf
jg
inc
sysret
lcall
and
pop
mov
sbb
test
ret
jb
and
cmp
xchg
cld
mov
in
cwtl
sbb
lret
cmp
filds
jl
xchg
or
or
daa
int
imul
jmp
xchg
les
cmp
push
in
icebp
dec
rcl
jle
mov
jbe
arpl
in
xchg
inc
std
or
sbb
jae
dec
insl
setp
outsb
pop
mov
jmp
sti
dec
fs
adcl
adc
lock
pop
test
xlat
outsb
negl
clc
aam
xor
or
aas
push
xor
leave
jo
adc
pop
push
pop
sahf
cmpb
shl
dec
push
insl
divb
insl
push
or
mov
add
out
das
sub
mov
and
aam
xchg
sbb
add
sahf
xchg
mov
mov
inc
rcrl
lods
and
sahf
clc
and
nop
clc
je
imul
and
jbe
fnstcw
mov
sbb
and
lock
out
bound
inc
pop
mov
sub
push
ss
and
stc
test
inc
mulb
or
out
xchg
stos
xorl
clc
xor
das
mov
call
inc
push
lret
aaa
rcrb
or
js
sub
test
fs
insb
sub
call
mov
dec
dec
mov
dec
inc
popf
pop
movsb
cmp
xchg
xor
xorl
repz
jo
aam
dec
push
outsl
adc
mov
ljmp
int
xchg
pop
pop
stos
cmp
xlat
jp
fsts
mov
push
sub
dec
loopne
leave
inc
sbb
int3
addr16
test
aad
addr16
leave
xor
incb
and
dec
int3
in
mov
data16
shl
sub
mov
jp
movsb
dec
mov
jae
lods
dec
mov
mov
pop
in
dec
and
insb
mov
mov
fimuls
push
xchg
mov
out
lret
outsb
repz
bound
mov
or
sub
fsubrl
dec
fsubr
jns
int
push
mov
mov
aas
int3
arpl
sbb
xorb
and
and
aas
or
xchg
vandps
mov
adc
xor
sub
std
xchg
xchg
vmovaps
lahf
sbb
inc
cmp
inc
jo
xchg
xor
mov
mov
jae
mov
dec
mov
xchg
fbstp
sbb
sahf
lds
imul
jge
js
scas
movsl
stc
out
pop
mov
fucomp
in
repz
adc
fdivs
daa
sahf
ss
std
bound
fiadds
dec
xchg
sbb
mov
shll
ds
cmp
cmpsl
dec
xor
sub
pop
xchg
pusha
lret
dec
sub
pop
mov
out
popa
push
pop
jg
dec
std
stc
je
shrl
or
adc
lret
fcmovne
push
add
das
int
sti
jg
jno
or
idivb
pop
push
aaa
push
test
enter
inc
pop
push
dec
popa
xchg
jle
stos
sub
fstl
pushf
cmpl
mov
and
cmp
inc
pop
cmpsb
sbb
fimull
incl
stos
in
cwtl
std
mov
testb
fnstenv
sub
push
popf
movsl
das
mov
aam
and
mov
lcall
shlb
das
inc
push
mov
sbb
inc
or
jmp
and
sbb
adc
mov
pushf
adc
loope
imul
or
cmp
xor
mov
mov
aam
mov
repnz
cmc
mov
push
inc
sahf
test
cwtl
pop
sub
pop
je
xchg
xchg
ret
sub
into
pusha
and
sbb
inc
lret
fiadds
lcall
das
addr16
inc
jp
cmpsl
ret
into
gs
int
add
inc
in
into
test
mov
mov
xor
insl
sub
pop
cmp
incb
add
lret
jecxz
or
stos
jo
fsubs
stc
pop
mov
and
sbb
aaa
or
xchg
sub
push
in
loope
fists
in
mov
test
push
sbb
add
in
mov
xor
aaa
xor
dec
bound
adc
cltd
aaa
sbb
outsb
addr16
vorps
cmc
inc
xor
adc
lods
cmc
xor
cmp
mov
sub
cli
jne
ret
repnz
lahf
movsb
bnd
pop
sbb
jp
mov
add
leave
nop
dec
mov
or
fsubrl
dec
fnstenv
or
jb
test
sub
pop
cmpb
ljmp
stos
xchg
sub
pushf
inc
cmp
test
mov
mov
pop
rolb
jo
xchg
pusha
and
xor
ds
push
sbb
lea
sub
add
loopne
sub
push
incl
sub
sub
lds
pusha
jnp
enter
push
inc
data16
test
adcb
dec
loope
mov
push
cmc
pop
xchg
xchg
mov
ljmp
cmc
push
cwtl
pop
aam
dec
mov
mov
jle
fstl
vpmulhuw
cs
cmp
sub
xchg
cs
add
xchg
gs
fnstsw
or
bswap
push
ds
inc
in
leave
pusha
pop
add
cmpps
jl
or
fdivs
aam
in
popf
push
fsubrl
shlb
cmp
daa
mov
sbb
push
call
lock
sbb
inc
movsb
rorb
dec
aad
pop
and
negb
scas
pusha
sub
shlb
mov
jbe
dec
inc
push
ds
addr16
xor
dec
pop
mov
push
stos
and
jb
les
pop
xor
repnz
into
push
enter
fs
sub
icebp
dec
add
rclb
icebp
ret
pop
lods
pop
or
xor
adc
dec
add
lea
dec
loope
lcall
cmc
cmp
add
nop
loope
dec
jne
loopne
jns
mov
divl
dec
cltd
sbb
dec
mov
addr16
push
mov
out
jns
idivb
cmp
ret
imul
aam
out
das
adc
fisubrs
mov
clc
dec
push
mov
fcmovb
push
repnz
hlt
mov
cli
jg
adc
push
jecxz
jecxz
arpl
addb
pop
mov
jno
xchg
std
in
mov
dec
mov
in
in
and
sub
ficoms
and
add
out
mov
jmp
orb
or
notb
and
push
in
bound
mov
dec
pop
hlt
jle
loop
and
jl
pusha
jl
dec
cltd
negb
pusha
fidivrs
dec
insw
scas
imul
repnz
xchg
xor
dec
mov
fldcw
mov
mov
int3
sbb
or
xor
xor
jmp
daa
sbb
cld
xor
sbb
cmpsl
push
insl
and
fisttps
or
ja
mov
jbe
xor
scas
inc
add
jmp
sahf
cmpsb
sbb
xchg
stos
or
ret
mul
jb
jo
gs
pop
jle
lods
insb
jecxz
sbb
mov
xor
or
cmpsl
mov
sbb
stos
mov
dec
cmp
pop
or
nop
and
imul
bt
sahf
xor
mov
in
xlat
dec
mov
in
add
jl
lods
in
movsl
inc
lret
test
lar
jnp
jp
and
jge
pop
imul
enter
inc
pushf
inc
mov
in
ds
lret
or
mulb
cltd
adc
fsubr
dec
push
je
ss
pop
push
es
fs
js
dec
fistpll
and
adc
out
dec
push
sub
mov
mov
xchg
sarl
fcoml
xor
mov
pushf
ds
loope
jge
repnz
fs
addl
cmp
int3
movsl
imul
cmp
sti
andl
fwait
test
and
pop
cli
push
stos
mov
imul
mov
cmp
call
bound
cltd
test
daa
test
cld
loopne
cwtl
sub
sahf
jnp
ljmp
pop
sbb
lret
push
cmp
out
adc
in
and
sbb
mov
dec
cli
insb
pop
clc
cltd
movsb
aas
dec
jecxz
xchg
stos
dec
call
repnz
xchg
ss
dec
adc
dec
dec
jecxz
mov
sahf
xchg
pop
movsb
dec
jno
call
test
jl
adc
cltd
mov
adc
jb
push
cmpsl
xor
and
sbb
lcall
lahf
cs
pop
cmp
cmp
aam
jge
and
scas
out
popa
sbb
push
jge
or
dec
jmp
jg
adc
stos
ljmp
mov
movsl
ret
inc
fidivrl
mov
mov
out
xorps
dec
mov
jns
ret
dec
sub
sbb
stos
shrl
loopne
push
pop
jmp
cwtl
xor
inc
in
xchg
push
jns
insb
test
or
xchg
jp
decl
idiv
add
lea
mov
mov
dec
cmp
inc
shlb
fdivs
push
fnstcw
std
lods
cmpsl
jno
xchg
je
popf
xchg
add
into
or
mov
loop
inc
pushf
fmuls
iret
clc
mov
jb
dec
sbb
add
jecxz
dec
pop
outsb
add
add
aam
cmc
mov
aas
lods
sti
xchg
pop
mov
rol
call
leave
test
add
lret
rorl
sub
mov
aam
in
inc
inc
sbb
cmp
cs
xchg
and
in
pop
cmpsl
push
dec
cmp
dec
inc
and
fistpl
fnstenv
cmp
int
mov
pop
cs
pop
add
mulb
fistps
testb
cmp
repnz
or
or
sahf
imul
js
or
push
inc
ljmp
repnz
cmp
in
pop
clc
rolb
icebp
sub
in
mov
cmpsb
pop
xor
inc
fisubrl
sti
adc
loop
or
lods
jb
mov
mull
or
add
in
daa
pop
leave
std
or
adcl
addr16
adc
mov
adc
push
cwtl
cmp
movsb
repnz
pop
testl
adc
arpl
int
jae
hlt
mov
pop
out
out
sub
jecxz
mov
push
xchg
sarb
aad
cmpsb
fdiv
or
mov
movsl
xchg
cmp
add
iret
pop
jns
and
mov
xchg
add
in
fstl
cmp
jg
mov
add
ss
pop
jno
fcoms
mov
mov
dec
dec
shrl
ljmp
mov
hlt
xor
adc
cwtl
ucomiss
dec
lcall
inc
sub
inc
in
cmp
pop
jbe
xchg
into
or
stos
out
loope
and
or
in
push
sub
jp
mov
add
dec
testl
mov
or
rcrl
push
inc
std
dec
fistpll
push
clc
mov
jo
xor
lds
int3
inc
cs
mov
jo
jp
je
daa
aaa
push
xor
jmp
bnd
movsl
jge
inc
add
out
adc
popa
stos
inc
cmp
dec
jb
sub
pop
jmp
popa
cmp
sbb
jg
arpl
mov
das
les
into
ljmp
mov
jae
sbb
out
imul
and
xchg
in
push
pop
pop
fcmovne
or
jo
sub
xchg
inc
sbb
dec
push
jae
jb
leave
cmpsb
pop
repnz
mov
stc
je
cltd
out
pmulhuw
les
mov
jge
mov
loop
mov
insl
sub
dec
add
mov
mov
inc
inc
mov
push
andnps
test
lahf
push
mov
std
inc
xor
cld
into
ja
cltd
std
lods
mov
mov
outsb
sub
sub
xor
jns
movsb
stos
out
push
push
adc
add
jg
xor
or
add
pop
jnp
push
jno
adcb
mov
js
call
sahf
popa
xchg
pop
push
jge
push
pop
gs
pushf
test
xchg
jp
inc
and
mov
ljmp
repnz
mov
cmp
cmp
outsl
cli
jo
dec
call
or
cmp
xlat
fs
mov
mov
inc
arpl
repz
es
inc
pop
data16
inc
jno
jbe
mov
fnstenv
jns
ss
add
loope
out
je
repz
stc
jns
inc
xchg
mov
cmp
fistl
xchg
in
sbb
cmpb
jl
orb
cmp
loope
fwait
add
scas
lea
mov
push
dec
lcall
nop
ss
push
lret
sbb
or
push
add
icebp
subl
fwait
pop
xchg
cmp
push
lcall
ja
fwait
test
test
dec
cmp
sbb
mov
scas
fdivp
ds
cld
int3
pop
cli
add
or
jle
das
cli
leave
xchg
dec
mov
push
mov
xor
mov
mov
scas
jo
out
bound
xchg
ja
test
nop
sbb
sub
insl
ja
imul
fsub
cmp
inc
jb
mov
stos
mov
pop
xor
xor
mov
loope
mov
push
push
clc
mov
inc
mov
cmpsb
frstor
cmp
into
pop
adc
clc
mov
sbb
out
loop
inc
xchg
cmpsb
xor
rorb
shrl
add
test
mov
push
push
outsl
scas
xor
dec
outsl
leave
repz
jae
mov
and
lahf
sub
add
hlt
fsubrs
pop
or
inc
mov
sub
xor
stos
push
inc
push
popf
js
mov
xor
mov
adc
or
icebp
and
rorl
popf
pop
jns
add
xchg
jbe
jb
pop
sti
test
adc
lahf
jb
mov
repnz
bound
xor
push
pop
mov
shrb
in
inc
scas
js
in
fistps
int3
repz
ja
in
mov
nop
enter
jp
dec
ret
lods
adc
xchg
and
and
jb
ljmp
bound
inc
or
or
loop
stc
pop
push
repnz
jnp
stos
leave
xor
stc
ljmp
mov
add
xchg
test
fidivs
clc
or
jg
push
pop
stos
pmulhuw
xorl
bound
jno
inc
enter
sbbl
fsubrs
rorl
jbe
lds
push
lods
imul
or
adc
xor
push
mov
fiaddl
or
jmp
fstpl
prefetch
shr
push
or
lea
and
cmpsb
xor
pop
in
test
xchg
push
es
aas
ret
push
mov
mov
cmp
xor
push
push
in
xor
gs
xchg
mov
sub
sub
jle
mov
dec
and
or
test
cmp
or
aas
imul
and
out
test
or
std
shrb
lods
popf
push
lods
add
cmpsl
mov
sbb
rcrl
rcll
dec
mov
sbb
push
mov
movsb
jns
or
push
push
sbb
cmp
or
xchg
ret
adc
pushf
addr16
cmp
dec
inc
push
inc
inc
sbb
test
decl
mov
jmp
push
mov
pop
sbbb
in
and
pop
jle
cmp
adc
sbb
pop
insb
dec
mov
les
test
ret
call
fmul
add
cmp
xor
cmp
das
daa
and
int
inc
pushf
scas
sub
aas
dec
cwtl
cmc
dec
add
sahf
sti
lods
inc
xchg
cmp
inc
push
mov
test
pop
xor
and
pop
xlat
scas
sarb
or
cmp
repnz
push
std
mov
mov
in
in
xor
xchg
and
fnstenv
outsb
stc
iret
mov
cli
xor
mov
inc
ljmp
xor
jae
daa
or
jne
stos
iret
dec
mov
mov
push
inc
mov
cs
test
hlt
jne
adc
mov
sub
insb
gs
mov
subl
xor
mov
mov
xor
jbe
jp
jbe
push
inc
imul
dec
xchg
sbb
iret
ret
rorl
lock
xchg
ds
int3
mov
adc
xchg
mov
mov
jecxz
mov
shl
cld
add
adc
add
dec
inc
fdivs
in
nop
daa
lret
inc
cmp
sub
push
pop
dec
pop
lahf
or
jbe
shl
jge
xchg
sbb
push
scas
test
int
mov
push
jb
test
lods
adcb
add
repnz
in
jecxz
sbb
iret
scas
dec
call
icebp
pop
ljmp
rolb
test
test
mov
leave
jecxz
pop
insl
jge
lock
mov
pop
xor
hlt
mov
sbb
mov
adc
in
arpl
imul
pop
xor
les
jecxz
push
in
lret
xor
adc
pop
hlt
mov
sub
imul
ja
mov
adc
ds
inc
add
das
adc
push
lock
pop
imul
divl
xchg
into
les
cmp
repnz
rolb
jmp
inc
addr16
sbb
push
adc
out
mov
lods
jo
call
xchg
dec
pop
sti
call
mov
mov
das
push
mov
ds
jo
outsb
xor
mov
mov
mov
test
jmp
dec
sbb
arpl
movsl
stos
and
pushf
orb
popa
outsb
mov
fcmovu
sbb
or
add
pushf
mov
dec
fists
adc
push
aam
popf
cmp
jmp
cld
cmp
sub
push
inc
xchg
cmp
leave
adc
imul
in
test
sbb
mov
cmpsl
push
or
jnp
cmpsl
mov
xor
lcall
push
test
sbb
stc
mov
lea
in
stos
sbb
jmp
jns
cltd
aad
mov
and
pop
cmp
lods
push
jbe
imul
insl
inc
mov
lahf
jb
stos
inc
into
test
int3
and
dec
gs
inc
sub
cwtl
sti
mov
outsb
adc
or
jge
verw
push
pop
out
cltd
insb
jg
adc
inc
filds
or
add
les
fs
cmp
add
push
insl
or
xor
push
imul
loope
faddl
cld
and
popf
das
inc
fstl
lahf
dec
sbb
scas
push
fwait
push
lods
jno
fldl
hlt
fstpl
popf
ret
leave
cmpsb
lock
outsb
inc
jp
lret
lahf
xchg
movsl
push
lods
dec
push
ljmp
add
jle
repnz
lret
xchg
or
dec
mov
xchg
inc
dec
xlat
mov
std
jl
aaa
stos
xor
pop
mov
adc
dec
cmp
jo
nop
cld
dec
push
negb
ret
xlat
loope
mov
sbb
clc
pop
je
ret
sahf
cmp
iret
cs
jae
fwait
mov
int
aaa
cld
sub
push
loopne
lcall
lods
mov
inc
gs
and
cltd
inc
or
adc
aaa
pop
xchg
out
push
pop
in
or
jne
push
jecxz
adc
fdivs
xorb
sarb
mov
out
stos
xor
and
push
cmpsb
out
mov
jge
jns
fisubs
int3
es
dec
mov
add
or
ja
dec
into
out
dec
cmp
dec
fcmovbe
testl
fisubs
les
lds
push
cld
adc
dec
dec
add
sub
jmp
fsubl
cmp
mov
test
pop
jae
ret
xchg
xchg
aas
in
js
adc
jge
cwtl
call
jns
mov
xchg
lcall
adc
mov
xor
or
jge
daa
cwtl
shr
cmp
addr16
xor
lods
mov
push
loop
xchg
test
cld
cmpsb
pop
outsl
xchg
sbb
mov
imul
shlb
mov
int3
jl
aas
xchg
repnz
adc
dec
and
std
add
xor
cmp
cmp
inc
cli
lods
cs
cmpl
fistps
call
push
mov
dec
sahf
add
xor
dec
jno
push
ljmp
popf
ss
pop
push
nop
mov
repnz
fcomip
mov
mov
mov
movsl
add
test
or
mov
sub
xor
push
xchg
aaa
lret
add
cmc
mov
in
ja
scas
inc
cltd
mull
ds
std
push
sar
dec
test
mov
sub
push
sub
add
test
fiaddl
lret
into
jne
imul
and
xchg
push
pop
xchg
rol
in
jmp
sub
scas
mov
pop
les
sahf
call
xor
mov
cs
jne
nop
pushf
fists
int
mov
jecxz
leave
mov
mov
cmp
pop
sub
or
out
mov
imul
sub
mov
imul
sti
push
sub
mov
dec
sub
imul
or
mov
fwait
cmpsl
mov
shl
sbb
sub
lods
loopne
lahf
stos
sub
icebp
push
out
push
jns
std
cltd
dec
dec
mov
stos
adc
sbb
dec
lcall
movl
lahf
jle
test
das
cmp
mov
arpl
mov
and
inc
pop
mov
test
pop
mov
in
lcall
and
int3
and
jb
inc
movsl
xlat
inc
popa
mov
mov
pop
pop
xchg
xor
push
and
nop
lods
and
fisttpl
mov
jns
loopne
jno
pusha
push
xlat
sub
divb
xor
pop
cmpsl
cmp
addr16
or
decl
loopne
scas
std
gs
push
push
push
ss
push
mov
adc
movsb
jb
iret
dec
adc
mov
or
cmp
movsl
fsubl
push
adc
xor
mov
dec
push
sub
and
js
xor
mov
stos
popa
clc
out
int3
push
cmp
shlb
sub
dec
push
inc
in
pop
or
mov
and
push
subl
adc
jb
aam
fxch
lret
mov
sbb
sbb
lret
mov
addr16
add
sub
sti
cltd
mov
pop
xor
inc
jmp
xchg
or
jbe
and
sub
adc
enter
mov
add
mov
dec
add
mov
xchg
sbb
shrb
call
hlt
pusha
jnp
mov
arpl
mov
outsl
inc
add
ljmp
jno
jne
js
sub
ficompl
fdivs
mov
dec
pop
sub
pop
jo
lds
xchg
roll
mov
outsl
sbb
cld
adc
notb
sub
jmp
fcomps
sub
mov
pop
mov
push
into
dec
sub
dec
mov
jg
repz
test
aad
shll
mov
mov
mov
pop
stc
pop
cmc
cli
or
mov
lcall
pop
popa
insl
data16
push
pop
xor
fwait
pop
test
bound
daa
push
stos
xor
inc
xchg
daa
in
fdivl
dec
lcall
dec
stos
ret
shrl
repz
sbb
xchg
jo
dec
push
stos
cltd
push
and
lret
ss
or
jnp
mov
out
adc
xchg
pop
es
push
test
or
aad
cmpb
xor
pop
mov
les
sub
bound
adc
ljmp
dec
stc
mov
lcall
pop
in
cmp
hlt
mov
mov
call
mov
scas
jg
lds
cli
dec
in
inc
jb
hlt
in
ret
mov
nop
jl
mov
rcrb
sub
xor
xchg
and
mov
jns
dec
pop
dec
sbb
pushf
mov
jecxz
push
sbb
mov
xchg
xor
dec
das
xlat
sbb
aam
xor
fs
cli
aas
or
lods
or
dec
ret
push
push
popf
or
and
cwtl
sahf
xchg
sub
mov
dec
add
cltd
aaa
nop
daa
push
cmp
sbb
push
js
pushf
test
cmp
xor
mov
cli
adc
jns
jmp
jbe
sti
fs
int
mov
add
adc
pop
nop
add
enter
rolb
lcall
cs
mov
jne
fdivrl
mov
adc
adc
lret
and
stos
in
leave
mov
lcall
push
cmp
and
ss
sub
inc
push
iret
mov
inc
lods
mov
fwait
popl
xor
push
cwtl
movsl
movl
adc
and
addr16
add
push
mov
dec
in
or
enter
push
ljmp
repz
test
cmp
sub
leave
or
andb
or
sbb
in
sbb
es
fiaddl
jnp
fidivl
mov
push
imul
cli
cli
inc
mov
cltd
mov
es
push
shrl
addr16
jle
pop
scas
mov
test
jne
loopne
ljmp
adc
push
and
ss
and
pop
inc
jnp
stc
jns
enter
dec
and
aaa
fucomp
cs
dec
ja
pop
fwait
pop
cmp
fdivs
xor
xlat
and
mov
sar
mov
push
fists
or
lret
push
cwtl
fs
push
adcb
iret
movl
shl
xor
fwait
fwait
mov
adcb
and
mov
imul
aam
add
jns
pusha
pop
and
imul
rcrl
sub
ss
push
dec
mov
or
fstps
es
rcrl
or
shrl
addr16
sarl
push
and
cmpsl
mov
pop
pop
cmp
mov
or
rcrl
push
out
push
ret
fists
std
imul
push
cmpsl
mov
test
push
es
imul
in
mov
leave
push
sub
insl
and
inc
imul
sub
out
add
shrl
test
inc
call
inc
popf
ja
ret
cmpsb
lcall
sbb
mov
imul
sub
pop
push
in
pop
xor
mov
adc
loopne
dec
dec
dec
cmp
lods
add
mov
mov
push
shrb
or
arpl
rcrl
mov
jno
imul
push
sbb
jg
xchg
imulw
int3
jle
jns
pop
repnz
daa
ss
push
jmp
inc
stc
hlt
nop
pop
push
push
lahf
xlat
hlt
rol
push
add
inc
xor
xlat
cmp
add
xchg
das
shlb
xchg
pop
push
mov
enter
test
jecxz
ficompl
loopne
xchg
adc
divb
sbb
push
pop
mov
ficompl
cld
inc
call
xor
inc
add
out
inc
dec
lcall
inc
pop
ss
cld
std
mov
lret
pop
std
rorb
out
jnp
jmp
and
cmp
aad
xor
mov
xchg
xor
fsubrp
mov
push
inc
mov
or
xchg
inc
or
ljmp
imul
jmp
push
hlt
insl
shrb
fdivrs
push
jbe
and
jp
add
jecxz
outsb
lods
mov
loopne
xchg
pop
popf
add
clc
cmp
sub
and
outsb
or
or
push
insl
fsts
loope
mov
movsb
cmpl
std
mov
push
mov
or
lods
fisttps
and
inc
sbb
stos
enter
lret
mov
and
arpl
ljmp
add
cld
lcall
jne
sub
and
in
sahf
lahf
jge
aad
hlt
lcall
dec
mov
push
lods
test
sarb
mov
fwait
lds
aam
decl
ret
nop
adc
aam
mov
jnp
movsl
mov
pop
mov
jmp
pop
out
test
mov
daa
jnp
ret
cmp
sub
repz
lret
icebp
jmp
clc
xchg
pop
sub
xor
cmp
pop
cmpsb
sbb
addr16
sti
cmc
mov
pusha
lock
lcall
inc
mov
dec
pop
out
imull
std
sbb
jmp
hlt
in
pminub
movsb
test
loopne
in
bound
sbb
mov
aad
popa
dec
pop
or
sahf
fwait
pop
dec
clc
mov
inc
jbe
sbb
dec
aad
mov
sbb
push
adc
into
push
pushf
cli
pop
adc
mov
xchg
in
or
xchg
mov
clc
fisttps
push
xchg
mov
mov
test
fstp
dec
pop
cmp
pop
xor
jecxz
lods
push
dec
in
dec
dec
loope
fsubrs
inc
xchg
pop
insl
mov
mov
mov
jmp
mov
leave
ret
test
lock
fnsave
add
inc
shrb
pop
adc
jb
sti
fwait
mov
stc
jecxz
jg
dec
pop
dec
add
pop
dec
data16
subl
jnp
es
addr16
int3
inc
clc
mov
cmpl
and
lock
mov
test
sub
sahf
sbb
cmc
push
enter
pushf
sbbl
call
repz
cmp
outsl
sub
pop
ljmp
mov
xchg
call
into
mov
insl
stos
out
hlt
push
loope
fcmovne
pop
out
js
add
sbb
shlb
imul
std
daa
popa
jp
pop
lret
scas
fisubs
fs
sub
push
aaa
mov
lret
jp
ret
call
jmp
sub
and
stc
mov
mov
add
insb
adc
adc
les
cltd
and
mov
adc
mov
loop
pop
outsl
mov
in
fiaddl
loop
test
out
xor
jle
add
scas
jns
out
out
sbb
fcompl
jl
push
jecxz
jb
lock
cmp
ret
sbb
sbb
lahf
mov
xchg
sbb
je
cld
pop
xor
jnp
and
mov
sbb
or
sarl
push
pop
incl
cmc
pop
test
pop
mov
jl
mov
jae
sbb
xor
out
fwait
sbb
push
popf
mov
shl
pop
test
fwait
gs
rcrl
xlat
cmc
jne
mov
push
popl
ss
mov
jo
adc
xor
jmp
mov
push
xchg
ret
cwtl
cmp
cmp
pop
and
dec
pop
mov
mov
jae
mull
ss
leave
in
or
jno
or
fmul
mov
sub
xchg
mov
and
call
fwait
and
adc
push
mov
and
sub
mov
shlb
fisubrs
shrb
push
sub
mull
jns
mov
mov
lcall
mov
mov
in
jbe
dec
cmpsl
aaa
aad
shlb
insl
outsl
jae
lcall
inc
mov
aam
xchg
mov
hlt
sbb
adc
xchg
test
or
test
test
fnstenv
lahf
int
loope
test
xor
adc
push
ja
inc
push
clc
pop
inc
gs
xchg
xor
jmp
icebp
addr16
hlt
sub
lahf
pop
jl
sub
es
xchg
mull
scas
lock
jno
out
dec
push
test
inc
andl
or
jno
outsl
rolb
repnz
imul
pop
jge
jo
ror
dec
mov
cmp
mov
sarb
jno
pushf
pop
ret
ja
cmp
loope
add
movsl
data16
mov
fs
int
sub
out
push
xchg
lea
lea
sahf
pop
mov
cs
sahf
sub
jae
xchg
push
or
fwait
cmp
arpl
rclb
mov
push
xchg
adc
popf
dec
mov
push
imul
pop
out
sbbb
mov
cmovnp
leave
or
push
add
divl
xchg
stc
nop
sub
or
xchg
fcoms
dec
test
mov
icebp
mov
ja
sbb
out
pop
std
mov
out
std
sub
out
ret
adc
and
pop
fiaddl
add
jl
bound
ficomps
mov
fsts
js
mov
xchg
fidivrl
pop
dec
mov
xchg
inc
pop
xchg
aaa
into
std
ret
cmpsl
jge
stc
inc
int3
push
std
adc
jnp
jmp
cmp
dec
outsl
push
lds
mov
shll
mov
sarl
push
popf
sub
jl
push
cmpsb
mov
jo
lret
pushf
test
loope
insl
rcrb
cmc
push
aad
incb
mov
sarl
pop
mov
xchg
and
mov
pop
cmp
insl
ret
mov
frstor
cmp
xor
and
loope
jne
movsb
push
xchg
sub
test
fisubrl
stc
push
aad
dec
xor
std
in
inc
fistpl
xchg
add
mov
jmp
mov
push
adcl
pop
movsb
lock
aaa
pop
ret
fs
dec
cmp
mov
and
mov
xor
xchg
and
push
cltd
xor
aaa
dec
int3
out
call
dec
sbb
adc
jl
rcrl
mov
roll
pushf
fistps
test
sbb
sub
popa
pop
out
push
dec
inc
out
inc
loop
je
fs
int3
ja
scas
cmpsl
popf
pop
sahf
mov
dec
pop
xlat
inc
pop
sahf
mov
sub
aad
and
jp
fdivrs
push
mov
adc
sbb
xor
jp
mov
dec
daa
mov
xor
lods
inc
cli
jmp
mov
fbld
mov
cmpsb
jp
in
mov
insb
push
add
mov
push
ss
mov
loop
cwtl
sbb
xlat
dec
mov
or
mov
fisubrl
bound
out
dec
sub
push
push
ljmp
xchg
add
popa
into
pop
arpl
mov
aas
lcall
sti
mov
cmpb
jl
popa
and
pop
xchg
sbbl
mov
dec
xlat
mov
xor
mov
add
xor
andb
xchg
mov
or
cmpsb
push
fcomp
aas
cs
rorb
sbb
ds
repz
fldenv
hlt
mov
pop
adc
jnp
push
mov
movsl
outsl
out
inc
adc
mov
cld
dec
mov
shrb
or
jp
pop
imul
js
cmp
das
stos
add
lock
test
int3
test
insb
pop
jb
sbb
jg
es
test
scas
lea
js
push
jle
addr16
sbb
scas
jnp
dec
xor
mov
jp
mov
jge
mov
shl
xabort
sbb
sub
pusha
xor
sbb
daa
xchg
cmp
sub
sub
rorb
mov
jnp
add
xor
shl
jp
repz
pop
push
cwtl
xor
xor
inc
nop
add
mov
lods
cmp
adc
pop
mov
aas
add
adc
mov
or
test
imul
sbb
jg
cmp
mov
sbb
mov
adc
or
cli
jp
add
sub
aas
outsl
test
sbb
cmp
out
ret
sahf
and
xchg
popa
push
test
cmp
jecxz,pn
pushf
insb
pop
fistpll
inc
sbb
mov
mov
lcall
mov
pop
sahf
movsl
rclb
sbb
loop
adc
shl
inc
pop
lods
and
ljmp
push
icebp
sbb
repnz
push
jmp
push
pop
mov
add
mov
sbb
jg
lcall
dec
xor
out
es
or
add
sub
mul
or
pop
cmp
jge
and
and
sub
xchg
jl
sbb
push
mov
les
test
outsl
mov
clc
ret
sub
add
test
jae
xchg
repnz
pop
dec
mov
dec
idiv
cmp
sbb
icebp
add
dec
dec
hlt
into
gs
repnz
jo
in
clc
enter
decl
jg
out
ficoms
test
ljmp
out
ss
das
pop
outsl
loop
mov
cmp
mov
clc
jg
xchg
notl
add
jg
mov
aaa
repz
dec
in
insl
inc
fiadds
sub
xor
mov
pop
push
dec
ljmp
jb
mov
dec
stc
or
xlat
aad
mov
fwait
ja
adc
adc
in
jns
mov
add
scas
in
pop
jg
lret
mov
pop
inc
pop
mov
scas
push
popf
mov
arpl
in
mov
ret
xor
cmp
push
lret
xchg
sbb
arpl
loop
ja
mov
sbbl
pop
jns
and
call
out
hlt
mov
lret
lea
mov
inc
gs
or
xchg
inc
xchg
jg
lcall
cli
cmpl
sbb
stc
xor
pop
in
pop
fsts
push
dec
dec
and
cmp
xor
sar
or
push
sub
mov
cmpsl
ret
sbbb
loope
lds
insl
std
push
aad
fldt
test
dec
mov
and
call
dec
pop
insb
push
dec
call
or
cld
adc
push
insl
jno
sub
rorl
sub
mov
xchg
jns
scas
pusha
jnp
into
and
jnp
inc
stos
ficomps
call
shrb
sahf
ss
sub
xor
mov
sub
ss
mov
add
shrb
jbe
ss
dec
stos
cmp
fldt
fdivrs
mov
mov
bound
xchg
adc
cld
out
xor
xor
and
das
int
inc
push
lret
aaa
push
jmp
add
icebp
data16
fmul
out
xor
arpl
outsb
popf
cmp
inc
sbb
scas
scas
dec
insl
fcomps
adc
fstpt
inc
sarb
cltd
ds
popf
push
insb
loop
fwait
sub
adc
pop
mov
outsl
add
sub
mov
or
scas
inc
hlt
sahf
mov
test
push
insb
mov
jmp
push
int3
xchg
mov
mov
and
cmpsl
loop,pt
aas
add
jle
stos
xchg
es
and
jns
adc
add
lahf
push
fadds
xchg
xchg
lods
sub
push
xor
ja
out
in
jno
sub
shrl
jecxz
fnsave
mov
sarb
cmp
adc
push
mov
xchg
adc
imull
xchg
lret
push
lcall
cwtl
andl
dec
popa
scas
decl
xor
mov
add
sbb
mov
jae
jbe
push
xchg
jp
clc
adc
dec
pop
lcall
cwtl
repnz
lods
and
test
jl
popf
pop
adc
lock
and
add
addr16
fwait
scas
mov
jbe
shr
xchg
flds
in
mov
les
leave
jge
add
cltd
mov
cltd
sub
nop
setne
fs
inc
jo
jne
sub
lods
push
mov
test
cmpsb
daa
sarl
add
jns
imul
adcl
mov
jp
jo
add
mov
pop
hlt
lods
or
jbe
pop
test
je
ficoms
and
es
out
jecxz
push
xor
or
push
sub
in
outsl
xorl
das
cmp
in
push
or
push
push
fadds
imul
sbb
and
cmp
insl
lea
cmpl
pop
pop
pop
push
es
sbb
push
push
test
imul
loopne
sbb
sbb
aas
dec
inc
test
jbe
loope
pop
mov
dec
and
mov
shll
or
mov
outsl
mov
push
aas
inc
cmp
pop
push
cld
jecxz
add
sbb
inc
push
test
daa
pop
and
pusha
iret
mov
std
test
inc
test
out
pop
mov
pushf
sbb
sub
dec
ret
sbb
push
xor
rolb
lret
add
cmp
stos
inc
fmul
scas
cmp
lods
cmp
push
icebp
cmp
test
dec
and
movsl
xor
pusha
jmp
aas
xchg
daa
adc
xchg
inc
loopne
cmp
fucomi
lods
shll
ss
fst
cmc
jbe
sbbl
cmp
or
shrb
sbb
adc
dec
jbe
test
out
std
inc
cmovs
xchg
adc
les
lods
push
insl
jno
cmp
cmp
pop
mov
fwait
or
mov
popa
pop
aaa
push
inc
ss
arpl
ret
and
mov
mov
test
fcompl
adc
rcrl
lock
in
ljmp
mov
push
xchg
mov
dec
sbb
pop
pop
pop
push
je
sarb
pop
cmc
dec
subb
or
mov
pop
imul
fwait
bound
rcrb
nop
cmp
add
sarl
push
xchg
mov
or
sbb
outsb
inc
xchg
cmp
jecxz
mov
mov
pop
lret
xchg
jns
add
mov
std
pop
sub
pop
inc
sbb
mov
xchg
sub
lcall
sbb
addr16
add
mov
inc
jo
testb
inc
mov
test
fistps
add
or
out
add
fs
aas
sub
ljmp
sahf
popa
ss
lods
fstpt
int3
arpl
mov
pop
jne
add
pop
jae
xchg
test
dec
pop
mov
push
jge
loopne
imul
mov
dec
mov
sbb
out
test
sbb
cmpl
dec
clc
inc
pop
jae
pop
dec
out
pushf
pop
dec
push
std
aaa
stos
ljmp
mov
mov
jne
xor
lahf
test
mov
jecxz
mov
sub
loope
pop
dec
test
dec
mov
lret
and
insl
mov
mov
pop
adc
mov
pusha
lods
repnz
je
test
xchg
inc
mov
mov
outsb
xchg
push
cmp
frstor
popa
in
xor
adc
mov
iret
mov
aaa
xchg
sub
or
andb
ret
jne
hlt
ljmp
les
mov
mov
jp
inc
push
mov
test
mov
xchg
pop
mov
push
mov
enter
adc
in
jne
iret
dec
cwtl
loop
push
adc
roll
push
aad
jmp
mov
or
dec
cmc
inc
stc
sub
mov
fucomi
or
cmp
clc
sbb
dec
and
call
xchg
std
movsl
cmp
cmp
ret
adc
dec
imulb
loopne
adc
les
pop
dec
push
jae
clc
jae
fsubr
stc
inc
shll
xor
xor
lcall
cmp
sub
inc
data16
sub
shr
test
xchg
imul
out
mov
call
test
dec
xchg
and
lods
sbb
insb
sbb
lods
lds
cmp
out
mov
inc
sbb
or
imul
xchg
push
sbb
lret
in
enter
nop
mov
push
or
cmp
loopne
pop
push
push
push
lret
mov
sub
pop
xor
xchg
stos
insl
in
xchg
add
fisttpl
int3
jo
into
aas
add
pop
idivl
or
xor
loop
ljmp
xchg
clc
in
sbb
xchg
mov
jecxz
pop
hlt
or
jnp
jno
inc
xorb
pop
sub
test
sti
fidivl
dec
lods
inc
xor
clc
sahf
cmc
jp
mov
xchg
call
xor
repz
cld
add
sub
sub
mov
sub
adc
shrl
push
push
movsl
pop
outsb
cmp
lods
adcb
mov
into
add
dec
or
jno
xchg
mov
les
aam
cwtl
mov
mov
xor
xor
pop
fdivrl
cmp
push
sti
xchg
sub
xchg
or
mov
popf
push
ss
shl
lret
loope
jecxz
or
add
xchg
jmp
mov
jae
sahf
xor
lods
roll
pusha
je
jno
xchg
pop
ffreep
inc
divl
scas
fnstcw
out
repz
pusha
and
iret
push
ss
pop
adc
add
inc
push
std
mov
xor
push
lods
out
fbstp
popa
xchg
bswap
movsb
test
jmp
pop
jle
adc
sahf
inc
stos
gs
xchg
mov
sbb
push
icebp
clc
inc
pop
cmp
jb
push
pop
sub
xchg
mov
ret
add
std
cmp
pop
scas
xchg
pop
ss
push
and
xchg
inc
fcmovnb
mov
cmpsb
std
insl
cwtl
push
jmp
xchg
dec
or
orb
add
arpl
mov
dec
cmp
dec
out
inc
mov
xchg
fldt
int
sar
mov
and
ret
jle
into
jmp
cmp
xchg
js
fisubrs
mov
ret
lods
sbb
cmp
daa
cmp
xchg
cmp
mov
daa
das
cmp
jp
pop
popa
mov
ljmp
imul
addr16
pop
mov
mov
mov
xchg
out
add
pop
dec
cmp
jnp
adc
or
pusha
jno
xchg
test
and
mov
sub
dec
out
mov
mov
dec
or
mov
rclb
fdiv
dec
loopne
mov
sarb
push
out
fcompl
mov
jle
jl
push
jae
jns
stc
bound
xor
arpl
dec
test
xor
icebp
xor
xchg
pushf
xor
adc
push
pop
loopne
pop
push
push
add
je
cmp
adc
jecxz
xchg
sub
adc
pusha
fs
aaa
dec
add
push
mov
lods
std
or
jecxz
shr
gs
mov
ljmp
cmp
push
dec
mov
adc
inc
xlat
fnstenv
jb
movsl
je
lcall
dec
and
xor
and
cmp
pushf
push
push
jecxz
aaa
and
arpl
lods
mov
mov
sbb
in
sbb
jo
dec
es
clc
sub
and
or
es
add
add
testl
fwait
inc
divl
lods
push
pop
sti
movl
mov
js
arpl
and
enter
push
sbb
mov
mov
hlt
sub
fs
loop
int3
fwait
jg
aad
stos
outsl
push
sbb
rcrb
jp
subb
aas
push
sbb
push
sbb
mov
jge
pop
ja
jnp
shr
xchg
shl
mov
das
xor
das
addr16
dec
mov
mov
pusha
aad
inc
out
dec
sahf
cwtl
cmpl
xchg
into
push
jae
popf
data16
xor
sub
sub
push
sub
cmp
imul
adc
addb
pop
lds
mov
sub
add
jl
mov
cmp
fwait
or
xchg
sub
and
mov
inc
cmp
pop
lret
sbbb
insl
stc
cmp
inc
push
movsl
in
pop
cwtl
insl
xor
outsb
jmp
aad
push
pushl
cltd
xor
and
aad
sub
stos
mov
jne
jge
addr16
push
movsl
ret
mov
sbb
push
dec
rcrb
jno
mov
cs
into
pusha
or
dec
mov
xchg
les
sbb
dec
dec
imul
les
ds
movsb
inc
std
adc
add
lret
and
add
jne
loopne
add
test
mov
aad
mov
mov
fiaddl
or
loope
mov
mov
and
rorb
in
fbstp
xchg
and
mov
popf
loop
push
test
fsubrs
mov
mov
mov
iret
aam
bound
cmp
bound
inc
cmc
mov
sti
ja
push
divb
movsb
jns
lds
cmpsl
stos
mov
mov
imul
mov
in
mov
inc
jno
jb
jmp
lahf
mull
xor
enter
xor
xchg
jae
xor
push
aas
add
shlb
sahf
inc
rorl
xchg
imul
sbb
inc
cmp
sub
int3
ja
jle
adc
into
loope
or
test
jns
adc
addr16
add
and
js
ljmp
js
or
or
ret
aas
push
lret
fnstenv
lds
push
mov
jns
or
add
mov
push
stos
fiaddl
popa
call
lret
cli
and
imul
jle
test
into
fcmovnu
lret
push
push
add
loope
pop
imul
push
in
mov
jge
bound
fwait
push
cwtl
mov
pop
adc
repz
and
leave
cmp
sub
cwtl
pop
cwtl
jnp
pop
in
jae
lea
scas
mov
cmc
xor
or
cli
rcrb
mov
mov
out
adc
pop
sbb
push
arpl
insb
mov
xchg
push
dec
iret
mov
dec
mov
leave
cmp
inc
add
jecxz
dec
or
out
outsb
test
fstps
push
imul
fcmovnbe
sub
lock
dec
outsl
pushf
dec
int
mov
dec
lahf
aas
inc
mov
push
fistpll
test
enter
xchg
sti
lret
sbbl
add
inc
popa
mov
ret
inc
shrl
lcall
jb
jl
fisubrs
jmp
ljmp
das
addr16
mov
and
out
jns
lock
jb
jbe
jecxz
sub
inc
add
push
sub
pop
das
lock
push
ss
jne
jg
jp
push
data16
xchg
js
sub
lcall
mov
rcll
mov
movsl
xchg
add
ds
xchg
pop
aad
mov
xor
lock
daa
fsubrs
add
stos
dec
pop
imul
jecxz
push
lcall
mov
lret
shrl
sbb
sahf
dec
inc
xchg
outsb
insb
call
divb
mov
mov
mov
cmpsl
aad
nop
rcrl
in
mov
cmp
test
imul
jns
insl
mov
sbb
xchg
stos
ja
mov
hlt
cmp
iret
xlat
cltd
das
out
lock
fldenv
adc
pop
xchg
jmp
addr16
ret
add
sbb
xchg
mov
subl
inc
pushf
and
add
out
aas
outsb
xor
rcr
ja
mov
imull
scas
clc
ds
fstp
pop
std
movsb
das
out
adc
fwait
pop
cmp
lret
shrl
mov
and
ret
fdiv
lahf
and
mov
cwtl
mov
jbe
xchg
mov
dec
mov
push
dec
sbb
movl
mov
enter
repnz
adc
mov
ja
or
mov
test
sbb
xchg
and
cld
data16
xor
cmpl
and
and
ret
xchg
scas
mov
pop
lahf
mov
xlat
jmp
gs
cmpsb
mov
mov
popa
mov
leave
sahf
pop
push
pop
cmp
sub
repnz
insl
xlat
mov
mov
cltd
jo
out
cs
sbb
and
jl
rorl
or
mov
shl
xchg
enter
mov
mov
push
xchg
pop
adcb
lock
hlt
add
dec
jb
test
jo
and
clc
out
test
cmp
cmp
push
sahf
xchg
add
jno
pop
fiaddl
mov
in
or
mov
inc
and
sub
movsl
push
push
lods
das
lret
pop
jbe
dec
dec
push
xchg
pop
imul
pop
shll
scas
call
inc
and
xor
adc
push
aad
mov
movsl
call
sub
loopne
cmpsb
movsl
cmp
movsb
out
jecxz
icebp
jp,pt
xchg
push
lret
pop
inc
jmp
mov
mov
push
jp
mov
dec
push
movsl
dec
addl
mov
jmp
testb
fs
xor
aaa
pop
mov
sub
add
cmpl
cmp
adc
push
cmp
xchg
and
jne
jge
fiaddl
xor
inc
icebp
cmpsb
mov
add
ljmp
mov
jg
sbb
hlt
outsl
add
mov
sub
adc
cmp
lods
out
and
sti
cli
inc
jmp
loope
jae
cmc
sub
in
inc
repnz
loope
xor
dec
lods
adc
aad
jle
xor
popf
xor
inc
mov
dec
mov
cmpsb
xchg
add
sahf
push
mov
and
mov
fs
sbb
fs
push
bound
out
mov
pop
popf
sbb
mov
fsave
shl
stos
adc
call
inc
push
jbe
dec
or
inc
pop
ror
pop
fidivs
loop
push
imul
inc
movsl
mov
mov
cmp
mov
popf
mull
lock
xchg
sub
mov
xor
ss
xchg
jg
les
push
stos
inc
imul
fiaddl
pop
mov
stos
xor
mov
lods
push
dec
cmc
out
xchg
cmp
pusha
divl
dec
adc
js
cld
xchg
fs
add
jno
mov
call
mov
push
add
adc
mov
mov
adc
stos
add
in
rcrl
out
pusha
paddw
and
mov
fnsave
out
lods
mov
sub
sbb
mov
push
scas
xchg
imul
lds
mov
mov
cmp
cli
les
sub
jmp
cltd
xor
dec
dec
add
push
mov
mov
iret
bswap
fidivrl
mov
xor
cmpsb
outsb
shll
cmp
in
xchg
sahf
xchg
arpl
mov
in
cmp
fstpt
and
sbb
xchg
mov
mov
push
lds
lea
push
sti
cwtl
mov
jno
cmp
fstl
loop
fwait
cmp
adc
lods
adc
jne
in
push
xor
arpl
push
push
bound
test
mov
sarb
mov
add
pop
popa
fsubl
push
ret
pop
lock
mov
std
jns
fldl
imul
sub
fsts
das
ret
out
fbld
mov
fsubl
imul
fildll
or
insb
add
fisttps
js
and
jecxz
push
cld
ljmp
loopne
les
rcll
xchg
pop
loop
inc
fistpl
cmpsl
inc
push
add
and
enter
nop
daa
push
mov
pop
shlb
pop
jns
mov
mov
xchg
mov
push
fcoml
xchg
xchg
js
dec
and
mov
add
fsubrp
into
push
das
adc
inc
mov
negb
je
pushf
imul
cld
scas
pop
faddp
xor
insl
jbe
hlt
mov
int
mov
jecxz
push
arpl
cmp
jmp
fcompl
push
mov
mov
mov
popl
jge
inc
sub
mov
int
xlat
cmp
jae
adc
lods
fwait
mov
cwtl
imul
mov
or
arpl
scas
in
js
push
aas
jg
in
push
imull
lods
inc
pop
in
push
lock
add
je
movsb
add
dec
fsubs
bound
xor
je
and
cmp
and
stc
jmp
sbb
sub
ss
and
and
mov
scas
inc
dec
inc
test
loope
xor
sarl
mov
aaa
xchg
out
lds
fwait
gs
sbb
mov
icebp
and
sub
std
push
aam
in
js
lret
xor
add
fdivl
mov
push
inc
adc
clc
scas
jp
fildll
stos
sbb
cs
xchg
sub
mov
outsb
int3
and
xor
das
test
popa
in
add
outsl
jae
inc
cmp
add
push
stos
and
pop
jmp
jae
sbb
das
test
in
mov
lods
aaa
arpl
inc
pop
push
out
xchg
cmp
sub
out
xor
data16
fistpll
xor
push
cmp
lret
xchg
cmp
mov
cltd
leave
cld
push
icebp
imul
xor
dec
inc
mov
xchg
adc
cld
and
adc
inc
aas
jle
push
insb
jb
inc
cmpsl
in
cwtl
fadds
js
movsb
out
mov
sti
mov
aam
sbb
pop
loope
lods
adc
fisubs
sub
cs
test
add
or
test
xchg
cmpsl
testb
loopne
mov
push
dec
lock
dec
iret
loope
aas
add
push
iret
movsl
ljmp
and
cmpsl
es
notb
pop
popf
xor
cmpsl
ljmp
flds
dec
fincstp
sbb
scas
jno
movsl
cmp
div
adc
cmp
jle
mov
push
xchg
daa
loopne
add
mov
push
ret
pop
mov
pop
out
sbb
cmp
ja
subb
aaa
mov
push
dec
inc
lods
test
lret
cmc
andb
cmc
loopne
scas
aas
cmp
inc
xor
jbe
arpl
xor
lods
lea
in
call
mov
sbb
jno
je
or
mov
pop
cltd
ret
out
xchg
cmp
je
fadds
fucomp
and
mov
push
cmpsb
fisubs
mov
mov
rorb
push
repz
fnstenv
enter
or
aaa
cmpps
sub
rcll
and
inc
fs
stc
or
sbb
xchg
adc
mov
fsubrs
add
rcll
xchg
cmp
insb
jge
and
fmuls
push
das
ja
call
es
fdivrs
test
pop
in
pop
mov
insb
push
insl
or
cld
syscall
fwait
subl
mov
or
xchg
sub
xchg
shl
push
cmp
test
xchg
inc
fwait
sbb
push
xchg
push
jns
out
mov
and
in
arpl
sahf
test
mov
inc
fisubs
fsub
mov
mov
xor
jg
sbbl
pop
fcomip
mov
jge
sub
enter
xchg
sbb
cmp
cmp
or
out
pop
cmp
or
aad
fbld
cmp
dec
daa
aaa
in
lcall
arpl
jae
rcll
cmp
sbb
mov
stos
mov
xor
int3
arpl
test
push
pop
mulb
jae
test
xor
push
sbb
popa
in
sbb
push
out
sti
cmp
je
pop
jo
xchg
sub
insb
clc
mov
inc
xor
adc
sahf
add
lret
cmpsl
jle
mov
sub
add
imul
cmpsl
xor
mov
sbbl
loopne
mov
sub
adc
xor
mov
sbb
jg
mov
pop
shrb
xor
inc
stc
out
sub
les
push
inc
lcall
and
jnp
das
mov
jle
cmp
ret
lcall
and
sub
jnp
sbb
adc
mov
xchg
mov
sbb
sub
mov
pop
mov
xor
cmp
loop
cmp
insl
mov
jbe
adc
xor
adc
jo
dec
jne
jae
lret
push
sbb
lret
jne
pmaxsw
xchg
clc
cmpsl
mov
xchg
xor
adc
cmpsl
sub
nop
fchs
add
adc
sub
mov
adc
xor
outsl
testl
je
testl
mov
xchg
lods
je
mov
stos
stos
xor
pop
xchg
repnz
out
fcomip
repz
jmp
jmp
subb
cli
jne
ffree
sbb
sbb
jns
rclb
and
sub
in
pushf
dec
xchg
cmp
loope
insb
orl
lods
cmp
pop
adc
lahf
push
add
inc
test
pop
mov
in
fbld
popf
push
jno
jge
push
fs
xor
fwait
testl
xlat
int3
call
pop
out
jge
loopne
sbb
or
test
mov
adc
jl
adc
pop
or
mov
push
xor
pop
fcoml
mov
sbb
mov
push
pop
inc
in
testl
pop
push
cli
or
outsb
jl
mov
xor
fidivrs
fcmovnu
push
mov
inc
add
add
inc
stos
ss
cmp
jmp
fildll
xchg
xchg
mov
loop
clc
into
das
fisttpll
cmp
adc
xchg
and
sbb
aam
test
stos
mov
xchg
jnp
inc
push
xor
hlt
sbb
pusha
lods
fistl
mov
xor
insb
ret
push
cmp
fdivr
roll
stc
test
andb
cwtl
add
sub
into
cmpsb
cmp
cmp
adc
outsb
je
mov
jae
popa
sbb
xor
jge
out
stc
sbb
pushf
loop
lcall
jecxz
cmpsb
adc
and
add
lret
out
cmc
dec
out
mov
xchg
sub
clc
loop
movsl
lods
push
popf
sbb
jge
adc
rcrb
xchg
and
std
aad
add
testb
popf
fwait
sub
push
jbe
mov
mov
lds
sub
push
pop
icebp
and
insl
test
insw
out
push
aas
pop
out
lods
and
mov
or
inc
cld
fsub
mov
adc
pop
jne
scas
hlt
das
icebp
cmp
in
pushf
add
xor
sbb
mov
mov
mov
inc
adc
push
nop
lahf
addb
xor
or
and
mov
xor
cmp
stc
xlat
cmc
mov
sub
adc
cmpsb
sbb
jb
xchg
aad
adc
pop
mov
int3
pop
sbb
in
push
sub
lahf
xchg
or
mov
jle
sti
mov
inc
push
xor
or
adc
shlb
ds
pop
addr16
stos
or
lret
sub
pop
sbb
les
mov
pop
mov
inc
into
dec
aas
or
sti
lock
cs
fisubs
fwait
sti
jge
enter
add
inc
int3
xor
outsl
outsb
fiaddl
lods
cmpsl
idivb
movsb
mov
mov
pop
mov
out
test
jne
lea
inc
dec
or
cmc
lret
fisubl
mov
sbb
rep
cmp
cmp
lret
mov
pop
outsb
in
push
rcrl
insb
xchg
jb
mov
or
cltd
push
icebp
dec
inc
int
xchg
test
or
pop
ret
dec
sarb
insl
pusha
or
adc
adc
popa
bound
fst
stos
mov
cmp
mov
mov
lahf
inc
sub
je
jne
adc
mov
xchg
dec
pop
iret
lea
jo
or
sbb
mov
lahf
repz
or
inc
test
mov
fldl
xchg
pop
pop
mov
push
xor
es
sub
divb
push
outsb
adc
stc
sbb
dec
xor
mov
test
in
vfmsubadd213pd
lcall
cmpl
testb
addl
pop
adc
mov
popf
sarl
repnz
ficoml
je
repz
data16
mov
cmp
ret
enter
lcall
xlat
fwait
pop
repz
xchg
jp
jl
cmpsl
aam
add
negl
mov
mov
les
xor
dec
sub
leave
pop
adc
sub
adc
mov
clc
cmp
sbb
xchg
ds
aaa
mov
les
gs
sub
xlat
cmp
test
dec
dec
nop
out
jo
lcall
inc
push
cmpsb
shlb
xor
mov
add
repz
leave
mov
push
hlt
popa
ficoms
add
push
lods
rorb
xor
sub
inc
adc
cli
and
gs
pop
rorl
test
mov
jbe
sub
jmp
xchg
push
nop
sub
xchg
insb
sub
jmp
xchg
cmc
in
add
mov
out
add
push
loopne
and
lods
ljmp
stc
sahf
popa
mov
hlt
push
inc
cmp
inc
cmp
out
test
and
lods
mov
adc
aas
and
add
pop
mov
xchg
leave
cmp
xchg
jns
mov
in
les
push
mov
jo
push
lret
ss
in
jno
jge
test
fldt
mov
fdivrl
dec
ret
add
into
and
in
stos
mov
loop
mov
push
mov
fs
movsl
popa
clc
aad
fwait
scas
cmpsb
jg
outsl
cs
cmp
mov
iret
out
cmpsl
imul
jo
out
or
lds
mov
clc
ljmp
xor
nop
lock
mov
or
add
push
or
es
popa
js
sbb
daa
outsl
adc
mov
pop
loope
fstpt
or
sub
jp
mov
clc
cmp
add
imull
mull
je
xlat
pop
xor
jnp
cld
push
stc
adc
mov
das
cmpsb
mov
frstor
push
mov
aad
cmp
push
out
mov
xchg
jmp
sbb
mov
ret
stos
inc
jo
mov
pop
jnp
xchg
mov
ficomps
scas
stos
aam
fldt
repnz
jae
pop
movsl
jae
push
lods
mov
jmp
les
lea
mov
loopne
jo
hlt
sbb
test
aaa
and
or
ror
sub
arpl
jl
outsl
mov
lock
lcall
jecxz
mov
push
cmp
mov
dec
pop
gs
mov
mov
shlb
mov
rcl
jns
sbb
push
mov
in
xchg
movsb
xchg
cmp
insl
mov
mov
push
pop
xor
dec
ss
rorl
mov
repz
or
call
xchg
jge
mov
testl
sub
add
sbb
xorb
jle
inc
cld
outsl
gs
add
adc
mov
inc
call
fdiv
lea
or
dec
ljmp
in
cmpsb
xchg
sbb
into
mov
orb
jb
or
jb
lea
lahf
mov
in
xor
pop
mov
adc
fsubs
dec
xchg
repnz
and
lds
sbb
dec
push
sub
ss
sub
call
or
cmp
pop
mov
je
mov
rcrl
adc
add
cltd
ja
lcall
mov
xor
jns
jl
stos
xlat
jecxz
int
mov
add
daa
push
sub
repz
or
pop
repnz
popa
pop
out
jbe
dec
sbb
jbe
adc
shrb
push
push
jno
stc
pop
out
push
cmp
fisubrs
pop
mov
lock
fmull
xor
aad
mov
outsl
sbbl
imul
lds
sub
ret
stos
jge
add
out
sub
movb
sub
sti
or
mov
cli
or
sub
mov
or
cmp
popl
nop
mov
dec
dec
dec
out
fsts
ret
out
xchg
adc
scas
cwtl
sub
sti
fwait
cmc
das
adc
and
iret
pop
xchg
lcall
movsl
lods
and
pop
adc
and
jns
mov
out
xchg
ret
xor
lea
and
dec
aad
testb
jge
fistpl
xor
adc
aas
jne
mov
sbb
jmp
and
nop
push
fadds
mov
mov
pushl
jno
mov
into
mov
pop
out
sbb
adc
shrb
pop
out
ret
jmp
test
or
je
sbb
arpl
inc
jae
dec
mov
mov
negb
fstpl
lods
repnz
push
xchg
dec
pop
jecxz
out
cmpsl
int3
arpl
mov
push
mov
adc
cmp
lahf
mov
outsb
imul
xor
dec
rol
rorl
pushf
scas
scas
mov
xlat
in
add
pop
sbb
xchg
sub
mov
sahf
xor
mov
mov
call
cmp
mov
inc
xor
lea
lods
ret
test
pop
icebp
pop
orb
aam
int3
arpl
ficoms
popf
inc
or
jbe
push
out
inc
mov
xchg
cmpsl
dec
push
jmp
adc
jo
jg
and
mov
mov
mov
das
mov
int
jne
sub
mov
xchg
loop
jne
push
push
adc
test
inc
cmp
sarl
add
data16
push
icebp
xor
and
lret
lret
push
and
or
int
fucomi
and
cmp
xchg
popa
xchg
rol
or
jae
push
sbb
jne
into
sahf
mov
mov
clc
sub
in
mov
scas
les
adc
jmp
push
jbe
out
shl
or
add
ret
push
shl
in
adc
dec
adc
mov
lret
rcrl
sbb
test
shlb
push
push
cmpsb
jge
out
mov
xor
mov
cmpsl
jge
negl
lret
sbb
mov
daa
in
jle
int
lcall
fs
into
cmp
dec
fstpt
call
push
and
loope
dec
xchg
sub
shll
and
mov
jae
std
xor
adc
xor
add
jne
lret
mov
es
add
lods
or
loope
xchg
pop
subl
xor
push
xchg
pop
push
jg
cmp
cmpsb
sub
push
push
ss
imul
dec
fdivs
incb
cmpsb
data16
cmpsb
inc
lret
adc
lods
ja
addr16
xchg
push
sub
lods
scas
cmpsl
or
sub
inc
cs
in
sbb
outsb
and
pop
cld
mov
into
jge
ds
sbb
ret
mov
mov
cmpsl
jge
into
mov
adc
std
outsb
mov
xchg
stos
cmp
mov
ret
pop
sbb
mov
cmp
jle
or
movsl
inc
add
mov
inc
xchg
dec
push
sub
or
jae
in
sub
xchg
sub
or
add
fcoms
jb
add
jno
add
jl
das
dec
dec
or
jle
ret
lahf
fsubr
enter
xlat
or
xor
fcomps
popa
testl
ss
mulb
pushf
loop
or
call
lahf
test
imul
or
aaa
int3
fisubs
out
popf
ja
mov
adc
sub
push
enter
sub
enter
and
clc
cmp
mov
mov
xchg
out
xchg
cmp
xchg
inc
jge
dec
cmp
out
cmpsl
sbb
mov
repnz
or
aaa
pop
repz
mov
cwtl
jb
xor
xlat
add
icebp
xor
jae
xor
jle
movsb
push
mov
pop
fidivrl
cmp
pop
add
sbb
xchg
inc
popf
popa
add
fwait
ja
rcl
fwait
lods
fptan
and
out
repz
outsl
xchg
in
fwait
inc
sbb
dec
aas
add
pushf
inc
sti
fiadds
adc
out
popa
jecxz
xchg
mov
mov
popf
xor
sub
cvttps2pi
mov
iret
jnp
pop
loopne
lret
adc
sub
sarb
dec
into
mov
out
call
inc
loope
out
fldenv
jl
shll
and
or
jno
inc
fsub
jmp
mov
pushf
cmp
or
repz
mov
scas
and
bound
inc
jnp
and
adc
jb
add
ret
out
mov
jns
cwtl
push
xchg
mov
mov
arpl
jno
pushw
jle
mov
int3
push
push
les
mov
mov
int
clc
xlat
addr16
std
cmp
sbb
dec
int3
sti
dec
pop
push
cmpb
mov
sub
jge
xchg
add
cld
cli
mov
jecxz
lea
cmp
fsubrs
adc
and
jo
mov
cmpsb
mov
cmc
fildll
sub
ret
mov
imul
xchg
rcll
add
jmp
and
rcl
arpl
mov
mov
mov
pop
xchg
in
push
iret
fildl
sub
xchg
sub
sub
lret
es
pusha
out
dec
ss
mov
xchg
insb
in
add
out
cmp
cld
cmp
addb
imul
mov
add
mov
add
sub
mov
cmp
imul
adc
cmp
push
xchg
xor
ret
inc
clc
arpl
out
out
sub
sarl
ljmp
adc
lahf
push
test
xchg
pop
out
bswap
bound
jmp
inc
dec
jmp
mov
mov
test
push
or
push
mov
jbe
mov
pop
lods
mov
out
xor
sub
cltd
jno
pop
cmc
xorb
icebp
scas
jl
push
popf
es
mov
fmull
mov
push
push
test
xorb
shll
jns
sbb
or
pop
push
jnp
xchg
pop
bound
lods
lea
ljmp
lock
icebp
lret
jge
int
dec
incl
stc
push
movsl
sub
mov
adcl
jle
push
pop
leave
test
daa
xlat
icebp
push
mov
sbbb
stos
idivl
pusha
sub
sbbb
lret
jae
mov
daa
out
aad
mov
aaa
out
pop
jecxz
dec
cmp
test
lods
and
std
loopne
cmpsl
pusha
sbb
in
mov
shll
ret
outsb
jnp
aad
cmpsl
push
push
jg
cmp
xchg
mov
les
test
enter
push
cmp
mov
pop
stos
cmpsb
insb
pop
xchg
mov
adc
outsb
and
sub
imul
out
jmp
jns
lds
dec
out
push
data16
sbb
and
enter
cli
mov
inc
and
scas
sbb
vsubsd
dec
mov
mov
and
add
sbb
ljmp
pop
js
jb
subl
cmp
repnz
call
sbb
mov
fsts
mov
fidivl
arpl
shrl
outsl
add
fs
mov
lods
sub
xorl
cs
jle
es
mov
mov
or
add
dec
adc
pop
cwtl
out
dec
mov
std
or
dec
arpl
push
out
bound
daa
mov
mov
enter
adc
lods
aam
sub
mov
into
ss
cmp
inc
les
cs
gs
mov
pop
mov
cltd
popa
jg
js
pop
cltd
rcl
cmp
cmp
ljmp
or
mov
fcmove
or
add
outsl
jns
pusha
es
mov
stos
or
adc
es
fstps
lret
push
xlat
das
or
inc
sub
dec
loope
sub
fcomps
pop
cmp
test
lret
insl
int
divb
mov
in
stos
pop
pop
jecxz
fldenv
mov
push
jne
mov
cmp
fadd
push
push
sbb
jge
mov
enter
pop
ljmp
xor
repz
aam
std
loop
gs
rorb
cwtl
cmp
sub
add
xor
add
and
xor
sbb
cmp
cmpsl
push
pop
js
adc
or
les
fnstenv
mov
jnp
mov
lret
and
pop
shl
dec
loop
cmp
outsl
lods
imul
push
xor
rorl
cmp
cmpsb
les
or
sub
lret
es
adc
dec
pop
scas
call
je
aas
mov
push
scas
ss
sahf
test
inc
or
push
aaa
stc
pop
arpl
shll
or
mov
sub
popa
cmc
mov
shl
mov
pop
mov
and
jb
loope
pop
ja
dec
test
adc
mov
out
push
mov
mov
loope
inc
xor
xchg
in
mov
scas
rolb
add
out
test
sti
dec
fdivl
or
in
sub
scas
fs
jmp
clc
push
adc
pop
jno
arpl
rcrb
jge
aam
shrb
jmp
lock
push
call
pop
cmpsb
lock
mov
push
pop
insb
enter
aad
fstpl
lea
test
es
fucomp
inc
add
mov
mov
es
call
pop
test
push
fcompl
sbb
lds
mov
lret
jb
rcll
dec
jl
lcall
add
ds
cmp
xor
inc
add
cmc
int3
les
sbb
pop
jecxz
add
in
cs
movsb
add
xor
adc
xchg
sahf
jecxz
fisubs
int3
lret
xchg
and
nop
sub
mov
test
xchg
mov
add
pop
imul
lods
popf
sub
addb
cmpsl
jp
in
test
in
data16
mov
sbb
es
pop
sbb
nop
xor
int
out
jmp
in
mov
fdivl
divps
addr16
cmp
jmp
sub
or
jne
cltd
jbe
out
and
test
fistpl
shlb
ret
lods
sub
fsubrp
jp
xchg
out
pusha
sub
lret
jns
push
hlt
sbb
jle
sub
mov
mov
cltd
cmpsl
sub
mov
and
pushf
add
test
call
scas
mov
xchg
inc
sbb
mov
out
xlat
mov
xchg
or
test
scas
iret
inc
pusha
inc
inc
ficomps
pop
xor
fnstsw
rolb
dec
mov
mov
xchg
xor
and
pop
push
test
cmpsb
sub
mov
xchg
xlat
lret
inc
push
lods
movsl
add
push
leave
pop
sbb
mov
lea
lods
inc
xchg
push
cmp
enter
test
adc
sub
ja
lock
mov
int
test
faddl
or
cmpsb
imul
mov
nop
jl
es
fcom
xor
call
addr16
clc
ja
shr
mov
into
mov
and
enter
push
popf
xchg
and
popa
jbe
mov
push
add
mov
lret
sbb
inc
subl
fdivrp
mov
imul
lock
cmp
out
xor
int
loope
cmp
dec
or
hlt
dec
jb
loopne
pop
push
repnz
scas
rorb
jno
xor
cs
cmp
push
cld
xor
inc
xlat
lds
arpl
movsb
mov
lea
int3
fdiv
daa
cld
lcall
push
add
out
push
ret
shll
cmpsb
out
jg
add
sbb
jp
push
cwtl
cmp
mov
fcmovb
rcl
sbb
adc
imul
es
sbb
adcl
and
por
repnz
pop
cmc
pop
push
ljmp
mov
xchg
popa
imul
or
dec
in
imul
ror
bound
incl
mov
dec
int
mov
mov
mov
js
sub
fdivrs
pop
mov
nop
daa
in
nop
scas
dec
push
dec
sub
decl
xor
repnz
add
inc
push
test
xchg
xor
cmp
jp
dec
je
shl
pop
aas
cmc
cmp
sahf
ds
push
cmp
mov
xchg
imul
mov
or
inc
mov
cmpsb
ret
push
jb
push
mov
outsb
loope
mov
mov
int3
pop
adc
ret
ss
out
pop
into
sub
cmpb
sbb
mov
inc
fs
popa
lahf
add
inc
fsubrl
push
dec
enter
inc
sbb
lods
in
fildll
cmp
aas
les
hlt
inc
testb
popa
lods
sub
fisubrs
sti
iret
sbb
int3
hlt
data16
gs
push
push
or
jo
rol
xor
jle
unpckhps
jl
aam
repz
lahf
dec
adc
sahf
sub
es
dec
and
dec
cwtl
loopne
mov
mov
out
sub
sub
icebp
orl
arpl
shrl
lds
loopne
enter
add
data16
lea
ss
les
add
mov
jo
jl
cli
cmp
lahf
stc
push
and
mov
daa
arpl
leave
testb
xchg
lock
les
pop
in
push
adc
ja
mov
stc
sub
aad
and
inc
fsubrl
sti
mov
or
cmc
xchg
add
push
add
jb
cltd
sub
lcall
sub
mov
mov
xor
cli
mov
fsubrs
xorl
cmpsl
sbb
ss
movsb
lds
negb
std
cmpsl
out
dec
adc
popa
clc
cmp
in
jg
mov
lods
mov
loop
pop
dec
mov
dec
lret
xchg
pusha
mov
and
mov
push
mov
shll
xchg
jp
stc
mov
and
add
jbe
mov
std
pop
or
sbb
jb
pop
iret
sahf
fmuls
pop
push
sub
fmull
push
mov
in
cmp
dec
stos
or
mov
stc
loopne
rcrb
loope
push
adc
dec
jmp
out
outsb
sbb
inc
arpl
mov
in
push
mov
and
notl
mov
mov
lds
movsl
not
jle
dec
pop
adc
shrb
mov
jp
scas
pop
xchg
inc
test
mov
add
mov
sbb
mov
ljmp
inc
or
dec
inc
fldcw
and
aam
cmpl
pop
and
adc
push
push
mov
movsl
test
inc
push
jns
loop
xchg
xchg
mov
jle
jp
xchg
sub
jl
outsb
mov
adc
mov
stos
and
xchg
mov
mov
pushaw
lds
xchg
sub
and
sub
xor
or
sbb
push
outsl
fisttps
mov
mov
test
pusha
lods
cmp
xchg
push
test
or
inc
lret
jns
rcrl
ja
lahf
inc
jnp
xor
cmc
repnz
sbb
jae
inc
in
xor
adc
mov
lock
insb
pop
ja
mov
push
mov
push
xchg
insl
adc
xor
sar
sahf
pop
sti
dec
dec
fildl
out
int3
pop
fdiv
fs
and
addb
adc
mov
or
mov
sahf
adc
subl
fs
data16
sub
xchg
data16
and
or
xchg
mov
jecxz
jns
popf
stos
es
rorl
sbb
jl
stos
sub
mov
jle
imul
mov
jmp
fucomp
pop
and
sbb
ss
jl
mov
jl
mov
lcall
and
sub
ficomps
in
js
lods
mov
and
addr16
pop
dec
data16
dec
mov
ljmp
xlat
loope
pop
push
dec
lock
jle
data16
dec
lcall
imul
imul
test
inc
jle
push
lods
or
sub
or
push
scas
sub
xor
inc
gs
fnstenv
lret
push
mov
jo
mov
out
je
push
adc
ja
sarl
sarl
pop
stos
add
int3
divb
push
lods
push
mov
jecxz
xorb
rorl
mov
cwtl
mov
loope
mov
xor
rcr
lcall
and
mov
fidivrl
out
mov
jno
leave
xlat
mov
iret
cmpl
mov
cmp
cld
out
push
fldl
out
adc
or
divb
inc
popa
aad
adc
push
pop
mov
adc
int
push
jmp
out
into
data16
imul
pop
jne
repnz
sub
out
int3
pop
adc
jb
mov
outsb
dec
pop
les
xor
nop
and
imul
push
mov
push
mov
std
xchg
pushf
fdivs
mov
push
dec
daa
jmp
push
xchg
hlt
mov
jmp
clc
adcl
and
push
mov
or
out
mov
sub
cmpsl
jp,pt
sarb
jns
out
and
push
jp
lahf
outsl
movsb
scas
push
lea
or
xor
mov
adc
fnsave
aad
fs
out
mov
adc
fbstp
xor
xlat
inc
aas
jl
jecxz
dec
mov
xchg
xor
fldenv
or
push
add
test
ljmp
ss
mov
inc
popf
xchg
fildl
jg
pop
leave
lock
data16
xor
lret
repz
push
push
push
cmp
cmp
xor
dec
loopne
js
cmp
xchg
sub
push
pop
mov
push
add
push
dec
cmp
stos
xor
add
dec
or
outsl
mov
push
les
shrb
inc
pop
inc
gs
mov
gs
xchg
jp
mov
rclb
inc
fnstenv
and
scas
xor
xor
lret
movsb
rcrl
sahf
sti
je
xchg
sub
inc
arpl
xor
add
jmp
aaa
fldpi
cwtl
addl
and
dec
imul
mov
das
sub
dec
int
iret
cmpsb
subl
fcmovnbe
test
stos
dec
les
xor
jmp
lret
shrl
ret
data16
push
cmp
adc
enter
adc
push
push
jle
jmp
je
ja
sbb
pushf
mov
push
mov
push
add
xchg
movl
and
iret
pop
sbb
ja
cmc
sbb
jns
popf
xchg
dec
sbb
cld
push
aaa
sbb
test
mov
dec
mov
shrl
out
sbb
xchg
dec
mov
nopl
adc
dec
jnp
xchg
mov
ret
cld
jne
mov
cwtl
loopne
xor
popa
rcr
xor
pop
push
loope
sbb
add
arpl
das
mov
mov
rorb
rcl
xchg
dec
test
test
lcall
mov
hlt
nop
inc
mov
out
int3
lret
dec
out
lret
lret
pushf
popa
mov
iret
fdivr
and
push
sub
jb
cmp
movsb
add
push
aaa
int3
mov
cli
and
mov
push
mov
jbe
in
mov
pop
adc
ja
fstl
xchg
sbb
add
movsl
jo
jmp
insl
pusha
stc
cmp
daa
cli
fisubl
pop
imul
mov
add
stos
ds
fsubs
mov
dec
filds
mov
dec
cli
inc
jle
mov
loope
stc
sub
repz
js
stos
adc
adc
push
out
push
dec
and
imul
pop
mov
movsb
cmp
add
add
jne
mov
inc
inc
mov
repz
jb
jg
mov
scas
adc
paddusw
scas
lcall
in
cmc
out
in
pushf
push
xor
shlb
lock
and
sbb
push
scas
loopne
rorl
push
in
cli
bound
ret
stos
cld
dec
dec
gs
sub
test
lahf
cmc
mov
or
inc
stos
jmp
jecxz
sti
ss
or
xorb
dec
movsb
ljmp
and
popf
sub
xor
xchg
mov
std
inc
cltd
movsl
push
std
pushf
add
ljmp
fwait
pop
stos
inc
xor
jle
cmpl
repnz
or
aas
push
fsts
and
push
add
and
dec
dec
dec
popa
adc
and
mov
lds
arpl
aad
sbb
xor
cli
scas
xor
pop
popf
lods
jp
mov
aam
and
mov
mov
daa
out
pop
inc
adc
dec
push
loope
fists
pop
or
push
sbb
push
cmc
pop
inc
xchg
out
pop
clc
nop
mov
out
stos
imul
cmp
add
leave
fsts
rol
adc
test
jb
aaa
ret
push
xor
xor
inc
sbb
fstl
into
xor
loop
mov
daa
out
lds
jo
stos
jae
je
addb
lods
mov
xor
scas
or
xchg
jns
lret
mov
sti
stos
pop
mov
inc
lret
mov
xor
push
pop
adc
dec
incl
ret
jle
fisubrl
inc
fs
ror
fistpll
gs
and
rol
sbb
enter
ret
dec
mov
push
fisttpll
enter
rcrb
inc
inc
jno
shrl
push
xchg
jno
insb
cmpb
and
es
stos
jno
xchg
xor
push
mov
jo
mov
jno
sbbl
outsl
or
jo
or
notl
fldt
jecxz
fmuls
adc
inc
enter
mov
cs
out
lds
push
test
dec
sarb
aas
clc
push
aaa
sti
sbbl
xor
enter
lods
repnz
ds
push
es
icebp
adc
xor
mov
or
mov
cmp
pop
jp
mov
imul
jb
xchg
adc
data16
sti
test
ss
jo
jle
hlt
shrl
mov
push
sbb
lcall
pop
test
adc
jo
adc
shl
jo
leave
jo
rorb
test
add
pop
lret
xor
fs
sub
cmp
push
imul
bound
fxch
loopne
lock
insb
addl
enter
rorl
out
out
mov
inc
push
out
iret
cltd
arpl
and
nop
xor
inc
stos
in
in
sti
pop
push
fdivrl
fldenv
setnp
mov
mov
mov
pop
les
dec
in
jmp
push
aaa
enter
shl
arpl
gs
call
loop
xor
xlat
xchg
or
mov
in
stc
push
jmp
push
inc
add
jne
adc
push
push
push
or
mov
jae
xor
iret
fdivs
cwtl
sub
inc
push
mov
xchg
aas
adc
sarb
out
push
or
jbe
scas
out
test
jmp
sbb
adc
jle
or
bound
xor
leave
sti
cmp
cs
inc
inc
ja
push
jmp
add
mov
imul
repz
xor
and
scas
icebp
andb
add
mov
mov
lret
shlb
insb
cmp
push
repnz
loope
cs
add
nop
inc
ret
shr
cmp
jmp
and
std
mov
adc
daa
cmp
cwtl
dec
pop
leave
imul
push
lds
lock
inc
fcoms
jo
add
repz
xchg
xor
xchg
jmp
cmp
inc
dec
xchg
mov
test
add
adc
xor
mov
in
pminub
mov
adc
je
addr16
std
jl
gs
sti
cwtl
pop
scas
ffree
xor
out
cld
mov
mulb
je
out
fmuls
cwtl
loope
mov
mov
loopne
mov
inc
adc
adc
adc
outsl
daa
aad
push
leave
or
out
bound
dec
xor
jmp
adc
mov
xor
dec
aas
jge
fs
or
movsb
lcall
dec
xor
jns
ss
dec
out
push
stc
in
out
mov
push
sbb
int
mov
ljmp
mov
jle
push
ljmp
cld
mov
push
inc
or
in
inc
test
rorl
stc
and
repnz
addb
nop
sbb
or
es
mov
mov
cmp
inc
ret
xorl
or
js
test
or
sbb
sahf
and
push
dec
mov
jno
sbb
rorl
test
incl
decb
jb
push
movsb
mov
daa
adc
out
add
lret
sub
pusha
adc
ss
es
call
fdivr
push
adc
fs
xor
pop
test
shlb
test
lods
inc
xlat
std
xorl
lret
popa
sbb
cmp
mov
cli
mov
lods
insl
cmpsl
ds
fldl
lret
neg
and
arpl
aaa
xchg
mov
cmp
insb
ret
sarb
push
sahf
mov
xchg
dec
pop
mov
lret
out
xchg
jnp
outsb
jp
xchg
addl
dec
fistpll
popf
addl
js
pop
and
mov
shl
rol
rorb
rorb
movsl
jmp
inc
mov
dec
mov
mov
xor
arpl
push
xchg
pushf
pop
push
shlb
das
in
popa
mov
inc
bound
shrl
stos
push
dec
xor
sarb
test
ss
das
push
pop
pop
cli
cmpsb
pop
lcall
pushf
andb
mov
pop
test
inc
push
mov
out
fs
xchg
jae
out
pop
ficoml
xchg
xor
adc
mov
jmp
pop
sbb
sub
jmp
or
hlt
addr16
mov
push
sbb
xchg
popl
popa
mov
sti
loopne
mov
scas
pop
insl
sahf
xchg
repz
test
or
sbb
adc
or
mov
mov
and
mov
mov
in
lret
es
pop
dec
sbbb
mov
lahf
adc
in
lods
lahf
xor
xor
pop
popa
cmpsl
and
call
jp
add
cld
push
or
or
outsl
jle
jge
lods
mov
add
lret
xlat
sbb
add
jno
and
xor
jp
subb
ret
mov
popa
and
jg
push
push
enter
aaa
inc
mov
ljmp
adc
mov
faddl
mov
inc
mov
fs
xchg
jge
hlt
xor
shrl
mov
mov
fsubr
ja
cmp
pop
jns
les
and
push
je
bswap
mov
mov
xorb
loop
das
fsubrl
push
sbb
add
adc
enter
mov
bound
xchg
repz
push
mov
inc
inc
fistpll
pushf
sar
cltd
adc
push
pop
xor
cmp
mov
ds
dec
hlt
xlat
sub
andb
pop
sbb
or
scas
jg
pop
pop
mov
insl
add
pushf
mov
insb
jecxz
cli
xchg
add
inc
mov
inc
iret
inc
or
dec
lods
ss
std
nop
mov
jg
fldl
sbb
sub
xor
mov
arpl
out
xor
cwtl
fimuls
movl
cltd
sub
aad
inc
adc
xor
out
inc
stos
push
or
inc
cld
adc
std
ss
aam
test
cli
dec
mov
fs
pusha
lcall
mov
push
imul
daa
xchg
dec
xor
std
test
inc
idivb
jle
enter
xor
xor
pop
cmc
dec
xor
inc
icebp
cmp
xchg
bound
dec
scas
outsb
mov
xor
push
pop
mov
mov
mov
push
mov
fcoml
inc
xlat
inc
pop
inc
fbld
ficompl
pop
out
cmp
in
pop
stos
jns
lcall
mov
jns
fsubs
sub
pop
jne
mulb
add
repnz
ror
xor
hlt
dec
lret
test
sub
and
dec
pop
inc
ror
incl
movsb
xchg
mov
sub
xchg
mov
push
and
into
in
test
sub
cmpsl
xchg
dec
jmp
or
jnp
dec
sbb
sbbb
push
sbb
mov
jge
adc
hlt
push
add
cmp
movsl
sub
mov
dec
pop
dec
imul
xor
repz
adc
xchg
mov
push
movups
int3
pop
int3
mov
stos
sub
mov
ja
aas
arpl
push
add
dec
mov
xchg
sbb
cmpsl
cmp
push
enter
xlat
or
xchg
repnz
fdivrs
sbb
lret
insl
jg
addr16
lods
rolb
mov
push
sub
or
xor
aaa
shrb
and
out
mov
popf
fs
sahf
call
xchg
mov
dec
loop
adc
roll
jb
and
or
cmovg
inc
out
lods
repz
lock
push
fdivl
sub
loop
nop
inc
mov
adc
push
test
out
sub
pop
aam
outsl
shlb
xchg
add
push
jnp
sub
aaa
mov
iret
arpl
adc
mov
xchg
sub
dec
aad
mov
pop
rcl
cmp
loop
mov
inc
mov
pop
outsb
jl
mov
jno
or
mov
les
jns
roll
fwait
xor
out
xor
and
imul
frstor
xchg
cmp
push
sbb
sbb
lret
mov
enter
mov
imul
into
cmp
cltd
jg
cmpl
mov
aaa
outsl
loope
mov
or
int3
mov
fisubl
das
cmp
or
cwtl
pusha
mov
cli
daa
add
mov
fsts
mov
sbb
mov
outsb
pop
mov
lcall
icebp
insb
imul
mov
mov
or
out
arpl
je
xor
push
sti
adc
cmpsl
in
pop
cmc
cmc
movsb
out
cmp
jge
scas
movsl
cmp
iret
add
dec
xchg
repnz
ret
push
or
xchg
push
iret
sub
inc
sti
out
rcrl
adc
ret
movsl
icebp
fwait
cmpl
or
jl
xor
inc
cltd
and
aam
xchg
mov
andl
pushf
mov
push
loop
lods
in
jl
sub
into
in
mov
push
leave
and
inc
jbe
cs
dec
inc
mov
cwtl
xor
mov
mov
push
or
xchg
pop
icebp
jle
test
mov
out
xor
mov
pop
std
loop
push
mov
pop
mov
sbb
les
jp
subb
sbb
xchg
fwait
ljmp
popf
nop
add
icebp
inc
adc
xor
je
dec
add
stos
shrb
test
lahf
jg
push
loope
lcall
and
hlt
int3
mov
sbb
imul
movsl
mov
pop
cmc
mov
add
out
enter
je
cmp
test
inc
stos
sub
cli
arpl
stc
adc
mov
dec
cmpsl
sub
in
shrl
add
add
pop
push
lcall
xlat
sub
and
mov
sub
aaa
into
push
sub
sbb
dec
mov
adc
add
popf
hlt
mov
add
les
lds
mov
fidivrs
cli
and
lcall
lods
pop
shl
into
fiaddl
imul
push
add
into
enter
sub
inc
incl
cmp
mull
mov
cmp
into
pop
test
stos
sub
push
or
mov
xor
scas
imul
jno
jno
pop
add
jecxz
pop
jne
fisubl
outsb
nop
daa
xchg
push
jp
sbb
stc
nop
jne
add
xor
inc
inc
push
jmp
inc
or
loope
xchg
scas
adc
arpl
push
icebp
pop
test
push
orb
pop
and
cs
dec
fldl
rolb
out
and
cltd
xchg
imul
lock
sbb
mov
fsubrs
cmp
gs
leave
push
jg,pn
jmp
ds
mov
cmp
stc
inc
popa
fimull
mov
jmp
mov
ret
adc
dec
imul
movsl
lock
aad
in
xor
lea
ror
adc
pop
lods
inc
loope
push
sub
pop
lock
jmp
jecxz
jo
mov
jae
lods
jmp
daa
push
add
out
fcmovne
ss
cwtl
das
cmp
pop
add
or
in
jl
sbb
int
add
dec
pop
pop
xchg
add
movsl
in
sbb
push
inc
pop
jmp
jbe
ret
flds
divl
mov
hlt
mov
jge
imul
rolb
insl
cwtl
mov
add
out
rorb
shl
xchg
cs
adc
or
xchg
lods
rcrl
popa
sti
sbb
repz
addl
add
mov
push
jmp
sbb
imul
inc
clc
orl
das
dec
scas
or
out
cmpsl
lahf
mov
test
loopne
jecxz
js
ja
subl
mov
push
mov
push
xor
sahf
pop
fdivp
mov
gs
mov
popf
and
push
inc
loope
xchg
inc
aas
inc
pushf
pop
sbb
jmp
cmp
lock
jno
mov
clc
and
call
hlt
sbb
popf
in
out
mov
lcall
iret
dec
and
adcb
jecxz
scas
mov
xchg
fildl
add
lret
cli
sbb
sbb
jle
insl
cmp
cmp
repz
or
sbb
outsb
dec
imul
mov
mov
sub
mov
sub
pusha
andb
dec
xchg
std
and
xor
mov
mov
lods
leave
cmp
mov
fdivp
fildl
leave
andl
jns
sbb
jl
pop
cmp
sbb
push
leave
sub
scas
jo
mov
jmp
aam
jg
pop
leave
fisttpll
sbb
ljmp
sbb
js
sub
repnz
fsubrs
sti
lret
es
xor
pop
out
mov
jmp
push
ljmp
jno
mov
rol
pop
shl
sbb
mov
xor
xor
xor
xchg
pop
gs
cpuid
sbb
xchg
sub
dec
jecxz
addr16
cmp
jmp
jne
mov
flds
lret
add
mov
pop
imul
push
aad
fistpl
cmp
cmp
or
repz
or
pop
icebp
int3
or
dec
pop
dec
ret
repz
aas
xor
mov
test
into
aam
je
mov
push
hlt
mov
add
ds
ss
pop
xchg
lahf
add
outsb
pop
cld
xor
sub
loopne
adc
out
popf
jno
shll
imul
adc
je
dec
add
and
jb
call
mov
divb
add
lcall
push
lods
sbb
push
sbb
imul
pop
ljmp
mov
lcall
adc
fistl
lods
dec
add
mov
gs
pushl
gs
gs
push
call
arpl
ljmp
mov
out
outsb
adc
add
insl
xor
popf
dec
lock
enter
cmp
cli
stos
mov
cmp
rcrb
jae
fbld
or
loop
mov
or
movsb
inc
int
fcmovu
bound
ss
and
add
jae
fisttpl
cmp
jo
subl
xchg
jle
mov
jnp
sub
push
ja
inc
pop
fsubrs
jecxz
cmpsb
test
ret
fwait
das
push
mov
fsubrl
inc
sub
jmp
aaa
mov
jl
adc
js
add
mov
mov
mov
nop
jbe
test
pop
divb
sarl
mov
inc
fcmovnbe
arpl
lea
popa
mov
jg
inc
jge
mov
data16
adc
push
inc
pop
mov
inc
xchg
subl
push
fsubrs
ror
jnp
xchg
gs
scas
adc
cs
inc
faddl
pop
cli
cmp
sbb
insl
lock
sbb
into
push
popf
arpl
ds
cmc
sbb
sub
popf
jecxz
xor
mov
jmp
lahf
rorl
icebp
xor
cmp
aad
or
mov
mov
sbb
repnz
lods
and
jp
sbbl
mov
lahf
push
insb
sbb
clc
aad
ljmp
add
in
fs
rcll
push
repnz
into
cmc
mov
pushf
adc
dec
adc
mov
sub
movsl
pop
pushf
push
into
jnp
pop
lods
jmp
xchg
outsb
jmp
test
push
stos
pop
ja
jl
mov
cmpsl
pop
adc
jae
sbb
inc
jb
aaa
cltd
loopne
ret
lods
lods
fcoml
mov
std
cltd
das
out
and
push
mov
out
aaa
in
push
inc
lret
hlt
outsl
and
sbb
cwtl
pop
testb
rcll
fisubs
add
push
pop
sub
mov
xchg
mov
sub
pop
adc
add
xor
add
add
daa
sahf
mov
sbb
push
mov
jno
xor
add
lcall
inc
or
xor
inc
fcomi
test
mov
mov
aam
adc
jbe
mov
mov
xchg
testb
shll
sbb
outsb
shl
dec
add
lods
inc
orl
loope
lock
outsl
adc
mulb
test
dec
xor
sahf
faddp
push
inc
enter
sbb
fsts
mov
and
sub
sub
mov
sbb
dec
sar
out
pop
out
cmp
pop
add
or
cmp
loop
xorb
push
and
outsl
xor
stos
push
andb
fwait
outsb
mov
clc
lds
mov
pop
xor
mov
and
mov
stos
inc
addr16
push
inc
dec
pop
xorl
xchg
incb
cmp
das
roll
add
push
mov
loop
sub
loopne
adc
xor
mov
aad
movsb
and
and
ds
jg
add
cmpsl
ficompl
sbbl
add
jl
pop
pop
jg
pop
fwait
loop
or
and
mov
pop
rcrl
lods
xchg
stos
mov
icebp
adc
ror
fisubrs
dec
fdivl
cs
fstpt
push
push
mov
in
fstl
lcall
rcl
repnz
add
push
mov
outsb
xchg
cltd
fisttpll
mov
inc
js
shll
daa
dec
fisttps
stc
hlt
and
dec
call
sahf
cmpsb
and
int
add
xor
iret
subl
xchg
hlt
cmc
add
xor
repz
imul
fcoml
scas
fisubrl
ds
mov
jl
push
out
push
cmp
shrl
xlat
pop
es
ficoms
push
add
imul
push
jp
pop
test
into
andl
mov
aas
imul
pop
push
loop
dec
testb
mov
push
or
and
push
cmp
jbe
decb
leave
shll
dec
into
cld
iret
jle
mov
jg
fmuls
or
ja
jmp
dec
add
bound
sbb
rcrb
adc
inc
test
in
xchg
mov
out
out
jne
sub
leave
dec
or
jl
mov
icebp
adc
fiadds
lods
sbb
sub
negb
cli
fisubrl
inc
test
movsb
xchg
dec
dec
popf
jnp
pop
xchg
repnz
filds
aad
std
push
mov
ds
lods
int
mov
hlt
sbb
and
pusha
lods
xor
in
jno
adc
hlt
es
sbb
cmpsb
sbb
ljmp
popf
push
icebp
xchg
xchg
cli
adc
fcomps
sub
cld
xchg
repnz
movsl
addr16
mov
add
stos
sub
pop
mov
and
fidivl
dec
fisttpll
stos
ret
xchg
sarl
scas
mov
in
sbb
mov
xlat
sti
fildl
and
pushf
loopne
inc
pop
xchg
push
jns
cmpsb
sub
mov
mov
add
nop
mov
push
sahf
mov
rol
xchg
mov
add
idivb
push
push
insl
pushf
jle
repnz
jecxz
cmp
push
paddusw
mov
fisubs
sub
leave
fcmovnu
jl
ret
daa
ja
fwait
mov
xchg
mov
inc
inc
je
mov
fisttps
inc
sbb
adc
xchg
xor
and
cmp
inc
cli
leave
xor
or
cmp
scas
dec
ja
jl
sbb
jl
pop
sub
pushf
and
inc
sub
lcall
addl
dec
jge
xor
lds
add
data16
push
popf
cwtl
dec
in
rol
pop
pop
jmp
mov
sub
mov
les
cwtl
clc
dec
inc
out
sub
mov
pop
shrl
in
cmpsb
cmp
ja
add
fistpll
sub
xchg
xlat
daa
leave
sbb
dec
imul
cmp
repz
fcompl
sub
fcmovnbe
and
push
add
iret
dec
gs
and
lahf
push
test
pop
in
push
push
shl
dec
pushf
stos
movsl
icebp
cltd
pop
and
ss
cmp
mov
popf
aam
sub
sub
in
add
clc
aas
sub
jb
jmp
test
mov
sbb
repz
jp
push
cmp
pop
xchg
mov
add
cwtl
push
test
mov
jge
shrl
inc
pop
add
out
xchg
fst
lods
mov
decb
sbb
std
cli
adc
mov
repz
int3
dec
pop
into
cmp
xchg
or
repnz
cmp
dec
or
pop
inc
loop
xchg
cmp
imul
imul
popa
add
jbe
imulb
push
out
mov
push
mov
ljmp
mov
and
cmpsl
testb
add
rcl
xchg
mov
fxch
in
adc
adc
jb
jg
and
jecxz
mov
loopne
fdiv
pusha
sti
xchg
jg
leave
fdivr
and
pop
decl
jns
js
and
mov
mov
std
jo
pop
scas
ret
jmp
lahf
rorb
and
stc
ljmp
das
or
xchg
mov
jb
dec
in
push
and
nop
bound
jmp
adcl
cmp
aad
andl
daa
popa
les
xchg
mov
jbe
ret
sub
mov
frstor
sbb
dec
jmp
jecxz
jmp
iret
loope
stc
mulb
push
stos
pop
mov
bts
xlat
xor
adc
into
ret
pop
out
cld
lods
subb
sub
outsb
inc
mov
sub
fnstenv
or
adc
outsl
mov
mov
and
int
popa
jmp
jmp
pushf
lods
push
jo
test
jle
adc
inc
jno
xor
out
xor
cltd
push
or
mov
or
mov
adc
je,pt
cmp
add
inc
lea
aad
subl
fstpl
cld
pop
insb
rcr
and
jl
cs
sub
xchg
imul
cmp
adc
xchg
ret
sbb
push
mov
dec
xchg
jno
xor
hlt
mov
dec
aaa
mov
add
cwtl
test
mov
stos
js
dec
jmp
pop
movsl
lcall
test
jmp
mov
pop
int3
aaa
ljmp
jo
insb
shll
sahf
es
in
test
jp
fstpl
jo
imul
jl
test
jl
rorl
push
lahf
jns
outsl
push
add
mov
mov
mov
xlat
pop
testb
or
add
in
test
fsubrs
xlat
pop
inc
or
fimuls
stos
gs
fsubl
pop
cli
adc
lret
jb
in
outsb
fldl2e
add
or
aaa
lods
jmp
mov
jns
dec
stos
and
mov
push
mov
push
jne
sbb
sub
and
jle
out
lret
bnd
xor
mov
loopne
mov
mov
imul
enter
xchg
adc
sti
outsl
fstps
out
scas
xor
cmpsl
push
out
scas
inc
pop
pop
lods
sub
sbb
or
aad
insl
ret
adc
jecxz
xor
push
subb
push
cmpsl
mov
aas
jbe
cs
push
mov
in
fs
xor
cmpsb
test
mov
cmp
in
xlat
xchg
push
pop
fistl
test
fsubl
jle
cmpsb
icebp
pop
outsb
fstps
xor
pusha
add
pop
push
dec
rorl
dec
ss
mov
mov
in
fstl
push
cltd
icebp
jge
call
dec
leave
outsl
adc
cltd
mov
adc
imull
push
push
push
rol
jl
pop
cmp
movsl
iret
gs
mov
in
iret
mov
outsl
in
mov
add
add
dec
jecxz
nop
cmp
std
lcall
psubusb
add
xchg
or
cs
in
popf
ja
cmpsl
add
pop
jp
dec
aad
cmp
clc
and
jp
push
aas
sti
pop
test
insb
icebp
mov
xor
xlat
outsb
xchg
mov
push
insl
xrelease
mov
data16
cwtl
and
enter
sub
stc
lahf
mov
xchg
cs
in
iret
rcrb
aad
push
mov
dec
test
push
xchg
rolb
sbb
xor
dec
gs
jns
arpl
lcall
in
jge
mov
mov
adc
and
pusha
cld
adcb
sbb
divb
call
xchg
into
js
mov
push
in
or
test
dec
push
xor
pop
lret
repnz
scas
jl
dec
push
push
aad
mov
or
int3
push
aad
or
cmp
add
js
dec
and
push
inc
sahf
adc
pop
es
cmp
pop
jnp
movsb
test
sub
insb
sub
jns
xchg
dec
mov
jl
call
pop
dec
fistps
je
mov
aas
adc
mov
jae
xor
imul
and
test
xchg
icebp
pop
push
mov
xchg
out
mov
jo
jle
add
fbld
bound
and
mov
xchg
pop
jg
cpuid
mov
mov
xlat
jmp
outsb
inc
dec
lcall
lret
xlat
outsb
iret
fistl
xlat
es
sbb
sbb
enter
add
loop
mov
ffreep
aad
idivb
pop
lds
shll
jnp
add
xchg
decb
aas
xor
jns
sub
sub
movsl
jb
xlat
and
jno
mov
inc
jmp
leave
cmp
mov
mov
insl
ljmp
out
and
xor
ss
mov
inc
mov
shr
push
mov
mov
cli
sti
fcompl
xchg
push
bound
movsl
jl
sbbl
sbb
imul
add
in
pop
mov
dec
mov
or
cmp
and
and
push
popl
fidivrl
pop
xor
scas
add
out
loop
jns
adc
mov
jle
ljmp
mov
adc
jae
out
cld
add
add
rcrl
sahf
lcall
ljmp
pop
push
std
lods
aas
dec
jae
jecxz
mov
push
daa
push
fsubrl
ret
movsl
pushf
pop
inc
sub
js
adc
es
fnstenv
jmp
jp
outsb
aaa
sbbl
sbb
xor
scas
mov
mov
movsb
mov
ret
test
fcomip
hlt
arpl
out
sti
out
ret
loop
iret
daa
xchg
jmp
or
and
fdivl
dec
std
inc
mov
pop
mov
mov
iret
jno
cmpsb
mov
xchg
cld
dec
lock
int3
arpl
inc
xlat
outsb
pop
push
outsl
pop
jl
sbb
fnstenv
js
fists
jge
ss
xlat
xchg
sbb
fsubrs
or
pop
mov
int3
and
ljmp
xchg
mov
cpuid
cld
xor
jmp
add
or
xor
jae
mov
xchg
sub
or
xor
mov
pusha
pop
cmpsl
lahf
cmp
iret
int
ljmp
pop
ljmp
out
mov
jns
xorb
inc
dec
sbb
lds
pop
xchg
adc
sbb
adc
mov
cltd
insb
add
pop
adc
push
sbb
aaa
pop
pop
xor
pop
out
fwait
loope
fucom
in
aaa
rcl
push
loopne
insl
lret
cli
fidivl
loopne
mov
pop
stc
sbb
pop
jl
mov
jnp
test
outsb
jp
lcall
ret
inc
fwait
mov
in
mov
sub
imul
jmp
push
mov
sahf
sti
mov
hlt
repnz
cmp
rcrb
xlat
push
aad
inc
shrl
lods
mov
sbbb
mov
das
xor
test
mov
addr16
sar
shl
imul
dec
mov
push
arpl
xor
insl
in
sbb
mov
mov
fldcw
xor
or
ja
jle
add
out
or
sti
mov
xor
pushf
daa
fsubrl
cmp
bound
sbb
adc
ss
sbb
or
movsl
sbb
lret
xchg
sub
idivl
mov
inc
inc
add
jle
fidivl
lahf
pop
adc
push
icebp
sbb
pusha
adc
add
cs
xchg
jbe
xor
push
cmpsb
shlb
inc
mov
aaa
sub
cmp
xor
andb
push
gs
sub
or
addr16
mov
fldl
cmp
and
and
iret
push
lods
add
outsl
stos
xor
rclb
inc
loope
mov
and
pop
add
or
arpl
sub
leave
adcl
and
ffreep
add
repz
cli
mov
arpl
outsb
inc
daa
adc
push
cmc
aaa
cmp
pop
dec
lods
cmc
inc
fisubl
lret
inc
int3
jno
adc
jp
dec
pop
jle
push
push
dec
mov
subb
enter
cmp
pusha
daa
aaa
flds
shll
out
test
inc
setp
push
push
cmp
out
fs
xor
jg
test
or
cs
fnstcw
loopne
clc
sbb
add
aas
adc
pop
std
xor
subb
clc
and
push
add
notl
popa
mov
mov
stos
arpl
push
push
adc
mov
sub
gs
mov
sti
adc
sub
and
std
and
outsb
sbb
and
dec
pop
inc
aas
mov
je,pt
or
rorl
stc
clc
scas
xchg
cmpsl
movsl
test
pop
pop
ret
xlat
and
and
add
mov
cmp
rclb
repz
push
popa
enter
add
bswap
leave
mov
pop
mov
int3
fidivrs
into
ficompl
shl
cmp
and
enter
test
ljmp
and
xor
outsb
jle
adc
push
in
int3
shrl
push
in
je
sbb
mov
scas
out
in
sbb
mov
test
inc
iret
lahf
in
jnp
mov
mov
xor
mov
in
clc
dec
xor
dec
cmpsl
add
rcl
aad
pop
cmpsl
daa
and
mov
ljmp
sahf
xor
mov
push
fisttpl
push
js
data16
sub
ret
dec
adc
sbb
subl
movsl
ds
xlat
addr16
lret
fnstsw
jo
xchg
sahf
das
ljmp
in
lcall
lret
clc
and
xchg
pop
xor
mov
sub
xlat
and
leave
aad
testb
test
std
pop
imul
xchg
in
push
iret
inc
subb
sti
xor
leave
icebp
sbb
test
xchg
add
inc
mov
adc
cli
adcb
call
fcomp
and
mov
cmp
fistps
inc
andb
test
push
pop
adc
jns
addr16
mov
dec
add
cmpsl
sti
icebp
add
imul
and
jl
data16
add
cmp
pop
pop
lds
xor
add
mov
pop
mov
ret
loope
adc
mov
pop
stos
lods
cwtl
in
adc
mov
insb
aaa
into
cltd
and
int3
movsb
lock
and
jns
cmp
jecxz
dec
fwait
movsb
or
add
in
sbb
ja
mov
add
sub
inc
out
jge
add
mov
push
sbb
sub
lret
popa
orl
hlt
inc
push
enter
fmul
lods
xchg
mov
int3
jge
rcrb
mov
mov
test
push
cmpsl
cwtl
call
add
pop
mov
mov
inc
push
xor
pop
jecxz
xchg
cmp
jp
imul
loopne
adc
xchg
cmc
fwait
jmp
and
imul
or
adc
push
jne
pop
jmp
inc
push
xchg
ret
jnp
xor
or
enter
mov
push
inc
int
add
jle
push
call
add
pop
and
mov
nop
cmpsl
xor
rcrl
sbbb
jl,pn
xlat
and
fidivl
aam
cmpsb
repz
dec
mov
pop
push
cmp
sbbb
test
jle
fwait
jnp
mov
sar
lret
leave
xchg
push
cwtl
pusha
lods
mov
xor
std
push
and
les
adc
mov
out
out
xchg
cmp
mov
mov
stos
cmp
in
mov
mov
pop
xor
mov
fwait
repnz
mov
adc
repnz
test
je
xchg
jecxz
test
jmp
loopne
std
out
push
fcom
xor
sti
mov
loopne
add
adcb
loop
fs
cli
scas
aaa
mov
movb
mov
test
xor
pop
cmp
rcl
push
loopne
ds
mov
insb
sbb
lea
sarb
lahf
loope
popl
ja
lcall
ss
pop
repz
xchg
sub
lds
sti
jp
into
jnp
pop
mov
and
sub
ss
mov
insl
pop
push
adc
or
fstps
enter
cmc
mov
sbb
lods
add
adc
mov
xchg
pop
adc
mov
in
rclb
dec
mov
pop
popf
inc
shll
mov
je
inc
stc
xchg
xchg
add
movlps
in
scas
and
loope
dec
inc
imul
pop
daa
jno
es
cmpsb
sub
aam
fwait
je
adc
mov
ljmp
jecxz
xor
inc
lret
std
cltd
dec
call
adc
xor
push
cmp
std
or
and
push
movsl
pop
cli
sub
repnz
lret
sarl
add
pushl
cmpsb
and
mov
mov
in
mov
jne
mov
addr16
fiadds
imul
or
mov
testb
and
jle
cld
pop
xor
pop
push
in
cmp
mov
flds
test
push
inc
push
or
or
jb,pn
mov
jb
xor
scas
lret
bound
xor
mov
lods
stos
in
push
xor
movsb
repnz
mov
adc
sub
jge
dec
lods
xor
les
dec
test
das
scas
repnz
in
or
scas
pusha
cmp
mov
fisubrs
pusha
ret
inc
push
in
push
sbb
mov
mov
pushl
icebp
mov
jl
pop
mov
xor
sahf
push
or
lods
dec
loopne
jns
outsb
ds
pop
mov
in
xor
inc
jl
xlat
xchg
lret
psubusw
repnz
cmp
lret
sub
push
adcl
shrb
and
movsl
aas
int3
push
dec
mov
and
add
popa
mov
add
adc
push
cmp
mov
and
popf
int3
xchg
add
pop
inc
ficompl
sbb
je
or
xchg
lea
in
jmp
mov
mov
stos
push
lcall
cwtl
test
jg
pop
mov
pop
xchg
push
pop
iret
pop
pop
adc
dec
dec
sub
xchg
aam
sbb
repz
xchg
sub
push
jbe
iret
push
and
packuswb
adc
fcompl
dec
call
pop
push
outsb
loope
repz
and
sub
es
negl
xor
idivl
mov
enter
jg
scas
sbb
lret
xchg
and
cs
jg
and
mov
in
cmp
dec
iret
dec
and
in
sti
cmp
testl
inc
fwait
nop
call
scas
cltd
in
dec
test
cwtl
pop
xor
cmp
hlt
push
in
pop
add
cmp
jnp
test
add
sbb
mov
rolb
into
repz
and
jno
imul
sidtl
lods
xchg
mov
rcll
push
inc
dec
add
fnstsw
imul
and
iret
popa
out
mov
fucomi
add
fst
sbb
xchg
outsl
dec
sarl
lahf
xor
mov
xor
mov
sub
inc
or
mov
and
insb
std
pop
lds
push
mov
ficoml
sti
imul
icebp
mov
imul
sbb
fisttps
sbbb
dec
push
inc
pop
lret
sbb
jbe
pusha
lock
jb
xor
or
sbb
push
sbbl
dec
bound
jb
xorl
push
pop
lock
in
pushf
push
ja
cmp
inc
pushf
add
jecxz
inc
aas
or
pop
push
lea
gs
lret
loope
jns
or
shll
aaa
stos
xchg
pop
mov
aam
test
int3
flds
daa
pusha
push
scas
push
das
subb
mov
int3
enter
scas
fidivs
sbb
outsb
arpl
mov
adc
pop
push
push
pop
cs
lea
das
mov
xlat
push
stos
mov
adc
flds
scas
adc
loope
or
std
lods
stc
or
daa
in
test
pop
mov
xchg
imul
add
and
inc
pop
ret
xchg
xor
ss
stc
xor
mov
fnstenv
mulb
or
sbb
nopl
push
jne
mov
inc
dec
pop
leave
cs
xor
outsb
test
icebp
out
dec
aam
out
lret
adc
lods
xchg
clc
jbe
mov
movb
test
mov
or
out
adc
lock
clc
aam
lret
cs
pop
shll
and
popa
ljmp
stc
dec
outsb
popf
or
sarb
stc
mov
pushf
les
pop
scas
and
es
push
sub
lods
std
jo
fistps
xchg
stos
inc
pop
jp
shr
fstpt
and
xlat
mov
push
call
dec
inc
stos
push
stc
adc
lea
pop
and
ret
std
pop
add
sub
pop
cwtl
cld
cmp
cs
loope
movsb
dec
je
jecxz
int3
lret
cmp
mov
addb
lret
xor
and
divl
inc
and
mov
loopne
int
pop
std
add
in
jmp
je
cmp
je
sbb
cltd
jno
mov
mov
je
lret
add
test
jns
lret
xchg
sub
testl
in
pusha
adc
stos
fcomp
add
imull
movsl
add
sub
cmp
inc
mov
lret
leave
jge
mov
sbb
fs
test
sub
nop
movsb
sub
nop
mov
rorl
xor
das
addr16
jle
pop
in
cmp
shl
xor
mov
pop
cmp
add
adc
jbe
sarl
imul
cltd
sub
xabort
mov
add
mov
arpl
bound
xor
sub
lcall
cmp
push
and
das
push
jo
jno
testl
mov
daa
les
mov
or
mov
je
pop
mov
fcompl
dec
pop
mov
sbb
outsb
pop
xchg
iret
push
or
mov
sbb
lret
jae
imul
popf
inc
in
cmp
dec
inc
in
shr
pusha
adc
in
or
inc
pop
jne
cwtl
subl
pop
add
andb
in
addl
or
mov
fcomip
bound
pop
popf
xor
or
jg
mov
lea
and
rclb
sti
decl
dec
rorb
pop
push
sub
rcrb
sbb
int3
iret
mov
mov
clc
and
fidivrs
sub
fwait
das
ljmp
inc
adc
jl
scas
inc
mov
push
mov
or
dec
loope
pop
in
insl
cld
out
add
inc
sub
sbb
out
cltd
lods
jg
fwait
sub
inc
loop
xor
fistpll
out
xor
dec
enter
adcl
inc
mov
pop
cs
cmp
xchg
cltd
cmpsl
ret
lea
mov
or
inc
test
pusha
xchg
pop
insb
in
xlat
outsl
aas
push
hlt
int3
xor
mov
mov
cmp
mov
test
cmovs
xchg
xor
sub
xchg
mov
imul
loopne
and
data16
push
mov
leave
bound
adcb
test
jo
in
sub
leave
xor
aam
dec
in
cli
xchg
aas
pop
push
int3
fstpl
mov
jae
dec
and
dec
pop
ja
jb
pop
cmp
fs
js
mov
repz
push
push
cli
fistpll
push
repz
test
popf
xor
lret
sub
inc
sub
fcomp
dec
lret
cli
or
paddsw
push
lahf
pop
dec
cmc
in
xchg
cmp
xor
repnz
insb
inc
test
mov
and
push
pop
clc
je
cmp
xor
or
mov
jg
shrb
xchg
int
xor
inc
xlat
dec
push
dec
lahf
or
cmp
sub
gs
int3
dec
cwtl
incl
int3
pushf
cmp
dec
add
sub
mov
pop
dec
and
cmp
mov
jno
leave
push
xchg
fsub
aaa
sub
fdivl
push
xchg
dec
cmp
push
or
fdiv
insb
imul
pop
inc
jbe
push
stos
xchg
fisubl
mov
or
int3
xor
outsl
loop
shl
jnp
in
xlat
dec
mov
dec
es
fldcw
mov
xor
xchg
add
sub
mov
scas
jge
mov
mov
push
mov
mov
pushf
sbb
or
stc
loop
mov
mov
scas
shlb
cmp
stos
jns
insl
lods
pop
push
das
add
xchg
mov
mov
repnz
lcall
dec
loope
mov
push
aaa
push
add
fisttpll
jno
inc
mov
imul
mov
nop
addr16
icebp
xchg
pop
inc
lcall
add
test
pop
mov
sbb
out
shll
pop
or
adc
inc
repz
dec
gs
into
jo
int3
adc
mov
movsl
lock
lret
ror
push
gs
std
mov
xor
cmpsl
rcrl
repnz
nop
popf
cmp
dec
cmp
jmp
and
dec
in
jl
jnp
pop
jle
jae
popa
push
push
ja
cmpl
cmc
leave
mov
mov
ds
insl
jmp
lcall
sub
push
xchg
adc
in
mov
push
adc
sahf
push
jl
aad
push
std
pop
adc
sub
push
mov
cmc
xorl
enter
in
cmp
out
call
xchg
stos
ljmp
xchg
mov
iret
adc
xchg
pop
mov
sub
stos
inc
dec
mov
je
cmp
dec
and
xor
fiadds
cmp
mov
jno
insb
lea
jle
pop
mov
inc
imul
dec
jae
xchg
cmp
xor
scas
push
mov
int3
or
in
or
sub
push
cltd
xor
xchg
sub
jmp
aas
jp
out
jp
rcrb
jno
insl
mov
pop
lds
popa
cmp
sbb
adc
out
out
xor
cltd
in
push
xor
pop
sbb
clc
push
add
mov
inc
cli
es
cli
push
mov
or
ds
and
xchg
cmp
xor
sub
and
fisubs
push
add
jne
repz
and
jg
loop
cwtl
adc
mov
testl
out
cmp
leave
add
aaa
mov
sti
int3
fisubl
inc
mov
jne
push
in
cltd
xchg
insb
add
push
in
xchg
add
sub
test
add
add
sahf
push
xlat
dec
popa
nop
aas
stc
jo
jl
rcll
popf
aaa
repnz
ds
outsl
ljmp
xchg
fsubs
into
and
mov
sub
cmp
inc
loopne
pop
bound
adc
lea
out
xor
or
push
push
xchg
test
sub
dec
mov
add
jmp
or
and
pop
dec
lods
inc
jg
insl
sbb
adc
xchg
inc
mov
push
add
out
mov
mov
xor
hlt
adc
cmp
dec
out
pop
mov
mov
push
scas
inc
inc
fucomip
inc
lods
and
dec
pop
sbbl
mov
out
das
inc
push
mov
in
jne
and
aam
inc
pop
sub
cmp
cmp
pop
stos
pop
jg
ja
fs
popf
outsl
popa
decb
push
shl
repz
mov
fcoms
fisubrl
test
fmul
sub
in
dec
mov
rcl
pop
or
in
mov
sub
fbld
xchg
mov
lahf
stc
test
mov
test
sub
xchg
add
call
pop
xchg
xchg
test
jp
aaa
test
push
jno
fstpt
movsb
imul
sbb
jb
test
pop
pop
test
push
popf
ret
sar
std
mov
inc
fcompl
enter
mov
cmp
and
inc
pop
outsl
ffreep
mov
rorb
push
ret
pop
sbb
and
call
lea
add
daa
inc
clc
jl
xchg
add
repz
or
adc
leave
pop
inc
jns
xchg
dec
es
aad
roll
loopne
xor
testl
xchg
xor
push
cmp
push
out
stos
xlat
mov
notb
mov
dec
jae
nop
sub
fs
mov
dec
xorb
mov
and
push
mov
mov
push
mov
hlt
mov
rorb
lret
imul
xor
mov
insb
cmp
push
neg
inc
std
call
mov
mov
cltd
dec
pusha
inc
jo
or
pop
mov
and
or
ss
test
cmp
lds
push
xchg
pop
push
push
imul
int3
sub
insl
cmp
jnp
fxch
jnp
pop
jno
pushf
push
inc
cmpsl
loop
inc
dec
jns
fistl
dec
pop
ja
adcb
gs
xor
leave
pop
icebp
and
jne
mov
inc
push
pop
fdivl
jl
popf
sahf
sti
xchg
shl
add
mov
pmulhw
fisttpll
iret
fimull
add
cmp
shr
sbb
fs
mov
pop
das
pop
mov
and
jne
mov
test
dec
pop
pop
or
push
mov
jg
or
insb
push
adc
mov
jl
leave
inc
psllq
push
push
jecxz
push
inc
shlb
ds
mov
lods
fisubs
mov
loope
jg
jl
pop
icebp
inc
add
mov
fisubrs
jge
push
jnp
xor
insb
jg
test
jmp
add
adc
cs
fwait
mov
adc
push
inc
pop
in
mov
movsb
shr
aad
aas
aad
adc
or
jle
iret
xor
es
andb
and
xchg
lret
inc
xlat
sti
lock
push
jbe
pop
cmc
push
cwtl
xchg
mov
outsl
mov
pop
movsb
pop
push
fisttps
jns
ss
cmc
mov
fwait
cltd
sbb
adc
push
clc
mov
mov
aas
testl
lea
sub
pop
and
cmpsb
movsb
es
ffreep
lds
adc
mov
les
xchg
jo
notl
cli
xchg
push
jg
xor
ss
or
mov
fadd
mov
cli
data16
dec
fwait
sbb
fadds
push
repnz
mov
stc
out
lret
mov
incb
enter
cmp
cld
loop
push
xchg
faddl
test
jmp
or
mov
mov
sahf
in
cld
xlat
add
push
mov
leave
ret
add
in
cmp
les
or
and
inc
jl
jne
cmp
jmp
adc
add
hlt
into
mov
shlb
mov
aad
in
cmpl
or
pop
sub
stc
sub
mov
mov
pop
iret
subb
nop
mov
add
ret
mov
loopne
add
loopne
dec
pop
sub
cmp
aaa
jecxz
jp
pop
in
lea
iret
adc
add
jl
and
int
cmp
push
int
pop
iret
sbb
xchg
lret
inc
out
dec
inc
pop
sbb
inc
loopne
iret
fst
or
data16
pop
cmpsl
aam
sub
add
inc
repz
jecxz
push
xlat
ret
push
fildll
push
jno
ljmp
scas
cmp
xchg
ljmp
sub
out
aad
mov
jecxz
cs
xchg
or
movsl
sbb
cwtl
push
iret
gs
je
adc
int3
shlb
xchg
daa
add
arpl
je
call
arpl
les
fildll
in
imul
push
cmp
mov
jle
and
dec
pop
push
inc
fcmovu
imulb
jb
flds
add
cltd
in
mov
pop
mov
add
shrb
ja
repnz
lea
pop
dec
jo
stc
lods
dec
loope
sbb
xchg
jg
mov
outsl
inc
subb
adcl
fs
out
stc
pop
test
xor
pop
imulb
adc
push
mov
push
in
cmp
ss
jns
or
lds
es
push
roll
lret
push
jno
out
sbb
scas
les
push
aam
and
hlt
pop
hlt
and
jb
cmp
jge
into
inc
mov
loop
outsb
adc
xor
sub
xchg
and
out
test
xor
cld
or
sahf
mov
lock
xor
out
lcall
mov
mov
xchg
pop
pop
cs
mov
push
test
lods
rorl
lahf
std
sub
es
sub
dec
push
pusha
jb
xchg
imul
mov
mov
sbb
aaa
stos
cmpsl
loop
clc
jno
arpl
sbb
push
mov
mov
mov
add
lret
into
inc
movsl
mov
int3
je
test
dec
dec
pop
cwtl
icebp
popa
mov
in
push
fidivrl
dec
or
std
push
xchg
and
out
and
insl
sub
shrl
sbb
pop
cmp
cmpsb
pop
movsb
dec
notb
insl
jmp
jae
mov
pop
and
lods
xchg
sarb
cmc
adc
mov
leave
outsb
jo
cmp
cmc
cmp
addr16
in
rcrb
xlat
pop
loopne
or
sbb
sub
push
adc
push
jmp
jg
and
xor
je
pop
int
dec
dec
sti
adc
mov
pop
stc
stc
xchg
pop
push
mov
jmp
jns
shll
xchg
in
fmull
into
stos
inc
or
pop
xchg
iret
cmp
repz
loope
add
mov
fmull
pushf
popa
es
mov
jae
jae
lods
ljmp
testb
xchg
fstpl
mov
icebp
movsb
lahf
sahf
sub
add
ljmp
jno
and
mov
aaa
mov
mov
ja
ss
pop
scas
xor
xchg
push
add
popa
adc
sbb
or
mov
mov
mov
pop
mov
sub
loopne
int
loop
and
jns
adc
and
std
pop
inc
fistpl
push
les
mov
jmp
das
mov
jne
out
inc
add
and
test
cmp
sbb
mov
pop
xor
xchg
imul
lock
loopne
mov
cld
int3
sub
loope
scas
daa
lods
int
loop
test
jge
sbb
ror
stc
or
mov
fisttps
dec
cmp
jbe
arpl
icebp
dec
lods
adc
pop
arpl
xchg
jp
fildll
int
jge
xor
adc
and
loop
ret
hlt
add
popf
aam
cmc
and
or
sub
and
outsl
fsubp
ja
xchg
mov
mov
jo
xchg
mov
loopne
fdivp
sbb
and
fsubrs
pop
add
push
sbb
adc
jne
popa
sti
pop
aas
clc
aad
adcb
xchg
call
fstpt
mov
lret
adc
pushf
pop
add
sbb
or
xchg
sarl
pop
sub
fnstcw
sbb
cmc
mov
inc
int3
push
push
cmp
sbb
fistpll
pop
movsb
mov
orl
data16
ja
cli
fwait
jmp
mov
inc
xor
in
pop
cmp
dec
lods
lcall
out
dec
dec
jl
and
sbbb
mov
fsubp
and
jecxz
mov
or
pop
mov
sbb
dec
mov
fimuls
sbb
xor
mov
or
std
mov
fs
xor
lea
sti
call
and
lea
dec
or
xchg
movsb
mov
test
fdivr
cmpl
jp
test
enter
cmp
out
adc
jmp
pushf
mov
xchg
dec
push
in
sbb
or
or
and
movsb
mov
faddl
push
inc
call
xchg
es
hlt
mov
pop
fcoms
int3
or
fs
and
xchg
inc
pop
or
xor
divl
jle
and
rol
repnz
or
push
out
pop
dec
lret
int
xchg
jnp
sbbb
arpl
scas
int
dec
fistpl
inc
out
sbb
add
mul
mov
sub
test
push
push
cmpsb
cmp
adc
pop
lcall
scas
icebp
cmp
ret
outsl
jns
fisubrl
dec
pop
repz
lds
insb
or
cwtl
fiaddl
out
jnp
add
imul
mov
fwait
adc
jno
inc
xor
dec
iret
adc
dec
in
jl
sbb
fstps
push
nop
or
add
jnp
cmp
loopne
xchg
ret
cltd
mov
xchg
add
adc
xchg
mov
mov
lea
mov
lcall
pop
jo
add
ret
or
sub
sub
iret
push
mov
js
pop
and
add
cltd
sti
sti
xchg
sub
ret
jae
mov
inc
fnsave
pop
pop
dec
mov
movsl
in
pop
iret
push
pop
sbb
cmp
sbb
rorb
fwait
mov
loopne
nop
xchg
stos
xchg
inc
fdivl
xchg
fnstsw
mov
popf
fs
int
lea
outsb
mov
xchg
dec
cli
mov
je
addb
adc
mov
lahf
push
or
movsl
ja
xor
jne
dec
aas
adc
mov
push
sti
sahf
xchg
pop
cwtl
lret
outsb
inc
ucomiss
sahf
out
push
adcb
and
fstpl
jle
mov
loop
jmp
xchg
add
xchg
and
aas
push
pop
jle
call
push
insb
xor
dec
sub
test
push
mov
jnp
movsl
stos
lds
movsl
mov
jg
push
jo
jl
add
call
rcrl
shrb
xlat
cmpsl
daa
repnz
dec
popf
sub
pop
hlt
mov
dec
jnp
jge
jnp
fdivl
xchg
cs
cmpsl
ret
dec
lcall
je
cmpsb
dec
and
inc
rorl
xchg
stos
aas
daa
jns
int3
ret
jle
mov
jbe
push
in
sbb
pop
sbbl
pop
out
fisubrl
cmp
loop
insl
sahf
in
ret
loop
loopne
lock
mov
iret
fst
aas
add
xor
movsb
pop
test
pusha
inc
cli
inc
dec
aaa
and
ss
in
outsl
adc
testl
imul
xor
xchg
scas
out
lods
add
popf
mov
or
movsl
js
fnsave
mov
fwait
sti
lods
inc
mov
imul
out
loopne
inc
neg
cmc
cmp
mov
add
cmpsl
add
hlt
ja
std
jne
cmp
loopne
mov
push
jge
dec
sbb
cmpsl
inc
jecxz
cltd
pop
mov
mov
cmp
and
daa
jge
jle
popa
daa
scas
mov
lds
int3
mov
bound
adc
and
inc
push
inc
rcrb
and
jge
loopne
mov
sbb
rorl
scas
pop
lock
gs
sub
popf
lods
in
clc
shl
jno
sbb
jmp
aaa
stos
cmp
sbb
rep
out
in
sbb
jp
xor
push
jecxz
rclb
imul
sub
sbb
push
testb
adc
mov
pop
push
es
mov
lahf
xchg
cmpsl
std
sti
insb
push
and
cmpsb
jno
add
cli
push
mov
mov
jp
ss
xor
cwtl
xor
jne
fistpl
push
inc
adc
xchg
xor
lea
cltd
sbb
inc
cwtl
aam
fmul
pop
and
js
xchg
ret
jp
incl
bsr
dec
jecxz
push
and
push
cmp
repz
jae
mov
arpl
cmp
sub
mov
inc
fs
inc
pop
sub
test
call
scas
addps
mov
pop
mov
inc
and
les
sbb
mov
fwait
push
scas
adc
call
aad
xor
imulb
fisubs
aaa
pop
mov
cmp
cmpsl
outsb
add
pop
repz
and
and
subl
jge
pop
or
mov
mov
sbb
mov
mov
gs
xchg
push
fidivl
scas
xlat
cmc
popf
adc
pop
fidivrl
sbb
stos
mov
add
sub
xchg
mov
call
sbb
and
add
jnp
sbb
add
push
loopne
jp
fidivs
pop
fnstsw
or
pop
mov
imul
and
hlt
mov
lahf
mov
jnp
adc
or
xor
fimuls
mov
das
loope
imul
popa
push
pop
ljmp
jno
mov
popl
dec
mov
test
popa
ja
dec
mov
movhps
in
xor
pop
cmp
xor
repz
imul
lock
pushf
fsubrs
pop
push
js
or
mov
adc
jecxz
xchg
lock
js,pt
add
inc
and
jns
shrl
inc
jle
lds
imul
lret
jmp
arpl
movsb
sub
pop
dec
cmp
mov
push
inc
mov
jns
mov
push
in
mov
pop
mov
push
neg
je
jb
adc
fcoml
int3
mov
push
fucomp
test
outsb
push
movsb
ret
mov
lea
fistl
das
pop
push
jl
sbb
dec
stos
filds
xchg
lods
and
mov
cwtl
mov
inc
pop
icebp
jnp
xchg
inc
inc
adc
inc
mov
sub
leave
cmp
mov
sbb
sub
lods
inc
ret
sub
lret
jae
lcall
fs
arpl
sbb
mov
pop
jnp
mov
ret
shl
pop
cmp
cmp
xchg
or
outsb
fdivl
call
int3
outsl
xadd
dec
pop
mov
sarl
xchg
lahf
cld
cmp
adc
sbb
repz
xor
sahf
imul
bound
push
dec
cmc
cmp
lods
sbb
loop
lods
cmp
adc
nop
leave
jno
clc
mov
jo
sbb
int
daa
xchg
adc
mov
enter
mov
and
fsubs
cmp
das
cs
in
dec
es
pop
mov
mov
icebp
dec
cs
mov
push
push
stos
les
pop
sub
in
xchg
or
fisubl
mov
mov
mov
fs
call
inc
push
jp
scas
addr16
fs
sub
push
sarl
pop
xor
dec
push
ja
or
ljmp
add
adc
test
mov
std
pop
mov
in
dec
sahf
cmpsb
pop
sub
mov
popf
stos
cld
mov
xchg
pop
ja
mov
cwtl
jae
adc
sbb
nop
add
mov
mov
out
inc
cmp
movsl
test
out
js
sti
out
inc
setge
test
mov
cmc
sub
lret
lds
push
rclb
mov
js
xchg
xchg
in
test
int
cmp
xor
pop
int3
pop
mov
pop
repnz
jae
xlat
pop
add
adc
ja
adc
jb
fwait
push
iret
push
fidivrl
int3
scas
imul
out
xchg
push
cld
lds
iret
adc
push
add
enter
sbb
rcrb
mov
push
cli
pop
adc
add
sub
sub
imul
loopne
adc
imul
and
pop
sbb
adc
or
or
jg
into
jl
rcrl
inc
jl
fst
mov
pop
call
hlt
xor
decl
je
pop
jbe
into
mov
and
test
mov
jmp
or
mov
mov
int
cld
jne
or
cmpsb
xchg
mov
fisubl
pop
adc
add
mov
pusha
xchg
mov
jnp
aam
daa
cmp
inc
jae
push
je
jp
imul
add
bound
aas
rclb
fstpl
mov
inc
std
mov
add
lret
addr16
stos
push
inc
pop
jns
and
fcoms
jns
int3
scas
push
divb
std
adc
pop
fidivl
aam
xchg
stos
fdivrl
cld
sub
popa
jae
test
xor
repnz
sbb
mov
push
call
add
int3
repnz
arpl
push
bound
push
sub
test
mov
mov
shrl
and
iret
data16
lods
aaa
push
in
addr16
je
loope
xchg
imul
mov
loop
ds
mov
scas
divl
dec
rclb
mov
pop
adc
xchg
movsl
mov
test
loop
in
fs
mov
popa
inc
loopne
ret
adc
pop
mov
cmp
lock
mov
in
lea
fidivl
inc
sub
jbe
and
sub
sbb
inc
mov
shl
aas
imul
pop
loope
cmpsb
xorl
mov
std
filds
and
sbb
lds
jg
insl
and
or
out
dec
es
loop
pop
ror
lock
test
mov
mov
sub
pop
pop
jmp
and
mov
out
js
mov
fsubrp
add
push
fstp
pop
sub
pop
inc
push
stc
loop
jbe
jae
add
iret
xchg
jno
inc
or
pop
and
lea
mov
pushf
push
inc
mov
movsb
pop
push
jmp
and
xchg
lea
jb
jno
sbb
jle
dec
mov
test
dec
sahf
loope
fmuls
jb
xor
push
push
xchg
js
xchg
lret
mov
inc
pop
mov
mov
rol
loop
sub
inc
and
cli
outsl
inc
popa
mov
cmpsl
mov
sbb
inc
mov
stc
adc
pop
sbb
or
jecxz
push
sbb
pop
sub
xor
pop
cmp
push
rep
and
insl
push
fiadds
add
push
xchg
mov
and
inc
out
jne
lret
cwtl
daa
out
jp
cmp
mov
movsl
shrl
push
dec
hlt
lock
xor
cmp
xchg
fldl2t
xchg
adcb
out
enter
cmc
sub
xlat
hlt
daa
jle
push
adc
popa
jae
arpl
sarl
je
xchg
or
sub
jg
repz
mov
cli
sbb
pop
jne
shrb
jne
add
aaa
leave
mov
jge
popa
or
pop
mov
push
and
imul
dec
pop
shl
cmpl
out
dec
inc
push
outsl
xrelease
inc
dec
dec
repz
lods
add
xchg
sbb
and
push
dec
push
jns
pop
test
sub
pop
xor
shld
ror
pop
adc
arpl
dec
cwtl
loope
sti
dec
mov
stc
mov
inc
je
jp
sbbl
jge
sub
pushf
iret
daa
cmp
inc
movsb
jne
aad
mov
adc
xor
loop
mov
add
mov
sbb
jno
pop
cltd
xor
cli
sub
sub
aaa
js
push
mov
jl
test
add
js
cwtl
xor
mov
mov
mov
xor
das
lds
add
cmpb
and
or
mov
dec
push
xor
fnsave
iret
jb
pop
xchg
push
js
pop
in
mov
inc
cld
rorl
jno
and
pop
inc
aas
into
push
movsl
insl
jb
jne
clc
arpl
cwtl
lods
or
aaa
lret
sti
inc
out
xchg
loopne
xchg
cmp
xsha256
cmpsb
pop
sti
movsl
cld
stc
cmp
jecxz
mov
shr
leave
testb
pop
in
rorl
xchg
push
in
std
es
movsl
add
push
lret
inc
pop
mov
inc
clc
or
or
rcll
push
push
popf
xorl
or
mov
cld
add
repz
cs
mov
xchg
sub
fidivs
rcrb
xor
aas
xor
inc
stc
mov
stc
push
pop
scas
je
not
push
lods
mov
movsl
or
rcll
sub
cmc
sbb
mov
cmp
loope
mov
add
stos
inc
shll
leave
and
jns
mov
dec
icebp
int
mov
mov
adc
pop
lret
in
std
jl
ljmp
mov
mov
add
stos
sub
mov
les
adc
cmp
cmp
mov
adc
into
enter
xchg
inc
rclb
insb
sbb
sahf
push
loop
roll
inc
mov
sarb
sub
les
or
push
jne
xor
lcall
fs
mov
mov
xlat
loope
jg
adc
call
inc
jle
mov
dec
inc
mov
jnp
push
xlat
daa
mov
notb
adc
adc
push
in
mov
add
jmp
cmpsl
out
data16
xchg
mov
fisttpl
leave
inc
and
xchg
adc
dec
mov
hlt
jp
inc
push
jp
das
stc
nop
pusha
xlat
in
xchg
rclb
icebp
mov
cli
scas
fwait
xchg
xchg
jo
lock
loop
cld
outsl
movsl
or
cwtl
cmp
mov
adc
test
cmc
pop
in
adc
push
inc
adc
popa
push
cs
push
fxam
add
mov
imul
sahf
push
pop
mov
add
insb
jb
sbb
push
pop
xor
das
js
int
icebp
pop
dec
add
xchg
mov
popa
es
adc
sbb
rcll
in
push
enter
dec
jmp
shlb
cmp
push
push
dec
dec
push
sub
lds
cmc
lods
popa
hlt
dec
push
jae
mov
mov
fstl
cmp
dec
jb
mov
scas
fidivs
pop
je
clc
fidivrs
shl
aam
cmp
dec
into
mov
lds
mov
xchg
sub
mov
int
inc
mov
mov
dec
aas
jnp
xchg
mov
ret
mov
in
xchg
test
pop
andl
scas
push
add
dec
loop
mov
xlat
xor
sbb
inc
sub
mov
add
pop
cmp
mov
cmpsl
mov
dec
or
sub
pop
cmp
les
scas
sub
pop
xchg
cmp
fs
sub
jno
andl
xor
xlat
add
movq
in
mov
xor
mov
testl
or
scas
in
sbb
ret
idivb
ret
mov
pop
movsb
rcll
and
jno
loop
icebp
scas
adc
cli
into
ds
add
aad
and
jg
sub
sub
or
jbe
insb
lahf
test
xchg
jg
xchg
out
inc
sbb
adc
fs
inc
xor
xchg
lret
movsb
mov
ja
imul
jmpw
xchg
sub
adc
test
dec
pop
mov
outsl
mov
sbb
int
add
xor
jne
cmpsl
and
and
aam
movsl
cmp
std
imul
mov
ss
addl
pop
adc
in
das
mov
adc
ja
jno
jmp
lcall
inc
pop
mov
add
push
ret
fimuls
xchg
jo
loopne
mov
jecxz
es
ljmp
fwait
ljmp
testl
loope
jne
mov
ret
sub
mov
sub
push
in
fidivs
js
dec
pop
push
sub
ret
sub
or
lret
mov
and
jnp
insb
push
dec
jnp
shlb
xor
adc
cmp
mov
dec
mov
xlat
movsb
and
inc
adc
or
insl
xor
fbstp
test
mov
mull
xchg
bound
ret
outsb
pop
push
ljmp
jno
fimull
jg
pop
jge
ficoml
add
popa
clc
cmpsb
xchg
out
lret
jg
sbb
mov
mov
mov
fs
pushf
call
jo
pusha
andb
push
stos
les
jle
mov
inc
pop
push
fldenv
pop
aam
flds
loop
inc
fwait
mov
dec
sbb
enter
leave
lahf
movsl
xor
insb
into
add
push
dec
cmp
mov
xor
gs
fs
mov
inc
push
inc
mov
xor
push
jmp
add
outsl
pop
call
in
cmp
rcrb
jmp
sbbl
lods
pop
iret
mov
repz
into
cli
dec
pop
in
sub
enter
pop
jae
sbb
fldl
loopne
add
pop
add
data16
push
out
sahf
inc
xchg
ret
adc
fsubrl
cmp
clc
movsb
sub
add
ficoms
mov
jmp
fdivrp
out
clc
jg
lods
lods
sbb
xchg
outsl
loop
orb
movsl
and
and
jg
push
xchg
add
jmp
outsl
xchg
sbb
cmp
dec
xchg
std
cli
gs
sub
ds
dec
enter
lea
or
mov
insb
hlt
pop
shlb
popa
sbb
mov
andb
aam
mov
ljmp
mov
sub
jle
cld
xchg
or
repnz
jp
sub
sub
jnp
outsb
add
leave
jno
and
inc
xor
pusha
popa
jnp
push
aad
jp
xor
cmpsb
sbb
dec
xchg
add
pop
xor
push
arpl
daa
add
xor
xchg
imul
sbb
leave
popa
shl
push
xchg
push
or
add
fadds
fisubrs
dec
mov
inc
jecxz
xor
ljmp
sbb
push
addb
or
in
jbe
xor
add
das
xchg
xchg
inc
inc
gs
jb
sbb
jae
sub
pop
js
pop
mov
mov
and
in
add
push
and
test
mov
dec
dec
dec
andb
imul
into
imul
stc
ja
dec
and
inc
test
aad
loopne
sub
inc
push
cmp
mov
sbb
out
xchg
stos
inc
call
icebp
adc
mov
mov
xchg
fcomps
dec
and
pop
mov
sti
movsb
and
repnz
pop
outsb
push
cmp
in
mov
scas
push
or
jp
fimuls
jge
inc
fcom
jp
xlat
imul
cmpsb
bnd
aad
ja,pn
pusha
adc
or
pop
bound
or
ret
sub
aam
inc
pop
cwtl
rcrl
movb
add
scas
mov
dec
xchg
outsb
pop
xor
addl
xlat
inc
call
subl
inc
add
xchg
adc
mov
mov
into
gs
cmp
hlt
xchg
mov
adc
ret
dec
scas
ds
mov
lds
in
add
jb
push
and
jbe
rolb
outsb
ja
sbb
or
push
mov
add
es
add
fiaddl
jbe
sub
xor
sbbl
cmp
lahf
adc
dec
mov
push
dec
cli
ror
pop
inc
xchg
cwtl
popa
ror
outsb
dec
clc
jae
or
sbb
ljmp
insl
inc
dec
out
packsswb
sub
mov
adc
shl
add
fstl
and
or
jle
clc
xor
jg
pop
loope
and
jp
lods
imul
jo
pop
jb
or
lds
popa
add
cmp
push
rorl
or
cmpsb
movsb
addr16
and
sub
jne
and
jecxz
clc
or
push
dec
loopne
xchg
sarb
addr16
adc
mov
mov
xchg
fucomp
nop
loopne
or
or
es
or
pop
and
pushf
testw
push
mov
and
daa
adc
add
dec
daa
fsubr
stc
adc
xchg
inc
sub
sarb
fwait
xor
and
fidivs
sbb
das
loopne
sbb
xchg
cmp
loopne
xchg
aas
xchg
insl
pop
rcr
push
pop
xor
pop
arpl
in
and
jecxz
mov
loopne
sbb
je
outsb
leave
test
rol
adc
fwait
loope
insb
and
rcl
fdivl
pop
xchg
xchg
sbb
and
sbb
lcall
inc
fcompl
out
push
mov
lret
shrl
shll
mov
xor
sub
repz
daa
mov
mov
dec
fistpll
xor
xor
addr16
xorb
aaa
inc
xor
cwtl
popa
addr16
jne
out
test
xchg
lret
popa
std
and
mov
adc
mov
mov
test
dec
dec
movsl
jg
adc
add
sbb
mov
lahf
daa
sbb
call
mov
jae
xor
ret
pop
pop
in
jnp
cmp
js
xchg
sti
push
dec
xchg
call
in
stos
sbb
mov
xor
add
jns
mov
fiaddl
repz
call
jns
aas
pop
add
sub
in
pushf
mov
dec
xor
jne
add
and
adc
scas
jg
cs
cmpsl
mov
cmc
push
sti
pop
mull
sbb
pop
inc
add
shrb
mov
push
popf
outsl
pop
jbe
mov
fldcw
shrl
inc
ret
pop
pusha
testl
adc
sub
adc
mov
pushf
xor
cmc
out
cmp
mov
sbb
fnstenv
imul
mov
popa
add
in
mov
or
adc
xor
xor
or
mov
jp
sub
cwtl
add
popf
bound
iret
addb
xor
rcll
xchg
sbb
lahf
ss
out
sub
in
ljmp
inc
in
data16
cmpsl
jno
ret
push
les
fadds
jge
cmp
in
inc
inc
cmpsb
repnz
repnz
sub
pop
push
cmp
cmpsl
and
les
sbb
xchg
cwtl
xor
pop
push
js
xor
add
jecxz
daa
and
jp
sbb
and
cmp
lods
xchg
cmpsl
out
fidivs
and
aaa
ja
pop
test
ljmp
loopne
daa
loop
cld
dec
loop
fs
adc
cmp
insb
jg
jge
sbb
xchg
mov
loopne
insb
push
jo
test
sub
xlat
aaa
pop
outsl
jle
sbb
pop
cwtl
sbb
cmp
mov
pop
movsb
hlt
or
and
mov
repz
push
dec
stc
sbbb
imul
repz
cmp
outsb
sbb
pop
ret
add
mov
enter
pop
repnz
loope
adcl
popa
xor
lds
out
push
push
jae
mov
stos
outsb
mov
lcall
fs
hlt
push
mov
fst
and
ret
lds
cmc
dec
test
js
jmp
sub
mov
das
outsb
jl
orl
aad
or
pop
repz
andl
pop
scas
es
gs
nop
xchg
add
outsl
xchg
jae
repnz
and
push
xorb
sti
mov
dec
or
std
pop
scas
std
or
std
or
lds
int3
xor
jbe
fidivrl
loop
mov
mov
sarl
scas
adcl
jno
sbb
or
shlb
fucom
jg
pusha
mov
call
or
aam
fcompl
pop
cmp
ljmp
pop
or
pop
inc
xor
mov
jmp
loope
lea
pop
xchg
scas
mov
fwait
cmc
jns
pop
sbb
sub
clc
movd
repz
stc
je
out
in
xchg
out
dec
push
dec
dec
xchg
les
orb
sahf
push
stos
push
xor
outsl
sahf
pop
push
jp
cmp
or
cmp
xor
sbb
xlat
gs
mov
push
rorl
xchg
sub
in
push
sub
push
jo
and
dec
add
leave
pusha
idiv
repnz
or
fisubl
iret
adc
movsb
sbb
sbb
ss
mov
mov
ret
pop
sbb
outsb
iret
push
call
mov
cld
pop
xchg
add
push
or
nop
repz
mov
mov
xchg
jne
dec
push
lret
stos
ljmp
dec
or
lahf
push
in
mov
je
repnz
mov
inc
sub
dec
add
mov
pop
or
fisubl
or
xor
sti
dec
pop
lock
outsb
jle
jno
jp
xchg
sbb
imul
pop
rorb
sub
push
cmc
mov
sbb
sbb
push
jle
dec
mov
jno
out
sarl
xor
loopne
stos
push
inc
xchg
cwtl
das
les
dec
aad
mov
dec
dec
inc
fmull
xlat
push
add
jg
push
cmp
outsb
iret
gs
dec
test
inc
adc
lret
bound
jle
pop
mov
sbbb
sahf
insl
jmp
and
jbe
adc
scas
jp
out
add
jns
mov
imul
dec
cld
adc
inc
sbb
mov
in
int3
rclb
scas
sti
jbe
inc
sahf
xor
push
mov
add
repnz
shrb
js
fwait
sub
push
jmp
pusha
fstps
push
inc
es
jae
lahf
xor
test
leave
fs
push
sti
add
jb
pushf
xor
js
popa
test
mov
jecxz
mov
inc
push
xor
cmp
pushf
aaa
imul
pop
pushf
lret
cld
and
and
ss
adc
jmp
sti
mov
roll
jecxz
es
inc
add
push
loop
xor
or
dec
scas
sub
pop
jmp
cmpsb
stos
out
xchg
xor
idiv
push
lcall
in
test
adc
movsb
fwait
xor
aam
xchg
jmp
dec
pop
inc
add
imul
sbb
push
xor
test
out
xor
or
pop
sbbb
adc
ret
hlt
lods
pop
ja
shrb
sarl
dec
lahf
mov
fwait
push
pop
push
mov
pop
jg
fistl
jg
jne
aad
addb
mov
pop
add
cltd
in
call
mov
enter
imul
in
std
xchg
loop
xor
jl
sbb
pop
jmp
data16
or
push
test
out
xor
adc
sub
out
loope
aad
imul
mov
popl
sbbl
push
mov
xor
jp
out
jg
and
adc
lret
popf
lods
cld
push
xchg
cli
int
repnz
test
mov
xchg
lods
stos
in
sub
sub
add
and
xor
mov
xorl
pop
push
shlb
fbstp
scas
fdivrs
push
mov
mov
js
popa
cmp
jecxz
push
loopne
push
jns
cmc
fwait
jne
lahf
or
or
imul
mov
sub
pop
in
add
ret
mov
leave
pop
mov
sub
inc
out
call
xlat
lods
and
shrl
mov
inc
sub
fcoms
jl
call
outsl
jge
subb
cmc
rcrb
or
aam
pop
loope
out
call
xor
out
mov
hlt
aas
imul
cs
push
cmpsb
aam
jmp
outsb
push
aad
inc
and
insb
shrl
or
sbb
mov
pop
sub
add
test
inc
and
or
jmp
and
sbb
and
pop
inc
clc
fadds
xor
mov
mov
and
ficoml
das
jl
cwtl
lods
push
daa
fstps
mov
fsubl
dec
loope
add
outsl
cmpb
sub
lea
inc
fmuls
mov
into
test
mov
test
jp
mov
pop
loopne
add
inc
push
and
push
lcall
scas
daa
push
mov
in
js
sub
mov
stos
and
xor
cltd
inc
data16
adc
ret
call
aam
adc
sbb
filds
inc
ret
cs
lret
mov
stc
shrb
mov
jb
sub
jl
mov
jbe
pop
test
lods
mov
push
out
xchg
jnp
and
cmpsb
nop
imul
ljmp
scas
fsubrs
push
mov
push
jo
xchg
sub
out
sub
inc
imul
push
sub
lret
add
cmc
ss
test
jns
push
push
mov
inc
pushf
dec
and
bound
and
xor
dec
mov
xor
sub
jp
in
mov
and
push
lret
movsl
jle
sbb
sbb
iret
add
je
insb
gs
pop
sbb
ds
sub
mov
test
xor
push
xlat
pmulhuw
mov
imul
pop
or
pushf
ja
xchg
addr16
sbb
add
mov
in
js
cmpsb
jnp
mov
sbb
adc
and
outsb
stc
add
adc
xor
or
popf
out
clc
push
pop
ss
pop
scas
fdivs
shrb
addl
in
and
les
call
mov
mov
mov
cmp
out
daa
fs
scas
sub
push
cli
dec
push
dec
sub
push
mov
nop
pop
in
lcall
push
sahf
lods
push
iret
out
movsl
jle
mov
out
sub
test
mov
shr
inc
inc
sahf
jle
pop
scas
lret
repnz
lret
inc
in
ds
cmc
arpl
inc
mov
es
test
adc
fsts
scas
add
mov
lods
icebp
outsb
mov
mov
nop
int3
loope
lock
pop
inc
lahf
pop
mulb
xor
add
sbb
and
cmp
outsb
in
dec
testb
in
and
add
xor
mov
and
xor
dec
sub
popf
pop
mov
scas
fmuls
in
cmpsl
jmp
rorb
and
inc
pushf
test
test
and
dec
xor
loop
popf
jg
in
icebp
imul
cmp
ja
or
inc
sub
xchg
jbe
push
fcmovb
out
inc
sbb
and
jge
and
loopne
addb
add
ret
mov
pop
mov
nop
imul
xlat
or
lahf
pop
scas
xchg
insb
mov
es
mov
repz
lea
test
xor
shrd
mov
push
pushf
insb
jb
clc
repnz
movsl
push
cmpsl
dec
mov
xor
decl
mov
out
xchg
and
ljmp
scas
or
pop
divb
cmp
push
jo
mov
dec
daa
out
dec
jmp
jmp
incb
push
stos
mov
cmp
mov
mov
sahf
fwait
add
in
add
mov
sbb
lock
mov
and
pop
mov
push
in
mov
int
ss
push
push
push
jecxz
cmp
adc
repnz
xor
mov
push
imul
jecxz
xchg
xor
push
lret
negl
int
paddb
jbe
sbb
inc
xchg
outsl
out
xchg
clc
divb
sub
inc
sar
mov
and
xchg
imul
xchg
or
inc
insb
pop
les
inc
les
jecxz
sub
dec
jecxz
dec
sub
xlat
push
lock
data16
loop
mov
dec
cmp
dec
adc
decb
test
pop
push
jnp
and
mov
jae
andb
in
mov
dec
imul
xchg
jle
popf
push
into
bound
dec
loop
inc
pop
mov
mov
data16
or
dec
push
loope
inc
outsb
outsb
aad
in
jp
pop
popf
pop
bnd
xchg
test
mov
adc
out
icebp
xchg
ja,pn
cmp
xchg
cwtl
mov
inc
test
jl
mov
jp
adcl
pop
jno
aaa
mov
int3
stc
pop
cmp
cmp
popa
jmp
or
mov
repz
and
mov
mov
push
adc
xchg
dec
loopne
inc
or
sub
adc
mov
popf
push
mov
mov
ds
pop
loopne
sarb
and
shr
push
lods
push
or
dec
push
dec
add
jecxz
out
sub
pop
sbb
cmc
adc
mov
repz
movsl
cld
lret
xor
jno
loope
out
sbb
and
repz
adc
out
das
loopne
stc
sbb
insl
xchg
mov
hlt
pusha
dec
mov
out
xchg
add
and
test
sbb
sahf
xor
in
mov
out
lret
cwtl
es
out
loope
xchg
in
xorl
jge
xchg
or
add
sub
or
test
arpl
outsl
rcrl
and
and
mov
scas
xchg
xor
fdiv
and
adc
inc
fstpt
fiaddl
push
movsl
mov
add
mov
mov
jno
fmuls
es
xor
stos
inc
loop
pop
mov
lea
xor
or
in
mov
fnstsw
test
loop
mov
sub
add
cwtl
rcl
mov
cmpb
pop
and
pop
cmovge
cli
cmpsl
jecxz
fstps
fists
jle
js
xchg
fcmovb
aam
jae
adc
jle
aas
call
mov
ret
add
add
imul
inc
cmp
mov
cmp
cmp
dec
sub
outsl
cmp
fcmovb
cltd
jmp
shrb
lock
bound
inc
mov
dec
addr16
ficoms
jecxz
dec
add
pushf
xor
pop
push
push
pop
movsb
cmpsb
sbb
repz
jbe
int3
and
inc
dec
lea
cmpsb
sbb
in
jmp
outsl
bound
sbb
iret
repnz
out
adcb
inc
mov
fucomi
test
pusha
das
adc
xchg
push
daa
in
cli
icebp
sub
dec
cmp
sub
pop
jbe
out
xor
stos
inc
and
mov
push
xor
mov
int
test
pusha
jp
fnstenv
xor
pop
mov
clc
jbe
ret
or
mov
jecxz
mov
sub
jecxz
cmp
cmp
fcompl
in
jp
mov
push
jno
cli
ss
clc
adc
or
mov
es
dec
add
push
scas
and
mov
aad
adc
jae
out
mov
inc
mov
sarb
pop
adc
fdivl
mov
into
cmp
push
rorb
mov
lahf
push
imul
xor
pushf
cli
push
add
adc
cld
jl
push
xor
mov
sub
enter
jns
aam
xor
pop
mov
pop
mov
add
lret
pop
or
xorl
jb
pop
cld
rcll
adc
inc
push
push
xor
mov
add
dec
out
pop
adc
test
lods
out
and
test
jne
cmc
std
fst
scas
sbb
jmp
fs
pop
jb
out
and
lahf
mov
add
gs
das
stos
inc
pop
cmp
push
je
xchg
cmpsb
and
sbb
ret
repz
insb
or
pop
sub
repz
fldl
movsb
hlt
inc
mov
xor
xchg
fdivrs
cmpsl
pop
jb
pop
adc
movsl
stos
xor
dec
mov
dec
add
out
pop
adc
push
cmp
aad
aas
std
lret
in
test
and
xor
cmp
fmul
xlat
sub
xchg
sub
scas
scas
add
loope
lds
xchg
iret
test
in
add
add
jbe
mov
cmp
ret
jno
jnp
scas
xor
loopne
jg
inc
test
icebp
outsb
call
cmp
out
xchg
test
cmp
mov
dec
fildl
out
push
in
mov
testl
or
inc
enter
lods
bound
neg
aas
cmc
add
in
xchg
ja
lret
push
push
call
push
sbb
shlb
xorb
add
nop
add
int3
xor
pop
insb
dec
xchg
push
fildll
xor
mov
push
pusha
fstpt
and
xor
ja
mov
loope
and
push
insl
cmp
stc
outsb
add
int3
je
and
push
stos
push
mov
adc
subb
jl
inc
int3
sbbb
add
mov
cmp
mov
ret
ljmp
mov
lcall
jo
xor
repz
sub
notb
test
ja
jae
and
pop
push
inc
nop
cmpsl
push
pushf
ds
enter
pop
push
mov
movl
sub
vcvtdq2pd
xor
xlat
les
mov
pop
or
dec
and
dec
es
lcall
inc
add
insl
inc
mov
inc
dec
mov
test
jmp
push
mov
mov
sub
mov
pop
insl
add
sbb
rol
aad
inc
ret
push
pop
and
in
mov
sbb
dec
les
sbb
pop
sbb
seto
icebp
shll
dec
outsl
pop
adc
call
mov
leave
jo
jp
push
mov
pusha
mov
push
jle
aam
mov
in
dec
loopne
add
ficompl
xchg
add
xor
ljmp
mov
adcb
lods
call
sub
or
cmp
xchg
dec
call
mov
jmp
mov
sbb
test
dec
xchg
lods
jg
insb
sub
popa
inc
pop
shr
stos
call
outsl
push
ss
lret
pop
lea
je
jnp
and
mov
dec
addr16
cld
outsb
repz
cmc
adc
ret
push
mov
cmc
or
into
ret
jp
stos
push
icebp
nop
mov
jg
rolb
inc
lods
mov
dec
add
mov
pop
adc
mov
add
je
mov
pop
xchg
push
call
hlt
pshufw
push
sub
shll
sub
loop
insb
cmp
xchg
mov
pushf
daa
icebp
iret
mov
leave
mov
dec
imul
cmp
add
inc
jb
and
or
scas
jb
pop
or
push
dec
or
clc
jbe
shlb
pop
mov
shr
adc
and
ljmp
scas
pop
mov
fbld
fmul
xor
xor
ret
insb
sbb
mov
jl
insl
mov
or
mov
add
cmp
lods
xor
jbe
ja
ss
xchg
insb
mov
ljmp
imull
into
pop
aam
repz
jp
repz
pop
scas
enter
fs
push
leave
mov
jbe
push
movsl
icebp
xchg
movsl
dec
pop
xchg
cs
pop
stos
jge
sub
push
in
dec
mov
add
xchg
rorl
add
pop
dec
mov
inc
repnz
or
mov
jg
mov
into
mov
add
cs
add
enter
jp
xchg
pop
inc
mov
sbb
fwait
sahf
cmc
dec
ljmp
cmp
cmp
pop
movsb
mov
into
loop
jne
sbb
xchg
jg
lcall
dec
int3
aaa
lods
inc
mov
outsl
ss
cld
push
rcrb
lret
popa
dec
pop
aam
pop
jnp
pop
and
mov
pop
ret
in
enter
cmpsb
jge
xchg
shll
mov
into
push
jb
lret
js
ret
pop
out
adc
sub
inc
in
cmp
jae
out
xchg
lahf
pop
mov
cmp
push
ds
xor
pop
movsb
repnz
cmp
dec
sub
pop
test
jnp
call
inc
ljmp
xchg
aaa
mov
sbb
inc
mov
out
xchg
mov
test
push
repz
ret
call
mov
lret
xchg
pop
dec
mov
pop
in
vaddps
cmc
aaa
cmc
cld
cli
xchg
jbe
sbb
jmp
nop
adc
xchg
out
repz
or
cmp
popa
cld
inc
inc
test
insb
mov
dec
popf
fsts
ljmp
sub
or
xor
lret
popa
and
js
int
jp
lret
jp
jb
xchg
add
mov
xchg
xchg
or
dec
in
in
and
xor
push
add
aad
inc
push
cmpsb
das
cmpsl
les
lret
cmp
leave
sub
aas
pusha
jl
xchg
fimull
sbb
push
rolb
clc
pop
lock
dec
cli
movb
das
sbb
fwait
dec
nop
call
dec
cmpsl
mov
lret
mov
stos
push
xchg
cli
cmp
sarl
test
push
hlt
xlat
add
pop
push
lods
push
and
std
fmull
cmc
adc
pushf
ja
xlat
cmc
xor
pusha
pushf
cmp
xchg
movsb
pop
adc
decb
rcrb
dec
adc
jge
xor
ljmp
mov
andl
jl
mov
jne
out
push
jbe
aad
repnz
pop
sti
and
js
or
inc
decb
pop
push
pop
adc
jbe
jl
push
out
scas
cmp
xor
mov
mov
int3
test
push
adc
scas
cmp
xorb
lret
aas
xchg
sub
xor
push
dec
add
aaa
mov
ljmp
stos
mov
stos
hlt
loop
mov
xchg
jge
rcrl
push
push
lcall
movsl
lds
xchg
adcb
and
and
cmpl
dec
xor
outsb
sbb
mov
movsl
add
cmp
pop
outsb
or
fildll
xchg
or
push
in
movsl
and
es
ds
popaw
push
loopne
lock
loop
add
mov
jmp
fisttpll
dec
notb
push
mov
xchg
loope
rclb
ds
push
out
lds
and
loope
popf
push
imul
repz
push
cltd
lcall
outsl
lock
add
mov
sbb
test
popf
xchg
push
or
add
inc
fcmovnu
xor
lods
pop
inc
loop
adc
jle
sbb
stos
mov
imul
pop
pop
lea
test
mov
sbb
xor
pop
inc
inc
leave
imul
adc
fistps
aad
shll
mov
cltd
sbb
cmpsl
jle
mov
dec
out
xor
das
cwtl
pushf
movsb
jg
std
xchg
xorl
bound
mov
sub
popf
or
add
test
leave
cli
movb
in
jl
out
cmp
cs
xor
inc
insl
iret
lahf
sahf
push
mov
mov
xorb
enter
or
lods
inc
cltd
das
aas
sahf
cmp
push
in
lcall
sbb
jb
fwait
xor
jmp
dec
add
decl
xor
shrl
dec
bound
xchg
xor
scas
decl
int3
arpl
in
inc
mov
or
push
jae
stos
mov
lret
jo
shrl
shlb
aad
xchg
ljmp
push
or
mov
cmpsl
je
scas
popa
jns
mov
mov
fsubp
outsb
test
jbe
add
jecxz
dec
sbb
pop
bound
or
mov
js
in
rorb
imul
pop
daa
pop
adc
xchg
xor
out
out
sbb
mull
repnz
fdivr
stos
inc
cmp
scas
outsb
inc
and
pop
mov
hlt
and
and
adc
cmp
fld1
adc
push
xor
and
add
cmp
mov
push
mov
push
or
jl
xchg
sahf
cmc
push
xor
push
mov
and
les
jae
mov
mov
adc
push
xchg
mov
flds
mov
dec
adc
dec
mov
popf
popf
jo
push
sbb
fstp
xchg
mov
push
inc
push
int3
jg
inc
push
sub
arpl
jbe
test
and
jp
push
cmc
ret
dec
popa
pop
cli
ret
xchg
mov
sbb
cmp
adc
push
push
mov
push
adc
das
mov
push
iret
xor
lea
ljmp
fdivrs
test
int
mov
add
push
outsb
mov
push
or
outsl
adc
bound
test
or
ret
fwait
push
xor
adc
xor
adc
lock
mov
stc
je
mov
incl
jge
add
hlt
nop
fs
fldenv
add
out
or
adc
jae
push
adc
int
adc
xor
cmp
pushl
sbb
fwait
repnz
mov
imul
rcl
ds
cmc
mov
mov
shll
or
push
repz
sub
fs
dec
aad
inc
shlb
mov
adc
aad
jl
adc
divl
push
jle
rcl
sub
sbbl
push
lock
inc
fcompl
sti
and
ret
enter
jo
xlat
pop
xor
in
inc
es
mov
mov
arpl
outsl
jnp
imul
pop
sbb
mov
pop
in
ds
pop
or
aaa
clc
and
test
mov
sahf
test
mov
rcl
imul
lea
adc
mov
mov
sbb
imul
aad
incb
cmp
enter
xorb
nop
or
adc
mov
xchg
push
inc
pushf
lret
pop
mov
jge
push
dec
imul
pop
popf
fnstenv
sar
andb
pop
fimull
mov
rclb
bound
mov
sub
arpl
mov
adc
push
gs
fisubs
dec
rcrl
inc
and
xchg
push
or
mov
sub
aam
imul
push
and
mov
pop
fsubrp
iret
fwait
and
iret
xchg
xor
sub
sbb
push
repnz
push
xchg
sub
popf
mov
cltd
in
fcomi
popa
fcoms
or
pop
push
adc
or
mov
pusha
jae
lret
pop
addr16
mov
push
call
and
add
movsb
push
add
jno
cmp
sub
push
out
jae
jb
sub
popf
jl
xchg
adc
andl
dec
imul
inc
fists
or
sub
push
jno
mov
dec
add
lea
nop
dec
shll
arpl
push
icebp
shrb
jmp
sub
mov
aam
testl
mov
mov
jns
inc
stos
pop
ds
push
aam
imul
into
and
icebp
xor
andb
sub
sbb
dec
mov
add
pop
xlat
shl
or
mov
ljmp
sahf
jnp
out
ja
pop
ljmp
divb
push
xchg
jns
mov
hlt
mov
adc
int
fisubrl
aas
rcll
aam
push
cmpsl
shll
mov
int
inc
pop
mov
loopne
adc
je
das
push
xchg
jnp
loopne
pop
dec
in
call
cmp
xchg
rorb
mov
popa
fsubrs
push
popa
mov
idivl
push
inc
and
shrl
js
or
adc
xor
out
or
das
and
push
movsl
aas
xor
jg
int3
into
fmul
sahf
mov
lock
jo
mov
push
outsb
aad
sbb
out
push
sti
psadbw
adc
pop
cs
frstor
cmp
inc
adc
push
mov
mov
cmc
jp
data16
adc
adc
outsl
daa
sarb
jno
jno
pop
inc
sub
testb
pop
pop
cmc
mov
inc
xchg
in
mov
add
sbb
mov
call
dec
aaa
push
lods
ljmp
testb
fwait
adc
int
xchg
add
push
cmp
insl
or
inc
inc
mov
dec
mov
popa
inc
lret
test
jmp
int3
adc
lods
xor
xchg
pop
cmc
std
mov
or
pop
icebp
and
cld
xchg
cld
stc
test
cmp
mull
push
jae
sbb
and
sbbl
inc
imulb
fisubrs
lds
lods
dec
pop
sub
push
push
xchg
dec
scas
dec
lahf
adc
mov
das
lds
mov
inc
or
movsb
loopne
and
sbb
inc
adc
mov
xchg
pop
rorb
aad
sbbl
xchg
icebp
mov
mov
inc
scas
lods
cmp
je
lret
insl
jecxz
out
or
cltd
pusha
gs
adc
mov
enter
push
leave
das
xor
fdivrs
xor
xlat
test
inc
dec
and
jecxz
sbb
xchg
jecxz
add
out
pop
push
ret
mov
cmp
stos
lods
or
cs
fsubr
repnz
sahf
repz
jp
cmp
sti
inc
rorl
je
jmp
je
pop
pop
popf
mov
cmp
gs
inc
jmp
out
ret
pop
dec
outsb
pop
jbe
pusha
fists
xchg
adc
out
test
adc
xchg
scas
pop
in
or
ret
arpl
pop
insl
jnp
adc
add
push
movsb
out
jge
notb
ljmp
push
and
xchg
mov
imul
mov
js
clc
sarl
jl
jbe
loop
pop
adc
cld
push
pusha
stos
lods
jecxz
out
or
cmp
std
pop
icebp
pop
aad
or
dec
fmuls
mov
xor
ret
jg
mov
sub
cltd
xor
repnz
andb
sub
call
leave
scas
and
or
or
inc
mov
mov
rcll
xor
gs
aam
filds
push
jmp
adc
jmp
push
adc
out
cmpsb
ss
xor
mov
sub
lahf
icebp
je
arpl
pop
aaa
adc
ds
imul
sbb
clc
push
mov
xlat
jg
mov
int3
outsb
clc
cld
repz
sbb
dec
or
mov
pop
lret
mov
scas
ljmp
mov
lcall
mov
mov
sbbl
mov
mov
sub
mov
insb
int3
outsb
inc
sti
inc
or
jl
pop
sbbl
adc
sbb
jge
jae
jae
fistl
xor
mov
aad
loop
sahf
jno
in
int
push
mov
fisubs
jmp
dec
sbb
lds
int3
or
std
sub
int3
inc
adcb
das
ds
jno
sbb
push
ja
insb
dec
aaa
out
imul
adc
fisubl
sti
xchg
int3
fldt
jns
or
mov
mov
xchg
mov
pop
shr
mov
adc
pop
pop
or
or
movq
js
loopne
xchg
enter
xchg
out
push
cltd
pusha
cmp
insb
shrl
je
jge
or
pushf
loop
outsb
or
mov
add
mov
push
scas
sub
das
hlt
pop
add
imul
push
mov
mov
push
push
repz
ja
mov
sbb
jbe
push
je
cmp
cmp
fnstsw
or
add
data16
pop
cmc
movsl
in
xor
repnz
add
test
push
push
mov
insb
mov
jae
dec
mov
in
pop
cmp
and
xor
mov
clc
push
ja
pop
push
imul
enter
lods
cltd
sub
inc
push
scas
sti
ds
jno
xor
xchg
aam
insl
push
and
jecxz
or
cld
popl
or
stc
popf
or
addr16
mov
dec
push
cs
lret
pop
xorl
add
stos
xchg
shrb
and
push
mov
movsb
pop
jae
aam
dec
fmul
jno
cli
mov
dec
sbbl
dec
mull
lret
test
cmpsb
sbb
mov
lock
mov
fninit
cmpb
jno
cld
sub
pushf
add
adc
adc
add
mov
fidivl
clc
inc
mov
test
mov
leave
popa
mov
sbb
cli
push
xchg
incb
and
cwtl
movsb
dec
int3
and
xor
aam
pop
fdivs
push
sbb
inc
or
mov
lea
xchg
dec
dec
divb
out
std
js
enter
lock
push
in
scas
or
fsubrl
push
mov
inc
in
int3
push
fdiv
cmp
dec
cs
aam
ret
pusha
add
iret
xchg
adc
mov
insl
imul
scas
push
jo
lods
mov
fsubrs
rcll
arpl
aam
mov
ljmp
cmpsl
push
fcomps
sbb
xchg
imul
mov
mov
sub
fnsave
enter
sti
and
bound
in
sub
cmp
jo
mov
adc
mov
test
in
lahf
jmp
or
scas
mov
xchg
lds
insb
mov
mov
sti
mov
inc
push
jne
icebp
fdivrs
imul
dec
scas
inc
xchg
ficoml
mov
psubb
cmp
aas
push
sub
mov
rorb
sub
jge
mov
mul
fnsave
adc
xchg
sub
repz
mov
xor
addr16
std
cmp
fwait
lods
pop
inc
inc
cmpsl
mov
js
mov
mov
lods
rol
aam
sbb
mov
xchg
lret
add
stos
test
cld
and
push
and
subb
int3
add
lea
cs
xlat
test
imul
mov
insb
mov
xlat
mov
sub
icebp
cltd
std
lds
add
es
adc
jb
push
jbe
pop
stos
add
xchg
xor
xchg
mov
sbb
in
dec
pop
outsb
mov
jne
dec
daa
mov
hlt
xchg
inc
stc
adc
mov
push
xor
icebp
rcr
push
aad
test
scas
push
and
outsb
iret
dec
or
js
add
pop
std
adc
iret
sbb
enter
ds
hlt
outsl
sbb
subb
lds
jns
popa
repnz
mov
scas
pop
inc
fdivrl
mov
in
add
inc
das
cmp
mov
add
out
sub
push
mov
clc
xchg
dec
cmp
rclb
xor
leave
xchg
mov
add
xor
int3
mov
xor
loope
pop
xchg
pop
cmp
sbb
jg
call
mov
movsl
cmpsb
cmp
cmp
push
in
sbb
cmp
inc
in
lea
hlt
mov
dec
inc
outsl
xchg
shll
jecxz
push
cltd
in
push
stos
xor
fists
out
sbb
popf
dec
adc
stos
in
in
mov
sub
cmc
jnp
mov
mov
in
xchg
ds
pop
mov
xor
stos
push
not
pop
movsl
add
jecxz
js
mov
test
sbb
mov
ja
ret
fcoms
adc
and
cmp
insl
sbbb
lcall
jp
mov
lret
cmp
imul
cmp
mov
cmc
push
sbb
jbe
push
int3
testb
mov
jo
imull
fiaddl
roll
movsb
popa
sub
push
ror
adc
mov
lcall
sub
into
mov
ret
push
sahf
fwait
mov
pushf
insl
push
arpl
or
pop
mov
test
int3
sbb
push
test
add
xor
dec
and
fnsetpm(287
dec
mov
inc
mov
in
clc
adc
cmc
push
and
stos
push
add
jo
bound
lret
outsb
push
dec
add
sbb
mov
bound
xchg
scas
xchg
in
out
inc
xchg
mov
lret
jbe
in
cmp
clc
cld
test
and
mov
addr16
in
jl
xor
sbbl
sub
xor
xchg
mov
or
in
ljmp
insl
and
cmp
pop
in
lcall
arpl
ljmp
call
outsl
dec
in
arpl
cwtl
aas
and
popf
stos
dec
cld
inc
and
xor
shl
movsl
in
mov
das
shll
xlat
lods
inc
leave
push
mov
sbb
sbb
cmc
dec
aaa
imul
lahf
sub
movsl
fbstp
repnz
mov
add
jmp
and
sbb
adc
scas
mov
pop
fimull
enter
or
xchg
xchg
add
pushf
shrl
rcll
test
gs
clc
pop
iret
cmpsb
cmp
aas
fwait
les
and
inc
push
lock
cmove
sbb
repnz
inc
lret
repz
xchg
stos
jne
insb
jg
fs
leave
push
xlat
inc
inc
jno
leave
mov
xchg
jg
lahf
xor
das
pop
fildll
mov
mov
fdivrs
cmp
mov
mov
fisubrs
pop
push
dec
dec
jle
sbbl
sbb
cs
sarl
add
jl
sub
xor
mov
sub
cmp
in
mov
dec
push
cmpsl
es
lods
addr16
arpl
dec
sub
xlat
jecxz
add
lods
stos
in
lds
pop
or
add
imull
lret
cmp
jo
jmp
fisubl
pop
inc
xchg
add
sbb
clc
cmpsl
dec
pop
rcrl
mov
sbb
loope
rcl
shrb
clc
xor
sub
sub
test
mov
adc
adc
inc
into
popf
fidivrl
xor
call
pop
fmuls
out
bound
test
xchg
in
jl
and
stos
int
add
lret
cmpl
sub
mov
cmc
xchg
scas
push
insb
add
adc
jne
sbb
xchg
inc
xlat
xchg
notb
mov
int
dec
mov
outsl
add
jmp
cltd
test
xor
cmp
xor
xchg
sub
mov
mov
sbb
inc
dec
pop
loope
call
sbb
out
or
mov
or
out
shrb
mov
dec
loope
mov
cmpsl
adc
push
mov
bound
xchg
cmp
cmc
lahf
into
adc
test
and
cmpsb
mov
sbb
sbb
fnstcw
mov
iret
out
push
lods
inc
fsubs
sub
cmpsl
sbb
ds
push
jmp
push
adc
push
jb
cmp
pop
stc
aas
mov
imul
inc
cmp
pop
int
inc
sbb
leave
mov
jle
jns
andps
jl
insb
pop
pop
dec
jmp
cmp
push
sub
scas
lret
cmp
add
imul
mov
cmc
ljmp
inc
mov
outsb
es
sbb
xchg
orl
nop
xchg
je
cmp
sbb
js
mov
or
xor
xchg
inc
pushf
fisttpll
out
out
sbb
add
in
iret
mov
cmp
outsl
cmc
push
cmp
push
lock
cmpsl
out
out
icebp
dec
push
inc
repnz
decl
push
mov
xchg
mov
sbb
xor
jle
mov
enter
mov
int3
push
mov
mov
lock
mov
rcll
pop
mov
inc
insl
loopne
adc
clc
jnp
jnp
cltd
aam
xchg
dec
xor
adc
cmp
sti
pop
mov
data16
jp
push
lret
cld
js
or
push
mov
cmp
pop
je
jmp
add
fwait
cltd
push
clc
sbb
sub
jbe
and
cmpsl
ds
dec
lahf
notl
mov
xor
mov
mov
pop
sbbb
lods
pop
adc
shrl
outsb
mov
lcall
and
mov
push
dec
stc
jno
xor
mov
adc
mov
call
repnz
sub
mov
add
pop
je
sbb
jg
push
movsl
sbb
out
cmp
loope
sti
xchg
adc
pop
mov
cmp
sub
scas
test
loope
inc
dec
inc
xor
xchg
jmp
lds
mov
out
push
filds
add
xor
sbbb
push
pop
fidivrs
cmpsb
movsb
adc
iret
mov
jo
mov
fidivl
test
and
addr16
dec
pop
add
xchg
nop
inc
and
shll
aaa
fistpl
mov
mov
data16
out
add
xor
ficompl
movsb
cmp
jno
cmpsb
les
and
inc
arpl
sub
pop
stos
sub
outsl
inc
or
jno
xchg
dec
jb
push
cmp
clc
jne
mov
cmp
addl
or
repz
sub
int3
icebp
addr16
xor
test
fisubs
sub
jbe
mov
or
testb
dec
xlat
cmc
inc
fdivs
inc
arpl
jg
test
cmc
adc
xor
sub
sub
pop
add
fbstp
mov
outsb
daa
and
imul
dec
add
mov
icebp
mov
std
mov
ss
jg
pop
scas
nop
cmpl
mov
and
sub
fwait
jno
repz
push
sbb
push
add
jge
ss
lods
jp
or
enter
jle
cltd
jno
dec
cs
je
and
in
jno
jb
push
adc
jmp
call
inc
movsl
rolb
pop
int
adc
lods
inc
movsb
and
repz
mov
int3
shll
imul
jnp
and
into
test
push
test
or
inc
jecxz
cmp
lock
out
sti
sbb
daa
jmp
mov
subb
out
lods
jp
out
jmp
rclb
push
mov
pop
and
push
mov
add
addl
clc
aam
sbb
and
push
ficoms
clc
insb
mov
cmc
or
aam
push
int
jbe
out
loopne
xchg
out
ficompl
or
mov
outsb
dec
add
mov
and
in
push
adc
fidivrs
add
mov
loopne
imul
fsts
pushf
das
dec
mov
xor
push
je
test
call
xchg
repnz
mov
sbbl
mov
sbb
mov
or
call
add
push
mov
movsl
cmp
add
mov
cld
xchg
xlat
stos
daa
lock
scas
sub
stos
ljmp
mov
int3
in
fwait
xor
xor
xchg
xlat
cltd
fbstp
push
fwait
sub
aad
aas
push
mov
jo
cmpsl
clc
xchg
jb
lret
push
xchg
inc
pushf
arpl
aam
fidivs
jp
fistpll
mov
outsl
jnp
rcl
add
nop
mov
int
in
sbbl
jo
jb
adcl
sub
inc
repz
xchg
or
es
mov
sub
leave
jo
nop
push
xlat
in
test
xor
mov
fstpl
push
jmp
or
std
pop
mov
aaa
and
lret
test
call
jne
pop
adcb
push
test
pop
dec
sbb
in
push
testl
scas
rcrb
test
pop
aam
vdivss
pop
shl
lahf
insb
or
daa
mov
xor
jae
dec
scas
out
xchg
ds
decb
sbb
mov
xor
fistps
mov
and
mov
mov
div
loopne
cltd
adc
jle
cwtl
in
cltd
aaa
mov
push
jb
jmp
xchg
sub
test
and
mov
decb
push
in
dec
lret
insb
scas
aaa
sbb
outsb
ret
scas
das
leave
pusha
popa
stos
dec
and
xor
cmp
ljmp
cmp
lock
push
inc
mov
dec
inc
inc
into
fistl
jnp
inc
ja
je
add
push
es
push
or
ds
scas
ret
mov
loop
dec
lods
pop
stc
enter
cmc
mov
dec
adc
push
movsl
bound
xor
xorl
fucomi
div
mov
cmc
and
add
fcomi
decl
xchg
mov
mov
mov
add
cmpsl
mov
and
mov
cwtl
push
lea
in
loop
stos
aam
dec
push
shlb
xchg
mov
cld
ds
repz
jg
mov
adc
mov
inc
xchg
xor
ret
outsl
dec
mov
adc
sub
mov
inc
movsb
sarl
add
call
loop
sti
or
xor
aaa
mov
sub
or
dec
xchg
mov
mov
in
out
mov
pop
or
std
addb
jnp
or
repz
lods
push
jae
aam
test
and
stc
jle
cmpsb
push
cwtl
push
sti
jle
adc
sbb
jae
sbb
shl
in
mov
add
dec
cmp
sub
lods
add
fcoml
push
dec
test
movsb
imul
cmpsl
call
and
ss
mov
dec
cmpb
mov
or
cwtl
pop
inc
notb
arpl
movsb
cmp
shlb
jo
movsb
ret
and
in
add
mov
adc
xchg
xor
cmp
xchg
movsl
pop
clc
leave
or
rorb
cltd
stc
pop
mov
dec
imul
enter
cmp
dec
movsl
jmp
mov
cld
or
xchg
rol
lcall
push
mov
pop
loop
sbb
mov
add
lret
sbb
and
dec
dec
fldcw
sub
pop
adc
cmp
aam
jnp
cmovnp
lea
mov
fistl
push
and
stos
xchg
inc
push
fwait
and
mov
inc
push
lahf
jb
jmp
shl
and
or
arpl
xchg
pop
pop
imul
movsl
cltd
jg
iret
psrlq
mov
lcall
push
out
xchg
fbld
out
out
in
xchg
int3
mov
and
xor
xchg
mov
lods
test
jae
pop
and
sarb
loope
shl
or
pusha
push
sahf
shlb
add
fistl
mov
mov
int3
shll
insl
push
cmp
inc
test
pop
dec
test
iret
subb
jo
pop
adc
in
mov
push
aas
rcr
mov
or
jg
fs
xchg
stos
cs
lahf
fsubrl
sti
subl
add
sbb
or
dec
ljmp
insb
nop
add
pop
ret
xor
mov
push
push
cmp
test
fwait
cld
repz
mov
or
jecxz
sub
push
insb
lret
dec
inc
lcall
and
gs
push
xor
pop
or
mov
pop
mov
aam
test
leave
add
es
ljmp
ret
xchg
imul
xor
or
ljmp
adc
jmp
mov
loopne
and
xchg
and
les
dec
icebp
test
stc
hlt
push
sub
inc
jmp
push
fucomip
test
pop
out
sub
clc
adc
sbb
ds
ffree
push
pop
fisubrs
leave
pushf
sti
dec
idivb
fnstcw
rorl
cmp
push
rcl
sbb
mov
fcmovnu
in
push
cld
das
inc
and
inc
imul
test
add
test
test
sbb
cmc
addr16
test
lret
pop
ds
mov
int
xchg
scas
cltd
push
cmp
pop
mov
dec
out
mov
cmpsl
or
mov
xchg
cmc
jns
push
aaa
push
push
int3
cwtl
jmp
bound
shr
repnz
or
mov
lea
sbb
mov
fmuls
jl
and
pop
push
ret
xchg
pop
testb
sbb
jmp
lock
shlb
bnd
in
push
xlat
dec
bnd
aas
outsl
sbb
xchg
and
push
mov
cmc
jmp
or
and
loop
inc
push
notl
sub
dec
int3
mull
fcmovne
sbb
stc
inc
sbb
div
mov
jno
sbb
aaa
mull
loop
decb
inc
jecxz
push
mov
push
dec
xor
pop
les
add
das
andl
ss
inc
iret
adc
int3
mov
sbbl
adc
or
stc
jp
jle
gs
mov
mov
les
out
dec
xchg
in
mov
cwtl
in
call
cli
xchg
adc
dec
cld
xor
mov
sub
repnz
mov
mov
sbb
ret
hlt
cld
lret
cmpsl
sarb
loopne
rcrb
cmp
jg
stc
dec
leave
sbb
jae
aas
loop
pop
je
paddw
outsl
sub
mov
lcall
mov
fnsave
xor
dec
cmp
pusha
and
gs
ret
lret
outsb
sub
aam
aad
testl
sbb
dec
imul
xor
ret
jnp
jnp
or
and
repz
fcoms
outsl
loop
jae
sarb
pop
orl
insl
icebp
jnp
ret
insb
add
push
iret
fldt
jns
movsl
pushf
cli
and
or
xchg
out
mov
ss
cmp
xchg
aaa
in
sub
pop
mov
test
pop
loope
adc
leave
lret
ret
shrl
cmp
rclb
cmp
ja
cmc
test
mov
loope
xchg
pushf
sub
xor
scas
gs
outsl
push
pop
or
and
lds
adc
das
lahf
pushf
scas
rcll
mov
xchg
es
or
insl
clc
xor
cmp
dec
outsb
push
mov
lods
sub
out
repz
inc
pusha
fs
push
or
arpl
in
iret
push
mov
ss
cmpsl
mov
inc
data16
cmp
xchg
scas
incl
inc
outsl
push
icebp
lods
pushf
test
push
pop
icebp
xchg
xor
test
mov
dec
mov
dec
cltd
xlat
inc
fmuls
mov
inc
fcomps
mov
addb
mov
pop
sbb
cmp
mov
imul
or
addr16
xor
inc
inc
cwtl
and
sub
mov
cmp
or
sbb
rcrl
or
xlat
pop
repz
in
cmp
adc
rcrb
ret
cmc
mov
or
mov
out
jp
call
mov
ficomps
xor
jnp
mov
loop
ret
adc
aaa
mov
icebp
adc
jle
dec
mov
xor
repnz
in
and
je
imull
loopne
daa
xchg
testb
addr16
cwtl
xchg
lods
inc
cmpl
imul
add
add
xchg
xchg
push
insb
fildll
pop
jg
xor
dec
mov
push
xchg
push
test
lds
inc
fs
inc
jecxz
orb
xchg
adc
mov
insb
jle
jno
scas
adc
sub
sbb
xchg
orl
inc
popf
std
movsl
shrl
and
mov
or
mov
stc
daa
aaa
into
pop
sbb
sbb
cmp
jmp
mov
fcomip
adc
out
sbb
sub
out
test
dec
out
mov
mov
pop
test
cmp
fstpl
pop
gs
dec
out
xor
mov
mov
mov
fisttps
in
fbld
enter
nop
pop
push
movsb
pop
out
adc
mov
adc
out
xlat
outsb
outsb
mov
test
sbb
pop
inc
pop
nop
rorb
mov
mov
rcll
clc
xor
aas
pop
jg
pop
sahf
mov
test
dec
pop
dec
negb
add
sbb
lock
inc
pop
jp
push
jo
xchg
cld
pop
xor
sbbb
out
lods
dec
popa
pop
add
xor
cmp
ret
sbbl
push
movsl
mov
pop
test
sahf
adc
xchg
mov
int3
mov
and
sub
xor
in
test
xchg
jne
cmp
mov
xchg
pop
jb
sub
insb
adc
sbb
imul
movsl
push
and
out
cmp
pop
insl
jg
sbb
cltd
xor
or
test
movsl
lahf
pop
xlat
cwtl
sbb
clc
xor
push
or
fildl
inc
ljmp
xor
push
mov
in
jno
mov
inc
push
mov
outsb
sarl
fldenv
sub
push
mov
fldt
out
shlb
jmp
ljmp
cmp
xor
test
stos
mov
rol
in
dec
mov
stos
sahf
cltd
mov
adc
lret
xchg
push
mov
fdivrl
mov
pop
jb
mov
imul
lds
mov
sahf
mov
fdivrs
aaa
inc
enter
sahf
cmc
arpl
xor
mov
cmp
inc
push
cmp
rcll
xchg
shll
lock
aas
cld
ret
fxch
pop
fsts
cmp
mov
jae
daa
int
lods
mov
push
fs
fidivrs
adc
add
and
pop
cli
inc
dec
mov
jge
cmc
sub
sub
rclb
push
dec
fisubs
mov
mov
rcl
idiv
cmp
push
nop
clc
push
out
inc
scas
push
ljmp
test
mov
aam
adc
pop
rcrb
es
lds
int3
dec
lret
jmp
or
or
xchg
test
sub
lret
lods
and
sub
sbbl
lea
mov
in
cmp
push
jmp
push
xor
enter
fdivr
and
fsubr
mov
xor
add
daa
out
cld
push
push
jne
jmp
lret
and
pop
jg
cwtl
and
or
sub
mov
lcall
or
lds
out
dec
pop
push
insl
test
cmp
dec
popa
pusha
outsb
push
or
addl
xchg
xchg
scas
add
test
cs
dec
iret
rcrl
lret
cmp
push
inc
push
pop
rorl
sbb
cmp
push
movsl
pop
arpl
pushf
imul
pushf
and
dec
add
cmp
test
orb
lock
cmp
xchg
lods
jp
adc
push
out
jg
inc
xlat
out
fsincos
lret
cmc
pop
imul
shll
sbbb
inc
push
fwait
inc
rcrb
fstl
adc
lahf
notb
mov
sbb
cltd
adc
and
out
sbb
lods
sub
pop
outsb
jae
out
movsb
dec
lods
test
je
sub
je
ret
in
stc
enter
xor
ja
sbb
leave
and
jmp
fs
push
sub
or
rorb
or
inc
lret
iret
ficoml
and
sbb
movsb
loop
mov
sbb
or
dec
push
jmp
inc
mov
push
cli
ljmp
xchg
ss
repnz
pop
sahf
adc
push
cmp
or
jnp
xlat
xchg
mov
adcl
pop
push
inc
dec
test
inc
inc
xchg
xchg
xor
add
movsb
lds
loope
popf
adc
ret
daa
adc
xorb
mov
inc
lahf
imul
call
stc
push
in
and
nop
xchg
or
mov
scas
push
pop
cwtl
std
xchg
or
testl
adc
dec
adc
enter
repz
push
xlat
outsb
lcall
sub
sub
fistps
push
dec
xor
sbb
mov
nop
sub
lods
aaa
jae
dec
scas
jb
ljmp
add
sbb
enter
xbegin
jne
or
stc
out
test
cmpsb
jl
iret
dec
fisubrs
lea
das
and
xor
iret
push
jg
dec
or
idivb
pop
fmul
iret
aad
call
popa
mov
lea
adc
xchg
call
jg
sbb
push
xchg
pop
aas
cmpsl
call
sbb
and
fs
fildl
mov
push
add
push
shrb
pop
sbb
xchg
dec
inc
and
jge
cmc
inc
sahf
inc
mov
jne
push
sti
push
inc
mov
jae
andb
pop
call
mov
pop
add
out
je
xchg
mov
and
insl
push
insb
ret
int
mov
mov
idivl
stos
sub
movsb
nop
jge
fisubs
mov
mov
ret
cmpsl
lahf
scas
mov
std
adc
jmp
sahf
in
push
in
add
cwtl
sbb
pop
mov
aaa
mov
jno
mov
xlat
and
jge
xchg
adc
testb
adc
inc
mov
fisubl
or
cmpsb
xchg
jle
int
repnz
fadds
pop
test
mov
push
cwtl
ret
fwait
mov
jbe
sub
mov
mull
in
je
inc
addr16
inc
cmpsb
cs
call
mov
repnz
cli
inc
aas
dec
in
es
popf
scas
rcll
mov
inc
inc
lock
out
xchg
ss
sar
sub
das
cmp
lcall
pop
addl
dec
scas
cmpsb
mov
dec
mov
ss
dec
xor
adc
adc
jg
jecxz
cmp
dec
dec
pop
aaa
or
cmp
cmp
push
dec
and
add
test
jbe
pop
imul
lods
in
testb
sbbl
jmp
jl
es
and
dec
popa
pop
jl
cmp
hlt
add
jno
pusha
mov
sub
fistps
push
pushf
inc
mov
push
hlt
int3
mov
sbb
push
aaa
int
rol
fwait
xchg
jbe
fmul
and
cwtl
fistl
add
int
adc
es
jecxz
add
fnstcw
jb
das
sub
mov
icebp
mov
sub
mov
leave
stos
jmp
clc
cld
arpl
in
push
sub
hlt
cmpsb
mov
in
sub
imul
fdivl
pop
and
jg
cmp
cs
jge
dec
enter
out
push
cmc
sbb
shrb
sbb
cs
mov
jnp
mov
pop
xor
push
mov
ljmp
fs
mov
xor
lds
mov
out
es
mov
xchg
pop
test
loope
loop
inc
pop
mov
pop
fimull
xchg
dec
jmp
divb
xor
fimuls
xchg
jnp
sahf
mov
push
and
fs
lock
outsb
pop
xchg
cmp
xchg
idivb
xchg
mov
pop
loop
dec
mov
inc
or
adc
testb
and
enter
or
es
lods
inc
stos
mov
jge
push
pop
test
roll
cltd
jg
mov
mov
adc
xchg
xchg
mov
mov
add
jmp
xor
xor
cmp
fucom
pop
ret
cmp
sub
scas
pop
xor
divl
into
add
inc
mov
cwtl
cmp
enter
xchg
insb
enter
imul
data16
int3
lock
cmp
push
jmp
testb
sbb
aas
aam
push
test
mov
loope
jle
and
mov
loope
inc
jo
jo
callw
fadds
iret
ss
mov
jecxz
jae
insl
pop
lahf
pusha
pand
add
adc
sub
pop
jo
inc
mov
fcomi
adc
push
mov
sub
dec
jb
adc
jmp
adc
xchg
pop
addb
or
cs
in
shrb
add
jne
xor
jno
jge
sub
mov
jbe
ret
jmp
pop
insl
cmc
xor
pushf
jg
inc
ret
xchg
cmp
push
xor
lods
jnp
outsb
addr16
imul
inc
xor
insb
subl
xor
xchg
nop
sub
movntq
nop
sahf
decl
mov
sbb
cmp
mov
shll
idiv
push
scas
sub
dec
lahf
int
xorb
imul
test
test
cmp
lods
lret
pushf
push
inc
pop
aaa
inc
sar
mov
out
dec
out
adc
outsb
add
jg
testb
insb
stc
ds
mov
in
push
inc
fstpl
sub
data16
sahf
inc
das
dec
push
sbb
shlb
sahf
rclb
fsubl
push
sub
in
and
pop
pusha
inc
int
cli
rorl
xchg
pop
sub
pop
test
lods
pop
testl
or
add
in
jne
mov
xor
cmpsl
inc
and
mov
mov
dec
insl
mov
cmp
fbstp
push
sub
jmp
or
jg
xlat
std
mov
push
lods
jmp
pusha
aas
fstl
xorl
in
add
addr16
stc
cmpsb
or
fcomp
pushf
scas
or
iret
lahf
push
ja
inc
inc
inc
and
lret
fmul
insb
ret
mov
mov
and
jbe
movsl
cmc
sub
cmp
and
test
pop
add
cwtl
push
sub
adc
push
inc
insb
divb
js
notl
mov
adc
outsb
jne
fisubs
cs
nop
leave
int
sub
inc
stos
sub
add
outsb
loope
mov
test
dec
in
jbe
mov
rol
int3
xchg
mov
sbb
adc
scas
xor
jne
adc
inc
adc
aaa
pop
popf
add
test
cmpsb
mov
js
aas
rolb
add
add
lcall
outsl
out
scas
mov
lds
pop
cmp
out
cltd
inc
dec
jecxz
ficomps
add
pop
cmp
pushf
sti
aad
roll
mov
int
in
jno
es
sahf
dec
pop
mov
mov
imul
les
sbb
iret
lea
idivb
in
inc
fwait
das
pop
push
push
xchg
and
mov
ja
fstps
jbe
xor
popa
jnp
leave
loope
xor
jg
jo
imul
mov
pop
or
out
addl
adc
insl
sub
or
in
push
lret
cld
stos
pushl
and
flds
dec
pop
dec
or
cli
sub
sub
les
sub
or
js
pop
jecxz,pt
inc
leave
loop
je
push
out
bound
fists
movl
sbbb
icebp
pop
loopne
insl
hlt
cli
or
ficompl
xchg
and
fistps
fistl
mov
xchg
jns
xor
cltd
test
jecxz
mov
xor
mov
dec
mov
adc
dec
jne
push
icebp
icebp
pop
shll
cmp
or
sbb
mov
jo
pop
sar
movntq
pop
icebp
jecxz
in
idiv
js
and
add
insb
jmp
xchg
xchg
pop
fistps
mov
out
push
roll
jbe
add
test
inc
inc
fnsave
aad
sub
dec
push
insl
pop
bound
sbb
es
add
stos
in
dec
scas
sbb
pop
xlat
aam
scas
add
stos
adc
cmp
xor
les
sbb
rcrl
je
push
test
iret
enter
dec
mov
xchg
shrb
in
ljmp
sub
mov
adc
dec
xor
aad
decb
loopne
sub
mov
cmpsl
ret
adcl
fsubs
mov
mov
imul
dec
scas
test
adc
pop
cltd
std
aam
enter
pop
scas
fisubrl
jnp
inc
popf
sub
xchg
inc
fmull
mov
xchg
sbb
push
sub
jbe
out
xchg
xor
repnz
adc
sbb
les
testb
push
notb
or
fwait
inc
xor
push
in
sbb
lcall
outsl
cmp
je
pushf
xor
sbbb
ja
jne
adc
cmp
mov
xchg
stos
flds
push
test
jmp
rcrb
mov
and
out
cmove
xor
or
out
xor
pop
mov
jecxz
lods
test
mov
mov
ljmp
and
push
fisubl
lret
pop
mov
fisttpll
lret
pop
sahf
daa
xchg
push
inc
ss
push
imul
rcll
fdivrs
mov
cltd
ljmp
insb
test
out
test
loope
inc
fs
and
dec
dec
adc
cmp
dec
mov
cmp
inc
mov
mov
jmp
jo
sbb
rorl
inc
imul
sub
jae
jecxz
out
cld
in
adc
and
imul
pop
fildl
push
cld
lahf
test
test
lods
mov
iret
out
les
repnz
sbbb
pop
push
mov
lcall
shrl
jmp
fdivl
or
jle
fwait
dec
in
pop
fdivp
and
insb
jle
jne
lcall
or
jp
pop
cmc
out
xchg
into
iret
inc
cmp
inc
loope
lea
enter
sbb
gs
mov
bound
jbe
sub
adc
repz
out
stc
xor
cld
inc
add
inc
test
test
sbb
jbe
inc
test
dec
fisttpll
imul
filds
xor
xchg
push
inc
lods
js
jb
push
xor
gs
pop
adc
jg
pop
out
sub
jbe
or
add
and
jg
ja
andb
les
test
std
stos
inc
dec
loop
imul
push
fiaddl
jnp
inc
sub
dec
int
lock
test
pop
dec
and
or
sub
pop
inc
jbe
shl
ret
mov
adc
or
cs
movsb
jbe
adcl
negl
or
cmp
mov
lahf
sbb
cmp
or
mov
js
ljmp
xchg
out
sbb
gs
sub
or
or
push
mov
pusha
jle
fstl
add
xchg
pop
sub
jl
and
leave
cmp
xchg
jp
jmp
sti
adc
push
and
add
add
cltd
xor
jo
sub
sbbl
subb
pop
lock
loopne
cs
lcall
mov
pusha
adcb
out
xchg
dec
inc
pop
cmpsb
sti
shll
out
cmc
dec
loop
popa
pop
in
pop
imul
dec
int
push
stos
lock
mov
int3
movsl
cmp
pop
aaa
dec
movlps
jo
or
lock
loope
cmpsb
dec
mov
and
les
xchg
dec
push
dec
mov
inc
ret
out
dec
or
jnp
stos
inc
out
inc
and
sub
push
ret
sub
mov
scas
jno
or
dec
dec
test
mov
fdiv
in
insl
sbb
movsb
leave
lds
dec
jp
lods
pop
pushf
outsl
inc
inc
mov
jns
pop
insl
mov
stos
jo
mov
lods
jg
inc
mov
dec
cmpsl
icebp
jmp
loop
jo
jns
jo
mov
cmpsb
add
cmc
clc
mov
jg
fisttps
stc
aam
jns
jmp
sub
fnstenv
andl
mov
and
shlb
mov
pushf
pop
dec
fisttps
cs
pop
in
cmpsb
push
inc
ja
xor
xchg
mov
xor
xchg
xor
lds
shr
mov
ret
jmp
aad
jo
in
adc
aaa
xor
test
or
sub
pop
jae
ret
clc
hlt
push
fwait
jp
push
add
mov
lds
enter
outsb
adc
xchg
shrl
sbb
jae
or
mov
lcall
iret
inc
bound
ds
and
mov
frstor
mov
dec
inc
lret
cmp
lock
adc
test
stos
jecxz
cmp
dec
xchg
add
hlt
mov
sub
sub
push
sub
add
dec
outsb
sub
sti
push
push
les
dec
push
ds
mov
lea
bnd
or
xchg
jbe
jl
icebp
pop
ds
mov
mov
jp
jp
mov
cmpsl
cmp
sbb
movsb
cmp
xchg
sbb
fsubrl
or
and
or
cs
stos
test
cmp
lret
add
sahf
lods
outsl
imul
imul
paddusb
push
jns
and
shll
mov
and
xor
xor
pop
mov
shr
jge
add
lcall
jge
in
aad
sbb
pop
cmp
jg
dec
cmc
jecxz
xorl
test
ret
shrl
cltd
mov
icebp
jle
lds
js
xchg
cmp
es
and
push
aam
inc
stos
and
outsb
inc
clc
or
fcmovnb
adc
jae
mov
add
rorl
loope
inc
addr16
sbb
xchg
dec
mov
loopne
ficomps
andl
or
cs
jb
mov
push
mov
cmp
in
pop
bound
outsb
int3
mov
jbe
lea
sub
out
sahf
adc
loop
fs
sbb
jne
pop
jae
pop
mov
in
and
das
or
cmp
or
xchg
xchg
xchg
pushf
rcrl
jmp
mov
cmpsb
cmp
cmp
jae
mov
add
pop
xchg
cmp
mov
push
test
fisubrl
aad
xor
sub
sti
xchg
cmp
lahf
lods
xchg
xchg
out
testb
inc
sub
mov
mov
ds
rclb
movsl
mov
xchg
sbb
call
test
ret
lock
mov
cli
insl
adc
or
push
cmpsb
push
mov
fcomip
mov
xchg
sbb
xlat
dec
mov
fsub
jbe
sbb
or
dec
shr
out
gs
xor
ret
mov
mov
adc
loop
add
gs
fisubrs
das
sub
dec
fbld
push
dec
fcmovnu
ret
jo
fcompl
dec
movsl
fcomi
stc
cmp
sbb
ljmp
xchg
sub
in
imul
cltd
jns
mov
ror
bnd
out
cmp
test
lods
adc
repz
add
push
inc
inc
test
xchg
adc
pop
leave
mov
rol
xchg
and
inc
jne
jle
sbb
and
in
mov
lods
push
shrl
into
loopne
jl
cmpsl
xchg
aam
adc
mov
sub
subl
mov
arpl
cld
dec
push
mov
push
cwtl
push
and
push
mov
stos
scas
scas
inc
dec
fmuls
lock
xchg
sub
jns
mov
cmp
icebp
enter
sbb
inc
sub
xlat
cmp
insl
in
les
jle
jp
mov
mov
pop
imul
les
dec
ror
mov
ret
jbe
add
je
stc
push
lods
lahf
mov
mov
decl
jno
lods
jge
xchg
adc
testb
das
and
loope
into
std
inc
xor
jmp
std
cmp
in
xchg
push
sub
out
lcall
cltd
push
cmp
mov
mov
jnp
pop
lock
jns
and
xor
inc
call
or
push
cli
movsb
xor
xor
mov
mov
xchg
cld
sbbb
push
dec
add
cmpsl
stc
lcall
pop
cmc
in
mov
dec
dec
mov
rol
arpl
xor
call
mov
bound
cmp
pop
sub
sub
dec
inc
clc
mov
or
jmp
mov
mov
adcl
pop
mov
adc
adc
sub
mov
lcall
add
dec
add
je
popf
dec
pop
and
pop
xchg
fcomps
lods
cmp
les
sbb
jl
or
lods
pusha
mov
mov
orb
xlat
push
movl
adc
ljmp
jne
add
int
lret
push
mov
fimuls
push
push
mov
or
and
movsb
xorl
std
inc
mov
dec
jmp
mov
dec
cmp
int
ja
dec
out
bound
decb
jnp
dec
and
inc
das
pop
repz
ljmp
testb
clc
ficoml
pop
orl
repz
jecxz
hlt
clc
loop
xchg
loop
pop
xchg
lret
cmovns
xor
lock
push
pop
jne
cmp
notl
in
test
lods
int
repnz
pop
loop
outsb
xchg
outsb
mov
push
dec
cli
bound
xlat
cmpsl
pop
cli
xchg
mov
sbb
andb
pop
testl
mov
push
pop
pop
imul
mov
fidivrl
add
inc
and
mov
int3
rol
ret
push
lret
repnz
xchg
arpl
xchg
cmp
subb
pop
fidivs
xorl
je
mov
add
cmp
dec
pop
jl
lret
jns
lods
cmpsl
js
aaa
stos
adc
in
lcall
xor
cmp
push
xchg
or
test
jge
pushf
xor
sbb
popf
push
dec
mov
mov
sarb
inc
sbb
std
push
sbb
cmp
int3
pop
pop
jns
rclb
and
bound
into
imul
test
arpl
inc
inc
cwtl
jae
mov
stos
iret
push
iret
mov
xchg
popa
pop
adc
cmpsl
js
push
testl
in
add
xor
icebp
insb
mov
lock
mov
data16
add
int
pop
lcall
adc
dec
push
ret
jnp
movsl
xor
insb
sbb
xor
xchg
fisttpl
and
jle
add
adc
sbbl
xchg
jp
cmp
lahf
push
mov
iret
mov
cmpsb
ja
bound
cli
add
mov
push
add
sarb
int
jg
leave
outsb
cmp
jnp
cmpsb
sbb
pop
sarb
jecxz
xor
loop
or
push
jmp
mov
movsl
jle
xchg
es
xor
out
fwait
jo
jp
mov
mov
bound
dec
fbstp
movsb
iret
pop
test
insl
ftst
outsl
in
fsubs
in
pop
loope
rclb
jg
cmp
xor
jg
push
int
mov
pop
xchg
ss
push
iret
popw
mov
into
das
rcrb
lea
fnstcw
insb
wbinvd
adcl
les
sub
add
es
and
inc
cmpsl
inc
in
jne
int
cmp
adcb
lock
addr16
adc
lret
daa
push
push
mov
adc
mov
mov
daa
mov
bound
gs
adc
push
mov
call
je
mov
mov
in
and
icebp
cmpb
xchg
mov
cmp
inc
pop
mov
arpl
aam
xor
popl
adc
mov
pop
std
mov
sahf
test
je
or
push
iret
gs
push
mov
pop
sbb
addr16
sbb
sbb
inc
jg
out
shrl
inc
repnz
rdpmc
lock
enter
out
jns
xchg
jle
aad
mov
cli
int3
pusha
or
mov
push
call
addb
aaa
xor
imul
cmp
ret
push
fcompl
lods
cmp
jle
cli
mov
xor
dec
cld
inc
cmc
stos
lcall
lods
fsubs
inc
fimull
jle
sbb
sub
loope
lods
mov
stc
pusha
movsl
sbb
std
mov
xlat
xchg
in
aam
push
xchg
mov
fsubrs
clc
xorb
push
cmc
jge
xlat
out
aad
sub
push
fiaddl
jb
inc
push
mov
cs
and
cs
push
lahf
xor
fwait
cs
push
inc
scas
push
pop
sahf
xor
bnd
sub
cmp
inc
jle
jle
in
fwait
test
int
jl
test
arpl
xchg
push
sbb
addl
mov
inc
pop
das
cli
mov
and
mov
jno
or
les
and
std
push
addr16
fldenv
das
cmp
adc
xor
aad
push
fwait
ss
iret
loopne
xchg
lret
pop
push
jge
sub
in
rol
mov
out
xchg
cmp
rolb
xorl
push
aam
gs
jb
and
jne
idiv
je
jno
mov
mov
sub
pop
clc
jne
mov
push
shll
cltd
lods
pop
out
sub
andb
clc
dec
out
es
push
insl
pop
adcl
dec
sub
outsl
rorl
cli
es
ficompl
bound
lea
xchg
inc
js
sub
mov
pop
jp
shrl
rol
daa
loope
push
dec
int
jno
gs
xchg
pushf
imull
rcrb
mov
stc
adc
movsb
inc
fldl
mov
inc
dec
cmp
adc
mov
push
sbb
push
aad
jno
xchg
scas
mov
insb
int3
inc
mov
sbb
stos
mov
sahf
sub
cltd
adc
pop
imulb
loop
mov
mov
fucomp
test
push
inc
push
leave
xchg
mov
aaa
lret
xor
jmp
add
movsb
mov
rolb
rorl
imul
mov
jmp
sbb
enter
sbb
cmp
mov
or
jbe
jg
xor
add
mov
ljmp
stos
push
xchg
scas
test
loopne
test
and
xlat
in
leave
mov
push
jmp
pop
loopne
mov
sub
cmpsl
fisubrs
xor
fwait
cltd
push
dec
out
pop
and
scas
and
sbb
mov
adc
push
movsb
xchg
jnp
ds
mov
mov
je
das
stos
and
divb
mov
fsub
in
inc
idiv
lret
jb
movsl
in
sbb
nop
dec
les
sub
mov
xchg
in
lds
mov
es
mov
rol
or
mov
xchg
inc
jp
fbstp
aaa
or
add
arpl
xor
lret
jl
ljmp
ds
pop
ds
fdivl
mov
dec
arpl
rol
call
int
arpl
jecxz
jb
pop
jno
inc
add
jo
mov
jl
jle
xor
jg
fstpt
mov
notl
adc
mov
pop
daa
cli
push
in
test
sub
fiadds
sahf
stos
xchg
pop
in
nop
rcl
adc
sub
xchg
test
aam
mov
dec
dec
iret
pop
test
aad
dec
rolb
jbe
add
lret
sub
cmpsl
ds
pop
or
les
or
jecxz
fsubp
jecxz
cli
dec
push
sub
and
scas
lea
push
pop
aam
cmp
cwtl
dec
test
adc
dec
and
mov
pop
mov
mov
cwtl
out
and
xor
in
jle
das
cmp
mov
lock
in
xchg
jle
cmp
in
inc
lods
cltd
inc
lret
lret
sbb
daa
adc
aad
mov
dec
rol
mov
hlt
add
pushl
scas
inc
sub
lds
xor
es
popf
movsl
cmp
orb
ret
arpl
out
and
jbe
push
test
scas
and
inc
sbb
cli
mov
pop
loopne
fnstsw
mov
psllq
sbb
jne
lret
in
jb
mov
mov
aas
mov
pop
add
dec
sbb
pop
leave
outsl
daa
mov
jb
ret
pop
sbbl
out
fsubrl
sbb
jno
jp
lea
mov
lcall
in
clc
xchg
subb
inc
cli
xlat
cli
sbb
pop
sub
adc
add
cmp
pop
mov
dec
js
jmp
push
push
xchg
adc
add
out
xchg
xchg
xor
test
movsl
imul
adc
andl
or
fdivrs
and
mov
dec
lods
pop
inc
gs
push
jmp
es
insl
dec
jecxz
gs
jb
shl
scas
sub
add
jp
aam
pop
pop
enter
push
mov
ds
cmp
loopne
clc
mov
add
fldt
arpl
shrl
jl
rclb
mov
jp
inc
pop
shr
andb
mov
or
into
and
sbb
loop
cmp
mov
fwait
mov
push
or
xchg
sub
dec
pop
imul
xchg
ljmp
pop
roll
rcrl
testb
mov
mov
mov
pop
dec
sbb
shl
xchg
mov
fwait
push
out
mov
lds
popf
add
pop
jle
xchg
or
data16
int
jae
je
cmp
sti
and
iret
sub
insb
pushf
dec
imul
cmpsb
loop
jmp
dec
sbb
mov
jp
xchg
jg
lcall
dec
clc
push
aas
fucomp
test
mov
shlb
mov
je
jle
add
sub
int
insl
or
push
inc
pop
test
mov
repnz
and
xchg
fists
lahf
stos
sub
or
cli
loope
xlat
cltd
sbb
in
mov
test
push
jno
ljmp
int
xor
les
imulb
seta
inc
cltd
or
pop
ja
stos
jmp
popa
lahf
gs
add
xchg
mov
cmpsl
std
rclb
mov
dec
int3
loope
lret
movsb
pop
adc
pop
add
cmp
xchg
pop
mov
add
mov
inc
inc
fidivs
push
gs
loopne
nop
sub
sub
pop
lcall
lret
addr16
cmp
gs
push
les
mov
mov
cmpsl
mov
add
les
push
in
push
mov
arpl
jecxz
mov
fcom
test
out
mov
adc
es
jge
lea
sar
pop
mov
movsl
fidivs
jbe
dec
mov
sbb
cmp
sbb
inc
and
insb
cli
in
daa
mov
bound
inc
mov
fists
xor
mov
mov
adc
push
xor
xor
leave
cmp
mov
iret
cmp
out
loope
int
adc
lea
mov
jge,pn
out
fimuls
test
test
mov
and
sbb
pop
xchg
pop
dec
rcrl
and
cmp
lahf
sti
stc
mov
cwtd
test
int3
jb
sub
xchg
and
mov
cmpl
push
pop
inc
pop
dec
add
mov
ret
sarl
sbb
and
sbb
add
sub
mov
addb
mov
add
js
jae
jns
inc
pop
cltd
dec
loopne
sub
js
lret
les
mov
jne
mov
or
jns
daa
pop
and
pop
stos
aam
push
inc
scas
mov
pop
aad
cli
pop
orl
pop
imul
pop
mov
stos
rclb
or
int3
adc
cltd
mov
loop
in
mov
push
jl
insb
add
adc
lret
push
mov
mov
loopne
in
inc
cmp
movsb
in
aaa
xchg
push
xchg
push
cmp
add
sub
lret
fstpl
ret
sub
mov
daa
outsl
mov
push
pop
lret
movsl
push
xor
xlat
mov
push
idivb
in
leave
dec
stc
push
popf
fidivrs
lds
pusha
int
inc
xor
fsts
lret
jno
ja
popa
rolb
jae
pop
lods
dec
call
test
xor
testb
out
xchg
or
call
call
cmp
stos
daa
add
test
out
xor
aam
pop
stos
imul
adc
push
add
fbld
push
out
pop
clc
jae
js
sub
xchg
mov
loope
lods
sub
fst
pop
xor
int3
or
sub
out
sub
cmc
mov
pop
xor
mov
adc
rorl
es
adc
iret
xchg
push
mov
xor
add
gs
xchg
inc
lods
pop
lock
xor
pop
mov
into
sbb
cmp
mov
movsb
sub
hlt
imul
or
insl
insb
mov
inc
mov
sbb
push
sub
popa
ret
aas
mov
or
jmp
insl
fistpll
jno
in
daa
shrl
inc
push
out
and
xchg
xchg
sbb
fbld
xor
push
cmp
add
xor
jmp
mov
pop
mov
in
jecxz
inc
push
out
out
call
mov
popa
stos
sets
pop
sbb
andb
cmp
xor
aad
add
jle
xchg
dec
std
sbb
lahf
and
fs
mov
push
andl
push
sub
stc
xchg
push
lret
shl
jnp
test
pop
lcall
adc
fs
incb
adc
into
pop
push
int3
out
add
lcall
xchg
icebp
mov
fsubrs
add
aas
loope
or
sbb
xor
mov
in
fs
lods
repz
aam
mov
cmp
inc
sbbb
xchg
roll
xor
jmp
addr16
jecxz
movsb
sub
loop
add
das
cli
mov
fdivs
jae
or
mov
dec
jno
outsb
insb
cmpsl
ret
outsb
pop
xor
cmpsl
xchg
ljmp
and
ljmp
insl
add
xor
cld
in
mov
push
inc
movsb
push
xorb
popf
daa
shr
pop
out
adc
sub
cmp
cmp
das
ss
sub
pushf
scas
push
jl
aad
incl
or
lds
movsb
xor
xor
inc
push
imul
or
mov
pop
sbb
jl
push
mov
pop
in
sbb
nop
jle
cmp
stc
mov
insb
fdivrl
mov
pusha
ss
push
mov
pop
push
dec
mov
enter
dec
jmp
or
js
fs
and
jp
icebp
xor
sub
test
cmpl
mov
mov
push
shr
pop
sbb
inc
mov
bndldx
js
addr16
lea
jge
notl
clc
rcrl
sub
aam
stc
xchg
sbb
fisubs
sbb
bound
mov
das
clc
push
xchg
in
and
fildll
ret
ficompl
popa
imul
popa
xor
pop
jno
divb
ret
stos
aas
pop
sbb
mov
fsubrl
enter
xor
lds
dec
pop
pop
mov
sahf
ja
je
dec
pop
push
mov
rol
cmc
pop
jg
mov
mov
or
sub
mov
lock
out
enter
xor
jns
adc
int
add
cwtl
lret
push
xlat
lock
jmp
dec
imul
push
aad
cmp
adc
jecxz
divl
mov
jno
add
adc
jecxz
mov
clc
jo
dec
es
aad
leave
inc
push
in
pop
mov
call
iret
cmc
pop
fsubrs
insb
rorb
or
sub
scas
or
sub
mov
shrl
ficomps
dec
scas
ret
jle
shrl
cmp
sub
pop
stos
inc
or
inc
rcr
enter
dec
mov
imul
pop
mov
mov
pushf
xor
cs
inc
mov
mov
rolb
sub
repz
or
insb
jae
pop
xchg
scas
xchg
repz
int
cmp
add
aam
out
pop
ficompl
and
addl
iret
push
adc
mov
fidivl
stos
xchg
and
aas
sbbl
mov
andb
out
sbb
sub
inc
mov
loope
push
test
xor
jo
int
cs
xor
aad
sub
movsb
mov
scas
clc
or
nop
ret
adc
cmc
mov
pop
adc
dec
pop
jae
hlt
mov
js
std
mov
in
ret
xchg
lret
xchg
repnz
mov
scas
xchg
mov
dec
or
faddp
fs
mov
loope
xor
rcll
lods
sbb
mov
pop
scas
ja
jp
ret
cwtl
cmp
and
andl
dec
sbb
and
es
mov
jnp
sbb
rol
add
jge
cmpsl
adc
inc
enter
int
sar
sbb
jb
and
fidivs
cmp
mov
out
test
shlb
lock
add
pop
movsb
inc
add
mov
dec
inc
cmp
call
in
push
inc
ljmp
jle
call
xchg
inc
in
pop
cmp
inc
cmpsl
hlt
mov
scas
jns
into
sub
inc
inc
fdivs
inc
push
pusha
mov
sub
mov
dec
push
sub
jae
icebp
js
pushf
pop
fwait
mov
push
mov
mov
xor
jb
mov
mov
xchg
inc
loope
inc
and
and
aam
xorb
push
pop
bswap
pop
sbb
sti
cmp
js
outsb
jp
jnp
jl
xor
sub
jge
clc
pop
cmp
into
push
mov
push
ja
in
inc
mov
jmp
ds
jns
test
jle
sahf
mov
mov
stos
push
mov
loope
pop
dec
lock
addr16
scas
push
xchg
icebp
popa
clc
mov
pop
jg
mov
push
data16
cwtl
ljmp
cld
or
shll
ret
pop
cmp
sub
xchg
xchg
hlt
dec
call
inc
dec
add
jns
pop
subl
jmp
clc
jo
mov
mov
cmp
iret
fadds
es
pop
loop
outsl
adc
dec
clc
ja
das
out
out
inc
push
add
xor
orb
pop
repnz
fdivrl
mov
cmc
jns
pusha
push
jo
xchg
mov
test
sbb
inc
loope
loop
out
test
push
leave
sub
mov
loop
inc
adc
mov
xchg
sub
lahf
shlb
pop
repz
lret
push
arpl
xor
clc
movsl
or
and
push
aas
rolb
in
loope
cmp
data16
jns
fbstp
scas
cli
ret
push
movsl
filds
aam
jecxz
inc
jle
mov
jle
mov
mov
rcll
rclb
and
lret
loope
aad
adc
jno
popa
xor
dec
pop
shrb
in
pop
mov
ja
cmp
sub
mov
sub
dec
xchg
xor
shll
or
push
sub
repnz
test
or
add
fwait
stc
push
stos
mov
int
jo
push
std
jo
mov
lcall
data16
outsl
mov
pop
in
xor
inc
mov
imul
pop
dec
lcall
fxch
ret
pop
sti
cli
pop
mov
sbb
xor
add
cs
xchg
mov
into
lcall
lock
dec
mov
sahf
and
stos
ucomiss
adc
and
stc
shlb
inc
add
in
sub
xor
cwtl
lods
fcomps
inc
mov
ret
and
arpl
jno
xchg
sub
mov
in
mov
or
jl
cmp
push
push
mov
push
outsl
mov
lcall
lret
mov
cmp
mov
loope
dec
subl
jl
sub
sbb
sbb
mov
lahf
or
std
pop
inc
add
daa
insl
jns
in
jp
cmpsl
outsl
jmp
push
js
push
or
adc
pusha
test
inc
mov
pop
xchg
xchg
push
dec
hlt
lret
sti
rcr
xor
xchg
pop
pop
je
aad
cli
repz
in
or
pop
jnp
push
mov
sarb
mov
movsb
mov
pop
add
xor
subb
dec
sahf
lar
and
push
mov
adc
popa
push
dec
mov
data16
arpl
subl
pop
mov
push
jecxz
sub
push
test
dec
cwtl
sub
cwtl
dec
in
mov
rcrl
fsubrl
bound
sbb
or
outsl
je
insl
aam
jge
pop
jbe
sub
push
dec
xchg
inc
out
js
rorb
enter
xor
data16
add
outsb
xchg
mov
add
sbb
push
adc
aam
or
sub
pop
movsb
xor
jns
inc
les
xchg
dec
sub
scas
push
push
mov
movsl
insl
inc
cli
mov
xor
ss
xor
aam
pop
or
xchg
sub
andb
in
mov
jle
mov
jg
aaa
stc
add
sti
sub
adc
jmp
loope
dec
repnz
push
and
sbb
cmp
push
jmp
inc
mov
push
xchg
jbe
in
pusha
jnp
fcmove
outsl
repz
shll
pop
sarb
cld
add
shl
inc
xlat
sub
sub
or
imul
pushf
loop
and
mov
scas
push
lret
repnz
jmp
jmp
mov
cli
lock
pop
pop
cmpsb
mov
into
inc
andb
into
test
cmp
out
xor
and
arpl
add
pop
es
testb
and
call
in
out
sahf
loop
stos
in
mov
adc
push
and
fldt
jno
ds
enter
mov
int
sarb
ficomps
loopne
dec
pop
dec
xlat
xchg
testl
sbb
stos
iret
push
jb
insl
sub
ret
ds
lods
movsb
outsl
test
inc
lret
xchg
inc
shll
gs
out
in
ret
pushf
cmp
ds
cmp
mov
fistps
sbb
jns
dec
jecxz
inc
or
inc
pop
push
pushf
cs
hlt
cli
loopne
inc
push
scas
mov
and
repnz
xor
jmp
and
sub
ror
jg
mov
mov
add
pop
insb
lea
idivb
das
das
push
mov
mov
es
es
ds
push
mov
add
pop
jae
and
rorb
cmp
cmp
or
ljmp
cmpl
rcrl
dec
mov
outsb
mov
das
into
mov
add
ljmp
pusha
mov
mov
rcr
adc
loop
hlt
push
mov
jle
int3
mov
pop
test
inc
jl
mov
sub
je
xchg
fisubrs
pop
cmp
mov
sub
subl
cli
sbb
test
sub
and
jle
in
mov
jo
outsl
andb
loopne
adc
fwait
ljmp
inc
test
movsl
fsts
or
jbe
mov
cmp
inc
cs
sbb
mov
jl
jbe
jmp
add
in
xor
pop
loop
dec
fwait
push
lret
cmp
js
in
cmpsl
dec
pop
push
enter
xchg
sub
xor
and
sti
jmp
loopne
and
sub
lods
push
shll
mov
outsb
in
sub
cmp
add
push
imul
aas
clc
mov
cmp
adc
rcrl
sub
or
or
imul
test
inc
in
mov
cld
repnz
pushf
mov
cld
aam
jns
sub
mov
ljmp
jb
xchg
push
xor
and
inc
inc
inc
pop
jb
shr
cwtl
sub
mov
fisubrs
ret
sbb
or
inc
cmp
lods
push
hlt
xor
adc
jecxz
mov
mov
adc
push
iret
or
fildl
movsl
push
pusha
push
xchg
or
lcall
call
sbb
inc
xchg
cmp
scas
add
mov
lds
ret
mov
xchg
fidivs
or
int
jnp
add
dec
mov
mov
lret
inc
add
lret
stos
push
sub
sbb
add
test
and
addr16
adc
add
pop
add
cmpb
push
sti
sbb
out
mov
xchg
and
push
xor
adc
jl
mov
xchg
jo
push
mov
adc
fcmovnb
cmp
mov
faddl
mov
add
loopne
inc
adc
rolb
pop
push
loope
or
lahf
fstl
aam
cs
mov
gs
in
enter
popa
insb
shll
pop
sub
fldcw
pop
xor
cmp
adc
and
dec
cld
push
mov
sbb
adc
pop
mov
xlat
daa
insb
sti
lcall
cmpsl
dec
cmp
loopne
in
aad
cmp
cmp
inc
stc
insb
insb
pusha
in
and
mov
dec
cld
and
movsb
cmpsl
imul
or
ds
sahf
lock
in
mov
xchg
mov
addr16
lret
mov
or
je
mov
jl
fdivrl
adc
jle
cmp
fidivrl
imul
jno
cltd
sub
xchg
fmull
rorb
sahf
sbb
jno
adc
fs
ja
mov
out
inc
and
pop
inc
pop
inc
xor
imul
pop
mov
in
int3
push
mov
jmp
cmp
cmp
push
ret
call
imul
and
pop
repnz
int3
test
pop
mov
cwtl
xor
mov
jb
call
add
es
outsl
pop
jmp
dec
mov
jns
lds
cld
mov
lods
fwait
push
adc
leave
pusha
jmp
cld
out
pop
jp
push
lods
inc
mov
js
pop
cmc
dec
dec
push
psllw
xlat
ljmp
mov
adc
and
rcrb
loop
pop
sti
ret
inc
push
cmp
adc
mov
shll
xchg
xchg
out
int
mov
jns
and
jne
cli
ror
adc
lcall
mov
mov
jg
fnstenv
push
dec
std
repz
icebp
mov
push
ss
push
inc
or
insl
jae
subb
dec
push
cmp
jge
inc
sahf
cltd
xchg
out
add
mov
jo
jb
into
and
mov
xchg
add
mov
mov
data16
jae
inc
push
cltd
push
mov
lods
stos
add
fwait
mov
sbb
mov
inc
out
imul
fcmovne
cltd
adc
pop
arpl
cld
scas
jo
data16
sbb
mov
repnz
lock
xor
stc
shll
sub
xchg
sub
and
jo
pop
mov
dec
mov
jnp
stos
dec
cli
adc
sbb
xor
pusha
mov
jp
inc
xlat
clc
mov
adc
jg
mov
out
push
sub
or
ret
rcr
jo
addr16
repnz
in
pop
sub
sub
sbb
outsb
and
inc
xchg
pusha
je
fnsave
mov
pop
cmpsl
outsb
addb
out
sbb
xlat
scas
xor
xchg
sub
add
mov
xchg
addl
mov
rcr
mov
and
add
pop
xchg
xchg
adc
iret
inc
in
cmp
mov
cs
mov
fistl
rcll
pop
mov
or
push
inc
pop
test
jae
adc
lcall
sbb
cmp
cmp
jmp
mov
push
pop
pop
in
push
cli
jnp
aaa
xor
push
mov
fnstenv
mov
outsl
jnp
lahf
xor
call
shrb
and
mov
mov
ds
or
repz
jnp
mov
jl
mov
lretw
lods
ljmp
pushf
jmp
push
es
dec
andl
sbb
fsts
cmp
inc
out
in
iret
nop
enter
data16
fsubs
jo
je
sbb
cld
push
xor
ljmp
jne
xchg
scas
test
fsts
sbb
dec
mov
icebp
js
or
mov
add
push
test
adc
lret
and
push
fisubrl
jg
or
in
mov
push
push
inc
cmp
inc
mov
lret
jle
lock
adc
and
pop
or
in
jecxz
dec
sbb
incl
out
inc
pop
mov
enter
add
outsl
stos
sub
dec
dec
push
mov
movsl
jbe
pop
push
dec
pop
divb
push
pop
xchg
popf
or
mov
xor
mov
jge
cmpsb
xchg
push
jns
scas
mov
lds
pushf
fdivl
mov
push
and
push
xor
ja
jae
push
test
lret
int
std
dec
jnp
outsl
and
mov
mov
sub
mov
dec
and
or
push
or
outsl
mov
xchg
imul
lods
jo
cld
out
sbb
inc
mov
mov
shll
sbb
jbe
cmp
sbb
sbb
dec
cmp
fwait
jmp
and
cli
mov
dec
fstl
cmp
int3
pushf
inc
sub
ret
sbb
xchg
inc
jge
cmpsl
lea
fstpl
jne
inc
into
push
insl
inc
xchg
out
mov
cwtl
mov
sbb
roll
mov
pop
test
add
jecxz
es
mov
sub
cmp
in
in
push
inc
orl
scas
vsqrtps
inc
lcall
or
mov
sbb
cmc
loopne
and
enter
pop
fwait
and
mov
cmp
fucom
fiadds
cltd
cld
in
in
pop
negb
mov
lret
testb
sub
int
dec
add
sub
jge
jl
pop
les
xchg
out
fidivl
push
lods
push
inc
adc
cmp
ja
push
mov
out
sbb
push
dec
loop
in
rclb
xchg
ret
add
mov
gs
lret
mov
xchg
lods
pop
mov
movsl
in
ja
dec
mov
data16
xchg
fistpl
inc
adc
jp
sbb
je
lods
or
push
jb
push
fs
neg
push
jno
or
or
mov
xchg
jae
negl
dec
in
lcall
xchg
pop
popf
stc
dec
add
dec
jbe
adc
cs
aam
sbb
push
mov
imul
dec
shll
lahf
dec
push
mov
fsubrl
push
dec
dec
ss
pop
loopne
dec
mov
xchg
ljmp
jmp
std
cmp
inc
sub
mov
push
into
rcll
push
lods
imul
sbb
pushf
fstpl
sbb
loopne
pop
dec
push
inc
add
les
add
push
outsl
and
enter
add
rolb
jne
in
pusha
mov
idivl
cmp
push
out
in
rcll
stos
push
and
push
fld
or
fnstcw
pop
xchg
leave
pusha
pop
sub
fldenv
sbb
in
cwtl
jge
xor
dec
sahf
mov
scas
pop
mov
xchg
xchg
xchg
mov
jae
mov
adc
repnz
ds
pop
and
repz
sarl
pusha
mov
imull
rolb
or
or
xchg
pop
pop
shll
cmp
shlb
shlb
adc
ja
add
out
lods
push
sub
mov
mov
orb
insl
cld
xor
adc
jo
ja
mov
in
movsl
out
add
or
cmc
int3
in
idivb
in
xlat
aad
add
into
shrl
lret
jl
js
je
xchg
test
lret
add
mov
jo
push
xchg
aaa
mov
outsb
mov
dec
cmp
movsb
mov
and
sub
jmp
mov
push
or
jecxz
test
push
js
mov
hlt
inc
mov
hlt
mov
mov
adc
or
sbb
cmp
rorl
nop
push
push
nop
leave
and
dec
sub
jl
push
or
popf
and
ss
je
repnz
pop
cmp
dec
jg
push
adc
insb
xchg
mov
cltd
dec
stos
negl
fmul
pop
ja
xchg
arpl
std
repnz
or
into
jb
xor
inc
jge
jne
mov
mov
sbb
pop
push
cmp
xchg
pop
pop
cmp
mov
stos
jno
adc
mov
mov
cmp
cmp
in
adc
lds
movsl
ss
into
cli
sbb
or
adc
popl
sti
incb
stos
push
mov
aam
push
ret
adc
iret
jle
mov
jge
ret
out
add
xchg
stos
mov
es
gs
mov
in
mov
jno
iret
xchg
jns
add
mov
roll
add
fistpl
fdivl
mov
fdivrs
mov
push
mov
ljmp
lods
sbb
or
fwait
cmp
ret
in
inc
shlb
pop
ficomps
dec
in
shlb
pop
in
xor
insl
pop
sub
cmpsl
push
imul
movsb
and
sub
adc
testl
movsb
daa
jle
pop
dec
dec
ss
dec
iret
out
pop
adc
adc
cmp
xor
aas
arpl
jl
fcoms
test
subl
or
xor
mov
jns
mov
rorl
mov
popf
mov
xchg
cmp
call
sbb
sub
sub
xor
mov
adc
mov
push
inc
insb
sbb
hlt
add
sbb
clc
jecxz
and
clc
sub
sarb
cmp
xor
jle
ljmp
xor
jle
lret
out
andl
jo
iret
imul
xor
out
das
adc
push
mov
inc
loope
inc
sti
inc
xchg
shll
adc
dec
shl
and
inc
inc
inc
adc
fs
lods
adc
xlat
mov
jo
sub
and
bound
jne
mov
pop
xor
push
out
adc
xchg
jp
pop
jno
popf
hlt
jmp
or
sbbb
scas
push
pop
xchg
frstor
pushf
cmp
stc
in
testl
or
cltd
pusha
sti
cli
and
add
call
jbe
daa
sbb
lods
sbb
inc
mov
xor
jo
in
add
sahf
rcrb
push
or
ss
xchg
daa
sbb
mov
ss
xchg
xor
cmp
mov
stc
std
cltd
fistps
dec
cmpsb
cmp
test
leave
push
mov
lods
xchg
aad
push
in
mov
sub
imul
inc
adc
in
pop
xor
popa
test
mov
pop
jp
in
rcrl
push
stc
ror
lock
test
dec
push
cmp
test
sarb
popa
js
aaa
push
aaa
mov
xchg
push
inc
inc
popa
out
jae
push
int
pop
cmp
mov
ret
les
std
jle
lret
xor
lret
out
push
push
mov
xor
andl
jo
iret
fidivrs
or
test
nop
nop
out
sahf
mov
enter
adc
aas
js
in
jae
xchg
adc
add
call
jp
shlb
jl
ret
jnp
mov
push
in
dec
pusha
ss
mov
stos
and
add
cmp
adc
scas
xchg
dec
pop
cmc
push
mov
fbstp
jge
push
es
xchg
cli
jno
ss
xchg
dec
aas
mov
pop
rcrb
xor
and
and
repnz
sbb
ljmp
test
jns
dec
mov
mov
mov
or
mov
ret
aas
sbb
push
or
dec
aaa
jge
sub
mov
mov
add
shll
call
ret
or
fdivrs
xlat
adc
jle
inc
cld
push
push
xchg
shll
fisttps
into
lea
outsl
jae
arpl
loope
das
addl
scas
andl
dec
in
or
cmp
movsl
ds
push
in
xor
adc
mov
and
and
jnp
imul
pop
mov
mov
cmp
or
cs
push
pop
xchg
dec
jne
bound
sbbb
ljmp
xor
jns
cmp
xor
or
jp
adc
test
stos
les
sub
arpl
cmpsb
popf
add
push
pushf
dec
rclb
cmp
pop
cmp
dec
mov
repz
pop
test
xchg
mov
xor
fldl
sbb
push
cmp
loopne
mov
lds
adc
shlb
cmc
shlb
je
sbb
mov
dec
in
xchg
mov
les
adcl
shld
mov
test
ret
subl
rclb
mov
jnp
push
dec
subb
loop
push
mov
lcall
sbb
ret
in
dec
mov
int3
imul
lret
cmc
inc
jb
imul
mov
and
cmp
push
int3
andb
dec
jne
jne
repz
xor
cmp
mulb
icebp
sbb
clc
stos
test
mov
pop
push
mov
or
cmp
lret
bound
push
call
cltd
mov
cmp
mov
xchg
inc
dec
cs
pushf
in
std
adc
inc
pusha
mov
cmpsb
stos
cld
pop
test
mov
repnz
clc
and
fldcw
sub
mov
fisubl
pop
pop
xchg
cmp
stc
nop
andl
out
jge
inc
imul
movsb
sbb
in
jbe
pop
xor
scas
push
lock
add
stos
call
pop
je
ret
clc
push
adc
aad
mov
mov
mov
push
pop
mov
inc
dec
sub
xchg
push
mov
aad
fcmovne
adc
sti
fwait
mov
sbb
pushf
push
pop
sahf
insb
mov
sbb
int3
xor
mov
inc
pop
mov
test
adc
mov
push
jns
inc
lret
push
jb
nop
push
es
xchg
insb
xchg
imul
push
and
pop
mov
mov
jnp
stos
out
and
decl
stos
jb
mov
in
xchg
mov
fmul
mov
push
add
inc
jnp
jns
xchg
movlps
in
pause
mov
ret
movsw
push
sub
in
test
add
xchg
mov
and
sub
push
nop
daa
adc
or
push
mov
lret
push
inc
dec
jne
mov
push
ja
push
sub
dec
xchg
xor
adc
push
adc
lds
sub
add
xor
in
aad
xor
ljmp
mov
add
sbb
cltd
mov
sbb
loope
nop
lods
lods
ret
in
repz
loop
stos
lcall
jne
push
and
cmpsb
add
jns
inc
scas
xlat
dec
mov
out
pop
out
mov
mov
or
stos
ss
jp
xchg
mov
test
jne
jmp
sub
out
loopne
xchg
sub
jl
lea
scas
push
ja
push
xchg
scas
dec
pop
loopne
sbb
push
outsb
pop
rol
jp
add
ret
les
pop
mov
sub
pop
scas
nop
sub
movsl
xchg
add
out
cmp
xor
sub
mov
jne
or
mov
mov
clc
lods
pop
jle
mov
adc
xor
lods
movsb
aas
shl
test
pop
repnz
jns
and
xchg
rorl
mul
sbb
pop
lds
jmp
jecxz
and
out
test
jg
push
fstl
ds
dec
nop
pop
dec
adc
sub
in
pop
jp
push
repnz
pop
xor
push
jae
bswap
cmc
dec
dec
mov
inc
into
lods
repz
or
shrb
adc
ss
lods
jo
fdiv
add
mov
add
mov
aam
enter
inc
gs
jo
inc
cmp
movsl
clc
gs
test
mov
fcmovnbe
mov
out
jno
jmp
jo
call
fnstcw
lahf
nop
std
push
mov
mov
test
ret
pop
mov
dec
xorb
sub
sbb
mov
jecxz
sub
sbb
adc
mov
test
ds
jnp
sbb
dec
nop
out
push
scas
addr16
fbld
test
subl
insb
scas
push
jl
sub
rcrl
fstpl
push
pushf
imul
int
jb
jo
ja
jg
nop
daa
loop
test
push
pop
jecxz
push
or
imull
cmp
sbb
test
aad
in
mov
mov
cmp
add
test
out
adc
sub
sbb
nop
mov
shlb
out
cwtl
add
in
inc
sbb
xor
jns
dec
push
lahf
cmpsl
mov
inc
sbb
fldl
cmp
shlb
lret
sti
cmpb
push
xchg
scas
inc
ja
addl
pushl
mov
ret
jle
movsl
mov
xlat
jne
xchg
sti
jge
scas
sbb
or
xchg
lods
and
movsl
cltd
fldcw
mov
les
push
arpl
mov
cmp
cmp
sarb
adc
xor
es
mov
gs
jl
adc
scas
jns
cld
aad
loope
in
cmp
insl
jno
out
push
add
sbb
adc
mov
dec
mov
mov
ds
push
cmp
cmc
xchg
in
scas
icebp
xchg
xchg
mov
mov
push
out
out
pop
loopne
rorb
jbe
rolb
jne
or
in
pop
jno
nop
test
ss
mov
jp
mov
leave
lret
ja
dec
test
arpl
stos
sbb
adc
out
test
add
das
mov
mov
clc
hlt
push
je
mov
and
sahf
rcl
outsl
loope
mov
fldt
push
xorb
addr16
inc
push
ret
push
xchg
xor
add
push
mov
pop
in
pop
cmp
sbb
xor
in
cmpsl
adc
lds
xlat
push
in
fiadds
and
int
loopne
push
sbb
das
inc
mov
add
xor
sub
or
sti
mov
ffree
sub
lock
iret
cmp
pop
aas
add
lds
and
mov
jmp
mov
rol
test
jg
xor
fs
add
xchg
stc
mov
es
pushf
push
cwtl
or
mov
repnz
rorb
push
je
push
xchg
sbb
out
mov
and
sub
push
xchg
mov
mov
jp
inc
test
wbinvd
xor
mov
fsubr
in
stos
adc
add
das
repnz
sub
mov
push
cwtl
or
stc
pop
sub
sbb
dec
mov
adc
push
stos
push
scas
add
xor
xor
mov
add
pop
adc
aad
xchg
ja
enter
or
dec
pop
push
pop
mov
pop
mov
push
rol
sti
out
clc
pop
mov
sahf
clc
sbb
repnz
cmp
jecxz
push
fimuls
mov
lods
movsb
xchg
fidivrs
add
cmp
in
mov
and
xor
adc
sub
mov
mov
lods
fildl
pop
dec
xor
fnstcw
les
mov
mov
or
sub
adc
mov
and
dec
xor
pop
fdivs
jp
cltd
roll
push
xchg
into
rcll
xor
jbe
dec
jo
pop
mov
push
lret
jbe
xchg
and
add
ret
loopne
fisttpll
movsb
cmp
in
in
xchg
out
lahf
push
or
pop
push
push
push
lods
ds
test
lds
mov
jecxz
cmp
out
out
jg
adc
sub
mov
sub
int3
mov
out
in
inc
std
test
and
pusha
fwait
xchg
lods
das
ss
cwtl
push
jmp
in
jo
mov
int
dec
repz
mov
jecxz
or
cmp
sahf
clc
dec
cmpsl
cltd
push
and
rcr
outsl
xchg
push
in
push
shr
xor
cmpsb
repnz
xor
mov
lods
inc
and
test
aaa
ja
icebp
stos
mov
lcall
into
dec
divl
ljmp
and
addr16
fstpl
fbstp
aam
iret
xchg
gs
ficompl
mov
inc
sub
dec
test
iret
mov
arpl
stc
and
mov
cli
xsaveopt
xchg
xchg
sbb
popf
test
stc
sbb
dec
in
cmp
inc
out
add
jne
stos
adcb
jge
sub
sbb
cmp
xor
mov
orl
or
dec
int3
or
in
mov
pop
cs
or
cmp
rolb
popa
or
or
ja
clc
and
inc
mov
fwait
push
push
incl
jl
add
mov
mov
jae
push
xor
icebp
inc
sub
mov
outsl
jnp
outsb
push
inc
insl
lret
or
fistpl
pop
fcoms
add
inc
pop
enter
in
rcrb
xor
push
jmp
jp
cmp
sub
insb
add
scas
sbb
jp
insl
stc
in
sub
xor
scas
cmpb
mov
les
adc
lea
dec
movsl
sub
jns
or
push
incb
add
aaa
fistps
push
or
or
loopne
mov
xor
aas
add
fcompl
pop
aaa
shll
cmp
scas
inc
inc
sti
imul
or
aaa
aam
jg
xchg
aaa
fdivrl
daa
out
mov
lods
jns
inc
aam
pop
fbstp
inc
fdivl
popf
inc
out
or
scas
sub
sbb
adc
sarb
out
cld
inc
pop
lods
add
xchg
negl
lret
leave
pop
lods
into
sub
leave
mov
addr16
test
lret
lret
sub
das
mov
hlt
or
sub
ss
mov
rcll
xchg
inc
stos
repz
aaa
mov
nop
xor
outsl
add
movsl
mov
and
cmp
xchg
sbb
pop
mul
mov
push
ret
ret
jno
jns
sub
iret
in
mov
jmp
out
add
adc
cmp
cmpsl
mov
add
insl
or
cwtl
pop
cwtl
dec
scas
jb
cmp
lcall
jmp
out
dec
and
xchg
push
xor
imul
xor
roll
das
xorb
cmp
inc
xchg
jo
pop
adc
ds
clc
testl
mov
out
movsb
add
fnsave
dec
bound
scas
push
out
shll
mov
pop
add
rcrl
sbb
jbe
jmp
pop
push
add
mov
adc
xchg
je
push
push
jp,pt
pop
arpl
jne
sbb
jecxz
shll
repnz
popa
jmp
pusha
add
leave
jae
mov
cmp
pop
mov
xchg
out
push
mov
test
jmp
addb
out
sbb
stos
mov
jmp
stos
or
sbb
lret
jbe
sbb
push
dec
mov
cwtl
insb
cmp
into
dec
dec
pushf
test
dec
and
std
mov
jp
mov
xor
out
cwtl
sbb
sarl
cmp
push
shlb
fnstcw
mov
sbb
das
ret
lahf
sbb
jns
sbb
rolb
push
cwtl
pop
jp
sarl
xlat
cltd
sub
cmp
jmp
sub
jns
or
ljmp
outsb
frstor
push
les
cmpb
out
sub
int
notl
addr16
or
or
out
add
aaa
mov
outsb
mov
repnz
jnp
cmp
mov
dec
push
loope
icebp
loopne
pop
in
sub
mov
insb
in
mov
xorb
je
test
call
add
rcrb
ds
lods
decl
pop
imul
shl
pop
lret
mov
fld1
pop
sub
stos
mov
add
mov
add
jae
inc
faddl
sbb
push
in
mov
in
dec
pop
mov
xchg
repnz
pop
or
push
jae
and
sti
mov
js
aas
and
xchg
jl
sub
fisubrl
mov
sub
pop
mov
add
mov
shrb
mov
pop
jmp
mov
in
or
inc
incb
shrl
daa
stos
inc
pusha
in
stos
mov
sub
jge
mov
pop
in
scas
imul
xchg
or
lahf
mov
push
test
push
xchg
rcrl
inc
pop
cmp
mov
mov
out
or
nop
pop
movsb
dec
inc
aad
pop
in
sbb
xor
insb
push
jmp
in
adc
ja
jl
fistps
scas
ret
push
out
push
or
les
cmp
cmp
sub
pop
andl
fbstp
sbb
cmp
orb
rolb
adc
cmpsl
push
mov
adc
out
pop
imul
cmp
lock
cmpsb
mov
inc
outsb
iret
push
push
insl
pop
push
jmp
pop
outsb
hlt
lahf
pop
hlt
mov
cmp
in
out
nopl
xchg
mov
mov
fs
int3
in
jno
jae
inc
clc
dec
stos
xlat
test
and
xor
xchg
movsb
not
sub
add
mov
mov
adc
push
sarl
lret
call
je
test
cmp
jge
rolb
sub
outsl
ret
xor
and
ljmp
adc
pop
pusha
scas
daa
clc
push
push
adcl
pop
mov
inc
je
push
inc
arpl
bound
call
dec
push
jo
stos
in
out
pusha
adc
push
clc
out
xor
inc
bound
mov
shld
cmp
cmp
xchg
repz
in
xchg
nop
clc
dec
sbb
or
inc
xchg
jne
xor
dec
jg
pop
mov
inc
sbb
loop
sbbl
pop
in
adc
mov
stos
adc
mov
out
cmp
pop
stc
xchg
adc
imul
rorl
xor
sub
jae
xorl
inc
dec
sub
sub
lret
push
fisttpll
adcb
cmp
int
push
mov
mov
fldl
scas
pop
push
mov
xchg
inc
xor
aas
xchg
pop
push
push
mov
xchg
pop
sbb
dec
insb
jo
jae
xchg
sahf
dec
pushf
notl
mov
popf
push
dec
hlt
push
aaa
mov
jae
xchg
gs
adc
inc
mov
jmp
sbb
mov
inc
inc
cmc
xchg
pushf
jbe
test
out
push
sahf
sbb
jno
mov
or
out
adc
scas
jns
xchg
mov
addb
push
in
sub
repnz
xchg
rcrl
pusha
jecxz
rolb
ss
popa
pusha
lret
pop
pusha
push
nop
adc
mov
mov
ljmp
mov
ljmp
cmp
inc
xchg
sbb
shlb
push
mov
sbb
xor
mov
cmpl
mov
pushf
jae
mov
sti
push
mov
or
or
jnp
mov
std
stc
call
mov
inc
jl
enter
and
sub
mov
jl
jns
pop
ds
xchg
stos
adc
pop
push
xchg
fdivl
inc
sbb
add
rclb
adc
mov
jmp
cmp
pusha
cmp
loop
xorl
std
sbbb
int
ss
push
mov
inc
mov
cmp
add
sbb
dec
dec
jnp
int3
jle
rcll
mov
xchg
cmpsb
in
ss
pop
pop
cmp
jbe
sub
fwait
push
lret
jl
js
xorl
sub
pop
mov
cmpsl
loop
popa
arpl
mov
ljmp
fmuls
addr16
out
addl
pop
movlhps
out
pushf
jg
xchg
insl
cli
cs
sahf
outsl
scas
xchg
jns
sub
inc
cs
jmp
mov
imul
xor
ja
ljmp
mull
aaa
imul
bound
adc
sub
sbbl
xlat
dec
sbb
cmpsb
shl
test
dec
popa
jg
gs
mov
bound
inc
fisubl
jg
mov
sbb
adc
not
add
movsl
xor
fsubs
repnz
pop
sahf
cmp
out
icebp
and
inc
lcall
jne
push
sbb
shll
ss
outsl
inc
add
mov
sahf
loop
out
inc
xchg
rcll
push
mov
push
call
jl
xchg
lea
es
gs
scas
shll
pushf
jp
mov
outsb
push
or
jnp
sub
push
inc
data16
jp
dec
mov
adc
mov
sbb
adc
movsb
jecxz
mov
xchg
or
inc
es
loope
dec
je
imul
aaa
dec
pop
mov
in
shll
fadds
int
mov
das
dec
mov
pop
jne
in
pop
dec
movsb
ds
and
icebp
insb
scas
iret
inc
stc
mov
mov
sbb
mov
out
dec
lods
cmpsl
or
cmpl
mov
push
pushl
push
clc
repnz
dec
shr
repnz
sub
lcall
sbb
cmp
mov
in
pusha
jmp
je
xor
dec
arpl
test
aam
pushf
mov
jmp
mov
jmp
out
imul
icebp
or
popf
push
add
push
out
xlat
in
das
sarb
sbb
lret
mov
jno
int3
sub
lret
ret
xor
cli
pop
xor
pop
sbb
lods
and
inc
xor
std
inc
dec
pop
inc
or
std
cmpsl
jmp
pop
xor
push
xchg
mov
out
fs
mov
mov
aad
ds
xchg
add
lock
and
pop
in
out
jmp
movsb
dec
bnd
fs
sarb
add
cmpsl
lds
cmp
lds
add
sbb
xchg
dec
std
jbe
xor
xor
jnp
adcb
fildl
jno
mov
jns
pop
js
leave
pop
mov
call
aas
mov
mov
jg
lahf
adc
dec
int
push
call
cmpsl
cli
outsl
add
jbe
fsubl
inc
stc
nop
cmp
add
in
add
mov
adc
sbb
aas
push
movsb
xchg
jns
and
mov
repnz
movsl
fcmovnb
dec
cli
pop
dec
mov
out
out
adc
jbe
xchg
cltd
or
test
sbb
sbb
and
inc
cmp
sarb
std
in
jmp
scas
xchg
in
pop
push
jmp
pop
fdivrs
fidivrs
scas
popl
fs
bound
jae
aaa
lret
sub
fbstp
into
dec
sarl
mov
loopne
sbb
dec
leave
es
daa
mov
push
imul
cmp
inc
aas
or
loopne
push
jp
mov
out
mov
add
xchg
movsb
dec
sahf
cmp
cmc
lods
lods
das
les
push
out
add
cmp
fldt
jb
sub
add
mov
lea
xor
pop
lock
out
push
mov
cmc
mov
sub
mov
mov
xor
repz
fldt
inc
lret
dec
add
sbb
push
ret
pop
mov
mov
lds
sub
lods
pop
lods
mov
fidivl
pop
xlat
mov
xchg
mov
dec
loop
std
or
jo
lcall
repnz
pushf
xchg
jecxz
xchg
push
ja
aaa
test
inc
in
aam
adc
out
in
repnz
in
mov
pusha
fisttps
shrl
jge
loop
mov
int
hlt
sbb
sub
xchg
pop
icebp
inc
ret
dec
hlt
or
jo
sub
push
fldenv
loop
jae
rolb
testb
cli
pushf
push
xchg
movsl
sbb
ljmp
push
test
push
addr16
jo
push
jl
mov
jle
cmp
icebp
lea
sub
dec
sub
sub
hlt
adc
mov
cmpsb
dec
movsb
pop
iret
ret
arpl
mov
mov
sub
ss
adc
pop
ret
sti
xchg
jp
lcall
fidivrs
mov
in
aas
lret
movlps
mov
push
std
rcrl
jl
data16
fbld
sbb
pushf
pop
jp
out
sub
js
sbb
std
mov
push
pop
adc
and
adc
pop
xchg
mov
xchg
mov
sbb
ret
cmp
pop
cmpsl
dec
out
addr16
loop
mov
add
shrl
outsl
xor
mov
mov
pop
push
cli
in
sub
lea
test
mov
xor
std
mov
faddl
in
mov
aas
sbb
mov
mov
dec
pop
sbb
pop
shl
sbbl
pop
ret
inc
mov
fs
push
lds
pop
negl
sarl
iret
loope
adc
movsl
mov
shll
ja
dec
xor
mull
xchg
flds
xor
std
and
xor
xor
pop
mov
clc
pushf
xor
in
mov
lea
out
and
add
pushf
pop
dec
movsb
lds
pop
lcall
lcall
outsb
jne
jl
out
cmpsl
cmp
lret
push
gs
lret
and
fucomi
bound
mov
sbb
mov
cmp
aam
and
sti
das
cmpsb
ja
adc
adc
out
test
mov
push
les
int
in
rolb
repz
mov
subb
or
mov
idivb
lret
jae
cltd
mov
ds
fcoml
enter
and
push
insl
test
rolb
lea
mov
lods
outsl
stos
out
popa
and
sub
mov
pop
mov
mov
fmuls
add
les
mov
or
push
mov
test
flds
xlat
sub
add
sti
adc
adc
push
cld
sub
jae
movsl
xchg
out
sub
jae
fwait
insb
pop
mov
push
ljmp
cmp
scas
testb
icebp
dec
mov
sbb
mov
imul
lds
js,pt
out
lods
mov
pop
xor
xchg
mov
ljmp
xor
movsl
mov
mov
adc
add
insl
mov
jle
rolb
hlt
cmp
push
dec
shrl
lcall
push
imul
jne
xchg
push
or
jno
stc
fisubl
cmp
mov
and
int3
fnsave
mov
pop
lahf
js
cmpsb
jl
fcoms
stos
mov
push
jae
gs
int
mov
jmp
jecxz
jo
dec
xchg
cmp
mov
in
clc
mov
dec
jecxz
and
or
or
leave
add
jecxz
lods
cwtl
pop
xor
mov
mov
sbbl
or
xchg
or
xchg
stos
js
popf
mov
mov
stc
ret
xor
pop
fwait
pop
outsl
enter
adc
adc
cltd
jb
es
add
mov
dec
jecxz
scas
adc
and
int
push
in
lds
xchg
stos
iret
cmp
push
mov
or
ficoms
dec
fxam
movsl
cmp
aas
or
cmc
sub
jge
movsb
adc
push
or
mov
mov
pop
add
or
ds
lods
pushf
lods
sti
and
dec
mov
cmp
mov
jge
scas
outsb
push
adc
fdivrl
imul
subl
bound
aas
movsb
call
dec
or
pop
adc
stos
cmp
aaa
cs
inc
rorb
lcall
and
fisttpll
xorb
fldt
jp
inc
sub
jp
inc
repz
jb
jmp
in
mov
inc
les
cld
pop
icebp
lock
pop
outsl
push
mov
insl
adc
cmp
push
ficoml
mov
in
and
sbb
or
pop
pop
adc
fldt
xor
and
jmp
es
push
dec
out
cs
xor
mov
cmp
lret
xchg
mov
mov
loope
pop
shrl
outsb
fwait
mov
clc
and
cmpsl
loope
cld
in
xchg
add
cmp
push
add
clc
loop
cwtl
cmpsb
fdiv
int
add
fcmove
xor
mov
lret
out
in
cwtl
stos
cmp
xlat
xor
push
xor
cld
jae
jb
inc
popf
cltd
xor
cmpsb
dec
pop
xlat
push
shll
add
or
xor
dec
fs
xchg
jns
fildl
arpl
inc
inc
ret
repnz
xlat
mov
es
and
dec
frstor
int3
sbb
in
and
ficoml
pop
mov
hlt
push
mov
in
int
lret
inc
xor
mov
repz
push
push
in
ficompl
cwtl
sahf
clc
xchg
leave
pop
out
cmc
clc
xchg
mov
popf
sub
iret
imul
pop
jno
push
add
mov
cld
and
sub
pusha
xor
outsb
mov
ja
es
push
js
repnz
call
rcrb
icebp
cmpsl
xchg
out
lds
push
aas
aam
outsb
shrl
insb
xchg
test
pop
push
jo
cmp
cwtl
jns
xor
test
jnp
xchg
outsb
add
pop
adc
pop
mov
fcomp
xor
mov
jl
xlat
scas
mov
std
sbb
in
xchg
call
mov
mov
jg
in
fsubr
push
fcmovnu
jae
bound
or
and
cmp
inc
push
mov
in
cmp
nop
inc
push
push
jecxz
mov
add
mov
bound
mov
push
jb
out
jp
int3
mov
fwait
enter
ret
ljmp
xor
roll
fs
or
dec
pusha
aaa
cli
xchg
or
xchg
lahf
mov
insb
jecxz
xor
inc
mov
or
sbb
pop
cmpsl
daa
push
and
gs
pop
arpl
pop
cmp
call
aad
insb
push
pop
imulb
push
in
add
or
and
outsl
xorb
ret
pop
xor
popf
jbe
gs
jo
sub
inc
mov
repz
xchg
test
std
xor
push
movsb
test
icebp
movsl
ljmp
pop
pop
shrb
call
pop
dec
mov
or
popa
lcall
in
dec
mov
inc
sub
inc
pop
outsb
sbb
fstl
rorl
iret
jae
cmp
jmp
lret
sub
dec
outsl
bound
jne
push
clc
popl
test
push
mov
pusha
das
aas
aam
subl
mov
mov
insb
or
lret
into
stos
xchg
jl
pop
and
mov
fwait
inc
leave
fsubr
xchg
dec
fidivrl
in
jb
insb
mov
out
jne
mov
push
cltd
cmp
enter
cs
push
ljmp
loopne
push
sub
sub
jle
xchg
xorb
xchg
or
fidivrl
mov
mov
outsl
mov
cltd
hlt
test
xchg
mov
adc
xchg
ja
cwtl
fs
or
mov
out
je
adc
aad
test
cmpsl
mov
or
push
inc
and
inc
jecxz
ret
pop
pushf
cwtl
out
xchg
lock
pop
or
sub
mov
xchg
iret
xchg
int3
cmpsb
out
aas
push
xchg
ja
or
adc
push
push
scas
mov
fwait
xor
int
xlat
outsb
std
mov
cmc
test
in
jno
xchg
add
fcoms
push
and
cmpsb
cmp
in
add
jb
stos
jle
stc
loope
sub
sti
or
shll
xor
int
xchg
adc
fldt
das
sbbl
arpl
pop
jns
cmp
sti
jle
repz
imul
test
adc
cmc
sti
adc
movsb
pop
pop
imul
data16
jle
rol
out
ja
mov
jno
subl
push
aam
nop
ljmp
cmpsb
jbe
cmpsl
push
xchg
xor
xchg
inc
add
cmp
or
inc
scas
pop
testb
fbstp
add
ss
and
mov
pop
pop
cli
fisubrs
dec
insl
pusha
inc
sbb
sub
lahf
es
sub
insb
out
test
imul
cmp
lcall
lret
xchg
sub
inc
jecxz
imulb
int3
cli
cmp
filds
movsl
add
mov
push
ret
jecxz
pop
pop
xor
add
in
in
push
adcb
idiv
stos
out
cs
insl
sbb
gs
popf
jmp
insl
pop
dec
nop
push
and
inc
out
or
jmp
jb
cmp
ja
aad
arpl
and
outsl
push
icebp
push
scas
add
inc
sub
lods
mov
cli
mov
loope
nop
jp
jmp
xor
repnz
jge
pop
push
inc
jp
lahf
inc
ljmp
fcoms
mov
out
int
in
mov
pop
outsl
mov
call
das
ret
pop
and
loop
adc
dec
mov
add
pop
mov
dec
daa
and
xchg
into
add
test
fnstcw
scas
cmp
lcall
jb
mov
sub
cmp
and
fimuls
repz
adc
cmpsl
dec
add
int
into
and
push
mov
pop
sub
lods
call
cmpl
pop
add
lods
cld
popl
cmp
lahf
push
push
jg
outsl
addr16
and
mov
icebp
dec
ds
adc
dec
push
pop
imul
push
mov
cmpps
jmp
icebp
jno
arpl
popf
push
mov
gs
pushl
sahf
cmpb
cmpsb
cwtl
jnp
dec
or
sbb
dec
aam
jae
jmp
ret
int
mov
sub
js
nop
mov
jge
test
arpl
lret
es
mov
std
xchg
jbe
xor
or
loop
cmp
and
fnstenv
addr16
in
or
gs
pop
mov
aam
sbbb
mov
or
imul
daa
push
fld1
pop
das
test
mov
test
and
mov
jg
inc
pop
push
loopne
pushf
push
inc
icebp
test
in
call
sbb
fstpl
cmp
lods
jno
adc
mov
and
xchg
cmpsb
addr16
inc
fwait
popf
cltd
insl
jl
mov
xlat
seto
xor
xchg
cli
cs
inc
pusha
adcl
sbb
ds
in
out
and
jle
jo
ljmp
pop
push
sti
outsb
movsl
fistl
pop
push
sbb
outsl
imul
push
or
cld
inc
lcall
sbb
pmaddwd
dec
adc
loopne
mov
sub
test
jmp
or
out
mov
pop
jecxz
xchg
incl
adc
xchg
pop
push
xor
mov
cmc
or
mov
mov
je
mov
int3
or
lock
lcall
js
cld
addr16
xchg
fldt
clc
insb
cld
loope
call
imul
pop
lock
cli
cmpsb
inc
in
and
pop
pop
aas
lret
inc
popa
cmpl
or
mov
js
and
fbstp
jae
push
data16
mull
mov
lcall
pop
in
cmp
loop
jo
push
bound
popa
fmull
outsl
negb
jno
jecxz
mov
daa
aaa
add
std
and
jno
and
out
psraw
mov
jno
movsb
pop
jne
inc
test
cwtl
add
mov
out
insl
xchg
sub
sub
dec
mov
bound
mov
gs
dec
jae
stc
call
rcrb
mov
sbb
inc
xchg
sub
ss
into
pop
inc
adc
adc
cmp
lret
mov
and
or
lock
cmpsb
cmp
fsubrp
fldl2t
lcall
mov
ret
and
int
jns
lods
mov
xor
xor
and
leave
inc
scas
mov
call
sbb
add
popf
mov
jmp
aad
hlt
push
inc
cmp
pop
std
push
inc
call
mov
aaa
stos
sahf
pop
les
gs
pusha
sbbb
loop
jp
pop
mov
ret
pop
in
push
jo
lret
loope
add
ss
mov
lods
and
aas
xchg
xchg
imul
rcl
addr16
stc
inc
fs
add
mov
lcall
cwtl
arpl
xchg
xchg
push
subb
cmp
and
fld
clc
sub
ret
jne
pushf
mov
add
push
notl
lods
in
gs
pop
add
repz
mov
sub
mov
and
in
sbb
inc
pop
fadd
inc
add
mov
push
repnz
ja
mov
sbbl
es
pop
mov
stc
mov
or
jg
pop
ds
int
inc
inc
sbb
leave
imul
or
ret
mov
xchg
iret
fcmovnb
pop
mov
icebp
in
sbb
ret
ret
jle
js
and
stos
repnz
cmpsl
jns
or
int
jg
rcll
push
push
adc
inc
flds
iret
in
push
xchg
imul
pop
ret
hlt
sub
add
jae
test
mov
jg
enter
sarl
sub
out
xchg
jle
jno
cmp
clc
sbbl
repnz
pop
cmp
and
sub
pop
adc
jge
int3
mov
push
mov
sub
popa
and
je
xchg
jo
xchg
pop
jmp
inc
mov
lcall
adc
int3
add
or
mov
fiadds
or
dec
out
push
mov
mov
paddb
negl
mov
cmpsl
rcll
cltd
xchg
xor
pop
fnstenv
outsb
adc
enter
or
mov
ret
push
dec
pop
mov
jae
cmp
lcall
and
mov
jge
jecxz
rcll
push
dec
or
outsb
daa
mov
mov
cli
in
adcl
jge
test
xor
out
ret
shlb
cmc
lcall
xor
inc
push
pop
push
push
mov
add
jne
adc
loope
adc
outsb
stos
or
jno
stos
sub
jecxz
jb
lods
sub
push
sbb
stc
mov
push
out
std
jb
pusha
int3
inc
xchg
pop
mov
jecxz
pop
or
mov
stc
or
mov
push
sub
repz
inc
mov
jecxz
and
jecxz
push
pop
jae
dec
jp
je
out
loop
lock
sti
xchg
jg
or
push
sbb
scas
xor
popa
iret
dec
out
pop
sti
fwait
mov
or
sub
gs
xor
in
test
push
sub
lcall
mov
xchg
ret
and
loope
lods
dec
or
push
into
adc
daa
stos
cmc
push
pop
lods
sahf
mov
jns
xorl
inc
lock
mov
push
out
imul
push
push
push
in
or
xchg
and
out
cmpsl
mov
sbb
int3
cmp
adc
fmul
out
xchg
cwtl
das
and
dec
int
xlat
mov
es
inc
movb
inc
out
into
call
mov
in
push
jmp
cld
mov
jg
jno
pop
insb
cmp
jb
mov
out
test
imul
int
pop
jnp
push
xor
icebp
jle
imul
push
bound
xor
inc
fdiv
imul
sbb
push
lods
idivl
leave
sub
test
adc
sub
xchg
ljmp
cmp
inc
outsl
orb
repz
mov
and
out
pusha
insl
leave
xchg
pcmpgtb
ljmp
pop
mov
test
aad
in
xchg
add
mov
ret
xchg
cmc
stos
fbstp
test
mov
cltd
es
add
xchg
and
aad
xchg
dec
mov
and
jp
mov
stos
jnp
push
lods
fcmovnbe
enter
push
sbb
enter
fnstenv
cmc
push
cli
push
xchg
sub
stc
push
xchg
lds
dec
and
insb
mov
arpl
lods
jb
jl
sbb
pop
cmp
xor
popa
popf
mov
sbb
pop
sub
jl
insl
scas
and
or
cmp
cmp
popf
stc
dec
pop
mov
or
xchg
mov
inc
loop
inc
fmull
das
arpl
test
inc
cmpl
or
fnstsw
mov
jg
les
push
cld
mov
pop
and
fsubrs
clc
pop
loope
int
lods
arpl
cwtl
push
cs
daa
pop
lcall
and
cmc
jne
pop
fwait
sahf
pop
les
stos
addr16
fmull
push
jbe
xchg
mov
jae
das
movsb
cwtl
mov
dec
aad
test
aaa
add
mov
fmul
pop
sub
lock
jb
cmp
cmpsl
sbb
dec
cmc
mov
rol
mov
jns
les
stc
adc
and
sahf
mov
rorb
mov
repnz
bound
ds
stos
pop
push
mov
lret
push
mov
adc
push
das
les
lcall
mov
aaa
leave
in
jle
cmp
sarl
into
pop
das
flds
outsl
inc
fsubrs
imul
add
jge
scas
dec
adc
dec
xlat
dec
pop
mov
into
and
outsl
pop
mov
into
imul
fsubp
cs
les
and
jnp
je
stos
inc
daa
sbb
int3
pop
mov
jns
cli
stos
jle
insl
lcall
dec
xor
das
stc
adc
push
cltd
leave
mov
pop
loopne
sbb
mov
sbb
sub
mov
in
push
pop
shll
ds
or
add
enter
mov
js
add
xchg
outsl
ror
mov
mov
gs
loop,pt
popf
mov
scas
stc
insb
subl
or
outsb
jl
jnp
imul
rolb
insl
nop
and
push
sbb
inc
sub
dec
cmpsb
imul
dec
test
loope
lods
xchg
ss
dec
mov
lock
scas
lds
xchg
jmp
pop
fdivs
ret
es
andl
ret
push
jge
dec
xlat
push
repnz
cld
mov
dec
incb
jg
mov
push
add
or
cmpsl
fstpt
addr16
push
aaa
inc
hlt
popf
stos
test
enter
cmc
js
adc
xlat
movsl
sub
in
dec
pop
ret
imul
test
cmpsl
repnz
push
and
push
or
cmpsl
lea
in
pusha
fidivrs
cld
stc
push
xor
push
mov
bnd
call
mov
call
popa
xchg
stos
rolb
jne
jbe
add
sbb
lods
cltd
or
push
push
jp
scas
ljmp
in
lock
jg
push
xor
js
xchg
add
test
je
repnz
aad
jg
sub
jecxz
jl
pop
adcb
inc
repz
stos
mov
mov
sub
pop
sti
add
mov
orl
and
mov
outsb
mov
xchg
pop
inc
add
jbe
add
mov
rcll
lea
adc
out
mov
ficoml
lods
push
sub
pop
xchg
cmc
mov
dec
aaa
jbe
imul
sbb
cmpsb
lock
repz
sub
cltd
sub
inc
push
dec
and
shll
sub
dec
xchg
je
scas
sahf
lods
imul
subb
cld
and
xchg
pushl
dec
fwait
aas
loopne
out
es
cld
adc
mov
ficoms
out
cmpsl
movl
das
mov
cmp
mov
pop
push
popf
out
sbb
jge
dec
pop
repnz
hlt
cmp
fisubrs
mul
or
xchg
loope
clc
cmc
cmp
mov
in
mov
add
mov
mov
mov
shl
jb
popf
mov
stc
repnz
or
mov
jnp
or
jns
pop
jge
dec
outsl
insb
push
repnz
rclb
adc
or
cmp
jl
lea
mov
dec
rorl
add
cmpsb
repnz
xlat
push
jmp
pushl
flds
call
sahf
rorl
rcl
nop
xor
shll
mov
mov
shr
adc
mov
js
in
and
sub
mov
test
inc
call
loop
mov
and
sahf
fsts
xor
shlb
add
add
or
lods
loopne
repnz
aam
xor
mov
cmp
in
shr
jae
sbb
jno
and
shlb
popf
cmp
mov
idiv
and
jecxz
je
scas
lock
scas
pop
adc
out
pop
insl
fisubrs
jo
gs
loop
adc
or
inc
add
lcall
or
lahf
xlat
clc
jnp
or
jae
dec
in
out
addl
mulb
cmp
jbe
cmp
dec
push
ljmp
mov
sub
xlat
test
mov
nop
imul
xchg
sti
dec
loop
shrb
enter
lret
insl
mov
push
cwtl
pop
xchg
fiadds
cmp
mov
test
inc
dec
sbbl
sub
sahf
pop
push
mov
out
lock
mov
sbb
in
mov
fucomp
gs
ja
jnp
mov
imul
jecxz
jae
aaa
cmpsb
subl
subl
ficomps
js
mov
cwtl
int
scas
ret
mov
arpl
dec
aas
cmpsl
or
mov
test
jecxz
mov
inc
pop
add
rorl
call
sub
jg
into
gs
daa
or
push
cs
add
or
movsb
push
jp
rcll
xchg
loope
rorb
xor
push
jmp
mov
jb
daa
adc
lods
rol
adc
xor
rorl
stos
inc
jbe
sub
out
leave
jno
adc
call
fbstp
push
cs
imul
enter
mov
sahf
lret
jnp
fs
or
inc
fs
mov
rcl
lods
es
xchg
push
mov
adc
mov
movsl
mov
dec
in
jns
add
ds
std
cmp
pop
dec
inc
rclb
cmp
mov
daa
push
mov
jno
inc
loopne
pop
popf
xchg
pop
std
or
andb
dec
push
cmp
cltd
shrl
inc
lahf
mov
adc
inc
lods
pop
jbe
ret
imul
aas
xchg
cwtl
sbb
ja
loopne
lahf
and
adc
mov
negl
cmc
pop
and
inc
imul
scas
loope
lret
mov
xor
movsb
cld
cmc
mov
movsl
fucomi
fisubl
xchg
stos
into
cvttps2pi
lods
stc
popf
test
rcrb
lahf
push
adc
mov
scas
shlb
or
push
or
add
sbb
mov
inc
pop
rclb
lahf
divl
mov
lahf
dec
add
mov
into
outsb
lret
sbb
push
in
stos
daa
cmc
pop
daa
inc
sbb
mov
lock
sahf
mov
stc
xor
dec
repnz
shll
jge
cmpsb
out
xchg
sub
jl
cli
mov
cmpsb
pop
jg
xchg
mov
pop
insl
lods
jmp
pop
and
and
repnz
ror
sti
mov
lea
dec
stc
dec
clc
add
mov
test
mov
inc
mov
daa
data16
push
ljmp
lock
add
xor
add
mov
shll
pop
loop
inc
cmp
and
mov
add
in
xor
daa
push
cmp
leave
pop
clc
mov
and
xor
sbb
jecxz
clc
and
pop
mov
cmp
std
mov
out
sahf
ficompl
gs
in
cmpb
inc
cs
pop
ficoms
int
mov
leave
ror
mov
aam
fmuls
jnp
fldt
fstpl
xchg
cmp
push
sub
sub
sbb
cltd
out
jp
xor
addr16
inc
ret
jle
jno
cmp
bound
dec
cltd
gs
loop
cwtl
sti
leave
fdivrs
in
inc
enter
push
xchg
cs
insl
xchg
mov
hlt
leave
dec
jg
inc
mov
adc
in
mov
inc
inc
fmul
pop
out
stc
stc
fsubrl
fbld
pop
dec
add
pushf
cltd
ds
add
lods
jmp
lea
lahf
js
hlt
inc
lods
aam
sti
mov
sti
nop
ret
lea
imul
lret
leave
and
iret
mov
loopne
mov
or
icebp
inc
out
inc
lock
jp
sahf
and
dec
pop
leave
lods
aas
mov
jecxz
adc
jg
bound
inc
popa
orl
scas
xor
shlb
mov
sbb
mov
jle
pop
push
jp
cmp
cli
xchg
imul
sbb
inc
dec
call
rcr
push
sub
fstps
js
andl
push
adc
fildll
in
jno
pushf
movsb
daa
sbb
dec
jecxz
insb
jne
lahf
mov
jg
hlt
pusha
fiaddl
mov
enter
cmp
sub
test
es
ss
sti
ljmp
mov
leave
mov
aas
sub
fildll
xchg
fucomi
icebp
popa
cmp
idivb
cmp
jns
hlt
pop
lock
mov
ja
adc
cwtl
das
cmpsl
ss
inc
in
push
push
xchg
xchg
mov
cmc
divb
rol
lds
aam
iret
or
fwait
or
loop
movsl
pop
stc
pop
and
mov
pushf
scas
loop
testl
adc
mov
in
dec
or
jp
test
pusha
sar
aam
and
cld
mov
int3
mov
sbb
sub
imul
xchg
pop
in
push
jb
je
rclb
mov
sti
fs
mov
and
enter
xor
pop
xchg
inc
loop
fs
imul
sub
jnp
popf
lahf
mov
out
cmp
jmp
call
jo
push
insb
pop
scas
pusha
jns
sbbb
mov
stos
dec
pushf
out
xchg
repz
adc
sub
cmpsl
nop
add
fwait
ja
jb
pop
iret
int
int3
push
daa
mov
sahf
jg
adc
inc
xchg
stos
cmp
push
xor
clc
cmp
mov
sbb
jo
pop
hlt
shrb
push
rorl
cmp
push
ds
lock
fists
fidivs
outsb
aas
orl
cmp
out
xor
in
and
sbb
mov
mov
shlb
and
pop
rolb
cld
jae
mov
sub
xor
push
test
outsl
iret
gs
pushf
xchg
mov
ss
and
arpl
orb
testb
push
xor
es
jns
sub
iret
loope
adc
jmp
push
and
mov
faddp
fiaddl
dec
or
andb
fcmovnb
movsl
scas
mov
cmpsl
sub
push
in
mov
or
daa
add
mov
sub
in
rorl
jge
mov
mov
arpl
sub
hlt
mov
cltd
jg
dec
in
jo
popa
aaa
push
out
jecxz
jno
cmc
test
push
ret
lods
leave
and
push
xchg
das
mov
dec
inc
ss
lock
les
rol
pop
mov
xchg
je
sbb
call
notl
jle
pushf
and
mov
out
test
pop
sti
push
shlb
sbb
fst
sbb
shrl
xor
xlat
das
adc
add
sbb
mov
sbb
xchg
rol
inc
sbb
mov
dec
cmp
cmp
push
mov
mov
andl
sarl
mov
xor
mov
das
mov
and
mov
add
fisttpll
aas
mov
push
call
mov
and
sub
dec
jge
mov
or
push
repz
scas
adc
mov
xchg
int
ljmp
notl
daa
inc
jle
adc
inc
adc
int3
fidivs
xor
push
add
dec
xchg
lret
sbbb
dec
dec
mov
cmp
push
dec
loopne
jbe
lods
mov
loop
push
pop
enter
xchg
pop
add
test
fdivl
mov
sub
adc
adc
jmp
leave
test
or
stos
mov
push
mov
sbb
xchg
jnp
lret
nop
sti
cwtl
std
jae
stos
cmp
sbb
movsb
push
adc
mov
shrl
sbb
jne
lods
mov
and
pop
sti
lods
push
cli
jno
fmuls
and
inc
adc
jns
stos
xor
cs
or
inc
inc
inc
call
inc
dec
and
cld
push
popf
loopne
push
xor
inc
mov
cli
ds
jge
out
movsl
mov
ds
jg
jnp
out
xor
mov
scas
es
imul
popf
cmp
inc
dec
jmp
ljmp
nop
fdivs
mov
stos
lds
leave
mov
add
push
ss
in
mov
cwtl
or
ds
mov
inc
inc
xchg
popa
mov
arpl
sbb
xor
and
adc
xor
add
scas
push
out
xchg
xor
mov
fisubs
inc
aaa
data16
loop
in
xchg
lds
adc
leave
es
mov
mov
shrl
mov
iret
adc
sbb
in
imul
ja
adc
lds
dec
pop
inc
lods
mov
jns
cmp
sbb
pop
mov
leave
aaa
test
inc
cmpsb
clc
sbb
jp
fdivrl
sbb
jg
mov
jb
out
xchg
fmuls
pop
lods
movsl
test
pop
push
insl
fdivl
scas
call
mov
dec
stc
movsl
ss
fwait
dec
lods
sbb
out
pop
adc
jge
adc
push
sub
mov
adc
iret
inc
pop
iret
dec
bound
inc
pop
cld
aaa
sub
inc
mov
adc
sbb
or
or
call
shr
or
pop
lock
dec
push
mov
mov
ja
dec
fwait
mov
sub
dec
mov
mov
jg
sbb
enter
ficomps
sbb
lcall
push
outsl
scas
ret
fcmove
mov
cmp
and
or
and
cli
mov
into
cltd
inc
insl
pop
or
jl
lcall
adc
in
push
mov
fstps
in
push
aad
jb
mov
jmp
stc
and
mov
push
xlat
push
cmc
or
daa
mov
or
stos
or
pop
pushf
bound
dec
je
and
xchg
lret
gs
cld
mov
dec
push
push
inc
js
not
shrl
add
add
pusha
or
mov
xchg
inc
and
cltd
subb
rcrl
loope
loope
adc
add
nop
push
cmc
mov
inc
mov
fldenv
stos
in
xor
aas
pop
inc
sub
push
lock
sti
cld
scas
pop
aas
jns
cmc
sar
fstl
sbb
add
dec
adc
cli
adc
loop
inc
sub
pop
gs
bnd
xsaves
lret
mov
pop
cmp
or
push
push
sar
jne
sbb
pop
inc
pop
mov
lods
fcmovnb
pop
or
push
inc
cs
push
sbb
inc
xor
xchg
adcl
jl
scas
or
out
xor
nop
add
scas
push
outsb
rclb
add
and
mov
jmp
cli
and
fists
cltd
mov
aam
and
cs
clc
decb
push
aad
xor
push
or
out
pop
xor
add
jnp
adc
sub
or
xorl
out
or
call
add
push
xchg
mulb
dec
cmp
enter
sbb
lret
cmpsl
bound
sub
mov
jno
dec
flds
mov
test
cmp
data16
or
sarb
mov
outsl
sbb
mov
popa
inc
or
push
jno
hlt
mov
les
in
into
mov
andl
pop
repnz
aam
mov
sbb
xchg
inc
push
out
push
les
ds
inc
or
out
adc
sbb
mov
mov
fmuls
fisttps
cmp
stos
scas
mov
jno
sbb
mov
adc
decb
xlat
cmp
cli
testl
sahf
jp
xchg
lret
fucomip
dec
sbb
in
dec
push
cmc
fistpl
das
inc
mov
push
mov
sub
mov
in
mov
add
out
xchg
dec
jge
mov
lds
push
push
xchg
cmp
push
xchg
or
dec
stos
or
jg
fcomps
push
lret
out
mov
out
lret
hlt
sti
mul
inc
add
pop
cmp
dec
push
xor
pop
outsb
ret
leave
dec
mov
add
clc
xchg
dec
mov
daa
push
xchg
cwtl
faddl
cmp
sahf
in
xchg
addr16
adc
add
lret
stc
gs
in
sub
xchg
or
mov
fbstp
sarl
stos
push
test
scas
lcall
fs
xchg
inc
lcall
lahf
pop
scas
inc
lea
inc
pop
cld
cmp
ret
push
lock
pusha
or
scas
out
xlat
fistl
fildll
inc
out
push
shll
add
jge
jae
sub
jbe
xchg
xor
fisubrs
int
cmp
loopne
roll
cmp
sub
push
testb
jg
mov
xor
cmp
inc
xor
dec
popf
pop
xor
ficompl
in
jl
test
lds
push
test
jle
lahf
mov
out
fstps
imull
sub
test
push
sahf
adc
xchg
and
jae
mov
cli
fs
fiaddl
xchg
push
jle
lock
jns
clc
mov
sbb
and
inc
xor
mov
xor
jo
clc
jbe
fdivs
rclb
cli
repz
xchg
ja
sarl
fnstcw
gs
call
test
lret
shlb
xor
out
xchg
nop
pop
in
add
jmp
andb
outsb
push
ror
add
popf
push
stos
out
mov
popf
cmp
pop
cmp
das
outsb
sub
xchg
push
ret
jnp
adc
sub
dec
inc
mov
add
fstps
nop
shll
dec
add
inc
cwtl
arpl
mov
iret
cmp
ficompl
insb
add
mov
mov
repnz
push
fnstenv
or
das
loope
rcrl
std
push
sub
icebp
jge,pn
fcomi
das
iret
loope
xchg
lods
xchg
ror
pop
mov
pop
stos
mov
insb
push
cmp
mov
outsl
mov
mov
seto
ja
ds
mov
push
mov
jecxz
and
mov
push
je
lea
or
shlb
pop
in
pop
push
inc
daa
ret
xorb
adc
mov
xchg
mov
push
lahf
jno
sbb
dec
adc
cmpsl
mov
cmc
xchg
mov
mov
push
sub
pop
psllq
js
jge
stos
push
idivl
ud0
mov
ja
fxch
fimull
aaa
nop
adc
xchg
jmp
xchg
push
and
push
leave
pop
dec
lret
sub
lahf
jge
or
jp
mov
movsl
mov
mov
cmp
inc
pop
sti
inc
mov
xchg
push
icebp
pop
cmpsb
sarb
add
mov
out
add
mov
push
xor
imul
sbb
repnz
mov
stos
and
mull
sbb
fisttpll
fs
jo
push
pop
inc
jbe
cli
jl
sbb
je
xchg
das
int
pop
jno
sti
jecxz
repz
scas
inc
add
fisubs
xchg
clc
push
rcrl
scas
and
daa
dec
loopne
adc
fwait
into
es
add
dec
ret
jp
jmp
or
scas
cmp
push
dec
gs
outsl
daa
aad
or
jl
shrl
fistpl
xchg
hlt
testb
dec
nop
xchg
xchg
mov
jmp
outsb
sub
fwait
xor
xchg
inc
jecxz
inc
stc
lds
adcb
mov
jp
fs
stos
sahf
insb
or
xchg
jge
mov
dec
dec
mov
bound
jg
xlat
mov
imull
shlb
xor
pop
pop
add
hlt
xor
loope
ret
loopne
sbb
popf
sub
addr16
sbb
sbb
orb
push
fnstcw
hlt
cmpsl
imul
xchg
int3
dec
lods
sub
jmp
jp
insb
xchg
jnp
xchg
movsl
sbb
popf
dec
leave
adc
testl
aas
mov
jle
popa
les
les
cmp
lcall
aas
mov
add
mov
in
xor
je
ds
ja
sbb
aad
mov
pop
das
mov
inc
inc
xlat
fdiv
xchg
push
jne
mov
cmp
popa
jge
mov
mov
mov
adc
stos
fists
jmp
mov
loop
jl
mov
sbb
fiaddl
loop
xchg
xor
int3
lods
aas
jmp
aaa
outsb
xor
dec
pop
clc
sahf
mov
push
call
lods
out
sub
dec
mov
into
push
rcl
jno
fs
fdivp
mov
push
sbb
xor
jle
dec
mov
mov
mov
hlt
mov
add
pusha
aam
mov
data16
mov
fdivl
aam
dec
lods
sbb
xor
ljmp
sub
push
pop
insl
jns
add
loope
mov
mov
push
aas
push
pop
data16
clc
jbe
xor
mov
frstor
add
js
in
jae
dec
orb
in
mov
rolb
lahf
jle
ret
fildll
mov
xchg
inc
pop
jno
mov
mov
inc
adc
iret
mov
test
push
inc
jo
dec
pop
mov
popa
add
fsubrs
nop
inc
scas
sbb
sbb
push
xchg
mov
jecxz
inc
int
inc
jnp
sub
shll
push
inc
inc
pop
cmp
pop
cmc
sbb
sbb
out
sbb
pusha
into
xor
out
mov
mov
fnstcw
loop
les
xchg
sbb
daa
or
pop
mov
rclb
rorl
and
bound
pop
push
dec
and
mov
jne
add
cmc
stos
cmc
stos
xlat
cmpsb
data16
jl
mov
cli
push
xchg
jns
lret
clc
fwait
cmpsb
mov
jmp
movsb
cmp
arpl
or
adc
out
and
or
jo
insb
jp
push
clc
fwait
xchg
rcrl
xor
popf
outsb
inc
daa
in
mov
test
stos
sub
or
mov
loop
cmp
out
inc
dec
pop
dec
or
rolb
insb
hlt
insb
out
shl
cmp
stos
ss
sbb
push
dec
dec
enter
xor
push
inc
push
push
test
mov
sub
jecxz
inc
adc
mov
dec
pop
fmulp
jecxz
xor
add
leave
mov
mov
add
jp
jl
cmovl
cmp
push
data16
cltd
xor
ret
add
insb
jecxz
mov
je
mov
mov
out
int
lea
lret
and
into
inc
nop
xrelease
push
and
add
cmp
cli
scas
xchg
sti
enter
dec
test
dec
cmp
out
jmp
stos
fdivrp
adc
xchg
das
pop
ja
mov
pop
mov
lret
mov
js
cld
adc
xor
pusha
pop
rcll
mov
je
iret
pop
fistl
fidivl
js
xchg
insb
stc
jb
dec
in
jmp
cwtl
fwait
push
inc
xchg
imul
sbb
clc
insl
mov
xor
jb
mov
add
shrl
inc
int3
and
xor
mov
test
adc
or
cmc
xchg
roll
mov
sbb
xor
pop
stos
cmp
mov
mov
adc
daa
addr16
cli
xchg
lock
pusha
stos
sub
sub
and
adc
push
fisubrs
leave
es
push
mov
dec
sub
subl
lahf
outsb
pop
push
jmp
pushf
adc
add
add
jne
push
out
pop
adc
jns
xor
mov
add
psllq
add
inc
push
arpl
and
pusha
add
les
pop
or
xor
nop
daa
pop
pop
sarb
mov
loopne
push
and
xlat
push
jle
int3
mov
mov
cmpsl
js
fimuls
and
mov
or
inc
pop
xchg
lods
push
call
out
jo
pop
mov
into
idivl
or
aad
popf
ret
notb
cmpsl
inc
les
imul
jo
push
jp
xchg
lods
loopne
decb
sbb
cmp
add
mov
out
test
or
out
mov
shr
push
push
ficompl
push
movsl
dec
sti
sbb
sub
lods
sbb
xchg
imul
out
ja
adc
mov
pushf
je
push
mov
pop
cmp
movsb
fwait
mov
call
rcrl
imul
mull
cwtl
clc
dec
inc
arpl
pusha
sbbb
loop
fwait
and
pushf
test
idiv
adc
icebp
and
imul
inc
js
fistpll
ret
mov
fidivl
push
push
add
mov
insl
xchg
add
xchg
popa
xor
sub
rcrb
shll
adc
sub
popf
idivb
js
add
pop
lock
mov
fs
mov
lds
and
adc
or
pop
adc
mov
int3
pop
jnp
test
xchg
mov
orl
in
mov
pop
add
in
test
movsl
push
ficoml
mov
sub
cmp
add
repz
cmp
imul
mov
push
xor
jns
push
loope
pusha
lahf
testb
cs
stc
pop
dec
pop
pusha
sti
jle
xlat
xchg
sub
aam
sbb
sbb
dec
dec
mov
push
mov
sti
rcrb
sub
pop
mov
or
inc
xchg
jnp
ss
add
sbb
stos
mov
mov
mov
dec
loope
mov
push
je
popl
adc
rol
aam
sub
push
mov
test
scas
out
orb
add
lds
xchg
jge
icebp
cs
hlt
adc
inc
sub
jne
fwait
or
dec
dec
pushf
aad
mov
out
adc
lcall
or
and
push
pop
pop
dec
gs
sti
mov
sbb
cs
repz
icebp
scas
pop
imul
sbb
cli
outsb
jecxz
xor
jne
mov
fstpt
push
push
mov
mov
popa
jmp
cmpsl
xchg
fadds
jne
icebp
xchg
lret
adc
or
and
push
or
outsb
aas
clc
jmp
cld
hlt
sbb
xchg
pop
and
pop
pusha
or
pusha
xor
arpl
rorb
cmp
shll
ret
pop
imul
sbb
xor
lret
and
out
insb
cmp
lds
add
lea
clc
mov
jle
pop
inc
hlt
cmpsb
add
jg
test
nop
mov
xor
mov
ljmp
sbb
jb
push
or
aaa
sti
bound
repz
pop
mov
mov
lret
out
lods
ret
js
enter
rcl
pop
inc
push
pop
dec
pusha
mov
pusha
and
dec
push
or
out
xchg
xor
mov
out
mov
out
cltd
lahf
or
mov
xchg
dec
data16
jg
pusha
inc
insl
sub
arpl
pop
pop
add
in
push
xchg
mov
idivl
icebp
das
out
mov
xchg
fs
xorl
lods
pop
pop
xchg
xor
lea
xchg
insl
inc
movsb
mov
cmp
adc
in
sbb
aad
cmpsb
inc
adc
adc
xchg
mov
movsb
nop
jae
lahf
jl
push
pop
ss
add
rcrl
pop
push
mov
xor
js
fst
decb
inc
pusha
xor
mov
test
push
xor
sar
leave
add
jns
and
push
jne
mov
jae
insb
es
adc
repnz
mov
aaa
xchg
lret
mov
nop
idivb
and
dec
daa
js
and
fstpl
shrb
into
dec
cmc
sbb
std
cltd
and
add
mov
daa
test
fsubr
aam
out
push
imul
ja
pop
push
sahf
sahf
add
xchg
mov
pusha
aas
and
cltd
pop
mov
push
jg
aaa
daa
ss
out
jecxz
cmpsl
inc
xchg
mov
int
push
scas
movsb
shr
xchg
adc
xchg
dec
or
aas
shrb
xorl
ljmp
mov
scas
sarl
and
adc
xchg
inc
mov
mov
stos
in
lods
xchg
std
fstpl
test
fiaddl
dec
cltd
dec
mov
push
shufps
outsb
xor
jg
lock
inc
push
icebp
lret
popf
das
addr16
mov
outsl
and
pop
cmpsl
and
push
jl
imul
test
push
jne
dec
dec
stos
xchg
fsts
dec
jnp
loopne
scas
push
add
add
pop
cmpsl
add
push
adc
mov
mov
pop
push
sbb
mov
mov
sbb
sbb
les
dec
pop
inc
cmp
je
xchg
repz
push
lods
outsb
xor
loopne
mov
fsts
test
ret
jp
jne
aam
sti
shr
in
cmp
cmp
cli
mov
in
pusha
pop
mov
mov
fists
sbb
lahf
enter
stos
ret
sub
add
sub
or
inc
loop
add
lret
repnz
xchg
jmp
stos
inc
call
aad
call
or
mov
dec
cmp
fxtract
fucomip
jl
xor
ja
ret
sbbb
xchg
incl
inc
int
test
pushf
fsubrs
dec
ret
dec
mov
push
inc
inc
sahf
xchg
adc
imul
pop
mov
mov
push
inc
dec
fwait
dec
fcmovb
aam
loopne
shl
jns
movsl
addr16
adc
cmp
sbb
mov
inc
shrl
cmpsb
call
in
dec
adc
aad
jae
xor
in
cmpsb
cs
popa
dec
mov
cmp
cmc
jmp
mov
lds
pop
mov
sar
stos
cmp
rorb
imul
push
xor
js
sti
cmpsl
inc
into
cwtl
lahf
xchg
or
lahf
call
loop
xchg
fisttps
and
dec
inc
push
in
jb
xor
pop
mov
adc
cld
outsl
add
jb
push
insl
cli
mov
adc
sub
sub
pop
lcall
cmpb
adc
rcrb
add
or
and
push
pop
mov
fldcw
lcall
cmp
mov
push
iret
cmpsl
push
scas
dec
jecxz
add
jbe
xchg
push
scas
out
or
jb
xchg
sub
cltd
repnz
es
pop
and
dec
dec
or
xor
sub
push
xor
xor
stos
inc
mov
mov
in
push
negb
mov
or
test
mov
cli
mov
adc
test
fwait
add
jno
jmp
andl
jae
out
sahf
sub
adc
nop
cmp
out
jbe
test
aad
inc
and
fs
and
lods
inc
adc
pop
push
sti
add
mov
loop
out
imul
push
out
mov
pop
mov
mov
dec
adc
mov
inc
icebp
insb
inc
mov
imul
out
sub
adc
mov
fisubrl
repnz
xchg
mov
sub
pop
xchg
xor
ljmp
lret
jno
mov
and
pop
sarl
mov
out
xor
or
sub
enter
push
std
scas
mov
add
jns
into
cmp
jl
ret
inc
in
repz
les
lcall
dec
bound
mov
sub
adc
and
dec
cmpsb
dec
loope
imulb
movsb
xchg
std
xchg
enter
aas
arpl
mov
ficoml
lret
cmpsb
aaa
cmp
out
jp
dec
adc
mov
outsb
data16
inc
cwtl
pop
adc
and
lret
push
cmpsl
sub
push
and
shrl
adc
add
mov
mov
xor
fists
ds
shll
ftst
inc
push
ret
lock
sub
adcb
fistps
lret
rcrl
inc
sbb
loop
les
and
sbb
ss
sub
pop
lcall
pop
xor
cmc
or
and
andb
daa
jae
xchg
cmp
mov
or
jne
pop
sbbl
lret
jo
inc
mov
push
sar
dec
in
pop
sbbl
mov
loop
mov
xchg
push
arpl
push
ret
iret
data16
jbe
mov
insb
insl
pusha
ret
mov
jo
sub
sbb
cld
or
mov
mov
push
pop
arpl
push
rorb
ret
mov
std
xchg
inc
or
inc
fcmovb
ret
and
inc
outsb
add
rol
mov
push
int
inc
fs
xchg
pop
rorl
inc
ret
jno
push
call
fdivrs
sbbl
pop
testl
leave
addr16
push
inc
xchg
cmp
iret
data16
rcrb
popa
dec
dec
nop
daa
cmp
out
jmp
outsl
inc
jnp
xor
loop
jno
add
jae
jb
cmp
mov
pop
in
xchg
sub
jb
fdivl
movsl
fsubrs
jae
sub
lahf
add
shl
push
mov
loope
add
in
dec
inc
lods
lahf
xor
or
outsl
loope
push
add
mov
lret
dec
push
sti
inc
rcrb
cld
sbb
mov
cld
sbb
scas
xchg
orl
mov
sarl
jae
push
out
cmp
leave
data16
ljmp
imul
loope
out
icebp
inc
sbb
outsb
push
inc
add
lretw
push
xor
fildll
cmp
add
cwtl
push
test
jno
sub
shr
hlt
jne
push
cmp
call
mov
inc
sub
dec
mov
fxch
test
push
jne
or
sbb
and
add
subb
sbb
jnp
inc
sarb
mov
out
push
rclb
addr16
push
push
lock
xor
testl
test
fidivs
into
pop
insb
jbe
mov
add
xor
sub
mov
push
cmc
jmp
xor
push
jno
movsb
std
cmp
pop
aam
cmp
cltd
xor
outsb
mul
jbe
sbb
and
inc
inc
push
repnz
test
lret
jecxz
cwtl
add
xchg
inc
movsl
and
popa
inc
ret
clc
xor
jge
lret
sub
xchg
loop
clc
jmp
cmc
or
and
xchg
xchg
jge
mov
popf
in
test
jmp
jl
or
jl
mov
subb
adc
aam
das
pushf
xor
add
or
mov
add
inc
cmp
cltd
jmp
jnp
lock
movsl
add
and
ficoms
mov
and
pop
jns
outsb
hlt
test
std
cmpsl
in
inc
dec
test
mull
fmul
mov
stos
lds
mov
mov
xor
sub
cmp
jecxz
int
mov
repnz
push
dec
shl
mov
dec
add
arpl
xchg
iret
ss
repz
xchg
int
inc
pop
ds
test
lret
iret
rclb
or
shrl
movsb
in
sub
cmp
xchg
mov
sti
xchg
outsb
mov
xchg
pop
jb
rcl
outsl
push
xchg
inc
xchg
and
xchg
xlat
cmp
je
mov
xchg
mov
mov
xchg
dec
mov
in
xchg
mov
fidivs
fwait
adc
int3
ljmp
insb
or
pop
dec
mov
in
push
or
cwtl
les
pop
mov
inc
and
stc
popf
nop
sti
push
mov
repz
adc
adc
data16
pop
xor
pop
les
imul
sbb
stc
or
pop
inc
jle
shlb
jns
fs
rcrb
push
push
shl
jb
mov
gs
mov
sbb
push
int3
or
jo
orb
add
xor
sbb
mov
mov
arpl
or
aam
ret
nop
shlb
leave
test
ret
pop
icebp
idivb
sbb
popf
add
push
cli
es
popa
test
pusha
dec
gs
fsub
shrl
jbe
xchg
sub
movsl
cmp
fdivl
push
dec
fcompl
ja
bound
xchg
xor
loopne
push
repnz
or
imul
mov
and
push
ds
popa
leave
dec
push
cli
mov
cmp
mov
xor
adc
or
mov
daa
mov
mov
mov
mov
das
cmpsb
in
nop
or
lahf
jb
mov
jb
cmpsb
pop
fbstp
repz
iret
and
loope
or
enter
push
mov
out
lods
or
das
lds
data16
outsl
xchg
mov
or
fdivrs
mov
scas
inc
pushf
xchg
xor
cmp
mov
xchg
jnp
push
push
dec
iret
jb
stos
movsl
gs
cwtl
ret
jmp
pop
xor
aaa
rol
repz
adc
jmp
mov
call
jnp
sbb
mov
into
shrb
test
lret
cli
pop
dec
fisubs
sbb
mov
idivl
iret
adc
push
mov
fs
cmp
cmpb
les
aad
xchg
repnz
cmp
je
fldl
dec
dec
sti
ja
sti
call
inc
sub
sti
xor
cli
inc
pop
bnd
ja
jmp
jns
inc
add
add
fidivl
jg
loopne
dec
cmp
xchg
insl
jmp
fldl
imul
js
popa
ds
push
mov
shlb
test
add
mov
rcrb
lods
movsb
cmp
mov
ss
aad
ret
ret
insb
adc
xchg
addr16
jmp
outsb
xor
mov
inc
push
inc
mov
arpl
lea
jo
pusha
call
jg
mov
xchg
mov
insl
les
xor
arpl
sub
push
leave
inc
sub
adc
fucomp
xchg
lcall
pushf
out
and
and
push
rcrb
pop
adc
pop
lret
les
jle
add
mov
lret
jp
add
cwtl
std
roll
js
movb
push
push
jl
adc
push
mov
incb
xor
push
lahf
jle
out
cltd
mov
inc
sbb
cmp
sbb
pop
stos
scas
fcoml
and
mov
out
sbb
pop
fsubrp
mov
and
test
sarb
add
jl
es
int
add
add
and
jecxz
addl
in
mov
push
es
mov
cmp
and
mov
xchg
sub
xlat
cmp
rcrl
call
cmp
in
xchg
nop
stos
cwtl
das
add
bswap
sbb
cmp
daa
jo
aad
adc
decl
sti
xor
xor
loope
sub
cmp
lock
add
dec
negb
jl
push
sahf
int
dec
jbe
lods
pop
aaa
aad
out
jp
divps
xchg
push
enter
ss
inc
cmc
mov
xchg
and
roll
mov
mov
cwtl
pop
xchg
push
mov
sbb
mov
mov
das
inc
cwtl
mov
push
popf
stos
inc
or
or
call
int3
pop
xor
nop
in
aaa
mov
test
xchg
xor
sub
pusha
mov
xchg
popf
xor
fcomps
cmp
test
mov
adc
shlb
lret
fildl
push
xor
push
stos
xchg
jb
std
jo
scas
dec
lods
xchg
mov
in
gs
out
pop
inc
jns
subl
jle
cwtl
jp
jge
jg
addps
lods
fsub
jns
jae
fcoms
pushf
lea
jns
xchg
gs
cmpsb
rolb
aad
shr
mov
fdivrs
in
out
outsl
loopne
dec
das
sub
mov
std
sub
inc
sbb
sti
pop
ss
dec
mov
push
jmp
hlt
adc
stc
movsl
jb
mov
imul
mov
fimuls
sub
mov
sahf
xchg
sub
out
sub
enter
jnp
out
adc
repnz
and
mov
insl
mov
les
shrl
in
pop
movb
testb
insb
inc
mov
mov
xchg
push
dec
adc
iret
popf
test
fists
push
addr16
stc
aas
cld
mov
mov
fwait
outsb
rcrl
icebp
cld
sub
and
in
sub
pop
dec
push
call
jmp
jmp
and
in
add
cmpb
or
insb
mov
scas
out
and
ljmp
jp
xor
mov
mov
mov
inc
fcoml
movntq
push
sub
jae
mov
xor
aaa
insb
pop
sub
adc
mov
add
mov
icebp
add
mov
adc
lods
and
xchg
sahf
inc
xchg
dec
xor
dec
add
loopne
outsl
ficoms
fisubs
xor
inc
pushf
cmp
sbb
jo
pop
sbb
mov
lret
repz
cmp
jmp
aas
mov
out
rcrl
cmp
jns
fisubl
xchg
fwait
dec
imul
cmp
imul
bound
inc
and
adc
icebp
cmp
sahf
scas
cmp
adc
into
out
adc
and
xor
aaa
jmp
mov
pop
and
idivb
and
sbb
add
loope,pn
sahf
sub
cmp
push
xor
lret
jo
inc
es
pop
cmc
data16
insl
gs
sub
push
mov
aad
and
clc
pop
sbb
fnstsw
into
or
outsb
outsl
adc
shlb
rcrl
mov
xor
aad
rcl
mov
jmp
pop
iret
xchg
inc
add
xchg
pop
jns
cmp
lcall
mov
or
dec
test
mov
and
test
mov
adcb
imul
mov
push
dec
mov
fsubrp
sub
mov
pcmpeqw
fsubrs
popa
jmp
icebp
lcall
out
fwait
inc
int3
aas
sub
outsl
rorl
mov
and
and
packsswb
push
sbb
add
stc
adc
inc
pop
jno
clc
movsb
mov
into
iret
sub
mov
mov
pop
mov
mov
add
push
mov
sub
jg
data16
sbb
add
ss
pop
xchg
popf
xor
add
int3
inc
movsb
xchg
mov
jp
aas
push
movsb
cmp
xchg
adc
roll
mov
sti
fisubs
sahf
adc
pop
mov
pop
into
cli
adc
insl
out
in
popf
sub
shr
dec
xchg
or
push
popf
aas
push
repz
or
aam
ret
jno
adc
rclb
mov
cld
and
sti
sub
cmp
dec
andb
mov
jl
in
popa
clc
sbb
add
xchg
cltd
pop
jecxz
mov
adc
push
push
cmp
int3
cmc
add
sbb
xchg
sub
imulb
ds
jp
sub
jg
popf
sub
adc
int
test
pop
xor
pushf
xchg
cmp
movsb
gs
imul
dec
cs
lret
xchg
sub
adc
or
mov
xchg
inc
xchg
push
out
push
rclb
adcl
and
lcall
and
push
fsubr
ljmp
jnp
cltd
xchg
fs
xchg
pop
mov
sub
and
bound
fisttpll
addr16
daa
inc
test
ss
dec
pop
test
test
stos
jnp
xchg
mov
fiadds
dec
jmp
add
sbb
xchg
push
or
xor
repnz
jge
mov
dec
outsl
fadds
aam
inc
push
call
mov
and
das
jnp
pop
lods
dec
mov
xchg
sbb
lea
loop
prefetch
mov
jp
mov
xchg
fcoms
lods
icebp
mov
lods
in
adc
mov
push
mov
dec
movsb
mov
test
repnz
cmovbe
ret
fildl
dec
push
xor
push
movsb
dec
mov
sbb
inc
adc
adc
jo
fadd
imulb
out
lahf
push
sbb
sub
mov
scas
add
inc
sbb
in
jnp
fdivl
jecxz
adc
cmp
cmpsl
fisubl
push
addr16
fldenv
jg
push
ss
ds
sbb
lods
ja
imul
mov
fidivl
add
mov
out
dec
sbb
ss
repnz
fildll
out
les
jnp
lea
or
ret
addb
mov
int3
je
ret
adc
jnp
mov
in
scas
movsb
lahf
clc
pop
insb
rorl
mov
xchg
sub
mov
mov
mov
lods
add
das
jge
push
add
ljmp
sub
mov
push
insl
or
nop
xchg
mov
les
xchg
pop
je
cltd
ljmp
outsl
xor
stos
or
lcall
jns
ja
pop
mov
test
jnp
xor
cmpsb
inc
or
sub
jle
movsl
pop
imul
sarl
imull
jg
inc
pusha
imul
js
jo
jp
aam
adc
add
out
stc
mov
bound
clc
stos
xchg
imul
add
fisubrs
imul
jl
mov
das
repnz
push
in
test
sbb
fimuls
test
mov
jno
pop
pop
push
push
movsl
push
outsl
sub
cld
inc
jnp
repz
mov
mov
adc
jo
nop
push
iret
xchg
or
jge
outsb
inc
lods
sahf
xor
shl
mov
cs
mov
cmp
adc
mov
push
lock
movsl
aas
push
pushf
jo
lea
xchg
lods
push
sbb
push
cmp
inc
sti
aam
fidivrl
decb
sbb
mov
jg
fildl
mov
push
aam
test
mov
imul
pop
shlb
mov
pop
pop
cs
insl
sbb
lret
xor
cltd
cmp
das
mov
pop
pop
jbe
jge
xor
scas
xchg
lods
push
jmp
mov
cmpsl
stos
loope
mov
adc
sub
add
mov
fnstsw
pop
loopne
sbb
add
xor
xchg
mov
bound
or
subl
add
xor
mov
jns
imul
cmp
rorl
pop
outsl
xchg
hlt
gs
lea
add
push
xchg
xor
insl
add
icebp
pop
jecxz
repnz
in
ret
push
push
scas
dec
decb
dec
cs
or
pop
dec
mov
jbe
in
aam
mov
xchg
mov
pushf
popa
dec
mov
int
jbe
push
xchg
aam
sub
negl
xor
cmp
inc
jmp
fiaddl
push
outsl
jbe
popa
addr16
inc
ret
pop
movsl
lods
xchg
xchg
xor
cs
push
jecxz
orb
jno
outsb
or
scas
ret
jmp
xor
xchg
mov
mov
cmpsl
pop
test
jg
imul
lods
and
mov
inc
mov
and
aad
mov
add
or
popf
inc
ja
pop
mov
fcoml
imul
ja
push
sbb
dec
sbb
xchg
lods
or
push
cmp
sbb
xchg
sub
jp
ljmp
adc
inc
and
js
xchg
jp
push
push
inc
lea
stos
in
cmpsl
xchg
cltd
std
mov
fs
cmpsb
push
jae
repnz
xchg
sub
xorl
jbe
jg
xchg
pop
and
jnp
test
mov
ljmp
int3
mov
mov
stos
or
mov
mov
outsb
mov
xor
shl
aad
adc
mov
orb
mov
mov
jmp
bound
dec
loope
mov
cmp
sub
or
mov
mov
cwtl
stos
cmp
movsb
into
in
pop
in
push
xor
mov
push
inc
lret
rol
add
mov
pop
mov
shl
jp
and
testl
cmpsb
cmc
dec
pop
pusha
stc
adc
rep
pop
adc
xchg
xor
sbbl
jnp
sbb
mov
xorl
js
sub
dec
stos
jne
jnp
loope
sub
push
outsb
fldcw
cs
mov
pop
fwait
notb
ja
sbb
aam
dec
clc
cli
sbb
pop
sub
lds
xchg
dec
adc
aas
cmp
fcomps
mov
inc
mov
pop
add
add
arpl
jns
push
insl
xchg
je
xchg
dec
dec
popf
mov
push
rcrb
cmp
jmp
jne
inc
repz
repz
xor
lahf
idivl
imul
push
or
mulb
push
popf
iret
cmpsb
iret
popf
sub
popf
mov
inc
out
inc
and
aaa
aad
cmpsl
sbb
jge
fdivs
test
sti
mov
decl
xlat
push
lret
int3
arpl
arpl
add
int3
dec
fstl
or
stos
test
insb
fisttps
cli
push
sahf
pop
xchg
mov
loop
sahf
dec
and
fcomps
daa
lock
out
repnz
ljmp
push
mov
and
sti
outsb
pop
inc
test
imul
push
stos
or
repnz
sub
sub
pop
pop
mov
lods
pop
imul
into
push
jo
nop
or
rcll
mov
int
xchg
jb
and
ljmp
jb
mov
imul
adc
jge
mov
ds
ds
adc
dec
push
push
xor
test
out
bound
lahf
std
xchg
mov
push
add
dec
lods
xchg
in
ds
mov
or
aas
xor
das
addr16
jp
dec
lcall
pop
icebp
out
inc
fadds
xor
cmp
xor
sub
stos
fistpll
pop
cwtl
into
jno
jo
push
das
in
mov
pop
int3
xor
pusha
sbbl
movsl
or
push
mov
dec
dec
push
iret
push
jbe
scas
mov
sbb
lea
aaa
call
dec
test
ret
hlt
sbb
into
clc
fxch
ds
repnz
insl
push
outsl
mov
add
mov
jle
and
bound
out
fimuls
repz
lcall
add
inc
lretw
loope
and
sbb
outsb
pop
jg
cmpsl
in
sti
sbb
shlb
lret
mov
pop
jp
cmc
mov
or
in
pop
cmc
outsl
andb
pop
jae
popf
loopne
iret
lds
cmpsl
imul
imul
push
rorl
adc
clc
cmpb
pop
notb
in
fldcw
and
xchg
jge
push
mov
push
xor
std
lea
xor
cld
xchg
xchg
sbb
bound
sti
mov
mov
push
adcl
push
repnz
or
fwait
mov
fistpll
jae
int3
mov
jmp
fsubl
jge
imul
pmuludq
xor
mov
or
and
test
aas
pusha
xchg
ret
and
imul
ds
sarl
add
xor
pusha
clc
pop
lods
movsl
push
jbe
adc
pusha
xchg
f2xm1
mov
outsb
rorl
sbb
into
push
ljmp
inc
mov
inc
inc
sbb
xchg
inc
int
iret
sbbl
jmp
jge
mov
gs
call
popa
cld
out
xchg
and
enter
mov
add
divb
mov
jle
fsubrl
insb
push
popf
loopne
sub
call
cmp
daa
mov
imul
mov
fdivrs
adc
mov
std
outsb
dec
sub
sahf
ja
mov
outsl
cltd
and
jns
pop
into
push
mov
test
imulb
rorl
lret
cmp
pop
xchg
inc
hlt
and
sahf
inc
in
fstps
je
aam
xchg
adcl
push
dec
ds
scas
bnd
iret
icebp
movsl
bound
sbb
rcr
pop
push
loope
cmp
gs
push
fs
ds
out
or
xchg
xor
adc
or
xchg
add
loop
ss
les
cmc
outsb
push
push
int
push
sub
inc
and
push
push
lods
adc
jbe
imul
jge
inc
mov
sbb
mov
mov
jb
and
and
mov
sarl
pop
cmp
push
out
jnp
pop
xchg
fcompl
rcr
test
cmpsl
mov
sbb
fildl
bound
jno
movsb
dec
loopne
mov
xlat
in
repnz
add
fs
outsb
jbe
dec
jb
cld
lret
push
ds
ret
shll
cmp
sbb
cmp
rclb
push
dec
jbe
add
out
rolb
pop
int
push
add
test
jnp
dec
lods
xlat
cmp
hlt
dec
pushf
dec
jecxz
pop
cmp
xchg
imul
icebp
xchg
sti
stc
jae
in
jns
fisubrl
xchg
lods
movsl
add
xchg
into
test
ret
std
push
rorb
call
outsb
sbb
lds
std
mov
and
add
inc
es
enter
stos
dec
and
add
out
pop
inc
fiaddl
lds
imul
cmp
add
aam
icebp
lret
jp
mov
mov
lods
xor
sbb
and
inc
gs
in
icebp
insb
shll
and
lock
out
dec
sbb
dec
inc
movsl
ds
shrl
jl
das
lret
dec
mov
mov
cmpsl
call
das
sub
addl
cmp
jp
sbb
sbbl
adc
roll
pop
aad
and
je
ret
pop
out
pushf
das
shrl
xchg
rcrb
mov
sub
mov
push
cmp
dec
loopne
pop
jecxz
mov
jp
or
dec
xchg
and
jle
cmp
mov
mov
pop
sbb
sahf
sbb
xchg
mov
sbb
jecxz
mov
std
int3
rcrl
add
sbb
test
into
mov
gs
mov
and
push
cli
inc
and
in
sbb
insl
lea
mov
jecxz
lea
dec
in
jge
imul
repnz
lahf
fnstsw
mov
imul
hlt
xor
mov
stos
ja
or
aas
dec
lods
andl
fists
mov
push
rcll
ss
push
repz
and
es
test
ret
fmul
pusha
in
lock
repz
push
enter
adc
call
mov
dec
xor
nop
inc
lds
xor
repnz
shl
ret
and
mov
mov
stc
nop
clc
lcall
shll
into
neg
pop
sbb
fwait
and
pop
push
shrl
leave
movsl
sub
fcmovu
in
push
jo
and
es
adc
fucom
or
push
sub
adc
sub
aas
movsb
leave
mov
jle
cmp
je
mov
mov
test
mov
cmp
mov
aam
xchg
lock
out
aad
dec
loop
loope
aas
pop
sahf
call
pop
mov
dec
nop
clc
repz
imul
or
xor
jne
fsubrl
adc
mov
jmp
in
aas
jo
or
shr
sbb
jle
stos
mov
sub
shll
or
dec
dec
xchg
in
pop
ds
inc
xor
cmp
jl
add
daa
bound
lea
aas
dec
aad
dec
pusha
aas
flds
sbb
fistpll
out
jge
fs
arpl
mov
mov
icebp
inc
addr16
movsl
mov
clc
sub
mov
sbb
lahf
dec
adc
push
enter
sub
fmulp
cltd
and
daa
pusha
clc
iret
and
adc
inc
push
xor
cs
pop
sub
mov
adc
sbb
test
incb
jmp
scas
inc
loop
into
enter
or
mov
push
adc
dec
shlb
cltd
fdiv
xor
aad
lret
or
jmp
jp
rorl
std
dec
dec
into
das
jg
jae
pusha
mov
scas
cmpl
out
lea
add
fptan
fnsave
fidivl
dec
movsl
cmp
in
imul
ss
jecxz
shrb
mov
in
push
fs
mov
xchg
out
pop
insl
push
mov
xor
frstor
in
push
pop
insl
mov
xchg
or
out
push
sub
lcall
sbb
sub
xchg
or
adc
nop
push
stc
add
push
sahf
repnz
call
xor
leave
adc
lds
cmc
jns
and
out
mov
add
shll
shl
mov
cmpsb
test
sub
lods
int
das
sbb
jp
dec
mov
orl
push
add
xchg
icebp
dec
stos
push
lods
outsl
mov
shl
push
cmpsb
add
mov
push
gs
test
push
jns
movsl
cmp
test
fidivl
xchg
gs
add
cmpsl
scas
and
inc
sub
xlat
mov
leave
push
jne
lgs
inc
adc
xchg
xor
mov
mov
mov
and
and
scas
jno
out
aaa
into
sbb
cli
into
mov
inc
mov
loopne
lock
push
inc
mov
repz
mov
push
lods
stos
xchg
stos
sbb
repz
cmp
or
cltd
in
jg
test
je
lret
or
jmp
and
fcoml
mov
and
inc
lods
fs
mov
sub
jae
pop
ret
movsb
mov
out
mov
pop
sub
jbe
mov
nop
or
hlt
mov
hlt
jns
inc
xlat
mov
lcall
jecxz
int3
ss
stc
or
mov
push
fwait
xchg
les
in
push
mov
aaa
dec
xchg
loop
lds
cmp
xor
mov
xchg
xchg
and
ljmpw
in
and
or
cld
imul
rclb
xor
jns
and
jmp
mov
sarl
inc
in
gs
jno
hlt
sub
mov
xchg
push
sbb
movsb
cmp
lea
sarl
ret
movsb
outsb
adc
pop
or
jb
sti
lods
and
popf
and
xchg
pusha
test
iret
jle
mov
push
mov
test
jb
or
mov
stos
shrl
jmp
adc
shrb
icebp
adcb
mov
data16
repz
pushf
cmp
aam
pop
es
pop
lcall
and
pop
inc
rcrb
pop
lahf
xchg
jge
mov
sbb
pushl
in
xchg
les
mov
xor
aad
pop
mov
add
clc
rcl
xor
dec
add
sub
rorb
mov
pushl
test
push
int
add
lret
hlt
dec
pop
gs
das
mull
stc
mov
pop
push
aas
fwait
sahf
or
sahf
mov
pop
add
aam
pushf
pop
jno
sbb
jne
andb
dec
jg
enter
sub
repnz
ja
or
mov
sbbb
sbb
fs
adc
ret
or
xor
inc
data16
xchg
push
imul
pop
cmp
add
mov
or
jnp
movsb
js
lods
shlb
cmp
out
add
cltd
decb
dec
loop
icebp
les
mov
jg
out
mov
pop
icebp
xchg
into
shl
inc
ss
xchg
xor
nop
push
push
add
jne
xlat
data16
mov
push
push
xorb
mov
push
lret
shrl
mov
pop
dec
inc
jnp
gs
pushf
adc
push
jg
or
xchg
pop
xchg
jno
std
pop
xchg
sub
insb
push
sub
adc
or
cbtw
push
test
jbe
adc
mov
lods
jbe
data16
lret
sbb
dec
xor
and
rol
les
pop
cmc
scas
mov
cmp
lahf
xor
rcll
mull
push
mov
xor
cmp
sbb
and
outsl
movsl
or
cld
popl
cwtl
fisubl
adc
push
arpl
sahf
scas
ljmp
push
notl
push
popl
xor
pop
jae
cwtl
test
adc
stos
js
fdivs
xchg
call
dec
cmp
xchg
adc
push
push
and
sbb
jle
rcrl
lods
loop
xchg
or
sti
fildll
xor
call
adc
in
test
je
sar
or
jmp
fucomp
cli
mov
imul
sahf
dec
imul
mov
lret
xchg
js
mov
xchg
mov
aas
adc
fwait
dec
sbb
push
lret
imul
or
dec
xchg
mov
mov
fbld
cmc
lea
notb
mov
xchg
jae
sub
enter
mov
loopne
outsl
daa
mov
enter
ja
in
adc
inc
jp
xlat
ret
inc
mov
fldt
mov
adc
shr
mov
cmpsl
push
pushf
and
add
das
test
adc
mov
gs
xchg
lods
add
ds
cld
inc
or
mov
adc
jns
in
shlb
test
popa
mov
insb
andl
mov
mov
and
mov
gs
add
gs
ret
push
in
sahf
xchg
and
mov
rcrl
iret
cmpsb
mov
bound
pop
popf
cmpsb
rcrb
cli
pop
shrb
pop
aaa
fmul
dec
out
jbe
test
cmpsb
insl
or
leave
add
dec
pop
sub
mov
jecxz
les
jo
cli
std
mov
cmpsl
gs
cltd
enter
stos
repnz
xchg
es
jns
xchg
and
lods
inc
push
insl
add
int
push
mov
out
hlt
or
mov
imul
sub
std
cmp
or
add
repnz
lret
cltd
les
rclb
sub
xor
push
or
lds
add
loopne
xchg
lret
pop
mov
repnz
shl
mov
xchg
js
pop
fldl
dec
pushl
xor
loop
jb
inc
pop
lds
and
sub
loop,pn
adc
mov
inc
lds
sahf
ror
in
or
loope
jmp
jns
mov
and
jp
or
inc
jmp
xchg
pop
push
push
into
lahf
inc
xor
es
fwait
das
icebp
icebp
fcoms
sub
cmp
ss
xchg
shr
lret
in
jmp
push
sbb
xor
pop
cmp
jmp
jnp
mov
pop
inc
mov
bound
jns
int
push
jmp
clc
adc
std
movsb
mov
ror
sbb
in
shll
dec
dec
xlat
cmp
sbb
jns
popf
movsb
shl
mov
jl
xchg
lds
lock
mov
arpl
lds
cmpsb
adc
cmpl
jb
xorl
xchg
andl
cmc
or
jge
xchg
mov
sub
neg
pop
imul
stc
fldcw
aas
jmp
shlb
mov
cmp
loop
inc
inc
ljmp
stos
repz
mov
mov
xorb
sti
lahf
xchg
and
mov
idiv
xchg
pop
jno
gs
cld
fdivrs
out
cltd
push
push
mov
mov
dec
adc
adc
fwait
out
pushf
fxch
mov
fnstenv
xchg
xchg
cmp
pop
out
and
jecxz
mov
mov
mov
mov
jmp
pushf
mov
int3
and
pop
js
dec
mov
cld
pop
sub
fsub
stos
sahf
pop
xor
addr16
pop
fisttpl
pop
test
jbe
std
lahf
push
test
add
inc
movsl
xlat
rol
push
add
xchg
sub
add
loop
ret
pop
mov
and
push
les
jno
pop
iret
fldlg2
ljmp
jmp
inc
aas
jns
outsb
dec
xchg
dec
pop
ret
idiv
pop
mov
ret
loopne
pop
add
aaa
cs
jns
enter
sub
push
jg
pop
sbb
mov
subl
add
sbb
lds
insb
pop
imul
xchg
fdivs
test
add
mov
lock
test
cmp
adc
mov
gs
or
xchg
push
push
inc
mov
cmc
daa
in
push
fists
xor
inc
mov
faddl
sub
movsl
pop
addr16
xor
fs
test
adc
daa
bound
icebp
mov
gs
mov
ljmp
cs
lahf
test
repnz
cmpsl
ds
ds
mov
push
mov
mov
lea
aad
push
enter
ja
mov
adc
ja
testb
jno
add
xor
out
sbb
inc
aas
mov
jge
dec
push
mov
and
sbb
nop
fdivl
pop
push
pop
xorb
das
sub
shlb
mov
or
ret
stos
xchg
mov
and
dec
loope
outsb
xchg
das
stc
cmp
movsb
orl
insl
in
sbb
movsb
out
cmp
sub
jo
testb
outsl
popa
int
jne
es
jle
jae
mov
ja
pop
subl
mov
adc
mov
in
test
clc
jge
hlt
push
adc
inc
cmp
stos
add
cld
popf
int3
xchg
or
dec
dec
mov
cmpsl
ds
pop
jg
dec
je
mov
jbe
fsubs
ret
and
xor
push
jne
cmpb
or
test
inc
and
pop
sub
lods
xor
fcmovbe
mov
imul
mov
test
mov
rcrb
shll
mov
aas
mov
push
aam
cltd
add
mov
rolb
sbb
pop
adc
mov
aas
adc
mov
icebp
daa
add
iret
ljmp
xchg
notl
fisttps
mov
mov
dec
loop
mov
jge
js
cltd
xor
cltd
testb
jmp
and
inc
xlat
test
pop
in
jecxz
mov
mov
sub
jne
movsl
shl
add
shrb
sub
adc
mov
dec
jns
or
imul
or
sub
ljmp
push
test
stc
sbb
push
movb
scas
jo
inc
popf
jae,pn
lods
jns
aad
or
arpl
into
lret
je
sti
cmp
sub
imul
sbb
push
jns
fnstcw
jnp
mov
xchg
inc
movsl
roll
sbb
sti
inc
gs
push
out
mov
push
lret
add
mov
inc
inc
push
inc
out
dec
push
or
test
repnz
aaa
sbb
push
mov
mov
and
or
out
repnz
test
mov
mov
or
sub
add
cmpsl
mov
into
or
sub
rcr
mov
jo
push
inc
aas
stos
cmpsl
add
sbb
dec
push
pop
xor
inc
fld
mov
pusha
lock
add
xor
std
aam
pop
jo
xor
adc
pusha
dec
stos
inc
jp
dec
xlat
dec
sbb
jecxz
mov
cli
xchg
test
lret
addr16
cmp
dec
daa
outsl
loop
ss
and
pop
xor
push
lock
or
pop
lahf
sub
xchg
sub
push
imul
xor
xchg
fmul
test
fsubrs
cmpsl
rcrl
imul
fucomip
ds
shrl
pusha
decb
adc
inc
scas
hlt
in
in
sub
xor
pop
inc
arpl
scas
xor
mov
inc
dec
ds
rclb
adc
jne
lahf
xor
ficomps
mov
ljmp
aas
cmp
sbb
xor
cmpsb
out
sub
pop
imul
stos
nop
and
and
dec
mov
jp
inc
ficoml
mov
adc
dec
sbb
shrb
xchg
xor
xchg
sub
nop
add
int
pop
mov
jns
cmpsb
cmp
xchg
pop
cmpsl
cmpsl
popa
and
inc
cmpsb
sbb
inc
xchg
movsb
cmp
rcrb
sbb
fsubp
mov
sbb
mov
lea
mov
push
cmc
mov
pop
and
shlb
adc
mov
push
xor
out
repz
mov
hlt
mov
xchg
test
mov
and
in
icebp
push
repz
push
xchg
push
jmp
jnp
jo
mov
fs
xor
pop
push
sbbb
jmp
mov
push
leave
dec
dec
shr
daa
sbb
add
jge
inc
pop
adc
or
int3
out
mov
rol
addr16
imull
adc
ss
inc
aad
jmp
and
aaa
xchg
test
jns
sbb
jecxz
pop
pop
or
jge
xor
sub
mov
mov
fucom
add
test
and
push
adc
mov
je
mov
lods
mov
rcrl
add
in
pop
sub
js
hlt
sbb
loope
aam
loopne
jb
test
frstor
adc
cwtl
into
mov
push
mov
stos
fnsave
ret
add
xchg
ret
lea
aad
test
inc
jae
jecxz
lods
inc
scas
and
jns
lret
xor
pop
inc
loopne
mov
pop
call
pop
xor
inc
cltd
and
cld
and
and
sub
jle
jae
scas
push
aad
mov
jb
fsubr
xchg
push
incb
shrb
shrb
movsl
loope
stos
mov
mov
pop
mov
mov
pop
xchg
and
mov
mov
rorb
or
aam
shl
imul
subb
int3
arpl
enter
sub
sbbl
xchg
mov
and
sbb
lahf
cmpb
or
pop
insb
mov
out
push
mov
fistpl
fs
mov
fiaddl
fsts
mov
lods
jmp
inc
jmp
test
lods
jmp
fldenv
mov
mov
xchg
mov
inc
jg
js
xor
adc
xchg
popa
clc
xchg
or
mov
sbb
shr
jnp
imul
adc
or
decb
jp
or
mov
popl
rcll
stc
push
inc
scas
daa
mov
test
out
dec
lret
mov
testb
cmpsb
fcmovbe
cmp
add
sub
leave
adc
inc
xlat
pop
mov
jno
cmp
push
push
xchg
jmp
mov
jbe
nop
fmuls
fiadds
nop
xor
xor
xor
daa
repz
pop
leave
enter
push
jl
xchg
outsb
fucomp
lahf
out
ja
xchg
in
xor
xchg
mov
fcoms
in
inc
fwait
test
ret
mov
dec
cmp
jae
popa
mov
push
inc
dec
loopne
lahf
push
rorb
sbb
add
push
ss
outsl
xchg
arpl
push
jmp
popf
jle
inc
test
in
leave
dec
filds
in
adc
test
sbb
pop
mov
jg
jmp
nop
aas
loope
in
clc
mov
bound
repz
adc
xchg
mov
add
nop
vmulps
mov
es
movsb
cmp
lea
sbb
inc
pop
daa
lcall
popf
mov
outsb
cmp
dec
outsl
mov
aaa
nop
shrb
pop
leave
pusha
andb
test
push
or
push
dec
mov
bound
add
or
and
pop
mov
mov
fdivl
pop
movsl
nop
jl
jge
xchg
aam
lock
out
out
aam
ja
sub
mov
mov
int
movsl
arpl
inc
sub
xor
or
dec
bound
addr16
cmpsl
cmp
pop
sub
dec
pop
dec
into
gs
outsl
fucomp
xchg
sbb
lock
aam
jmp
fcmovbe
daa
sahf
mov
mov
into
nop
sbb
jbe
fwait
aam
scas
std
loopne
repnz
lahf
cmp
shr
ss
pop
or
pop
aas
or
jecxz
pusha
int3
pusha
sbb
shlb
repnz
adc
pop
jnp
and
inc
cltd
insb
std
mov
iret
pop
mov
fidivrs
cmp
fdivl
mov
dec
in
das
iret
pop
nop
insb
insb
mov
repnz
hlt
pop
push
fadds
xchg
jno
cmp
sbb
out
leave
cmp
dec
imul
fsubl
jno
pop
and
add
xor
popa
inc
lret
sti
sub
sub
call
dec
ljmp
es
ja
loop
lock
hlt
lods
mov
lret
int
pop
mov
or
pop
aaa
cli
cwtl
xchg
xchg
xchg
mov
xor
sbb
movsl
aad
mov
push
mov
jb
sub
imul
jmp
mov
add
adc
sbb
hlt
mov
enter
gs
imul
mov
dec
add
sub
inc
dec
adc
or
push
jns
dec
and
ret
mov
daa
ljmp
call
xchg
xor
sbb
mov
mov
pop
inc
lcall
ret
iret
fstpt
out
mov
inc
xor
or
fnclex
lret
mov
sub
xchg
mov
mov
or
cli
and
fstpt
jbe
push
mov
pop
mov
mov
adc
cmp
popa
pop
pop
xchg
xorb
movsb
shlb
push
inc
cmpl
jb
cmp
dec
xor
push
push
mov
bound
loopne
jle
mov
in
out
or
xchg
or
sub
inc
mov
fcompl
adc
std
cltd
test
nop
adc
pop
inc
mov
sbb
jne
sbb
enter
push
test
or
test
add
xchg
jge
ss
shrl
push
adc
cwtl
leave
sarb
mov
pop
sub
fidivs
pop
push
gs
repz
adcl
jl
sub
jae
or
outsb
rcrl
aaa
iret
inc
mov
jl
sub
inc
xchg
jns
insl
imul
sub
push
xchg
push
test
int3
adc
stc
rol
outsb
lds
call
jo
es
lea
mov
or
xor
mov
add
inc
ja
jnp
lock
sti
stos
fs
insb
inc
mov
fsubrs
int3
cmp
gs
test
js
mov
clc
xchg
inc
testb
testb
repnz
in
mov
mov
push
mov
dec
insl
scas
dec
jnp
push
dec
mov
dec
and
into
cmpsb
in
dec
in
pop
mov
sub
lock
jo
out
outsl
push
or
inc
push
mov
dec
ss
dec
pop
insl
in
clc
dec
repz
aas
out
cmpsl
sbb
sbb
xor
xchg
daa
mov
push
and
lock
out
mov
dec
loopne
mov
ljmp
jge
mov
mov
lret
data16
insl
jge
push
xchg
xchg
gs
dec
imul
mov
orl
xchg
adc
pop
test
mov
mov
xchg
sbb
clc
scas
pusha
dec
dec
rclb
movnti
sti
aaa
add
imul
inc
outsb
jl
add
push
or
sub
test
lock
mov
in
xor
scas
shll
mov
dec
jnp
mov
stos
push
insb
pusha
mov
lahf
stos
add
scas
das
repnz
push
push
lods
xor
sub
xor
cltd
cltd
mov
push
cld
mov
and
sbb
jne
inc
aas
mov
je
out
das
pop
pop
mov
sub
add
cmp
decb
fsub
push
bound
jno
out
sbb
movsb
leave
mov
pop
insl
repz
sbb
lahf
and
ljmp
mov
mulb
jns
adc
jbe
daa
lcall
lods
in
jbe
sarb
pop
fld
loopne
lds
pop
jg
push
das
mov
ret
sub
subl
ret
insb
mov
lret
cmp
and
sub
in
mov
scas
jl
leave
leave
fisubs
test
mov
push
mov
lock
loop
lahf
dec
pop
mov
call
iret
jge
and
lock
mov
cltd
push
push
pusha
adc
movsl
lahf
fidivrs
adc
sub
jl
dec
inc
sbb
and
or
aas
dec
jecxz
jnp
int
dec
adc
lock
aam
orb
sub
imul
mov
mov
lcall
sbb
sbb
or
adc
inc
jne
mov
adc
or
jmp
xor
loope
add
aaa
mov
sub
imul
jge
int3
sub
lods
jmp
adc
shl
cmpsb
sbb
lods
cmp
mov
cli
pop
mov
inc
xor
mov
add
fstp
lret
push
adc
loopne
aas
decb
push
ss
sbb
pop
andb
xchg
mov
insb
sub
jecxz
mov
js
dec
jmp
cmp
pop
inc
sbb
stos
xor
sub
mov
nop
sbb
and
cmp
gs
adc
adc
mov
push
xchg
pop
adc
movsl
add
fwait
lret
sti
dec
js
mov
adc
jns
jmp
out
push
rcrl
imul
mov
inc
popa
int
sbb
stos
cmp
xor
adc
jbe
pop
mov
fsubrs
cmp
push
adc
icebp
insb
mov
ja
xchg
mov
xchg
pop
outsl
jae
inc
sub
pop
loop
pop
out
dec
mov
mov
in
shrl
aaa
sbbb
jmp
sbb
adc
out
xchg
ds
repnz
ficomps
insl
cmp
clc
adc
cmp
or
mov
cltd
int
loope
pop
fmull
mov
lahf
xor
sub
lret
into
jmp
jo
jne
add
sub
orb
jge
inc
pop
xlat
ficoms
out
addb
sbb
xchg
push
mov
add
push
jno
cmp
loop
add
pop
cmp
xchg
addb
ret
and
mov
mov
into
rclb
fs
xlat
dec
jecxz
mov
ss
xchg
lea
insl
aaa
stos
pop
and
pusha
aam
lock
adc
movsb
mov
xchg
stos
test
fsub
jl
sarb
jbe
add
mov
sub
call
aad
push
pop
outsb
or
stos
shrl
loope
stos
cmp
mov
leave
sbbl
addr16
mov
and
cmpsl
out
sub
int3
xor
jae
unpcklps
mov
rolb
jmp
inc
lcall
es
rol
adc
jge
cmpsl
fbstp
cmp
xor
sbb
sub
dec
div
lcall
enter
or
mov
fwait
dec
jns
aas
scas
push
push
aad
sbb
mov
cmp
adc
mov
call
repnz
sub
in
scas
repnz
sbbb
lds
out
loope
ss
push
out
aas
cmc
in
dec
clc
jbe
scas
in
push
int
loop
push
sbb
sub
bnd
fldl
sahf
into
leave
add
mov
test
mov
icebp
jl
and
stos
push
xor
cltd
push
jne
dec
mov
cwtl
inc
mov
dec
fs
jge
sti
dec
pop
lods
leave
test
mov
cwtl
stos
in
mov
mov
xor
in
stc
xor
pop
dec
sub
pop
push
fwait
lahf
cs
mull
cs
lock
and
xor
inc
fwait
push
fsts
xchg
cli
xor
pop
ret
add
cmp
mov
movsl
loope
mov
jns
push
add
movsl
dec
inc
and
jle
mov
xor
jmp
bound
daa
inc
dec
in
aaa
or
dec
dec
and
or
dec
cmpb
dec
loope
mov
mov
pop
cmpsb
mov
and
adc
shlb
imul
push
sahf
mov
scas
mov
popa
inc
jge
jnp
fisubrs
fldl
shrl
les
test
push
add
cmp
push
and
out
add
imul
mov
into
sbbl
cltd
mov
lea
inc
or
repnz
sti
and
cmp
cmc
sarb
or
subb
popf
xor
lcall
or
and
mov
add
or
pop
stos
ja
push
jbe
pop
in
push
add
call
in
in
mov
mov
rolb
ror
fsts
mov
inc
aam
sbb
lds
jmp
xor
in
pop
push
cmc
ds
pop
inc
arpl
xor
push
cmp
stc
sahf
jle
xor
nop
std
cmp
xchg
xor
jns
arpl
pop
xchg
aaa
pop
out
test
pop
xor
fisubl
push
in
xchg
dec
push
jb
pop
cmc
mov
sbb
js
add
cmc
sbb
scas
mov
rorb
sub
into
and
mov
inc
dec
mov
mov
adc
jno
sbb
mov
lahf
jb
fistps
add
adc
sbb
jne
pop
sub
faddl
data16
fnsave
int3
test
mov
leave
aam
sub
cmpsb
push
call
stos
clc
outsl
push
sub
cs
std
mov
push
movsl
jns
fldt
xchg
push
mov
mulb
nop
mov
mov
jl
sti
push
lock
shrb
shll
add
es
out
mov
ds
aas
ret
hlt
int3
dec
je
ds
out
adc
daa
rolb
fwait
aad
test
loope
xchg
mov
aas
cmp
cs
cld
stos
lret
sahf
push
inc
xchg
sub
push
cmp
inc
adc
sbb
add
jne
neg
fstpl
add
jae
inc
ret
cltd
adc
in
imul
xor
ja
out
add
out
cmp
pop
loope
sbb
imul
scas
pop
mov
and
scas
fldpi
xor
mov
jmp
bound
aaa
or
xchg
sbb
jg
jge
cmp
stc
pushf
fs
pop
dec
cwtl
out
ja
cmp
and
cli
sub
jns
nop
mov
jno
sub
aad
and
push
out
aas
data16
mov
into
das
push
dec
xchg
xor
push
call
sbb
jae
and
inc
rclb
in
rcrl
pop
jne
push
das
xor
shll
xor
sbb
cmpsb
sbb
lods
inc
inc
es
sbb
inc
popf
test
sbb
jnp
push
xor
sub
out
lea
clc
jb
cmp
pop
mov
in
pop
dec
push
xor
jg
mov
cs
in
add
fistl
test
jmp
xor
outsl
adcl
daa
cli
shlb
mov
das
push
xor
jge
inc
out
dec
sbb
or
cmp
dec
out
test
hlt
mov
loopne
fcomip
mov
inc
nop
dec
dec
rep
add
out
jecxz
inc
faddl
out
aam
jne
fadd
mov
jbe
jge
xchg
mov
fwait
push
mov
lret
pop
leave
push
call
cmp
cmp
scas
lahf
stos
in
out
loop
addr16
pushf
add
xor
dec
push
push
mov
push
inc
repnz
ds
push
in
call
cmp
nop
decb
arpl
test
cmp
sub
cmp
and
dec
out
xchg
ja
mov
ror
jle
sub
dec
pop
jmp
pop
sbb
test
aad
fs
and
dec
loope
sbb
sub
inc
ds
sub
pop
enter
xchg
mov
fwait
bound
adc
sub
cmp
or
dec
outsl
mov
push
rclb
rorl
test
nop
mov
movsl
sub
mov
xchg
mov
fimull
test
cmpsb
ljmp
mov
das
xlat
or
int3
lds
les
int
ret
inc
pop
mov
or
cmp
jnp
xor
adc
xchg
pop
pop
xchg
pop
mov
and
sub
stos
xchg
subb
arpl
sbb
add
daa
adc
inc
lods
push
call
push
movsl
pop
out
sbb
sti
inc
xchg
push
outsl
popf
mov
push
fcmovnu
mov
pop
and
cmp
fildl
popf
or
or
mov
popf
cmpsl
pause
subb
push
or
mov
xchg
fstpl
sbb
fdivrs
push
repnz
pop
pop
mov
push
jns,pt
test
cmp
movsb
repz
mov
or
pop
rcrb
adc
stos
hlt
xor
xor
stc
je
shlb
ja
mov
decb
scas
dec
fwait
push
xchg
lods
repz
jl
add
cmp
lock
xchg
push
adc
sub
sahf
popa
mov
daa
sbb
dec
sub
dec
and
clc
mov
adc
sbb
add
testl
dec
pop
mov
std
mov
or
enter
addl
cmc
cmp
mulb
push
daa
aaa
push
pop
jno
stc
lcall
jecxz
mov
mov
insl
rorl
mov
into
fwait
adc
cld
or
cli
and
ds
mov
jp
lret
push
cmc
and
lcall
cwtl
stos
mov
pop
dec
xor
sti
jbe
push
sub
xchg
and
jge
push
and
es
xlat
pop
add
or
dec
cmp
inc
in
outsb
in
in
ljmp
in
inc
and
lock
outsb
sbb
sub
or
mov
popw
enter
dec
mov
or
jno
dec
lret
push
data16
push
mov
lds
jbe
adcl
push
out
push
push
aad
cmp
cmp
enter
or
int
and
addr16
and
push
into
jmp
inc
aas
pusha
pushf
adc
push
test
icebp
mov
scas
negl
dec
shl
jns
and
das
pop
jb
inc
call
lret
adc
mov
push
push
fwait
sti
and
jae
jmp
mov
mov
push
pushf
hlt
or
jno
or
sub
ss
pop
adc
and
loop
rcr
sbb
mov
inc
notb
cwtl
lods
loope
sub
fwait
aas
pop
sbbl
mov
filds
mov
pop
mov
pop
xchg
lds
loopne
negb
movsl
sbb
inc
rcll
push
aas
das
or
rcl
dec
cmp
hlt
mov
lcall
adc
jne
and
or
hlt
iret
or
push
lea
jecxz
sbb
mov
xchg
mov
fs
jle
scas
adcl
out
cmpsb
and
xorb
xchg
aas
push
iret
in
ss
divl
lcall
into
adc
fldcw
xchg
mov
mov
icebp
fcomps
xor
jecxz
dec
jns
add
push
fsubrl
into
and
add
cmpsl
sbb
cli
xchg
lods
mov
sbb
out
mov
push
shlb
mov
mov
stc
xchg
aam
push
add
jmp
out
jle
push
pop
fstpt
pop
mov
rcrl
mov
adc
dec
adc
sub
or
mov
aaa
sbb
pusha
xor
xchg
inc
inc
push
add
xor
scas
bound
insl
push
pushf
ljmp
mov
xor
ljmp
jae
aas
and
aaa
adc
pop
mov
and
fidivrl
stos
mov
cmpsl
es
icebp
punpcklwd
and
or
push
jo
mov
xchg
leave
fs
mov
push
pop
imul
cmp
mov
faddp
pop
dec
hlt
jle
loop
mov
push
or
fistl
shr
jo
or
pop
and
out
and
sbb
mov
sub
rolb
pop
shl
cmpsb
jns
clc
mov
add
into
mov
test
pop
sbb
jg
push
push
add
fcmovnbe
in
and
out
adcb
inc
popa
fiadds
xor
test
add
das
gs
add
xchg
and
mov
mov
jp
lahf
dec
in
mov
cmc
test
xchg
cltd
pushf
data16
ja
scas
pop
push
in
add
jno
jo
nop
imul
mov
mov
inc
pop
push
sub
or
fcompl
and
sub
mov
or
pushf
cmp
push
inc
fldcw
cmp
mov
hlt
xor
mov
inc
cli
lcall
bswap
add
shll
ljmp
insl
jl
repnz
pop
mov
xchg
pop
mull
or
xor
ljmp
push
movsbl
push
jbe
jb
dec
adc
loopne
out
push
bound
inc
shrb
mov
xor
popa
push
mov
repnz
test
faddl
mov
fdivs
int3
or
jl
cmc
sahf
mov
and
sarl
ja
and
lret
pop
pop
scas
add
add
mov
inc
inc
adc
mov
enter
sti
pop
jmp
mov
jno
fxch
cwtl
xor
hlt
icebp
pusha
testl
gs
pop
imul
lcall
cmp
mov
dec
xchg
sbb
lcall
push
sbb
in
sahf
xchg
xchg
xchg
pushf
out
add
outsl
cwtl
test
add
stos
fisubrs
pop
xchg
cld
dec
mov
fmull
enter
js
lock
aam
dec
cwtl
sti
jb
pop
and
sar
out
gs
mov
cwtl
mov
push
jbe
icebp
cli
inc
pop
bound
pop
adc
scas
jno
cmpsb
rorl
andl
xor
jno
lock
push
lods
loopne
or
sbb
sarb
adc
cmpsb
imul
cli
aam
aaa
ljmp
or
movsb
rclb
outsl
outsl
jnp
xorb
or
in
adc
cmp
mov
cld
pop
xchg
mov
pop
insl
sub
or
subb
push
or
xchg
fiaddl
test
push
adc
pop
inc
dec
or
in
push
lahf
cmp
xchg
pop
fmull
dec
movsl
sbb
and
pop
xlat
pop
cmp
ds
cmpsl
mov
sub
fiaddl
mov
movsl
pop
jne
popf
add
aaa
mov
adc
std
or
dec
stos
and
rcrb
pop
add
mov
adc
ss
xchg
fistpll
cmp
cmpsb
data16
jb
cs
or
jp
jge
dec
push
pop
mov
inc
mov
in
pop
push
cwtl
int
or
jl
add
lods
out
cmp
fwait
inc
int3
xchg
pop
jne
pop
mov
mov
jbe
aad
lret
dec
sbb
jae
je
sbb
xchg
or
cmp
mov
sbb
in
xor
xor
xchg
call
pop
adc
sbb
in
dec
loop
mov
jle
jmp
or
sahf
or
jecxz
adc
fdivrs
arpl
aaa
lods
mov
mov
xor
xchg
sbb
inc
push
xor
cmp
pop
cmp
scas
ss
aaa
sbb
out
test
sbb
js
mov
shrl
rcrl
xor
inc
sti
mov
xchg
adc
aam
add
mov
int
cmpsl
dec
stc
call
sti
test
jo
shlb
and
add
sub
push
mov
movl
das
mov
sub
fldenv
iret
inc
clc
mov
pop
outsl
loop
xchg
out
add
pop
loope
and
leave
pop
sti
mov
adc
aaa
mov
inc
fbld
cli
dec
pop
outsb
sbbb
les
mov
add
sub
xor
inc
or
adc
stc
jns
jns
add
jge
push
dec
insl
loopne
std
data16
pushf
fbstp
add
sub
pushf
fldt
jg
dec
cmp
xlat
fsub
pop
dec
push
jne
dec
lds
test
cltd
sbb
mov
cld
cld
jns
or
adc
pop
push
je
xor
xchg
pop
xlat
xchg
lods
testl
push
push
std
rol
sbb
cmp
mov
aad
out
out
or
in
inc
dec
cmc
xchg
mov
xchg
sbb
cld
subl
insl
sub
jecxz
loopne
and
addr16
jg
jnp
add
xor
aas
inc
dec
cmp
aas
sbb
imul
aaa
iret
pop
insl
mov
fnstenv
hlt
or
fwait
jle
and
lret
xlat
pop
jae
sub
clc
dec
dec
cmp
loop
push
lock
lcall
outsb
ror
pusha
and
out
scas
mov
mov
cmp
aad
mov
setle
das
push
or
xchg
cs
jmp
sub
outsl
icebp
xchg
and
imul
xchg
rcrl
xrelease
and
insb
mov
aam
xchg
adc
repz
test
lods
pop
xor
aad
outsb
into
or
push
xor
mov
jne
xlat
mov
xchg
inc
imul
or
adc
inc
pop
xchg
dec
mov
in
aam
sbb
imul
add
clc
sbb
mov
lea
leave
in
mov
lock
int
adc
xor
jecxz
jo
push
mov
jge
leave
hlt
dec
jbe
loopne
mov
and
inc
adc
push
orb
insb
lods
inc
sbb
out
push
shrb
or
outsb
enter
jp
call
and
repnz
lods
fs
inc
cmp
loop
lcall
xchg
out
je
fwait
scas
repnz
push
mov
clc
dec
orps
cmp
push
pop
lret
mov
push
imul
scas
sub
pusha
out
xchg
mov
addr16
popa
scas
xchg
mov
sub
pop
mov
outsb
jbe
pop
test
xchg
out
fnstsw
mov
test
test
push
pushf
mov
mov
or
fcoml
testb
push
fs
xchg
sahf
pusha
sbb
enter
testl
loopne
sub
icebp
insb
imull
into
add
add
mov
mov
or
das
jne
test
jl
rorb
shrl
mov
mov
sbb
popf
jns
add
sarb
ds
outsb
jmp
or
fnstsw
stos
cmp
pop
pop
add
push
cmpsl
push
repz
jbe
pop
xchg
jbe
add
movsl
sarb
in
and
cwtl
shrb
xchg
jnp
lcall
mov
fcmovnb
rolb
jmp
mov
mov
ret
lret
repz
call
push
add
icebp
inc
in
out
int3
lret
mov
push
pusha
insb
imul
mov
cmc
pop
mov
bound
sub
aad
and
add
sarl
lock
push
dec
lods
cld
pop
test
and
inc
data16
push
movsl
loope,pt
outsl
dec
ret
pop
out
hlt
mov
or
leave
push
ficomps
popa
fidivrs
sub
scas
das
pop
fdivrl
adc
fsubrp
test
jecxz
icebp
movsl
jae
dec
das
mov
pusha
imul
jne
mov
ja
nop
out
dec
dec
nop
sub
ja
pop
dec
pop
adc
ss
sahf
cwtl
mov
repnz
cli
int3
arpl
add
mov
leave
loopne
lahf
scas
sub
sar
jbe
sbb
adc
imul
mov
and
mov
leave
and
mov
pop
daa
sbb
ljmp
inc
push
sub
cmp
adc
pop
xchg
xor
sbb
jg
movsb
sbb
adc
push
inc
pusha
ret
sti
sub
and
jb
jecxz
sbb
mov
mov
adc
rclw
inc
je
mov
arpl
add
xor
cmpb
mov
pop
xor
jb
push
or
ret
enter
mov
ficoms
add
lods
and
imul
push
flds
bound
sub
pop
stc
out
std
insl
sbb
pop
xchg
loope
add
dec
add
stos
mov
and
leave
aad
shlb
dec
test
mov
xchg
jo
jp
test
ds
stos
out
mov
int
in
jae
jmp
adc
in
fs
push
sbb
inc
inc
mov
push
lea
fcoml
hlt
mov
dec
adc
mov
or
xor
sbb
add
add
enter
mov
in
sub
int3
lea
jo
xchg
mov
sub
loopne
jp
push
xor
repnz
scas
sarl
adc
adc
popf
mov
cli
icebp
std
jo
xchg
clc
or
sub
into
cmpb
xchg
inc
and
popa
adc
pop
rep
add
pop
notl
sub
push
mov
push
testb
jae
sbb
jg
jecxz
xchg
pop
test
addl
daa
lea
push
pop
adc
test
xchg
lods
jo
sbb
sbb
mov
subl
pop
loopne
std
outsb
inc
ja
adc
mov
aad
int3
imul
imulb
adc
cld
and
inc
lds
repnz
jns
or
out
lcall
rclb
mov
popf
ror
mov
dec
and
jb
std
outsl
dec
dec
dec
jecxz
pushf
xor
inc
cmp
xchg
int
mov
pop
xchg
and
roll
or
das
divb
add
subl
sbb
cmp
adc
adc
rolb
jl
mov
shl
cmp
outsb
rol
cmp
pop
and
aad
mov
mov
mov
cmp
lret
aad
mov
xchg
lds
leave
lahf
aaa
popl
iret
repz
add
jp
sbb
out
sahf
pop
inc
mov
sub
and
cmp
push
xor
jg
ffree
pop
push
in
rcl
mov
pushf
jg
sub
mov
and
and
loopne
mov
mov
adc
fs
mov
loope
std
lahf
ss
mov
mov
pop
cmpsb
stos
scas
aaa
std
sub
loopne
xor
fmuls
cmpsb
sahf
out
mov
push
call
cmp
in
pop
addr16
pop
xor
mov
in
fsubs
fidivl
sbbl
js
aaa
clc
hlt
mov
push
mov
push
sub
sub
lret
bound
ja
lcall
push
sub
mov
cs
in
push
mov
in
add
or
out
dec
outsb
adc
out
aad
clc
cmp
adc
lahf
mov
nop
adc
dec
xor
xchg
roll
inc
add
sti
jae
pop
mov
sub
mov
mov
sbb
out
cld
imul
mov
nop
inc
int
and
cs
or
lahf
xchg
insl
aam
clc
mov
popa
inc
cmp
dec
shrl
dec
xchg
dec
inc
sub
test
fs
pop
adc
ljmp
push
sub
pop
imulb
cmp
push
icebp
cli
mov
sti
fwait
aad
shrb
js
nop
fisttps
push
nop
xchg
push
repnz
mov
and
into
and
and
fwait
bound
xor
adc
push
mov
fwait
mov
insb
cli
mov
lods
js,pn
test
dec
inc
mov
inc
dec
gs
cwtl
je
and
test
inc
push
imul
sbb
test
fstpt
popa
mov
sbb
jecxz
ret
push
icebp
dec
xlat
mov
or
mov
inc
ret
lea
push
cli
cmp
jp
dec
jno
xor
inc
mov
lea
xchg
cli
test
dec
inc
ja
aad
fnsave
pop
xchg
test
pushf
xor
jmp
outsl
dec
cmp
xor
xlat
push
fdivrs
mov
shlb
in
mov
out
mov
push
daa
outsl
add
fpatan
push
and
adc
sarb
adc
aaa
xchg
repz
jae
push
pop
cmp
rcl
imul
shl
jb
dec
test
pop
ret
aam
mov
fptan
pop
pop
stos
and
pushf
decb
jns
cmp
mov
sub
test
add
jb
cmp
lea
sbbl
sti
fsubrs
pushf
push
daa
xchg
out
mov
sbb
pushf
push
into
or
pop
aam
cmp
div
movsl
mov
sub
ficoms
adc
mov
aad
inc
mov
negl
cmp
inc
sub
push
ja
mov
mov
lcall
or
loope
lahf
dec
inc
mov
hlt
popa
out
xchg
adc
xchg
outsb
and
mov
in
jno
xchg
es
sbb
sti
pop
int
pop
bound
add
dec
popa
getsec
shlb
add
xchg
shll
dec
punpcklwd
dec
fwait
adc
inc
push
inc
cmp
inc
jge
out
clc
mov
das
arpl
ret
sbb
scas
fcomip
sbb
mov
repz
aaa
dec
jbe
sbb
cmc
jp
jl
int3
loope
pop
cmp
mov
out
mov
adc
insb
push
add
push
cs
or
mov
sub
adc
jp
lcall
fucomp
xchg
je
insl
scas
je
mov
xchg
insb
or
insl
mov
ret
cs
hlt
outsl
mov
xchg
mov
lods
add
dec
shrb
jae
pop
jp
sbb
dec
in
loope
inc
push
sub
mov
pop
jle
fimuls
xor
push
loopne
enter
popa
mov
or
jecxz
jl
xchg
push
or
das
mov
fucomi
fcomi
xchg
loop
cmpsb
adc
mov
cwtl
cli
lret
bound
call
icebp
roll
dec
jmp
fs
repz
pop
jp
jl
leave
lock
pop
jae
mov
inc
push
adc
sbb
sub
addl
mov
testl
cmp
int
mov
dec
or
cmp
fldln2
mov
pop
ret
or
jno
sub
test
fildll
xchg
mov
add
xor
or
hlt
setb
cmpsb
test
bt
adc
outsl
jbe
push
fadd
pcmpgtd
roll
das
shr
xor
xlat
add
lretw
pushf
mov
adc
fucomip
xor
pusha
test
xor
cmp
js
or
mov
lcall
aas
mov
out
test
mov
jg
fisubrs
adc
cmc
shrb
jo
andb
dec
aad
inc
jge
in
mov
add
add
jnp
xchg
add
pop
mov
push
and
jmp
sub
daa
jne
sub
jecxz
push
sbb
push
and
and
adcl
mov
ljmp
xor
mov
cld
rcr
insl
shll
mov
xor
cmc
popa
adc
mov
inc
push
fucomp
dec
dec
loopne
sbb
mov
rorl
or
adc
lcall
jns
xchg
std
pop
out
inc
pop
pop
in
dec
and
aam
sub
add
into
je
pop
xor
adc
add
pop
ret
xor
dec
and
vshufps
sbb
stos
les
mov
nop
sub
inc
std
mov
es
fisubs
sbb
adc
imul
aam
xor
cmp
dec
test
pop
cmp
mov
sbb
cwtl
xor
lret
fwait
fisttps
mov
pop
shlb
outsb
dec
inc
cwtl
je
pop
std
inc
addr16
lds
in
popf
xor
mov
sahf
repz
lea
mov
repnz
shrb
imul
pop
rcrl
insb
sti
or
in
or
sbb
vandnps
dec
jecxz
jbe
repnz
dec
stos
inc
fdivs
pop
movsl
stc
sahf
sub
loop
lods
inc
cld
scas
cmp
add
pop
lahf
push
mov
cmpb
cmp
push
int
pop
ja
int3
pop
inc
xlat
cwtl
repnz
imul
cmp
inc
orb
inc
mov
pushf
lea
nop
adc
int
lods
neg
sbb
pop
inc
dec
dec
mov
ljmp
dec
testl
rcrl
or
out
sub
pop
dec
jo
fsubrs
fs
dec
push
sub
sahf
aas
aam
mov
outsb
push
xchg
xor
push
cli
mov
dec
jno
mov
popf
pop
inc
iret
out
jnp
mov
ret
outsl
movsl
dec
pop
jo
outsl
in
lods
jo
adcb
jbe
sti
jbe
push
inc
enter
call
inc
pusha
sbbl
jb
push
xor
scas
rcl
or
clc
aaa
mov
stc
pop
xchg
gs
push
in
dec
cmp
sub
lock
and
xchg
jg
pop
test
xor
in
call
and
jae
dec
data16
jae
sub
popa
or
mov
cli
sbb
outsl
jbe
and
mov
jmp
or
mov
push
jns
mov
jmp
sbb
push
sbb
daa
add
push
xor
pushf
hlt
or
rorb
pop
jecxz
insb
cmp
jecxz
aad
pop
test
jmp
sub
mov
lret
test
icebp
xor
cltd
stc
movsl
mov
mov
data16
addr16
lahf
xor
scas
xorb
adc
dec
data16
aad
mov
movsb
mov
xchg
push
cmp
pushf
xor
in
cmpsb
inc
sbb
push
xor
and
pop
mov
jae
imul
push
lods
int3
scas
mov
aas
adc
xorb
sub
rclb
sahf
xlat
test
add
cli
pushf
in
inc
mov
aad
repnz
dec
adc
xor
pop
pop
jp,pt
dec
mov
and
ret
test
in
into
gs
add
in
lds
pusha
sbbl
aam
xchg
dec
push
sbb
fsubr
jmp
cld
aam
and
cli
loopne
mov
dec
jo
or
in
hlt
dec
push
daa
adc
dec
shrl
mov
mov
paddusb
dec
ret
pop
repz
lahf
adc
or
pop
dec
push
push
ficoml
sub
lods
mov
fidivrs
push
sbb
jg
insb
mov
sahf
push
push
nop
iret
cmpsb
imul
add
cmp
pop
mov
insb
cmp
dec
cmp
push
pop
xor
test
ljmp
add
and
daa
mov
mov
imul
pop
jne
pop
xor
movsl
sahf
pop
out
int
lret
lret
jbe
iret
movsb
mov
pusha
or
out
imul
fcomps
pop
xor
arpl
cmp
shrb
orb
mov
int
sub
fidivrl
aam
out
xchg
adc
mov
sub
outsl
insl
iret
mov
sbb
mov
popa
stos
icebp
or
pop
fcmove
inc
out
pop
rcrb
sbb
jp
push
sahf
jp
lods
aas
mov
sbb
fmuls
jo
mov
lret
js
sub
int3
cmp
outsl
loop
pushf
movsl
cmp
xor
in
rorl
dec
ret
test
jge
hlt
cmp
imul
dec
hlt
dec
mov
rolb
pushf
in
adcl
xor
addr16
divl
fwait
xchg
pop
int
outsb
adc
stc
cs
repnz
xor
in
push
sarb
in
xlat
es
pop
mov
and
test
xchg
push
hlt
negb
xchg
add
add
mov
clc
or
add
xor
addl
daa
mov
jl
inc
scas
ret
mov
fisubs
pushw
js
adc
loop
outsl
mov
dec
xchg
gs
push
movsb
fisubs
mov
and
cwtl
inc
pop
in
jmp
js
or
cmp
in
xor
popa
shr
jge
inc
jmp
dec
jns
push
stos
push
popa
popf
inc
out
dec
jecxz
cmp
lods
and
jb
push
fwait
mov
xchg
mov
add
dec
in
aaa
dec
dec
add
jecxz
cmpsb
and
adc
dec
rolb
add
imul
addr16
icebp
pop
loope
out
dec
sub
pop
cmp
xchg
fldenv
movsw
ds
jmp
xor
pop
std
insb
jb
pop
jg
das
out
mov
aas
fdivrp
dec
loope
lods
into
xor
cltd
xor
cmpsl
push
lea
lods
xchg
lds
cmpsb
cmpsb
in
sar
xor
out
test
in
and
dec
dec
test
ja
adc
or
movsb
mov
iret
bound
xchg
push
xchg
jmp
fsubl
movd
in
jl
enter
inc
mov
xchg
xorb
fs
push
pop
fbstp
bound
cmp
mov
into
jmp
and
fsubr
mov
pop
sbbl
idivb
negl
xchg
xlat
shlb
je
arpl
fistpl
scas
adc
push
mov
jge
mov
notl
shll
loopne
inc
adc
fnstsw
xchg
sub
repnz
insl
enter
stos
mov
push
mov
add
in
xchg
xor
pushf
icebp
xchg
scas
jp
loopne
push
jge
sub
and
jge
insb
lcall
icebp
insb
imul
shlb
push
lea
mov
leave
sub
dec
in
dec
push
xchg
mov
or
mov
sbb
mov
pop
idivb
push
inc
popa
mov
add
out
cmp
sub
cmp
mov
cltd
inc
adc
jg
in
andl
or
mov
pop
inc
xlat
pop
cmpsb
ret
adc
mov
jne
cmp
push
scas
fwait
into
pop
or
das
out
loope
inc
ficoms
ss
icebp
pop
sub
mov
fs
inc
jmp
xchg
push
cmp
add
fisubs
adc
int3
xor
rclb
mov
xchg
xchg
add
mov
ljmp
loop
pop
jg
push
mov
aam
aam
adc
cmpsl
inc
cwtl
mov
inc
outsl
pop
sub
fs
xchg
fwait
add
in
mov
ret
idiv
jecxz
test
jnp
mov
push
xchg
stos
inc
repnz
jmp
xor
daa
jne
jno
shl
jp
inc
mov
out
mov
and
in
mov
mov
scas
aam
mov
mov
sub
or
adc
jp
and
dec
or
outsl
das
loop
testl
inc
dec
fnstsw
dec
scas
notl
aad
adc
test
cltd
out
negl
test
leave
xchg
and
int
push
daa
or
out
xor
fldpi
in
bound
pop
loop
push
cmpsb
pop
push
pop
xchg
js
inc
stos
inc
js
incl
nop
les
cmc
mov
rorl
pop
cmp
push
xchg
sbb
enter
sti
movsl
jge
int3
sub
jbe
jle
aas
out
push
xor
lods
andl
psllq
push
hlt
push
aaa
push
lahf
jg
jae
adcl
dec
push
xorl
shll
pop
mov
aam
aam
mov
add
test
mov
call
mov
insl
dec
pop
adc
leave
int
adc
imul
lods
outsl
mov
pop
mull
jg
in
cmc
push
mov
fdivl
in
mov
cmpsl
inc
lock
jbe
sti
push
cld
inc
adcl
leave
nop
push
pushf
idivl
ss
ret
push
xor
imul
aad
insl
add
loope
mov
and
jmp
xchg
filds
lcall
js
mov
imul
imul
xor
pop
jp
xor
dec
pop
orb
int
adc
test
movsb
pushf
das
add
jecxz
bound
pop
xchg
ljmp
add
scas
cmpsb
jge
pop
shrb
adc
xchg
out
scas
sub
xchg
mov
adc
inc
fmul
xchg
push
mov
mov
mov
jle
mov
jmp
mov
dec
in
cmpl
fiadds
push
push
cwtl
add
adc
int3
loopne
repnz
fsubrl
fisubl
cmpsl
xchg
mov
movsb
stc
inc
push
inc
mov
xor
push
out
jge
mov
ss
ljmp
fimuls
jnp
adc
push
mov
iret
lods
jb
std
jo
aaa
popf
pushf
dec
push
cmp
xchg
pop
insl
inc
les
jne
cltd
loope
mov
out
sbb
adc
js
mov
and
xor
in
cs
inc
out
scas
jmp
clc
cmp
add
test
sbb
out
cld
loopne
test
fists
adc
pushf
push
loop
das
cmp
inc
inc
js
and
dec
push
pushl
andb
jo
sbb
jecxz
push
addr16
ret
cs
jbe
bnd
mov
fs
jns
sbb
add
jge
dec
daa
rcll
push
or
fdiv
mov
adc
mov
fsubp
dec
push
pop
adc
and
mov
mov
sub
fisttpll
cmp
xor
nop
icebp
andb
cmp
push
icebp
leave
mov
and
mov
cltd
cld
mov
dec
and
data16
xchg
cwtl
in
loopne
mov
cmpsb
stc
xchg
movsl
cli
es
xor
mov
adc
mov
adc
clc
xchg
shrb
pop
xchg
adc
mov
jo
popf
xor
shl
inc
movsb
not
cltd
int3
or
movsb
mov
ficoml
xor
push
shrl
adc
outsl
shll
lds
sub
and
jp
test
popl
jg
cmp
jno
adc
xchg
sbb
cli
jbe
popf
fs
push
shrb
cmc
aad
shrl
push
mov
pop
xor
int
stc
nop
jmp
push
mov
and
cmp
popf
subb
push
mov
mov
xlat
insb
jp
pop
hlt
add
scas
ss
xchg
mov
mov
mov
push
out
stos
mov
cmpb
xor
out
out
sti
pop
fwait
push
push
adcb
fcomi
inc
pusha
sub
or
divl
pushf
push
jmp
xchg
into
movsb
mov
ret
mov
hlt
push
hlt
in
test
insl
fucomp
outsb
or
sub
lea
mov
adcb
dec
push
push
ror
ja
xchg
add
loopne
or
fs
rcrl
lahf
popf
jbe
pop
icebp
cmp
leave
movsl
popf
fdivrs
pop
inc
leave
fnstcw
and
push
xchg
jbe
jnp
add
repnz
sbb
fmulp
adc
scas
fsubrl
sub
mov
in
cmp
jecxz
fcomps
std
fisubrl
aam
jle
or
or
cmc
adc
movsb
lret
lock
sbb
sbb
jno
loope
rolb
dec
adc
push
cmp
push
jg
fisubs
test
xor
ss
sbb
dec
mov
aas
lret
jp
daa
jp
sbb
repz
push
int3
fs
xchg
push
cltd
icebp
call
fisubrs
stc
push
mov
cmpb
sbb
adc
scas
rorb
mov
jo
cwtl
inc
dec
arpl
fwait
add
pop
jle
fmull
lahf
lods
stos
mov
mov
imul
xchg
dec
dec
mov
ror
scas
mov
push
mov
add
mov
jge
pushf
scas
enter
ret
filds
sbb
push
pop
and
push
out
cmp
mov
test
push
fcmovb
jmp
or
lods
shlb
xor
inc
dec
fsubl
outsb
push
push
sub
in
and
test
mov
fistpll
imul
out
cltd
mov
pop
cwtl
add
dec
rcr
mov
shr
stos
add
subl
add
in
leave
rorl
movsl
cltd
out
xchg
adc
mov
lcall
fldln2
pushf
mov
push
lock
in
out
iret
bound
sbb
pop
cmp
cmp
stc
ret
insl
in
pop
fs
mov
std
shlb
jge
stc
pop
pushf
push
test
push
in
dec
cs
ja
rcrl
rclb
mov
add
mov
jo
outsb
inc
xchg
xor
dec
ds
dec
jge
aam
jae
push
push
or
xor
inc
pop
cmp
jecxz
sub
repnz
and
jb
fs
dec
jbe
lcall
sbb
ror
int
sbb
dec
addr16
data16
or
xchg
sub
lds
enter
jle
popf
jg
mov
push
jge
xchg
mov
in
and
inc
mov
jno
pop
jecxz
jno
xor
dec
mov
adc
xchg
xchg
in
test
sbb
jmp
xchg
or
and
dec
leave
pusha
adcb
stos
lcall
jecxz
sub
mov
andb
push
adc
loopne
xor
jecxz
fsubrs
das
cli
sub
mov
bnd
mov
les
lods
out
push
cwtl
mov
push
sti
adc
fwait
xor
sar
pop
icebp
pop
je
divb
mov
sbb
aam
pushf
shrb
movsl
jmp
mov
mov
js
fidivl
test
mov
push
arpl
sbb
add
adc
cmp
imul
mov
jecxz
cmp
imul
daa
fstps
xchg
sbb
ds
hlt
push
push
cmp
sbb
mov
popf
add
inc
bound
adc
mov
and
push
or
xchg
sbbb
mov
pop
les
sub
push
dec
xor
adcl
sub
rorl
in
or
adc
lret
adcb
es
mov
scas
mov
xchg
mov
mov
mov
jp
jl
or
aas
pop
stos
fstl
push
test
cld
stos
xchg
into
gs
out
mov
outsb
inc
jmp
cmc
adc
inc
inc
sub
pop
sbb
aam
push
orl
jecxz
xor
dec
rclb
xchg
mov
sub
inc
addl
push
xor
jmp
adc
arpl
inc
loop
xchg
movsb
add
ljmp
adc
jne
clc
mov
adc
fdivrs
scas
inc
test
or
push
daa
jns
pushf
sti
dec
mov
lock
and
aas
or
jo
scas
mov
test
pop
pop
sub
int
pop
xchg
jmp
push
bound
icebp
dec
dec
mov
push
mov
iret
cmc
sbb
push
jb
jmp
lock
pop
jo
cmp
mov
dec
test
dec
fidivl
cmp
call
iret
stos
jns
rcl
inc
lahf
pop
push
lret
inc
popf
enter
bound
xchg
roll
dec
into
pop
xor
popa
xor
das
ret
shlb
leave
jge
add
sub
push
pop
inc
inc
cmp
jl
stos
mov
xor
aaa
xchg
daa
and
iret
push
or
mov
cli
inc
shll
xchg
cmp
xor
idivb
mov
dec
jmp
cmp
adc
jmp
shlb
rclb
xor
inc
sbb
push
xchg
add
add
into
ret
adc
jo
push
adc
or
xor
fwait
sub
int
push
sbb
mov
ficompl
jl
adcl
or
sub
sub
clc
push
lds
ret
ds
push
xor
test
dec
pop
call
pop
fdivrs
int
pop
pop
jo
sbb
mov
inc
cmpsl
pushf
jno
repnz
icebp
hlt
enter
stc
popf
xchg
mov
jb
mov
outsb
jle
clc
pop
add
in
sti
clc
xor
and
lock
push
outsb
test
mov
call
repnz
pushf
movsb
push
lahf
cs
into
loope
jne
add
inc
push
out
or
mov
lea
sub
iret
add
inc
shll
pop
fnsave
shlb
xor
fwait
adc
shll
xor
xor
jle
push
sahf
sbb
icebp
add
pushf
sti
fisttpll
mov
ret
sub
mov
hlt
shll
dec
shl
xchg
popf
lahf
leave
and
push
lea
or
movsl
mov
jb
fwait
mov
les
and
daa
rol
sub
pusha
inc
xor
shlb
push
or
xchg
mov
mov
stos
int
jae
fidivrs
mov
pop
lahf
mov
les
test
inc
rolb
mov
ds
stc
xchg
inc
and
sbb
mov
push
cld
add
inc
mov
xor
inc
mov
movaps
mov
out
pop
xor
add
cwtl
out
jb
inc
and
xchg
and
jne
xchg
lea
adc
and
pop
scas
sbb
cmp
jg
mov
pop
pushf
jp
inc
jne
test
xchg
pop
leave
push
xor
jmp
push
jnp
daa
inc
mov
sbb
ljmp
xchg
pushf
in
add
pop
dec
push
inc
fs
fiaddl
loopne
jecxz
lock
mov
dec
dec
lahf
xor
lods
sub
pop
mov
repz
out
mov
xchg
push
sbb
jl
mov
sbb
out
stos
pop
sbb
pop
xor
sbbb
mov
inc
xor
ja
in
push
fbld
add
adc
inc
pop
pop
inc
fcomps
into
mov
jb
jo
inc
nop
les
loopne
inc
adc
jnp
xor
pop
sbb
inc
xlat
pop
mulb
push
outsl
or
or
mov
cwtl
movsb
inc
stos
adc
mov
enter
and
mov
push
lret
sbb
js
addb
and
jb
xchg
mov
test
inc
push
sbb
shrb
shlb
in
outsl
rorb
lret
cmpsl
ja
fwait
shlb
je
mov
sub
xchg
fidivrl
fdivp
sbb
rorl
pusha
dec
push
push
mov
mov
mov
add
pop
mov
pop
mov
ljmp
mov
out
sub
jb
shl
loopne
jle
dec
out
sub
jno
dec
sub
in
pop
ret
add
mov
mov
add
or
add
cmp
in
jb
adc
test
pusha
and
hlt
mov
fs
das
hlt
or
int
lcall
lods
rorb
mov
sbb
push
stos
pushf
out
out
ror
in
push
jae
dec
sub
insl
mov
sbb
mov
push
jge
mov
xor
xchg
sbb
push
setb
mov
bndstx
mov
out
jb
lea
arpl
pusha
push
and
shl
out
mov
shr
cld
cltd
jg
jmp
out
jne
lds
push
subl
popf
mov
jbe
test
pop
xor
fisubrl
stos
cmc
mov
outsl
mov
call
sbb
xchg
rcrl
mov
push
pinsrw
xchg
and
push
mov
in
pop
daa
and
xchg
mov
nop
fs
test
flds
in
sbb
pop
inc
cmc
aas
fcmovnbe
pop
rcl
sub
leave
jl
sbb
arpl
push
icebp
shrl
es
xchg
addr16
roll
dec
subl
pop
push
inc
aad
dec
jmp
rcrl
or
xchg
mov
andl
movsb
test
push
adc
cmpsl
mov
push
inc
popf
inc
cltd
mov
and
lods
push
inc
mov
stos
cli
dec
jo
sbb
lods
push
notb
jbe
push
xor
das
or
fstpt
cmpsl
and
adc
pop
jne
xchg
push
rcrb
xor
lods
lods
push
mov
mov
jno
sbb
test
cld
push
pop
outsb
cwtl
sahf
cmp
pop
xchg
add
mov
jle
add
or
scas
add
imul
ret
mov
xor
cmp
call
or
mov
sub
daa
int
ret
mov
push
pop
xlat
or
lahf
imul
inc
mov
pop
dec
in
cmpsb
and
add
lea
mov
jl
jns
xchg
and
inc
popa
jl
or
pusha
or
sbb
sbb
xlat
dec
ljmp
pop
outsl
mov
repnz
xor
loop
movsb
fsubrs
out
fadds
mov
imul
mov
rcll
mov
lcall
adc
lds
pop
clc
and
mov
ds
mov
mov
push
int3
xor
add
inc
pop
std
sbb
add
sbb
test
out
push
adc
loope
adc
lea
xor
add
adc
mov
inc
sbb
xchg
jae
inc
sbb
xor
inc
loope
push
test
and
mov
xchg
cmp
add
cs
ds
add
repnz
dec
nop
idiv
inc
or
mov
pop
push
fsubp
and
clc
xor
xlat
cmc
xchg
dec
cmp
insl
mov
mov
repz
dec
push
ret
shll
mov
mov
and
andl
xor
lea
lods
negb
shr
pop
sub
mov
dec
ja
or
mov
test
iret
and
test
shl
sub
fsubrl
lods
jmp
push
or
push
mov
enter
xchg
xchg
and
les
shl
mov
sub
or
sbb
lahf
cli
mov
jbe
and
fs
inc
stc
adc
outsb
test
and
shl
outsl
or
dec
repnz
push
mov
fwait
ljmp
out
adc
into
inc
sbb
in
jmp
lock
std
or
aaa
orb
jmp
rclb
jae
push
push
iret
mov
fiaddl
pop
or
jne
out
fldl2t
scas
aas
push
ss
ss
arpl
gs
pop
add
mov
jno
mov
orb
movsl
adc
arpl
dec
xchg
dec
xchg
lods
push
ss
fs
jg
pop
push
lahf
mov
mov
fimull
es
ljmp
push
addr16
jne
repz
shll
pushf
cltd
mov
incl
mov
mov
cmp
shrl
clc
fldt
dec
xchg
adc
cmp
jp
and
push
mov
sbb
jle
clc
mov
pop
sti
cmp
dec
and
sbb
ret
insb
pop
leave
pusha
mov
call
cmp
inc
push
popf
ja
cmp
add
and
outsb
pop
jo
add
cmp
mov
inc
inc
push
xlat
mov
cmpsb
adc
xchg
movl
in
shlb
mov
out
sub
pusha
icebp
or
ret
lock
cmp
pop
stos
add
popa
xor
jmp
repz
or
mov
dec
imul
xchg
cmp
sbb
mov
cmp
ret
pop
xor
ja
adc
loope
or
btr
sub
test
or
pop
cmpsb
fsubrl
clc
pop
fidivs
ret
mov
cmp
fmuls
and
xchg
fidivl
mov
andl
cmp
fwait
rcrb
adc
dec
fdivl
pop
aam
mov
pushf
mov
xor
cld
jmp
push
leave
fildl
in
test
out
mov
stos
in
push
cwtl
cmc
cmpsl
frstor
ret
sarl
dec
inc
xor
push
and
sbb
xchg
pop
mov
das
jge
fdivs
or
jp
jne
cmpsl
ret
or
jne
inc
mov
movsl
or
pushf
jo
lcall
and
adc
xlat
outsb
pop
xchg
lods
cmc
orl
xchg
jbe
pushf
jmp
jg
mov
mov
lcall
and
push
shll
out
xchg
xor
mov
inc
mov
mov
in
clc
adc
add
or
jbe
adc
or
inc
and
push
mov
outsb
cmc
fsubs
mov
pop
adc
pushf
and
inc
decl
addl
mov
xchg
sub
push
mov
std
sbb
pop
add
seto
clc
fwait
stc
repz
sbb
iret
and
mov
inc
fs
xor
push
adc
add
jnp
push
push
jmp
push
pop
sub
mov
mov
into
cltd
imul
lods
cmp
lock
inc
popa
cli
sbb
ss
test
adc
lret
cltd
jbe
cld
and
aad
jae
jne
fnstenv
adc
es
or
cmp
dec
sbbl
inc
stos
hlt
pop
pop
lahf
xor
inc
xor
push
mov
andl
sti
adc
and
cltd
stos
inc
push
test
or
and
jl
ss
cli
jae
lcall
mov
push
testb
mov
jne
icebp
ljmp
lahf
mov
pop
push
call
mov
outsl
sti
je
xchg
mov
xchg
adcb
jb
pop
jae
or
jne
jnp
mov
call
test
push
sbb
fcomps
sbbl
ss
sahf
fxtract
ret
sub
add
mov
popf
stos
jle
lcall
fnstenv
or
pop
insb
pop
outsl
mov
sti
mov
and
xchg
mov
negl
mov
pop
jb
push
sbb
push
cli
fwait
test
xchg
incb
std
and
push
jnp
adc
dec
movsl
mov
push
imul
daa
mov
iret
mov
or
fcmovne
fdivs
mov
mov
mov
jg
imull
test
mov
cmc
out
add
fldt
mov
popa
sahf
cmpsb
xchg
std
pop
xor
idiv
les
iret
lretw
sti
xor
sub
adc
imul
pusha
sbb
jge
idivl
cmpsb
inc
nop
sti
xor
cmp
cli
loopne
push
push
xlat
mov
push
add
mov
cmp
push
xor
jle
icebp
es
fld
mov
jge
aad
rorb
and
cltd
lret
xchg
imul
pusha
scas
jecxz
mov
es
pop
xchg
shr
fwait
or
mov
jne
pop
cmp
pop
js
gs
xor
push
push
hlt
imul
int3
or
jl
inc
aas
pop
sbb
fildll
cmp
rorb
xchg
mov
mov
push
negl
sbb
add
sarl
scas
mov
mov
mov
imul
jp
push
imul
adc
lret
push
xchg
shrb
jnp
lret
bound
jno
jge
push
scas
push
inc
sbb
xor
cmp
fs
out
sbb
inc
adc
cwtl
data16
inc
popa
nop
dec
mov
in
imul
idiv
shll
inc
dec
dec
rorl
gs
sahf
sbb
jmp
icebp
xor
int3
pop
pop
rclb
cmpl
mov
popf
xchg
and
call
sbb
daa
arpl
ret
fpatan
in
xlat
mov
aaa
repnz
fisttpl
add
jmp
jl
lods
cmp
mov
fidivrl
add
icebp
xchg
add
mov
mov
jmp
out
orb
mov
movsl
je
repz
dec
push
in
xchg
add
xor
lock
sbb
sti
push
add
or
or
sbb
mov
insb
add
outsl
mov
mov
pop
gs
and
mov
push
inc
repnz
pop
cmp
div
ret
jns
mov
sbb
jno
mov
pop
aam
add
mov
stos
xor
sbb
jns
mov
mov
jo
sub
pop
mov
test
pop
jg
pop
lods
mov
insl
add
add
or
popa
dec
dec
shlb
outsb
lea
xchg
or
sbb
xchg
xchg
jl
jp
fisubs
aad
sub
push
fistpll
movsb
hlt
inc
sub
inc
mov
fists
mov
mov
jge
xchg
mov
sbb
movsl
les
fcmovne
into
jns
sub
repz
icebp
ljmp
xchg
aad
les
dec
repnz
cmp
popf
push
xchg
loop
mov
ds
push
js
lds
push
rcr
mov
sub
jmp
mov
mov
testb
pop
adc
xlat
xchg
pop
xchg
xchg
movsl
push
inc
add
es
cmp
test
mov
popf
and
xlat
add
insl
sub
push
scas
bound
add
pop
jmp
jno
push
cs
push
xchg
or
test
loop
pop
inc
mov
movsb
mov
test
mov
inc
ljmp
out
outsl
lcall
push
std
enter
xchg
inc
pop
mov
stos
loope
jns
adc
cwtl
sub
pusha
aam
out
movsl
mov
fldenv
mov
cli
mov
push
ss
dec
addr16
push
cld
push
dec
mov
and
xor
dec
shll
sub
mov
in
inc
mov
cli
int
mov
clc
xchg
cmp
ret
sahf
mov
ret
sbb
imulb
mov
jle
jl
push
out
subl
lds
stos
mov
inc
shl
fwait
lahf
cltd
mov
lret
shlb
pop
mov
mov
mov
cmp
push
pop
xchg
sbb
xchg
sbb
push
imul
popf
pop
and
xor
imul
cmp
add
or
and
dec
iret
out
add
in
sbb
hlt
fldenv
enterw
repnz
mov
cmp
and
popa
sub
xchg
stos
or
cmp
adc
in
lea
shrb
jno
insb
ss
pop
clc
std
cmpsb
xchg
daa
pop
gs
rclb
sub
sbb
pop
sti
sub
ret
pop
mov
mov
lds
int
iret
shrb
lds
stos
dec
in
jmp
sbb
mov
fsubl
push
shll
imul
push
pop
mov
xor
mov
xchg
jno
mov
xchg
adc
bound
psubsb
xchg
mov
sbbl
jle
sbb
pop
lods
cmp
mov
xor
cmpsl
lds
mov
inc
lods
aad
push
jmp
ret
xchg
or
pushf
leave
cltd
jb
cs
hlt
loop
fs
mov
int3
montmul
cmpsb
test
sahf
sbb
insl
jnp
mov
fidivs
mov
add
pop
cmp
andb
jbe
push
jle
insl
mov
pop
sbb
hlt
push
notb
mov
jne
imul
ds
inc
jae
pop
pop
or
and
dec
dec
pop
push
les
jecxz
mov
and
into
dec
neg
jns
adcl
andb
mov
xchg
mov
sbb
dec
jns
imul
sbb
pop
outsb
shrl
sbb
dec
scas
sti
push
enter
js
les
jne
sbb
push
pop
sbb
and
dec
or
mov
repnz
push
add
jne
pop
pop
sub
mov
jns
addr16
aaa
adc
mov
jnp
inc
fsubs
cmp
sbbl
fs
ja
lret
rcrb
icebp
in
int
lret
lret
cmp
cld
jmp
aad
popf
pop
icebp
into
jle
hlt
mov
mov
cmpsb
push
inc
push
jns
das
jg
lcall
in
mov
inc
clc
push
int
cmp
push
movsl
push
sbb
orl
adc
cli
cmp
push
leave
cmp
and
les
sub
jnp
sti
jb
movsl
in
xor
adc
aaa
push
std
shrb
dec
and
jno
shl
gs
jno
adc
push
inc
pop
iret
xor
adc
aam
and
pop
arpl
loope
mov
ljmp
pusha
cmpb
inc
sbb
iret
add
int3
inc
fdivr
inc
push
cmp
rcrl
ss
xchg
aam
fs
xchg
add
stos
jmp
dec
jb
inc
out
out
push
cmp
and
xchg
div
test
mov
in
adc
adc
out
popa
xor
scas
mov
lods
jno
addr16
jae
andb
push
adc
adc
push
mov
cld
mov
inc
bound
jne
stc
out
outsl
cmp
xchg
jge
test
inc
sbb
sti
ret
data16
xchg
lods
ret
ret
jmp
mov
gs
push
imul
push
nop
cmp
or
jb
pop
outsb
jg
cmp
pop
outsb
jl
pop
mov
rorb
repnz
in
cmp
push
xchg
jecxz
pop
sarl
xchg
pop
mov
fisubs
dec
out
mov
push
jno
lcall
sti
mov
xor
fists
int3
nop
mov
jp
dec
lret
lret
jl
out
xor
movsb
mov
rcrb
nop
or
mov
add
fdivrs
mov
imul
cwtl
sub
dec
mov
xchg
pop
call
mov
jmp
stc
push
rcrl
mov
in
gs
out
mov
lret
lock
mov
adc
mov
jge
sbb
jns
sub
movsl
out
sbb
sbb
push
jo
xchg
inc
pop
inc
pop
mov
rcll
jg
lds
aam
pop
fsubr
ja
mov
dec
adc
sbb
xor
dec
mov
add
mov
jb
push
int
push
jg
dec
call
test
mov
cmc
pop
sub
dec
dec
enter
mov
hlt
mov
pop
testb
mov
lea
fcoms
fimuls
xor
stos
scas
std
add
or
inc
inc
xor
mov
in
adcl
or
cmpsb
mov
imul
cs
test
inc
inc
jecxz
mov
aad
adc
mov
dec
loop
cld
mov
shrb
push
daa
into
sub
das
in
push
lcall
in
in
dec
mov
jns
inc
faddl
fmull
inc
in
cs
mul
jnp
cltd
lds
negb
or
inc
jns
pop
jg
fnstenv
scas
or
mov
or
leave
imul
jbe
xchg
xchg
add
les
in
not
jno
pop
cmp
push
push
lods
faddp
movsl
aad
jecxz
pop
jp
mov
add
loopne
lods
cmp
clc
adcl
arpl
fcoms
movsb
sbb
sub
push
pop
adc
aad
stc
js
out
sub
daa
and
cltd
jnp
dec
pop
ljmp
insl
lea
xlat
mov
mov
cli
jmp
mov
das
pop
adc
imul
hlt
iret
dec
ss
or
and
push
mov
push
jbe
jbe
xor
ret
movb
inc
add
in
inc
gs
int
fdecstp
inc
pop
pushl
scas
data16
scas
sti
into
je
mov
push
pop
mov
fstps
mov
pusha
aaa
pop
repz
test
sbb
push
popf
xchg
mov
repz
scas
test
dec
jno
xor
inc
add
loopne
push
arpl
sbb
push
mov
inc
jbe
dec
mov
push
push
sub
aad
mov
stos
mov
out
lea
or
scas
es
in
adc
shr
mov
xchg
xchg
arpl
dec
ja
cmp
leave
insb
pusha
hlt
in
test
xor
xor
fidivrs
jmp
into
cltd
mov
aas
mov
mov
mov
test
pusha
mulb
insb
inc
cmpsb
in
or
xor
repnz
xor
in
inc
in
mov
inc
lret
ret
push
insl
push
and
lea
inc
dec
lret
lods
xor
sbb
aas
loope
lods
sub
mov
add
fcmovbe
imul
mov
fdivl
je
add
hlt
iret
inc
dec
das
cmp
cmc
cld
or
add
iret
fs
xor
xor
add
push
es
xchg
stos
xchg
mov
fcompl
scas
or
sub
cmp
inc
popa
dec
sub
pop
pop
jmp
fbstp
test
xchg
dec
js
adcl
xor
pop
mov
into
mov
mov
push
mov
cli
daa
xor
loopne
push
mov
jno
mov
and
sbb
imul
rolb
out
mov
push
mov
mov
nop
arpl
cmp
fiadds
rol
repnz
jno
ret
aam
lock
xor
xchg
in
subl
jb
and
imul
enter
rcr
or
pop
cld
adc
jo
adc
mov
sbb
mulb
dec
xor
push
cmovo
imul
pop
or
int3
dec
push
jae
cmpsl
cli
nop
orb
jle
ljmp
jo
sbb
decb
into
rcrb
xchg
call
cmp
dec
in
stos
mov
pop
jecxz
pop
sub
call
jmp
inc
les
mov
mov
clc
repnz
aad
cs
xchg
leave
add
out
or
jae
out
arpl
sub
xchg
pusha
aaa
dec
or
fildl
fucomp
lds
orl
mov
lods
or
jae
jno
mov
cmp
or
dec
inc
inc
lret
lea
xchg
cld
jecxz
mov
out
sbb
push
adc
jae
fwait
sub
cwtl
in
xchg
dec
xor
imulb
and
jae
into
sub
xchg
dec
dec
inc
push
push
das
lea
mov
stc
mov
sub
dec
adc
mov
out
inc
fcompl
pop
out
std
arpl
movsl
xlat
out
mov
jg
cmp
nop
mov
mov
fstps
adc
les
repz
sub
push
xor
xchg
jge
pop
sti
cmp
dec
repnz
inc
mov
and
test
mov
xor
repnz
jns
stos
xchg
das
inc
ja
lds
xchg
inc
ljmp
fwait
repnz
mov
pop
testl
into
xchg
xchg
sbb
xchg
and
ds
cli
pop
and
lock
mov
xor
test
outsl
sbb
int3
paddb
mov
add
ror
jl
push
jbe
ficoml
lret
int3
mov
xchg
ficomps
push
push
dec
cli
inc
std
cli
xchg
add
sbb
rorb
mov
daa
dec
fwait
jns
mov
mov
cmp
movsb
fsubrs
cmp
scas
ret
cwtl
xlat
movsb
adcl
add
inc
pop
adc
lock
jnp
iret
jne
jne
lods
jo
adc
leave
cmp
out
add
es
push
cmp
adc
test
in
cmp
aaa
scas
jle
sbb
xor
mov
ljmp
pop
sub
xor
mov
ds
call
pop
and
jnp
ret
lea
fldt
and
mov
jo
data16
frstor
sub
dec
inc
dec
push
aam
jmp
out
stc
xor
push
sti
jnp
pop
scas
xchg
das
mov
loopne
in
push
les
pop
iret
fnstenv
xchg
xor
jl,pn
push
loop
sbb
and
adc
pop
push
das
test
jno
ss
bound
iret
rorb
loop
insb
mov
lahf
mov
jo
icebp
mov
and
shll
inc
xchg
les
dec
dec
gs
out
ljmp
sbb
xor
movsl
jp
adc
ja
mov
sbb
pop
mov
adc
and
pop
loopne
outsl
sub
or
push
push
jl
sbb
or
jns
and
adc
vcvtsi2sdl
adc
dec
cmp
bound
xchg
pop
imul
loope
sub
dec
fnsave
addb
subl
xchg
imul
cwtl
sar
jb
xor
sbb
scas
mov
xor
sbb
jbe
inc
xor
push
inc
fidivrl
sbb
lret
mov
test
xor
arpl
test
shlb
jo
push
icebp
dec
in
in
in
xchg
mov
cltd
xor
mov
and
dec
in
cmp
push
push
mov
cmc
mov
jnp
mov
out
mov
xorl
adc
mov
and
pop
ret
inc
adc
lcall
jno
out
push
sbb
clc
xchg
cli
mov
addr16
and
cwtl
inc
pop
add
dec
sbb
cwtl
jae
xor
mov
and
popa
xchg
ja
sub
adc
sub
mov
cli
mov
mov
mov
outsb
jo
dec
fbld
push
in
lret
pop
dec
scas
mov
push
jb
int
cwtl
decl
lods
mov
jnp
daa
push
shll
dec
cltd
jbe
stos
dec
fidivrl
lea
repz
jb
iret
imul
jmp
imul
sti
mov
stos
inc
mov
dec
push
inc
stos
mov
stos
push
push
inc
jmp
stc
aaa
fidivl
adc
test
mov
clc
xor
sahf
scas
stos
push
and
imul
repnz
fimuls
repnz
pop
and
in
push
pop
push
in
add
pop
fists
cmpsl
or
ljmp
je
in
fisubl
mov
lds
faddl
jb
aam
add
sbb
dec
push
mov
cmp
xlat
out
fidivrs
insl
cmp
inc
insw
clc
mov
xor
ss
out
rcr
or
cmpsb
cs
xchg
mov
aam
jge
jge
jbe
pop
mov
hlt
mov
push
push
mov
xor
jnp
adc
pop
sub
pop
or
aad
and
lods
mov
fbld
ret
rol
test
inc
add
fldt
insl
push
stc
mov
jmp
js
into
jecxz
mov
push
add
and
cld
mov
ret
js
sbbb
adc
cs
arpl
jo
inc
and
fiadds
dec
std
mov
ja
xchg
mov
aas
pop
rcrb
fidivrs
jecxz
xchg
adc
scas
mov
or
push
adc
push
adc
sub
inc
mov
pop
loop
xchg
pop
nop
inc
cmp
repnz
arpl
dec
mov
pop
mov
fists
stc
int3
out
aas
and
lret
lret
repnz
lea
add
dec
aam
push
add
inc
cld
mov
lods
cmp
dec
cmp
test
and
std
movsb
leave
fsubr
mov
sti
inc
fs
sub
sub
mov
les
jnp
bound
xchg
aaa
fdivl
fmuls
dec
loop
push
insb
dec
ljmp
icebp
inc
or
inc
ret
hlt
sub
push
push
dec
dec
add
push
add
shrl
adc
cmp
shl
ja
pop
dec
clc
push
cmp
orb
sar
loop
call
daa
fidivl
mov
clc
nop
sbb
pop
rorl
or
cmpb
std
xchg
popf
mov
sbb
test
inc
fs
inc
jl
mov
or
adc
add
loopne
loop
lcall
push
repnz
and
inc
shrl
jbe
lea
lock
pop
and
push
loopne
mov
or
pop
in
cmp
movsl
add
mov
push
push
push
and
leave
insl
xchg
fidivs
int
push
cmpl
int
xchg
adc
mov
pop
repz
xchg
cmp
jnp
iret
je
xchg
cmpsb
lock
xor
pop
or
mov
popf
leave
sbb
dec
loopne
in
lcall
incl
xchg
dec
cltd
loope
mov
mov
inc
mov
mov
scas
je
push
cmpsl
cs
or
out
and
sub
dec
mov
dec
jecxz
xor
mov
jle
in
insb
inc
mov
jl
out
sti
mov
fwait
xor
mov
ret
inc
xchg
mov
ret
mov
jg
inc
stos
scas
jne
mov
sbb
fstl
jb
mov
mulb
push
into
jne
fsts
push
mov
xor
xorl
inc
mov
rcrl
adc
int3
or
loop
ret
cli
sbbl
or
mov
inc
call
sti
mov
push
out
or
lods
inc
mov
stos
xor
cmp
push
push
jmp
dec
xor
adc
in
std
pop
xor
rclb
fdivl
push
fsubr
push
cli
lret
daa
clc
or
das
inc
arpl
sub
mov
mov
add
rorb
mov
movsl
imul
xlat
mov
and
js
out
inc
adc
jmp
shll
test
fnstcw
mov
jmp
pop
lods
lea
ds
pop
add
inc
inc
sbb
leave
flds
add
in
adc
inc
inc
popf
jp
into
js
gs
stc
bound
in
pop
and
or
dec
into
stos
in
mov
insb
repz
cmc
mov
sub
ror
pop
mov
xchg
inc
aaa
rcrl
pop
mov
out
adc
cmp
out
fwait
mov
int3
movsb
sub
mov
pop
sbb
mov
int3
mov
movsb
andb
cmp
cmp
fistpll
push
pop
dec
test
jo
testb
xchg
aas
add
call
or
cmp
out
ss
mov
out
test
popa
mov
shll
aas
lret
aaa
adc
ret
or
sbb
outsb
idivw
shrb
mov
or
js
ja
dec
jnp
fwait
std
mov
push
cmp
jge
icebp
call
mov
jbe
sub
xchg
sub
sbb
xchg
jl
mov
mov
ds
xchg
mov
sub
hlt
cwtl
addr16
xchg
cmp
dec
adc
fnstsw
insl
test
dec
js
push
lods
xor
addr16
sbb
xorb
mov
aaa
dec
cmp
rolb
stos
mov
push
int3
and
stc
lea
gs
pop
ret
and
cli
notb
xor
sbb
push
jp
cwtl
cmpsb
gs
mov
inc
fcomip
inc
push
je
lock
loopne
scas
ret
dec
aaa
int3
jnp
or
push
pushf
push
in
pop
push
out
xchg
xchg
movsl
adc
aad
out
or
gs
mov
inc
jg
fwait
push
mov
jp
cwtl
xor
in
ret
jnp
pop
not
mov
push
js
sub
and
arpl
dec
ja
sti
push
iret
rclb
lret
add
testl
test
push
mov
stc
cmp
push
lods
xchg
scas
adc
mov
lods
pop
jge
mov
jp
lret
jbe
lret
lds
loop
jmp
std
push
and
ja
lcall
sub
mov
sbb
scas
sub
addb
mov
sti
dec
mov
xor
xor
dec
out
mov
test
pusha
or
push
adcl
dec
lcall
xchg
or
idiv
mov
retw
jmp
pop
mov
jg
jl
test
mov
mov
scas
jl
imulb
mov
out
xchg
ds
mov
inc
or
cli
inc
negl
jmp
mov
mov
aad
mov
xchg
add
cmp
mov
icebp
fst
outsb
les
sahf
mull
cs
pusha
dec
mov
mov
or
push
imul
ret
push
adc
sbb
imul
add
add
push
sub
and
dec
mov
add
fcom
iret
loope
mov
xlat
loope
scas
add
cli
xor
mov
imul
cmp
and
jnp
cmp
in
cld
fs
in
pop
inc
popa
xlat
pushf
and
fsubrs
lcall
loopne
and
sbb
cs
aaa
dec
sarb
cmp
xchg
push
jae
cltd
mov
mov
lock
xlat
arpl
stc
dec
test
lret
je
xchg
leave
pop
and
jp
std
popf
jmp
and
aaa
test
sbb
pop
loope
xchg
gs
push
aad
lret
mov
inc
imul
mov
pop
cmp
sbb
rorb
inc
stos
mov
mov
faddl
std
xchg
scas
data16
cmc
xor
xchg
pop
pop
cli
dec
fwait
leave
es
insb
sbbl
xchg
in
mov
pop
sti
rcrb
loope
imul
cmpsb
cmp
push
xlat
les
adc
scas
nop
or
aaa
xorb
movsb
mov
or
sub
es
mov
movntps
mov
and
lcall
jo
arpl
rcrb
rclb
pop
sahf
out
imul
movsb
push
push
subl
roll
jbe
mov
mov
pusha
xchg
adc
fbstp
pop
push
mov
pop
jbe
je
mov
scas
fimuls
xorl
cmp
fwait
data16
clc
xor
jmp
sbb
rol
std
pop
jg
testl
andb
aam
or
stc
loop
cmp
aas
mov
ds
ljmp
data16
iret
fprem1
icebp
stos
or
fistpl
fs
inc
lds
fistl
add
xor
pop
or
xchg
mull
xor
pop
jb
push
dec
in
pusha
or
pop
mov
insb
fistpll
mov
int3
movsl
ja
stc
inc
cmp
cmc
adc
mov
int3
loopne
sbb
pop
pop
jo
aad
and
scas
repz
clc
lret
pushf
jmp
sbb
les
jo
lahf
ficomps
push
mov
inc
fistpl
pop
xor
fwait
scas
movsw
inc
mov
and
sbb
aaa
data16
jne
cmpsl
stos
lea
mov
or
jecxz
add
jle
add
mov
shrb
sarb
pop
popf
cmp
pop
pop
in
inc
mov
mov
pop
or
pop
out
cmp
es
xchg
add
and
xor
out
nop
das
test
jle
pusha
iret
fs
aad
out
lahf
xor
stos
mov
les
pushf
imul
jnp
jge
jns
jb
cmpb
adc
arpl
or
jne
adc
sbb
mov
jno
sub
xchg
xchg
add
xchg
mov
cmc
or
and
mov
xbegin
xchg
push
je
and
movsb
hlt
adc
rcll
mov
mov
shll
adc
stos
cmp
fcompl
xor
jo
arpl
cwtl
lcall
lds
test
cmc
mov
xchg
sarl
push
fsubr
sti
std
jns
out
lcall
jnp
lods
inc
dec
in
iret
inc
outsl
lret
and
inc
push
cmp
xor
adc
testb
xor
enter
inc
enter
test
xchg
fwait
xor
idivb
add
fstpt
fcoms
cli
sub
cmp
ja
sub
pushf
push
jno
mov
xchg
sbb
call
jno
xchg
xor
je
mov
add
mov
mov
rorb
and
imul
inc
push
mov
push
inc
sub
int3
arpl
rolb
popf
test
adc
iret
sub
rolb
add
pop
sub
cmp
jo
xor
insb
add
xor
xchg
jle
inc
cmp
cmovle
push
dec
fiadds
xchg
sbb
leave
cwtl
or
mov
fdivrl
testw
jbe
repnz
jge
xor
or
adc
pop
adc
insl
sarl
jb
sbb
push
lret
scas
mov
aaa
mov
ret
hlt
or
cmp
pop
xor
sub
bound
in
repnz
in
xor
inc
or
mov
mov
and
scas
xchg
mov
shl
pop
orl
jle
fistpll
push
cmc
jo
adc
in
and
ss
mov
mov
sbb
insb
pop
fcomps
rclb
lcall
mov
xor
test
mov
outsb
adc
mov
pop
lret
mov
int3
mov
push
in
enter
adc
lret
inc
ds
jae
mov
mov
lock
cld
adc
testb
inc
cmp
repz
pop
addr16
jge
push
scas
vphaddbw
int3
inc
imul
xchg
cld
push
hlt
jmp
notb
push
add
cwtl
sbbl
inc
dec
lods
gs
jbe
fwait
test
mov
jne
shlb
mov
sbb
jle
into
in
repnz
mov
ret
or
pushf
jge
addr16
adc
ss
or
adc
add
jl
es
and
xchg
adc
xchg
adc
adc
andl
dec
dec
inc
fsubs
cmpsb
mov
sbb
ret
in
std
xchg
outsl
push
enter
cmp
das
stos
std
andb
inc
mov
movsb
jge
jo
sbb
add
lods
xchg
mov
test
arpl
mov
clc
outsl
dec
mov
je
add
je
out
cmp
jne
fcompl
std
stos
fadds
pop
fs
mov
sub
in
jecxz
adc
sbb
in
inc
jmp
mov
jne
mov
fadd
incb
adc
add
add
popf
inc
push
fisubs
fdiv
cmp
aas
je
adc
pop
push
mov
std
ficompl
int
mov
mov
cmpsb
les
into
pop
in
inc
adc
dec
push
xchg
scas
lods
aas
pop
scas
xchg
dec
negb
mov
inc
insl
mov
hlt
or
nop
push
dec
mov
mov
pop
or
shrb
cli
inc
cmp
cmpsb
aas
rcrl
mov
mov
bound
adc
lret
xor
mov
adc
push
push
xor
push
push
lret
adc
pop
xchg
or
test
int3
lods
icebp
xchg
ds
inc
or
loopne
jb
out
push
push
leave
int
shrb
lea
pop
scas
mov
fsubrs
mov
out
pop
mov
or
xchg
sub
push
aam
loopne
std
or
mov
outsl
add
ljmp
and
cmpsb
inc
pop
lods
into
das
out
mov
andb
in
sub
pop
add
ret
ret
cld
inc
sbb
mov
rol
jnp
sub
call
dec
out
out
mov
sub
mov
fisubrl
or
int
mov
pop
push
dec
push
xor
adc
loopne
sub
jecxz
je
xor
loope
add
outsb
and
cmp
cli
or
add
push
test
pop
mov
dec
out
push
lcall
mov
insl
inc
push
insl
inc
push
data16
dec
cmpsb
xlat
repz
faddl
stos
inc
mov
dec
add
vcvtss2sd
fidivrl
inc
push
ljmp
jno
push
xchg
push
sub
jle
and
shrb
jnp
jmp
push
fwait
shr
lock
pop
cmpsb
sbb
jp
btc
sbb
outsl
dec
add
and
push
enter
mov
inc
xchg
adc
mov
jecxz
enter
xor
enter
cmc
push
jo
mov
lods
cmp
icebp
es
xchg
es
mov
rorb
out
xchg
cwtl
ds
xchg
mov
and
adc
cmc
insl
and
xchg
add
movsb
and
out
mov
pushf
mov
push
icebp
sbb
pop
mov
das
add
jg
lret
and
iret
data16
clc
xchg
dec
nop
into
or
dec
fstp
push
cwtl
xor
mov
xlat
mov
add
das
cmpsb
fmulp
movl
loopne
pop
jle
sbb
mov
jae
cld
ja
cmp
das
or
jmp
push
call
or
repnz
mov
xchg
ret
cs
xor
icebp
adc
addr16
dec
mov
add
and
jmp
rcrb
pop
incb
adc
imul
loopne
lea
push
mov
arpl
cmp
mov
loopne
sub
mov
sbb
sbbl
or
pop
xorl
daa
sahf
xor
jmp
add
sub
adc
adc
rcrb
bound
andb
scas
lret
arpl
xor
push
fisubl
ret
pop
inc
shll
adc
daa
popf
xor
push
add
mov
pop
movsb
stos
rorl
pop
dec
jecxz
insl
cld
jae
ja
add
mov
aam
mov
sub
adcb
adc
jmp
adc
adc
imul
fwait
stos
inc
inc
push
insb
lahf
mov
mov
into
fdiv
add
push
inc
add
popf
xor
and
sbb
shrl
inc
jp
mov
rol
imul
xchg
pop
mov
xchg
arpl
cmp
ret
dec
aaa
xor
fwait
inc
inc
jl
dec
loop
pop
or
lea
push
ret
leave
js
scas
adc
sbb
es
jb
cmpl
cmp
lods
mov
insl
mov
inc
sub
sbb
pop
pushf
dec
inc
ljmp
mov
cwtl
xchg
sbb
add
sub
jmp
or
inc
push
sub
jbe
sub
rclb
inc
arpl
scas
mov
xor
or
fnstsw
jb
pusha
pushf
pop
pop
and
sbb
and
enter
jl
or
dec
iret
mov
xor
push
push
fs
pop
ja
add
testb
adc
lea
push
jmp
and
mov
cmpsb
mov
dec
aad
inc
lods
push
arpl
leave
xor
inc
inc
lret
sti
xchg
insl
outsb
push
call
scas
aam
xor
dec
xlat
mov
sbb
pop
sub
mov
sahf
sbb
dec
jmp
xchg
sar
xchg
cmpsl
dec
repnz
mov
xchg
jae
cmp
outsl
sbb
orl
jg
xchg
sub
bound
push
icebp
popa
nop
outsb
add
lcall
dec
push
mov
outsb
sub
andl
xchg
pop
sti
push
iret
adc
or
ret
loope
sub
xor
loopne
dec
ljmp
jno
xchg
jns
add
rol
jb
ja
jae
ja
add
sbb
mov
pop
out
and
div
mov
push
popa
push
int3
scas
jo
mov
add
mov
sub
push
cmp
jg
push
mov
stos
mov
pop
shr
cmp
imul
cmp
mov
lcall
and
cmpsl
pusha
cli
or
mov
dec
push
jbe
arpl
popf
xlat
jl
mov
bound
shll
ret
jnp
cmc
inc
mov
test
sub
jbe
cmpsb
mov
enter
or
stos
push
movsl
icebp
fnstenv
and
aad
outsb
sub
dec
lcall
lea
lods
sbb
or
or
in
or
and
adc
dec
test
mov
jns
daa
jmp
push
lret
outsl
push
xor
dec
outsl
inc
icebp
aam
push
jmp
push
ret
aaa
cmc
stc
mov
or
imul
add
aas
or
fiadds
movsl
in
cmp
mov
dec
push
mov
xor
mov
lds
mov
jmp
ret
lret
divb
cld
out
cmpsl
xor
xchg
sbb
out
leave
mov
push
mov
jo
push
dec
and
jno
xorl
sbbl
sub
push
popa
add
call
test
mov
lods
adc
inc
inc
call
xchg
push
jb
jecxz
ret
ret
add
mov
lock
and
jno
mov
dec
lods
mov
sbb
lock
sub
mov
jo
loop
jecxz
lods
fdivrl
scas
mov
nop
cli
push
inc
popa
stos
inc
xchg
fs
push
inc
gs
lods
adc
mov
stos
pop
loopne
fstps
je
inc
xchg
inc
or
jne
jae
sbb
adc
lret
inc
push
aam
or
movsl
dec
sbbb
pop
idiv
inc
mov
xchg
sbb
or
out
lret
mov
xor
mov
mov
lahf
subb
imul
xlat
cwtl
stos
insb
lods
dec
cmp
jbe
xor
sbb
fmul
dec
test
lahf
daa
clc
and
jb
insb
sub
mov
fiadds
test
sub
lea
pop
fidivl
in
mov
dec
je
repz
jnp
mov
stc
xchg
mov
popa
push
inc
lods
mov
ljmp
push
ds
mov
jge
insb
scas
cmp
pop
push
fwait
xchg
dec
aam
jns
bound
jecxz
cmp
xchg
aam
cmp
or
aaa
dec
gs
pop
in
orl
adc
je
xlat
or
adc
shll
sarl
fwait
xor
pop
data16
bound
mov
xchg
sub
mov
mov
cmp
push
addl
lods
xorb
test
inc
xor
jno
xor
jge
ds
cmc
pop
repz
enter
xchg
mov
pop
outsb
mov
fbld
fcmove
enter
in
add
lahf
push
xchg
nop
cmc
cmp
jno
in
mov
mov
rclb
adc
sahf
mov
and
bound
leave
add
fnstenv
fdivl
movsb
mov
adc
pop
jae
xor
pusha
mov
int3
sub
jbe
mov
clc
mov
jnp
jl
mov
and
out
out
cmp
cmp
mov
lret
inc
mov
adc
sub
pop
push
daa
pop
push
cmp
xor
lret
sbb
push
enter
and
push
pusha
jl
adc
xchg
mov
cmp
outsl
fisttps
push
inc
mov
aad
sbb
loope
xchg
in
cmp
or
xchg
sbb
pop
ljmp
testb
mov
xchg
sub
fcmovne
mov
int3
jge
push
int3
bound
xchg
pop
shl
mov
sbbl
fdiv
repz
dec
ds
in
jg
imul
mov
fdivrl
jbe
mov
fstl
fcmove
jecxz
jnp
mov
sub
outsb
push
mov
inc
pop
cmc
push
cmp
jne
cmpsb
out
dec
into
fucomip
inc
pop
push
sub
cmp
loopne
lcall
ljmp
mov
insl
sbb
xchg
popf
lods
stos
add
out
mov
push
xchg
inc
sbb
mov
sub
daa
rorb
pop
inc
insl
sub
add
or
les
cmp
outsl
mull
dec
icebp
xchg
mov
fwait
cmp
cmp
push
inc
pop
or
lahf
jmp
sarb
pusha
xor
push
ljmp
into
jae
and
sbb
cmp
mov
sbb
lea
pushl
pop
test
rcrb
add
fistpll
daa
mov
scas
data16
int3
jecxz
lods
jmp
mov
andl
mov
sbb
sbb
test
and
mov
xchg
dec
lret
out
mov
pop
out
scas
subb
mov
dec
dec
pop
test
fcmovbe
mov
push
mov
jb
xchg
push
xor
mov
daa
inc
arpl
sub
pop
movsb
cmp
pop
xor
or
sub
dec
push
ljmp
jno
int
jp
pushf
out
xchg
sub
mov
sub
hlt
pop
les
ja
sbb
or
stos
pop
mov
add
jle
mov
cmp
push
adc
stc
addr16
pop
push
push
stc
enter
inc
stc
insl
jp
mov
push
rcrl
and
lods
insb
jno
scas
sub
loope
ljmp
xchg
cmp
lahf
stc
in
dec
mov
adc
jb
mov
in
or
ja
dec
nop
and
xchg
and
cmp
test
sub
test
inc
cmp
mulps
iret
xor
movsl
popa
lock
adc
insl
jp
mov
and
pop
rorl
or
std
mov
pop
inc
fs
aam
xor
outsl
mov
push
stos
mov
xchg
mov
push
int3
mov
icebp
inc
repz
lds
jle
fdivl
aaa
mov
aas
loop
mov
pusha
jno
int
cmpsl
dec
int
lods
inc
lock
lods
mov
lret
fstp
ret
sub
push
stos
sahf
std
add
sar
shrb
arpl
cltd
xchg
ja
jle
pushf
mov
sbb
push
sub
xor
clc
gs
out
aas
mov
jg
mov
mov
pop
cmpsb
push
in
loopne
jns
les
clc
into
pop
stos
cwtl
adc
int3
loope
sbb
jno
or
mov
mov
mov
lret
jno
data16
add
jne
int3
test
icebp
add
xor
jg
sahf
jne
mov
test
push
into
pop
or
shlb
cmp
in
out
cmp
iret
push
fwait
or
and
jns
jb
adc
icebp
bound
lods
iret
dec
pop
push
insl
add
push
fisubrl
adc
sub
cmc
pop
mov
shrl
push
mov
insb
add
mov
repnz
jnp
adcb
push
pop
and
test
outsb
cmp
dec
fdivrp
fsubrp
cmc
add
xor
outsb
inc
loopne
popf
sti
xchg
lods
lock
xor
mov
js
les
add
es
ret
push
fdivs
adc
and
les
ja
cmp
jecxz
push
je
shlb
jl
test
add
or
data16
shrl
pushfw
hlt
jp
sub
cwtl
jl
addb
pushf
pop
sahf
int
mov
popf
sbb
add
loope
leave
inc
cmpsl
jno
scas
les
iret
adc
cltd
cs
lret
loope
lock
cmp
std
mov
adc
mov
jmp
xchg
xchg
out
mov
xchg
adc
push
fistl
jle
decl
cmpsb
es
inc
in
inc
sub
stc
aas
xchg
test
popa
sbb
jge
or
adcl
fldl
das
popa
add
inc
mov
rep
mov
inc
repnz
sub
test
subb
inc
enter
push
fistpl
mov
into
out
dec
loopne
or
and
ret
decl
lcall
and
cwtl
daa
push
shll
es
daa
mov
inc
sbb
jns
xchg
stos
gs
lret
cld
xchg
gs
push
fists
dec
loope
jno
or
push
in
xchg
std
adcb
mov
jne
jo
sbb
lahf
addl
jmp
and
imul
xchg
std
pushf
xor
mov
xchg
test
add
pop
fs
xchg
or
xchg
cmp
pop
jns
sbb
std
jmp
dec
std
vdivpd
rorl
adc
push
push
xor
cmp
repnz
mov
fnstenv
scas
aaa
ja
shll
aad
loop
mov
sub
push
push
cmc
sbb
iret
popf
sub
aad
sbb
sbb
dec
dec
shlb
repnz
dec
movsb
ffreep
cmp
xor
xlat
outsb
scas
dec
aad
xor
xchg
andl
xchg
cli
mov
cltd
dec
movsb
inc
movsl
pusha
xchg
in
outsb
and
imul
lret
cmc
adc
jl
xlat
xchg
mov
sbb
xchg
sub
mov
push
dec
clc
nop
mov
bound
repnz
sub
pushf
mov
mov
inc
xchg
mov
or
inc
aaa
lods
jecxz
inc
push
dec
cld
xchg
jmp
mov
mov
icebp
pop
pop
and
mov
aam
into
cltd
insl
jns
out
jo
xchg
or
fwait
and
in
cmp
jle
cltd
push
mov
mov
cmpsl
aas
mov
ret
lods
aas
mov
cmp
adc
out
cmp
cmp
test
ret
xchg
or
fidivrl
je
lret
mov
and
insb
scas
jmp
jge
jo
mov
ret
daa
mov
cmp
mov
cld
test
pusha
cmp
cmp
insb
ljmp
bnd
stos
adc
mov
cmpb
mov
adc
jnp
clc
cltd
mov
jg
lret
fidivrl
scas
addr16
cltd
shlb
shr
out
dec
jmp
out
jae
int3
insl
shlb
sub
mov
es
lods
cmc
or
push
mov
ja
loopne
cmpsl
mov
add
mov
insl
xchg
fs
mov
les
jae
add
jmp
cwtl
sbb
mov
and
cmp
add
xchg
ljmp
je
sahf
cmp
sub
daa
or
pop
cmp
jb
xchg
pop
hlt
data16
dec
pop
dec
scas
add
js
mov
mov
cli
std
pop
inc
push
xchg
sub
fcmovu
into
out
add
sti
lods
inc
sub
mov
xchg
jae
test
scas
lods
mov
loopne
adc
xor
inc
sbb
lret
pop
cmc
and
ficoml
test
mov
xchg
adc
outsl
cs
int
mov
aam
xchg
jno
dec
mov
xchg
jg
movsl
imul
repz
jo
mov
scas
out
imul
xchg
cmpsb
je
lahf
ss
xchg
sub
int3
lea
push
jnp
scas
push
inc
adc
cld
push
lods
cmp
adcl
and
jbe
sub
ja
stos
stos
test
mov
xor
sbb
imul
jnp
dec
cmp
mov
fnstsw
xchg
iret
dec
out
stc
pop
push
out
sub
and
xchg
adc
cmp
dec
push
lea
xchg
xor
stos
inc
insb
outsb
sahf
xor
or
divl
loop
loop
jmp
lock
lds
sarl
push
jmp
and
out
insl
je
insb
jmp
unpcklps
pop
adc
mov
mov
dec
pop
cmp
fcoml
dec
push
fs
notb
xchg
xorb
inc
push
adc
lret
popa
sub
inc
dec
jns
stc
iret
out
loope
pop
mov
or
pop
adc
enter
add
jecxz
loope
xchg
ja
mov
les
adc
loopne
gs
stos
icebp
and
std
js
jnp
dec
rol
jp
mov
adc
inc
cmpsl
rcll
aad
mov
fstp
add
fwait
mov
popa
adc
jp
push
lds
push
int
sbb
leave
push
out
jg
cmovle
mov
popf
call
enter
xchg
test
lret
jns
jp
cmp
push
jl
adc
jo
lret
sub
sahf
sbb
call
mov
loop
xor
inc
jecxz
out
push
mov
pop
rcrl
shlb
mov
ficoms
push
push
mov
mov
popa
aam
push
insl
es
or
xor
out
xchg
cmp
push
enter
mov
cli
mov
mov
xchg
pusha
cwtl
test
lret
sub
pop
fcmovnb
and
sub
pop
xor
ljmp
and
arpl
lcall
inc
pop
xchg
add
push
dec
stos
ss
test
pop
push
jbe
ret
out
inc
jp
lds
sub
mov
shl
fwait
aas
or
es
es
out
int
or
xchg
loope
fs
cli
inc
fldt
ja
iret
push
test
outsb
mov
push
imul
and
cmpb
or
add
and
imul
lcall
dec
jbe
cmc
ljmp
cltd
in
outsl
sbb
add
lods
or
dec
mov
xchg
insb
stos
inc
lahf
dec
and
ror
mov
addr16
xchg
int3
pop
dec
aas
jle
jle
push
xchg
xlat
loopne
xchg
push
shl
jbe
fadds
scas
xchg
inc
xchg
inc
sarl
sbb
mov
xchg
je
pop
out
or
pushf
cmp
hlt
cmpsl
add
push
ja
test
push
lods
sub
hlt
xchg
dec
lcall
aad
jmp
dec
dec
cmpsl
insl
sbb
inc
leave
mov
push
ljmp
imul
icebp
ficoms
sbb
sub
xor
bound
repz
pop
mulb
inc
jge
aam
mov
mov
std
add
jmp
cmp
mov
dec
sub
repz
cld
mov
inc
lea
addr16
add
pop
jns
mov
enter
enter
jbe
or
out
xchg
mov
cltd
jo
cmp
jle
jnp
setnp
movsb
xor
filds
aaa
outsl
push
pop
out
mov
ret
imull
movsl
cmp
cld
and
mov
sbb
mov
pop
aam
mov
xor
stos
and
loope
into
dec
lahf
jbe
push
ret
adc
mov
jge
or
stos
mov
pop
cmp
addr16
jmp
imul
pop
es
or
imul
lock
lods
je
sbb
push
fwait
adc
daa
adc
inc
fisubl
das
shrb
popa
xor
iret
push
sbb
popf
push
pop
adc
pop
movsl
mov
push
xor
fs
inc
push
xor
mov
loop
ss
faddl
xchg
add
leave
outsl
adc
mov
iret
hlt
mov
jp
test
mov
jge
push
stos
fsubrl
dec
test
fs
cmpsb
xor
inc
test
mov
or
or
in
xchg
imul
or
xor
repnz
jecxz
mov
addr16
insb
push
sbb
fldcw
inc
fst
mov
mov
aad
dec
cmp
push
pusha
hlt
sub
out
inc
ficompl
mov
aaa
jnp
mov
insl
cmc
pop
and
xlat
fstps
inc
or
jnp
cmpsb
mov
rclb
out
cmpsb
movl
mov
inc
fs
dec
pop
sbb
mov
lock
stos
pop
cmp
out
mov
jle
dec
and
mov
fidivl
stos
pop
sub
dec
add
adc
adc
icebp
mov
cld
outsb
xor
jb
loopne
mov
ffree
rolb
out
and
mov
push
sub
repnz
adc
and
test
andb
or
jo
cmp
and
mov
pop
mov
push
scas
or
fisubs
dec
lret
lret
inc
int3
cli
mov
jb
test
les
and
sub
pop
icebp
movsl
hlt
mov
pop
add
sub
fdivl
mov
int
cli
or
sahf
insl
inc
xlat
mov
mov
cmp
inc
inc
in
add
out
fistpll
into
fidivrl
fsubrl
in
insb
cmp
jae
imulb
cs
fcmovu
sub
lds
xlat
mov
sbb
add
jae
shrl
adc
pop
js
jmp
daa
int
push
outsl
mov
mov
out
adc
cmp
push
add
test
test
jns
fdivs
dec
sarl
mov
and
stc
and
loop
ret
push
out
adc
dec
loopne
xor
idivl
mov
mov
push
cmpsl
mov
pop
loopne
add
lds
icebp
mov
lret
xor
orps
iret
fstl
and
jns
push
pop
daa
mov
mov
inc
lret
ds
cmp
inc
mov
sahf
adc
mov
js
xchg
adc
add
or
mov
mov
or
xchg
daa
shlb
test
in
push
cmc
rcrb
xor
test
sahf
and
call
iret
pop
leave
sbb
add
hlt
sub
fildll
call
push
push
push
sub
jbe
dec
shll
outsb
rorb
fldt
pop
mov
xchg
popf
adc
inc
int
jns
arpl
ss
stc
rcrb
mov
and
sub
aas
pop
jne
pusha
lock
inc
addps
jecxz,pn
popf
add
fnstsw
fldt
cmpsb
mov
insb
adc
push
movsb
into
testb
mov
sbb
mov
sub
fistps
filds
add
insb
fsts
xchg
adc
mov
push
sbb
sahf
mov
or
insb
rcrl
lea
mov
cmpsb
aam
repz
xchg
jmp
push
lea
lret
xchg
ja
cld
loopne
xchg
scas
cmp
push
jno
push
xchg
cmp
jno
cmp
jg
cmpsb
jl
sbb
icebp
iret
lods
js
or
xchg
jbe
pop
scas
push
outsb
stos
test
dec
or
push
mov
or
adc
inc
xor
enter
inc
dec
sub
xorb
xchg
mov
xchg
adc
mov
dec
incb
div
dec
sub
daa
lret
int
xchg
push
jb
mov
cmpsl
cmc
jmp
sub
dec
test
push
adc
fwait
jae
cmp
repnz
jmp
adc
xchg
push
jmp
imul
xchg
outsb
int3
aaa
mov
popa
push
pop
int
into
in
out
in
int
mov
data16
ret
add
dec
mov
add
fnstcw
enter
mov
or
push
testl
data16
outsb
lret
push
pop
sub
icebp
enter
mov
mov
jp
adc
insl
add
and
repz
pushf
lods
push
lret
lret
fidivs
xor
inc
xlat
subl
stos
sbb
gs
sbb
in
pop
fdivl
cwtl
outsb
add
fbstp
cli
xchg
pop
loopne
dec
out
imul
sbb
fsub
in
test
fs
jmp
cltd
sub
or
popf
mov
inc
cmp
jne
mov
and
call
xchg
push
loopne
lret
aam
cmp
mov
hlt
mov
pop
out
test
dec
pop
dec
mov
lret
jne
insl
jg
and
jecxz
sub
fbstp
stc
sub
fwait
xchg
shlb
mov
jmp
and
fldcw
shl
xor
cmpsl
fdivp
test
ljmp
inc
out
mov
aad
push
xchg
cltd
std
sahf
add
loope
fcompl
mov
repnz
dec
sbb
popf
test
jb
lret
daa
lret
lock
jecxz
sbb
ljmp
cmp
and
repnz
roll
sbb
xor
scas
test
ret
xchg
xorl
aas
sbb
test
subl
pushl
repnz
lret
sti
inc
or
jp
push
mov
xor
pop
xor
outsl
cltd
test
shrb
sbb
mov
fdiv
movsb
mov
pop
sti
into
movsl
or
sub
imul
xchg
mov
lds
jge
sbb
outsb
fs
out
clc
push
rorb
xchg
lods
scas
les
movl
dec
roll
cltd
in
cs
in
dec
add
int
enter
out
outsl
push
and
cmpsl
push
add
jmp
pop
mov
jl
xchg
int
movsb
decl
jns
ficompl
lds
loopne
testb
inc
lret
jae
xor
mov
movsb
sub
xor
sub
fdiv
add
jnp
rolb
lds
xchg
mov
out
insl
mov
call
int
cmp
mov
dec
out
dec
pop
adc
mov
gs
jmp
sahf
jmp
loope
lds
pushf
cwtl
ret
sti
hlt
add
push
sub
dec
fidivs
cs
pop
sub
stc
rolb
inc
movsl
mov
mov
xchg
sbb
cmpsb
jge
call
and
sbb
or
leave
in
mov
mov
pop
push
xchg
daa
cmp
mov
inc
in
lret
push
dec
pop
sahf
jg
rcr
adc
add
jge
fxch
adc
arpl
pusha
loopne
add
int3
mov
js
dec
or
xchg
sub
sbb
jnp
sub
fdivp
adc
cmc
xor
dec
loop
out
into
fisubl
outsl
insl
les
ja
dec
sbb
outsb
cmpsb
es
mov
stos
and
jne
bound
lods
arpl
xor
push
jecxz
sbb
ja
dec
out
xchg
add
sbb
cmp
mov
xchg
add
iret
push
xorb
rcrb
lret
pushf
xor
mov
cmp
bound
jle
mov
cmpsb
ss
out
cmpsl
repnz
xchg
push
xchg
ss
ja
fnstsw
fisubl
cltd
fstpt
add
inc
add
ror
or
or
iret
pop
flds
subl
sbb
jecxz
div
mov
jg
jmp
or
dec
xor
in
xor
inc
adc
or
and
xacquire
out
adc
outsl
addr16
cltd
inc
jno
lock
subl
mov
add
enter
xor
xchg
push
dec
inc
aas
arpl
jo
cmp
pop
outsb
clc
or
sbbb
ja
cmpsb
jne
ja
pop
test
add
cltd
clc
dec
ljmp
xor
ja
es
into
and
cmp
or
into
cmp
or
iret
nop
sub
dec
and
lcall
jae
push
test
sti
mov
push
mov
movsl
cld
lds
add
sub
cmp
push
lret
push
repnz
in
mov
dec
mov
aad
fcoml
lret
mov
jbe
adc
xchg
movsl
mov
jmp
jno
lea
clc
mov
jae
mov
mov
in
push
test
outsb
fidivrl
sbb
fildll
jmp
mov
mov
mov
push
iret
mov
sub
xchg
scas
cmc
jne
pop
xchg
jle
fwait
sub
dec
adc
mov
or
xchg
leavew
sbb
lret
loopne
cmp
adc
aad
mov
mov
daa
inc
adc
or
add
sub
imul
gs
sub
cmp
mov
mov
in
decb
cmp
sub
bound
lds
je
mov
push
and
inc
lds
lock
lods
jmp
or
mov
dec
cmc
ret
cmpsb
cmpl
das
push
test
dec
nop
std
shlb
or
xchg
mov
add
mov
lret
jae
push
js
sbb
into
dec
fs
in
cmp
add
fistpll
lods
mov
inc
data16
lret
or
pop
nop
daa
nop
rcrb
in
add
outsl
push
das
aad
ss
movsl
cmp
sub
out
push
adc
fsubr
sub
and
popf
in
imul
in
nop
mov
in
cmp
bound
loop
ret
pop
int
xchg
push
cmp
test
jnp
pop
je
addr16
jnp
and
cmp
push
add
jb
sub
mov
add
subb
lods
inc
outsb
pop
add
mov
jmp
mov
pop
test
jmp
cmp
iret
stc
js
lcall
sbb
cli
cltd
cltd
xor
push
add
sbb
push
std
aad
mov
and
xchg
sbb
add
cld
inc
mov
nop
lahf
mov
sbb
push
and
in
jns
scas
sub
or
daa
movsl
out
std
xor
xor
or
pushf
shlb
repnz
in
sub
mov
stos
cld
jl
xchg
sbb
test
fwait
mov
cmc
repnz
add
in
test
outsl
ljmp
inc
or
jmp
cld
lcall
pop
jno
mov
lcall
sahf
lods
mov
and
jmp
and
mov
addr16
ja
jb
cmpb
and
cmpsl
push
mov
and
lret
fistpll
movsbl
loop
les
jbe
fcoms
push
loope
roll
repnz
in
pop
add
fs
mov
cmpsl
add
sbb
lcall
and
test
mov
loope
loope
movsl
cmp
adc
or
sarl
mov
inc
sub
scas
and
outsb
clc
in
lahf
mov
outsl
nop
popf
stc
mov
fwait
jge
cmp
push
adc
fnstsw
arpl
pop
xor
sti
cmpsl
ret
rcrl
lods
clc
xchg
popa
mov
fidivrs
iret
les
fstl
stos
mov
jp
out
mov
jbe
imul
pop
data16
inc
mov
cld
fmull
scas
fidivrs
mov
shll
enter
push
and
cwtl
test
pushf
dec
lods
dec
and
in
jmp
adc
pop
jp
dec
jae
jecxz
jae
pop
sbbb
adc
jge
pop
cli
fcomps
sbb
jns
pop
mov
mov
mov
sar
andl
test
ja
mov
inc
in
sub
sahf
pop
or
and
enter
mov
ret
dec
ficomps
dec
jecxz
sub
and
mov
scas
pop
xorl
std
and
aam
scas
ret
push
andb
xchg
sbb
and
sub
mov
dec
insb
out
mov
add
sub
arpl
mov
sbbb
lret
sti
mov
mov
fcos
popa
sahf
jp
xor
lret
sbb
adcb
daa
jge
fnstsw
repnz
sub
pop
call
jne
pop
icebp
fsts
push
call
das
jne
push
cmpsl
push
pop
test
xor
cs
fdivl
aam
push
imul
dec
xor
pop
das
cmp
mov
sti
xchg
push
aam
jge
sbbb
mov
dec
pop
jmp
sbb
out
fldl
sub
in
fsubrp
sub
leave
push
inc
inc
xchg
add
es
sahf
pop
jnp
fldt
mov
nop
mov
mov
test
ret
je
push
inc
clc
cwtl
sub
xlat
mov
pmulhw
push
cmp
pop
movsb
out
and
shrb
mov
push
fucomi
addl
sar
arpl
aaa
sbb
push
mov
fsubp
jnp
aas
lock
call
test
lahf
mov
je
out
in
xlat
inc
mov
iret
mov
inc
lock
cmp
fcoms
lcall
add
mov
add
dec
adc
xor
mov
fistps
ljmp
mov
inc
xchg
loopne
cmpsl
pop
fcmovu
sub
das
pop
jge
pop
decl
lea
repz
aas
xor
dec
jle
push
add
mov
ljmp
adc
dec
test
push
or
push
adc
mov
jnp
xor
outsl
xchg
cmc
mov
mov
adc
int
pop
cld
push
or
mov
pushf
ficoml
ret
cmp
or
mov
pop
push
adc
ss
sbb
jb
in
pop
jne
adc
data16
cwtl
aaa
xor
push
or
mov
add
test
mov
push
or
and
loopne
mov
cmp
lock
or
pop
out
add
pop
jecxz
aas
out
pop
sahf
and
out
in
and
leave
jns
jmp
xchg
inc
xchg
repnz
aas
add
repnz
jns
mov
pop
pop
adc
add
cmpsl
mov
lods
push
je
or
add
lock
aam
test
ret
js
pop
insl
fwait
sub
xchg
mov
fs
mov
dec
inc
lea
hlt
and
pop
push
adc
push
fstl
add
dec
xor
pushw
nop
repnz
mov
movsl
out
out
pop
cmp
mov
mov
lret
xchg
xchg
and
xchg
adc
jo
loopne
stos
and
push
push
mov
pop
sahf
jo
sub
xlat
call
mov
movsl
xchg
popa
jno
mov
xor
lods
adc
push
pushf
les
das
fbld
imul
addr16
int
jl
lods
sarl
rcrl
mulb
mov
cmp
lods
or
inc
adc
shl
jmp
movsb
cmp
in
loopne
cltd
test
cmp
and
add
aaa
mov
pop
push
fwait
add
lret
xchg
push
shlb
dec
addl
test
ds
lock
fisttps
mov
loope
cmp
add
xchg
mov
arpl
mov
call
mov
movsb
dec
adc
cmp
push
divb
sbb
loope
xchg
xchg
mov
loopne
push
sbbb
jb
push
lods
lahf
or
adc
test
gs
mov
repz
and
int
fisubs
ret
gs
pop
addb
das
fucomp
mov
inc
outsl
pop
sub
ret
jae
movsl
sub
insb
ds
sbb
adc
cld
icebp
sub
fwait
outsl
adc
fdivl
ret
sbb
stos
aaa
pop
lcall
adc
cmp
mov
mov
inc
adc
add
jnp
dec
fdivrp
divl
cmpsb
push
shl
xchg
cmpsb
cmp
out
test
sub
out
std
adc
fbstp
leave
cld
xlat
jb
std
adc
inc
pop
outsb
or
mov
add
fcoms
pop
jb
adc
ss
stc
in
sub
dec
mov
xor
outsb
sub
pop
inc
inc
fs
sbbb
jecxz
rcrb
test
test
aas
xchg
jp
cmp
cmp
pop
xor
and
push
sbb
xchg
dec
pop
aaa
push
pop
and
popf
scas
cmp
xor
outsl
insl
in
test
sti
lret
mov
sub
adc
dec
loop
jbe
bound
in
jg
pop
dec
mov
test
les
je
pop
lahf
stos
xor
mov
mov
pop
popa
loope
insl
jge
add
ja
cmp
or
scas
mov
sub
sbb
nop
enter
cmp
ret
jbe
xor
dec
hlt
mov
dec
add
inc
cmpsl
popf
lea
mov
insl
jae
shrl
fisttps
ljmp
pushf
rorl
cmpsl
push
fcoms
dec
hlt
mov
pop
rol
sbbl
cmp
mov
out
push
adc
ret
in
cmc
loop
xor
icebp
push
mov
dec
call
jecxz
adcb
sahf
jae,pn
clc
sti
fstps
pop
test
out
std
loop
and
adc
inc
scas
pop
inc
in
cmp
subb
fdivl
test
cmp
jb
mov
les
iret
nop
icebp
stc
iret
mov
dec
push
jno
xchg
push
daa
dec
mov
cmp
dec
lds
cmp
fwait
call
adcb
inc
add
push
popa
cltd
xor
mov
mov
mov
mov
jae
mull
pop
fdivs
push
push
es
sub
add
inc
pop
ss
ja
jne
push
add
test
jno
mov
clc
or
mov
push
ds
pop
repz
shlb
scas
loope
xchg
rcrl
in
repnz
push
mov
in
loopne
fidivrl
movsb
les
mov
daa
into
sbbb
rorb
sub
sbb
bound
loop
mul
notb
ja
pop
push
xor
out
pusha
and
out
cld
bound
mov
cs
dec
in
inc
xchg
aam
mov
jo
shlb
cmp
lock
add
enter
push
stos
sbb
test
js
mov
sbb
adcb
xor
clc
mov
mov
stos
repz
mov
push
fs
inc
pop
fsubrs
shlb
cmc
push
in
jg
out
jg
mov
jp
and
lahf
and
daa
push
push
ljmp
cmp
pop
out
xchg
sbb
push
pop
cmp
mov
fiadds
xchg
rorb
ror
push
js
mov
cmpsb
test
call
xor
mov
aaa
fsts
out
xchg
loopne
pusha
jo
ja
inc
test
ficoms
jl
push
cmc
stos
popf
adc
popf
add
pop
mov
pop
in
and
int3
add
jbe
lods
xor
jg
xchg
sbb
adc
inc
push
mov
lahf
xchg
std
aam
cmpsl
into
repnz
add
movsb
repnz
popf
mov
mov
push
daa
into
and
outsb
fcompl
inc
push
icebp
mov
fwait
push
dec
pop
popf
mov
iret
jnp
dec
fbld
ja
pop
es
mov
popf
cwtl
mov
sbb
cmpl
stos
sub
aad
xchg
mov
pushf
arpl
pop
lods
dec
push
repz
cld
lods
test
movsl
pop
nop
test
xchg
std
lods
add
sub
ja
sub
inc
call
das
push
push
ret
rol
rep
mov
jge
jb
push
movsb
fcomi
cmp
inc
mov
imul
cmp
sbb
loopne
sub
jbe
push
imul
xor
add
and
or
data16
push
setl
out
popf
test
int
mov
test
fildl
and
mov
jne
add
das
mov
lret
test
cmp
movsl
mov
pop
dec
imul
jl
jmp
or
mov
xchg
in
adc
movsl
shl
sub
inc
pop
sub
orl
sbbb
pop
test
mov
addr16
lock
jge
lcall
test
and
fidivs
nop
or
push
stos
cmpsb
push
adc
adc
inc
fdivr
and
ficomps
insb
mov
mov
sub
ljmp
mov
sbb
mov
cmpsl
out
cmc
stos
and
push
out
mov
adc
xchg
inc
inc
push
cs
xor
cmp
pop
ljmp
jecxz
jle
in
and
xchg
mov
aas
cli
fldt
xchg
shrl
jne
or
add
in
sbb
push
dec
push
cwtl
jmp
dec
fcmovne
mov
hlt
mov
jae
jecxz
adc
adc
ja
ljmp
jb
add
gs
xor
push
jns
mov
movb
add
cmpl
loopne
insl
ror
xor
ljmp
rcll
out
adcl
or
lock
mov
ja
jne
inc
scas
mov
fldcw
mov
mov
sub
and
rcr
jg
in
adc
xchg
pop
ret
pop
dec
pop
outsb
in
and
data16
cmp
stos
pusha
out
in
add
cld
mov
and
dec
ss
mov
and
in
test
fistpll
daa
stc
cs
or
aaa
into
inc
bndldx
daa
mov
xchg
mov
movsb
xchg
add
dec
mov
push
mov
xor
fbstp
adc
or
adc
popf
ss
pop
xlat
xchg
push
and
adc
adc
imul
lcall
out
jmp
mov
inc
stos
cmpsl
fbstp
pusha
outsl
push
pop
jne
and
loope
test
inc
insb
push
jbe
mov
repz
inc
pop
mov
cmp
jg
sti
fisubs
mov
test
adc
decb
mov
mov
xchg
in
jnp
arpl
add
in
mov
test
dec
sbb
js
addr16
pop
push
call
xor
push
pop
test
fldt
arpl
ljmp
sahf
mov
arpl
lfs
popf
jmp
out
call
leave
clc
test
ret
or
les
or
rolb
arpl
sahf
xor
mov
mov
cmp
filds
xchg
testl
int
in
xchg
out
mov
out
rclb
orb
loop
mov
test
xchg
jmp
jb
mov
xchg
mov
cli
sub
loop
push
jb
add
dec
mov
push
into
fdivrl
aaa
jns
sbb
insl
xchg
jge
leave
pushf
sub
cli
xchg
jp
ss
dec
hlt
jns
out
negb
subl
cmp
jge
jl
ds
add
mov
out
mov
mov
cmpsl
lock
rcll
fbstp
insl
loop
stos
pop
inc
icebp
or
xlat
pop
mov
push
imul
sub
or
push
lock
sbb
ss
jae
mov
std
mov
cmp
popf
adc
and
daa
sbb
movsb
mov
dec
inc
jnp
dec
mov
lret
jb
lea
mov
pop
ss
push
int
into
imul
insl
sbb
aas
andb
mov
test
cmp
adc
push
shll
aam
icebp
add
ss
dec
pop
ljmp
sahf
pop
repz
aas
and
cmp
inc
js
dec
pop
jno
lea
ljmp
fwait
mov
movsl
jns
mov
mov
mov
imul
in
inc
xor
popf
hlt
fidivs
es
pop
jl
imul
pop
inc
pop
in
test
outsb
rcl
jbe
sti
jecxz
xorl
xchg
hlt
jecxz
inc
out
xchg
dec
fyl2xp1
in
in
mov
add
out
ret
ret
mov
cmp
and
movsb
add
cmpsl
inc
lods
pop
jp
int
fcompl
insb
popa
clc
popf
cli
out
outsb
mov
sub
int3
adc
jecxz
cmp
push
cmpsl
and
cwtl
jle
std
lea
scas
adc
pop
xchg
or
ljmp
cmp
mov
push
push
popf
mov
andl
fdivrs
mov
xchg
and
sbb
mov
in
lcall
xchg
sub
mov
dec
sbb
bound
sub
push
iret
pop
lock
pop
loopne
shl
ret
repnz
sbbl
pop
adc
pop
dec
pop
add
sub
inc
test
out
mov
sub
mov
push
mov
loopne
lret
xchg
sbbb
cmp
sbb
push
call
lret
adc
cmp
test
push
cmp
or
cmpsb
pop
mov
inc
pop
aad
fucom
push
dec
pop
scas
jge
cmp
enter
fsubp
mov
xor
data16
adcb
push
jno
jnp
mov
xchg
sub
push
xor
stos
mov
js
inc
fstl
cli
jecxz
test
clc
fcompl
mov
sbb
out
outsl
cwtl
push
jmp
jge
cmc
adc
push
and
lahf
inc
mov
sarl
pop
rcrl
out
loop
rcl
jo
dec
dec
pop
cmpl
aad
jp
scas
decl
rorb
inc
dec
js
xchg
add
pop
jg
push
leave
jp
movsl
mov
das
or
pop
test
ret
dec
push
xor
xor
mov
movsb
xchg
xchg
pop
xchg
in
lds
les
push
sbb
dec
sbb
aad
cmp
jle
jb
push
xor
inc
pushf
mov
sub
ret
add
test
in
cld
xor
mov
daa
mov
pop
mov
ret
adc
mov
xor
mov
aaa
mov
mov
pop
add
cs
mov
mov
or
xorb
xchg
sbb
loop
aam
or
and
out
dec
leave
bound
lcall
and
or
mov
pop
sbbb
and
outsb
imul
jl
sub
iret
test
adcb
mov
sbb
int3
sbb
int3
stc
or
stc
pop
shll
or
loopne
mov
loopne
stos
daa
jle
les
xor
or
mov
inc
jp
jecxz
cltd
adc
jmp
ljmp
lods
movsl
xchg
mov
cmc
jmp
jmp
mov
mov
popf
fmul
adc
dec
mov
int3
or
xchg
stos
inc
test
mov
cmp
mov
or
shll
cmp
loop
arpl
adc
and
lods
add
mov
cmp
and
push
and
cmpsl
sub
movshdup
jecxz
out
shrl
adc
inc
xchg
pop
push
jns
fs
sub
test
xor
mov
cmp
insb
roll
sub
out
addr16
cltd
fwait
sbb
nop
cmp
dec
nop
mov
je
dec
cld
inc
and
stc
lods
sarl
dec
fs
sahf
cltd
and
push
mov
mov
and
jg
aad
xchg
sbb
divl
inc
test
repz
lea
sbb
mov
std
pop
push
je
cmc
jo
push
push
int3
xchg
and
xchg
addr16
or
je
imul
or
pop
cmp
adc
mov
sub
cli
xchg
dec
cmp
sbb
jle
js
out
test
jl
dec
and
and
jl
add
inc
icebp
jg
stos
in
inc
and
dec
out
mov
pop
pushf
cld
inc
mov
dec
sahf
sub
jo
xor
mov
mov
push
mov
andb
cmp
mov
movsl
add
mov
xchg
mov
nop
out
adc
pop
mov
mov
in
mov
rol
mov
dec
loopne
rorl
sbb
add
jnp
lea
mov
pop
outsb
or
pop
mov
addl
sbbl
pop
cmpl
xchg
outsl
test
ljmp
adc
pop
dec
and
push
outsb
jae
xchg
mov
stos
push
cmp
jne
in
add
jmp
int
cmpsb
push
sbb
loope
cmp
dec
sbb
loop,pn
add
pop
add
xor
gs
inc
dec
call
sub
cmp
cs
lock
stc
pusha
xlat
pop
push
mov
fbstp
bound
mov
mov
test
dec
cmpsl
dec
sub
adc
dec
iret
jle
les
negb
std
xchg
inc
or
mov
js
add
call
mov
jne
in
roll
out
out
mov
pusha
test
jge
pop
mov
mov
repnz
xchg
aad
je
xor
xor
dec
lock
lock
xor
inc
mov
lods
jb
and
aam
aas
dec
mov
rcr
jo
outsb
jb
lods
fs
pop
loopne
shrl
icebp
std
loopne
das
adc
jge
lret
push
incb
dec
mov
ja
fwait
insl
mov
adc
aad
xor
cmpsb
inc
stos
xorb
push
push
jecxz
or
push
xchg
or
jl
dec
jno
insb
mov
or
outsl
xchg
movsb
add
mov
js
sub
cld
push
mov
popf
jle
xchg
and
lahf
stos
mov
sub
mov
stos
inc
adc
stc
jae
outsb
xchg
iret
out
bound
add
xor
push
jg
imul
mov
shl
jbe
cltd
cld
mov
in
cmp
pxor
push
add
ds
mov
fdivrs
lock
mov
cmp
frstor
inc
xchg
mov
imul
mov
mov
ss
fwait
js
leave
pop
loopne
and
lea
stos
jb
addl
popa
lret
xchg
mov
mov
fisttps
adc
lock
fcmovnb
pop
push
mov
ds
sbb
outsb
xchg
push
mov
jp
mov
inc
outsb
fdivl
lret
push
mov
xor
mov
mov
mov
add
repz
outsl
fisubl
push
insl
jnp
adc
pop
repz
mov
das
jno
rcrb
stos
xchg
push
fistl
stos
push
jne
or
jge
xorb
iret
arpl
add
jo
bound
sub
icebp
mov
dec
mov
jno
test
roll
clc
test
jbe
jne
les
ljmp
xchg
cmp
stos
pop
xchg
in
push
xor
mov
mov
in
add
push
repz
std
sbb
jl
aad
and
dec
cs
mov
sub
daa
or
inc
insl
add
mov
push
jmp
stos
loopne
dec
es
adc
sbb
inc
bt
sub
mov
out
or
mov
pusha
fsubrs
xor
xor
push
or
and
sub
and
clc
jno
xor
mov
mov
loopne
stos
clc
inc
dec
sti
mov
xor
rcrb
or
mov
repz
into
and
mov
mov
cltd
cmp
rolb
mov
jae
add
sbb
ja
sti
nop
shrl
and
sub
xor
pop
ss
push
mov
jg
test
popf
mov
sub
lcall
icebp
decb
sbb
cmpsl
mov
call
mov
jg
pop
push
test
push
sub
cmpsb
adc
sbb
icebp
ret
cmp
adcb
xchg
clc
movsl
add
cmp
into
dec
test
fcompl
adc
scas
inc
mov
mov
addb
push
cli
mov
mov
xchg
sub
test
clc
sub
subl
shll
push
out
jne
mov
mov
into
mov
xor
gs
sub
sub
or
sub
arpl
sub
sub
add
mov
dec
mov
xchg
inc
lahf
and
mov
aaa
inc
pushf
jle
inc
inc
xchg
mov
out
popa
pop
popf
out
dec
imul
out
mov
xor
fists
nop
add
mov
xchg
fisubrl
push
push
cmp
bound
pop
shr
pop
dec
xchg
dec
mov
jno
cld
dec
int
loop
rcll
repnz
shlb
pop
cld
and
xor
jns
std
mov
sbb
jmp
mov
in
add
fstpl
xchg
mov
lods
in
pop
add
xchg
pop
lcall
push
outsb
mulb
sbb
jle
cs
jl
push
sub
negl
test
out
mov
frstor
xchg
fdivr
leave
xlat
cmp
cmp
insb
xor
jno
jl
push
js
ljmp
call
push
cmp
push
pushf
aad
mov
cltd
mov
cmp
or
iretw
sub
shrl
lea
stc
nop
popf
int3
or
test
lret
sti
scas
inc
sbb
out
dec
add
xor
lcall
rolb
movsl
add
inc
clc
in
subl
inc
fstpl
mov
inc
call
clc
inc
out
add
sub
in
test
cmc
inc
frstor
out
add
adc
out
test
inc
fisubs
jge
inc
mov
out
test
popf
add
loop
movsb
dec
ds
jl
test
add
mov
inc
popl
mov
pusha
decl
mov
mov
mov
adc
daa
notl
ret
popa
add
jbe
mov
inc
mov
idivl
shrb
sbbl
iret
xor
ljmp
cwtl
xlat
out
aas
hlt
mov
pslld
mov
imul
xchg
lods
and
scas
stos
mov
imul
inc
mov
push
dec
popa
scas
es
jp
gs
pop
or
or
inc
jge
clc
cmpsl
cmpsl
leave
pusha
fldl
adc
add
test
fwait
cmp
xchg
movsl
mov
stos
loopne
popf
hlt
adc
mov
add
mov
mov
fdivrl
xlat
les
mov
loopne
sbb
outsl
int3
pop
push
mov
push
mov
add
mov
jmp
mov
push
bndstx
push
cwtl
popl
sti
sub
ja
pop
jp
adc
into
arpl
inc
inc
std
mov
jecxz
pop
pop
push
xchg
sub
add
aaa
xor
lcall
std
sbbl
arpl
lahf
jb
inc
hlt
mov
stc
cmp
adc
sti
call
fstl
ljmp
fwait
arpl
lahf
or
push
imul
push
lret
pop
push
cmp
xor
xchg
cmp
push
and
dec
loop
xchg
jbe
jns
imul
mov
pop
scas
int
cmp
or
pop
leave
push
dec
adc
fs
cli
stos
pop
loopne
fwait
ret
lcall
pop
jne
xchg
nop
aaa
ljmp
xor
xor
dec
test
adc
xor
and
dec
scas
in
dec
repnz
fsubrs
dec
filds
das
aad
dec
mov
int
and
mov
add
add
and
mov
stos
lahf
mov
cli
adc
pop
mov
pop
sahf
add
mull
push
or
out
mov
or
mov
aam
int3
xor
dec
in
add
xchg
cs
mov
int
inc
stos
scas
in
mov
cmpl
lock
cmp
rolb
test
or
mov
and
sub
rolb
in
hlt
and
lahf
rcrb
xor
inc
and
and
shlb
add
leave
sbb
mov
lods
mov
push
scas
fnstsw
fs
add
shlb
mov
test
jno
shll
fmul
testb
out
sub
dec
and
push
cmpsb
mov
pop
jmp
inc
fwait
test
xchg
cs
jle
mov
mov
mov
adc
jae
or
pushf
movsl
lds
mov
xor
xorb
jns
mov
pushf
jns
popf
dec
stc
or
mov
xchg
iret
cwtl
andl
mov
daa
mov
jmp
jmp
inc
inc
das
adc
pushf
lock
sub
push
icebp
into
rorl
xchg
dec
data16
loope
xlat
and
lock
jne
scas
pop
and
shlb
and
out
loop
orb
rcrl
cwtl
je
cmp
rclb
xor
pop
cmp
mov
out
push
xchg
aaa
iret
xchg
stos
mov
aad
stos
loop
sti
mov
cld
pop
insl
les
int
rcrb
dec
mov
xor
sbb
xlat
pop
and
jp
stos
mov
xchg
pop
push
lea
lcall
push
jp
in
push
lret
cmpb
scas
in
shrb
sbb
or
lcall
push
std
je
pusha
dec
push
movsb
je
xchg
test
push
push
insl
repz
and
imul
inc
adc
popa
jnp
mov
rol
add
aam
xor
and
or
mov
jno
mov
inc
adc
xchg
push
lea
in
sub
adc
jp
outsb
mov
nop
jmp
or
out
xchg
add
leave
dec
cmc
call
add
fstpt
and
lret
push
xchg
add
shrb
and
repz
aas
rol
mov
xlat
mov
or
xchg
subb
jne
shrb
test
in
sbbb
add
mov
mov
popa
or
rolb
push
test
mov
xchg
rol
rclb
sbb
cmpsb
push
and
sbb
dec
dec
test
sbb
or
cld
mov
int
inc
dec
in
outsb
aaa
lret
adc
fs
bound
aad
push
sti
insb
ffreep
icebp
jle
xor
jb
pop
cmp
sbb
jle
sbb
pop
inc
add
dec
push
mov
daa
mov
mov
stos
lods
push
ja
mov
and
cltd
push
or
push
inc
inc
push
in
icebp
filds
adc
data16
add
dec
popf
xor
loop
nop
adc
mov
dec
mov
push
or
addl
jno
dec
mov
jge
repnz
ficompl
lock
pop
outsl
insb
pop
popa
clc
fidivs
xchg
adc
lahf
leave
and
imul
and
outsb
xor
aad
pushf
pop
fwait
scas
sbb
repz
sbb
adcl
cs
xchg
jecxz
call
cmp
mov
jg
cmp
fidivrs
adcb
pop
cli
sarl
push
inc
in
inc
add
cmp
xor
or
or
pushf
mov
les
cli
mov
pop
jmp
adcl
add
popf
insb
add
cld
mov
sbb
push
jl
ret
cmp
pushf
out
xchg
jns
sub
xchg
and
in
repz
loopne
pop
lret
pop
lret
xchg
ja
dec
and
pcmpgtd
adc
js
push
xchg
inc
adc
out
out
and
js
xorb
divl
jno
shll
xchg
pop
mov
in
cmpsl
push
pusha
pop
sbb
aaa
mov
jge
sub
sub
inc
inc
movups
int
lock
stos
nop
ss
sub
mov
stc
xchg
sub
pop
call
dec
rcll
push
jns
cmpsb
sub
and
push
in
jecxz
clc
dec
inc
add
lea
jecxz
cwtl
gs
pop
mov
and
test
insl
ljmp
mov
scas
xchg
jecxz
sub
lahf
dec
sbb
cmp
fdivl
jnp
insl
lods
pop
ret
mov
sbb
mov
and
or
mov
xor
push
adc
xor
ret
idivl
push
test
pop
cmc
sbb
aaa
lds
lret
sti
ljmp
ret
fisttps
mov
scas
in
mov
ljmp
sub
pop
mov
int3
imul
sbb
shr
scas
ja
sti
pushf
sti
out
js
mov
push
push
xchg
push
je
sub
frstor
or
out
xchg
add
dec
aad
pop
clc
pusha
or
jle
mov
div
dec
and
cmp
and
scas
push
cmp
xchg
insb
ja
and
dec
mov
pop
loop
sahf
adc
jbe
outsb
cwtl
je
xchg
and
add
out
xchg
push
iret
fstl
xchg
pop
ret
mov
push
mov
lret
cmc
pop
xchg
sahf
adc
lds
jae
imul
arpl
pop
aad
fxch
ss
and
inc
sbbl
pop
add
xor
cli
xchg
es
fs
ss
mov
ret
xchg
into
int
ja
sbb
inc
add
xor
gs
dec
lock
daa
adc
dec
icebp
movsl
mov
mov
mov
xchg
jns
test
or
popa
aaa
mov
mov
add
jl
mov
and
and
lret
ss
sbb
lds
mov
ss
fadd
inc
addr16
test
and
insb
push
xchg
aaa
enterw
in
sbbb
pop
pop
ret
push
negl
sti
getsec
add
in
adc
push
pusha
scas
fnsave
fldcw
loope
popa
enter
adc
scas
mov
cmpsb
scas
dec
mov
lods
mov
and
inc
lret
rorl
dec
sbb
add
and
sub
mov
sub
dec
stc
jnp
cmp
mov
stc
sbb
loope
aam
shlb
dec
mov
stos
mov
stos
iret
int
mov
xlat
repz
leave
mov
jbe
mov
cltd
jne
inc
cmpsb
mov
enter
lcall
dec
popa
loope
fdiv
and
ss
mov
push
sub
xor
mov
mov
dec
mov
cmp
xchg
pop
mov
ret
mov
xlat
or
add
and
mov
ja
sub
jo
dec
movsl
lods
add
push
call
cltd
xor
adc
test
ret
sbb
out
push
add
aad
lcall
jnp
add
outsl
inc
push
sbb
jae
xor
dec
add
sahf
lods
mov
jb
mov
in
les
decb
mov
inc
comiss
xor
mov
jae
xchg
sbb
mov
loope
repz
cs
in
xor
aad
call
mov
sbb
jmp
sub
rcll
cmp
cwtl
jo
xchg
negl
bound
enter
and
adc
lods
popa
jae
xchg
add
jb
adc
test
imul
inc
sub
cmpsl
out
loope
stc
aad
jmp
insl
arpl
cmc
adc
mov
and
pminsw
xorl
pop
outsb
inc
xchg
pop
jno
fldcw
inc
pop
jecxz
mov
xchg
xchg
insl
fistps
stos
push
xor
lds
jecxz
sub
mov
les
push
jg
cmpsl
sbb
orl
mov
lret
imul
add
leave
xchg
xchg
repnz
ss
sbb
mov
imul
xchg
mov
test
push
lcall
stos
mov
aad
je
in
cwtl
ficomps
or
int3
lcall
add
shll
cwtl
bound
mov
mov
daa
jl
push
mov
gs
int3
outsl
fistpll
pop
into
mov
aam
cld
fcmovnu
call
xchg
sti
stos
push
mov
dec
mov
mov
ds
lcall
mov
add
sbb
in
mov
push
push
pop
cs
mov
imul
dec
sbb
jns
outsl
iret
adc
or
in
sub
inc
mov
mov
cmpsl
fdivr
sub
out
clc
and
pop
cmp
dec
pop
jo
aas
add
adc
inc
pop
xor
cmp
mov
cli
and
sub
push
call
pushf
cli
jnp
fistpl
loope
jl
jne
int3
daa
subl
mov
sarl
inc
jbe
lods
into
fbstp
aad
cmp
add
cld
mov
loope
popa
rclb
popf
into
or
sub
imul
add
and
adcl
dec
xor
out
insl
cmp
fnsave
dec
push
shl
in
ds
das
mov
shlb
add
dec
sub
iret
loopne
jecxz
cmpsl
ret
pop
xlat
incb
xchg
add
fdivrl
icebp
cwtl
enter
cmp
divl
je
inc
inc
add
inc
outsb
xor
xabort
dec
pop
push
lods
lahf
arpl
mov
lcall
lock
aaa
test
or
popa
inc
cmpsl
push
mov
pop
inc
mov
and
loop
ret
aaa
ds
aam
loopne
in
lcall
inc
pop
mul
add
jmp
mov
push
sub
push
vrsqrtss
test
xchg
pop
pusha
jg
mov
negb
aaa
mov
adcb
lret
mov
adcb
add
push
scas
fldt
adc
add
inc
dec
in
push
xchg
pop
xor
xchg
scas
adc
xlat
addl
mov
push
sti
xchg
dec
arpl
dec
mov
aam
sub
add
mov
lods
jg
jno
enter
xchg
out
ror
sbb
inc
add
push
jb
scas
lret
out
add
cltd
lods
push
ljmp
jmp
fiadds
cmp
jmp
mov
add
fwait
mov
mov
insb
and
lds
scas
mov
les
dec
push
outsb
dec
fisttpl
notl
jge
xlat
inc
out
mov
stos
loope
inc
int3
fnstsw
fdivrl
test
ret
loop
jge
dec
mov
insb
stos
aaa
inc
inc
arpl
jmp
outsb
rorb
int3
lret
je
mov
popf
iret
iret
bound
mov
add
pop
aas
dec
inc
stc
adc
mov
pop
xor
mov
sub
pop
add
ret
mov
cs
ljmp
bound
popf
hlt
xor
loopne
xchg
arpl
es
inc
add
es
into
jecxz
mov
fnstsw
adc
fsubl
je
es
iret
xlat
xor
icebp
pop
je
aas
xchg
mov
jmp
inc
push
pop
jp
dec
fmuls
arpl
push
and
mull
mov
in
or
insl
je
jg
mov
push
or
icebp
jg
in
test
repnz
xlat
adc
inc
in
inc
xor
cwtl
std
fsubrp
clc
sti
pop
mov
pop
pop
push
loope
jne
pop
ljmp
pop
scas
or
or
lahf
fdivrs
mov
adc
js
cmpsb
repz
notb
rcrl
pop
loope
xor
mov
bnd
and
cmp
gs
mov
ljmp
jb
mov
aas
inc
les
fildll
lret
rcrl
xlat
mov
xor
and
std
adc
push
mov
sbb
dec
xchg
je
adc
adc
mov
adc
inc
mov
push
sbb
sbb
nop
adc
ds
test
icebp
xchg
leave
jae
and
movsl
movsb
out
sbb
jp
cli
icebp
nop
mov
adc
mov
jnp
sub
fstps
movsl
jmp
jno
mov
add
lds
xchg
aad
int
insl
cld
js
imul
xchg
idivb
add
stos
pop
sahf
out
lret
andl
sahf
or
jbe
sub
lods
mov
iret
divb
sbb
outsb
mov
cmp
adcl
jbe
das
push
pop
sub
sub
and
stos
push
outsl
lock
dec
xchg
cmc
stos
xchg
in
js
roll
xchg
pop
jg
sub
mov
mov
in
mov
test
jmp
xor
rol
out
mov
stos
dec
dec
pop
int3
sbbl
sub
cmp
push
cmpsl
ret
addr16
ret
movmskps
cmp
insl
add
fisttps
loop
mov
mov
sbb
jbe
or
and
jb
out
inc
pop
out
mov
arpl
and
sbb
xchg
sbb
dec
cltd
ss
loope
movsb
repnz
cmp
lret
cs
push
pushf
lahf
not
pop
clc
rol
dec
clc
mov
into
arpl
xchg
je
ljmp
pop
notb
mov
jmp
dec
xor
jmp
push
xchg
adc
notb
popa
inc
in
dec
xor
mov
stos
push
add
xor
xchg
out
push
pop
pushw
add
cld
test
mov
cmpsb
sbb
insl
mov
shr
int
outsb
loope
addr16
das
sbb
add
adc
pop
push
pop
sub
mov
imul
aas
sbb
push
push
icebp
pop
nop
ret
jnp
lock
fnsave
sub
cli
cltd
scas
outsl
and
sti
out
mov
mov
rcr
imul
out
jp
dec
mov
push
in
scas
xor
fistps
adc
shl
jle
out
mov
fldl
xor
incb
add
cmpsl
ds
and
stos
jns
dec
lahf
pop
cmp
sub
mov
aad
icebp
movsl
push
pop
je
leave
leave
loope
jge
mov
push
int3
scas
cmpsb
out
xchg
add
imul
push
inc
test
bnd
test
cmpsl
je
lret
and
call
mov
mov
jle
ds
or
inc
add
cmp
mulb
aaa
push
and
pop
clc
out
push
popf
adc
mov
call
xor
cmp
popf
test
repz
vprotd
lret
or
inc
ljmp
mov
lods
imul
fldl2t
loopne
pushf
bound
mov
cmpsl
sub
sahf
dec
pusha
and
fnsave
or
mov
push
leave
aaa
shrb
mov
jno
sub
inc
les
dec
mov
pushf
jo
fisubs
flds
mov
inc
mov
lea
push
inc
push
and
pop
cmpsl
sbb
nop
sbb
jle
repnz
imul
sub
pop
xor
push
mov
mov
fstpl
dec
repnz
stos
sub
paddusw
jbe
daa
test
movsl
mov
fs
dec
scas
push
sbb
jmp
cmpsl
add
and
outsb
pop
lods
pop
inc
or
stc
insb
mov
xchg
cmp
pop
pop
sub
mov
out
adc
add
fcom
cmc
std
lcall
push
mov
popf
adcb
insl
adc
repz
pop
nop
dec
dec
add
push
fcmovnu
js
xchg
pop
jne
hlt
sbb
jb
jb
lahf
or
pop
or
mov
mov
aaa
dec
adc
js
pop
sub
lea
mov
scas
pop
scas
sbb
cld
jg
sub
pop
and
call
andb
mov
sbb
xor
das
mov
sbb
inc
out
push
adc
aaa
aaa
loopne
cmp
stos
gs
add
xor
int3
std
push
or
or
out
mov
int
push
popf
jb
adc
movsl
xchg
mov
loop
sbb
aam
imul
enter
xchg
xchg
call
pop
ljmp
outsl
or
cmp
jge
jo
push
mov
jl
notb
sbb
in
imul
aaa
es
dec
pop
mov
sahf
in
cmp
add
sub
pop
pop
hlt
mov
test
sbb
nop
sbb
leave
loope
rcrl
mov
sbb
push
fiadds
ret
cld
mov
ljmp
mov
rcrl
in
inc
in
std
js
cmpl
mov
rclb
push
sbb
mov
xor
mov
ret
cltd
xor
jg
push
fmulp
mov
mov
dec
movsl
cmp
sub
jae
hlt
xor
arpl
sbb
loope
scas
orl
or
lahf
pusha
subb
push
or
cs
jecxz
das
jo
divb
pop
ss
fwait
out
iret
sbb
dec
sarb
pop
aam
mov
xor
cmp
xchg
jecxz
push
outsb
ret
es
nop
mov
test
not
dec
imul
mov
xor
nop
sub
jmp
jecxz
call
or
and
sub
inc
push
jo
loop
ja
repz
inc
mov
and
dec
sbb
sbb
das
push
test
insl
inc
repnz
xchg
pop
popa
mov
xchg
aas
cmp
in
sbb
nop
pop
call
das
insl
ljmp
stos
lods
jne
hlt
fcomps
mov
adc
mov
cmp
jno
mov
shrb
mov
pop
push
movsl
aam
pop
shl
xor
loope
pusha
insb
sub
pop
mov
adc
add
popa
push
leave
int3
inc
cmp
fistpll
dec
popf
cs
rcrb
rcl
stos
add
pop
insb
sub
sysexit
pusha
jl
xchg
add
and
adc
sahf
jge
in
fisubs
sub
push
fnstcw
push
hlt
mov
pop
pop
scas
mulb
xor
adc
mov
dec
mov
pop
rcrb
mov
jg
cmpsb
mov
jmp
aam
adc
sbb
in
jp
push
fildll
psraw
adc
lds
xor
xchg
mov
fmull
push
sub
or
push
xlat
outsb
dec
test
xor
sbb
cmpsb
xchg
repz
xchg
int
cwtl
rcll
cs
insl
jl
dec
pop
rcl
pusha
orl
lcall
sbb
sbb
ja
dec
loope
orl
mov
loop
push
daa
mov
and
or
loop
movsl
dec
or
icebp
js
orl
push
pop
ds
ficomps
nop
lock
mulb
aad
out
cmpsl
jns
stos
and
in
sti
fimull
pop
cmp
jge
aad
in
add
push
lret
outsb
or
test
mov
pop
cmp
or
mov
lret
jae
sbb
pushf
je
dec
gs
jb
pop
out
inc
int3
push
xchg
sub
sub
sahf
add
imul
cld
movsb
cwtl
leave
and
scas
stos
jb
and
fwait
xor
daa
sbb
outsl
test
ljmp
cmp
mov
add
pop
or
mov
pop
xchg
add
and
shr
imul
test
repz
out
mov
push
push
mov
iret
shrb
inc
addl
mov
pusha
push
lret
movsb
or
repz
outsb
clc
sub
sub
mov
fildl
push
add
mov
bound
push
enter
xor
icebp
mov
jne
andl
repnz
in
lret
push
add
fmul
movsb
cmp
loopne
aam
jne
shll
outsl
push
jmp
sbb
and
xchg
mov
jne
stos
fcomps
pop
jne
adc
sub
loopne
push
in
inc
add
xor
lcall
jb
inc
movsb
in
xchg
dec
jl
xlat
outsb
hlt
into
gs
mov
inc
or
test
rcl
mov
jge
jmp
or
jmp
repnz
and
fdivr
xchg
iret
fnstcw
lret
cmp
jnp
jecxz
stc
xor
fimull
push
inc
daa
fldcw
int3
js
mov
jbe
xchg
imul
add
es
xchg
mov
jle
and
push
xchg
int3
lret
outsl
fsubrs
cmp
mulb
and
call
xchg
jo
movsb
cmp
rorb
mov
outsl
outsb
scas
sbb
mov
iret
in
cmp
or
push
stc
es
std
pop
in
mov
inc
fisubl
add
mov
int
push
add
push
popf
repnz
mov
pushl
add
ret
mov
cmc
mov
ds
rolb
test
or
stc
data16
mov
mov
adc
cmp
dec
out
repz
dec
inc
cmp
jb
lds
insl
dec
fistps
shlb
movsb
cmp
or
cmp
test
shrl
fs
loope
push
sub
ljmp
js
jmp
rcrb
aas
sub
inc
fisubrs
hlt
adcb
fsubrp
dec
rcrl
data16
cmp
nop
daa
mov
fnstenv
xchg
imul
popf
sbb
push
inc
xchg
sub
jne
mov
hlt
icebp
add
insb
inc
pop
mov
lea
mov
xchg
aad
shrb
lds
out
mov
and
cmp
test
jne
add
jl
jmp
data16
nop
xchg
insl
xchg
mov
jge
add
insl
int3
arpl
jge
mov
insb
mov
in
sarl
stos
pop
or
mov
jns
and
scas
inc
lods
xchg
dec
out
js
mov
mov
pop
cmpsb
xchg
outsl
push
jge
test
jbe
sti
cmpsb
xchg
dec
in
jge
int
pop
sub
sbb
jle
xor
xchg
ja
or
cmpb
loopne
or
shl
mov
ss
xchg
sub
popa
xchg
lret
mov
mov
dec
loop
aad
iret
add
mov
in
pop
jp
ljmp
sbb
sub
push
sub
pop
jne
lock
ret
ja
stc
int3
inc
sbb
xchg
ficompl
or
testl
adc
cmp
hlt
or
lahf
cmp
and
pop
lock
and
clc
or
dec
add
cld
adc
and
cmp
shrb
jmp
add
cmp
aaa
into
inc
lock
hlt
and
sbb
and
push
in
dec
imull
imul
jge
sub
xor
xor
jecxz
ds
gs
das
or
cli
sub
add
sbb
cmp
cs
dec
loopne
cld
cmp
mov
out
fs
or
xor
js
cmp
jle
or
pop
icebp
sbb
or
push
inc
fnstenv
inc
or
mov
push
sbb
addr16
fst
insl
adc
jns
ss
sti
loope
repnz
adc
aaa
lret
xor
stc
loope
and
xchg
cmp
popa
clc
sbb
or
lahf
cmp
nop
daa
push
aaa
repnz
daa
mov
jecxz
icebp
mov
ss
cmp
es
pop
aaa
sbbb
push
push
ljmp
cmp
pop
aaa
adcb
push
jl
aaa
mov
and
out
pop
push
cmp
imul
in
in
out
lret
bound
aas
stc
insl
pcmpeqb
ds
add
je
dec
in
cmpsl
sub
sub
mov
sub
inc
xlat
push
popf
das
dec
mov
addb
jbe
xchg
vcvtpd2dqx
push
push
fdivl
pop
cli
xchg
ss
mov
push
pop
cli
xchg
popl
mov
fnsave
cmp
jbe
adc
jmp
int3
arpl
and
sub
imul
aad
cmpsb
in
xlat
add
js
pop
mov
mov
fwait
xor
test
popa
mov
jns
inc
lods
adc
loopne
cltd
leave
pop
cmc
sti
xchg
cli
xchg
mov
arpl
mov
loope
mov
mov
sbb
gs
cld
xchg
faddl
sbbb
aam
sub
push
ret
and
test
mov
icebp
mov
rcll
pop
adc
pop
push
stos
stos
ret
xchg
sub
std
dec
loopne
jns
adc
repnz
inc
and
cmpsb
inc
lret
bound
jae
mov
pop
mov
jo
lods
mov
addl
and
xor
std
shrl
jge
pop
mov
addr16
sbb
add
jns
jp
sub
js
adc
jno
shlb
shrl
add
sbb
pushf
out
or
mov
lret
bound
jo
pushf
movsb
call
pop
hlt
mov
cli
xchg
xor
jnp
add
lds
sbb
push
call
add
mov
sub
add
push
pop
dec
loop
fnsave
push
in
ret
iret
imul
mov
add
and
int
mov
xchg
sub
push
mov
arpl
outsb
xchg
xor
lret
inc
fdivrl
fisubl
prefetch
or
pop
lock
pusha
inc
fstl
mov
imul
or
and
and
push
pop
out
nop
jne
out
mov
test
ret
clc
add
xchg
aaa
sbb
push
push
loop
test
imul
repnz
cli
lcall
dec
xchg
stos
jge
mov
sahf
sahf
xor
mov
and
call
in
data16
xchg
cltd
jl
iret
mov
mov
out
sbb
xor
outsb
test
sahf
xor
les
adc
iret
and
push
movsl
fs
pop
mov
test
outsl
mov
repz
aam
inc
push
ljmp
pop
cmp
jp
mov
icebp
or
shr
incl
jecxz
test
push
xor
adc
test
lret
cld
ficoml
bndstx
mov
mov
enter
leave
push
jmp
push
sbb
jl
jbe
fsubs
enter
enter
sbb
dec
pop
shlb
ret
adcb
shl
hlt
cmp
add
fsubs
mov
dec
js
jge
add
mov
xchg
dec
dec
jecxz
mov
mov
fbstp
push
dec
and
xchg
pushf
cmp
pop
sbb
adc
and
loop
jl
and
mov
xlat
imul
je
xor
in
pop
mov
rolb
adc
mov
sahf
adc
imul
out
fldenv
mov
cli
dec
rol
sbb
cmpsl
lret
xlat
in
sti
sub
cmc
aaa
in
int
int3
inc
lock
adc
mov
add
mov
dec
push
mov
js
jnp
enter
daa
or
adc
lea
aam
insl
gs
scas
dec
sub
pop
inc
lods
pop
sub
mov
mov
shlb
mov
cli
mov
and
fistpll
mov
mov
lock
imul
sub
mov
lock
pusha
mov
adc
dec
in
xchg
or
into
paddusb
out
mov
imul
clc
pop
leave
into
sahf
cmpsl
sarb
push
clc
loop
pop
das
rcll
adc
addr16
ss
or
movsb
pushw
cmp
xchg
pop
jg
lea
jnp
lods
sahf
xchg
or
push
pop
test
mov
mov
stc
mov
mov
mov
xchg
pushf
jbe
inc
jnp
pop
xchg
mov
std
cmp
lea
push
dec
adcb
push
dec
roll
adc
sub
in
pop
or
icebp
mov
stc
daa
pop
mov
push
push
mov
jo
inc
fmull
or
in
outsl
mov
fcomi
sbb
cmp
nop
aad
les
enter
fwait
mov
cltd
psllq
or
nop
cmp
pop
xor
or
adc
push
stos
testl
test
dec
push
jg
push
dec
xchg
pop
popf
cmp
test
sub
xchg
sub
fsubrs
std
xor
rcrb
mov
dec
aad
lods
jmp
dec
loope
or
clc
test
jmp
add
fmuls
popf
mov
mov
loope
jns
jl
and
xchg
push
data16
insl
adc
lock
cs
or
mov
mov
loope
xchg
sbb
pop
lds
cwtl
pushf
xor
lods
pop
aam
icebp
clc
and
pushf
daa
push
sub
lret
push
aad
add
mov
mov
push
or
dec
sahf
xor
pop
xor
mov
jge
pusha
or
inc
cmpl
xlat
sub
daa
xchg
movsl
popf
test
and
outsb
lret
mov
jmp
pushf
test
cmc
addr16
mov
in
sbbl
adc
xchg
aas
in
repz
fisubs
out
xor
fisttpl
pop
cli
sub
fadd
inc
jmp
fldt
inc
imul
inc
push
xchg
jns
push
inc
pop
out
out
pop
mov
popa
ret
fsubrs
jne
imul
mov
out
arpl
shrl
loop
loopne
jo
mov
pushf
mov
cld
dec
jb
loop
push
ret
jo
int
xor
pop
popf
xor
xlat
fisttpll
mov
ret
mov
lret
dec
and
xor
jg
ret
pop
xor
rcr
sbb
jle
das
loope
cs
jno
adc
sbb
ljmp
sbb
or
in
repz
pop
pop
stc
mov
xor
imul
adc
jns
fwait
imul
or
mov
int3
cwtl
xchg
mov
adc
ja
sbbb
xor
xorb
and
dec
rclb
loop
jae
xor
mov
cmp
dec
lods
push
mov
cmp
insl
pmaddwd
and
inc
mov
lods
xchg
out
sbb
stos
adc
mov
out
xchg
push
int3
adc
inc
stos
jne
fldcw
mov
aad
inc
ret
iret
sub
out
xor
mov
fcoms
cmp
xor
add
sbb
mov
jge
mov
in
sbb
jecxz
clc
loop
fistl
mov
mov
cmp
pop
push
bound
xlat
mov
subl
xor
shl
push
xlat
mov
pop
fsubr
cld
cmp
repnz
or
mov
sbb
das
loope
push
xor
insl
iret
sbb
fsubrl
and
movsb
and
cmpsl
cmpsb
cmp
fiadds
push
fidivs
fcoml
xor
test
push
mov
daa
jmp
xlat
mov
ficoms
push
movsl
movb
rol
mov
inc
ret
mov
call
movsl
adc
and
popf
dec
mov
dec
sub
mov
arpl
aas
xor
clts
push
loope
pop
nop
loopne
cs
loopne
data16
jne
mov
xchg
adc
fwait
push
int
cmp
mov
mov
aad
jne
mov
mov
repz
lret
loope
cmc
push
movsl
cmpsb
insb
bnd
mov
cmpsb
insb
es
iret
lahf
ss
sbb
fsubrl
lods
pop
jge
cld
xchg
shlb
inc
mov
movsl
cmp
cli
mov
out
mov
mov
and
sbb
testb
or
xor
out
mov
adc
fidivs
mov
stc
xchg
aam
mov
mov
insb
mov
mov
pop
repz
fcmovbe
adc
lods
fsubl
mov
jecxz
jnp
out
xchg
js
push
mov
pmullw
loopne
in
movsb
mov
fldl
sbb
or
rclb
daa
cmpsl
xchg
cli
insb
adc
sbb
dec
mov
cmp
push
lods
dec
add
jl
pop
or
inc
mov
insb
cmp
pop
sub
mov
lcallw
not
jne
ljmp
mov
mov
xchg
std
xor
rcrb
stos
push
adc
das
fidivrl
xchg
jp
pusha
inc
lret
outsl
pop
ja
fdivrl
jmp
dec
loope
push
ds
sbbb
pushl
xor
or
jl
sub
pop
ja
mov
mov
stc
and
lods
inc
jbe
fadds
xchg
cmc
sbb
hlt
cmp
cmp
jle
fstps
fmull
jbe
dec
push
enter
inc
test
push
fs
xor
pop
mov
pop
sahf
lock
push
push
mov
xlat
outsb
adc
cmpl
fimuls
call
push
cwtl
fnstenv
iret
mov
fs
mov
pop
cmpsl
or
mov
sbb
xor
xchg
aas
ds
or
jmp
adc
dec
rolb
cmp
xchg
inc
cld
es
mov
mov
xorl
insb
hlt
and
jge
test
adc
cmp
test
sub
mov
mov
sbb
shlb
enter
call
loope
add
aaa
jge
cmc
daa
sub
sbb
leave
dec
adc
stos
xor
lahf
lret
xor
xorl
mov
loop
mov
and
shl
jbe
add
add
ret
fmuls
mov
out
lock
mov
movsl
mov
test
and
dec
rcll
notl
xor
push
cmp
cmp
mov
and
clc
dec
jo
sbb
xor
loope
movsl
jle
into
dec
jmp
imul
cmp
ret
dec
jne
or
test
add
mov
xchg
cmpsb
xor
adcl
js
clc
jg
xchg
mov
rclb
outsb
imul
add
sbb
out
pusha
cwtl
or
in
sbb
lcall
sub
leave
inc
fs
mov
dec
dec
dec
pop
and
orb
push
or
out
jl
xor
cmp
mov
jp
and
xor
and
dec
jo
hlt
push
pop
fldt
or
in
mov
bound
loope
xor
or
inc
rorl
cwtl
pushl
or
rorb
push
lret
mov
es
adc
pop
movsb
addr16
stc
push
lds
sbb
inc
add
andl
cmpsl
je
fdivrs
jmp
push
add
jmp
sub
stos
test
out
jb
mov
sbb
rcl
or
lds
shl
ljmp
rcl
imul
xchg
shrl
fs
fdivs
inc
imul
mov
cmpsl
int3
mov
lcall
jge
jmp
lret
into
bound
insb
les
fsubl
test
mov
in
sub
mov
notb
cmc
ret
fdivrp
xor
loopne
fbstp
add
cmpsb
scas
sarl
jmp
scas
shlb
mov
idiv
inc
mov
jo
mov
sbb
mov
lds
loop
fiadds
mov
sar
lea
mov
decl
pop
mov
inc
xchg
or
xchg
jmp
pop
cmp
movsb
pop
sub
out
push
ret
fstpl
xlat
pop
lret
pop
mulb
fisttpl
cmp
push
inc
push
lods
jb
and
xchg
xchg
or
adc
or
cmpsb
xchg
adc
xlat
cmpsl
jno
add
jae
or
pusha
pushf
push
cs
mov
outsl
mov
lods
sub
pop
jmp
fucompp
jl
repnz
xor
cli
xchg
into
xor
lcall
and
mov
orl
jecxz
pop
cld
sarl
mov
sub
repz
sub
mov
in
sbb
xor
cli
pop
mov
imul
mov
arpl
sarl
ja
or
lcall
aad
aaa
jge
imul
sbb
xchg
mov
cli
and
bnd
les
roll
mov
inc
mov
sub
pop
dec
mov
push
sbb
dec
xchg
adc
push
into
sbb
pop
jns
inc
mov
and
popf
inc
outsl
mov
mov
rorl
jno
cltd
xor
repnz
sub
push
mov
ret
flds
xlat
mov
mov
mov
xchg
add
imul
mov
test
push
ljmp
and
sub
int
jmp
fstp
or
jnp
jmp
jmp
adc
push
shll
jecxz
add
add
call
mov
adc
pop
mov
pushf
test
mov
sbb
lcall
or
mov
or
inc
xchg
xchg
dec
daa
fs
scas
adcl
js
lea
pop
pop
or
push
sahf
pop
les
imul
push
lock
rorl
adc
xchg
add
mov
test
das
hlt
jmp
mov
loopne
pusha
jmp
or
inc
xchg
and
out
pushf
sbb
in
mov
adcl
xchg
ret
and
mov
lcall
movsl
nop
jns
dec
jecxz
jo
xchg
and
outsb
jg
mov
dec
insl
mov
mov
push
lret
push
mov
pop
mov
jb
dec
inc
int
cmpsl
cmpsb
jbe
inc
inc
xlat
mov
jmp
mov
out
adc
mov
ljmp
lret
cld
shlb
add
adc
es
push
inc
test
cli
rolb
add
out
mov
mov
cmpsb
mov
pop
or
and
in
cmp
fwait
lcall
push
xchg
jnp
insl
mov
jne
inc
lcall
xorl
jle
xor
cmp
jmp
push
aam
inc
sarb
imul
sub
adc
pushf
adc
and
icebp
das
dec
cs
xchg
pushf
push
loop
push
and
addb
shlb
test
fiadds
lahf
test
fs
scas
add
sbb
jl
jns
fisubrs
cmp
ja
cmp
flds
pop
int3
or
fstpt
push
adc
ljmp
pop
in
fstpt
enter
fstp
jecxz
fcmovnbe
mov
in
rcrb
mov
sti
add
mov
filds
cmp
movl
mov
or
scas
xor
pushf
leave
das
lcall
incl
lods
xchg
adc
push
xchg
adc
lea
xor
mov
xchg
adcb
pop
or
push
loope
gs
stos
cmp
rcll
popf
pop
push
das
repnz
inc
xchg
jns,pt
mov
out
dec
mov
shlb
out
push
repz
push
lods
aam
xor
sub
loope
adc
repnz
inc
sarl
cmp
push
out
dec
cmp
jnp
add
pusha
dec
dec
filds
mov
add
daa
sub
sbb
sti
sub
pop
or
out
in
iret
ljmp
out
mov
ret
mov
imul
xchg
sub
sub
add
xchg
and
jnp
addr16
out
mov
xor
xor
jb
nop
push
popf
sbb
push
popf
add
pop
rcrb
daa
f2xm1
push
sub
push
sarb
fstpl
loopne
into
sub
adc
adcl
jl
xchg
sub
insl
dec
les
sbb
cmpsl
cmp
lret
sti
xor
fists
cmp
cmp
sbb
jns
mov
jb
adc
inc
sarb
mov
adc
push
call
cld
lcall
cmc
mov
push
pop
mov
inc
or
mov
cmp
les
push
cmp
cli
jno
sbb
mov
xchg
mov
push
data16
cmp
int3
mov
cmp
mov
xchg
jns
xlat
aaa
fsubrp
mov
add
fdivrl
xchg
mov
mov
mov
adc
daa
sti
mov
out
sbb
test
add
xchg
mov
out
xchg
xchg
inc
adc
cmc
pushf
add
sub
ret
mov
jmp
mov
jne
setp
mov
mov
test
mov
fildll
and
jecxz
push
shlb
jno
xor
mov
add
and
out
es
icebp
sbb
add
inc
xchg
mov
cmp
imul
and
inc
pop
mov
mov
sub
test
icebp
idivb
sbb
aas
gs
sti
xor
push
cmp
das
sbbb
popa
adc
imul
outsl
subl
cmpb
mov
shrb
jle
repnz
shl
mov
push
mov
mov
bound
dec
out
sub
cmpb
xchg
xchg
mov
sbb
cmp
loop
jbe
fisttpll
xor
das
js
mov
ds
xor
movsb
cmp
adc
mov
inc
add
xor
xchg
xor
pop
popa
js
xor
jne
aam
movsl
jb
or
push
inc
jno
jge
or
push
push
rclb
pop
add
and
push
ja
hlt
pop
lahf
xchg
imul
popa
sbb
jle
bnd
insl
inc
mov
sar
dec
stos
gs
mov
iret
sti
jg
sbb
decb
lea
mov
xor
push
movsl
fildll
in
mov
mov
mov
in
je
ret
cmp
fcmovnbe
les
cmp
pop
psllw
roll
jo
sbb
xchg
inc
xchg
pop
lock
push
cmp
xor
dec
jne
lock
inc
and
mov
push
add
jnp
pop
or
pop
pop
popf
mov
in
pop
jnp
je
dec
cmp
dec
lods
jo
ds
scas
jbe
jp
std
inc
out
mov
inc
sbb
push
fildl
jle
loop
incb
jl
scas
rorb
pushf
xor
mov
je
iret
mov
loope
fcoml
leave
add
int
jecxz
jmp
or
mov
push
xchg
pusha
cli
ss
cld
repz
ds
and
push
enter
sbb
lods
or
dec
test
inc
arpl
rcrb
test
jp
add
jno
movsl
movsl
outsb
cmc
shrl
mov
xchg
or
dec
loopne
xchg
sbb
xor
jmp
xor
imul
inc
xor
cmp
mov
push
and
jb
cli
dec
push
fmull
pusha
adc
inc
jmp
push
in
cmp
sub
lods
aad
pop
into
sbb
or
mov
push
repnz
mov
mov
jbe
aad
mov
jns
jmp
lods
dec
in
movsb
push
pop
lds
imul
xchg
add
jmp
sbb
push
cmp
dec
jp
daa
stc
dec
das
scas
jb
dec
push
lods
xchg
xchg
stc
push
pop
call
lods
pusha
and
data16
xor
jo
push
pop
mov
pop
pop
leave
pop
add
jp
test
fwait
inc
mov
leave
jbe
mov
out
cld
pop
stos
out
stc
aaa
repnz
fistpll
iret
sarb
cmc
rol
inc
rcl
aaa
sti
ret
idivb
add
rorl
cmp
mov
jmp
gs
cmp
or
cmc
in
das
mov
add
pop
xchg
mov
cmc
daa
lcall
jno
mov
xlat
push
xchg
lds
mov
push
or
mov
negl
add
les
push
xchg
mov
stos
data16
leave
adcb
nop
xchg
inc
mov
mov
icebp
push
mov
addr16
stos
mov
test
mov
jno
xchg
adc
jbe
mov
lock
mov
pop
mov
fcomps
loope
jo
out
sub
imull
sub
mov
cmp
pop
cmpsb
imul
mov
insb
mov
mov
lods
js
cli
and
mov
sbb
dec
out
push
add
pop
dec
std
pop
push
ret
ret
and
inc
add
jmp
repnz
xchg
stc
lock
push
imul
add
cmpsb
add
dec
mov
clc
mov
mov
adc
xchg
mov
iret
mov
sbbl
cmp
ficomps
psllw
mov
add
or
shlb
lods
pop
test
push
or
repz
inc
loop
data16
test
vmread
xchg
cmp
push
adc
push
fnstcw
inc
dec
shrb
jecxz
stos
jb
mov
les
mov
sbb
outsb
push
movsb
imul
outsl
xchg
push
mov
push
add
xchg
xchg
lret
insl
jns
cmp
jae
jge
lods
dec
je
sbb
pusha
push
out
pop
mov
fcoms
xchg
out
add
daa
loop
push
dec
fwait
dec
pop
adc
cwtl
cmp
jb
pusha
jne
mov
addl
nop
adc
and
jb
jge
fidivrs
in
mov
cmpb
lret
add
xchg
lahf
or
push
adc
mov
or
jl
push
popa
inc
les
push
push
jmp
pop
sbb
dec
movsb
pop
or
inc
lret
outsl
in
cltd
ficoms
pop
mov
flds
jp
sub
xchg
jle
inc
jle
pop
dec
xchg
xchg
pop
push
jne
je
dec
mov
xor
das
jae
dec
aam
xor
xchg
mov
hlt
cld
test
adc
faddl
or
imul
add
ja
daa
aas
mov
testl
xchg
mov
cmc
pusha
stc
and
popf
loop
rorl
pop
lcall
ljmp
jne
lret
flds
and
xchg
lret
mov
lods
or
outsb
test
sbb
hlt
cmpsb
sub
sbb
pop
pop
mov
inc
les
call
mov
push
mov
xor
pop
jbe
dec
les
mov
push
into
xchg
sub
addl
es
sarl
pop
hlt
jmp
mov
adc
sbb
call
sub
fistpll
mov
neg
dec
xlat
dec
popa
movsb
push
mov
inc
movaps
jge
mov
mov
icebp
mov
mov
lcall
test
int3
jmp
xlat
pop
xchg
pop
imul
clc
fsubs
adc
lret
jae
rorb
add
loopne
inc
int3
pop
movsb
sub
loop
mov
mov
mov
adc
pop
mov
call
pop
mov
ficoms
in
pop
cmc
out
test
scas
movsb
xor
mov
out
or
dec
in
jl
xchg
sub
add
mov
loopne
data16
jae
in
test
pop
hlt
lds
jnp
sbb
sub
or
cltd
xor
ficomps
dec
mov
loopne
insb
adc
sbbl
xor
mov
mov
test
jbe
push
test
das
or
fnsave
dec
in
sbb
fwait
xor
sarb
insl
je
in
xchg
push
movsb
cmp
push
repz
fnsave
adc
add
das
pusha
and
push
orl
cmpsl
shll
lds
xor
das
xor
jl
ret
pop
daa
sahf
addr16
dec
loope
jp
test
inc
cmpsl
add
cwtl
stc
and
in
dec
int3
arpl
outsb
and
imul
ja
sub
loopne
jge
pop
lock
push
iret
fnsave
psllw
jae
xor
xchg
ds
mov
adc
aad
lcall
dec
out
std
xchg
dec
pop
shrb
jo
repnz
out
aam
and
repnz
mov
rolb
sbb
ret
cmp
loopne
sbb
mov
mov
ret
xchg
mov
mov
cwtl
or
iret
pop
sub
xchg
xchg
xchg
mov
cmp
shl
cmp
pusha
sti
fdivr
idivb
call
rclb
xor
cli
add
decl
movsb
lcall
fcoml
xor
ret
mov
xchg
test
and
sbb
jecxz
aam
push
adc
arpl
sbb
je,pn
loopne
ja
cmp
out
enter
or
inc
xlat
pop
sbb
aad
loop
je
test
popa
js
mov
sbb
push
mov
mov
add
popa
dec
and
mov
ret
mul
dec
push
push
jno
mov
mov
dec
test
out
xor
ret
mov
or
test
sub
pop
icebp
stc
int3
outsb
mov
inc
jp
xchg
cli
push
lret
mov
add
pop
gs
fsubl
popf
jnp
mov
lret
jl
jns
adcl
and
jne
rolb
fxam
cmp
bound
lret
pop
pusha
pop
aaa
pop
decl
roll
adc
fisttpll
int
cmp
arpl
xor
xchg
iret
aam
xchg
push
inc
adc
jp
push
out
or
inc
bswap
mov
xchg
push
repnz
mov
fwait
dec
inc
push
cmp
pop
dec
push
and
ljmp
sbb
dec
std
stos
test
fldt
insl
unpckhps
pop
data16
jne
add
adc
ret
xchg
fisubrs
inc
cmpsb
gs
pop
cwtl
popf
loope
or
and
fcomp
les
imul
jns
icebp
pop
mov
pop
sbbb
scas
outsb
dec
mov
xor
push
adc
lock
dec
mov
addl
xchg
test
cmc
subb
mov
enter
lahf
jle
or
xchg
xchg
test
lock
std
nop
inc
jp
data16
aad
cmp
in
test
pop
repz
add
sub
sbbl
cmpb
icebp
xchg
nop
stc
stos
in
sbb
mov
or
shlb
push
push
pop
hlt
inc
clc
pop
hlt
jmp
mov
push
js
shrb
sub
and
lahf
and
push
ljmp
popf
xor
push
outsl
push
inc
inc
stos
inc
xor
aad
mov
ja
es
jne
stos
shrl
cli
out
xchg
cs
test
adc
jbe
mov
int3
cmp
je
roll
mov
sbb
shlb
pop
pop
cwtl
arpl
inc
test
push
sahf
icebp
pusha
push
mov
test
lret
cld
repz
cli
aas
cmp
je
adc
pusha
adc
ret
xchg
int
jae
add
mov
pop
pop
incb
nop
inc
push
lahf
xor
popa
cmp
loope
xor
fimuls
and
pop
incb
aas
adc
adc
mov
mov
mov
mov
add
push
jge
and
test
stos
xor
faddl
aad
mov
push
and
mov
sub
fldenv
dec
inc
sub
xchg
inc
or
push
xchg
add
mov
lcall
cmpsl
lods
xor
pop
cmpsb
repnz
pop
in
dec
mov
adc
mov
scas
mov
aad
negb
or
mov
push
mov
mov
lods
mov
push
pop
negb
adcl
jae
push
mov
mov
scas
mov
aad
negb
xchg
cmp
imul
push
cmc
aad
xor
out
push
mov
mov
sub
xchg
inc
or
ljmp
and
pop
jmp
sub
or
sarl
cmp
pop
pushl
movsb
daa
xchg
pop
shr
jne
mov
fwait
adc
cltd
inc
popf
dec
jbe
cmc
lret
mov
aam
sbb
cwtl
xchg
aad
adc
dec
mov
adc
ret
aas
mov
adc
or
lods
inc
out
aas
mov
inc
or
sub
addr16
sub
cmp
ss
push
sub
push
std
movsb
cmp
or
jle
sbb
xor
push
sti
sub
fwait
inc
adc
push
mull
sub
adc
psadbw
rorb
and
adc
cmpsb
daa
flds
cwtl
rclb
jnp
sub
cmp
push
cli
pusha
jne
xor
js
hlt
insl
aam
dec
mov
aas
sahf
inc
stos
cltd
cmp
popf
jns
dec
dec
lret
mov
xchg
fstpt
dec
popf
cmp
jl
cld
jmp
repz
dec
inc
xchg
inc
in
push
inc
std
inc
adc
and
xor
sub
lcall
lds
mov
or
lahf
mov
mov
or
xor
sbb
xor
pop
fldcw
inc
adc
add
xchg
aaa
push
jae
je
and
lea
or
xchg
fdiv
pusha
mov
movsl
ret
nop
add
pop
clc
mov
mov
add
andl
adc
repz
inc
dec
fwait
cmp
pushf
inc
adc
shll
das
jns
cmp
dec
or
mov
mov
xchg
adc
dec
jbe
stc
pop
in
outsb
pop
testl
push
rolb
lds
pop
clc
dec
rcrl
mov
out
sub
jmp
notb
ret
insb
out
and
mov
push
or
and
push
mov
sbb
adc
std
inc
es
loop
pop
cmp
cmc
pusha
push
cmp
pop
rcr
xor
inc
pop
mov
xor
pop
sti
in
sbb
nop
push
test
adc
jge
cmp
pop
ror
mov
das
sbb
popa
notb
pop
sti
orl
mov
roll
mov
inc
test
ss
sbb
popa
notb
lret
add
mov
rolb
xor
sub
ss
pop
nop
adc
dec
repz
aad
rclb
movb
mov
jae
dec
lods
and
adc
popa
cmc
xchg
dec
repz
int
lcall
aad
dec
jae
lret
ss
push
adc
popa
clc
sbb
xchg
jg
jg
lret
mov
lcall
and
outsb
and
inc
adc
fdivs
mov
nop
mov
fstl
sbb
jo
xor
adcb
ds
ja
mov
fists
xchg
mov
dec
rolb
sahf
add
pop
cmp
dec
or
sub
jl
pop
popf
cmp
rorl
sbb
pop
mov
test
std
cmp
and
jle
ret
inc
inc
cmp
lahf
or
nop
rorl
outsl
pop
scas
mov
mov
cwtl
fisubs
inc
or
mov
adc
inc
aam
pop
mov
cmp
fisubl
popf
inc
jmp
cli
pop
into
push
lret
push
mov
push
mov
mov
mov
xchg
cmp
inc
or
jns
into
push
dec
in
push
mov
xchg
and
xor
inc
pop
mov
lods
cmp
pop
std
arpl
orb
push
ret
mov
aad
fldenv
bound
pop
jb
das
pusha
inc
arpl
ja
sahf
inc
xor
sub
mov
add
shll
push
cli
leave
arpl
cmp
mov
test
adc
sbb
test
dec
das
mov
outsl
mov
inc
xchg
cmp
and
cmp
pop
lret
int
xchg
cmp
scas
test
pop
cmpsb
sub
mov
cltd
jl
pop
add
and
cmpsl
cmp
aad
xchg
sti
data16
mov
mov
sub
jp
imul
ds
or
jmp
adc
jns
sarl
insl
mov
mov
mov
lea
test
xchg
aaa
inc
xor
sarl
xchg
dec
insl
int3
nop
and
mov
repnz
lods
das
arpl
cmp
ret
mov
xor
inc
dec
push
shrb
jnp
cs
notl
cmp
mov
cmc
mov
lret
inc
cmpl
int3
stos
popa
out
call
repnz
push
aam
mov
push
fidivrl
ljmp
fs
out
imul
int3
push
push
adc
testl
push
call
sub
outsl
mov
dec
inc
jbe
imul
jnp
test
mov
push
pop
mov
mov
mov
loopne
inc
mov
jmp
bound
test
jl
cmp
ja
jp
loope
sbb
rclb
dec
and
jge
and
jl
cmp
stos
inc
dec
insl
in
rcrb
mov
mov
cmp
jns
in
push
mov
add
pushf
lods
xor
jmp
pop
std
add
sub
scas
test
lea
cmp
adc
sbb
cmp
and
aad
adc
or
push
xor
adc
ja
and
lea
cmp
and
addr16
mov
cmc
sahf
mov
out
sbb
xchg
cmp
xor
xchg
cmp
std
fs
fs
pop
ret
mov
leave
mov
movb
lret
push
and
test
jge
adc
adc
mov
or
das
test
cmp
loope
dec
push
out
cmc
hlt
pop
cmp
dec
push
cs
mov
cmp
adc
ret
inc
cmp
lods
cwtl
pushf
jl
test
mov
lods
arpl
pushf
cmp
in
push
js
mov
lret
pop
add
inc
push
cld
fs
xchg
jbe
xchg
jge
xlat
popa
enter
je
mov
ja
lret
orb
jge
test
rol
out
xchg
cmp
icebp
popf
inc
pop
and
add
mov
test
daa
mov
cli
inc
bsf
fsubrs
cs
sub
cmp
in
sub
test
icebp
scas
xor
pop
adc
das
in
inc
push
ds
push
add
push
xchg
cmp
or
fdivrl
push
int3
fwait
mov
or
lds
cmp
dec
jo
aad
call
jecxz
xor
mov
mov
mov
insb
sarl
idivb
call
repnz
jecxz
out
mov
ret
cld
push
inc
push
xchg
aaa
and
mov
stos
stos
cwtl
inc
sub
mov
mov
stos
cs
push
fnstcw
mov
mov
mov
mov
stc
stos
clc
pop
xchg
test
mov
aaa
add
cwtl
dec
push
add
xor
lahf
andb
jge
jmp
punpckhbw
push
stos
sub
sub
pusha
pusha
dec
jo
cwtl
jge
pusha
inc
lds
outsb
popf
or
les
dec
jbe
pop
mov
mov
cmpl
lock
add
xchg
movsl
test
pop
jns
sbb
dec
push
leave
adc
lock
data16
jl
test
push
into
hlt
pop
sbb
pop
cmp
orl
xchg
cmp
mov
mov
mov
outsb
jns
hlt
pop
iret
imul
inc
dec
add
mov
lcall
andb
sti
fs
lods
mov
xchg
jmp
jb
xor
and
sub
pop
cmp
rorb
mov
pop
mov
jb
sub
shrb
cmp
fstpl
push
popa
pop
outsb
jmp
add
cmp
mov
aam
imul
pop
out
push
test
mov
mov
push
add
ss
leave
adc
mov
push
daa
scas
pushf
pop
stc
nop
xchg
les
scas
xchg
pop
push
jg
xchg
cmp
mov
inc
roll
movntq
or
mulb
adcl
mov
push
xchg
inc
jp
jmp
pop
or
push
add
in
pop
jns
lcall
hlt
mov
cmpsb
cs
add
jae
out
pop
dec
or
cmc
out
or
adcb
movsb
xor
mov
jne
adc
pop
incb
jb
mov
cmpsb
mov
andl
shrl
mov
movsb
lods
sbb
mov
daa
stos
scas
jp
pop
sarb
xor
inc
outsb
ja
out
sarb
dec
adc
movsb
enter
repz
mov
clc
gs
pop
add
or
mov
and
sti
pop
cli
cmp
roll
and
loopne
jge
fdivrs
data16
mov
xor
xlat
sbbb
cmp
xorl
scas
inc
adc
cltd
int
mov
pop
lock
lods
dec
loopne
lret
ja
std
pushl
sahf
repnz
rolb
sbb
lret
lcall
push
popf
je
sub
int
inc
xor
mov
icebp
xchg
fnstsw
lds
cmpl
dec
fldcw
dec
xchg
pop
cli
inc
xchg
or
jmp
clc
loopne
sub
jle
dec
dec
adc
popf
inc
inc
je
mov
xorb
out
adc
in
call
sbbl
insl
out
cwtl
scas
arpl
jbe
mull
imul
mov
cmp
jo
dec
or
outsb
mov
cmp
add
mov
in
inc
adc
mov
jg
cs
xor
sbb
cli
or
leave
in
xor
into
xchg
cmp
ret
cmp
and
addr16
xchg
es
and
js
push
pop
mov
int3
shrb
add
cmp
inc
xor
ret
js
roll
or
sub
push
std
repnz
or
mov
jecxz
adc
mov
leave
sub
inc
or
inc
mov
jge
sbb
pop
dec
inc
or
mov
mov
mov
shll
mov
jne
and
mov
out
mov
stos
push
xchg
inc
xchg
mov
in
xlat
int3
fstpt
vmread
jns
fstpt
fs
inc
cmp
sub
sub
cltd
cmp
into
je
repnz
mov
fdiv
push
je
in
or
cltd
fwait
mov
mov
mov
outsl
ljmp
clc
pop
add
pop
out
push
stos
addb
enter
aam
roll
fistpl
mov
inc
es
icebp
push
sub
popa
pop
aaa
sbb
add
push
jecxz
addr16
mov
cmpb
ds
add
sbb
cli
in
pop
rolb
lock
jp
pusha
or
jle
push
jne
sub
ss
mov
test
lods
sub
test
xor
nop
sahf
jo
and
add
sub
sub
out
jae
and
repz
aas
mov
out
inc
jl
pop
incb
lods
mov
ret
dec
mov
in
outsl
test
movsl
daa
std
sarl
dec
iret
adc
add
pop
das
mov
xchg
jg
xor
iret
nop
push
and
jg
xchg
shlb
movsb
sub
sub
or
dec
and
inc
xor
xchg
xchg
lahf
mov
cmp
lea
and
cli
xchg
in
test
add
xor
mulb
imul
lock
mov
jecxz
dec
loop
sbb
outsb
adc
dec
pushf
add
lcall
stos
in
jle
les
lahf
jne
arpl
or
or
jp
cmp
xor
mov
and
outsl
cmp
jmp
sbb
insl
sti
out
xchg
jge
cltd
pop
sbb
aam
dec
adc
jbe
aad
dec
data16
adc
scas
xor
mov
sbb
mov
pusha
in
pop
shlb
pop
call
sbb
aaa
inc
imul
and
inc
outsl
pop
add
in
ds
rcr
iret
nop
fimull
push
cli
aad
fwait
inc
cli
add
jp
out
pop
mov
jle
cmp
lea
test
les
mov
in
insl
mov
dec
or
test
mov
mov
movsb
cs
fnstcw
sahf
data16
ss
and
mov
mov
insl
mov
mov
pop
lods
sbb
arpl
aas
mov
dec
push
pop
add
sahf
popf
aas
mov
push
lcall
add
movsl
sub
cltd
add
mov
lods
addr16
or
lea
rcr
jns
adc
leave
scas
sbb
cmp
inc
adc
mov
mov
sbb
push
xchg
negb
mov
mov
popa
out
imul
jg
adc
jbe
sub
lret
sarl
push
mov
mov
push
cmp
int3
xor
fidivrl
and
sti
mov
or
std
and
lret
mull
test
not
add
sti
loop
shrb
mov
pop
sti
add
leave
mov
pop
mov
out
dec
or
jno
enter
adc
xor
sar
xor
loop
push
push
cmp
jb
mov
xchg
push
xchg
orb
std
pusha
sti
sbb
push
jp
pushf
inc
push
jo
fidivl
mov
sub
inc
ljmp
out
adc
ss
mov
notl
popa
in
faddl
push
shr
inc
pop
xchg
sti
test
fidivl
stos
or
icebp
std
fistpll
ljmp
cmp
adc
and
inc
adc
and
stos
dec
mulb
mull
bound
or
push
add
xlat
stc
pop
pop
adc
jb
out
int
xor
push
mov
xlat
push
push
pusha
out
imul
xchg
xor
cs
nop
ja
lret
xchg
outsb
mov
out
outsl
ljmp
std
pop
mov
shlb
fbstp
and
test
testb
popa
sub
and
std
cmp
sub
sbb
add
mov
xchg
mov
fdivrl
cmpsb
lcall
xchg
jle
lds
adcb
lcall
push
adcl
inc
push
jno
cli
push
les
lret
pop
or
jge
or
test
pop
mov
adc
adcb
loopne
push
sbb
or
aaa
popf
out
xor
std
cmc
jo
xor
push
jg
negb
outsb
or
jae
jecxz
fsubl
les
adc
add
add
mov
lods
push
shll
or
js
repz
sti
outsb
int
cltd
out
or
aam
adc
jne
cmp
gs
loope
loop
jne
lret
cld
aam
adc
jmp
cmc
popf
cmp
loope
mov
nop
nop
inc
fcmovb
mov
dec
xchg
jns
mov
mov
mov
les
mov
mov
dec
push
fisttpl
addl
sbb
lcall
ss
add
adc
mov
inc
in
insb
movsb
add
cltd
stos
mov
lahf
cmp
les
fldcw
in
ja
push
jle
push
add
gs
cmp
loope
xchg
adcl
popa
ds
mov
lds
fwait
dec
jecxz
movb
sbb
ja
xor
pop
add
mov
xor
mov
sub
shlb
pusha
add
jmp
push
mov
lahf
cmp
cmp
mull
imul
outsb
popa
gs
xchg
iret
scas
xchg
or
jno,pn
mov
and
mov
pop
rorl
dec
adc
pop
or
push
mov
push
dec
inc
or
orl
dec
inc
andnps
sbb
cltd
cmp
xchg
test
cmp
lds
mov
mov
inc
in
in
pushf
jle
add
xor
ficoms
dec
add
sbb
push
enter
mov
jl
daa
mov
or
xor
dec
std
xchg
out
popf
or
fsubp
insb
cmp
mov
cmp
rcrb
xchg
fmuls
aam
pushf
xor
loop
hlt
sub
inc
enter
xchg
call
adc
rorb
repz
cmp
inc
test
out
push
jmp
sti
xchg
cmp
movsb
sub
in
into
call
dec
mov
jns
test
push
shr
adcb
rorb
fisttpll
mov
scas
popa
or
mov
pop
movsb
daa
push
cmp
and
mov
stos
mov
pop
xchg
fs
push
int
cmp
cmp
lcall
or
subb
and
clc
fs
sbb
popa
lcall
inc
pop
popa
fs
fdivrs
lret
xchg
cmpsb
sub
push
cli
movb
pusha
pop
call
ret
mov
or
inc
jbe
test
lahf
nop
inc
out
push
lock
testb
mov
and
mov
mov
mov
mov
xchg
mov
inc
gs
insb
jmp
cltd
jb
fs
mulb
jl
das
shlb
cmc
push
mov
mov
je
pop
inc
repnz
lret
imul
sti
sbb
add
push
negl
mov
and
sbb
fimuls
lock
mov
faddl
cmp
sbb
in
stos
dec
loope
mov
test
sti
add
xchg
in
push
sub
mov
xor
jbe
ja
nop
xlat
jp
mov
pop
cmc
xor
cmc
and
jl
push
inc
fs
stc
push
popa
ljmp
and
fcompl
je
or
mov
les
mov
adc
mov
push
aam
mov
jp
imul
mov
arpl
int
and
jo
pop
rorb
mov
mov
pop
aas
inc
or
inc
or
mov
rorb
scas
push
cld
das
sar
arpl
lds
loopne
imul
clc
rorb
mov
mov
sahf
pop
scas
inc
or
mov
mov
sub
mov
adc
pusha
pop
jle
mov
mov
xchg
add
add
cmpsl
pop
jge
pop
rolb
xchg
lahf
aaa
hlt
out
outsb
scas
xor
jmp
fimuls
xchg
inc
call
icebp
jl
popa
jle
jbe
jp
xor
repnz
adc
imul
mov
mov
cmp
cmp
push
into
mov
or
push
sbb
dec
or
fnsave
dec
adc
inc
mov
push
adc
fldlg2
sarl
or
add
je
sbb
fidivrl
mov
pop
lods
sarb
mov
outsb
lock
cmc
xchg
test
loope
xchg
inc
es
aas
popf
xor
mov
negb
push
aam
in
enter
arpl
sub
cltd
pop
xor
pop
pop
inc
call
iret
push
cltd
adcl
jmp
cwtl
cmp
pop
mov
push
mov
push
ficoms
push
ljmp
cs
lock
or
mov
daa
mov
stos
mov
and
and
cmp
jae
cli
dec
xor
cs
xlat
and
xchg
repnz
jno
jmp
dec
in
addr16
fistpl
leave
inc
or
cmpb
pusha
hlt
or
insl
jae
sub
adcb
xor
mov
pop
xor
lahf
lret
sub
jnp
pop
push
fisubrl
sub
or
add
imul
pop
pop
push
lea
mov
cmp
nop
mov
cmp
pop
jmp
push
jb
dec
sbb
jae
scas
dec
pop
push
daa
mov
dec
adc
mov
jns
loopne
iret
xchg
div
push
shrb
shr
inc
sbb
inc
xchg
push
mov
xchg
outsb
out
mov
imul
loopne
mov
dec
push
loopne
lods
sub
stc
inc
adc
inc
insb
push
add
jae
addr16
bswap
mov
fnstenv
test
repz
cmp
sub
sbb
mov
jb
push
nop
sub
cmp
jno
lcall
pop
enter
pop
add
cwtl
aas
fcomi
add
dec
or
dec
mov
mov
loop
dec
inc
or
mov
xchg
push
add
push
mov
mov
sahf
or
mov
in
push
cmpb
stos
lcall
cmp
mov
or
mov
in
repz
mov
or
adc
jge
xor
mov
sub
out
out
out
mov
fiaddl
cmc
dec
add
pop
rorb
sub
xchg
sub
ret
stc
cmp
sub
dec
loope
dec
test
and
dec
adc
iret
call
fwait
pop
xor
cwtl
xchg
ffreep
xchg
inc
lock
arpl
movsb
and
mov
mov
sub
sub
ret
pop
add
dec
call
data16
cmp
das
repz
inc
sarl
fimull
xchg
push
xchg
rcrl
cld
inc
shll
mov
xorb
mov
xchg
xor
dec
aaa
enter
sub
ds
cwtl
inc
adc
cmc
pop
mov
stos
adc
sub
fstpt
cmp
mov
and
push
mov
out
push
cli
shl
lret
jmp
inc
pop
inc
adc
je
cltd
add
add
add
ja
in
jl
mov
gs
test
pushf
jp
flds
sbb
xchg
add
int
into
mov
dec
shl
xorl
mov
rorb
mov
xlat
mov
and
cmp
lods
add
and
inc
push
add
sub
pop
sub
dec
pop
inc
fstl
rcrl
arpl
orl
pop
lcall
flds
jnp
pop
mov
push
cld
inc
mov
fnstsw
cmp
es
xchg
sbb
sbb
xor
inc
call
icebp
cmp
in
addr16
inc
adc
mov
mov
sub
mov
mov
in
icebp
addb
loop
pop
lods
mov
cmp
mov
ret
mov
and
outsl
xchg
adc
movsb
mov
scas
xor
repnz
sbb
ljmp
jl
fnstsw
gs
inc
inc
fcoms
les
push
push
int3
xchg
mov
negl
lret
mov
lcall
cmp
shlb
in
jbe
loopne
lods
lods
fwait
aaa
lcall
mov
test
xor
int
xor
ret
leave
or
pop
out
clc
gs
and
push
push
xor
sti
mov
popf
cmp
adcl
je
or
pop
outsb
scas
sub
lahf
cmp
xorl
fnsave
movsb
ljmp
xor
mov
adc
adc
dec
out
dec
cmpsl
xor
mov
cli
pop
push
dec
popa
cmc
fisttpl
jl
mov
sub
push
aas
outsb
xchg
cmp
xor
mov
jo
adc
es
mov
xor
jmp
mov
pop
jbe
imul
dec
jecxz
mov
inc
or
xchg
mov
mov
mov
dec
std
and
sti
shl
add
push
adc
sub
cld
adc
flds
and
inc
push
jnp
cmp
jbe
cmc
gs
outsl
movsl
xor
or
scas
std
push
add
inc
jbe
add
mov
mov
movsl
xor
inc
sbb
add
inc
cmp
popf
or
cmc
pusha
or
scas
mov
push
roll
ljmp
pop
jg
mov
pop
and
and
push
in
addr16
or
sbb
iret
cli
pop
frstor
sarl
and
lods
mov
jo
shrl
lods
and
hlt
popa
pop
cmp
enter
sub
wbinvd
mov
int
inc
or
push
cmp
shrl
popa
xor
test
sub
pop
mov
test
in
imul
sbb
xchg
daa
xchg
imul
fcmovnb
jb
pop
sub
cmp
mov
movsb
mov
fmuls
dec
add
mov
loop
test
stos
mov
test
mov
dec
adcl
dec
or
shlb
mov
mov
fstpt
mov
mov
addr16
cmp
aas
and
mov
movsb
lret
mov
js
stc
pusha
push
and
cmpsl
repz
nop
or
xchg
pop
pop
mov
mov
mov
sbb
mov
popa
out
nop
push
stc
push
or
jns
xchg
mov
fucomp
outsl
add
pop
faddl
test
mov
push
aam
mov
pop
mov
xor
movsl
sub
push
insb
jo
jmp
sti
mov
movsl
xor
insl
out
icebp
and
mov
in
dec
bnd
rclb
mov
es
daa
test
in
jno
movsb
pop
add
mov
repz
mov
sub
or
jo
inc
std
pop
std
ret
mov
add
mov
out
stc
pop
push
dec
mov
cmp
jg
dec
or
addr16
pop
imul
pop
cmpsl
mov
and
xchg
adcl
out
fidivl
pop
xor
cmp
into
xor
fidivrs
fstpt
mov
jb
jo
ljmp
dec
pop
in
aaa
scas
sub
clc
hlt
cwtd
gs
adc
vminpd
stos
push
lods
fiaddl
cmp
dec
adc
lret
mov
jno
xor
mov
mov
xchg
xchg
add
stos
jge
pop
lcall
rclb
mov
sarl
loopne
mov
rolb
rol
mov
add
pop
xchg
in
adc
ret
sarb
cmp
xchg
loop
push
mov
mov
or
iret
xor
mov
push
cli
dec
insl
push
sahf
inc
xlat
jge
fiadds
jbe
push
or
icebp
mov
ja
dec
mov
push
push
xchg
and
xchg
fsubrp
push
shlb
jmp
mov
mov
fisttpll
ret
mov
jnp
push
in
mov
rolb
mov
cld
daa
lods
add
push
jbe
aaa
inc
mov
adc
dec
cmp
mov
stos
xor
cmc
sbbl
int
cmc
push
or
mov
popa
pop
enter
push
and
xlat
js
cmp
cmpsl
dec
adc
inc
or
fadds
jg
ret
imul
dec
inc
xor
mov
lods
mov
adc
data16
xchg
sub
daa
dec
jecxz
cld
lods
sub
jecxz
inc
adc
inc
test
fisttpll
test
cwtl
inc
test
adc
jg
sbb
push
insl
cwtl
inc
outsb
push
or
es
push
mov
scas
std
bound
lods
xor
adc
mov
stos
mov
and
jb
xor
sahf
iret
sub
add
or
or
pusha
orl
cmpb
mov
out
aam
pop
lock
in
out
gs
clc
inc
cld
xchg
cmp
mov
orb
mov
dec
in
cmp
imul
rolb
test
fs
iret
mov
ret
and
mov
mov
adc
je
sub
jbe
test
repnz
fsubrp
fcom
xchg
mov
xorb
out
lahf
push
jo
xchg
inc
xchg
push
or
popa
hlt
cmp
and
loopne
jp
sbb
arpl
adc
mov
cmp
ljmp
jbe
movsl
mov
or
or
and
add
popf
insl
push
mov
mov
mov
mov
pop
cld
pop
xchg
ljmp
sub
lahf
pop
frstor
test
stos
ds
loopne
pop
shll
jmp
or
scas
stos
bound
adcb
hlt
pop
sbb
cmp
sub
jno
mov
mov
lds
stos
push
push
lods
inc
insb
loope
sahf
movsb
sub
out
lods
push
inc
dec
mov
lds
dec
jb
cs
pop
and
test
sbb
jbe
fs
xor
shlb
test
mov
mov
les
push
cli
push
jge
ret
pop
add
mov
ficompl
lret
sbb
mov
sbb
sub
cmpb
daa
inc
imul
cmp
sbbb
jle
mov
mov
mov
stos
pop
add
ss
jae
jne
popf
repnz
test
pop
add
mov
pusha
sbb
mov
cmpsl
cs
lahf
and
clc
int3
mov
in
jns
mov
mov
mov
push
inc
dec
adc
test
scas
cmpsl
xchg
dec
adc
mov
movsl
negb
cwtl
inc
pop
xchg
aad
aam
scas
cmp
das
stc
popa
stc
arpl
stos
sbb
fnstenv
cmp
testl
lock
add
inc
xor
and
push
jmp
mov
fcmove
pop
or
es
out
pop
pop
lods
inc
popl
lret
shlb
mov
ss
xlat
push
push
or
cmpsl
test
jl
cli
sti
inc
fldt
fwait
xor
stc
jle
mov
pop
rol
xlat
outsb
hlt
repnz
xor
dec
inc
mov
stos
lcall
leave
in
jmp
sbb
ds
lods
outsl
pusha
outsl
push
xchg
nop
xor
shll
jmp
cmp
pop
pop
lret
xchg
jg
fisubrl
xor
and
jg
movsl
inc
fcmovbe
roll
popf
add
popa
clc
sub
and
push
dec
jg
jl
inc
fldcw
lret
sti
lock
push
dec
inc
fnstenv
jo
xor
xchg
testl
sbb
fidivl
cmp
lret
clc
pushf
lea
mov
fildll
adc
xor
and
bound
xchg
test
or
fmul
pusha
or
nop
daa
cmp
out
pop
pop
scas
inc
lea
pushf
scas
scas
int3
arpl
shlb
mov
xor
inc
fcoms
or
movsl
cmpsl
daa
mov
clc
stc
inc
fsubrl
sbb
jl
mov
sbb
rcr
repnz
and
mov
mov
lods
cwtl
xchg
mov
stc
nop
sbb
jmp
insl
pop
jo
nop
mov
and
adc
jno
fs
lret
bound
stos
jmp
inc
or
pop
sahf
xor
bound
and
xorb
pop
sahf
add
popa
clc
daa
and
jg
jp
inc
fisubrl
leave
popa
clc
cli
out
mov
pop
dec
inc
fnstenv
outsl
sahf
xor
mov
push
hlt
out
lods
sbb
cmp
lret
stc
nop
fwait
mov
mov
int
xor
jmp
subl
in
leave
pusha
or
xchg
sub
sub
jle
pop
scas
inc
mov
lods
lods
int
and
xor
inc
fsts
or
mov
les
div
inc
sbb
sti
jp
mov
sbb
mov
mov
popl
push
jae
push
lods
xchg
xchg
fdivl
mov
lret
call
or
cmp
sbb
mov
es
push
jmp
add
or
int3
arpl
test
scas
inc
or
or
pop
dec
es
scas
mov
or
and
inc
adcb
jne
stc
clc
in
mov
sbb
jno
insl
lahf
ss
xchg
clc
pop
sarb
push
adc
jae
aaa
xor
push
mov
mov
or
mov
nop
subl
push
add
call
inc
mov
popf
stos
stos
into
gs
and
std
in
xorl
inc
ficoml
or
mov
ret
jg
cmc
cmc
inc
frstor
pop
sahf
xor
js
mov
sbb
mov
mov
nop
inc
aas
mov
scas
xchg
xchg
fdivl
mov
int3
out
cli
xchg
pop
or
cmp
scas
imul
int
scas
nop
daa
loopne
push
jmp
add
or
int
xchg
jmp
fcmovbe
scas
inc
push
cld
or
pop
dec
daa
mov
lods
mov
or
and
daa
mov
jbe
inc
fsubl
arpl
imul
mov
sbb
imul
ret
push
lock
scas
adc
fnsave
xor
xchg
xchg
xchg
mov
fnstenv
or
cmp
cmp
es
pop
push
in
mov
inc
mov
je
loope
lret
bound
xchg
sub
push
mov
mov
sahf
test
lret
sti
cld
in
test
sbb
or
mov
roll
and
lahf
ss
inc
gs
jbe
mov
sbb
mov
mov
xchg
inc
cmp
sbb
ret
int
jecxz
xchg
adc
sbb
mov
xchg
sub
ficoml
or
mov
xor
or
into
test
sub
shrb
mov
pop
dec
sub
stos
sahf
inc
int3
or
and
sub
je
inc
frstor
ret
fs
hlt
call
sbbl
cmp
jae
imul
push
out
loope
scas
adc
fidivs
xor
int
arpl
xchg
xchg
test
mov
mov
xlat
jb
or
cmp
cmp
nop
daa
pop
pop
push
out
mov
inc
scas
lods
jne
int3
arpl
add
push
push
mov
xchg
lahf
cmpsl
cmpsl
shlb
enter
cli
out
test
inc
fmull
mov
sahf
lahf
sub
sarb
dec
fbld
adc
std
je
mov
sbb
mov
mov
xchg
aas
cmp
push
insl
pusha
sbb
shlb
xchg
adc
sbb
mov
xchg
sub
fcoms
or
mov
xor
je
pop
push
into
cmpl
mov
in
adc
mov
add
or
push
dec
sub
stos
pushf
inc
lret
or
pop
push
sub
dec
inc
sbbb
jo
fisubs
ret
repz
push
sbb
fdivl
push
cli
xchg
mov
fistps
scas
adc
fbstp
xor
int
std
xchg
xchg
adcl
sbb
pop
or
sarl
sub
out
mov
inc
lods
lods
jbe
fmulp
int3
arpl
add
adcl
or
fadd
es
sub
inc
fmull
or
cli
pushf
sahf
sub
iret
mov
dec
loopne
adc
jae
mov
sbb
mov
jae
out
cmp
or
xchg
cmp
pop
sbb
mov
loopne
xchg
adc
push
in
xor
sbb
xchg
xchg
sub
xlat
push
out
or
mov
sub
pop
dec
into
cmpl
adc
mov
add
or
push
dec
sub
test
lret
sti
in
fs
sbb
sbbb
outsl
dec
fbld
shll
in
push
push
adc
sbb
aaa
fdivl
addr16
mov
xchg
mov
fstpl
scas
push
push
loopne
inc
das
ss
popa
xchg
xchg
adcl
shll
add
es
daa
pop
pop
pop
lock
inc
stos
stos
ja
int3
arpl
xchg
sub
and
adcb
dec
xorl
movsb
movsb
shrl
lds
mov
sub
inc
fisttpll
or
sti
fwait
pushf
sub
int
sbbb
out
dec
loopne
adc
jno
mov
sbb
mov
je
in
cmp
or
xchg
cmp
rcrl
sbb
mov
fdivrp
xchg
adc
push
out
xor
sbb
xchg
xchg
sub
aad
out
push
sti
mov
sub
dec
iret
data16
lods
mov
mov
add
or
push
inc
sub
js
in
test
enter
jmp
cld
sbb
sub
dec
cmp
dec
fistps
mov
mov
sbb
fnsave
mov
xchg
mov
fcompl
mov
or
ja
cs
into
pop
pop
xchg
xchg
adcb
mov
mov
shlb
add
cmp
ss
pop
lock
inc
stos
test
int
std
cld
xchg
sub
pop
in
adcl
dec
xorl
push
cmc
cmc
out
xchg
pop
inc
fimuls
or
cld
lcall
sbb
in
dec
loopne
cpuid
cmp
addr16
outsl
rclb
test
mov
jne
jecxz
cmp
rcrl
sbb
mov
fdivr
xchg
push
add
xor
sbb
test
xchg
sub
rcll
add
mov
sub
jne
pop
dec
shlb
jns
sub
int3
mov
repz
and
shlb
inc
sub
jbe
out
test
or
imul
data16
sbb
sub
dec
cmp
pushf
mov
out
loope
push
adc
xchg
data16
mov
ficompl
mov
or
js
sub
iret
pop
pop
call
scas
mov
mov
shlb
add
xor
xchg
sub
pop
icebp
xchg
inc
test
js
fxch
into
gs
cli
xchg
sub
dec
dec
mov
jg
or
rol
sub
repz
inc
push
movsl
ja
data16
cwtl
cwtl
sub
leave
mov
dec
loope
or
push
pop
xchg
mov
jbe
loope
cmp
pop
xchg
cmp
pop
pop
sbb
mov
cmp
fstp
xchg
or
pop
out
xor
sbb
pop
push
jbe
addl
sub
rcrb
add
mov
sub
shlb
js
sub
lret
mov
std
icebp
or
and
shrl
inc
sub
je
out
xchg
or
std
sbb
sub
dec
cmp
fwait
mov
in
ffreep
push
adc
xchg
inc
xor
jne
bound
xchg
mov
ret
pop
out
sbb
cmp
cmp
pop
pop
add
lods
scas
push
mov
into
je
add
cmp
sub
pop
repnz
cmpsb
movsl
jns
xlat
into
gs
clc
xchg
sub
in
test
mov
jge
or
rol
sub
icebp
icebp
icebp
mov
adc
inc
inc
jne
data16
xchg
xchg
sub
sbb
call
mov
add
pop
nop
lea
jbe
loopne
cmp
add
ret
pop
gs
sbb
mov
cmp
fcmovnu
call
cs
jbe
cmpl
sub
rcrl
add
mov
sub
push
push
dec
shlb
ja
sub
pushf
out
test
lret
cld
out
or
and
shrb
inc
sub
jb
lock
les
movsl
cmc
in
std
push
pop
sub
sbb
dec
loop
mov
add
ffree
push
js
jne
bound
xchg
mov
les
sbb
cmp
cmp
pop
pop
add
stos
scas
pop
mov
int3
je
incb
ds
pop
xchg
sub
pop
repz
movsb
movsb
jp
div
cwtl
das
sub
out
test
mov
jl
or
popf
popf
aam
iret
mov
repnz
adc
inc
inc
adc
xchg
xchg
cs
test
out
jecxz
or
imul
mov
ja
fbld
xchg
xor
push
sbb
jns
test
rcr
fadds
xchg
or
pop
lock
push
mov
dec
ja
jg
cmp
scas
mov
pop
icebp
add
mov
and
push
inc
shrl
jne
sub
int3
enter
in
or
push
aas
sub
jo
icebp
mov
ret
repz
adc
lds
test
addr16
jecxz
mov
add
fcmovnb
pop
or
fbstp
pusha
cmpsl
ds
cmp
pop
in
sbb
cmp
cmp
push
pop
add
test
lret
cld
ds
push
xchg
sub
pop
repz
adc
shlb
cmc
cwtl
das
daa
sbb
xchg
mov
jp
or
imul
sub
out
out
repnz
adc
inc
inc
adc
xchg
xchg
cs
xchg
push
or
add
ret
pop
lea
loope
loopne
cmpsb
cmp
xor
les
push
push
mov
and
mov
cmp
xlat
add
sub
push
mov
dec
js
jge
cmp
lods
sahf
xchg
sub
icebp
mov
and
jns
push
inc
shrb
jae
movsl
xchg
lock
mov
clc
ljmp
dec
cmp
ret
insl
insl
repnz
rclb
icebp
loopne
call
adc
movb
fs
in
test
jmp
or
ja
pop
test
nop
jle
xchg
mov
pop
jecxz
sbb
add
cmp
push
pop
add
cmpsb
stos
and
stc
cld
aas
sub
dec
pop
hlt
jg
mov
mov
rcl
repz
xor
inc
mov
js
push
movsl
cltd
cltd
aad
lret
mov
repz
or
adc
xchg
xchg
das
mov
xchg
in
dec
in
push
cmpsb
cmp
addr16
les
mov
jns
cwtl
xor
lds
pop
mov
and
aam
aam
cwtl
add
daa
pop
mov
dec
jns
jnp
cmp
cs
lret
pop
repnz
out
mov
and
jp
push
inc
shrl
jno
das
mov
les
cmpsb
sbb
aad
dec
cmp
mov
mov
imul
inc
xor
in
test
add
xlat
ret
pop
or
mov
cmp
loope
pop
pop
test
xchg
scas
scas
pop
loope
sbb
jge
and
rclb
add
xchg
movsl
test
mov
clc
cli
inc
xlat
sub
xchg
sub
jge
mov
lahf
sahf
jl
rol
shrb
icebp
lcall
inc
mov
cmpsb
cwtl
xchg
insl
leave
mov
hlt
mov
dec
jecxz
cmp
push
nop
xor
shlb
in
add
insb
add
lds
mov
mov
fldcw
cwtl
xor
pop
mov
and
mov
cmp
cltd
add
pop
repnz
and
jp
ds
fwait
xchg
cs
pop
repz
out
mov
and
shrl
jo
xor
ret
mov
cmc
out
cmpsb
sbb
insl
dec
cmp
mov
adc
movups
enter
push
bound
out
andl
out
ret
pop
or
mov
cmp
loope
pop
pop
stos
inc
lea
scas
scas
enter
sbb
jle
and
rclb
add
lock
cmpsl
and
idiv
inc
fsubrs
sbb
idivb
dec
sahf
popf
jge
iret
mov
fwait
xor
adc
mov
mov
cmpsb
xchg
xchg
xlat
outsb
enter
jmp
or
cmp
stos
insl
pop
push
mov
enter
pop
loop
dec
out
add
ds
fs
lds
mov
mov
jecxz
test
cwtl
das
sub
pop
pop
push
pop
mov
jg
jl
mov
add
es
jns
jns
aas
test
xchg
cs
leave
pop
hlt
cli
in
mov
pop
sbb
adc
shrl
outsl
lcall
ret
hlt
out
cmpsb
pop
push
xlat
outsb
dec
cmp
mov
mov
imul
inc
das
xchg
popa
popa
push
out
andb
in
ret
pop
pop
pop
lea
sub
js
pop
stos
inc
mov
xchg
lods
lods
leave
pusha
sbb
jg
and
push
push
push
popf
test
icebp
mov
les
div
inc
fldcw
sbb
idivl
mov
popf
fwait
jle
int
shrl
out
pushf
xor
adc
mov
push
jae
adc
mov
testb
cmp
imul
mov
leave
mov
ficoms
lsl
add
mov
in
fcmovnbe
stos
inc
or
add
pop
dec
and
scas
mov
add
add
pop
repz
inc
jp
js
inc
xlat
cmpsb
cltd
cwtl
das
lret
pop
cmc
clc
in
mov
push
sbb
dec
aas
aam
jno
fwait
xor
sarb
push
adc
outsl
inc
aaa
lds
testb
mov
push
or
mov
pusha
pop
push
call
mov
outsl
push
jecxz
les
add
loop
pop
pop
lods
inc
mov
xchg
stos
stos
lret
int3
push
mov
call
aam
push
push
popf
xorb
mov
ret
jns
cmc
cmc
inc
fldenv
pop
cwtl
das
dec
inc
pusha
idivl
mov
pushf
cltd
jle
lret
mov
pushf
xor
adc
mov
mov
test
xchg
fsubrs
mov
out
testb
cmp
imul
leave
mov
fcoml
or
outsb
add
xchg
in
fcmovbe
stos
inc
push
cld
add
pop
dec
and
lods
mov
add
push
pop
hlt
and
and
jbe
inc
fsubs
pop
div
ljmp
dec
cmp
pushf
xor
mov
adc
inc
xor
idivl
jns
jge
mov
xor
and
mov
jl
lds
sbb
mov
sbb
add
test
out
adc
lret
push
xchg
call
sub
dec
lahf
xchg
and
cwtl
xor
sub
loop
jo
ss
sbb
mov
aas
popl
test
shrb
adc
lods
push
test
test
fld1
sub
pop
xchg
mov
jecxz
sub
out
mov
xchg
add
sbb
mov
adcl
jp,pt
xor
cwtl
cmp
pop
subl
imul
pop
dec
jnp
jl
aaa
lret
es
pop
xor
rorb
inc
repz
decb
adc
lock
mov
stos
out
repz
out
mov
adc
sub
pop
rcrb
movsb
mov
mov
into
inc
sub
and
mov
xor
cmp
mov
sbb
push
out
mov
push
addl
pop
mov
repnz
movsl
inc
fwait
in
mov
loope
sbb
cmp
cwtl
adc
lret
outsb
lea
loopne
insl
mov
movsl
sbb
sti
int3
mov
loope
fs
dec
mov
mov
push
adc
lods
inc
test
or
fwait
iret
inc
out
push
mov
cwtl
push
jl
and
cs
cmp
pushf
add
pop
fmul
loopne
pushf
push
stc
or
sbb
add
and
mov
dec
adc
in
icebp
ja
dec
incl
enter
adc
inc
mov
or
xor
in
inc
inc
fnstenv
outsl
idiv
mov
add
or
cwtl
pop
std
cmpsl
pop
call
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
dec
inc
enter
data16
push
inc
mov
insl
sbb
sub
arpl
pop
mov
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
out
pop
test
inc
lea
inc
leave
xor
inc
addr16
lret
and
out
lods
movsb
jnp
xchg
cld
inc
dec
lcall
push
sti
pop
cmp
mov
rorl
mov
jae
xor
scas
jp
dec
cmpsb
mov
rorb
enter
xchg
xchg
push
movsb
pop
inc
test
out
rolb
jb
push
mov
aad
outsl
mov
lahf
arpl
pop
rcll
fimull
cmp
mov
push
outsb
sbb
and
into
fmuls
dec
sub
sbb
popa
and
fs
xchg
int
sbb
fidivl
adc
shll
sbb
jecxz
pop
sbb
int
sbbb
repnz
xor
ja
mov
ficoms
and
mov
sbb
and
sti
xor
fdivs
xor
test
mov
sahf
subl
mov
sub
pushf
orl
mov
inc
xor
andl
dec
adc
subl
sbb
xor
jl
fs
inc
mov
stos
push
arpl
lret
loopne
ret
inc
aad
sbb
fcomp
sub
cmp
add
push
bound
lcall
pop
fsubs
push
or
inc
out
movsb
out
jb
loope
sbb
adc
push
push
inc
mov
push
lahf
jmp
add
adc
mov
xchg
push
arpl
int
cmc
jecxz
mov
mov
jge
jl
pop
clc
jmp
shll
rcl
repz
js
nop
std
push
sbb
xchg
push
push
xchg
push
jecxz
mov
adc
rcrl
dec
arpl
dec
inc
aam
xor
mov
mov
icebp
or
cmp
fwait
icebp
pusha
int3
aaa
lods
mov
xchg
mov
cld
dec
cmc
mov
rorl
repnz
jne
insl
outsb
push
and
sub
mov
add
sbb
shlb
out
pushf
and
cli
fisttps
outsb
lret
