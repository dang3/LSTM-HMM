adc
lea
add
add
push
jns
add
push
in
mov
imul
xor
inc
jb
loope
mov
jle
xchg
iret
movsl
xor
xor
add
add
jae
bound
movsl
mov
mov
and
scas
mov
out
push
mov
mov
pushw
out
add
add
add
rcrb
fistl
out
popa
cld
cmp
bound
jg
rorb
in
cmp
jns
push
inc
pushf
xchg
dec
mov
sar
bound
mov
lock
mov
jge
aas
out
push
rcrb
int3
int3
add
add
pusha
sub
in
ret
jne
inc
inc
push
cmp
loopne
aas
aaa
scas
mov
inc
mov
jp
ret
in
insb
sub
shll
mov
jae
dec
mov
ja
test
cmp
arpl
fnsave
add
add
add
or
mov
mov
mov
add
dec
testb
xchg
xchg
cmp
jo
repz
jge
popa
and
push
add
add
xchg
lahf
ror
dec
cmp
xor
stos
mov
rcl
ucomiss
push
and
inc
dec
test
sub
int3
int3
int3
int3
fldenv
mov
mov
lret
add
sub
into
scas
jbe
xchg
in
fsub
xor
or
imul
add
add
mov
jo
adc
lds
lock
movups
jo
adc
mov
jmp
das
mov
test
or
or
jmp
mov
hlt
mov
mov
das
cmp
xor
push
jp
add
add
add
and
mov
gs
fiaddl
arpl
add
push
mov
scas
jb
popa
xchg
adc
insb
xchg
enter
fidivl
mov
test
push
add
add
add
int3
int3
int3
int3
int3
adc
sahf
xchg
mov
cmp
push
inc
mov
cmp
pop
mov
jmp
xor
outsl
lds
add
std
or
icebp
push
sbb
cmp
repz
cmpsl
daa
sarl
insb
mov
divb
pop
push
fisubl
aad
cmp
sbb
addr16
test
or
je
fwait
xchg
add
add
add
add
push
int
aas
sti
repnz
mov
push
and
push
jns
mov
cmp
add
add
add
xchg
inc
fmull
int3
in
in
test
fdivs
int3
int3
int3
jnp
xor
push
out
xchg
pop
jle
lcall
push
lods
dec
in
enter
add
add
sbb
xor
mov
jb
repz
cmpsl
and
mov
xor
and
sti
sub
jle
jp
shrb
add
scas
pusha
leave
inc
and
test
cmp
xchg
xchg
cmp
notl
mov
sbb
inc
movsb
mov
sbb
xchg
inc
ljmp
fcmovne
decb
gs
add
add
add
call
out
out
scas
push
in
pop
je
fldl
in
lret
adc
cs
xor
mov
inc
mov
xchg
push
add
add
add
add
js
inc
int
jo
sub
adc
iret
data16
cmpsb
sub
ret
mov
sub
xor
shrb
movsb
loop
mov
or
int3
jecxz
jl
jb
jnp
ds
pop
aaa
and
scas
pop
add
add
cmp
imul
call
cmp
test
mov
stos
subl
jge
jno
fwait
lret
dec
sbb
out
hlt
ss
add
add
in
or
jae
pusha
lret
scas
pop
addr16
cmpsb
hlt
es
dec
out
js
or
add
add
cmp
outsl
sahf
ljmp
mov
cmc
inc
or
bound
jbe
mov
xor
xor
stos
pop
arpl
adc
add
add
popa
movsb
mov
out
mov
int3
int3
int3
int3
lahf
jmp
mov
data16
cmp
dec
ja
xchg
jle
test
bound
push
repnz
cli
sbb
mov
push
loop
xor
add
mov
mov
lret
lcall
mov
repz
jo
adc
imul
mov
add
add
cmp
addr16
daa
xchg
gs
push
xor
mov
imul
out
loope
jns
aas
mov
outsb
mov
test
add
ss
hlt
jmp
in
add
imul
int
fldt
popa
add
add
add
jle
scas
aam
std
ds
pop
out
cld
sub
sbb
and
dec
sbb
mov
add
inc
lahf
int3
int3
int3
int3
int3
in
mov
add
add
add
pop
and
xchg
adc
add
mov
sbb
out
call
decl
es
and
mov
xchg
dec
repnz
mov
scas
sub
jecxz
xchg
cmp
sub
out
repnz
add
cmp
dec
idivb
std
lds
data16
sub
aam
xor
lods
lds
jmp
xchg
push
jle
les
in
pop
mov
xor
idivb
frstor
add
add
jmp
sub
and
sub
cmp
adc
xchg
fsubl
imul
fs
pop
mov
lock
mov
mov
mov
jnp
out
je
inc
fldl
add
add
add
mov
add
mov
xor
cmpsb
repnz
xlat
push
ja
in
and
int3
int3
int3
int3
int3
xchg
sub
ss
mov
clc
pusha
inc
mov
xlat
jne
xor
std
aas
mov
push
ljmp
mov
popa
sahf
adc
add
add
movsb
sub
inc
sub
jecxz
mov
adcl
daa
push
sbb
sub
imul
mov
jp
out
cmc
jmp
cmp
mov
and
push
les
pop
add
add
pop
stos
pop
arpl
arpl
icebp
lea
mov
mov
sub
mov
add
xchg
divb
dec
mov
sbb
dec
sub
sub
lock
and
clc
dec
ljmp
add
add
pop
dec
data16
pop
cmpl
popf
fwait
loopne
imul
leave
ja
pusha
stos
mov
fs
add
add
add
mov
addb
xchg
jb
and
xor
dec
ss
and
lahf
insb
pop
int3
int3
int3
int3
int3
jb
and
mov
testb
mov
je
inc
push
add
add
add
jge,pn
popf
sub
stos
cld
mov
lret
xchg
stc
insl
ja
xchg
lds
aaa
mov
jae
and
cmp
fsubrs
idiv
mov
xor
jmp
xchg
xchg
testb
add
add
dec
xchg
dec
test
mov
cmc
repz
xor
adc
jle
and
xor
and
mov
pop
add
add
arpl
pop
data16
pop
push
adc
insl
test
lds
jbe
js
sbb
clc
imul
mov
inc
dec
add
add
add
testl
jno
cltd
pop
insb
cmp
adc
repnz
jnp
and
add
add
add
mov
cmp
mov
in
in
push
inc
mov
mov
xor
int3
hlt
pushf
das
rorb
test
sbb
add
ljmp
es
insb
loopne,pt
inc
in
jmp
mov
lock
mov
pop
les
cmp
call
js
xchg
pop
scas
mov
push
jb
jle
mov
insb
add
pop
int
arpl
add
add
and
jecxz
jl
push
xchg
inc
js
clc
jg
or
idivl
ret
nop
test
lock
in
push
popf
icebp
ret
sub
fsubrl
add
add
insb
out
je
in
mov
cmc
int
enter
lcall
or
icebp
rorb
call
pusha
inc
push
push
add
add
add
stc
nop
push
scas
notl
int3
int3
int3
int3
or
cs
jo
mov
jge
pop
push
jle
jno
inc
jae
ja
adc
lea
add
add
add
lret
gs
outsl
nop
nop
mov
dec
or
lret
sbb
icebp
notb
jmp
test
jl
fwait
popa
mov
orb
add
add
add
je
das
testl
and
jecxz
ss
cmc
or
xor
pushl
loop
cs
add
add
add
and
and
lea
andl
jnp
fsubrs
xsaves
in
xor
sbbl
mov
int
aas
in
cmpsl
lahf
ljmp
add
lahf
and
lahf
sub
jp
sub
scas
test
add
add
add
scas
std
mov
jle
pop
push
in
sbb
jg
iret
push
in
shrb
addr16
out
sub
test
int3
sub
xchg
mull
outsb
stc
pusha
js
in
mov
mov
add
add
sar
js
sbb
sbb
xchg
jp
push
xor
pusha
insl
movsb
add
imul
clc
lods
insl
mov
mov
add
add
insb
repz
jmp
pop
cwtl
xor
cmp
test
cmpsl
dec
ds
and
and
test
add
add
add
jo
pop
cli
frstor
xorb
inc
mov
js
and
mov
xchg
mov
test
loope
negb
sbb
repnz
loop
add
push
add
add
daa
mov
inc
or
mov
int
int3
mov
xlat
test
int3
int3
int3
int3
int3
int3
xchg
fxch
push
push
popa
jp
add
add
add
gs
or
fildll
pop
and
lds
aam
cwtl
xchg
and
pop
sbb
out
lret
and
add
add
stos
cmp
jmp
pop
xchg
pop
pop
mov
mov
mov
push
push
jl
dec
stc
cmp
or
add
add
add
test
xchg
push
mov
ret
and
iret
mov
outsb
push
mov
test
test
int3
int3
inc
mov
sbb
pop
stos
popf
cmpsl
lds
fldcw
sub
mov
ret
xchg
add
inc
rorb
xchg
or
cld
xor
mov
xor
mov
jns
jbe
fld
push
add
flds
add
ljmp
jge
testb
pop
test
aam
inc
inc
jo
insl
cmp
mov
in
clc
cmc
dec
dec
cltd
jg
sti
sub
add
add
imul
ror
cwtl
lock
fstps
hlt
sbb
imul
int3
int3
int3
and
jns
inc
sahf
leave
add
add
add
mov
sarl
dec
adc
and
shlb
data16
iret
lcall
les
jae
cmpsl
dec
dec
repnz
shrl
and
add
add
xchg
lock
leave
outsl
dec
cmp
or
jnp
mov
add
add
sub
sbb
push
mov
adcl
imul
sub
or
into
imul
movsl
fdiv
adc
cwtl
outsb
iret
arpl
je
int
xor
xchg
lea
int3
int3
int3
int3
je
inc
out
lahf
icebp
jge
lahf
cmc
icebp
cmp
add
xchg
xchg
xchg
mov
adc
xor
xchg
call
enter
int
xchg
insb
je
push
jle,pn
lahf
insb
pop
ret
dec
jmp
add
add
add
fwait
outsl
addr16
xchg
xlat
push
imul
push
pop
or
mov
data16
or
sub
push
das
mov
popa
push
sub
sbb
insb
pop
pop
push
adc
pop
xor
lods
inc
xchg
hlt
int3
mov
out
insl
iret
loopne
pop
outsb
pop
lods
adc
sub
hlt
xchg
rcrb
xor
add
add
add
add
add
push
push
fadds
lea
xchg
sub
fstpl
out
xor
cmp
dec
push
ret
sarb
stos
notl
add
add
add
mov
lret
out
dec
sbb
and
inc
xlat
notrack
mov
adc
lods
repz
arpl
add
add
add
jecxz
and
push
mov
das
pop
xchg
xchg
inc
shlb
lea
fdiv
lahf
pop
jl
add
lret
fstpt
inc
loope
loopne
arpl
sub
xchg
adc
lret
mov
xchg
insl
or
jns
add
add
mov
stos
xlat
pop
das
pusha
fs
int3
int3
int3
int3
int3
int3
push
nop
scas
adc
xchg
push
inc
or
sub
repz
pop
add
add
add
push
out
scas
adc
push
shll
jns
xor
jbe
out
inc
pop
sub
call
scas
lods
or
and
lods
clc
movsb
cmp
cmpsb
data16
movsl
daa
shll
xchg
iret
scas
lcall
add
add
stos
popa
pop
pop
fsubl
xor
inc
dec
rorb
adc
data16
push
icebp
adc
add
dec
inc
jp
mov
mov
cmp
push
xchg
add
add
add
lret
dec
xchg
aas
xor
xorb
push
mov
sar
inc
movsb
push
or
je
and
adcl
add
add
jo
mov
lret
pop
jnp
ljmp
int3
lret
aad
xchg
mov
mov
cmp
shl
aas
cmovno
adc
outsb
adc
mov
enter
data16
loope
mov
pop
dec
cmpsb
bound
sub
add
add
add
test
fadds
addl
xor
rol
jnp
dec
fucomip
add
pop
cmpsl
pop
pop
lods
sub
adc
dec
mov
faddl
test
add
add
adc
xchg
lahf
xor
push
mov
loop
xchg
insb
rorl
sbbl
cmp
xchg
cltd
rclb
leave
dec
push
fs
in
add
add
add
push
pop
in
sbb
addr16
xor
jno
mov
mov
push
sub
xchg
ret
inc
pusha
jg
fbld
cld
mov
add
add
add
pop
mov
mov
mov
insl
add
adc
adc
imul
inc
fmuls
push
dec
pop
imul
lahf
call
pusha
decb
sbb
sub
int
stc
dec
add
add
add
add
lret
push
popa
in
mov
daa
cwtl
adcl
cld
fcomi
iret
cwtl
mov
pushf
in
add
fdivr
cltd
pop
int3
int3
int3
int3
int3
int3
insb
scas
inc
int
inc
dec
imul
push
cltd
cmp
xchg
inc
popl
pushf
push
insl
popa
adc
add
add
add
xlat
and
inc
mov
in
adc
add
popf
xchg
insb
test
jge
jge
push
movsb
stos
mov
add
add
add
gs
inc
jecxz
or
fisttpll
xor
daa
xor
and
aaa
negl
arpl
xlat
mov
jbe
and
in
hlt
les
cs
cmpb
loop
stos
and
ljmp
add
add
lahf
hlt
cmpsl
andl
repz
xor
daa
lret
and
push
int3
int3
int3
int3
int3
cs
insl
ja
pop
stos
adc
xchg
cmp
into
jmp
and
int
add
add
js
inc
or
and
imul
cmpsb
cmp
cmc
cmp
out
movsl
mov
mov
push
ror
push
hlt
repz
sbb
mov
incl
add
add
cltd
add
lcall
jecxz
and
sub
fisubl
push
jp
test
push
aam
imul
xor
loop
and
xacquire
xchg
add
add
int3
int3
int3
int3
int3
int3
inc
and
cmp
jno
gs
fisubs
inc
mov
scas
mov
add
add
add
int
lcall
movsb
mov
sbb
sbb
inc
sub
cmpb
into
insl
cltd
mov
mov
pop
pop
sub
sub
cmpsb
int3
push
push
call
lds
add
add
add
add
test
jae
rcll
jnp
jecxz
mov
mov
ret
sub
push
cmc
stos
int3
int3
int3
int3
jae
jl
pop
jl
add
add
adc
into
into
mov
xor
mov
inc
and
and
jp
scas
ret
out
and
add
add
inc
popf
cmc
xchg
popw
sti
and
push
xor
jno
cmc
aam
pop
jno
lods
outsl
pop
mov
push
test
push
sbb
das
jge
rcl
idiv
xchg
xor
fs
adc
pusha
bswap
int3
int3
int3
int3
int3
test
daa
inc
divb
lret
subb
dec
xlat
sbb
pop
xor
ljmp
or
mov
test
imul
add
inc
lock
pusha
enter
cmp
mov
sbb
add
add
fucomi
cmp
xlat
adc
ljmp
ret
sub
pop
push
fndisi(8087
add
mov
lcall
stc
pop
add
jae
rcl
xor
pop
js
jg
hlt
sar
enter
pusha
bound
add
adc
cwtl
pop
mov
add
add
jb
pusha
lods
xor
sbb
lods
out
inc
cmc
movsl
jb
jb
or
or
and
ret
mov
pushf
lahf
repz
adc
fistpl
sti
pop
push
fldt
call
ret
add
sti
pop
inc
sub
cld
int3
int3
int3
int3
int3
ret
mov
dec
nop
push
lods
mov
add
add
rcrb
pop
ficomps
shll
fisubrs
fwait
xchg
lret
pop
cli
mov
mov
add
xor
push
add
add
add
imul
rorl
loope
in
mov
jle
mov
pop
lret
out
cmc
sub
pusha
dec
xor
out
aad
mov
jns
enter
xchg
fisubrs
pop
add
adc
pop
mov
andb
xchg
add
add
add
add
and
hlt
push
int3
int3
int3
lret
mov
xchg
mov
rep
jne
push
add
mov
pop
pop
or
xchg
dec
sub
jns
dec
xchg
or
add
int3
leave
add
sbb
pop
aam
adc
mov
push
xor
xlat
hlt
adcb
divl
add
dec
je
mov
out
mov
fstl
pop
add
add
add
jno
cwtl
out
lret
mov
dec
hlt
jnp
in
xor
mov
xchg
or
lret
jle
jg
push
in
repz
cmp
in
out
sbb
add
int3
int3
jecxz
xchg
xchg
push
str
xor
cld
add
add
add
das
aad
cmpsb
icebp
inc
mov
push
fildl
and
sub
xorl
pushf
les
jge
repnz
push
fisubl
sbb
push
cli
mov
add
jbe
inc
and
pushf
inc
ja
loop
es
shlb
aas
flds
push
inc
sub
push
in
jmp
orl
mov
cwtl
or
int
rcrb
fdivl
pop
or
arpl
add
cs
sub
jg
add
add
mov
int3
int3
int3
mov
xchg
aaa
lods
insl
clc
fnstenv
and
inc
xorb
add
test
pop
icebp
jl
movsl
xchg
je
pop
add
add
add
add
icebp
mov
adc
rcl
add
testb
aas
xor
test
jae
push
mov
jge
xor
or
add
fs
sub
mov
xchg
or
or
add
add
bound
sbb
cmp
ret
cmpsb
movsl
inc
add
insl
mov
xor
mov
inc
cs
outsb
paddsw
pop
dec
mov
popf
movsb
cli
movsl
iret
lods
dec
add
cmp
in
testb
add
inc
push
xchg
dec
bound
int3
int3
int3
int3
int3
int3
mov
fsubrl
push
sbb
mov
outsb
lods
ja
cmp
inc
cltd
je
dec
out
jl
enter
aam
incl
add
out
pushf
mov
lods
mov
pop
loop
jmp
and
fadd
cwtl
jne
or
rolb
pop
mov
sub
mov
aas
cmp
add
add
add
fnstsw
xchg
sub
mov
fwait
icebp
popa
imul
pop
out
ffree
mov
popa
mov
push
xchg
sub
xchg
stos
sub
mov
pop
mov
out
sub
and
sub
mov
push
add
movl
add
xor
cs
orl
andl
rorb
ficomps
mov
pop
int
dec
dec
push
mov
sbb
jbe
ds
mov
mov
add
add
test
stos
jl
jge
aad
and
int3
mov
in
and
adc
mov
push
imul
or
push
xchg
jne
negl
mov
outsl
orb
lret
push
add
mov
add
add
cmpsl
aad
leave
dec
jmp
sti
xchg
lods
xor
sub
push
loope
scas
scas
and
jg
bound
jecxz
cli
jbe
pusha
inc
jecxz
mov
sub
add
add
lods
jno
inc
test
stc
sub
mov
sbb
fcomps
xchg
xchg
jnp
sbb
xchg
mov
add
addb
jl
mov
repnz
orps
add
add
lret
add
add
jnp
data16
daa
push
js
imul
inc
std
leave
int3
int3
int3
int3
int3
int3
int3
int3
aas
clc
pop
adcl
add
inc
stc
inc
aam
jle
int
pop
ss
dec
adc
add
add
lock
pop
mov
clc
sbb
and
mov
jae
std
adc
xor
fwait
push
pop
mov
add
add
add
xchg
shll
or
cwtl
xchg
add
mov
pusha
and
and
add
mov
test
aaa
jae
jns
neg
sub
fcompl
scas
mov
adc
sub
ret
je
ss
add
add
push
pop
dec
inc
fsubl
and
xchg
jg
jo
jne
mov
xlat
mul
not
in
fsts
or
lahf
xchg
gs
insl
shrb
sub
mov
push
pushf
mov
roll
repz
xor
in
das
sar
jno
dec
incl
add
mov
inc
inc
sub
mov
shrb
push
int3
int3
int3
int3
int3
int3
data16
imul
inc
mov
ss
ss
out
repnz
jb
testl
sub
add
cmc
and
movsl
test
sbbl
mov
movzwl
add
adc
cmpsb
mov
stos
add
fstps
dec
imul
test
inc
dec
add
cwtl
xchg
aaa
pop
xchg
or
roll
ss
push
inc
inc
add
add
cmp
cld
push
cld
shll
push
gs
rcr
ss
mov
xchg
int3
int3
int3
int3
int3
pop
nop
aas
mov
pop
mov
push
mov
mov
jae
rorb
imul
push
mov
clc
shlb
daa
fisubl
dec
xchg
int3
cmpsl
xor
lea
repz
rcr
add
add
push
iret
mov
lret
jg
jo
test
jge
mov
add
jnp
int
aad
cmp
cmp
jne
sbbb
popa
inc
data16
add
int3
push
cmpsb
rcl
push
imul
xchg
or
ss
shrb
lret
pop
adc
jl
lods
test
lods
dec
bnd
adc
fsubs
xchg
adc
add
add
add
dec
sub
jns
lea
loop
int
test
jo
inc
ljmp
mov
dec
mov
jp
cld
or
xacquire
xor
rorl
movsb
and
std
fs
rcrl
xor
mov
inc
es
jl
xor
push
jmp
jle
sahf
scas
in
ds
sub
jne
cmp
repz
ficoml
fsubs
add
add
mov
int3
int3
int3
or
jmp
stos
in
xor
inc
js
sahf
push
test
ss
je
xchg
add
add
loopne
orb
push
xor
sub
clc
popa
inc
mov
ja
shrb
movsl
int
mov
out
xchg
ss
ds
jg
xor
add
add
add
icebp
adc
test
or
lret
jno
sub
pop
outsb
mov
cmp
xchg
mov
or
and
int
mov
xor
push
rcrb
cmp
mov
add
add
jmp
aas
adc
xchg
mull
in
insl
lret
jmp
pop
cmp
ja
les
add
add
test
cmp
xor
and
mov
int3
xor
mov
and
popf
push
clc
mov
sbb
or
lret
jmp
and
mov
iret
add
lods
pop
pop
jne
xchg
add
add
mov
dec
inc
sarb
rcll
pusha
insb
mov
call
in
pop
cmc
xchg
inc
sbb
push
push
xchg
stc
cmpsb
test
test
jge
insl
out
in
mov
hlt
mov
xchg
mov
and
and
shll
outsb
and
add
add
add
sub
cmpsb
add
aam
xchg
out
outsl
sub
lahf
jnp
lods
adc
push
sbb
sub
loope
jno
add
add
pusha
xor
data16
pop
ljmp
int3
jp
ja
sbb
aam
jg
sbb
into
jmp
add
add
mov
lret
xchg
subb
xchg
mov
push
es
cmovge
movsl
xchg
aaa
bound
add
add
cltd
hlt
inc
mov
cli
lret
int
cvtps2pi
or
and
mov
aaa
jb
mov
adc
push
sub
int3
int3
int3
push
mov
pop
loop
jmp
out
push
mov
mov
dec
cmpsb
gs
inc
popl
add
add
jp
sbb
xorb
lock
repnz
jno
inc
ljmp
popa
lock
sbb
sbb
int3
mov
loopne
stos
in
je
jns
stos
aad
stc
mov
xchg
mov
loope
cld
push
jb
sub
mov
clc
cmp
test
jle
xor
addr16
mov
jo
dec
mov
dec
lret
ja
sub
pop
mov
add
add
add
int3
int3
int3
imul
ret
gs
in
das
loopne
mov
mov
dec
push
aaa
testb
sti
push
pushf
add
add
add
add
and
sbb
mov
xchg
push
das
stc
scas
jbe
cltd
in
adc
out
sbb
mov
in
sbb
adc
add
add
jmp
push
nop
xchg
movsl
fldenv
mov
xor
testb
add
jecxz
push
clc
test
mov
fisubs
pop
test
stos
shl
mov
popa
enter
jne
jle
cmp
das
cmp
in
lds
ljmp
insb
mov
mov
xor
dec
mov
add
adc
add
push
out
sub
mov
enter
cmp
fisubs
sbb
mov
mov
sub
aam
fldenv
fistpll
add
ja
push
adc
jle
fisubrl
pop
adc
cmp
mov
cmc
cmp
mov
int3
int3
int3
int3
int3
addr16
test
cmp
sbb
cmpsl
mov
into
gs
nop
xlat
dec
push
add
push
ss
xor
aam
xchg
add
add
in
and
je
aad
cmp
inc
std
fdivrs
stc
jbe
inc
inc
mov
and
shrl
add
add
ret
mov
and
dec
pop
mov
fdivrp
jge
dec
btr
ja
sub
mov
cmp
add
xchg
leave
xchg
mov
int3
int3
int3
int3
xchg
pushf
test
cmpsl
sar
jns
pop
lea
nop
jp
mov
rcrb
mov
lods
and
cmp
test
cltd
jno
dec
adc
push
mov
add
add
jb
xchg
push
dec
sub
dec
ja
test
cs
insl
les
xchg
mov
add
add
cmp
mov
sbb
rcrl
jae
sbb
dec
and
mov
mov
or
hlt
add
xchg
lods
loope
cmp
fs
and
mov
mov
add
add
xor
stos
loopne
movhps
pop
loop
sub
dec
in
cmpsb
push
insb
mov
addb
lcall
aas
mov
cwtl
pop
mov
imul
add
mov
es
push
dec
mov
imul
insl
cld
sub
sub
push
dec
and
add
add
add
int3
int3
cmp
mov
fnsave
test
mov
fisttpll
sub
mov
jns
dec
imul
inc
inc
stc
jo
sbb
push
scas
sub
jo
mov
cld
jnp
ds
jns
aas
mov
pop
mul
mov
add
add
xchg
das
jo
fcompl
loopne
push
jmp
imul
xor
es
push
jge
add
add
add
jae
loop
cmp
mov
push
ds
das
mov
pushf
or
and
test
xchg
and
add
add
mov
or
test
lods
aaa
lock
loope
mov
scas
insl
and
sbb
ljmp
xchg
loop
jb
int3
xor
repnz
add
add
xchg
int3
int3
int3
movsb
mov
jg
imulb
mov
mov
lcall
je
lods
jo
adc
and
add
add
sbb
test
cmpsb
sbb
sub
pushf
mov
pop
mov
cli
jecxz
xchg
pop
and
shrl
fwait
in
jns
shll
mov
xchg
je
mov
and
repz
add
in
sub
cmp
lea
add
ret
xchg
sub
cmp
mov
mov
mov
xor
xor
and
pop
xchg
jecxz
jge
int3
int3
int3
sbb
scas
add
add
add
pop
lods
scas
fabs
mov
add
push
mov
jg
lret
scas
and
nop
test
mov
div
adc
xchg
sahf
in
clc
pushf
push
clc
dec
push
cmc
xchg
out
cmp
scas
insl
inc
cmpb
jae
add
add
sbb
jo
xor
les
ljmp
fcmove
int3
int3
int3
int3
adc
stc
and
sub
add
das
xor
mov
mov
mov
data16
push
xor
pop
cld
cmp
xchg
stc
bound
mov
inc
icebp
lgs
fnstcw
push
loopne
stos
jmp
add
add
add
cli
jp
es
mov
pop
scas
pop
je
mov
inc
shl
cmp
cmp
and
popa
inc
ss
mov
int3
int3
int3
cmc
pusha
lds
and
std
sub
add
add
je
clc
shrl
ds
mov
gs
xlat
sub
outsb
sbb
je
jae
das
cmpsl
mov
pop
cmc
movsb
sbb
std
outsb
add
out
jp
fs
add
add
add
xor
js
data16
xchg
std
pop
leave
ret
clc
test
ja
cld
movsb
insb
jecxz
add
cmp
leave
add
int3
int3
int3
int3
int3
int3
int3
int3
jmp
push
and
adc
cmpsl
mov
mov
push
call
into
lods
fmul
stos
movsl
lods
inc
sub
popa
add
add
mov
push
movsb
cmp
inc
pop
jecxz
sub
mov
scas
mov
popa
sub
or
daa
xchg
repz
mov
je
pusha
adc
mov
out
xlat
loope
popf
int3
sbb
in
push
xchg
test
add
add
cmp
popf
out
xor
pop
xchg
sub
pop
dec
out
dec
outsb
jmp
dec
and
inc
idivl
cmp
leave
cmp
add
add
popa
dec
mov
lock
mov
ds
outsl
inc
push
icebp
insb
push
aam
cmpsb
xchg
dec
jae
insb
int3
int3
int3
idiv
loope
movsl
in
aaa
and
xor
jb
mov
aad
lret
add
add
sbb
mov
mov
stos
and
test
int3
push
xchg
in
fdiv
mov
mov
scas
lds
and
out
addr16
jno
xchg
in
in
xor
mov
mov
insb
add
add
mov
clc
lcall
iret
mov
fists
sub
mov
sti
push
and
add
sbb
repnz
in
ret
jo
sbb
lret
xor
leave
loop
mov
mov
add
add
test
int3
int3
int3
int3
out
push
inc
flds
out
js
push
scas
and
xchg
mov
jo
or
xor
mov
dec
xor
std
arpl
jo
push
push
and
push
stos
je
and
sub
add
add
jns
out
clc
fmull
lret
mov
xchg
jne
insl
pop
xchg
in
nop
mov
push
aam
xor
sbb
in
xor
push
adc
mov
mov
out
cwtl
sub
add
add
add
and
xor
sbb
lcall
icebp
js
daa
jae
pop
gs
outsb
mov
add
add
scas
pop
mov
and
add
inc
jb
movsl
add
rolb
add
add
hlt
dec
outsb
stc
sub
int3
int3
pusha
or
xchg
fadd
or
fdiv
dec
cmp
push
data16
lcall
subl
sbb
shll
sub
les
add
add
out
negl
test
call
popf
cmc
cwtl
clc
outsb
fisubrs
mov
or
xchg
mov
sbb
push
pop
and
sbb
add
add
sbb
jle
lret
outsb
lret
repnz
add
xchg
nop
fnstcw
test
int
and
pop
hlt
jmp
stos
add
add
add
lods
imul
mov
fadd
mov
stos
or
cmp
add
out
cmp
out
jge
xchg
sbb
jg
inc
mov
fwait
stos
add
add
mov
jae
jno
int
mov
js
push
lret
mov
add
jno
jp
es
mov
ficoms
or
add
add
add
int3
int3
int3
add
cmp
mov
push
jp
out
mov
into
scas
ss
adc
mov
push
xchg
mov
mov
add
rcll
mov
jg
xchg
aam
mov
xchg
imul
add
jnp
rcrl
adc
hlt
pop
pop
pusha
push
stos
sub
test
cmpsb
rcrl
fwait
jo
add
add
push
in
cld
xchg
adc
in
dec
out
xchg
lods
dec
bound
lahf
jge
push
pop
outsl
movsb
lds
icebp
pop
jp
es
push
enter
int3
int3
add
add
jb
lds
pop
pusha
jno
xor
fisubrs
mov
sbb
pop
pop
jno
sti
fimuls
stos
dec
xchg
clc
popa
popa
or
mov
les
ja
or
add
add
sbb
and
adc
cltd
sti
add
or
lret
je
sub
sub
scas
sub
adc
or
xchg
lret
loopne
xchg
dec
mov
gs
in
mov
jne
enter
sbb
into
mov
cmp
sarb
test
pop
mov
cmpsl
mov
sti
or
push
aaa
cs
and
lods
inc
imul
outsb
mov
fld
push
jae
neg
mov
adc
lods
adc
add
add
idivb
shrl
leave
es
out
cs
in
clc
cs
test
or
cwtl
movsb
in
and
mov
mov
mov
add
add
add
out
rorl
fdivs
nop
cmp
neg
fimull
mov
dec
fisubrl
push
or
adc
xchg
lods
lret
insb
insb
cwtl
int
sub
mov
xchg
aam
cmc
mov
jbe
daa
arpl
sbb
pop
ret
sbb
jl
add
add
add
das
pushf
repnz
sbb
sbb
fiadds
xor
sub
jo
arpl
cmpsl
jne
test
dec
imul
sti
xchg
add
xchg
xchg
mov
mov
add
cmp
xchg
incb
inc
adc
xchg
add
jg
movsb
fwait
sbb
add
leave
sbb
mov
or
repnz
pushf
sahf
adc
add
loop,pt
mov
and
int3
int3
int3
sti
out
and
out
pop
cmp
add
pop
or
xchg
xor
ss
cld
sub
push
inc
out
bound
pop
mov
add
add
gs
loopne
xchg
into
fstpl
sub
xor
mov
sub
filds
mov
add
icebp
iret
cmp
xor
cld
inc
cmpsl
enter
aaa
aas
or
and
sbb
jl
pop
ret
push
dec
add
push
xchg
mov
aas
xchg
mov
xchg
and
sbb
push
push
insl
mov
mov
add
add
adc
scas
cs
sub
and
push
mov
sbb
int3
int3
int3
xchg
test
sub
stos
das
in
jg
stos
jo
shlb
add
add
mov
mov
mov
push
sbb
or
jmp
in
cltd
mov
jns
dec
lods
es
cwtl
xchg
dec
inc
and
mov
mov
repnz
add
add
and
ss
adc
jns
fdivrs
out
cmc
inc
mov
adc
int3
int3
int3
int3
int3
int3
ds
insb
mov
jp
xchg
mov
jb
adcb
add
adc
mov
fsubr
lahf
and
add
mov
xchg
and
xchg
sahf
popa
jns
out
add
jnp
insb
push
xchg
or
movsl
sub
arpl
add
add
movsl
mov
repnz
xchg
add
iret
aad
push
or
out
push
lret
add
sub
jle
sub
into
dec
xor
enter
aam
lret
scas
sahf
adc
add
xchg
add
mov
xchg
cmp
mov
sub
push
sbb
jecxz
or
adc
lock
int3
bound
or
push
loop
add
add
fsub
add
or
test
pop
adcb
pusha
dec
pop
aad
fwait
add
int
iret
mov
or
push
xor
and
arpl
add
jl
adc
outsb
adc
push
add
jge
xchg
es
jle
pop
das
xchg
int3
int3
int3
int3
int3
sub
cmpsb
outsb
push
jmp
das
lds
push
popf
data16
ficoml
cli
jae
inc
xchg
iret
push
jbe
push
add
add
mov
dec
xchg
mov
xchg
pop
lcall
mov
push
mov
pop
dec
xlat
xchg
hlt
btr
add
add
xorl
pop
xchg
mov
mov
js
or
aam
gs
jecxz
inc
mov
dec
movsb
loopne
jmp
mov
pop
jmp
mov
insb
rorb
push
es
add
add
push
cmp
sub
mulb
jbe
jg
pavgw
cltd
xchg
inc
xchg
dec
cltd
jecxz
jo
pop
add
add
add
stos
icebp
xchg
fdivl
insb
shr
push
cmp
outsl
out
sbb
into
pop
add
or
sahf
pop
jbe
mulb
xchg
fwait
dec
pushf
adc
in
add
add
cli
add
adc
int3
int3
int3
pop
clc
iret
push
cwtl
test
dec
push
push
or
fdivl
mov
add
fiadds
add
xor
lds
mov
shl
jge
outsl
xor
inc
repz
iret
rolb
inc
mov
and
fadds
mov
mov
pop
jecxz
lods
and
and
fcompl
call
add
gs
add
add
add
add
cmpsl
adc
or
xor
xchg
ret
cltd
rclb
cs
xchg
clc
std
pop
adc
into
add
call
sahf
addb
clc
iret
pop
mov
mov
mov
inc
pop
xor
mov
sti
adcb
cwtl
lods
adc
add
mov
int3
mov
push
xorl
or
xchg
insb
test
and
loope
enter
xchg
ret
jmp
sub
xor
adc
imul
adc
xchg
pushf
sbb
insb
add
add
add
xchg
push
ja
enter
inc
mov
mov
sbbl
xlat
mov
xchg
cmp
sub
lea
jmp
orb
add
int
add
xchg
xor
mov
adc
mov
or
mov
lea
in
ljmp
jb
fsubrl
push
loop
jmp
push
lods
subl
push
dec
dec
dec
jmp
addl
jno
adc
add
mov
jne
scas
push
sti
fcomip
aam
negb
mov
bound
jg
in
and
jmp
aad
loopne
pop
mov
add
add
add
xchg
xchg
movsl
mov
add
jne
flds
movsb
pop
cli
push
push
fdivrl
imul
test
int3
int3
int3
mov
jno
fs
movsl
push
add
add
add
adc
push
stos
out
rorl
mov
movb
test
ds
add
ret
mov
xchg
pop
int
in
sub
cmpsl
lock
xchg
int
dec
cmpsb
xor
add
add
adc
push
int3
aam
mov
jo
sbb
enter
mov
insb
and
sub
mov
imul
lea
jp
pop
out
into
sbb
dec
jne
pop
ret
loope
mov
add
add
ss
vrsqrtps
rcrl
popa
ja
and
fildll
inc
adc
mov
loopne
cli
pop
in
loope
mov
add
add
pop
or
int3
int3
inc
xchg
xchg
and
negl
jl
push
lock
leave
pop
push
fistps
fadds
inc
ss
hlt
pop
fstp
push
pop
push
or
ja
dec
pusha
or
imul
outsb
cmp
test
add
lcall
add
mov
cwtl
xchg
mov
in
push
shlb
push
mov
add
cld
sbb
push
or
push
scas
das
das
stc
int
mov
add
pop
lea
loope
mov
push
call
dec
add
aas
les
aaa
mov
mov
and
rolb
mov
inc
pop
enter
add
lods
in
push
pop
push
sub
js
ret
ret
jmp
aad
in
fs
ret
adc
add
add
shl
sbb
push
orb
orb
cmpsl
dec
jp
dec
in
mov
mov
add
add
clc
and
std
int3
int3
int3
int3
int3
int3
in
stos
push
push
mov
xchg
xchg
mov
cli
sbb
cs
gs
inc
out
lret
cmp
loop
ja
xchg
in
repz
pushf
and
test
add
add
push
pop
gs
push
call
stos
push
push
in
xlat
into
das
add
jp
lahf
mov
or
daa
outsb
mov
outsl
call
inc
ljmp
or
add
add
add
cld
fs
out
lds
stos
push
int3
in
pushf
jb
cmc
out
jbe
incl
aad
je
out
dec
xchg
push
outsb
xor
cltd
push
mov
push
les
add
cmp
les
mov
sbb
dec
inc
jb
push
pushf
dec
pop
or
inc
test
sbb
rcl
gs
or
dec
push
hlt
cmp
cmpsl
pop
xchg
add
add
add
js
or
int3
int3
int3
test
nop
mov
jno
movsl
pop
push
fsub
dec
cwtl
mov
lods
push
mov
and
cmp
sbb
mov
inc
jnp
cli
std
push
add
ret
mov
add
test
in
das
gs
fiaddl
add
dec
and
mov
cld
sahf
cmp
sti
mov
mov
je
xchg
add
xchg
icebp
add
pop
sub
fildll
pop
shl
add
add
mov
cwtl
cmp
out
outsb
sub
pop
lock
jecxz
daa
daa
xchg
mov
add
add
sub
aam
push
addr16
ljmp
in
imul
outsl
jg
fldt
lock
jle
lock
push
cld
aaa
xor
add
add
call
addl
cmc
sar
sbb
int
add
aad
inc
xor
pop
mov
lahf
add
add
push
sti
pop
ss
mov
lock
int3
sbb
or
xor
mov
sub
dec
cmpsb
cmc
mov
int3
int3
int3
int3
in
aaa
cwtl
dec
fs
hlt
aam
repnz
sub
add
add
add
mov
or
data16
fwait
push
js
cmp
int3
int
inc
pop
add
add
mov
fistps
xchg
stos
shrb
dec
lret
fs
jg
addl
jp
data16
movsl
idivl
push
cmp
fisubl
cmp
add
add
push
mov
addr16
fiadds
int3
insl
mov
outsl
pop
rcrl
std
adcb
jo
mov
cmp
cli
iret
pop
xchg
push
gs
sldt
add
add
add
test
jle
xor
jmp
into
repnz
shlb
push
mov
xchg
pop
insb
sub
or
jmp
and
xchg
daa
je
push
add
add
clc
mov
xchg
and
sbb
rcrl
mov
div
mov
cld
push
mull
int3
int3
insl
add
xchg
add
add
insb
aaa
inc
sbb
jno
xorl
sti
pop
iret
inc
fmuls
enter
inc
testl
or
xor
cs
inc
jmp
movb
or
in
cmp
popa
adc
and
add
adc
enter
dec
psrld
call
pop
xor
pop
add
sbb
in
das
aad
jmp
xor
fdiv
dec
loope
enter
add
sub
pop
movsb
mov
sub
stos
addl
add
add
add
fisubrl
pop
es
mov
sub
adc
push
adc
xor
mov
mov
mov
mov
stos
add
add
mov
fstl
mov
dec
mull
mov
fdiv
and
ret
in
fidivrs
xchg
mov
add
add
add
daa
inc
mov
lret
insb
cmp
cli
fwait
xchg
push
pop
jmp
and
imul
add
add
lahf
cmp
outsb
push
add
aas
push
lods
and
or
or
fsub
pushf
fnstsw
and
or
incb
pop
ljmp
sbb
pop
xchg
adc
cmp
mov
add
mov
mov
xchg
in
pop
stos
jge
pushf
call
icebp
pop
and
adc
sbbb
xacquire
jae
aas
fnstsw
in
cmp
add
xchg
sbb
insb
adc
xor
imul
mov
dec
adc
pop
ds
jo
and
je
cmp
ret
int
inc
xchg
xchg
dec
add
add
add
js
push
mov
dec
icebp
add
mov
imul
outsb
fs
sti
pop
fstl
adc
shlb
or
cmp
shrb
popa
mov
int3
int3
int3
int3
call
int3
lods
add
add
es
popa
mov
call
mov
and
cmp
in
int
ds
cmpb
int
adc
inc
aaa
cmp
jmp
add
or
movsl
loopne
jecxz
loope
xchg
sub
mov
xorl
mov
xchg
jno
fwait
sbb
mulb
add
add
pop
lcall
cmp
fdivr
dec
mov
dec
jg
xchg
imul
cmp
mov
repz
js
je
add
int3
int3
int3
xchg
xchg
test
sti
rorb
add
add
or
dec
cmp
out
xor
inc
lods
pop
lret
sbb
mov
mulb
jle
mov
xchg
hlt
loope
add
add
inc
add
jns
xchg
push
and
jmp
mov
cmp
in
inc
lds
mov
aam
add
add
add
add
movsl
out
dec
mov
cld
mov
mov
int3
int3
int3
int3
adc
dec
push
pop
sahf
mov
xchg
mov
ficoms
pop
adc
shlb
xchg
add
mov
xchg
cltd
jo
add
in
divl
ss
fidivl
jl
jno
xor
movsb
out
aaa
jmp
push
xchg
sbb
dec
shlb
jg
push
jae
add
add
cs
push
mov
sbb
in
dec
scas
cmp
sub
loope
loope
cmp
idiv
in
lods
dec
push
popa
imul
mov
cltd
sub
add
add
sarl
sub
popa
xchg
push
loop
movsb
or
ret
inc
xchg
out
jnp
add
add
add
add
test
out
or
test
out
mov
push
and
pop
clc
mov
stos
jno
add
add
add
add
movsl
mov
int3
pmaxsw
inc
jge
je
mov
int3
int3
int3
adc
push
and
jno
pusha
cmp
mov
add
pop
adc
add
loop
inc
mov
dec
inc
in
push
test
add
inc
push
xchg
push
dec
daa
mov
cld
xchg
jno
mov
test
sarb
aaa
add
add
add
add
lret
jo
add
out
mull
and
sbb
mov
gs
inc
dec
rol
mov
pop
cwtl
push
pop
sbb
or
aad
mov
mov
sub
add
mov
rolb
lret
jne
pop
pop
inc
push
cli
xchg
dec
add
add
cmp
mov
rcl
sbb
dec
xchg
mov
fsubrl
repnz
push
aas
jle
jmp
add
add
mov
icebp
popa
adc
pushf
imul
mov
orb
pop
into
push
or
add
mov
mov
jae
add
push
pop
cmc
adc
and
mov
lret
push
loop
testb
push
insl
inc
or
xor
mov
cmp
mov
aam
adc
mov
rolb
aam
xor
add
das
add
xchg
cli
add
fsubrs
cmp
push
pop
mov
sub
mov
loopne
pop
or
cwtl
int3
std
cmp
mov
ss
data16
ret
mov
int3
mov
inc
scas
pop
lcall
inc
fisubrs
imul
cs
int3
sub
faddl
add
add
add
int3
jae
adc
mov
loop
pop
testl
add
inc
aam
les
push
mov
xchg
dec
sti
shl
pop
add
add
add
dec
mov
push
lea
cld
lods
iret
adc
dec
int
push
dec
out
cs
push
cs
mov
mov
jb
nop
call
dec
xor
add
cmc
mov
pop
xchg
lcall
or
int3
int3
int3
sbb
jmp
pop
in
mov
dec
mov
test
sbb
pusha
mov
add
ljmp
insl
xchg
inc
clc
inc
cmpsl
mulb
scas
pop
sub
jp
fsubr
mov
stc
in
xchg
mov
lods
ret
inc
or
ja
loope
rcl
and
sub
out
lods
pop
mov
cltd
je
push
ds
add
in
fisttpl
test
fisubl
sub
add
xor
xchg
fcomp
xlat
scas
sti
enter
aad
shll
shlb
fildll
pop
sbb
mov
aas
repz
push
mov
sbb
test
push
jecxz
idivb
sbb
add
add
sub
sbb
mov
mov
jnp
sbb
sub
repz
test
inc
popa
mov
fs
in
fldcw
test
bound
fisttpll
add
xchg
dec
fsubrl
add
jmp
sbb
addr16
jno
repnz
ja
int3
int3
int3
int3
loopne
mov
mov
adc
add
add
fnstenv
xor
pop
js
pushw
push
mov
es
in
mov
inc
push
sub
xchg
sbb
inc
push
xor
addr16
mov
test
mov
jmp
bswap
and
and
mov
adc
outsb
jbe
push
adc
test
call
mov
cwtl
mov
rcl
int3
int3
int3
int3
int3
int3
int3
mov
xchg
sahf
jne
jmp
sahf
js
add
inc
out
jb
xchg
jmp
jbe
int3
std
xor
add
add
jns
lahf
jo
cmc
or
repnz
xchg
push
aad
in
insb
mov
xor
arpl
pusha
sbb
mov
jp
daa
fcompl
add
add
add
orb
add
scas
cmovl
xlat
pop
or
dec
gs
out
ficoml
shrl
pop
loop
mov
add
ds
lahf
bound
scas
pop
ret
xchg
mov
sub
push
int3
int3
int3
dec
pop
pop
mov
jnp
add
jbe
xchg
dec
cmpb
movb
pop
add
cmp
es
pop
push
inc
dec
add
adc
sarb
mov
cwtl
shrl
insb
push
andb
pop
jns
into
dec
into
ds
mov
mov
add
add
add
arpl
adc
and
fstl
out
mov
add
mov
and
cmp
mov
test
mov
cs
xor
adc
mov
jle
pop
xchg
adc
dec
or
mov
andb
adc
sub
clc
sub
or
or
xor
pop
orb
lret
cmpsl
insl
lock
mov
add
add
pusha
shrb
adc
jge
cmp
scas
push
or
xor
nop
sti
daa
fwait
inc
int3
int3
int3
int3
int3
int3
int3
aam
or
push
push
add
add
out
add
xchg
sub
add
pop
dec
pop
jbe
and
or
stos
pop
sub
scas
sub
movsl
inc
in
jmp
pop
out
out
mov
in
movsl
sub
mov
dec
pop
xchg
add
add
lods
mov
fnsave
jo
inc
inc
out
pop
xchg
loope
dec
push
dec
imul
iret
jae
mov
inc
hlt
test
fisubrl
out
xorb
movsb
aas
inc
inc
sub
inc
bound
test
mov
xor
add
js
lret
sub
and
add
push
cmp
push
push
pop
jbe
cmpsl
pop
xchg
cmp
lret
pop
mov
mov
pop
jecxz
pop
dec
pop
stos
mov
xchg
in
push
add
add
add
xlat
iret
dec
cmp
scas
scas
ret
push
daa
jae
mov
imul
outsb
mov
jns
mov
mov
leave
and
das
out
add
add
add
jg
and
or
inc
inc
popa
iret
stos
mov
adc
mov
push
mov
stos
pushf
sbb
int
pop
pop
jno
pop
ds
nop
and
pop
mov
sbb
and
sub
bt
lret
mov
test
push
lock
xor
xchg
hlt
sub
add
add
add
add
adc
jg
add
mov
jecxz
dec
sub
js
sub
call
stos
filds
cmpsl
std
mov
xchg
insl
dec
bound
das
add
repz
add
add
add
std
push
int3
int3
int3
pushf
or
mov
push
xchg
lds
jp
pop
lret
push
incl
xchg
fldt
mov
cld
push
mov
push
fsubp
fs
dec
jb
jp
or
and
lahf
adcl
add
add
inc
dec
mov
pushf
in
xor
jecxz
nop
sbb
inc
xchg
cwtl
lret
mov
xchg
lds
shlb
icebp
pop
and
in
xchg
out
je
cltd
pop
out
xchg
mov
inc
insl
xor
mov
incl
repnz
add
add
xchg
adc
aam
mov
int3
int3
int3
int3
int3
int3
in
stos
test
jmp
sahf
sub
popf
pusha
lods
add
add
add
add
xchg
add
cmp
arpl
cmp
xchg
add
add
add
lds
or
pop
in
fyl2xp1
jmp
pop
jne
repz
dec
aad
and
scas
add
enter
add
xor
fcoms
cwtl
and
and
lcall
sar
or
cmp
mov
out
push
pop
mov
and
out
int
insl
mov
adc
test
pop
push
add
push
adc
add
pop
loop
iret
cwtl
cld
rcr
mov
add
inc
aas
mov
adc
jnp
jo
int3
int3
int3
int3
int3
int3
dec
outsl
insb
jns
pusha
xchg
jmp
arpl
add
add
add
sbb
add
sbb
repnz
iret
or
rol
jg
jmp
cmpsb
mull
xchg
xchg
es
xor
xor
sub
cmp
in
mov
outsb
and
mov
push
repz
lds
push
icebp
push
cmpl
push
inc
mov
test
out
out
ljmp
jae
sbb
add
aas
lcall
imul
and
cmc
in
sti
stos
out
clc
les
out
in
fs
xorl
fdivrl
cmp
mov
pop
loopne
out
loop
icebp
mov
xchg
mov
mov
add
add
sbb
repz
pop
pop
cs
and
and
mov
xchg
test
xor
push
ret
mov
repnz
int3
int3
int3
int3
int3
pop
jl
and
das
push
cs
jne
add
add
add
add
mov
roll
or
add
push
flds
inc
pop
push
int3
pop
xor
pop
out
jo
jp
scas
mov
push
xor
pusha
in
inc
arpl
adc
fcmovu
inc
push
jae
sbb
xchg
add
sub
test
push
inc
pop
xchg
mov
aaa
int
sbb
lret
mov
fwait
push
or
mov
xlat
rorl
movsl
mov
inc
jb
jnp
xor
lret
pop
jge
fistl
jb
add
add
mov
out
pushf
lds
repnz
push
mov
popa
mov
je
cmc
out
jbe
sahf
repz
int3
int3
int3
int3
divl
loop
jmp
mov
adc
mov
mov
cmp
dec
ss
sub
jecxz
test
push
call
jp
xor
push
int3
aad
cmp
and
and
add
cmp
add
xor
pop
in
cli
inc
out
repz
popa
arpl
add
add
sub
fcomps
icebp
sub
inc
popa
xchg
cwtl
stc
xchg
test
frstor
idivb
lahf
loopne
jbe
add
add
imul
pop
lock
sbb
test
arpl
daa
clc
clc
xchg
dec
pop
mov
push
lret
jbe
xchg
mov
pusha
in
push
std
popf
bound
mov
sub
pop
mov
mov
and
stos
xor
sub
sarb
add
je
daa
stos
mov
in
iret
inc
cmpsb
in
popf
cltd
pushf
sbb
jb
xor
add
add
mov
xlat
jno
mov
mov
inc
mov
aaa
add
adc
mov
adc
outsb
nop
xor
aas
dec
xchg
sub
test
jmp
int
fisttpl
or
mov
pop
lahf
push
inc
es
jo
adc
add
add
add
je
test
mul
test
aad
mov
arpl
ljmp
lods
cmp
xchg
jmp
nop
loopne
push
xor
lods
sarb
add
cld
jne
cs
sbbb
cs
ds
mov
mov
nop
test
adc
pop
test
jge
mov
add
addr16
dec
sub
int3
int3
int3
int3
int3
adc
mov
xchg
out
mov
repz
sbb
dec
adcb
adc
xlat
idiv
test
aas
stc
dec
pop
sbb
add
push
mov
mov
insl
pop
cmp
pop
jge
ljmp
and
das
cli
adc
fidivrs
cmc
push
or
fs
xchg
cmp
in
repz
pop
jnp
shlb
add
add
add
int
ret
out
mov
push
hlt
adc
or
nop
push
nop
and
sbb
cmp
movswl
or
jp
jge
lret
pop
jl
lret
lods
mov
popf
std
iret
xor
add
add
imul
xchg
mov
adc
or
ljmp
loop
icebp
loopne
cmc
cmp
add
out
xchg
jo
cwtl
mov
mov
mov
into
add
fs
jmp
pop
jg
or
idivl
stos
jnp
push
inc
xor
mov
mov
add
int3
int3
fstpl
xor
pop
cmpsl
adc
out
xchg
xor
add
push
sub
scas
adc
in
and
fisttpl
ds
mov
sarl
test
movsb
mov
add
add
pop
lods
and
fldl
push
fadds
fdivp
or
mov
clc
icebp
and
cld
mov
inc
push
stos
pop
mov
xchg
fiaddl
add
add
aad
inc
xlat
fistpll
movsl
sbbl
mov
xor
mov
and
and
push
jmp
add
add
xor
xrelease
pop
jle
out
jg
adc
xchg
sahf
in
adc
std
icebp
pusha
lcall
scas
pop
bnd
add
add
add
scas
jne
push
out
cmp
xchg
mov
pop
and
lret
push
push
cs
adc
test
and
ret
add
add
add
pop
std
ljmp
into
fidivs
mov
int3
int3
int3
int3
pusha
das
sub
jecxz
out
in
xchg
dec
aas
xchg
fisubs
sbb
ds
jmp
cld
fdivrl
add
add
xchg
std
inc
out
ret
jmp
xchg
jge
jle
inc
jnp
cmpsl
adc
push
pop
xchg
cmp
mov
cmp
out
mov
sub
or
lcall
jo
shll
lret
loop
add
add
adc
xchg
jle
bound
add
call
push
cmp
aaa
mov
fincstp
ret
mov
pop
orl
lods
inc
add
and
stos
push
jl
dec
mov
add
jns
out
mov
ss
aad
mov
cmpsb
shlb
mov
pop
sbb
and
mov
dec
out
es
add
cmp
aad
xchg
cmpsb
scas
add
fdivrs
sbb
xor
sub
aas
xlat
and
insb
mov
mov
int3
int3
dec
xchg
xor
add
ret
loope
call
mov
stos
aam
icebp
xchg
push
daa
mov
popf
fnsave
jb
movsb
xchg
and
outsl
cmp
add
push
jle
mov
lcall
add
add
add
add
pop
cltd
les
aad
jbe
jmp
add
and
jecxz
leave
lcall
adc
xor
add
xchg
rorl
xchg
mov
fsub
or
mov
sbb
cmp
push
cmpsb
add
add
add
or
sbb
dec
mov
adc
xchg
push
jle
fidivrs
int3
int3
int3
int3
xchg
mov
in
jb
sarl
inc
mulb
sahf
push
mov
data16
ja
cmp
add
add
add
add
bound
and
call
aam
cmp
add
mov
mov
pop
out
cmpsb
push
ljmp
xchg
mov
iret
push
add
add
mov
mov
sti
int3
lock
inc
hlt
push
roll
cld
cmp
dec
push
out
inc
daa
cmc
outsb
or
scas
mov
repnz
lods
mov
lock
out
loop
xor
mov
pop
popf
movsb
mov
out
ljmp
mov
popf
pop
jecxz
push
jl
out
sbb
incb
mov
jmp
sub
ffreep
outsl
fucom
mov
incl
add
add
mov
pop
push
dec
mov
xchg
test
mov
pop
push
rcl
cmpsb
cs
push
dec
shll
in
xor
pop
inc
repz
mov
dec
adc
lds
or
mov
cltd
mov
mov
mov
dec
stos
and
test
fscale
mov
enter
fyl2x
add
add
add
test
jo
pop
ss
xchg
push
xchg
gs
add
inc
xor
lods
dec
push
dec
cmc
outsb
out
dec
xchg
add
cmp
cwtl
outsb
repnz
or
std
xchg
subb
iret
aas
pusha
lea
out
dec
inc
aam
out
loop
int3
int3
int3
int3
int3
int3
int3
lock
mov
fxch
aaa
jns
stos
mov
sarb
adc
ja
mov
out
jp
dec
je
pop
es
imul
mov
xor
jns
push
inc
and
imul
fimull
xor
pushf
sbb
add
add
add
decb
xor
sub
out
nop
push
xor
xorl
xchg
mov
add
add
int3
int3
int3
sub
pop
fdivl
fsubr
jae
or
inc
xchg
shrl
cmp
std
inc
push
dec
in
nop
pusha
stc
aam
pop
ror
xor
stos
or
mov
adc
cmpsb
dec
lahf
add
add
add
inc
mov
mov
xor
sbb
mov
pop
cmp
dec
jle
gs
push
push
fnstenv
scas
jmp
insl
cmp
test
jle
mov
outsb
mov
daa
push
lcall
add
add
sub
int3
int3
int3
int3
int3
cs
outsl
mov
xchg
std
js
jp
leave
andb
pop
push
lds
pop
cli
loopne
stos
lods
mov
divl
jo
push
cmpsl
add
add
sub
test
jae
stc
cmpsb
push
fldt
xchg
sbb
add
add
add
and
jne
jnp
jge
jmp
mov
adc
ss
mov
js
repz
gs
popf
or
xor
cmp
and
adc
test
adc
sbb
jp
mov
xchg
jp
xor
add
add
add
mov
movsb
or
rorb
push
nop
int3
int3
int3
xlat
mov
push
adc
add
add
and
imul
fsubs
call
aaa
xchg
addr16
jbe
insl
and
outsl
and
xchg
int3
xchg
sbb
add
add
add
mov
pop
mov
and
lods
movsb
insl
clc
sarl
jne
jb
pop
push
int
test
mov
pusha
xchg
xor
bound
test
int3
jnp
inc
outsl
daa
mov
arpl
jge
add
add
out
addb
pop
dec
sbb
cmp
jae
mov
and
jmp
inc
pushf
movsl
lods
or
js
jl
inc
push
xchg
add
add
add
insb
imul
xchg
int
mov
loope
push
pushf
jmp
orl
test
mov
addb
add
add
inc
lods
out
pusha
push
inc
loop
es
hlt
pop
or
mov
fisubrl
out
cmpsl
loopne
mov
outsb
cmp
int3
int3
int3
decl
sarb
add
js
repz
lret
ror
mov
add
shl
popa
sub
add
insl
adc
in
adc
add
mov
sub
int3
or
mov
sbb
lcall
sub
daa
pop
or
bound
add
outsl
sbb
jge
jae
cmp
popa
and
adc
mov
incl
cmc
iret
ljmp
pusha
lea
or
sub
add
add
jle
stos
test
int3
int3
int3
lods
jmp
in
mov
jp
inc
sbb
push
cmp
ss
adc
sub
xchg
sbbb
ficoms
add
cmpb
inc
push
pop
push
mov
xor
xchg
in
mov
mov
lret
cmp
lea
fistpll
push
aam
xchg
fiadds
add
add
mov
xchg
mov
adc
adc
sub
int3
int3
int3
push
icebp
sbb
mov
loope
mov
hlt
adc
outsb
fisubrs
int3
and
fidivrs
push
fucomi
insw
inc
cltd
mov
inc
pop
push
pop
push
add
add
add
in
aas
or
jp
jp
pushf
aaa
jecxz
out
add
stc
sbb
jno
aaa
sub
movsl
inc
and
mov
sub
add
jae
mov
add
add
enter
scas
and
cmpsb
mov
rol
cmp
mov
pop
mov
icebp
adc
inc
jns
pushf
das
cmp
inc
xchg
xlat
adc
push
insb
push
lods
aam
loop
icebp
fnstsw
mov
int3
enter
pop
adc
jl
mov
outsl
rcrb
sbb
add
cmp
and
xchg
add
add
mov
push
cmc
in
dec
sbb
mov
inc
adc
jne
jecxz
adc
sub
cmp
je
or
pop
repnz
test
add
add
cmc
pop
jecxz
js
pop
mov
xchg
sbb
xchg
cs
cmp
stos
mov
add
jmp
dec
test
push
sbb
gs
js
cs
nop
stc
and
scas
scas
in
push
inc
std
and
push
dec
loop
add
out
mov
push
aaa
add
xor
add
addb
aad
inc
xor
lret
shl
pop
adcl
jb
and
sub
cli
out
lds
add
add
add
adc
int3
int3
int3
int3
jns
lret
cmp
push
data16
bound
loope
movsl
clc
call
mov
and
add
add
add
movsl
xchg
mov
xchg
lods
dec
jge
rol
inc
popa
lret
lcall
sbb
cltd
stos
inc
cmp
xor
sarb
push
pop
loope
push
stos
jns
push
mov
add
add
add
jp
mov
or
aam
mov
mul
push
fldcw
sub
arpl
cltd
push
int3
scas
scas
stc
sub
lds
pop
shrb
jge
add
mov
stos
sub
xchg
jo
test
inc
push
inc
jns
and
cmp
aad
and
mov
mov
jp
push
stc
push
cmp
add
push
jae
push
push
in
int3
int3
int3
int3
mov
scas
mov
add
add
adc
loop
xor
imul
jmp
xor
cs
ret
fs
or
pop
push
xchg
pop
adc
loop
push
cmp
add
add
loopne
push
sbb
out
test
sub
dec
insb
adcl
xlat
sub
add
std
push
cld
out
or
jo
insb
jge
fs
fisubrs
loopne
aaa
data16
mov
xchg
fwait
cmp
add
add
add
and
and
mov
fs
iret
stc
mov
hlt
inc
cmp
or
xor
leave
lea
outsl
and
dec
mov
xchg
xor
mov
ljmp
jno,pn
and
int3
int3
int3
mov
sbb
xor
xchg
into
xor
xchg
clc
and
adc
add
sbb
stos
jge
sbb
push
mov
cwtl
jbe
xor
add
push
dec
xchg
add
add
fs
mov
mov
jns
dec
sbb
enter
or
out
adc
dec
pop
mov
cld
and
and
insb
jecxz
and
xchg
call
add
pop
adc
sub
repnz
or
xchg
aam
inc
jl
lods
inc
scas
es
xor
add
test
nop
sbb
pushf
int3
push
xor
stos
mov
rcll
jp
shlb
int3
or
mov
dec
add
add
add
add
inc
leave
andb
nop
inc
into
imul
cmp
pop
int3
int3
int3
int3
jle
loopne
addr16
and
ret
in
hlt
jmp
ss
in
adc
shll
dec
outsl
mov
sub
test
test
int
and
sbb
add
jmp
cli
pop
jae
cmp
pop
lret
push
sub
js
cmp
imul
loopne
nop
cmpsl
and
stos
inc
loope
mov
cmp
and
sbb
in
sbb
add
int3
int3
int3
cmc
aas
xchg
popa
lret
es
jmp
cli
cmp
mov
xchg
fucom
ds
mov
pop
dec
pusha
sub
jo
or
test
stos
in
movsb
xor
popf
std
mov
ja
sbb
sbb
add
add
cmpsb
xchg
xchg
int
repnz
pop
push
sbb
sub
mov
aas
loope
in
bound
xor
add
add
and
test
pushf
mov
and
xor
es
dec
ja
out
out
lds
fcomps
add
add
add
fstps
imul
or
or
int3
int3
int3
int3
int3
adc
mov
fidivs
cmpl
mov
push
add
add
sub
leave
jecxz
xchg
or
sub
mov
dec
sub
movsb
repz
jg
mov
xchg
loop
dec
jo
imul
add
add
add
pop
jl
fbld
decl
out
arpl
dec
lods
loopne
inc
inc
xor
stos
sbb
popf
stc
ljmp
inc
mov
iret
or
add
add
add
shll
cmpsb
daa
inc
lahf
repnz
mov
push
inc
ret
sahf
fmulp
sbbl
sub
in
xor
addr16
roll
lds
inc
jmp
fcmovne
es
jns
add
add
add
mov
test
xor
int3
int3
int3
int3
int3
pop
mov
sbb
pop
dec
xchg
mov
fwait
mov
sub
subl
sbb
sbb
sub
inc
dec
mov
test
mov
jecxz
out
jmp
add
fstps
add
add
lret
iret
inc
xchg
mov
adc
lret
xchg
xchg
adc
xchg
xor
push
push
mov
mov
adc
add
pop
lret
je
testb
jo
aam
sbb
stos
pushf
pop
stos
int3
inc
sbb
add
add
jmp
test
mov
int3
sarb
jge
jle
aaa
xchg
mov
aaa
add
lcall
aam
sub
xchg
xchg
adc
cld
add
add
add
arpl
or
in
push
in
push
lret
sbb
mov
mul
mov
sarb
mov
jmp
fsubrl
or
or
lds
add
add
add
outsl
and
insl
or
mov
xor
jecxz
popf
jns
pop
test
pop
xchg
xchg
aam
dec
mov
and
mov
add
add
push
int3
sbb
add
mov
int3
int3
int3
pop
fsubp
mov
xor
out
testl
test
add
fucomip
sbb
sbb
add
xchg
arpl
xchg
add
sbb
dec
in
in
xor
fisttps
outsl
xor
shll
or
add
add
add
mov
aaa
pop
push
pop
je
add
mov
outsb
ljmp
shl
mov
or
dec
jle
icebp
and
push
sub
add
mov
cmc
lahf
shll
fdivrs
fwait
mov
mov
icebp
jmp
in
sub
and
sub
xchg
jmp
out
mov
pop
add
xor
mov
dec
push
insl
add
add
add
cmp
outsb
and
mov
cwtl
dec
test
jnp,pt
stos
in
and
cmpsb
fdivrs
repnz
push
data16
xor
add
add
rclb
inc
lds
xchg
sbb
arpl
scas
or
mov
jp
int3
int3
int3
int3
int3
add
sbb
add
add
add
xor
mov
mov
cmp
push
lcall
lods
mov
or
fdivp
fstps
jnp
mov
lock
inc
push
dec
sub
xlat
xlat
mov
and
add
add
scas
sbbb
pop
xchg
or
cwtl
lcall
adc
and
rorl
cmc
mov
icebp
das
icebp
sahf
sbb
fs
mov
add
push
in
mov
or
arpl
daa
xchg
jecxz
cltd
cmc
das
addr16
clc
add
push
sub
lret
cmpsl
and
ret
mov
test
mov
add
add
or
xchg
lea
push
jmp
insl
roll
int3
int3
mov
imul
adc
push
adc
addr16
lcall
les
stc
bound
add
add
jno
add
scas
xchg
mov
and
dec
cmpsb
sahf
adc
fnstcw
aaa
adc
xor
or
test
sub
and
add
add
adc
xchg
mov
jne
fnsave
pop
dec
pop
shlb
xor
xor
loope
mov
icebp
out
pop
push
fmull
jo
sbb
cmpsl
cmp
lods
es
es
sti
xor
out
or
lods
cmp
sub
mov
add
add
lock
jmp
and
insl
subl
int3
int3
int3
int3
cmpsb
xlat
pop
fisttpl
popa
jp
inc
movsb
std
loop
insb
pop
ret
sbb
cmp
ret
lea
dec
or
add
add
add
inc
cmpsb
aaa
sti
lds
std
inc
cmp
hlt
call
inc
in
movsb
push
or
loope
iret
pushf
xchg
cmp
pop
je
jne
mov
inc
xchg
add
add
hlt
outsl
cltd
jno
adc
mov
sbb
pop
pop
and
mul
sahf
cld
hlt
inc
shll
adc
pop
inc
aad
roll
les
xor
pop
iret
int
xchg
sub
test
int3
int3
int3
sbb
jbe
outsb
mov
cmpsl
popf
add
add
add
hlt
jmp
popf
mov
mov
fistpl
lods
sbb
jmp
mov
mov
and
add
add
movsl
mov
jmp
lods
pushf
test
cmp
xchg
and
lahf
pop
dec
pop
test
jp
mov
sbb
push
leave
xchg
add
add
sbbb
jl
aaa
push
cmp
add
inc
stos
pop
adc
cmp
sbb
mov
mov
bound
add
add
cmp
bound
int3
int3
int3
int3
inc
xlat
inc
xlat
or
xchg
cmp
cld
push
in
cmp
lds
lcall
push
or
xlat
test
sbb
mov
add
add
inc
sub
loop
clc
xor
mov
repnz
out
out
insb
cmc
loope
mov
icebp
adc
sbb
sub
add
sahf
mov
addr16
sub
fs
adc
sub
cltd
lods
sbb
xor
mov
iret
addr16
xchg
cmpb
push
xor
add
add
add
push
or
lahf
jbe
mov
cmpsb
or
and
gs
mov
jmp
xchg
mov
add
push
mul
fdivrs
lock
imul
sbb
and
push
push
insl
subb
xchg
mov
js
lods
jmp
add
add
add
sbb
cmp
push
std
movsl
fistpll
sahf
lahf
popa
sbb
xor
repz
je
lret
or
add
dec
mov
adc
int3
int3
int3
test
jo
scas
inc
jmp
xchg
jge
inc
addr16
std
sub
stc
outsl
mov
bound
popf
push
nop
jns
push
add
add
add
rcrl
ss
es
sub
bswap
call
xchg
lret
scas
les
int
test
rorb
adc
outsb
jnp
add
add
inc
movsl
sti
mov
cmp
push
jl
adc
int3
int3
int3
int3
int3
test
sbbb
in
out
adcb
xchg
daa
mov
dec
data16
push
lods
pop
popa
push
rcl
ficoml
faddp
dec
pop
into
jo
lock
add
add
add
aad
mov
add
xchg
int
xor
xchg
decb
xchg
jb
nop
sub
adc
xchg
icebp
pop
xor
out
and
sarb
stos
cmpsb
rorb
in
test
int
cli
xchg
mov
sbb
ljmp
add
add
add
jge
inc
xor
or
jo
test
add
jecxz
out
add
repnz
add
add
add
add
jnp
out
int3
int3
int3
int3
pop
faddl
fwait
mov
cmp
scas
push
lret
adc
cld
inc
les
leave
int3
xchg
cmpb
push
ljmp
xchg
test
sbb
add
add
add
jmp
shll
dec
fs
popa
jb
insl
rcll
add
add
orl
cld
daa
out
cltd
fildll
stos
jl
xchg
xchg
xor
int3
int3
int3
int3
cltd
jno
jbe
adc
inc
leave
jb
bnd
xor
mov
and
jbe
popa
rolb
add
dec
shrb
scas
and
divps
dec
and
mov
jmp
cmp
pop
cltd
lahf
pop
cltd
fsubrl
out
invd
jae
and
cmp
add
add
out
mov
das
pop
pop
loope
es
sub
dec
xchg
push
leave
cltd
out
pop
mov
dec
cli
lahf
sub
mov
dec
add
add
jno
inc
cmp
out
loop
jnp
fsts
add
stos
xor
lods
pop
adc
add
add
add
clc
lods
mov
xchg
enter
cltd
hlt
jb
jnp
mov
jno
or
pop
daa
push
mov
push
jmp
mov
mov
into
lret
push
dec
pop
ljmp
inc
mov
add
add
add
insl
mov
or
pop
sub
int3
int3
repnz
aam
insl
mov
outsl
mov
and
ljmp
inc
pop
das
pop
pop
cmpsl
xor
mov
ds
or
add
out
loopne
mov
mov
daa
loope
xchg
pop
movsb
sbb
out
pop
mov
es
cmp
ret
scas
test
gs
sti
imulb
shlb
mov
xchg
fmul
int3
int3
int3
int3
int3
xor
sbb
add
add
testb
icebp
fimull
loopne
test
outsl
in
xlat
xchg
adc
pushf
insb
or
push
frstor
rclb
mov
add
add
adc
repnz
das
ja
xor
pusha
jb
mov
xor
dec
inc
mul
mov
cwtl
mov
dec
js
mov
mov
adc
pop
pop
scas
dec
ficomps
adc
roll
lock
push
xlat
loope
lahf
sbb
out
flds
add
add
cwtl
add
pusha
stos
mov
roll
or
jp
sub
test
and
jmp
adc
scas
inc
and
das
bound
mov
cltd
ja
test
test
xor
cwtl
add
add
icebp
sub
push
leave
sub
leave
push
jmp
xor
sarb
pop
out
repz
xor
and
repz
xchg
pop
or
add
dec
neg
in
arpl
xor
faddl
inc
mov
adc
add
add
add
iret
jnp
aaa
pop
pop
cmpsb
imulb
lods
and
or
pop
mov
in
pop
add
rcrb
mov
xchg
in
ret
add
jnp
sub
clc
add
add
test
jl
andl
gs
out
mov
insl
xchg
pop
aam
mov
movsl
daa
adc
xor
sbb
stos
pop
inc
mov
and
cmpsb
xchg
rcrb
add
add
lahf
fcmovu
sub
stos
inc
dec
mov
dec
scas
mov
das
cmp
out
mov
and
mov
insb
out
call
mov
int
cmp
int3
int3
in
xor
cmpl
xchg
jo
mov
subl
xchg
mov
pop
outsb
clc
or
fsubs
aas
in
addr16
xchg
inc
adc
js
and
xor
mov
pop
sub
imul
mov
add
add
add
push
xor
push
or
rcl
or
les
stos
pop
pop
mov
mov
test
and
and
jp
xchg
imul
lea
iret
mov
daa
int3
int3
int3
int3
int3
xor
add
add
mov
dec
cmc
pop
adc
hlt
cmp
sub
sub
out
lods
mov
xor
cmp
pop
ja
mov
lods
or
call
in
jg
pop
and
daa
pop
mov
add
add
test
xchg
paddq
in
insl
adc
and
jp
xor
xorl
jmp
jne
loop
xor
aad
add
add
add
insl
mov
loop
mov
loop
sbb
xchg
adc
loop
repz
out
lahf
pop
dec
xchg
inc
push
out
cmp
pusha
cmp
and
je
mov
or
pusha
loop
cmpsl
daa
or
inc
call
xor
nop
sub
jae
insl
xor
cmp
sub
int3
int3
adc
stos
mov
rclb
dec
jmp
faddl
xchg
loop
cmp
push
xchg
cli
enter
popaw
add
add
mov
mov
add
cmp
sub
mov
xchg
xchg
jns
hlt
fiadds
test
xchg
sub
add
add
mov
push
rcll
in
inc
iret
pop
jge
sarl
bound
xor
push
adc
jns
push
popa
add
sub
aam
cmp
push
xchg
jle
add
add
add
jp
dec
rolb
and
mov
scas
cld
xor
mov
push
insb
and
jbe
cmpsl
dec
adc
jne
cwtl
repz
insl
andl
add
add
out
test
roll
negb
sub
xor
push
mov
lcall
je
loope
push
fsubrl
daa
push
mov
mov
and
es
jae
repz
add
lret
cmp
add
pop
in
dec
jae
sub
int3
cld
xor
push
mov
lahf
cmp
out
xor
and
test
add
cli
daa
jle
lcall
ljmp
std
lret
jge
jnp
xchg
dec
daa
cmp
mull
loop
sbb
bound
in
sbb
xor
add
idivl
add
add
ljmp
pop
mov
out
sub
loope
das
cld
mov
pop
scas
cmp
into
dec
sti
out
cmc
andb
mov
dec
lret
mov
lock
sub
push
cmp
out
jno
shlb
shrl
add
andb
in
insb
stos
outsb
dec
xchg
jmp
sbb
fnstsw
fstl
insl
jae
std
sub
adc
test
jns
lea
cli
shl
push
jo
aad
inc
or
and
rcll
arpl
int3
int3
int3
loope
shrl
pop
pop
add
add
add
add
xchg
leave
imul
dec
jne
xchg
push
or
aam
push
dec
xor
or
out
js
sub
fistpll
ja
cmp
mov
mov
fiadds
sub
test
xchg
and
jb
xchg
fsincos
lcall
add
add
test
ss
add
sub
aas
scas
mov
push
push
jl
jmp
cmp
out
hlt
mov
cld
popa
inc
cli
jle
loopne
lock
add
add
add
fisubl
or
inc
bound
imul
shlb
movsb
mov
and
int3
int3
int3
mov
xchg
into
dec
xchg
inc
cmp
xor
pop
mul
pop
aam
dec
sbb
sub
icebp
fildll
ret
xor
xchg
mov
xchg
and
sbb
mov
idivl
lcall
and
popf
cmp
xchg
pushf
hlt
and
mov
pop
divb
xor
inc
les
cmc
dec
pushf
or
fstpt
addr16
and
xchg
pop
add
add
jg
scas
cld
rcll
sub
loop
popa
cwtl
mov
pop
push
xor
fs
sahf
int3
int3
int3
int3
add
add
add
nop
dec
rcll
sub
sub
mov
inc
mov
leave
repnz
arpl
movsl
gs
fsubs
imul
in
lahf
lea
stc
pop
fsubp
pop
jecxz
xchg
and
out
lea
ds
xchg
out
scas
xchg
lahf
or
addr16
mov
shrb
daa
ret
dec
cmc
test
cld
mov
add
add
cwtl
cwtl
daa
dec
aas
fdivr
push
sarb
push
jae
sub
les
sbb
fcoms
decl
in
fildl
in
xchg
out
sarb
add
ds
cwtl
in
dec
xchg
dec
arpl
dec
and
add
call
xchg
arpl
lret
loopne
mov
add
add
dec
mov
arpl
lds
lds
adc
cwtl
out
in
testl
dec
sbb
inc
push
fimuls
pop
in
stc
mov
mov
test
dec
lahf
movb
pop
xchg
adc
push
jp
mov
cmc
ret
aaa
xchg
lds
add
add
inc
in
fdivrl
lret
pushf
push
cld
frstor
pop
test
mov
xor
xchg
les
cli
mov
cmc
into
sub
call
sti
rclb
xchg
xchg
into
cltd
int
lea
test
scas
xor
add
and
scas
frstor
lea
push
stc
dec
jno
xchg
mov
mov
jmp
jmp
ja
cmp
outsb
fildl
cmp
pusha
mov
cmpsb
fisttpll
add
add
in
bound
sarb
loopne
ja
insb
scas
push
adc
cltd
ja
pop
dec
dec
stc
cld
or
fcompl
xchg
je
jl
cld
xor
inc
push
mov
and
hlt
xchg
std
test
sub
jecxz
scas
stc
add
add
xlat
add
pop
xor
xor
lods
jb
xchg
in
fiadds
push
xlat
xchg
dec
ret
pop
ljmp
add
jl
scas
jl
pop
pop
and
sub
hlt
xchg
mov
push
into
pop
xchg
mov
fs
sarb
cld
addb
retw
push
sub
add
adc
sbb
add
jns
rolb
rclb
mov
lds
rcrb
sub
or
cmp
in
jle
sbb
aam
add
add
add
xchg
add
mov
push
in
xor
fmuls
in
push
pop
jge
lcall
int3
int3
int3
int3
int3
je
iret
cmp
jle
lods
mov
push
insl
gs
leave
rcr
lret
add
add
cmpsl
pusha
mov
inc
push
jmp
out
add
push
xor
cmp
fisttpll
xor
clc
sahf
sbb
clc
lods
pop
call
xchg
pushf
mov
mov
shlb
add
popa
mov
sti
pop
outsb
lds
insb
sub
mov
int3
fadds
add
add
sbb
lcall
rcrb
sub
inc
sub
ss
adc
lcall
push
pop
imul
add
add
jg
cmp
jmp
inc
adc
rcrl
dec
dec
mov
pop
sbb
lret
adc
mov
into
cmp
adcl
jb
sub
cltd
jle
xchg
dec
pop
dec
cltd
aaa
shll
icebp
add
add
add
fists
int3
int3
int3
int3
int3
xlat
out
jnp
sub
xor
mov
and
outsb
fsqrt
dec
sbb
or
xchg
int
mov
clc
adc
jae
in
xor
out
into
push
sub
mov
rcrb
sub
xchg
shll
sahf
je
pop
inc
jge
shrb
xchg
ja
and
jmp
out
in
sbb
pusha
popf
repnz
repnz
jmp
jno
adc
push
pop
iret
das
mov
mov
pop
dec
into
add
movsl
cmp
jge
pop
xor
pinsrw
ja
loopne
or
movsb
and
cld
dec
xor
idivl
lods
cltd
jg
sub
mov
les
pop
lods
push
cmp
pop
leave
shr
andb
add
add
add
iret
lret
xchg
arpl
stc
cmpsl
dec
out
sub
mov
mov
add
jmp
inc
xchg
outsb
mov
cwtl
int3
inc
scas
neg
aas
sub
jle
xor
add
cmpsl
xchg
sub
cmpsb
sahf
sahf
test
in
mov
adc
push
int3
int3
int3
int3
sbb
cld
andl
hlt
into
jl
dec
iret
xchg
aaa
or
sbb
add
inc
xchg
xor
test
xor
call
aas
jmp
mul
out
mov
out
mov
stos
xchg
jb
aad
aas
ss
add
cli
mov
jns
pmuludq
add
add
fwait
xchg
out
add
add
lcall
outsb
imul
icebp
add
jns
fdivr
inc
ljmp
mov
inc
in
mov
jb
sahf
xor
cmpsl
xor
add
add
add
add
movsb
cmp
add
add
or
jno
xchg
xchg
mov
rclb
xor
jecxz
stc
in
dec
int
iret
in
cld
push
sub
pushf
dec
rol
mov
cmp
push
add
add
add
add
fldcw
je
outsl
jg
test
out
loopne
movsb
adc
xor
fcomps
mov
mov
fs
pop
cli
nop
mov
sbb
int3
int3
int3
push
mov
sbb
add
add
inc
jmp
cmp
mov
sbb
fwait
xchg
xchg
adc
rolb
mov
test
cmp
xchg
xchg
aad
xor
add
xor
mov
mov
mov
pushf
mov
fistpl
or
pop
cs
xchg
push
cmpsb
jne
dec
push
push
inc
xor
add
add
lock
xchg
lret
or
std
gs
out
mov
mov
sub
sbb
xchg
xor
sti
push
lock
jo
daa
or
mov
sbbl
cmp
in
cs
in
cmp
inc
int3
int3
int3
int3
int3
int3
int3
rorl
mov
movsl
add
add
add
add
adc
cmp
in
cli
mov
imul
repz
push
cmc
fxch
xor
cmpl
push
lret
adc
loop
iret
dec
pushf
xchg
inc
imul
je
cmp
cmpb
xchg
stc
add
add
add
aaa
xor
mov
adc
dec
mov
or
test
iret
pop
in
jnp
pushf
or
xor
sbb
cli
ljmp
add
iret
shr
push
jne
rorb
mov
add
int3
int3
int3
int3
xor
cmp
jns
cmc
jnp
loope
lcall
inc
dec
jne
or
lods
call
xor
adc
lods
in
push
cmpsl
xchg
pop
or
sbb
add
arpl
add
add
cltd
scas
out
popf
pop
add
cmpsl
push
and
test
mov
pop
enter
mov
pop
sldt
add
add
sub
inc
aaa
xchg
xchg
mov
cmp
fisubs
sbb
dec
sbb
aad
test
popf
or
push
cld
xor
add
add
add
pop
shll
enter
or
xor
inc
adc
sbbb
mov
call
xor
mov
cmpsl
or
or
xchg
sub
stos
ret
add
pop
lea
imulb
pushf
adc
sub
into
xchg
mov
fnsave
lea
dec
xchg
push
push
movsl
les
xor
cmpsb
dec
call
das
add
add
add
add
add
mov
out
in
add
les
jecxz
in
mov
jne
adc
call
push
jl
cltd
pop
inc
or
aam
mov
mov
sbb
cs
mov
add
add
mov
mov
cmp
xlat
movsb
repz
lods
jmp
push
cs
mov
sub
jecxz
ljmp
jecxz
add
add
std
aad
mov
dec
push
iret
int
push
bound
pop
lcall
leave
mov
out
test
sbb
mov
jb
lret
xchg
mov
loop
scas
dec
lcall
out
insb
outsl
jb
add
add
mov
fmul
jo
push
mov
add
push
lcall
lock
jae
cwtl
xor
add
dec
ja
inc
int3
addr16
test
jle
sbb
sti
xchg
xor
and
add
pop
outsb
xchg
int
inc
lret
rolb
jno
out
xor
push
int3
out
pinsrw
sbb
pop
jbe
mov
jne
push
mov
ret
push
dec
int3
int3
cld
xor
stos
test
mov
loop
shl
add
cmc
ds
out
dec
push
fs
sub
lods
cmp
scas
or
test
aas
inc
outsb
ret
cmp
gs
add
add
add
mov
xchg
xchg
fs
cld
faddl
xor
popa
out
int3
int3
int3
int3
int3
clc
cmc
test
xor
stos
mov
push
popa
scas
rclb
add
add
test
in
add
js
fs
add
test
or
add
mov
repz
mov
cwtl
aaa
pop
push
add
add
add
je
mov
xchg
sub
sbb
pop
fldt
xrelease
push
push
notl
and
pop
sbb
jl
add
add
add
jns
repnz
lock
enter
int
dec
mov
dec
and
push
adc
fisubs
cltd
or
mov
sub
mov
and
rep
jecxz
push
mov
icebp
and
add
leave
sub
cmp
sub
mov
int3
int3
int3
mov
mov
add
add
in
addr16
cmp
xlat
or
inc
cmp
cmp
adc
and
pop
in
fistps
cmp
cmp
push
fld
das
and
mov
xchg
inc
cmc
pusha
mov
sub
add
outsb
jmp
and
cmp
xchg
mov
inc
scas
mov
xchg
and
mov
jnp
data16
push
ss
cmp
rorb
add
add
add
add
hlt
lock
and
mov
sub
push
mov
sti
stos
xchg
int3
int3
int3
int3
int3
int3
test
jmp
iret
xlat
lahf
add
add
add
xchg
cwtl
out
rcll
or
das
cmpsl
xor
call
ljmp
dec
adc
in
adc
mov
xchg
popf
or
mov
add
stos
int
xchg
dec
sub
loope
inc
cs
xor
push
icebp
int3
int3
int3
int3
int3
int3
int3
and
enter
fistl
movsb
or
add
add
nop
sbb
cmp
adc
es
outsb
arpl
fcoms
jae
into
cmp
push
sbb
sar
repnz
cmp
daa
sbb
sbb
stos
cli
lret
out
add
add
loop
add
mov
mov
mov
divb
iret
in
sbb
pop
and
int3
int3
int3
stos
xchg
xlat
jle
adc
mov
test
fninit
lcall
add
repz
aaa
lret
cmp
dec
sub
mov
add
add
add
jo
aas
lds
jl
push
jge
mov
push
push
decl
loopne
adc
test
cmp
testl
addr16
dec
inc
or
or
cld
gs
sbb
in
push
pop
mov
dec
mov
adc
add
add
xchg
sub
cltd
sbb
fiaddl
pop
pusha
lret
add
xor
in
xor
mov
add
add
icebp
sub
push
xchg
out
pop
cwtl
fwait
mov
push
arpl
add
out
push
sbb
hlt
mov
dec
inc
xchg
cmpsb
pop
in
sbb
push
popf
adc
mov
clc
sbb
add
mov
lcall
cmp
jb
je
sbb
or
sub
pop
and
outsl
mov
sub
ret
or
add
add
test
mov
ret
or
inc
je
shl
shlb
inc
push
andl
mov
add
add
or
mov
sub
popa
push
outsb
jg
sbb
mov
add
stos
xor
xchg
int
xor
outsb
or
add
add
jle
or
or
lods
add
movsb
aas
mov
inc
loope
and
mov
pusha
xchg
jne
int3
int3
int3
int3
int3
in
push
outsb
insb
shll
insl
jge
push
shl
dec
pop
and
adc
and
add
add
add
add
addr16
cld
out
inc
mov
ficomps
xchg
pop
ret
das
jne
fadds
inc
push
js
fisttpll
mov
jmp
in
add
add
scas
addr16
mov
mov
add
cmc
movsl
push
fcomps
jae
push
aaa
dec
sahf
mov
insb
lds
xchg
stos
sub
mov
push
mov
and
lds
add
add
bound
mov
rclb
pop
daa
fs
leave
repz
lret
dec
push
cmp
mov
push
in
arpl
xchg
sub
add
push
push
int3
int3
int3
jbe
fsub
cmc
call
cmp
jle
and
add
fiadds
xchg
sub
lock
inc
add
add
add
pop
xchg
cmc
and
cwtl
cltd
lds
std
sub
mov
mov
sub
add
cmp
cwtl
lret
xor
shr
cmpsb
and
lcall
out
xor
leave
jp
add
add
jo
popf
into
loope
js
add
add
add
mov
bound
xchg
mov
cmp
push
rclb
scas
stos
sbb
bound
fstps
and
adc
sahf
call
daa
loopne
mov
xor
rolb
add
add
mov
outsb
jne
push
xchg
jbe
fistps
js
lret
cwtl
dec
lret
fwait
mov
es
mov
cmpsl
pop
clc
daa
mov
xor
add
add
popf
loopne
mov
mov
cltd
flds
repnz
dec
add
cmp
es
int3
int3
int3
int3
int3
and
jl
xchg
out
imul
jbe
jb
subb
pmaxub
add
add
imul
push
mov
call
jne
mov
mov
ret
adc
ds
popa
mov
mov
push
adc
jmp
add
add
inc
test
in
sarl
jmp
idivb
adcl
imul
pop
fidivrs
stc
mov
sub
rorb
fsubp
adc
push
dec
inc
das
sub
int3
int3
int3
int3
int3
pop
stos
push
adc
inc
repz
add
add
iret
iret
aam
bnd
lret
scas
std
in
jmp
mov
cmp
dec
shll
in
pusha
daa
and
call
in
fidivl
jecxz
pop
jb
out
xor
out
and
push
push
je
sub
xchg
add
or
jecxz
mov
fyl2xp1
xchg
cmp
popa
xchg
es
aad
int3
sub
adcb
addl
add
add
xchg
inc
into
mov
adc
pop
adc
adc
dec
adc
int
lret
ss
fstpt
dec
ret
inc
into
xor
add
add
rcrl
in
je
xchg
mov
bts
arpl
adc
add
add
add
int3
int3
int3
int3
int3
mov
rclb
and
out
gs
rclb
push
xchg
test
adc
imul
into
andb
js
shll
or
add
add
add
repz
cli
add
xchg
ja
movsl
sbb
mov
loop
sub
ds
out
dec
mov
scas
ljmp
push
push
sub
jo
pop
lahf
cld
push
stos
rolb
add
add
add
add
insl
in
push
cmp
push
out
ss
daa
jge
adcl
or
inc
adc
mov
loop
sub
xchg
imul
mov
notb
add
add
add
std
add
outsb
enter
in
dec
mov
dec
aad
adc
rcll
lcall
int3
int3
int3
int3
int3
push
cmp
fnstsw
add
scas
dec
ficomps
inc
add
add
fidivrl
or
loop
stc
and
notb
mov
add
add
add
rorb
iret
sbb
mov
dec
inc
xlat
in
mov
shrl
xchg
test
sbb
imul
mov
testl
push
mov
xor
out
lcall
add
add
add
jno
jae
aaa
mov
sub
iret
lods
jle
inc
xchg
jl
push
into
das
dec
ds
out
leave
aaa
mov
xor
rep
add
add
add
add
mov
jnp
movsl
inc
and
out
loopne
mov
xor
mov
mov
aas
pop
shrb
imul
cmp
add
add
add
adc
in
xor
daa
es
push
pop
test
orb
lock
and
add
add
adc
push
xor
sub
lcall
loop
sbb
pop
std
lahf
in
push
cmp
sbb
cmpsl
add
add
int
repz
daa
mov
jg
sub
ficompl
fsubl
sarb
inc
mov
xor
and
mov
add
add
sub
scas
cld
pop
test
fisttps
and
icebp
lret
insb
loopne
mov
mov
pop
adc
lret
int3
int3
int3
int3
int3
int3
inc
cli
sub
inc
cmpsl
push
mov
sbb
mov
xor
and
mov
add
add
inc
xchg
mov
and
dec
jge
dec
outsb
mov
mov
cmpsl
subb
jge
xor
dec
les
jb
call
fdivrl
jmp
sub
outsb
mov
jnp
xchg
les
mov
dec
stos
and
ss
or
add
inc
imull
jno
scas
jle
xor
mov
dec
xor
add
pop
call
add
leave
dec
or
xchg
stos
scas
pop
dec
fcoml
int3
int3
int3
int3
int3
int3
ja
cli
test
inc
sub
data16
and
sub
outsb
js
add
das
sbb
dec
mov
leave
ljmp
rorb
pop
mov
xchg
xchg
inc
push
cmp
mov
fiaddl
and
jns
jbe
mov
cmc
pop
pop
jbe
push
sub
mov
add
add
add
xor
movsl
fnsave
in
sbb
stos
sbb
in
loop
mov
jl
and
jl
xchg
sbb
xchg
xchg
jnp
jno
adc
icebp
mov
out
adc
jmp
and
std
lea
push
sub
popf
xor
fisubrs
cmc
and
repz
fists
mov
dec
push
shrb
pop
sbb
popa
pop
insb
cwtl
dec
and
shlb
mov
and
push
int
cmpsb
add
int3
int3
int3
lret
mov
insb
add
add
add
inc
lcall
pop
mov
popa
js
leave
lahf
push
inc
dec
cmpsl
add
xor
xor
jnp
add
add
hlt
xor
xchg
mov
call
jmp
sbbl
and
pop
push
xchg
das
je
mov
popf
and
dec
pop
push
roll
mov
sbb
fists
mov
jnp
add
add
jl
mov
sub
jne
dec
or
shlb
lods
movl
fdivl
sbb
add
mov
jbe
xchg
xor
dec
ds
add
add
xchg
bound
iret
mov
inc
mov
pushf
insb
mov
loopne
pop
enter
notb
daa
mov
xor
xchg
inc
lods
mov
lahf
mov
xlat
sti
push
daa
dec
inc
out
and
movq
int3
int3
int3
mov
add
add
add
out
sub
js
push
frstor
roll
je
xchg
mov
adc
xchg
push
stos
repnz
aam
cmp
sbb
jmp
cmp
pop
xor
orb
push
hlt
mov
out
mov
incl
add
push
and
outsl
xchg
aam
inc
add
mov
js
dec
push
jecxz
push
xor
out
aaa
js
cmpsl
or
out
pop
ret
sbb
shll
jl
and
scas
repnz
xchg
aad
cmp
add
jmpw
and
mov
mov
mov
and
insl
xchg
popa
js
mov
addr16
mov
xchg
pop
lds
add
add
jbe
out
call
pop
xchg
inc
sbb
xlat
in
hlt
inc
xchg
int3
int3
int3
int3
int3
inc
call
push
arpl
imul
ss
dec
scas
xchg
test
aaa
outsl
add
dec
adc
mov
enter
out
jge
insl
jp
jno
xchg
jb
and
insl
jle
mov
rcrl
sub
leave
in
loopne
push
sbbl
cmp
add
add
add
mov
dec
bound
mov
push
out
imul
clc
jge
sbb
sahf
cli
in
xchg
and
jecxz
xor
push
mov
and
push
fs
jmp
sub
jmp
mov
add
add
jb
or
and
sbb
addb
jmp
cmpsl
fildll
dec
adc
jo
mov
leave
xchg
out
inc
mov
insl
push
sub
xor
xchg
xchg
test
mov
push
je
add
add
push
adc
leave
sarb
aas
jnp
xchg
daa
add
int
pop
and
jne
je
dec
in
inc
sbb
mov
int3
int3
int3
pop
ljmp
add
sub
jmp
idivl
dec
cltd
movsl
enter
nop
sub
mov
and
lods
adc
mov
call
leave
in
dec
pop
mov
movsl
inc
cmp
leave
or
mov
add
add
xchg
xorl
aaa
fldenv
popa
inc
push
xchg
ds
cltd
mov
or
add
or
mov
add
mov
popa
mov
cmc
fiadds
repz
xchg
jbe
cmp
adcb
xchg
add
or
push
int3
int3
int3
int3
int3
int3
cmc
cmp
xor
sbb
mov
cmp
or
test
ret
push
cmp
repnz
xlat
xchg
and
mov
add
and
out
aaa
and
jae
dec
insl
xor
int3
xor
imul
mov
mov
test
shl
lods
sub
lcall
adc
int3
int3
int3
int3
int3
int3
jbe
adc
mov
je
dec
iret
add
add
fmuls
push
jns
das
lock
jmp
jno
dec
xchg
pop
lret
ljmp
addb
add
add
add
add
sbb
cltd
cli
sub
or
pop
je
pushf
stos
loope
cmp
push
and
sbb
xchg
jae
dec
enter
lahf
fistps
mov
test
dec
outsl
pop
lods
mov
jecxz
push
push
movsb
scas
ret
sbb
add
add
push
mov
ds
xor
outsb
cmpsl
es
xchg
mov
push
scas
inc
cld
inc
pusha
pop
cmp
inc
xchg
jbe
cli
mov
mov
xchg
add
add
add
bound
les
lahf
push
mov
xchg
xchg
sub
test
xchg
fcmove
int3
int3
int3
int3
or
jo
inc
outsl
les
jnp
enter
mov
repnz
dec
outsb
in
pop
mov
add
add
stos
mov
outsl
mov
mov
adc
jno
stos
mov
fs
jnp
rcll
js
mov
loopne
bound
jge
add
scas
cmc
das
jge
je
mov
fstpl
outsl
and
jae
xor
add
add
add
mov
enter
mov
cmp
hlt
mov
scas
call
jo
scas
loope
sub
mov
add
cld
jmp
xchg
mov
loop
inc
data16
mov
xchg
mov
pop
addr16
push
jecxz
mov
scas
sub
in
imull
mov
outsl
test
jno
sub
add
add
add
push
xor
mov
sbb
data16
out
cmp
sub
xchg
cmpsb
not
popa
into
add
adc
sub
outsb
xchg
dec
call
mov
mov
sbb
les
push
cmp
stos
mov
mov
jns
iret
fwait
stos
push
jae
int3
inc
mov
shrl
mov
sti
loope
int3
fwait
test
fildl
add
lock
mov
jae
aaa
mov
jns
cmpsl
dec
cltd
mov
and
ds
js
into
inc
into
cmp
aad
int3
int3
int3
int3
int3
push
add
add
sbb
lcall
aaa
add
jb
dec
mov
test
outsb
btr
icebp
test
fiadds
xchg
rcll
add
fistpll
repnz
lds
xchg
bound
pop
popf
fiaddl
push
and
shr
leave
push
addr16
and
add
lock
ret
js
dec
pop
scas
cmc
neg
stos
sub
jg
add
cmp
call
adc
jae
xchg
mov
lcall
scas
imul
stos
aas
lods
scas
or
jne
notb
mov
mov
jle
outsb
jae
mov
sbb
add
inc
mov
push
insb
cltd
scas
in
jnp
sbb
je
popa
out
in
mov
lods
cwtl
push
sub
aad
pop
jecxz
outsb
sub
sbb
adc
mov
mov
jb
xor
mov
pop
int3
int3
int3
int3
int3
int3
int3
sub
cmp
inc
inc
xchg
cld
out
mul
push
js
xchg
inc
addr16
dec
jg
inc
and
mov
fincstp
aam
mov
sub
pop
lods
add
add
add
call
xchg
jl
repz
add
imull
lods
sahf
pop
or
xor
mov
xchg
jmp
das
xchg
in
out
out
outsb
pop
mov
adc
scas
jmp
int3
int3
int3
int3
int3
out
mov
add
add
inc
jno
adc
jno
or
mov
cld
cmp
xchg
insl
stos
jmp
adc
fidivs
jl
pushf
lret
xor
nop
ljmp
and
scas
add
add
xchg
stos
shll
push
sub
add
idivl
icebp
inc
fnstcw
aaa
stc
add
gs
je
adc
push
jge
call
mov
cmpsl
fs
or
jno
leave
repnz
push
rolb
add
add
mov
lahf
pushf
xor
add
inc
cmp
icebp
adcb
cmp
lcall
push
mov
sti
in
add
add
add
xchg
sbb
pusha
lahf
mov
ret
sub
push
repnz
call
aaa
int
and
into
ja
add
stos
stc
add
add
rcl
fpatan
mov
std
fwait
add
outsb
mov
adc
sbb
int
jno
xor
daa
gs
stos
in
dec
insb
cli
add
add
add
jne
pushf
rcll
imul
pop
xchg
in
pop
and
lds
or
jo
ffree
shll
aas
mov
add
jl
into
scas
sbb
mov
xchg
xchg
and
aam
jb
scas
dec
dec
push
fsubs
dec
jecxz
jp
add
add
add
xor
aas
out
mov
cmp
ja
push
push
pop
aad
aam
jp
xlat
cmp
push
imul
add
add
aas
xchg
mov
test
xlat
jns
test
movsl
jg
out
xor
imul
xchg
push
mov
repz
iret
push
repnz
rcl
int3
jo
push
xchg
adcl
insl
loope
cwtl
pop
adc
xchg
es
mov
int3
int3
int3
int3
int3
int3
ljmp
das
lods
pop
dec
push
loope
loop
rcll
mov
add
add
mov
loope
lods
faddl
cmp
daa
lea
iret
mov
and
in
leave
shrb
xchg
mov
pop
dec
sbb
dec
pop
hlt
or
and
push
cmc
mov
enter
add
add
add
faddp
dec
arpl
xchg
add
and
imul
xchg
aad
test
sub
subb
pop
xlat
and
ror
lcall
add
sbb
lcall
fwait
pushf
popf
and
mov
add
bnd
lods
in
es
sbb
mov
push
aaa
xorb
mov
add
sbb
loop
adc
add
add
test
insb
mov
imul
pop
test
pop
jnp
or
xchg
sbb
stc
lret
stc
inc
push
int3
int3
int3
int3
int3
xchg
and
and
add
push
mov
sub
aas
inc
mov
cmp
lret
sbb
out
scas
inc
cmp
add
leave
jne
arpl
sub
cmp
cmp
jnp
psadbw
repz
pop
out
cmp
divb
pop
test
sub
dec
test
cmp
popa
test
add
add
cltd
out
mov
int
pop
dec
ret
fidivs
fisubs
xchg
int3
imul
dec
stc
xchg
ja
inc
or
mov
out
push
add
add
add
add
dec
fwait
sti
faddl
cmpsb
and
mov
push
fstpt
mov
mov
xchg
ret
push
les
aaa
dec
xchg
push
je
adc
out
jmp
in
or
mov
cmpsl
jnp
add
add
mov
jnp
sub
stos
faddp
adc
int3
int3
int3
sub
pop
loope
add
sbb
mov
jbe
test
add
add
cltd
mov
mov
pop
xchg
xchg
jge
packsswb
or
push
pop
test
rorl
inc
les
add
outsb
testl
dec
and
wrmsr
test
mov
push
aas
pop
out
xchg
xchg
xchg
push
adc
xchg
outsl
xor
xor
cmpsl
popa
push
xchg
hlt
stc
xchg
push
lret
ja,pt
cmpsl
push
jnp
in
push
imul
divl
xor
mov
mov
cwtl
add
pop
mov
add
push
syscall
dec
aam
adc
ds
sbb
stos
data16
inc
dec
sahf
loope
pusha
jg
mov
cmpsb
cli
inc
in
mov
push
popa
mov
dec
xor
lods
jmp
int3
int3
int3
int3
int3
add
add
add
movsl
mov
cwtl
cmp
or
out
stos
push
fisubs
xchg
xor
push
cmp
cli
mov
dec
dec
mov
and
add
add
add
cmp
ljmp
mov
xchg
call
and
clc
faddp
lret
movsb
filds
mov
sbb
aad
push
jl
pusha
or
add
add
add
adc
int3
int3
int3
aas
inc
lret
xor
adc
hlt
adc
ja
lcall
and
in
mov
je
add
add
add
add
xchg
dec
fnstenv
pop
ds
mov
cmpsb
sahf
sub
pop
fsubrl
xor
mov
mov
jne
sbbb
pusha
push
mov
nop
mov
pop
adc
rol
pop
pop
add
add
add
arpl
push
push
lcall
pop
das
out
inc
push
int3
int3
int3
int3
mov
xchg
out
outsl
xchg
pop
pop
shlb
fcmovnbe
mov
add
add
add
mov
pushf
mov
xchg
mov
fildll
mov
push
mov
scas
cltd
rcr
push
ret
xchg
stos
mov
mov
sbb
add
jae
lods
test
push
add
cmp
in
movsl
ret
cltd
inc
xchg
and
aas
stos
push
pop
cltd
clc
std
rcll
insl
outsl
or
adc
xor
out
aas
or
push
insb
lock
sbb
aam
pmulhw
test
dec
add
add
add
add
aas
xorb
sub
std
dec
inc
leave
dec
mov
cmp
or
movsl
and
xor
inc
jo
movsl
arpl
fcompl
add
add
add
sbb
lret
jecxz
outsb
jmp
dec
lea
popa
add
in
scas
nop
test
gs
sbb
add
stc
arpl
mov
int3
int3
mov
add
add
jl
mov
xchg
cli
arpl
js
lock
scas
mov
or
divb
xor
out
dec
mov
xchg
pop
scas
pop
xor
pop
shl
sbb
pop
jp
test
pop
adc
fstpl
push
push
clc
lret
mov
add
add
add
movsb
jge
cmp
lret
sbb
xorb
je
push
or
push
inc
add
push
pop
sub
inc
int
jl
push
lds
fcoml
decb
lock
and
mov
xchg
adc
inc
arpl
mov
mov
out
or
add
push
movsl
test
mov
add
cld
fnop
mov
scas
fs
arpl
icebp
dec
xrelease
insb
fwait
mov
mov
push
call
int3
int3
int3
scas
jno
std
mov
mov
loopne
fstpl
in
in
imul
aam
adc
jle
lret
add
add
add
add
shll
test
out
sbb
fdivs
mov
adc
out
jno
test
add
add
add
dec
jecxz
outsl
cmp
or
cld
cmp
mov
rorb
ja
das
movb
xor
iret
xor
test
push
push
out
fwait
or
mov
scas
repnz
add
add
mov
add
leave
lahf
push
cmp
int3
int3
int3
int3
int3
mov
loopne
xchg
jnp
or
movsl
push
jno
mulb
jecxz
push
cmpb
popl
and
adc
sbb
add
add
add
shll
lahf
pushf
ficoml
scas
push
fsub
ljmp
movsl
in
xchg
cmp
adc
inc
mov
cmp
add
fsts
mov
sbb
pusha
and
inc
jae
mov
mov
lea
mov
js
mov
push
pop
stos
push
pushf
dec
pop
or
add
add
cmp
pushl
push
pop
jg
xor
lods
jo
scas
xchg
fidivrs
daa
je
xchg
js
jp
inc
enter
inc
mov
and
xchg
add
sbb
into
cmp
adc
orl
and
inc
call
xor
in
mov
cld
inc
or
aas
jo
test
sbb
divl
js
mov
push
cli
dec
cmp
jae
push
aam
mov
add
add
test
mov
es
mov
cwtl
mov
inc
adcl
push
rcr
pop
pop
mov
imul
mov
pop
dec
aas
popf
mov
add
add
shr
pop
leave
mov
add
fucom
icebp
pusha
cld
fistpll
out
aad
mov
repnz
mov
add
add
push
test
stos
or
xchg
xchg
or
xchg
movsl
jae
ljmp
push
inc
add
add
add
add
jge
lds
jge
mov
filds
sub
fiadds
mov
push
mov
mov
jno
je
add
sahf
int
xchg
xchg
jae
int3
int3
int3
int3
xor
iret
pop
cmp
xchg
add
add
mov
and
addr16
lods
mov
pop
fs
xchg
inc
jb
jg
rcll
mov
adc
sub
cwtl
cmp
dec
pop
pop
adc
test
pop
pushl
cmp
add
add
add
add
sub
test
xor
imul
cmp
fucom
xor
cmp
negl
mov
xchg
cmp
insl
gs
xchg
add
add
int3
and
sbb
xor
jno
repz
ds
scas
les
mov
push
sub
sbbb
xchg
and
pop
jns
pop
sti
stos
repz
jl
xsaveopt
lahf
ficomps
jmp
or
add
add
test
inc
sbb
and
loop
clc
hlt
xor
test
jae
or
sub
dec
add
fists
sbb
cs
push
xchg
mov
cmp
or
xchg
popl
hlt
push
in
add
add
add
mov
sbb
jg
insb
lods
test
addr16
data16
mov
out
pop
add
dec
pushf
cmp
dec
rcrb
in
mov
dec
repz
in
jl
add
add
add
imul
repnz
std
jbe
inc
and
fsubrs
mov
int3
sbb
adc
dec
cmp
jbe
jbe
cmovne
scas
int3
int3
int3
int3
jmp
sbb
mov
adcl
js
push
push
enter
out
xor
sbb
push
mov
out
popa
push
gs
mov
inc
and
mov
and
subl
clc
lcall
je
mov
jge
sahf
insb
incb
mov
add
add
add
mov
push
lidtl
test
cmp
ret
sub
push
mov
sbb
xlat
outsl
shl
movsl
imul
dec
mov
lcall
xor
mov
xor
push
cmp
mov
nop
dec
mov
or
push
add
add
add
jns
sbb
pushl
xchg
jp
pop
test
xchg
jae
mov
int3
popa
sub
lret
mov
xor
or
and
add
sub
rorl
sbb
mov
push
xchg
mov
gs
pop
xchg
sbb
and
pop
mov
jle
fistpll
xlat
push
pop
cmc
mov
imul
sbb
imul
pop
dec
add
add
add
push
test
into
ss
and
lods
jb
pop
int3
int3
int3
int3
mov
add
adc
addb
mov
cmp
or
push
int
rolb
test
mov
dec
movsb
fdivrp
ret
xor
mov
jecxz
pushl
mov
iret
cmc
movsb
dec
cmp
lcall
pop
clc
loope
stos
xchg
xor
sti
dec
jno
mov
rolb
pop
orb
mov
add
add
jle
dec
lahf
pop
movsl
int3
mov
test
xor
stos
arpl
sub
cmp
int
mov
aas
cltd
call
sbb
call
xchg
push
mov
cwtl
arpl
ds
pop
cmp
testb
add
add
test
pop
mov
dec
xor
scas
lds
cld
outsb
or
into
stc
cmp
rolb
enter
clc
xor
or
int3
xchg
add
mov
add
add
mov
pop
or
jne
hlt
outsb
pop
daa
popf
cltd
xchg
mov
in
inc
cmc
fwait
sbb
pop
repnz
xchg
jmp
add
xor
int3
int3
int3
int3
pop
ret
cs
repz
cmp
or
cmp
add
add
add
or
adc
cmpsl
mov
inc
aad
lods
cmc
sub
pop
xor
xchg
push
add
add
out
push
es
xor
push
jge
mull
mov
mov
arpl
popa
std
insb
push
jno
add
ret
outsl
dec
out
fisubrl
dec
fidivrl
mov
mov
cld
add
add
add
call
add
mov
mov
in
or
or
in
icebp
mov
adc
fldcw
stc
inc
push
in
mov
outsb
mov
in
ss
xorb
sub
test
add
add
movsb
fdiv
add
fcmovbe
adc
push
push
negb
sbb
daa
aaa
aad
cmp
push
add
add
test
mov
sbb
aam
xchg
sbb
int3
int3
int3
int3
adc
or
sbb
addr16
lcall
inc
cmp
outsl
add
add
mov
inc
imul
out
or
lret
popf
daa
xchg
xor
jmp
pop
test
jge
jg
aam
lea
test
fisttpl
xchg
lahf
roll
mov
int3
adc
ret
pop
push
add
stos
addl
add
dec
mov
lret
outsl
shlb
pusha
cmp
jmp
ficompl
jl
jge
int3
int3
int3
test
add
add
add
int3
pop
sbb
xlat
and
stc
xor
and
pop
sbb
imul
fstps
add
ret
imul
test
sub
lock
jae
jns
fxch
inc
incb
add
add
add
sub
or
xchg
lods
aaa
out
mov
data16
or
inc
xor
push
dec
mov
shll
sub
movsb
pop
inc
add
add
add
add
pop
xchg
sbb
movsb
mov
pop
scas
pop
hlt
sbb
sbb
mov
push
mov
mov
mov
cli
push
xchg
shll
hlt
lea
add
add
add
add
mov
xchg
cmp
bound
out
cmp
pop
dec
mov
insl
out
repz
mov
add
add
push
cmp
sbbb
dec
sbb
inc
aas
jp
jns
out
cli
out
dec
adc
cmp
rolb
xor
arpl
std
add
add
add
ret
add
enter
or
jle
clc
add
movsb
ss
movsl
out
mov
into
inc
mov
add
pop
push
scas
or
jno
insl
addr16
cmp
inc
add
subl
int3
add
inc
test
ljmp
lcall
and
push
into
std
arpl
add
adc
mov
mov
pop
scas
push
dec
mov
jnp
push
inc
mov
add
xchg
xchg
inc
add
fidivs
jg
cld
and
add
fisttps
add
add
add
pop
pop
jb
xchg
xchg
lods
roll
xchg
clc
lds
mov
mov
addr16
fldcw
push
lret
shll
js
rolb
iret
xchg
hlt
fdivrp
add
add
and
lcall
xchg
mov
sti
lea
jbe
dec
push
xchg
movsl
push
out
mov
dec
dec
shll
or
cmpsl
add
add
xor
push
sbb
daa
imul
ja
mov
int3
fs
mov
and
and
and
push
mov
mov
add
add
mov
lods
pop
adc
mov
int3
int3
gs
loope
and
test
xchg
mov
lret
cwtl
cmpsb
mov
shlb
pusha
mov
lret
and
inc
mov
ret
rolb
add
add
add
add
ss
mov
popa
push
push
xchg
divb
fdiv
ljmp
ljmp
fiaddl
into
add
or
or
xchg
add
jne
mov
int3
int3
int3
int3
int3
or
sbb
xchg
popf
add
add
paddd
cmpsb
inc
lahf
outsl
call
xrelease
adc
movsb
jbe
es
sub
sahf
mov
mov
dec
xor
movsl
daa
setne
mov
sub
dec
jge
movsb
pop
or
add
add
or
lods
lea
stc
aas
rolb
inc
test
imul
out
aaa
pop
cmp
fdivs
sub
mov
and
into
fldenv
pop
jno
cltd
push
in
inc
adc
mull
sub
add
add
add
add
xchg
ds
add
mov
lcall
push
mov
movsb
aaa
iret
punpckldq
dec
and
cmp
mov
notb
inc
outsb
sbb
mov
add
fldt
popf
mov
int3
int3
int3
sahf
aas
imul
push
inc
in
out
call
xorb
call
fisttps
mov
push
push
mov
in
cli
movsl
dec
repz
dec
mov
ljmp
push
add
add
and
and
dec
add
dec
cmp
shlb
jb
jp
push
jecxz
mov
sub
stos
decl
out
xchg
push
sub
sub
jae
insb
aam
sbb
pop
cmpsl
int3
int3
int3
int3
int3
fsts
xor
xchg
test
add
add
add
pusha
inc
testb
sbb
loope
test
les
mov
pop
cmpsl
dec
xchg
mov
data16
xor
pusha
dec
adc
sar
repnz
mov
xor
mov
xchg
pop
nop
jne
add
mov
add
jle
jmp
and
sub
add
aad
xor
in
inc
sub
xchg
insl
call
pop
cld
test
andb
lock
xchg
jb
jne
sbb
shlb
xchg
sbb
adc
and
push
inc
popf
or
pop
push
add
add
sbb
cmp
lret
loop
or
jns
jb
out
or
push
lret
xchg
sub
lret
jns
stc
rcl
pop
scas
les
aad
lcall
add
add
push
mov
adc
mov
add
cli
scas
xchg
ljmp
mov
inc
ret
scas
mov
xor
or
mov
sub
aas
pop
shr
dec
jmp
mov
adc
mov
lods
push
in
popa
test
fistpll
fcmovu
add
add
dec
add
movsb
jecxz
fld
add
mov
mov
es
lahf
sub
sbbl
xor
xchg
pop
and
aam
outsb
in
xor
lret
call
out
aas
lcall
add
adc
leave
cmpsl
xchg
sbb
xchg
cmp
lock
imull
xchg
sbb
push
test
ds
push
int3
adc
dec
fwait
ret
loopne
cltd
fsubrl
add
add
cmpsb
dec
movsl
nop
andb
std
mov
idivl
fsubrl
insb
jge
and
push
inc
in
cmp
push
fcmovnbe
sti
adc
add
add
push
cmc
outsb
ljmp
stos
xor
pop
sarl
int3
int3
inc
aaa
mov
sahf
adc
jo
inc
pop
out
leave
xchg
mov
cmc
and
mov
jns
push
or
cmp
imul
dec
inc
fistl
ret
and
pop
jb
cli
and
sbb
mov
xor
lcall
jb
in
out
push
aam
jno
cmc
mov
add
add
sub
leave
jne
sub
cmp
push
in
adc
xchg
jecxz
sbb
jge
xchg
add
roll
sbb
and
pop
mov
test
add
add
add
int3
int3
int3
int3
int3
int3
int3
or
repz
pop
arpl
xor
push
hlt
sub
push
mov
inc
imul
push
xchg
pop
daa
test
dec
xchg
stc
sbb
dec
inc
mov
je
insl
sbb
mov
mov
adc
inc
dec
sarl
int3
js
mov
ljmp
mov
mov
or
push
outsb
loop
adc
ds
out
xchg
int3
int3
int3
roll
cld
xchg
repz
sub
add
add
push
mov
mov
call
mov
leave
mov
sarl
or
cmp
pop
dec
mov
inc
mov
xchg
loope
scas
sti
scas
cmpsl
je
out
add
add
add
adc
stos
mov
ret
test
dec
jne
lock
aaa
sbb
jmp
sbbb
xor
in
push
daa
dec
testl
fnstenv
mov
add
in
aam
fucomip
mov
into
pusha
xchg
sub
imul
mov
sbb
add
pop
jae
int3
int3
int3
int3
int3
mov
push
push
mov
cmp
sbbb
cmp
mov
out
pop
sub
add
aaa
dec
or
sbb
les
lock
pop
or
das
sub
xchg
push
adc
mov
shlb
add
add
mov
hlt
pop
pushf
ljmp
cmpsl
ficoml
adcl
imul
int3
int3
add
stc
add
out
testl
outsb
jne
xchg
xchg
add
add
add
imul
subb
jmp
test
push
or
jns
sti
mov
add
add
add
xor
lods
mov
cmpsl
dec
jae
xchg
js
cmp
inc
sub
sbb
push
pop
cmp
dec
push
mov
adc
mov
lock
jne
pop
loopne
mov
ja
pop
pop
mov
inc
fs
sub
or
scas
mov
add
add
add
and
add
outsb
leave
dec
xchg
int3
int3
int3
outsl
xor
int3
fs
lods
sbbl
shll
out
cld
add
add
addr16
dec
sbb
loopne
shr
ret
pushf
mov
inc
ljmp
xchg
add
inc
in
sub
add
cli
or
jnp
mov
mov
xchg
inc
cmpsb
imul
repz
loopne
roll
push
out
mov
ffree
xlat
sbb
pop
sahf
shll
cmp
pop
ljmp
sti
adc
outsl
jnp
mov
sbb
pusha
jge
xchg
jecxz
mov
mov
fwait
add
adc
push
jp,pt
lock
cmpsb
adc
sub
add
out
fs
xor
and
mov
and
test
add
jge
lret
aaa
sub
sub
decl
shrb
rol
imul
push
out
data16
and
xchg
out
test
add
add
adc
pop
lock
and
inc
ret
dec
mov
aam
xchg
mov
lea
stos
jge
and
test
std
out
cmp
push
add
add
add
adc
cmp
ja
cmpsb
out
sub
repnz
popf
add
xchg
xor
int3
pop
shrb
mov
cmp
pop
xor
mov
shrl
dec
js
mov
icebp
push
mov
add
add
mov
int3
and
mov
fnstcw
in
push
or
fiaddl
stos
sahf
cli
scas
inc
stos
pop
les
std
shrb
cmp
hlt
push
mov
into
adc
push
push
jge
insb
dec
sbb
push
xchg
jb
ds
xchg
sub
add
add
jecxz
xor
lods
not
sbb
adcb
movsb
and
int3
int3
int3
int3
int3
stos
sbb
cltd
lds
mov
jmp
cmpsb
adc
inc
repz
sarl
mov
addr16
mov
add
cs
jg
lock
popf
iret
stc
push
xchg
out
enter
cli
adc
xlat
mov
addr16
mov
pop
fnstenv
out
or
scas
adc
mov
lret
flds
sub
sbb
xor
xchg
sub
sub
fucom
incb
add
add
fistl
cmp
insb
pusha
fstl
xor
add
pop
into
sbb
mov
bound
es
movsb
jecxz
sti
push
movsb
pop
insl
fdivrp
adc
push
imul
xchg
lods
lcall
mov
cmp
mov
add
mov
mov
jecxz
add
adc
fmuls
hlt
xchg
xchg
popa
int3
int3
int3
adc
dec
mov
pop
nop
ficompl
je
cmp
pop
rcll
int
icebp
xchg
mov
add
mov
dec
xor
ja
shlb
cmp
ret
push
imul
mov
out
imul
lret
mov
xchg
inc
sub
adc
cmp
out
xor
and
dec
dec
add
add
add
jle
jo
sbb
arpl
lock
in
or
mov
mov
mov
data16
pop
imul
add
data16
add
xor
lea
dec
inc
inc
cmp
imul
add
xchg
adc
xor
dec
daa
pop
popf
imul
movsb
push
sub
xchg
adc
lods
das
sbb
in
pop
add
add
dec
in
and
mov
test
cmp
pop
or
mov
lret
jbe
xchg
sti
sbb
loope
fcompl
sub
lods
in
stos
xor
xlat
ret
push
xchg
insb
stos
mov
adc
add
cmp
addb
dec
sub
repz
mov
pop
or
clc
pop
fyl2x
mov
mov
or
int3
int3
int3
int3
int3
add
add
lahf
seto
sahf
xchg
inc
adc
jbe
fldenv
jb
cli
sub
xchg
xchg
ret
push
xor
pop
add
xchg
add
add
cwtl
ss
aas
incb
not
sahf
add
xchg
ljmp
jg
sarl
lds
dec
les
xchg
dec
mull
pop
cmp
jae
mov
mov
mov
rorb
pop
mov
dec
add
add
js
mov
ret
jecxz
mov
repz
inc
rcl
cltd
xlat
sbb
xchg
mov
sub
test
fmul
les
add
int3
int3
imull
fildll
fcomps
add
add
sbb
lock
ret
xor
cmp
add
mov
sbb
add
add
outsl
mov
xor
jnp
pop
test
mov
outsl
xorl
out
ds
fs
cwtl
arpl
push
xchg
aas
js
enter
and
popf
xchg
add
rorb
stc
arpl
xchg
push
inc
mov
jns
pop
pop
jo
push
jnp
cmp
out
cmovbe
je
or
imul
and
pop
xor
mov
cmp
fcoms
add
add
add
add
mov
ds
pop
jge
je
or
fldenv
ret
stc
inc
ds
dec
rcrl
jbe
lods
out
imull
cwtl
sub
xchg
repz
aam
pop
bound
add
add
xchg
xor
and
movsl
cmp
cwtl
into
add
outsb
pop
adc
inc
sbb
jecxz
jmp
or
add
lret
cmp
ud2
xchg
xchg
clc
mov
stc
testl
popf
push
xlat
test
cmc
mov
test
ficoml
add
add
lret
lcall
mov
das
xorl
pop
xchg
loop
bound
les
shlb
cld
sub
icebp
fsubrl
xor
cmp
cltd
dec
cmpsl
mov
inc
add
add
mov
push
dec
mov
leave
ja
adc
jbe
sbb
lds
lock
add
add
add
jae
fucompp
notl
insl
jns
es
adc
mov
cwtl
sub
dec
loopne
push
gs
jae
xor
mov
jmp
stos
adc
outsb
inc
adc
mov
xchg
sbbb
push
loope
mov
mov
add
les
or
jne
cmp
outsl
mov
int3
int3
movsb
mov
jmp
mov
hlt
sub
subl
cmpsl
dec
call
call
addr16
subb
sbb
clc
add
xor
in
mov
add
add
cmpsl
mov
and
push
arpl
dec
and
xchg
loopne
fwait
es
negl
sub
xor
mov
push
cmp
or
jmp
cld
mull
lret
xchg
int3
int3
int3
int3
aas
imul
add
fs
stos
xor
lahf
xor
jne
test
bound
push
nop
xor
pop
jb
add
hlt
movaps
xor
andl
push
cld
repz
ret
mov
add
pushl
shl
rolb
insl
daa
mov
push
stos
push
adc
pop
outsb
sub
cmp
mulb
xchg
jecxz
add
add
je
fcom
shlb
gs
test
dec
fs
sub
mov
xchg
movsl
jle
call
cmp
loopne
xor
xor
pop
add
add
and
jp
aas
es
iret
das
cltd
iret
adc
sbb
imul
dec
lahf
cmc
dec
stos
ret
xchg
inc
mov
sub
add
add
add
repz
hlt
sub
iret
sbb
in
xor
loopne
fs
fstl
stc
add
add
add
jmp
sub
lods
mov
cmp
jb
push
movb
mov
insl
sbb
sub
and
xchg
int
cmp
hlt
mov
movsl
aaa
push
mov
cmp
mov
cmp
add
push
mov
add
and
pop
in
fidivl
sub
insb
mov
pop
jl
js
pmulhuw
jo
add
int3
int3
int3
int3
lods
dec
cmp
sbb
add
add
lret
sub
xor
insl
push
adc
in
imul
ret
or
add
add
push
adc
xchg
lods
rcrb
pop
inc
mov
cmp
daa
cs
and
jge
jl
add
add
inc
mov
dec
mov
in
sarl
or
ljmp
repz
pop
xlat
sarl
sbb
insb
cwtl
mov
xchg
sbb
jl
sub
sub
dec
xchg
outsl
mov
add
jno
es
repnz
sbb
out
jae
into
add
or
and
lea
loopne
int
dec
push
push
mov
add
add
add
mov
inc
push
shl
lds
repnz
cmp
cmp
fisttps
ficoml
cmc
pop
bnd
mov
xchg
add
add
fcoml
loopne
adc
or
int3
xchg
dec
jmp
sbb
sub
or
jne
cmpsb
mov
add
add
add
jnp
xchg
daa
add
scas
jmp
xchg
pushl
dec
or
jl
push
movl
cmp
aad
cmp
add
add
adc
loopne
stos
decb
in
sbb
out
jns
lods
xor
jns
cmp
test
cmpsl
mov
adc
sub
test
sub
add
add
rclb
call
lock
pop
push
outsl
hlt
fnstcw
scas
jecxz
xchg
leave
jge
repnz
xor
fisubrl
jp
mov
out
inc
in
inc
add
add
add
repz
sbb
insb
fildll
xchg
sub
fcompl
inc
xchg
mov
scas
in
xchg
mov
mov
push
arpl
sbb
add
dec
test
int3
int3
adc
sbb
lods
push
sbb
pop
dec
pop
mov
dec
cli
push
adc
or
jmp
enter
xlat
mov
sahf
nop
jbe
add
add
add
add
mov
inc
pusha
mov
push
mov
outsl
cmp
jae
push
inc
jae
sbbb
jo
xor
mov
and
inc
xor
inc
xchg
ficoml
dec
or
ss
pop
xchg
ja
xchg
ret
ss
add
add
or
addb
jge
jecxz
subb
mov
ljmp
test
and
rorl
push
ja
cmp
scas
push
cmp
ficoms
popf
jmp
and
sbb
mov
std
int3
int3
int3
int3
int3
int3
mov
xchg
ja
loopne
inc
jg
sbb
dec
test
xchg
mov
cmpsl
cld
ljmp
xor
addr16
subl
add
mov
pushf
xor
cmp
add
add
xchg
jmp
int3
xor
xchg
loope
in
test
or
pushf
jge
test
inc
ret
nop
sbb
xor
lock
or
mov
mov
rorb
pop
or
es
mov
jae
pop
cs
add
add
add
cmpb
loopne
loope
in
jg
es
adc
insl
xor
sub
dec
pusha
adc
daa
gs
add
sbb
mov
mov
jle
addl
inc
sbb
push
lgs
jmp
sbb
int3
int3
int3
jbe
jmp
ja
lods
shlb
rcll
jp
push
pop
and
mov
add
add
add
lds
lods
pop
xor
inc
test
mov
lods
inc
out
es
loop
pop
jnp
mov
xchg
mov
lret
sbb
movsl
mov
dec
add
add
cwtl
cld
sub
add
andb
repnz
mov
or
sub
sub
test
int3
int3
int3
int3
int3
add
adc
pusha
jb
lea
ffreep
add
and
cli
inc
das
mov
add
fstpl
adc
aaa
add
xlat
mov
dec
mov
xchg
xchg
add
imul
xchg
enter
jge
adc
mov
test
jbe
pmulhuw
outsb
int3
outsl
add
add
add
cmp
rorl
test
jno
insb
mov
jb
cli
mov
stos
aaa
fsubrp
subb
lcall
add
add
repz
adc
push
xor
int3
int3
int3
add
cmp
dec
push
leave
sub
sub
notb
fs
pcmpgtw
jbe
or
add
add
mov
fwait
cmpl
mov
or
inc
dec
stos
xchg
in
cwtl
jp
xchg
seto
push
xor
cmpsb
push
or
adc
mov
fnstsw
ds
cmp
mov
add
add
enter
add
negl
ja
ds
add
ljmp
insl
sbb
add
add
push
lock
loopne
pushf
sub
ss
aam
mov
mov
insb
arpl
pop
lds
ss
shl
fcmovnu
shll
adc
decb
dec
sti
jb
add
add
jbe
mov
aam
jns
je
mov
mov
bound
mov
movsb
repz
mov
push
sbb
sbb
aam
pop
shlb
mov
call
dec
push
pop
int
mov
pop
xor
sbb
fldcw
cmp
pxor
xlat
popa
inc
mov
test
sbb
loop
push
jmp
jp
stos
xchg
cmpl
xor
bnd
sub
je
add
add
add
jmp
ja
aas
stc
add
out
sub
lds
xchg
and
cs
insl
or
bound
mov
les
ss
or
pop
xchg
xchg
and
jle
test
pop
daa
xor
and
test
or
inc
repnz
add
jp
bound
test
xchg
adc
loope
cs
push
mov
loopne
pop
adc
int3
out
insb
push
int
insl
jl
mov
add
icebp
mov
hlt
sahf
mov
xchg
jae
sub
xor
stos
scas
cmp
mov
push
lcall
add
rcrl
xchg
loope
test
and
push
aas
nop
fldcw
ljmp
add
add
stc
or
int3
int3
int3
int3
int3
iret
sub
dec
jno
and
add
fildll
stc
jae
mov
xchg
push
sbb
sub
add
aas
pop
pop
pop
dec
xchg
imul
mov
cmpl
pop
jg
sub
cmpb
add
add
add
add
pop
sub
cwtl
mov
fsts
sub
sub
sbb
pop
enter
lock
lret
sbb
inc
rorb
add
add
sub
and
adc
and
and
notl
dec
mov
int3
int3
int3
int3
int3
mov
add
mov
push
mov
mov
or
addr16
loop
shll
jmp
pop
lcall
inc
dec
adc
xchg
mov
popf
dec
cld
push
lods
clc
mov
aad
aas
mov
and
ret
push
and
add
add
add
fsub
push
sub
pop
pop
jmp
pushf
mov
sti
mov
jl
js
repz
xchg
sbb
pop
daa
subb
insl
add
add
add
add
add
mov
push
xchg
jg
mov
in
xchg
lock
and
loopne
jne
loopne
popf
repnz
int3
int3
int3
add
and
add
stos
mov
sbb
lcall
inc
leave
not
mov
vmwrite
push
jl
test
jne
add
mov
lods
stos
repz
push
ret
dec
ss
and
idiv
mov
add
add
fimull
aam
jo
xchg
ja
mov
xor
bound
hlt
daa
mov
cmp
mov
out
je
into
loopne
xchg
inc
cltd
jno
xchg
add
add
mov
in
int3
std
jno
pop
mov
mov
add
inc
pop
insb
lahf
mov
cmp
adc
sub
inc
xchg
inc
out
xchg
lock
out
cmp
mov
push
aad
xor
outsl
loopne
add
add
add
add
stos
popa
pop
les
sub
add
pop
fcoms
adc
int3
int3
int3
int3
int3
mov
ret
cmc
pop
call
bnd
fcoml
hlt
adc
das
fs
jb
icebp
idivb
nop
xchg
lods
fidivl
sarl
xchg
js
das
adc
xor
and
mov
add
negl
out
adc
fistpll
xlat
stos
mov
vpcmpeqd
push
pop
jne
xchg
mov
cmp
add
add
jno
xchg
xchg
clc
and
lods
popa
push
push
pusha
dec
push
jae
ret
rol
jnp
jne
nop
lea
out
or
xor
loopne
pop
nop
xor
add
add
mov
icebp
dec
xor
aad
ret
orps
test
push
ret
data16
adc
sub
js
push
jbe
inc
js
imul
imul
and
filds
test
mov
test
add
mov
sbb
pop
in
xor
cmc
out
pop
cld
inc
in
fiadds
xchg
mov
test
inc
dec
or
add
mov
shlb
mov
add
scas
cmp
in
and
mov
xor
jp
push
jle
or
xchg
xchg
lods
xor
inc
inc
xchg
dec
push
and
lcall
ret
sahf
mov
push
cs
ja
notb
js
fstpl
add
push
in
test
jl
cmpsl
mulb
incl
pop
jbe
stc
out
and
xchg
pop
or
call
movsb
lea
or
dec
dec
add
add
mov
xrelease
fstl
call
cltd
test
push
and
in
insb
jns
loopne
mov
loope
jo
mov
mov
xchg
and
rcl
es
cmc
sbb
sub
add
add
add
jle
data16
xchg
pop
data16
jne
or
xor
lods
inc
jnp
gs
cltd
lahf
lea
leave
cmp
inc
out
and
je
cltd
fcmovbe
jecxz
mov
xchg
xlat
movsb
loopne
xor
loop
add
add
sbb
push
dec
and
sub
sbb
call
ss
jl
mov
hlt
inc
std
xchg
pop
imull
mov
leave
mov
dec
cmp
insb
test
add
out
mov
cwtl
push
adc
mov
cli
adc
and
pusha
movsl
out
out
sahf
dec
xlat
xlat
push
and
or
inc
push
enter
or
jmp
mov
add
add
and
mov
push
push
xchg
inc
cmp
dec
inc
fsubl
mov
inc
push
out
xlat
loop
scas
in
ret
in
repnz
mov
insb
add
push
or
stos
push
fdivl
add
add
mov
push
insb
cmp
aaa
jae
das
dec
mov
or
jo
ficoml
aad
sbb
mov
int3
mov
into
stos
dec
into
in
push
dec
aam
ret
pop
jp
mov
into
bnd
cmc
add
add
add
rorl
xor
jae
adc
and
sti
add
jns
inc
pop
inc
dec
les
pop
and
add
sub
sub
in
insl
or
int3
sbb
adc
jb
jl
inc
jecxz
mov
dec
addr16
aad
xor
add
or
push
and
test
add
add
xchg
lods
xchg
fadds
sbb
outsb
mov
into
ret
or
popf
popf
add
add
add
add
push
xchg
mov
mov
mov
sub
call
cmp
pop
push
dec
mov
int
add
add
add
mov
inc
orb
lea
sbb
add
mov
ror
rclb
mov
lods
test
mov
jmp
add
lods
int
daa
and
fwait
andb
pop
xchg
les
test
stos
aam
fs
outsl
add
add
mov
or
lahf
insb
aam
enter
mov
sar
adc
sbb
inc
jb
or
xchg
cmp
mov
add
lods
lea
test
jle
insl
addl
jbe
stc
lret
loope
rcll
and
add
add
fdivl
lods
mov
xor
out
mov
icebp
xorl
out
mov
add
xchg
or
mov
xor
mov
imul
std
aad
xchg
xchg
xchg
sbb
stos
lcall
xchg
jae
add
outsb
push
jmp
ficoml
fcoms
sub
repnz
push
icebp
pop
sub
dec
or
push
cmpb
gs
jnp
xchg
push
xlat
cmp
aad
jp
sbb
and
movl
xchg
cli
cs
stos
add
add
add
mov
decb
inc
imul
xor
in
inc
xchg
jle
outsb
or
push
cmpsb
aas
mov
adc
jp
insb
iret
add
add
fs
pop
stc
fsubr
mov
mov
daa
mov
inc
mov
test
repnz
shll
loope
xchg
push
cmp
mov
mov
cmc
iret
aam
outsb
mov
pop
imull
add
leave
addb
add
or
push
mov
scas
shrl
addr16
dec
xor
scas
or
mov
add
jno
incb
out
aaa
mov
mov
adc
punpckhbw
cmp
sti
fs
imull
stos
repz
add
add
mov
js
sub
lods
pop
add
sti
fstpt
aas
gs
jo
sbb
adc
xchg
dec
out
lahf
mov
ss
xor
add
sbb
jp
call
pop
inc
ss
aaa
and
mov
pop
xchg
cmp
repnz
movsb
jl
jbe
jo
fs
jb
in
pop
jmp
aas
fcomps
flds
add
add
fs
cli
pop
xor
jae
into
stos
mov
dec
mov
jno
inc
adc
adc
out
icebp
orl
add
add
add
xchg
cltd
and
popa
pop
in
loop
sub
idivl
pop
cli
or
mov
enter
xchg
sub
sbb
sub
shll
xchg
add
add
add
add
frstor
inc
xchg
stc
xchg
test
sbb
popa
lahf
imul
xor
push
decl
in
inc
lock
add
mov
insb
mov
xchg
xchg
cmp
into
sub
aam
lahf
gs
xchg
fstpt
jp
xchg
ss
in
add
add
stos
push
pushf
xchg
icebp
in
inc
adc
rorb
xlat
es
mov
psrlw
mov
repnz
pusha
or
add
pop
imul
jle
add
add
pop
incb
pop
sbb
jecxz
and
je
movsb
inc
loop
fildl
mov
std
sub
test
add
mov
dec
fneni(8087
fnstenv
xchg
ds
sahf
inc
ficomps
jns
ds
int
rcrb
pop
ja
cltd
rcl
mov
rcrl
xchg
xor
insl
push
mov
add
add
add
sub
dec
ret
hlt
movl
xchg
cltd
in
ja
add
add
add
or
scas
sub
push
xor
mov
xchg
xchg
lea
mov
icebp
cmp
add
add
add
sub
xor
sub
or
adc
test
add
add
add
rcrb
ret
pop
jnp
and
das
adc
push
cli
out
pop
lods
out
stc
jb
inc
adc
and
test
jg
ds
sahf
icebp
sub
je
push
xor
loope
and
add
add
add
add
data16
cmp
mov
js
mov
jp
cmp
mov
je
xor
pop
jg
hlt
into
pop
xchg
add
add
add
gs
gs
xchg
xchg
mov
or
neg
lret
mov
mov
inc
mov
ja
js
xchg
scas
js
adc
sbb
lods
ret
and
fwait
mov
in
loop
xor
loopne
cs
out
sti
cltd
popa
inc
cmc
fildl
lret
sbb
iret
add
int
xor
xchg
sahf
pop
std
mov
cmp
lea
in
mov
push
sbb
add
add
add
dec
psubw
shl
lret
aas
lret
jl
dec
ss
mov
aaa
xchg
loop
xchg
cmpsb
mov
mov
ret
inc
mov
add
add
add
mov
xchg
jno
cmp
ljmp
and
xchg
mov
push
sub
xchg
xchg
sbb
jno
dec
sub
add
iret
dec
adc
stc
aaa
mov
add
pcmpgtw
xchg
out
xor
inc
inc
stc
jp
push
xchg
lds
mov
loop
add
mov
aaa
enter
xchg
push
jl
es
cmpsl
mov
sub
mov
add
add
ds
sti
inc
loop
jno
mov
adc
movsl
cmpsb
push
mov
roll
in
ror
or
jge
jne
int
adcl
stos
fdivrs
push
mov
mov
dec
dec
inc
mov
mov
add
add
push
cmpsb
pusha
sub
and
inc
imul
repnz
mov
pop
imull
mov
in
adc
jecxz
sub
push
xchg
out
sub
add
dec
jmp
xchg
sub
add
push
insb
sbb
and
and
xor
pop
popf
stc
mov
sbb
pop
jge
mov
mov
mov
mov
aad
cmpsb
std
jge
cmp
and
add
add
inc
ja
add
jne
dec
push
sbb
insl
dec
das
cli
lret
push
cmp
inc
ljmp
xor
mov
loopne
popf
push
mov
add
int3
mov
fisubl
adcb
xchg
add
push
mov
popf
subb
mov
loope
jne
scas
mov
jl
adc
jnp
shll
mov
add
or
cld
out
loope
xor
xchg
mov
push
adc
push
pop
imul
inc
sub
mov
pshufw
cld
dec
push
ret
fisubrs
cmp
les
push
in
add
add
xchg
dec
std
mov
cmp
imul
aaa
add
add
mov
sub
popf
jo
adcl
cmp
pop
push
mov
dec
cmp
add
add
out
jb
push
xor
push
push
push
es
xor
fwait
ljmp
adc
imul
dec
out
in
fiaddl
add
mov
xchg
push
aam
xor
push
enter
jo
dec
cmp
add
add
int3
inc
xchg
shll
adc
idiv
mov
dec
xor
negl
mov
push
mov
lret
push
push
cmp
add
add
add
inc
es
cli
sbb
dec
mov
mov
notb
xor
in
pop
dec
jne
scas
sub
scas
xor
int
ficoml
sti
scas
sub
and
add
add
inc
das
out
xor
test
xchg
dec
push
and
shll
mov
scas
add
in
outsb
insb
mov
pusha
popf
mov
add
add
testb
inc
gs
daa
and
jno
or
aas
jp
sub
int3
jg
clc
add
pop
pop
pushf
or
mov
repz
push
adc
mov
subl
ljmp
push
dec
hlt
add
add
add
push
xor
mov
pop
dec
mov
pop
jl
stos
into
int3
je
imul
xchg
mov
mov
stos
dec
arpl
lods
inc
sbb
jmp
out
add
add
add
dec
fcomip
push
xchg
jp
std
cmp
and
add
insb
call
push
loop
sbb
xlat
jnp
push
gs
lods
add
add
add
push
push
push
iret
xchg
lret
test
ljmp
mov
lahf
fiaddl
lods
cmpsb
arpl
mov
mov
add
add
add
sbb
or
mov
movsl
mov
ret
mov
rcll
aad
or
test
cmc
and
cltd
add
add
add
test
sub
push
xchg
dec
mov
stc
adc
iret
jge
lods
jecxz
das
mov
add
and
inc
aam
aad
fiadds
sub
pop
jmp
and
test
add
mov
xchg
xchg
xchg
push
ret
add
mov
shrl
push
popf
mov
push
shr
push
xchg
push
pushf
out
or
jp
mov
add
add
add
sub
pop
jne
jne
add
fimuls
push
mov
stos
aaa
mov
stc
dec
lea
xchg
lds
inc
mov
call
xchg
cmp
xor
pushl
add
add
stos
xchg
xchg
push
xchg
pop
sub
shlb
insl
out
pop
or
add
add
add
mov
pusha
cmp
sbb
cmp
mov
push
cli
testl
sarb
sbb
xor
mov
loopne
add
add
pop
sbb
lods
adc
sbb
add
or
and
jmp
xor
mov
pop
sub
sti
stos
leave
inc
fxch
inc
fcompl
add
add
out
xchg
adc
cmp
dec
dec
add
test
or
ljmp
pop
lea
add
aam
cmc
push
lret
cmp
mov
mov
mov
add
clc
sbb
scas
enter
inc
cld
cmc
jne
jle
pop
in
inc
push
in
data16
cltd
out
add
add
add
push
jge
xor
mov
mov
and
mov
inc
add
cmp
xchg
shl
xchg
jecxz
clc
dec
inc
pop
adc
in
mov
jne
nop
sub
jmp
add
add
jmp
jnp
in
jne
sbb
outsl
dec
ljmp
out
or
xor
mov
div
repz
push
cmp
lahf
fldl
add
add
cld
mov
and
xacquire
and
into
push
arpl
mov
mov
lcall
addr16
push
aam
cmp
dec
jae
add
pop
psadbw
insb
and
add
add
xor
inc
ja
nopl
test
js
cmc
imulb
lea
mov
out
sub
add
add
add
and
dec
mov
flds
push
lods
cli
test
or
imul
mov
ror
jbe
mov
jp
ljmp
xor
dec
jbe
and
jnp
add
add
icebp
popf
xchg
jns
movq
ret
pop
rolb
aaa
pop
xchg
stos
cmp
cmp
aas
push
adcl
add
add
adc
lods
std
les
shl
daa
in
sarl
sbb
addr16
aas
jae
mov
push
dec
rcrl
lds
cwtl
lret
es
add
add
cmp
imul
push
sbb
inc
xchg
out
pop
cmpsb
or
cmp
add
std
jmp
cmp
repz
mov
dec
xchg
mov
insb
nop
cmpsl
and
adc
ret
aad
add
add
add
mov
jle
gs
sub
xchg
ljmp
inc
push
xor
repz
jno
mov
rep
mov
sbbl
push
mov
shlb
mov
pop
mov
sbb
mov
das
nop
rclb
fwait
mov
popa
xor
add
add
add
add
add
mov
in
std
sub
cwtl
lods
mov
pop
jg
push
cli
dec
pop
iret
loopne
bound
pop
mov
cmc
pusha
divb
mov
mov
add
add
mov
sub
cmc
mov
xchg
mov
lcall
les
xor
leave
sahf
dec
fstpt
in
cmpsb
cmc
xlat
xchg
sbb
jno
cmp
sti
mov
add
add
or
inc
pop
xor
in
push
lods
fildll
repz
cmp
neg
push
test
clc
ss
lahf
lock
loope
daa
sti
push
out
or
mov
sub
push
sti
cmp
and
rclb
add
test
lcall
loop
popa
stos
sub
cwtl
add
mov
mov
jg
xor
sbb
imul
dec
adc
jmp
fmul
push
mov
add
add
iret
mov
ret
xchg
clc
mov
push
std
cmc
outsb
or
mov
popa
jo
mov
lea
add
add
lods
fsubp
or
jmp
pop
mov
jns
push
jle
les
leave
pop
rorb
punpckhdq
push
and
ja
pusha
mov
or
and
add
arpl
add
add
mov
loopne
sub
or
outsl
jmp
mov
paddw
js
xor
in
pop
inc
enter
rolb
add
cmpsb
out
out
movsb
cmpsl
cwtl
in
and
rcrl
xchg
add
outsb
pop
das
add
xchg
std
call
dec
cmp
add
add
add
add
add
mov
cmp
data16
mov
jo
fsts
mov
xchg
sbb
gs
out
ljmp
xchg
jl
iret
lcall
rolb
jle
xchg
leave
movsl
mov
add
add
cli
out
int3
mov
adc
movsl
repz
pop
mov
jl
pop
sub
movsl
jecxz
outsl
sahf
jl
mov
js
gs
cmp
add
add
mov
fmul
jae
pop
or
jle
pop
cmc
dec
js
sub
add
jg
icebp
ljmp
add
shlb
aam
js
sbb
xchg
push
cld
aam
add
xchg
and
jl
lcall
loopne
xchg
add
ja
push
mov
jmp
add
add
add
add
les
xor
add
add
sbb
jl
test
imul
add
add
add
fwait
jne
mov
scas
mov
inc
sub
and
sarl
mov
outsl
scas
xor
push
push
dec
adc
add
add
add
stc
cmp
rcrl
and
sahf
pop
hlt
icebp
lcall
xchg
stos
negl
add
pop
pop
lret
sti
push
inc
ja,pt
mov
mov
add
add
add
mov
xor
out
je
or
jge
mov
lock
and
add
add
dec
and
dec
cmp
mov
data16
gs
test
jns
and
test
sub
pop
sti
inc
loope
xor
scas
cltd
cmp
cli
cmp
lea
into
fldl
enter
pop
jmp
mov
xchg
add
add
mov
sub
push
bound
mov
popa
pop
fsubp
cltd
jge
or
push
pop
adcl
mov
add
add
add
aam
mov
and
sub
out
fiaddl
sub
xorl
or
inc
test
dec
lods
addr16
sbb
and
sbb
ret
sub
pop
jns
jnp
jne
in
movsb
and
in
pop
enter
xor
sbb
mov
sbb
ret
or
loopne
out
mov
lds
xchg
mov
fsubp
pop
jne
fnstenv
pop
mov
mov
bound
add
add
jmp
sbb
sti
mov
cmc
into
je
lret
push
std
lret
cmp
cmpsb
xchg
xor
fsubs
and
xor
push
js
roll
add
add
loop
aad
movsl
in
inc
or
jnp
out
inc
add
jno
in
insb
repz
cltd
push
or
mov
mov
fnsave
add
or
icebp
xchg
insb
cmp
cmp
push
xor
mov
movzbl
cmc
pushf
pop
fs
sub
cmp
add
add
xchg
sbb
loop
mov
xchg
mov
shr
mov
mov
movsb
and
pop
lret
rcrb
dec
data16
call
jmp
mov
add
gs
pxor
jmp
mov
lret
add
add
add
sub
xchg
aam
ljmp
and
cmp
jl
jmp
cmp
out
out
movsb
stos
data16
sub
insb
jns
in
jne
jl
dec
pop
mov
cmp
sbb
jae
jle
out
rorl
cmc
sub
add
add
add
cmc
int
cmpsl
push
inc
mov
add
mov
lahf
lds
pop
pop
xchg
cli
mov
arpl
pop
xchg
je
add
cmp
adc
or
outsb
sahf
aad
stos
mov
std
inc
imul
in
loopne
aaa
add
scas
ds
xor
inc
add
add
pop
into
pop
jne
or
pop
adc
lcall
ljmp
xchg
pusha
mov
test
mov
sbb
pushf
jae
mov
or
sahf
cmpsl
mov
testb
add
add
inc
stos
xorb
imul
xchg
sbb
scas
insl
rorl
dec
sub
and
lds
xchg
add
add
add
mov
jne
jmp
xchg
xor
out
mov
aam
xchg
into
je
sahf
jecxz
inc
and
xchg
push
into
sbbl
add
add
push
xchg
stos
lods
jecxz
inc
mov
mov
or
dec
fucom
or
mov
popa
cwtl
mov
repz
cld
and
ret
xor
dec
in
mov
add
push
mov
hlt
xchg
int3
std
mov
cmp
stos
aas
iret
insl
mov
sub
add
add
push
cwtl
jnp
aad
fbstp
or
cli
sbb
lcall
mov
addb
stos
jo
enter
jae
push
cmp
subl
adc
dec
and
lea
add
inc
cwtl
in
cld
lea
push
mov
sub
pop
push
inc
fsubr
push
movsb
cmp
fwait
fwait
and
mov
hlt
jmp
rcll
add
add
ss
lret
pop
jns
and
add
in
push
mov
out
ret
mov
shl
cld
pop
clc
pop
sbb
test
xchg
cmpsb
xchg
inc
scas
inc
inc
mov
cmp
inc
aam
rorl
shrb
out
shlb
pop
scas
cli
add
add
add
je
xchg
inc
insl
jg
out
insb
scas
les
xor
or
mov
sub
lcall
in
mov
jge
adc
xchg
lahf
mov
add
add
add
loope
jnp
ret
mov
rcr
arpl
popf
lods
loop
xor
mov
rorl
cmp
imul
add
movsl
jo
add
add
push
and
mov
xchg
mov
mov
sbb
scas
mov
repz
pop
add
xchg
stc
pop
sbb
stos
cmp
push
and
add
sahf
aam
push
sbb
div
mov
push
les
pop
pop
xchg
idivb
push
sbbb
out
mov
push
shrl
out
sahf
xchg
popf
push
stc
movsb
push
adc
cld
jmp
test
in
add
add
xchg
movsb
ljmp
nop
mov
pop
enter
mov
pop
push
test
imul
cmpsl
data16
mov
cmp
add
lock
btsl
icebp
pop
sbb
and
mov
bound
rol
lods
rcll
add
ja
dec
stos
mov
cwtl
leave
pop
xchg
or
lea
mov
push
lods
hlt
call
cmpsb
push
dec
xchg
or
mov
pop
xor
pop
aaa
loopne
cli
out
sahf
mov
inc
hlt
push
es
daa
mov
loop
pop
ret
jg
leave
and
mov
xchg
cltd
xchg
xchg
lock
fildl
mov
lea
push
dec
mov
inc
lahf
mov
cmp
jp
add
sub
push
or
xor
add
add
mov
loope
mov
sub
xor
and
mov
mov
sub
mov
sub
jp
insl
cmpl
sub
clc
sub
out
lcall
scas
test
or
cmp
in
mov
xchg
lods
push
int
lds
stos
add
add
add
add
aad
inc
test
mov
cmp
mov
xchg
hlt
mov
and
pop
lock
add
add
add
add
je
fdivr
daa
cmp
sahf
sbb
pop
popa
sbb
xor
jne
add
mov
xorl
lods
xchg
inc
clc
mov
dec
or
lock
add
add
add
jle
popf
ret
sub
xchg
xor
cmp
xchg
sub
ret
mov
add
add
xor
dec
scas
fldt
mov
xlat
lock
sub
xlat
gs
psadbw
sub
xchg
pushf
daa
dec
pop
inc
in
xchg
insb
mov
mov
in
add
pushf
fwait
add
movsbl
add
add
add
sub
jne
pusha
xor
cmp
add
xor
mov
and
cmp
jle
xchg
sbb
jp
lcall
pop
imul
cld
sarl
cmp
sub
popf
aas
pop
inc
mov
mov
in
lahf
jae
xchg
stc
xchg
push
scas
insb
das
push
sub
pop
cmp
outsb
sbb
aam
mov
add
add
ja
cltd
push
jns
js
loopne
shl
jmp
es
mov
jle
mov
lods
roll
jge
out
fldcw
shrb
pop
xchg
mov
xlat
test
arpl
imul
add
add
dec
dec
mov
hlt
or
fistl
mov
mov
ret
push
frstor
jg
jbe
ret
out
stos
ja
add
add
inc
jae
push
sub
addr16
sahf
fwait
mov
cmp
ja
cmpsl
gs
cltd
mov
inc
imul
dec
mov
and
add
add
add
movsb
mov
sub
mov
negl
call
xlat
cmp
xchg
mov
xchg
insl
out
xchg
call
loopne
push
xchg
add
add
add
out
repz
fs
cmp
mov
arpl
sbb
cmpl
sbb
mov
imul
add
add
mov
jnp
cmp
jle
mov
subl
push
adcb
xlat
std
cwtl
gs
push
inc
lock
stc
or
add
add
add
add
mov
mov
mov
fsubs
jns
mov
test
xor
pop
cs
xchg
js
sbb
add
add
cli
inc
subb
jns
adc
add
mov
xchg
push
stc
addl
pop
stos
or
add
add
add
dec
inc
mov
cmp
xchg
cmpl
movsb
icebp
mov
xlat
xchg
xor
addb
insb
dec
pushf
testl
ljmp
lret
rcrl
sub
xchg
add
add
lret
xor
add
and
out
jbe
test
aam
cmp
pop
mov
ds
fcompl
addb
add
add
sbb
ja
adc
xor
mov
ja
sub
xlat
icebp
adc
pop
cmpsl
mov
jno
addr16
aaa
mov
addr16
mov
add
add
pusha
es
and
inc
cmpsl
cs
and
sub
xor
mov
lahf
bound
leave
push
inc
incl
rcrb
movsl
fcompl
sti
ror
mov
jbe
sbb
or
js
pop
mov
add
xchg
push
aaa
mov
out
jne
imul
mov
sub
and
dec
sbb
lods
loop
add
add
add
popa
into
cmp
hlt
js
and
bound
arpl
out
subps
adc
std
jle
dec
int3
lea
push
and
fnstcw
frstor
or
jbe
push
test
lock
inc
fcoml
int
add
add
sbb
sub
or
xchg
add
adcl
inc
imul
pop
sbb
sub
pop
aaa
daa
sub
test
outsb
jbe
pop
add
add
add
add
lahf
in
xor
nop
add
lcall
mov
inc
cmp
mov
xor
into
mov
push
lock
push
cmp
add
add
add
add
and
test
xchg
repnz
xchg
sbb
push
stc
jmp
ds
xlat
popa
xor
outsb
mov
add
add
add
jnp
std
mov
in
bound
sbbb
jl
sarl
shlb
and
inc
add
add
add
insb
cld
imul
aam
mov
stos
leave
jge
setno
pop
mov
cmc
lock
in
imul
jne
adc
add
add
add
jle
test
shl
mov
ds
lcall
inc
xor
and
jmp
fs
mov
mov
add
pop
movsb
sub
or
sti
xor
ds
call
stos
xorl
jbe
push
jle
add
cmovp
sbb
jmp
inc
rolb
xchg
les
lret
jb
jno
rclb
or
sahf
hlt
jp
mov
add
add
add
lock
cmp
sbb
pusha
jl
and
aam
jno
jns
testl
jo
xor
add
add
jecxz
mov
test
mov
jae
andb
jg
loope
mov
cltd
aaa
mov
inc
imul
add
add
mov
pcmpeqb
testb
jp
jge
fmull
jnp
sti
push
pusha
inc
adc
xchg
sbb
xor
add
add
xlat
sbb
cwtl
stos
mov
and
or
jmp
push
scas
inc
lret
xchg
pop
incb
pop
imul
leave
insl
pop
mov
dec
inc
pop
sub
pop
mov
mov
mov
das
js
mov
xchg
jbe
stos
pop
inc
cmpb
xor
adc
add
add
dec
imul
stos
adc
stos
stos
pop
daa
adc
std
daa
mov
push
cmp
adc
fldenv
xlat
or
shll
xor
add
xchg
and
and
pop
xchg
cmc
add
sbbb
shrl
mov
pop
cmpsl
adc
xor
hlt
fildl
dec
imul
add
add
add
fisubrl
and
repz
cli
xchg
pop
imul
shrb
adc
cmp
dec
pop
aas
lods
mov
pop
jno
in
ss
sbb
add
add
add
imul
cmp
jns
mov
lret
mov
xchg
inc
and
arpl
xor
jle
cmp
fisttpl
xor
lcall
mov
adc
fsubrp
orb
testl
add
cmc
aas
xlat
cmpsl
sbb
cmp
sbb
mov
jnp
loope
dec
lds
cmpsl
xor
lret
mov
pop
imul
imul
adc
outsb
std
fsub
fwait
dec
xchg
aam
xchg
jle
fcmove
and
add
inc
jg
fnstsw
outsl
mov
mov
dec
mov
mov
es
aam
orb
shl
mov
push
ljmp
or
or
or
pop
mov
inc
pusha
mov
xor
add
bound
dec
mov
std
or
inc
jmp
fistpll
das
hlt
out
pmuludq
sbb
in
pop
pushf
nop
push
outsb
ja
inc
dec
fnsave
add
add
add
cmp
stos
jo
cmpb
cmp
mov
mov
out
push
push
sbb
nop
test
sarb
sub
and
out
and
fistpll
out
jbe
in
fiaddl
add
add
sbb
push
jbe
lcall
pop
mov
addr16
data16
lds
inc
loope
push
loop
popa
jecxz
pop
data16
jmp
bnd
ss
negb
or
or
push
roll
sbb
add
add
add
stos
pop
inc
cwtl
mov
and
out
mov
sar
nop
dec
sarl
xchg
push
outsl
js
inc
mov
cmpsw
mov
sbb
fdivrs
inc
dec
sub
in
imul
add
adc
ja
mov
mov
movsb
out
sub
data16
jae
pop
mov
nop
fstpt
add
mov
cmp
add
negl
sub
stos
xchg
stos
pop
cmc
add
addr16
add
add
out
push
aaa
xor
jmp
xchg
scas
dec
jo
out
inc
ljmp
jl
mov
or
dec
ljmp
xchg
xchg
out
adc
out
or
into
mov
in
js
scas
add
add
add
xchg
and
dec
imul
push
cmc
mov
ja
cmp
cmp
ja
aaa
add
pop
and
movups
incl
xchg
in
js
xchg
cmp
dec
les
cmp
fcomps
xor
xchg
orb
mov
ret
mov
std
pop
sub
mov
jle
stos
sti
xchg
jmp
xor
add
add
add
hlt
fs
jb
popa
cmc
ss
aam
mov
sub
fistpll
xchg
xchg
loop
dec
adc
dec
stc
cwtl
mov
jb
or
xchg
das
test
or
xchg
push
xchg
aaa
cmp
mov
mov
jae
and
inc
pop
push
insl
cmp
pop
popl
push
xor
sub
call
out
scas
push
or
and
jo
mov
add
add
je
inc
out
ret
into
mov
iret
in
adc
iret
gs
jo
iret
imul
inc
jge
or
xchg
adcl
add
add
in
pop
je
push
aad
inc
imul
sbb
xor
mov
mov
cmp
test
dec
and
dec
or
ja
insb
hlt
jns
lret
and
add
dec
fldcw
dec
arpl
xchg
xchg
mov
cmp
lods
or
cld
cld
ja
sub
ja
sbb
jns
add
add
xor
mov
subl
dec
push
pop
out
jb
dec
push
nop
xchg
push
pop
mov
out
jg
cmpsb
mov
rcr
loopne
or
in
sub
popa
out
push
jno
sub
mov
mov
je
cltd
dec
jp
adc
add
pop
ss
out
pop
jns
cmpsb
stos
movsl
lods
or
sbb
and
aad
hlt
and
xor
insb
lret
adc
sbb
and
sbb
movsb
loop
std
into
xchg
xchg
or
jno
out
add
add
add
add
ds
loop
mov
mov
xchg
jb
add
pop
push
mov
push
cli
push
sarl
call
dec
scas
in
aaa
add
add
add
xchg
divl
mull
fildll
push
push
adc
pop
notb
and
pop
pop
ret
cmp
ja
add
add
out
mov
cwtl
cld
and
xchg
xchg
pop
icebp
jmp
ret
fwait
jge
or
fcmovnb
jmp
repnz
dec
dec
fcoms
mov
ret
add
notb
movsb
aad
push
adc
adc
fldcw
mov
fucom
shrl
or
scas
icebp
xlat
mov
frstor
arpl
test
jne
lock
fiaddl
add
add
jne
lods
cmp
mov
inc
push
outsl
addr16
lods
pop
push
add
mov
add
add
jl
sub
test
sti
in
ja
punpcklwd
push
sbb
out
gs
adc
lcall
das
popa
add
add
sub
hlt
mov
movsl
adcl
sbb
cmp
insl
lods
lds
add
add
add
xchg
lahf
sbb
outsb
xor
testl
jns
or
add
mov
inc
and
adc
mov
push
stc
mov
lds
mov
mov
cmp
sbbl
sub
dec
jge
mov
jmp
sub
mov
daa
pop
dec
repz
add
adc
movsl
in
fstl
sub
push
test
cltd
sub
arpl
or
mov
rclb
push
out
add
add
add
out
sbb
sahf
repz
ds
jo
push
das
aam
dec
mov
int
jnp,pn
or
pop
lret
xchg
xor
xchg
push
popf
adc
add
add
jecxz
dec
fbstp
push
out
mov
jno
jo
sbb
outsb
cmp
inc
xchg
dec
enter
ret
stc
jo
std
lcall
add
add
arpl
and
jge
divl
xchg
adc
fisubl
stos
cmp
pop
or
scas
adc
adc
add
add
ret
pop
mov
test
cltd
mov
mov
jp
loop
adc
in
stos
push
in
jns
les
and
movsb
test
pusha
lret
int
lahf
mov
jne
ret
sbb
cmp
add
aas
ja
jg
add
add
add
iret
lock
jae
shlb
inc
mov
mov
pop
or
or
into
movsb
shll
push
add
andl
jo
push
mov
push
sbb
jle
fadds
jg
addr16
scas
in
ljmp
repnz
in
xchg
mov
xor
push
stos
and
gs
cmp
data16
push
push
mov
es
mov
add
add
add
ljmp
xchg
nop
inc
push
nop
cmp
jae
dec
loope
or
test
or
lds
roll
cmp
xor
rcl
leave
inc
pop
addb
add
add
or
in
rorb
les
inc
pop
pminub
adc
ds
pushf
add
add
int
mov
jmp
test
movsb
mov
jp
in
jecxz
jmp
cli
fadds
cmp
jg
push
push
cmpb
xchg
cmp
rclb
aam
jmp
enter
ret
jmp
cmpsb
xor
sub
and
xchg
je
decb
movb
xor
int
pop
in
and
out
ss
inc
and
cmp
xorb
xor
or
test
bound
add
dec
fists
nop
pop
popf
sub
jp
pop
xchg
pop
test
and
insb
out
add
enter
mov
in
pop
clc
xor
sbb
sbb
add
pop
pusha
movsb
add
cs
adc
push
push
fidivrl
cmp
push
cmp
in
sahf
push
cmp
jne
lock
jecxz
jmp
and
inc
ja
jle
pop
cli
ds
ljmp
push
add
stos
out
incb
add
add
add
ljmp
mov
es
sub
add
fidivrl
xchg
xchg
hlt
or
cmp
jp
push
enter
mov
or
insl
ret
push
push
rorl
aaa
add
movsb
rcrl
ss
sti
xor
flds
adcl
mov
inc
jp
lods
js
leave
and
or
mov
into
es
xchg
movl
in
adc
daa
faddl
add
add
inc
or
pop
int3
cmc
stos
scas
and
movsl
roll
pop
daa
out
jecxz
mov
loop
xchg
scas
out
mov
movsl
cmp
stc
maskmovq
mull
sbb
cld
push
sbb
hlt
movsl
cmpsb
lods
jmp
xor
arpl
sub
add
add
daa
add
fnstenv
cli
sub
fstl
dec
jp
cmp
test
ds
xchg
sub
jg
fidivl
out
movsl
and
aaa
sbb
xor
lods
xchg
cmp
push
fdivl
add
add
add
adc
cmp
mov
mov
loop
lods
mov
mov
mull
icebp
xlat
jo
fidivl
cmp
stos
ds
cmp
shl
pop
xor
notb
mov
out
push
adc
push
cmc
out
and
add
xor
push
sbb
cli
adc
adc
inc
xchg
mov
nop
sahf
loop
dec
test
xchg
faddp
out
inc
xchg
out
sub
ffree
test
xchg
test
xchg
repnz
sbb
jae
add
add
add
add
mov
cmc
sbb
pop
in
jo
jnp
pushf
insl
scas
fstpt
popa
xor
aaa
arpl
dec
mov
xor
mov
push
test
arpl
popa
ljmp
test
add
add
push
lret
jns
cld
ret
inc
pushf
aaa
loop
sub
lock
and
xchg
mov
pop
inc
sub
xchg
bound
fidivrl
pop
cmp
bnd
in
pop
sar
mov
add
add
add
in
mov
mov
ret
rcrl
dec
pop
lods
push
xorb
jae
div
sbb
out
dec
mov
pop
inc
add
add
sbb
dec
movsb
leave
aam
mov
mov
fucom
aas
pusha
inc
lods
inc
or
bound
mov
and
add
add
add
imul
iret
popf
mov
jbe
inc
cwtl
inc
insl
jle
xchg
add
out
bound
arpl
aam
xchg
mov
std
stos
sbb
xor
jno
add
sti
adc
add
add
mov
adc
mov
mov
xchg
mov
test
push
pop
xor
imul
jns
popf
lea
aas
pop
data16
daa
jg
lret
xchg
in
ljmp
cmp
test
add
add
add
in
push
es
adc
sbb
notb
nop
mov
jnp
adc
int
test
push
mov
push
mov
xor
lock
andb
fbld
neg
jp
dec
test
mov
add
add
icebp
rcll
mov
inc
sbb
dec
ljmp
adc
ljmp
sbb
xchg
pop
lds
add
pop
dec
dec
je
lret
sti
cs
movsl
ja
insl
addr16
xchg
jecxz
xchg
xchg
mov
and
xor
and
mov
add
add
inc
out
fsubs
js
inc
and
or
div
cmp
fcoml
fbstp
inc
test
fimuls
mov
fistpll
pop
cmc
push
or
xchg
add
add
add
ja
sub
push
pop
add
dec
mov
stc
jecxz
nopl
dec
repz
out
push
pushf
dec
cli
loope
xchg
pop
xor
iret
repz
cmp
sub
ljmp
add
mov
and
or
mov
mov
inc
movsl
sub
and
dec
inc
lea
xchg
test
aas
aad
fldt
jb
xor
mov
push
fdivr
fs
add
adc
daa
sub
xchg
or
add
add
add
aas
add
sub
lcall
icebp
push
das
adc
push
in
dec
addl
xchg
adcb
lcall
add
add
pop
xchg
daa
les
cli
pop
adc
xor
mov
movsb
cmp
iret
pop
aam
sar
je
cmp
jae
sti
sub
lods
sub
mov
stc
fs
jg
add
add
add
out
push
add
leave
and
adc
or
loope
stos
mov
inc
or
mov
popf
dec
ret
sub
fwait
in
and
mov
jmp
in
in
xchg
cmpsl
stc
movsb
mov
outsl
jnp
jns
xorb
lahf
rolb
add
add
add
shrl
rorl
inc
inc
inc
ds
lods
ror
adc
mov
sbbl
pop
cmp
mov
cmp
leave
das
push
xor
sbb
push
sar
arpl
jecxz
and
pusha
push
mov
push
add
add
or
sbb
sub
cli
push
adc
xchg
or
adc
ss
jae
cltd
and
call
stos
cmp
out
outsb
or
xlat
sti
call
pop
mov
cs
int3
and
adc
add
add
xor
mov
dec
mov
push
call
test
cli
push
inc
inc
mov
in
xor
mov
lea
adc
jne
loopne
inc
push
inc
mov
add
jle
popf
adc
pop
fs
rcrb
xchg
imul
jmp
add
add
add
pop
xchg
jecxz
or
xchg
dec
sbb
shll
sub
cmpsl
xor
add
add
xchg
sbb
insl
loop
hlt
pop
outsb
jge
cld
int
sbb
jg
mov
scas
mov
add
iret
jmp
add
add
add
insb
fstl
add
adc
inc
xchg
testl
pushf
or
notb
lods
mov
shll
das
pop
add
in
iret
adc
push
pop
js
add
pop
mov
sbb
es
hlt
mov
add
ss
fsubl
pusha
xor
outsb
or
push
bswap
mov
dec
jmp
jl
test
std
cmp
adc
push
push
mov
push
mov
add
add
ja
mov
xchg
cmp
imul
in
movsb
sti
movsl
xor
loopne
sti
pusha
mov
stc
out
outsl
push
rolb
ret
mov
pop
stos
lds
mov
add
add
add
add
add
adc
dec
fsubrs
subl
scas
lea
inc
dec
stos
filds
es
pop
push
shlb
leave
cli
add
pop
cld
mov
add
add
stos
sahf
xor
les
idivl
dec
jmp
sub
push
sub
std
js
add
inc
cmpsb
push
mov
jle
adc
xor
cwtl
push
lds
add
add
aas
fidivrs
pop
aad
cmpsl
add
cli
sbb
lret
mov
sub
xor
xor
ja
adc
mov
xchg
pop
dec
div
ret
xchg
popa
sub
add
add
add
xchg
pop
test
js
jle
pop
imul
jbe
or
push
sbb
addr16
mov
adc
add
add
add
dec
sbb
shll
imul
fsubrl
out
rorl
inc
aaa
orl
mov
in
jo
test
jb
insb
frstor
mov
mov
mov
out
or
addr16
inc
loop
divl
sub
ficomps
adc
enter
loop
add
add
loope
mov
dec
arpl
mov
mov
mov
das
and
jo
pop
jno
outsb
jno
add
idiv
mov
fnsave
adc
xchg
jmp
popf
int
mov
add
add
out
ja
es
rcl
jne
xchg
jo
sbb
lea
movsl
and
sub
push
push
adc
js
stos
adc
inc
inc
lods
aam
shll
pop
jecxz
push
test
loopne
cmpsl
and
xchg
add
add
add
test
mov
mov
daa
mov
sbb
or
aam
jno
stos
ret
xor
ret
jle
or
mov
add
aas
mov
jo
pop
cmp
dec
imul
dec
dec
jno
bound
lds
add
add
clc
push
add
divl
std
push
lret
mov
out
pop
popl
data16
sub
lret
xchg
sub
mov
dec
ss
aad
test
stos
pop
add
xchg
add
add
add
jb
in
adc
sahf
push
mov
arpl
es
bnd
adc
sbb
loopne
outsl
mov
add
pop
mov
fsubs
and
loope
arpl
cmp
repnz
xor
jmp
orb
sbb
pushf
addl
pop
mov
aas
push
mov
pop
dec
adc
add
add
fists
xchg
pop
test
jecxz
data16
sti
aam
lret
loope
cltd
pop
xor
cwtl
add
sub
jp
test
xchg
jmp
add
add
add
test
lods
jmp
adc
insb
mov
sbb
adc
sub
mov
xchg
lea
and
aad
sub
repnz
mov
inc
and
jnp
pop
loop
xchg
lea
add
xor
bound
lock
lea
scas
sbb
lock
push
xchg
sti
in
in
mov
xchg
int
dec
sbb
jb
sbb
jo
or
pusha
inc
and
repnz
stos
cltd
orb
mov
mov
mov
dec
mov
mov
addl
jbe
sbb
in
xchg
add
add
mov
mov
adcl
xor
mov
fs
push
leave
idivl
scas
in
add
add
xchg
rcr
inc
in
mov
or
pushf
push
jle
andb
push
and
mov
jnp
push
pop
mov
cmp
mov
pusha
loopne
push
xlat
sbb
xchg
jno
mov
sbb
jl
add
js
mov
lods
jnp
pop
stc
add
push
jl
sbb
bound
insb
hlt
test
ds
js
fs
mov
sti
mov
add
loope
adc
cmpl
add
enter
fimull
add
mov
xchg
pop
xor
inc
imul
add
add
add
push
ret
dec
xchg
and
dec
cmp
insb
pop
sub
rcrb
lcall
inc
and
and
sub
ret
in
popf
xlat
aas
pusha
add
in
faddp
cmp
lods
in
lods
mov
jbe
dec
sub
movsl
push
jg
or
stos
mov
addr16
cld
cmpsb
out
inc
mov
xchg
push
sub
add
add
sbb
or
into
lods
dec
ss
mov
test
ss
xchg
int
iret
in
fxch
jbe
pusha
andl
adc
nop
add
add
add
adc
mov
dec
dec
addr16
mov
lret
dec
sti
inc
dec
jb
flds
and
mov
imul
add
add
push
pop
and
push
xchg
les
in
outsb
push
das
roll
xchg
xchg
mov
and
std
xchg
fiaddl
add
add
in
shll
data16
mov
lcall
mov
jae
syscall
push
pop
cmpsb
or
fwait
jno
sbb
push
imul
pop
pop
push
jmp
sbb
sbb
xchg
inc
jb
add
add
add
clc
pop
xchg
loope
data16
sbb
mov
cmp
aas
ret
sub
mov
dec
inc
icebp
cmc
cli
enter
adc
add
add
pop
xchg
pop
push
arpl
and
xor
and
pop
adc
lret
mov
mov
mov
cmpsl
and
xchg
lock
nop
mov
bound
and
add
add
and
jns
sub
mov
xchg
nop
cwtl
stc
mov
dec
arpl
iret
in
out
mov
jmp
jle
cwtl
cs
adc
add
xchg
popl
sbb
ja
test
mov
jae
push
cmp
jne
fprem1
inc
jb
outsb
sub
xor
inc
jne
inc
enter
leave
add
adc
cli
es
loope
addps
orb
add
hlt
push
xor
push
adc
and
adc
js
daa
sub
or
nop
repz
roll
jp
adc
or
lods
outsb
jne
repnz
sbb
pop
xchg
stos
insb
mov
xor
add
add
add
insl
fdivrs
daa
mov
jp,pn
pop
notb
mov
incl
add
add
mov
mov
sar
sbb
fistpll
push
push
shll
mov
mov
sub
jne
cmp
xchg
lea
jp
mov
jmp
add
add
popf
out
and
xor
cmpsl
aam
or
dec
mov
mov
das
fistpl
ror
add
add
add
push
iret
sbb
cli
cmpsb
gs
xor
iret
rcll
xorb
push
hlt
push
sbb
clc
stc
dec
icebp
mov
pop
jge
pushf
sbb
pop
sub
ljmp
fsubrs
sbb
add
add
add
xchg
call
pop
xor
out
hlt
dec
pop
jo
sbb
or
fsub
das
mov
mov
sub
add
add
outsb
cmpsb
movsb
outsl
push
jb
cmp
adc
push
testl
cld
sub
mov
add
add
cltd
xchg
stos
mov
pop
lds
jns
test
xor
movsb
push
cmp
adc
jmp
push
in
sbb
push
pop
in
pop
loopne
adc
jle
movsb
xchg
movsb
mov
push
popa
sbb
fwait
repz
add
add
sarl
fsubs
xchg
movsl
mov
mov
cmp
jno
scas
fidivrs
mulb
inc
test
adc
or
ljmp
call
add
add
je
jecxz
push
adcl
in
leave
rcrb
push
idivb
ljmp
push
add
clc
movsb
pop
les
xor
test
aaa
out
insb
jle
nop
pop
jl
push
add
add
out
cmp
sub
nop
xchg
bound
sbb
stos
add
test
mov
stos
addr16
or
rorl
lahf
call
xor
add
sbb
add
add
add
loope
aas
test
jp
decb
add
call
movsl
out
mov
push
adc
inc
fdivr
incl
aad
es
mov
sahf
subl
rcll
in
loop
ret
call
add
add
add
cmp
scas
arpl
dec
sub
clc
mov
xchg
jbe
aam
pop
xlat
mov
xchg
imul
movsb
fwait
sub
add
daa
add
add
add
inc
test
cmp
sub
jp
ds
xchg
dec
imul
dec
stc
gs
adc
jmp
dec
mov
call
dec
cmpb
xchg
cmpsl
and
push
pushf
add
add
bswap
mov
xor
mov
stos
bound
loop
loope
test
popf
int
inc
ja
push
dec
xchg
lret
inc
fsubrs
and
sub
ja
outsb
cs
fldenv
sahf
stc
add
add
add
mov
inc
loopne
sub
sbb
dec
test
popf
mov
lahf
dec
out
lds
jb
mov
sub
xor
rorb
stc
popa
sbb
push
push
mov
inc
sbb
xor
jne
push
sub
enter
out
push
or
xor
stos
loopne
outsl
push
rcll
aas
je
fsts
add
es
int
dec
mov
dec
data16
xchg
mov
test
repz
pushl
paddw
stos
or
mov
fnstenv
out
xlat
pop
or
adc
ja
movb
dec
xor
add
add
add
sbb
mov
sub
lock
jae
aam
loop
mov
je
cmc
sbb
in
mov
or
stc
and
sbb
sarb
add
dec
pushf
dec
repnz
or
scas
cmpsl
cmc
push
insl
mov
into
pop
sti
arpl
pop
movl
add
sub
xchg
or
or
out
inc
pushf
loop
dec
dec
dec
xor
xchg
push
incl
mov
push
mov
ret
aas
cwtl
mov
cmp
dec
adc
fdivrs
js
dec
daa
add
cmp
mov
add
movsb
es
sbb
pop
ja
jmp
aas
mov
std
ljmp
push
add
add
repnz
rcrl
repz
stos
xor
ja
mov
stos
stos
ds
es
ja
int3
xchg
dec
das
dec
fxch
orl
xchg
js
int3
add
add
add
mov
inc
subl
mov
add
mov
popa
or
enter
out
lret
ljmp
adc
mov
and
add
add
and
test
push
ret
push
sarl
fdiv
subb
int3
out
inc
jno
jo
add
add
add
or
sti
mov
jbe
xadd
adc
pop
push
in
or
je
adc
mov
out
jl
roll
add
pop
nop
jecxz
fbld
push
cmp
cmp
pop
pop
js
mov
mov
jno
add
data16
add
xchg
adc
lods
adc
jmp
push
sbb
add
add
sub
xchg
jne
cmpsl
mov
or
stos
daa
sbb
push
inc
sti
arpl
add
cmp
add
pop
and
jne
call
inc
xor
pop
mov
scas
aam
jle
add
add
add
xor
ss
clc
cmp
jno
subl
mov
mov
cld
fistl
jge
mov
std
jmp
pop
sub
add
add
xorl
bound
imul
mov
pop
fisttps
xor
cmp
and
in
sti
mov
les
lock
add
add
cmp
adc
inc
sarb
es
outsb
and
icebp
out
adc
mov
pusha
pop
push
xchg
or
stos
test
adc
js
lods
add
add
add
pop
movsl
or
out
pop
ss
inc
cld
fimull
popa
ss
ror
mov
or
cli
xor
loop
ja
mov
leave
imul
push
outsb
jnp
imul
stos
cmpsb
add
add
mov
pop
call
mov
dec
xchg
dec
cmp
fcomi
out
fs
sahf
jl
or
ret
sub
mov
fs
dec
jge
inc
ds
inc
xor
lahf
stos
mov
sbb
incb
add
add
cmp
dec
cmp
sbb
add
imul
mov
push
pop
push
call
or
mov
mov
out
sahf
mov
cld
cld
movsb
lcall
lds
add
add
mov
push
loopne
mov
ret
popa
cwtl
jmp
loop
cli
insb
jbe
mov
add
add
push
fcmovbe
jge
repnz
add
cmp
fdivr
dec
dec
mov
scas
cmc
inc
adcb
and
out
push
dec
sti
jecxz
push
and
loope
mov
in
adc
ret
nop
cmp
mov
xor
loopne
nop
xor
lcall
stos
lret
sbb
push
push
scas
xchg
jg
scas
mov
stc
int3
stos
test
xor
hlt
adc
adc
mov
adc
sub
adc
dec
mov
cmpl
mov
inc
add
mov
cmp
pop
mov
sub
add
add
add
cmp
sbb
xchg
ljmp
xchg
lods
in
js
mov
add
xchg
enter
sub
movsl
jle
jmp
popf
cmovns
mov
jp
cmc
xlat
das
aas
cwtl
sub
jbe
adc
loopne
jne
repnz
lret
and
add
outsl
fstpt
push
jne
das
cwtl
cmc
lods
jg
add
test
adc
stos
xchg
mov
push
mov
scas
nop
and
jge
dec
ds
in
push
cmc
mov
and
cmpsb
xor
push
movsb
xor
cmpsb
lds
add
add
add
mov
scas
dec
cmc
test
sub
cltd
dec
repz
mov
test
jge
dec
adc
incl
test
sub
mov
scas
cmp
stc
jmp
mov
add
data16
cmpl
stc
xor
jp
mov
outsb
cmc
popf
in
lret
jge
mov
push
and
lret
sbb
and
mov
and
fxtract
dec
sti
and
outsl
fisttps
or
popf
aas
xor
add
add
add
jmp
xor
xor
cltd
fwait
cmp
fldl
enter
test
adc
in
add
add
push
notb
jo
movsb
adc
mov
xor
cltd
mov
sbb
test
popf
push
xlat
jl
out
mov
insl
je
in
mov
movsb
out
aam
and
clc
jp
push
loop
mov
add
ja
ljmp
test
ljmp
cmp
pop
xchg
mov
pop
or
jmp
mov
lcall
cmova
push
lds
ljmp
fidivl
rorl
jbe
outsb
pop
dec
push
shll
outsl
xor
push
lret
inc
xor
mov
sti
mov
scas
mov
cmpsb
cmp
add
add
add
cwtl
xchg
mov
in
mov
jae
int3
pop
cmpsb
ret
dec
cltd
aas
jl
or
iret
inc
mov
and
dec
lock
adc
push
add
add
add
or
aam
addr16
push
into
add
repnz
loopne
arpl
call
incb
add
cmpsl
jmp
js
pop
cs
out
je
mov
dec
enter
cmc
in
clc
adc
icebp
inc
pop
pop
sbb
mov
cmp
sub
sub
fsts
dec
xchg
repz
pop
mov
stos
fisubrl
hlt
lods
add
add
cmpsb
push
cmp
push
movsb
cmpsb
inc
cltd
sti
inc
jge
fimuls
hlt
test
aam
fsts
ret
jle
inc
jno
jecxz
pop
clc
xor
pop
arpl
mov
add
popa
in
fwait
sbbl
add
add
jmp
push
mov
test
jmp
popf
lret
cmp
outsb
adc
loope
inc
ja
or
pop
rclb
mov
ror
ret
insb
dec
push
pxor
leave
cmp
jbe
stos
or
fildll
fmull
outsb
cltd
jae
lcall
addl
arpl
mov
jmp
dec
in
xchg
mov
scas
cmpsl
pop
sbb
pop
das
std
push
pop
rcrl
scas
push
iret
push
js
int
inc
dec
dec
in
mov
add
add
arpl
int3
mov
out
add
cmpsb
pop
leave
dec
cmp
sbb
jg
jns
cmp
cld
imul
in
test
lcall
fistpl
scas
jmp
ljmp
dec
insl
push
ficompl
jns
inc
inc
cmp
and
scas
cmpsl
ret
mov
lcall
ja
fldl
pop
mov
leave
cwtl
sarl
jns
dec
and
xor
int
add
add
jl
outsb
mov
movsl
les
mov
movsl
sbb
xchg
stos
mov
inc
adc
jp
popa
shr
ret
faddl
lock
call
pushf
sub
add
jmp
scas
int
jmp
cwtl
jne
aad
jb
sbb
cli
adc
adc
ret
and
scas
cmp
jo
jge
test
jp
sahf
out
stos
jno
jo
mov
pop
sub
pushf
push
xor
leave
roll
add
add
call
daa
inc
in
ret
sub
aaa
int3
es
mov
jne
in
mov
imul
aad
call
repz
jp
add
add
add
push
imul
push
iret
lods
pop
leave
mov
mov
inc
cmpb
or
add
add
popa
and
pop
pop
sbb
arpl
xchg
cli
outsl
sub
xchg
jp
jg
daa
and
mov
mov
add
add
insl
add
xchg
aam
xchg
jno
sub
mov
in
pusha
dec
push
mov
or
dec
cmp
or
pushf
cld
inc
and
dec
imul
lea
fs
decl
out
mov
andl
rolb
add
add
sub
outsl
or
sbb
mov
xchg
imul
add
in
out
fnstenv
cld
xchg
repz
mov
jecxz
sbb
add
sub
cwtl
cmpsb
cmc
test
fists
push
fcomps
mov
sbb
into
or
mov
pusha
js
mov
das
pop
lock
jp
stc
movsb
aad
fldenv
les
xchg
jge
rcrl
add
xchg
inc
mov
push
ds
ja
aaa
aas
divl
cmp
jb
andl
jmp
imul
or
in
cltd
mov
xchg
in
iret
push
icebp
and
jl
rcrl
jbe
add
add
mov
jg
mov
dec
inc
test
push
push
adc
xchg
jge
movsb
mov
jecxz
inc
in
aam
adc
push
push
jp
sub
add
xor
jne
out
add
add
int
cmpsl
test
ja
jge
add
add
addl
mov
dec
inc
sahf
adc
popa
push
xor
sbb
add
test
inc
inc
call
das
ljmp
ljmp
and
mov
daa
enter
mov
and
xor
pushl
sub
mov
add
mov
lret
es
lret
cmp
sub
pop
jb
sahf
test
stos
add
adc
add
add
add
pop
cwtl
adc
push
dec
movsl
hlt
jle
cld
test
fisttps
xchg
jg
jmp
loop
mov
mov
pushf
jb
jnp
mov
add
push
ja
insl
mov
adc
lret
cltd
mov
ret
nop
nop
ja
mov
outsl
adc
jbe
xchg
negb
iret
or
cs
pop
inc
imul
rcrl
pop
jmp
jmp
addr16
pop
cli
outsb
xor
jmp
mov
jecxz
pop
test
pop
lods
js
or
fldenv
sbb
mov
pop
clc
pushl
iret
jg
outsl
adc
pop
jecxz
adc
ret
andb
xchg
push
mov
add
xchg
add
xchg
or
frstor
call
cmp
push
jg
shll
das
lods
leave
cmpsw
outsb
pop
dec
mov
cmc
bound
xor
iret
out
out
xlat
sub
pop
stc
bndstx
mov
cmpsl
sub
add
add
outsl
mov
pushf
pop
jmp
ja
xchg
jne
in
push
out
imul
jmp
cmp
cmp
inc
leave
les
data16
cmp
mov
ja
filds
push
imul
pop
in
add
ljmp
hlt
movsl
fwait
sahf
jae
and
xchg
add
add
fs
call
leave
sar
imul
rcl
cmp
cld
sbb
mov
sub
and
or
mov
orl
add
dec
cwtl
mov
add
fisubl
insb
data16
test
cli
rcrl
jmp
neg
pop
xchg
push
repz
pop
push
mov
test
pop
push
push
and
rcll
cltd
add
add
mov
outsl
rclb
push
dec
sub
xor
fcmovne
call
xchg
add
add
jnp
int
mov
orl
pop
mov
out
repz
push
lods
pop
jp
mov
cs
mov
out
adc
push
stos
mov
jmp
cmp
loopne
loop
je
mov
stos
iret
in
push
lcall
adc
rcl
adc
pop
xchg
stos
pop
add
add
je
inc
nop
sub
out
mov
jp
dec
gs
add
pop
sarb
fisttps
xor
ret
cmp
loopne
sbb
lret
mov
add
add
aaa
adc
imul
inc
outsl
into
pop
add
out
fildl
mov
in
inc
iret
mov
pop
and
fsubrl
stc
jg
add
jb
mov
test
dec
mov
xchg
pop
add
add
add
testl
fucomi
jnp
adc
push
fs
pop
nop
cld
jmp
fistps
adc
add
add
add
js
and
mov
les
and
jmp
in
cmp
and
or
and
call
add
or
sub
iret
std
sub
xor
jmp
movsl
adc
ret
stos
dec
int3
mov
dec
fimull
daa
leave
jne
dec
ret
xor
jno
or
xor
add
add
add
ljmp
imul
pop
pop
out
inc
clc
pushf
sbb
int3
jp
mov
pop
mov
push
sbb
test
pop
out
test
stc
jge
jecxz
sbb
nop
inc
and
add
add
add
fidivl
jl
in
mov
xchg
vpmacsdqh
add
repz
cbtw
adc
jnp
xor
mov
jmp
lret
mov
pop
cltd
ficomps
add
add
xor
and
sbb
clc
mov
cmc
loope
movsb
psubq
jno
sbb
cmp
and
add
add
add
jne
add
das
sbbb
cld
inc
or
push
mov
sbbl
mov
add
add
dec
push
sbb
test
into
lock
movsb
inc
add
or
out
cs
jne
es
jno
mov
out
pop
mov
arpl
int
idivl
push
dec
add
add
add
fstpt
aam
jbe,pn
pop
inc
fnsave
sbb
adcb
lret
push
pop
cmpsb
pop
aam
pop
leave
push
jmp
ret
andl
mov
add
scas
add
orb
adc
add
adc
outsb
and
mov
add
add
jecxz
add
mov
adc
arpl
push
ljmp
mov
adc
stos
dec
sbb
mov
dec
add
add
push
cmp
adcl
mov
stos
mov
cmpsb
and
mov
aaa
inc
or
xchg
arpl
jo
jg
mov
xchg
fwait
jecxz
jno
pop
mov
lods
addb
out
inc
leave
rcl
mov
sahf
jge
mov
add
add
imul
sbb
aas
imul
inc
gs
daa
jmp
sahf
sub
pushf
mov
mov
add
add
lds
mov
xor
xor
sub
repz
dec
mov
cmp
pusha
add
add
add
ja
leave
lcall
out
mov
or
test
cmpsl
mov
ja
inc
mov
sbb
out
insb
push
xchg
imull
or
jle
inc
add
movsb
xor
and
jecxz
sub
add
add
add
add
jbe
mov
scas
leave
cli
ret
lea
scas
cmp
pop
jae
xchg
pop
loope
imul
dec
test
add
test
les
mov
aam
icebp
ds
xchg
cli
jae
xor
sti
leave
fstpt
incl
add
add
es
scas
xchg
mov
cli
pop
pop
stos
in
loop
pop
lods
dec
inc
stos
sub
mov
inc
loop
xor
pop
add
adc
mov
push
pop
pop
lock
aad
jl
and
into
push
add
add
add
and
cltd
xchg
cs
sub
add
add
mov
add
test
call
inc
movl
mov
testl
andl
mov
clc
mov
shrb
ljmp
xchg
fistl
addb
add
add
loop
pushf
mov
ljmp
lret
mov
call
or
add
add
add
ds
outsb
inc
cmp
add
je
add
add
add
add
cmp
add
push
add
add
add
add
adc
add
add
add
add
add
add
adc
push
push
dec
add
add
inc
add
add
add
sbb
add
add
add
add
add
jg
inc
cmp
add
add
xor
push
add
sub
mov
add
add
add
push
dec
jge
add
add
add
dec
push
xor
dec
add
add
inc
add
add
add
add
mov
add
add
sbb
adc
sbb
add
in
ret
push
mov
mov
add
mov
pop
ret
push
mov
sub
push
push
push
movb
movl
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
and
add
mov
and
sub
mov
mov
mov
lea
mov
and
cmp
jne
mov
and
mov
imul
sub
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
lea
cmp
jne
mov
and
imul
mov
sub
mov
mov
and
add
mov
and
sub
mov
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
add
mov
and
mov
jmp
mov
and
xor
mov
add
and
mov
jmp
mov
and
imul
mov
sub
mov
jmp
mov
imul
mov
sub
mov
lea
dec
add
sub
sub
mov
add
mov
movl
mov
mov
lea
cmp
jb
mov
add
mov
and
mov
mov
mov
mov
mov
and
sub
cmp
jle
mov
mov
lea
mov
mov
sub
mov
mov
and
sub
cmp
jle
mov
mov
lea
mov
pushl
mov
and
mov
lea
cmp
jne
mov
and
imul
mov
sub
mov
mov
sub
mov
and
sub
mov
ret
mov
add
cmp
je
mov
imul
mov
sub
mov
jmp
mov
mov
lea
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
pop
ret
push
mov
mov
mov
sub
pop
ret
push
mov
sub
push
mov
mov
mov
mov
lea
xor
add
adc
mov
mov
mov
mov
mov
mov
mov
imul
mov
sub
xor
mov
mov
movb
mov
sub
mov
mov
sub
mov
sbb
xor
mov
cltd
sub
sbb
mov
lea
push
push
call
cltd
mov
mov
mov
and
mov
imul
sub
mov
movl
mov
mov
lea
mov
and
add
mov
mov
sub
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
and
test
jne
cmpl
ja
cmpl
jbe
mov
add
mov
add
mov
add
mov
jmp
mov
add
mov
add
mov
add
mov
movb
jmp
movb
mov
and
cmp
jge
mov
add
mov
sub
mov
add
mov
mov
and
not
mov
jmp
mov
and
not
mov
mov
add
push
mov
and
push
mov
push
mov
push
call
add
jmp
mov
sub
xor
mov
sub
mov
lea
push
push
call
mov
mov
and
xor
mov
add
and
mov
pop
mov
pop
ret
push
mov
mov
mov
sub
pop
ret
push
mov
mov
mov
add
pop
ret
push
mov
sub
mov
mov
mov
mov
lea
cmp
jb
mov
add
mov
and
mov
movl
jmp
mov
add
mov
cmpl
jae
mov
add
mov
and
mov
push
push
mov
push
call
add
mov
xor
divl
mov
sub
mov
jmp
mov
sub
xor
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jae
mov
add
xor
mov
sub
mov
push
push
mov
push
call
add
xor
mov
add
mov
and
mov
jmp
mov
mov
lea
mov
mov
push
call
add
mov
mov
lea
add
mov
mov
mov
pop
ret
push
mov
sub
push
mov
xor
add
adc
xor
mov
cltd
sub
sbb
mov
mov
push
call
add
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
xor
mov
cltd
mov
add
mov
adc
and
and
mov
jmp
mov
and
add
mov
and
mov
jmp
mov
imul
xor
mov
sub
mov
sbb
mov
jmp
xor
mov
mov
imul
cltd
mov
sub
mov
sbb
mov
xor
mov
mov
xor
divl
sub
mov
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
xor
mov
cltd
mov
add
mov
adc
and
and
mov
jmp
mov
and
add
mov
and
mov
jmp
mov
imul
xor
mov
sub
mov
sbb
mov
jmp
xor
mov
mov
imul
cltd
mov
sub
mov
sbb
mov
mov
add
mov
adc
xor
mov
cltd
add
adc
mov
xor
mov
push
call
add
xor
mov
mov
mov
and
mov
lea
xor
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
imul
xor
mov
sub
mov
sbb
mov
xor
mov
mov
lea
mov
xor
mov
imul
cltd
mov
sub
mov
sbb
mov
xor
pop
mov
pop
ret
push
mov
sub
movl
jmp
mov
sub
mov
cmpl
jle
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
xor
mov
and
mov
mov
jmp
mov
mov
and
mov
jmp
mov
mov
imul
mov
sub
mov
mov
jmp
xor
mov
imul
mov
sub
mov
mov
mov
mov
cmp
jne
xor
mov
add
cmp
je
xor
mov
imul
mov
sub
mov
jmp
xor
mov
add
mov
mov
xor
mov
mov
mov
lea
mov
mov
mov
cmp
jne
xor
mov
add
cmp
je
xor
mov
imul
mov
sub
mov
jmp
xor
mov
add
mov
mov
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
xor
mov
and
mov
mov
jmp
mov
mov
and
mov
jmp
mov
mov
imul
mov
sub
mov
mov
jmp
xor
mov
imul
mov
sub
mov
mov
jmp
mov
mov
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
mov
andl
pop
pop
ret
push
mov
push
mov
test
je
mov
test
je
cmp
je
cmp
jne
and
cmp
mov
jne
push
call
add
pop
xor
push
call
mov
pop
test
je
and
mov
jmp
test
je
test
je
test
jne
movl
push
pushl
pushl
call
add
xor
cmp
setne
dec
mov
jmp
movl
or
pop
pop
ret
call
test
jne
ret
push
pushl
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
testw
je
mov
mov
jmp
movl
mov
and
je
mov
test
je
cmp
mov
jb
mov
push
pushl
pushl
call
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
test
pop
jne
cmpl
je
mov
xor
divl
mov
sub
jmp
mov
push
pushl
pushl
call
add
cmp
je
add
sub
cmp
jb
mov
jmp
mov
push
movsbl
push
call
pop
cmp
pop
je
incl
mov
dec
mov
test
jg
movl
test
jne
mov
pop
pop
pop
leave
ret
orl
mov
jmp
mov
sub
xor
divl
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
xor
cmp
push
mov
jle
mov
push
push
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pushl
call
pop
pop
ret
mov
ret
mov
cmp
jbe
xor
ret
push
mov
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
push
push
push
lea
shl
push
pushl
call
test
je
or
jmp
mov
xor
cmp
mov
mov
jle
jmp
xor
mov
push
push
call
test
jne
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
jmp
xor
push
mov
mov
mov
xor
pop
cmp
lea
rep
jl
push
pushl
call
test
jne
mov
xor
lea
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
incl
lea
cmp
jl
test
jne
cmp
jg
cmp
lea
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
andl
lea
mov
mov
andl
lea
mov
cmp
mov
je
mov
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
mov
cmp
jne
cmpl
je
mov
cmp
jge
mov
shr
or
or
jmp
add
mov
shr
or
or
cmp
jne
mov
mov
cmp
jne
cmp
jne
incl
addl
cmpl
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
mov
cmp
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
mov
mov
mov
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
andb
test
je
push
call
pop
jmp
xor
jmp
andl
movl
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
je
and
mov
jmp
orl
or
mov
andl
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmpl
jne
push
call
cmp
pop
je
inc
jmp
cmpl
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmpl
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
jne
movl
jmp
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
andb
lea
mov
jmp
andl
movl
or
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
xor
mov
cmp
mov
jge
mov
push
push
push
call
add
cmp
mov
jl
mov
test
jne
sub
jmp
mov
mov
mov
sub
test
mov
je
mov
mov
sar
and
mov
testb
je
mov
cmp
jae
cmpb
jne
incl
inc
jmp
test
jne
movl
or
jmp
cmpl
jne
mov
jmp
testb
je
mov
test
jne
and
jmp
sub
add
mov
mov
sar
and
lea
shl
mov
testb
je
push
push
pushl
call
add
cmp
jne
mov
mov
add
cmp
jae
cmpb
jne
incl
inc
jmp
testb
jmp
push
pushl
pushl
call
mov
add
cmp
ja
mov
test
je
test
je
mov
mov
mov
testb
je
incl
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
pop
mov
inc
cmp
je
cmp
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
jne
movl
or
jmp
test
je
xor
jmp
or
jmp
push
pushl
push
pushl
call
mov
add
cmp
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
push
push
xor
xor
xor
cmp
push
jle
mov
mov
mov
cmp
je
testb
je
inc
add
cmp
jl
jmp
mov
jmp
mov
push
shl
call
pop
mov
mov
mov
mov
cmp
je
mov
cmp
je
orl
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
test
je
test
jne
test
je
andl
test
je
mov
and
mov
mov
mov
andl
andl
and
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
testw
push
je
mov
mov
sub
lea
mov
mov
dec
test
mov
jle
push
push
push
call
add
mov
jmp
cmp
je
mov
mov
sar
and
mov
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
push
lea
pop
push
push
push
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
or
pop
pop
pop
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
testb
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
incl
mov
cmp
jne
incl
movb
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
movl
mov
jmp
call
mov
jmp
lea
push
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
jmp
mov
testb
je
mov
cmpb
je
movl
mov
jmp
sub
jmp
andl
movl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
addb
lods
inc
inc
add
inc
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
inc
inc
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
sub
push
inc
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
inc
inc
add
inc
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
mov
xor
mov
cmp
je
add
inc
cmp
jl
mov
shl
cmp
jne
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
call
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
push
inc
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
push
inc
add
push
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
push
inc
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
push
inc
add
push
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
movl
ret
mov
mov
ret
cmp
jb
cmp
movl
jbe
movl
ret
push
push
push
or
xor
xor
mov
mov
test
je
lea
cmp
jae
testb
je
add
jmp
orl
sub
sar
add
mov
cmp
jne
add
inc
add
cmp
jl
jmp
mov
push
call
test
pop
je
addl
lea
lea
mov
cmp
jae
andb
orl
movb
mov
add
add
jmp
shl
mov
pop
mov
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
andl
movl
or
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
andl
movl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
testb
lea
je
mov
ret
andl
movl
or
ret
push
mov
push
xor
testb
push
je
add
testb
je
or
testb
je
or
pushl
call
test
jne
call
push
call
pop
or
jmp
cmp
jne
or
jmp
cmp
jne
or
call
mov
or
cmp
jne
andl
movl
jmp
pushl
push
call
pop
mov
pop
or
sar
mov
mov
and
mov
mov
pop
pop
pop
ret
mov
cmp
jae
mov
mov
sar
and
mov
testb
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
movl
or
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
pop
ret
call
cmpb
je
jmp
ret
pushl
push
pushl
pushl
call
add
ret
push
mov
sub
mov
push
xor
push
test
push
movl
mov
je
mov
movb
jmp
andb
movl
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
je
movl
mov
jmp
movl
jmp
movl
jmp
movl
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
jmp
movl
jmp
movl
mov
mov
test
je
mov
not
and
test
jne
push
pop
test
je
or
orb
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
andl
movl
jmp
push
push
pushl
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
mov
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
pop
mov
pop
mov
mov
or
sar
and
mov
lea
shl
mov
andb
mov
jne
test
je
testb
je
push
push
push
call
add
cmp
mov
jne
cmpl
je
jmp
andb
lea
push
push
push
call
add
test
jne
cmpb
jne
pushl
push
call
pop
cmp
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
or
jmp
cmpb
jne
testb
je
mov
orb
lea
mov
pop
pop
pop
leave
ret
incl
push
call
pop
mov
test
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
mov
cmp
jb
xor
ret
mov
and
sar
mov
mov
and
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
cmpl
jne
push
push
pushl
call
add
test
je
push
pop
ret
xor
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
testb
je
push
call
cmp
pop
je
inc
cmp
jl
mov
pushl
call
mov
pop
andl
inc
cmp
jl
mov
pop
pop
ret
push
mov
mov
call
push
mov
push
xor
cmp
jae
mov
mov
sar
and
mov
testb
je
push
push
push
call
add
cmp
mov
je
push
push
push
call
add
cmp
je
push
mov
sub
test
jle
push
lea
push
push
call
push
push
call
add
mov
mov
cmp
jge
mov
push
lea
push
push
call
add
cmp
je
sub
test
jle
jmp
cmpl
jne
movl
or
pushl
push
call
pop
pop
jmp
jge
push
pushl
push
call
push
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
movl
call
mov
push
pushl
push
call
add
mov
pop
jmp
movl
or
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
cmp
jae
mov
and
sar
shl
lea
mov
add
mov
test
je
andl
mov
cmpl
mov
je
test
jne
test
je
mov
cmp
je
decl
mov
mov
lea
movl
movb
lea
push
push
mov
pushl
push
pushl
call
test
jne
call
push
pop
cmp
jne
movl
mov
jmp
cmp
jne
xor
jmp
push
call
pop
jmp
mov
mov
add
lea
mov
test
je
test
je
cmpb
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
movb
inc
mov
jmp
lea
push
push
incl
lea
push
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
inc
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
andl
movl
or
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
mov
push
cmp
jae
mov
and
sar
mov
lea
mov
test
je
mov
mov
and
cmp
jne
and
jmp
cmpl
jne
or
neg
sbb
mov
and
add
pop
ret
movl
jmp
movl
or
pop
ret
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
add
xor
add
add
push
jbe
add
add
xorb
nop
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
ja
add
add
or
add
cld
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
add
push
jns
add
add
jns
add
ja
add
ja
add
add
pop
ja
add
add
xorb
nop
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
js
add
add
sub
add
add
dec
js
add
add
jbe
add
mov
add
js
add
js
add
js
add
jns
add
jns
add
jns
add
jp
add
add
add
add
orb
add
sldt
adcb
add
or
add
or
add
orb
add
pop
add
orb
addb
add
inc
pop
addr16
add
add
add
add
add
add
add
add
lock
add
add
pushl
daa
inc
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
ljmp
push
inc
add
jmp
push
inc
add
jmp
inc
add
inc
add
je
add
ja
add
jo
add
jne
add
ja
add
jo
add
add
xor
add
add
push
jbe
add
add
xorb
nop
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
ja
add
add
or
add
cld
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
add
push
jns
add
add
jns
add
ja
add
ja
add
add
pop
ja
add
add
xorb
nop
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
js
add
add
sub
add
add
dec
js
add
add
jbe
add
mov
add
js
add
js
add
js
add
jns
add
jns
add
jns
add
jp
add
add
add
add
orb
add
sldt
adcb
add
or
add
or
add
orb
add
pop
add
orb
addb
add
inc
add
je
jne
jb
outsb
je
push
add
xchg
add
insb
imul
outsb
fs
add
imul
gs
imul
gs
js
je
outsl
fs
jb
arpl
jae
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
jae
je
jbe
outsb
je
add
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
inc
add
addl
gs
gs
inc
imul
jo
outsb
dec
jne
gs
add
pusha
add
gs
je
dec
jne
gs
add
ret
gs
gs
jae
dec
jne
gs
add
push
jb
imul
imul
insb
jae
jb
insl
jo
add
ret
add
jb
insl
jo
inc
add
push
dec
inc
dec
xor
cs
insb
add
push
push
xor
xor
fs
insb
add
push
add
popa
jo
jb
add
adc
dec
gs
jo
insb
insb
outsl
arpl
jg
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
inc
js
je
jb
arpl
jae
adc
dec
gs
jo
gs
jb
jns
adc
dec
gs
jo
jb
popa
je
add
addl
imul
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
add
inc
popa
fs
jb
je
push
je
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
push
gs
imul
outsl
arpl
jae
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
sbb
push
gs
imul
gs
add
gs
imul
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
testb
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
je
dec
popa
outsb
fs
add
add
je
imul
xlat
add
insb
push
outsb
ja
outsb
add
add
je
je
dec
popa
outsb
fs
add
out
add
jne
push
inc
jne
data16
add
push
add
gs
je
inc
imul
gs
push
dec
outsb
outsw
add
add
je
inc
push
add
xchg
add
je
inc
dec
inc
push
add
mov
push
jb
arpl
fs
jae
add
push
add
fs
imul
add
adc
push
gs
outsb
fs
inc
imul
gs
fs
imul
jne
je
inc
jns
gs
outsl
push
imul
inc
add
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
push
je
imul
push
adc
add
pop
inc
add
add
add
jb
inc
push
scas
cltd
xor
or
cmpsl
idivb
push
cld
or
or
jmp
daa
mov
popa
jb
lahf
lods
adc
ljmp
icebp
inc
mov
mov
loope
jl
clc
imulb
xor
pop
ljmp
es
and
mov
ror
shll
or
add
mov
shrl
push
and
loopne
fistpl
flds
fldenv
es
scas
sbb
or
inc
mov
xchg
ss
or
or
add
movsl
sbb
xor
mov
inc
jge
mov
mov
jno
pop
mov
xchg
imul
jbe
enter
push
bound
inc
cld
inc
mov
pushf
inc
cmpsl
decl
sbb
adc
in
mov
gs
lods
mov
notl
xchg
jmp
popf
mov
cmp
enter
mov
fildl
aas
and
xchg
mov
xchg
insl
sbb
test
xor
mov
sub
mov
ss
jmp
mov
in
stc
cmp
fldenv
icebp
mov
or
test
push
gs
mov
cmc
cld
mov
or
roll
dec
cmp
icebp
rorl
inc
pop
pop
int
mov
jecxz
jnp
xchg
pop
movsb
into
inc
cmp
imul
les
sbb
fsubl
xlat
adc
mov
add
xorb
inc
sbb
mov
sub
sub
cmp
rcl
mov
incl
das
push
in
and
es
xchg
mul
fcomp
inc
sahf
push
xchg
loope
push
incb
cmp
movsb
inc
mov
dec
xchg
jg
scas
mov
mov
pop
cmp
dec
cmp
outsl
out
jnp
push
push
jns
push
in
jp
stos
cmp
xor
out
insb
xchg
xlat
push
sbb
xchg
sub
popa
mov
cwtl
test
mov
mov
arpl
sahf
xlat
icebp
dec
or
inc
jle
mov
or
mov
in
jmp
icebp
sub
test
add
test
rcll
das
lods
test
je
arpl
mov
inc
jnp
ljmp
push
pop
pop
push
mov
mov
stc
inc
or
xchg
pop
stc
add
mov
push
sti
mov
push
mov
mov
scas
outsl
enter
shll
mov
dec
pop
repnz
leave
movsl
stos
mov
repz
lcall
pop
pop
cmpsb
xor
imul
fidivl
xchg
mov
int3
mov
xor
out
jp
insl
fmull
bound
sbb
push
xchg
fbld
shrl
adc
jge
push
push
mov
mov
pusha
xchg
and
mov
pushf
and
sbb
fcmove
repnz
lea
jne
ljmp
loope
jl
pushf
daa
sub
xchg
addr16
loope
xchg
and
icebp
or
lcall
push
mov
sbb
mov
pop
jne
push
pop
cld
push
sub
stos
pop
aam
outsl
inc
jo
jo
fbstp
movhps
sbb
xlat
and
sub
shll
fistpl
mov
adc
test
jns
jmp
and
add
pop
cmpsl
addr16
lods
and
sub
pop
icebp
test
cmc
push
mov
mov
cmp
push
fdivs
add
test
jbe
aas
push
dec
adc
insl
cmp
stos
jp
hlt
jmp
lea
mov
test
lcall
jbe
int
lahf
je
cltd
test
dec
and
xchg
inc
fwait
lahf
jno
jae
dec
pop
lcall
aad
and
jbe
shrl
dec
mov
insl
mov
pop
mov
fisubl
mov
test
lahf
sbb
dec
arpl
idivl
sub
sbb
in
jge
pop
cld
and
js
pop
lods
xor
stc
push
imul
jge
or
cs
cltd
push
and
imul
ja
inc
insl
insl
cmp
jmp
cmp
pop
xor
add
repz
or
rorl
lret
fdivr
insl
adc
jno
sbb
cmpsl
push
insl
adc
and
mov
or
xor
add
mov
scas
pop
clc
les
dec
xchg
ss
inc
mov
dec
insl
addr16
push
xor
rorb
cmp
notb
jp
xor
adc
add
div
cmpsl
mov
jno
iret
loope
dec
fisttps
sub
adc
inc
adc
cmp
mov
icebp
mov
das
mov
lahf
mov
out
scas
and
ljmp
es
mov
jge
mov
fldcw
pushf
int3
and
inc
jbe
pop
jmp
cmpsl
inc
jecxz
je
arpl
dec
adc
popa
mov
or
jnp
push
das
aas
in
sahf
es
xchg
jp
xchg
loope
mov
lds
mov
dec
xor
pusha
jle
fs
lods
loope
inc
shr
subb
jnp
pop
xchg
cltd
daa
pop
mov
icebp
sub
icebp
mov
pop
jo
inc
mov
roll
xlat
inc
xchg
or
xchg
in
adcb
popa
data16
bnd
add
incl
jp
pop
adc
sbb
scas
mov
add
pop
fs
decl
lock
leave
int3
imulb
loope
adc
aaa
jb
xchg
loopne
push
fwait
add
or
mov
adc
int3
jns
ds
enter
cld
push
leave
jb
push
xorb
inc
in
jl
add
sbb
jno
fwait
mov
and
fwait
cmpsl
cmp
xor
insb
inc
sahf
push
pop
cld
jp
mov
push
sub
mov
scas
sti
dec
popf
lret
iret
mov
mov
add
sbb
lods
jo
in
fbstp
ds
std
cld
mov
decl
ds
inc
xchg
ja
loope
mov
dec
pop
cmp
jns
jp
jmp
imul
mov
adc
pop
movsb
call
js
je
dec
jmp
test
cmp
cmp
push
sbb
std
test
or
jb,pn
rolb
mov
stc
or
jmp
xor
ror
cmp
aaa
sub
pop
mov
test
mov
add
fwait
movsb
int3
sbb
pop
mov
rcl
lock
push
dec
xor
lcall
adc
sub
rcrl
je
lcall
rcrb
cmpsb
jne
adcb
xor
cmp
int3
lods
dec
xchg
dec
jmp
iret
lea
aam
pop
imul
inc
sarl
stos
bound
scas
add
lahf
adc
daa
inc
andl
push
divb
jp
xor
push
mov
and
push
aaa
xchg
popa
push
ss
mov
xor
mov
pop
and
dec
cld
jo
adc
aad
cmpsl
std
sbb
sbb
ja
gs
movsb
mov
pop
and
cmp
push
sub
jmp
loop
xchg
inc
into
sub
push
push
aas
out
push
in
cmp
bound
fwait
nop
add
or
in
mov
mov
loope
insb
jl
lock
xchg
mov
rol
int
fcos
sbb
jae
dec
inc
aad
dec
jns,pt
adc
pop
test
imul
lock
push
add
mov
push
sbb
icebp
push
pop
push
in
je
add
sub
arpl
adc
push
jmp
popf
ror
jmp
xor
sub
jmp
fwait
inc
inc
les
test
outsl
sbb
add
mov
xor
mov
cmpl
and
push
mov
lret
jg
and
das
loop
mov
test
dec
xchg
aas
ss
or
mov
mov
jg
lock
inc
push
push
in
stc
negb
ja
xchg
movsb
xor
push
add
out
mov
and
out
in
stc
es
ljmp
popa
pop
orl
sbb
sbb
xor
cmpsb
mov
out
mov
pop
fwait
mov
icebp
jle
lods
in
xchg
mov
sub
aam
ret
popa
inc
adc
mov
mov
push
fmull
call
mov
ja
jmp
scas
inc
lds
ffreep
jb
adc
add
pop
sub
int3
cld
js
in
jmp
push
ret
sbb
leave
data16
mov
xchg
ss
cmp
shl
cmp
mov
pop
dec
or
lods
inc
in
jno
test
stos
push
movsl
sbb
jp
sbb
inc
std
repnz
cmp
mov
imul
fistpll
mov
sub
cmp
insb
sbb
jb
ljmp
cmp
push
fistpl
outsb
lret
cmpsb
movsl
fsubl
mov
hlt
bound
inc
pusha
adc
cmp
add
cmc
mov
imul
xchg
cmc
test
outsb
mov
icebp
adc
das
aad
mov
push
or
or
sub
icebp
push
xchg
out
adc
mov
ja
and
lahf
sub
pop
jg
cmpsl
js
mov
insb
or
push
mov
dec
and
dec
lds
repz
mov
dec
lods
mov
lock
push
cltd
mov
ds
cmp
jno
popa
mov
imul
inc
mov
cmp
jno
dec
test
pop
dec
es
mov
mov
jp
dec
sub
test
test
sahf
pop
cmp
dec
popf
daa
dec
push
jecxz
push
les
jno
lret
sbbb
xor
adc
call
loopne
xor
in
push
lods
adc
fstpt
fsubs
and
jnp
add
cli
lock
adc
xchg
xchg
pushf
mov
test
fistl
stos
ja
gs
fdivrs
inc
and
mov
dec
fwait
jns
es
out
xchg
testb
mov
fwait
addl
loope
push
mov
push
fidivrl
jg
jo
push
cs
scas
push
add
lret
cmp
cmc
mov
pop
xchg
cmp
mov
jb
sbb
push
insl
mov
aas
es
hlt
mov
and
xor
into
shl
data16
cmp
in
jge
test
addl
or
or
aas
mov
adc
call
sbb
add
mov
inc
push
addb
push
cmpsl
jbe
rorb
or
jnp
imul
lea
imulb
push
xor
xor
in
cwtl
push
push
daa
jo
mov
mov
pushf
inc
loop
lds
adc
outsl
in
pop
jno
dec
xchg
rolb
jns
and
ret
inc
xor
mov
mov
mov
cld
xor
movsl
jno
cmp
cmp
leave
mov
xchg
pop
gs
sahf
cmp
cs
test
and
stos
pop
leave
lcall
jp
insl
mov
adc
xor
jp
mov
in
cld
ljmp
xor
sub
add
lock
sub
movsb
adc
out
sarl
pushf
sbb
stc
jl
test
in
int3
mov
outsl
movsl
xor
mov
jge
mov
and
xor
inc
orl
mulb
mov
fwait
and
push
fldenv
adc
test
nop
scas
ficomps
movsb
scas
test
or
jno
cmpsl
dec
iret
jmp
cmc
in
imull
mov
jmp
decl
in
sub
cld
imull
insl
jne
mov
sbbl
and
jecxz
ret
std
adc
push
mov
pop
inc
push
add
lods
sarl
in
sub
dec
jle
andl
repz
loope
into
cmpl
sub
test
sub
test
fmull
out
mov
call
mov
push
out
mov
jecxz
mov
inc
mov
in
push
divb
gs
mov
stos
popa
js
sbb
aam
jle,pn
xor
lret
decl
insl
movsb
addr16
daa
leave
push
cltd
and
enter
xor
inc
sbb
push
inc
loope
pusha
dec
lock
adcb
cmp
out
fsub
loop
in
repnz
cmp
insb
into
add
cmp
enter
jl
push
lcall
dec
je
dec
sti
mov
mulb
or
pop
test
nop
xor
test
jne
into
push
movsl
adc
mov
jp
ss
xor
lret
daa
test
mov
fildl
divb
xchg
daa
incl
stc
sbb
mov
loopne
mov
push
cltd
ss
cmp
scas
std
lock
je
inc
lahf
dec
rcrl
push
movsb
sbb
dec
or
jb
push
repz
jno
xor
imul
cld
adc
adc
lock
clc
jle
movsb
cli
pop
sub
enter
push
and
clc
mov
lods
sahf
and
pop
fnstsw
std
pushf
cmp
add
dec
adc
aas
fidivs
stos
xor
inc
sti
fs
rolb
jnp
jb
xchg
push
hlt
out
repnz
repnz
test
pop
cmp
call
inc
leave
xlat
stc
outsl
into
shrb
cmp
icebp
push
push
sbb
scas
repz
insb
mov
cli
stos
sbb
xor
pop
cmpsl
dec
inc
std
push
pop
gs
pop
rorb
fisubrl
mov
xchg
sbb
or
andl
mov
cli
cmp
inc
dec
pop
call
push
stos
mov
test
lret
xor
and
xchg
insl
xor
or
and
jg
sti
push
and
push
mov
loope
inc
mov
test
scas
mov
xchg
js
fwait
dec
mov
repnz
sub
lcall
cmp
pop
push
lock
out
pushl
xor
das
leave
xor
dec
andb
jnp
mov
and
test
push
lods
xor
cmpsl
cwtl
or
jo
pop
fisttpll
fsts
or
int3
cltd
cld
xchg
adc
cmpsb
in
mov
stc
push
push
inc
push
sub
in
mov
jo
or
outsl
mov
shrl
out
test
lock
adc
lds
mov
push
mov
daa
adc
xchg
mov
push
xchg
test
or
lods
cmp
adc
jne
lcall
sarl
sbb
ss
jnp
xchg
jecxz
jno
dec
xchg
jbe
insl
shrl
mov
xor
cmp
adc
xchg
pop
jl
mov
in
stc
in
iret
mov
icebp
lods
scas
insb
pop
xchg
pop
fwait
push
and
jb
xchg
dec
scas
imul
xor
pusha
adc
popa
jle
xor
leave
cmp
rol
sti
imul
aaa
clc
cmp
adc
int3
rep
pop
sub
in
mov
cvtpi2ps
test
push
lret
jg
cmp
imul
cmp
pushf
jns
fsubr
sub
aas
adc
call
jp
loope
arpl
pusha
cmp
mov
push
sarb
jo
xlat
bound
out
jecxz
inc
movsb
mov
mov
cwtl
mov
push
popa
inc
imul
mov
xchg
cmp
movsl
hlt
jbe
jnp
fildl
ret
add
lea
jbe
jbe
cmp
dec
xchg
sarb
sub
fidivrl
push
add
outsl
dec
adc
shll
ja
add
mov
es
leave
and
in
jp
lock
and
xchg
lock
pusha
pop
enter
sub
insb
pushf
dec
mov
ljmp
subb
gs
push
push
pop
scas
jnp
mov
cld
lea
pop
jmp
lea
sub
mov
xor
inc
aam
data16
mov
sub
jg
push
push
fistpl
cmp
mov
imul
clc
and
and
xchg
roll
adc
std
loopne
cmp
shlb
sbb
adc
and
rcrb
push
ds
jbe
ror
mov
xchg
sbb
inc
es
sub
push
adc
outsb
pop
lods
sub
or
test
jmp
ror
cmp
incl
dec
das
lret
imul
push
ret
cld
sub
mov
mov
mov
testl
inc
mov
hlt
movsb
lods
or
lret
inc
loop
pusha
je
pop
xchg
aam
negb
pop
stc
add
push
rorl
cs
popa
mov
ljmp
lea
xchg
xchg
sub
jno
sti
mov
mov
orl
cmpsl
repnz
js
cmpsb
mov
addb
pusha
out
js
and
inc
in
loopne
rcl
xchg
call
imul
decl
adc
mov
repz
dec
cmpsl
and
hlt
jns
sbb
mov
mov
and
outsl
mov
lods
add
push
jge
xchg
test
pop
add
add
scas
lods
or
cmp
dec
pop
jae
mov
jmp
sbb
jl
jns
inc
sbb
ljmp
gs
add
sbb
cmp
fwait
push
sub
xchg
mov
lods
cltd
call
xor
icebp
mov
loop
mov
add
in
int
xchg
inc
test
inc
movsl
ljmp
ljmp
dec
add
inc
cli
mov
jp
ret
mov
mov
xlat
out
inc
mov
data16
xorl
lods
out
cmp
mov
mov
xor
mov
pop
push
xor
fsubrl
ret
jb
adc
mov
pop
out
mov
mov
cmp
adc
cmp
stos
loope
jmp
cmp
enter
loopne
scas
ficompl
fistpll
xor
loopne
mov
fs
inc
stos
lcall
jp
js
push
shr
fwait
les
cltd
insb
fildll
std
bound
sbb
out
aam
xchg
sbb
lcall
jmp
mov
lds
dec
pinsrw
mov
imul
pop
jecxz
test
cmp
push
mov
jle
mov
fisubs
xchg
cmp
push
cmc
xor
mov
pop
lods
rclb
cmpsl
sbb
ljmp
sbb
mov
andb
call
mov
into
sub
insl
ds
out
aas
or
nop
mov
mov
gs
into
inc
ficompl
fbstp
pop
or
das
jp
xor
mov
add
ficompl
cld
sbb
ret
jg
mov
js
enter
adc
sbb
das
jl
cmpsl
jne
adc
inc
push
insl
adc
and
dec
add
lds
cmpsb
out
pop
cmpsl
adc
jg
xor
imul
add
adc
addr16
push
lds
cmpb
inc
lods
xor
fmuls
push
push
xchg
pop
sub
fmull
add
in
andl
aam
fdiv
push
shrb
scas
xchg
adcb
ljmp
ljmp
add
aad
dec
rcrl
iret
dec
ljmp
jmp
arpl
mov
lds
insb
ja
pusha
outsl
and
lea
orl
enter
std
xchg
out
dec
push
mov
imul
inc
or
lea
jne
push
jle
jnp
scas
int
cmp
shll
js
lds
xlat
data16
movsl
sbb
sbb
incb
test
lcall
jp
lock
loopne
mov
mov
push
xor
push
sbb
fsubl
mov
imul
divl
adc
mov
fsubp
mov
mov
test
pop
inc
mov
incl
cmp
or
cmp
push
xchg
mov
xorl
push
test
stc
out
inc
jmp
jg
gs
cmp
xchg
mov
clc
imul
mov
adc
jae
sbb
jb
lock
inc
sbb
scas
or
mov
inc
mov
or
lret
adc
jecxz
mov
rol
dec
xchg
push
sbb
leave
mov
subb
xchg
fs
jo
mov
addl
push
inc
pop
fdiv
das
xor
sti
inc
push
test
pop
mov
pop
sub
push
sub
sbb
mov
inc
stc
push
xor
shrl
popf
push
dec
mov
fs
mov
mov
mulb
dec
hlt
mov
adc
cli
pop
jecxz
jle
repnz
inc
scas
cmpsl
es
sbb
sbbb
dec
insb
sbb
outsb
xchg
hlt
xchg
imul
stc
rorb
pop
mov
add
std
cmc
inc
das
dec
inc
and
test
mov
movsl
mov
js
push
pusha
add
adc
dec
data16
jo
sub
cld
jl
dec
adc
xor
lret
out
adcb
xchg
cltd
jp
outsb
mov
fcompl
call
call
mov
imul
or
call
cli
cmpsb
pushf
and
mov
xchg
div
adc
mov
movsl
pop
jb
jne
lock
sub
out
sbb
out
ss
mov
lret
cli
data16
icebp
shl
cmc
dec
cmp
lcall
inc
in
dec
test
push
scas
ret
add
add
inc
xchg
adc
cmp
out
mov
inc
fwait
iret
lock
scas
pusha
xchg
sub
outsl
xor
xor
movsl
insb
and
andb
mov
mov
sbb
mov
pushl
or
cwtl
or
cs
xchg
lods
daa
jg
push
inc
mov
push
aaa
subl
mov
dec
jp
push
out
cmp
push
dec
push
in
jns
sbb
loop
push
xor
jbe
icebp
cs
lock
imul
jns
xor
or
push
mov
insl
data16
adc
mov
xchg
scas
scas
lahf
movsb
jne
in
pop
in
pop
popa
and
nop
jo
outsl
les
push
add
popw
sub
int
js
or
mov
insl
leave
movsb
call
leave
pop
mov
imul
js
stos
or
in
push
addl
mov
mov
leave
popf
dec
push
int3
scas
mov
xchg
stc
adc
and
test
enter
xchg
hlt
mov
dec
ret
lea
filds
and
inc
xchg
stos
dec
inc
pop
ret
mov
lcall
fcompl
pop
sub
cmp
xor
xor
or
inc
das
lea
sti
xchg
loop
mov
jmp
call
mov
add
inc
fs
mov
scas
out
ret
mov
cltd
cmp
lea
mov
and
mov
in
sbb
mov
xchg
inc
fisubrs
push
and
mov
mov
fisubrs
ljmp
dec
add
cmpsb
push
outsb
test
mov
loop
fs
aas
in
int
fwait
aas
sub
inc
jmp
xchg
mov
test
ret
xor
scas
cmp
sti
xor
ja
mov
and
call
sahf
xor
popf
push
sbb
sbb
fstpt
hlt
in
ret
hlt
mov
incb
sbb
xchg
or
pusha
andl
xchg
shll
xchg
ss
cmpsb
loope
mov
shrb
jno
mov
mov
out
pop
pop
xchg
and
into
jnp
jae
mov
mov
insb
popf
push
imul
xor
push
out
fcompl
lahf
inc
cmp
mov
xorb
xchg
xchg
push
mov
enter
xor
sub
pushw
in
mov
mov
xor
es
pop
faddl
mov
jmp
in
adcl
mov
pop
xchg
aas
mov
dec
jl
dec
movsl
out
js
and
scas
frstor
mov
aas
fmuls
cmp
ret
insb
test
cmp
lahf
mov
push
sub
mov
and
rorl
add
push
mov
sbb
and
int3
nop
xchg
movsb
add
jp
iret
mov
test
xchg
fcom
mov
add
xchg
lods
inc
mov
outsl
sbb
jns,pn
sub
stos
and
mov
inc
arpl
mov
lds
lods
cmp
adc
adc
lcall
sub
xchg
and
add
xor
inc
stos
out
loop
rcrb
inc
mov
rcl
stos
int3
movsl
arpl
ss
pop
push
xchg
in
in
aam
inc
dec
inc
insb
push
shll
stos
out
dec
test
jo
sarl
and
in
lcall
push
mov
lods
cltd
cmp
push
dec
push
call
outsb
call
movsl
out
es
fcmovnb
fstps
jo
mov
ret
or
inc
and
shrb
mov
test
xor
stos
inc
fndisi(8087
pop
aaa
xchg
push
cmc
pop
jmp
dec
fcomi
pop
out
pop
lods
daa
dec
mov
int
enter
xchg
push
imul
mov
or
sub
out
gs
xchg
stos
pop
and
pushf
cwtl
ja
push
andl
ja
or
push
add
adc
inc
add
sub
enter
aad
xorl
sbb
dec
filds
fdivp
mov
adc
adc
mov
sbb
lret
sarb
int
xor
dec
sub
cld
sbb
mov
ficoml
cs
mov
addr16
rcll
call
lock
dec
jle
js
adc
jae
test
push
and
addr16
rcrb
imul
mov
sbb
pop
and
mov
je
or
push
fwait
jmp
rol
or
test
pop
das
pop
cmp
pushf
pop
and
lock
sbb
incl
in
cmpsb
imulb
cli
pop
ds
test
pop
sbb
aam
mov
pop
fbstp
loope
jle
and
mov
cmp
xor
mov
or
popa
cld
cmpl
inc
out
jne
testb
aam
adc
sub
fiadds
data16
mov
sbbl
mov
roll
sbbb
push
or
scas
xchg
adc
jge
xchg
subl
xchg
jmp
jbe
jno
fsqrt
or
mov
push
jmp
ss
sub
arpl
test
sub
xchg
scas
pop
jp
and
pop
adc
fildl
xchg
xchg
cmp
jp
or
xchg
int3
adcl
sub
xchg
inc
sbb
js
and
cmp
xchg
pop
push
dec
fldcw
nop
mov
imul
test
iret
dec
add
jecxz
test
jbe
test
jb
in
xchg
ds
int3
inc
pop
fldt
lods
lret
mov
inc
hlt
into
mov
lar
ret
in
jg
enter
jecxz
mov
outsb
sbb
cmp
xchg
lcall
enter
daa
lret
cmp
inc
std
mov
jle
aaa
popa
sbb
sub
hlt
loope
hlt
xor
mov
push
clc
mov
xchg
dec
push
fdivrl
mov
dec
cmpsl
jo
mov
inc
aaa
pop
imul
xchg
mov
jbe
adc
ret
xchg
and
sub
xor
pop
outsl
aas
lret
mov
adc
cltd
shll
push
sahf
dec
inc
mov
push
shll
icebp
gs
mov
mov
cmc
push
mov
sbb
push
xchg
cmp
cs
pop
jmp
adc
je
cmp
clc
outsl
mov
das
lds
mov
and
add
testl
add
test
loop
sub
lods
add
daa
cwtl
push
out
adc
fbstp
pop
sbb
icebp
scas
dec
cmp
sub
pop
mov
insb
gs
xchg
jge
mov
gs
sub
lea
shll
dec
out
cs
leave
and
sbb
pop
stos
cmpb
imul
xlat
push
repnz
push
cmp
mov
push
xor
icebp
dec
movsb
shlb
adc
out
je
sub
jnp
adc
int
es
in
sti
and
jnp
lods
sub
je
jecxz
out
xlat
pop
inc
lret
int3
jg
push
mov
sbb
pop
mov
sub
imul
jmp
scas
test
inc
icebp
push
and
xchg
or
xor
jns
jle
inc
iret
ja
push
mov
xchg
add
mov
mov
xor
mov
inc
out
push
jb
psrlq
lods
cmp
fisttpll
xchg
xlat
roll
lock
pop
push
lcall
ss
sub
mov
pop
mov
mov
frstor
sub
scas
cs
aas
xchg
std
icebp
scas
shll
test
mov
inc
outsb
in
int
les
ds
pusha
fmull
ret
dec
mov
arpl
and
inc
scas
xchg
ret
push
cmp
and
out
mov
mov
jne
sbb
inc
inc
inc
rorb
fs
mov
push
sbb
inc
sbb
data16
stc
test
pushf
test
adc
lea
sbb
ret
xor
xchg
and
lock
push
mov
mov
jno
sbb
iret
cld
xchg
jmp
lahf
aam
sbb
sbb
stc
repz
push
ds
and
loope
insl
xchg
push
and
test
mov
mov
inc
pop
mov
sub
jo
mov
dec
jb
sbb
js
jp
aaa
dec
loopne
push
dec
ljmp
cmpsb
mov
push
sbb
push
pusha
les
sub
dec
push
jae
cli
jnp
imul
sub
sub
jge
ds
loop
inc
cmp
lock
add
test
xor
pop
push
cmp
jae
cmpsl
pop
shrb
out
xchg
orb
pushl
and
outsb
pop
mov
add
inc
cli
lahf
dec
in
pop
mov
jae
cmp
daa
pop
mov
push
aam
dec
arpl
inc
adc
pusha
adc
jge
jno
inc
jo
in
movsl
popf
mov
sub
es
je
test
call
sub
jbe
xchg
add
stos
mov
sub
push
push
ljmp
mov
fidivrs
ficomps
and
mov
xchg
pop
mov
add
in
movsl
xor
mov
popfw
loopne
clc
orb
and
inc
and
in
idivl
clc
lock
sub
mov
jmp
repnz
cld
jmp
lret
pusha
out
fisttpl
lea
xchg
and
sbbb
enter
xchg
mov
push
testb
push
xor
inc
add
jno
movsb
jl
pop
add
mov
ds
mov
movsl
cs
sub
out
mov
dec
xor
jns
das
pop
sub
dec
mov
iret
pushf
repz
aad
mov
shl
xor
add
ljmp
test
jo
push
jno
movsb
lret
roll
jmp
aaa
in
add
push
xor
cmpsl
jae
lahf
mov
insb
icebp
or
pop
mov
fldl
jl
jecxz
jge
mov
pop
jle
adc
xor
mov
mov
int3
dec
xchg
fsubrs
idivb
cmp
or
jns
scas
jno
inc
push
cmp
jg
cmpsb
insl
movsl
pop
or
pusha
mov
mov
into
push
pop
pop
negl
mov
pusha
aas
cmp
lcall
cmp
fs
jb
mov
fisttpll
loope
push
dec
lahf
add
pusha
hlt
sub
sub
cmp
decl
push
lods
sbb
adc
jne
lds
mov
cmp
repz
mov
andb
sub
sub
jns
shll
ret
add
ja
das
or
loope
test
scas
push
std
xorl
add
xor
rorb
mov
pop
cmp
xlat
pop
adc
pop
add
insl
pop
arpl
dec
adc
mov
das
push
cmp
xchg
lcall
out
outsl
sbb
pop
mov
sub
lret
test
add
lock
sbb
jb
mov
jge
in
and
pop
scas
pusha
lahf
insb
lcall
adc
insl
mov
xchg
sti
out
mov
inc
cmp
fistps
fs
mov
bound
hlt
sub
jbe
sub
es
push
mov
fisttpll
jns
dec
xchg
call
sub
aas
cwtl
pop
gs
pop
adc
mov
and
in
ret
lcall
aad
jno
icebp
sbb
sarl
ss
in
ret
jmp
out
adc
mov
xchg
jae
add
jbe
stos
int3
sub
fcompl
cmp
push
std
cmc
shrb
xchg
sub
getsec
cld
in
sar
iret
ljmp
mov
mov
out
loope
xor
sub
out
adc
fcompl
rep
cmpsb
repz
lret
in
dec
or
pop
int
xchg
sarb
int
pop
xor
fistpl
xor
cld
dec
testl
adc
lret
jne
mov
jl
addb
mov
mov
int
out
arpl
cmp
mov
je
rolb
jo
sub
xor
or
xchg
lcall
imul
mov
fwait
mov
pop
add
addr16
mov
xchg
insl
mov
xchg
lods
stos
inc
sar
lds
cmpsl
cs
test
jnp
out
add
xor
out
sub
mov
inc
xor
dec
ret
cld
std
bound
das
leave
cld
smsw
jmp
jb
mov
pop
dec
sub
pop
mov
dec
sbb
or
cmc
pop
mov
inc
mov
add
movsl
mov
fadds
int
sbb
jae
test
test
loop
mov
stc
sbb
sub
jecxz
das
int3
scas
loop
xor
or
call
mov
pop
mov
into
jge
or
loop
mov
sbb
test
dec
jg
jae
pop
jg
out
mov
and
pusha
xor
scas
cmpsb
mov
sbb
rcrl
loop
push
out
test
daa
sbb
and
cld
mov
mov
iret
ret
mov
jl
fwait
test
std
mov
call
sub
push
pop
lods
xchg
lahf
or
pop
push
daa
je
pop
sub
push
or
xchg
pop
data16
ljmp
cmp
movsl
mov
lret
jge
outsb
push
fs
fwait
rcll
cld
cmp
or
call
outsl
mov
inc
in
hlt
lret
mov
sbb
les
mov
add
pushl
in
cmpsl
or
add
mov
cmpsb
cmpb
popf
jnp
and
push
mov
mov
xlat
mov
stos
scas
mov
inc
mov
push
pushf
sti
movsl
out
add
and
mov
inc
fyl2x
stos
add
pop
jg
mov
jno
sbb
mov
inc
outsl
jmp
int3
adc
push
jmp
ret
sahf
xchg
loopne
and
jmp
daa
ret
push
push
ljmp
adc
sub
rcl
andb
mov
pop
and
xchg
rorb
out
dec
jbe
jge
daa
push
leave
xchg
mov
shll
push
ds
cmp
aas
loopne
dec
push
add
div
sub
jnp
lea
sbb
push
data16
mov
cld
lods
imull
sbb
xchg
iret
pop
dec
mov
insl
ds
pop
xchg
fbld
subb
sar
int
inc
pusha
mov
cmp
add
loop
repnz
jnp
mov
pop
add
pop
adc
add
jns
nop
dec
mov
lods
mov
cmpsl
and
pushl
adc
inc
mov
jns
mov
pop
cwtl
push
in
movsb
sysexit
sbb
inc
test
and
mov
mov
cmc
lock
add
daa
push
and
imul
in
sbb
or
jp
pop
xchg
insl
xchg
mov
xchg
adc
aam
ret
xchg
repz
mov
mov
fdivrs
push
fwait
orl
ja
push
daa
in
xlat
inc
mov
or
jle
lret
adc
xchg
ds
jo
sarb
notl
or
test
pushf
cmp
les
nop
sbbl
fiaddl
fwait
lods
ret
gs
cli
xchg
shlb
dec
int
pop
pop
xorb
cmp
lret
xlat
jno
pop
push
cmpb
sti
dec
mov
inc
and
or
lret
xor
add
les
push
je
push
insb
mov
aas
mov
popa
cmp
movsb
and
pop
mov
aas
mov
jp
mov
jg
or
cwtl
push
adc
jle
nop
and
push
sbb
or
stos
inc
sti
dec
test
ret
xor
loopne
shl
inc
es
jle
rcrl
test
outsb
mov
inc
leave
sub
das
xchg
xchg
gs
lcall
fistpll
xor
pop
cmp
mov
dec
sub
sub
jg
sahf
xchg
add
push
lret
ret
mov
inc
inc
arpl
ret
jmp
add
sub
adc
mov
clc
shrl
into
dec
loope
lock
sub
hlt
sbb
push
popf
and
and
scas
dec
fs
mov
mov
push
shl
inc
mov
jns
dec
stos
sub
jnp
lahf
or
dec
xchg
je
inc
push
rorl
push
aaa
mov
repz
sub
mov
ficomps
mov
jmp
mov
sahf
sub
add
lods
push
fmuls
shlb
adc
in
and
lret
jae
jecxz
xchg
sub
sub
xchg
cmp
mov
jp
jne
daa
aas
dec
add
jmp
jbe
jmp
cmp
ja
int
push
mov
pop
jmp
xor
data16
out
fldenv
push
xlat
jg
repnz
sbb
pop
out
mov
movsl
gs
in
rorb
sub
add
add
adc
mov
pop
lods
and
mov
addr16
and
lcall
enter
add
jle,pn
lea
or
mov
shl
dec
out
mov
jl
in
mov
negb
aas
ss
notb
sbb
pop
cmp
mov
push
add
cmp
push
jle
mov
sbb
and
pop
inc
push
repz
sub
xor
jnp
in
sbb
fwait
push
mov
je
adc
jg
sub
xor
bound
ds
out
pushf
xorl
mov
fistpl
icebp
push
in
jle
pop
movb
scas
mov
aad
push
jmp
test
inc
jbe
roll
adc
icebp
dec
sub
push
stos
xor
and
outsl
and
clc
icebp
inc
jle
add
stos
jnp
push
sbb
or
cs
xchg
js
mov
jno
clc
xchg
jnp
loopne
std
xor
test
movsl
cmc
call
mov
xchg
push
icebp
cmp
dec
js
pusha
call
scas
fwait
aas
cltd
dec
lds
icebp
pop
and
movsb
bound
mov
fidivs
popf
rcl
insb
adc
outsb
lcall
lock
movsl
inc
sbb
mov
sub
std
je
addr16
mov
jae
ret
sub
push
adc
jmp
mov
punpckldq
add
cmp
stos
stc
add
ljmp
call
loop
push
xor
push
sub
mov
or
mov
insb
xchg
add
xchg
rol
outsb
pop
out
mov
and
psubb
inc
adc
mov
adc
cmc
inc
icebp
scas
push
jp
mov
pop
gs
ljmp
mov
mov
out
add
xor
repz
fcom
jmp
sub
xchg
and
pushf
test
call
add
jne
in
bound
pop
sub
aaa
iret
adc
pop
xchg
sbbb
mov
inc
jle
stc
pop
iret
ds
push
int
and
cwtl
imul
dec
inc
call
fisubrl
cmp
jmp
out
xor
inc
or
lods
jmp
dec
cmp
icebp
cs
or
sti
mov
jmp
inc
sbb
rcrl
add
sub
scas
es
dec
dec
add
and
and
pushl
dec
inc
daa
fiadds
scas
ss
or
jnp
mov
cmp
sbb
clc
lds
jo
les
add
fwait
jl
call
sbb
test
inc
xor
popf
mov
cmp
jmp
fistl
and
fidivl
stos
cmp
sti
jecxz
push
fstpl
rcll
xchg
mov
sbb
in
popf
xchg
xlat
aam
pop
negb
ret
cmp
es
ljmp
movsb
jle
add
ss
cmc
push
adc
shrb
stos
mov
testb
pusha
lock
test
call
lds
mov
imul
call
sbb
dec
ljmp
xor
cwtl
ja
jmp
mov
clc
in
iret
push
iret
ds
jo
inc
je
loope
data16
add
cli
int3
and
pop
add
inc
jnp
mov
gs
sub
aad
test
inc
inc
outsl
mov
mov
in
inc
jne
and
or
ror
lahf
cld
xchg
iret
push
pop
and
fdivrs
sahf
jo
mov
and
or
test
jg
and
lahf
int
adc
sarl
mov
or
inc
mull
sbb
mov
pop
popa
scas
adcl
imul
cmp
adc
cmp
fisubs
popl
jge
cmp
inc
iret
popf
push
ds
movsb
push
xorb
lret
cmp
enter
pop
js
adc
mov
mov
sbbb
sbb
hlt
mov
aam
mov
jmp
outsl
or
add
add
and
xor
ja,pt
rorb
fbstp
stos
dec
cmp
mov
push
stc
cmpsl
hlt
or
imul
jo
les
mov
pop
lahf
les
xchg
cld
rorb
fstl
loope
xchg
int
jg
pop
in
lret
fsubl
jecxz
insb
mov
hlt
mov
sub
jns
push
sub
mov
or
mull
xlat
in
mov
mov
repz
mov
gs
test
jo
add
pop
jmp
stos
jmp
repz
loope
adc
das
jae
xor
cmp
or
popf
pop
hlt
mov
pusha
dec
test
inc
jbe
or
jge
les
sbb
daa
sbb
add
and
je
in
lds
sub
fs
dec
pop
mov
and
jl
icebp
test
das
dec
sbb
sbb
int3
lds
mov
or
out
xchg
pop
sbb
mov
cs
push
clc
pop
pop
pop
ret
add
sti
cmp
roll
sub
negl
test
cld
push
inc
test
cmpsb
or
jnp
int3
in
fsubs
and
imul
xchg
jno
push
add
adc
test
inc
loopne
aam
je
dec
or
test
dec
shl
jecxz
cli
je
jnp
and
loopne
jecxz
das
pop
mov
outsl
loop
mov
andl
or
xchg
add
push
mov
out
dec
and
cmp
pushf
dec
into
mov
or
cmp
jb
mov
lds
push
push
dec
mov
not
dec
sti
cmp
not
mov
xchg
mov
jecxz
sahf
mov
mov
sub
pop
jae
sbb
dec
cwtl
add
roll
xchg
mov
test
mov
fdivrs
ret
adc
jmp
insl
ds
fsubl
scas
ret
cmp
mov
int3
xor
addr16
repnz
cs
add
sbb
mov
out
mov
push
xchg
pop
notb
push
jno
mov
push
jmp
ja
das
aam
mov
movsb
jne
fstpt
les
out
adc
ficoml
js
adc
js
xlat
xor
jmp
mov
lret
call
ja
or
xchg
addr16
sub
jbe
sub
xlat
adc
mov
leave
jmp
add
adc
add
testl
ja
loope
call
stc
pop
pop
inc
and
aad
pop
bound
jne
orl
add
pop
test
xchg
jl
xlat
dec
sub
loop
jge
ret
inc
lret
js
lock
push
xchg
pushl
add
dec
and
jl
out
out
lret
fstpt
lock
inc
arpl
sbb
je
imul
push
jbe
xor
jnp
js
lahf
sub
mov
jne
pop
mov
jecxz
mov
das
push
data16
mov
das
dec
clc
add
or
jo
mov
call
imul
je
and
sub
outsl
test
mov
das
mov
pusha
jne
push
adc
cmp
mov
incl
pop
mov
xchg
es
push
dec
lret
popa
out
into
ss
cmp
mov
movsb
mov
cli
adc
jle
scas
test
outsl
out
inc
sub
cmpb
jb
test
pop
iret
addr16
fcmovbe
loop
mov
out
mov
and
mov
sbb
jg
and
out
sbb
jmp
rorb
or
xchg
in
push
jg
js
pop
sti
push
push
andb
int
shrb
in
stos
rclb
inc
dec
jb
loope
jae
adc
cli
add
out
and
or
mov
xor
inc
and
inc
cmp
mulb
mov
adc
xor
ljmp
or
jnp
mov
sub
scas
test
push
out
loope
fs
movsb
repnz
notl
in
push
push
addr16
ja
sti
insb
dec
push
dec
sbb
push
adc
jno
pop
aaa
or
js
in
and
dec
lods
mov
mov
aas
stos
inc
dec
ret
rcrb
loop
and
outsb
and
shl
fildl
mov
insb
add
pop
cli
push
popa
mov
pop
insl
ficoml
int3
in
inc
subl
out
xchg
fsubrs
sbb
pusha
call
push
ret
lcall
mov
repnz
scas
imul
sub
mov
test
mov
mov
std
push
roll
mov
pop
mov
enter
push
out
out
in
mov
adc
js
imul
outsb
or
repz
push
loope
loop
inc
inc
xor
inc
xchg
lret
add
push
rclb
imul
mov
adc
push
push
addr16
cltd
arpl
mov
cld
in
xchg
sbb
mov
dec
lcall
lods
mov
and
sbbb
out
dec
jne
push
jbe
loope
fwait
mov
jecxz
push
sub
lock
rcrb
and
cmp
fisubrl
movsb
sbb
es
mov
outsl
inc
jo
test
aad
je
dec
rclb
inc
mov
in
out
test
ljmp
shlb
mov
loopne
and
frstor
inc
lahf
xchg
insb
mov
cld
fstpl
cmp
xchg
sahf
pushf
sbb
sbb
sub
jns
sbb
pop
and
pop
ljmp
or
lahf
sub
jecxz
jecxz
xchg
or
pusha
ss
inc
sbb
cld
dec
push
fldcw
call
sbb
sub
pop
inc
inc
movsl
xor
add
add
loopne
push
lods
arpl
stc
lret
mov
mov
pop
inc
sti
xchg
fists
jl
into
movsb
jp
lds
shlb
xor
jo
filds
mov
lret
add
in
and
jecxz
adc
fs
sbb
in
das
mov
repnz
cmpl
pop
ja
and
and
xchg
mov
mov
out
testb
out
cmp
inc
ds
mov
incl
pop
pop
inc
inc
les
cmp
call
outsb
cmp
jae
xchg
adc
mov
ljmp
aad
test
pop
xchg
mov
negb
mov
les
jae
or
jo
dec
xorb
sti
ss
xchg
mov
xchg
jbe
popf
ret
imulb
aam
pop
ficomps
lcall
insl
sub
lret
insl
movsl
dec
dec
jp
aam
sub
mov
in
fcmovnb
fisubs
and
pop
jl
jo
fcmovbe
mov
xor
cmc
xor
jmp
push
fs
in
sbb
mov
or
cmp
jg
adcb
xchg
fwait
ljmp
pop
les
inc
add
adc
cmp
adc
add
jle
jmp
jb
or
dec
nop
or
cmpsl
int3
xchg
mov
lods
jno
mov
pop
imul
xchg
mulb
inc
int
sar
out
push
sub
inc
mov
and
loope
add
sbb
sarb
xchg
fistl
test
cmp
shl
pop
cs
inc
mov
ficompl
lcall
add
push
outsl
mov
adc
fs
or
jecxz
push
inc
mov
call
mov
add
xchg
sub
dec
enter
fldl
icebp
sar
mov
pop
and
sub
pop
push
jbe
mov
inc
mov
stc
add
jg
adc
sub
mov
dec
arpl
pop
xchg
lods
pop
xchg
lret
aad
mov
mov
orb
lods
fwait
lcall
xchg
sbb
and
pop
inc
mov
jne
cmp
mov
lcall
adc
es
aaa
mov
and
mov
leave
pop
repz
cmp
es
jmp
lahf
loop
arpl
les
stos
xchg
xchg
push
int3
pop
iret
xchg
ret
cmp
pushf
sub
std
repnz
xor
pop
jae
sbb
gs
hlt
stc
mov
test
mov
and
arpl
pop
jl
rol
jns
jns
sbb
push
jns
add
mov
jmpw
add
mov
into
push
rclb
jle
mov
in
jnp
mov
adc
int
ret
mov
sbb
andb
and
pop
loopne
hlt
je
loope
sub
add
sarl
push
xchg
xchg
pop
sub
xchg
add
pop
lret
mov
mov
sub
xchg
es
cs
fistl
xchg
jge
sub
sub
cmp
jge
insl
cmp
outsl
test
into
xchg
push
or
cli
scas
sub
push
jae
pop
outsb
fs
push
xor
out
fwait
lock
addr16
lock
inc
sbb
mov
movsl
lea
and
insb
xchg
cld
std
lret
mov
jo
mov
jp
inc
in
test
in
and
ficoms
inc
outsl
and
stc
outsl
mov
push
fdivs
mov
add
stc
test
fld
push
call
cmp
or
jno
stos
clc
aas
decl
cld
cltd
or
cmpsb
mov
adc
rcrl
adc
movsb
cmp
dec
test
jnp
sbb
lret
sbb
push
pushf
sbbl
mov
lret
lock
jae
push
test
add
scas
and
adc
jecxz
repz
sub
pop
push
mov
xchg
mov
js
rcll
fiaddl
cwtl
mov
dec
xchg
repnz
les
stos
insb
mov
add
fidivl
push
in
test
mov
aam
fidivs
adc
jno
sahf
dec
cmp
xor
insl
jo
sbb
jecxz
and
sub
push
and
dec
fs
lahf
xor
loope
stos
mov
ds
lret
mov
jecxz
push
push
imul
js
xor
or
lret
shrb
mov
dec
mov
mov
movb
ljmp
ja
mov
mov
mov
test
add
in
add
or
aam
insb
jns
ja
mov
mov
arpl
xchg
pop
mov
xchg
push
push
lds
je
movsb
jae
xchg
mov
lds
loopne
gs
or
xchg
imul
in
and
xchg
lret
pushf
iret
bound
push
aas
cmp
pop
sub
jp
divl
push
cmp
stos
mov
xchg
or
mov
xor
out
jmp
int
js
les
frstor
or
sbb
sti
sub
popf
cli
jae
add
mov
insl
pop
cs
xlat
xchg
es
out
add
in
sub
pcmpeqb
mov
out
mull
lods
subl
xchg
fwait
mov
sub
pop
mov
adc
pop
xchg
pop
inc
mull
jp
fstpt
je
iret
dec
out
or
sbb
add
mov
mov
mov
ljmp
mov
cmp
sbb
cwtl
xorb
dec
fbstp
adc
in
sbb
int3
repnz
ja
into
int
repz
scas
jbe
jbe
fdivl
cmp
enter
popf
xor
iret
insl
cmc
lods
jb
fnstenv
test
push
or
negl
mov
stc
add
insl
jg
std
test
xor
inc
mov
out
loop
subb
push
notl
bound
in
or
xchg
pop
repnz
mov
aaa
xchg
push
out
es
xor
sahf
repnz
pusha
xchg
add
push
jae
dec
xor
loop
std
mov
orl
int3
sahf
cld
jg
push
loope
pusha
mov
jle
jne
xor
inc
mov
sub
or
mov
xlat
scas
movsl
or
lahf
or
add
sbb
dec
jge
jb
pop
mov
ljmp
sub
aam
dec
lock
xor
bound
fdivrp
ljmp
pop
mov
push
xlat
lcall
mov
pop
pop
or
push
gs
xchg
jl
push
iret
js
pushf
sbb
sbb
call
and
push
inc
fsubrs
inc
add
push
push
ds
cld
insl
leave
scas
lret
cs
jo
mov
imul
in
mov
adc
movsb
mov
aaa
insb
rclb
cli
lock
mov
das
cmpsl
dec
cmp
pop
dec
movsl
add
jl
fstl
and
and
jp
mov
mov
and
adcb
add
add
movsb
shlb
jne
mov
cmpsl
adc
mov
lcall
lock
cltd
mov
jl
sarl
shll
aaa
cmp
test
push
mov
add
inc
mov
pop
sbb
xchg
call
out
jl
mov
dec
inc
fmuls
int
in
orb
subl
in
jmp
adc
add
pop
xorb
inc
lahf
mov
jmp
cltd
add
in
adc
rcll
push
push
arpl
mov
lcall
aad
stc
into
out
pop
jbe
dec
xor
inc
jo
pop
inc
mov
dec
cmp
mov
push
test
outsb
fildll
sub
out
movsl
ja
cmpsl
ds
imul
loopne
cmp
popf
push
pop
subb
int
fsubrs
adc
lods
dec
dec
cmp
xchg
jbe
sbb
iret
adc
insb
rcr
adc
mov
test
cmpsb
push
movsl
fistpll
mov
cwtl
ror
call
mov
outsl
popa
add
dec
les
or
enter
push
add
lods
aam
iret
mov
or
mov
or
inc
pushw
sbb
lock
aaa
hlt
int
sahf
cmp
and
mov
lods
imul
ds
or
push
sub
in
ret
movsb
and
lret
jle
leave
addr16
or
call
mov
cmp
push
sbb
cmp
daa
and
add
xchg
loopne
sub
push
cmp
and
das
outsl
loop
in
mov
push
js
testb
pop
stos
pusha
stos
into
jnp
out
pop
and
cmp
mov
aaa
mov
jmp
pop
mov
and
lret
stc
xor
add
repz
xchg
jb
xchg
xchg
mov
pop
in
dec
xor
in
in
add
stos
push
repnz
js
daa
xchg
cmp
aas
into
lock
xchg
imul
clc
xchg
sbb
jno
jbe
insb
repz
jbe
pushf
xchg
loopne
out
xor
test
jmp
cmp
shll
mov
mov
cmp
adc
sbb
sbb
lret
sbb
test
or
ret
mov
or
icebp
xor
call
lret
insb
imul
fdivrl
int3
inc
movsl
jmp
jg
mov
push
sbb
sub
push
inc
mov
je
dec
es
pop
mov
jl
push
testb
popf
std
test
sahf
pop
jp
push
xor
cmp
adc
xlat
cmpsb
testl
es
inc
xchg
mov
fisttpll
jecxz
or
imul
pop
fnstsw
cmp
lea
sub
scas
add
cmp
add
out
xchg
ljmp
setno
popa
adc
clc
cld
mov
fcmovbe
push
arpl
fcmovnu
test
filds
movsb
mov
shlb
mov
insb
adc
pop
mov
popl
push
aas
xchg
loope
stc
adc
arpl
mov
push
mov
push
in
sbb
push
shll
int3
jl
and
out
outsl
bound
and
xchg
orb
add
adc
sub
imul
addl
sbb
ror
iret
mov
jnp
cmp
stc
jb
outsl
inc
out
jmp
add
cmp
adc
pushf
jmp
adc
aas
outsb
push
push
roll
xchg
in
adc
and
data16
in
inc
mov
add
arpl
in
mov
je
mov
and
test
sub
sbb
mov
ds
adc
or
lcall
jno
and
loopne
and
jne
fdivs
push
ret
jae
daa
push
mov
pop
les
lret
and
inc
ja
mov
enter
lahf
push
subb
jo
insl
xchg
mov
or
clc
sub
call
int3
ja
lea
outsl
addl
loop
clc
xor
cli
enter
lock
cmc
add
mov
inc
cmpsb
xorl
add
dec
popf
rolb
bound
les
inc
cwtl
iret
jmp
repz
mov
call
inc
jns
repnz
ss
sbb
and
fnsave
xlat
js
dec
insl
repz
fucomp
adc
xchg
xor
lahf
out
aam
or
rcrb
pop
arpl
sub
in
das
mov
push
sahf
in
ret
push
push
cmp
scas
mov
mov
mov
mov
and
leave
testl
mov
sar
xchg
cltd
lahf
clc
pop
pop
sub
test
int3
icebp
xlat
sub
in
mov
fdivrl
mov
fldt
popl
mov
mov
xchg
in
or
ja
fsub
sub
jp
icebp
and
shrl
jl
decb
xchg
and
push
push
scas
or
xor
inc
or
mov
rclb
or
mov
xchg
mov
imul
push
xchg
test
cli
popf
cmp
and
mov
jns
inc
add
fstl
sbb
in
sub
mov
jno
loop
fs
lods
xlat
cmc
pop
mov
popa
mov
ds
xchg
arpl
cmp
data16
lock
mov
add
call
push
adc
icebp
daa
jno
and
inc
and
mov
sti
fistps
mov
or
jge
cmp
mov
enter
xchg
lds
scas
mov
sub
nop
sti
pop
lret
test
jmp
mov
push
lret
pusha
addr16
add
xor
mov
enter
repnz
repnz
lock
test
adc
pop
aam
gs
popf
cmpsb
xor
movsl
rclb
popa
cltd
std
inc
add
out
test
mov
cmp
pop
cmpl
push
stos
rcr
add
bound
ljmp
std
mov
stc
mov
jno
adc
mov
daa
call
inc
icebp
inc
xchg
scas
sbb
faddl
pop
shlb
fwait
imul
pop
dec
xchg
test
sub
ret
mov
xor
or
scas
rol
les
adc
das
adc
clc
pop
lods
notl
flds
rolb
cltd
popa
in
xor
cmpsl
fsubs
mov
pop
pop
insl
mov
imul
daa
std
xchg
xor
in
pop
jmp
movsl
sti
pop
and
sbb
xchg
cwtl
xchg
mov
int3
pushf
adc
push
add
dec
sbb
xchg
fstps
jmp
jae
test
nop
adcb
xchg
js
inc
out
mov
sbb
imul
mov
ds
add
adc
rcrl
fwait
sub
int
cmp
jns
js
inc
jnp
ljmp
in
ret
and
popl
fwait
inc
mov
sub
cmc
xchg
mov
jno
push
xor
pusha
lods
mov
inc
shl
pushf
jl
cld
mov
mov
jno
test
mov
cmp
out
ds
insl
pushf
fisubl
les
lret
xchg
xchg
cmp
push
in
xlat
mov
aas
out
in
and
inc
sbb
hlt
lret
push
cmp
cmp
push
cmp
xor
sub
xor
imul
lock
or
sbb
mov
xor
in
mov
fcmovnb
mov
leave
jb
fistpl
sbb
or
adc
ds
insl
js
enter
push
jp
pop
adc
adc
or
jecxz
mov
adc
pop
pop
rolb
ret
push
xor
mov
cmp
add
xor
mov
inc
push
cld
adc
cmc
adc
das
dec
mov
fildl
sarb
sahf
cmp
jp
mov
mov
addr16
loopne
adc
es
mov
aad
cld
mov
adc
dec
dec
repz
testl
ret
data16
shrl
cmpb
cmp
or
jg
push
mov
int3
mov
pop
mov
js
or
xchg
mov
in
pop
pop
frstor
lahf
mov
lea
cmp
movsb
addl
inc
lret
adc
mov
jecxz
jp
xchg
out
pmulhuw
inc
loopne
mov
rcrl
mov
and
sub
pop
pop
cmp
mov
subb
js
fsubrl
cmpsb
mov
jb
adc
jl
jns
mov
inc
fwait
cmp
xchg
sti
popa
mov
jmp
sub
std
aas
loope
jecxz
rolb
cld
cmp
add
push
insb
mov
aas
xchg
cmc
adc
add
xor
test
push
test
aad
sarl
pusha
test
or
xchg
test
pop
out
pop
jns
and
fidivrl
fs
add
pop
add
jecxz
inc
xor
mov
xor
jbe
and
idivb
lahf
test
or
xor
cmp
jb
test
stc
add
scas
imul
imul
rcrb
outsb
aaa
bound
push
addb
dec
inc
outsb
cmp
pop
and
push
in
mov
sahf
lret
lahf
js
shll
inc
std
clc
xor
and
mov
mov
push
pop
xchg
mov
out
in
shlb
test
gs
mov
shl
rclb
pop
aas
mov
mov
sub
fcomps
cmp
int3
loope,pn
movsb
loopne
push
aaa
jnp
out
dec
and
in
xchg
inc
mov
mov
or
scas
sbb
icebp
push
mov
jnp
int
ret
and
scas
mov
add
adc
into
insl
xchg
push
cmp
lcall
out
mov
out
sbb
test
pop
lds
and
adc
loopne
loop
cltd
adc
xchg
jg
inc
mov
in
stc
out
shl
dec
fildl
mov
or
ficomps
pop
mov
pop
sarb
mov
xchg
cmp
rorb
sbb
mov
nop
lret
lea
movsb
and
hlt
add
add
xchg
dec
leave
lret
pop
jmp
ret
cmc
xchg
aaa
in
fwait
pop
cltd
cld
xor
pop
mov
out
sub
jle
push
push
repnz
rcrb
xchg
nop
jmp
cmpsl
loop
mov
adc
xor
adc
lock
cld
jmp
fldenv
jbe
adc
xchg
fsubrs
sub
lods
divb
pop
popa
callw
negl
loope
scas
dec
arpl
jae
test
sar
inc
outsl
and
jns
lahf
inc
loop
jg
pop
dec
sahf
inc
dec
mov
lea
mov
dec
sub
clc
xchg
push
aad
mov
sar
or
mov
lds
or
lds
aam
mov
jl
in
in
and
lods
or
and
inc
adc
rcll
loope
jne
out
adc
adc
xorl
dec
dec
sbb
mov
ret
pminub
sub
in
gs
dec
les
subb
je
add
ljmp
test
cmpsb
data16
aaa
fs
sbb
push
inc
pop
mov
divb
mov
stc
lock
fstpl
pop
add
iret
jmp
ret
mov
pusha
adc
mov
push
push
jl
lcall
pop
xor
mov
loopne
aam
lods
les
jl
xchg
fwait
mov
xlat
mov
or
fsts
loopne
lret
scas
loopne
ja
pushf
or
add
pop
inc
pop
imul
xor
rcll
movups
ret
ds
push
and
sbb
mov
imul
mov
leave
cmpsl
mov
mov
repnz
and
icebp
dec
push
ljmp
sub
js
daa
xchg
mov
daa
adc
or
mov
ret
loop
loope
dec
insl
in
mov
mov
aad
fcomp
and
es
in
sbb
rorb
pop
mov
sarb
jbe
xchg
cmp
enter
mov
jg
imull
mov
movsb
pop
inc
les
sub
loop
jmp
icebp
andb
test
sub
ja
arpl
push
repz
xchg
jnp
and
xlat
lret
mov
shll
push
pop
sti
sbb
and
mov
adc
nop
bound
rcrb
in
out
pop
int
gs
xor
loop
movsl
mov
je
movsl
cmc
xor
popa
sbb
xchg
into
adc
stos
leave
lea
pop
sbb
pop
xor
sub
mov
ja
xlat
push
or
imul
mov
mov
mov
lret
adc
xlat
test
stos
popfw
and
pusha
movsb
xchg
push
xlat
mov
mov
pop
inc
and
fidivl
lods
cmp
xchg
inc
pop
shr
jns
mov
mov
and
nop
data16
inc
loope
lds
mov
adc
cmpsl
rolb
loop
lods
inc
inc
mov
mov
jp
sub
loop
stos
xchg
test
cmpsb
in
or
cmc
mov
and
in
or
cmp
cli
shrl
js
xchg
insl
adc
fidivrs
adc
or
and
ljmp
into
insb
lock
jo
push
imul
mov
mov
or
cmp
mov
push
mov
jl
and
ja
addb
and
xchg
and
rolb
rcrb
sub
or
mov
add
loop
sub
or
fcmovnu
xor
outsb
andl
out
das
dec
sti
mov
or
imul
ljmp
in
outsb
faddl
lcall
add
lea
xor
jb
jle
pop
mov
arpl
push
push
adc
cmp
cmp
cmp
jmp
test
xchg
inc
leave
hlt
dec
mov
sub
test
shll
pop
aam
mov
inc
and
je
cmpb
lea
les
inc
call
or
data16
add
add
cld
arpl
js
dec
mov
cmp
in
push
out
pop
xor
jg
das
mov
daa
jne
and
stos
in
out
nop
push
std
jecxz
js
insl
mov
sub
dec
mov
sub
jne
inc
jge
sbb
jmp
gs
ljmp
out
jmp
sbb
jge
icebp
jo
xor
mov
mov
inc
js
cmpsb
and
ss
test
jnp
sahf
xchg
xchg
mov
push
jnp
inc
mov
arpl
adc
scas
push
and
cmp
mov
and
sub
test
mov
mov
stos
fnstcw
mov
and
push
xor
stc
pop
mov
add
add
in
pushf
adc
fstl
cld
lret
aam
xchg
and
outsl
clc
dec
cmp
adc
scas
lahf
into
lods
xchg
lods
push
sub
sahf
and
les
add
sub
mov
test
adc
pusha
loope
fsubs
add
lds
adcb
lret
in
cmp
or
nop
lods
push
sub
cmp
jg
mov
push
add
adc
aaa
sbb
pop
repz
xchg
mov
gs
sub
dec
dec
iret
pop
jge
xchg
test
xchg
jg
push
mov
mov
mov
dec
add
rcr
aam
push
daa
clc
and
xor
clc
popf
test
aaa
sbb
iret
mov
mov
mov
aas
std
sub
and
repnz
testl
sub
inc
mov
shrl
test
or
and
mov
inc
fmul
fs
jmp
xor
es
sub
pop
test
movsb
ds
ret
lahf
inc
cmpsl
fdivr
mov
icebp
pop
rcl
sbb
add
clc
and
lahf
mov
popf
jne
xchg
dec
sbb
push
leave
lcall
inc
mov
adc
xchg
in
push
mov
test
ret
push
inc
jne
adc
mov
iret
scas
cwtl
cmc
pop
xchg
add
add
test
decl
jns
pop
test
inc
inc
jb
jo
je
mov
jge
scas
xorb
xchg
adc
in
enter
pop
push
and
cmpb
xchg
aam
xor
fchs
mov
les
cmc
lods
fincstp
daa
xor
xchg
cmpsl
sbb
std
xchg
ljmp
js
das
stos
mov
imul
xor
fdivrl
jo
mov
push
out
jecxz
mov
fsubrl
sbb
or
inc
lret
arpl
add
lods
cmc
or
cmpsl
mov
pop
ret
lea
fs
dec
jnp
mov
leave
push
es
sub
lock
cmpsl
ja
cltd
sub
std
inc
icebp
stos
mov
mov
or
fstpl
int3
movsl
js
imul
pop
cmp
loope
or
flds
add
mov
int
add
and
mov
stos
outsb
adc
add
scas
jbe
add
outsl
xchg
mov
or
dec
insb
jne
or
mov
mov
clc
adc
clc
jne
push
and
jmp
dec
fchs
jb
test
paddq
clc
sub
in
xchg
jnp
mov
pop
jns
add
sub
cmp
pop
jnp
push
mov
fcoms
lcall
gs
mov
mov
xchg
inc
pop
push
adc
mov
dec
cmpsb
or
es
sub
out
push
loope
adcb
mov
pop
xchg
and
dec
mov
jns
jmp
bound
pushf
pop
or
jl
xor
pop
std
ds
jmp
mov
mov
pop
mov
cmp
cs
jbe
gs
push
xchg
ficoms
fucom
rorb
ss
lea
mov
aam
test
cmp
ljmp
les
xchg
test
xor
jg
scas
fcomp
jb
rcrb
test
xchg
aaa
mov
aas
xchg
jp
mov
or
ljmp
fbld
and
mov
jmp
sub
fistpl
cmc
xor
inc
jp
shrb
or
inc
loop
or
adc
mov
ljmp
jnp
popf
cmp
test
push
xchg
and
dec
xchg
hlt
fcoms
dec
or
ljmp
mov
insb
sbb
outsb
push
jo
ljmp
out
add
and
cmp
xor
mov
jne
or
adc
rol
cli
cs
inc
sub
leave
add
sti
push
repz
out
sub
inc
or
inc
ss
jmp
xchg
pop
mov
push
fisttpl
jae
out
ds
cmovns
add
add
xor
fisttpll
aad
cmp
in
mov
push
mov
pop
sbb
jmp
xchg
mov
sarl
cmpsb
cmc
mov
inc
mov
lret
rcrb
repz
xor
inc
mov
inc
jb
icebp
push
movsl
mov
cmp
inc
xchg
nop
test
out
dec
fwait
xor
fiaddl
mov
push
ljmp
xchg
mov
in
icebp
or
inc
rorb
cmc
inc
movsb
sbb
sahf
jne
fldcw
dec
movsb
cmp
jmp
add
push
jnp
dec
out
cmp
pop
repz
adc
adcl
mov
fsts
inc
pop
fwait
cmp
call
or
adc
pushl
xlat
cmpsb
pop
cmpsb
and
out
jb
nop
jnp
les
pop
loop
lea
popa
lock
fnsave
xchg
stos
sbb
mov
lcall
mov
arpl
jmp
sbb
aam
inc
rcll
mov
xchg
flds
pop
lea
sub
inc
mov
jno
pop
inc
insl
push
mov
test
xchg
push
mov
mov
xor
out
jb
hlt
mov
mov
leave
lret
lods
sti
popf
mov
shll
xor
ja
not
stos
xlat
ret
sub
xchg
ds
xchg
xor
pop
in
stos
jb
test
pop
daa
scas
cmp
cmp
aam
inc
out
jae
mov
xchg
leave
es
pop
mov
loopne
sbb
aaa
dec
mov
repz
xor
inc
incl
test
push
xchg
cmp
inc
push
pop
jmp
jp,pn
das
mov
insl
jnp
fsubrs
xchg
sbb
popa
inc
sub
imul
xchg
mov
out
icebp
or
dec
fmuls
rcrb
mov
mov
in
into
inc
rclb
jne
pop
add
movsb
adc
and
sbbl
mov
fsub
mov
cmp
call
and
rolb
mov
sti
cmp
mov
mov
cmp
aad
pop
stos
ds
or
xlat
bnd
incb
mov
jg
out
lods
sub
sbb
addr16
test
lret
jns
sahf
call
mov
jp
inc
test
adc
push
cmc
fidivl
or
cmpsl
jns
js
pop
jnp
mov
popf
jno
ds
fbstp
aas
scas
push
mov
inc
xchg
gs
fwait
or
mov
sub
ja
xchg
test
mov
mov
test
inc
xchg
and
dec
jbe
loop
daa
cmpsb
pop
push
mov
loopne
xchg
aam
mov
rorl
dec
adc
dec
and
test
push
and
push
inc
jno
pop
mov
pop
push
scas
cltd
andb
xor
repz
sbb
jle
and
cmpsl
adc
sbb
and
pop
imul
in
call
fwait
mov
mov
ds
push
inc
and
adc
jnp
sub
loope
mov
sub
push
outsb
cld
das
mov
jge
fsub
jns
ret
cs
push
xchg
pop
mov
iret
cmp
add
data16
movsb
pop
addr16
mov
adc
mov
sub
ja
inc
sub
or
sti
pushf
mov
jnp
rolb
enter
add
scas
push
push
inc
mov
jecxz
xchg
dec
mov
in
mov
std
inc
loop
sti
mov
js
inc
sub
lahf
xchg
and
adc
add
stc
pop
loopne
loope
test
sbb
or
lods
jp
dec
repz
in
shl
loope
iret
or
adc
shlb
stc
and
pop
test
jne
std
adc
shlb
dec
adc
pop
push
fwait
pop
nop
push
mov
xor
int
inc
sbb
scas
sbb
movsl
cs
push
inc
nop
inc
mov
mov
dec
and
pop
in
subl
push
jbe
xchg
mov
sub
pop
xchg
inc
xchg
sub
mov
std
gs
jb
stc
mov
lea
in
sbb
jb
add
rolb
and
sbb
shrl
popa
int
imul
or
pop
jo
xor
outsb
stos
daa
or
cmpsl
mov
add
js
imull
adc
ds
out
jmp
inc
adc
test
rclb
nop
out
in
adc
add
xchg
cmp
fstpl
cs
sarl
adc
mov
pop
cmp
and
roll
and
pusha
push
pop
movsb
cmp
hlt
movsb
in
adc
clc
sahf
jns
out
or
sub
call
pop
popf
inc
es
mov
jmp
pop
insl
pop
add
push
and
pop
jbe
xchg
pop
fdivs
scas
sbb
fistpll
pop
lods
js
sbb
imul
pop
rorl
jbe
push
mov
push
in
xor
xchg
inc
aad
shrb
inc
adc
mov
out
adc
sub
sti
pop
stc
sub
push
cmpsb
mov
out
xlat
jg
lahf
shrl
add
pop
jno
jmp
incl
iret
mov
stos
pop
js
aas
cli
loope
mov
mov
sbb
cmp
fsubs
cli
pusha
or
inc
mov
or
mov
shlb
std
and
xor
pop
cli
add
sub
lods
shlb
push
fiaddl
dec
popa
cs
add
aaa
jns
mov
js
mov
ds
dec
loope
xor
bound
movsl
mov
or
cltd
test
lds
fstl
in
pop
mov
ror
dec
dec
les
sbb
dec
je
test
push
mov
mov
ret
sub
and
add
inc
jg
mov
nop
faddl
lds
dec
mov
stos
dec
pop
setno
out
or
add
andb
jne
leave
lds
inc
nop
or
mov
inc
cwtl
ss
jmp
sub
in
adc
inc
insl
jmp
shr
jnp
aam
mov
push
pushf
cmp
das
std
scas
mov
jle
pop
cmp
fsubrl
pop
add
fnstcw
pop
call
jne
xchg
pop
in
inc
push
sub
pop
shlb
inc
push
cwtl
mov
sbb
addr16
int3
jb
clc
into
aad
test
and
movsl
and
xchg
mov
mov
xsha256
cmpsb
push
lcall
mov
int3
stc
jecxz
hlt
clc
mov
jnp
adc
clc
push
and
and
rcr
mov
mov
xor
mov
adc
push
inc
sahf
stc
movsb
cmpsl
and
add
mov
add
and
mov
sbbl
jl
in
shll
pop
and
inc
pop
hlt
cmp
orb
adc
stc
inc
pop
lahf
push
call
pushf
mov
dec
add
test
cmp
test
ret
in
mov
or
stos
scas
fstps
push
out
cmp
push
jp
sub
mov
test
out
in
dec
sub
adc
push
stos
jp
push
sti
mov
int
sub
mov
daa
outsl
cmp
mov
xor
and
test
hlt
cltd
xor
push
inc
cmp
cld
push
in
add
inc
cmp
sub
jbe
ds
inc
push
test
out
enter
setl
push
test
sbb
jnp
lds
shl
adc
cmp
call
xor
enter
andl
clc
call
popf
je
insb
fistpll
push
mov
loop
sbb
lods
shlb
rclb
and
mov
sti
or
mov
inc
hlt
push
xor
jnp
repz
test
sub
inc
insl
pop
push
test
xchg
bound
aas
insb
hlt
jb
jmp
adc
arpl
adc
fiaddl
adc
inc
adc
mov
push
xchg
inc
pop
jns
jmp
adc
leave
cmpsb
mov
cmpb
jg
into
test
xlat
pop
cmpsb
lret
ja
adc
xchg
lea
in
pop
js
jb
adc
icebp
int
jl
or
pop
imul
jo
add
lock
incl
xlat
push
and
shrl
add
inc
icebp
int3
imul
jmp
xor
dec
imul
push
push
sbb
xchg
cmp
sbb
add
or
push
repz
test
lods
add
popf
pop
jae
clc
xchg
sub
scas
and
cmpsb
add
outsb
cmp
sbb
lock
inc
jno
inc
test
mov
insb
xor
pop
sub
dec
jge
ret
stc
dec
out
daa
xchg
push
cmp
push
ror
addl
stos
in
cld
loop
pop
js
and
xchg
fnstsw
or
add
cli
push
addr16
cmp
fsubrl
lea
jg
push
and
loopne
mov
xor
jle
sub
pop
rorb
repnz
cld
mov
inc
mov
xchg
fcomp
frstor
push
or
movsb
pop
add
loope
movl
push
sub
sbb
addr16
loop
lds
cmc
enter
add
je
xchg
loop
jnp
mov
pop
jnp
push
cmp
pop
jmp
mov
adc
add
jns
push
shl
movsb
push
test
clc
inc
and
xor
les
sub
cmpsl
mov
mov
push
out
iret
mov
inc
sub
push
cmp
icebp
in
das
add
cmc
push
dec
push
mov
xchg
dec
inc
mov
mov
fcmovnb
sub
mov
mov
cld
push
add
mov
pop
mov
cmp
out
adc
pop
lret
and
push
std
jecxz
arpl
shll
in
cmpsl
jno
fstpl
test
mov
mov
cli
and
repz
pop
clc
jno
out
add
loope
icebp
movsl
scas
mov
xor
mov
hlt
add
push
inc
add
jle
cmp
movsb
push
stos
cmpsb
or
add
fsubs
xchg
jno
cmp
mov
jg
enter
lea
pop
subb
pop
xchg
mov
aaa
mov
adc
lods
add
test
mov
inc
cmp
adc
push
push
imulb
outsl
xor
jp
cmp
subb
or
outsb
cmp
inc
jns
pop
mov
push
pop
adc
cld
inc
inc
jg
push
inc
mov
pop
test
out
andl
cmc
mov
add
dec
test
or
lea
sarb
mov
cli
das
pop
add
add
cmp
sti
enter
sysenter
lcall
dec
pop
mov
mov
sbb
inc
mov
sub
adc
sbb
adc
lret
clc
lret
jl
scas
lods
or
push
sahf
icebp
call
mov
loopne
sarl
sbb
push
xchg
rorb
jo
xchg
jo
xchg
dec
or
into
pop
lret
mov
pushfw
xchg
scas
jmp
and
fs
das
adc
sahf
cli
mov
cwtl
pop
test
pop
mov
ljmp
mov
es
push
push
hlt
stc
add
push
dec
inc
or
icebp
ffreep
outsb
inc
lds
test
dec
test
cli
loopne
enter
icebp
div
mov
imul
mov
or
and
cmc
jmp
inc
rcrl
mov
sti
sbb
jl
sub
mov
addr16
mulb
mov
imul
aaa
call
cltd
jne
inc
in
cli
lret
mov
pop
jb
mov
jl
jecxz
fcmovb
cmc
mov
sti
pop
pop
adc
xchg
xor
cmp
out
movsl
jo
add
in
push
icebp
std
push
fldl2t
lock
pop
jge
xor
scas
stc
add
push
scas
and
dec
cmp
je
push
push
xor
lea
jl
out
mov
lods
in
mov
push
sti
xor
shr
mov
inc
fiaddl
sbb
int3
mull
add
pop
dec
movsl
sub
jns
iret
mov
mov
xor
stos
lea
jmp
mov
daa
or
xchg
mul
pop
mov
in
adc
adc
mov
into
mov
aaa
sbb
arpl
gs
arpl
push
cltd
jo
push
mov
bound
mov
mov
mov
pop
cmp
cs
mull
adc
push
scas
pop
mov
arpl
jnp
xchg
jge
cmp
jo
call
xchg
call
jbe
push
jb
mov
mov
dec
pop
adc
xor
bound
mov
add
andb
imul
inc
push
push
test
dec
out
lahf
or
cli
mov
sbb
repz
add
lods
icebp
insb
loope
and
ljmp
cmpsb
or
push
loop
xor
mov
lret
cmp
pop
mov
mov
cmp
mov
add
outsl
cmpsb
pop
pop
mov
push
add
or
push
out
sbb
lahf
sbb
push
std
push
pop
pushf
mov
mov
add
jmp
mov
outsb
mov
add
push
iret
xchg
roll
jns
imul
jecxz
repnz
push
loopne
push
dec
pop
xor
popf
lret
jne
pop
fcoms
push
sbb
les
gs
xor
outsb
sbb
mov
hlt
dec
sbb
mov
mov
lahf
jb
cmpsb
cmp
ljmp
sub
push
stos
cmc
push
sub
pop
test
sub
add
imul
aas
mov
or
mov
sbb
loope
pop
ret
lods
stos
adc
xor
ds
mov
cltd
dec
mov
insb
pushf
ret
aas
arpl
or
jle
pop
mov
sbb
xor
mov
sbb
out
dec
lds
or
addr16
dec
sbb
mov
inc
xchg
mov
fdivr
ja
daa
pop
and
cmpl
mov
xor
sub
and
out
aam
push
cli
shrl
shlb
std
jne
add
mov
xor
shl
jnp
or
out
adc
sub
lea
sbb
and
in
adc
lahf
inc
jno
jle
push
push
mov
lods
mov
push
push
push
pop
cmc
inc
mov
ss
mov
mov
jae
sbbb
and
lcall
adc
push
push
fs
push
decb
dec
push
test
add
and
adc
dec
aas
sub
lret
xor
xchg
sahf
test
push
dec
call
idivb
fistpll
imul
jg
out
roll
je
jge
dec
popa
inc
movsbl
divps
jecxz
mov
mov
jno
inc
xor
aaa
lcall
inc
addr16
je
adcl
or
or
sub
mov
add
push
in
icebp
ja
dec
sti
jbe
arpl
out
popf
pop
mov
call
mov
mull
loope
ja
adc
int3
popf
fwait
or
mov
cmc
pusha
add
mov
dec
int
push
xchg
push
mov
repnz
sub
mov
jne
lea
fcomi
sbb
jge
jns
inc
lea
pop
out
int
mov
mov
lret
cmp
out
inc
jle
mov
ja
mov
loop
mov
ss
mov
test
xchg
vpmulhw
mov
cmp
repnz
mov
lea
out
push
or
inc
xchg
in
and
fadds
adc
int
mov
and
and
jecxz
jo
inc
shll
inc
add
test
cmpsl
jne
jo
ja
clc
jp
xor
repnz
cmp
cmpsl
out
sbb
or
iret
fsubp
push
daa
lods
lcall
clc
mov
sbbb
adc
divb
lock
imul
in
ret
sub
es
scas
dec
xchg
mov
add
xchg
cmpsb
mov
mov
lea
jnp
sbb
xor
cs
jnp
jne
mov
rcl
mov
lea
pushf
lods
pop
push
mov
insb
and
push
jno
cmc
mov
sbb
dec
std
inc
movsl
ljmp
add
test
mov
adc
sbb
testb
iret
subl
inc
jecxz
push
cmp
jbe
iret
xchg
pop
jae
dec
dec
or
out
in
aaa
mov
and
inc
popa
xchg
outsb
dec
icebp
inc
out
mov
push
xor
and
jl
add
mov
add
inc
hlt
add
mov
pushf
fiaddl
testb
insl
inc
mov
pusha
mov
inc
cmp
out
and
adc
lods
mov
jp
test
mov
setle
xlat
lret
ficoms
jb
popa
leave
andl
pop
mov
adc
les
fidivl
cs
dec
mov
xor
in
test
insl
push
push
out
jge
imul
jo
cmp
outsl
or
cmpsb
or
push
dec
cmp
sub
ficoms
xor
cwtl
cmpsl
ljmp
fbstp
jno
xor
cli
sub
es
xor
frstor
adc
mov
cmp
jno
out
ja
int3
jbe
sub
scas
js
sub
rolb
xor
cmp
lahf
lock
ds
mov
repz
jmp
lds
jb
mov
data16
lcall
in
add
rorl
fisubs
sti
mov
out
cld
xchg
sbb
mov
hlt
insb
inc
mov
mov
sub
and
xchg
mov
mov
pop
lea
and
xor
pop
je
icebp
push
adc
and
popa
dec
lret
stc
std
imul
adc
cli
cmp
mov
sbb
out
sub
mov
loope
cmpsb
xorb
pop
and
push
dec
mov
jle
adc
ja
out
cmp
fldl
cmp
jge
in
mov
stc
mov
outsl
test
mov
mov
sub
push
cmpsl
cli
mov
mov
daa
popa
mov
cmp
test
notb
and
outsb
sti
mov
icebp
bound
inc
ljmp
jb
mov
pop
jg
sbb
in
sub
pop
cmpsl
outsb
das
jnp
jnp
or
jp
xchg
push
mov
and
arpl
cmp
cmpl
xchg
mov
mov
stos
ret
jl
pusha
push
gs
gs
in
sbb
xor
test
es
sub
dec
xchg
sub
sub
insb
add
lcall
rcrl
cmp
pop
and
les
add
fs
cmp
insl
imul
decl
pop
mov
sbb
pop
or
add
jge
and
mov
xor
orb
repnz
push
cmpsl
xor
ds
sbb
pop
pop
pop
lret
insb
and
cmp
clc
dec
cwtl
sti
push
pop
in
sbb
pop
or
dec
scas
xchg
mov
jns
pop
dec
insb
jmp
out
xor
wbinvd
and
or
push
gs
mov
xchg
shlb
xchg
leave
es
pop
hlt
stos
incb
add
add
out
mov
ret
sbb
testb
rorb
mov
ret
jnp
repz
cmp
xor
and
adc
scas
mov
jns
notb
pop
ret
bound
std
push
data16
cmp
movsb
fldt
ljmp
mov
pop
cmp
cmp
mov
in
or
xor
push
xchg
iret
cmp
movsb
clc
xchg
mov
pop
mov
jg
sti
cmpsb
xchg
jle
add
add
inc
gs
mov
pop
mov
les
loop
and
into
push
movsb
jbe
fdivp
mov
adc
mov
test
dec
pusha
push
pop
je
addr16
adc
repz
data16
in
lret
cmc
sub
sub
xor
sbb
aas
cmc
mov
test
dec
data16
sub
push
pop
cmp
into
ljmp
in
cmovae
inc
inc
hlt
xor
mov
add
imul
cmp
movsl
and
mulb
xor
or
mov
inc
lods
cmp
jg
in
cmp
inc
cli
in
rcrl
fwait
popa
lods
jae
and
out
mov
ret
xor
pop
xlat
and
neg
fs
inc
dec
jmp
shll
xchg
in
ljmp
mov
sbb
push
jle
pop
and
jnp
out
gs
mov
ljmp
mov
pop
leave
jno
push
lea
sub
mov
aaa
jns
adc
xchg
adc
xor
aad
test
ret
movsb
stos
gs
bt
mov
out
addr16
jno
mov
pop
add
lahf
jle
js
and
scas
aam
sub
jnp
scas
fstl
xchg
mov
pusha
enter
arpl
lods
push
mov
mov
mov
mov
repnz
pusha
mov
xchg
les
dec
add
arpl
push
jno
and
jecxz
pusha
sbbb
test
lahf
push
cmp
and
pop
inc
mov
outsb
hlt
sub
cmp
jbe
sub
mov
mov
outsl
push
rclb
push
dec
ret
out
pop
jb
pop
out
icebp
sbb
aad
pop
mov
movl
add
in
mov
mov
mov
fiaddl
lea
sahf
out
mov
cmp
jp
ret
jp
or
ja
sar
jne
lahf
cmp
shlb
pop
ret
mov
jmp
rolb
popa
jecxz
out
adc
mov
lds
cmc
push
sub
mov
lret
ret
jge
es
lret
dec
dec
mov
or
push
das
out
jmp
inc
cmp
xor
cmpsb
negl
pop
or
shlb
xlat
in
das
jecxz
xlat
decb
loopne
dec
shlb
cltd
repnz
fcoml
lahf
mov
hlt
mov
fxch
stos
pop
ret
add
das
int
loope
xchg
xchg
out
imul
pop
movsl
push
out
cwtl
negb
fs
ror
cmp
inc
das
mov
mov
cmp
add
lret
fcmovb
int
xor
filds
and
std
cli
sub
das
xchg
mov
mov
pop
fstps
sub
es
or
cs
imul
jmp
flds
test
icebp
add
mov
out
xchg
int
push
hlt
jno
insb
or
fidivl
cmpsb
mov
add
loope
test
sub
cs
fwait
jge
pop
repz
jnp
pop
lds
jne
out
cli
and
mov
popa
mov
imul
sbb
hlt
adc
or
enter
xchg
lahf
mov
mov
sbb
cmp
jg
inc
xor
add
fistpl
lods
jp
insb
sbb
sub
add
add
in
mov
xchg
mov
jnp
xchg
jb
test
cmp
enter
dec
sahf
sbb
out
sub
arpl
test
push
leave
lahf
cmpsl
add
jnp
mov
clc
aaa
cwtl
lock
jmp
mov
mov
jmp
std
pop
xchg
std
sbb
pop
sbb
incb
inc
lret
or
sub
add
repz
add
cmp
cmp
and
out
xchg
jno
dec
out
in
aad
test
shl
xor
adc
mov
jg
aas
xchg
imul
scas
push
mov
jne
popa
mov
or
scas
mov
mov
stos
rcll
ja
je
inc
sub
lcall
jns
xchg
push
addr16
shlb
mov
ret
sbb
stc
pop
inc
dec
jmp
insb
fbld
pop
xor
jmp
fs
jne
ret
movsb
sub
in
iret
popf
or
ret
div
loop
xchg
stc
stos
fstpt
xchg
dec
out
inc
adcb
cmpsl
clc
inc
xorl
sbb
sub
ret
cmpsl
mov
daa
out
stos
stc
dec
sub
fld
jmp
std
adc
loop
ret
and
cli
and
inc
push
mov
jle
ss
ljmp
pusha
adc
out
in
jbe
jo
pop
in
sahf
xchg
popf
sbb
sarb
leave
outsb
and
call
es
sub
test
ljmp
out
outsl
icebp
stc
sbb
mov
adc
out
sbb
stos
push
jecxz
push
cwtl
jbe
push
mov
faddl
addl
mov
adc
or
fwait
ret
lds
paddsb
sbb
xchg
push
inc
insb
sbb
in
dec
push
in
dec
add
aad
pushf
dec
int
cmp
jge
adc
jo
inc
adc
push
xor
dec
adc
lea
push
roll
stos
jne
jl
cmp
in
cmc
cmp
push
popa
movsb
loopne,pn
push
pop
or
inc
xlat
pop
lock
xchg
xor
mov
push
imul
cmp
loopne
lds
lock
mov
cmp
adc
lahf
sti
shrb
add
jmp
mov
add
jb
jb
addr16
scas
dec
in
push
mov
dec
fcomps
pop
mov
mov
sbb
pushf
push
dec
pop
push
ja
xchg
jnp
cwtl
hlt
xchg
ja
dec
mov
das
adc
adc
out
cltd
das
push
rorb
ss
shll
mov
add
dec
xor
mov
ss
daa
mov
mov
mov
pusha
push
push
jecxz
loop
mov
rolb
call
jle
popa
dec
ljmp
aad
pop
jmp
rolb
inc
loopne
loope
xchg
fisubrs
add
pop
mov
out
clc
pop
dec
push
int3
push
jp
pop
push
dec
rcrl
sub
ja
mov
inc
add
mov
ja
sub
push
addl
or
jne
pop
mov
xor
sti
fadd
scas
test
imul
dec
jl
int
imul
xor
movsb
mov
dec
sti
leave
push
and
out
hlt
mov
out
or
shll
arpl
mov
loop
and
es
or
push
imul
lret
or
fsubr
dec
call
js
insl
icebp
cmp
js
fiadds
push
idivl
and
js
cmpsb
movb
or
and
out
mov
and
jl
fwait
test
xor
mov
dec
loop
push
gs
cli
jnp
jg
push
lods
in
xchg
inc
sbb
jl
in
mov
lea
cmc
cmp
pushf
pop
add
iret
movsl
sti
icebp
ficomps
jg
pop
and
xchg
leave
enter
mov
xor
push
and
call
sbb
ljmp
or
jno
out
cmp
les
stos
jge
popa
daa
push
push
lock
test
les
cld
das
movsb
les
cmpl
push
shlb
mov
into
or
cmp
add
scas
js
mov
xchg
mov
mov
xchg
push
cmp
add
jp
cmpsl
fstps
iret
pop
xchg
jle
cmpl
int
aaa
cmpsl
pop
es
pop
push
jne
cli
lods
imull
cmp
ljmp
jg
adc
or
mov
cmp
aam
and
enter
fiadds
test
push
scas
adc
jbe
arpl
xchg
hlt
ficoms
lods
add
imul
jb
mov
mov
aam
in
jp
xchg
dec
data16
and
jmp
xor
xchg
push
mov
lods
jb
inc
mov
jb
pop
add
data16
stc
mov
or
outsb
jb
cli
test
stc
pop
push
outsl
and
iret
xchg
cmp
test
mov
or
subb
sti
shlb
xchg
pop
pushf
or
dec
imul
mov
mov
push
jg
fwait
cld
dec
fcomip
jnp
cmp
jecxz
sarl
lods
repnz
xor
and
or
mov
daa
rorb
int
popa
and
sbb
add
fnstcw
dec
ds
or
dec
cmp
bound
inc
inc
addr16
fsubrl
imul
xrelease
cmp
jg
mov
cmp
shlb
push
imul
mov
sbb
pop
push
icebp
sti
jmp
push
mov
scas
xchg
mov
mov
sub
fs
lcall
xchg
pop
jo
sarl
mov
mov
fcmovu
stos
sub
scas
fsubl
jb
movsl
jecxz
fiadds
sub
loopne
gs
sub
inc
inc
sahf
bound
aas
sbb
sub
ds
cmp
negb
jae
xchg
loop
mov
or
mov
in
inc
inc
or
lea
mov
inc
bound
lahf
cmp
js
stos
lock
popa
cltd
rolb
sahf
and
add
mov
mov
jns
outsb
leave
xor
test
inc
or
xor
sahf
hlt
push
insb
por
cwtl
mov
enter
fdivl
mov
dec
fldt
xchg
sub
xchg
lret
xor
aad
lcall
in
jp
bound
cmc
in
sbb
out
and
lahf
fld
xchg
pshufw
gs
dec
icebp
mov
pop
or
fists
jno
adc
pop
bound
adc
mov
pop
push
arpl
sub
stos
loopne
in
cmp
inc
bnd
add
and
mov
sub
nop
inc
hlt
fldt
lret
add
sbb
dec
adcl
mov
test
cmp
xchg
push
mov
add
add
aas
xchg
sbb
aaa
pushf
call
imul
aad
popa
test
lret
or
pusha
in
or
mov
sub
inc
fldl
jno
subl
cmp
ja
mov
ljmp
cmc
jo
sbb
xchg
sbb
and
scas
jne
mov
sbb
cmc
xor
pop
xchg
mov
repz
push
test
lods
mov
inc
xchg
xchg
jbe
sbb
loope
mov
psubd
inc
mov
sbb
cld
inc
jg
pop
lcall
fisubrl
mov
mov
popa
mov
cmp
add
lahf
xacquire
cmc
int
adc
cmp
jmp
sub
lret
int
nop
into
add
dec
nop
les
popa
loop
fmulp
sahf
lods
fwait
loop
or
ds
inc
daa
std
dec
jnp
inc
push
call
jmp
rcl
sub
dec
pop
insl
push
rorl
pop
ja
lcall
dec
cli
cld
pop
aaa
adc
repnz
or
stos
bound
and
add
je
sbb
push
jnp
jg
push
or
inc
push
adc
inc
pop
stos
pusha
push
jns
cmp
xchg
aad
std
mov
call
xchg
test
rcr
adc
mov
clc
push
add
mov
lcall
jb
push
sbb
jne
test
sub
je
jnp
outsl
test
outsb
mov
jns
mov
pop
fldl
push
mov
sub
xchg
mov
popf
cmpsl
sbb
aam
mov
ss
pop
xor
nop
sub
lea
in
into
xor
pop
shll
inc
and
mov
pop
mov
daa
hlt
xchg
pop
les
jb
lcall
clc
push
fwait
lret
cvttps2pi
clc
movsb
mov
push
idivl
inc
or
pop
aaa
jmp
push
jl
bound
mov
aad
scas
adc
add
fnstenv
stos
adc
ret
sbb
xor
cmp
and
les
adc
data16
lods
or
into
mov
cs
aad
add
scas
dec
mov
and
mov
cmpxchg
xor
push
lcall
mov
jo
xchg
lret
and
xlat
in
outsl
or
stos
fwait
in
adc
sbb
dec
xchg
cmp
push
jmp
outsl
ja
int3
add
mov
jle
and
push
cwtl
mov
sbb
xchg
jno
mov
xor
cli
jge
fistps
sti
pop
ficompl
mov
clc
pop
test
shrb
movsb
aas
adc
or
xchg
jb
mov
int
aaa
push
insb
jmp
mov
jle
fisubrs
xchg
sbb
das
mov
flds
sbb
adc
fwait
imul
scas
insl
mov
mov
sbb
mov
ror
sbb
mov
jmp
push
mov
ret
imul
mul
rcr
out
mov
mov
mov
push
in
mov
jmp
stos
sbb
je
imul
dec
ja
es
sarb
mov
lea
dec
out
fdivs
add
jecxz
add
fidivs
xchg
mov
stos
xor
nop
imul
daa
pop
xchg
pusha
xor
cmp
xor
insl
jmp
nop
mov
mov
inc
stos
or
jmp
sbb
mov
and
mov
xchg
lahf
add
sbb
fstpt
add
stos
sbb
mov
cmp
ja
movb
movsl
mov
cmpsl
incb
aam
mov
testl
arpl
mov
push
in
test
shr
xorl
pop
sbb
sti
dec
jb
sbb
mov
fadds
sub
stos
sub
mov
movl
mov
cmc
sbb
dec
lods
mov
adcl
sub
push
or
and
cmp
pop
sub
lods
bound
in
dec
mov
mov
add
adc
call
jmp
dec
cmp
mov
mov
rcr
mov
pop
pop
add
repnz
paddsw
insl
inc
lret
mov
out
fstp
sbb
dec
insb
push
adc
mov
mov
cmpsb
daa
pusha
js
cmpl
stc
decl
sbb
es
cmp
jnp
or
sbb
adc
jge
add
and
push
jbe
add
fcmovnbe
xor
je
aam
sbb
push
aad
nop
out
inc
psubusb
fdivl
mov
in
mov
and
pop
cmp
or
jne
fldenv
movsl
pop
adc
pop
inc
std
pushf
pop
push
shll
orl
jecxz
inc
in
shll
repz
cld
add
pop
mov
mov
mov
ud0
mov
jns
cmp
add
sbb
mov
fs
ja
insb
mov
add
sub
sbb
les
ja
mov
push
or
dec
mov
and
ss
call
push
aam
xor
pop
push
lea
mov
jb
iret
lea
sub
jmp
and
xchg
push
scas
xor
inc
push
pop
stos
out
lcall
insl
or
mov
stos
add
cld
fcompl
mov
mov
and
std
test
add
lcall
enter
addr16
or
aaa
xor
fidivrl
mov
xchg
inc
repz
addr16
shr
and
adc
loopne
xchg
cmpsl
or
mov
mov
inc
clc
out
jno
rcrl
gs
cltd
jp
test
cmp
bound
xlat
mov
fimull
div
mov
sbb
and
clc
mov
mov
ss
fstl
xchg
fmull
cltd
mov
ds
dec
scas
test
pop
sbb
mov
jbe
lret
lret
cmpsl
push
or
mov
pop
mov
dec
mov
fnsave
adc
inc
push
push
outsl
add
mov
dec
fdivl
lret
imulb
dec
scas
cltd
addr16
bswap
cmp
or
adc
int3
popf
or
lock
sub
dec
xchg
leave
cmpsl
dec
add
mov
addb
adcl
xorb
ds
lods
mov
les
mov
cmp
mov
iret
mov
push
sub
das
fimuls
jl
and
cmp
lods
repnz
lds
or
xor
xchg
leave
in
xchg
cmpsl
xor
lret
adc
or
daa
sbb
sbb
xchg
sbb
sar
lret
stos
push
lods
mov
dec
icebp
mov
and
add
xchg
icebp
int
test
mov
jns
sub
push
je
lds
xchg
in
js
adc
xchg
ds
mov
lods
jp
push
mov
popf
mov
lret
cmp
leave
movsb
adc
aam
dec
and
rcrb
call
icebp
xchg
mov
mov
or
inc
or
inc
add
lret
clc
in
es
loop,pt
rol
pop
inc
pop
pop
mov
cld
js
sbb
sbb
test
sarl
std
arpl
jmp
jp
shrl
ret
repnz
je
addb
add
add
xchg
int3
jle
jne
cmp
pop
pop
adc
fwait
in
imul
xchg
adc
aaa
adc
xchg
mov
push
cmp
jno
sub
inc
or
cmc
dec
cmp
ret
out
sarl
fisubl
jg
pop
fimull
push
push
or
lds
js
ret
test
cld
mov
pop
push
push
push
pop
jg
sub
into
jl
lods
adc
scas
imul
fmuls
pop
je
stos
sub
data16
sti
sbb
mov
hlt
push
jge
mov
test
lock
mov
xchg
insl
cmp
inc
push
out
cmpl
add
adc
dec
aad
repz
xchg
cwtl
pop
notl
test
sub
cmpsb
int
and
cmp
xor
add
je
les
mov
push
jmp
loope
movl
jae
and
lds
jmp
sbb
cmpsb
arpl
arpl
push
adc
push
mulb
push
icebp
in
sub
jle
loopne
jae
das
es
and
ljmp
aad
cmp
lock
fisubrl
fistpl
mov
pushf
mov
push
inc
adc
in
shll
outsl
or
aad
bound
mov
push
cmp
push
cmpsb
xchg
inc
or
loope
into
xor
test
outsb
int
fs
je
inc
clc
loopne
cwtl
js
sahf
push
leave
clc
mov
js
jl
jl
pusha
pop
repz
test
add
popl
jb
dec
sub
push
das
popf
and
push
push
or
xchg
les
mov
out
jle
aas
int
xor
fwait
addr16
les
nop
imul
paddb
inc
push
mov
dec
lods
adc
addr16
mov
and
mov
jle
add
cld
sbb
mov
sbb
stc
dec
scas
mov
mov
movsl
sbb
in
js
es
jecxz
push
inc
fildl
mov
pop
and
cld
add
or
cmc
or
pop
mov
in
push
mulb
mov
sub
jo
cwtl
mov
jmp
sub
test
push
mov
je
sbb
shll
rclw
les
outsl
dec
mov
in
jne
out
xor
jle
arpl
pop
xor
xchg
std
lret
xchg
fnstcw
hlt
prefetch
repz
movsb
jno
in
les
push
push
mov
inc
sub
les
lock
adc
scas
mov
mov
daa
push
pop
out
adc
and
test
add
jl
sbb
mov
fildl
imul
xchg
or
adc
in
mov
pop
xchg
test
or
aam
dec
add
lea
aaa
std
cld
and
xor
cmp
xchg
out
pop
rorb
lcall
add
xor
lahf
jge
inc
lret
pop
xor
push
inc
mov
and
ds
imul
js
xchg
push
addr16
add
xchg
ja
xor
repz
jg
adc
inc
jge
mov
movsl
jmp
cld
jp
inc
adc
lret
fisttpll
mov
ljmp
mov
aam
dec
fst
add
pop
xchg
cmp
popl
inc
lods
push
mov
jl
fiadds
jb
in
ds
inc
mov
clc
repnz
sahf
mov
icebp
or
add
sub
pop
fildll
add
jns
sti
add
sahf
mov
out
add
gs
lahf
jno
test
loop
mov
push
cwtl
cmp
mov
sbb
mov
sub
outsl
mov
mov
pop
mov
add
dec
dec
xchg
gs
and
out
sti
dec
movsl
jns
aam
xchg
loopne
xor
adc
popa
or
sti
bound
xchg
push
sbb
and
or
in
popf
mov
sbb
inc
iret
movsl
fadds
ret
cmpsb
xchg
mov
sub
repz
lea
xor
and
xchg
fs
pop
xchg
jecxz
inc
adc
sahf
sub
lock
jbe
inc
aas
jecxz
rolb
cmp
fiaddl
lock
push
enter
movsb
test
inc
lcall
popa
mov
fisubl
mov
arpl
xchg
nop
insb
lahf
push
cmpsl
mov
loop
leave
xchg
hlt
push
addl
nopl
pop
pop
dec
aas
push
cmp
xchg
sbbl
jge
inc
and
push
out
cmp
pop
repnz
pop
aas
mov
mov
push
pop
dec
push
mov
insb
cmp
mov
cmp
sbb
ljmp
lds
mov
bound
pop
and
sbb
cli
ret
add
add
mov
arpl
sti
pop
stos
mov
stos
mov
mov
icebp
lock
ljmp
and
jp
std
mov
es
rolb
rclb
call
cmpsb
sarl
push
mov
cmp
js
add
mov
mov
hlt
aaa
xchg
sub
lods
ja
aaa
out
lods
loope
outsb
push
xchg
pop
mov
es
push
sub
in
pop
adc
out
pusha
pushl
insl
xchg
ljmp
scas
in
pushf
adc
lahf
lock
sbb
cmpsb
mov
dec
test
and
iret
inc
mov
pop
xchg
pop
inc
sub
sub
push
or
stc
dec
cmp
pop
jae
mov
dec
scas
and
mov
sub
pop
ja
sbbl
push
insl
rcll
sub
iret
sub
adc
pop
and
sbb
mov
fs
sub
pop
cmp
xchg
jecxz
jno
adc
pusha
ret
dec
mov
push
xchg
outsb
das
test
inc
sahf
dec
dec
test
cmc
fists
jp
push
xor
inc
out
insb
movsb
sub
movsb
mov
fstl
xchg
ror
xchg
ret
jle
pop
inc
cmpl
lods
jno
in
xlat
jge
mov
dec
and
in
xor
movsl
gs
xchg
fcmovnu
sarb
das
inc
fcoms
ja
xchg
test
mov
push
shll
push
jmp
jnp
enter
mov
call
lea
add
pop
mov
repz
sbb
dec
or
add
daa
xchg
mov
mulb
cmp
je
cmp
aaa
mov
jge
popf
xchg
add
jo
fsubrl
lea
jle
addl
dec
movsb
insl
int3
aam
push
outsb
sarb
sbb
mov
mov
movsb
mov
lock
std
push
and
jle
adc
jnp
sbbb
pop
mov
loopne
xchg
push
jp
push
inc
inc
add
sahf
pop
adc
cmp
ja
cmp
rcl
push
pop
fisubs
xchg
data16
cmc
cmc
cmpsl
test
mov
cmc
out
jl
int3
cli
and
inc
loope
repnz
pop
mov
jnp
outsb
nop
int
add
fisubrs
xor
sbb
daa
insb
inc
adc
das
dec
idiv
out
sbb
dec
out
stos
push
in
sbb
je
pop
mov
hlt
mov
cmc
sub
movsb
sub
xchg
push
add
insl
sbb
lea
mov
mov
mov
cmp
xchg
adc
sub
cltd
jg
mov
mov
lods
loope
fidivs
stc
pop
push
add
pop
or
outsl
nop
sub
daa
pop
imul
pop
xor
push
fwait
js
mov
inc
pop
mov
push
sbb
in
lret
xchg
mov
mov
push
idiv
cs
sti
pop
mov
fucomip
jle
or
mov
and
mov
lods
inc
add
xchg
pop
mov
enter
loope
popf
notl
mov
pushf
jno
pop
push
insb
fstl
loope
mov
jp
mov
sarl
pushf
mov
jo
sbbb
cli
mov
or
test
adc
xlat
mov
push
aaa
fs
notb
mov
nop
and
mov
into
jl
adc
out
mov
mov
dec
pop
rorb
and
inc
xor
sub
mov
add
fisubrs
push
jno
jno
imul
out
xchg
mov
push
and
movsb
mov
push
lods
movd
es
faddp
outsb
pop
push
or
cli
push
int
pusha
out
mov
test
add
daa
xor
and
xchg
mov
aam
fmuls
lcall
aam
sbb
es
ja
std
int
mov
sar
shll
adc
and
iret
mov
cmp
je
loopne
loope
imul
clc
lds
dec
mov
xchg
aam
pop
popf
cmp
ret
std
push
sub
adc
mov
cmp
je
mov
xor
push
jecxz
mov
cmp
cs
sahf
rclb
jns
sub
mov
inc
iret
insl
enter
addr16
jge
add
cmp
jp
movsl
mov
inc
jns
xchg
pushf
shll
jge
add
jl
outsb
psubusw
hlt
mov
rcl
xchg
add
dec
jge
pop
inc
in
pop
pop
outsb
push
mov
addb
js
hlt
mov
jl
jns
fiaddl
mov
cmp
adc
out
fiadds
aam
aaa
pop
dec
mov
mov
mov
test
xchg
pop
inc
lcall
in
shll
adc
movsl
cmc
insl
cmpl
test
mov
add
and
pop
mov
xor
fcomps
jnp
lcall
insw
dec
xchg
or
lods
out
movsl
movsl
mov
lahf
and
sub
out
adc
js
xlat
out
xor
push
js
or
mov
lds
in
fldl2t
mov
sbb
pop
fdivs
out
fstpl
movsl
ret
in
add
jo
cmc
or
mov
das
in
or
pop
sub
lcall
inc
in
push
xchg
adc
aam
pop
xor
cltd
and
mov
xchg
sti
and
lret
push
dec
sub
inc
cmp
aam
in
xchg
rorl
sbb
stos
loope
pop
mulb
pop
aam
xchg
in
inc
clc
into
xchg
popa
xchg
lock
jl
in
jnp
out
js
outsl
movsl
mov
push
xlat
out
sbb
shrb
fwait
or
add
scas
cmc
pop
or
fs
sub
sub
xchg
dec
xchg
fwait
inc
mov
cmpsb
ficomps
pop
stos
movsl
jp
jmp
in
and
addr16
jg
dec
sub
je
les
loope
int
gs
push
test
popf
pop
dec
aad
inc
mov
inc
dec
in
inc
pop
jg
stc
movsl
jno
jecxz
lods
pushf
loop
xor
sbb
popa
mov
jns
sub
dec
mov
lcall
add
fstpl
xchg
rcll
mov
cmp
pop
jno
ret
dec
iret
dec
add
dec
fistps
jmp
mov
movsl
mov
sahf
mov
aad
sub
mov
mov
mov
mov
inc
ss
cmp
mov
xchg
mov
out
pop
pop
mov
movsl
scas
test
push
mov
cmp
adc
or
ja
out
aam
lahf
push
mov
cmp
cmp
ret
inc
pop
ljmp
or
sub
xchg
scas
popa
scas
fidivrl
sti
lds
imul
cltd
sbb
push
clc
lock
outsb
lds
scas
add
sahf
idivb
rcr
inc
leave
and
pop
dec
fwait
dec
xchg
mov
or
or
adc
mov
pusha
dec
loop
and
std
movsb
jle
popa
call
adc
insb
outsb
push
sbb
pop
pop
xor
push
inc
dec
fisubs
test
rcrb
iret
sbb
xor
mov
mov
jp
sub
adc
and
mov
repz
movb
push
cmpsl
cmp
in
push
pop
enter
leave
fwait
cmp
ds
xchg
sub
icebp
in
adc
push
into
mov
cli
dec
jmp
aas
out
jle
xor
mov
mov
xchg
lret
fyl2xp1
pop
and
or
xchg
sbb
lret
push
add
cld
jo
pop
lahf
das
dec
movsb
mul
jge
xchg
cmpsl
mov
inc
arpl
dec
push
repz
in
pop
sbb
pusha
inc
popa
xchg
or
data16
ja
adc
inc
dec
pop
nop
inc
scas
imul
addr16
add
outsb
insb
and
add
gs
mov
shrb
fsts
cmpb
inc
scas
and
inc
movsb
xchg
xchg
pop
adc
cltd
sub
jle
add
lahf
ds
or
sub
mov
and
je
call
ja
popf
stc
push
leave
clc
xor
ja
test
jne
test
inc
popa
fadd
leave
jge
push
test
inc
dec
std
iret
daa
int
loop
sarl
inc
aaa
lahf
or
xchg
sub
clc
push
es
and
scas
jbe
outsb
mov
add
mov
cmpsb
mulb
shl
mov
mov
fdivr
ds
nop
bound
push
mov
int
test
mov
ja
or
in
jge
jno
in
lret
stos
cmp
shr
xchg
test
or
gs
fcoms
xchg
xor
push
rcr
imul
cmc
sub
lret
or
jns
aas
mov
stos
imul
stos
mov
jp
xchg
inc
int3
sti
xor
sahf
call
jo
push
js
or
push
jecxz
cli
add
push
scas
inc
loope
fwait
pop
push
popa
pusha
inc
cs
jmp
gs
add
xor
jb
cs
xchg
mov
sub
notl
sbb
enter
scas
sub
xor
push
data16
nop
les
inc
and
std
stos
cs
lock
inc
lods
sbb
add
daa
fisubs
mul
testb
lret
les
cmp
mov
mov
and
fnsave
cwtl
mov
cmp
int
fbstp
mov
adc
adc
ja
das
movsl
mov
mov
pop
sub
xor
int3
ret
xchg
xchg
push
jns
cli
jns
jle
icebp
and
jae
stos
leave
into
xchg
icebp
scas
popf
sbb
dec
in
push
ss
aaa
push
jbe
jg
xor
ret
les
jns
ret
into
mov
jo
mov
mov
lods
and
jecxz
or
mov
sti
mov
jno
arpl
enter
push
or
adc
adc
outsl
mov
ror
repz
ds
mov
push
cli
inc
pushf
shlb
pop
imul
push
cmp
and
mov
push
lock
cltd
mov
repnz
sti
movsl
test
shlb
xchg
pop
cmp
clc
mov
and
xchg
mov
repnz
sub
mov
inc
lahf
sub
icebp
nop
lock
or
imul
movsb
jmp
xor
scas
and
jmp
outsb
ljmp
inc
cmp
sbb
jno
add
popa
daa
and
ss
adc
aam
popa
push
cmpsb
out
push
not
sub
imul
sbb
pop
scas
jns
lret
insl
lahf
in
repnz
mov
add
or
fstl
les
aam
inc
jl
stos
fucomi
inc
icebp
scas
xchg
mov
out
fisubl
and
add
clc
scas
mov
jne
scas
pop
cld
push
mov
and
insb
xchg
ret
dec
jno
jo
add
in
arpl
out
inc
push
out
int3
lcall
adc
sub
mov
rcll
cmp
and
ljmp
inc
mov
aad
mov
add
add
stc
lds
sbb
sub
jne
leave
leave
mov
in
sub
hlt
insl
mov
es
lret
or
dec
js
fdivrs
str
push
xor
lahf
mov
outsb
dec
jl
stos
xchg
push
outsl
int3
mov
pop
int
loope
push
sbb
inc
mov
jp
lock
mov
mov
pmaddwd
push
out
outsb
xchg
sub
cld
test
mov
ret
adc
jmp
dec
clc
inc
arpl
jg
call
movsl
test
xor
rolb
aaa
cmpsb
andb
jo
pop
adc
into
pop
add
cmp
out
xorb
mov
int3
xor
mov
xor
lret
rolb
mov
mov
bound
pusha
xchg
rcrb
movsl
in
mov
jl
push
push
sbb
popl
jo
out
jge
jmp
pop
mov
sti
aam
inc
cmc
test
cs
lock
jmp
popf
test
ljmp
push
pop
shlb
pop
mov
popw
xchg
sub
in
sub
or
and
mov
push
lods
dec
mov
mov
ds
dec
add
stos
push
push
mov
pop
mov
mulb
pop
xchg
dec
data16
ret
dec
and
mov
xchg
jne
insb
loop
idivl
in
mov
cld
daa
jg
outsl
adc
or
jecxz
xchg
mov
out
dec
push
add
jl
mov
jl
mov
mov
rorb
mov
xchg
out
or
add
neg
push
mov
test
jecxz
xchg
mov
sub
jmp
fisttps
dec
nop
xlat
js
sub
or
test
cld
test
daa
sbb
loope
push
xor
test
clc
jbe
in
mov
sub
sub
outsb
movq
daa
sub
pop
inc
loopne
outsl
cmp
insb
nop
test
mov
in
bound
sbb
inc
jns
ret
mov
xchg
xchg
shl
out
cwtl
hlt
movsb
mov
push
jmp
or
add
cmpsl
dec
mov
fstps
fsubs
pop
cwtl
xor
mov
lods
pop
mov
xchg
pop
inc
sbbl
fs
pop
xchg
adc
enter
out
cmp
dec
xlat
ret
sub
push
sub
lods
mov
sti
add
pop
pop
inc
sbb
push
push
or
xchg
push
add
fdivr
xchg
and
nop
xchg
and
movsl
sti
and
add
add
aad
dec
ljmp
ret
dec
test
mov
pushf
ret
in
or
xchg
aam
push
or
popa
jnp
fidivrs
cmc
pop
sub
push
decb
sbb
insb
cmpsl
out
jae
xor
fs
push
pop
mov
dec
or
dec
jmp
loope
imul
sti
rcll
mov
int
cmc
call
lods
xorl
idivl
add
imul
call
xorps
mov
mov
adc
push
inc
sbb
shlb
pop
mov
or
out
lcall
xchg
jge
xchg
add
int3
add
xchg
jl
shl
repz
mov
mov
scas
out
imul
add
xlat
xor
add
jae
fwait
push
push
ret
sbb
hlt
idivb
imul
pop
pop
push
popf
jo
xlat
push
shl
loop
in
push
incl
sbb
iret
test
mov
mov
loopne
movsb
rcrl
loopne
xchg
cmc
jns
lock
lds
pop
jo
ret
xchg
lods
bound
jae
dec
sbb
and
hlt
xor
int
movb
xchg
add
xorl
mov
xor
mov
mov
je
in
pop
push
push
pop
pushf
fdivrl
stc
and
pop
inc
mov
insl
out
aas
mov
jmp
cmp
es
mov
out
lods
sbb
xchg
sub
jo
sub
insl
pop
pop
jnp
sbb
or
xchg
push
ret
mov
insb
push
insl
test
mov
inc
loope
adc
and
push
ja
clc
sub
pusha
outsl
div
xchg
je
add
icebp
std
jno
scas
push
out
add
mov
test
xchg
push
sbb
xor
out
push
push
inc
cmp
mov
mov
sbb
lret
test
mov
inc
dec
xor
xchg
jecxz
mov
jp
dec
cmpsb
adc
ret
fwait
push
sub
enter
mov
test
add
lods
jmp
aas
and
jmp
sub
cmpsl
xchg
push
pop
test
jo
scas
pushf
cld
cmp
pushf
mov
fdivl
mov
out
sub
fisubrs
or
cmp
mov
test
test
js
mov
lds
ds
sub
test
sub
and
je
sub
imul
push
lahf
test
jle
mov
or
rcll
cltd
ud2
into
pop
xchg
loope
sahf
mov
mov
fs
or
sub
jle
out
movl
mov
jl
sub
out
popa
pop
std
cwtl
test
fs
push
xchg
cmpsb
and
rclb
jmp
adc
mov
and
in
xor
cmp
xchg
or
mov
pop
and
addr16
mov
insl
xor
int3
add
mov
out
or
int
jno
cmpsl
cmovs
mov
arpl
stc
and
dec
bswap
mov
test
ljmp
jle
ds
mov
aaa
pop
out
aas
insl
in
mov
arpl
pslld
inc
pop
dec
lret
aam
js
fwait
scas
adc
cld
imul
push
nop
jbe
or
pushf
inc
out
adc
xlat
out
shlb
mov
fwait
in
xorl
daa
int
xor
into
les
rcrb
les
dec
pop
imul
idivl
jbe
pop
push
mov
test
push
fwait
sbb
rcrb
cmp
ss
xchg
test
xchg
icebp
imul
in
dec
std
mov
and
cmp
fwait
mov
clc
ds
jmp
add
insl
mov
ror
cmp
lcall
in
in
fsubs
cld
loope
clc
jg
adc
pop
and
adc
jmp
cmpsb
dec
incl
add
and
adcb
mov
lods
or
mov
or
outsl
int
push
cmp
ljmp
xchg
jge
test
in
xchg
cltd
jno
or
arpl
xchg
xchg
adc
jle
inc
mov
lods
xor
sub
rorl
pop
rcrb
test
fwait
mul
mov
outsl
stc
or
xchg
pushf
mov
popa
lods
and
cmp
cmp
mov
test
aas
ljmp
je
sub
push
setl
in
lock
push
ss
ja
mul
cmp
mov
daa
lds
sahf
adc
sbb
push
lods
mov
inc
mov
mov
lcall
xchg
pop
adc
je
inc
repz
sub
push
in
testl
repnz
divb
jg
sbb
push
lret
pusha
lret
mov
mov
push
lret
mov
dec
stc
dec
xor
adc
mov
daa
pop
adc
adc
xor
pop
jle
lahf
pop
cmp
mov
lds
ss
mov
das
inc
imull
mov
repz
xor
cmpb
pop
xchg
aaa
jbe
mov
push
imul
mov
sub
push
insb
adc
insb
outsb
pop
pop
sar
pop
test
add
rcl
daa
adc
nop
popf
int
das
cltd
jae,pt
mov
or
inc
lahf
push
and
cwtl
mov
xchg
test
push
xlat
cwtl
pop
cmp
xchg
clc
jb
test
and
push
mov
in
sbb
repz
loopne
lcall
fsubs
int3
cmp
mov
sbb
fs
jae
xor
shr
rcrl
sbb
mov
lods
je
mov
stos
or
push
test
jbe
dec
mov
jmp
dec
test
scas
mov
sbb
pop
adc
sahf
and
loop
mov
divl
out
jmp
jg
mov
jae
push
jb
jl,pn
xor
dec
cli
dec
adc
imul
dec
cld
cs
test
push
mov
roll
movsb
icebp
negb
pop
mov
mov
pop
imulb
ja
aad
add
rolb
add
add
xchg
jbe
jb
add
mov
sti
dec
ss
xor
and
in
ret
inc
or
jmp
rcr
mov
mov
sub
pop
sub
jns
arpl
cmp
ljmp
cmp
dec
mov
jno
lret
shr
fists
leave
cmp
andb
rclb
loopne
das
sub
negl
xchg
fists
lahf
sahf
or
mov
jl
jo
jbe
push
lahf
out
jmp
sbb
push
cmp
cwtl
push
mov
rorl
mov
ljmp
mov
and
mov
inc
int
incl
xchg
mov
inc
jne
inc
in
adc
add
add
jp
clc
rorb
mov
xor
popa
test
mov
outsl
adc
sub
sub
js
pop
insl
imul
loop
add
mov
lcall
jns
adc
imul
jp
sbb
jp
xchg
sbb
mov
imul
mov
or
dec
push
jg
arpl
repnz
cmp
pmaddwd
gs
fbstp
ja
enter
shlb
sti
pop
mov
xor
and
cmp
xlat
lea
sub
push
decl
mov
push
lds
sbb
push
stc
jb
sbb
mov
scas
mov
jb
ret
cmpsl
movsl
push
jg
fwait
cmp
int3
imulb
pushf
sub
adc
cmpb
rorb
and
out
sbb
call
xrelease
jl
fisubrs
pop
test
scas
loop
add
push
loope
cli
mov
insb
loope
jl
jg
push
out
xor
sub
add
and
loope
lock
das
mov
sbb
push
push
adc
mov
cltd
or
clc
das
dec
or
addr16
out
lods
in
mov
cltd
lcall
mov
imul
xlat
sbb
jno
in
sbb
or
insl
enter
lock
lcall
lods
pop
insb
ret
test
aad
out
aaa
push
add
xlat
push
psllw
loope
shr
jmp
mov
in
sub
cmp
xor
mov
cmpsl
push
push
jg
into
xchg
std
mov
inc
bnd
and
or
mov
add
in
outsl
hlt
or
es
cmp
cmp
pop
iret
push
in
jnp
push
mov
and
jmp
stc
divl
hlt
loop
mov
cmpsl
aad
mov
jle
mov
imul
scas
jecxz
cmpb
aas
cli
das
notb
mov
mov
adc
in
rcrl
mov
movsl
dec
add
in
ss
shrb
out
sbb
push
test
lret
shll
dec
daa
jnp
in
shll
adcb
loop
cld
cmp
cmp
notl
cmpsb
adc
jg
inc
outsb
mov
std
test
xchg
xor
hlt
lahf
jmp
sub
daa
jg
mov
and
insl
leave
fld1
pushf
bound
mov
push
rcll
xchg
cli
jae
xchg
ljmp
lods
mov
fucomp
into
jb
mov
push
imul
pop
js
fisubl
and
mov
inc
movsb
mov
adc
test
cmp
mov
aas
adc
sub
push
daa
in
popf
jbe
jp
insl
ret
sbb
push
mov
push
push
test
aas
in
mov
cli
std
jo
mov
push
add
pop
popa
jne
jecxz
pop
mov
stos
les
daa
call
bound
dec
pop
aad
decb
ds
jno
jmp
scas
stc
and
mov
mov
xchg
xor
mov
inc
and
pop
imul
dec
ljmp
ret
rol
mov
or
repnz
fsubl
icebp
pop
cli
mov
ret
and
outsl
stc
sbb
sbb
ljmp
js
mov
cld
in
lods
jecxz
cltd
hlt
pop
iret
and
xchg
sbb
sub
clc
sahf
jb
jp
ja
jmp
mov
lea
je
stc
adc
jmp
mov
sti
popf
popf
jg
cld
pop
mov
sahf
shlb
sbb
jb
xor
jo
lods
sub
js
incl
push
pop
jecxz
xor
jecxz
dec
arpl
outsl
jo
jmp
xor
jge
push
cmp
mov
fildll
jmp
pop
xor
out
and
andb
icebp
pop
js
sub
inc
fdivp
ja
or
mov
sub
xor
notl
roll
insb
push
xchg
xchg
repz
or
loop
push
lds
bound
daa
sbb
insb
push
cltd
xor
mov
mov
repz
cltd
in
mov
sbbl
clc
jne
lods
jg
std
std
lret
jle
xchg
and
cwtl
cmp
test
sbbb
jne
insb
xchg
or
aaa
mov
jbe
jne
pop
jge
and
jmp
inc
cmp
mov
push
adc
lret
push
sub
push
pop
jp
into
jg
lods
mov
fisttps
and
clc
pop
test
negb
pushf
hlt
fcmovne
xchg
mov
imull
repnz
mov
mov
mov
repnz
cmp
xor
jb
icebp
movsb
mov
xchg
rorb
xchg
pop
and
addr16
or
mov
xchg
add
pop
bound
shll
fadds
mov
mov
ds
shrb
or
cmpsl
gs
popa
out
xlat
lods
sbb
fs
jl
shrb
fs
inc
fs
pop
call
stos
js
scas
sub
mov
inc
sub
sbb
xor
fdivs
dec
pop
outsb
jge
fwait
jae
ja
pop
lods
cld
mov
jmp
bound
jae
iret
ljmp
push
dec
test
add
cwtl
outsl
out
clc
aas
aam
outsb
jmp
sti
mov
jg
add
mov
iret
stos
pop
idivb
icebp
mov
shl
movsl
sbb
mov
jne
cmpsb
xchg
xchg
cmp
sub
inc
aam
inc
mov
pop
jmp
jo
test
jb
sub
iret
mov
mov
in
cmc
icebp
fidivl
mov
lods
aaa
in
lock
pop
outsl
mov
gs
pop
out
mov
loopne
pop
xor
pop
push
jbe
mov
std
popa
dec
inc
movsl
test
les
dec
push
mov
cmp
testb
pop
fistpll
sub
xor
mov
nop
sbb
rcl
or
jns
xchg
imull
sbb
hlt
mov
test
loopne
dec
xchg
fdiv
add
jl
dec
mov
aam
repnz
sbb
leave
inc
push
sub
jecxz
addr16
or
lods
push
mov
push
je
sbb
stos
mov
xor
fiaddl
in
or
lret
mov
imul
push
loop
adc
mov
cs
cmpsl
mov
inc
and
sahf
xor
fildll
jl
ds
inc
dec
sbb
lcall
adc
ret
sbb
and
mov
pusha
enter
filds
lds
nop
jae
out
jnp
inc
scas
or
cli
xchg
xchg
sbb
pop
sbb
or
xchg
add
bound
inc
je
or
inc
mov
lods
lods
in
cmpsb
xor
mov
outsb
insl
movsl
push
jmp
mov
lret
jns
sub
les
stos
mov
shll
negl
sub
add
pop
data16
fsubl
insb
pushl
les
or
pop
gs
push
js
cmpsl
cltd
test
fs
je
test
dec
cmp
add
cmpsl
mov
xor
jae
aam
stos
rcrb
clc
jno
into
repz
jno
or
xor
pop
cmp
jae
nop
imul
add
jbe
or
pop
push
dec
sub
out
lahf
fwait
mov
inc
and
mov
lret
cmpsb
pop
jl
cwtl
daa
mov
sbb
adc
push
clc
aas
shl
sub
loopne
clc
cmpsb
idivl
and
add
xor
and
xchg
xor
jae
sub
add
mov
mov
lock
bsr
pusha
pop
dec
mov
xor
imul
gs
mov
cmc
stc
cltd
push
add
stos
into
rep
data16
or
mov
add
in
sahf
addr16
xchg
pop
pop
add
mov
andl
push
mov
push
jno
scas
mov
sarl
and
dec
dec
cmp
mov
les
push
xchg
sbb
addb
movsb
mov
cli
cmp
jle
xchg
mov
jg
mov
mov
push
rcpps
shlb
mov
and
pop
mov
cwtl
sahf
jg
mov
fbld
xlat
fstpl
jbe
mov
adc
xchg
outsl
into
inc
inc
imul
shr
bound
call
mov
mov
je
ljmp
ljmp
xchg
adc
sub
xchg
das
jne
mov
test
test
jp
arpl
aas
add
rolb
mov
in
dec
pop
pop
mov
push
mov
int
fisubrs
lea
sub
and
flds
or
mov
fstpl
sub
mov
icebp
jb
and
cmp
into
test
imul
int3
pop
rcll
in
mov
and
mov
and
mov
push
std
xchg
rorl
xor
xor
inc
sub
inc
fs
repz
dec
sahf
stc
mov
mov
lock
cmp
sbb
das
pop
fwait
push
aas
push
lret
mov
xor
inc
fists
inc
imul
adc
xchg
gs
sbb
aad
bswap
push
sbb
or
adc
aaa
jmp
sub
or
sbb
xor
popa
mov
mov
daa
mov
outsl
and
fs
jno
sbb
int3
push
addr16
mov
shl
dec
cmpl
pushf
push
dec
enter
push
inc
stos
push
sahf
out
bnd
jge
icebp
data16
loop
xlat
cmpsl
dec
data16
data16
test
and
rcr
push
mov
incb
aam
push
lea
adc
pop
outsb
xchg
mov
xchg
pop
adc
icebp
sub
cmpl
push
lret
test
jmp
push
push
lock
out
mov
fisttpll
mov
xchg
adc
pop
adc
cltd
xchg
sbb
xchg
mov
cli
adc
pop
loop
xchg
mov
movsb
lcall
xchg
nop
mov
int
fimuls
inc
xor
cmp
pop
and
xchg
cmp
adc
rclb
inc
mov
push
dec
and
sbb
imul
sub
mov
icebp
imul
push
mov
inc
das
add
aad
push
jl
adc
rorl
or
mov
mov
or
nop
adc
and
out
and
out
clc
cmp
add
sbb
xchg
jmp
les
mov
and
dec
or
sbb
sbb
add
inc
daa
mov
stos
mov
les
or
mov
enter
loope
lret
push
mov
movsb
pop
shrd
dec
pop
out
into
adc
stc
jmp
jns
xchg
pop
push
ja
mov
icebp
sub
inc
imul
stos
loope
sub
lds
push
adc
repnz
or
mov
aam
loop
sarl
xchg
and
or
mov
push
sbb
test
sbb
in
std
push
shl
push
pslld
xchg
push
ja
adc
je
fs
popa
jp
loope
pop
ficompl
pusha
push
loope
sub
inc
sub
cmp
mov
mov
adc
jecxz
xorl
jl
dec
inc
jmp
vmwrite
out
pop
xor
repz
fst
push
xlat
lcall
aaa
lret
or
sbb
aaa
cli
xor
xor
cmp
out
cld
xor
jge
jge
gs
dec
push
inc
lds
mov
pop
dec
jge
pop
sbb
dec
into
addb
lcall
jbe
and
push
xchg
mov
sbb
fidivl
add
xchg
adc
movsl
in
jge
int3
ret
jb
rcl
mov
lock
rcl
rcll
std
scas
stos
and
sbb
or
andl
sub
test
sub
add
lahf
jns
movsb
jg
testl
sbb
dec
cld
sbb
pop
push
mov
cld
cmp
add
cmpsb
iret
xchg
and
sbb
ja
pop
bound
xor
js
cs
stc
dec
jne
or
sub
push
sub
sbb
pop
lds
outsb
push
insl
rclb
xchg
incl
sub
lret
scas
inc
push
cmp
fnsave
xor
ret
add
adc
mov
repnz
sbb
outsl
sbb
fstps
add
add
add
fildll
in
cmp
dec
mov
cli
aaa
dec
adc
mov
into
sbb
or
je
dec
sbb
arpl
push
or
jno
popf
pop
test
mov
sahf
addb
mov
out
sbb
adc
or
inc
push
xorl
push
das
push
aas
and
in
sub
xor
fwait
and
lods
jmp
lret
xchg
xor
pop
ds
pop
sub
inc
out
test
fcoms
sbb
mov
sub
dec
jo
sbb
imul
xchg
outsb
ja
inc
iret
je
xchg
xor
sbb
lret
clc
pop
mov
mov
push
pusha
adc
pop
mov
test
pop
sbb
lahf
cli
mov
add
test
ljmp
test
sbb
ja
dec
push
sarb
mov
push
sub
je
sub
shlb
fdivrs
cmp
int
or
cmpsl
xchg
cmp
mov
js
inc
sub
adc
push
iret
mov
and
or
jnp
push
cmp
mov
rcll
repz
mov
popf
ljmp
dec
or
cmc
pop
mov
lcall
ja
jae
fldl
aaa
addr16
pushf
dec
mov
mov
sbbl
jae
jge
add
jbe
mov
sbb
cwtl
lahf
mov
mov
scas
in
adc
pop
fwait
xor
into
sbb
insb
mov
cmpsl
cli
sbb
cmp
xchg
push
inc
cmp
or
test
inc
jle
jb
ret
jg
inc
xor
or
and
pop
fs
hlt
test
fidivrs
cmpsl
cli
ret
cmpsb
sub
loope
sbb
lahf
filds
or
jge
dec
in
adc
insb
cmp
js
dec
inc
arpl
mov
lock
add
cmp
add
sub
aaa
lods
dec
mull
mov
inc
cmpsb
mov
dec
push
xor
dec
add
sti
pop
jb
jb
cltd
pop
adc
mov
mov
pop
out
insl
jecxz
mov
out
je
or
ret
cmp
xor
mov
xchg
inc
xor
push
loop
xchg
sub
sahf
inc
add
mov
shlb
and
push
mov
movsl
sub
sbb
faddl
xchg
xor
int3
adc
xor
scas
adc
mov
xchg
or
in
cmp
pop
mov
mov
sqrtps
and
inc
fcmovu
sti
int
test
iret
sbb
ljmp
sub
sbb
jecxz
push
mov
and
cmp
xchg
sbb
stos
into
imul
mov
cmp
lock
fiaddl
mov
push
icebp
sub
out
adc
pop
pop
xchg
xor
xchg
add
scas
inc
push
ret
icebp
sub
inc
inc
out
add
iret
into
pop
xor
fwait
sub
int
loopne
jl
or
cmp
xchg
shl
outsb
xchg
subb
adc
mov
repz
xchg
pop
jne
ficomps
adc
push
lea
ficoms
ljmp
cmp
jp
cmp
in
jl
jmp
mov
rol
jmp
mov
fimull
sbb
pusha
out
js
mov
xchg
dec
imul
dec
sub
int3
jge
pop
mov
pop
or
int
pop
jl
xchg
jmp
dec
jno
enter
jno
add
pop
inc
pop
pop
fstpl
arpl
divb
dec
xlat
adc
mov
pop
mov
lahf
rcr
push
mov
xor
pushf
pop
sti
adc
mov
fisttpl
jbe
lea
xor
push
cmp
dec
ret
lret
push
fisubrs
out
addl
cwtl
les
addl
mov
inc
adc
pop
push
data16
fldl
rcll
jo
mov
sub
test
ds
lods
dec
mov
cmpl
fadd
inc
mov
out
mov
pop
out
xor
push
cmc
jnp
jmp
shrl
cmp
test
popf
inc
push
push
call
stc
mov
mov
inc
push
add
hlt
pop
out
push
jmp
loop
mov
bound
inc
add
popf
sub
in
test
push
jle
movb
mov
inc
mov
push
je
pop
push
cmpl
jmp
popf
sbb
sbb
sbb
movsb
mov
mov
jmp
dec
and
mov
sbb
mov
test
rcrb
loope
mov
sbb
imul
imul
pop
pop
or
xor
outsl
jg
mov
stos
pop
mov
sbb
and
les
nop
arpl
mov
popf
mov
mov
fcoml
adc
push
dec
mov
xchg
fmull
push
sbb
out
add
sub
adc
mov
and
inc
or
sbbl
jg
pop
sbb
aas
inc
fwait
push
nop
xor
pop
and
adc
add
cmp
shl
sub
ret
inc
xchg
pushf
repz
lock
neg
cmp
in
outsb
dec
push
cmp
xchg
cmpsb
rolb
jo
push
fidivrs
fsts
xchg
into
fisttps
mov
mov
mov
lods
in
sub
xchg
sub
ret
inc
mov
popl
xchg
jecxz
insb
mov
mov
pop
dec
mov
add
test
mov
call
rorb
push
lahf
ret
sahf
adc
outsb
push
xor
loope
rorl
jne
adc
test
cld
cmc
arpl
in
pop
cmp
cmp
out
loop
arpl
movsb
mov
int3
add
int3
cltd
xlat
push
push
test
push
jecxz
or
jg
jnp
add
add
iret
int
xor
push
addr16
mov
mov
dec
test
stos
movsl
sbb
xchg
sub
arpl
pop
pop
jae
test
mov
dec
push
xchg
or
loopne
nop
rcrl
xchg
out
scas
add
xchg
sbbl
and
inc
mov
mov
push
inc
ret
mov
int
loope
lret
cs
pushf
fcomip
mov
lcall
and
mov
adc
orl
call
je
adc
out
xchg
push
mov
fucom
repnz
pushl
arpl
enter
data16
ss
inc
and
sub
push
push
bound
loope
das
outsb
jmp
aaa
stos
in
push
sbb
imul
or
sub
outsl
mov
mov
and
jo
jmp
xor
pop
sbb
int3
es
xor
add
and
push
movsw
adc
incl
mov
mov
mov
rcr
icebp
adc
loopne
mov
mov
out
loopne
sbb
cs
pop
rcrb
in
mov
aas
fidivrs
rcrb
out
push
movsl
popa
ud0
jle
mov
jns
cltd
and
das
fisubrl
imul
xchg
dec
cmp
sbb
mov
ficomps
lret
mov
adc
retw
lret
mov
or
pop
sbb
or
xor
imul
cmpsl
push
dec
stc
push
inc
sbb
mov
stos
lret
xchg
leave
adc
iret
in
subb
test
mov
pop
roll
or
fdivrp
outsl
cltd
lods
mov
in
mov
int3
sub
fsubl
cmpsb
outsb
dec
inc
mov
cmc
pop
outsl
test
push
push
in
sub
sbb
fisttpll
js
xchg
fcompl
out
iret
into
fnstsw
xchg
xchg
negb
xchg
nop
dec
out
sub
ds
icebp
xor
les
daa
test
push
or
pushf
xlat
xor
lahf
dec
in
jmp
decb
xor
shl
adc
aam
aaa
inc
int
and
loope
popf
push
sti
jo
shlb
add
fistl
xchg
and
inc
pcmpeqd
inc
mov
daa
lcall
cmp
call
pop
imul
cs
inc
gs
ficomps
cmp
andl
cmpb
sbb
rcrb
pop
fiadds
daa
pop
jo
xor
mov
loopne
pop
dec
dec
xchg
push
pop
jbe
cmp
out
imul
cli
jl
vcvtsi2sdl
in
dec
mov
lock
pushf
mov
popf
mov
fwait
jb
insl
pop
ret
mov
sbb
adc
mov
loopne
xchg
andb
ret
mov
xchg
test
shll
sbb
inc
fdiv
testl
xchg
push
out
jle
or
stos
jecxz
add
incb
mov
insl
dec
adc
lock
mov
in
sbb
pusha
andl
clc
cltd
scas
xchg
sbb
push
or
pop
push
leave
mov
ja
cwtl
vmovd
jle
adc
and
pop
in
decl
sti
pusha
push
pop
aaa
pop
jmp
fwait
and
push
jp
xchg
test
jmp
pop
jp
xchg
loop
jg
jmp
movsb
sbb
sub
mov
je
dec
fisubs
scas
cmp
dec
lods
mov
je
nop
sub
pop
pop
jne
sbb
sub
sbb
enter
add
add
into
cld
or
mov
shl
aad
xchg
shrl
enter
mov
xor
repz
dec
stos
aad
imul
test
shlb
imul
in
lds
lret
ror
xchg
mov
inc
and
rcr
movsl
xchg
fidivs
add
rcrb
xchg
sub
mov
jl
dec
ds
push
mov
pop
int3
jp
jo
cmp
and
fisttps
xor
cmp
jp
jbe
xchg
sbb
sti
ret
insl
pop
sbb
add
cmp
fnsave
aaa
outsb
jb
movsl
fnstcw
daa
repz
in
xlat
movsb
pusha
pop
cmc
xchg
and
pop
aas
inc
fildll
xchg
hlt
cmp
xlat
stos
sbb
mov
jnp
mov
adc
xchg
cli
hlt
sbb
inc
scas
outsb
inc
les
adcb
mov
jecxz
push
push
daa
cli
jl
lgdtl
add
add
call
je
mov
lret
lods
jge
ret
das
hlt
dec
stos
and
mov
cmpsl
cld
lock
xchg
pop
sub
sahf
das
sti
cmp
jns
xchg
subl
push
jge
mov
and
jns
pop
sbb
push
subb
cmp
fsubrl
push
xchg
dec
mov
inc
cmp
cmpb
fisttpll
aad
xchg
jne
das
cmpsb
sub
xchg
lret
unpckhps
push
fcoms
xor
insl
or
scas
dec
mov
pushf
pop
pop
inc
fdiv
lods
mov
fs
ja
lret
and
jnp
shr
xchg
sbb
icebp
jl
std
jle
and
inc
mov
adc
dec
mov
mov
test
and
pop
mov
out
xor
sub
cwtl
outsb
inc
jnp
or
jae
icebp
mov
popa
cmp
shll
iret
test
mov
imulb
jle
jl
cmp
add
test
pop
mov
mov
add
xor
sbb
and
mov
mov
pop
adc
cltd
or
add
testb
cmp
xor
aam
mov
cs
jmp
mov
push
scas
loope
jp
lahf
mov
insl
ret
test
xchg
push
xor
call
dec
dec
jecxz
call
adc
enter
dec
mov
stos
int3
pop
pop
movl
pop
push
xchg
scas
push
clc
aaa
pop
lcall
lret
iret
test
add
push
or
lds
jmp
std
xchg
xchg
loop
or
mov
mov
rolb
mov
sbb
mov
fucomi
sub
mov
adc
fisubl
aas
scas
stos
ret
push
mov
xor
adc
loop,pn
adc
call
push
jg
dec
dec
pop
lret
scas
fmull
fmuls
test
or
jecxz
cmp
dec
sbbb
xlat
sub
jp
dec
mov
movsl
std
cli
lea
leave
in
mov
test
mov
arpl
hlt
shl
xchg
subl
jne
dec
insb
cmc
repz
inc
ficompl
jns
cmp
cmp
gs
loope
pushf
mov
pop
lock
cmp
xchg
lock
inc
inc
faddl
add
hlt
mov
movaps
jge
sub
in
lahf
push
fisubrs
cmp
push
outsl
sub
sub
and
lret
push
rolb
cli
cmpsb
jno
mov
add
mov
jge
dec
scas
cmp
jecxz
out
adc
xor
add
stc
cmp
mov
out
andl
addr16
cmovbe
outsb
insl
cli
or
stos
int3
bound
inc
ljmp
out
sub
mov
inc
jne
sbb
add
pop
push
and
pop
sarb
adc
bnd
in
cltd
jns
or
sub
mov
lds
jg
outsb
enter
dec
das
aam
jp
pop
sbb
lods
popf
push
mov
sbb
lds
jnp
jp
aaa
dec
int
test
jb
inc
mov
sub
and
adc
jns
mov
pop
sahf
push
mov
jbe
adc
or
inc
fimull
ficomps
push
jo
pop
sbb
adc
shrb
test
arpl
repz
stos
ljmp
roll
inc
jo
adc
hlt
in
repz
dec
jne
cmpsl
and
cmp
bound
xchg
mov
cmp
inc
ds
cs
xchg
pop
and
pop
xor
sub
pop
push
dec
push
jle
mov
shl
or
pop
fwait
into
or
fwait
lea
lahf
xor
pop
mov
incb
mov
mov
cmp
dec
movsb
mov
sbb
in
and
das
mov
fstpl
sbb
lods
lock
lock
dec
pop
in
pushf
xchg
jmp
aam
aam
and
xor
sbb
scas
mov
popa
xor
mov
dec
ret
jne
or
push
mov
into
jecxz
in
out
clc
aas
dec
movsl
xlat
jnp
ds
mov
dec
shlb
hlt
cmpsb
jns
mov
cltd
jo
dec
mov
pop
adc
mov
das
fsub
jno
je
out
push
popf
hlt
sub
xchg
jb
aaa
sub
xor
lods
push
gs
add
mull
lret
pop
lods
pusha
lcall
xchg
xor
xor
pop
sbb
mov
mov
mov
outsl
cmp
loop
pushf
push
aam
and
mov
cli
xchg
mov
rol
pusha
or
cmp
cmpsl
movsb
jecxz
mov
lret
jmp
inc
js
ja
in
iret
lods
clc
lods
jecxz
pusha
cmc
pusha
negl
dec
fwait
pop
cmp
cltd
jbe
aam
scas
adc
add
insl
out
call
fimuls
repz
pop
jg
mov
out
sub
xchg
lock
pop
push
faddl
imul
aad
sub
jo
sub
ds
push
clc
insl
push
cmp
push
dec
xchg
or
aaa
jbe
xchg
or
mov
ja
mov
fwait
jne
sub
mov
jg
push
aas
push
scas
mov
fucom
jnp
xor
mov
inc
or
mov
data16
jle
push
inc
dec
and
push
cmc
ds
xlat
repnz
jae
jp
xchg
and
mov
cli
jnp
mov
mov
nop
sahf
jnp
imul
test
fwait
popa
bound
sub
outsl
adc
xor
push
in
mov
inc
idivb
daa
mov
aas
int
imul
cmpsb
out
ds
test
inc
mov
movsl
mov
notb
dec
cld
push
flds
jno
cmpsb
mov
mov
sbb
stos
sar
call
sbb
fildll
mull
andb
add
mov
daa
imul
ljmp
fidivl
arpl
lds
nop
aas
arpl
aaa
in
xor
push
ret
add
jmp
loope
test
fistl
sub
add
out
rcl
jmp
lahf
data16
sub
add
hlt
mov
xor
shlb
lock
and
lds
sub
sub
and
out
push
ss
xor
stc
pop
push
mov
sbb
jg
jle
add
cmp
clc
cld
jno
ljmp
xchg
test
jns
les
cmc
pushf
rorb
ficompl
imul
aad
std
mov
xchg
sbb
xchg
pop
fnstsw
xor
repz
in
xchg
mov
gs
clc
mov
jge
xor
call
sbbl
mov
addr16
jg
mov
in
lock
xorb
sbb
out
mov
jmp
and
jbe
mov
out
and
push
sbb
ds
inc
inc
and
lods
aas
sbb
pop
imul
add
insb
inc
xchg
or
and
in
mov
sub
cmp
addr16
mov
xchg
aad
ja
out
insb
scas
mov
mov
jg
fsubr
sub
insb
outsl
testl
jecxz
mov
pusha
loopne
fs
imull
xor
adc
xor
repz
rol
lods
lods
pop
mov
and
adc
pop
sub
stos
mov
movsl
push
test
fistpll
mov
mov
ucomiss
jbe
cmc
xchg
jnp
sub
jecxz
inc
mov
in
push
xor
loopne
imul
cmp
testb
mov
gs
adc
cmp
not
push
mov
je
pop
enter
jns
mov
das
cmp
loope
mov
imul
fisubrs
adc
dec
cmpsl
loop
ret
xor
repnz
sbb
jg
das
ret
xchg
or
xor
inc
jno
lea
movsl
mov
decl
jo
jecxz
bound
imul
mov
sub
je
cli
test
mov
fisttpll
or
mov
xlat
dec
repz
inc
mov
test
cmpsb
out
push
mov
push
jecxz
mov
or
jecxz
jnp
stc
dec
push
ret
loope
decl
inc
imul
cmp
xor
pusha
xlat
cmp
ret
repnz
sbb
shlb
ret
sub
bswap
hlt
xor
mov
jo
or
in
sub
sub
inc
add
in
in
cmpb
jbe
xchg
addr16
cmp
cmc
cs
adc
adc
xor
out
sub
outsb
xchg
push
repnz
loop
clc
mov
push
push
jp
imul
or
es
mov
scas
cs
clc
in
adc
insl
mov
int
or
ss
push
hlt
or
in
and
push
cmp
call
and
aam
test
repnz
sbb
rorb
mov
repz
jae
cmp
jnp
sub
dec
sub
sbb
cmp
js
pusha
mov
cwtl
insb
pop
xor
xor
scas
cltd
xlat
mov
cmpsl
cmp
push
fucomi
jno
cmpsb
mov
add
sar
jecxz
nop
lret
mov
jl
movsl
mov
mov
jne
dec
shr
sub
push
jmp
cmp
inc
mov
mov
adc
and
push
jb
or
bound
mov
push
push
outsb
orb
out
out
xchg
cmpsl
outsb
adcb
jecxz
add
and
notl
js
mov
movsl
jp
mov
pop
and
outsl
pop
pusha
push
lahf
or
negb
js
ss
cmp
inc
and
cmp
sbb
cmp
xor
jmp
cmc
lret
enter
adc
int
insb
jne
negl
ss
out
sahf
aad
sub
push
jmp
fmuls
out
pop
jbe
nop
stc
imul
test
inc
outsl
pop
and
cmp
loopne
jecxz
clc
pop
aam
push
popa
lret
and
jle
xor
or
lret
movsl
sub
sar
dec
push
or
push
fsubr
into
repnz
test
scas
es
pmaxsw
add
jnp
loope
lcall
jmp
mov
in
loop
push
cmpsl
jno
push
rcrb
sbb
mov
pop
adc
cmp
out
insl
adc
pop
nop
pop
sarl
xchg
push
movsb
add
test
xor
push
enter
fidivl
pop
dec
lds
clc
add
sbb
cmp
push
call
dec
pop
jmp
xchg
jnp
sub
cld
bound
movsb
mov
nop
mov
lcall
mov
adc
push
inc
shrb
loop
cmp
or
lcall
insb
inc
lahf
xor
fildll
jl
scas
push
add
push
xor
lcall
stos
dec
jg
mov
ret
fistps
sub
ret
jae
mov
flds
enter
fs
mov
lcall
dec
pop
adc
xor
stc
and
sarl
cwtl
fimull
sti
sbb
pop
mov
jmp
push
pop
arpl
cmp
ret
adc
or
mov
mov
pop
loop
add
or
xor
pushf
aaa
xchg
mov
or
das
mov
in
jno
sti
and
jbe
push
cmpsl
shll
rep
mov
insb
cmp
shld
pop
lods
ss
and
sub
dec
jmp
cld
jge
jo
lahf
sub
ds
sarb
mov
lods
push
sti
rcr
adc
mov
mov
rcl
sub
fs
push
adc
test
aad
test
mov
jmp
shll
add
xchg
xchg
mov
loope
data16
sub
ljmp
sub
lret
and
cmpsb
ret
sti
and
push
out
repz
dec
je
sub
sbb
enter
inc
hlt
shl
xor
xchg
xor
fildl
or
push
mov
out
addr16
out
aaa
xchg
test
loopne
pop
gs
roll
in
dec
loop
pop
inc
mov
inc
jmp
jne
jg
cld
sub
pop
fs
mov
scas
mov
lret
fidivl
mov
stc
mov
insl
bound
sbb
outsl
jmp
add
movsb
add
sbb
cli
sbb
leave
sbb
popf
cltd
leave
jg
push
pop
inc
adc
and
int
and
into
stc
push
cmp
push
xor
loopne
mov
jmp
insb
dec
push
dec
movsb
insl
fisttps
xor
cmp
insl
cmp
push
cmp
lret
xchg
shll
loop
daa
xor
aad
jg
scas
imul
mov
xor
mov
addr16
sbbl
push
fcomi
jmp
xor
sbb
jecxz
ror
aad
push
mov
jmp
ficoml
add
movsb
out
dec
xchg
cmp
cld
loope
pushf
rcrl
imul
pop
inc
add
sub
add
aas
loopne
xor
mov
repnz
jmp
mov
pop
add
xchg
jo
inc
stos
rcrl
dec
mov
into
adc
lods
sbbl
outsl
insl
iret
jmp
data16
iret
int3
xor
dec
pop
mulb
mov
int3
fidivrl
pop
cmc
ja
int3
or
mov
lock
xchg
adc
je
add
jnp
sarl
adc
ja
cmc
shl
push
rcr
mov
push
loop
dec
icebp
dec
ret
xor
bts
sub
and
jo
cmp
mov
push
repnz
push
sbb
sar
aad
adc
adcb
pop
xchg
jp
pop
push
push
sbb
xchg
jns
mov
scas
push
mov
test
scas
divl
mov
mov
pop
mov
cmp
and
testl
test
loope
test
sbb
push
nop
jb
jne
sbb
cmp
lea
mov
ret
ss
or
ret
or
adc
sub
cmp
and
xor
mov
subb
aam
or
xchg
fsubrs
test
imul
aad
shlb
or
or
mov
or
je
mov
pop
sub
inc
dec
adc
fs
cltd
jns
rclb
sarl
push
push
cmp
or
mov
sbb
xor
add
mov
cltd
add
xor
loop
add
mov
movsl
or
and
test
imul
dec
or
sub
outsl
ljmp
and
or
test
jbe
das
mov
aam
xor
imul
adc
lds
jl
call
jae
into
neg
and
push
pcmpgtb
cs
xchg
cmc
xchg
mov
mov
push
push
sbb
cltd
aaa
adc
imul
shrb
sbb
dec
jmp
outsl
xchg
and
inc
sub
pop
repz
cmp
jmp
repz
sbb
mov
popf
mov
incb
mov
jge
jo
dec
sti
sarl
shll
sub
movsl
xchg
adc
shl
mov
in
push
add
push
jecxz
iret
outsl
pop
scas
mov
lret
and
aam
dec
movsl
loopne
push
ret
fisubl
idivl
loopne
inc
rorb
sahf
mov
pusha
test
stos
mov
dec
lods
fincstp
insb
xchg
cmp
dec
add
lea
std
push
add
inc
cli
mov
icebp
scas
imull
cmpsb
imul
cwtl
imul
jo
mov
inc
imull
xor
jg
aam
cmpsb
cli
mov
pusha
lods
jmp
out
test
cmp
mov
loop
popa
int
xor
stos
jbe
hlt
xchg
aam
cmp
fs
and
push
addb
lock
sahf
and
popa
mov
pop
das
int3
in
xlat
imull
imul
dec
lea
pop
xor
fwait
stc
lods
scas
cmpsb
dec
jno
dec
jp
push
mov
dec
stc
arpl
stos
mov
cmp
lcall
jecxz
adc
lret
xchg
cwtl
repz
popa
lahf
ljmp
bound
leave
mov
or
loope
sbb
mov
fimull
mov
repz
arpl
cmp
in
int
and
mov
fisubs
push
mov
sub
jmp
sbb
cmp
pop
stos
mov
cmp
insl
lret
mov
xor
jbe
add
mov
cwtl
push
push
or
mov
rcrl
stc
data16
xor
std
call
adc
scas
ret
cmp
sbb
mov
or
lahf
in
pop
mov
sbb
jb
aam
test
mov
or
iret
or
in
push
fdivs
sub
sub
clc
xchg
cmpsl
loope
ss
push
fs
and
sub
mov
jp
mov
outsb
mov
cld
loopne
int
sti
ja
fwait
js
pop
mov
cmpsl
add
les
cltd
cmp
rorb
out
int
pop
or
repnz
leave
pop
mov
cmp
jno
testb
inc
orl
xchg
aam
bound
ljmp
sti
xor
cwtl
pop
les
leave
sbb
xchg
add
test
popa
test
mov
jmp
pop
dec
adc
out
mov
jb
pop
hlt
insb
inc
fisttpll
xchg
mov
sbb
or
orl
xor
cmpsl
icebp
cli
mov
cmpb
xchg
and
mov
add
fists
jp
fstl
cmp
test
adc
add
inc
jecxz
pop
push
test
insb
or
mov
lds
loopne
mov
xchg
movsb
mov
push
mov
sbb
cs
add
add
sub
dec
push
sbb
adc
lods
cmp
pop
or
and
subl
in
or
push
aad
pop
mov
pop
fildl
scas
shr
test
add
sbb
dec
lret
sbb
and
mov
shll
xor
jae
or
add
add
xor
mov
fists
jo
or
sbb
aas
icebp
pop
xor
enter
mov
mov
xor
ret
lock
mov
out
push
repnz
mov
ret
lods
fbstp
sbb
pushf
xchg
sub
lea
xor
xchg
cli
insl
lock
mov
repz
mov
aad
jne
ljmp
push
cmp
std
lods
dec
in
adc
leave
add
in
push
xor
pop
xor
into
es
cmc
test
xor
fisubrs
and
std
adc
leave
addr16
cwtl
insb
into
push
xchg
popa
adc
fdivrs
pop
out
mov
jp
jge
loope
xchg
xchg
jnp
rorb
nop
lcall
call
enter
mov
data16
xchg
sub
pop
inc
cmpsb
mov
mov
xchg
sar
mov
add
movsb
mov
dec
aaa
mov
insb
dec
or
test
popa
or
mov
xlat
xor
ret
mov
cmp
sbb
push
xor
xchg
fistpll
mov
rol
lods
pop
xor
leave
mov
cmp
inc
fidivrs
xchg
loope
scas
inc
cmp
cli
jmp
fs
xorb
stc
dec
jl
jmp
cmpsl
mov
pop
repnz
aas
mov
inc
sti
lret
ja
sub
inc
xor
lahf
lcall
pop
inc
stos
cld
push
adc
popf
push
jl
je
mov
daa
mov
mov
and
mov
push
faddp
add
cmpsb
jg
sarl
add
mov
nop
dec
and
xchg
outsb
int
test
aad
in
cwtl
and
sub
fidivrl
les
sub
xor
and
and
sahf
sbb
mov
ret
xlat
fisubrl
sbb
daa
sbb
loope
pop
repnz
inc
jp
xchg
test
sub
push
in
add
jl
add
lahf
mov
insl
addb
push
xchg
cmp
sbb
dec
pop
cld
mov
inc
xchg
in
adc
push
rorl
mov
inc
cmp
call
and
push
test
jo
mov
xorb
pop
scas
les
add
testl
xchg
dec
lea
inc
inc
popa
cvtpi2ps
mull
xor
xchg
cmp
jecxz
adc
sub
jno
lcall
mov
cmp
out
xchg
dec
jge
pop
imul
outsl
xchg
fbstp
sti
jb
shrb
int3
movsl
jp
dec
sub
lods
push
repnz
jo,pt
pop
add
aaa
sub
add
mov
add
into
lret
cmp
pop
cli
mov
push
lea
leave
pop
add
out
mov
xchg
in
jl
mov
adc
sbb
jle
fists
jne
adc
adc
xchg
fwait
mov
cmp
loope
nop
push
cmp
pop
mov
scas
out
dec
inc
in
mov
mov
sub
ja
lret
pushf
mov
daa
cltd
in
scas
sub
jg
in
mov
fcmovbe
mov
add
lock
test
xor
lods
test
loope
adc
xchg
daa
jge
mov
push
movsl
mov
popa
test
jecxz
loopne
pop
fsubs
cmpb
rcll
dec
das
fcompl
repz
mov
movsl
or
adc
xorb
fistpll
jmp
int3
pop
test
mov
clc
aas
ret
xor
icebp
cmp
inc
jnp
mov
dec
mov
mov
rcrl
pop
sub
mov
pop
mov
push
xor
pusha
popf
mov
jle
bound
arpl
pop
lods
data16
dec
dec
test
lea
cld
pop
mov
in
dec
pop
xchg
cmp
sub
xchg
daa
into
jb
fsubrs
xchg
mov
addb
pusha
sub
mov
test
jbe
xorl
imul
mov
xor
repz
repnz
jb
ret
lahf
repnz
repnz
aaa
fs
ret
pusha
push
insb
jns
jecxz
dec
out
scas
or
adc
aad
and
jne
add
jns
and
daa
out
out
fwait
add
cmp
mov
aam
mov
sub
xchg
mov
arpl
bound
repnz
xorb
sahf
sti
into
rorl
jne
mov
mov
gs
sub
ss
ja
mov
push
mov
dec
lods
sbb
and
test
mov
cwtl
jge
ret
ljmp
rorb
repz
in
out
hlt
jmp
movsb
clc
xor
insb
add
inc
or
ss
out
inc
filds
xchg
shlb
jns
mov
mov
je
cmpsl
pop
jge
adc
sbb
xchg
and
push
adc
into
pop
sbb
push
out
repnz
icebp
lcall
pop
sbb
stc
cs
jl
sub
mov
push
insl
imul
pusha
loop
jmp
mov
pminub
mov
mov
jg
inc
fisubrl
outsl
daa
cmp
jae
sbb
aaa
hlt
sbb
das
sub
sub
mov
out
jne
add
arpl
jl
loope
shrl
repnz
xchg
mov
loopne
aas
sbb
gs
mov
imul
mov
xor
stos
adc
test
cmpsb
mov
je
lret
mov
push
dec
inc
sub
fldenv
sub
mov
mov
pushf
lretw
mov
rep
dec
jnp
dec
into
and
or
push
jge
dec
add
lcall
adc
push
jge
sub
sub
mov
sti
mov
add
add
push
xor
adc
mov
sbb
ret
ljmp
push
cmpsb
adc
pushw
mov
shll
push
andl
push
cltd
sub
insb
mov
mov
stos
jecxz
pop
push
and
mov
out
mov
inc
jp
jp
clc
sub
out
imul
xor
pusha
jb
pop
dec
shl
daa
xor
pop
dec
leave
sub
and
test
xor
out
mov
cltd
repnz
or
sub
add
in
test
pop
aas
mov
sahf
fisubrs
push
test
test
adc
loop
shlb
pop
js
outsl
add
mov
jecxz
data16
insl
repnz
xchg
daa
ja
loop
sub
dec
jge
add
jnp
je
in
mov
lahf
mov
enter
movsl
sub
xor
mov
jp
aad
call
mov
mov
jg
call
sub
or
adc
dec
pop
aas
jnp
push
push
sub
mov
fsubr
lods
pop
fldenv
jne
in
imul
dec
cmc
hlt
or
jnp
cmp
test
or
dec
mov
iret
jecxz
insl
sbb
test
or
shl
inc
inc
cmc
mov
adc
ss
mov
lods
sub
inc
das
test
stos
out
mov
jp
arpl
pushf
dec
sbb
push
mov
ljmp
dec
je
cs
cmp
dec
xor
mov
inc
dec
fwait
cli
scas
or
cmp
adc
sti
add
pop
loopne
sbb
test
lods
repnz
sti
fnstsw
repz
aas
stos
mov
pushf
fld
cmp
in
adc
stc
nop
mov
xor
lods
js
mov
mov
adc
jp
jle
sub
das
test
cmp
jae
cmp
repnz
fildl
add
hlt
mov
jae
push
leave
mov
sahf
notb
jbe
xchg
sub
mov
xchg
mov
aad
add
mov
nop
push
repz
fucomi
or
js
jae
sub
mov
movsl
jp
ds
jnp
dec
out
inc
push
insl
imul
lods
cmp
xchg
xchg
popf
mov
int
add
call
or
lea
aad
data16
mov
cmp
call
dec
testb
std
out
adc
stc
stos
pusha
sbb
loope
mov
test
insb
pop
aad
aaa
lock
mov
fsubs
cmp
fisubs
sub
push
mov
dec
add
mov
xor
cli
mov
pop
cmp
mov
xchg
fs
inc
in
stos
push
mov
inc
push
cmp
aad
out
jbe
mov
cmp
hlt
insb
and
cltd
fsincos
test
mov
icebp
add
dec
std
fnstcw
lret
and
adc
fisubs
mov
xor
mov
inc
add
inc
pop
popf
cmp
jle
pop
outsl
mov
dec
test
addr16
scas
out
jge
icebp
adc
fisubl
aas
call
fdivr
dec
sbb
js
xor
lods
inc
or
add
movsb
aaa
imul
ss
xchg
adc
sbb
push
jo
sti
dec
jl
fildl
xor
rclb
xchg
mov
imul
xchg
cld
mov
xchg
or
dec
mov
call
lock
pop
xor
loope
mov
psubd
add
test
sbb
jns
in
arpl
js
mov
loope
mov
mov
add
add
daa
dec
std
dec
mov
frstor
sbb
sub
daa
add
lock
lcall
in
popf
jecxz
imul
out
pop
test
mov
xchg
std
lods
xor
and
sbb
into
jge
icebp
popa
mov
movsl
sub
cmp
mov
mov
insb
push
jmp
xor
mov
loop
jmp
test
dec
add
and
in
lahf
or
sti
add
or
jnp
popa
scas
sahf
push
cmpl
popf
sub
mov
scas
and
sub
cmpsb
xor
push
sbb
jg
out
scas
push
cld
inc
sub
dec
xor
sbb
push
faddp
xor
sub
bound
les
int3
or
cwtl
or
mov
cld
mov
cltd
ja
stc
pushf
xchg
fnstsw
stc
fnstenv
into
out
lods
subb
xor
mov
adc
add
add
loope
in
push
mov
ret
int
inc
sub
pop
cmp
pop
cli
fistpll
stc
inc
in
addb
data16
aaa
sbb
xchg
push
xchg
in
jmp
jmp
push
rolb
andb
sub
sbb
mov
pop
cmpsl
scas
dec
dec
ficomps
add
gs
testb
imul
gs
repnz
test
pop
or
mov
cmp
add
addr16
pop
les
sti
xchg
sub
cmp
cmp
iret
jae
test
jecxz
cmp
rolb
dec
jae
repz
fidivs
inc
mov
and
push
xchg
in
jmp
sbb
test
pop
mov
and
xor
fsubl
in
cmp
pop
mov
movsl
and
lock
and
jge
sub
push
rcr
scas
jae
in
sbb
sub
push
ljmp
aas
outsl
xchg
insl
push
out
jg
orb
push
je
ret
add
mov
sub
aaa
pop
jae
sub
lret
push
stos
insb
and
addl
sarl
fdivrl
mov
adc
pop
sti
mov
outsl
daa
mov
bound
xor
xchg
and
mov
jg
sbb
pop
push
nop
jno
stos
insb
in
pusha
xchg
xor
aas
sub
cmpsl
cltd
jno
call
sahf
shrb
adc
stc
idivl
push
mov
xchg
dec
imul
das
jp
mov
cmp
dec
movnti
mov
cld
popf
mov
sbb
fisttpll
add
cld
lret
out
dec
mov
adc
mov
aam
xchg
jb
mov
pushf
decb
loopne
push
addl
into
mov
jo
loop
cli
sbb
pop
add
mov
xchg
jae
xor
mov
jne
add
sti
negb
jo
fadds
inc
cmc
mov
mov
mov
repnz
cmp
dec
ljmp
xor
inc
sub
test
jae
gs
adc
jg
out
jl
add
cmpsl
jno
gs
ret
and
jg
mov
mov
push
aad
insb
fldt
insb
test
lcall
test
xlat
mov
rolb
push
mov
in
sub
leave
xchg
mov
dec
rorl
pushf
jnp
or
movsb
repz
pushf
jnp
xor
cwtl
arpl
out
cmp
gs
loope
inc
xchg
data16
or
ret
push
and
enter
test
fs
mov
sti
or
leave
cmpsb
subb
xor
sub
sub
jl
inc
hlt
or
sub
cmp
sbbb
imul
jmp
popf
data16
mov
adc
pop
test
or
arpl
dec
popa
es
xchg
imul
imul
incb
sbb
xchg
cmp
ret
push
or
and
out
sbb
xor
pop
and
cmp
je
xor
xorl
movsl
test
insb
imul
pop
out
push
adcl
out
xor
push
hlt
jle
cld
xchg
push
sub
pop
stos
push
and
push
andb
loope
sti
cmp
insb
repnz
cmpsb
xor
xor
sbb
dec
adcb
mov
daa
pop
jp
outsl
inc
scas
jnp
gs
stos
or
out
imul
popa
pop
push
gs
aaa
arpl
fstps
cmp
xor
pop
push
sarb
push
adc
in
jae
jne
cmp
test
mov
test
sub
adc
inc
lcall
repz
cmp
ljmp
pop
mov
or
jb
xor
scas
int3
daa
ficomps
adc
pop
pop
lds
fwait
stos
stos
popf
xchg
or
push
je
movb
xchg
mov
lods
adc
or
xor
inc
cmp
outsl
add
sbb
aaa
lods
hlt
aad
push
inc
notb
cwtl
cli
repz
xchg
xchg
insb
loope
movsl
push
scas
cs
sbb
inc
movsl
xchg
into
inc
mov
icebp
xchg
jmp
inc
push
test
push
pop
add
inc
jmp
test
xchg
push
sahf
sarl
push
cmpsb
subb
dec
and
in
insb
sub
jns
dec
test
pusha
test
movsl
std
lret
push
inc
popf
xor
dec
lret
pop
cltd
testl
xchg
pop
cmp
mov
xchg
pop
fiaddl
std
and
lcall
lcall
scas
pop
mov
add
mov
cmp
sbb
idivl
in
jb
xor
imul
imul
pop
push
and
sub
add
ss
movsb
mov
cmpl
stc
sbb
addb
ja
adc
dec
bound
pop
imul
xchg
lret
insb
and
pushf
pop
andb
mov
pusha
lods
lock
jbe
int
mov
lds
fisttpll
jo
outsl
sahf
pop
js
mov
pop
and
lock
or
dec
sbb
or
ficomps
or
inc
scas
adc
out
add
add
add
add
gs
data16
imul
popa
jno
imul
add
add
jns
jns
outsl
imul
add
arpl
outsl
jno
js
add
inc
arpl
imul
insb
popa
jo
add
add
outsb
outsl
ja
add
add
adc
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
or
add
add
add
add
add
shlb
or
add
xchg
jae
add
add
add
inc
add
add
add
add
add
add
jae
add
add
add
jb
add
add
add
jb
add
add
add
add
add
inc
add
add
add
jb
add
add
add
jb
add
add
add
jno
add
add
mov
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
mov
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
jnp
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
