sbb
add
outsl
std
stc
sub
mov
test
in
jle
mov
movsl
adc
or
out
out
into
adc
shlb
stos
and
ljmp
cltd
dec
mov
pop
in
lock
jmp
inc
mov
dec
pop
lds
into
pusha
xor
pop
push
xor
int
cld
stos
jb
push
mov
sub
add
jo
in
xor
push
lods
and
xor
mov
inc
out
xlat
mov
ds
aaa
pop
subb
mov
stc
add
movsl
add
cltd
std
inc
fimuls
lds
xchg
aaa
push
mov
push
sub
mov
jmp
stc
inc
adc
add
xor
test
sete
pop
add
adc
loopne
aad
adc
push
insb
and
mov
mov
jns
push
dec
sbb
jmp
mov
in
loope
repnz
inc
cmp
pop
dec
xchg
jb
les
icebp
int
ficoml
pop
lods
lret
dec
repz
jae
jg
push
fcompl
lods
sub
ss
push
mov
rorl
lea
jno
out
in
push
or
pop
imul
mov
mov
lcall
bound
xchg
xor
mov
sbbb
popf
push
add
mov
andb
aaa
dec
sub
scas
jg
leave
fldl
imul
or
mov
stos
roll
aam
lods
push
icebp
mov
shll
sar
sub
enter
arpl
dec
negl
inc
insb
lret
jge
inc
lahf
xchg
int
jnp
xchg
inc
in
cmp
jg
sti
or
jo
dec
rorb
mov
xchg
sti
or
insb
jno
and
and
adc
jns
cltd
loope
pop
and
sub
repnz
lds
pop
xor
dec
push
sbb
shll
daa
lret
in
pushf
sbb
push
and
sub
mov
jo
ficoml
jne
or
inc
cmp
cmp
adc
fistpll
mov
lret
mov
lds
sub
sbb
mov
jecxz
fucom
repz
stc
sub
hlt
fcmovne
not
and
jno
and
scas
and
stos
xor
sbb
in
iret
cmp
mov
mov
push
aas
push
aaa
push
fadds
gs
push
mov
sbb
pop
out
adc
nop
xchg
lds
push
dec
adc
push
sbb
mov
insb
dec
sub
mov
lret
add
out
aas
scas
popf
decb
aad
cmc
test
xor
pop
mov
dec
movsb
lods
enter
popa
xchg
es
mov
jle
dec
andl
jns
or
mov
movsl
sahf
stos
pop
xchg
adc
pushf
adc
popa
pop
ret
jne
xor
js
push
xor
mov
mov
stc
push
jae
xchg
mov
pop
into
icebp
pop
xchg
movsl
inc
sbb
and
movsl
lds
fnstsw
data16
adc
jl
aas
lret
mov
pop
push
xor
loop
jne
insl
popa
popf
cltd
and
add
inc
insl
imul
mov
ret
scas
rorb
rolb
lcall
add
mov
adc
push
movsb
and
aad
xchg
or
int3
sbb
hlt
push
push
shl
pushf
fisubrl
out
adc
fwait
test
adcl
mov
jg
adc
lock
inc
mov
hlt
das
test
ret
adc
pop
clc
lds
int
jge
adc
repnz
sub
mov
mov
test
inc
fdivl
sub
jns
push
xor
ljmp
inc
aad
stc
mov
jb
notb
enter
cmpsl
and
imul
sub
or
xor
mov
push
push
icebp
iret
and
int3
inc
cmp
add
in
dec
addb
dec
xchg
or
outsl
xchg
lahf
dec
scas
into
orb
lcall
je
and
and
pop
rclb
int3
inc
add
jg
loope
lds
cwtl
icebp
shlb
sbb
jbe
fstps
push
lret
arpl
mov
and
mov
aad
add
loop
pop
aam
movsl
or
mov
xchg
fdivs
rcrb
pop
dec
jp
dec
pause
sub
jg
mov
pop
shl
jbe
pop
in
mov
mov
xorl
inc
aaa
xchg
stos
sbb
into
fsubrl
jne
lock
arpl
sub
mov
flds
cli
push
mov
mov
nop
add
mov
in
mov
jb
psadbw
mov
insb
jg
adc
add
ja
das
insb
add
push
out
ja
inc
movsl
jne
loop
add
xor
mov
push
pop
sbb
jbe
push
fistps
sbb
adc
lds
ret
pop
pop
mov
pop
dec
mov
lret
loop
mov
jns
push
inc
inc
ficomps
loopne
jns
les
dec
into
lods
stos
or
xor
jb
call
popf
xchg
add
call
jmp
daa
inc
insb
insl
fidivl
jecxz
movsb
dec
lret
push
pushf
ret
ss
clc
enter
cmc
mull
push
fs
add
push
jecxz
add
inc
ljmp
sbb
ljmp
xor
shl
and
test
cmpsl
jo
addr16
xchg
inc
mov
inc
ljmp
mov
into
xchg
lcall
andb
mov
xchg
repz
mov
mov
andb
or
cmp
mov
or
sub
xchg
xor
jo
loop
ljmp
test
add
hlt
movsl
cmp
outsl
mov
cmc
xor
or
dec
movsb
pop
xlat
mov
dec
or
adc
enter
adc
ds
movsl
mov
insl
pop
fucomi
pushf
pop
mov
xor
jnp
gs
sbb
call
pop
popa
inc
inc
mov
into
jl
imul
sarb
stos
or
adc
jmp
lods
xor
adc
cs
jbe
cmp
dec
ja
xor
les
call
popa
pop
xor
sti
push
add
sub
sub
mov
add
xchg
inc
lcall
insb
shlb
xor
and
inc
dec
mov
dec
aaa
cvtps2pi
out
adc
sub
xchg
icebp
mov
mov
fs
pop
jg
outsb
mov
or
sub
push
aaa
dec
call
fildl
test
add
pop
and
dec
dec
in
cmp
mov
mov
add
sub
lret
addb
cmp
aaa
inc
cmp
jge
push
or
dec
jnp
inc
sarl
jmp
mov
outsb
repz
push
adcl
and
sub
mov
sub
lret
jno
int
in
adc
mov
cmpsl
stos
pop
ret
pop
fimuls
cmc
inc
int
or
ljmp
mov
xor
inc
es
and
cmp
inc
xchg
test
add
rorl
and
es
call
popa
mov
insl
mov
adc
xlat
repz
push
sub
push
sbb
shll
push
jp
xorl
fsub
cs
js
les
je
dec
cmpsl
inc
pop
or
mov
jg
push
pop
dec
add
lret
push
cltd
das
mov
dec
sbb
std
aas
pop
adc
loopne
push
inc
pop
sub
xchg
jno
dec
mov
cli
jbe
ds
push
cmp
jmp
sub
mulb
mov
push
jb
fstps
sub
pop
nop
and
lods
adc
dec
push
and
inc
pop
prefetcht1
jae
data16
jmp
mov
lock
push
pop
push
aad
int
jae
lea
shl
jb
outsl
roll
mov
mov
popa
out
jnp
jo
mov
inc
fidivs
xor
testb
movsb
dec
jbe
jbe
loopne
mov
mov
movq
data16
sbb
mov
sbb
jp
pushf
popa
cld
and
in
movsl
xor
pop
add
test
mov
int
sarb
mov
shll
pop
jnp
push
pop
cmpsl
rcrl
cltd
fstl
xor
mov
mov
adc
gs
test
cli
in
cld
and
push
pop
outsb
les
shlb
cld
jo
orb
out
add
cmp
cmpsb
call
push
add
cmp
shl
popa
adc
bound
and
aam
mov
into
ss
dec
add
repnz
popa
lea
fwait
outsl
lret
mov
pushf
cs
mov
addr16
mov
fildll
inc
jmp
cmpl
sub
sub
and
enter
dec
shrl
ljmp
jae
sub
insl
mov
out
orl
sahf
int3
lahf
cmp
xor
mov
mov
cmp
adc
in
dec
push
mov
sbb
xchg
mov
aam
mov
cs
lods
fsts
xchg
int
movsl
rcl
sbb
sbb
scas
in
xchg
clc
fmul
lods
cli
add
dec
xor
mov
jno
test
popf
scas
icebp
jns
inc
arpl
push
xor
mov
adc
sub
lock
je
in
shll
outsb
test
mov
lea
sbb
repz
add
mov
adc
jp
and
lret
das
or
in
inc
cli
js
sub
pop
lcall
adcl
imul
pop
sbb
data16
jo
pop
jno
imul
and
cwtl
pop
dec
inc
xchg
cmpsb
dec
mov
dec
stos
add
cmc
and
popa
pop
les
push
xor
fidivrl
mov
dec
int3
insl
clc
lock
dec
mov
clc
stos
test
cmp
sbb
in
push
mov
cmp
in
push
std
pop
movsb
pusha
test
cmp
repnz
andb
lds
cmp
adc
rcrb
jno
out
xchg
rclb
fstl
lcall
jmp
push
or
sbb
sub
xchg
jmp
mov
dec
mov
dec
mov
sbb
loop
lret
data16
je
jmp
lods
out
add
xor
cs
jbe
xchg
imul
fsubrp
or
dec
cmp
fcmovne
popl
mov
loope
xor
pusha
cmp
fnstenv
out
and
pop
mov
mov
and
int
sahf
jge
inc
jge
pop
sbb
pop
test
pop
nop
rolb
inc
mov
cmp
xchg
popf
add
icebp
mov
sbb
add
iret
cmc
push
decb
clc
jnp
xchg
call
cmc
movsb
mov
int
test
cli
out
sbb
jp
fsubrp
hlt
ss
ja
cli
fwait
add
or
fs
int3
inc
fisttpl
pushf
add
inc
aad
je
mov
adc
mov
insb
mov
sbb
aaa
mov
enter
inc
pop
cli
pop
das
xor
rorb
mov
and
adc
mov
jle
addl
clc
xor
inc
cmp
fisubrs
and
mov
pop
adc
mov
pop
daa
out
push
mulb
mov
xchg
mov
mov
adc
movsl
call
pop
scas
jg
or
pop
lods
jp
pop
sub
sbb
cltd
mulb
cmp
hlt
loop
jae
or
fbld
jnp
fwait
lock
aaa
mov
sub
push
mov
push
sub
es
add
dec
push
mov
bound
clc
push
pop
or
mov
pop
xor
jecxz
sub
mov
les
add
xchg
push
das
or
rorl
dec
mov
mov
pushf
push
cmp
into
repz
cmp
adc
rcr
or
pushf
cmp
push
insl
repz
in
dec
jne
popf
add
jae
out
loope
adc
add
mov
ljmp
inc
add
cld
loop
shlb
stos
mov
pusha
xchg
cmpb
pushl
inc
xor
sbb
mov
int
out
ds
aas
arpl
and
push
lods
xor
je
popa
mov
pop
lret
xchg
in
insb
out
out
pop
fstps
jns
sub
cmp
int3
push
fwait
xor
inc
inc
and
dec
shll
sbb
lret
push
fwait
dec
sub
dec
fistl
mov
pop
jp
bound
push
ret
iret
outsb
and
ljmp
insl
in
pusha
rclb
add
dec
xlat
dec
adc
mov
sbb
add
cmp
xchg
mov
sti
push
sbb
int
adc
and
push
outsl
dec
pop
fs
xchg
push
mov
aad
aas
repnz
dec
sbb
cmpsl
push
leave
xchg
push
jns
dec
call
js
jae
sarl
push
aas
push
aad
loop
adcb
pop
add
sahf
adc
insb
xchg
push
jge
cltd
pop
call
sbbl
les
subb
into
jg
lcall
fs
xor
jno
arpl
mov
test
cmp
mov
lock
shrl
inc
mov
push
fs
lock
sub
clc
clc
imul
stos
cmp
das
xchg
pop
addb
out
pop
cmp
push
test
add
aaa
mov
push
cmp
pop
push
sub
test
in
inc
rorl
inc
scas
cltd
jmp
pop
sbb
adcb
aas
jle
add
int3
gs
or
clc
mov
mov
icebp
in
mov
push
int
add
fs
mov
insl
call
mov
scas
jecxz
shrd
fimuls
xchg
jne
sbb
rcl
and
adcl
and
jae
gs
icebp
inc
jp
lcall
stc
push
hlt
stos
repnz
test
rcrl
imul
adc
sub
cmp
cmp
mov
dec
fisubs
sbb
int3
xor
sahf
or
jo
out
mov
cmc
cli
and
fcompl
jbe
inc
aam
pop
test
add
sub
cmp
loopne
and
add
addr16
test
xorb
cltd
mov
in
stos
mov
nop
out
mov
sbb
lret
jg
pop
push
cmpsl
das
dec
xlat
popa
test
cmpsl
movsl
pcmpeqd
fmull
jecxz
imul
movsb
and
ds
bound
lret
insl
movsb
inc
mov
jmp
stc
fcomps
fmuls
add
pop
pop
cwtl
push
dec
sbb
cmp
adc
mov
cmp
leave
jno
mov
push
push
push
mov
xchg
andl
out
mov
das
jbe
mov
enter
out
or
popf
inc
ja
add
lahf
mov
rcrb
addl
cld
lcall
dec
jo
lret
insb
jge
inc
push
imul
popf
jp
pop
ja
movsb
xchg
rolb
lods
out
fisubl
outsb
repnz
xor
cmpsb
cmpsl
imul
enter
test
mov
mov
inc
lcall
mov
xchg
aas
cwtl
scas
dec
mov
cltd
cwtl
inc
or
inc
jg
pop
add
lods
pop
mov
sub
and
enter
xchg
adc
sub
jl
adc
pop
cmp
jle
pop
xchg
popf
lahf
push
fistl
scas
pusha
aam
mov
adc
pop
addr16
xchg
dec
popa
cmpsb
xor
add
ret
dec
pop
mov
cmpsl
pop
int
sahf
nop
push
fsubrl
fnstcw
out
dec
cmp
test
mov
jae
xchg
fcom
lods
and
add
pmuludq
jns
push
sbb
das
jg
subl
sub
add
enter
std
pop
popf
cs
and
dec
pop
xchg
pop
jne
and
pushf
sahf
movsl
nop
jnp
xor
fcom
and
xchg
mov
cmp
mov
push
int
sbb
daa
push
cmp
jb
xchg
xchg
xor
test
push
cmp
cmp
adc
pop
mov
inc
bnd
push
xchg
mov
fisttpll
fdiv
je
push
icebp
dec
cs
fnstsw
cmovp
fstpl
jp
fists
stc
out
aad
mov
or
pop
cmp
jp
shl
iret
daa
pusha
popa
jecxz
adc
ret
or
jne
sub
add
jecxz
jno
iret
mov
movsb
push
sub
cmp
and
test
stos
inc
push
daa
push
jle
scas
and
inc
pushf
dec
cmp
pop
mov
lock
clc
dec
pop
fcomps
out
xlat
cs
push
push
fmull
cmp
insl
inc
dec
je
in
xor
jecxz
test
jecxz
je
add
mov
insb
ret
sti
pop
xchg
add
inc
aas
ret
nop
sbb
pop
jns
jl
xor
fwait
icebp
or
sub
mov
push
push
ja
jo
jl
and
mov
dec
cmpb
and
dec
adc
insl
jl
sub
cltd
push
xchg
xchg
loopne
dec
push
xor
mov
sub
and
div
in
int3
fcomp
aaa
jl
mov
sarl
outsl
test
xchg
push
cltd
pop
inc
dec
or
outsb
cmp
dec
into
pop
pushf
mov
mov
mov
inc
lds
lcall
ret
movsl
outsl
stos
stos
flds
or
addr16
inc
push
fcmove
rcll
xlat
xor
iret
sbb
fsts
mov
je
and
push
loopne
push
dec
out
lea
jbe
mov
bound
xlat
sub
movsb
mov
mov
pop
push
mov
pusha
insl
call
mov
popf
call
in
dec
sub
or
or
inc
aad
xchg
mov
dec
sahf
fsts
adc
sub
out
add
add
xor
sbb
mov
outsb
jge
or
les
or
push
mov
inc
dec
cs
dec
or
cmp
les
adc
int3
adc
dec
popa
add
lahf
inc
int3
pop
jg
in
add
add
dec
ja
jmp
cmp
sub
imul
out
cmp
push
xchg
mov
cmc
aam
inc
loope
aad
sbb
repnz
sahf
pushf
notl
mov
xchg
lock
iret
lock
adc
pop
dec
sahf
dec
loop
mov
mov
imul
inc
inc
sub
pop
fwait
jmp
push
dec
mov
or
lds
or
add
ja
cmp
add
into
and
pop
shr
or
cwtl
lock
xchg
inc
ret
std
cltd
sub
push
sbb
inc
adc
test
xor
ljmp
lret
add
orl
push
int3
push
ljmp
mov
loop
xlat
shl
sbb
sub
lock
aas
lods
negb
sbb
mov
cwtl
push
nop
cs
xor
negl
jg
cmpsb
scas
add
push
dec
je
rol
mov
sbb
xchg
or
pusha
call
lret
lock
push
shrb
clc
and
into
fidivs
mov
jne
leave
jne
mov
popf
xor
lods
insl
and
shrl
cmpsb
sti
mov
pop
jne
mov
repnz
push
xchg
mov
aaa
cli
repnz
sbb
out
add
addr16
cmpsl
jecxz
inc
loopne
sbb
pop
and
icebp
add
clc
rolb
loop
pop
mov
imulb
sub
mov
mov
cmp
or
ljmp
adc
pop
dec
pop
inc
adc
mov
out
fidivs
addr16
bound
adc
pop
fbld
stc
movsl
out
inc
adc
in
add
adc
dec
je
xchg
xor
int3
cs
push
stos
outsl
inc
mov
orb
stos
sub
test
cld
dec
arpl
test
inc
hlt
dec
data16
popa
dec
mov
pop
and
jno
int
int
push
push
and
lock
and
insl
enter
sbb
and
pop
jns
int3
sub
rcr
mov
jno
cld
aad
out
out
xchg
and
les
enter
push
repz
jno
add
pusha
outsb
flds
ljmp
dec
mov
mov
test
xor
mov
bndstx
add
xchg
mov
mov
inc
dec
es
add
das
rcll
mov
dec
sbb
mov
mov
negl
fistpll
jle
icebp
test
cltd
adc
test
pushf
dec
pinsrw
movsl
pop
lret
pop
lock
adc
push
xchg
push
push
dec
in
pop
jbe
notb
and
stos
repz
push
lock
and
push
sbb
mov
inc
scas
pop
loopne
insl
stos
call
shrb
fs
sub
pusha
loopne
adc
push
mov
xor
add
imul
dec
xchg
outsl
mov
int
xchg
ja
xchg
jae
stc
sub
jecxz
xor
sbb
inc
call
outsl
scas
xor
fs
aas
call
push
pushf
add
call
insl
mov
dec
mov
cmp
pop
inc
mov
mov
adc
out
decl
sti
sub
jbe
dec
ja
mov
ja
jmp
test
xorl
pop
stc
mov
int3
push
lods
ljmp
mov
cmp
mov
pop
mov
aad
js
shll
call
shlb
lcall
lret
or
inc
out
loopne
jno
mov
add
sbb
cmpsb
jo
mov
nop
or
push
lahf
shl
ret
iret
imul
lret
data16
pop
test
nop
clc
les
clc
imul
sahf
mov
jbe
mov
arpl
mov
int
and
xchg
push
shll
mov
cmp
dec
xchg
mov
fadds
mov
loopne
xchg
pop
sub
adc
loopne
outsl
cli
test
adc
cmp
dec
ja
xchg
in
mov
incb
mov
popa
imul
sar
adc
das
pop
aas
lds
mov
scas
mov
adc
arpl
cltd
gs
int3
sbb
rcrl
popa
sbb
ja
shl
scas
inc
jge
push
lods
sbb
lcall
stos
aas
xchg
inc
mov
xchg
ret
addr16
inc
mov
in
idivl
stos
out
in
mov
mov
stc
add
pop
sbb
loope
push
test
roll
xchg
dec
aam
inc
insb
jno
sbb
sbb
jo
daa
fdiv
adc
xchg
pop
out
mov
mov
loop
in
cmp
loopne
pop
out
pop
cmp
mov
mull
dec
imulb
js
out
push
out
icebp
mov
xor
pop
dec
sahf
pop
cmpsl
das
lret
test
mov
inc
in
shr
jno
jbe
cmpsb
push
mov
add
fwait
arpl
adc
enter
dec
mov
cmp
adc
shll
mov
mov
mov
fdivr
push
pop
adc
hlt
pop
enter
pushf
push
fistps
push
jb
push
mov
lcall
xchg
cmpsl
sub
xchg
inc
push
and
andl
negb
in
addr16
hlt
test
or
and
mov
xchg
testl
cmp
xchg
xor
enter
inc
xor
add
bound
push
sbb
sbb
movsb
fs
fidivrs
xor
movsb
adc
pop
gs
arpl
stos
enter
add
jmp
mov
andl
pushl
dec
xchg
mov
fdivs
mov
cmp
add
adc
iret
inc
jno
popf
jns
lods
xor
xorb
inc
mov
wbinvd
lods
sub
ljmp
mov
mov
xchg
testl
clc
pop
into
cmp
repnz
sbb
mov
std
jge
mov
jmp
xchg
add
icebp
stc
cmp
and
add
mov
mov
out
cmp
out
ja
in
outsb
mov
cld
inc
inc
les
aam
mov
inc
cmp
in
and
lahf
ror
dec
mov
fwait
mov
and
sub
sub
jb
push
pop
mov
pop
jle
iret
shlb
inc
cmp
repz
and
xor
es
iret
sbb
lahf
fsts
xor
cs
cmp
dec
pop
cltd
loope
repz
out
cmp
out
aas
std
andb
lahf
push
psllw
data16
sub
test
pop
pusha
popa
lock
jle
ljmp
fwait
jmp
sbb
mov
pop
mov
decl
imul
pop
and
pop
hlt
roll
push
lahf
in
cmc
cmp
pusha
xchg
pop
add
clc
loopne
lds
sbb
mov
or
int
push
repz
fldl
stos
daa
pop
loopne
xor
ret
int
push
lret
mov
lock
fisubs
inc
lock
inc
clc
ja
sub
push
dec
popa
pop
inc
xchg
outsb
add
mov
cwtl
loope
push
mov
ficompl
cmp
jns
ss
xor
add
push
push
push
xor
adc
inc
subb
stos
ds
sbb
cmp
or
and
cmpsb
cmc
mov
adc
cmp
sub
lods
sbb
jge
nop
jge
and
in
shrb
mov
and
pop
aaa
daa
aam
into
subb
adc
sub
sbbl
add
dec
push
movsb
das
and
mov
bound
mov
adc
lcall
xchg
int
repnz
call
push
outsb
pop
cld
sbb
and
sub
and
xor
loopne
repnz
lcall
xchg
cmpsl
stos
xchg
out
adc
imul
pop
test
les
cmc
fildll
aaa
jecxz
lret
fistps
sub
xchg
jle
jge
mov
ret
frstor
add
idivb
insl
and
mov
fbstp
pop
dec
jle
jle
jp
movsl
jecxz
push
sub
xchg
les
popl
xchg
xor
fimuls
iret
adc
es
movsb
cli
shrl
adc
lahf
pop
imul
in
sub
aas
shlb
push
test
or
push
push
not
add
scas
jno
mov
pop
scas
push
popa
je
or
mov
jp
mov
std
rcrb
jl
pushf
xlat
or
out
leave
ljmp
inc
orb
into
jns
sub
enter
fidivrs
cld
fisttpl
stc
fstpl
loop
aaa
stos
mov
jl
dec
and
and
pop
push
add
rcll
jb
cmp
mov
call
or
enter
mov
dec
int
fiaddl
pop
scas
insb
push
dec
ror
test
nop
sub
xchg
roll
cmp
push
aam
outsl
lret
popl
cmp
pop
add
out
jecxz
movsb
sub
pop
pop
movsl
je
sub
aad
insb
jb
lea
mov
jno
inc
or
push
mov
xchg
cli
mov
inc
fiaddl
cmpsb
sti
sub
mov
inc
mov
lcall
ds
adc
cs
jl
repnz
dec
jae
loope
into
dec
ss
out
cmc
cld
pop
and
mov
sarl
clc
movsl
jbe
in
lods
scas
sbb
xor
mov
aam
sbb
fs
das
iret
push
inc
pop
xor
jle
ficoms
ffreep
sahf
dec
idivl
leave
cmp
adc
mov
jnp
out
das
mov
into
adc
fxch
mov
pop
sbbl
es
fs
insb
stos
ja
imul
iret
addr16
mov
aad
iret
or
aas
mov
xchg
divl
adc
xlat
adc
lahf
popf
dec
loop
outsb
aad
jbe
push
call
xchg
cmp
inc
test
xlat
mov
xchg
sub
insl
push
pop
jecxz
cmp
insl
cmp
xor
jecxz
or
lock
cltd
cmp
addr16
mov
push
and
mov
jbe
call
faddl
sti
jae
ja
lcall
lock
pop
xor
fadds
data16
jmp
xchg
inc
dec
movsl
xchg
inc
add
cmc
xchg
fcompl
lahf
js
add
jle
neg
out
pop
stos
push
xchg
jns
out
cmp
inc
dec
shrb
fldenv
pop
mov
hlt
cltd
adc
sub
dec
sub
mov
cld
xor
cwtl
ljmp
mov
pop
mov
stos
mov
lds
bswap
repz
jg
lods
inc
xor
jp
loope
xor
add
mov
and
mov
outsb
add
cmc
mov
aad
lahf
loopne
push
scas
cli
adc
inc
sbbb
jae
lods
pop
pop
popa
lods
out
cs
out
inc
movsb
adc
test
push
ja
mov
xchg
fs
fs
cmp
aaa
sahf
pop
loop
pop
divb
aaa
scas
ret
xor
dec
jp
mov
ja
add
lock
mov
les
testb
nop
xor
and
cmpl
jge
frstor
les
jbe
xor
mov
iret
and
push
cmc
xorl
or
cmp
loopne
xchg
sbb
mov
scas
adc
sti
xchg
sub
push
cmpsl
imul
adc
xchg
pop
fldcw
rcl
fadds
cmp
fistps
rolb
movsb
cmp
pusha
pop
xchg
shl
into
lret
sbb
outsb
xor
imul
scas
ja
xlat
inc
clc
in
pop
mov
inc
or
jmp
dec
clc
fiaddl
ja
ja
pop
jno
push
imul
xchg
fsts
inc
aam
cmp
std
or
dec
iret
cmpsl
sub
cmp
cmc
jns
cmpsb
roll
or
mov
lock
rorl
mov
test
mov
xor
and
inc
dec
mov
xchg
aam
and
lret
fildl
out
lock
sbb
sti
mov
add
add
mov
cli
sahf
inc
stos
aam
cmpb
inc
jb
push
out
movsb
inc
adc
sbb
pop
loop
idivb
sub
cmpl
add
inc
mov
in
jp
xchg
xorb
js
stos
mov
fidivs
clc
in
std
cltd
xchg
push
jb
pushf
pop
cmc
dec
or
mov
mov
idivb
pop
pop
shlb
mov
test
lea
mov
ja
xchg
mov
pop
repz
rcl
outsl
sarb
xchg
xor
jge
cmp
or
idivl
mov
cli
add
add
pop
hlt
rcrl
outsb
xchg
dec
mov
insl
cmpsb
flds
dec
daa
ret
jae
sub
push
test
push
jne
popf
adc
gs
aad
cmp
pop
aaa
sub
inc
jae
roll
jle
js
xor
std
lret
push
fsubs
pop
aam
ja
mov
adc
jne
mov
push
movsb
ljmp
mov
mov
and
les
sbb
sub
mov
jle
lods
repz
mov
js
cmp
cmpsb
cmp
cmc
add
in
insl
jno
or
sti
xlat
addl
and
daa
add
or
cwtl
dec
shrl
mov
sub
xlat
adc
xor
mov
cmc
aam
jle
es
bound
repnz
mov
fbstp
inc
mov
cwtl
lahf
adc
decl
xchg
adc
fs
inc
adc
pop
test
sbbb
aad
mov
insb
jno
pusha
mov
cmp
jno
pop
cmp
fistl
adc
ja
jnp
test
nop
mov
sti
pushf
pop
subl
cmp
icebp
call
pop
subl
sub
jg
mov
push
lock
filds
xchg
and
stos
lea
adc
adc
or
les
inc
mulb
cltd
push
lods
stos
outsl
je
cwtl
or
notl
lret
jmp
ret
mov
imul
dec
les
add
data16
cmp
mov
aaa
xorl
jne
in
hlt
xchg
mov
or
ja
jno
cltd
add
inc
add
test
aam
ret
insb
rcr
xor
push
mov
sub
dec
movsl
cwtl
daa
test
stos
cmp
jle
pushf
jle
pop
xchg
mov
dec
or
mov
sub
add
fdivr
mov
inc
xor
and
inc
sbb
jo
and
adc
sar
in
mov
loop
repz
sbbb
adc
pop
scas
or
mov
cld
in
dec
cltd
movsl
pushl
dec
jno
or
out
jg
sub
mov
jge
lea
mov
enter
pop
cmpsb
jns
jle
xchg
aas
jmp
sarl
xor
mov
sbb
sub
clc
mov
ffreep
xor
loope
pop
mov
xchg
test
inc
rol
and
popf
ja
xchg
fnstcw
scas
push
ds
or
add
aam
arpl
jno
mov
lds
js
aas
push
jecxz
or
outsl
sahf
clc
mov
dec
scas
fwait
push
adc
xchg
lods
testl
aad
inc
cs
xor
loope
sbb
cmp
shlb
push
mov
jbe
push
fistps
sub
ret
lods
das
lock
clc
ds
popa
pop
jle
mov
rcrl
add
push
jbe
dec
gs
ret
imul
mov
pop
jae
add
push
inc
mov
or
push
sbb
jle
pop
fdivrs
fistl
es
fcmovu
add
xchg
icebp
jecxz
inc
push
mov
inc
sub
aas
cld
mov
xor
idiv
mov
xchg
cmc
aas
cli
outsb
dec
xor
cmp
mov
jl
std
fwait
sbb
jae
std
adc
outsb
mov
adcb
push
and
push
addr16
jb
mov
cli
mov
cmp
aaa
cmpsb
cmp
loope
imul
out
push
not
lret
insb
jns
cli
jmp
das
mov
mov
cmc
aad
mov
adc
daa
ret
pop
lock
sub
jbe
push
rclb
xchg
aas
stc
insb
mov
dec
pop
lea
xchg
xchg
inc
adc
dec
aaa
mov
xor
push
add
xorl
cmp
xor
adc
aaa
sbb
imul
fnstenv
jnp
ja
ds
and
xchg
jo
movsb
xor
jp
pop
ret
sbb
and
int3
lcall
xchg
mov
cmp
push
lock
lds
mov
cli
popf
inc
push
sbb
jo
xlat
sub
int3
xchg
cmp
lods
xchg
xchg
daa
lret
arpl
pop
sub
in
mov
nop
stc
popa
sarl
xor
inc
xor
xlat
cmp
sbb
jge
inc
int3
cmp
xor
in
daa
fstps
mov
mov
subl
imul
outsl
xchg
cmc
les
ss
stos
test
fildl
mov
in
push
inc
sahf
adc
aam
repz
lret
mov
fmull
outsb
aas
dec
push
imul
daa
sarl
pop
jae
jge
stos
pop
sbb
mov
fistl
imul
xchg
out
dec
pop
pop
sbbl
lds
nop
arpl
jecxz
dec
lret
loope
sbb
in
fs
testb
adc
enter
sub
icebp
cmp
cmp
lock
jge
decb
cmp
in
jo
outsb
rcrb
repnz
cld
add
ficomps
push
out
sahf
leave
lcall
repnz
mulb
xchg
mov
orl
add
cmpl
dec
in
imul
xchg
cld
imul
pop
or
inc
aas
push
rolb
imul
and
lcall
cmpsl
int3
les
fcomps
dec
sbb
cld
xchg
ds
imul
adc
notl
mov
jne
daa
sbb
lods
add
push
xchg
and
inc
mov
sub
fcompl
fs
add
out
pusha
sub
js
mov
lcall
jb
lret
addr16
test
and
jmp
scas
data16
outsl
cmpsb
repnz
flds
jno
pop
mov
divb
jbe
mov
fadds
pop
cmp
adc
xor
push
jne
sbbb
inc
scas
add
cwtl
pop
pop
and
fstpt
data16
push
inc
or
outsl
or
outsb
leave
in
fdiv
dec
xchg
pop
movsb
pop
movb
cmp
fisttps
or
rclb
mov
rclb
or
jne
push
repnz
in
xlat
sub
test
pusha
or
arpl
sbb
push
cmp
into
jae
mov
push
mov
mov
sub
lret
sub
std
int3
pushf
iret
sahf
jcxz
ret
xchg
xchg
xchg
dec
das
pop
add
js
insl
test
test
outsb
and
cwtl
jp
bound
push
mov
test
in
jg
xor
jns
pop
jmp
je
pop
dec
push
mov
push
sbb
pop
pushf
add
out
fldl
repz
push
scas
cmp
jge
mov
sbb
outsb
cmp
cmpsb
xchg
pop
dec
push
mov
dec
jnp
dec
out
push
imul
std
div
fbstp
popf
push
repnz
mov
clc
es
push
mov
sub
pushf
jae
aas
cmp
fadds
enter
push
sbb
jg
cmp
loopne
jnp
jg
fstl
movsl
pop
push
fsubrp
push
jle
xor
xor
pop
push
jle
test
mov
push
jno
xor
in
pusha
fdivrl
insl
mov
mov
mov
add
jmp
push
pusha
lea
xchg
mov
lret
flds
jbe
cmpl
test
adc
xchg
cmp
sbb
adc
adc
mov
and
cld
jae
inc
fcoms
xchg
cmp
pop
out
mov
push
pushf
stos
jno
pop
popa
or
mov
fldt
push
fisubrs
adc
mov
outsl
es
sub
cmc
adc
push
pop
adc
out
fsubl
sbb
fs
into
mov
and
repnz
sub
inc
pusha
inc
inc
insb
mov
rcrb
popa
andl
popa
mov
xchg
ja
or
out
xor
mov
popf
or
mov
push
and
push
mov
or
lahf
sub
movsl
mov
mov
movsb
add
dec
jl
and
xchg
mov
in
in
xchg
jle
cmp
or
ffree
loop
fs
fwait
and
mov
mov
imul
add
push
arpl
dec
movsb
sub
inc
mov
jb
xchg
loop
or
ja
push
mov
mov
insl
movsb
or
sbb
das
loopne
jno
pop
add
mov
dec
ret
mov
je
inc
add
clc
jecxz
packsswb
in
and
cmp
mov
dec
mov
sub
dec
xor
mov
xor
ret
mov
repz
imul
mov
lret
pop
mov
push
test
movsb
movsb
fmuls
push
enter
scas
xor
es
sub
mov
lea
mov
mov
test
xlat
xchg
cltd
jge
je
mov
shrb
ret
xlat
fimuls
hlt
mov
ficomps
sub
xor
xchg
sarl
adc
ljmp
pushf
and
lcall
call
in
les
ret
mov
mov
fimuls
mov
cmp
jno
js
popf
outsl
cltd
addl
jge
inc
dec
pop
pop
xor
cli
imul
cltd
adc
mov
sub
fildl
jne
and
jno
and
rcrl
dec
fs
dec
xor
adc
jmp
int
add
push
dec
cmp
pop
push
push
mov
cmp
xor
pop
roll
mov
enter
mov
adc
sub
push
add
mov
shrl
add
ret
xchg
inc
mov
mov
fnstenv
inc
stc
inc
ror
add
fisubrs
mov
rolb
scas
fnsave
push
ja
mov
dec
icebp
cmp
xchg
pop
adc
test
je
cmp
xor
insl
pop
imul
pop
cli
push
cs
arpl
sbb
sub
jle
frstor
mov
rcll
push
xchg
pand
push
push
repnz
outsl
xchg
push
andl
stos
pushf
xchg
in
shrb
pop
and
mov
test
out
imul
pop
xor
xor
cltd
mov
std
push
jge
pushf
scas
pop
divb
testb
pop
out
js
push
and
jge
dec
sbb
and
pop
sbb
sbb
les
jnp
dec
cmp
sbb
popf
in
xchg
mov
mov
inc
cwtl
mov
jmp
and
addr16
dec
jecxz
repz
das
rorl
je
jl
scas
sub
repnz
xor
sti
outsb
enter
aam
jp
repnz
push
sub
inc
and
push
fstps
stos
or
cmp
daa
incl
and
mov
jle
not
jge
vpshufhw
cmc
enter
rcrl
outsb
dec
mov
mov
dec
and
out
pop
movb
clc
insb
out
dec
pop
xor
sub
shlb
lahf
fcomi
mov
cmp
or
sub
dec
cmpb
jns
xchg
jo
add
ljmp
mov
push
mov
fbld
jns
lock
orb
push
in
mov
inc
xor
sub
dec
and
sub
nop
in
lea
fdiv
xchg
add
mov
rclb
insl
lret
jo
fisttpll
btr
dec
xor
ljmp
pushf
cs
jns
sarb
inc
mov
push
leave
mov
xlat
add
mov
insb
leave
dec
lds
mov
mov
shlb
and
and
xchg
mov
popf
xor
push
jecxz
jbe
bound
inc
pop
mov
es
jle
inc
inc
sahf
mov
mov
outsb
aas
mov
xchg
mov
fsubrs
mov
ret
test
insl
and
notl
cmpsl
mov
lods
addr16
mov
push
rcrl
dec
incb
mov
imul
outsl
jns
xor
sub
loop
mov
aaa
jb
xor
stc
pop
push
movsl
or
push
mov
jp
call
pusha
inc
cs
xor
adc
sub
jg
shll
popa
add
cmp
aaa
les
fisttpll
stos
fwait
xchg
mov
jno
jge
cmpsb
popf
es
aad
xor
push
dec
cmp
cmp
negb
imul
stc
mov
jnp
sbb
xor
ss
fdivrl
push
test
adc
out
pusha
imul
in
adc
cmp
sbb
lret
add
dec
or
xor
add
test
sbb
scas
jno
lods
jo
scas
rcr
mov
daa
out
add
push
gs
divl
mov
icebp
test
cmp
cmp
dec
push
mov
inc
sbb
ret
rolb
pop
jmp
negl
mov
stos
cld
and
sbb
cmp
test
xor
mov
mov
and
push
test
repnz
inc
cmp
sub
jmp
mov
xor
insb
sti
out
int
adc
ds
fmul
fisubrl
pop
sub
xor
pushf
mov
adc
ror
lock
or
sub
out
stos
jo
xor
mov
xchg
stos
inc
lea
jle
mov
in
inc
ret
sbb
lock
add
mov
test
lock
mov
pop
call
pop
add
pop
aaa
paddusb
out
push
push
js
dec
in
imulb
mov
loop
test
pop
outsb
xchg
insb
push
pop
add
mov
rorl
mov
mov
fsubs
popf
pop
les
mov
iret
mov
in
lret
fcmovu
cli
sbb
lret
repz
inc
sbb
and
push
jl
dec
add
push
stos
in
jl
nop
fisttps
sbb
jle
in
les
mov
out
loope
out
stos
call
out
fists
xchg
cmpsb
int3
lea
divb
sahf
dec
aas
outsl
aas
lret
cwtl
loope
jbe
sbb
or
ret
lock
pop
add
adc
jmp
cmpsl
std
in
inc
std
pop
jne
mov
lahf
jo
sub
cmp
jne
cmpsl
inc
cli
dec
icebp
or
or
dec
pop
movsl
addr16
cli
jnp
add
jno
xchg
stos
mov
test
addr16
outsl
cmp
mov
int
mov
insb
pop
cwtl
adc
jbe
lcall
xchg
mov
sbbb
std
movsl
pop
or
test
shll
pop
lods
into
testl
push
into
mov
test
out
inc
jae
mov
shr
and
mov
das
cli
out
push
cmp
imul
pop
lret
dec
mov
push
and
xchg
inc
push
inc
add
lret
in
mov
and
mov
fwait
sbb
or
fisubl
mov
pusha
inc
test
xchg
mov
lcall
insl
pop
mov
mov
mov
jo
cmpsl
xchg
lea
imul
mov
sbb
mov
or
sub
cld
bound
or
push
rclb
xchg
sti
or
repnz
xchg
movsl
mov
pop
sub
jmp
sub
out
xor
add
out
xchg
or
out
inc
out
arpl
loop
xchg
es
cmp
jecxz
cmp
clc
iret
lcall
or
in
xchg
push
jne
mov
xlat
out
xchg
mov
jo
and
in
add
jmp
lret
and
add
rclb
push
rep
jae
leave
jb
out
jnp
cmp
test
ret
fldt
out
into
hlt
adc
cmp
mov
ds
arpl
pop
out
jne
shl
outsb
pop
je
mov
jl
cmpsb
inc
lret
pop
cmc
mov
int3
lret
pop
inc
or
sarb
popf
test
push
jnp
xor
pop
lds
test
sbb
icebp
test
jnp
rorl
mov
mov
icebp
loopne
mov
insl
js
push
sti
rcr
jecxz
jbe
adc
or
lock
stos
push
fadds
daa
adc
sbbl
icebp
sbb
pop
xchg
jecxz
cld
inc
sbb
xchg
jge
sub
loopne
xor
imul
movsb
dec
fiadds
jle
bound
xlat
loope
cmp
and
gs
xchg
adcb
jle
lock
push
jl
add
inc
or
cmpsb
mov
push
nop
sbb
scas
or
mov
in
arpl
fisubs
sub
pop
sti
filds
inc
push
aaa
mov
sub
pop
cmp
andnps
push
out
sbb
mov
lret
xchg
ss
aam
or
addr16
sub
out
dec
fcmovnu
cmp
ror
adc
pushf
clc
push
xor
test
sbb
je
or
sub
insl
imulb
mov
int
xchg
enter
xchg
loop
outsb
sbb
fiaddl
dec
cmp
push
jle
xchg
hlt
jmp
or
inc
adc
rcrl
lock
test
dec
mov
cvtpi2ps
jnp
lret
add
push
ss
mov
mov
mov
ficoml
ficompl
and
jbe
xor
iret
into
pop
mov
push
mov
jge
pop
andl
cmp
loope
fsubr
sbb
cmpsl
jo
insb
fwait
out
jle
xchg
adc
fcomps
int3
mov
movsl
xlat
or
loopne
ja
sub
aam
cmpl
pop
jmp
fsts
out
fists
bound
cwtl
xor
inc
out
sub
cli
adc
or
push
pop
mov
mov
ret
mov
sbb
mov
pop
mov
xchg
add
int3
test
pushf
push
hlt
dec
add
out
cwtl
push
push
pop
push
out
cld
cmp
or
test
pop
cld
sbb
mov
imul
rol
mov
dec
mov
xchg
leave
add
inc
xchg
or
mov
cmp
cmp
popf
lret
das
jle
push
mov
dec
stc
test
ja
scas
or
cli
xchg
mov
xchg
dec
mov
or
dec
ret
pop
in
mov
sahf
stos
mov
pop
push
imul
stc
mov
xor
lcall
dec
push
cli
lock
add
arpl
and
lds
and
int
icebp
xor
jmp
daa
mov
mov
es
jno
push
jg
xor
mov
pop
dec
js
xlat
jno
roll
jl
pop
call
loopne
xchg
dec
bound
mov
jae
push
popa
pop
inc
loopne
jb
xlat
test
clc
loop
stc
stc
mov
and
xor
cli
mov
mov
call
xchg
sub
xchg
lea
xchg
mov
adc
dec
es
jns
xor
rorb
xchg
jge
loop
pop
sarb
divb
cmp
rcrl
inc
hlt
mov
mov
enter
cmpsb
cli
aaa
movsl
rorl
lods
dec
pushf
sub
inc
mov
aad
test
mov
add
je
pop
mov
push
dec
test
sbb
sub
xchg
std
pop
bound
shll
cmp
repnz
xchg
ficomps
cmpsl
das
cs
inc
mov
cltd
pop
adc
lods
imul
cmp
sbb
push
fsubs
add
cmc
fisttpl
hlt
outsb
sub
cmpsb
adc
lcall
js
sbb
cmp
and
sub
filds
push
xor
push
jbe
in
cmp
push
mov
lock
xchg
or
mov
mov
dec
or
notl
je
mov
cmp
fsubrl
cmpsb
aaa
fstpl
xor
xor
outsl
aad
mov
mov
xlat
cwtl
or
fdivrl
les
stc
xor
inc
cmp
adc
xlat
mov
pop
loope
in
sub
out
inc
and
xchg
sub
jmp
js
les
movl
out
and
xchg
cmc
stc
lcall
pop
pop
jo
sub
cld
in
adc
lock
shll
and
lcall
sahf
pop
ss
negb
pop
cmpsl
insb
je
jmp
and
xlat
ja
mov
or
xor
add
pop
sub
js
rsqrtps
out
sbb
and
call
in
pop
push
pop
jmp
mov
cmp
mov
cltd
aas
adc
cmp
mov
pushf
aaa
mov
repnz
and
inc
fimuls
add
push
mov
sbb
fldenv
inc
in
lods
sub
dec
fadds
ficoms
dec
mov
xchg
idivb
negb
scas
mov
inc
or
jno
sub
movsb
inc
shl
out
or
sub
pop
popf
les
xchg
stc
push
ret
xchg
test
mov
xor
fsub
mov
and
hlt
mov
loopne
cmp
fdivl
ja
sbb
cmpsb
pop
insl
cmpsb
or
call
xchg
xchg
aaa
cs
add
out
or
pop
dec
push
insb
movb
xor
mov
andl
xor
dec
js
add
leave
divl
cmp
xor
or
adc
inc
push
xchg
and
mov
mov
ja
adc
loope
testl
mov
call
cmc
bound
mov
insb
dec
stos
pushf
bound
ds
popf
sbb
dec
test
sub
jmp
jb
adc
cmc
nop
jno
cmpb
ja
dec
or
cmp
add
ret
mov
inc
outsl
xchg
fisubl
aam
jmp
mov
movl
push
sbb
daa
jl
enter
mov
rcrl
aaa
mov
add
sbb
iret
inc
mov
clc
rorl
cs
sarb
aaa
cs
lcall
dec
dec
push
fs
pop
insl
and
adc
neg
pop
add
insb
scas
aas
repz
ljmp
fcomps
and
add
xchg
mov
jne
stos
jmp
and
fsubs
lods
test
sbb
aas
test
addb
mov
xchg
fcompp
pop
es
or
xchg
mov
das
cmp
out
push
push
push
subb
adc
mov
mov
mov
aam
sub
popf
fs
and
lret
dec
popf
cmpsb
push
aam
imul
das
aas
les
inc
fisttpll
mov
cmp
sub
xchg
shr
addb
mov
inc
and
cmc
or
xor
gs
in
dec
ficomps
add
lret
popf
out
inc
inc
xchg
sbb
shll
int
in
jns
std
xchg
mov
cmp
cs
bound
mov
stos
xchg
mov
mov
push
outsl
adc
adcl
push
addr16
jnp
cmc
fidivs
iret
aaa
inc
cmp
lret
mov
push
ret
hlt
cmc
adc
fsubrs
iret
rolb
test
bnd
cmpsl
int3
add
or
pop
jo
and
lahf
cmp
int
movsl
push
mov
rorl
dec
mov
cwtl
jo
xor
mov
sahf
push
aaa
mov
dec
add
out
outsl
cli
push
pop
aad
sub
add
sarb
mov
xchg
sahf
dec
cmp
xor
aam
scas
dec
jle
jo
pop
fmull
adc
fistpl
xlat
movsb
test
mul
ud1
sbb
adc
inc
adc
mov
xchg
ds
mov
push
add
jge
pop
shlb
adc
sub
jecxz
push
test
add
fwait
mov
add
hlt
pop
xor
or
jmp
push
insl
jno
dec
adc
cmp
fcos
ficompl
fldt
add
leave
cmp
adc
jmp
sbb
mov
push
xorb
popa
or
push
pop
roll
shll
xor
je
in
fs
add
lock
or
mov
sub
call
push
test
xchg
adc
es
fisttpl
sahf
hlt
dec
mov
or
lods
fisubs
push
rcr
jmp
mov
ja
add
arpl
fidivl
inc
jno
sub
cmp
xchg
mov
jecxz
xchg
into
ss
jo
inc
xor
pusha
xchg
js
or
xchg
testb
jnp
push
xchg
sbb
dec
fsubrl
jecxz
fsub
mov
in
or
jmp
xor
mov
andb
or
mov
sub
clc
cmp
mov
adc
inc
ja
out
sahf
gs
dec
adcl
or
sub
dec
lea
dec
in
nop
add
ret
cltd
repnz
test
pop
stos
xchg
and
push
mov
cwtl
jge
pop
push
or
pop
or
out
shll
or
fstps
leave
push
jnp
mov
jno
test
xchg
rorl
jnp
add
adc
jns
bnd
mov
inc
cmp
idivb
flds
mov
jge
lcall
sbb
sub
popa
push
cwtl
cmp
in
scas
shrb
and
mov
mull
aam
dec
daa
aaa
rorb
mov
sub
jno
xchg
cli
jp
repnz
pop
adc
out
hlt
adc
loop
fmuls
jp
lret
inc
mov
in
mov
push
push
jecxz,pn
out
sub
cmp
jnp
cmc
cmp
aad
jle
ficoms
adc
pusha
cmp
and
bound
adc
adc
mov
xchg
sbb
cmp
push
dec
add
popa
dec
mov
inc
xchg
popf
sarb
js
outsb
rcrl
aam
fdivrp
adc
xor
fsubrl
sub
jecxz
aaa
cmpsb
addb
and
mov
cmp
lods
and
mov
pop
pop
sbb
push
cli
jns
rcrl
jmp
test
mov
and
mov
push
pop
jns
std
pop
xchg
pop
mov
aaa
dec
add
mov
insb
lods
loopne
sahf
test
mov
xchg
pushf
jb
add
xor
imul
cmp
mov
out
mov
pop
inc
pusha
inc
sbb
pminsw
iret
ret
rcrb
mov
xchg
inc
cmpsl
inc
sbb
cltd
pop
outsb
push
inc
int3
mov
or
push
int
lds
ret
xor
xchg
stos
dec
popf
jg
test
xorb
and
dec
cwtl
pop
pop
mov
xchg
ss
or
cmp
insl
gs
push
loop
lcall
repz
mov
and
jne
xchg
sub
add
jmp
sub
out
jle
sbb
jb
imull
pop
cmp
nop
mov
dec
push
lods
imul
frstor
inc
adcl
mov
mov
cmc
idivl
fucomp
pop
sbb
addr16
idivb
sbb
stc
inc
jne
inc
cmp
mov
inc
aaa
clc
insb
sbb
sbb
cmp
push
cmpsl
loopne
cmp
outsl
loope
or
fincstp
xchg
aad
lods
jnp
lret
mov
push
pushf
jno
add
jge
lahf
mov
arpl
nop
addr16
jnp
push
sbb
cmp
or
jb
dec
mov
dec
or
push
xor
lahf
and
mov
xlat
adc
ja
out
mov
inc
testb
sarl
push
addr16
dec
sbb
mov
jb
lds
xor
mov
push
xor
test
xchg
mov
mov
rclb
jns
es
xor
mov
pop
ljmp
or
pop
test
dec
sub
cmp
adc
arpl
xchg
dec
sbb
jo,pn
push
jecxz
cmpsl
jmp
mov
mov
pop
push
shll
ljmp
sub
fdivr
mov
and
in
sti
movsl
bound
jl
push
or
popa
loope
aam
aaa
je
xchg
jb
cmp
cmpsl
push
fbstp
test
add
int3
add
cltd
adc
jne
mov
dec
clc
aad
fwait
ja
addb
and
movsb
dec
adc
xorl
xchg
mov
pop
mov
inc
mov
push
repz
dec
rep
pusha
xchg
jb
arpl
push
cmp
stc
test
add
jne
loop
sbb
fnstsw
test
push
stos
stos
dec
scas
icebp
in
je
stos
xor
lods
loop
lahf
push
adc
xor
inc
sub
sub
andb
cmp
fiaddl
nop
jl
test
in
lods
or
testb
jns
lea
push
mov
adc
pop
adc
pusha
cli
adc
cwtl
inc
cwtl
fisubrl
fimull
out
lods
jg
ret
mov
rcll
xchg
lea
fs
outsl
push
pop
mov
push
in
pop
cmp
aas
jmp
fildll
adc
mov
sub
jecxz
mov
cs
xorb
cmp
jecxz
cltd
arpl
or
push
jne
cmpl
inc
imul
scas
adc
and
cli
sub
and
cmp
mov
inc
sub
inc
xchg
pop
pop
dec
xchg
xchg
mov
add
aad
adc
push
inc
push
add
daa
mov
jo
aad
push
pop
ja
sub
and
scas
in
inc
lods
dec
mov
outsb
inc
sub
imul
mov
push
repz
pop
jnp
loop
push
jge
push
pop
xchg
add
cli
loope
bound
xchg
jae
pop
out
xlat
cltd
mov
push
stos
sub
lcall
ror
aam
roll
push
scas
mov
into
fwait
mov
inc
mov
and
mov
adc
mov
test
or
scas
out
ficompl
jno
sub
adc
pop
arpl
lds
mov
ljmp
jb
push
inc
hlt
cmp
mov
stc
stos
test
push
shll
jl
cmp
mov
cli
and
mov
add
shll
int
scas
lret
mov
insb
shll
mov
icebp
stos
sbbb
xchg
mov
imul
mov
lcall
xchg
out
pop
fsin
andb
test
inc
test
add
imul
rorl
inc
clc
xchg
stos
push
fwait
mov
in
pop
cmp
jae
addb
mov
add
sub
adc
cmp
shll
jnp
and
mov
clc
idivl
adcl
mov
popa
inc
cmpsb
out
jae
mov
dec
inc
das
adc
ljmp
and
test
scas
sbb
pmulhuw
jl
xor
jmp
mov
cli
or
aam
scas
xlat
lret
nop
sar
pop
xor
jae
cltd
scas
fstpt
clc
jle
sbb
inc
jl
fwait
cwtl
sub
out
movsl
mov
sub
push
enter
jge
jg
sarb
mov
ficoml
dec
add
hlt
js
shlb
fstl
fs
adc
ss
pop
lahf
mov
test
jae
out
jnp
cmpsb
popa
sbb
ret
ljmp
sub
fwait
es
mov
inc
push
cmp
aad
aad
inc
mov
nop
xchg
jmp
faddp
pop
cli
mov
and
dec
dec
divl
sarl
cld
sub
clc
decl
mov
xchg
in
outsb
lret
push
cmp
out
inc
shrb
pop
mov
inc
inc
jge
sbb
mov
enter
adcl
sar
mov
add
fnstsw
sub
sbb
rorl
insl
test
rcrl
cwtl
iret
fimull
adc
in
and
pop
jmp
es
stc
aaa
rol
jae
mov
sub
in
xor
mov
cmp
das
mov
sbb
inc
stc
std
arpl
int3
and
xor
rclb
pop
jge
lret
pop
jnp
pop
add
xchg
pop
jle
or
scas
fnstsw
imul
cwtl
adc
adc
cmp
add
test
fs
jp
pop
or
push
enter
insb
pop
jle
mov
out
push
or
ret
jecxz
lea
fidivs
add
in
or
inc
nop
inc
rol
or
shl
repz
cwtl
xchg
pop
into
xchg
testb
cwtl
repnz
push
stos
push
or
test
lcall
or
in
aas
mov
inc
jle
xchg
xlat
inc
test
jo
mov
add
dec
mov
mov
loop
sbbb
scas
aad
cmpsl
rorl
hlt
push
xor
mov
out
lret
test
sahf
daa
sub
inc
mov
fmull
push
xchg
sarl
inc
sbb
out
xchg
add
mov
cmp
mov
jmp
fsts
mov
xchg
xor
jmp
push
jge
or
cld
mov
and
push
movsb
sbb
push
data16
adc
sub
fnstsw
dec
dec
ds
ss
lock
daa
cmc
or
inc
repz
scas
outsl
sub
std
inc
mov
addr16
test
fs
lods
pop
xor
lret
dec
sbb
xchg
das
jmp
pop
add
push
push
punpcklbw
les
pop
leave
push
inc
mov
aaa
into
lcall
in
mov
jle
mov
cmp
dec
jns
pop
or
jno
pop
jl
pop
cmc
add
hlt
sub
sub
or
lcall
les
inc
push
mov
push
ret
mov
mov
push
data16
repnz
push
clc
sti
or
es
mov
icebp
jo
call
pop
cmpsl
sbb
fsubr
flds
cli
repnz
rcr
dec
mov
ds
lret
inc
mov
rclb
aaa
insb
fcoms
repnz
repnz
rcll
fistpll
in
inc
fisubrl
leave
jno
movsb
push
adc
push
shrl
je
aas
jl
pop
sub
cmpsb
fwait
sahf
outsb
jbe
in
xchg
mov
pop
data16
cmp
push
jo
jae
ret
out
fdiv
jnp
xlat
push
imul
int3
or
scas
sarb
aas
and
lahf
fwait
dec
inc
and
or
lcall
ret
cli
cld
push
push
js
mov
sub
or
pop
faddl
jle
sub
push
bound
xor
inc
into
scas
cmpsb
push
jmp
xorb
jge
jns
arpl
std
mov
adc
leave
push
ret
mov
in
mov
rcrb
jno
in
push
loope
mov
into
fists
xor
lods
sti
xchg
and
pop
shll
jne
xchg
xchg
leave
ret
cmp
pop
or
cmpl
xchg
mov
addr16
and
mov
sbb
sub
pushf
jecxz
sbbb
xchg
dec
push
dec
dec
cmp
xor
fisttpll
shll
inc
adc
shlb
dec
mov
cmp
sahf
jmp
in
inc
icebp
push
cli
pop
jae
push
jno
push
cmp
jnp
sbb
push
cmc
gs
popf
pop
jno
rcrb
adc
dec
xor
lods
fstl
add
mov
mov
fnstenv
test
fmull
or
iret
lret
ds
add
jp
push
in
cwtl
in
mov
test
inc
mov
inc
jb
xchg
xchg
mov
inc
imul
aad
fsubl
cmpsb
add
cwtl
push
add
adc
scas
stos
add
jnp
cmp
pop
xor
xchg
cmp
mov
mov
not
jns
fldcw
cmovg
xor
or
dec
cmp
mov
inc
pop
mov
and
mov
add
fwait
xor
push
lcall
cmp
es
cwtl
shl
xchg
rorl
mov
mov
fucom
jbe
push
jmp
enter
js
pop
arpl
jne
mov
and
sbbl
mov
cs
stc
or
in
push
xchg
mov
add
nop
jecxz
push
or
mov
nop
pop
in
pop
push
xchg
mov
jge
pop
lcall
or
mov
jnp
push
xchg
mov
fists
pop
mov
inc
ret
inc
sub
fsubl
aaa
mov
push
sub
add
ret
fdivrl
xchg
push
or
inc
or
aad
insl
add
std
cmpsb
jge
cld
xchg
pop
and
loop
mov
jg
mov
shll
inc
sub
mov
out
shrl
adc
mov
xlat
mov
aaa
out
xchg
call
sbb
add
cmpsb
or
dec
mov
fcomp
adc
cmpsl
mov
scas
mov
mov
pop
push
push
popl
das
pusha
pop
ret
mov
sbb
inc
xchg
cmp
xchg
and
sub
push
fdiv
addr16
sarl
and
out
jo
stos
jnp
ret
jg
movsb
js
pop
xor
fidivl
ret
mov
fwait
sbb
lcall
call
es
aad
xchg
jne
fistl
gs
jle
push
clc
mov
dec
add
push
lods
pusha
in
cltd
jecxz
cld
xchg
or
fiaddl
daa
jnp
or
mov
or
mov
inc
sbb
rorb
inc
enter
push
or
lods
cmp
adc
adc
xchg
push
xor
mov
dec
data16
imul
lret
outsb
fstpt
stos
sub
ja
icebp
mov
stc
fwait
out
fisttpll
icebp
adc
out
ret
cmp
push
hlt
push
xor
add
bound
iret
flds
mov
cmpb
rcl
idivb
aam
push
mov
adc
cmp
movsl
std
inc
arpl
leave
inc
mov
sbb
inc
pushf
adc
sahf
loop
push
jns
in
ret
fsubrs
pop
or
out
dec
push
fwait
sub
lods
push
mov
xor
rclb
adc
jg
jge
sarl
shll
lock
hlt
loop
mov
insb
adc
xor
pop
lret
inc
mov
outsb
shll
shll
mov
movsb
mov
cmp
popf
mov
sbb
ret
mov
out
mov
movsb
lahf
mov
xor
adc
adcb
mov
pop
mov
mulb
es
fcomip
add
sub
lret
in
out
push
push
test
fdivl
popf
mov
pop
jno
imul
mov
cmpsl
mov
inc
clc
add
mov
or
mov
push
or
mov
inc
cmpsl
ljmp
js
adc
xchg
cmpsb
ja
mov
cmp
pop
in
push
cmp
out
cmp
xchg
xchg
std
cmpsb
pop
aas
leave
daa
test
lret
cmp
push
in
clc
sahf
loope
test
les
jae
xor
push
xor
push
gs
sbb
fcoms
test
or
iret
scas
push
mov
xchg
and
dec
dec
jb
lods
pop
or
push
loopne
adc
mov
mull
pop
xor
cltd
lods
sub
pop
cli
in
int3
jae
repnz
push
insb
fmulp
push
das
std
lock
lods
mov
fadds
stos
addr16
dec
popa
int3
pop
inc
subb
mov
lock
aas
cmpsb
lock
test
ljmp
xorl
js
pop
inc
or
add
out
pushw
inc
std
testl
add
mov
movsl
pop
clc
pop
test
jbe
int3
fsubs
inc
repz
sbb
sahf
leave
xchg
int
add
jp
cmc
cmp
pop
push
mov
ret
pop
adc
fisttpll
fistl
rcll
xlat
aas
mov
mov
popf
aad
push
movsb
add
jbe
cmp
in
fstpl
xchg
aas
fisubrl
jo
and
ficoml
mov
inc
aaa
movsl
movaps
jns
jp
pushf
dec
and
mov
popf
popa
sbb
adc
lock
pop
pop
add
scas
pop
mov
jp
add
pusha
lcall
mov
sbb
movsb
mov
mov
les
in
add
inc
scas
es
js
add
movd
test
fprem1
in
or
lods
sbb
test
inc
mov
enter
out
repz
and
ja
and
aad
leave
jp
addr16
enter
push
test
insb
scas
mull
into
sti
movsl
xor
xchg
nop
mov
xlat
ds
pop
push
or
add
imul
or
fs
rcrb
js
dec
mov
xchg
cmp
shl
lret
cs
dec
fildll
dec
pop
das
scas
pusha
mov
movsl
xchg
test
rorb
adc
inc
mov
or
or
cmp
lcall
add
mov
add
xor
aaa
xor
mov
dec
xchg
lods
xbegin
subb
pop
outsl
jle
mov
int
mov
dec
int
cmp
repnz
xchg
push
xchg
test
cmpsb
sti
xchg
lret
lods
adc
inc
mov
sti
iret
sub
sahf
repnz
gs
popa
mov
inc
sbb
adc
jae
mov
mov
leave
addr16
lock
dec
push
cmp
pushf
pop
xor
xchg
les
sbbl
fsubrl
or
mov
push
inc
shlb
stc
mov
push
aaa
add
adc
xor
pop
ficomps
or
call
push
inc
sbbb
jl
ja
mov
cmp
shrl
dec
rol
cmp
rcrb
add
pop
stos
inc
les
mov
popf
xor
fwait
sbb
xchg
filds
mov
imul
and
aaa
test
and
pop
jno
rolb
mov
dec
add
or
inc
and
inc
pop
ret
adc
pusha
in
dec
xorb
adc
add
jo
or
sbb
aad
mov
int3
dec
pop
pusha
insb
sbbb
and
mov
movsb
outsl
xchg
imul
push
imul
scas
mov
js
mov
inc
pop
ljmp
sbb
xchg
push
xor
dec
icebp
mov
push
inc
lcall
pop
xchg
xor
test
mov
jl
cmp
pop
cwtl
bound
xchg
nopl
cwtl
mov
pop
cmpsb
sbb
jle
imul
mov
movsb
xor
test
dec
sbb
jns
into
popf
insl
leave
mov
fisubl
or
fidivrs
mov
stos
shll
je
or
aas
inc
fcomp
arpl
scas
lahf
cmpsb
push
adc
gs
jecxz
mov
dec
xor
or
xchg
push
sarl
push
push
dec
js
rcrl
pushf
bound
adc
pop
icebp
adc
inc
je
call
cmp
mov
add
cmp
lea
jo
fdivl
pop
jnp
mov
mov
xchg
imul
dec
bound
pop
and
jle
or
insl
stos
fdivs
inc
dec
push
mov
jl
inc
inc
mov
data16
mov
outsl
or
sub
pop
xor
inc
inc
cmp
ljmp
enter
lcall
ret
ds
pop
push
imul
jge
adc
add
ss
std
mul
xor
or
push
out
sub
mov
cwtl
fadd
push
and
aas
sbb
lock
aam
ljmp
adc
stc
das
popa
sbb
push
or
insb
cmp
push
cmp
imul
push
jmp
ja
mov
test
pop
mov
add
ss
xchg
popa
sub
and
and
aad
stos
dec
jnp
mov
cltd
ret
push
xor
std
pop
in
aam
pop
push
jl
mov
data16
rclb
pop
add
aas
out
aaa
out
outsb
jl
jne
adc
jo
mov
shll
mov
push
int
add
ljmp
sub
or
jo
repz
int
stc
xor
xor
mov
cs
inc
dec
xchg
lret
adc
ljmp
inc
adc
jno
sub
das
lret
ds
add
mov
sub
adc
jae
movsl
dec
pop
les
mov
test
adc
movsl
xchg
test
fistpl
divl
mov
and
mov
mov
and
rcrb
pop
or
btr
shlb
cmpsl
pop
add
push
inc
inc
inc
jae
inc
fsub
repnz
mov
or
jnp
inc
or
loope
imul
dec
outsl
cli
ror
dec
jge
fimull
jbe
or
cmp
xor
inc
test
mov
fisttpl
mov
lods
and
add
repz
mov
in
pop
ss
mov
std
into
mov
rorl
fcomps
dec
fdivr
js
btrl
fnsave
ljmp
mov
mov
xor
push
into
jecxz
and
pop
push
adc
fldt
fcoml
xlat
push
or
or
test
mov
out
pop
push
pop
mov
jmp
inc
pop
mov
mov
push
not
dec
sbb
push
xchg
pop
movsl
cltd
mov
in
dec
fisttps
adc
or
andb
mov
inc
sahf
or
cmp
push
je
lock
dec
ja
mov
adc
or
clc
jns
inc
inc
pusha
xorb
jno
sub
push
movsb
test
pop
inc
inc
pop
sahf
inc
pcmpgtd
dec
jge
cmpsl
cmpsb
cmp
test
and
test
adc
add
xchg
add
int3
xchg
adc
and
loopne
push
sub
nop
cmp
call
fisubs
add
adc
fucomip
out
leave
push
mov
scas
push
dec
jb
cmp
scas
xor
pop
out
sbb
push
sbb
pop
fstpt
rcr
mov
cmpsb
jno
xlat
add
sub
xchg
les
sti
xchg
outsb
std
jg
cwtl
dec
lcall
icebp
jns
stos
fwait
sub
repz
iret
mov
dec
insb
add
xchg
xor
stos
or
add
or
scas
xor
cltd
out
push
cmp
push
add
loope
jmp
sahf
incb
push
es
cmp
lods
mov
and
push
cld
in
pop
xor
jns
das
inc
and
insl
out
sbb
inc
dec
addr16
ret
scas
xchg
push
xchg
xor
mov
or
int
dec
xchg
add
aaa
xchg
repz
into
dec
in
mov
dec
loopne
rclb
mov
imul
fcoml
mov
inc
lock
loopne
cwtl
int
scas
mov
mov
dec
addr16
int
pop
mov
jb
mov
imul
divb
mov
scas
in
aad
mov
jmp
cwtl
inc
cmp
dec
cmove
jns
cwtl
leave
adc
pusha
cwtl
mov
loopne
or
imul
xor
cld
jb
xchg
out
xor
gs
cmp
mov
andl
fisubrs
inc
shlb
movb
jo
jg
jmp
loop
jg
lret
mov
push
jge
dec
dec
leave
js
xor
mov
pop
ja
test
outsl
push
push
lods
sub
push
scas
push
jg
xchg
cmp
mov
mov
hlt
cltd
ljmp
fadd
push
jmp
pop
test
lods
lock
jmp
sub
cld
stos
das
bound
movl
jmp
int3
test
inc
inc
adc
add
mov
xchg
push
sbbl
je
cmp
negb
pop
jecxz
in
lock
jnp
add
pop
adc
add
push
cld
xchg
push
xchg
je
jno
hlt
data16
and
sbb
or
outsb
sub
cmpsb
jl
shl
push
or
mov
faddl
loope
xor
scas
arpl
inc
pop
repz
pop
cli
ret
pop
jle
stc
arpl
out
lahf
cmpb
or
xor
sbb
cmpsb
test
dec
data16
addr16
fisubl
jl
and
cmp
xchg
sub
mov
dec
xchg
jecxz
mov
jle
test
andl
mov
stos
sbb
and
pop
push
sbb
sub
lock
xorb
inc
push
push
sbb
and
cmp
lock
in
test
ret
jbe,pt
sbb
mov
jle
movsl
mov
sub
pop
fs
jmp
lds
mov
sbb
or
icebp
mov
mov
addr16
lret
cli
in
push
pop
cmp
repz
push
add
das
mov
fdiv
add
push
sbb
lahf
fistl
and
mov
inc
pushf
xor
mov
addr16
inc
mov
rolb
ret
stos
out
sub
aad
mov
inc
sahf
push
jecxz
das
sbb
pop
inc
cld
xor
ds
inc
cmp
xlat
test
insb
add
decb
or
pop
mov
mov
shl
jae
jg
mov
xchg
es
addb
inc
jp
mov
scas
lods
jne
ficoms
adc
popa
adc
scas
pop
and
out
ds
movsb
mov
xchg
pop
push
push
xor
scas
cmp
sub
movsl
xor
jno
add
lds
and
jne
mov
jae
push
imul
jnp
lret
dec
inc
push
and
push
push
mov
sub
cmp
and
pop
insb
popf
int3
and
outsb
scas
je
into
pop
stos
mov
push
push
pop
xchg
and
cmp
inc
cld
aaa
stos
pop
jno
inc
inc
xlat
stos
add
jle
insb
sub
test
popa
xchg
stos
out
dec
lds
movsb
xchg
inc
jmp
push
stc
mov
inc
pop
mov
aam
jmp
push
popa
clc
xchg
fldcw
loope
mov
es
jecxz
cld
lret
mov
lret
js
gs
cmpb
cli
or
mov
sbb
cmp
cmp
lods
cmp
sub
xchg
jns
or
jecxz
aaa
inc
sti
or
jbe
jle
mov
mov
ret
daa
out
dec
lock
js
mov
sahf
jecxz
mov
insl
adc
aas
adc
jmp
movsl
cwtl
cmp
in
lahf
lahf
outsb
or
mov
lods
jmp
testl
mov
inc
orl
add
cmp
and
sub
pop
or
pop
cmpsb
cli
pop
add
sub
mov
xor
and
cs
sahf
sbb
das
scas
pop
push
cmpsb
and
mov
dec
xchg
outsb
xchg
mov
je
inc
push
jno
mov
jl
adc
sub
testl
js
fld
stos
xchg
inc
or
sarb
mov
jb
mov
outsb
in
or
cmp
out
add
clc
testl
pop
fcompl
push
shrl
jbe
repnz
xchg
rcrb
movsb
ret
mov
mov
mov
sbb
data16
dec
es
mov
and
lcall
adc
mov
xchg
imul
lret
aaa
aaa
aas
push
xchg
jg
je
popf
ret
loope
icebp
fcomps
scas
test
sub
sbb
leave
std
mov
sbb
mov
lret
aas
push
js
rorl
dec
adc
inc
outsb
andl
xchg
movsl
cmp
cmp
orl
mov
rorl
testl
lods
mov
outsb
aas
test
aad
std
inc
add
push
inc
into
nop
dec
rcrl
or
lock
and
scas
push
pop
add
jle
xor
out
leave
adc
jecxz
mov
add
sbb
clc
cmc
imul
push
adc
sbb
std
and
mov
dec
loopne
rorb
jns
ret
cmpsl
xorb
mov
add
pop
xlat
pop
xlat
icebp
mov
cmp
out
jne
outsl
shll
mov
sbb
mov
in
xorl
push
aam
mov
xor
cmp
mov
adc
lods
js
mov
sub
add
cmp
movsl
lea
lods
xor
sbb
fisttpl
jno
mov
loop
bound
push
sub
pop
dec
lock
and
push
xor
inc
sub
mov
inc
arpl
sti
pop
cmc
outsb
cmc
sub
sub
pusha
push
dec
out
lock
ss
or
je
cmc
pop
adc
in
arpl
lods
inc
imull
jecxz
aas
rcrb
sbb
mov
mov
repz
stos
dec
outsl
sbb
popa
mov
mov
test
in
out
aad
sub
jnp
mov
inc
mov
pop
dec
sarb
jnp
inc
add
es
adc
dec
movsb
inc
das
mov
in
jl
mov
adc
stc
push
sub
pop
pop
stc
mov
push
adc
insb
shr
lock
outsl
dec
dec
ds
into
and
aam
push
cmp
pop
mov
sarl
sbb
push
adc
ffree
mov
sbb
inc
stos
jmp
or
adc
mov
notb
ja
inc
mov
sahf
aaa
mov
hlt
ret
pop
pop
cmp
xchg
jnp
hlt
push
push
cmp
mov
mov
fildl
xchg
repnz
popf
fnstsw
cmpsl
xlat
cltd
lcall
adc
cmp
jb
sbb
aas
stos
bound
cwtl
dec
hlt
dec
pmulhw
dec
dec
enter
mov
bnd
test
sub
push
mov
jmp
ret
add
aas
clc
sahf
adc
sahf
push
daa
int3
add
push
jmp
push
adc
jbe
bound
sub
add
popa
inc
cmpsb
scas
stos
rcrl
inc
mov
xor
jb
push
arpl
sarl
sbb
cld
repz
dec
sub
mov
stos
pop
inc
mov
xchg
xor
data16
adc
lret
arpl
xchg
popf
jno
test
cld
mov
mov
mov
xchg
cmp
test
mov
jno
decb
popa
fcompl
adc
fidivl
enter
inc
cmp
add
dec
xchg
push
jge
loop
inc
inc
and
js
or
jns
stos
jge
dec
lds
andb
inc
sub
aam
enter
das
ds
jecxz
mov
call
stos
cltd
shlb
mulb
or
popf
in
sbb
xchg
mulb
sub
pop
cmpsl
jl
xchg
cld
jmp
xlat
cmp
gs
mov
inc
push
mov
and
cmp
pop
sti
cs
or
adc
sub
repnz
xchg
inc
mov
scas
or
in
adc
sub
ljmp
mov
les
sub
xchg
into
adc
lret
dec
cmp
lret
inc
dec
addb
mov
and
xor
fcmovb
or
movl
xchg
push
je
cwtl
orb
and
popf
xor
subl
jae
mov
add
cmp
add
fidivs
test
and
pushf
push
and
lahf
sarb
rorb
inc
adc
xchg
sub
or
jbe
mov
sbb
cmp
or
pop
dec
ret
jle
fistps
fildl
add
sub
test
lds
or
cwtl
lea
mov
pop
inc
inc
ficoms
add
call
repnz
addr16
lods
and
sbb
inc
stc
data16
xor
mov
mov
popf
fiaddl
repnz
adc
test
rorb
shrl
insl
xchg
pop
jp
sbb
or
enter
push
in
int3
cltd
sarl
mov
dec
les
js
stos
jl
push
xor
or
incb
mov
hlt
push
cmp
iret
outsb
jbe
ss
aas
mov
push
or
andl
aaa
lret
out
gs
clc
mov
and
inc
ret
lods
cmp
aad
sahf
and
jp
testl
and
mov
out
repnz
lea
xchg
out
lds
mov
cld
fs
adc
cmp
xlat
mov
mov
call
dec
test
mov
mov
cmp
data16
dec
test
xchg
pop
test
mov
int
push
cmc
data16
arpl
sbb
dec
xor
push
sub
or
adcl
jecxz
lcall
or
jp
ret
pushfw
pop
int
push
aam
lret
jae
push
dec
pop
push
dec
dec
mov
xchg
rorl
shlb
mov
jae
cltd
mov
xor
sbb
jg
je
enter
sbb
jle
roll
mov
fs
out
ds
stc
xor
or
js
sub
rorl
sub
push
and
inc
push
push
jg,pt
pop
push
clc
stos
out
push
fsubl
stos
inc
inc
jle
mov
jmp
add
lret
popf
les
or
enter
je
data16
fsts
jo
push
inc
cmp
das
xchg
fbld
in
mov
sub
fiaddl
hlt
aas
push
cwtl
pop
insl
push
pushf
out
jae
dec
das
sub
mov
lcall
mov
in
push
push
inc
enter
icebp
mov
cmpsb
stos
xor
bound
fsubr
mov
scas
mov
jnp
or
adc
jne
out
adcl
into
cmpsb
in
ret
mov
and
mov
rcr
call
lret
decb
dec
lock
mov
shr
js
jo
orb
jnp
xchg
mov
xchg
arpl
pop
sahf
mov
sub
inc
and
and
stc
mov
mov
shlb
jge
mov
roll
sbb
sbb
mov
push
dec
mov
pop
fcomps
out
je
enter
xchg
pushf
adc
xchg
out
dec
das
mov
push
add
inc
test
das
call
aas
cmp
movsl
sub
pop
jae
aas
cmpsb
push
jg
les
pop
adc
push
cmc
push
mov
stos
xchg
mov
das
xchg
or
lret
cmp
loopne
imul
sub
or
outsb
mov
mov
outsb
out
ss
adc
loop
xchg
or
mov
jmp
xchg
into
sub
dec
xchg
sbb
sbb
mov
push
xchg
fists
or
jle
mov
mov
push
push
popa
mov
dec
call
inc
adc
sub
loop
pop
mov
push
or
cltd
sahf
xor
push
repnz
and
in
pop
imul
dec
lahf
aas
sbb
stc
mov
ret
mov
push
inc
xchg
rcr
addr16
in
in
loope
xor
ss
and
xor
xchg
andb
cwtl
xor
push
jl
inc
test
repz
mov
pop
mov
in
cmp
mov
pushf
and
cmp
jge
je
mov
pop
je
cmc
cltd
xor
mov
push
imul
ror
mov
cmc
out
notl
mov
mov
and
mov
push
outsb
mov
insl
mov
mov
jb
inc
jb
mov
pop
or
ds
push
pop
add
jmp
dec
ljmp
push
movsb
inc
jb
mov
fldt
test
insb
xchg
not
inc
imul
cli
repnz
fwait
bound
test
add
xchg
pop
addr16
scas
ret
mov
cld
cmp
cmp
in
and
mov
jbe
inc
cmp
les
stos
or
je
xchg
sub
mov
dec
test
lret
imul
xchg
inc
dec
lret
or
pop
je
sbb
inc
sub
clc
test
push
push
pop
fldenv
xchg
mul
mov
clc
jbe
pushf
lods
adc
mov
push
xor
aaa
mov
das
negb
dec
xchg
lcall
mov
cmpsb
sti
lods
lcall
sbb
xchg
cmpsl
xchg
and
add
push
sbb
inc
jne
loopne
cld
call
or
add
cmp
xor
and
fiadds
jo
test
inc
popa
insb
push
push
je
jno
decb
loopne
lods
sbb
cmpsl
pushf
mov
adc
dec
jmp
daa
and
ret
shlb
pushf
popa
pop
inc
cs
xorb
jge
xchg
mov
pop
je
pop
cmpsb
out
sbb
stos
call
orb
push
mov
test
mov
nop
pop
mov
sti
cli
scas
lret
mov
push
pop
sbb
mov
pop
jbe
sar
cmp
sbb
adc
imul
iret
addr16
insb
or
ja
test
mov
outsb
mov
and
repz
jns
pop
test
add
sbb
mov
icebp
add
hlt
and
cmp
call
not
or
inc
ljmp
in
popf
jo
pusha
sub
mov
aaa
inc
mov
push
sbb
push
inc
and
aad
test
jecxz
lahf
repz
inc
cmp
and
insl
and
lret
jp
cmc
stc
ja
mov
and
cmpsl
lea
pop
test
ljmp
dec
cli
add
xlat
fsubr
cwtl
das
cmc
fstl
mov
push
int
mov
xor
mov
cwtl
dec
pop
stos
test
out
or
pop
movsl
pusha
push
xchg
shlb
adc
and
jle
jmp
fs
sbb
xchg
imul
sbb
popf
mov
inc
mov
mov
and
rcrl
insl
sub
pop
sbb
mov
cmpsl
push
dec
sub
js
mov
sbb
lods
sbb
mov
push
stc
dec
call
add
and
adc
inc
popf
adc
pusha
ds
jbe
scas
in
xchg
ss
dec
mov
aam
add
bound
adc
mov
and
sub
roll
in
pop
jl
add
loope
dec
push
jbe
sbb
repz
fnstcw
idivl
push
je
iret
dec
scas
mov
int3
cmp
mov
and
int3
loope
arpl
xchg
sub
jecxz
xchg
daa
cmp
pusha
dec
add
hlt
jg
and
arpl
xor
in
je
cmp
and
int
jo
ret
sahf
ror
lahf
bnd
dec
addl
out
xor
hlt
out
mov
xchg
sbb
mov
inc
xchg
ret
in
addr16
in
mov
leave
push
jns
daa
mov
das
dec
mov
arpl
es
dec
loope
subl
outsb
int3
jle
in
pop
mov
mov
mov
jl
push
repz
pop
fcomip
sub
jg
push
adc
lds
scas
add
add
sahf
imul
or
lods
imul
push
lret
popf
mov
jg
mov
push
xchg
adc
pop
xor
inc
sbb
test
in
xor
lds
cmp
mov
pop
cmp
call
sub
adc
adc
xchg
scas
incl
popf
outsl
orb
loopne
es
mov
fs
mov
xchg
add
add
das
or
out
cmp
test
es
push
movsb
cmpsb
xchg
pop
mov
dec
inc
inc
push
mov
out
inc
imul
les
mov
ss
push
adc
cmp
test
push
fistpl
or
mov
stos
sub
cmp
mov
lds
sub
xorl
or
sbb
outsl
inc
lock
dec
add
popf
mov
shll
mov
pop
test
fisubrs
dec
jbe
jo
cs
pop
sbb
shrl
lahf
je
pushf
sbb
push
cmp
js
cs
dec
out
push
sbbb
or
xchg
sub
mov
and
div
daa
movsl
mov
aad
fcompl
cmpsb
stos
ficoms
mov
je
outsb
mov
mov
sbb
int3
push
shr
pop
mov
popa
aam
pop
sub
js
mov
sahf
xchg
stos
cwtl
xor
mov
sbb
sbb
int
fwait
pop
daa
das
clc
jne
adc
enter
or
out
lea
daa
cltd
adc
int
add
mov
pop
ljmp
xor
and
rcrb
in
out
push
mov
repz
jno
jle
ds
mov
dec
outsl
lcall
add
movsb
arpl
fidivrl
or
in
frstor
add
shlb
ja
adc
mov
out
xchg
pop
jae
push
fwait
ja
aad
shrl
int
pusha
js
sti
xchg
addr16
xchg
xor
imul
fdiv
jb
ja
test
xor
mov
bound
jecxz
xorl
std
inc
xor
push
and
push
sbb
jbe
cmp
mov
mov
scas
xchg
xchg
daa
add
pop
xchg
gs
daa
out
mov
cmpsb
push
mov
pop
data16
inc
xchg
movb
std
rcrb
adc
push
cmp
shld
outsl
mov
out
pop
pop
movsb
insb
orl
inc
cwtl
mov
jnp
mov
push
movsl
movsb
jecxz
cmp
push
xchg
and
inc
movsl
sub
mov
mov
test
mov
popf
outsb
or
sti
and
xchg
pop
xchg
push
push
negb
push
sbb
cmp
dec
add
jl
fimull
call
icebp
mov
aad
out
mov
add
enter
aaa
enter
sbb
xchg
loope
lcall
push
jge
aam
mov
mov
ss
leave
xor
leave
out
pop
and
adc
cmp
fiadds
setg
and
arpl
cmp
add
jg
mov
pushf
xor
add
mov
imul
cmp
fld
add
insb
adc
cwtl
sbb
in
fisubl
lea
sbb
out
popf
cmpsl
cli
ds
shll
inc
and
mov
xor
add
rcll
add
push
xor
aas
push
repnz
data16
pusha
sub
fs
sahf
mov
imul
ja
enter
mov
aas
add
lret
out
fmul
xchg
jge
int3
inc
dec
mov
aad
mov
cltd
stos
scas
xchg
mov
mov
jmp
add
jno
add
xchg
xor
jg
out
mov
addb
sub
ror
lret
add
mov
cltd
cld
add
icebp
ja
xor
sub
jno
movsl
mov
mov
xchg
xor
notl
pop
das
and
imul
mov
jg
push
xor
xchg
cmp
es
push
adc
xchg
shrb
mov
or
dec
mov
adc
mov
mov
stos
shlb
and
dec
cld
fdivrl
in
sbb
leave
pop
jb
push
addb
push
ss
imul
mov
sub
stos
sub
mov
add
xorb
xchg
or
push
fsts
lret
mov
adc
xchg
sahf
dec
mov
xchg
add
std
jno
cld
rorl
push
std
mov
xchg
test
iret
int
jg
push
scas
adc
jg
hlt
sbb
add
pop
popa
mov
pop
dec
push
lds
xor
jmp
daa
add
jnp
xor
jns
push
sub
clc
and
loopne
ja
add
mov
out
xchg
cs
lea
je
jle
pusha
sbb
xchg
mov
aam
das
xor
mov
cmp
lods
push
pop
sub
out
js
inc
sarb
insb
fistpl
in
xchg
and
push
pushf
lock
and
push
lret
mov
push
xlat
jo
inc
inc
daa
filds
pushf
sub
inc
mov
fcmovnu
dec
aas
ret
iret
cmpl
popf
outsl
test
jg
pop
imul
fwait
xor
mov
clc
enter
lods
xchg
jg
inc
lahf
cmp
jae
mov
adc
cmp
pop
mov
dec
dec
into
mov
and
lods
lret
xor
push
bound
fldt
xlat
int3
fcoml
jbe
push
and
adc
xchg
add
push
lods
loopne
mov
arpl
sub
jg
aad
loopne
pop
mov
sti
iret
mov
jmp
fnstcw
in
mov
cmpl
movsl
dec
sbb
ret
sbb
aaa
enter
fcompl
mov
into
out
jge
mov
andb
push
push
aam
cs
lahf
mov
cli
adc
out
xor
pop
ja
in
dec
fadds
and
pop
mov
shl
sub
jae
xor
mov
jno
or
sbb
movsl
fadds
test
xchg
cmp
jae
xor
mov
lcall
pop
fcoml
dec
xchg
pop
aaa
xor
and
dec
inc
nop
mov
adc
lret
inc
pusha
idiv
popa
imul
les
mov
pop
fs
xchg
xor
test
outsl
or
dec
xor
adc
pop
mov
mov
in
adc
mov
fldl
mov
mov
andl
jecxz
arpl
adc
sar
mov
and
push
cmp
push
sahf
scas
movsb
dec
rorl
jb
dec
sbb
pusha
mov
scas
xchg
xlat
iret
xchg
mov
jnp
sub
and
mov
mov
and
fcmovnu
std
jl
adc
push
mov
sbb
dec
pop
insb
mov
adc
add
mov
std
jnp
cli
xchg
add
xchg
imul
and
sbb
das
test
or
sub
adc
jl
iret
bound
mov
lock
sub
int
cmc
andb
mov
rcr
jmp
std
imul
loope
das
mov
rorl
imul
andl
call
cmc
jl
popf
sbb
mov
cmp
dec
in
dec
pop
mov
xlat
das
fcomi
add
sub
or
insl
push
xor
inc
mov
stc
inc
cmp
in
subl
aad
test
inc
ror
ja
add
push
push
lea
into
push
and
jmp
sub
cltd
and
ficompl
loopne
sbb
mov
mov
call
mov
mov
imul
ja
das
test
test
dec
xchg
cli
push
mov
jl
mov
scas
mov
inc
jle
dec
repz
orl
pop
cs
pop
cltd
jg
shrb
mov
or
and
ds
inc
jnp
stos
leave
sarl
icebp
ja
insb
pop
mov
sub
dec
rol
fsubr
mov
adc
cwtl
jo
adc
xchg
pop
shl
push
cld
cmp
inc
xchg
jp
in
adc
out
pusha
ret
pop
lret
inc
jnp
adc
aas
pop
cltd
jbe
jp
shl
and
sahf
fisubrl
fstps
into
int
scas
dec
mov
je
or
stos
xor
leave
jecxz
mov
movsb
xchg
mov
mov
icebp
mov
out
fildll
out
stc
out
cmp
ljmp
inc
sub
mov
aas
dec
mov
cmp
push
mov
out
mov
scas
fsubrs
add
fmull
arpl
pop
xchg
sarl
adc
mov
xchg
mov
es
pop
in
pop
out
xchg
int
push
mov
push
push
mov
sub
jmp
pop
push
mov
jmp
adc
dec
and
stos
mov
sub
cmp
sub
mov
sbbl
inc
xor
xchg
xor
cwtl
xlat
cli
mov
mov
or
popa
js
fidivrl
mov
mov
fucomip
aaa
push
arpl
xor
mov
jle
dec
fsub
sbb
push
push
xchg
stos
insb
bnd
cs
xor
dec
mov
mov
jmp
dec
hlt
enter
cmp
xor
jmp
inc
cmp
add
out
aad
shll
js
or
push
test
add
sbb
pop
inc
mov
mov
push
lods
add
hlt
int
addr16
or
pop
and
or
pop
rorl
sub
mov
and
movl
jl
nop
nop
jecxz
ret
push
dec
cmp
enter
cmp
jl
fcoms
insl
bound
inc
imul
or
orb
faddl
addr16
push
xchg
cmpsb
aam
clc
sub
xor
jne
or
int
jecxz
mov
mov
xchg
push
push
push
test
inc
and
ror
test
mov
in
in
cs
data16
push
xchg
int
mov
fcomp
sub
sarl
fcmovu
jne
sub
mov
fdivl
das
aam
fisttpll
movsb
dec
out
aam
mov
in
xlat
mov
mov
mov
adc
adcb
mov
lea
xlat
mov
movsl
nop
jmp
test
jo
sub
jg
bound
adc
and
adc
adc
push
jg
and
xlat
movsb
xor
fsubs
inc
mull
sub
lods
sub
int
scas
adc
mov
mov
pop
or
jbe
jns
sahf
dec
mov
xchg
inc
andb
xchg
cmp
dec
roll
pop
jge
popa
clc
out
cmpb
xor
or
dec
out
jno
cs
sarl
mov
dec
pop
pop
repnz
stos
outsb
loope
pop
ljmp
pop
inc
in
insb
pushf
and
jno
add
js
or
insb
lods
xchg
inc
mov
mov
pop
out
das
pop
push
orb
jl
or
les
jne
push
lds
fstpl
pop
sub
popf
jae
addr16
or
and
stos
push
or
pop
mov
mov
popa
jno
mov
cmp
cs
scas
pushf
dec
les
push
jnp
push
mov
jnp
or
les
cmp
inc
test
int
sbb
mov
out
mov
int3
inc
shll
mov
add
in
sbb
pop
hlt
pop
or
aad
fwait
push
pop
aas
cwtl
bnd
int3
js
call
clc
xchg
jno
jns
or
mov
adc
fisubl
push
popf
pop
aaa
push
add
pusha
push
fcom
xor
xor
xchg
fptan
dec
fs
xchg
popa
xchg
jno
test
mov
jg
and
pop
outsb
movsb
adc
sbb
aaa
rcl
mov
mov
cmc
lret
movsl
das
mov
cld
jmp
add
sub
sbb
ljmp
cmp
test
mov
cwtl
pusha
lahf
push
push
push
mov
fs
and
pop
sbb
sarl
aad
jl
jg
cs
stos
or
or
outsl
xor
aam
mov
and
pusha
pop
adc
shlb
adc
xchg
adc
xchg
or
jmp
pop
pop
cwtl
in
cmpsl
add
test
ja
jle
pop
repz
mov
or
test
aas
add
pop
arpl
dec
cmp
cmp
lods
fsubl
out
mov
mov
jge
xchg
fmul
xchg
leave
jmp
ret
inc
push
adc
ja
sarb
adc
inc
je
addr16
ds
dec
pop
divb
xor
in
xchg
add
leave
dec
inc
push
add
or
stos
pop
repz
fwait
imul
mov
ja
cmp
pop
mov
ja
shll
xor
xor
pop
xor
das
xchg
mov
jge
xor
aas
inc
pop
loop
xchg
aaa
lods
mov
insb
fwait
inc
sbb
dec
xor
push
shll
adc
mov
fistpll
rcl
dec
scas
lret
lock
mov
fwait
dec
sub
mov
mov
jns
arpl
or
mov
aas
xchg
add
popf
mov
mov
jnp
pop
dec
daa
or
stc
notw
and
xor
adc
and
int3
cltd
fstpt
and
jge
imul
gs
or
femms
jge
pop
jl
mov
xor
loope
data16
fs
rorl
mov
cli
jbe
jp
call
cmp
or
or
jno
cmp
sahf
mov
lahf
fdivrp
int
cwtl
dec
or
out
push
cltd
mov
push
lcall
fucomp
stos
shrl
test
xchg
mov
inc
mov
sub
xchg
mov
ret
and
iret
popa
subl
jae
shld
pop
sub
adc
mov
hlt
jmp
mov
test
mov
dec
jb
cs
mov
in
push
inc
cmpsl
push
loope,pn
sbb
lock
rcr
pop
ss
cmp
gs
mov
les
out
jo
lods
rorl
imul
mov
sub
adc
adc
jg
cmp
jo
mov
ds
or
adc
repnz
sbb
clc
imulb
mov
and
or
cs
sti
adc
sbb
test
test
das
dec
and
jecxz
out
push
fs
sbb
out
stos
mov
notl
stos
fsubl
pop
add
sbb
daa
int3
mov
jp
xor
loopne
mov
or
sub
sar
or
bound
js
lds
dec
std
in
shll
insl
cmp
jbe
scas
je
lret
inc
xchg
rcrl
inc
mov
push
inc
push
mov
dec
iret
push
xlat
or
adc
pop
mov
das
int3
add
push
popf
and
jmp
in
mov
xchg
sbb
lahf
pop
add
add
mov
xchg
jae
jecxz
addr16
push
mov
out
add
push
mov
ja
test
mov
subb
pop
fistpll
kmovw
loop
cmp
pusha
sbb
pop
pop
mov
lahf
push
imul
test
adc
les
repz
sub
mov
xchg
rolb
lcall
into
mov
mov
out
sbb
cs
sub
ljmp
in
and
lret
adc
stc
push
in
rorb
cmpsb
subl
xorb
or
mov
je
imul
pop
xchg
inc
in
add
and
add
fwait
iret
in
push
add
xor
push
insb
stc
cmpsb
push
jae
dec
repz
jmp
js
add
mov
enter
lods
mov
xchg
insb
dec
popa
add
mov
jne
pop
xchg
jmp
push
ja
repz
es
stos
mov
or
and
jmp
mov
lods
out
or
dec
push
movsl
loop
jle
cmp
mov
sub
cli
mov
cld
mov
adc
test
das
into
mov
jo
sub
addr16
cmp
xchg
imul
sarl
pop
aad
pop
add
pusha
subb
call
in
daa
mov
mov
dec
push
and
xchg
mov
jecxz
dec
pushf
inc
mov
addl
add
test
jbe
cmpsl
movsl
mov
mov
out
fldcw
mov
adc
inc
loopne
fs
jecxz
jg
dec
test
pop
push
and
inc
push
lret
cmp
jp
scas
std
fistpl
mov
push
ror
stc
adc
fucomp
inc
fwait
lods
int
dec
sbb
rclb
outsb
jl
and
jge
cli
mov
jmp
mov
xchg
shlb
arpl
jle
pop
pop
adc
xor
ret
js
in
push
sbb
ja
mov
outsl
push
xchg
and
xor
insb
and
lahf
repz
mov
movl
out
inc
add
mov
leave
cs
push
shlb
mov
popa
in
push
lods
push
push
shrl
push
pop
loope
aam
xor
xchg
stc
push
cwtl
std
ror
lods
adc
jns
add
andnps
fwait
push
xchg
in
mov
orb
roll
dec
or
mov
or
xor
cmc
lock
test
jns
mov
xlat
test
aam
sub
mov
dec
lds
xor
adc
xchg
jg
mov
mov
aaa
fbstp
loop
inc
mov
cmp
jae
pop
mov
es
mov
push
rcr
xor
scas
adc
xor
push
mov
stos
mov
out
icebp
mov
mov
loopne
xchg
daa
out
add
mov
jae
in
or
inc
mov
and
mov
iret
inc
aaa
and
jne
int3
shrb
std
pop
inc
ret
xchg
stc
and
push
faddp
mov
xor
sub
mov
mov
shll
push
repz
mov
sub
fs
inc
pop
shlb
shlb
mov
jbe
mov
aad
pop
nop
sbb
scas
cmp
mov
xor
adc
xor
add
push
mov
and
and
inc
lods
or
mov
ja
cwtl
mov
cs
adc
gs
andb
or
add
stc
push
and
addr16
rcrb
pop
outsl
adc
push
in
andb
in
mov
gs
nop
jnp
movsl
and
inc
jo
shll
es
std
imul
cmc
dec
pop
push
cmp
inc
arpl
mov
cmp
mov
mov
mov
cmp
nop
pop
in
in
add
pop
cmpsb
out
aam
pop
cmc
dec
mov
sub
mov
shll
icebp
fdiv
jns
int3
pop
jl
ja
sub
xchg
sbb
jmp
mov
mov
adc
fcmovbe
cmp
ror
sbb
jecxz
stos
push
push
mov
push
lahf
mov
pop
ret
int
jge
shl
fists
out
andl
mov
les
in
xchg
push
das
jp
ret
pop
mov
push
rcrl
insb
je
sub
lret
loope
cmp
lret
icebp
adc
str
into
ficoml
test
in
movsl
ficomps
push
jp
fnstenv
loop
pop
add
cs
cmp
test
mov
insb
pop
xchg
mov
popl
xchg
dec
cwtl
test
sub
jp
sbb
mov
sub
cwtl
insl
dec
push
fs
nop
imul
jle
repnz
movsb
rcrl
and
scas
xchg
jle
aad
mov
aas
push
jg
add
or
dec
dec
dec
out
pop
or
test
sbb
hlt
out
push
xchg
out
popa
xor
in
inc
into
pop
pop
int3
addr16
std
aam
push
lods
xor
mov
add
insl
arpl
insb
ret
leave
and
pop
inc
jmp
sbb
jno
repz
sti
xchg
popa
shrl
pop
push
xchg
mov
imul
repz
dec
dec
repnz
dec
xchg
stos
call
adc
inc
pop
mov
xor
sub
or
mov
popa
cmp
pcmpeqw
sub
cmp
stos
aad
cli
sub
inc
inc
shrl
test
ror
pop
jnp
das
add
xchg
lcall
inc
or
lret
dec
cltd
sub
mov
lcall
adc
dec
pop
add
test
insb
xchg
inc
inc
pop
jmp
adc
adc
lods
push
shrb
xchg
negb
jmp
fiadds
out
xor
les
hlt
sbb
frstor
lea
jno
imul
mov
sti
cltd
xchg
and
xchg
lock
das
rcll
je
and
sbb
in
in
out
mov
jecxz
mov
push
rcl
cli
mov
shr
jae
pop
sub
movsl
nop
fst
mov
push
xor
dec
das
xchg
ljmp
ret
cmpsl
shlb
movsb
mov
xchg
push
call
pop
in
outsl
adc
out
pop
in
push
fwait
mov
cmc
imul
jge
and
fisubs
xchg
mov
leave
or
nop
adc
xor
adcl
es
jno
inc
adc
and
mov
jmp
cmp
inc
mov
push
inc
int3
insl
popf
int3
mov
bound
and
or
sahf
pop
pop
or
iret
aad
mov
inc
add
push
mov
scas
int3
pop
adc
aas
sbb
inc
adc
jae
mov
cmp
xchg
jecxz
jae
jp
lcall
pusha
loop
mov
lahf
orb
inc
jnp
mov
repz
shl
sbb
popa
cwtl
jmp
ljmp
jecxz
pop
mov
xor
dec
xchg
mov
leave
pop
or
es
mov
mov
loopne
ss
testb
xchg
icebp
mov
cmp
cld
sub
or
mov
ret
fists
inc
and
cmp
xchg
bswap
push
push
fimull
add
inc
nop
and
int3
add
std
and
xor
imul
cmp
call
push
in
push
enter
and
mov
stc
popf
pushf
repz
push
sub
in
ja
mov
dec
add
pushf
loope
and
iret
das
xor
lret
dec
in
popf
pop
jns
dec
std
rcrb
hlt
sbb
xchg
mov
mov
stc
mov
scas
int
xchg
cmp
pusha
pop
and
ss
in
add
sbb
sbb
aas
push
scas
pop
js
ret
sbb
sti
dec
push
cmp
pop
sub
lcall
sub
je
add
cmp
rcll
lods
aaa
sub
adc
scas
in
add
repz
add
out
or
std
test
mov
xchg
lahf
addr16
xor
rcrl
cmpsb
ret
lret
jmp
add
dec
cwtl
int3
add
pop
hlt
pusha
fsubrl
mov
xorb
adc
gs
add
adc
pop
call
sub
outsl
mov
jbe
fxch
xchg
add
popa
cmpsl
enter
add
test
mov
rcrl
ret
sub
loop
loope
inc
adc
cmp
imul
adc
push
xchg
shll
xor
pop
or
subb
cli
inc
out
into
outsb
and
fdivs
rclb
mov
or
dec
bound
xor
jb,pn
xchg
ficomps
mov
leave
and
push
les
es
loopne
sahf
fisttps
lds
push
sti
mov
into
pop
xor
pop
jne
out
std
push
stc
pop
fnsave
sub
or
aaa
adc
mov
lock
cmp
pop
push
mov
xchg
sub
pusha
gs
pop
dec
movsb
mulb
sbb
outsb
andb
insl
ss
push
or
xchg
aas
jbe
pop
int
int
lea
dec
into
nop
pop
dec
shl
mov
cmc
push
lods
dec
jb
mov
add
jg
fs
scas
into
and
subl
adc
jns
inc
test
lods
sub
pop
icebp
mov
pop
dec
iret
repnz
sbb
inc
nop
aas
int
out
xlat
mov
push
repnz
test
and
shll
bound
pop
pop
push
rcl
adc
cmpsl
xor
and
outsl
dec
out
adc
cld
dec
imul
jbe
repnz
fisttpl
adc
lahf
inc
jno
pushf
movsb
sarb
into
or
scas
cmp
pusha
out
fnsave
pop
mov
add
add
cmp
mov
cltd
pushl
fmuls
orl
lods
stos
aas
mov
dec
in
movsl
push
mov
in
sub
notb
fadd
add
pop
mov
xchg
call
stc
inc
lock
lock
aaa
lret
lds
jo
sarl
test
add
inc
inc
sbb
mov
and
and
jb
cltd
fisttps
adc
jge
mov
pusha
push
pushf
inc
xor
xor
cmp
fwait
mov
fdiv
mov
cmp
xor
stos
pusha
or
push
insb
and
jmp
jb
sub
pop
std
test
adc
push
pop
fstpl
and
xor
xchg
xchg
or
mov
mov
xchg
nop
movsl
int
xchg
sahf
sbb
lret
xor
ja
mov
or
inc
mov
bnd
add
sti
dec
dec
inc
xchg
dec
cld
push
sub
pop
jo
xor
sub
pop
mov
adc
loope
ret
mov
inc
cmpsl
call
daa
mov
test
out
cmp
sti
testl
aas
xchg
push
pop
dec
out
sarl
daa
and
mov
bextr
insb
mov
pop
mov
add
lods
mov
dec
sbb
imul
imul
aad
ljmp
xlat
dec
push
fs
ja
or
fsubs
js
call
push
cld
cmp
add
sbb
cli
mov
cmc
outsb
or
in
pop
dec
sbb
mov
out
mov
les
adc
mov
pop
xlat
rolb
push
xor
inc
dec
mov
pop
mov
cs
xor
xor
xchg
inc
inc
sub
mov
push
fwait
cli
lock
popa
lret
hlt
pop
xchg
arpl
mov
loope
lods
adc
push
xchg
sbb
adc
data16
adc
inc
jmp
xchg
push
cmovb
out
adc
mov
jo
add
mov
xlat
rcr
inc
cmpsb
sub
xor
aad
mov
jmp
xchg
and
movsl
or
out
xchg
flds
insb
or
push
sbb
mov
mov
dec
adc
xchg
inc
ucomiss
mov
test
sbb
jnp
dec
inc
pop
and
shlb
je
pop
ja
sub
jmp
fcomps
lock
sti
cmc
fstl
arpl
fwait
xlat
adc
pop
inc
push
adc
xlat
cld
jecxz
mov
lahf
xor
lahf
insb
jo
clc
imul
cmp
pushf
jne
xchg
lcall
mov
adc
inc
push
in
mov
js
test
loopne
ret
cmp
mov
sarb
adc
inc
aam
inc
aad
sbb
inc
aaa
cmp
lret
ja
mov
nop
push
aad
inc
outsb
mov
cs
sbb
bound
and
out
jl
fdivrs
xor
stc
xchg
jns
inc
cwtl
mov
mov
imul
outsl
roll
and
pop
lock
add
inc
stc
xlat
pop
scas
mov
addr16
add
push
adc
loope
jns
sub
mov
mov
shrb
repz
xor
repnz
jbe
xor
in
jge
jge
hlt
bound
in
cltd
and
mov
jecxz
push
mov
hlt
xor
mov
pushf
lcall
arpl
es
push
dec
test
and
insl
mov
cwtl
in
mov
es
and
adc
cmc
adcb
fmull
mov
popa
in
rcll
lds
data16
or
fisttps
adc
shr
enter
xchg
mov
push
add
stos
sub
jbe
push
pop
cmp
stos
jbe
andl
gs
je
fucom
adc
xchg
jmp
xlat
clc
pop
lods
loopne
or
xor
mov
test
aaa
out
mov
lods
insb
jmp
lds
into
ss
inc
mov
data16
sub
bound
cmp
cmpsb
gs
pop
imul
shrl
loope
add
and
push
sub
and
fistpl
int3
push
lret
push
cmp
mov
cmp
cmp
repz
in
repnz
lods
mov
xchg
lock
ds
rcl
pop
lret
jnp
xchg
mov
add
mov
dec
mov
cltd
inc
das
xchg
cmp
jp
movsb
in
scas
cmpsl
int
lea
pop
notb
shlb
scas
fcmovnbe
arpl
xchg
test
lcall
xchg
mov
add
sar
cld
add
cmovge
ljmp
xchg
icebp
inc
ss
pop
lahf
inc
cli
bound
lret
insb
cmp
fstl
sub
popf
inc
aad
cmp
lret
add
cmp
cmpsb
add
sub
mov
in
mov
psubb
loopne
stos
mov
sarl
add
jl
mov
fwait
enter
dec
push
and
inc
inc
or
mov
stos
dec
aaa
int3
xor
xchg
movsb
push
inc
pop
mov
lret
push
lds
arpl
mov
xor
jo
add
push
pop
push
data16
xchg
push
lea
push
mov
cmpsb
cltd
adc
ficomps
decl
fldt
fldenv
test
mov
lret
inc
cmc
repnz
sbb
leave
push
cld
xchg
rcrb
jns
lea
lock
or
cmpsl
mov
sub
inc
popf
in
pop
mov
inc
out
lock
mov
sub
xor
dec
add
cmp
sbb
and
out
in
arpl
scas
push
pop
imul
rcl
shlb
mov
mov
xchg
mov
inc
xchg
push
movsl
push
cmp
inc
lret
icebp
pop
inc
mov
jl
sub
mov
and
cltd
xor
pop
push
add
shlb
mov
xor
ret
testl
xor
xchg
sbb
mov
xor
xchg
mov
mov
shlb
add
cmpsl
out
fisubrl
inc
mov
or
xchg
add
std
dec
jno
rcrb
dec
push
xor
stc
imul
mov
xchg
inc
push
xor
lret
ja
xor
shl
lret
cmp
movsl
imull
cwtl
mov
cmp
test
jnp
pop
lret
daa
or
ss
test
lcall
cmpsb
dec
push
movsb
out
arpl
push
pop
cwtl
aad
cmp
jge
add
nop
jns
xchg
cmp
add
inc
movsl
lret
cmp
sahf
std
sub
jnp
stos
push
icebp
lods
push
pop
mov
add
lods
aam
or
shrl
bound
jmp
fnstsw
fsubrp
sub
cmp
pop
sbb
add
push
cmp
sti
out
dec
loope
add
cmp
cmp
xchg
lods
push
jle
mov
push
lods
add
icebp
or
cmp
lea
and
fidivl
into
pop
cmp
dec
sbbl
js
shlb
scas
arpl
repnz
stos
repz
or
daa
cmc
xor
jb
into
pop
cmp
iret
xlat
push
xorb
pop
jae
cwtl
and
lahf
jno
push
int3
xor
sub
loopne
mov
repz
mov
orb
fistps
dec
inc
in
add
mov
sbbl
mov
jecxz
or
cmp
and
subb
std
faddl
mov
cmc
push
jecxz
cmc
xchg
push
adc
add
push
mov
sahf
ss
xchg
sub
mov
inc
xchg
add
push
jl
jae
mov
scas
ficoms
inc
dec
arpl
ljmp
cmp
leave
sbb
lret
fsubrp
cld
and
sub
bswap
nop
pusha
dec
pop
int3
and
int
movsb
insl
mov
ret
lds
mov
jl
lods
roll
scas
inc
push
push
push
push
dec
xor
push
jne
pop
idivl
sub
jno
into
add
mov
lahf
xchg
xchg
cwtl
xchg
mov
sbb
add
ret
xor
adc
mov
in
jnp
mov
push
adc
cmp
out
scas
pop
mov
mov
jo
lods
dec
aad
sbb
imul
lret
sub
push
xchg
pop
or
aas
cmc
pushf
dec
jmp
insl
iret
sub
aas
in
pushf
lret
daa
jb
lods
ds
sysenter
fstpt
aad
xchg
and
call
push
out
push
dec
rclb
cmp
mov
pop
pop
jmp
movsl
sub
shll
dec
incl
jo
shll
stos
jne
push
int
mov
test
cltd
add
out
in
test
inc
pushl
in
sub
and
test
ret
inc
sub
aaa
jmp
jp
jg
fildl
dec
mov
add
sbb
dec
and
push
add
sbb
sbb
mov
inc
fwait
mov
repz
insl
pop
pop
jae
sub
ds
cmp
jns
sub
popf
and
mull
sbb
or
pop
lods
pop
enter
in
nop
push
xor
dec
sub
jg
xor
jbe
cs
cmp
xor
mov
or
aam
outsb
insb
pusha
ljmp
jle
push
fsubl
test
jne
fistpl
mov
cmpsb
mov
and
or
mov
lret
data16
mov
jp
push
sub
ror
popl
lret
fmuls
outsl
fwait
pushf
and
mov
pop
sub
repz
jb
push
insl
or
dec
and
imul
ljmp
adc
xor
xchg
jmp
es
jae
fidivs
mov
pop
and
jae
fidivrs
lcall
out
dec
nop
popa
mov
mov
dec
out
push
inc
leave
bound
clc
in
xchg
and
bound
xchg
aaa
cld
xorb
lret
push
push
pop
push
sub
dec
pop
icebp
inc
push
adc
sub
add
imul
loope
sbb
xor
cld
cmp
push
cltd
push
pop
dec
je
stos
cmpsb
push
push
sbb
pop
lods
xchg
fistps
or
ljmp
popf
push
fidivrs
fsubs
int
and
fldl
xlat
mov
jge
jge
stc
inc
pop
test
sub
add
out
into
or
ljmp
lea
fimuls
mov
aaa
mov
fwait
mov
jnp
aam
mov
mov
rorb
jno
lahf
popa
push
in
gs
jns
into
imul
mov
repnz
mov
test
mov
and
push
in
outsl
lock
mov
fsubp
dec
out
iret
mov
lret
lret
inc
cld
lock
jno
mov
pushf
cmp
or
hlt
jae
and
jns
push
lea
lcall
dec
jp
icebp
loopne
test
popa
inc
jl
arpl
rclb
fs
fmull
outsl
imul
outsl
incl
lods
test
aam
adc
cmpsl
icebp
rolb
aam
test
pop
daa
outsl
ficoms
push
hlt
test
pop
sahf
outsl
mov
mov
adc
stos
sbb
jg
cli
into
clc
bound
pushf
adc
addr16
sbb
xor
leave
push
lret
outsb
xor
repnz
sar
fnsave
fldenv
dec
pop
fwait
test
jge
xchg
xchg
icebp
add
jnp
sbb
push
mov
rol
mov
fdivrl
mov
xor
cld
decl
das
imul
mov
dec
les
jnp
adc
cmp
lahf
cmp
mov
push
es
push
mov
push
xchg
insb
sbb
mov
cli
mov
inc
xlat
push
aaa
stos
fs
xor
xchg
in
xor
das
inc
push
adc
insl
xor
and
negl
pushf
insl
dec
lock
jnp
lcall
ret
xor
out
jne
jnp
call
dec
dec
testl
sbb
push
stos
sub
ja
jge
mov
push
or
jmp
ds
mov
xchg
or
dec
xchg
lcall
push
inc
xorb
cmp
mov
movsl
pop
inc
jmp
mov
scas
jns
sbb
rcl
mov
enter
xchg
rclb
sub
int
mov
xor
mov
jge
add
add
sti
push
inc
mov
xchg
orl
pop
jne
bound
xlat
inc
cmp
inc
lock
sarl
sbb
loop
jmp
sub
xor
fldenv
mov
in
push
in
pop
mov
push
xor
cmpl
sahf
mov
cmp
add
movb
aam
sub
in
test
and
sub
cwtl
lods
xor
test
add
cwtl
cmpb
out
mov
les
popl
or
and
lock
mov
stos
sub
push
in
push
int3
push
aam
stos
test
enter
or
push
mov
xchg
cmp
jl
daa
xor
jnp
adc
pusha
std
dec
test
data16
cmpsb
outsl
cmpsl
ret
std
mov
cmp
sbb
jmp
in
in
sub
mov
xchg
adc
test
push
pop
adc
clc
int
sbb
ss
in
or
mov
fsts
fcomps
fsubl
rcl
in
imull
and
ss
mov
fiaddl
dec
or
sar
push
rcrb
jl
dec
repnz
pop
sbb
mov
stc
shr
adc
sbb
adc
mov
add
clc
leave
fldcw
iret
into
enter
shll
int3
jno
inc
push
mov
jne
jmp
dec
jmp
push
inc
popf
loope
xor
xchg
bound
cmp
jb
mov
incb
or
xchg
imul
mov
cs
fiaddl
dec
push
cltd
leave
mov
loop
push
xor
ret
lcall
jl
jb
dec
pop
clc
jb
mov
xchg
insl
add
pop
mov
jge
inc
or
mov
out
lret
stc
push
dec
adc
and
fsts
jmp
outsb
xchg
sbb
rcrb
dec
pusha
xchg
enter
cmpsb
movsb
mov
cmp
sbb
clc
mov
jmp
ret
mov
leave
adc
lahf
lock
gs
dec
fcomi
sbb
jo
adc
cmc
xchg
lret
add
leave
cmpb
repnz
jle
addb
rorl
insl
or
aaa
repz
jae
mov
enter
movsb
daa
cltd
repz
int3
mov
or
int
push
mov
adc
pop
pop
cmp
stos
call
pop
stc
popa
lea
adc
lcall
mov
pop
adc
hlt
add
fldt
mov
jo
mov
or
sbb
push
push
mov
sahf
or
pop
outsb
mov
mov
pushf
jns
inc
cmpsl
jno
jp
stos
cmpsl
repz
fmuls
or
adc
insl
cmp
out
ret
enter
gs
les
push
push
les
fcmovne
lret
sub
jne
xchg
sbb
sahf
decb
aaa
std
mov
or
bound
lock
aaa
int3
in
das
sub
xchg
jnp
jge
push
mov
fsubp
push
out
call
jb
pop
int3
lret
inc
aaa
pusha
mov
push
push
cs
cld
add
sub
add
inc
sbb
dec
push
adc
adc
leave
dec
addr16
repnz
mov
fcoml
or
mov
mov
enter
dec
pop
popa
fldl
cmp
movsb
cwtl
out
cmc
movsb
jge
dec
push
pop
xchg
pop
das
lret
push
movl
mov
sub
jmp
sub
mov
daa
push
xor
rcll
test
or
std
std
xchg
xchg
lret
or
xchg
popf
iret
jl
xor
jbe
push
jmp
jle
lret
test
adc
out
iret
int3
dec
xor
mov
dec
hlt
subb
jae
pop
dec
aas
sub
fdivrl
mov
lahf
inc
int
fisubs
add
sbb
push
and
xchg
je
add
and
jno
stos
push
out
cmp
fisttps
xchg
mov
mov
push
fdivrl
jmp
ja
cmp
sbb
xor
aam
adc
movsl
test
aas
dec
in
add
bound
dec
loopne
fs
outsl
lret
mov
adc
lds
sub
stos
hlt
and
mov
jo
dec
xor
out
shl
add
cmp
lret
sbb
xor
push
int3
nop
int3
fs
lds
test
inc
shrl
mov
push
in
pushf
xor
lcall
bound
inc
sbb
jnp
mov
aad
add
testl
pop
pop
pop
push
sbb
inc
mov
pop
stc
lods
pop
jnp
sub
push
or
sahf
jae
hlt
xchg
dec
push
fs
push
hlt
mov
xor
fisttpll
rorl
mov
movsb
subb
jg
aad
and
insb
rol
fwait
addr16
mov
loop
sub
lea
lret
adc
dec
addr16
jl
inc
jns
cld
push
stos
sub
xor
jl
and
pop
and
sub
test
xchg
in
aas
movsb
jmp
subl
mov
sbb
mov
sarb
adc
test
pop
rcll
pop
pop
sub
cs
push
jo
pop
dec
sub
dec
pushl
jns
jae
pop
or
pop
iret
shll
jo
fldt
push
in
in
dec
cs
pop
jg,pn
xchg
pop
subl
sets
mov
pop
test
cmp
xor
out
shl
ret
stos
jl
pop
pop
jno
xchg
add
cmp
leave
aaa
stos
push
mov
xchg
xchg
mov
push
mov
sbb
sbb
mov
call
inc
push
cmp
add
addr16
in
push
pusha
orl
leave
in
js
mov
mov
push
xor
insl
push
xlat
or
bound
fimuls
and
nop
jmp
pusha
cld
lods
jae
pop
in
pop
adc
push
ds
pop
and
jnp,pt
imul
and
adc
sahf
add
lock
leave
cld
push
push
mov
mov
dec
in
ror
push
adc
enter
add
pop
pop
jle
mov
aas
xchg
test
xchg
inc
mov
xor
lds
andl
xchg
shrl
xchg
mov
je
fstpt
cmc
xor
add
out
dec
cmp
or
sub
dec
aad
loopne
mov
mov
and
jmp
int
xlat
lret
adc
push
loope
jmp
sub
outsb
stc
movsl
scas
aam
scas
js
push
cltd
cmp
js
je
adc
pop
mov
push
push
cli
jnp
shll
pop
sbb
mov
jne
sarb
data16
xchg
in
xchg
sub
push
bound
outsb
pop
repz
cld
add
fcmovb
out
dec
std
hlt
out
cmp
mov
lret
ret
lea
dec
daa
push
push
xchg
imul
aad
pop
scas
xchg
mov
xlat
cmp
ficompl
push
or
es
xchg
shl
and
out
out
mov
jp
jg
and
xor
into
out
lock
jnp
test
sub
shr
mov
mov
xchg
push
xchg
push
les
das
insb
jns
enter
lea
rcr
imul
outsb
sub
rcl
pop
push
lea
fldcw
push
out
mov
aaa
pop
push
insb
mov
mov
push
mov
adc
pop
outsb
gs
pusha
jb
std
pop
fnstenv
xor
cmpsl
pop
scas
test
repz
divb
aas
dec
mov
pop
insl
outsb
lods
int3
cmp
inc
push
pop
mov
mov
xor
and
aaa
leave
or
push
push
je
aas
xchg
cmp
das
mov
std
das
mov
icebp
dec
negb
dec
lret
test
xchg
cli
in
mov
int
ret
vpunpckhdq
imul
into
daa
jp
xor
dec
dec
rcrl
mov
mov
or
stos
fwait
xchg
nop
mov
dec
adc
lret
lods
scas
dec
sub
jp
std
fcomps
fiadds
jne
pop
lret
iret
testl
lock
and
xchg
dec
mov
jge
dec
jg
add
push
lea
aaa
loopne
lock
mov
mov
sahf
sub
insl
mov
mov
sahf
pop
repz
cmp
jb
mov
jns
fisttpl
and
inc
ss
insl
mov
scas
fimuls
lea
outsb
lret
divb
shr
push
push
and
pop
jns
subl
inc
dec
icebp
jnp
int
pop
lea
pop
jbe
push
ret
ja
push
stc
ljmp
jae
xchg
inc
inc
xor
push
adcl
shl
xchg
aaa
jmp
scas
and
mov
inc
scas
pusha
and
add
ds
testb
fdivs
inc
cmc
je
pop
aaa
add
insb
fsts
test
sti
sbb
fidivrs
movsb
mov
test
das
add
sub
pop
xchg
push
mov
mov
xorl
out
mov
xchg
adc
add
loopne
cmp
pushf
sbb
push
shl
sahf
lods
int
mov
sti
test
lods
push
mov
push
sbb
jae
or
push
dec
push
xchg
daa
cmpb
in
imul
pusha
or
dec
bound
push
cmp
pop
dec
into
xchg
mov
jne
sub
out
xor
scas
mov
das
imul
ss
dec
fidivs
js
jle
jo
mov
loopne
jae
insl
pushf
push
mov
inc
lcall
mov
test
repnz
cli
lock
pop
dec
shlb
push
sbb
leave
ja
add
stos
stc
xor
inc
cmp
lock
mov
jb
out
mov
ss
incb
sub
stos
pop
pushf
inc
imulb
pop
ja
pop
push
arpl
add
je
pusha
popa
adc
lahf
cli
or
mov
or
les
dec
mov
mov
mov
sti
xchg
cmp
into
popf
aaa
test
jmp
data16
pop
mov
xor
add
sbb
push
flds
sbb
jg
ret
subl
stos
fwait
push
jno
insl
mov
rol
mov
gs
fidivs
mov
mov
aam
mov
aas
sbb
ror
stos
negl
fsubrl
cmc
pop
sbb
vmread
pop
inc
inc
push
xchg
mov
js
mov
test
add
fwait
sbb
inc
fsubl
xchg
mov
test
mov
and
jbe
mov
fmuls
add
inc
sub
mov
test
sub
jge
hlt
adc
and
orl
xor
in
negl
pop
jecxz
js
rcrl
pop
cli
fmuls
xchg
dec
inc
sbb
mov
cmp
test
cmp
push
cmpsl
jb
nop
or
adc
push
mov
in
scas
pop
push
aaa
mov
into
sbb
call
adc
rorb
bswap
push
cmp
nop
and
xchg
mov
push
icebp
shrl
mov
sti
repz
daa
push
cmp
jnp
xor
rclb
movsb
pop
mov
repz
xchg
xchg
addl
dec
mov
push
push
clc
pop
add
push
hlt
daa
push
fstpt
call
add
mov
jg
flds
dec
mov
mov
dec
inc
and
pop
mov
pop
jne
jne
push
pusha
dec
jno
repnz
lcall
adc
xchg
or
push
mov
movsl
cwtl
mov
loop
cmp
cs
and
xchg
rol
insb
sbb
cwtl
sub
in
jl
pop
pop
mov
xor
mov
inc
adc
loopne
push
cmc
nop
add
lods
add
aad
jl
cmpsl
outsb
push
sub
shrl
or
add
dec
test
in
xchg
dec
sub
shrb
enter
test
dec
jnp
aad
mov
xor
rcll
adc
pop
rcrb
sub
rorl
ret
lds
dec
test
mov
popa
call
mov
xor
out
mov
ja
mov
popf
cmp
flds
imul
push
lods
push
and
add
dec
out
adcl
jae
scas
jp
dec
mov
dec
stos
dec
inc
mov
mov
orl
in
ds
out
out
mov
mov
adc
jecxz
jnp
pop
call
imul
pop
add
scas
ss
jbe
push
fs
jb
xchg
jle
jmp
mov
push
mov
shl
sarl
sti
clc
or
push
mov
lods
ret
mov
push
adc
leave
das
mov
fcmovne
pop
scas
xchg
js
in
jbe
test
xor
pop
adc
jbe
imul
shlb
loope
shrb
or
dec
out
sbb
jne
sbb
xor
or
ret
mov
call
cltd
xchg
dec
xor
push
mov
pop
pop
pop
push
adc
inc
filds
xchg
jg
push
aad
xchg
cmp
mov
add
insl
into
pop
negl
push
cld
dec
cmpsb
push
push
dec
add
repz
stos
dec
adc
jne
and
loope
sub
pop
cltd
mov
jne
les
mov
or
add
push
sub
jmp
push
insl
lahf
mov
xor
repz
inc
or
mov
push
push
out
cwtl
push
aad
call
in
push
xchg
dec
fisttpl
fcomps
ret
pop
xchg
out
mov
mov
mov
mov
aam
scas
adc
je
sbb
pop
cmp
rolb
cmp
sbb
cltd
add
pop
ret
fucomip
test
ret
mov
xlat
xchg
xchg
or
xorb
xor
xchg
mov
fstl
addb
jg
shlb
out
sti
dec
in
ret
sbb
cmpsb
jb
xchg
and
call
ret
add
mov
arpl
jo
scas
insb
shlb
les
mov
jo
mov
push
mov
daa
leave
int
cld
jne
mov
xchg
icebp
rcrb
jecxz
iret
cs
push
push
test
cmp
test
outsl
lods
aas
or
jge
arpl
adc
mov
mov
jge
sub
fsts
in
pop
mov
and
je
mov
dec
jg
repnz
push
js
sbb
or
jo
add
or
lret
iret
jl
mov
mov
pop
loop
bsr
scas
pop
lret
jmp
dec
stos
or
test
iret
and
xchg
pusha
xchg
adc
adc
sbb
mov
imul
dec
inc
test
notb
sbb
mov
fucom
mov
sub
cli
sbb
pop
or
push
mov
adc
mov
pop
xchg
add
jp
popa
js
xchg
mov
out
dec
aad
inc
insb
add
push
std
mov
xlat
mov
jbe
push
les
icebp
popf
adc
rcrb
gs
fwait
test
stc
int3
insl
xchg
mov
xchg
inc
repnz
inc
enter
mov
inc
stc
xchg
jo
or
leave
test
xor
xchg
cmp
add
cmp
addr16
sti
add
push
and
leave
icebp
divl
mov
scas
xorl
out
jbe
popf
adc
xchg
push
jle
inc
scas
das
rep
push
mov
mov
mov
movsb
int
into
or
mov
test
loopne
outsl
adc
stc
repz
in
cmp
mov
mov
cmp
icebp
dec
mov
or
mov
jmp
inc
in
push
stos
jl
push
mov
xlat
mov
aaa
out
pushw
sub
icebp
mov
or
fs
xor
outsl
aaa
sbb
mul
xlat
arpl
rorb
jns
cmpsl
jg
adc
or
jl
inc
jecxz
jb
or
sub
sub
cmp
adc
orb
addr16
jae
push
adc
push
or
mov
lret
cli
fsubs
xchg
adc
mov
fiadds
lea
andb
mov
int3
test
add
cli
cmp
cmc
nop
lret
lea
pop
movsb
inc
xor
xor
faddl
mov
dec
mov
cld
aaa
cmp
outsb
aad
mov
mov
adc
divl
push
shlb
pop
aaa
mov
lock
cmp
daa
xchg
mov
daa
pop
test
xchg
cli
jp
lea
fwait
add
loope
pcmpgtd
mov
xor
addl
jo
fs
push
pusha
vpcmpgtb
bound
imul
jecxz
test
adc
fistpll
xchg
out
repnz
push
shll
cmc
xorl
das
lcall
cmp
sbb
mov
outsb
ret
dec
mov
gs
cmpsl
clc
dec
dec
rcr
loope
and
lods
aam
cmc
fsubs
cs
cwtl
sti
cmp
cmp
jnp
sysexit
scas
divw
cltd
and
jno
sti
dec
or
sbb
outsb
ds
iret
dec
pop
push
ret
dec
inc
jge
repz
repz
mov
loope
cmp
mov
xor
movsb
mov
xchg
out
add
pop
outsb
loopne
cmpsb
mov
jo
loop
hlt
rorb
pop
xor
rcrb
ljmp
xchg
adc
repz
cmp
orb
sbb
mov
scas
rolb
jmp
xor
adc
lds
pop
jns
xchg
test
and
bound
or
daa
or
jl
add
push
jecxz
sbb
scas
lods
mov
or
push
push
mov
sub
adc
enter
and
and
or
les
mov
hlt
imul
xor
pop
or
movsb
arpl
fs
jp
mov
inc
push
fcmovb
xorl
xchg
xchg
out
test
test
je
cs
adc
pop
clc
rcrb
lea
imulb
sahf
cs
xchg
dec
mov
cmp
shll
push
adc
or
mov
mov
and
imul
fwait
mov
jg
cwtl
outsb
sub
outsl
loopne
or
cmp
mov
mov
jmp
sbb
jmp
adc
mov
lea
inc
dec
jb
mov
rcll
mov
xchg
and
dec
hlt
aas
test
mov
dec
pop
add
and
xchg
hlt
mov
xchg
xor
pop
jg
cmp
jne
jp
and
and
lahf
sub
aaa
shlb
adc
mov
int
imul
mov
pop
inc
movhps
xchg
cmp
imul
mov
mov
not
xchg
daa
rep
xor
test
pusha
out
push
pop
jnp
jb
out
cmpl
test
push
fwait
paddusw
dec
pop
cmc
sbb
add
add
pop
pop
push
pop
cmpb
dec
std
dec
arpl
lret
jne
ficomps
mov
xchg
mov
pushf
rcrb
pop
jo
cli
aas
xchg
stc
mov
aas
outsl
push
not
shll
int3
es
js
cld
xor
or
loopne
pop
push
test
outsl
ret
in
push
callw
cmp
push
jmp
dec
pop
ja
pop
or
jmp
jae
add
movsb
mov
pushf
fnsave
adc
jmp
int
dec
fwait
add
add
inc
fldenv
xorl
jbe
push
and
xor
cli
xchg
dec
in
xchg
push
pop
notb
outsb
inc
rorl
sub
icebp
enter
imull
sub
stc
and
or
loope
add
cwtl
out
scas
cmp
inc
idivb
pop
pop
pop
or
imul
sub
xchg
aas
mov
inc
xchg
or
mov
int
popf
push
xchg
and
sbb
inc
add
lods
into
adc
sahf
ret
adc
or
jp
cmp
xchg
jnp
fldz
ret
xchg
cmpb
sbb
loopne
sub
pop
jnp
or
cmp
push
fs
rcll
mov
inc
cmp
and
push
repz
lret
test
inc
aad
or
inc
daa
cmpb
xor
mov
in
sbb
fwait
sbb
lcall
das
inc
dec
fdivrs
bound
daa
rol
and
cmpsb
pop
loopne
push
mov
adc
inc
inc
cmpsl
insb
jg
bound
sub
mov
pop
je
mov
inc
adc
add
pop
ds
or
addl
nop
mov
repz
mull
enter
xor
mov
jnp
jmp
cwtl
dec
jo
fmulp
icebp
test
aam
mov
mov
enter
push
sub
cli
add
mov
jp
pop
rcrl
js
addb
js
cmp
rclb
mov
jge
fucomip
push
scas
jo
xor
rcl
dec
jecxz
add
in
dec
jns
add
popa
sub
sbb
insb
mov
into
mov
lds
mov
xchg
scas
mov
insl
mov
cmp
or
in
or
cmpsl
int
cmpsb
loopne
dec
fidivrs
xorb
movsb
jl
mov
fs
xchg
call
xor
mov
pop
js
push
and
lock
ljmp
jns
pop
jnp
mov
or
jg
jae
push
xchg
adc
imul
jge
xchg
pop
mov
pusha
pop
cmpsl
pop
lret
pop
out
popf
stc
daa
or
xchg
mov
inc
mov
sub
inc
jp
jnp
dec
or
push
mov
push
pop
prefetch
or
adc
push
adc
insl
loope
enter
rolb
push
in
mov
pop
ror
push
fwait
xor
ja
mov
mov
mov
jle
mov
cwtl
out
xor
frstor
adc
adc
xor
pop
loop
lret
sub
dec
out
subb
fsubr
mov
push
jns
cld
outsl
fnsave
xchg
dec
add
outsl
mov
std
lret
and
inc
cs
push
mov
addr16
ret
cmp
inc
push
sub
adc
xchg
loop
xchg
jp
cmp
push
xchg
dec
out
test
mov
inc
push
or
inc
jb
and
insb
fidivs
cli
sahf
enter
and
daa
movsl
and
jle
and
sbb
mov
push
imul
les
movsl
adc
or
loope
ret
mov
arpl
and
push
adc
test
or
push
ss
daa
mov
test
pop
mov
testl
jne
stc
inc
inc
push
mov
dec
xchg
push
aam
inc
sub
xchg
cli
insl
sub
clc
pusha
adc
jns
in
mov
cmp
inc
mov
loop
xchg
xorb
mov
sti
insb
mov
pop
push
sbb
mov
out
lahf
mov
mov
mov
divl
jbe
xor
sahf
out
jnp
lahf
jl
or
mov
dec
cmp
into
push
push
sub
out
cmc
cmpsb
adc
fwait
inc
daa
mov
in
mov
and
ret
es
sub
pop
jb
xchg
xor
outsb
movsb
add
iret
leave
add
adc
fcmovnbe
inc
add
and
and
cmp
ja
jg
cmc
push
adc
sbb
and
shr
pop
xchg
std
pop
jle
rol
sbb
mov
lods
pop
into
mov
int3
xorps
test
loope
jo
sbb
test
jp
mov
das
inc
aas
pop
aad
das
and
sbb
mov
xchg
mov
fists
mov
int3
push
sbbb
lret
xchg
cmc
sub
and
pop
dec
and
shr
mov
into
xor
mov
loopne
push
cmp
leave
in
pop
sti
pop
in
sub
and
leave
scas
and
test
sbb
jge
xor
lahf
push
inc
in
aad
mov
pmullw
jo
push
mov
pop
mov
imull
jb
sbb
fnstsw
sub
jnp
mov
data16
jecxz
shrb
sub
out
or
enter
out
pop
jcxz
shr
xchg
aas
sub
mov
add
int3
mov
xor
inc
mov
push
imul
push
jb
jo
std
sbb
ljmp
sub
xor
sti
and
test
cmp
mov
iret
cmp
xchg
jb
jmp
outsl
bound
test
stc
lcall
lds
sub
xor
dec
mov
addr16
sbb
and
xchg
push
daa
xorb
mov
dec
xor
add
mov
cmp
xor
scas
hlt
sahf
add
insb
ret
cmp
xor
mov
mov
fcmovne
mov
imul
xor
pop
sahf
mov
out
and
jl
mov
sti
dec
sarl
xchg
sbb
orb
add
ret
je
cmp
aas
jmp
push
lahf
mov
pushl
cmp
and
mov
je
std
inc
or
cmp
icebp
call
ret
pop
mov
into
mov
inc
in
fwait
add
jnp
in
cmp
add
push
jecxz
movsb
repz
xor
lret
xchg
test
xchg
cmc
mov
adc
pop
dec
cmp
popf
movsb
incb
shl
xchg
fcoms
cmp
repnz
faddl
stc
imul
mov
push
sub
adcl
movsl
xor
and
mov
out
jecxz
xor
push
std
add
stos
sub
cmp
mov
leave
enter
and
pop
lret
jmp
icebp
cmpsb
int
push
xchg
and
neg
sub
jo
xor
std
and
fidivl
ja
add
rorl
out
inc
enter
pop
sbb
mov
mov
stc
adc
mov
xor
or
add
mov
or
sti
pusha
dec
xor
pushf
int3
jno
ljmp
cmc
push
int3
xchg
mov
daa
mov
popf
cmpsl
in
cmpsb
and
adc
je
repz
andb
mov
jnp
popa
lret
jge
xor
push
jb
and
fs
fbstp
jo
mov
jae
push
mov
xchg
js
test
mov
pop
int3
inc
in
and
push
outsb
movsb
or
mov
inc
test
xchg
mov
adc
jb
cmpb
in
mov
fisubrl
sbb
pop
dec
mov
push
pop
and
cmp
push
jae
jmp
cmp
test
test
cmpsl
mov
cmp
fistps
push
sub
cmp
jno
pop
shrb
xchg
add
sub
mov
inc
mov
add
movsl
jl
cmc
rcl
adc
lcall
push
jg
dec
ds
push
cmp
xor
xchg
int3
shl
outsb
or
jge
outsb
inc
add
and
pop
mov
jle
lret
add
push
jl
std
psadbw
negb
sbb
popa
lahf
cvtps2pd
sub
jae
int
inc
add
in
inc
and
push
and
xchg
fidivs
out
fwait
mov
add
push
sbb
hlt
sbb
mov
gs
rolb
les
cs
mov
es
mov
xorb
mov
lret
movsb
lcall
mov
push
ljmp
test
pop
xchg
sti
inc
push
loopne
cmp
and
es
jg
lods
popa
add
cld
pop
inc
push
dec
mov
lods
enter
int
jp
in
pop
inc
push
hlt
xor
and
call
add
mov
adc
push
and
outsb
jne
out
test
loope
iret
jb
mov
pop
pop
pusha
fadds
xlat
cmp
cmpsb
or
inc
repnz
daa
popf
arpl
int3
loope
out
sub
jecxz
imul
lcall
cmp
push
jge
sti
and
push
cmpsb
jp
jg
pop
mov
push
in
push
or
aam
cld
cmpsb
bound
jbe
lret
push
jno
iret
add
stos
sarb
pusha
mov
cli
mov
pop
push
jle
inc
add
sub
pop
in
loope
xor
inc
fistps
je
jnp
dec
jmp
and
lcall
cmc
leave
hlt
sbb
jp
dec
pop
and
mov
sbbb
imul
xchg
icebp
sti
add
adc
shl
sti
dec
jmp
test
clc
pop
cli
shrb
and
sub
ljmp
sbb
popa
lods
mov
xor
es
out
or
add
pop
sub
inc
mov
cli
test
insb
push
xchg
dec
sub
hlt
fstl
clc
ljmp
push
sub
std
jns
xor
daa
pop
jl
pop
jg
xor
jae
jle
incb
mov
cli
stos
ss
sbb
push
adc
dec
inc
pop
ret
sub
mov
cmpsl
popa
dec
jo
incb
cmp
push
push
jg
inc
sub
adc
addr16
pop
push
mov
dec
das
mov
mov
aad
movsb
sbb
jl
fdivrs
and
and
push
scas
mov
insl
popa
fists
sahf
mov
jno
test
ret
pop
sahf
mov
lods
push
aad
sahf
ret
dec
out
lock
jo
arpl
mov
or
out
jne
js
fwait
adc
mov
push
test
pop
loop
testl
xchg
std
xchg
xor
or
jbe
adc
xchg
in
lea
shlb
dec
xchg
mov
dec
cmp
popa
jns
dec
in
cli
fs
cld
test
xchg
lea
jg
imull
cli
dec
sub
cmpsb
xor
fbstp
inc
push
push
mov
dec
inc
and
mov
mov
sbb
xor
bound
pusha
jns
call
pop
lret
and
lods
jno
cwtl
mov
sbb
icebp
jne
cmp
stos
es
cmp
jo
nop
pop
jmp
and
mov
dec
aaa
push
jno
pop
imul
addb
push
popf
xchg
cmp
notb
cs
pusha
sbb
test
int3
cli
out
cmpb
icebp
call
mov
pop
pop
loopne
ja
lods
scas
repz
inc
into
adc
scas
or
dec
or
js
dec
in
pop
xchg
push
pop
xor
or
push
bnd
xchg
fstl
cmp
mov
mov
cmp
popf
js
mov
data16
push
rorb
mov
xlat
scas
inc
mov
jmp
test
xor
jge
int3
and
es
sub
jmp
sarl
jb
push
push
pop
ljmp
mov
stos
aam
inc
test
push
cltd
scas
inc
repz
dec
xchg
out
fadds
pushf
shlb
push
outsl
sbb
pushf
push
sbb
and
sbb
pop
or
inc
sbb
xor
enter
movb
dec
mov
cmp
in
cmp
insb
mov
mov
test
outsl
clc
cmovle
dec
xchg
mov
xor
stos
pop
loopne
icebp
dec
push
xlat
or
lcall
xor
or
mov
pop
jns
mov
sbb
cmp
fwait
or
xchg
stc
out
arpl
out
fbld
les
mov
popf
ljmp
nop
dec
std
cli
loope
sub
xor
lret
mov
movsl
sarb
cmp
lock
push
jb
mov
sbb
and
dec
in
lods
dec
xor
int
popf
add
mov
shrb
push
fiaddl
lahf
iret
sub
loope
js
insb
or
jae
insl
jg,pn
pop
xor
fistl
jne
mov
loope
pop
sub
inc
rcr
in
lds
xchg
ret
cmp
mov
mov
jg
aad
sti
and
rcll
adc
addr16
jbe
and
pop
out
lcall
and
cmp
jno
push
inc
les
out
lret
testb
cmpsl
mov
sub
cmp
fwait
push
mov
cltd
ret
fwait
jo
push
jmp
jecxz
and
mov
pop
int
cwtl
call
movsb
jg
cld
jecxz
outsl
xchg
sbb
scas
push
mov
testl
in
xor
ret
lods
sub
jmp
jmp
pop
les
imul
int3
push
mov
mov
dec
loope
outsl
rcrl
mov
and
pop
inc
test
cld
or
rorl
popf
dec
pop
adc
in
shl
dec
adc
cmp
or
jmp
mov
jl
data16
push
pop
dec
gs
in
push
sbb
fidivs
sub
pushf
mov
mov
cmpsl
arpl
aaa
mov
popa
fsub
cwtl
jp
stos
mov
das
add
test
out
outsl
xchg
cwtl
das
fdiv
mov
mulb
loopne
lret
adc
xor
xchg
adc
cmp
push
mov
and
push
out
jns
dec
sub
test
push
aas
cmpsb
stos
lods
rclb
outsb
enter
stos
and
loop
inc
mov
stos
xchg
aas
pusha
or
fcomps
dec
cwtl
aad
scas
xchg
repnz
ret
dec
test
cmp
push
add
pop
push
sbb
cltd
mov
movsb
xchg
mov
inc
cmc
insl
rcll
cwtl
popa
addr16
mov
dec
jp
out
or
outsl
xor
and
jne
xor
das
push
fidivl
jne
aas
movsb
in
mov
or
inc
lret
lret
xchg
and
jno
add
add
jge
das
and
cmp
cmpsl
outsb
test
mov
test
xchg
inc
and
xchg
sahf
sub
xor
stos
aad
mov
jne
repnz
clc
gs
stos
pusha
jecxz
arpl
sbb
inc
sarb
mov
pop
lret
add
loope
loopne
push
fs
cld
loopne
lret
imul
ja
test
je
xor
xchg
pop
mov
in
jns
add
insb
inc
arpl
lods
xchg
add
loop
mov
or
xor
xor
adc
inc
xchg
xor
mov
mov
js
loopne
adc
insb
xor
mov
sub
fcomps
inc
divl
sub
mov
dec
add
daa
pusha
pop
cmp
xchg
or
push
and
pusha
mov
mov
loop
mov
out
xor
push
adc
xor
call
or
aam
mov
sub
ljmp
xchg
adc
pop
mov
fs
jbe
xor
xor
cs
mov
pop
pusha
scas
xchg
xlat
pushf
out
subl
push
insl
xlat
xlat
push
pusha
and
sub
inc
cwtl
inc
jle
jno
xor
addl
dec
icebp
clc
rorl
popa
and
add
sub
and
inc
or
cmpsb
xchg
xchg
out
and
in
sub
mov
fwait
insl
aaa
clc
aas
mov
push
push
push
push
incb
jmp
push
mov
sti
out
push
and
xchg
jmp
cmp
test
bound
fiaddl
mov
aaa
jae
or
xor
dec
xchg
pop
mov
nop
push
sbb
lods
cmpsl
hlt
xchg
xchg
fimuls
cld
or
lds
movsl
mov
lods
cmpsb
pop
nop
sbb
sbb
leave
dec
inc
test
mov
flds
sbb
pop
mov
pop
cmp
sub
jmp
daa
dec
or
pop
fnstenv
xchg
jg
shlb
push
pop
or
push
outsl
and
xchg
popf
cmpsl
insb
daa
sarb
pop
pop
fbstp
pop
movsl
inc
jne
jne
loop
imull
fisttpll
mov
not
jl
cld
sub
aam
lds
sbb
xchg
ss
xor
fisubrs
mov
xchg
outsl
jno
call
fdivrl
or
or
aam
int
pop
mov
pop
int3
mov
add
fwait
inc
pop
loope
adc
pop
loopne
ja
repnz
fstl
push
sbb
xchg
arpl
and
dec
mov
call
lahf
push
fwait
cmpsb
addr16
cltd
adc
int
or
mov
mov
xchg
jns
jp
testl
sbb
pop
repnz
jmp
inc
mov
push
aas
mov
or
dec
push
cmp
pop
fsubp
test
jo
fwait
rcrb
jecxz
icebp
cli
cmp
add
add
cli
out
xlat
adc
loop
and
cmp
pop
sub
sub
pop
mov
ss
mov
jle
insb
sbb
je
xor
mov
mov
shlb
jb
or
mov
cltd
test
test
ja
pop
lds
cmp
fsubs
mov
clc
iret
mov
push
push
mov
mov
movsl
fdivrl
mov
test
mov
lahf
jb
dec
lods
mov
test
sub
jecxz
insb
sub
movsl
je
cmovne
data16
outsl
jae
cmpsb
pop
push
add
fstpl
or
enter
pop
push
cmp
lahf
orl
jecxz
loope
mov
push
bound
sub
iret
out
rcrb
in
cli
mov
jmp
or
mov
lods
push
lea
sub
fisubs
xor
dec
outsb
std
lret
icebp
test
fbstp
loopne
add
xor
add
mov
inc
cvtdq2ps
add
xor
mov
mov
in
addl
nop
hlt
dec
js
push
loop
mov
inc
out
pop
adc
inc
cmp
stos
push
dec
dec
inc
leave
fldt
and
inc
xlat
ja
ret
jge
sahf
add
mov
mov
xchg
jae
imul
imul
push
add
dec
aaa
mov
add
mov
sub
push
loop
pop
add
pop
and
out
push
out
push
push
xchg
addl
mov
insl
cld
int3
sar
movsl
in
clc
test
cmp
mov
pushf
out
mov
frstor
aam
add
mov
cmpsl
leave
aaa
clc
mov
ret
jb
pop
call
sbb
mov
cli
faddl
mov
pop
rolb
xchg
fwait
cmp
mov
inc
sbb
les
cmpl
mov
pop
outsb
add
and
mov
les
mov
jb
insl
dec
inc
leave
mov
sub
je
lds
pop
dec
push
call
mov
rcrb
mov
int
adc
jne
ja
dec
cmp
mov
lods
ljmp
pop
testb
stos
lock
les
mov
loopne
lea
adc
pop
aaa
mov
pushf
adc
mov
pop
cmp
lahf
int3
xchg
cmpsl
jb
cmpsb
popf
add
hlt
pop
sub
or
mov
and
and
icebp
orl
sbb
inc
mov
and
add
enter
inc
xchg
or
sbb
push
imul
scas
mov
xor
mov
stos
or
mov
xchg
pop
or
jge
pusha
jo
std
dec
and
mov
test
xor
cltd
jmp
mov
mov
sub
xchg
mov
jo
lahf
mov
in
xchg
ret
inc
fistps
sbbl
sub
sahf
cmp
mov
sbb
out
add
pushf
mov
or
adc
jnp
and
jge
iret
pop
leave
mul
xchg
std
in
shrb
push
xchg
fimull
andb
stc
add
movsl
add
xor
ljmp
adc
or
aad
jne
cmp
push
je
xor
std
dec
xchg
pop
dec
mov
push
mov
daa
cmc
sbb
subl
dec
stos
add
or
add
dec
insl
popf
cltd
andl
mulb
cmp
push
jns
scas
lcall
aas
aaa
lcall
xchg
in
rcl
ret
popf
xchg
xchg
mov
and
pop
in
stos
xor
in
jne
jae
cmp
mov
dec
es
add
xchg
orl
sub
mov
inc
and
sub
jl
rcll
lcall
mov
add
loope
repnz
cmp
jb
jns
test
dec
dec
adcb
adc
cmp
enter
int3
push
sbb
addl
rorb
push
out
das
mov
mov
push
shlb
cmp
cmp
ss
mov
cmp
enter
iret
ja
shrb
test
shl
or
sti
mov
dec
enter
sbb
sub
insb
and
test
inc
mov
and
fbld
inc
scas
mov
cmpsb
scas
and
pop
xlat
cmc
add
out
ljmp
andl
xlat
inc
hlt
push
orb
dec
inc
fisttps
fdivr
subl
loopne
push
and
xor
mov
cmovno
test
cwtl
pop
jecxz
dec
pop
mov
pop
mov
repz
pusha
out
out
mov
test
es
sub
pop
stos
pop
sbb
and
fcomps
push
stc
aad
fwait
in
mov
inc
push
mov
add
inc
mov
mov
or
dec
mov
mov
loopne
dec
inc
sahf
cmpb
xor
pop
push
fidivs
fistps
test
or
and
fmuls
int
xor
scas
mov
mov
in
cltd
add
test
cli
rcrb
xor
mov
stos
mov
faddl
pushf
lcall
mov
adc
jmp
xchg
mov
js
cmpsb
aas
dec
jns
and
scas
lahf
and
stc
aam
xorl
clc
out
and
out
jecxz
ja
cmpb
jo
inc
inc
and
jmp
mov
xchg
js
sub
pop
or
movsl
outsl
cltd
xor
out
mov
inc
icebp
lahf
xchg
aam
xor
pop
bound
xchg
xchg
push
pushf
jle
xchg
push
stc
lock
fwait
popf
xchg
in
xchg
push
pop
jp
shll
rcll
mov
lock
inc
stc
je
xchg
mov
loop
int3
cwtl
push
test
mov
clc
repz
imul
nop
pop
jmp
mov
popa
nop
mov
dec
scas
push
xor
mov
or
cli
repnz
cmp
jo
adc
scas
push
pushf
xor
mov
aam
enter
hlt
add
ret
loope
sbb
int3
dec
insb
and
and
ret
aas
cwtl
cltd
cmp
pop
push
jae
movsb
inc
xchg
test
repz
js
ret
inc
inc
test
cs
es
loopne
pop
popf
xchg
sbb
inc
das
lcall
sbb
lcall
cmp
push
rorb
loopne
push
jnp
mov
dec
lret
insl
cmp
adc
add
fdiv
in
lahf
jns
push
jle
jl
inc
xchg
dec
decb
xor
jl
mov
or
arpl
mov
fisubs
out
xor
ret
test
and
js
lock
and
adc
add
jno
orl
cmpsl
into
fistl
fimuls
sbb
xor
add
mov
xlat
push
enter
xor
lahf
pop
popa
arpl
fnstsw
movsl
xchg
pop
aam
jnp
rol
outsb
and
imul
mov
fimuls
lret
rolb
mov
cmpsb
sub
pop
mov
mov
xor
pop
fcoms
pop
inc
cmp
leave
in
add
cli
jae
pop
in
test
ljmp
sub
gs
sbb
in
into
sbb
je
fisttps
xchg
mov
outsb
out
mov
inc
jno
xor
cmc
cmp
outsb
fdivrl
push
cmp
cmc
jmp
popa
jmp
lea
shlb
push
nop
mov
sahf
mov
push
pop
fistl
ljmp
cwtl
xor
shr
insb
xchg
fwait
into
aad
dec
outsl
or
xchg
ds
mov
inc
bound
inc
aam
adc
push
xlat
shlb
adc
cwtl
xor
dec
sub
lret
ljmp
pop
inc
lods
dec
out
jp
dec
call
mov
fwait
and
daa
lds
dec
leave
mov
cmc
push
xlat
jge
rorb
scas
pxor
dec
push
or
push
push
icebp
mov
pmuludq
fcomip
push
jge
pop
mov
cmpsb
fisttpl
and
push
pushf
jb
fnstsw
ljmp
jno
xchg
cmp
aam
sub
xor
scas
mov
pusha
jge
daa
xor
xchg
sbb
cmc
dec
js
dec
adc
lcall
in
xor
sub
mov
xor
cmp
data16
mov
ret
cmp
repz
stc
enter
cli
mov
je
cmp
test
insl
adc
insb
xor
dec
pusha
icebp
mov
ss
mov
sbb
or
into
das
jnp
mov
and
mov
stos
sarl
lods
ret
iret
jecxz
and
loopne
rcll
mov
xchg
push
mov
inc
addb
mov
inc
lret
and
int
push
aaa
loope
ss
mov
cmpsb
and
lock
add
rcrb
jns
xchg
std
inc
mov
sbb
sub
enter
mov
mov
dec
cmpsb
xor
add
push
adc
xorb
in
sti
addl
cli
pop
jb
movsl
push
adcl
or
push
mov
mov
shr
imul
push
ret
in
imul
mov
int
in
ljmp
rorb
mov
fildl
aam
ds
jmp
popa
jb
out
add
in
pop
hlt
imul
add
push
icebp
adc
clc
cmc
and
mov
in
dec
popa
out
pop
pop
sbb
test
rcrb
addr16
test
cli
pop
sahf
cmpsb
sub
shlb
icebp
inc
inc
jns
sbb
or
mov
sub
add
push
cmp
cltd
gs
sbb
outsl
test
ds
mov
rorl
int3
pmulhuw
idivb
mov
das
mov
icebp
cmp
sub
xor
cmp
test
lret
aaa
dec
sarl
pop
lods
and
and
rorb
in
push
fcmovu
dec
and
pusha
aam
ja
pop
dec
and
jns
inc
fldcw
imul
push
xchg
mov
sbb
pop
mov
cmp
sub
xchg
adc
fidivrl
pop
ljmp
mov
jns
mov
shrb
pop
adc
shll
push
sbb
jle
nop
movsl
or
fisttpl
aaa
test
xchg
push
in
sbb
leave
out
inc
outsl
outsl
push
out
imul
xor
adc
bound
rcl
pop
sbb
outsb
cwtl
adc
jb
cmp
sbb
stc
call
jno
add
mov
mov
rcl
loop
inc
movsl
and
ja
pop
push
push
and
lcall
into
add
cmp
mov
cltd
call
mov
addr16
lea
das
xchg
xor
mov
mov
xchg
inc
pop
inc
jecxz
in
cltd
out
sti
pop
inc
mov
mov
daa
mov
std
mov
jle
jb
iret
arpl
mov
xor
xchg
fsubs
out
jp
in
xchg
rol
sub
push
jbe
dec
mov
dec
dec
sbb
jl
lret
or
mov
test
loopne
fisubs
inc
jle
mov
outsl
xor
pop
lds
adc
lcall
nop
push
xchg
rcrb
and
das
ja
cmp
insb
fmull
mov
leave
push
pop
insl
sar
xor
jmp
xor
cli
mov
mov
mov
in
out
das
out
pop
cmp
mov
cmpsl
mov
lret
push
push
enter
in
cwtl
shll
xor
imul
jmp
movsb
dec
xlat
jo
inc
inc
and
xchg
imul
add
out
or
ret
and
fstpt
cmp
adcb
mov
push
push
out
int3
xchg
push
add
pop
adc
add
je
insl
inc
jns
and
cmpsb
push
inc
in
rcrl
fistpl
pop
gs
jecxz
insl
stos
in
mov
push
mulb
outsb
es
add
sub
test
aam
mov
js
dec
fdivrs
in
cltd
push
inc
jge
hlt
adc
cwtl
pop
push
test
in
stc
nop
mov
xor
int3
pop
jle
gs
mov
push
lds
addb
sbb
leave
fs
or
xlat
dec
sbb
sub
add
jo
sbb
orb
mov
ds
outsb
gs
mov
fimull
or
cmp
pop
mov
and
pushf
movsb
scas
sbb
jbe
xor
xor
cld
sti
lret
xchg
and
inc
fwait
cmp
mov
mov
aas
and
add
scas
mov
sbb
adc
fnstsw
and
jbe
loopne
out
test
pop
cmpsb
push
push
dec
ret
clc
mov
sub
outsl
mov
inc
jns
cmp
pop
dec
and
sbb
xchg
lods
cmp
or
mov
loop
out
jne
push
xchg
in
das
sbb
ljmp
out
loopne
shll
cmp
pop
xlat
aam
pop
mov
add
pushf
xchg
aam
sbb
cld
xor
out
push
xchg
xor
out
lea
rcrl
cwtl
daa
adc
inc
jo
mov
xchg
jno
xchg
sti
das
shlb
cmpsl
mov
js
xor
out
fildll
shrb
imul
lret
and
pop
and
insb
dec
imul
cmp
sbb
je
mov
mov
cmpsb
jmp
subb
sti
das
in
dec
popl
or
std
cwtl
or
xor
ret
rcll
xchg
sbb
push
jo
popa
cmc
loope
jmp
stos
lcall
sbb
push
rcl
push
or
sub
mov
push
rorb
add
push
mov
arpl
adc
xchg
mov
leave
leave
fidivrl
inc
jle
int
and
pop
sub
pop
and
int
js
cmp
mov
pusha
mov
mov
jp
and
mov
rclb
hlt
inc
sub
mov
lss
test
and
lret
xor
std
sub
add
loope
dec
jnp
cld
sti
stc
or
cld
popa
testl
sub
mov
iret
fcoml
mov
lds
push
aaa
xchg
les
mov
cli
lds
mov
pop
sub
loopne
test
pop
mov
xchg
pop
cmpsb
aad
mov
lea
fcoms
dec
and
ds
jno
sub
inc
xorb
or
sbb
pop
scas
xor
insb
jge
pop
repz
sbb
hlt
mov
in
xchg
jmp
inc
pusha
and
imul
pop
pop
dec
fnstenv
mov
push
ret
pop
cli
pop
dec
fsub
popa
fwait
test
add
fdiv
divl
and
push
sti
xchg
inc
adc
xor
cmp
xor
sbb
mov
adc
ja
xlat
sub
loopne
lea
inc
xchg
cld
sbb
cmp
ret
jmp
add
imul
pop
xchg
gs
xchg
rcrl
scas
mov
adc
mov
lods
insl
xchg
in
mov
adc
hlt
cmc
and
fnstsw
sbb
jmp
fdivrl
cmp
fldcw
nop
and
in
mov
cs
push
insb
xchg
sbb
xlat
and
push
imulb
inc
dec
pop
xchg
rorb
std
jle
xchg
jo
lea
push
outsl
push
pop
pop
adcb
out
and
cmpsb
xor
imull
jecxz
fwait
push
fstps
push
testb
sub
lcall
sbb
or
add
sbb
aas
push
cmp
int
fidivs
repz
dec
add
add
mov
cmpsb
dec
mov
mov
mov
fwait
out
ja
sbb
cmpsl
cmpsl
mov
jg
xor
xlat
int
leave
sub
mov
cmpsb
ret
xchg
dec
add
movsb
jmp
dec
push
inc
inc
movsl
mov
add
inc
mov
andb
xchg
mov
shlb
xorb
push
mov
ds
ficoml
pop
ljmp
es
mov
movb
add
xlat
dec
lret
dec
fs
push
stc
stos
xlat
and
xor
mov
xchg
cmpsl
jb
jnp
mov
popl
bts
loopne
shrb
leave
in
call
inc
pop
hlt
loopne
dec
dec
out
outsl
std
fwait
xchg
repnz
pop
insb
test
leave
loopne
jecxz
inc
sahf
rep
jg
std
jecxz
sahf
push
dec
fld
xlat
nop
outsl
pusha
sbb
into
cmp
adc
jo
aas
add
dec
sub
xchg
and
fisttpl
out
mov
jbe
xchg
pop
loopne
imul
aas
mov
push
sub
sub
push
scas
adc
push
mov
sahf
inc
fs
shll
add
inc
mov
fst
rcrb
push
mov
nop
mov
insl
test
xchg
in
xor
pop
nop
aas
faddl
xchg
pop
enter
jb
sbb
testb
jnp
ljmp
pop
push
sbb
sahf
mov
mov
shll
mov
and
lds
sbb
out
mov
mov
into
sub
sbb
mov
mov
mov
rorb
add
test
dec
jae,pn
jo
push
xchg
adc
sub
pop
mov
clc
push
lret
and
outsb
cmp
shl
mov
and
divb
movsb
fimull
loop
push
ds
push
cmp
fsts
cmp
cmpsb
insl
sub
outsl
xchg
lods
push
push
and
jno
and
and
stos
add
cltd
in
rsm
pop
cs
mov
bound
sub
push
mov
mov
mov
add
mov
popf
mov
jmp
es
aaa
jle
addr16
arpl
movb
and
fstps
pop
dec
cmp
ss
test
mov
push
cmp
inc
dec
sub
loop
sbb
sub
jns
mov
mov
dec
imul
or
jg
loop
rorb
in
loopne
mov
sub
xchg
push
iret
lods
or
dec
push
sub
sbb
mov
sbb
sub
std
bound
xchg
xchg
dec
sbb
or
and
mov
xchg
sub
mov
adc
push
mov
xor
out
and
xchg
pop
dec
cmp
scas
xchg
jno
xchg
out
mov
fidivrl
adc
fistpll
aam
lcall
lods
test
xlat
cmpb
mov
sub
adc
adc
jg
and
xchg
mov
ret
ret
jmp
xor
mov
push
pop
add
jne
das
push
dec
dec
lds
push
xor
inc
clc
sub
push
xchg
lea
sub
popa
or
popa
jbe
lea
mov
sbb
bound
dec
dec
sbb
fs
mov
loop
jge
or
pop
lods
dec
ret
dec
js
stos
push
das
imul
sub
sbb
sbb
loope
dec
jnp
aad
js
ficoms
add
or
ja
xor
push
xor
mov
sub
cmp
shlb
xchg
lea
add
push
pop
dec
adc
inc
jns
test
ret
or
bound
or
outsb
in
pop
ljmp
test
add
adc
stos
jmp
pmullw
mov
loopne
xchg
add
iret
fwait
sub
add
leave
shrd
and
jo
cmp
aas
or
mull
subb
jmp
dec
jnp
mov
adc
inc
cli
cwtl
into
mov
and
cmp
sbb
mov
adc
enter
imull
int
iret
dec
hlt
xor
sbb
cmpsl
add
repz
das
cmpsb
inc
sbb
mov
fcoml
mov
mov
hlt
mov
or
lea
jl
mov
lret
outsl
mov
and
aaa
sub
stos
jmp
dec
mov
or
shlb
ret
aaa
or
sbb
outsl
jno
jnp
dec
jae
sbb
rcll
out
inc
sti
daa
aaa
cltd
sub
mov
int3
pop
xor
ljmp
lret
lea
adc
gs
dec
jne
or
rclb
lahf
sub
or
xlat
repnz
iret
or
mov
fcos
rol
mov
jl
mov
scas
bound
mov
push
repnz
insb
inc
imul
subl
in
xor
pusha
call
imul
pop
pop
and
insl
inc
test
jne
add
fsts
push
outsl
movb
push
sbb
xor
xchg
popf
scas
out
push
mov
jnp
leave
divl
jle
inc
push
lea
add
xchg
fisubrs
inc
cmpsl
orl
mov
jl
sbbb
xchg
iret
movsl
int
jns
imul
in
nop
adc
pop
push
pushf
jge
out
mov
sub
ss
xchg
inc
sub
dec
out
fs
les
int3
inc
inc
and
call
mov
xchg
adc
fimull
leave
sahf
cmp
push
pop
or
outsb
mov
sub
pop
push
fisubrs
sbb
stc
or
clc
dec
sbb
jmp
pop
sub
insl
jge
popa
shll
arpl
mov
mov
pop
jnp
sbb
pop
enter
int
std
adc
and
dec
sub
out
push
aas
pop
les
lret
and
sahf
iret
mov
lea
int
sub
into
inc
dec
sbb
xchg
stc
push
xor
adc
sbb
outsl
enter
dec
mov
sub
inc
inc
and
jecxz
xchg
jb
add
push
dec
push
fdivs
out
scas
push
sub
push
cmp
cmp
and
loope
or
enter
mov
jmp
mov
lcall
mov
sub
adc
inc
sub
jne
and
mov
jp
je
test
cld
mov
icebp
xor
les
sbb
test
in
rorl
stos
mov
or
push
jo
push
xchg
and
inc
ja
add
inc
lcall
mov
andb
push
daa
or
ret
adc
xor
sbb
xor
and
sub
sbb
roll
or
xor
mov
mov
cmpl
popf
and
push
lock
shll
test
loop
outsl
push
in
shrl
sbb
jmp
sub
jmp
int
out
aas
xlat
pop
enter
ret
int3
sbb
xor
bnd
pop
inc
cmp
movsl
jnp
push
sbb
jecxz
inc
lock
jno
mov
pop
mov
shl
pushf
jae
subl
shll
iret
cld
jns
jae
cmpsb
or
ljmp
and
push
call
cmp
mov
sbb
or
pushf
sub
test
xchg
mov
inc
sub
adc
out
repnz
push
adc
data16
loop
jbe
shll
fcoml
lods
aam
sub
shlb
dec
sub
lods
popf
pop
je
xlat
lods
sbb
pop
jge
mov
fbstp
lret
das
sbb
pop
dec
and
pusha
sub
push
aas
test
out
cmp
scas
mov
or
sbb
xchg
movsl
daa
loope
cmp
outsl
das
mov
inc
mov
cmpl
jae
sub
add
dec
adc
jl
push
ss
inc
sub
add
xlat
arpl
das
mov
jo
sbb
icebp
ja
mov
pop
cli
adc
mov
lcall
dec
dec
lods
aad
mov
xchg
pop
or
mov
fnstsw
mov
sbb
and
adc
push
mov
mulb
cmp
mov
ficoml
jge
jae
mov
mov
mov
ds
jmp
and
push
and
add
push
std
shlb
or
cmp
ret
mov
lret
push
sbb
mov
push
mov
or
mov
sub
xchg
lret
repz
add
lret
push
subb
insl
jae
adc
stc
insb
repnz
clc
jmp
xchg
mov
mov
lods
imul
or
inc
pop
jmp
mov
xchg
fdivrs
or
jb
sbb
jle
icebp
mov
mov
sbb
mov
lods
xchg
mov
jns
pop
ret
pop
shr
icebp
push
sbb
mov
ret
adc
clc
push
cltd
fidivs
js
in
mov
int3
sahf
data16
xchg
pop
inc
shrb
leave
sbb
jae
mov
stc
movsb
ljmp
scas
shll
sahf
shrb
in
scas
rol
mov
popf
mov
int3
pop
mov
cmp
sbb
dec
push
ret
inc
leave
lret
ljmp
or
lods
gs
sub
xor
aam
mov
sbb
xor
scas
lds
arpl
loope
mov
sub
cmp
mov
inc
lcall
sub
cmpsb
sub
mov
or
push
aam
fmul
or
leave
pop
pop
xchg
adc
dec
pop
in
addr16
bound
inc
in
adc
or
mov
sarb
inc
jg
mov
cmc
dec
add
lods
ret
push
loope
lds
inc
push
arpl
pop
dec
dec
in
shlb
scas
xchg
int3
fimull
pop
js
xchg
stc
imul
cmpsl
shl
cmp
out
push
mov
or
jg
mov
shlb
pop
sbb
inc
push
xor
andl
push
movsl
repnz
xor
xor
inc
pop
sti
stos
sbb
fsts
or
mov
mov
fcoms
cmc
mov
xor
jmp
mov
movsb
sub
in
dec
cld
adc
mov
add
xchg
pusha
fsubrl
inc
ss
pop
out
push
dec
dec
xor
outsl
push
dec
movsb
lods
jo
test
mov
test
push
mov
and
iret
test
inc
mov
xlat
sub
iret
and
sahf
inc
or
mov
loopne
rclb
dec
xchg
adc
mov
xchg
xor
cwtl
pushf
mov
repnz
xlat
jp
lods
lods
adc
arpl
xchg
dec
add
adc
enter
loopne
adc
sub
aam
push
and
int3
inc
mulb
pop
mov
jo
mov
pop
mov
cld
adc
adc
jnp
jnp
repz
pop
in
xchg
add
jmp
fistpll
mov
dec
and
mov
test
xchg
call
mov
sub
daa
push
jne
or
nop
out
loopne
jp
pop
push
or
cmp
lcall
inc
dec
push
das
loopne
pop
push
call
outsl
call
pop
popa
dec
push
div
test
es
addb
mov
in
decb
xchg
sbb
inc
xchg
stos
faddl
popa
xchg
rcrb
xchg
pop
test
mov
mov
push
cmpsl
or
xor
data16
pushf
sbb
out
js
xchg
test
in
jl
inc
clc
testl
pop
in
stos
xchg
add
in
in
xchg
out
mov
push
sbb
mull
xchg
inc
subb
mov
jmp
fwait
jecxz
call
mov
seto
cmpsb
jecxz
idivb
test
add
inc
lahf
pop
and
push
test
mov
hlt
jecxz
xchg
and
xor
stos
call
test
dec
cmp
push
sub
cld
mulb
pop
push
ret
into
loop
das
movsb
xchg
xor
jmp
push
mov
inc
xchg
cmp
vmovaps
mov
std
cmpsb
fildll
mov
inc
int
lds
dec
test
mov
pop
pop
xchg
mov
mov
jecxz
push
in
adc
sub
dec
cmp
and
mov
adc
popa
ror
adc
orl
add
jge
fwait
mov
xchg
mov
pop
or
xlat
negl
push
cwtl
mov
mov
xlat
lock
mov
shlb
adc
nop
push
adc
cmpsl
das
inc
jae
jno
xchg
fs
notb
test
pop
out
cmp
push
movsl
das
lods
imul
jns
addb
je
rcr
jae
sbb
xchg
cs
js
das
pop
movl
std
pop
cmp
cmp
sahf
dec
or
adc
mov
lea
psrad
adc
inc
ficomps
push
jmp
adc
adc
adc
sub
dec
mov
pop
insl
fiadds
inc
shlb
mov
adc
cli
shrb
push
addb
stos
jne
jns
mov
xchg
jno
sbb
nop
hlt
push
cmpb
add
int3
xchg
sahf
xchg
pop
popf
add
daa
jnp
jb
add
mov
scas
mov
xor
test
cmc
dec
sub
jg
notl
push
test
xchg
push
sub
lcall
push
pop
rcll
fsubrl
push
fdivrs
movsl
cmp
sub
popf
push
push
mov
loopne
cmc
popa
push
popa
add
pop
or
xchg
sbb
loope
mov
lret
fsubrl
or
mov
lret
cld
fmuls
xorb
je
mov
rcrl
jne
pushf
xchg
sbb
adc
aaa
cmp
les
adc
das
xor
xor
mov
scas
push
pop
mov
insl
push
cmp
mov
mov
adc
js
cmp
mov
aam
xchg
cld
mov
and
pop
fisttpll
out
mov
or
cltd
inc
mov
out
sub
cmp
pop
adc
inc
cld
cltd
push
notl
dec
jbe
mov
cmpsl
js
push
mov
negb
in
cmpsl
std
mov
adc
inc
mov
push
pusha
sub
imul
xchg
cmpsb
stc
mov
repz
or
pop
in
push
fimuls
test
outsl
sbb
push
sahf
sub
aas
add
cmp
mov
push
mov
outsl
cmc
lahf
mov
add
sub
adc
mov
mov
stc
pop
pop
scas
sbb
rorl
push
mov
cmp
lcall
dec
bound
xor
hlt
mov
mov
loop
inc
pop
ds
jge
mov
sub
subl
es
and
push
jl
pop
stc
loope
jmp
or
or
cltd
out
out
sahf
imul
xor
cmp
push
dec
fsubrp
mov
mov
pop
pop
iret
xchg
sbbl
aas
loopne
out
jp
mov
cmpsl
adcb
mov
xor
into
or
mov
lret
jl
cld
mov
std
ficomps
xor
mov
inc
jae
sbb
aaa
outsl
mov
shr
xchg
stc
jb
sbb
add
in
fs
jae
or
pop
mov
xchg
movsl
adc
and
dec
mov
push
mov
pusha
pop
loope
push
dec
push
out
mov
jge
mov
inc
cmp
fiaddl
mov
mov
mov
aaa
ret
lea
sbb
sbb
adc
jle
or
pop
xchg
jmp
xchg
je
jne
cld
push
xchg
call
cmpl
pop
or
jbe
mov
mov
sub
pop
adc
mov
xor
adc
cmp
or
xchg
popf
jle
imulb
cmp
jle
dec
rolb
fldt
adc
jmp
mov
mov
dec
jae
sbb
pop
mov
repnz
xor
movsl
aaa
popf
loope
inc
lcall
psrlq
push
lock
pop
lock
int3
outsb
and
dec
aam
sbb
push
push
mov
mov
ss
adc
adc
out
pop
sti
jle
aam
mov
pop
mov
push
lds
iret
popa
clc
lds
mov
jle
sub
adc
fcompl
adc
sbb
mov
nop
es
es
movsl
test
and
mov
xchg
ds
test
fs
adc
in
popa
cmpl
sbb
xchg
les
jo
sbb
dec
push
mov
imul
adc
ror
jmp
test
push
ret
cmp
mov
js
sbb
mov
jo
inc
sbb
push
xor
push
ss
test
pop
cmp
arpl
xor
insb
orb
push
sub
ss
les
cmp
pop
adc
orl
cmp
sarb
xor
les
mov
nop
add
insb
lret
imul
mov
sbb
mov
sahf
push
mov
imul
shl
ss
jo
dec
imul
mov
or
out
dec
ror
js
lds
test
sub
cmp
or
jge
and
xor
fadds
sbb
and
push
fsub
lods
pop
pop
dec
adc
mov
or
popa
in
xor
filds
add
sbb
aaa
gs
fstl
lcall
cmp
out
icebp
push
sarb
jno
scas
cli
sub
sub
icebp
sbb
in
cmpsl
stos
enter
or
in
lods
cwtl
sbb
xchg
nop
inc
call
sub
xchg
xor
sbb
pop
add
out
test
rclb
in
popf
shll
add
push
addl
xorb
adc
push
sub
mov
mov
test
std
ret
mov
push
cwtl
lahf
sbb
rolb
xchg
jns
dec
pop
mov
clc
je
sbbl
jle
daa
mov
inc
sbb
movsb
das
rcl
bound
ret
stos
mov
pushf
inc
and
outsl
mov
outsb
jmp
jne
lret
adc
fwait
jmp
cmp
test
or
dec
fwait
js
mov
and
test
add
push
mov
pusha
dec
sbb
inc
jae
dec
mov
jge
in
clc
adc
xor
icebp
leave
sub
rorb
out
stc
in
shll
dec
out
jns
lods
inc
es
sarb
jne
fisubs
pop
les
fsubrl
loopne
mov
test
adc
jmp
pop
data16
push
pop
roll
dec
mov
inc
cmpsl
dec
mov
cli
imul
mov
out
outsl
adc
and
out
add
push
loop
roll
insl
pusha
xorl
adc
mov
shrb
fbstp
and
cmp
mov
fiadds
cpuid
shrb
test
out
dec
cld
sbb
mov
aaa
mov
push
add
data16
test
fstpl
stos
fs
test
mov
adc
sub
push
push
or
fldenv
add
shlb
and
lods
scas
out
pop
jle
inc
pushf
int
pushf
push
push
mov
fbstp
loopne
decb
cli
mov
lea
mov
or
adc
out
xchg
stos
mov
mov
stos
out
aaa
inc
movsb
fldcw
cmp
testb
or
sub
lds
mov
icebp
in
cmp
push
rclb
stos
loop
ja
sbb
pop
ja
pop
xorb
or
pop
mov
add
imul
jae
push
dec
add
rcl
jg
pop
sbb
lret
test
jne
aas
test
cmp
rol
loop
stos
icebp
fists
fistps
sbb
arpl
sbb
lahf
cmp
or
push
sub
jae
sbb
sub
in
mov
int
test
push
shl
testl
push
push
jl,pn
out
vpcmpgtw
adc
push
xchg
fs
imul
xor
aad
and
inc
outsb
push
popa
enter
movsl
xchg
and
cmp
jge
cmpsl
test
add
inc
push
pop
nop
rorl
fisttps
lcall
dec
test
ret
cmp
clc
sub
push
leave
arpl
mov
movsb
insb
or
fildll
sub
mov
adc
dec
clc
dec
das
stos
xchg
jae
data16
pop
aaa
roll
shr
push
xchg
scas
cmp
mov
cmp
mov
pusha
insl
inc
insl
adc
add
jmp
sub
cltd
ficoms
leave
repnz
cmp
pop
jle
add
xchg
outsl
pusha
sub
out
xchg
cmp
out
mov
stos
sahf
jne
and
ret
int3
ret
movsb
aam
outsl
fs
sbb
in
mov
pop
xchg
in
jle
aas
scas
sub
into
test
mov
test
int3
nop
jl
fistpll
pop
gs
sbb
mov
and
aad
popa
filds
fsubrl
leave
stos
test
jmp
pusha
push
adc
daa
jno
jns
dec
loopne
dec
or
cmpsl
push
std
jp
or
mov
aam
xchg
mov
mov
xor
xlat
subl
addr16
inc
bnd
ret
out
push
lock
cli
adcl
fwait
and
adc
jmp
test
mov
nop
jmp
addr16
xchg
xor
and
jbe
push
sarl
pop
adc
leave
imul
lds
pop
fmuls
lret
gs
xchg
xchg
push
mov
add
out
cli
dec
insl
sub
xor
pop
enter
insl
call
lret
sahf
lods
sub
xor
cmp
je
adc
stc
aad
sbb
movsl
aas
adc
mov
or
sub
dec
stc
shr
ljmp
repz
mov
fimull
jle
scas
ret
pop
std
icebp
fisubrl
outsl
add
stos
addr16
jnp
inc
push
popl
mov
mov
sbb
or
xchg
int3
adc
cmc
scas
xlat
mov
cmp
shrl
jne
mov
pop
xchg
aam
push
ror
std
mov
mov
cld
xor
add
pop
cmp
je
mov
push
outsb
sbb
push
pop
imul
sbb
fistl
push
fnstsw
cmc
ret
mov
sbb
adc
mov
sbb
mov
push
into
ret
push
jge
mov
push
bound
popa
insl
outsl
pop
jle
sub
mov
lods
rcrl
cmp
cmp
sahf
xchg
xchg
mov
pop
cmpsl
cmp
cmp
add
inc
and
pop
xor
fnstcw
cmpsl
lret
adc
push
es
pop
and
and
xchg
mov
es
push
rcrb
push
add
mov
xor
adc
xchg
lret
jo
cmpsl
bound
cmp
dec
test
xor
orb
inc
xlat
or
pop
sub
rcrb
inc
dec
decb
add
aam
out
jmp
jge
inc
jmp
daa
sbb
js
adc
pop
xchg
and
xchg
push
imul
push
push
or
dec
inc
call
ljmp
mov
mov
sub
rcl
push
cmp
int3
lcall
and
dec
mov
pop
pop
in
inc
outsb
aas
inc
dec
dec
shlb
scas
jns
cmc
mov
out
ss
aaa
out
dec
and
fwait
xchg
push
xchg
je
xlat
jnp
adc
icebp
push
xor
push
jle
sbb
push
jae
adc
aaa
fwait
repz
pop
or
add
sbb
jno
mov
xchg
and
js
jle
push
mov
cs
xchg
push
cmp
fisubl
mov
test
adcb
sbb
mov
or
xor
sbb
pop
and
or
fsubrp
cmp
and
leave
and
cltd
in
lock
or
jl
mov
addr16
dec
iret
out
adc
and
enter
lods
pop
imulb
xor
mov
mov
enter
push
je
lods
fsubs
mov
imul
adc
repz
mov
loop
mov
lret
nop
xor
sub
int
pop
push
cld
mov
or
fadd
jne
cli
xor
lock
cmpsb
sub
pusha
xchg
cmp
sub
mov
mov
mov
subl
in
or
xorl
push
mov
call
mov
rcrb
xchg
repnz
dec
movsl
cmp
je
call
and
es
sbb
pop
mov
in
ret
mov
lcall
cmpsl
vmovaps
xor
es
add
mov
leave
test
fstps
test
out
fisubs
shlb
xchg
div
clc
ljmp
ret
adc
es
mov
pop
push
jae
push
dec
in
stos
scas
repz
inc
dec
imul
ja
jnp
mov
repnz
std
mov
xorl
dec
dec
mov
loopne
cld
das
xor
jbe
jbe
rol
adc
cwtl
mov
hlt
jb
out
imul
stos
pop
pop
sbb
ds
jle
add
aad
adc
dec
rorl
lcall
out
mov
pop
nop
mov
jbe
cmp
lods
xor
sbb
adc
cmp
or
sbb
or
mov
enter
xor
dec
lods
ds
xor
cld
add
fstpt
push
and
loope
hlt
mov
sbb
mov
into
adc
in
inc
inc
aas
orb
pop
adc
and
mov
pushf
nop
xchg
arpl
and
jmp
std
jmp
pop
dec
fsubr
stc
nop
out
arpl
push
clc
jne
shrb
mov
sbb
pop
inc
jl
out
xchg
out
loopne
xchg
push
adc
mov
lcall
adc
fwait
sbb
mov
cmpsl
xlat
aad
ret
enter
test
stos
sbb
sti
xor
xlat
mov
dec
or
rcrl
xchg
mov
test
push
ss
sbb
lods
cmp
mov
aaa
pop
cmp
jp
int
jmp
jno
lods
mov
popa
out
push
outsl
cmp
sbb
and
daa
mov
add
or
sub
pop
or
call
dec
aas
inc
lds
push
test
pop
sub
pop
inc
sbb
jp
in
insb
mov
insl
mov
or
add
int3
outsb
imul
pushf
push
shr
icebp
dec
cmp
pop
in
inc
adc
jle
cmp
sbb
push
test
lock
sbb
sbb
pop
ud1
and
nop
or
test
aas
push
add
bound
xor
les
shr
xchg
imul
lcall
lcall
loopne
mov
sub
jg
stos
sub
pop
filds
xchg
mov
xor
shll
jle
inc
jge
je
cmc
xchg
hlt
sub
mov
fistps
test
jnp
mov
test
adc
add
pusha
jg
bound
pop
adc
shl
test
mov
push
inc
xchg
adc
dec
mov
push
icebp
aaa
adc
mov
sbb
movsb
sub
mov
popl
xor
adc
push
push
jbe
xchg
clc
rclb
add
xchg
jl
fisubs
out
adc
ljmp
jno
mov
pop
xchg
movsb
mov
sub
loop
rcr
cmpsl
push
repnz
mov
fmul
insb
mov
scas
mov
movsb
jecxz
add
mov
icebp
cmp
jnp
sub
cld
xchg
fiadds
das
scas
and
je
jb
movsl
lret
and
outsb
sbb
pop
cmpsl
inc
pusha
out
mov
rcl
cmp
mov
push
mov
xor
dec
sbb
sarb
sub
subb
jmp
pop
lds
mov
gs
mov
jl
in
add
aam
sub
jmp
loop
stos
cmpsb
ds
popf
mov
adc
dec
iret
xor
cmp
cmp
ret
test
lods
add
dec
inc
bound
mov
push
dec
push
mov
jmp
mov
mov
std
outsb
xchg
and
lods
clc
stos
test
xchg
mov
sub
cwtl
rcrb
je
fiadds
dec
cmp
fs
int
add
js
push
dec
es
or
mov
jecxz
and
mov
jnp
data16
cmpsl
or
xlat
iret
jecxz
jbe
stc
sub
out
dec
les
stos
mov
cmc
ss
mov
lahf
fisubrs
push
lock
scas
push
in
pop
pusha
andl
mov
movsb
dec
pop
jp
and
jl
std
sub
out
test
add
lods
icebp
aad
xchg
push
scas
or
aaa
push
mov
pop
or
fdivrp
loop
fs
call
xor
adc
or
pop
pop
inc
popa
cld
push
push
add
mov
add
push
addr16
mov
shl
adc
std
and
iret
or
nop
xchg
lret
in
push
ret
push
or
loop
mov
push
dec
pop
lods
lcall
js
mov
push
cmpsl
adc
outsl
inc
adc
leave
mov
lock
jg
out
in
repnz
cmpsb
out
jne
and
es
mov
std
sbb
cmpl
xor
adc
adc
sbb
jnp
pop
test
stc
sbb
stc
push
pop
addr16
cmp
pop
lcall
pop
mov
mov
sub
data16
icebp
repz
jle
jnp
loopne
imul
fisttps
push
sti
rcrb
jno
pop
in
xor
fmull
mov
out
ffree
inc
push
adc
adc
dec
cmp
jmp
and
daa
pop
jae
in
int
cli
or
fstpt
cwtl
sbb
inc
cmp
in
jmp
push
inc
neg
icebp
sub
aas
jmp
xchg
test
out
jnp
add
mov
xorl
hlt
inc
or
inc
bound
and
mov
adc
mov
mov
out
out
scas
xchg
rorl
inc
test
fimuls
dec
outsl
xchg
inc
xchg
in
scas
push
mov
in
lock
mov
xlat
jle
mov
gs
neg
lods
or
jmp
int
push
jns
pusha
inc
out
loopne
test
fimull
sbb
sub
cltd
mov
lret
data16
cmp
add
xor
lea
add
mov
xchg
bound
je
ficomps
xor
and
sbb
outsb
icebp
ljmp
cmp
mov
xorb
daa
mov
iret
lock
pop
push
lock
stc
test
addl
mov
or
sbb
and
inc
dec
nop
mov
je
sarl
push
ret
pushf
paddusb
dec
mull
mov
std
lahf
mov
ds
push
add
hlt
pop
push
mov
add
arpl
jle
jbe
shl
mov
gs
and
and
mov
pop
and
nop
mov
push
sbb
insl
shlb
cmp
add
dec
bound
mov
scas
push
xchg
cmp
inc
cmp
in
add
push
sbb
add
push
pop
jle
push
movsl
sub
in
mov
add
aam
or
adc
jns
in
xchg
popf
data16
dec
scas
inc
inc
xchg
leave
int3
dec
push
mov
jbe
cmp
je
mov
stos
imul
loopne
in
mov
sbb
xor
lret
xor
inc
mov
push
lahf
lock
cwtl
into
and
lahf
sub
popa
and
int
ret
stos
or
inc
and
mov
cwtl
nop
in
aam
mov
hlt
mov
mov
mov
call
cmp
jmp
fnstcw
loope
push
cmpsb
ret
sbb
pop
xchg
aam
cmc
scas
arpl
das
and
fstp
or
inc
ja
sub
iret
movsl
mov
jp
or
inc
je
push
addr16
and
idivb
inc
adc
push
mov
jg
or
mov
testb
cmp
push
ljmp
inc
outsl
adc
aaa
xchg
cmp
or
dec
call
nop
pop
and
sahf
mov
mov
fisubs
inc
xor
push
adc
popa
mov
inc
addb
push
xchg
pop
jecxz
cmp
cmp
jp
ficomps
mov
push
sti
and
imul
mov
and
shrb
xor
test
imul
add
test
sub
jno
lcall
fistpl
lds
mov
popl
std
enter
out
push
mov
addr16
cmp
xchg
pop
fisubs
in
loope
cli
imulb
jle
stos
rcll
sbb
sbb
popa
push
xor
rol
and
jp
mov
lds
ja
xor
mov
add
inc
addr16
mov
sub
icebp
cld
lcall
ret
sub
cmp
xchg
push
je
xchg
sub
out
pop
mov
hlt
out
pop
fisubrs
lret
iret
mov
push
in
frstor
mov
test
jae
push
in
mov
cmp
xor
pop
inc
test
inc
lock
out
sbb
imul
mov
movsl
push
clc
mov
pop
mov
pop
mov
pop
mov
sub
push
or
aad
pop
xchg
cmp
pop
test
dec
sti
pop
mov
push
scas
cmp
xchg
xchg
mov
sti
inc
push
inc
mov
andb
sarl
pop
xchg
mov
inc
inc
pop
mov
mov
scas
mov
imul
ds
fiaddl
xchg
cld
dec
and
cld
test
imul
inc
push
imul
mov
push
outsl
hlt
mov
pusha
push
add
push
aas
mov
popf
jb
in
js
sbb
xchg
xchg
xchg
std
xor
fs
in
jnp
jo
jge
mov
jo
negl
mov
leave
pop
sub
jno
ficompl
aad
lock
add
fwait
mov
sub
pusha
pop
and
icebp
pop
aaa
test
push
xchg
fsubrl
aad
out
adc
xchg
aas
inc
fnclex
mov
inc
push
xor
out
cmc
ds
out
cmp
das
jecxz
ret
notl
mov
mov
jmp
sarl
jb
das
sbb
sub
jmp
mov
sub
hlt
mov
fcmovu
das
xchg
pop
fcoms
push
popw
sarb
jnp
cltd
fists
imul
ret
cmp
xchg
jns
lret
shrl
imull
loopne
mov
shr
rorb
dec
xchg
lds
inc
aaa
cmp
clc
aaa
outsl
pop
in
sub
lret
or
adc
jnp
ljmp
data16
pushf
mov
mov
daa
mov
movsb
xchg
add
sbb
scas
pusha
stos
mov
xor
adc
stc
lods
jle
jg
negl
test
push
sbb
pop
mov
pop
mov
dec
call
xlat
and
pop
bound
lods
dec
xchg
xor
dec
push
or
mov
add
repnz
mulb
pop
insl
mov
jnp
fsubl
ljmp
cmpsl
sub
adc
icebp
cmc
mov
data16
lret
pop
mov
fistpl
mov
repz
lret
inc
adc
sbb
in
jle
test
loope
mov
mov
sti
lods
das
dec
dec
out
pop
scas
cmp
fisttpll
dec
inc
cmp
mov
and
pop
adc
cltd
lock
add
inc
int
aam
xor
jb
lcall
std
cmp
push
mov
sub
and
push
mov
sti
push
enter
or
push
cmovae
enter
negl
lret
jns
jl
gs
add
fsubrp
fmul
call
and
and
dec
xchg
icebp
movsl
sub
test
insb
lock
and
sub
stc
ljmp
xor
lret
stc
jl
or
push
xor
adc
mov
inc
push
pop
movsb
shll
fstpl
or
cmpb
cmpsb
push
scas
mov
push
daa
mov
in
stos
enter
pusha
add
xchg
mov
and
mov
xor
xor
ljmp
inc
jg
es
leave
push
pop
insb
jbe
lods
test
dec
pop
push
popf
dec
lret
mov
push
addr16
jne
fcoms
and
repz
mov
fistpll
mov
mov
sub
cli
add
out
ja
cmc
jmp
cmpsb
mov
das
push
jl
xchg
ret
out
lods
push
add
pop
jne
addr16
mov
dec
jl
sub
out
mov
mov
out
jecxz
aaa
or
or
shr
es
pop
and
ret
push
inc
fmul
cmp
sarb
in
out
dec
out
and
aad
js
xor
aad
aaa
arpl
rcrl
ret
hlt
insb
fwait
loopne
and
mov
jb
push
pop
insl
mov
jno
cmp
dec
mov
loopne
adc
mov
shll
aam
cwtl
xchg
outsl
and
outsl
aaa
loopne
rcl
mov
mov
popa
jns
dec
mov
mov
mov
xor
pop
mov
repz
fwait
xor
push
and
adc
mov
adc
mov
out
outsl
cmp
int3
test
push
mov
adc
icebp
loopne
aam
cmp
mov
inc
push
add
jnp
popf
out
or
jns
shrb
stc
jbe
in
into
xor
lods
repz
xor
clc
jmp
into
scas
fucomp
and
and
stos
out
in
and
pop
adc
das
rcrb
test
hlt
fcmovnbe
mov
mov
mov
gs
cmpsb
repnz
adcb
loopne
lea
mov
imul
sbb
or
mov
std
test
push
cmp
lcall
inc
les
mov
cmc
ds
cmpsb
inc
or
mov
pusha
test
push
jb
and
mov
or
test
fucom
mov
adc
dec
js
in
cwtl
negb
repnz
mov
lods
lods
xchg
outsb
or
out
inc
int3
js
dec
jle
mov
mov
fnstenv
dec
cmp
rcr
dec
std
imul
dec
xchg
leave
push
xchg
xchg
mov
mov
cmpsl
and
add
xor
rcll
push
pop
pop
xorl
scas
mov
dec
push
add
sbb
ja
mov
dec
movsl
add
mov
out
cli
jb
dec
or
xchg
push
push
xchg
xchg
inc
push
and
adc
mov
pop
int3
cmc
pop
pop
addr16
sub
pusha
outsl
ja
in
data16
or
lock
sbb
push
cltd
out
popa
or
scas
loope
push
cmpsb
and
xor
dec
xlat
mov
jp
xlat
push
lock
insl
cmp
adc
test
fdivrs
daa
cmpsl
push
xchg
pop
test
pushf
sub
lret
sub
fldenv
mov
xor
sbb
jmp
xchg
outsb
xor
or
mov
or
call
scas
adc
sbb
xor
movsl
push
adc
in
movsl
add
or
bound
loope
pop
sbb
test
adc
inc
adc
dec
xorl
neg
pop
insb
outsl
or
fs
fimuls
jg
cmpsb
add
jge
push
aaa
sub
ja
insb
xlat
mov
push
repz
jmp
sti
jo
cmp
ret
in
push
rolb
sbb
sbb
dec
cwtl
in
dec
imul
out
clc
sbb
iret
jnp
cmpsl
scas
sbb
xchg
icebp
jb
stos
add
fsts
sbb
and
movsl
xor
test
jno
jns
add
addr16
loop
add
cwtl
aam
gs
lea
cmp
xchg
cmpsb
gs
into
push
and
cli
jne
daa
mov
insb
jno
jl
mov
ja
and
xchg
xchg
je
loop
fnstsw
loop
test
add
in
mov
mov
iret
or
or
cmp
fdivs
add
dec
mov
int3
xor
outsb
divl
jge
pop
xor
push
movl
scas
xchg
or
add
pop
mulb
fcoml
nop
pop
mov
mov
mov
mov
andl
sbb
xchg
or
sbb
out
les
lret
jne
push
and
jnp
rcrb
inc
fisttpll
mov
pop
out
rdpmc
ss
jnp
xchg
mov
push
mov
and
in
scas
inc
popf
ja
cmpsb
daa
addr16
clc
ret
cmp
leave
mov
or
ss
xchg
test
lods
mov
adc
mov
lret
call
dec
push
push
lock
enter
test
outsb
mov
cwtl
dec
sti
adc
xlat
push
or
pop
in
and
cmp
add
rcl
mov
lods
mov
add
push
or
jae
test
mov
aam
imul
fcoms
int
movsb
xchg
xchg
or
mov
pop
in
negb
inc
hlt
imul
mov
out
jb
cld
fisttps
and
aad
cltd
imul
push
mov
pop
inc
or
jbe
jge
inc
cmpsl
inc
mov
or
pop
imul
mov
jecxz
outsb
sbb
sbb
push
inc
out
orl
push
scas
pop
adc
jb
dec
ficoml
lahf
sti
mov
lds
dec
adc
mov
out
pop
mov
push
xchg
push
jmp
inc
stos
adc
shlb
push
sbb
xchg
cmpl
jg
sub
repnz
int
ss
cmp
lock
fdivl
jbe
loop
mov
es
fmull
inc
sbb
xchg
lea
push
nop
jns
mov
stos
aaa
pusha
jne
testl
inc
int3
pop
jmp
jns
inc
cmp
push
fnstenv
sbb
inc
aas
jp
adc
lret
movsb
mov
imul
arpl
xor
in
or
xchg
lods
loopne
push
or
jp
mov
cmc
push
or
inc
ja
ja
jne
or
popl
jns
push
mov
fdiv
roll
das
adc
sahf
int3
mov
dec
xchg
mov
dec
or
imul
mov
xor
inc
popf
arpl
stc
sub
inc
mov
lret
mov
pushf
loopne
insb
xchg
jns
push
ljmp
mov
icebp
lcall
pop
int
testb
lods
hlt
mull
add
adc
dec
icebp
or
xor
frstor
push
mov
mov
pop
addb
ror
pop
call
and
and
xor
cmp
fwait
xor
shrb
pop
inc
mov
or
pop
mov
cs
rorb
sti
mov
repnz
mov
cmp
fimull
stos
pop
xor
mov
hlt
lods
movsb
push
xchg
stc
push
jl
dec
lcall
inc
ljmp
mov
movsl
loopne
sbb
lcall
mov
push
loop
clc
jo
jl
mov
push
ret
aad
mov
int3
inc
dec
decb
pop
xchg
push
inc
xchg
push
je
in
es
aas
jnp,pn
scas
lock
shrb
or
in
fsts
sub
mov
inc
insl
fsubr
fnsave
push
mov
jnp
push
std
in
mov
cmp
nop
stos
sbb
cs
vsubss
dec
mov
and
ja
ss
fnstenv
movsb
xor
rcr
jle
stc
nop
ror
xchg
adc
leave
icebp
mov
sub
sbb
scas
xchg
and
or
jnp
jmp
out
lcall
adc
into
call
push
in
mov
fwait
roll
dec
stos
mov
sub
inc
dec
inc
dec
mov
mov
add
inc
sbb
jecxz
fwait
xchg
iret
cli
xchg
inc
xchg
cmp
mov
outsl
std
push
int3
xchg
xchg
shll
push
adc
fs
insl
xchg
xchg
jmp
dec
cmc
jae
inc
andl
or
xchg
test
dec
mov
int3
into
mov
loopne
aam
dec
es
dec
iret
xchg
xchg
xor
pushf
mov
inc
or
pusha
pushf
inc
and
iret
aaa
cld
adc
jnp
dec
sub
rcr
icebp
std
cmp
jnp
adc
movsl
das
xor
inc
rol
push
sbb
adc
xchg
fistps
lds
loope
sub
sbb
cmp
xchg
sahf
inc
cmp
fincstp
add
jmp
pop
data16
pop
lcall
inc
xor
imul
adc
or
or
push
outsl
pushf
into
loopne
mov
dec
sbb
or
lock
cli
sbbl
pop
jmp
xor
leave
popa
lcall
js
sbb
add
inc
sbb
and
sbb
icebp
aas
rclb
pop
ss
push
and
in
dec
jmp
cld
js
mov
pand
test
jb
xchg
cli
mov
lcall
inc
fisttpll
inc
roll
out
cmp
inc
out
push
xchg
icebp
cltd
jp
lods
inc
mov
and
add
shld
mov
sub
and
mov
insl
xchg
mov
cmpsl
xor
test
call
or
popa
lods
adc
jns
mov
rorl
pop
fildll
data16
ds
push
adc
mov
jae
or
les
sbb
pop
dec
xorb
rol
jle
pusha
jne
scas
lea
inc
adc
cld
cmp
cmp
ja
mov
fld
add
xchg
pop
sub
pop
out
das
pop
fisubrs
daa
jg
fisttpl
arpl
adc
pop
aas
fisttps
cld
lea
subl
add
push
ljmp
mov
test
or
jbe
stos
pop
jb
test
addr16
scas
jp
clc
push
cltd
into
movsl
cmpsl
xchg
inc
cltd
xchg
cld
mov
cmp
sbb
loopne
rcll
test
adc
jb
add
sbb
jecxz
mov
or
les
lret
cmp
notb
outsl
std
stos
movsb
jmp
mov
dec
push
xor
sub
or
cld
jmp
lods
ja
out
test
hlt
pop
sub
xor
punpcklbw
push
int3
push
loopne
push
jae
jmp
js
cmp
push
shr
and
test
mov
rclb
lock
out
and
or
clc
pusha
loope
not
adc
add
in
das
test
ljmp
add
xor
cmpl
dec
xor
mov
mov
xchg
mov
xchg
arpl
pop
cmp
xchg
imul
aad
imul
cmp
sbb
jo
lds
or
in
xchg
mov
add
add
mov
and
mov
push
dec
in
jne
fucomp
dec
cmpl
stos
stos
cmc
cs
imul
push
xchg
add
fidivs
stos
push
shrb
fidivrl
std
pop
cmp
fdivl
pop
gs
add
mov
xchg
inc
rcr
dec
cltd
sub
mov
xor
aas
mov
cmp
lret
mov
sub
repz
nopl
aam
and
out
jecxz
data16
push
icebp
add
adc
imul
jno
call
je
rcll
mov
adc
std
dec
inc
and
nop
ret
mov
fildll
cli
jg
jbe
cli
lds
jnp
les
xchg
push
sbb
fwait
sbb
jb
aad
lods
push
dec
out
hlt
jecxz
in
int
adc
sti
jo
adc
xchg
ror
out
pusha
insl
cwtl
fidivrl
testl
or
mov
in
cmpsl
xchg
imul
pop
mov
xor
pop
insl
sub
cmp
hlt
in
cltd
mov
fwait
jmp
ss
push
pushf
cmc
fsubs
in
dec
popa
popf
dec
icebp
fnstcw
or
xchg
cmp
icebp
scas
leave
ljmp
cli
jae
jbe
xor
sub
and
add
mov
push
push
xlat
fistpl
aad
icebp
cmovl
xor
adc
stc
js
or
inc
sub
clc
push
lahf
sub
mov
mov
out
jbe
dec
xchg
in
stos
mov
dec
dec
inc
dec
xor
mov
push
inc
stc
in
imull
jb
inc
jge
sub
mov
or
hlt
loop
inc
sub
xchg
loope
fs
mov
xchg
push
aam
cmpsb
daa
mov
or
dec
dec
xor
sbb
jl
pop
jnp
lahf
movsb
cmpsl
lea
sbb
cmp
or
mov
iret
sbb
jno
mov
or
pop
sahf
out
jb
pushf
sub
pop
add
mov
cld
call
push
daa
dec
or
jge
insl
xchg
leave
jle
ret
flds
inc
neg
icebp
add
dec
and
enter
jae
xchg
push
sbb
xchg
and
imul
sub
pop
aam
ds
ss
dec
ja
cmc
mov
adc
and
je
enter
sarb
mov
sbbl
sti
int3
push
mov
xchg
add
testl
mov
adc
dec
push
in
jle
outsl
sbb
fadds
jb
sub
iret
sbbb
push
lods
pop
adc
in
mov
sbb
pop
pop
stos
jecxz
dec
insb
mov
lret
and
mov
mov
jbe
int3
cmp
xchg
ret
fistpll
and
popf
insb
sbb
sub
cmp
jge
enter
push
icebp
movsb
in
cwtl
cmc
and
jae
inc
cwtl
push
pop
xor
dec
jmp
repz
pushf
lds
or
inc
lods
inc
push
mov
mov
xchg
jae
test
mov
xchg
dec
push
add
add
aaa
push
cmp
push
and
aas
notb
xchg
test
insb
or
es
mov
scas
mov
fnstenv
adc
pop
push
inc
test
mov
subl
cmp
inc
mov
push
arpl
jmp
xchg
mov
pop
decb
or
dec
mov
or
cli
loopne
dec
inc
repz
jae
and
pop
jo
jne
imul
sub
icebp
pop
mov
mov
iret
imul
add
mov
sahf
mov
mov
pop
aaa
scas
pop
ret
jbe
pop
sub
add
xor
scas
lds
nop
inc
aas
add
ret
push
aad
int3
test
ljmp
mov
xchg
sbb
les
faddl
lock
lahf
sbb
or
je
add
push
rcrl
mov
int
pop
out
push
sbb
dec
jno
lea
push
sahf
rorb
test
xchg
cs
test
and
xor
adc
inc
lcall
pop
mov
mov
fwait
das
arpl
xchg
inc
js
lret
fistl
and
movsl
xor
ljmp
xchg
addr16
adc
adc
test
or
lea
jnp
xchg
ss
inc
lret
push
mov
jle
mov
mov
rclb
inc
stos
and
mov
ret
cmp
sub
mov
inc
popa
inc
add
shrb
and
and
and
jg
add
push
ficompl
dec
mov
mov
pop
push
and
sub
loopne
mov
xor
inc
in
cmp
scas
push
fcompl
test
gs
inc
subb
lds
sbb
lcall
mov
pop
das
movsl
sbb
jle
call
jbe
dec
inc
lahf
sahf
add
jmp
int3
push
mov
out
dec
inc
mov
nop
cltd
xadd
test
mov
push
pop
add
lea
sbb
dec
push
xor
and
adc
mov
cmp
psadbw
iret
push
loop
in
ja
sbb
jb
in
rsqrtps
jp
cmpsb
cmp
xor
cmp
mov
pop
mov
mov
mov
or
pop
jmp
loope
jp
popa
clc
jbe
mov
icebp
jne
pop
sbb
cld
mov
outsl
jno
mov
inc
leave
and
jbe
mov
dec
repnz
cmp
inc
je
ljmp
push
fstpl
pop
lcall
sub
insb
aam
test
xchg
insb
ret
shlb
dec
xchg
sub
push
test
jmp
cwtl
fwait
dec
push
mov
shl
repz
xor
sahf
aam
xchg
cmpsb
out
xchg
mov
cmc
cs
cmpsl
inc
lods
xchg
loope
mov
popf
jo
or
dec
sub
pop
aaa
dec
fs
xor
push
in
adc
xor
stos
stos
sbb
lcall
dec
push
xor
xchg
jecxz
mov
push
dec
inc
and
rep
leave
cmpsb
in
movsb
jno
fcoms
inc
or
ret
movsb
std
or
cmp
mov
stc
adc
test
xchg
mov
sub
inc
cmp
xchg
pop
sbb
inc
sub
cmp
sahf
xchg
push
dec
ret
sub
std
jnp
rcrl
inc
mov
adc
mov
ds
fdivl
add
test
in
jbe
inc
push
mov
cld
cmp
icebp
sbb
xchg
hlt
test
cmp
push
rcll
jmp
xchg
sub
sahf
add
bound
add
clc
cmpb
inc
xor
cltd
or
jbe
nop
pushf
lods
add
mov
lret
mov
roll
lods
and
bound
pop
sbb
cmp
fcmovnbe
inc
mov
adc
push
jb
mov
adc
pop
jmp
loopne
dec
inc
and
xor
hlt
pushf
pop
lcall
dec
jae
iret
cmpsb
fcmovne
push
aaa
in
cld
mov
rolb
int3
loopne
jmp
repnz
jge
or
pop
add
iret
mov
adc
xchg
mov
or
inc
fbld
fld
stos
jle
dec
mov
cli
addr16
xchg
pusha
mov
mov
xor
mov
out
jge
mov
cmp
dec
das
das
icebp
xchg
add
mov
inc
movsl
rolb
mov
cltd
movsl
xchg
push
add
pop
jge
repnz
je
movsl
clc
pop
cmpsb
push
dec
cmp
orb
lock
push
in
dec
cs
nopl
push
mov
mov
mov
sbb
mov
dec
outsl
xor
call
dec
mov
dec
pusha
leave
mov
cmp
and
loop
and
sbb
cmpsl
sti
jge
adc
repnz
jno
cwtl
loop
lods
sarb
mov
js
sub
fildll
add
scas
or
dec
stos
imulb
in
int
xor
add
push
lock
lcall
popa
sbb
cmp
fisttpl
pop
xor
cld
dec
lods
jb
push
sub
out
jge
loop
cmpsb
lret
lock
cmpb
rcll
xchg
inc
and
sti
jp
gs
test
test
test
je
aaa
repz
sbb
jmp
push
loopne
movsl
cmp
negl
push
cmp
add
rcrb
cmpl
shrb
jg
mov
adc
xor
movb
enter
xor
jo
das
das
adc
pop
and
pop
mov
pop
lock
mov
push
inc
sub
divl
ja
pop
in
mov
arpl
mov
inc
xchg
cmp
jle
pusha
popf
add
add
mov
mov
lcall
xchg
bound
daa
sub
adc
aaa
mov
add
cmp
int3
sbb
jmp
cmp
out
xchg
test
cmpsl
fwait
cmp
add
xchg
lret
lret
ds
out
jge
lds
jg
add
cmc
inc
push
or
xchg
mov
loopne
pop
inc
sbb
adc
or
out
or
insb
scas
cs
xor
int3
sub
stc
adc
movsl
ss
popf
cld
test
sbb
mov
shlb
jb
repnz
loope
jg
mov
mov
shrl
outsb
mov
fmulp
mov
mov
mov
sbb
cmp
cmpsb
cmp
xchg
insb
fwait
int3
in
test
dec
mov
or
xor
push
imul
xchg
pop
mov
jno
ficoml
or
in
xor
adc
cmpb
sbb
lods
lret
pop
dec
enter
add
push
push
xchg
into
bound
leave
fildl
xchg
push
mov
fidivl
mov
imul
je
mov
cmp
arpl
aas
popa
decl
push
scas
insb
sbb
arpl
in
cmp
ret
test
shll
jge
push
cli
push
hlt
mov
jne
js
inc
popf
xchg
cld
dec
cmp
pop
xlat
ja
in
mov
lret
add
fidivrs
lock
dec
pop
lahf
sub
inc
and
sarb
or
xchg
sahf
mov
mov
and
and
cwtl
sbb
lods
out
pop
sarl
xor
mov
lahf
jo
push
rclb
fidivs
jbe
lock
hlt
pop
push
jmp
fimuls
jge
adc
pop
lock
pusha
or
stos
mov
jnp
xor
pop
xchg
js
jb
out
adc
xor
xchg
ret
lahf
sbb
xor
or
test
inc
push
dec
sub
movsb
sub
ficoms
out
sub
stos
mov
shrl
push
cs
and
jbe
mov
cmc
cmpsl
jmp
or
push
mov
ds
jecxz
loope
jae
mov
mov
or
sub
mov
adc
pop
std
mov
sbb
clc
test
mov
add
test
jg
mov
and
test
cmp
xchg
aam
add
test
cwtl
sub
ret
icebp
cmc
mov
imul
ret
fidivl
push
mov
mov
inc
jp
int3
popf
sbb
popf
pop
lahf
fsts
mov
cmp
aas
mov
add
adc
and
xchg
cmp
xor
test
leave
addr16
add
aas
int
adc
mov
pushf
mov
cmc
stc
xor
pop
xlat
push
mov
sti
loop
adcl
popa
dec
mov
inc
dec
mov
mov
cmpsb
sbb
pop
add
ja
xor
lock
stc
mov
imul
mov
lcall
sub
adc
jnp
fwait
xchg
mov
cmp
mov
je
in
and
rcrl
inc
cmp
call
jmp
sbb
xor
dec
push
lods
xlat
sub
jnp
fs
sub
jg
popa
mov
ss
xchg
jge
test
jecxz
call
insb
jo
push
jne
jns
mov
je
push
lahf
mov
push
out
xchg
js
sti
gs
push
data16
add
test
test
jecxz
hlt
inc
jle
out
sbb
shrd
clc
fsubs
adc
das
int3
push
mov
cli
mov
leave
test
int3
mov
mov
push
lods
dec
jnp
dec
lea
ja
push
cmp
les
insb
jnp
pop
gs
pop
cmp
lock
test
dec
dec
or
lods
add
repz
cmp
add
das
fcoml
inc
fnsave
imul
ds
adc
fsubl
xchg
out
sbb
or
popf
fcmovnbe
cmp
pop
jmp
clc
lahf
stos
sub
mov
inc
lea
dec
jnp
clc
lahf
jp
push
and
push
lea
dec
iret
mov
in
push
fabs
and
push
pop
pop
mov
fs
jmp
sub
andl
repnz
movsb
fistpll
pop
mov
lods
repnz
jo
out
fxch
adc
sbbb
xor
mov
lahf
adc
mov
mov
xor
sub
jae
sbb
mov
loope
or
js
pop
aam
add
jg
cs
xorb
mov
je
dec
popa
mov
push
cltd
in
iret
mov
sti
daa
sarb
faddl
dec
mov
leave
pop
or
dec
jbe
mov
aaa
std
push
jmp
jns
push
lcall
call
dec
mov
repz
pop
pushf
and
sub
jecxz
lret
cli
jb
ja
pop
inc
scas
dec
cmpsl
test
dec
loopne
push
fstl
mov
xchg
or
les
mov
test
stos
inc
into
mov
leave
add
push
fcomps
shrl
lahf
jmp
inc
insb
or
adc
jmp
and
inc
pop
adc
xor
cmp
mov
mov
fldl
or
out
mov
mov
xor
es
xchg
add
mov
adc
imul
dec
jns
repnz
out
das
dec
shl
sub
das
je
cmp
dec
outsl
push
and
mov
lcall
dec
pop
lea
std
mov
lret
sbb
sbb
pop
inc
xorl
insl
rcr
mov
je
add
loopne
mov
ss
dec
mov
sbb
outsb
mov
fisubrl
inc
pop
cwtl
jb
hlt
mov
add
cltd
inc
or
xor
aaa
pop
jo
or
jb
daa
call
mov
and
push
les
add
mov
jp
mov
xor
jle
jecxz
insb
xchg
loope
mov
popf
adc
sub
repnz
outsb
test
lods
xchg
mov
jae
aaa
fsts
jmp
pop
lahf
gs
xchg
into
fcomps
sbb
fistpl
mov
pop
jmp
outsl
icebp
aad
xlat
into
mov
push
jno
xchg
dec
mov
or
mov
xor
adc
sbb
fiaddl
aad
imul
test
fucomp
fs
stos
and
test
insb
inc
loope
and
rcll
ss
mov
cmp
rorl
mov
cltd
pop
xchg
adc
aad
shlb
rcr
sbb
addr16
xor
movsb
xchg
testl
movsl
pop
push
dec
cmp
in
fimuls
std
mov
cmp
jnp
hlt
shll
xchg
pop
xor
imul
xorl
mov
addr16
fiaddl
inc
ljmp
xor
outsl
movsl
sub
insb
mov
inc
pop
lods
xor
rcrb
divb
mov
jp
inc
stos
add
int3
lds
int3
pop
xor
or
mov
ss
add
out
in
pop
lret
call
sbb
cwtl
xor
cmc
cltd
dec
stc
adc
pop
stos
divw
jmp
arpl
rcrl
add
sbb
xchg
add
inc
pop
daa
icebp
xor
mov
mov
aaa
into
mov
pushf
fisttpll
xchg
cmpsl
hlt
mov
inc
mov
dec
sub
mov
mov
cmp
xor
fisttpll
popa
shl
jnp
fsts
xlat
pop
sbb
xor
icebp
enter
pop
jmp
sti
xchg
insb
push
fdivl
lahf
in
shll
cwtl
mov
testl
cs
sarl
inc
outsb
repz
decb
cmpsl
xchg
movsl
sbbb
jecxz
lcall
fcoms
ds
xlat
adc
mov
xchg
fs
sub
adc
sub
clc
or
jmp
pop
add
insl
stos
push
lret
shll
shll
cld
cmp
pop
test
push
mov
stc
sti
out
mov
rolb
pop
gs
test
arpl
fucomp
dec
push
add
fisubl
pop
jns
cmc
pop
inc
ja
les
mov
mov
push
js
sahf
cltd
orb
sub
icebp
daa
stc
outsl
inc
fnstsw
inc
sbb
push
or
loope
dec
pushl
mov
or
cmp
sub
fstpl
and
shrb
fmull
cmpsl
xchg
lahf
pop
shlb
pop
ret
adc
pop
test
sub
xchg
out
mov
ja
cli
and
mov
push
jmp
enter
iret
mov
jge
cmp
and
and
or
daa
flds
pop
sbb
dec
cmp
dec
add
les
ja
test
lods
lds
cmp
adc
lret
cmp
sbb
mull
icebp
jnp
dec
mov
pushf
jo
sbb
mov
push
lret
mov
iret
jo
cwtl
add
inc
dec
sbb
push
movsl
out
sbb
xor
sub
xor
lret
mov
inc
outsb
jae
mov
cmp
andl
cwtl
xor
sbb
xor
add
sbb
in
jne
popa
fiaddl
mov
push
add
xchg
add
dec
jg
cwtl
mov
or
sbb
mov
mov
loopne
jecxz
mov
push
jl
fwait
inc
push
adc
mov
xor
std
push
inc
add
sbb
dec
fldl
jl
push
jge
adcl
mov
call
gs
sahf
xchg
rcr
mov
fbld
stos
addr16
jecxz
jne
test
and
in
inc
into
adc
stos
dec
push
cs
stos
and
add
jbe
fwait
push
push
cmp
xor
and
dec
push
addb
mov
inc
lds
mov
mov
mov
add
lods
aad
das
inc
cld
or
les
es
out
out
dec
hlt
pop
fcom
dec
cwtl
push
das
cwtl
mov
adc
cmpsb
or
mov
xlat
mov
movsl
push
mov
mov
lea
ljmp
sub
dec
jecxz
les
lods
mov
ret
fstpl
pusha
clc
xor
jae
sbb
push
xchg
int3
test
xor
out
jmp
call
xor
mov
ds
icebp
les
xorb
fwait
sbb
out
xchg
push
push
pop
dec
pop
into
fistpl
lds
imul
in
sti
mov
das
test
sbb
lahf
dec
xor
mov
adc
icebp
push
or
xchg
std
add
push
push
add
jns
xchg
xor
les
andl
or
inc
xchg
pop
cmp
xchg
and
mov
add
popa
movsl
sub
adc
and
dec
movsb
testb
insb
out
dec
lods
pop
inc
or
push
into
push
sahf
and
mov
xchg
in
in
inc
mov
lret
imul
fstps
or
scas
push
and
jp
dec
push
pop
push
xor
jnp
xorb
imul
cli
ret
add
jo
dec
lods
pusha
insl
mov
mov
bswap
mov
jmp
fbstp
js
mov
pop
faddp
dec
loopne
fildll
sbb
bswap
inc
pop
rcrb
push
xchg
inc
adc
into
mov
mov
jl
mov
out
outsb
dec
stc
dec
pop
push
or
jg
test
cmp
adc
cmp
pushf
sbb
push
bound
xchg
mov
pop
scas
dec
jmp
imul
jo
repz
xchg
cmpsl
cs
stos
pop
cmpsb
fisubrs
lret
int3
dec
cltd
in
inc
pop
leave
insb
push
inc
jno
mov
lret
lea
daa
es
fnstsw
cmp
dec
stos
dec
dec
pushf
enter
leave
xor
xchg
pcmpgtb
inc
test
push
lahf
fdivr
arpl
into
jl
std
xorl
dec
push
call
into
ret
dec
xor
sbb
and
mov
pop
sub
outsl
aad
daa
test
xchg
out
lock
xor
sub
fbld
icebp
adc
sahf
shll
xchg
mov
loop
leave
push
and
cmovb
sbb
gs
xchg
je
mov
push
dec
cmp
mov
jle,pn
pushf
movsb
subb
mov
and
mov
cs
sub
outsb
insb
mov
and
andb
xor
xchg
mov
lds
jbe
imul
pusha
popf
pop
mov
mov
lret
inc
stc
sbb
sarl
or
push
call
je
cmp
cli
cmp
inc
out
pop
gs
mov
mov
roll
lods
fnstcw
cmp
adc
xchg
or
cmpb
pop
sbb
rol
xchg
pushf
testl
imul
sahf
mov
les
pop
jbe
pop
mov
adcb
xor
stos
hlt
sub
inc
out
xchg
dec
arpl
sbb
mov
rorl
jg
dec
jns
push
sub
iret
ret
cmp
dec
out
jns
mov
dec
daa
insl
out
add
dec
push
lods
mov
scas
mov
xchg
adc
pop
les
pop
cmpsb
or
jg
pushf
mov
mov
cmpsl
push
ljmp
jno
xchg
inc
jae
dec
sub
sub
xchg
sbb
xchg
push
aas
sub
push
and
mov
jae
cld
lret
out
int3
popa
or
mov
mov
jns
push
lods
adc
jo
or
xchg
rclb
adc
loop
push
push
cmp
xchg
fstpt
lcall
inc
pushf
je
into
add
cmp
mov
inc
pop
adc
subl
fwait
jmp
dec
mov
mov
push
push
inc
xchg
mov
mov
dec
pop
cmpsb
stc
sub
call
and
insb
mov
loop
jae
push
xchg
push
in
mov
rclb
mov
push
xchg
iret
adc
jo
enter
or
shlb
rcrb
sti
xor
cwtl
fwait
xlat
mov
js
jp
fisttps
adc
pusha
enter
loope
mov
dec
shlb
jno
lods
inc
aaa
jnp
dec
cmpsl
mov
push
xchg
mov
aaa
fiadds
push
mov
fiaddl
addr16
es
andl
cli
clc
ficoms
out
cs
into
fadds
cs
jmp
xor
xchg
push
xor
mov
scas
ds
scas
jb
fs
stos
popa
aas
mov
push
shl
dec
rclb
stc
test
int
sti
sbb
xor
andb
or
shl
xor
jmp
cmp
and
iret
js
lods
mov
xor
jno
in
add
shlb
lcall
mov
cs
sbb
mov
add
lods
clc
outsl
imul
cltd
shlb
insb
stos
push
mov
cs
pushf
fwait
mov
mov
repnz
pop
jb
xchg
fstl
movsb
stos
jmp
lock
fnstcw
sub
aaa
pop
adc
sti
and
mov
mov
fidivrl
ljmp
cltd
orb
and
lds
xchg
jnp
lock
out
lea
fdivrp
cld
or
shrb
les
iret
ljmp
inc
jecxz
lock
je
fiadds
mov
adc
inc
jbe
xchg
lods
adc
orb
pop
lods
or
dec
clc
int
or
push
daa
pop
and
mov
nop
rcrb
jge
adc
jecxz
adc
adc
and
dec
xchg
lds
xor
or
out
mov
int3
cwtl
movsl
dec
enter
mov
xor
dec
mov
mov
jb
popa
and
dec
js
xorl
flds
ficompl
clc
sbbb
xchg
test
inc
roll
lcall
add
xchg
push
add
stos
adc
pop
push
inc
xchg
adc
and
mov
std
pop
xchg
cmp
std
dec
fwait
jb
aas
call
dec
cmp
mov
inc
iret
arpl
xlat
into
das
ljmp
mov
sti
pushl
jmp
addr16
pop
das
pushf
outsb
push
lahf
fiadds
jbe
repnz
mov
fcom
aaa
rcl
mov
push
fwait
sbb
icebp
clc
jle
jge
push
rcll
adc
pushf
xchg
nop
fnstcw
jle
sbb
inc
rclb
mov
dec
jge
in
dec
es
les
nop
dec
stos
out
cli
add
push
adc
popf
out
jp
and
outsl
add
lods
dec
xrelease
out
test
sbb
adc
pop
mov
stos
mov
xchg
fidivs
jmp
or
shrb
ja
or
enter
xchg
push
js
pop
mov
mov
cmp
fisttpll
mov
pop
dec
sbb
and
cmp
sub
add
dec
clc
cmp
sub
je
sub
jmp
xchg
daa
or
stc
mov
sub
add
push
jge
enter
sub
sbb
repnz
or
es
mov
fsubrs
sbb
in
add
lcall
lods
xchg
or
dec
sub
pop
xor
jne
lock
clc
jb
push
jecxz
dec
adc
andl
adc
movsb
popa
dec
fistpl
mov
sbb
inc
cmp
cmp
enter
sub
jp
jno
mov
push
push
sarb
xchg
shlb
cmpsb
je
inc
add
mov
shl
pop
and
cmpsb
and
dec
je
pop
jp
push
shr
iret
ja
pop
mov
mov
fldl
pop
mov
aas
imul
das
cmp
inc
jae
adc
dec
fidivl
mov
lods
movsb
mov
inc
adc
iret
mov
loopne
push
rcll
adc
dec
sbb
cs
lds
fldcw
sub
inc
adc
jge
lret
sahf
sti
mov
jmp
sbb
cmpsl
stc
jmp
lea
adc
imul
outsb
sbb
or
sub
cmpsb
jo
and
xor
das
sbb
cmc
fsubr
dec
push
sbb
push
add
xchg
in
enter
mov
mov
jb
mov
mov
lret
cmpsl
mov
xchg
lods
xchg
mov
xchg
xchg
or
cmp
test
inc
mov
pop
sbb
bound
xchg
sar
lods
cmp
fidivrl
out
arpl
scas
mov
xchg
sub
jnp
out
pop
test
and
int3
jns
incb
sarb
xchg
pop
fs
inc
pushf
in
lea
and
cld
xchg
jge
stc
pop
pop
stos
xchg
push
push
or
fistpll
fildll
adc
push
jle
sbb
je
xchg
dec
pop
test
insb
int
mov
mov
mov
inc
std
in
mov
mov
bound
sub
ljmp
enter
lcall
pop
mov
sti
mov
insb
pop
movsl
sti
pop
mov
rcll
sub
adc
sub
jl
push
push
jecxz
add
imul
sub
and
mov
scas
mov
push
jb
pop
daa
add
es
in
stos
or
inc
cmp
xorb
enter
push
adc
and
mov
out
sub
mov
jmp
xchg
adc
mov
stc
movsb
mov
xchg
jo
mov
cmp
test
pop
arpl
insl
pop
adc
loopne
and
inc
xorl
insb
movsl
rorb
repnz
cmp
push
push
adc
loop
xor
adc
add
aas
pop
and
cmp
test
fsts
nop
jp
cli
pop
neg
dec
es
inc
in
test
pushf
cltd
mov
jl
out
dec
enter
pop
movsl
test
fsubl
repnz
push
ss
ss
and
loop
jl
test
stos
sarb
cltd
icebp
jns
mov
js
cmpsb
push
decl
lret
dec
and
or
in
imul
and
sarb
lret
nop
int
fiaddl
xchg
std
mov
push
pusha
cmp
sti
out
xor
jmp
sub
xlat
imull
add
jmp
clc
or
mov
mov
sbb
sbb
aam
sub
into
mov
lods
sub
xchg
lods
push
sub
inc
or
mov
cmp
aaa
ret
pusha
adc
shlb
aas
decl
dec
push
mov
push
fbld
popl
stos
in
sbb
and
mov
push
mov
stos
inc
lret
xor
pop
xchg
lcall
xchg
js
push
out
xchg
testb
movsl
popa
lods
aaa
adc
negl
cmpsb
mov
loopne
sbb
sbb
ficoms
sub
nop
cmpsl
jne
dec
shl
push
sbb
test
pop
add
out
scas
pop
and
mov
jne
mov
mov
sub
loopne
ret
ret
cmp
and
push
pop
mov
mov
pop
scas
repz
in
shlb
or
cld
jb
mov
lcall
in
sub
daa
insl
push
nop
out
jns
inc
fiadds
sub
aad
jp,pn
shlb
loop
and
cmp
repz
mov
mov
loope
lret
mov
inc
cmc
loope
mov
roll
jle
sbbb
test
test
mov
dec
or
gs
push
xor
inc
xlat
inc
hlt
fucomi
cmp
push
cmp
aam
push
xchg
adc
repz
aas
mov
inc
decb
mov
add
mov
jecxz
and
aaa
pusha
hlt
push
aad
xor
sbb
mov
lcall
ret
pop
inc
rcrl
insb
xchg
mov
pop
pushf
sbb
mov
popf
or
sub
test
rcrl
sub
cmpsl
aam
xchg
push
dec
mov
test
aas
jge
popf
push
call
rep
bnd
scas
jge
scas
xchg
mov
jecxz
push
roll
andl
insb
xor
push
dec
cmpsl
cmp
inc
in
lcall
test
jecxz
or
pushf
or
lods
pop
or
jl
ja
pusha
xchg
test
push
ja
ds
leave
inc
push
push
cmp
outsl
ret
inc
pop
sbb
xchg
jmp
outsb
cmp
and
and
inc
aam
xlat
or
adc
adc
jg
dec
push
sbb
bnd
sbb
aas
orb
cltd
jp
inc
loopne
mov
ret
xor
mov
or
cmpsl
ret
jno
mov
sub
cmpsb
dec
sbb
jb
jge
push
fwait
cld
repnz
out
test
dec
cmc
push
cli
int
clc
add
mov
popf
or
mov
xchg
cmp
adc
or
mov
call
xchg
sbb
dec
mov
arpl
js
mov
ret
imul
xor
add
lea
pop
mov
pop
or
sahf
sahf
add
orl
ret
outsb
mov
mov
add
or
and
pop
ds
int3
aam
ds
or
jno
adcb
addr16
sbb
adc
add
ficomps
adc
imul
mov
sub
mov
rclb
cmp
icebp
push
cmp
pushf
shrb
cli
jge
xor
test
mov
cmp
mov
cs
ja
sub
push
dec
cltd
pusha
mov
out
imul
and
fwait
cltd
ret
cld
ljmp
xor
lods
inc
sub
or
js
xchg
sbb
in
aad
ret
sub
jmp
cmpl
ja
in
dec
mov
xchg
movsb
push
or
jo
sbb
mov
jb
cmp
or
jmp
mov
adc
pop
pop
ds
fcmovne
out
fimull
jecxz
push
xlat
cmc
paddsb
push
es
aam
pop
popa
scas
test
jae
mov
xchg
sahf
cld
cmp
push
dec
and
inc
jle
jmp
pushf
mov
xor
xchg
cmp
xchg
mov
jle
in
mov
fisubrl
loopne
popa
enter
leave
sbbl
lds
addb
mov
cmp
sbb
mov
roll
push
xor
sbb
xchg
movsb
lret
inc
add
addr16
xchg
push
insl
scas
sub
lcall
add
imul
rcr
movsl
add
ret
ss
mov
pop
sub
andb
inc
dec
pop
lret
jge
jno
jge
pop
sub
dec
dec
lock
ss
imul
jle
inc
mov
or
adc
push
outsl
je
fistl
sarb
sbb
push
aad
sub
sahf
cmp
in
popa
test
sarl
inc
mov
mov
pop
aad
test
out
cmp
arpl
jp
mov
and
outsl
jmp
faddp
xchg
push
xchg
popa
in
clc
mov
mov
rclb
ror
lea
test
and
cmpsl
add
jge
in
or
sub
mov
popa
mov
popf
xor
jne
popf
pop
jbe
lods
jl
ja
xor
loop
mov
in
mov
ds
loope
jg
lods
js
test
ss
lret
or
fnstcw
push
aad
ffree
loopne
mov
lea
jmp
push
dec
cmc
push
out
lock
sub
jns
inc
outsl
or
dec
pop
adc
scas
mov
imul
fbld
mov
repnz
mov
xlat
jns
mov
or
pop
aad
repz
sahf
test
std
sub
pop
into
mov
data16
rorl
mov
lahf
jnp
outsb
xor
arpl
orl
lcall
mov
lret
mov
out
mov
sub
push
and
xor
shll
push
pop
add
fsubl
inc
pop
mov
inc
fildl
ror
into
das
cmpl
fdivr
xchg
push
iret
dec
rorb
mov
in
in
leave
jge
and
sbb
cmp
out
test
push
movsb
jge
and
sub
mov
adcl
std
fadd
jbe
add
jmp
les
add
or
aaa
repz
jno
js
and
lods
jnp
xchg
mov
mov
mov
add
out
xchg
adc
cmp
faddl
xchg
or
cmp
fcompl
jb
fsubr
in
popa
mov
out
push
cli
pop
mov
xlat
add
xchg
push
xchg
in
push
test
cwtl
or
sub
test
cmpsl
xor
cmp
out
pop
fs
out
cmp
mov
iret
lahf
iret
mov
and
lret
pop
in
mov
cmpw
mov
inc
jo
in
sarb
push
mov
test
mov
sub
and
shlb
jg
cmpsl
or
pushf
sti
hlt
add
roll
test
pop
outsl
sbb
ja
das
lods
xlat
or
dec
repnz
dec
jl
xor
lcallw
inc
inc
dec
mov
stos
arpl
sub
stos
xchg
push
xchg
fst
popf
js
outsb
jmp
mov
mov
and
nop
outsb
dec
jg
cld
dec
mov
lods
pop
pop
mov
push
push
test
cmp
mov
push
sarb
lret
pop
ret
adc
sbbl
aad
outsb
out
in
mov
cltd
inc
lock
loopne
mov
out
cmpsb
divb
fsub
sbb
push
cld
fnstenv
test
sbbl
aas
neg
adc
stos
jo
fs
out
push
int
test
inc
out
jmp
pop
dec
push
decl
inc
bound
imul
call
push
xor
pusha
pop
shrl
pop
adc
hlt
daa
push
dec
push
test
push
add
frstor
insb
push
jne
cmpsl
inc
aas
icebp
cmp
lea
movsl
sub
mov
js
jae
sarl
or
loopne
xor
xchg
inc
or
ficoms
jp
pop
ret
inc
fwait
or
aaa
dec
std
sbb
clc
addb
add
insb
inc
test
push
cld
ret
jae
jg
mov
jecxz
sbb
outsb
mov
cmp
bound
les
cmp
adc
jns
xor
out
leave
pusha
lret
and
inc
jmp
pusha
sub
ljmp
mov
cmc
mov
aad
sub
pop
push
sti
out
jnp
mov
cmpsl
lock
mov
adc
ret
adc
xor
add
faddp
xor
mov
loop
loope
ret
sub
cltd
loope
imul
jge
cli
push
in
cmp
xor
sahf
enter
or
inc
movsb
out
mov
stc
into
in
adc
and
xchg
inc
push
gs
out
xlat
pop
iret
mov
out
pop
scas
loop
iret
out
push
call
pop
sti
jno
cld
cmp
lahf
jmp
or
push
arpl
je
sbb
sarl
cmp
push
jnp
stos
lret
inc
adc
jle
and
xlat
fnstcw
push
inc
push
jo
inc
out
xchg
push
std
or
fsts
pop
add
faddl
loope
fs
or
xchg
adc
xchg
cmp
mov
cmp
int
imul
sbb
test
pushf
xor
xor
testb
or
xchg
insl
jle
mov
in
adc
rcr
out
cmpsb
dec
outsb
ret
jg
adc
ret
gs
int3
rcrb
push
rol
cltd
rorb
push
rol
dec
adc
xchg
fwait
shlb
arpl
sbb
push
mov
push
push
call
out
aaa
inc
cmc
shl
mulb
dec
insl
xchg
pop
inc
mov
xor
daa
sub
out
lods
adc
mov
xor
mov
aaa
ss
pusha
sbb
leave
mov
sti
push
add
lods
pop
divps
dec
inc
outsl
mov
pop
push
ss
cmpsb
xor
mov
aaa
push
cmp
and
stos
cmc
cmp
or
out
movsl
in
testl
or
pop
inc
sub
stos
xchg
or
cmp
cmp
addr16
mov
push
xchg
hlt
int
data16
dec
inc
push
in
fildll
insb
fwait
add
clc
or
fbld
push
insl
stos
jle
adc
in
ja
push
rolb
cmp
outsb
dec
jns
mov
pusha
cltd
and
movsl
push
sbb
ja
psllq
push
cmp
mov
xchg
pop
int
and
js
ficoms
test
pop
jne
xchg
push
add
std
addr16
jl
push
sahf
stos
iret
jp
loope
nop
cld
xor
icebp
in
xor
cmp
mov
fwait
or
out
mov
mov
mov
test
orb
subb
xor
cmc
push
nopl
stc
sub
jecxz
sahf
jl
mov
adc
sub
shll
add
xor
push
add
movsb
fsts
cmp
ss
mov
jg
xor
lea
loope
into
sub
jae
gs
and
jl
aad
dec
bound
sbb
mov
jb
rorl
cmp
repz
lret
fsubrs
and
mov
sbb
xchg
add
das
pop
popl
jo
fisubrl
sub
cwtl
mov
push
mov
xlat
dec
cwtl
hlt
inc
inc
and
fs
mov
notb
pop
cmp
xchg
push
shlb
fwait
ret
rclb
cwtl
pop
push
dec
xor
pop
sub
std
dec
add
mov
jg
lea
out
iret
add
imul
mov
jne
jns
cld
fsub
sub
push
dec
jae
mov
cmp
ja
push
inc
loop
mov
and
int
into
sub
lds
inc
scas
dec
xlat
pop
push
cmp
into
dec
mov
adc
push
pop
dec
or
lahf
sub
pop
dec
and
jbe
or
in
adc
std
sbbb
pusha
sbb
lds
scas
pop
nop
cmp
stos
inc
mov
fisttpll
push
gs
test
fisubrs
inc
xor
mov
inc
sbb
sbb
mov
pop
jae
addr16
sbb
sub
mov
xchg
mov
lret
mov
arpl
cmp
sbb
lods
inc
push
xor
dec
inc
and
pop
ja
pop
xchg
fstpl
sti
idivb
mov
pop
inc
int
add
int3
inc
js
push
mov
fdivr
clc
std
mov
push
es
sub
scas
test
adc
jle
shlb
movnti
jmp
or
mov
popf
ljmp
and
mov
pusha
cmp
ret
mov
mov
arpl
inc
aaa
ret
loopne
inc
dec
ja
repnz
jo,pt
mov
sub
mov
mov
push
jp
sub
shr
cli
jecxz
add
mov
mov
call
pop
lahf
std
fmuls
sbb
jge
mov
pusha
jno
fincstp
cmp
cmp
sub
or
ret
imul
sbb
test
lahf
js
lods
push
movsb
int3
lock
popf
cmpsl
lcall
dec
cmp
shl
adc
adc
nop
push
addr16
lods
ffreep
dec
dec
cmp
jno
aad
push
aaa
or
insl
xchg
push
mov
xor
mov
aad
insl
sbb
xlat
adc
mov
push
add
into
cmp
lcall
jge
andb
add
aad
out
or
mov
std
rcrb
lcall
mov
repnz
lock
sub
xor
testb
cltd
mov
dec
test
pop
js
adcb
in
mov
mov
mov
clc
fisubrs
sub
cmpsb
cwtl
dec
sub
jbe
movsb
jb
ljmp
push
dec
sub
or
xchg
mov
push
dec
dec
mov
arpl
pop
mov
dec
pcmpgtw
xchg
call
pop
nop
push
mov
rolw
push
test
and
xchg
mov
test
aaa
jne
sub
pushf
jbe
loop
test
xor
cwtl
mov
push
ja
sub
aaa
adc
test
sbb
ds
adc
or
jns
mov
and
push
mov
and
xorb
xchg
ficomps
mov
lcall
mov
sub
out
imul
and
fnstsw
les
cmp
cli
ss
pop
or
push
mov
sub
stos
loop
test
sbb
xor
xor
xor
ss
ljmp
cmp
loopne
test
arpl
xor
sbb
xchg
xor
jno
sahf
sbb
dec
pusha
inc
in
aad
or
sub
sbb
repz
ja
popfw
sub
inc
fimull
mov
in
mov
cli
mov
mov
loopne
inc
pop
lret
dec
or
xor
js
cltd
hlt
mov
popa
popf
push
jno
popa
hlt
outsl
pop
ret
mov
les
repz
lahf
fiaddl
xor
add
movl
test
fisttpl
cmp
pop
add
pop
cmp
push
pusha
xchg
pop
shll
push
mov
out
push
imul
fdivrs
jbe
aam
xor
and
jnp
jns
jnp
and
leave
jbe
mov
hlt
insl
mov
xchg
pop
pop
or
outsl
pop
cwtl
lcall
pop
sti
adc
pop
repz
fildl
pop
jbe
inc
ror
push
insb
cwtl
mov
mov
dec
mov
jle
xor
leave
add
sub
stos
sub
shl
rcl
add
test
shlb
cmp
inc
iret
scas
fmul
inc
mov
ret
and
leave
ss
fisttpl
inc
inc
mov
ret
fnstcw
mov
pop
mov
outsb
push
int3
hlt
adc
mov
inc
xchg
dec
bound
cmp
in
sbb
pusha
dec
jecxz
mov
cmp
je
out
dec
repnz
and
call
mov
in
lret
or
cmp
imul
inc
xchg
cmp
divb
enter
jl
in
sub
push
aaa
dec
repz
shl
mov
pushf
movsl
testb
inc
out
hlt
je
mov
push
icebp
sti
les
loopne
xchg
cmp
push
sbb
cmpsl
data16
mov
pop
push
sbb
sbb
and
test
pop
cwtl
pop
adc
sbb
imul
jb
ja
or
mov
mov
jo
aam
cli
imul
sub
ss
dec
xor
push
outsl
ds
adc
repnz
leave
andl
or
xchg
bound
lret
inc
mov
cmp
test
dec
cmpsl
mov
jecxz
fwait
mov
jbe
mov
jne
xor
popf
ret
es
sub
ss
or
les
in
xor
mov
xor
and
sub
jo
idivl
dec
xor
mov
dec
jge
mov
mov
roll
sarl
sbb
insl
jb
sbb
dec
icebp
maskmovq
testl
popf
aad
mov
push
in
jmp
cmp
and
pusha
adc
cmp
xchg
fisubs
dec
pop
cmpsl
inc
push
inc
inc
fiadds
arpl
int3
push
pop
fsub
insb
cmc
sbb
add
repnz
movsl
mov
cltd
lods
lods
push
push
push
cld
in
push
inc
iret
xchg
jns
and
pushl
sti
pop
ja
popa
ret
dec
or
cmc
adc
cs
es
leave
out
in
movsl
sahf
cld
filds
leave
jne
push
sbb
mov
xchg
cwtl
in
mov
push
sbb
push
mov
std
add
xor
lods
mov
jo
add
mov
push
fists
clc
sbb
jne
cmp
aam
les
cmp
xor
paddusb
icebp
mov
or
mov
cs
inc
rcrl
ljmp
scas
dec
imul
mov
inc
repz
cltd
jb
test
int
pop
in
jl
dec
mov
or
js
inc
lahf
xchg
adc
push
inc
dec
stc
jbe
imul
jge
out
mov
push
lods
xchg
sarb
sub
or
inc
stc
mov
sbb
testb
mov
mov
adc
jmp
decl
mov
sbb
jl
dec
mov
dec
cmp
addl
or
sub
jle
push
mov
out
push
dec
add
adc
adc
out
inc
ss
add
loopne
test
popf
xchg
inc
adc
pslld
sub
xor
ret
rol
daa
bound
cmp
push
ficoml
push
test
popf
pop
scas
mull
dec
and
mov
aaa
repnz
repnz
mov
mov
ja
jl
pop
das
test
mov
sbb
sub
and
fimuls
mov
mov
dec
push
cmp
or
fwait
add
mov
push
dec
stos
icebp
sub
jl
inc
into
xor
inc
lret
mov
repnz
add
aas
and
shl
lods
in
fldenv
mov
xor
mul
int
lret
enter
loop
inc
ret
mov
movsl
dec
cmp
outsl
mov
shlb
add
or
mov
orl
cs
shr
dec
popf
js
mov
mov
cli
scas
or
outsl
gs
mov
inc
repnz
aas
stc
in
pop
push
push
sub
cmp
inc
in
movsb
xchg
mov
jae
or
ret
das
movsb
mov
push
inc
mov
rorb
jbe
sub
shlb
push
fistpll
test
sub
jno
jo
hlt
and
pop
sbb
in
imul
mov
pop
sti
dec
aas
mov
in
push
xchg
cmp
pusha
jne
sbb
xchg
test
inc
cmc
mov
lods
jmp
daa
fisubrs
sbb
or
jo
scas
gs
sbb
mov
popf
lea
in
push
popa
pop
jno
xor
jnp
and
xlat
ljmp
test
push
or
mov
sub
inc
and
scas
je
mov
ret
insl
outsb
sbb
pop
mov
adc
mov
pop
fsubl
loopne
mov
jmp
lea
xchg
pop
inc
dec
loop
fadds
lcall
dec
push
sbbb
mov
mov
enter
sarl
push
pop
arpl
jl
mov
sbb
aas
mov
xor
sub
pop
int
test
test
orb
sbb
lret
cmp
loopne
add
sub
lods
pop
push
push
pop
pop
push
daa
jns
cld
dec
ret
xchg
fs
push
pop
xor
and
ja
cmpsl
data16
xchg
ficomps
aam
push
inc
in
ret
dec
pop
add
test
push
cltd
dec
cmp
in
or
mov
jp
mov
pop
mov
popf
shlb
cmp
int
ffreep
test
in
adc
xor
mov
add
stos
sahf
mov
inc
in
push
xchg
aas
push
sbb
pop
les
cmpsl
fs
dec
fidivrl
int3
mov
lret
pop
gs
sub
sahf
inc
aas
push
fld
cwtl
mov
jbe
in
les
mov
cmpsl
scas
mov
pop
ss
dec
inc
cmc
sbb
mov
and
lret
push
jo
fstl
mov
aaa
xlat
or
mov
gs
imul
ja
mov
jmp
int3
xchg
stc
xor
jl
sbb
adc
jecxz
insb
xchg
insb
cmp
dec
mov
cld
imul
inc
xchg
inc
ret
sub
lds
mov
fcoml
aaa
mov
repz
out
push
add
mov
add
fwait
pusha
fs
imul
xchg
scas
mulb
inc
add
fistpl
inc
fimuls
cld
lcall
in
add
jge
mov
mov
fprem
fldt
into
inc
cmp
scas
xchg
sub
fsubrl
cmp
xchg
inc
push
into
lds
rclb
int
mov
or
push
push
cmp
std
adc
add
inc
jbe
idivb
popl
cld
cmp
inc
push
int
xor
addl
and
pop
sbb
push
loop
gs
xchg
daa
bound
lahf
cmp
xchg
loopne
cmp
int
shlb
sbb
bound
bound
int
loope
push
sbb
std
mov
dec
inc
xor
mov
sub
test
jmp
mov
pop
add
es
xchg
cmpsl
out
add
fcmovbe
inc
pushf
arpl
pop
jp
xchg
sbb
cmpsl
pop
cmp
bnd
mov
in
push
negb
jnp
ror
lds
and
cmp
test
pop
das
jge
pop
inc
mov
or
lods
pop
into
dec
mov
adc
pop
xor
repnz
in
mov
mov
outsl
aas
mov
pop
addr16
sbb
stos
push
pop
loopne
arpl
jnp
iret
into
jb
out
pop
sti
pushaw
ret
arpl
dec
push
xor
pushf
lret
pop
mov
out
cmp
jg
mov
pop
mov
sub
push
dec
dec
jno
popf
push
pusha
aam
jg
push
add
popa
mov
dec
loopne
jb
xchg
lock
add
adc
or
or
in
adc
pop
arpl
ret
jb
repnz
sub
xchg
sbb
lea
gs
pop
lods
adc
bound
js
add
cmp
adc
and
imul
xchg
jl
mov
ds
lds
and
clc
cmpsl
fwait
dec
or
inc
or
addr16
and
call
and
sahf
xor
mov
wbinvd
jp
fmuls
xor
sbb
jb
mov
repz
inc
mov
inc
and
sub
push
fisubrs
dec
std
test
xor
mov
outsl
cmp
in
call
shll
mov
sub
push
test
xchg
gs
in
frstor
and
pop
sbb
shll
fcmovne
inc
dec
cmp
loope
mov
or
ds
fs
popf
test
jns
inc
mov
mov
stc
xchg
cmp
xor
xor
insb
popf
and
fidivs
nop
negb
jle
int3
js
roll
les
fistpl
xlat
pop
or
xorb
repnz
negb
push
imul
add
and
mov
fildl
mov
lret
pop
sub
hlt
bound
or
fsubrl
or
cltd
aas
popf
mov
pop
getsec
sbb
es
mov
jg
jbe
or
or
fistps
es
and
fwait
jbe
adc
and
mov
shll
addr16
popa
movsb
push
stos
add
hlt
fwait
cmpsl
inc
sti
jne
into
push
sbb
mov
and
xor
cltd
mov
dec
or
jmp
pop
cltd
cmp
outsl
iret
outsb
jmp
call
mov
sti
adc
lret
push
push
pop
aas
dec
sbb
xlat
arpl
icebp
pop
clc
fdivrs
sub
ret
mov
in
sub
mov
push
int
xor
popa
xchg
xor
ds
jl
mov
fnstenv
xlat
gs
sbb
arpl
adc
jp
add
aaa
ret
das
xor
sbb
out
push
aaa
sbb
cli
pop
fs
je
xchg
leave
pop
and
push
sub
adc
jne
in
push
fimull
sahf
test
sub
or
popl
inc
cmp
lahf
add
out
pop
lret
push
mov
adc
lods
repnz
push
and
popf
push
cmp
ret
lahf
inc
mov
movsb
jbe
loop
repz
mov
jmp
xchg
je
fidivrs
xorb
inc
test
pusha
jl
in
shll
mov
out
fdivl
adc
js
mov
arpl
adc
pop
xor
jns
insb
stos
mov
mov
push
or
xchg
cmp
aas
out
dec
pop
cmp
pop
test
rcll
sub
call
and
xchg
fldcw
xorb
fisubs
adc
or
jb
mov
adc
out
cmp
stos
outsb
std
or
scas
dec
addl
das
adc
adc
xchg
mov
in
mov
xchg
xor
push
pop
inc
add
shll
clc
dec
inc
mov
rcr
leave
adc
add
insl
push
sub
or
lcall
inc
mov
or
dec
xchg
inc
cmp
or
pop
dec
call
orl
aas
addr16
mov
add
aaa
cmp
sbb
pop
push
mov
jecxz
push
fwait
jo
mov
and
enter
mov
movsb
cmp
and
insl
out
cli
inc
push
push
stos
push
mov
cmc
aad
fmull
popa
pusha
fmuls
sbb
daa
sub
shlb
and
test
outsb
inc
hlt
aad
sub
mov
cmc
push
mov
subl
fisubs
mov
out
push
lret
jae
stc
adc
dec
or
sbb
cmp
add
cld
and
add
sub
loope
or
mov
sbb
mov
mov
out
jnp
out
and
mov
sbb
adc
dec
mov
rorl
mov
das
pop
dec
jns
insb
xor
cmp
fldcw
dec
sub
and
or
dec
jne
jmp
call
inc
sarb
call
adcl
cmp
dec
in
lock
adc
insb
jb
inc
mov
cmp
sar
call
cmp
mov
call
int
and
cmp
cmp
addr16
push
fs
xchg
sub
or
adc
mov
push
dec
inc
jle
fstl
pop
leave
mov
sbb
jbe
fisubrl
push
add
cli
aas
inc
int
hlt
rorb
mov
xor
lock
sbb
insb
xchg
mov
movsb
sub
jp
int
add
data16
and
jo
scas
push
and
pop
es
pop
push
cmp
cmp
daa
sbb
or
aas
in
jbe
or
pop
dec
pop
mov
cmp
imul
mov
push
outsl
hlt
inc
es
or
inc
mov
sbb
xchg
jmp
pushw
adc
push
pop
dec
inc
aam
ret
cmpsl
sub
add
ret
fbld
js
mov
push
xor
das
shrb
cltd
aam
push
jne
sbb
divb
fbld
adcb
dec
sahf
mov
addr16
push
lea
and
sarl
cmp
push
pop
push
mov
movsl
cld
cmpsb
mov
mov
xchg
jecxz
dec
in
ret
or
mov
int
mov
aad
pop
fstpl
or
jne
lahf
pop
lret
in
clc
adc
mov
add
push
repnz
xlat
push
mov
cltd
or
inc
cmp
dec
push
xcrypt-ofb
cmpsl
scas
rolb
pushf
cli
jge
shl
cmp
push
adc
pusha
xor
xlat
dec
movsb
mov
sbb
subb
and
je
cwtl
filds
sub
lahf
rclb
push
adc
in
scas
ret
fimull
scas
pop
jae
and
test
inc
fstps
mov
add
xor
and
inc
or
pop
xchg
inc
dec
xchg
lret
filds
cmp
out
add
popa
aas
xor
push
arpl
xor
shl
xchg
push
pop
sbb
xchg
daa
push
inc
sub
xchg
mov
cli
cmc
dec
add
leave
inc
sti
cld
xchg
xor
xchg
mov
jnp
stc
orl
adc
pop
mov
test
jnp
hlt
dec
cmpsb
aad
gs
rolb
in
into
push
aam
test
xlat
test
jle
scas
add
add
imul
xchg
jb
mov
jl
lea
test
xchg
pop
pop
lds
cmp
int3
cmp
cmp
filds
xor
or
xchg
push
xchg
pop
in
pop
je
mov
hlt
sub
push
lcall
imul
mov
add
sbb
jo
xlat
or
cmp
jecxz
sahf
push
imul
imul
pop
cmc
sbb
mov
add
mov
mov
loopne
sbbl
or
ja
jno
push
rorl
dec
mov
addr16
sbb
gs
xchg
adc
test
dec
and
inc
inc
cmp
psrlw
mov
leave
xchg
xchg
or
in
inc
adc
pusha
ljmp
sbb
je
clc
repnz
je
xchg
lcall
or
int3
dec
push
hlt
out
lret
mov
and
inc
mov
cmpsb
push
mov
in
mov
aam
push
xor
sbb
popa
sbb
cmpb
push
icebp
dec
push
fidivrl
cmp
sbb
pop
sub
arpl
jge
loope
jns
xlat
rolb
dec
mov
adc
daa
out
pop
adc
jl
std
scas
adc
mov
test
or
stc
loope
lcall
outsl
mov
repnz
xchg
stos
rcll
push
dec
clc
shl
scas
je
loop
jp
prefetch
call
std
xor
mov
cmp
jo,pn
cli
pop
lock
loope
rolb
adc
in
mov
mov
iret
and
add
sarb
xlat
mov
and
mov
aas
cmpsb
pop
push
iret
or
pop
aam
test
test
jp
or
insb
push
push
jo
push
test
shrl
jb
ja
mov
jmp
mov
and
jae
cmp
popa
xchg
lcall
arpl
into
jp
xor
xchg
repz
scas
repz
insb
leave
add
mov
inc
test
sub
jno
cli
pop
cli
dec
dec
xchg
xchg
mov
iret
inc
or
push
arpl
test
fisubl
iret
aas
aaa
sbbl
jns
aas
pop
imul
cmp
mov
dec
pusha
xchg
cmpsb
add
sbb
xchg
std
jno
xor
jno
pop
push
sbb
sub
pop
idivb
icebp
xor
lea
and
test
pop
pop
mov
ret
rcrl
xor
sbb
dec
xchg
push
cli
inc
mov
mov
push
rorb
data16
sarb
push
add
jl
jmp
or
inc
pop
clc
repnz
push
jecxz
int
mov
dec
outsl
inc
jp
les
mov
mov
sub
cmp
push
sbb
cld
xchg
adc
icebp
cmp
cmp
add
and
pushf
std
ljmp
jle
dec
insl
sbb
pop
cld
aaa
jo
jge
or
mov
les
scas
pop
cmp
pop
cli
add
cmp
xchg
xor
pushf
les
std
xchg
pop
aaa
rolb
dec
push
mov
pop
das
adc
mov
jbe
cmpsl
ja
fiadds
dec
test
lret
or
mov
inc
repnz
in
stc
push
pop
adc
aad
lahf
mov
sub
icebp
pop
dec
adc
inc
jnp
jle
popf
je
inc
mov
pop
push
sbb
ds
cmp
stos
adc
xlat
xor
inc
out
mov
sahf
or
mov
subl
nop
imul
iret
movsb
sbb
pop
add
xor
sbb
xor
sbb
loope
cmpsl
adc
pop
inc
mov
mov
lods
inc
test
std
cmc
mov
in
ret
testb
cmpsl
arpl
mov
rcll
push
lret
sahf
jl
adcl
jecxz
mov
cmpsl
dec
push
repz
add
jns
mov
mov
or
cmc
outsl
or
cld
push
rolb
pushf
add
mov
out
cmpsl
mov
or
push
xor
pop
sti
in
push
pushw
mov
xchg
push
cpuid
inc
and
dec
fwait
xchg
aad
adc
inc
and
jno
push
pop
shlb
mov
sbb
xchg
cld
adc
inc
mov
arpl
inc
mov
inc
lds
xchg
popf
lock
aaa
outsb
fistl
adcb
pop
lds
int
push
sbb
ljmp
add
cmp
add
pop
jp
xor
scas
sbb
or
mov
loopne
mov
mov
add
add
insl
in
loopnew
testb
jb
int3
js
shlb
lods
into
pop
and
scas
or
fcomi
inc
in
fidivrs
dec
and
mov
pop
stc
and
add
inc
gs
test
jb
adc
jl
pop
sub
cmp
in
mov
icebp
pop
repnz
jo
mov
push
mov
pop
pop
push
outsb
xor
push
std
adc
push
andl
pop
xchg
faddl
inc
pusha
jecxz
or
in
push
mov
dec
rol
inc
cmpsb
sbb
ja
jb
mov
ljmp
insl
mov
mov
dec
push
sbb
jb
jle
jg
or
sub
sbb
jp
mov
lsl
dec
int
lret
push
imul
mov
fwait
inc
mov
test
cwtl
jmp
xor
out
adcb
cmp
push
adc
cmp
ss
pop
jg
jp
push
adc
in
sbb
inc
ljmp
mov
in
inc
xlat
xchg
cmp
push
test
orb
jg
inc
xor
jecxz
lcall
dec
mov
clc
push
xor
pop
loop
fs
cwtl
ljmp
in
loop
icebp
jnp
xor
push
rcll
add
pop
sbb
push
int
xlat
mov
shll
sbb
movsl
leave
sbb
jle
and
mov
addr16
jle
out
sbb
movsb
xor
pop
jo
jg
jnp
jno
adc
and
stos
cmpsb
jo
jnp
fcmovnu
int
dec
inc
add
ficoms
mov
jbe
or
mov
dec
add
imul
cwtl
xchg
jnp
push
scas
push
sbbl
xchg
xor
loop
arpl
ljmp
xchg
lret
jno
movsb
xor
out
cmp
sbb
and
and
fisubs
int3
xor
ror
mov
mov
sub
outsb
gs
aas
cmc
aad
pop
test
lock
rorb
arpl
movsl
sbb
in
outsl
mov
aaa
aas
dec
movsl
out
xchg
mov
pop
fwait
xchg
data16
pop
jp,pn
mov
and
push
and
lea
xlat
sbb
add
lcall
or
dec
mov
popa
or
lcall
lcall
repnz
or
fisubs
addr16
out
jbe
mov
sbb
xchg
aaa
dec
loope
dec
or
or
add
sbb
xlat
inc
sahf
pop
pop
mov
ret
push
dec
cmc
and
daa
clc
jnp
lret
or
aad
pop
or
movsb
inc
in
lret
mov
inc
ljmp
xchg
stc
test
xchg
ja
data16
jge
xchg
inc
jecxz
cltd
shlb
in
pop
pop
jne
les
sbb
mov
jno
movsl
pop
imul
or
aaa
and
icebp
inc
clc
loope
jmp
xor
mov
movsl
mov
xor
adc
pop
loopne
scas
xorl
sbb
fsubl
xchg
pop
cwtl
mov
jae
pop
pop
lods
sbbl
push
mov
sub
or
add
and
mov
and
sbb
add
ret
sbb
loop
adcb
popa
pop
les
lahf
mov
sbb
xlat
push
xor
filds
dec
push
decb
bound
stc
lahf
add
and
js
test
mov
fwait
outsl
fwait
idivb
fnstsw
jne
xor
int
ja
inc
cmp
mov
jecxz
loopne
aas
jmp
cmp
jecxz
cli
sti
stos
dec
ss
lcall
lcall
push
cmp
cmpsb
push
cmp
mulb
fwait
sbb
adc
outsl
sarb
push
aaa
in
and
les
jno
ss
jnp
push
xor
sahf
dec
inc
inc
cld
sub
xlat
mov
xor
in
ljmp
nop
sbb
into
or
add
lret
fldcw
xor
inc
xor
pop
and
dec
test
mov
cmp
push
jecxz
addr16
push
lds
je
push
mov
data16
imul
scas
scas
xor
mov
add
fs
adc
fwait
xor
inc
ret
test
mov
enter
adc
leave
mov
ret
mov
mov
jmp
inc
outsb
xor
inc
mov
jecxz
push
fxch
add
dec
ss
sub
push
sub
xor
push
push
sub
loopne
pop
push
jmp
mov
data16
je
dec
pushl
push
psubsw
pop
cmp
test
xchg
and
jae
lds
add
and
in
pop
out
loop
jnp
bound
vsubsd
test
cmp
mov
cmc
mov
inc
jle
insb
or
mov
sub
ficoms
sub
cmc
cltd
stc
cmp
xchg
xor
add
sub
inc
push
mov
mov
std
cmp
xor
das
test
clc
jl
dec
and
test
mov
imul
xchg
test
mov
call
dec
mov
pushf
push
loope
ss
push
loope
int3
popa
int3
sbb
push
filds
cmc
mov
jns
add
jo
inc
clc
adc
xor
repnz
lret
testb
mov
lds
imul
xor
mov
fcoml
jg
dec
sbb
inc
jge
push
rclb
test
inc
adc
insb
arpl
and
scas
adc
inc
cmp
lds
out
loopne
mov
ffreep
mov
or
mov
sbb
pop
ret
dec
mov
add
pusha
pop
jmp
std
mov
push
fisubrl
jle
test
sahf
inc
xor
mov
mov
mov
and
inc
subl
adc
adcl
push
and
insl
jbe
outsl
cld
sbb
daa
mov
add
xchg
orb
push
mov
and
dec
add
mov
test
pop
sub
cmp
into
dec
lods
add
cmp
push
xchg
mov
lahf
imul
push
cs
test
adc
sub
jge
pop
inc
mov
idivl
cltd
cmp
jg
xor
scas
dec
push
jbe
daa
out
dec
and
les
scas
inc
aad
jge
dec
fsts
scas
je
out
mov
pushf
incb
cmpsb
int3
lock
mov
aas
mov
push
cmp
or
es
mov
in
mov
leave
fisttps
inc
aas
aam
insl
clc
xorl
bswap
movsb
hlt
movsl
cld
pop
inc
or
pop
clc
rcrb
ljmp
inc
in
rcrb
aam
into
mov
out
aas
cmp
shlb
lret
inc
cld
push
pop
xchg
test
pop
jge
mov
arpl
shr
mov
addb
mov
mov
ret
out
dec
add
cmp
push
imul
mov
cmp
sub
sub
in
jle
shrl
rcll
outsl
dec
out
popa
movsl
lods
pop
roll
jp
mov
out
iret
lret
fimull
cs
mov
sahf
xor
data16
lret
jns
add
dec
xor
adc
jge
or
push
push
jb
mov
xchg
fucomi
cmc
cmc
in
ljmp
jae
mov
daa
fdivl
lods
ja
ja
out
sti
sti
mov
push
leave
mov
dec
mov
lods
cltd
mov
cmpb
call
fistps
inc
inc
stos
pop
mov
push
push
mov
test
adc
outsb
sbb
jge
lret
ss
and
imul
ss
or
mov
mov
loope
lods
mov
sub
mov
push
frstor
lret
insb
jmp
dec
sbb
pop
push
or
stos
in
movsb
adc
cltd
jmp
mov
lahf
popa
jecxz
adc
add
jbe
push
push
fnsave
hlt
mov
out
and
add
movsb
dec
inc
scas
cmp
std
push
mov
negb
clc
fisubrs
shlb
bound
test
jne
cli
pop
lcall
or
inc
mov
xchg
inc
setnp
mov
mov
dec
sbb
lods
inc
fistl
into
dec
push
fs
stos
inc
push
insb
mov
subl
adc
fs
push
adc
pop
inc
xchg
pushl
cli
push
xor
cmp
pop
in
test
xchg
push
mull
js
fiadds
fdivrl
or
push
gs
jp
outsl
repz
xchg
das
popf
roll
or
mov
or
leave
mov
inc
mov
adc
jae
in
enter
test
pop
push
je
jmp
push
mov
jno
inc
lret
pop
pop
cmp
imul
jp
push
push
neg
fwait
and
or
push
test
insl
cmp
clc
push
shr
pop
lret
test
pop
pop
dec
shr
dec
mov
push
loop
cs
repnz
gs
jp
jg
xor
mov
test
jp
test
out
scas
lret
mov
rorb
sub
dec
xor
cmpsb
shrb
xchg
xchg
push
jmp
das
xor
inc
jo
aad
cwtl
insl
jge
ret
pop
dec
outsb
nop
hlt
add
add
adc
and
pop
in
jle
push
push
scas
cmp
das
mov
lcall
inc
add
or
push
int
jne
mov
inc
je
dec
jb
movsb
stos
push
push
xchg
inc
pop
addb
jge
fsub
mov
xchg
inc
scas
sub
cmp
cmovg
and
pop
in
push
daa
push
cltd
imul
scas
sbb
xchg
fistpll
insb
xor
jge
pop
pusha
jb
xchg
fisttpl
insl
jno
ret
pop
insl
sub
jbe
fs
cmp
pop
or
testb
test
adc
jae
cmpl
stc
fnsave
lods
sarb
add
js
adc
sbb
icebp
xor
rcll
push
popf
sahf
iret
pop
and
data16
or
sbb
clc
mov
push
aas
mov
scas
ret
jge
das
aad
sub
jecxz
iret
and
scas
jle
dec
pop
andl
jmp
cltd
jl
das
cmp
jl
sbbb
xchg
inc
nop
stc
scas
mov
daa
movsb
scas
insl
push
das
dec
add
or
lods
and
in
cmp
adc
outsb
push
mov
xchg
adc
bound
fs
mov
pop
cmp
popf
mov
push
xchg
jno
adc
mov
xor
loope
cmpsb
inc
iret
loopne
repz
ret
sbb
pop
inc
jmp
aam
fs
push
pop
daa
xrelease
inc
push
shlb
pop
incl
push
ja
xchg
pop
add
jl
cmpsb
outsl
mov
or
mov
push
rorb
les
ljmp
scas
inc
sub
mov
mov
les
in
adc
mov
fdivrl
popf
loop
aam
stos
push
and
and
lods
mov
in
dec
and
in
ds
pop
mov
test
std
popf
stos
xchg
int
sub
push
out
and
lea
dec
fcomps
rcll
or
test
sbb
enter
pusha
sub
push
les
and
fnstcw
push
gs
cmove
mov
cli
and
aaa
daa
in
ss
xor
cmp
test
dec
je
mov
pop
add
and
movsb
inc
jns
sbb
xor
insb
int
out
cmp
push
add
mov
push
dec
dec
pop
or
pop
mov
mov
adc
jecxz
xchg
sbb
adc
adc
lock
sbb
inc
movsl
or
mov
ret
xor
shll
add
lea
lods
leave
pop
xchg
dec
js
xchg
inc
push
adc
add
adc
stc
sahf
negb
leave
insl
movsb
cmpsl
out
cmc
scas
scas
inc
rorb
pop
add
jmp
sub
xor
jmp
bnd
mov
sbb
mov
shrl
jg
cli
jae
jmp
leave
mov
xchg
arpl
es
insl
push
inc
mov
add
jno
inc
inc
inc
orb
popf
test
lds
scas
stos
sbb
mov
lods
add
test
sbb
inc
movsl
pop
stos
adcl
ret
loop
sub
xor
push
ljmp
in
cltd
mov
cmp
out
cmp
rcrb
call
xchg
popa
lods
imull
cwtl
pop
and
mov
jb
or
pop
mov
cld
push
inc
es
xchg
xor
stos
add
jnp
icebp
adc
push
fidivl
cmpsb
mov
xor
jnp
push
ljmp
or
ffreep
je
out
add
movb
or
mov
mov
lcall
jne
push
push
adc
adc
dec
rcrb
or
data16
or
sarb
ja
push
inc
roll
fwait
std
sub
adc
adc
ljmp
lds
mov
cmp
in
push
je
mov
adc
or
popf
cmp
inc
out
ds
aas
orb
sbb
mov
leave
and
in
inc
js
orb
pusha
movsl
popa
and
cld
in
fs
xor
dec
mov
or
jnp
push
adc
pop
roll
add
adc
loope
ret
or
jo
int3
test
testb
pushf
ja
sahf
jg
push
mov
mov
sar
xchg
xchg
cmp
arpl
loopne
push
pop
out
ss
adc
inc
sub
xchg
in
xchg
push
loope
shll
pop
sub
mov
xor
iret
repz
sub
test
repz
xor
enter
pop
mov
push
pop
mov
hlt
add
mov
xlat
or
inc
or
jp
add
jecxz
rcr
sub
rorl
jl
in
shrl
insl
xor
mov
mov
or
mov
mov
jae
enter
rclb
imul
adc
lods
dec
in
arpl
stc
les
ret
cmp
out
push
pop
cmpsb
mov
sub
pop
jo
sbb
mov
mov
loope
sub
rorl
lods
jle
je
pop
jle
sub
inc
xor
cmp
cmc
in
icebp
inc
xchg
lods
inc
mov
push
jo
fidivs
paddusw
cmpsb
shrb
sub
pop
je
out
scas
and
test
sbb
sbb
push
mov
add
dec
andl
popa
dec
push
cmc
hlt
xrelease
and
add
adc
pusha
sbb
mov
in
jl
cmpsl
fistps
ret
pop
xor
adc
dec
jmp
stc
loopne
pop
sbb
jo
mov
mov
jbe
stc
out
push
push
int3
or
mov
adc
cmp
inc
imul
mov
mov
cmp
push
in
std
dec
and
adc
pop
pushf
jmp
mov
bound
stc
xor
nop
cmp
xchg
mov
lods
popa
push
mov
stos
or
mov
icebp
pop
push
xor
push
test
mov
sub
xchg
pop
and
mov
aad
lcall
insb
mov
mov
into
addr16
pop
stos
mov
adc
pop
cmp
or
mov
ja
mov
fwait
stos
mov
mov
xchg
cwtl
pop
push
mov
testb
jmp
fucomi
adc
mov
or
xchg
das
mov
scas
cmp
mov
or
rcll
out
stc
lahf
pop
sub
cltd
pushl
addr16
jle
bound
jbe
mov
jmp
adc
xchg
jbe
add
mul
ljmp
ud1
inc
lret
inc
lock
shll
fstpt
mov
icebp
pop
inc
test
hlt
arpl
sub
xchg
xor
mov
fwait
dec
jne
sbb
xchg
push
pop
xchg
add
divl
jbe
int
imul
inc
jo
ds
cmc
int3
movups
add
cmc
mov
dec
push
dec
mov
mov
add
fildl
je
lock
inc
xor
jp
add
dec
dec
push
mov
repnz
loop
cs
dec
ret
mov
push
icebp
pop
pop
mov
cwtl
movsl
sub
add
je
push
in
es
roll
repnz
andb
jecxz
xchg
shr
mov
mov
adc
js
dec
cmp
aad
add
sub
adc
push
cmp
pop
std
aaa
cmp
jp
dec
mov
cmp
decl
cld
lret
dec
mov
mov
push
lods
sarl
pop
xchg
adc
inc
push
xor
cli
rcl
jnp
pop
les
push
imull
arpl
movhps
or
gs
int3
popa
push
ss
cmc
add
out
inc
mov
in
xor
push
jnp
andl
jg
jae
insl
cmpl
push
imul
jbe,pt
loop
repnz
jns
sbb
aaa
fidivrs
mov
xor
add
lock
pusha
fs
in
xor
jae
insb
sbb
mov
rolb
add
sbb
add
das
sbb
repz
mov
jne
push
jl
fwait
mull
addr16
inc
out
fisubrl
xchg
jecxz
push
in
or
fidivs
aam
dec
lea
sahf
and
or
in
and
inc
xorl
mov
add
mov
daa
and
popaw
sub
lods
adc
test
or
sub
ficoml
repnz
sbbb
jns
addr16
adc
and
fdivrs
loopne
int
sbb
cmpsl
fwait
push
out
repz
adc
mov
mov
repnz
call
pop
mov
add
jo
mov
lret
xchg
dec
sbb
mov
dec
movb
cmp
inc
shll
idiv
mov
sbb
dec
dec
hlt
dec
push
cmpb
fldcw
or
sbb
mov
add
adc
sub
inc
repz
in
pop
mov
aad
jne
cmpsb
icebp
cmp
sub
cmp
cmp
pop
enter
jecxz
push
cmp
in
test
mov
ljmp
mov
cs
lcall
adc
test
xor
jo
outsb
lahf
aam
roll
mov
cmc
pop
mov
sbb
sbb
jge
nop
bound
and
popf
fcmovbe
mov
adc
and
test
inc
pop
stos
pop
adc
xchg
ljmp
out
xchg
xor
mov
aad
or
mov
jb
arpl
lods
push
pop
movsb
cmp
jmp
xchg
cli
popf
sbb
jbe
sti
ss
fwait
xor
sbb
in
and
adc
lods
frstor
jmp
inc
pop
sub
add
push
leave
test
jb
pop
push
xor
mov
cmp
dec
or
les
xchg
pop
gs
stos
pop
sbb
stc
push
sbb
jle
sbb
aaa
movsb
lock
mov
test
fstps
loopne
stos
outsl
data16
jne
xor
adc
dec
lods
cmpsl
push
sarl
xlat
jecxz
adc
in
dec
mov
push
imul
sbb
cmp
inc
aaa
jecxz
into
lea
and
and
je
xor
test
data16
stos
adc
adc
pop
cld
cld
mov
andb
sbb
jmp
xor
daa
mov
fbld
or
and
mov
adc
call
mov
mov
adcl
xor
shr
lods
aaa
mov
popf
test
arpl
fwait
jno
fildl
xlat
xchg
mov
lds
int
cmp
mov
dec
bound
jb
gs
push
call
imul
pop
xchg
xchg
mov
gs
lahf
inc
loope
in
jg
out
aad
or
ds
cmp
or
dec
and
sbb
fidivrl
sub
lea
mov
jns
call
push
push
out
add
mov
mov
inc
cmpsl
cmp
push
ds
push
inc
scas
aas
outsl
daa
sti
sbb
outsb
mov
jecxz
jae
add
mov
iret
lret
mov
jae
cmp
mov
dec
dec
icebp
and
pop
push
push
dec
data16
dec
inc
push
insl
inc
popf
iret
jmp
mov
jl
mov
push
add
cmp
push
movsb
jae
clc
push
mov
sar
mov
in
stc
les
loope
movsb
jl
and
mov
xchg
xchg
pushf
adc
scas
and
out
popa
jns
sbb
and
iret
cmp
add
movsb
and
mov
push
js
lcall
jne
push
insl
mov
sub
adc
add
lcall
lds
xorl
mov
sbb
adc
mov
pusha
mov
push
and
frstor
into
mov
cli
push
fmuls
pusha
out
pusha
sarl
dec
push
stos
lods
cmp
pop
adcl
sub
push
dec
loopne
rorl
ret
aas
rcll
ss
mov
sbb
mov
inc
cwtl
lret
sub
push
aas
movb
xor
in
push
and
xchg
mov
int
sub
adc
dec
cmpsb
cli
roll
mov
sbb
mov
lods
inc
mov
xchg
gs
fcmovu
lcall
std
sbb
hlt
cmp
test
cwtl
push
pop
jle
xchg
push
fists
adc
fstl
and
adc
xor
int
inc
ror
subl
out
and
pop
mov
and
int
ret
icebp
and
mov
xor
push
fsincos
adc
cmc
stos
sti
loope
sahf
mov
push
fldl2e
cmp
es
iret
adc
inc
ja
jae
pushf
popf
dec
cmp
pop
sub
push
daa
inc
cli
add
xchg
lea
and
pop
pop
sbb
in
out
loope
jmp
mov
mov
sbb
xor
mov
aaa
out
dec
mov
in
nop
xchg
sahf
or
or
fwait
lock
mov
repz
out
in
mov
repnz
mov
mov
ret
sub
pushf
inc
push
xchg
popa
icebp
stc
dec
cwtl
jbe
push
addr16
repz
jge
jnp
loopne
jns
xadd
test
and
iret
insb
dec
fstl
push
addr16
sub
scas
ret
cmp
cmpb
cmpsl
dec
push
push
inc
mov
nop
mov
and
push
paddd
pushf
xor
bound
mov
js
fs
pop
add
das
push
les
adc
add
add
add
fsubs
and
mov
dec
int3
xor
and
clc
rep
lret
push
push
lret
not
mov
jns
push
or
sahf
data16
test
add
fidivrs
ss
push
ja
sub
add
cmpsb
in
inc
pop
lret
mov
icebp
cmp
ja
adc
add
mov
cmp
lock
push
sbb
fmuls
into
fidivl
repnz
mov
movsb
adc
add
testl
inc
xor
into
add
shll
add
push
and
push
push
pop
inc
push
cmp
cmp
shlb
fcmovnbe
sti
mov
xor
daa
dec
ds
xor
mov
fwait
pop
dec
aas
push
pop
pushl
mov
pop
loopne
lds
call
adc
nop
push
out
ror
sti
dec
cmc
push
nop
push
adc
mov
repnz
inc
testb
imul
scas
repnz
fs
psadbw
pushf
xor
sub
add
movsl
xorb
add
stos
stos
orl
jle
xor
pop
cli
cmp
subb
xor
sti
popf
adc
shr
adc
cmp
or
addr16
xor
push
and
pusha
jo
iret
loop
out
enter
push
stos
scas
sub
movsb
lds
fwait
js
jo
leave
fistpll
fnsave
mov
push
in
sub
and
dec
addr16
sbb
xchg
inc
enter
adc
jb
mov
xchg
dec
lahf
add
icebp
push
mov
or
cwtl
sarb
pop
sub
add
stc
popa
add
jp
ret
sbb
in
jl
jo
pushf
fxtract
rcll
add
repnz
mov
aad
add
loopne
mov
xchg
jecxz
test
dec
adc
mov
ja
mov
push
sub
cmp
idiv
push
nop
dec
ja
dec
sbb
call
sub
and
dec
inc
cltd
mov
in
ljmp
mov
mov
xor
hlt
mov
fmuls
add
stc
mov
int3
aam
insb
dec
cltd
push
sti
mov
loope
lods
add
sti
repz
daa
or
enter
xchg
fisubs
jno
jl
clc
ror
push
pop
push
pop
jl
push
sbb
and
xor
pop
cmp
ljmp
enter
mov
lahf
mov
cmp
xchg
popf
mov
xchg
sbb
mov
lock
jle
sbbl
fwait
std
push
and
into
sub
not
popf
mov
stos
sarl
push
sub
sbbl
bound
push
add
add
imul
mov
cs
sbb
sub
xor
cmpb
dec
lret
outsl
ja
and
inc
fwait
jb
mov
les
cmc
pop
jns
dec
js
aaa
mov
sub
lret
lcall
pop
les
mov
xor
mov
ret
pop
mov
data16
push
adc
xchg
jl
inc
pop
cltd
adc
shll
sbb
adc
xchg
mov
mov
stos
mov
mov
or
dec
out
or
or
pop
bound
hlt
add
aam
cmp
mov
push
xchg
into
xchg
js
lret
jb
jnp
stc
stos
sbb
cmp
das
xor
mov
inc
inc
daa
movsb
dec
popa
push
xor
inc
addl
lea
or
lods
add
push
or
in
add
mov
mov
or
jb
push
ja
loop
icebp
nop
mov
iret
gs
jg
mov
mov
push
fsts
mov
jne
inc
xchg
scas
mov
or
flds
xor
pop
mov
repnz
or
test
adc
jp
mov
in
leave
jecxz
xor
lods
push
int3
inc
mov
jecxz
mov
jb
aas
fwait
adc
pop
test
inc
dec
cli
mov
mov
lahf
inc
pushf
movsb
repz
out
ds
out
xchg
fbstp
push
push
cs
cmp
lock
push
fstp
shrl
lcall
ljmp
dec
push
dec
in
pop
cli
mov
scas
ret
insb
test
push
lahf
mov
xchg
jmp
test
aad
loop
call
enter
ja
ja
les
icebp
push
push
inc
mov
and
popa
jno
lret
add
lcall
int
and
jp
pusha
fwait
mov
push
sti
pop
enter
xor
and
sbb
jbe
adc
xorb
inc
fs
mov
fbstp
jge
sub
push
xchg
jmp
pop
aad
or
ja
xor
mov
sub
call
inc
ja
loopne
dec
cmp
cmp
jo
sub
movsl
and
sbb
std
mov
dec
sahf
ljmp
sub
in
xchg
sahf
stos
dec
cmp
fstpl
pop
aam
cmp
push
test
mov
add
sti
cmpsl
sbb
rcr
in
pushf
out
pop
xchg
add
push
imul
mov
push
lock
xor
mov
fcoml
cmp
int3
mov
andb
mov
xchg
sub
xchg
mov
add
pop
pop
cmpsb
data16
clc
pop
es
jb
mov
cld
and
ret
aaa
sbb
jns
push
mov
aam
inc
test
les
inc
adc
shlb
pop
push
mov
jg
cld
push
test
xlat
ret
cli
orb
push
xor
shrl
inc
sub
outsl
out
and
lock
or
cmp
ret
sbb
dec
inc
repnz
push
mov
inc
int3
lock
cmp
int
insb
dec
cltd
dec
inc
gs
xchg
in
ret
jp
lock
adc
int3
adc
ss
shrl
mov
repnz
xchg
mov
imul
cmp
push
int
aaa
xchg
adc
jp
cmp
out
loope
sub
mov
sbb
pop
push
sbb
sbb
xchg
or
mov
sarb
mov
adc
mov
fildll
nop
and
scas
push
mov
pop
shlb
popa
mov
mov
insb
mov
push
test
shll
arpl
mov
fs
adc
ja
out
jg
inc
push
jle
xchg
in
fcoml
inc
mov
inc
scas
sti
mov
subb
inc
outsb
xchg
xlat
push
adc
loope
decb
mov
mov
iret
test
lods
fnstcw
push
scas
pop
adc
cmc
push
jnp
push
pop
lahf
ret
nop
scas
clc
lds
lret
dec
xor
and
jb
lcall
adc
rorl
jle
iret
movsl
mov
outsl
int3
xor
push
pop
stos
jge
ficomps
pop
mov
push
fistl
pop
imul
push
popf
lock
outsb
ficoml
repz
shll
pop
dec
or
mov
into
or
jo
sub
mov
push
add
mov
inc
arpl
add
sti
inc
shr
push
ds
sub
stos
fisttpll
jl
xor
push
cmp
fcmovbe
or
mov
gs
ss
inc
dec
xorb
insl
xor
cmp
xchg
push
pop
jp
mov
pop
xchg
int
sub
mov
pusha
sub
xor
pop
and
sar
fcmovu
lods
pop
add
fwait
sub
movsb
gs
mov
sbb
xor
lret
mov
cmp
jmp
leave
sub
les
add
lahf
and
mov
add
pop
test
fwait
popa
dec
inc
decb
cwtl
push
or
dec
sbb
shll
daa
sbb
and
rorl
xor
jno
scas
gs
daa
add
rcr
pop
mov
mov
jl
adc
push
jo
push
mov
jle
jns
jae
add
ds
mov
cmpsl
movsl
xchg
aaa
inc
lods
add
xchg
adc
out
out
mov
jecxz
in
pop
jne
pop
pop
push
in
pop
ficoml
ss
rcr
std
jo
push
sbb
dec
fiadds
jg
and
out
testl
jge
inc
shll
adc
cmp
frstor
bound
pop
mov
ret
mov
mov
iret
and
lret
lods
adc
add
out
arpl
fcomps
mov
into
popf
inc
leave
arpl
pop
mov
lahf
dec
notb
xor
inc
int3
and
cmpsl
jmp
movsb
das
mov
iret
jo
mov
psubusb
das
sbb
aas
dec
rolb
bound
pop
sub
jo
pusha
lahf
or
dec
pushf
cli
out
jg
jge
lcall
cs
addr16
test
mov
sub
popf
sub
pushf
fbstp
push
sahf
ret
insl
addl
mov
int
xor
arpl
cmp
movsl
push
mov
mov
jae
and
les
in
mov
pop
sahf
add
jmp
cmp
mov
xlat
dec
pop
scas
out
call
cs
xor
loopne
test
in
dec
shrl
in
cli
xchg
dec
mov
stc
cmc
cmp
jg
icebp
popf
add
hlt
out
fstpt
push
orb
mov
jmp
xor
xor
in
mov
lods
mov
inc
inc
movb
out
or
fs
push
cmc
push
cmp
cli
mov
and
mov
cwtl
out
out
jmp
jecxz
lock
mov
dec
add
popf
pop
adc
pusha
adc
enter
les
fidivl
and
in
sarl
cmp
aaa
sbb
push
pop
add
fadd
jl
fisttpll
cmpsb
out
or
insb
mov
pop
imul
in
sbb
fs
fwait
adc
cmc
cmp
mov
sbb
push
jl
fwait
imul
pop
aaa
pop
xor
xchg
std
sbb
xchg
dec
rcrb
inc
fdivrp
jb
fwait
sti
addr16
cli
add
into
mov
arpl
jl
or
jl
int3
dec
nop
or
out
push
or
jmp
sahf
xor
or
mov
add
mov
clc
inc
jl
aaa
sbb
das
std
adc
insl
ret
das
loop,pn
test
mov
scas
xor
inc
jb
pop
pop
cmpsl
fcompl
mov
jne
dec
dec
push
inc
jo
push
bound
lea
xchg
pop
dec
inc
adc
add
scas
push
xor
out
jmp
add
mov
nop
lret
push
cmpsb
pop
dec
subb
into
shrl
push
add
xor
mov
into
jl
arpl
into
mov
and
nop
addl
sbb
adc
xchg
inc
pushfw
repnz
mov
clc
in
cmpsl
out
cmp
je
add
xlat
notb
pop
jb
adc
mov
adc
rep
iret
jl
jae
pop
nop
dec
fabs
dec
sbb
hlt
shl
mov
mov
push
jle
out
cli
xchg
int3
outsb
sar
xchg
jns
sbb
fcmovnu
pop
in
lock
cmp
xchg
scas
mov
or
or
in
pop
jecxz
popf
push
jb
mov
es
fistpl
pop
out
repz
cmp
jecxz
pop
jmp
mov
fucomi
popf
adc
sub
push
shrb
divl
sub
push
data16
outsb
push
imul
cmp
or
or
mov
add
sbb
sbb
add
mov
and
or
andl
icebp
es
movsb
push
fstp
loopne
orl
xor
push
ret
jl
fcoml
mov
nop
sbb
lds
movsb
fdivr
inc
movsb
sub
lahf
outsl
and
sbbb
jge
mov
jnp
sub
in
stos
stc
sbbb
xor
jmp
pop
mov
pop
std
sbb
inc
dec
jae
popl
cmp
sub
or
shrl
out
xchg
ss
imul
xor
jb
rorl
daa
loope
pop
pop
sbb
scas
nop
lock
jmp
pop
add
and
adc
mov
loop
mov
fildl
mov
punpckhdq
xchg
in
pop
aaa
lea
aam
hlt
test
rorl
cmp
jecxz
divps
xchg
mov
ret
push
inc
call
push
and
pop
jae
pop
cmpsl
fstl
repz
sahf
mov
imul
sub
jns,pn
mov
add
push
add
push
pop
es
mov
sub
shlb
push
stc
pop
and
jne
adc
jbe
jle
xor
ret
scas
popf
popa
in
in
movsl
sub
sub
lock
cli
fstpt
cli
cmpsl
or
fimull
adc
cmp
jg
pushl
push
add
mov
push
mov
test
lea
addr16
mov
daa
sahf
aaa
xorb
call
inc
jne
mov
mov
jp
cltd
fs
loopne
jl
xchg
outsb
fs
add
xor
aam
or
jle
mov
stos
andb
pop
std
aaa
cmpl
mov
fisttpl
mov
enter
pop
xadd
sub
pop
jno
and
orl
in
cmpsl
jo
jne
xor
add
adc
insb
add
sarb
cld
mov
outsb
out
das
js
rorb
sti
enter
ss
scas
test
push
lcall
mov
lahf
test
fidivs
clc
adc
and
mov
sbb
bnd
popa
mov
popa
xchg
pop
xor
rclb
add
add
addr16
xor
aad
or
pop
sbb
pop
sub
jmp
and
sbb
sbb
or
inc
fidivrs
mov
inc
xor
and
or
jg
add
pop
mov
lea
mov
std
push
push
test
push
pusha
mov
hlt
mov
jns
rcll
nop
ss
xor
cmpsb
pop
sbbb
push
push
jg
das
cli
pop
sbb
xor
int
sti
test
inc
cmpsb
cmc
lcall
lcall
sub
mov
and
mov
stos
call
and
leave
test
or
dec
pop
fisttps
xchg
imul
das
clc
ficompl
mov
ja
xchg
ja
adc
mov
cmp
rcrb
inc
xchg
cmp
push
sub
or
arpl
cmpb
jg
div
test
adc
outsl
adc
mov
loope
pop
jbe
repnz
xrelease
stc
push
aam
in
mov
into
imul
push
or
inc
in
out
es
pminsw
or
orl
mov
cld
push
fistpll
jg
sbb
add
shll
ja
lds
cmp
dec
cmp
mov
pop
enter
cmp
rorl
mov
aam
data16
pop
dec
testl
sahf
dec
movsb
movsl
std
popa
and
leave
or
ret
fisttps
outsb
into
inc
dec
cmpsb
fdiv
xor
aad
push
gs
decl
inc
mov
jb
adc
sti
das
clc
add
xor
fnstcw
add
inc
jl
arpl
pop
out
or
outsb
jnp
shrb
sub
xchg
pop
pop
in
inc
call
idiv
xchg
in
mov
or
jle
mov
mov
leave
out
mov
clc
jl
xor
mov
gs
jecxz
xchg
sti
loop
pushl
jmp
dec
mov
or
cmp
test
outsb
clc
xchg
stos
mov
jge
notb
pop
and
or
or
jmp
and
xchg
jo
adc
sub
pop
das
sub
movb
adc
lea
inc
push
ficomps
adc
xor
push
and
jbe
ds
pop
mov
daa
les
pop
xor
add
ret
pusha
mov
outsb
adc
test
jp
ret
xor
and
sahf
imulb
adc
mov
xor
aaa
push
call
mov
and
sbb
inc
mov
dec
movsl
std
mov
sbb
push
pusha
mov
addr16
out
es
adc
jp
aad
imull
adc
es
idivl
adc
divb
xchg
xor
lods
sbb
test
mov
scas
out
mov
insl
mov
das
xchg
add
push
sbb
cmp
mov
inc
es
jae
jno
addl
movsb
push
cmp
add
inc
fs
movsl
jecxz
push
sti
enter
pop
dec
popa
rolb
nop
lock
add
inc
popf
mov
shlb
repz
pop
mov
sbb
mov
sbb
push
adc
test
fstl
cmp
ret
rcl
clc
adc
addr16
sbb
call
in
cmp
sbb
subl
xor
fbld
cld
xor
outsl
int
lock
cli
sbb
jo
or
sub
mov
push
add
jae
arpl
or
shll
pop
pop
loope
or
mov
fwait
out
push
xor
sub
cld
xchg
div
and
jno
jp
in
mov
cmp
mov
cmpsl
pop
popl
or
jl
mov
xor
mov
das
sbb
adc
pusha
cltd
aas
inc
jp
das
push
leave
neg
add
aad
in
cmpsb
imul
and
mov
cmpsl
aam
push
into
xchg
cmpl
push
popf
andl
or
xchg
adc
fstpl
mov
cltd
inc
xchg
sarl
fwait
sbb
jp
es
mov
pusha
jmp
shrl
movsl
jg
loope
jle
mov
mov
dec
test
lea
jecxz
test
xchg
and
nop
and
inc
add
fsubr
pop
clc
pop
xchg
insl
and
cmp
outsb
pop
js
pop
mov
xchg
mov
shlb
icebp
frstor
mov
ja
and
pop
insl
push
movsl
add
in
mov
icebp
jge
sub
pop
imul
test
jg
clc
syscall
dec
cmpsb
sbb
scas
ret
fs
lret
jb
mov
outsl
push
lods
cmp
sub
fcoml
daa
add
pusha
stos
je
pop
add
adc
mov
in
lods
xor
ja
cmp
or
xchg
or
stos
xchg
popa
push
xor
jb
pop
or
icebp
cmp
les
test
or
repz
mov
in
push
push
test
aaa
jle
cmp
push
lahf
push
mov
mov
sbb
dec
or
sub
lahf
inc
sub
push
pop
ss
dec
popa
xor
sbb
in
sub
xor
lret
gs
mov
insl
push
mov
ret
shl
into
fdiv
cmp
xchg
jg
data16
dec
fstl
push
das
inc
popf
cmp
nop
xor
cmp
je
add
jne
pop
or
push
loope
fsub
mov
fs
add
sub
icebp
stc
ss
js
inc
jo
lds
xchg
aam
jmp
xchg
jle
mov
ljmp
sbb
xchg
fcoms
test
inc
mov
xchg
mov
movsb
or
or
xor
andb
xchg
scas
jl
mov
movsl
mov
leave
loopne
inc
or
and
repz
ret
jnp
je
cltd
mov
stos
insb
dec
inc
int3
xorl
ss
lock
dec
fcmovbe
pop
outsb
ljmp
int
push
or
js
mov
pop
dec
in
ret
fsubs
cli
mov
loopne
pop
inc
mov
mov
test
out
adc
sbb
lock
push
sub
daa
out
dec
sub
lds
mov
jbe
mov
fdivr
adc
test
sahf
std
lret
sub
insb
test
push
shrl
mov
inc
xchg
dec
mov
adc
addr16
jmp
das
adc
jo
imul
xchg
mov
xor
sbb
xchg
or
add
mov
mov
insl
mov
ficompl
mov
inc
and
xchg
sub
test
aam
pop
lods
xor
imull
mov
es
das
faddp
xor
fidivrl
cmp
adc
push
fstp
ja
pop
out
pop
dec
xor
das
lds
out
and
movsb
bound
stos
xor
ljmp
or
pop
loope
movsl
inc
fidivrs
lret
mov
std
ss
xor
leave
xchg
test
push
repz
shr
dec
fnstsw
xchg
movd
mov
push
std
sub
popa
mov
stos
and
incl
leave
pop
mov
sarb
sub
dec
add
xor
cmp
movsb
adc
lret
cmpsb
push
mov
push
and
jmp
adc
dec
mov
loopne
insb
jne
jle
fwait
ret
decl
lcall
xor
popf
xchg
sbb
mov
scas
cmp
mov
dec
push
mov
pop
jo
jmp
sbb
icebp
mov
add
xchg
int3
inc
in
das
cmp
lcall
adc
orb
movsl
mov
sub
enter
sub
adc
or
fcompl
je
inc
int3
clc
cli
loopne
out
sbb
aam
dec
aas
cmc
das
int
push
and
arpl
jne
adc
ja
push
pop
jnp
xchg
bound
xchg
gs
push
cmpsl
inc
push
sbb
fstpl
jmp
cmpsb
jb
mov
je
mov
jns
xchg
nop
inc
pusha
inc
add
adc
or
xor
stos
stos
sub
fistl
fstpt
fidivs
sbb
cltd
icebp
sub
jnp
daa
scas
imul
ret
adc
dec
mov
pop
push
add
das
movsb
add
aaa
in
mov
movsb
jecxz
dec
sbb
shrl
adc
or
cltd
dec
test
gs
mov
sti
mov
clc
dec
mov
in
bound
dec
or
movzwl
in
scas
push
pop
jg
mov
pop
cmp
lods
inc
dec
xchg
ljmp
in
cmp
int3
shr
mov
out
mov
shlb
push
inc
xchg
shr
sbb
stc
push
push
enter
dec
fbstp
jne
into
rcl
xchg
inc
adc
aas
test
rcl
daa
sub
aad
xchg
es
mov
push
adc
adcl
into
jg
jne
sbb
sbb
xor
jo
push
sub
adcb
mov
loop
out
dec
int3
adc
aad
in
sahf
out
pop
lcall
shll
fwait
sbb
sub
mov
stos
mov
or
jno
es
dec
stc
dec
jl
ss
cld
xchg
xor
mov
mov
sub
lock
fucomi
sub
mov
bswap
aaa
or
jne
push
insl
outsl
mov
in
fisubrl
int
sub
stos
jo
cld
popf
mov
arpl
add
imulb
jl
sbb
jnp
mov
sub
jp
jae
xchg
push
xchg
lock
mov
inc
ss
js
pop
xor
add
sub
stos
jmp
push
stos
insb
push
add
mov
xchg
adc
test
js
test
add
mov
cmp
sarl
fists
sbb
hlt
arpl
or
mov
mov
dec
adc
or
movsb
imul
repnz
mov
scas
mov
dec
scas
mov
pop
icebp
orb
push
nop
sbb
arpl
xor
jecxz
movsl
jecxz
in
xor
bound
aam
mov
and
inc
push
sti
xor
jmp
inc
pop
ss
pop
or
sub
sbb
push
push
mov
ljmp
ljmp
push
lds
lret
jg
ret
shlb
repnz
inc
bound
xchg
sub
fidivs
pop
iret
xchg
push
xchg
je,pt
inc
xor
pop
imul
and
jecxz
jno
hlt
aas
xlat
sub
int
sbb
add
xchg
mov
add
push
xchg
ret
scas
outsb
fdivr
nop
pop
mov
add
add
xorb
adc
lods
mov
pop
pop
sbb
call
mov
stos
jmp
shlb
filds
in
jns
mov
adc
sbb
int3
je
cmp
push
popf
ja
sub
fwait
pop
sbb
imul
scas
or
or
inc
ja
out
and
xchg
and
movsb
outsl
leave
adc
ljmp
sbb
xchg
jns
nop
dec
and
mov
fiadds
xchg
aas
xchg
fmull
cld
or
jns
pop
iret
adc
ret
sbb
push
dec
inc
fildl
inc
and
aam
negl
out
rcll
test
std
mov
adc
popa
xchg
sti
cltd
in
pop
xchg
arpl
fdivl
mov
insl
mov
scas
push
in
mov
shrl
mov
pop
xchg
into
call
lcall
int3
push
add
inc
lds
clc
or
mov
xchg
cwtl
imul
out
lcall
mov
mov
cli
cmp
divl
mov
das
mov
aaa
in
sar
sbb
cmp
sbb
scas
cs
iret
xchg
xchg
push
mov
enter
sub
cmp
cmc
mov
gs
add
push
mov
pop
ss
and
imul
add
flds
adc
cmp
mov
loope
pop
sti
or
lock
popa
loopne
stos
push
in
add
fnsave
add
mov
scas
sub
fsub
test
xchg
das
mov
out
dec
mov
test
sub
pop
or
in
ds
xor
lcall
lock
hlt
jnp
mov
ds
shll
jns
imul
and
add
call
das
int
add
rolb
or
mov
push
jnp
stos
cmp
inc
jns
js
jae
inc
cltd
push
jecxz
mov
es
xchg
into
add
mov
or
mov
push
inc
js
pop
xchg
adc
loopne
imul
or
lret
cmp
jmp
test
cmc
fiaddl
in
icebp
inc
pop
test
lds
inc
mov
sbb
or
enter
add
ret
lods
xchg
push
fwait
add
adc
mov
add
pop
gs
mov
sti
setle
arpl
mov
push
fwait
hlt
clc
outsb
cmpsl
rcrb
mov
rorl
jnp
dec
je
inc
jb
imul
test
test
push
mov
in
cs
mov
stos
xor
lods
cmp
imul
cmp
inc
in
mov
pop
movl
clc
mov
mov
inc
mov
std
jno
push
jge
loop
shlb
jnp
dec
movsl
add
stos
push
ret
scas
jge
xlat
icebp
aam
subl
mov
in
sbb
sub
sbb
mov
push
add
imul
push
sub
fdivs
sub
jle
lcall
rcll
scas
sbb
cmpsl
push
test
xchg
in
sti
xchg
jnp
cmp
push
push
ja
xor
mov
into
rcrl
pop
cmp
xchg
stc
mov
test
cmp
pop
cmp
sbb
jp
pop
lds
xchg
stos
mov
xchg
dec
jo
sbb
cs
inc
inc
xor
adc
inc
xor
es
in
mov
cwtl
sub
xchg
int
lods
inc
cmpsb
dec
xor
and
pushf
add
pushf
jmp
arpl
mov
inc
or
mov
test
into
ja
cmp
jne
or
and
push
push
iret
adc
mov
inc
loopne
sahf
call
mov
jmp
gs
adc
out
int
mov
cmp
out
insl
sti
mov
pusha
xor
mov
jb
stc
mov
arpl
push
addl
inc
repz
inc
pop
inc
lahf
push
jns
subl
adc
adc
jl
push
xchg
imul
pop
inc
push
repz
adc
xchg
out
mov
push
add
cmp
ret
mov
repz
add
push
sub
stc
out
in
mov
lods
std
push
cmp
dec
mov
sub
jno
mov
dec
outsl
lar
xchg
push
cs
repz
mov
mov
sbb
push
mov
xchg
fdiv
lahf
mov
aaa
ret
dec
in
arpl
push
xchg
pop
fwait
es
outsl
int
adc
jmp
jg
mov
pop
std
add
cli
clc
dec
or
or
mov
cmp
adc
dec
sub
fisubrs
or
mov
pop
fsts
jno
pop
mov
pop
push
inc
pop
pop
xor
popf
leave
ds
test
test
adc
dec
or
lret
dec
mov
cmp
outsb
mov
je
dec
loope
add
or
orl
mov
sbb
out
mov
imul
popf
movsb
cwtl
jns
lret
aad
mov
inc
insb
xchg
jmp
jecxz
outsb
test
xchg
ljmp
imul
jmp
push
iret
out
push
test
aaa
out
fidivrl
push
aas
outsl
sub
pushf
stos
cmp
js
add
stos
enter
mov
fnstenv
pop
pop
mov
lahf
imul
mov
in
movsb
aad
cmc
ficoml
lods
xor
int
jo
imul
dec
ja
xchg
movsb
mov
jb
adcl
arpl
js
call
std
mov
in
mov
adc
in
pop
andb
mov
sub
pop
cmp
or
ret
in
xchg
data16
ret
aas
dec
call
jle
out
pop
mov
mov
shll
or
rorb
adc
dec
jb
dec
shll
sub
sti
mov
fdivl
in
pop
jge
xchg
imulb
bndstx
mov
gs
xchg
pushf
cwtl
push
hlt
xor
imul
adc
out
int3
es
out
mov
fists
les
decl
lods
adc
pshufw
sub
add
test
iret
sub
xchg
xchg
lock
outsl
out
pop
int3
test
lods
sbb
inc
shlb
bound
cltd
sub
mov
test
pop
adc
popf
mov
cmc
nop
cld
repnz
cmp
test
cmp
nop
icebp
add
cli
popa
fsubrp
mov
inc
sbb
mov
nop
aaa
add
movsb
pop
lret
inc
dec
sbb
pop
dec
js
cmp
push
mov
pop
push
repz
daa
add
dec
mov
push
adc
cmpl
pusha
cmp
push
xor
je
or
dec
cmp
mov
dec
test
js
aam
xor
les
ja
sbb
outsb
cmp
test
lcall
adc
ficompl
push
imul
inc
push
pop
inc
ljmp
out
icebp
stos
push
stos
ret
cmp
and
cmpsb
sbb
and
shll
cli
imul
insb
nop
dec
or
ss
fimull
pop
pusha
pop
xchg
flds
add
sub
pop
dec
fwait
test
out
xlat
aaa
dec
pop
cs
lods
mov
sbb
lret
sbb
rcrl
sbb
psubusb
add
dec
jns
xchg
test
and
sub
sti
sub
jns
shl
mov
jle,pn
dec
mov
jbe
adc
fimuls
cmpsb
imul
jnp
add
dec
loop
inc
push
jnp
lahf
addr16
push
scas
lret
stc
lods
dec
insb
or
cltd
xor
leave
adc
or
cmp
jecxz
hlt
mov
repnz
push
or
inc
shll
xor
sub
aam
pop
jbe
test
cmp
sbb
fsubr
cmp
xor
imul
inc
jp
and
loopne
add
mov
sarb
fs
jno
jno
and
adc
lods
push
out
loop
hlt
adc
mov
je
or
dec
loop
ficoms
inc
jecxz
pop
adc
loop
arpl
lea
aaa
sbb
sub
imul
les
lahf
adc
xchg
mov
jl
inc
loop
pop
push
rclb
or
or
jecxz
mov
mov
jb
mov
sub
std
outsl
gs
cmpsb
push
dec
pushf
push
dec
leave
sbb
mov
dec
std
mov
inc
aad
inc
xor
push
mov
in
jle
imul
mov
inc
pop
imul
in
mov
js
mov
mov
out
and
call
inc
inc
test
hlt
clc
cmc
xchg
std
pusha
orl
add
into
pop
cld
mov
adc
and
adc
test
icebp
popa
or
std
push
cmp
mov
rcll
adc
xor
sub
or
mov
cmp
lret
sub
add
mov
out
cli
push
imul
into
pop
out
adc
es
mov
sbb
lret
sbb
pop
insl
cwtl
xchg
push
mov
imul
add
jle
fmuls
enter
push
pop
push
lret
bound
jne
stc
push
or
pop
stos
xor
and
idivl
push
jnp
push
test
sahf
lods
enter
inc
insb
repz
mov
in
fs
gs
cmp
clc
mov
jge
xor
sbb
cltd
inc
dec
stos
out
push
das
push
pop
out
gs
idivl
lea
sbb
push
lret
mov
push
push
add
add
or
mov
cmpsl
jae
cmpsl
icebp
cltd
test
mov
and
in
mov
in
push
data16
or
jge
cs
xchg
movsl
scas
sbb
mov
xor
push
xchg
movsb
popf
jle
or
imul
sub
jp
fwait
add
push
fistpll
jmp
add
int3
sub
xor
mov
push
adc
xor
inc
aaa
clc
inc
mov
rolb
into
pop
jb
xchg
xlat
aas
push
cmpsl
jle
in
sahf
out
add
inc
int
cmp
scas
jne
xchg
jae
dec
les
cmp
pushf
ds
ljmp
mov
inc
pop
mov
stos
lea
xchg
pusha
add
iret
jne
jb
insl
pop
das
loope
fsubrs
imull
lret
inc
sub
dec
pop
shlb
mov
fdivrl
inc
jmp
and
adc
dec
push
leave
insb
shll
negb
xchg
out
push
or
loopne
cwtl
mov
mov
scas
xor
fisubrl
mov
adcb
dec
rcll
scas
cmp
mov
sbb
mov
negl
adc
lock
push
mov
lds
fcoml
arpl
and
stc
xchg
xchg
dec
cli
dec
push
idivl
dec
add
mov
inc
cli
adc
xor
pop
jae
divps
dec
loop
mov
or
sub
fs
mov
dec
mov
jg
sub
push
xchg
mov
sti
mov
rcrb
pop
mov
movsb
and
inc
repnz
cltd
jb
xchg
sarl
test
jne
xor
jb
push
cmpsb
aad
xor
popaw
enter
int
pusha
jo
mov
es
add
jb
sbb
mov
add
push
or
adc
lcall
clc
mov
lea
sarb
popa
in
adc
sbb
mov
mov
inc
cmpsb
arpl
xchg
in
mov
pop
pop
mov
mov
mov
idiv
jmp
jb
or
leave
sbb
xchg
mov
or
pop
xorl
rcll
clc
xchg
std
xchg
jnp
inc
push
xchg
sarl
cltd
sbb
out
push
andb
sbb
cmp
in
fwait
mov
call
cmp
jo
aas
lret
in
push
pop
push
js
or
cwtl
jle
dec
cld
lret
cmp
fsubp
bound
aad
outsl
cwtl
loopne
sbb
nop
xchg
cmp
dec
idivb
sub
and
mov
subl
push
push
mov
xchg
push
jbe
cmp
add
jmp
pop
push
xor
shl
out
push
mov
bound
mov
addr16
sub
inc
rcl
push
mov
cmp
loopne
or
ror
in
jbe
rcll
scas
insb
cmp
mov
loop
imul
aaa
sub
imul
into
mov
xor
push
das
jb
pushf
mov
pop
inc
jnp
jmp
jg
adc
adc
jo
pop
cmpsb
push
jmp
mov
in
sub
dec
push
inc
cmp
xchg
out
or
cld
mov
mov
mov
mov
sbb
test
es
sub
fisubl
push
lods
je
pop
mov
popf
int
daa
pop
cltd
xchg
cmp
fs
xchg
jns
into
pop
cmc
addr16
sub
xchg
test
inc
inc
jnp
or
pop
and
fistpll
leave
mov
ljmp
xor
imul
mov
jg
and
sbbl
pusha
jecxz
fdivs
jl
xchg
add
fldenv
jmp
fisubl
out
scas
adc
lds
loopne
sbb
test
pop
add
sub
in
enter
mov
xchg
out
and
jmp
scas
lahf
dec
cmp
sub
dec
ljmp
daa
push
or
sub
gs
dec
in
mov
lahf
shll
jecxz
jbe
mov
pop
xor
mov
rcll
mov
imul
sbb
cli
cmp
ret
jno
ja
in
je
idivb
add
adc
mov
jbe
jecxz
int3
mov
push
xor
das
mov
add
arpl
stos
jae
dec
sbb
enter
sub
cmc
push
jmp
mov
fwait
lock
pop
in
test
mov
icebp
xor
ret
xchg
sbb
lods
sarl
xchg
push
mov
lret
mov
cmpsl
cli
cltd
mov
loopne
mov
sub
and
jmp
and
and
shlb
xlat
xchg
inc
lcall
in
dec
std
mov
lods
icebp
aad
lcall
loope
loop
mov
mov
cmp
enter
js
pop
lods
into
repz
stos
out
pop
fbstp
sbb
leave
outsb
cwtl
pop
les
mov
inc
fldenv
fimuls
out
mov
test
popa
xchg
sub
pop
lahf
clc
aam
mov
mov
cltd
push
int3
rcl
sti
movsb
mov
pop
sqrtps
jg
mov
jmp
out
daa
aas
insb
movsl
dec
cmp
or
js
les
jnp
lret
loopne
cmp
in
fsubs
data16
dec
fiadds
fmuls
ss
std
pop
lds
xchg
ficoml
cmp
mov
jne
push
insb
or
lock
mov
pop
rolb
xchg
das
aad
adc
xchg
sbb
int3
fldcw
push
rcrl
cltd
jns
pop
stos
pusha
xchg
xor
in
xchg
sub
call
xchg
out
mov
xor
arpl
loope
sub
pop
pushf
repz
sub
xchg
cmp
mov
outsl
jl
pusha
jp
pop
in
mov
test
push
ret
sub
test
xchg
inc
aaa
jbe
aaa
mov
or
dec
push
sbb
mov
add
dec
add
mov
in
mov
stos
mov
cmp
xorl
stos
outsl
popf
sbb
cwtl
imul
out
mov
cltd
gs
insl
idivb
xchg
fdivrl
mov
add
stos
sub
pop
sbb
rcll
add
xchg
stos
cmpsb
test
mov
cmc
and
dec
iret
sub
das
jno
sahf
and
popa
mov
jne
ret
pop
popa
jge
mov
jge
and
jae
fcompl
lea
cltd
jecxz
xchg
in
or
fs
in
xchg
add
adc
int
repz
repz
push
loopne
fcompl
inc
mov
mov
in
mov
out
shl
mov
fcmovbe
loope
and
adc
fstp
inc
inc
shrl
negl
insl
jae
cmp
jg
inc
cld
out
ljmp
adc
aam
subb
jl
sbb
pop
movl
mov
xchg
xchg
mov
mov
icebp
pusha
ret
pop
cmp
push
xorl
fidivs
add
and
mov
xchg
pop
cmp
mov
push
or
push
pop
push
inc
xor
pusha
psubb
inc
mov
xlat
pop
lods
nop
jns
sti
hlt
sub
cmc
arpl
mov
dec
sub
xor
xchg
mov
daa
ljmp
popfw
popa
fcomps
jg
test
ds
loop
or
arpl
mov
or
cli
fs
fdivl
and
sbb
ds
adc
das
popa
pop
cwtl
es
idivb
popa
pop
push
add
subl
or
insl
sub
jbe
sub
add
js
jae
dec
loopne
test
adcb
es
pop
sbb
xchg
flds
inc
shrl
and
test
xor
add
shl
inc
inc
sbb
cmp
notl
rclb
lret
add
sbb
xorb
leave
or
ret
dec
add
or
push
mov
cvtps2pi
fidivl
xor
fldl
and
dec
lods
je
pusha
out
sbb
arpl
lods
cmp
cmp
sarb
mov
cmp
adc
jl
mov
cwtl
fstps
sbb
js
xchg
dec
stos
test
xlat
xor
out
gs
lock
pop
jle
out
jp
pop
lret
popf
adc
adc
mov
cmpsb
jnp
ret
sahf
fstl
scas
dec
sahf
repz
lahf
xchg
pop
mov
cmp
sub
rcr
lock
mov
jecxz
arpl
test
adc
ret
add
pop
cltd
jle
sbb
rcl
and
pop
ret
scas
test
aas
cmc
xor
adc
gs
popf
iret
mov
or
je
test
xchg
xor
dec
adc
or
sub
or
into
jbe
rol
jg
xor
push
popf
sub
push
loop
mov
loope
xchg
repz
pop
outsl
imul
les
pop
or
rcrl
stos
in
cmp
xorb
mov
pop
lock
mov
rorb
shlb
jae
mov
ret
sub
aas
cs
xchg
pop
inc
popa
xchg
xor
adc
data16
cmp
push
out
mov
xchg
push
cmp
push
addr16
or
sub
dec
ret
xchg
fwait
sub
dec
sbb
jmp
pop
je
cmp
xchg
dec
addr16
icebp
adc
inc
sub
mov
dec
ret
hlt
ss
fs
jno
sarb
test
test
mov
push
scas
push
pop
inc
cwtl
imul
ds
cld
pop
mov
ficomps
dec
and
jmp
mov
adc
mov
cs
pop
mov
cmp
test
jno
push
cwtl
pop
and
in
nop
cld
sahf
jae
mov
sub
enter
inc
sub
add
jmp
push
test
pop
xlat
movsb
ljmp
icebp
adc
imull
jmp
hlt
jmp
fstps
inc
in
gs
out
loopne
xchg
fistps
mov
int3
cld
cmp
ficomps
out
mov
push
xor
ret
jo
ficompl
xchg
xchg
ret
xchg
movsb
xchg
mov
pop
mov
sub
sub
or
fs
scas
out
pop
or
int
fs
or
lret
mov
stc
inc
jne
mov
sub
test
push
pop
popa
loope
decl
lods
mov
iret
cmp
mov
push
addr16
lcall
rorb
xor
push
jns
out
xchg
adcl
fidivl
xchg
add
fcomps
jmp
mov
int3
cltd
inc
jg
pop
push
fildll
push
or
mov
pop
arpl
enter
sbb
push
icebp
lods
clc
inc
lret
xorb
jo
push
dec
outsb
movsl
sub
and
and
inc
out
xor
pop
loopne
popf
pop
jmp
push
insb
clc
movsb
stos
mov
push
test
xlat
fcoml
xlat
fnstenv
setl
jecxz
aaa
sbb
inc
nop
icebp
mov
testl
pop
ds
cmp
fs
mov
mov
adc
mov
adc
mov
fcoml
and
scas
or
and
pusha
movsb
fstl
iret
cmpsb
rcll
test
ds
arpl
push
cmp
popa
lods
adc
hlt
call
ds
push
xchg
lods
ds
pop
enter
in
cli
rclb
mov
shr
ja
pop
push
inc
cmpsb
daa
push
mov
pop
in
jns
insl
sub
inc
jno
in
lcall
mov
stc
sbb
dec
jb
movntps
loope
loop
fadds
imull
enter
adc
adc
push
sbb
pop
addb
or
add
pop
inc
fbstp
cmp
jp
cli
ret
cli
repnz
cmp
sbb
rcll
xchg
leave
adc
push
cli
adcl
test
ficoml
inc
sub
jb
lahf
addr16
push
jle
int
sahf
loopne
inc
out
into
push
sbb
daa
ret
out
scas
pop
scas
fldcw
adc
data16
xchg
inc
and
pand
roll
pop
dec
mov
mov
sbb
in
add
xchg
or
mov
mov
mov
mov
dec
and
in
or
dec
mov
inc
xor
xor
mov
jp
pop
add
cmp
dec
arpl
testb
clc
fidivl
mov
cmp
pop
dec
and
mov
xor
daa
in
rcl
cmp
outsb
ss
inc
popf
or
aad
jp
xchg
dec
adc
punpckhwd
dec
xchg
aam
fcompl
mov
mov
xor
and
std
lret
cmp
out
mov
loop
jo
xlat
movl
and
add
dec
jecxz
jbe
cwtl
cmp
loop
imul
test
adc
pop
cld
adc
pop
pop
cmp
out
fildl
clc
mov
ffree
dec
mov
js
cli
push
push
adc
dec
pop
jnp
add
mov
scas
push
mov
arpl
stos
lret
pop
mov
sub
xchg
loopne
xor
mov
sti
push
add
sub
fisttpl
xlat
stos
push
jl
shrd
and
iret
pop
xchg
xor
inc
sbb
jnp
jp
je
mov
dec
ljmp
or
cmp
dec
stos
mov
or
mov
dec
push
push
inc
icebp
iret
out
lock
mov
mov
push
clc
pushf
aad
enter
aam
dec
aaa
fldl
aas
dec
xlat
outsl
test
dec
push
aaa
inc
clc
xchg
mov
lods
aaa
xor
roll
mov
scas
rorb
pusha
sbb
scas
arpl
js
lret
lods
mov
jmp
pop
ss
stos
lahf
aam
adc
pop
mov
inc
in
shrb
lret
cmpsb
in
xchg
daa
pop
jp
or
cltd
in
test
addr16
jg
clc
xchg
jns
out
test
mov
ds
xchg
jae
add
add
mov
add
jmp
fmul
jg
adc
les
jle
jecxz
dec
hlt
jae
mov
sub
mov
imulb
pop
jbe
leave
pop
fidivs
xchg
xchg
mov
ss
scas
popf
sub
repz
subb
scas
lahf
shrl
aam
push
loopne
out
sbb
dec
int3
cmpsl
inc
adc
xchg
or
cld
test
jae
xrelease
gs
ds
sbb
xchg
xchg
xchg
jecxz
js
fisttpl
in
or
or
mull
nop
inc
ljmp
scas
andl
insb
notl
scas
ret
stos
pop
jb
or
cmpl
ss
imul
sub
repnz
fwait
test
sub
scas
mov
and
cltd
test
rolb
or
popf
test
mov
rcl
aam
ds
testl
mov
cmpsb
mov
pop
jae
jl
fwait
into
inc
movsb
inc
outsb
jbe
cli
push
and
cwtl
and
mov
loop
or
add
pop
push
test
ret
xor
inc
jb
dec
add
push
dec
sbb
pop
shrb
arpl
inc
cmp
pop
rclb
sbb
adc
mov
popa
mov
icebp
sub
lret
inc
push
mov
and
or
pushf
pop
stos
pop
dec
lea
jl
outsl
mov
popf
stos
cmp
imul
scas
test
rol
imulb
subl
in
enter
xor
mov
xchg
sub
or
ret
pop
ror
sbb
dec
and
into
ficoms
enter
pop
or
mov
mov
test
int3
sbb
cmpsb
mov
popf
inc
sub
out
add
xor
imul
or
insl
sub
jo
pushl
ret
popa
shll
sub
or
add
xor
xor
mov
jge
mov
test
xor
push
adc
cli
cmc
push
mov
cmpsb
ja
pop
les
sbb
jno
rorl
out
js
in
sbb
stc
inc
pop
aas
cld
pop
lret
shlb
scas
xchg
add
and
aad
stos
cltd
pop
xor
push
out
jmp
adc
add
mov
or
in
fs
cmc
popf
mov
pop
scas
test
fstpl
jge
pop
pop
rcrl
and
and
push
and
xchg
test
cwtl
or
in
cmpsb
xchg
fnsetpm(287
popa
mov
test
sub
pop
lahf
jl
jg
cld
daa
adc
jbe
dec
out
xchg
movb
sub
lcall
test
lods
and
mov
mov
pop
loop
in
xchg
cmpsl
out
cs
movups
sub
sbb
test
pop
dec
lods
xchg
sarb
test
cmp
mov
ret
mov
out
shrd
loope
stc
pusha
jb
rolb
sbb
pop
push
xchg
pop
fidivrs
pop
ss
ja
fistl
cmpsl
scas
imul
sub
mov
and
push
push
inc
pop
stos
push
enter
mov
jb
lahf
xchg
jb
dec
arpl
lock
xor
cwtl
mov
or
clc
roll
mov
rol
mov
rcrb
and
daa
inc
cli
daa
pop
cmp
xchg
xchg
push
shlb
enter
movsl
xchg
test
or
mov
sub
daa
push
int3
mov
out
ret
packsswb
int3
repnz
dec
sbb
inc
and
lret
test
fidivrl
fisubs
push
out
in
cmpsl
mov
das
js
mov
movsl
push
mov
sahf
jp
jecxz
dec
addr16
movsl
jle
adc
daa
mov
inc
icebp
adcl
ds
es
popa
fwait
jns
ljmp
sub
sbb
std
sub
stos
std
ss
mov
dec
loopne
imulb
mov
push
int
push
mov
fwait
xor
pop
jle
pop
pushf
aas
je
xchg
cld
stc
std
mov
inc
sub
push
iret
xor
or
push
cmp
xchg
shll
dec
lcall
pop
dec
test
jle
cmp
sub
adc
in
add
xchg
inc
xor
dec
in
mov
fistl
pop
adc
sbb
push
not
rclb
scas
shld
jl
in
rorb
mov
or
int3
mov
shl
leave
scas
addr16
mov
sub
mov
out
cmp
jmp
sub
cmp
repnz
rolb
lahf
push
fldenv
mov
divb
test
mov
push
pop
jge
cwtl
or
fistpl
pop
adcl
inc
jle
jo
mov
push
pop
ror
push
les
jmp
inc
jmp
jnp
rorl
jge
cmp
jae
mov
ss
jb
pop
stos
orb
in
mov
decb
into
repnz
push
or
xchg
pop
cld
mov
sub
add
and
mov
sti
nop
cmc
div
push
ljmp
mov
mov
ret
out
sbb
ljmp
movsl
js
sbb
sub
pop
test
jecxz
mov
je
mov
pop
push
xor
xchg
idiv
fistl
rolb
mov
cmp
sub
push
mov
xor
cmc
pop
hlt
mov
pop
enter
sbb
push
jns
mov
and
aaa
cmp
jns
int
es
fisubrs
or
mov
aam
testb
add
jmp
pusha
mov
and
loopne
idivl
xchg
test
adc
inc
int3
pop
jmp
out
roll
outsl
ret
adc
dec
aad
sub
and
push
cmp
dec
xchg
push
lahf
sbb
stc
or
push
add
push
mov
and
in
data16
out
pop
adc
mov
pushf
ret
mov
aam
mov
arpl
arpl
and
enter
jae
pop
popf
mov
dec
lds
push
xor
pop
fcmovne
mov
add
loop
movsb
cmpsb
outsb
jge
mov
out
js
mov
enter
test
into
sbb
clc
aas
sbb
mov
cmpsl
imul
and
insl
inc
dec
enter
jecxz
dec
hlt
jle
inc
jmp
xchg
lock
inc
cmpl
pop
std
and
and
mov
pop
push
imul
fstpt
fistpl
idivl
out
dec
stos
pop
test
or
test
cmp
lcall
pop
into
int
or
lcall
mov
mov
cwtl
aad
addr16
add
cmp
adc
mov
sbb
insb
mov
fisubrs
test
pop
dec
sti
out
faddp
sbb
inc
mov
or
mov
data16
pop
iret
and
inc
rorl
mov
cmpsl
mov
add
mov
les
mov
xor
rorb
sbb
adc
ret
stc
dec
cwtl
cmpsl
mov
in
movsl
pop
push
popf
enter
test
push
addr16
sti
cmp
insb
imul
fcmove
lahf
daa
pushfw
imul
inc
sti
es
jnp
cmpsb
fisttpll
sbb
mov
nop
mov
fwait
push
jnp
xchg
dec
xor
or
jae
jne
and
pop
mov
fs
jl
adc
cld
fucomp
mov
and
fnsave
pop
xor
push
dec
adc
add
or
adc
xor
inc
mov
fsubl
mov
or
sbb
pop
mov
into
jns
mov
cmp
cs
sbb
in
inc
inc
jecxz
or
stos
mov
cvtps2pd
icebp
sbb
fs
outsb
in
sub
les
loopne
lcall
in
dec
int
dec
pop
les
cmpl
aad
pop
pop
jnp
je
jo
mov
out
fadds
into
sub
fld
push
dec
loop
sbbl
inc
sbb
mov
daa
sbb
aad
fists
adc
in
push
in
xor
das
bound
pop
xchg
movsl
push
ss
inc
sbb
sbb
lret
fs
test
aaa
out
cltd
lods
out
loop
xor
pop
mov
sti
adc
xor
pop
add
jns
fsubrl
adc
jo
xor
push
das
push
push
and
xchg
adc
pop
rcll
shr
rcrb
ficomps
addr16
mov
inc
push
sbb
cmp
sub
stc
mov
jne
add
ja
clc
psllq
fsubrs
mov
mov
jno
mov
adc
pushf
dec
pop
ljmp
inc
cmp
inc
lcall
movsb
lret
xchg
fucomi
int3
imul
jns
rclb
les
pushf
push
js,pt
int
push
bound
dec
lcall
pop
pusha
adc
faddl
and
jmp
jl
ficomps
inc
loopne
loop
xchg
jp
mov
out
push
pusha
and
ja
xlat
test
xchg
mov
bound
jmp
inc
arpl
sbb
inc
and
add
in
ret
in
stos
mov
mov
stc
mov
lcall
add
pop
mov
jl
les
push
fists
cmc
lock
cmpsb
std
mov
pusha
roll
cwtl
xchg
jnp
repnz
push
and
mov
addl
inc
rol
jae
push
ja
enter
aaa
add
cmp
mov
jmp
in
add
xchg
jns
or
mov
jp
push
mov
fucomi
shl
inc
test
shl
sub
insl
and
lret
and
cld
nop
mov
xor
xor
aas
mov
xchg
rorl
sub
movsb
int3
pop
outsb
cld
repnz
cld
xchg
inc
in
cwtl
pushf
xchg
or
ficompl
add
dec
sbb
xor
adc
test
jle
into
sti
in
lods
sbb
movsl
nop
sub
out
xchg
shl
dec
rolb
add
jns
mov
jae
repz
loop
or
jnp
inc
mov
fcmove
lds
mov
popa
ret
cmpsb
cwtl
addl
push
pushf
adc
test
jge
xchg
loop
nop
push
fstpl
push
inc
or
iret
pop
outsb
adc
pop
cmpl
push
inc
shrl
loop
enter
rcll
cmp
jmp
sahf
shl
xor
int
mov
icebp
repz
sub
cmpsl
adc
test
mov
xchg
inc
mov
mov
fistpl
pop
sbb
inc
sar
jg
jo
jnp
loop
cmp
and
pop
pop
mov
sub
test
jb
loop
pop
aad
push
cli
mov
and
sbb
lods
loopne
mov
adcb
push
outsb
pop
lret
cld
gs
hlt
andb
rcll
mov
inc
test
adc
cs
test
inc
jge
and
insb
fs
out
les
or
fmuls
sub
xchg
stc
icebp
lds
arpl
xchg
loop
insb
fbld
jns
push
scas
out
sub
mov
cmp
insl
fmuls
mull
ss
pop
cwtl
arpl
mov
pop
repz
lret
mov
out
xchg
sbb
pop
out
pop
lret
shrb
pop
std
mov
dec
mov
mov
pop
addr16
mov
add
cs
dec
jne
gs
pop
mov
xchg
jge
aaa
mov
cmc
inc
shlb
dec
pop
mov
gs
sbb
adc
and
pushf
mov
fwait
into
fwait
clc
and
outsb
inc
ja
test
fildll
inc
jo
daa
std
xor
popf
mov
mov
sbb
sub
sbb
repnz
inc
insb
sbb
jae
lret
loop
outsb
in
add
mov
mov
aam
rcr
mov
xchg
push
inc
fdivr
jp
cmpsl
lret
xlat
xchg
cmc
sub
movsl
and
out
subb
sahf
lcall
jecxz
bnd
jbe
sbb
xor
fmul
lcall
jl
scas
xor
sub
rclb
add
push
cmpsb
and
sahf
std
push
ss
push
outsb
inc
cmp
dec
loop
inc
jbe
inc
mov
sbb
sub
call
mov
mov
xchg
adc
loop
mov
push
fadds
jle
shr
sub
pop
fisttps
xchg
rclb
aam
in
push
push
fs
sti
test
int3
mov
dec
push
xchg
add
jle
jb
adc
and
inc
jo
push
pop
jno
push
imul
push
in
jns
sbb
and
pusha
add
xchg
or
cli
xchg
push
pop
pop
xor
xchg
jnp
inc
jle
jmp
mov
inc
mov
sub
in
loopne
mov
jnp
daa
dec
aaa
ds
jge
add
xor
aad
nop
loop
sbb
mov
xchg
jg
addl
mov
jns
sub
jae
iret
ror
ret
insb
cmpsl
mov
push
outsl
mov
inc
cmp
cli
ja
adc
sub
push
pusha
les
bound
shl
jmp
pop
dec
pop
jns
mov
dec
cli
push
add
test
fwait
out
into
stc
cltd
and
test
cli
stc
xchg
inc
or
pop
mov
mov
xchg
xor
sub
fwait
lret
int3
lods
or
out
and
sahf
ja
dec
je
roll
pop
into
xor
fcmovne
cmpsb
pop
aas
jbe
inc
add
adc
cmc
dec
call
mov
scas
leave
into
jnp
or
push
outsb
adc
add
rcr
jns
clc
je
jbe
cltd
pop
enter
adc
aaa
popa
push
sti
xor
ret
or
sub
pop
cld
addb
je
bnd
mov
pop
call
adc
rolb
cltd
add
int3
out
sbb
cmp
pop
push
pop
aam
mov
out
aas
or
inc
mov
xchg
sbb
jo
inc
pop
push
or
out
pusha
lea
movsl
mov
and
pop
jp
cmpsb
in
inc
xlat
dec
movsl
fdiv
clc
mov
es
inc
repnz
std
andl
int3
sub
and
xchg
add
sub
xchg
stos
cmpsl
adc
in
iret
into
sahf
or
adcl
sbb
push
std
imul
ficompl
shlb
mov
push
adc
or
jmp
out
lods
jg
les
mov
loop
push
xchg
test
dec
imul
add
push
es
mov
jne
mov
pop
int3
cmpsl
cmpsb
lcall
adc
xchg
mov
imul
jns
push
lds
mov
sub
testl
jbe
into
mov
pop
and
leave
mov
and
jmp
sbb
shl
jnp
xor
and
cs
incb
std
scas
sub
inc
jb
faddp
rcrb
xchg
leave
push
mov
jne
dec
sbb
ds
add
mulb
push
sub
mov
imul
jno
in
inc
cltd
cmpsl
popa
sbb
test
sbb
cltd
testb
shll
insb
rclb
pushf
mov
mov
dec
push
insl
push
cli
dec
mov
inc
ss
mov
xor
cmp
das
jp
in
adc
ja
cmp
sbb
mov
mov
ret
loop
jnp
mov
test
or
and
out
jmp
jle
cmp
negb
dec
mov
into
fiaddl
lods
adc
fsubr
jnp
inc
xor
in
xchg
xchg
es
sbb
sarb
dec
lods
ret
inc
sub
pop
lahf
adc
xchg
clc
inc
test
inc
fnstenv
inc
xchg
sub
cs
adc
clc
dec
xchg
sub
testl
mov
sub
push
cmc
in
repnz
sub
mov
cld
loop
outsl
je
add
test
pop
loope
lods
adc
push
jg
inc
mov
es
push
ja
push
add
jno
ss
shlb
mov
xor
ret
testb
xor
nop
adc
xor
aam
lods
dec
push
and
stos
pop
or
ret
mov
mov
jnp
mov
xchg
repz
xchg
xchg
arpl
aas
push
pusha
xor
inc
mov
loope
test
inc
push
push
pop
std
int
iret
inc
orl
fdivrs
std
xorl
mov
and
jmp
xchg
jno
add
adc
jge
lcall
mov
ret
testb
mov
fidivs
adc
shrl
rcr
sti
test
mov
cmc
push
inc
adc
push
mulb
xor
xor
xchg
cmp
sub
insb
arpl
int
push
sbb
cld
mov
test
nop
mov
cmc
movsl
js
push
add
jns
cmp
xor
or
cmp
inc
or
push
jbe
stc
mov
sbb
cmc
or
xlat
outsb
cld
and
pop
mov
stos
cs
push
jae
loop
or
pop
scas
div
mov
and
xchg
xlat
push
insb
pop
push
and
lds
push
sbb
add
push
pushf
insl
in
push
sahf
stos
lea
lret
nop
fisubrs
mov
xor
or
cli
rolb
leave
fcomps
add
das
lods
loope
xchg
mov
or
notl
loope
inc
jmp
and
leave
mov
ds
xchg
pop
xchg
test
repz
mov
in
popa
inc
sub
or
inc
dec
frstor
adcl
aam
ljmp
xchg
hlt
add
mov
xchg
test
push
push
push
into
lock
mov
pop
mov
std
arpl
lret
dec
adc
mov
pop
test
push
xor
or
inc
imul
xor
inc
jno
dec
push
push
aad
xchg
mov
cmpsb
sti
aas
mov
mov
dec
jns
mov
ja
or
jp
outsl
cmpsl
iret
arpl
cli
fwait
or
enter
dec
leave
mov
dec
fstpt
shrl
ficompl
xor
mov
sbb
jg
mov
iret
mov
test
in
outsl
push
outsb
mov
sub
out
mov
mov
xor
data16
cltd
lcall
into
mov
jne
mov
fadds
cmp
std
sbb
sub
lret
push
fadd
mov
sarl
cmp
mov
and
in
dec
enter
lcall
mov
sarb
orb
push
out
inc
and
mov
into
xchg
pushf
dec
lock
mull
es
sub
ret
dec
aaa
fnsave
jnp
loopw
rcl
cmp
es
add
lea
shufps
imul
push
imul
jae
cltd
and
inc
insb
jmp
in
cmp
pop
into
jle
shrl
mov
sbb
sbb
ljmp
pushf
xor
mov
pusha
pop
lods
xchg
mov
pshufw
xor
cwtl
insl
and
and
and
xchg
cmpsl
std
loope
xor
sbb
scas
dec
jl
gs
js
lea
test
daa
sarb
cmp
or
ss
in
test
push
clc
mov
outsb
repnz
rclb
mov
adc
ret
mov
cwtl
jl
pop
je
sbb
pop
popf
leave
test
stc
int3
sub
push
push
push
ret
inc
cld
sbb
ficomps
cmpsb
push
mov
xchg
dec
test
cmc
dec
cmp
mov
fstl
leave
xchg
mov
mov
pushfw
add
repnz
or
push
stc
xor
cmp
in
push
pushf
ljmp
stos
mov
ret
not
pop
jne
arpl
xlat
clc
out
cmp
repz
fwait
xor
jb
sti
movsl
cwtl
stos
icebp
sbb
push
insb
ljmp
push
fwait
mov
sbb
push
shll
mov
adc
xor
and
pop
xor
in
loop
lds
pop
fiaddl
jo
xchg
js
popa
jo
cmp
sbb
enter
test
dec
mov
cld
lcall
sti
sbb
f2xm1
out
insl
xor
lret
sub
adcb
xor
in
cmp
call
fwait
dec
pop
ja
add
adc
jnp
out
ror
insl
mov
xchg
ret
mov
cmp
mov
dec
and
inc
fimuls
jmp
sub
mov
mov
test
and
in
ja
push
xchg
inc
add
sub
stos
bound
mov
pop
pop
mov
or
xor
das
push
jg
pushl
clc
mov
add
mov
sbb
mov
test
sub
adc
xchg
stos
js
mov
adc
push
fbld
push
mov
loopne
mov
movsl
xchg
ficoml
xlat
mov
dec
pop
sbbl
outsl
jge
clc
adc
jecxz
lods
jo
fisubrs
push
popf
jns
fsubp
cmp
push
ss
push
pop
adc
pop
jne
lea
out
bsf
mov
cmc
sarb
inc
jns
test
out
pop
stc
jb
sbbb
pop
outsb
in
mov
imul
mov
dec
enter
dec
jecxz,pt
inc
repnz
inc
xchg
adc
pop
sbb
stos
pop
out
arpl
sbb
push
inc
add
sub
fcoml
lret
outsb
enter
in
xlat
pop
ror
pop
sub
mov
inc
bound
mov
pop
mov
pop
adcl
xchg
adc
push
popf
daa
data16
adc
repz
imul
push
sub
dec
fildl
sbb
push
je
xor
push
jno
test
mov
pushf
lret
mov
pop
cmp
cltd
pop
imul
mov
inc
xchg
mov
jl
cmpsl
lahf
or
push
icebp
stos
fstpl
jo
pop
sbb
fcoml
stos
sbb
mov
lcall
hlt
inc
sahf
or
mov
sub
jle
adc
jl
es
testb
inc
or
sub
mov
cmpb
and
testl
cwtl
xchg
or
pop
fdiv
lret
rorl
jne
jbe
imul
cmp
out
fsubr
mov
jge
sti
rorb
sbb
loopne
pop
stc
sbb
insl
mov
xor
adc
fcomps
scas
out
mov
or
loope
sbb
push
push
lods
adc
xchg
add
push
adc
not
or
rolb
xchg
cmp
mov
push
outsb
xchg
jmp
pop
adc
lea
lahf
test
sub
mov
idivl
xchg
mov
aam
mov
in
out
sbb
push
stos
dec
dec
ljmp
pop
stc
pop
cmp
je
cld
notb
add
sub
inc
repz
adc
leave
push
sahf
jns
cmp
jae
xchg
cli
mov
adc
mov
mov
dec
mov
jnp
clc
aaa
ret
or
xchg
pop
aaa
sub
mov
fs
popf
into
jne
inc
xchg
push
in
pop
sub
mov
jg
fwait
and
rolb
arpl
sbbb
adc
or
pop
adc
push
movntq
mov
mov
insl
cmp
lods
in
into
arpl
and
jecxz
dec
outsl
outsl
out
push
xorl
mov
int3
fidivs
push
in
sbb
in
aaa
mov
icebp
outsl
pop
aad
test
leave
xchg
pop
and
mov
icebp
aad
mov
in
jae
mov
loopne
jge
pop
dec
imul
inc
div
icebp
imulb
js
test
jnp
lahf
std
sub
sbb
loope
cmp
out
ljmp
dec
les
jmp
lock
or
decl
jmp
sbb
addr16
inc
test
ja
fwait
sbbb
push
inc
aam
cmpsl
cld
jmp
sub
mov
aas
das
pop
hlt
fnstsw
dec
cs
push
jae
ret
mov
jns
enter
or
testb
adc
push
scas
mov
pop
mov
fistpl
push
pop
sbbb
and
and
xchg
sbb
mov
lock
push
ss
std
sahf
int3
out
mov
lods
dec
pop
inc
ss
insl
or
rorb
mov
shr
cmp
and
push
andb
sub
sbb
rep
sbb
rcrl
mov
lret
mov
test
fadd
pop
xor
add
add
cmpsb
popa
mov
mov
scas
jge
mov
and
repz
or
hlt
mov
mov
adcl
data16
cmpb
repnz
imul
cltd
push
ds
lret
daa
push
push
pop
mov
sti
xchg
adc
pop
jecxz
cld
insb
icebp
push
imul
adc
sub
inc
fadd
movsl
rolb
jge
jl
sbb
clc
xor
ds
sbb
cmp
insb
lcall
xchg
sbb
jl
push
pop
jp
mov
or
loop
xor
push
int
pop
movsb
sub
push
pop
add
in
movsl
xchg
xorl
mov
negl
push
loopne
popa
mov
xchg
jnp
and
shlb
andb
adc
fwait
adc
bound
int
adc
add
cmpsb
mov
xchg
cmp
cmpsl
mov
orb
mov
mov
sub
insl
fxch
fsubrl
daa
enter
shlb
ds
ret
sub
add
mov
inc
in
stos
fbld
push
enter
sbb
pop
lcall
in
mov
test
test
xor
dec
andl
mov
stc
hlt
adc
loope
rcrb
ja
insl
ret
jp
ret
sub
mov
imul
addr16
mov
inc
lds
xor
insl
std
jmp
xor
cs
mov
pop
cli
push
fucomp
add
cwtl
gs
xchg
mov
into
in
mov
jno
test
adc
mov
dec
mov
inc
mov
repz
insb
and
xchg
xor
adc
xor
ret
xorl
xchg
and
jmp
mov
fldl
adcl
jg
out
push
scas
in
xchg
clc
jbe
imul
aas
pop
push
out
cmp
mov
ret
add
dec
jle
push
in
push
push
cwtl
xchg
xchg
sub
iret
pusha
push
inc
cli
mov
cmp
iret
xor
insl
es
lret
jmp
inc
data16
les
movsb
lods
push
call
sub
lret
push
cli
orl
fiaddl
jle
and
mov
mov
xor
mov
push
pop
repnz
ds
push
fidivs
std
repnz
pushf
jne
pop
mov
in
gs
aam
push
fsubrl
push
xchg
gs
cmp
rcrb
pop
xorb
xorb
shrb
stc
test
sbb
mov
loope
mov
mov
addb
jmp
inc
test
loope
stos
orb
insl
adc
pop
fcomi
jmp
ret
je
das
inc
xchg
lods
shlb
iret
add
jl
lea
push
cli
stos
inc
test
mov
lds
mov
cmp
cmp
subb
js
dec
mov
cld
fs
xor
push
cmp
dec
cli
adc
inc
in
fdivrl
cwtl
pop
push
aam
cwtl
cmp
stos
sbb
cmp
xor
inc
cmc
negb
mov
or
pusha
mov
add
sbb
pop
pop
push
sti
adc
rcrb
inc
repz
jle
outsl
or
ror
or
inc
mov
and
ficoml
xor
out
fiadds
push
rorl
jg
in
jle
sbb
aad
inc
cld
lods
add
aam
and
xor
addr16
xor
and
out
test
or
jb
sbb
xchg
cmp
jmp
push
data16
jbe
imul
jno
xlat
sbb
jg
jo
mov
add
test
xchg
dec
clc
xchg
xor
movsb
ucomiss
inc
jo
hlt
sub
sub
cwtl
cs
cmp
testb
sbb
add
std
negl
jns
adc
ret
add
mov
outsb
mov
or
dec
adc
xchg
mov
pushf
subl
mov
and
mov
dec
mov
dec
bound
in
mov
sbb
mov
mov
imul
sub
in
adcl
push
test
xor
into
lea
pop
mov
pop
ret
in
addr16
lods
xor
fsubl
or
data16
in
sahf
adc
std
lret
stos
ficomps
sbb
in
gs
clc
out
enter
xchg
loope
iret
xchg
push
pop
notl
in
inc
and
mov
lcall
fsub
pop
push
jbe
push
adc
mov
shlb
mov
popa
xchg
outsb
idivl
push
int3
mov
sub
and
add
in
das
stc
and
repnz
mov
ja
jle
and
scas
notl
xor
mov
cmp
sub
in
mov
outsl
mull
mov
inc
inc
and
jmp
push
arpl
and
xlat
repnz
xchg
xorb
scas
mov
dec
adc
fcmove
loope
jmp
push
pop
push
jge
push
in
dec
test
mov
je
das
stos
ja
rolb
xor
sbb
cmp
aad
mov
sub
jl
lds
cmp
lcall
cmp
push
fxch
out
ret
dec
imul
dec
test
mov
into
cs
jge
dec
test
and
arpl
jbe
and
jno
jecxz
ret
pop
inc
inc
cmp
dec
and
into
outsb
lods
loop
pop
inc
mov
lods
sbb
sbb
mov
cmp
shll
das
daa
ret
fwait
pop
pop
nop
jb
icebp
adc
popa
pushf
aam
daa
arpl
adc
mov
xchg
cmp
pop
cmpsl
xchg
test
shll
sub
sti
test
icebp
jbe
test
jle
iret
push
sub
mov
ss
pop
xor
dec
mov
enter
cmp
or
icebp
scas
add
dec
out
fs
scas
popa
inc
out
xchg
xchg
jg
scas
inc
jp
pop
mov
je
add
enter
mov
adc
std
or
roll
jmp
outsl
std
rcrl
clc
les
mov
call
sub
sbb
cmp
inc
add
mov
rcrl
adc
jb
mov
dec
and
add
mov
add
push
mov
pop
push
push
xor
in
loope
gs
cmp
hlt
mov
sbb
gs
add
lret
cmp
lods
pop
or
mov
andl
rorl
ljmp
fcoms
or
lcall
in
in
movsl
out
mov
fistl
js
movsb
clc
dec
adc
inc
fistl
shlb
cwtl
sub
test
push
mov
sbb
jp
lret
enter
loop
mov
xchg
xchg
sub
xchg
sti
daa
filds
rclb
jnp
push
fs
mov
add
div
fldt
pop
mull
sub
mov
ds
cmp
gs
xchg
sub
and
push
out
es
cmp
jg
pop
push
pop
adc
sbb
pop
int3
mov
dec
jmp
insb
inc
lret
add
jle
addl
adc
lret
jmp
xlat
out
jb
push
clc
adc
daa
mov
adc
sbb
pop
sbb
lret
sbbl
jns
mov
dec
rcrl
fwait
bound
pop
arpl
xchg
rclb
pop
xchg
ret
jle
cmpsl
cmc
decl
push
cltd
jg
xchg
lahf
adc
xor
mov
jnp
insb
stc
loope
mov
xor
mov
popf
push
cmp
fnstsw
push
mov
repnz
scas
xchg
sub
dec
pop
movsl
pop
dec
jl
xor
ss
pushf
jge
mov
and
xor
loope
xor
stos
adc
dec
sbb
pusha
fisubs
call
jecxz
aad
cmc
inc
or
in
movsl
fdiv
xor
outsl
mov
sbb
das
scas
es
mov
mov
in
add
ret
push
or
test
push
pop
mov
push
dec
jecxz
jl
repz
add
cmp
enter
pushf
jbe
cmpsb
mov
dec
emms
push
sbb
repz
adc
add
adc
mov
js
pop
popa
push
push
sbb
lock
repnz
cmpsl
sahf
int
cmc
dec
sbb
out
xor
mov
loope
sti
rorl
mov
pop
xor
fsubl
push
fs
jb
js
push
gs
and
and
cmc
or
ret
jbe
cmp
inc
or
mov
add
imul
stos
jns
aad
mov
dec
jp
movsb
loop
mov
cs
popa
ss
add
or
xchg
or
shl
lret
pushf
pushf
aaa
mov
push
out
ret
jmp
mov
and
daa
es
ja
lret
cmp
push
mov
jg
popa
push
mov
pop
lds
sarb
dec
addb
mov
das
lret
xor
xchg
cld
loop
xor
mov
mov
push
in
push
push
jle
push
adc
xchg
and
mov
cmp
add
sbb
xchg
daa
mov
inc
aam
int
out
sub
dec
dec
inc
jbe
mov
push
stos
inc
je
mov
outsb
inc
inc
xchg
mov
mov
ret
gs
add
insb
nop
inc
pushf
loop
out
lcall
add
push
jmp
pop
xor
push
pcmpeqb
pop
mov
es
repnz
add
shll
push
add
mov
or
xor
mov
pop
andb
sbb
bound
or
push
xchg
push
pop
adcb
mov
mov
call
xchg
dec
nop
ss
ja
cli
loope
scas
add
popa
mov
lahf
or
and
xchg
dec
ja
xor
jbe
mov
ret
mov
mov
jne
rorl
cmp
outsb
test
mov
jmp
cs
inc
movsl
stos
push
dec
fwait
adc
ret
stc
cmp
lcall
in
mov
fiaddl
loope
sahf
fwait
scas
inc
add
ss
jns
pop
in
dec
out
out
lret
inc
psubusb
fnstenv
clc
pop
push
mov
add
mov
and
jecxz
sarb
cli
std
xor
sub
push
rcr
gs
push
aas
icebp
xchg
xor
adc
push
inc
adcl
repz
loop
push
imul
mov
mov
xorl
add
sub
jns
addr16
inc
cmpb
loope
repz
shr
popf
pop
dec
repnz
adc
fisttpl
push
or
mov
in
dec
jg
shrl
jo
call
pushf
into
xchg
dec
sbb
ds
xlat
cmp
push
stos
jo
sbb
and
mov
scas
add
mov
push
int
lods
or
inc
or
push
lcall
int3
push
add
out
mov
cli
jmp
inc
cli
sbb
push
fsubrs
gs
mov
or
mov
cmp
int3
mov
cs
ret
cmp
push
incl
jne
add
aad
cmp
jb
stc
out
jbe
sbb
cmpb
idivb
loope
sub
xchg
jns
mov
inc
outsl
and
pop
test
cli
imul
gs
mov
jnp
fistps
ss
pop
push
enter
sub
aad
sar
fadds
int
mul
jge,pn
push
sbb
pop
xor
call
mov
icebp
sub
lcall
hlt
sub
jns
mov
xchg
pop
push
lret
or
add
and
and
repnz
repz
test
mov
pop
mov
pop
ljmp
push
push
popf
subb
shlb
iret
adc
pop
sub
cmp
sub
mov
adc
mov
jmp
push
dec
and
es
mov
push
mov
jno
out
inc
mov
inc
fildll
inc
xchg
inc
cmpsb
jecxz
aaa
push
adcb
jg
aaa
lods
dec
sbb
jae
out
jle
mov
push
aaa
sbb
je
fsub
cmc
and
or
mov
fidivrs
movsb
xchg
stos
cs
or
iret
pop
clc
xchg
add
imulb
cmp
in
add
pop
xor
mov
pop
outsl
xchg
xchg
movsl
push
mov
sbb
push
sub
ds
inc
das
and
dec
adc
ljmp
sbb
adc
xor
hlt
xor
xchg
mov
popf
lcall
movsb
dec
push
repz
cld
mov
ss
ret
inc
xor
xchg
jp
es
jb
and
mov
ljmp
test
pop
jno
pushf
sub
xchg
pop
pushf
add
cli
bound
cmpl
sbb
sub
sarl
sti
fstpt
insb
lret
push
xchg
in
mov
jb
cmpsl
pusha
push
inc
xor
pop
jns
dec
push
imul
dec
fcomps
jno
xor
popf
lds
popf
xchg
mov
sub
inc
test
es
repnz
test
mov
and
or
dec
adc
fmuls
daa
mov
lcall
rcll
aas
sub
fdivs
pop
out
or
loope
push
nop
lcall
sbb
cmpsl
mov
jmp
je
outsl
das
mov
iret
adc
movsb
mov
das
mov
push
and
cmp
clc
jae
mov
push
mov
add
sbb
mov
lock
scas
lret
add
jmp
lret
popf
movsl
xor
add
lds
data16
imul
dec
and
call
scas
call
mov
outsl
push
cmp
popa
inc
outsl
pop
cmpsl
jae
adc
mov
xor
ficoms
cmp
adc
and
mov
jne
les
add
lea
shlb
or
addl
aas
mov
sarl
stc
and
sbb
arpl
xchg
setp
out
add
push
add
mov
outsl
jg
movsl
movsl
mov
sub
int3
dec
xor
mov
aaa
leave
dec
and
andb
cwtl
lds
ljmp
in
cmp
scas
enter
lods
sub
ljmp
fldcw
inc
inc
jne
dec
jle
cmpl
shrb
adc
mov
lret
loopne
and
and
or
in
loope
lods
xlat
adcb
xchg
and
les
out
or
and
popf
jmp
inc
mov
jmp
jno
mov
cmp
inc
mov
pop
sti
insl
mov
xchg
cltd
inc
rolb
ss
test
shll
xchg
push
jmp
test
sbb
cs
sub
jecxz
push
mov
pop
test
mov
outsb
pop
push
fcompl
mul
fidivl
cld
lcall
pushf
jbe
push
sub
or
or
add
sbb
add
test
add
divl
je
cmpsb
ljmp
xchg
scas
jge
push
sub
outsb
sbb
sub
das
mov
test
dec
add
push
and
data16
loopne
xchg
pusha
nop
test
nop
cvtps2pd
add
das
ret
daa
repnz
xchg
jle
test
call
xchg
int
dec
out
add
ret
mov
adc
push
jecxz
jae
sub
in
pop
mov
cmp
sahf
and
xchg
xchg
sbb
sbb
dec
and
inc
mov
fstp
jg
int
dec
add
sbb
andl
sub
into
xlat
push
pop
aas
and
loop
jb
decb
lahf
test
rcll
dec
jg
add
mov
add
jmp
mov
cmpsl
push
mov
lods
stc
dec
push
push
push
shlb
push
aad
aam
jae
inc
jo
adc
inc
cmp
leave
add
dec
andb
test
push
jecxz
test
jae
push
and
jp
push
andb
xchg
xlat
iret
test
and
adc
sbb
cmp
int
idivl
inc
mov
dec
and
clc
sbb
arpl
mov
dec
cmpsl
ret
scas
xchg
push
fisubrl
jl
jg
xor
sbb
dec
adc
popa
jne
shll
cmp
rcrl
and
in
mov
int
add
ret
mov
shrb
cmp
add
push
aas
add
icebp
fnstsw
mov
sbb
pop
push
fiaddl
inc
jmp
les
les
cli
sbb
lock
mov
push
and
mov
sub
mov
frstor
bound
sbb
add
cli
test
xchg
xchg
psrlq
in
dec
shlb
and
push
fs
data16
xor
adc
or
sbb
or
lcall
jecxz
push
arpl
loope
cmp
jae
into
cmp
and
dec
pushf
fmull
sub
std
jmp
xor
addr16
call
mov
push
js
sub
dec
aas
and
test
sbb
sbb
mov
sbb
or
gs
cwtl
cmp
xchg
pop
lock
mov
clc
or
lds
stos
jnp
lahf
inc
movl
add
sub
xchg
and
negl
addl
lret
mov
clc
adc
adc
lea
movsl
xchg
xor
sbb
popf
cwtl
mov
stos
mov
std
out
outsl
and
mov
scas
mov
call
xchg
add
mov
push
loop
cltd
and
cmp
inc
lcall
fwait
mov
add
in
subb
adc
fnsave
cli
sbb
sub
andps
mov
leave
pop
fwait
mov
outsb
add
pop
jmp
icebp
pop
in
aam
aad
or
int
movl
stos
adc
xor
xchg
adc
adc
in
sarl
sti
mov
pop
push
in
jno
icebp
addr16
push
mov
xchg
mov
hlt
mov
mov
and
or
dec
test
sub
or
pop
pop
std
into
enter
inc
cmp
mov
lcall
ljmp
imul
xlat
pop
daa
sahf
pop
jmp
mov
push
xchg
faddl
callw
cmp
je
mov
aad
fs
inc
jne
sub
push
jp
inc
ss
das
inc
outsb
jmp
fistps
or
out
xor
xchg
or
mov
loopne
jg
in
cmp
test
aaa
inc
lcall
sti
test
jb
mov
dec
arpl
cmp
das
xor
call
int3
enter
gs
mov
daa
mov
sbb
insl
jmp
int3
daa
dec
cmpsb
xor
pusha
or
sub
xor
out
mov
iret
test
fdivrl
mov
or
xchg
ja
mov
enter
mov
push
adc
inc
rclb
push
pusha
scas
lods
sub
pusha
sahf
push
ficoml
repz
sub
sarl
jae
mov
inc
or
shl
lcall
push
int
aaa
lret
pop
xorl
lret
dec
pushf
adc
xor
cmc
bound
sub
jge
out
test
sahf
fnsave
mov
cs
ljmp
xchg
add
bound
fcoml
outsl
enter
cmp
cmc
push
dec
pop
xchg
dec
mov
out
inc
jl
push
int
fidivl
les
or
dec
mov
popa
int
jge
adc
icebp
popf
sti
stos
addr16
jmp
jmp
in
add
inc
cmp
pop
or
scas
push
mov
inc
rolb
mov
cmp
movsb
push
imul
loop
xchg
aaa
xor
jb
mov
in
aam
jnp
fwait
sbb
adcb
in
pop
cmpsl
sub
mov
icebp
scas
test
xor
fstpt
cmpsl
std
push
xor
out
inc
or
fmuls
sahf
negl
cmp
insb
rcrl
scas
outsb
push
and
adc
mov
xchg
gs
xor
fcompp
cltd
repnz
push
pop
jae
stos
jnp
sub
sbb
mov
sbb
cmc
das
adc
mov
rcll
mov
jns
je
push
shrl
in
push
and
and
dec
jo
xor
pop
fstl
rolb
lret
lcall
push
cmpsb
pop
pop
adc
adc
imul
stc
icebp
xor
repnz
lahf
dec
inc
cmp
daa
push
idivb
in
pop
sbb
jae
xchg
and
dec
mov
add
fadds
jne
jge
jae
jl
imul
and
inc
lds
fists
pop
test
sbb
andl
cwtl
xchg
lock
lret
into
leave
dec
mov
fsubrl
ss
mov
mov
sti
inc
jecxz
lods
mov
call
push
out
cmpsl
cli
jb
pop
xor
test
xchg
mov
jle
stos
clc
popl
adc
sbb
mov
rcll
xor
ret
mov
shrb
xchg
das
and
push
lods
incl
outsb
push
inc
data16
sbb
lret
and
push
arpl
adc
mov
enter
icebp
adc
lret
adc
lret
mov
or
in
std
shrl
add
jae
jmp
and
insl
daa
jecxz
jb
mov
in
push
outsl
pop
mov
xor
popf
or
and
out
test
sbb
xor
cmc
adc
adc
and
lock
add
js
pop
les
or
mov
sub
sbb
loop
pop
sub
enter
or
lods
testb
xchg
jo
test
cltd
mov
adc
loopne
add
cmp
and
cmp
cmp
stos
fiaddl
push
jl
mov
xchg
and
mov
push
or
mov
pushf
sub
mov
jl
popa
aam
jo
jae
xchg
pop
iret
inc
push
faddp
push
adc
or
fisttpll
out
fs
sbb
or
xor
cmpsb
or
iret
imul
imul
adc
aaa
inc
dec
xor
cmp
popa
push
adc
daa
xchg
hlt
adcl
cmp
in
inc
add
jge
mov
mov
mov
push
lret
and
push
lahf
cmpsb
mov
adc
adc
sahf
shrb
stos
jb
shll
mov
mov
sbb
fists
dec
in
inc
push
shll
cs
push
arpl
mov
aam
xlat
jle
sbb
sbb
shlb
neg
push
cli
rcrl
pop
aad
addr16
cmpsl
lods
rcrb
out
dec
ja
push
std
jmp
ja
dec
dec
popf
popf
xchg
cmp
aad
pop
dec
jnp
adc
xor
xchg
or
pop
cmpsl
jp
iret
fisttpl
mov
mov
inc
cmp
cwtl
je
sub
push
out
rorb
sbb
addl
xor
lods
xor
ds
xchg
pop
inc
dec
dec
bnd
shrl
filds
lds
xchg
jp
insl
lds
cs
outsb
leave
and
in
movsl
mov
jne
ret
jg
add
sarl
cltd
dec
push
aas
lea
mov
out
into
jbe
int3
and
cmp
push
dec
cli
adc
push
mov
pop
hlt
cmp
inc
fmuls
sbb
jg
xchg
shll
mov
and
scas
push
sub
mov
push
outsb
into
sbb
jbe
arpl
sbb
sarl
bound
fcmovbe
fidivl
sub
into
cli
bound
out
dec
mov
arpl
jge
mov
sub
mov
pusha
inc
mov
push
daa
aas
add
cmp
dec
in
add
daa
sub
and
push
jg
bound
aas
push
jecxz
add
rcrl
mov
aaa
fisubrs
int
into
aad
fucom
jae
push
ret
adc
loop
inc
pop
std
add
push
dec
push
lahf
mov
cmpsb
mov
xchg
scas
inc
inc
aas
push
and
cmp
in
stc
nop
ret
lahf
mov
out
aas
imul
inc
mov
repz
flds
pop
ret
pop
cs
or
push
pop
dec
loop
sti
sub
mov
jge
idivl
sub
into
stc
adc
or
ja
dec
lcall
jb
jg
outsb
mov
push
ss
and
test
mov
scas
in
insb
add
sbb
xchg
stos
mov
out
xor
aaa
pop
inc
or
ljmp
lcall
cmp
nop
xor
xor
loopne
mulb
sub
in
dec
mov
inc
push
jge
mov
aaa
xchg
lahf
repz
icebp
xor
inc
int3
stos
inc
in
test
xor
xor
loop
lcall
sub
hlt
into
and
bound
aaa
andb
fisttps
sti
loope
in
loope
cs
fsubl
in
sahf
mov
arpl
sub
lock
and
lods
jle
push
lret
mov
es
fistl
xchg
jmp
mov
jnp
sub
cmp
inc
add
sbb
and
hlt
daa
lock
movsb
and
enter
ret
aaa
adc
sbb
xchg
fneni(8087
sub
int
sbb
sbb
add
lea
dec
add
inc
cmp
hlt
shr
rclb
mov
jl
fucomp
int3
fsubrl
inc
jnp
mov
or
shrl
idivb
ja
and
sbb
inc
jp
xchg
stc
push
mov
imul
aas
mov
cmp
sahf
dec
fcomp
mov
inc
jle
aam
movsb
inc
or
jmp
add
xlat
dec
out
sti
mov
in
pop
aad
add
js
stos
push
sub
jl
insb
test
mov
cmp
je
sti
cltd
adc
and
es
and
int3
xchg
add
jecxz
lahf
sbb
mov
xorl
xchg
and
push
push
cmp
sti
mov
insl
lea
push
jns
jb
orl
cli
mov
xchg
repz
mov
in
mov
sub
dec
sbb
ret
in
xor
repz
mov
or
inc
mov
push
imul
push
fistps
cmc
dec
ja
mov
mov
testl
test
jnp
faddl
jl
sahf
pop
xchg
pop
in
inc
loopne
test
or
sub
mov
pop
in
inc
jge
lea
and
loopne
push
mov
and
mov
ret
mov
imul
out
fsubs
adc
jle
pop
pop
imul
adc
insl
aaa
lods
sar
or
arpl
mov
inc
lock
and
stos
test
lods
sub
push
add
cmp
jmp
cmpsb
std
cmc
fimull
xor
je
sub
jecxz
insw
mov
fs
ds
out
pop
nop
sarl
and
sbb
add
mov
inc
ja
add
or
xlat
test
arpl
sarb
in
out
jbe
dec
call
push
mov
cltd
scas
mov
mov
xlat
dec
inc
mov
inc
add
mov
cmp
push
testl
insb
rcr
xlat
and
adc
enter
aaa
int3
jns
push
rcrb
lods
mov
push
mov
mov
andb
mov
sub
push
mov
outsb
ror
out
cwtl
lods
mov
push
cmp
lahf
sbb
mov
cmc
and
scas
cmp
jl
les
out
mov
pop
adc
fidivrs
shl
repnz
adc
push
inc
sti
or
les
sar
shll
lock
dec
push
cmpsb
lods
push
jae
jl
mov
repz
jno
pusha
xor
dec
sbb
xchg
nop
scas
aas
mov
push
mov
mov
cmovo
clc
xor
ds
aas
pop
lock
arpl
xchg
fnstcw
pop
or
pushf
mov
cmp
xchg
aaa
xor
cltd
sub
flds
push
xchg
sbb
outsb
inc
sub
ss
fwait
movsb
fsubp
jmp
insl
aaa
orl
mov
dec
or
push
lret
add
mov
push
int3
cmp
stos
aam
push
imul
jno
rolb
pop
jg
loope
add
inc
adc
mov
cltd
aam
cs
jns
insb
scas
ja
xchg
sbb
imul
dec
fdivs
lret
shl
ret
lret
out
cmp
push
mov
cld
cmp
mov
jle
popa
dec
mov
inc
out
cmp
fs
cmp
pop
pop
enter
jne
js
sub
popf
cs
lock
jne
inc
test
xchg
jge
cli
mov
and
mov
ljmp
lds
jbe
mov
fldcw
cmp
jno
lods
mov
pusha
xor
add
push
pop
mov
imul
push
call
fsts
sub
cli
xor
pop
mov
call
jne
xor
mov
mov
imul
iret
mov
mov
add
ret
xor
and
stos
push
and
mul
or
add
add
sbbb
xchg
or
cmp
or
gs
lock
pushf
scas
fmul
push
fnstsw
test
xchg
mov
test
adc
push
lcall
sub
inc
push
lods
ljmp
xchg
lods
mov
and
loopne
and
push
sub
pop
popf
fwait
inc
stc
call
dec
popf
cmc
stos
sbb
hlt
cltd
jge
gs
add
pop
dec
aaa
add
fs
cs
jnp
shll
popf
cmc
add
sbb
sub
fcompl
aaa
mov
fdivrl
repnz
cmpsb
xor
cwtl
iret
nop
fwait
iret
lds
mov
insb
inc
faddl
cltd
xchg
mov
fsubrp
mov
push
lgs
imul
mov
adc
xlat
mov
inc
mov
pop
loop
sbb
mov
ljmp
mov
adc
repz
jp
cmc
add
xlat
pop
mov
or
repz
pop
loopne
sub
les
cmpsb
sti
add
xor
cmp
insl
lahf
imul
adc
jg
out
sub
push
xchg
or
pop
fisttps
jno
and
dec
mov
xchg
sarl
cmp
imul
cmp
add
fimuls
inc
ljmp
lea
mov
cmp
out
xor
sbb
shrb
cmp
mov
outsb
mov
andb
shlb
push
cmp
outsb
push
pop
pushf
cmpsl
fcmovne
das
adc
push
bnd
add
sarb
leave
repnz
mov
sub
xchg
or
push
pushf
clc
jbe
dec
push
fwait
jle
cmp
aam
in
sub
or
push
xchg
test
outsb
repnz
cwtl
ja
inc
rorl
sbb
aaa
mov
sub
xchg
jp
xor
pop
je
in
scas
int
lahf
dec
cmpsb
pop
pop
sarl
xchg
xor
pop
sub
mov
fstp
jno
xchg
test
movsb
into
mov
ret
imul
rcr
or
xchg
push
fsubs
jno
push
and
pushf
in
ljmp
cld
jmp
mov
cmp
int
add
jne
push
xor
pop
dec
and
js
stc
outsl
in
ja
jp
xchg
rcrl
inc
sub
pop
movsl
testl
sbb
add
dec
push
jge
loopne
stc
iret
add
push
xchg
das
mov
js
xor
mov
xor
adc
sti
jge
mov
pop
int
and
xchg
cmc
mov
adc
sbb
jmp
insl
add
stos
jp
jnp
cmp
or
out
in
jnp
aaa
or
out
fistl
aam
lds
mov
dec
fdiv
add
dec
mov
movsl
lret
ja
mov
mov
and
es
popf
into
push
jg
pop
mov
push
adc
and
data16
push
mov
loopne
std
ljmp
dec
lea
iret
pop
pop
xchg
adc
and
add
sbb
mov
filds
cmp
jbe
sbb
inc
sbb
int3
mov
push
xor
outsl
int
pop
add
call
into
cmpsl
xchg
sbb
and
jecxz
imul
cmp
js
aad
push
mov
mov
pop
or
lock
fcoms
sub
push
in
jbe
loop
and
jmp
lret
mov
mov
jnp
mov
lods
add
mov
adc
test
cmp
dec
lret
rcrb
fwait
sbb
pop
xchg
add
int3
in
jl
mov
je
gs
shll
pop
lds
push
arpl
add
pop
jne
cmp
faddl
xor
pop
fldcw
sbb
std
adc
arpl
cmc
dec
dec
aam
dec
sbb
cmp
out
or
sub
cmp
jno
push
dec
push
and
mov
hlt
jb
aas
es
sub
dec
lcall
rcll
mov
push
and
inc
das
pop
inc
pop
push
fs
and
add
popa
hlt
and
mov
pop
mov
mov
bound
movsl
sbb
ret
mov
adc
pusha
loop
rcrb
mov
cwtl
bound
out
aam
movl
or
fidivrl
mov
lret
jnp
arpl
scas
aaa
adc
icebp
inc
icebp
or
repnz
ret
pop
adc
scas
xchg
add
in
add
inc
insb
sbb
sarb
arpl
sbb
mov
out
jmp
lods
lds
sub
pop
outsb
in
mov
push
faddl
xor
shr
or
stos
sub
sub
add
pop
mov
jnp
fsubp
jns
andb
cmp
xchg
push
ja
scas
pushf
mov
pop
in
rorl
jge
jb
sub
mov
or
add
xchg
cmp
cmp
or
sbb
adc
hlt
loopne
clc
popl
mov
push
xchg
test
mov
lods
fs
js
and
mov
sahf
lcall
push
dec
pop
ljmp
mov
pop
xlat
xor
icebp
testl
push
cltd
inc
mov
std
mov
fiaddl
adc
mov
adc
scas
sbb
test
push
sbb
out
out
mov
mov
sbb
pop
test
inc
and
mov
mov
lahf
insl
pop
mov
jnp
cmp
out
push
lahf
mov
jmp
lea
jo
xchg
and
mov
mov
or
pop
pop
or
jb
insb
hlt
js
add
lret
inc
fwait
rorl
adc
fisubrs
data16
xchg
outsl
sbb
cmp
aam
sub
gs
mov
or
add
in
cmp
pop
fidivl
popl
movntps
fprem
stos
or
mov
cltd
lock
sti
fmulp
mov
inc
subb
aaa
pop
push
push
rcl
mov
push
lahf
rcll
lret
pop
out
mov
add
or
jo
fimuls
repnz
das
xchg
push
mov
test
dec
inc
addr16
scas
dec
lret
push
sub
mov
lahf
subl
into
jb
rorb
mov
push
sbb
fdivrl
cltd
push
into
pusha
loop
repnz
ret
xchg
fstpl
cwtl
add
xchg
in
jnp,pt
out
test
dec
push
imul
jge
push
xchg
xor
lea
xchg
push
aas
jno
adc
std
stos
out
clc
adc
lock
cmp
dec
sbb
cmc
push
pop
inc
push
mov
push
pop
andl
sub
fiadds
pop
mov
fstpt
lahf
mov
inc
div
push
adc
sub
jle
int3
rclb
pop
pop
lods
int3
mov
std
lea
in
add
inc
sub
fwait
xlat
push
ret
cmpb
dec
xor
mov
adc
dec
xchg
jg
and
je
fsts
mov
out
inc
cmpsl
aam
mov
push
push
sbb
jp
mov
mov
ret
icebp
or
ja
inc
add
xchg
in
test
xor
inc
jae
dec
cmp
push
cmp
adc
lret
jae
dec
xor
add
mov
movsb
mov
inc
jns
sub
sbb
xchg
fisttpll
add
jmp
mov
add
in
movsl
nop
in
nop
dec
jge
in
addb
mov
xor
pop
ja
popf
pop
dec
imul
lret
push
imul
je
gs
push
mov
xor
cltd
inc
push
outsl
jg
pop
lahf
xchg
jbe
int
lods
xabort
add
jg
jp
mov
or
cs
test
fwait
lret
ret
lods
notb
mov
xchg
xorl
test
stos
or
mov
insb
inc
rcl
sub
int3
mov
pusha
mov
and
test
push
popf
repz
aam
mov
in
mov
enter
mov
test
in
jo
lock
mov
out
imul
je
and
mov
adc
mov
sbb
sbb
xor
out
fdivrs
push
leave
testl
cwtl
pop
adc
test
subl
inc
test
sub
inc
and
movl
add
mov
lods
mov
mov
add
dec
xor
jnp
xchg
xchg
pop
xor
jb
test
cmp
pop
sbb
rcl
inc
aam
inc
fisttpl
jl
sti
xchg
add
out
adc
int3
vmwrite
mov
fistl
sbb
loope
cmp
xchg
cli
pop
adc
mov
push
cmp
mov
test
xlat
sub
jns
inc
fsubr
cmpb
push
mov
fidivl
or
adc
pop
jmp
lock
outsb
jl
or
in
inc
imul
or
ja
and
or
decb
jne
jnp
mov
les
dec
pop
mov
lret
insb
cmpsl
fistl
ja
ficoml
push
pextrw
dec
movsb
stos
ja
rcrb
test
push
inc
xchg
inc
adc
lds
ja
push
mov
std
push
dec
cmp
xchg
and
cmp
ret
shrl
or
cmp
mov
orl
adc
push
jecxz
test
cli
add
push
and
das
mov
pop
lock
sbb
jo
cmp
inc
scas
add
sub
pushf
popa
into
cld
add
loopne
bound
xchg
cmp
lret
ss
inc
jle
xchg
or
cmp
outsl
xchg
push
pop
push
fisubrl
ja
and
sti
mov
and
sbb
mov
mov
inc
push
mov
mov
test
xchg
sub
dec
lret
push
fs
aas
mov
jne
dec
stos
xlat
insb
mov
mov
mov
fnsave
xor
and
mov
mov
adc
les
jmp
repz
test
dec
adc
sub
addb
scas
push
inc
jno
pop
insb
lret
fs
enter
mov
sub
inc
xor
cmp
insb
push
push
pop
loop
pop
inc
dec
push
jle
sub
mov
loope
jne
loope
cmp
mov
inc
shrb
aam
push
xchg
and
xchg
addb
in
aad
insl
jbe
lods
and
push
addl
mov
in
daa
push
notb
imul
xchg
inc
repz
or
or
iret
adc
fmull
aam
jo
jne
repnz
rolb
push
cmp
mov
stos
out
repz
adc
push
jbe
icebp
push
add
mov
mov
test
mov
daa
test
out
insb
mov
cwtl
rorb
bound
je
add
pop
mov
push
mov
inc
lret
jae
ja
mov
sub
repnz
lret
mov
test
mov
mov
testb
cmp
cmp
arpl
out
or
jo
lahf
cld
jle
rolb
xchg
xor
test
xchg
sbb
mov
xor
lods
cmp
push
sub
fists
adc
leave
in
outsl
adc
pop
sub
aam
std
adc
shrl
pop
mov
repnz
inc
shl
or
add
pop
sbb
stos
xor
add
repnz
adc
test
pop
dec
pop
imul
sbb
dec
push
shll
popa
lods
subb
test
ja
nop
fnstsw
aaa
arpl
jp
cmp
fnstenv
jl
imul
in
xchg
xor
arpl
dec
xchg
lret
cmp
subb
cli
cmp
pop
fimull
ljmp
xor
stc
and
hlt
sbb
lret
mov
popa
out
shlb
push
test
xor
dec
lahf
aam
push
cld
fs
int3
lahf
jl
push
cwtl
jp
or
enter
and
xchg
cmp
leave
mov
mov
jbe
push
hlt
insl
movsl
paddd
sahf
adc
sub
lea
pop
mov
data16
and
add
mov
sti
icebp
jp
mov
xchg
push
jg
sub
lds
sarl
pop
sub
mov
mov
pop
in
loope
jecxz
lods
insl
xor
or
lret
jnp
jp
push
dec
inc
fildll
lds
xchg
add
dec
mov
mov
and
inc
subb
aam
mov
xor
mov
mov
mov
push
xorb
jne
je
fistpll
push
data16
push
sub
sbb
jmp
int
sub
loopw
shl
sbb
sub
mov
dec
cs
xor
jle
add
mov
cmp
and
je
pop
js
loope
jo
jns,pt
jno
lods
xchg
sub
imul
or
jae
mov
mov
xor
lahf
cld
xchg
push
imul
rorl
mov
pop
cmp
cs
or
mov
ret
stos
xor
and
mov
mov
jae
sbb
or
adc
jg
mov
cwtl
je
push
jbe
fstl
sub
mov
jbe
and
mov
hlt
pop
sub
and
arpl
pop
push
adc
mov
mov
lahf
and
sahf
in
addr16
pusha
ljmp
xchg
add
insl
xchg
dec
cmp
mov
jp
outsl
outsl
inc
xor
mov
add
or
mov
and
testl
adc
mov
push
add
ds
sub
test
push
sub
sub
lret
xor
mov
icebp
enter
aaa
push
jg
push
mov
pop
icebp
test
test
mov
jnp
pop
sbb
and
mov
dec
pusha
adc
out
sahf
sbb
in
inc
xchg
xor
dec
push
ljmp
pusha
inc
enter
movsb
test
jecxz
push
dec
cwtl
std
jmp
inc
sub
fistpll
mov
push
lahf
arpl
pop
mov
jns
xchg
popa
jne
cwtl
adc
mov
mov
adc
out
bound
repz
imull
push
jnp
sub
adc
dec
sbb
add
ret
sub
sub
jae
pop
jle
mov
add
xchg
in
es
push
incl
cmp
popa
sbb
ret
dec
mov
jmp
mov
fisttpll
imul
dec
ss
rcrb
jecxz
cmp
mov
push
mov
ja
xor
adc
dec
dec
jl
movsl
jl
jp
adc
enter
xchg
mov
jecxz
out
shll
xchg
jne
cmp
pop
into
mov
mov
je
and
and
mov
shrl
mov
add
mov
sbb
sub
inc
jmp
add
mov
cmp
sbb
leave
sub
adc
jb
pop
push
mov
pop
loope
test
jmp
js
cmp
dec
in
xchg
and
movsl
out
outsl
enter
dec
mov
push
and
daa
divl
shlb
ss
out
lock
stos
mov
icebp
aaa
pop
adc
mov
sbb
inc
pushf
inc
mov
arpl
inc
cli
xor
ljmp
sub
in
inc
jmp
dec
cwtl
xchg
mull
sbb
aas
fnstenv
fdivrs
push
lret
subl
lock
mov
movsb
ds
cmp
rolb
data16
fwait
and
scas
mov
adc
xchg
push
add
negl
and
mov
push
and
in
inc
pop
pop
test
mov
repz
xchg
daa
filds
push
mov
repz
shlb
inc
mov
jb
inc
jne
movsb
mov
aad
in
int3
fiaddl
int3
mov
jmp
xor
push
push
mov
mov
out
lret
dec
jmp
mov
add
adc
repz
push
pop
adc
adc
adc
add
test
sub
aas
scas
imul
push
mov
sbb
test
scas
jnp
xchg
and
inc
sub
push
add
push
jae
push
mov
adc
xor
in
pop
and
sahf
roll
loopne
xor
scas
pop
dec
inc
push
loopne
mov
insl
mov
inc
sub
imulb
mov
outsl
mov
jo
les
repz
cwtl
add
and
mov
sbb
jl
movsw
clc
jns
in
test
fstpt
adc
lahf
and
adc
jnp
mov
sbb
mov
jns
movsb
jae
rcl
fabs
ret
and
std
jp
xchg
lret
fnstenv
inc
pushl
xchg
mov
dec
je
inc
dec
es
xchg
pop
scas
push
push
pop
adc
stos
lahf
cld
in
movsl
mull
jl
pusha
jne
push
in
adc
pop
fs
jae
or
mov
cmp
scas
mul
pop
sub
pushf
mov
xor
xchg
xchg
inc
call
sti
inc
mov
insb
inc
add
add
or
insb
lock
mov
mov
lahf
lds
ja
sub
mov
popa
add
lret
and
inc
jge
hlt
xchg
sbb
pop
test
lret
bound
je
fcom
int
add
adc
cmp
mov
add
pushl
jnp
hlt
xor
pop
clc
sbb
xor
jp
ss
xor
mov
movsl
jmp
jg
stos
add
shll
add
mov
addb
sti
and
push
jne
jne
jecxz
aaa
xchg
xchg
mov
adc
push
and
mov
flds
lcall
pop
cmp
inc
pop
jl
fsubrs
mov
xlat
leave
test
dec
xlat
rcrl
shrl
sbb
popf
pop
push
pop
jle
mov
outsl
and
jnp
loope
test
sti
sbb
popa
lock
or
inc
add
dec
loope
xor
aam
pop
leave
iret
add
sbb
fmull
mov
jp
test
stc
lock
and
test
jmp
jle
add
push
pop
dec
arpl
sub
inc
int3
mov
dec
mov
sarb
jmp
xor
mov
icebp
and
mov
outsb
insb
ja
mov
stc
stos
stc
pop
or
aaa
fdivp
in
cmp
mov
pop
xchg
mov
and
mov
push
cwtl
jecxz
sti
mov
in
ds
and
gs
fsub
iret
int3
push
pop
and
mov
xchg
jno
push
orl
std
out
dec
jge
dec
pop
out
in
add
aad
push
lahf
dec
sbb
arpl
hlt
js
ret
mov
sub
or
and
xor
sub
loop
mov
jno
hlt
or
imul
cmp
mov
xor
sub
stos
push
xlat
cmp
repz
fcompl
dec
ds
loope
cmpb
lea
mov
dec
pushf
ds
xor
shll
inc
repz
jae
test
loop
enter
cmp
jge
mov
divb
mov
iret
sbb
mov
ds
cmp
pop
arpl
push
mov
sbb
mov
mov
and
and
push
loop
push
fldt
mov
outsb
mov
jge
mov
rcll
popf
lock
fwait
lea
gs
adc
movhps
test
push
iret
and
lock
enter
int3
fistpll
cli
xchg
or
in
xor
fwait
lods
fisubl
icebp
gs
adc
bound
pushf
and
jns
sub
xchg
aam
push
nop
mov
push
xor
push
xchg
test
xchg
in
or
into
sbb
andps
xor
mov
test
xor
pop
incb
rcll
rolb
and
mov
xchg
dec
pop
sub
aaa
sahf
test
push
out
shr
test
inc
sbb
jbe
pop
fucomi
push
orl
arpl
dec
mov
add
push
add
mov
shrb
mov
fnclex
push
cmpsb
lock
mov
add
scas
shll
mov
or
mov
jle
mov
push
in
xor
shlb
fmuls
adc
imul
leave
add
pushf
jp
xor
mov
leave
loopne
movl
nop
daa
js
fstps
xchg
ss
loopne
xchg
aas
xchg
cli
outsl
cmp
mov
sub
leave
mov
sub
dec
inc
adc
add
testb
xchg
outsl
mov
cmp
dec
notl
pop
ret
mov
ret
inc
sub
adc
adc
sbb
dec
push
fmull
pandn
push
mov
push
mov
ret
dec
cmp
nop
out
push
stc
leave
push
pop
stos
add
push
mov
test
loop
inc
xlat
repnz
cltd
enter
pop
out
iret
xchg
int
xchg
je
in
mov
sub
fsts
stos
xchg
pusha
out
cmc
rcrb
data16
scas
sbb
out
add
sub
loope
out
icebp
addl
xor
sar
sub
js
pop
dec
shll
or
addb
mov
mov
cmp
pop
jns
inc
cmp
cmpsb
xlat
pushf
loope
iret
add
call
mov
adc
push
outsb
push
jmp
lcall
stc
test
xchg
adc
lret
stos
dec
les
loope
dec
pop
inc
negb
cli
mov
cmp
sarb
cmp
fsub
insb
imul
out
pusha
mov
jecxz
push
cmc
push
mov
xchg
roll
ljmp
movsb
lods
cmp
adc
adcl
pop
or
lahf
mov
rorb
pop
imul
sarl
outsl
stos
fsubrs
xchg
inc
cmp
sbb
jnp
cmp
cmp
sarl
push
jmp
repnz
bound
push
inc
pusha
test
dec
ret
jmp
dec
cs
and
fwait
jmp
and
je
dec
std
or
mov
fstps
dec
dec
mov
mov
cld
mov
jp
push
sub
sub
push
pop
pop
je
jmp
inc
aaa
ljmp
stc
or
mov
insb
inc
push
jo
mov
inc
or
call
jp
int
pop
xor
xchg
lahf
sbb
fsqrt
xchg
sub
idivb
daa
iret
and
loop
in
dec
dec
xor
mov
cmp
xchg
jmp
jne
lds
pop
push
lods
add
les
das
mov
xchg
subps
adc
mov
mov
aaa
or
mov
xor
out
das
fidivs
js
push
dec
add
and
pop
flds
push
mov
and
outsb
loope
int
inc
ja
cmp
iret
addl
dec
jmp
test
insl
repz
xor
in
ss
orb
xlat
cmp
cwtl
add
ja
adc
les
xchg
xor
sub
mov
cmp
dec
push
subb
movsb
cmp
popa
movsl
insb
lods
push
imul
jmp
bound
add
adc
dec
mov
sub
pushf
ret
or
sbb
sub
ret
in
shrb
sbb
test
inc
pop
xchg
pop
mov
fstpl
mov
mov
xor
sahf
mov
xchg
inc
in
adc
fistpl
add
jb
lea
fnsave
pop
xor
mov
push
insl
fistps
push
aaa
push
subl
repz
mov
mov
push
fstpt
sbb
mov
push
add
sbb
inc
mov
mov
adc
xor
mov
inc
cmp
dec
pushf
lahf
inc
mov
pop
cmpsb
aad
sarl
cld
repz
fiaddl
inc
xchg
mov
les
push
inc
lret
push
outsb
cwtl
cltd
lret
loope
pop
ljmp
nop
sbb
xchg
inc
daa
cld
or
loopne,pn
enter
push
push
aam
push
daa
cmp
loope
sbb
vpavgb
or
mov
into
add
sbb
lret
push
js
or
sbb
xlat
sub
push
mov
push
out
jae
push
ret
dec
call
scas
testl
and
sbb
mov
bound
subl
ror
subl
cltd
add
cmp
sahf
aam
aam
leave
pop
pop
add
repz
scas
jg
or
sub
leave
leave
js
ljmp
xor
adc
or
stc
mov
not
lahf
fs
xor
mov
jl
xchg
mov
jmp
enter
in
out
mov
bndstx
dec
clc
daa
gs
push
jb
push
in
lret
decb
sub
popa
shrb
fstpt
in
and
mov
fistpl
dec
sbb
adc
mov
push
push
mov
ret
xor
xorb
pop
rorb
sub
stos
lret
fisttpll
pop
ds
cmp
xchg
imul
out
dec
repnz
sti
adc
push
mov
xchg
or
andb
loopne
jl
shll
mov
aad
adc
outsl
mov
movsl
and
pop
jnp
xchg
imul
aaa
mov
sub
mov
dec
push
add
or
push
test
ficomps
outsl
xchg
mov
push
cmpsl
sbb
inc
fisubs
sub
jae
push
inc
les
adc
int3
or
imull
out
mov
ja
adc
ljmp
sbb
std
call
sub
mov
dec
push
cli
lret
sub
fs
mov
shrb
adc
shlb
mov
ret
scas
jp
aaa
cmp
aad
adc
ljmp
cmpsl
mov
gs
js
fstl
es
fs
cld
ss
and
sbb
lret
mov
or
xor
cmpb
popf
cli
inc
hlt
mov
xor
pop
iret
jl
ds
je,pt
jns
push
jmp
insl
fimull
jecxz
out
ja
leave
sbb
and
dec
xor
int3
push
lea
push
mov
ret
mov
cmp
shlb
loop
out
loopne
sbb
xchg
mov
pop
push
pusha
ljmp
sti
push
dec
cmp
outsl
cs
mov
int3
xchg
sbb
add
test
sbbl
shl
ror
lods
cld
fwait
inc
jg
push
add
pop
stos
mov
pushf
ja
or
fst
pusha
pop
xchg
pushf
test
in
aam
push
jbe
lahf
mov
lods
sahf
scas
xor
mov
or
popa
xchg
leave
push
ja
fisttpll
xlat
mov
add
stos
enter
addr16
or
insl
pop
hlt
push
cmp
outsb
dec
out
cmp
and
cmp
jnp
lods
test
jge
cmpsl
add
push
shll
cli
sahf
and
xorb
popa
mov
or
inc
cmp
fldenv
das
jnp
cmc
cmp
mov
and
int
mov
pop
loope
aam
mov
mov
in
rcl
data16
push
imul
inc
insl
rcll
dec
push
dec
mov
push
imul
aaa
mov
add
orl
push
dec
pop
sbb
and
adc
cmc
and
pop
mov
faddl
jge
inc
fstpt
lcall
repz
mov
out
cld
mov
cmp
cld
shrl
test
xchg
nop
xor
stc
insb
mov
shl
jnp
and
repnz
lods
leave
rorl
mov
cwtl
inc
lods
out
into
test
push
pop
arpl
dec
iret
loopne
push
int
cmc
add
clc
mov
dec
and
xchg
pop
add
or
push
and
adc
repz
mov
imul
inc
jae
and
lea
aas
fldt
sub
clc
mov
out
stos
outsl
pop
jb
data16
data16
mov
push
lds
xchg
ljmp
fldt
cwtl
jno
scas
jle
push
mov
movsbl
call
fwait
shlb
dec
repnz
es
and
push
popf
inc
in
or
mov
mov
mov
sub
jno
hlt
inc
jge
inc
mov
addr16
jg
stos
sub
cmp
adc
cmc
sbb
sbbl
fisttpl
clc
mov
out
imul
sbb
scas
fsincos
data16
push
and
pusha
sbb
mov
idivb
adc
cwtl
xor
cmpsl
aas
in
sbb
test
mov
push
push
aam
mov
push
fimull
add
push
xchg
fistps
test
gs
out
mov
sbb
jl
add
and
push
jg
pushf
scas
push
push
xlat
add
push
add
sbb
inc
jge
adc
and
sbb
lea
arpl
mov
out
add
aam
push
dec
push
imul
scas
jp
adc
xlat
adc
shl
sarl
jle
ljmp
in
add
or
mov
xor
aas
pop
les
aam
bnd
cltd
mov
cs
add
rcr
dec
sbb
and
push
xchg
xchg
jo
int
mov
xor
push
adc
push
lods
jge
in
shl
inc
pop
mov
sub
xchg
in
addr16
cmp
aas
stos
jle
mov
and
mov
enter
sub
test
pop
dec
and
pop
mov
std
inc
in
fptan
xor
pop
mov
and
and
lcall
mov
ret
test
and
rclb
pop
sbb
xchg
das
divb
leave
testl
dec
xchg
adc
fwait
sub
cmpsl
cmp
lock
and
pop
enter
xchg
cmpsl
aas
dec
or
cmpsb
mov
movsl
dec
aad
xchg
ror
loope
add
subl
rcl
add
push
mov
cmpsl
dec
jmp
insb
mov
push
or
jae
hlt
cmpsb
sub
sbb
cmp
add
adc
xor
outsb
in
inc
fmull
loopne
pop
cli
add
push
loop
vsubps
int
or
adc
clc
sub
mov
cli
mov
js
outsl
mov
sbb
mov
or
fidivl
xor
inc
fwait
sub
mov
aas
mov
mov
mov
faddl
xchg
xor
push
addr16
sahf
rorl
std
loope
loopne
inc
or
inc
and
fsubrs
jne
or
lock
jmp
idivb
jae
pushf
test
push
cmp
lcall
fsubrl
pop
mov
mov
mov
out
push
outsl
add
stos
stc
pop
inc
gs
mov
dec
out
jmp
or
jmp
loop
sbb
cmp
arpl
in
mov
sub
in
sub
jb
mov
movsl
ret
out
mov
ret
aad
jmp
mov
lock
sub
movb
jp
dec
pop
or
out
rol
fst
orl
mov
mov
bound
add
xlat
cltd
jl
insl
jmp
out
imul
loopne
sub
andl
lcall
cmp
mov
dec
hlt
jmp
in
mov
fisubrl
mov
ret
push
cwtl
sahf
mov
mov
sbb
rcrl
cmp
dec
push
repz
fwait
dec
shll
cmp
lcall
mov
push
not
jae
lock
std
bound
rcrb
mov
iret
fmuls
aad
or
fstpt
test
push
pushf
dec
popf
cmp
dec
jb
icebp
cmp
mov
nop
mov
shl
out
cmp
push
mov
cmp
adc
cmp
xchg
pop
adc
and
fsubrp
jecxz,pn
xchg
int3
add
imul
xor
mov
jno
loopne
add
xchg
jl
stos
and
adc
mov
add
dec
or
dec
xchg
mov
jnp
out
xor
pushf
add
mov
ret
xchg
sti
cld
mov
out
mov
js
add
sub
andb
insb
pop
daa
shrb
fmul
mov
popf
pop
mov
fldt
adc
mov
cmp
stos
mov
loope
fnstcw
adc
sub
sbbl
sbb
push
mov
inc
pop
mov
out
sbb
sub
stc
sbb
add
add
leave
fwait
jmp
data16
clc
clc
call
pop
orl
pop
xchg
in
mov
loope
xchg
shlb
call
test
jmp
enter
dec
and
cmp
lods
outsb
inc
dec
xor
xor
movsl
gs
data16
data16
pusha
pop
cmc
push
out
xchg
mov
stc
pop
leave
lcall
fdivrs
sub
cmp
and
loop
jl
pop
xchg
lds
jb
sahf
mov
jae
jge
leave
lcall
lret
nop
stos
ret
movsb
lods
xor
dec
test
dec
fmull
xchg
mov
push
inc
dec
adc
or
sbbl
add
mov
cld
sub
push
push
or
in
and
mov
mov
pop
push
data16
or
gs
or
xchg
mov
inc
xor
pop
inc
xchg
xlat
xor
push
insl
cmpsb
or
insb
inc
leave
movsl
fadd
sub
repz
enter
or
dec
dec
jae
inc
cmp
mov
add
cmp
ror
push
xor
xor
cmp
jge
testl
push
inc
cmc
dec
shrb
sbb
mov
xor
xor
call
loopne
pusha
push
push
add
sbb
or
std
inc
popf
pop
and
decl
repnz
lret
mov
stc
imul
js
jge
inc
and
inc
jp
dec
addr16
adc
add
lea
cltd
cltd
aam
outsl
push
mov
mov
stc
adc
jns
push
loop
cwtl
clc
pop
arpl
xorb
sbb
or
mov
xor
dec
andb
xchg
pop
pop
pop
jbe
ljmp
xchg
add
cld
jp
xchg
or
push
dec
add
mov
and
pop
mov
sbb
inc
outsl
add
mov
sbb
sbb
ja
sub
pop
sahf
stos
jg
cmp
les
fdivs
movups
mov
ds
push
rcrb
cmpsl
les
mov
xor
aam
cmc
sbb
xchg
cmp
aam
xchg
and
inc
pusha
dec
mov
or
popa
lods
push
cmpsl
pop
adc
push
shll
leave
mov
std
mov
scas
lret
cmpsl
pop
jmp
out
lret
adc
out
ds
or
pop
xor
pop
pop
lods
ds
outsl
dec
mov
insb
ss
xor
hlt
sahf
push
fiaddl
mov
lods
pop
sub
mov
dec
jg
add
arpl
inc
push
arpl
divb
ja
enter
fs
rorb
jge
adc
xchg
push
addl
cwtl
mov
in
sub
mov
and
das
orl
pop
jbe
lock
mov
xchg
lret
mov
lock
push
pop
scas
lret
mov
pop
adc
cmp
test
fcmovne
push
add
mov
jge
jo
inc
pop
pop
xchg
pop
cmc
mov
popa
adc
add
arpl
ja
xchg
orb
pusha
imul
or
shlb
cs
pop
movsl
jl
orl
cpuid
shrl
push
das
mov
xor
add
cmp
push
test
rcll
in
mov
jne
dec
inc
mov
das
jns
out
inc
pop
scas
outsb
sbb
adc
loopne
enter
fnstenv
mov
iret
jb
iret
int3
fwait
dec
xchg
sbb
push
or
rorb
push
jle
inc
push
inc
mov
lea
lahf
cwtl
fstps
scas
frstpm(287
int3
sub
jl
fiaddl
mov
fisubrl
inc
ficompl
or
stos
lods
jno
cs
inc
fwait
lea
sbb
nop
adc
mov
enter
shll
outsb
shlb
xchg
hlt
int3
push
pop
movsl
cmp
lahf
or
dec
jle
es
lcall
push
loope
mov
pop
in
inc
add
in
mov
push
add
aaa
dec
xor
xchg
mov
ljmp
xor
jl
jne
ss
mov
and
mov
or
and
dec
pop
insb
imul
push
pop
adc
out
sti
push
pop
orl
fs
rorl
scas
jae
jp
jge
cld
jmp
cmp
cmp
test
cltd
in
fwait
aam
fwait
cmp
fwait
bswap
pop
push
out
or
in
dec
popf
pop
cmp
mov
inc
mov
out
subb
add
push
pop
or
cmpsl
outsl
add
insb
jmp
or
fwait
out
or
xor
loope
push
inc
dec
inc
daa
test
in
jb
cltd
ja
int
lret
bound
movsl
outsb
xchg
stos
mov
adc
mov
int3
stos
out
outsl
cmpsl
sbb
inc
jmpw
adc
int
enter
push
mov
pop
je
jo
lods
cld
fisubrl
jecxz
fs
in
scas
enter
sahf
and
push
xor
clc
cwtl
cmp
inc
mov
pop
inc
or
jbe
popf
sub
fwait
sar
and
sahf
gs
lods
xchg
rclb
xchg
pop
cmp
jae
pop
hlt
dec
stos
call
sub
inc
mov
dec
adc
into
jmp
mov
loop
lret
cmp
xchg
outsb
fcompl
inc
xchg
int3
negb
inc
loopne
outsb
mulb
mov
push
les
clc
or
xlat
lret
ja
dec
pop
enter
mov
jge
xor
into
mov
lret
sbb
sub
orl
aaa
aaa
pop
push
sahf
data16
fdivl
push
dec
scas
push
roll
dec
lret
push
inc
or
inc
cmp
mov
repnz
mov
loop
out
xor
or
jno
ljmp
push
std
cmpsb
add
xchg
mov
call
cmpsb
int3
insl
pop
mov
lcall
sbb
out
sbb
add
mov
ds
mov
iret
mov
aas
sbbl
mov
cmp
cmp
dec
mov
ds
inc
add
xor
cwtl
add
pop
jnp
jmp
aas
gs
rolb
sbb
mov
mov
mov
jge
mov
int3
inc
jbe
mov
cmc
adc
adc
ja
inc
mov
shll
pop
out
cmpsb
pusha
or
sarb
and
out
out
in
adc
aaa
and
js
clc
cmc
push
in
scas
add
pop
stos
pop
lret
push
out
add
and
loop
les
push
lock
push
aam
sarl
ja
pop
inc
mov
ds
mov
pop
pop
fcmovnbe
and
enter
adc
cmp
or
xor
add
repnz
mov
lret
sbb
nop
jp
dec
push
shl
les
arpl
ficomps
xor
ja
and
jbe
xor
xor
push
stc
mov
pop
jecxz
stos
adc
test
bound
pop
cwtl
sbb
pusha
iret
jbe
test
xor
xor
dec
mov
mov
inc
lret
test
loop
dec
fcomip
inc
cmp
loopne
mov
leave
add
test
andl
mov
or
or
push
push
fstl
sub
or
fmuls
cmpsb
xchg
sti
fmull
pop
mov
mov
out
stc
js
xchg
nop
adc
xor
pop
push
stos
and
movsb
in
add
sub
rcll
inc
xchg
inc
jp
call
loope
nop
xchg
rorb
push
popf
inc
sbb
adc
out
push
dec
jne
popf
pop
add
adc
cmp
shlb
xor
or
inc
int
adc
sbb
or
sarl
fisttps
lea
sub
mov
pushaw
adc
xor
cmp
add
ds
fistpl
adc
push
or
fsubl
xchg
dec
cli
mov
in
push
test
jns
or
push
std
xchg
push
inc
cmovno
test
sbb
mov
pop
xlat
xor
pop
inc
mov
or
pop
mov
in
lahf
xchg
fidivrs
lds
adc
jge
push
inc
int3
xchg
or
adc
jne
jl
sbb
mov
popf
adc
into
xchg
stc
sub
xchg
loop
aad
outsb
lds
cmpb
push
pop
sub
test
pop
sub
cmpsb
mov
or
lret
sub
out
adc
adc
loop
mov
ljmp
es
cmp
std
and
repz
repnz
pop
loopne
addl
out
fs
add
and
mov
data16
and
push
nop
fdivrs
scas
or
dec
ret
into
into
and
das
or
jne
movsl
xchg
arpl
in
imulb
push
inc
jb
pop
mull
jecxz
and
push
xlat
add
mov
lods
xor
divb
xor
mov
mov
jmp
mov
sbb
mov
je
pop
and
in
lock
xchg
out
jne
in
fwait
insb
in
cmp
test
fcmovu
int3
sar
or
ja
add
loope
jge
bound
lret
imul
push
push
inc
and
jmp
dec
enterw
xchg
scas
push
adc
mov
out
ljmp
lods
push
addl
pop
pop
xor
in
adc
addr16
ret
das
cmp
mov
aad
call
push
push
mov
jns
mov
push
add
xchg
adc
ret
incl
pop
int
adc
popa
dec
int
and
and
inc
mov
lock
shrl
jmp
jae
and
adc
xchg
jno
push
jmp
mov
dec
push
or
sti
sahf
pop
shll
jge
imul
shl
subl
jl
dec
cli
shrl
cwtl
mov
hlt
and
ds
repnz
jl
rorb
dec
mov
insl
xchg
cmp
dec
and
jae
mov
loop
push
cmp
decb
mov
inc
fsubl
outsl
pop
loope
push
aaa
cwtl
les
cs
inc
pusha
aad
pop
adc
dec
dec
mov
movsb
ficoms
fldt
lahf
push
add
dec
stos
out
mov
sub
and
cltd
outsb
add
movsb
mov
xor
push
cmp
in
daa
pop
xor
loopne
lods
xchg
and
lock
mov
sbb
ret
cmpsl
inc
cmp
into
add
pop
xchg
in
mov
les
sbb
sbb
and
aaa
lds
andb
pop
push
mov
xor
cmc
adc
out
dec
dec
popf
sbb
sub
outsl
cwtl
and
cmp
std
cmpl
add
push
mov
test
or
test
mov
mov
repnz
repnz
mov
push
lcall
lock
xchg
mov
adc
add
cld
sub
or
stos
xorb
mov
adc
add
cmp
push
sbb
pop
inc
stc
mov
mov
sub
mov
lret
push
out
adc
lahf
or
sub
stc
stos
xchg
scas
shrb
or
icebp
sbb
lods
inc
call
xorl
xchg
fisttpl
xchg
adc
fwait
jg
jnp
faddp
pop
jne
sahf
cmp
aam
les
pop
inc
or
lcall
rcrl
lret
sti
add
repnz
shll
jmp
ficomps
dec
mov
imul
inc
es
cmp
insl
sbb
add
out
out
fsubl
fisubrl
pop
jne
ljmp
fisttpl
mov
leave
scas
xor
outsl
or
sti
mov
jb
test
or
xor
outsl
loope
lret
jp
fs
insl
stos
hlt
sbb
imul
xchg
icebp
fiaddl
dec
sbb
mov
ja
adc
fcomps
add
lods
dec
adc
push
int3
pop
bndldx
test
push
adc
shll
jl
jno
xor
lea
ss
rcrl
sub
dec
dec
int3
add
imul
mov
repz
shl
repz
pop
dec
ret
lret
cltd
mulb
outsl
xor
cmp
or
jae
loopne
lret
mov
pop
addr16
adc
in
adc
mov
sbb
addr16
or
insl
popf
sahf
lock
daa
and
cmpsl
sbb
pop
dec
xlat
pop
push
mov
xchg
and
movsb
jnp
orl
and
lds
mov
mov
popf
arpl
mov
mov
mov
sarl
adc
sub
cld
test
fstl
fwait
das
lods
out
das
pop
xor
sbb
daa
cmp
xchg
pop
xor
test
lods
insl
cmp
xchg
push
aad
fistpll
enter
ljmp
jns
pop
fldcw
push
test
popa
and
sub
pop
rorb
lock
in
stos
adc
dec
and
lret
sub
mov
loope
jle
xchg
dec
cmp
adc
cli
test
imul
mov
mov
pushf
shrb
pop
xchg
data16
loope
sub
shl
dec
fsts
testl
mov
or
pop
clc
cmp
stos
jne
sub
imul
into
and
cwtl
and
jmp
int3
ds
and
out
or
fsubs
out
lods
push
shll
aas
add
mov
test
jl
movsl
fisttpl
dec
repnz
push
jmp
sti
sti
sbb
mov
fs
pcmpeqd
sub
fwait
ss
addl
sbb
das
jmp
pop
movsb
or
lret
icebp
lahf
loopne
mov
hlt
mov
push
hlt
repz
adc
dec
rep
loopne
out
lret
sbb
add
js
mov
pushf
or
push
hlt
cwtl
add
test
mov
jp
xchg
or
add
imul
out
dec
sub
pop
push
or
lret
aad
out
lock
ljmp
rclb
dec
adc
or
stc
rclb
sub
adc
data16
test
stos
lock
pushf
scas
pop
mov
movsb
xchg
rclb
jb
cmp
dec
push
xor
mov
mov
cmp
stc
scas
add
and
ss
aam
jno
rcl
mov
fxch
or
mov
testb
dec
push
stc
push
jg
aaa
jp
in
xor
jge
call
xor
jnp
mov
or
repnz
jmp
dec
ljmp
inc
lods
test
movq
int
popa
mov
mov
mov
ss
sbb
sbb
in
pop
into
mov
inc
cmpps
adc
and
mov
mov
push
test
pop
and
or
movsb
ljmp
add
sub
jae
jge
jne
mov
loope
fwait
daa
mov
cmp
cmp
cwtl
push
in
mov
mov
mov
daa
mov
cmp
xor
jne
cmp
pop
fmull
mov
mov
sub
bound
clc
push
fstpl
mov
les
test
stc
jno
cltd
pushf
fs
jg
testb
mov
aad
xor
sbb
xor
stos
fldt
adc
adc
insb
or
int
mov
lret
gs
sbb
mov
into
lock
cmp
jne
fwait
cwtl
xchg
gs
inc
dec
jnp
mulb
fsub
inc
faddp
div
dec
cmp
add
adc
mov
dec
jge
fptan
jecxz
call
mov
mov
mov
sub
testl
std
jecxz
lahf
xchg
pop
lahf
sub
call
mov
mov
iret
dec
mov
sahf
dec
fs
bound
in
mov
movb
leave
outsl
dec
jecxz
aas
inc
das
push
push
push
inc
push
add
dec
std
fisttps
sbb
stos
arpl
popf
push
sbb
in
js
mov
dec
jne
leave
cs
outsb
aaa
cmc
mov
loop
or
stos
mov
and
les
dec
adc
xchg
push
xor
and
cmc
gs
dec
mov
xchg
loopne
ret
xor
insl
mov
sahf
xchg
sbb
test
or
in
push
push
or
mov
arpl
js
cmpsl
repnz
adc
aam
push
cmp
arpl
mov
insl
cltd
xlat
xchg
push
loopne
add
dec
push
push
push
dec
in
test
add
jge
sahf
loope
lret
adc
inc
scas
mov
ret
or
jns
pop
xor
push
mov
leave
imul
push
mov
sub
ficomps
loope
adc
scas
mov
pop
test
adc
xor
pop
add
inc
sub
imull
mov
mov
pop
push
fimuls
adc
sub
add
pop
hlt
and
pop
mov
cmp
in
stos
jl
push
cmp
js
push
xorb
sbb
sub
xchg
lds
jmp
jbe
nop
pop
mov
dec
xor
push
pop
subl
lahf
mov
movsb
jle
sub
jno
std
lods
adc
push
shl
pop
jmp
cmp
cmp
roll
pushf
sub
popf
mov
mov
and
xchg
aam
cmc
cmpsb
arpl
add
icebp
mov
bnd
cmp
movsb
xchg
and
test
mov
sbb
iret
inc
aam
icebp
pop
enter
dec
faddl
sarl
sbb
shll
inc
sar
cmp
cwtl
add
sar
je
int3
aaa
xchg
movsb
shll
or
shrl
push
test
ret
data16
shr
enter
mov
icebp
cmpsb
cmp
fcmovb
jl
and
or
loope
lods
xchg
sarl
popf
push
gs
enter
test
mov
dec
xor
pop
popa
sub
ret
aad
inc
xor
lock
outsb
ret
adc
movsl
in
clc
push
xor
or
repnz
or
lods
aaa
shll
cmc
sbbl
xor
mov
scas
in
daa
out
inc
mull
xor
insb
in
pop
or
fimuls
push
lret
loope
sarl
mov
fidivs
pop
add
mov
pop
outsl
aam
dec
xchg
fs
iret
push
fwait
adc
mov
xchg
add
inc
lret
jmp
jmp
mov
adc
mov
pusha
jno
cltd
movsb
sbb
push
jl
push
dec
mov
jae
jge
stc
test
jge
adc
pop
mov
mov
stos
idiv
xchg
pop
jns
rorl
fiadds
lock
inc
dec
mov
add
idivl
jg
mov
mov
sub
ret
out
push
push
jmp
push
movsb
jns
or
nop
mov
je
test
clc
jp
test
and
cmp
cli
lods
shl
outsl
xor
jns
and
cmpsb
dec
shll
mov
dec
add
xchg
in
fcomp
sub
aam
mov
gs
dec
jb
ljmp
inc
mov
sti
sub
and
into
ficoms
cmp
sahf
mov
das
and
sub
inc
pop
cs
or
sbb
push
ljmp
mov
mov
test
mov
das
cltd
sub
shrl
dec
xchg
shll
mul
dec
inc
pop
fs
icebp
adc
rolb
push
inc
and
inc
sub
rcrb
ret
xor
jne
cmp
dec
or
js
ljmp
cwtl
mov
push
movsl
jnp
cmpsb
push
jne
adc
jno
mov
mov
sti
es
enter
mov
aam
jmp
int3
pop
daa
repnz
sub
in
dec
lds
in
cmp
xor
xchg
out
inc
push
push
xchg
jbe
cmpsb
pop
clc
dec
inc
pop
push
mov
dec
shr
jp
and
pop
movsb
and
push
adc
stc
sub
pusha
pop
xchg
cltd
call
xor
nop
cmp
pop
and
sub
xchg
mov
cmp
enter
hlt
mov
or
data16
dec
inc
test
insb
xchg
int3
cmc
or
movsl
das
mov
add
xor
or
mov
inc
xchg
jecxz
cmp
mov
inc
je
sti
xorb
movsl
lds
pusha
and
or
jns
fcom
sbb
adc
out
push
adc
lret
and
mov
mov
push
add
add
or
popf
data16
mov
outsl
imul
dec
or
and
mov
dec
xchg
outsb
test
push
je
mov
dec
in
xorl
cmp
jl
lock
mov
and
xchg
lret
shrb
xchg
pop
mov
mov
sub
adc
cwtl
lods
add
dec
aam
fildll
push
ss
mov
or
orl
js
push
sub
pop
inc
inc
hlt
ret
lea
mov
les
imul
leave
sbb
push
dec
xchg
add
mov
or
adc
cmp
push
inc
sbb
mov
or
adc
mov
cmp
clc
test
adc
ds
jnp
adc
not
je
mov
xorb
loopne
xchg
mov
int3
xchg
testl
popa
and
sub
mov
fnsave
pop
sub
adc
lret
popa
lock
mov
aad
mov
push
pop
mov
jo
push
bound
adc
aad
add
repnz
out
jp
arpl
mov
xor
mov
sbb
in
sbb
sbb
cmp
push
ss
inc
repnz
mov
scas
repz
cs
sbb
loop
xchg
dec
mov
loop
push
cmp
sub
ret
pop
pop
stc
xorb
addl
pop
std
add
dec
mov
cwtl
xchg
in
loope
adcl
arpl
scas
mov
aaa
jb
pushl
cs
and
push
stc
sub
call
lahf
mov
icebp
stos
sub
icebp
xor
mov
inc
pop
jge
gs
stos
fadd
mov
jns
pop
stc
fmull
stc
fidivrs
xchg
add
lods
lcall
jp
insl
sbb
cmp
add
mov
dec
add
imul
mov
dec
std
imul
push
iret
aam
sbb
aad
in
imul
loopne
je
dec
pop
add
sub
lret
mov
pushf
aaa
bound
jns
inc
push
outsb
or
mov
pushf
cmp
icebp
nop
add
mov
mov
jo
sarb
and
stos
push
lcall
jns
les
fwait
push
test
movl
add
out
call
int
sbb
xchg
mov
cli
or
or
and
mov
inc
mov
xchg
sbb
mov
pushf
cmpb
dec
add
sub
dec
rcll
movsb
icebp
into
cwtl
jb
movsl
sub
mov
or
in
lods
aaa
add
dec
roll
stc
out
and
bound
mov
xchg
sub
jecxz
int3
pop
or
sti
mov
dec
and
sbb
sbb
outsb
lea
leave
jmp
ss
xor
out
mov
sub
rcrl
lods
add
sbb
mov
call
aam
addb
cmp
je
push
out
or
loope
test
mov
xchg
cmp
push
repnz
pop
je
cwtl
mov
sbb
xchg
outsl
in
add
push
dec
and
nop
xchg
push
pop
cltd
popa
cld
push
lcall
aas
nop
mov
sbb
mov
pop
xchg
mull
lahf
in
sub
sbb
stos
mov
into
cwtl
push
sti
mov
in
push
sub
add
fwait
in
fstpt
mov
loop
mov
mov
dec
lea
imul
xor
int
mov
insb
pop
jns
test
movsl
and
out
mov
xor
jb
repz
test
cmp
daa
movsl
push
adc
adc
and
aad
lahf
xchg
popf
sbb
dec
orb
lods
mov
ja
std
fisttps
std
lcall
inc
faddp
enter
aad
xchg
cld
repnz
xchg
mov
jno
push
dec
leave
sub
imul
or
lret
push
xchg
cmp
bound
xchg
pop
xor
xor
bnd
dec
stos
xchg
mov
imul
pop
add
out
in
insl
mov
mov
push
sbb
pop
scas
cmc
inc
fstpl
ret
inc
or
icebp
daa
sub
add
sbb
fstpt
xlat
mov
or
xor
or
sbb
jo
test
aad
lret
aas
adc
shll
xchg
es
mov
sahf
xor
sbb
adc
fwait
out
inc
xor
mov
add
clc
mov
inc
repnz
xchg
inc
sbb
pop
sbb
or
out
fs
sub
xchg
and
add
leave
notl
aam
stc
jl
addl
dec
adc
jp
and
clc
adc
jbe
push
shlb
in
xchg
lock
xor
push
in
pop
outsb
dec
rorl
mov
mov
loopne
mov
pop
es
or
scas
roll
jg
aaa
and
mov
scas
out
stos
push
int3
push
and
addr16
ffree
push
lcall
dec
clc
in
mov
clc
popf
lcall
rorl
add
iret
push
leave
sbb
mov
xor
rcrb
jecxz
and
mov
stos
cmpb
ljmp
xor
push
xchg
xor
sub
mov
jb
ret
push
xor
and
sti
in
xlat
push
movhlps
icebp
idiv
repz
pop
jo
jmp
xor
xor
insl
sub
cmc
dec
xchg
sub
push
fmul
movsl
push
ror
xchg
dec
loope
add
pop
xchg
jae
lahf
call
cmp
pushf
orb
xor
fnstcw
leave
or
mov
cmc
int3
sbb
mov
fists
xor
and
mov
test
cmpsb
pop
hlt
pop
fistl
test
pop
jp,pn
daa
dec
add
pop
aas
in
or
dec
jbe
add
in
gs
xchg
pop
mov
and
lods
sti
pop
push
inc
pop
sbb
xchg
add
push
jbe
sub
lods
stos
fstl
mov
or
xchg
scas
xchg
mov
mov
cmpsl
cli
in
pop
cmp
adc
int
outsl
lock
inc
test
mov
popa
dec
cmp
mov
adc
stos
dec
aaa
mov
imul
mov
orl
mov
testl
shlb
scas
adc
sbb
push
out
sbb
mov
mov
sbb
adc
stos
inc
add
popa
ret
xor
mov
maxps
jp
les
jno
mov
inc
mov
test
insl
fidivl
pop
iret
inc
push
push
cwtl
xor
insb
aad
sbb
pop
addr16
or
arpl
jo
jmp
fiadds
push
arpl
daa
pop
iret
push
inc
add
rcrl
add
arpl
pop
sbbl
loope
sbb
xor
das
insb
adc
mov
fsubrl
push
lods
add
jecxz
cmp
xchg
imul
cld
int
mov
inc
jge
mov
mov
leave
jb
or
or
mov
fs
pop
imul
scas
jae
inc
mov
cwtl
push
lock
pop
imul
cs
sub
pop
xor
stos
mov
into
xor
das
jnp
cmpsl
adc
nop
std
lods
cmp
pushf
pop
les
push
mov
or
lock
in
push
fdivrs
into
and
mov
ret
mov
inc
adc
mov
ret
cwtl
and
decl
jmp
add
adc
je
mov
lds
jecxz
cmp
aaa
sub
pusha
inc
inc
inc
adc
js
sbb
cltd
insl
mov
sbb
aaa
and
sbb
mov
jl
inc
mov
sub
push
lahf
dec
cmp
push
stos
addr16
mov
push
es
test
lods
jmp
stos
rolb
pop
add
cmp
push
push
js
cmpsl
push
inc
dec
push
or
das
cmc
lret
leave
push
xchg
jae
loopne
loope
ljmp
int
std
jns
xor
jp
push
aaa
add
sub
es
pop
cli
rol
movsl
and
xchg
xor
dec
jns
mov
ds
inc
xor
inc
push
mov
repnz
jo
lods
insb
mov
mov
stos
xchg
lds
inc
jge
ret
test
jmp
xor
fisttpll
fwait
jg,pn
hlt
sub
mov
inc
inc
adc
pop
iret
icebp
or
fnstcw
shrb
clc
aam
pop
int3
sbb
adc
test
lods
jne
dec
pop
rolb
jnp
push
and
xchg
lods
xchg
mov
mov
xor
mov
dec
stc
in
mov
inc
sbbb
movsb
xchg
mov
mov
ds
adc
jecxz
and
xchg
sub
jno
inc
pushf
cmp
into
insl
and
loop
sbb
das
je
sbb
and
xchg
inc
insb
lret
sub
cmpsl
mov
test
leave
pop
inc
mov
insb
repnz
fdivrs
pop
lods
and
dec
add
je
jl
outsb
cmpsb
scas
inc
or
lret
push
lds
cld
fld
or
es
std
in
mov
sub
add
xchg
mov
insl
repnz
lret
sbb
js
punpcklwd
sub
roll
js
loop
in
dec
fdivp
pop
clc
jmp
cld
and
mov
adc
jmp
sub
mov
jge
inc
leave
jecxz
inc
pop
shll
insb
leave
and
pop
in
jmp
add
aaa
mov
mov
pushf
cmp
in
in
mov
xor
pop
jae
mov
cld
in
leave
fwait
jne
std
leave
ret
adc
loopne
fwait
int3
cmp
cmp
jnp
daa
cmp
add
lret
dec
lret
push
push
inc
sub
xchg
mov
cmp
mov
sbb
shll
add
push
pusha
sar
shll
sbbb
out
lahf
ljmp
ss
sbb
jmp
lea
fsubrs
cs
pushf
aad
call
sbb
mov
cmpsl
jbe
hlt
pop
mov
ss
mov
movsl
pop
adc
stos
sahf
push
cld
in
out
push
aas
mov
push
or
lret
cltd
test
xchg
in
bound
scas
xchg
and
movsl
mov
or
enter
mov
push
rcrl
andl
std
aad
pop
jns
das
cmp
pop
popf
add
aas
mov
aam
pop
mov
andb
sub
ljmp
scas
and
inc
pop
xor
mov
mov
push
push
sar
lahf
addr16
jb
or
bound
sahf
and
cli
jge
sub
or
pop
push
sub
int
pop
add
push
pop
shlb
fucomp
mov
ljmp
inc
or
popf
sub
in
pop
or
lds
out
arpl
jle
inc
xor
or
cwtl
jp
js
and
sbb
mov
push
hlt
sarb
data16
subb
fldcw
es
mov
or
push
cmp
dec
fldcw
mov
jb
out
stos
ja
and
inc
je
push
cmp
push
jmp
leave
ror
cmp
loopne
lret
cmp
clc
dec
xchg
data16
add
xchg
call
cmc
inc
adc
sub
les
out
mov
aad
xchg
cmp
jnp
lahf
repz
xor
nop
sbb
pop
push
fstps
mov
add
cwtl
add
popf
out
cmc
xor
xchg
cmc
icebp
push
mov
scas
mov
xchg
jo
repz
xor
enter
ljmp
mov
fwait
in
enter
divb
push
es
stos
mov
int
jg
xor
sti
mov
jb
jp
xor
push
popf
mov
repz
adc
pop
lods
sbb
movsl
dec
adcb
cmp
adc
dec
scas
lret
hlt
mov
push
mov
dec
adc
pop
jae
sbb
sbb
mov
jmp
mov
ljmp
sbb
outsl
test
and
movsl
xor
xchg
sub
test
add
sub
sbb
mov
popa
mov
scas
pop
push
dec
int3
mov
mov
mov
ja
mov
push
shll
int3
clc
sub
mov
xor
cs
mov
fcmovnbe
fidivs
jae
inc
popf
rolb
ds
stos
addr16
xchg
inc
jae
fimuls
ja
xorl
rcl
insl
mov
pop
xor
cmp
popf
pop
push
scas
in
jge
iret
js
stos
testl
mov
lret
mov
jns
mov
jb
lret
jb
and
xchg
adc
rorb
add
stos
xchg
mov
pop
push
xchg
pop
and
cltd
lcall
movsb
fwait
sti
push
fildll
cmp
mov
testl
or
cmp
sti
test
test
and
fldcw
xchg
jae
and
out
ss
mov
mov
lcall
lret
sbb
inc
push
idivb
inc
repz
mov
dec
lods
sti
mov
lret
test
jmp
inc
leave
sbb
push
imul
xlat
ret
imul
sahf
mov
popf
dec
das
pushf
sub
in
enter
insl
mov
mov
cmc
pop
andb
jnp
adc
and
dec
push
fisubs
scas
mov
sub
mov
imul
shrl
push
divb
xchg
dec
aad
push
bound
std
push
add
cmp
push
cmp
ss
test
sbbb
sbb
pop
push
lea
hlt
sub
outsw
les
mov
and
cwtl
dec
shlb
sub
rcr
xchg
rol
dec
out
or
mov
add
stc
jnp
xchg
in
jne
imul
xchg
lods
lret
daa
lret
rclb
xchg
cmc
push
shll
shlb
xor
lret
or
insl
add
jbe
inc
jle
mov
jle
lret
cmp
fwait
in
sbb
jmp
lods
sub
xor
fs
and
xor
mov
xchg
add
or
jmp
into
inc
das
clc
aas
inc
std
and
mov
inc
leavew
add
xor
push
dec
sub
in
sub
mov
inc
sub
fcom
adc
sub
jnp
xchg
push
ffree
xchg
repz
test
xchg
je
out
mov
push
loope
int
stos
addr16
enter
or
jb
cli
jg
xlat
or
sub
jbe
dec
adc
popa
mov
fs
push
movsb
aad
cmp
into
jno
in
pop
adc
in
jo
fdivs
sbb
push
cwtl
lahf
mov
sub
sbb
into
cwtl
mov
xor
sarl
popf
rorl
cwtl
xlat
test
xor
enter
mov
les
repnz
pop
pop
out
cld
or
jge
sub
xchg
outsl
cwtl
cld
mov
inc
sub
jmp
push
jl
dec
xlat
in
ljmp
js
push
pop
fidivrs
orb
push
loop
das
movsl
xchg
mov
imul
cli
pushl
dec
jl
mov
pop
pusha
mov
cmc
js
lock
adc
arpl
out
sar
mov
lods
arpl
lcall
imul
dec
lret
in
mov
lret
add
imul
push
movsl
std
jo
aaa
hlt
add
int
inc
clc
adc
or
std
into
xchg
fstps
dec
jbe
mov
movsb
or
pop
imul
loopne
mov
pushf
add
xchg
sbb
insl
jnp
imul
aad
mov
xlat
popf
fldenv
cmp
loop
inc
jbe
lods
add
ret
test
neg
mov
icebp
jg
cli
mov
cmp
xchg
jle
cmp
add
dec
lods
fisubrs
jo
rcrl
and
out
addb
cltd
out
das
imulb
pusha
fldcw
shlb
or
or
and
movsb
loop
mov
cmp
push
dec
out
pop
or
insl
sub
fistps
cmp
in
es
rolb
xchg
xchg
inc
cmpsb
ljmp
lods
xchg
cmp
or
lock
shrb
and
jmp
dec
fwait
or
adc
adc
jl
or
pop
add
shrb
aam
cmpsb
pop
cmpsl
shrl
stos
mov
subl
mov
add
arpl
xchg
stos
mov
push
or
sub
cmp
xchg
in
out
pushf
mov
enter
jo
loopne
les
xor
inc
dec
arpl
out
and
or
insl
mov
lcall
ret
in
loope
xchg
jmp
sbb
mov
mov
mov
xor
cmp
mov
fwait
inc
fwait
imul
add
mov
jnp
stc
fistps
cmp
pop
fnsave
scas
and
pop
jecxz
push
push
dec
dec
push
aam
adc
out
push
cwtl
filds
dec
gs
dec
shl
jmp
sub
xor
inc
dec
push
sbb
or
or
or
ficoml
xor
insl
push
push
jae
sarl
das
xor
iret
push
mov
pop
push
insl
xchg
dec
fsubr
push
inc
mov
xchg
mov
lret
test
xchg
jecxz
inc
mov
adc
adc
xorl
dec
mov
jecxz
mov
xchg
movsl
test
push
test
cld
cmc
fstl
push
shrb
add
rorb
mov
mov
loope
mov
dec
mov
and
mov
psubusb
fwait
inc
add
sarb
xchg
mov
and
jmp
incl
sti
push
adc
mov
ret
loopne
and
mov
adcl
mov
mov
test
in
mov
ret
push
add
mov
scas
push
xor
shll
push
subb
aaa
and
aaa
mov
inc
inc
sarb
in
pop
jnp
jb
xchg
call
and
arpl
pop
pop
stos
fmull
enter
xchg
enter
pop
sti
ljmp
lods
or
mov
jns
mov
mov
fcmovnb
rolb
push
mov
pop
lret
and
dec
inc
and
stos
rol
sub
and
sub
popf
mov
popa
push
outsl
and
cli
cmp
aas
addr16
call
sub
les
test
pop
sahf
out
divl
push
cmc
lods
fldcw
es
jbe
shl
cmp
push
xchg
pop
pop
test
jb
popf
dec
add
lods
and
cmp
xor
mov
dec
add
sub
out
rol
xor
pop
js
cs
mov
mov
mov
sub
pop
outsb
addb
int3
repnz
icebp
lods
inc
call
mov
mov
push
ljmp
loopne
pop
js
xor
fidivl
ds
cmc
mov
or
repnz
mov
out
lret
sbb
xchg
lcall
push
mov
jle
jo
mov
in
test
daa
test
mov
loope
mov
adc
lret
fbstp
xchg
insb
in
ror
iret
xchg
imull
xor
in
sub
aam
push
scas
imul
mov
mov
call
mov
cs
iret
cwtl
dec
sbb
aaa
adc
dec
ficoms
sbb
xchg
fsub
mov
pop
mov
gs
lds
stos
movsb
push
std
mov
out
push
inc
shl
inc
ficompl
adc
aam
pop
shrb
hlt
addb
lds
daa
test
ret
mov
dec
subb
ucomiss
imul
push
lahf
movsb
jmp
sbb
mov
mov
fucomi
popa
sub
sti
je
imul
dec
and
xchg
cld
call
pop
insb
aaa
jns
repnz
loopne
lret
xlat
scas
push
hlt
movsb
dec
push
pop
aas
ljmp
std
into
sbb
add
sahf
call
mov
xchg
imul
aaa
lods
or
hlt
js
inc
lods
pusha
addr16
loope
pop
fs
add
stos
and
out
clc
mov
xchg
iret
cli
mov
repnz
jno
ret
clc
aaa
xchg
jg
insb
sbb
and
lods
inc
cmp
jp
jl
xor
dec
xor
subl
idivl
rcrb
push
pop
shl
clc
push
decl
inc
mov
push
lods
jne
pop
mov
ret
pusha
ja
repnz
add
xchg
mov
stc
jns
inc
xchg
retw
mov
out
or
andl
push
inc
rep
jmp
jno
test
arpl
xchg
inc
repz
gs
sbb
ja
int
aam
insb
mov
rolb
sub
and
push
pushf
and
shrl
dec
or
push
push
add
sbb
stos
shrb
and
fdivrl
sub
mov
jp
iret
push
andl
jmp
in
adc
xor
in
rclb
sub
cltd
out
loopne
pop
push
ljmp
mov
lods
and
xchg
addr16
icebp
rclb
cmpb
iret
rorl
push
ret
stos
add
lods
ljmp
mov
mov
xor
into
cli
pop
ds
mov
sbb
pop
pop
jbe
lret
aad
jae
fstps
cmp
iret
cmc
jmp
fcmovnu
test
icebp
adc
data16
inc
stos
ds
sub
cli
ljmp
or
push
push
cld
aaa
or
xor
pop
adcb
pop
push
call
icebp
xchg
xchg
mov
fiaddl
jae
add
push
int3
and
lods
fs
mov
xchg
stos
aas
hlt
xor
pop
shlb
pop
js
out
mov
and
movsl
les
push
lods
adc
mov
hlt
insb
mov
and
andl
fsubp
lea
pop
ljmp
inc
jmp
xor
xor
pop
in
push
cs
shrl
or
cmpsl
out
test
sub
mov
dec
imul
pop
test
ds
push
xor
mov
sub
lret
add
mov
test
out
dec
jecxz
repz
mov
fdiv
gs
fcmovb
push
bound
adc
jae
pop
cltd
jae
jge
inc
dec
jno
test
pop
sub
mov
inc
dec
loope
out
push
push
out
out
cmp
bound
and
test
cmp
cwtl
into
ss
mov
fisubrl
test
out
icebp
les
idivl
xor
fisubrl
jns
sarl
es
loopne
cmp
dec
mov
inc
sar
mov
js
leave
ja
push
in
or
dec
jne
test
xchg
cltd
cmp
scas
cltd
xchg
ds
stc
cmc
jno
je
imul
mov
sti
cli
es
sbb
xchg
cmp
scas
dec
or
adc
jno
xchg
mov
in
lret
faddp
dec
dec
sbb
pop
shlb
mov
loop
fwait
das
imul
mov
aaa
psrlw
insl
or
pop
out
mov
or
out
aas
xchg
add
fwait
jle
addr16
mov
mov
pop
jle
push
jae
leave
movsb
cld
ds
mov
jo
in
adc
imul
or
insb
test
inc
mov
or
leave
sub
sub
sub
jns
add
dec
or
xor
lea
popf
mov
cli
jp
jns
je
dec
push
push
mov
insl
xor
rcr
cmp
inc
test
arpl
fyl2xp1
pop
xor
inc
xchg
aad
cmp
mov
into
jo
cmp
mov
add
push
ret
aam
xchg
mov
jle
aad
ret
mov
js
sub
repz
cld
das
arpl
mov
push
jle
test
out
sbb
xchg
cs
sbb
inc
ja
jge
add
test
sbb
mov
repnz
add
das
lahf
xchg
sahf
and
push
inc
arpl
aaa
and
stc
sub
pop
popf
xchg
shrl
lods
lahf
roll
jnp
fwait
outsb
das
mov
ret
push
adc
outsb
sub
out
sarb
test
test
fwait
lods
pop
sub
ficoms
xchg
push
cs
add
mov
mov
sbb
sub
jne
stos
sub
push
mov
loopne
push
sahf
out
sahf
cmp
fsubrp
inc
mov
push
inc
adc
ret
sbb
xor
test
inc
adc
rorl
lcall
adc
andb
hlt
pop
add
jnp
lds
stc
pop
sbb
pop
fs
pushf
cmp
xchg
jl
adc
mov
leave
enter
ljmp
in
movsb
xor
dec
leave
mov
cmp
mov
arpl
add
pop
icebp
daa
mov
cltd
and
inc
popa
popf
xor
push
sub
loope
pushl
dec
mov
jg
and
stos
in
test
rcll
xchg
es
aas
or
aad
insl
push
jb
in
push
add
fiaddl
je
iret
fiadds
test
cld
js
inc
dec
dec
insl
xchg
rolb
mov
outsl
pop
ljmp
pushf
es
xchg
adc
jge
jg
popa
cmp
jbe
mov
aas
in
aas
lea
mov
jle
jne
xchg
bound
adc
adc
aad
inc
push
out
fsubrs
sub
pop
out
jae
jg
fs
mov
lret
lcall
mov
das
mov
pushf
add
sti
dec
pop
in
shrb
sub
fisubs
sti
mov
insb
clc
cmp
lret
add
push
clc
adc
push
mov
int3
fs
push
je
xor
fisubs
push
fdivrs
pop
mov
mov
pxor
mov
arpl
arpl
test
scas
lret
ds
popf
xchg
push
jge
mov
js
in
out
je
leave
ds
mov
mov
int
cmp
jb
xor
and
imul
jecxz,pn
mov
in
out
insb
cmp
xchg
mov
push
sbb
jno
mov
mov
jno
fimuls
sub
cmpsl
ror
dec
shlb
inc
push
lret
xchg
jbe
aaa
xchg
enter
cmp
push
int
and
mov
rorb
jno
jp
mov
inc
jns
push
inc
ljmp
out
mov
out
loope
xor
jl
pop
mov
cwtl
xchg
pop
pusha
cs
out
loopne
lret
clc
jbe
push
test
or
adc
test
addr16
inc
cltd
fsubr
sti
push
mov
aaa
xchg
xchg
ret
stos
aaa
xor
or
mov
fmuls
pop
imul
or
or
xor
pushf
test
stc
xor
mulb
jae
pop
aas
push
and
cmp
out
or
dec
jne
in
shll
pop
cmc
dec
mov
mov
cmp
or
mov
sub
adc
cs
repnz
adcl
stc
inc
shl
and
fld
mov
pop
mov
mov
movsl
jno
xchg
or
mov
dec
cli
and
jns
mov
ja
mov
scas
push
shr
lods
sub
scas
jge
les
mov
xor
ljmp
fwait
mov
dec
sub
xchg
sbb
mov
push
cmp
scas
test
jge
sbb
and
and
mov
mov
sti
fimuls
jb
jo
stc
clc
mov
jne
cs
negb
mov
pop
out
xor
pop
out
jle
or
mov
xlat
popa
xchg
and
or
out
mov
cmp
push
xchg
push
nop
fs
pop
or
jp
scas
arpl
cmp
push
or
mov
in
dec
cmpsb
sti
pop
mov
lret
pop
push
aaa
imul
repz
sbb
push
repz
lret
adc
push
shlb
mul
push
dec
mov
xor
push
sub
in
std
cmp
jl
arpl
aad
jne
jae
call
push
faddl
pop
push
add
mov
xchg
fs
mov
js
adc
pop
inc
pop
mov
jp
std
movsb
pop
gs
xor
sub
iret
test
outsl
addr16
xchg
movsl
lret
mov
xorb
mov
pop
add
jl
xor
lods
jo
mov
int3
lahf
adc
dec
std
fildl
pop
scas
pop
pop
mov
jmp
sub
popa
inc
repnz
dec
push
or
pop
rcrb
pop
out
rolb
into
ret
test
jge
inc
sbb
daa
jns
stc
or
outsl
cld
jnp
div
jbe
movsl
gs
rclb
sub
stos
xor
repnz
cli
stc
xchg
xor
cli
sub
inc
pushf
call
add
dec
out
ret
push
mov
inc
cmp
dec
mov
and
ret
push
outsl
popf
out
test
xor
mov
cltd
jge
sarb
pop
adc
fidivrs
xchg
cltd
leave
in
mov
cmc
popf
leave
or
mov
add
shll
in
pop
mov
jo
cmp
out
cld
or
xchg
js
inc
adc
scas
je
jp
lahf
xchg
ds
add
sbb
jnp
ficompl
dec
cmp
in
fstl
sub
outsb
es
adc
jbe
adc
mov
lock
cmpsl
stc
dec
jo
add
into
fstpl
outsb
or
rcrb
add
add
pusha
jbe
imul
push
jecxz
jl
push
cli
mov
fiaddl
xchg
or
nop
lret
fwait
jecxz
and
loope
jo
inc
inc
sub
mov
push
jmp
add
sbb
cmp
pop
mov
daa
push
fdivrl
test
adc
enter
pop
add
push
lea
push
call
add
lret
movsl
cmp
cmp
mov
fdiv
stos
cld
xchg
push
dec
mov
std
aam
mov
test
test
aaa
ret
sub
das
inc
xchg
je
jmp
repz
pop
bound
jns
std
bound
or
dec
xchg
xchg
sub
xlat
popa
dec
fs
scas
cmp
xchg
vmread
add
repz
and
adc
mov
jns
scas
jp
jo
pushf
and
xchg
mov
das
js
sbb
std
add
sub
ret
pop
and
adc
dec
daa
pop
aaa
add
mov
std
pop
sahf
sarb
and
push
fisttps
in
jb
in
out
lret
test
pop
repz
mov
outsl
or
push
das
jb
dec
sub
pushf
lods
imul
pop
adc
xchg
adc
ss
mov
scas
insl
mov
sub
sub
mov
aad
dec
jg
mov
push
pop
nop
insl
xchg
jne
xchg
repnz
mov
movsl
or
cld
and
test
lock
pop
push
inc
push
adc
insb
out
mov
adc
xchg
lock
outsl
cmp
shr
push
cltd
lds
aam
xor
mov
adc
or
pusha
jg
ljmp
imul
sahf
rorb
xor
mov
cmp
cmp
aad
stc
xchg
test
or
adc
xor
pop
lds
mov
cmp
arpl
aas
inc
shrb
lds
add
fxch
xlat
adc
adc
inc
movsb
pop
mov
movsb
js
nop
push
sbb
mov
adc
jecxz
xchg
add
push
ret
adc
push
mov
cmpsl
push
fadd
scas
cmp
aad
sahf
rcrl
pushf
popl
popa
add
in
movsb
mov
mov
push
pop
fsubrs
ret
movsl
nop
fstl
pop
cs
loope
or
cmc
je
xchg
loop
mov
mov
xchg
mov
mov
jp
imul
negl
pop
or
pop
pop
stc
insl
or
pop
push
mov
ss
nop
dec
adc
adc
adc
sub
cmpsl
test
push
dec
adc
sub
cmp
test
daa
setns
inc
mov
jp
scas
bound
xchg
mov
ret
cltd
test
mov
mov
pushf
cld
int3
push
push
or
leave
mov
cmp
and
repz
dec
adc
sbb
aad
pop
rorb
push
adc
xor
nop
mov
fsts
adc
push
pop
outsb
jp
decb
or
mov
add
fcoml
dec
xcrypt-cbc
cmpsl
adc
mov
xor
sbb
and
xchg
fsubs
nop
int
into
lret
test
jp
stos
inc
jecxz
cmp
cmp
int3
sub
mov
jno
pop
cmp
bnd
lds
push
cmc
or
push
xchg
mov
xor
jae
mov
insb
cld
bound
add
std
incb
or
loopne
sahf
ret
mov
fadd
pop
mov
out
xchg
dec
xor
adc
cmp
cltd
push
cmp
and
push
cmc
mov
loopw
mov
cmp
xor
ret
out
loopne
insl
fwait
in
outsb
push
les
pop
aad
xor
mov
movsb
dec
fimull
cmc
add
int3
ja
arpl
aad
shlb
icebp
rorl
ljmp
mov
scas
pop
pop
add
jl
insl
sub
mov
hlt
sbb
xor
mov
out
out
pop
out
mov
mov
ds
ret
stos
adc
out
sub
imul
dec
sub
sub
jge
stos
or
outsb
out
push
test
bound
inc
ljmp
das
dec
movsb
pop
cs
movsb
in
mov
xchg
push
adc
adc
fimull
loope
xchg
mov
xor
pop
xlat
xchg
jecxz
or
stos
dec
sub
add
loopne
mov
jae
jo
sbb
cwtl
test
mov
fwait
xor
xchg
adc
jno
mov
mov
or
addr16
test
cltd
mov
in
pop
bound
into
ret
add
or
inc
mov
iret
xchg
jecxz
inc
daa
fwait
pop
push
jge
subb
aam
out
imul
pop
mov
fwait
cmp
rcrb
stos
push
dec
cld
mov
lock
push
cmp
nop
cwtl
mov
sub
shlb
jge
rcl
out
pop
xor
mov
test
mov
je
int3
or
xchg
inc
push
push
nop
or
dec
push
and
or
dec
mulb
into
push
test
ds
jmp
push
xchg
adc
lock
xchg
lret
cmp
loope
cli
neg
jmp
mulb
sbb
jnp
inc
test
jns
pop
ret
pop
aam
test
ss
cmp
enter
mov
repz
jg
add
movsl
adc
subl
mov
stos
movsb
ret
or
sbb
push
jnp
or
push
repnz
mul
push
das
pushf
jmp
push
aam
pop
arpl
cmc
mov
pop
dec
adc
mov
and
nop
ss
popa
and
lret
fidivs
add
or
pop
lahf
stc
jmp
add
adc
pusha
fisubl
adc
loop
test
pop
cmp
inc
out
pop
cmp
das
xchg
sub
mov
adcb
popf
ret
lret
adc
pusha
xchg
test
into
jecxz
ss
lds
xchg
pop
adc
jne
adc
push
mov
jne
cld
inc
loop
nop
ja
jnp
in
nopl
and
inc
inc
add
scas
out
ja
xchg
sbb
sub
imul
gs
xor
stc
out
lret
scas
imul
mov
cmp
call
fsubrl
add
push
inc
push
nop
add
sbb
stc
stos
mov
cmp
push
mov
jb
repnz
pop
rcll
and
jmp
out
inc
adc
pop
pushf
stos
loope
mov
pop
test
insb
jmp
cld
imul
out
iret
ja
mov
xchg
shl
or
stc
mov
jecxz
loopne
pop
push
movsb
jns
outsb
lods
mov
movsb
gs
push
sahf
pop
jmp
push
and
sub
pop
dec
outsb
mov
push
adc
in
bound
dec
jb
mov
negl
jmp
jle
xor
sbbb
xchg
or
sbb
pop
sti
loop
mov
in
inc
mov
pushf
in
pop
fisttpll
clc
inc
std
inc
or
insb
call
xor
mov
hlt
outsl
mov
mov
ficompl
cmp
rorl
adc
cmp
mov
xor
push
add
lods
jae
sbb
arpl
sub
mov
push
dec
jge
jno
cwtl
mov
lcall
int3
shrb
jle
mov
or
push
and
sub
outsb
push
pop
mov
aad
mov
arpl
imul
push
and
mov
inc
mov
rolb
loopne
inc
js
dec
ljmp
pop
pop
subl
fs
xchg
ror
dec
adc
nop
push
cmp
mov
inc
jb
pop
cmpsb
imul
outsb
fs
xor
push
rclb
js
and
or
sbb
mov
cmp
jnp
addr16
out
jae
add
add
adc
repz
xor
jmp
pop
sbb
xchg
pop
sbb
sti
insb
mov
cli
fldl
cmc
test
mov
mov
mov
pop
sti
ja
cmc
mov
sbb
rcrl
sub
push
jle
mov
call
repnz
sub
xchg
adc
sti
sbb
mov
rorb
push
test
sub
sub
and
inc
mov
aam
jl
and
xorl
add
mov
xor
stc
lcall
add
lods
bound
and
fwait
jb
lods
push
inc
mov
adcb
aaa
add
pusha
ds
rcrl
jmp
fnsave
loope
icebp
xor
push
cmp
sub
jbe
mov
xor
xor
dec
js
aad
in
or
lcall
sarl
sub
fnstsw
adc
aas
sbb
mov
aas
push
mov
xor
and
add
std
inc
inc
mov
mov
popf
inc
push
xchg
aaa
movb
and
mov
and
loopne
sub
ffreep
scas
inc
dec
in
bnd
and
cmpsb
cmc
mov
sub
pop
mov
pop
ret
adc
in
in
lret
push
rolb
inc
insl
lret
and
movd
subl
test
enter
arpl
cmp
dec
fistl
scas
mov
repnz
xchg
pop
xchg
in
lret
jb
mov
iret
mov
and
push
jle
mov
into
movsl
mov
inc
enter
bound
ret
mov
test
or
and
test
decb
aam
adc
pop
dec
cwtl
data16
dec
rcr
sub
or
dec
jle
adc
push
rcrl
rorl
lods
sar
aad
data16
xchg
inc
das
jns
sbb
sarb
and
xor
out
xchg
mov
adc
pop
mov
les
push
in
and
in
sti
jle
and
into
xchg
or
dec
fldenv
adc
insl
in
pop
adc
lret
fs
jmp
pop
dec
popa
arpl
pop
sub
xor
mov
stos
inc
mov
xor
test
mov
push
cmp
mov
or
mov
inc
fwait
insb
mov
je
ret
mov
sub
xor
arpl
lock
repnz
sub
xchg
mov
adc
sub
lahf
or
jno
fwait
inc
loop
mov
xchg
aam
mov
sub
xchg
mov
cmp
out
pop
shlb
addr16
fs
test
cmp
jle
dec
int
pop
inc
stos
jecxz
push
shll
mov
out
cmovae
push
pop
leave
int3
fisttpll
mov
shlb
loope
out
idiv
fwait
mov
je
push
aas
xchg
test
enter
cmpb
xchg
cmp
adc
pop
rorb
add
icebp
enter
xor
popf
mov
xchg
fdivl
arpl
movsl
or
xchg
andb
cld
fdiv
mov
xor
ja
xor
dec
dec
add
es
cli
push
and
fldenv
push
stos
idivl
ror
cmpl
aaa
jmp
aad
in
jg
mov
aam
stc
popf
mov
pop
leave
mov
lret
sbb
cmp
cld
jnp
fadds
notl
cs
add
popa
into
ljmp
mov
aam
sti
mov
daa
push
daa
push
or
mov
int
cmc
out
lock
mov
pushf
sub
mov
adc
test
adc
outsl
mov
jae
add
xchg
add
clc
std
bound
movb
loop
inc
pop
ret
pusha
xor
bound
adc
dec
cwtl
je
xor
xchg
dec
hlt
adc
mov
pushf
aaa
and
repnz
xchg
add
enter
cwtl
ss
add
or
ljmp
cmp
and
jmp
outsl
ret
fs
jnp
enter
imul
lcall
push
sarl
sub
adc
xchg
enter
incl
mov
or
or
mov
pop
aaa
push
icebp
in
add
mov
negb
rolb
adc
aaa
inc
xor
adc
adc
lret
xchg
jbe
mov
cmp
into
pop
cwtl
ds
and
mov
std
sub
push
add
mov
fidivrs
xchg
dec
xchg
cmp
insb
clc
and
pop
cmp
pop
xor
ljmp
push
mov
sbbl
fs
test
lret
in
pause
mov
inc
outsl
rcll
in
stos
arpl
bound
nop
inc
inc
scas
hlt
sub
mov
sub
dec
cld
lret
jae
push
jl
ds
test
sbb
jo
add
jb
and
into
shll
mov
inc
add
jge
push
sub
adc
adc
add
xor
pop
mov
mov
and
jns
mov
incb
outsb
cmp
cmpsb
or
xchg
into
ds
xchg
jle
lods
and
dec
lret
sbb
mov
push
pushf
scas
xor
and
push
or
dec
ljmp
mov
sarb
jg
fs
mov
jae
dec
sbb
arpl
or
push
mov
outsl
xchg
rcll
in
pop
inc
test
pop
mov
pushf
adc
push
or
add
int3
aaa
mov
arpl
pushf
inc
sti
jle
xlat
dec
mov
xor
leave
jp
mov
repnz
xchg
xor
jb
ljmp
rcr
dec
push
movsl
xchg
mov
inc
xchg
add
push
sahf
push
int
inc
jns
cli
jl
fidivrs
cmp
ficoms
mov
add
data16
lea
outsl
ss
dec
xor
inc
pop
dec
and
enter
add
or
inc
and
insl
sbb
mov
mov
stc
or
lret
orb
rcrb
push
rcrb
mov
or
ret
jge
ret
sbb
pop
xor
sub
push
int3
ja
push
clc
and
in
pop
cmp
leave
std
mov
pop
mov
mov
jmp
mov
std
test
arpl
adc
stos
adc
sbb
shl
xor
sbb
pop
and
lock
pushf
int3
pop
orb
mov
mov
push
mov
mov
pop
sub
mov
insl
pop
dec
xchg
cmp
ja
data16
xchg
js,pn
scas
call
adc
or
test
inc
aaa
mov
sub
imul
clc
xchg
or
jne
clc
sar
jl
sbb
int
inc
add
cmp
rcrl
inc
xor
test
aas
sbb
std
sbb
lock
mov
adcl
dec
push
in
out
cmp
mov
movsb
and
push
push
sub
test
inc
rcl
icebp
pop
mull
cmp
jae
ret
add
test
jmp
mov
pop
xchg
add
inc
mov
lods
jl
add
xchg
popf
icebp
movl
pop
pushl
sahf
mov
faddl
loope
idivb
mov
dec
adc
mov
inc
or
cmpl
movsb
sarb
outsb
insb
insl
add
lock
lret
mov
cmp
jge
out
and
dec
xor
push
add
ds
add
lcall
idiv
inc
xor
xchg
jecxz
cs
ds
xor
leave
inc
iret
rol
inc
icebp
xchg
popf
out
inc
test
loope
jnp
dec
jl
jle
pushw
aam
jmp
adc
xor
mov
pusha
imul
leave
and
jmp
xor
es
in
or
jno
cltd
xlat
jne
and
sub
mov
fstpt
aaa
push
daa
sarb
psrlq
loop
popa
mov
or
fstps
jb
inc
inc
test
int
gs
shrl
and
push
push
repnz
mov
mov
ja
inc
or
fisttps
rcl
jno
xchg
jp
leave
sarb
xor
push
push
add
jo
test
je
sub
sbb
lret
and
arpl
loop
notb
orb
add
div
add
adcl
das
scas
test
loopne
dec
adc
mov
outsl
shlb
sub
and
and
pop
adc
sub
mov
int3
pop
lahf
mov
nop
cmp
sbb
mov
cmc
aas
adc
xchg
mov
fsubrp
aam
mov
cmp
jge
pushf
jns
xchg
insb
rcll
out
mov
dec
jge
js
js
mov
stos
insb
aad
enter
aaa
xchg
xchg
sar
pop
sub
add
cmp
add
into
push
out
jp
sub
out
mov
jle
xor
pop
adc
imul
int
adc
leave
dec
std
sahf
fwait
pop
mov
fwait
xor
mov
fs
fisubl
cli
pop
push
sub
cld
push
dec
push
push
cmc
lods
hlt
test
mov
jo
jb
imul
mov
cwtl
popa
dec
cltd
mov
adc
imul
mov
das
add
mov
iret
and
clts
adc
inc
add
aaa
stos
adc
or
andl
in
sbb
ds
cmp
arpl
jge
leave
pop
imul
js
addr16
xchg
mov
in
and
out
ret
scas
or
mov
aaa
cs
push
mov
movsb
jo
add
flds
cmc
test
jbe
loopne
call
and
xor
add
sti
das
rolb
sbb
xor
loope
jbe
add
mov
dec
cmc
lods
stos
cmpsl
out
and
xor
popa
sbb
jne
call
cmpsl
into
cmpb
mov
lds
or
lods
sub
sub
mov
xchg
cmc
and
mov
popa
mov
fcmovbe
pusha
add
cmp
stos
adc
mov
ret
or
imul
loope
packuswb
jecxz
mov
mov
push
mov
lret
add
mov
sarb
repz
jno
xchg
jbe
in
fidivl
orb
adc
fwait
lea
out
push
cs
outsb
and
or
dec
pop
cmp
dec
jmp
mov
test
rclb
mov
mov
fs
pushf
lcall
loopne
pop
insb
cmpsb
xor
mov
std
fcoms
dec
adc
xchg
ljmp
mov
inc
int3
mov
xchg
dec
jnp
js
mov
dec
int
jecxz
fld
jbe
cmp
cld
cmpb
sbb
insl
adcl
lock
lret
bound
repz
push
outsb
pop
call
xchg
dec
or
adc
and
add
scas
dec
std
enter
cmp
in
ds
ror
cmpsb
push
std
cmpsb
cld
xchg
adc
into
mov
jecxz
outsl
out
cmp
in
add
and
enter
add
loop
push
loope
ret
ss
jmp
mov
fsubrs
or
std
data16
xchg
jne
fdivr
lea
int
inc
out
jp
dec
shll
dec
shrl
adc
adc
or
mov
mov
add
icebp
icebp
mov
pop
mov
lahf
lcall
cmc
arpl
xor
xor
stc
sbb
jl
pop
movsb
loop
mov
mov
pop
iret
pop
in
mov
inc
jl
push
xchg
add
call
cmpsb
arpl
push
jnp
fcmovbe
insb
pop
cld
outsl
jmp
or
sbb
xchg
add
xor
stos
xchg
daa
jecxz
or
shr
fmull
cli
das
adc
push
jge
or
xor
adc
mov
adc
scas
jb
in
outsl
bound
mov
mov
loop
stos
rorb
pop
xor
xchg
and
imulb
mov
lret
mov
mov
cli
jp
add
outsb
add
sbb
loope
gs
lock
insl
dec
int
jo
mov
mov
pop
shlb
test
mov
das
dec
fwait
mov
movsb
jp
dec
mov
sub
bound
and
test
call
mov
xchg
mov
mov
jp
imul
jne
dec
test
xor
or
adc
les
mov
xor
pop
ja
cmpsb
sbb
xlat
inc
int3
pusha
ret
mov
icebp
ficomps
add
pushf
mov
gs
cmpsb
sub
popa
add
test
loop
inc
and
inc
adc
addb
pop
clc
std
jmp
loopne
jbe
mov
mov
mov
or
inc
sub
sbb
fistl
and
ret
aas
lret
popa
ds
insb
scas
pop
jns
adcb
push
sub
mov
cmp
test
out
lods
inc
mov
add
test
daa
xchg
pop
xor
out
imul
int3
mull
add
repnz
aam
lahf
add
push
push
scas
dec
mov
xchg
loope
or
adc
mov
das
imul
lret
das
cwtl
fsub
outsl
sub
test
mov
mov
popl
ret
outsl
mov
outsl
insl
mov
xlat
add
movsb
scas
scas
push
and
or
mov
push
mov
inc
testb
cmp
push
inc
pop
pop
fwait
sbb
into
int
inc
loopne
xchg
adc
pop
pop
dec
inc
mov
jno
aad
or
faddl
sarl
pop
dec
in
and
jb
mov
inc
ret
push
add
mov
dec
sub
arpl
fwait
and
insb
cli
or
sbb
aam
mov
imul
xchg
in
addps
subb
pop
je
xor
mov
cmc
loop
dec
push
push
hlt
in
or
mov
dec
xchg
or
div
add
aam
mov
cmp
mov
lods
cmpsb
cmp
or
test
js
or
cmp
dec
faddl
std
add
pop
pop
pop
jns
jle
pop
pushf
mov
jo
fs
cld
aaa
push
movsb
jo
lods
and
jnp
xchg
int3
adcb
scas
fmuls
sbb
mov
lea
inc
adc
xlat
fildll
icebp
iret
cmp
pop
lea
mov
jmp
pop
je
incl
inc
adc
fisubrl
xor
jmp
int3
mov
mov
inc
pop
xchg
movups
adc
jl
rclb
jns
inc
jl
pop
out
fs
xchg
cltd
pop
cmpb
or
jnp
adc
jae
popf
dec
inc
xchg
into
jne
pop
ret
adc
rorb
dec
cmp
fs
pop
in
inc
mov
inc
sbb
loop
test
test
decb
stc
xchg
push
xchg
andb
push
adc
fsubl
sbb
push
scas
inc
cs
xchg
dec
insb
cmpsb
mov
shrb
clc
aas
movsl
iret
mov
leave
mov
fistpll
mov
push
lret
jo
imul
xchg
sbb
push
mov
inc
cli
dec
jne
sbb
movsl
or
movsl
mov
and
divb
cs
and
sbb
mov
jo
sbb
xor
jecxz
pop
jl
fs
xorb
inc
and
xchg
outsl
mov
cs
popa
repnz
scas
sbb
movsb
or
call
jl
orb
popa
mov
test
pop
insb
inc
xchg
push
xor
movsl
jl
mov
stc
jno
movsl
jns
ret
xchg
fs
test
pop
push
push
and
enter
mov
xor
push
sbb
pop
in
dec
repz
loopne
inc
stc
fwait
sub
and
pop
mov
movsl
les
dec
xchg
je
ret
cltd
push
stos
aam
test
pop
mov
adc
add
and
add
jle
sbb
cli
mov
xchg
mov
push
pusha
xlat
cs
fs
pop
loopne
adcl
push
sti
xor
cmc
lret
fs
fdiv
dec
dec
sarb
push
add
jne
xchg
fimull
lret
popf
stos
xchg
adc
in
xor
adc
lods
loope
sub
outsl
pop
jno
out
xchg
daa
cld
add
lahf
lret
popa
cmp
xchg
ds
mulb
shll
jmp
jno
cmp
jo
test
fs
imul
push
and
mov
push
stc
rcrb
push
jns
int
ffreep
pop
add
decl
xchg
fadd
sti
xchg
test
fs
mov
dec
ds
les
and
decb
pop
add
sbb
ret
in
push
es
lret
dec
inc
into
push
pop
shll
icebp
jnp
adc
add
or
adc
cmc
shr
fcmovu
xchg
adc
jle
cs
mov
dec
mov
pop
lret
hlt
xor
push
adc
fisubl
pop
jl
xor
or
shll
xchg
sbb
lods
lret
dec
sbb
ret
jns
ljmp
add
push
ret
adc
loop
cltd
adc
lret
stos
mov
pop
cmp
enter
xchg
aaa
mov
lret
push
add
xor
and
cltd
sti
xchg
sub
orl
stc
test
movsb
sahf
push
cmp
pop
aaa
cs
add
xchg
add
and
out
pop
rcrl
jmp
sbb
out
lahf
cmpsb
jae
rolb
push
int3
add
jecxz
lds
or
sti
cmpsb
jp
pop
call
mov
push
mov
adcb
cltd
out
adc
lcall
movl
aas
lret
mov
push
pop
pop
ftst
ret
aas
mov
xchg
dec
out
pop
adcl
out
mov
shlb
mov
out
push
and
push
xlat
ja
test
cmp
mov
push
dec
stos
xor
push
add
push
test
ljmp
test
sti
jno
push
push
movsb
lods
notl
xor
sbb
fcoms
imul
pop
int3
enter
inc
loopne
movsl
insb
dec
cmp
xchg
and
dec
js
aaa
xchg
cs
xor
daa
rol
push
cmp
mov
das
jmp
xlat
js
leave
fsqrt
fdivrs
outsb
testb
or
addr16
popf
jg
adc
int
lahf
mov
roll
imul
fnsave
inc
fmull
lods
push
out
ss
in
xchg
stc
enter
inc
mov
and
loope
pop
push
addr16
ret
dec
out
sub
or
mov
cmp
int
das
inc
popa
add
inc
push
or
xor
mov
or
jl
sbb
movsb
dec
mov
mov
mov
cs
sub
aam
xor
cmp
dec
or
insb
and
loopne
push
sbb
xchg
repnz
scas
mov
int3
cmp
pop
dec
std
jge
xor
cwtl
hlt
xchg
cmp
cmpsl
push
decb
and
cmc
xchg
cmp
mov
jns
test
iret
jle
add
mov
dec
xchg
stos
pop
xchg
jnp
dec
cmp
xorl
sbb
xlat
data16
js
xorl
faddl
push
cmp
fwait
fs
pushf
dec
mov
cltd
xor
loopne
inc
push
pusha
nopl
xchg
in
repnz
jecxz
xlat
xorb
push
push
mov
cmp
insl
or
enter
out
pop
pop
sub
push
cmp
or
insb
xor
pop
adcb
insb
cmc
cs
xchg
push
pop
or
pop
and
iret
ss
mov
pop
loope
repnz
mov
ja
add
stos
mov
mov
mov
push
nop
jp
push
xchg
xor
mov
aaa
jge
fsubs
ljmp
scas
sub
fs
jns
pop
int
test
out
cmp
fstpt
dec
aas
data16
bound
stc
adc
xor
add
jp
rcr
mov
dec
lock
mov
jb
shll
xchg
dec
sbb
pop
lock
aas
loope
std
add
xchg
pop
xchg
push
in
daa
dec
stos
sahf
nop
gs
lods
push
fbstp
sbbb
insl
outsb
add
jns
movsb
jle
xchg
or
daa
repnz
adc
pop
test
sub
loope
ret
jl
lods
loopne
mov
mov
into
adc
fwait
insb
fidivs
jg
jg
testb
pushf
aas
cmpsb
xchg
addb
ljmp
mov
addr16
mov
jp
mov
cmp
insb
sub
stos
jmp
dec
cmc
pop
jmp
jno
aaa
sbbl
mov
inc
int
jg
add
adc
adc
cwtl
cs
cwtl
cltd
mov
mov
loope
push
ss
pop
cmpsl
pushf
cmp
mul
dec
in
jecxz
cld
stos
or
jns
push
mov
inc
push
jbe
ja
and
lea
sub
cmp
xchg
sbb
pop
add
jns
add
and
icebp
xchg
ss
in
lret
push
repz
leave
fidivrs
sub
lahf
mov
jo
dec
lret
out
mov
repz
call
mov
lcall
out
in
repz
lock
xchg
pop
mov
arpl
popa
movsb
dec
push
lods
mov
lods
inc
mov
xor
insl
push
push
or
and
in
mov
xor
jns
jae
nop
aaa
push
mov
mov
xor
sbb
pushf
mov
ret
mov
mov
ljmp
push
or
in
pop
jnp
fnstsw
or
inc
xchg
mov
icebp
and
filds
jecxz
insl
test
out
xor
sbb
cmp
fwait
mov
xchg
or
nop
pop
adc
pop
es
sbb
mov
mov
jo
mov
push
xrelease
sbb
into
ret
lahf
pop
or
mov
mov
rcrl
daa
imulb
mov
hlt
or
push
mov
push
dec
or
or
lcall
mov
div
dec
xchg
jns
std
mov
mov
fwait
sub
sbb
or
and
and
xor
cwtl
cltd
jnp
push
xor
push
fsubl
les
push
mov
cmpsl
int3
fs
xlat
fimuls
jbe
movsl
subl
push
pushf
pusha
and
movb
stos
jmp
mov
and
lea
daa
aas
aas
cmp
push
stos
jne
fnstenv
pop
sbb
insl
push
dec
stos
jnp
jg
iret
lcall
mov
dec
pop
jle
sbb
call
in
mov
push
sbb
hlt
push
sbb
lret
mov
aaa
hlt
push
xchg
cmp
gs
ror
xchg
mov
inc
push
ss
popa
scas
xor
or
clc
fisubrl
out
inc
mov
je
sbbl
sub
pop
outsb
xor
popf
les
smsw
xchg
scas
bound
lock
int
pusha
cmp
fsubrl
ficomps
mov
cld
push
mov
cli
idivb
inc
dec
ja
shll
jne
clc
insl
cwtl
out
ljmp
out
add
lock
sahf
sub
fdivl
sub
add
push
lret
ja
cmp
dec
lods
xchg
lds
pop
scas
or
jmp
in
jg
dec
loop
je
data16
pop
imul
mov
jmp
xor
gs
jns
and
out
popa
addb
jb
fwait
cmp
mov
cmp
mov
stc
fnstsw
test
push
sbb
cli
or
xchg
cmpsl
aaa
out
insb
push
push
xor
or
and
loopne
mov
test
lcall
out
sbb
pop
das
cmp
jp
xchg
lods
insl
cmp
dec
aad
sbb
test
dec
cmp
push
and
sub
xor
mov
test
pop
xchg
cmp
mov
cmp
sti
sub
add
scas
jno
and
adc
lock
jbe
jbe
push
jne
pop
insb
cmc
lea
mov
sbb
pop
test
push
lods
sbb
push
mov
push
repnz
movsb
sbb
jle,pt
pop
js
leave
imul
fdivs
push
shrl
mov
jle
nop
mov
cld
shll
push
sub
scas
lcall
daa
ret
rorl
sub
loope
adc
sbb
push
cmp
sbb
dec
sbb
jecxz
shrl
insb
into
inc
inc
xchg
scas
inc
or
shl
fs
in
fnstenv
cli
sbb
cmp
xchg
adc
movsl
sbb
jbe
mov
sub
ljmp
lret
daa
jbe
cmc
mov
mov
in
nop
aas
lds
jp
bswap
xchg
adc
push
popf
xchg
sub
jb
jb
adc
insb
stos
adc
orl
test
div
push
jae
ljmp
jmp
mov
loope
adc
xchg
add
push
hlt
mov
push
lcall
push
test
addr16
pop
inc
daa
add
cwtl
mov
jne
inc
arpl
mov
rcll
push
jb
mov
pushf
xchg
and
and
rorl
mov
pushf
dec
clc
adc
stos
pop
dec
or
popf
jnp
and
cli
jae
fldcw
xchg
xadd
jae
iret
bound
mov
ds
shrb
jbe
mov
inc
sub
sbb
sbb
dec
jle
data16
lret
push
lret
stos
stos
mov
inc
dec
out
cmp
pop
push
rorb
in
popa
push
sub
jge
mov
push
sbb
shl
inc
xor
mov
cmpsb
mov
pop
sub
mov
addr16
sub
xchg
cmp
mov
movsb
mov
fbstp
mov
push
ror
inc
out
and
mov
jg
cmp
pop
divb
ljmp
nop
mov
pop
and
es
movsl
adc
mov
xchg
rol
hlt
movsl
dec
adc
fs
je
push
mov
or
lods
cmpsb
adc
shrl
add
dec
int
pop
and
addl
jno,pt
adc
xchg
xchg
and
leave
hlt
ds
mov
lods
pop
push
loop
inc
es
in
cs
movsl
inc
notb
lods
xor
insl
jbe
int3
mov
push
into
test
jp
pushw
pushf
sbb
inc
mov
xor
and
cs
test
cli
lea
jecxz
ljmp
or
adc
xor
or
inc
cmpsl
dec
sub
sbb
bound
push
jmp
outsl
pop
jmp
xchg
jg
outsb
test
and
mov
sub
pop
inc
out
mov
pop
lahf
pop
push
ds
jp
js
xor
cmc
int
mov
insl
or
data16
jmp
inc
sub
insb
and
mov
sub
iret
stos
sbbb
mov
sub
loope
and
xor
out
or
or
push
cltd
and
jecxz
mov
test
mov
test
cmp
xor
or
in
sub
int
test
pushf
fsub
decl
arpl
mov
mov
out
movsl
and
pop
bound
scas
add
sub
fdivr
loope
sbb
pop
mov
pop
lret
mov
lock
or
mov
fwait
inc
inc
sbb
add
lret
sbb
jg
mov
pop
add
je
std
scas
pop
shll
xchg
loop
sub
pusha
loopne
mov
fldenv
sub
or
push
imul
mov
loop
fstpl
add
jle
pop
enter
lret
pop
loop
sti
data16
jbe
jbe
mov
pushf
mov
ficomps
jmp
add
jmp
leave
adc
inc
filds
dec
jmp
addr16
mov
add
dec
jle
mov
sbb
sbb
push
dec
addl
ret
cld
pusha
xor
jnp
push
and
movb
and
movsb
pop
push
loop
je
mov
cmpsb
push
dec
inc
out
cmp
dec
lret
sub
xchg
and
nop
cmp
out
adc
outsb
in
outsl
push
mov
pop
lea
mov
inc
xchg
ss
cmp
into
jmp
xchg
inc
cli
popf
mov
dec
mov
sbb
cwtl
fstps
push
andb
inc
into
push
std
or
sbb
xor
sub
inc
daa
push
clc
dec
mov
std
jo
imul
mov
sub
in
cmpb
push
mov
loopne
std
add
add
mov
sti
jae
xor
cld
pushf
xchg
adc
ret
lret
cs
xor
cld
cltd
scas
pop
out
inc
inc
loop
adc
lock
cmovs
xchg
imul
mov
outsb
push
sti
sbb
mov
aas
xchg
dec
sbb
cmp
repnz
xor
lret
insb
push
leave
out
xchg
xchg
shlb
aas
xor
ret
jmp
dec
pop
xchg
cmp
inc
pop
push
cmp
pop
bnd
mov
mov
cmpsl
fsubs
dec
aam
adc
iret
fnstenv
sub
hlt
push
xchg
push
aam
fistl
rol
cmpsl
aas
cmp
xchg
pop
xchg
pop
fidivl
push
sbb
mov
pop
idivl
jo
pushf
outsl
shll
inc
cmp
add
out
out
inc
rcrl
push
repnz
outsb
pop
add
adc
mov
hlt
jo
stos
lock
lods
pop
js
push
cmp
mov
xor
in
icebp
or
and
loop
gs
sub
sub
mov
ljmp
and
push
std
or
sub
jl
mov
xchg
inc
bound
sbb
and
shll
mov
mov
mov
cmp
fdivrs
mov
sub
mov
imul
sbb
cmpsb
fwait
pop
xchg
sahf
xor
in
push
cmpsb
and
jbe
cmc
xlat
and
daa
and
mov
xchg
xchg
push
lret
sbb
sub
leave
aam
and
lds
daa
js
and
mov
push
xchg
dec
inc
mov
cmp
daa
cld
jns
mov
bound
fbld
bound
xor
cld
sub
inc
jl
pushf
lods
es
mov
sub
mov
cmp
and
dec
fwait
xchg
insb
sbb
insb
sbb
push
and
push
mov
pop
fwait
or
mov
push
pop
push
adc
adc
and
xor
cwtl
mov
stos
adc
or
icebp
jmp
outsb
dec
roll
xor
cwtl
add
mov
scas
outsl
add
in
lods
int3
sti
add
jp
lock
shlb
adc
and
repnz
inc
sbb
xchg
retw
enter
bound
jb
into
jno
rorl
imul
xlat
xor
push
addr16
mov
out
jae
dec
and
pusha
pop
scas
mov
sahf
pop
cmpsb
ret
test
dec
jge
push
ss
jbe
movsl
mov
cs
js
mov
add
mov
jbe
jecxz
adc
sti
sub
loope
pop
adc
mov
xor
mov
and
ret
pop
scas
push
in
mov
idiv
pop
into
pop
daa
mov
nop
daa
xchg
lahf
sub
pop
rcrb
imul
inc
push
mov
imul
mov
mov
ja
in
cmp
cli
lea
pop
dec
jno
outsl
in
or
and
pop
cld
fstpt
lea
pop
inc
out
lret
leave
or
addr16
dec
pop
push
std
sahf
iret
push
dec
out
clc
jge
ja
test
sbb
push
aas
cmpsl
push
lods
pop
lcall
stos
rolb
add
js
cmp
and
sti
dec
xchg
or
sub
add
mov
sarl
xlat
jns
adc
jno
add
cmp
xchg
movsl
fsubr
pop
ret
or
das
imul
ret
lods
add
xor
jne
mov
lods
cld
xchg
and
xor
rcrb
fcoml
cs
cltd
xchg
jecxz
sub
fnstcw
mov
scas
jne
mov
add
repz
push
jg
mov
call
mov
scas
enter
aaa
mov
nop
add
test
iret
leave
pusha
or
int3
vmwrite
mov
iret
xor
dec
push
and
cmp
fdiv
in
adc
push
movsb
movsl
jg
sti
push
jno
shlb
jmp
in
adc
sbb
aam
jae
nop
xchg
icebp
in
rcrb
fistps
push
fistpll
jge
cmp
insb
decl
xor
xor
sub
in
ds
mov
mov
arpl
cmp
cmpsb
gs
mov
iret
nop
adc
pop
insl
sbb
arpl
cli
addr16
mov
mov
add
into
fwait
divb
nop
daa
fwait
adc
insb
sarb
jecxz
push
push
rcr
iret
mov
lcall
mov
or
rorb
push
mov
push
jae
ret
hlt
sbb
fimuls
sahf
and
clc
int3
cmp
cli
imul
int3
ret
mov
adc
pushl
push
test
sub
into
jae
sbb
cmp
mov
jge
movsl
pop
in
out
mov
jb
repnz
loope
dec
jno
movsl
xchg
cmp
arpl
repnz
fstpt
and
mov
push
icebp
inc
ss
es
or
sti
sub
divb
fcmovnu
ss
loopne
push
pop
xor
jns
jo
popf
rorl
cmc
daa
aam
dec
les
test
icebp
pinsrw
adc
and
xlat
or
mov
stc
cmpsb
xchg
call
pop
adc
mov
inc
rcll
rcr
aam
add
les
jnp
outsl
xor
fs
jbe
sarb
jl
mov
pop
fcoml
jmp
flds
jb
popa
cli
cmp
or
add
jmp
push
mov
movsb
rcrb
jecxz
cwtl
sub
ja
lcall
push
leave
mov
je
inc
sub
mov
cmp
sbb
cmp
sarl
fists
pop
add
adc
gs
je
add
gs
xchg
xchg
cmpb
loop
outsb
cmp
push
pop
rolb
repz
mov
dec
xchg
faddl
inc
les
dec
inc
mov
and
mov
dec
inc
mov
xchg
into
repz
xor
dec
sub
xchg
ljmp
daa
scas
test
push
xchg
scas
rorb
call
insl
and
pop
notl
in
call
push
jo
adc
lock
inc
or
push
imul
push
fsubr
xchg
and
sbbl
jl
sub
lds
mov
into
jge
push
cmp
fdivs
mov
inc
mov
push
daa
add
xchg
ds
fistpl
sbb
popf
sti
in
pmulhuw
lahf
mov
and
dec
mov
pop
mov
scas
cld
outsl
mov
sub
xor
sti
mov
call
add
xchg
pop
fwait
push
pop
mov
mov
jle
fwait
xchg
pop
xor
aam
xchg
push
lcall
test
shlb
and
pop
fwait
mov
loope
arpl
test
mov
mov
das
mov
in
xor
xor
sbb
ljmp
jno
sbb
pop
repnz
xor
cmp
push
ss
cltd
jp
iret
push
cmp
stos
shlb
popa
mov
add
pop
aad
mov
neg
adc
pop
push
xor
sti
adc
mov
pusha
lods
jne
add
adc
push
xchg
aam
push
or
dec
dec
cmpsb
cmp
mov
insl
xchg
or
xlat
jae
pusha
js
lahf
lret
mov
jno
jae
push
jno
das
xchg
arpl
push
sbbb
notl
subl
mov
jl
out
call
lcall
lcall
sub
pop
mov
ret
pop
mov
inc
pop
dec
pop
out
lret
jnp
or
ret
in
fisubl
jnp
pop
lret
mov
push
icebp
pop
rol
dec
loopne
and
call
aas
adc
sub
popa
mull
jge
addr16
imul
icebp
mov
add
mov
sub
outsb
jne
decb
pop
fcmovnb
add
cli
stos
stos
arpl
test
insb
lods
push
or
xlat
in
cs
lds
cli
adc
loop
das
int3
cld
adcb
adc
xchg
test
movsb
shl
adc
jmp
cmpsb
jp
or
xchg
pop
adc
mov
aas
sbb
test
movsl
push
aas
pop
scas
mov
in
jg
dec
push
jae
pop
lret
dec
push
fisttpl
push
popf
std
dec
cmp
push
cmp
call
xlat
call
popa
pusha
push
jge
dec
mov
sub
jae
dec
shll
test
les
orb
push
and
bound
daa
xor
lock
pop
mov
mov
add
movsb
insl
fsubrs
adc
loopne
xor
inc
push
jno
sbb
stc
sbb
cltd
xchg
shll
rcrb
xor
or
out
insl
dec
loopne
cmp
stc
adcb
push
xlat
fistl
out
lock
inc
scas
add
lods
inc
dec
testb
shrb
orl
rorb
xchg
cmp
dec
gs
mov
push
imul
stc
push
in
jg
cmp
aas
shl
sbb
push
test
add
pusha
repz
pop
push
shlb
dec
lock
aad
shlb
cmp
dec
xchg
lret
loop
pop
daa
cmp
mov
cld
popf
std
adc
pop
popf
push
sarl
nop
bound
shlb
xor
das
and
cmpsb
shl
clc
sbb
xor
cmp
push
popf
rcr
ror
aas
xchg
test
loope
dec
inc
and
insb
call
roll
pop
mov
outsl
cmc
lret
imul
in
out
iret
leave
xchg
and
in
dec
or
sub
cmp
cld
xlat
mov
xchg
dec
ret
testb
adc
imul
push
jle
pusha
inc
jne
cmc
dec
jbe
mov
dec
aaa
pop
sbb
inc
incl
addr16
adcb
and
js
xor
incb
sub
fyl2xp1
fucomip
cwtl
and
ss
inc
xchg
iret
test
loopne
inc
ficoml
dec
sbb
and
in
faddl
push
cmpsb
sbb
mov
mov
stos
lds
cwtl
cmp
mov
mulb
movsb
fldt
mov
repnz
jb
in
mov
pop
dec
enter
aaa
push
or
xor
adcb
mov
mov
xor
test
mov
mov
lcall
aas
cmp
data16
dec
mov
inc
cli
dec
mov
and
imul
addr16
mov
mov
fistps
in
ficomps
filds
lret
cmp
insl
push
in
adc
ja
adc
push
pop
ljmp
pop
pop
enter
out
mov
jp
sbb
test
cmc
pop
pushf
outsl
inc
jp
mov
lds
mov
fbld
add
mov
divl
mov
push
xor
adc
sti
fcompl
arpl
adc
jecxz
and
out
cld
sbb
jg
icebp
cld
and
cmp
jge
aaa
cltd
sbb
pop
pop
out
jle
xchg
add
outsl
dec
in
scas
fistpl
ja
setg
jge
incl
push
sub
inc
aaa
loope
inc
jge
repz
loope
mov
and
ja
jnp
in
into
sbb
push
test
xor
sarl
jb
loop
mov
push
mov
ss
xor
hlt
pop
scas
in
ficompl
in
or
jg
sub
or
leave
xchg
xchg
addr16
mov
gs
pop
aam
xlat
pop
pushf
in
xchg
pop
stos
adc
mov
mov
jno
in
cmpsl
popf
pop
or
mov
arpl
fistpl
xor
xor
xchg
mov
mov
lea
mov
mov
mov
xchg
xchg
fnsave
push
lahf
and
push
cmp
jae
scas
jmp
dec
out
in
loope
je
insl
adc
xchg
sbb
push
and
inc
jmp
and
adc
fs
jbe
push
fimull
add
mov
jg
aas
pop
or
mov
mov
movsl
mov
sub
pop
push
lods
xor
mov
das
cmc
jp
mov
call
fbstp
xor
rcll
mov
ror
movsb
or
fdiv
sub
insl
popa
inc
xor
jnp
sub
adc
pop
gs
mov
test
shlb
mov
call
gs
cld
pusha
and
call
pop
insl
xor
ss
mov
repnz
jg
mov
nop
imul
jbe
mov
push
in
sahf
hlt
fcom
mov
lods
in
fcoms
mov
and
pop
push
test
mov
out
jp
jo
and
xchg
push
jmp
adc
mov
sbb
cmp
movsb
int3
and
dec
push
fcomps
mov
cmp
daa
pushf
stos
cmpsb
xchg
jo
mov
xchg
push
cmp
neg
jb
dec
rorb
push
inc
xorl
mov
dec
ja
in
cmovp
jnp
push
inc
jg
xor
sub
mov
push
adc
sbb
cmp
adc
push
gs
rcrl
cmp
mov
cmc
mov
les
push
pop
lods
shlb
ficompl
jb
or
adc
fs
addr16
cmc
push
push
pop
inc
jno
pop
push
mov
fst
mov
mov
nop
xchg
movsl
out
sbb
fwait
push
jnp
outsl
int3
cmp
lods
jo
dec
ljmp
lret
divb
repz
mov
mov
xchg
pop
fidivrs
cmp
int3
and
push
cmpsl
xchg
cmpsb
xchg
flds
or
xchg
pushf
xchg
jg
iret
dec
aas
push
sahf
add
lods
and
ss
fs
sbb
jns
and
sti
jae
es
sbb
call
add
or
adc
mov
cmc
mov
stc
out
xor
jg
jg
fdivl
adc
das
cltd
cmp
push
int
ljmp
repz
cmp
mov
fisttpl
das
push
test
cmp
xchg
adc
test
iret
test
mov
loope
ja
push
mov
out
out
and
repnz
icebp
movsb
dec
enter
ds
popa
pop
push
lea
lock
pop
std
pop
mov
into
add
loop,pt
cld
in
test
add
int
stc
adc
fisttpl
mov
fsubr
adcb
mov
cmp
icebp
push
pop
fmull
ret
and
add
ljmp
mov
dec
cli
bound
sub
jmp
push
dec
cltd
pop
ret
ja
pop
lahf
in
inc
repnz
imul
negb
sbbb
lods
jnp
mov
or
loope
cmpsl
mov
sub
cmp
or
xor
mov
and
inc
int3
shl
cmp
fists
jae
pop
rcrl
cmpsl
push
subb
arpl
paddsb
xchg
rorl
xchg
mov
cmpl
mov
xor
repnz
fldl
mov
mov
insl
push
add
and
xorl
pop
dec
xorl
in
cmp
shll
inc
mov
das
dec
cmc
mov
sbb
mov
stos
loope
cmp
push
add
mov
dec
xchg
push
jb
add
test
in
inc
pop
stc
notl
fdiv
mov
inc
xchg
mov
test
or
and
add
push
movsl
sbb
stos
adc
cmp
leave
pop
push
mov
in
fisttps
jle
dec
outsb
cmp
pop
lahf
xchg
sub
cmpsb
cmp
mov
pop
and
mov
mov
int
je
in
es
out
enter
xlat
sub
xor
sbb
fsts
test
mov
pusha
lcall
jae
jno
addps
and
shlb
lret
xchg
ja
mov
insb
mov
and
lret
lods
aaa
bndstx
adc
jmp
dec
push
in
pusha
in
sbb
dec
cmpsb
cmp
dec
sub
ficoms
shlb
add
repnz
ret
mov
sub
je
test
pop
aad
sar
cmpsb
scas
repnz
fadds
enter
in
aas
lret
dec
jae
cmp
aas
dec
subl
xor
xchg
movsl
ja
adc
ja
cmc
ds
push
jle
ret
cmpsl
mov
loop
xor
push
shll
loop
shlb
ficoms
mov
iret
insb
mov
subb
push
xlat
push
xor
std
xchg
inc
inc
jb
and
sub
mov
aas
aad
lock
inc
mov
mov
jo
cli
mov
es
sub
cmpb
aaa
shld
and
cmc
mov
jno
sahf
sbb
add
mov
mov
mov
xchg
inc
cwtl
add
push
mov
pop
jl
xor
mov
sub
jg
push
gs
lret
cli
dec
mov
mov
dec
xchg
int
and
out
lods
stos
fmuls
mov
and
cwtl
or
lahf
xchg
or
sbb
dec
mov
adc
ret
mov
mov
fisttpll
mov
and
cmpsl
dec
lods
mov
sbb
mov
and
xchg
push
jb
adc
mov
in
sub
stos
je
stos
sbb
ret
popa
sbb
cmp
aaa
js
inc
or
fstps
sbb
jae
xchg
push
fwait
mov
iret
loop
cmpb
jecxz
jno
hlt
clc
fwait
adc
andb
push
adc
mov
mov
cmp
mov
xor
ss
test
mov
decl
jo
gs
test
jmp
dec
jnp
sub
std
rolb
iret
fidivrs
jns
fsts
fcomps
mov
inc
and
in
and
push
push
dec
in
out
imul
lcall
sub
dec
jae
mov
adc
inc
push
jb
jne
and
or
arpl
mov
repnz
xlat
shr
outsb
jbe
push
shr
add
cwtl
jecxz
movsl
cmc
movsb
xchg
shlb
mov
movsb
leave
into
imul
mov
lock
and
jle
or
dec
adc
insl
push
pop
xchg
sub
add
fistpll
lahf
jl
add
arpl
sub
cmp
inc
bound
cmp
xchg
jae
test
sub
push
push
ja
negb
mov
lock
lcall
mov
hlt
sbb
xor
mov
dec
sub
leave
pushl
out
std
scas
mov
xchg
shll
and
cmp
bnd
or
jg
pop
fldenv
inc
jp
cmp
fsubl
rolb
scas
push
dec
fisttpll
loop
add
pusha
mov
loop
outsb
and
test
gs
jne
movsl
dec
mov
mov
lock
and
ds
fsubrl
lods
aam
int3
push
pushf
push
dec
outsb
cmpsl
push
and
push
fmuls
mov
sbb
cmp
clc
rcl
pushf
imul
push
pop
adc
push
outsl
in
cmp
push
mov
ss
jb
ret
cmp
mov
faddl
inc
clc
xchg
lds
insl
jge
pusha
inc
add
stos
jp
mov
ffreep
icebp
sti
xor
std
js
leave
scas
cli
add
mov
pop
loope
dec
jne
mov
mov
cli
repnz
mov
inc
call
push
xchg
and
dec
and
push
stc
fidivrs
adc
es
cmp
mov
mov
mov
daa
pop
jp
shl
jmp
lods
dec
cmp
ret
rcll
aad
fdiv
ret
cmp
mov
shl
adc
aaa
cmpsl
mov
adc
bound
fdivrs
inc
outsb
insl
mov
mov
out
add
jns
mov
mov
dec
sub
jmp
stos
dec
idivb
movsl
inc
xlat
icebp
push
ret
or
sbb
in
xchg
shl
adcb
xor
test
push
add
jp
aaa
sti
loop
pop
add
sub
test
push
lret
aam
dec
movsb
jns
lds
fdivp
test
pushf
cmp
mov
out
fsubrs
sbb
mov
mov
out
fcoml
rcrb
push
enter
jg
int3
xchg
push
push
outsl
mov
mov
int
dec
adc
lods
jp
ja
lods
stos
adc
arpl
or
lods
sub
xchg
mov
mov
or
mov
xchg
mov
mov
inc
push
mov
mov
aad
and
dec
inc
rolb
hlt
dec
aaa
add
sbb
lods
test
or
cmpsl
gs
add
das
cmp
scas
jp
test
shrb
mov
dec
jo
lods
cmpsb
or
xchg
loope
lret
daa
mov
sub
or
or
push
mov
lahf
lret
cmp
aaa
push
and
outsl
mov
fldcw
mov
int
mov
pop
jns
mov
fs
test
lret
fwait
movsl
push
mov
push
loopne
iret
pusha
ss
mov
sbb
lods
or
mov
ficomps
mov
hlt
push
or
enter
push
pop
test
jmp
inc
sub
adc
push
xor
mov
nop
scas
xor
dec
addl
pop
lahf
fildl
push
add
mov
mov
mov
ljmp
lahf
cmc
ja
xchg
negb
add
pop
cmp
imul
push
fldpi
sti
cld
into
and
stos
lods
xor
add
and
iret
int
in
xor
pushf
std
sbb
dec
icebp
sbb
sbb
mov
ret
push
jge
mov
xor
dec
xlat
dec
inc
pop
or
je
fidivs
cli
outsl
adc
scas
inc
leave
data16
cwtl
std
mov
push
or
and
cmpsb
xchg
jle
jmp
dec
not
popa
and
sbb
jno
mov
xlat
or
push
cwtl
out
xorl
mov
dec
shl
mov
cli
arpl
and
mov
mov
xchg
mov
mov
lock
fisubrl
push
xchg
add
cmp
psrld
inc
or
fcmovne
pop
outsb
xor
imul
mov
xor
xor
dec
ja
sub
sub
cld
xchg
sbb
or
into
mov
pop
sbb
test
xor
jne
or
sbb
mov
adc
out
jo
mov
int
cmp
fs
inc
lds
jg
push
je
subb
sbb
clc
sbb
pop
adc
jbe
pop
lods
icebp
dec
repz
mov
mov
or
out
xor
push
jle
and
lea
inc
inc
pop
sbb
imul
add
xor
leave
pusha
orb
sbb
mov
push
mov
mov
jb
ljmp
push
daa
mov
inc
xchg
int
fstps
imul
ds
mov
arpl
inc
jb
xchg
and
icebp
xchg
push
test
sub
jmp
sbb
push
jb
out
test
cmp
mov
mov
addr16
mov
sub
jne
repz
inc
xchg
fsubs
adc
xrelease
push
in
jno
inc
loop
js
adcb
cs
add
mov
cmp
pop
js
fidivl
std
jge
subb
adc
xchg
je
push
adc
push
cs
les
nop
mov
rcrb
repz
adc
xor
mov
sub
push
dec
pop
js
inc
inc
in
and
aaa
add
inc
inc
mov
ret
mov
sbb
mov
xor
mov
sub
pop
loope
add
and
enter
mull
or
or
lcall
daa
pop
addb
dec
loopne
hlt
jae
outsb
mov
and
jns
int
js
xlat
je
pop
jns
sub
adc
lock
inc
sbb
int3
inc
je
and
aaa
sti
aam
fldenv
jge
ljmp
cmc
adc
push
and
int3
out
nop
inc
lods
or
sub
aaa
mov
mov
popf
xchg
xchg
jge
stos
in
mov
ss
int3
mov
cvttps2pi
mov
pop
repnz
mov
scas
into
mov
lahf
xchg
fildll
cld
lret
ss
cld
xor
sub
notb
jmp
mov
sahf
rcrl
mov
ret
mov
xchg
icebp
cli
pop
dec
cli
cld
push
mov
testb
jae
lcall
call
int3
push
cmp
in
shrl
pop
pushw
hlt
mov
movsb
adcb
push
outsl
sub
inc
sub
xorb
enter
sub
and
repz
icebp
sub
pop
pop
fstp
rcrl
pop
shlb
test
xor
ljmp
lahf
pop
sub
inc
mov
rcrl
rolb
mov
call
push
ret
xchg
cmpsb
jge
push
adc
sbb
inc
cmp
sub
xchg
sbb
pop
xor
test
cs
mov
in
arpl
data16
cmpsl
es
loope
jmp
jecxz
jmp
test
adc
push
ret
out
int3
push
loopne
leave
jp
aas
std
in
jl
dec
rep
mov
lcall
push
notb
ja
mov
cli
ja
outsb
out
or
inc
data16
push
xor
push
xor
pop
test
mov
mov
ja
pmaddwd
call
push
jbe
fadd
loop
adc
push
push
cmpsl
jns
inc
xor
loope
xor
push
pop
adc
or
lret
mov
imul
xor
into
dec
fstpt
mov
or
push
cmpb
jp
cld
outsb
icebp
adc
jp
std
sub
dec
call
cmp
int
adc
fdivs
or
sub
adc
pop
push
in
and
or
aas
mov
sub
repnz
not
mov
xor
mov
mov
add
pop
lret
cld
jnp
enter
sbb
in
and
icebp
ret
int
test
rolb
pop
cmpb
aas
xchg
movsl
shrl
std
shl
shrl
pop
xor
push
jp
and
movsb
lea
fcmovnb
mov
jl
add
cwtl
and
push
loopne
gs
sub
jge
in
mov
pop
addb
mov
mov
lods
xchg
add
sbb
dec
repnz
and
cmp
fimull
outsb
push
int
sbb
and
jb
mov
loopne
out
dec
adcb
adc
dec
cwtl
int
shlb
in
adc
aad
sub
outsl
or
dec
add
stc
jmp
xlat
xchg
rcll
dec
xchg
aaa
out
adc
fnstsw
sub
jecxz
insb
mov
inc
jns
xor
aas
shlb
pop
jae
pinsrw
pusha
push
out
xchg
jge
sub
pop
inc
cs
mov
orb
mov
popf
addr16
ret
inc
mov
adc
pop
mov
int
xchg
push
aam
mov
rcl
add
mov
es
stos
dec
dec
movsl
jnp
push
mov
mov
cmp
or
outsl
pop
jb
cmp
dec
addr16
in
add
jmp
int
and
xor
fdivp
fstp
sahf
xor
or
mov
or
xchg
out
ret
pop
pop
mov
mov
mov
xchg
lcall
int
lods
xchg
call
sbb
push
arpl
sarl
dec
mov
and
jo
rcr
fildl
push
mov
xchg
cmp
scas
mov
pop
inc
out
das
jg
leave
pop
cmpsl
push
loop
dec
push
fbstp
push
cmp
pop
lods
clc
jmp
mov
repz
add
mov
test
cmp
addr16
pop
jge
dec
push
fimuls
rolb
daa
sub
add
lock
out
iret
sub
cmpsl
cmp
mov
shrl
inc
sbb
adcl
xor
movsb
call
test
nop
je
repz
jno
int
xchg
addl
fstps
pop
dec
pop
or
ret
pop
movsl
add
xor
mov
mov
jmp
or
mul
cmpsb
fimull
or
test
rclb
lahf
mov
cmp
dec
jle
imul
dec
aam
adc
jecxz
push
fdivrp
jle
and
in
leave
pop
int3
sti
rolb
adc
std
mov
dec
mov
lcall
mov
pushf
jnp
push
out
dec
jne
mov
xlat
addb
cmp
aas
out
jmp
repz
dec
cmp
pop
jl
fnstcw
jmp
push
sbb
fisubrl
push
xchg
stc
mov
aas
or
loope
lds
stc
gs
lds
mov
push
outsl
loop
add
sub
jl
std
mov
jp
inc
cmp
imul
adc
xchg
outsb
sbb
push
out
mov
add
stc
xor
sub
loopne
pop
es
push
sub
jne
sbb
icebp
inc
imul
mov
adc
xor
mov
jbe
aad
addr16
loopne
mov
add
mov
inc
jnp
cmp
mov
xchg
leave
int
xchg
scas
mov
mov
mov
adc
adc
testb
std
lret
fdivrs
stos
inc
push
xor
call
jg
movsb
jmp
adc
push
push
and
daa
pop
push
mov
js
pop
dec
adc
pushf
movl
mov
push
in
cltd
mov
pop
mov
xchg
or
mov
mov
and
enter
jmp
dec
mov
mov
shlb
in
in
gs
sbb
stos
inc
sub
loopne
neg
mov
mov
bswap
rorb
enter
push
loop
ljmp
mov
xor
fidivrs
jns
dec
divb
jp
mov
mov
sbb
pop
sub
fnstcw
push
sbbb
mov
mov
js
rorl
idiv
inc
mov
ljmp
jle
fcomi
jge
insl
std
and
insb
xor
ret
jbe
cmc
sub
pop
dec
mov
mov
add
or
lods
cmp
movsb
jmp
jne
pop
loop
jb
fidivrl
xchg
xlat
cli
cmpsl
sbb
popf
xlat
cmp
jmp
int3
cmp
nop
in
pop
jae
pop
ficomps
icebp
pop
pop
mov
notl
shrl
push
addr16
sub
mov
sbb
inc
cmpl
xchg
xor
push
mov
dec
fwait
cmpsl
pop
iret
ret
dec
inc
in
xchg
add
push
ret
adc
popf
rcr
pop
loop
in
movsl
sub
add
clc
and
fwait
xchg
pop
lock
add
test
sub
cmp
adc
jecxz
in
mov
xchg
sbb
insb
sbb
sbb
jno
push
sub
lods
mov
lcall
pop
mov
mov
scas
mov
dec
iret
mov
xchg
jne
jbe
sahf
jbe
lahf
inc
push
test
xchg
outsl
inc
das
pop
dec
pop
cmp
mov
cmp
pusha
xchg
jecxz
nop
sbbb
out
and
xchg
inc
stos
sub
xor
rorl
push
int3
mov
push
sub
mov
mov
gs
pop
fs
repz
mov
push
imul
adc
pop
arpl
sbb
sbb
iret
ret
sahf
out
and
and
popa
inc
neg
stos
stos
notb
lret
mov
inc
out
push
idivb
sti
loopne
mov
ljmp
out
push
cld
inc
stos
ja
pop
into
mov
out
stc
jge
adc
jg
mov
inc
xor
pop
mov
lock
fistpl
int3
sbb
sub
xchg
and
daa
cltd
mov
shrb
jmp
sahf
dec
fsub
cwtl
lods
shrb
xchg
out
repz
bound
fimull
mov
sub
mov
outsb
popf
popa
aam
je
cli
jecxz
push
call
jne
icebp
or
lcall
inc
push
xor
loopne
fwait
je
xchg
jle
push
push
ret
rep
push
test
push
loop
stos
jne
inc
mov
gs
mov
int
and
icebp
inc
mov
add
dec
dec
ljmp
mov
sbb
rcll
icebp
movsl
add
cltd
xor
mov
jae
add
sbb
cwtl
daa
xor
jnp
mov
in
int3
shlb
xor
mov
cmp
cmc
ret
xor
cmp
movsl
cmc
lods
xchg
js
push
mov
fwait
xor
dec
shrl
jl
lock
push
pop
test
stos
mov
imul
mov
xchg
mov
and
fdivl
aam
mov
jne
aaa
xchg
pop
jnp
aas
xor
imul
rcrb
jp
dec
mov
daa
push
fs
add
iret
in
in
mov
out
into
jno
orl
jecxz
jns
mov
mov
cmp
push
insl
add
les
xor
insl
sti
roll
xor
dec
add
ret
xchg
andl
cli
jnp
je
gs
pop
sti
rcrl
dec
adc
shl
jns
icebp
cmp
cmpsb
ja
pop
outsb
adcl
inc
sbb
insl
xor
aaa
mov
jbe
jbe
sbb
xchg
push
insb
rolb
cmp
insb
hlt
lods
outsb
xor
aas
adc
cltd
fs
pop
xchg
out
shrl
lods
push
push
out
and
das
xchg
inc
outsb
or
ja
xchg
das
xchg
ss
cs
sbb
in
cld
jbe
loop
inc
out
testb
xchg
adc
mov
pop
in
jnp
inc
push
or
jecxz
cmp
mov
and
cltd
out
jmp
in
pop
pop
mov
loopne
ljmp
pusha
pop
neg
xchg
mov
mov
inc
shrb
mov
out
or
lock
lahf
mov
arpl
cmp
lcall
test
add
mov
int3
or
pop
add
sbb
dec
xchg
ljmp
sti
imul
mov
xchg
and
add
fwait
outsl
lock
lods
stos
mov
hlt
int
cwtl
sbb
outsl
add
push
mov
sbb
add
cmp
xlat
jmp
ja
mov
and
popa
je
pop
pop
sbb
roll
iret
mov
lcall
out
inc
xor
xchg
mov
cwtl
mov
mov
jmp
or
mov
add
out
repnz
push
mov
sbb
or
inc
out
inc
outsb
mov
push
xchg
test
ds
dec
lahf
lea
xchg
loop
movsb
popf
add
mov
ljmp
jo
inc
and
mov
stos
jg
out
repz
add
add
andb
mov
inc
mov
aas
jo
inc
inc
mov
dec
insl
aas
leave
inc
addr16
jo
js
sbb
outsb
ss
sub
outsb
mov
arpl
push
sbb
outsb
xchg
push
jmp
notb
imul
push
stc
ret
push
push
push
cmpsl
jno
cmp
mov
les
dec
xchg
jg
mov
or
int
jae
xor
push
adc
mov
es
test
dec
dec
jle
cmpsl
addb
xor
fiaddl
rcrb
push
loop
jbe
es
or
nop
jp
pop
and
jne
clc
movsl
addr16
fistps
xchg
cli
jg
sub
insl
int3
pop
push
xchg
in
addr16
in
rcrb
mov
rol
inc
bound
mov
loopne
lret
pop
and
xchg
stos
test
clc
insl
dec
mov
sbb
sub
out
sub
insb
rcrb
jns
cmc
cwtl
jle
mov
mov
icebp
jno
test
stos
repnz
cmp
into
and
mov
jno
adc
lds
fs
lods
adc
jno
cmp
jo
repnz
fstl
or
insb
ret
je
pushf
dec
push
aas
adc
and
pushf
cmpsb
mov
sarl
sub
aam
push
aam
pop
or
fwait
adc
jle
add
arpl
stos
out
jl
dec
es
orb
mov
sti
xchg
lar
push
and
sbb
push
fsubs
push
cmpl
sub
fcmovb
repnz
jnp
bound
or
insb
push
push
xor
dec
scas
push
les
adc
mov
xchg
jle
mov
xlat
negb
es
out
std
sti
dec
sti
icebp
jo
adc
adc
inc
xchg
mov
jnp
add
int
dec
pop
out
jb
inc
fcompl
xor
out
rol
jmp
out
aas
pop
cs
sbb
jns
out
insl
aad
icebp
pusha
adc
imul
outsb
mov
dec
push
cmp
or
mov
mov
leave
pop
sahf
inc
mov
pop
push
add
adc
or
or
dec
pop
dec
pushf
cmp
mov
pop
jg
fidivrs
xorl
xchg
xchg
push
sub
xchg
arpl
jmp
adc
or
int3
pop
inc
pop
mov
pop
dec
xor
loopne
cmp
cmpsl
jbe
cmp
mov
push
js
loopne
inc
or
sbb
fcoms
pop
fstp
jmp
mov
sti
lods
into
mov
adc
ljmp
fldl
out
pop
xchg
scas
ror
and
lods
loopnew
cli
adc
jne
dec
xchg
daa
popf
mov
outsb
cmp
cmp
es
xchg
fcomip
jns
pushw
test
das
or
hlt
aad
sbb
mov
jns
lret
push
and
mov
test
mov
mov
or
repz
std
fadds
xchg
mov
xor
push
arpl
or
daa
aaa
fists
ret
lds
push
loop
sub
gs
aad
test
cwtl
subb
pusha
cmp
clc
rcrb
push
adc
push
addr16
ja
lods
int3
in
scas
outsl
jmp
stos
lret
lret
rorl
fstp
arpl
dec
mov
push
push
cmpb
jbe
jge
xchg
test
and
iret
mov
sahf
nop
mov
popf
mov
mov
mov
hlt
xchg
fstl
push
mov
dec
loopne
test
add
push
and
push
mov
es
mov
mov
aaa
paddusb
daa
and
pop
and
xchg
mov
xchg
scas
in
cmpsl
into
push
push
jmp
mov
add
data16
or
fisttpl
pop
fcompl
dec
std
data16
js
js
mov
xlat
cmp
mov
and
mov
sbb
bound
lcall
pushf
popa
stos
orl
or
mov
roll
inc
fcom
and
ret
and
shlb
fs
xor
sbb
lret
sub
push
push
pop
std
xlat
loopne
mov
and
sbb
sbb
push
dec
push
xorl
mov
repnz
dec
pop
cmp
fxch
clc
test
mov
sbb
insb
ret
fildll
out
push
mov
sbb
stc
sub
and
jge
cmpl
xchg
mull
paddd
das
xchg
xlat
dec
push
jb
push
hlt
pusha
cmpb
or
fidivrs
je
mov
imul
cmp
jmp
lret
stos
xor
arpl
test
jo
ss
aam
cmc
aaa
fs
dec
cli
stos
push
mov
mov
push
push
stos
shll
push
orb
cltd
push
dec
adc
movsl
dec
jb
enter
sti
mov
push
add
lret
insl
fsubs
sub
jl
mov
jmp
ss
and
inc
cmp
mov
jb
pop
fcoml
cmp
pop
xchg
mov
push
add
inc
inc
adc
inc
in
inc
dec
pop
in
mov
mov
ja
ret
xor
out
mov
mov
out
cltd
sbb
jl,pt
mov
clc
cmpsl
test
in
loop
inc
lahf
ss
cwtl
lods
pop
jns
iret
xchg
in
sbb
clc
push
add
mov
enter
stos
jb
test
lret
xchg
testl
insl
imul
idivb
or
lods
nop
jnp
cmpl
shl
xchg
inc
mov
lods
sti
mov
jns
jns
cmp
cmp
int
lret
andb
sbb
inc
mov
out
in
jbe
loopne
cmp
inc
test
sub
mov
shlb
and
add
ror
fbstp
into
scas
enter
in
push
mov
push
repz
mov
or
mov
out
es
pop
xor
mov
pushf
dec
mov
pop
and
dec
mov
icebp
aam
ds
sti
dec
xchg
cmp
std
push
xchg
pop
sbbb
mov
pop
mov
rol
and
sbb
mov
and
addr16
mov
outsl
xchg
cmpb
xor
inc
adc
ffree
sahf
inc
dec
and
cmp
lds
pop
test
mov
xor
jl
clc
stc
insb
in
mov
cwtl
push
jp
dec
mov
repnz
shl
inc
adc
mov
jmp
xor
mov
inc
and
fcom
fdivrs
fdivl
fisttps
dec
ret
mov
loope
aas
xchg
out
ss
sbb
repz
stos
and
shlb
dec
inc
sbb
lret
xchg
mov
icebp
test
inc
add
add
pop
pop
shll
dec
int
jo
or
aaa
outsb
cmpsb
push
sbb
or
test
enter
movsl
or
stos
int
cmpsl
addr16
cmp
fnstsw
xchg
push
and
mov
adcb
xor
popa
dec
ret
mov
movsb
push
jbe
xor
pushf
pop
cltd
negb
pop
cwtl
ds
cltd
mov
sub
sbb
inc
push
mov
rcrb
mov
and
push
pop
sub
cld
ret
test
jmp
loop
xchg
jmp
shl
jo
inc
out
jnp
xchg
mov
insl
sub
imul
push
push
test
mov
sbb
call
xor
pop
ret
xchg
lds
call
aad
sub
ret
loope
lea
imul
mov
in
mull
imul
xchg
fs
rclb
in
dec
in
or
cmp
inc
cmc
outsl
imull
jmp
xchg
add
adc
movsb
dec
insl
call
jle
scas
pop
cmp
jo
xor
mov
psllw
cld
sub
rcll
testl
outsl
ss
jnp
xorb
into
mov
rorl
jle
fwait
push
fs
rolb
xor
adc
js
lea
ficoml
imul
push
and
jmp
or
push
mov
fists
and
pop
mov
test
sbb
push
cli
mov
inc
je
popl
cli
inc
sub
pop
xchg
scas
sbbl
addr16
sbb
fdivp
mov
fdiv
add
out
and
mov
pusha
in
fisttpll
mov
dec
mov
xor
mov
cwtl
sub
add
popa
cmp
fiaddl
test
sahf
fisttps
fwait
outsb
nop
pusha
add
movsl
loope
jnp
aam
aam
in
cmp
mov
aam
mov
mov
les
sub
jnp
sbb
push
psllw
out
pushf
and
mov
pop
mov
lods
jo
lock
in
lea
test
rolb
addr16
aad
sbb
clc
cltd
imull
nop
enter
dec
test
dec
in
pop
push
insl
jl
popa
je
sbb
xor
jmp
dec
jns
mov
lret
sub
push
add
cltd
add
pop
outsl
test
xor
sub
cmpsb
mov
sbb
xchg
fucomi
xchg
cmp
xor
lret
ds
add
pushf
add
std
cmp
dec
dec
mov
xor
stos
sbb
fidivs
ret
mov
ja
and
loop
hlt
and
lret
push
pop
dec
gs
pop
add
add
ljmp
outsb
out
jo
xlat
push
jmp
sub
mov
orl
test
pop
mov
mov
ja
lret
in
sub
and
int
sbb
mov
inc
loope
mov
sbb
pop
ret
jge
sbb
sbb
cmp
pop
in
inc
sbb
call
sbb
les
cmpsb
sbb
jno
jmp
pop
mov
ljmp
push
sbb
sbb
xchg
cmpsb
cmp
test
sub
fwait
das
push
call
sub
notl
mov
sub
sub
or
pop
fwait
loope
adc
enter
aaa
mov
xchg
pop
mov
push
sbb
out
aad
out
and
dec
or
rolb
mov
shll
sbb
in
pop
adc
nop
sbb
jmp
hlt
sbb
clc
pop
jae
lock
js
xchg
movsb
scas
xchg
mov
adc
out
xchg
lea
push
data16
mov
test
lahf
rcr
movsl
and
popf
cs
xchg
mov
aam
dec
cmpsb
ljmp
sbb
jns
xchg
inc
add
xor
pop
xor
ds
and
push
repnz
jecxz
cmp
nop
test
mov
ficoml
mov
call
dec
or
jbe
sub
sub
sub
movsl
xchg
stos
adc
xor
imull
test
call
push
jge
inc
sub
sbb
fsubrs
in
in
fisttps
test
test
xorb
popf
push
push
xchg
sbbb
add
loope
pop
sarb
xor
xchg
mov
cmp
xchg
mov
jns
stos
faddp
dec
jno
lods
lret
cmp
xor
xor
mov
stos
fwait
aad
pusha
cmp
adc
push
leave
adc
xchg
in
jg
in
fisttps
imul
push
adc
sbbl
push
xchg
cmp
jae
or
push
fwait
dec
mov
xor
mov
js
loop
jb
shr
mov
fcmove
cmp
vunpcklpd
push
jns
test
int
jp
pop
les
add
popf
pushf
lret
pop
in
cld
xchg
out
jg
sbb
je
iret
aam
cli
out
jbe
in
rcll
rorb
jb
lock
out
pop
test
cmp
xchg
lahf
add
lret
das
xor
adc
nop
mov
pop
inc
lahf
negb
cwtl
mull
dec
arpl
clc
xor
adc
mov
xor
imul
sub
orb
dec
sub
add
lea
fiaddl
xchg
ret
jns
mov
jg
xchg
popl
dec
insb
sub
lret
cmp
jno
adc
adc
sbb
insb
ret
push
jbe
push
das
pop
push
aam
fldt
mov
cwtl
lret
fidivs
mov
mov
push
cmp
leave
add
sti
cmp
xchg
add
insb
xor
ja
or
inc
sbb
cmp
mov
ret
push
mov
lods
addb
pop
xchg
flds
es
bound
shl
sub
jp
ss
or
insb
jnp
sub
pop
xor
pop
inc
movsl
push
data16
lret
push
lret
push
scas
lods
sarb
dec
jnp
sbb
loope
loope
sti
inc
pop
xor
and
rcrl
aam
inc
pop
sub
shrb
xchg
lcall
notl
aad
jns
and
in
stos
mov
push
sbb
mov
js,pt
popf
sbb
ret
inc
jge
dec
sub
mov
les
mov
stos
jl
mov
ret
add
mov
out
and
sub
push
repnz
imul
mov
int
fnstsw
leave
cltd
iret
test
nop
adc
cmp
insb
mov
lods
or
cmp
aaa
rcrl
adc
push
cmpsl
loope
or
repz
sbb
or
das
lret
arpl
pop
dec
nop
cli
sub
inc
jae
lret
sbb
lods
rorb
sub
pop
jne
rcr
xchg
adc
rorl
inc
jp
hlt
mov
ror
xchg
bound
inc
rolb
je
jge
sub
repnz
dec
push
xchg
jne
lock
mov
dec
ja
jg
jns
adc
xlat
pushl
cmpl
fcoms
xchg
adc
imul
push
adc
shll
out
push
inc
push
inc
sbb
loopne
mov
out
xor
in
aas
adc
cmp
mov
jmp
popf
xlat
leave
push
adcl
call
divl
mov
cmp
es
pmulhw
mov
sub
lcall
adc
mov
imul
jbe
jae
cli
xchg
dec
sbb
lret
dec
xchg
dec
jns
jbe
test
adcl
imul
pushf
popa
addr16
daa
push
adc
les
xchg
aas
add
out
mov
repz
jg,pn
and
add
movsl
in
xor
lret
out
jg
das
mov
mov
imul
pop
xchg
loop
sbb
in
sub
xchg
movsl
pop
sbbb
jnp
xorl
dec
data16
add
jmp
inc
ret
push
mov
or
xor
dec
cmp
xchg
dec
inc
fwait
aas
add
adc
mov
mov
pop
test
movsl
sub
sbb
or
lret
push
scas
movsl
dec
pusha
and
lods
sub
xchg
push
sahf
mov
xchg
pop
push
dec
jns
das
push
mov
fidivl
mov
cmp
or
sbb
frstor
jge
mov
fs
cmpsb
pop
mov
inc
loopne
sub
pop
cld
addr16
mov
clc
ds
and
xchg
stos
movsb
and
enter
out
outsb
aas
mov
mov
mov
stos
repnz
lret
rorb
sub
stos
into
mov
mov
std
fadd
jl
lret
subl
sub
ss
adc
pop
push
dec
jns
push
push
push
adc
push
jl
cmc
ja
cmp
add
inc
jnp
lret
and
cmp
fldl
icebp
lock
repnz
rol
jnp
ret
data16
sar
mov
imul
add
scas
pop
fucomi
inc
xchg
fisubrs
fsubl
dec
icebp
mov
cmp
xchg
xchg
and
ds
scas
clc
adc
mov
jbe
fimuls
shll
call
ja
adc
cwtl
cmpl
pusha
kandnw
insl
in
pop
push
or
mov
imul
dec
in
movsb
push
daa
sub
ds
add
ret
ret
push
sub
or
rol
sub
push
mov
out
dec
or
mov
fimull
cltd
leave
ja
pop
psubusw
inc
pop
loopne
sbb
cltd
dec
lcall
ss
adc
push
lods
or
fwait
aad
xchg
mov
scas
inc
cs
xor
pushf
lds
idivb
es
out
adc
jecxz
das
clc
push
sbb
shl
pop
xor
mov
sbb
xchg
clc
lcall
fadds
pop
nop
lahf
scas
xchg
into
mov
inc
xchg
mov
lret
leave
cltd
shll
popa
jecxz
mov
mov
rolb
outsb
or
push
addr16
xor
xchg
inc
and
and
mov
sub
pop
sbbb
enter
cli
jo
dec
loop
cltd
dec
testb
shll
movsb
in
sbb
xor
or
add
lret
mov
inc
xchg
test
out
or
enter
pop
fistpl
pop
rcrb
xor
push
jo
mov
mov
sub
inc
cli
or
bound
stos
cmp
adc
outsl
outsl
inc
roll
adc
xor
shl
jecxz
jecxz
cmp
mov
mov
mov
negb
cld
mov
fwait
sahf
mov
or
xor
int3
mov
jns
test
push
xor
xchg
push
inc
mov
mov
inc
lahf
icebp
sti
sub
imul
push
dec
add
pop
decl
add
bound
lds
aas
cmpsb
fcom
push
mov
mov
mov
cli
dec
inc
sbb
ret
and
push
jnp
sbb
pop
push
ss
lea
repz
fists
sbb
add
mov
out
xor
jmp
negl
jg
mov
add
push
or
loopne
fstl
popf
sahf
jmp
xlat
pop
dec
xor
lea
enter
sub
dec
mov
jle
jecxz
mov
lret
and
push
inc
gs
sahf
xchg
mov
lret
shlb
nop
insb
aas
mov
jne
adc
lods
int
pop
inc
sahf
sbb
iret
xchg
outsb
cltd
mov
xchg
test
fisubs
xor
add
lock
ljmp
test
aas
in
or
and
sbb
lds
add
call
cmp
dec
mov
icebp
lcall
arpl
fisttps
pop
and
sahf
and
lea
loop
ss
bound
and
cmpsl
arpl
andl
aas
fcoml
shlb
xchg
flds
add
xor
or
dec
dec
shl
mov
mov
sbb
lock
data16
out
mov
ds
and
mov
mov
hlt
pop
jl
lret
fwait
adc
jg
clc
push
ret
in
lret
jno
aam
xchg
and
mov
loopne
sub
scas
add
aaa
imul
in
es
push
dec
jmp
shlb
ss
fiadds
xlat
pop
and
dec
jge
xchg
cmpsb
jae
push
sbb
mov
movsl
jle
pop
arpl
stos
and
dec
fadds
lds
sbb
pop
mov
cmp
lahf
dec
andl
or
ljmp
insb
mov
and
sub
mov
mov
js
xchg
es
cs
loopne
mov
fneni(8087
stc
jo
test
cmp
and
int3
inc
bnd
movsb
js
inc
into
sarl
inc
sbb
and
dec
xor
std
jbe
ss
inc
in
data16
dec
inc
shr
jbe
jecxz
popa
cld
mov
jo
mov
push
insl
sub
sbb
add
imul
or
mov
pop
cmpsb
jg
test
cli
and
and
ret
in
lods
mov
push
popa
outsl
stos
dec
jbe
pop
pop
add
lods
popf
xchg
pop
push
jne
lea
jmp
xchg
adc
daa
hlt
imul
sub
cmp
stos
into
loope
stc
pusha
adc
sub
mov
popa
iret
sbb
or
into
int3
mov
out
leave
xor
push
jns
dec
pop
movsl
jno
add
xor
bound
adc
addl
fidivl
mov
in
xor
jno
out
orb
push
add
sub
out
inc
popa
mov
lret
dec
cmp
push
mov
push
jle
movsb
imul
add
mov
push
fstpl
cmpl
xchg
roll
dec
cmp
insb
test
pop
mov
push
cs
fsubs
xchg
and
mov
std
inc
xchg
mov
adc
push
adc
dec
enter
sbb
shll
xchg
or
mov
pop
std
xchg
push
add
je
insl
xor
loopne
leave
xlat
push
ret
xor
ds
aad
add
and
sti
mov
aas
inc
fldcw
movsl
dec
ret
dec
in
not
jbe
lds
push
insb
push
add
sbb
mov
mov
ret
pushf
xor
mov
xor
call
sbb
aaa
insl
xor
add
aas
jne
cmp
lahf
into
lret
pushf
mov
cwtl
dec
outsb
arpl
stos
jno
jp
rcrl
and
test
shll
repnz
fisubrl
mov
xchg
mov
nop
xchg
push
cmp
push
pop
mov
add
adc
xlat
push
mov
dec
jl
xchg
mov
xlat
fsin
lods
in
and
daa
cmp
push
in
sub
xchg
or
push
arpl
cmp
je
mov
xchg
bound
jg
lret
negl
fcomps
outsl
pop
or
aad
mov
mov
movsb
and
add
sbb
inc
cltd
mov
jb
call
popl
fs
lds
add
mov
imul
dec
stos
mov
push
cmc
aad
or
jl
les
pop
xchg
das
mov
or
outsb
enter
int
pop
loope
je
xor
decl
adc
outsl
rolb
fiaddl
mov
lea
notb
lahf
push
divb
mov
aad
test
mov
add
inc
jle
test
leave
gs
shld
lcall
repz
popa
int3
cmp
fwait
and
arpl
xor
lcall
out
jne
jbe
mov
or
dec
mov
xor
ret
mov
cmp
jno
jne
mov
hlt
or
icebp
test
cmp
fnsave
mov
cld
in
aam
lcall
jb
js
push
repnz
push
ss
add
fistl
and
inc
dec
mov
inc
sbb
stos
push
fdivl
adc
fwait
push
cmp
push
scas
push
out
fidivrs
mov
dec
fisubs
and
in
mov
shrl
mov
adc
outsb
cmp
mov
jp
xchg
jge
lret
fwait
sub
jl
bound
inc
and
mov
sbb
or
test
mov
sub
in
repz
shll
jg
sbb
mov
ret
mov
add
cmpsb
sbb
dec
sbb
outsl
out
and
mov
push
aad
je
es
fbstp
mov
jne
push
and
mov
in
jno
insb
jnp
pusha
ror
cmp
jecxz
shrl
pop
xor
jb
mov
test
movsl
daa
jns
nop
jge
ds
and
aam
aas
stos
sbb
pop
nop
inc
iret
test
add
pop
dec
fstps
arpl
or
and
int3
jbe
xor
imulb
cld
cmp
cmp
rol
and
lcall
in
out
fistpl
shll
out
pop
icebp
adc
pop
xchg
in
ja
test
iret
movsb
inc
dec
stos
rol
mov
jo
imull
repnz
and
inc
mov
ret
sub
dec
roll
lahf
in
je
mov
leave
xchg
or
repnz
push
sbb
add
cmp
sbb
pop
scas
insl
int
fidivrl
mov
mov
stos
stc
xor
xor
and
sti
jl
fidivrs
shl
jecxz
outsl
jmp
inc
in
jno
int3
add
sarb
xchg
inc
ja
inc
xchg
push
sbb
stos
lock
mov
jle
inc
jbe
adcl
add
cld
cmp
pop
notb
mov
inc
jns
xor
shll
jbe,pt
jbe
adc
xor
push
push
rcrl
push
xchg
inc
lds
in
mov
aam
in
dec
pop
add
sub
ds
shll
fs
stc
sub
jmp
sarb
mov
gs
mov
sbb
pop
adc
add
add
fsubr
data16
push
mov
xchg
xor
outsl
sbb
add
mov
sub
jno
dec
adc
aam
push
or
fidivs
pop
xchg
add
dec
or
ds
int3
es
push
cld
jo
sub
loopne
cwtl
cmp
movsb
lods
dec
jle
push
rorb
dec
sbb
rolb
out
adc
out
pmullw
mov
divl
xor
inc
jge
repnz
jbe
and
adc
mov
and
jge
pop
xchg
popa
movsl
mov
sbb
push
fs
inc
jns
test
int
xchg
mov
addr16
dec
fdiv
inc
call
stc
bound
into
cmpsl
or
mov
dec
and
jb
xchg
mov
mov
mov
ret
cmp
jle
pop
pop
ss
or
push
xchg
xor
dec
or
js
aaa
cmp
cmc
jl
fdivl
adcb
dec
mov
push
and
jno
xchg
gs
inc
jo
ljmp
in
aam
ret
ss
jmp
loop
enter
sub
mov
sar
add
inc
ret
push
out
adc
xchg
in
cltd
lods
mov
iret
sub
cmpsl
and
inc
aad
push
das
mov
mov
loopne
pushf
lahf
popa
and
mov
imul
cs
test
out
addr16
int
aas
mov
stos
outsb
es
jbe
mov
cltd
push
lret
xor
call
rclb
aad
push
xchg
int
adc
inc
pop
mov
js
cwtl
inc
int
adc
daa
mov
pop
pushl
push
sti
adc
out
xor
sub
mov
fs
push
lcall
push
sarl
stc
jecxz
xchg
les
push
mov
mov
cmpb
mov
push
cli
cltd
sbb
or
mov
das
mov
xchg
subl
sbb
shrb
and
or
test
jg
or
aaa
lock
ret
outsl
mov
mov
lret
mov
daa
mov
or
cs
bound
cmp
xchg
xchg
xor
insl
mov
cmp
push
push
mov
xchg
xor
lret
mov
loopne
push
sbb
lret
pop
push
jae
inc
es
sbb
loopne
pop
pop
sbb
call
xchg
rcrb
das
pop
insb
testl
loop
jge
push
xchg
sub
test
iret
mov
mov
test
jge
es
popl
clc
xchg
mov
sbb
cmp
fsubs
cwtl
leave
lods
xchg
xchg
test
fistps
or
gs
pop
cmp
xchg
adc
add
push
nop
adc
gs
ja
mov
outsb
out
inc
cmp
push
xchg
jne
sti
and
lods
imul
jg,pn
insb
in
int3
pushw
jecxz
imul
inc
cwtl
aas
jge
popa
jae
fbstp
sbb
stos
ret
inc
sub
fcomp
popa
mov
inc
sti
out
fstps
mov
inc
adc
or
lret
jo
or
and
inc
mov
or
cmp
sub
and
push
int3
push
and
clc
mov
lock
mov
push
jo
cmpsb
inc
ret
gs
jo
sbb
jb
adc
icebp
inc
jl,pn
movsb
pop
orb
enter
jo
sub
jnp
cmp
pop
adc
push
repz
loope
push
jp
jae
stc
xor
cs
mov
or
dec
push
sbb
dec
xchg
int3
xchg
js
orl
pop
xchg
daa
mov
xchg
repnz
xor
lods
pop
push
jl
mov
xlat
mov
dec
sbb
add
jmp
outsl
sbb
cmp
rcr
jns
mov
mov
dec
inc
pop
scas
sub
cld
in
inc
inc
jne
ljmp
dec
stos
cmp
inc
ja
jnp
aas
das
out
cs
rclb
imul
dec
jmp
popf
popa
mov
jbe
das
shrl
and
mov
rclb
repnz
sahf
jge
or
push
adc
mov
add
outsl
pop
sbb
xor
adc
mov
pushf
leave
adc
inc
imul
dec
std
lods
out
popa
adc
push
std
adc
incl
sbb
xor
sub
roll
enter
imul
push
or
push
decb
lea
cld
inc
es
xchg
pop
mov
and
xor
sub
out
fs
dec
mov
outsl
or
test
mov
mov
lahf
mov
adc
sub
int
repz
xor
inc
daa
in
shlb
maxps
push
arpl
mov
pop
mov
mov
nop
pop
arpl
icebp
add
dec
test
fs
pop
pop
inc
fists
add
push
insl
stos
mov
fisubl
lods
xor
xlat
test
sbb
icebp
btc
mov
cmpsl
ds
sub
cmpl
shl
jne
jl
sbb
mov
je
in
jbe
lcall
cmc
das
sub
xor
sub
cltd
fimuls
imul
dec
xor
push
mov
sbbb
int
mov
mov
js
cmpsb
push
jecxz
xchg
inc
mov
popf
jns
cmp
pop
insb
xor
setl
int
mov
popf
sbb
jno
xchg
xor
mov
cmpsb
add
ss
add
xor
sarb
jb
sbb
outsl
xor
not
fsubs
cmp
test
cmp
mov
imul
iret
xor
mov
dec
push
mov
mov
cld
adc
cwtl
mov
xor
in
or
mov
mov
daa
lods
insb
sbb
das
xchg
add
lock
lds
sub
mov
inc
pop
inc
arpl
jle
dec
mov
sub
jb
in
cmp
adc
dec
push
loop
enter
stc
or
mov
cmp
dec
vprotw
loop
cmc
dec
movsb
push
daa
cmp
imul
mov
int3
js
ljmp
sarl
pop
pop
shll
loopne
xor
pushf
and
daa
out
sarb
push
mov
mov
fisubrs
aas
sub
inc
mov
push
mov
lock
es
and
push
adc
sub
push
sub
mov
sbb
ret
push
insb
pop
lea
cld
fimuls
vorps
test
pusha
and
shrb
xchg
insb
push
mov
mov
pop
adc
inc
add
stos
mov
jnp
mov
dec
mov
jae
push
imul
insb
int3
bound
jl
or
movsl
push
push
roll
sbbb
rol
js
sbb
sbb
dec
std
mov
iret
xchg
cmp
dec
mov
and
sub
ljmp
addr16
mov
xchg
inc
push
fstpt
or
popf
inc
test
out
icebp
sti
cs
mov
mov
mov
and
repz
lock
cli
jnp
popf
pop
repz
cmpsb
xchg
in
rolb
sbb
insl
sub
jmp
adc
push
shrl
pop
xor
mov
outsl
dec
sub
cwtl
outsl
or
cmp
imul
adc
adc
jl
ret
and
mov
in
adc
cld
rcrb
lret
movsl
pushf
data16
scas
call
add
mov
lahf
mov
inc
repz
icebp
nop
sbb
inc
nop
or
jl
sbb
jg
sub
shrb
outsl
and
dec
adc
lods
ficompl
mov
sbb
jmp
mov
arpl
int
iret
in
fiaddl
aam
sub
cmc
cmpsb
outsl
dec
lds
cmpsl
js
out
test
mov
test
add
xchg
jns
data16
testb
aad
jge
inc
jmp
fcomp
outsl
mov
adc
mov
stos
in
scas
adc
loope,pt
scas
fwait
shrb
out
jno
push
push
jbe
scas
mov
mov
clc
lcall
xchg
pop
push
ja
push
rdmsr
stc
aad
jno
and
inc
insb
mov
or
mov
xchg
popl
jae
mov
stos
test
jmp
push
out
das
dec
ljmp
mov
push
push
push
mov
jge
popa
ja
inc
cwtl
je
jmp
cli
adc
adcl
icebp
addr16
fdiv
mov
fidivl
mov
shl
add
les
lret
lret
mov
mov
and
xchg
cmp
jbe
repz
fildll
outsl
pop
pop
mov
mov
jl
adc
sahf
outsl
pusha
loop
aad
mov
jno
int
fiaddl
scas
and
mov
les
imul
stc
popf
imul
push
test
pop
push
jge
jmp
fistps
aam
rclb
mov
cmpsl
pop
adc
push
test
dec
xchg
cld
push
outsb
out
xor
stos
mov
loope
mov
movsl
repz
mov
push
test
cmp
int3
inc
test
ja
pop
int
xchg
lahf
jbe
inc
sub
adc
mull
imul
test
jbe
and
stc
or
xor
sahf
roll
jb
arpl
push
mov
js
mov
outsb
addl
jmp
sbbl
mov
jl
in
mov
inc
mov
adc
int3
in
int
jp
xchg
movsl
adc
rcr
ds
mov
xlat
test
jno
pop
jl
and
mov
push
push
sbb
imul
fsubr
and
xchg
mov
rol
std
repz
push
out
and
lret
loope
sbb
les
dec
dec
test
sbb
mov
pop
mov
popl
lcall
push
jne
test
and
mov
sub
mov
mov
jge
std
icebp
push
and
aaa
xor
je
scas
testl
push
and
in
adc
mov
dec
out
sti
iret
lods
push
fdivrl
mov
cmp
jae
stc
out
jg
inc
sti
mov
shlb
lret
movsl
inc
push
cmc
stc
or
arpl
filds
nop
into
mov
mov
pusha
inc
pop
js
xchg
fdivl
inc
add
xor
scas
push
loope
shrb
test
das
shll
shrl
jo
jp
stos
std
mov
sbb
ljmp
sarb
ficompl
lahf
lock
xchg
insl
out
cmp
jl
fisubrs
jp
popa
repz
movsl
sbb
mov
insb
jl
cmp
out
mov
mov
loopne
lcall
push
lods
sub
insl
popa
cmp
imul
xor
pushf
scas
loope
mov
xor
loop
or
push
pusha
pop
icebp
xor
iret
iret
loopne
xchg
jno
xor
cmpsl
dec
jg
push
movsb
mov
xchg
add
scas
or
mov
cmp
mov
or
rcll
push
inc
pop
fildll
call
fistpll
ficomps
push
jg
loopne
cwtl
mov
insb
test
sahf
in
imul
cmpsb
cmpsl
rcrl
ja
paddusb
jb
rol
iret
shrl
push
movsb
adc
mov
sub
int3
bound
dec
xlat
jo
push
in
je
lock
scas
daa
mov
xorb
xor
lret
divl
push
push
jae
mov
xchg
mov
xchg
movsl
push
dec
cltd
jle
mov
xchg
lods
xchg
dec
inc
and
jbe
jbe
leave
pop
insl
lea
push
bound
imul
adc
jmp
test
push
fwait
dec
xchg
sti
xor
dec
lods
mov
mov
addr16
or
jbe
std
xchg
rolb
movsb
lret
or
dec
test
jbe
pop
xor
push
jmp
xchg
fldcw
daa
fbld
sbb
mov
and
mov
and
lock
stos
xlat
pop
add
icebp
xor
nop
popl
mov
pop
ja
and
adc
arpl
mov
mov
nop
cld
sub
pop
mov
adc
mov
and
add
and
inc
mov
and
data16
jp
sub
inc
inc
or
adc
faddl
dec
push
xor
jns
or
sbbb
stc
int
nop
cwtl
aam
sbb
jbe
inc
jle
scas
push
scas
lret
sarl
arpl
mov
in
jnp
aas
das
push
movsb
mov
xchg
aam
iret
mov
hlt
or
leave
js
push
or
pop
pop
aas
and
jo
lods
nop
pop
cmpsb
lahf
pop
xor
jl
iret
sub
adc
andb
mov
cmpsl
jmp
sti
mov
mov
and
inc
not
mov
mov
sub
hlt
sti
sbb
mov
push
mov
loopne
stos
pop
pop
push
std
iret
jle
pushf
fiaddl
push
adc
test
stos
push
mov
dec
popf
add
sub
mov
push
pusha
clc
or
shlb
jmp
or
in
shrl
aas
out
sbb
insb
jae
xchg
sar
mov
lcall
pop
je
lock
lock
pop
dec
ret
jb
fwait
xchg
xchg
imul
js
or
sbb
pop
jecxz
xor
jg
mov
out
push
decl
and
pop
xorb
les
inc
lock
inc
popf
xchg
adc
push
sbb
cld
and
xchg
sbb
dec
sbb
clc
push
out
inc
add
scas
setae
out
lods
imulb
push
std
js
je
insb
or
push
sub
loopne
jns
jmp
ss
lret
push
mov
es
adc
or
pop
test
pop
fcmovnb
push
push
dec
lcall
fnstsw
xchg
xchg
popa
insb
mov
push
cmp
ss
ss
lea
jne
stc
stos
in
cwtl
mov
mov
dec
jp
dec
mov
mov
xor
lahf
inc
cmp
inc
push
jnp
mov
pusha
test
clc
iret
push
shlw
mov
sub
adc
inc
pushf
push
cmpsb
cs
lock
jmp
mov
xchg
bound
push
iret
popf
outsl
sahf
sbb
add
shl
sbb
xchg
nop
jl
sbb
xchg
shlb
lock
scas
movsl
push
inc
stos
orl
xchg
adc
jecxz
pop
sarb
aas
aam
sbb
inc
rcrl
in
add
mov
sub
mov
inc
jmp
not
test
ret
loopne
mov
cmc
ds
mov
iret
mov
inc
fisubs
sub
mov
clc
pop
aas
jnp
sub
aaa
xor
push
cld
xor
rcll
ret
cmove
mov
flds
xchg
loope
inc
mul
xchg
dec
xor
stc
mov
fcomps
mov
cmp
lods
mov
and
out
sub
add
dec
sarl
dec
mov
push
cmc
popf
adc
mov
daa
out
xchg
popf
lcall
xchg
dec
popa
movsb
add
fs
movsb
repnz
sarb
mov
dec
lahf
and
stos
rolb
test
mov
xchg
movsl
leave
push
iret
xchg
rorl
adc
out
pop
mov
and
leave
call
pop
or
daa
mov
out
or
xor
out
lea
push
in
rorb
jae
lock
add
pop
mov
dec
cmp
inc
testb
sbb
xor
xchg
lcall
mov
loopne
dec
aas
mov
xchg
mov
xor
and
pop
imul
and
or
pop
in
mov
loop
pop
inc
imulb
cmpb
test
mov
inc
mov
lock
add
lods
repz
jo
out
add
add
mov
pop
rcrl
addr16
adc
jmp
or
sbb
insb
jns
mov
rcrb
dec
andb
data16
cmpsb
daa
pop
adc
imul
mov
add
jmp
aaa
subb
cs
pusha
inc
sub
out
or
jle
adc
mov
push
dec
mov
fs
inc
cli
mov
int3
aaa
sbb
xchg
push
popf
and
push
lea
pop
or
xlat
aas
mov
and
test
push
nop
and
imul
dec
and
or
jmp
xchg
fsub
stos
inc
int
push
push
es
xchg
scas
negb
and
jg
cli
xchg
dec
das
movsb
arpl
flds
leave
inc
rcrl
push
movlps
imul
leave
fs
adc
xor
push
dec
jnp
mov
cmp
mov
fwait
push
push
jecxz
aad
inc
out
pop
adc
mov
dec
fcoms
repnz
leave
sbb
inc
sbb
rcll
sub
out
cmp
xor
push
sub
pop
xchg
stc
mov
add
mov
mov
cmp
ret
add
cltd
dec
aas
mov
int
gs
inc
cmp
push
mov
out
push
cmc
outsl
fwait
cmp
pushf
push
test
jge
cld
cmp
in
lds
jg
std
dec
pop
repz
pop
scas
cld
fcompl
mov
nop
mov
lret
fisubrs
jl
lds
or
fdivrs
cmpsb
cmpsb
les
jp
call
xchg
push
arpl
imul
pop
stc
sbb
imul
mov
mov
insl
sub
aaa
int3
mov
cmpsb
sbb
and
scas
add
int
ret
inc
stc
jecxz
out
stos
xchg
dec
inc
icebp
nop
pop
mov
and
in
shlb
or
aam
pop
outsb
out
loope
cmp
xchg
lcall
mov
repnz
dec
pop
adc
add
mov
insl
push
addl
pop
loope
stos
scas
movsl
imul
push
sarb
sub
dec
je
push
and
fs
lods
mov
idivl
pop
jmp
shl
mov
add
gs
std
data16
inc
sub
aaa
clc
adc
pop
data16
jo
fs
mov
xorb
mov
inc
inc
cmp
mov
pop
sbb
mov
xchg
push
out
out
sbb
movsl
add
sub
lcall
dec
dec
imul
mov
dec
xor
xchg
divb
jbe
mov
cli
shrl
aaa
pop
mov
call
push
and
jg
aas
mov
out
cmpsb
mov
push
mov
mov
insb
sarl
push
sub
das
sbb
sbb
ret
cltd
test
jb
mov
ficoms
testl
push
sub
leave
lret
and
aad
push
lea
push
outsl
leave
sub
jbe
pop
xchg
or
mov
jmp
push
stos
imul
and
test
movsl
test
cltd
icebp
mov
ds
xlat
jp
mov
into
pop
arpl
lret
scas
sbb
mov
into
sahf
rcl
daa
mov
pop
jns
xchg
mov
add
push
shlb
and
cld
mov
cmp
add
push
jo
loopne
jmp
pusha
mov
adc
inc
shlb
mov
mov
mov
sub
jg
sbb
rcll
xchg
scas
movsb
sub
aaa
ret
icebp
and
fimull
fs
fnstenv
insl
ljmp
test
imulb
lock
xchg
inc
push
lret
daa
out
and
movsl
push
cs
fcmovb
inc
xlat
push
cmp
int
push
enter
and
mov
mov
rcrl
mov
push
mov
and
test
fnstsw
enter
pushf
mov
mov
xchg
adc
ja
test
and
pop
fwait
mov
or
pop
cmpsl
addl
in
pop
lcall
orl
add
fwait
hlt
pop
jecxz
bound
fs
leave
enter
and
xchg
sub
lds
and
call
jnp
cmp
sbb
or
mov
cmove
and
sub
push
pop
mov
cmp
repnz
mov
out
sbb
jge
mov
sbb
inc
fimuls
sti
mov
mov
movsl
sub
scas
gs
pop
fmul
and
gs
inc
faddl
jge
xchg
sub
and
adc
fsubrl
stos
or
aad
and
mov
popf
xchg
inc
sbb
mov
jmp
inc
aad
icebp
fistps
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
fs
ds
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
nop
push
add
add
fs
ds
add
add
add
add
add
add
addb
addb
add
fs
ds
add
add
add
add
add
add
cwtl
add
add
push
add
add
mov
add
fs
ds
add
add
add
add
add
add
rolb
addb
add
fs
ds
add
add
add
add
or
add
add
add
push
add
add
mov
add
add
add
call
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
xchg
mov
ja
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
pop
ja
mov
js
xchg
xchg
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
mov
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
jo
mov
mov
mov
xchg
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
jo
mov
mov
mov
js
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
mov
mov
ja
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
mov
mov
mov
js
mov
xchg
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
pop
add
js
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
jo
mov
mov
mov
js
mov
mov
js
js
js
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
js
js
js
js
xchg
xchg
mov
mov
js
js
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
ja
ja
js
xchg
js
ja
ja
ja
mov
xchg
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
xchg
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
ja
mov
mov
js
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
xchg
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
js
mov
js
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
js
mov
mov
js
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
xchg
xchg
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
xchg
xchg
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
js
js
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
js
js
js
ja
mov
mov
js
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
ja
ja
ja
js
mov
xchg
ja
xchg
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
ja
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
js
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
mov
ja
mov
mov
js
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
pop
ja
mov
mov
js
js
js
js
mov
xchg
xchg
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
mov
mov
mov
xchg
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
mov
mov
mov
js
js
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
add
js
xchg
js
js
js
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
mov
js
js
xchg
js
js
js
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
mov
js
js
xchg
js
js
js
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
xchg
ja
js
xchg
ja
xchg
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jo
jo
mov
mov
mov
mov
xchg
js
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
xchg
js
js
mov
xchg
js
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
mov
ja
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
push
add
add
add
add
add
add
add
add
fs
push
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
js
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jb
outsb
add
jns
and
inc
add
add
add
je
popa
add
jb
and
inc
add
jae
je
add
outsb
add
add
popa
add
add
add
add
jb
jne
je
add
add
insb
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insb
add
jb
imul
inc
add
jne
jae
arpl
push
add
jo
push
add
add
outsl
add
add
add
outsl
add
popa
add
je
add
pop
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
outsl
add
add
add
insb
add
je
push
add
add
add
popa
add
add
add
popa
add
je
jne
add
pusha
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
imul
add
and
dec
add
insb
add
outsl
add
add
add
add
popa
add
insb
add
outsb
add
add
popa
add
popa
add
jne
popa
add
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jo
outsl
add
add
js
add
add
add
push
add
mov
push
add
mov
push
add
add
add
push
add
push
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
inc
dec
dec
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
