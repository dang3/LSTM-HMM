call
dec
dec
push
push
lret
jo
popa
mov
lds
dec
sbb
dec
sub
ljmp
out
cli
or
adc
aad
lods
fimull
daa
mov
dec
hlt
and
call
xlat
add
imul
cmc
hlt
rclb
mov
lea
jmp
xchg
sub
cwtl
mov
sarl
xor
call
aad
in
mov
lock
jmp
and
jmp
inc
fsts
sbb
cmpsb
and
nop
push
cmp
and
cs
ljmp
xchg
cmpsl
push
test
test
adc
mov
shlb
idivl
or
arpl
push
daa
lods
jmp
add
int
mov
push
sbb
adc
fiaddl
xchg
ljmp
stc
pop
inc
mov
lds
push
jl
lea
les
push
jmp
jge
jns
push
cmp
inc
mov
fcoms
cmp
xor
jmp
cmp
out
test
jno
or
loopne
xor
xchg
or
mov
cmp
shrw
shlb
dec
fmuls
cwtl
mov
pushl
lods
popa
and
push
mov
xchg
icebp
stos
pop
and
dec
int3
and
scas
call
aad
ljmp
xchg
imul
mov
or
fcmovnb
xchg
xchg
and
sub
lcall
fidivrl
clc
lahf
enter
data16
pop
add
orb
rolb
push
pop
xchg
ss
jecxz
push
adc
xchg
jb
mov
add
inc
sbb
ret
jb
jae
inc
and
xchg
push
or
mov
pop
add
mov
and
fnsave
jl
mov
push
daa
and
mov
ss
out
gs
push
push
cwtl
pop
lahf
push
and
cwtl
int
das
clc
adc
icebp
out
mov
testb
aam
push
adc
lcall
mov
xlat
adc
cmp
cmc
int3
sbb
mov
xchg
enter
cld
clc
mov
inc
inc
scas
sub
test
lea
cmpsl
jo
and
into
dec
nop
pushl
push
sbb
sub
xlat
repnz
xchg
mov
repnz
mov
jo
popa
cmpsb
icebp
daa
incl
test
pushf
cmp
into
add
xchg
pop
cmpsb
push
mov
push
push
jl
je
xor
stos
xor
fcomip
pushl
xchg
jo
mov
popa
ficomps
push
cmp
inc
mov
push
push
pop
ret
and
decl
and
rorb
test
or
xor
sbb
xchg
mov
outsb
or
jmp
or
sub
inc
jle
xchg
daa
dec
jmp
jge
adc
outsb
jae
das
xor
call
mov
xor
push
ret
sbb
jbe
ljmp
xchg
push
push
icebp
or
jg
push
imul
lcall
lret
repnz
mov
loope
fldl
test
shlb
outsb
xor
fwait
and
xchg
and
or
dec
fdivr
icebp
lock
inc
arpl
sbb
mov
push
movsb
popf
xchg
les
sub
loop
pushf
sbbl
nop
xchg
rcll
dec
mov
shlb
inc
adc
xchg
inc
pop
push
dec
fiadds
dec
add
jge
pop
in
in
dec
call
or
jmp
cmp
and
xchg
pop
out
push
adc
jae
inc
mov
out
jmp
fldl
add
xchg
gs
fwait
adc
adc
shrl
jmp
mov
repnz
jg
decl
sti
insl
cltd
xchg
push
and
xchg
popa
cmp
outsb
add
sbb
push
clc
mov
xchg
stos
notb
jg
es
ja
out
je
dec
cld
mov
mov
out
ljmp
lcall
and
loopne
fwait
fwait
iret
jne
cld
es
sub
inc
or
xor
cld
pushl
fiaddl
mov
mov
or
ret
inc
data16
pop
sub
sub
pushl
repz
fiaddl
mov
cltd
cmp
and
jp
sbb
sbb
push
sub
mov
mov
loopne
scas
inc
int
orl
es
sbb
aad
mov
mov
movsl
mov
test
je
dec
xor
movsb
imul
sbb
aad
mov
jg
inc
push
dec
dec
pop
subb
mov
mov
jbe
xchg
mov
dec
sbb
sti
es
incb
fbstp
mov
int3
adc
loope
mov
xchg
lcall
decl
and
jb
jp
int
je
jo,pn
lods
sbb
test
cmp
pop
pop
inc
jge
mov
push
inc
pop
dec
cmpsb
shrl
das
in
mov
xchg
sub
ret
jp
cld
mov
xchg
dec
add
adc
int
fs
pop
pop
mov
push
scas
push
xchg
ret
call
mov
loopne
fucomp
xchg
xchg
shlb
cmp
mov
std
fs
mov
lods
mov
ja
icebp
call
push
xlat
ja
scas
xor
lods
dec
cmc
xchg
fldenv
lret
push
lcall
fwait
mov
aad
aas
pop
cmp
pop
jno
ljmp
or
push
ljmp
aad
xchg
adc
mov
or
dec
addr16
sbb
ja
ja
aad
or
incl
jle
add
hlt
les
int3
add
pushf
decl
addr16
adcb
mov
mov
mov
xchg
jmp
incl
ss
and
jae
testl
clc
sahf
negl
mov
arpl
jne
sbb
decl
lods
jp
jnp
gs
fwait
add
lock
sbb
sub
push
jno
scas
or
add
jmp
jl
scas
mov
push
pop
mov
in
xor
lcall
aas
push
adc
insb
test
xor
fldenv
cltd
test
aam
in
cmp
fisttpll
mov
andl
stos
testb
add
loope
es
cmp
in
and
mov
dec
xchg
movsl
outsl
or
pop
shld
jg
sub
jmp
addr16
add
inc
mov
adc
xchg
jns
in
mov
mov
pop
jnp
std
popl
or
mov
fcomip
pushl
fnstcw
popf
fcompl
repz
outsb
ds
fcoml
decl
cltd
aas
adc
outsb
mov
addr16
mov
mov
pushl
in
sbb
popf
pop
fidivrs
leave
inc
inc
inc
add
cmp
jmp
popa
dec
fisttps
dec
lret
mov
dec
shlb
cld
jmp
push
dec
and
mov
jns
das
sbb
pop
inc
sti
out
ret
mov
and
add
jne
mov
sub
add
dec
or
xchg
add
jno
push
and
adc
stos
in
push
sbb
mov
flds
loope
jo
cmp
cmp
fsubrs
push
lahf
lock
or
mulb
out
jbe
mov
stc
popa
imul
fistpll
call
and
mov
sbb
sub
mov
stc
fsts
insl
stos
mov
call
sbb
mov
push
push
sub
inc
fnstcw
mov
or
or
test
cmpsl
repz
inc
aam
dec
pop
mov
jmp
fwait
mov
pop
cld
popa
jne
jmp
or
test
jne
cmp
xchg
call
cld
decl
mov
add
xchg
fildl
inc
sub
ljmp
push
rolb
pop
out
fs
inc
fidivrs
sbb
cld
sub
hlt
neg
sbb
jge
ds
sub
jp
sbb
lcall
or
dec
jne
jo
push
mov
ficomps
xorl
jg
xchg
inc
dec
sarb
mov
divb
lcall
or
test
sub
fisubl
lcall
aam
push
mov
int3
jl
dec
or
pop
fcoml
dec
mov
jle
push
sbb
les
sub
mov
mov
mov
aas
inc
jns
cs
addr16
repnz
loop
shlb
pusha
pop
icebp
clc
and
aaa
cmp
outsb
loope
pop
sub
shrd
test
insl
jg
enter
call
mov
addl
push
or
push
adc
cmc
mov
stc
js
mov
lock
xchg
push
pop
loopne
cmpsb
enter
dec
mov
call
adc
in
jmp
scas
lahf
mov
nop
sub
cld
dec
dec
jmp
push
jge
sub
cli
sbb
pop
and
inc
rcll
mov
xchg
aam
lret
ljmp
mov
rorl
cltd
pop
jns,pt
test
movsl
fisubrs
in
cmp
jmp
movsl
or
cmp
movsl
adc
out
scas
test
pushf
pop
daa
inc
shll
mov
jo
jg
ficompl
dec
xchg
add
sub
stos
shlb
jns
xor
call
push
xor
mov
jns
dec
cmpb
cmc
mov
cmc
faddl
sbb
jno
xchg
xchg
jmp
ret
subb
call
incl
mov
dec
js
jae
cli
push
pop
cli
fbstp
inc
fisubrl
push
cmp
loop
movsl
cmp
cmp
pop
push
sub
pop
cli
mov
int
in
call
inc
insb
out
or
dec
cli
test
inc
sbb
in
cmpsb
ja
cwtl
in
aad
adcl
into
int
jmp
dec
stos
stos
fsubrp
enter
and
inc
or
mov
stc
mov
sub
aad
stos
pop
push
add
insb
add
fmuls
dec
pop
shl
xchg
shrb
push
call
repz
pop
insb
and
sbb
sbb
dec
or
jno
mov
xor
mov
dec
xchg
repnz
repnz
test
andl
dec
cmp
aad
push
pusha
adc
stc
dec
jl
pushf
jl
clc
xchg
jb
nop
bound
jmp
rcrb
ret
fstps
gs
hlt
xchg
stc
inc
enter
push
cmp
ljmp
clc
dec
cmp
cmpsl
lret
jmp
push
out
rcrl
test
in
cmp
xchg
ret
mov
xor
pop
xchg
outsl
es
je
jg
test
mov
add
rorb
mov
inc
cmp
inc
pop
dec
outsb
aaa
mov
adc
sbb
dec
xchg
sarb
jne
sbb
push
pushl
sbb
pop
cmp
xchg
fdivrp
adc
mov
dec
and
fdivr
adc
lret
mov
push
mov
sbb
imul
jmp
mov
cli
cmpxchg
scas
clc
push
mov
imul
or
imul
scas
and
out
mov
lds
dec
jo
and
jb
je
pop
movsb
adc
call
out
test
fsubr
shr
add
cmpsl
xchg
dec
jnp
dec
push
int
cltd
mov
mov
cld
int3
lahf
pop
push
jl
mov
shll
outsb
sbb
ljmp
int
fsts
cmp
adc
and
neg
adc
and
jmp
stos
iret
icebp
xor
js
push
int
sub
jbe
sbb
inc
lea
incl
push
les
jo
pop
pop
in
add
ret
xchg
cmp
in
cmp
ljmp
inc
out
fisubl
sub
and
pop
outsl
orb
inc
and
sbb
mov
or
decl
insl
mov
lcall
dec
test
leave
cmpsl
jo
dec
inc
ret
xchg
sub
ja
dec
cmp
movl
jns
push
shrb
addr16
push
push
xor
push
adc
sbb
jae
jl
pop
div
dec
inc
repz
int
jae
loope
fsubl
cs
bound
ret
cmpl
pusha
mov
out
incb
xchg
mov
and
and
xor
jb
sub
jmp
xor
enter
mov
cs
and
iret
jmp
rolb
inc
clc
scas
cli
in
jp
and
pop
jae
add
fstps
push
movsl
sbb
ret
incl
push
outsb
je
xchg
cmpl
and
imul
test
adc
lds
cmp
pop
push
sbb
sbb
in
sbb
pop
enter
jmp
sub
aam
pusha
adc
lea
add
xor
rorl
in
adc
jg
mov
jp
imul
mov
sarl
jl
enter
decl
fcompl
add
xchg
and
xlat
push
push
loope
int3
pop
lods
ret
mov
xorl
ljmp
hlt
lea
lods
std
movsl
xchg
add
push
inc
popl
mov
dec
mov
test
xor
scas
push
out
mov
xor
ljmp
push
ds
leave
sub
movsl
lahf
xchg
jb
test
scas
mov
call
adcw
gs
ljmp
pop
aad
dec
adc
test
mov
push
cmp
xchg
jns
mov
or
add
jnp
cmp
sahf
out
push
ljmp
bound
inc
mov
pop
jle
jno
mov
xor
call
mov
cmpsb
xor
out
or
and
sbb
push
pop
push
and
and
sbb
cmp
jno
mov
ret
rcrl
test
icebp
jge
in
lcall
mov
push
stos
jge
push
fsubs
je
lcall
lret
call
xchg
rcrb
addr16
iret
test
ljmp
cmp
or
cld
mov
inc
mov
ret
push
nop
lds
notb
movsl
cmc
sti
dec
scas
push
imul
test
and
ret
ja
jg
fisttpll
dec
jmp
push
inc
out
aaa
inc
movsb
mov
out
pushf
int3
ss
jbe
pushl
cmp
dec
in
ds
in
sbb
or
mov
pop
popf
cmpsb
mov
loop
jmp
jns
enter
and
sbb
test
ret
fsubr
mov
push
add
push
lcall
add
cmp
fidivs
pushf
pop
adc
lcall
cmp
dec
fidivl
sub
idivl
mov
inc
jle
or
jmp
mov
jle
jp
sbb
scas
add
adc
lock
inc
adc
fsubl
movsb
or
jae
mov
or
mov
mov
sbb
cmpsl
leave
call
pop
sahf
jns
scas
jge
xor
int3
scas
gs
aaa
jno
cmpsl
xor
test
ret
xor
pushl
mov
add
daa
jmp
sbb
ss
xchg
and
jmp
ljmp
dec
sbb
lods
jo
jmp
mov
xchg
mov
jl
adc
mov
xchg
pop
iret
mov
adc
push
mov
or
ljmp
dec
jbe
inc
and
mov
out
and
and
jmp
push
or
shl
cs
outsl
add
add
pop
daa
repz
mov
pop
cmp
lret
xlat
movl
xor
xchg
cmp
sbb
mov
decl
decb
push
out
xor
add
xchg
cmp
stc
sub
sbb
test
orl
bound
and
sub
push
sti
sbb
dec
xchg
cmp
js
xor
dec
and
fistpl
jbe
xor
mov
jle
lock
es
or
js
out
cmp
fldenv
pushl
dec
imul
sbbb
or
cmp
in
lret
decl
mov
lahf
test
jnp
fldl
or
inc
push
mov
cld
cmp
xor
sub
je
dec
adc
xchg
cmp
cmpb
ljmp
repnz
mov
pushl
mov
add
lret
movsl
popa
mov
xchg
rorl
sbb
mov
add
out
inc
dec
ds
decl
add
les
pop
insl
jns
xor
scas
cs
aas
outsl
cli
jmp
pop
aad
lods
int3
shl
out
mov
ret
sbb
ja
add
pop
or
jmp
sbb
jp
rcrl
mull
mov
imulb
out
mov
ljmp
pop
mov
loopne
lods
cmp
repnz
ret
push
pop
mov
mov
push
push
mov
pop
adc
addb
xlat
sub
outsl
xchg
fucomip
movsb
lret
pop
sbb
gs
mov
ljmp
out
lcall
orl
jb
lods
pop
nop
xchg
sub
pop
std
jmp
clc
lods
jnp
xor
cmp
ret
pop
jbe
nop
mov
cmp
dec
or
ss
pop
mov
fnstcw
or
mov
xor
inc
int
jle
scas
cmpsb
or
call
push
push
lcall
lea
rorl
cwtl
mov
ja
mov
mov
jo
sbbb
adc
hlt
cmp
addr16
jae
push
push
mov
call
jns
ret
arpl
stos
inc
int3
in
popf
dec
jmp
ja
idivl
mov
decl
push
mov
add
and
jmp
push
sti
push
dec
adc
aam
pop
enter
decl
and
pop
inc
and
cmc
push
mov
loop
ss
jmp
mov
mov
bound
sub
ret
mov
adc
lods
unpckhps
ret
rclb
ret
je
lods
cli
fdivs
pop
sbb
scas
fcoms
pop
ss
cmp
loopne
icebp
and
mov
clc
or
cmp
ret
or
mov
cmpb
jg
xchg
inc
test
cmp
pop
inc
scas
cmp
cmpsl
mov
scas
lods
movsb
dec
cltd
or
std
test
out
call
or
cli
movsb
inc
int
pop
fdivs
cs
stos
fildl
mov
data16
ljmp
decl
test
mov
jle
insb
ljmp
test
fucom
out
jecxz
or
jmp
lods
sub
xchg
icebp
mov
sub
sbb
jnp
sahf
ljmp
jnp
rclb
push
jle
mov
rcrl
call
xchg
or
repnz
lock
cld
and
imul
sbb
scas
das
dec
in
xchg
sub
call
jo
bound
push
cmp
sub
mov
insb
icebp
test
popf
sub
dec
bnd
aaa
cmpsb
pop
jnp
or
test
xchg
and
mov
pop
outsb
pop
out
andl
inc
lcall
adc
jp
cmp
lock
int
hlt
or
call
jmp
je
mov
sahf
inc
out
jg
cmc
hlt
xchg
rorb
lock
shrl
decl
jo
ds
outsl
push
jne
rcrb
pop
jne
rcrl
dec
pop
decl
pop
jmp
push
push
pop
jne
adc
sub
mov
xchg
ds
fidivs
leave
sbb
in
rcrl
mov
mov
pop
std
mov
and
lcall
xchg
mov
mov
fnstsw
adc
jmp
roll
lcall
jne
cmc
es
into
adc
stos
shl
sarb
inc
cmpsl
sti
addr16
mov
lcall
pop
ljmp
mov
inc
xchg
or
dec
stos
loop
fsubrs
call
mov
sahf
shll
scas
jle
cmp
lods
push
stos
ljmp
mov
fnstcw
das
clc
test
ss
cld
adc
push
aam
mov
jno
push
add
insl
xchg
xlat
inc
jmp
dec
arpl
xor
mov
xchg
mov
frstor
adc
and
stc
dec
dec
add
push
cld
lods
lcall
jp
lret
push
out
mov
icebp
mov
pop
insb
test
dec
in
out
jecxz
xchg
push
pop
and
adc
add
outsb
adc
nop
push
shll
testl
jbe
lcall
mov
or
inc
daa
dec
jb
call
ret
xor
jmp
mov
test
jno
mov
add
sub
fidivl
fimull
cwtl
or
or
jmp
test
pop
xchg
adc
pop
enter
inc
sbb
cmp
and
xchg
lods
mov
push
mov
push
cmpsl
dec
clc
push
or
inc
dec
ss
jmp
scas
mov
nop
push
dec
movsb
pop
sub
loop
sub
mov
shlb
arpl
lcall
sbb
and
movsb
inc
inc
andb
test
jo
fisubl
lcall
imul
fucomip
mov
lds
popa
mov
adc
test
fcomip
xchg
pop
adc
xchg
and
int3
outsl
jg
add
fs
mov
lret
add
call
inc
fbstp
mov
enter
or
push
sbb
xorl
cmpl
xchg
push
inc
lahf
nop
nop
or
sbb
xchg
push
das
add
movsl
jecxz
lcall
adc
arpl
mov
stos
mov
popl
add
ja
rorl
stos
fmulp
mov
sbb
jge
inc
out
jle
lds
das
push
sbb
xchg
addl
out
fnstenv
out
negb
adc
push
daa
repnz
fucomi
jge
sbb
mov
hlt
mov
mov
outsl
outsl
mov
movl
or
loop
and
mov
jb
popf
mov
mov
lcall
jmp
jg
in
cli
divb
xchg
fldenv
shrb
jge
inc
xor
and
int3
push
outsl
push
dec
lock
jmp
test
fisubrs
xchg
cmpsb
mov
aaa
xchg
sti
sarb
call
push
jp
insb
jno
gs
xor
outsb
jl,pt
push
jl
fsubp
inc
je
fcomip
xchg
popf
dec
xchg
push
push
popf
fwait
or
jp
lcall
push
cli
jb
push
push
jae
arpl
and
mov
fnstcw
fistpl
pop
scas
mov
pop
orl
or
mov
xchg
fs
jmp
xchg
mov
jmp
jg
sbb
jo
or
push
in
jg
stos
or
addr16
incl
loope
lods
pop
es
sub
arpl
sub
lods
ss
or
fistpl
mov
push
inc
inc
insl
xchg
dec
pusha
jl
aaa
das
aam
lcall
jg
jae
inc
add
into
jl
lods
scas
mov
shll
dec
mov
imul
inc
jmp
fs
enter
mov
mov
fiadds
cmc
cmovno
loope
hlt
ret
rcll
incl
outsb
fldcw
cmpsb
repnz
orl
je
and
imul
std
out
test
lcall
mov
sbb
mov
xchg
jnp
das
in
imul
mov
mov
inc
dec
pop
call
cmp
xchg
mov
pop
mov
rclb
scas
mov
add
aam
jp
lds
ret
mov
shlb
add
jmp
enter
decl
into
xchg
xor
test
loop
sarl
adc
jp
mov
mov
sbb
fldl
adcl
out
jo
fdivs
les
cli
push
xor
sub
inc
or
fstpt
jo
out
xor
or
mov
scas
mov
not
cltd
push
push
inc
jb
push
fadds
les
adc
xchg
cmp
ljmp
dec
roll
sub
or
cmpsb
int3
stc
sbb
xchg
sub
popf
lods
cmp
jl
jmp
jmp
in
dec
sub
addb
pop
inc
mov
ljmp
cmp
std
lds
adcl
jge
and
sbbl
fistpll
into
sbb
mov
and
jecxz
shll
adc
dec
icebp
lods
ss
pop
roll
mov
adc
dec
mov
xchg
sbbb
sub
ffree
add
dec
push
lea
mov
jmp
push
sbb
xor
sbb
jo
pop
pop
outsl
jae
daa
arpl
push
mov
mov
stc
ljmp
lahf
ficoml
lcall
loopne
dec
push
out
repz
or
cmp
mov
nop
ret
pop
rclb
cli
aam
mov
jno
dec
jmp
mov
in
repnz
dec
incl
mov
stos
mov
icebp
in
ficomps
shrb
clc
nop
inc
ljmp
ljmp
scas
and
sar
les
cli
leave
sub
inc
jae
mov
jns
ljmp
lahf
xor
jbe
fsts
mov
scas
das
cs
jle
xor
inc
in
test
call
mov
push
adc
cmp
lods
pop
sahf
or
insl
adc
lcall
mov
sub
in
pop
arpl
lods
mov
add
pop
filds
decl
jp
xor
test
mov
ss
dec
pop
int3
adc
test
lods
in
dec
int3
xor
cmp
pusha
je
enter
orb
ss
add
adc
mov
adc
cmp
aaa
cmpsb
xor
xor
sub
jno
aam
jp
in
leave
in
xchg
push
push
push
adc
pushl
mov
je
sub
scas
fdivrl
sbbb
leave
xor
ja
ljmp
imul
cld
lret
lods
add
cmp
xchg
scas
xorb
pop
insl
cmp
jmp
pop
adc
arpl
mov
sbb
in
add
incl
push
ja
cmpsb
mov
data16
pop
xchg
repnz
jnp
filds
xor
mov
mov
inc
ds
fcoms
les
ret
jno
add
call
pop
xor
aad
xchg
sub
mov
and
push
addr16
call
loopne
inc
pop
pop
dec
bound
ror
std
lea
iret
mov
shrb
cld
mov
push
pop
xor
pop
mov
jecxz
out
inc
xor
xchg
out
bound
jae
inc
arpl
pushl
test
mull
mov
std
out
mov
inc
fimull
cwtl
dec
xchg
xor
shlb
bound
js
dec
int3
leave
add
mov
shrl
lods
sbb
pop
xchg
or
or
jmp
orl
jno
mov
imul
xor
ljmp
call
lret
testb
stos
in
push
jae
or
std
roll
add
pop
push
lahf
push
ljmp
aad
and
dec
std
cmp
arpl
ror
jle
push
adc
call
mov
jnp
cmp
arpl
les
pop
mov
lock
fcomip
xchg
xor
mov
push
inc
or
insb
in
sahf
aaa
sub
lcall
fs
cwtl
jno
pop
hlt
jmp
out
push
in
jg
and
push
ljmp
aam
sbb
lcall
jmp
adc
fbstp
lds
dec
mov
fdivs
hlt
adc
int
cmp
inc
clc
addl
sahf
pop
stos
loopne
mov
adc
shlb
push
stc
xor
ret
adc
in
sbb
lds
fdivrl
dec
pop
pop
push
push
sbb
rcr
add
rcrb
adc
les
push
int3
lahf
dec
js
mov
or
aas
in
clc
loopne
xor
in
cmp
mov
dec
popf
shr
pusha
cmp
ljmp
rorb
add
sbb
jg
in
hlt
insl
addr16
inc
xchg
int3
ljmp
sub
and
pop
mov
inc
icebp
popf
jg
clc
movsb
pop
mov
adcb
mov
add
cmpsb
ffree
outsl
mov
incl
inc
scas
test
sbb
or
popa
jecxz
sbb
dec
out
cmpb
jb
pop
into
stc
mov
das
pop
adc
push
push
int
out
outsl
aas
push
leave
mov
sub
mov
call
mov
pop
fcoml
rclb
cmp
imul
cmp
dec
adc
test
call
int3
sbb
xchg
push
push
xor
mov
cmp
push
scas
mov
movsb
pop
dec
adc
lcall
ljmp
dec
and
mov
repnz
mov
push
in
jmp
decl
in
movsb
clc
movb
jg
fildl
adc
cmp
sbb
jmp
or
pop
and
sarl
popa
adcl
inc
dec
push
push
out
push
jmp
js,pt
dec
mov
xor
push
inc
lret
pop
dec
mov
mov
add
lret
cs
push
mov
or
ficomps
movsl
dec
push
aaa
or
jg
sbb
mov
ja
shrl
jmp
adcb
sub
and
mov
movsl
and
ljmp
mov
into
push
out
jnp
jo
jg
pushl
mov
das
sub
sbb
or
mov
iret
out
fadds
clc
movsl
int
ljmp
nop
push
fsubp
push
xor
adc
insb
std
xchg
int
roll
xchg
in
inc
and
movsb
outsb
pushl
sub
fisubrs
lods
xchg
lcall
mov
fstpl
inc
dec
aaa
cld
decl
cmp
rol
mov
jb
roll
sti
adc
iret
cli
or
clc
push
xchg
rclb
sbb
adc
test
push
insb
dec
cmp
fcomip
and
aas
adc
inc
or
in
push
push
jne
lea
mov
inc
pop
mov
or
insb
dec
mov
adc
inc
jle
or
mov
imul
call
xor
scas
dec
cltd
xlat
adc
lahf
orl
aad
push
mov
or
inc
mov
mov
shrb
or
pop
outsb
mov
xchg
cmp
lcall
loop
sbbb
imul
xor
clc
fsubs
jg
adc
insl
push
test
mov
mov
xor
lret
fcom
mov
mov
incl
push
cld
inc
pop
adc
pop
mov
imul
mov
sbb
fisttps
decl
notl
js
push
cwtl
rorb
push
sub
sbb
mov
enter
jno
cmpsl
adc
pop
jmp
out
cs
lds
add
and
cmp
dec
xchg
dec
leave
pop
ror
stos
add
test
dec
push
sub
movsb
scas
pushl
sub
sub
sbb
xchg
cmp
out
movsb
sbb
imul
ljmp
xchg
daa
les
hlt
mov
insl
je
cmp
std
jne
and
xchg
and
mov
aas
add
adc
cmp
scas
ret
leave
stc
cmp
mov
call
lods
sti
cmp
ja
jno
hlt
sub
mov
rorb
add
je
iret
incl
and
mov
sub
xchg
push
aad
sub
daa
xchg
test
sbb
call
repnz
call
into
inc
inc
mov
jl
xor
mov
popa
lods
lcall
aad
xchg
call
and
js
lods
cld
aad
aam
and
and
dec
cmc
sub
paddsb
imul
mov
inc
mov
les
incl
ret
sbbl
out
adc
notb
mov
fsts
or
jmp
xchg
cltd
pop
les
cmpb
sbb
lret
sti
push
mov
inc
push
das
clc
call
jo
dec
jae
shll
lahf
jb
push
js
pop
cli
les
and
jmp
idivl
inc
lods
jo
pop
in
inc
bnd
xchg
jle
stos
pop
fsub
mov
dec
push
add
jmp
cmpsb
les
je
dec
cmpsb
xchg
pop
cmp
cmp
push
xchg
int
rclb
inc
scas
mov
sar
ljmp
movsb
mov
push
jg
lret
xchg
out
push
je
pop
inc
pop
fsubrl
inc
cmp
push
push
pusha
jmp
stos
xchg
out
subb
pop
xchg
sub
aas
jno
rcrl
ds
fbld
pop
adc
std
nop
pop
pop
mov
inc
mov
pusha
scas
pop
jp
pop
incl
mov
fistps
addr16
ss
test
icebp
incl
sbb
insb
pop
jge
movsl
sub
dec
outsl
mov
mov
scas
pop
cmp
lods
jns
cmp
stc
mov
popf
jnp
and
sbb
incl
push
loop
movsl
stos
gs
mov
push
dec
std
add
addr16
jl
jns
dec
cli
data16
in
sbb
jmp
mov
fsubp
push
cmp
repnz
xchg
stos
ret
loope
mov
cld
and
out
movsl
les
in
pushl
fcomip
mull
aas
jmp
dec
nop
xchg
xchg
cmp
mov
mov
inc
aad
scas
push
sarb
call
data16
es
mov
adc
in
shrl
dec
js
mov
jg
xor
xor
xor
ficomps
push
loopne
jae
jae
call
pop
jae
push
mov
sub
lock
cwtl
sbb
or
sar
incl
loop
pusha
sub
sti
xlat
lods
subb
dec
in
enter
fcos
incl
jp
out
or
pop
bnd
pop
bound
jno
push
jmp
call
popa
inc
sub
ljmp
pop
xchg
mov
push
push
cmpsl
mov
inc
push
mov
and
or
jne
inc
pop
out
mov
decl
ds
inc
mov
scas
add
arpl
fsubrs
and
xchg
pop
xchg
mov
aam
mov
incl
test
inc
dec
les
cmp
test
mov
in
sbb
sti
push
std
arpl
movsb
inc
mov
adc
iret
or
push
in
les
sbb
xchg
out
jmp
fs
add
loope
adc
xor
ret
push
pop
lods
add
in
sub
mov
arpl
faddp
dec
int3
inc
push
push
orb
ds
jno
aaa
adc
fnclex
inc
mov
cmp
hlt
sbb
iret
mov
xlat
adc
dec
pop
dec
out
inc
push
jg
int3
loope
rcll
fists
jge
ja
scas
push
adc
fdivrp
xor
rcll
aad
fdivrl
xor
push
inc
mov
inc
and
adc
mov
sarl
int3
les
loopne
xchg
mov
fistps
dec
xchg
cwtl
test
fcoms
push
frstor
and
ret
inc
sbb
mov
or
lcall
add
mov
cmc
pop
test
fnsave
stc
out
jecxz
xor
ljmp
stos
mov
push
pop
mov
cwtl
cltd
pop
lcall
mov
adc
movsb
es
cld
mov
or
out
cmp
in
incl
xchg
sbb
push
xor
pop
test
das
mov
orb
mov
adc
or
adc
or
or
ror
mov
call
pop
or
int
xchg
cmp
sarb
loop
jg
or
mov
or
test
jmp
aas
in
xlat
dec
fwait
inc
orl
mov
mov
sbb
pop
test
cmpsb
lret
adc
dec
mov
ss
mov
mov
aad
out
xor
lahf
mov
movsb
les
jg
add
push
adc
imul
cmp
dec
and
mov
mov
lahf
adc
jge
inc
sbb
add
pop
call
out
add
mov
jbe
mov
out
sbb
mov
lea
sub
pop
js
loope
push
decl
push
sbb
xor
loopne
jns
sar
push
gs
in
adc
pop
pop
fldenv
incl
or
adc
push
call
mov
mov
mov
cmp
jg
outsl
push
dec
pop
addl
pop
jno
cmpsl
inc
push
je
mov
iret
sbb
sbb
test
imul
lods
int
into
inc
out
cld
aad
call
lss
fstl
push
divl
push
dec
addb
mov
repnz
or
sbb
pop
hlt
fsubrl
xor
sbb
ss
test
xchg
cli
imul
xchg
ljmp
call
mov
jns
or
inc
mov
pop
insb
push
sub
inc
js
popa
ret
cld
mov
pop
test
int3
add
addr16
shll
clc
mov
or
xchg
dec
lahf
xchg
jge
cmp
sbb
mov
mov
xor
enter
ljmp
icebp
cltd
mov
fimull
or
cltd
jns
pop
cmp
and
push
ljmp
sub
loopne
test
sbbb
push
test
cld
add
or
std
lcall
cmc
inc
sub
pusha
iretw
add
xorb
push
sub
fldt
fnstsw
xchg
mov
jp
data16
leave
movsl
jecxz
ffreep
andb
xchg
enter
aas
lcall
ljmp
test
adc
ret
jnp
push
jb
xorl
jmp
pushl
jns
mov
idivb
cld
out
jno
lea
jge
daa
and
les
std
ljmp
pop
shrl
scas
sbbb
inc
jnp
fmull
mov
aaa
dec
rclb
decl
popa
add
loopne
fistl
inc
push
inc
lock
rolb
pushf
jge
jo
mov
pop
sub
popa
int
mov
dec
dec
pop
call
es
inc
dec
lret
and
call
fbstp
mov
imul
lds
sub
or
cmpsb
adc
jl
pop
pop
pop
adc
add
lahf
dec
outsb
sahf
inc
mov
les
or
fs
imul
decl
into
jge
or
add
mov
iret
repnz
popf
or
js
in
or
pop
jg
ljmp
insb
xchg
push
ss
sbb
fsts
sbb
std
daa
lcall
xchg
cmpsl
fisubl
cld
or
mov
dec
hlt
sar
adc
xlat
xchg
mov
jg
dec
in
mov
inc
in
push
push
sahf
push
popf
loopne
jg
jp
subl
out
jmp
jp
jb
clc
push
loop
shlb
jmp
arpl
pop
or
push
hlt
jb
adc
lock
lods
pusha
sub
jge,pt
insb
push
insl
fs
nop
lods
jg
lcall
lret
cltd
out
xchg
inc
and
xchg
mov
enter
pop
add
or
mov
cmp
jmp
loope
lods
in
pop
daa
ffreep
repz
or
mov
adc
mov
sub
push
movsb
movsb
out
mov
loopne
adc
insb
jmp
add
inc
mov
fsubr
lods
iret
pop
jae
jmp
mov
xor
cmp
daa
dec
mov
cli
lcall
icebp
xor
lds
dec
xchg
lcall
sub
scas
cs
lock
pop
xchg
rcrb
sub
out
stc
rcll
andl
ljmp
std
out
xchg
aas
adc
mov
xor
dec
dec
or
popa
lock
ljmp
inc
push
cmp
xchg
dec
mov
dec
test
stc
pop
in
incl
insb
rcrb
pop
aas
push
out
sbb
adc
dec
lock
and
pop
jno,pn
pusha
leave
call
cmp
icebp
fcoml
lret
jp
sub
lds
lahf
pop
loope
pop
mov
incl
es
je
into
adc
jns
data16
inc
mov
repz
pop
push
pop
cld
mov
xor
insb
stos
xchg
shrb
jb
adc
incl
dec
mov
out
outsb
mov
movsl
push
add
cmp
incl
enter
and
cmp
xchg
shrl
push
insl
push
add
aad
incl
lcall
mov
push
mov
add
sub
decl
push
std
cs
mov
jnp
xchg
scas
das
cmp
xlat
jp
jno
mov
jl
inc
or
jl
std
fadds
int
stos
test
cmpsl
lods
push
push
clc
pop
pop
mov
fcoml
adc
or
push
test
add
pop
cmp
jno
inc
jle
fcoml
and
clc
inc
sti
jo
cmc
adcl
jnp
js
pop
lods
and
out
into
add
adc
jmp
cs
cmc
shlb
xorps
cmc
jnp
sti
nop
add
ja
mov
fldcw
jns
inc
arpl
xor
andb
fadds
sub
adc
and
notb
push
sub
mov
into
dec
dec
adc
and
xor
push
test
push
mov
test
jmp
inc
lret
stos
rcrl
cmpsl
jg
frstor
cmpsl
push
or
inc
xor
loope
mov
jl
xchg
lods
es
pushf
sbb
movsl
fucomi
outsb
ret
in
cmp
incl
repnz
fwait
arpl
ljmp
sub
pop
push
repnz
cmpsb
adc
push
stos
lcall
xchg
adc
gs
jmp
mov
sub
in
or
inc
scas
and
pop
or
mov
xor
jmp
cmp
fisubs
push
cs
call
mov
xchg
pop
xchg
mov
sbb
call
pop
push
push
out
decl
push
and
mov
or
mov
mov
push
es
xchg
adc
sbb
jmp
fwait
or
or
fisubl
jge
dec
mov
fwait
inc
mov
lcall
cmp
pop
inc
xor
lcall
cwtl
jl
das
in
push
aaa
dec
inc
imul
cmp
mov
fcoml
jmp
push
rcrl
rorb
ret
aad
pushl
icebp
jno
clc
dec
push
inc
xor
and
push
pop
dec
jg
fisttps
in
mov
test
pop
pop
dec
dec
add
adc
cld
leave
in
mov
pop
push
into
int
lcall
mov
leave
jbe
sbb
movsl
outsl
dec
cmp
inc
idiv
cmp
nop
mov
sbbl
andl
repnz
sub
sbb
scas
dec
arpl
jecxz
jl
inc
in
sar
mov
lods
inc
andb
test
or
insl
jmp
adc
in
std
push
fdivrl
ja
pushf
in
lcall
notb
fs
jle
jmp
cmp
jbe
inc
loope
cmpsb
imul
repnz
and
sbb
sub
inc
icebp
xchg
sahf
iret
sub
jecxz
stc
popa
push
or
js
jnp
ljmp
mov
mov
adc
ret
jnp
mov
mov
jmp
inc
adc
jbe
jne
jmp
sub
rorb
cmp
or
xor
dec
call
lods
outsl
fs
or
or
and
lods
fildl
mov
mov
pop
pushl
in
xor
loop
je
mov
int3
push
mov
sbb
xor
decl
xchg
mov
fucomip
lret
ficoml
lods
nop
mov
and
pushl
pop
ret
lods
jp
stc
push
xorb
pop
or
sub
ljmp
pushl
pop
out
xor
das
jmp
aam
shl
mov
jnp
icebp
cli
xlat
pop
adc
lret
clc
sbb
decl
enter
sub
pop
cwtl
aad
int3
push
mov
sub
jmp
mov
push
mov
inc
mov
aas
dec
xor
mov
mov
test
inc
cmp
and
icebp
mov
xor
push
xor
sub
jmp
xchg
jge
addr16
cld
push
leave
arpl
scas
add
bound
fisubrl
rolb
incb
or
mov
ja
inc
dec
sub
dec
pop
adc
lcall
mov
repz
les
shl
int
cmp
mov
push
xchg
and
lds
les
popf
xchg
adc
dec
bound
pop
pop
xchg
pop
int3
sbb
lods
xor
call
mov
in
movsl
test
adc
in
shll
xchg
and
mov
divl
pop
cmpb
sub
jge
loope
dec
jle
push
mov
cmp
lcall
push
pop
in
dec
xor
sahf
cmpsb
aaa
inc
lcall
adc
jno
jns
rcr
jnp
fidivl
test
loop
push
push
cmp
icebp
mov
stc
test
xchg
std
repnz
pop
fwait
pop
cmpsb
cli
jg
call
or
mov
mov
fistps
jp
and
mov
push
insl
push
add
loope
clc
inc
shl
jp
popf
xor
ljmp
nop
adc
lea
cmp
mov
xchg
jbe
stos
mov
ljmp
js
sbb
mov
clc
adcb
lcall
test
cmp
out
or
stc
setl
sub
add
fstl
enter
fsubrs
xor
cwtl
xlat
stos
lahf
mov
outsb
into
mov
sub
or
shrb
movsl
and
out
lock
xor
mov
pop
rolb
mov
je
xchg
dec
mov
outsl
cli
ljmp
sub
test
xchg
jg
xchg
sub
loope
inc
movsb
xor
ljmp
call
outsl
mov
fwait
mov
jle
jge
jne
add
les
insl
bound
xchg
ljmp
pop
mov
in
xor
popf
mov
pop
mov
or
out
hlt
adc
inc
gs
jle
inc
inc
lahf
mov
mov
pop
cmp
in
sbb
cwtl
jmp
dec
es
sub
pushl
int3
or
mov
sbb
push
in
cld
orl
test
ret
decl
out
es
jae
outsb
inc
and
cltd
adc
sbb
adc
jmp
shll
inc
stos
or
mov
push
jo
or
mov
mov
wbinvd
insl
mov
cwtl
int
cmp
pop
dec
jno
inc
in
sub
or
mov
jg
xor
push
movsb
lea
sbb
cmp
pop
test
push
pop
inc
in
lcall
sahf
add
mov
decb
dec
mov
inc
jbe
sub
sar
pushl
ja
jbe
shrb
cmp
lods
cmp
scas
push
es
mov
je
lcall
call
fldt
js
fcoml
orb
xchg
clc
test
sub
jmp
xchg
subl
fildl
inc
aas
cmpb
scas
jmp
xchg
mov
mov
add
inc
lock
mov
and
sbb
lock
ljmp
push
cli
push
sbb
fidivrs
mov
jp
sbb
dec
cmp
std
jmp
les
mov
daa
mov
daa
je
jl
call
jmp
les
iret
imulb
mov
cs
cmp
ds
pushl
push
ds
out
mov
mov
mov
jg
aas
cmpsl
add
mov
jmp
lahf
pop
repz
aad
push
pop
push
mov
adc
xchg
pop
rcr
faddl
jmp
dec
mov
incl
popa
xor
loope
cmpsl
or
inc
nop
pop
mov
jmp
lret
or
insl
pop
xor
ds
mov
aaa
imull
iret
add
mov
fcomip
jmp
ret
mov
les
clc
je
int3
add
sub
pop
test
stos
cld
add
push
sub
mov
mov
pop
loopne
js
pop
fidivl
and
repz
fstps
or
jns
jecxz
repz
add
rep
stos
adc
call
aas
push
out
ja
sbb
jb
mov
aaa
push
cmp
dec
jmp
shll
decl
jg
or
stos
ss
push
and
mov
or
ljmp
push
push
and
inc
push
iret
dec
or
or
test
fstps
cwtl
shlb
pushl
pop
cmp
push
mov
lods
cmpsb
dec
push
or
sbb
clc
mov
cmp
lock
jle
push
mov
repnz
adc
jmp
incl
xchg
outsl
jmp
movsl
inc
cmp
jp
loope
inc
pop
data16
icebp
dec
and
ljmp
shlb
push
jg
popa
pop
test
add
ret
jl
ja
fs
call
icebp
xor
mov
xchg
jmp
pop
mov
pop
jp
cli
test
sbb
decl
lcall
cmp
sub
pop
dec
enter
mov
hlt
jmp
aas
aaa
mov
ret
icebp
fsubrl
ljmp
lahf
xchg
push
je
pop
push
ja
lcall
mov
bound
int
jne
cltd
push
test
enter
dec
sub
das
adc
iret
mov
sub
into
lods
repnz
xchg
les
bound
xor
ss
dec
jle
pop
pop
call
xchg
mov
lods
fiadds
push
ja
jmp
pop
jb
imul
sar
jg
mov
mov
popf
adc
fstpt
mov
pop
jno
clc
adc
pushl
jl
fldenv
les
add
add
jbe
and
adc
call
pop
add
jmp
inc
xor
shrl
dec
je
fnsave
addb
ds
mov
loopne
cmp
adc
xor
dec
xchg
and
mov
xchg
lods
cmp
and
lcall
in
aas
dec
stc
fisubrl
pop
sub
inc
sbb
push
test
scas
movl
adc
nop
mov
sub
lock
scas
push
out
fsub
ja
jns
inc
jbe
adc
lcall
in
dec
fistpll
das
mov
cmp
fbstp
pop
je
mov
mov
bound
pop
adc
in
sar
les
adc
stos
loop
mov
jecxz
lcall
in
xlat
lret
inc
xor
test
popa
popf
pop
dec
dec
cmpsl
ljmp
mov
cmpsb
frstor
push
divb
adc
cmc
pop
jo
xchg
icebp
call
decl
cs
cs
sub
inc
adc
mov
sarl
sahf
jge
push
push
push
lock
shr
xchg
aam
test
nop
mov
nop
cld
mov
dec
xchg
cmp
pop
sbb
lods
cmp
pushl
lock
outsl
ror
pop
lods
cltd
cmp
sbb
cs
enter
xor
clc
notl
bound
sub
jl
outsb
shll
sub
dec
xor
jg
cmp
stos
or
mov
insb
leave
dec
outsb
pop
lret
dec
sub
pop
inc
scas
clc
bound
cwtl
mov
imul
hlt
add
hlt
xor
ret
dec
pop
lcall
rorb
lcall
push
aam
and
cmpsb
decl
stos
repnz
rcrb
cmpsl
mov
shrl
lahf
adc
fwait
inc
xchg
jmp
leave
cmp
xchg
fdivrs
jns
stos
in
popf
mov
jmp
cmpl
mov
sbb
int
inc
xor
imull
mov
mov
pushl
mov
das
cmp
mov
jns
or
xchg
mov
jg
pushl
and
mov
or
xchg
fcompl
shl
xchg
popa
push
gs
jo
or
ljmp
hlt
mov
into
subl
jae
push
xorl
lcall
gs
shlb
aam
ror
cmp
je
or
mov
incl
adc
lods
mov
stos
mov
xchg
sub
fisttpll
jmp
pushl
leave
icebp
cmp
fcoml
pusha
jne
xchg
or
in
inc
pushl
cmp
tzcnt
fimuls
loop
sub
lods
add
adc
or
mov
mov
and
jecxz
jbe
inc
insl
fs
insb
jae
mov
dec
movsl
push
push
repz
repz
and
cmp
jbe
mov
movsl
fdivs
cwtl
push
or
in
mov
aaa
fwait
sahf
orb
pop
dec
cwtl
aas
ja
insb
jno
inc
dec
mov
dec
xchg
mov
and
push
mov
jae
sub
push
std
mov
mov
inc
push
mov
push
pop
arpl
sub
shlb
sub
push
mov
incl
inc
data16
aam
sbb
int
pop
jo
xor
fwait
cwtl
cmp
lret
jl
cmp
outsl
jne
ljmp
xor
xchg
mov
not
nop
jno
icebp
mov
dec
loop
sub
loop
mov
sti
inc
jbe
nop
mov
mov
jno
ljmp
mov
stos
dec
dec
adc
int3
lock
pop
xor
ret
in
lret
jmp
pushl
mov
sbb
mov
cmp
pop
pusha
push
fs
add
icebp
aam
mov
mov
out
outsb
cmp
pop
fiaddl
dec
adc
ret
sub
pop
out
dec
mov
pop
popf
fadds
cld
idiv
mov
call
and
scas
xchg
test
dec
mov
test
test
xor
fwait
mov
dec
or
mov
lcall
jnp
xor
and
push
cmpsl
daa
or
test
mov
ds
xchg
aaa
fs
fldcw
test
jae
pop
in
cmp
andl
cmp
das
sar
dec
cmp
rolb
es
mov
add
lcall
outsl
outsb
adc
xchg
sbb
dec
test
es
pcmpeqd
sub
scas
test
out
xlat
insb
outsl
int
outsb
or
mov
mov
or
es
mov
add
fmul
cmpsb
mov
popa
xor
ss
push
and
into
pop
test
xchg
ljmp
jns
shll
scas
push
arpl
test
outsl
adc
push
dec
xchg
fucom
push
dec
cld
and
mov
loop
call
ljmp
mov
inc
lock
sub
cmp
adc
stos
mov
sub
int3
popa
xchg
and
mov
or
inc
inc
mov
dec
imul
xchg
inc
pop
rol
push
xchg
mov
lret
or
mov
ljmp
mov
inc
push
lods
push
xchg
xchg
das
xor
into
insb
lds
cmp
jl
fists
pop
cmpsb
fbld
push
out
inc
push
mov
ja
push
xor
call
enter
cld
sbb
aas
push
jecxz
lret
insb
mov
sbb
or
jmp
loope
in
mov
or
push
out
push
insb
xchg
dec
addr16
cmp
out
jg
lds
pop
in
aas
mov
into
fscale
push
pop
mov
popf
roll
mov
in
push
pop
movsl
inc
int3
mov
pushl
mov
std
in
xchg
mov
in
mov
fucom
test
std
outsl
jge
pop
imul
mov
loop
jmp
in
add
insl
in
adc
and
out
pop
fnstcw
testl
sub
call
out
or
cmp
pushf
xchg
cltd
repnz
mov
gs
fidivl
inc
xchg
jle
dec
call
adc
pop
into
cwtl
push
and
xchg
ret
scas
mov
sarb
jbe
xor
repz
incl
clc
mov
xchg
mov
mov
xchg
stos
or
lods
pop
fsub
repnz
jmp
cmp
cltd
mov
leave
sbbl
or
xchg
add
test
sub
adc
dec
cmpsb
mov
xchg
in
dec
rol
add
outsl
fimull
lcall
ljmp
sbb
xchg
es
repnz
dec
movsl
inc
xor
loop
ljmp
sub
jae
idiv
or
dec
cli
iret
mov
testb
inc
xchg
mov
push
nop
loopne
push
addl
sarl
and
arpl
jmp
fldcw
mov
lahf
mov
cmp
push
fsubrp
aas
fnstcw
jo
call
pop
sub
data16
sub
mov
popa
dec
adc
cmp
aam
movsb
adc
mov
aas
das
cli
incl
dec
sbb
push
shll
fimuls
xor
insl
out
cli
call
push
rcrb
adc
in
leavew
push
jbe
test
mov
in
loope
cmp
jmp
xchg
das
sbb
les
mov
imul
cmp
inc
xchg
cmp
ljmp
pushf
in
push
cmp
movl
mov
sbb
cld
decl
jle
mov
dec
jno
push
or
test
mov
or
js
jg
fldenv
repz
xor
iret
pop
inc
loopne
fcmovnu
loope
cltd
push
xlat
and
mov
mov
push
into
jecxz
pop
mov
dec
dec
inc
and
bound
push
outsb
xchg
and
fdivr
in
mov
rcll
mov
add
in
pop
test
dec
jp
stc
mov
paddb
shrl
mov
xor
lods
dec
ja
xor
or
push
call
incl
pusha
mov
jb
mov
popf
aad
push
push
adc
es
lods
ljmp
push
push
inc
jl
out
cmpsb
imul
mov
lock
mov
mov
test
inc
std
add
lcall
loopne
outsb
lcall
sub
js
mov
xor
jmp
ljmp
adc
rolb
jnp
jo
and
std
imul
xor
out
inc
outsl
mov
inc
push
jecxz
xor
lcall
cmp
cld
cltd
sbb
lea
pop
out
inc
mov
push
loopne
shrb
pop
pop
cmp
scas
aaa
jb
movsl
out
inc
cmp
icebp
std
ret
adcl
lods
add
cmc
ljmp
and
aas
sbb
cmp
dec
fs
and
test
pop
cmc
lcall
inc
or
rcll
out
and
cmpsb
jg
pop
mov
popf
stc
outsl
push
adc
rcrb
pushl
imul
bound
mov
adc
sbb
or
out
cli
bound
sub
cmc
in
and
fldt
xchg
pop
insl
jecxz
pop
data16
sar
decl
sar
sub
mov
int3
shlb
cmp
jg
pusha
xor
jns
push
andb
xor
or
fs
sbb
xor
das
andb
jl
lcall
mov
in
fisubrl
lods
ds
not
movsb
jo
cli
cmp
or
call
stos
sbb
lods
pop
mov
dec
sub
dec
cld
jae
mov
call
pop
jnp
in
mov
sub
sub
xor
bound
outsb
incl
inc
mov
add
inc
stos
rolb
xchg
and
pop
pop
xchg
inc
cld
add
mov
xchg
mov
xchg
out
sbb
inc
push
sbb
jne
mov
pop
pushl
mov
int3
and
and
or
inc
mov
push
mov
lcall
roll
sub
push
sbb
or
decl
inc
nop
out
std
ret
lret
gs
mov
lret
lock
out
push
les
pop
std
jmp
dec
mov
pop
inc
and
out
xchg
aam
lods
lea
ljmp
mov
and
or
mov
bound
outsl
in
into
or
dec
xchg
and
mov
ds
xor
call
pop
aad
mov
mov
scas
mov
cmp
lahf
mov
ljmp
push
imul
lcall
mov
dec
jp
ret
cwtl
int3
std
shlb
ljmp
ret
dec
push
test
or
mov
test
in
test
aas
adc
lock
adcl
and
pop
test
jo
push
push
mov
call
leave
dec
mov
push
loopne,pn
ret
lods
mov
pop
into
leave
mov
lea
mov
pop
xchg
aam
sub
xor
ja
into
sbb
aad
adc
and
dec
jo
aad
loope
clc
inc
xchg
int3
push
jbe
sub
push
mov
add
cmp
xor
divl
stc
les
aaa
jl
inc
insl
xor
or
in
inc
lea
cmc
icebp
cmp
rcrl
ds
pushl
and
adc
sub
sub
popf
out
and
movsl
cmp
pop
shrl
inc
jne
ret
ds
jmp
cmc
pop
cvtpi2ps
scas
xchg
push
mulb
ljmp
rcl
jmp
inc
in
sbb
xor
pop
push
cmp
lods
fwait
addr16
jae
sbbl
ljmp
pop
and
aam
ss
mov
fisttpll
cs
and
add
jo
cmp
incl
pop
jne
test
or
or
popa
cmp
pop
in
push
lret
adc
into
and
std
fcompl
mov
cmp
push
sbb
dec
or
dec
ds
cmpb
push
dec
movsl
cld
push
adc
push
push
cmp
decl
mov
jne
push
adc
mov
sbb
test
ret
pushl
out
loopne
fs
out
pop
stos
test
aam
fucomp
cld
mov
sahf
stos
std
jg
or
adc
int
cmp
loopne
icebp
sbb
add
mov
dec
call
sub
ljmp
lea
inc
jne
inc
inc
lds
jbe
inc
dec
sahf
cli
cmp
mov
inc
push
mov
data16
movsb
popa
inc
out
fldenv
out
push
cli
cmp
jge
scas
insl
ret
xor
jno
jle
push
cwtl
mov
dec
or
sub
mov
in
sbbb
iret
js
cmp
scas
mov
dec
or
stos
movsb
cmpl
push
je
xor
lcall
repnz
ret
cmp
sub
hlt
or
vmovlps
inc
pop
stos
int3
aad
mov
icebp
mov
ljmp
or
sbb
aad
aam
jbe
hlt
mov
sbb
adc
lea
jmp
mov
out
mov
int
adc
adc
inc
add
mov
cmp
cwtl
pop
dec
cmpsb
or
mov
int3
loopne
dec
or
and
pop
call
dec
xchg
aad
scas
xor
jecxz
push
xor
xor
jb
dec
cs
shl
int3
fadd
incl
push
xchg
xchg
arpl
cwtl
jb
adc
jp
dec
sbb
data16
repnz
or
cltd
call
cld
jp
cmpsb
out
testb
add
fnstenv
repnz
in
jecxz
popa
loop
ja
pop
dec
or
lcall
xchg
jae
rolb
js
fistpl
lcall
fildll
in
and
mov
ss
dec
outsb
add
dec
cmpsb
incl
jb
dec
out
arpl
pop
push
pop
pop
mov
mov
adc
pop
xor
movsl
pop
jmp
push
cld
incl
dec
out
push
mov
mov
mov
or
mov
ljmp
cwtl
adc
sti
enter
fnstsw
add
inc
inc
cmp
ljmp
dec
xchg
loope
push
setge
lret
out
pop
outsb
inc
mov
call
mov
push
pop
lods
pop
call
xchg
mov
pop
out
xchg
mov
dec
loopne
call
pop
dec
js
aaa
sbb
xchg
mov
mov
fwait
adc
mov
mov
xchg
fdivrp
jle
sbb
decl
xor
lcall
les
daa
pop
sarb
jl
inc
jnp
pop
shll
imul
shrb
pushf
cli
cmpsl
adc
or
scas
push
dec
xor
call
incb
and
leave
iret
push
popa
mov
add
scas
stc
mov
mov
call
mov
pop
ret
add
cmpb
xchg
mov
les
mov
xchg
fsubs
mov
fsubs
xchg
dec
mov
scas
inc
fs
js
cld
lcall
ror
pop
mov
lock
outsl
test
or
add
outsb
decl
mov
push
dec
pop
imul
and
xchg
xor
decl
jo
sbb
inc
and
jbe
shrb
jae
out
sub
les
ss
dec
movsb
call
ss
gs
lock
xor
push
sbb
rol
sbb
inc
psubusb
lcall
lcall
sub
mov
inc
movb
push
push
movsb
adc
insl
jle
fmuls
jmp
rcrl
pop
fbld
mov
jg
jp
sub
pop
cmc
adc
int3
cmpsb
in
xorl
adc
push
fbstp
push
xchg
fisttps
ds
call
testb
scas
push
dec
pop
sub
and
ljmp
push
mov
jmp
sbb
sbb
mov
call
sbb
idivl
jmp
icebp
loop
test
mov
add
inc
and
push
mov
pop
pop
xchg
nop
pusha
sub
ja
addb
cwtd
push
fadds
pop
arpl
stc
adc
sbb
cli
popf
mov
fdivr
jmp
jecxz
rorb
flds
mov
push
inc
push
sub
mov
sti
jmp
stos
pop
popf
repz
or
sti
cmp
sub
cmp
loopne
jp
in
dec
shlb
mov
jnp
xchg
pop
stc
je
imul
lcall
out
xor
fs
andl
pop
pusha
adcl
jle
lods
pop
inc
std
jo
fdivrp
ljmp
aas
pusha
xor
jecxz
jb
out
scas
lahf
lea
cmpsl
inc
cmp
movsb
loope
js
call
ja
mov
dec
inc
int3
call
or
imul
sti
test
fwait
pop
pop
pushl
dec
jge
callw
lds
mov
xlat
call
or
subb
jmp
orl
dec
stc
aad
imul
fcmovnu
adc
popf
sub
cmp
negb
xchg
jmp
imul
pop
lcall
test
sarb
cwtl
inc
jmp
cmp
pop
lret
cmp
dec
jle
mov
inc
push
jbe
xchg
push
or
rcr
add
jg
lock
sarb
xor
scas
lds
xchg
dec
dec
xchg
mov
call
jmp
imul
lods
add
into
or
dec
push
inc
pop
pop
and
into
mov
push
mov
dec
push
pop
pop
mov
mov
iret
mov
cmpsl
mov
incl
and
push
jge
fldcw
adc
inc
rcrb
mov
xlat
add
mov
sub
sarb
pushl
xor
jno
pop
insb
insb
jl
xchg
pop
and
cwtl
and
fidivl
std
leave
das
mov
int3
mov
inc
sbb
mov
and
or
mov
in
mov
in
repz
ret
mov
push
push
scas
dec
aaa
add
pop
fcomip
jg
mov
insb
test
outsb
sub
adc
add
lcall
or
add
sahf
rcrb
rorb
mov
and
popa
mov
incl
mov
pop
repnz
insl
int
ffree
mov
roll
mov
adc
mov
mov
add
jno
cmp
hlt
or
xchg
lcall
dec
mov
add
mov
icebp
sbb
call
leave
fsubs
out
xlat
cmpsl
pop
sti
inc
ds
jg
sbb
cltd
js
outsb
mov
push
fcmovnu
and
push
mov
dec
mov
movsl
xchg
mul
adc
jg
rorb
pop
pop
mov
dec
orb
push
or
aas
test
je
mov
insl
movsl
into
xchg
xor
std
call
mov
inc
fwait
sarl
or
pusha
jne
rcrb
imul
repz
ficompl
popa
insl
jnp
inc
jl
add
in
dec
call
inc
ror
add
cmp
movsl
in
dec
jp
out
enter
je
xor
sub
outsl
dec
fbstp
cmp
pop
xor
xchg
dec
or
loopne
jmp
push
xor
mov
and
pop
or
dec
inc
push
xchg
shlb
adcl
xor
cld
xchg
or
dec
sub
xchg
and
jmp
jae
xchg
andb
jbe
inc
xor
scas
mov
cmp
stos
inc
ja
jle
pushl
addr16
scas
int
loope
sub
stos
or
dec
lods
jecxz
mov
jmp
lcall
je
add
test
inc
fcmovu
or
push
js
xchg
add
ljmp
mov
jno
or
fs
loop
nop
into
and
loop
xchg
and
jb
decl
push
and
nop
push
dec
push
rcl
mov
mov
pushf
ljmp
mov
jbe
fs
stos
rcrb
stos
inc
mov
add
icebp
cmp
pushl
std
xchg
xchg
cmp
inc
int
mov
ljmp
pop
shll
and
in
roll
mov
add
adc
push
movsl
and
cs
loop
aam
jo
sbb
push
inc
and
ljmp
xor
scas
enter
test
loope
rolb
repnz
hlt
loop
or
incb
dec
cmp
push
shlb
lds
mov
ret
fidivrs
ljmp
push
cmc
push
and
xor
inc
cmp
add
pop
sbb
fs
sarb
mov
lcall
aaa
sbb
sbb
mov
mov
mov
std
jnp
int3
sub
mov
or
loope
inc
leave
jae
loopne
fwait
xor
mov
jmp
imul
push
repnz
dec
into
adc
mov
ljmp
ds
testb
sub
mov
ss
cwtl
cmp
push
int3
aam
pop
cmp
ljmp
xchg
mov
int
cmp
xchg
add
pushf
xor
clc
gs
xchg
jmp
inc
sub
insl
ss
test
cmp
cld
int3
aas
les
cli
xor
jmp
jns
inc
push
pop
pop
sbb
loop
nop
movsb
mov
adcb
int
dec
cmp
aad
sti
call
pop
cwtl
mov
mov
push
mov
jne
ffreep
fs
mov
mov
call
rol
shr
jle
and
jmp
mov
divl
jmp
xchg
stos
dec
sbb
es
mov
paddb
cmpsl
mov
test
decl
or
push
shrb
repnz
fisttpl
adc
mull
cmpl
xchg
push
pop
cltd
jno
jbe
pop
in
lahf
scas
mov
push
mov
stc
das
je
adcb
aaa
jle
jle
inc
incl
push
mov
jbe
data16
dec
push
push
lahf
les
and
and
ficoms
adc
sti
pushf
ret
js
mov
xor
les
mov
pusha
jmp
scas
jo
or
pop
pop
push
xlat
inc
enter
andl
mov
push
mov
and
or
cmpsl
inc
adc
imul
stos
cmp
dec
and
mov
ljmp
sub
push
clc
adc
jno
inc
mov
es
pop
xchg
lods
pop
fdivl
out
pushl
gs
scas
sub
jecxz
jle
lret
hlt
add
xlat
and
mov
std
roll
add
add
shl
adc
popa
push
mov
and
fists
lods
dec
add
jle
mov
je
mov
insl
sbb
pushl
and
push
cmpsl
and
into
addr16
jg
sub
mov
and
inc
out
sub
mov
lcall
jne
in
xchg
mov
pop
xchg
pop
test
and
cmp
decl
mov
xor
mov
divb
pop
pusha
fadd
and
ret
dec
sti
pusha
and
pop
dec
outsb
frstor
sbb
push
fsubrl
mov
sti
cmp
add
fidivrs
imul
inc
xchg
adc
imul
imul
jns
in
out
jne
mov
adc
imul
mov
cmpsl
cmp
sahf
fcmovu
js
add
jg
jmp
dec
adc
xchg
in
lock
in
fdiv
push
scas
pop
in
cmp
mov
adc
sarl
aam
cmc
dec
dec
aad
push
nop
out
or
rcrl
aad
jecxz
lcall
mov
jmp
cltd
push
mov
add
insb
ljmp
sar
cmp
pop
int
sub
jg
and
and
jmp
cmc
and
jg
jmp
loope
loope
pop
fs
xchg
jl
mov
sbbl
decl
les
es
je
mov
push
popa
outsb
out
daa
js
mov
cmp
mov
xchg
pop
sbb
dec
mov
aas
dec
push
mov
inc
mov
imul
ds
or
adc
dec
mov
jmp
jl
mov
dec
adc
mov
int3
dec
lods
data16
sbb
ret
push
mov
adc
ljmp
xchg
and
ficoms
ret
ljmp
mov
jo
insl
pusha
jns
call
popa
ds
push
icebp
test
fbstp
adc
adc
jmp
popl
rcr
pushl
lahf
push
pop
fcmovnu
inc
test
xorl
mov
mov
popf
push
in
xchg
cmc
jno
xor
loopne
popf
jns
mov
repnz
lret
inc
inc
mov
jl
movsl
scas
test
pushl
rcrb
pusha
insb
inc
adc
pop
jae
or
sub
addr16
fnstcw
call
cld
pop
inc
cmc
inc
es
cmp
in
lods
mov
inc
lods
pop
cmp
push
inc
xchg
cmpsb
mov
decl
jmp
cli
cld
add
pusha
xchg
sub
into
add
lock
aas
push
fwait
or
fiadds
popf
adc
test
pop
insl
dec
mov
incl
and
cmp
js
ds
ljmp
pop
int
pop
mov
movsb
inc
jno
pushl
sbb
xor
jge
or
je
sub
adc
cwtl
jbe
in
mov
scas
jmp
jns
les
xchg
pop
lret
hlt
popf
xlat
ja
aaa
packssdw
test
sarl
cmp
lcall
xchg
xchg
pop
jb
dec
sti
rolb
pushf
cmp
mov
ljmp
nop
adc
jg
fdivs
in
arpl
in
dec
add
sub
call
jmp
test
add
sbb
outsl
push
loopne
pop
sti
iret
test
std
stos
mov
fsubl
dec
or
in
mov
jae
adc
fwait
mov
cs
jg
dec
dec
mov
pop
jmp
sbb
jge
iret
push
popa
cmpsl
ljmp
pushl
nop
adc
push
pop
outsb
push
push
loopne
mov
decl
inc
pop
pusha
dec
pop
sbb
test
and
pop
and
test
ljmp
mov
rorb
xor
sbb
push
repnz
and
fcmovnbe
filds
fisttpll
stos
adc
mov
lret
push
mov
test
mov
mov
fs
pop
in
mov
xor
shlb
insb
scas
jecxz
int3
movsb
in
dec
and
ss
aas
xchg
cmc
test
and
lcall
fwait
jno
in
lds
mov
jmp
fcomps
mov
xchg
lds
into
mov
add
cmpsb
mov
mov
sub
iret
mov
pop
mov
inc
adc
test
in
cld
jmp
test
lods
or
je
push
mov
mov
mov
xchg
data16
call
jo
pop
push
push
xchg
shl
add
cld
jmp
pop
jae
jl
lea
jmp
mov
rclb
cmp
pop
dec
gs
xor
xor
call
lea
out
scas
repz
ss
cld
out
inc
push
mov
adc
cmp
sub
jl
adc
jo
push
sti
sbb
outsl
insb
jecxz
mov
testb
rolb
cmp
stos
mov
xor
pop
ficompl
jg
aad
aad
sbb
pushl
lock
pop
push
test
adc
js
mov
mov
cmp
scas
and
clc
jmp
leave
inc
in
push
lea
aad
push
rclb
adc
dec
int
inc
jbe
out
lods
mov
jne
sub
push
std
adc
out
test
pop
enter
xor
clc
mov
sbb
cltd
mov
sub
test
subb
mov
mov
jge
sbb
sub
int
mov
lret
cmp
loopne
decl
xchg
decb
insl
add
sbb
dec
rcrl
mov
shrb
lret
ds
out
in
add
mov
movsb
inc
or
xchg
add
enter
outsb
je
mov
hlt
sub
clc
mov
mov
bound
xchg
fcmovnbe
dec
and
jb
test
inc
pop
mov
adc
jle
movsb
mov
jl
sub
inc
in
shrl
mov
xor
cld
ljmp
es
movsl
out
sbb
or
add
lahf
cmp
popa
xchg
push
mov
repnz
push
cwtl
mov
push
sbb
mov
push
sbb
pop
dec
mov
bswap
adc
xchg
mov
call
adc
cltd
sbb
loope
repz
aad
mov
cmp
jmp
mov
lds
xchg
cltd
outsl
fs
dec
push
addr16
outsb
xor
fcmovb
sub
adc
cmp
sbb
cs
cld
hlt
ss
mov
inc
inc
push
mov
and
enter
mov
push
and
shl
mov
out
jb
xor
jmp
incl
mov
enter
lods
add
xchg
mov
lcall
out
mov
push
adc
fbstp
ljmp
enter
daa
mov
mov
dec
lds
jae
push
out
mov
std
sub
das
dec
adcb
cmp
push
std
imul
pop
mov
stos
add
sub
inc
push
xchg
adc
decl
xchg
cmpsl
fwait
and
sar
fbstp
add
fmuls
adc
push
incl
cmp
inc
dec
ja
arpl
mov
clc
and
cmp
mov
ja
fistpll
aas
insl
call
pop
push
aam
lret
pop
mov
and
xchg
lock
hlt
ja
push
insl
es
adc
adc
jmp
ja
jg
aam
sub
inc
inc
mov
add
and
mov
scas
push
sub
jl
decl
mov
inc
popf
mov
popa
mov
fsubs
and
or
or
adc
call
push
or
sub
sbb
pop
icebp
sarl
sti
pop
xor
pop
loopne
jmp
push
outsb
ljmp
and
stc
andb
dec
mov
mov
pusha
push
scas
adc
push
cmp
xchg
and
aaa
loope
aad
ljmp
xchg
xchg
push
imulb
in
inc
adc
lea
cmp
ror
sbb
outsl
dec
call
incl
cmp
or
dec
outsl
pop
out
aaa
mov
fisubrl
jo
pop
mov
xchg
mov
addr16
sub
out
dec
sbb
xchg
add
jnp
xor
in
and
push
mov
data16
mov
mov
lock
pop
in
shl
or
mov
mov
test
push
leave
push
push
lret
nop
push
sub
arpl
dec
jecxz
rorb
ljmp
outsl
jecxz
in
lods
shlb
or
std
test
ficoms
cltd
push
mov
lea
fstpt
shl
jno
shlb
enter
inc
and
repz
pop
mov
addb
pushl
xor
mov
sbb
scas
rcrb
adc
xor
je
aaa
mov
and
jb
fs
cmp
mov
hlt
sbb
sub
subb
and
scas
dec
into
xchg
mov
test
sbb
push
xchg
loop
es
mov
ljmp
mov
sbb
inc
rcll
jecxz
push
mov
in
push
loope
and
incl
or
add
in
daa
int
orb
add
pop
hlt
jmp
mov
in
jecxz
sahf
sti
jmp
jle
jl
loop
and
mov
jmp
divb
dec
adc
imul
xchg
pop
in
dec
sarl
or
cli
shrb
rorl
pop
mov
icebp
push
dec
out
call
js
clc
mov
rcrl
push
pop
jne
pushl
adc
and
dec
dec
in
dec
movsl
mov
mov
movsb
sar
pop
imul
lds
ljmp
outsl
or
in
ror
push
jb
inc
cwtl
decb
lret
lcall
mov
clc
pop
movsbl
push
mov
cmc
mov
hlt
sub
pop
xchg
call
sahf
cmp
std
inc
sub
cmp
mov
and
aam
mov
pop
inc
in
jp
int
push
xor
test
add
inc
push
jecxz
popa
sub
and
call
sbb
jmp
cmc
es
pop
popf
xor
cmpsl
movsb
adc
incl
sub
xchg
dec
dec
lods
andb
lods
repz
pop
cmp
decl
add
mov
cmp
xor
das
out
add
inc
cmp
jb
sbb
push
je
jg
cld
outsl
or
hlt
and
inc
pop
fldcw
ror
cmp
sbbb
std
xchg
mov
push
push
loopne
hlt
xchg
ss
sahf
dec
fimuls
jo
jecxz
lods
pop
cld
incl
sub
aas
movsl
or
push
daa
pop
daa
sbb
inc
test
insl
cmpsb
jmp
dec
mov
hlt
add
adc
push
or
add
int
jne,pn
jne
add
jnp
jnp
and
enter
mov
ret
icebp
jg
xchg
push
mov
pop
cmc
js
push
or
out
and
xor
cmc
xchg
nop
sub
out
mov
fdecstp
jg
incl
jns
cmpsb
icebp
cmp
mov
jo
loop
add
sbb
push
adc
iret
push
aam
insl
stos
ljmp
mov
test
xor
xchg
repnz
jmp
xchg
push
push
scas
jmp
stos
lea
out
aam
sub
adc
sbbb
mov
decl
xchg
vmread
pusha
sbb
nop
mov
xorb
cmp
sarl
rcll
cld
mov
fucomp
jo
imul
or
cmp
pop
mov
jae
and
pop
cmp
dec
jp
or
hlt
test
jo
xchg
push
xchg
pop
arpl
mov
hlt
lahf
mov
push
push
xchg
add
mov
aad
adc
outsl
pop
sahf
test
das
dec
pop
dec
notl
fistps
cli
pushl
pop
push
or
inc
and
dec
fistpll
adc
fnsave
sub
ljmp
cmp
movsb
jne
sarl
jns
jl
xor
jecxz
xor
cmp
inc
in
push
out
mov
mov
jge
inc
mov
pop
and
pop
adcl
adc
incl
dec
dec
push
sbb
mov
push
test
sbb
xchg
fisttpl
or
xor
insl
fwait
stos
jmp
push
inc
out
mov
dec
mov
lret
mov
lcall
fucom
mov
cmp
xor
loopne
das
std
cmp
fisttpl
les
xor
in
fdivrl
jnp
xchg
aad
xchg
into
or
dec
mov
rol
adc
sbb
sbb
test
js
pushl
repz
jl
and
dec
sub
out
ja
push
add
push
outsl
and
fs
mov
mov
test
add
shr
push
mov
lods
push
adc
repz
fmuls
mov
adc
out
incl
mov
unpckhps
cli
pop
adc
inc
dec
incb
dec
aaa
cld
inc
incl
xchg
repz
lods
push
add
nop
gs
decl
cmc
pop
mov
push
in
pop
pusha
loop
mov
fwait
jae
sbb
lret
cltd
cwtl
sti
push
add
sti
jl
xor
into
stos
jg
lcall
cmpsb
lock
iret
outsb
mov
in
or
add
xor
jp
movsl
jmp
repz
push
push
and
into
ja
sarb
pop
sbb
stos
imul
incl
test
jmp
jecxz
pop
push
les
adc
xchg
sar
call
mov
sub
addb
stos
push
cs
movb
or
and
lds
sbb
call
shll
push
inc
out
xchg
insl
addl
pop
sub
sbb
enter
push
out
push
add
push
jb
int
int3
pop
in
outsl
ja
or
test
popf
inc
adc
aam
pop
in
dec
lods
mov
mov
dec
pop
popa
dec
pop
xorb
xchg
jo
or
sti
sti
arpl
lock
dec
push
inc
sub
add
push
movsl
jbe
pop
push
cmc
pop
cmc
jno
outsl
xchg
fs
push
lods
xchg
decl
inc
mov
xor
add
in
repz
rclb
xchg
incl
imul
mov
push
or
testb
scas
sbb
movl
int
ss
inc
push
or
mov
sahf
fldt
popa
rcrl
ret
in
aas
test
icebp
lods
dec
ficoml
adc
jle
icebp
push
test
jg
into
sub
and
ja
sbb
cmpsl
mov
add
sti
push
out
fiadds
push
mull
scas
out
into
cmp
push
add
lcall
decl
mov
xchg
popa
dec
stos
in
adc
sbb
loop
mov
jb
lcall
cwtl
xchg
test
fwait
or
cmp
rolb
lret
js
insb
sub
push
mov
lahf
sbb
pushl
fstps
xchg
shlb
xlat
dec
mov
lcall
lock
call
rcrl
int
out
pusha
xchg
sbb
int
shrl
pushl
loope
das
pop
or
arpl
adc
xchg
push
iret
not
xor
sub
lcall
push
mov
mov
pusha
sub
mov
stc
dec
cs
inc
xchg
cs
adc
cmp
mov
push
movsb
mov
notb
cmp
jmp
pop
in
and
xchg
mov
scas
and
or
je
jns
mov
pushl
dec
ret
ja
sub
nop
aaa
sub
mov
pop
push
arpl
adc
cmc
ljmp
mov
es
jb
xor
xchg
and
dec
sarl
sub
ja
and
jmp
stos
into
idiv
pop
loopne
or
fidivrl
jo
movsb
ret
loop
xchg
jp
fucomi
in
pop
mov
mov
jo
bound
xchg
inc
xor
mov
fwait
adc
lods
mov
sti
lea
test
sahf
cli
xchg
push
mov
cmp
divl
cmp
arpl
loopne
inc
fcomps
out
ljmp
mov
and
mov
pushl
or
mov
cmpsb
jl
mov
and
dec
pushf
in
mov
call
and
mov
in
pop
mov
shrb
xchg
cwtl
shll
push
jae
fisubrs
fldl
in
fcoml
push
cltd
xchg
or
sbb
sub
jmp
sbb
mov
out
push
fildl
not
push
push
dec
enter
in
jae
dec
add
jbe
fimuls
xchg
pop
aaa
pop
dec
into
loope
xchg
adc
sar
jmp
sub
inc
mov
sub
xor
and
xorb
pop
call
out
pushl
sub
ret
adc
pop
icebp
xlat
mov
push
arpl
jmp
push
pushl
aas
and
fcmovu
shr
subl
out
inc
mov
cmpsl
lods
pusha
adc
cld
ljmp
pushf
sub
out
fiaddl
rclw
cs
in
mov
cmp
push
imul
addr16
stc
lock
insl
leave
aam
icebp
xchg
xor
pushl
fwait
shll
fsts
and
mov
in
jg
and
movsb
mov
xlat
call
loopne
int
loopne
dec
cmpsb
push
add
fcoms
jb
dec
pop
andb
movsl
mov
lret
sbb
dec
inc
icebp
or
aas
jbe
jo
popf
lods
add
dec
lahf
lods
jbe
push
jg
push
lods
andl
in
out
fdivrp
add
fsts
push
repnz
mov
inc
stos
xlat
lahf
pop
sub
xlat
ljmp
adc
ficompl
mov
fwait
xlat
push
ret
test
pop
push
sbb
repnz
sub
lock
int3
les
iret
fidivrl
lret
mov
or
aam
mov
mov
jo
inc
test
mov
and
pop
mov
or
fs
jge
push
push
cmp
addb
sarl
jbe
orb
mov
dec
sub
int
les
js
add
or
mov
ljmp
cmp
ror
and
enter
add
jp
test
jns
notl
mov
or
roll
sub
mov
jg
dec
imul
adc
adc
dec
inc
hlt
loope
hlt
ja
lods
pop
fistpll
stc
imul
cmp
jl
jb
pusha
add
xchg
or
int3
imul
or
movsl
sub
fnstenv
xor
sbb
lcall
sub
mov
pop
mov
pop
dec
mov
aaa
loopne
inc
pop
std
aad
and
push
xchg
mov
sub
cmp
mov
and
insl
scas
clc
dec
mov
test
out
or
jnp
cmp
mov
sub
lods
or
stc
mov
cmp
loopne
jge
cmc
mov
and
adc
fwait
mov
ljmp
in
test
mov
push
mov
leave
mov
call
imul
pushl
add
andnps
xor
lret
cmp
and
mov
dec
addr16
jmp
jbe
mov
mov
fcmovne
out
sbb
test
xlat
xor
dec
movsl
dec
or
pushl
aaa
sarb
stos
mov
xchg
sarb
sub
xor
mov
jecxz
dec
adc
mov
sti
mov
aaa
jbe
or
ret
fmull
gs
push
jg
adc
add
mov
pushl
scas
lret
push
imull
cld
push
sbb
shl
mov
sahf
sahf
in
icebp
lods
jb
int
jae
dec
fwait
jge
fidivrl
out
call
xchg
or
adc
lcall
js
aas
push
mov
jecxz
ss
jecxz
nop
inc
mov
xor
imul
incl
or
pop
mov
jae
mov
cmp
jb
mov
cmp
mov
pop
inc
das
or
data16
inc
push
imul
pop
sbb
insb
ret
mov
rclb
mov
ljmp
adcl
jbe
xlat
jl
pop
or
and
mov
and
lret
jg
je
cs
or
rolb
xor
push
ds
pushl
cmpsl
inc
bound
jge
dec
je
pop
jp
adc
sub
cmp
call
cmp
xchg
jno
in
adc
lret
fwait
bound
arpl
push
mov
hlt
pushl
lret
push
les
and
lods
mov
icebp
add
iret
ljmp
cld
clc
sub
or
and
mov
inc
lock
aas
idivl
jmp
sti
sbb
jae
ja
icebp
mov
inc
shr
je
jmp
gs
incl
lcall
cmp
imul
xchg
lods
pushf
jno
sbb
xchg
js
out
dec
jne
or
dec
mov
ret
cmp
mov
xlat
dec
ljmp
xchg
in
sub
add
out
xor
xchg
inc
adc
cmc
outsl
ljmp
incl
sbb
aas
ja
movsl
adc
adc
adc
dec
xchg
push
imul
jae
push
out
jmp
push
xchg
hlt
jg
subl
rcrl
adc
and
pop
out
cmpsb
mov
incl
cmp
pop
pop
dec
daa
insb
xor
popa
es
sub
lds
icebp
dec
and
dec
dec
cwtl
lcall
push
fldt
ret
ds
clc
mov
sub
mov
lods
aas
je
mov
ljmp
popa
aad
push
adc
pop
aas
faddl
mov
jnp
jne
fnstenv
cwtl
mov
pop
imul
fsubr
sbb
inc
fisttpll
leave
sub
jge
lcall
dec
data16
notb
into
cmp
lcall
ljmp
xlat
mov
dec
out
cmpsb
fisubl
mov
xor
ljmp
clc
jne
and
dec
push
jae
fsubrs
inc
test
fldpi
loopne
insl
call
ret
lret
rclb
cmpb
js
jp
cmc
sub
std
fsubl
dec
push
xchg
push
ljmp
mov
aad
sbb
clc
xchg
xchg
sar
push
mull
outsb
sub
scas
in
xor
loop
sahf
push
daa
repz
inc
push
jne
adc
mov
cmp
adc
ljmp
mov
int
div
adc
daa
cmp
je
dec
out
rcl
xor
fcomip
lcall
not
loop
ret
cmp
mov
push
movsb
les
out
insl
add
incl
aaa
sub
cld
jno
fcmovnb
stos
leave
mov
xorb
gs
and
xchg
inc
lcall
pop
pop
xor
xor
lcall
add
inc
mov
mov
pop
outsb
pop
leave
pop
xchg
pushf
sahf
dec
js
cwtl
pop
loopne
jecxz
popa
stos
call
aam
mov
adc
mov
pop
stc
data16
xor
fdivrs
nop
mov
ljmp
stc
dec
les
rclb
ss
popa
push
push
popf
ljmp
pop
lock
lcall
sbb
bound
ja
push
push
incl
mov
mov
push
xchg
jge
mov
xor
mov
cmpsb
test
mov
mov
cld
test
sub
pop
mov
and
jecxz
xchg
push
dec
push
xchg
dec
and
dec
pop
jge
xor
and
xchg
in
in
hlt
sbb
xchg
ret
ljmp
push
cmc
les
inc
and
out
aad
pop
mov
pushl
std
dec
fsubrp
jle
test
or
mov
jge
std
mov
sub
push
cmc
jmp
sbb
fldcw
stc
movl
jbe
sub
lock
jl
shll
loope
sub
mov
incl
pop
in
fisubrs
es
jns
cmp
shrl
pop
in
cli
test
call
xchg
jge
adc
lahf
cmc
dec
mov
enter
pop
scas
lods
leave
lods
sar
jo
movsb
push
aas
test
jne
or
iret
and
cmpsb
lea
loope
mov
int
push
add
in
das
addr16
jg
xchg
xlat
fdivl
test
daa
lods
xchg
aam
push
sub
popf
xor
adc
jge
sbb
and
mov
es
fimull
popa
out
ret
clc
incl
push
fsubl
mov
lahf
movsl
repnz
loopne
lea
dec
lcall
cwtl
jmp
sub
push
stos
dec
scas
push
xor
cmc
or
mov
fmull
inc
movsl
arpl
arpl
cs
and
add
call
jnp
sbb
push
inc
jmp
cmp
lods
dec
xchg
ficompl
test
jl
out
adc
pop
fcomip
jmp
outsl
out
xchg
sahf
imul
add
jge
rcr
fidivl
out
lret
stos
das
sti
fisttps
dec
aas
inc
push
jl
mov
and
jae
int3
push
fadds
dec
jns
nop
xchg
int3
dec
xor
test
in
aaa
cmpb
jmp
xchg
sbb
sub
sbb
into
and
lds
push
pop
sahf
cmp
xor
jle
sti
insl
daa
jne
repnz
mov
incl
cmp
stos
xlat
clc
insb
int
adc
je
notb
rcl
je
in
jns
ljmp
jl
je
pop
xchg
loopne
imul
mov
scas
sbb
aad
jo
dec
nop
mov
clc
jp
mov
xchg
xchg
popa
inc
jg
decl
xor
popa
bound
sbb
arpl
lret
adc
cwtl
pushf
add
inc
jne
dec
lcall
call
aaa
mov
in
mov
push
call
jnp
mov
incl
xchg
mov
popf
mov
das
or
push
jne
fdivl
pop
call
pusha
push
and
ljmp
clc
test
jg
cld
add
daa
fnstcw
int3
adc
jmp
insl
cmp
rcrl
dec
out
pop
mov
js
pushf
and
enter
push
or
fdivrp
jmp
shrb
xor
jbe
xchg
stc
mov
jb
out
push
lret
mov
sbb
lods
xchg
lods
mov
sub
test
ja
sub
aad
ljmp
je
inc
mov
xchg
fldl2t
cmp
bound
fsubrl
arpl
addr16
decl
xchg
dec
adcb
into
mov
jmp
mov
icebp
incl
dec
mov
mov
dec
sub
filds
lcall
inc
in
loopne
dec
jb
fwait
cli
and
inc
sbb
inc
sahf
sbb
ljmp
popf
push
loope
and
cmp
repz
inc
aad
xor
stos
sarb
incl
mov
fstpt
xchg
es
lret
add
jno
inc
jmp
call
add
mov
pusha
repnz
mov
dec
cld
fcomps
pop
adc
movsb
cmova
out
sti
inc
test
xchg
adc
in
mov
and
sbb
out
dec
lds
xlat
xchg
pop
push
xchg
add
adc
add
jle
add
fdivr
ljmp
nop
fmull
mov
push
out
js
dec
or
dec
push
inc
test
dec
cmp
push
ljmp
ror
xchg
push
push
mov
sbb
mov
pop
scas
jns
sub
mov
push
mov
xchg
sbbb
fcomip
push
movsl
xor
mov
mov
lds
ljmp
push
lcall
aas
mov
mov
pop
mov
xor
pop
inc
mov
ljmp
xor
xchg
sbb
clc
jg
or
je
jmp
pop
int3
nop
inc
and
xor
jl
daa
mov
in
or
rcrb
cmp
aaa
sti
sub
mov
dec
gs
push
sahf
mov
sbb
xchg
push
and
cmp
sub
xorb
dec
outsb
test
sbb
lcall
mov
cltd
jge
aad
sbb
push
inc
into
mov
mov
nop
int
sub
incl
jle
inc
imul
popa
and
push
or
adcl
lock
clc
inc
ljmp
push
popf
inc
in
lea
mov
pop
jg
push
aas
popa
subl
mov
call
lret
cmp
cmp
cmp
orb
dec
mov
cli
out
shlb
dec
cs
xchg
or
mov
shll
adc
sbb
push
call
push
leave
mov
icebp
jne
mov
xor
sub
cmpsb
imul
rcrb
lock
xchg
cmp
sbb
inc
inc
push
inc
pop
das
inc
inc
in
arpl
inc
call
sub
gs
cld
iret
les
jo
into
enter
cmpsb
jl
dec
fdiv
incl
xchg
jb
mov
lret
jb
adc
mov
cld
je
mov
insb
dec
rol
or
loope
cmpsb
cmpsb
pop
ret
cmp
inc
adc
std
fistps
inc
int3
mov
and
fcmovbe
in
jnp
mov
lret
sub
ljmp
or
pushf
mov
or
jno
or
mov
ljmp
ljmp
cmp
inc
mov
xchg
rolb
mov
dec
fcoml
loopne
cmp
or
and
and
push
cmc
xorl
call
or
inc
inc
fidivrl
fwait
insb
or
fimuls
xchg
mov
outsb
loopne
adc
call
test
inc
out
int
inc
xchg
push
ret
andl
cmp
push
ret
lea
fwait
sti
inc
in
bnd
ljmp
inc
push
repnz
xchg
mov
cmp
mov
mov
cltd
into
decl
fidivs
xchg
jp
cmp
sbb
sub
add
and
data16
push
mov
mov
mov
or
sarl
dec
push
scas
mov
jo
repz
fsubs
addr16
ljmp
icebp
inc
sarl
imul
jo
jo
sbb
mov
rorl
call
sub
aad
xchg
cltd
and
cmp
lock
sbb
outsl
out
addl
les
imul
inc
add
orl
lcall
out
sub
inc
ss
push
or
stos
push
adc
push
sbb
jo
in
clc
jp
js
push
outsl
mov
push
cmp
clc
inc
mov
fisttps
xorl
std
fwait
jo
lods
push
jle
jp
mov
sub
dec
add
dec
imul
jb
jg
lcall
fmuls
cmp
add
js
mov
add
mov
add
add
add
add
orl
ret
push
push
jmp
sti
out
fucomip
mov
xchg
xor
push
push
adc
ljmp
pushl
insb
add
add
call
popa
xor
sub
mov
mov
std
fstp
ret
mov
subl
cmp
out
adc
adc
repnz
pop
mov
dec
mov
add
inc
mov
dec
ret
push
ljmp
mov
mov
mov
arpl
lahf
lods
mov
add
test
and
test
incl
mov
add
mov
loopne
fwait
sti
mov
xor
mov
cmp
jne
scas
loopne
int3
adc
adc
sbb
jg
sti
dec
adc
push
add
mov
add
mov
fldl
adc
cmpl
fnstsw
leave
jne
jg
dec
jmp
sub
inc
sub
inc
push
cs
ljmp
rcll
std
xchg
pop
inc
ror
or
lods
je
iret
adc
push
inc
call
push
pop
mov
cmpsb
inc
popa
pop
aad
das
add
xchg
and
cs
into
cmp
idiv
pushl
push
mov
mov
sbb
adc
stos
cmp
unpcklps
ljmp
push
inc
scas
add
xor
lock
inc
jns
stos
mov
xchg
sub
repnz
cli
xor
inc
rolb
dec
test
pop
data16
xor
fs
add
jg
mov
ja
jno
inc
je
jae
xor
pop
outsl
out
xor
xchg
test
mov
push
push
aad
leave
test
mov
push
insl
imul
jmp
lea
cmp
sub
int
fimuls
sbb
test
jg
jg
fcomip
jmp
or
iret
inc
repnz
lods
mov
imul
add
jmp
adc
jle
push
iret
outsb
stos
adc
dec
push
stc
lods
cmp
js
mov
test
xchg
inc
sbb
or
mov
mov
lret
adc
lcall
movsb
fsubs
mov
in
dec
ret
repnz
das
ss
stc
test
shll
out
fsubs
mov
pop
int3
addl
dec
mov
add
mov
sub
mov
add
mov
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
mov
popf
fiadds
sub
push
jbe
mov
dec
lods
test
xor
fdivl
cltd
mov
mov
out
push
mov
and
dec
inc
add
nop
push
int
dec
sub
or
jbe
stc
scas
enter
jmp
sub
mov
pop
mov
mov
lods
adc
ljmp
out
adc
dec
sub
in
adc
pop
mov
lea
scas
ffree
inc
stc
inc
mov
dec
lea
add
movsl
sub
clc
movsb
mov
xchg
repnz
or
jmp
cmp
les
and
sets
add
mov
incl
mov
add
jmp
loop
enter
outsb
rcrl
leave
clc
hlt
lods
aam
cmpsl
push
mov
aad
sbb
ret
push
jp
rcll
test
mov
xchg
loopne
mov
lock
call
cld
loope
push
xchg
insl
scas
xchg
xor
lss
cli
lcall
sbb
in
je
dec
in
std
adc
ret
test
in
sbb
es
mov
mov
mov
lcall
lcall
ret
or
stos
push
cmp
xchg
and
shrb
dec
mov
gs
sub
sti
imull
inc
cwtl
outsb
lahf
xor
addr16
in
nop
jne
xor
pop
push
fildl
xor
cmpsb
insb
nop
into
inc
repz
pushl
dec
cltd
lahf
jno
aaa
inc
jp
out
cmp
es
leave
jnp
sbb
loop
decl
int
repnz
pop
aad
mov
pop
insb
mov
rclb
inc
nop
and
decl
mov
stos
ljmp
sbb
sarl
pop
adc
sbb
decl
cmp
cmp
inc
shlb
daa
or
xor
inc
enter
lcall
xchg
jnp
sbb
dec
adc
dec
scas
dec
jl
stos
mov
mov
cltd
mov
enter
test
data16
cld
push
adc
add
add
jmp
jl
movsl
gs
sti
loopne
ror
xor
jp
pop
cmpsl
in
sub
aas
test
jae
jmp
inc
loop
popa
mov
loop
mov
jnp
mov
pop
arpl
mov
popa
pop
add
add
xor
daa
fdivrl
scas
add
push
inc
add
andb
fadds
pop
jmp
pushl
test
mov
cmp
xchg
or
mov
sub
lcall
mov
or
in
mov
or
jmp
rclb
jae
test
daa
xchg
lea
pop
mov
iret
test
pop
loop
add
imul
jbe
pushl
xor
outsb
andb
xchg
iret
insb
push
lret
cmpsl
imul
pushl
popa
je
fnstsw
inc
rcrl
pusha
add
sbb
pop
fistps
imul
mov
lcall
jo
or
add
fistpll
add
or
cmp
add
imul
les
add
or
arpl
testb
push
ret
ss
cmp
and
pushl
fwait
test
fisttpl
outsl
add
add
or
ret
or
push
repz
xor
mov
fmulp
xor
pop
mov
fs
and
sarl
aaa
pusha
cmp
add
pop
pop
xchg
bnd
cmp
mov
mov
into
fistpll
ss
and
fs
fdivr
cmp
loopne
into
dec
cltd
push
cmpsl
push
jecxz
xchg
out
adc
std
pop
cld
or
movntq
jle
adc
fisttps
jg
adc
xchg
dec
sti
mov
pop
mov
fstl
cltd
pop
out
dec
push
jnp
lock
insl
xor
inc
mov
jo
or
incl
or
inc
fs
inc
dec
aas
out
pop
mov
mov
incl
mov
sub
mov
dec
rcrb
ss
add
dec
js
fdivr
dec
fs
dec
insl
add
push
jbe
js
shlb
xchg
loop
mov
or
jmp
mov
loop
xchg
mov
dec
pop
dec
dec
scas
jo
dec
out
push
cld
incl
push
fstpt
pop
test
fs
bound
dec
inc
jl
inc
jo
fisttps
jp
ret
sti
or
sbb
gs
push
loop
jbe
loopne
cmp
dec
mov
insl
push
imulb
sbb
pusha
or
fistpll
add
decb
jecxz
repz
push
pop
lock
lcall
decb
xchg
jle
cltd
arpl
push
stc
out
jno
pop
dec
or
stc
or
repz
fldt
xchg
fcoms
adc
mov
out
adc
data16
xchg
xor
out
sub
data16
out
orl
pop
sahf
mov
adc
push
sahf
ss
mov
imul
push
sbb
stc
mov
push
sbb
pop
dec
ja
in
mov
es
fisubs
add
mov
jnp
fldenv
cmpsb
leave
push
xchg
idiv
divb
not
hlt
faddp
sub
addr16
incl
rorl
add
dec
subb
dec
imul
push
iret
sti
dec
subb
aaa
mov
xor
mov
mov
mov
mov
mov
insb
jno
jp
loope
xor
or
mov
jae
jg
pop
mov
cmp
out
push
inc
jle
adc
xor
arpl
hlt
in
decl
mov
ds
or
inc
adc
xchg
cmp
cld
repz
ds
es
call
and
cmp
andb
call
mov
std
fbstp
cs
arpl
bound
sub
cmp
mov
inc
aas
in
mov
mov
or
cmpsl
add
negl
popa
out
imul
ljmp
out
gs
cmp
popa
pop
inc
jnp
les
loopne
data16
dec
push
incl
xchg
ret
rolb
push
pop
mov
mov
subb
pushl
or
outsw
xchg
mov
or
sbbb
in
mov
or
in
mov
push
xchg
mov
mov
jle
mov
jge
outsb
decl
or
ds
clc
decl
jnp
outsl
pop
iret
andb
std
pop
jno
jle
mov
or
jle
cmp
loopne
jl
sub
jbe
ds
sbb
jo
inc
fwait
out
push
adc
nopl
jo
out
cltd
pop
mov
cs
loopne
cmp
dec
pop
cmp
adc
incb
idivb
xor
push
stos
xor
lcall
push
roll
cmp
mov
cmpsl
push
cli
loop
xchg
or
dec
jg
roll
push
subb
fstps
popf
mov
add
mov
je
mov
stc
sub
sbb
inc
hlt
mov
mov
dec
scas
mov
dec
stos
mov
call
enter
inc
sar
sbb
xor
insb
adc
mov
jmp
cmp
dec
outsb
xor
cli
push
aas
cmp
ds
out
or
mov
or
dec
inc
jb
pusha
add
push
cwtl
sbb
incl
push
pushf
push
sbb
sub
add
aad
cmp
call
pop
jecxz
lods
fcomps
fnstcw
jmp
out
loop
inc
loopne
cld
xor
jg
pushf
pop
mov
addb
insl
int
mov
outsb
fstpl
in
outsl
lock
mov
dec
loopne
cmp
xor
daa
sbb
loopne
and
hlt
decl
pop
pushl
mov
push
fmulp
jmp
fsubl
jo
mov
lods
repnz
out
enter
lret
test
xchg
sub
enter
enter
add
addr16
lea
fs
incl
sub
jecxz
lods
ljmp
or
add
outsb
loop
jg
cmp
mov
jns
mov
je
mov
pop
jmp
xchg
lock
addl
clc
fidivl
je
or
xchg
add
cmpsl
movsl
push
sbb
aaa
ds
push
fadd
sub
ljmp
jae
inc
inc
inc
dec
js
pop
dec
push
push
push
jbe
push
push
bound
dec
arpl
fwait
jmp
jbe
outsb
imul
push
cmp
push
add
mov
pop
xor
insb
dec
push
xor
ja
jb
addr16
jp
fs
popa
jno
mov
dec
push
dec
dec
jns
popa
xor
cs
aaa
xor
jbe
bound
push
cmp
jb
outsb
push
gs
pop
inc
insl
push
jo
inc
je
inc
insl
push
xor
js
pop
inc
inc
xor
jae
outsl
gs
dec
push
push
incl
pop
jno
dec
jne
push
jno
xor
dec
outsb
inc
xor
push
pop
bound
ja
cmpb
inc
ss
jp
and
jp
jp
inc
outsl
inc
insb
ja
sti
push
imul
insb
jb
je
pop
dec
push
aaa
xor
jo
decl
push
inc
addr16
jns
dec
jae
insb
jbe
xor
dec
dec
push
xor
inc
push
fcomip
incl
inc
addr16
inc
jo
push
inc
gs
xor
ja
xor
jns
jns
add
pop
push
fs
jb
xor
je
outsl
dec
push
in
fbstp
orb
inc
xor
dec
gs
push
ret
sbb
mov
dec
push
inc
jno
jne
push
aaa
xor
inc
jns
add
push
outsb
dec
inc
pop
push
inc
dec
jbe
inc
push
jno
insb
pop
pop
xor
arpl
push
mov
enter
inc
jb
insb
cmp
inc
popa
imul
inc
inc
inc
stos
mov
push
add
nop
inc
add
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
insl
adc
call
dec
mov
add
aaa
call
mov
add
or
in
jg
incl
inc
adc
icebp
repnz
repnz
and
mov
and
or
jecxz
add
mov
add
add
orb
add
add
adcb
cwtl
add
sbb
push
addb
sbb
adcl
rolb
xor
rorl
xchg
push
pop
or
cmp
in
pushl
fldl
push
orl
inc
or
outsl
jg
fstl
hlt
or
add
sarl
cmp
or
add
outsl
divb
lahf
pushf
nop
dec
insl
cmpsb
roll
shrb
adc
or
mov
sbb
inc
inc
adc
add
int
lcall
sbb
pop
decl
sahf
out
ds
cmp
dec
and
notl
jbe
cs
out
imul
jg
xchg
mov
std
mov
add
add
aad
push
int
mov
pop
sti
adcl
cmp
sub
sbb
mov
adc
dec
push
sub
out
inc
jl
xchg
lods
jb
sub
mov
mov
fldl
sbb
add
or
cltd
cmp
push
stos
cli
jge
outsl
pop
pusha
sbb
and
adc
cmp
cs
mov
in
cltd
movsl
add
mov
jo
sha1msg2
push
pop
inc
push
dec
negl
int
test
add
adc
mov
mov
and
sbbb
fildl
cmc
and
loope
fnstcw
lret
scas
rcll
sbb
pop
mov
mov
in
pop
add
and
jecxz
fbstp
mov
mov
out
ret
pop
out
dec
nop
cmc
pop
add
icebp
dec
bswap
js
cmp
imulb
sbb
clc
mov
sbb
xchg
mov
sbb
sahf
stos
sub
push
pop
stos
jno
cltd
int
lret
xor
sbb
loopne
or
adc
sub
dec
pop
pop
pop
stos
cltd
mov
mov
sub
cmp
cs
sarl
inc
push
sarl
movsl
imul
std
add
sub
inc
cmp
push
xor
adc
inc
lods
jne
and
jne
add
cmpsl
jae
rcrb
dec
jae
popa
add
inc
or
jo
stos
cmp
js
push
pop
pushf
imul
stos
ss
loope
aas
fistpl
out
push
pop
loopne
pop
sbb
loop
out
aaa
pop
adc
jnp
pushl
or
push
in
push
mov
aad
out
pop
das
jle
or
loopne
mov
push
arpl
cmp
sbb
sahf
sbb
in
out
loopne
push
mov
ds
xor
icebp
and
rcr
push
in
rcll
movl
aaa
dec
jnp
add
imul
mov
rorl
lcall
icebp
push
ss
adc
jg
mov
popf
mov
sbb
test
lcall
sbb
fwait
and
mov
add
jl
dec
loopne
mov
mov
int
loopne
jl
push
jo
mov
sub
pop
lret
fscale
lahf
cmpsb
imul
mov
mul
imul
mov
pop
into
jns
mov
sbb
lock
cmp
mov
push
mov
bswap
or
dec
stos
pop
or
add
inc
stos
jne
mov
push
inc
in
mov
mov
mov
and
sti
fistl
push
push
pusha
xorl
adc
push
or
lock
adc
sbb
xor
cmpsb
std
mov
jo
in
or
xor
sub
jae
push
pop
div
mov
mov
add
xor
loope
jo
sub
jae
pop
js
loope
push
in
jno
mov
or
push
cmp
pop
xor
mov
out
loope
push
xchg
jo
xor
lock
stos
popf
mov
dec
add
fcmovb
mov
ret
add
mov
data16
add
jl
jmp
add
and
jp
pop
or
in
adc
imul
pop
inc
lret
jg
mov
in
call
add
orl
mov
add
inc
inc
mov
fstpt
xchg
cmpb
dec
mov
push
mov
icebp
push
enter
call
mov
mov
and
inc
data16
jns
add
push
shll
clc
pushl
xor
add
lahf
mov
jecxz
lea
mov
ljmp
jecxz
ret
lret
mov
leave
dec
loopne
ljmp
mov
add
incl
adc
add
xchg
shlb
popf
xchg
adc
loopne
lcall
jne
je
add
incb
insb
or
jae
add
inc
jecxz
fildl
lock
jne
jae
div
mov
jbe
add
pop
ret
ret
jae
inc
cmc
andb
sti
data16
mov
aaa
addl
jnp
add
mov
xchg
xchg
fstcw
add
inc
hlt
mov
adc
add
jo
mov
in
ror
je
mov
adc
add
push
sub
mov
push
mov
fimuls
mov
xchg
push
jo
add
push
xchg
mov
mov
lahf
rolb
xchg
pop
add
add
scas
outsl
scas
mov
adc
lock
add
mov
pusha
sub
jl
mov
cmp
mov
rcll
cmp
jo
sub
jo
insb
xor
imul
dec
cmp
sub
fldenv
je
push
and
and
cmpsb
imul
mov
imul
scas
sub
xchg
insb
shll
dec
sub
push
shll
mov
test
mov
inc
sub
jo
inc
rclb
adc
loope
pusha
adc
adc
sub
mov
jno
add
jbe
mov
push
repnz
sub
div
pop
testl
and
sub
divb
mov
mov
adc
and
add
add
jp
adc
rorb
das
pop
clc
cmp
pop
add
rcl
rcl
aad
rcr
adc
add
fstp
ret
add
rol
mov
lret
add
push
add
call
lcall
sahf
popf
add
xchg
mov
lods
lods
xchg
jecxz
cltd
std
incl
testb
mov
pop
add
add
sbb
or
push
sti
in
add
add
icebp
lock
cmc
or
sti
cli
inc
add
clc
cld
std
cld
sbb
lods
add
mov
decl
fs
push
add
push
in
and
sub
add
add
inc
out
mov
sti
sbb
ljmp
or
dec
adc
inc
fidivrs
xchg
jo
xchg
mov
ja
mov
rcl
fdivl
fbstp
cmp
and
jl
and
shufps
outsl
clc
mov
jne
pop
xchg
mov
cwtl
jle
push
jne
xorb
inc
mov
mov
mov
addl
ds
mov
loope
fldt
mov
out
pop
mov
pop
push
adc
call
sbb
lcall
lods
loopne
xchg
add
xlat
jmp
cmp
stc
mov
cltd
add
in
inc
jg
lret
scas
out
adc
add
into
hlt
pop
fists
cld
outsl
out
sti
js
and
adc
push
lods
inc
add
push
mov
mov
push
fwait
mov
sarl
stos
shll
dec
out
sbb
pushl
sub
dec
mov
out
add
and
ficoms
sbb
mov
xor
icebp
or
cmp
xor
or
sbb
mov
dec
xor
xchg
push
xchg
lret
mov
loop
mov
add
icebp
mov
sbb
addl
mov
adc
push
add
repz
sbbl
cmpsb
test
dec
add
push
pop
adc
mov
sub
jae
add
rolb
jmp
xchg
adc
testb
jecxz
add
add
add
push
addb
test
negb
push
fcoml
add
mov
fnstenv
add
push
lods
mov
outsl
dec
or
out
adc
cmp
fisubrs
push
add
push
popf
rorb
or
adc
jbe
dec
inc
push
movb
push
push
stc
xlat
lcall
jg
add
sbb
jnp
pop
rclb
mov
or
fwait
or
add
push
cltd
scas
testb
cmpsb
insl
fcmovbe
pop
fwait
add
test
loope
pop
mov
xorb
push
inc
dec
push
hlt
jmp
int
shlb
gs
mov
xor
xchg
or
xor
fadd
sub
mov
mov
add
pop
push
mov
aam
cmp
loope
xor
andl
xchg
hlt
rcrb
ljmp
pop
jae
fstl
or
pop
xchg
xchg
inc
xchg
sub
out
push
lods
clc
push
fwait
out
cmpsb
cmp
xor
push
cmp
jnp
in
adcb
bt
cwtl
addb
and
sbb
adc
adc
sbb
stos
or
cmp
xlat
rolb
loopne
pop
add
add
adc
inc
repnz
mov
cmpsb
jbe
or
add
mov
add
lret
push
push
loopne
or
or
or
pop
aaa
fidivrl
or
mov
loopne
mov
lods
fstpl
or
mov
pop
mov
fwait
test
adc
cmp
push
add
add
jl
pop
pop
fcompl
or
push
push
or
cmp
xor
fcmovnu
pushw
push
add
xchg
cld
in
adc
jnp
loopne
cmpsl
lods
in
add
push
or
stos
jecxz
pop
imul
jecxz
adc
add
push
das
mov
aaa
inc
fldl
jmp
mov
jae
dec
lock
jns
xlat
rorb
xlat
mov
int3
adc
or
out
add
or
or
movsb
sub
sub
fdivrp
cs
add
or
xor
js
add
or
xor
je
ret
or
xchg
testb
loopne
mov
cmpsl
or
fidivrl
adc
lods
shl
aam
out
fistpl
mov
or
hlt
mov
pop
sub
imul
mov
pop
pop
out
or
int
add
fneni(8087
inc
jnp
loopne
ja
xchg
lcall
push
lahf
sbb
loopne
stos
out
cmp
mov
pusha
loopne
inc
popa
xchg
stos
xor
orl
jbe
pop
push
sub
or
sbbl
pop
or
aaa
jp
inc
shll
shll
imul
sbb
adc
fs
testb
pop
pop
fcomp
mov
scas
sbb
add
mov
mov
mov
inc
add
push
sbb
ret
xchg
mov
pop
dec
pop
out
call
out
in
or
and
cmovno
imul
adc
nop
jno
sbb
sbb
sub
daa
sbb
cmp
cmp
loopne
cmp
inc
jnp
es
dec
adc
sub
into
pop
cmpsb
loop
mov
mov
sbb
cmp
loope
andl
xchg
mov
pop
jo
int
sub
ja
ret
in
rcrb
mov
dec
sbb
dec
out
loopne
imul
cld
imul
loopne
scas
sub
aas
aaa
add
loopne
mov
lcall
lock
jo
add
push
icebp
or
inc
rorl
addb
shlb
xchg
stos
jno
cs
or
cmpsb
jns
testb
stos
mov
stos
jo
or
out
ret
mov
mov
lret
cmpsb
bound
inc
mov
adc
or
xor
or
mov
add
mov
outsl
pushl
lock
stos
aaa
or
jo
dec
or
add
imul
stos
ja
xchg
sarb
or
push
fwait
sbb
cmpsl
fisubrs
cmpsb
jge
inc
jo
ret
or
daa
stos
out
inc
loopne
fstps
das
mov
inc
mov
and
jg
nop
fidivs
push
ds
sar
sbb
adc
xchg
add
imul
inc
sub
adc
xchg
test
jne
add
jecxz
xchg
aas
ljmp
iret
cmp
mov
out
hlt
push
and
mov
xor
cmp
cmpsb
out
inc
cld
lock
repz
aad
mov
mov
mov
add
jp
pop
lock
xchg
inc
push
aas
lods
sbb
sbb
adc
or
arpl
pop
sbb
pop
sbbl
push
xchg
mov
add
fsubp
jbe
or
jbe
adc
pop
mov
jo
and
mov
fisubl
mov
shlb
adc
mov
fs
push
icebp
push
in
test
xor
xor
cwtl
mov
and
icebp
pop
sti
lea
add
sbb
test
repz
inc
xchg
loopne
hlt
adc
mov
push
into
lods
fucomp
pop
xor
push
xor
shll
lock
testl
repnz
push
repnz
push
repnz
repnz
repnz
pop
repnz
mov
repnz
repnz
repnz
mov
pop
repnz
div
inc
repnz
divb
mov
inc
repnz
inc
repnz
inc
repnz
repnz
repnz
out
repnz
dec
repnz
repnz
repnz
dec
repnz
dec
repnz
repnz
repnz
cmpsl
xor
icebp
repnz
cmc
repnz
call
cld
int
cmp
jmp
aas
bnd
and
jecxz
fstl
fcompl
repnz
mov
repnz
sub
popf
out
mov
repnz
repnz
repnz
cmpsb
adc
lock
repnz
out
adc
repnz
sbb
ljmp
cld
repnz
loop
out
add
mov
add
mov
or
stos
or
pushf
repnz
sti
out
repnz
push
icebp
aad
test
xlat
icebp
ret
push
faddl
enter
icebp
repnz
icebp
ret
sbbb
ss
stc
outsb
icebp
sti
push
addr16
jg
icebp
rcll
adc
push
or
adc
ret
out
fcomi
cli
shl
ror
or
out
repnz
icebp
sahf
icebp
scas
mov
popa
ret
insl
lock
adc
movsl
mov
fldt
int
mov
loope
shl
xchg
inc
lock
mov
addr16
addr16
iret
js
loopne
shl
pop
mov
lahf
xchg
lock
xor
jo
test
or
lock
lock
mov
sub
and
lds
in
cmp
adc
cltd
adc
repnz
fcoml
pop
repz
ret
lock
lock
mov
mov
jp
add
adcb
lock
cwtl
adc
div
add
push
idiv
ret
push
idiv
push
div
ret
push
negl
push
testl
pop
notl
pop
notl
idiv
fwait
mov
negl
notl
ret
pop
notl
pop
notl
pop
divl
mov
testl
inc
notl
inc
notl
negl
inc
negl
inc
negl
inc
negl
negl
testl
stc
inc
ret
dec
testl
testl
testl
testl
aaa
ret
xor
xor
negl
xor
idivl
cmp
ds
cmp
cmp
mov
mull
aas
mull
ret
imull
cmp
imull
and
sub
and
adc
notl
ret
and
adc
notl
ret
es
outsl
incb
sbb
and
sbb
negl
ret
sub
sbb
out
sub
pop
ret
sub
push
das
negl
cs
sub
imull
decl
dec
mulb
cmc
xor
rclb
xor
shl
out
out
not
aaa
not
cmc
ss
xor
not
out
cmp
fcomi
cmp
fidivrl
neg
cmc
cmp
fdivrs
neg
cmc
ds
outsl
out
cmp
neg
and
ret
cmc
and
ret
shl
outsl
out
test
test
es
test
and
out
sub
lret
cmc
sub
lret
leave
cmc
adc
mov
divb
outsl
out
adc
mov
pop
divb
adc
mov
out
out
idivb
sbb
mov
pop
idivb
push
idivb
sbb
mov
add
mov
push
add
outsb
push
cmc
mov
cmc
mov
cmc
cs
movsl
push
cwtl
sub
push
cmc
movsb
je
out
cmc
stos
std
out
sub
test
negl
scas
pop
cmc
negl
sar
scas
jo
nop
cmc
lods
testl
cmc
icebp
testl
or
notl
inc
cmc
div
inc
cmc
cmc
int
inc
cmc
hlt
testl
testl
testl
decl
arpl
dec
cmc
std
dec
cmc
cld
divl
cmc
inc
mov
lock
xor
sub
cmc
mov
pop
jno
repnz
adc
cmc
cld
cmc
mov
xor
rol
jno
add
mov
cmp
lret
push
cmc
sub
data16
push
cmc
leave
cmc
enter
cmc
into
adc
int
and
int3
and
mov
and
mov
daa
cmc
in
mov
cmc
mov
and
roll
stc
fwait
mov
imull
cmc
les
cmc
mov
cs
mov
push
mov
xchg
push
shl
scas
mov
mov
jo
out
push
cmc
out
cmc
dec
sbb
cmc
loopne
cmc
out
test
fisttpl
cmc
ljmp
call
fwait
mov
cmc
out
sbb
in
testl
fmull
shll
shl
pop
cmc
roll
cmc
shl
add
adc
fisttps
cmc
fdiv
or
in
cmc
fcmovnbe
int
ss
ficoms
push
cmc
or
flds
outsl
idivb
jne
lock
hlt
jnp
push
hlt
jp
push
hlt
jns
push
hlt
pop
push
hlt
jg
pushl
out
hlt
jge
hlt
xchg
pop
hlt
jl
pop
hlt
jbe
pop
hlt
out
jg
jmp
inc
hlt
mov
hlt
pop
and
aas
inc
hlt
pop
lock
hlt
pop
lock
hlt
cmp
inc
out
cli
hlt
arpl
inc
hlt
test
ds
hlt
cmp
dec
hlt
inc
lock
hlt
cmp
lock
pushl
hlt
popa
lock
pusha
lock
hlt
addr16
lock
lock
fs
imul
hlt
push
cmp
imul
aas
hlt
outsl
lock
outsb
lock
hlt
insb
lock
push
lock
push
lock
das
shlb
les
hlt
push
lock
int3
and
add
and
push
lock
pop
lock
pop
lock
inc
lock
inc
lock
rolb
add
pop
hlt
inc
lock
hlt
ficoms
das
fcoml
inc
lock
dec
lock
dec
lock
hlt
sbb
pop
or
repnz
hlt
push
hlt
lock
incl
add
testb
xor
add
xor
repz
push
xor
pop
hlt
aaa
lock
hlt
ss
hlt
xor
or
cmp
or
cmp
push
sti
inc
rclb
fcomip
sti
call
push
push
sti
rcl
push
sti
rcl
push
sti
icebp
push
sti
push
rcrb
push
sar
lcall
push
rcrb
push
rcrb
push
rcrb
insl
rcrb
push
rcrb
rolb
pop
sar
decl
xchg
rorl
xchg
rorl
xchg
rorl
shll
sti
shll
sti
out
shll
sti
in
shll
sti
hlt
sar
cmp
iret
sarl
sti
mov
ds
daa
sarb
sti
xchg
shll
sti
jno
sub
jo
pushl
fcmovbe
cs
sub
sti
fcmovnbe
sbb
roll
sti
arpl
psubq
in
or
cli
rcl
adc
xor
adc
cli
xlat
adc
call
in
pushl
xlat
push
cli
stc
xlat
sbb
sbb
clc
xlat
sbb
jmp
sbb
jecxz
pop
ss
jg
lcall
cli
out
sbb
cli
dec
rolb
cli
dec
rolb
cli
mov
repz
dec
das
clc
mov
out
push
data16
add
cli
or
ficoms
lock
call
icebp
rcll
not
push
stc
not
push
stc
hlt
rcll
and
rcrl
stc
push
call
pop
stc
out
pop
stc
loopne
pop
stc
rcl
pop
stc
aad
pop
stc
roll
mov
jmp
rolb
movsl
rolb
movsb
rolb
stos
rolb
stos
rolb
rorb
sar
jg
decl
loope
dec
stc
fcmovbe
dec
stc
cmp
fnop
xor
test
aaa
stc
scas
shlb
stc
scas
shlb
stc
rcl
cmp
ds
inc
cmp
stc
pop
and
stc
jmp
and
ljmp
stc
out
shll
stc
in
shlb
stc
rcl
push
or
sub
pop
das
stc
xor
cs
inc
sub
stc
pop
adc
adc
lcall
adc
inc
pop
stc
dec
push
stc
push
adc
sti
call
pop
sbb
inc
sbb
dec
sbb
pop
stc
nop
aad
stc
xchg
aad
mov
xchg
aad
aam
push
roll
stc
rcl
repz
aam
incl
stc
in
push
stc
pushf
aad
stc
sahf
aad
stc
mov
or
mov
or
std
aad
stc
out
or
fbld
or
stc
lret
rorl
stc
jmp
clc
iret
add
cld
scas
pop
icebp
int
pop
clc
jle
clc
mov
clc
pop
add
clc
push
shll
clc
lcall
push
mov
clc
pusha
xor
clc
jmp
aas
clc
data16
clc
cmp
clc
sti
shlb
jo
clc
mov
push
rorl
clc
push
push
jmp
rcll
jmp
notb
jmp
notb
jmp
push
adc
and
pop
jmp
notb
jmp
notb
jmp
sbb
sub
sbb
sub
sbb
sub
push
sbb
sub
pop
ljmp
negb
ljmp
negb
ljmp
add
adc
add
adc
add
adc
push
repz
testb
pop
testb
push
testb
adc
or
sbb
or
sbb
or
sbb
push
push
repnz
push
icebp
std
push
lock
push
idiv
push
idiv
push
cmc
std
push
hlt
std
pop
sti
in
decl
std
pop
cli
std
pop
lock
clc
std
pop
std
pop
std
pop
add
lcall
pop
lock
jecxz
inc
loop
inc
loope
inc
loopne
inc
out
inc
out
inc
in
inc
in
dec
jmp
dec
ljmp
call
std
dec
hlt
out
std
dec
in
std
dec
in
std
xor
sar
xor
sar
xor
sar
xor
sar
aaa
lcall
std
ss
std
xor
aam
cmp
cmp
cmp
fscale
cmp
fdivr
aas
ds
fdivrp
cmp
fdivr
and
ret
std
and
ret
inc
std
and
sar
jmp
inc
std
es
std
and
inc
std
sub
lret
std
sub
lret
dec
std
sub
ljmp
int3
std
adc
mov
adc
mov
adc
mov
adc
mov
pop
mov
push
mov
adc
call
mov
sbb
mov
std
sbb
mov
std
pop
mov
std
add
mov
incl
mov
std
repz
mov
std
push
cmpsb
std
add
movsb
std
or
stos
std
decl
stos
std
push
std
ret
std
rol
std
rol
std
mov
push
std
vandps
lcall
lret
ret
lret
std
leave
ret
enter
iret
ret
into
ret
int
pop
std
int3
ret
incl
mov
inc
std
mov
inc
std
mov
inc
std
mov
inc
std
mov
inc
std
mov
inc
std
mov
inc
std
mov
decl
mov
ret
mov
ret
mov
ret
mov
ret
pushl
std
mov
ret
mov
ret
cmpsl
ret
cmpsb
ret
movsl
ret
movsb
ret
cmp
stos
ret
stos
ret
test
ret
scas
ret
scas
ret
lods
ret
lods
ret
jmp
std
xchg
ret
xchg
ret
xchg
ret
nop
ret
loop
loop
insb
ss
and
loop
loop
fwait
int
mov
sub
das
loop
loop
loop
mov
insb
ss
loop
loop
loop
ss
int
loop
loop
loop
loop
loop
data16
insb
loop
loop
loop
loop
lcall
sbb
ret
add
std
mov
add
mov
repz
icebp
std
jb
pop
std
ja
push
std
jne
add
std
jge
or
loop
add
lods
adc
or
loop
cs
cmpsl
std
jg
loopne
mov
mov
repnz
loopne
repnz
roll
push
sahf
out
sahf
push
push
push
push
push
push
jns
out
pop
pop
pop
pop
pop
cltd
adcb
out
sahf
out
cli
clc
lahf
out
sahf
loopne
call
cmp
repz
xlat
mov
iret
repz
aam
fcmovne
repz
cmpsb
shlb
mov
ficoml
out
jns
fcoms
fcompl
lock
sarl
jns
jnp
aas
bound
andl
out
sahf
out
andl
sahf
xlat
gs
fs
jns
out
aam
fldt
jns
out
imul
repz
cmp
fisubrs
iret
repz
cltd
pop
cwtl
pop
lahf
pop
ds
repz
pop
popf
pop
pushf
repnz
inc
push
xchg
inc
iret
repz
xchg
inc
nop
inc
xchg
inc
cmp
repz
inc
xchg
inc
xchg
lock
repz
fwait
dec
lcall
dec
xor
xor
jns
out
xchg
xchg
test
test
sahf
out
cmp
jns
out
cmp
jns
mov
sahf
out
and
jo
out
sahf
out
and
jne
out
sahf
es
push
adc
lahf
out
adc
push
repnz
cmp
repz
sbb
test
stc
js
pop
push
scas
xchg
push
scas
dec
lods
lods
sti
int3
incl
fwait
loopne
lret
push
cmc
adc
int
aaa
enter
lret
jp
cs
jmp
shrl
notl
into
insb
test
gs
leave
and
jmp
mov
sti
imul
jle
arpl
aam
xchg
push
add
test
and
dec
cmp
mov
cld
xlat
or
push
sub
sahf
cmp
pop
stos
call
mov
push
lods
mov
sub
lret
sub
out
xchg
je
enter
call
add
and
stos
and
mov
mov
ljmp
sarl
sti
out
pushl
push
inc
jg
sbb
sub
in
out
outsl
shlb
lock
lret
fcomp
movsl
inc
push
push
cmp
icebp
pushf
dec
cs
stos
lcall
fwait
mov
xchg
out
jg
decl
mov
arpl
jno
xor
cmp
jmp
roll
inc
ja
xchg
fs
jg
xchg
js
pop
cmp
lcall
pushl
add
inc
out
xchg
dec
ror
ret
mov
xchg
rorl
inc
mov
cmpsb
rcrl
loopne
cmpsl
rcll
mov
bound
lea
or
mov
dec
movsl
xchg
mov
mov
pusha
popa
push
mov
shrl
rcll
pushl
inc
adc
xchg
hlt
and
lock
clc
clc
xchg
rcrb
ja
jg
shrb
inc
push
rcrb
xchg
mov
std
shlb
daa
dec
or
stos
push
int
mov
jnp
xlat
ffreep
add
mov
sbb
arpl
ret
mov
call
jp
test
leave
xor
adc
das
pop
pop
movl
inc
out
icebp
int
sub
mov
in
xor
mov
jp
mov
ja
jg
inc
addr16
outsl
push
pop
movb
aaa
mov
ret
popa
sahf
pushf
hlt
xor
fwait
insl
sar
push
insl
pop
mov
cmp
jg
mov
mov
lds
lds
dec
or
incl
dec
outsb
dec
ret
inc
jmp
test
popf
fbstp
adc
xor
add
push
out
ret
movnti
add
sub
test
xor
jmp
cmc
loope,pt
mov
mov
sub
adc
lret
iret
mov
xchg
iret
sahf
iret
push
iret
xor
dec
sar
ljmp
orb
xor
mov
xchg
leave
push
iret
or
inc
int3
xor
sti
das
int3
push
int3
push
lret
int
push
jmp
cmp
adc
dec
fs
subb
and
and
and
add
lret
ret
stos
ret
jle
jg
rcll
xor
fiadds
insb
sub
and
nop
fldl
cmp
mov
aas
cld
inc
xchg
pushf
movb
je
jge
shr
mov
jae
aam
incl
imul
adc
pushf
test
ljmp
incl
outsb
pop
xor
cmp
in
cmp
lcall
xchg
mov
and
inc
pop
les
dec
les
les
gs
insb
lret
cs
aad
lcall
mov
lcall
mov
mov
jl
movsb
bswap
fcmovne
mov
adc
sbb
enter
enter
stos
jmp
xor
mov
jl
sbb
aaa
cwtl
jge
push
jmp
iret
pushl
iret
ds
test
into
in
into
fxch
lret
into
mov
mov
and
inc
jno
movsb
xlat
lock
stos
pushl
xchg
add
repz
sti
int
int
int
int
int
int
int
int
int
inc
lcall
jmp
shl
push
xchg
pop
push
in
jnp
cmpsl
lea
inc
rol
ja
js
push
push
or
int3
or
mov
lcall
loop
mov
mov
hlt
pushf
xchg
adc
sbb
pop
lret
std
leave
int3
leave
mov
xchg
leave
pushl
push
sahf
outsl
mov
xchg
test
mov
imul
test
into
pop
pop
imul
iret
adc
iret
ret
into
pop
into
xor
or
int
xchg
cs
clc
jmp
addr16
addr16
jae
pusha
mov
int
and
sub
aam
push
and
int3
push
int3
cmp
incl
shlb
ljmp
jnp
and
xchg
sbb
aaa
cpuid
fcmovnbe
rclb
filds
cld
adc
mov
inc
mov
sbb
cld
jecxz
loope
out
in
jmp
jmp
in
roll
loope
cld
fcmovnu
filds
clc
adc
cld
lret
iret
cmp
mov
popa
xchg
push
loope
inc
test
scas
inc
aas
mov
mov
jno
ja
jne
jnp
jns
jg
jle
jl
bound
gs
outsl
outsb
insl
insb
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
stos
lcall
pop
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
aaa
ss
cmp
cmp
aas
ds
and
es
sub
cs
adc
push
adc
lcall
sbb
sbb
push
sbb
repz
push
add
or
push
or
cmp
pusha
mov
ljmp
adc
mov
add
mov
mov
mov
movsl
movsb
add
xor
xor
add
or
add
add
add
add
add
add
or
xor
add
or
add
add
add
add
add
inc
add
out
push
push
cmp
or
lock
and
add
sub
fstpt
sti
adc
and
mov
sbb
and
xchg
xor
xchg
jo
addb
mov
or
clts
or
ret
ret
enter
push
rorl
pusha
fwait
jge
call
push
add
add
loope
push
and
pop
clc
in
jmp
fildl
mov
aas
add
adc
mov
rolb
and
xchg
rorb
or
xchg
lahf
in
aas
cli
fbstp
mov
mov
xchg
sbb
mov
xchg
sbb
ljmp
mov
xchg
sbbb
mov
adcb
sbbl
popa
jo
cmp
sbb
or
js
inc
invd
pop
mov
cmpsb
cltd
xchg
add
mov
fadd
ffree
add
mov
pop
and
mov
popf
push
mov
movl
popl
add
ret
add
inc
inc
jns
mov
icebp
incl
roll
ret
mov
add
ljmp
outsl
call
inc
sbb
adc
rclb
rolb
add
loop
addl
pop
xor
outsl
outsl
adc
and
ss
mov
push
imul
push
flds
push
xchg
mov
or
adc
sub
ret
push
mov
mov
push
lret
mov
xchg
pusha
add
pop
add
mov
xchg
adc
pusha
add
lock
outsb
movsl
loopne
dec
lcall
and
pop
lcall
fdivrl
bound
arpl
stos
add
and
fisttps
rcll
xchg
test
test
cmp
fdivr
call
xchg
add
xchg
and
test
xchg
fwait
orl
mov
dec
mov
loopne
pop
lock
xchg
add
or
loopne
lahf
and
popa
or
pusha
add
inc
icebp
es
add
in
jmp
loop
out
mov
ret
ret
rcrb
loop
loope
loope
cmp
mov
in
ret
add
cmp
mov
sbb
fwait
xchg
popf
xchg
inc
call
je
jnp
add
jns
jnp
jno
add
push
jns
jnp
push
add
bound
div
in
loop
jp
pop
or
fs
addb
decl
mov
add
stos
loopne
fxch
incb
call
in
icebp
std
add
add
xor
call
or
or
sbb
cmp
sbb
sbb
push
and
mov
push
push
pop
pop
dec
or
or
rolb
sub
aaa
dec
push
push
lcall
lret
mov
rcl
outsb
in
leave
fcomip
stc
fildl
shr
lret
frstpm(287
cmc
rcr
imul
or
jmp
cld
lcall
add
sbb
sbb
enter
nop
jg
mov
pop
add
xchg
push
push
or
or
pop
jne
mov
or
add
push
add
cli
fildll
es
adc
cmovl
add
pop
jo
inc
inc
inc
inc
pop
inc
test
aas
pop
fmul
fcmovbe
loop
int
fidivs
sub
xchg
clc
mov
sub
cmp
jnp
sub
jns
inc
imul
add
or
cmp
jle
ss
jbe
decl
sbb
mov
cltd
mov
mov
lcall
mov
scas
movsl
mov
add
mov
mov
lea
add
cwtl
popa
pop
and
xor
sub
jg
loop
xor
pop
add
pop
nop
adc
or
add
or
or
push
cmp
aas
clc
push
dec
pop
adc
xchg
cwtl
test
test
pusha
jg
decb
popa
sub
outsl
cmp
decl
nop
mov
repnz
fcmovnb
add
add
add
add
dec
pop
shlb
jge
jg
jp
scas
sar
jle
fs
addr16
dec
inc
jbe
jae
push
dec
dec
add
dec
icebp
push
das
in
push
or
pop
add
jo
xlat
roll
scas
mov
lcall
hlt
testl
test
loope
loopne
xchg
jecxz
add
es
fcompl
xchg
roll
sahf
test
xchg
xchg
cmp
pushf
mov
insb
mov
mov
add
dec
dec
inc
inc
inc
or
and
pop
lock
dec
data16
test
test
scas
adc
pop
mov
dec
out
ret
mov
mov
cwtl
fsubs
out
add
popa
push
pop
add
push
add
sti
decl
mov
adc
ja
aad
pusha
jmp
call
in
mov
jecxz
scas
icebp
ds
std
mov
or
pop
push
push
pop
pop
add
dec
pop
adc
dec
push
mov
dec
inc
inc
inc
add
jg
dec
inc
cwtl
inc
push
add
dec
js
cmp
addb
inc
ret
loop
mov
mov
loopne
cmpsl
in
ljmp
out
std
std
out
stc
mov
clc
es
das
rclb
add
adc
push
mov
sbb
fiadds
adc
or
and
outsb
sub
ljmp
hlt
jmp
and
sub
sub
test
mov
xchg
lock
clc
pop
sarb
xchg
andb
pop
add
fbstp
lsl
add
add
mov
add
scas
test
cmp
mov
mov
mov
rolb
das
jbe
out
sti
out
out
loop
cmc
icebp
clc
jmp
push
bound
arpl
pop
jb
imul
mov
dec
pusha
fs
insb
je
jns
jb
or
cld
fwait
mov
test
mov
mov
mov
sub
add
pop
dec
cmp
inc
incl
inc
add
xor
aaa
sbb
cmp
sub
aas
negb
dec
pop
je
inc
fcoms
sbb
push
jl
inc
push
push
dec
fs
scas
test
lods
scas
mov
movsl
testb
ja
es
add
testb
adc
xor
sti
clc
mov
test
clc
xchg
push
inc
imul
push
push
inc
push
push
bound
push
push
dec
pop
icebp
add
inc
add
push
add
mov
jno
dec
fs
es
js
imul
inc
mov
and
in
lods
jmp
cld
aam
sti
sbb
cli
pusha
das
fs
xor
lods
clc
pushl
and
and
add
cmp
sub
and
cmp
xor
mov
push
mov
add
adc
or
pop
cmp
std
decl
call
jecxz
cmc
stc
mov
jg
dec
popa
and
push
call
js
mov
or
push
adc
add
pop
cld
add
rcl
rcl
cwtl
aad
rcr
fcomp
push
pop
hlt
mov
add
mov
scas
test
mov
mov
fdivs
cwtl
in
lock
clc
out
in
lods
push
jmp
mov
das
ret
mov
mov
and
ljmp
addr16
gs
sub
js
out
call
nop
shll
mov
xor
adc
addb
pusha
push
loop
pop
jg
push
insb
jp
dec
loopne
inc
push
dec
arpl
pop
mov
dec
push
add
push
inc
jp
bound
push
push
gs
jno
jne
add
out
cld
cld
repnz
mov
xchg
ljmp
cld
ja
mov
test
mov
mov
cmp
aad
xchg
lods
adcl
dec
xchg
inc
cld
stos
mov
pushf
movsl
mov
fstl
inc
adc
stos
dec
push
inc
jno
inc
loope
add
fistps
or
jae
mov
adc
jl
fcmovnu
lock
lret
scas
mov
andl
fiaddl
jo
inc
push
adc
add
incl
dec
mov
stos
add
sub
cmp
sub
sub
add
push
adc
fwait
xchg
pop
xor
repz
push
sbbb
cmp
rolb
and
cmpsl
mov
adc
lahf
mov
sub
inc
xlat
incl
mov
add
lods
rcrb
lcall
cmc
out
bnd
mov
hlt
mov
mov
aaa
ljmp
and
into
fmul
xchg
int3
fisttps
adc
lods
ret
mov
loope
icebp
jbe
loop
add
add
test
push
shrl
sbb
js
insl
sbbb
aaa
cld
adc
xor
jae
je
je
dec
cs
inc
inc
jb
imul
aaa
cld
decl
push
or
jo
insb
imul
xchg
pop
cmc
jg
in
call
mov
or
mov
sbb
mov
add
cmp
cmp
inc
sub
add
pushl
data16
jg
insb
jl
jl
addr16
push
push
loop
dec
adc
aam
clc
push
dec
popa
pop
dec
pusha
insl
pop
pop
inc
inc
inc
loop
inc
push
push
fdivp
decl
inc
push
add
jge
pop
data16
add
ja
arpl
popf
adc
inc
jne
insb
push
ret
sbb
sub
push
pop
add
dec
inc
ja
stos
aam
pop
inc
dec
inc
or
dec
pop
inc
pop
mov
and
push
repz
mov
inc
popa
jle
mov
dec
xor
repz
add
lods
mov
test
sbb
xor
sub
xor
icebp
mov
std
int
cmp
add
add
or
sub
xor
das
pushl
mov
xor
cs
cmp
add
add
in
icebp
and
add
xchg
fwait
call
add
cmp
xor
xor
push
jbe
pop
add
sub
cli
addr16
add
adc
or
push
add
push
ljmp
mov
lcall
lret
xchg
test
add
popf
inc
xor
dec
rolb
or
pop
add
push
adc
pop
adc
pop
add
push
add
bound
pusha
outsb
insl
add
int3
enter
iret
out
clc
aad
stc
in
dec
out
fsubp
cld
out
loop
add
in
out
in
loope
loop
adc
xor
pop
cld
cmpsb
or
add
dec
dec
pop
dec
push
pop
push
and
inc
push
popa
inc
mov
sub
add
inc
ljmp
add
jle
add
stc
in
hlt
rcl
clc
mov
mov
arpl
es
and
fcomip
fbstp
dec
pop
inc
dec
push
push
jo
dec
pushf
pop
dec
dec
inc
inc
jg
dec
inc
inc
sbbb
xchg
lods
add
mov
add
outsb
jg
icebp
add
or
aaa
sub
aad
mov
pop
jo
mov
sbb
mov
jge
push
jg
mov
out
mov
add
adcb
xchg
lcall
sar
lods
shr
rol
fmuls
cld
lret
ret
adc
loop
xchg
loopne
add
cli
filds
sbb
inc
dec
cmp
and
pop
inc
or
movsb
icebp
idivb
ret
scas
cmpsl
push
hlt
std
iret
lods
cli
out
or
mov
loopne
push
inc
push
call
inc
adc
mov
andb
sub
and
push
pop
sbb
jp
add
or
cmp
xor
and
xor
pop
or
jl
sub
les
cmp
es
subb
ljmp
jmp
idivb
ret
out
rol
call
mov
push
push
jmp
loop
mov
push
push
dec
jge
int3
pop
add
sbb
add
clc
inc
inc
adc
mov
aaa
adc
cmp
push
dec
jno
pop
pop
repz
and
sub
sub
bound
jg
dec
add
das
fidivl
les
loopne
hlt
out
sti
scas
jecxz
mov
or
add
mov
lahf
rol
push
stc
add
scas
add
and
add
sub
cmp
fs
pop
outsl
mov
fdivrl
adcb
lcall
mov
mov
or
rcl
rol
loop
into
rorl
fnsave
gs
push
loopne
mov
xor
push
push
dec
insl
jno
and
imul
jo
jne
mov
mov
mov
ret
jg
mov
inc
adc
cmp
or
add
aas
daa
cmp
xor
jge
push
and
add
bound
cmp
ljmp
xor
adc
or
add
adc
xor
add
iret
lds
rol
aad
cmc
in
cmc
decl
fadd
xlat
out
add
rorl
mov
enter
add
lret
rcr
adc
das
rorb
int3
int
faddl
movl
arpl
cmpb
gs
inc
jns
jno
jbe
xchg
test
stos
mov
mov
mov
nop
lods
cmpsl
movsb
mov
mov
mov
sti
inc
cmp
cld
enter
out
jmp
cld
enter
fcom
fld
into
push
add
push
jp
pop
add
adc
pop
adc
add
inc
pop
sbb
inc
pop
insb
dec
sub
dec
arpl
push
cmp
outsl
inc
aas
outsb
stos
ss
out
jo
ja
push
and
hlt
add
stc
repnz
in
ficoms
stc
aam
mov
add
into
orl
scas
sar
out
cli
scas
mov
stos
scas
add
lahf
xchg
subb
cltd
decl
clc
fbld
add
mov
xchg
mov
mov
mov
sti
ljmp
cmpsl
mov
mov
cmpsb
sbbl
nop
inc
add
cmp
jecxz
adc
fisubl
aas
xor
jp
decl
fidivrl
cmp
mov
mov
mov
sbb
outsl
add
mov
add
jo
pop
in
jnp
pop
dec
inc
subb
adc
cli
sbbb
jl
jp
jl
fs
jno
js
jle
inc
or
add
insb
jb
jl
sub
gs
dec
add
aas
cs
nop
ffree
xchg
mov
dec
shlb
xchg
push
mov
or
add
and
pop
pop
pop
pop
addl
jns
clc
pushl
mov
dec
pop
jle
arpl
jge
imul
pusha
outsw
mov
jb
add
cmp
dec
imul
mov
push
inc
fimull
dec
pop
pop
inc
add
push
jp
dec
dec
cli
incl
repz
rcll
mov
add
mov
aam
inc
addr16
js
push
das
push
popa
jae
inc
js
outsb
push
ficompl
gs
push
push
dec
rorl
clc
ljmp
fs
outsb
pop
cmp
add
mov
push
scas
aam
mov
test
stos
mov
hlt
test
mov
scas
movsb
mov
fwait
mov
pop
rcr
test
mov
xor
and
adc
pop
divb
add
mov
aas
or
and
or
adc
daa
cmp
cmp
xor
data16
sbbb
icebp
add
and
shl
mov
inc
mov
jecxz
mov
fadds
imull
rcll
add
mov
lea
add
ror
ljmp
push
fwait
aam
rcll
sti
lahf
addb
jmp
add
movsb
test
mov
jg
adc
dec
bound
jns
add
jb
outsb
outsb
ja
cmp
ljmp
insb
insl
push
push
add
fs
pusha
insl
jne
xchg
push
inc
pop
pop
inc
sbb
loope
sbb
in
inc
push
jl
push
inc
dec
push
adc
cli
inc
jg
pop
inc
pop
dec
xor
loop
aas
aaa
xor
adc
pop
hlt
push
mov
adc
push
sub
sub
sub
jg
sub
and
adc
pop
dec
jle
add
mov
jo
pop
push
inc
mov
or
lcall
incl
sbb
push
std
std
cmc
into
std
mul
add
clc
mov
lock
out
add
loope
mov
push
aam
scas
cli
aaa
sbb
scas
xchg
rol
ret
jl
int3
fcmovne
hlt
mov
jecxz
clc
rclb
lock
and
into
into
xchg
mov
pop
mov
std
xchg
std
mov
out
std
inc
jle
mov
movsb
mov
and
xchg
xchg
addb
mov
cld
adc
mov
xchg
test
leave
mov
lcall
jbe
data16
sub
push
js
inc
add
jge
cs
ja
ret
or
jp
and
pushw
jg
pop
or
push
push
dec
pop
pop
add
pop
or
dec
push
add
dec
dec
dec
in
out
ret
sbb
jl
pop
cmpb
loope
mov
data16
shrb
movsl
xchg
xchg
clc
fwait
cmpl
pushl
in
adc
insb
in
and
gs
loopew
pusha
sbb
mov
xchg
insb
dec
pop
dec
dec
ljmp
lcall
xchg
xchg
mov
mov
push
add
fldl
jo
push
adc
fcomip
fbld
xchg
add
cmp
push
adc
inc
inc
dec
push
sub
shll
jns
jae
push
insb
cld
ja
pop
xor
push
je
push
pusha
outsl
jae
das
cli
int
movsl
cmpsb
test
xchg
test
lcall
outsl
in
inc
push
imul
pop
addr16
dec
pop
inc
pop
add
dec
pusha
or
mov
cmc
call
sbb
inc
add
cmp
mov
cmp
pusha
cmp
dec
push
dec
pop
dec
pop
or
incl
inc
inc
inc
inc
push
loopne
mov
add
add
lret
rol
int3
aad
xchg
sti
or
loope
neg
fld
add
faddp
lahf
icebp
flds
int
sbb
add
jo
xchg
mov
addl
mov
mov
and
addb
xlat
aaa
push
inc
ja
jns
xorb
jl
je
pusha
ljmp
out
add
add
iret
int
cld
mov
mov
incl
mov
or
imul
jmp
incl
loope
sbb
cmp
sub
add
cmp
cmp
cmp
xor
rol
xlat
rorb
add
mov
adc
lods
fadd
ret
ja
jl
inc
add
push
push
add
into
sub
jg
sbb
sbb
add
sbb
push
adc
pop
push
lods
mov
enter
cwtl
cwtl
mov
dec
or
fisttps
popf
xchg
pop
movsl
adc
lret
xlat
sarl
lods
mov
mov
movsb
jnp
push
cli
in
mov
pusha
sbb
push
sbb
jb
push
cld
sbb
jne
js
int3
cmp
cmp
je
pop
hlt
outsl
filds
jae
jnp
and
mov
nop
nop
loope
dec
imul
dec
decl
lds
fdivl
bound
cmp
arpl
xor
jge
outsl
call
sbb
cs
sub
add
out
imulb
ljmp
scas
clc
cltd
push
jno
adc
sbb
jns
lds
pushl
rcl
lret
mov
aas
xor
std
push
call
shl
sub
idivb
add
pusha
ficompl
stc
add
out
cmpsb
sbb
jmp
xchg
adc
ljmp
int
mov
fiadds
cli
loope
and
sub
cmp
add
pop
fcomip
sbb
add
int3
jno
jge
pusha
or
mov
jo
pop
mov
jg
movsl
mov
add
xchg
mov
jle
rolb
inc
push
sbb
adc
jb
cmpsl
fistpl
pushf
add
notl
out
cwtl
pop
push
push
loope
xor
out
add
cmc
add
adc
stos
fimuls
xorb
pusha
or
xchg
pop
pop
dec
push
dec
and
add
inc
push
inc
pusha
jb
jns
xor
pop
mov
mov
add
ror
mov
add
movsb
or
jge
pop
add
fildll
mov
aam
jecxz
scas
test
xchg
add
fstpt
sti
add
in
in
mov
mov
mov
sub
movsb
test
les
add
dec
push
push
push
push
push
or
ret
mov
dec
pop
pop
dec
inc
pop
xchg
dec
push
pop
inc
inc
sbb
lret
ljmp
adc
push
dec
add
bound
imul
jae
and
imul
mov
stos
daa
mov
dec
subb
xlat
xlat
shll
test
xlat
stos
and
pop
inc
push
test
loopne
mov
addl
add
cwtl
lock
add
mov
mov
fimull
push
add
add
add
mov
add
call
mov
repz
xchg
cmpsb
or
rolb
mov
inc
mov
sti
lahf
push
add
mov
nop
inc
sub
push
mov
adc
mov
inc
adc
sahf
movsb
add
add
fwait
jge
pushf
push
sahf
mov
add
add
out
clc
incl
nop
push
andb
add
jb
pusha
les
lret
popa
add
data16
xor
mov
fcomps
pop
stos
fwait
pop
xchg
xchg
jmp
mov
xchg
xchg
xchg
adcl
lcall
xchg
addl
xchg
outsl
xchg
pop
xchg
mov
popa
hlt
xor
inc
add
mov
dec
xchg
pushf
sbbl
sub
mov
mov
mov
or
andl
mov
xchg
popf
xchg
lahf
pop
dec
fisttps
xchg
adc
pop
xchg
ljmp
incl
add
leave
push
cmpsb
mov
mov
mov
jg
pop
add
jo
mov
mov
mov
mov
incl
mov
mov
mov
mov
inc
fs
movsl
mov
mov
pop
sub
pop
adcl
pusha
out
mov
cmc
mov
xor
dec
mov
add
movsl
cwtl
add
pop
dec
popa
jg
mov
add
push
shll
mov
lcall
mov
mov
cmpsl
mov
pop
fdivl
mov
add
test
nop
pushf
adc
adc
push
pop
ficomps
incb
sub
or
xchg
enter
xchg
cmp
lock
xchg
push
fisubrs
nop
adc
adcl
enter
pushl
cwtl
pusha
cwtl
xchg
enter
ficoms
lock
and
pop
mov
mov
scas
and
repnz
cli
shl
jg
sahf
xor
xor
xor
shlb
xchg
xchg
ljmp
or
pop
mov
test
js
rcll
nop
xchg
repnz
xchg
mov
inc
mov
loop
popa
push
mov
xchg
mov
inc
xorl
repnz
mov
sub
xor
mov
xor
inc
outsl
sub
adc
sub
push
push
mov
dec
mov
enter
int3
or
pop
push
subb
sub
aaa
icebp
or
push
orl
nop
sbbl
popf
xchg
lods
enter
xchg
adc
sbb
decb
sub
push
jg
mov
shrb
xchg
jne
xchg
add
add
mov
xchg
sbbl
mov
mov
jl
mov
lcall
mov
sub
xchg
scas
add
mov
lcall
fwait
pop
hlt
inc
adc
push
pusha
test
xchg
inc
add
xchg
sahf
bound
inc
sbb
test
mov
cs
inc
mov
lods
jg
cmp
mov
mov
xor
push
jno
lods
mov
inc
sti
jmp
sub
jo
mov
movsb
clc
mov
mov
push
lock
lock
test
jno
lcall
pushl
sbb
idivl
add
jb
cmpsb
sub
mov
ja
decl
pop
sub
stc
cs
jbe
jne
and
jno
mov
stos
ss
stc
add
add
add
call
mov
data16
repz
stos
cld
add
cwtl
nop
pop
adcl
xchg
jo
sbb
push
jno
lahf
jbe
adc
ljmp
inc
roll
push
xor
mov
loopne
ret
or
test
xor
dec
mov
lcall
mov
jg
scas
add
mov
or
adc
mov
leave
xchg
data16
out
rcl
addb
lcall
loop
xchg
pushf
xchg
inc
pop
mov
cld
jg
or
pushf
rcrl
andb
mov
add
pushl
js
or
nop
xorl
shrl
ret
repnz
jo
jle
cmpsb
cltd
or
fs
sbb
jbe
xchg
inc
enter
sbb
push
ja
in
mov
cld
xchg
dec
or
or
mov
pusha
dec
movb
mov
icebp
ljmp
loopne
cmp
dec
icebp
pusha
cmp
sbb
sbb
dec
inc
add
xor
clc
sbb
sbb
add
clc
scas
xor
loopne
adc
pop
jb
pop
divl
cmp
fcomip
pushl
jp
or
xor
xlat
fisubl
mov
fistpll
loopne
sar
rorl
outsb
add
inc
test
inc
xor
mov
dec
ret
push
pop
jg
pop
push
sarb
ja
repnz
push
xor
sbb
ds
insl
lock
loopne
add
and
pop
scas
ltr
das
and
mov
add
dec
pop
xchg
shl
fdivl
sbb
or
ds
cmp
push
test
cwtl
outsb
pop
cld
jle
leave
add
sarb
or
inc
sub
adc
jbe
push
lea
subb
mov
push
xor
cmp
rol
andb
lods
ret
cmp
pop
inc
pop
test
cld
into
mov
xchg
mov
loopne
xor
js
sbb
icebp
rolb
add
jns
pop
add
js
adc
test
hlt
xor
loope
rcr
xor
xor
xchg
dec
mov
ret
pop
subb
jl
imul
bound
daa
loop
dec
xor
add
adc
inc
imul
jnp
subb
pop
orb
jle
mov
psrad
adcl
add
mov
sub
loop
sbb
subb
rcll
cmc
das
out
push
out
jae
testb
inc
repnz
andl
andb
add
and
sbb
clc
xchg
dec
xor
mov
jle
inc
rcrl
dec
popa
js
sbb
cmp
or
mov
jg
lahf
cwtl
xacquire
xchg
xor
xchg
subb
pushf
xor
stos
xchg
jp
hlt
sbb
jl
jle
xchg
xchg
jo
mov
mov
fistl
movsb
test
lock
pushl
test
orb
mov
in
outsb
add
cmpsb
cld
add
movsb
movsl
or
push
pop
xorb
xor
rcll
stos
adc
xor
add
sbb
mov
cs
sbb
push
push
sbb
add
decl
testl
test
sub
sti
adcl
cmp
add
jo
js
inc
inc
or
movb
mov
push
push
jbe
cld
mov
mov
sbb
inc
add
adc
jecxz
and
inc
dec
mov
xchg
rorb
outsb
mov
or
hlt
or
shlb
inc
jmp
out
add
rolb
cld
sub
inc
push
sbb
addb
adc
xor
jne
out
jo
pushl
inc
or
fdivr
pushl
outsb
sbbl
sbb
jp
cmovno
or
les
outsb
and
enter
or
int3
mov
fistps
xchg
sbb
in
add
pop
rolb
inc
sbb
add
sti
hlt
scas
mov
sti
add
lock
inc
mov
adc
sbb
pop
mov
mov
xlat
jmp
xchg
add
jmp
add
aaa
or
jl
inc
les
or
sub
or
mov
sub
add
add
mov
jg
loop
mov
mov
mov
jl
mov
pavgb
out
mov
and
dec
add
or
bound
xchg
inc
and
jo
or
ljmp
ror
inc
pushl
testl
adc
fwait
inc
sub
sbb
cmpsb
push
gs
das
aad
bswap
jecxz
pmulhuw
fists
fdivr
mov
ljmp
xor
shl
out
inc
adc
ljmp
push
fildl
jecxz
add
inc
xadd
pop
icebp
mov
popa
xor
xor
and
push
or
pop
and
ja
out
sbbb
ljmp
out
outsl
push
jl
divl
sbb
inc
pop
cmc
pop
std
mov
negl
mov
daa
aas
mov
xlat
nop
call
loope
and
add
pusha
pop
ret
inc
lea
pushf
dec
movsl
xor
mov
xor
jo
sbb
adc
das
mov
xor
inc
add
jae
add
notb
push
enter
fildl
into
movsb
aaa
stos
xchg
sbbb
addb
cltd
test
mov
fwait
inc
je
sbb
sub
adc
stos
sbb
sub
ljmp
push
cmc
rolb
xor
jmp
mov
fwait
jae
rorb
lock
mov
outsl
mov
js
inc
subb
add
cmpb
sub
and
inc
push
pusha
add
das
js
add
and
pop
and
loopne
sbb
loope
mov
adc
sti
or
js
sbb
and
xchg
decl
adc
mov
je
or
int
roll
mov
repnz
popa
push
sti
sti
jb
int
adc
jmp
add
mov
and
add
lds
or
fidivs
xchg
mov
sbb
mov
mov
or
mov
mov
testl
ja
inc
pop
loopne
subl
mov
and
adc
push
or
pop
dec
or
mov
or
fsubrs
mov
adc
decl
test
aam
insb
sbb
or
push
pusha
ja
add
inc
test
cmc
add
and
cmp
call
xlat
lock
in
cmpb
push
or
xor
fbstp
dec
pusha
and
add
push
inc
add
movsl
pusha
sbb
addb
test
roll
fidivrl
mov
mov
sbb
lahf
push
rorl
rorb
or
test
sbb
inc
sti
mov
in
pop
mov
add
lock
sbb
sbb
jno
pop
add
mov
adc
rorb
inc
dec
mov
call
mov
add
mov
add
repz
popa
add
pusha
sar
mov
add
sbbb
bound
out
pusha
adc
adc
xor
cli
fwait
adc
adc
adc
mov
movsl
loopne
lcall
divb
xor
mov
inc
add
and
lds
and
das
clc
fwait
repnz
adc
sub
jne
sbb
out
sbb
dec
push
lock
mov
movsb
add
inc
jmp
mov
scas
mov
test
xchg
jnp
iret
fisubl
incl
shrb
push
xchg
sbb
push
pusha
or
sub
nop
xor
adc
cwtl
aaa
mov
mov
mov
add
sub
or
dec
pop
add
inc
sbb
sub
js
push
mov
jp
sarl
push
sub
mov
and
adc
push
xor
mov
mov
pushl
inc
add
lret
dec
cmp
push
shlb
fwait
incl
dec
pop
pop
lock
aaa
push
add
mov
aam
aad
cld
ja
jo
pop
xor
mov
dec
xor
and
add
adc
push
je
clc
ret
push
pop
push
dec
jge
add
add
push
and
sti
adc
xchg
test
add
xchg
push
xchg
in
call
cmp
dec
add
jno
loopne
jecxz
or
mov
pushl
add
xchg
add
testb
inc
repnz
fdivrp
add
xor
add
xor
add
or
or
jno
fwait
dec
cmpsl
cli
and
inc
push
js
rolb
lock
popa
aas
inc
mov
and
cld
dec
ja
push
add
fwait
lock
int3
inc
pusha
add
nop
push
or
add
mov
out
jle
jecxz
sti
sarb
adc
sbb
add
adc
push
cld
jmp
push
add
push
pop
cmp
inc
and
mov
bound
mov
lret
xchg
nop
dec
loope
mov
add
nop
add
js
mov
clc
and
pop
mov
mov
clc
ret
shl
jo
push
xor
adc
mov
je
cmp
jp
or
add
rcrb
ret
sub
scas
movsb
pusha
and
into
or
add
loope
dec
and
add
mov
pusha
or
and
shlb
jle
sbb
push
or
sub
mov
call
pop
mov
inc
and
xorb
sti
ja
mov
inc
or
lock
pusha
sub
inc
rolb
jle
and
les
shlb
repnz
inc
mov
fwait
pop
jb
add
push
das
mov
fsub
loope
inc
shll
rcll
mov
dec
lret
cmc
and
in
ljmp
rolb
fs
xor
mov
fistpll
jno
mov
lcall
inc
push
dec
js
pusha
js
jle
mov
push
test
push
add
adc
lcall
js
mov
lods
inc
bnd
jb
jo
movsl
icebp
adc
das
jp
inc
push
and
nop
add
xor
xchg
outsl
mov
push
rorl
test
xchg
jo
mov
scas
xchg
push
adc
sub
mov
sti
movsl
add
loopne
cld
cmp
negb
sbb
lret
pop
test
xchg
hlt
or
scas
sbb
sbb
shrb
jecxz
icebp
sbb
test
and
add
inc
xor
jo
iret
loopne
pop
mov
sbbb
sti
js
test
add
sbb
rol
mov
sbb
icebp
adc
inc
jle
mov
mov
or
mov
jo
xor
call
mov
cltd
lret
ret
jae
not
cmc
rorl
loopne
xor
outsb
mov
sti
mov
add
test
xorb
inc
fldt
shrb
dec
stos
addb
ss
ja
sub
add
sbb
std
jo
xlat
hlt
aaa
std
mov
xor
rcrl
rcrb
inc
push
hlt
ljmp
or
outsb
testl
js
arpl
bound
jg
inc
mov
js
add
mov
xor
lea
or
add
xchg
add
xor
das
pop
jecxz
xor
maskmovq
notl
call
stos
push
movsb
bound
loope
lret
inc
rcll
idivl
sbb
loopne
xor
clc
add
scas
mov
adc
sub
pop
fnstsw
mov
lret
test
inc
sbb
inc
inc
out
shlb
adc
xor
sbb
mov
retw
mov
push
inc
inc
xor
repnz
js
sti
jle
or
mov
sbb
inc
add
jb
out
xor
jecxz
dec
mov
xchg
cmp
nop
push
ret
cpuid
movsb
xchg
pandn
or
ss
repnz
mov
cld
aaa
mov
hlt
mov
ret
nop
mov
sar
sbb
lock
aaa
movsb
shlb
pop
shrl
cld
sarb
mov
push
testl
incl
insl
rolb
mov
xor
jno
in
js
mov
mov
jbe
cmp
mov
roll
pushl
fcmovne
or
addl
cmpsb
js
lahf
xlat
lcall
push
mov
gs
ja
enter
addb
add
inc
in
xchg
fs
mov
add
or
dec
inc
add
mov
sbb
js
ds
cld
pushl
add
icebp
add
jp
adc
lods
and
adc
jo
out
add
into
push
xchg
lods
dec
lods
pusha
test
jg
pop
out
jmp
roll
push
xlat
js
lods
lods
scas
sbb
push
loop
ficoml
movsb
or
xchg
sbb
jecxz
adc
sbb
inc
aam
fdivs
mov
test
rorb
push
out
jo
repnz
fimuls
mov
adc
push
cmp
lock
cld
or
loop
jo
scas
mov
fstpt
push
or
std
add
into
pop
xor
inc
cmpsb
or
fs
adc
std
pop
call
jp
incl
pop
lods
lods
add
or
mov
push
dec
or
mov
xor
iret
rcrb
ja
je
test
inc
push
in
rclb
inc
mov
les
mov
rorl
fimuls
popf
mov
icebp
rolb
push
rcrl
or
add
sarb
pop
add
clc
je
mov
fdivs
xchg
mov
inc
pop
lock
push
sbb
adc
sub
adc
adc
xor
add
scas
sti
imull
xchg
sti
sti
dec
cli
ja
add
or
add
lods
ja
test
jo
jecxz
int3
mov
clc
pushf
pop
and
add
jmp
push
mov
mov
add
xchg
sbb
push
hlt
fwait
aas
sbb
cmp
andb
xor
lret
bound
mov
fwait
repnz
scas
das
clc
orl
cmp
test
enter
testb
add
sub
pop
sbb
sbbb
sub
jle
pop
add
mov
or
arpl
mov
js
or
aas
cwtl
movsb
sbbb
stos
out
clc
aaa
push
or
or
js
enter
clc
jg
incl
add
enter
cmp
movsl
xor
std
sbb
mov
fwait
xor
lds
sub
stc
and
sbb
std
and
sar
outsl
scas
adc
nop
in
movsl
bound
mov
add
call
add
orl
test
inc
ja
mov
outsb
mov
cltd
fiaddl
pop
icebp
sub
push
mov
negb
movsb
fbstp
jbe
cli
sbb
adc
in
ret
inc
popa
clc
out
inc
add
or
scas
stos
push
mov
call
fdivp
icebp
nop
or
jle,pt
jnp
pop
push
outsb
fistpll
pop
sbbl
or
xor
jge
jp
lahf
ret
lcall
icebp
sub
sti
in
outsl
pop
adc
movsb
es
scas
idiv
repnz
add
ret
jno
lcall
adc
xchg
xchg
xor
mov
sarb
mov
out
into
jle
sub
fcoms
pop
inc
add
mov
movsl
pop
add
fs
mov
sti
mov
jp
cmp
dec
aaa
stos
add
testb
mov
pop
adc
jg
stos
or
or
rorb
adc
jp
js
xor
rcrb
lahf
jle
xchg
adc
or
shlb
in
mov
sbbl
sbb
in
adc
xchg
pop
push
or
loopne
mov
xchg
add
or
mov
mov
repz
aam
imul
mov
or
push
adcb
mov
movsb
addb
es
xchg
imul
movb
pop
test
fcmovnu
pop
loopne
mov
add
add
jp
sbbl
rolb
rorl
push
shlb
adc
lods
adc
scas
shrl
adc
orb
pop
js
inc
ss
xor
pop
sbb
add
push
mov
mov
or
add
adc
add
pop
nop
into
push
jle
mov
js
dec
enter
mov
dec
mov
ret
adc
mov
adc
and
ret
mov
jo
pop
mov
rolb
xchg
aas
jo
mov
aas
add
rolb
movsl
pusha
pop
mov
pop
cmp
dec
pop
push
sbb
mov
or
pop
ficoml
js
scas
idiv
and
add
xchg
rolb
xchg
movsb
push
ljmp
and
inc
rcll
mov
and
or
jbe
mov
in
fistpll
pop
test
loop
inc
cmp
inc
add
add
mov
orl
cld
jne
sub
push
sti
lret
pop
xchg
insb
jnp
mov
xchg
adc
xchg
pop
ja
addl
push
adc
mov
mov
int3
loopne
fs
or
jnp
xchg
jl
or
lcall
imul
mov
sbb
cli
bound
and
jmp
add
inc
fs
adc
jmp
stc
inc
sub
mov
lock
xchg
movsb
pusha
sub
push
dec
add
mov
push
fadds
add
out
jo
jg
or
mov
ds
cld
jno
lds
sbb
dec
sub
stos
cmpsb
stos
jl
mov
test
and
pusha
insl
inc
mov
xchg
sti
and
pop
mov
push
inc
fiaddl
adc
subl
mov
sti
mov
sbb
andl
clc
lods
loopne
andb
loopne
jle
mull
lock
cltd
inc
push
pop
cmc
divb
mov
mov
clc
rorb
aaa
cs
add
add
or
pop
jp
cmc
cmp
test
cmp
adc
or
movl
jle
lcall
out
jbe
cmpb
sbb
sbb
push
inc
jecxz
in
out
xchg
insl
dec
lret
push
sub
inc
sarb
xlat
mov
dec
cli
ret
loopne
arpl
sarl
mov
inc
add
cmp
aaa
ljmp
cmpsl
push
jbe
xlat
cmpsl
sbb
pop
hlt
lcall
add
or
xlat
iret
in
sbb
cmp
push
pop
mov
add
mov
loope
mov
jmp
jp
inc
add
adc
jp
sub
and
scas
xor
and
cmp
xchg
adc
test
sbb
add
rcrb
adc
sahf
push
inc
cld
inc
dec
mov
pop
pop
dec
sbb
mov
jne
mov
push
and
repnz
ss
cli
jl
sbbb
filds
lret
pop
inc
cld
mov
mull
call
ja
das
push
sti
or
jecxz
out
pop
movb
scas
sbb
adcl
mov
jb
incl
pusha
xor
fldt
movsb
mov
repnz
aas
and
adc
pusha
or
or
push
mov
push
cmc
lods
ljmp
fwait
adc
addb
rcr
aaa
insb
sti
shlb
cmp
pop
sub
jmp
push
jp
cld
nop
add
inc
jg
scas
sbb
js
pop
and
or
sbb
pop
jbe
push
loopne
js
faddl
enter
pop
loopne
stc
rclb
jns
adc
push
sbb
rcrl
loopne
inc
and
xor
mov
jle
rcrl
or
cmpb
les
mov
mov
das
sub
andb
jg
dec
pop
call
lret
mov
fstpt
out
xchg
mov
lret
xchg
pusha
mov
jp
sbb
jo
lock
xor
inc
lea
decl
ds
and
es
icebp
movsl
popa
lock
jg
or
xlat
and
pusha
and
sub
shrb
movsl
adc
in
or
or
or
add
inc
jg
add
adc
sbb
xlat
loopne
bound
rorl
add
inc
add
fbld
fistps
js
cltd
repnz
push
nop
or
sub
mov
stos
push
shlb
lock
lret
rcll
mov
dec
and
jno
sbb
data16
cltd
shlb
mov
add
dec
or
xchg
add
xchg
sbb
pop
jle
push
lock
cli
add
adc
sub
mov
and
loopne
roll
push
pushf
pop
out
loopne
xor
add
add
xor
add
mov
mov
and
xchg
js
push
add
stos
jmp
mov
pushl
xor
add
jmp
push
adc
cmpsl
icebp
mov
fcmovnbe
inc
enter
jp
jmp
sbb
xor
add
dec
mov
lret
test
mov
loope
mov
scas
jo
dec
adc
sbb
xchg
pop
in
lret
cld
mov
mov
add
loope
xchg
jbe
dec
pop
movsb
jno
sbb
adc
les
inc
add
xor
xchg
jo
fcomip
mov
bound
adc
push
out
push
and
cmp
mov
xchg
lock
jg
or
adc
xchg
push
add
mov
insl
xchg
addl
xchg
xlat
inc
fwait
pop
fisttpll
adc
jnp
cli
scas
out
clc
pop
sbb
daa
jecxz,pt
cltd
mov
sbb
rcll
inc
test
outsl
in
xor
rcrb
sahf
jbe
incl
inc
and
out
jo
testl
fwait
add
movsb
shlb
pop
mov
sbb
or
test
out
or
mov
cmpsb
push
cs
jle
mov
mov
sub
movsl
push
adc
jle
adc
mov
adc
add
mov
xor
push
sbb
inc
add
ficoms
xor
push
seto
jo
and
xorb
fbld
out
mov
test
jae
mov
mov
testl
jle
test
fists
jno
incb
pop
mov
jle
or
or
daa
std
pop
xchg
cld
add
cmp
fistpl
outsl
fistpll
pusha
or
adc
lock
xor
iret
xchg
outsl
das
les
lds
fists
sbb
leave
xchg
add
inc
sbb
jmp
dec
push
mov
xchg
lock
inc
or
adc
nop
add
sbb
mov
fwait
pop
icebp
jnp
and
out
push
push
pop
push
push
pop
or
outsl
cli
js
out
dec
cld
and
push
cmp
or
pop
fs
mov
xchg
mov
popa
popa
ds
sbb
mov
cltd
fsubr
adc
cmc
aad
decb
sbb
pop
icebp
sbb
push
push
sub
je
loop
mov
xlat
outsb
mov
push
mov
jo
sar
mov
mov
jo
mov
bound
pop
fisubl
lds
jo,pn
je
lahf
repnz
fadds
adc
jg
fwait
cld
push
stos
add
push
filds
xor
aad
das
add
xchg
inc
es
add
mov
movsl
push
jle
xlat
fldt
cmp
decl
mov
push
push
ds
sub
stos
mov
mov
or
nop
add
or
add
shll
push
add
adc
into
lock
sbb
add
cmp
aam
lret
fdivs
xchg
pop
xchg
movsl
js
xchg
xor
xchg
hlt
fildll
push
ret
jecxz
mov
out
adc
or
push
and
sub
sbb
sbbb
cmc
push
jmp
add
cmc
xchg
sbb
out
ret
adc
cmc
jecxz
add
mov
cld
jg
andl
js
xlat
jae
or
sbb
cli
fbld
jb
and
xchg
pusha
add
sbb
mov
ljmp
testb
add
sub
jae
mov
fisttps
mov
cmp
lods
jecxz
jne
pop
hlt
or
test
xor
shl
adc
pop
ds
outsl
ljmp
sarb
mov
push
inc
and
jecxz
js
nop
fst
xchg
scas
fidivrl
cmp
xchg
xchg
or
sbb
bound
sbb
fwait
jge
pusha
sub
sbb
add
jle
fdivp
ljmp
jo
sbb
pusha
dec
movsb
scas
or
lret
std
fwait
lock
outsl
add
or
or
or
or
add
outsl
fistpll
pop
fiadds
xchg
in
outsl
ret
in
or
rcll
mov
sti
sbb
loopne
jecxz
jge
add
pop
lock
xchg
and
ret
mov
jbe
jecxz
sbb
jmp
js
push
adc
jae
decl
int3
add
push
cwtl
or
or
push
out
inc
add
inc
push
jl
rorb
mov
cmp
icebp
mov
add
out
xor
insb
lods
or
rclb
out
xchg
push
dec
xchg
stos
push
test
lock
adc
cmp
xchg
out
sti
in
add
cmp
popa
sub
mov
mov
mov
rorl
add
xor
roll
pop
or
add
add
xchg
int3
jp
fsubrs
push
mov
add
xor
or
or
xchg
push
add
sbb
mov
movsb
mov
add
cmpb
add
adc
lar
add
negb
dec
sbb
icebp
or
adc
xor
xor
add
fildl
fiaddl
lret
add
shrb
out
adc
test
mov
jge
mov
add
mov
inc
fwait
sub
in
adc
sbb
dec
pusha
sar
movsb
xchg
ficoml
js
out
pop
call
shr
js
lcall
call
andb
test
inc
bound
shr
pop
test
add
lods
flds
ljmp
add
icebp
cmpb
sub
outsl
fistl
sbb
movsl
mov
fidivs
sub
dec
mov
in
add
mulb
bound
lods
add
js
jecxz
out
push
loop
push
cmc
js
xlat
adcb
sub
incb
push
sbb
inc
adc
add
daa
rclb
stos
add
add
bound
mov
mov
testl
in
mov
inc
or
or
pop
and
rsm
add
rcrb
insb
inc
xchg
add
add
mov
xchg
pop
sar
or
data16
jbe
cmp
push
je
insb
bnd
push
rcll
hlt
add
jne
or
or
aaa
inc
icebp
out
xor
xor
mov
or
jecxz
pop
jg
mov
aas
inc
cld
mov
add
or
in
xor
lock
jmp
xor
xor
dec
pop
add
cli
xchg
idiv
loope
cmpsl
negl
pop
ret
sar
xchg
push
cmp
adc
add
add
movl
movsb
stos
in
mov
lods
xor
out
call
repz
stos
cld
pop
or
inc
test
shrl
push
cmc
incl
call
cmc
jnp
adc
add
inc
jo
pushl
sub
xor
addl
fiaddl
dec
loop
cld
rcrb
inc
cmp
adc
mov
lock
js
xor
rol
sbb
sar
out
add
fadds
jns
cmc
jns
das
fsubrs
leave
cmp
loop
sbbl
add
fcomip
cld
inc
xor
xor
cmp
and
sti
and
inc
imul
sti
add
loopne
sub
fsubrs
and
loop
xor
push
in
jno
andl
push
jb
addb
sub
mov
push
and
lods
inc
inc
cmp
js
inc
and
loopne
jb
shrb
or
scas
pop
sbb
mov
ljmp
cmp
and
mov
add
add
dec
mov
mov
jne
cmc
lcall
cmpsl
repnz
inc
or
or
inc
mov
call
loopne
cltd
hlt
jle
adc
mov
clc
push
or
jmp
push
inc
xchg
outsb
pushf
inc
xchg
mov
cmp
icebp
dec
push
pop
js
or
mov
lock
lcall
mov
icebp
or
add
cltd
loopne
cld
ja
inc
pop
and
inc
adc
mov
push
sbb
pop
mov
adc
sub
mov
add
mov
mov
adc
xchg
xor
cli
jb
bndstx
sbb
or
scas
sub
std
mov
add
and
rclb
lret
xchg
jnp
clc
rolb
fwait
push
fistl
pop
push
add
sbb
out
mov
hlt
xchg
loopne
jns
sbb
cs
cs
and
divb
call
add
xor
and
js
and
adcb
out
stos
cmc
lds
add
loope
add
inc
sbb
xchg
push
stos
mov
sub
and
sbb
push
and
mov
mov
sbbb
outsl
mov
loop
clc
xchg
out
push
push
inc
add
add
pusha
jg
or
mov
sub
test
and
or
mov
or
mov
or
xor
pop
popf
enter
cmc
incl
or
xchg
add
push
test
sbb
rolb
test
sbb
mov
dec
test
ja
mov
cmp
mov
lret
jbe
add
add
enter
cld
xchg
and
mov
and
mov
dec
jb
jp
pusha
push
mov
repnz
call
xchg
push
sub
and
sbbb
push
inc
mov
fdivs
nop
pop
mov
and
jbe
orb
add
xchg
jg
mov
sub
xor
or
sbb
mov
sub
push
inc
push
jne
add
jno
push
shrb
mov
clc
or
test
idivb
loopne
enter
fadds
cwtl
inc
pop
pusha
test
or
movsb
pop
sbb
jg
mov
cltd
and
jb
mov
mov
mov
js
clc
sbb
push
orb
ret
cltd
jecxz
mov
mov
leave
push
sbbb
js
jg
mov
rclb
xor
sti
xchg
clc
add
and
mov
mov
jp
add
mov
incl
push
mov
pop
add
push
add
push
add
adc
pushf
scas
movsb
mov
es
jp
lahf
lods
stos
test
jmp
dec
or
stos
xor
sub
repnz
xchg
jp
jp
jbe
sarl
xchg
adc
lock
mov
inc
inc
or
mov
jg
loopne
sbb
jo
cmp
ja
and
in
dec
and
call
cli
mov
cltd
xchg
add
adc
add
or
add
or
push
mov
adc
lea
push
cmc
and
xchg
js
dec
pop
mov
fwait
shll
add
repnz
loopne
sbb
xor
and
push
fdivr
incl
loopne
in
pop
out
xor
push
jmp
inc
sti
mov
add
inc
loop
rorb
je
mov
xchg
xor
in
jle
adc
pop
push
movl
and
or
ss
sub
jnp
rcrl
xchg
lock
icebp
or
jo
fbld
add
lock
push
inc
push
js
pop
and
outsb
in
mov
subl
mov
mov
push
out
inc
push
in
xor
push
and
or
in
adc
sbb
lcall
or
dec
jno
aaa
cld
outsl
cmpsb
xor
mov
pop
lock
aaa
jmp
mov
dec
movsb
repnz
sub
add
mov
js
jecxz
cmp
add
add
xor
into
inc
idiv
cmpsb
out
out
add
js
or
dec
pushl
xor
mov
pusha
loop
pop
icebp
add
test
loopne
add
sub
jle
xlat
add
push
insb
je
mov
movsl
ljmp
mov
cld
ret
cwtl
sbb
push
adc
cmp
push
add
pusha
sahf
js
dec
mov
orb
fildl
sbb
sbb
out
jo
je
pop
mov
cli
or
fwait
cmp
add
mov
sbb
subb
mov
adc
cld
out
push
mov
fisubl
mov
fiadds
subb
mov
or
cmc
push
mov
sbb
cmpb
push
xor
lds
mov
pop
sub
fimuls
mov
mov
and
push
sbb
lock
xor
inc
and
out
add
clc
add
push
bound
mov
inc
nop
mov
adc
pop
not
test
mov
add
adc
rorb
xor
sarl
aaa
add
mov
jge
and
in
ret
dec
rolb
or
mov
loop
mov
push
js
jp
gs
add
aam
cmp
jle
loopne
pop
shll
push
pop
xchg
inc
or
pusha
mov
dec
cmc
dec
dec
std
roll
nop
cs
lock
push
and
add
fs
lahf
xor
sbb
sub
mov
mov
and
or
sbb
jo
or
mov
or
xor
pop
ljmp
rolb
pop
pusha
xchg
movsl
sbb
push
pusha
dec
sbb
xor
push
add
jecxz
sbb
icebp
inc
xchg
addb
sbb
repnz
push
cmpb
aam
movsb
xchg
notb
fdivrp
or
jle
cmc
stos
jp
cmp
sbb
ror
loopne
js
add
cwtl
sub
mov
daa
jp
and
inc
add
pop
push
mov
in
push
repz
and
mov
lock
cmp
mov
outsl
filds
add
out
xor
sti
rol
add
mov
jae
incl
out
enter
sub
outsl
push
lret
dec
mov
inc
into
gs
cld
jo
lock
mov
xchg
jle
outsb
js
xor
push
inc
xchg
in
xchg
cld
pushl
jl
das
lock
mov
jle
add
mov
call
sbb
sbb
sub
daa
add
and
xor
xor
cmp
sbb
pushl
and
nop
jo
scas
loopne
rorl
xor
sub
push
sbb
mov
add
loopne
inc
adc
stos
add
es
pop
xchg
pop
cltd
mov
or
rcrb
out
clc
jnp
fsubl
adc
dec
xor
inc
shrl
cli
lcall
jg
sbb
adc
xor
or
mov
js
dec
cld
mov
mov
mov
mov
and
pushf
inc
jle
fistps
jl
sarl
test
dec
iret
xor
jbe
xchg
nop
inc
mov
enter
orb
inc
andl
andl
sbb
jo
or
popa
aaa
insb
js
lcall
ljmp
and
mov
mov
icebp
jo
dec
shrb
pushf
pop
aas
jbe
mov
adcb
fistpll
lock
je
add
cmp
adc
pusha
and
nop
data16
or
fcoml
ljmp
adc
call
sbb
add
push
xchg
out
mov
adc
push
adc
and
sub
lret
loopne
out
stos
inc
pop
sub
mov
xchg
push
cmpsb
dec
mov
stos
xor
cmpsb
xchg
icebp
mov
inc
dec
call
add
add
xor
add
mov
ljmp
mov
cs
out
mov
cld
pop
ja
push
xor
add
lret
and
rcrl
roll
add
adc
cld
pushl
sub
insb
shrb
dec
jecxz
cmpsb
rorb
out
xor
adc
sar
fcomip
pushf
dec
ja
and
outsl
faddl
push
add
xchg
inc
mov
cmp
movsb
shlb
roll
ljmp
js
add
add
add
add
mov
imul
lea
inc
and
lods
das
add
mov
mov
inc
lock
shr
and
and
push
xor
js
cli
dec
mov
sarb
sti
mov
or
out
and
fs
or
movsb
jnp
nop
push
or
add
decl
lds
sbb
sub
icebp
lock
mov
mov
add
mov
or
testb
repz
cmp
fisubs
loopne,pn
add
stos
push
inc
out
inc
sub
fisubrs
jo
lahf
ljmp
sbb
add
enter
pop
loope
jp
cld
negl
adc
mov
push
scas
mov
mov
mov
add
pop
cmp
mov
push
mov
mov
fdivrs
out
into
add
push
fsubl
icebp
lock
in
xor
lods
enter
add
adc
add
jp
lods
mov
vpunpckldq
adc
out
dec
sbb
inc
ja
push
add
or
add
setnp
pop
insl
xor
ljmp
sub
movsb
adc
scas
test
rorb
dec
jle
jnp
sbb
shlb
cmp
cmp
push
addl
add
xor
push
mov
add
sti
or
or
decl
aas
push
pop
push
in
cmp
test
rcr
add
sub
add
rcrb
loopne
insb
lods
sti
movsl
test
fisubl
xor
ret
out
and
xchg
divb
ret
sti
or
inc
clc
jne
movb
add
sbb
cld
add
add
call
add
sarl
push
add
and
divl
nop
inc
ja
add
add
ficoml
mov
xor
add
mov
mov
and
cmp
jb
adc
add
mov
jns
subl
inc
testl
mov
inc
or
arpl
lea
and
and
pop
lock
jecxz
add
sbb
or
pop
ret
xlat
bound
fistpl
ficoml
xor
mov
mov
jns
jmp
imul
sub
repnz
mov
ljmp
inc
xor
in
add
xchg
cmpsl
clc
sbb
xchg
out
ficoms
xor
lret
xchg
ret
mov
mov
sarb
inc
test
mov
push
add
incb
fadds
rolb
loopne
pop
inc
jle
lcall
cld
jo
insb
shll
add
add
mov
pop
es
pop
jnp
add
clc
rorb
add
mov
mov
in
fbld
adc
or
into
xor
pop
add
addps
rcrb
push
mov
mov
jno
orb
mov
inc
cmp
sti
sbb
rolb
enter
imul
xchg
test
mov
cmpsb
pusha
sbb
and
and
jg
fs
add
pop
imul
pop
xor
push
sbb
inc
add
jg
icebp
inc
add
push
popf
sbb
sbb
sub
mov
addb
sbb
call
mov
scas
jbe
out
adc
rorb
jnp
or
or
xor
cmpl
addb
mov
add
negl
cwtl
movsl
mov
or
es
insl
or
jns
or
iret
sbb
mov
pop
add
push
add
mov
xor
loopne
cmpsb
popf
mov
loope
push
push
stos
sbb
outsb
mov
scas
stos
inc
adc
and
mov
mov
mov
xorb
sbb
push
adc
add
into
push
mov
lock
lret
xorl
notl
xchg
mov
popw
mov
or
dec
loopne
jae
jp
daa
in
fistps
add
mov
mov
pushl
jle
rorl
adc
xchg
add
jecxz
cmc
push
adc
add
or
cli
sti
inc
add
mov
into
test
push
jl
sbb
sbb
sbb
addr16
enter
pop
mov
filds
or
pop
rorl
dec
pop
inc
mov
inc
mov
roll
adc
mov
pop
rcrb
inc
mov
and
pop
and
decl
out
loop
add
sub
cld
mov
incl
xchg
fsubrs
cmp
mov
cli
or
cmc
cmc
jmp
add
jle
or
mov
xor
inc
sbb
pop
pusha
inc
lcall
cmpxchg
movsl
or
aaa
adc
int
mov
es
mov
mov
adc
mov
or
xchg
cli
stc
jle
jo
std
xchg
ret
pusha
sbb
inc
add
jg
loopne
jle
lret
dec
sbb
xchg
xchg
dec
xor
mov
mov
add
ss
cwtl
es
mov
hlt
decl
sbbl
repnz
imul
cmpb
xchg
jmp
lret
or
sbb
inc
cld
insl
ret
int
push
mov
int3
lods
or
addb
mov
enter
add
sbb
movsl
orl
ljmp
clc
mov
inc
add
out
xchg
sbb
and
mov
data16
call
push
test
mov
sahf
stos
enter
mov
fistpl
int3
or
jb
add
xchg
pop
orb
mov
xchg
subb
cmp
pop
cmp
sbb
loope
lock
gs
mov
pushf
xor
sub
mov
cs
mov
mov
adc
mov
mov
mov
sub
cs
sbb
jle
sbb
out
mov
sarb
test
loopne
nop
mov
rolb
sub
add
loopne
add
sub
xor
push
push
loope
mov
inc
aad
bound
pop
mov
loope
xlat
and
ss
cmp
adcb
jge
push
push
lods
roll
enter
push
and
push
sbb
sub
add
shrb
push
cmp
or
lret
aad
sti
sbb
xchg
sbb
inc
mov
xor
and
scas
mov
adc
jne
and
pusha
xor
and
pop
loope
testl
dec
push
sub
sbb
test
clc
mov
dec
jae
or
xchg
loopne
mov
push
pop
test
jb
inc
cmp
push
loopne
xchg
cmp
js
push
out
inc
mov
push
pop
push
push
imul
mov
dec
xor
dec
nop
mov
mov
call
stos
das
mov
ljmp
fisttpll
pop
pop
xor
lock
mov
loopne
jo
pop
movl
push
add
cmc
outsl
data16
or
xor
jae
add
mov
add
inc
push
pushl
push
xor
sbb
lock
xor
rolb
rcl
insl
testb
dec
xlat
jp
mov
add
rcll
sarb
mov
adc
add
jp
mov
adc
or
and
movsl
sbb
mov
jb
and
add
es
adc
cwtl
add
or
jecxz
outsl
jbe
push
push
sarl
xor
pop
push
push
nop
insb
cmp
enter
fnstsw
xchg
js
inc
add
inc
or
call
jle
xor
sbb
mov
push
push
icebp
stos
pop
mov
mov
nop
data16
fistpl
push
mov
movl
nop
inc
cmpsb
pop
push
call
mov
mov
cmpsb
das
cmpb
mov
loope
decb
xor
push
or
ret
mov
out
hlt
and
inc
pop
adc
push
pushl
incl
cld
cmpsb
addb
cli
test
daa
ret
push
aam
add
add
cs
fisttps
rolb
or
rolb
lods
jg
mov
adc
mov
add
inc
lcall
cmp
sbb
push
add
hlt
in
add
iret
fiadds
dec
lods
xchg
roll
ds
sub
cld
inc
negl
stc
inc
dec
inc
lock
ljmp
or
mov
rcrb
test
or
or
movsb
mov
sbb
add
cld
dec
xor
push
mov
jmp
fcmove
loopne
fcomip
adc
push
mov
adc
or
jo
bnd
outsb
pop
and
loop
jl
inc
daa
or
sub
sub
jae
push
mov
mov
mov
push
xchg
js
mov
cltd
mov
nop
jb
jbe
and
inc
add
mov
rolb
sbb
pop
loope
pop
or
pop
inc
sub
shlb
sti
jmp
cmp
jg
jns
mov
iret
enter
adc
inc
jecxz
notb
jl
mov
mov
sbb
or
ret
imulb
ret
xor
or
add
cltd
call
jg
pop
loopne
stos
sbb
shlb
inc
ret
js
or
and
mov
mov
jecxz
add
add
lods
mov
jle
jl
add
aaa
adc
jl
nop
scas
xor
mov
jo
lock
fimull
mov
pop
push
jp,pt
sub
jo
or
das
mov
pop
add
push
xor
mov
aaa
mov
and
jo
add
and
or
dec
test
sti
xchg
sbb
mov
jb
dec
loopne
test
dec
pop
inc
or
adc
adc
shl
jo
sub
jmp
pop
and
lret
adc
xchg
mov
xchg
negb
cli
mov
adc
xor
mov
jmp
mov
jo
faddl
adc
outsl
push
test
adc
sbb
adc
adc
in
outsl
dec
clc
jno
loope
out
mov
inc
xor
mov
addb
loopne
stos
jecxz
iret
sbb
sbb
fs
hlt
and
push
dec
fwait
mov
add
mov
fldcw
fdivrs
sti
jns
rorb
aad
divb
rcr
js
xchg
xor
inc
adcl
sbb
js
lods
and
int3
out
das
fiaddl
add
push
std
xor
xor
push
iret
and
push
dec
or
push
add
sbb
mov
pop
sub
test
add
sti
inc
xchg
les
pusha
inc
xor
mov
adc
out
add
jmp
pop
mov
cltd
shrl
mov
cmp
clc
jg
icebp
ret
shlb
sub
xchg
sub
pop
lods
movsl
adc
wrmsr
xor
pop
adc
jno
pop
inc
xchg
jg
ss
xchg
add
sahf
ja
jle
dec
mov
es
js
add
sub
add
add
out
mov
jbe
or
call
testb
xchg
sub
add
ljmp
mov
jo
xchg
add
mov
mov
push
inc
and
nop
xchg
lcall
mov
movsb
sbb
push
pop
cld
stos
push
push
adc
shlb
add
call
add
jg
sbb
sub
cli
adc
roll
sbb
cmp
pop
icebp
xor
or
inc
lds
pusha
xchg
loopne
cli
dec
lret
incb
jle
add
std
cmp
pop
out
add
nop
repz
pop
jmp
add
jo
out
movsl
adc
adc
ficoms
ja
jle
cmc
or
adc
push
cmp
jns
repnz
push
mov
jno
mov
adc
lret
mov
js
push
xor
jb
sar
ja
repnz
jae
pop
mov
ror
test
add
mov
je
xchg
or
or
ja
xor
sti
jnp
jo
jnp
loopne
or
xor
jg
lods
enter
xchg
repnz
mov
push
xor
push
fsubrs
lock
ljmp
jb
pop
jno
or
and
sub
aas
mov
clc
mov
loope
repnz
inc
jmp
and
int
add
fdivrs
add
lea
movsb
js
frstor
test
adc
cs
xchg
or
push
insl
jle
or
mov
pop
lock
loop
cld
mov
jg
jno
add
rcrb
mov
sbb
add
repnz
fdivrp
mov
mov
xchg
or
lret
or
sbb
xchg
and
loop
mulb
nop
lock
mov
inc
into
jo
pop
jecxz
xchg
add
test
inc
mov
notb
ljmp
xchg
js
jecxz
mov
fidivrl
sbb
cmpsb
or
jne
adc
add
addb
nop
aad
mov
mov
test
add
or
push
sbb
inc
ja
loop
sub
jne
inc
orb
fimull
push
sbb
loop
scas
add
push
mov
movsl
mov
test
mov
push
jl
cmc
hlt
add
xor
jecxz
mov
add
dec
push
and
movsb
or
inc
xor
adc
sub
cld
jo
xor
jle
jl
out
test
div
les
mov
orb
mov
inc
xor
ja,pn
int3
les
add
add
push
jl
or
cmp
jl
vmread
and
or
lock
xor
int
or
faddl
add
add
mov
sbb
add
int3
test
test
xlat
jle
aaa
pop
ret
aam
push
lea
or
inc
mov
push
movsb
neg
mov
jg
pop
inc
js
scas
jmp
insb
out
sub
lret
repnz
adcl
movsb
add
push
fisttpl
and
push
lock
hlt
stc
mov
enter
or
adc
test
int3
shl
inc
push
adc
push
ret
les
movsb
cmpsb
mov
lret
out
cld
jne
sbbb
jle
jmp
mov
pushf
or
jmp
mov
scas
sti
movsl
xor
cmp
or
fcomip
xor
sbb
test
pop
orb
mov
rolb
cltd
rolb
add
sbb
sbbl
enter
lock
je
sbbb
xor
push
cld
or
push
jae
mov
inc
cmp
call
jmp
add
push
shll
add
js
fsubs
aam
stc
xor
sarb
lods
mov
add
mov
andl
lcall
roll
in
ucomiss
and
jp
addb
adc
jbe
jecxz
movsb
fdivs
inc
jb
fcomi
pop
or
inc
dec
daa
and
inc
adc
addb
jp
add
jle
int3
add
add
pop
push
add
push
sbb
je
adcl
xchg
lock
popf
push
cmc
cmpsb
leave
orb
push
lds
sbbb
inc
cmp
sbb
xor
xor
add
into
pop
inc
mov
jne
inc
xor
mov
or
and
pop
cli
push
sahf
jnp
push
fwait
subl
mov
rcrl
sbb
inc
subl
ret
add
ret
xchg
add
jecxz
fdiv
jg
add
test
jp
test
mov
aam
add
inc
pop
movsb
mov
test
ret
dec
jl
adc
push
mov
outsl
mov
jo
or
subb
push
insl
dec
cmp
rolb
mov
jmp
shlb
clc
jge
clc
inc
int
adc
push
rcl
mov
push
or
test
out
es
pop
sbb
sbb
ret
lcall
movb
sbb
js
mov
mov
cmp
sbb
add
or
xor
into
mov
inc
adc
rcr
xor
adc
cmp
cwtl
add
popa
hlt
ljmp
mov
lods
sbb
pusha
add
push
pop
add
add
loopne
insl
or
adc
stos
stos
add
jno
fcoml
les
sub
sub
xor
jmp
xor
and
dec
or
stos
adc
mov
dec
pop
inc
fsubp
movl
xchg
push
add
sub
push
mov
addb
cltd
repnz
cs
loope
add
pop
mov
add
inc
fbld
or
xchg
jmp
dec
iret
jb
loopne
adc
clc
sbb
add
inc
push
mov
mov
jb
cwtl
mov
ja
xchg
cmp
mov
movsl
outsb
lret
or
out
and
rclb
or
and
ret
jmp
jle
stos
sbb
push
add
ds
adc
jg
loope
rorl
add
and
push
hlt
lret
sbb
xchg
inc
out
xor
mov
mov
call
pushl
or
mov
les
jo
movsb
ss
shlb
or
push
mov
and
mov
or
sbb
pop
icebp
test
jmp
or
rcll
jb
or
and
adc
mov
popa
sbb
jmp
or
sub
pusha
es
shll
mov
mov
pusha
xor
jle
outsb
std
xchg
dec
in
inc
stc
jb
cmp
add
idivb
add
adc
jmp
add
clc
ja
aad
sbb
fadds
or
das
pusha
inc
popa
aas
sbb
push
lret
fiadds
in
out
and
adc
add
sub
sbb
lret
adc
pushl
adc
add
lock
adc
mov
ret
pop
shlb
cmp
sbb
cltd
subl
out
mov
xchg
push
clc
outsl
sbb
testl
or
lock
roll
sbb
dec
sbb
and
jl
jle
enter
lcall
mov
or
or
inc
sbb
and
mov
xchg
loopne
movsb
mov
movsb
jp
sti
or
xor
inc
sbb
adc
movsb
movsb
stos
fwait
cld
push
cwtl
pop
sub
adc
or
testl
pop
je
icebp
adcb
xor
mov
jecxz
adc
adc
mov
add
jl
shrl
xchg
add
and
lcall
lods
and
loop
pusha
add
and
das
popa
add
cltd
lcall
sbb
aaa
aaa
mov
xchg
jo
icebp
push
xor
dec
mov
andb
lret
out
xchg
adc
mov
std
arpl
jecxz
sbb
sub
js
sbb
loope
mov
sbb
loopne
subb
jae
ss
sti
jg
jmp
pop
bound
or
aaa
loopne
and
mov
inc
pop
or
andb
dec
mov
icebp
mov
mov
testb
mov
out
mov
mov
mov
jecxz
inc
pop
or
jg
and
mov
aaa
mov
loope
xchg
aas
out
xor
mov
insb
jo
ljmp
jl
or
inc
js
xchg
add
jo
addb
imul
movsb
cltd
cmpsb
icebp
shlb
add
jo
pop
and
or
ljmp
lock
jle
dec
add
mov
fcomip
lcall
dec
add
aas
addb
sbb
sub
xor
push
shlb
xor
xchg
adc
mov
xchg
nop
mov
xor
insl
lret
test
js
pop
lret
xchg
xor
pusha
sub
pop
cmp
shlb
adcb
nop
inc
pop
pusha
dec
inc
xor
add
adc
rclb
adc
enter
mov
jle
ljmp
pusha
push
adc
and
pop
push
je
adc
nop
mov
cwtl
scas
nop
add
sub
cld
cld
or
sbb
sub
ss
ja
mov
and
nop
scas
jle
movsl
or
scas
nop
xchg
sub
popa
fdivrs
cmpsb
data16
pop
mov
in
sbb
add
pop
jp
bound
or
mov
adc
jg
inc
inc
add
loopne
inc
and
or
out
xor
xor
cmc
or
xchg
and
mov
cld
jbe
inc
rolb
insl
mov
cmp
addb
fbstp
or
call
dec
xchg
sbb
dec
in
test
mov
stc
add
aam
das
push
add
xchg
adc
and
inc
add
insb
cmpsb
pop
mov
pop
or
dec
or
pop
test
ss
xchg
add
int
dec
push
sbb
xchg
jae
mov
sahf
mov
and
leave
jle
adc
jns
std
ja
ret
ss
outsb
dec
in
jns
repnz
xchg
sub
inc
sti
xchg
loope
mov
nop
xchg
hlt
lods
sbb
mul
sti
and
xchg
add
jae
scas
stc
jae
cli
icebp
mov
test
mov
adc
pop
cld
mov
ja
mov
push
shl
inc
mov
cmp
movsb
mov
xchg
xchg
push
ss
jmp
add
mov
mov
adc
xor
push
cmp
add
xor
das
fadds
add
mov
and
add
and
adc
mov
or
pop
inc
xchg
mov
lock
jmp
mov
add
jecxz
jg
aaa
inc
shrl
mov
mov
jecxz
int3
xchg
jne
add
test
movsb
adcb
incl
test
jmp
lock
add
jb
inc
or
or
push
xchg
add
js
ret
xchg
sbb
xor
pop
imul
scas
mov
repnz
pop
or
add
mov
cld
negb
xor
loope
or
or
rclb
xchg
mov
xlat
jecxz
sbb
pusha
jb
andb
push
ficoml
xlat
xchg
sahf
mov
adcb
ficompl
xor
arpl
sbb
jl
movsb
jb
mov
outsl
xlat
jo
or
push
add
add
or
loopne
and
cmpsl
cld
out
mov
push
add
loope
and
xchg
adc
jge
push
and
ret
xor
xchg
js
inc
adc
or
sti
mov
push
adcb
pusha
push
cld
mov
daa
lock
nop
popa
jne
loope
xchg
pop
add
inc
clc
aam
xor
and
or
xchg
push
les
adc
out
js
icebp
inc
or
and
jmp
mov
repnz
fwait
pop
sbbb
fwait
lock
inc
lahf
add
movsb
xor
pop
mov
or
xlat
stos
orb
push
mov
push
rcl
pop
hlt
ja
adc
ret
mov
ret
jno
inc
jo
iret
adc
insl
rorl
sbb
imul
mov
fistl
mov
icebp
push
stos
pop
adc
ja
adc
jne
xchg
mov
lock
enter
mov
push
inc
dec
je
mov
inc
divl
mov
out
push
add
movsl
shll
add
sar
std
xchg
pop
mov
jecxz
xchg
ss
add
add
mov
mov
push
or
call
inc
xlat
add
ret
jo
adc
cmp
mov
rdtsc
adc
into
rol
int3
sub
sub
cmp
mov
add
sbb
sbb
push
mov
mov
jmp
lods
or
mov
cld
loopne
ret
loopne
loope
adc
xlat
repnz
inc
sahf
jo
add
add
shlb
mov
sbb
xor
pop
jbe
or
fistps
shll
and
inc
mov
push
pop
ds
sub
loope
jmp
jae
add
mov
or
adc
scas
cli
add
xchg
add
add
notb
test
incl
push
pop
out
xchg
add
mov
out
mov
xlat
in
jle
icebp
mov
inc
stos
movsl
xor
adc
mov
mov
cli
jg
push
movsb
clc
scas
xchg
inc
mov
and
das
adc
mov
sbb
lock
stos
ljmp
xor
add
test
xlat
movsl
jp
mov
outsb
dec
push
ret
push
outsb
push
and
and
add
mov
sbb
sub
daa
mov
xchg
mov
clc
pop
mov
nop
and
ja
lds
pop
push
adc
xor
adc
mov
sahf
cmp
inc
or
xchg
sbb
push
enter
in
or
nop
dec
pop
xchg
or
push
or
add
cltd
clc
jle
aas
mov
and
or
inc
call
or
icebp
test
jecxz
push
call
or
repnz
push
movsb
jmp
ja
nop
mov
insl
sti
movsb
add
shll
sbb
push
mov
or
and
repnz
sub
ja
movsb
mov
sbb
and
stos
scas
and
pushl
std
xchg
mov
pop
xor
and
fcomi
push
and
fnstcw
jg
sti
and
push
inc
mov
adc
xorb
decb
add
inc
push
add
xchg
cltd
stos
inc
pop
insw
lcall
hlt
cmp
imul
scas
push
out
mull
outsl
divb
cltd
leave
jp
jo
xor
add
rorb
xchg
jo
mov
stos
mov
xchg
jae
rolb
loopne
jge
push
jmp
fwait
mov
push
mov
sub
fnsave
adc
mov
jnp
or
push
push
xchg
lcall
testl
stos
pop
lahf
mov
mov
out
jo
or
mov
imul
aam
jbe
das
push
shll
jbe
sbb
push
jge
pop
push
adc
test
aam
add
add
xlat
pop
dec
shrb
cmp
add
ljmp
stc
imul
mov
fcmovnb
jb
add
pop
dec
cwtl
loopne
cwtl
dec
push
addb
mov
in
sub
sahf
js
push
push
int
lcall
mov
test
jns
sbb
fcomi
in
mov
sbb
cmp
stc
jle
mov
negl
sub
sbb
fs
sti
repnz
jo
adc
jnp
inc
rorb
loope
sbb
sub
fcoml
orb
test
or
xorb
or
mov
test
inc
sarb
add
in
fisttps
inc
lcall
add
and
or
and
daa
mov
sahf
pop
xchg
adc
adc
mov
xor
xchg
sbb
into
lret
repz
add
andb
leave
sbbb
es
mov
rolb
faddp
pop
add
jo
leave
mov
sbb
add
jnp
cmpsb
sbb
xchg
adc
add
push
add
sbb
jno
les
inc
addr16
mov
or
jle
add
outsl
cwtl
sub
jbe
in
mov
call
shrb
adc
dec
inc
call
clc
inc
jns
jle
xchg
les
or
xorb
or
sarb
jbe
out
aam
fs
jle
lds
rclb
mov
lahf
add
xchg
js
add
mov
mov
pop
xchg
mov
adcl
adcl
push
test
mov
ret
cld
cmp
add
hlt
and
inc
dec
xchg
sub
and
repz
add
jnp
cld
add
pop
jns
cld
sbb
push
add
sbb
nop
add
jg
add
sahf
or
inc
mov
ja
xchg
movsb
sarb
mov
lods
loopne
adc
or
jle
lods
mov
or
test
fwait
cs
cld
dec
and
adc
cmp
sbb
test
mov
xor
add
test
lret
push
push
push
addb
sbb
mov
cmp
xchg
xor
xor
leave
shr
add
push
push
stc
sbb
scas
and
fiadds
notb
repnz
sbb
push
lret
ljmp
xchg
add
cs
rcrb
jo
mov
adc
test
and
pop
icebp
xchg
lcall
cmp
cld
and
add
mov
jo
jp
or
add
je
xchg
loopne
lods
out
ja
mov
xchg
inc
js
xor
pusha
inc
and
andb
or
dec
hlt
dec
jle
ret
and
cmpsb
mov
jbe
add
jle
idivb
addl
loopne
mov
adc
test
nop
js
jbe
mov
std
dec
insl
sbb
lret
inc
ret
mov
mov
dec
xchg
mov
iret
ds
mov
push
or
sbb
add
fsubr
arpl
push
mov
push
mov
in
adc
inc
inc
and
out
mov
ja
xor
jecxz
into
add
or
fimull
jae
rolb
add
jo
fdivrs
ss
inc
mov
fdivrp
mov
cmp
sub
push
hlt
cmpsb
decl
add
adc
test
jle
rolb
rolb
sbb
js
bound
shlb
pushf
movsb
mov
loopne
add
lea
cmc
fisttpll
sub
ret
jae
sti
aaa
mov
cmp
xchg
sbbb
sbb
jg
mov
pmuludq
mov
pop
fwait
shll
mov
or
pop
sarb
daa
xor
xchg
mov
xor
jl
test
in
jb
jnp
sbb
mov
aas
inc
adc
xor
xchg
sarb
data16
dec
popa
add
sar
fldt
add
add
js
jo
xchg
cli
mov
and
add
enter
jge
add
inc
sub
add
shl
cmc
add
nop
xchg
cli
lcall
cmpsb
adc
repz
aad
adc
lea
or
mov
fisttpll
scas
mov
repnz
sbb
sbb
jmp
push
and
pusha
jle
mov
adc
inc
pop
xchg
out
push
cmp
and
and
das
shlb
xor
rclb
insb
cli
cwtl
xor
lock
or
rcll
xor
das
adc
adcl
or
cwtl
or
cmp
outsl
or
mov
jp
divl
pop
test
jecxz
jp
sti
mov
dec
mov
js
mov
and
mov
fdivp
mov
sub
inc
jle
inc
or
les
sub
out
pop
inc
call
stos
subb
fcomps
aam
adc
inc
sbb
push
and
push
fldl
adc
jne
cwtl
inc
sbb
fs
or
aaa
pop
mov
add
in
cltd
ret
in
cmpb
xor
pushl
add
sub
lcall
rcrb
stos
jp
sbb
cmp
or
inc
mov
sbb
fists
mov
jecxz
cld
mov
inc
add
mov
ss
enter
add
add
and
dec
or
js
push
add
cmp
xor
jg
mov
adc
call
and
mov
frndint
scas
call
mov
pop
rolb
sbb
add
cmp
cmp
mov
rolb
and
pop
pop
call
rolb
inc
xchg
inc
or
mov
jbe
or
shrb
loopne
ret
loopne
gs
std
pushl
pusha
pop
test
xor
sub
xchg
popf
repz
rolb
les
or
mov
add
scas
or
add
mov
add
jecxz
push
loope
push
mov
cmpsb
cltd
jle
je
lock
sbb
jbe
in
cltd
or
inc
pop
ds
add
push
movsb
cmp
sbbl
or
stc
add
das
sbb
insb
subb
cld
jg
push
add
mov
std
xor
or
xor
xchg
pusha
movsb
ja
add
divl
dec
imul
sub
inc
add
loopne
mov
lods
rolb
das
sbbb
xchg
lret
mov
and
fdivl
pop
scas
stos
push
push
jo
icebp
sub
xchg
in
mov
xlat
enter
mov
les
stos
mov
sahf
rcll
jmp
sbb
jle
jl
cmpsb
pop
adc
sub
jmp
or
xor
or
cld
mov
and
loopne
lods
test
test
push
mov
dec
lock
dec
or
ljmp
movsb
pop
ds
adc
packsswb
ja
xor
mov
xchg
push
adc
cmp
jno
inc
inc
push
lock
adc
cltd
enter
mov
and
fadd
rclb
mov
aaa
xor
scas
dec
jg
and
adc
sub
add
and
test
lret
fcmovu
adc
ja
xchg
add
movsb
adc
xchg
sarb
sbb
into
fcmovb
jmp
scas
fwait
pusha
add
lods
nop
mov
push
or
sbb
cmp
mov
add
cmp
daa
jo
fwait
jae
and
sarb
call
or
jne
pusha
or
jo
fidivs
ja
outsl
pop
aaa
icebp
or
mov
add
in
jle
jbe
mov
inc
add
clc
ljmp
sbbb
and
lcall
jns
sbb
test
add
mov
iret
jle
and
fstpt
mov
add
ljmp
xchg
test
push
add
xor
stos
sub
mov
xchg
ljmp
push
jno
add
loope
cmpsb
xor
pop
sbb
loope
orl
pop
lock
lock
sub
jp
and
push
out
add
js
std
scas
clc
mov
sti
push
aas
inc
mov
push
push
adc
jecxz
pop
or
push
das
inc
popa
lds
or
cltd
fstl
nop
les
sbb
pop
adcb
mov
jle
cwtl
or
pop
mov
sarb
push
outsl
adc
das
sbb
incb
ret
push
inc
inc
movsl
mov
add
incl
add
into
lret
inc
add
adc
loopne
loope
xchg
xor
add
incl
add
jnp
out
mov
push
xor
mov
pop
lahf
and
mov
sbb
rcl
insb
mov
fmuls
fistl
cmp
fwait
xor
mov
mov
adc
push
rclb
sbb
sahf
mov
fs
cld
insl
xor
cmc
add
xor
repnz
dec
mov
std
or
daa
roll
pop
cli
mov
add
push
pop
mov
mov
sbb
inc
stos
push
fwait
in
ficoms
aas
adc
jg
sbb
adc
xor
jle
xor
sub
and
add
lods
pop
sbb
lock
movsb
cmp
test
hlt
xor
out
or
sub
mov
and
repnz
shr
roll
sub
or
cld
nop
push
test
scas
pop
clc
push
or
adc
sub
pushf
mov
lcall
mov
mov
pop
and
aaa
mov
push
stc
and
sbbb
jp
and
lock
pop
lock
mov
faddp
add
sahf
movl
les
fbstp
mov
jae
shlb
or
das
cltd
cli
pop
mov
shll
loopne
adc
add
xorl
cltd
inc
lock
outsl
push
add
inc
test
and
adc
mov
out
sbb
pop
dec
sbb
mov
fidivs
jecxz
cmp
mov
sarb
jl
jae
fcompl
mov
stc
js
sti
pusha
xor
add
test
es
push
repnz
add
and
cltd
fidivrl
sti
add
les
inc
push
adc
jno
inc
xorb
add
lcall
dec
adc
std
mov
adc
add
cmp
mov
adc
incl
stos
xchg
iret
mov
dec
and
mov
popa
test
mov
sub
aam
decl
push
adc
add
out
addb
fcmovb
shlb
cld
mov
jp
inc
xlat
jp
fistpl
movsl
into
add
sahf
add
add
cmp
and
or
xor
push
incl
movsl
sbb
push
mov
aaa
xor
shll
insb
sbb
addb
sbbb
xor
mov
mov
xor
xor
rclb
sub
sbb
push
lcall
mov
adcb
rol
mov
sarl
ljmp
xor
adc
jecxz
icebp
adc
mov
cmpsb
or
cmpsb
sti
mov
call
sub
add
rorl
adc
mov
fsubrs
fcoms
mov
loop
int
dec
jno
sub
das
adc
popf
push
sbb
cltd
loope
push
push
adc
lret
jo
jno
inc
arpl
mov
or
push
sub
push
adc
js
mov
mov
ja
fdivs
adc
std
sub
inc
add
stos
pusha
add
sarb
in
jmp
cmp
pusha
imul
fidivs
mov
mov
mov
jbe
push
fidivs
cmpsb
outsb
xor
sti
push
cli
inc
xor
lock
add
mov
push
mov
into
xor
int3
xor
adc
inc
enter
xlat
incl
and
shrl
pusha
push
stos
lret
in
ja
movb
add
push
xor
loop
push
add
pop
jp
scas
addr16
shl
dec
nop
adc
test
pop
cmp
mov
push
lods
fdiv
js
cmp
inc
add
lock
jecxz
push
lods
pop
repnz
jae
mov
fwait
add
add
push
pop
ja
sub
ret
sbb
gs
pusha
add
ljmp
stos
addl
out
add
cli
stc
xor
dec
adc
add
je
and
fistpll
jns
jae
cmp
jge
call
mov
jb
adc
test
daa
fdivrl
mov
dec
xchg
orb
sbb
xor
add
in
mov
aam
ret
test
subl
inc
sbb
mov
rcll
jle
jmp
or
add
movsl
mov
adc
add
es
adc
sbb
popf
xor
fildl
sbbb
cmpsb
push
ror
sbb
cmp
sbb
ret
add
adc
ja
repnz
sub
pop
sub
insl
sti
pop
das
adc
orb
jl
iret
mov
fwait
aam
sub
cmc
cmp
jbe
in
xorl
sbb
jle
adc
cmpb
mov
sbbb
push
push
rcl
add
es
add
add
sahf
jg
lcall
mov
lock
sbb
xchg
ret
sbb
cmpb
push
add
sbb
sarb
push
adcb
cmpsb
idivb
mov
iret
rcll
fildll
push
pop
sbb
js
lods
inc
sbb
sbb
mov
add
fwait
add
lock
pop
fistpll
and
negl
pop
dec
rcrl
mov
nop
lock
test
les
hlt
out
adc
js
jo
testl
inc
add
jge
pop
hlt
enter
cmp
fistpl
lret
addl
jp
fildl
jp
mov
sbb
addb
mov
rcrb
adc
addl
test
testl
mov
pop
xchg
xorl
jbe
subb
test
cmp
xchg
bound
cltd
in
fildl
aam
jmp
or
mov
sub
add
andb
and
cmp
xor
popa
jb
dec
jo
sub
nop
mov
cli
adc
or
jge
xor
xor
fwait
fs
std
das
aad
jle
loopne
inc
pop
js
adc
mov
sub
test
pop
mov
inc
or
adc
add
dec
cwtl
mov
add
dec
add
add
js
outsl
sub
imul
pusha
inc
dec
mov
xchg
or
sbbb
inc
sub
roll
ret
add
pop
push
adc
mov
inc
xchg
or
cmp
repnz
push
das
clc
fbld
pushl
cmp
inc
sbb
inc
cmpsl
push
sbb
sub
adc
pop
out
jo
lds
stos
jmp
mov
popf
push
lods
fwait
out
dec
ss
mov
inc
add
xchg
cltd
notb
in
or
stos
mov
loop
mov
xor
dec
insl
pop
mov
negl
cmpsb
int3
loop
jnp
fcomps
push
sbb
dec
mov
adc
jg
cmp
inc
xchg
shr
mov
sub
cmc
rcr
add
cmc
stos
jmp
fstps
jno
pusha
or
lods
cwtl
and
and
mov
inc
jo
jle
jp
add
jbe
pop
cld
pop
test
pushf
pusha
cmp
sarl
notl
mov
sub
out
push
or
dec
data16
clc
sub
mov
inc
mov
add
sbb
jo
inc
pusha
mov
shlb
pop
loope
and
adc
mov
mov
aaa
stos
or
jp
aas
sbb
pop
pusha
sbb
inc
pop
test
pop
xchg
and
je
and
ljmp
sub
cmp
lret
inc
stos
out
xchg
js
pusha
adc
add
jo
mov
andl
push
sub
fcomps
int3
out
adc
jg
push
insl
test
xor
rolb
adc
adc
js
inc
jmp
js
loopne
adc
jg
leave
adc
out
repnz
add
or
dec
push
cmp
xchg
mulb
stos
add
hlt
ja
stos
adc
cmpsb
fcompl
add
push
pop
push
mov
push
mov
mov
pop
mov
push
mov
xlat
mov
add
sbb
mov
je
cld
dec
inc
mov
out
push
movsl
dec
and
enter
divb
xchg
add
js
loope
aam
notl
mov
loop
pop
out
xbegin
bound
lock
inc
mov
addb
inc
xorl
mov
movsb
incl
xchg
mov
or
or
mov
and
cmp
fnstenv
adc
xor
push
lock
inc
int
xchg
js
dec
addl
rorl
add
pop
and
sbb
pop
add
adc
dec
jl
jb
sbbb
mov
add
sub
dec
clc
call
push
in
jno
or
icebp
movnti
pop
dec
les
inc
and
sbb
imul
push
stos
lret
xchg
push
cld
mov
jecxz
inc
and
inc
and
out
dec
sbbl
popa
insb
lcall
xchg
arpl
sbb
add
push
and
add
sbb
sarb
lock
pop
pop
xor
test
and
xchg
or
pop
or
or
imul
sub
sub
adc
inc
aaa
dec
and
orb
or
cmpsb
mov
mov
call
and
and
cmp
das
cmpsb
in
es
sbb
sub
fs
mov
hlt
pop
push
or
dec
or
add
sub
loopne
test
ds
xor
xchg
ljmp
ja
lock
bndstx
lea
add
cmp
test
inc
push
jle
jmp
js
and
jecxz
add
fbstp
lock
mov
mov
add
and
adcl
jl
jbe
in
mov
call
mov
cli
cmp
jbe
insl
and
add
pushf
scas
ja
mov
rorl
sub
mov
mov
push
add
push
fcmovnbe
jp
mov
sbb
cltd
cli
push
fbstp
jp
addb
test
fimull
jnp
mov
add
add
push
push
push
outsl
xchg
push
or
push
pop
nop
cld
je
js
push
xor
loop
add
add
out
dec
mov
cmp
xorb
jo
lock
xchg
jo
and
xchg
push
xchg
movsb
jle
fcomip
fwait
popa
sbb
xchg
out
add
dec
cmp
mov
or
or
into
rorb
or
popa
clc
decl
cmpsb
in
flds
pop
sbb
xchg
rolb
mov
das
orb
push
arpl
cli
incl
mov
jo
and
push
xor
stos
or
ss
jmp
or
add
push
mov
inc
cmp
pushl
lds
sbb
pop
clc
sub
inc
ret
stc
cmp
incl
js
xchg
jle
out
pop
push
dec
nop
mov
xchg
imul
scas
xor
sub
xchg
or
xchg
shrb
fs
add
mov
dec
push
lahf
sbb
xchg
test
enter
fdivs
pushf
fwait
movb
lcall
cmc
fsubrs
jo
xchg
fwait
add
in
and
jg
stos
sbb
stos
movsl
add
lock
or
test
incl
sbb
cld
stc
or
pop
stos
fwait
pop
test
jg
and
sbb
scas
and
and
sub
mov
aad
icebp
push
adc
inc
mov
mov
ljmp
xor
pusha
xchg
nop
lock
fwait
idivl
movsb
incl
add
or
dec
sbb
sbb
mov
cs
lcall
sarb
lods
scas
sub
cld
xor
outsl
mov
pop
mov
sbb
push
mov
fwait
pusha
aaa
xor
cmp
adc
cmpl
call
mov
or
push
mov
xlat
rcll
push
push
es
sbb
jg
push
inc
mulb
scas
sbb
mov
push
scas
pusha
xlat
iret
sbb
nop
fwait
lret
xor
jg
sub
aas
and
pop
repnz
fldcw
add
fwait
add
daa
sbb
dec
jp
scas
jg
mov
out
lods
mov
fisttps
jmp
push
and
scas
xchg
mov
fst
sub
mov
imul
add
jg
movsb
sub
mov
in
push
or
add
fwait
inc
test
xchg
or
add
or
push
lret
inc
ja
scas
inc
ret
shlb
add
sbb
push
push
pop
lock
cli
adc
ja
adc
xor
adc
mov
xor
sti
xor
fcomi
cmp
mov
repnz
adc
jo
call
jo
loope
add
rolb
sbb
nop
or
rclb
add
fwait
mov
pop
and
and
orl
inc
cltd
xor
pop
lods
in
aam
dec
xlat
mov
mov
lahf
in
shlb
xchg
ja
andb
mov
sub
sub
jmp
jmp
add
out
sbb
lock
pop
mov
add
flds
rcl
add
mov
rorb
mov
negb
testl
scas
movsb
jmp
sbb
or
push
add
adcb
and
or
pop
xchg
mov
or
adc
scas
loopne
jmp
incl
xor
push
cmp
loopne
bound
and
ljmp
pusha
mov
add
push
adc
inc
adc
sbb
and
mov
and
inc
add
xor
add
lods
stos
je
jp
cwtl
xchg
sbb
decl
sbb
dec
lock
add
add
mov
dec
mov
jecxz
pop
cmp
sar
aaa
loopne
inc
rorl
mov
test
xchg
dec
xchg
test
mov
sub
jg
or
or
hlt
mov
div
xchg
sar
jg
js
cwtl
bound
fistpl
cmp
lock
lds
mov
rol
mulb
mov
jle
dec
fstl
popa
and
sub
lcall
push
xchg
or
xor
mov
cmc
xchg
dec
inc
aaa
or
sub
mov
xchg
or
or
sub
inc
sub
imulb
push
add
mov
sub
dec
add
adc
add
xchg
std
and
and
aaa
add
sbb
add
jbe
sbb
add
clc
add
in
or
stos
xor
sbb
mov
and
dec
and
or
or
xor
pop
call
jle
je
add
rcrb
push
inc
sti
decl
mov
xor
jecxz
sbb
inc
popa
or
pop
xor
jl
pop
sbb
and
cmc
pusha
xchg
adcb
mov
pop
lods
nop
mov
xchg
add
fwait
inc
cmp
jbe
cli
bound
sbb
pop
push
or
xchg
stos
inc
ja
add
movsl
out
mov
jb
mov
add
out
clc
pop
loope
mov
adc
push
sbb
add
pop
shrl
jae
and
bound
out
aas
or
inc
testb
sti
lcall
sbb
xchg
add
dec
add
testl
je
add
xor
cld
repnz
clc
es
push
int3
sub
push
add
sub
push
movsl
add
in
xchg
jbe
or
cmc
mov
mov
test
xor
xchg
aam
js
jp
out
out
xchg
sbb
inc
inc
mulb
imull
mov
xchg
inc
hlt
add
add
cmc
addl
mov
inc
push
mov
das
addb
aam
lods
out
andb
adc
dec
mov
and
popf
rorb
rorb
push
pop
je
cmp
xor
addb
mov
jle
cmp
mov
add
adcl
leave
rcll
inc
fldenv
or
adc
ret
sbbb
pop
inc
lret
or
int
lret
mov
add
nop
inc
inc
jp
addr16
adc
add
scas
clc
mov
mov
mov
orl
pop
add
sbb
dec
testb
add
dec
or
add
pop
sbbb
js
and
das
fdiv
pop
xchg
inc
jb
mov
xor
inc
aad
jmp
scas
add
pop
dec
add
or
aaa
imulb
inc
in
adc
jecxz
dec
in
inc
in
lea
fimuls
loop
shlb
rolb
add
add
aad
std
addl
adc
pop
and
pop
or
jbe
nop
addb
mov
mov
in
push
sub
sbb
push
cltd
roll
inc
jb
jo
mov
roll
in
or
outsb
or
orb
incb
ljmp
add
or
vmovups
rclb
add
and
or
mov
or
in
or
testb
push
jnp
add
das
mov
xor
add
jp
pop
lcall
scas
sub
inc
cmpsb
cli
xor
sbb
or
inc
cmp
loopne
add
js
jle
lret
inc
out
js
cli
pop
or
sbb
pop
xor
icebp
subl
or
xchg
or
add
push
fimuls
add
adc
xor
repnz
imulb
add
jp
inc
jmp
negl
cmp
das
testl
dec
sbbl
aas
inc
push
pushf
ret
jbe
icebp
inc
mov
xor
insb
pop
sub
adc
lods
add
loop
xor
lock
sub
sbb
adc
inc
insl
test
jbe
mov
xchg
xor
ret
aaa
sbb
ss
stos
adc
loope,pn
xchg
hlt
sbb
add
clc
add
pusha
add
je
mov
in
mov
inc
xor
dec
jbe
pusha
into
cmp
add
xor
in
out
push
or
jp
push
dec
es
or
inc
in
jbe
jo
subl
loopne
dec
or
mov
orb
gs
jbe
fwait
lock
cmc
or
cmpsb
pop
and
inc
loopne
jl
mov
adcl
adc
mov
jle
cmp
mov
popa
sar
or
or
add
add
pop
xor
out
add
push
jp
and
and
hlt
out
fcomps
sub
push
ljmp
sub
and
jmp
fwait
or
data16
test
sbb
and
jge
inc
and
mov
mov
pop
add
mov
push
mov
test
and
das
loopne
cld
aad
add
jnp
or
ficoml
pusha
and
jbe
inc
addb
shll
scas
pushf
pop
outsl
mov
jmp
sub
mov
sbb
in
and
call
and
jle
inc
pusha
mov
pop
ss
das
aam
push
jae
mov
outsb
out
inc
roll
add
add
jmp
mov
sub
adc
loopne
addr16
add
pop
or
adc
push
in
xor
add
outsb
imul
addb
push
mov
xor
mov
pop
jmp
inc
pop
rcrb
leave
add
addl
aam
ret
mov
inc
sbb
mov
sbb
loop
mov
push
sbb
pusha
push
adc
sub
mov
add
or
jle
hlt
jle
xchg
mov
inc
jle
mulb
mov
shlb
aam
nop
stos
ss
mov
aad
mov
jo
xchg
pusha
adc
jb
fisubl
pushl
mov
enter
jb
popa
jb
xchg
jo
divb
loopne
push
incl
jae
jno
rclb
and
add
shll
aas
cwtl
je
incl
cmpsb
pop
stc
dec
leave
rclb
icebp
push
sbb
add
mov
add
or
decl
mov
in
jo
icebp
push
inc
pop
cmpsb
in
out
add
mov
lds
loopne
add
lock
mov
inc
sbb
cli
outsb
mov
bound
das
in
insl
adc
jo
mov
add
xor
lret
lea
fsubrs
lret
mov
in
out
jo
lcall
out
clc
fildl
mov
pop
mov
dec
inc
adc
aaa
insl
jmp
pop
sbb
and
and
pop
adc
dec
push
xor
xor
push
add
push
add
sub
mov
mov
lret
dec
mov
and
jnp
icebp
gs
data16
cld
aaa
daa
decb
or
xchg
pusha
and
mov
add
add
adc
fildll
mov
pop
cmpb
mov
or
push
cmp
clc
push
pop
mov
mov
mov
xor
or
sub
lcall
mov
jno
jo
icebp
jp
mov
psubsw
ds
jle
cmp
and
add
pop
sarb
data16
fcoms
push
xor
and
dec
pop
lock
add
or
push
test
movsb
push
mov
fisubrl
pop
cmp
push
adc
add
rolb
xchg
add
aaa
add
sbb
cld
notl
jne
push
je
and
dec
ja
add
dec
stos
add
add
xacquire
add
sbb
push
push
shr
mov
into
into
fwait
ss
xchg
pop
into
sti
inc
add
lds
mov
jo
cmp
roll
inc
mov
fisubl
adc
inc
pusha
jno
adc
rcll
incl
cld
sub
test
inc
rolb
add
mov
cli
fs
or
mov
repnz
in
pusha
dec
adc
and
sbb
xchg
lock
mov
mov
add
dec
in
sbb
stc
pop
ljmp
push
dec
or
int3
mov
add
mov
rorb
push
decl
inc
popa
ficoml
xchg
add
jo
pop
roll
xchg
std
lcall
inc
lahf
mov
add
adc
push
lahf
sub
lahf
sbb
in
sbb
adc
push
or
fsubrs
sbb
dec
jecxz
scas
sahf
inc
add
pop
push
add
and
add
in
dec
mov
xchg
jb
pop
lret
incb
movsb
shll
push
mov
xchg
add
or
ss
aad
or
addb
cmp
mov
outsl
sbb
xor
movsl
repz
sbb
inc
loop
std
mov
sbbb
sub
adc
xor
lock
sahf
and
sbb
xchg
hlt
jecxz
xor
push
les
add
jg
int
and
sti
xor
adc
sub
adc
test
pop
cld
je
cld
mov
js
or
inc
mov
adc
or
aas
xor
icebp
fisttps
std
or
lea
pop
push
arpl
or
push
adc
add
icebp
add
cmc
nop
test
rorb
or
xchg
sbb
test
pop
dec
test
out
enter
pop
adc
cmpsb
push
negb
sbb
push
andb
add
dec
xor
xchg
sbb
sbb
shrb
hlt
data16
fbstp
jb
mov
push
jg
pop
mov
int3
test
icebp
xchg
adc
add
push
add
push
push
or
mov
mov
add
int
outsl
hlt
mov
xor
sub
push
mov
sbb
pop
mov
shlb
inc
add
sub
cmc
or
or
xchg
jmp
scas
mov
es
adc
or
add
adc
cmp
add
inc
sbb
push
ret
leave
mov
sbb
pop
nop
xchg
dec
test
incb
sbb
xor
xor
addb
mov
sub
pop
mov
gs
push
bound
push
icebp
jg
sub
sub
cli
jnp
and
add
int3
les
mov
cmpb
cmp
and
jnp
add
in
sarb
ja
mov
bound
outsb
adc
adc
mov
outsb
std
shrb
rorb
jns
jns
xor
shl
inc
testl
xchg
sub
adc
outsb
mov
or
loopne
sar
add
jle
ret
ljmp
rcrb
and
cmpsb
or
movsb
inc
cmp
lock
andb
jnp
ret
add
xor
sub
adc
cltd
cmc
rolb
add
loope
inc
aad
add
repnz
jae
icebp
sbb
ljmp
xchg
and
push
add
add
lcall
pushf
inc
notl
sbb
cltd
lock
add
xor
add
mov
hlt
jg
push
pushf
sbb
xor
repnz
pushf
sahf
xor
cli
pop
call
cmp
repnz
fistps
inc
nop
int3
xchg
dec
sub
jno
mov
sbb
std
sub
xlat
lock
dec
es
ds
ljmp
adc
dec
jnp
icebp
loop
add
rolb
sbb
add
sbb
js
stos
into
repnz
icebp
pop
outsl
sbb
dec
and
xchg
add
push
add
loopne
adc
mov
lldt
in
js
rorb
jmp
lcall
adcb
mov
pushl
or
add
xor
pop
adc
or
movsb
js
rcrl
or
bound
js
fwait
rclb
lahf
fmuls
sub
enter
cld
adc
stos
mov
lea
sbb
push
mov
fadds
test
mul
std
mov
mov
xchg
mov
out
icebp
xchg
cmp
mov
sbb
push
popf
push
test
and
loop
cmc
ljmp
mov
int3
adc
xchg
add
adc
jo
pushl
push
out
xor
fiadds
out
push
sub
fucomip
inc
mov
dec
cld
addl
adc
mov
pop
scas
mov
loope
ret
mov
jp
aas
sbb
jns
pop
cmc
mov
add
adc
add
jo
test
pop
inc
arpl
data16
divb
push
into
mov
dec
mov
cli
xor
lock
pushl
data16
jo
enter
loopne
ja
pusha
pushf
sub
jbe
ds
decl
inc
xlat
fisttps
js
fwait
pusha
fdivrs
clc
pop
fldt
push
adc
cmp
add
sub
push
bnd
jge
push
test
push
jb
aam
mov
enter
aaa
dec
push
fcomps
lcall
adcb
ljmp
popa
js
imul
test
ret
add
jl
das
mov
or
cmpsb
add
jecxz
xor
jle
lock
stc
xor
xchg
scas
inc
stos
jb
push
pop
adc
or
cmp
xchg
or
ficoms
dec
jle
mov
push
add
and
loopne
push
jle
shrb
or
cmp
jecxz
daa
arpl
mov
pop
ja
fs
sbb
xchg
loopne
mov
and
mov
out
mov
add
mov
jbe
xor
xor
pop
mov
mov
movsl
pushl
mov
mov
icebp
cmpsb
addb
sahf
add
jg
jbe
inc
sti
mov
xor
out
or
roll
inc
add
mov
jp
add
repnz
xor
mov
mov
jbe
psllw
sub
jle
addb
pop
ret
test
sub
mov
addb
icebp
mov
inc
add
out
in
rcr
jg
je
xchg
adc
sub
test
in
test
and
outsl
jb
cmp
andb
daa
mov
xchg
std
in
jg
sbb
xor
mov
cmpl
jo
andl
inc
or
add
xchg
jae
and
jb
jo
mov
nop
push
cmpsb
inc
pop
ret
gs
clc
mov
sub
and
add
js
pushw
add
or
and
call
addr16
push
fmuls
cmp
inc
arpl
or
mov
or
in
and
mov
xor
add
xchg
add
xorl
mov
fs
arpl
arpl
inc
out
and
mov
sub
add
mov
mov
nop
or
clts
arpl
dec
loop
mov
and
adc
adc
sub
sub
xchg
popa
mov
cmp
push
add
inc
jl
rclb
js
and
jge
inc
adc
mov
sbb
xchg
push
inc
or
mov
rolb
push
push
sbb
mov
clc
adc
ds
movsl
out
pushl
inc
sbb
jmp
cld
sub
jecxz
and
out
jmp
rcll
test
sti
sarb
mov
mov
xchg
addl
push
inc
shlb
pop
dec
add
or
adc
sbb
adc
lret
jbe
sub
shrb
js
add
sbb
cwtl
call
sub
push
js
mov
mov
jo
add
sbb
icebp
fcomip
aaa
mov
sbb
pusha
jno
repnz
add
xor
sbb
out
push
jns
pusha
subb
xor
cmpb
jg
cmp
into
inc
ljmp
jns
push
cmp
and
or
push
ljmp
xchg
jae
int3
cmpsb
push
push
cld
or
pusha
rcll
mov
ljmp
dec
je
fidivs
push
jo
xor
outsl
decl
sbbb
mov
loopne
inc
mov
add
mov
roll
sub
jmp
jae
sbb
dec
fwait
sar
fildll
add
aas
dec
rclb
or
or
es
fsubrs
enter
scas
insl
push
jnp
jmp
mov
and
loop
popa
lods
push
imul
bound
mov
jo
jp
mov
and
sti
xchg
add
push
sbb
out
xchg
add
lods
jp
mov
mov
mov
and
pop
mov
jnp
mov
xor
xchg
mov
add
mov
mov
roll
cmc
sbb
add
sarb
call
pop
xor
sub
addb
aas
jmp
add
gs
cmp
inc
gs
fildll
mov
iret
loopne
imul
mov
pop
mov
js
xchg
cs
ljmp
inc
mov
js
jle
lock
ljmp
dec
and
jo
or
ljmp
aam
movsb
push
and
cwtl
cmpsb
shrl
push
out
inc
pushf
clc
mov
out
push
loopne
jbe
out
dec
pusha
int
and
sbb
pop
adcb
or
and
sarl
add
and
cmp
add
sbb
adc
lea
inc
mov
inc
lahf
loopne
loop
sar
decl
xlat
mov
mov
xchg
int
addb
add
xchg
lock
jg
addb
mov
adc
rorb
inc
pusha
or
inc
pusha
xor
xchg
scas
out
inc
mov
dec
jp
mov
jno
adc
add
push
or
stos
cmp
adc
imul
dec
nop
test
test
lods
add
push
or
xchg
pop
or
xchg
push
sbb
or
mov
cli
jb
pop
jp
test
dec
cli
add
outsl
cli
mov
mov
js
xchg
dec
cmpsb
addb
out
sbb
jno
add
dec
xorb
sbb
incl
data16
cli
mov
arpl
xchg
lret
mov
js
lahf
dec
inc
add
in
xchg
dec
testl
add
mov
sbb
and
pusha
cmp
cmp
xchg
fildll
clc
pop
mov
mov
jo
and
or
out
adc
xor
ljmp
push
or
sbb
adc
jne
lock
mov
jo
jo
adc
cmpl
jmp
xchg
cmp
sub
lahf
ret
ljmp
push
shll
cld
jne
add
jp
lock
and
mov
aad
cmc
inc
sbb
dec
out
hlt
cmp
jno
adc
nop
cmp
movsl
sbb
xchg
push
jnp
xor
jns
leave
mov
mov
and
mov
sbb
or
sbb
inc
inc
mov
sbb
repnz
sbb
bound
mov
jge
lret
roll
cld
inc
pop
stc
sub
jp
push
fadd
push
loope
sti
pushl
rolb
leave
mov
mov
repnz
and
sub
inc
sbb
mov
jg
jg
sahf
xchg
jb
add
mov
sub
fcomi
aaa
std
add
pop
sbb
insl
inc
push
loopne
push
jmp
adc
push
cli
mov
lahf
push
sbb
sbb
mov
push
adc
hlt
das
aam
in
sbb
rolb
loop
mov
adc
and
loop
push
int
xchg
faddp
xor
jge
incl
sbb
rorl
xchg
add
sti
adc
loopne
jo
pop
lock
ret
push
mov
inc
push
inc
mov
lret
sahf
mov
mov
jp
mov
and
outsl
mov
xor
imull
repnz
or
mov
cmp
xchg
jg
sti
test
shlb
jp
inc
scas
enter
inc
add
dec
fdivl
sbb
pop
lock
lock
mov
adc
mov
or
pop
hlt
outsl
add
xor
xor
adc
js
add
ljmp
inc
xorb
xor
mov
or
add
xchg
or
adc
insb
pop
cld
jbe
and
sbb
bound
push
push
mov
inc
hlt
mov
push
or
jg
add
sbb
and
or
sti
sbb
adc
ret
pop
pop
sub
scas
addb
sbb
mov
andb
or
out
clc
push
sti
negl
push
inc
add
dec
add
imul
icebp
add
cmpsl
add
sbb
hlt
add
sbb
pusha
add
jo
adc
push
add
inc
sbb
sbb
fildll
insb
jae
jo
inc
mov
or
jg
sti
or
mov
jne
cmpsb
mov
incl
or
into
jbe
subb
call
xchg
into
aam
shl
push
jne
lock
fisubrl
je
data16
dec
mov
pop
fisubs
mov
aas
sub
xor
enter
fmull
mov
ss
pop
or
outsb
clc
dec
std
mov
adc
rolb
jle
dec
mov
push
mov
pop
lock
in
fildll
add
add
test
into
push
stc
and
mov
add
outsb
mov
or
sub
add
insl
shrb
mov
xchg
jb
pop
ret
jnp
add
aam
movsb
mov
incb
into
push
mov
jno
stos
pop
addl
mov
aaa
rcrl
adc
or
cmp
mov
adcb
adc
int3
jne
clc
xor
add
adc
adc
push
cld
cmpsl
jge
inc
add
dec
add
dec
push
pushf
loope
insl
inc
add
cmpl
add
sbb
dec
imul
test
push
fwait
add
enter
and
das
outsb
jbe
mov
js
not
sbb
inc
les
cmp
movsl
add
and
mov
hlt
filds
lock
sbb
mov
mov
add
mov
inc
movsb
add
cmp
movsl
incl
add
imul
add
inc
or
sti
or
mov
add
and
lock
jg
xchg
dec
lock
mov
fisttps
dec
jae
mov
and
nop
fldl
jno
fiaddl
pop
clc
outsl
nop
cmp
cmp
add
xchg
pop
ljmp
sub
andb
jo
or
scas
pop
les
les
cmp
outsb
enter
repnz
incl
sub
or
xlat
mov
add
add
sbb
add
add
pop
int3
mov
jo
inc
rolb
push
xchg
mov
cld
pop
cld
sbbl
icebp
adc
nop
lods
and
push
cmp
add
xor
xor
mov
les
dec
lcall
mov
push
lock
or
add
mov
sub
bound
sti
xor
or
lods
mov
mov
rorb
lds
enter
or
cmp
hlt
mov
adc
pop
fs
dec
ja
aas
jo
sbb
jb
ror
mov
fcmovnb
add
fildll
sub
movsl
je
jecxz
push
xor
sbb
push
xlat
or
xor
cld
push
ljmp
add
mov
adc
lock
mov
cmp
add
test
sub
pop
inc
jnp
in
and
adc
add
jns
icebp
push
hlt
add
repnz
xchg
jg
push
sub
mov
jb
orl
or
orl
sldt
incl
xchg
movsb
pop
sbb
adc
add
leave
dec
dec
xor
lods
sbb
push
add
lcall
mov
and
inc
adc
mov
mov
aam
adc
or
adc
pop
aas
mov
lcall
orb
cmp
addb
aaa
shll
or
mov
sbb
or
scas
unpcklps
rclb
jmp
mov
adc
or
ror
add
add
sub
pusha
rcrb
inc
push
xchg
dec
xorb
pop
dec
pusha
and
jl
rclb
inc
mov
add
and
adcb
inc
pop
ret
gs
andl
push
and
xchg
jno
icebp
xchg
sbb
pop
bound
in
jl
add
in
sbb
das
clc
ljmp
add
or
rolb
xor
clc
ret
xor
xlat
add
and
test
xor
mov
xor
lcall
push
or
sbb
add
cmpsb
test
adc
xor
ljmp
and
and
cli
inc
or
insb
rorb
adc
xorl
les
movsb
bnd
sti
in
lret
push
enter
adc
pop
inc
xchg
rolb
mov
pop
icebp
push
sbb
out
lahf
sub
lahf
cmpsl
cmp
push
inc
or
outsl
ljmp
incb
xor
push
xchg
ret
push
dec
lahf
fists
and
loop
add
loopne
ret
push
and
add
addr16
xchg
loope
or
outsl
cmp
sarl
push
fiaddl
mov
mov
pushl
rorl
mov
push
enter
int
arpl
and
mov
inc
rclb
cmp
or
addb
adc
ja
into
repz
inc
push
pop
sbb
sbb
push
sbb
jo
add
mov
adc
imul
loopne
jecxz
jmp
sbb
loopne
popa
popf
icebp
ret
js
mov
pushf
sbb
call
ret
loopne
movsb
add
loop
pop
mov
jae
popa
pusha
cltd
pinsrw
dec
mov
inc
push
and
aaa
xor
into
test
push
add
or
aaa
dec
in
movsl
dec
cmp
arpl
xor
outsl
mov
jo
into
mov
dec
dec
jb
loop
jp
push
sub
push
loopne
std
cmp
dec
add
pusha
add
add
lock
pop
shl
or
cmp
sbb
data16
mov
rcrl
mov
xorb
jo
dec
push
incl
pusha
nop
test
jle
movsl
out
ret
add
add
and
add
mov
cmpsb
ret
adc
fdivrs
pop
test
out
in
in
testb
xchg
sbb
jns
repnz
and
inc
repz
mov
lea
icebp
add
and
sub
add
sub
sub
cmp
jecxz
inc
xchg
jbe
loopne
or
add
cmp
stc
and
sbbb
pop
and
adc
xchg
and
or
mov
xchg
sbb
and
scas
lea
sbb
xchg
popf
dec
stc
xchg
mov
adc
or
and
or
hlt
and
outsl
fwait
lock
rorl
push
popa
cmp
push
jl
or
sbb
xor
or
push
add
fcomip
int
movb
mov
inc
or
sbb
fstl
adc
and
add
dec
mov
dec
testb
push
adc
jg
sbbb
ja
aaa
add
and
outsl
cmp
jg
incl
push
fdivrs
and
pusha
adc
push
lcall
loopne
add
mov
inc
test
pop
mov
jo
out
fisubrl
xor
mov
jns
mov
adc
mov
mov
add
sbb
mov
mov
std
ja
add
psubusb
and
or
xchg
jg
in
mov
gs
cmpsb
mov
inc
pop
xchg
pop
pop
sti
mov
add
test
dec
add
inc
add
inc
add
dec
inc
jg
add
push
add
mov
push
jne
popa
adc
js
outsb
pop
mov
xor
mov
add
decl
cli
aaa
les
hlt
mov
out
add
mov
movsb
stos
pushl
loope
jmp
add
cmp
movsl
jno
out
shll
enter
cld
incl
filds
inc
ss
mov
pop
push
mov
sbb
fdivrs
add
fdivr
jmp
enter
js
sub
xchg
xchg
xor
ffree
push
shlb
pop
pop
int3
xchg
mov
and
std
lds
sub
push
rorl
add
shlb
lock
inc
sar
incl
or
sbb
or
out
jo
push
jle
cmpl
xorl
call
sbb
and
aad
cmp
xchg
mov
add
mov
dec
push
and
sbb
mov
sub
fdivrl
xchg
andb
sub
mov
or
sbb
mov
sbb
or
adc
and
mov
or
sbb
xor
bound
inc
mov
push
adc
dec
xor
adc
call
mov
daa
out
push
js
add
cmp
add
cld
jle
dec
or
mov
movsl
movl
adc
adc
test
adc
adc
sarl
insb
ja
xor
add
sub
jae
sbb
push
and
or
xor
stos
jl
push
sub
outsb
dec
pop
ss
loopne
xor
dec
in
jns
clc
push
xor
pop
jmp
mov
movsl
sub
shrb
mov
adc
rol
xor
hlt
lock
sarb
jbe
sahf
lock
lock
sbb
sub
lock
inc
or
notl
lock
and
decb
or
jg
xor
xchg
adc
imulb
pop
sahf
mov
or
xor
mov
pop
hlt
shlb
jmp
inc
arpl
ljmp
and
mov
mov
mov
adc
push
mov
stos
and
cmpsl
ss
loope
xor
inc
push
or
or
adcb
cmp
push
jo
clc
imul
sub
dec
mov
icebp
lods
sub
fwait
push
push
fwait
mov
jb
and
jb
pop
cmc
mov
mov
mov
add
rcrb
sarb
les
cmp
add
or
loopne
mov
or
jge
push
dec
or
xor
mov
cltd
xchg
ja
call
sbb
nop
add
jle
ja
adc
data16
jle
mov
jmp
js
mov
adc
lock
lock
lahf
and
or
or
rorb
xchg
or
cli
addl
out
add
clc
jp
xorl
sbb
cld
add
pop
fdivrp
mov
pop
es
jp
adc
xor
movl
adcl
push
popa
test
sub
jno
dec
jg
les
jecxz
iret
add
pop
add
adc
js
jg
mov
call
ret
add
mov
add
pop
cmp
fs
and
incb
sti
mov
jb
add
and
add
les
or
and
and
mov
or
push
pop
bswap
mov
sub
adc
lods
out
push
sbb
sbb
out
xchg
fiaddl
add
loop
push
out
mov
jp
insb
into
movsl
mov
nop
adc
sub
outsl
jg
mov
xchg
mov
add
or
and
inc
sti
pushl
adc
add
push
dec
in
add
sub
lock
jp
or
inc
push
aam
mov
mov
js
repnz
clc
bound
mov
idivl
fwait
or
add
or
jge
jg
push
bound
sbbb
jb
jle
jo
movsb
sti
xchg
sarl
testl
shrb
add
enter
add
stos
inc
adc
rolb
sub
sub
stos
xchg
jo
xchg
inc
jp
sub
pop
out
xchg
add
jo
pop
sub
dec
test
addl
push
and
loop
pop
or
and
xchg
insb
outsl
or
mov
adc
xor
push
jne
sub
and
and
ret
sbb
add
int3
cmp
lods
loope
pop
lret
push
pop
or
jne
rclb
xor
ljmp
imul
andl
sbb
and
jmp
sub
testl
mov
xor
outsl
lock
es
lock
jg
xor
add
cmp
mov
sub
add
jp
mov
sbb
sub
cld
sbb
clc
jle
jle
push
mov
sbb
shrb
add
cmp
sub
cltd
or
jbe
sbb
lods
flds
xchg
mov
push
shll
scas
push
mov
jns
idiv
xchg
lock
xchg
call
or
adc
push
ret
cmpsb
rcll
js
mov
add
mov
repnz
inc
subl
into
ljmp
mov
ret
idiv
int3
xchg
xchg
shll
jne
mov
jp
inc
inc
and
inc
mov
jl
and
jp
mov
jle
inc
mov
nop
sub
pop
sarb
jg
lock
mov
lds
xchg
or
ret
sbb
adcb
iret
pextrw
or
fs
orl
data16
ret
mov
sbb
push
bound
cmp
jle
adc
imul
pushl
sti
decl
inc
sub
pop
lock
pusha
cltd
loopne
adc
js
pop
pop
mov
add
call
pusha
outsb
sbb
or
nop
addl
or
sarb
in
ljmp
push
mov
lods
lahf
and
cld
push
test
mov
and
dec
pusha
push
iret
inc
mov
and
adc
add
pop
pusha
outsl
push
xchg
adcb
in
andb
sbb
push
inc
and
sbb
lock
mov
scas
cwtl
cld
jne
fisubl
or
ret
and
lock
xchg
ljmpw
decl
jmp
cmp
and
sub
push
pushl
push
fdiv
and
shlb
mov
or
xchg
mov
or
es
dec
add
fcmovb
scas
push
cld
incl
sarb
adc
and
call
mov
test
outsl
insb
mov
adc
xchg
inc
or
addb
sbb
add
add
adc
sbb
jle
inc
push
aad
or
insl
in
pusha
popa
add
push
push
mov
add
cld
dec
in
pushl
addb
and
sub
pop
and
test
stos
lds
int
incl
sarl
or
cmpsb
test
ss
mov
fldt
cwtl
or
xor
and
push
or
popa
jb
xlat
mov
and
lods
insl
pop
jo
js
inc
cmp
jb
jno
push
mov
or
btr
movsl
and
xchg
inc
add
push
out
loopne
add
sbb
push
lahf
add
mov
xchg
inc
in
adc
shrl
call
or
jno
incb
add
mov
push
cmp
fs
sbb
or
pushl
je
xorb
hlt
adcb
or
and
inc
cmpsb
push
push
inc
mov
enter
jg
lret
jbe
inc
add
xchg
std
mov
xchg
into
jno
pop
push
add
xor
jo
idivb
and
imul
fisttpl
jle
dec
mov
cld
push
add
sbb
aam
pop
push
addb
sub
mov
xchg
mov
andl
rolb
mov
pop
sbb
mov
scas
lahf
cli
das
faddl
push
dec
mov
mov
sahf
shll
mov
mov
les
cmp
push
and
mov
adc
outsl
dec
xor
xor
and
adc
cltd
or
pop
xchg
cmc
arpl
adc
mov
ss
xchg
mov
adc
fcomps
imul
jno
sbb
or
or
fisubs
cmp
adc
sbb
push
cmpsl
cmp
out
inc
cmpsb
lock
jo
or
ss
adc
xor
push
cmp
and
fcmovnu
xchg
inc
sub
add
push
xor
stos
jns
fildll
xor
cs
cmp
add
or
or
push
movsl
add
and
push
repz
jl
jo
pop
adc
xchg
xor
repz
lahf
idivb
xor
stos
adc
pop
or
pop
sub
sarb
adc
push
or
ficompl
rorb
cltd
push
add
lock
cld
in
int
or
push
sub
adc
mov
and
add
add
mov
and
add
cmp
jmp
xchg
inc
push
xchg
inc
adc
loop
dec
mov
fcmovu
fldenv
jae
js
push
mov
fwait
and
mov
sub
and
movsb
add
sbb
mov
mov
cmpsb
jge
bound
ret
push
push
lahf
push
loop
shl
sub
xadd
mov
mov
mov
push
add
or
pusha
and
jo
or
add
pusha
push
bound
cmc
add
add
jne
sub
lods
sti
pop
test
push
divl
aad
push
jmp
cmp
sbbb
addr16
pop
push
shlb
mov
add
mov
test
cmp
and
movsl
rorb
jge
cmp
xor
mov
or
sub
pusha
add
adc
testb
mov
hlt
cltd
and
pusha
fwait
adc
push
stos
addb
add
int3
or
xor
clc
push
jne
add
add
dec
add
push
adc
add
mov
push
mov
adc
or
imulb
mov
add
mov
adc
fstpt
js
rcr
dec
in
or
lahf
fbld
add
es
mov
mov
pop
cmc
sbb
aaa
inc
xor
mov
out
lret
and
push
nop
mov
popf
bndldx
lock
sbb
add
filds
cmp
rolb
or
sbb
rolb
cmp
or
sbb
lock
out
ljmp
add
cmp
lock
xor
idivb
or
mov
jno
mov
jnp
mov
push
call
sbb
add
pop
jl
pop
out
jbe
adc
mov
add
add
cli
in
out
loope
sub
add
sbb
shll
add
mov
dec
fisttpl
xchg
aad
stc
xchg
out
rcrl
add
fcoml
sbb
js
push
and
insb
mov
inc
and
aaa
mov
jbe
xchg
add
repnz
jp
add
in
push
push
jp
dec
add
mov
ss
push
pusha
js
out
add
lcall
lock
jp
jae
cmp
jg
sub
xchg
sub
push
add
mov
and
negb
cmp
add
mul
icebp
js
rorb
cmp
mov
dec
lret
fisubrl
mov
add
bound
outsl
clc
nop
xchg
xchg
jbe
and
jo
mov
les
add
and
or
or
sub
mov
and
jnp
mov
mov
xor
add
insb
and
and
outsl
adc
sti
sbb
jp
addl
xchg
add
mov
repz
out
jo
hlt
mov
add
nop
push
lock
test
jae
decl
xchg
nop
push
int3
js
es
mov
aaa
adc
fnstsw
mov
cwtl
idivb
xchg
inc
loopne
add
out
or
xor
mov
into
adc
jp
mov
test
push
stos
adc
push
sub
jnp
jle
ret
addl
lcall
icebp
subb
and
rclb
or
jo
movsb
cmp
mov
add
dec
sbbb
negb
test
cmp
or
sbb
jo
or
rcrb
fs
test
sar
adc
xchg
rorb
rorb
inc
mov
outsb
and
loope
clc
pop
jp
mov
enter
rorl
sar
testb
xchg
or
dec
mov
roll
and
inc
ja
add
pop
adc
add
idivl
or
xor
and
inc
or
pushl
incl
cmp
xor
mov
cmp
repz
jo
sub
jg
out
pop
fwait
js
enter
add
jo
sbb
shl
pushl
push
or
loope
jle
ret
fsubs
rorb
xchg
adc
scas
jg
pop
rorb
test
jns
jg
sbb
leave
test
add
out
dec
jb
jns
push
sbb
push
pusha
dec
xchg
fs
andl
and
lcall
cmpsb
inc
add
mov
add
ror
sbb
push
bnd
mov
sub
or
shr
les
xchg
ud0
pop
sbb
inc
add
dec
pop
sbb
inc
sbb
add
outsl
out
lret
add
ja
push
xor
mov
jnp
mov
cs
bound
popa
add
inc
pusha
sbbb
adc
dec
lret
cld
xchg
aam
test
lods
mov
lea
add
xor
push
add
adc
nop
adc
enter
lcall
js
add
xor
jecxz
pop
and
mov
and
insb
lret
mov
push
mov
jae
or
xchg
adc
xchg
add
add
sar
fbld
aam
cli
jae
stc
xchg
add
test
loop
dec
mov
fwait
lret
xchg
nop
or
lods
add
add
and
xorb
fdivrl
test
out
enter
fadd
xor
outsl
outsl
or
cmp
sbb
or
orl
repnz
add
push
push
orps
add
cmp
adc
roll
in
mov
pop
scas
arpl
jp
or
xchg
ds
xchg
mov
clc
adc
lret
xchg
dec
push
mov
cmp
pop
into
jmp
pop
and
adc
jl
add
out
addb
jg
mov
cld
xchg
jge
inc
add
loop
sbb
or
mov
lock
call
xor
xchg
sub
pop
outsb
jbe
sub
mov
mov
add
aas
jl
adcl
cltd
ret
lock
cltd
add
jns
adc
lods
xchg
push
mov
push
stos
pop
mov
inc
arpl
hlt
sbb
sbb
int3
dec
add
into
roll
loope
addr16
stos
in
divl
pushl
dec
add
xorb
dec
out
loop
sub
push
push
xchg
movsb
loop
or
loop
js
filds
dec
add
mov
out
or
xchg
movsb
test
inc
xor
sti
and
subb
stos
inc
sarl
mov
add
mov
cmpsb
cli
stc
xor
inc
or
push
negl
jns
pop
adc
push
add
or
sarb
lret
les
xchg
shrl
shlb
js
rcrl
adc
xor
push
add
movsb
lock
stc
mov
stos
push
shlb
or
mov
testl
xchg
and
inc
shl
scas
jo
mov
add
mov
arpl
jnp
pop
rcll
jp
add
clc
mov
lock
or
dec
dec
mov
xor
and
xchg
sbb
fimull
and
stc
push
push
add
test
push
sbb
ficompl
popa
mov
push
or
mov
test
add
adc
cmpsb
xchg
call
adc
sti
out
pusha
cmp
imul
nop
outsl
add
inc
add
add
adc
sbb
sub
jbe
push
mov
je
fsubrs
adc
and
out
add
sbb
push
adc
or
ret
aam
push
sbb
fcompl
adc
mov
inc
sti
sbb
cmp
xor
sbb
and
jmp
adc
scas
adc
dec
rorl
loopne
and
or
cs
mov
scas
adc
sbb
lock
sti
or
sti
jo
test
add
jg
ljmp
adc
add
mov
test
roll
insl
enter
ror
or
imul
xor
sbb
pop
xchg
mov
push
dec
and
pop
or
loopne
hlt
push
cmc
mov
dec
fwait
loope
adc
test
sub
or
pop
inc
daa
ds
hlt
rolb
lods
cld
andb
cmp
mov
popa
sub
arpl
jp
scas
and
mov
push
out
and
shrb
fnstsw
ret
mov
cmp
and
mov
add
fildl
nop
sub
mov
loopne
xorb
mov
das
sbb
mull
imul
push
das
mov
scas
sub
cmp
xchg
adc
push
fsts
add
xchg
outsl
or
or
test
and
movsb
inc
cltd
mull
xor
dec
insb
das
mov
scas
xor
insl
movsl
mov
push
popa
push
cld
push
push
aas
and
movsl
js
cmpb
push
mov
add
repnz
sbb
adc
jno
fcoms
incl
and
and
in
rcrb
decl
adc
pop
loope
inc
sub
jle
call
insb
insb
pop
dec
lods
pop
pop
pop
mov
cld
xchg
add
das
repnz
xor
lods
add
aam
mov
test
jnp
add
outsl
clc
push
cld
scas
add
scas
push
mov
cmp
xor
aaa
jecxz
dec
jle
ss
popa
movsl
add
add
jns
lret
cs
addl
idivb
mov
cmc
adc
inc
push
pop
xchg
aad
adc
add
in
std
cmc
sbb
add
jle
cmp
aad
cmpsb
mov
push
aam
and
hlt
add
pushf
inc
test
mov
and
repnz
mov
test
and
fs
inc
dec
ljmp
std
gs
inc
scas
stos
adc
ja
push
sub
xchg
sub
mov
dec
adc
movsl
and
cs
add
mov
lods
loopne
mov
dec
popa
inc
mov
sub
ret
inc
jo
test
jle
repnz
inc
cmp
movsb
adc
cwtl
ret
test
icebp
mov
and
fdivl
fsubs
xchg
rcll
es
inc
mov
bound
mov
cltd
sbb
ret
jl
mov
shlb
js
jecxz
add
or
cli
xor
cli
pop
divb
xchg
and
add
fimull
test
dec
clc
push
mov
dec
aas
sub
inc
scas
incl
mov
lcall
in
test
mov
arpl
lret
or
pop
xchg
outsb
aaa
jg
or
xor
pop
mov
jb
or
sub
push
cmc
lcall
and
pop
adc
pop
mov
inc
in
xorb
inc
or
or
outsb
clc
sbb
jo
xor
inc
sti
mov
mov
add
fisttps
dec
jecxz
adc
or
hlt
sub
sub
sahf
jo
push
insl
jecxz
jecxz
inc
add
loop
adc
rcrl
mov
dec
cmp
sub
and
and
dec
mov
pop
xor
sti
sarb
jb
adc
or
rolb
fsub
stos
ljmp
mov
ja
xchg
xor
cmp
push
enter
icebp
js
inc
add
mov
sub
movsl
lock
mov
jb
jo
out
in
dec
fwait
icebp
jg
dec
or
adc
or
xor
call
push
inc
addb
decl
fisubl
int3
sbb
mov
orb
movsb
inc
push
test
mov
fisubl
test
xor
xlat
pusha
add
push
mov
adc
jns
cli
cmp
das
mov
scas
pusha
add
loop
and
mov
dec
or
lret
xchg
inc
mov
incl
dec
mov
lods
repnz
sti
jle
cltd
out
mov
es
jle
pushl
jmp
adc
dec
dec
icebp
sbb
jle
pop
cmp
cmovle
dec
add
pop
imul
es
and
scas
mov
dec
adc
call
mov
mov
aad
mov
push
or
jg
and
aaa
and
es
add
or
dec
testl
push
jo
clc
add
or
mov
or
mov
in
inc
scas
and
popl
addb
push
nop
push
pop
and
fdivr
mov
pop
adc
nop
adc
push
push
hlt
add
lock
negl
clc
stc
adc
popf
push
out
xchg
push
mov
cwtl
rorb
mulb
call
lock
and
add
push
sti
sbb
xchg
and
shll
dec
add
cmp
cld
push
or
gs
clc
adc
pop
jo
icebp
adc
xor
xchg
and
ds
frstor
adc
cltd
sti
jp
and
sub
lods
imul
and
mov
lds
sar
mov
test
jbe
in
decl
jg
js
xchg
lret
sub
mov
scas
xchg
cmc
cltd
call
add
xor
hlt
fistps
in
pop
stc
dec
xor
push
sbb
fmull
jg
push
rolb
movups
scas
insl
sub
daa
mov
mov
andb
aas
and
sbb
imul
outsl
decl
or
mov
mov
xchg
pop
nop
lcall
shr
sbb
nop
add
aaa
pop
out
dec
aaa
stos
and
cmp
inc
xor
jg
addl
arpl
mov
shl
std
xchg
push
jl
mov
xor
sbb
andb
push
push
pop
mov
cmp
mov
add
and
inc
rclb
gs
jnp
mov
movsl
out
add
data16
push
decb
outsl
push
lret
dec
rolb
js
cltd
and
mov
sbb
insb
pusha
xor
inc
ss
or
pop
lock
add
mov
add
pushl
test
fcompl
jecxz
add
nop
or
pop
movsl
mov
adc
js
pushf
jp
inc
or
std
mov
inc
sbb
cmp
mov
call
or
nop
subb
push
out
xchg
mov
jns
xor
dec
add
lock
lahf
jle
push
popl
xchg
outsl
xor
fwait
shll
loope
add
inc
lock
add
jge
push
sahf
add
push
mov
jne
mov
add
das
mov
xor
scas
out
jae
outsb
xchg
mov
sbb
std
ret
cmove
rclb
dec
icebp
sbb
xor
sar
add
mov
adc
mov
inc
add
mov
sbb
sbb
xor
mov
lds
sub
or
and
mov
xchg
enter
cmovbe
andnps
sub
cs
mov
push
int
mov
test
or
sub
mov
inc
ret
sbb
mov
scas
mov
lea
mov
adc
xchg
mov
scas
mov
dec
das
sar
add
jo
lahf
cmp
jmp
add
pop
lods
fadds
adc
jbe
xlat
inc
jbe
out
and
jnp
mov
mov
xchg
mov
jae
adc
lret
xor
pop
rolb
push
lock
movb
shrb
fmuls
shlb
push
outsb
ret
sbbl
inc
out
mov
es
jo
icebp
push
mov
and
rorb
add
jmp
cmp
mov
inc
add
xchg
sti
add
rcrb
movsb
adc
push
lock
jg
lcall
rcll
out
lret
in
jg
mov
adc
jle
mov
jecxz
movsl
inc
sub
fsub
pop
andb
imul
add
mov
pushf
pushl
cmpsb
mov
cmpsb
jmp
mov
loope
lds
inc
add
nop
mov
adcb
shlb
inc
jp
inc
add
mov
inc
rolb
cmc
aaa
pop
clc
vpackuswb
lret
xchg
xchg
lods
cli
stos
jecxz
int
sub
and
push
inc
push
rorb
jae
sti
pop
sbb
js
lods
subb
mov
sub
xlat
repnz
popa
loop
sub
test
adc
mov
adc
pop
jae
pop
cmpb
aam
jno
lcall
loop
arpl
mov
or
xor
sbb
cltd
add
jle
fsubs
pushf
pop
jecxz
inc
inc
and
jl
lcall
imul
pop
adc
loope
in
pop
mov
push
add
xchg
add
xchg
add
mov
sti
in
ljmp
xchg
push
jne
movsb
stos
pop
insl
push
sbb
fwait
xor
xor
add
pop
xchg
test
outsb
xchg
adc
dec
ss
add
dec
and
sub
or
shl
jo
or
mov
xchg
pop
fcompl
call
pop
xorl
xor
jo
dec
xor
xchg
aas
mov
cmpsb
or
divb
or
js
shl
adcl
aaa
dec
sbb
add
adc
or
cmpsb
nop/reserved
sub
cmp
and
dec
push
das
andb
add
shrb
aaa
rolb
cld
inc
sub
inc
push
add
sar
mov
push
addb
addb
dec
data16
pop
loope
in
and
dec
add
repnz
mov
aas
or
sbb
add
xchg
xchg
test
xor
int
push
jge
sbb
sub
adc
mov
inc
stos
nop
add
sub
sbbb
sbbb
xchg
mov
and
decl
imul
stos
andb
orb
ja
scas
xor
sub
and
add
rorb
add
sub
shlb
rolb
cmp
xchg
fdivp
pop
cld
xchg
sbbl
push
sarb
mov
adcl
icebp
mov
pushl
and
lahf
add
adc
loop
orl
jle
sub
cli
pop
lock
jle
scas
add
hlt
cmpl
inc
ljmp
push
adc
pop
ret
mov
adc
jmp
icebp
inc
push
push
icebp
retw
fwait
or
repnz
dec
xor
jmp
rcrb
enter
jns
add
xor
cmpsb
adc
mov
jge
xor
mov
xor
bound
jecxz
popa
addl
and
mov
enter
rolb
xchg
in
or
ljmp
pop
cmpsl
xorb
or
insb
mov
mov
push
adc
pop
jmp
sub
cmp
lock
idivb
or
inc
or
jg
inc
sub
dec
mov
jl
addl
push
jae
cmp
loop
and
jmp
inc
jo
inc
cmp
pop
xchg
cmp
push
cmpsb
nop
add
aad
add
aam
cmc
pushf
scas
mov
or
xchg
xchg
add
hlt
add
orb
and
pushf
mov
aad
cmc
movsb
dec
inc
lods
mov
inc
cmpsb
retw
pop
rcrb
mov
jmp
dec
inc
xor
in
adc
popa
sub
adc
and
cmpsb
jg
dec
xlat
sbb
sbb
cmp
pop
mov
aam
xor
ljmp
or
add
and
lods
and
iret
add
and
sub
mov
ljmp
pop
addb
addl
in
add
std
sub
sbb
and
je
lcall
and
scas
mov
inc
add
test
sarl
loop
lods
roll
push
or
add
push
add
movsb
rorb
mov
and
lock
frstor
cmpsb
cmpsb
out
outsb
add
xor
test
je
sbbb
shll
cld
fwait
jb
rorb
add
jmp
sarb
xchg
movsl
cwtl
lock
add
icebp
pusha
pop
sbb
dec
inc
and
or
push
es
inc
push
mov
or
subb
push
pop
and
or
xchg
jl
test
sbbb
lret
push
in
outsl
mov
lock
jecxz
sti
mov
add
call
sub
xchg
jo
cmpsb
mov
insb
mulb
cmc
jg
adc
add
xchg
jg
mov
sbb
or
inc
mov
pop
ret
jp
fcmovnu
push
push
addb
sbb
jg
add
and
and
mov
cli
lcall
es
mov
sub
fisttpl
test
mov
and
dec
cld
sub
and
fs
sbbb
hlt
jo
icebp
inc
fwait
addb
int3
pusha
jo,pn
cmp
pop
mov
add
int3
js
mov
orb
inc
cld
incl
dec
add
or
xchg
inc
cmp
enter
stc
mov
js
sbb
add
mov
mov
jle
lds
scas
lods
mov
stos
int3
and
mov
cmp
loop
inc
cmp
cld
add
push
dec
sti
mov
and
or
push
scas
stos
or
mov
sbb
ret
push
popa
outsb
add
adc
out
mov
or
xor
popa
add
push
add
test
add
or
jbe
or
and
and
inc
lret
sub
mov
sbb
fwait
loopne
call
xchg
jle
add
add
ret
adcb
add
add
mov
mov
sbb
lret
mov
mov
mov
movb
xlat
mov
cmp
in
or
imulb
mov
lock
hlt
lods
addb
mov
popa
pop
pop
cld
in
inc
cmp
sbb
test
sbb
lock
mov
adcl
or
es
pusha
push
push
adc
dec
sbb
add
dec
add
pushf
lret
fisttpl
or
and
daa
jnp
sub
and
add
jbe
insb
jp
xchg
pop
add
push
xchg
js
shr
test
notl
pushf
sti
add
sub
mov
and
cltd
mov
ret
call
pop
add
mov
mov
sub
and
mov
das
and
jae
push
ss
and
mov
sarl
jb
loopne
mov
pop
inc
and
jbe
or
cmp
rcll
add
pop
pop
and
jns
mov
loope
xlat
add
rcll
xor
enter
cmp
gs
cmp
sti
out
adc
loope
orl
lock
add
nop
mov
in
add
aad
mov
inc
and
add
jo
mov
pop
add
es
test
ret
add
mov
outsl
push
fdivl
mov
loop
bound
xchg
or
dec
mulb
jle
rorb
sbb
aas
jp
hlt
xchg
mov
push
sub
lcall
aam
cmp
add
loop
or
jo
or
popa
ljmp
or
cmp
add
shlb
lods
bound
scas
cmp
jo
ja
adcb
push
mov
cmp
ds
mov
fsub
int
add
add
adc
cmp
sbb
or
mov
push
add
sub
or
jle
cmc
adcb
cmc
add
push
stos
std
adc
cli
jle
notl
cmp
jecxz
add
fsubs
add
outsb
push
rcrb
lret
push
cld
push
cs
addr16
xor
add
fdivr
loope
add
xchg
es
mov
sbb
or
shlb
lock
cmp
cld
out
xor
sub
sbb
cmp
jb
add
aad
mov
push
lods
xchg
add
scas
sti
fisubrl
lds
sbb
in
jle
movsb
jle
std
jg
sub
jne
or
pop
ret
add
jmp
fbld
loopne
inc
add
dec
pop
rcll
mov
adc
cmp
mov
sub
xor
push
inc
ds
or
lock
inc
jle
std
pushl
icebp
push
mov
arpl
add
lcall
mov
test
pusha
mov
std
nop
and
into
jp
add
adc
cli
push
push
lods
cli
mov
fimuls
and
mov
push
arpl
daa
dec
or
ja
jno
lea
push
std
add
mov
pushl
sbb
add
insl
movsl
mov
out
loope
xor
rolb
out
jo
and
xorl
add
lock
or
pop
mov
andb
lds
enter
xlat
cmpsb
cli
js
sub
mov
stos
mov
scas
cli
inc
xchg
testl
xchg
jg
jg
mov
pop
mov
or
mov
mov
sbb
pop
stc
add
nop
or
push
cltd
test
dec
lcall
push
xchg
or
mov
or
xchg
mov
lds
mov
rorl
adc
shl
inc
xchg
in
sbb
jl,pn
add
mov
mov
sbb
sti
xor
push
mov
xchg
insl
jecxz
adc
movsl
lret
out
cli
xor
dec
inc
mov
mov
add
or
push
or
lcall
xchg
xor
iret
ds
sbb
shll
lcall
jmp
lods
outsb
jnp
add
push
or
rorl
add
in
inc
xchg
cmp
inc
and
xchg
das
dec
cld
stos
or
inc
subl
fld
lcall
sbb
mov
push
pusha
cmp
push
push
add
sub
fwait
mov
add
rorb
lods
in
or
mov
jbe
mov
or
sbb
cmp
push
push
shrb
lds
jo
test
dec
movsl
add
sub
ror
shlb
or
adc
sbb
sub
movsl
clc
int
nop
inc
add
add
mov
inc
mov
test
cltd
subb
and
and
push
aad
movsb
jg
out
add
cltd
negl
imul
rcrb
adcb
ret
movl
pushl
jl
jl
mov
sbb
or
bound
push
xbegin
cwtl
cmpsb
mov
xchg
mov
ret
aam
aad
mov
or
pushl
jl
push
inc
inc
scas
adc
call
push
jo
or
int3
icebp
pop
fdivrl
inc
xchg
out
outsb
inc
fldl
or
mov
add
arpl
rcrb
add
add
lock
xchg
nop
les
popf
mov
sar
mov
out
lods
movsb
xor
pop
lahf
add
mov
aam
dec
mov
nop
mov
ss
mov
xor
adc
jbe
repnz
test
sbb
shlb
pop
push
push
jno
and
add
and
sub
add
dec
repnz
jb
jo
cmpb
pop
add
dec
icebp
add
pop
push
cld
jg
inc
or
add
xchg
push
or
jb
jmp
sub
idiv
sbb
xchg
sbb
rcrb
rcr
popf
adc
movsl
or
jbe
iret
xchg
mov
clc
jg
mov
or
sti
add
neg
loopne
mov
enter
sbb
add
xorb
popa
pop
aad
shrb
jbe
out
add
inc
add
add
xchg
xlat
add
push
sub
add
lods
cmp
pop
add
aas
mov
pop
jns
xchg
imul
adc
movsl
dec
fildl
pop
xchg
imul
pop
out
repnz
cs
mov
aaa
sti
in
outsl
pop
sub
adc
mov
cli
popa
fimuls
mov
testl
dec
addl
int
and
sub
mov
clc
cmpb
in
xchg
and
mov
mov
adc
loopne
mov
or
adc
insl
sti
mov
icebp
pop
mov
mov
and
out
xchg
add
shlb
sbb
xorb
shrl
adc
fcmove
cs
xchg
test
or
pop
add
mov
or
addl
lcall
add
sbb
cmp
loope
add
xchg
fbstp
xorl
and
or
add
lcall
andl
xorl
jae
sarl
movsl
sub
pop
les
jmp
incl
add
jbe
xor
cmc
push
addr16
sbb
push
loopne
movsl
fwait
and
jne
xchg
pop
jnp
call
incl
shrb
inc
mov
pop
add
popl
dec
xchg
mov
lods
jmp
add
pop
sahf
rcl
cs
and
cmp
enter
enter
fcoms
add
ljmp
add
lcall
add
ret
or
incl
cmp
inc
dec
repnz
add
jnp
add
add
cmc
clc
divl
sbb
fdiv
jg
inc
js
xchg
adc
scas
add
sahf
xor
loopne
pop
icebp
add
fisttpll
push
jb
mov
or
fcompp
sbb
jle
fnstsw
rorl
mov
stos
test
int
mov
mov
jo
add
mov
loop
and
orw
adc
add
lret
data16
sbb
add
add
pop
mov
mov
lcall
rorl
rcrl
imul
addb
mov
ljmp
or
xchg
mov
add
push
add
adc
lds
xchg
adc
adc
pop
imul
aaa
out
pop
pop
fs
mov
std
leave
shrb
add
inc
dec
popl
mov
mov
loop
cld
mov
add
cmp
mov
push
add
xor
mov
pop
fs
out
and
push
mov
jle
and
inc
fmull
insb
push
outsl
test
jbe
cltd
hlt
mov
out
subb
sbb
cs
add
pop
mov
int3
sub
add
add
cmp
mov
add
mov
add
test
xor
or
popa
jns
js
es
sar
mov
jp
scas
sbb
mov
pusha
xchg
outsb
adc
xor
jecxz
ds
mov
loopne
loopne
clc
into
sbb
adc
lret
jne
andb
js
adc
cmp
jne
inc
ret
incl
orl
pushl
lock
mov
add
andl
mov
sbb
lahf
sbb
sbb
push
lock
add
cld
int
mov
inc
jl
jg
sbb
cmc
movsb
xor
mov
call
pop
fstps
pusha
add
mov
lock
add
inc
cmp
les
sub
and
inc
adc
add
cli
decl
inc
add
jb
pop
and
push
shrb
andb
std
lcall
or
adc
test
push
mov
jo
add
clc
out
add
mull
xor
jnp
mov
pop
jo
and
sbb
fdivr
outsl
pushl
or
pop
push
adc
pop
adc
ret
and
fwait
or
add
add
push
fs
mov
incb
repnz
jle
pusha
inc
push
aas
mov
lock
pop
inc
jle
ret
das
jp
fld
ror
sbb
es
inc
push
int3
add
je
xchg
je
stos
and
sub
inc
fwait
rolb
ja
adc
sub
xchg
sbb
rcll
clc
and
addb
inc
and
loope
ljmp
add
push
mov
addb
push
mov
sbb
mov
ret
inc
mov
adc
jecxz
cld
int
add
cltd
out
sti
dec
add
or
imul
rcrb
and
adc
test
inc
repnz
inc
push
mov
push
test
stos
sbb
loopne
js
xor
outsl
push
jno
jnp
in
jecxz
mov
imul
add
and
loopne
push
xlat
and
movsb
add
rcrb
push
in
fwait
out
aam
dec
lds
roll
dec
mov
sbb
sub
xor
cmpsb
and
pop
inc
out
mov
incb
add
js
sub
xchg
jnp
or
inc
dec
popa
jae
lret
notb
loope
shrl
adc
loope
dec
pusha
repnz
pop
aam
ljmp
dec
add
push
or
insl
popa
inc
repnz
mov
scas
pop
or
xor
sbb
cli
es
mov
xchg
jbe
fwait
add
push
cmc
xchg
call
ret
scas
jp
sbb
es
add
es
clc
pop
call
adc
jb
cmp
jo
inc
bound
add
incl
mov
mov
icebp
add
loopne
mov
jmp
aas
orb
aaa
outsl
push
adc
mov
cmp
cmpsl
push
lods
nop
in
or
std
ja
sub
sbb
or
cmc
sub
and
lods
jecxz
rcr
push
lock
out
mov
insb
fdivs
xchg
into
cmp
test
adc
loopne
pusha
pop
adc
adc
cli
aam
dec
fisubrs
loop
icebp
mov
add
repz
int
or
or
jecxz
insl
fiaddl
xor
sub
push
push
mov
dec
push
stos
shrb
cld
jg
mov
lahf
pusha
add
jge
sub
mov
into
js
cmp
jge
mov
pusha
jae
faddp
aaa
std
lea
adc
aas
jp
sti
xchg
nop
or
sbbl
popa
add
prefetcht0
nop
ljmp
adc
lods
test
mov
pop
mov
out
add
jo
adc
mov
jecxz
hlt
jno
sti
or
xchg
lods
sub
out
popa
pop
push
dec
std
adc
enter
mov
adcl
adc
xchg
mov
clc
xor
add
mov
sbb
psllw
sbb
ss
sub
cld
or
add
fs
push
mov
add
sub
xchg
fwait
inc
rcl
add
and
and
repnz
je
mov
sbb
scas
xor
xor
into
dec
sbb
or
xor
xchg
add
cmpsl
and
xlat
decl
sti
cld
jl
pusha
push
cld
adc
sbb
pop
hlt
xor
lock
push
xchg
mov
adc
or
ror
push
adc
xchg
into
jno
clc
sbb
xchg
add
push
jp
xchg
inc
sbb
sbb
add
pop
jae
and
stos
push
dec
jb
setns
scas
shlb
shll
ret
cli
les
inc
clc
stos
sub
or
cltd
or
push
scas
and
dec
xchg
xchg
add
roll
loope
add
and
es
add
pop
incl
pop
mov
sbb
or
test
es
cmp
or
jecxz
or
dec
sbb
or
int3
lock
add
cmpsb
and
xchg
roll
push
sbb
xchg
adc
shlb
out
or
clc
insl
mov
lds
add
jae
mov
inc
add
sbb
lock
xchg
dec
cli
and
push
js
adc
xchg
sbb
cmp
adc
or
pop
xor
xor
incl
push
sbb
mov
xor
fcmovnbe
cli
mov
sbb
add
mov
shrb
loop
add
and
shlb
pop
xchg
lret
inc
dec
f2xm1
out
xor
jp
loop
add
sub
and
cmp
das
xor
testl
sub
inc
dec
loopne
sbb
js
popa
dec
xor
or
testb
add
push
mov
loop
sbb
or
ljmp
cld
adc
popa
dec
loop
rorl
fninit
add
rorl
lea
nop
jp
imul
add
cwtl
inc
add
divb
pop
rcll
add
inc
mov
sbb
mov
sbb
and
icebp
dec
and
jo
or
inc
push
mov
add
xchg
pop
bound
cld
mov
pop
test
test
mov
cltd
into
pop
addr16
xlat
stos
xor
test
and
and
enter
divl
push
jecxz
add
stos
jo
dec
jo
imulb
aad
in
gs
fisubs
cmp
or
out
xchg
pushl
addl
sub
js
sbb
test
sbb
sbb
insb
push
lock
jo
testl
shlb
sti
aaa
jp
hlt
xchg
sarb
mov
mov
mov
es
xchg
shll
rclb
mov
pop
mov
mov
mov
push
and
out
jo
xchg
push
nop
add
xor
mov
stos
push
clc
sub
popa
repnz
and
icebp
or
adc
jbe
sbb
xor
in
rorb
dec
xor
inc
mov
jb
ret
fstl
mov
sarl
lock
push
ret
adc
es
xor
xchg
cmp
icebp
pop
push
mov
lock
andl
add
xchg
pop
dec
bound
in
idiv
das
int3
push
popa
add
fwait
sti
insl
add
mov
sbb
push
push
or
dec
mov
jecxz
and
divb
pusha
add
add
repnz
roll
aaa
adc
jbe
mov
or
add
add
out
add
pop
cmc
pop
mov
mov
xor
js
sub
cmc
ljmp
fwait
stc
mov
push
inc
jecxz
add
rcrb
mov
cmp
testb
and
jp
and
mov
lea
pushl
or
ja
pop
adc
imul
fdivrl
mov
loopne
xor
inc
mov
aad
andl
mov
orb
clc
ljmp
inc
and
mov
jno
movsl
nop
mov
clc
cmc
scas
lods
insb
xor
mov
idivl
adc
es
hlt
inc
inc
push
addb
or
sbb
push
mov
enter
movsl
movsl
cld
dec
mov
and
sbb
cmp
add
adc
rcrl
mov
xor
push
xchg
or
andl
sbb
cs
push
pushl
clc
xor
mov
dec
lahf
inc
add
aaa
and
jb
pop
ljmp
xorb
jae
scas
lods
mov
xor
loope
das
jp
add
test
lcall
aad
inc
shrl
mov
inc
xchg
movsl
dec
aaa
jbe
xor
lods
add
mov
bound
xor
icebp
and
lret
mov
push
fldl
mov
sbbb
push
add
and
out
mov
jp
sub
test
testl
fsubs
bound
loope
mov
xor
decl
call
test
xchg
add
pop
xchg
pop
mov
sbb
subb
inc
cld
subl
pop
adc
out
adc
faddl
movsl
mov
and
mov
lock
pop
pop
mov
mov
fidivl
fs
lods
xchg
nop
sub
test
push
fdivr
mov
stos
rcrb
inc
jge
pop
testb
add
test
inc
adc
test
addl
and
xchg
js
fwait
stos
add
push
nop
mov
js,pt
clc
push
cmpb
mov
stc
inc
mov
stos
outsb
insl
mov
movsl
movsb
out
jecxz
mov
pop
inc
dec
inc
add
push
sub
outsl
add
or
pop
adc
pop
and
add
orb
js
roll
adc
hlt
xchg
inc
cmpsl
js
jo
sti
xorl
cmp
les
pop
mov
inc
xor
pop
pop
add
aad
adc
push
mov
jb
lcall
loopne
and
cmpsb
sti
add
in
cs
mov
or
cli
or
or
pop
or
mov
negl
push
or
mov
mov
inc
xor
add
push
pop
mov
pop
mov
pop
sbb
adc
mov
push
inc
adc
enter
out
rclb
sub
jle
aam
add
add
and
add
ret
and
add
or
es
orb
orb
mov
faddl
shl
jae
add
jg
push
ret
or
mov
int3
test
aaa
dec
clc
inc
adc
pop
or
mov
subl
inc
pop
mov
xor
sbb
js
or
lock
shlb
lock
dec
mov
adcl
mov
or
adc
add
loopne
sahf
in
lock
pop
sbb
adc
xor
mov
js
cmc
pusha
sar
addb
mov
clc
movsb
neg
lock
or
pop
cmpsb
add
sarl
adc
fs
xor
push
sbb
and
sub
xchg
sub
mov
or
xor
icebp
mov
add
mov
js
sub
and
inc
out
cs
test
adcb
adc
jle
pop
mov
stos
js
mov
das
mov
inc
add
jbe
lock
enter
jp
xor
push
lcall
popa
adc
fs
loopne
add
mov
pop
adc
jg
push
insb
aaa
add
jne
pop
subb
or
decl
push
mov
rorl
xchg
inc
pop
ja
loope
pop
ja
sti
addb
or
or
arpl
cmpb
push
and
les
add
incl
push
dec
and
fwait
mov
xor
xor
mov
xor
dec
and
inc
sbb
cmp
ret
inc
or
cmp
js
stos
dec
cld
fdivs
cmp
push
roll
mov
or
lock
pop
loop
sbb
mov
pop
lret
fdivrp
in
jmp
sbb
jle
call
inc
js
incb
add
add
jg
outsl
insb
mov
ret
adc
adc
sbb
and
stos
pop
testl
pop
adcb
lcall
mov
xchg
sbb
sbb
ljmp
in
jb
xchg
loopne
cmpb
or
int3
and
xchg
popa
movsl
mov
inc
add
shl
or
mov
in
and
fisubrl
into
add
sbb
and
dec
and
popa
and
xchg
repnz
xor
xchg
sbb
call
adc
int
orl
loop
mov
jecxz
sbb
add
and
shlb
pusha
inc
stos
lret
and
mov
mov
add
inc
add
popa
adc
lret
lcall
xor
and
or
mov
data16
dec
sbb
jo
sti
call
mov
pop
add
mov
dec
inc
cli
mov
stos
jle
push
mov
pusha
arpl
pop
and
inc
loop
fisubrs
xchg
shlb
or
sbb
pop
clc
mov
nop
xchg
ror
jecxz
and
jecxz
or
inc
xchg
mov
in
cwtl
sbb
or
scas
and
js
shll
pushf
les
push
add
inc
sub
or
sbb
daa
inc
das
add
or
sbb
add
jne
xchg
mov
mov
aaa
or
inc
mov
je
jbe
cli
xor
lcall
add
fst
shufps
lds
decb
sbb
sbb
fimuls
fwait
and
xchg
cmp
insb
icebp
and
and
movsb
pop
sbb
leave
nop
add
nop
push
test
pop
jne
jno
push
es
dec
test
out
es
ds
hlt
or
pop
dec
clc
enter
and
insl
and
es
lcall
incb
lret
into
movsb
adc
push
jo
mov
fcomps
add
dec
jbe
jo
cmpsb
pop
or
js
xchg
pop
and
call
call
mov
fldl
scas
xor
enter
xchg
cmp
pop
sub
push
mov
adc
and
mov
sub
lock
xor
pop
mov
pop
jo
sub
pop
out
rolb
js
push
movsb
clc
js
jp
jns
adc
hlt
and
add
lcall
js
xor
popf
and
neg
xor
mov
jo
test
cmpsb
inc
int3
jle
test
addb
adc
and
xor
xor
mov
or
addb
mov
add
je
xchg
cli
incl
push
cmp
test
inc
aas
sti
les
das
lret
pop
add
and
mov
rcll
ret
movsl
adc
mov
cmp
pop
add
and
mov
mov
xor
mov
adc
cmpsb
add
cmp
repz
cmp
add
enter
je
inc
movsl
roll
sub
lods
out
xchg
clc
add
pushf
test
mov
call
add
aaa
inc
xchg
ret
repnz
rorl
jecxz
notb
out
mov
lock
iret
sub
nop
jl
outsl
clc
pop
clc
sbb
jns
add
sbb
iret
icebp
adc
adc
outsl
add
dec
fidivs
push
push
fstl
lock
xor
adc
or
ret
add
shlb
shrb
jmp
pushf
cmpsb
sbb
cmpsb
sub
fcmovu
outsl
scas
pop
lret
cld
jge
mov
das
mov
ss
sbb
or
xchg
add
push
jnp
add
mov
int
shlb
sub
inc
inc
cmp
icebp
mov
mov
xor
or
sub
mov
adc
mov
fsubp
popl
mov
cmp
cmc
pushf
jp
mov
mov
and
je
nop
out
xor
jo
lock
add
jbe
xorl
push
out
pop
mov
add
sbb
mov
and
pushf
sbb
fsubrs
ficoml
fcomp
sbb
xchg
out
and
enter
lcall
dec
cmp
push
adc
imul
mov
outsb
jecxz
dec
adc
clc
or
loopne
jl
sbbb
push
rol
and
add
cmpsb
js
inc
mov
enter
stc
cmp
adc
or
push
cmp
sub
add
mov
icebp
scas
add
cmp
and
xor
mov
nop
test
and
daa
js
adc
cmpsb
ljmp
adc
pop
or
mov
lcall
xchg
jns
jmp
and
roll
mov
adc
ss
pusha
or
and
and
inc
mov
insl
xor
ss
clc
mov
add
mov
adc
cld
jg
cmp
cmp
pop
or
sub
sti
shrl
add
and
inc
sbb
fucomp
test
int3
xchg
push
out
js
loopne
rolb
dec
or
add
insb
and
addb
rcrb
and
addb
aas
sbb
out
push
and
jg
add
and
jecxz
sbb
xchg
add
inc
lock
add
xchg
add
xlat
outsl
mov
pusha
sbb
cmpsb
pop
orb
push
fcomip
xor
dec
mov
rcrb
fsubrs
mov
std
mov
hlt
in
insl
mov
adc
xchg
sub
or
mov
sub
bnd
lea
mov
inc
not
jnp
or
lahf
and
mov
inc
cwtl
notb
out
or
mov
sub
in
in
out
inc
inc
fildl
xchg
mov
sub
or
xor
daa
lods
fdivrs
stos
call
jns
jp
cmpsb
in
xor
fcmovnbe
sbb
les
jp
push
xchg
xorb
pop
adc
incb
jnp
notb
repnz
push
mov
syscall
lock
rcrb
sti
push
and
mov
xchg
adc
lock
scas
xor
dec
cmpsb
loop
push
jnp
jnp
adc
or
bound
mov
incl
jecxz
adc
mov
mov
cli
fcoml
or
pop
sar
in
sbbb
jge
dec
lds
rcll
addb
adc
insl
pop
or
repnz
adc
orb
or
test
and
jo
add
xorb
add
pop
ret
negb
jo
and
enter
pop
in
jg
adc
mov
sbb
sbb
aas
or
and
cmc
lcall
or
lods
rcl
or
int3
xchg
pop
fucomip
cmp
insb
scas
fbstp
cmp
cmp
andb
das
mov
loope
or
cmp
lock
and
icebp
cld
mov
cmp
xchg
loopne
pusha
adc
push
add
mov
jno
xchg
inc
or
jo
fsubrp
cld
xchg
pop
vmread
cmp
shll
pusha
arpl
ret
cmp
cmp
aas
push
fildll
add
mov
test
mov
cmp
cmc
stos
mov
push
loopne
or
pavgw
mov
inc
fadds
cmp
in
sub
outsl
inc
cmp
sub
movsl
call
lock
cmp
das
add
mov
lock
inc
cmp
mov
je
cmp
pusha
cmp
inc
cli
inc
test
mov
int
test
adc
sub
cmp
out
faddl
mov
outsb
cmp
add
xor
jge
sti
test
push
mov
cmp
jo
or
testb
ds
push
mov
cmp
sbb
add
push
stos
mov
cs
or
aam
testb
outsl
test
xor
jmp
cli
or
mov
ljmp
test
pop
dec
add
rclb
sbb
dec
adc
xchg
mov
andb
movsb
or
add
movsb
in
or
push
cmp
and
xor
aam
call
add
shrl
add
add
fdivs
inc
push
or
mov
dec
insb
ljmp
xchg
sub
xchg
leave
sbb
cmp
add
lret
in
inc
cmp
sahf
aaa
cmp
repnz
in
push
sahf
add
mov
shll
jo
inc
adc
adc
das
scas
ret
fisubl
adc
sbb
cmp
fistps
mov
or
xchg
mov
jge
xor
mov
andb
mov
xor
sub
cmp
incl
adc
stc
nop
inc
test
mov
and
push
das
mov
std
dec
jb
andb
xchg
cmc
sbb
jbe
jb
aam
dec
and
roll
mov
add
repnz
dec
xor
cli
push
in
imul
add
and
rolb
adc
sahf
push
jg
cmpl
das
inc
cmpsb
dec
add
fiaddl
or
js
mov
xchg
or
dec
add
lods
fcoms
jecxz
mov
or
test
mov
push
sub
xchg
shld
xchg
or
mov
or
push
add
xchg
add
jge
add
mov
pop
movsb
out
scas
cs
rorb
add
push
aaa
aaa
push
push
aas
mov
dec
mov
test
add
cmp
inc
cld
add
rorl
xchg
outsb
shlb
loop
cmp
mov
mov
jl
sbbb
adc
pop
rolb
add
test
xor
addl
add
sahf
inc
adc
dec
and
clc
enter
adc
andb
clc
mov
test
adc
lret
clc
xchg
mov
mov
adc
add
mov
add
decl
addb
sbb
jo
xor
adc
fs
add
inc
jl
and
add
dec
clc
mov
in
xor
icebp
mov
sub
sbbb
lods
pushw
dec
xor
test
js
addb
adc
sub
cmpl
inc
mov
push
sbb
addb
add
jle
dec
xorb
std
or
mov
test
inc
add
push
aaa
rorb
jnp
les
or
and
fdiv
and
ret
add
jle
pop
dec
popf
stos
ret
ss
inc
push
push
adcb
add
fdivl
sti
es
js
push
sbb
jmp
out
mov
pop
daa
out
pop
and
stc
dec
es
xchg
or
pusha
test
adc
js
jbe
out
or
cmpsb
movzwl
and
mov
subb
jl
mov
xor
cli
mov
pop
cmpsb
or
call
xor
and
shlb
pop
mov
dec
pusha
cmp
sub
jg
imul
loopne
xchg
mov
cli
pop
sbb
push
or
inc
lock
sbb
inc
rcr
lock
sub
inc
subb
add
push
cmpsb
add
cli
mov
inc
push
jbe
lods
fdivrs
sub
mov
enter
daa
mov
add
loopne
jge
addl
add
mov
test
lret
leave
mov
mov
loopne
add
divb
sti
fwait
push
mov
in
je
sbb
add
jecxz
push
mov
es
pop
icebp
loopne
and
jno
lock
outsl
in
jg
pusha
adcb
add
subb
add
jg
pushl
and
test
outsl
in
and
add
sub
sbb
jo
jo
or
sub
in
mov
loopne
pop
shl
and
xchg
test
inc
addb
stos
decl
cmpl
call
test
loope
mov
loope
out
popa
xorl
inc
mov
xorl
incl
rolb
cld
je
add
add
test
xor
scas
out
rorl
push
sbb
subb
dec
mov
lock
inc
add
aaa
mov
lock
lock
sbb
xchg
mov
jnp
outsl
mov
sbb
jae
addb
inc
push
add
mulb
add
lock
xchg
aas
dec
pop
lods
test
filds
sbb
leave
dec
or
mov
movb
cwtl
out
and
push
push
test
mov
dec
rolb
sbb
mov
add
lock
js
inc
mov
lock
or
sub
mov
adc
scas
or
or
fdivs
inc
pushf
cltd
xchg
jle
mov
sbb
pusha
idivb
into
inc
popa
add
push
cmp
jo
and
sub
xchg
inc
add
and
sub
outsl
add
mov
xlat
popa
iret
mov
adc
or
sbb
adc
int
inc
mov
adc
inc
in
or
pop
call
cmp
scas
loop
in
xchg
and
cmp
inc
data16
mov
add
out
mov
push
jae
lret
sub
pop
ja
xor
push
mov
ljmp
dec
sarb
add
mov
cmp
xor
xor
jg
fdivrs
lock
leave
sub
add
inc
inc
mov
or
lock
sbb
pop
aam
add
js
xor
xor
sar
or
out
add
fcomps
sbb
movsb
adc
push
nop
jb
add
fistps
ss
cmp
cmp
jg
lock
push
add
mov
add
push
and
add
push
add
ret
loopne
mov
add
jae
sbb
add
adc
mov
xor
pushl
cld
testb
cmp
push
rcrl
sbb
mov
ret
push
add
pop
cli
inc
and
and
fidivl
ret
sub
aam
pushl
xor
or
das
and
xchg
xor
push
sti
xchg
jp
mov
add
aaa
int
sub
pop
xor
mov
lock
js
sti
loope
mov
sub
dec
jbe
hlt
or
cmpb
mov
add
pop
ffree
sarl
and
test
push
and
sbb
std
cmp
data16
pop
add
add
mov
add
xor
or
call
inc
push
pop
not
push
shrb
rclb
out
cli
call
pop
push
pusha
cmp
push
sbb
cli
das
sub
rorb
cld
inc
inc
xor
lock
and
scas
stos
insb
lret
aad
imul
push
mov
jg
icebp
incl
jle
add
rolb
pusha
adc
fildl
or
hlt
sti
add
cmp
pop
xor
add
insb
xchg
js
cmpb
pop
sub
jnp
xor
sti
icebp
inc
xorl
cltd
stos
cmc
lock
or
notb
aas
loope
mov
jge
adc
xor
lahf
adc
jns
dec
lds
mov
xchg
jo
mov
xchg
or
jno
add
sbb
loopne
lea
sti
mov
ja
clc
sbb
and
ljmp
jle
push
fiaddl
mov
adc
inc
or
insb
sbb
mov
test
adc
stos
out
jnp
lcall
lcall
pop
lock
sbb
pshufw
hlt
stos
mov
jle
sarl
orb
xor
mov
fcomps
rclb
cltd
mov
xor
xchg
in
into
adc
aad
and
or
mov
mov
sbb
add
xchg
jb
mov
mov
shlb
dec
jl
add
nop
push
dec
in
jl
fnstenv
fisubrl
and
inc
jo
sub
fdiv
adc
fisttpll
sbb
aaa
repnz
jo
sbb
inc
mov
cmp
cmp
pop
push
mov
stc
out
pop
out
mov
adcl
mov
sbb
add
in
jl
popa
dec
mov
adc
adc
jno
xor
sbb
jb
xchg
sbb
adc
out
mulb
lea
push
mov
push
sbb
in
add
or
sbb
jmp
jb
mov
js
loope
pop
adc
xor
push
in
pop
les
imul
and
xchg
je
sbb
decl
push
jb
adc
js
xor
sbb
mov
jg
xor
sub
es
sbb
mov
or
add
fisttps
xor
daa
test
sub
lods
and
xor
popl
ret
adc
lcall
incb
add
movb
sub
mov
add
ljmp
mov
je
adc
push
inc
push
mov
xor
dec
mov
cltd
rolb
adc
or
nop
add
cmp
pop
fiaddl
out
clc
or
sbb
add
jle
mov
sbb
and
xor
or
adc
pop
dec
loopne
idiv
cmp
decl
je
inc
add
clc
loope
shl
mov
mov
pop
rcrb
stos
mov
loop
and
xor
clc
fadds
pop
and
and
adc
and
out
aaa
cmp
or
xor
sti
popa
ss
mov
xor
or
jo
cmp
ret
rcrl
inc
cmp
out
ret
add
or
or
arpl
sti
push
jno
aam
adc
sar
dec
outsb
adc
jno
insb
lods
push
push
jnp
adc
jmp
jbe
adc
push
add
inc
aam
lcall
out
jns
ja
inc
add
and
mov
js
lock
jg
add
pusha
inc
outsl
rclb
adc
add
insl
cmp
adc
inc
adc
js
pop
inc
jl
hlt
imul
shll
push
sbb
xlat
lock
push
add
add
inc
ss
jmp
outsl
inc
and
mov
fildl
cmc
jbe
pusha
stos
push
adc
jecxz
aas
mov
js
loopne
dec
or
dec
lcall
and
inc
adc
bnd
xor
or
mov
rolb
push
add
sub
test
and
rolb
add
mov
and
pop
inc
pop
pop
sub
mov
mov
dec
pushl
aam
add
jp
jo
loop
pusha
push
or
repnz
add
pop
adc
mov
mov
rolb
jecxz
and
pop
cwtl
or
and
mov
testb
test
lret
mov
sub
clc
cmpb
aad
push
ja
call
roll
jo
push
jae
add
scas
push
loope
or
cli
js
cmpsb
push
xor
shl
pop
sti
ss
aam
sbbb
sbb
mov
rclb
add
add
sbb
rcl
pop
pusha
xor
sbb
lods
push
xor
jmp
adc
aam
adc
xor
push
rorb
repnz
pop
mov
scas
mov
or
arpl
adc
mov
test
push
cmpb
stos
and
inc
xchg
pop
arpl
sub
push
pop
mull
push
std
data16
sub
pop
mov
and
cmpsb
xchg
xchg
ja
adc
and
clc
and
jne
sbb
add
jl
add
push
cmp
or
or
xor
sub
add
pusha
xchg
mov
addb
add
jle
movsb
sti
movsl
inc
cld
out
sub
or
rorl
add
add
xchg
pop
mov
inc
xor
adc
or
add
or
pop
test
push
and
push
dec
xchg
add
repz
repnz
jns
incl
movsb
and
jae
bnd
repnz
cmp
aad
loop
pusha
mov
mov
stos
inc
test
mov
adc
clc
jge
add
add
testl
sbb
and
sbb
inc
mov
add
addb
xlat
icebp
leave
cmp
popa
rorb
adc
pop
dec
mov
add
sti
into
mov
decb
fucomip
and
pop
jecxz
push
jnp
pop
cltd
cmpb
dec
or
nop
mov
movsb
or
nop
ljmp
cli
pop
sti
pop
out
jmp
loope
push
or
add
ret
and
icebp
mov
mov
xchg
add
push
frstor
fs
mov
nop
lods
jmp
fst
add
mov
add
adcb
sti
mov
stc
mov
xchg
adc
sbb
or
cli
mov
add
push
push
sbbb
pop
cmp
add
add
inc
mov
and
or
push
ja
push
aas
lret
add
mov
hlt
xchg
or
lods
dec
insb
loopne
xchg
aam
mov
push
imul
ljmp
or
pop
rorb
rorl
sbb
and
lock
push
pop
aaa
cld
push
inc
push
sbb
add
inc
xor
aaa
adc
sbb
inc
jo
mov
sbb
pop
scas
xor
call
addb
nop
mov
or
mov
mov
je
xor
mov
mov
push
or
or
mov
call
sbb
add
mov
push
inc
sbb
adcb
xor
ret
ds
sub
inc
insb
add
dec
jo
jbe
mov
sbb
jecxz
or
arpl
cmp
xchg
call
in
and
rorb
clc
add
mov
sbb
rol
xor
xor
movsl
mov
xchg
cltd
imulb
lock
mov
stos
jecxz
mov
mov
ret
mov
mov
add
cmp
adc
mov
cmp
pop
clc
push
dec
jmp
out
xchg
decb
fldcw
test
fwait
test
jmp
pusha
sbb
and
out
cmpb
sbb
or
or
push
pop
sarb
mov
or
or
dec
aaa
adc
sbb
je
lcall
sub
shrl
in
push
jb
add
sub
inc
dec
aas
fiadds
xchg
xchg
sbb
xor
push
add
sti
xchg
and
xchg
inc
int3
dec
and
lds
sbb
clc
dec
mov
mov
das
in
cs
mov
mov
sbb
pop
xchg
loope
out
sti
inc
rorl
sbb
inc
add
lods
mov
pushf
aam
dec
ss
cwtl
push
movsb
sub
push
sbb
fsubs
jp
push
push
movsb
add
jns
and
dec
mov
iret
cld
pop
and
sbb
test
xchg
repnz
std
shl
or
or
ret
in
or
mov
pop
lock
stc
add
inc
ret
loopne
into
mov
test
jle
or
repnz
dec
test
xor
xchg
cmc
lcall
pushf
push
inc
sbb
dec
adc
icebp
dec
idiv
push
dec
add
lock
xchg
jo
inc
fistpll
clc
jae
add
stc
rorl
mov
out
icebp
loopne
adc
pusha
sbb
incl
or
lea
add
xchg
add
jbe
sub
xor
dec
clc
out
adc
and
add
or
sbb
or
shlb
inc
xor
sub
clc
add
out
mov
setbe
sbb
idiv
aaa
sub
movsb
lret
fisttps
out
push
fisttpll
jmp
sub
test
rcrb
sbb
dec
clc
dec
sbb
cmp
ss
or
inc
dec
test
clc
sbb
push
sub
sub
scas
xorb
pusha
sbb
mov
out
sbb
pusha
insl
in
xorb
dec
clc
arpl
or
inc
sbb
pop
mov
cmp
js
push
fldl
clc
js
xor
cmpsl
and
jae
push
je
dec
sti
aam
or
inc
mov
les
test
or
adc
push
jo
add
pusha
xchg
loop
js
or
pop
add
lock
into
stos
sbb
xchg
fwait
sti
mov
inc
or
xor
rcrb
outsl
out
mov
mov
es
pop
mov
mov
xor
dec
fsubp
dec
inc
sahf
or
pop
or
cmp
pop
add
ffree
xchg
jo
inc
add
add
roll
hlt
xor
js
mov
call
push
inc
in
insb
loop
mov
jmp
mov
mov
sahf
mov
popa
ret
push
or
add
mov
push
xchg
xchg
mov
mov
ret
das
or
mov
mov
or
movl
out
sbb
fs
jmp
jecxz
add
fdivr
dec
pushf
mov
test
cltd
lea
std
pop
pop
xor
das
nop
sahf
push
in
mov
cmpsb
add
cmc
dec
mov
push
inc
mov
or
xor
or
shlb
ss
inc
mov
fchs
sbb
inc
pusha
xor
js
push
cmpsb
scas
pop
lock
loopne
pusha
fadd
push
aam
xor
rolb
bound
jns
mov
sub
out
adc
repnz
and
add
adc
add
orb
std
mov
sbb
pusha
push
add
add
notb
stos
mov
sbb
in
mov
pop
xchg
loopne
mov
jle
adc
xchg
push
outsb
in
adc
cmpsb
mov
in
pop
adc
pop
sbb
ret
add
adc
mov
jne
or
pop
pop
and
push
div
jo
cs
dec
pop
lock
cld
jno
push
outsl
mov
pusha
cmp
mov
mov
jo
mov
pusha
dec
xor
scas
scas
mov
mov
call
mov
out
or
mov
movsl
pop
mov
add
idivl
inc
xchg
xchg
incb
xor
addb
mov
lock
add
rolb
add
adc
insb
sbb
add
sbb
inc
les
addb
mov
and
not
sub
jne
cmpsb
sub
jp
push
das
inc
sub
inc
call
sar
pushl
add
dec
cld
jne
xchg
and
mov
jnp
push
cld
dec
and
and
nop
mov
into
es
sbb
sub
enter
add
adc
js
testb
and
inc
mov
cli
add
pop
cmc
cld
mov
in
jle
jge
push
outsb
sbb
and
sbb
cmp
mov
add
js
movsl
jecxz
lock
and
outsb
loope
inc
ficoml
repnz
test
inc
pop
lock
nop
sub
xor
jb
pop
popa
mov
and
in
inc
jb
or
xchg
or
insl
cld
add
and
lock
movsb
push
subb
or
or
into
clc
add
std
cmp
or
or
sub
mov
push
fisttps
pusha
pslld
int3
or
inc
add
lcall
and
pusha
jecxz
xchg
adc
xor
mov
int3
inc
mov
inc
inc
add
nop
subl
pop
in
mov
adc
jnp
or
arpl
add
sar
mov
cld
mov
xchg
mov
cld
mov
or
jle
adcb
sub
and
and
repz
bound
aaa
loope
movsb
inc
lret
xchg
adc
test
mov
repnz
jecxz
push
jle
ljmp
mov
ss
mov
lods
jo
cmpb
js
mov
sbb
jnp
mov
mov
mov
push
sub
loope
lods
clc
fnstsw
jecxz
shr
add
mov
push
mov
push
or
in
push
mov
and
sti
adc
incl
lret
adc
or
cmpsl
addl
call
mov
xor
aas
ret
dec
loop
clc
jo
xchg
fistpll
les
and
in
push
or
orps
pop
int
adc
mov
mov
sbb
jmp
lock
loopne
in
mov
mov
mov
lods
faddl
mov
int
jg
js
arpl
add
mov
movsb
loop
test
fists
stos
clc
jp
and
add
lods
xor
mov
push
or
add
adc
lret
pop
inc
leave
push
lods
scas
add
and
sti
sub
sub
and
push
pop
jecxz
jne
loopne
enter
dec
jnp
sbb
jle
aam
xchg
lock
add
pop
aaa
mov
nop
jno
cmp
mov
and
cmp
shlb
icebp
or
loopne
add
movsb
sbb
jg
jmp
xor
mov
xchg
xor
icebp
pop
jle
lods
pop
sub
js
subb
jno
loope
add
mov
clc
decl
cmp
sbb
imull
lret
add
ret
outsb
mov
or
mov
lods
stos
xor
inc
ja
cld
or
and
sbb
nop
jbe
mov
rcrb
hlt
mov
mov
xchg
jle
mov
mov
rorb
enter
and
add
mov
or
and
cmpsl
inc
insb
addb
sbb
xor
rorb
push
mov
loopne
enter
ret
clc
or
mov
push
add
push
jp
out
jb
stos
xchg
ret
inc
sub
aam
cli
outsb
push
add
cwtl
sub
subb
hlt
adc
add
add
mov
or
nop
jns
mov
dec
pop
sbb
add
jbe
dec
add
test
push
add
aaa
add
sarl
push
add
sbb
and
xor
insb
add
push
outsl
xchg
jo
dec
mov
inc
rcrl
add
mov
loope
inc
jmp
adc
inc
add
pop
xor
lods
cmp
lcall
std
sbb
push
pushl
inc
lock
inc
push
je
inc
push
mov
pop
inc
loop
push
xor
xor
push
adc
mov
movsl
adc
iret
adc
sub
js
pop
lret
sub
fisubs
ljmp
mov
add
pop
add
mov
arpl
cmp
sub
sbb
xor
inc
sub
das
clc
jg
ret
movsb
sti
adc
mov
mov
aas
push
mov
jecxz
cmp
and
movsb
xchg
stos
sub
and
inc
jge
inc
jle
mov
add
adc
xchg
mov
jnp
xchg
jnp
or
subl
ljmp
inc
and
add
and
test
hlt
js
push
sti
add
shlb
or
data16
push
lret
mov
sbb
push
mov
je
sub
incl
jecxz
jo
xor
mov
js
pusha
cwtl
sub
lock
xorl
adc
add
cltd
push
cwtl
mov
lock
push
sarb
and
aaa
inc
scas
loopne
sbb
and
sbb
loopne
push
scas
mov
pop
sbb
jno
push
xchg
push
sub
test
xor
xchg
js
mov
or
inc
cmp
clc
xchg
test
add
sbb
add
fimull
inc
sub
mov
add
xchg
scas
mov
pop
inc
xchg
add
or
cmpsb
push
rcrb
ds
push
push
adc
mov
test
pop
inc
cmpb
fsubrs
jp
mov
mov
push
mov
mov
or
pusha
cs
shlb
sbb
jp
ret
push
fildll
pop
sbb
pop
push
xor
sbb
mov
jb
movsb
addb
pusha
lock
cli
rolb
and
fidivs
mov
push
fcomps
notl
mov
outsb
mov
movsb
mov
mov
add
xchg
mov
aaa
dec
jl
add
inc
loope
mov
add
and
add
cmp
cld
jp
outsl
add
adc
sar
pop
add
orb
movsb
mov
clc
xchg
bound
or
adc
mov
loopne
push
loopne
or
add
add
add
pop
lret
inc
add
push
sbb
fptan
cmpb
aas
cld
out
addr16
jo
add
push
cmpb
add
xor
push
and
or
push
dec
mov
es
xchg
addb
lret
testl
es
mov
add
and
out
dec
add
push
push
and
inc
and
lds
jns
lods
xchg
cwtl
inc
or
mov
push
jno
shrb
popa
and
loope
icebp
push
jmp
inc
xor
push
lret
pop
icebp
std
pop
xor
test
adc
xlat
nop
xlat
or
push
pop
add
adc
mov
jns
outsl
mov
cmp
dec
sbb
test
testb
fidivrl
mov
or
inc
pop
mov
adc
fbld
stos
pop
iret
sbbb
jp
jmp
adc
call
xchg
rolb
push
jp
sbb
outsb
lds
ss
scas
cltd
sti
adc
xor
adc
xor
cmpsl
int3
ret
sahf
push
or
insb
sub
mov
mov
mov
inc
adc
pop
fadds
sub
xchg
mov
jbe
shlb
xchg
xchg
adc
and
jo
pop
sbb
stos
es
cli
aaa
nop
mov
adc
cmp
push
stos
push
enter
cli
testb
test
add
into
test
mov
testb
test
fcmovb
mov
test
pop
inc
or
and
roll
mov
pop
inc
popf
ljmp
xor
pushf
cmpsl
sti
inc
jge
cs
inc
xchg
adc
sbb
mov
out
cmp
mov
popl
lahf
sub
pop
rorl
fdiv
call
daa
addb
lcall
sub
add
addb
sbb
popa
push
imul
sbb
xchg
mov
sbb
gs
and
std
pusha
sbb
test
scas
xchg
lcall
sbb
gs
add
add
sub
stos
mov
sub
mov
push
jo
sub
push
dec
mov
ja
ret
movsl
jo
fwait
pminub
mov
sbb
inc
sbb
mov
mov
push
mov
mov
sbb
fldl
add
adc
movsl
loopne
mov
adc
icebp
fwait
lea
or
mov
push
xchg
movsb
data16
fsubl
sub
push
add
out
add
aaa
pop
cmp
sbb
mov
add
dec
mov
and
out
push
cmp
adc
add
push
fs
xor
lcall
lock
out
jle
pusha
sub
es
and
xlat
inc
fdivs
and
and
cmp
repnz
movsl
xchg
or
adc
pop
add
sbb
sarb
jmp
loope
call
out
leave
out
loopne
sub
andl
xor
gs
add
lcall
sbb
push
lods
ficompl
jb
stos
sbb
sbb
jbe
cltd
add
arpl
cli
add
lcall
es
add
sbb
loopne
or
jg
xchg
das
fimull
loopne
inc
xor
jp
jecxz
adc
sub
inc
incl
mov
test
adc
rcrb
ret
loopne
movsl
mov
xchg
xor
pop
movsl
mov
mov
lock
ret
test
leave
or
scas
add
hlt
jo
dec
je
aaa
push
clc
inc
push
loopne
xchg
jb
mov
outsl
pusha
imul
mov
in
pusha
xor
jmp
and
adc
pushl
mov
adc
and
subb
mov
xchg
in
inc
cld
push
or
adc
and
or
adc
pop
loopne
push
mov
adc
pop
xchg
adc
mov
mov
push
mov
add
mov
rolb
mov
lcall
enter
pop
and
jb
es
and
movsb
xor
or
stos
sahf
jb
push
call
sbb
inc
push
inc
cmc
rolb
mov
ljmp
mov
cmp
sahf
cmc
and
orb
dec
popa
dec
cli
aad
loopne
add
shlb
sub
xor
push
add
push
jg
jg
in
cld
jecxz
xlat
loopne
jecxz
popa
cmpsb
mov
and
push
adc
mov
js
xor
push
mov
jns
xor
cli
and
ret
lods
add
add
mov
mov
nop
add
xor
or
call
hlt
jo
and
ret
loop
add
icebp
lods
push
xor
lahf
int3
mov
lock
mov
test
int
or
add
inc
aaa
pop
and
call
test
stos
inc
add
mov
fmull
mov
jle
loop
dec
push
adc
movsl
xchg
test
mov
nop
pop
sub
push
jl
jle
jo
add
fbstp
adc
or
adc
pop
sbb
sub
sbb
fildl
outsb
aam
stos
adc
add
xor
out
xor
xor
jo
xor
add
sub
js
mov
outsl
clc
decl
icebp
sbb
xchg
sbb
in
and
jle
std
mov
mov
icebp
sbb
and
aad
add
call
ror
js
jno
jno
mov
std
xor
adc
and
push
or
inc
sub
xchg
and
loopne
cmc
mov
or
in
add
mov
and
movsb
adc
rclb
test
iret
movsl
fidivrs
in
cs
xchg
adc
test
cmc
jno
je
andb
sbb
jle
mov
lcall
mov
ljmp
lods
enter
add
add
jle
mov
mov
add
sbbb
xor
into
and
js
int
push
popa
xchg
jl
sbb
jle
pop
les
in
jle
shl
idivb
push
sbb
cmc
out
xchg
push
mov
negb
loop
mov
sub
in
xchg
xchg
loop
inc
dec
push
push
sti
cmp
test
and
test
addb
cmovb
xchg
cmovo
sbb
xor
adc
or
add
and
jecxz
cld
pop
sbb
and
pop
shrl
jle
sahf
js
or
inc
adcb
lcall
xchg
mov
shlb
or
or
push
push
push
cwtl
jo
and
push
pop
or
iret
and
xorb
aaa
je
push
mov
sbb
push
test
or
xchg
mov
es
roll
cmpsb
dec
cmp
aam
cmp
add
jecxz
add
popf
roll
lahf
insl
lods
xorb
jnp
lods
js
cltd
test
ret
xchg
adc
ljmp
in
inc
jae
roll
cli
adc
add
scas
sbb
xor
cvtdq2ps
in
jbe
pop
out
leave
sbb
andb
mov
test
push
aam
movsl
lock
adc
or
lahf
test
nop
pop
lods
mov
jae
add
loopne
addb
aaa
mov
and
add
sbb
mov
scas
mov
adcl
push
shrl
adc
inc
test
and
es
outsb
out
adc
adc
xchg
cli
jae
mov
adc
decb
adc
adc
push
lock
ret
inc
aam
sbb
ret
mov
sbb
jns
inc
add
testb
add
dec
jmp
fsubrs
sbb
lret
in
sub
xchg
xchg
orb
es
mov
or
adc
pop
dec
and
pop
dec
mov
scas
cmovs
add
push
pusha
lds
imul
xor
adc
adc
or
imul
add
lods
pop
std
sbbl
push
sarb
adc
xchg
push
ljmp
aaa
js
sbb
jo
shlb
mov
and
push
ljmp
xor
nop
or
loop
jo
fs
jg
jmp
loop
test
mov
pop
xor
inc
xor
add
and
mov
cmc
ja
lods
and
add
into
cld
mov
or
out
loop
add
test
hlt
cli
pushl
loopne
or
fcoml
add
or
sbb
xor
stos
das
sub
add
lcall
lods
adc
test
iret
les
push
xchg
leave
adc
or
adc
rol
cld
call
scas
mov
adc
cmpsl
nop
adc
adc
add
ljmp
mov
call
ds
lret
jne
sub
mov
incl
jecxz
lret
pop
js
sbb
sbb
xchg
cld
insl
xor
or
test
jo
nop
icebp
pop
inc
call
mov
loope
adc
loop
add
xor
jmp
mov
sbb
testl
inc
movsl
inc
pop
out
shl
inc
ret
hlt
pop
mov
jae
loope
cltd
sarl
sub
mov
sub
mov
push
loop
add
xor
xchg
mov
cli
add
std
add
push
adc
xchg
ja
sub
mov
subb
mov
xlat
pop
movb
pop
push
rorb
movsb
push
popa
cld
clc
shlb
addl
add
mov
or
mov
add
outsl
push
addl
mov
push
sbb
push
out
or
rclb
std
jns
hlt
cld
dec
ret
add
loopne
call
add
lret
xchg
pusha
pop
xchg
shl
add
movsb
rolb
jp
dec
add
testb
xor
shll
shlb
or
out
add
push
mov
repz
mov
pop
sbb
icebp
fsubrs
mov
mov
iret
test
mov
sbb
rolb
xchg
mov
or
mov
mov
rcl
andb
or
or
cld
pop
xchg
or
xchg
sbb
add
loopne
adc
sbb
movl
push
push
outsl
mov
rorb
add
gs
jp
shll
icebp
sbb
or
mulb
cld
cmpsb
pop
cmpb
mov
ja
add
push
mov
std
xor
sar
enter
outsb
add
xchg
jle
and
mov
rcrb
mov
xor
adc
test
or
or
xchg
loope
adc
xchg
push
cli
or
orb
adc
push
sub
sub
add
add
out
add
xor
jp
xchg
aaa
inc
cmp
int
pushf
add
and
cmp
or
add
adc
dec
or
dec
add
sbb
test
mov
lock
loop
or
mov
xor
sbb
inc
jmp
in
or
mov
out
adc
ret
add
push
ss
and
mov
mov
mov
lret
loopne
lock
nop
jbe
mov
mov
or
sbb
test
and
sbb
ret
xchg
mov
or
aaa
ss
add
xchg
pop
cld
subb
or
xor
pop
subb
iret
test
lods
and
mov
add
mov
pop
sbb
mov
pop
andb
cmp
mov
dec
pop
or
add
xchg
lods
sbb
xchg
roll
pusha
sbb
add
scas
and
lods
adc
aam
loopne
icebp
xchg
sub
add
push
aas
xchg
and
pop
cmp
push
cli
div
sbb
jns
iret
add
xchg
iret
and
outsl
outsl
jbe
push
adc
out
mov
call
lock
jae
cmp
stc
xchg
cmp
fildll
mov
inc
jecxz
or
sarb
push
and
or
aaa
js
pop
rcl
mov
add
ss
add
sbb
fdivs
mov
fsubrs
add
rcrb
dec
add
or
pop
mov
mov
lea
jecxz
sub
mov
xorb
sub
push
mov
sub
adc
mov
lret
sbbb
push
push
mov
in
out
sti
leave
in
xchg
test
or
adc
addb
or
xor
lods
dec
pop
pop
pushf
rolb
inc
sti
dec
sbb
mov
pusha
out
fwait
inc
pop
lock
sti
xchg
das
and
out
jle
dec
ds
jle
addb
push
xor
cld
jae
rcrl
add
inc
sbb
ret
and
outsl
xor
nop
jnp
icebp
mov
add
rorb
lods
rorb
icebp
xchg
or
bound
shll
je
mov
ss
js
cld
jo
xorb
sbb
scas
lret
add
adc
mov
jae
or
push
xor
mov
stos
addb
adc
adc
sti
mov
ljmp
test
mov
xor
ficomps
add
add
jbe
loopne
inc
xchg
cmpb
xchg
std
inc
add
call
mov
notl
hlt
lret
incl
pop
add
pop
and
inc
mov
and
mov
mov
push
repnz
daa
ficompl
cmpb
gs
dec
repnz
incl
mov
rolb
add
sbb
add
insl
pop
sbb
ds
ljmp
and
shrb
mov
icebp
inc
fnsave
test
xchg
mov
cltd
adc
xor
flds
push
add
sarb
fidivrs
in
mov
rcll
xor
pop
inc
js
out
and
and
inc
add
aam
jl
xchg
icebp
mov
push
call
push
out
sbb
sub
xor
shlb
hlt
repnz
and
mov
aad
or
ljmp
add
xchg
add
imul
adc
push
sbb
push
dec
cli
pop
xchg
insb
mov
inc
pusha
adc
jle
mov
add
test
and
movsl
aad
push
ret
or
push
adc
sub
movsb
sarb
cmp
jecxz
or
arpl
mov
sbb
and
inc
into
xorb
add
fldt
pop
mov
out
mov
filds
add
add
sub
inc
cld
mov
sub
shrb
cmp
inc
push
subb
pop
sub
adc
loope,pn
inc
out
sbb
mov
ret
add
insl
test
test
pop
pop
clc
dec
mov
sbb
push
cwtl
xlat
jbe
xor
incb
sbbl
or
push
les
xor
outsb
repnz
mov
or
fildll
adc
imul
and
ret
and
rolb
xchg
std
mov
push
push
jp
jecxz
icebp
loop
stos
add
ljmp
push
loope
shrb
pop
pusha
adc
ret
sub
sub
add
jle
andl
shll
or
lret
push
sar
sbb
es
lds
or
sub
add
mov
mov
push
xchg
fwait
orb
call
mov
scas
repnz
or
call
pusha
add
mov
mov
dec
hlt
jo
ret
subb
sbb
nop
clc
jg
sbb
movsb
xor
ss
in
loopne
pop
pop
cmp
int3
ror
mov
mov
adc
rol
shll
mov
out
xchg
enter
fisubrs
sbbl
xor
push
mov
add
mov
imulb
jmp
cmp
cld
xchg
rorb
or
loopne
xchg
rorb
mov
and
push
xchg
jp
mov
mov
pop
add
pushl
data16
inc
and
gs
loop
or
inc
std
scas
inc
xchg
adc
cmp
loopne
jp
dec
test
mov
lods
mov
inc
cmp
add
mov
jnp
cmc
sub
sbb
and
and
adc
push
adcb
push
sar
jnp
fidivrs
fnstenv
and
xor
out
adc
cmp
pushf
push
jne
add
ljmp
xor
jle
adc
movsl
fdivrs
inc
adc
jo
addb
stos
inc
test
rclb
call
push
loop
xor
mov
add
adc
lcall
add
jns
jnp
push
mov
cmpsb
or
lock
xor
add
jae
and
push
test
sub
adc
pop
xor
mov
clc
cmp
sbb
clc
call
add
adc
jns
arpl
inc
pusha
add
sarb
pop
ret
loopne
adc
jo
push
mov
fwait
inc
and
push
fdivr
test
loop
jmp
scas
add
jnp
mov
push
add
or
pushl
lret
nop
push
in
fdivs
ja
cmp
ja
iret
add
pusha
vmread
shlb
mov
outsb
or
mov
sarl
adc
xchg
jae
push
clc
js
add
repnz
sti
sub
mov
xor
push
pusha
push
xor
or
xlat
jle
xor
addr16
pop
sub
fcom
cmp
out
mov
call
jnp
out
mov
or
testl
pop
loop
sub
out
or
mov
mov
jns
and
xchg
or
adc
pop
icebp
stc
xor
int
jne
pusha
movsl
out
cmp
and
out
pusha
mov
mov
decb
xor
cmc
push
add
fldt
sbb
pop
cld
push
mov
bound
or
jns
fs
clc
and
repnz
mov
test
stos
xor
add
inc
and
lods
jnp
mov
mov
xor
mov
aas
fcompl
mov
jecxz
mov
call
fwait
push
icebp
push
daa
add
test
xchg
xor
decl
jo
loopne
loopne
and
add
dec
mov
std
mov
test
fisubrl
inc
addl
mov
out
ljmp
cmc
sub
and
adc
ret
jg
jo
and
inc
sbb
pop
test
loopne
pusha
cs
lock
hlt
aad
test
shlb
fs
and
rol
sbbb
addb
dec
cmp
enter
js
sbb
das
add
lcall
sbb
xor
add
cltd
adc
icebp
xchg
mov
mov
add
les
out
or
jo
xchg
dec
mov
mov
add
xchg
ss
bound
rolb
cmp
add
leave
shl
jmp
or
push
orb
ljmp
inc
xor
std
or
cmp
add
mov
stc
add
or
pop
hlt
mov
or
cmc
or
js
xchg
mov
rorl
or
add
or
add
adc
js
sbb
or
add
adc
push
cmp
fimuls
std
sbb
or
xor
mov
icebp
and
or
xchg
into
mov
xchg
mov
mov
imul
or
icebp
or
enter
xor
test
push
xor
mov
ds
dec
clc
lret
js
fsubs
sub
dec
ret
bound
add
rcrb
xor
test
jae
sub
or
sbb
cmp
xchg
fsubrs
lock
xchg
push
sti
out
jecxz
xchg
sahf
nop
mov
loopne
or
mov
rclb
sti
jnp
in
add
xor
add
mov
mov
out
pusha
add
sbb
xchg
cmp
in
scas
add
add
dec
call
xlat
mov
call
inc
xchg
add
mov
call
nop
add
xchg
add
jecxz
push
rorl
jge
call
mov
adc
hlt
push
xlat
lock
test
bound
xchg
stc
insb
adc
xchg
xchg
pop
mov
mov
mov
test
mov
inc
push
jo
bound
cmp
xchg
and
leave
dec
stos
cmp
push
sbb
mov
push
add
and
mov
or
and
push
inc
fcoml
xchg
int3
movsb
bound
inc
mov
xor
jle
sbb
and
decl
test
xor
ret
bound
jo
cld
or
adc
push
roll
ljmp
add
mov
add
daa
push
add
mov
pop
fdivr
xchg
inc
add
inc
add
or
push
sbb
lock
cmpsb
mov
xchg
hlt
aaa
sbb
ror
shrb
or
mov
mov
or
inc
aam
push
into
rolb
mov
call
andb
dec
sub
scas
xlat
orb
fsubr
shlb
push
mov
pusha
adc
call
add
add
lock
inc
sbb
add
dec
push
subb
mov
push
or
push
lods
mov
push
sbb
incl
lods
lods
mov
fisubrl
xor
push
dec
rolb
adc
mov
cmpsl
cmpb
jb
fcomps
mov
and
into
sub
xchg
add
mov
adcl
aaa
cld
pop
pop
lock
aaa
rolb
pop
lret
xchg
push
adc
fdiv
cwtl
push
cmc
jg
jo
mov
inc
mov
jmp
jg
ss
jbe
sbb
outsl
or
lret
or
mov
movsl
fwait
in
pop
xor
add
sbb
adc
and
orb
mov
adc
loopne
mov
sbb
jno
out
adcb
cmp
pop
add
icebp
fistpll
mov
or
sbb
add
insl
enter
and
shl
movsl
movsl
ja
push
push
add
add
cmp
or
mov
iret
roll
mov
jg
add
lret
test
adc
push
or
adc
rcrb
loopne
divl
std
pop
dec
rorb
rolb
loopne
jecxz
add
push
movsl
or
mov
adc
push
outsb
ds
add
lds
lcall
push
add
jl
js
or
sub
pushf
pop
leave
adc
loope
addl
push
add
sbb
insb
sbb
push
notl
sbb
loopne
mov
push
aam
fistpl
mov
mov
sbb
xchg
inc
mov
lcall
cltd
mov
jb
sbb
jp
pusha
sub
xor
out
out
xor
cmp
sti
inc
pop
inc
xorb
repnz
or
loopne
add
adc
scas
test
add
add
gs
stc
enter
push
pop
jno
test
add
cmp
insb
xchg
leave
rolb
inc
xor
pusha
clc
push
xchg
sbb
add
fisttpll
push
inc
enter
push
jbe
movsb
cli
or
xchg
ljmp
xchg
mov
pop
add
andl
lcall
push
dec
call
dec
incb
dec
clc
xor
push
mov
hlt
adc
dec
testl
pop
jecxz
mov
pop
adc
inc
inc
in
jae
or
jg
jo
xchg
xor
jo
mov
mov
sub
or
or
das
xchg
roll
dec
cltd
pop
pop
pop
rolb
adc
adc
sub
popa
sbb
inc
pop
mov
mov
inc
jle
imul
pop
adc
xor
adc
inc
add
andl
cwtl
or
and
rorl
mov
pop
xor
and
inc
insb
jo
ds
das
mov
enter
and
jo
cli
jb
push
inc
or
je
push
adc
data16
fwait
out
mov
sub
icebp
sbb
jle
adc
sbb
inc
cltd
push
pop
cmp
repnz
xchg
and
inc
mov
cmpsl
aam
and
loopne
add
mov
mov
enter
sbb
pop
jo
rolb
inc
push
fcmovb
sbb
lcall
mov
cmp
js
sbb
mov
cld
int
mov
inc
mov
mov
xchg
fdivr
mov
sbb
add
or
movsl
sbb
jne
fwait
sub
mov
pop
jecxz
add
fadds
sahf
inc
inc
mov
cmp
test
repz
mov
scas
adc
dec
add
jmp
pusha
jp
inc
addr16
add
test
ret
sbb
mov
dec
repnz
incb
mov
orl
xchg
and
xlat
dec
out
mul
inc
and
push
adc
or
inc
add
jb
mov
subb
ret
mov
adc
stos
mov
push
lods
mov
js
push
scas
popa
adc
aas
add
sub
ret
and
cld
cmp
mov
imul
mov
lret
ljmp
loopne
jae
adc
fistps
mov
pusha
or
mov
jle
mov
sub
lock
mov
sbb
sbb
sub
cli
call
nop
mov
mov
xchg
mov
jbe
decl
mov
jbe
xor
cld
loop
mov
ljmp
mov
push
lahf
and
mov
cltd
xchg
enter
mov
mov
mov
test
xor
and
push
push
stos
loope
xchg
popw
cltd
pmaxsw
mov
jg
or
insl
xor
pop
jae
and
repnz
mov
inc
push
stos
cltd
inc
dec
or
cli
cmp
mov
loopne
inc
add
push
mov
lret
inc
pop
das
push
add
inc
xorl
cli
add
dec
pop
inc
incl
cld
cltd
stc
imul
add
push
scas
inc
pop
xchg
jecxz
popa
mov
xor
or
insb
jp
fcomip
mov
and
lret
js
xlat
mov
inc
xchg
jle
inc
sbb
mov
idivb
jo
and
jecxz
js
sub
mov
cmp
mov
adc
xor
adc
and
mov
dec
ljmp
popf
mov
mov
cs
pusha
jecxz
sbb
sub
mov
push
popa
pushl
shl
mov
or
add
ss
cmpsb
sbb
test
add
xchg
mov
fwait
repnz
dec
movsb
fidivl
inc
mov
in
sub
fsubs
ds
pop
out
loopne
jge
sbb
adc
shlb
adc
and
jbe
sub
mov
jo
mov
jmp
out
ret
mov
adc
mov
inc
clc
mov
hlt
addl
cmp
cmc
or
push
inc
sbbl
jg
add
fwait
loop
jnp
ja
xor
stos
mov
dec
pusha
adc
xor
jbe
icebp
push
push
loope
add
add
jmp
mov
incl
mov
and
rcr
mov
sbb
mov
loopne
jo
push
cmpb
push
mov
fcomip
imul
and
lock
or
imul
xchg
scas
nop
xor
ja
sub
pusha
mov
mov
into
neg
xor
xor
mov
nop
sbb
mov
add
mov
dec
inc
jp
xlat
add
cmpb
out
fbstp
push
lock
push
mov
add
or
dec
mov
mov
jge
jmp
pop
pusha
sbb
sbb
jo
icebp
inc
add
ret
pop
pop
fbld
push
sub
add
add
inc
or
std
adc
scas
data16
or
cmpsb
movl
lock
ljmp
pop
repnz
mov
and
dec
push
jo
jge
fiaddl
mov
lods
push
inc
jecxz
xchg
subb
adc
inc
sub
cwtl
jle
inc
cmp
std
push
insb
xchg
mov
or
sbb
int3
inc
inc
pop
movsb
push
mov
add
lock
icebp
inc
sbb
addl
movsl
loope
sbb
sbb
pop
jo
shll
add
loop
pop
jb
loope
mov
dec
push
rolb
push
or
jp
xchg
cmp
xchg
mov
add
inc
test
call
adc
xchg
cmp
arpl
orl
movsl
loopne
pop
jno
lock
add
js
out
xor
pop
in
stos
out
add
js
add
and
cwtl
push
mov
adc
adc
mov
fcomps
mov
pop
mov
add
nop
xchg
add
add
add
xor
js
mov
jbe
adc
fsubrl
jo
adc
and
fistps
pusha
iret
orl
psrlq
pop
jmp
and
sti
jb
and
pop
in
add
movsb
jb
shlb
push
popa
cmp
mov
sbb
push
xchg
add
mov
lcall
shrl
stos
frstor
jnp
std
ror
addl
mov
test
iret
push
and
add
jno
divb
inc
add
loope
sub
imul
push
stos
add
sbb
push
push
push
in
pop
es
hlt
into
xchg
mov
or
lods
fldcw
test
mul
or
cli
int
mov
insb
mov
in
cmpb
pusha
pop
icebp
das
mov
aaa
xchg
push
nop
scas
setbe
pop
orb
mov
or
push
xchg
adc
xlat
xor
mov
incl
mov
fs
adc
mov
sbb
dec
cld
lcall
or
shlb
addb
adc
xchg
mov
dec
or
sub
push
or
jle
inc
add
sarb
xor
aas
cwtl
cmpl
dec
adc
fstpt
mov
sbb
or
stos
js
add
jge
add
cmpsb
jle
xlat
mov
push
je
mov
aam
adc
es
neg
push
mov
add
mov
stc
sarb
sbb
jno
out
cwtl
ss
lea
ss
cmpb
sbb
orb
shlb
sbb
adc
or
insl
sti
fwait
pop
jmp
dec
int3
lods
lods
mov
add
fcoms
pop
rolb
push
insb
xorb
push
adc
outsb
jecxz
movsb
int3
fiaddl
fimuls
je
sbb
ja
adcb
inc
shlb
xor
seto
cmpsl
mov
dec
int3
xor
xlat
movsl
cs
sub
insl
ret
ja
mov
pop
addb
cmpsb
xor
pusha
cld
jg
sub
das
mov
inc
and
xor
out
push
sub
mov
push
or
ja
xor
add
mov
cmpxchg
pusha
push
xchg
add
test
add
mov
jg
jecxz
mov
or
jno
and
cld
outsb
ja
xor
xor
mov
pop
push
push
adc
xorb
adc
mov
fs
push
popf
add
int
lcall
and
inc
outsl
and
in
push
push
inc
call
add
adc
mov
jne
and
loope
xor
adc
addb
or
jecxz
cltd
adc
cmpsl
xlat
add
nop
jge
sbb
mov
cwtl
and
inc
add
lahf
cmpsb
ljmp
loope
adc
adcb
sbb
sub
outsl
movsb
sub
filds
call
xchg
jle
mov
popa
mov
add
lcall
cld
arpl
push
push
out
add
xchg
add
cld
sbb
ret
push
stos
xchg
cltd
rclb
pop
ljmp
rcrb
stos
inc
add
enter
cmpsl
push
lcall
fiaddl
xor
mov
jmp
jge
imul
lods
mov
loope
fbstp
pop
add
add
pop
or
or
pusha
push
and
jmp
jne
push
fisubl
xlat
or
jne
mov
adc
pop
xor
sbb
ficoms
mov
cmp
mov
add
movsl
ja
outsb
pop
mov
mov
xorb
bound
inc
xor
or
movsl
or
adc
inc
add
loope
inc
stos
sti
incl
push
cmp
into
js
mov
cmpsl
adc
xlat
mov
aaa
inc
nop
pop
push
nop
xorb
jge
clc
add
incl
xor
int3
add
inc
mov
lcall
add
or
adc
add
rorl
lcall
mov
dec
add
sbb
nop
mov
clc
xchg
mov
and
adc
lock
cmp
call
mov
add
sbb
addb
xchg
icebp
dec
push
outsl
push
fadds
mov
inc
loope
add
and
das
ss
push
ds
and
mov
jecxz
jbe
rolb
dec
subb
test
mov
push
ljmp
sub
out
add
push
adc
or
stos
mov
push
cld
add
or
ret
dec
es
rcrb
stc
inc
dec
flds
aad
mov
cmpsl
fdivs
mov
test
ret
adc
xchg
dec
inc
adc
mov
call
xchg
xchg
dec
adc
push
adc
or
adc
cmp
jecxz
add
nop
fwait
andl
push
inc
push
scas
push
add
jne
movsl
outsl
enter
js
xor
and
scas
adc
add
repnz
cmp
jecxz
and
push
and
fwait
xchg
add
stos
jecxz
into
jle
mov
adc
mov
loop
inc
inc
xchg
clc
mov
or
mov
jmp
push
pop
push
add
fwait
daa
sub
mov
adc
inc
inc
sahf
stos
mov
lea
or
add
jb
sbb
adc
popa
xchg
enter
push
lds
sti
mov
add
rcrb
sbb
lret
rolb
mov
inc
sbb
sbb
sahf
arpl
xorb
adc
adc
enter
adc
add
rolb
or
push
inc
push
or
sbb
lock
mov
sbb
mov
sti
cmc
push
inc
add
mov
sbb
and
adc
lret
test
jle
insb
add
mov
xchg
js
inc
das
mov
lock
and
pop
aam
xor
sub
subl
loop
test
or
fs
sahf
test
fdivs
or
pop
rcrb
clc
inc
mov
or
sti
jmp
jg
cltd
inc
icebp
lods
js
inc
jecxz
mov
mov
or
lret
mov
add
sub
out
in
rcll
push
inc
push
jecxz
cmp
addb
fs
std
in
adc
adc
mov
inc
inc
lea
test
fisttpl
loopne
pop
inc
cld
push
pop
iret
xchg
jbe
shll
dec
lock
and
adcb
test
mov
push
mov
loope
lods
and
inc
pusha
jle
pop
lock
sti
and
inc
clc
inc
aaa
add
adc
xorb
add
ret
ds
andl
stos
lods
fcomps
and
mov
push
and
lds
pop
xor
add
inc
roll
xor
mov
cmpsb
sbb
dec
pusha
adc
or
lcall
cmpsb
mov
incl
sub
fisubs
inc
cli
add
lcall
or
inc
or
and
add
push
jecxz
std
push
sbb
ret
daa
add
and
mov
jle
mov
or
lahf
and
push
xlat
shrb
fidivrs
stos
or
or
test
or
enter
sti
mov
pop
cs
bound
clc
xchg
rolb
cld
sbb
adc
jle
fbstp
dec
movsb
dec
loopne
dec
fildl
andb
inc
mov
and
dec
cli
add
cmp
lds
jnp
daa
adc
jp
stos
xchg
fucomi
pop
inc
or
sub
scas
push
and
xchg
clc
add
xor
inc
pop
test
faddl
add
add
aaa
push
aad
sbb
je
insl
cwtl
je
inc
aam
fs
ficomps
jecxz
and
loope
push
dec
smsw
cld
sbb
jg
or
mov
cmp
rorb
add
jle
sub
outsl
rcpps
rorb
orl
incl
dec
mov
inc
push
subb
sbb
je
lods
fwait
cli
cmp
jg
pop
insb
jle
or
xor
mov
bound
mov
out
pushf
les
mov
pop
lock
cmp
jl
repnz
jne
rclb
loopne
cmp
jb
popl
sbb
xchg
gs
outsl
int3
mov
fsubs
mov
adc
bndstx
xchg
je
inc
dec
ljmp
nop
mov
xor
or
and
mov
cmpsl
subl
mov
jae
loopnew
cli
inc
sbbb
ret
pop
repnz
and
rcrb
test
cmc
decl
lock
or
adc
push
xor
sub
push
out
xorb
cmp
jp
fdivrl
mov
mov
xor
mov
jecxz
scas
pusha
insb
push
sbb
push
aas
and
movsl
cli
inc
jmp
push
sbb
ret
push
and
in
sub
xor
push
pop
sbb
imul
sbb
add
xchg
inc
add
add
xor
shlb
js
inc
or
mov
test
push
cmp
stos
add
sbb
fs
add
or
sbb
dec
aam
xchg
movsb
scas
cli
jo
add
ljmp
dec
data16
roll
push
sub
pop
repnz
jg
ret
pusha
addl
dec
cwtl
add
xlat
cmp
pop
lahf
pop
pop
fwait
pop
mov
sub
adc
movmskps
or
inc
jo
and
add
inc
dec
inc
mov
or
pusha
inc
outsl
lret
mov
xchg
mov
clc
aaa
push
sbb
add
adc
cmc
add
push
shl
adc
pop
xorb
out
and
pusha
cwtl
cwtl
cmc
push
shll
and
fs
mov
add
popf
sar
mov
clc
or
adc
mov
in
jnp
out
es
lds
pop
hlt
xor
test
pop
push
dec
jmp
loop
jo
xor
mov
js
adc
fwait
stos
ljmp
cs
icebp
shlb
jp
out
pop
push
dec
insb
testb
hlt
pusha
sbb
add
call
mov
pop
sbbb
aas
nop
or
xchg
push
scas
and
jg
sbb
subl
int3
xchg
je
add
mov
sarb
sub
xor
and
popa
push
sbb
out
adc
and
push
pusha
aaa
repnz
or
xchg
xor
and
fidivrs
scas
mov
sarl
add
dec
loope
pusha
ja
out
test
out
or
js
push
cmp
pop
push
mov
icebp
or
ffree
mov
jecxz
xchg
ja
cli
hlt
sbb
lock
xor
cmp
arpl
push
xor
cmpsl
adc
fs
adc
xor
mov
pop
mov
dec
jg
lret
push
sub
pop
inc
subb
sub
jmp
dec
hlt
push
dec
push
shl
or
pop
add
fistps
adc
in
mov
adc
inc
loopne
xchg
add
movsb
les
in
inc
data16
add
cmc
fwait
int3
loopne
or
and
clc
lcall
jmp
lock
pop
ret
adc
ljmp
outsl
push
jne
movsl
aaa
inc
mov
inc
push
lcall
call
mov
call
jo
xchg
jbe
mov
into
inc
xchg
mov
add
sbbb
ret
outsl
mov
add
inc
sub
adc
adc
xor
and
add
sahf
cli
adc
xchg
push
add
pop
xor
fwait
adc
sub
out
cli
mov
aam
jnp
cmp
les
add
xor
loopne
jle
sar
sbb
cli
mov
add
cmpsl
repnz
fs
leave
lock
clc
xor
dec
inc
push
out
idiv
jg
add
jne
mov
xchg
sub
lret
ror
jg
pop
mov
loope
mov
nop
out
lcall
mov
popa
adc
and
sub
jg
add
xor
inc
xchg
mov
mov
mov
psubusb
adc
cld
sbb
je
xor
dec
out
lock
pop
sar
mov
adc
movsb
cmp
dec
mov
rorl
scas
inc
pushf
incl
mov
fwait
and
inc
stos
sub
xchg
outsw
call
pop
mov
mov
add
push
pop
xchg
push
xor
mov
shlb
inc
inc
mov
cmp
dec
add
cmc
and
loope
mov
mov
mov
fwait
and
add
dec
ja
pusha
jb
or
add
adc
fs
adc
xchg
mov
and
sahf
sbb
adc
sub
cltd
shlb
mov
push
pop
fwait
inc
test
mov
push
pop
sub
adc
mov
stos
sbb
fcomps
ds
xchg
lahf
sbb
jecxz
add
xchg
call
xchg
xchg
sub
push
cmp
mov
call
mov
dec
or
inc
mov
es
inc
sbb
and
movsl
test
mov
mov
outsb
clc
cmpsb
js
popa
inc
lock
jg
cld
cmp
out
bnd
jecxz
mov
and
inc
jbe
outsl
mov
mov
je
or
hlt
call
orl
dec
sbb
das
xor
js
pusha
shrb
or
lret
dec
inc
test
jge
bound
inc
add
mov
ds
inc
pop
inc
inc
mov
dec
sarb
or
xchg
cmp
add
or
js
sbb
or
push
es
andb
jmp
jle
sbb
add
mov
and
pop
imul
sub
push
loop,pn
insb
add
aam
jnp
lea
push
and
fcoml
xor
or
ss
mov
outsl
and
pusha
lcall
cwtl
mov
insb
push
adc
sbb
and
and
inc
push
enter
or
std
mov
mov
push
add
adc
and
mov
jno
rorb
les
mov
int
shrl
push
or
hlt
mov
outsl
add
mov
testb
punpckldq
ret
mov
adc
sbb
sbb
fisubrl
test
rorl
xlat
fcmovbe
out
mov
aaa
test
xlat
out
push
lret
cmp
push
call
les
insl
pop
les
mov
pusha
enter
aad
push
dec
out
fimull
cmpsl
xor
out
push
xlat
ret
in
inc
fisttps
mov
xchg
ret
jg
shrb
and
push
adc
fcmovne
inc
mov
sbb
dec
insb
jo
or
cld
add
movsb
sub
add
add
nop
add
loopne
inc
push
scas
mov
pusha
or
je
inc
dec
jmp
cli
data16
jbe
sti
push
xor
and
pushf
and
mov
cmp
and
sbb
xorl
daa
mov
xor
test
cli
int3
sbbb
mov
adc
or
bound
loop
jp
ret
push
push
add
dec
out
push
js
push
mov
repnz
sub
movsl
pop
inc
xchg
fs
outsl
je
jecxz
mov
sbbb
addl
cmpb
test
pushf
ret
add
adc
shll
out
push
and
or
mov
test
into
cmp
or
or
and
or
sbb
lds
sbb
push
push
divb
cmp
scas
sti
xchg
dec
xorl
pop
sub
enter
mov
out
and
xchg
cmp
mov
jp
or
push
ljmp
push
sub
cli
sub
xor
pop
ret
jle
cmpsl
les
shrl
and
bound
shlb
mov
cmp
orb
mov
aam
cli
jns
xchg
or
or
or
dec
push
adcb
or
dec
sub
iret
bound
aaa
xchg
hlt
scas
subb
add
lods
dec
mov
mov
out
iret
jb
repnz
enter
repnz
sub
data16
cmp
cs
ret
or
shrl
or
aaa
sarb
pushf
jle
inc
add
push
mov
jbe
fiadds
sbb
inc
push
push
call
vpaddq
push
cwtl
inc
push
add
push
clc
or
loopne
dec
add
or
add
arpl
and
std
xchg
bound
shlb
loopne
out
mov
push
add
pop
movsb
inc
add
fwait
xor
push
dec
sbb
imul
cmp
js
hlt
mov
xor
pop
orb
cmp
xchg
jbe
rorb
sbb
loop
clc
out
aam
and
lret
sbb
add
stos
adc
imul
add
pop
sbb
fidivl
in
and
inc
inc
js
push
inc
add
inc
cmpsb
xchg
xchg
mov
rorb
dec
loopne
and
stos
inc
loopne
pop
adc
in
and
dec
pop
mov
xchg
sbbb
cmp
or
jle
pushl
or
cmp
adc
or
xchg
and
ret
cmp
adc
mov
stos
xchg
ss
lds
push
jl
adc
je
add
and
inc
sbb
pop
cli
sbb
inc
and
repnz
mov
adc
push
add
sbbb
adc
mov
jp
sbb
mov
rcrl
icebp
sub
push
push
loopne
fiadds
lcall
jnp
or
sbb
add
inc
mov
rclb
imul
add
sbb
sub
xor
test
shrb
jo
shlb
xor
inc
push
xchg
into
shll
sub
push
or
popf
or
loopne
cmc
cmc
lea
loopne
xchg
loopne
adcb
or
shlb
mov
leave
cmp
or
adc
insb
testl
cwtl
loope
insl
mov
pusha
inc
lods
mov
dec
ja
mov
push
jp
jg
jle
leave
add
sbb
mov
xor
add
ret
incl
mov
or
jo
sbb
mov
fistps
fwait
inc
fucom
or
or
mov
sbb
mov
sbb
lcall
sbb
inc
adc
add
and
inc
das
out
nop
es
adc
lcall
pop
jle
mov
or
lock
lcall
xor
mov
xor
pop
inc
mov
add
scas
pushf
shl
incl
inc
faddl
ss
push
popl
xor
xor
push
mov
addl
inc
in
xor
and
mov
xor
mov
shlb
mov
mov
es
lds
push
push
lcall
mov
clc
or
insl
shrb
shll
inc
sbb
mov
insb
insb
loopne
xchg
mov
outsl
add
int
xchg
shlb
ret
imul
nop
movsb
lcall
mov
or
out
lret
fisttps
or
loope
call
pusha
fmull
lea
and
mov
fisubs
enter
and
fmull
clc
data16
out
lock
jo
sbb
xchg
adc
jmp
pusha
add
cmp
inc
or
loopne
stos
push
add
and
sbb
push
push
sub
sbb
adc
cli
sbb
adc
xor
and
add
mov
jns
xchg
cltd
jl
ja
mov
sbb
js
call
loop
es
aam
sbb
mov
or
pusha
ja
sub
call
jo
sbbl
sub
xor
sbb
lcall
sub
xor
mov
inc
sbb
std
cmpsb
or
sub
inc
mov
adc
aas
add
incl
hlt
cmp
and
dec
xchg
movsb
mov
push
rorb
jp
xchg
push
fisubl
dec
cmc
rclb
pop
add
dec
mov
rclb
push
lock
push
push
or
stos
mov
sbb
pop
or
cmpb
xchg
adc
lock
or
jb
sub
shlb
pop
nop
enter
mov
ret
mov
push
dec
cmp
or
inc
xchg
or
mov
out
loop
cmpsb
add
jns
jnp
jns
clc
or
push
adc
jecxz
enter
cltd
inc
dec
ret
mov
adc
pop
jle
bound
push
jge
sahf
movsl
and
ret
clc
inc
and
lods
test
mov
out
push
sti
or
xor
sbb
add
xchg
and
adc
xlat
cwtl
xchg
cmc
add
xchg
js
push
jg
test
inc
rorb
pop
or
xchg
mov
mov
inc
add
and
inc
loop
movsb
pop
clc
rolb
imul
adc
sbb
xor
push
add
sub
ja
roll
adc
loopew
fisubrl
add
mov
add
jne
push
out
mov
mov
icebp
out
cli
fwait
out
lret
mov
jecxz
imulb
xchg
sub
mov
add
inc
add
inc
adc
addr16
jno
popa
xchg
call
les
popa
aas
subl
jbe
loop
mov
mov
jnp
xlat
cld
or
xchg
std
jg
inc
inc
hlt
or
sbb
shlb
mov
jg
mov
lock
mov
or
or
add
sbb
cmp
loopne
ret
je
and
fwait
pop
pusha
jl
stos
cli
mov
lock
cmp
dec
popa
ret
add
rclb
rcrl
mov
pop
and
jmp
daa
or
repnz
into
out
pop
inc
jl
movsb
pop
mov
inc
mov
cmp
cmp
or
adc
sub
mov
push
ds
pushl
jl
jns
repnz
iret
cli
test
lret
pusha
xor
icebp
xor
arpl
sub
or
dec
sbb
mov
adc
sbb
cmp
mov
inc
mov
mov
and
mov
cli
fildll
jl
xor
cmp
and
cltd
jecxz
stos
es
fmuls
rolb
ja
call
iret
icebp
test
inc
inc
jmp
inc
cld
movsl
jle
push
jmp
dec
cmc
iret
ret
cmp
mul
cmpsl
add
xchg
stos
dec
outsb
lret
insb
loop
xchg
cmp
mov
shrb
mov
test
outsb
loope
xor
mov
inc
add
pop
adc
or
adc
pop
fdivs
sub
cld
inc
lods
xor
sahf
xor
pop
mov
fisubrl
out
add
shrl
or
cwtl
je
jo
jecxz
test
mov
sbb
adc
mov
push
xchg
insl
mov
rorb
inc
ljmp
clc
and
pusha
cmp
test
inc
outsl
das
add
sbb
es
testb
jo
clc
movsb
cli
dec
das
adc
dec
jo
adc
push
daa
inc
mov
xchg
push
add
add
push
jg
push
stos
sbb
adc
and
inc
les
enter
mov
lret
cli
int
and
mov
mov
test
jle
mov
push
sbb
adc
and
adc
dec
test
inc
xor
pop
mov
rorl
lret
xor
xor
cmp
dec
incl
pop
pop
cs
adc
icebp
inc
clc
sbb
sar
xor
or
mov
xorb
lcall
test
outsl
stc
stos
clc
repz
js
negl
add
add
xchg
hlt
mov
pop
mov
dec
mov
push
push
xchg
adc
dec
rolb
mov
movsl
lcall
push
and
mov
in
loope
add
or
out
in
enter
jmp
or
jmp
fbld
xor
cmpsl
pop
out
or
rolb
clc
mov
sub
adc
mov
jp
mov
or
pop
and
pop
and
jo
jb
scas
xor
fsubrs
out
rorb
div
xchg
cmpb
sbb
test
or
xchg
add
enter
icebp
js
nop
pop
sbb
fnsave
inc
xor
call
and
add
or
sbb
mov
mov
mov
xor
into
cld
and
add
loopne
addb
out
rclb
into
dec
call
sub
or
cld
pusha
and
jb
mov
and
or
add
or
xlat
fstl
sub
add
push
pop
rolb
repnz
test
shlb
sbb
mov
xor
loopne
std
dec
fisubl
aas
addl
inc
mov
aad
ds
mov
lods
xor
in
push
and
jl
and
gs
and
je
ljmp
xor
adc
fisubl
and
adc
pop
jb
inc
into
aam
scas
xor
jecxz
add
andnps
or
lret
add
jo
sub
or
icebp
decl
xor
pusha
pushf
adc
pop
and
out
push
sbb
adc
sarb
mov
or
dec
mov
orl
shlb
jl
popa
movsb
bswap
inc
fiadds
xor
or
xchg
mov
xchg
ljmp
xor
pop
loopne
adc
push
adc
decb
popl
or
shl
push
jg
mov
add
pop
mov
mov
jge
sub
test
xor
or
mov
in
mov
rcrl
mov
xlat
out
mov
mov
int3
aam
adc
xor
dec
incl
mov
pop
inc
push
mov
xchg
loopne
fs
mulb
or
insb
cwtl
int
xor
aaa
out
push
xchg
inc
test
ljmp
cli
andb
int
cmp
xchg
lock
push
jnp
jbe
push
dec
aam
add
rcrb
mov
push
xchg
into
ss
push
push
sub
jae
add
add
and
dec
push
lahf
test
shl
and
fwait
or
mov
repz
or
sub
push
lcall
add
sub
sbb
ljmp
lock
pop
int3
stos
or
call
lea
push
cmc
xor
sbb
out
xchg
and
mov
sbb
scas
jo
orb
mov
mov
inc
mov
mov
call
pusha
jne
lret
call
into
mov
mov
icebp
testl
cmp
lret
pusha
enter
add
orl
add
and
sub
cltd
adc
test
sbb
push
sbb
push
fwait
and
mov
xchg
and
test
in
call
orb
cmp
mov
and
or
or
jno
pop
addb
inc
xor
jle
test
mov
aaa
sbb
incl
jl
out
inc
add
test
add
insb
inc
andps
lcall
xchg
cwtl
add
movsl
xchg
adc
pop
mov
cwtl
inc
bnd
inc
jnp
push
dec
sub
lods
ret
lea
out
push
jle
out
movsl
or
inc
jp
push
out
xor
add
test
xchg
lret
jp
jmp
mov
or
jnp
jp
dec
rclb
rcll
add
divl
cs
push
movl
xlat
pushf
xlat
fucomi
adc
xchg
or
add
stos
xlat
push
sbb
or
or
clc
and
sti
pop
add
js
jle
pop
or
inc
cmp
enter
clc
jle
lret
mov
andb
pop
movsb
inc
xor
sbb
fistpll
call
dec
or
inc
inc
shlb
push
mov
inc
jbe
xchg
fisubrl
pop
pop
icebp
fbstp
jle
xor
pop
sbb
push
shlb
or
xor
inc
and
mov
mov
mov
add
pop
push
inc
push
mov
fsubp
imul
adc
pusha
sbb
mov
testl
and
pop
ljmp
adc
cmp
xchg
incb
or
cmc
sti
enter
inc
dec
mov
and
lcall
scas
nop
fadds
lods
enter
jnp
cmc
xor
mov
sbb
jle
dec
jb
mov
js
push
jle
out
inc
popa
and
mov
push
ret
test
decl
cli
push
shll
lock
mov
or
and
pop
jbe
das
aam
sbb
sub
rol
sti
sbb
ret
push
int
pusha
add
es
add
or
jp
orb
cwtl
ljmp
movsb
jp
xchg
sti
shrb
insl
cld
or
loopne
addl
cmp
and
insl
ror
mov
add
movsl
dec
stos
pop
mov
ja
mov
aad
cmp
std
dec
ljmp
loope
xor
rolb
lods
dec
adcl
ficompl
sbb
inc
incl
arpl
add
sbb
test
shlb
repnz
add
push
pop
mov
sbb
fdiv
cmp
icebp
negb
out
add
sub
clc
xor
cmpsb
mov
and
lret
push
pusha
test
rorl
loope
clc
push
call
out
sbb
call
std
rclb
add
or
addb
mov
movsl
fistps
push
xchg
or
sub
pop
rcr
mov
pusha
adc
xor
cmc
cwtl
es
orl
adc
outsl
sub
out
sbb
pop
dec
and
test
sbb
rcll
outsb
sbb
in
push
mov
std
rcr
push
push
push
call
psubusb
mov
add
bound
orl
jecxz
and
ss
daa
ljmp
lods
inc
add
push
mov
mov
inc
cmp
and
jo
fidivs
mov
sbb
pop
and
add
mov
push
sub
or
clc
mov
rol
xchg
adc
loope
adc
add
js
lods
fwait
sub
shll
jno
and
repnz
mull
xor
ret
push
js
xlat
shll
mov
pop
aam
out
pusha
jl
enter
xlat
int3
fistl
sub
enter
lret
adc
lods
lea
subb
xchg
or
xor
push
aaa
ret
sbb
insb
les
xor
jbe
addb
add
adc
dec
fimull
negl
adc
mov
loopne
in
cli
jecxz
mov
or
mov
scas
nop
xlat
jecxz
inc
orb
into
inc
or
jns
dec
adc
mov
ret
test
sub
int3
mov
jo
scas
add
pop
dec
jo
cmpb
shrb
sub
std
jb
fidivl
loopne
mov
add
cmp
push
ds
add
mov
mov
outsl
fistpll
mov
jo
sti
or
add
or
cmc
sub
pop
and
xor
testl
addb
sbb
or
pop
out
mov
adc
xor
xchg
mov
dec
add
hlt
mov
add
xor
add
or
sbb
pop
push
inc
pop
sub
add
popa
or
mov
and
decl
xchg
dec
push
add
push
add
push
add
add
adc
jg
and
adc
add
adc
faddl
add
adc
cmp
iret
sti
test
adc
push
xchg
cli
mov
jecxz
loopne
std
in
add
push
push
mov
psubb
add
cld
das
clc
mov
shl
and
xchg
cwtl
xor
mov
cmp
xchg
enter
sub
jecxz
add
les
sbb
push
ljmp
add
mov
call
loopne
or
mov
movsb
cmp
cs
mov
mov
jmp
sbb
add
inc
add
js
stos
xorl
mov
mov
add
dec
rolb
filds
out
mov
add
fstps
and
mov
pop
hlt
inc
ret
and
add
cwtl
push
fadds
enter
lods
jbe
push
dec
adc
addl
add
or
sbb
les
and
push
sti
or
push
push
addl
jg
movsb
xchg
test
pop
mov
and
sbb
and
mov
test
sahf
and
jle
push
adc
xchg
ss
jne
cmc
pop
add
jle
add
stc
sbb
jbe
inc
sbb
jbe
sbb
add
negb
xchg
add
jnp
out
sbb
mov
nop
inc
fisttpl
out
mov
mov
add
sbb
sbb
or
lock
pop
and
ds
insb
adc
add
push
push
adc
xor
js
inc
cli
mov
inc
xor
or
mov
jg
iret
stc
add
mov
popa
dec
out
add
dec
cli
pop
dec
iret
testb
inc
cmp
mov
fidivl
lahf
sbbb
loop
decl
icebp
aad
adc
push
add
cld
mov
fdivs
sbb
ss
add
or
mov
xchg
add
xor
mov
outsl
sub
sbb
or
inc
cmp
add
sbb
cld
int3
jbe
push
fcomi
mov
sbb
insb
mov
add
sbb
mov
js
jecxz
sbb
icebp
fildll
incb
iret
adc
rorb
sahf
mov
mov
lcall
nop
and
add
shl
cmpsb
xor
filds
add
inc
in
std
sub
jge
loope
es
cmp
add
sbb
loopne
notl
dec
shlb
mov
ror
ljmp
pop
fisubs
cmp
mov
outsl
mov
xlat
cwtl
outsb
xorb
ja
sub
fdivr
aaa
test
adc
cmp
jae
xchg
rcrb
jg
push
ljmp
out
or
xchg
rolb
jns
ljmp
jo
cs
iret
mov
movsl
and
clc
pop
mov
and
out
add
in
aaa
in
push
push
roll
inc
outsb
cli
in
add
adcb
push
cmp
mov
clc
je
lcall
push
or
ret
pop
pushl
or
sub
repz
cli
mov
inc
fildl
das
adcb
add
outsl
fwait
jecxz
cmp
mov
pop
jp
inc
add
or
mov
cli
outsl
jg
mov
ret
add
push
rolw
push
add
lret
adc
mov
jae
push
mov
call
add
xor
ds
add
adc
in
int3
test
aam
sub
subb
xor
pop
jg
icebp
cmp
add
mov
loope
stos
inc
pop
repnz
cs
mov
andb
add
sbb
incl
lcall
push
addl
jno
add
fildll
add
and
push
andb
pop
lcall
xor
push
adc
push
lcall
adc
cmp
push
adcb
lds
adc
add
add
dec
mov
rolb
and
addb
shrb
sub
ficoms
push
outsl
xchg
stos
sbb
push
or
test
mov
mov
sbb
xor
cmp
shrl
push
rolb
andb
sub
cmp
jo
cwtl
pop
adc
xchg
fisubrl
popf
xchg
add
ds
sbb
enter
add
push
jecxz
shrb
sub
mov
mov
inc
sbb
ret
loopne
jg
mov
add
lock
adc
jae
mov
mov
mov
dec
inc
and
nop
out
push
cmp
or
add
popf
push
mov
lods
lret
es
aad
incb
mov
rolb
push
clc
xor
fwait
les
sub
sbb
mov
xor
xor
or
in
bound
or
or
ss
cmp
subl
cmp
cmpsb
sbb
mov
cmp
push
add
das
fsubrp
jne
and
bnd
xlat
data16
jmp
add
jle
outsl
mov
mov
and
push
lock
sub
pop
cmp
push
insb
mov
xorl
movb
xlat
lret
jmp
cmp
sar
test
cwtl
ror
mov
scas
movsb
push
xchg
push
cli
jp
adcl
outsb
mov
je
and
add
add
mov
mov
mov
jo
cmp
mov
ljmp
push
inc
andl
andb
roll
sbb
sbb
add
or
cmpsb
cmp
adc
outsl
push
mov
cld
insb
jbe
cmpl
js
stc
imul
sahf
mov
loop
inc
mov
jg
sub
push
lcall
loope
outsb
scas
and
pop
sub
sub
sbb
sub
adc
fwait
loopne
xchg
mov
push
ret
cld
add
cmc
data16
mov
addb
adc
jle
mov
add
dec
inc
or
std
push
cltd
pusha
add
push
adc
add
inc
in
aas
add
add
jp
fdivrs
mov
andb
test
out
sahf
mov
sti
flds
adc
inc
or
inc
add
inc
nop
and
ret
scas
pop
sbb
sbb
inc
dec
inc
add
sbb
and
mov
and
rol
cmpsb
outsb
inc
jg
test
fadds
mov
mov
fcoml
and
fisttps
xor
and
das
sub
dec
jge
hlt
pop
inc
incl
add
rorl
jbe
cli
mov
and
sub
jo
cli
xchg
fiaddl
mov
inc
adc
mov
inc
cmpsb
lock
nop
xchg
inc
and
add
cwtl
pusha
loopne
mulb
les
outsl
aam
popa
ret
push
xorb
or
dec
xor
mov
add
add
nop
inc
or
loopne
push
sbb
pushl
shll
push
adcb
inc
sub
loop
mov
and
pop
mov
loopne
xchg
call
sbb
push
outsb
inc
push
jnp
jne
add
cwtl
sbb
sub
xchg
int
pop
or
mov
ja
jo
test
add
mov
pop
xchg
add
aaa
lock
adc
sbb
fdiv
sub
stc
dec
test
sbb
and
ljmp
push
mov
and
lds
pop
scas
pusha
cmp
incl
sarb
pop
jo
add
les
add
jecxz
ud2
sub
add
sbb
js
subb
xchg
test
jmp
cli
jo
and
jge
inc
pusha
sub
jmp
scas
push
fnstcw
popa
subl
mov
dec
push
sbb
xchg
jo
ja
add
jg
or
jb
add
xor
xchg
cli
sbb
or
pop
fwait
mov
jle
or
or
insl
sbbb
push
fsubp
or
push
sarl
ss
repz
loop
sbb
sub
sar
inc
or
jg
mov
jae
jecxz
pop
loop
sti
inc
sbb
or
sbb
add
es
or
mov
in
adc
xor
xor
icebp
nop
mov
jg
adcb
pusha
pusha
and
js
popa
inc
add
xor
xchg
and
ret
cltd
xor
dec
or
pop
mov
jo
loop
pusha
mov
orl
call
test
loope
add
jecxz
cmc
jae
in
xchg
xor
jmp
repnz
aaa
shrb
mov
add
mov
xchg
mov
mov
jbe
js
clc
sub
jle
dec
mov
cld
xor
sbb
pop
sti
fldt
rolb
add
adc
sbbb
outsl
mov
movsb
loope
std
popa
or
in
pop
adc
xor
nop
mov
mov
decl
jmp
push
or
mov
push
add
adc
adc
outsl
xchg
mov
inc
adc
mov
xor
sub
fiaddl
and
mov
ljmp
push
pusha
push
lret
sbb
sbb
pop
shrl
xor
fimull
push
inc
pop
xchg
scas
mov
or
add
sub
and
inc
jmp
add
mov
jmp
pushf
iret
ljmp
les
sbb
add
cld
mov
sarl
ret
and
out
pop
xchg
fcomip
dec
xchg
shll
aam
add
pop
inc
add
push
add
cld
push
cmp
xor
lock
inc
repnz
mov
xchg
mov
xor
ljmp
insl
add
push
push
and
xcrypt-ctr
cmpsl
sbb
jae
cli
sbb
add
cmp
rolb
sbb
out
push
mov
fdivp
mov
sub
adc
push
and
sub
ljmp
loop
dec
in
test
push
shl
fdivs
call
or
outsb
xchg
sbb
pop
ds
xchg
popa
jecxz
jbe
loop
mov
fdivrp
mov
xor
sbb
clc
rcrl
sbb
sub
ja
loop
xchg
orb
inc
push
cmp
jg
lods
push
inc
lock
in
out
gs
insl
icebp
add
rorb
call
jns
sbb
mov
decl
or
pop
dec
loop
jnp
into
push
fistpl
dec
pop
aam
or
mov
aaa
mov
pop
xor
fcmovbe
or
or
jge
or
push
sbbb
cmp
cs
fstpl
out
and
xor
sub
pushf
cmp
jnp
prefetch
mov
jo
call
cmp
push
cmp
rol
add
test
add
cmp
jbe
aas
pop
insb
xor
cmp
icebp
and
pop
and
fiaddl
dec
and
adc
mov
cld
and
or
push
sahf
lock
mov
insl
sbb
push
and
in
ds
movsb
bound
or
lock
aas
cmp
mov
movsl
xor
add
or
ljmp
and
lret
dec
mov
sbb
sti
shll
cwtl
pop
scas
mov
ret
sti
sbbb
and
sbb
pop
loop
sbb
mov
icebp
ljmp
inc
loop
jnp
mov
rolb
jnp
dec
in
dec
inc
add
adc
stos
inc
xor
xchg
repnz
stc
jne
aaa
pop
jecxz
mov
mov
lods
ret
add
fcomps
sub
mov
cmp
jns
fadds
aas
call
mov
sub
add
inc
or
cli
xchg
dec
test
shlb
adc
adc
repnz
pushf
out
mov
dec
js
rol
out
xorb
icebp
jns
lock
push
scas
aam
inc
push
loopne
mov
lods
inc
jns
aad
call
enter
and
mov
aaa
icebp
inc
out
imul
xchg
je
test
cltd
icebp
es
adc
in
loopne
rclb
int
rolb
ret
or
sbb
adc
inc
push
out
addb
sbb
in
sub
nop
jo
jg
incl
mov
or
out
add
lods
test
push
lret
in
popa
jb
lret
mov
jmp
sbb
add
push
sbb
inc
rolb
loopne
jmp
lods
mov
enter
sti
add
mov
xchg
lock
add
jle
adc
mov
inc
cs
pop
cmpsb
rorb
mov
fisubl
mov
xor
xorb
rclb
sarb
sub
std
ret
rcll
jl
mov
xchg
inc
sbbl
aam
and
sbb
and
hlt
cmp
int
orb
mov
add
sti
inc
inc
or
jae
sub
arpl
mov
inc
push
fildll
sub
shrb
push
inc
pop
cwtl
les
lock
jmp
push
add
and
das
xor
or
lret
xchg
add
xor
inc
cld
and
sbb
dec
in
push
mov
sbb
or
mov
mov
xor
sbbb
add
push
sub
and
jbe
or
test
js
into
imul
out
fadds
sub
outsl
and
add
sbb
and
pop
pusha
xchg
jno
clc
add
xor
dec
call
lcall
shr
or
mov
icebp
adc
push
sbb
cltd
push
adc
test
loopne
add
add
inc
inc
sub
fists
lock
dec
push
mov
mov
rorb
and
dec
mov
add
call
idiv
add
pop
clc
ret
add
xor
in
sbbb
pop
rclb
nop
sbb
xor
and
fs
add
sub
out
mov
xchg
mov
andl
loopne
cmc
lods
mov
movsl
push
sub
push
lea
jbe
adc
or
push
xchg
xor
push
data16
fbstp
and
sub
lcall
jo
js
cmp
loop
stos
loop
nop
pop
inc
aas
movsl
mov
sub
cmc
popa
insb
and
ljmp
adc
mov
push
add
je
add
push
icebp
daa
out
and
mov
cmp
and
imul
std
add
mov
insl
cli
or
jg
and
sti
jp
add
cltd
lcall
pop
add
popa
add
mov
push
push
lds
and
adc
and
outsb
inc
loop
lods
leave
icebp
jp
push
aam
sbb
sub
cmp
mov
dec
test
or
inc
bound
lret
stos
aam
mov
mov
into
push
or
adc
pop
sub
cs
push
sub
or
adc
push
push
or
sbb
jp
and
add
add
ljmp
and
mov
mov
popa
add
addl
mov
outsb
add
jl
dec
outsb
cli
xor
das
cmc
inc
pusha
rorb
mov
push
dec
xor
add
xor
hlt
jbe
xor
dec
mov
mov
jmp
loop
das
or
add
adc
mov
sbb
add
inc
add
push
mov
xor
jecxz
cld
sub
js
add
loop
addl
lahf
pusha
jb
and
daa
stos
push
ss
pop
push
mov
shrb
lods
adc
sti
mov
push
jle
jo
shl
or
lods
add
fimuls
jle
mov
daa
gs
adc
mov
sarb
sbbb
out
hlt
add
xchg
clc
or
jg
or
add
xor
add
lret
or
aam
insl
loop
jne
and
push
pushf
outsl
sbb
xchg
hlt
fsts
or
mov
mov
sbb
out
jae
fcmovnbe
jg
js
push
cmpb
je
addb
mov
or
or
jg
test
xchg
sbb
mov
neg
add
fisubs
cld
xor
daa
subb
and
aas
jbe
cmp
lea
test
shlb
and
ljmp
adc
pushf
sub
test
sbbb
add
shlb
mov
mov
pop
arpl
mov
push
add
lock
das
add
rcrl
inc
fisubl
add
cmp
mov
testl
mov
mov
jl
or
es
ljmp
aam
cwtl
filds
nop
or
pop
movsb
sbbb
lret
in
int3
adcb
adc
push
adc
addl
pop
call
sub
xor
mov
icebp
lock
movsb
mov
sub
js
loopne
mov
data16
les
sub
cmp
inc
push
sarb
es
mov
xor
loope
or
imul
stos
mov
clc
mov
xchg
jbe
add
add
ficompl
pushf
add
push
inc
adc
inc
and
ljmp
sbb
rcll
xchg
imul
prefetcht1
jecxz
out
or
jb
add
xor
sar
cmpsb
cltd
add
dec
idivb
inc
mov
adc
hlt
ret
add
pop
xchg
js
lods
or
sub
fimull
sti
push
ss
aaa
sbb
push
sti
add
adc
pop
xchg
repnz
push
nop
fisttpll
or
sbb
add
adc
ljmp
rcrl
or
mov
and
icebp
mov
sub
add
cmc
add
mov
mov
bound
aaa
or
clc
pop
nop
stos
xor
insb
cmp
mov
sbb
movl
push
leave
or
xor
push
add
rclb
or
scas
add
or
add
adc
pop
inc
jb
ret
xor
sbb
jae
mov
cwtl
mov
enter
inc
xor
mov
mov
mov
out
mov
inc
popa
loopne
mov
mov
insb
adc
push
add
sbb
insl
xor
dec
adc
add
and
fildl
add
ret
sub
mov
mov
jp
cmp
or
dec
add
inc
add
sbb
cld
addb
popa
push
add
sbb
add
mul
sbb
sbb
out
add
jo
pusha
push
aam
add
sbbb
cmp
clc
sbb
jmp
inc
hlt
dec
xchg
int3
push
mov
or
pop
lret
daa
ret
add
jo
test
mov
icebp
pop
push
and
xor
out
sub
cmp
and
inc
and
lcall
mov
or
cs
lret
shll
add
jbe
add
testb
popa
and
and
loopne
pop
add
punpckldq
and
jle
outsl
pop
jl
mov
push
hlt
sbb
and
cmp
loopne
movsb
pop
pusha
jl
cmp
and
push
movsl
sub
loope
outsb
call
jo
sbb
adc
mov
pusha
push
jmp
aad
cs
and
add
inc
or
sbb
push
testb
orb
mov
mov
and
and
pop
dec
and
and
push
pop
incl
sbb
rorl
inc
scas
loopne
dec
or
add
push
notb
jo
orb
add
sbb
sbb
sbb
idivb
clc
daa
mov
nop
out
cmc
add
add
jmp
inc
sub
test
rclb
xlat
leave
ret
scas
cmpsb
hlt
and
push
and
pop
sbb
push
js
mov
mov
fnstsw
cmpb
inc
push
ljmp
jl
cmp
and
inc
pop
mov
movsl
jecxz
jo
popa
inc
mov
out
out
inc
cmpb
ret
adc
adc
insb
inc
xor
loopne
loope
ret
xor
fs
and
inc
cmp
add
shrl
mov
add
xchg
loope
andb
pop
push
int3
add
cmp
shlb
xor
dec
arpl
add
adcb
pusha
insl
jecxz
adc
jb
xlat
rcrb
and
push
movb
data16
incb
mov
jle
js
mov
add
mov
icebp
movsb
mov
in
ja
pop
push
pop
inc
cltd
or
frstor
mov
out
jne
aam
fistps
mov
test
or
push
rclb
mov
and
sbbl
outsl
adc
push
mov
and
sbb
add
inc
inc
xchg
adc
xor
mov
addb
push
shrb
pop
rcrl
sbb
imul
out
subb
xchg
cltd
mov
add
add
pop
shlb
inc
dec
rcll
mov
or
sbb
das
fisubl
fsubs
sbb
in
pusha
cld
jmp
je
xor
or
pushf
mov
call
and
or
xor
call
mov
arpl
sarl
sbb
das
pop
mov
jmp
add
jbe
ret
cltd
sti
icebp
add
add
add
sti
in
push
mov
xor
dec
push
inc
call
add
jne
push
sub
mov
inc
mov
adc
repz
jmp
add
xor
or
lock
jp
or
fs
jbe
mov
mov
jns
sub
mov
pop
add
or
push
test
adc
rorb
pop
out
cmp
cmp
aad
xor
cmpsb
sub
jo
cs
jg
idivl
mov
call
and
into
jmp
out
dec
add
jne
or
inc
ljmp
jno
rorb
pavgb
mov
push
loope
jo
inc
mov
sbb
lret
push
hlt
adc
nop
add
mov
scas
nop
pop
and
inc
inc
ficoms
xlat
push
push
fcomps
test
push
sbb
fdivr
cmp
jb
out
loop
xchg
popa
add
sbb
inc
loopne
lock
dec
xchg
lret
pop
mov
xor
jp
stos
dec
jge
lret
cwtl
lcall
mov
or
in
add
fwait
add
mov
push
dec
mov
and
inc
jb
mov
movsl
into
mov
fwait
or
xor
sub
sti
stos
sbb
rclb
sub
sub
int3
rcrb
test
enter
aam
sub
push
adc
lods
lods
imul
lcall
pop
or
movsb
dec
mov
das
mov
test
scas
cld
or
inc
push
stc
mov
add
mov
lock
xor
or
test
outsb
sbb
call
stos
test
mov
mov
enter
aaa
repnz
insl
cmp
push
add
pushf
cmp
or
mov
jg
out
pop
movsl
movsb
jb
and
jg
push
sbb
add
rorb
xchg
mov
or
xchg
lods
in
pusha
cmp
mov
or
daa
sub
xchg
and
loop
in
mov
xor
inc
inc
pop
lock
dec
sbb
inc
lds
popa
mov
das
sub
push
and
inc
inc
repz
outsb
loope
sbb
add
fbstp
or
cmpsl
in
movl
rcll
add
mov
insb
push
and
stos
test
repz
mov
mov
test
push
pop
jns
out
ret
out
or
sbb
jo
orb
sub
scas
xchg
add
add
js
mov
mov
inc
in
loopne
mov
inc
push
inc
or
cmovbe
xor
mov
jo
lret
shr
adc
mov
mov
roll
add
mov
sub
hlt
cltd
lar
shrl
or
data16
or
outsb
or
dec
cwtl
fs
mov
lea
lods
mov
adc
cmpsb
jecxz
push
dec
sbb
fwait
push
cmpb
jp
mov
push
sbb
pop
lods
sbb
mov
mull
add
sbb
and
add
jmp
mov
or
fisubs
push
mov
or
push
mov
out
adc
add
sbb
inc
jno
mov
sbb
sub
sbb
sbb
cmp
arpl
lcall
jne
push
aad
shlb
aam
or
pop
cmp
sub
jg
jge
cmpsb
insb
push
inc
mov
mov
jo
mov
xor
pop
jecxz
or
pusha
inc
dec
movsb
add
pop
mov
data16
in
xchg
sub
mov
jmp
mov
outsb
aas
jl
jo
or
scas
movsb
out
inc
mov
or
jecxz
call
xchg
cmp
decl
add
ficompl
add
rolb
jmp
stc
add
inc
subb
sbb
jmp
inc
scas
and
fcmove
mov
andb
add
add
push
js
cmp
dec
dec
in
xchg
aas
jno
xchg
sbb
lock
push
orb
xchg
adc
mov
or
cmp
jmp
mov
xacquire
dec
jo
cs
hlt
sbb
dec
movsb
fwait
mov
sbb
xor
nop
or
lret
mov
fdivs
adc
push
loopne
in
cltd
loopne
fwait
mov
mov
inc
push
push
inc
jo
push
jecxz
jmp
or
xchg
loope
mov
push
or
or
fwait
sti
xchg
clc
loope
es
jne
out
xorl
lcall
pop
ds
xchg
jns
hlt
je
shll
adc
xor
jo
sbb
xor
dec
mov
incl
sbb
mov
sti
push
movsb
adc
mov
dec
pop
push
je
jmp
or
popa
jne
pusha
or
insb
dec
mov
push
into
loope
cli
or
mov
ljmp
inc
or
pop
and
push
insl
adc
rcrb
inc
ss
and
dec
subb
lret
push
jb
scas
cmp
lock
sub
jno
xor
or
fcomi
sbbb
arpl
pop
loopne
shlb
fildll
outsb
sub
cmp
adc
adc
rorl
test
rcrb
in
xor
in
mov
nop
or
inc
or
dec
mov
adc
loop
add
inc
bound
cmp
jecxz
pop
add
aam
add
adc
cmpsb
pop
movsl
adc
mov
push
les
jbe
mov
jo
repnz
cmp
test
mov
mov
add
aaa
loope
cwtl
out
add
jbe
cli
dec
mov
xchg
sub
sub
dec
sbb
popa
cmpsb
and
pop
adc
mov
push
sbb
xor
and
inc
dec
es
aad
cmpsb
mov
pop
mov
or
push
mov
dec
lcall
or
addl
add
or
jbe
stos
mov
pushf
mov
mov
outsb
jno
cmp
xor
aam
add
mov
adc
jg
jne
js
add
xchg
cld
icebp
orl
sarl
add
xor
inc
mov
fstps
sbbb
dec
or
adc
push
mov
mov
add
pop
dec
les
sete
and
or
lock
mov
call
movsb
dec
xor
push
xchg
push
aam
mov
mov
mov
xor
mov
outsb
out
js
cmc
or
jmp
adc
test
addb
pushf
add
cltd
shll
shll
sbbl
xchg
idiv
jg
repnz
add
mov
in
andb
add
jo
bound
and
adcb
sar
sti
add
dec
inc
lock
incl
filds
sbb
popa
inc
sbb
inc
sbb
leave
inc
sbb
inc
sbb
mov
inc
aam
pop
arpl
sbb
xlat
push
pop
add
testl
sbb
xorb
jns
rorb
xor
out
pop
sbb
cmp
rcll
adcb
in
cmp
scas
sbb
mov
enter
xor
add
leave
or
mov
rolb
inc
adc
and
push
aas
ret
stc
sbbb
cli
call
inc
cmpb
sbbl
inc
adc
jge
add
addb
loop
inc
jecxz
and
add
inc
pop
lods
or
adc
push
sysret
sub
jmp
and
or
dec
mov
sub
in
add
int
dec
cli
add
sbb
andl
addr16
incb
repnz
cmp
cmp
lods
adc
cmp
fs
sbb
pushf
jle
inc
pushf
cmp
or
cmp
inc
fneni(8087
push
or
sub
shll
pop
xor
cltd
shrb
pop
inc
mov
cmpsb
adc
cs
les
xchg
outsl
test
in
or
ss
fadds
test
xchg
push
add
lock
inc
rcll
push
adc
inc
mov
push
shl
clc
mov
loopne
popa
and
xchg
or
cs
rolb
daa
cltd
arpl
push
mov
mov
and
sub
add
sub
movsl
pop
sbb
outsb
sbb
dec
xchg
jo
xchg
je
fcmovnb
mov
or
xchg
dec
es
rclb
dec
and
add
mov
dec
divb
loop
pop
daa
sarb
push
lods
fs
jle
divb
mov
jp
es
addr16
shrl
xor
ret
daa
loopne
adc
orb
sbbb
ret
add
outsl
dec
loop
hlt
cmpsb
inc
call
insl
testb
adc
pop
lods
popa
sbb
xchg
incl
test
sbb
xor
jmp
and
mov
cli
out
rcrb
adc
pop
jle
shrb
add
fcomip
subb
jp
mov
xchg
add
pop
sbb
jae
or
jecxz
out
jb
mov
xor
out
inc
shlb
pusha
sbb
dec
sbb
adc
jp
push
ss
mov
je
sbb
add
ret
cmp
repnz
inc
dec
test
loope
and
push
push
mov
jnp
cmpb
insl
pop
jo
add
xchg
and
scas
lcall
inc
ljmp
enter
je
jo
ljmp
test
roll
imul
mov
in
in
mov
add
adc
sbb
mov
pop
cli
outsl
outsl
mov
add
addb
movsl
pop
and
push
mov
loopne
movsb
push
and
push
pop
bound
and
mov
adc
decl
sbb
lcall
and
pusha
dec
xchg
lret
roll
leave
movsl
sbb
sar
push
xor
loopne
mov
or
and
fisubl
das
xchg
into
cmpsb
and
inc
sub
inc
loopne
pusha
fwait
dec
dec
in
add
xor
add
xchg
push
push
addb
add
jmp
add
adc
inc
pop
into
pusha
rol
adc
inc
nop
fimuls
cmp
scas
push
loope
stos
test
push
sarb
test
add
cmpsb
sbb
add
mov
xchg
shl
xchg
clc
sbb
inc
js
call
push
in
or
aaa
mov
inc
add
pop
push
xor
in
loopne
add
jmp
inc
es
rolb
push
into
add
test
loopne
incl
inc
cmp
mov
loope
shlb
into
int3
shrb
mov
xchg
repnz
push
cld
aaa
int3
sbbb
test
inc
fildl
mov
out
adc
popa
fsubl
push
ret
jno
push
inc
jne
sbb
dec
mov
and
jmp
jo
loop
fsubs
pop
add
xor
push
sub
mov
mov
lret
in
and
outsb
mov
jp
in
add
subb
adc
push
add
push
out
out
mov
add
rcll
call
push
push
xor
aam
xor
jmp
sbb
jnp
divb
add
add
fs
mov
mov
mov
mov
lods
arpl
fisubrs
into
hlt
testb
mov
push
jne
shlb
jg
cs
jns
add
mov
or
mov
sti
jle
rcrb
aad
lcall
push
sbb
push
insl
or
or
mov
inc
fs
add
jo
testb
sub
movsb
pop
stos
sub
mov
incl
xor
mov
daa
ljmp
ds
push
cmp
adc
cltd
or
cmc
jmp
repnz
lock
and
icebp
and
das
add
mov
adc
and
xchg
dec
fildll
dec
loope
xchg
jo
sbb
sbb
sar
mov
cmp
inc
dec
dec
sahf
test
pop
sbb
mov
xchg
inc
loopne
lahf
push
inc
push
add
test
pop
je
loopne
sahf
push
loopne
adc
loope
add
xchg
pop
mov
mov
lds
add
push
cmp
xchg
aad
mov
mov
fstpt
xchg
repnz
mov
rorb
sub
movsb
fidivs
xchg
aaa
ret
adc
cli
jb
add
adc
movsb
das
pop
loop
js
xchg
test
scas
xor
pop
out
and
ss
pop
pop
xor
pusha
repnz
sbb
or
jo
jecxz
xor
test
push
sbb
add
mov
insb
enter
cli
mov
fmuls
push
mov
sarb
faddl
adc
add
mov
cmp
sbb
dec
aam
test
or
ret
into
adc
mov
sti
enter
scas
fistpll
push
not
aam
out
popa
cmpsl
xchg
loope
sbb
mov
rorb
lahf
dec
sbb
xor
and
cld
outsb
lret
cmp
jns
push
xchg
rorb
mov
or
aam
int3
pop
inc
mov
jb
lret
mov
adc
pop
pusha
mov
es
repnz
jle
mov
sbb
inc
jbe
aam
inc
dec
ficoml
nop
pop
or
les
fdiv
push
jns
and
aas
imulb
mov
or
sbb
scas
or
mov
loope
push
pop
loope
add
adc
mov
inc
shll
icebp
das
push
in
pop
mov
fwait
loopne
mov
popl
and
xor
ja
mov
cmp
xor
jo
sbb
mov
clc
int
jle
call
pop
rcl
adc
js
cli
mov
inc
or
mov
inc
js
roll
lock
decl
aaa
add
jo
adc
popa
xor
lock
fwait
js
jmp
push
xchg
add
ss
xor
jb
call
mov
adc
adc
or
out
mov
pop
add
jmp
dec
push
add
push
nop
or
or
xchg
mov
or
in
jne
sahf
test
mov
sti
fwait
out
loope
cmc
xchg
popa
xchg
add
nop
test
mov
nop
or
add
inc
xor
or
and
add
lock
pop
rcrl
cmpsb
fwait
gs
jae
mov
cmp
or
shl
jg
test
sbb
add
mov
push
les
jo
xor
cmpsb
adc
inc
pushl
lock
int3
in
and
clc
ja
decl
xchg
and
roll
sub
sub
push
out
push
add
add
in
fiaddl
adc
pop
loope
fidivs
adc
aam
lds
or
xchg
sub
mov
rcrb
mov
test
jle
pushf
add
push
mov
or
sub
adc
mov
xor
call
jecxz
fstpl
push
mov
rcll
inc
fisttps
inc
out
and
mov
test
jne
xor
lds
adc
cmp
xchg
ljmp
sub
sub
and
lock
scas
pop
mov
testl
negb
clc
dec
adc
and
prefetchwt1
clc
jbe
sti
push
push
or
xor
mov
sub
pop
cld
mov
inc
rcrb
testl
stos
fs
xor
mov
and
inc
cmpsb
add
dec
mov
nop
add
dec
pop
cmc
aas
pusha
push
dec
or
sbb
sbb
push
xor
test
cmc
ja
adc
adc
xor
push
lock
push
and
mov
jp
rcl
adc
dec
das
xor
inc
popf
jecxz
js
mov
ds
adc
push
outsb
pop
adc
sbb
sahf
pop
shrb
pop
mov
fidivl
ljmp
cmpsb
fwait
jecxz
andb
xor
call
int3
add
pop
out
sbb
lock
in
xor
add
cmc
mov
dec
sub
mov
and
inc
loop
pop
mov
xor
pusha
rcr
lret
cmc
movsb
sbbb
pop
sbbb
pop
lock
mov
adc
inc
loope
or
js
mov
subl
adcb
sbbl
mov
inc
mov
into
mov
fisttpl
or
add
enter
dec
xchg
jg
or
push
pushf
sahf
rcr
pop
lea
add
sub
mov
cmc
jo
mov
loopne
xchg
add
in
add
lcall
clc
cltd
out
add
movsb
sbb
mov
push
push
jmp
push
xor
dec
mov
or
add
add
add
add
cmpsb
aam
pop
xor
pop
add
lcall
xor
and
add
xor
testb
loop
xchg
loop
and
dec
mov
cmp
add
into
pusha
and
jne
add
shrb
jo
and
xorb
fwait
repnz
adcb
xchg
ljmp
cmp
in
aaa
call
lock
andb
push
filds
sbb
enter
or
in
lret
subb
js
jne
ss
push
lret
sti
jbe
negb
cmp
add
or
jo
orb
adc
add
inc
or
dec
jg
mov
leave
add
pusha
je
mov
pop
sbbb
push
xchg
jge
adc
clc
adcb
adc
adcl
lods
bound
pushf
jle
hlt
sbbb
add
xchg
adcb
lret
cmp
lock
aam
jl
movsl
adc
or
sbb
leave
and
or
das
xchg
jo
stc
and
adc
pusha
lret
sub
lods
add
or
or
or
es
mov
jae
int3
aas
pop
push
sub
loop
sbb
inc
mov
inc
or
gs
push
inc
popl
cmpb
andb
popf
idivb
out
sbb
js
inc
push
mov
push
push
cmp
sbb
mov
or
std
and
push
dec
out
add
cmp
fadds
sbb
or
into
xor
add
mov
dec
call
push
jo
les
push
ljmp
pop
clc
adc
mov
jne
notb
jp
add
pop
mov
jecxz
rolb
sub
enter
insl
jmp
mov
cmp
jl
lods
add
or
xor
push
repnz
push
mov
push
shlb
inc
push
jae
mov
add
inc
and
hlt
ss
add
xchg
inc
pop
push
stos
push
iret
clc
or
mov
xchg
xchg
pop
sti
add
inc
adc
inc
dec
test
call
add
add
push
in
aam
ret
sarb
sub
xchg
and
dec
sbb
into
jbe
sub
out
xor
jecxz
add
lock
les
orps
jb
inc
and
mov
cmp
mov
mov
fidivrl
popa
mov
aam
loope
mov
add
lret
xchg
rcl
inc
mov
inc
push
sbb
rclb
cwtl
mov
add
xchg
cmp
outsb
or
jbe
sbbb
fisubs
mov
popa
push
or
sub
pop
sub
outsl
mov
lcall
scas
add
loopne
loope
ds
das
add
rdmsr
hlt
sbb
inc
lock
sbb
insb
lcall
mov
pop
rcrb
inc
loopne
testb
xor
push
ret
cmp
pop
mov
rclb
inc
add
bound
mov
or
xchg
insb
mov
lcall
xchg
test
shlb
loopne
mov
sbb
mov
push
mov
aaa
nop
dec
xchg
addb
mov
andl
jo
ret
inc
pop
sbb
adc
test
xlat
mov
or
jle
pop
inc
pop
add
push
and
mov
dec
nop
lods
daa
sub
sbb
jo
cld
in
loope
xor
and
rcrl
push
push
testb
jo
je
inc
addb
inc
inc
test
or
cmp
cs
push
loop
xor
mov
addl
sub
add
add
push
pop
xor
in
and
ret
dec
jb
movsb
inc
insl
outsl
jp
std
les
fsubp
and
cltd
xchg
pusha
jp
sbb
push
popa
dec
cld
xchg
popa
outsl
jle
leave
xchg
ds
pop
or
mov
aas
and
jne
mov
mov
jl
add
jo
mov
xchg
xchg
fwait
mov
add
and
bound
mov
or
pop
and
xchg
push
push
inc
andb
xchg
es
jmp
shrb
xlat
sbb
adc
sbb
es
loopne
out
pop
rorb
pop
dec
ljmp
jno
in
mov
cmc
outsb
aad
pop
pusha
scas
add
sbb
insb
cmp
sbb
in
xchg
rcll
inc
sahf
or
sub
lock
loopne
mov
mov
or
inc
popa
dec
loop
or
mov
xchg
mov
or
ret
addb
cltd
pop
and
jbe
xorb
mov
mov
sbb
push
aam
mov
testb
mov
fdivrp
sub
movsl
add
and
subb
adc
jg
or
inc
test
xchg
push
xor
add
andb
jl
inc
mov
data16
cmpsl
lods
xchg
loope
pushf
outsb
sbb
add
push
pop
add
inc
xchg
adc
or
xchg
xchg
popa
xchg
mov
or
lea
adc
jle
adc
add
add
xchg
icebp
xchg
inc
loopne
ss
aam
inc
sti
cld
bound
sbb
sub
fsubp
push
sbb
inc
and
loopne
ljmp
jmp
push
jmp
outsb
adc
xor
adc
and
fildll
pop
in
add
cmpl
fidivl
ljmp
mov
call
jmp
sbb
xchg
jbe
cmp
js
sbb
dec
add
shr
adc
jle
xlat
inc
inc
icebp
inc
pop
nop
je
popa
mov
mov
sbbb
cmp
add
lock
xchg
adc
lret
in
ljmp
push
or
ja
or
jmp
inc
or
outsb
pusha
mov
pop
sbb
sub
nop
add
jg
lods
mov
add
and
outsl
jnp
outsl
clc
pop
pusha
jnp
mov
js
and
mov
adc
aam
movsb
xchg
aas
push
pusha
mov
mov
jb
loopne
or
inc
shl
add
aas
xchg
sti
dec
movsb
add
loopne
out
sbb
loopne
arpl
cmpsb
inc
incl
xchg
cmp
lods
out
jo
add
dec
inc
cld
add
xlat
icebp
push
or
push
add
mov
lahf
sarb
xchg
imul
and
or
add
and
lock
inc
repnz
insb
lock
sub
jp
fiadds
cltd
loop
xchg
mov
cmp
add
and
and
sub
add
push
xor
clc
mov
mov
lret
jmp
shlb
inc
xor
or
adcb
xchg
xor
clc
mov
mov
jp
xor
or
lock
inc
mov
popa
or
shl
sub
outsl
clc
addb
and
add
push
add
addb
mov
call
subl
mov
jbe
adc
data16
movsl
lock
and
mov
jno
orl
inc
sub
add
stos
movsl
xor
stos
inc
adc
xchg
in
and
jecxz
inc
add
ljmp
fs
jb
mov
mov
movsb
aaa
shlb
push
pusha
mov
fmull
repnz
sbb
nop
adc
push
push
cs
mov
pop
add
add
sti
add
mov
ljmp
pop
ret
mov
js
and
and
sub
cltd
loopne
sbb
or
jp
loope
and
inc
negb
jno
fisubl
inc
loop
jle
dec
adc
add
xchg
xchg
ret
out
shr
cld
call
inc
dec
std
sbb
add
inc
mov
aad
andb
xchg
xchg
sbb
add
in
jecxz
std
loopne
das
movsb
shlb
nop
add
dec
loopne
sbbb
cli
repnz
mov
mov
adc
jle
lock
pusha
dec
xchg
dec
sub
mov
cld
cmp
push
or
adc
cltd
out
or
add
push
mov
push
test
add
or
mov
cmpsb
insb
adc
stos
push
outsb
and
mov
clc
mov
subb
mov
incl
dec
enter
fwait
jecxz
xor
xor
push
xchg
pop
icebp
or
pop
add
pusha
pop
xchg
aam
xor
pusha
adc
and
add
out
and
xor
mov
ljmp
movsl
push
cld
xchg
shlb
sub
jno
test
or
shll
or
mov
pop
mov
ja
fs
mov
jbe
and
push
push
or
pop
ret
push
add
fs
or
lods
pop
shrb
rorb
xor
xchg
or
decl
shlb
adc
mov
mov
add
movlps
jp
ja
ret
sti
test
rolb
loope
je
shll
push
stos
jp
push
test
sub
mov
mov
mov
aaa
add
and
andl
dec
andb
add
push
cmc
lock
fmuls
sbb
xchg
xor
fildll
cld
cmovno
and
repnz
aas
push
subb
nop
sbb
add
cmpsl
lods
inc
ljmp
xchg
jbe
or
dec
xor
inc
imul
outsb
add
xor
pop
and
fistpl
daa
or
add
inc
xor
fnstenv
xor
jmp
xor
xchg
jbe
inc
jg
xchg
cmp
inc
dec
push
cltd
jo
push
and
cld
xchg
sbb
sbb
leave
pop
adc
popa
hlt
pusha
mov
pop
xor
ret
cli
incl
dec
and
xor
add
ja
xchg
jle
loopne
add
popa
dec
test
cmp
lock
icebp
movsb
into
loope
and
jo
mov
add
cltd
mov
dec
mov
iret
jo
js
sub
fsubp
pop
xchg
loopne
mov
sub
sbb
cmpsb
les
out
bound
xor
dec
lock
push
lock
in
adc
xchg
add
int
push
push
add
js
push
fists
xchg
or
or
leave
add
adc
xor
mov
andb
icebp
pop
test
bound
dec
mov
into
push
add
lret
mov
mov
dec
add
adc
mov
outsb
sbb
dec
mov
xor
mov
cmp
or
sub
subb
pusha
mov
add
nop
icebp
cwtl
push
inc
jns
lods
jle
rcrb
or
push
dec
push
sbb
movsb
shll
in
sbb
js
sub
xchg
popa
sbb
test
pop
and
add
loopne
cwtl
arpl
adc
lret
add
jmp
ja
add
jmp
add
testb
repnz
popf
lock
adc
gs
icebp
cli
add
push
mov
movsb
xchg
call
add
stos
xchg
cltd
adc
dec
in
mov
test
les
cmp
mov
into
in
add
dec
lds
mov
fistps
sub
add
cltd
mov
mov
xorb
jne
lahf
add
mov
sarb
repnz
xorl
dec
fadds
insb
sub
ret
adc
xchg
dec
fwait
sub
xor
jl
xor
mov
out
in
xchg
fwait
add
rcrb
loope
imul
inc
fsts
ret
push
add
and
cmp
shll
sbbb
movsb
lcall
inc
pop
pop
js
cmp
and
cmp
lods
fadds
loopne
mov
into
lcall
sahf
test
xchg
or
mov
lahf
std
ret
mov
lret
adcl
add
dec
jmp
jecxz
fwait
mov
pop
cmp
push
push
rcrb
movsb
into
jae
cs
jbe
je
push
add
xor
add
repnz
pop
push
and
shll
jae
lds
cmp
stos
dec
aaa
add
std
ljmp
imul
mulb
push
fwait
icebp
rolb
add
mov
repz
decl
mov
add
jecxz
movl
pop
inc
xor
push
outsb
loopne
lcall
xchg
lcall
incl
and
sti
or
pop
iret
inc
dec
inc
dec
or
shrl
jp
mov
lods
dec
xor
fwait
rorb
rclb
push
fistpl
loopne
add
jmp
add
xchg
ljmp
or
sbb
mov
and
jle
cli
imul
xchg
xchg
ret
fisttpll
lock
and
sbb
mov
aas
mov
push
shl
pushf
rcrb
add
and
adcl
loopne
jmp
arpl
inc
pop
jecxz
jb
test
clc
pop
add
adc
rorb
or
mov
inc
add
xchg
addb
incl
sti
adc
aas
mov
cltd
lock
sub
xor
loope
orb
cmp
pop
adc
pop
sbb
xorb
xor
jae
es
push
cwtl
lcall
cmpb
inc
test
add
cld
inc
pusha
xor
cmp
cmp
daa
out
mov
mov
mov
test
adc
adc
jle
mov
pop
negl
mov
scas
cmp
and
cld
mov
in
xchg
push
notb
jp
xlat
ret
icebp
mov
jmp
inc
rclb
sbb
in
nop
mov
sbb
inc
rclb
adc
jmp
sbb
aam
movsb
movsl
mov
mov
jbe
or
es
xchg
inc
movsb
sbb
cli
or
and
mov
cmp
xchg
movl
es
into
loopne
mov
pop
and
test
sbb
sbb
inc
mov
inc
xchg
pusha
pop
sti
movsb
inc
mov
lock
lods
bound
jb
pop
jmp
inc
jge
cmp
pop
ja
ret
or
sbb
xchg
nop
sahf
loopne
ljmp
jbe
addps
push
or
loopne
dec
push
loop
lock
inc
add
test
scas
loope
andb
inc
inc
xchg
mov
test
lret
test
mov
dec
jg
scas
lock
mov
add
lock
ss
leave
mov
cmpl
mov
push
mov
popa
aaa
mov
adc
ret
rcrl
cmp
jecxz
and
aas
sbbb
inc
add
and
sbb
xchg
jb
cmp
or
and
xchg
std
sbbb
pop
adc
sbb
xor
or
out
mov
sub
pushl
lahf
and
ja
xlat
inc
fiaddl
loopne
sbb
xchg
test
or
fildll
pushf
xor
cli
cmp
mov
dec
lret
movb
sub
out
out
xchg
cld
incl
call
sbb
xchg
dec
add
cs
bound
push
xchg
das
cmp
fbstp
cmc
addb
push
dec
cli
push
pop
or
or
add
fwait
and
jae
inc
rclb
pusha
inc
pop
sub
aaa
je
inc
xor
jne
test
clc
mov
dec
cltd
inc
mov
mov
mov
and
shlb
dec
call
xor
movsl
mov
fildll
mov
add
xchg
mov
or
inc
sub
movsl
adc
rclb
mov
cmp
outsb
and
add
rcll
mov
sbb
inc
pushl
stos
sti
dec
sbbl
and
add
mov
cmp
add
add
cltd
sub
pushf
sbbl
nop
call
jmp
add
stos
rorb
movsb
mov
aad
jno
push
adc
add
add
jg
push
test
sub
mov
adc
lods
push
pop
sbb
xor
daa
inc
push
cmp
dec
sub
and
repnz
ffree
jg
push
jb
loop
mov
or
jg
push
jle
imul
enter
add
rcrb
inc
enter
ja
rolb
lcall
xchg
fdivrs
and
and
or
cmc
pop
rorb
inc
xor
xor
int
inc
cmp
das
pop
cld
jbe
pop
sbb
push
jp
ja
mov
and
push
movsl
jo
push
enter
push
adc
xorb
jmp
mov
jno
jbe
adcb
pop
scas
mov
pop
out
mov
insb
xchg
sar
jmp
test
and
mov
add
cmp
popl
adc
aaa
cli
inc
mov
adc
mov
lcall
push
adc
outsl
clc
xchg
aaa
je
fnstenv
insb
adc
mov
shlb
fcmovu
push
push
xchg
adc
or
jo
add
nop
pop
sbb
nop
cmpsl
pop
adc
mov
adc
push
adc
shlb
xchg
shlb
push
cmp
sbb
adc
outsl
mov
dec
xlat
pushf
sub
dec
ljmp
mov
adc
lret
jge
fdivrl
xor
or
dec
loope
sub
in
lods
xor
into
mov
loope
add
adc
in
orb
ljmp
mov
std
dec
and
pusha
and
inc
inc
mov
inc
dec
xchg
adc
sbb
xor
or
shlb
aam
push
pop
insb
mov
mov
mov
mov
jo
xchg
rolb
mov
cwtl
mov
roll
adc
mov
adc
dec
pop
shr
pop
std
mov
push
shrl
inc
xchg
xlat
rolb
jae
inc
std
inc
dec
and
pusha
push
adc
loopne
adcl
movsb
adc
or
call
jge
in
mov
add
mov
inc
dec
std
jbe
mov
push
cmp
adc
add
stos
add
add
out
aam
fdiv
lret
loopne
int
hlt
mov
mov
mov
add
movsb
ret
mov
push
pop
sbb
adc
outsb
push
mov
mov
movsb
and
add
push
outsb
aaa
shrb
cmc
cld
xor
sbb
and
xor
jg
decl
xchg
loopne
rcrl
mov
cmp
out
xor
pop
xor
sbb
shl
add
test
call
rcr
push
cmp
add
xor
sub
addb
popa
adc
movsl
xor
sbb
lock
add
mov
loope
xchg
jb
cmpl
add
push
shld
sub
pop
add
mov
sub
data16
inc
pop
lock
dec
loopne
and
sbb
rolb
lods
cmp
xor
jle
or
cmp
ret
mov
int
or
push
or
push
inc
or
add
call
jo
sbb
cmp
adc
add
lock
sbb
or
fcomip
mov
lods
test
movsb
jb
jo
mov
and
mov
ljmp
jmp
jle
scas
jecxz
push
movsb
movsb
mov
mov
mov
jg
fwait
loope
nop
sub
adc
mov
and
ja
push
add
xor
pop
pop
int3
jmp
jg
jo
out
push
rolb
shlb
sbb
add
mov
sbb
adc
sbb
push
cld
nop
push
shlb
sub
lods
jmp
pop
mov
push
jl
loope
fcmovnb
inc
mov
jnp
sub
sbb
xchg
mov
outsb
pop
inc
add
sbb
outsb
aaa
add
inc
mov
mov
push
or
jno
ja
and
adc
filds
sbb
mov
addl
pop
icebp
out
sub
mov
xor
int
and
mov
xor
adc
add
push
test
pop
je
push
add
hlt
adc
adc
ljmp
xchg
inc
nop
lds
push
call
xchg
dec
sub
or
add
cltd
mov
rolb
fdivr
outsb
sahf
xchg
push
mov
adc
aas
call
inc
in
nop
jle
add
inc
aam
nop
es
fwait
mov
lea
loopne
jae
push
add
loop
xor
xorl
inc
add
xchg
add
push
and
push
arpl
sbb
xor
arpl
sbb
aam
jecxz
add
adc
nop
add
xor
loopne
dec
jbe
add
add
sub
mov
outsl
sbb
imul
lods
jno
mov
cli
sub
pop
adc
and
xchg
adc
push
outsl
or
incb
push
loope
cli
jle
xchg
or
popa
and
pop
cmpb
sub
pusha
xchg
jne
xchg
lock
fcomps
in
mov
push
aam
lods
jecxz
movb
lods
nop
adc
cli
push
jbe
pusha
mov
sbb
xchg
hlt
xchg
cmc
and
inc
flds
mov
adc
dec
movb
fwait
fs
mov
push
add
xor
xchg
aam
sbb
into
shr
xor
mov
fbld
ret
repz
add
add
and
stos
les
hlt
xor
jmp
adc
mov
pop
adc
xorb
add
or
das
test
test
xchg
sbb
add
cmp
outsb
cmp
jle
es
leave
and
lods
mov
push
cmp
lret
sbb
xor
and
int3
addb
popa
mov
negb
xor
xchg
xchg
jmp
mov
mov
jp
lcall
push
dec
xor
int3
mov
mov
xor
xchg
lods
mov
mov
ret
imul
int
sarb
je
xchg
mov
mov
xor
xlat
add
jecxz
testl
inc
pop
sahf
fstpl
mov
sub
or
rorl
or
js
or
div
inc
push
ret
les
repnz
jecxz
dec
loope
inc
or
in
mov
add
test
inc
addb
add
xchg
movsl
add
jno
in
inc
xchg
xchg
in
clc
mov
add
test
jle
add
mov
lock
mov
cld
ret
sbb
or
sbb
rcrb
js
pop
repnz
xchg
sbb
inc
daa
jo
sbb
push
sub
pop
test
scas
add
push
add
mov
xchg
test
cltd
push
incl
inc
mov
test
cs
mov
test
str
dec
sbb
or
pop
add
sub
xchg
inc
and
sbb
cmp
add
rorb
xchg
dec
mov
sbb
add
dec
sub
adc
stos
popa
or
add
mov
incl
inc
aam
stos
inc
movl
call
inc
scas
in
repnz
cmpsb
dec
shl
mov
inc
int
pop
cmp
or
out
pusha
push
aad
pop
mov
mov
cmp
adc
lcall
jl
movsb
add
jno
sbb
lods
sbb
incl
leave
inc
pop
pushf
dec
dec
pop
or
les
mov
cmp
loopne
jae
loope
push
adc
push
add
lret
push
js
push
dec
sub
and
test
add
pop
push
jae
sbb
lods
or
add
adc
inc
adc
add
and
mov
ret
jbe
pop
mov
sub
movsb
pop
cmpsb
mov
sbb
nop
adc
adc
pop
jno
lock
es
cli
push
inc
dec
mov
xchg
push
jb
push
sub
test
ljmp
outsl
adc
daa
jmp
cs
daa
mov
daa
enter
cmp
mov
ljmp
push
dec
loopne
sub
push
pusha
or
movsb
or
movsb
out
test
rcl
movsb
adc
loopne
ljmp
add
loope
jp
xlat
ret
fwait
cmc
aad
adc
mov
mov
and
push
xor
cmpsb
inc
and
add
and
ljmp
dec
sub
sub
mov
sub
das
and
aad
fcmove
and
mov
repnz
xor
push
adc
mov
xor
fbstp
into
xor
nop
jo
outsl
negb
push
lds
sbb
xor
scas
adc
inc
sbb
pop
pop
in
leave
pop
sbb
test
xchg
je
in
loopne
xor
adc
mov
and
jg
push
std
mov
stos
pusha
daa
insb
xor
mov
daa
mov
in
adc
sbb
test
adc
loopne
pop
rolb
xchg
xchg
addb
push
cmp
in
aas
push
cs
and
mov
sbb
or
cmp
inc
and
fwait
scas
and
cmp
lret
es
dec
clc
adc
pop
or
icebp
add
adc
pop
jae
xchg
mov
out
jne
inc
xor
push
out
lods
stos
add
add
mov
aas
rolb
or
inc
sbb
pop
rolb
or
icebp
ja
stc
movsb
insb
test
adc
pop
jo
daa
jb
ret
mov
add
and
pusha
pop
cli
inc
popf
sbbb
sar
in
add
mov
movsb
lcall
rcrb
inc
pop
add
lret
daa
icebp
fwait
mov
js
aas
fdivrs
jnp
mov
adc
dec
or
jg
cli
mov
add
adc
popa
pop
mov
sbb
add
loopne
jle
add
add
add
cmpb
push
add
add
adc
inc
ret
mov
idivb
clc
fisttpl
add
mov
sbb
jp
xchg
ljmp
mov
jo
roll
pusha
add
or
adc
test
mov
fisubrl
add
add
mov
movsb
xchg
add
and
mov
cmp
add
jle
jl
adc
lock
inc
cmp
mov
jno
out
sbb
movsl
lock
loop
push
stos
xchg
jb
mov
jb
sbb
mov
pop
lods
adc
jo
sarb
adcb
lds
into
jns
rorb
ret
inc
and
mov
filds
insb
cltd
push
inc
js
adc
sbb
out
jecxz
or
nop
outsb
pop
add
mov
out
add
sub
ja
nop
add
push
mov
xor
out
insb
or
mov
mov
jp
xchg
cmc
lea
push
xchg
nop
hlt
dec
andl
add
pop
xchg
movsb
xchg
push
fidivl
push
out
add
xor
mov
shll
sbb
es
fcompl
sub
icebp
outsb
add
je
out
and
mov
xchg
ljmp
push
and
sahf
add
jbe
fmuls
mov
pop
or
xchg
push
cmpsl
xchg
sub
out
sahf
and
jns
int
pop
cmp
adc
int3
in
jmp
insb
shl
in
std
push
xchg
ljmp
inc
in
sbb
mov
xchg
jns
ljmp
jbe
ret
fisttps
sbb
xchg
mov
adc
pop
jle
add
repnz
aad
adc
push
mov
je
sbb
test
mov
js
xor
test
fisubrl
cmp
cltd
int3
das
and
psubq
pusha
xchg
rcrb
jo
gs
nop
or
test
scas
movsb
jp
jp
fcoms
sbb
xor
shll
pop
cltd
jecxz
or
loop
push
jb
fdiv
sub
test
inc
in
adc
adc
add
push
or
adc
push
or
sti
repnz
int
inc
notb
and
mov
inc
cld
scas
jo
mov
xchg
lock
pusha
xchg
cmp
and
sarb
rorb
and
sysexit
sti
sub
jle
pusha
insb
sub
push
sbb
mov
xor
outsb
xor
out
hlt
enter
add
je
and
inc
inc
subl
test
sub
std
sbb
std
icebp
xorb
mov
lods
rorb
mov
add
add
lret
mov
rorb
or
mov
add
cld
xor
xorl
mov
cmp
dec
jge
mov
rorl
inc
push
mov
mov
lret
mov
mov
and
jecxz
and
pop
add
cmp
cmp
aas
push
sub
add
mov
push
pushf
sbb
sbb
jb
ja
ljmp
mov
sar
into
int
iret
xchg
mov
xchg
sub
mov
in
jns
test
roll
test
xchg
shrb
xchg
lcall
adcb
jo
jo
mov
dec
pop
cmp
push
subb
pop
movsl
push
and
mov
add
iret
in
inc
cwtl
enter
jo
sbbb
mov
fwait
fs
pop
ret
xchg
pop
add
push
adc
inc
xchg
loope
fsubr
or
cmp
cmpsb
incb
adc
clc
incl
dec
cltd
cmc
mov
sbb
add
std
call
sbb
enter
push
add
jmp
add
mov
bound
or
jo
pop
fisttps
outsl
pusha
add
sbb
jbe
inc
add
sbb
jp
dec
sbb
mov
push
inc
sbb
mov
out
mov
lods
add
jns
jae
lock
adc
xchg
xchg
adc
mov
xchg
incl
inc
xchg
inc
inc
fadd
xor
rcrb
ret
rolb
cs
pop
shrl
add
jmp
les
push
fwait
and
rcrb
jnp
ljmp
and
lea
pop
mov
outsl
xchg
mov
xchg
push
call
cmp
je
mulb
push
dec
adc
ss
mov
ret
fcomps
xchg
push
ret
adcb
or
shlb
imul
adc
xor
test
mov
testb
mov
es
push
jae
cmpb
cld
insl
xor
xor
xor
icebp
or
fldt
mov
fs
or
and
ret
pusha
add
mov
ret
bnd
in
sub
sub
mov
dec
movb
pusha
add
fadds
add
lock
cld
jmp
mov
mov
sub
loope
xor
or
repnz
or
jo
and
mov
testl
sarb
dec
cmovo
loopne
adc
mov
or
add
and
mov
mov
jno
out
out
enter
jecxz
add
push
loop
xchg
inc
addl
jb
add
rol
jmp
lods
lods
push
mov
cli
add
scas
leave
lods
mov
sub
or
fiadds
add
add
pop
fadds
sbb
adc
xchg
mov
je
repz
std
pop
inc
or
insb
repz
stc
mov
adc
popw
mov
enter
push
addl
and
add
xor
loope
popa
mov
fadds
movsb
mov
add
mov
xor
pop
jne
lods
jmp
scas
lock
aam
push
iret
scas
hlt
js
mov
dec
sbb
lea
adc
cmp
xor
xor
pusha
rclb
fwait
lret
in
mov
out
or
jne
dec
add
dec
mov
mov
or
inc
loopne
sbb
add
mov
les
sub
clc
sub
xchg
mov
enter
cmpb
adc
data16
cmpb
outsb
cmp
or
jbe
add
cltd
popa
push
call
sub
push
mov
push
dec
and
mov
mov
or
add
adc
add
incb
push
adc
jo
scas
fiaddl
add
dec
mov
mulb
mov
adc
mov
inc
dec
pop
ret
aas
sbb
lahf
add
lock
add
fdivrs
loop
cmp
sbb
sub
addb
bound
sub
jmp
sbbl
inc
jbe
movsb
jbe
stc
je
sbb
xor
arpl
add
in
into
in
sbb
fisubrs
mov
imul
mov
dec
pusha
and
add
mov
bound
stos
inc
movb
inc
jp
subb
mov
push
lods
jbe
jnp
push
pop
pushf
pop
push
xorl
pop
xorl
repnz
push
or
inc
inc
adc
sbb
scas
sub
ljmp
les
sbb
add
add
mov
in
sub
hlt
add
enter
fs
jg
push
ljmp
jnp
rcrb
xchg
xchg
movb
or
xor
loopne
pop
fsubrl
or
push
add
lods
pop
jge
incb
in
add
fwait
aaa
dec
push
inc
xchg
cld
push
cltd
and
xor
repnz
gs
xor
sbb
xor
sub
test
xor
shrb
jg
dec
popf
stos
add
inc
sub
inc
adc
mov
mov
loopne
inc
fcoms
mov
cmp
or
movsb
loopne
ret
cs
jp
or
ret
push
out
call
pop
mov
sub
inc
das
roll
test
xchg
shrb
jl
pop
adc
or
inc
mov
dec
cmp
add
loopne
cltd
in
push
movsl
ja
and
lods
xor
mov
inc
les
inc
mov
adc
cmp
cltd
inc
inc
lds
pop
push
mov
mov
sub
sbb
inc
fs
xor
sbb
and
jmp
outsl
js
xor
lock
out
lds
andb
pop
add
push
fnstsw
loop
pusha
push
js
and
loop
sbb
in
lods
setnp
inc
loope
cmpb
and
std
jg
icebp
shlb
add
sbb
add
inc
and
sbb
dec
stos
in
es
sub
add
repnz
fstps
xor
js
fdivr
mov
into
in
sub
and
ret
mov
movl
loopne
inc
loopne
push
sbb
inc
iret
enter
xlat
cmpsb
pushl
add
add
xor
and
xor
cmc
inc
mov
in
ds
je
fwait
lcall
add
or
pop
xor
es
inc
add
pusha
pusha
not
test
je
or
pusha
pop
jo
mul
lods
xor
outsb
fstps
add
into
cmc
repnz
cs
scas
lock
add
cmc
or
or
fisttps
testl
mov
in
scas
mov
adc
or
clc
mov
mov
push
and
sti
inc
bsf
add
mov
fs
inc
adc
arpl
hlt
jb
stos
cmpb
subb
data16
addr16
lock
or
jb
and
dec
add
jne
and
jns
mov
xor
cmp
fsubrs
or
mov
std
adc
jle
add
xor
push
or
xchg
pushl
enter
mov
movsb
aad
cmp
mov
or
inc
mov
mov
mov
fisttps
pusha
popa
mov
out
sub
add
fsubr
sbb
jbe
outsb
call
fs
sahf
adc
xor
movsb
aad
jae
or
lods
cld
es
push
sti
addb
movsb
mov
dec
xor
or
repnz
test
and
into
test
fisubs
mov
inc
add
nop
lcall
add
mov
orl
scas
push
inc
out
out
and
and
and
cltd
adc
mov
mov
mov
and
adc
in
and
in
xlat
lock
test
adc
and
loopne
fwait
adc
iret
fwait
stos
dec
les
mov
fidivs
out
add
sub
and
dec
inc
loopne
std
fildl
pop
xlat
add
jp
cmp
and
push
dec
or
push
loop
add
ret
loop
lret
add
mov
mov
inc
std
dec
dec
or
fsubr
loope
inc
xchg
mov
or
xchg
inc
add
mov
pop
xchg
adc
rolb
dec
popa
flds
jo
cld
hlt
sahf
aad
popa
or
cmp
xor
aad
pusha
mov
insb
mov
pop
nop
aam
mov
fdivp
in
loope
sub
mov
mov
add
or
call
jle
ret
xor
pushl
rcr
psrad
xchg
mov
mov
push
ftst
out
add
mov
scas
rep
jge
mov
loopne
pop
mov
test
jp
add
or
pop
sub
push
mov
xchg
sub
inc
mov
jnp
test
lret
addb
rorb
cld
js
dec
int
fwait
out
xor
mulb
testl
jle
lock
xchg
add
mov
sub
mov
push
dec
mov
sub
and
sahf
pop
cmpsb
sbb
xor
add
inc
pop
lret
movsl
movsl
cs
jg
inc
subb
movsb
out
add
xor
push
popl
sbb
pop
ljmp
mov
fwait
xchg
mov
fwait
cmp
sbb
cli
popa
les
and
aaa
push
call
sub
hlt
rolb
mov
inc
xor
jle
cmp
or
sub
jle
or
push
aad
add
add
test
test
sbb
xor
mov
pop
sti
gs
or
mov
mov
jle
lods
push
das
in
jg
nop
es
or
or
add
push
shlb
not
les
jle
xor
mov
pop
adc
test
mov
dec
fmull
pop
mov
cmp
icebp
inc
or
sti
sbb
pop
les
sbb
and
es
cli
subb
sub
lods
and
adc
pop
and
xchg
add
jecxz
and
push
mov
push
or
pop
pop
adc
xor
pop
cmpl
mov
fwait
push
test
ret
test
or
jae
xor
push
ffreep
pop
add
jle
add
inc
icebp
xchg
jo
mov
cmp
and
rolb
roll
loop
ss
adc
sub
loopne
sub
fwait
stos
in
dec
sub
sbb
push
xor
clc
decl
mov
xchg
test
aas
out
cmp
imul
hlt
mov
dec
cltd
and
jbe
mov
push
lea
push
inc
mov
loope
or
dec
jp
outsl
sbb
sbb
sub
sub
dec
pop
jl
sbb
mov
mov
jmp
dec
cld
adc
popl
add
and
hlt
in
fwait
jne
add
fistpll
and
push
adc
loop
jp
sbb
add
inc
filds
mov
pop
adc
xor
dec
add
inc
pop
push
mov
mov
sbb
xor
lcall
stos
mov
jnp
arpl
in
sbb
jmp
fwait
loopne
xor
adc
sbb
test
dec
out
mov
addl
loopne
sbb
ror
inc
std
push
ret
out
xchg
mov
mov
inc
dec
clc
add
and
pop
adc
arpl
cmp
hlt
xchg
xchg
lcall
ret
fisttpl
sbb
mov
push
mov
je
cmc
das
inc
scas
inc
add
push
fs
add
pop
mov
orb
cld
add
or
inc
enter
jge
xor
adc
lret
inc
or
xorl
icebp
or
and
scas
nop
lret
dec
dec
or
cwtl
xor
pop
xchg
pop
push
xchg
mov
or
jo
hlt
sbb
mov
int3
js
out
pop
jmp
jbe
cli
sbb
add
mov
sbb
sti
sbb
nop
sub
lcall
push
addb
add
jb
lret
or
push
imul
adc
cmp
addb
add
pop
mov
add
loop,pn
lea
mull
sahf
inc
push
inc
test
xor
ja
rcrb
add
loopne
xchg
xor
jo
adc
jo
pop
xacquire
sti
or
dec
stos
cltd
outsb
xchg
add
or
adc
xchg
push
mov
adc
shlb
and
sarb
shlb
lods
das
cmpsb
out
fdivr
cmp
push
cmp
or
add
adc
sub
mov
and
int3
adc
mov
cmc
das
and
lods
sti
add
cld
xchg
cmc
aas
mov
out
push
or
sub
adc
mov
xor
push
test
cwtl
rcrb
sbb
out
and
push
push
pusha
addb
popa
leave
jecxz
ret
stos
movsl
shrb
call
or
xchg
test
sar
popf
test
sub
loopne
stos
pusha
push
jns
xor
push
js
and
mov
add
jle
call
loop
cmp
push
ljmp
out
pop
enter
pop
cmp
add
add
inc
pop
push
in
enter
cld
fsubrs
mov
nop
push
or
gs
dec
js
fadds
mov
add
or
inc
mov
movsb
dec
mov
mov
and
into
mov
dec
std
add
jecxz
add
mov
aam
push
add
in
inc
test
xchg
sti
xchg
pusha
int
mov
dec
cmc
xor
out
sbb
mov
xor
test
inc
add
ja
bound
stos
xor
or
adc
sub
or
cmp
out
sub
add
xor
or
nop
cli
inc
pop
shl
inc
loop
icebp
lock
pop
lods
pusha
or
and
xchg
inc
lret
scas
js
push
xchg
mov
cmp
xor
dec
xchg
push
jo
nop
xchg
lock
add
mov
aas
xchg
mov
or
push
sarb
cli
out
sub
adc
mov
sarb
enter
sub
push
inc
push
sbb
inc
push
jecxz
add
rclb
sub
rcrb
fildll
add
xchg
inc
xor
jo
dec
rolb
sbb
adc
xor
mov
xchg
addr16
loopne
sub
adc
inc
in
sub
mov
add
out
cmc
add
in
mov
jp
add
add
out
or
gs
mov
cmp
xchg
fimull
mov
aam
ret
lock
decl
jecxz
adc
mov
scas
inc
pushl
pusha
xchg
decb
je
add
out
jbe
mov
and
in
add
pop
mov
decl
loope
adc
jecxz
mov
push
inc
mov
shl
je
pop
aas
fstpt
lret
fdiv
xchg
jge
and
mov
mov
mov
mov
cli
dec
xor
and
loop
mov
push
add
ss
or
inc
jbe
mov
insb
jbe
inc
clc
inc
pop
std
movsl
js
jle
mov
es
add
add
movsb
lret
sbb
in
push
enter
push
loop
popaw
dec
outsb
in
js
enter
inc
and
pop
mov
sbb
cld
in
mov
clc
lds
lock
xor
add
mov
orb
shlb
sbb
xchg
add
sbbl
add
test
sub
push
sub
into
mov
adc
cli
inc
inc
xor
loop
cmp
sbb
jge
xchg
inc
cmp
xchg
sub
movsb
cli
or
sbb
mov
inc
mov
ljmp
add
incl
addl
cld
popf
add
mov
lahf
and
lahf
pop
filds
sbbb
shll
call
incl
shr
sarb
ret
or
inc
loopne
clc
cmp
xor
ss
rcll
popf
insb
pop
cmp
and
das
adc
push
xchg
std
xor
mov
int3
push
rol
or
xchg
or
jl
or
nop
js
jp
lods
push
mov
js
andl
imul
sbb
or
pushf
add
jo
or
icebp
push
movsl
or
ret
push
mov
jbe
es
adc
mov
rorb
hlt
incl
add
jmp
daa
push
mov
dec
daa
lret
or
sub
andb
pop
pop
jecxz
repnz
sbbb
sti
push
adc
or
movsb
fwait
jl
add
fisubl
inc
xchg
enter
cmp
rclb
push
xchg
jecxz
push
dec
mov
nop
mov
and
mov
and
das
test
inc
add
testl
orb
lea
rolb
test
mov
mov
and
rclb
loope
loopne
js
adc
or
aam
outsb
rcrb
mov
or
jp
roll
inc
lcall
jmp
sbb
dec
mov
cwtl
inc
enter
jmp
xor
jmp
or
stos
pop
xchg
jnp
mov
iret
pop
pusha
adc
xor
movsb
cltd
incl
mov
inc
sub
push
es
pop
lahf
mov
rorb
movsl
outsl
mov
jbe
adc
or
or
rcrb
push
push
insb
add
jp
lock
aam
xor
loopne
jecxz
incl
and
bound
scas
xchg
sbb
xor
jae
pop
test
add
loopne
roll
out
push
jbe
pushl
and
nop
out
inc
jb
mov
fistps
cld
push
inc
sbb
push
jecxz
add
rcrl
jg
rcl
add
ret
adc
ja
imul
add
mov
sbb
jnp
fwait
sub
lahf
push
arpl
cmpsb
cmp
xor
jge
xchg
adc
add
sbb
fistpll
insl
clc
push
jg
jecxz
stos
and
jg
push
out
jge
in
mul
and
imul
mov
cmpsb
std
mov
or
fmuls
mov
xor
add
xor
stos
fmuls
lock
add
loopne
adc
out
jmp
xlat
das
jbe
cmp
shlb
pop
rcll
sbb
mov
jnp
jge
popf
sbb
push
movsl
ja
mov
sahf
data16
xor
inc
daa
xor
xor
in
lret
rolb
sub
repnz
repnz
jmp
add
out
jno
in
push
dec
rorb
pop
outsl
fidivrl
test
cltd
lret
fwait
loope
push
jae
dec
hlt
inc
mov
jmp
pusha
stos
fwait
mov
mov
push
and
insl
sbb
push
arpl
add
pop
orb
inc
adc
mov
or
xor
loope
add
add
inc
call
adc
mov
add
push
push
or
dec
and
imul
aad
sbb
ss
in
mov
leave
js
loopne
movsb
lret
addl
add
xchg
jle
sub
iret
mov
push
add
es
jg
std
sbb
xchg
jae
ljmp
hlt
adc
and
pop
mov
lods
cmp
and
enter
mov
mov
mov
push
add
clc
dec
push
adc
hlt
subl
outsl
sbb
adc
jo
les
cli
mov
add
jae
inc
lret
ret
loopne
notb
push
adc
adc
vmovups
loop
test
fidivl
loopne
fisttps
adc
inc
outsl
mov
and
fisttpl
andb
test
push
clc
out
sub
in
fcomi
sbb
cltd
or
cmc
adc
sbb
ss
movsl
pushl
ret
sbb
shr
or
pop
lret
add
jle
push
inc
rep
xor
push
orl
sub
xor
leave
dec
imul
ds
xor
mov
mov
or
mov
lock
rolb
mov
cld
jbe
push
pusha
add
inc
cmc
or
xchg
xor
fprem
fnsave
sahf
and
and
push
fwait
cmpsb
ret
pushl
pop
cld
rorl
mov
loop
fsubs
dec
inc
cld
add
pusha
or
dec
or
rolb
inc
les
fdiv
push
into
or
or
nop
or
pusha
add
xlat
repnz
and
int
push
inc
loop
xchg
mov
push
test
jo
xchg
add
adc
sbb
es
xor
sub
add
lret
or
cmp
decl
adc
sbb
add
je
pop
mov
xor
jecxz
addl
push
cmp
in
push
in
push
add
mov
std
outsl
adc
xor
mov
loopne
mov
xor
stos
int
loop
lret
test
clc
das
clc
and
and
cmp
pusha
push
jb
fcomi
rorb
add
or
sub
adc
outsl
adc
les
add
dec
in
movsb
popa
push
shrb
decl
aam
xor
xorl
or
divl
lods
popa
es
adcl
lock
fisubrs
loopne
mov
and
test
mov
and
inc
mov
pop
shrb
sbb
push
or
loope
hlt
adc
nop
jns
and
jmp
sub
or
sbb
xor
cmc
mov
dec
mov
push
jbe
mov
mov
cli
jg
mov
jae
mov
push
push
lds
add
sar
mov
mov
and
shlb
mov
push
mov
test
scas
pop
subb
push
and
cmp
repnz
out
inc
sbbl
adc
sbb
ja
cmc
fstpl
mov
aam
xchg
psrlq
insb
sbb
xchg
and
arpl
lret
shl
addl
adc
rcr
xor
adc
test
roll
sbb
and
mov
or
test
int3
inc
lcall
dec
mov
sub
add
cmp
rcrb
movsl
pop
xchg
hlt
nop
pop
pop
adc
add
pop
mov
push
xor
lods
or
inc
addr16
clc
lods
popa
dec
push
pop
ret
mov
adc
jg
loop
pop
adc
in
loopne
cmp
scas
inc
inc
adc
movsl
lock
and
mov
mov
dec
inc
push
cmovp
push
pop
add
rolb
or
inc
rcrl
call
pop
and
xchg
sti
push
sbb
into
sbb
mov
xor
or
adc
adc
mov
sbb
sbb
icebp
add
mov
adc
aaa
insl
mov
lock
rorb
repnz
inc
das
xor
sbb
push
inc
clc
sbb
inc
xchg
add
mov
rorb
jmp
xor
cltd
add
sbb
sbb
xorb
jae
push
mov
mov
sub
xor
mov
in
sbb
sbb
inc
addl
xchg
fwait
cmp
int3
pusha
push
mov
fwait
inc
sub
cmp
mov
lock
hlt
loopne
xchg
enter
aam
negl
shlb
imul
mov
xorl
bound
adc
mov
mov
and
inc
inc
cmpsb
out
test
add
test
mov
stos
cmc
mov
jb
shrb
xchg
add
push
pusha
test
gs
push
add
incl
test
sbb
aad
stos
nop
filds
dec
sbb
dec
mov
and
inc
adc
mov
stos
stos
pushf
test
mov
or
lcall
jb
mov
popf
sub
inc
push
add
add
sub
jno
loopne
inc
dec
mov
or
jle
loope
sub
pop
test
jae
sub
sbb
in
out
and
mov
or
mul
inc
jecxz
movsl
movsb
movsb
inc
mov
clc
mov
mov
push
cmpsl
inc
mov
or
pop
roll
loop
sbb
xchg
loopne
loopne
idiv
mov
and
sbb
lock
add
and
or
add
add
adc
mov
es
popa
add
test
adc
outsb
sbb
push
dec
xchg
sbb
jne
add
fiaddl
movl
mov
pop
pop
add
mov
js
aaa
xor
add
inc
fdivl
mov
pop
jecxz
addb
les
cli
clc
and
inc
ret
add
sbb
inc
jl
xlat
cld
js
test
movsb
lcall
push
pop
in
xor
adc
sar
jo
mov
mov
std
cltd
jp
incl
fcmovnu
add
jb
jae
test
shlb
les
sub
jo
stos
push
and
fstpt
mov
movsl
add
int3
jmp
stos
fcmovb
inc
cmp
mov
xlat
jecxz
fadds
ljmp
fdivrs
loopne
dec
cld
jno
jne
xchg
pop
outsb
ret
icebp
seto
push
adc
rcr
add
xchg
ror
mov
add
sahf
call
add
fistps
pop
adc
add
cli
sbb
inc
mov
js
fcomip
les
jno
mov
sbb
sti
and
inc
xlat
arpl
lods
leave
lock
pusha
mov
lods
add
hlt
mov
add
sub
add
dec
push
fadd
fwait
add
loopne
jg
test
add
cmp
test
adc
sbb
in
lret
mov
pop
ds
sahf
sbb
js
in
xor
es
cmpl
cmc
sub
stos
in
bound
mov
stos
orl
cmc
dec
jl
in
and
hlt
cmp
js
lock
push
add
pushf
sub
lcall
fiaddl
ja
sub
adcb
rolb
add
clc
and
add
pop
mov
cmp
shll
add
xor
fwait
je
shr
add
stos
add
or
add
hlt
ss
jle
push
pop
call
push
adc
addb
addb
adc
pushf
mov
add
mov
inc
fildl
ret
in
sub
mov
add
mov
or
sub
inc
xorb
fisubrl
sbb
incb
addl
fmuls
xor
insb
jmp
mov
sbb
out
cwtl
jbe
lret
das
adc
dec
adc
out
adc
fs
add
loop
or
mov
mov
dec
or
xchg
enter
cmp
bound
rol
xor
ret
jb
fcoms
sarb
hlt
sahf
add
aam
xchg
sub
inc
sub
sub
add
sbb
xchg
cli
add
je
jb
subb
js
je
sbb
ret
adc
andl
adc
mov
mov
lock
jbe
mov
pop
lret
push
add
ds
push
js
sti
or
mov
ljmp
cmpl
js
cld
mov
cmpsb
adc
sbb
fiaddl
call
fidivrl
or
sub
lods
inc
xchg
pusha
push
jecxz
add
fwait
aam
stos
mov
inc
xor
std
test
das
sti
mov
ret
xchg
jmp
es
andb
out
pop
movsl
scas
cmp
push
xor
sub
add
repnz
add
lea
dec
cmc
xorl
mov
testl
fistps
sbb
inc
rorl
fcoml
and
push
xchg
scas
xchg
cmp
add
push
mov
sbb
insb
push
je
inc
sbb
lods
pop
xchg
jbe
lods
int3
rorl
loopne
sub
subb
sbb
xor
push
popl
cmpb
imul
insl
push
js
js
lret
insl
xchg
rorb
ss
clc
jp
in
sbb
push
and
dec
pop
movsl
dec
inc
je
je
push
jo
dec
push
std
push
inc
sub
add
mov
xor
sbb
pop
cmpsb
jg
loop
rcll
push
hlt
dec
ret
add
movsb
clc
sarb
push
and
mov
xlat
mov
push
or
mov
inc
add
test
or
xor
out
ret
ss
adc
pusha
add
xor
out
mov
xchg
jp
dec
cmp
ljmp
mov
pop
xchg
mov
add
mov
inc
fisttpll
xor
pop
sbb
adc
sbb
mulb
aas
decb
sbb
rclb
movsb
or
popf
test
dec
sbb
insl
pushf
imul
or
jle
xchg
and
sar
rcrb
add
inc
filds
xchg
loope
mov
orb
mov
call
mov
or
push
lcall
xlat
test
adc
rolb
inc
dec
and
clc
pop
outsl
ja
outsl
add
push
dec
shrb
add
out
xor
xchg
stos
push
daa
pop
or
repnz
sbb
xor
xchg
dec
xor
mov
cmpl
cmp
cmpsb
sub
xchg
xor
mov
adc
sbb
mov
fisubl
sbb
or
les
and
dec
sub
pop
shlb
cwtl
mov
in
push
xor
xchg
loop
xor
add
rorb
jle
mov
and
hlt
out
xchg
xchg
rclb
mov
shlb
pusha
add
loope
movsb
push
jns
enter
jbe
lcall
push
and
sbb
sub
fwait
cmpsb
pusha
and
decb
movsb
sub
xchg
and
mov
xor
cwtl
push
je
dec
lods
mov
aaa
shrl
add
ret
mov
sbb
loopne
mov
jle
mov
pusha
cmpsl
stos
and
testb
add
pop
roll
pop
pop
sub
cltd
mov
decl
sub
inc
loopne
cmp
cmp
lods
loop
mov
lret
inc
movsb
add
inc
jbe
or
shrl
cmp
xchg
add
or
jle
ret
cmpsb
add
mov
inc
addb
adc
xchg
mov
mov
pop
lret
out
pusha
scas
sahf
mov
mov
or
cmp
or
dec
insb
add
sti
rorb
fildl
jle
adcb
cltd
out
mov
push
jmp
and
mov
test
xchg
test
or
xchg
subb
movsb
filds
mov
in
add
mov
movsb
sub
add
mov
ret
push
pusha
push
mov
xchg
lcall
je
jo
sbb
jle
push
mov
adc
fcmovnb
adc
sti
rcrl
pushl
lods
loop
out
cltd
push
repnz
cmpsl
rclb
mov
add
xchg
dec
shll
cmp
mov
lret
sti
lea
mov
aad
jbe
test
insb
mov
hlt
cmp
push
and
adc
pop
push
out
bound
movsb
loope
and
in
or
push
mov
setne
jl
insb
sbb
rolb
mov
inc
call
lock
xor
js
mov
or
cs
adc
loope
dec
icebp
dec
inc
adc
insb
mov
loopne
movsl
or
jno
pop
rorl
fwait
shrl
jecxz
push
mov
and
outsl
push
popa
adc
inc
and
and
fldl
sarb
ret
xor
mov
add
orb
addl
add
pop
mov
adc
ljmp
mov
call
sbb
pushl
pusha
xor
push
mov
outsb
xchg
jle
mov
adc
mov
add
add
inc
pmaddwd
clc
pop
ficoml
mov
adc
mov
mov
jp
and
jmp
orb
add
data16
sbb
lock
mov
dec
jmp
add
mov
out
movsb
psraw
adc
add
adc
loope
bswap
cmp
jg
clc
push
xor
notl
adc
sub
or
addl
inc
jp
mov
adc
dec
pushf
ljmp
ret
adc
dec
xchg
int3
adc
pop
cld
mov
push
fdivrl
and
xor
xchg
cld
fistpll
movsl
rorb
xchg
mov
push
das
xchg
jmp
xchg
jbe
mov
push
or
add
push
lcall
std
fidivrl
push
sub
test
mov
ret
rcrl
ja
cmp
adc
fwait
add
sbb
aaa
sub
loope
enter
add
cltd
nop
mov
cld
test
mov
sarb
bound
push
shrb
sbb
pop
sbb
lock
std
add
cmp
add
push
inc
jns
loop
out
movb
sub
daa
lret
jbe
arpl
add
scas
push
xor
sub
aad
dec
loope
movsl
data16
or
mov
loope
add
sbb
adc
mov
push
cmp
mov
je
pushf
dec
adc
push
lock
adc
shl
mov
jo
add
inc
out
adc
pop
push
mov
ss
and
and
repnz
or
mov
xchg
cmp
sbb
int3
subb
cmp
jmp
mov
test
mov
adc
lock
loop
aaa
mov
loopne
add
and
xor
mov
lcall
sbb
sbb
and
icebp
xchg
cltd
popf
and
outsb
sub
pusha
mov
shlb
fwait
jg
ljmp
push
jb
insl
loope
sbb
lcall
imul
addb
jle
sti
outsl
add
and
xchg
xor
push
cmp
or
jbe
incl
mov
das
lods
xchg
fmuls
out
fiaddl
mov
ficoms
out
mov
ljmp
ss
lcall
mov
rcrl
mov
xor
dec
sti
fbstp
cltd
stos
mov
lock
and
popa
xor
popf
adc
pop
fnstenv
add
cmp
xchg
sub
js
add
or
mov
aaa
jl
push
nop
jmp
addr16
cmp
stc
loope
fisttpl
rcrb
jae
lods
inc
inc
addr16
mov
adc
push
ljmp
mov
cltd
xchg
or
jle
add
adc
cld
pop
sbb
add
and
jge
adc
stos
les
xchg
adc
jl
hlt
filds
push
mov
lods
xchg
xor
jmp
and
adc
sbb
sbb
fbstp
call
fstps
and
lods
icebp
push
addb
jle
mov
mov
dec
mov
stos
ss
sbb
jle
inc
add
mov
fadds
enter
cmpb
mov
lea
jae
pusha
cmc
test
clc
mov
or
adc
sbb
cld
mov
mov
aad
ret
ret
lea
fs
pop
and
std
stos
cmc
mov
add
sarb
xor
mov
add
jmp
pop
push
mov
inc
jle
daa
sbb
enter
inc
inc
iret
mov
das
inc
shlb
or
inc
dec
adc
test
mov
inc
inc
and
loopne
xor
mov
cs
jmp
icebp
ds
and
inc
and
inc
xchg
ret
pop
sbb
xlat
and
and
xchg
and
xor
and
rcrb
inc
sub
adc
dec
mov
cmpb
sbb
add
jae
dec
and
add
movsb
fs
sbb
adc
xchg
clc
test
jbe
xor
mov
mov
inc
lock
les
add
pop
xchg
dec
out
std
push
pop
mov
inc
andb
inc
add
inc
jge
push
test
or
or
outsl
cltd
or
nop
cs
rolb
rorl
push
in
jmp
test
lcall
sub
adc
dec
stos
adc
sbb
jecxz
xchg
jecxz
xor
test
das
incb
and
adc
push
or
mov
add
xchg
push
aas
mov
push
add
jle
inc
adc
pop
adc
inc
inc
inc
mov
xchg
rcr
fwait
dec
out
enter
mov
dec
dec
and
int3
mov
loope
movsl
faddl
sub
or
xor
push
aaa
sbb
sbb
ret
and
jno
mov
call
mov
roll
inc
jmp
aas
pop
push
mov
cmp
cltd
add
push
movsb
or
fnstsw
ljmp
adc
adcb
xchg
mov
aaa
push
xchg
jmp
xchg
sbb
adc
mov
adc
and
adc
pop
rorb
outsb
add
and
push
or
mov
jg
andb
cmp
xor
push
hlt
add
nop
cs
testl
mov
dec
add
test
out
movsb
sbb
xor
adc
add
xchg
sub
mov
cltd
lods
add
rolb
mov
or
xchg
and
add
and
pusha
rolb
nop
sahf
push
int3
xchg
sahf
out
hlt
ja
nop
gs
addl
data16
cmp
andb
add
out
daa
ficoms
push
test
or
clc
pop
ret
cwtl
movsb
ljmp
mov
notb
and
jle
inc
xor
inc
xchg
push
fdivrl
in
movsb
xchg
sbb
mov
dec
xchg
add
test
cltd
push
add
mov
xchg
jae
cwtl
pushf
add
jns
sub
jnp
movsl
movsb
testb
jne
adc
cwtl
loope
aad
mov
enter
jnp
cli
data16
orb
xorl
add
add
stos
sbb
sbb
int
jbe
add
pop
add
cmp
decb
adc
lock
cli
int3
add
adc
jb
aas
mov
xor
roll
movl
roll
sub
test
sar
shlb
or
notl
std
dec
or
ret
rcll
pop
clc
mov
lds
in
inc
push
sbb
cmp
cli
or
push
xlat
inc
push
rolb
inc
add
add
dec
inc
incl
mov
add
xchg
test
clc
bound
jne
inc
add
jl
jle
repnz
pushf
inc
mov
inc
sub
add
sub
fs
jb
in
mov
fwait
and
xlat
mov
mov
push
and
int3
lret
lahf
pop
movsl
inc
ret
stos
add
je
data16
fcomps
or
sbb
les
mov
pop
cmp
pushf
test
dec
dec
mov
test
dec
jle
sub
or
add
or
cmp
push
mov
adc
popa
movsb
out
add
jecxz
lock
add
nop
cmp
add
or
add
inc
mov
mov
test
inc
pop
jmp
enter
pusha
test
orb
outsl
ljmp
in
loop
mov
cmpb
add
cmp
decl
pop
rclb
add
add
or
fildll
add
adc
jbe
shlb
jmp
or
aaa
xchg
rcrb
fwait
jae
stos
fwait
push
push
inc
ja
dec
test
xorl
jp
pop
cltd
cmpsl
push
and
notl
or
sbb
sbb
ja
rcl
hlt
jo
push
insb
std
mov
push
and
xor
popf
subb
nop
movsl
fwait
inc
call
pop
adc
dec
movsb
jle
add
sbb
adc
sbb
mov
cmp
mov
add
loope
add
lea
arpl
loop
inc
or
add
cmp
add
adc
lods
popa
mov
mov
mov
sbb
std
and
loopne
jge
add
dec
and
mov
adc
cmpsb
dec
sub
loopne
and
sahf
and
rclb
adc
icebp
scas
xchg
jo
jbe
andb
or
and
or
loopne
shrl
dec
adc
xchg
push
and
subb
jg
shrb
addb
add
push
pusha
popa
xchg
pop
in
mov
arpl
jo
mov
inc
xchg
push
dec
aam
inc
inc
mov
or
adcb
incl
inc
adc
outsb
js
and
pop
inc
pop
inc
loopne
and
and
mov
inc
cld
sbb
jo
dec
testl
mov
addb
mov
sbb
add
or
insb
sahf
mov
or
xor
or
iret
ds
xchg
test
add
into
pop
and
and
lcall
clc
movsl
or
and
xchg
fcomps
in
xor
jp
push
add
std
out
loopne
sbb
mov
test
xchg
or
or
das
inc
mov
mov
dec
rorb
stos
push
and
xchg
int
ret
enter
cld
add
add
and
pop
cld
or
roll
cmp
xor
mov
push
cmp
inc
mov
pop
cmp
pushl
aam
push
jo
mov
jle
int
shll
addb
jo
sbb
adc
adc
daa
add
add
js
scas
movsl
add
lds
je
movsl
xor
cmp
stos
dec
pop
dec
xor
push
or
and
and
dec
push
add
ja
mov
ret
jle
xlat
jnp
sbb
mov
dec
jne
mov
mov
add
gs
out
sbb
push
and
cmpb
rorl
aam
push
loopne
int3
nop
add
cli
fisttpl
je
inc
pop
inc
push
orl
mov
iret
data16
sub
loopne
sarb
fistps
sbb
mov
ret
pushf
sbb
sbb
stos
and
xor
sar
push
add
or
out
pusha
inc
jno
mov
insb
notb
pop
cmp
test
cwtl
mov
dec
sarl
jg
pushf
lret
stos
sub
xchg
in
shlb
mov
adc
test
add
adc
stos
mov
mov
ljmp
sbb
loope
ja
push
mov
nop
es
xlat
adc
push
ja
inc
enter
xor
roll
xor
pop
mov
inc
clc
mov
pop
arpl
mov
addb
ret
add
add
or
cli
jo
stos
xor
lea
xchg
stos
nop
mov
in
shl
dec
rcl
or
add
inc
or
xlat
dec
loop
jno
push
inc
repnz
aaa
add
cmc
movsb
aad
loope
xchg
sbb
jecxz
add
lock
repnz
push
xlat
sbb
stos
ss
int
rcll
or
sbb
xor
fidivrl
cwtl
repnz
inc
or
xchg
mov
mov
loopne
adc
inc
xchg
push
jecxz
push
add
andb
mov
mov
push
and
icebp
jo
cltd
pop
sub
loop
mov
insb
xor
or
dec
jnp
cmpsb
ja
fistpll
ja
ja
enter
shlb
jae
cmp
adc
xchg
mov
sbb
xor
adcb
sbb
insb
mov
int3
jb
into
sub
aad
xor
bound
mov
cwtl
and
test
ljmp
out
cli
bound
inc
das
and
jno
pop
mov
add
add
jo
lock
test
and
rcl
cmp
int
scas
push
adc
cli
cwtl
roll
cld
ljmp
ljmp
inc
popa
aas
mov
add
outsl
xchg
adc
cld
xor
mov
sbb
jg
add
xor
add
es
add
add
cmpb
mov
push
jne
shrl
das
adc
aaa
inc
mov
gs
and
cmp
jmp
data16
inc
xchg
gs
cmp
sar
orb
cmp
rclb
outsl
cmp
je
sbb
adc
mov
lods
push
test
mov
mov
dec
in
sarl
mov
cmp
pop
lock
mov
add
add
add
hlt
outsb
adc
dec
adc
outsb
or
adc
jb
add
daa
dec
jno
adc
dec
jo
sub
push
push
push
adc
ja
sbb
dec
sub
add
lret
adc
dec
dec
ja
aaa
and
mov
out
add
mov
in
adcb
scas
dec
xchg
cmp
invd
daa
sbb
mov
jle
loopne
inc
movsl
lods
imul
fisubrl
outsl
mov
xchg
mov
lcall
clc
pusha
xchg
gs
cld
insb
sub
addb
dec
hlt
leave
pop
fldt
push
pop
push
mov
jno
adc
push
jl
jns
outsl
mov
leave
out
gs
push
hlt
push
pop
lock
daa
sbb
cs
xor
lods
cmpsl
pop
mov
pop
jle
mov
sti
fs
sbb
sarb
mov
rorb
sbb
jg
lret
cli
mov
fnstcw
pusha
xor
movsl
cmp
inc
xchg
cld
jbe
aaa
or
sub
adc
jne
sbb
cmpsb
dec
adc
mov
xorl
lcall
inc
dec
push
push
jae
je
xor
frstor
fcmovb
cmpsb
call
xchg
add
pop
lock
sbb
pop
mov
andl
ljmp
adc
loope
push
ljmp
cmpsb
jns
add
shlb
movsb
add
outsl
mov
add
lds
clc
outsl
outsl
xor
inc
inc
push
pop
sbb
dec
das
push
ljmp
adcb
jo
ret
add
enter
ds
or
mov
loope
cmp
cmc
mov
inc
jae
inc
jno
cltd
icebp
sbb
lock
adc
iret
mov
out
inc
ret
and
mov
push
add
pop
lret
and
loop
repz
or
adc
adc
lcall
nop
adc
sahf
xchg
jg
pushl
cmpsb
add
push
xchg
or
mov
fwait
orl
or
movsl
dec
xchg
clc
out
cmpsl
dec
clc
movsl
add
fbstp
jl
setnp
mov
mov
call
adc
push
push
add
lea
sqrtps
mov
and
addl
and
sbb
nop
sbb
subb
mov
inc
add
jg
add
mov
pop
gs
add
orb
inc
pop
xchg
adc
xor
scas
dec
jle
adc
xchg
add
push
add
lock
adc
out
adc
dec
bound
pushl
mov
repz
ss
loopne
out
inc
adc
sub
pop
jmp
shrl
or
inc
add
lods
add
cmp
mov
jbe
push
dec
push
dec
cmp
cli
add
lret
or
xorl
outsl
filds
or
mov
push
mov
imul
int3
jmp
cmp
jecxz
pop
add
mov
push
add
xchg
in
into
add
mov
insb
sbbb
cmpb
addl
sahf
int3
cld
add
add
add
sbb
mov
pop
cmp
or
cmp
ret
pop
mov
add
and
ret
ficoms
adc
into
dec
out
call
cmp
les
cli
add
fistps
pushl
test
enter
add
jg
lret
inc
jmp
push
sti
andb
mov
fmuls
adc
or
inc
nop
xchg
dec
pusha
and
lea
dec
int
or
push
dec
push
cli
add
jg
push
xorl
or
xchg
or
adc
add
adc
orb
pop
inc
pop
cmpb
icebp
inc
rolb
testb
inc
fwait
lret
subl
imulb
sbb
addb
dec
pop
icebp
or
aad
add
inc
add
mov
add
es
fildll
fneni(8087
sbb
add
push
test
subb
subl
sbb
inc
xor
ja
roll
sub
cmp
dec
ljmp
mov
outsb
bound
nop
add
push
or
test
inc
jp
pop
push
or
push
icebp
addl
pop
adc
adc
inc
aam
pop
clc
adc
or
pop
push
leave
or
lret
dec
add
pop
out
data16
aam
mov
push
rcrl
testb
xlat
aaa
mov
fwait
cmp
loopne
ret
in
rorb
push
lcall
and
jbe
out
addb
dec
or
cmpsl
jbe
jle
xchg
jo
cli
sub
arpl
adcl
or
inc
sbb
mov
add
shlb
mov
lcall
cmp
and
pop
xchg
cld
js
push
or
ret
out
push
or
xchg
mov
orb
int
ficoms
push
push
mov
test
fldt
jmp
ret
sbb
subb
orl
push
mov
sbb
mov
incb
test
inc
cmp
add
mov
test
dec
push
or
stos
push
enter
or
add
out
pop
sbb
lret
js
push
or
rcrb
mov
pusha
xchg
add
or
cli
jmp
stc
in
xchg
repnz
or
pusha
jns
sti
xor
jmp
add
jmp
jp
xlat
cli
sub
ja
add
das
loope
test
decl
das
sub
mov
inc
jo
sub
add
outsl
add
imul
and
std
inc
outsl
subb
sbb
out
xor
and
mov
xlat
shrb
andb
pop
pusha
xor
jmp
dec
cmp
orb
add
mov
es
mov
add
dec
jno
cmpl
jbe
and
test
outsl
adc
movsl
mov
pop
mov
mov
or
xorb
clc
jmp
dec
sbb
loopne
mov
das
rolb
and
and
mov
add
out
sub
pop
mov
push
sub
sbb
push
mov
shrl
lock
and
and
add
or
jle
test
data16
adc
sbb
xchg
ljmp
and
aas
sbb
sbb
mov
mov
stos
xchg
shlb
and
incl
loopne
add
pop
inc
rclb
movb
xchg
pop
push
ja
shl
std
in
imul
mov
inc
adc
xor
insb
loope
repz
jne
cld
jbe
loope
aas
jecxz
add
mov
push
xchg
cmp
aaa
inc
push
addl
add
adc
push
mov
sub
push
data16
jecxz
fisubl
add
push
std
mov
inc
mov
add
nop
and
add
jbe
mov
cmp
aad
mov
sbb
loopne
adc
jmp
pop
or
xlat
jb
add
dec
scas
pop
and
and
and
out
sub
add
xor
out
jne
test
add
pop
dec
sub
ljmp
sub
add
inc
or
pop
xor
dec
pop
inc
das
xor
push
mov
push
loopne
pusha
and
outsb
add
gs
ficompl
mov
mov
fs
shll
jp
or
int
add
addb
mov
incb
cmp
hlt
add
push
xor
mov
adc
sbb
inc
xchg
or
push
sub
fnsave
push
or
inc
rolb
pop
popa
fs
sub
pusha
cmp
push
mov
add
and
or
lea
test
in
push
clc
or
sub
adc
push
lock
movsb
das
inc
push
sbb
stc
pop
popa
push
sub
mov
jnp
fadds
js
jb
sbb
pushf
andb
shrb
jbe
and
pop
ljmp
rolb
adc
scas
addb
out
bound
jae
bound
mov
adc
sub
and
mov
or
pop
xor
or
loop
push
xor
aaa
or
add
roll
insl
mov
fidivs
loope
or
pop
lret
lock
push
mov
fnstcw
jp
movsb
aaa
cld
lcall
ss
shll
add
nop
insb
mov
out
push
xor
fwait
rcll
adc
add
push
arpl
aaa
inc
es
adc
sub
das
addb
jno
jno
pop
and
push
push
jae
test
xor
jae
add
push
int3
outsl
sar
cld
incl
inc
xchg
loopne
dec
push
icebp
add
add
adc
mov
add
jecxz
out
cli
pop
xchg
add
sbbl
jb
add
leave
dec
mov
in
xor
stos
scas
push
jmp
push
add
jbe
pushl
imulb
outsl
shlb
dec
rorb
push
and
jb
cmp
push
shrl
subb
pop
adc
push
add
add
mov
mov
sub
add
mov
decl
mov
sbb
loopne
inc
sbb
mov
adc
or
mov
jb
adc
lock
cltd
out
nop
lahf
inc
mov
or
sub
jp
xchg
fldt
lahf
jo
mov
lahf
push
pop
cwtl
sbb
push
add
sbb
xor
das
and
jl
rcr
mov
fimull
hlt
inc
sbb
pop
xorl
add
mov
rorl
and
outsb
enter
mov
outsb
add
push
inc
jg
mov
repnz
loop
push
add
pop
xchg
addr16
mov
incb
inc
xchg
mov
push
pop
push
push
xchg
inc
xchg
mov
pop
popa
push
xchg
or
inc
xchg
rorl
ret
fwait
scas
test
incl
add
sub
ja
popa
sbb
adc
push
xchg
add
mov
add
incl
push
js
shlb
cmpsl
sbb
or
inc
sbb
fwait
pop
or
aad
mov
inc
fisubrl
pop
stos
stc
inc
sub
mov
or
push
roll
sub
dec
pop
adc
dec
sub
or
aam
pop
aad
popa
jl
sub
sbb
rcll
fs
mov
add
or
inc
lret
cmp
dec
call
rolb
pushf
stos
mov
aaa
inc
xor
test
mov
adc
flds
sbb
sarb
pop
subb
pusha
add
dec
dec
ja
xor
lods
lcall
jl
cld
cwtl
cli
out
test
push
xor
jo
stc
sbb
add
push
test
addl
popa
add
loope
cmpsl
jecxz
add
test
and
fcompl
mov
add
jns
repnz
mov
iret
stos
xchg
inc
or
and
call
loop
adc
repz
pop
push
rcrb
cli
xor
nop
outsl
mov
inc
mov
adc
push
pusha
jae
inc
and
sarb
rolb
ret
test
clc
mov
xchg
mov
jmp
mov
pop
dec
jo
fadds
and
cltd
cmpsb
xor
ja
jmp
pusha
scas
cmp
push
jae
xchg
icebp
mov
ficoms
sbb
and
adc
dec
mov
jge
addb
fcmovne
nop
add
inc
lret
cmp
push
push
orb
lock
push
pop
sub
ret
dec
or
rcrl
roll
mov
incl
and
xchg
cmp
add
cmp
nop
add
or
ljmp
cs
mov
adc
dec
dec
adcb
adc
sbb
push
dec
inc
push
test
and
or
mov
push
cmc
mov
pusha
or
pop
mov
mov
andb
pop
or
mov
mov
inc
adc
jo
test
inc
dec
inc
inc
cmp
inc
add
dec
sub
dec
dec
inc
or
pushl
and
add
sub
leave
rolb
pop
mov
adc
pop
push
aaa
add
mov
jg
out
xchg
je
and
push
jo
pop
aas
adc
mov
aam
pop
scas
dec
add
push
xchg
lock
dec
xor
test
add
int3
orb
bound
cmpsb
sbb
loop
xchg
push
repz
inc
and
cmp
orl
shlb
push
jnp
adc
dec
movsb
icebp
adc
pop
xchg
add
rcrl
cmc
es
test
pop
and
add
inc
push
or
sbb
mov
or
or
sbb
adc
push
jp
sti
add
data16
jecxz
repnz
es
pop
push
add
jecxz
cld
or
add
sbb
sub
js
sbb
inc
loop,pt
sbb
adc
and
cmp
inc
mov
push
pop
add
inc
jle
into
xor
pop
add
dec
rcll
xchg
mov
add
in
fistpl
test
sub
or
test
push
in
dec
mov
mov
or
dec
and
pop
addr16
adc
or
mov
shrb
sti
punpckhwd
pop
outsl
dec
cltd
and
rep
dec
and
push
push
push
push
dec
push
push
jo
push
mov
test
adcl
pop
dec
pop
fisubl
jle
movsb
ja
aas
outsl
pop
dec
stos
out
dec
and
push
xor
outsl
mov
dec
roll
cmpl
dec
jl
adc
dec
or
sbb
dec
dec
jnp
jge
xor
sub
dec
or
and
xor
and
mov
hlt
dec
repnz
outsl
fwait
jg
xor
push
cmp
loop
or
aas
dec
fnstenv
in
in
mov
or
mov
mov
jle
rcrl
andb
or
dec
cmp
mov
xlat
mov
sub
or
dec
divb
in
stos
pushf
push
mov
and
mov
push
data16
sbb
dec
pop
dec
out
orl
add
push
insb
lcall
dec
outsl
adc
sbb
stc
notb
or
mov
inc
sub
push
dec
sbb
cmc
dec
pushaw
sti
mov
pop
sarb
faddl
cmp
xchg
std
dec
mov
mov
scas
dec
adcl
outsb
push
and
out
insl
dec
inc
in
xchg
scas
inc
cmpsb
jmp
iret
outsb
or
mov
es
dec
pushf
jbe
out
ss
inc
or
dec
ss
decl
xor
adcb
sbb
add
mov
mov
xlat
dec
inc
and
fiaddl
add
adc
dec
stos
gs
sti
sub
fisttps
rcr
or
icebp
or
mov
inc
ret
rcl
add
outsb
or
or
dec
dec
decl
faddl
jle
sub
mov
mov
dec
ljmp
lcall
add
mov
rclb
dec
mov
test
loopne
mov
lods
inc
loop
insl
push
mov
xchg
mov
mov
mov
dec
xor
dec
push
pusha
xchg
push
or
jo
xor
xlat
inc
and
dec
into
sub
dec
ret
mov
scas
pop
and
lods
xchg
jo
cmp
pusha
xchg
js
mov
or
stc
imul
fildll
dec
lea
inc
adc
cltd
dec
mov
aaa
loope
adc
or
addl
outsb
push
subl
sbb
adcl
sub
rorb
cmpsb
lock
mov
fidivl
or
or
mov
inc
pusha
xchg
in
subl
jo
aam
add
push
loopne
mov
cli
data16
push
xchg
xor
into
add
xchg
shlb
push
push
scas
sbb
mov
rolb
cltd
test
jo
mov
xchg
daa
or
mov
jbe
add
inc
pusha
mov
add
pusha
inc
add
rcrb
add
xor
adc
push
idiv
adc
add
mov
insb
jg
cmc
adc
add
cmp
popl
mov
cmpsb
jle
add
ja
sub
outsb
jmp
or
sbb
lods
sbb
xchg
or
add
out
inc
jbe
inc
adc
fwait
clc
out
and
sub
scas
daa
sbb
push
or
ja
inc
test
lock
mov
fidivrl
add
push
mov
stos
test
test
inc
addb
daa
push
mov
add
or
mov
stos
negb
jle
mov
pusha
dec
add
sbb
andl
sbb
or
mov
bound
or
sub
inc
dec
adc
adc
in
pop
mov
bound
dec
lods
idiv
aaa
mov
iret
addr16
sub
sub
sbb
bound
pop
popa
add
lock
fistpll
dec
loope
sti
cs
add
js
pop
sbb
out
add
push
xorb
ljmp
and
and
das
scas
or
loopne
popa
out
and
and
or
fstpt
or
stos
jns
push
xchg
lret
adc
jp
push
addb
ljmp
mov
sbbb
fdivs
ds
and
outsl
pop
stos
mov
cs
pop
ljmp
movsb
lock
adc
add
ljmp
sub
or
or
or
and
clc
pop
icebp
ljmp
and
or
mov
and
add
sbb
mov
dec
fcoms
jo
push
shlb
adc
rol
jb
das
sbb
xchg
mov
add
adc
push
inc
sub
mov
aam
lock
pop
cltd
add
ss
dec
jle
or
push
cs
adc
pop
or
add
inc
xor
push
outsl
push
stos
dec
mov
or
jl
xor
jno
push
jbe
test
pop
and
rcl
and
pop
jbe
adc
mov
add
add
addb
ret
cld
cmp
enter
cld
mov
lcall
sbb
sub
or
mov
mov
dec
insb
inc
in
ret
loope
xor
sub
lret
pop
adc
add
push
push
add
add
inc
adcb
xor
and
jb
push
icebp
xor
idivb
lret
aam
sub
sarl
sub
stos
popf
adc
pusha
cltd
insl
aaa
pop
adc
jb
mov
push
jo
and
mov
xor
aam
add
insb
aaa
and
mov
and
sub
mov
sub
movsl
adc
ss
out
lods
sbb
loop
sbb
xor
into
push
in
xchg
fildl
or
push
repz
fidivl
push
or
ja
sub
je
sbb
icebp
lea
into
add
adc
fs
xchg
outsb
cmpsl
xorb
sub
add
xor
stos
or
inc
cli
bound
mov
mov
ficompl
jmp
push
adc
jo
ret
into
cld
inc
mov
mov
sub
stos
xchg
mov
ja
add
arpl
xor
stc
mov
test
mov
enter
es
mov
lcall
popa
push
sbb
adc
xchg
add
pusha
loopne
lret
out
inc
out
jbe
cmp
ret
rolb
lcall
inc
mov
jecxz
fidivrs
hlt
add
lcall
or
pop
pop
or
jne
out
int3
jae,pn
add
cmovl
repnz
mov
add
inc
clc
jle
add
add
push
jns
push
stc
jle
stos
clc
cwtl
adc
adc
xlat
dec
subl
pop
loop
insb
call
pop
mov
aaa
test
fadds
sbb
inc
adc
ss
sahf
shl
or
std
test
xchg
push
je
mov
addb
sbb
push
pop
stc
or
stos
inc
fcomps
test
ds
adc
adc
jne
cld
add
jo
adc
mov
inc
adc
das
insl
xor
mov
cmp
sub
xchg
mov
loop
adc
cmp
rorb
mov
mov
cltd
jl
clc
sub
adc
mov
out
scas
add
dec
ret
in
ds
js
add
xchg
mov
jp
movsb
cld
push
add
fcoml
pusha
add
das
mov
and
pop
xor
nop
pop
rcr
sarl
dec
lcall
jmp
adc
xchg
mov
push
add
xchg
add
sbbb
aaa
test
icebp
jp
fisttpl
lock
adc
popa
adc
push
rolb
ds
sti
dec
push
cmp
add
mov
and
inc
shrl
mov
jmp
inc
pop
sti
dec
jecxz
add
add
mov
decl
hlt
adc
out
push
sbb
movsb
pusha
add
lret
add
xchg
add
rorl
std
push
mov
daa
adc
arpl
xchg
mov
add
mov
mov
jbe
add
sti
movups
cltd
sarl
or
xchg
or
mov
push
dec
aad
rolb
jg
jle
and
xchg
and
or
sbb
dec
clc
fldt
inc
pop
adc
in
loop
sbb
inc
sbb
lcall
or
mov
inc
dec
pusha
xchg
test
enter
mov
stos
or
xor
push
mov
bound
jg
push
cld
bound
imul
adc
adc
mov
mov
adc
xorl
xchg
std
aaa
adc
aam
sub
rolb
inc
or
movsl
add
sub
mov
dec
or
inc
loopne
xchg
dec
xor
cmc
fisttps
addl
add
or
ja
push
call
sbb
push
mov
jmp
lock
filds
lods
or
jmp
andl
pop
repnz
call
test
pop
mov
adc
xor
add
adc
pop
or
add
jl
jae
pop
stos
movsb
ds
xchg
cmovge
dec
jmp
and
inc
xchg
jecxz
les
xor
mov
sub
lret
xchg
or
pop
adc
jl
std
pop
and
mov
movsl
movsl
mov
push
fxch
call
jecxz
xor
inc
movsl
fmuls
ss
pop
sahf
xor
mov
sub
mov
jp
shrb
call
outsl
jbe
mov
rolb
aaa
cld
outsl
cmpsb
and
jp
arpl
or
pop
bound
and
mov
jbe
mov
imul
loopne
xchg
call
add
add
adc
mov
add
icebp
adc
adc
mov
pop
mov
fwait
movsb
xor
pop
pop
addb
mov
mov
orb
adc
jl
and
jbe
aaa
nop
imul
pusha
pop
pusha
add
add
movsb
jb
or
adc
sub
rorb
push
nopl
mov
mov
jg
xor
cmp
xchg
xchg
push
or
jle
mov
popf
movsb
cmp
add
mov
xor
pusha
mov
and
mov
das
adc
xchg
pop
rclb
and
add
lret
loope
mov
hlt
test
lods
add
dec
mov
mov
into
push
jne
pop
fcomps
inc
sub
repz
adc
dec
nop
testl
data16
int3
jl
cmp
inc
adc
fisttpll
pop
cmp
push
or
loop
jl
addl
mov
clc
add
mov
add
lods
or
pushf
aam
clc
mov
or
inc
test
dec
fmuls
sar
add
sqrtps
mov
inc
jge
pop
lahf
testb
inc
push
push
fwait
fs
rclb
or
mov
jle
jbe
add
add
add
les
cmp
push
jmp
add
cmp
cmp
test
sar
test
adcl
jge
pop
xchg
inc
jo
add
pop
lock
cmpb
sub
cmp
sbbb
std
repnz
dec
addr16
ljmp
fmuls
inc
sbb
add
or
add
mov
loop
cld
scas
orb
xchg
or
dec
movsb
and
icebp
add
lcall
mov
add
imul
out
mov
pop
fs
lret
sti
xorb
mov
add
and
add
fwait
add
test
add
lock
movsb
pop
insb
dec
js
enter
push
mov
enter
loope
cmp
mov
add
mov
insb
or
mov
outsb
adc
jg
insb
add
lcall
or
or
test
add
adc
and
movsl
sbbl
inc
and
cmp
jl
pop
out
xor
fldenv
rcrb
push
xchg
add
add
lahf
dec
add
dec
mov
xor
and
stos
cmp
mov
test
and
xchg
or
mov
xor
cmpb
out
xchg
fiaddl
lcall
rcrb
xchg
sbb
lret
ds
inc
push
hlt
rclb
or
push
bound
into
jo
icebp
hlt
or
hlt
push
push
inc
clc
inc
dec
mov
inc
rolb
mov
xchg
addl
mov
add
xor
or
cmp
popf
cs
push
push
movsb
clc
lea
loopne
sbb
mov
rolb
inc
pop
scas
or
sbb
or
xchg
sbb
push
in
cs
ret
xchg
sbb
jg
and
add
js
and
jge
add
mov
je
xchg
fidivs
test
or
pop
movsb
stos
icebp
add
lret
cmpb
push
lcall
xchg
fnsave
lcall
cmp
out
movsb
fcomps
loopne
rolb
adc
sub
jle
sub
push
aas
mov
aas
pushl
clc
aas
mov
rcrb
addb
ljmp
push
add
and
cmp
push
loopne
outsb
or
mov
and
es
push
dec
mov
or
sbb
or
lret
adc
push
incb
fwait
pusha
sub
dec
cld
add
hlt
jp
xor
outsb
loope
movsl
fwait
and
xchg
testb
jge
inc
xor
loope
fwait
mov
cmpsl
movsl
pusha
pop
in
inc
outsl
lahf
dec
subb
fstpt
and
xchg
or
or
or
mov
loopne
out
push
pop
sahf
inc
or
push
popa
add
xchg
outsb
popa
push
and
cli
outsb
adc
cld
jle
add
mov
test
fsubrl
sbb
sub
mov
fadds
orb
and
mov
push
mov
testl
stos
sbbl
aad
ret
pop
xchg
adc
sub
cld
movsb
or
fildll
adc
and
and
lock
fwait
mov
dec
subb
xchg
outsb
add
add
scas
mov
inc
subl
add
mov
push
movsb
sbb
and
sbb
hlt
jg
daa
loopne
loopne
lock
flds
and
movsl
int3
cwtl
shlb
test
inc
pushl
push
inc
or
int
inc
xor
add
cmp
movsb
add
cmpsl
fidivrl
cltd
adc
cltd
pusha
pop
in
nop
xchg
hlt
sbb
in
int
bound
inc
inc
xchg
add
push
fs
push
cmp
inc
xor
aam
sub
add
ret
sbb
pop
push
add
mov
ljmp
fcompl
xor
cmpsl
loopne
mov
push
or
cmp
push
pop
dec
ljmp
popa
mov
hlt
xchg
or
fwait
sub
dec
cwtl
and
fimuls
sub
or
mov
andb
inc
mov
sahf
call
test
stos
or
pop
mov
add
cmpb
lret
clc
insl
loopne
add
aaa
push
clc
lods
mov
les
or
pop
mov
add
loop
adc
addl
and
insl
or
or
adc
jl
jg
rolb
and
push
mov
ret
js
cmc
and
mov
pop
hlt
cmc
adcl
and
lds
scas
pop
xchg
js
push
add
aam
sti
adcl
xorb
jb
lods
push
cld
xchg
shll
mov
lret
lods
and
ret
loop
cmc
and
dec
loopne
and
mov
or
adc
sbb
xor
or
sub
mov
xor
sahf
sbb
je
cltd
xor
aam
loopne
xchg
fadds
call
pop
cmc
inc
add
adc
inc
or
test
test
mov
test
mov
jecxz
shll
sbb
ds
sub
xor
push
mov
in
loopne
std
aam
or
subb
cmc
fwait
lret
add
loope
add
jg
aam
fdiv
adc
jg
add
es
popa
bound
xchg
std
les
js
xchg
mov
cmp
std
outsb
cmp
xchg
gs
and
inc
xor
sbb
fnstcw
fists
and
bound
add
test
sbb
pop
inc
inc
fsubrs
sub
orb
repnz
cli
movsl
test
jle
mov
xor
lock
pop
pusha
insb
adc
cld
ja
adc
nop
or
daa
cmpb
xor
fs
aaa
mov
sbb
or
add
js
and
outsb
adc
icebp
or
mov
sbb
clc
shlb
sub
or
call
dec
lret
xchg
adc
lret
inc
or
inc
or
or
lcall
dec
xorb
add
xor
shlb
mov
xchg
push
jbe
xor
movsb
mov
sbb
enter
and
cmp
push
adc
mov
rclb
add
je
js
lcall
das
xchg
cltd
xchg
fadds
shrl
mov
sbb
xorl
sbb
add
rolb
mov
test
lods
fcmovbe
or
mov
aam
movsb
stos
sbb
or
inc
adc
lds
push
mov
pop
adc
loopne
ja
or
mov
mov
fimuls
jp
fildll
sub
lret
lahf
adc
inc
ljmp
jle
insl
js
xorl
pshufw
mov
mov
mov
mov
subb
cmc
addb
push
in
in
cmc
cld
sub
or
mov
adc
mov
mov
lret
fistpll
jp
xchg
push
or
aaa
or
push
mov
adc
fdivp
mov
add
xchg
push
decb
push
or
lds
sbb
push
jl
pop
cmp
outsl
mov
test
add
sarb
mov
popf
cli
and
add
dec
pusha
add
xchg
rcrw
aam
jp
inc
rcll
scas
adc
mov
test
xor
mov
sbb
and
mov
loopne
fs
push
sub
sbb
push
enter
push
lds
mov
sbb
xchg
xchg
lock
dec
idivl
push
rcll
testb
orb
pop
in
out
mov
cld
fcomps
loope
jl
sbb
pop
sub
addb
adc
add
les
sbb
ljmp
xor
and
mov
movsb
inc
ljmp
rclb
inc
jmp
mov
shll
inc
loop
mov
jecxz
arpl
sbb
or
sbb
xor
jg
movsl
cmpl
add
mov
jmp
and
lock
subb
sahf
sarb
std
loopne
sbb
adc
xor
js
pop
push
jae
adc
add
ss
add
jbe
mov
jle
sub
outsb
daa
push
inc
and
lock
and
jg
or
inc
mov
or
insb
fcmovnu
adc
cmp
add
aaa
push
push
xor
pop
dec
fisttpl
or
jl
jo
loopne
or
mov
or
xor
ret
rcr
inc
or
out
jle
mov
fwait
add
push
sbb
rolb
shlb
enter
mov
data16
sbb
ljmp
add
loope
xchg
xor
mov
mov
jo
stos
pop
push
adc
jbe
je
ljmp
mov
lcall
or
jae
out
xor
add
xchg
enter
mov
ja
xchg
stc
mov
jle
pushl
sub
add
aad
push
add
xor
test
push
sbb
push
xor
push
in
loopne
icebp
mov
mov
jne
test
jle
add
mov
enter
mov
rcr
add
mov
pusha
jnp
repnz
sbb
add
add
or
test
test
lods
std
ja
cli
inc
and
or
xor
adc
test
aaa
or
and
xlat
mov
adc
daa
sub
test
subb
or
adc
xor
fisubrs
aaa
sbb
out
add
cmpsl
jecxz
cld
mov
mov
pusha
sub
add
add
add
inc
ret
mov
or
mov
mov
add
dec
test
sub
sti
test
mov
jg
lock
mov
add
sbb
cmc
mov
push
xor
add
orb
mov
adc
add
call
call
mov
mov
xchg
jno
jns
cmp
filds
and
cld
outsl
jg
call
enter
jo
jmp
out
mov
out
add
call
lcall
fistpll
pusha
sbb
add
mov
mov
mov
pop
aam
xor
sbbb
clc
or
jbe
adc
dec
adc
mov
mov
adc
cmp
test
cmp
loop
cmpl
clc
add
dec
sbb
ja
in
cmc
add
push
enter
loopne
or
dec
imul
sbb
dec
mov
and
ljmp
mov
and
pop
jp
jle
push
push
jp
dec
clc
clc
push
and
pop
sub
pushl
add
test
and
sub
popa
pop
adc
add
mov
add
int
and
add
adc
adc
cld
jnp
adc
addr16
push
and
sbb
adc
ds
cld
xchg
lds
mov
mov
add
adc
jmp
mov
outsl
cmp
or
xor
lahf
add
jp
xchg
jp
inc
clc
fldt
js
dec
mov
sub
js
pushl
or
mov
cld
or
or
test
jle
inc
jle
inc
lods
clc
jp
es
aam
mov
aas
pop
adc
or
js
mov
pusha
or
dec
inc
scas
or
imul
testb
push
pop
and
pop
and
stos
inc
or
add
dec
adc
add
pushf
clc
mov
xchg
outsl
sti
cwtl
sarb
shld
outsb
mov
fwait
jmp
call
push
out
int
pusha
jb
scas
pusha
sbb
sbb
dec
fs
cmp
push
inc
stos
fimull
out
add
and
fisttpl
inc
lods
sub
out
fsubrl
sbb
and
insl
sub
and
aas
cltd
add
sub
cltd
repnz
movsb
andb
push
cmp
aaa
test
loope
loopne
xchg
mov
enter
inc
aam
sbb
hlt
adcb
scas
xorb
xlat
ret
aam
std
inc
or
inc
bound
stos
add
rorl
dec
push
pop
es
xchg
push
inc
xchg
or
je
enter
add
cld
add
push
xchg
or
cmp
push
cmp
dec
stos
mov
inc
incl
movsl
sti
addl
loope
sbb
mov
xchg
or
add
cs
xor
fidivrs
xor
sbb
mov
insb
arpl
add
mov
js
gs
gs
and
les
xchg
push
sahf
and
les
scas
mov
push
sub
xchg
jbe
pop
push
js
pop
xchg
or
shrl
fisttpll
aaa
mov
or
inc
sub
ds
xchg
hlt
pushl
nop
sbbb
into
pop
jp
add
add
mov
pop
test
dec
mov
sbbl
inc
add
jo
aaa
cld
or
cmc
mov
es
stos
incl
clc
out
mov
inc
inc
add
ljmp
xor
mov
mov
lock
cwtl
mov
push
cmc
sbb
nop
inc
xor
xor
sti
sar
mov
inc
add
or
xorb
or
loop
jg
add
jnp
and
ja
fldt
jae
into
and
jg
pop
addb
outsl
dec
or
mov
push
ret
in
data16
lahf
adc
xchg
pop
fadds
addr16
notl
rolb
imul
push
roll
adc
xor
notb
push
adc
shl
adcb
pop
push
outsl
inc
add
mov
lock
mov
xor
adc
stos
rcll
outsb
pop
bound
adc
adc
addb
out
and
fwait
xlat
in
out
addl
test
aad
push
fidivrs
xor
xchg
clc
fldl
mov
fadds
sub
xor
inc
cli
or
mov
lock
mov
adc
and
ljmp
jb
add
and
and
and
and
sub
cmp
repz
add
fdivr
cmp
jbe
inc
adc
loopne
test
dec
cld
enter
cli
mov
aam
cmp
jb
pushf
add
loope
lret
sub
mov
in
sub
mov
xor
mov
xor
pusha
sbb
clc
add
add
mov
std
decl
stos
stos
scas
stos
test
and
and
addr16
icebp
cmp
les
pusha
cmp
dec
mov
test
adc
pop
xchg
dec
sub
das
clc
mov
clc
loopne
cmp
mov
add
or
or
pop
mov
xchg
frstor
inc
test
mov
and
adcb
cmc
dec
sbb
jmp
add
cmp
rcrb
push
cmp
cld
mov
mov
xor
bound
loop
or
pop
adc
add
lcall
sbb
pusha
pop
into
pusha
jnp
xor
push
and
test
xor
add
sub
shrl
add
sbb
lods
xorb
test
int
aas
popf
in
rorb
xor
scas
pop
and
clc
cmp
and
loopne
enter
notb
pusha
sub
lret
cmp
lock
mov
add
std
mov
jecxz
lcall
dec
ret
lea
push
ss
lahf
fmull
fs
pusha
addl
bound
loopne
mov
test
and
stos
lods
and
xor
andb
add
xchg
and
inc
imul
jmp
sbb
add
pop
lcall
pop
and
xor
arpl
frstor
mov
test
loopne
mov
ret
mov
or
push
loopne
popa
shll
or
out
mov
push
and
mov
orb
fdivr
adc
jl
cmc
push
fistl
hlt
add
test
sarb
inc
popa
sub
sbb
adc
add
lea
and
or
lock
jle
fdivl
add
adc
xor
mov
in
xlat
and
push
add
xor
repz
imul
call
cli
xchg
out
mov
loop
loop
pusha
adc
mov
jo
aam
push
pop
pop
ja
test
jae
cmpsb
xchg
cmp
push
adc
stos
and
popl
add
xchg
adc
cmpsb
mov
push
ja
mov
lret
dec
mov
pop
fcmovnbe
mov
push
lret
shl
out
aad
jmp
out
xchg
mov
push
cmp
xor
int3
sbb
pshufw
mov
div
push
test
in
push
adc
das
mov
insl
daa
movsl
daa
insl
pop
pop
push
lock
cmpsb
cmp
dec
add
mov
sub
aaa
pop
das
jne
sub
mov
in
outsb
xlat
push
sub
push
nop
mov
xchg
fisubrl
sub
jecxz
jmp
sti
negb
incl
std
or
inc
cmpsb
pop
sbb
stos
ret
push
push
add
sbb
out
xor
in
and
jecxz
imul
cmp
push
scas
mov
cwtl
or
jb
outsl
lods
jge
add
std
lock
sub
mov
pop
sbb
add
push
je
repnz
inc
push
mov
aas
add
jo
xor
fnstcw
stos
xorl
push
cmp
arpl
jg
or
ret
cmp
mov
adc
iret
mov
repnz
inc
loope
pop
add
mov
cmp
and
sbb
sbb
and
lods
movd
ret
pop
pushl
mov
loop
push
push
icebp
add
push
in
and
mov
or
push
jg
adc
jge
outsb
dec
jne
std
stos
jbe
push
cmc
add
push
inc
inc
in
push
jne
push
jno
fldt
out
add
fs
in
rcll
xchg
fwait
jo
push
out
push
push
push
js
fdivs
aam
cmc
adc
addr16
fldl2e
sbb
jbe
pop
xchg
stos
add
cmp
sti
sbb
adc
insb
xchg
or
xor
stos
adc
pop
fdivp
out
jecxz
shrl
mov
sub
loop
rorl
mov
ss
and
mov
mov
mov
dec
scas
jo
mov
inc
rcrl
mov
push
dec
or
popa
mov
jo
pop
add
adc
ud0
push
pop
mov
pop
out
push
jns
lock
or
in
jne
int
leave
loope
jbe
add
ja
xor
sti
xor
addr16
ljmp
or
adc
add
mov
sbb
fists
fiadds
scas
sbb
je
outsl
sbb
sbb
jae
xchg
or
pop
stc
xorb
mov
orps
stc
push
imul
push
imul
cmpsl
aas
cmp
jno
add
cmp
js
loope
out
sbb
mov
jno
arpl
sti
stos
jnp
xchg
adc
sbbl
fwait
xchg
stos
jp
or
jb
inc
fwait
cmpsb
mov
icebp
fiaddl
jo
ljmp
rcll
pop
cmpl
stc
adc
mov
lods
sbbl
jo
daa
push
mov
fsubrs
mov
cld
and
fidivs
jno
adc
adc
addr16
jo
inc
jne
stos
stos
popa
jo
popa
icebp
movsl
loopne
sub
xor
rclb
sub
or
mov
addr16
loopne
cli
std
andb
das
mov
adc
inc
lcall
rcl
icebp
mov
jo
jg
ret
repnz
push
push
xchg
lea
mov
setp
adc
clc
cli
arpl
repz
ds
xor
iret
add
lret
add
insl
call
ss
imul
lret
jns
sbb
jne
das
inc
imul
add
mov
add
stos
test
push
out
add
popf
mov
cltd
sbb
xchg
push
xchg
add
sti
les
push
imul
pop
sbb
add
sahf
stos
push
adc
add
sub
push
sbb
ljmp
lods
jge
add
stos
es
add
in
cld
stos
jmp
sbb
loope
inc
inc
add
mov
adcb
enter
fiaddl
data16
push
data16
jle
lcall
mov
xchg
xchg
sbb
int
mov
stos
pop
cmpsb
jns
push
pop
sbb
insl
imul
jno
lcall
popf
cmpsb
jns
cmpsb
cltd
xchg
xchg
lods
test
movsl
mov
jns
cmpsb
jns
leave
vpaddusw
aad
in
jmp
in
std
stc
cmc
icebp
fcmovbe
xor
or
add
dec
rcrl
adc
dec
shll
and
subl
inc
sahf
imul
imul
sahf
cmpsb
imul
cmpsb
imul
movsl
mov
cmpsb
imul
cmpsb
imul
cmpsb
imul
int
icebp
or
add
mov
sbb
shll
xor
int3
dec
lahf
mov
mov
je
inc
xor
sub
stos
shl
push
mov
push
xor
sbb
mov
dec
lea
xchg
lcall
push
lods
add
movsb
sbb
outsl
jge
add
jne
enter
int
lcall
xchg
xchg
xor
shll
repz
mov
add
or
sbb
xor
rcrl
add
sbb
aad
in
lcall
add
stc
or
lods
insl
or
push
icebp
add
cmpsb
imul
ss
imul
push
and
fwait
and
test
je
jo
push
jl
sbb
pusha
cmpsl
movsb
repz
jae
sbb
push
insl
cmpsl
loopne
dec
imul
imul
test
movsb
add
nop
movsl
mov
hlt
lock
rcll
pushf
lock
add
dec
lds
aad
cmpsl
in
cmpsl
cwtl
pusha
cmpl
sbb
addl
movsl
mov
dec
shll
xor
or
shlb
add
mov
or
inc
mov
ficoms
shll
mov
mov
sahf
add
dec
aas
cmp
ret
cs
sbb
cmp
ljmp
dec
imul
add
push
add
or
inc
stos
ljmp
push
adc
push
sbb
and
mov
cmp
das
sbb
dec
test
pop
inc
dec
fwait
inc
inc
pop
decl
xor
lods
sbb
jl
shlb
mov
sbb
popa
in
shlb
pop
fdivl
mov
lock
xchg
stos
and
add
test
aam
mov
jo
mov
pop
sbb
mov
xor
dec
add
add
enter
je
mov
ret
divl
adc
scas
adc
aam
sbbb
addl
pop
mull
mov
xchg
push
adc
xchg
aaa
or
pop
in
adc
rorl
rorb
add
icebp
cs
mov
std
das
inc
sti
loope
xchg
stc
or
divb
inc
push
or
mov
popl
mov
adc
pop
push
jo
and
jp
and
loop
icebp
or
jo
lcall
arpl
sub
pop
cli
sbb
or
sbb
faddl
mov
push
mov
fildl
mov
adc
popa
add
lock
ljmp
loope
shlb
xchg
add
adc
push
jg
adc
rorb
pushl
sbb
mov
lock
fbstp
sar
mov
and
cmp
roll
repnz
and
add
movsl
sbb
push
or
push
or
xor
scas
xchg
testb
insl
shll
add
push
lock
or
push
fisubs
clc
outsl
adc
cmp
fimull
ficompl
add
je
xor
ljmp
dec
ss
add
add
adc
xor
mov
mov
xchg
adc
adc
pop
ljmp
mov
iret
insb
push
xchg
add
mov
bound
test
mov
jae
hlt
adcl
icebp
cld
or
xchg
push
fcomps
cmc
enter
and
out
push
adc
sbb
add
in
or
pushl
cld
sbb
arpl
and
add
mov
or
les
push
add
adc
adc
test
push
mov
fbstp
add
repz
je
xchg
movsb
sub
cld
push
push
ret
pop
clc
out
icebp
adc
xchg
outsb
clc
aaa
fs
pop
mov
adc
call
lock
bound
ja
cmc
rolb
add
lahf
jl
aaa
ret
fst
add
add
leave
sbb
add
push
mov
js
or
and
sbb
or
aaa
fadds
adc
push
add
sub
dec
add
lock
mov
xor
dec
xchg
add
push
nop
push
push
push
mov
mov
pop
jg
add
sub
jno
add
pusha
std
pop
sti
jg
sub
repz
add
jo
adc
add
leave
inc
mov
aam
in
shlb
inc
push
push
cmc
aam
or
add
xor
in
aam
push
sub
add
mov
lcall
mov
imul
or
rcll
add
bound
push
mov
bnd
shl
mov
ds
lods
icebp
es
adc
sbb
sub
add
xchg
ss
or
fwait
mov
sbb
push
or
push
hlt
loopne
jnp
inc
inc
add
shlb
adc
xchg
and
jg
fcomip
sbb
xchg
loope
into
sub
and
in
fcompl
aad
push
xchg
pop
jmp
jmp
pop
shlb
es
xor
push
fnsave
add
mov
pusha
or
repz
or
or
or
pop
xchg
sub
and
fildll
mov
nop
adc
inc
xchg
mov
mov
xorl
movsl
mov
lock
xor
and
sbb
inc
add
mov
and
jl
fsubl
and
ret
in
xchg
add
sub
mov
sbb
cmp
pop
push
push
add
add
ficompl
cs
hlt
xchg
inc
add
insl
sti
adc
aaa
lds
enter
mov
or
xorb
jb
add
or
adc
les
stc
test
lock
pop
out
sbb
push
outsl
add
push
push
add
inc
xor
push
fistpll
xor
xor
cltd
sbb
push
xchg
adc
ljmp
fsubl
rolb
mov
or
ret
ss
cmc
int
mov
outsb
adc
push
hlt
mov
push
mov
sbb
or
les
insb
add
mov
data16
jl
enter
sbb
inc
sbb
leave
sbb
std
outsl
pushf
icebp
lds
rcrb
push
push
add
adc
pop
mov
jo
addl
push
sub
mov
sahf
xor
push
das
xor
xor
imul
pusha
in
shlb
adcb
add
sbb
xchg
adcb
and
xchg
mov
js
mov
or
icebp
push
idiv
aaa
fcoms
iret
push
xchg
std
iret
pop
xchg
iret
pop
adc
iret
cld
xchg
pop
pop
mov
or
add
or
dec
push
or
inc
sbb
mov
push
arpl
iret
push
xchg
iret
push
add
roll
fnstenv
pop
xchg
repz
dec
pop
xchg
push
iret
pop
xchg
push
jmp
lahf
sbbb
mov
push
xchg
nop
mov
xchg
cmpb
mov
test
dec
rorb
inc
jp
scas
mov
dec
inc
adc
xchg
int3
add
aaa
sub
or
repnz
dec
pop
mov
pop
incl
aad
hlt
pop
add
orl
or
dec
push
or
adc
je
mov
aaa
sbb
rorl
add
movsl
jp
xor
fadds
push
xor
cld
jo
incb
or
xchg
push
std
xchg
sub
andl
addb
addl
or
hlt
sbb
adc
scas
push
ljmp
mov
rcll
andl
and
inc
andl
xchg
cmp
mov
inc
sbb
sub
sahf
sub
mov
ds
sbb
addb
outsb
adc
cmc
xchg
icebp
sub
std
pushl
popa
or
or
out
sti
mov
or
inc
xchg
mov
cmpsb
mov
inc
add
sti
popl
mov
mov
fisttps
mov
jg
scas
ret
punpcklbw
rcrl
cld
mov
adc
daa
repz
or
ja
adc
mov
and
testb
rolb
mov
mov
pop
and
dec
daa
incl
pusha
subb
add
daa
jp
inc
mov
pop
xor
sbb
and
mov
or
subl
and
rol
ret
fisttps
inc
mov
neg
call
sarb
ds
or
cmp
and
and
or
or
jecxz
xorb
pop
mov
push
dec
xor
cld
arpl
inc
inc
add
add
dec
rorb
mov
push
icebp
rcrb
adc
ljmp
pop
or
add
cmpsb
xchg
lcall
out
cmpb
add
cs
adc
lret
adc
push
mov
in
pusha
add
adc
sub
mov
ja
out
dec
or
in
imull
pop
sub
adc
and
add
adc
jnp
cs
dec
xor
shll
pushf
adc
fists
imul
mov
cmpsl
lcall
or
fbstp
pusha
adc
or
andl
addl
mov
ljmp
test
lods
pop
ds
pop
mov
insb
int
stos
rcll
loopne
lock
test
cmpsl
pop
xlat
cmpsb
lock
push
jo
out
movsl
inc
adc
adc
mov
push
pop
jmp
mov
push
mov
cmp
mov
fidivs
into
or
adc
add
mov
lods
xchg
std
stos
pop
pop
in
test
pop
mov
call
int
clc
pop
mov
add
test
das
pop
movsl
mov
loopne
pop
mov
xor
inc
frstor
shrb
mov
mov
psrad
rcr
cmp
movsl
jp
sub
test
outsl
lock
aad
xchg
cmc
bound
test
add
sahf
xchg
adc
ds
xor
sahf
inc
es
rolb
aam
jecxz
sbb
test
xor
stos
inc
rsqrtps
cltd
sbb
add
mov
xor
jo
popf
cmc
jbe
or
cli
adc
push
xchg
out
cltd
mov
mov
mov
or
mov
sub
push
sbb
repz
andl
sbb
dec
std
add
lea
push
pop
sub
push
xor
and
out
loopne
mov
sbb
mov
jmp
mov
es
cmp
add
mov
or
cmp
pop
xor
sbb
stos
paddusw
scas
out
dec
icebp
mov
cli
pop
jo
stos
pop
inc
aaa
xor
ds
in
push
jns
nop
gs
fbstp
and
mov
mov
mov
pop
rorb
mov
fwait
jecxz
jmp
pop
mov
icebp
in
outsl
fidivrs
cli
lea
outsb
sti
test
cs
pop
xor
and
cli
icebp
add
push
xor
push
mov
vpshuflw
xor
mov
mov
mov
push
mov
lahf
sbb
pop
call
out
ror
daa
lock
jge
pop
arpl
shrl
scas
sbb
lock
jl
mov
lahf
push
sti
addb
jnp
ret
lret
sahf
sbb
rorb
stos
iret
add
ror
mov
dec
lock
sub
add
ret
les
pop
jle
pop
sbb
pop
clc
addb
das
lahf
push
mov
stos
idiv
shl
xchg
addb
or
mulb
pop
mov
pusha
pop
jae
popa
jae
xchg
mov
push
ficompl
dec
loopne,pt
jae
or
mov
or
add
gs
jp
ret
stos
xor
xchg
or
mov
jno
mov
test
pop
mov
adc
pop
mov
xchg
lcall
pushf
mov
popf
xchg
lahf
xchg
mov
nop
xchg
sbb
repnz
mov
addl
fwait
or
ds
mull
insl
xchg
adcl
negb
mov
inc
jmp
add
lcall
push
adcl
adc
add
pop
rolb
lahf
pop
sti
jo
mov
mov
mov
mov
ret
int
sahf
shl
mov
add
pushf
inc
mov
insb
ja
nop
xchg
xchg
inc
inc
jo
cmpsl
xchg
sahf
mov
mov
mov
pop
xchg
mov
add
push
xchg
cmp
mov
lahf
xor
es
xchg
mulb
mov
add
push
shlb
orb
mov
cli
push
bound
add
or
jbe
pop
mov
mov
cwtl
fisttps
ss
mov
mov
or
push
fadds
mov
add
lahf
sub
mov
adc
or
push
add
pop
adc
inc
push
mov
and
movsb
movsl
popf
mov
pop
fs
insb
aaa
hlt
mov
stos
xor
mov
test
adc
inc
loopne
orl
mov
lcall
xor
inc
lret
or
add
icebp
add
pop
sbb
aaa
js
add
sub
xchg
call
jbe
adc
adc
shlb
push
sbb
pop
inc
push
fwait
jge
and
mov
dec
pop
add
mov
nop
loopne
jns
int3
test
push
pop
mov
push
push
sbb
mov
pop
add
loop
push
adc
lret
rolb
orl
movsb
movsb
lahf
jae
notb
into
fwait
add
xchg
fcomp
add
je
push
mov
pusha
pusha
add
arpl
xor
and
orb
subl
add
sub
add
cmpsb
jp
add
andl
xor
pushf
pop
adc
mov
inc
push
mull
sbb
and
incl
ds
rol
add
or
mov
add
fwait
into
jbe
push
pop
mov
mov
or
pushf
xchg
xchg
jg
cmp
xorb
orl
push
test
subb
mov
loop
loop
push
cld
andb
test
xchg
mov
mov
orl
loope
or
pop
cld
nop
inc
orl
mov
jnp
insl
xor
lock
test
sahf
mull
pop
test
cmpb
test
add
sbbb
adcl
sub
test
mov
decl
sahf
xchg
test
sbb
xchg
insb
xorb
pushf
mov
js
pop
cwtl
jb
sbb
lret
icebp
pop
fs
inc
or
lds
push
or
push
sbbl
mov
add
mov
xor
mov
pop
lret
rcll
adc
cmp
pop
sbb
push
sbb
push
inc
sbb
add
dec
fsub
ljmp
call
movsb
and
imull
movsb
cmpsl
push
mov
mov
add
sbb
stos
add
push
mov
inc
inc
addl
ss
sub
inc
xchg
inc
or
lock
pop
push
sbb
cmp
sub
mov
mov
jg
ljmp
inc
push
fisttpll
xchg
test
mov
mov
and
int
and
cmpsb
popf
add
call
add
add
mov
inc
mov
sbbl
cmp
jbe
jg
inc
push
xlat
add
sahf
lcall
mov
lret
xchg
cwtl
add
or
enter
jb
push
sub
ret
jle
sub
cwtl
xchg
cltd
loope
orl
mov
xchg
hlt
and
jo
mov
loope
xor
or
out
jbe
xchg
cmpsb
cmp
xor
shl
push
adc
xchg
mov
ret
dec
and
dec
in
xor
add
add
xor
and
in
xchg
test
jl
xor
mov
add
out
adc
jge
sbb
add
int3
and
jg
mov
mov
inc
dec
add
add
sbb
rol
bound
and
sub
scas
pop
xchg
pop
popa
or
or
addl
add
lock
ja
mov
jge
shrb
ret
loopne
shlb
push
mov
lock
sbb
dec
mov
loope
push
popf
sahf
pop
lock
incl
movsl
add
xor
push
orb
les
insb
or
xchg
mov
add
lcall
das
mov
cmpsb
mov
je
xchg
test
clc
jmp
sub
push
jecxz
stos
inc
mov
and
lcall
adc
test
add
andb
les
jle
xor
inc
add
ret
out
inc
inc
push
hlt
pop
mov
mov
inc
mov
mov
movl
icebp
loop
ret
mov
add
pop
push
pop
in
adc
test
loopne
lret
mov
cmp
ja
adc
add
repnz
add
xchg
push
inc
jg
mov
fcompl
mov
or
cli
xor
arpl
xchg
and
enter
daa
adc
xchg
shrb
and
pop
shl
popl
ret
add
inc
shll
adc
mov
shl
add
movsl
mov
xor
repnz
xor
add
inc
jmp
mul
pop
mov
inc
pop
dec
dec
icebp
mov
mov
jns
loope
call
dec
popa
mov
jecxz
pop
mov
ret
sub
add
pop
xchg
inc
dec
add
xchg
add
or
movq
sbb
or
adc
in
pop
or
mov
lcall
mov
and
hlt
lahf
lcall
mov
fcmove
mov
js
push
cli
aas
test
inc
pop
pop
psllw
or
lahf
fildll
jno
mov
lock
lock
mov
rclb
cmp
ljmp
lea
xchg
sbb
leave
icebp
pop
mov
push
or
fbld
loopne
cmp
xorb
lret
arpl
xchg
xchg
and
adc
xor
push
or
xor
std
push
add
andb
add
arpl
adcl
and
pop
fdivs
sub
andl
dec
mov
dec
xchg
xchg
xor
js
mov
mov
cs
add
push
push
jnp
add
xchg
popf
dec
das
incl
fcoml
mov
daa
jecxz
mov
lock
pushl
xorl
mov
pusha
dec
and
pusha
in
lcall
add
adcl
pop
cli
outsl
clc
add
mov
rolb
jo
xor
push
lock
rclb
repnz
xchg
roll
adc
stos
pop
movsl
pop
jl
pop
mov
lcall
addr16
dec
mov
insb
mov
je
xor
adc
in
test
add
jp
cwtl
pop
sub
push
add
push
push
add
lcall
add
and
xor
adc
pop
pop
pop
icebp
ret
and
sub
adc
mov
insb
movsb
add
mov
cli
mov
orl
add
or
jl
jmp
mov
pop
mov
and
shll
icebp
xchg
mov
xor
or
push
mov
popf
jo
sbb
sbb
add
mov
data16
ljmp
adc
jl
mov
or
inc
sub
ss
scas
clc
scas
adc
adc
sub
cmp
test
nop
xchg
add
mov
xor
cmpsb
lock
ja
out
xor
mov
loopne
inc
rclb
pop
jmp
sarb
xor
loope
fidivs
setae
xchg
push
adc
or
ljmp
arpl
push
stos
add
cli
add
adcl
add
jg
add
jl
ja
push
jg
and
add
push
lcall
jno
or
push
fbld
lock
push
sbb
shll
insl
xchg
loop
addr16
cmp
mov
jb
push
push
pop
test
test
add
jns
lea
and
and
add
sahf
mov
lea
mov
repnz
xchg
adcb
dec
insl
lds
aam
sub
sub
fsubs
xor
nop
andl
or
nop
sbb
inc
bound
add
xor
sti
stos
test
xchg
aas
add
adc
lahf
movsb
fidivl
mov
sbb
xchg
jle
dec
loopne
sarb
jl
mov
mov
movb
push
cmp
jmp
cmpsb
inc
push
add
sub
notb
inc
add
aam
jl
pop
outsl
dec
bound
add
std
jg
add
mov
lahf
jbe
lcall
cmp
xchg
addb
pop
hlt
bnd
push
add
jge
push
mov
out
lret
adc
and
xchg
mov
fs
and
jl
ret
fidivl
adc
mov
or
inc
shr
inc
push
in
or
pop
and
cmp
sbb
xor
pop
push
adc
push
popa
and
jle
xchg
sub
sahf
jo
add
and
das
or
shlb
movups
and
nop
or
mov
jne
add
cmp
add
fcomp
mov
cmp
hlt
mov
dec
push
adc
xchg
nop
divb
push
clc
pop
add
and
pushf
cwtl
xchg
adc
xchg
xchg
xchg
xchg
movsl
add
add
mov
cltd
xchg
and
pop
sbbb
movsl
mov
mov
add
mov
xor
ss
mov
mov
pop
jb
mov
xchg
test
push
push
adc
sarl
adc
mov
or
mov
adc
loopne
xchg
nop
push
shl
in
xor
mov
add
mov
xorl
testb
pusha
add
cwtl
sbb
pop
incl
add
cmpsb
popf
addb
mov
add
add
test
sub
fldcw
mov
jg
xor
xchg
push
pushf
mov
mov
add
inc
or
sbbb
popf
inc
lcall
test
adcl
sbbb
clc
orb
or
or
or
adc
mov
mov
fcompl
xor
mov
adc
cli
subb
mov
mov
xorl
aam
push
fdivrp
mov
xor
aas
clc
mov
xor
fadds
movb
sub
and
mov
or
mov
xchg
push
test
push
fwait
js
and
clc
insl
shlb
enter
add
clc
rclb
test
sbb
inc
stos
inc
or
mov
cmpb
inc
and
jmp
add
mov
add
addl
jecxz
xor
cmc
rcrb
int3
inc
int3
orb
inc
mov
hlt
loope
int
je
mov
int3
inc
add
sub
ret
out
push
xor
loop
add
inc
xor
or
dec
jo
pop
test
fcoml
fdivrl
sarb
xchg
lds
lcall
adc
add
mov
int3
inc
cmpsb
clc
dec
loope
test
cmp
les
dec
or
call
push
rclb
mov
into
outsb
fucomip
xor
sbb
adc
mov
inc
or
std
mov
sub
push
sub
fmul
adc
add
outsl
jp
sbb
test
push
pop
ret
pop
mov
push
outsl
adc
inc
or
inc
xor
rol
mov
or
orb
lahf
ret
mov
aad
add
push
mov
movsb
xchg
pushf
add
dec
dec
xchg
xchg
hlt
mov
shll
mov
add
xor
add
stos
unpckhps
flds
enter
mov
pop
aam
add
push
pop
cmp
cwtl
addb
mov
jns
popa
fdivs
lcall
xor
inc
rcrb
mov
mov
jp
sbb
xchg
adc
ja
arpl
or
add
int3
loopne
mov
inc
inc
rolb
dec
push
loope
add
or
lock
mov
mov
add
loop
mov
adc
or
ja
or
mov
add
push
dec
add
pop
insb
xchg
jl
enter
or
stos
push
or
pop
dec
aaa
add
loopne
test
rorl
cmpsb
loopne
xchg
sub
dec
test
aam
mov
stos
mov
scas
out
xchg
sbb
xchg
sub
data16
data16
aaa
or
xor
add
sbb
and
scas
out
add
push
mov
sti
xor
scas
adc
xchg
out
fadds
in
lahf
push
andl
cmpsb
add
add
mov
mov
xchg
and
jg
add
and
and
loope
inc
xor
ljmp
inc
dec
mov
loopne
mov
jns
stos
int3
pusha
aam
adc
push
mov
inc
sub
mov
push
mov
and
dec
xchg
mov
andb
xor
pop
call
cmpsb
or
add
mov
add
push
and
pop
andb
adc
js
and
andb
pusha
sub
fnsave
adc
add
and
xor
and
sbb
mov
unpcklps
fildll
movsb
mov
inc
bound
cmpsb
test
mov
ret
fs
mov
mov
fisubl
jo
lcall
cmp
jae
push
pop
add
mov
add
test
movsl
repnz
adc
sub
sbb
jbe
add
nop
and
test
mov
and
bound
sahf
and
cli
add
mov
xchg
inc
mov
loope
rcll
add
nop
and
mov
cmp
test
xchg
xchg
andb
jecxz
test
nop
call
lcall
into
js
je
xchg
adc
mull
test
call
xchg
dec
dec
push
xorl
inc
je
and
int3
fwait
inc
sbb
dec
and
aam
push
divl
fildll
push
adc
lods
repz
mov
add
inc
sub
call
and
mov
adc
incl
test
add
mulb
push
mov
push
xor
mov
lock
pop
pop
movsb
xchg
jmp
stos
test
push
sti
jnp
js
dec
lds
add
add
sub
mov
mov
and
mov
outsl
decl
mov
xlat
pop
loope
push
test
inc
mov
or
dec
dec
dec
inc
testl
ja
jp
push
aas
cmp
roll
insl
inc
sbb
pop
mov
cmp
outsb
lcall
jmp
jo
andb
fucomip
jmp
std
idivb
ficompl
or
les
jb
jl
jno
jp
lds
iret
es
mov
mov
mov
out
adc
jae
mov
pusha
pop
sbb
jbe
aam
jle
pop
fwait
adc
mov
jge,pn
add
outsb
or
in
pop
mov
adc
add
faddl
ja
aad
fninit
in
add
pop
jecxz
ss
or
fbstp
add
adc
mov
aas
xor
add
push
pop
push
ljmp
jbe
xchg
in
xchg
xchg
test
mov
push
add
enter
push
mov
call
scas
into
ss
enter
popa
test
shll
cmpsl
push
jg
xchg
add
push
js
js
scas
mov
lret
xchg
pop
or
stos
dec
push
cmp
loope
mov
cmp
sarl
adc
adc
aas
add
mov
or
or
and
push
adcl
test
jle
popf
jmp
adc
js
int3
xor
fists
adcb
pop
inc
xor
and
sarb
call
sbb
xor
push
inc
ss
testb
les
int3
ror
add
dec
and
adc
xor
push
cmp
aas
pop
pop
int3
fdivrl
aaa
dec
call
std
in
adc
popa
aaa
mov
push
dec
imul
lret
fistpll
pop
in
inc
cmp
xor
shlb
ret
mov
xchg
cmpsb
stos
add
pushl
or
loope
lods
xor
sbb
popa
add
cmpsb
divb
or
lret
sbb
push
pop
lcall
add
nop
mov
add
or
jb
into
bound
leave
ljmp
decb
and
add
jno
fs
fisubs
movsl
int
dec
das
jnp
sti
call
js
sub
inc
push
and
sub
shrb
shll
arpl
push
movsb
sub
push
push
lret
inc
adc
insb
add
mov
mov
add
jl
notl
jmp
pushl
sub
sbb
add
mov
push
jl
pop
cmc
cmp
clc
addr16
pop
fisubrs
insb
cmp
push
sub
ret
sub
inc
clc
pop
xorb
add
mov
mov
lahf
cld
add
sti
add
or
sub
add
ds
outsl
lcall
aam
or
xor
xor
fldt
inc
test
insl
dec
imulb
push
add
xor
outsl
sti
add
fwait
pop
push
add
outsb
jo
sub
test
sub
movsb
jle
xor
gs
out
pop
inc
mov
outsl
lcall
add
add
cmc
mov
pusha
push
inc
bnd
into
or
cmp
or
xchg
cmp
filds
leave
mov
jle
mov
push
inc
std
ljmp
mov
or
imul
insl
cld
testb
mov
xor
cpuid
pusha
jbe
ljmp
int3
negb
mov
mov
addb
add
lods
insl
lcall
add
or
jbe
push
sbb
movsb
and
mov
lcall
add
cld
call
inc
sti
test
imull
add
jg
jnp
imul
popl
xchg
addl
or
push
jecxz
or
dec
xlat
fcmovnb
out
repz
cmp
lret
xlat
lret
adc
lret
mov
mov
xchg
lret
lahf
lret
xchg
jg
aaa
lret
ja
jg
outsl
lret
push
lret
pop
lret
inc
dec
lret
aaa
int
ja
lret
aas
es
pop
into
add
jmp
xlat
int
int
adc
int
xchg
int
int
int
fs
fbstp
jg
addr16
push
stc
fwait
mov
dec
adc
int
int
int
pop
int
int
int
push
sti
cmpsl
mov
out
out
push
int3
int3
mov
aam
xor
jnp
int3
cmpsl
int3
mov
xchg
int3
lahf
int3
xchg
int3
pop
jg
addr16
mov
push
int3
pop
int3
inc
int3
int3
aaa
int3
aas
int3
daa
int3
int3
cwtl
jo
aaa
rcrb
int3
pop
int3
cmovp
sarl
clc
idivb
or
test
mov
ret
out
inc
push
test
mov
mov
out
xchg
ret
lahf
ret
xchg
ja
jg
addr16
outsl
push
ret
pop
ret
inc
ret
dec
outsl
out
aaa
ret
aas
ret
daa
ret
das
pop
ret
pop
ret
pop
ret
maskmovq
inc
fwait
mov
mov
xlat
ret
mov
ret
ret
fwait
mov
xchg
ret
jg
addr16
ret
inc
ret
fwait
mov
ret
ret
pop
ret
ret
inc
out
mov
xlat
rcr
mov
jg
aaa
mov
mov
xchg
rcrl
sarl
shll
repz
rcll
roll
aaa
sarl
daa
rol
shl
mov
shl
inc
out
inc
repz
jg
xlat
rcr
mov
shlb
fwait
pop
add
mov
fsubl
rolb
ljmp
aas
shlb
out
pop
cmp
pop
and
out
insb
or
fwait
imul
sarl
adc
mov
jg
addr16
mov
push
pop
movl
inc
addr16
jne
sti
insb
or
ja
jns
mov
aaa
jg
xlat
ffreep
mov
cmpsl
mov
lahf
test
dec
add
add
std
aaa
aas
daa
mov
pop
pop
movb
test
fwait
xorb
xlat
lds
lea
test
inc
ljmp
lds
ja
mov
cmp
cmp
in
adc
shlb
add
xor
xor
loopne
int
and
jbe
es
loopne
add
rorl
enter
enter
insb
or
fwait
test
inc
mov
iret
cmp
sub
leave
xchg
mov
into
lods
into
push
into
fildl
xchg
int
xor
loope
aas
fwait
lea
loopne
popa
inc
xchg
outsl
test
and
mov
inc
lock
in
ret
ds
cltd
ret
ss
jo
insb
ret
inc
ret
ss
add
push
xchg
and
ret
rorb
shrb
scas
xor
sub
imul
movb
xchg
loop
and
dec
xchg
and
push
add
push
pop
movb
dec
xor
cmp
mov
cld
aaa
sbb
add
or
test
xchg
outsl
jg
jle
int
and
lds
adc
lds
pop
lds
sbb
add
insb
or
popf
add
sub
mov
cld
std
lret
iret
lret
lret
xchg
lret
or
outsl
adc
lretw
movq
stos
add
push
cld
in
inc
enter
enter
iret
fmul
into
iret
imul
popf
dec
loope
iret
inc
mov
mov
fsubrl
mov
in
out
mov
test
mov
jp
arpl
into
pop
into
aaa
loopne
rep
or
into
icebp
int
add
push
pusha
ja
popa
int3
mov
push
pop
pusha
xor
pusha
pop
add
rcrl
sub
ss
cmpsb
subb
cmpsb
jo
mov
loopne
add
mov
push
lds
andb
sbb
pop
lret
stc
and
lcall
test
and
jo
sub
ret
add
fcmovne
cmpsb
vxorpd
adc
dec
int
xchg
enter
clc
outsl
clc
enter
iret
mov
dec
iret
and
and
fwait
ret
lret
add
incl
ror
lret
int
int
sahf
int
int
loopne
cmp
shl
fs
int
int
shlb
test
jg
sub
into
ljmp
mov
ret
or
outsl
adc
mov
jl
roll
sarb
add
cld
outsl
pop
add
les
add
cwtl
dec
pop
leave
out
fcmove
jg
fbld
enter
iret
xor
iret
loop
in
js
loopne
fmul
ret
into
into
or
add
stos
pusha
or
negb
mov
rorb
and
mov
and
repz
icebp
fistps
mov
mov
mov
mov
add
cli
loopne
and
add
jmp
popf
lret
and
xchg
iret
adc
ljmp
xor
int3
add
mov
popa
push
push
push
outsl
jg
loopne
test
ret
push
ret
cmp
sub
add
ret
add
or
inc
or
mov
add
or
sar
cs
cltd
adc
push
adc
cmpsb
cli
mov
fs
sub
or
cli
cld
ljmp
ljmp
sbb
and
in
lret
mov
dec
lret
sub
lret
dec
out
out
lret
lret
mov
and
sub
lret
cs
add
sbb
enter
enter
ror
mov
iret
cmp
and
aam
add
loope
mov
mov
jo
adc
sbb
fists
push
loopne
push
inc
ret
sbb
dec
mov
rorb
or
mov
shrb
rcrb
cli
cmp
push
and
gs
dec
bound
loop
jg
mov
push
mov
or
icebp
or
std
in
in
outsb
out
adc
ffree
lret
les
lahf
les
mov
sub
les
sbbb
dec
les
adc
lret
xchg
enter
iret
out
iret
fnsave
enter
cld
iret
mov
ds
jg
or
iret
testl
sar
add
xor
int3
inc
insb
mov
fcoms
mov
ret
shll
sar
decl
jo
popa
shlb
shlb
dec
xor
cmp
cs
stos
js
jbe
in
subb
jo
inc
lds
add
sub
jmp
rol
mov
les
scas
clc
outsl
adc
or
test
add
push
clc
mov
popa
ret
dec
leave
ss
loop
loop
in
xlat
enter
out
xchg
enter
iret
xorb
adc
push
mov
aad
loopne
sbb
shl
stos
ret
mov
js
bound
inc
mov
roll
nop
push
ljmp
mov
nop
lds
sub
xchg
jo
jge
jg
fistps
enter
enter
into
cmp
add
jg
lcall
leave
ret
sbbb
rcll
les
xor
iret
xchg
jg
adc
mov
inc
and
ret
call
jo
push
les
fmulp
cmp
push
leave
or
enter
ret
aam
mov
jg
std
iret
dec
iret
mov
sub
sub
notl
inc
int3
sub
xchg
push
nop
repnz
ss
movsb
nop
dec
lods
nop
js
mov
cwtl
lock
add
dec
mov
mov
call
and
mov
fs
push
push
push
nop
dec
pop
rcl
jg
or
inc
dec
dec
xor
cmp
and
and
fbstp
sub
mov
sbb
xrelease
or
lock
clc
sub
inc
cld
push
dec
or
dec
rol
aam
fcoms
idivb
mov
mov
mov
lds
insb
lods
lds
xchg
lds
lds
loope
lds
and
push
hlt
repz
jg
clc
cld
loopne
in
call
aam
fadd
fadd
sar
es
mov
mov
mov
mov
fwait
jecxz
mov
lods
les
pushf
mov
mov
std
mov
mov
jo
faddp
jl
pusha
les
jge
ljmp
insb
les
push
mov
add
inc
les
mov
push
add
clc
imul
jecxz
mov
and
rol
fnstcw
ret
mov
jmp
jo
jle
sub
or
and
mov
lock
xor
push
rolb
xor
cmp
lock
addb
jge
insb
xlat
inc
data16
inc
xchg
loopne
mov
and
les
cli
cmc
mov
lock
lret
pusha
or
inc
pushl
pop
notb
and
enter
enter
iret
mov
nop
jno
js
pop
iret
inc
iret
hlt
pop
jg
rep
or
into
int3
lock
pushf
into
je
pushf
into
add
loopne
mov
push
lcall
xor
and
mov
adc
jg
imul
cli
insb
ret
ret
mov
data16
add
ret
cmc
ret
mov
ret
ret
mov
idiv
inc
mov
rol
push
dec
jo
or
mov
jne
or
mov
cmp
sbb
icebp
out
sbb
sub
shrb
sarb
xchg
mov
aad
incl
dec
lock
lret
lock
add
lret
lods
lret
add
outsl
jg
lret
mov
lea
ja
jns
popa
lret
jmp
add
lret
adc
cmc
leave
stc
leave
jecxz
and
in
leave
leave
xchg
mov
imul
rcll
enter
ljmp
add
mov
mov
sarb
call
or
dec
lret
int3
int
int
mov
or
dec
fs
outsb
adc
ret
jae
push
lcall
icebp
add
fcoml
ret
push
dec
xor
ret
xor
fcoms
sbb
call
push
xchg
jae
shlb
insl
test
mov
mov
add
scas
ljmp
push
cmp
iret
inc
movb
mov
adc
popf
adc
cmc
lret
gs
dec
lret
xchg
xchg
dec
xchg
enter
jo
pop
push
enter
enter
fbld
iret
cli
iret
fists
mov
iret
scas
iret
nop
or
xor
adc
pusha
lods
cli
mov
nop
shlb
adc
push
lock
std
sbb
inc
into
adc
or
ror
es
das
dec
int3
test
popa
int3
dec
int3
adc
ret
pushl
hlt
ret
ret
movsl
fadd
mov
mov
ret
test
jbe
sar
mov
rorb
adc
push
ret
outsb
cmp
ffreep
add
call
arpl
cmp
sub
rcll
in
mov
mov
rclb
shr
rol
aam
lret
lcall
mov
sub
jg
add
roll
mov
jno
xchg
cmp
lret
loopne
mov
inc
add
rcll
push
lret
lock
push
leave
cmc
ret
enter
dec
cld
add
add
and
test
cli
fcomip
aaa
dec
jbe
inc
fidivs
les
sub
lods
mov
lret
push
add
ficoms
lret
xor
sti
daa
lret
lret
cmp
mov
push
loope
iret
adc
mov
call
int
adc
outsl
sub
mov
push
xchg
push
ret
daa
ret
ret
mov
nop
mov
mov
mov
xchg
push
shl
fldenv
decb
lock
sub
lret
stos
leave
mov
pushf
mov
jae
sahf
into
pusha
into
or
sti
mov
repnz
add
stos
ljmp
out
push
cmp
sub
mov
mov
jg
cmp
std
lock
faddp
mov
nop
jle
gs
shll
aaa
mov
and
jo
test
lret
fadds
bound
lret
incb
or
aad
xchg
leave
or
adc
gs
inc
dec
adc
or
leave
out
adc
stos
enter
jge
push
enter
pop
enter
repnz
iret
mov
adc
xchg
fs
mov
xor
push
into
jmp
in
into
lret
nop
push
into
test
jge
imul
inc
mov
fisttpll
fsubs
sbb
int
int
pop
fs
dec
xchg
int
int
int
insl
int
xor
sar
jo
ror
push
mov
int3
es
or
mov
ret
into
ret
mov
mov
ret
pushf
ret
fdivrl
push
cmp
and
adc
nop
test
cld
cmp
roll
es
ss
les
out
rcr
add
das
mov
and
rol
or
adcl
fwait
mov
scas
clc
jns
pop
test
aas
push
dec
repz
shrb
clc
fistpll
xchg
lds
cwtl
mov
cmpb
les
std
in
push
std
sbb
lret
lret
add
adc
lret
ret
lret
loop
push
scas
cmpsl
lret
jnp
push
adc
lret
out
in
les
pop
fmulp
ror
adc
movsl
or
aaa
jg
outsb
push
adc
xor
and
or
enter
enter
ret
push
loopne
mov
pop
fidivrs
enter
add
iret
lret
stos
cwtl
adc
push
aaa
shrl
shlb
iret
add
dec
sahf
call
in
fwait
in
mov
jne
test
into
push
into
inc
into
dec
into
cmp
push
ret
fcomip
int
int
int
mov
push
dec
in
idiv
push
add
int3
mov
adc
cmp
push
mov
fwait
push
notl
add
and
ret
ljmp
add
pop
push
ret
cmp
dec
and
add
ret
xchg
je
adc
or
fwait
pop
mov
shr
rcll
fcmovnb
ret
ror
mov
sbb
cltd
call
rcll
mov
ror
adc
add
add
sub
shrb
outsl
adc
push
rolb
sub
or
push
aad
cli
cli
add
into
cmpsb
adc
jg
cltd
movl
push
and
stos
scas
mov
jmp
fcmovb
lods
mov
test
lcall
call
add
cli
add
ret
data16
mov
scas
jp
repz
dec
jbe
lds
adc
xor
adc
push
adc
push
sbb
cltd
xorb
les
je
mov
das
hlt
lret
incb
adcl
mov
popa
lret
imul
lret
dec
add
lods
into
sub
sbb
lret
rclb
pop
mov
and
sub
sub
enter
iret
mov
push
iret
cmpsl
sub
popa
repz
jg
into
dec
into
cmp
into
push
cli
int
int
int
mov
aaa
jg
int
int
int
or
pop
push
int3
test
and
outsb
filds
mov
jle
sub
adc
sbb
push
outsb
inc
inc
adc
xchg
hlt
lcall
ret
fists
sub
sbb
clc
rcl
jb
sarl
xchg
push
mov
push
ds
rcll
in
rcr
ret
test
rclb
fstl
std
mov
aaa
pop
mov
mov
adc
mov
cmp
pmovmskb
addb
leave
mov
xor
ror
mov
inc
xchg
jg
rolb
scas
inc
and
and
data16
adc
sub
aas
scas
imul
jg
xchg
inc
add
ret
decb
ret
pusha
inc
jg
enter
ret
inc
jbe
shrb
xchg
mov
leave
arpl
stos
outsl
clc
aaa
add
iret
mov
into
fcmovnbe
sbb
int3
adcb
xchg
ret
mov
ret
add
sahf
mov
xor
jle
lock
add
out
shlb
cwtl
jbe
ficompl
pop
movb
dec
adc
ss
cmp
movsb
out
ds
and
es
sub
adc
push
sbb
jg
fwait
pop
inc
push
or
push
testb
js
lds
ljmp
jp
lds
cmp
jmp
lret
lds
lds
cmpsb
lds
decl
xchg
lds
cmpb
lds
adc
jp
jle
lds
outsb
lds
add
test
jno
cld
int
inc
les
xor
adc
jge
outsb
rcrb
push
cld
es
repz
and
ds
jnp
std
add
fbstp
ror
gs
sbb
add
sarl
iret
out
iret
aad
mov
test
incl
ja
jg
iret
push
adc
inc
iret
dec
iret
xor
add
inc
inc
icebp
into
dec
fcomip
aas
cli
into
into
iret
nop
mov
mov
fwait
xchg
or
cld
into
or
int
jmp
in
int
or
fbstp
int
int
xchg
push
int3
cmp
adc
aaa
loopne
pop
mov
xor
ret
push
xor
ret
push
loopne
sbb
push
shr
test
clc
fldenv
mov
test
fdivrl
jle
lds
or
adc
and
xor
mov
lret
xchg
lret
ds
or
mov
std
lret
lret
in
lret
fxch
ror
sar
rolb
add
cmp
aam
aaa
outsb
jg
leave
iret
leave
mov
mov
sub
and
or
and
iret
int
notb
cld
jmp
and
cld
into
out
sbb
nop
mov
mov
jb
adc
into
hlt
int
int
nop
mov
outsb
int
int
int3
into
int3
xchg
bound
data16
mov
or
mov
xchg
loopne
rcrl
xlat
rol
clc
push
cld
aaa
push
jge
xor
pop
rol
mov
cmp
or
mov
mov
hlt
lret
jg
jbe
or
iret
outsl
jmp
in
loopne
mov
dec
and
loopne
stos
into
js
cmpxchg
cmpb
push
gs
outsl
pusha
cltd
inc
mov
push
aad
adc
rclb
es
pop
sbb
push
mov
xor
ds
es
dec
std
aaa
cwtl
mov
add
andb
jp
int
inc
adc
mov
xchg
les
mov
adc
xchg
cmpsb
lret
nop
lret
jbe
fcoml
lret
pushf
inc
clc
call
xor
lret
and
inc
leave
mov
pusha
inc
sbb
sub
enter
pop
enter
mov
jp
cld
sti
mov
ljmp
or
mov
adc
iret
push
mov
cmp
xchg
popa
mov
movsl
popf
xchg
dec
ljmp
mov
pusha
mov
into
pusha
es
ret
ljmp
int
int
adc
dec
int
inc
int3
out
sub
icebp
loop
out
sub
hlt
mov
sub
add
leave
pusha
lods
xor
sbb
rorb
shlb
loopne
ljmp
xchg
ret
add
mov
les
rcrl
push
lret
insb
loop
pusha
nop
mov
leave
cltd
leave
xchg
enter
push
mov
fsubl
jle
xchg
mov
int
int3
stos
adc
pop
int3
or
sub
fiaddl
dec
outsl
clc
adc
ret
mov
ret
adc
ret
fdivr
test
ret
mov
clc
dec
shlb
lea
pop
push
sbb
mov
hlt
loopne
mov
mov
pop
jle
popf
pusha
adc
sub
jmp
loop
or
add
sbb
jb
stos
std
lds
dec
lds
push
inc
add
push
or
les
les
adc
mov
enter
xorb
pop
jbe
stos
push
mov
fxch
push
xor
into
xchg
into
inc
into
dec
test
dec
adc
add
mov
mov
and
jne
inc
and
pusha
test
shll
and
int
clc
mov
adc
add
mov
jg
lea
call
les
pop
lret
jp
mov
loopne
cmp
add
sbb
jbe
into
jle
or
xchg
clc
push
loopne
pushf
int3
add
int3
pusha
lcall
rorl
loopne
adc
flds
lret
ret
push
xchg
mov
mov
ret
scas
add
mov
outsl
jg
adc
mov
mov
ret
addr16
je
ret
push
adc
pop
ret
inc
fs
ret
dec
ret
mov
push
push
cmp
es
pop
sub
xor
jp
ret
repz
or
ja
mov
adc
ret
loop
ret
call
add
adc
ret
lret
ret
mov
std
or
scas
push
bound
ret
mov
mov
jp
jge
xor
ret
push
ret
fcomip
cmp
jp
enter
ret
fs
sbb
sbb
jnp
ret
shl
clc
xor
shr
in
in
cmp
fcmovb
fldl
rcl
into
shll
mov
push
sar
dec
cld
xchg
rcll
adc
shll
sarb
shlb
inc
rorl
std
aad
out
scas
sbb
push
jge
shll
sbb
stos
push
adc
and
sub
adc
pop
xchg
out
ljmp
popa
les
pinsrw
lret
call
lret
xor
add
xchg
lret
push
dec
ja
inc
jmp
jnp,pt
mov
mov
inc
jo
jnp
insb
int
icebp
mov
sbb
ret
fcmovnb
pusha
ret
loop
ret
or
push
mov
pop
push
shrl
mov
jb
xor
lock
mov
fbstp
hlt
dec
fcomip
jg
lds
mov
js
enter
push
mov
fisubrs
cmp
aaa
aaa
bound
in
ret
sub
pop
and
shlb
mov
mov
mov
or
add
lds
lds
scas
dec
clc
cmp
faddp
ss
in
xor
push
jg
dec
xor
lret
dec
leave
in
xlat
adc
out
adc
cld
push
pusha
xchg
iret
jo
pop
jo
es
push
into
mov
sub
cmc
jg
call
insb
xor
ret
insl
roll
sbb
shll
ljmp
cmp
lret
out
jo
cmpb
push
dec
mov
cmp
repnz
push
push
xor
lock
push
data16
mov
mov
or
pop
adc
lret
mov
add
lret
push
lret
and
cmp
and
lock
dec
mov
lret
pop
movsb
lret
ret
lret
jg
lods
lret
leave
out
call
leave
pop
leave
sbb
leave
sbb
enter
enter
mov
or
enter
mov
mov
and
nop
pop
lcall
shl
dec
push
cmp
adc
lock
std
test
je
adc
inc
arpl
fs
out
push
test
inc
in
push
aam
ret
or
mov
nop
aaa
and
sahf
rorb
test
mov
ja
lahf
hlt
shr
mov
test
mov
lock
or
sub
lret
jle
xchg
outsb
lret
ljmp
dec
fwait
rclb
add
mov
cmc
loopne
int3
jmp
push
or
int3
add
lock
enter
mov
int3
add
movsl
incl
test
mov
adcb
mov
loopne
int3
pop
and
int3
dec
int3
xor
cmp
sub
pop
lock
pop
ss
fdivr
mov
mov
imul
shl
sub
mov
sub
lahf
sbb
lock
jg
arpl
mov
inc
shlb
orb
cmpsl
cmpb
addb
fs
push
mov
mov
push
jo
aaa
push
dec
pop
lock
and
sbb
push
out
xlat
outsb
add
push
xchg
cwtl
sbb
nop
inc
sbb
adc
adc
pop
xor
or
mov
cmpsl
xor
and
rcl
cli
shlb
and
incl
inc
test
mov
cmpsl
xchg
testb
xchg
ja
adc
aaa
lds
add
call
xor
lds
lds
es
pextrw
or
add
inc
ljmp
jmp
out
rol
xlat
add
cs
ret
mov
outsl
and
les
bound
nop
and
adc
incl
loopne
pop
jae
pusha
or
add
test
push
ljmp
push
cld
add
mov
xor
jecxz
ljmp
arpl
leave
jmp
popa
jae,pn
sarb
mov
jnp
jg
call
and
sub
sub
cmpsb
sahf
dec
cs
les
mov
or
fists
dec
jle
cmp
jge
ds
clc
cs
negl
sbb
or
ds
pop
jns
out
jnp
push
adc
adc
lcall
ljmp
push
or
and
decl
and
into
push
iret
add
dec
inc
mov
in
add
dec
adc
mov
lcall
aas
add
sbb
add
push
adc
push
mul
repz
jmp
dec
add
xchg
jge
jnp
lods
xor
arpl
jns
mov
push
mov
push
pop
roll
call
ret
ds
stos
push
cli
mov
add
incb
and
xor
adc
or
push
add
adc
ljmp
jnp
stc
pushf
cld
mov
sub
pop
mov
mov
clc
loope
jb
in
decl
mov
dec
push
adc
and
lret
fwait
pop
add
in
cmpsb
xchg
push
dec
clc
sub
mov
push
xchg
xlat
xor
sub
jbe
jns
jmp
fimull
outsb
sti
pop
pop
and
inc
xchg
fldl
scas
jbe
xchg
xor
fistpll
enter
lds
cmp
lcall
add
adc
std
sbb
cwtl
jne
iret
push
push
ljmp
mov
cli
fadd
cmp
incl
fnstenv
into
mov
je
add
je
mov
jge
dec
negb
incl
pop
or
lea
xor
jp
das
push
icebp
outsb
pop
enter
hlt
movl
mov
inc
mov
xchg
sbb
push
mov
add
and
pusha
cld
call
cld
ja
mov
sbb
push
mov
movsl
nop
mov
sbb
pop
scas
test
mov
dec
callw
andb
xchg
mov
pop
mov
inc
ss
ljmp
or
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
pushl
imul
insb
outsl
arpl
push
je
pop
gs
dec
gs
outsl
ljmpw
jb
sbb
outsb
bound
imul
outsl
jo
sbb
sti
ss
push
dec
imul
ss
push
arpl
jae
push
outsl
out
push
shlb
insl
outsb
dec
inc
loop
jne
jb
sti
sti
jge
push
push
lds
jo
push
inc
outsl
das
add
imull
dec
dec
xor
push
gs
add
push
ds
inc
js
jo
lcall
fs
les
jbe
insl
or
sahf
push
imul
jne
and
jns
jge
sahf
mov
popa
dec
inc
mov
jo
dec
bound
rorl
fidivl
push
mov
mov
nop
sbb
es
imul
negl
je
pop
inc
xor
or
jle
rorl
imul
imul
outsl
mov
sbb
aas
cwtl
mov
mov
push
outsb
ja
int3
pusha
xlat
jle
dec
jae
insb
push
push
ljmp
bound
dec
js
rcll
sub
ljmp
add
adc
and
outsw
inc
xlat
pusha
pusha
scas
loop
ss
push
push
mov
mov
sbb
dec
pusha
jne
mov
jo
mov
push
cmp
jns
sbb
push
ret
inc
imul
mov
prefetchw
insl
push
lods
fldl
push
adc
push
push
clc
popa
jae
ljmp
adc
adc
imul
mov
loop
imul
imul
clc
sub
jnp
mov
push
je
jb
lods
sub
push
enter
stos
aam
pop
daa
fiaddl
imul
fs
imul
insb
mov
sbb
adc
mov
lahf
test
pop
insl
adc
scas
push
fisubs
jbe
test
inc
pop
inc
push
inc
je
fsqrt
fs
xor
addr16
mov
adc
push
mov
push
jecxz
xor
xor
add
inc
or
pushf
popa
sbb
push
jg
and
in
cli
ret
adc
push
sbb
popaw
xchg
inc
inc
and
sub
in
push
mov
insb
test
jp
pop
fdivl
shll
pop
jb
inc
mov
push
ffreep
push
rorl
orb
add
or
push
sub
xor
jbe
sub
std
sti
adc
jge
addb
and
cmpsb
mov
imul
and
mov
gs
fs
and
add
test
push
lds
scas
xor
add
mov
add
imul
insl
jg
mov
adc
jne
sarl
ret
std
add
aad
lahf
jae
rorl
push
mov
and
gs
adc
loope
jb
add
jmp
andb
cmp
nop
push
rolb
adc
push
insl
pop
mov
add
mov
push
rorl
pop
rcrl
mov
jne
test
inc
sub
aaa
or
mov
jae,pn
and
mov
push
adc
mov
mov
mov
pop
xchg
dec
mov
mov
mov
mov
sub
mov
pop
inc
addl
imul
mov
dec
movsb
jno
cmp
fstps
loop
inc
xlat
inc
aad
push
and
or
rcrb
lea
push
mov
inc
jg
or
xchg
push
stos
imul
lea
mov
shl
inc
mov
dec
arpl
iret
mov
push
xchg
test
mov
adc
mov
bound
setae
xor
subb
sub
mov
inc
mov
in
jl
cmp
and
imul
andb
xlat
inc
push
or
loopne
push
adcl
je
mov
mov
push
push
mov
scas
mov
fwait
cmpsl
ret
pop
xlat
test
movsl
adc
les
inc
inc
addb
sbbl
adcl
push
mov
cmp
or
imul
hlt
cltd
add
xlat
push
jns
gs
imul
pop
push
inc
adcb
and
data16
stos
lahf
pop
gs
mov
aaa
push
xchg
ja
lods
sbb
jo
add
inc
jae
test
inc
adc
mov
out
xor
push
push
addb
jo
stc
adc
sub
cmp
ud2
add
lret
or
addb
lds
rorl
mov
xor
pop
xlat
test
or
adc
movsl
cltd
lcall
or
arpl
mov
dec
dec
mov
inc
and
aad
test
inc
adc
adc
sub
mov
sbb
sub
stos
adc
inc
popa
inc
pop
rcll
adc
dec
cmp
mov
pop
idivl
and
add
leave
inc
xchg
cs
and
out
mov
or
push
dec
popf
pop
jmp
stc
lods
push
movsb
and
mov
jo
mov
shl
mov
jnp
loop
inc
add
mov
shlb
and
pusha
aad
mov
in
xor
negb
dec
xchg
add
push
dec
mov
fistpll
push
jmp
mov
out
lret
xchg
imul
pop
xor
imulb
add
push
outsl
add
cmp
imul
add
es
scas
push
push
shrb
add
mov
fstpt
and
xor
add
and
jb
sub
mov
push
pop
in
jo
adc
add
outsb
inc
cmp
outsb
dec
push
sbb
femms
push
dec
shr
shlb
fcoms
cmp
pop
jb
jb
daa
ss
mov
mov
add
jo
and
adc
mov
dec
pop
outsl
add
add
add
add
add
std
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
nop
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
subb
or
add
add
add
add
add
add
add
add
addb
add
mov
inc
or
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
add
insb
add
jae
add
add
add
add
add
shrb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
insb
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
jo
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
add
popa
add
add
add
and
data16
jb
and
dec
add
je
add
popa
add
add
add
add
add
add
and
bound
imul
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jo
push
add
add
add
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
in
lock
gs
pop
loop
ljmp
xchg
xchg
fldl
xlat
mov
popa
push
lahf
xlat
stc
ficomps
xchg
push
insl
mov
mov
in
jp
popa
inc
dec
fidivrs
mov
adc
outsb
fs
inc
pop
jmp
push
movsl
add
ret
lods
mov
pop
loop
es
mov
xor
sub
mov
lods
movsl
jge
pop
jge
lods
loop
mov
ja
mov
and
js
mov
jmp
xor
loope
mov
add
repz
cmpl
test
inc
pop
ret
ret
nop
dec
mov
cmp
jg
and
hlt
and
mov
imul
pop
mov
xchg
icebp
mov
sbb
bound
jno
inc
adc
stos
iret
out
cmp
icebp
ljmp
inc
mov
xor
lods
inc
inc
fisttpll
adc
cmpl
fs
cmp
or
pop
lea
pusha
ljmp
loop
nop
pop
mov
scas
sarl
or
cs
test
iret
mov
jg
lret
add
dec
lret
xor
inc
add
jle
in
test
jmp
fwait
sub
imul
test
mov
out
mov
cmp
jb
adc
mov
cmc
mov
insl
ret
lods
stc
imul
xchg
jbe
movl
adc
pop
xor
insl
js
xchg
clc
mov
add
repnz
dec
lods
add
loop
adc
movsl
jo
xchg
test
dec
mov
shll
push
arpl
pop
ljmp
lret
dec
mov
adc
insb
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
insb
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
jo
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
add
popa
add
add
add
and
data16
jb
and
dec
add
je
add
popa
add
add
add
add
add
add
and
bound
imul
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jo
push
add
add
add
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
in
lock
gs
pop
loop
ljmp
xchg
xchg
fldl
xlat
mov
popa
push
lahf
xlat
stc
ficomps
xchg
push
insl
mov
mov
in
jp
popa
inc
dec
fidivrs
mov
adc
outsb
fs
inc
pop
jmp
push
movsl
add
ret
lods
mov
pop
loop
es
mov
xor
sub
mov
lods
movsl
jge
pop
jge
lods
loop
mov
ja
mov
and
js
mov
jmp
xor
loope
mov
add
repz
cmpl
test
inc
pop
ret
ret
nop
dec
mov
cmp
jg
and
hlt
and
mov
imul
pop
mov
xchg
icebp
mov
sbb
bound
jno
inc
adc
stos
iret
out
cmp
icebp
ljmp
inc
mov
xor
lods
inc
inc
fisttpll
adc
cmpl
fs
cmp
or
pop
lea
pusha
ljmp
loop
nop
pop
mov
scas
sarl
or
cs
test
iret
mov
jg
lret
add
dec
lret
xor
inc
add
jle
in
test
jmp
fwait
sub
imul
test
mov
out
mov
cmp
jb
adc
mov
cmc
mov
insl
ret
lods
stc
imul
xchg
jbe
movl
adc
pop
xor
insl
js
xchg
clc
mov
add
repnz
dec
lods
add
loop
adc
movsl
jo
xchg
test
dec
mov
shll
push
arpl
pop
ljmp
lret
dec
mov
pushf
xchg
outsl
add
add
add
xchg
outsl
add
xchg
outsl
add
xchg
outsl
add
xchg
outsl
add
xchg
outsl
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
