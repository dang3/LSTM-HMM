sbb
add
inc
out
sub
push
adc
lcall
add
sub
jns
mov
loopne
loopne
inc
ds
sarb
add
mov
add
pop
int
mov
ds
jae
adc
pop
add
in
cmc
lcall
test
pop
push
sub
movsb
decb
jmp
imul
mov
idiv
cmp
sub
shr
mov
lret
subl
aas
sbb
sarb
sar
fsin
mov
xchg
popf
xor
pop
and
mov
pop
lret
test
xchg
stc
push
xchg
mov
xor
mov
adc
xor
out
push
imul
popf
jge
jno
xchg
mov
test
mov
xrelease
jg
insb
inc
cmp
lods
push
jmp
xor
aam
and
hlt
loope
mov
ss
xchg
mov
pop
xchg
loop
pop
sub
fildl
ret
lds
jnp
cwtl
sub
mov
ret
and
pop
push
sbb
push
jae
mov
mov
fimull
dec
and
dec
pop
je
cmpsl
cwtl
or
cmc
xlat
das
daa
loopne
stc
ss
inc
adc
lret
sub
jns
ficoms
aad
mov
push
xor
and
mov
jb
dec
mov
insl
inc
mov
pusha
jmp
inc
jecxz
scas
xlat
jae
mov
cld
stos
ljmp
fsubl
jb
les
cli
cli
mov
bound
add
mov
mov
dec
mov
imul
xchg
fistpll
jnp
in
bsr
rcl
sahf
addr16
add
test
add
add
jne
or
and
adc
jmp
jmp
into
daa
jae
mov
add
test
aam
cmp
sub
data16
sti
push
jns
mov
jg
inc
cmp
mov
loope
adc
int3
outsl
sbb
sub
cmp
mov
dec
movsl
shlb
mov
pop
sub
into
sti
fwait
xor
mov
sbbl
inc
shll
cli
xchg
or
dec
movsb
hlt
mov
clc
stos
cwtl
repz
inc
imul
mov
xor
fists
shlb
cmc
cwtl
push
movsl
adcb
je
pop
je
bound
daa
js
std
test
sbb
add
xor
jo
cmc
nop
aam
popa
std
xor
filds
xchg
test
mov
aas
mov
mov
mov
sbb
loopne
or
ret
cmp
and
orl
inc
or
sub
dec
arpl
fwait
test
cmp
jg
das
jmp
inc
frstor
inc
push
enter
dec
xchg
scas
and
je
ret
or
push
inc
or
lahf
fwait
sub
in
lahf
loopne
pushf
out
test
out
and
bnd
jge
mov
pop
ret
sti
fldt
pop
pop
shrb
push
out
sbb
ss
xor
lods
sub
mov
dec
adc
call
and
inc
fimull
hlt
pop
loop
xchg
mov
mov
dec
push
mov
mov
jg
std
sub
mov
jns
inc
jmp
outsl
rcr
repnz
popa
out
sbb
insb
inc
xchg
jo
or
push
loopne
jae
sbb
and
repnz
call
mov
mov
ljmp
pop
mov
adc
loope
int
mov
jbe
insl
mov
push
push
scas
xchg
push
add
mov
ds
ds
push
daa
dec
clc
adc
push
andl
shll
sbb
mov
out
cmp
test
std
stos
jns
or
add
xchg
imul
push
pop
fldenv
or
lret
inc
testl
pushl
negl
outsl
movsl
jle
jecxz
movsb
push
cmp
jl
lret
aas
nop
jmp
mov
outsb
and
pop
jecxz
sub
push
jne
rorb
mov
inc
ffree
decl
ss
xchg
in
or
in
push
out
pop
inc
cmp
fcomps
xchg
jecxz
aam
and
push
mov
add
dec
cmp
pusha
lds
nop
sbb
inc
sub
imull
lret
jno
push
imul
out
mov
pop
adc
outsb
push
and
lea
loopne
jp
jb
jge
fsubr
mov
fimuls
mov
es
lods
adc
in
ljmp
clc
aad
fmull
test
xchg
jg
call
sbb
ds
outsb
lahf
iret
subl
mov
sbb
in
lea
mov
mov
pushf
xchg
mov
cwtl
insb
cmpsl
rorb
sbb
adc
mov
mov
in
insb
test
or
and
adc
sub
flds
test
enter
lcall
aad
inc
iret
data16
jmp
mov
cmp
ret
repz
hlt
sahf
imul
xchg
mov
jecxz
adcb
lods
mov
mov
inc
roll
out
sub
ja
xlat
mov
sub
add
dec
xor
pop
mov
clc
test
pop
push
mov
rolb
push
dec
test
cli
mov
push
pushf
push
out
add
jecxz
lahf
jp
cmp
pop
mov
stc
mov
lea
jl
jle
clc
mov
popa
cs
inc
sbb
fistpll
or
dec
pusha
push
fiaddl
and
lods
mov
lds
cli
inc
int
push
arpl
negb
dec
sub
subl
lods
cmp
lods
cmp
insl
stos
and
pop
push
pop
pushf
jmp
push
ja
inc
sub
dec
add
sahf
in
sbb
jge
aas
push
mov
pop
pop
js
or
icebp
lods
inc
out
fcmovnb
nop
mov
lret
cmp
and
or
dec
test
and
xor
dec
lret
mov
push
rcl
sub
lods
pop
sarb
push
iret
lds
shrb
lcall
ljmp
sti
dec
js
pop
mov
sub
cli
call
adc
jb
lods
sub
or
fwait
shlb
inc
and
or
pop
xchg
mov
cmp
cs
movsb
pop
movsb
sti
enter
and
xchg
shrb
les
movb
dec
dec
in
dec
lret
data16
pop
stos
and
mov
shlb
add
mov
sbb
out
add
nop
push
int
inc
xchg
inc
iret
lcall
subl
in
repz
xchg
jno
fsub
hlt
sub
jno
lcall
sbb
cmp
sbb
adc
pop
adc
mov
pop
adc
shr
orl
outsl
je
fs
daa
dec
inc
pop
pop
lds
xchg
stc
cs
adc
les
sbb
cli
push
ret
or
xchg
mov
test
dec
xchg
cmc
outsl
gs
insb
daa
shr
int
fsubr
mov
and
and
pushf
rorl
inc
xor
xor
push
fisubl
ljmp
fcomps
sahf
add
sub
sbb
pop
adc
loope
jecxz
sbb
push
in
cltd
insl
sbb
sarb
cmpsb
aaa
adc
ja
popa
inc
roll
aad
fptan
dec
test
int
mov
dec
movsl
test
xcrypt-ecb
cmpsl
lldt
push
adc
mov
jbe
xor
sub
insl
lds
pushf
push
call
outsb
repnz
nop
fwait
mov
aam
fs
dec
or
inc
jp
frstor
and
or
pop
mov
mov
lods
cmp
shll
push
out
mov
sti
xor
sbb
aas
mov
or
test
inc
daa
sub
ss
push
mov
mov
mov
je
movsb
add
pusha
and
push
fwait
lods
add
int
in
push
dec
ret
lahf
mov
xor
int3
push
fcoms
insl
fcmovnu
cmp
fwait
lret
xchg
push
cwtl
shll
in
adc
outsb
int3
add
inc
sub
mov
sub
pop
dec
push
jge
scas
mov
cmp
add
lahf
xchg
sub
push
or
stc
mov
xor
dec
add
mov
lods
lret
out
std
push
test
dec
or
loopne
mov
sbb
shl
mov
sub
push
push
inc
pop
fimull
mov
lea
xorl
lock
jle
loope
push
test
ss
rorl
or
xchg
fadds
icebp
subb
test
jmp
sbb
js
xchg
cmp
aad
int
fwait
jae
mov
inc
cmp
flds
and
sub
inc
andl
xchg
mov
sbb
xchg
mov
pop
test
sahf
and
sbb
popa
and
inc
repnz
js
aaa
aad
jae
jge
or
dec
iret
cwtl
or
lea
cmp
mov
jp
movsl
jmp
mov
xchg
pop
pop
dec
inc
push
bound
mov
arpl
imul
fwait
sub
adc
iret
repnz
fs
sub
pop
add
out
in
fwait
push
pop
jge
mov
xchg
adc
sub
scas
inc
das
mov
dec
adc
rclb
jp
xchg
fcmove
int3
inc
inc
rclb
lret
shl
and
sub
pop
mov
push
rdtsc
enter
xlat
xor
and
divb
sbb
es
xor
mov
dec
in
nop
repnz
or
dec
lret
popf
andl
sub
pop
mov
in
pop
fs
xchg
fidivs
xchg
insl
insl
xchg
int
xor
js
std
adc
mov
sub
lea
jp
jmp
hlt
pop
inc
clc
inc
cwtl
cltd
sub
stc
pop
testb
test
fisttpl
mov
adc
xchg
orb
sahf
pushf
jno
cmp
sahf
jns
jp
outsb
lcall
fsubrp
ds
adc
xchg
jno
mov
jl
mov
rcll
push
push
mov
in
pop
arpl
jmp
aas
into
std
sbb
and
xchg
pushf
inc
movb
xor
insb
rcrl
xchg
cmp
jbe
ret
mov
push
orl
sub
cmp
dec
xchg
jne
mov
jg
add
nop
dec
mov
mov
add
rcll
mov
add
pop
cmp
sbbb
pop
jae
mov
xchg
mull
mov
xchg
stos
roll
add
mov
push
je
repnz
enter
subl
add
inc
les
and
sbb
cmpsl
inc
xchg
xor
mov
jp
mov
dec
xchg
adc
sbb
mov
sbb
popa
pop
jns
add
sbb
or
sbb
ret
int
andl
mov
xchg
and
xchg
loopne
clc
inc
lods
and
int3
lahf
fistpll
test
push
add
clc
inc
inc
daa
in
sub
xor
push
push
mov
dec
sub
in
test
imul
mov
repnz
jmp
test
xchg
mov
daa
dec
push
jb
jb
int
jb
xchg
icebp
pop
aas
aad
je
sbb
push
adc
pop
xor
xor
mov
popf
jb
loopne
jno
sbb
lods
mov
push
imul
mov
mov
int3
jno
test
mov
stc
mov
sbb
sub
jle
jo
pop
sub
sti
sarl
hlt
daa
das
notb
mul
aaa
ds
cld
xchg
lcall
test
mov
inc
and
lods
mov
push
insb
lea
mov
scas
notb
fdivs
mov
adc
and
hlt
inc
cmp
and
or
imul
sbb
push
mov
test
packssdw
hlt
pusha
sbb
push
jmp
popf
lcall
in
xorl
incb
cmp
clc
jle
pop
pop
mov
jb
mov
mov
lret
das
out
int3
enter
push
add
push
xor
push
adc
add
mov
out
mov
fwait
cmc
ds
dec
cs
inc
bound
fdivrp
xchg
dec
sub
ficoml
enter
loop
and
daa
and
and
fistps
cmp
aaa
dec
xchg
push
imul
mov
inc
push
int
ret
call
decb
push
repnz
jne
je
ja
and
or
in
mov
sbb
arpl
mov
inc
dec
clc
sarl
mov
cmp
and
sub
inc
flds
sbb
push
js
and
les
cwtl
pop
adc
xchg
mov
mov
jo
jno
out
iret
setg
pop
sti
pop
gs
cld
sahf
das
pusha
in
insb
and
pop
loopne
scas
xor
or
nop
test
popa
lcall
dec
insb
mov
push
push
xchg
push
imul
int3
out
in
iret
jns
outsb
push
mov
xchg
mov
ds
mov
fmul
mov
test
in
xchg
fnsave
das
insl
sub
cld
cmpsb
mov
sbb
hlt
inc
cmp
jmp
adc
mov
rcrl
mov
sub
loop
mov
push
xchg
dec
fdivl
loopne
mov
jno
push
dec
xor
jnp
cmp
lds
in
mov
mov
in
mov
shl
mov
push
out
shlb
mov
loop
mov
mov
jae
sbb
and
addb
adc
pop
mov
in
fcmovne
pop
and
mov
test
mov
andl
fsubp
cmp
sbb
dec
mov
mov
xchg
push
enter
pushf
pop
les
movl
mov
push
and
test
sbb
jl
dec
mov
stos
dec
mov
pop
outsl
in
add
xchg
loope
push
outsb
pop
cld
imul
jecxz
mov
gs
mov
frstor
std
pop
adc
pop
cmp
pop
pusha
ljmp
aaa
call
ss
xchg
cs
cli
add
inc
hlt
sbb
dec
dec
repnz
and
adc
lret
pop
loope
mov
xlat
fnstsw
outsb
stos
out
lret
pop
js
lods
iret
ja
and
arpl
movsb
jo
dec
or
cwtl
das
pop
cmc
cmp
sbb
imul
enter
mov
cmp
data16
xor
and
insb
push
inc
mov
les
push
je
aas
inc
pop
das
aaa
jo
cmp
subb
add
icebp
inc
sub
fstl
out
jg
jle
pop
psubusb
js
jbe
inc
sub
cmp
push
mov
std
fildll
pop
scas
imul
cmc
loop
mov
das
cld
mov
scas
jg
sub
imul
imul
inc
std
xlat
dec
mov
lahf
movsl
test
rolb
jmp
cmpl
in
jg
lahf
jp
stos
jge
cmp
imul
popl
xchg
insb
scas
push
lods
push
mov
outsb
movsb
mov
pop
xchg
mov
test
xorb
stos
test
lahf
cltd
lahf
mov
in
jo
sub
cmc
ja
xchg
lret
jo
sub
bound
in
hlt
inc
stos
xchg
jp
jbe
sbb
xor
fbstp
rcrb
int
int
pop
adc
dec
mov
push
int3
dec
mov
add
push
jg
js
pop
mov
les
push
jge
rorb
into
rcr
push
cmpsb
cmp
and
jmp
jle
cltd
cld
cmpsb
mov
inc
mov
mov
ss
jl
lods
out
mov
jecxz
inc
jnp
adc
sbb
mov
cmp
rolb
dec
outsb
push
insl
add
ret
call
and
inc
push
movsl
pop
sbb
mov
dec
xlat
test
jne
or
cmp
push
sub
mov
mov
inc
cmp
pop
dec
cltd
push
test
inc
mov
dec
addr16
sub
mov
cmp
lds
test
lcall
andb
ljmp
hlt
xorl
mov
shrl
push
insl
pop
jae
mov
dec
pop
rcll
stos
divb
cltd
mov
cmp
xor
pop
xor
push
xchg
xchg
lcall
test
lret
int3
xchg
xchg
xor
lahf
xchg
push
jnp
inc
xlat
gs
je
fdivrl
jo
push
xchg
les
mov
nop
sub
in
adc
outsl
insb
push
in
testb
xchg
dec
cli
cmc
scas
leave
bound
xor
shld
mov
mov
dec
cmp
fiaddl
fimuls
sbb
out
mov
out
aas
pop
mov
sbb
int
or
xchg
addr16
loopne
add
push
out
mov
push
pop
mov
push
jns
and
mov
adc
sahf
lods
sbb
neg
dec
ds
scas
mov
mov
orl
and
xchg
sbb
aad
scas
xlat
adc
adc
je
es
pop
jp
jge,pt
xchg
fcmovnu
xchg
fs
fcmovbe
xchg
push
sbb
lods
in
xchg
cs
sti
jns
mov
repz
fs
jmp
lcall
jle
or
and
mov
fstps
idivb
inc
movl
lds
fs
sbb
mov
mov
out
add
and
test
adc
lds
sti
das
mov
sbb
xor
out
jmp
pop
test
lcall
cmpsb
mov
orl
add
xchg
ss
push
or
or
inc
cmp
pop
das
push
dec
inc
icebp
cltd
xchg
leave
or
test
shl
test
cmp
jmp
out
lret
mov
dec
push
cs
inc
push
adc
push
aad
ja
jae
or
add
pop
jp
es
push
lahf
jnp
push
test
cmp
aam
scas
mov
fwait
test
ficomps
out
adc
dec
ret
pop
pop
pop
xor
adc
int
jecxz
adc
jae
mov
and
jnp
repz
dec
inc
loopne
lods
push
cmpsl
shll
jne
cwtl
jo
sbb
cld
dec
inc
mov
mov
xchg
xchg
fildll
rcrl
xor
add
xor
dec
mov
add
fsubs
fcoms
or
loopne
inc
xchg
ret
fldcw
hlt
ljmp
mov
sub
mov
cmp
aad
push
jg
scas
sub
cmp
popf
pop
xchg
cmpb
es
test
lret
hlt
cmp
ret
dec
lock
pop
scas
mov
fldcw
lds
shlb
shrb
mov
stc
push
inc
into
bound
test
jnp
and
jne
fistpl
adc
xchg
sti
adc
mov
or
cmp
jne
shlb
shlb
loopne
ss
rcll
imul
movsl
dec
push
mull
xchg
jo
and
add
dec
mov
pop
inc
and
xchg
lods
xorb
or
mov
inc
mov
dec
aaa
cld
xchg
ret
lea
mov
cwtl
xor
rorb
jge
dec
sbb
leave
adc
or
push
or
cmp
adc
or
clc
test
out
loope
pop
call
or
mov
xchg
out
jne
mov
fstl
in
ja
jno
ja
or
loopne
fimull
push
loope
enter
test
cmp
dec
dec
sub
xchg
jle
jl
mov
loope
dec
popf
jl
sbb
jl
mov
lods
or
cmpsl
inc
lods
in
push
imul
push
cli
jne
mov
rol
sub
imul
push
or
in
and
dec
pushf
jp
or
mov
dec
js
movsl
mov
aam
or
shrl
out
inc
cmp
add
xchg
dec
cltd
pop
into
imul
dec
lds
xchg
pop
cmp
aas
lea
repz
xchg
lea
ljmp
aad
lds
adc
cmpsb
aam
rorl
sub
jp
mov
loope
push
xor
ret
aas
sbb
pop
les
push
adc
les
das
pop
out
jb
jp
dec
pop
lock
icebp
iret
mov
outsl
jne
cmp
insb
out
fmul
or
inc
mov
xor
lods
or
inc
loop
loope
sub
rorb
mull
repz
fimull
mov
imul
mov
movsl
push
push
loopne
aas
dec
push
sub
pop
mov
popa
fsts
or
and
and
daa
sub
rcl
dec
jl
jmp
subl
xchg
insl
sahf
pop
lods
jle
scas
sub
jge
hlt
loop
inc
mov
addl
lods
xor
lea
sbb
push
daa
xor
lahf
scas
test
ss
jecxz
xchg
sbb
daa
icebp
lret
sti
adc
fidivs
push
pop
sbb
dec
scas
scas
and
repz
mov
imul
cmp
cmp
sub
add
mov
dec
add
mov
cld
dec
add
sbbl
test
jns
mov
lods
lea
add
inc
sub
outsb
push
add
inc
test
sbb
mov
xchg
dec
ljmp
icebp
sub
mov
dec
xchg
pop
into
daa
adc
pop
popf
mov
in
xchg
add
lahf
add
jge
add
inc
sub
jo
hlt
daa
imul
mov
mov
addb
lret
add
mov
mov
jo
das
or
repnz
lahf
pop
sbb
mov
movsb
scas
ret
pop
dec
lret
into
fildll
bound
outsl
dec
push
xchg
jns
mov
mov
jp
fsub
ss
jbe
cmp
and
dec
jns
call
inc
stos
test
inc
ret
dec
cmp
mov
mov
mov
jnp
mov
xchg
push
xchg
in
das
adc
jae
test
aas
mov
xlat
mov
mov
sti
test
sbb
inc
fs
xchg
jb
dec
iret
ljmp
daa
xor
mov
push
dec
inc
aas
jmp
pop
sar
inc
cmp
dec
mov
xchg
imul
push
imul
arpl
xorl
mov
leave
fucom
mov
xor
outsb
add
dec
cmp
test
xor
mov
jns
and
inc
pop
negb
pop
int
dec
jge
fcoms
xorb
loop
jl
test
sub
sbb
jg
mov
xor
pop
mov
std
mov
enter
pop
movsb
jmp
ficoml
loope
pop
das
call
loope
fiaddl
dec
inc
nop
loopne
mov
adcl
loope
test
jecxz
and
lods
add
mov
outsl
dec
je
pop
sub
mov
mov
movsb
xchg
int3
adc
pop
test
leave
lret
clc
pop
adc
push
in
int3
or
xor
andb
dec
pusha
push
push
mov
shrl
sub
dec
jge
mov
xor
outsb
pop
dec
or
into
aas
mov
lcall
cmp
push
rcll
sub
daa
lret
loope
mov
cld
das
cltd
in
or
push
mov
cmp
pop
mov
sarb
push
cmp
test
int
int3
icebp
or
ss
sbb
cmp
add
pop
dec
shr
adc
adc
popf
cli
push
push
hlt
jnp
mov
fucomp
insl
and
adc
pop
outsb
add
aad
ret
dec
out
scas
push
inc
je
jo
call
cmpl
fwait
pusha
or
loope
xchg
lcall
push
out
mov
mov
sti
xor
and
stos
or
push
cwtl
repz
dec
mov
roll
je
mov
xchg
inc
int3
arpl
mov
out
add
fnstcw
sub
jbe
adc
xchg
imul
dec
jno
cs
sbb
dec
or
adc
scas
jge
fldcw
es
aad
push
movsb
nop
rcrl
movsl
in
add
sub
sarl
jle
and
adc
rcrb
xchg
cld
out
xlat
mov
in
xlat
pop
mov
lock
sub
inc
idiv
mov
pushf
sub
out
mov
inc
xchg
jns
pop
xlat
insl
dec
movsl
or
jne
popa
leave
pop
mov
push
add
test
adc
inc
cmc
shrl
add
imul
cltd
aad
fisttps
sbb
popf
cli
clc
and
test
lods
pop
mov
mov
lock
fdivrp
in
into
aad
lods
outsb
xchg
pop
adc
mov
inc
pop
cwtl
movsl
cmp
fwait
adc
orb
adc
mov
jge
rcrb
or
or
cmp
out
push
add
pusha
xor
filds
mov
xchg
sub
int3
lahf
loopne
or
xchg
fstpl
bound
lods
ss
std
cmp
stos
sbb
jb
pop
test
std
jae
or
mov
bound
mov
loope
sti
mov
fwait
mov
in
out
mov
aas
aad
xchg
lock
gs
ret
mov
or
les
loope
jbe,pn
cmp
iret
mov
cmc
xchg
enter
jnp
push
xor
lds
and
sbb
cwtl
das
xchg
xchg
sarb
sahf
std
add
and
into
cld
data16
push
dec
je
pop
test
add
bound
call
mov
movsb
lret
pop
mov
ja
or
pop
movb
sar
mov
or
sti
ss
xchg
fnstcw
mov
sarl
lods
sti
inc
stos
mov
mov
pop
ss
inc
rorl
inc
shll
out
scas
jl
or
shrl
and
dec
xor
fcoms
insb
jg
cmp
mov
jge
stos
push
loopne
xchg
or
sahf
scas
or
inc
dec
iret
lret
jecxz
pop
int
shrb
xor
ja
paddsb
mov
repnz
cmpsb
sbb
nop
lods
jb
add
ja
stos
imul
pusha
pushf
ds
lret
std
cmp
adc
repz
jns
lods
daa
sub
orl
push
addr16
sahf
rclb
andl
cmp
pop
scas
fisttps
dec
inc
fisubrs
movsb
xchg
push
inc
enter
dec
ret
or
mov
into
dec
adc
mov
bound
jle
ret
inc
inc
jnp
mov
jmp
stc
sbb
sub
jnp
add
adc
push
xor
movsb
jge
cmpsl
ds
into
lret
push
shl
fiadds
movsl
lret
sbb
loope
xchg
and
enter
in
ret
push
adc
ret
int
dec
cltd
fs
pop
push
mov
push
sahf
jecxz
mov
and
push
mov
and
mov
or
movsb
sub
sbb
push
inc
test
fisttpll
push
aaa
dec
addb
sub
push
push
add
shlb
lahf
leave
in
mov
add
inc
jo
subl
pop
pop
cmc
mov
pop
push
inc
sub
mov
inc
push
and
aaa
dec
add
or
and
inc
pop
jae
ljmp
cld
jae
mov
scas
add
jns
mov
mov
sub
cmpl
inc
mov
das
ds
adc
xchg
or
repz
repz
jmp
xor
lock
outsb
mov
mov
or
push
ljmp
jg
sub
xchg
popf
jmp
insl
aad
mov
adc
inc
es
std
flds
mov
lock
xchg
lahf
mov
push
popf
adc
rorb
ror
mov
fiadds
mov
jmp
and
cmp
hlt
aaa
repz
roll
push
repz
leave
ja
and
xchg
ja
fnstcw
aad
and
sub
pop
mov
mov
jbe
nop
sub
mov
mov
outsl
sub
je
pop
fldl
adc
orl
mov
stos
xchg
cmp
pop
insb
mov
daa
sarl
fs
xor
ss
pop
inc
sahf
inc
jbe
adc
push
gs
mov
lcall
iret
cmp
xlat
mull
jae
xchg
or
idivb
push
sbb
test
and
loope
xlat
adc
lods
inc
mov
inc
jecxz
leave
xor
stos
insb
iret
jns
js
sbb
pushf
jo
adc
and
cmpsl
sbb
and
cs
in
sbb
jb
pop
or
lahf
cmp
push
push
stos
ror
xor
in
out
mov
push
js
mov
pop
or
sub
in
fildl
mov
enterw
pop
inc
sbb
push
sahf
pop
adc
mov
lds
push
cmp
push
je
adc
xchg
call
scas
cmp
outsl
cmp
iret
stos
cmpsb
mov
cmp
pop
jle
nop
add
int3
mov
or
dec
sbb
pop
xor
icebp
paddq
add
fiadds
es
mov
lock
fistpl
and
jns
sub
xor
sbb
insl
mov
fsts
mov
fists
push
filds
push
and
clc
aam
jns
out
out
test
xchg
popa
cmp
pop
idiv
xchg
insl
cld
stos
in
fmuls
cmp
push
xor
lret
fcomps
sbb
sbb
pop
dec
mov
jbe
mov
aam
xchg
daa
add
lret
pop
jmp
lret
mov
das
imul
or
add
adc
lods
push
pop
inc
jmp
sub
or
cltd
cmp
sahf
lea
adc
and
dec
sbb
das
daa
lds
xor
xor
xchg
loopne
xor
cmp
or
fsubs
orb
push
testl
xor
xlat
sti
pop
dec
mov
pop
mov
les
call
addr16
dec
mov
leave
and
xor
insl
cmp
sarl
outsl
mov
sti
xor
je
data16
out
pop
int
adc
in
addb
jnp
mov
xlat
jmp
xchg
daa
adc
dec
and
loope
aad
cli
lcall
cltd
and
pop
lea
sbb
jbe
jmp
out
test
and
repz
sub
gs
gs
rclb
xchg
lret
nop
mov
mov
fisubs
fdivp
cld
fst
cmpsb
insl
dec
cmp
arpl
xor
inc
roll
sbb
ret
repnz
negl
pop
mov
out
sbb
ret
fistl
pop
ljmp
dec
vucomisd
mov
js
jae
jl
jle
pop
mov
cli
es
fs
xor
out
dec
and
or
int
sahf
cmpsl
sub
out
loope
xchg
fcomps
mov
cmp
dec
imul
and
lcall
mov
sub
sub
mov
push
decl
ret
je
xor
cli
out
adc
xor
push
aam
arpl
jl
nop
in
scas
cs
insl
mulb
cmp
mov
jecxz
cwtl
inc
jecxz
sbb
adc
test
push
divl
mov
rclb
adc
and
cmp
out
sbb
adc
cmp
hlt
out
jo
lcall
out
movsb
xor
dec
jb
lret
pop
shll
pop
mov
pushf
jp
adc
subl
mov
pop
and
bound
mov
outsl
xchg
pop
iret
stc
and
nop
sbb
cmp
inc
adc
jg
int3
gs
pop
mov
out
mov
pushf
ds
mov
iret
stc
pop
jmp
dec
lahf
pop
cmpsl
pop
pop
mov
iret
inc
call
and
dec
cmc
stc
ret
cmpsb
movsb
inc
sub
xchg
aaa
or
mov
rclb
mov
cmp
mov
movsl
ljmp
js
xor
out
daa
test
into
int
add
cltd
xor
adc
mov
lods
dec
or
jp
arpl
int
lods
mov
inc
notb
int3
shl
push
xor
mov
scas
push
aaa
orl
jnp
test
mov
mov
push
nop
sub
mov
imul
add
insb
sub
inc
cwtl
mov
fistpl
mov
in
ret
mov
sbb
dec
xor
inc
xchg
push
movsb
data16
push
aad
sarb
cmpsl
loopne
push
dec
shlb
aam
mov
out
outsl
pop
xor
dec
push
sti
pop
push
sbb
or
xor
call
in
or
mov
mov
or
jb
inc
test
stos
push
cmp
fsub
adc
mov
adc
jge
mov
pop
test
scas
add
cmp
dec
or
jnp
add
or
jae
roll
jge
bound
in
popl
jl
out
data16
lret
cmpsl
pusha
jb
push
and
test
dec
sub
lods
xor
push
adc
repnz
push
adc
popa
push
mov
fdivs
je
out
fidivrs
inc
arpl
lahf
insl
addr16
pop
xchg
jae
cmpsb
sahf
stc
iret
stos
out
repz
adc
out
push
cmpsl
jecxz
je
loope
push
jo
push
xchg
cmpps
jecxz
mov
stc
ss
cmp
pop
insb
inc
lcall
ds
imul
inc
into
mov
mov
xor
cmp
jecxz
xchg
mov
call
push
push
addl
mov
pop
xor
into
add
lods
rclb
fscale
repnz
cmpsl
sbb
shll
insb
inc
test
scas
add
inc
ss
xchg
mov
lret
lahf
leave
xchg
sahf
ret
sbbb
xchg
jle
int
inc
adc
jbe
mov
cmp
insb
stos
xor
push
xchg
ror
push
sub
fld
in
jae
movsw
mov
dec
mov
adc
dec
rcll
ret
and
mov
xchg
adc
jae
cmp
inc
xor
lahf
decl
or
push
push
add
mov
icebp
xchg
std
fldl
stc
mov
bswap
inc
out
lods
insl
inc
mov
pop
and
pushf
sub
mov
jno
mov
sub
pop
xchg
inc
jb
xchg
xor
in
sub
pop
std
repnz
sbb
pop
popa
jno
cld
rolb
jbe
outsl
xor
pop
jg
adc
mov
pop
fiaddl
cmp
scas
xchg
jge
push
into
xchg
mov
cli
aas
ds
hlt
stc
jecxz
add
mov
jge
or
adc
xor
lods
and
dec
jmp
jno
mov
mov
loopne
sub
nop
das
push
mov
ja
adc
push
jg
repnz
int
stos
pop
imul
add
mov
jb
out
xchg
cltd
adcl
pushf
insb
xlat
sarb
mov
jnp
sbb
icebp
loop
push
int3
xchg
sbb
dec
jae
dec
stos
enter
adc
cmp
imul
add
push
push
jl
jmp
add
jl
sti
xor
dec
jg
sbb
mov
lret
lods
pushl
push
daa
sbb
push
mov
xchg
testb
out
inc
js
push
jl
and
inc
jns
xchg
sub
adc
jae
dec
adc
mov
jne
int
push
ds
jae
jl
lods
xor
mov
and
push
and
xchg
pop
or
popa
rcl
icebp
inc
mov
repz
movsb
inc
ss
in
jns
adc
std
push
ret
dec
imul
data16
test
or
roll
in
mov
jl
fs
xchg
out
mov
ror
push
imull
mov
cmc
xor
sbb
and
pop
cld
negb
sub
scas
and
jmp
push
std
inc
das
xchg
dec
pop
mov
stc
and
and
insb
insl
and
leave
mov
cmpl
mov
out
fnop
add
int
out
mov
mov
mov
jo
pop
fmul
dec
and
rcrb
pop
comiss
and
jg
stos
scas
lds
iret
push
mov
rorl
pop
in
cmp
push
sbb
add
shlb
iret
inc
sbb
mov
adc
fldenv
popf
or
inc
lret
sub
in
imul
inc
mov
loop
pop
sub
push
jg
or
or
rcll
lahf
mov
shrl
pop
test
sbb
sarb
push
adc
aas
cld
in
loopne
sub
scas
sbb
std
repnz
addr16
gs
mov
jo
mov
negb
cmp
push
pushf
pop
dec
ret
shlb
fistpll
push
fstl
dec
ds
sbb
cwtl
jne
icebp
mov
call
dec
enter
mov
mov
pop
mov
adc
adc
aad
pop
cwtl
adc
pop
aas
sbbl
data16
in
imul
pop
rcr
jp
mov
mov
sti
cwtl
jmp
inc
sbb
push
add
and
lahf
xchg
inc
fistpl
inc
ret
pushf
mov
aad
cli
test
kxorw
add
les
inc
mov
jl
mov
mov
aas
cmc
in
pop
or
xor
out
test
lods
dec
sti
or
mov
xchg
xchg
mov
sub
push
mov
shrl
adc
inc
stos
rclb
out
jae
inc
jb
xor
fstpt
sub
pop
test
int3
insb
ficoml
push
mov
and
shrb
mov
imul
je
aas
mov
sbb
adc
add
enter
jg
into
xchg
mov
fiadds
pop
adc
test
mov
mov
adc
push
flds
icebp
adc
pop
nop
incl
hlt
jne
loope
mov
jnp
xchg
push
jecxz
sub
mov
test
outsb
sbb
cmpsb
cli
lcall
mov
data16
std
and
ljmp
xchg
cmp
shl
xchg
fldz
mov
clc
or
mov
add
cmp
pop
add
insl
dec
mov
xchg
dec
add
or
lahf
decl
insl
std
mov
or
mov
cmp
and
int3
aas
leave
push
and
int
imul
xor
popa
aaa
leave
cwtl
dec
outsb
inc
sbbb
lods
fists
xlat
rolb
dec
repz
daa
adc
nop
sbb
into
push
cmp
insl
shlb
xchg
pop
pop
scas
sub
pop
aad
imul
mov
jae
and
scas
adc
xlat
movsl
xchg
out
lcall
cmpsl
mov
dec
fmull
enter
pop
push
outsb
out
xchg
cmp
jb
out
jmp
mov
sub
pushf
mov
hlt
jo
out
nop
mov
sub
stc
sub
insb
daa
std
mov
dec
out
lahf
xor
adc
add
pop
mov
aaa
mov
test
inc
repz
shl
imulb
add
sub
gs
xorb
fwait
add
repz
pop
jge
pop
lahf
cwtl
pop
cld
lock
es
or
jmp
sbb
addr16
mov
out
fbld
loop
mov
cmc
test
sbb
pop
push
mov
add
pop
jecxz
jbe
xchg
cmp
and
dec
lds
les
jns
adc
jmp
push
mov
xchg
cwtl
pop
inc
notb
loope
dec
xchg
add
mov
loop
popf
dec
xlat
mov
mov
scas
and
and
in
loope
je
cmc
in
jnp
xchg
cmp
inc
sub
incl
pop
or
scas
sbb
cmp
cmpsl
sbbb
out
cmp
sub
jnp
sbb
xchg
mov
xchg
inc
ret
roll
or
in
cmp
or
iret
cltd
ljmp
movsb
mov
push
das
imul
dec
fisubrs
addr16
xor
shl
mov
bound
testb
aaa
jge
pop
xchg
jge
mov
ja
pushl
clc
and
jmp
pushf
sti
or
jno
adc
lods
cli
or
jmp
push
aaa
out
mov
sub
out
popa
int3
jge
push
mov
sub
mov
sub
sbb
movsb
mov
in
std
in
inc
mov
loope
xor
lcall
sbb
aad
popa
ds
adc
jecxz
in
testb
insb
in
fs
mov
add
push
das
daa
andb
pushf
cmp
in
out
cmp
lods
sahf
in
nop
dec
sbb
adc
aam
insb
into
pop
xchg
dec
xorl
mov
std
pop
push
fwait
jns
imul
andb
mov
fisubrl
dec
enter
adc
jae
call
sbb
jbe
dec
ljmp
and
inc
fnsave
shrl
dec
nop
int3
addr16
shrb
jge
jae
jl
push
push
mov
gs
adc
lret
jo
cmp
les
out
mov
insb
fs
insb
xor
cmp
sbb
or
fidivrl
lods
fmul
or
fs
int
ret
loope
aas
adc
ret
imul
ja
inc
test
pop
shrb
cmpsb
cmp
push
pop
fnstcw
ret
xor
enter
mov
sbb
jae
sbbb
popa
pusha
popf
inc
sti
jge
stc
pop
jg
cmp
sbb
punpckhbw
push
pop
mov
in
xchg
in
xor
add
test
les
imul
rorb
xor
test
les
add
sub
out
fmulp
repnz
scas
hlt
popa
mov
and
outsb
popf
mov
dec
mov
xchg
sub
int
inc
pop
or
mov
pop
stc
fcmovnb
cmpsl
call
sbb
sbb
mov
popa
mul
jecxz
pop
jmp
sbb
cmovp
jns
inc
rorb
add
rorl
ret
push
xchg
loopne
jecxz
test
or
push
icebp
out
jg
push
xchg
pop
xchg
mov
add
bound
inc
sbb
fstpt
dec
in
je
fdivs
sub
sbb
insl
sahf
or
push
xchg
ss
mov
pushf
idivb
test
and
sub
ret
mov
jnp
and
push
sti
mov
cmpb
lret
insl
cmpsl
xor
gs
mov
mov
inc
bound
mov
loopne
clc
mov
or
jg
cmc
xorl
cmpsl
repz
add
out
mov
xor
lods
mov
cmp
xchg
cmp
lret
cmpl
jns
negl
movntps
es
je
mov
lret
scas
pushf
push
imul
lods
push
outsb
orl
pop
stc
or
pop
or
lods
mov
enter
pop
fwait
sub
xlat
adc
dec
mov
dec
lods
add
hlt
sub
ds
dec
adc
pop
sub
lods
mov
repz
jecxz
out
xchg
sbb
imul
int3
subl
pop
out
adc
xor
pushf
adc
jg
icebp
mov
dec
int3
idivl
outsb
cmpsb
cltd
jo
or
rcll
xchg
lcall
adc
jmp
aad
out
mov
push
jle
mov
out
stc
or
lods
les
je
sub
addb
leave
xchg
sub
xor
lcall
jge
jo
push
lea
cmp
pop
movsl
sbb
push
xchg
lods
cmp
in
rol
imul
fdivr
add
mov
lret
ficomps
xor
mov
shlb
fildll
sub
inc
ja
mov
xchg
es
out
add
fimuls
inc
popa
cmp
push
mov
inc
mov
clc
mov
sub
movsb
hlt
ret
sub
ret
mov
mov
xchg
mov
xchg
push
xchg
loope
call
cmpl
addr16
jle
imul
movsb
add
es
sub
adc
mov
jns
adc
cwtl
push
xor
rep
jb
and
leave
or
lds
and
xor
iret
lea
movsb
and
push
das
mov
push
jns
jo
cmpl
int
push
xchg
add
dec
jmp
cli
insb
mov
adc
mov
std
in
adc
notl
cld
addr16
mov
sub
pop
add
cmp
mov
into
add
mov
xor
or
shlb
dec
pop
inc
mov
cltd
test
adc
movsl
andb
mov
popf
shlb
adc
jecxz
mov
or
mov
cld
and
xor
or
in
jge
or
fildl
adc
push
pop
jl
test
sub
lods
or
rcrb
push
push
xchg
add
cltd
insb
int3
xchg
test
pop
aas
sub
push
cwtl
cmpsl
xor
dec
or
aad
fcomps
scas
cli
cs
or
out
add
dec
es
adc
cmp
ds
cld
inc
testl
out
xor
std
scas
mov
or
cld
add
dec
inc
clc
push
js
pop
insl
jmp
dec
adc
inc
in
jle
adc
xchg
xor
sbb
cmp
sub
imul
push
xchg
into
cs
ljmp
lds
pusha
jbe
and
cmp
cltd
insl
pop
dec
mov
cld
add
sbb
jne
addr16
data16
rcll
arpl
push
push
mov
sbb
and
ffree
fmull
pop
pushf
mov
dec
fwait
jno
nop
sarb
jbe
push
mov
mov
cli
dec
pop
sub
in
sbb
jb
jecxz
and
cmp
sahf
mov
nop
mov
push
push
mov
jno
clc
loop
pop
pop
lods
test
inc
mov
mov
loope
gs
xchg
jmp
sbb
outsb
xlat
inc
push
pop
inc
jne
in
push
push
sahf
out
es
hlt
js
and
adc
mov
imul
mov
mov
mov
fs
inc
jle
inc
lds
inc
jb
stc
imul
push
lods
ret
cmp
xor
mov
dec
push
int
aas
jp
insl
xor
adc
and
xchg
sub
das
in
addr16
jae
mov
mov
inc
lcall
sbb
fs
mov
xor
sbb
js
sub
int
scas
mov
sub
js
sub
pop
and
lds
out
dec
inc
or
xchg
sub
hlt
gs
mov
mov
push
xchg
push
mov
lods
push
mov
dec
aad
clc
stos
xchg
pop
sahf
insb
fs
loop
xor
adc
rclb
lods
cmpsl
add
cmp
ss
ret
out
lret
icebp
inc
sub
sbb
xchg
add
rol
push
dec
lahf
mov
insl
inc
mov
add
push
fsubrs
shll
shlb
nop
or
sub
loop
mov
lds
aad
data16
lods
clc
jno
cmc
cmp
or
ds
inc
repz
rorb
xchg
mov
pop
cmp
in
xor
push
subb
inc
jl
popf
pop
sarl
inc
mov
xor
imul
xchg
mov
lret
inc
push
ljmp
push
jo
pushf
push
into
imulb
pop
sbb
and
scas
mov
out
xchg
mov
fidivrl
push
sub
and
sti
arpl
push
xchg
mov
jg
mov
shlb
fwait
leave
dec
mov
out
lock
daa
xchg
dec
sahf
mov
xchg
test
sbb
mov
outsl
push
test
sbb
sahf
mov
imul
das
es
jno
jno
jbe
sbbb
jle
pop
je
inc
test
pop
push
imul
mov
stos
dec
pop
jmp
int3
dec
clc
xchg
lds
mov
pop
push
movsl
popf
dec
xchg
sbb
shll
or
mov
push
ret
mov
xchg
stos
mov
lcall
rolb
pop
out
mov
cmp
cmp
jb
test
mov
sbb
sahf
bts
xor
jb
xchg
cld
sbb
repnz
dec
cmc
arpl
pavgw
or
lock
add
je
popf
lock
or
aad
fnstsw
rcrb
jmp
xchg
xchg
and
out
xor
cmpsb
bound
mov
inc
fiaddl
cmp
outsl
in
mov
add
lret
or
inc
and
popf
out
add
adc
addr16
int3
or
adc
out
adc
repz
loopne
scas
cmp
fwait
cs
test
sbb
or
xor
outsl
xor
jmp
sub
ss
inc
hlt
scas
adc
and
pop
scas
xor
out
stos
aas
push
test
jl
lret
inc
adc
mov
data16
arpl
or
dec
jge
cld
xchg
nop
rolb
adc
loopne
lods
push
add
and
inc
popf
out
adc
jbe
jl
notb
pop
lds
div
aas
push
cwtl
sbb
fistpll
and
dec
js
jne
mov
jno
xor
jne
mov
jl
punpcklwd
in
or
jnp
data16
push
lret
mov
sub
jne
jle
out
pop
lock
jo
out
ret
outsl
insb
popa
stos
gs
or
rol
call
push
xchg
ret
mov
mov
es
mov
cli
shlb
daa
fdivr
aas
dec
mov
imul
cld
mov
pop
adc
push
aaa
outsb
mov
push
inc
les
stc
push
ds
dec
add
inc
mov
inc
mov
jl
mov
push
cs
and
hlt
pop
jbe
loope
xor
dec
jmp
or
out
jp
push
test
xor
cmp
jne
test
lea
andl
mov
fs
xor
scas
lret
shll
dec
icebp
add
lds
test
out
repnz
dec
in
sti
inc
in
or
stos
sub
clc
or
faddl
jnp
mov
nop
fildl
and
mov
push
leave
jb
mov
inc
or
inc
movsb
push
pusha
cmp
xor
divb
cmp
mov
inc
push
cmp
es
adc
xchg
add
push
and
mov
add
fadds
in
jnp
pop
jne
arpl
aam
dec
lods
clc
jb
mov
shll
dec
sbb
clc
in
mov
jae
scas
inc
repz
aad
mov
enter
adc
add
inc
mov
push
push
sbb
rclb
push
mov
xchg
rcr
xor
not
ss
ja
inc
pusha
into
out
mov
das
fistpl
push
cmp
mov
daa
push
into
scas
insb
jl
sub
pop
fs
test
mov
dec
stos
cmc
sbb
xor
icebp
mov
mov
add
cmp
inc
cmpsl
add
fadd
int3
lret
xchg
jb,pt
out
inc
adcb
xchg
stos
js
mov
hlt
lahf
stos
test
ljmp
jae
outsb
popf
and
sbb
sub
inc
int
inc
hlt
jbe
sbbl
and
out
mov
xchg
mov
pushf
sbb
inc
and
sub
xchg
ret
dec
sub
cmpsb
lock
add
adc
pop
push
sbb
ret
jmp
push
rorl
or
fs
adc
ret
inc
inc
dec
xor
js
add
and
inc
sub
scas
and
sub
or
cli
xchg
xchg
jno
std
fstpl
dec
out
scas
fsubrl
cmc
pop
and
enter
and
das
outsb
out
scas
cmp
lcall
add
loope
addr16
jle
rolb
or
frstor
dec
mov
mov
xchg
lock
xchg
dec
pop
clc
push
adc
dec
or
lret
dec
lods
outsb
push
sbb
je
cltd
adc
push
xchg
iret
fsubrl
pop
andl
addr16
xchg
jmp
mov
lret
or
shlb
mov
int
fstps
scas
mov
loopne
int3
js
lods
lahf
dec
mov
sbb
ja
ss
mov
mov
jecxz
sbb
adc
pop
pushf
jl
mov
addr16
iret
insl
daa
adc
pop
add
repz
pop
lcall
dec
adc
std
adc
mov
popa
and
test
leave
cmc
lods
imul
and
addl
and
test
std
cmc
sub
jmp
pusha
push
stos
out
adc
nop
push
pop
jns
mov
fcomi
push
push
fcomip
jmp
inc
xor
popa
dec
mov
addr16
mov
or
xchg
jecxz
lock
in
add
cmp
push
mov
sbb
add
pop
jno
lods
negb
arpl
and
sti
pop
cltd
jns
lret
sbb
ss
insl
incb
xchg
sbb
inc
cmp
lea
jne
mov
cmpsl
popa
shrb
out
fcmovnu
mov
dec
xchg
jbe
add
adc
outsb
pushf
and
dec
outsb
xchg
mov
pop
shlb
dec
mov
call
pop
pop
push
dec
sbb
lock
insl
cmp
xchg
js
addb
adc
xor
notb
imul
insb
mov
dec
out
adc
sbb
cmp
dec
inc
xor
pushf
call
rcr
xchg
jmp
cmp
jbe
mov
pop
adc
rcr
mov
mov
out
lret
fsubrl
cltd
push
mov
jmp
inc
test
aaa
and
scas
xchg
fs
test
xchg
xor
cli
enter
push
and
clc
jmp
in
ret
xor
xchg
pop
dec
pop
sub
mov
mov
jnp
aaa
jno
mov
mov
dec
cwtl
add
fimuls
sarl
adc
inc
out
sub
filds
fnstsw
push
cmp
fst
adc
push
pop
loope
dec
loopne
call
pop
xorb
inc
pop
xchg
inc
pop
ret
ljmp
push
cmp
push
xor
cmp
andb
or
xchg
jge
xchg
jmp
sbb
mov
xchg
pop
es
out
aaa
stos
test
sbb
adc
aad
negb
cmp
in
xor
fisttpll
or
dec
xchg
jbe
in
sti
sub
leave
mov
add
adc
push
push
pop
insl
inc
insl
fcomp
in
push
insb
jge
mov
push
mulb
aam
mov
sub
loopne
jle
mov
clc
push
mov
xchg
push
and
pop
sbb
out
iret
jp
xchg
inc
cmpsb
loope
mov
cs
cld
ret
dec
stos
aas
mov
sbb
jge
dec
cmp
xor
sub
shll
je
fsub
sub
data16
aad
xchg
addb
jecxz
iret
mov
test
cmp
loop
dec
mov
push
add
adc
aaa
into
fwait
clc
std
js
aaa
jne
add
pop
ds
sbb
cmpsb
scas
mov
cmp
sbb
dec
lret
push
adc
cmpsb
leave
into
leave
jmp
pop
sub
push
adc
inc
loopne
inc
inc
and
movsl
jp
adc
aad
xor
fcomps
jg
dec
lods
popa
imul
xchg
movsl
xchg
adc
add
pop
js
pop
inc
xchg
fadds
mov
out
xor
bound
add
repnz
sub
dec
jae
sub
xor
bound
lds
js
and
insb
test
sbb
xchg
jecxz
imul
xchg
ret
sti
xchg
clc
sub
shll
sub
fsubl
and
insl
pop
adc
loope
lcall
fistl
adc
in
pop
dec
sbb
das
and
mov
imul
cmp
jle
das
divb
xchg
and
or
add
add
push
icebp
sahf
jb
fldt
insb
push
push
xor
out
scas
and
mov
cmp
into
push
xlat
sti
sbb
pop
shrl
rcrb
sti
adc
or
bound
std
stc
mov
mov
xchg
testb
sub
ficoms
pop
cmp
sbb
dec
jg
add
adc
mov
cmp
fcomip
fisttps
out
out
and
mov
xchg
out
addl
or
sbb
pop
xchg
sub
test
outsb
sahf
xchg
sbb
scas
xorb
jg
mov
sti
lret
jmp
dec
sbb
in
int3
sahf
lret
gs
mov
jl
int3
popa
push
xchg
bound
lods
push
imul
or
iret
not
mov
push
fidivs
push
inc
xor
out
pusha
mov
push
hlt
pop
xor
clc
icebp
xlat
mov
mov
imul
or
sarl
sbb
jno
gs
andl
mov
rcl
cmp
leave
push
add
imulb
and
out
int3
sbb
mov
ljmp
sbb
mov
xorl
nop
repz
test
stos
es
mov
mov
enter
sub
fmul
pop
jg
inc
and
pop
push
sub
mov
lea
jbe
sub
cmp
or
cli
popa
xchg
mov
mov
stos
enter
outsl
movsl
movsb
sub
xor
add
outsb
in
test
gs
xchg
jl
orl
add
sub
mov
int3
xchg
rclb
int3
push
and
ret
sti
xchg
jno
and
jp
push
bnd
pop
or
aaa
call
jp
or
mov
mov
adc
and
scas
add
jl
mov
adc
push
sub
out
lret
add
loope,pt
addr16
adc
or
je
mov
fisttps
mov
adc
sub
push
jne
cld
lahf
mov
cmp
js
push
mov
loope
lock
dec
pop
pusha
xchg
adc
mov
xchg
imul
mov
mov
mov
and
outsb
adc
pop
mov
mov
out
dec
inc
jmp
push
jbe
and
je
into
imul
and
or
mov
in
into
dec
das
xchg
out
sbb
jbe
mov
dec
stos
sbbb
scas
lock
mov
imul
dec
lods
or
xor
xchg
sbb
mov
lahf
stos
ljmp
in
push
aas
push
push
dec
fistl
icebp
xor
xchg
push
in
orl
pop
scas
add
mov
push
imul
fwait
pop
fidivs
enter
adcb
mov
pop
and
das
cmp
xor
mov
imul
mov
sbb
rcrl
aas
nop
mov
iret
ja
bound
inc
jbe
add
and
cmp
sbb
clc
xor
sahf
xchg
test
fcomps
loope
fbld
adc
out
shrl
pop
test
leave
mov
mov
shll
push
bound
pop
psubusw
mov
and
jns
pop
mov
xchg
and
lret
mov
enter
lahf
jg
and
xchg
sbb
and
mov
aaa
test
sbb
jp
mov
cwtl
pop
aaa
bnd
es
add
mov
xor
outsb
dec
fwait
mov
rol
mov
std
and
stos
mov
fisubrl
add
adc
cmp
bound
loopne
dec
stc
mov
shrb
adc
fwait
mov
mov
movsb
mov
adc
testl
sarl
call
jmp
xor
inc
and
lcall
and
or
ffreep
fsubrs
push
push
dec
stos
xchg
repnz
cmpsb
xor
les
addr16
xchg
push
mov
push
xor
lods
pop
push
hlt
lret
jl
jbe
xchg
cmpsb
in
xchg
lock
lds
pop
add
ficompl
jmp
loop
or
inc
dec
mov
cli
push
fcomip
data16
push
aaa
mov
inc
cli
movsl
iret
xchg
pop
mov
adc
push
dec
loopne
ljmp
out
and
add
aas
ja
fidivs
ret
popl
into
shll
test
or
dec
mov
test
inc
pop
or
push
imull
xor
adc
dec
adc
or
jecxz
in
push
push
adc
pop
lcall
and
imul
lcall
das
bnd
mov
jle
xor
mov
and
pushf
shrb
or
leave
in
fwait
stc
sbb
shr
cmp
pmulhw
sbb
xor
mov
jg
insl
jg
test
test
push
cwtl
cs
leave
in
cmpsb
adc
les
xorb
adc
mov
int
sub
arpl
insb
xchg
mov
clc
push
push
fwait
ret
leave
xchg
and
bswap
fidivl
push
dec
push
sbb
pop
adc
rdpmc
mov
fwait
call
test
lods
in
mov
into
dec
push
hlt
adc
pop
sarb
sbbl
xchg
ja
cmp
or
cmp
xchg
inc
jbe
mov
insb
xlat
sbb
lock
add
xor
and
lods
adc
insb
mov
daa
fisubl
xor
jmp
pop
jle
in
jne
les
xor
cmp
shrb
jmp
mov
aad
sub
inc
pop
add
aaa
flds
out
xor
scas
cwtl
rcrb
mov
jecxz
lea
stos
mov
int3
add
out
incl
adc
push
scas
js
in
and
dec
pop
pop
inc
pop
movsl
xchg
mov
outsb
push
or
mov
jnp
dec
sbb
pop
inc
and
jnp
mov
mov
sub
fnstsw
dec
jae
adc
push
aam
movsl
pop
inc
out
xchg
inc
adc
and
pop
pop
pop
jp
ss
fwait
jns
mov
add
push
leave
out
addr16
mov
xor
sbb
ss
adc
lock
mov
and
or
inc
clc
jnp
pusha
xor
lahf
mov
int
jnp
shlb
cs
in
and
fs
lahf
adc
jmp
cmpsl
call
es
mov
or
cmpsb
fdivl
pop
pop
ror
adc
fbld
add
and
mov
mov
sub
rcr
aaa
push
mov
aad
jbe
push
js
leave
push
mov
cmpsl
cmp
adc
enter
mov
jb
cmpsb
mov
cltd
mov
jg
test
lods
bound
sbb
or
test
outsb
mov
mov
mov
rolb
sub
scas
jp
fisubs
repz
and
lock
sti
lret
cmpsl
popf
gs
mov
or
in
pop
dec
and
ljmp
dec
mov
pusha
add
pop
sub
out
lods
aad
aad
out
in
pop
jno
movb
or
fsubrs
push
mov
out
jo
and
movsl
mov
sub
sub
push
jg
inc
xchg
pusha
dec
in
inc
sbb
outsl
jle
push
inc
cmp
mov
cmp
lahf
sbb
lahf
cmp
sti
cli
pop
sbb
das
das
add
sbb
cmpsl
addb
inc
xchg
and
das
mov
shrl
pop
into
push
stc
lods
mov
inc
movsl
fst
in
adc
cmp
fistpl
fs
pusha
jl
sti
stos
sbb
js
mov
mov
push
xlat
xchg
xor
shlb
mov
popa
roll
add
cli
aam
in
jnp
fs
in
jmp
jae
dec
jbe
insb
push
hlt
test
sbb
dec
std
mov
xor
popf
jns
stos
mov
push
sub
sbb
adc
or
repz
mov
mov
push
cwtl
lret
aaa
int3
ficomps
sbb
adc
sbb
loop
inc
movsl
aam
or
lods
iret
xchg
mov
sbb
arpl
repnz
outsb
in
gs
das
fistpl
cmp
int
or
cli
scas
scas
xchg
mov
insb
jle
push
sbbl
jge
adc
pop
push
mov
sub
mov
mov
fs
jne
push
cmp
fs
xlat
sub
lock
cs
xchg
push
in
call
pusha
es
jnp
pop
lds
and
pop
std
xchg
xchg
mov
out
shll
filds
sbb
push
nop
stc
inc
jb
mov
iret
inc
lret
pusha
ljmp
mov
out
insl
mov
call
xchg
icebp
call
push
mov
pushf
or
ja
dec
popa
cli
cmc
jbe
lret
adc
ret
and
xor
arpl
push
in
mov
mov
pop
dec
sub
jge
xchg
mov
ds
mov
pop
cmc
pop
xlat
cmp
bound
sbb
or
dec
cmp
inc
leave
daa
arpl
insb
sub
and
jecxz
fadds
xor
xchg
faddp
out
add
mov
sbb
fimull
cld
aaa
mov
aas
lock
push
dec
ja
or
repnz
push
jmp
into
sub
orb
repz
jnp
shl
xchg
add
pop
dec
outsl
xchg
decb
insl
xlat
mov
xor
into
popf
out
rolb
xchg
pop
mov
mov
mov
enter
jg
inc
and
push
out
add
movsl
pop
adc
bound
mov
mov
push
scas
adc
pop
push
bound
fwait
pop
push
test
and
and
xor
std
stos
leave
pop
or
nop
add
mov
loope
sbb
fs
adc
jecxz
je
dec
les
stos
arpl
cmc
jbe
mov
sbb
push
shrl
shl
sarl
push
imull
in
inc
pop
stc
js
ja
addb
outsb
mov
scas
popf
lret
jle
in
add
dec
popa
cmp
insl
icebp
or
in
and
ficompl
ret
pop
add
sbb
aad
cld
js
jne
push
je
cmp
cld
lret
mov
mulb
in
lret
insl
jbe
sbb
cmpsb
pop
gs
ss
faddp
test
ja
pop
xor
push
dec
pop
mov
or
jnp
or
pushf
mov
fisubrl
not
and
jnp
addr16
popf
out
adc
mov
push
pushf
sub
sbb
inc
insl
dec
jno
das
dec
jns
pushf
cmc
push
idivb
loopne
jle
ja
cmp
cmp
lret
ret
push
out
dec
ljmp
leave
cmpsl
lea
bndldx
adc
sub
jns
arpl
inc
imul
pop
push
inc
mov
bound
xchg
outsb
ljmp
mov
rcr
out
lret
inc
mov
sbb
mov
ja
dec
jmp
test
test
iret
cmp
rcrb
mov
xor
stos
cmp
cmp
add
or
rolb
mov
or
mov
ds
mov
mov
cmp
sbb
fwait
and
ja
pop
cmpsl
pop
outsl
in
je
push
in
sti
fimull
sub
dec
rcrl
test
pop
jecxz
call
jbe
ss
rorl
lds
dec
popa
outsl
in
out
pop
shrl
xor
addr16
mov
push
std
pop
adc
stc
add
mov
fnstenv
or
mov
mov
pop
addr16
fdivl
mov
adc
cmpsl
inc
jns
icebp
lea
repnz
mov
xchg
movsb
int
fcomps
outsb
adc
sahf
adc
sub
aas
or
lods
data16
cwtl
mov
ljmp
imul
outsl
jno
adc
or
jns
dec
adcb
xlat
pop
loop
cmp
mulb
js
out
inc
icebp
cmp
sbb
sub
dec
or
movhps
sbb
or
push
aas
frstor
sbb
pop
jbe
push
fimull
cltd
cs
inc
pop
adc
cld
sahf
sub
shrb
sbb
subb
cltd
cltd
mov
scas
sub
cmp
pop
cmc
lret
jns
mov
sbb
add
push
fildl
pusha
xor
shl
popa
sbb
jb
outsl
test
sub
imul
xor
cli
adc
jle
fsubrs
jo
outsl
add
int3
cmpsb
int
cwtl
shl
dec
push
add
jl
aad
xor
in
and
push
and
jns
sub
jle
lods
clc
mov
push
test
push
insl
jmp
movsb
cmc
addr16
jmp
inc
enter
fldcw
fsubl
mov
popa
and
xor
lahf
sub
push
ljmp
xchg
push
out
pop
call
cmpb
arpl
and
mov
jne
test
clc
inc
jno
xchg
loope
shlb
std
fisubl
insl
dec
cmp
adc
shll
mov
sub
mov
sub
roll
aam
loopne
inc
bound
movsl
mov
add
push
cmp
into
xor
add
push
or
pop
jp
js
jne
cmp
andb
pop
pop
daa
test
sub
mov
mov
popf
fcompl
lods
xor
in
or
fsub
enter
and
lea
xor
imul
and
xchg
fistpll
test
dec
pop
jecxz
cmpsb
insb
gs
bound
xchg
sbb
xchg
lret
inc
in
mov
or
add
lods
xchg
in
mov
cmc
ret
push
pop
fcoml
adc
fisubs
inc
pop
push
testb
pop
mov
loope
mov
mov
in
jnp
adc
fsubrl
in
paddsb
stos
in
xorb
add
pop
add
repz
inc
test
push
inc
lds
jmp
cli
ret
mov
xor
fdivs
cltd
out
mov
xchg
xchg
mov
fisttpll
mov
push
lods
lods
mov
push
lods
iret
scas
lahf
call
fnsave
jne
in
and
xor
xchg
popf
xchg
dec
dec
cmc
out
lahf
test
jno
xor
addr16
lods
jnp
mov
xor
iret
cmp
pop
push
out
gs
jge
inc
shlb
repz
xor
jnp
fs
inc
add
jo
shl
icebp
je
cwtl
xchg
adcl
imul
and
insb
scas
in
fstpl
xchg
scas
or
jo
out
xlat
mov
jns
xor
fstps
sub
pop
adcb
fbld
or
dec
mov
mov
sub
call
pushf
leave
xchg
lock
fidivl
outsl
sbb
jge
jbe
stos
push
test
xchg
inc
addr16
rorl
xor
shlb
cmp
mov
cs
mov
adc
add
xchg
cmp
xchg
iret
inc
aas
add
jbe
xchg
push
and
jecxz
ja
jno
push
popf
lret
in
and
movsl
and
imul
push
or
pop
inc
cmp
imul
mov
test
cld
xor
lret
dec
cltd
inc
pop
jne
sbb
dec
imul
les
jbe
sahf
stos
xlat
fstl
das
mov
cmpsl
data16
xor
fisubrl
xor
jecxz
out
aas
pop
dec
cltd
movsb
jmp
pop
mov
xchg
movl
mov
sub
insb
stc
pop
sbb
outsl
pop
hlt
adc
mov
stc
xchg
loopne
dec
adc
mov
insb
cltd
inc
lahf
cltd
aam
cmp
jne
iret
dec
xchg
push
pop
sub
pop
mov
sub
mov
inc
mov
xor
idivl
adc
mov
mov
aaa
push
loopne
inc
pusha
pop
or
iret
loopne
mov
jbe
sub
shl
sub
ffreep
push
add
mov
cli
xor
mov
out
or
sbb
xchg
iret
push
bound
repz
enter
sub
mov
pop
adc
add
leave
xchg
sbb
push
xchg
inc
scas
jbe
in
add
mov
repnz
ja,pn
insb
popf
sub
pop
mov
inc
pop
mov
add
lret
pop
mov
mov
jne
js
adc
push
mov
add
fincstp
stos
mov
xor
inc
aaa
mov
lods
rcl
insl
mov
push
testl
popa
mov
andl
mov
mov
into
mov
je
in
or
je
dec
jbe
dec
xchg
pop
shrl
cwtl
push
sbb
data16
mov
ljmp
mov
psrlq
fwait
pop
bound
aas
pop
jb
mov
ret
mov
aad
fs
pop
loop
fs
xor
push
cmp
cli
xor
sbb
mov
and
jnp
dec
xchg
adc
sbb
and
cmpsb
ljmp
ficomps
xchg
nop
scas
mov
outsl
xchg
add
mov
or
mov
adc
dec
xchg
andb
imul
loopne
imul
pop
add
jmp
int
loop
dec
push
and
dec
outsl
in
clc
mov
sbb
fisubl
push
cmp
pop
pop
mov
push
sbb
xchg
mov
addr16
inc
jbe
pop
push
cwtl
and
insl
and
cmp
clc
adc
push
or
jg
cmp
xchg
in
daa
adc
cli
and
pop
jb
movsb
pop
inc
out
xor
movsl
in
std
xchg
pop
mov
mov
pop
inc
ret
ds
rorl
sbbl
adc
outsb
leave
pop
jmp
push
dec
fimuls
rcll
cmp
sub
ljmp
rclb
add
lret
ret
icebp
cmp
lods
fstps
aas
dec
xor
ss
bnd
fcmovb
fs
mov
pop
dec
movsb
fs
test
xlat
lds
push
leave
fs
xchg
dec
pop
enter
lock
jmp
dec
push
xchg
jb
jnp
sbb
add
fs
mov
cmp
stos
push
mov
addr16
mov
orb
mov
xchg
out
out
xor
cmp
add
cltd
fmuls
push
mov
sub
jnp
aad
inc
mov
aam
mov
jno
add
xchg
fldenv
fidivrl
sahf
lock
sti
sbb
push
cmp
xorl
push
pushl
bound
push
sbb
aad
rolb
sahf
lock
cmc
rcll
sbb
fists
jno
jecxz
fsubrs
adc
adc
pop
cmp
xor
cwtl
and
es
push
roll
push
loopne
in
mov
mov
sub
mov
dec
idivl
mov
pop
jge
test
shll
pop
mov
out
insb
jae
test
push
add
scas
jmp
mov
cmc
sbb
ljmp
pop
inc
hlt
out
mov
jnp
dec
sub
clc
jne
int3
inc
cmp
and
ljmp
add
xchg
mov
int
loopne
mov
adc
pop
loope
ss
scas
bound
pushf
push
xlat
rol
hlt
adc
push
jmp
es
das
and
xchg
gs
push
loope
jns
mov
mov
mov
test
cmp
inc
aas
pop
fs
xchg
cwtl
mov
or
or
cmpl
out
mov
lret
mov
lret
pusha
fildll
cmp
hlt
cwtl
out
neg
ret
notb
add
sub
pushf
stc
xchg
xlat
call
insb
xor
push
subb
lods
jg
dec
xchg
mov
xchg
movb
movsb
xor
call
mov
dec
xchg
aas
icebp
add
and
into
jb
dec
sub
hlt
dec
cmp
or
addb
cmp
cs
jno
lahf
jg
rorb
out
dec
and
scas
loop
cmp
mov
cmp
inc
in
cld
dec
pop
ss
fisubs
xor
fistl
bound
xor
sub
mov
cmpb
jp
xor
mov
test
mov
inc
xchg
mov
addr16
adc
add
xchg
push
xorb
pop
mov
sbb
adcl
rol
pusha
or
and
lock
jae
stos
adc
in
jmp
mov
push
test
ljmp
int3
mov
sti
adc
mov
jl
cmpsl
loopne
icebp
mov
mov
mov
leave
xor
or
sub
leave
push
sbb
testl
dec
rcl
jb
repnz
pop
pop
std
sbb
xlat
out
mov
cld
stos
lahf
and
mov
adc
xchg
dec
push
ljmp
cmp
cli
mov
sbb
adc
fs
stos
xor
jne
and
addr16
movsl
das
push
xchg
push
ds
adc
xchg
sbb
daa
filds
cwtl
inc
in
jp
ret
aaa
cmp
int3
inc
or
mov
push
mov
aad
out
lcall
loope
add
or
lods
sbb
outsb
cltd
std
icebp
mov
xorb
in
cmp
cmp
loopne
daa
pusha
sahf
fsubs
les
sbbl
fisubrs
std
in
pop
or
mov
sahf
pop
cmpsb
sbb
push
loop
scas
pushl
jns
mov
stc
push
cmp
aaa
fistps
fadds
les
and
addr16
arpl
lds
shll
sbb
aad
stc
out
divb
aaa
xrelease
divl
and
scas
mov
scas
xchg
jg
scas
xchg
pop
cmp
and
imul
not
xchg
adc
fisubl
adc
lcall
sti
inc
int3
mov
push
aaa
adc
push
hlt
mov
push
popa
sub
addr16
imul
dec
mov
iret
mov
adc
movb
aam
orb
mov
add
scas
mov
lahf
mov
test
sbb
rcll
ret
insb
mov
jg
movsb
fsub
mov
sbb
rcrl
cwtl
mov
jle
jno
mov
hlt
cld
add
andl
xchg
cltd
jb
inc
ret
sub
sbb
gs
leave
daa
lret
or
mov
pusha
or
sbb
out
out
xchg
jg
mov
out
mov
cwtl
mov
outsl
inc
or
decl
or
inc
shrl
js
jg
pop
sbb
or
adc
inc
sub
imul
cmp
cmpsl
mov
push
daa
iret
outsb
aas
xchg
or
fstp
inc
inc
jno
xchg
iret
xor
jl
rolb
mov
jl
pop
mov
pop
adc
push
cmpl
mov
pop
jne
or
dec
sub
inc
mov
mov
xlat
mov
call
out
and
cmp
pop
xchg
xchg
mov
shl
ret
adc
pop
fwait
aaa
les
jae
fildll
cmp
pop
je
loope
push
and
xchg
imul
pop
cli
out
mov
test
and
or
cmp
loopne
dec
cmp
or
scas
pop
and
fsubrl
cmpsl
push
sbb
in
sahf
aam
cmp
jnp,pt
dec
xchg
inc
loope
jae
add
dec
cmp
outsb
cwtl
push
lods
and
inc
cmp
adc
popa
pop
iret
push
push
psubb
mov
inc
cmp
fldt
push
mov
in
mov
cmpsl
jae
inc
out
sbb
jbe
fisubs
and
xor
xlat
dec
rcrl
or
sbb
cmp
mov
mov
ret
adc
jge
jp
mov
pusha
nop
fiaddl
or
mov
jg
out
lods
mov
mov
mov
test
lods
jle
mov
add
inc
xchg
mov
push
or
imull
test
into
sub
push
push
lret
fs
mov
xchg
inc
bound
rclb
fmuls
push
push
inc
sub
xor
mov
je
xchg
push
loope
mov
pop
xor
sub
mov
icebp
pop
adc
cmp
push
xchg
pop
push
xchg
clc
cli
test
fisubrl
out
inc
cli
or
imulb
mov
pop
sbb
sbb
mov
popa
xchg
in
inc
cmp
mov
ljmp
xchg
out
xor
xor
sub
cmpsl
pop
repnz
int3
inc
sbb
lahf
divl
and
mov
sub
addb
cmc
mov
jbe
std
sbb
cmpb
ret
out
sub
dec
sbb
pop
leave
inc
jnp
mov
push
lods
pushf
mov
mov
cmpsl
rcrl
jmp
pop
pop
add
jmp
xchg
mov
fbstp
lcall
push
test
pop
sar
sub
mov
and
js
icebp
pop
pop
xchg
popa
test
insb
jmp
jecxz
sbb
enter
cmpb
inc
in
xchg
and
bound
clc
push
gs
mov
shll
outsl
cltd
mov
jmp
sub
repz
mov
mov
movsb
mov
fldt
rorl
data16
loopne
mov
popa
cmp
test
mov
inc
sar
cmp
ljmp
lret
scas
xchg
pop
ret
cmp
lods
rcrb
shr
and
pop
jo
or
clc
pop
sub
rolb
push
aaa
cltd
inc
test
inc
jecxz
jge
push
test
cmc
sbb
and
lock
xlat
lds
icebp
mov
mov
pushf
xor
pushf
mov
push
bound
es
fstps
fstpt
flds
inc
fisttpl
push
or
xor
cmpsb
mov
jg
into
mov
icebp
test
les
outsb
pop
outsb
sbb
mov
sbb
jge
or
dec
insb
aam
inc
adc
push
jmpw
jecxz
ret
sub
outsl
int3
or
mov
and
sub
jmp
loope
cmp
jns
ja
cmp
cs
pusha
mov
push
push
xchg
sub
pop
in
cmp
push
and
push
sbb
mov
sbb
popf
or
insl
fsubrs
xchg
in
push
mov
xor
clc
insl
cltd
movl
sbb
jg
je
aas
rclb
shrb
in
adc
inc
daa
insb
mulb
mov
mov
outsl
push
xchg
jbe
adc
pusha
popa
xchg
sbb
push
mov
nop
add
lods
lcall
mov
cmpsb
sub
std
clc
and
addr16
loope
xchg
in
inc
sub
repnz
push
xor
xor
inc
clc
mov
shrb
lret
cltd
shrb
es
out
xchg
sbb
fistl
scas
test
jmp
dec
loopne
test
insl
repnz
mov
cmpsl
stc
xor
jmp
mov
pusha
cli
cmp
cmp
repz
arpl
xchg
test
imul
fdivr
push
pop
mov
mov
add
mov
mov
iret
and
pushf
cmp
out
stos
popa
shl
cli
jbe
jnp
nop
or
jbe
idivb
mov
filds
sti
push
outsb
or
shrl
and
mov
sbb
pop
gs
add
aam
test
or
popf
xchg
mov
stc
jo
sbb
pop
icebp
enter
adc
stos
inc
adc
push
iret
mov
jns
lcall
dec
das
mov
mov
push
or
les
jmp
pop
mov
and
mov
pop
push
cmpsl
xor
test
jno
sbb
xchg
inc
cs
je
fldcw
jno
dec
pop
sub
addr16
mov
aaa
pop
je
iretw
or
insb
inc
or
dec
inc
lcall
cmp
push
or
fldcw
mov
mov
push
popl
stos
int
pop
fisttps
xor
int
xor
cmp
shl
hlt
cmpsb
stos
cmp
jbe
in
lock
cmp
dec
cmp
or
xchg
inc
mov
lret
push
daa
jb
adc
sbb
jge
cmp
xchg
mov
test
sub
pop
push
mov
add
adc
clc
bound
jle
fdivrs
fisttpl
cltd
lret
fxch
imul
add
popf
push
popa
sbb
ja
ja
pop
xlat
xchg
xor
cmp
lret
mov
fwait
push
mov
test
das
iret
sub
ljmp
pusha
cs
popa
pop
pusha
roll
sub
outsb
adc
push
pop
scas
movzbl
jne
out
std
lahf
cmc
pop
inc
shr
mov
cwtl
cs
pop
retw
push
mov
mov
jg
cmpb
in
inc
dec
popf
aam
inc
dec
gs
lock
jb
lods
dec
xor
shrl
dec
and
jo
fnstenv
cltd
insl
fisttps
mov
imul
mov
jo
test
cmp
jg
lahf
daa
ds
jae
adc
mov
rcpps
mov
pusha
xlat
push
and
pop
imul
mov
fdivrl
mov
mov
jle
into
shll
scas
stc
xchg
cmp
repz
adc
mov
cmp
test
push
cmc
xor
sbb
int
aaa
jae
pop
imul
dec
xchg
ret
dec
sbb
add
push
pop
jl
out
push
add
dec
pop
xchg
bnd
mov
out
orl
cwtl
mov
dec
jl
out
lea
shll
adcl
push
int3
pop
mov
ret
mov
xchg
jp
clc
jg
and
sub
int
cld
adcl
nop
into
pop
stc
pusha
dec
stos
imul
jbe
dec
ret
mov
arpl
mov
mov
inc
xchg
lea
das
adcb
fwait
xchg
cmp
stos
cli
dec
dec
outsb
and
lock
imulb
orl
in
inc
mov
push
subl
lods
jo
aad
data16
pop
popa
int3
adc
shlb
pop
push
cmp
subb
and
mov
add
enter
mov
mov
or
xchg
push
inc
dec
pop
pop
shr
ror
inc
or
cmpsb
gs
mov
mov
xor
sub
mov
sub
sub
or
mov
in
push
jmp
xor
jo
and
es
xchg
sti
mov
push
and
out
pop
iret
jle
inc
lahf
mov
stos
insb
lahf
inc
cld
mov
mov
cli
int3
mov
pusha
fstpt
fst
daa
cltd
lahf
add
mov
xchg
push
fs
mov
bound
sub
js
add
mov
adc
add
lods
enter
mov
cltd
dec
into
and
mov
pop
sbb
xor
ficoms
hlt
mov
sbb
pop
test
jno
push
out
inc
lret
scas
push
js
cs
addl
insb
push
test
push
popa
sbb
icebp
int
or
test
lcall
neg
stc
jbe
ja
xor
pop
mov
or
add
adc
addr16
inc
stos
jecxz
xchg
mov
fisttps
popa
add
and
mov
aam
push
push
sti
push
mov
nop
sub
fsubrp
xorl
out
call
roll
sub
cltd
dec
push
mov
mov
or
in
add
inc
mov
push
xchg
lods
cld
out
int
subb
in
rorb
xlat
stos
mov
cmp
daa
lock
jne
in
fwait
push
js
push
rcrl
mov
loop
fists
ss
cmp
push
mov
lahf
shl
add
adcl
icebp
lret
inc
push
das
jg
lret
mov
lods
mov
insl
sti
xlat
jno
mov
fwait
clc
sub
js
push
add
imul
inc
sub
fisubrs
sub
scas
dec
and
push
fmuls
cltd
cmp
or
push
aam
jo
mov
xchg
nop
xorl
sti
inc
adc
mov
pop
xchg
fs
movsb
iret
mov
lods
cmp
and
ret
sub
and
xchg
pop
cmpb
dec
dec
jmp
fsub
in
sbb
nop
mov
ss
stos
jmp
mov
sub
mov
arpl
sti
pop
sub
dec
ss
xchg
popf
sbb
in
sub
mov
outsb
shrl
mov
inc
addl
xorb
imul
stc
pop
stc
jcxz
js
mov
sbb
sbb
dec
mov
into
push
imul
je
fcomps
and
cmp
sub
mov
xchg
shll
fs
mov
cmp
cmp
out
cli
das
outsb
cmp
imul
subl
addl
out
es
jge
push
test
push
cmp
inc
iret
loopne
pop
push
and
push
repz
mov
pop
jno
mov
mov
mov
add
and
xchg
sahf
fcmovnb
stc
scas
iret
outsl
lret
insb
pop
popf
out
dec
fucomip
clc
xchg
mov
ljmp
loope
aam
inc
aaa
clc
dec
adc
call
push
int
fwait
fwait
mov
cwtl
adc
sub
in
push
ror
cmp
jecxz
fisubs
mov
cmp
sbb
mov
or
nop
xchg
movsl
sub
jno
lahf
jno
pop
pop
mov
add
jne
repnz
mov
and
pushf
sbb
xchg
pop
xlat
jnp
sahf
sti
std
lods
adc
sarl
sahf
mov
push
out
sbb
sub
gs
ffree
add
call
cs
outsl
xor
negl
push
inc
in
dec
ja
aad
add
lahf
push
loope
dec
dec
jl
cmp
ret
add
inc
jge
mov
test
mov
popa
add
and
push
push
mov
xchg
add
aaa
bound
push
aaa
in
push
movsl
xor
sub
mov
pop
cwtl
mov
mov
es
in
inc
and
out
fucomip
icebp
xor
xchg
cmc
push
rcr
test
mov
adc
mov
imul
or
mov
xchg
cli
mov
cmp
push
bound
xchg
mov
lea
push
cli
mov
sbb
push
pusha
out
icebp
inc
in
add
cmp
adc
mov
outsb
xor
sbb
xor
mov
pop
xchg
mov
std
add
sbb
cmp
test
shlb
fwait
add
insl
fcoml
js
mov
pop
add
xchg
stos
rcrb
xor
fisubrs
mov
rcrl
mov
addb
shll
xchg
jb
push
movsl
inc
push
jne
dec
outsl
dec
mov
stos
movb
jle
mov
sub
ds
mov
sbb
cmp
fstps
ret
push
cs
pop
ja
dec
push
push
or
pop
sub
mov
roll
inc
shrl
ret
pop
cmp
push
fbld
adc
push
iret
mov
enter
in
int
or
cmpl
xchg
bound
dec
test
stos
pusha
sub
cli
xor
lret
aam
add
adc
mov
sub
dec
cmp
jg,pn
fcoml
add
jns
sbb
lret
ss
aad
add
or
push
pop
mov
cmp
nop
jnp
push
in
dec
mov
xchg
mov
repnz
mov
and
in
dec
xchg
jno
pop
mov
subb
lock
xchg
out
and
adc
std
scas
int
sub
pusha
cmp
lods
inc
pop
push
add
and
xchg
pop
jbe
sbb
cmpsb
outsb
nop
movb
inc
sbb
ja
push
test
add
cltd
lret
push
outsl
mov
fisttpl
mov
sub
bound
dec
fildll
cld
addb
xchg
cwtl
jl
les
shlb
adc
pop
fcompl
mov
out
jb
in
into
pop
sbb
ficomps
rcr
in
lcall
adc
movsb
movsb
clc
sbb
in
xchg
repz
pop
lahf
test
lahf
dec
mov
xchg
mov
mov
mov
mov
and
xchg
pop
dec
mov
xchg
sarl
xchg
xchg
sbbl
loopne
add
dec
xchg
dec
je
fistps
shlb
adc
aad
movsb
rcrb
imul
mov
bound
or
cmpsb
bound
icebp
sub
sbb
cs
ljmp
pop
push
adc
and
pop
imul
add
stos
pop
into
sbb
jae
pop
inc
sbbb
adc
ja
dec
movsl
test
jns,pt
mov
jle
push
push
jbe
push
lods
inc
jno
scas
cs
stos
mov
or
dec
call
out
and
addb
xchg
adc
xlat
sbb
mov
movsb
cmp
rorl
insb
mov
xchg
or
out
xchg
fisttpll
sbb
arpl
jg
inc
stos
out
or
cmp
xlat
les
push
in
xor
lcall
sub
mov
repz
mov
or
add
ret
iret
cltd
inc
ds
inc
scas
ljmp
or
cli
push
scas
mov
jno
cmp
mov
add
inc
push
dec
mov
fwait
divb
mov
push
add
pop
mov
loopne
inc
mov
mov
mov
mov
jae
sub
dec
repnz
push
test
lods
xchg
dec
or
jl
xor
sbb
call
push
push
movsb
cmp
aam
sti
push
jl
lods
pop
adc
mov
dec
xchg
sbb
mov
pop
xlat
jge
insb
jmp
xchg
xor
mov
arpl
orb
pushf
jnp
jmp
inc
add
fidivs
inc
cmp
je
idivb
movsb
leave
xchg
aaa
mov
dec
rcrl
mov
cwtl
lahf
jp
mov
inc
outsl
ds
xor
sub
mov
in
mov
add
divl
nop
lds
push
and
gs
aaa
mov
in
sahf
addb
cmp
jo
mov
daa
lret
leave
lods
mov
jnp
push
jecxz
xor
lods
push
mov
xor
or
jecxz
std
pop
mov
cmp
pop
arpl
xchg
mov
movsb
sbb
push
push
mov
jnp
fnsave
mov
pop
cmp
fs
shlb
jae
jp
lahf
decl
mov
ljmp
inc
dec
jns
sub
fwait
fwait
sbb
mov
imul
imul
call
jns
pop
pusha
dec
rclb
hlt
sub
bound
and
cwtl
xchg
jecxz
mov
cmp
dec
mov
cmp
jnp
andl
insb
dec
imul
push
out
mov
push
jne
adc
les
or
jmp
leave
aaa
inc
mov
enter
leave
sbb
lea
ljmp
sbb
jmp
jg
dec
sbb
ret
or
scas
sbbb
sub
fbstp
jl
jg
sahf
mov
incl
jnp
cmp
leave
adc
cltd
repnz
mov
adc
insl
popa
cmp
mov
negb
daa
xor
or
xchg
fcomps
push
or
or
sbb
in
subb
xchg
sarb
pop
mov
xlat
cmp
sarb
rorl
ljmp
pop
mov
jns
sub
mov
icebp
andl
rcrb
gs
lret
mov
lods
jecxz
cli
arpl
or
addb
ss
pop
xor
push
aad
xor
add
adc
push
dec
inc
arpl
lds
jmp
popa
mov
xchg
xchg
cs
sub
xor
jecxz
ljmp
in
add
pop
adc
inc
out
pop
mov
out
hlt
std
pop
and
leave
cmpsb
xor
xchg
sbb
aas
in
mov
sub
rcr
imul
pop
hlt
mov
sub
dec
jnp
movsl
sub
xchg
loop
in
es
rclb
cwtl
cmp
push
imul
inc
add
mov
pop
inc
popf
das
mov
sub
addr16
jle
push
cmp
jmp
and
sub
adc
cltd
cwtl
sarb
add
push
repz
pop
cmpsb
pop
push
xchg
es
lahf
fstpt
das
dec
mov
loop
mov
loopne
cld
jbe
sahf
sub
jge
jg
push
hlt
dec
adc
rep
and
repz
mov
mov
leave
aam
fimull
cmp
dec
xchg
sub
mov
aam
dec
stos
sti
or
xchg
outsb
or
mov
mov
lock
dec
jg
hlt
jmp
out
stos
popf
jae
mov
mov
incb
jp
mov
lods
sub
sahf
mov
fnstenv
shlb
bound
mov
loop
mov
mov
std
sbb
das
lods
jmp
ss
adc
mov
iret
add
popf
xchg
ljmp
mov
es
add
mov
nop
push
sbb
jge
sahf
fs
test
add
rcll
js
cmp
jp
pop
es
push
xor
inc
push
xor
dec
mov
repz
push
andl
mov
int
jmp
cli
ss
lea
jbe
hlt
jg
pop
mov
shll
out
mov
out
mov
ljmp
fcmovne
inc
push
repnz
es
xchg
clc
inc
ljmp
push
stos
xchg
cli
mov
and
lret
xor
orb
xchg
lea
mov
test
jnp
rcl
ds
imul
ret
shr
fildll
aam
dec
push
or
adc
jno
daa
jg
xchg
sub
dec
dec
ror
stos
fprem1
cmp
and
ficoms
sti
lock
insb
add
pop
mov
and
stos
aas
test
cmp
popl
mov
mov
push
cmp
cltd
dec
in
push
jg
pop
mov
fbld
push
mov
adc
xchg
mov
pop
cmp
mov
dec
mov
outsb
push
loope
icebp
jp
lds
mov
or
dec
aas
fisubs
cmp
orl
mov
lea
loop
mov
and
jno
movsl
and
mov
mov
movsb
jno
cli
fildll
outsb
and
sub
repz
sahf
push
push
xchg
je
mov
cwtl
mov
js
push
lret
mov
push
pop
xchg
cmc
subl
and
dec
mov
lods
in
mov
xchg
xchg
scas
insb
std
imul
cmp
int
push
push
pop
push
sbb
fidivl
mov
in
pop
and
push
outsl
daa
jmp
aam
pop
xchg
in
in
jno
dec
cmc
push
sub
loop
mov
push
sbb
fwait
sbb
inc
hlt
mov
int3
daa
mov
inc
push
adc
jns
out
jmp
xchg
dec
cmp
cld
pop
je
int3
movsl
test
sbb
gs
and
push
inc
lods
sbb
insb
or
movsb
repnz
sub
xchg
popa
sbb
add
inc
aas
xor
aaa
adc
mov
or
xor
jae
test
lea
mov
fiadds
mov
cmpb
push
cmp
adc
mov
and
das
fldenv
cmpsl
dec
fs
dec
inc
ljmp
mov
insb
loope
out
mov
sti
xchg
pop
les
addb
test
push
jge
push
imul
call
pushf
pop
cmp
or
or
push
pop
lods
arpl
repnz
sti
insl
mov
inc
insb
out
out
sub
mov
mov
adc
andb
dec
jae
jp
pop
nop
out
push
pop
sbb
outsb
aam
sbb
into
pop
xor
in
xlat
rcrb
dec
nop
sub
inc
ja
add
or
push
sub
push
stc
cli
fldenv
mov
adc
mov
aam
fisttpl
mov
call
xchg
xchg
cmp
xchg
cli
push
adc
xchg
adc
mov
mov
jno
into
or
adc
movsb
push
mov
cmc
xchg
nop
test
sbb
mov
push
ja
test
mov
scas
test
shll
rcr
xor
push
jl
pop
sub
pop
jae
mov
dec
xchg
xorl
sub
scas
shlb
cmp
test
icebp
mov
outsl
and
outsl
and
or
push
ljmp
movsb
dec
scas
xchg
push
cmp
inc
inc
push
js
xor
pop
in
out
cmp
mov
or
jle
cmp
inc
cmp
or
mov
adcb
adc
inc
xor
in
mov
imul
xchg
fxch
nop
loop
add
inc
xor
lds
lcall
sbb
loop
lcall
inc
popa
add
mov
xor
add
jg
cmpsl
push
movsl
adc
adc
add
sbb
sub
shrb
testl
pop
enter
lds
dec
jns
pop
or
sub
or
mov
fsubrs
jns
movsl
cli
out
mov
xchg
test
jge
iret
lret
pushf
cmpsb
shrl
aad
sbb
cli
jl
xlat
mov
mov
inc
out
push
stos
xchg
pushf
ss
bound
lods
les
mov
int3
jae
xchg
xor
pop
dec
mov
scas
mov
and
lea
mov
dec
jl
push
jge
pop
fs
mov
in
adc
dec
add
out
stc
mov
sub
jns
xor
insl
fs
call
out
jne
in
mov
lds
inc
scas
popf
adc
mov
out
add
inc
or
xchg
adc
fildl
mov
popf
mov
cmc
xchg
inc
roll
stos
lcall
popw
data16
cs
cmp
sub
xor
xor
jge
and
in
aam
andl
or
imull
and
bnd
or
lds
jg
mov
int3
call
stos
push
stc
adc
lahf
cwtl
bound
aas
aas
cwtl
push
test
shlb
shlb
imulb
push
cmp
sbb
inc
out
jmp
jo,pn
neg
pop
inc
sar
negb
dec
xor
jno
mov
scas
bound
jle
adc
stos
out
inc
jl
aas
int3
cmpsb
rorl
hlt
and
jnp
dec
or
inc
lcall
mov
jmp
mov
jl
or
jmp
add
xchg
pop
sub
pusha
cmp
or
xchg
cmp
jnp
or
repz
sahf
jl
notb
jg
rorl
in
outsb
int3
pop
cmp
cmpsl
push
iret
or
inc
or
rcll
sub
mov
inc
dec
das
fwait
and
test
xchg
clc
jg
add
adc
or
cmp
mov
stos
mov
add
idivb
push
inc
dec
xor
and
pop
cld
cs
mov
sbb
aas
and
mov
movsb
gs
shrb
scas
shrl
je
popa
ret
pushf
jmp
sahf
in
cmp
addr16
jbe
out
cli
sub
dec
xchg
stos
xchg
mov
nop
fnstcw
or
sub
mov
ss
sarb
dec
sbb
mov
data16
pushf
loopne
rcrl
jne
jl
aaa
jo
mov
pushf
ljmp
ja
sub
and
and
sar
add
cmp
sti
and
in
push
mov
jle
mov
cmp
push
push
dec
test
mov
adc
mov
mov
jecxz
enter
jnp
rorl
cmp
xchg
outsl
gs
hlt
daa
mov
movsb
push
mov
fistpl
pop
mov
push
cli
fstpt
jbe
xchg
int3
test
jp
mov
aam
xor
push
in
xor
xor
mov
and
aaa
push
loop
int
xor
dec
adc
movsb
in
ja
or
imul
hlt
or
fdivrp
mov
scas
mov
dec
jne
jbe
jge
iret
jns
fcoml
ret
adc
lods
sbb
push
mov
jb
mov
lret
xlat
lret
or
mov
cmp
pop
pop
mov
ret
mov
dec
cmp
lahf
mov
adc
mov
add
rcrb
test
or
mov
xchg
ret
imul
int3
cmpsb
jnp
mov
inc
stos
pushf
mov
sub
cmpsl
sbb
xor
sbb
testb
test
xchg
sbb
out
push
ja
sbb
cmp
xor
aaa
mov
aam
jmp
xlat
push
loope
sahf
fadds
mov
xchg
adc
sbb
aad
sbb
pop
inc
lods
insl
pusha
jp
scas
dec
mov
fidivrl
jns
push
dec
pop
dec
mov
cmp
jecxz
mov
lods
lds
sbb
or
xor
stos
cmpl
xchg
sub
add
mov
dec
paddw
insl
inc
dec
mov
pop
jecxz
negb
sub
push
mov
sub
inc
mov
ja
inc
loop
sub
lret
jns
lock
aad
pop
ljmp
mov
adc
popa
jle
and
push
adc
pop
jb
cld
pusha
mov
mov
pop
and
adc
or
cmpl
lods
divl
lret
sbb
cli
sti
mov
insb
inc
movsl
sarb
xchg
xchg
call
add
mov
insl
jne
xchg
mov
mov
shlb
mov
leave
and
inc
arpl
clc
xchg
xchg
push
out
and
xchg
mov
pop
mov
sbb
mov
push
xor
xchg
ficoml
scas
inc
mov
mov
xor
adc
and
inc
insb
sbbb
lahf
aad
and
cmp
xchg
dec
inc
ficoms
jmp
mov
mov
jbe
loope
ret
notl
xlat
int
iret
test
iret
dec
test
fnstenv
or
xchg
inc
pushf
call
lret
add
push
mov
dec
lahf
sbbb
cmpl
stos
pop
outsb
lcall
cmpsl
dec
or
inc
mov
inc
dec
fstpt
adc
mov
xor
pop
fxch
add
jl
push
and
mov
push
out
adc
xor
cmc
imul
incb
movsb
cmp
sbbl
int
mov
jl
mov
dec
inc
mov
and
test
lret
jl
lret
or
rorl
shll
jns
sti
or
mov
sbb
pop
movsl
shlb
test
xor
nop
ds
loopne
inc
into
gs
out
hlt
push
jae
sub
push
dec
adc
mov
int3
jmp
add
shr
sarb
std
dec
je
pop
mov
mov
mov
das
add
cmpsb
test
pop
push
jo
cmp
imul
jb
xchg
xor
lods
fwait
imull
cmp
sub
bound
sahf
add
mov
sub
pusha
loopne
mov
sub
iret
incb
bound
imul
jmp
pop
cltd
lahf
mov
repz
sbb
push
sub
pushf
pop
sub
mov
push
cmp
rorb
dec
jne
in
xchg
push
xor
shlb
popf
adc
cltd
cld
mov
sub
jl
ljmp
xchg
push
lahf
popa
jb
stos
lret
lods
cmp
ret
add
ret
std
sub
sbb
push
sub
orb
mov
xchg
int3
cs
and
mov
pop
push
test
insl
mov
mov
dec
add
dec
insb
into
aaa
xor
cs
fiadds
pop
cltd
adc
inc
shll
rcll
test
es
out
lods
repz
xchg
movsl
adc
or
in
dec
adc
mov
mov
loope
jg
outsl
aas
stos
mov
dec
mov
out
clc
pop
test
lcall
scas
push
xchg
std
xchg
loop
mov
sbb
xor
aam
cmp
cmp
pushf
in
pusha
rclb
wrmsr
pop
stos
aad
lea
xlat
mov
and
adc
rcl
mov
pop
popf
dec
push
das
or
jmp
shl
sbb
cwtl
call
jnp
push
cmpsl
jecxz
mov
adc
jae
fs
inc
xorl
and
xor
sbb
pushf
sahf
jne
in
inc
je
cld
push
inc
mov
pop
mov
xor
sbb
sarb
decb
loope
xchg
mov
push
xor
inc
jle
mov
fs
ret
cmp
popa
sti
cld
pop
adc
fcompl
clc
out
int3
or
pop
arpl
xlat
sub
dec
mov
cmp
push
or
imul
outsl
out
and
clc
sub
sbb
insl
mov
daa
mov
ljmp
fwait
xchg
gs
cmc
mov
pop
mov
mov
and
pop
and
push
mov
mov
inc
push
lahf
adcb
add
mov
andb
adc
adc
mov
or
aas
mov
inc
push
cmp
xchg
mov
adc
pop
fimull
pop
decl
ds
test
negl
clc
mov
sub
aad
fisubl
cltd
cli
sbb
fnstsw
aam
aam
adc
js
data16
sbb
or
sbb
pop
mov
ret
daa
das
jl
movsb
stos
mov
xor
jnp
outsb
cmp
fcoms
cmp
sub
push
std
leave
mov
stos
sub
or
test
or
ja
mov
nop
aad
es
mov
jmp
clc
jp,pt
dec
lea
fsubs
jl
push
mov
pushf
mov
int3
enter
push
cltd
shll
mov
pop
sti
test
mov
xchg
in
and
arpl
lods
mov
orb
and
and
add
popf
js
mov
ds
and
notl
mov
cmp
lods
bnd
and
add
movsb
jne
aam
mov
or
jecxz
mov
and
lret
adc
mov
shrl
cwtl
enter
mov
repnz
movsb
xchg
lret
xor
xchg
cmpsl
and
roll
cmp
dec
fs
pop
out
or
setbe
sub
adc
inc
enter
inc
aam
incl
inc
dec
cmp
jle
adc
pop
cld
cmc
in
sub
push
lock
bound
in
jns
jp
icebp
push
sti
xor
adc
pusha
sbb
repz
mov
sbbl
in
inc
lahf
dec
push
mov
xlat
cs
add
mov
push
ljmp
push
scas
jg
movsb
call
add
lahf
jle
sbb
imul
pop
mov
stc
push
push
mov
mov
pop
icebp
out
mov
xor
std
ja
enter
xchg
sbb
mov
movl
push
adc
in
cmp
mov
inc
push
pop
pop
andb
out
cli
xor
orl
dec
fimuls
popf
pop
imul
loop
cmp
mov
push
add
jp
out
xchg
scas
jns
xchg
jl
cmp
fidivrl
insl
and
push
pop
test
das
xor
cmp
insb
adc
mov
sbb
sub
shlb
sarb
pop
pop
mov
nop
inc
add
xchg
mov
push
xlat
jne
and
push
xlat
popa
pop
cld
sbbb
push
xchg
inc
mov
gs
scas
fstp
mov
popf
sbb
inc
or
mov
das
push
leave
sbb
fwait
adc
lods
out
sbb
aad
ljmp
test
dec
xchg
sbb
push
or
adc
in
je
mov
dec
subl
mov
mov
hlt
dec
xor
sub
add
push
clc
ficoml
adc
rclb
sub
push
idivb
or
xlat
icebp
in
add
xchg
outsb
popf
or
mov
fiadds
fwait
jbe
push
loop
jo
cld
xor
out
jmp
jno
jp
hlt
lret
rol
data16
movsb
sbb
aaa
in
mov
mov
bnd
jbe
lea
jmp
xchg
lcall
xor
movsb
xchg
dec
sti
mov
insb
mov
push
inc
cmpsb
pushf
rcrb
daa
pushf
decb
jae
jb
adc
push
inc
aaa
ss
mov
popf
mov
dec
add
arpl
lret
cmpsb
dec
mov
push
fsubs
xlat
xchg
orb
mov
mov
into
sub
in
int3
fldl
popa
add
mov
stos
pop
loope
ret
cwtl
in
scas
lcall
adc
sbb
aas
dec
xchg
and
cli
mov
pop
scas
push
mov
insb
mov
fiadds
jo
jl
rcrl
mov
pushl
shll
insb
aam
pop
inc
rorl
xchg
sar
fstpt
cmp
push
mov
sti
pushf
aam
pop
xchg
out
cmp
sbb
ret
push
jnp
sub
sub
jnp
push
cmp
sub
bound
sarb
enter
push
dec
enter
push
adc
ljmp
loopne
loop
repnz
outsl
add
and
lret
mov
xchg
ja
cmp
inc
xor
cmp
mov
clc
lahf
mov
or
dec
push
mov
xchg
enter
xchg
mov
cmp
leave
or
cmp
sub
jge
sub
mov
gs
stos
dec
pushf
xor
push
add
dec
popa
add
loopne
gs
xor
jb
push
popa
scas
ret
sbb
mov
pop
sbb
dec
hlt
clc
icebp
insb
loope
sub
test
imul
orl
pop
pop
movsb
sbb
mov
insl
cmp
js
cwtl
pop
jns
sub
sub
cmp
hlt
ds
add
or
adc
fists
inc
ror
mov
xchg
out
pop
mov
mov
xchg
scas
addr16
stc
cs
addr16
or
nop
xchg
incl
call
fimuls
adc
add
out
leave
int
xor
adc
ljmp
pop
ss
adc
inc
mov
xor
dec
popa
xor
jl
lds
xor
loop
pop
jg
pushf
ljmp
mov
lret
sbb
jmp
out
outsl
aad
cmp
sti
or
stos
push
shld
sbb
enter
adc
js
lea
mov
jbe
lcall
loope
pusha
and
dec
add
mov
nop
out
fsubl
cmpsl
adc
mov
es
cmpb
or
and
mov
push
and
loop
fwait
in
jecxz
subb
std
jo
dec
mov
dec
pop
inc
mov
and
pop
les
shl
pop
loopne
lcall
mov
inc
sbbl
dec
pop
cmc
mov
insb
into
dec
rorb
test
xchg
jbe
xor
add
inc
xchg
sar
movb
mov
cmp
adc
jmp
xchg
adc
in
push
dec
dec
sbb
hlt
stos
das
push
adc
popa
pop
sub
inc
xor
inc
xchg
push
sbb
inc
xor
cmp
mov
outsb
sbb
negl
hlt
push
scas
aaa
dec
lret
data16
jb
sbb
jmp
dec
pop
stos
iret
fisttpl
imul
call
in
add
add
sub
out
daa
xchg
xchg
out
cmp
sarb
cmp
icebp
in
std
loopne
int3
push
mov
jl
cmpsl
sbb
inc
sbb
es
scas
movsb
sahf
add
int
fisttpll
jmp
jbe
scas
pushf
cmp
fisttpl
into
mov
inc
pop
inc
mov
repz
les
fnclex
jne
es
xchg
sbb
dec
pushf
sarb
fwait
bound
jne
sbb
jo
ljmp
and
or
pop
xor
ret
mov
xor
mov
and
outsl
fildll
rorb
fwait
xchg
rcrl
subb
xorb
leave
xchg
lahf
lahf
mov
mov
into
icebp
sub
dec
cltd
ret
push
clc
cmp
jmp
jl
mov
lret
add
repz
inc
add
mov
int3
lea
adc
mov
xor
lds
sbb
xchg
inc
out
loop
mov
cmp
xchg
mov
fisubs
mov
mov
cld
out
dec
cmp
mov
ds
subl
mov
mov
cmc
fwait
cli
mov
ret
stos
pop
inc
xchg
xchg
adc
in
invd
pop
mov
into
nop
ja
ret
and
mov
adc
jns
sarb
sbb
inc
xor
cmp
repz
sub
jmp
fbld
cmpsl
mov
iret
inc
pop
pop
das
sti
sbb
mov
pop
movsl
sub
jp
push
lea
xchg
mov
int3
sub
cld
sbb
cli
das
pop
les
gs
sbb
sbb
shll
daa
test
lret
fadd
dec
cwtl
or
mov
inc
sub
call
xlat
xor
clc
add
test
test
and
pop
inc
out
mov
dec
pop
insb
stc
mov
mov
jp
add
int3
sub
xlat
jecxz
mov
sub
xor
xchg
repz
je
jl
aam
hlt
pop
movsl
xorl
cmp
scas
test
mov
mov
jae
repnz
xor
jb
out
lret
pop
mov
pusha
mov
xor
in
out
add
stos
xchg
ja
cmp
pop
push
mov
mov
inc
mov
call
ds
int
push
loopne
xchg
loop
and
push
sub
iret
add
into
mov
fists
roll
in
cmp
daa
sbb
out
cmc
popa
fwait
mov
lret
sbb
cmp
and
xor
int3
push
lods
mov
xor
lret
lret
in
enter
fisttps
stos
inc
jae
xchg
xor
and
mov
in
das
insl
add
mov
and
out
loope
loop
mov
push
push
iret
loopne
lods
dec
xor
sbb
rcrl
adc
inc
add
pushf
pop
jmp
in
mov
in
push
bound
push
test
nop
dec
or
inc
mov
nop
pop
loop
cmpsl
jnp
push
nop
add
fisubrl
aaa
stos
enter
cmp
jae
xchg
mov
and
mov
sbb
or
pop
repnz
sub
int
outsb
lret
imul
stos
sbb
pop
pop
fnsave
inc
sub
jb
and
sbb
rcrb
bound
addl
subb
inc
mov
xchg
dec
mov
mov
cmc
pop
push
jae
fbld
push
les
add
mov
scas
inc
nop
aaa
fs
loop
cmp
rorl
cwtl
lods
fs
outsl
adc
and
clc
test
bnd
ret
ja
nop
insl
xor
push
push
add
shll
fsubs
jnp
inc
in
mov
sub
insb
mov
adc
clc
lods
jbe
int3
arpl
jecxz
dec
loopne
sbb
xchg
sub
jns
les
pop
jmp
call
push
mov
fstps
popf
fistpll
or
enter
lcall
fsubrl
aad
insl
sbb
stos
cmp
cmp
sbb
shll
pop
shl
loopne
jmp
mov
adc
out
add
inc
dec
lods
cld
div
or
xchg
jbe
push
int
mov
imul
and
add
sub
aad
lret
out
cmp
insl
popf
sbb
popa
lock
mov
xor
fs
cwtl
dec
in
ja
xor
and
movsb
mov
add
dec
ficoms
clc
and
cmp
adc
dec
push
scas
push
das
js
andl
daa
call
jg,pt
mov
adc
test
dec
rclb
decb
in
movsb
xchg
cmpsl
aad
in
loope
xacquire
mov
fcompl
jge
imul
dec
jl
cmp
daa
mov
xor
xchg
lock
push
popf
dec
push
shr
or
stos
sbb
pop
sbb
ficompl
adc
inc
leave
lcall
mov
inc
sbbl
inc
adcl
lea
adc
push
cld
push
dec
sbb
stos
jp
out
xchg
add
mov
cmp
push
xchg
xor
inc
stos
inc
lock
and
stc
mov
xlat
or
psubb
sbb
sbb
mov
imul
setg
leave
and
add
lock
mov
xor
push
add
fidivrl
lret
and
mov
fisttpll
mov
jmp
call
inc
sub
ljmp
loopne
std
out
add
rorb
sbb
enter
movsl
jnp
xor
sub
popf
int
pushf
mov
dec
jmp
or
mov
pushf
add
fwait
or
adc
call
cmpsl
test
pushf
test
mov
loope
cmp
rorl
jno
fiadds
push
mov
sub
mov
lahf
ja
iret
pop
ret
xchg
dec
aaa
pop
jne
jl
cmp
add
sub
fmull
les
aad
aam
push
movsb
dec
ffreep
stc
sub
jne
rcr
cmc
sub
inc
fs
pushw
dec
popa
es
mov
popf
out
push
dec
andl
jns
pop
jle
mul
pop
jo
les
arpl
mov
stos
jno
pop
or
or
sbb
addr16
jo
cmc
mov
insl
xchg
sub
leave
aas
cmpsl
fildl
sub
add
inc
fisubrl
ljmp
push
rorl
fldl
pushf
insl
push
into
mov
imul
xchg
insl
adc
add
std
push
jge
loope
sub
xor
sbb
mov
bound
add
push
mov
pop
xor
jle
xchg
mov
jp
pop
mov
pop
scas
cmpl
adc
mov
aam
mov
sarl
aas
stos
xchg
pop
in
push
popf
arpl
test
add
insl
in
inc
mov
mov
mov
iret
in
dec
dec
in
mov
sub
adc
je
jmp
mov
adc
bsr
add
mov
outsb
flds
arpl
fidivrl
adc
pop
mov
popa
adc
test
jbe
or
adc
inc
sti
pop
xchg
sti
mov
popl
andl
xlat
push
cli
xchg
add
imul
ds
sbb
ds
pop
mov
sbb
xchg
aas
pusha
xchg
ret
lret
xchg
lea
xor
js
std
in
pop
inc
arpl
jb
std
notl
js
sbb
fwait
movsb
arpl
out
sbb
cld
jo
push
out
cmovb
push
clc
hlt
lret
add
push
push
mov
xchg
stos
cmp
xchg
push
shll
mov
loop
jle
push
cmc
add
outsl
gs
shll
jge
mov
test
icebp
inc
xlat
orb
add
inc
pop
bound
fwait
mov
xor
pop
mov
hlt
inc
mov
cld
xchg
adc
insb
decb
xchg
fwait
out
out
lcall
scas
test
insl
sub
cltd
cmpsl
inc
popf
pusha
mov
mov
rolb
iret
inc
lods
fcoms
fcompl
in
push
xchg
and
add
stos
sub
popa
sbb
pusha
ljmp
push
pop
popf
inc
mov
push
push
rcrl
adc
cmp
sbb
popf
mov
div
in
sbb
cmpb
inc
mov
test
dec
in
aad
xor
push
sbb
mov
sbb
xor
and
lods
sbb
cli
xchg
dec
movsl
dec
lret
adc
mov
sub
or
jbe
test
adc
pop
inc
gs
cmp
xchg
mov
add
push
adc
inc
je
push
arpl
hlt
or
shrb
andl
inc
arpl
pop
ds
xchg
push
pop
xlat
lods
pop
repz
imul
pop
inc
fcompl
push
lds
testb
mov
outsb
fcoms
xor
decl
std
test
movsb
sti
hlt
sub
cli
push
xchg
mov
clc
xchg
negl
ffreep
arpl
add
out
jno
ret
ret
es
repnz
jmp
fmul
fidivrl
jecxz
sub
mov
xchg
int3
dec
repnz
xchg
int3
mov
shll
cmpsl
add
jnp
push
adc
and
adc
ss
push
loop
push
mov
xor
mov
inc
imul
les
mov
mov
aaa
fs
cmc
push
bound
mov
ror
inc
or
imul
add
pop
jg
xorl
inc
repz
out
mov
loop
popa
loopne
icebp
les
adc
pop
inc
pop
sub
arpl
mov
push
dec
cmpsb
les
daa
inc
dec
hlt
faddl
test
mov
push
pop
mov
pop
sbb
mov
inc
mov
out
adc
fs
enter
pop
nop
lahf
in
mov
push
jns
imul
push
aas
jns
jns
or
xor
data16
imul
mov
push
ja
mov
bound
mov
out
sub
sbb
daa
in
cmp
test
xor
inc
lods
fwait
pop
cmp
shrl
adc
mov
mov
or
adc
mov
and
insl
cli
dec
subl
rorl
adc
mov
mov
out
cmpsb
mov
cmp
sbb
push
cmpsb
incb
mov
jae
lcall
inc
fildll
fldt
sbb
adc
rclb
xor
or
dec
fdivl
test
mov
adc
out
push
test
mov
mov
dec
mov
ret
std
outsl
xchg
jle
call
xchg
push
fildll
xchg
inc
pop
movaps
hlt
jmp
push
mov
and
push
add
arpl
ret
cmpsb
cmpsl
add
add
out
ljmp
adc
movsl
movsl
es
lret
push
sbb
add
jo
and
mov
lods
sarl
inc
xchg
and
xchg
pop
fwait
mov
cli
lahf
ja
sbb
into
mov
cmpsb
int3
cmc
mov
push
inc
aad
insb
loopne
hlt
xor
add
add
jge
movl
clc
jae
dec
nop
jecxz
fldenv
inc
and
xchg
ss
ja
into
loope
inc
xlat
pop
cmpsb
add
insl
lea
aaa
or
sti
iret
call
nop
call
xor
cltd
sub
add
stc
push
xor
mov
push
mov
sbb
jb
add
sbb
mov
inc
xor
fdivl
add
stos
add
inc
xor
xor
test
pop
or
arpl
jo
dec
nop
add
mov
sub
mov
pop
cmc
mov
sbb
addl
roll
testl
lahf
mov
pop
xchg
adc
popf
scas
push
xchg
xchg
ficompl
inc
cmp
repz
or
cld
jge
ret
test
test
jp
imul
push
bnd
sbb
mov
leave
dec
cwtd
cmp
test
aaa
loope
popa
stos
hlt
xchg
and
out
sbb
cmpsl
jo
push
and
sub
es
stos
ss
aam
shlb
cmp
call
jo
outsl
shrl
clc
iret
dec
std
sbb
cmp
movsb
daa
jno
je
lahf
stos
jle
pop
test
shll
xchg
arpl
sbbl
push
pop
iret
cwtl
jb
enter
push
cli
add
inc
mov
push
jns
push
bound
iret
imul
xor
adc
test
popf
ljmp
or
xor
push
adc
les
mov
insb
and
mov
int3
lods
xor
or
in
out
shrb
pop
int
sahf
popa
les
stc
jbe
adc
es
sub
and
pop
push
test
inc
shrb
dec
xchg
cmpsl
int
movlps
sbb
pop
pusha
adc
les
xchg
cmc
add
mov
inc
cmp
pop
es
cmp
clc
cmp
xor
dec
xor
xor
aad
jecxz
lods
sub
mov
std
repz
mov
and
pop
xchg
fldcw
dec
and
mov
xor
dec
xchg
sbb
or
jge
sahf
pop
divb
cmp
and
add
sub
aad
mov
cld
xchg
push
ret
mov
movl
inc
insl
and
dec
jecxz
adc
dec
xor
out
push
jo
sub
push
cmc
test
addr16
sbb
test
in
dec
sti
xor
jecxz
jns
xlat
pusha
push
sub
aaa
pushf
mov
sbb
pop
clc
int
lds
stc
gs
imul
mov
push
or
stos
pop
sbb
hlt
aas
xchg
xchg
ror
mov
cmc
dec
jp
movl
jb
pop
in
fisubs
mov
lods
adc
fistl
repz
or
mov
fiadds
mov
pop
cmp
sbb
cmp
jae
mov
mov
inc
adc
sbb
ss
jle
push
iret
lods
data16
jbe
jmp
xor
sub
call
or
jne
inc
jp
adc
inc
andl
mov
lret
dec
inc
jne
loop
sbb
cmpsb
pop
dec
dec
test
push
jb
xchg
std
push
and
cmovbe
xor
push
dec
call
dec
inc
clc
pop
fbstp
push
repz
lret
ret
scas
mov
shlb
adc
mov
pop
mov
mov
lods
jno
mov
flds
add
dec
cld
ret
lret
hlt
adcl
xchg
push
push
ret
or
xchg
std
cli
ret
lret
mov
lea
pop
sub
xchg
sub
add
sahf
pop
mov
dec
xchg
mov
jmp
sbb
and
mov
push
add
jnp
mov
aaa
inc
push
int3
mov
jge
mov
or
popf
or
and
cmp
dec
mov
pop
push
add
push
fwait
push
mov
loope
push
pushf
dec
inc
sub
lods
mov
cmp
add
cwtl
cs
pusha
imul
stos
dec
mov
inc
xor
je,pn
jo
fwait
movsb
sub
dec
mov
psrad
aas
aas
and
lret
sub
mov
sbbl
pop
icebp
inc
dec
xor
pop
repnz
xchg
add
scas
and
aam
lods
fildl
and
sahf
sti
push
nop
test
cmc
movntps
mov
call
in
int
in
jecxz
push
mov
pop
adc
icebp
pusha
jne
adc
cmovnp
add
and
xchg
jb
push
add
ret
xor
les
test
lds
popf
adc
mov
dec
es
jge
dec
mov
repz
fiaddl
in
lret
inc
inc
cmp
leave
fcmovnb
mov
sub
stc
cs
mov
insl
xchg
loope
scas
retw
xchg
inc
and
jmp
dec
int
std
aad
mov
push
mov
jb
outsl
aam
cli
mov
mov
add
cwtl
xchg
lock
in
ret
dec
popf
adcl
shl
jle
sub
enter
or
or
shrl
jle
sub
jmp
or
loop
je
xchg
xchg
mov
cwtl
and
or
inc
pop
aad
je
stos
cltd
push
cli
jae
cmpsl
adc
cli
outsb
sbb
dec
sbb
inc
mov
pop
std
pop
and
cmp
in
js
cmp
into
lds
mov
sbb
arpl
cmpsl
inc
jbe
or
lret
add
ds
shl
inc
pushf
dec
sbbl
je
jle
jle
clc
and
outsb
add
cld
xchg
rcrb
pushf
and
pop
xchg
push
test
hlt
mov
in
les
ja
pop
mov
test
mov
push
cli
dec
inc
pop
inc
clc
dec
add
and
pop
je
scas
fnstsw
and
andl
jo
push
jle
xchg
pop
sub
fs
shr
faddp
call
xor
push
cld
ret
sub
lret
popf
pop
addb
pop
push
aas
push
jp
popf
adc
mov
and
aad
dec
cltd
push
cli
jae
jo
shll
bsf
int3
outsb
sub
daa
test
adc
jbe
dec
mov
mov
push
mov
add
dec
xor
mov
iret
pushl
cmp
push
and
outsb
sbb
mov
jns
ljmp
in
and
pop
or
xchg
pop
add
cmpl
mov
lret
xor
test
enter
faddp
cltd
or
push
sub
cwtl
js
cmp
pop
pop
andb
xchg
js
jbe
loopne
int3
and
sbb
and
out
leave
pusha
mov
adc
jmp
or
fwait
add
insl
mov
cmp
xchg
in
xor
imul
les
and
mov
sarb
lret
int3
leave
or
add
repnz
aad
mov
lea
inc
mov
or
or
pushf
fwait
cwtl
add
pop
mov
mov
adc
and
sub
lret
xlat
mov
adc
hlt
leave
xor
loope
scas
pop
cmpsl
jmp
add
fsubs
mov
mov
cmpsl
inc
lods
add
jnp
dec
sub
icebp
loopne
pop
sub
sub
repz
ja
outsb
out
aam
mov
mov
mov
insb
or
in
sbb
leave
xor
push
in
jne
push
inc
pushf
and
hlt
xchg
idivb
sbb
iret
addr16
jnp
sahf
or
push
cwtl
xabort
movsl
mov
inc
rcll
aas
testb
add
mov
dec
andb
inc
mov
imul
sub
cmp
and
push
cmp
xchg
mov
scas
mov
pusha
adc
lods
dec
or
div
test
shl
cmp
cmp
iret
mov
jne
pop
test
das
mov
jne
rcl
and
out
insl
sub
aas
loopne
ret
and
pop
out
into
mov
inc
js
inc
sbb
test
gs
add
sahf
dec
mov
inc
das
or
sahf
dec
cltd
jae
insb
icebp
fstp
fistpll
adc
adc
add
xor
xor
jmp
shrb
bound
mov
mov
pop
addl
test
push
sub
rcrb
sub
cmp
xchg
clc
mov
call
jae
imul
xor
enter
mov
sbb
inc
jb
sub
and
adc
pop
cmp
pop
mov
imul
pop
cmp
out
test
repnz
jno
push
xchg
cmpsb
or
sbb
imull
mov
gs
mov
int
dec
iret
loopne
mov
stos
into
mov
and
xchg
mov
dec
add
sahf
adc
jmp
dec
pop
enter
adc
scas
mov
es
cli
mov
stos
dec
push
inc
rcr
sub
mov
mov
push
push
cmpsb
jp
out
xor
cmp
cmpsb
icebp
xchg
jg
in
cltd
push
cvtdq2ps
push
ret
mov
mov
xor
mov
push
cmc
xchg
les
shlb
je
xor
inc
mov
rcl
xchg
es
dec
push
inc
pop
jge
push
jg,pt
frstor
roll
bound
add
xorb
aas
jbe
or
lock
and
xchg
pop
in
jl
inc
lcall
inc
cmp
mov
outsb
dec
pop
sbb
jb
xor
daa
scas
outsb
shlw
mov
adc
lret
repnz
fsubrl
out
iret
adc
mov
lods
adc
loopne
arpl
xor
mov
movsl
lds
popf
cmp
inc
add
stos
insb
jg
adc
inc
xlat
add
fistps
inc
out
lods
cwtl
loopne
push
mov
wbinvd
std
sbb
imul
mov
xor
xchg
xchg
fnstcw
mov
sbb
mov
lcall
loop
inc
inc
jecxz
insl
jns
or
xor
and
in
sbb
mov
daa
push
push
fiadds
leave
or
cmp
adc
and
insb
les
lea
popa
ds
push
xor
sub
xchg
mov
sub
inc
xchg
xchg
and
dec
fidivs
je
lahf
or
decb
dec
cmc
lds
ds
lahf
and
fnstenv
add
test
sbb
push
cmp
jb
cmp
imul
das
aas
push
test
insl
dec
lds
cltd
sbb
cld
jo
adc
push
js
cmp
scas
pusha
cltd
xchg
sub
in
jb
cmp
iret
stos
gs
out
push
mov
mov
mov
jle
lods
and
addb
lea
adc
push
sarl
test
daa
jo
pop
pop
xchg
or
popf
cmc
cld
sub
push
flds
jecxz
scas
add
sub
sbbl
aad
pop
dec
lcall
push
divb
or
lahf
testb
cmp
andb
std
xchg
scas
sbb
fmuls
push
add
mov
movsb
int3
dec
lret
out
cmp
adc
mov
pop
push
dec
jne
or
enter
repz
or
fisubs
xchg
cmp
clc
pop
mov
outsb
xchg
mov
loope
mov
sti
ja
sub
leave
loop
push
ja
or
dec
jno
pop
aas
jne
mov
mov
bound
xchg
sti
cwtl
adcl
aad
dec
inc
rorb
cmpsb
adc
imul
add
nop
push
inc
insl
inc
mov
xchg
lods
clc
and
dec
lret
out
sbb
push
push
setae
gs
add
jb
repnz
rolb
ljmp
xchg
pop
clc
sub
shrb
cld
xchg
push
inc
out
in
xchg
inc
imul
add
subl
xor
mov
push
sbb
cmp
arpl
push
adc
or
cli
popf
mov
scas
or
stos
cmc
adc
daa
icebp
rorl
adc
xchg
les
jno
adc
xchg
inc
dec
sbb
lcall
pop
add
test
fstpt
mov
xor
cmp
add
dec
movsb
or
bound
xchg
gs
psubd
in
pop
jecxz
xor
out
ljmp
xchg
insl
clc
xchg
dec
jecxz
out
add
mov
dec
repnz
mov
filds
daa
arpl
data16
dec
mov
pop
ret
pop
push
or
scas
xchg
fbstp
xchg
pop
mov
jnp
and
lds
add
rorw
xlat
das
in
jno
pop
or
data16
ss
test
test
cmp
push
test
xor
xchg
in
and
dec
dec
scas
bnd
shrl
adc
in
clc
scas
pusha
stos
in
xchg
jb
dec
incl
adc
mov
inc
mov
xchg
jle
jnp
lcall
jge
ret
outsb
xor
jns
or
jp
xor
stc
sbb
mov
daa
push
sub
xor
js
and
out
arpl
pop
push
xchg
repz
insl
mov
and
sbb
jne
std
adc
mov
jno
push
mov
cmp
mov
mov
cs
aad
jp
and
inc
ret
fadd
pusha
jecxz
xchg
andl
out
inc
movsb
inc
or
pop
in
sub
and
cld
lret
xchg
mov
or
sbb
ja
xchg
dec
int
or
xor
inc
jecxz
push
inc
pushf
inc
xlat
std
in
mov
jo
test
cli
fcoml
sbb
inc
sub
clc
out
ss
cmp
push
and
repz
dec
dec
clc
push
or
xchg
jmp
cwtl
jno
inc
pop
push
jmp
lahf
int3
dec
pop
xchg
xor
lods
cwtl
ds
out
mov
sarl
les
int3
or
mulb
or
mov
mov
andl
icebp
movsb
enter
sub
or
out
pop
test
mov
scas
pop
fdivl
loop
and
push
pop
sub
pusha
mov
sti
imul
and
push
xchg
daa
jne
push
add
mov
int3
push
pop
cmp
rcrb
jne
add
js
dec
jmp
inc
xchg
shlb
nop
xchg
roll
jmp
adc
call
sbb
pop
cltd
hlt
jg
mov
mov
adc
pop
dec
lods
mov
std
dec
lcall
jge
aad
inc
pop
mov
dec
pusha
dec
repnz
fnstsw
fdivrp
jp
xchg
cmc
daa
push
adc
xor
fcoms
mov
jle
sbb
rclb
insl
xchg
cwtl
cltd
pusha
scas
push
inc
rcll
insb
cmp
cmp
daa
lods
mov
daa
push
or
lcall
dec
out
and
xor
sub
xchg
arpl
jno
mov
icebp
mov
bound
xor
xor
lahf
mov
test
fildll
shll
pop
mov
mov
adc
aaa
scas
sub
in
or
mov
fdivr
cld
push
lea
setnp
mov
pop
fisubl
nop
inc
cmpl
stos
cs
xlat
ja
pushf
stos
mov
loopne
push
clc
push
jmp
pop
fstps
add
mov
shll
adc
cmp
lahf
fdivs
clc
sbb
shr
in
notl
mov
pushf
lock
sub
movsl
dec
pop
orl
insb
pusha
adc
sbb
dec
dec
mov
lds
fdivl
mov
mov
adc
xchg
lods
push
scas
cli
pop
xchg
jns
test
dec
dec
fisubrl
xchg
push
or
repnz
pop
mov
scas
adc
movsb
inc
test
ret
test
sbb
dec
lods
test
rclb
nop
mov
fwait
lea
xorb
xchg
clc
jo
pusha
call
sub
ret
shll
xlat
xchg
dec
mov
pop
push
push
mov
lock
adc
mov
xchg
out
pop
xchg
shrl
lcall
xchg
push
add
add
lods
mov
popa
in
das
pop
rcrb
fiadds
mov
mov
push
pop
mov
stc
dec
cmp
mov
ret
jmp
jl
bound
xor
xchg
adc
jg
shrb
xor
push
mov
jg
sub
sbb
mov
push
mov
mov
lods
mov
out
inc
push
jge
nop
dec
sub
cmpb
ljmp
pop
add
outsl
add
xchg
das
out
int
xor
mov
sub
inc
fistpl
test
pop
sub
out
test
jmp
data16
rolb
jbe
and
jle
mov
add
add
jae
insb
lods
push
cmp
add
popf
sahf
hlt
pusha
rclb
in
xor
test
mov
pop
pop
pop
ret
push
inc
xchg
pop
ficoms
popf
mov
pop
adc
push
xchg
and
aad
mov
mov
mov
xor
cmpsb
fstpl
mov
fstpt
cmpsl
in
pop
aas
cmp
sbb
adc
test
sbb
pop
mov
sub
sarb
jbe
sbb
mov
pop
bnd
xchg
into
inc
jp,pn
mov
dec
shlb
sti
sbb
std
mov
lcall
pop
aam
mov
insb
xchg
pop
mov
dec
sbb
add
nop
push
adc
mov
mov
cltd
or
xchg
movsl
sbb
test
in
fcomps
bswap
cmpsl
ds
mov
cs
fadds
enter
push
or
mov
inc
push
loopne
jp
sarb
or
mov
or
cld
xchg
neg
inc
gs
fs
mov
xlat
pop
mov
mov
aas
adcb
pop
daa
fsubrp
mov
clc
bound
adc
inc
data16
loop
into
lea
int
outsb
cmc
pop
ss
mov
jle
hlt
lods
gs
ja
cmp
fidivl
or
mov
pop
jmp
cmp
in
mov
mov
sbb
push
or
mov
jl
jecxz
arpl
fists
mov
mov
and
sbb
mov
mov
push
loop
adc
mov
mov
mov
pusha
or
inc
sbb
mov
or
lahf
insb
fs
imul
inc
mov
pusha
mov
lock
push
cmp
pop
xchg
in
xchg
roll
add
mov
imull
dec
pusha
push
repz
push
pop
imul
int
dec
imul
push
sbb
sub
add
ret
fsubrl
daa
adc
mov
inc
shl
xchg
hlt
mov
lds
sub
cmp
ljmp
mov
rcll
or
and
pop
icebp
lock
push
ret
cmpsb
mov
jle
lock
mov
pushl
pop
push
ljmpw
mov
ljmp
inc
jns
inc
jno
jne
ljmp
fs
pop
sub
push
push
inc
sbbl
dec
dec
xchg
inc
out
scas
popa
xor
mov
inc
mov
cwtl
out
mov
xchg
mov
mov
loope
push
jne
cmp
repnz
xor
sub
rcrb
adc
shrl
jbe
xchg
fnstsw
xchg
enter
xorl
mov
push
shl
cld
test
js
cmp
into
cmp
daa
in
jg
cmp
and
push
push
jmp
sub
jnp
push
icebp
jl
xlat
push
push
popa
pusha
jmp
push
into
in
cmp
leave
inc
mov
lahf
inc
mov
js
push
in
push
inc
dec
cmp
mov
in
sub
repnz
jb
fldt
clc
inc
fisttps
ds
negb
push
sbb
sbb
xor
inc
pop
leave
mov
jp
repz
outsb
pop
and
adc
add
sub
jle
adcl
adc
iret
mov
mov
enter
ret
jge
mov
int3
cmp
inc
pop
mov
enter
mov
xchg
pop
and
inc
pop
cltd
movsb
movsb
sbb
mov
in
inc
std
push
bound
sbb
jp
fisubs
sbb
jecxz
push
sbb
adc
jbe
inc
xchg
xor
push
add
cmp
std
cmc
nop
lds
mov
cmp
into
pop
sbb
inc
push
mov
adc
mov
mov
xchg
pop
inc
push
call
loope
jno
movsb
mov
arpl
aas
mov
adc
data16
sahf
lcall
hlt
lcall
push
push
xchg
stc
jg
ror
lret
inc
xor
ret
cld
mov
dec
int3
arpl
add
int
push
enter
nop
ret
popa
pop
es
rclb
pop
inc
ret
mov
mov
sbb
sbb
xchg
notl
lahf
sarl
test
test
out
lock
sbb
mov
pop
outsl
leave
test
pop
or
hlt
mov
xor
push
dec
xor
test
fcmovnb
push
mov
gs
insb
pushf
mov
loope
xchg
lret
in
and
add
jmp
push
test
or
sbb
xchg
stos
or
popf
out
push
fmulp
or
bound
sub
sahf
stos
and
dec
fst
inc
add
notb
addr16
imul
jb
int3
dec
jns
push
jg
xor
jbe
xchg
decb
repz
scas
jbe
push
mov
popf
insl
vpslld
jnp
lods
rcll
xchg
mov
jmp
cmp
inc
pop
jb
addb
and
mov
in
mov
test
dec
and
mov
nop
rcrb
fistpll
out
adcb
and
aam
daa
fildll
xchg
sub
mov
mov
adcl
mov
push
movsl
sahf
inc
lret
imul
sub
push
or
xchg
popf
or
mov
clc
pop
push
lods
mov
cmpsb
push
lods
and
mov
stos
adc
js
jbe
adc
and
lahf
xchg
and
das
and
sti
addb
aam
repnz
popa
test
inc
inc
and
jno
pop
in
loop
or
cmp
xchg
fcoms
out
pop
popf
int
pusha
in
shrb
xchg
hlt
ret
mov
adc
fildl
add
adc
adc
add
adc
setae
jne
xchg
fcmovnb
push
mov
xor
push
aaa
in
addb
or
cli
mov
mov
or
fildl
jno
out
jae
std
sub
cltd
inc
lock
sbb
mov
fstps
xlat
out
call
call
sahf
cli
push
loop
sub
test
in
je
dec
stos
test
dec
inc
test
fwait
mov
jbe
xor
out
sub
sub
ret
out
sub
push
push
add
ja
pop
sahf
xor
sub
jae
adc
push
enter
mov
xor
in
jne
xor
xor
fs
xorl
mov
lret
dec
pop
scas
pop
decl
testl
inc
xchg
test
jge
adc
xor
mov
daa
xchg
in
mov
fimuls
lods
int3
ds
dec
lret
and
sub
cmpl
mov
sbb
lods
add
xor
fwait
mov
or
inc
aam
cld
repnz
imul
adc
pop
pop
stos
dec
add
sbb
insb
sub
xor
js
xor
push
cwtl
adcb
orl
pushf
inc
xchg
inc
cmp
adc
lods
push
imul
inc
mov
inc
sub
mov
cmp
sub
cmp
add
jns
ds
sbb
sahf
xchg
sbb
pop
push
dec
dec
xchg
dec
mov
and
pop
mov
jae
aad
clc
enter
loop
inc
jo
mov
cmpsl
insb
or
jb
imulb
push
lret
sub
mov
mov
fldt
jbe
xchg
lret
out
nop
add
xchg
mov
add
in
repnz
fldcw
dec
les
addr16
cltd
in
test
mov
data16
loope
xchg
das
fbstp
fdivrs
xchg
pop
cwtl
aaa
inc
test
mov
fdivr
cmp
cmp
ret
aam
sbb
and
out
enter
loop
push
daa
loop
bsf
push
push
outsl
push
cwtd
pop
js
push
and
dec
cli
imul
push
pop
push
add
sub
mov
es
sub
push
out
add
mov
xchg
dec
stos
mov
sub
and
ret
pop
xor
pop
cmpsb
jno
cmpb
lds
lods
cmp
movsl
imul
inc
push
or
fidivrl
adc
leave
cmpb
push
cmp
and
jnp
aad
lret
divb
insl
movsb
add
add
mov
addr16
inc
lcall
xchg
ret
dec
ja
or
mov
movsl
sbb
fcoml
mov
xchg
or
cmp
shll
js
mov
push
mov
je
out
cmpsl
xchg
dec
loop
clc
push
bound
mov
cmp
ret
shrl
mov
outsl
clc
shlb
sub
arpl
cmpl
pushf
vcomisd
lods
jmp
push
mov
dec
push
mov
test
sahf
in
dec
xchg
push
outsl
mov
les
nop
fwait
mov
lods
inc
mov
lods
xor
les
adc
fsts
outsb
mov
sarl
cmp
int
ret
neg
inc
test
and
adc
subb
inc
xlat
sbb
daa
pop
mov
push
jno
fdivr
test
push
movsb
addb
sbb
or
int
mov
ja
mov
jbe
lret
cli
jecxz
imul
mov
sbb
lcall
divb
dec
xchg
mov
into
leave
adcb
enter
fs
pop
xchg
jo
cwtl
and
adc
mov
add
hlt
jb
insl
flds
arpl
adc
hlt
sub
inc
xor
sub
lds
lea
in
mov
xchg
scas
ud0
stc
movsl
dec
cltd
stos
push
xor
dec
pusha
mov
ss
fnstsw
xchg
pusha
cwtl
add
cli
cmp
cmpsl
sbbl
jp
xchg
mov
mov
out
and
ds
test
sbb
sbb
sbb
int
mov
inc
call
adc
movsb
mov
jmp
or
loopne
addr16
das
addb
scas
xor
pop
mov
dec
fstps
adc
movsl
add
or
jo
sbb
es
dec
fcoml
test
sbb
movsb
push
mov
jne
add
cmpsb
icebp
cld
cmp
xor
sub
xor
lods
xor
xor
icebp
test
in
movsl
loop
push
inc
les
jp
into
test
and
push
dec
and
dec
cmp
std
call
loope
sub
pop
mov
xchg
adc
sbb
psllq
add
cmp
jo
mov
neg
popa
mov
and
pop
mov
rcr
loope
add
adc
and
cs
ss
mov
repz
in
in
sbb
loop
les
imul
mov
mov
fwait
pop
or
out
test
orb
pusha
ret
push
std
mov
sub
xchg
enter
je
add
lret
movsb
sbb
mov
xchg
mov
popf
pop
mov
cmpsl
mov
clc
dec
inc
mov
lock
fistps
out
repnz
cmp
aaa
jns
fildl
mov
ret
jae
jae
add
push
xor
pop
popa
xor
adc
repz
daa
fisubrl
dec
xor
push
push
pop
imul
leave
mov
leave
lret
sbb
arpl
aaa
jns
out
insl
jge
xorb
dec
sbb
dec
xchg
sbb
pusha
dec
out
or
sbb
add
inc
pop
out
in
push
insl
xchg
je
adc
fstpl
sub
ret
inc
les
mov
fidivrs
add
fimull
mov
pop
pop
shll
sub
cltd
mov
mov
in
mov
push
inc
mov
loope
rcl
inc
push
movsl
fidivl
in
mov
data16
aam
xchg
dec
push
sbb
hlt
sbb
scas
sahf
out
xchg
inc
xor
mov
out
jnp
push
lahf
mov
push
pop
daa
mov
xchg
clc
ret
mov
leave
sub
test
leave
out
pop
in
or
pop
ja
test
rclb
sahf
aad
add
mov
push
push
sbb
daa
inc
pop
jecxz
cli
test
les
inc
lds
mov
xor
xor
pop
cwtl
jmp
pushf
sub
outsl
adc
push
leave
adc
pop
pushf
xchg
mov
repnz
into
adc
mov
test
adc
inc
sbb
mov
dec
push
jno
lcall
cwtl
jg
jns
cmp
add
jle
hlt
movsl
cmpsl
mov
iret
cmp
cwtl
aam
mov
mov
jl
adc
addb
pop
cmp
or
sti
push
adc
lea
nop
dec
jne
lock
push
pop
idivl
std
loopne
xor
enter
sbb
pop
outsb
inc
scas
cmpsb
jns
nop
pusha
mov
jecxz
test
ljmp
inc
jae
test
fimull
flds
xchg
sub
shll
aam
iret
xlat
cmp
cmp
lock
or
sarb
nop
fstpt
and
dec
dec
push
stos
popaw
and
mov
cmp
inc
imul
mov
fs
gs
mov
xchg
jmp
adc
xor
dec
enter
xor
ja
enter
adc
sub
inc
stos
cmpsl
sti
sub
and
popa
or
in
das
xor
pop
stos
sub
in
imul
fimull
push
outsl
pop
jge
pop
stos
mov
mov
jle
mov
dec
icebp
cmp
mov
not
mov
lahf
lcall
iret
sbb
inc
ljmp
jecxz
addr16
enter
popf
not
push
push
cmp
pop
mov
mov
shl
push
lcall
ret
scas
xlat
push
call
hlt
inc
or
push
xchg
rorb
sti
je
subl
inc
out
sarl
pop
dec
int
xor
jnp
xor
mov
jo
jg
sbb
cmp
fwait
cmpsl
xor
iret
pushf
cwtl
jp
xchg
mov
test
scas
cmp
mov
int3
xor
dec
adc
xchg
out
inc
inc
imul
data16
adc
das
inc
mov
dec
lods
mov
aas
gs
and
gs
mov
xor
and
loop
or
push
pop
fwait
inc
cs
hlt
ljmp
out
lcall
outsl
push
scas
shl
in
or
les
movsb
push
fisubrs
xor
xor
ret
std
lock
lea
and
sti
sbb
fsubr
jo
and
out
fidivrl
mov
pop
ficoms
xlat
dec
xchg
sbb
cli
dec
iret
sub
jbe
arpl
lea
dec
out
jp
inc
xor
enter
rcpps
lods
das
adc
and
stos
ret
jmp
lea
subl
cltd
fistpl
and
arpl
cltd
fs
or
fs
push
call
popa
and
lcall
adc
imul
test
fadds
sbb
dec
push
iret
fimull
sbb
fnstenv
xchg
cmp
ret
inc
cmpsl
orb
jnp
cld
mov
int
in
pop
lods
data16
in
or
rcrb
push
sbb
mov
fldcw
sub
push
lds
mov
mov
in
mov
push
mov
cmc
sbbl
jecxz
mov
icebp
les
jecxz
push
add
sub
loope
or
or
mov
jne
fmuls
enter
cmp
cld
adc
mov
movl
inc
pusha
xchg
mov
inc
stos
loopne
push
pop
ret
ja
ret
addr16
inc
insl
push
leave
shrl
test
scas
fidivrl
adc
pop
xor
xor
dec
hlt
inc
pop
aad
aaa
inc
mov
out
data16
addr16
pop
push
pop
fldt
out
mov
int
sub
shl
mov
jmp
push
mov
bound
cld
add
pop
arpl
push
dec
sub
scas
test
outsb
movb
movsl
cmp
pop
and
xchg
inc
mov
mov
xchg
in
mov
adc
fisubl
pop
mov
mov
iret
xchg
or
popa
jnp
in
insl
in
hlt
jmp
pushf
lds
cld
lods
sarl
inc
add
or
bound
test
loopne
xlat
mov
mov
or
push
ss
sbb
xchg
scas
imul
cmp
cmc
jb
test
xchg
shll
aad
sahf
adc
adc
cwtl
inc
mov
push
inc
loope
xchg
jo
xor
dec
sbb
mov
pusha
int
stc
jbe
and
out
in
add
mov
nop
dec
jp
clc
loop
push
movsb
xor
dec
jle
jle
xor
mov
les
jl
xor
mov
inc
and
int3
mov
das
xor
aam
aad
shlb
icebp
jg
xchg
or
sub
es
adc
sbb
fwait
icebp
aaa
cmp
es
call
push
sti
fbstp
xor
ficoms
popa
jmp
and
mov
add
dec
inc
adc
inc
lcall
mov
or
push
and
aas
add
jge
push
ds
push
out
out
jp
mov
mov
and
lds
fists
std
cwtl
loop
mov
ja
sub
sbb
rclb
nop
dec
mov
mov
xor
popf
pushf
repz
add
pop
pop
shl
rcll
and
shlb
jno
je
lock
iret
stos
jle
repnz
sbb
popa
das
inc
sahf
cld
lret
cmp
push
inc
lret
mov
sahf
inc
es
sub
test
dec
mov
pop
or
push
or
adc
sub
mov
and
adc
ljmp
jns
out
cmc
in
adc
lock
outsl
push
mov
lcall
insb
xchg
addr16
push
push
add
cmpl
leave
adc
mov
inc
inc
les
test
test
sub
mov
mov
dec
xor
test
out
movsb
lods
or
jns
fs
xchg
mov
jo
js
push
jbe
inc
and
dec
jbe
pop
sbb
scas
rorl
ficoml
fcmove
jnp
fidivrs
sbb
jge
pop
jbe
jo
popa
mov
or
gs
push
rcl
movsb
push
negl
dec
gs
cmp
sub
insl
mov
mov
and
cmpsb
aam
sub
cmp
xor
sti
test
fisttps
and
jbe
cmp
sbb
inc
xor
mov
repz
or
enter
mov
xchg
xchg
fsubrs
ret
loopne
into
hlt
mov
sub
jae
addr16
sbb
mov
mov
insl
mov
daa
mov
push
push
cmpsb
add
out
rclb
cmp
iret
xchg
adc
lods
push
popa
push
dec
lcall
cmc
data16
jbe
sbb
divl
push
xor
push
rcll
test
outsb
scas
mov
aas
xlat
iret
push
cmovl
addr16
mov
push
lock
sub
and
lock
inc
jo
sbb
mov
cmp
pop
or
aas
scas
jb
xor
xchg
ss
dec
das
test
xor
inc
fs
ljmp
mov
out
insb
punpckhbw
mov
movb
js
inc
or
push
xlat
sbb
pop
sti
sbb
fstpl
or
mov
sub
fcoml
jne
mov
push
mov
negb
dec
daa
sub
lods
jge
out
loop
push
push
and
jge
popa
xchg
or
lahf
adc
sbb
lds
cmpsl
cmp
adc
fdivrs
mov
sti
pushf
dec
into
pop
rcl
add
ds
mov
fs
stos
jae
aad
addl
lcall
loopne
enter
ds
push
fs
add
xchg
imul
mov
mov
sbb
paddb
clc
pop
and
sub
daa
lret
pop
dec
cwtl
arpl
push
adcb
arpl
and
push
jb
xorb
add
cmpsl
pop
lea
xor
call
cmp
fisttps
leave
xorl
xchg
adc
pop
push
push
push
rclb
mul
sbb
dec
popf
inc
sarl
pop
push
aad
xchg
adc
mov
jbe
mul
shrb
mov
inc
xchg
ja
scas
cli
pop
movsb
call
cmp
xor
sub
aad
mov
std
mov
jg
and
push
mov
outsl
add
push
std
dec
mov
or
jmp
ss
jge
xchg
and
mov
add
push
xor
loopnew
jmp
fiadds
test
cmpsb
aaa
out
fimuls
pushl
lds
cmp
bound
push
mov
cmp
cmpl
jbe
incb
je
inc
sub
clc
jnp
adc
jle
hlt
push
daa
or
adc
addsd
dec
popl
pop
fcom
xorl
dec
xchg
dec
jno
mov
movsb
sub
hlt
lret
jae
jmp
xchg
dec
push
jge
xor
cmp
mov
ret
in
and
ret
jl
sahf
xlat
mov
and
adc
push
insb
mov
jmp
push
gs
test
addr16
mull
mov
mov
in
fnstenv
test
jo
mov
mov
sub
fistps
sub
pop
je
ja
loope
stos
pop
es
fistps
mov
addr16
test
test
fadds
jg
rorl
sub
dec
xor
mov
dec
popf
mov
push
into
push
xlat
fwait
inc
gs
sbb
scas
movsl
imul
subb
dec
cmp
fnstsw
cli
jnp
or
iret
testl
or
xor
mov
stos
add
xor
clc
inc
popf
scas
cmp
or
ljmp
test
add
or
jecxz
xlat
mov
in
xchg
scas
xor
repz
xchg
jno
mov
adcl
cmp
popa
mov
icebp
sbb
sub
and
insl
jae
outsl
adc
data16
popf
pop
gs
pop
and
pusha
lret
ror
adc
dec
aam
jmp
cmpsb
push
outsl
sbb
rcrb
fists
test
lahf
jle
add
push
lcall
in
jns
mov
std
sub
jp
inc
stos
fbstp
jne
xor
fstl
jl
dec
adc
jecxz
out
cmp
gs
mov
add
dec
xchg
insb
dec
xchg
outsb
popf
fildll
movsb
push
adc
iret
inc
enter
mov
push
in
mov
jo
mov
out
out
test
ljmp
out
jns
jno
jg
dec
sbb
cmp
hlt
arpl
jmp
pop
rcl
mov
aas
bound
fldl
xchg
push
mov
js
mov
sbb
addb
sub
inc
push
adc
mov
sbb
push
lret
mov
ficoms
ss
inc
push
inc
mov
mov
pop
inc
daa
int
sahf
outsb
mov
popf
fnstsw
xchg
mov
jg
fcmovnu
push
bound
ja
mov
pushf
mov
ret
decb
lcall
stos
xchg
add
and
out
movsb
nop
inc
sbb
insl
push
inc
add
scas
fs
data16
adc
add
orb
fisubl
and
push
mov
test
add
mov
sbb
rorl
int3
xchg
add
outsb
pop
cmp
std
mul
inc
add
jno
and
xchg
rorb
cmpb
sar
mov
ret
jo
sbb
push
mov
sub
icebp
jmp
push
ret
jo
jns
in
fdiv
mov
ja
adc
mov
faddl
jmp
fsubr
xlat
push
lcall
xchg
dec
xchg
cmp
pop
pmaddwd
out
mov
sbbb
fs
and
imul
jmp
xlat
lret
sarl
and
jne
inc
pop
jb
sub
lret
mull
fsubrs
dec
cmp
or
scas
pop
mov
fcomi
out
push
push
stos
sub
aas
add
adc
xor
addr16
out
and
sub
leave
lods
call
stos
lcall
fimull
or
in
mov
jge
push
mov
subb
lahf
and
mov
adc
push
inc
cmp
mov
and
or
cmpsb
imul
addl
mov
hlt
push
aas
xchg
mov
xchg
cmp
and
aaa
shll
and
imul
and
sbb
sti
adc
add
dec
inc
aas
add
pop
mov
scas
ret
dec
xor
push
shll
bound
dec
jecxz
jl
and
inc
dec
cmpsb
jecxz
cli
imull
cmp
dec
insl
push
jne
jne
cmp
and
lahf
cs
jno
ljmp
sti
idivl
cmpsb
push
jmp
xchg
sub
push
mov
outsb
xchg
ljmp
sbb
or
fdivrl
sub
adc
outsb
jns
mov
sahf
mov
divl
popf
inc
shlb
dec
je
lds
loop
push
or
xlat
cmp
cmpsb
dec
arpl
xchg
aad
sub
xor
sarb
loopne
push
pop
xlat
in
jb
arpl
adc
pop
jge
lret
mov
stos
cwtl
test
and
push
je
cld
adc
or
repz
mov
jmp
jle
mov
mov
jnp
or
std
aaa
jl
dec
adc
add
dec
mov
jmp
dec
push
adc
ret
aas
xor
js
les
insl
and
test
jecxz
jl
rcrl
mov
cmp
pop
or
pop
out
or
push
mov
inc
mov
cli
mov
in
inc
or
mov
add
je
scas
sub
push
add
mov
outsb
sub
pop
pop
fistl
pop
lahf
dec
nop
std
jmp
int3
and
push
aam
pop
xlat
adc
pop
cld
mov
and
jne
xchg
idiv
add
mov
inc
xchg
mov
out
aas
push
xor
shll
out
xor
cltd
push
movsb
lods
mov
cmovb
sti
loopne
add
mov
ret
mov
inc
jb
and
pop
and
push
inc
aas
inc
sbb
out
adc
mov
out
addr16
sbb
dec
add
int
xchg
mov
xchg
jne
add
xor
push
mov
push
or
dec
fcomps
and
int3
inc
imul
and
popf
out
repnz
loope
mov
pop
es
xor
in
dec
cmpsl
sbb
andb
xchg
out
pop
xchg
lock
dec
mov
pop
mov
bound
nop
int3
sub
aam
ret
cmpsl
push
sbb
divb
sub
cli
cs
std
mov
cmpsl
imul
les
fistpll
xor
aaa
xor
lret
loopne
in
xchg
inc
lret
cmp
stos
dec
ret
inc
not
and
xor
dec
jo
cwtl
pop
mov
sahf
cmpsl
cmp
lea
pushf
cmpsl
mov
loop
test
push
ret
sub
inc
mov
mov
imul
or
orl
mov
lds
shll
sbb
inc
cmp
pop
add
pop
mov
push
sbb
mov
in
xchg
std
or
jle
jne
test
mov
push
mov
cmp
ds
scas
mov
outsb
test
stc
fldl
stos
ror
push
imul
test
or
shll
inc
out
mov
pushl
aad
popa
mov
sbb
je
cli
jge
add
mov
jbe
push
lahf
mov
pop
ficomps
xor
push
lret
aas
push
xor
jo
mov
pop
mov
dec
jno
int3
adc
xchg
cli
sub
pop
cmp
cli
scas
xor
int3
adc
and
mov
cld
mov
incb
or
lcall
sbb
lock
push
cwtl
xchg
aaa
ret
cwtl
stc
ret
cmpsb
jle
jmp
mov
aam
in
pop
fmuls
movsl
scas
and
enter
in
add
dec
pop
negl
std
sarl
jmp
pushf
cmc
push
icebp
pop
sbb
xchg
std
cmc
ficompl
add
or
push
lahf
jo
inc
pop
or
inc
int3
and
test
in
pop
pop
xor
cwtl
jmp
int
out
push
push
shlb
movsb
inc
add
sahf
scas
int3
push
dec
stos
sbb
adc
inc
sub
fcom
cli
test
mov
sbb
adc
mov
scas
sbb
push
stos
lods
mov
xor
pop
fmull
shrb
sub
sbb
jns
xor
cmp
ret
imul
movsb
and
jnp
and
mov
cmp
jecxz
mov
dec
stos
push
incb
inc
into
jae
aad
dec
mov
aas
roll
fistpll
cmc
or
outsb
pop
and
pop
cli
xor
out
mov
pop
out
int
aaa
mov
sbb
pop
ret
scas
outsl
mov
xchg
cmp
jns
cmp
push
arpl
in
sub
sub
scas
adc
iret
pop
fdivr
mov
or
mov
jmp
lcall
lock
aaa
push
push
dec
iret
sti
sub
inc
lcall
xchg
jae
sub
mov
insl
push
mov
nop
mov
push
sub
es
ficompl
sub
test
mov
out
sbb
mov
scas
pop
movsl
mov
iret
ljmp
jmp
xchg
lods
into
movsb
push
dec
mov
inc
and
mov
xchg
imul
std
add
in
pop
leave
loope
push
test
in
jnp
jg
out
rolb
je
mov
fisttpll
aad
adc
fs
add
mov
mov
outsl
mov
mov
insb
cmp
outsl
inc
dec
popf
cli
aas
sbb
push
dec
pushf
add
enter
outsb
dec
jmp
lret
or
mov
bound
push
test
leave
out
ja
loope
cmc
inc
adcb
sbb
jae
push
insb
mov
ss
das
stos
push
mov
sbb
push
or
test
adc
aad
jp
in
loop
mov
int
add
hlt
arpl
sub
insl
mov
mov
es
test
cmp
jbe
fiaddl
or
inc
mov
push
mov
dec
cmpsb
jge
sar
mov
mov
mov
negb
xlat
cmp
sbb
icebp
xor
out
xor
inc
in
sahf
mov
scas
add
dec
imul
xlat
pop
nop
push
inc
dec
daa
lea
sub
sub
sbb
push
lret
xor
ja
xor
jns
lcall
cmp
pop
sbb
into
jle
add
cwtl
ss
dec
inc
mov
loop
ds
cltd
mov
insb
adc
and
repnz
mov
xorb
les
lahf
adc
les
dec
adc
hlt
cmp
pop
jg
mov
rcll
adc
cli
into
iret
fcoml
jne
add
in
imul
and
sbbl
push
mov
leave
push
repnz
imul
insb
mov
jb
cmc
jo
adc
mov
int3
sub
adc
jp
das
imul
mov
mov
xlat
lds
es
iret
push
cmp
jmp
mov
push
mov
and
test
mov
je
xor
dec
fisubs
mov
ljmp
das
pusha
subb
fs
push
popa
subb
insb
cmp
xor
mov
pusha
loopne
jae
push
scas
pop
xchg
rcr
inc
push
hlt
fcmovnbe
in
add
popf
pop
inc
mov
sbb
scas
cmp
sbb
stos
mov
sbb
in
mov
xor
fnstsw
decb
cmpsl
in
jae
pop
lret
repz
xor
aaa
loope
and
test
je
test
xchg
mov
mov
shlb
xchg
mov
les
sbb
lahf
in
out
mov
lock
in
and
cld
dec
dec
xor
fs
aam
push
es
add
in
sbb
rcrl
fstl
lea
mov
enter
jmp
aam
mov
pop
js
hlt
xor
loop
or
andb
je
mov
mov
pop
adc
xorl
and
pop
orl
xchg
xchg
test
lret
add
sbb
je
daa
test
mov
adc
rcll
push
push
and
cmpsb
pop
add
out
cltd
out
ficoms
lret
xchg
cmp
fldt
fildl
cmc
mov
cs
push
lea
push
shrb
pop
fcmove
sbb
cmpl
add
sbb
add
stos
dec
dec
iret
jecxz
lods
cmp
and
mov
mov
out
xchg
imul
pusha
loop
in
outsb
dec
adc
out
inc
aad
push
jb
or
lods
push
sahf
xor
ret
shrb
and
xor
mov
arpl
notb
int
jmp
stos
mov
xor
mov
push
es
shlb
ret
mov
in
mov
mov
jo
mov
ljmp
xor
test
stos
int
push
add
arpl
jmp
lock
pop
psllq
and
sub
testl
adc
mov
and
add
ss
adc
mov
cwtl
fxch
and
aaa
insl
rorl
js
jl
cmp
push
or
adc
mov
push
clc
mov
gs
and
mov
mov
dec
in
pop
ljmp
shl
mov
fmuls
mov
fwait
std
repz
das
test
in
xor
subb
or
mov
arpl
out
lret
sti
call
loope
xchg
jae
and
fsubrl
push
inc
fistpl
inc
and
jo
or
mov
stos
lret
fcmovnb
sbb
jne
imul
call
sub
frstor
add
mov
pop
and
mov
mov
jae
std
lret
dec
ret
psubusw
test
xlat
sbb
enter
xchg
jbe
adc
add
mov
pop
ficomps
cmp
fwait
mov
xor
cld
jns
imul
adc
or
test
add
xlat
push
lcall
mov
jl
pusha
jge
mov
cwtl
fs
mov
fldcw
cmpsb
cmp
iret
xlat
sti
vcvtsi2sd
cmp
pop
mov
and
test
add
xor
imul
outsb
mov
jle
and
jo
ss
adc
mov
sub
popf
mov
pop
mov
and
xor
push
pop
test
aam
movsl
push
add
jg
add
add
mov
push
popf
jle
or
dec
mov
add
scas
loope
fmuls
pop
repnz
addr16
push
pop
push
hlt
stos
fistps
lret
flds
adc
pop
popl
outsl
repz
arpl
cwtl
or
or
fisubrs
repz
jl
mov
insb
push
dec
mov
push
hlt
mov
les
mov
adc
sbb
push
xor
lods
imul
and
pusha
xlat
nop
fstl
pop
pop
adc
pop
or
push
roll
repz
dec
inc
into
sbb
or
and
stc
jmp
shr
icebp
mov
lods
dec
sbb
pushf
sub
and
xchg
pop
jmp
hlt
cmp
pop
sub
xor
sahf
xor
lret
sbb
adc
pop
jle
bound
xor
sbb
push
push
cwtl
stos
add
in
inc
insb
add
popf
xchg
pop
orb
push
mov
inc
dec
push
dec
addb
in
pop
sbb
add
cmp
roll
sub
or
and
es
int3
int3
scas
mov
push
xor
pop
dec
mov
mov
lock
movsb
sub
aad
stos
fldenv
popf
popf
jnp
int
push
nopl
orl
sbb
dec
push
aam
std
leave
mov
popf
cltd
idivl
hlt
movsb
xlat
pop
rclb
xchg
ljmp
push
call
fs
xchg
jecxz
fwait
nop
lret
das
je
int3
lods
cmp
add
jecxz
lods
dec
jne
and
negb
vxorpd
imul
dec
pop
in
xchg
pop
fldenv
mov
ret
nop
loop
shl
iret
in
popf
cmp
test
imull
aaa
ret
add
fcoms
lock
addr16
inc
dec
lret
inc
lret
outsl
into
push
xor
sub
sub
sub
xchg
movsl
push
sub
add
jae
add
sub
push
or
orl
shlb
call
or
subl
cltd
lret
jmp
addl
mulb
ret
adc
mov
add
cmp
mov
in
mov
cmpsb
jl
adc
adc
loopne
add
stos
int
xchg
push
cwtl
cwtl
rorb
fnstcw
int3
fwait
insb
pushl
pop
pop
stos
xor
mov
mov
mov
fs
js
or
xchg
movsl
lock
and
fs
jl
pop
fcom
jbe
pusha
pop
js
scas
cli
ss
jae
mov
pop
pushf
pop
jbe
mov
fwait
xchg
jno
jg
push
mov
mov
ss
adc
lock
mov
aam
cmp
or
and
int
pop
mov
xchg
or
out
xor
sub
dec
repz
les
dec
and
ljmp
and
popfw
cmp
imul
mov
ds
lods
jp
lods
adc
mov
mov
mov
sbb
outsb
pop
in
loop
xor
addps
shr
cmp
pushf
dec
push
jno
push
aaa
ret
mov
imul
and
cltd
adc
sub
iret
shll
xor
and
and
jne
addr16
mov
adc
pop
mov
sbb
mull
outsl
lcall
iret
aad
or
add
out
lods
insb
xchg
cmpsb
lea
cmp
insb
pop
js
lcall
jnp
pop
test
inc
outsl
dec
lea
xchg
sar
inc
cmp
xor
cmpsl
notb
jle
lahf
inc
and
outsl
xchg
push
out
in
fldcw
dec
jmp
adc
loopne
bnd
imul
jne
test
cli
stos
lods
clc
andl
or
adc
ljmp
icebp
das
in
sti
sub
data16
dec
ss
out
push
fsts
inc
inc
inc
ret
popf
pop
shll
ds
aam
xchg
jecxz
xchg
cwtl
mov
cmpl
inc
sbb
or
cli
ret
sbb
and
mov
inc
fs
xchg
mov
inc
pop
cli
push
push
sbb
or
add
ljmp
jbe
imul
lea
fisubrs
lock
imul
lock
or
sahf
fnsave
dec
pusha
arpl
cli
loopne
int3
jae
fwait
jmp
or
cld
out
pop
mov
scas
xchg
mov
or
sarb
cmc
add
push
scas
mov
scas
pop
loop
stc
mov
subl
sbb
xlat
in
aaa
cltd
in
mov
out
jnp
shrl
and
leave
pusha
outsl
dec
daa
aam
aad
mov
pushf
push
push
cmp
imul
scas
cmc
add
mov
xchg
cwtl
lods
add
pop
fmull
test
inc
in
cmp
cmp
add
lock
pop
pop
gs
shlb
xchg
dec
shr
and
rcl
push
je
arpl
loop
push
push
inc
pop
test
loopne
mov
addl
pop
daa
pushf
xor
ret
cli
std
test
pusha
dec
sahf
pop
xlat
loope
adc
out
sti
pop
cmp
in
lds
lret
and
and
pop
dec
out
sub
mov
xchg
and
inc
sti
adc
stos
sub
dec
lcall
jne
cmp
sbb
sbb
pop
cli
cmpsb
mov
jecxz
push
mov
cmp
xchg
xchg
fidivrl
lods
xor
mov
rcrl
lahf
jmp
push
cmc
std
pop
mov
mov
pop
mov
inc
or
mov
adc
mov
aaa
aaa
or
adc
inc
mov
dec
shlb
xor
imul
hlt
cmp
mov
pop
dec
xchg
mov
pop
adc
xorl
divl
cld
push
dec
jp
mov
pop
mov
cmpsl
sbb
mov
pop
push
adc
dec
cmp
imul
pop
iret
inc
sbb
jae
stos
aam
aaa
xchg
or
sbb
push
sbb
push
loopne
aad
outsl
push
imul
xchg
and
adc
or
in
ljmp
xor
mov
aas
mov
pop
sahf
dec
outsb
in
push
mov
rcl
or
mov
push
fmuls
icebp
dec
icebp
pop
xchg
hlt
rcll
inc
mov
ja
leave
xlat
movsl
pushf
cmp
or
push
pop
inc
hlt
test
int3
sub
dec
and
ja
les
push
cmp
sbb
mov
das
lods
or
movsb
push
shlb
outsl
test
jmp
xor
push
inc
cmp
stos
mov
movb
je
sub
das
mov
sbb
xor
sbb
push
rcr
inc
dec
xor
fcompl
iret
in
sbb
xchg
in
dec
imul
push
outsl
mov
push
mov
cmp
out
lret
lods
pop
mov
shrl
dec
xor
sbbb
mov
jg
cld
movsl
test
test
mov
and
sahf
js
mov
inc
jmp
jne
xchg
mov
call
dec
clc
cmc
dec
or
cmp
andb
adc
cmp
jmp
std
push
ljmp
pop
jle
mov
jnp
add
xor
lcall
ljmp
subl
adc
mov
sub
in
mov
icebp
jg
clc
ja
scas
or
xor
jb
es
mov
pop
lods
push
cmpsb
xor
xorb
shlb
hlt
sub
push
jmp
or
dec
test
jb
lret
cmp
mov
nop
loop
inc
mov
shl
stos
add
cltd
andb
in
mov
mov
xchg
out
cwtl
gs
data16
div
cwtl
lcall
inc
icebp
ret
insb
cmc
call
sbb
pushf
incb
in
xchg
xor
rcrb
out
cmc
sub
xorb
gs
push
bound
cmpsb
js
push
sbb
xchg
push
lret
cmp
imul
dec
subb
pop
lret
aad
add
xor
fdivs
push
outsl
mov
les
pop
mov
das
scas
pop
xchg
mov
dec
cs
pop
dec
xchg
jne
loope
sbb
mov
dec
popa
mov
inc
adc
lret
sub
xchg
addl
ret
outsb
jnp
and
rol
cmpsb
popa
pop
sbb
or
popa
mov
jp
outsl
mov
movsb
inc
mov
and
inc
scas
repnz
dec
or
fnsave
rcll
loopne
ficompl
icebp
mov
bound
fadds
outsl
fidivs
adcl
stos
adc
push
xorb
mov
xchg
dec
mov
cmp
mov
ss
orl
mov
and
out
adc
add
jle
lahf
pop
adc
sbb
cmp
cmp
fldl2e
shl
jo
rorl
xchg
mov
dec
in
fstl
jmp
cwtl
mov
dec
imul
mov
push
imulb
add
inc
fidivrl
xchg
test
daa
fs
cltd
cmp
imul
icebp
stos
push
repz
stos
push
lods
lret
out
jne
sub
xchg
mov
lds
adcb
cltd
inc
ret
dec
lahf
jnp
arpl
mov
mov
add
add
mov
and
mov
mov
fdivrs
std
mov
testl
call
sub
push
cmp
les
jl
mov
lea
inc
test
push
insb
icebp
pusha
and
sarb
in
push
mov
arpl
sub
cltd
js
rcr
fimull
mov
lahf
xor
call
add
sbb
sbb
enter
push
xchg
adc
sub
dec
lods
push
ret
cld
cmp
push
in
cmc
dec
pop
add
jle
add
int
jne
xchg
aad
cmp
or
adc
popf
or
test
cltd
imul
bound
mov
std
pop
ljmp
dec
xchg
int3
push
aam
sub
cmp
xchg
push
sub
jge
ss
dec
in
mov
stos
fcoml
xor
mov
xor
sbb
sub
fidivrl
mov
ds
icebp
mov
pop
loop
in
ljmp
pop
pop
dec
out
loope
iret
cmp
pop
xor
outsb
push
xchg
pop
push
add
iret
xchg
daa
mov
and
lods
je
mov
mov
jmp
stos
test
cmp
roll
xlat
clc
push
push
sub
or
mov
xor
xchg
xchg
adc
movsl
outsl
scas
cwtl
mov
repz
or
ljmp
iret
push
scas
stos
in
add
mov
or
adc
mov
inc
push
cwtl
arpl
out
outsb
xchg
dec
dec
add
xchg
mov
add
dec
mov
ja
addr16
xchg
add
lahf
addl
int
mov
cmpsb
xchg
call
lret
dec
mov
jmp
xor
cmc
mov
fdivr
xchg
add
push
sub
fistps
rorb
mov
inc
jmp
pop
rorb
inc
pop
call
pop
dec
jmp
fstpl
icebp
pop
aam
sahf
test
std
jbe
fs
outsl
testl
adc
pop
aas
mov
add
mov
xchg
test
or
adc
sbb
jbe
add
js
cs
in
cmp
dec
int3
push
dec
clc
jo
xchg
add
jnp
pushf
jb
mov
or
sub
xchg
push
les
or
jns
jne
pusha
mov
and
xor
or
sub
fcompl
lods
pop
push
lds
pushf
mov
xchg
mov
movsb
out
negb
push
jnp
jge
push
pop
mov
xchg
mov
xor
push
cmp
imul
or
out
dec
loop
and
adc
out
mov
adc
subl
inc
xchg
leave
icebp
dec
imul
sbb
aad
jo
fwait
add
shrb
xchg
adc
inc
in
pop
clc
aad
adc
sbb
add
push
bnd
push
and
fstpl
loop
push
loopne
dec
pusha
and
pop
dec
push
imulb
lahf
jo
loope
jmp
mov
sbb
add
std
mov
out
cmp
jmp
mov
lods
mov
ja
dec
ret
cs
mov
adc
add
arpl
mov
lds
jno
adc
fisttpl
jge
cmpsl
mov
push
mov
jae
add
aaa
mov
cmpb
lea
dec
sahf
stos
std
not
xchg
xor
jbe
rol
mov
cwtl
in
std
out
call
and
imul
dec
cli
idivl
dec
pop
jae
xor
mov
push
pop
push
pop
in
pop
or
arpl
cltd
sub
xchg
mov
popf
shll
fidivs
shlb
mulb
stos
xchg
jp
pop
cld
das
xchg
mov
lret
cmpsl
popf
insb
test
out
add
cmp
ss
dec
xor
xchg
mov
cmp
cmp
jns
popa
jge
shlb
sub
mov
mov
add
mov
js
inc
mov
or
cld
xor
std
repnz
xor
inc
jge
das
rolb
push
mov
icebp
and
push
sti
out
fdivrs
sub
cvtdq2ps
jb
mov
stc
push
and
xlat
mov
loopne
or
mov
mov
jmp
xchg
aad
mov
xchg
add
adc
sahf
scas
enter
and
in
cli
lods
cmp
fwait
jle
xchg
repz
and
xchg
inc
mov
movsb
lret
sbb
lods
pushf
and
nop
pop
roll
pop
cli
notb
jae
icebp
ljmp
mov
scas
cmp
leave
pop
dec
pop
roll
aaa
xchg
sbb
fwait
dec
mov
nop
ret
mov
or
in
in
cmp
test
and
fcmovne
xor
push
push
movlps
cli
push
jl
cmp
pop
leave
fldt
push
jnp
inc
in
xor
mov
cmpsb
cltd
mov
mov
loopne
mov
sbb
and
mov
mov
js
push
push
cs
cmpb
mov
loopne
lret
iret
outsl
inc
add
lahf
je
pop
jl
call
fimuls
aam
mov
stc
mov
cmp
popl
ds
inc
pop
outsb
push
add
cmc
ljmp
inc
xchg
es
dec
dec
fdivl
fadd
pop
push
jae
lahf
test
adc
insb
rol
mov
xchg
add
test
mov
enter
mov
add
or
lret
stc
bound
bound
clc
sbb
mov
jbe
popa
xlat
mov
call
lret
rcll
dec
arpl
fwait
sub
je
and
scas
sbbb
xor
dec
lods
lds
fidivrl
repz
sub
in
dec
cld
fdivs
push
mov
or
scas
push
movsb
hlt
dec
sub
pop
inc
rcl
inc
jb
xor
push
mov
ficoms
test
mov
sbb
sbb
mov
xchg
inc
or
dec
popl
jno
in
mov
sub
xchg
xchg
push
add
or
pop
lea
inc
iret
mov
dec
sbb
dec
sub
or
xchg
aas
mov
sahf
movsb
xorb
inc
xor
mov
scas
add
ret
jecxz
ret
mov
mov
or
outsl
ja
jnp
add
mov
xchg
mov
mov
xchg
lahf
adc
dec
test
push
clc
mov
sub
pop
add
sbb
ja
loopne
mov
out
in
dec
repnz
cmp
ror
adc
pop
push
cmp
jbe
sbb
ret
pop
add
add
cmpl
add
mov
mov
or
aam
jge
ljmp
add
mov
scas
icebp
xchg
movsb
adc
xchg
dec
fsubs
mov
das
lods
aaa
cmp
orb
xor
pop
rolb
push
mov
push
mov
gs
repnz
dec
lret
dec
call
adc
xor
sbb
xchg
les
xchg
jg
inc
mov
int
nop
jns
mov
xor
mov
mov
fucom
xorb
pushl
aas
imul
aam
popf
pushf
in
push
fbstp
inc
daa
jge
push
mov
incl
out
xor
int3
mov
movsb
pop
xchg
fldl
and
in
dec
addb
and
sbb
fists
jno
push
or
fsub
jmp
insb
jmp
xchg
sub
clc
call
iret
es
cltd
outsb
push
pop
sub
out
cmpb
fucomp
bound
fdivr
in
jne
xchg
mov
jbe
xor
mov
sbb
pop
cld
adc
loopne
fs
adc
icebp
mov
fcoml
and
pop
push
fcoms
outsl
mov
dec
sti
enter
adc
or
sbb
subb
jns
shr
outsb
rol
pop
pop
inc
ljmp
mov
fs
les
ljmp
iret
cmp
daa
cld
mov
inc
iret
je
mov
test
dec
insl
xor
pop
fdivrs
inc
dec
rol
xchg
out
jmp
push
jle
bound
mov
fstpl
xor
addr16
rcrl
iret
cmp
push
push
mov
xchg
shl
push
jae
jp
sub
out
jae
in
mov
push
cmc
mov
mov
pop
js
mov
daa
adc
out
aaa
mov
sarb
and
jno
outsb
rcrb
mov
ffreep
fs
fdivs
leave
aas
les
mov
xorl
xor
push
scas
test
mov
fadd
icebp
outsb
lea
insl
test
fwait
mov
arpl
sbb
loop
jp
leave
aad
mov
jb
int3
stos
movsl
addb
dec
inc
enter
sub
add
testl
add
lea
in
ds
cld
mov
mov
jno
push
dec
stc
mov
add
inc
loop
sbb
xor
adc
pop
xchg
les
movb
add
sbb
add
pop
fwait
out
xchg
sbb
imul
hlt
movsl
stos
pop
jg
test
push
and
xchg
mov
loop
pushf
xchg
adc
bound
or
jl
ljmp
sahf
clc
dec
dec
aad
rorl
push
ret
pop
inc
push
sub
std
dec
mov
hlt
ljmp
jne
inc
add
test
dec
push
push
add
or
in
add
imul
mov
fistpll
push
mov
add
sub
ret
adc
and
pcmpeqd
xor
lret
movsb
lret
popf
jno
mov
bound
xchg
pop
or
dec
lods
and
dec
loopne
lods
add
inc
push
add
add
test
mov
xchg
sub
loope
xchg
sbb
clc
repnz
mov
sbb
mov
rorl
pop
iret
lret
or
iret
mov
loope
sbb
push
cltd
addr16
adc
testl
mov
subb
jle
xor
jnp
push
or
aam
sti
dec
push
loope
addb
shll
lods
adc
je
add
fcomip
cld
jmp
lret
out
daa
cwtl
sbbw
push
in
sub
loop
push
pop
cld
ret
les
xchg
outsb
xor
mov
or
jns
mov
jo
pop
push
sti
shlb
aam
fdivl
xor
aas
loop,pt
fisttpll
rolb
sub
into
leave
repnz
cmp
int3
lcall
in
jne
add
mov
outsb
sub
jnp
jno
xor
icebp
in
sub
jecxz
pop
loop
aaa
aas
jne
lock
jecxz
mov
sbb
inc
push
sti
dec
xchg
pop
xchg
cmpsb
mov
daa
sbb
xor
fldcw
iret
jl
sub
repz
pop
lahf
mov
mov
cwtl
gs
out
adc
sarb
in
push
cs
call
daa
in
imul
add
jbe
pushf
fmull
inc
cltd
stc
sbb
in
cmp
sarb
push
dec
je
dec
cs
dec
dec
dec
fldt
jae
int3
mov
inc
jo
std
mov
or
xor
adc
jecxz
sub
adc
push
mov
jbe
es
mov
divb
push
pop
cld
ljmp
loope
in
sbb
arpl
shll
fdivrs
insl
icebp
cmpsb
and
adc
pop
xchg
adc
inc
lret
pushf
xchg
ret
cmp
pusha
pop
in
popf
lahf
outsb
outsl
sbb
cmpsb
xlat
clc
lock
call
into
sahf
dec
out
lods
jp
cmp
insb
mov
adc
jno
mov
outsb
dec
adc
inc
fwait
stos
or
clc
mov
mov
shr
idivl
pushl
test
imul
cltd
shlb
arpl
and
mov
mov
sub
shrl
shlb
fwait
stos
mov
mov
fistpl
shlb
cmp
inc
enter
pop
enter
cmp
fstps
mov
xchg
xor
mov
cmp
loop
xor
jg
jecxz
or
add
test
stos
les
imul
mov
pop
push
lcall
hlt
mov
jl
lret
mov
jno
adc
push
add
dec
stos
and
movsl
lret
jp
in
insl
adc
xor
popa
mov
mov
test
movsl
insl
dec
push
cmpsl
sbb
es
cs
cmpsl
and
pushf
mov
notb
adc
add
mov
cmp
inc
test
aam
test
mov
inc
pop
out
hlt
cmpsl
xor
jne
xchg
popf
les
mov
push
js
lds
loop
pop
xor
cmp
mov
inc
loopne
cld
add
int
pop
aam
or
push
add
jb
xorb
movl
push
sti
push
pop
lods
out
mov
pop
cmp
xlat
scas
lcall
aam
stc
test
xchg
icebp
loop
lods
pop
data16
mov
jle,pt
pop
ror
pop
pop
or
repnz
inc
sti
jne
jl
add
sar
in
pslld
sub
jns
jle
aam
sahf
fldenv
loope
mov
xchg
test
imul
adc
shr
mov
fnstsw
and
loop
test
incl
rolb
stos
rcrb
xchg
fwait
xchg
in
push
mov
dec
sbb
test
lahf
xchg
je
repnz
popa
cmpsb
mov
notl
or
xlat
test
pop
xchg
jle
mov
sbb
clc
shll
xchg
push
mov
cwtl
push
hlt
pop
ds
jmp
and
aaa
mov
cld
mov
jge
inc
movsl
movq
insb
jbe
jg
daa
jno
jno
out
mov
push
icebp
lea
imul
ja
and
adc
push
push
nop
fwait
pop
cmp
cmp
shrb
pop
pop
push
fnstsw
addb
leave
scas
je
je
rcll
adc
call
popa
push
sbb
jmp
push
xchg
mov
popf
push
cmp
icebp
add
popa
enter
mov
mov
out
das
fidivs
xor
inc
adc
std
mov
pop
in
pop
add
xchg
outsl
jp
cmpsb
std
cmp
icebp
out
push
mov
lret
sub
bound
leave
cmp
or
mov
movsb
insl
out
adc
insl
and
mov
lods
movsl
lds
aaa
shl
dec
divb
inc
aaa
jecxz
pop
cmp
aam
xlat
jbe
nop
dec
jp
jb
cmp
pop
mov
and
pop
jge
cmp
imul
jl
dec
sbb
sti
dec
in
adc
pop
xlat
fistpl
repz
mov
inc
pop
nop
or
pusha
mov
fsubrs
mov
pop
in
cmpsb
movsb
mov
or
jne
and
add
adc
cmc
mov
mov
mov
test
xchg
popf
test
ds
mov
mov
dec
popf
mov
jno
loopne
jmp
pop
mov
mov
in
rcll
mov
adc
in
in
jmp
xlat
add
or
and
sub
mov
popa
pop
mov
ljmp
jmp
xor
imul
pop
fsts
cmp
pop
scas
cmp
pushl
or
aas
jae
sub
or
cmp
in
mov
push
mov
mov
rcrb
mov
mov
fisttps
mov
std
push
dec
enter
mov
test
pop
sbb
ret
leave
rolb
add
pushf
mov
fsubrl
test
rcrl
ljmp
push
jb
dec
xchg
mov
leave
fsubr
bound
test
rol
pusha
lock
inc
js
cld
mov
gs
and
mov
jp
or
sbbb
pop
test
and
popa
mov
jp
jno
jl
jle
aas
test
jbe
cmc
mov
jmp
clc
shr
mov
sub
gs
mov
or
add
sub
xchg
sub
adc
adc
sub
loopne
sbb
sbb
dec
add
push
into
jecxz
mov
mov
xchg
mov
mov
cmpsl
xor
into
nop
cmp
idivb
int3
sbb
ss
movsb
inc
inc
cmp
mov
xchg
loope
in
adc
rclb
out
fistpl
in
sub
clc
sub
rcrl
sahf
push
jle
aas
adc
mov
mov
xchg
loopne
imul
int3
push
and
xor
cmpsb
jbe
push
clc
mov
sub
mov
orl
stos
and
push
sub
sbb
sub
fimull
push
or
cwtl
pop
cwtl
adc
ja
mov
imul
loope
push
in
dec
mov
add
fwait
in
and
movsb
ljmp
mov
ljmp
xor
sti
mov
inc
sub
pop
pushf
sarb
imul
xchg
out
pop
xor
and
xchg
xchg
sub
fldt
mov
popa
xor
sub
sbbb
shlb
jp
lods
adc
cmp
addb
repnz
rcrb
test
lods
dec
xor
fimuls
imul
in
ret
shll
and
dec
or
sbb
dec
stos
leave
arpl
mov
mov
inc
test
mov
sub
push
outsl
js
sub
xorb
mov
push
loopne
leave
cmpb
jmp
stc
jo
out
inc
mov
into
adc
fnstcw
jp
loop
shll
call
popf
mov
jae
pushf
outsl
cmp
outsb
out
mov
jle
pop
adc
imul
pop
push
cmp
movsb
das
dec
mov
push
je
fdivs
cmc
insl
xchg
pop
stc
addl
push
mov
fstpt
jo
jmp
jo
fs
lcall
or
inc
mov
cltd
call
sarl
movsl
cmpb
dec
mov
pop
xchg
mov
std
mov
in
rol
iret
xchg
mov
dec
mov
jl
pop
ret
in
sarl
dec
frstor
sar
loope
fiadds
addr16
rorl
dec
les
adc
mov
shrb
push
daa
popa
fisubl
mov
arpl
into
fadds
push
push
in
push
imul
in
adc
aas
sub
inc
outsb
xor
out
cmp
in
cmp
pop
loop
iret
mov
ret
incb
mov
sarb
xor
cmp
and
sbb
pop
pop
add
push
shll
ficomps
call
je
mov
or
cld
xor
jne
test
sub
imul
xchg
inc
cmp
add
jnp
mov
pusha
into
dec
cmpsb
sbb
adc
stos
pop
repz
add
mov
clc
ja
push
lds
mov
mov
bound
push
adc
mov
sbb
stos
je
lds
sub
outsl
xor
repz
push
inc
cmp
fcomip
jecxz
inc
ja
inc
pop
loop
or
add
push
xchg
inc
adc
pop
clc
testl
xor
aad
dec
jnp
xchg
sbb
cmp
rolb
into
in
push
popa
or
addr16
jo
inc
xchg
bound
mov
and
incl
test
cltd
xor
xchg
adc
sub
push
and
ljmp
or
test
lods
xchg
mul
lcall
clc
cld
imul
mov
mov
mov
mov
mov
sub
xor
stos
pop
mov
mov
data16
dec
xor
jl
inc
lds
and
aam
jno
fwait
incl
adc
aad
xchg
mov
arpl
add
and
xor
sub
test
ds
dec
xor
cmp
lods
imul
lods
cmp
stc
sbb
sti
mov
sub
xchg
cmpsl
shll
and
in
cmp
pushf
in
xor
push
in
pushf
pusha
mov
loop
outsb
movsl
pop
push
sbb
mov
push
mov
nop
pop
or
jo
int3
push
jo
cltd
jns
dec
sti
fcoms
hlt
sub
lcall
scas
xor
int
es
jecxz
gs
mov
mov
insb
aad
ja,pt
sub
mov
insl
bound
jo
fdivr
aad
mov
jle
ret
ljmp
pop
xor
std
mov
outsb
inc
arpl
xchg
fldl
lods
sub
sbb
dec
pop
fildll
mov
add
ljmp
and
mov
inc
mov
sarb
and
call
es
cwtl
fsts
pop
test
jecxz
pop
adc
mov
mov
jae
fsubs
inc
std
or
jnp
movsb
insb
paddq
jecxz
or
xchg
out
rep
mov
roll
repz
pop
cmp
hlt
add
leave
scas
mov
fldcw
cmp
shrl
stos
inc
xchg
adc
inc
out
int3
out
add
arpl
incw
ds
insl
ficoml
repnz
push
adc
adc
xor
arpl
rorl
mov
daa
dec
and
pop
adc
dec
mov
lea
hlt
adc
pop
out
dec
popw
dec
mov
data16
gs
jge
outsl
mov
sbb
lea
pop
pop
push
sub
mov
sti
fldenv
mov
and
dec
rcll
mov
sbb
add
pushf
sbb
in
stos
cmp
sbb
sti
ret
lock
ret
mov
pop
pop
pusha
cmove
rcrl
cmp
shr
sub
sub
push
sbbl
inc
mov
pusha
pop
dec
lret
pop
mov
jp
dec
add
stc
decl
fisubl
fistpl
cwtl
cmp
les
jno
out
lahf
pop
mov
bswap
cmp
inc
cmpl
addr16
xchg
jecxz
jmp
adc
xor
xchg
jle
push
lcall
fildll
test
cli
mov
popa
aaa
xchg
dec
in
pop
arpl
in
sub
mov
jns
loop
call
push
hlt
jnp
xchg
addl
pop
ret
sbb
cmpl
rclb
js
cwtl
inc
pop
lea
xchg
sub
sub
adc
pop
jge
idivl
dec
and
push
adc
xor
dec
xchg
xchg
xchg
ret
jns
in
cmp
push
into
imul
xor
sub
xorl
and
fisubs
fisubrl
fnsave
xchg
fsub
cmpsl
jle
sbb
inc
jp
das
jno
sub
mov
rorb
aaa
shrl
imul
mov
cmp
data16
pop
scas
push
mov
adc
jl
fs
loopne
jns
and
jne
sub
jb
inc
ss
fsubl
xchg
aas
movsl
loopne
or
inc
addl
imul
xlat
jge
mov
jbe
and
and
fists
enter
jmp
imul
inc
xor
jb
and
xor
arpl
fs
dec
popa
and
rclb
cmp
insl
daa
mov
movsl
mov
clc
adc
mov
and
sbb
mov
xlat
addr16
cmpsb
pop
mov
repnz
push
jp
add
add
sarb
mov
push
pop
pop
xchg
cmp
outsb
and
add
jno
lret
cmc
ja
insl
rorb
test
and
cmpsl
out
outsl
scas
sub
pop
das
inc
ja
or
js
outsl
push
enter
mov
adc
in
dec
pop
mov
xlat
in
add
fildll
pop
aas
mov
fsubrl
lds
movsl
popf
mov
sbb
out
and
aaa
pop
jae
mov
fmuls
or
mov
mov
addr16
pusha
cmpsl
outsl
testl
fldcw
test
imul
jle
xchg
sub
sarl
jno
leave
sub
mov
dec
cwtd
rolb
movsb
pop
aas
jg
bound
push
push
sbb
sbb
xor
andb
add
mov
dec
mov
pushf
or
loope
jbe
xor
loopne
push
lods
mov
shlb
ficoml
xchg
lret
dec
push
push
jae
xchg
cs
negl
call
stc
cmpsl
push
ret
mov
push
punpckhwd
pop
lea
mov
or
sbb
fstpl
loope
rorl
mov
jne
int
lods
pop
jb
aad
lea
lods
inc
add
pushf
addb
mov
add
jbe
loop
and
test
and
and
sub
or
pop
shlb
mov
call
ret
negl
in
call
jp
add
mov
stos
js
jb
jne
outsl
pop
sbb
mov
call
push
xchg
sbb
and
xor
sub
mov
in
or
mov
xchg
xlat
out
pop
pop
and
int
lds
nop
pop
pop
je
lock
cltd
inc
add
fcmovb
cmp
mov
call
lock
rolb
push
test
std
imul
push
rcrl
push
jl
inc
dec
dec
daa
and
mov
pushl
add
shlb
flds
push
gs
cmp
inc
push
mov
imul
mul
call
pop
in
dec
fwait
int3
in
leave
mov
push
mov
incl
mov
in
hlt
or
movsl
ret
aaa
mov
ljmp
and
orl
out
in
sbb
jbe
xor
sub
cmp
repz
cld
andb
pop
push
repz
jp
popf
sarl
push
adc
and
std
xor
cmp
lret
adc
les
ficoms
hlt
pushaw
fstpt
out
xor
daa
fsubs
pop
sub
icebp
adc
adc
pop
jge
jne
sub
push
les
stc
repnz
mov
xor
jbe
test
in
xchg
inc
aaa
dec
inc
mov
movsb
out
in
ss
leave
push
xor
pop
outsb
shrb
addr16
test
mov
idivl
aam
and
mov
imul
mov
mov
xchg
jl
xchg
ljmp
dec
xchg
cmpsb
mov
mov
fimuls
dec
loop
shlb
scas
hlt
outsb
mov
and
pop
xchg
xchg
outsb
cmc
push
add
fiadds
mov
js
xchg
sbb
data16
cmpsb
sbbl
ret
pusha
xchg
pop
and
pop
push
pop
mov
inc
mov
xor
or
popf
out
ret
mov
loop
inc
mov
sbb
jno
negl
add
pop
dec
add
lods
loope
inc
xchg
mov
xor
ds
psubsw
mov
lea
imul
nop
mov
ret
sbb
sti
dec
xor
leave
xchg
ret
xor
xchg
mov
inc
shl
cmp
mov
fwait
aaa
sbb
push
repz
rcrb
pop
scas
cmpsl
sbb
jnp
sahf
mov
lret
mov
movsl
negl
push
imul
push
and
packuswb
rorb
and
dec
mov
push
lret
mov
lock
cmp
cwtl
movsb
adc
loop
pushf
lea
addr16
popf
push
pop
mov
sbb
ret
cld
jno
inc
inc
or
sbb
dec
jge
imul
lods
ret
std
jne
sahf
cmp
push
ss
in
dec
fldt
sbb
test
push
xor
jp
loop
xchg
loope
daa
imul
or
lods
dec
mov
sbb
icebp
inc
cmp
or
or
sbb
lock
cwtl
les
rcrb
pop
fiadds
frstor
dec
stos
pop
cltd
pop
lret
mov
pop
frstor
xor
push
fdivl
dec
or
mov
mov
and
adc
popf
adc
add
sahf
in
outsb
bound
adc
push
enterw
jns
ds
and
es
in
push
xchg
daa
cmp
inc
or
divl
jmp
loope
mov
test
xor
aaa
inc
aad
mov
not
mov
jmp
hlt
pop
aas
mov
test
pop
xor
sti
out
push
xor
mov
sub
xchg
dec
das
nop
mov
mov
lret
sahf
clc
popa
push
adc
hlt
jmp
pop
fsts
roll
or
ss
aaa
js
shll
jbe
mov
push
pop
push
sbb
push
add
pop
and
out
addl
in
add
insl
hlt
or
ret
or
das
addr16
test
inc
out
sub
pop
add
mov
pop
jae
and
add
pop
cli
pop
sbb
sbb
aas
xchg
decb
test
mov
sti
ljmp
or
jbe
dec
clc
in
mov
sti
sti
in
idiv
xor
push
pop
jno
jl
push
dec
shrl
inc
in
pop
pop
adc
in
pop
jno
jns
std
pop
cmp
jne
or
in
addb
out
lds
sbb
mov
jmp
dec
xor
test
shll
jno
das
data16
loop
lods
sbb
cmp
pop
pusha
xor
mov
inc
dec
xchg
test
mov
mov
mov
pop
leave
lret
sahf
cmp
shlb
fptan
adc
cmc
shl
pop
push
or
xchg
mov
frstor
sub
sbb
add
pop
iret
sar
cmp
std
mov
hlt
aaa
inc
fstl
ffree
jle
gs
mov
cwtl
cld
loop
push
es
and
pushf
lret
xchg
add
andl
xchg
xchg
imul
inc
push
test
pusha
sahf
andb
dec
adc
std
cmp
movsl
xchg
fildll
dec
icebp
fs
inc
jns
ljmp
pop
mov
mov
into
mov
jo
jnp
insb
in
sbb
sbb
cmp
in
repnz
fstl
dec
and
addr16
shrl
or
clc
sbb
dec
or
loopne
movsb
xchg
sub
faddp
in
pop
shrb
add
inc
add
push
mov
loop
in
mov
adc
negb
sbb
int3
imul
xchg
repz
add
push
andb
push
sub
repnz
arpl
dec
das
fidivl
dec
sub
mov
push
mov
stos
subb
pushf
clc
add
sub
xchg
sbb
cmp
cmp
ja
addb
xchg
push
data16
mov
pushf
push
lahf
iret
mov
jmp
jl
js
xor
jne
stc
jp
xchg
test
cli
lea
into
stos
out
sub
sbb
jae
cmpsl
fnsave
or
inc
addl
test
mov
data16
cmpsb
push
subl
push
xchg
inc
lods
dec
push
lret
add
stos
dec
ret
outsb
in
jmp
int3
jecxz
cmp
mov
fcmovbe
hlt
test
lret
jmp
xchg
mov
mov
mov
sbb
bound
cmp
cmp
rorb
and
mov
mov
fisttpll
mov
xor
test
enter
and
xchg
adcb
sti
mov
rcr
xor
and
jb
sub
xchg
pop
lods
jge
leave
push
mov
push
out
insl
or
xor
sti
mov
popf
xorb
xchg
mov
cld
icebp
lret
inc
xor
cmp
pop
test
push
mov
std
arpl
fisubrs
cmp
or
adc
inc
adc
jnp
mov
push
ljmp
push
mov
xchg
xchg
xchg
lock
mov
call
loope
es
dec
add
test
fstpl
in
ljmp
mov
outsb
jecxz
or
test
cmp
sbb
pushf
adc
pop
into
pop
cmpsb
dec
cmp
loope
loopne
rclb
rcrl
sbb
xor
in
xchg
pop
cmp
jo
sub
call
pop
pop
popf
clc
pop
icebp
jo
xchg
ret
mov
adc
jle
movsb
xchg
mov
das
push
stos
aas
cs
mov
adcl
pop
ljmp
rcrb
movsl
xchg
cmc
cmp
lea
cwtl
mov
aad
mov
jecxz
dec
push
fstl
dec
sub
sbb
and
cmpsb
and
mov
xchg
out
shrl
sub
stos
call
mov
jg
insl
jl
push
aaa
cmp
cli
fldenv
xor
movsl
add
add
dec
fdivrp
andl
aad
mov
xor
out
cli
push
test
sar
fcomip
add
push
and
or
and
push
int3
popf
sarb
das
adc
pop
push
lds
add
stos
mov
xor
sbb
insl
push
mov
lret
pop
popf
je
and
pop
jns
pop
jne
inc
call
lods
int
push
mov
stos
ret
lock
and
daa
imull
and
mov
jmp
ljmp
jl
sti
push
pop
push
add
pop
in
enter
mov
in
dec
pushf
std
dec
push
inc
jle
test
sahf
sbb
xor
pop
arpl
mov
jp
jp
sti
inc
fst
jmp
jg
xor
jne
scas
test
call
popf
test
int
js
and
sbb
xor
jnp
or
inc
fwait
xchg
add
cmp
inc
mov
sahf
and
pop
mov
das
movsl
les
inc
jae
push
mov
imul
pop
push
xchg
dec
out
dec
mov
push
loope
push
cmc
imul
clc
insl
xor
fnsave
cltd
fmull
mov
sub
iret
xchg
pop
mov
jne
mov
sbb
sti
fistpl
test
or
xchg
dec
mov
dec
pop
or
pop
nop
mov
neg
pop
xchg
hlt
push
jbe
jo
clc
int
adc
in
pop
mov
adc
pushl
data16
lock
repnz
xorl
ret
icebp
jno
scas
int3
negl
lods
cltd
nop
fwait
push
dec
imul
pop
and
pop
aas
push
aad
jae,pt
xchg
clc
mov
jle
jne
fstps
pop
dec
popf
movntq
dec
inc
pop
addr16
adc
cmovle
inc
or
jbe
movsb
rcll
cmp
std
iret
cmp
js
inc
pop
xchg
cli
roll
lret
push
pop
imul
data16
sub
inc
iret
pop
jp
xchg
mov
in
notl
push
dec
and
clc
or
in
pushf
jae
adc
loopne
dec
mov
daa
pop
pop
sahf
fwait
jg
loop
enter
xlat
incb
shrb
push
scas
std
pop
push
cmpsl
xchg
sub
shlb
and
xor
enter
sub
xchg
push
sbb
cmp
outsl
fcoml
lock
and
ja
imul
shll
in
cmpsb
sti
fcom
jns
negl
push
jnp
dec
sub
mov
jnp
pop
lcall
insb
cmp
out
test
sbb
sub
mov
sbb
and
inc
into
push
das
pop
jge
or
cmp
gs
fs
ret
fcompl
loope
mov
mov
cwtl
cld
pusha
cmp
xchg
popa
bound
and
xchg
sbb
add
mov
sbb
and
sub
orl
mov
mov
dec
jge,pn
or
pop
sbb
repnz
les
test
mov
cmp
sub
sub
lock
adc
test
rorb
leave
sar
jae
jp
mov
shlb
cmp
repz
ret
sbb
fisubs
out
mov
movups
call
mov
inc
rclb
and
mov
xchg
fisubrs
filds
fbld
bound
pop
subl
adc
cmpsl
out
setnp
inc
cmp
sub
dec
pop
xor
inc
mov
add
imul
cmpsb
push
and
lahf
in
cmp
rorl
push
xchg
cli
push
pop
inc
jle
jmp
mov
inc
xchg
clc
fisubrl
sfence
sti
and
dec
push
jp
int3
jnp
adc
stos
stos
xor
sub
add
jmp
sbb
lret
lret
xor
das
rcll
mov
push
das
fldz
cwtl
mov
mov
mov
mov
pop
mov
push
popf
leave
call
leave
subl
out
leave
and
mov
mov
mov
xorl
je
je
pop
push
seta
inc
fsubs
ret
ss
pop
xor
jmp
dec
xlat
xorb
adc
daa
cmpsb
pop
pop
adc
data16
in
jp
jge
xchg
loop
jbe
mov
adc
sbb
insl
and
into
push
cltd
test
imul
or
je
xor
pop
xchg
adc
scas
aaa
jge
inc
xor
jmp
fnstsw
daa
push
sbb
out
insb
enter
add
lcall
jg
icebp
repnz
ret
nop
stc
jecxz
shll
pop
mov
jle
outsb
pop
pushf
fwait
cli
rcll
int3
mov
cmc
lcall
fdivl
lahf
push
shlb
mov
adc
mov
dec
call
cmpb
add
xchg
jae
imul
pop
jmp
int3
imul
jne
lret
fstpl
xor
fstl
mov
pusha
xchg
out
inc
mov
fwait
pop
dec
sarl
daa
scas
sub
fistl
sub
mov
sbb
subl
fldl2t
cmpsb
add
xorl
mov
dec
int3
mov
mov
xor
ret
push
int3
outsb
jl
dec
arpl
push
icebp
xchg
out
arpl
pop
push
sbb
jne
xchg
cltd
push
inc
das
sub
sub
dec
fdivp
jecxz
push
enter
inc
mov
and
push
fmull
mov
lcall
adc
mov
inc
inc
mov
in
pop
outsb
icebp
lahf
inc
lock
mov
dec
dec
mov
fcoml
mov
mov
mov
out
hlt
pop
ror
adc
cmp
popa
cmpsl
cld
cmp
hlt
mov
aaa
inc
lock
enter
dec
pop
cmpsl
add
arpl
inc
cmp
jbe
dec
xchg
inc
cmp
mov
jnp
push
mov
cmp
jae
xor
clc
mov
mov
push
push
leave
sbb
addr16
negb
mov
pop
push
mov
push
jmp
or
hlt
pushf
test
pop
mov
xadd
and
add
adc
lods
or
movsl
out
fcom
outsb
fwait
xchg
in
loopne
fs
push
in
jp
fsubrp
lret
jp
sbb
cs
clc
arpl
movlps
adc
dec
dec
jnp
mov
inc
mov
lods
adc
ret
fs
fsubrp
sti
inc
lods
shl
je
mov
fbld
pop
movsb
pop
mov
cmpsb
cmp
outsb
jecxz
xor
mov
mov
xlat
cli
or
cmpsl
mov
xchg
push
les
scas
mov
cs
icebp
xchg
add
mov
rorl
sub
xor
sbb
push
pop
adc
jo
or
mov
test
push
mov
movsl
inc
dec
mov
cmp
jmp
pushf
xchg
cmp
pop
jp
aas
mov
jb
loope
ja
movsb
mov
int
sti
cmp
hlt
mov
fildll
inc
mov
mov
scas
push
clc
xchg
jns
jp
dec
das
fs
rorb
mov
lods
pop
adc
scas
xchg
push
mov
int
aaa
aas
xchg
addb
push
push
or
push
push
aaa
cmc
nop
loop
ljmp
test
aas
hlt
adc
push
sarb
and
mov
mov
ficompl
out
xor
mov
push
xchg
and
pop
pop
adc
mov
jg
lods
cmp
dec
or
adc
ljmp
das
inc
in
in
stos
arpl
or
mov
movl
mov
pop
addr16
push
push
xchg
sub
xor
out
ret
fwait
fisubs
dec
add
cmova
ss
out
test
mov
or
mov
fsubr
push
call
stc
fwait
ret
inc
xor
fcmovne
test
aaa
shr
pop
fs
bound
pop
sub
xor
adc
adc
mov
inc
jo
pop
or
lret
pusha
sbb
inc
jecxz
or
pusha
pop
pop
ret
ja
fsub
mov
xor
cli
dec
push
clc
mov
sbb
adc
xlat
xor
scas
imul
jge
imul
fbstp
or
inc
stc
add
mov
pop
orl
mov
xor
sbb
cld
jnp
mov
xor
popl
mov
add
mov
jno
xor
inc
outsb
mov
cmp
cmpsl
outsl
clc
jns
mov
sub
lods
fisttps
loop
add
sub
dec
sti
cli
popf
call
mov
adc
lea
test
xorl
outsb
scas
sub
adc
lret
jl
cs
add
rorl
xor
pop
jae
imul
stos
sti
xlat
xchg
dec
jno
inc
lds
fsubrl
nop
stos
out
mov
pop
xor
push
out
clc
mov
cs
sub
xchg
jmp
sbb
xchg
mov
addps
adcb
or
pmuludq
cwtl
arpl
insl
dec
inc
insl
lock
jb
jg
xor
lcall
pop
mov
dec
shlb
xchg
enter
lcall
ss
sbb
mov
xchg
sar
mov
cmpsb
popa
ss
cmp
mov
add
repz
mov
inc
ds
enter
dec
mov
mov
jnp
sub
cmp
push
fnstsw
or
mov
ficompl
lret
sbb
sti
and
or
test
clc
dec
popa
adc
xchg
cmpl
inc
xor
ja
pop
push
loop
ret
xchg
arpl
pop
pop
lock
decl
arpl
mov
int
adc
stos
les
in
jle
cs
or
pop
hlt
fisttpll
test
int3
lahf
sub
lret
xchg
pop
dec
int
fidivrs
mov
insb
sbb
adc
loop
xor
pop
cmp
out
cs
fdivrs
sub
xchg
std
idivb
imul
ljmp
dec
push
popf
cmc
mov
pop
int
pop
sbb
into
pop
add
bound
lahf
mov
sbb
push
imul
fadds
into
or
sti
pop
rcrb
iret
push
outsb
decb
jb
lret
and
xchg
xlat
mov
adc
test
and
outsl
in
fidivrs
sbb
gs
insl
scas
xchg
adc
jle
data16
jl
sbbl
mov
inc
pop
push
pushf
mov
leave
aam
sub
pop
mov
push
mov
or
sub
rol
mov
inc
ret
pop
sbb
hlt
mov
dec
jns
nop
or
mov
mov
sbb
sub
mov
cld
jns
lods
cmpb
cs
mov
mov
pop
shlb
adc
test
notb
jbe
ret
lret
inc
xor
xor
es
or
mov
repz
ret
jge
shrl
dec
xchg
adc
popf
repz
outsb
dec
dec
adc
pop
scas
mov
jns
or
mov
pusha
push
int3
pusha
and
mov
jmp
sub
dec
aad
ret
cmp
cmpsb
pop
mul
sbb
inc
add
ja
add
insb
outsb
jbe
fst
jno
aad
out
test
adc
add
lahf
sbbb
mov
outsb
or
and
mov
or
call
mov
fs
mov
mov
insb
lock
or
insl
xchg
test
and
sbb
repz
repnz
lea
lcall
lds
das
ljmpw
loope
ja
nop
test
push
ret
ud1
stos
sub
add
jl
add
sbb
enter
sub
sbb
add
dec
lock
js
dec
int3
sub
or
outsl
js
fadds
or
out
dec
sub
jae
jecxz
mov
popf
imul
add
inc
push
xchg
xor
pop
pop
lret
in
pop
mov
mov
test
bound
sbb
push
subb
sub
ss
popf
ds
insl
mov
jo
mov
sbb
or
test
nop
outsl
cmp
sbb
mov
std
mov
loopne
sub
xor
fsubrs
aas
insl
xchg
loop
addl
pop
xchg
xor
cld
notl
scas
test
test
in
pushf
cmp
rcrl
jne
mov
push
sub
sbb
mov
sbb
mov
arpl
imul
xor
sbb
std
jecxz
das
dec
test
int
mov
adc
dec
mov
punpckhwd
mov
mov
sbb
hlt
or
clc
fdivr
pop
add
xchg
int3
xchg
mov
mov
xorl
mov
stc
lahf
sbb
dec
push
push
cmpsl
jmp
imul
roll
popa
repz
jl
popa
mov
rol
mov
cmp
movsb
pop
sbb
push
cmp
push
xchg
mov
inc
push
fimull
pusha
je
adc
mov
adc
into
data16
inc
scas
movsb
or
jmp
sbb
clc
jl
sub
cmp
mov
cmpsl
aas
fsts
adc
and
pop
mov
sbb
pop
push
lock
dec
jne
xor
ds
popf
xor
in
cltd
daa
nop
jge
cmp
mov
std
movsl
aam
incb
add
xlat
xchg
cmp
push
out
mov
and
mov
or
cmp
enter
and
fnstcw
stos
mov
pop
mov
adc
sbb
test
rolb
aaa
sub
xor
stos
sbb
dec
add
or
lods
cltd
add
jle
xor
xor
arpl
pop
cmp
adc
mov
aas
push
cmp
hlt
inc
and
repz
add
adc
arpl
push
int
sbb
push
xor
bnd
iret
ret
jnp
fimuls
jae
mov
test
inc
dec
shl
leave
fnstsw
mov
lock
jne
insb
sub
push
call
ss
dec
add
xor
mov
jmp
fs
mov
jl
cmp
mov
and
and
ret
aad
aas
cmp
mov
sarb
test
popa
lock
rorb
mov
mov
push
mov
in
scas
iret
int3
test
call
xlat
aaa
mov
adc
push
dec
mov
xlat
mov
fwait
rclb
or
or
out
in
scas
stc
out
enter
adc
dec
dec
lods
add
stos
mov
test
sub
out
mov
inc
test
sbb
push
out
stos
aad
pop
ljmp
int3
cli
sahf
stc
repnz
jp
xor
xchg
dec
addr16
mov
cltd
pop
jo
addl
divl
pop
adcb
aaa
sbb
and
sbb
cmp
pop
ja
in
xor
lret
lret
cmp
out
inc
mov
xchg
adc
jp
xchg
mov
sbb
dec
imul
xlat
mov
dec
bound
mov
das
jl
pop
lahf
es
jnp
mov
add
add
es
cmp
icebp
xchg
cmp
test
int3
jmp
sahf
ffreep
push
stos
test
fdivp
rolb
push
pop
movsl
sbb
stos
rclb
sbb
mov
cmp
pop
xor
daa
or
mov
xchg
push
sub
jg
inc
cmp
jns
push
mov
adc
xchg
shr
mov
pop
jmp
inc
sub
outsb
push
mov
pop
js
push
xchg
icebp
xchg
test
mov
push
je
fmuls
and
pusha
fists
mov
aam
inc
ljmp
jle
push
pop
icebp
dec
int3
mov
jmp
sub
add
sarl
cmp
clc
jmp
lret
gs
xor
pop
xchg
jo
mov
jge
xchg
mov
mov
mov
cld
add
xor
imull
popa
data16
inc
ja
cmpsl
incb
cwtl
cmp
lods
sahf
aas
in
outsl
inc
ljmp
dec
jnp
lods
pop
mov
sbb
xchg
call
sbb
in
inc
add
inc
inc
dec
cmp
js
fwait
mov
outsl
xlat
aad
filds
fwait
jns
icebp
jle
or
xor
popf
mov
jo
pop
fists
or
scas
mov
aaa
lret
mov
and
xchg
inc
mov
inc
ror
ret
pop
jb
sti
or
popf
pop
pmaxub
and
and
inc
xor
jl
cmc
inc
lods
mov
sub
push
decb
or
and
mov
mov
adc
xor
fiadds
int
inc
imul
cli
pop
out
fimull
cmpl
jns
add
lcall
imul
cltd
jle
popf
mov
sub
loop
insb
cmp
dec
xchg
iret
add
or
adc
mov
int
sbb
lret
ret
push
scas
xchg
rclb
add
ljmp
sti
fiaddl
mov
js
mov
fwait
rcrb
inc
lret
dec
sbb
cwtl
aam
mov
cmpsb
inc
lret
es
es
ret
jle
pusha
int3
inc
inc
in
adc
inc
enter
xchg
push
movsb
in
dec
cmpb
dec
xorl
pusha
movsb
xchg
and
inc
or
push
pop
in
xchg
subb
nop
rcrl
or
push
push
jns
sbb
cmp
add
xchg
add
cli
cmp
or
push
dec
push
xchg
jnp
in
xchg
hlt
adc
or
inc
sbb
cmp
xchg
lahf
rcl
adc
je
or
fbstp
mov
cmp
xchg
bound
aaa
xchg
mov
pop
call
lock
stos
xchg
inc
sbb
xor
adcl
imul
cwtl
pop
pop
into
lds
add
mov
stc
iret
in
insl
loop
sub
add
mov
ja
xor
pusha
fdivs
in
or
adc
ljmp
sti
sbb
push
xor
xor
mov
xchg
add
ss
cmpsb
cmpl
movsl
stos
mov
push
jae
mov
emms
adc
mov
cmpsb
adc
int
push
or
or
pop
dec
pop
or
int
in
sarb
mov
scas
js
mov
ret
inc
jge
sub
sbbl
sub
xchg
xor
cwtl
and
pop
xchg
movsb
sbb
outsb
es
nop
sub
clc
stos
jnp
push
mov
and
xchg
or
out
dec
cmp
test
pop
dec
xchg
adc
jne
addb
xlat
xchg
adc
adc
sbb
push
pushf
push
push
rolb
push
ficomps
bswap
cmc
push
ss
shl
pop
in
stc
call
int3
cmpsb
sub
stos
dec
into
loope
cli
inc
add
fildl
and
lret
ret
push
subl
xchg
jns
out
xchg
imul
ret
loop
sbb
jae
ljmp
out
pop
into
and
pop
sbb
cmpsl
pop
ljmp
inc
fldl
jno
cmp
je
mov
mov
ljmp
dec
sub
sub
and
adcb
adc
xchg
inc
daa
and
rorb
jl
xchg
daa
sbb
push
jecxz
sub
out
mov
cltd
mov
outsb
pop
pop
cli
or
inc
jne
adc
stos
ljmp
bound
leave
gs
fistpl
clc
inc
xor
repnz
push
push
dec
scas
jb
push
sub
out
add
out
xor
add
aaa
pop
sbb
mull
cwtl
popa
push
and
mov
call
cld
sub
push
popf
iret
xor
gs
je
jle
les
cltd
lahf
add
jg
popa
loop
pop
test
xchg
out
aaa
xchg
test
daa
test
popf
sbb
and
inc
test
js
clflush
aas
inc
test
jle
gs
sbb
mov
cmc
lods
push
dec
mov
and
sub
inc
sarl
inc
push
mov
iret
sti
push
test
sub
js
and
pop
mov
jge
mov
out
xor
add
cmc
movb
sub
add
pop
xor
adc
test
ja
and
add
notl
inc
lret
or
dec
push
addb
adc
bound
out
hlt
mov
mov
or
clc
mov
shrb
push
bound
shlb
std
into
and
push
lahf
enter
paddusw
movsb
xlat
mov
push
inc
inc
adc
test
add
pop
pop
icebp
xchg
test
fistpll
mov
add
stos
xor
test
or
sbb
inc
fsubl
jp
out
cmp
mov
jle
ljmp
cmp
lcall
xor
pop
call
adc
movb
mov
dec
test
inc
loop
push
das
out
fcomi
lret
lock
pop
add
mov
mov
sahf
mov
fldt
xor
xchg
lahf
mov
pop
jo
sbb
mov
andl
roll
and
cmp
mov
mov
pop
mov
rorl
push
mov
push
das
in
pusha
sbb
out
nop
mov
clc
inc
xor
cli
imul
popa
js
xor
adc
xor
aas
dec
push
mov
xor
jmp
push
sarl
mov
data16
je
in
xchg
adc
test
in
shl
xbegin
fistps
test
imul
adc
fistps
mov
dec
cmp
arpl
icebp
add
sbb
jmp
enter
xchg
insl
adc
les
mov
std
xchg
adc
pop
ljmp
inc
xor
xor
xor
dec
iret
jl
fbstp
pop
or
stos
aaa
inc
lods
es
es
jmp
hlt
out
pop
inc
jno
mov
or
mov
adc
inc
fnsave
push
or
inc
jecxz
stos
stos
push
and
xchg
pop
jmp
not
cld
cmp
popf
push
shl
ljmp
jl
mov
pop
cmpb
ret
jmp
in
test
dec
mov
movsb
mov
sbb
jno
es
push
pop
inc
inc
or
add
sahf
scas
bound
adc
inc
shrl
sbb
inc
and
imul
pop
jle
adc
cmc
push
sub
int
mov
call
mov
fists
mov
and
mov
mull
mov
jbe
mov
movsb
leave
xchg
xlat
cmp
sar
fstp
rclb
fisttps
ss
rorl
ljmp
pop
int
xchg
push
add
mov
aad
mov
insl
and
mov
push
jmp
ret
mov
xor
dec
setbe
jge
cmp
int3
scas
hlt
adc
lcall
push
int3
or
cmp
test
lahf
test
cmp
lcall
idivl
lds
stos
mov
push
xchg
test
in
push
xor
lods
xchg
or
mov
jmp
or
xchg
cmpsl
push
aam
pop
sbb
bound
scas
xorl
leave
push
mov
and
push
xor
mov
xor
cmp
imull
pop
cs
inc
sub
lds
push
ljmp
xchg
fisubl
ds
sbb
aas
int
mov
cmpl
and
and
gs
pop
and
test
jne
jmp
push
xchg
mov
ret
add
lods
mov
mov
out
jo
mov
insl
mov
fucomi
pop
jo,pn
ljmp
mov
leave
mov
es
sub
adc
idivb
cwtl
jmp
rcr
add
incb
or
mov
xchg
std
ljmp
inc
ss
and
popa
outsl
add
xchg
xorb
outsl
out
mulps
fld
or
inc
mov
push
out
test
imul
js
jbe
and
je
in
jmp
lock
stos
cmp
mov
mov
leave
enter
popa
mov
or
addr16
mov
loope
stos
mov
mov
xor
fidivs
sbb
cmc
jno
sahf
lods
sbb
insb
imul
push
aas
mov
push
adc
sbb
mov
sbb
jge
jl
lods
xchg
push
jl
in
icebp
adc
fsubrl
movsb
xchg
in
in
jno
lock
cmp
cli
lods
xchg
cmp
sbb
rcll
pop
mov
push
mov
cmp
push
xchg
cmp
add
push
mov
mov
sbb
imul
mov
sahf
mov
mov
push
ja
sahf
push
out
lods
dec
sti
and
mov
pop
aaa
add
jg
mov
dec
filds
testl
ret
xchg
cwtl
pop
dec
lret
jb
xor
dec
xor
push
dec
addr16
decb
mov
jp
insb
pop
pop
xchg
push
aas
sub
add
pop
and
push
shll
push
mov
adc
dec
pop
andl
fstps
shll
mov
push
js
int
lahf
mov
and
adc
dec
sub
movsl
repnz
xor
jge
cmp
cmp
adc
andl
outsl
and
jge
cmp
insl
inc
dec
mov
ret
mov
and
idivb
mov
push
out
adc
test
xchg
cmp
jecxz
push
or
mov
xchg
lods
jp
fidivl
cmp
roll
push
mov
addr16
push
xchg
lods
jb
mov
shlb
xchg
out
inc
pop
inc
add
in
jp
in
bound
movsb
and
aam
rclb
out
out
or
data16
mov
imul
push
pusha
cmc
jg
push
cs
dec
fs
sub
jg
sbb
into
cmp
adc
cld
call
ret
xor
in
std
lret
xchg
int3
fadd
daa
xchg
push
cmp
mov
mov
stc
inc
and
inc
imull
inc
hlt
push
repz
xor
jle
fldt
data16
mov
sbb
jge
les
clc
jl
outsl
out
sub
xor
and
sti
mov
and
repnz
inc
hlt
or
leave
cwtl
mov
fidivl
jp
push
movsb
xor
rorb
push
in
and
test
cltd
cmpsb
add
and
inc
cmpsl
pop
sbb
in
aaa
sti
outsb
dec
fdivrl
inc
cld
pop
mov
mov
cmp
es
xorb
das
jle
push
sti
push
cmpsl
sbb
mull
pusha
sbb
dec
call
inc
lcall
xlat
xor
sbb
jo
fucomp
shr
aad
push
pop
sub
adc
jl
mov
out
add
xchg
adc
and
xchg
fs
andb
mov
repnz
mov
dec
dec
into
in
mov
iret
cmc
mov
lea
aad
xor
dec
mov
lret
inc
scas
clc
movsb
and
sarb
dec
repz
mov
outsl
sub
cmp
pushl
loopne
sarb
and
push
insb
sbb
push
lahf
stos
imul
jne
ss
mov
add
or
nop
aad
nop
jbe
dec
testb
shll
movsb
mov
jae
popf
xor
push
scas
dec
and
scas
adc
cmp
xchg
stos
popa
mov
imul
cmc
inc
fwait
or
fildll
adc
cmp
xchg
insl
mov
jmp
jmp
xchg
lret
mov
leave
sbb
push
push
xchg
pop
pop
mov
jo
insb
mov
ss
lahf
mov
enter
imull
cmp
out
push
mov
jmp
ja
cmp
and
rclb
out
pusha
cmp
addr16
mov
xor
in
ss
push
shrb
adc
push
ds
filds
lock
add
imul
cmp
sbb
pop
xor
call
mov
lcall
push
xchg
test
and
push
je
ljmp
out
xchg
ret
inc
adc
mov
or
out
mov
dec
sbb
incb
jno
data16
popa
push
test
aaa
and
sbb
out
insb
iret
jb
addr16
xor
cmp
sub
or
outsl
icebp
es
add
xchg
xor
loopne
push
stc
pop
in
adc
mov
inc
test
std
sbbl
add
in
cmp
out
clc
sbb
xchg
add
pop
out
mov
inc
shr
imul
iret
mov
mov
sbb
movsb
ljmp
scas
mov
xlat
xchg
xor
jno
or
popa
adc
rolb
push
cmp
loop,pn
inc
subb
jnp
inc
lock
call
inc
adc
jl
ffreep
pop
mov
mov
jl
mov
add
sbb
aad
xchg
daa
adc
xchg
inc
faddl
and
cmpsb
xor
mov
and
add
cmc
shl
in
in
clc
dec
clc
int3
cmp
or
test
and
fiaddl
mov
jo
aaa
jns
lock
or
in
push
adc
push
cmc
movsl
push
mov
testl
notl
jl
jb
push
sub
les
addr16
xchg
cltd
adcb
ret
adc
mov
stos
cltd
sub
movsb
jb
jnp
popa
adc
out
xchg
jge
jmp
xor
add
add
enter
fwait
add
andl
repz
stos
es
xchg
in
adc
mov
and
aad
add
daa
xchg
sbb
bound
sub
jle
xor
pop
out
sahf
push
add
mov
loopne
mov
sbb
outsl
test
mov
pop
pop
mov
mov
aas
cltd
insl
ja
pop
in
fcomps
sbb
add
aas
fs
and
pop
mov
xchg
fldenv
faddl
adc
fisubs
lods
insb
in
mov
js
in
pop
xlat
sarb
adc
adc
hlt
cmp
jge
and
xchg
pop
push
push
sbb
outsb
push
ja
repnz
pop
add
jnp
adc
mov
imul
sub
pop
sub
xchg
mov
aas
xchg
cmpsl
stos
dec
sbb
mov
fisubl
insl
out
outsb
dec
pop
cmp
sbbl
add
cmpl
push
call
pop
xchg
pushf
pop
mov
jp
imul
push
pop
mov
inc
lods
adc
popa
pop
lret
cmp
cmp
lahf
ljmp
inc
pop
xchg
repz
js
ds
or
jae
adc
push
insl
ret
repnz
add
into
test
sbb
and
mov
sub
fisttpl
dec
inc
stc
test
iret
lahf
flds
sbb
and
inc
mov
lods
mov
xchg
xchg
sarb
repz
cmpsb
mov
in
in
or
xchg
cmp
or
sbb
xor
push
arpl
sub
insb
sub
jns
das
sbb
sub
repz
xor
lock
mov
les
or
dec
pop
or
mov
mov
mov
mov
pop
test
dec
stos
in
rep
in
jle
addr16
ficomps
fldt
je
insl
insb
pop
imul
push
or
dec
xor
mov
dec
jae
cmp
add
pop
push
dec
fs
sbb
fbld
xor
sti
sbb
jnp
icebp
adc
sbb
pop
jl
mov
mov
mov
scas
sbb
and
sbb
or
int3
push
mov
lods
icebp
imul
dec
xchg
lds
notb
je
pop
push
out
or
mov
ja
ret
jno
xchg
jg
xor
or
cmc
enter
and
std
push
ss
sti
jnp
inc
adc
fisubrs
mov
xchg
imul
loope
aad
negb
scas
mov
dec
push
ja
enter
push
ret
sbb
outsb
je
xchg
shl
lds
addb
adc
roll
add
fwait
scas
jg
sarl
jl
sbb
stos
mov
xor
mov
inc
mov
xchg
cmp
insl
ljmp
pop
dec
loop
stos
clc
pop
nop
sti
arpl
sbb
test
push
sbb
in
cmpb
sub
sbbb
ret
setno
jo
lods
sbb
xor
cli
lret
mov
xor
push
subb
sbb
mov
xchg
shl
aad
add
mov
pop
iret
add
loopne
cmpsl
inc
adcl
adcl
add
xchg
mov
sbb
loop
lea
dec
test
push
or
xor
xchg
psubq
mov
add
push
arpl
hlt
pop
int
push
mov
cmp
and
fisubrs
bound
xchg
sbb
scas
fwait
enter
repz
int
roll
or
mov
out
adc
pushf
gs
add
push
fsubrl
xchg
add
rcrl
dec
mov
xchg
jp
arpl
fdivp
cs
rclb
loope
mov
rcl
lds
sbb
stos
nop
fnstsw
push
mov
into
in
cmp
ret
sub
scas
bound
test
popf
std
push
insb
sbb
adc
inc
pop
fs
add
mov
fs
sub
sub
sub
into
cwtl
dec
cwtl
inc
leave
sti
mov
arpl
loope
push
loopne,pt
mov
xchg
mov
hlt
mov
arpl
jae
mov
dec
scas
scas
inc
cli
push
arpl
or
divl
inc
jmp
cld
pop
mov
cld
dec
mov
jbe
cli
xor
or
xchg
cltd
faddl
in
or
pop
xchg
nop
mov
movsl
iret
sti
and
inc
xchg
or
push
jg
or
pop
outsl
sub
push
inc
inc
mov
jecxz
iret
sbbl
rorb
jl
lret
or
pop
pop
testb
xor
cwtl
mov
xchg
dec
xchg
and
stc
out
jle
adc
jbe
into
cmp
lds
and
jle
adc
cmp
jo
sbb
jns
in
mov
and
pusha
xchg
aam
xchg
dec
jg
test
dec
dec
leave
stos
jno
xor
xchg
loop
icebp
scas
xchg
dec
push
push
hlt
sub
loop
xchg
ljmp
jae
add
jp
jmp
xchg
sahf
pop
test
je
fiaddl
mov
cltd
fcompp
lock
shll
arpl
and
jae
inc
or
stc
mov
inc
lea
lret
jns
or
mov
jp
mov
mov
sahf
or
push
nop
pop
jp
pop
mov
ret
ss
jle
pop
ja
imul
in
dec
jmp
loope
and
and
sub
das
mov
mov
mov
push
ret
ljmp
or
fwait
mov
cmp
fsubrs
enter
mov
sbb
fisubrs
loope
js
xchg
stos
andb
fs
push
pop
sbb
shll
xor
and
ret
inc
rclb
and
pusha
es
mov
ret
arpl
cmovo
jle
dec
ds
leave
out
push
xorl
sub
bound
jg
cmp
aad
jl
sub
sti
je
shrb
xorb
clc
add
jmp
add
pop
push
leave
inc
push
popf
sti
xchg
ja
xchg
ljmp
jne
inc
xchg
in
sbb
sbb
mov
ds
iret
out
das
scas
out
iret
inc
mov
rol
mov
xchg
dec
in
mov
inc
rol
xchg
les
ret
jecxz
mov
push
popf
lcall
xor
mov
jmp
call
cs
jl
nop
pop
pop
pop
icebp
lcall
xchg
add
push
xor
or
mov
push
mov
xchg
mov
sbb
pop
icebp
or
dec
test
shr
or
test
push
mov
push
sbb
rolb
stc
pop
js
aaa
sbb
pushl
popf
imul
int3
mov
xlat
push
mov
jbe
sub
inc
inc
sbb
cmp
push
insb
dec
jb
cmp
and
mov
dec
sub
stos
xor
test
ficoms
divl
xchg
xchg
fcomps
fs
cmc
sub
dec
movsl
jp
ret
fucom
fidivl
lcall
sub
outsb
repz
or
inc
push
xchg
aad
xor
add
test
xor
shrb
mov
les
sbb
fdivs
sbb
mov
jg
sbb
mov
pop
gs
lret
xchg
and
repnz
xor
pop
xchg
int3
and
mov
test
loopne
in
mov
scas
jge
jo
aaa
lock
movsb
push
movsb
cmp
mov
or
scas
sbb
sbb
inc
stc
enter
sub
mov
test
enter
js
je
rorl
push
and
xchg
ja
cmpsl
mov
pop
cwtl
adc
lds
movsb
mov
ljmp
mov
test
pop
mov
clc
and
xor
lods
or
or
int
in
xor
or
xlat
int3
mov
and
out
sahf
fistl
sbb
mov
adc
add
fdivs
cmpsb
and
xchg
xor
rcrb
fisttpl
pop
mov
and
push
inc
leave
sub
jbe
sbb
loop
ficompl
das
ds
movb
xor
jno
out
push
out
xor
push
in
push
mov
dec
sti
stos
jmp
cmpsb
mov
clc
lahf
jae
add
sbb
andb
mov
jge
fnstenv
mov
sub
cmpsb
int3
shlb
inc
mov
cmp
jb
mov
shll
cli
sbb
pop
loopne
jne
pop
into
movsb
cmp
mov
pxor
mov
cmp
movsb
jne
xor
or
push
jg
gs
jne
add
or
lock
or
add
pop
stc
mov
add
push
or
aad
test
stc
andl
stc
push
adc
lret
inc
repnz
cmp
test
pop
nop
mov
jnp
mov
mov
fwait
pop
cmpsb
mov
mov
pop
push
and
xchg
cmp
repz
shll
fnsave
pop
jae
push
in
mov
pushf
inc
test
loope
or
pop
mov
cmp
mov
lea
xchg
xlat
push
push
sub
repnz
lock
add
inc
insb
std
stos
pop
mov
pusha
ljmp
jo
add
mov
dec
dec
jo
in
ja
pop
dec
and
mov
jnp
add
lods
lcall
xchg
xor
adc
jmp
and
mov
je
mov
pop
dec
dec
inc
push
add
jns
adc
mov
js
xchg
mov
mov
or
xlat
mov
lahf
call
sbb
repz
cld
sub
cwtl
inc
js
fcomps
stos
fistpll
in
jp
mov
lret
popa
xchg
xor
pop
and
addr16
les
lock
ret
add
fisubrl
push
loope
xor
xchg
stc
sbb
icebp
dec
and
test
and
sub
dec
push
jge
iret
pop
rclb
and
addr16
ss
lret
cmp
ss
xorl
loopne
inc
mov
pop
mov
dec
inc
inc
xlat
add
push
outsl
movsb
lock
pop
xchg
push
stos
or
xchg
push
adc
add
sbb
jle
fstps
mov
clc
out
inc
fldenv
inc
dec
sub
lea
pop
ds
pop
mov
xchg
mov
rcrb
adc
fsubrl
and
fisttpll
fmuls
lds
mov
sbb
and
xchg
icebp
xchg
iret
mov
out
mov
hlt
cli
push
syscall
mov
testl
insl
nop
nop
mov
pop
addr16
mov
xchg
xchg
das
addr16
and
cli
loop
ja
push
je
mov
or
mov
into
int3
jmp
or
add
fstl
or
and
sbb
inc
mov
les
cmc
out
sbb
rorb
fistps
iret
mulb
mov
jmp
pop
iret
out
fsubrs
dec
loopne
and
loopne
fdivl
jns
ficoms
rclb
clc
mov
sbb
push
dec
les
lea
add
xchg
lahf
addb
jmp
pop
pusha
or
jns
je
xchg
sahf
roll
inc
or
inc
cltd
repnz
mov
jecxz
fnstcw
cmp
js
scas
ret
cmpsb
dec
push
and
pop
jle
xchg
dec
leave
rcrb
dec
mov
xchg
xchg
xchg
xchg
pop
fcomps
lock
dec
or
into
imulb
cli
incl
loope
scas
inc
jbe
test
insl
ds
pop
test
xchg
pop
or
mov
rcl
test
hlt
and
cwtl
add
jg
sub
sahf
je
mov
push
fnstenv
pop
ljmp
push
or
popf
cmp
inc
add
movsl
dec
fidivl
jecxz
jae
mov
sub
push
push
cmp
mov
movsb
lock
std
dec
xor
jmp
and
sub
sar
imul
add
loopne
test
imul
fcompl
add
lea
sbb
sub
out
fsubl
aam
mov
jne
fs
andb
ss
lret
lahf
mov
and
xchg
inc
push
jmp
add
push
sti
push
mov
and
mov
adc
dec
ds
shll
or
nop
pop
add
push
xor
addl
mov
adc
cli
fbld
add
ret
int3
push
outsb
mov
xor
stos
cmp
jle
imul
arpl
imul
inc
loopne
cld
mul
in
stc
sub
fiaddl
das
cmp
mov
fmul
gs
push
push
jns
scas
test
shl
enter
add
sub
outsl
test
fcmovnu
mov
dec
xchg
jae
jg
cwtl
imul
cmp
xchg
hlt
repz
sub
mov
out
sbbb
shr
dec
in
xor
or
lahf
aam
out
loopne
bound
pop
fs
insb
mov
data16
mov
adc
in
daa
xchg
inc
dec
or
out
ds
xor
pop
adc
insb
pop
pusha
negb
add
mov
jb
mov
bound
les
mov
bound
xchg
mov
in
ss
lea
add
mov
rcrb
loope
inc
fstpt
cmp
mov
cld
xor
add
pushf
icebp
cwtl
out
push
cmp
push
sarl
inc
xchg
mov
mov
test
jecxz
add
xchg
ljmp
cmp
adcb
mov
jmp
imul
mov
adc
xchg
out
test
test
data16
jbe
mov
jo
add
dec
xor
fwait
mov
mov
cld
xchg
inc
push
lcall
pop
test
daa
daa
cmp
mov
aad
loopne
mov
pop
out
dec
push
add
lds
xor
or
data16
cltd
push
inc
cmpsb
scas
rolb
je
es
bnd
push
push
testl
dec
xorl
fidivrs
and
push
test
mov
push
mov
mov
mov
xchg
in
loopne
jne
push
sub
jmp
rclb
sbb
cmp
popa
or
addb
jno
enter
addr16
fmul
and
lret
mov
insb
lahf
xor
xlat
ret
movsl
jecxz
iret
imul
push
imul
and
xlat
rolb
cmp
jl
imul
nop
in
insl
rcrb
mov
fldt
mov
cmpsb
dec
cmp
jle
cmp
stc
jb
out
xor
sub
mov
neg
mov
decb
add
divl
fnstcw
out
fisubs
movsb
sub
mov
loopne
cli
mov
fidivs
mov
pop
insl
xor
jae
daa
push
out
sbb
clc
jle
inc
sar
pusha
xor
cmpsb
sub
xchg
and
repz
loopne
mov
int
add
push
aaa
cmp
in
pop
mov
cmpsl
jo
fwait
lahf
sbb
je
mov
inc
mov
pop
movsb
jmp
dec
lods
mov
cmp
push
test
repz
cmpsl
cmp
push
aas
push
jnp
flds
inc
stc
mov
jbe
data16
shlb
add
mov
dec
mov
mov
repz
cltd
inc
popa
nop
cmp
arpl
pop
cmp
cld
mov
fcompl
jg
jp
xor
cmp
sbb
subb
pop
xchg
xchg
call
sub
test
in
imul
inc
push
aad
and
mov
mov
add
les
xchg
sbb
pop
jp
sbb
sarl
pop
insl
rcr
sbb
mov
in
int3
mov
femms
loop
jo
lods
lods
lcall
sub
inc
call
mov
test
repnz
and
pop
jnp
pop
pop
jbe
dec
dec
jns
mov
xor
add
sbb
mov
jmp
dec
pop
mov
pusha
cmpsb
jg
xor
pushf
cmp
add
int3
ret
insb
into
add
iret
add
mov
inc
arpl
xor
sbb
mov
add
subl
and
int
adc
xor
cmp
cmpsl
sahf
je
mov
call
push
sbbl
stc
ret
and
sbb
in
sbb
push
pop
adc
sbb
and
shrb
bound
lret
dec
fildll
test
jo
and
sbb
push
mov
and
rcrb
xchg
std
add
jno
xchg
xchg
fs
in
icebp
sub
mov
arpl
mov
jne
sub
sub
adc
jae
sahf
shl
fidivs
inc
add
mov
stos
pop
cmp
vmwrite
out
xchg
mov
popa
pop
push
mov
adc
pop
sub
push
stos
lret
int3
sub
iret
jle
mov
xchg
xorl
enter
negl
or
test
lcall
mov
mov
loope
jno
inc
push
pop
xor
lcall
jns
leave
push
mov
ret
test
mov
push
mov
outsl
dec
jns
mov
dec
mov
mov
add
js
xor
mov
inc
mov
enter
fstpl
xchg
lret
cmp
dec
lock
in
ror
jl
lret
loopne
adc
lods
or
cli
sub
subl
mov
dec
add
repnz
aaa
add
subl
mov
arpl
pop
in
cwtl
rorb
lea
xlat
pushw
mov
jne
mov
and
mov
scas
adc
dec
aad
xchg
sub
dec
shrb
mov
scas
mov
or
mov
adc
and
and
cmp
iret
hlt
jbe
adc
cmp
out
cmp
loop
aam
sub
jb
push
or
repnz
mov
andb
cli
es
insl
inc
xor
xor
pusha
xchg
sub
enter
roll
cltd
mov
pop
loop
stc
addr16
fisubrs
mov
dec
mov
stc
cmp
add
sub
repnz
sub
scas
imul
lahf
lahf
cmp
inc
dec
shl
test
mov
insl
adcb
pop
lds
sahf
aam
cmp
lds
loopne
into
xchg
in
popf
mov
mov
xchg
jae
cltd
andb
push
dec
insb
cmpsl
sub
add
rorl
clc
iret
adc
inc
dec
sub
sub
inc
xor
dec
out
outsl
sub
jno
xor
mov
into
out
jecxz
push
push
and
pop
aas
jae
loope
sub
test
stos
cmp
mov
pop
popa
xchg
mov
push
and
fisttpll
push
and
cmp
xor
jle
pop
sti
mov
cmp
xchg
fwait
lds
inc
jecxz
jne
sti
adc
mov
and
mov
add
and
insb
std
jmpw
jbe
mulb
js
mov
pop
gs
mov
sub
jae
hlt
shll
push
push
loopne
mov
jae
ja
xchg
cmp
jmp
add
shl
push
dec
loope
add
ss
call
jnp
jge
mov
xor
mov
pop
mov
cmpsb
pop
das
mov
mov
xchg
ret
add
test
push
adc
sub
adc
js
inc
xlat
cmp
dec
sbb
lcall
push
xchg
dec
mov
mov
xchg
sbb
pop
shr
test
ss
ljmp
mov
scas
in
push
adc
cld
cmpsl
test
mov
push
cmp
pop
ret
cli
and
push
adc
idivl
rcrl
jg
les
orb
lahf
pusha
push
adc
pop
mov
mov
out
dec
sub
xorb
inc
sub
hlt
mov
jge
scas
jnp
sarl
jno
cmp
jg
aad
daa
pop
cli
cmp
ds
hlt
cltd
dec
dec
cmp
or
adc
data16
repz
adc
lods
fisttpl
shll
popl
scas
and
and
out
push
inc
js
pop
aad
inc
sub
cwtl
aas
xchg
pop
mov
leave
lods
decb
mov
xor
outsb
push
pop
cmp
mov
push
mov
mov
js
clc
push
pop
jae
lds
cs
movsl
jge
cmpsb
gs
sbb
adc
notl
mov
sbb
xchg
xchg
lcall
lea
and
xor
mov
insb
mov
clc
imul
inc
pop
jmp
and
lret
push
jle
mov
or
cli
inc
push
mov
inc
mov
and
test
roll
ja
leave
in
jecxz
dec
imul
xchg
xor
js
mov
adc
popf
pop
outsb
pop
xor
lds
and
dec
fnstcw
mov
leave
mov
pop
or
push
inc
lods
fisubrs
mov
jle
aam
popf
sti
pop
jl
push
loopne
sub
bndstx
addb
adc
std
mov
xlat
lods
sub
clc
mov
dec
nop
push
sbb
aas
or
cli
out
cmp
aas
iret
lahf
es
sahf
int
adc
mov
lods
mov
inc
mov
adc
test
add
sub
fistps
popf
comiss
mov
mov
inc
jbe
jns
adc
enter
sbb
lret
add
dec
sub
cmp
jl
cltd
fsubp
dec
ljmp
and
notl
xlat
xor
xchg
shlb
in
xchg
or
fwait
jb
std
push
mov
sbb
mov
shlb
cmp
and
sbb
dec
into
mov
shll
lret
pop
shl
jge
je
cmp
hlt
ret
incb
cmp
es
int3
in
pop
loope
mov
ss
psubb
push
cs
lcall
sbb
call
incl
mov
sub
call
mov
xor
fmull
mov
add
lahf
lret
xor
scas
je
and
andb
jecxz
dec
into
dec
lock
loopne
push
inc
push
adc
add
loopne
add
loop
imul
icebp
push
icebp
aas
pop
mov
stos
lock
mov
and
fadd
test
sbb
mov
and
dec
xor
sub
ss
pop
add
int
insl
ficompl
jns
ret
cmp
es
pusha
addr16
mov
mov
pop
sub
sbb
mov
outsb
sub
ficoml
fnsave
jne
imul
out
out
sub
mov
js
xchg
jnp
outsl
fmull
mov
sbb
xor
push
mov
popf
fldcw
add
cmpsb
mov
or
pop
adc
jmp
sbb
out
mov
in
xor
push
mov
shlb
std
xchg
push
repz
mov
inc
stos
inc
mov
mov
xchg
sbb
ret
xchg
jmp
ficompl
gs
jge
mov
ret
xchg
in
mov
incl
cmpsb
decb
fwait
sahf
data16
and
sub
aad
and
scas
adc
jp
mov
xchg
mov
ljmp
add
sbb
inc
movsb
and
or
std
ja
jb
lea
dec
lock
or
sub
enter
popf
add
repnz
mov
jg
imul
add
leave
cmp
pusha
pop
push
jae
push
sbb
inc
jmp
and
test
dec
cmp
xor
push
or
addr16
xor
andl
push
pop
mov
adc
repnz
fiaddl
mov
ja
pop
stos
fildl
out
lahf
ficoml
das
aas
pop
jb
stos
jno
xor
pop
mov
mov
scas
fdivs
inc
or
out
jmp
sub
mov
stc
add
and
idivb
jo
mov
outsb
pop
mov
mov
push
mov
aam
cs
push
mov
ja
in
cmp
and
popa
mov
test
hlt
rcrb
pop
mov
mov
inc
mov
mov
or
mov
xor
iret
out
clc
adc
mov
stc
jne
call
mov
mov
test
mov
jle
mov
lds
mov
xor
mov
gs
ss
js
dec
jnp
sub
aaa
and
cmpl
sti
ds
dec
daa
rcr
mov
ljmp
pop
sbb
xor
cltd
mov
insb
pop
aad
cmp
imul
movsl
out
jb
out
xchg
nop
push
inc
mov
and
adcb
and
scas
ja
inc
inc
xor
mov
hlt
arpl
loop
jg
aam
jnp
aaa
sub
aam
push
mov
cltd
aad
adc
sbb
movsb
cwtl
jle
cmp
push
xchg
mull
stos
popa
lret
pop
insl
mov
push
cmp
loop
dec
inc
fistps
dec
dec
enter
xorl
pop
rcl
idivl
push
es
into
fyl2x
mov
add
lds
cs
pop
or
mov
pop
ret
xchg
rorb
mov
fwait
cmp
xchg
or
dec
int3
int
mov
cli
lds
adc
jno
out
in
and
adc
dec
jo
das
loopne
scas
mov
cmpsl
jo
leave
mov
ret
push
push
sub
adc
push
arpl
jmp
add
popl
scas
push
ficomps
cmpsb
push
jecxz
loopne
insl
in
bound
jne
adc
clc
pushf
mov
sub
mov
fiadds
lret
lock
loopne
inc
iret
pusha
icebp
ret
fisubrl
xor
and
sbb
scas
mov
lret
aad
dec
xchg
dec
mov
pop
mov
sbb
ljmp
mov
test
in
fs
add
addl
cmp
jae
out
xor
add
fisubs
xchg
jecxz
into
inc
inc
sub
jo
jge
add
adc
and
ret
cld
sbb
adc
ljmp
xchg
sbb
std
lar
mov
jbe
cs
jnp
fld
and
adc
add
call
push
xor
add
mov
les
add
insl
cs
jle
das
sub
ret
outsl
and
xor
rcrl
sub
sbb
fs
push
cmpsb
cmc
loop
mov
jb
push
mov
aaa
fadds
mov
lahf
push
adcb
ja
dec
ds
xchg
cmp
sub
gs
jg
insb
xor
jle
pop
mov
push
inc
push
insb
cmp
fbld
stos
jo
jne
ja
cmpb
inc
mov
pop
leave
jae
sub
outsl
push
pop
fwait
cltd
mov
repz
mov
data16
xor
movsl
xchg
or
mov
out
lea
push
add
ret
out
ret
std
hlt
sub
mov
push
jns
popa
jbe
jne
bound
mov
pop
lret
dec
pmaxub
fstpl
nop
lahf
mov
cli
push
dec
inc
aaa
aas
lods
add
mov
inc
cld
stos
push
push
jo
ja
lock
in
inc
mov
and
pop
faddl
xor
lcall
xor
xlat
mov
mov
and
stc
inc
es
bound
pusha
add
add
inc
testb
cmc
sub
xor
lea
hlt
scas
ds
fcompl
in
js
pop
pop
sbb
dec
adc
insb
or
lret
lea
mov
stos
sub
shl
add
fstps
mov
mov
lea
cmp
pop
faddl
mov
popf
ds
imulb
xlat
and
nop
cmp
mov
pop
jle
xor
mov
outsw
cltd
fcompl
mov
stos
loope
shl
out
inc
sahf
jecxz
sub
test
mov
push
push
pop
fbld
stos
fs
inc
pop
imul
shrb
dec
inc
mov
lock
shlb
inc
pop
sahf
cmp
cli
mov
bound
rcr
sbb
sbb
testl
pop
stos
xlat
imul
xchg
lods
xchg
hlt
roll
mov
arpl
ficompl
mov
out
cmp
insb
cmp
or
leave
and
cmp
dec
nop
push
and
mov
insl
cmp
and
xchg
adc
decb
dec
and
fidivrs
or
jns
out
aas
mov
add
xor
mov
stos
outsb
or
sub
lds
sub
cmpsb
mov
test
mov
das
dec
or
cmp
cmpsb
call
push
icebp
push
cmp
fsubrl
in
and
mov
cmp
je
pop
jb
in
mov
fcmovnbe
inc
xor
aaa
lock
clc
idivb
or
shrl
xchg
fwait
add
int3
adc
add
and
inc
es
iret
mov
push
repnz
insb
push
cmpsb
and
fninit
shll
push
pop
dec
push
enter
and
xor
xor
loop
movsb
mov
sbb
mov
xlat
or
jns
jge
mov
in
mov
cwtl
or
mov
sahf
mov
add
xchg
pop
mov
mov
je
sub
jo
lds
pushf
push
mov
mov
dec
mov
mov
pusha
push
out
inc
popf
push
dec
push
fildll
dec
mov
jns
xchg
lds
jns
cmpsb
jbe
inc
cs
cmp
pop
and
mov
loope
mov
mov
jecxz
fmuls
sar
cmp
xchg
cmpsb
icebp
or
xchg
and
add
mov
lret
inc
add
lods
sbb
std
cmc
jmp
insl
and
out
cmp
jecxz
adc
adc
mov
sti
pop
mov
pop
int3
jbe
sub
dec
dec
shl
mov
push
outsb
dec
add
push
jecxz
scas
into
loope
xor
sarb
mov
and
mov
add
bound
aaa
xlat
xchg
mov
out
jno
xor
out
mov
imul
pop
fsubrs
jmp
loopne
xchg
and
pop
sbb
inc
outsb
fnsave
sbb
cmc
jg
push
pop
sub
faddp
stc
pop
fistpl
mov
sysenter
bound
and
jg
xlat
jmp
mov
test
cs
jl
add
pop
gs
loope
repnz
shll
mov
sub
int3
movsl
aam
pop
sub
mov
scas
and
dec
insl
sbb
sbb
inc
es
sti
add
stc
xchg
ret
dec
dec
lea
ljmp
inc
adc
gs
pop
push
imul
sub
aam
ljmp
push
inc
xlat
cs
insl
or
jg
pop
add
sbb
cmp
out
mov
ja,pn
outsl
pop
jo
out
cmpl
mov
lret
mov
mov
inc
lea
fdiv
das
push
xchg
and
mov
xchg
mov
stos
mov
movsb
shll
aas
xchg
mov
jle
arpl
jne
test
into
xor
mov
gs
xor
mov
push
popa
pop
repnz
mov
fimuls
stos
jb,pn
cmp
les
mov
pop
cltd
addb
inc
inc
insb
cli
and
mov
and
ud1
leave
xor
add
rolb
sub
repz
xchg
adc
push
jecxz
sbb
pop
xor
sahf
pop
inc
mov
std
inc
mov
mov
lahf
mov
push
fdivr
inc
mov
int3
psllw
loope
sti
xor
std
ficoms
xchg
loope
xlat
lea
add
mov
in
leave
nop
jge
shlb
and
incl
movsb
jno
fdivrs
cmp
pop
pop
pop
dec
mov
fisubl
inc
aas
push
mov
jge
lret
pop
imul
push
dec
dec
or
fsubp
pop
out
mov
xchg
repz
jne
push
or
lret
mov
inc
mov
lahf
mov
scas
mov
mov
mov
mov
mov
inc
sub
and
rsm
mov
adc
cmp
das
vmovmskps
or
dec
scas
out
adc
mov
in
clc
adc
sbb
mov
hlt
inc
lock
insl
fsub
add
fiaddl
clc
and
sbbb
xor
cmp
popa
cmp
call
addr16
dec
mov
mov
and
or
addr16
sub
nop
mov
popa
test
jne
popa
mulb
adc
mov
sbb
push
out
xor
or
xor
or
pop
fisubrl
outsl
xchg
adc
mov
pop
insb
sub
subl
push
dec
sbb
mov
jne
in
xor
not
push
mov
cmp
lea
xor
lock
mov
push
cmp
xchg
xor
lret
mov
mov
inc
lods
cmpsb
ret
jo
dec
jae
fldl
das
dec
pop
aam
shrb
movsl
dec
xchg
aaa
loope
shrl
xchg
aad
ret
push
mov
jl
xor
fdivrs
ljmp
jmp
out
aad
and
imul
stc
add
xchg
insl
sub
aad
pop
push
out
push
sahf
pop
mov
lock
mov
jecxz
in
inc
sbb
push
fsubrl
jecxz
xchg
enter
rcll
mov
or
stos
sbb
mov
xor
xlat
xchg
jns
pusha
fbstp
stos
testl
sbb
push
push
pop
jle
test
jmp
jnp
mov
mov
pop
dec
stos
insb
jl
test
les
cld
int3
js
movsl
jns
lds
je
xor
rcll
and
or
push
push
icebp
aam
xchg
lret
sahf
rolb
shrb
divb
cmp
orb
loope
xchg
and
add
es
xor
adc
inc
xlat
push
aam
pop
jno
jmp
sub
mov
outsl
pop
push
jne
jb
or
cmpsl
push
pop
sub
loop
pop
push
inc
pop
pusha
test
loope
sbb
lock
fs
stc
or
jns
fcompl
negb
mov
and
jno
ret
out
xchg
inc
insb
jge,pt
xor
test
pop
call
pop
icebp
mov
in
ret
lock
mull
lods
adc
mov
inc
mov
stos
add
xchg
loope
push
pushf
mov
dec
shrl
cmp
cmpsb
int
pop
inc
add
mov
or
sbb
test
push
outsl
sub
push
mov
ds
imul
ss
jecxz
mov
inc
call
cmc
fsubrl
fistps
rorb
xchg
loop
sti
xor
int
adc
les
stos
ficomps
jns
or
jbe
sub
jl
call
cltd
inc
lcall
or
dec
cwtl
mov
int3
outsb
add
in
dec
inc
xor
sub
scas
jmp
iret
mov
stos
outsb
mov
popa
xor
push
jno
inc
push
cs
test
or
insl
mov
add
xchg
rclb
repnz
jns
adc
loope
sbb
push
sbb
mov
pop
mov
cmp
movsl
fwait
in
xchg
mov
pop
lods
loope
pop
jbe
mov
movsl
adc
sarb
push
nop
stos
cmpsl
fmuls
scas
cmc
rorl
adc
lret
mov
mov
js
cli
and
mov
xchg
stos
les
xor
mov
sub
ret
adc
pop
lret
fwait
loop
jbe
out
jmp
mov
sbb
xchg
in
cmc
fistpl
lret
jecxz
push
and
icebp
pop
add
pop
jae
or
bound
mov
cmpsl
fs
inc
lds
pop
cmpsb
lods
mov
push
stos
mov
xor
daa
jns
dec
push
and
dec
sub
nop
lods
leave
fimuls
mov
push
repnz
stos
sbb
xchg
mov
jo
lds
test
cmpsl
fsubrl
xchg
stos
lahf
pop
stos
mov
or
ret
mov
aam
cmp
ljmp
cmp
add
fsubs
push
fucom
int3
repz
inc
enter
clc
lods
lret
pop
aam
test
andl
mov
dec
call
mov
ja
decb
sub
shl
xrelease
push
push
in
fadd
loopne
fs
mov
push
ret
sbb
pop
fcmovnu
jmp
cmp
mov
nop
inc
shl
adc
inc
sbb
ret
fstpt
jge
jno
insb
test
sarl
sub
sti
mov
pop
pusha
mov
mov
cltd
push
xchg
xor
outsl
cmp
cmpb
ljmp
xchg
mov
jmp
dec
xchg
data16
sti
outsb
test
mulb
sub
jp
xor
scas
mov
sbb
pop
in
sahf
add
mov
sub
subl
push
jbe
fidivrl
dec
mov
mov
add
inc
jg
xor
xor
jl
push
sbb
in
pop
call
jle
push
testl
dec
int3
push
ja
cmp
xor
pushf
imul
inc
inc
xchg
imul
pop
stos
out
or
out
pop
fs
or
movsb
mov
pop
repnz
arpl
fimuls
fmuls
and
sahf
adcl
push
dec
loopne
imul
subl
fsubrs
sarb
add
inc
aam
pop
and
scas
pop
dec
lcall
sbb
xor
pop
ret
out
sub
fidivs
push
inc
cmpb
enter
xchg
lcall
mov
stos
xor
ljmp
mov
cmp
jmp
sbb
inc
cmc
arpl
xor
pop
mov
fwait
int3
inc
lds
cli
in
sub
xchg
lds
test
xchg
jg
xchg
jmp
ss
adc
fdivl
fld
je
xchg
ret
icebp
mov
addl
jmp
cmp
xchg
out
pop
jno
in
iret
outsl
test
les
and
push
out
mov
xlat
add
insb
fstps
sub
movsl
ljmp
je
pop
pop
adc
pop
lahf
sarb
negb
add
mov
mov
sbb
mov
cmpsl
adc
sub
inc
jge
dec
sarl
hlt
in
mov
fsubrl
scas
lahf
inc
popf
cs
mov
pop
mov
mov
mov
daa
repz
mov
push
xchg
rcrl
ja
jnp
aam
insb
adc
jbe
mov
cmp
pop
add
mov
cs
cli
call
ret
popf
test
hlt
lock
and
int
outsl
push
dec
xchg
sub
xor
daa
jg
test
jbe
scas
inc
faddl
out
stc
jo
lds
or
insb
mov
or
xchg
insb
dec
inc
mov
cmp
push
nop
add
mov
dec
adc
xchg
xor
adc
sbb
push
sahf
dec
test
add
xor
or
mov
push
or
push
je
shl
push
or
xor
mov
jp
or
scas
xor
fstpl
stc
and
xchg
mov
fs
jmp
sbb
jecxz
addr16
faddl
hlt
test
mov
sub
adc
fisttps
mov
loope
push
std
pop
loopne
dec
or
or
out
fisttpl
hlt
cmpsb
pop
in
lcall
xor
push
cwtl
cli
rcl
pop
xchg
adc
shrl
mov
fsin
ret
fnstcw
adc
ret
jle
repz
push
sub
jg
pop
inc
dec
mov
xlat
push
cmpsl
aas
fwait
xor
insl
out
mov
dec
or
and
and
mov
scas
cmp
or
aam
aas
dec
ja
pop
or
dec
pop
out
lods
jo
and
add
or
inc
ds
mov
dec
inc
insb
push
int
loop
out
add
adc
pop
ds
test
out
cmpsb
mov
fstl
jno
mov
push
rcrl
jmp
jg
mov
lods
int
lds
cld
int
xlat
test
fsubrp
mov
cld
shl
movsb
cwtl
fucom
inc
push
push
scas
adc
sub
xor
and
jns
in
imul
in
xorl
jno
sub
adc
out
mov
mov
adc
jmp
icebp
add
in
aaa
or
ret
mov
pop
inc
push
push
xchg
xor
sbbb
jbe
push
movsl
ret
sub
outsb
mov
lock
por
pusha
sbb
in
inc
mov
nop
inc
dec
cmpl
sbb
stos
cmp
and
ficoms
push
add
jo
loop
ret
aas
pop
js
lods
dec
mov
movsb
add
sbb
sub
inc
scas
orl
bound
test
add
jno
mov
dec
jmp
xchg
adc
mov
mov
xchg
xchg
mov
inc
out
or
int
add
je
mov
or
in
fmul
sbbl
les
subl
pop
or
cwtl
pop
push
push
push
adc
mov
jmp
add
push
cmp
ds
test
inc
push
mov
fprem
add
dec
cmp
push
aas
jmp
lahf
inc
jne
cmp
or
in
loopne
rcrl
lret
cltd
std
xchg
test
lock
or
dec
inc
mov
and
out
insb
jo
push
rcrb
xchg
test
push
mov
in
jp
xchg
push
pusha
lcall
out
dec
and
pop
add
pop
sub
xor
push
stos
mov
outsl
mov
movsb
pop
mov
pop
imull
mov
iret
shlb
push
mov
sub
dec
and
mov
xchg
or
cmp
and
gs
call
test
jno
inc
jne
mov
mov
mov
scas
mov
pop
hlt
addb
outsl
aaa
iret
inc
loopne
dec
jno
les
test
pop
fimuls
pop
fwait
pop
ffreep
bound
mov
lods
xor
add
shlb
dec
and
cmp
pop
insl
adc
jle
hlt
les
rcrl
mov
xlat
cmp
jno
cli
popa
mov
int
mov
outsl
test
add
jnp
cli
xchg
ret
outsb
scas
aaa
push
scas
aas
jmp
aam
dec
rcr
fcmovnb
pop
or
fildll
lret
rcrb
or
mov
and
xor
in
test
leave
ljmp
push
xchg
daa
push
inc
and
in
ja
out
mov
or
sbb
dec
xor
push
mov
or
shrb
pop
sbb
imul
jmp
jns
mov
outsb
loop
mov
aad
cmp
or
shll
and
loope
cli
ja
ja
inc
lods
inc
lcall
cmpsl
lods
jns
je
lods
or
or
popf
mov
int3
cmpsl
jecxz
inc
cmpsb
push
das
lds
hlt
jl
push
lret
pop
subl
movsb
dec
add
lret
mov
mov
btr
adc
mov
pusha
jmp
pop
movsl
push
sub
shr
test
shr
fildl
sbb
adc
adc
rorl
aam
sbb
add
push
rolb
jo
pop
xchg
arpl
xor
push
mov
mov
push
aaa
loop
andb
aam
xchg
lahf
add
ret
sub
adcb
rcrb
push
inc
outsb
or
push
bound
negb
ljmp
mov
movsl
jnp
xchg
daa
dec
subl
lahf
and
jo
pop
testb
cltd
add
lods
repnz
mov
pmulhuw
cmp
pop
push
pop
lock
inc
sarl
es
push
hlt
lret
in
stos
movsb
mov
mov
into
mov
in
pop
jmp
sub
nop
push
jbe
pop
pusha
push
push
mov
out
mov
into
popf
pop
scas
mov
int
std
loope
test
shlb
xor
insb
or
loopne
sub
xor
xchg
jge
ret
enter
out
nop
addl
push
out
test
xchg
xor
dec
bound
aaa
mov
mov
inc
xchg
cwtl
sbb
dec
ret
rcr
lock
xor
fisttpll
xchg
pop
inc
xchg
mov
mov
rolb
jmp
pop
xchg
xor
aaa
jecxz
sbb
xchg
inc
aaa
lahf
mov
dec
push
sbb
pop
mov
pushf
xchg
dec
add
shlb
and
xor
inc
xor
mov
cwtl
inc
inc
enter
mov
outsl
sbbl
mov
lock
jo
popf
pop
mov
es
sarb
mov
mov
mov
ret
dec
dec
andl
loop
mov
inc
adc
inc
add
xlat
ret
js
jo
xchg
je
push
aas
lock
daa
dec
mov
add
idiv
ds
mov
repz
xchg
and
jo
mov
loopne
jae
fisubrl
xchg
ret
repz
or
jb
insl
pop
jl
lahf
jg
jne
in
stos
loopne
iret
cmp
dec
and
mov
sbb
or
mov
push
test
adc
mov
iret
mov
or
insb
je
stc
inc
outsb
cs
popa
jnp
popa
inc
aas
mov
push
push
xchg
scas
loope
jp
cmpsb
sbb
jnp
pop
jle
lcall
clc
push
loopne
std
mov
push
mov
js
in
ja
jo
in
jmp
mov
icebp
lret
pop
std
stc
jge
nop
movsb
or
testl
adc
mov
ljmp
mov
call
inc
std
mov
jns
add
popf
mov
push
inc
push
mov
push
inc
sti
int3
push
ret
scas
cmpsl
fldt
enter
or
dec
pop
or
cmp
jne
sbb
adc
cs
jne
sarl
rclb
rcl
cli
sarb
in
mov
in
xorl
pop
push
out
lahf
iret
lods
cld
inc
movsb
sbb
mull
ret
mov
xor
mov
andl
mulb
ss
rclb
dec
in
shl
jge
nop
loope
or
push
ljmp
and
inc
inc
lds
inc
dec
ja
mov
cmp
imul
xchg
ljmp
ja
and
sub
sbb
test
mov
rcll
aam
mov
scas
repz
ret
pop
adc
cmp
push
push
mov
xor
cmp
rclb
push
pop
fmull
mov
or
jno
test
mov
dec
imul
sub
jbe
pop
sahf
addl
sbb
bswap
lahf
icebp
and
xlat
pop
sub
pop
jb
test
and
repz
imul
mov
dec
movsl
lea
je
ret
pop
inc
pop
mov
inc
roll
jo
rorl
icebp
fsubrp
sub
lcall
xor
sti
jecxz
test
cmpsb
dec
and
pop
fidivrs
pop
push
or
mov
and
outsl
sub
and
add
add
xchg
mov
data16
push
sub
xchg
aaa
mov
std
sbb
and
int
xor
ret
adc
imull
add
pop
in
or
add
mov
out
mov
fildll
pop
adc
inc
das
mov
leave
xor
shll
lret
xchg
js
in
ret
fmuls
lods
in
sbb
lcall
mov
mov
cwtl
fldenv
pushf
xlat
int
scas
bound
push
jae
adc
mov
pusha
scas
aaa
filds
dec
pushf
sbb
loope
pop
cmp
mov
jecxz
punpcklwd
xor
cmpsb
pop
enter
cs
pop
mov
pop
cmpl
out
adc
cmp
mov
jno
out
pop
jle
aaa
scas
push
outsl
jmp
sti
and
xor
push
incb
ret
jge
pop
jecxz
mov
lods
ds
scas
lea
clc
sbb
outsb
jecxz
adc
jae
inc
xchg
xchg
ljmp
test
pop
cs
mov
pop
sti
out
imul
push
test
shlb
xchg
das
mov
xchg
mov
mov
sbb
inc
cs
popf
fmul
lahf
cmp
jmp
sub
xchg
arpl
push
adc
das
lock
dec
rcrb
cmp
push
jge
sub
shll
scas
jp
cmp
insl
mov
mov
lods
aas
popf
mov
sbb
stos
out
pop
adc
out
popf
mov
mov
xchg
dec
dec
mov
imul
mov
dec
xor
xor
sbb
sbb
mov
mov
and
push
fstl
mov
mov
or
sbb
dec
sti
push
std
dec
stc
add
sbb
pop
cmp
lahf
adc
fcomps
bound
mov
ret
fistl
mov
jge
sbbb
inc
jno
test
add
push
xchg
rcr
int
push
out
or
aas
mov
in
enter
popf
in
xor
lahf
xor
rcrl
repz
dec
rcrb
fbld
dec
mov
cmp
adc
dec
shll
adc
xchg
loop
adc
fsubs
pop
sub
jp
lret
aaa
jns
and
ds
or
xchg
push
add
mov
xor
and
dec
daa
fidivl
xchg
push
in
and
mov
clc
mov
push
and
jnp
pushf
dec
dec
outsb
icebp
dec
pop
sub
test
sar
lahf
and
int
fmull
fwait
insb
ss
ret
addr16
jbe
fildll
adc
es
mov
insl
adc
popa
dec
dec
xor
fbld
movsb
push
dec
lahf
js
popf
hlt
mov
inc
nop
mov
mov
xlat
pushf
mov
sbb
inc
cltd
gs
call
int
xchg
add
cmp
lahf
mov
jb
cmovp
iret
push
mov
mov
push
mov
pop
inc
mov
cmpsl
push
add
daa
les
fcomps
out
mov
jae
ja
sbb
sbb
jbe
xor
cmp
idivl
fbstp
jmp
push
xor
jle
popa
jmp
cmpsl
xchg
cmp
inc
adc
xor
cs
or
lea
in
ljmp
or
inc
dec
or
lea
push
mov
sbb
xor
mov
aas
jge
cmp
enter
pushf
ljmp
lds
aam
adc
pop
sti
fidivs
clc
test
xchg
shll
out
mov
mov
xor
fwait
mov
popf
stos
fldcw
inc
out
sbb
lods
push
imul
mov
sub
inc
sbb
jl
jecxz
cmp
mov
sbb
add
stos
ds
sub
mov
dec
test
dec
cmpb
adc
in
stos
fstl
mov
mov
out
dec
fsubrp
pop
dec
leave
mov
aam
call
scas
not
xchg
daa
cmp
or
pushw
jnp
dec
add
inc
and
sub
add
shr
jo
xor
mov
mov
popa
fisttpll
inc
add
repz
insl
ss
int
sbb
dec
stc
test
out
mov
in
mov
stos
add
mov
loopne
movsb
jl
pop
in
mov
xchg
or
dec
out
mov
jle
int3
stos
ljmp
test
cli
sub
jp
ja
inc
push
sbb
fcomip
pop
ret
lcall
push
scas
jbe
iret
movsb
xchg
stos
push
test
add
mov
jne
scas
adc
cmp
cli
sbb
xlat
andl
hlt
call
mull
push
fwait
or
pop
ror
mov
ds
jb
idivl
fistl
pop
out
lret
ljmp
sub
mov
lds
or
mov
mov
mov
sahf
fsubrl
loope
sbb
in
mov
cli
loop
lods
loop
jp
jb
fnstenv
es
inc
inc
test
adc
in
push
push
dec
lea
pop
adc
orb
pop
mov
push
jle
inc
xchg
xor
xchg
dec
jbe
jecxz
sub
mov
xor
jnp
jbe
mov
je
flds
mov
test
inc
mov
add
cmp
dec
and
adc
fiadds
pop
xor
and
int3
cmp
xchg
cmpl
pop
and
scas
and
lret
inc
call
push
sbb
fdivs
and
ja
jl
lcall
mov
clc
push
test
fisttps
mov
cltd
jle
jb
aas
cmp
sahf
fimull
outsl
sub
lret
js
cmpsl
aaa
dec
push
add
fiaddl
cmp
out
add
jne
loope
jle
sbb
add
push
add
insb
jno
call
in
fwait
outsb
sahf
bound
and
pushf
xchg
inc
xchg
mov
xchg
das
inc
stos
pop
data16
sub
add
push
push
cmpsl
fstpt
mov
and
mov
xor
pop
and
push
lods
mov
cwtl
shl
or
cld
insl
xor
ljmp
rclb
xorb
jmp
pop
outsb
ljmp
ret
pop
jne
sbb
call
mov
inc
jbe
mov
enter
into
cmp
mov
mov
pop
cmc
imul
sbb
inc
notl
mov
push
in
int
mov
jno
out
jb
cli
sbb
lods
xlat
ljmp
sub
out
hlt
test
inc
mov
repz
push
ret
es
loop
movsb
jle
loope
sbb
rcll
push
inc
outsl
push
pop
dec
cmp
adc
mov
scas
pop
or
jecxz
in
into
jb
lods
add
outsl
les
add
pop
jb
sbb
mov
stc
int
mov
inc
testb
push
data16
sbb
dec
lock
int3
mov
xlat
popa
mov
imul
inc
add
mov
sub
loope
andl
rol
filds
imul
icebp
rcrl
dec
cwtl
sub
aam
int
xchg
inc
adc
jp
das
dec
ret
mov
and
jp
test
movsl
jno
pop
add
sarb
xlat
scas
xchg
les
out
test
sti
push
or
and
aad
bound
jl
shlb
fcompl
pop
ret
orb
subb
jns
lret
cmp
imul
pop
jnp
stos
xor
jmp
xorb
scas
dec
lret
cmp
mov
adc
mov
jmp
imul
lods
pop
adc
and
add
mov
lods
fwait
mov
test
fs
cmp
shlb
sub
pop
sub
stos
addr16
popf
xchg
jb
jne
loop
int
jmp
xorl
pop
mov
andl
or
lods
sbb
push
scas
jge
outsl
sbb
xchg
lods
jnp
lds
shlb
rcl
mov
bound
xor
add
jle
test
or
sub
sbb
mov
or
and
push
xlat
mov
cli
push
xchg
les
fisubl
add
pop
inc
add
jecxz
mov
mov
pusha
fmul
divl
int
and
aas
rorl
xor
pop
dec
mov
sti
repz
xlat
leave
mov
jns
adc
repz
push
lret
mov
ror
pop
jmp
rcrl
addr16
push
pop
push
bound
cmp
inc
cmp
xchg
dec
jg
jb
jb
stc
test
add
test
mov
jle
add
sub
ret
mov
dec
fnstsw
or
arpl
cli
hlt
xor
imul
add
outsl
rcll
xchg
sub
pop
shlb
jns
dec
mov
aad
jae
inc
fsubl
xor
negl
mov
cmp
lcall
adc
adc
int3
sarl
out
popf
mov
repz
mov
fbstp
sti
int
lods
push
ficomps
mov
push
inc
insb
inc
test
lods
je
hlt
xchg
clc
daa
sub
xchg
mov
adc
rcr
fisttps
movsl
and
cwtl
in
and
lock
es
jnp
and
testl
jo
outsl
aas
iret
arpl
cmp
cmc
sbb
ljmp
xchg
int
mov
xor
adc
movsb
and
jle
sbb
mov
mov
mov
push
xorb
popf
inc
cmc
fnstsw
cmc
mov
insb
cmp
jns
adc
add
lret
and
inc
stos
enter
in
out
push
imul
xor
fcmovne
mov
mov
arpl
adcb
dec
sti
ds
call
xchg
cmpsb
sub
sbb
cld
add
int3
inc
inc
not
out
jae
or
int
cmc
lret
inc
adcb
adc
adc
popa
cmp
std
xchg
xchg
sbb
sub
daa
jmp
sub
pop
xor
and
dec
jnp
popl
das
sbb
xlat
into
testl
pop
call
inc
inc
xchg
ds
adc
inc
or
pop
pop
push
cwtl
popf
add
aas
loopne
adc
scas
std
fistps
adc
outsb
lahf
mov
sahf
fs
adc
mov
lods
sbb
xlat
or
mov
sbb
mul
jg
ret
bnd
loope
push
adcb
call
ret
fsubrs
jb
call
cmpsl
push
cmp
sahf
stc
lock
sar
cwtl
or
sarl
mov
andb
mov
fmulp
mov
cs
out
shrb
push
push
push
mov
sub
aaa
jmp
outsl
xlat
jbe,pn
xor
xor
mov
outsl
loope
inc
int3
push
test
jecxz
sbb
ret
inc
cld
stos
clc
jb
jg
into
pop
add
xchg
mov
and
push
mov
pop
push
call
xorl
es
or
inc
adc
mov
pop
cmp
lds
stc
inc
pop
jae
inc
adc
mov
add
fdivl
in
mov
nop
popa
xor
fmuls
int
arpl
and
cmpl
add
mov
jb
div
pushf
pop
sbb
addr16
outsb
sub
xor
js
addb
sbb
repnz
cld
fsub
pop
jl
cmpb
adc
add
pop
sub
xchg
jbe
stc
sub
cmp
cmc
or
push
jnp
jnp
ds
adc
mov
aaa
adc
lds
fwait
mov
add
inc
and
pop
push
jo
add
jp
int
sahf
push
pop
push
xor
mov
and
and
pop
adc
icebp
dec
and
inc
pusha
sbb
pop
aas
das
es
xchg
push
iret
out
imulb
pop
inc
push
xor
decb
test
push
xor
mov
xchg
mov
icebp
sub
cs
cli
mov
test
sti
js
adc
push
pop
or
jle
mov
or
iret
pusha
imul
pop
notl
andb
shlb
mov
pop
int
les
ja
nop
inc
enter
dec
int3
decb
inc
xor
shll
push
pop
mov
je
xchg
sub
add
pop
sub
loope
addr16
or
int
push
lds
mov
insb
mov
mov
cmp
jnp
popa
jae
jns
mov
rcll
stc
sub
mov
outsb
jae
lock
adc
and
xchg
lret
test
cmp
mov
lds
sbbb
jle
adc
cmp
pop
arpl
dec
call
mov
inc
rcrb
and
stos
orl
adc
jne
loopne
sbb
insb
xlat
lods
or
dec
pop
icebp
or
stos
mov
ss
sbb
jne
cmpl
mov
lret
cmpsl
mov
jg
xchg
movb
lahf
cwtl
das
dec
xchg
or
push
push
cli
mov
jns
outsl
add
sbb
imul
loop
int
lods
mov
das
faddl
and
leave
fsub
movsb
bound
mov
aad
adcb
mov
mov
sub
add
mov
lcall
cmc
pop
xchg
dec
call
dec
mov
cmp
loopne
mov
adc
in
dec
sbb
dec
push
xlat
lds
add
pop
pop
jno
jmp
mov
mov
xchg
nop
xor
hlt
leave
les
push
mov
xorl
or
xor
jmp
xor
popf
cmp
cmpl
mov
fwait
orb
leave
cmpsb
mov
aam
sub
out
xchg
mov
push
mov
fistl
sbb
daa
adc
adc
gs
decl
or
mov
jp
scas
in
in
push
outsl
mov
sbb
mov
and
and
lret
mov
dec
jae
xor
add
es
jl
adc
jp
dec
sub
or
push
js
bound
ret
jg
scas
test
cmpsb
jo
sub
mov
dec
adc
mov
lahf
rcl
shll
sti
lret
cmp
jmp
xchg
mov
dec
movsb
dec
into
add
jo
cmpl
mov
adc
popf
addr16
lods
lea
jge
rcr
call
sbb
jp
pop
add
and
push
int
xor
push
add
das
shlb
or
data16
call
lea
mov
inc
jns
cwtl
ja
rcr
mov
aas
icebp
jmp
sub
mov
sub
shrl
aad
jae
movsl
mov
in
dec
pop
mov
movsl
push
xor
sti
ljmp
add
mov
add
gs
push
mov
adc
popa
adc
pusha
or
cmpsb
inc
and
cltd
inc
jno
mulb
or
adc
xor
cmp
and
nop
push
pushl
cmpsb
xor
test
xor
lcall
jne
lahf
sar
and
xchg
push
xchg
jle
adc
add
jl
xchg
ljmp
fs
shrl
in
pop
out
mov
xor
fidivrl
es
dec
jne
imul
or
mov
cwtl
fists
xchg
insb
push
cmp
push
pushf
adc
xchg
sbb
or
imul
add
inc
out
mov
push
xchg
and
sahf
popa
insl
push
xor
sub
movl
sub
insb
sub
push
je
jno
or
lods
cltd
movsb
jle
inc
int
pop
dec
jl
sbb
mov
dec
jae
adc
mov
loop
or
std
push
push
cmp
push
mov
subl
xchg
or
mov
pop
enter
cmc
dec
jbe
negb
lea
xor
movd
leave
jne
jp
movl
cmp
aaa
xlat
ret
sub
outsl
sti
test
add
pop
xchg
mov
xor
cli
cmp
mov
movsbl
test
fndisi(8087
push
aas
xor
jnp
loop
fistpl
cltd
arpl
test
or
xor
jae
iret
popf
int3
cmp
mov
pop
leave
xlat
clc
clc
sbb
add
movzwl
push
push
sbbb
cmp
mov
xchg
ss
les
in
mov
js
mov
subl
adc
lahf
dec
cmp
lods
or
test
mov
das
std
jno
lds
fsubrl
dec
push
mov
jae
inc
xor
ds
lods
js
cmp
or
test
stos
and
loopne
repz
sub
sub
imul
ret
add
jl
idivb
test
jne
popa
add
jb
and
add
enter
push
xor
pusha
adc
mov
pop
mov
pop
add
fstps
testb
das
leave
jb
ret
or
and
sbb
lods
rcll
int
movl
call
scas
das
mov
mov
xor
ret
inc
and
jns
sti
lcall
jo
xlat
mov
call
adc
cmp
sub
out
aad
iret
add
adc
jns
jmp
loope
xor
aad
mov
ljmp
jl
out
es
rolb
shll
daa
lret
repnz
dec
ds
out
jbe
mov
adc
mull
cmc
pop
jge
fmuls
or
mov
lods
xchg
sbb
pop
stos
cltd
pop
jns
xchg
or
or
xchg
xchg
cli
mov
jle
test
sbbl
xchg
xchg
fld
addr16
mov
adc
add
ud2
or
call
push
popa
addr16
mov
dec
xor
xchg
iret
inc
adc
sub
pusha
nop
cwtl
insl
jns
adc
push
jae
xchg
cmp
ja
xchg
mov
cli
sbb
adc
ret
cltd
add
call
ljmp
jo,pn
cs
pop
lock
insb
inc
inc
cmp
xchg
mov
mov
adc
mov
sub
inc
in
sar
jns
mov
inc
addb
sub
and
dec
sbb
into
cli
es
xchg
mov
movsb
cmp
iret
pop
xchg
aam
sub
adc
addr16
push
xlat
xchg
jp
inc
rcll
scas
leave
mov
out
hlt
xor
sbb
negl
jle
enter
xchg
jne
stc
sub
cbtw
dec
inc
int
sbb
lret
push
dec
bound
add
cltd
inc
leave
inc
or
je
push
mov
xor
ret
jnp
add
xchg
push
add
fwait
add
inc
push
mov
xchg
sub
loop
dec
or
adc
cmp
xchg
cmpsb
sub
jbe
sarl
jne
pop
test
xor
je
fsubr
mov
data16
mov
cmp
outsb
ss
ret
xchg
xchg
jne
fld
jg
xchg
ret
ret
dec
subb
lahf
bound
mov
in
cmp
lds
xor
jne
sub
cltd
ja
mov
scas
push
out
adc
xchg
orb
scas
add
cmc
pusha
fstpl
mov
xor
and
iret
iret
cmpl
push
mov
adcb
dec
ljmp
es
lcall
lcall
pop
les
outsb
je
fmul
jg
ss
cmp
push
ss
xchg
cmp
pop
mov
and
push
shrb
mov
mov
movsb
subl
push
sub
push
pop
dec
clc
jnp
cmpsb
rcrl
repz
imul
dec
xchg
ja
rcrl
inc
jl
pop
popf
sub
lock
mov
sub
jae
clc
cmp
inc
adc
fldl
daa
int
bound
rcll
hlt
mov
repz
pop
int3
scas
bound
mov
mov
lahf
mov
mov
cld
out
and
inc
dec
lods
les
xchg
nop
shr
addr16
sbb
sbb
mov
jae
iret
out
enter
xchg
sbb
call
out
js
fstps
xchg
push
shr
push
xor
les
xchg
scas
int3
cmpsb
cmp
into
push
pop
in
sub
inc
out
pop
jne
lea
lods
pop
ljmp
aam
jmp
mov
fidivs
xor
ret
aas
movsb
test
mov
xchg
pop
cwtd
ds
cli
inc
clc
jmp
addb
cmc
mov
or
or
add
int3
ss
fidivrl
jbe
mov
mov
xor
daa
xchg
pop
out
and
mov
pop
jl
lret
adc
mov
mov
stc
in
test
jecxz
imul
sbb
loop
xchg
pop
add
pop
arpl
imul
mov
xchg
push
iret
mov
subl
cmp
insb
push
mov
inc
pusha
fbld
lods
add
cld
test
sbb
fwait
pop
iret
nop
jnp
js
pop
in
out
push
or
xor
js
push
mov
push
aas
pop
push
or
inc
repnz
call
and
push
jb
mov
imul
std
movsl
test
cwtl
push
adc
adc
cltd
mov
dec
js
jp
add
daa
pop
dec
and
lods
xlat
pop
inc
loopew
les
and
rorl
push
sbb
ss
xor
add
push
movsb
mov
mov
jl
mov
jae
push
fs
fimull
mov
notb
cmpsl
xchg
movsl
pop
sub
cwtl
aas
mov
mov
add
imul
pushf
cmpsb
int3
call
ret
loopne
jnp
int3
xchg
pop
pop
sbb
and
dec
call
mov
std
push
mov
mov
mov
or
fwait
iret
loop
cs
push
outsb
push
sbb
out
xchg
push
dec
pushf
pop
jo
push
dec
push
mov
xchg
orb
movsl
xor
jno
fs
sbb
pop
xchg
jl
sub
sbb
test
testl
jne
mov
loopne
movd
mov
and
inc
pop
dec
test
ficompl
or
or
ja
jl
jg
shr
cmpsl
mov
scas
decl
test
add
ret
call
mov
push
and
out
xchg
adc
and
imull
sbb
sub
paddusb
pusha
stos
sub
jle
mov
insl
scas
shll
lds
push
xchg
pop
mov
pushf
pop
jmp
and
xorps
cmp
pop
bound
add
xchg
xor
inc
addr16
jbe
jb
shlb
sbb
scas
pop
cltd
je
inc
or
sbb
sub
mov
movsb
mov
out
cmp
jnp
xchg
addl
sbb
repnz
cmp
sub
cmp
add
fucompp
and
pushl
xor
lret
ss
test
pop
xchg
pushf
mov
rcll
fbld
popf
lock
cmp
adc
fmul
aam
xchg
mov
das
nop
mov
iret
testl
inc
mov
sarl
and
and
sti
psubq
les
fadds
out
fyl2x
rorl
jns
jge
mov
mov
adc
mov
dec
in
dec
jg
cwtl
adc
aas
gs
dec
mov
inc
and
inc
dec
arpl
dec
or
fadds
imul
cli
mov
icebp
xor
cli
addr16
fsts
cmpsl
xor
mov
jnp
sti
aas
or
and
or
or
dec
mov
loop
loopne
and
cmpsl
ror
pop
inc
mov
sub
pushf
std
testl
pop
dec
push
pop
inc
add
jb
cmc
out
or
inc
sbb
jle
pop
push
xor
xchg
mov
nop
or
ffreep
jge
dec
mov
orl
das
pop
inc
sbb
inc
daa
lea
repz
ror
test
call
pop
fs
incl
mull
rolb
movsb
cmp
push
inc
lea
cmp
loope
daa
test
cmp
ret
cmc
jl
mov
jl
fmulp
fs
mov
pop
insl
inc
call
lret
pusha
jle
jae
out
lret
fisubl
mov
ss
dec
loopne
dec
push
movsb
xchg
pusha
jo
xor
scas
sub
xchg
mov
inc
push
dec
jle
and
loop
xchg
sbbl
rol
push
js
test
insl
dec
add
mov
iret
xchg
mov
and
jmp
or
jo
jno
and
stos
rcll
ss
jl
shll
pop
in
sbb
imul
movsl
cmp
ja
cmp
cmp
ds
xchg
pop
push
cmc
sub
cmp
jne
add
mov
push
xor
push
lea
and
fcoms
adc
stos
jg
push
xchg
imul
xor
fstpl
push
pop
bound
lods
adc
cmpsb
adc
mov
xor
push
aaa
add
pop
mov
and
inc
xlat
mov
or
repz
cmp
mov
invd
adc
pop
scas
rcrl
adcl
shl
decl
or
pop
sbb
imul
lds
xor
psrld
gs
jle
and
xchg
xchg
xchg
pusha
adc
icebp
push
outsl
add
rorb
out
imulb
sub
xor
dec
mov
sbb
out
push
lods
mov
xchg
leave
test
push
jge
jne
inc
fisttpl
lods
xchg
hlt
or
inc
cmpl
xchg
movsl
adc
jnp
jl
jle
rol
cmp
and
pusha
cltd
sti
nop
jns
mull
repnz
in
xchg
ds
bound
imul
or
ss
jbe
or
adcb
pop
push
movl
shlb
mov
xor
xchg
pop
movsb
sbb
ret
pop
clc
adc
test
jo
pop
outsb
jg
iret
inc
test
js
lcall
sbb
push
add
lods
dec
cli
jns
loope
sbb
jg
mov
lret
mov
std
mov
mov
test
test
fadds
sub
mov
in
pop
push
in
fstpt
cs
jge
aad
mov
push
cli
xchg
cmp
scas
lcall
scas
pop
pop
sub
xor
and
cmp
cmc
stos
mov
test
xlat
mov
inc
adc
add
inc
pop
dec
cmpsb
mov
je
shlb
std
push
movsb
fnstenv
jg
cmp
out
outsb
xor
icebp
adc
push
pop
jnp
into
or
jo
addr16
push
mov
and
jo
aas
les
xchg
cmp
mov
mov
add
sbb
addr16
lcall
pop
clc
inc
adc
xor
pop
push
jecxz
out
inc
push
in
inc
fsubs
or
xchg
call
jns
cwtl
or
push
call
aam
inc
in
addr16
cmp
lea
test
push
stos
icebp
dec
pshufw
inc
xlat
jmp
jo
ljmp
ret
fimuls
leave
movb
ljmp
repz
ljmp
insl
lea
push
adc
push
lret
das
imul
pop
pop
pop
mov
dec
sbb
mov
inc
lods
cmp
popf
mov
mov
mov
add
adc
js
or
enter
bound
xlat
jnp
adc
jbe
stc
cmp
push
mov
out
out
mov
out
cld
sbb
adc
push
movsl
rorb
outsb
dec
outsl
mov
in
pop
and
stc
jmp
int3
cmpsl
fidivs
into
mov
hlt
push
stos
push
scas
push
mov
andb
dec
popf
jne
hlt
sub
scas
in
xchg
shlb
jb
lret
arpl
dec
or
mov
loope
adc
pop
repnz
dec
inc
add
push
ja
popf
cmp
sbb
or
xor
lcall
in
insb
cwtl
add
push
clc
ljmp
cmp
push
push
dec
cli
in
mov
in
sti
mov
cmp
cmpsl
popf
nop
xor
lcall
into
ret
aam
lret
pop
xchg
fwait
ja
pop
je
jne
xchg
lahf
pushf
mov
hlt
dec
out
aad
out
inc
xchg
test
call
mov
add
xlat
loopne
aad
xchg
pusha
mov
sarb
lods
add
sub
test
xchg
inc
les
fsubrl
leave
pop
inc
loope
into
add
repnz
adc
icebp
dec
pop
xchg
mov
cmc
dec
push
push
pop
es
mov
pop
aas
xchg
iret
inc
push
mov
cmp
clc
or
ror
sub
fbstp
or
xchg
dec
jnp
fimuls
push
test
mov
jno
lahf
adc
inc
mov
popa
lahf
cmp
cltd
and
jbe
out
cmc
xchg
daa
xorb
inc
sbb
popf
outsl
push
adc
lcall
push
or
fcom
jo
lea
mov
or
inc
jmp
push
mov
test
fidivrs
fistpll
cmpsl
jb
and
pop
in
mov
inc
mov
mov
mov
and
aam
dec
out
pop
pop
in
icebp
je
pop
popf
cmp
in
dec
out
push
outsl
clc
aad
push
adc
mov
insl
mov
add
cli
addr16
out
jns
mov
addr16
add
and
xor
call
les
inc
push
cmp
jne
insl
popa
outsb
insb
test
cmp
aad
and
adc
shrl
xchg
sub
mov
xchg
fs
push
inc
or
cmp
add
lcall
insb
pusha
pop
pop
mov
leave
sbb
stos
dec
enter
test
iret
inc
cli
jnp
sub
cs
mov
sahf
xchg
adcb
mov
lret
test
xchg
ss
dec
test
mov
lea
mov
nop
in
cmp
out
stc
pop
mov
sub
aaa
scas
ficoms
inc
inc
inc
pop
xchg
in
lcall
cmc
sbb
or
mul
sti
mov
push
fstpt
cli
xlat
enter
aaa
or
lret
cmp
mov
lea
in
jae
ror
in
and
in
scas
sbb
push
fmul
dec
test
pop
pop
xor
push
mov
mov
cmp
inc
fistl
mov
cs
stos
ret
xchg
mov
int3
es
in
aaa
xchg
cmp
outsb
outsb
or
and
mov
xchg
lods
enter
jge
mov
dec
lods
insl
addb
cmp
stc
gs
int
adc
shrb
xchg
enter
dec
and
repnz
sbb
nop
stos
gs
sbb
xchg
xor
pop
rclb
pop
dec
cli
xchg
aas
inc
imul
fcoml
ja
cwtl
inc
mov
pop
data16
outsb
push
in
in
mov
outsl
mov
pop
add
dec
xchg
jp
fldenv
scas
lahf
loop
pop
data16
push
mov
mov
cmpsb
jge
leave
add
int
cld
push
inc
push
iret
hlt
stos
xor
pusha
sub
jl
test
les
sub
cmpsb
fstp
rcll
push
inc
mov
and
jecxz
test
cltd
cltd
loop
xor
jge
cmp
mov
jnp
sbb
loop
sub
aas
or
push
loopne
dec
pushf
into
add
ljmp
es
das
jno
in
adc
push
mov
lea
in
push
dec
fldl
popa
xchg
ja
leave
cmp
aas
scas
mov
xchg
out
ret
or
cmp
mov
mov
test
ja
in
and
cmpsb
jo
cmpsl
out
mov
rol
sbb
push
mov
or
cmp
subl
call
mov
cmp
pushf
in
mov
loopne
insl
mov
push
mov
stos
leave
lock
lea
adc
mov
popa
inc
xor
push
push
cmp
ljmp
shll
jb
adc
pop
mov
pop
sub
or
mov
notl
mov
mov
jno
test
mov
in
dec
mov
inc
and
mov
xchg
xchg
jmp
sbbl
sar
push
sub
stos
je
mov
mov
in
out
sti
daa
jo
adc
cwtl
aad
pop
out
cmp
in
icebp
pushl
cmp
sub
aam
push
jecxz
sub
fstl
das
and
fxch
inc
sbb
out
loop
mov
sub
push
jmp
mov
outsb
dec
jno
or
mov
cli
push
adc
fbld
ficoml
pop
out
sbb
jle
test
adc
xchg
cltd
push
lcall
dec
clc
lret
pop
sahf
imul
orl
aam
call
loop
scas
push
ss
shll
jg
adc
xlat
mov
leave
mov
int3
or
dec
adc
mov
pop
push
cmc
jbe
cmpl
dec
xor
sbb
cmp
movsb
adc
pop
outsb
leave
or
xchg
sub
mov
into
je
enter
mov
xchg
adc
inc
mov
jp
lea
or
mov
xorb
push
mul
add
push
xchg
and
es
lods
mov
popa
mov
shll
test
dec
fisttps
negb
sti
add
jge
lahf
jle
xchg
es
test
jle
push
cmp
xchg
loopne
sub
lret
jb
scas
mov
pop
repnz
nop
sarl
xchg
mov
pop
loopne
fcomps
push
js
cli
xor
xorl
nop
dec
movsb
adc
in
xor
cli
and
lahf
xlat
sbb
mov
ja
test
ds
mov
xchg
cmp
pop
lret
daa
mov
loope
xor
mov
mov
jmp
inc
leave
imul
cmc
dec
push
jo
mov
rorl
in
mov
or
pop
int3
jmp
mov
stc
push
mov
test
xchg
mov
jo
pop
nop
pop
add
mov
inc
cmpsb
dec
pop
scas
pop
and
mov
mov
lahf
sub
jl
adc
addr16
and
cmpsb
movsb
test
xchg
jo
and
mov
gs
push
sub
jno
sbb
mov
ljmp
dec
inc
jae
xchg
mov
or
inc
int
xchg
cltd
mov
lret
clc
ret
dec
sub
sbb
mov
cmpsl
lret
pushf
fidivrs
push
sti
adc
in
pop
aaa
shlb
adc
or
sbb
jbe
and
aaa
sahf
lret
imul
clc
pop
addb
int3
stc
pop
mov
mov
rcl
fcomip
inc
and
jge
sbb
mov
jno
or
jb
pop
xor
push
push
push
xchg
ljmp
adc
aaa
dec
cmp
stos
repz
in
xchg
movsl
popa
scas
cmp
addr16
cmc
push
mov
xchg
sbb
cmc
aas
add
pop
mov
mov
pop
ja
sarb
sbb
and
push
inc
gs
inc
mov
mov
fidivrs
testb
adc
sbb
fstl
sbb
mov
sub
loop
pusha
sub
cmp
clc
xchg
push
stos
jg,pt
movsl
or
or
pop
inc
outsb
ret
fistl
dec
pop
int3
add
mov
push
push
sub
push
and
mov
addr16
mov
xor
dec
sub
cmp
xor
insl
jl
pop
dec
ficomps
dec
or
aaa
shl
inc
cmp
ds
sti
lahf
push
negl
nop
stc
mov
add
cmp
shll
ja
in
ss
and
push
sbb
jg
fmull
or
pop
nop
mov
adc
int3
push
fcoml
and
lods
lea
cli
sbb
test
sub
add
push
mov
jbe
and
mov
js
push
inc
jmp
dec
std
jno
lahf
icebp
repz
iret
cli
fldl2e
fldenv
pop
das
leave
add
pusha
lahf
push
cs
cmp
popf
inc
dec
or
test
push
outsb
pop
insl
nop
xor
mov
mov
jns
mov
iret
rol
lret
ljmp
mov
and
pop
pop
adc
sbb
adc
es
sub
cwtl
and
sub
addr16
in
mov
out
add
mov
cmpl
lds
les
loopne
xor
arpl
cmpsl
lahf
sahf
mov
sbb
jp
faddl
cmp
repz
cmp
in
pop
jbe
and
test
adc
ja
jmp
sub
aad
mov
mov
push
popf
fists
mov
js
pop
mov
iret
inc
xlat
sahf
pop
and
jecxz
dec
ss
int
loop
mov
adc
mov
outsl
jl
push
mov
xor
or
iret
clc
cmpsb
gs
and
pusha
mov
out
xor
ret
lds
sbb
mov
test
xchg
fs
dec
mov
std
mov
cmpsl
std
or
jecxz
mov
pusha
ror
pusha
xchg
or
lret
mov
inc
xchg
cmc
or
out
notb
mov
scas
test
sub
int
push
jno
gs
or
push
ret
dec
cmp
jb
sub
es
lahf
push
or
fisttps
inc
sbb
push
daa
jno,pt
pop
insl
pop
pop
or
xor
mov
pusha
int
mov
hlt
ds
es
push
push
jnp
push
mov
pop
mov
xchg
pop
mov
fldcw
lods
inc
inc
push
push
adc
xor
test
lods
pop
push
into
test
push
inc
jae
enter
out
aas
enter
and
mov
pop
std
inc
leave
stos
outsb
out
sub
les
add
into
scas
cltd
pop
loope
lock
cld
rol
test
lods
cltd
jp
push
sbb
int3
cmpsl
daa
aaa
cmpsl
push
sub
roll
fcom
inc
rep
fidivrl
jecxz
es
aaa
sub
ds
xchg
xchg
sbb
or
xor
pop
lahf
ss
sbb
es
sub
cmp
xlat
xchg
adc
pop
inc
mov
sbb
push
inc
sub
xchg
dec
mov
sahf
or
aad
xchg
add
xlat
push
arpl
adc
sbb
lahf
les
sbb
adc
cmp
es
sti
cmpsl
and
inc
es
fildll
sbb
in
push
insl
call
or
enter
xchg
movsl
xor
mov
pop
lods
and
cmc
add
lret
mov
dec
push
pop
sub
lret
mov
fcoms
xchg
les
bound
xchg
cmpl
pusha
je
mov
mov
inc
sub
sub
lds
pop
pop
stos
inc
xchg
arpl
mov
lods
push
scas
sub
jmp
mov
and
xor
or
ljmp
pop
popa
sub
push
pop
pop
add
fmull
inc
fs
fsubs
rclb
cmp
xlat
xor
fadd
push
psubb
push
lret
jp
lret
mov
and
lock
idivl
xchg
ds
mov
push
fwait
pop
fwait
jae
or
scas
test
rolb
lret
sbbb
xorb
andl
mov
test
or
push
sub
lods
push
mov
adc
outsb
dec
cmpsb
jg
sahf
adc
ss
or
and
jae
data16
jg
bound
fs
stos
push
dec
pusha
mov
ror
add
and
xchg
daa
xor
gs
mov
mov
fildll
push
sbb
jmp
cwtl
mov
popw
mov
sarl
enter
push
jecxz
loopne
rorb
lret
shll
mov
movb
and
das
aas
or
orb
push
mov
stos
testl
add
mov
dec
lock
cwtl
pop
jo
adcb
push
out
mov
dec
pop
lds
add
int3
popa
bound
push
std
cmpl
les
int
inc
arpl
push
pop
adc
push
ljmp
shll
add
jl
out
adc
imul
outsl
push
adc
loopne
cmc
mov
pop
lods
scas
lea
xor
add
mov
or
xor
fincstp
shlb
std
dec
push
or
jge
jecxz
inc
dec
mov
xchg
mov
leave
aas
loop
cwtl
xor
nop
sub
cld
and
cmp
ljmp
aam
pop
loope
in
lock
cmp
sub
sub
mov
adc
push
push
into
adc
pop
push
adc
popa
enter
lods
adc
push
aaa
or
xchg
movsl
pop
push
pop
out
sbb
bound
inc
pusha
adc
test
inc
es
out
movsb
mov
mov
xor
cwtl
pop
xchg
test
inc
push
jl
test
clc
push
dec
mov
loopne
fnstsw
sbb
bound
pusha
xchg
idiv
sbb
in
fists
call
enter
xor
inc
daa
push
cli
mov
clc
sbb
in
add
sarb
shrl
std
lods
test
push
lcall
inc
aam
add
xchg
je
mov
sub
sub
call
or
add
fwait
adc
xchg
into
mov
orl
shll
add
push
sarl
xor
dec
dec
aaa
movsl
and
cmpsb
sub
cld
mov
pop
mov
jnp
adc
xchg
loope
scas
dec
imul
call
and
mov
rcrl
xorb
mov
data16
xor
not
lahf
mov
adc
and
adc
out
insb
mov
push
cwtl
xchg
test
popa
jno
ss
shlb
gs
outsb
xchg
insb
cld
test
mov
xor
mov
loop
jne
out
scas
lock
push
cs
sub
inc
lds
addb
inc
and
fsts
mov
pop
jno
jne
dec
ljmp
into
mov
push
in
adc
loop
inc
loopne
dec
daa
mov
cmp
jne
push
je
aas
push
frstor
push
push
pop
lock
bound
adc
lea
adc
mov
filds
sahf
add
xchg
mov
push
ja
xor
xchg
mov
add
jmp
sbb
mov
sbb
lds
cwtl
inc
xor
insl
hlt
sahf
jecxz
push
or
sti
inc
stc
shlb
mov
mov
jmp
push
loop
push
movsbl
mov
fisubs
popf
les
inc
adc
loopnew
jmp
cmp
mov
mov
out
cmpsb
fld
mov
inc
push
out
jle
imul
add
push
ss
ffreep
add
xor
xchg
icebp
sbb
inc
outsl
into
fildl
mov
jb
test
pop
or
sbb
dec
xchg
inc
sbb
rcr
jne
inc
xchg
add
add
push
jp
jl
cmp
lods
jg
xor
xor
aas
enter
std
push
sar
sbb
inc
call
xor
aaa
cli
mov
or
sahf
je
push
rolb
dec
std
add
push
mov
jbe
rep
sbbb
in
pop
sti
rolb
cmc
adc
pop
dec
jmp
int
in
pop
mov
jg
sub
jp
repnz
xor
aaa
loop
clc
lock
lods
aas
jne
cwtl
xchg
cs
cmp
ljmp
add
jge
mov
push
cs
sub
and
inc
jb
into
fdivs
sbb
sbb
jb
push
jmp
aas
roll
outsb
lcall
aaa
repnz
stos
mov
lret
inc
adc
shll
sbb
jle
in
outsb
aas
je
ret
icebp
mov
fists
inc
mov
mov
dec
rcrl
mov
mov
ljmp
pop
pop
lret
or
mov
and
test
inc
mov
mov
sbb
and
repz
mov
or
jp
outsl
inc
cmpsl
cli
push
lret
push
sub
push
or
add
sarl
rcrl
inc
arpl
mov
sub
jle
cmp
cmp
test
xor
or
xor
mov
dec
cwtl
div
inc
or
into
push
and
xchg
dec
pop
aas
ds
sbb
data16
push
imul
fiaddl
xchg
scas
mov
push
xchg
cmpb
xchg
push
and
inc
add
pop
les
imul
js
pushf
sbb
adc
inc
out
mov
add
push
pusha
pop
insl
cmpsl
out
mov
shll
cli
fidivl
jmp
add
jge
xor
jb
mov
les
lods
enter
scas
mov
fs
pop
jle
dec
mov
xor
in
and
xor
addl
mov
stos
ficomps
cltd
and
pop
pop
add
sub
and
out
loop
or
call
cmp
lods
out
stos
mov
scas
or
xchg
push
add
ret
inc
les
mov
mov
cli
dec
xor
sub
lea
test
mov
ficoms
push
mov
or
push
leave
ja
pusha
mov
sub
pushf
cmp
rclb
dec
in
cmp
test
jne
outsb
cmp
push
fs
xor
inc
dec
xchg
push
sub
adc
adc
test
xor
pusha
jno
rcr
mov
div
add
cltd
das
mov
inc
aam
or
into
push
push
mov
lods
mov
mov
add
mov
mov
and
adc
add
test
pop
jl
cli
fmulp
sarl
cwtl
lcall
aad
fs
cmp
mov
pop
mov
jb
cmpsb
or
add
hlt
sbb
iret
out
fmull
mov
lret
lahf
add
xor
sub
repnz
dec
jge
mov
mov
dec
or
mov
pop
and
negb
ja
fldt
mov
adc
push
imul
inc
inc
or
add
pop
push
es
push
sti
loop
nop
xor
orb
pushf
lcall
and
cmpsl
adc
daa
ret
lods
mov
inc
aad
les
and
xchg
in
push
jns
push
addr16
out
adc
test
outsb
xor
jge
xor
pop
aad
xor
jno
or
cli
cmp
sahf
mov
ja
call
inc
jge
insb
out
xchg
mov
mov
out
les
and
mov
stc
rcrb
mov
xchg
mov
lds
scas
push
mov
push
ljmp
mov
stos
adc
adc
out
test
xchg
mov
cmp
lods
cmpsb
addr16
push
loop
pop
repz
icebp
or
pop
mov
fidivs
mov
pop
xor
fiaddl
sub
out
adc
outsl
pop
jge
loopne
fs
ret
pop
in
mov
stos
mov
pop
lret
stos
fsubrp
dec
cmpsl
in
pop
int3
pop
gs
jp
in
shll
lods
pop
gs
mov
stos
jecxz
xlat
dec
mov
sub
iret
bound
xor
loopne
es
and
frstor
lahf
bound
add
add
cmp
sub
clc
jnp
stos
lods
ja
add
fisubl
in
test
add
add
mov
fildll
dec
dec
xchg
mov
jb
sub
mov
pop
jmp
xor
add
xlat
lods
xchg
scas
or
push
dec
ret
push
dec
cs
dec
xor
ljmp
clc
cmpsb
jbe
mov
cmpsb
dec
mov
aad
stos
add
testl
insl
shll
push
or
insl
stc
sahf
rcr
jns
clc
sbb
inc
aad
mov
js
mov
inc
stos
loop
pop
push
pusha
mov
push
mov
mov
aaa
push
divl
rcrl
lret
inc
fadd
out
arpl
lret
push
push
add
adc
imul
xchg
lret
xor
xchg
push
xlat
jns
call
int
sbb
mov
cmp
mov
mov
insl
outsl
fimull
xchg
in
in
sub
dec
leave
and
test
dec
mov
mov
xchg
jp
and
arpl
or
push
or
xor
jne
cmp
sbb
pushf
repnz
cld
gs
mov
mov
cwtl
shr
scas
lds
sbb
sarl
and
aas
cmovo
mov
xchg
and
in
es
lock
idiv
stos
xor
jecxz
add
xor
int3
test
or
or
mov
mov
movsl
fidivs
cwtl
inc
push
popf
repz
push
out
movsl
push
decb
push
push
ret
push
outsl
mov
and
adc
jmp
add
int3
out
cmpsb
cmp
add
out
inc
gs
and
adc
push
int3
xchg
pop
and
sub
pop
aad
pop
notb
mov
mov
jg
xor
shll
mov
imul
pop
mov
mov
ret
jp
mov
sub
xor
shlb
jns
mov
jne
out
push
cwtl
cmpsb
mov
outsl
int
dec
xchg
jg
test
pushf
adc
mov
mov
dec
lret
add
pushf
pushf
mov
mov
in
xchg
jno
imul
rcrb
mov
lods
add
and
mov
icebp
xlat
rcrb
cwtl
jnp
stc
imul
rolb
jbe
lahf
inc
hlt
push
js
mov
or
sahf
cltd
xchg
loope
dec
xchg
add
push
mov
incb
push
xor
and
jae
xor
cmpsl
and
jecxz
mov
adc
jg
es
dec
push
sub
jp
inc
xlat
into
cwtl
push
push
mov
mov
fisubl
add
cwtl
cld
jb
jge
and
sub
push
mov
mov
cmp
mov
add
xchg
mov
jp
cld
fsubs
fsubs
sub
lea
inc
xchg
shll
push
xchg
sbb
leave
rcl
cmp
adc
sbb
cmpsl
xor
hlt
mov
xchg
and
stc
push
dec
and
hlt
lcall
loop
cmp
and
repz
jl
xchg
stos
fisttpll
rcll
in
mov
push
ss
pop
lret
sbb
pop
adc
cld
mov
adc
ss
sub
mov
insl
int
data16
pop
cld
pop
adc
pop
pop
ds
rcll
jae
and
cmc
nop
and
inc
imul
dec
cmp
lock
xor
pop
rcrl
jmp
dec
xor
out
or
cmp
in
inc
jle
sub
repnz
addb
push
insl
xor
int
repz
jnp
fsubs
ja
pop
imul
inc
add
cmc
test
shrl
iret
lret
lret
outsb
add
mov
movsl
and
es
int3
adcl
xchg
fimuls
mov
cltd
inc
out
dec
push
add
dec
and
movsl
add
hlt
inc
mov
jl
push
stos
mov
push
cmp
xor
mov
sbb
and
jmp
jecxz
mov
test
ret
cmc
jmp
xor
xchg
es
push
pop
cs
add
xlat
hlt
mov
mov
movsb
sbb
subb
xchg
filds
and
cs
je
ljmp
les
add
fsqrt
mov
jns
sbbl
fisubrl
mov
daa
test
push
lahf
cmp
jne
in
xor
sarl
fildll
mov
xor
xor
jb
fadds
jne
das
add
and
out
push
scas
mov
movsb
mov
push
mov
scas
ret
mov
inc
cmp
movsb
stc
pusha
or
fistpll
js
add
mov
fs
ret
jno
mov
mov
fcmovnu
sbb
dec
pop
lret
push
sbb
or
jmp
out
jbe
out
xchg
icebp
push
movsl
clc
es
add
mov
pusha
hlt
popa
idivl
bound
mov
aad
mov
sti
and
jl
in
adc
inc
insb
call
pop
push
xlat
sbb
add
adc
inc
jl
push
hlt
push
fsubr
mov
sti
stos
sub
add
xchg
or
rol
inc
mov
roll
add
in
lret
pop
jno
ficoms
xor
mov
imul
jae
xchg
in
sub
aaa
jle
inc
push
xchg
and
in
cmpsb
pop
fmuls
ret
aad
aaa
test
jne
cmp
xchg
lea
dec
xor
jmp
xchg
adc
enter
mov
sbb
idivl
imul
sahf
mov
cmc
dec
cmp
and
test
pop
cltd
adc
mov
sahf
xor
insb
mov
cmpb
and
pop
fmul
lcall
jp
fmul
cmp
jbe
mov
cmp
loopne
mov
sarl
pusha
nop
or
or
hlt
push
pop
pusha
push
mov
in
das
xor
xorb
xor
cld
pushf
pop
data16
jp,pn
addl
int3
test
mov
or
sbb
lcall
iret
mov
stos
arpl
mov
mov
mov
into
mov
dec
jg
push
xor
mov
test
push
scas
add
cmp
loop
imul
cmp
add
mov
lcall
lea
stos
jp
xlat
js
xlat
aam
mov
mov
inc
test
les
and
inc
jecxz
fwait
jge
pusha
shrb
inc
sarb
add
pop
push
je
jge
and
call
jmp
xchg
stos
pop
gs
in
jbe
and
xor
mov
sub
push
pushf
popf
push
or
stos
mov
ret
sbb
sub
decb
movsb
popa
xchg
sbbb
cs
lods
cmp
xlat
imul
pop
into
sbb
xor
popa
fwait
out
adc
xor
push
mov
mov
into
in
dec
jo
iret
or
or
test
push
adc
cmpb
pop
test
ss
push
xchg
repz
pop
xor
push
xchg
cli
stc
sbb
divl
mov
lds
call
cmp
inc
aaa
idivb
jp
out
sub
ret
jbe
iret
in
jg
insb
add
icebp
mov
dec
data16
mov
orb
mov
ret
inc
add
mov
leave
out
lods
add
sahf
push
cld
jo
xor
xlat
jae
daa
insb
out
ljmp
test
or
shr
mov
movsl
sub
pusha
or
outsl
or
dec
mov
sbb
jle
ja
inc
out
adc
fnstenv
add
xchg
push
ss
ficompl
or
out
or
sahf
cmpb
arpl
xorl
daa
cmp
fidivrl
add
out
daa
sbb
fiadds
sahf
lock
mov
push
inc
jno
sub
shrb
insl
outsl
cli
sub
aaa
dec
test
push
daa
int3
movsl
lret
repnz
out
ljmp
jae
xor
pop
inc
ja
jae
adc
outsl
add
adc
mov
cs
bnd
jmp
dec
or
push
push
imul
jle
cmp
decb
ret
rorb
testb
mov
sub
xor
cld
jecxz
mov
add
sarb
clc
or
jbe
outsl
adc
ret
out
cmp
insb
jecxz
dec
xchg
adc
call
shll
dec
dec
shl
add
rclb
out
mov
sub
ret
testl
adc
or
adc
movsb
jbe
xor
dec
mov
dec
cwtl
adc
mov
inc
sub
inc
stos
cmp
add
mov
jns
mov
nop
cmpb
xor
test
push
shl
data16
and
pop
jle
inc
inc
mov
lea
popl
faddl
loop
xlat
jl
mov
pop
lods
gs
inc
xor
dec
xorb
cmp
xchg
xor
stos
push
mov
mov
xchg
dec
xchg
cmc
push
addr16
cld
add
in
jp
in
pop
push
mov
sbb
sbb
xchg
inc
sub
dec
imul
fdivr
push
pop
mov
inc
jecxz
sbb
ficoml
stos
aaa
mov
sti
push
sbb
cmp
ljmp
ljmp
mov
rcrl
pop
push
shrl
lret
cli
cli
pop
subb
cmc
and
movsl
or
inc
stos
rorb
inc
cltd
shll
addr16
and
inc
add
mov
xchg
fcoml
iret
xchg
enter
rcll
pop
mov
push
cmc
outsl
mov
scas
inc
fstpt
bound
stos
pop
test
aas
mov
cli
mov
les
xchg
sbb
std
mov
cld
adcb
iret
adc
sarb
stos
repnz
pusha
loope
aam
push
in
pop
pop
push
insb
add
dec
cmp
negb
in
or
inc
pop
test
fs
inc
fcmovne
dec
mov
and
scas
cmp
outsl
out
inc
je
pusha
jo
and
push
leave
lret
popl
cmpsl
mov
and
popa
dec
jb
aam
test
inc
dec
fisubrl
and
and
iret
dec
cmp
dec
mov
or
clc
cmc
add
mov
decb
lods
cld
fstp
jp
test
incl
add
lods
jp
mov
mov
mov
jle
jp
mov
xor
es
mov
dec
mov
mov
push
rorl
scas
mov
incb
mov
loop
sbb
jge
pop
jl
mov
enter
xchg
dec
rcrb
hlt
xor
int
and
lea
movsb
push
stos
lea
je
jmp
mov
div
dec
pushf
rcrl
mov
cmp
jl
rcrl
jb
pop
rcr
in
rcrb
cmp
jge
cmp
fcmovu
or
xchg
sbb
and
mov
pop
mov
jb
pushf
std
mov
and
sti
repnz
mov
pop
or
mov
mov
sub
cmp
call
rcr
dec
xchg
pop
pop
sub
cmp
xchg
lea
dec
cmp
ret
xchg
cwtl
sub
insl
xor
lock
xchg
mov
ret
orl
jo
add
pop
mov
and
adc
test
fisubrs
or
clc
out
or
aad
xchg
test
mov
dec
sub
sub
sub
fsubs
fwait
inc
inc
jmp
mov
sbb
repnz
mul
cmp
push
ds
nop
sub
in
jns
int
xor
popl
dec
fistl
pop
xlat
xchg
pop
test
adc
ds
lahf
scas
push
push
add
shrl
pop
add
aaa
mov
sub
push
mov
mov
mov
repnz
jecxz
adc
adc
push
inc
inc
and
testl
xchg
push
and
inc
and
jne
cmpsl
mov
ljmp
into
inc
in
mov
loope
add
and
mov
jp
pop
mov
sahf
push
jecxz
jns
gs
inc
or
insl
inc
fists
out
pusha
xor
push
xor
enter
xchg
in
or
xchg
sti
test
and
repnz
movsl
jnp
dec
into
mov
out
arpl
mov
stc
mov
cmpsb
jg
lock
sbb
inc
ljmp
xor
push
inc
cmp
jb
adc
sahf
or
xchg
gs
pusha
andb
push
dec
xchg
stos
xor
jno
mov
and
in
fstpt
dec
repnz
rorl
mov
pop
add
ficomps
es
dec
add
pop
pop
mov
pop
cld
mov
outsl
add
in
jae
sbb
bnd
lods
lea
into
jnp
jg
fwait
mov
fistpl
pop
or
fwait
lds
push
mov
punpckhwd
ffreep
pop
jl
scas
sbb
lret
mov
fcmovnbe
lret
jnp
sbb
push
or
ja
aam
pop
xchg
lcall
ss
xchg
test
lods
js
mov
mov
lret
xchg
loope
push
xor
xor
or
insl
and
addr16
repz
and
xor
mov
mov
cmpsl
mov
outsl
xchg
sub
bound
lods
stc
add
jbe
arpl
loop
rorb
inc
call
pop
aad
js
filds
outsl
lods
cwtl
fstps
push
lock
enter
xchg
mov
enter
lret
mov
pop
loope
les
incl
adc
fucomp
stos
inc
add
scas
add
push
push
inc
mov
mov
outsb
jo
pop
das
xlat
or
xchg
jo
inc
xor
sub
xlat
arpl
pop
js
sahf
mov
test
adc
mov
lock
pushf
stos
xor
fs
rolb
cltd
mov
ret
xor
sti
jmp
mov
and
adc
cmpsb
mov
gs
lods
cld
xor
or
push
aad
pop
xor
xlat
lock
fadds
mov
mov
sub
fwait
loopne
jb
pop
push
jbe
add
gs
and
lods
roll
test
ds
mov
jmp
mov
stc
lret
ljmp
lahf
out
inc
cmp
aaa
pop
mov
jg
and
aas
mov
mov
je
popf
pop
lea
stos
pop
ja
xorb
inc
jne
pop
jecxz
jae
pop
int3
scas
lldt
and
pop
cwtl
lods
or
clc
xchg
lods
rorl
xor
dec
fwait
or
loop
mov
test
insl
and
jge
mov
addr16
lods
sub
mov
push
or
xor
dec
enter
iret
mov
xchg
xor
add
lret
or
add
lea
loopne
dec
stos
xorl
add
inc
jl
or
mov
dec
add
icebp
pop
icebp
cmp
or
sbb
push
mov
dec
test
add
movsb
mov
push
int3
mov
pop
or
pop
movb
jbe
test
jb
sub
ja
jmp
pop
mov
sbb
lcall
fsubs
sub
cmp
mov
and
fisubl
and
dec
mov
inc
cmp
outsb
jmp
adc
test
sub
jle
mov
scas
add
xchg
andl
imul
xchg
mov
add
cmp
cmp
andl
lret
push
addb
pop
mov
ret
mov
dec
repz
dec
aaa
ljmp
pop
push
or
add
xchg
push
pop
nop
sub
xor
nop
lods
xchg
dec
mov
xor
sub
cmp
mov
and
scas
out
and
aam
in
mov
js
stc
jbe
loope
sbb
adc
mov
pop
mul
pop
shll
shll
iret
cltd
fsubp
nop
inc
adc
popa
rol
sti
xchg
dec
mov
in
jmp
sub
sbb
inc
or
xlat
cli
adc
pop
mov
nop
fmuls
stos
jae
cmp
cmp
and
jp
sub
pusha
jge
test
sub
das
or
ljmp
adc
aad
in
fisubrs
cmp
mov
movsb
aad
lahf
pop
mov
adc
cmp
lods
call
cmp
mov
mov
out
es
push
pop
adc
inc
sbb
or
or
cs
pusha
lahf
fcmovnu
dec
mov
mov
imul
sub
ds
jp
std
jbe
aas
clc
js
lahf
in
adc
xor
fimull
in
mov
pushf
shrb
outsb
sbb
popl
inc
popa
jg
xlat
imul
dec
cmp
jge
or
jmp
mov
call
pop
dec
or
call
mov
and
aam
push
and
pop
test
cltd
stos
and
cltd
stos
fidivl
jge
inc
xchg
dec
jns
jp
pop
lahf
adc
jecxz
adc
or
lret
fcoml
jl
mov
pushf
mov
mov
orl
xchg
mov
test
in
insb
fstpl
mov
outsl
mov
lahf
mov
cltd
test
push
jne
xor
bnd
xor
mov
ret
jns
sarb
jbe
xchg
fldenv
mov
dec
dec
inc
mov
lahf
or
lea
dec
jmp
stc
pop
mov
cwtl
out
daa
mov
aaa
push
push
cmc
dec
ss
sub
push
mov
stos
jp
gs
jne
mov
call
aad
fcom
sub
data16
jge
sub
jmp
into
mull
push
push
pmovmskb
je
lock
andl
jge
aam
dec
jmp
dec
mov
pop
inc
iret
sbb
and
push
mull
cld
loopne
test
xor
gs
jp
and
mov
adc
and
out
fbstp
xchg
jnp
mov
add
dec
mov
fsts
or
ficomps
push
dec
cmp
or
mov
push
es
push
dec
cmp
mov
mov
int3
mov
add
ss
lret
or
add
sti
stos
mov
adc
out
leave
xor
xor
pop
rolb
add
sbb
pop
inc
mov
jns
ret
shlb
sbb
scas
inc
je
arpl
xor
mov
es
inc
ss
dec
jmp
cwtl
stc
jge
xchg
enter
mov
ljmp
call
out
aaa
mov
dec
out
in
ret
test
loopne
pop
shlb
push
outsb
inc
push
fadds
test
push
pop
push
cmp
out
and
cli
mov
push
and
mov
push
fcomps
ds
xchg
std
jb
fisubrs
inc
cmp
pop
div
loop
pop
fisttpl
fbld
test
jmp
test
or
sub
loop
clc
pop
push
or
mov
imul
cltd
test
add
dec
repz
cmc
scas
repz
jno
push
int3
pop
fldenv
arpl
pusha
gs
add
sub
sbb
cmpsb
jl
subb
fdiv
stos
jmp
and
aaa
inc
pusha
or
mov
loope
or
insl
adc
push
lods
fcompl
mov
das
and
cmp
loop
inc
fistpll
scas
fiadds
xor
cmp
subb
fcmovbe
adc
pop
and
bound
xchg
mov
lock
repz
cld
lock
out
push
sub
mov
push
fsts
cld
sbb
jo
sbb
in
arpl
pop
cli
pop
lods
cmp
cmp
adc
js
add
inc
pop
mov
aaa
push
testl
xchg
stos
and
pop
cmc
loop
jle
roll
andl
sbb
int3
push
outsb
adc
cld
pop
insl
popa
sub
cmpsl
imull
stc
jae
setnp
into
rcll
into
call
add
mov
xchg
mov
xchg
adc
ret
xor
pop
xchg
roll
jbe
push
and
fcoms
adc
sbb
imul
shlb
dec
cmp
scas
mov
out
pop
lods
call
aad
push
mov
or
pop
xchg
stc
pop
xchg
jp
je
push
pop
cmp
fs
cmc
loope
lahf
pop
mov
dec
dec
mov
sbb
loopne
flds
outsl
loopne
inc
daa
adc
in
in
imul
std
cli
xor
ljmp
fstpl
leave
popf
jnp
inc
push
mov
iret
rol
jp
jne
addr16
sbb
sar
outsb
cs
cmpb
mov
mov
jg
pushf
call
ss
pop
xchg
xor
jmp
adc
mov
fimuls
out
fcomps
es
iret
lock
movb
mov
ds
dec
add
inc
fsub
sub
lahf
xchg
pop
xchg
xchg
movsl
pop
cmp
hlt
int
stos
or
pop
in
mov
imul
pop
xchg
outsw
pop
mov
cltd
mov
lods
repz
jmp
addl
arpl
pop
cmp
loopne
cmp
push
jmp
mov
std
shll
loop
push
int
arpl
pop
push
fldenv
mov
mov
es
mov
sub
sbb
jbe
sub
rorb
push
imul
mov
aad
add
outsl
xchg
clc
out
mov
lret
das
fisttpl
xor
rcr
aam
rcr
jl
call
popf
lea
sbb
aaa
cmc
iret
int
inc
arpl
movsb
sbb
pushf
shl
fisubl
mov
push
out
je
movsb
repz
movl
inc
xor
mov
jmp
mov
pop
add
repz
jno
xchg
std
cmpsl
xor
insb
fs
adc
les
mov
std
fsubs
xchg
repz
pop
inc
jno
test
jo
loope
dec
shlb
test
xlat
loopne
fildl
lret
pop
aaa
mov
ljmp
into
pop
inc
xchg
sub
cmp
shrl
or
fistpl
stc
mov
cmpsl
mov
and
out
in
dec
fstl
cltd
pop
insl
fsubrl
cld
push
shll
mov
jmp
mov
cwtl
outsl
aad
imul
fistps
jmp
out
loop
shlb
test
or
jns
mov
jl
ljmp
mov
adc
mov
pop
mov
in
leave
fsubs
shl
bound
outsl
fistpl
test
jecxz
and
pop
xor
lret
jp
jno
lret
fnsave
sbb
inc
mov
loop
aaa
push
jb
add
mov
stos
int
scas
mov
cs
loopne
fdivl
test
add
fstpt
mov
hlt
and
or
ss
pushf
xor
cltd
lds
mov
stc
mov
mov
leave
iret
and
jg
mov
pusha
dec
fldenv
or
mov
or
inc
scas
xchg
hlt
popa
shlb
outsl
push
or
popl
das
cmp
xor
mov
xchg
aad
mov
inc
ss
jmp
std
jo
cmp
into
mov
mov
aas
push
push
imul
add
xchg
lds
das
sbb
mov
or
or
out
pop
lods
lock
cld
or
xchg
out
es
pusha
sub
pop
mov
outsl
xchg
inc
mov
pop
or
mov
ret
jne
lock
add
xchg
sub
jae
ret
mov
fisubrl
dec
push
test
fisubs
add
inc
cmc
stos
or
jecxz
push
stos
adc
pop
test
inc
ss
insb
and
ficompl
fmul
push
push
jg
fimuls
icebp
add
pop
inc
jp
cmp
and
xchg
mov
cmp
pop
push
ljmp
flds
and
dec
inc
aad
cmp
cmpl
ds
ret
or
push
lock
jge
icebp
pop
and
rcl
sub
mov
cmp
adc
test
movsb
push
test
rcrb
jmp
cmpsb
xchg
mov
aam
cld
adc
shlb
ret
sbb
in
xchg
sbb
mov
cmpsl
js
mov
xor
cmp
or
test
dec
adc
push
pushf
adc
mov
clc
popa
sbb
rcrl
fisubs
setge
adc
testl
push
push
addb
mov
adc
add
aad
mov
cmpsl
xchg
xchg
sub
fwait
push
pop
cli
fcompl
mov
sub
xchg
xchg
pmaxsw
repnz
scas
fdiv
dec
cmp
sub
out
pop
pop
jbe
push
divb
lock
out
cmpsb
lock
das
xor
outsb
dec
xor
mov
mov
repz
cmp
enter
cmp
clc
outsb
mov
aas
sbb
repnz
and
imul
imul
jb
xor
xchg
aaa
mov
dec
or
mov
pop
loope
pusha
mov
xchg
es
pop
leave
shlb
inc
pushf
scas
jge
scas
clc
mov
xchg
les
xor
ss
das
mov
mov
cmp
and
mov
mov
xlat
call
push
imul
xchg
pusha
and
cmp
add
push
jp
jb
xor
enter
fildll
push
das
pop
adcl
clc
add
rorl
add
cmp
lret
cmpsl
inc
cs
inc
js
iret
cmp
xor
cmpsb
sub
int
lods
rcrl
pop
cmp
inc
ret
mov
test
jecxz
push
cld
or
lret
test
movsb
xor
out
icebp
mov
cmc
push
pop
add
flds
pop
xor
xchg
push
lret
dec
into
xchg
xlat
call
mov
aad
sub
add
aam
pop
lret
mov
push
fstpl
stos
adc
and
jb
lea
pop
insl
lock
test
daa
std
jae
enter
dec
and
ds
jmp
hlt
pop
adc
bound
lods
or
inc
xchg
dec
push
loopne
repz
sti
out
mov
adc
jg
insl
mov
push
nop
cmp
jnp
xor
or
sub
lock
push
pusha
scas
scas
out
shll
xor
xlat
out
or
sub
xor
sbb
push
test
pop
jns
stc
lcall
pop
iret
out
std
push
ljmp
mov
mov
add
dec
push
sbb
xlat
push
clc
adc
xor
bound
cmp
sbbl
push
ljmp
mov
into
stos
addb
mov
orb
jg
fucomi
inc
adc
sbb
cmovbe
xor
dec
mov
add
adcb
dec
pop
test
jns
inc
mov
loop
dec
andb
js
push
mov
cmc
xorb
mov
popa
inc
fld
cltd
iret
lea
inc
fcmovnbe
pop
rolb
jne
je
in
cmp
pop
mov
inc
inc
sbb
data16
clc
rorb
xor
stc
frstor
sahf
or
imul
cmpsl
or
imul
hlt
jl
ficompl
dec
pop
or
jo
mov
adc
xorb
or
xchg
sbb
pop
mov
cmc
js
jb
xchg
jbe
mov
stc
push
xor
and
lock
mov
cmpsl
sahf
sbb
add
adc
mov
fdivrl
shr
mov
in
out
mov
add
adc
bound
cmp
cmc
ljmp
push
imul
lock
sahf
into
cltd
daa
mov
xor
xchg
ljmp
xchg
dec
mov
pop
jge
rclb
sahf
stc
sti
mov
pop
xorb
div
xor
or
fisubrs
push
mov
ror
jae
sbb
popa
sub
push
sub
add
lods
inc
push
jb
lock
and
xchg
aam
out
dec
sahf
fcomps
into
and
test
sar
lret
enter
xor
sub
ss
ficomps
mov
push
push
std
cld
sub
ret
mov
mov
add
shrb
sbb
pop
mov
mov
xor
push
and
xchg
repz
testl
aaa
sar
push
cltd
orb
mov
jl
jnp
pop
into
and
popa
pop
inc
mov
dec
adc
aad
push
jb
fsubrl
jg
add
add
lahf
cmc
pop
sub
cltd
daa
rcrl
pop
jo
int
mov
sbb
xor
jecxz
ret
daa
or
daa
icebp
leave
lods
push
mov
pop
insl
mov
daa
add
and
jnp
mov
stos
push
sbb
add
mov
add
jp
cmpb
mov
adc
mov
mov
pushf
outsl
cld
unpcklps
inc
out
push
dec
out
test
daa
into
mov
movb
les
jp
int
xor
int3
jnp
jbe
dec
icebp
adc
adc
mov
mov
testb
and
ret
ret
out
in
adc
fwait
cmp
cs
enter
mov
jne
xchg
and
xchg
sub
lds
xor
pop
inc
inc
lret
aas
sbb
sbb
adc
repz
call
lds
xchg
add
aad
add
frstpm(287
je
clc
loopne
les
stos
sbb
scas
lret
out
push
shr
int
jecxz
ljmp
cmc
cmp
fldenv
stos
inc
repz
sbb
adc
hlt
test
pop
inc
mov
pushf
add
mov
test
sbb
push
add
sbb
push
les
out
cmp
leave
xor
enter
push
in
fisttps
in
ss
aam
cmc
shl
scas
jne
mov
inc
divl
cmpsl
mov
mov
pushl
lods
mov
pop
mov
test
mov
jno
push
jmp
push
mov
inc
incb
cs
and
adc
rcrl
dec
mov
dec
mov
stos
push
pop
mov
sub
xchg
push
call
aaa
repz
sbb
sahf
fisttpl
cltd
mov
cmp
push
xchg
subl
testl
scas
lods
hlt
mov
rorb
dec
adc
test
and
dec
add
pop
orb
pusha
sub
popa
ds
adc
lods
push
in
sbb
add
in
or
push
xchg
dec
fwait
sbb
xor
push
adc
data16
jae
mov
std
out
fildl
mov
inc
xchg
add
and
ret
inc
inc
sbb
or
lods
mov
scas
cmp
adc
jmp
pop
or
iret
jae
xor
pop
fsub
sub
jp
mov
aas
xchg
jbe
movsl
xchg
dec
rolb
fdivrl
addr16
in
lahf
std
imul
jmp
lods
movsb
or
jmp
or
shrl
cmp
imul
xchg
mov
shl
xchg
sbb
add
dec
pop
fstpl
and
clc
sub
and
push
cld
jl
jnp
imul
cltd
sahf
sbbb
fists
loope
xor
or
adc
shr
or
aad
rcr
je
loop
scas
js
inc
xchg
push
in
adc
cmp
or
sbb
jo
lods
jb
int3
fisttps
dec
xor
jp
insl
cmp
gs
iret
mov
inc
gs
jg
idivl
dec
or
xchg
xchg
xchg
sbb
pop
pop
mov
out
push
push
pop
popa
stos
test
mov
sbb
lret
xor
mov
aas
cmp
mov
mov
sub
dec
mov
push
ljmp
fcoms
lahf
pop
mov
xchg
add
push
shlb
adc
stos
icebp
dec
cs
and
out
stos
fildl
jp
negl
fidivl
arpl
cwtl
xchg
cwtl
add
stos
cmpsb
mov
xorb
hlt
mov
fwait
in
aaa
stos
fisubl
mov
leave
and
loopne
xor
leave
scas
call
cmc
jecxz
sti
jge
and
jecxz
lret
sti
pop
fldenv
mov
jecxz
pushf
mov
loopne
xor
daa
adc
ss
xchg
xchg
inc
pop
sbb
add
sbb
stos
scas
arpl
aaa
xor
lea
mov
sbb
and
jle
jae
mov
mov
inc
roll
iret
sub
inc
inc
xor
add
mov
push
cwtl
xchg
test
das
cld
dec
cwtl
or
sub
mov
jge
jmp
mov
std
int
mov
ljmp
cs
or
inc
in
cmp
negl
push
loop
mov
test
cmp
jnp
repnz
movsl
fildl
pop
add
dec
jge
xor
outsl
aam
sub
push
shll
xor
inc
loope
jns
ret
sub
insl
jecxz
notb
or
in
std
inc
add
std
jne
mov
push
fcmovnbe
insb
mov
test
inc
sahf
sub
shll
inc
test
mov
dec
dec
mov
lock
bound
xor
fbld
cmc
pop
mov
dec
lret
cmp
jbe
cwtl
mov
mov
jnp
leave
sbb
sub
es
shll
stos
pop
data16
or
rolb
negl
arpl
and
rcll
inc
lea
mov
les
dec
dec
das
insl
sbb
js
jae
sbb
xchg
mov
in
adc
testb
inc
pop
mov
mov
xchg
testl
fs
jno
cs
mov
add
dec
sbb
adc
repnz
das
insb
inc
int3
adc
ret
jmp
scas
add
push
test
jo
es
fnstsw
in
fwait
pop
movsl
pop
adc
xchg
popl
test
mov
iret
aaa
ret
outsb
imul
xor
inc
jns
add
sub
sbb
cmpsl
fisubrl
push
adc
subl
mov
aad
mov
fimull
dec
xchg
scas
dec
jnp
aaa
icebp
insb
or
aam
out
enter
add
lret
push
lock
std
into
mov
cld
mov
xchg
jle
popa
jg
add
add
or
rcrl
mov
mov
frstor
jecxz
ds
mov
imul
cmp
mov
xor
mov
stos
xchg
xor
das
loop
cltd
arpl
movsb
rolb
mov
aad
ja
and
or
dec
cmp
mov
xor
insl
mov
scas
fwait
aaa
cs
das
inc
dec
insb
mov
orl
mov
mov
cmpsl
push
pop
cmp
jecxz
inc
pusha
xchg
repz
cld
dec
imul
add
enter
inc
bound
dec
jle
movsb
push
mov
or
int3
mov
cld
lods
inc
mov
fsubr
test
add
in
inc
lcall
or
pop
adc
lds
push
or
cmp
mov
pusha
in
cmp
sbb
roll
lock
cli
and
inc
lcall
test
inc
jo
rcr
ds
gs
cmp
test
jne
jp
dec
and
loope
and
test
mov
mov
or
jo
and
sub
bound
push
mov
fidivs
in
xchg
out
mov
and
inc
fisttps
add
stos
or
add
pop
sub
mov
aas
inc
lods
jb
pop
leave
fidivrs
mov
ss
mov
repz
out
movsb
cli
mov
sti
lds
mov
jae
or
mov
push
jecxz
dec
xor
ss
sbb
pusha
dec
mov
iret
iret
out
in
push
aam
push
out
sub
xchg
mov
cli
jns
sar
shrb
pop
push
mov
pop
mov
push
jg
push
jbe
mov
sbb
mov
jb
pusha
mov
add
repnz
xchg
mov
xchg
mov
adc
dec
out
repz
fistl
std
fwait
cmp
or
xor
negb
mov
mov
rorb
adc
enter
dec
leave
cmp
sub
out
popa
gs
inc
push
adc
push
xchg
dec
imul
rolb
movsb
jbe
pop
cmp
in
xor
outsl
inc
and
daa
sti
mov
cmp
sub
push
scas
jnp
into
xchg
bound
lret
pop
mov
jmp
fbld
out
cmpsb
jecxz
cli
insl
hlt
jp
insl
push
and
ja
cmpsl
mov
iret
adc
push
outsb
mov
ljmp
leave
lret
andb
in
sti
insl
mov
test
xchg
cmp
cmc
adc
fcmovnu
lods
dec
insl
les
pop
jns
insl
cmp
or
cli
pusha
das
aas
mov
in
loopne
dec
or
pop
int
aaa
xchg
mov
xchg
popl
push
inc
add
lahf
iret
arpl
sub
mov
adc
rcrb
push
data16
lds
outsb
push
push
addr16
orb
mov
and
mov
arpl
adc
in
popf
push
or
dec
cmp
imul
test
clc
mov
mov
xor
repz
loopne
ret
outsb
push
adc
mov
jno
es
outsb
enter
addl
mov
lcall
jne
movsb
lcall
rcrb
test
ret
sub
sti
sbb
cmpsb
inc
sub
jb
lret
adc
andb
jge
push
test
stos
lahf
xchg
int3
sti
repnz
or
mov
bound
in
add
xchg
jecxz
repnz
ret
sbb
je
mov
or
adc
xchg
repz
mov
clc
imul
mov
ret
pusha
jge
pushf
add
push
js
mov
outsl
das
cli
or
add
add
push
jns
sub
pop
icebp
push
jb
fisttps
mov
pop
push
mov
push
les
loopne
hlt
inc
shrb
shlb
sahf
out
mov
xchg
fwait
insl
shll
ret
dec
icebp
repnz
jns
dec
xchg
lds
push
cld
xchg
in
sub
inc
ret
test
les
pusha
loopne
arpl
lds
push
fimull
out
lret
dec
mov
add
sahf
in
or
xlat
add
pop
add
data16
push
sbb
js
jns
cmp
ljmp
fcmove
pop
and
roll
cmp
and
and
fdivr
test
xchg
inc
push
dec
xchg
mov
mov
xchg
stos
fsubl
jle
sub
gs
imul
xchg
out
sbb
mov
je,pt
add
xchg
push
mov
dec
lods
pusha
jnp
mov
mov
addr16
xlat
sbb
cmp
arpl
lods
outsl
sbb
adc
jbe
push
into
xor
nop
dec
push
mov
fdivrl
xchg
stos
jecxz
adc
sub
dec
fdivl
lods
add
andl
test
cli
lcall
jecxz
std
or
enter
adc
mov
rorl
xchg
int3
gs
xchg
das
xor
lods
xchg
flds
mov
dec
ror
sub
adc
in
push
test
roll
jbe
xchg
sub
push
xchg
lret
push
push
jno
sub
cmp
sub
pop
push
mov
adc
or
cltd
mov
mov
int
jne
loopne
add
mov
ds
daa
lock
xor
mov
cmp
rcr
out
ficomps
inc
dec
cmp
fdiv
je
popf
and
sar
dec
popf
fistpl
add
xchg
fcoml
push
mov
loope
aaa
push
push
adc
je
sub
in
fstpl
dec
je
mov
and
repz
or
dec
cmp
dec
adc
or
jne
mov
and
adc
fmul
and
push
mov
addb
jp
dec
mul
pop
ror
mov
into
push
loope
adc
ficoms
xor
enter
ds
les
pop
mov
js
inc
sub
popf
xchg
ds
lea
mov
aas
out
fisubs
lcall
mov
ds
fcoms
enter
pop
and
add
call
xlat
popf
push
add
inc
push
jmp
add
orb
scas
cltd
cmc
ficoms
mov
sub
xchg
iret
or
es
mov
add
mov
sahf
fxch
imul
pop
and
inc
insl
cmp
mov
in
pusha
shrl
jle
icebp
adc
into
or
mov
xchg
adc
dec
in
cli
push
push
mov
dec
sti
push
lods
mov
aam
dec
sub
ds
fadds
add
scas
leave
cmc
mov
mov
lock
or
movsl
inc
sbb
push
sub
or
scas
pop
xor
inc
mov
dec
sbb
clc
movsl
sarl
cld
aas
sbb
xchg
jo
popf
inc
xchg
sbb
leave
sbb
add
stos
faddp
cmpsb
lods
sbb
leave
sarl
add
icebp
loope
dec
arpl
push
ss
ret
pop
cs
cmpsb
inc
mov
inc
negl
cli
inc
imul
shr
andl
adc
adc
adc
pusha
pop
jle
repnz
xor
fdivrl
add
sbb
and
jg
scas
or
movsb
repz
test
cmpl
in
in
pop
imul
repz
xchg
mov
ds
inc
daa
jg
push
aaa
pop
test
clc
cli
jo
cld
loopne
sub
out
and
std
xchg
bound
aad
mov
dec
rcrb
movsb
or
dec
mov
mov
cs
aad
xor
mov
adc
xchg
data16
lahf
or
push
pop
fiadds
pop
scas
in
mov
cmp
repnz
dec
pop
or
idivb
cmp
push
mov
pop
adc
push
shl
jno
xchg
pop
cli
sarl
mov
rcrl
rcrl
cmpsl
adc
add
xor
enter
aaa
mov
aam
loope
sub
sbb
sub
ret
sbb
mov
std
sti
jbe
pop
xchg
sarb
xchg
or
pop
stos
ret
shll
cmp
push
push
push
xchg
stos
int
jo
pop
enter
xchg
shlb
inc
adc
int3
mov
xchg
stos
fidivs
mov
lret
aas
test
in
inc
dec
adc
xchg
and
dec
jno
mov
inc
add
xchg
cmpsl
xor
mov
cmp
inc
sarl
ss
pushf
fs
jge
mov
out
mov
fstl
xlat
add
mov
fsubrl
push
push
dec
lds
push
xor
mov
pop
sbb
loopne
push
aas
push
fidivrl
test
jne
jne
xchg
push
push
movb
insb
das
dec
lea
add
mov
insl
cmp
add
lcall
mov
and
add
jb
dec
sub
push
dec
push
inc
fwait
push
inc
lock
jb
leave
insb
dec
inc
push
andl
sbb
mov
xchg
in
fsts
ja
fst
dec
pop
pop
xchg
push
jg
mov
mov
mov
mov
jae
xorb
addr16
adc
mov
jmp
jecxz
pop
js
push
cmp
out
xor
sti
fisttpll
rcr
into
jp
in
pop
ljmp
jne
dec
mov
pop
int
fbld
mov
lea
jecxz
push
cltd
rorl
push
cmpsl
insl
loope
dec
fwait
jb
lahf
xchg
repnz
leave
std
mov
mov
dec
jne
push
push
dec
lods
mov
cwtl
call
xchg
jmp
mov
xchg
mov
aad
scas
mov
push
xchg
jns
xchg
jo
ja
inc
inc
repz
pop
lods
shlb
lds
loop
fidivl
or
mov
adc
fwait
je
lret
aaa
mov
cmpsl
in
or
mov
mov
test
lret
adc
fidivs
jp
xchg
push
jp
stos
movsl
arpl
nop
nop
popa
jbe
inc
fisubl
adc
lea
fdivrl
cli
or
inc
dec
insb
xchg
in
or
mov
push
and
inc
adc
add
imul
insl
sbb
pop
push
cmp
movsb
lcall
lea
add
add
or
fstpl
das
gs
leave
xlat
lods
push
push
sub
imul
ds
or
jge,pt
jnp
ss
push
xchg
sbb
mov
pop
mov
sbb
jbe
push
pop
dec
pop
repnz
jbe
sub
cmp
mov
add
xor
adc
or
ljmp
rcrl
sub
add
loop
mov
pop
sub
pop
mov
xchg
xor
les
inc
xor
add
ss
addr16
xchg
aas
imul
into
inc
test
aas
jle
rorb
test
push
add
ret
mov
lods
into
test
orb
pop
mov
lea
pop
pop
cmpsl
sbb
cmp
insl
lds
out
xchg
mov
push
lds
cmp
lods
hlt
testb
fcmovu
ret
fistpl
fs
add
xchg
jle
mov
xchg
mov
mov
lcall
out
in
clc
fistpl
adcl
dec
push
cs
lea
adc
mov
mov
movsl
lds
js
mov
ljmp
mov
pop
fwait
enter
dec
dec
mov
shlb
int
xchg
dec
dec
jae
andb
repnz
notb
adc
mov
popa
add
into
jo
xor
pop
fildll
insl
mov
test
adc
loop
sbb
jg
aam
movsb
pushf
sub
dec
mov
xchg
inc
int3
xor
dec
repz
pop
cmp
sahf
repnz
imul
mov
hlt
fwait
movsl
call
pop
fcmove
stos
mov
daa
lcall
loop
daa
inc
xor
sahf
mov
fisubl
lret
cmp
out
sub
or
fcoms
leave
pop
dec
mov
add
loop
cmpsb
push
add
repz
movb
insb
cwtl
cmp
pushf
mov
adcb
push
adc
hlt
dec
rolb
add
lea
in
xchg
mov
out
and
adc
dec
xor
je
imul
movsl
xor
fwait
or
cmp
enter
jbe
inc
adcb
pop
jnp
push
pop
lods
ficoms
call
ljmp
cmc
cmp
jne
mov
pop
lret
int
push
es
cmc
test
fiadds
int3
jp
inc
dec
push
push
xorl
inc
mov
stc
dec
push
push
inc
cmp
mov
int3
das
out
xor
push
mov
pop
pop
data16
add
sti
loope
fisubs
pop
jne
pop
mov
cmp
sub
rorl
mov
pop
lods
xchg
scas
lods
pop
cld
or
stos
push
outsl
jns
addr16
inc
and
xor
or
in
add
pusha
lahf
stos
mov
call
sub
loope
aas
stc
adc
mov
ret
pop
scas
subb
loope
and
adc
xchg
inc
push
jno
lcall
dec
outsb
sbb
xchg
sahf
and
mov
loopne
es
mov
mov
adc
sbb
xchg
loopne
clc
mov
or
movsb
or
jno
sbb
inc
std
jle
add
ljmp
stc
mov
call
mov
aam
inc
jmp
sarb
mov
jbe
repz
ljmp
loop
cli
sbb
mov
sbb
pop
dec
shlb
pop
sub
into
shrl
iret
sbb
and
pushf
mov
pop
lret
imul
popf
mov
loope
nop
shrl
andb
and
aaa
in
sub
cmp
inc
and
cmp
fprem1
mov
dec
and
mov
inc
adc
mov
jbe,pt
jg
aas
push
and
cmp
clc
dec
filds
sbb
push
mov
lods
enter
cmp
insb
arpl
add
inc
sub
jnp
enter
and
loopne
mov
sbb
fwait
inc
cwtl
in
pop
mov
jno
xchg
test
mov
scas
dec
rorb
xchg
xlat
push
inc
push
addl
loope
das
daa
mov
aaa
mov
gs
cmpsb
ret
outsb
out
add
sti
add
push
movsb
jp
cmp
mov
rcr
pop
mov
or
call
mov
dec
cwtl
stos
lcall
pop
jp
push
ss
xchg
add
push
add
mov
jb
subb
jns
lret
int3
scas
jp
xlat
stc
sahf
pop
inc
data16
xor
jb
scas
out
pop
dec
dec
in
jnp
lods
inc
adc
mov
and
mov
aad
stos
xchg
pop
es
ja
inc
fwait
dec
test
das
mov
mov
jp
out
add
leave
scas
mov
shll
sarl
xchg
sti
jge,pn
scas
xor
push
sub
xlat
push
int
les
stos
pop
movsb
ja
pop
lcall
pop
xchg
mov
movsb
test
add
aas
out
sbb
xchg
push
adc
add
stc
and
icebp
xor
xor
popf
and
push
pop
sbb
lahf
push
sub
xchg
mov
sub
jbe
mov
dec
add
jno
dec
or
jo
cmp
cmp
mov
inc
ret
fs
sbb
lcall
fwait
aas
mov
mov
inc
inc
not
or
sub
sub
inc
cmpb
cmp
push
jecxz
cmp
jnp
shlb
hlt
shlb
shrl
mov
push
pop
mov
cmp
jae
inc
ljmp
stos
xchg
icebp
aaa
xchg
and
bound
out
mov
adc
arpl
in
adc
push
movsl
push
repz
popa
or
stos
mov
cmp
cmc
dec
sahf
jne
je
adcb
sbb
xlat
rclb
xchg
rcrl
mov
andb
fcmovnb
int3
mov
sub
fcompl
mov
xchg
jle
mov
aad
fwait
sbb
cmpsb
add
or
xor
stc
addl
pop
fiadds
xor
popf
outsb
scas
out
push
mov
mov
xchg
sti
test
mov
xchg
cmp
das
les
adc
test
cmp
clc
mov
into
mov
pop
ret
mov
neg
jg
mov
mov
clc
xchg
lea
outsb
xchg
mov
cmp
out
lret
adc
movsl
cmpsb
pop
adc
popf
sub
jnp
notl
xor
sbb
inc
lahf
add
mov
lds
pop
outsb
mov
loopne
push
xlat
test
pop
cmp
and
add
mov
dec
mov
hlt
pop
les
lods
repz
cli
jnp
cltd
push
cmp
cld
mov
sbb
aad
mov
neg
nop
or
xchg
mov
mov
mov
and
inc
lea
ljmp
arpl
mov
sbb
pop
test
mov
xchg
cmp
lahf
push
adc
in
int3
fstpt
into
in
js,pt
sti
cmp
add
mulb
out
aas
in
sub
xor
xchg
insb
movsb
xchg
push
inc
sbb
xchg
outsl
xorl
stos
mov
movsl
mov
and
sahf
xchg
pusha
dec
imul
mov
dec
out
sub
imul
mov
dec
xchg
imulb
mov
or
xchg
mov
inc
arpl
ja
sbb
sbb
mov
out
mov
int3
push
lods
decb
mov
or
dec
dec
mov
inc
jo
xor
lret
mov
loopne
jg
mov
pop
aaa
dec
add
xchg
ja
inc
lock
fldl
loop
nop
test
mov
test
push
pop
inc
mov
sub
shll
xchg
in
fsub
repz
cmp
jle
int
add
mov
jo
add
sub
aaa
xor
dec
and
jle
sub
mov
mov
scas
adc
and
je
and
xchg
mov
pop
mov
orl
add
and
xchg
sbb
incl
lea
adc
repz
xor
fcmovbe
scas
popf
jnp
mov
into
cmpsl
call
jge
mov
iret
fbld
rol
jnp
mov
and
shlb
nop
fisubl
mov
cmp
lock
cld
mov
shll
sbb
and
xor
loopne
pop
out
mov
out
jle
nop
adc
add
ret
push
mov
adc
outsb
pop
rcll
cltd
les
fiadds
mov
les
jle
fdivl
shlb
jl
ret
jge
jmp
adc
call
cli
lcall
sbb
test
mov
pop
sti
jnp
int
rcll
or
sub
iret
icebp
mov
mov
adc
inc
shll
enter
inc
xor
nop
lcall
insb
fisubs
rcll
sbb
jp
cmp
fldt
dec
ljmp
and
dec
loopne
pop
push
call
test
bound
xorb
fcom
jge
insl
mov
pusha
push
decl
adc
push
jne
jno
in
sub
insl
xchg
adc
jecxz
cmp
mov
push
add
and
sbb
jnp
pop
sbb
aad
pusha
xchg
xlat
mov
inc
mov
loop
cwtl
push
mov
push
jb
fldt
push
mov
bound
xchg
push
jbe
pop
or
cmp
mov
add
push
clc
out
aaa
out
pop
pop
mov
mov
notl
mov
lds
sub
and
lock
jb
shl
fldcw
rcrl
mov
in
push
stc
dec
pop
adc
ficoml
or
xchg
pop
pop
mov
and
cmp
idiv
or
adc
ljmp
test
jne
in
sub
jns
aad
inc
mov
xor
cltd
pop
imul
outsl
sbb
mov
lods
push
jnp
push
sub
push
sub
lods
cmp
stc
sbb
jecxz
js
outsl
add
jge
lods
hlt
into
popa
lcall
and
call
sbb
call
jmp
popf
mov
repz
lret
push
xchg
fcomip
xor
mov
ja
push
mov
push
lods
sub
sbb
push
test
lahf
popf
sbb
mov
add
xchg
sub
push
sbb
bound
je
test
jp
adc
pop
pop
mov
int
push
sbb
mov
sbb
nop
dec
xor
jl
popf
cmp
or
sbb
fimuls
push
data16
fs
mov
push
mov
push
loope
rclb
imul
mov
and
hlt
pop
outsl
faddl
and
shlb
ret
pop
dec
xor
pop
pop
jge
add
jmp
jmp
or
dec
mov
jb
sub
push
dec
aas
popf
push
fstpt
lahf
sub
or
ja
rolb
lret
push
out
jge
repnz
or
aas
sub
sahf
push
test
ret
lret
movsl
and
insl
cmp
lds
sub
sarl
sub
mov
jl
xchg
sbb
xlat
sub
cmpsb
jb
daa
mov
stc
push
push
sbb
stos
inc
fistps
addr16
loopne
sbb
fldcw
ljmp
mov
sbb
dec
mov
lahf
jae
stos
shrb
dec
xchg
mov
out
stos
dec
popf
mov
jbe
fcoms
out
in
lods
imul
fisttpl
les
fidivs
pop
add
loopw
push
stos
sahf
lock
xor
add
stos
rclb
lea
and
cmpsl
clc
stos
push
sub
ficoms
and
xor
and
push
in
cld
push
sbb
cmp
lods
push
addr16
setns
pop
xchg
jae
addr16
pop
pop
pop
fisttpl
cltd
decl
inc
ljmp
iret
mov
sub
iret
and
dec
das
pushf
leave
push
outsl
ret
shlb
pop
xor
shl
mov
fidivrl
pop
rorl
xor
iret
add
enter
mov
popa
xchg
movsb
adc
lock
add
jae
lret
enter
cld
push
stc
sbbb
mov
cmp
jae
xchg
mov
clc
insl
xchg
xor
cmc
lds
stos
adc
je
add
jl
or
add
pop
fsubs
cmp
daa
jnp
add
mov
dec
sub
cwtl
outsb
dec
and
cli
clc
and
fsub
loopne
or
leave
adc
adc
pusha
lret
xorb
push
cmpsl
decb
dec
jae
enter
dec
dec
insb
testb
mov
out
push
jl
sbbl
pop
inc
push
mov
outsl
pop
stc
inc
mov
aaa
sub
dec
mov
aam
jno
jo
movsl
lods
lahf
pop
stos
jle
dec
in
ss
imul
xor
fnstenv
adc
cs
adc
jne
add
xchg
mov
orl
data16
xchg
pop
insb
pusha
neg
mov
jge
xor
and
pop
mov
push
pop
jbe
faddl
jno
lea
cs
pop
jno
pop
mov
xlat
push
or
jge
rorl
inc
imul
lods
jno
pop
push
cmp
loopne
jle
jo
xchg
mov
jecxz
shlb
js
push
fdivrl
and
fwait
movsl
sub
add
outsl
jge
adc
or
hlt
mov
jno
xor
icebp
aad
loopne
imul
rclb
xchg
aaa
imull
pop
mov
push
mov
or
xor
jbe
lret
mov
insl
repz
xor
cmpsb
das
sub
call
sbb
fidivl
sbb
pop
mull
add
mov
pop
and
sbb
js
rcrb
mov
jp
jne
lcall
inc
dec
mov
jo
clc
mov
fs
sbb
sub
pop
push
and
push
iret
add
roll
add
xor
bound
imulb
imul
ficoms
sahf
sub
dec
jp
adc
out
in
repnz
mov
sti
int
pusha
xlat
loope
push
test
stc
les
sbb
cs
scas
lret
jecxz
fucomi
and
imul
mov
adc
push
sub
dec
lock
sbb
dec
pop
cwtl
outsl
pop
daa
nop
std
insl
push
rorb
cmp
repnz
push
xchg
ret
imul
adc
or
ds
dec
mov
movsb
outsb
cwtl
push
push
mov
jge
dec
mov
dec
push
cmp
mov
push
incb
sbb
fisttpl
popa
cmp
xchg
xor
push
sbb
push
rorb
xchg
movsb
sbb
push
pop
sbb
xor
adcb
push
jg
jmp
mov
addb
xchg
stos
cmp
cmpsb
push
push
outsb
je
xchg
call
fmull
imul
stos
decl
lret
sbb
adc
call
inc
sub
sbb
add
lds
xor
dec
out
cmp
aaa
cmpsl
pop
or
shll
lea
jae
or
lcall
and
insl
lock
mov
mov
bswap
xchg
pop
mov
inc
push
xor
cmp
xor
jns
dec
mov
cmp
adc
xor
add
in
fstp
jge
pusha
andl
and
mov
pop
jmp
rclb
sub
imul
xor
leave
pop
jle
or
gs
repnz
mov
out
xchg
pop
mov
mov
jb
loope
or
add
lcall
push
lds
mov
repnz
das
aas
ljmp
aad
loopne
push
dec
mov
add
jae
out
in
outsb
les
inc
inc
jecxz
pop
popf
jae
xchg
xlat
sbbb
or
jp
pop
cmp
lret
mov
dec
xchg
push
in
jne
xor
mov
pop
popf
mov
inc
stos
fidivl
fcoml
or
arpl
mov
pushf
pop
loop
pop
xchg
and
out
xor
sbb
adc
add
stos
cmc
test
sub
mov
mov
inc
repnz
jo
sub
mov
push
push
inc
lcall
std
mov
movsb
pop
mov
dec
stos
mov
push
stc
add
xlat
push
jmp
sbbb
sub
test
in
jecxz
pop
pop
outsl
fsubrl
insb
in
mov
inc
ror
arpl
cmpsb
lds
and
movsb
push
adc
cmpsb
test
stc
xchg
fists
psubsw
ds
xor
or
cmp
rclb
pop
out
inc
dec
addr16
test
dec
repnz
push
pop
push
ljmp
xor
fildll
mov
mov
jmp
mov
jne
pop
aad
and
inc
mov
sbb
addr16
es
gs
bound
fwait
inc
push
jno
or
es
dec
repnz
iret
mov
in
dec
movsb
jg
js
fcompl
sti
mov
mov
push
xor
jp
repnz
je
fwait
mov
xchg
insl
mov
out
test
mov
pop
ret
leave
cmc
fdivrl
dec
cmp
push
fdivs
mov
std
rolb
in
repz
xchg
jo
add
dec
cmp
mov
aaa
and
jmp
aaa
pop
jg
imulb
pop
mov
es
push
adc
mov
das
jb
shll
and
cmpsb
int
stos
jg
mov
leave
lcall
test
call
sub
notb
cli
test
jp
push
jnp
or
dec
lcall
or
aaa
dec
mov
cmp
frstor
stos
outsb
outsl
mov
push
data16
cmp
dec
mov
dec
dec
cmc
cmp
add
sub
lods
test
cli
mov
aas
jle
pop
or
testb
jbe
fistps
arpl
add
or
add
sub
mov
sbb
adc
xchg
sub
ds
loop
lcall
jo
mov
nop
test
repnz
scas
adc
and
mov
fwait
add
sbb
inc
incb
mov
xor
in
outsl
mov
mov
xor
dec
xchg
pushw
out
mov
or
adc
insl
lds
roll
iret
sbb
mov
adc
add
add
mov
lds
stos
inc
pop
pop
pop
xchg
movsl
fsubrs
lock
stos
outsb
int
sti
into
adcb
xlat
nop
mov
mov
push
add
mulb
mov
daa
adc
or
mov
lds
fistpl
xor
imul
div
mov
das
xchg
mov
mov
or
into
cmp
push
or
adc
addr16
dec
loopne
cmp
iret
pop
mov
aaa
dec
adc
cmpsb
dec
clc
push
outsl
hlt
mov
je
loopne
insl
mov
mov
das
sub
shrl
xchg
lds
push
and
xchg
ror
inc
sbb
adc
int
inc
lods
ret
push
sbb
or
pusha
js
jbe
outsl
das
lea
jle
imul
sbb
dec
jg
loopne
add
test
pop
and
xchg
les
shlb
mov
add
dec
xchg
jl
xchg
out
fistl
and
mull
sub
adc
dec
pop
pop
gs
sbb
lea
lret
lahf
pop
lcall
in
pop
je
xchg
lahf
ficoml
sti
cmpsb
and
sbb
jl
adc
dec
mov
aas
lods
push
jnp
int
xor
cwtl
push
into
lcall
sub
pop
jo
lahf
mov
mov
les
cmc
jmp
mov
mov
fldcw
push
dec
cmp
cltd
sub
leave
stos
adc
enter
mov
mov
fsubrl
add
and
sbb
pop
jb
cmp
sahf
dec
cmp
aas
xchg
cmp
mov
xor
std
insb
add
mov
add
xchg
adc
push
fwait
push
xor
pushf
sar
mov
push
xor
ljmp
ret
das
mov
iret
orb
jnp
jp
sbb
aad
push
xor
or
pop
stos
int
lea
popa
in
cwtl
push
and
cmp
bound
aad
xor
loop
xor
and
mov
sbb
test
sbb
lock
xchg
mov
fidivl
test
mov
sub
outsb
rcpps
lret
pop
lret
mov
pop
sbb
and
loop
jno
inc
and
dec
sub
andl
add
jb
in
orl
shlb
jl
je
jg
and
ljmp
sarl
std
pop
sub
insl
cmc
xchg
sbb
pop
cmp
xor
fcmovnbe
push
mov
adc
lret
adc
mov
jg
scas
add
into
imul
cmp
cmp
dec
cmp
clc
pop
cwtl
push
mov
pop
ret
mov
adc
cmp
dec
cmp
fdivl
and
push
xor
aaa
test
xlat
mov
mov
orl
push
fldl
pop
adc
and
cmpsb
xor
repz
lahf
idivb
jno
test
aas
pushf
movsl
das
push
cmovae
or
add
sbb
ljmp
sbb
lea
movsl
xchg
in
addl
aaa
add
mov
cmp
insl
bound
sahf
mov
mov
les
popa
ljmp
push
adc
cmp
cmp
aam
shll
test
call
cmpsb
push
push
orb
into
lods
lock
imul
jno
sub
in
test
ds
ja
add
test
pop
push
sub
push
sbb
repnz
in
clc
mov
lahf
sub
in
push
jmp
or
in
mov
in
dec
out
jl
lret
jo
cld
jbe
push
cmp
mov
cmc
gs
cmc
push
xor
and
test
dec
xchg
dec
push
mov
xchg
push
cltd
sub
mov
imul
sub
mov
push
inc
inc
mov
xchg
popf
mov
inc
push
and
jecxz
mov
std
das
sub
push
dec
jns
cmpsl
sub
js
arpl
cmp
subb
dec
int3
leave
gs
sahf
rcrl
mov
adc
filds
in
out
jp
add
sub
dec
and
fcoms
lods
lahf
push
hlt
mov
cs
or
outsl
mov
inc
jnp
or
lahf
xlat
jnp
arpl
sar
mov
xor
push
push
rorb
cli
mov
push
imul
sbb
pop
jl
push
adc
inc
mov
sbb
imul
add
sub
xor
lcall
mov
lcall
push
fmul
add
imul
jne
mov
push
cltd
xor
push
mov
nop
mov
rcll
push
jge
cmp
rcrb
mov
ret
call
std
imul
sbb
roll
jl
sahf
or
sbb
or
sub
cld
loop
xchg
loop
or
jmp
inc
adc
and
push
jp
and
mov
std
xor
sub
xor
mov
and
pushf
xor
pop
icebp
inc
jno
insl
int3
repnz
mov
push
xchg
mov
aad
pushl
dec
lock
scas
mov
ss
insl
mov
and
bound
mov
sbb
int
cmp
frstor
nop
jnp
inc
sub
cmpsb
jp
sbb
lahf
inc
sbb
sub
xchg
scas
xor
xchg
jns
or
jg
ja
fistpll
lods
mov
imul
dec
int3
cs
insb
pop
aas
jl
ret
mov
std
out
dec
mov
jp
loopne
cs
jns
mov
cwtl
mov
xor
pusha
mov
mov
jg
stos
cmp
mov
jae
pop
iret
xchg
sbb
lret
outsb
and
fwait
popa
dec
inc
ret
and
xchg
push
daa
mov
stos
jb
clc
loopne
pop
lcall
nop
cmp
cmp
dec
bound
jne
jg
inc
pop
dec
xlat
jl
lret
repz
inc
xor
mov
and
pop
pop
idivb
jbe
cltd
pop
scas
jnp
test
sti
mov
dec
cmp
jecxz
push
add
add
mov
or
xchg
inc
sbb
adc
shlb
cltd
mov
fsubrl
mov
push
inc
xor
sbb
ss
in
add
dec
pop
and
aam
sub
cmp
imul
daa
add
out
cmc
add
adc
push
mov
mov
sbb
push
imul
mov
cmp
shr
adc
shlb
flds
inc
cmpsb
pop
cli
xor
push
movsb
cli
mov
add
inc
mov
cltd
ret
scas
push
mov
pop
aad
inc
lods
je
test
xor
repz
xchg
xchg
and
pop
shrb
mov
sub
jg
lret
cmp
xchg
mov
dec
push
sub
adc
outsb
cmp
into
ja
xor
in
xchg
cmp
scas
adc
add
mov
test
add
mull
lcall
sub
jecxz
stos
inc
test
sbb
sub
dec
loopne
mov
inc
jae
dec
push
adcl
adc
imul
sub
decb
sub
inc
jge
sub
pop
outsl
subb
loopne
mov
inc
sarl
jnp
mov
in
mov
xor
adc
ret
inc
inc
mov
or
in
and
or
orl
mov
xchg
fwait
in
push
xor
and
ljmp
leave
mov
ret
movsl
out
vpcomuq
jno
gs
jnp
rcr
mov
cmpsb
repz
jmp
ret
lea
inc
jne
and
orb
xchg
aam
sub
mov
in
push
popf
sbb
daa
rsm
clc
fucomip
fildl
hlt
pop
sbb
pop
iret
orb
mov
imul
stc
or
lds
or
jns
mov
sub
lods
inc
std
and
inc
lods
popf
gs
dec
pop
adc
scas
xchg
inc
sub
rolb
call
int
cvtpi2ps
and
jae
pop
mov
and
mov
rcll
sub
pop
mov
dec
je
ret
lcall
jle
mov
shll
add
repz
xlat
in
outsl
xor
mov
cli
or
insb
adc
push
test
adc
rolb
nop
lcall
push
push
and
movsl
je
jmp
and
jb
je
mov
mov
pop
pop
mov
and
and
add
mov
push
movsl
adc
cmpsb
call
dec
test
mov
cmp
test
fs
dec
sub
jg
cmp
jno
sbbl
movsb
cmp
xchg
cmp
mov
mov
incb
adc
mov
nop
dec
scas
imul
ret
sbb
sub
and
xchg
into
or
inc
loop
mov
leave
popa
icebp
out
mov
lds
mov
push
aad
push
and
push
push
adc
add
popa
push
jmp
jo
fmull
pop
sahf
testb
jle
or
sarl
pop
jo
in
xor
jno
int
rcrl
xorl
stos
adc
scas
sahf
dec
sub
lahf
cwtl
mov
and
add
fmul
nop
gs
xor
orl
or
aad
fwait
or
mov
xchg
lahf
and
jge
lds
cld
mov
stos
repz
int3
push
or
mov
pop
sbb
and
cmp
push
jg
add
jle
mov
sbb
cwtl
in
psllw
outsb
cs
sub
and
cmpsl
xor
arpl
push
data16
push
dec
cmpl
mov
int3
xor
and
cmp
in
cmp
mov
lahf
movsb
test
test
mov
shlb
pop
mov
dec
in
andl
push
mov
out
and
out
xor
movb
ret
cmp
ja
popa
cli
mov
and
dec
incl
pop
pop
stc
add
out
pop
imul
push
mov
js
fimuls
sbb
mov
js
gs
mov
cmpsl
pop
mov
js
std
jae
sbb
ja
sub
inc
jl
mov
adc
cmp
xchg
jp
les
dec
sbb
out
inc
lahf
scas
fdivrp
loopne
int
push
lods
loope
call
push
jno
jae
mov
jae
addb
cld
outsb
popa
in
loop
pop
lahf
cmpsb
lcall
jecxz
sub
adc
insb
adc
push
fstps
movups
nop
or
loopne
sbb
pop
jne
testb
sbb
sbb
decl
int3
sbb
xor
outsl
jge
and
loope
jns
in
clc
cltd
leave
ja
mov
adc
mov
jno
xchg
or
and
or
in
pop
add
jnp
enter
sub
add
sahf
jmp
fisubrl
or
cmp
xchg
xor
push
int
je
leave
add
xlat
jge
jge
xchg
or
in
out
jb
gs
out
pop
xor
fwait
dec
mov
hlt
ss
mov
aas
outsb
je,pt
in
pop
pop
mov
imul
pop
push
mov
inc
cmp
add
add
scas
or
js
call
push
pop
sbb
cld
stos
add
repz
ljmp
push
sub
clc
sub
cmp
out
jne,pn
fistpl
xchg
sbb
fwait
add
jecxz
cmpsl
incl
xchg
add
repz
jbe
in
mov
cmp
lock
mov
jl
add
lret
sub
in
lcall
fistpll
adc
jbe
fs
movsb
sub
mov
dec
and
or
mov
xchg
cmp
adc
int3
fdivs
ljmp
fcomip
sahf
inc
pop
jae
pop
dec
std
sbbb
rorl
fmuls
sbb
dec
test
ljmp
cmp
jno
and
xchg
popa
andl
nop
hlt
in
gs
push
adc
gs
jmp
nop
shl
pop
sti
outsl
push
mov
mov
lahf
cmpsb
hlt
scas
cmp
jbe
mov
mov
or
iret
cmp
sub
push
mov
jb
sbb
pop
cli
xor
bound
fdivs
ja
outsl
jmp
dec
out
out
mov
xlat
repnz
addr16
test
jne
dec
mov
imul
leave
xchg
imul
lods
lahf
push
mov
mov
cmp
jne
pop
aas
jg
inc
dec
mov
jb
test
cmp
xchg
mov
hlt
mov
adc
cs
xchg
fildll
pop
mull
div
test
sub
and
jnp
mov
jle
call
sti
push
mov
pushf
movsl
movsl
pop
dec
add
mov
fists
and
sub
cmp
or
xchg
xor
xchg
rcr
repz
fidivrl
lds
fstpl
stos
push
call
lds
out
xchg
subl
lock
test
das
or
sub
lock
push
ret
movsl
test
mov
add
xchg
xor
out
or
sarl
mov
push
dec
mov
cli
outsb
aas
loop
adc
ret
cmp
std
mov
es
cwtl
cmpsb
sub
pop
orl
inc
push
sbb
dec
inc
test
fstpl
dec
or
cmpsb
test
aad
lods
push
xchg
aas
cmpsl
int
loop
mov
cmp
cmp
ret
sti
ljmp
xor
pop
dec
lret
add
mov
jg
loope
mov
repnz
sub
add
fs
lret
in
mov
gs
mov
fsubr
add
pop
or
add
or
jno
stos
jns
out
into
mov
sub
fidivrl
mov
add
out
push
sbb
or
add
test
jp
imul
mov
aaa
ror
imul
icebp
pop
inc
xchg
pusha
jb
daa
xor
xor
add
aas
jge
dec
cmp
insb
scas
xor
mov
sub
imul
push
jg
add
push
mov
ret
testb
into
adc
sub
daa
sbb
outsb
or
ja
sbb
mov
sbb
movsb
dec
cwtl
jo
jno
mov
insb
jl
push
and
pcmpeqd
pop
push
sub
loop
movsb
mov
inc
outsb
scas
fbstp
jp
int3
and
mov
or
bound
jb
and
add
js
fisttpll
cli
arpl
out
outsl
fdivl
clc
rclb
mov
mov
lds
icebp
int
xchg
jo
jp
pop
or
push
xchg
pop
sbb
push
sbb
cmpsb
or
pop
les
mov
test
cmpsb
cmp
pop
add
out
ja
mov
or
fwait
dec
sbb
into
lret
mov
xchg
cwtl
adc
jp
mov
mov
xlat
mov
mov
mov
clc
imul
mov
push
repnz
push
addr16
insb
ds
jmp
add
imul
mov
mov
sbb
filds
push
push
repnz
dec
adc
std
dec
cli
gs
dec
sub
jns
outsb
stos
or
in
ficompl
bound
push
into
aad
dec
fidivrs
mov
or
mov
mov
mov
inc
pop
cs
xorb
mov
xchg
sub
arpl
and
orb
mov
sbb
adc
sub
popa
jl
gs
call
inc
mov
int
sahf
imul
xlat
pop
in
sub
pop
lahf
push
sbb
mov
pop
jp,pn
dec
mov
test
les
sbb
cmp
repz
rcrb
sahf
gs
mov
pusha
sahf
loopne
add
repz
stos
mov
call
out
je
cltd
adc
and
jns
nop
xchg
sahf
jp
mov
int3
cmp
sti
jecxz
push
pop
loopne
ret
cmp
out
popa
or
out
push
in
pop
lret
mov
aam
mov
sbb
add
inc
out
sub
push
adc
lcall
add
sub
jns
mov
loopne
loopne
inc
ds
sarb
add
mov
add
pop
int
mov
ds
jae
adc
pop
add
in
cmc
lcall
test
pop
push
sub
movsb
decb
jmp
imul
mov
idiv
cmp
sub
shr
mov
lret
subl
aas
sbb
sarb
sar
fsin
mov
xchg
popf
xor
pop
and
mov
pop
lret
test
xchg
stc
push
xchg
mov
xor
mov
adc
xor
out
push
imul
popf
jge
jno
xchg
mov
test
mov
xrelease
jg
insb
inc
cmp
lods
push
jmp
xor
aam
and
hlt
loope
mov
ss
xchg
mov
pop
xchg
loop
pop
sub
fildl
ret
lds
jnp
cwtl
sub
mov
ret
and
pop
push
sbb
push
jae
mov
mov
fimull
dec
and
dec
pop
je
cmpsl
cwtl
or
cmc
xlat
das
daa
loopne
stc
ss
inc
adc
lret
sub
jns
ficoms
aad
mov
push
xor
and
mov
jb
dec
mov
insl
inc
mov
pusha
jmp
inc
jecxz
scas
xlat
jae
mov
cld
stos
ljmp
fsubl
jb
les
cli
cli
mov
bound
add
mov
mov
dec
mov
imul
xchg
fistpll
jnp
in
bsr
rcl
sahf
addr16
add
test
add
add
jne
or
and
adc
jmp
jmp
into
daa
jae
mov
add
test
aam
cmp
sub
data16
sti
push
jns
mov
jg
inc
cmp
mov
loope
adc
int3
outsl
sbb
sub
cmp
mov
dec
movsl
shlb
mov
pop
sub
into
sti
fwait
xor
mov
sbbl
inc
shll
cli
xchg
or
dec
movsb
hlt
mov
clc
stos
cwtl
repz
inc
imul
mov
xor
fists
shlb
cmc
cwtl
push
movsl
adcb
je
pop
je
bound
daa
js
std
test
sbb
add
xor
jo
cmc
nop
aam
popa
std
xor
filds
xchg
test
mov
aas
mov
mov
mov
sbb
loopne
or
ret
cmp
and
orl
inc
or
sub
dec
arpl
fwait
test
cmp
jg
das
jmp
inc
frstor
inc
push
enter
dec
xchg
scas
and
je
ret
or
push
inc
or
lahf
fwait
sub
in
lahf
loopne
pushf
out
test
out
and
bnd
jge
mov
pop
ret
sti
fldt
pop
pop
shrb
push
out
sbb
ss
xor
lods
sub
mov
dec
adc
call
and
inc
fimull
hlt
pop
loop
xchg
mov
mov
dec
push
mov
mov
jg
std
sub
mov
jns
inc
jmp
outsl
rcr
repnz
popa
out
sbb
insb
inc
xchg
jo
or
push
loopne
jae
sbb
and
repnz
call
mov
mov
ljmp
pop
mov
adc
loope
int
mov
jbe
insl
mov
push
push
scas
xchg
push
add
mov
ds
ds
push
daa
dec
clc
adc
push
andl
shll
sbb
mov
out
cmp
test
std
stos
jns
or
add
xchg
imul
push
pop
fldenv
or
lret
inc
testl
pushl
negl
outsl
movsl
jle
jecxz
movsb
push
cmp
jl
lret
aas
nop
jmp
mov
outsb
and
pop
jecxz
sub
push
jne
rorb
mov
inc
ffree
decl
ss
xchg
in
or
in
push
out
pop
inc
cmp
fcomps
xchg
jecxz
aam
and
push
mov
add
dec
cmp
pusha
lds
nop
sbb
inc
sub
imull
lret
jno
push
imul
out
mov
pop
adc
outsb
push
and
lea
loopne
jp
jb
jge
fsubr
mov
fimuls
mov
es
lods
adc
in
ljmp
clc
aad
fmull
test
xchg
jg
call
sbb
ds
outsb
lahf
iret
subl
mov
sbb
in
lea
mov
mov
pushf
xchg
mov
cwtl
insb
cmpsl
rorb
sbb
adc
mov
mov
in
insb
test
or
and
adc
sub
flds
test
enter
lcall
aad
inc
iret
data16
jmp
mov
cmp
ret
repz
hlt
sahf
imul
xchg
mov
jecxz
adcb
lods
mov
mov
inc
roll
out
sub
ja
xlat
mov
sub
add
dec
xor
pop
mov
clc
test
pop
push
mov
rolb
push
dec
test
cli
mov
push
pushf
push
out
add
jecxz
lahf
jp
cmp
pop
mov
stc
mov
lea
jl
jle
clc
mov
popa
cs
inc
sbb
fistpll
or
dec
pusha
push
fiaddl
and
lods
mov
lds
cli
inc
int
push
arpl
negb
dec
sub
subl
lods
cmp
lods
cmp
insl
stos
and
pop
push
pop
pushf
jmp
push
ja
inc
sub
dec
add
sahf
in
sbb
jge
aas
push
mov
pop
pop
js
or
icebp
lods
inc
out
fcmovnb
nop
mov
lret
cmp
and
or
dec
test
and
xor
dec
lret
mov
push
rcl
sub
lods
pop
sarb
push
iret
lds
shrb
lcall
ljmp
sti
dec
js
pop
mov
sub
cli
call
adc
jb
lods
sub
or
fwait
shlb
inc
and
or
pop
xchg
mov
cmp
cs
movsb
pop
movsb
sti
enter
and
xchg
shrb
les
movb
dec
dec
in
dec
lret
data16
pop
stos
and
mov
shlb
add
mov
sbb
out
add
nop
push
int
inc
xchg
inc
iret
lcall
subl
in
repz
xchg
jno
fsub
hlt
sub
jno
lcall
sbb
cmp
sbb
adc
pop
adc
mov
pop
adc
shr
orl
outsl
je
fs
daa
dec
inc
pop
pop
lds
xchg
stc
cs
adc
les
sbb
cli
push
ret
or
xchg
mov
test
dec
xchg
cmc
outsl
gs
insb
daa
shr
int
fsubr
mov
and
and
pushf
rorl
inc
xor
xor
push
fisubl
ljmp
fcomps
sahf
add
sub
sbb
pop
adc
loope
jecxz
sbb
push
in
cltd
insl
sbb
sarb
cmpsb
aaa
adc
ja
popa
inc
roll
aad
fptan
dec
test
int
mov
dec
movsl
test
xcrypt-ecb
cmpsl
lldt
push
adc
mov
jbe
xor
sub
insl
lds
pushf
push
call
outsb
repnz
nop
fwait
mov
aam
fs
dec
or
inc
jp
frstor
and
or
pop
mov
mov
lods
cmp
shll
push
out
mov
sti
xor
sbb
aas
mov
or
test
inc
daa
sub
ss
push
mov
mov
mov
je
movsb
add
pusha
and
push
fwait
lods
add
int
in
push
dec
ret
lahf
mov
xor
int3
push
fcoms
insl
fcmovnu
cmp
fwait
lret
xchg
push
cwtl
shll
in
adc
outsb
int3
add
inc
sub
mov
sub
pop
dec
push
jge
scas
mov
cmp
add
lahf
xchg
sub
push
or
stc
mov
xor
dec
add
mov
lods
lret
out
std
push
test
dec
or
loopne
mov
sbb
shl
mov
sub
push
push
inc
pop
fimull
mov
lea
xorl
lock
jle
loope
push
test
ss
rorl
or
xchg
fadds
icebp
subb
test
jmp
sbb
js
xchg
cmp
aad
int
fwait
jae
mov
inc
cmp
flds
and
sub
inc
andl
xchg
mov
sbb
xchg
mov
pop
test
sahf
and
sbb
popa
and
inc
repnz
js
aaa
aad
jae
jge
or
dec
iret
cwtl
or
lea
cmp
mov
jp
movsl
jmp
mov
xchg
pop
pop
dec
inc
push
bound
mov
arpl
imul
fwait
sub
adc
iret
repnz
fs
sub
pop
add
out
in
fwait
push
pop
jge
mov
xchg
adc
sub
scas
inc
das
mov
dec
adc
rclb
jp
xchg
fcmove
int3
inc
inc
rclb
lret
shl
and
sub
pop
mov
push
rdtsc
enter
xlat
xor
and
divb
sbb
es
xor
mov
dec
in
nop
repnz
or
dec
lret
popf
andl
sub
pop
mov
in
pop
fs
xchg
fidivs
xchg
insl
insl
xchg
int
xor
js
std
adc
mov
sub
lea
jp
jmp
hlt
pop
inc
clc
inc
cwtl
cltd
sub
stc
pop
testb
test
fisttpl
mov
adc
xchg
orb
sahf
pushf
jno
cmp
sahf
jns
jp
outsb
lcall
fsubrp
ds
adc
xchg
jno
mov
jl
mov
rcll
push
push
mov
in
pop
arpl
jmp
aas
into
std
sbb
and
xchg
pushf
inc
movb
xor
insb
rcrl
xchg
cmp
jbe
ret
mov
push
orl
sub
cmp
dec
xchg
jne
mov
jg
add
nop
dec
mov
mov
add
rcll
mov
add
pop
cmp
sbbb
pop
jae
mov
xchg
mull
mov
xchg
stos
roll
add
mov
push
je
repnz
enter
subl
add
inc
les
and
sbb
cmpsl
inc
xchg
xor
mov
jp
mov
dec
xchg
adc
sbb
mov
sbb
popa
pop
jns
add
sbb
or
sbb
ret
int
andl
mov
xchg
and
xchg
loopne
clc
inc
lods
and
int3
lahf
fistpll
test
push
add
clc
inc
inc
daa
in
sub
xor
push
push
mov
dec
sub
in
test
imul
mov
repnz
jmp
test
xchg
mov
daa
dec
push
jb
jb
int
jb
xchg
icebp
pop
aas
aad
je
sbb
push
adc
pop
xor
xor
mov
popf
jb
loopne
jno
sbb
lods
mov
push
imul
mov
mov
int3
jno
test
mov
stc
mov
sbb
sub
jle
jo
pop
sub
sti
sarl
hlt
daa
das
notb
mul
aaa
ds
cld
xchg
lcall
test
mov
inc
and
lods
mov
push
insb
lea
mov
scas
notb
fdivs
mov
adc
and
hlt
inc
cmp
and
or
imul
sbb
push
mov
test
packssdw
hlt
pusha
sbb
push
jmp
popf
lcall
in
xorl
incb
cmp
clc
jle
pop
pop
mov
jb
mov
mov
lret
das
out
int3
enter
push
add
push
xor
push
adc
add
mov
out
mov
fwait
cmc
ds
dec
cs
inc
bound
fdivrp
xchg
dec
sub
ficoml
enter
loop
and
daa
and
and
fistps
cmp
aaa
dec
xchg
push
imul
mov
inc
push
int
ret
call
decb
push
repnz
jne
je
ja
and
or
in
mov
sbb
arpl
mov
inc
dec
clc
sarl
mov
cmp
and
sub
inc
flds
sbb
push
js
and
les
cwtl
pop
adc
xchg
mov
mov
jo
jno
out
iret
setg
pop
sti
pop
gs
cld
sahf
das
pusha
in
insb
and
pop
loopne
scas
xor
or
nop
test
popa
lcall
dec
insb
mov
push
push
xchg
push
imul
int3
out
in
iret
jns
outsb
push
mov
xchg
mov
ds
mov
fmul
mov
test
in
xchg
fnsave
das
insl
sub
cld
cmpsb
mov
sbb
hlt
inc
cmp
jmp
adc
mov
rcrl
mov
sub
loop
mov
push
xchg
dec
fdivl
loopne
mov
jno
push
dec
xor
jnp
cmp
lds
in
mov
mov
in
mov
shl
mov
push
out
shlb
mov
loop
mov
mov
jae
sbb
and
addb
adc
pop
mov
in
fcmovne
pop
and
mov
test
mov
andl
fsubp
cmp
sbb
dec
mov
mov
xchg
push
enter
pushf
pop
les
movl
mov
push
and
test
sbb
jl
dec
mov
stos
dec
mov
pop
outsl
in
add
xchg
loope
push
outsb
pop
cld
imul
jecxz
mov
gs
mov
frstor
std
pop
adc
pop
cmp
pop
pusha
ljmp
aaa
call
ss
xchg
cs
cli
add
inc
hlt
sbb
dec
dec
repnz
and
adc
lret
pop
loope
mov
xlat
fnstsw
outsb
stos
out
lret
pop
js
lods
iret
ja
and
arpl
movsb
jo
dec
or
cwtl
das
pop
cmc
cmp
sbb
imul
enter
mov
cmp
data16
xor
and
insb
push
inc
mov
les
push
je
aas
inc
pop
das
aaa
jo
cmp
subb
add
icebp
inc
sub
fstl
out
jg
jle
pop
psubusb
js
jbe
inc
sub
cmp
push
mov
std
fildll
pop
scas
imul
cmc
loop
mov
das
cld
mov
scas
jg
sub
imul
imul
inc
std
xlat
dec
mov
lahf
movsl
test
rolb
jmp
cmpl
in
jg
lahf
jp
stos
jge
cmp
imul
popl
xchg
insb
scas
push
lods
push
mov
outsb
movsb
mov
pop
xchg
mov
test
xorb
stos
test
lahf
cltd
lahf
mov
in
jo
sub
cmc
ja
xchg
lret
jo
sub
bound
in
hlt
inc
stos
xchg
jp
jbe
sbb
xor
fbstp
rcrb
int
int
pop
adc
dec
mov
push
int3
dec
mov
add
push
jg
js
pop
mov
les
push
jge
rorb
into
rcr
push
cmpsb
cmp
and
jmp
jle
cltd
cld
cmpsb
mov
inc
mov
mov
ss
jl
lods
out
mov
jecxz
inc
jnp
adc
sbb
mov
cmp
rolb
dec
outsb
push
insl
add
ret
call
and
inc
push
movsl
pop
sbb
mov
dec
xlat
test
jne
or
cmp
push
sub
mov
mov
inc
cmp
pop
dec
cltd
push
test
inc
mov
dec
addr16
sub
mov
cmp
lds
test
lcall
andb
ljmp
hlt
xorl
mov
shrl
push
insl
pop
jae
mov
dec
pop
rcll
stos
divb
cltd
mov
cmp
xor
pop
xor
push
xchg
xchg
lcall
test
lret
int3
xchg
xchg
xor
lahf
xchg
push
jnp
inc
xlat
gs
je
fdivrl
jo
push
xchg
les
mov
nop
sub
in
adc
outsl
insb
push
in
testb
xchg
dec
cli
cmc
scas
leave
bound
xor
shld
mov
mov
dec
cmp
fiaddl
fimuls
sbb
out
mov
out
aas
pop
mov
sbb
int
or
xchg
addr16
loopne
add
push
out
mov
push
pop
mov
push
jns
and
mov
adc
sahf
lods
sbb
neg
dec
ds
scas
mov
mov
orl
and
xchg
sbb
aad
scas
xlat
adc
adc
je
es
pop
jp
jge,pt
xchg
fcmovnu
xchg
fs
fcmovbe
xchg
push
sbb
lods
in
xchg
cs
sti
jns
mov
repz
fs
jmp
lcall
jle
or
and
mov
fstps
idivb
inc
movl
lds
fs
sbb
mov
mov
out
add
and
test
adc
lds
sti
das
mov
sbb
xor
out
jmp
pop
test
lcall
cmpsb
mov
orl
add
xchg
ss
push
or
or
inc
cmp
pop
das
push
dec
inc
icebp
cltd
xchg
leave
or
test
shl
test
cmp
jmp
out
lret
mov
dec
push
cs
inc
push
adc
push
aad
ja
jae
or
add
pop
jp
es
push
lahf
jnp
push
test
cmp
aam
scas
mov
fwait
test
ficomps
out
adc
dec
ret
pop
pop
pop
xor
adc
int
jecxz
adc
jae
mov
and
jnp
repz
dec
inc
loopne
lods
push
cmpsl
shll
jne
cwtl
jo
sbb
cld
dec
inc
mov
mov
xchg
xchg
fildll
rcrl
xor
add
xor
dec
mov
add
fsubs
fcoms
or
loopne
inc
xchg
ret
fldcw
hlt
ljmp
mov
sub
mov
cmp
aad
push
jg
scas
sub
cmp
popf
pop
xchg
cmpb
es
test
lret
hlt
cmp
ret
dec
lock
pop
scas
mov
fldcw
lds
shlb
shrb
mov
stc
push
inc
into
bound
test
jnp
and
jne
fistpl
adc
xchg
sti
adc
mov
or
cmp
jne
shlb
shlb
loopne
ss
rcll
imul
movsl
dec
push
mull
xchg
jo
and
add
dec
mov
pop
inc
and
xchg
lods
xorb
or
mov
inc
mov
dec
aaa
cld
xchg
ret
lea
mov
cwtl
xor
rorb
jge
dec
sbb
leave
adc
or
push
or
cmp
adc
or
clc
test
out
loope
pop
call
or
mov
xchg
out
jne
mov
fstl
in
ja
jno
ja
or
loopne
fimull
push
loope
enter
test
cmp
dec
dec
sub
xchg
jle
jl
mov
loope
dec
popf
jl
sbb
jl
mov
lods
or
cmpsl
inc
lods
in
push
imul
push
cli
jne
mov
rol
sub
imul
push
or
in
and
dec
pushf
jp
or
mov
dec
js
movsl
mov
aam
or
shrl
out
inc
cmp
add
xchg
dec
cltd
pop
into
imul
dec
lds
xchg
pop
cmp
aas
lea
repz
xchg
lea
ljmp
aad
lds
adc
cmpsb
aam
rorl
sub
jp
mov
loope
push
xor
ret
aas
sbb
pop
les
push
adc
les
das
pop
out
jb
jp
dec
pop
lock
icebp
iret
mov
outsl
jne
cmp
insb
out
fmul
or
inc
mov
xor
lods
or
inc
loop
loope
sub
rorb
mull
repz
fimull
mov
imul
mov
movsl
push
push
loopne
aas
dec
push
sub
pop
mov
popa
fsts
or
and
and
daa
sub
rcl
dec
jl
jmp
subl
xchg
insl
sahf
pop
lods
jle
scas
sub
jge
hlt
loop
inc
mov
addl
lods
xor
lea
sbb
push
daa
xor
lahf
scas
test
ss
jecxz
xchg
sbb
daa
icebp
lret
sti
adc
fidivs
push
pop
sbb
dec
scas
scas
and
repz
mov
imul
cmp
cmp
sub
add
mov
dec
add
mov
cld
dec
add
sbbl
test
jns
mov
lods
lea
add
inc
sub
outsb
push
add
inc
test
sbb
mov
xchg
dec
ljmp
icebp
sub
mov
dec
xchg
pop
into
daa
adc
pop
popf
mov
in
xchg
add
lahf
add
jge
add
inc
sub
jo
hlt
daa
imul
mov
mov
addb
lret
add
mov
mov
jo
das
or
repnz
lahf
pop
sbb
mov
movsb
scas
ret
pop
dec
lret
into
fildll
bound
outsl
dec
push
xchg
jns
mov
mov
jp
fsub
ss
jbe
cmp
and
dec
jns
call
inc
stos
test
inc
ret
dec
cmp
mov
mov
mov
jnp
mov
xchg
push
xchg
in
das
adc
jae
test
aas
mov
xlat
mov
mov
sti
test
sbb
inc
fs
xchg
jb
dec
iret
ljmp
daa
xor
mov
push
dec
inc
aas
jmp
pop
sar
inc
cmp
dec
mov
xchg
imul
push
imul
arpl
xorl
mov
leave
fucom
mov
xor
outsb
add
dec
cmp
test
xor
mov
jns
and
inc
pop
negb
pop
int
dec
jge
fcoms
xorb
loop
jl
test
sub
sbb
jg
mov
xor
pop
mov
std
mov
enter
pop
movsb
jmp
ficoml
loope
pop
das
call
loope
fiaddl
dec
inc
nop
loopne
mov
adcl
loope
test
jecxz
and
lods
add
mov
outsl
dec
je
pop
sub
mov
mov
movsb
xchg
int3
adc
pop
test
leave
lret
clc
pop
adc
push
in
int3
or
xor
andb
dec
pusha
push
push
mov
shrl
sub
dec
jge
mov
xor
outsb
pop
dec
or
into
aas
mov
lcall
cmp
push
rcll
sub
daa
lret
loope
mov
cld
das
cltd
in
or
push
mov
cmp
pop
mov
sarb
push
cmp
test
int
int3
icebp
or
ss
sbb
cmp
add
pop
dec
shr
adc
adc
popf
cli
push
push
hlt
jnp
mov
fucomp
insl
and
adc
pop
outsb
add
aad
ret
dec
out
scas
push
inc
je
jo
call
cmpl
fwait
pusha
or
loope
xchg
lcall
push
out
mov
mov
sti
xor
and
stos
or
push
cwtl
repz
dec
mov
roll
je
mov
xchg
inc
int3
arpl
mov
out
add
fnstcw
sub
jbe
adc
xchg
imul
dec
jno
cs
sbb
dec
or
adc
scas
jge
fldcw
es
aad
push
movsb
nop
rcrl
movsl
in
add
sub
sarl
jle
and
adc
rcrb
xchg
cld
out
xlat
mov
in
xlat
pop
mov
lock
sub
inc
idiv
mov
pushf
sub
out
mov
inc
xchg
jns
pop
xlat
insl
dec
movsl
or
jne
popa
leave
pop
mov
push
add
test
adc
inc
cmc
shrl
add
imul
cltd
aad
fisttps
sbb
popf
cli
clc
and
test
lods
pop
mov
mov
lock
fdivrp
in
into
aad
lods
outsb
xchg
pop
adc
mov
inc
pop
cwtl
movsl
cmp
fwait
adc
orb
adc
mov
jge
rcrb
or
or
cmp
out
push
add
pusha
xor
filds
mov
xchg
sub
int3
lahf
loopne
or
xchg
fstpl
bound
lods
ss
std
cmp
stos
sbb
jb
pop
test
std
jae
or
mov
bound
mov
loope
sti
mov
fwait
mov
in
out
mov
aas
aad
xchg
lock
gs
ret
mov
or
les
loope
jbe,pn
cmp
iret
mov
cmc
xchg
enter
jnp
push
xor
lds
and
sbb
cwtl
das
xchg
xchg
sarb
sahf
std
add
and
into
cld
data16
push
dec
je
pop
test
add
bound
call
mov
movsb
lret
pop
mov
ja
or
pop
movb
sar
mov
or
sti
ss
xchg
fnstcw
mov
sarl
lods
sti
inc
stos
mov
mov
pop
ss
inc
rorl
inc
shll
out
scas
jl
or
shrl
and
dec
xor
fcoms
insb
jg
cmp
mov
jge
stos
push
loopne
xchg
or
sahf
scas
or
inc
dec
iret
lret
jecxz
pop
int
shrb
xor
ja
paddsb
mov
repnz
cmpsb
sbb
nop
lods
jb
add
ja
stos
imul
pusha
pushf
ds
lret
std
cmp
adc
repz
jns
lods
daa
sub
orl
push
addr16
sahf
rclb
andl
cmp
pop
scas
fisttps
dec
inc
fisubrs
movsb
xchg
push
inc
enter
dec
ret
or
mov
into
dec
adc
mov
bound
jle
ret
inc
inc
jnp
mov
jmp
stc
sbb
sub
jnp
add
adc
push
xor
movsb
jge
cmpsl
ds
into
lret
push
shl
fiadds
movsl
lret
sbb
loope
xchg
and
enter
in
ret
push
adc
ret
int
dec
cltd
fs
pop
push
mov
push
sahf
jecxz
mov
and
push
mov
and
mov
or
movsb
sub
sbb
push
inc
test
fisttpll
push
aaa
dec
addb
sub
push
push
add
shlb
lahf
leave
in
mov
add
inc
jo
subl
pop
pop
cmc
mov
pop
push
inc
sub
mov
inc
push
and
aaa
dec
add
or
and
inc
pop
jae
ljmp
cld
jae
mov
scas
add
jns
mov
mov
sub
cmpl
inc
mov
das
ds
adc
xchg
or
repz
repz
jmp
xor
lock
outsb
mov
mov
or
push
ljmp
jg
sub
xchg
popf
jmp
insl
aad
mov
adc
inc
es
std
flds
mov
lock
xchg
lahf
mov
push
popf
adc
rorb
ror
mov
fiadds
mov
jmp
and
cmp
hlt
aaa
repz
roll
push
repz
leave
ja
and
xchg
ja
fnstcw
aad
and
sub
pop
mov
mov
jbe
nop
sub
mov
mov
outsl
sub
je
pop
fldl
adc
orl
mov
stos
xchg
cmp
pop
insb
mov
daa
sarl
fs
xor
ss
pop
inc
sahf
inc
jbe
adc
push
gs
mov
lcall
iret
cmp
xlat
mull
jae
xchg
or
idivb
push
sbb
test
and
loope
xlat
adc
lods
inc
mov
inc
jecxz
leave
xor
stos
insb
iret
jns
js
sbb
pushf
jo
adc
and
cmpsl
sbb
and
cs
in
sbb
jb
pop
or
lahf
cmp
push
push
stos
ror
xor
in
out
mov
push
js
mov
pop
or
sub
in
fildl
mov
enterw
pop
inc
sbb
push
sahf
pop
adc
mov
lds
push
cmp
push
je
adc
xchg
call
scas
cmp
outsl
cmp
iret
stos
cmpsb
mov
cmp
pop
jle
nop
add
int3
mov
or
dec
sbb
pop
xor
icebp
paddq
add
fiadds
es
mov
lock
fistpl
and
jns
sub
xor
sbb
insl
mov
fsts
mov
fists
push
filds
push
and
clc
aam
jns
out
out
test
xchg
popa
cmp
pop
idiv
xchg
insl
cld
stos
in
fmuls
cmp
push
xor
lret
fcomps
sbb
sbb
pop
dec
mov
jbe
mov
aam
xchg
daa
add
lret
pop
jmp
lret
mov
das
imul
or
add
adc
lods
push
pop
inc
jmp
sub
or
cltd
cmp
sahf
lea
adc
and
dec
sbb
das
daa
lds
xor
xor
xchg
loopne
xor
cmp
or
fsubs
orb
push
testl
xor
xlat
sti
pop
dec
mov
pop
mov
les
call
addr16
dec
mov
leave
and
xor
insl
cmp
sarl
outsl
mov
sti
xor
je
data16
out
pop
int
adc
in
addb
jnp
mov
xlat
jmp
xchg
daa
adc
dec
and
loope
aad
cli
lcall
cltd
and
pop
lea
sbb
jbe
jmp
out
test
and
repz
sub
gs
gs
rclb
xchg
lret
nop
mov
mov
fisubs
fdivp
cld
fst
cmpsb
insl
dec
cmp
arpl
xor
inc
roll
sbb
ret
repnz
negl
pop
mov
out
sbb
ret
fistl
pop
ljmp
dec
vucomisd
mov
js
jae
jl
jle
pop
mov
cli
es
fs
xor
out
dec
and
or
int
sahf
cmpsl
sub
out
loope
xchg
fcomps
mov
cmp
dec
imul
and
lcall
mov
sub
sub
mov
push
decl
ret
je
xor
cli
out
adc
xor
push
aam
arpl
jl
nop
in
scas
cs
insl
mulb
cmp
mov
jecxz
cwtl
inc
jecxz
sbb
adc
test
push
divl
mov
rclb
adc
and
cmp
out
sbb
adc
cmp
hlt
out
jo
lcall
out
movsb
xor
dec
jb
lret
pop
shll
pop
mov
pushf
jp
adc
subl
mov
pop
and
bound
mov
outsl
xchg
pop
iret
stc
and
nop
sbb
cmp
inc
adc
jg
int3
gs
pop
mov
out
mov
pushf
ds
mov
iret
stc
pop
jmp
dec
lahf
pop
cmpsl
pop
pop
mov
iret
inc
call
and
dec
cmc
stc
ret
cmpsb
movsb
inc
sub
xchg
aaa
or
mov
rclb
mov
cmp
mov
movsl
ljmp
js
xor
out
daa
test
into
int
add
cltd
xor
adc
mov
lods
dec
or
jp
arpl
int
lods
mov
inc
notb
int3
shl
push
xor
mov
scas
push
aaa
orl
jnp
test
mov
mov
push
nop
sub
mov
imul
add
insb
sub
inc
cwtl
mov
fistpl
mov
in
ret
mov
sbb
dec
xor
inc
xchg
push
movsb
data16
push
aad
sarb
cmpsl
loopne
push
dec
shlb
aam
mov
out
outsl
pop
xor
dec
push
sti
pop
push
sbb
or
xor
call
in
or
mov
mov
or
jb
inc
test
stos
push
cmp
fsub
adc
mov
adc
jge
mov
pop
test
scas
add
cmp
dec
or
jnp
add
or
jae
roll
jge
bound
in
popl
jl
out
data16
lret
cmpsl
pusha
jb
push
and
test
dec
sub
lods
xor
push
adc
repnz
push
adc
popa
push
mov
fdivs
je
out
fidivrs
inc
arpl
lahf
insl
addr16
pop
xchg
jae
cmpsb
sahf
stc
iret
stos
out
repz
adc
out
push
cmpsl
jecxz
je
loope
push
jo
push
xchg
cmpps
jecxz
mov
stc
ss
cmp
pop
insb
inc
lcall
ds
imul
inc
into
mov
mov
xor
cmp
jecxz
xchg
mov
call
push
push
addl
mov
pop
xor
into
add
lods
rclb
fscale
repnz
cmpsl
sbb
shll
insb
inc
test
scas
add
inc
ss
xchg
mov
lret
lahf
leave
xchg
sahf
ret
sbbb
xchg
jle
int
inc
adc
jbe
mov
cmp
insb
stos
xor
push
xchg
ror
push
sub
fld
in
jae
movsw
mov
dec
mov
adc
dec
rcll
ret
and
mov
xchg
adc
jae
cmp
inc
xor
lahf
decl
or
push
push
add
mov
icebp
xchg
std
fldl
stc
mov
bswap
inc
out
lods
insl
inc
mov
pop
and
pushf
sub
mov
jno
mov
sub
pop
xchg
inc
jb
xchg
xor
in
sub
pop
std
repnz
sbb
pop
popa
jno
cld
rolb
jbe
outsl
xor
pop
jg
adc
mov
pop
fiaddl
cmp
scas
xchg
jge
push
into
xchg
mov
cli
aas
ds
hlt
stc
jecxz
add
mov
jge
or
adc
xor
lods
and
dec
jmp
jno
mov
mov
loopne
sub
nop
das
push
mov
ja
adc
push
jg
repnz
int
stos
pop
imul
add
mov
jb
out
xchg
cltd
adcl
pushf
insb
xlat
sarb
mov
jnp
sbb
icebp
loop
push
int3
xchg
sbb
dec
jae
dec
stos
enter
adc
cmp
imul
add
push
push
jl
jmp
add
jl
sti
xor
dec
jg
sbb
mov
lret
lods
pushl
push
daa
sbb
push
mov
xchg
testb
out
inc
js
push
jl
and
inc
jns
xchg
sub
adc
jae
dec
adc
mov
jne
int
push
ds
jae
jl
lods
xor
mov
and
push
and
xchg
pop
or
popa
rcl
icebp
inc
mov
repz
movsb
inc
ss
in
jns
adc
std
push
ret
dec
imul
data16
test
or
roll
in
mov
jl
fs
xchg
out
mov
ror
push
imull
mov
cmc
xor
sbb
and
pop
cld
negb
sub
scas
and
jmp
push
std
inc
das
xchg
dec
pop
mov
stc
and
and
insb
insl
and
leave
mov
cmpl
mov
out
fnop
add
int
out
mov
mov
mov
jo
pop
fmul
dec
and
rcrb
pop
comiss
and
jg
stos
scas
lds
iret
push
mov
rorl
pop
in
cmp
push
sbb
add
shlb
iret
inc
sbb
mov
adc
fldenv
popf
or
inc
lret
sub
in
imul
inc
mov
loop
pop
sub
push
jg
or
or
rcll
lahf
mov
shrl
pop
test
sbb
sarb
push
adc
aas
cld
in
loopne
sub
scas
sbb
std
repnz
addr16
gs
mov
jo
mov
negb
cmp
push
pushf
pop
dec
ret
shlb
fistpll
push
fstl
dec
ds
sbb
cwtl
jne
icebp
mov
call
dec
enter
mov
mov
pop
mov
adc
adc
aad
pop
cwtl
adc
pop
aas
sbbl
data16
in
imul
pop
rcr
jp
mov
mov
sti
cwtl
jmp
inc
sbb
push
add
and
lahf
xchg
inc
fistpl
inc
ret
pushf
mov
aad
cli
test
kxorw
add
les
inc
mov
jl
mov
mov
aas
cmc
in
pop
or
xor
out
test
lods
dec
sti
or
mov
xchg
xchg
mov
sub
push
mov
shrl
adc
inc
stos
rclb
out
jae
inc
jb
xor
fstpt
sub
pop
test
int3
insb
ficoml
push
mov
and
shrb
mov
imul
je
aas
mov
sbb
adc
add
enter
jg
into
xchg
mov
fiadds
pop
adc
test
mov
mov
adc
push
flds
icebp
adc
pop
nop
incl
hlt
jne
loope
mov
jnp
xchg
push
jecxz
sub
mov
test
outsb
sbb
cmpsb
cli
lcall
mov
data16
std
and
ljmp
xchg
cmp
shl
xchg
fldz
mov
clc
or
mov
add
cmp
pop
add
insl
dec
mov
xchg
dec
add
or
lahf
decl
insl
std
mov
or
mov
cmp
and
int3
aas
leave
push
and
int
imul
xor
popa
aaa
leave
cwtl
dec
outsb
inc
sbbb
lods
fists
xlat
rolb
dec
repz
daa
adc
nop
sbb
into
push
cmp
insl
shlb
xchg
pop
pop
scas
sub
pop
aad
imul
mov
jae
and
scas
adc
xlat
movsl
xchg
out
lcall
cmpsl
mov
dec
fmull
enter
pop
push
outsb
out
xchg
cmp
jb
out
jmp
mov
sub
pushf
mov
hlt
jo
out
nop
mov
sub
stc
sub
insb
daa
std
mov
dec
out
lahf
xor
adc
add
pop
mov
aaa
mov
test
inc
repz
shl
imulb
add
sub
gs
xorb
fwait
add
repz
pop
jge
pop
lahf
cwtl
pop
cld
lock
es
or
jmp
sbb
addr16
mov
out
fbld
loop
mov
cmc
test
sbb
pop
push
mov
add
pop
jecxz
jbe
xchg
cmp
and
dec
lds
les
jns
adc
jmp
push
mov
xchg
cwtl
pop
inc
notb
loope
dec
xchg
add
mov
loop
popf
dec
xlat
mov
mov
scas
and
and
in
loope
je
cmc
in
jnp
xchg
cmp
inc
sub
incl
pop
or
scas
sbb
cmp
cmpsl
sbbb
out
cmp
sub
jnp
sbb
xchg
mov
xchg
inc
ret
roll
or
in
cmp
or
iret
cltd
ljmp
movsb
mov
push
das
imul
dec
fisubrs
addr16
xor
shl
mov
bound
testb
aaa
jge
pop
xchg
jge
mov
ja
pushl
clc
and
jmp
pushf
sti
or
jno
adc
lods
cli
or
jmp
push
aaa
out
mov
sub
out
popa
int3
jge
push
mov
sub
mov
sub
sbb
movsb
mov
in
std
in
inc
mov
loope
xor
lcall
sbb
aad
popa
ds
adc
jecxz
in
testb
insb
in
fs
mov
add
push
das
daa
andb
pushf
cmp
in
out
cmp
lods
sahf
in
nop
dec
sbb
adc
aam
insb
into
pop
xchg
dec
xorl
mov
std
pop
push
fwait
jns
imul
andb
mov
fisubrl
dec
enter
adc
jae
call
sbb
jbe
dec
ljmp
and
inc
fnsave
shrl
dec
nop
int3
addr16
shrb
jge
jae
jl
push
push
mov
gs
adc
lret
jo
cmp
les
out
mov
insb
fs
insb
xor
cmp
sbb
or
fidivrl
lods
fmul
or
fs
int
ret
loope
aas
adc
ret
imul
ja
inc
test
pop
shrb
cmpsb
cmp
push
pop
fnstcw
ret
xor
enter
mov
sbb
jae
sbbb
popa
pusha
popf
inc
sti
jge
stc
pop
jg
cmp
sbb
punpckhbw
push
pop
mov
in
xchg
in
xor
add
test
les
imul
rorb
xor
test
les
add
sub
out
fmulp
repnz
scas
hlt
popa
mov
and
outsb
popf
mov
dec
mov
xchg
sub
int
inc
pop
or
mov
pop
stc
fcmovnb
cmpsl
call
sbb
sbb
mov
popa
mul
jecxz
pop
jmp
sbb
cmovp
jns
inc
rorb
add
rorl
ret
push
xchg
loopne
jecxz
test
or
push
icebp
out
jg
push
xchg
pop
xchg
mov
add
bound
inc
sbb
fstpt
dec
in
je
fdivs
sub
sbb
insl
sahf
or
push
xchg
ss
mov
pushf
idivb
test
and
sub
ret
mov
jnp
and
push
sti
mov
cmpb
lret
insl
cmpsl
xor
gs
mov
mov
inc
bound
mov
loopne
clc
mov
or
jg
cmc
xorl
cmpsl
repz
add
out
mov
xor
lods
mov
cmp
xchg
cmp
lret
cmpl
jns
negl
movntps
es
je
mov
lret
scas
pushf
push
imul
lods
push
outsb
orl
pop
stc
or
pop
or
lods
mov
enter
pop
fwait
sub
xlat
adc
dec
mov
dec
lods
add
hlt
sub
ds
dec
adc
pop
sub
lods
mov
repz
jecxz
out
xchg
sbb
imul
int3
subl
pop
out
adc
xor
pushf
adc
jg
icebp
mov
dec
int3
idivl
outsb
cmpsb
cltd
jo
or
rcll
xchg
lcall
adc
jmp
aad
out
mov
push
jle
mov
out
stc
or
lods
les
je
sub
addb
leave
xchg
sub
xor
lcall
jge
jo
push
lea
cmp
pop
movsl
sbb
push
xchg
lods
cmp
in
rol
imul
fdivr
add
mov
lret
ficomps
xor
mov
shlb
fildll
sub
inc
ja
mov
xchg
es
out
add
fimuls
inc
popa
cmp
push
mov
inc
mov
clc
mov
sub
movsb
hlt
ret
sub
ret
mov
mov
xchg
mov
xchg
push
xchg
loope
call
cmpl
addr16
jle
imul
movsb
add
es
sub
adc
mov
jns
adc
cwtl
push
xor
rep
jb
and
leave
or
lds
and
xor
iret
lea
movsb
and
push
das
mov
push
jns
jo
cmpl
int
push
xchg
add
dec
jmp
cli
insb
mov
adc
mov
std
in
adc
notl
cld
addr16
mov
sub
pop
add
cmp
mov
into
add
mov
xor
or
shlb
dec
pop
inc
mov
cltd
test
adc
movsl
andb
mov
popf
shlb
adc
jecxz
mov
or
mov
cld
and
xor
or
in
jge
or
fildl
adc
push
pop
jl
test
sub
lods
or
rcrb
push
push
xchg
add
cltd
insb
int3
xchg
test
pop
aas
sub
push
cwtl
cmpsl
xor
dec
or
aad
fcomps
scas
cli
cs
or
out
add
dec
es
adc
cmp
ds
cld
inc
testl
out
xor
std
scas
mov
or
cld
add
dec
inc
clc
push
js
pop
insl
jmp
dec
adc
inc
in
jle
adc
xchg
xor
sbb
cmp
sub
imul
push
xchg
into
cs
ljmp
lds
pusha
jbe
and
cmp
cltd
insl
pop
dec
mov
cld
add
sbb
jne
addr16
data16
rcll
arpl
push
push
mov
sbb
and
ffree
fmull
pop
pushf
mov
dec
fwait
jno
nop
sarb
jbe
push
mov
mov
cli
dec
pop
sub
in
sbb
jb
jecxz
and
cmp
sahf
mov
nop
mov
push
push
mov
jno
clc
loop
pop
pop
lods
test
inc
mov
mov
loope
gs
xchg
jmp
sbb
outsb
xlat
inc
push
pop
inc
jne
in
push
push
sahf
out
es
hlt
js
and
adc
mov
imul
mov
mov
mov
fs
inc
jle
inc
lds
inc
jb
stc
imul
push
lods
ret
cmp
xor
mov
dec
push
int
aas
jp
insl
xor
adc
and
xchg
sub
das
in
addr16
jae
mov
mov
inc
lcall
sbb
fs
mov
xor
sbb
js
sub
int
scas
mov
sub
js
sub
pop
and
lds
out
dec
inc
or
xchg
sub
hlt
gs
mov
mov
push
xchg
push
mov
lods
push
mov
dec
aad
clc
stos
xchg
pop
sahf
insb
fs
loop
xor
adc
rclb
lods
cmpsl
add
cmp
ss
ret
out
lret
icebp
inc
sub
sbb
xchg
add
rol
push
dec
lahf
mov
insl
inc
mov
add
push
fsubrs
shll
shlb
nop
or
sub
loop
mov
lds
aad
data16
lods
clc
jno
cmc
cmp
or
ds
inc
repz
rorb
xchg
mov
pop
cmp
in
xor
push
subb
inc
jl
popf
pop
sarl
inc
mov
xor
imul
xchg
mov
lret
inc
push
ljmp
push
jo
pushf
push
into
imulb
pop
sbb
and
scas
mov
out
xchg
mov
fidivrl
push
sub
and
sti
arpl
push
xchg
mov
jg
mov
shlb
fwait
leave
dec
mov
out
lock
daa
xchg
dec
sahf
mov
xchg
test
sbb
mov
outsl
push
test
sbb
sahf
mov
imul
das
es
jno
jno
jbe
sbbb
jle
pop
je
inc
test
pop
push
imul
mov
stos
dec
pop
jmp
int3
dec
clc
xchg
lds
mov
pop
push
movsl
popf
dec
xchg
sbb
shll
or
mov
push
ret
mov
xchg
stos
mov
lcall
rolb
pop
out
mov
cmp
cmp
jb
test
mov
sbb
sahf
bts
xor
jb
xchg
cld
sbb
repnz
dec
cmc
arpl
pavgw
or
lock
add
je
popf
lock
or
aad
fnstsw
rcrb
jmp
xchg
xchg
and
out
xor
cmpsb
bound
mov
inc
fiaddl
cmp
outsl
in
mov
add
lret
or
inc
and
popf
out
add
adc
addr16
int3
or
adc
out
adc
repz
loopne
scas
cmp
fwait
cs
test
sbb
or
xor
outsl
xor
jmp
sub
ss
inc
hlt
scas
adc
and
pop
scas
xor
out
stos
aas
push
test
jl
lret
inc
adc
mov
data16
arpl
or
dec
jge
cld
xchg
nop
rolb
adc
loopne
lods
push
add
and
inc
popf
out
adc
jbe
jl
notb
pop
lds
div
aas
push
cwtl
sbb
fistpll
and
dec
js
jne
mov
jno
xor
jne
mov
jl
punpcklwd
in
or
jnp
data16
push
lret
mov
sub
jne
jle
out
pop
lock
jo
out
ret
outsl
insb
popa
stos
gs
or
rol
call
push
xchg
ret
mov
mov
es
mov
cli
shlb
daa
fdivr
aas
dec
mov
imul
cld
mov
pop
adc
push
aaa
outsb
mov
push
inc
les
stc
push
ds
dec
add
inc
mov
inc
mov
jl
mov
push
cs
and
hlt
pop
jbe
loope
xor
dec
jmp
or
out
jp
push
test
xor
cmp
jne
test
lea
andl
mov
fs
xor
scas
lret
shll
dec
icebp
add
lds
test
out
repnz
dec
in
sti
inc
in
or
stos
sub
clc
or
faddl
jnp
mov
nop
fildl
and
mov
push
leave
jb
mov
inc
or
inc
movsb
push
pusha
cmp
xor
divb
cmp
mov
inc
push
cmp
es
adc
xchg
add
push
and
mov
add
fadds
in
jnp
pop
jne
arpl
aam
dec
lods
clc
jb
mov
shll
dec
sbb
clc
in
mov
jae
scas
inc
repz
aad
mov
enter
adc
add
inc
mov
push
push
sbb
rclb
push
mov
xchg
rcr
xor
not
ss
ja
inc
pusha
into
out
mov
das
fistpl
push
cmp
mov
daa
push
into
scas
insb
jl
sub
pop
fs
test
mov
dec
stos
cmc
sbb
xor
icebp
mov
mov
add
cmp
inc
cmpsl
add
fadd
int3
lret
xchg
jb,pt
out
inc
adcb
xchg
stos
js
mov
hlt
lahf
stos
test
ljmp
jae
outsb
popf
and
sbb
sub
inc
int
inc
hlt
jbe
sbbl
and
out
mov
xchg
mov
pushf
sbb
inc
and
sub
xchg
ret
dec
sub
cmpsb
lock
add
adc
pop
push
sbb
ret
jmp
push
rorl
or
fs
adc
ret
inc
inc
dec
xor
js
add
and
inc
sub
scas
and
sub
or
cli
xchg
xchg
jno
std
fstpl
dec
out
scas
fsubrl
cmc
pop
and
enter
and
das
outsb
out
scas
cmp
lcall
add
loope
addr16
jle
rolb
or
frstor
dec
mov
mov
xchg
lock
xchg
dec
pop
clc
push
adc
dec
or
lret
dec
lods
outsb
push
sbb
je
cltd
adc
push
xchg
iret
fsubrl
pop
andl
addr16
xchg
jmp
mov
lret
or
shlb
mov
int
fstps
scas
mov
loopne
int3
js
lods
lahf
dec
mov
sbb
ja
ss
mov
mov
jecxz
sbb
adc
pop
pushf
jl
mov
addr16
iret
insl
daa
adc
pop
add
repz
pop
lcall
dec
adc
std
adc
mov
popa
and
test
leave
cmc
lods
imul
and
addl
and
test
std
cmc
sub
jmp
pusha
push
stos
out
adc
nop
push
pop
jns
mov
fcomi
push
push
fcomip
jmp
inc
xor
popa
dec
mov
addr16
mov
or
xchg
jecxz
lock
in
add
cmp
push
mov
sbb
add
pop
jno
lods
negb
arpl
and
sti
pop
cltd
jns
lret
sbb
ss
insl
incb
xchg
sbb
inc
cmp
lea
jne
mov
cmpsl
popa
shrb
out
fcmovnu
mov
dec
xchg
jbe
add
adc
outsb
pushf
and
dec
outsb
xchg
mov
pop
shlb
dec
mov
call
pop
pop
push
dec
sbb
lock
insl
cmp
xchg
js
addb
adc
xor
notb
imul
insb
mov
dec
out
adc
sbb
cmp
dec
inc
xor
pushf
call
rcr
xchg
jmp
cmp
jbe
mov
pop
adc
rcr
mov
mov
out
lret
fsubrl
cltd
push
mov
jmp
inc
test
aaa
and
scas
xchg
fs
test
xchg
xor
cli
enter
push
and
clc
jmp
in
ret
xor
xchg
pop
dec
pop
sub
mov
mov
jnp
aaa
jno
mov
mov
dec
cwtl
add
fimuls
sarl
adc
inc
out
sub
filds
fnstsw
push
cmp
fst
adc
push
pop
loope
dec
loopne
call
pop
xorb
inc
pop
xchg
inc
pop
ret
ljmp
push
cmp
push
xor
cmp
andb
or
xchg
jge
xchg
jmp
sbb
mov
xchg
pop
es
out
aaa
stos
test
sbb
adc
aad
negb
cmp
in
xor
fisttpll
or
dec
xchg
jbe
in
sti
sub
leave
mov
add
adc
push
push
pop
insl
inc
insl
fcomp
in
push
insb
jge
mov
push
mulb
aam
mov
sub
loopne
jle
mov
clc
push
mov
xchg
push
and
pop
sbb
out
iret
jp
xchg
inc
cmpsb
loope
mov
cs
cld
ret
dec
stos
aas
mov
sbb
jge
dec
cmp
xor
sub
shll
je
fsub
sub
data16
aad
xchg
addb
jecxz
iret
mov
test
cmp
loop
dec
mov
push
add
adc
aaa
into
fwait
clc
std
js
aaa
jne
add
pop
ds
sbb
cmpsb
scas
mov
cmp
sbb
dec
lret
push
adc
cmpsb
leave
into
leave
jmp
pop
sub
push
adc
inc
loopne
inc
inc
and
movsl
jp
adc
aad
xor
fcomps
jg
dec
lods
popa
imul
xchg
movsl
xchg
adc
add
pop
js
pop
inc
xchg
fadds
mov
out
xor
bound
add
repnz
sub
dec
jae
sub
xor
bound
lds
js
and
insb
test
sbb
xchg
jecxz
imul
xchg
ret
sti
xchg
clc
sub
shll
sub
fsubl
and
insl
pop
adc
loope
lcall
fistl
adc
in
pop
dec
sbb
das
and
mov
imul
cmp
jle
das
divb
xchg
and
or
add
add
push
icebp
sahf
jb
fldt
insb
push
push
xor
out
scas
and
mov
cmp
into
push
xlat
sti
sbb
pop
shrl
rcrb
sti
adc
or
bound
std
stc
mov
mov
xchg
testb
sub
ficoms
pop
cmp
sbb
dec
jg
add
adc
mov
cmp
fcomip
fisttps
out
out
and
mov
xchg
out
addl
or
sbb
pop
xchg
sub
test
outsb
sahf
xchg
sbb
scas
xorb
jg
mov
sti
lret
jmp
dec
sbb
in
int3
sahf
lret
gs
mov
jl
int3
popa
push
xchg
bound
lods
push
imul
or
iret
not
mov
push
fidivs
push
inc
xor
out
pusha
mov
push
hlt
pop
xor
clc
icebp
xlat
mov
mov
imul
or
sarl
sbb
jno
gs
andl
mov
rcl
cmp
leave
push
add
imulb
and
out
int3
sbb
mov
ljmp
sbb
mov
xorl
nop
repz
test
stos
es
mov
mov
enter
sub
fmul
pop
jg
inc
and
pop
push
sub
mov
lea
jbe
sub
cmp
or
cli
popa
xchg
mov
mov
stos
enter
outsl
movsl
movsb
sub
xor
add
outsb
in
test
gs
xchg
jl
orl
add
sub
mov
int3
xchg
rclb
int3
push
and
ret
sti
xchg
jno
and
jp
push
bnd
pop
or
aaa
call
jp
or
mov
mov
adc
and
scas
add
jl
mov
adc
push
sub
out
lret
add
loope,pt
addr16
adc
or
je
mov
fisttps
mov
adc
sub
push
jne
cld
lahf
mov
cmp
js
push
mov
loope
lock
dec
pop
pusha
xchg
adc
mov
xchg
imul
mov
mov
mov
and
outsb
adc
pop
mov
mov
out
dec
inc
jmp
push
jbe
and
je
into
imul
and
or
mov
in
into
dec
das
xchg
out
sbb
jbe
mov
dec
stos
sbbb
scas
lock
mov
imul
dec
lods
or
xor
xchg
sbb
mov
lahf
stos
ljmp
in
push
aas
push
push
dec
fistl
icebp
xor
xchg
push
in
orl
pop
scas
add
mov
push
imul
fwait
pop
fidivs
enter
adcb
mov
pop
and
das
cmp
xor
mov
imul
mov
sbb
rcrl
aas
nop
mov
iret
ja
bound
inc
jbe
add
and
cmp
sbb
clc
xor
sahf
xchg
test
fcomps
loope
fbld
adc
out
shrl
pop
test
leave
mov
mov
shll
push
bound
pop
psubusw
mov
and
jns
pop
mov
xchg
and
lret
mov
enter
lahf
jg
and
xchg
sbb
and
mov
aaa
test
sbb
jp
mov
cwtl
pop
aaa
bnd
es
add
mov
xor
outsb
dec
fwait
mov
rol
mov
std
and
stos
mov
fisubrl
add
adc
cmp
bound
loopne
dec
stc
mov
shrb
adc
fwait
mov
mov
movsb
mov
adc
testl
sarl
call
jmp
xor
inc
and
lcall
and
or
ffreep
fsubrs
push
push
dec
stos
xchg
repnz
cmpsb
xor
les
addr16
xchg
push
mov
push
xor
lods
pop
push
hlt
lret
jl
jbe
xchg
cmpsb
in
xchg
lock
lds
pop
add
ficompl
jmp
loop
or
inc
dec
mov
cli
push
fcomip
data16
push
aaa
mov
inc
cli
movsl
iret
xchg
pop
mov
adc
push
dec
loopne
ljmp
out
and
add
aas
ja
fidivs
ret
popl
into
shll
test
or
dec
mov
test
inc
pop
or
push
imull
xor
adc
dec
adc
or
jecxz
in
push
push
adc
pop
lcall
and
imul
lcall
das
bnd
mov
jle
xor
mov
and
pushf
shrb
or
leave
in
fwait
stc
sbb
shr
cmp
pmulhw
sbb
xor
mov
jg
insl
jg
test
test
push
cwtl
cs
leave
in
cmpsb
adc
les
xorb
adc
mov
int
sub
arpl
insb
xchg
mov
clc
push
push
fwait
ret
leave
xchg
and
bswap
fidivl
push
dec
push
sbb
pop
adc
rdpmc
mov
fwait
call
test
lods
in
mov
into
dec
push
hlt
adc
pop
sarb
sbbl
xchg
ja
cmp
or
cmp
xchg
inc
jbe
mov
insb
xlat
sbb
lock
add
xor
and
lods
adc
insb
mov
daa
fisubl
xor
jmp
pop
jle
in
jne
les
xor
cmp
shrb
jmp
mov
aad
sub
inc
pop
add
aaa
flds
out
xor
scas
cwtl
rcrb
mov
jecxz
lea
stos
mov
int3
add
out
incl
adc
push
scas
js
in
and
dec
pop
pop
inc
pop
movsl
xchg
mov
outsb
push
or
mov
jnp
dec
sbb
pop
inc
and
jnp
mov
mov
sub
fnstsw
dec
jae
adc
push
aam
movsl
pop
inc
out
xchg
inc
adc
and
pop
pop
pop
jp
ss
fwait
jns
mov
add
push
leave
out
addr16
mov
xor
sbb
ss
adc
lock
mov
and
or
inc
clc
jnp
pusha
xor
lahf
mov
int
jnp
shlb
cs
in
and
fs
lahf
adc
jmp
cmpsl
call
es
mov
or
cmpsb
fdivl
pop
pop
ror
adc
fbld
add
and
mov
mov
sub
rcr
aaa
push
mov
aad
jbe
push
js
leave
push
mov
cmpsl
cmp
adc
enter
mov
jb
cmpsb
mov
cltd
mov
jg
test
lods
bound
sbb
or
test
outsb
mov
mov
mov
rolb
sub
scas
jp
fisubs
repz
and
lock
sti
lret
cmpsl
popf
gs
mov
or
in
pop
dec
and
ljmp
dec
mov
pusha
add
pop
sub
out
lods
aad
aad
out
in
pop
jno
movb
or
fsubrs
push
mov
out
jo
and
movsl
mov
sub
sub
push
jg
inc
xchg
pusha
dec
in
inc
sbb
outsl
jle
push
inc
cmp
mov
cmp
lahf
sbb
lahf
cmp
sti
cli
pop
sbb
das
das
add
sbb
cmpsl
addb
inc
xchg
and
das
mov
shrl
pop
into
push
stc
lods
mov
inc
movsl
fst
in
adc
cmp
fistpl
fs
pusha
jl
sti
stos
sbb
js
mov
mov
push
xlat
xchg
xor
shlb
mov
popa
roll
add
cli
aam
in
jnp
fs
in
jmp
jae
dec
jbe
insb
push
hlt
test
sbb
dec
std
mov
xor
popf
jns
stos
mov
push
sub
sbb
adc
or
repz
mov
mov
push
cwtl
lret
aaa
int3
ficomps
sbb
adc
sbb
loop
inc
movsl
aam
or
lods
iret
xchg
mov
sbb
arpl
repnz
outsb
in
gs
das
fistpl
cmp
int
or
cli
scas
scas
xchg
mov
insb
jle
push
sbbl
jge
adc
pop
push
mov
sub
mov
mov
fs
jne
push
cmp
fs
xlat
sub
lock
cs
xchg
push
in
call
pusha
es
jnp
pop
lds
and
pop
std
xchg
xchg
mov
out
shll
filds
sbb
push
nop
stc
inc
jb
mov
iret
inc
lret
pusha
ljmp
mov
out
insl
mov
call
xchg
icebp
call
push
mov
pushf
or
ja
dec
popa
cli
cmc
jbe
lret
adc
ret
and
xor
arpl
push
in
mov
mov
pop
dec
sub
jge
xchg
mov
ds
mov
pop
cmc
pop
xlat
cmp
bound
sbb
or
dec
cmp
inc
leave
daa
arpl
insb
sub
and
jecxz
fadds
xor
xchg
faddp
out
add
mov
sbb
fimull
cld
aaa
mov
aas
lock
push
dec
ja
or
repnz
push
jmp
into
sub
orb
repz
jnp
shl
xchg
add
pop
dec
outsl
xchg
decb
insl
xlat
mov
xor
into
popf
out
rolb
xchg
pop
mov
mov
mov
enter
jg
inc
and
push
out
add
movsl
pop
adc
bound
mov
mov
push
scas
adc
pop
push
bound
fwait
pop
push
test
and
and
xor
std
stos
leave
pop
or
nop
add
mov
loope
sbb
fs
adc
jecxz
je
dec
les
stos
arpl
cmc
jbe
mov
sbb
push
shrl
shl
sarl
push
imull
in
inc
pop
stc
js
ja
addb
outsb
mov
scas
popf
lret
jle
in
add
dec
popa
cmp
insl
icebp
or
in
and
ficompl
ret
pop
add
sbb
aad
cld
js
jne
push
je
cmp
cld
lret
mov
mulb
in
lret
insl
jbe
sbb
cmpsb
pop
gs
ss
faddp
test
ja
pop
xor
push
dec
pop
mov
or
jnp
or
pushf
mov
fisubrl
not
and
jnp
addr16
popf
out
adc
mov
push
pushf
sub
sbb
inc
insl
dec
jno
das
dec
jns
pushf
cmc
push
idivb
loopne
jle
ja
cmp
cmp
lret
ret
push
out
dec
ljmp
leave
cmpsl
lea
bndldx
adc
sub
jns
arpl
inc
imul
pop
push
inc
mov
bound
xchg
outsb
ljmp
mov
rcr
out
lret
inc
mov
sbb
mov
ja
dec
jmp
test
test
iret
cmp
rcrb
mov
xor
stos
cmp
cmp
add
or
rolb
mov
or
mov
ds
mov
mov
cmp
sbb
fwait
and
ja
pop
cmpsl
pop
outsl
in
je
push
in
sti
fimull
sub
dec
rcrl
test
pop
jecxz
call
jbe
ss
rorl
lds
dec
popa
outsl
in
out
pop
shrl
xor
addr16
mov
push
std
pop
adc
stc
add
mov
fnstenv
or
mov
mov
pop
addr16
fdivl
mov
adc
cmpsl
inc
jns
icebp
lea
repnz
mov
xchg
movsb
int
fcomps
outsb
adc
sahf
adc
sub
aas
or
lods
data16
cwtl
mov
ljmp
imul
outsl
jno
adc
or
jns
dec
adcb
xlat
pop
loop
cmp
mulb
js
out
inc
icebp
cmp
sbb
sub
dec
or
movhps
sbb
or
push
aas
frstor
sbb
pop
jbe
push
fimull
cltd
cs
inc
pop
adc
cld
sahf
sub
shrb
sbb
subb
cltd
cltd
mov
scas
sub
cmp
pop
cmc
lret
jns
mov
sbb
add
push
fildl
pusha
xor
shl
popa
sbb
jb
outsl
test
sub
imul
xor
cli
adc
jle
fsubrs
jo
outsl
add
int3
cmpsb
int
cwtl
shl
dec
push
add
jl
aad
xor
in
and
push
and
jns
sub
jle
lods
clc
mov
push
test
push
insl
jmp
movsb
cmc
addr16
jmp
inc
enter
fldcw
fsubl
mov
popa
and
xor
lahf
sub
push
ljmp
xchg
push
out
pop
call
cmpb
arpl
and
mov
jne
test
clc
inc
jno
xchg
loope
shlb
std
fisubl
insl
dec
cmp
adc
shll
mov
sub
mov
sub
roll
aam
loopne
inc
bound
movsl
mov
add
push
cmp
into
xor
add
push
or
pop
jp
js
jne
cmp
andb
pop
pop
daa
test
sub
mov
mov
popf
fcompl
lods
xor
in
or
fsub
enter
and
lea
xor
imul
and
xchg
fistpll
test
dec
pop
jecxz
cmpsb
insb
gs
bound
xchg
sbb
xchg
lret
inc
in
mov
or
add
lods
xchg
in
mov
cmc
ret
push
pop
fcoml
adc
fisubs
inc
pop
push
testb
pop
mov
loope
mov
mov
in
jnp
adc
fsubrl
in
paddsb
stos
in
xorb
add
pop
add
repz
inc
test
push
inc
lds
jmp
cli
ret
mov
xor
fdivs
cltd
out
mov
xchg
xchg
mov
fisttpll
mov
push
lods
lods
mov
push
lods
iret
scas
lahf
call
fnsave
jne
in
and
xor
xchg
popf
xchg
dec
dec
cmc
out
lahf
test
jno
xor
addr16
lods
jnp
mov
xor
iret
cmp
pop
push
out
gs
jge
inc
shlb
repz
xor
jnp
fs
inc
add
jo
shl
icebp
je
cwtl
xchg
adcl
imul
and
insb
scas
in
fstpl
xchg
scas
or
jo
out
xlat
mov
jns
xor
fstps
sub
pop
adcb
fbld
or
dec
mov
mov
sub
call
pushf
leave
xchg
lock
fidivl
outsl
sbb
jge
jbe
stos
push
test
xchg
inc
addr16
rorl
xor
shlb
cmp
mov
cs
mov
adc
add
xchg
cmp
xchg
iret
inc
aas
add
jbe
xchg
push
and
jecxz
ja
jno
push
popf
lret
in
and
movsl
and
imul
push
or
pop
inc
cmp
imul
mov
test
cld
xor
lret
dec
cltd
inc
pop
jne
sbb
dec
imul
les
jbe
sahf
stos
xlat
fstl
das
mov
cmpsl
data16
xor
fisubrl
xor
jecxz
out
aas
pop
dec
cltd
movsb
jmp
pop
mov
xchg
movl
mov
sub
insb
stc
pop
sbb
outsl
pop
hlt
adc
mov
stc
xchg
loopne
dec
adc
mov
insb
cltd
inc
lahf
cltd
aam
cmp
jne
iret
dec
xchg
push
pop
sub
pop
mov
sub
mov
inc
mov
xor
idivl
adc
mov
mov
aaa
push
loopne
inc
pusha
pop
or
iret
loopne
mov
jbe
sub
shl
sub
ffreep
push
add
mov
cli
xor
mov
out
or
sbb
xchg
iret
push
bound
repz
enter
sub
mov
pop
adc
add
leave
xchg
sbb
push
xchg
inc
scas
jbe
in
add
mov
repnz
ja,pn
insb
popf
sub
pop
mov
inc
pop
mov
add
lret
pop
mov
mov
jne
js
adc
push
mov
add
fincstp
stos
mov
xor
inc
aaa
mov
lods
rcl
insl
mov
push
testl
popa
mov
andl
mov
mov
into
mov
je
in
or
je
dec
jbe
dec
xchg
pop
shrl
cwtl
push
sbb
data16
mov
ljmp
mov
psrlq
fwait
pop
bound
aas
pop
jb
mov
ret
mov
aad
fs
pop
loop
fs
xor
push
cmp
cli
xor
sbb
mov
and
jnp
dec
xchg
adc
sbb
and
cmpsb
ljmp
ficomps
xchg
nop
scas
mov
outsl
xchg
add
mov
or
mov
adc
dec
xchg
andb
imul
loopne
imul
pop
add
jmp
int
loop
dec
push
and
dec
outsl
in
clc
mov
sbb
fisubl
push
cmp
pop
pop
mov
push
sbb
xchg
mov
addr16
inc
jbe
pop
push
cwtl
and
insl
and
cmp
clc
adc
push
or
jg
cmp
xchg
in
daa
adc
cli
and
pop
jb
movsb
pop
inc
out
xor
movsl
in
std
xchg
pop
mov
mov
pop
inc
ret
ds
rorl
sbbl
adc
outsb
leave
pop
jmp
push
dec
fimuls
rcll
cmp
sub
ljmp
rclb
add
lret
ret
icebp
cmp
lods
fstps
aas
dec
xor
ss
bnd
fcmovb
fs
mov
pop
dec
movsb
fs
test
xlat
lds
push
leave
fs
xchg
dec
pop
enter
lock
jmp
dec
push
xchg
jb
jnp
sbb
add
fs
mov
cmp
stos
push
mov
addr16
mov
orb
mov
xchg
out
out
xor
cmp
add
cltd
fmuls
push
mov
sub
jnp
aad
inc
mov
aam
mov
jno
add
xchg
fldenv
fidivrl
sahf
lock
sti
sbb
push
cmp
xorl
push
pushl
bound
push
sbb
aad
rolb
sahf
lock
cmc
rcll
sbb
fists
jno
jecxz
fsubrs
adc
adc
pop
cmp
xor
cwtl
and
es
push
roll
push
loopne
in
mov
mov
sub
mov
dec
idivl
mov
pop
jge
test
shll
pop
mov
out
insb
jae
test
push
add
scas
jmp
mov
cmc
sbb
ljmp
pop
inc
hlt
out
mov
jnp
dec
sub
clc
jne
int3
inc
cmp
and
ljmp
add
xchg
mov
int
loopne
mov
adc
pop
loope
ss
scas
bound
pushf
push
xlat
rol
hlt
adc
push
jmp
es
das
and
xchg
gs
push
loope
jns
mov
mov
mov
test
cmp
inc
aas
pop
fs
xchg
cwtl
mov
or
or
cmpl
out
mov
lret
mov
lret
pusha
fildll
cmp
hlt
cwtl
out
neg
ret
notb
add
sub
pushf
stc
xchg
xlat
call
insb
xor
push
subb
lods
jg
dec
xchg
mov
xchg
movb
movsb
xor
call
mov
dec
xchg
aas
icebp
add
and
into
jb
dec
sub
hlt
dec
cmp
or
addb
cmp
cs
jno
lahf
jg
rorb
out
dec
and
scas
loop
cmp
mov
cmp
inc
in
cld
dec
pop
ss
fisubs
xor
fistl
bound
xor
sub
mov
cmpb
jp
xor
mov
test
mov
inc
xchg
mov
addr16
adc
add
xchg
push
xorb
pop
mov
sbb
adcl
rol
pusha
or
and
lock
jae
stos
adc
in
jmp
mov
push
test
ljmp
int3
mov
sti
adc
mov
jl
cmpsl
loopne
icebp
mov
mov
mov
leave
xor
or
sub
leave
push
sbb
testl
dec
rcl
jb
repnz
pop
pop
std
sbb
xlat
out
mov
cld
stos
lahf
and
mov
adc
xchg
dec
push
ljmp
cmp
cli
mov
sbb
adc
fs
stos
xor
jne
and
addr16
movsl
das
push
xchg
push
ds
adc
xchg
sbb
daa
filds
cwtl
inc
in
jp
ret
aaa
cmp
int3
inc
or
mov
push
mov
aad
out
lcall
loope
add
or
lods
sbb
outsb
cltd
std
icebp
mov
xorb
in
cmp
cmp
loopne
daa
pusha
sahf
fsubs
les
sbbl
fisubrs
std
in
pop
or
mov
sahf
pop
cmpsb
sbb
push
loop
scas
pushl
jns
mov
stc
push
cmp
aaa
fistps
fadds
les
and
addr16
arpl
lds
shll
sbb
aad
stc
out
divb
aaa
xrelease
divl
and
scas
mov
scas
xchg
jg
scas
xchg
pop
cmp
and
imul
not
xchg
adc
fisubl
adc
lcall
sti
inc
int3
mov
push
aaa
adc
push
hlt
mov
push
popa
sub
addr16
imul
dec
mov
iret
mov
adc
movb
aam
orb
mov
add
scas
mov
lahf
mov
test
sbb
rcll
ret
insb
mov
jg
movsb
fsub
mov
sbb
rcrl
cwtl
mov
jle
jno
mov
hlt
cld
add
andl
xchg
cltd
jb
inc
ret
sub
sbb
gs
leave
daa
lret
or
mov
pusha
or
sbb
out
out
xchg
jg
mov
out
mov
cwtl
mov
outsl
inc
or
decl
or
inc
shrl
js
jg
pop
sbb
or
adc
inc
sub
imul
cmp
cmpsl
mov
push
daa
iret
outsb
aas
xchg
or
fstp
inc
inc
jno
xchg
iret
xor
jl
rolb
mov
jl
pop
mov
pop
adc
push
cmpl
mov
pop
jne
or
dec
sub
inc
mov
mov
xlat
mov
call
out
and
cmp
pop
xchg
xchg
mov
shl
ret
adc
pop
fwait
aaa
les
jae
fildll
cmp
pop
je
loope
push
and
xchg
imul
pop
cli
out
mov
test
and
or
cmp
loopne
dec
cmp
or
scas
pop
and
fsubrl
cmpsl
push
sbb
in
sahf
aam
cmp
jnp,pt
dec
xchg
inc
loope
jae
add
dec
cmp
outsb
cwtl
push
lods
and
inc
cmp
adc
popa
pop
iret
push
push
psubb
mov
inc
cmp
fldt
push
mov
in
mov
cmpsl
jae
inc
out
sbb
jbe
fisubs
and
xor
xlat
dec
rcrl
or
sbb
cmp
mov
mov
ret
adc
jge
jp
mov
pusha
nop
fiaddl
or
mov
jg
out
lods
mov
mov
mov
test
lods
jle
mov
add
inc
xchg
mov
push
or
imull
test
into
sub
push
push
lret
fs
mov
xchg
inc
bound
rclb
fmuls
push
push
inc
sub
xor
mov
je
xchg
push
loope
mov
pop
xor
sub
mov
icebp
pop
adc
cmp
push
xchg
pop
push
xchg
clc
cli
test
fisubrl
out
inc
cli
or
imulb
mov
pop
sbb
sbb
mov
popa
xchg
in
inc
cmp
mov
ljmp
xchg
out
xor
xor
sub
cmpsl
pop
repnz
int3
inc
sbb
lahf
divl
and
mov
sub
addb
cmc
mov
jbe
std
sbb
cmpb
ret
out
sub
dec
sbb
pop
leave
inc
jnp
mov
push
lods
pushf
mov
mov
cmpsl
rcrl
jmp
pop
pop
add
jmp
xchg
mov
fbstp
lcall
push
test
pop
sar
sub
mov
and
js
icebp
pop
pop
xchg
popa
test
insb
jmp
jecxz
sbb
enter
cmpb
inc
in
xchg
and
bound
clc
push
gs
mov
shll
outsl
cltd
mov
jmp
sub
repz
mov
mov
movsb
mov
fldt
rorl
data16
loopne
mov
popa
cmp
test
mov
inc
sar
cmp
ljmp
lret
scas
xchg
pop
ret
cmp
lods
rcrb
shr
and
pop
jo
or
clc
pop
sub
rolb
push
aaa
cltd
inc
test
inc
jecxz
jge
push
test
cmc
sbb
and
lock
xlat
lds
icebp
mov
mov
pushf
xor
pushf
mov
push
bound
es
fstps
fstpt
flds
inc
fisttpl
push
or
xor
cmpsb
mov
jg
into
mov
icebp
test
les
outsb
pop
outsb
sbb
mov
sbb
jge
or
dec
insb
aam
inc
adc
push
jmpw
jecxz
ret
sub
outsl
int3
or
mov
and
sub
jmp
loope
cmp
jns
ja
cmp
cs
pusha
mov
push
push
xchg
sub
pop
in
cmp
push
and
push
sbb
mov
sbb
popf
or
insl
fsubrs
xchg
in
push
mov
xor
clc
insl
cltd
movl
sbb
jg
je
aas
rclb
shrb
in
adc
inc
daa
insb
mulb
mov
mov
outsl
push
xchg
jbe
adc
pusha
popa
xchg
sbb
push
mov
nop
add
lods
lcall
mov
cmpsb
sub
std
clc
and
addr16
loope
xchg
in
inc
sub
repnz
push
xor
xor
inc
clc
mov
shrb
lret
cltd
shrb
es
out
xchg
sbb
fistl
scas
test
jmp
dec
loopne
test
insl
repnz
mov
cmpsl
stc
xor
jmp
mov
pusha
cli
cmp
cmp
repz
arpl
xchg
test
imul
fdivr
push
pop
mov
mov
add
mov
mov
iret
and
pushf
cmp
out
stos
popa
shl
cli
jbe
jnp
nop
or
jbe
idivb
mov
filds
sti
push
outsb
or
shrl
and
mov
sbb
pop
gs
add
aam
test
or
popf
xchg
mov
stc
jo
sbb
pop
icebp
enter
adc
stos
inc
adc
push
iret
mov
jns
lcall
dec
das
mov
mov
push
or
les
jmp
pop
mov
and
mov
pop
push
cmpsl
xor
test
jno
sbb
xchg
inc
cs
je
fldcw
jno
dec
pop
sub
addr16
mov
aaa
pop
je
iretw
or
insb
inc
or
dec
inc
lcall
cmp
push
or
fldcw
mov
mov
push
popl
stos
int
pop
fisttps
xor
int
xor
cmp
shl
hlt
cmpsb
stos
cmp
jbe
in
lock
cmp
dec
cmp
or
xchg
inc
mov
lret
push
daa
jb
adc
sbb
jge
cmp
xchg
mov
test
sub
pop
push
mov
add
adc
clc
bound
jle
fdivrs
fisttpl
cltd
lret
fxch
imul
add
popf
push
popa
sbb
ja
ja
pop
xlat
xchg
xor
cmp
lret
mov
fwait
push
mov
test
das
iret
sub
ljmp
pusha
cs
popa
pop
pusha
roll
sub
outsb
adc
push
pop
scas
movzbl
jne
out
std
lahf
cmc
pop
inc
shr
mov
cwtl
cs
pop
retw
push
mov
mov
jg
cmpb
in
inc
dec
popf
aam
inc
dec
gs
lock
jb
lods
dec
xor
shrl
dec
and
jo
fnstenv
cltd
insl
fisttps
mov
imul
mov
jo
test
cmp
jg
lahf
daa
ds
jae
adc
mov
rcpps
mov
pusha
xlat
push
and
pop
imul
mov
fdivrl
mov
mov
jle
into
shll
scas
stc
xchg
cmp
repz
adc
mov
cmp
test
push
cmc
xor
sbb
int
aaa
jae
pop
imul
dec
xchg
ret
dec
sbb
add
push
pop
jl
out
push
add
dec
pop
xchg
bnd
mov
out
orl
cwtl
mov
dec
jl
out
lea
shll
adcl
push
int3
pop
mov
ret
mov
xchg
jp
clc
jg
and
sub
int
cld
adcl
nop
into
pop
stc
pusha
dec
stos
imul
jbe
dec
ret
mov
arpl
mov
mov
inc
xchg
lea
das
adcb
fwait
xchg
cmp
stos
cli
dec
dec
outsb
and
lock
imulb
orl
in
inc
mov
push
subl
lods
jo
aad
data16
pop
popa
int3
adc
shlb
pop
push
cmp
subb
and
mov
add
enter
mov
mov
or
xchg
push
inc
dec
pop
pop
shr
ror
inc
or
cmpsb
gs
mov
mov
xor
sub
mov
sub
sub
or
mov
in
push
jmp
xor
jo
and
es
xchg
sti
mov
push
and
out
pop
iret
jle
inc
lahf
mov
stos
insb
lahf
inc
cld
mov
mov
cli
int3
mov
pusha
fstpt
fst
daa
cltd
lahf
add
mov
xchg
push
fs
mov
bound
sub
js
add
mov
adc
add
lods
enter
mov
cltd
dec
into
and
mov
pop
sbb
xor
ficoms
hlt
mov
sbb
pop
test
jno
push
out
inc
lret
scas
push
js
cs
addl
insb
push
test
push
popa
sbb
icebp
int
or
test
lcall
neg
stc
jbe
ja
xor
pop
mov
or
add
adc
addr16
inc
stos
jecxz
xchg
mov
fisttps
popa
add
and
mov
aam
push
push
sti
push
mov
nop
sub
fsubrp
xorl
out
call
roll
sub
cltd
dec
push
mov
mov
or
in
add
inc
mov
push
xchg
lods
cld
out
int
subb
in
rorb
xlat
stos
mov
cmp
daa
lock
jne
in
fwait
push
js
push
rcrl
mov
loop
fists
ss
cmp
push
mov
lahf
shl
add
adcl
icebp
lret
inc
push
das
jg
lret
mov
lods
mov
insl
sti
xlat
jno
mov
fwait
clc
sub
js
push
add
imul
inc
sub
fisubrs
sub
scas
dec
and
push
fmuls
cltd
cmp
or
push
aam
jo
mov
xchg
nop
xorl
sti
inc
adc
mov
pop
xchg
fs
movsb
iret
mov
lods
cmp
and
ret
sub
and
xchg
pop
cmpb
dec
dec
jmp
fsub
in
sbb
nop
mov
ss
stos
jmp
mov
sub
mov
arpl
sti
pop
sub
dec
ss
xchg
popf
sbb
in
sub
mov
outsb
shrl
mov
inc
addl
xorb
imul
stc
pop
stc
jcxz
js
mov
sbb
sbb
dec
mov
into
push
imul
je
fcomps
and
cmp
sub
mov
xchg
shll
fs
mov
cmp
cmp
out
cli
das
outsb
cmp
imul
subl
addl
out
es
jge
push
test
push
cmp
inc
iret
loopne
pop
push
and
push
repz
mov
pop
jno
mov
mov
mov
add
and
xchg
sahf
fcmovnb
stc
scas
iret
outsl
lret
insb
pop
popf
out
dec
fucomip
clc
xchg
mov
ljmp
loope
aam
inc
aaa
clc
dec
adc
call
push
int
fwait
fwait
mov
cwtl
adc
sub
in
push
ror
cmp
jecxz
fisubs
mov
cmp
sbb
mov
or
nop
xchg
movsl
sub
jno
lahf
jno
pop
pop
mov
add
jne
repnz
mov
and
pushf
sbb
xchg
pop
xlat
jnp
sahf
sti
std
lods
adc
sarl
sahf
mov
push
out
sbb
sub
gs
ffree
add
call
cs
outsl
xor
negl
push
inc
in
dec
ja
aad
add
lahf
push
loope
dec
dec
jl
cmp
ret
add
inc
jge
mov
test
mov
popa
add
and
push
push
mov
xchg
add
aaa
bound
push
aaa
in
push
movsl
xor
sub
mov
pop
cwtl
mov
mov
es
in
inc
and
out
fucomip
icebp
xor
xchg
cmc
push
rcr
test
mov
adc
mov
imul
or
mov
xchg
cli
mov
cmp
push
bound
xchg
mov
lea
push
cli
mov
sbb
push
pusha
out
icebp
inc
in
add
cmp
adc
mov
outsb
xor
sbb
xor
mov
pop
xchg
mov
std
add
sbb
cmp
test
shlb
fwait
add
insl
fcoml
js
mov
pop
add
xchg
stos
rcrb
xor
fisubrs
mov
rcrl
mov
addb
shll
xchg
jb
push
movsl
inc
push
jne
dec
outsl
dec
mov
stos
movb
jle
mov
sub
ds
mov
sbb
cmp
fstps
ret
push
cs
pop
ja
dec
push
push
or
pop
sub
mov
roll
inc
shrl
ret
pop
cmp
push
fbld
adc
push
iret
mov
enter
in
int
or
cmpl
xchg
bound
dec
test
stos
pusha
sub
cli
xor
lret
aam
add
adc
mov
sub
dec
cmp
jg,pn
fcoml
add
jns
sbb
lret
ss
aad
add
or
push
pop
mov
cmp
nop
jnp
push
in
dec
mov
xchg
mov
repnz
mov
and
in
dec
xchg
jno
pop
mov
subb
lock
xchg
out
and
adc
std
scas
int
sub
pusha
cmp
lods
inc
pop
push
add
and
xchg
pop
jbe
sbb
cmpsb
outsb
nop
movb
inc
sbb
ja
push
test
add
cltd
lret
push
outsl
mov
fisttpl
mov
sub
bound
dec
fildll
cld
addb
xchg
cwtl
jl
les
shlb
adc
pop
fcompl
mov
out
jb
in
into
pop
sbb
ficomps
rcr
in
lcall
adc
movsb
movsb
clc
sbb
in
xchg
repz
pop
lahf
test
lahf
dec
mov
xchg
mov
mov
mov
mov
and
xchg
pop
dec
mov
xchg
sarl
xchg
xchg
sbbl
loopne
add
dec
xchg
dec
je
fistps
shlb
adc
aad
movsb
rcrb
imul
mov
bound
or
cmpsb
bound
icebp
sub
sbb
cs
ljmp
pop
push
adc
and
pop
imul
add
stos
pop
into
sbb
jae
pop
inc
sbbb
adc
ja
dec
movsl
test
jns,pt
mov
jle
push
push
jbe
push
lods
inc
jno
scas
cs
stos
mov
or
dec
call
out
and
addb
xchg
adc
xlat
sbb
mov
movsb
cmp
rorl
insb
mov
xchg
or
out
xchg
fisttpll
sbb
arpl
jg
inc
stos
out
or
cmp
xlat
les
push
in
xor
lcall
sub
mov
repz
mov
or
add
ret
iret
cltd
inc
ds
inc
scas
ljmp
or
cli
push
scas
mov
jno
cmp
mov
add
inc
push
dec
mov
fwait
divb
mov
push
add
pop
mov
loopne
inc
mov
mov
mov
mov
jae
sub
dec
repnz
push
test
lods
xchg
dec
or
jl
xor
sbb
call
push
push
movsb
cmp
aam
sti
push
jl
lods
pop
adc
mov
dec
xchg
sbb
mov
pop
xlat
jge
insb
jmp
xchg
xor
mov
arpl
orb
pushf
jnp
jmp
inc
add
fidivs
inc
cmp
je
idivb
movsb
leave
xchg
aaa
mov
dec
rcrl
mov
cwtl
lahf
jp
mov
inc
outsl
ds
xor
sub
mov
in
mov
add
divl
nop
lds
push
and
gs
aaa
mov
in
sahf
addb
cmp
jo
mov
daa
lret
leave
lods
mov
jnp
push
jecxz
xor
lods
push
mov
xor
or
jecxz
std
pop
mov
cmp
pop
arpl
xchg
mov
movsb
sbb
push
push
mov
jnp
fnsave
mov
pop
cmp
fs
shlb
jae
jp
lahf
decl
mov
ljmp
inc
dec
jns
sub
fwait
fwait
sbb
mov
imul
imul
call
jns
pop
pusha
dec
rclb
hlt
sub
bound
and
cwtl
xchg
jecxz
mov
cmp
dec
mov
cmp
jnp
andl
insb
dec
imul
push
out
mov
push
jne
adc
les
or
jmp
leave
aaa
inc
mov
enter
leave
sbb
lea
ljmp
sbb
jmp
jg
dec
sbb
ret
or
scas
sbbb
sub
fbstp
jl
jg
sahf
mov
incl
jnp
cmp
leave
adc
cltd
repnz
mov
adc
insl
popa
cmp
mov
negb
daa
xor
or
xchg
fcomps
push
or
or
sbb
in
subb
xchg
sarb
pop
mov
xlat
cmp
sarb
rorl
ljmp
pop
mov
jns
sub
mov
icebp
andl
rcrb
gs
lret
mov
lods
jecxz
cli
arpl
or
addb
ss
pop
xor
push
aad
xor
add
adc
push
dec
inc
arpl
lds
jmp
popa
mov
xchg
xchg
cs
sub
xor
jecxz
ljmp
in
add
pop
adc
inc
out
pop
mov
out
hlt
std
pop
and
leave
cmpsb
xor
xchg
sbb
aas
in
mov
sub
rcr
imul
pop
hlt
mov
sub
dec
jnp
movsl
sub
xchg
loop
in
es
rclb
cwtl
cmp
push
imul
inc
add
mov
pop
inc
popf
das
mov
sub
addr16
jle
push
cmp
jmp
and
sub
adc
cltd
cwtl
sarb
add
push
repz
pop
cmpsb
pop
push
xchg
es
lahf
fstpt
das
dec
mov
loop
mov
loopne
cld
jbe
sahf
sub
jge
jg
push
hlt
dec
adc
rep
and
repz
mov
mov
leave
aam
fimull
cmp
dec
xchg
sub
mov
aam
dec
stos
sti
or
xchg
outsb
or
mov
mov
lock
dec
jg
hlt
jmp
out
stos
popf
jae
mov
mov
incb
jp
mov
lods
sub
sahf
mov
fnstenv
shlb
bound
mov
loop
mov
mov
std
sbb
das
lods
jmp
ss
adc
mov
iret
add
popf
xchg
ljmp
mov
es
add
mov
nop
push
sbb
jge
sahf
fs
test
add
rcll
js
cmp
jp
pop
es
push
xor
inc
push
xor
dec
mov
repz
push
andl
mov
int
jmp
cli
ss
lea
jbe
hlt
jg
pop
mov
shll
out
mov
out
mov
ljmp
fcmovne
inc
push
repnz
es
xchg
clc
inc
ljmp
push
stos
xchg
cli
mov
and
lret
xor
orb
xchg
lea
mov
test
jnp
rcl
ds
imul
ret
shr
fildll
aam
dec
push
or
adc
jno
daa
jg
xchg
sub
dec
dec
ror
stos
fprem1
cmp
and
ficoms
sti
lock
insb
add
pop
mov
and
stos
aas
test
cmp
popl
mov
mov
push
cmp
cltd
dec
in
push
jg
pop
mov
fbld
push
mov
adc
xchg
mov
pop
cmp
mov
dec
mov
outsb
push
loope
icebp
jp
lds
mov
or
dec
aas
fisubs
cmp
orl
mov
lea
loop
mov
and
jno
movsl
and
mov
mov
movsb
jno
cli
fildll
outsb
and
sub
repz
sahf
push
push
xchg
je
mov
cwtl
mov
js
push
lret
mov
push
pop
xchg
cmc
subl
and
dec
mov
lods
in
mov
xchg
xchg
scas
insb
std
imul
cmp
int
push
push
pop
push
sbb
fidivl
mov
in
pop
and
push
outsl
daa
jmp
aam
pop
xchg
in
in
jno
dec
cmc
push
sub
loop
mov
push
sbb
fwait
sbb
inc
hlt
mov
int3
daa
mov
inc
push
adc
jns
out
jmp
xchg
dec
cmp
cld
pop
je
int3
movsl
test
sbb
gs
and
push
inc
lods
sbb
insb
or
movsb
repnz
sub
xchg
popa
sbb
add
inc
aas
xor
aaa
adc
mov
or
xor
jae
test
lea
mov
fiadds
mov
cmpb
push
cmp
adc
mov
and
das
fldenv
cmpsl
dec
fs
dec
inc
ljmp
mov
insb
loope
out
mov
sti
xchg
pop
les
addb
test
push
jge
push
imul
call
pushf
pop
cmp
or
or
push
pop
lods
arpl
repnz
sti
insl
mov
inc
insb
out
out
sub
mov
mov
adc
andb
dec
jae
jp
pop
nop
out
push
pop
sbb
outsb
aam
sbb
into
pop
xor
in
xlat
rcrb
dec
nop
sub
inc
ja
add
or
push
sub
push
stc
cli
fldenv
mov
adc
mov
aam
fisttpl
mov
call
xchg
xchg
cmp
xchg
cli
push
adc
xchg
adc
mov
mov
jno
into
or
adc
movsb
push
mov
cmc
xchg
nop
test
sbb
mov
push
ja
test
mov
scas
test
shll
rcr
xor
push
jl
pop
sub
pop
jae
mov
dec
xchg
xorl
sub
scas
shlb
cmp
test
icebp
mov
outsl
and
outsl
and
or
push
ljmp
movsb
dec
scas
xchg
push
cmp
inc
inc
push
js
xor
pop
in
out
cmp
mov
or
jle
cmp
inc
cmp
or
mov
adcb
adc
inc
xor
in
mov
imul
xchg
fxch
nop
loop
add
inc
xor
lds
lcall
sbb
loop
lcall
inc
popa
add
mov
xor
add
jg
cmpsl
push
movsl
adc
adc
add
sbb
sub
shrb
testl
pop
enter
lds
dec
jns
pop
or
sub
or
mov
fsubrs
jns
movsl
cli
out
mov
xchg
test
jge
iret
lret
pushf
cmpsb
shrl
aad
sbb
cli
jl
xlat
mov
mov
inc
out
push
stos
xchg
pushf
ss
bound
lods
les
mov
int3
jae
xchg
xor
pop
dec
mov
scas
mov
and
lea
mov
dec
jl
push
jge
pop
fs
mov
in
adc
dec
add
out
stc
mov
sub
jns
xor
insl
fs
call
out
jne
in
mov
lds
inc
scas
popf
adc
mov
out
add
inc
or
xchg
adc
fildl
mov
popf
mov
cmc
xchg
inc
roll
stos
lcall
popw
data16
cs
cmp
sub
xor
xor
jge
and
in
aam
andl
or
imull
and
bnd
or
lds
jg
mov
int3
call
stos
push
stc
adc
lahf
cwtl
bound
aas
aas
cwtl
push
test
shlb
shlb
imulb
push
cmp
sbb
inc
out
jmp
jo,pn
neg
pop
inc
sar
negb
dec
xor
jno
mov
scas
bound
jle
adc
stos
out
inc
jl
aas
int3
cmpsb
rorl
hlt
and
jnp
dec
or
inc
lcall
mov
jmp
mov
jl
or
jmp
add
xchg
pop
sub
pusha
cmp
or
xchg
cmp
jnp
or
repz
sahf
jl
notb
jg
rorl
in
outsb
int3
pop
cmp
cmpsl
push
iret
or
inc
or
rcll
sub
mov
inc
dec
das
fwait
and
test
xchg
clc
jg
add
adc
or
cmp
mov
stos
mov
add
idivb
push
inc
dec
xor
and
pop
cld
cs
mov
sbb
aas
and
mov
movsb
gs
shrb
scas
shrl
je
popa
ret
pushf
jmp
sahf
in
cmp
addr16
jbe
out
cli
sub
dec
xchg
stos
xchg
mov
nop
fnstcw
or
sub
mov
ss
sarb
dec
sbb
mov
data16
pushf
loopne
rcrl
jne
jl
aaa
jo
mov
pushf
ljmp
ja
sub
and
and
sar
add
cmp
sti
and
in
push
mov
jle
mov
cmp
push
push
dec
test
mov
adc
mov
mov
jecxz
enter
jnp
rorl
cmp
xchg
outsl
gs
hlt
daa
mov
movsb
push
mov
fistpl
pop
mov
push
cli
fstpt
jbe
xchg
int3
test
jp
mov
aam
xor
push
in
xor
xor
mov
and
aaa
push
loop
int
xor
dec
adc
movsb
in
ja
or
imul
hlt
or
fdivrp
mov
scas
mov
dec
jne
jbe
jge
iret
jns
fcoml
ret
adc
lods
sbb
push
mov
jb
mov
lret
xlat
lret
or
mov
cmp
pop
pop
mov
ret
mov
dec
cmp
lahf
mov
adc
mov
add
rcrb
test
or
mov
xchg
ret
imul
int3
cmpsb
jnp
mov
inc
stos
pushf
mov
sub
cmpsl
sbb
xor
sbb
testb
test
xchg
sbb
out
push
ja
sbb
cmp
xor
aaa
mov
aam
jmp
xlat
push
loope
sahf
fadds
mov
xchg
adc
sbb
aad
sbb
pop
inc
lods
insl
pusha
jp
scas
dec
mov
fidivrl
jns
push
dec
pop
dec
mov
cmp
jecxz
mov
lods
lds
sbb
or
xor
stos
cmpl
xchg
sub
add
mov
dec
paddw
insl
inc
dec
mov
pop
jecxz
negb
sub
push
mov
sub
inc
mov
ja
inc
loop
sub
lret
jns
lock
aad
pop
ljmp
mov
adc
popa
jle
and
push
adc
pop
jb
cld
pusha
mov
mov
pop
and
adc
or
cmpl
lods
divl
lret
sbb
cli
sti
mov
insb
inc
movsl
sarb
xchg
xchg
call
add
mov
insl
jne
xchg
mov
mov
shlb
mov
leave
and
inc
arpl
clc
xchg
xchg
push
out
and
xchg
mov
pop
mov
sbb
mov
push
xor
xchg
ficoml
scas
inc
mov
mov
xor
adc
and
inc
insb
sbbb
lahf
aad
and
cmp
xchg
dec
inc
ficoms
jmp
mov
mov
jbe
loope
ret
notl
xlat
int
iret
test
iret
dec
test
fnstenv
or
xchg
inc
pushf
call
lret
add
push
mov
dec
lahf
sbbb
cmpl
stos
pop
outsb
lcall
cmpsl
dec
or
inc
mov
inc
dec
fstpt
adc
mov
xor
pop
fxch
add
jl
push
and
mov
push
out
adc
xor
cmc
imul
incb
movsb
cmp
sbbl
int
mov
jl
mov
dec
inc
mov
and
test
lret
jl
lret
or
rorl
shll
jns
sti
or
mov
sbb
pop
movsl
shlb
test
xor
nop
ds
loopne
inc
into
gs
out
hlt
push
jae
sub
push
dec
adc
mov
int3
jmp
add
shr
sarb
std
dec
je
pop
mov
mov
mov
das
add
cmpsb
test
pop
push
jo
cmp
imul
jb
xchg
xor
lods
fwait
imull
cmp
sub
bound
sahf
add
mov
sub
pusha
loopne
mov
sub
iret
incb
bound
imul
jmp
pop
cltd
lahf
mov
repz
sbb
push
sub
pushf
pop
sub
mov
push
cmp
rorb
dec
jne
in
xchg
push
xor
shlb
popf
adc
cltd
cld
mov
sub
jl
ljmp
xchg
push
lahf
popa
jb
stos
lret
lods
cmp
ret
add
ret
std
sub
sbb
push
sub
orb
mov
xchg
int3
cs
and
mov
pop
push
test
insl
mov
mov
dec
add
dec
insb
into
aaa
xor
cs
fiadds
pop
cltd
adc
inc
shll
rcll
test
es
out
lods
repz
xchg
movsl
adc
or
in
dec
adc
mov
mov
loope
jg
outsl
aas
stos
mov
dec
mov
out
clc
pop
test
lcall
scas
push
xchg
std
xchg
loop
mov
sbb
xor
aam
cmp
cmp
pushf
in
pusha
rclb
wrmsr
pop
stos
aad
lea
xlat
mov
and
adc
rcl
mov
pop
popf
dec
push
das
or
jmp
shl
sbb
cwtl
call
jnp
push
cmpsl
jecxz
mov
adc
jae
fs
inc
xorl
and
xor
sbb
pushf
sahf
jne
in
inc
je
cld
push
inc
mov
pop
mov
xor
sbb
sarb
decb
loope
xchg
mov
push
xor
inc
jle
mov
fs
ret
cmp
popa
sti
cld
pop
adc
fcompl
clc
out
int3
or
pop
arpl
xlat
sub
dec
mov
cmp
push
or
imul
outsl
out
and
clc
sub
sbb
insl
mov
daa
mov
ljmp
fwait
xchg
gs
cmc
mov
pop
mov
mov
and
pop
and
push
mov
mov
inc
push
lahf
adcb
add
mov
andb
adc
adc
mov
or
aas
mov
inc
push
cmp
xchg
mov
adc
pop
fimull
pop
decl
ds
test
negl
clc
mov
sub
aad
fisubl
cltd
cli
sbb
fnstsw
aam
aam
adc
js
data16
sbb
or
sbb
pop
mov
ret
daa
das
jl
movsb
stos
mov
xor
jnp
outsb
cmp
fcoms
cmp
sub
push
std
leave
mov
stos
sub
or
test
or
ja
mov
nop
aad
es
mov
jmp
clc
jp,pt
dec
lea
fsubs
jl
push
mov
pushf
mov
int3
enter
push
cltd
shll
mov
pop
sti
test
mov
xchg
in
and
arpl
lods
mov
orb
and
and
add
popf
js
mov
ds
and
notl
mov
cmp
lods
bnd
and
add
movsb
jne
aam
mov
or
jecxz
mov
and
lret
adc
mov
shrl
cwtl
enter
mov
repnz
movsb
xchg
lret
xor
xchg
cmpsl
and
roll
cmp
dec
fs
pop
out
or
setbe
sub
adc
inc
enter
inc
aam
incl
inc
dec
cmp
jle
adc
pop
cld
cmc
in
sub
push
lock
bound
in
jns
jp
icebp
push
sti
xor
adc
pusha
sbb
repz
mov
sbbl
in
inc
lahf
dec
push
mov
xlat
cs
add
mov
push
ljmp
push
scas
jg
movsb
call
add
lahf
jle
sbb
imul
pop
mov
stc
push
push
mov
mov
pop
icebp
out
mov
xor
std
ja
enter
xchg
sbb
mov
movl
push
adc
in
cmp
mov
inc
push
pop
pop
andb
out
cli
xor
orl
dec
fimuls
popf
pop
imul
loop
cmp
mov
push
add
jp
out
xchg
scas
jns
xchg
jl
cmp
fidivrl
insl
and
push
pop
test
das
xor
cmp
insb
adc
mov
sbb
sub
shlb
sarb
pop
pop
mov
nop
inc
add
xchg
mov
push
xlat
jne
and
push
xlat
popa
pop
cld
sbbb
push
xchg
inc
mov
gs
scas
fstp
mov
popf
sbb
inc
or
mov
das
push
leave
sbb
fwait
adc
lods
out
sbb
aad
ljmp
test
dec
xchg
sbb
push
or
adc
in
je
mov
dec
subl
mov
mov
hlt
dec
xor
sub
add
push
clc
ficoml
adc
rclb
sub
push
idivb
or
xlat
icebp
in
add
xchg
outsb
popf
or
mov
fiadds
fwait
jbe
push
loop
jo
cld
xor
out
jmp
jno
jp
hlt
lret
rol
data16
movsb
sbb
aaa
in
mov
mov
bnd
jbe
lea
jmp
xchg
lcall
xor
movsb
xchg
dec
sti
mov
insb
mov
push
inc
cmpsb
pushf
rcrb
daa
pushf
decb
jae
jb
adc
push
inc
aaa
ss
mov
popf
mov
dec
add
arpl
lret
cmpsb
dec
mov
push
fsubs
xlat
xchg
orb
mov
mov
into
sub
in
int3
fldl
popa
add
mov
stos
pop
loope
ret
cwtl
in
scas
lcall
adc
sbb
aas
dec
xchg
and
cli
mov
pop
scas
push
mov
insb
mov
fiadds
jo
jl
rcrl
mov
pushl
shll
insb
aam
pop
inc
rorl
xchg
sar
fstpt
cmp
push
mov
sti
pushf
aam
pop
xchg
out
cmp
sbb
ret
push
jnp
sub
sub
jnp
push
cmp
sub
bound
sarb
enter
push
dec
enter
push
adc
ljmp
loopne
loop
repnz
outsl
add
and
lret
mov
xchg
ja
cmp
inc
xor
cmp
mov
clc
lahf
mov
or
dec
push
mov
xchg
enter
xchg
mov
cmp
leave
or
cmp
sub
jge
sub
mov
gs
stos
dec
pushf
xor
push
add
dec
popa
add
loopne
gs
xor
jb
push
popa
scas
ret
sbb
mov
pop
sbb
dec
hlt
clc
icebp
insb
loope
sub
test
imul
orl
pop
pop
movsb
sbb
mov
insl
cmp
js
cwtl
pop
jns
sub
sub
cmp
hlt
ds
add
or
adc
fists
inc
ror
mov
xchg
out
pop
mov
mov
xchg
scas
addr16
stc
cs
addr16
or
nop
xchg
incl
call
fimuls
adc
add
out
leave
int
xor
adc
ljmp
pop
ss
adc
inc
mov
xor
dec
popa
xor
jl
lds
xor
loop
pop
jg
pushf
ljmp
mov
lret
sbb
jmp
out
outsl
aad
cmp
sti
or
stos
push
shld
sbb
enter
adc
js
lea
mov
jbe
lcall
loope
pusha
and
dec
add
mov
nop
out
fsubl
cmpsl
adc
mov
es
cmpb
or
and
mov
push
and
loop
fwait
in
jecxz
subb
std
jo
dec
mov
dec
pop
inc
mov
and
pop
les
shl
pop
loopne
lcall
mov
inc
sbbl
dec
pop
cmc
mov
insb
into
dec
rorb
test
xchg
jbe
xor
add
inc
xchg
sar
movb
mov
cmp
adc
jmp
xchg
adc
in
push
dec
dec
sbb
hlt
stos
das
push
adc
popa
pop
sub
inc
xor
inc
xchg
push
sbb
inc
xor
cmp
mov
outsb
sbb
negl
hlt
push
scas
aaa
dec
lret
data16
jb
sbb
jmp
dec
pop
stos
iret
fisttpl
imul
call
in
add
add
sub
out
daa
xchg
xchg
out
cmp
sarb
cmp
icebp
in
std
loopne
int3
push
mov
jl
cmpsl
sbb
inc
sbb
es
scas
movsb
sahf
add
int
fisttpll
jmp
jbe
scas
pushf
cmp
fisttpl
into
mov
inc
pop
inc
mov
repz
les
fnclex
jne
es
xchg
sbb
dec
pushf
sarb
fwait
bound
jne
sbb
jo
ljmp
and
or
pop
xor
ret
mov
xor
mov
and
outsl
fildll
rorb
fwait
xchg
rcrl
subb
xorb
leave
xchg
lahf
lahf
mov
mov
into
icebp
sub
dec
cltd
ret
push
clc
cmp
jmp
jl
mov
lret
add
repz
inc
add
mov
int3
lea
adc
mov
xor
lds
sbb
xchg
inc
out
loop
mov
cmp
xchg
mov
fisubs
mov
mov
cld
out
dec
cmp
mov
ds
subl
mov
mov
cmc
fwait
cli
mov
ret
stos
pop
inc
xchg
xchg
adc
in
invd
pop
mov
into
nop
ja
ret
and
mov
adc
jns
sarb
sbb
inc
xor
cmp
repz
sub
jmp
fbld
cmpsl
mov
iret
inc
pop
pop
das
sti
sbb
mov
pop
movsl
sub
jp
push
lea
xchg
mov
int3
sub
cld
sbb
cli
das
pop
les
gs
sbb
sbb
shll
daa
test
lret
fadd
dec
cwtl
or
mov
inc
sub
call
xlat
xor
clc
add
test
test
and
pop
inc
out
mov
dec
pop
insb
stc
mov
mov
jp
add
int3
sub
xlat
jecxz
mov
sub
xor
xchg
repz
je
jl
aam
hlt
pop
movsl
xorl
cmp
scas
test
mov
mov
jae
repnz
xor
jb
out
lret
pop
mov
pusha
mov
xor
in
out
add
stos
xchg
ja
cmp
pop
push
mov
mov
inc
mov
call
ds
int
push
loopne
xchg
loop
and
push
sub
iret
add
into
mov
fists
roll
in
cmp
daa
sbb
out
cmc
popa
fwait
mov
lret
sbb
cmp
and
xor
int3
push
lods
mov
xor
lret
lret
in
enter
fisttps
stos
inc
jae
xchg
xor
and
mov
in
das
insl
add
mov
and
out
loope
loop
mov
push
push
iret
loopne
lods
dec
xor
sbb
rcrl
adc
inc
add
pushf
pop
jmp
in
mov
in
push
bound
push
test
nop
dec
or
inc
mov
nop
pop
loop
cmpsl
jnp
push
nop
add
fisubrl
aaa
stos
enter
cmp
jae
xchg
mov
and
mov
sbb
or
pop
repnz
sub
int
outsb
lret
imul
stos
sbb
pop
pop
fnsave
inc
sub
jb
and
sbb
rcrb
bound
addl
subb
inc
mov
xchg
dec
mov
mov
cmc
pop
push
jae
fbld
push
les
add
mov
scas
inc
nop
aaa
fs
loop
cmp
rorl
cwtl
lods
fs
outsl
adc
and
clc
test
bnd
ret
ja
nop
insl
xor
push
push
add
shll
fsubs
jnp
inc
in
mov
sub
insb
mov
adc
clc
lods
jbe
int3
arpl
jecxz
dec
loopne
sbb
xchg
sub
jns
les
pop
jmp
call
push
mov
fstps
popf
fistpll
or
enter
lcall
fsubrl
aad
insl
sbb
stos
cmp
cmp
sbb
shll
pop
shl
loopne
jmp
mov
adc
out
add
inc
dec
lods
cld
div
or
xchg
jbe
push
int
mov
imul
and
add
sub
aad
lret
out
cmp
insl
popf
sbb
popa
lock
mov
xor
fs
cwtl
dec
in
ja
xor
and
movsb
mov
add
dec
ficoms
clc
and
cmp
adc
dec
push
scas
push
das
js
andl
daa
call
jg,pt
mov
adc
test
dec
rclb
decb
in
movsb
xchg
cmpsl
aad
in
loope
xacquire
mov
fcompl
jge
imul
dec
jl
cmp
daa
mov
xor
xchg
lock
push
popf
dec
push
shr
or
stos
sbb
pop
sbb
ficompl
adc
inc
leave
lcall
mov
inc
sbbl
inc
adcl
lea
adc
push
cld
push
dec
sbb
stos
jp
out
xchg
add
mov
cmp
push
xchg
xor
inc
stos
inc
lock
and
stc
mov
xlat
or
psubb
sbb
sbb
mov
imul
setg
leave
and
add
lock
mov
xor
push
add
fidivrl
lret
and
mov
fisttpll
mov
jmp
call
inc
sub
ljmp
loopne
std
out
add
rorb
sbb
enter
movsl
jnp
xor
sub
popf
int
pushf
mov
dec
jmp
or
mov
pushf
add
fwait
or
adc
call
cmpsl
test
pushf
test
mov
loope
cmp
rorl
jno
fiadds
push
mov
sub
mov
lahf
ja
iret
pop
ret
xchg
dec
aaa
pop
jne
jl
cmp
add
sub
fmull
les
aad
aam
push
movsb
dec
ffreep
stc
sub
jne
rcr
cmc
sub
inc
fs
pushw
dec
popa
es
mov
popf
out
push
dec
andl
jns
pop
jle
mul
pop
jo
les
arpl
mov
stos
jno
pop
or
or
sbb
addr16
jo
cmc
mov
insl
xchg
sub
leave
aas
cmpsl
fildl
sub
add
inc
fisubrl
ljmp
push
rorl
fldl
pushf
insl
push
into
mov
imul
xchg
insl
adc
add
std
push
jge
loope
sub
xor
sbb
mov
bound
add
push
mov
pop
xor
jle
xchg
mov
jp
pop
mov
pop
scas
cmpl
adc
mov
aam
mov
sarl
aas
stos
xchg
pop
in
push
popf
arpl
test
add
insl
in
inc
mov
mov
mov
iret
in
dec
dec
in
mov
sub
adc
je
jmp
mov
adc
bsr
add
mov
outsb
flds
arpl
fidivrl
adc
pop
mov
popa
adc
test
jbe
or
adc
inc
sti
pop
xchg
sti
mov
popl
andl
xlat
push
cli
xchg
add
imul
ds
sbb
ds
pop
mov
sbb
xchg
aas
pusha
xchg
ret
lret
xchg
lea
xor
js
std
in
pop
inc
arpl
jb
std
notl
js
sbb
fwait
movsb
arpl
out
sbb
cld
jo
push
out
cmovb
push
clc
hlt
lret
add
push
push
mov
xchg
stos
cmp
xchg
push
shll
mov
loop
jle
push
cmc
add
outsl
gs
shll
jge
mov
test
icebp
inc
xlat
orb
add
inc
pop
bound
fwait
mov
xor
pop
mov
hlt
inc
mov
cld
xchg
adc
insb
decb
xchg
fwait
out
out
lcall
scas
test
insl
sub
cltd
cmpsl
inc
popf
pusha
mov
mov
rolb
iret
inc
lods
fcoms
fcompl
in
push
xchg
and
add
stos
sub
popa
sbb
pusha
ljmp
push
pop
popf
inc
mov
push
push
rcrl
adc
cmp
sbb
popf
mov
div
in
sbb
cmpb
inc
mov
test
dec
in
aad
xor
push
sbb
mov
sbb
xor
and
lods
sbb
cli
xchg
dec
movsl
dec
lret
adc
mov
sub
or
jbe
test
adc
pop
inc
gs
cmp
xchg
mov
add
push
adc
inc
je
push
arpl
hlt
or
shrb
andl
inc
arpl
pop
ds
xchg
push
pop
xlat
lods
pop
repz
imul
pop
inc
fcompl
push
lds
testb
mov
outsb
fcoms
xor
decl
std
test
movsb
sti
hlt
sub
cli
push
xchg
mov
clc
xchg
negl
ffreep
arpl
add
out
jno
ret
ret
es
repnz
jmp
fmul
fidivrl
jecxz
sub
mov
xchg
int3
dec
repnz
xchg
int3
mov
shll
cmpsl
add
jnp
push
adc
and
adc
ss
push
loop
push
mov
xor
mov
inc
imul
les
mov
mov
aaa
fs
cmc
push
bound
mov
ror
inc
or
imul
add
pop
jg
xorl
inc
repz
out
mov
loop
popa
loopne
icebp
les
adc
pop
inc
pop
sub
arpl
mov
push
dec
cmpsb
les
daa
inc
dec
hlt
faddl
test
mov
push
pop
mov
pop
sbb
mov
inc
mov
out
adc
fs
enter
pop
nop
lahf
in
mov
push
jns
imul
push
aas
jns
jns
or
xor
data16
imul
mov
push
ja
mov
bound
mov
out
sub
sbb
daa
in
cmp
test
xor
inc
lods
fwait
pop
cmp
shrl
adc
mov
mov
or
adc
mov
and
insl
cli
dec
subl
rorl
adc
mov
mov
out
cmpsb
mov
cmp
sbb
push
cmpsb
incb
mov
jae
lcall
inc
fildll
fldt
sbb
adc
rclb
xor
or
dec
fdivl
test
mov
adc
out
push
test
mov
mov
dec
mov
ret
std
outsl
xchg
jle
call
xchg
push
fildll
xchg
inc
pop
movaps
hlt
jmp
push
mov
and
push
add
arpl
ret
cmpsb
cmpsl
add
add
out
ljmp
adc
movsl
movsl
es
lret
push
sbb
add
jo
and
mov
lods
sarl
inc
xchg
and
xchg
pop
fwait
mov
cli
lahf
ja
sbb
into
mov
cmpsb
int3
cmc
mov
push
inc
aad
insb
loopne
hlt
xor
add
add
jge
movl
clc
jae
dec
nop
jecxz
fldenv
inc
and
xchg
ss
ja
into
loope
inc
xlat
pop
cmpsb
add
insl
lea
aaa
or
sti
iret
call
nop
call
xor
cltd
sub
add
stc
push
xor
mov
push
mov
sbb
jb
add
sbb
mov
inc
xor
fdivl
add
stos
add
inc
xor
xor
test
pop
or
arpl
jo
dec
nop
add
mov
sub
mov
pop
cmc
mov
sbb
addl
roll
testl
lahf
mov
pop
xchg
adc
popf
scas
push
xchg
xchg
ficompl
inc
cmp
repz
or
cld
jge
ret
test
test
jp
imul
push
bnd
sbb
mov
leave
dec
cwtd
cmp
test
aaa
loope
popa
stos
hlt
xchg
and
out
sbb
cmpsl
jo
push
and
sub
es
stos
ss
aam
shlb
cmp
call
jo
outsl
shrl
clc
iret
dec
std
sbb
cmp
movsb
daa
jno
je
lahf
stos
jle
pop
test
shll
xchg
arpl
sbbl
push
pop
iret
cwtl
jb
enter
push
cli
add
inc
mov
push
jns
push
bound
iret
imul
xor
adc
test
popf
ljmp
or
xor
push
adc
les
mov
insb
and
mov
int3
lods
xor
or
in
out
shrb
pop
int
sahf
popa
les
stc
jbe
adc
es
sub
and
pop
push
test
inc
shrb
dec
xchg
cmpsl
int
movlps
sbb
pop
pusha
adc
les
xchg
cmc
add
mov
inc
cmp
pop
es
cmp
clc
cmp
xor
dec
xor
xor
aad
jecxz
lods
sub
mov
std
repz
mov
and
pop
xchg
fldcw
dec
and
mov
xor
dec
xchg
sbb
or
jge
sahf
pop
divb
cmp
and
add
sub
aad
mov
cld
xchg
push
ret
mov
movl
inc
insl
and
dec
jecxz
adc
dec
xor
out
push
jo
sub
push
cmc
test
addr16
sbb
test
in
dec
sti
xor
jecxz
jns
xlat
pusha
push
sub
aaa
pushf
mov
sbb
pop
clc
int
lds
stc
gs
imul
mov
push
or
stos
pop
sbb
hlt
aas
xchg
xchg
ror
mov
cmc
dec
jp
movl
jb
pop
in
fisubs
mov
lods
adc
fistl
repz
or
mov
fiadds
mov
pop
cmp
sbb
cmp
jae
mov
mov
inc
adc
sbb
ss
jle
push
iret
lods
data16
jbe
jmp
xor
sub
call
or
jne
inc
jp
adc
inc
andl
mov
lret
dec
inc
jne
loop
sbb
cmpsb
pop
dec
dec
test
push
jb
xchg
std
push
and
cmovbe
xor
push
dec
call
dec
inc
clc
pop
fbstp
push
repz
lret
ret
scas
mov
shlb
adc
mov
pop
mov
mov
lods
jno
mov
flds
add
dec
cld
ret
lret
hlt
adcl
xchg
push
push
ret
or
xchg
std
cli
ret
lret
mov
lea
pop
sub
xchg
sub
add
sahf
pop
mov
dec
xchg
mov
jmp
sbb
and
mov
push
add
jnp
mov
aaa
inc
push
int3
mov
jge
mov
or
popf
or
and
cmp
dec
mov
pop
push
add
push
fwait
push
mov
loope
push
pushf
dec
inc
sub
lods
mov
cmp
add
cwtl
cs
pusha
imul
stos
dec
mov
inc
xor
je,pn
jo
fwait
movsb
sub
dec
mov
psrad
aas
aas
and
lret
sub
mov
sbbl
pop
icebp
inc
dec
xor
pop
repnz
xchg
add
scas
and
aam
lods
fildl
and
sahf
sti
push
nop
test
cmc
movntps
mov
call
in
int
in
jecxz
push
mov
pop
adc
icebp
pusha
jne
adc
cmovnp
add
and
xchg
jb
push
add
ret
xor
les
test
lds
popf
adc
mov
dec
es
jge
dec
mov
repz
fiaddl
in
lret
inc
inc
cmp
leave
fcmovnb
mov
sub
stc
cs
mov
insl
xchg
loope
scas
retw
xchg
inc
and
jmp
dec
int
std
aad
mov
push
mov
jb
outsl
aam
cli
mov
mov
add
cwtl
xchg
lock
in
ret
dec
popf
adcl
shl
jle
sub
enter
or
or
shrl
jle
sub
jmp
or
loop
je
xchg
xchg
mov
cwtl
and
or
inc
pop
aad
je
stos
cltd
push
cli
jae
cmpsl
adc
cli
outsb
sbb
dec
sbb
inc
mov
pop
std
pop
and
cmp
in
js
cmp
into
lds
mov
sbb
arpl
cmpsl
inc
jbe
or
lret
add
ds
shl
inc
pushf
dec
sbbl
je
jle
jle
clc
and
outsb
add
cld
xchg
rcrb
pushf
and
pop
xchg
push
test
hlt
mov
in
les
ja
pop
mov
test
mov
push
cli
dec
inc
pop
inc
clc
dec
add
and
pop
je
scas
fnstsw
and
andl
jo
push
jle
xchg
pop
sub
fs
shr
faddp
call
xor
push
cld
ret
sub
lret
popf
pop
addb
pop
push
aas
push
jp
popf
adc
mov
and
aad
dec
cltd
push
cli
jae
jo
shll
bsf
int3
outsb
sub
daa
test
adc
jbe
dec
mov
mov
push
mov
add
dec
xor
mov
iret
pushl
cmp
push
and
outsb
sbb
mov
jns
ljmp
in
and
pop
or
xchg
pop
add
cmpl
mov
lret
xor
test
enter
faddp
cltd
or
push
sub
cwtl
js
cmp
pop
pop
andb
xchg
js
jbe
loopne
int3
and
sbb
and
out
leave
pusha
mov
adc
jmp
or
fwait
add
insl
mov
cmp
xchg
in
xor
imul
les
and
mov
sarb
lret
int3
leave
or
add
repnz
aad
mov
lea
inc
mov
or
or
pushf
fwait
cwtl
add
pop
mov
mov
adc
and
sub
lret
xlat
mov
adc
hlt
leave
xor
loope
scas
pop
cmpsl
jmp
add
fsubs
mov
mov
cmpsl
inc
lods
add
jnp
dec
sub
icebp
loopne
pop
sub
sub
repz
ja
outsb
out
aam
mov
mov
mov
insb
or
in
sbb
leave
xor
push
in
jne
push
inc
pushf
and
hlt
xchg
idivb
sbb
iret
addr16
jnp
sahf
or
push
cwtl
xabort
movsl
mov
inc
rcll
aas
testb
add
mov
dec
andb
inc
mov
imul
sub
cmp
and
push
cmp
xchg
mov
scas
mov
pusha
adc
lods
dec
or
div
test
shl
cmp
cmp
iret
mov
jne
pop
test
das
mov
jne
rcl
and
out
insl
sub
aas
loopne
ret
and
pop
out
into
mov
inc
js
inc
sbb
test
gs
add
sahf
dec
mov
inc
das
or
sahf
dec
cltd
jae
insb
icebp
fstp
fistpll
adc
adc
add
xor
xor
jmp
shrb
bound
mov
mov
pop
addl
test
push
sub
rcrb
sub
cmp
xchg
clc
mov
call
jae
imul
xor
enter
mov
sbb
inc
jb
sub
and
adc
pop
cmp
pop
mov
imul
pop
cmp
out
test
repnz
jno
push
xchg
cmpsb
or
sbb
imull
mov
gs
mov
int
dec
iret
loopne
mov
stos
into
mov
and
xchg
mov
dec
add
sahf
adc
jmp
dec
pop
enter
adc
scas
mov
es
cli
mov
stos
dec
push
inc
rcr
sub
mov
mov
push
push
cmpsb
jp
out
xor
cmp
cmpsb
icebp
xchg
jg
in
cltd
push
cvtdq2ps
push
ret
mov
mov
xor
mov
push
cmc
xchg
les
shlb
je
xor
inc
mov
rcl
xchg
es
dec
push
inc
pop
jge
push
jg,pt
frstor
roll
bound
add
xorb
aas
jbe
or
lock
and
xchg
pop
in
jl
inc
lcall
inc
cmp
mov
outsb
dec
pop
sbb
jb
xor
daa
scas
outsb
shlw
mov
adc
lret
repnz
fsubrl
out
iret
adc
mov
lods
adc
loopne
arpl
xor
mov
movsl
lds
popf
cmp
inc
add
stos
insb
jg
adc
inc
xlat
add
fistps
inc
out
lods
cwtl
loopne
push
mov
wbinvd
std
sbb
imul
mov
xor
xchg
xchg
fnstcw
mov
sbb
mov
lcall
loop
inc
inc
jecxz
insl
jns
or
xor
and
in
sbb
mov
daa
push
push
fiadds
leave
or
cmp
adc
and
insb
les
lea
popa
ds
push
xor
sub
xchg
mov
sub
inc
xchg
xchg
and
dec
fidivs
je
lahf
or
decb
dec
cmc
lds
ds
lahf
and
fnstenv
add
test
sbb
push
cmp
jb
cmp
imul
das
aas
push
test
insl
dec
lds
cltd
sbb
cld
jo
adc
push
js
cmp
scas
pusha
cltd
xchg
sub
in
jb
cmp
iret
stos
gs
out
push
mov
mov
mov
jle
lods
and
addb
lea
adc
push
sarl
test
daa
jo
pop
pop
xchg
or
popf
cmc
cld
sub
push
flds
jecxz
scas
add
sub
sbbl
aad
pop
dec
lcall
push
divb
or
lahf
testb
cmp
andb
std
xchg
scas
sbb
fmuls
push
add
mov
movsb
int3
dec
lret
out
cmp
adc
mov
pop
push
dec
jne
or
enter
repz
or
fisubs
xchg
cmp
clc
pop
mov
outsb
xchg
mov
loope
mov
sti
ja
sub
leave
loop
push
ja
or
dec
jno
pop
aas
jne
mov
mov
bound
xchg
sti
cwtl
adcl
aad
dec
inc
rorb
cmpsb
adc
imul
add
nop
push
inc
insl
inc
mov
xchg
lods
clc
and
dec
lret
out
sbb
push
push
setae
gs
add
jb
repnz
rolb
ljmp
xchg
pop
clc
sub
shrb
cld
xchg
push
inc
out
in
xchg
inc
imul
add
subl
xor
mov
push
sbb
cmp
arpl
push
adc
or
cli
popf
mov
scas
or
stos
cmc
adc
daa
icebp
rorl
adc
xchg
les
jno
adc
xchg
inc
dec
sbb
lcall
pop
add
test
fstpt
mov
xor
cmp
add
dec
movsb
or
bound
xchg
gs
psubd
in
pop
jecxz
xor
out
ljmp
xchg
insl
clc
xchg
dec
jecxz
out
add
mov
dec
repnz
mov
filds
daa
arpl
data16
dec
mov
pop
ret
pop
push
or
scas
xchg
fbstp
xchg
pop
mov
jnp
and
lds
add
rorw
xlat
das
in
jno
pop
or
data16
ss
test
test
cmp
push
test
xor
xchg
in
and
dec
dec
scas
bnd
shrl
adc
in
clc
scas
pusha
stos
in
xchg
jb
dec
incl
adc
mov
inc
mov
xchg
jle
jnp
lcall
jge
ret
outsb
xor
jns
or
jp
xor
stc
sbb
mov
daa
push
sub
xor
js
and
out
arpl
pop
push
xchg
repz
insl
mov
and
sbb
jne
std
adc
mov
jno
push
mov
cmp
mov
mov
cs
aad
jp
and
inc
ret
fadd
pusha
jecxz
xchg
andl
out
inc
movsb
inc
or
pop
in
sub
and
cld
lret
xchg
mov
or
sbb
ja
xchg
dec
int
or
xor
inc
jecxz
push
inc
pushf
inc
xlat
std
in
mov
jo
test
cli
fcoml
sbb
inc
sub
clc
out
ss
cmp
push
and
repz
dec
dec
clc
push
or
xchg
jmp
cwtl
jno
inc
pop
push
jmp
lahf
int3
dec
pop
xchg
xor
lods
cwtl
ds
out
mov
sarl
les
int3
or
mulb
or
mov
mov
andl
icebp
movsb
enter
sub
or
out
pop
test
mov
scas
pop
fdivl
loop
and
push
pop
sub
pusha
mov
sti
imul
and
push
xchg
daa
jne
push
add
mov
int3
push
pop
cmp
rcrb
jne
add
js
dec
jmp
inc
xchg
shlb
nop
xchg
roll
jmp
adc
call
sbb
pop
cltd
hlt
jg
mov
mov
adc
pop
dec
lods
mov
std
dec
lcall
jge
aad
inc
pop
mov
dec
pusha
dec
repnz
fnstsw
fdivrp
jp
xchg
cmc
daa
push
adc
xor
fcoms
mov
jle
sbb
rclb
insl
xchg
cwtl
cltd
pusha
scas
push
inc
rcll
insb
cmp
cmp
daa
lods
mov
daa
push
or
lcall
dec
out
and
xor
sub
xchg
arpl
jno
mov
icebp
mov
bound
xor
xor
lahf
mov
test
fildll
shll
pop
mov
mov
adc
aaa
scas
sub
in
or
mov
fdivr
cld
push
lea
setnp
mov
pop
fisubl
nop
inc
cmpl
stos
cs
xlat
ja
pushf
stos
mov
loopne
push
clc
push
jmp
pop
fstps
add
mov
shll
adc
cmp
lahf
fdivs
clc
sbb
shr
in
notl
mov
pushf
lock
sub
movsl
dec
pop
orl
insb
pusha
adc
sbb
dec
dec
mov
lds
fdivl
mov
mov
adc
xchg
lods
push
scas
cli
pop
xchg
jns
test
dec
dec
fisubrl
xchg
push
or
repnz
pop
mov
scas
adc
movsb
inc
test
ret
test
sbb
dec
lods
test
rclb
nop
mov
fwait
lea
xorb
xchg
clc
jo
pusha
call
sub
ret
shll
xlat
xchg
dec
mov
pop
push
push
mov
lock
adc
mov
xchg
out
pop
xchg
shrl
lcall
xchg
push
add
add
lods
mov
popa
in
das
pop
rcrb
fiadds
mov
mov
push
pop
mov
stc
dec
cmp
mov
ret
jmp
jl
bound
xor
xchg
adc
jg
shrb
xor
push
mov
jg
sub
sbb
mov
push
mov
mov
lods
mov
out
inc
push
jge
nop
dec
sub
cmpb
ljmp
pop
add
outsl
add
xchg
das
out
int
xor
mov
sub
inc
fistpl
test
pop
sub
out
test
jmp
data16
rolb
jbe
and
jle
mov
add
add
jae
insb
lods
push
cmp
add
popf
sahf
hlt
pusha
rclb
in
xor
test
mov
pop
pop
pop
ret
push
inc
xchg
pop
ficoms
popf
mov
pop
adc
push
xchg
and
aad
mov
mov
mov
xor
cmpsb
fstpl
mov
fstpt
cmpsl
in
pop
aas
cmp
sbb
adc
test
sbb
pop
mov
sub
sarb
jbe
sbb
mov
pop
bnd
xchg
into
inc
jp,pn
mov
dec
shlb
sti
sbb
std
mov
lcall
pop
aam
mov
insb
xchg
pop
mov
dec
sbb
add
nop
push
adc
mov
mov
cltd
or
xchg
movsl
sbb
test
in
fcomps
bswap
cmpsl
ds
mov
cs
fadds
enter
push
or
mov
inc
push
loopne
jp
sarb
or
mov
or
cld
xchg
neg
inc
gs
fs
mov
xlat
pop
mov
mov
aas
adcb
pop
daa
fsubrp
mov
clc
bound
adc
inc
data16
loop
into
lea
int
outsb
cmc
pop
ss
mov
jle
hlt
lods
gs
ja
cmp
fidivl
or
mov
pop
jmp
cmp
in
mov
mov
sbb
push
or
mov
jl
jecxz
arpl
fists
mov
mov
and
sbb
mov
mov
push
loop
adc
mov
mov
mov
pusha
or
inc
sbb
mov
or
lahf
insb
fs
imul
inc
mov
pusha
mov
lock
push
cmp
pop
xchg
in
xchg
roll
add
mov
imull
dec
pusha
push
repz
push
pop
imul
int
dec
imul
push
sbb
sub
add
ret
fsubrl
daa
adc
mov
inc
shl
xchg
hlt
mov
lds
sub
cmp
ljmp
mov
rcll
or
and
pop
icebp
lock
push
ret
cmpsb
mov
jle
lock
mov
pushl
pop
push
ljmpw
mov
ljmp
inc
jns
inc
jno
jne
ljmp
fs
pop
sub
push
push
inc
sbbl
dec
dec
xchg
inc
out
scas
popa
xor
mov
inc
mov
cwtl
out
mov
xchg
mov
mov
loope
push
jne
cmp
repnz
xor
sub
rcrb
adc
shrl
jbe
xchg
fnstsw
xchg
enter
xorl
mov
push
shl
cld
test
js
cmp
into
cmp
daa
in
jg
cmp
and
push
push
jmp
sub
jnp
push
icebp
jl
xlat
push
push
popa
pusha
jmp
push
into
in
cmp
leave
inc
mov
lahf
inc
mov
js
push
in
push
inc
dec
cmp
mov
in
sub
repnz
jb
fldt
clc
inc
fisttps
ds
negb
push
sbb
sbb
xor
inc
pop
leave
mov
jp
repz
outsb
pop
and
adc
add
sub
jle
adcl
adc
iret
mov
mov
enter
ret
jge
mov
int3
cmp
inc
pop
mov
enter
mov
xchg
pop
and
inc
pop
cltd
movsb
movsb
sbb
mov
in
inc
std
push
bound
sbb
jp
fisubs
sbb
jecxz
push
sbb
adc
jbe
inc
xchg
xor
push
add
cmp
std
cmc
nop
lds
mov
cmp
into
pop
sbb
inc
push
mov
adc
mov
mov
xchg
pop
inc
push
call
loope
jno
movsb
mov
arpl
aas
mov
adc
data16
sahf
lcall
hlt
lcall
push
push
xchg
stc
jg
ror
lret
inc
xor
ret
cld
mov
dec
int3
arpl
add
int
push
enter
nop
ret
popa
pop
es
rclb
pop
inc
ret
mov
mov
sbb
sbb
xchg
notl
lahf
sarl
test
test
out
lock
sbb
mov
pop
outsl
leave
test
pop
or
hlt
mov
xor
push
dec
xor
test
fcmovnb
push
mov
gs
insb
pushf
mov
loope
xchg
lret
in
and
add
jmp
push
test
or
sbb
xchg
stos
or
popf
out
push
fmulp
or
bound
sub
sahf
stos
and
dec
fst
inc
add
notb
addr16
imul
jb
int3
dec
jns
push
jg
xor
jbe
xchg
decb
repz
scas
jbe
push
mov
popf
insl
vpslld
jnp
lods
rcll
xchg
mov
jmp
cmp
inc
pop
jb
addb
and
mov
in
mov
test
dec
and
mov
nop
rcrb
fistpll
out
adcb
and
aam
daa
fildll
xchg
sub
mov
mov
adcl
mov
push
movsl
sahf
inc
lret
imul
sub
push
or
xchg
popf
or
mov
clc
pop
push
lods
mov
cmpsb
push
lods
and
mov
stos
adc
js
jbe
adc
and
lahf
xchg
and
das
and
sti
addb
aam
repnz
popa
test
inc
inc
and
jno
pop
in
loop
or
cmp
xchg
fcoms
out
pop
popf
int
pusha
in
shrb
xchg
hlt
ret
mov
adc
fildl
add
adc
adc
add
adc
setae
jne
xchg
fcmovnb
push
mov
xor
push
aaa
in
addb
or
cli
mov
mov
or
fildl
jno
out
jae
std
sub
cltd
inc
lock
sbb
mov
fstps
xlat
out
call
call
sahf
cli
push
loop
sub
test
in
je
dec
stos
test
dec
inc
test
fwait
mov
jbe
xor
out
sub
sub
ret
out
sub
push
push
add
ja
pop
sahf
xor
sub
jae
adc
push
enter
mov
xor
in
jne
xor
xor
fs
xorl
mov
lret
dec
pop
scas
pop
decl
testl
inc
xchg
test
jge
adc
xor
mov
daa
xchg
in
mov
fimuls
lods
int3
ds
dec
lret
and
sub
cmpl
mov
sbb
lods
add
xor
fwait
mov
or
inc
aam
cld
repnz
imul
adc
pop
pop
stos
dec
add
sbb
insb
sub
xor
js
xor
push
cwtl
adcb
orl
pushf
inc
xchg
inc
cmp
adc
lods
push
imul
inc
mov
inc
sub
mov
cmp
sub
cmp
add
jns
ds
sbb
sahf
xchg
sbb
pop
push
dec
dec
xchg
dec
mov
and
pop
mov
jae
aad
clc
enter
loop
inc
jo
mov
cmpsl
insb
or
jb
imulb
push
lret
sub
mov
mov
fldt
jbe
xchg
lret
out
nop
add
xchg
mov
add
in
repnz
fldcw
dec
les
addr16
cltd
in
test
mov
data16
loope
xchg
das
fbstp
fdivrs
xchg
pop
cwtl
aaa
inc
test
mov
fdivr
cmp
cmp
ret
aam
sbb
and
out
enter
loop
push
daa
loop
bsf
push
push
outsl
push
cwtd
pop
js
push
and
dec
cli
imul
push
pop
push
add
sub
mov
es
sub
push
out
add
mov
xchg
dec
stos
mov
sub
and
ret
pop
xor
pop
cmpsb
jno
cmpb
lds
lods
cmp
movsl
imul
inc
push
or
fidivrl
adc
leave
cmpb
push
cmp
and
jnp
aad
lret
divb
insl
movsb
add
add
mov
addr16
inc
lcall
xchg
ret
dec
ja
or
mov
movsl
sbb
fcoml
mov
xchg
or
cmp
shll
js
mov
push
mov
je
out
cmpsl
xchg
dec
loop
clc
push
bound
mov
cmp
ret
shrl
mov
outsl
clc
shlb
sub
arpl
cmpl
pushf
vcomisd
lods
jmp
push
mov
dec
push
mov
test
sahf
in
dec
xchg
push
outsl
mov
les
nop
fwait
mov
lods
inc
mov
lods
xor
les
adc
fsts
outsb
mov
sarl
cmp
int
ret
neg
inc
test
and
adc
subb
inc
xlat
sbb
daa
pop
mov
push
jno
fdivr
test
push
movsb
addb
sbb
or
int
mov
ja
mov
jbe
lret
cli
jecxz
imul
mov
sbb
lcall
divb
dec
xchg
mov
into
leave
adcb
enter
fs
pop
xchg
jo
cwtl
and
adc
mov
add
hlt
jb
insl
flds
arpl
adc
hlt
sub
inc
xor
sub
lds
lea
in
mov
xchg
scas
ud0
stc
movsl
dec
cltd
stos
push
xor
dec
pusha
mov
ss
fnstsw
xchg
pusha
cwtl
add
cli
cmp
cmpsl
sbbl
jp
xchg
mov
mov
out
and
ds
test
sbb
sbb
sbb
int
mov
inc
call
adc
movsb
mov
jmp
or
loopne
addr16
das
addb
scas
xor
pop
mov
dec
fstps
adc
movsl
add
or
jo
sbb
es
dec
fcoml
test
sbb
movsb
push
mov
jne
add
cmpsb
icebp
cld
cmp
xor
sub
xor
lods
xor
xor
icebp
test
in
movsl
loop
push
inc
les
jp
into
test
and
push
dec
and
dec
cmp
std
call
loope
sub
pop
mov
xchg
adc
sbb
psllq
add
cmp
jo
mov
neg
popa
mov
and
pop
mov
rcr
loope
add
adc
and
cs
ss
mov
repz
in
in
sbb
loop
les
imul
mov
mov
fwait
pop
or
out
test
orb
pusha
ret
push
std
mov
sub
xchg
enter
je
add
lret
movsb
sbb
mov
xchg
mov
popf
pop
mov
cmpsl
mov
clc
dec
inc
mov
lock
fistps
out
repnz
cmp
aaa
jns
fildl
mov
ret
jae
jae
add
push
xor
pop
popa
xor
adc
repz
daa
fisubrl
dec
xor
push
push
pop
imul
leave
mov
leave
lret
sbb
arpl
aaa
jns
out
insl
jge
xorb
dec
sbb
dec
xchg
sbb
pusha
dec
out
or
sbb
add
inc
pop
out
in
push
insl
xchg
je
adc
fstpl
sub
ret
inc
les
mov
fidivrs
add
fimull
mov
pop
pop
shll
sub
cltd
mov
mov
in
mov
push
inc
mov
loope
rcl
inc
push
movsl
fidivl
in
mov
data16
aam
xchg
dec
push
sbb
hlt
sbb
scas
sahf
out
xchg
inc
xor
mov
out
jnp
push
lahf
mov
push
pop
daa
mov
xchg
clc
ret
mov
leave
sub
test
leave
out
pop
in
or
pop
ja
test
rclb
sahf
aad
add
mov
push
push
sbb
daa
inc
pop
jecxz
cli
test
les
inc
lds
mov
xor
xor
pop
cwtl
jmp
pushf
sub
outsl
adc
push
leave
adc
pop
pushf
xchg
mov
repnz
into
adc
mov
test
adc
inc
sbb
mov
dec
push
jno
lcall
cwtl
jg
jns
cmp
add
jle
hlt
movsl
cmpsl
mov
iret
cmp
cwtl
aam
mov
mov
jl
adc
addb
pop
cmp
or
sti
push
adc
lea
nop
dec
jne
lock
push
pop
idivl
std
loopne
xor
enter
sbb
pop
outsb
inc
scas
cmpsb
jns
nop
pusha
mov
jecxz
test
ljmp
inc
jae
test
fimull
flds
xchg
sub
shll
aam
iret
xlat
cmp
cmp
lock
or
sarb
nop
fstpt
and
dec
dec
push
stos
popaw
and
mov
cmp
inc
imul
mov
fs
gs
mov
xchg
jmp
adc
xor
dec
enter
xor
ja
enter
adc
sub
inc
stos
cmpsl
sti
sub
and
popa
or
in
das
xor
pop
stos
sub
in
imul
fimull
push
outsl
pop
jge
pop
stos
mov
mov
jle
mov
dec
icebp
cmp
mov
not
mov
lahf
lcall
iret
sbb
inc
ljmp
jecxz
addr16
enter
popf
not
push
push
cmp
pop
mov
mov
shl
push
lcall
ret
scas
xlat
push
call
hlt
inc
or
push
xchg
rorb
sti
je
subl
inc
out
sarl
pop
dec
int
xor
jnp
xor
mov
jo
jg
sbb
cmp
fwait
cmpsl
xor
iret
pushf
cwtl
jp
xchg
mov
test
scas
cmp
mov
int3
xor
dec
adc
xchg
out
inc
inc
imul
data16
adc
das
inc
mov
dec
lods
mov
aas
gs
and
gs
mov
xor
and
loop
or
push
pop
fwait
inc
cs
hlt
ljmp
out
lcall
outsl
push
scas
shl
in
or
les
movsb
push
fisubrs
xor
xor
ret
std
lock
lea
and
sti
sbb
fsubr
jo
and
out
fidivrl
mov
pop
ficoms
xlat
dec
xchg
sbb
cli
dec
iret
sub
jbe
arpl
lea
dec
out
jp
inc
xor
enter
rcpps
lods
das
adc
and
stos
ret
jmp
lea
subl
cltd
fistpl
and
arpl
cltd
fs
or
fs
push
call
popa
and
lcall
adc
imul
test
fadds
sbb
dec
push
iret
fimull
sbb
fnstenv
xchg
cmp
ret
inc
cmpsl
orb
jnp
cld
mov
int
in
pop
lods
data16
in
or
rcrb
push
sbb
mov
fldcw
sub
push
lds
mov
mov
in
mov
push
mov
cmc
sbbl
jecxz
mov
icebp
les
jecxz
push
add
sub
loope
or
or
mov
jne
fmuls
enter
cmp
cld
adc
mov
movl
inc
pusha
xchg
mov
inc
stos
loopne
push
pop
ret
ja
ret
addr16
inc
insl
push
leave
shrl
test
scas
fidivrl
adc
pop
xor
xor
dec
hlt
inc
pop
aad
aaa
inc
mov
out
data16
addr16
pop
push
pop
fldt
out
mov
int
sub
shl
mov
jmp
push
mov
bound
cld
add
pop
arpl
push
dec
sub
scas
test
outsb
movb
movsl
cmp
pop
and
xchg
inc
mov
mov
xchg
in
mov
adc
fisubl
pop
mov
mov
iret
xchg
or
popa
jnp
in
insl
in
hlt
jmp
pushf
lds
cld
lods
sarl
inc
add
or
bound
test
loopne
xlat
mov
mov
or
push
ss
sbb
xchg
scas
imul
cmp
cmc
jb
test
xchg
shll
aad
sahf
adc
adc
cwtl
inc
mov
push
inc
loope
xchg
jo
xor
dec
sbb
mov
pusha
int
stc
jbe
and
out
in
add
mov
nop
dec
jp
clc
loop
push
movsb
xor
dec
jle
jle
xor
mov
les
jl
xor
mov
inc
and
int3
mov
das
xor
aam
aad
shlb
icebp
jg
xchg
or
sub
es
adc
sbb
fwait
icebp
aaa
cmp
es
call
push
sti
fbstp
xor
ficoms
popa
jmp
and
mov
add
dec
inc
adc
inc
lcall
mov
or
push
and
aas
add
jge
push
ds
push
out
out
jp
mov
mov
and
lds
fists
std
cwtl
loop
mov
ja
sub
sbb
rclb
nop
dec
mov
mov
xor
popf
pushf
repz
add
pop
pop
shl
rcll
and
shlb
jno
je
lock
iret
stos
jle
repnz
sbb
popa
das
inc
sahf
cld
lret
cmp
push
inc
lret
mov
sahf
inc
es
sub
test
dec
mov
pop
or
push
or
adc
sub
mov
and
adc
ljmp
jns
out
cmc
in
adc
lock
outsl
push
mov
lcall
insb
xchg
addr16
push
push
add
cmpl
leave
adc
mov
inc
inc
les
test
test
sub
mov
mov
dec
xor
test
out
movsb
lods
or
jns
fs
xchg
mov
jo
js
push
jbe
inc
and
dec
jbe
pop
sbb
scas
rorl
ficoml
fcmove
jnp
fidivrs
sbb
jge
pop
jbe
jo
popa
mov
or
gs
push
rcl
movsb
push
negl
dec
gs
cmp
sub
insl
mov
mov
and
cmpsb
aam
sub
cmp
xor
sti
test
fisttps
and
jbe
cmp
sbb
inc
xor
mov
repz
or
enter
mov
xchg
xchg
fsubrs
ret
loopne
into
hlt
mov
sub
jae
addr16
sbb
mov
mov
insl
mov
daa
mov
push
push
cmpsb
add
out
rclb
cmp
iret
xchg
adc
lods
push
popa
push
dec
lcall
cmc
data16
jbe
sbb
divl
push
xor
push
rcll
test
outsb
scas
mov
aas
xlat
iret
push
cmovl
addr16
mov
push
lock
sub
and
lock
inc
jo
sbb
mov
cmp
pop
or
aas
scas
jb
xor
xchg
ss
dec
das
test
xor
inc
fs
ljmp
mov
out
insb
punpckhbw
mov
movb
js
inc
or
push
xlat
sbb
pop
sti
sbb
fstpl
or
mov
sub
fcoml
jne
mov
push
mov
negb
dec
daa
sub
lods
jge
out
loop
push
push
and
jge
popa
xchg
or
lahf
adc
sbb
lds
cmpsl
cmp
adc
fdivrs
mov
sti
pushf
dec
into
pop
rcl
add
ds
mov
fs
stos
jae
aad
addl
lcall
loopne
enter
ds
push
fs
add
xchg
imul
mov
mov
sbb
paddb
clc
pop
and
sub
daa
lret
pop
dec
cwtl
arpl
push
adcb
arpl
and
push
jb
xorb
add
cmpsl
pop
lea
xor
call
cmp
fisttps
leave
xorl
xchg
adc
pop
push
push
push
rclb
mul
sbb
dec
popf
inc
sarl
pop
push
aad
xchg
adc
mov
jbe
mul
shrb
mov
inc
xchg
ja
scas
cli
pop
movsb
call
cmp
xor
sub
aad
mov
std
mov
jg
and
push
mov
outsl
add
push
std
dec
mov
or
jmp
ss
jge
xchg
and
mov
add
push
xor
loopnew
jmp
fiadds
test
cmpsb
aaa
out
fimuls
pushl
lds
cmp
bound
push
mov
cmp
cmpl
jbe
incb
je
inc
sub
clc
jnp
adc
jle
hlt
push
daa
or
adc
addsd
dec
popl
pop
fcom
xorl
dec
xchg
dec
jno
mov
movsb
sub
hlt
lret
jae
jmp
xchg
dec
push
jge
xor
cmp
mov
ret
in
and
ret
jl
sahf
xlat
mov
and
adc
push
insb
mov
jmp
push
gs
test
addr16
mull
mov
mov
in
fnstenv
test
jo
mov
mov
sub
fistps
sub
pop
je
ja
loope
stos
pop
es
fistps
mov
addr16
test
test
fadds
jg
rorl
sub
dec
xor
mov
dec
popf
mov
push
into
push
xlat
fwait
inc
gs
sbb
scas
movsl
imul
subb
dec
cmp
fnstsw
cli
jnp
or
iret
testl
or
xor
mov
stos
add
xor
clc
inc
popf
scas
cmp
or
ljmp
test
add
or
jecxz
xlat
mov
in
xchg
scas
xor
repz
xchg
jno
mov
adcl
cmp
popa
mov
icebp
sbb
sub
and
insl
jae
outsl
adc
data16
popf
pop
gs
pop
and
pusha
lret
ror
adc
dec
aam
jmp
cmpsb
push
outsl
sbb
rcrb
fists
test
lahf
jle
add
push
lcall
in
jns
mov
std
sub
jp
inc
stos
fbstp
jne
xor
fstl
jl
dec
adc
jecxz
out
cmp
gs
mov
add
dec
xchg
insb
dec
xchg
outsb
popf
fildll
movsb
push
adc
iret
inc
enter
mov
push
in
mov
jo
mov
out
out
test
ljmp
out
jns
jno
jg
dec
sbb
cmp
hlt
arpl
jmp
pop
rcl
mov
aas
bound
fldl
xchg
push
mov
js
mov
sbb
addb
sub
inc
push
adc
mov
sbb
push
lret
mov
ficoms
ss
inc
push
inc
mov
mov
pop
inc
daa
int
sahf
outsb
mov
popf
fnstsw
xchg
mov
jg
fcmovnu
push
bound
ja
mov
pushf
mov
ret
decb
lcall
stos
xchg
add
and
out
movsb
nop
inc
sbb
insl
push
inc
add
scas
fs
data16
adc
add
orb
fisubl
and
push
mov
test
add
mov
sbb
rorl
int3
xchg
add
outsb
pop
cmp
std
mul
inc
add
jno
and
xchg
rorb
cmpb
sar
mov
ret
jo
sbb
push
mov
sub
icebp
jmp
push
ret
jo
jns
in
fdiv
mov
ja
adc
mov
faddl
jmp
fsubr
xlat
push
lcall
xchg
dec
xchg
cmp
pop
pmaddwd
out
mov
sbbb
fs
and
imul
jmp
xlat
lret
sarl
and
jne
inc
pop
jb
sub
lret
mull
fsubrs
dec
cmp
or
scas
pop
mov
fcomi
out
push
push
stos
sub
aas
add
adc
xor
addr16
out
and
sub
leave
lods
call
stos
lcall
fimull
or
in
mov
jge
push
mov
subb
lahf
and
mov
adc
push
inc
cmp
mov
and
or
cmpsb
imul
addl
mov
hlt
push
aas
xchg
mov
xchg
cmp
and
aaa
shll
and
imul
and
sbb
sti
adc
add
dec
inc
aas
add
pop
mov
scas
ret
dec
xor
push
shll
bound
dec
jecxz
jl
and
inc
dec
cmpsb
jecxz
cli
imull
cmp
dec
insl
push
jne
jne
cmp
and
lahf
cs
jno
ljmp
sti
idivl
cmpsb
push
jmp
xchg
sub
push
mov
outsb
xchg
ljmp
sbb
or
fdivrl
sub
adc
outsb
jns
mov
sahf
mov
divl
popf
inc
shlb
dec
je
lds
loop
push
or
xlat
cmp
cmpsb
dec
arpl
xchg
aad
sub
xor
sarb
loopne
push
pop
xlat
in
jb
arpl
adc
pop
jge
lret
mov
stos
cwtl
test
and
push
je
cld
adc
or
repz
mov
jmp
jle
mov
mov
jnp
or
std
aaa
jl
dec
adc
add
dec
mov
jmp
dec
push
adc
ret
aas
xor
js
les
insl
and
test
jecxz
jl
rcrl
mov
cmp
pop
or
pop
out
or
push
mov
inc
mov
cli
mov
in
inc
or
mov
add
je
scas
sub
push
add
mov
outsb
sub
pop
pop
fistl
pop
lahf
dec
nop
std
jmp
int3
and
push
aam
pop
xlat
adc
pop
cld
mov
and
jne
xchg
idiv
add
mov
inc
xchg
mov
out
aas
push
xor
shll
out
xor
cltd
push
movsb
lods
mov
cmovb
sti
loopne
add
mov
ret
mov
inc
jb
and
pop
and
push
inc
aas
inc
sbb
out
adc
mov
out
addr16
sbb
dec
add
int
xchg
mov
xchg
jne
add
xor
push
mov
push
or
dec
fcomps
and
int3
inc
imul
and
popf
out
repnz
loope
mov
pop
es
xor
in
dec
cmpsl
sbb
andb
xchg
out
pop
xchg
lock
dec
mov
pop
mov
bound
nop
int3
sub
aam
ret
cmpsl
push
sbb
divb
sub
cli
cs
std
mov
cmpsl
imul
les
fistpll
xor
aaa
xor
lret
loopne
in
xchg
inc
lret
cmp
stos
dec
ret
inc
not
and
xor
dec
jo
cwtl
pop
mov
sahf
cmpsl
cmp
lea
pushf
cmpsl
mov
loop
test
push
ret
sub
inc
mov
mov
imul
or
orl
mov
lds
shll
sbb
inc
cmp
pop
add
pop
mov
push
sbb
mov
in
xchg
std
or
jle
jne
test
mov
push
mov
cmp
ds
scas
mov
outsb
test
stc
fldl
stos
ror
push
imul
test
or
shll
inc
out
mov
pushl
aad
popa
mov
sbb
je
cli
jge
add
mov
jbe
push
lahf
mov
pop
ficomps
xor
push
lret
aas
push
xor
jo
mov
pop
mov
dec
jno
int3
adc
xchg
cli
sub
pop
cmp
cli
scas
xor
int3
adc
and
mov
cld
mov
incb
or
lcall
sbb
lock
push
cwtl
xchg
aaa
ret
cwtl
stc
ret
cmpsb
jle
jmp
mov
aam
in
pop
fmuls
movsl
scas
and
enter
in
add
dec
pop
negl
std
sarl
jmp
pushf
cmc
push
icebp
pop
sbb
xchg
std
cmc
ficompl
add
or
push
lahf
jo
inc
pop
or
inc
int3
and
test
in
pop
pop
xor
cwtl
jmp
int
out
push
push
shlb
movsb
inc
add
sahf
scas
int3
push
dec
stos
sbb
adc
inc
sub
fcom
cli
test
mov
sbb
adc
mov
scas
sbb
push
stos
lods
mov
xor
pop
fmull
shrb
sub
sbb
jns
xor
cmp
ret
imul
movsb
and
jnp
and
mov
cmp
jecxz
mov
dec
stos
push
incb
inc
into
jae
aad
dec
mov
aas
roll
fistpll
cmc
or
outsb
pop
and
pop
cli
xor
out
mov
pop
out
int
aaa
mov
sbb
pop
ret
scas
outsl
mov
xchg
cmp
jns
cmp
push
arpl
in
sub
sub
scas
adc
iret
pop
fdivr
mov
or
mov
jmp
lcall
lock
aaa
push
push
dec
iret
sti
sub
inc
lcall
xchg
jae
sub
mov
insl
push
mov
nop
mov
push
sub
es
ficompl
sub
test
mov
out
sbb
mov
scas
pop
movsl
mov
iret
ljmp
jmp
xchg
lods
into
movsb
push
dec
mov
inc
and
mov
xchg
imul
std
add
in
pop
leave
loope
push
test
in
jnp
jg
out
rolb
je
mov
fisttpll
aad
adc
fs
add
mov
mov
outsl
mov
mov
insb
cmp
outsl
inc
dec
popf
cli
aas
sbb
push
dec
pushf
add
enter
outsb
dec
jmp
lret
or
mov
bound
push
test
leave
out
ja
loope
cmc
inc
adcb
sbb
jae
push
insb
mov
ss
das
stos
push
mov
sbb
push
or
test
adc
aad
jp
in
loop
mov
int
add
hlt
arpl
sub
insl
mov
mov
es
test
cmp
jbe
fiaddl
or
inc
mov
push
mov
dec
cmpsb
jge
sar
mov
mov
mov
negb
xlat
cmp
sbb
icebp
xor
out
xor
inc
in
sahf
mov
scas
add
dec
imul
xlat
pop
nop
push
inc
dec
daa
lea
sub
sub
sbb
push
lret
xor
ja
xor
jns
lcall
cmp
pop
sbb
into
jle
add
cwtl
ss
dec
inc
mov
loop
ds
cltd
mov
insb
adc
and
repnz
mov
xorb
les
lahf
adc
les
dec
adc
hlt
cmp
pop
jg
mov
rcll
adc
cli
into
iret
fcoml
jne
add
in
imul
and
sbbl
push
mov
leave
push
repnz
imul
insb
mov
jb
cmc
jo
adc
mov
int3
sub
adc
jp
das
imul
mov
mov
xlat
lds
es
iret
push
cmp
jmp
mov
push
mov
and
test
mov
je
xor
dec
fisubs
mov
ljmp
das
pusha
subb
fs
push
popa
subb
insb
cmp
xor
mov
pusha
loopne
jae
push
scas
pop
xchg
rcr
inc
push
hlt
fcmovnbe
in
add
popf
pop
inc
mov
sbb
scas
cmp
sbb
stos
mov
sbb
in
mov
xor
fnstsw
decb
cmpsl
in
jae
pop
lret
repz
xor
aaa
loope
and
test
je
test
xchg
mov
mov
shlb
xchg
mov
les
sbb
lahf
in
out
mov
lock
in
and
cld
dec
dec
xor
fs
aam
push
es
add
in
sbb
rcrl
fstl
lea
mov
enter
jmp
aam
mov
pop
js
hlt
xor
loop
or
andb
je
mov
mov
pop
adc
xorl
and
pop
orl
xchg
xchg
test
lret
add
sbb
je
daa
test
mov
adc
rcll
push
push
and
cmpsb
pop
add
out
cltd
out
ficoms
lret
xchg
cmp
fldt
fildl
cmc
mov
cs
push
lea
push
shrb
pop
fcmove
sbb
cmpl
add
sbb
add
stos
dec
dec
iret
jecxz
lods
cmp
and
mov
mov
out
xchg
imul
pusha
loop
in
outsb
dec
adc
out
inc
aad
push
jb
or
lods
push
sahf
xor
ret
shrb
and
xor
mov
arpl
notb
int
jmp
stos
mov
xor
mov
push
es
shlb
ret
mov
in
mov
mov
jo
mov
ljmp
xor
test
stos
int
push
add
arpl
jmp
lock
pop
psllq
and
sub
testl
adc
mov
and
add
ss
adc
mov
cwtl
fxch
and
aaa
insl
rorl
js
jl
cmp
push
or
adc
mov
push
clc
mov
gs
and
mov
mov
dec
in
pop
ljmp
shl
mov
fmuls
mov
fwait
std
repz
das
test
in
xor
subb
or
mov
arpl
out
lret
sti
call
loope
xchg
jae
and
fsubrl
push
inc
fistpl
inc
and
jo
or
mov
stos
lret
fcmovnb
sbb
jne
imul
call
sub
frstor
add
mov
pop
and
mov
mov
jae
std
lret
dec
ret
psubusw
test
xlat
sbb
enter
xchg
jbe
adc
add
mov
pop
ficomps
cmp
fwait
mov
xor
cld
jns
imul
adc
or
test
add
xlat
push
lcall
mov
jl
pusha
jge
mov
cwtl
fs
mov
fldcw
cmpsb
cmp
iret
xlat
sti
vcvtsi2sd
cmp
pop
mov
and
test
add
xor
imul
outsb
mov
jle
and
jo
ss
adc
mov
sub
popf
mov
pop
mov
and
xor
push
pop
test
aam
movsl
push
add
jg
add
add
mov
push
popf
jle
or
dec
mov
add
scas
loope
fmuls
pop
repnz
addr16
push
pop
push
hlt
stos
fistps
lret
flds
adc
pop
popl
outsl
repz
arpl
cwtl
or
or
fisubrs
repz
jl
mov
insb
push
dec
mov
push
hlt
mov
les
mov
adc
sbb
push
xor
lods
imul
and
pusha
xlat
nop
fstl
pop
pop
adc
pop
or
push
roll
repz
dec
inc
into
sbb
or
and
stc
jmp
shr
icebp
mov
lods
dec
sbb
pushf
sub
and
xchg
pop
jmp
hlt
cmp
pop
sub
xor
sahf
xor
lret
sbb
adc
pop
jle
bound
xor
sbb
push
push
cwtl
stos
add
in
inc
insb
add
popf
xchg
pop
orb
push
mov
inc
dec
push
dec
addb
in
pop
sbb
add
cmp
roll
sub
or
and
es
int3
int3
scas
mov
push
xor
pop
dec
mov
mov
lock
movsb
sub
aad
stos
fldenv
popf
popf
jnp
int
push
nopl
orl
sbb
dec
push
aam
std
leave
mov
popf
cltd
idivl
hlt
movsb
xlat
pop
rclb
xchg
ljmp
push
call
fs
xchg
jecxz
fwait
nop
lret
das
je
int3
lods
cmp
add
jecxz
lods
dec
jne
and
negb
vxorpd
imul
dec
pop
in
xchg
pop
fldenv
mov
ret
nop
loop
shl
iret
in
popf
cmp
test
imull
aaa
ret
add
fcoms
lock
addr16
inc
dec
lret
inc
lret
outsl
into
push
xor
sub
sub
sub
xchg
movsl
push
sub
add
jae
add
sub
push
or
orl
shlb
call
or
subl
cltd
lret
jmp
addl
mulb
ret
adc
mov
add
cmp
mov
in
mov
cmpsb
jl
adc
adc
loopne
add
stos
int
xchg
push
cwtl
cwtl
rorb
fnstcw
int3
fwait
insb
pushl
pop
pop
stos
xor
mov
mov
mov
fs
js
or
xchg
movsl
lock
and
fs
jl
pop
fcom
jbe
pusha
pop
js
scas
cli
ss
jae
mov
pop
pushf
pop
jbe
mov
fwait
xchg
jno
jg
push
mov
mov
ss
adc
lock
mov
aam
cmp
or
and
int
pop
mov
xchg
or
out
xor
sub
dec
repz
les
dec
and
ljmp
and
popfw
cmp
imul
mov
ds
lods
jp
lods
adc
mov
mov
mov
sbb
outsb
pop
in
loop
xor
addps
shr
cmp
pushf
dec
push
jno
push
aaa
ret
mov
imul
and
cltd
adc
sub
iret
shll
xor
and
and
jne
addr16
mov
adc
pop
mov
sbb
mull
outsl
lcall
iret
aad
or
add
out
lods
insb
xchg
cmpsb
lea
cmp
insb
pop
js
lcall
jnp
pop
test
inc
outsl
dec
lea
xchg
sar
inc
cmp
xor
cmpsl
notb
jle
lahf
inc
and
outsl
xchg
push
out
in
fldcw
dec
jmp
adc
loopne
bnd
imul
jne
test
cli
stos
lods
clc
andl
or
adc
ljmp
icebp
das
in
sti
sub
data16
dec
ss
out
push
fsts
inc
inc
inc
ret
popf
pop
shll
ds
aam
xchg
jecxz
xchg
cwtl
mov
cmpl
inc
sbb
or
cli
ret
sbb
and
mov
inc
fs
xchg
mov
inc
pop
cli
push
push
sbb
or
add
ljmp
jbe
imul
lea
fisubrs
lock
imul
lock
or
sahf
fnsave
dec
pusha
arpl
cli
loopne
int3
jae
fwait
jmp
or
cld
out
pop
mov
scas
xchg
mov
or
sarb
cmc
add
push
scas
mov
scas
pop
loop
stc
mov
subl
sbb
xlat
in
aaa
cltd
in
mov
out
jnp
shrl
and
leave
pusha
outsl
dec
daa
aam
aad
mov
pushf
push
push
cmp
imul
scas
cmc
add
mov
xchg
cwtl
lods
add
pop
fmull
test
inc
in
cmp
cmp
add
lock
pop
pop
gs
shlb
xchg
dec
shr
and
rcl
push
je
arpl
loop
push
push
inc
pop
test
loopne
mov
addl
pop
daa
pushf
xor
ret
cli
std
test
pusha
dec
sahf
pop
xlat
loope
adc
out
sti
pop
cmp
in
lds
lret
and
and
pop
dec
out
sub
mov
xchg
and
inc
sti
adc
stos
sub
dec
lcall
jne
cmp
sbb
sbb
pop
cli
cmpsb
mov
jecxz
push
mov
cmp
xchg
xchg
fidivrl
lods
xor
mov
rcrl
lahf
jmp
push
cmc
std
pop
mov
mov
pop
mov
inc
or
mov
adc
mov
aaa
aaa
or
adc
inc
mov
dec
shlb
xor
imul
hlt
cmp
mov
pop
dec
xchg
mov
pop
adc
xorl
divl
cld
push
dec
jp
mov
pop
mov
cmpsl
sbb
mov
pop
push
adc
dec
cmp
imul
pop
iret
inc
sbb
jae
stos
aam
aaa
xchg
or
sbb
push
sbb
push
loopne
aad
outsl
push
imul
xchg
and
adc
or
in
ljmp
xor
mov
aas
mov
pop
sahf
dec
outsb
in
push
mov
rcl
or
mov
push
fmuls
icebp
dec
icebp
pop
xchg
hlt
rcll
inc
mov
ja
leave
xlat
movsl
pushf
cmp
or
push
pop
inc
hlt
test
int3
sub
dec
and
ja
les
push
cmp
sbb
mov
das
lods
or
movsb
push
shlb
outsl
test
jmp
xor
push
inc
cmp
stos
mov
movb
je
sub
das
mov
sbb
xor
sbb
push
rcr
inc
dec
xor
fcompl
iret
in
sbb
xchg
in
dec
imul
push
outsl
mov
push
mov
cmp
out
lret
lods
pop
mov
shrl
dec
xor
sbbb
mov
jg
cld
movsl
test
test
mov
and
sahf
js
mov
inc
jmp
jne
xchg
mov
call
dec
clc
cmc
dec
or
cmp
andb
adc
cmp
jmp
std
push
ljmp
pop
jle
mov
jnp
add
xor
lcall
ljmp
subl
adc
mov
sub
in
mov
icebp
jg
clc
ja
scas
or
xor
jb
es
mov
pop
lods
push
cmpsb
xor
xorb
shlb
hlt
sub
push
jmp
or
dec
test
jb
lret
cmp
mov
nop
loop
inc
mov
shl
stos
add
cltd
andb
in
mov
mov
xchg
out
cwtl
gs
data16
div
cwtl
lcall
inc
icebp
ret
insb
cmc
call
sbb
pushf
incb
in
xchg
xor
rcrb
out
cmc
sub
xorb
gs
push
bound
cmpsb
js
push
sbb
xchg
push
lret
cmp
imul
dec
subb
pop
lret
aad
add
xor
fdivs
push
outsl
mov
les
pop
mov
das
scas
pop
xchg
mov
dec
cs
pop
dec
xchg
jne
loope
sbb
mov
dec
popa
mov
inc
adc
lret
sub
xchg
addl
ret
outsb
jnp
and
rol
cmpsb
popa
pop
sbb
or
popa
mov
jp
outsl
mov
movsb
inc
mov
and
inc
scas
repnz
dec
or
fnsave
rcll
loopne
ficompl
icebp
mov
bound
fadds
outsl
fidivs
adcl
stos
adc
push
xorb
mov
xchg
dec
mov
cmp
mov
ss
orl
mov
and
out
adc
add
jle
lahf
pop
adc
sbb
cmp
cmp
fldl2e
shl
jo
rorl
xchg
mov
dec
in
fstl
jmp
cwtl
mov
dec
imul
mov
push
imulb
add
inc
fidivrl
xchg
test
daa
fs
cltd
cmp
imul
icebp
stos
push
repz
stos
push
lods
lret
out
jne
sub
xchg
mov
lds
adcb
cltd
inc
ret
dec
lahf
jnp
arpl
mov
mov
add
add
mov
and
mov
mov
fdivrs
std
mov
testl
call
sub
push
cmp
les
jl
mov
lea
inc
test
push
insb
icebp
pusha
and
sarb
in
push
mov
arpl
sub
cltd
js
rcr
fimull
mov
lahf
xor
call
add
sbb
sbb
enter
push
xchg
adc
sub
dec
lods
push
ret
cld
cmp
push
in
cmc
dec
pop
add
jle
add
int
jne
xchg
aad
cmp
or
adc
popf
or
test
cltd
imul
bound
mov
std
pop
ljmp
dec
xchg
int3
push
aam
sub
cmp
xchg
push
sub
jge
ss
dec
in
mov
stos
fcoml
xor
mov
xor
sbb
sub
fidivrl
mov
ds
icebp
mov
pop
loop
in
ljmp
pop
pop
dec
out
loope
iret
cmp
pop
xor
outsb
push
xchg
pop
push
add
iret
xchg
daa
mov
and
lods
je
mov
mov
jmp
stos
test
cmp
roll
xlat
clc
push
push
sub
or
mov
xor
xchg
xchg
adc
movsl
outsl
scas
cwtl
mov
repz
or
ljmp
iret
push
scas
stos
in
add
mov
or
adc
mov
inc
push
cwtl
arpl
out
outsb
xchg
dec
dec
add
xchg
mov
add
dec
mov
ja
addr16
xchg
add
lahf
addl
int
mov
cmpsb
xchg
call
lret
dec
mov
jmp
xor
cmc
mov
fdivr
xchg
add
push
sub
fistps
rorb
mov
inc
jmp
pop
rorb
inc
pop
call
pop
dec
jmp
fstpl
icebp
pop
aam
sahf
test
std
jbe
fs
outsl
testl
adc
pop
aas
mov
add
mov
xchg
test
or
adc
sbb
jbe
add
js
cs
in
cmp
dec
int3
push
dec
clc
jo
xchg
add
jnp
pushf
jb
mov
or
sub
xchg
push
les
or
jns
jne
pusha
mov
and
xor
or
sub
fcompl
lods
pop
push
lds
pushf
mov
xchg
mov
movsb
out
negb
push
jnp
jge
push
pop
mov
xchg
mov
xor
push
cmp
imul
or
out
dec
loop
and
adc
out
mov
adc
subl
inc
xchg
leave
icebp
dec
imul
sbb
aad
jo
fwait
add
shrb
xchg
adc
inc
in
pop
clc
aad
adc
sbb
add
push
bnd
push
and
fstpl
loop
push
loopne
dec
pusha
and
pop
dec
push
imulb
lahf
jo
loope
jmp
mov
sbb
add
std
mov
out
cmp
jmp
mov
lods
mov
ja
dec
ret
cs
mov
adc
add
arpl
mov
lds
jno
adc
fisttpl
jge
cmpsl
mov
push
mov
jae
add
aaa
mov
cmpb
lea
dec
sahf
stos
std
not
xchg
xor
jbe
rol
mov
cwtl
in
std
out
call
and
imul
dec
cli
idivl
dec
pop
jae
xor
mov
push
pop
push
pop
in
pop
or
arpl
cltd
sub
xchg
mov
popf
shll
fidivs
shlb
mulb
stos
xchg
jp
pop
cld
das
xchg
mov
lret
cmpsl
popf
insb
test
out
add
cmp
ss
dec
xor
xchg
mov
cmp
cmp
jns
popa
jge
shlb
sub
mov
mov
add
mov
js
inc
mov
or
cld
xor
std
repnz
xor
inc
jge
das
rolb
push
mov
icebp
and
push
sti
out
fdivrs
sub
cvtdq2ps
jb
mov
stc
push
and
xlat
mov
loopne
or
mov
mov
jmp
xchg
aad
mov
xchg
add
adc
sahf
scas
enter
and
in
cli
lods
cmp
fwait
jle
xchg
repz
and
xchg
inc
mov
movsb
lret
sbb
lods
pushf
and
nop
pop
roll
pop
cli
notb
jae
icebp
ljmp
mov
scas
cmp
leave
pop
dec
pop
roll
aaa
xchg
sbb
fwait
dec
mov
nop
ret
mov
or
in
in
cmp
test
and
fcmovne
xor
push
push
movlps
cli
push
jl
cmp
pop
leave
fldt
push
jnp
inc
in
xor
mov
cmpsb
cltd
mov
mov
loopne
mov
sbb
and
mov
mov
js
push
push
cs
cmpb
mov
loopne
lret
iret
outsl
inc
add
lahf
je
pop
jl
call
fimuls
aam
mov
stc
mov
cmp
popl
ds
inc
pop
outsb
push
add
cmc
ljmp
inc
xchg
es
dec
dec
fdivl
fadd
pop
push
jae
lahf
test
adc
insb
rol
mov
xchg
add
test
mov
enter
mov
add
or
lret
stc
bound
bound
clc
sbb
mov
jbe
popa
xlat
mov
call
lret
rcll
dec
arpl
fwait
sub
je
and
scas
sbbb
xor
dec
lods
lds
fidivrl
repz
sub
in
dec
cld
fdivs
push
mov
or
scas
push
movsb
hlt
dec
sub
pop
inc
rcl
inc
jb
xor
push
mov
ficoms
test
mov
sbb
sbb
mov
xchg
inc
or
dec
popl
jno
in
mov
sub
xchg
xchg
push
add
or
pop
lea
inc
iret
mov
dec
sbb
dec
sub
or
xchg
aas
mov
sahf
movsb
xorb
inc
xor
mov
scas
add
ret
jecxz
ret
mov
mov
or
outsl
ja
jnp
add
mov
xchg
mov
mov
xchg
lahf
adc
dec
test
push
clc
mov
sub
pop
add
sbb
ja
loopne
mov
out
in
dec
repnz
cmp
ror
adc
pop
push
cmp
jbe
sbb
ret
pop
add
add
cmpl
add
mov
mov
or
aam
jge
ljmp
add
mov
scas
icebp
xchg
movsb
adc
xchg
dec
fsubs
mov
das
lods
aaa
cmp
orb
xor
pop
rolb
push
mov
push
mov
gs
repnz
dec
lret
dec
call
adc
xor
sbb
xchg
les
xchg
jg
inc
mov
int
nop
jns
mov
xor
mov
mov
fucom
xorb
pushl
aas
imul
aam
popf
pushf
in
push
fbstp
inc
daa
jge
push
mov
incl
out
xor
int3
mov
movsb
pop
xchg
fldl
and
in
dec
addb
and
sbb
fists
jno
push
or
fsub
jmp
insb
jmp
xchg
sub
clc
call
iret
es
cltd
outsb
push
pop
sub
out
cmpb
fucomp
bound
fdivr
in
jne
xchg
mov
jbe
xor
mov
sbb
pop
cld
adc
loopne
fs
adc
icebp
mov
fcoml
and
pop
push
fcoms
outsl
mov
dec
sti
enter
adc
or
sbb
subb
jns
shr
outsb
rol
pop
pop
inc
ljmp
mov
fs
les
ljmp
iret
cmp
daa
cld
mov
inc
iret
je
mov
test
dec
insl
xor
pop
fdivrs
inc
dec
rol
xchg
out
jmp
push
jle
bound
mov
fstpl
xor
addr16
rcrl
iret
cmp
push
push
mov
xchg
shl
push
jae
jp
sub
out
jae
in
mov
push
cmc
mov
mov
pop
js
mov
daa
adc
out
aaa
mov
sarb
and
jno
outsb
rcrb
mov
ffreep
fs
fdivs
leave
aas
les
mov
xorl
xor
push
scas
test
mov
fadd
icebp
outsb
lea
insl
test
fwait
mov
arpl
sbb
loop
jp
leave
aad
mov
jb
int3
stos
movsl
addb
dec
inc
enter
sub
add
testl
add
lea
in
ds
cld
mov
mov
jno
push
dec
stc
mov
add
inc
loop
sbb
xor
adc
pop
xchg
les
movb
add
sbb
add
pop
fwait
out
xchg
sbb
imul
hlt
movsl
stos
pop
jg
test
push
and
xchg
mov
loop
pushf
xchg
adc
bound
or
jl
ljmp
sahf
clc
dec
dec
aad
rorl
push
ret
pop
inc
push
sub
std
dec
mov
hlt
ljmp
jne
inc
add
test
dec
push
push
add
or
in
add
imul
mov
fistpll
push
mov
add
sub
ret
adc
and
pcmpeqd
xor
lret
movsb
lret
popf
jno
mov
bound
xchg
pop
or
dec
lods
and
dec
loopne
lods
add
inc
push
add
add
test
mov
xchg
sub
loope
xchg
sbb
clc
repnz
mov
sbb
mov
rorl
pop
iret
lret
or
iret
mov
loope
sbb
push
cltd
addr16
adc
testl
mov
subb
jle
xor
jnp
push
or
aam
sti
dec
push
loope
addb
shll
lods
adc
je
add
fcomip
cld
jmp
lret
out
daa
cwtl
sbbw
push
in
sub
loop
push
pop
cld
ret
les
xchg
outsb
xor
mov
or
jns
mov
jo
pop
push
sti
shlb
aam
fdivl
xor
aas
loop,pt
fisttpll
rolb
sub
into
leave
repnz
cmp
int3
lcall
in
jne
add
mov
outsb
sub
jnp
jno
xor
icebp
in
sub
jecxz
pop
loop
aaa
aas
jne
lock
jecxz
mov
sbb
inc
push
sti
dec
xchg
pop
xchg
cmpsb
mov
daa
sbb
xor
fldcw
iret
jl
sub
repz
pop
lahf
mov
mov
cwtl
gs
out
adc
sarb
in
push
cs
call
daa
in
imul
add
jbe
pushf
fmull
inc
cltd
stc
sbb
in
cmp
sarb
push
dec
je
dec
cs
dec
dec
dec
fldt
jae
int3
mov
inc
jo
std
mov
or
xor
adc
jecxz
sub
adc
push
mov
jbe
es
mov
divb
push
pop
cld
ljmp
loope
in
sbb
arpl
shll
fdivrs
insl
icebp
cmpsb
and
adc
pop
xchg
adc
inc
lret
pushf
xchg
ret
cmp
pusha
pop
in
popf
lahf
outsb
outsl
sbb
cmpsb
xlat
clc
lock
call
into
sahf
dec
out
lods
jp
cmp
insb
mov
adc
jno
mov
outsb
dec
adc
inc
fwait
stos
or
clc
mov
mov
shr
idivl
pushl
test
imul
cltd
shlb
arpl
and
mov
mov
sub
shrl
shlb
fwait
stos
mov
mov
fistpl
shlb
cmp
inc
enter
pop
enter
cmp
fstps
mov
xchg
xor
mov
cmp
loop
xor
jg
jecxz
or
add
test
stos
les
imul
mov
pop
push
lcall
hlt
mov
jl
lret
mov
jno
adc
push
add
dec
stos
and
movsl
lret
jp
in
insl
adc
xor
popa
mov
mov
test
movsl
insl
dec
push
cmpsl
sbb
es
cs
cmpsl
and
pushf
mov
notb
adc
add
mov
cmp
inc
test
aam
test
mov
inc
pop
out
hlt
cmpsl
xor
jne
xchg
popf
les
mov
push
js
lds
loop
pop
xor
cmp
mov
inc
loopne
cld
add
int
pop
aam
or
push
add
jb
xorb
movl
push
sti
push
pop
lods
out
mov
pop
cmp
xlat
scas
lcall
aam
stc
test
xchg
icebp
loop
lods
pop
data16
mov
jle,pt
pop
ror
pop
pop
or
repnz
inc
sti
jne
jl
add
sar
in
pslld
sub
jns
jle
aam
sahf
fldenv
loope
mov
xchg
test
imul
adc
shr
mov
fnstsw
and
loop
test
incl
rolb
stos
rcrb
xchg
fwait
xchg
in
push
mov
dec
sbb
test
lahf
xchg
je
repnz
popa
cmpsb
mov
notl
or
xlat
test
pop
xchg
jle
mov
sbb
clc
shll
xchg
push
mov
cwtl
push
hlt
pop
ds
jmp
and
aaa
mov
cld
mov
jge
inc
movsl
movq
insb
jbe
jg
daa
jno
jno
out
mov
push
icebp
lea
imul
ja
and
adc
push
push
nop
fwait
pop
cmp
cmp
shrb
pop
pop
push
fnstsw
addb
leave
scas
je
je
rcll
adc
call
popa
push
sbb
jmp
push
xchg
mov
popf
push
cmp
icebp
add
popa
enter
mov
mov
out
das
fidivs
xor
inc
adc
std
mov
pop
in
pop
add
xchg
outsl
jp
cmpsb
std
cmp
icebp
out
push
mov
lret
sub
bound
leave
cmp
or
mov
movsb
insl
out
adc
insl
and
mov
lods
movsl
lds
aaa
shl
dec
divb
inc
aaa
jecxz
pop
cmp
aam
xlat
jbe
nop
dec
jp
jb
cmp
pop
mov
and
pop
jge
cmp
imul
jl
dec
sbb
sti
dec
in
adc
pop
xlat
fistpl
repz
mov
inc
pop
nop
or
pusha
mov
fsubrs
mov
pop
in
cmpsb
movsb
mov
or
jne
and
add
adc
cmc
mov
mov
mov
test
xchg
popf
test
ds
mov
mov
dec
popf
mov
jno
loopne
jmp
pop
mov
mov
in
rcll
mov
adc
in
in
jmp
xlat
add
or
and
sub
mov
popa
pop
mov
ljmp
jmp
xor
imul
pop
fsts
cmp
pop
scas
cmp
pushl
or
aas
jae
sub
or
cmp
in
mov
push
mov
mov
rcrb
mov
mov
fisttps
mov
std
push
dec
enter
mov
test
pop
sbb
ret
leave
rolb
add
pushf
mov
fsubrl
test
rcrl
ljmp
push
jb
dec
xchg
mov
leave
fsubr
bound
test
rol
pusha
lock
inc
js
cld
mov
gs
and
mov
jp
or
sbbb
pop
test
and
popa
mov
jp
jno
jl
jle
aas
test
jbe
cmc
mov
jmp
clc
shr
mov
sub
gs
mov
or
add
sub
xchg
sub
adc
adc
sub
loopne
sbb
sbb
dec
add
push
into
jecxz
mov
mov
xchg
mov
mov
cmpsl
xor
into
nop
cmp
idivb
int3
sbb
ss
movsb
inc
inc
cmp
mov
xchg
loope
in
adc
rclb
out
fistpl
in
sub
clc
sub
rcrl
sahf
push
jle
aas
adc
mov
mov
xchg
loopne
imul
int3
push
and
xor
cmpsb
jbe
push
clc
mov
sub
mov
orl
stos
and
push
sub
sbb
sub
fimull
push
or
cwtl
pop
cwtl
adc
ja
mov
imul
loope
push
in
dec
mov
add
fwait
in
and
movsb
ljmp
mov
ljmp
xor
sti
mov
inc
sub
pop
pushf
sarb
imul
xchg
out
pop
xor
and
xchg
xchg
sub
fldt
mov
popa
xor
sub
sbbb
shlb
jp
lods
adc
cmp
addb
repnz
rcrb
test
lods
dec
xor
fimuls
imul
in
ret
shll
and
dec
or
sbb
dec
stos
leave
arpl
mov
mov
inc
test
mov
sub
push
outsl
js
sub
xorb
mov
push
loopne
leave
cmpb
jmp
stc
jo
out
inc
mov
into
adc
fnstcw
jp
loop
shll
call
popf
mov
jae
pushf
outsl
cmp
outsb
out
mov
jle
pop
adc
imul
pop
push
cmp
movsb
das
dec
mov
push
je
fdivs
cmc
insl
xchg
pop
stc
addl
push
mov
fstpt
jo
jmp
jo
fs
lcall
or
inc
mov
cltd
call
sarl
movsl
cmpb
dec
mov
pop
xchg
mov
std
mov
in
rol
iret
xchg
mov
dec
mov
jl
pop
ret
in
sarl
dec
frstor
sar
loope
fiadds
addr16
rorl
dec
les
adc
mov
shrb
push
daa
popa
fisubl
mov
arpl
into
fadds
push
push
in
push
imul
in
adc
aas
sub
inc
outsb
xor
out
cmp
in
cmp
pop
loop
iret
mov
ret
incb
mov
sarb
xor
cmp
and
sbb
pop
pop
add
push
shll
ficomps
call
je
mov
or
cld
xor
jne
test
sub
imul
xchg
inc
cmp
add
jnp
mov
pusha
into
dec
cmpsb
sbb
adc
stos
pop
repz
add
mov
clc
ja
push
lds
mov
mov
bound
push
adc
mov
sbb
stos
je
lds
sub
outsl
xor
repz
push
inc
cmp
fcomip
jecxz
inc
ja
inc
pop
loop
or
add
push
xchg
inc
adc
pop
clc
testl
xor
aad
dec
jnp
xchg
sbb
cmp
rolb
into
in
push
popa
or
addr16
jo
inc
xchg
bound
mov
and
incl
test
cltd
xor
xchg
adc
sub
push
and
ljmp
or
test
lods
xchg
mul
lcall
clc
cld
imul
mov
mov
mov
mov
mov
sub
xor
stos
pop
mov
mov
data16
dec
xor
jl
inc
lds
and
aam
jno
fwait
incl
adc
aad
xchg
mov
arpl
add
and
xor
sub
test
ds
dec
xor
cmp
lods
imul
lods
cmp
stc
sbb
sti
mov
sub
xchg
cmpsl
shll
and
in
cmp
pushf
in
xor
push
in
pushf
pusha
mov
loop
outsb
movsl
pop
push
sbb
mov
push
mov
nop
pop
or
jo
int3
push
jo
cltd
jns
dec
sti
fcoms
hlt
sub
lcall
scas
xor
int
es
jecxz
gs
mov
mov
insb
aad
ja,pt
sub
mov
insl
bound
jo
fdivr
aad
mov
jle
ret
ljmp
pop
xor
std
mov
outsb
inc
arpl
xchg
fldl
lods
sub
sbb
dec
pop
fildll
mov
add
ljmp
and
mov
inc
mov
sarb
and
call
es
cwtl
fsts
pop
test
jecxz
pop
adc
mov
mov
jae
fsubs
inc
std
or
jnp
movsb
insb
paddq
jecxz
or
xchg
out
rep
mov
roll
repz
pop
cmp
hlt
add
leave
scas
mov
fldcw
cmp
shrl
stos
inc
xchg
adc
inc
out
int3
out
add
arpl
incw
ds
insl
ficoml
repnz
push
adc
adc
xor
arpl
rorl
mov
daa
dec
and
pop
adc
dec
mov
lea
hlt
adc
pop
out
dec
popw
dec
mov
data16
gs
jge
outsl
mov
sbb
lea
pop
pop
push
sub
mov
sti
fldenv
mov
and
dec
rcll
mov
sbb
add
pushf
sbb
in
stos
cmp
sbb
sti
ret
lock
ret
mov
pop
pop
pusha
cmove
rcrl
cmp
shr
sub
sub
push
sbbl
inc
mov
pusha
pop
dec
lret
pop
mov
jp
dec
add
stc
decl
fisubl
fistpl
cwtl
cmp
les
jno
out
lahf
pop
mov
bswap
cmp
inc
cmpl
addr16
xchg
jecxz
jmp
adc
xor
xchg
jle
push
lcall
fildll
test
cli
mov
popa
aaa
xchg
dec
in
pop
arpl
in
sub
mov
jns
loop
call
push
hlt
jnp
xchg
addl
pop
ret
sbb
cmpl
rclb
js
cwtl
inc
pop
lea
xchg
sub
sub
adc
pop
jge
idivl
dec
and
push
adc
xor
dec
xchg
xchg
xchg
ret
jns
in
cmp
push
into
imul
xor
sub
xorl
and
fisubs
fisubrl
fnsave
xchg
fsub
cmpsl
jle
sbb
inc
jp
das
jno
sub
mov
rorb
aaa
shrl
imul
mov
cmp
data16
pop
scas
push
mov
adc
jl
fs
loopne
jns
and
jne
sub
jb
inc
ss
fsubl
xchg
aas
movsl
loopne
or
inc
addl
imul
xlat
jge
mov
jbe
and
and
fists
enter
jmp
imul
inc
xor
jb
and
xor
arpl
fs
dec
popa
and
rclb
cmp
insl
daa
mov
movsl
mov
clc
adc
mov
and
sbb
mov
xlat
addr16
cmpsb
pop
mov
repnz
push
jp
add
add
sarb
mov
push
pop
pop
xchg
cmp
outsb
and
add
jno
lret
cmc
ja
insl
rorb
test
and
cmpsl
out
outsl
scas
sub
pop
das
inc
ja
or
js
outsl
push
enter
mov
adc
in
dec
pop
mov
xlat
in
add
fildll
pop
aas
mov
fsubrl
lds
movsl
popf
mov
sbb
out
and
aaa
pop
jae
mov
fmuls
or
mov
mov
addr16
pusha
cmpsl
outsl
testl
fldcw
test
imul
jle
xchg
sub
sarl
jno
leave
sub
mov
dec
cwtd
rolb
movsb
pop
aas
jg
bound
push
push
sbb
sbb
xor
andb
add
mov
dec
mov
pushf
or
loope
jbe
xor
loopne
push
lods
mov
shlb
ficoml
xchg
lret
dec
push
push
jae
xchg
cs
negl
call
stc
cmpsl
push
ret
mov
push
punpckhwd
pop
lea
mov
or
sbb
fstpl
loope
rorl
mov
jne
int
lods
pop
jb
aad
lea
lods
inc
add
pushf
addb
mov
add
jbe
loop
and
test
and
and
sub
or
pop
shlb
mov
call
ret
negl
in
call
jp
add
mov
stos
js
jb
jne
outsl
pop
sbb
mov
call
push
xchg
sbb
and
xor
sub
mov
in
or
mov
xchg
xlat
out
pop
pop
and
int
lds
nop
pop
pop
je
lock
cltd
inc
add
fcmovb
cmp
mov
call
lock
rolb
push
test
std
imul
push
rcrl
push
jl
inc
dec
dec
daa
and
mov
pushl
add
shlb
flds
push
gs
cmp
inc
push
mov
imul
mul
call
pop
in
dec
fwait
int3
in
leave
mov
push
mov
incl
mov
in
hlt
or
movsl
ret
aaa
mov
ljmp
and
orl
out
in
sbb
jbe
xor
sub
cmp
repz
cld
andb
pop
push
repz
jp
popf
sarl
push
adc
and
std
xor
cmp
lret
adc
les
ficoms
hlt
pushaw
fstpt
out
xor
daa
fsubs
pop
sub
icebp
adc
adc
pop
jge
jne
sub
push
les
stc
repnz
mov
xor
jbe
test
in
xchg
inc
aaa
dec
inc
mov
movsb
out
in
ss
leave
push
xor
pop
outsb
shrb
addr16
test
mov
idivl
aam
and
mov
imul
mov
mov
xchg
jl
xchg
ljmp
dec
xchg
cmpsb
mov
mov
fimuls
dec
loop
shlb
scas
hlt
outsb
mov
and
pop
xchg
xchg
outsb
cmc
push
add
fiadds
mov
js
xchg
sbb
data16
cmpsb
sbbl
ret
pusha
xchg
pop
and
pop
push
pop
mov
inc
mov
xor
or
popf
out
ret
mov
loop
inc
mov
sbb
jno
negl
add
pop
dec
add
lods
loope
inc
xchg
mov
xor
ds
psubsw
mov
lea
imul
nop
mov
ret
sbb
sti
dec
xor
leave
xchg
ret
xor
xchg
mov
inc
shl
cmp
mov
fwait
aaa
sbb
push
repz
rcrb
pop
scas
cmpsl
sbb
jnp
sahf
mov
lret
mov
movsl
negl
push
imul
push
and
packuswb
rorb
and
dec
mov
push
lret
mov
lock
cmp
cwtl
movsb
adc
loop
pushf
lea
addr16
popf
push
pop
mov
sbb
ret
cld
jno
inc
inc
or
sbb
dec
jge
imul
lods
ret
std
jne
sahf
cmp
push
ss
in
dec
fldt
sbb
test
push
xor
jp
loop
xchg
loope
daa
imul
or
lods
dec
mov
sbb
icebp
inc
cmp
or
or
sbb
lock
cwtl
les
rcrb
pop
fiadds
frstor
dec
stos
pop
cltd
pop
lret
mov
pop
frstor
xor
push
fdivl
dec
or
mov
mov
and
adc
popf
adc
add
sahf
in
outsb
bound
adc
push
enterw
jns
ds
and
es
in
push
xchg
daa
cmp
inc
or
divl
jmp
loope
mov
test
xor
aaa
inc
aad
mov
not
mov
jmp
hlt
pop
aas
mov
test
pop
xor
sti
out
push
xor
mov
sub
xchg
dec
das
nop
mov
mov
lret
sahf
clc
popa
push
adc
hlt
jmp
pop
fsts
roll
or
ss
aaa
js
shll
jbe
mov
push
pop
push
sbb
push
add
pop
and
out
addl
in
add
insl
hlt
or
ret
or
das
addr16
test
inc
out
sub
pop
add
mov
pop
jae
and
add
pop
cli
pop
sbb
sbb
aas
xchg
decb
test
mov
sti
ljmp
or
jbe
dec
clc
in
mov
sti
sti
in
idiv
xor
push
pop
jno
jl
push
dec
shrl
inc
in
pop
pop
adc
in
pop
jno
jns
std
pop
cmp
jne
or
in
addb
out
lds
sbb
mov
jmp
dec
xor
test
shll
jno
das
data16
loop
lods
sbb
cmp
pop
pusha
xor
mov
inc
dec
xchg
test
mov
mov
mov
pop
leave
lret
sahf
cmp
shlb
fptan
adc
cmc
shl
pop
push
or
xchg
mov
frstor
sub
sbb
add
pop
iret
sar
cmp
std
mov
hlt
aaa
inc
fstl
ffree
jle
gs
mov
cwtl
cld
loop
push
es
and
pushf
lret
xchg
add
andl
xchg
xchg
imul
inc
push
test
pusha
sahf
andb
dec
adc
std
cmp
movsl
xchg
fildll
dec
icebp
fs
inc
jns
ljmp
pop
mov
mov
into
mov
jo
jnp
insb
in
sbb
sbb
cmp
in
repnz
fstl
dec
and
addr16
shrl
or
clc
sbb
dec
or
loopne
movsb
xchg
sub
faddp
in
pop
shrb
add
inc
add
push
mov
loop
in
mov
adc
negb
sbb
int3
imul
xchg
repz
add
push
andb
push
sub
repnz
arpl
dec
das
fidivl
dec
sub
mov
push
mov
stos
subb
pushf
clc
add
sub
xchg
sbb
cmp
cmp
ja
addb
xchg
push
data16
mov
pushf
push
lahf
iret
mov
jmp
jl
js
xor
jne
stc
jp
xchg
test
cli
lea
into
stos
out
sub
sbb
jae
cmpsl
fnsave
or
inc
addl
test
mov
data16
cmpsb
push
subl
push
xchg
inc
lods
dec
push
lret
add
stos
dec
ret
outsb
in
jmp
int3
jecxz
cmp
mov
fcmovbe
hlt
test
lret
jmp
xchg
mov
mov
mov
sbb
bound
cmp
cmp
rorb
and
mov
mov
fisttpll
mov
xor
test
enter
and
xchg
adcb
sti
mov
rcr
xor
and
jb
sub
xchg
pop
lods
jge
leave
push
mov
push
out
insl
or
xor
sti
mov
popf
xorb
xchg
mov
cld
icebp
lret
inc
xor
cmp
pop
test
push
mov
std
arpl
fisubrs
cmp
or
adc
inc
adc
jnp
mov
push
ljmp
push
mov
xchg
xchg
xchg
lock
mov
call
loope
es
dec
add
test
fstpl
in
ljmp
mov
outsb
jecxz
or
test
cmp
sbb
pushf
adc
pop
into
pop
cmpsb
dec
cmp
loope
loopne
rclb
rcrl
sbb
xor
in
xchg
pop
cmp
jo
sub
call
pop
pop
popf
clc
pop
icebp
jo
xchg
ret
mov
adc
jle
movsb
xchg
mov
das
push
stos
aas
cs
mov
adcl
pop
ljmp
rcrb
movsl
xchg
cmc
cmp
lea
cwtl
mov
aad
mov
jecxz
dec
push
fstl
dec
sub
sbb
and
cmpsb
and
mov
xchg
out
shrl
sub
stos
call
mov
jg
insl
jl
push
aaa
cmp
cli
fldenv
xor
movsl
add
add
dec
fdivrp
andl
aad
mov
xor
out
cli
push
test
sar
fcomip
add
push
and
or
and
push
int3
popf
sarb
das
adc
pop
push
lds
add
stos
mov
xor
sbb
insl
push
mov
lret
pop
popf
je
and
pop
jns
pop
jne
inc
call
lods
int
push
mov
stos
ret
lock
and
daa
imull
and
mov
jmp
ljmp
jl
sti
push
pop
push
add
pop
in
enter
mov
in
dec
pushf
std
dec
push
inc
jle
test
sahf
sbb
xor
pop
arpl
mov
jp
jp
sti
inc
fst
jmp
jg
xor
jne
scas
test
call
popf
test
int
js
and
sbb
xor
jnp
or
inc
fwait
xchg
add
cmp
inc
mov
sahf
and
pop
mov
das
movsl
les
inc
jae
push
mov
imul
pop
push
xchg
dec
out
dec
mov
push
loope
push
cmc
imul
clc
insl
xor
fnsave
cltd
fmull
mov
sub
iret
xchg
pop
mov
jne
mov
sbb
sti
fistpl
test
or
xchg
dec
mov
dec
pop
or
pop
nop
mov
neg
pop
xchg
hlt
push
jbe
jo
clc
int
adc
in
pop
mov
adc
pushl
data16
lock
repnz
xorl
ret
icebp
jno
scas
int3
negl
lods
cltd
nop
fwait
push
dec
imul
pop
and
pop
aas
push
aad
jae,pt
xchg
clc
mov
jle
jne
fstps
pop
dec
popf
movntq
dec
inc
pop
addr16
adc
cmovle
inc
or
jbe
movsb
rcll
cmp
std
iret
cmp
js
inc
pop
xchg
cli
roll
lret
push
pop
imul
data16
sub
inc
iret
pop
jp
xchg
mov
in
notl
push
dec
and
clc
or
in
pushf
jae
adc
loopne
dec
mov
daa
pop
pop
sahf
fwait
jg
loop
enter
xlat
incb
shrb
push
scas
std
pop
push
cmpsl
xchg
sub
shlb
and
xor
enter
sub
xchg
push
sbb
cmp
outsl
fcoml
lock
and
ja
imul
shll
in
cmpsb
sti
fcom
jns
negl
push
jnp
dec
sub
mov
jnp
pop
lcall
insb
cmp
out
test
sbb
sub
mov
sbb
and
inc
into
push
das
pop
jge
or
cmp
gs
fs
ret
fcompl
loope
mov
mov
cwtl
cld
pusha
cmp
xchg
popa
bound
and
xchg
sbb
add
mov
sbb
and
sub
orl
mov
mov
dec
jge,pn
or
pop
sbb
repnz
les
test
mov
cmp
sub
sub
lock
adc
test
rorb
leave
sar
jae
jp
mov
shlb
cmp
repz
ret
sbb
fisubs
out
mov
movups
call
mov
inc
rclb
and
mov
xchg
fisubrs
filds
fbld
bound
pop
subl
adc
cmpsl
out
setnp
inc
cmp
sub
dec
pop
xor
inc
mov
add
imul
cmpsb
push
and
lahf
in
cmp
rorl
push
xchg
cli
push
pop
inc
jle
jmp
mov
inc
xchg
clc
fisubrl
sfence
sti
and
dec
push
jp
int3
jnp
adc
stos
stos
xor
sub
add
jmp
sbb
lret
lret
xor
das
rcll
mov
push
das
fldz
cwtl
mov
mov
mov
mov
pop
mov
push
popf
leave
call
leave
subl
out
leave
and
mov
mov
mov
xorl
je
je
pop
push
seta
inc
fsubs
ret
ss
pop
xor
jmp
dec
xlat
xorb
adc
daa
cmpsb
pop
pop
adc
data16
in
jp
jge
xchg
loop
jbe
mov
adc
sbb
insl
and
into
push
cltd
test
imul
or
je
xor
pop
xchg
adc
scas
aaa
jge
inc
xor
jmp
fnstsw
daa
push
sbb
out
insb
enter
add
lcall
jg
icebp
repnz
ret
nop
stc
jecxz
shll
pop
mov
jle
outsb
pop
pushf
fwait
cli
rcll
int3
mov
cmc
lcall
fdivl
lahf
push
shlb
mov
adc
mov
dec
call
cmpb
add
xchg
jae
imul
pop
jmp
int3
imul
jne
lret
fstpl
xor
fstl
mov
pusha
xchg
out
inc
mov
fwait
pop
dec
sarl
daa
scas
sub
fistl
sub
mov
sbb
subl
fldl2t
cmpsb
add
xorl
mov
dec
int3
mov
mov
xor
ret
push
int3
outsb
jl
dec
arpl
push
icebp
xchg
out
arpl
pop
push
sbb
jne
xchg
cltd
push
inc
das
sub
sub
dec
fdivp
jecxz
push
enter
inc
mov
and
push
fmull
mov
lcall
adc
mov
inc
inc
mov
in
pop
outsb
icebp
lahf
inc
lock
mov
dec
dec
mov
fcoml
mov
mov
mov
out
hlt
pop
ror
adc
cmp
popa
cmpsl
cld
cmp
hlt
mov
aaa
inc
lock
enter
dec
pop
cmpsl
add
arpl
inc
cmp
jbe
dec
xchg
inc
cmp
mov
jnp
push
mov
cmp
jae
xor
clc
mov
mov
push
push
leave
sbb
addr16
negb
mov
pop
push
mov
push
jmp
or
hlt
pushf
test
pop
mov
xadd
and
add
adc
lods
or
movsl
out
fcom
outsb
fwait
xchg
in
loopne
fs
push
in
jp
fsubrp
lret
jp
sbb
cs
clc
arpl
movlps
adc
dec
dec
jnp
mov
inc
mov
lods
adc
ret
fs
fsubrp
sti
inc
lods
shl
je
mov
fbld
pop
movsb
pop
mov
cmpsb
cmp
outsb
jecxz
xor
mov
mov
xlat
cli
or
cmpsl
mov
xchg
push
les
scas
mov
cs
icebp
xchg
add
mov
rorl
sub
xor
sbb
push
pop
adc
jo
or
mov
test
push
mov
movsl
inc
dec
mov
cmp
jmp
pushf
xchg
cmp
pop
jp
aas
mov
jb
loope
ja
movsb
mov
int
sti
cmp
hlt
mov
fildll
inc
mov
mov
scas
push
clc
xchg
jns
jp
dec
das
fs
rorb
mov
lods
pop
adc
scas
xchg
push
mov
int
aaa
aas
xchg
addb
push
push
or
push
push
aaa
cmc
nop
loop
ljmp
test
aas
hlt
adc
push
sarb
and
mov
mov
ficompl
out
xor
mov
push
xchg
and
pop
pop
adc
mov
jg
lods
cmp
dec
or
adc
ljmp
das
inc
in
in
stos
arpl
or
mov
movl
mov
pop
addr16
push
push
xchg
sub
xor
out
ret
fwait
fisubs
dec
add
cmova
ss
out
test
mov
or
mov
fsubr
push
call
stc
fwait
ret
inc
xor
fcmovne
test
aaa
shr
pop
fs
bound
pop
sub
xor
adc
adc
mov
inc
jo
pop
or
lret
pusha
sbb
inc
jecxz
or
pusha
pop
pop
ret
ja
fsub
mov
xor
cli
dec
push
clc
mov
sbb
adc
xlat
xor
scas
imul
jge
imul
fbstp
or
inc
stc
add
mov
pop
orl
mov
xor
sbb
cld
jnp
mov
xor
popl
mov
add
mov
jno
xor
inc
outsb
mov
cmp
cmpsl
outsl
clc
jns
mov
sub
lods
fisttps
loop
add
sub
dec
sti
cli
popf
call
mov
adc
lea
test
xorl
outsb
scas
sub
adc
lret
jl
cs
add
rorl
xor
pop
jae
imul
stos
sti
xlat
xchg
dec
jno
inc
lds
fsubrl
nop
stos
out
mov
pop
xor
push
out
clc
mov
cs
sub
xchg
jmp
sbb
xchg
mov
addps
adcb
or
pmuludq
cwtl
arpl
insl
dec
inc
insl
lock
jb
jg
xor
lcall
pop
mov
dec
shlb
xchg
enter
lcall
ss
sbb
mov
xchg
sar
mov
cmpsb
popa
ss
cmp
mov
add
repz
mov
inc
ds
enter
dec
mov
mov
jnp
sub
cmp
push
fnstsw
or
mov
ficompl
lret
sbb
sti
and
or
test
clc
dec
popa
adc
xchg
cmpl
inc
xor
ja
pop
push
loop
ret
xchg
arpl
pop
pop
lock
decl
arpl
mov
int
adc
stos
les
in
jle
cs
or
pop
hlt
fisttpll
test
int3
lahf
sub
lret
xchg
pop
dec
int
fidivrs
mov
insb
sbb
adc
loop
xor
pop
cmp
out
cs
fdivrs
sub
xchg
std
idivb
imul
ljmp
dec
push
popf
cmc
mov
pop
int
pop
sbb
into
pop
add
bound
lahf
mov
sbb
push
imul
fadds
into
or
sti
pop
rcrb
iret
push
outsb
decb
jb
lret
and
xchg
xlat
mov
adc
test
and
outsl
in
fidivrs
sbb
gs
insl
scas
xchg
adc
jle
data16
jl
sbbl
mov
inc
pop
push
pushf
mov
leave
aam
sub
pop
mov
push
mov
or
sub
rol
mov
inc
ret
pop
sbb
hlt
mov
dec
jns
nop
or
mov
mov
sbb
sub
mov
cld
jns
lods
cmpb
cs
mov
mov
pop
shlb
adc
test
notb
jbe
ret
lret
inc
xor
xor
es
or
mov
repz
ret
jge
shrl
dec
xchg
adc
popf
repz
outsb
dec
dec
adc
pop
scas
mov
jns
or
mov
pusha
push
int3
pusha
and
mov
jmp
sub
dec
aad
ret
cmp
cmpsb
pop
mul
sbb
inc
add
ja
add
insb
outsb
jbe
fst
jno
aad
out
test
adc
add
lahf
sbbb
mov
outsb
or
and
mov
or
call
mov
fs
mov
mov
insb
lock
or
insl
xchg
test
and
sbb
repz
repnz
lea
lcall
lds
das
ljmpw
loope
ja
nop
test
push
ret
ud1
stos
sub
add
jl
add
sbb
enter
sub
sbb
add
dec
lock
js
dec
int3
sub
or
outsl
js
fadds
or
out
dec
sub
jae
jecxz
mov
popf
imul
add
inc
push
xchg
xor
pop
pop
lret
in
pop
mov
mov
test
bound
sbb
push
subb
sub
ss
popf
ds
insl
mov
jo
mov
sbb
or
test
nop
outsl
cmp
sbb
mov
std
mov
loopne
sub
xor
fsubrs
aas
insl
xchg
loop
addl
pop
xchg
xor
cld
notl
scas
test
test
in
pushf
cmp
rcrl
jne
mov
push
sub
sbb
mov
sbb
mov
arpl
imul
xor
sbb
std
jecxz
das
dec
test
int
mov
adc
dec
mov
punpckhwd
mov
mov
sbb
hlt
or
clc
fdivr
pop
add
xchg
int3
xchg
mov
mov
xorl
mov
stc
lahf
sbb
dec
push
push
cmpsl
jmp
imul
roll
popa
repz
jl
popa
mov
rol
mov
cmp
movsb
pop
sbb
push
cmp
push
xchg
mov
inc
push
fimull
pusha
je
adc
mov
adc
into
data16
inc
scas
movsb
or
jmp
sbb
clc
jl
sub
cmp
mov
cmpsl
aas
fsts
adc
and
pop
mov
sbb
pop
push
lock
dec
jne
xor
ds
popf
xor
in
cltd
daa
nop
jge
cmp
mov
std
movsl
aam
incb
add
xlat
xchg
cmp
push
out
mov
and
mov
or
cmp
enter
and
fnstcw
stos
mov
pop
mov
adc
sbb
test
rolb
aaa
sub
xor
stos
sbb
dec
add
or
lods
cltd
add
jle
xor
xor
arpl
pop
cmp
adc
mov
aas
push
cmp
hlt
inc
and
repz
add
adc
arpl
push
int
sbb
push
xor
bnd
iret
ret
jnp
fimuls
jae
mov
test
inc
dec
shl
leave
fnstsw
mov
lock
jne
insb
sub
push
call
ss
dec
add
xor
mov
jmp
fs
mov
jl
cmp
mov
and
and
ret
aad
aas
cmp
mov
sarb
test
popa
lock
rorb
mov
mov
push
mov
in
scas
iret
int3
test
call
xlat
aaa
mov
adc
push
dec
mov
xlat
mov
fwait
rclb
or
or
out
in
scas
stc
out
enter
adc
dec
dec
lods
add
stos
mov
test
sub
out
mov
inc
test
sbb
push
out
stos
aad
pop
ljmp
int3
cli
sahf
stc
repnz
jp
xor
xchg
dec
addr16
mov
cltd
pop
jo
addl
divl
pop
adcb
aaa
sbb
and
sbb
cmp
pop
ja
in
xor
lret
lret
cmp
out
inc
mov
xchg
adc
jp
xchg
mov
sbb
dec
imul
xlat
mov
dec
bound
mov
das
jl
pop
lahf
es
jnp
mov
add
add
es
cmp
icebp
xchg
cmp
test
int3
jmp
sahf
ffreep
push
stos
test
fdivp
rolb
push
pop
movsl
sbb
stos
rclb
sbb
mov
cmp
pop
xor
daa
or
mov
xchg
push
sub
jg
inc
cmp
jns
push
mov
adc
xchg
shr
mov
pop
jmp
inc
sub
outsb
push
mov
pop
js
push
xchg
icebp
xchg
test
mov
push
je
fmuls
and
pusha
fists
mov
aam
inc
ljmp
jle
push
pop
icebp
dec
int3
mov
jmp
sub
add
sarl
cmp
clc
jmp
lret
gs
xor
pop
xchg
jo
mov
jge
xchg
mov
mov
mov
cld
add
xor
imull
popa
data16
inc
ja
cmpsl
incb
cwtl
cmp
lods
sahf
aas
in
outsl
inc
ljmp
dec
jnp
lods
pop
mov
sbb
xchg
call
sbb
in
inc
add
inc
inc
dec
cmp
js
fwait
mov
outsl
xlat
aad
filds
fwait
jns
icebp
jle
or
xor
popf
mov
jo
pop
fists
or
scas
mov
aaa
lret
mov
and
xchg
inc
mov
inc
ror
ret
pop
jb
sti
or
popf
pop
pmaxub
and
and
inc
xor
jl
cmc
inc
lods
mov
sub
push
decb
or
and
mov
mov
adc
xor
fiadds
int
inc
imul
cli
pop
out
fimull
cmpl
jns
add
lcall
imul
cltd
jle
popf
mov
sub
loop
insb
cmp
dec
xchg
iret
add
or
adc
mov
int
sbb
lret
ret
push
scas
xchg
rclb
add
ljmp
sti
fiaddl
mov
js
mov
fwait
rcrb
inc
lret
dec
sbb
cwtl
aam
mov
cmpsb
inc
lret
es
es
ret
jle
pusha
int3
inc
inc
in
adc
inc
enter
xchg
push
movsb
in
dec
cmpb
dec
xorl
pusha
movsb
xchg
and
inc
or
push
pop
in
xchg
subb
nop
rcrl
or
push
push
jns
sbb
cmp
add
xchg
add
cli
cmp
or
push
dec
push
xchg
jnp
in
xchg
hlt
adc
or
inc
sbb
cmp
xchg
lahf
rcl
adc
je
or
fbstp
mov
cmp
xchg
bound
aaa
xchg
mov
pop
call
lock
stos
xchg
inc
sbb
xor
adcl
imul
cwtl
pop
pop
into
lds
add
mov
stc
iret
in
insl
loop
sub
add
mov
ja
xor
pusha
fdivs
in
or
adc
ljmp
sti
sbb
push
xor
xor
mov
xchg
add
ss
cmpsb
cmpl
movsl
stos
mov
push
jae
mov
emms
adc
mov
cmpsb
adc
int
push
or
or
pop
dec
pop
or
int
in
sarb
mov
scas
js
mov
ret
inc
jge
sub
sbbl
sub
xchg
xor
cwtl
and
pop
xchg
movsb
sbb
outsb
es
nop
sub
clc
stos
jnp
push
mov
and
xchg
or
out
dec
cmp
test
pop
dec
xchg
adc
jne
addb
xlat
xchg
adc
adc
sbb
push
pushf
push
push
rolb
push
ficomps
bswap
cmc
push
ss
shl
pop
in
stc
call
int3
cmpsb
sub
stos
dec
into
loope
cli
inc
add
fildl
and
lret
ret
push
subl
xchg
jns
out
xchg
imul
ret
loop
sbb
jae
ljmp
out
pop
into
and
pop
sbb
cmpsl
pop
ljmp
inc
fldl
jno
cmp
je
mov
mov
ljmp
dec
sub
sub
and
adcb
adc
xchg
inc
daa
and
rorb
jl
xchg
daa
sbb
push
jecxz
sub
out
mov
cltd
mov
outsb
pop
pop
cli
or
inc
jne
adc
stos
ljmp
bound
leave
gs
fistpl
clc
inc
xor
repnz
push
push
dec
scas
jb
push
sub
out
add
out
xor
add
aaa
pop
sbb
mull
cwtl
popa
push
and
mov
call
cld
sub
push
popf
iret
xor
gs
je
jle
les
cltd
lahf
add
jg
popa
loop
pop
test
xchg
out
aaa
xchg
test
daa
test
popf
sbb
and
inc
test
js
clflush
aas
inc
test
jle
gs
sbb
mov
cmc
lods
push
dec
mov
and
sub
inc
sarl
inc
push
mov
iret
sti
push
test
sub
js
and
pop
mov
jge
mov
out
xor
add
cmc
movb
sub
add
pop
xor
adc
test
ja
and
add
notl
inc
lret
or
dec
push
addb
adc
bound
out
hlt
mov
mov
or
clc
mov
shrb
push
bound
shlb
std
into
and
push
lahf
enter
paddusw
movsb
xlat
mov
push
inc
inc
adc
test
add
pop
pop
icebp
xchg
test
fistpll
mov
add
stos
xor
test
or
sbb
inc
fsubl
jp
out
cmp
mov
jle
ljmp
cmp
lcall
xor
pop
call
adc
movb
mov
dec
test
inc
loop
push
das
out
fcomi
lret
lock
pop
add
mov
mov
sahf
mov
fldt
xor
xchg
lahf
mov
pop
jo
sbb
mov
andl
roll
and
cmp
mov
mov
pop
mov
rorl
push
mov
push
das
in
pusha
sbb
out
nop
mov
clc
inc
xor
cli
imul
popa
js
xor
adc
xor
aas
dec
push
mov
xor
jmp
push
sarl
mov
data16
je
in
xchg
adc
test
in
shl
xbegin
fistps
test
imul
adc
fistps
mov
dec
cmp
arpl
icebp
add
sbb
jmp
enter
xchg
insl
adc
les
mov
std
xchg
adc
pop
ljmp
inc
xor
xor
xor
dec
iret
jl
fbstp
pop
or
stos
aaa
inc
lods
es
es
jmp
hlt
out
pop
inc
jno
mov
or
mov
adc
inc
fnsave
push
or
inc
jecxz
stos
stos
push
and
xchg
pop
jmp
not
cld
cmp
popf
push
shl
ljmp
jl
mov
pop
cmpb
ret
jmp
in
test
dec
mov
movsb
mov
sbb
jno
es
push
pop
inc
inc
or
add
sahf
scas
bound
adc
inc
shrl
sbb
inc
and
imul
pop
jle
adc
cmc
push
sub
int
mov
call
mov
fists
mov
and
mov
mull
mov
jbe
mov
movsb
leave
xchg
xlat
cmp
sar
fstp
rclb
fisttps
ss
rorl
ljmp
pop
int
xchg
push
add
mov
aad
mov
insl
and
mov
push
jmp
ret
mov
xor
dec
setbe
jge
cmp
int3
scas
hlt
adc
lcall
push
int3
or
cmp
test
lahf
test
cmp
lcall
idivl
lds
stos
mov
push
xchg
test
in
push
xor
lods
xchg
or
mov
jmp
or
xchg
cmpsl
push
aam
pop
sbb
bound
scas
xorl
leave
push
mov
and
push
xor
mov
xor
cmp
imull
pop
cs
inc
sub
lds
push
ljmp
xchg
fisubl
ds
sbb
aas
int
mov
cmpl
and
and
gs
pop
and
test
jne
jmp
push
xchg
mov
ret
add
lods
mov
mov
out
jo
mov
insl
mov
fucomi
pop
jo,pn
ljmp
mov
leave
mov
es
sub
adc
idivb
cwtl
jmp
rcr
add
incb
or
mov
xchg
std
ljmp
inc
ss
and
popa
outsl
add
xchg
xorb
outsl
out
mulps
fld
or
inc
mov
push
out
test
imul
js
jbe
and
je
in
jmp
lock
stos
cmp
mov
mov
leave
enter
popa
mov
or
addr16
mov
loope
stos
mov
mov
xor
fidivs
sbb
cmc
jno
sahf
lods
sbb
insb
imul
push
aas
mov
push
adc
sbb
mov
sbb
jge
jl
lods
xchg
push
jl
in
icebp
adc
fsubrl
movsb
xchg
in
in
jno
lock
cmp
cli
lods
xchg
cmp
sbb
rcll
pop
mov
push
mov
cmp
push
xchg
cmp
add
push
mov
mov
sbb
imul
mov
sahf
mov
mov
push
ja
sahf
push
out
lods
dec
sti
and
mov
pop
aaa
add
jg
mov
dec
filds
testl
ret
xchg
cwtl
pop
dec
lret
jb
xor
dec
xor
push
dec
addr16
decb
mov
jp
insb
pop
pop
xchg
push
aas
sub
add
pop
and
push
shll
push
mov
adc
dec
pop
andl
fstps
shll
mov
push
js
int
lahf
mov
and
adc
dec
sub
movsl
repnz
xor
jge
cmp
cmp
adc
andl
outsl
and
jge
cmp
insl
inc
dec
mov
ret
mov
and
idivb
mov
push
out
adc
test
xchg
cmp
jecxz
push
or
mov
xchg
lods
jp
fidivl
cmp
roll
push
mov
addr16
push
xchg
lods
jb
mov
shlb
xchg
out
inc
pop
inc
add
in
jp
in
bound
movsb
and
aam
rclb
out
out
or
data16
mov
imul
push
pusha
cmc
jg
push
cs
dec
fs
sub
jg
sbb
into
cmp
adc
cld
call
ret
xor
in
std
lret
xchg
int3
fadd
daa
xchg
push
cmp
mov
mov
stc
inc
and
inc
imull
inc
hlt
push
repz
xor
jle
fldt
data16
mov
sbb
jge
les
clc
jl
outsl
out
sub
xor
and
sti
mov
and
repnz
inc
hlt
or
leave
cwtl
mov
fidivl
jp
push
movsb
xor
rorb
push
in
and
test
cltd
cmpsb
add
and
inc
cmpsl
pop
sbb
in
aaa
sti
outsb
dec
fdivrl
inc
cld
pop
mov
mov
cmp
es
xorb
das
jle
push
sti
push
cmpsl
sbb
mull
pusha
sbb
dec
call
inc
lcall
xlat
xor
sbb
jo
fucomp
shr
aad
push
pop
sub
adc
jl
mov
out
add
xchg
adc
and
xchg
fs
andb
mov
repnz
mov
dec
dec
into
in
mov
iret
cmc
mov
lea
aad
xor
dec
mov
lret
inc
scas
clc
movsb
and
sarb
dec
repz
mov
outsl
sub
cmp
pushl
loopne
sarb
and
push
insb
sbb
push
lahf
stos
imul
jne
ss
mov
add
or
nop
aad
nop
jbe
dec
testb
shll
movsb
mov
jae
popf
xor
push
scas
dec
and
scas
adc
cmp
xchg
stos
popa
mov
imul
cmc
inc
fwait
or
fildll
adc
cmp
xchg
insl
mov
jmp
jmp
xchg
lret
mov
leave
sbb
push
push
xchg
pop
pop
mov
jo
insb
mov
ss
lahf
mov
enter
imull
cmp
out
push
mov
jmp
ja
cmp
and
rclb
out
pusha
cmp
addr16
mov
xor
in
ss
push
shrb
adc
push
ds
filds
lock
add
imul
cmp
sbb
pop
xor
call
mov
lcall
push
xchg
test
and
push
je
ljmp
out
xchg
ret
inc
adc
mov
or
out
mov
dec
sbb
incb
jno
data16
popa
push
test
aaa
and
sbb
out
insb
iret
jb
addr16
xor
cmp
sub
or
outsl
icebp
es
add
xchg
xor
loopne
push
stc
pop
in
adc
mov
inc
test
std
sbbl
add
in
cmp
out
clc
sbb
xchg
add
pop
out
mov
inc
shr
imul
iret
mov
mov
sbb
movsb
ljmp
scas
mov
xlat
xchg
xor
jno
or
popa
adc
rolb
push
cmp
loop,pn
inc
subb
jnp
inc
lock
call
inc
adc
jl
ffreep
pop
mov
mov
jl
mov
add
sbb
aad
xchg
daa
adc
xchg
inc
faddl
and
cmpsb
xor
mov
and
add
cmc
shl
in
in
clc
dec
clc
int3
cmp
or
test
and
fiaddl
mov
jo
aaa
jns
lock
or
in
push
adc
push
cmc
movsl
push
mov
testl
notl
jl
jb
push
sub
les
addr16
xchg
cltd
adcb
ret
adc
mov
stos
cltd
sub
movsb
jb
jnp
popa
adc
out
xchg
jge
jmp
xor
add
add
enter
fwait
add
andl
repz
stos
es
xchg
in
adc
mov
and
aad
add
daa
xchg
sbb
bound
sub
jle
xor
pop
out
sahf
push
add
mov
loopne
mov
sbb
outsl
test
mov
pop
pop
mov
mov
aas
cltd
insl
ja
pop
in
fcomps
sbb
add
aas
fs
and
pop
mov
xchg
fldenv
faddl
adc
fisubs
lods
insb
in
mov
js
in
pop
xlat
sarb
adc
adc
hlt
cmp
jge
and
xchg
pop
push
push
sbb
outsb
push
ja
repnz
pop
add
jnp
adc
mov
imul
sub
pop
sub
xchg
mov
aas
xchg
cmpsl
stos
dec
sbb
mov
fisubl
insl
out
outsb
dec
pop
cmp
sbbl
add
cmpl
push
call
pop
xchg
pushf
pop
mov
jp
imul
push
pop
mov
inc
lods
adc
popa
pop
lret
cmp
cmp
lahf
ljmp
inc
pop
xchg
repz
js
ds
or
jae
adc
push
insl
ret
repnz
add
into
test
sbb
and
mov
sub
fisttpl
dec
inc
stc
test
iret
lahf
flds
sbb
and
inc
mov
lods
mov
xchg
xchg
sarb
repz
cmpsb
mov
in
in
or
xchg
cmp
or
sbb
xor
push
arpl
sub
insb
sub
jns
das
sbb
sub
repz
xor
lock
mov
les
or
dec
pop
or
mov
mov
mov
mov
pop
test
dec
stos
in
rep
in
jle
addr16
ficomps
fldt
je
insl
insb
pop
imul
push
or
dec
xor
mov
dec
jae
cmp
add
pop
push
dec
fs
sbb
fbld
xor
sti
sbb
jnp
icebp
adc
sbb
pop
jl
mov
mov
mov
scas
sbb
and
sbb
or
int3
push
mov
lods
icebp
imul
dec
xchg
lds
notb
je
pop
push
out
or
mov
ja
ret
jno
xchg
jg
xor
or
cmc
enter
and
std
push
ss
sti
jnp
inc
adc
fisubrs
mov
xchg
imul
loope
aad
negb
scas
mov
dec
push
ja
enter
push
ret
sbb
outsb
je
xchg
shl
lds
addb
adc
roll
add
fwait
scas
jg
sarl
jl
sbb
stos
mov
xor
mov
inc
mov
xchg
cmp
insl
ljmp
pop
dec
loop
stos
clc
pop
nop
sti
arpl
sbb
test
push
sbb
in
cmpb
sub
sbbb
ret
setno
jo
lods
sbb
xor
cli
lret
mov
xor
push
subb
sbb
mov
xchg
shl
aad
add
mov
pop
iret
add
loopne
cmpsl
inc
adcl
adcl
add
xchg
mov
sbb
loop
lea
dec
test
push
or
xor
xchg
psubq
mov
add
push
arpl
hlt
pop
int
push
mov
cmp
and
fisubrs
bound
xchg
sbb
scas
fwait
enter
repz
int
roll
or
mov
out
adc
pushf
gs
add
push
fsubrl
xchg
add
rcrl
dec
mov
xchg
jp
arpl
fdivp
cs
rclb
loope
mov
rcl
lds
sbb
stos
nop
fnstsw
push
mov
into
in
cmp
ret
sub
scas
bound
test
popf
std
push
insb
sbb
adc
inc
pop
fs
add
mov
fs
sub
sub
sub
into
cwtl
dec
cwtl
inc
leave
sti
mov
arpl
loope
push
loopne,pt
mov
xchg
mov
hlt
mov
arpl
jae
mov
dec
scas
scas
inc
cli
push
arpl
or
divl
inc
jmp
cld
pop
mov
cld
dec
mov
jbe
cli
xor
or
xchg
cltd
faddl
in
or
pop
xchg
nop
mov
movsl
iret
sti
and
inc
xchg
or
push
jg
or
pop
outsl
sub
push
inc
inc
mov
jecxz
iret
sbbl
rorb
jl
lret
or
pop
pop
testb
xor
cwtl
mov
xchg
dec
xchg
and
stc
out
jle
adc
jbe
into
cmp
lds
and
jle
adc
cmp
jo
sbb
jns
in
mov
and
pusha
xchg
aam
xchg
dec
jg
test
dec
dec
leave
stos
jno
xor
xchg
loop
icebp
scas
xchg
dec
push
push
hlt
sub
loop
xchg
ljmp
jae
add
jp
jmp
xchg
sahf
pop
test
je
fiaddl
mov
cltd
fcompp
lock
shll
arpl
and
jae
inc
or
stc
mov
inc
lea
lret
jns
or
mov
jp
mov
mov
sahf
or
push
nop
pop
jp
pop
mov
ret
ss
jle
pop
ja
imul
in
dec
jmp
loope
and
and
sub
das
mov
mov
mov
push
ret
ljmp
or
fwait
mov
cmp
fsubrs
enter
mov
sbb
fisubrs
loope
js
xchg
stos
andb
fs
push
pop
sbb
shll
xor
and
ret
inc
rclb
and
pusha
es
mov
ret
arpl
cmovo
jle
dec
ds
leave
out
push
xorl
sub
bound
jg
cmp
aad
jl
sub
sti
je
shrb
xorb
clc
add
jmp
add
pop
push
leave
inc
push
popf
sti
xchg
ja
xchg
ljmp
jne
inc
xchg
in
sbb
sbb
mov
ds
iret
out
das
scas
out
iret
inc
mov
rol
mov
xchg
dec
in
mov
inc
rol
xchg
les
ret
jecxz
mov
push
popf
lcall
xor
mov
jmp
call
cs
jl
nop
pop
pop
pop
icebp
lcall
xchg
add
push
xor
or
mov
push
mov
xchg
mov
sbb
pop
icebp
or
dec
test
shr
or
test
push
mov
push
sbb
rolb
stc
pop
js
aaa
sbb
pushl
popf
imul
int3
mov
xlat
push
mov
jbe
sub
inc
inc
sbb
cmp
push
insb
dec
jb
cmp
and
mov
dec
sub
stos
xor
test
ficoms
divl
xchg
xchg
fcomps
fs
cmc
sub
dec
movsl
jp
ret
fucom
fidivl
lcall
sub
outsb
repz
or
inc
push
xchg
aad
xor
add
test
xor
shrb
mov
les
sbb
fdivs
sbb
mov
jg
sbb
mov
pop
gs
lret
xchg
and
repnz
xor
pop
xchg
int3
and
mov
test
loopne
in
mov
scas
jge
jo
aaa
lock
movsb
push
movsb
cmp
mov
or
scas
sbb
sbb
inc
stc
enter
sub
mov
test
enter
js
je
rorl
push
and
xchg
ja
cmpsl
mov
pop
cwtl
adc
lds
movsb
mov
ljmp
mov
test
pop
mov
clc
and
xor
lods
or
or
int
in
xor
or
xlat
int3
mov
and
out
sahf
fistl
sbb
mov
adc
add
fdivs
cmpsb
and
xchg
xor
rcrb
fisttpl
pop
mov
and
push
inc
leave
sub
jbe
sbb
loop
ficompl
das
ds
movb
xor
jno
out
push
out
xor
push
in
push
mov
dec
sti
stos
jmp
cmpsb
mov
clc
lahf
jae
add
sbb
andb
mov
jge
fnstenv
mov
sub
cmpsb
int3
shlb
inc
mov
cmp
jb
mov
shll
cli
sbb
pop
loopne
jne
pop
into
movsb
cmp
mov
pxor
mov
cmp
movsb
jne
xor
or
push
jg
gs
jne
add
or
lock
or
add
pop
stc
mov
add
push
or
aad
test
stc
andl
stc
push
adc
lret
inc
repnz
cmp
test
pop
nop
mov
jnp
mov
mov
fwait
pop
cmpsb
mov
mov
pop
push
and
xchg
cmp
repz
shll
fnsave
pop
jae
push
in
mov
pushf
inc
test
loope
or
pop
mov
cmp
mov
lea
xchg
xlat
push
push
sub
repnz
lock
add
inc
insb
std
stos
pop
mov
pusha
ljmp
jo
add
mov
dec
dec
jo
in
ja
pop
dec
and
mov
jnp
add
lods
lcall
xchg
xor
adc
jmp
and
mov
je
mov
pop
dec
dec
inc
push
add
jns
adc
mov
js
xchg
mov
mov
or
xlat
mov
lahf
call
sbb
repz
cld
sub
cwtl
inc
js
fcomps
stos
fistpll
in
jp
mov
lret
popa
xchg
xor
pop
and
addr16
les
lock
ret
add
fisubrl
push
loope
xor
xchg
stc
sbb
icebp
dec
and
test
and
sub
dec
push
jge
iret
pop
rclb
and
addr16
ss
lret
cmp
ss
xorl
loopne
inc
mov
pop
mov
dec
inc
inc
xlat
add
push
outsl
movsb
lock
pop
xchg
push
stos
or
xchg
push
adc
add
sbb
jle
fstps
mov
clc
out
inc
fldenv
inc
dec
sub
lea
pop
ds
pop
mov
xchg
mov
rcrb
adc
fsubrl
and
fisttpll
fmuls
lds
mov
sbb
and
xchg
icebp
xchg
iret
mov
out
mov
hlt
cli
push
syscall
mov
testl
insl
nop
nop
mov
pop
addr16
mov
xchg
xchg
das
addr16
and
cli
loop
ja
push
je
mov
or
mov
into
int3
jmp
or
add
fstl
or
and
sbb
inc
mov
les
cmc
out
sbb
rorb
fistps
iret
mulb
mov
jmp
pop
iret
out
fsubrs
dec
loopne
and
loopne
fdivl
jns
ficoms
rclb
clc
mov
sbb
push
dec
les
lea
add
xchg
lahf
addb
jmp
pop
pusha
or
jns
je
xchg
sahf
roll
inc
or
inc
cltd
repnz
mov
jecxz
fnstcw
cmp
js
scas
ret
cmpsb
dec
push
and
pop
jle
xchg
dec
leave
rcrb
dec
mov
xchg
xchg
xchg
xchg
pop
fcomps
lock
dec
or
into
imulb
cli
incl
loope
scas
inc
jbe
test
insl
ds
pop
test
xchg
pop
or
mov
rcl
test
hlt
and
cwtl
add
jg
sub
sahf
je
mov
push
fnstenv
pop
ljmp
push
or
popf
cmp
inc
add
movsl
dec
fidivl
jecxz
jae
mov
sub
push
push
cmp
mov
movsb
lock
std
dec
xor
jmp
and
sub
sar
imul
add
loopne
test
imul
fcompl
add
lea
sbb
sub
out
fsubl
aam
mov
jne
fs
andb
ss
lret
lahf
mov
and
xchg
inc
push
jmp
add
push
sti
push
mov
and
mov
adc
dec
ds
shll
or
nop
pop
add
push
xor
addl
mov
adc
cli
fbld
add
ret
int3
push
outsb
mov
xor
stos
cmp
jle
imul
arpl
imul
inc
loopne
cld
mul
in
stc
sub
fiaddl
das
cmp
mov
fmul
gs
push
push
jns
scas
test
shl
enter
add
sub
outsl
test
fcmovnu
mov
dec
xchg
jae
jg
cwtl
imul
cmp
xchg
hlt
repz
sub
mov
out
sbbb
shr
dec
in
xor
or
lahf
aam
out
loopne
bound
pop
fs
insb
mov
data16
mov
adc
in
daa
xchg
inc
dec
or
out
ds
xor
pop
adc
insb
pop
pusha
negb
add
mov
jb
mov
bound
les
mov
bound
xchg
mov
in
ss
lea
add
mov
rcrb
loope
inc
fstpt
cmp
mov
cld
xor
add
pushf
icebp
cwtl
out
push
cmp
push
sarl
inc
xchg
mov
mov
test
jecxz
add
xchg
ljmp
cmp
adcb
mov
jmp
imul
mov
adc
xchg
out
test
test
data16
jbe
mov
jo
add
dec
xor
fwait
mov
mov
cld
xchg
inc
push
lcall
pop
test
daa
daa
cmp
mov
aad
loopne
mov
pop
out
dec
push
add
lds
xor
or
data16
cltd
push
inc
cmpsb
scas
rolb
je
es
bnd
push
push
testl
dec
xorl
fidivrs
and
push
test
mov
push
mov
mov
mov
xchg
in
loopne
jne
push
sub
jmp
rclb
sbb
cmp
popa
or
addb
jno
enter
addr16
fmul
and
lret
mov
insb
lahf
xor
xlat
ret
movsl
jecxz
iret
imul
push
imul
and
xlat
rolb
cmp
jl
imul
nop
in
insl
rcrb
mov
fldt
mov
cmpsb
dec
cmp
jle
cmp
stc
jb
out
xor
sub
mov
neg
mov
decb
add
divl
fnstcw
out
fisubs
movsb
sub
mov
loopne
cli
mov
fidivs
mov
pop
insl
xor
jae
daa
push
out
sbb
clc
jle
inc
sar
pusha
xor
cmpsb
sub
xchg
and
repz
loopne
mov
int
add
push
aaa
cmp
in
pop
mov
cmpsl
jo
fwait
lahf
sbb
je
mov
inc
mov
pop
movsb
jmp
dec
lods
mov
cmp
push
test
repz
cmpsl
cmp
push
aas
push
jnp
flds
inc
stc
mov
jbe
data16
shlb
add
mov
dec
mov
mov
repz
cltd
inc
popa
nop
cmp
arpl
pop
cmp
cld
mov
fcompl
jg
jp
xor
cmp
sbb
subb
pop
xchg
xchg
call
sub
test
in
imul
inc
push
aad
and
mov
mov
add
les
xchg
sbb
pop
jp
sbb
sarl
pop
insl
rcr
sbb
mov
in
int3
mov
femms
loop
jo
lods
lods
lcall
sub
inc
call
mov
test
repnz
and
pop
jnp
pop
pop
jbe
dec
dec
jns
mov
xor
add
sbb
mov
jmp
dec
pop
mov
pusha
cmpsb
jg
xor
pushf
cmp
add
int3
ret
insb
into
add
iret
add
mov
inc
arpl
xor
sbb
mov
add
subl
and
int
adc
xor
cmp
cmpsl
sahf
je
mov
call
push
sbbl
stc
ret
and
sbb
in
sbb
push
pop
adc
sbb
and
shrb
bound
lret
dec
fildll
test
jo
and
sbb
push
mov
and
rcrb
xchg
std
add
jno
xchg
xchg
fs
in
icebp
sub
mov
arpl
mov
jne
sub
sub
adc
jae
sahf
shl
fidivs
inc
add
mov
stos
pop
cmp
vmwrite
out
xchg
mov
popa
pop
push
mov
adc
pop
sub
push
stos
lret
int3
sub
iret
jle
mov
xchg
xorl
enter
negl
or
test
lcall
mov
mov
loope
jno
inc
push
pop
xor
lcall
jns
leave
push
mov
ret
test
mov
push
mov
outsl
dec
jns
mov
dec
mov
mov
add
js
xor
mov
inc
mov
enter
fstpl
xchg
lret
cmp
dec
lock
in
ror
jl
lret
loopne
adc
lods
or
cli
sub
subl
mov
dec
add
repnz
aaa
add
subl
mov
arpl
pop
in
cwtl
rorb
lea
xlat
pushw
mov
jne
mov
and
mov
scas
adc
dec
aad
xchg
sub
dec
shrb
mov
scas
mov
or
mov
adc
and
and
cmp
iret
hlt
jbe
adc
cmp
out
cmp
loop
aam
sub
jb
push
or
repnz
mov
andb
cli
es
insl
inc
xor
xor
pusha
xchg
sub
enter
roll
cltd
mov
pop
loop
stc
addr16
fisubrs
mov
dec
mov
stc
cmp
add
sub
repnz
sub
scas
imul
lahf
lahf
cmp
inc
dec
shl
test
mov
insl
adcb
pop
lds
sahf
aam
cmp
lds
loopne
into
xchg
in
popf
mov
mov
xchg
jae
cltd
andb
push
dec
insb
cmpsl
sub
add
rorl
clc
iret
adc
inc
dec
sub
sub
inc
xor
dec
out
outsl
sub
jno
xor
mov
into
out
jecxz
push
push
and
pop
aas
jae
loope
sub
test
stos
cmp
mov
pop
popa
xchg
mov
push
and
fisttpll
push
and
cmp
xor
jle
pop
sti
mov
cmp
xchg
fwait
lds
inc
jecxz
jne
sti
adc
mov
and
mov
add
and
insb
std
jmpw
jbe
mulb
js
mov
pop
gs
mov
sub
jae
hlt
shll
push
push
loopne
mov
jae
ja
xchg
cmp
jmp
add
shl
push
dec
loope
add
ss
call
jnp
jge
mov
xor
mov
pop
mov
cmpsb
pop
das
mov
mov
xchg
ret
add
test
push
adc
sub
adc
js
inc
xlat
cmp
dec
sbb
lcall
push
xchg
dec
mov
mov
xchg
sbb
pop
shr
test
ss
ljmp
mov
scas
in
push
adc
cld
cmpsl
test
mov
push
cmp
pop
ret
cli
and
push
adc
idivl
rcrl
jg
les
orb
lahf
pusha
push
adc
pop
mov
mov
out
dec
sub
xorb
inc
sub
hlt
mov
jge
scas
jnp
sarl
jno
cmp
jg
aad
daa
pop
cli
cmp
ds
hlt
cltd
dec
dec
cmp
or
adc
data16
repz
adc
lods
fisttpl
shll
popl
scas
and
and
out
push
inc
js
pop
aad
inc
sub
cwtl
aas
xchg
pop
mov
leave
lods
decb
mov
xor
outsb
push
pop
cmp
mov
push
mov
mov
js
clc
push
pop
jae
lds
cs
movsl
jge
cmpsb
gs
sbb
adc
notl
mov
sbb
xchg
xchg
lcall
lea
and
xor
mov
insb
mov
clc
imul
inc
pop
jmp
and
lret
push
jle
mov
or
cli
inc
push
mov
inc
mov
and
test
roll
ja
leave
in
jecxz
dec
imul
xchg
xor
js
mov
adc
popf
pop
outsb
pop
xor
lds
and
dec
fnstcw
mov
leave
mov
pop
or
push
inc
lods
fisubrs
mov
jle
aam
popf
sti
pop
jl
push
loopne
sub
bndstx
addb
adc
std
mov
xlat
lods
sub
clc
mov
dec
nop
push
sbb
aas
or
cli
out
cmp
aas
iret
lahf
es
sahf
int
adc
mov
lods
mov
inc
mov
adc
test
add
sub
fistps
popf
comiss
mov
mov
inc
jbe
jns
adc
enter
sbb
lret
add
dec
sub
cmp
jl
cltd
fsubp
dec
ljmp
and
notl
xlat
xor
xchg
shlb
in
xchg
or
fwait
jb
std
push
mov
sbb
mov
shlb
cmp
and
sbb
dec
into
mov
shll
lret
pop
shl
jge
je
cmp
hlt
ret
incb
cmp
es
int3
in
pop
loope
mov
ss
psubb
push
cs
lcall
sbb
call
incl
mov
sub
call
mov
xor
fmull
mov
add
lahf
lret
xor
scas
je
and
andb
jecxz
dec
into
dec
lock
loopne
push
inc
push
adc
add
loopne
add
loop
imul
icebp
push
icebp
aas
pop
mov
stos
lock
mov
and
fadd
test
sbb
mov
and
dec
xor
sub
ss
pop
add
int
insl
ficompl
jns
ret
cmp
es
pusha
addr16
mov
mov
pop
sub
sbb
mov
outsb
sub
ficoml
fnsave
jne
imul
out
out
sub
mov
js
xchg
jnp
outsl
fmull
mov
sbb
xor
push
mov
popf
fldcw
add
cmpsb
mov
or
pop
adc
jmp
sbb
out
mov
in
xor
push
mov
shlb
std
xchg
push
repz
mov
inc
stos
inc
mov
mov
xchg
sbb
ret
xchg
jmp
ficompl
gs
jge
mov
ret
xchg
in
mov
incl
cmpsb
decb
fwait
sahf
data16
and
sub
aad
and
scas
adc
jp
mov
xchg
mov
ljmp
add
sbb
inc
movsb
and
or
std
ja
jb
lea
dec
lock
or
sub
enter
popf
add
repnz
mov
jg
imul
add
leave
cmp
pusha
pop
push
jae
push
sbb
inc
jmp
and
test
dec
cmp
xor
push
or
addr16
xor
andl
push
pop
mov
adc
repnz
fiaddl
mov
ja
pop
stos
fildl
out
lahf
ficoml
das
aas
pop
jb
stos
jno
xor
pop
mov
mov
scas
fdivs
inc
or
out
jmp
sub
mov
stc
add
and
idivb
jo
mov
outsb
pop
mov
mov
push
mov
aam
cs
push
mov
ja
in
cmp
and
popa
mov
test
hlt
rcrb
pop
mov
mov
inc
mov
mov
or
mov
xor
iret
out
clc
adc
mov
stc
jne
call
mov
mov
test
mov
jle
mov
lds
mov
xor
mov
gs
ss
js
dec
jnp
sub
aaa
and
cmpl
sti
ds
dec
daa
rcr
mov
ljmp
pop
sbb
xor
cltd
mov
insb
pop
aad
cmp
imul
movsl
out
jb
out
xchg
nop
push
inc
mov
and
adcb
and
scas
ja
inc
inc
xor
mov
hlt
arpl
loop
jg
aam
jnp
aaa
sub
aam
push
mov
cltd
aad
adc
sbb
movsb
cwtl
jle
cmp
push
xchg
mull
stos
popa
lret
pop
insl
mov
push
cmp
loop
dec
inc
fistps
dec
dec
enter
xorl
pop
rcl
idivl
push
es
into
fyl2x
mov
add
lds
cs
pop
or
mov
pop
ret
xchg
rorb
mov
fwait
cmp
xchg
or
dec
int3
int
mov
cli
lds
adc
jno
out
in
and
adc
dec
jo
das
loopne
scas
mov
cmpsl
jo
leave
mov
ret
push
push
sub
adc
push
arpl
jmp
add
popl
scas
push
ficomps
cmpsb
push
jecxz
loopne
insl
in
bound
jne
adc
clc
pushf
mov
sub
mov
fiadds
lret
lock
loopne
inc
iret
pusha
icebp
ret
fisubrl
xor
and
sbb
scas
mov
lret
aad
dec
xchg
dec
mov
pop
mov
sbb
ljmp
mov
test
in
fs
add
addl
cmp
jae
out
xor
add
fisubs
xchg
jecxz
into
inc
inc
sub
jo
jge
add
adc
and
ret
cld
sbb
adc
ljmp
xchg
sbb
std
lar
mov
jbe
cs
jnp
fld
and
adc
add
call
push
xor
add
mov
les
add
insl
cs
jle
das
sub
ret
outsl
and
xor
rcrl
sub
sbb
fs
push
cmpsb
cmc
loop
mov
jb
push
mov
aaa
fadds
mov
lahf
push
adcb
ja
dec
ds
xchg
cmp
sub
gs
jg
insb
xor
jle
pop
mov
push
inc
push
insb
cmp
fbld
stos
jo
jne
ja
cmpb
inc
mov
pop
leave
jae
sub
outsl
push
pop
fwait
cltd
mov
repz
mov
data16
xor
movsl
xchg
or
mov
out
lea
push
add
ret
out
ret
std
hlt
sub
mov
push
jns
popa
jbe
jne
bound
mov
pop
lret
dec
pmaxub
fstpl
nop
lahf
mov
cli
push
dec
inc
aaa
aas
lods
add
mov
inc
cld
stos
push
push
jo
ja
lock
in
inc
mov
and
pop
faddl
xor
lcall
xor
xlat
mov
mov
and
stc
inc
es
bound
pusha
add
add
inc
testb
cmc
sub
xor
lea
hlt
scas
ds
fcompl
in
js
pop
pop
sbb
dec
adc
insb
or
lret
lea
mov
stos
sub
shl
add
fstps
mov
mov
lea
cmp
pop
faddl
mov
popf
ds
imulb
xlat
and
nop
cmp
mov
pop
jle
xor
mov
outsw
cltd
fcompl
mov
stos
loope
shl
out
inc
sahf
jecxz
sub
test
mov
push
push
pop
fbld
stos
fs
inc
pop
imul
shrb
dec
inc
mov
lock
shlb
inc
pop
sahf
cmp
cli
mov
bound
rcr
sbb
sbb
testl
pop
stos
xlat
imul
xchg
lods
xchg
hlt
roll
mov
arpl
ficompl
mov
out
cmp
insb
cmp
or
leave
and
cmp
dec
nop
push
and
mov
insl
cmp
and
xchg
adc
decb
dec
and
fidivrs
or
jns
out
aas
mov
add
xor
mov
stos
outsb
or
sub
lds
sub
cmpsb
mov
test
mov
das
dec
or
cmp
cmpsb
call
push
icebp
push
cmp
fsubrl
in
and
mov
cmp
je
pop
jb
in
mov
fcmovnbe
inc
xor
aaa
lock
clc
idivb
or
shrl
xchg
fwait
add
int3
adc
add
and
inc
es
iret
mov
push
repnz
insb
push
cmpsb
and
fninit
shll
push
pop
dec
push
enter
and
xor
xor
loop
movsb
mov
sbb
mov
xlat
or
jns
jge
mov
in
mov
cwtl
or
mov
sahf
mov
add
xchg
pop
mov
mov
je
sub
jo
lds
pushf
push
mov
mov
dec
mov
mov
pusha
push
out
inc
popf
push
dec
push
fildll
dec
mov
jns
xchg
lds
jns
cmpsb
jbe
inc
cs
cmp
pop
and
mov
loope
mov
mov
jecxz
fmuls
sar
cmp
xchg
cmpsb
icebp
or
xchg
and
add
mov
lret
inc
add
lods
sbb
std
cmc
jmp
insl
and
out
cmp
jecxz
adc
adc
mov
sti
pop
mov
pop
int3
jbe
sub
dec
dec
shl
mov
push
outsb
dec
add
push
jecxz
scas
into
loope
xor
sarb
mov
and
mov
add
bound
aaa
xlat
xchg
mov
out
jno
xor
out
mov
imul
pop
fsubrs
jmp
loopne
xchg
and
pop
sbb
inc
outsb
fnsave
sbb
cmc
jg
push
pop
sub
faddp
stc
pop
fistpl
mov
sysenter
bound
and
jg
xlat
jmp
mov
test
cs
jl
add
pop
gs
loope
repnz
shll
mov
sub
int3
movsl
aam
pop
sub
mov
scas
and
dec
insl
sbb
sbb
inc
es
sti
add
stc
xchg
ret
dec
dec
lea
ljmp
inc
adc
gs
pop
push
imul
sub
aam
ljmp
push
inc
xlat
cs
insl
or
jg
pop
add
sbb
cmp
out
mov
ja,pn
outsl
pop
jo
out
cmpl
mov
lret
mov
mov
inc
lea
fdiv
das
push
xchg
and
mov
xchg
mov
stos
mov
movsb
shll
aas
xchg
mov
jle
arpl
jne
test
into
xor
mov
gs
xor
mov
push
popa
pop
repnz
mov
fimuls
stos
jb,pn
cmp
les
mov
pop
cltd
addb
inc
inc
insb
cli
and
mov
and
ud1
leave
xor
add
rolb
sub
repz
xchg
adc
push
jecxz
sbb
pop
xor
sahf
pop
inc
mov
std
inc
mov
mov
lahf
mov
push
fdivr
inc
mov
int3
psllw
loope
sti
xor
std
ficoms
xchg
loope
xlat
lea
add
mov
in
leave
nop
jge
shlb
and
incl
movsb
jno
fdivrs
cmp
pop
pop
pop
dec
mov
fisubl
inc
aas
push
mov
jge
lret
pop
imul
push
dec
dec
or
fsubp
pop
out
mov
xchg
repz
jne
push
or
lret
mov
inc
mov
lahf
mov
scas
mov
mov
mov
mov
mov
inc
sub
and
rsm
mov
adc
cmp
das
vmovmskps
or
dec
scas
out
adc
mov
in
clc
adc
sbb
mov
hlt
inc
lock
insl
fsub
add
fiaddl
clc
and
sbbb
xor
cmp
popa
cmp
call
addr16
dec
mov
mov
and
or
addr16
sub
nop
mov
popa
test
jne
popa
mulb
adc
mov
sbb
push
out
xor
or
xor
or
pop
fisubrl
outsl
xchg
adc
mov
pop
insb
sub
subl
push
dec
sbb
mov
jne
in
xor
not
push
mov
cmp
lea
xor
lock
mov
push
cmp
xchg
xor
lret
mov
mov
inc
lods
cmpsb
ret
jo
dec
jae
fldl
das
dec
pop
aam
shrb
movsl
dec
xchg
aaa
loope
shrl
xchg
aad
ret
push
mov
jl
xor
fdivrs
ljmp
jmp
out
aad
and
imul
stc
add
xchg
insl
sub
aad
pop
push
out
push
sahf
pop
mov
lock
mov
jecxz
in
inc
sbb
push
fsubrl
jecxz
xchg
enter
rcll
mov
or
stos
sbb
mov
xor
xlat
xchg
jns
pusha
fbstp
stos
testl
sbb
push
push
pop
jle
test
jmp
jnp
mov
mov
pop
dec
stos
insb
jl
test
les
cld
int3
js
movsl
jns
lds
je
xor
rcll
and
or
push
push
icebp
aam
xchg
lret
sahf
rolb
shrb
divb
cmp
orb
loope
xchg
and
add
es
xor
adc
inc
xlat
push
aam
pop
jno
jmp
sub
mov
outsl
pop
push
jne
jb
or
cmpsl
push
pop
sub
loop
pop
push
inc
pop
pusha
test
loope
sbb
lock
fs
stc
or
jns
fcompl
negb
mov
and
jno
ret
out
xchg
inc
insb
jge,pt
xor
test
pop
call
pop
icebp
mov
in
ret
lock
mull
lods
adc
mov
inc
mov
stos
add
xchg
loope
push
pushf
mov
dec
shrl
cmp
cmpsb
int
pop
inc
add
mov
or
sbb
test
push
outsl
sub
push
mov
ds
imul
ss
jecxz
mov
inc
call
cmc
fsubrl
fistps
rorb
xchg
loop
sti
xor
int
adc
les
stos
ficomps
jns
or
jbe
sub
jl
call
cltd
inc
lcall
or
dec
cwtl
mov
int3
outsb
add
in
dec
inc
xor
sub
scas
jmp
iret
mov
stos
outsb
mov
popa
xor
push
jno
inc
push
cs
test
or
insl
mov
add
xchg
rclb
repnz
jns
adc
loope
sbb
push
sbb
mov
pop
mov
cmp
movsl
fwait
in
xchg
mov
pop
lods
loope
pop
jbe
mov
movsl
adc
sarb
push
nop
stos
cmpsl
fmuls
scas
cmc
rorl
adc
lret
mov
mov
js
cli
and
mov
xchg
stos
les
xor
mov
sub
ret
adc
pop
lret
fwait
loop
jbe
out
jmp
mov
sbb
xchg
in
cmc
fistpl
lret
jecxz
push
and
icebp
pop
add
pop
jae
or
bound
mov
cmpsl
fs
inc
lds
pop
cmpsb
lods
mov
push
stos
mov
xor
daa
jns
dec
push
and
dec
sub
nop
lods
leave
fimuls
mov
push
repnz
stos
sbb
xchg
mov
jo
lds
test
cmpsl
fsubrl
xchg
stos
lahf
pop
stos
mov
or
ret
mov
aam
cmp
ljmp
cmp
add
fsubs
push
fucom
int3
repz
inc
enter
clc
lods
lret
pop
aam
test
andl
mov
dec
call
mov
ja
decb
sub
shl
xrelease
push
push
in
fadd
loopne
fs
mov
push
ret
sbb
pop
fcmovnu
jmp
cmp
mov
nop
inc
shl
adc
inc
sbb
ret
fstpt
jge
jno
insb
test
sarl
sub
sti
mov
pop
pusha
mov
mov
cltd
push
xchg
xor
outsl
cmp
cmpb
ljmp
xchg
mov
jmp
dec
xchg
data16
sti
outsb
test
mulb
sub
jp
xor
scas
mov
sbb
pop
in
sahf
add
mov
sub
subl
push
jbe
fidivrl
dec
mov
mov
add
inc
jg
xor
xor
jl
push
sbb
in
pop
call
jle
push
testl
dec
int3
push
ja
cmp
xor
pushf
imul
inc
inc
xchg
imul
pop
stos
out
or
out
pop
fs
or
movsb
mov
pop
repnz
arpl
fimuls
fmuls
and
sahf
adcl
push
dec
loopne
imul
subl
fsubrs
sarb
add
inc
aam
pop
and
scas
pop
dec
lcall
sbb
xor
pop
ret
out
sub
fidivs
push
inc
cmpb
enter
xchg
lcall
mov
stos
xor
ljmp
mov
cmp
jmp
sbb
inc
cmc
arpl
xor
pop
mov
fwait
int3
inc
lds
cli
in
sub
xchg
lds
test
xchg
jg
xchg
jmp
ss
adc
fdivl
fld
je
xchg
ret
icebp
mov
addl
jmp
cmp
xchg
out
pop
jno
in
iret
outsl
test
les
and
push
out
mov
xlat
add
insb
fstps
sub
movsl
ljmp
je
pop
pop
adc
pop
lahf
sarb
negb
add
mov
mov
sbb
mov
cmpsl
adc
sub
inc
jge
dec
sarl
hlt
in
mov
fsubrl
scas
lahf
inc
popf
cs
mov
pop
mov
mov
mov
daa
repz
mov
push
xchg
rcrl
ja
jnp
aam
insb
adc
jbe
mov
cmp
pop
add
mov
cs
cli
call
ret
popf
test
hlt
lock
and
int
outsl
push
dec
xchg
sub
xor
daa
jg
test
jbe
scas
inc
faddl
out
stc
jo
lds
or
insb
mov
or
xchg
insb
dec
inc
mov
cmp
push
nop
add
mov
dec
adc
xchg
xor
adc
sbb
push
sahf
dec
test
add
xor
or
mov
push
or
push
je
shl
push
or
xor
mov
jp
or
scas
xor
fstpl
stc
and
xchg
mov
fs
jmp
sbb
jecxz
addr16
faddl
hlt
test
mov
sub
adc
fisttps
mov
loope
push
std
pop
loopne
dec
or
or
out
fisttpl
hlt
cmpsb
pop
in
lcall
xor
push
cwtl
cli
rcl
pop
xchg
adc
shrl
mov
fsin
ret
fnstcw
adc
ret
jle
repz
push
sub
jg
pop
inc
dec
mov
xlat
push
cmpsl
aas
fwait
xor
insl
out
mov
dec
or
and
and
mov
scas
cmp
or
aam
aas
dec
ja
pop
or
dec
pop
out
lods
jo
and
add
or
inc
ds
mov
dec
inc
insb
push
int
loop
out
add
adc
pop
ds
test
out
cmpsb
mov
fstl
jno
mov
push
rcrl
jmp
jg
mov
lods
int
lds
cld
int
xlat
test
fsubrp
mov
cld
shl
movsb
cwtl
fucom
inc
push
push
scas
adc
sub
xor
and
jns
in
imul
in
xorl
jno
sub
adc
out
mov
mov
adc
jmp
icebp
add
in
aaa
or
ret
mov
pop
inc
push
push
xchg
xor
sbbb
jbe
push
movsl
ret
sub
outsb
mov
lock
por
pusha
sbb
in
inc
mov
nop
inc
dec
cmpl
sbb
stos
cmp
and
ficoms
push
add
jo
loop
ret
aas
pop
js
lods
dec
mov
movsb
add
sbb
sub
inc
scas
orl
bound
test
add
jno
mov
dec
jmp
xchg
adc
mov
mov
xchg
xchg
mov
inc
out
or
int
add
je
mov
or
in
fmul
sbbl
les
subl
pop
or
cwtl
pop
push
push
push
adc
mov
jmp
add
push
cmp
ds
test
inc
push
mov
fprem
add
dec
cmp
push
aas
jmp
lahf
inc
jne
cmp
or
in
loopne
rcrl
lret
cltd
std
xchg
test
lock
or
dec
inc
mov
and
out
insb
jo
push
rcrb
xchg
test
push
mov
in
jp
xchg
push
pusha
lcall
out
dec
and
pop
add
pop
sub
xor
push
stos
mov
outsl
mov
movsb
pop
mov
pop
imull
mov
iret
shlb
push
mov
sub
dec
and
mov
xchg
or
cmp
and
gs
call
test
jno
inc
jne
mov
mov
mov
scas
mov
pop
hlt
addb
outsl
aaa
iret
inc
loopne
dec
jno
les
test
pop
fimuls
pop
fwait
pop
ffreep
bound
mov
lods
xor
add
shlb
dec
and
cmp
pop
insl
adc
jle
hlt
les
rcrl
mov
xlat
cmp
jno
cli
popa
mov
int
mov
outsl
test
add
jnp
cli
xchg
ret
outsb
scas
aaa
push
scas
aas
jmp
aam
dec
rcr
fcmovnb
pop
or
fildll
lret
rcrb
or
mov
and
xor
in
test
leave
ljmp
push
xchg
daa
push
inc
and
in
ja
out
mov
or
sbb
dec
xor
push
mov
or
shrb
pop
sbb
imul
jmp
jns
mov
outsb
loop
mov
aad
cmp
or
shll
and
loope
cli
ja
ja
inc
lods
inc
lcall
cmpsl
lods
jns
je
lods
or
or
popf
mov
int3
cmpsl
jecxz
inc
cmpsb
push
das
lds
hlt
jl
push
lret
pop
subl
movsb
dec
add
lret
mov
mov
btr
adc
mov
pusha
jmp
pop
movsl
push
sub
shr
test
shr
fildl
sbb
adc
adc
rorl
aam
sbb
add
push
rolb
jo
pop
xchg
arpl
xor
push
mov
mov
push
aaa
loop
andb
aam
xchg
lahf
add
ret
sub
adcb
rcrb
push
inc
outsb
or
push
bound
negb
ljmp
mov
movsl
jnp
xchg
daa
dec
subl
lahf
and
jo
pop
testb
cltd
add
lods
repnz
mov
pmulhuw
cmp
pop
push
pop
lock
inc
sarl
es
push
hlt
lret
in
stos
movsb
mov
mov
into
mov
in
pop
jmp
sub
nop
push
jbe
pop
pusha
push
push
mov
out
mov
into
popf
pop
scas
mov
int
std
loope
test
shlb
xor
insb
or
loopne
sub
xor
xchg
jge
ret
enter
out
nop
addl
push
out
test
xchg
xor
dec
bound
aaa
mov
mov
inc
xchg
cwtl
sbb
dec
ret
rcr
lock
xor
fisttpll
xchg
pop
inc
xchg
mov
mov
rolb
jmp
pop
xchg
xor
aaa
jecxz
sbb
xchg
inc
aaa
lahf
mov
dec
push
sbb
pop
mov
pushf
xchg
dec
add
shlb
and
xor
inc
xor
mov
cwtl
inc
inc
enter
mov
outsl
sbbl
mov
lock
jo
popf
pop
mov
es
sarb
mov
mov
mov
ret
dec
dec
andl
loop
mov
inc
adc
inc
add
xlat
ret
js
jo
xchg
je
push
aas
lock
daa
dec
mov
add
idiv
ds
mov
repz
xchg
and
jo
mov
loopne
jae
fisubrl
xchg
ret
repz
or
jb
insl
pop
jl
lahf
jg
jne
in
stos
loopne
iret
cmp
dec
and
mov
sbb
or
mov
push
test
adc
mov
iret
mov
or
insb
je
stc
inc
outsb
cs
popa
jnp
popa
inc
aas
mov
push
push
xchg
scas
loope
jp
cmpsb
sbb
jnp
pop
jle
lcall
clc
push
loopne
std
mov
push
mov
js
in
ja
jo
in
jmp
mov
icebp
lret
pop
std
stc
jge
nop
movsb
or
testl
adc
mov
ljmp
mov
call
inc
std
mov
jns
add
popf
mov
push
inc
push
mov
push
inc
sti
int3
push
ret
scas
cmpsl
fldt
enter
or
dec
pop
or
cmp
jne
sbb
adc
cs
jne
sarl
rclb
rcl
cli
sarb
in
mov
in
xorl
pop
push
out
lahf
iret
lods
cld
inc
movsb
sbb
mull
ret
mov
xor
mov
andl
mulb
ss
rclb
dec
in
shl
jge
nop
loope
or
push
ljmp
and
inc
inc
lds
inc
dec
ja
mov
cmp
imul
xchg
ljmp
ja
and
sub
sbb
test
mov
rcll
aam
mov
scas
repz
ret
pop
adc
cmp
push
push
mov
xor
cmp
rclb
push
pop
fmull
mov
or
jno
test
mov
dec
imul
sub
jbe
pop
sahf
addl
sbb
bswap
lahf
icebp
and
xlat
pop
sub
pop
jb
test
and
repz
imul
mov
dec
movsl
lea
je
ret
pop
inc
pop
mov
inc
roll
jo
rorl
icebp
fsubrp
sub
lcall
xor
sti
jecxz
test
cmpsb
dec
and
pop
fidivrs
pop
push
or
mov
and
outsl
sub
and
add
add
xchg
mov
data16
push
sub
xchg
aaa
mov
std
sbb
and
int
xor
ret
adc
imull
add
pop
in
or
add
mov
out
mov
fildll
pop
adc
inc
das
mov
leave
xor
shll
lret
xchg
js
in
ret
fmuls
lods
in
sbb
lcall
mov
mov
cwtl
fldenv
pushf
xlat
int
scas
bound
push
jae
adc
mov
pusha
scas
aaa
filds
dec
pushf
sbb
loope
pop
cmp
mov
jecxz
punpcklwd
xor
cmpsb
pop
enter
cs
pop
mov
pop
cmpl
out
adc
cmp
mov
jno
out
pop
jle
aaa
scas
push
outsl
jmp
sti
and
xor
push
incb
ret
jge
pop
jecxz
mov
lods
ds
scas
lea
clc
sbb
outsb
jecxz
adc
jae
inc
xchg
xchg
ljmp
test
pop
cs
mov
pop
sti
out
imul
push
test
shlb
xchg
das
mov
xchg
mov
mov
sbb
inc
cs
popf
fmul
lahf
cmp
jmp
sub
xchg
arpl
push
adc
das
lock
dec
rcrb
cmp
push
jge
sub
shll
scas
jp
cmp
insl
mov
mov
lods
aas
popf
mov
sbb
stos
out
pop
adc
out
popf
mov
mov
xchg
dec
dec
mov
imul
mov
dec
xor
xor
sbb
sbb
mov
mov
and
push
fstl
mov
mov
or
sbb
dec
sti
push
std
dec
stc
add
sbb
pop
cmp
lahf
adc
fcomps
bound
mov
ret
fistl
mov
jge
sbbb
inc
jno
test
add
push
xchg
rcr
int
push
out
or
aas
mov
in
enter
popf
in
xor
lahf
xor
rcrl
repz
dec
rcrb
fbld
dec
mov
cmp
adc
dec
shll
adc
xchg
loop
adc
fsubs
pop
sub
jp
lret
aaa
jns
and
ds
or
xchg
push
add
mov
xor
and
dec
daa
fidivl
xchg
push
in
and
mov
clc
mov
push
and
jnp
pushf
dec
dec
outsb
icebp
dec
pop
sub
test
sar
lahf
and
int
fmull
fwait
insb
ss
ret
addr16
jbe
fildll
adc
es
mov
insl
adc
popa
dec
dec
xor
fbld
movsb
push
dec
lahf
js
popf
hlt
mov
inc
nop
mov
mov
xlat
pushf
mov
sbb
inc
cltd
gs
call
int
xchg
add
cmp
lahf
mov
jb
cmovp
iret
push
mov
mov
push
mov
pop
inc
mov
cmpsl
push
add
daa
les
fcomps
out
mov
jae
ja
sbb
sbb
jbe
xor
cmp
idivl
fbstp
jmp
push
xor
jle
popa
jmp
cmpsl
xchg
cmp
inc
adc
xor
cs
or
lea
in
ljmp
or
inc
dec
or
lea
push
mov
sbb
xor
mov
aas
jge
cmp
enter
pushf
ljmp
lds
aam
adc
pop
sti
fidivs
clc
test
xchg
shll
out
mov
mov
xor
fwait
mov
popf
stos
fldcw
inc
out
sbb
lods
push
imul
mov
sub
inc
sbb
jl
jecxz
cmp
mov
sbb
add
stos
ds
sub
mov
dec
test
dec
cmpb
adc
in
stos
fstl
mov
mov
out
dec
fsubrp
pop
dec
leave
mov
aam
call
scas
not
xchg
daa
cmp
or
pushw
jnp
dec
add
inc
and
sub
add
shr
jo
xor
mov
mov
popa
fisttpll
inc
add
repz
insl
ss
int
sbb
dec
stc
test
out
mov
in
mov
stos
add
mov
loopne
movsb
jl
pop
in
mov
xchg
or
dec
out
mov
jle
int3
stos
ljmp
test
cli
sub
jp
ja
inc
push
sbb
fcomip
pop
ret
lcall
push
scas
jbe
iret
movsb
xchg
stos
push
test
add
mov
jne
scas
adc
cmp
cli
sbb
xlat
andl
hlt
call
mull
push
fwait
or
pop
ror
mov
ds
jb
idivl
fistl
pop
out
lret
ljmp
sub
mov
lds
or
mov
mov
mov
sahf
fsubrl
loope
sbb
in
mov
cli
loop
lods
loop
jp
jb
fnstenv
es
inc
inc
test
adc
in
push
push
dec
lea
pop
adc
orb
pop
mov
push
jle
inc
xchg
xor
xchg
dec
jbe
jecxz
sub
mov
xor
jnp
jbe
mov
je
flds
mov
test
inc
mov
add
cmp
dec
and
adc
fiadds
pop
xor
and
int3
cmp
xchg
cmpl
pop
and
scas
and
lret
inc
call
push
sbb
fdivs
and
ja
jl
lcall
mov
clc
push
test
fisttps
mov
cltd
jle
jb
aas
cmp
sahf
fimull
outsl
sub
lret
js
cmpsl
aaa
dec
push
add
fiaddl
cmp
out
add
jne
loope
jle
sbb
add
push
add
insb
jno
call
in
fwait
outsb
sahf
bound
and
pushf
xchg
inc
xchg
mov
xchg
das
inc
stos
pop
data16
sub
add
push
push
cmpsl
fstpt
mov
and
mov
xor
pop
and
push
lods
mov
cwtl
shl
or
cld
insl
xor
ljmp
rclb
xorb
jmp
pop
outsb
ljmp
ret
pop
jne
sbb
call
mov
inc
jbe
mov
enter
into
cmp
mov
mov
pop
cmc
imul
sbb
inc
notl
mov
push
in
int
mov
jno
out
jb
cli
sbb
lods
xlat
ljmp
sub
out
hlt
test
inc
mov
repz
push
ret
es
loop
movsb
jle
loope
sbb
rcll
push
inc
outsl
push
pop
dec
cmp
adc
mov
scas
pop
or
jecxz
in
into
jb
lods
add
outsl
les
add
pop
jb
sbb
mov
stc
int
mov
inc
testb
push
data16
sbb
dec
lock
int3
mov
xlat
popa
mov
imul
inc
add
mov
sub
loope
andl
rol
filds
imul
icebp
rcrl
dec
cwtl
sub
aam
int
xchg
inc
adc
jp
das
dec
ret
mov
and
jp
test
movsl
jno
pop
add
sarb
xlat
scas
xchg
les
out
test
sti
push
or
and
aad
bound
jl
shlb
fcompl
pop
ret
orb
subb
jns
lret
cmp
imul
pop
jnp
stos
xor
jmp
xorb
scas
dec
lret
cmp
mov
adc
mov
jmp
imul
lods
pop
adc
and
add
mov
lods
fwait
mov
test
fs
cmp
shlb
sub
pop
sub
stos
addr16
popf
xchg
jb
jne
loop
int
jmp
xorl
pop
mov
andl
or
lods
sbb
push
scas
jge
outsl
sbb
xchg
lods
jnp
lds
shlb
rcl
mov
bound
xor
add
jle
test
or
sub
sbb
mov
or
and
push
xlat
mov
cli
push
xchg
les
fisubl
add
pop
inc
add
jecxz
mov
mov
pusha
fmul
divl
int
and
aas
rorl
xor
pop
dec
mov
sti
repz
xlat
leave
mov
jns
adc
repz
push
lret
mov
ror
pop
jmp
rcrl
addr16
push
pop
push
bound
cmp
inc
cmp
xchg
dec
jg
jb
jb
stc
test
add
test
mov
jle
add
sub
ret
mov
dec
fnstsw
or
arpl
cli
hlt
xor
imul
add
outsl
rcll
xchg
sub
pop
shlb
jns
dec
mov
aad
jae
inc
fsubl
xor
negl
mov
cmp
lcall
adc
adc
int3
sarl
out
popf
mov
repz
mov
fbstp
sti
int
lods
push
ficomps
mov
push
inc
insb
inc
test
lods
je
hlt
xchg
clc
daa
sub
xchg
mov
adc
rcr
fisttps
movsl
and
cwtl
in
and
lock
es
jnp
and
testl
jo
outsl
aas
iret
arpl
cmp
cmc
sbb
ljmp
xchg
int
mov
xor
adc
movsb
and
jle
sbb
mov
mov
mov
push
xorb
popf
inc
cmc
fnstsw
cmc
mov
insb
cmp
jns
adc
add
lret
and
inc
stos
enter
in
out
push
imul
xor
fcmovne
mov
mov
arpl
adcb
dec
sti
ds
call
xchg
cmpsb
sub
sbb
cld
add
int3
inc
inc
not
out
jae
or
int
cmc
lret
inc
adcb
adc
adc
popa
cmp
std
xchg
xchg
sbb
sub
daa
jmp
sub
pop
xor
and
dec
jnp
popl
das
sbb
xlat
into
testl
pop
call
inc
inc
xchg
ds
adc
inc
or
pop
pop
push
cwtl
popf
add
aas
loopne
adc
scas
std
fistps
adc
outsb
lahf
mov
sahf
fs
adc
mov
lods
sbb
xlat
or
mov
sbb
mul
jg
ret
bnd
loope
push
adcb
call
ret
fsubrs
jb
call
cmpsl
push
cmp
sahf
stc
lock
sar
cwtl
or
sarl
mov
andb
mov
fmulp
mov
cs
out
shrb
push
push
push
mov
sub
aaa
jmp
outsl
xlat
jbe,pn
xor
xor
mov
outsl
loope
inc
int3
push
test
jecxz
sbb
ret
inc
cld
stos
clc
jb
jg
into
pop
add
xchg
mov
and
push
mov
pop
push
call
xorl
es
or
inc
adc
mov
pop
cmp
lds
stc
inc
pop
jae
inc
adc
mov
add
fdivl
in
mov
nop
popa
xor
fmuls
int
arpl
and
cmpl
add
mov
jb
div
pushf
pop
sbb
addr16
outsb
sub
xor
js
addb
sbb
repnz
cld
fsub
pop
jl
cmpb
adc
add
pop
sub
xchg
jbe
stc
sub
cmp
cmc
or
push
jnp
jnp
ds
adc
mov
aaa
adc
lds
fwait
mov
add
inc
and
pop
push
jo
add
jp
int
sahf
push
pop
push
xor
mov
and
and
pop
adc
icebp
dec
and
inc
pusha
sbb
pop
aas
das
es
xchg
push
iret
out
imulb
pop
inc
push
xor
decb
test
push
xor
mov
xchg
mov
icebp
sub
cs
cli
mov
test
sti
js
adc
push
pop
or
jle
mov
or
iret
pusha
imul
pop
notl
andb
shlb
mov
pop
int
les
ja
nop
inc
enter
dec
int3
decb
inc
xor
shll
push
pop
mov
je
xchg
sub
add
pop
sub
loope
addr16
or
int
push
lds
mov
insb
mov
mov
cmp
jnp
popa
jae
jns
mov
rcll
stc
sub
mov
outsb
jae
lock
adc
and
xchg
lret
test
cmp
mov
lds
sbbb
jle
adc
cmp
pop
arpl
dec
call
mov
inc
rcrb
and
stos
orl
adc
jne
loopne
sbb
insb
xlat
lods
or
dec
pop
icebp
or
stos
mov
ss
sbb
jne
cmpl
mov
lret
cmpsl
mov
jg
xchg
movb
lahf
cwtl
das
dec
xchg
or
push
push
cli
mov
jns
outsl
add
sbb
imul
loop
int
lods
mov
das
faddl
and
leave
fsub
movsb
bound
mov
aad
adcb
mov
mov
sub
add
mov
lcall
cmc
pop
xchg
dec
call
dec
mov
cmp
loopne
mov
adc
in
dec
sbb
dec
push
xlat
lds
add
pop
pop
jno
jmp
mov
mov
xchg
nop
xor
hlt
leave
les
push
mov
xorl
or
xor
jmp
xor
popf
cmp
cmpl
mov
fwait
orb
leave
cmpsb
mov
aam
sub
out
xchg
mov
push
mov
fistl
sbb
daa
adc
adc
gs
decl
or
mov
jp
scas
in
in
push
outsl
mov
sbb
mov
and
and
lret
mov
dec
jae
xor
add
es
jl
adc
jp
dec
sub
or
push
js
bound
ret
jg
scas
test
cmpsb
jo
sub
mov
dec
adc
mov
lahf
rcl
shll
sti
lret
cmp
jmp
xchg
mov
dec
movsb
dec
into
add
jo
cmpl
mov
adc
popf
addr16
lods
lea
jge
rcr
call
sbb
jp
pop
add
and
push
int
xor
push
add
das
shlb
or
data16
call
lea
mov
inc
jns
cwtl
ja
rcr
mov
aas
icebp
jmp
sub
mov
sub
shrl
aad
jae
movsl
mov
in
dec
pop
mov
movsl
push
xor
sti
ljmp
add
mov
add
gs
push
mov
adc
popa
adc
pusha
or
cmpsb
inc
and
cltd
inc
jno
mulb
or
adc
xor
cmp
and
nop
push
pushl
cmpsb
xor
test
xor
lcall
jne
lahf
sar
and
xchg
push
xchg
jle
adc
add
jl
xchg
ljmp
fs
shrl
in
pop
out
mov
xor
fidivrl
es
dec
jne
imul
or
mov
cwtl
fists
xchg
insb
push
cmp
push
pushf
adc
xchg
sbb
or
imul
add
inc
out
mov
push
xchg
and
sahf
popa
insl
push
xor
sub
movl
sub
insb
sub
push
je
jno
or
lods
cltd
movsb
jle
inc
int
pop
dec
jl
sbb
mov
dec
jae
adc
mov
loop
or
std
push
push
cmp
push
mov
subl
xchg
or
mov
pop
enter
cmc
dec
jbe
negb
lea
xor
movd
leave
jne
jp
movl
cmp
aaa
xlat
ret
sub
outsl
sti
test
add
pop
xchg
mov
xor
cli
cmp
mov
movsbl
test
fndisi(8087
push
aas
xor
jnp
loop
fistpl
cltd
arpl
test
or
xor
jae
iret
popf
int3
cmp
mov
pop
leave
xlat
clc
clc
sbb
add
movzwl
push
push
sbbb
cmp
mov
xchg
ss
les
in
mov
js
mov
subl
adc
lahf
dec
cmp
lods
or
test
mov
das
std
jno
lds
fsubrl
dec
push
mov
jae
inc
xor
ds
lods
js
cmp
or
test
stos
and
loopne
repz
sub
sub
imul
ret
add
jl
idivb
test
jne
popa
add
jb
and
add
enter
push
xor
pusha
adc
mov
pop
mov
pop
add
fstps
testb
das
leave
jb
ret
or
and
sbb
lods
rcll
int
movl
call
scas
das
mov
mov
xor
ret
inc
and
jns
sti
lcall
jo
xlat
mov
call
adc
cmp
sub
out
aad
iret
add
adc
jns
jmp
loope
xor
aad
mov
ljmp
jl
out
es
rolb
shll
daa
lret
repnz
dec
ds
out
jbe
mov
adc
mull
cmc
pop
jge
fmuls
or
mov
lods
xchg
sbb
pop
stos
cltd
pop
jns
xchg
or
or
xchg
xchg
cli
mov
jle
test
sbbl
xchg
xchg
fld
addr16
mov
adc
add
ud2
or
call
push
popa
addr16
mov
dec
xor
xchg
iret
inc
adc
sub
pusha
nop
cwtl
insl
jns
adc
push
jae
xchg
cmp
ja
xchg
mov
cli
sbb
adc
ret
cltd
add
call
ljmp
jo,pn
cs
pop
lock
insb
inc
inc
cmp
xchg
mov
mov
adc
mov
sub
inc
in
sar
jns
mov
inc
addb
sub
and
dec
sbb
into
cli
es
xchg
mov
movsb
cmp
iret
pop
xchg
aam
sub
adc
addr16
push
xlat
xchg
jp
inc
rcll
scas
leave
mov
out
hlt
xor
sbb
negl
jle
enter
xchg
jne
stc
sub
cbtw
dec
inc
int
sbb
lret
push
dec
bound
add
cltd
inc
leave
inc
or
je
push
mov
xor
ret
jnp
add
xchg
push
add
fwait
add
inc
push
mov
xchg
sub
loop
dec
or
adc
cmp
xchg
cmpsb
sub
jbe
sarl
jne
pop
test
xor
je
fsubr
mov
data16
mov
cmp
outsb
ss
ret
xchg
xchg
jne
fld
jg
xchg
ret
ret
dec
subb
lahf
bound
mov
in
cmp
lds
xor
jne
sub
cltd
ja
mov
scas
push
out
adc
xchg
orb
scas
add
cmc
pusha
fstpl
mov
xor
and
iret
iret
cmpl
push
mov
adcb
dec
ljmp
es
lcall
lcall
pop
les
outsb
je
fmul
jg
ss
cmp
push
ss
xchg
cmp
pop
mov
and
push
shrb
mov
mov
movsb
subl
push
sub
push
pop
dec
clc
jnp
cmpsb
rcrl
repz
imul
dec
xchg
ja
rcrl
inc
jl
pop
popf
sub
lock
mov
sub
jae
clc
cmp
inc
adc
fldl
daa
int
bound
rcll
hlt
mov
repz
pop
int3
scas
bound
mov
mov
lahf
mov
mov
cld
out
and
inc
dec
lods
les
xchg
nop
shr
addr16
sbb
sbb
mov
jae
iret
out
enter
xchg
sbb
call
out
js
fstps
xchg
push
shr
push
xor
les
xchg
scas
int3
cmpsb
cmp
into
push
pop
in
sub
inc
out
pop
jne
lea
lods
pop
ljmp
aam
jmp
mov
fidivs
xor
ret
aas
movsb
test
mov
xchg
pop
cwtd
ds
cli
inc
clc
jmp
addb
cmc
mov
or
or
add
int3
ss
fidivrl
jbe
mov
mov
xor
daa
xchg
pop
out
and
mov
pop
jl
lret
adc
mov
mov
stc
in
test
jecxz
imul
sbb
loop
xchg
pop
add
pop
arpl
imul
mov
xchg
push
iret
mov
subl
cmp
insb
push
mov
inc
pusha
fbld
lods
add
cld
test
sbb
fwait
pop
iret
nop
jnp
js
pop
in
out
push
or
xor
js
push
mov
push
aas
pop
push
or
inc
repnz
call
and
push
jb
mov
imul
std
movsl
test
cwtl
push
adc
adc
cltd
mov
dec
js
jp
add
daa
pop
dec
and
lods
xlat
pop
inc
loopew
les
and
rorl
push
sbb
ss
xor
add
push
movsb
mov
mov
jl
mov
jae
push
fs
fimull
mov
notb
cmpsl
xchg
movsl
pop
sub
cwtl
aas
mov
mov
add
imul
pushf
cmpsb
int3
call
ret
loopne
jnp
int3
xchg
pop
pop
sbb
and
dec
call
mov
std
push
mov
mov
mov
or
fwait
iret
loop
cs
push
outsb
push
sbb
out
xchg
push
dec
pushf
pop
jo
push
dec
push
mov
xchg
orb
movsl
xor
jno
fs
sbb
pop
xchg
jl
sub
sbb
test
testl
jne
mov
loopne
movd
mov
and
inc
pop
dec
test
ficompl
or
or
ja
jl
jg
shr
cmpsl
mov
scas
decl
test
add
ret
call
mov
push
and
out
xchg
adc
and
imull
sbb
sub
paddusb
pusha
stos
sub
jle
mov
insl
scas
shll
lds
push
xchg
pop
mov
pushf
pop
jmp
and
xorps
cmp
pop
bound
add
xchg
xor
inc
addr16
jbe
jb
shlb
sbb
scas
pop
cltd
je
inc
or
sbb
sub
mov
movsb
mov
out
cmp
jnp
xchg
addl
sbb
repnz
cmp
sub
cmp
add
fucompp
and
pushl
xor
lret
ss
test
pop
xchg
pushf
mov
rcll
fbld
popf
lock
cmp
adc
fmul
aam
xchg
mov
das
nop
mov
iret
testl
inc
mov
sarl
and
and
sti
psubq
les
fadds
out
fyl2x
rorl
jns
jge
mov
mov
adc
mov
dec
in
dec
jg
cwtl
adc
aas
gs
dec
mov
inc
and
inc
dec
arpl
dec
or
fadds
imul
cli
mov
icebp
xor
cli
addr16
fsts
cmpsl
xor
mov
jnp
sti
aas
or
and
or
or
dec
mov
loop
loopne
and
cmpsl
ror
pop
inc
mov
sub
pushf
std
testl
pop
dec
push
pop
inc
add
jb
cmc
out
or
inc
sbb
jle
pop
push
xor
xchg
mov
nop
or
ffreep
jge
dec
mov
orl
das
pop
inc
sbb
inc
daa
lea
repz
ror
test
call
pop
fs
incl
mull
rolb
movsb
cmp
push
inc
lea
cmp
loope
daa
test
cmp
ret
cmc
jl
mov
jl
fmulp
fs
mov
pop
insl
inc
call
lret
pusha
jle
jae
out
lret
fisubl
mov
ss
dec
loopne
dec
push
movsb
xchg
pusha
jo
xor
scas
sub
xchg
mov
inc
push
dec
jle
and
loop
xchg
sbbl
rol
push
js
test
insl
dec
add
mov
iret
xchg
mov
and
jmp
or
jo
jno
and
stos
rcll
ss
jl
shll
pop
in
sbb
imul
movsl
cmp
ja
cmp
cmp
ds
xchg
pop
push
cmc
sub
cmp
jne
add
mov
push
xor
push
lea
and
fcoms
adc
stos
jg
push
xchg
imul
xor
fstpl
push
pop
bound
lods
adc
cmpsb
adc
mov
xor
push
aaa
add
pop
mov
and
inc
xlat
mov
or
repz
cmp
mov
invd
adc
pop
scas
rcrl
adcl
shl
decl
or
pop
sbb
imul
lds
xor
psrld
gs
jle
and
xchg
xchg
xchg
pusha
adc
icebp
push
outsl
add
rorb
out
imulb
sub
xor
dec
mov
sbb
out
push
lods
mov
xchg
leave
test
push
jge
jne
inc
fisttpl
lods
xchg
hlt
or
inc
cmpl
xchg
movsl
adc
jnp
jl
jle
rol
cmp
and
pusha
cltd
sti
nop
jns
mull
repnz
in
xchg
ds
bound
imul
or
ss
jbe
or
adcb
pop
push
movl
shlb
mov
xor
xchg
pop
movsb
sbb
ret
pop
clc
adc
test
jo
pop
outsb
jg
iret
inc
test
js
lcall
sbb
push
add
lods
dec
cli
jns
loope
sbb
jg
mov
lret
mov
std
mov
mov
test
test
fadds
sub
mov
in
pop
push
in
fstpt
cs
jge
aad
mov
push
cli
xchg
cmp
scas
lcall
scas
pop
pop
sub
xor
and
cmp
cmc
stos
mov
test
xlat
mov
inc
adc
add
inc
pop
dec
cmpsb
mov
je
shlb
std
push
movsb
fnstenv
jg
cmp
out
outsb
xor
icebp
adc
push
pop
jnp
into
or
jo
addr16
push
mov
and
jo
aas
les
xchg
cmp
mov
mov
add
sbb
addr16
lcall
pop
clc
inc
adc
xor
pop
push
jecxz
out
inc
push
in
inc
fsubs
or
xchg
call
jns
cwtl
or
push
call
aam
inc
in
addr16
cmp
lea
test
push
stos
icebp
dec
pshufw
inc
xlat
jmp
jo
ljmp
ret
fimuls
leave
movb
ljmp
repz
ljmp
insl
lea
push
adc
push
lret
das
imul
pop
pop
pop
mov
dec
sbb
mov
inc
lods
cmp
popf
mov
mov
mov
add
adc
js
or
enter
bound
xlat
jnp
adc
jbe
stc
cmp
push
mov
out
out
mov
out
cld
sbb
adc
push
movsl
rorb
outsb
dec
outsl
mov
in
pop
and
stc
jmp
int3
cmpsl
fidivs
into
mov
hlt
push
stos
push
scas
push
mov
andb
dec
popf
jne
hlt
sub
scas
in
xchg
shlb
jb
lret
arpl
dec
or
mov
loope
adc
pop
repnz
dec
inc
add
push
ja
popf
cmp
sbb
or
xor
lcall
in
insb
cwtl
add
push
clc
ljmp
cmp
push
push
dec
cli
in
mov
in
sti
mov
cmp
cmpsl
popf
nop
xor
lcall
into
ret
aam
lret
pop
xchg
fwait
ja
pop
je
jne
xchg
lahf
pushf
mov
hlt
dec
out
aad
out
inc
xchg
test
call
mov
add
xlat
loopne
aad
xchg
pusha
mov
sarb
lods
add
sub
test
xchg
inc
les
fsubrl
leave
pop
inc
loope
into
add
repnz
adc
icebp
dec
pop
xchg
mov
cmc
dec
push
push
pop
es
mov
pop
aas
xchg
iret
inc
push
mov
cmp
clc
or
ror
sub
fbstp
or
xchg
dec
jnp
fimuls
push
test
mov
jno
lahf
adc
inc
mov
popa
lahf
cmp
cltd
and
jbe
out
cmc
xchg
daa
xorb
inc
sbb
popf
outsl
push
adc
lcall
push
or
fcom
jo
lea
mov
or
inc
jmp
push
mov
test
fidivrs
fistpll
cmpsl
jb
and
pop
in
mov
inc
mov
mov
mov
and
aam
dec
out
pop
pop
in
icebp
je
pop
popf
cmp
in
dec
out
push
outsl
clc
aad
push
adc
mov
insl
mov
add
cli
addr16
out
jns
mov
addr16
add
and
xor
call
les
inc
push
cmp
jne
insl
popa
outsb
insb
test
cmp
aad
and
adc
shrl
xchg
sub
mov
xchg
fs
push
inc
or
cmp
add
lcall
insb
pusha
pop
pop
mov
leave
sbb
stos
dec
enter
test
iret
inc
cli
jnp
sub
cs
mov
sahf
xchg
adcb
mov
lret
test
xchg
ss
dec
test
mov
lea
mov
nop
in
cmp
out
stc
pop
mov
sub
aaa
scas
ficoms
inc
inc
inc
pop
xchg
in
lcall
cmc
sbb
or
mul
sti
mov
push
fstpt
cli
xlat
enter
aaa
or
lret
cmp
mov
lea
in
jae
ror
in
and
in
scas
sbb
push
fmul
dec
test
pop
pop
xor
push
mov
mov
cmp
inc
fistl
mov
cs
stos
ret
xchg
mov
int3
es
in
aaa
xchg
cmp
outsb
outsb
or
and
mov
xchg
lods
enter
jge
mov
dec
lods
insl
addb
cmp
stc
gs
int
adc
shrb
xchg
enter
dec
and
repnz
sbb
nop
stos
gs
sbb
xchg
xor
pop
rclb
pop
dec
cli
xchg
aas
inc
imul
fcoml
ja
cwtl
inc
mov
pop
data16
outsb
push
in
in
mov
outsl
mov
pop
add
dec
xchg
jp
fldenv
scas
lahf
loop
pop
data16
push
mov
mov
cmpsb
jge
leave
add
int
cld
push
inc
push
iret
hlt
stos
xor
pusha
sub
jl
test
les
sub
cmpsb
fstp
rcll
push
inc
mov
and
jecxz
test
cltd
cltd
loop
xor
jge
cmp
mov
jnp
sbb
loop
sub
aas
or
push
loopne
dec
pushf
into
add
ljmp
es
das
jno
in
adc
push
mov
lea
in
push
dec
fldl
popa
xchg
ja
leave
cmp
aas
scas
mov
xchg
out
ret
or
cmp
mov
mov
test
ja
in
and
cmpsb
jo
cmpsl
out
mov
rol
sbb
push
mov
or
cmp
subl
call
mov
cmp
pushf
in
mov
loopne
insl
mov
push
mov
stos
leave
lock
lea
adc
mov
popa
inc
xor
push
push
cmp
ljmp
shll
jb
adc
pop
mov
pop
sub
or
mov
notl
mov
mov
jno
test
mov
in
dec
mov
inc
and
mov
xchg
xchg
jmp
sbbl
sar
push
sub
stos
je
mov
mov
in
out
sti
daa
jo
adc
cwtl
aad
pop
out
cmp
in
icebp
pushl
cmp
sub
aam
push
jecxz
sub
fstl
das
and
fxch
inc
sbb
out
loop
mov
sub
push
jmp
mov
outsb
dec
jno
or
mov
cli
push
adc
fbld
ficoml
pop
out
sbb
jle
test
adc
xchg
cltd
push
lcall
dec
clc
lret
pop
sahf
imul
orl
aam
call
loop
scas
push
ss
shll
jg
adc
xlat
mov
leave
mov
int3
or
dec
adc
mov
pop
push
cmc
jbe
cmpl
dec
xor
sbb
cmp
movsb
adc
pop
outsb
leave
or
xchg
sub
mov
into
je
enter
mov
xchg
adc
inc
mov
jp
lea
or
mov
xorb
push
mul
add
push
xchg
and
es
lods
mov
popa
mov
shll
test
dec
fisttps
negb
sti
add
jge
lahf
jle
xchg
es
test
jle
push
cmp
xchg
loopne
sub
lret
jb
scas
mov
pop
repnz
nop
sarl
xchg
mov
pop
loopne
fcomps
push
js
cli
xor
xorl
nop
dec
movsb
adc
in
xor
cli
and
lahf
xlat
sbb
mov
ja
test
ds
mov
xchg
cmp
pop
lret
daa
mov
loope
xor
mov
mov
jmp
inc
leave
imul
cmc
dec
push
jo
mov
rorl
in
mov
or
pop
int3
jmp
mov
stc
push
mov
test
xchg
mov
jo
pop
nop
pop
add
mov
inc
cmpsb
dec
pop
scas
pop
and
mov
mov
lahf
sub
jl
adc
addr16
and
cmpsb
movsb
test
xchg
jo
and
mov
gs
push
sub
jno
sbb
mov
ljmp
dec
inc
jae
xchg
mov
or
inc
int
xchg
cltd
mov
lret
clc
ret
dec
sub
sbb
mov
cmpsl
lret
pushf
fidivrs
push
sti
adc
in
pop
aaa
shlb
adc
or
sbb
jbe
and
aaa
sahf
lret
imul
clc
pop
addb
int3
stc
pop
mov
mov
rcl
fcomip
inc
and
jge
sbb
mov
jno
or
jb
pop
xor
push
push
push
xchg
ljmp
adc
aaa
dec
cmp
stos
repz
in
xchg
movsl
popa
scas
cmp
addr16
cmc
push
mov
xchg
sbb
cmc
aas
add
pop
mov
mov
pop
ja
sarb
sbb
and
push
inc
gs
inc
mov
mov
fidivrs
testb
adc
sbb
fstl
sbb
mov
sub
loop
pusha
sub
cmp
clc
xchg
push
stos
jg,pt
movsl
or
or
pop
inc
outsb
ret
fistl
dec
pop
int3
add
mov
push
push
sub
push
and
mov
addr16
mov
xor
dec
sub
cmp
xor
insl
jl
pop
dec
ficomps
dec
or
aaa
shl
inc
cmp
ds
sti
lahf
push
negl
nop
stc
mov
add
cmp
shll
ja
in
ss
and
push
sbb
jg
fmull
or
pop
nop
mov
adc
int3
push
fcoml
and
lods
lea
cli
sbb
test
sub
add
push
mov
jbe
and
mov
js
push
inc
jmp
dec
std
jno
lahf
icebp
repz
iret
cli
fldl2e
fldenv
pop
das
leave
add
pusha
lahf
push
cs
cmp
popf
inc
dec
or
test
push
outsb
pop
insl
nop
xor
mov
mov
jns
mov
iret
rol
lret
ljmp
mov
and
pop
pop
adc
sbb
adc
es
sub
cwtl
and
sub
addr16
in
mov
out
add
mov
cmpl
lds
les
loopne
xor
arpl
cmpsl
lahf
sahf
mov
sbb
jp
faddl
cmp
repz
cmp
in
pop
jbe
and
test
adc
ja
jmp
sub
aad
mov
mov
push
popf
fists
mov
js
pop
mov
iret
inc
xlat
sahf
pop
and
jecxz
dec
ss
int
loop
mov
adc
mov
outsl
jl
push
mov
xor
or
iret
clc
cmpsb
gs
and
pusha
mov
out
xor
ret
lds
sbb
mov
test
xchg
fs
dec
mov
std
mov
cmpsl
std
or
jecxz
mov
pusha
ror
pusha
xchg
or
lret
mov
inc
xchg
cmc
or
out
notb
mov
scas
test
sub
int
push
jno
gs
or
push
ret
dec
cmp
jb
sub
es
lahf
push
or
fisttps
inc
sbb
push
daa
jno,pt
pop
insl
pop
pop
or
xor
mov
pusha
int
mov
hlt
ds
es
push
push
jnp
push
mov
pop
mov
xchg
pop
mov
fldcw
lods
inc
inc
push
push
adc
xor
test
lods
pop
push
into
test
push
inc
jae
enter
out
aas
enter
and
mov
pop
std
inc
leave
stos
outsb
out
sub
les
add
into
scas
cltd
pop
loope
lock
cld
rol
test
lods
cltd
jp
push
sbb
int3
cmpsl
daa
aaa
cmpsl
push
sub
roll
fcom
inc
rep
fidivrl
jecxz
es
aaa
sub
ds
xchg
xchg
sbb
or
xor
pop
lahf
ss
sbb
es
sub
cmp
xlat
xchg
adc
pop
inc
mov
sbb
push
inc
sub
xchg
dec
mov
sahf
or
aad
xchg
add
xlat
push
arpl
adc
sbb
lahf
les
sbb
adc
cmp
es
sti
cmpsl
and
inc
es
fildll
sbb
in
push
insl
call
or
enter
xchg
movsl
xor
mov
pop
lods
and
cmc
add
lret
mov
dec
push
pop
sub
lret
mov
fcoms
xchg
les
bound
xchg
cmpl
pusha
je
mov
mov
inc
sub
sub
lds
pop
pop
stos
inc
xchg
arpl
mov
lods
push
scas
sub
jmp
mov
and
xor
or
ljmp
pop
popa
sub
push
pop
pop
add
fmull
inc
fs
fsubs
rclb
cmp
xlat
xor
fadd
push
psubb
push
lret
jp
lret
mov
and
lock
idivl
xchg
ds
mov
push
fwait
pop
fwait
jae
or
scas
test
rolb
lret
sbbb
xorb
andl
mov
test
or
push
sub
lods
push
mov
adc
outsb
dec
cmpsb
jg
sahf
adc
ss
or
and
jae
data16
jg
bound
fs
stos
push
dec
pusha
mov
ror
add
and
xchg
daa
xor
gs
mov
mov
fildll
push
sbb
jmp
cwtl
mov
popw
mov
sarl
enter
push
jecxz
loopne
rorb
lret
shll
mov
movb
and
das
aas
or
orb
push
mov
stos
testl
add
mov
dec
lock
cwtl
pop
jo
adcb
push
out
mov
dec
pop
lds
add
int3
popa
bound
push
std
cmpl
les
int
inc
arpl
push
pop
adc
push
ljmp
shll
add
jl
out
adc
imul
outsl
push
adc
loopne
cmc
mov
pop
lods
scas
lea
xor
add
mov
or
xor
fincstp
shlb
std
dec
push
or
jge
jecxz
inc
dec
mov
xchg
mov
leave
aas
loop
cwtl
xor
nop
sub
cld
and
cmp
ljmp
aam
pop
loope
in
lock
cmp
sub
sub
mov
adc
push
push
into
adc
pop
push
adc
popa
enter
lods
adc
push
aaa
or
xchg
movsl
pop
push
pop
out
sbb
bound
inc
pusha
adc
test
inc
es
out
movsb
mov
mov
xor
cwtl
pop
xchg
test
inc
push
jl
test
clc
push
dec
mov
loopne
fnstsw
sbb
bound
pusha
xchg
idiv
sbb
in
fists
call
enter
xor
inc
daa
push
cli
mov
clc
sbb
in
add
sarb
shrl
std
lods
test
push
lcall
inc
aam
add
xchg
je
mov
sub
sub
call
or
add
fwait
adc
xchg
into
mov
orl
shll
add
push
sarl
xor
dec
dec
aaa
movsl
and
cmpsb
sub
cld
mov
pop
mov
jnp
adc
xchg
loope
scas
dec
imul
call
and
mov
rcrl
xorb
mov
data16
xor
not
lahf
mov
adc
and
adc
out
insb
mov
push
cwtl
xchg
test
popa
jno
ss
shlb
gs
outsb
xchg
insb
cld
test
mov
xor
mov
loop
jne
out
scas
lock
push
cs
sub
inc
lds
addb
inc
and
fsts
mov
pop
jno
jne
dec
ljmp
into
mov
push
in
adc
loop
inc
loopne
dec
daa
mov
cmp
jne
push
je
aas
push
frstor
push
push
pop
lock
bound
adc
lea
adc
mov
filds
sahf
add
xchg
mov
push
ja
xor
xchg
mov
add
jmp
sbb
mov
sbb
lds
cwtl
inc
xor
insl
hlt
sahf
jecxz
push
or
sti
inc
stc
shlb
mov
mov
jmp
push
loop
push
movsbl
mov
fisubs
popf
les
inc
adc
loopnew
jmp
cmp
mov
mov
out
cmpsb
fld
mov
inc
push
out
jle
imul
add
push
ss
ffreep
add
xor
xchg
icebp
sbb
inc
outsl
into
fildl
mov
jb
test
pop
or
sbb
dec
xchg
inc
sbb
rcr
jne
inc
xchg
add
add
push
jp
jl
cmp
lods
jg
xor
xor
aas
enter
std
push
sar
sbb
inc
call
xor
aaa
cli
mov
or
sahf
je
push
rolb
dec
std
add
push
mov
jbe
rep
sbbb
in
pop
sti
rolb
cmc
adc
pop
dec
jmp
int
in
pop
mov
jg
sub
jp
repnz
xor
aaa
loop
clc
lock
lods
aas
jne
cwtl
xchg
cs
cmp
ljmp
add
jge
mov
push
cs
sub
and
inc
jb
into
fdivs
sbb
sbb
jb
push
jmp
aas
roll
outsb
lcall
aaa
repnz
stos
mov
lret
inc
adc
shll
sbb
jle
in
outsb
aas
je
ret
icebp
mov
fists
inc
mov
mov
dec
rcrl
mov
mov
ljmp
pop
pop
lret
or
mov
and
test
inc
mov
mov
sbb
and
repz
mov
or
jp
outsl
inc
cmpsl
cli
push
lret
push
sub
push
or
add
sarl
rcrl
inc
arpl
mov
sub
jle
cmp
cmp
test
xor
or
xor
mov
dec
cwtl
div
inc
or
into
push
and
xchg
dec
pop
aas
ds
sbb
data16
push
imul
fiaddl
xchg
scas
mov
push
xchg
cmpb
xchg
push
and
inc
add
pop
les
imul
js
pushf
sbb
adc
inc
out
mov
add
push
pusha
pop
insl
cmpsl
out
mov
shll
cli
fidivl
jmp
add
jge
xor
jb
mov
les
lods
enter
scas
mov
fs
pop
jle
dec
mov
xor
in
and
xor
addl
mov
stos
ficomps
cltd
and
pop
pop
add
sub
and
out
loop
or
call
cmp
lods
out
stos
mov
scas
or
xchg
push
add
ret
inc
les
mov
mov
cli
dec
xor
sub
lea
test
mov
ficoms
push
mov
or
push
leave
ja
pusha
mov
sub
pushf
cmp
rclb
dec
in
cmp
test
jne
outsb
cmp
push
fs
xor
inc
dec
xchg
push
sub
adc
adc
test
xor
pusha
jno
rcr
mov
div
add
cltd
das
mov
inc
aam
or
into
push
push
mov
lods
mov
mov
add
mov
mov
and
adc
add
test
pop
jl
cli
fmulp
sarl
cwtl
lcall
aad
fs
cmp
mov
pop
mov
jb
cmpsb
or
add
hlt
sbb
iret
out
fmull
mov
lret
lahf
add
xor
sub
repnz
dec
jge
mov
mov
dec
or
mov
pop
and
negb
ja
fldt
mov
adc
push
imul
inc
inc
or
add
pop
push
es
push
sti
loop
nop
xor
orb
pushf
lcall
and
cmpsl
adc
daa
ret
lods
mov
inc
aad
les
and
xchg
in
push
jns
push
addr16
out
adc
test
outsb
xor
jge
xor
pop
aad
xor
jno
or
cli
cmp
sahf
mov
ja
call
inc
jge
insb
out
xchg
mov
mov
out
les
and
mov
stc
rcrb
mov
xchg
mov
lds
scas
push
mov
push
ljmp
mov
stos
adc
adc
out
test
xchg
mov
cmp
lods
cmpsb
addr16
push
loop
pop
repz
icebp
or
pop
mov
fidivs
mov
pop
xor
fiaddl
sub
out
adc
outsl
pop
jge
loopne
fs
ret
pop
in
mov
stos
mov
pop
lret
stos
fsubrp
dec
cmpsl
in
pop
int3
pop
gs
jp
in
shll
lods
pop
gs
mov
stos
jecxz
xlat
dec
mov
sub
iret
bound
xor
loopne
es
and
frstor
lahf
bound
add
add
cmp
sub
clc
jnp
stos
lods
ja
add
fisubl
in
test
add
add
mov
fildll
dec
dec
xchg
mov
jb
sub
mov
pop
jmp
xor
add
xlat
lods
xchg
scas
or
push
dec
ret
push
dec
cs
dec
xor
ljmp
clc
cmpsb
jbe
mov
cmpsb
dec
mov
aad
stos
add
testl
insl
shll
push
or
insl
stc
sahf
rcr
jns
clc
sbb
inc
aad
mov
js
mov
inc
stos
loop
pop
push
pusha
mov
push
mov
mov
aaa
push
divl
rcrl
lret
inc
fadd
out
arpl
lret
push
push
add
adc
imul
xchg
lret
xor
xchg
push
xlat
jns
call
int
sbb
mov
cmp
mov
mov
insl
outsl
fimull
xchg
in
in
sub
dec
leave
and
test
dec
mov
mov
xchg
jp
and
arpl
or
push
or
xor
jne
cmp
sbb
pushf
repnz
cld
gs
mov
mov
cwtl
shr
scas
lds
sbb
sarl
and
aas
cmovo
mov
xchg
and
in
es
lock
idiv
stos
xor
jecxz
add
xor
int3
test
or
or
mov
mov
movsl
fidivs
cwtl
inc
push
popf
repz
push
out
movsl
push
decb
push
push
ret
push
outsl
mov
and
adc
jmp
add
int3
out
cmpsb
cmp
add
out
inc
gs
and
adc
push
int3
xchg
pop
and
sub
pop
aad
pop
notb
mov
mov
jg
xor
shll
mov
imul
pop
mov
mov
ret
jp
mov
sub
xor
shlb
jns
mov
jne
out
push
cwtl
cmpsb
mov
outsl
int
dec
xchg
jg
test
pushf
adc
mov
mov
dec
lret
add
pushf
pushf
mov
mov
in
xchg
jno
imul
rcrb
mov
lods
add
and
mov
icebp
xlat
rcrb
cwtl
jnp
stc
imul
rolb
jbe
lahf
inc
hlt
push
js
mov
or
sahf
cltd
xchg
loope
dec
xchg
add
push
mov
incb
push
xor
and
jae
xor
cmpsl
and
jecxz
mov
adc
jg
es
dec
push
sub
jp
inc
xlat
into
cwtl
push
push
mov
mov
fisubl
add
cwtl
cld
jb
jge
and
sub
push
mov
mov
cmp
mov
add
xchg
mov
jp
cld
fsubs
fsubs
sub
lea
inc
xchg
shll
push
xchg
sbb
leave
rcl
cmp
adc
sbb
cmpsl
xor
hlt
mov
xchg
and
stc
push
dec
and
hlt
lcall
loop
cmp
and
repz
jl
xchg
stos
fisttpll
rcll
in
mov
push
ss
pop
lret
sbb
pop
adc
cld
mov
adc
ss
sub
mov
insl
int
data16
pop
cld
pop
adc
pop
pop
ds
rcll
jae
and
cmc
nop
and
inc
imul
dec
cmp
lock
xor
pop
rcrl
jmp
dec
xor
out
or
cmp
in
inc
jle
sub
repnz
addb
push
insl
xor
int
repz
jnp
fsubs
ja
pop
imul
inc
add
cmc
test
shrl
iret
lret
lret
outsb
add
mov
movsl
and
es
int3
adcl
xchg
fimuls
mov
cltd
inc
out
dec
push
add
dec
and
movsl
add
hlt
inc
mov
jl
push
stos
mov
push
cmp
xor
mov
sbb
and
jmp
jecxz
mov
test
ret
cmc
jmp
xor
xchg
es
push
pop
cs
add
xlat
hlt
mov
mov
movsb
sbb
subb
xchg
filds
and
cs
je
ljmp
les
add
fsqrt
mov
jns
sbbl
fisubrl
mov
daa
test
push
lahf
cmp
jne
in
xor
sarl
fildll
mov
xor
xor
jb
fadds
jne
das
add
and
out
push
scas
mov
movsb
mov
push
mov
scas
ret
mov
inc
cmp
movsb
stc
pusha
or
fistpll
js
add
mov
fs
ret
jno
mov
mov
fcmovnu
sbb
dec
pop
lret
push
sbb
or
jmp
out
jbe
out
xchg
icebp
push
movsl
clc
es
add
mov
pusha
hlt
popa
idivl
bound
mov
aad
mov
sti
and
jl
in
adc
inc
insb
call
pop
push
xlat
sbb
add
adc
inc
jl
push
hlt
push
fsubr
mov
sti
stos
sub
add
xchg
or
rol
inc
mov
roll
add
in
lret
pop
jno
ficoms
xor
mov
imul
jae
xchg
in
sub
aaa
jle
inc
push
xchg
and
in
cmpsb
pop
fmuls
ret
aad
aaa
test
jne
cmp
xchg
lea
dec
xor
jmp
xchg
adc
enter
mov
sbb
idivl
imul
sahf
mov
cmc
dec
cmp
and
test
pop
cltd
adc
mov
sahf
xor
insb
mov
cmpb
and
pop
fmul
lcall
jp
fmul
cmp
jbe
mov
cmp
loopne
mov
sarl
pusha
nop
or
or
hlt
push
pop
pusha
push
mov
in
das
xor
xorb
xor
cld
pushf
pop
data16
jp,pn
addl
int3
test
mov
or
sbb
lcall
iret
mov
stos
arpl
mov
mov
mov
into
mov
dec
jg
push
xor
mov
test
push
scas
add
cmp
loop
imul
cmp
add
mov
lcall
lea
stos
jp
xlat
js
xlat
aam
mov
mov
inc
test
les
and
inc
jecxz
fwait
jge
pusha
shrb
inc
sarb
add
pop
push
je
jge
and
call
jmp
xchg
stos
pop
gs
in
jbe
and
xor
mov
sub
push
pushf
popf
push
or
stos
mov
ret
sbb
sub
decb
movsb
popa
xchg
sbbb
cs
lods
cmp
xlat
imul
pop
into
sbb
xor
popa
fwait
out
adc
xor
push
mov
mov
into
in
dec
jo
iret
or
or
test
push
adc
cmpb
pop
test
ss
push
xchg
repz
pop
xor
push
xchg
cli
stc
sbb
divl
mov
lds
call
cmp
inc
aaa
idivb
jp
out
sub
ret
jbe
iret
in
jg
insb
add
icebp
mov
dec
data16
mov
orb
mov
ret
inc
add
mov
leave
out
lods
add
sahf
push
cld
jo
xor
xlat
jae
daa
insb
out
ljmp
test
or
shr
mov
movsl
sub
pusha
or
outsl
or
dec
mov
sbb
jle
ja
inc
out
adc
fnstenv
add
xchg
push
ss
ficompl
or
out
or
sahf
cmpb
arpl
xorl
daa
cmp
fidivrl
add
out
daa
sbb
fiadds
sahf
lock
mov
push
inc
jno
sub
shrb
insl
outsl
cli
sub
aaa
dec
test
push
daa
int3
movsl
lret
repnz
out
ljmp
jae
xor
pop
inc
ja
jae
adc
outsl
add
adc
mov
cs
bnd
jmp
dec
or
push
push
imul
jle
cmp
decb
ret
rorb
testb
mov
sub
xor
cld
jecxz
mov
add
sarb
clc
or
jbe
outsl
adc
ret
out
cmp
insb
jecxz
dec
xchg
adc
call
shll
dec
dec
shl
add
rclb
out
mov
sub
ret
testl
adc
or
adc
movsb
jbe
xor
dec
mov
dec
cwtl
adc
mov
inc
sub
inc
stos
cmp
add
mov
jns
mov
nop
cmpb
xor
test
push
shl
data16
and
pop
jle
inc
inc
mov
lea
popl
faddl
loop
xlat
jl
mov
pop
lods
gs
inc
xor
dec
xorb
cmp
xchg
xor
stos
push
mov
mov
xchg
dec
xchg
cmc
push
addr16
cld
add
in
jp
in
pop
push
mov
sbb
sbb
xchg
inc
sub
dec
imul
fdivr
push
pop
mov
inc
jecxz
sbb
ficoml
stos
aaa
mov
sti
push
sbb
cmp
ljmp
ljmp
mov
rcrl
pop
push
shrl
lret
cli
cli
pop
subb
cmc
and
movsl
or
inc
stos
rorb
inc
cltd
shll
addr16
and
inc
add
mov
xchg
fcoml
iret
xchg
enter
rcll
pop
mov
push
cmc
outsl
mov
scas
inc
fstpt
bound
stos
pop
test
aas
mov
cli
mov
les
xchg
sbb
std
mov
cld
adcb
iret
adc
sarb
stos
repnz
pusha
loope
aam
push
in
pop
pop
push
insb
add
dec
cmp
negb
in
or
inc
pop
test
fs
inc
fcmovne
dec
mov
and
scas
cmp
outsl
out
inc
je
pusha
jo
and
push
leave
lret
popl
cmpsl
mov
and
popa
dec
jb
aam
test
inc
dec
fisubrl
and
and
iret
dec
cmp
dec
mov
or
clc
cmc
add
mov
decb
lods
cld
fstp
jp
test
incl
add
lods
jp
mov
mov
mov
jle
jp
mov
xor
es
mov
dec
mov
mov
push
rorl
scas
mov
incb
mov
loop
sbb
jge
pop
jl
mov
enter
xchg
dec
rcrb
hlt
xor
int
and
lea
movsb
push
stos
lea
je
jmp
mov
div
dec
pushf
rcrl
mov
cmp
jl
rcrl
jb
pop
rcr
in
rcrb
cmp
jge
cmp
fcmovu
or
xchg
sbb
and
mov
pop
mov
jb
pushf
std
mov
and
sti
repnz
mov
pop
or
mov
mov
sub
cmp
call
rcr
dec
xchg
pop
pop
sub
cmp
xchg
lea
dec
cmp
ret
xchg
cwtl
sub
insl
xor
lock
xchg
mov
ret
orl
jo
add
pop
mov
and
adc
test
fisubrs
or
clc
out
or
aad
xchg
test
mov
dec
sub
sub
sub
fsubs
fwait
inc
inc
jmp
mov
sbb
repnz
mul
cmp
push
ds
nop
sub
in
jns
int
xor
popl
dec
fistl
pop
xlat
xchg
pop
test
adc
ds
lahf
scas
push
push
add
shrl
pop
add
aaa
mov
sub
push
mov
mov
mov
repnz
jecxz
adc
adc
push
inc
inc
and
testl
xchg
push
and
inc
and
jne
cmpsl
mov
ljmp
into
inc
in
mov
loope
add
and
mov
jp
pop
mov
sahf
push
jecxz
jns
gs
inc
or
insl
inc
fists
out
pusha
xor
push
xor
enter
xchg
in
or
xchg
sti
test
and
repnz
movsl
jnp
dec
into
mov
out
arpl
mov
stc
mov
cmpsb
jg
lock
sbb
inc
ljmp
xor
push
inc
cmp
jb
adc
sahf
or
xchg
gs
pusha
andb
push
dec
xchg
stos
xor
jno
mov
and
in
fstpt
dec
repnz
rorl
mov
pop
add
ficomps
es
dec
add
pop
pop
mov
pop
cld
mov
outsl
add
in
jae
sbb
bnd
lods
lea
into
jnp
jg
fwait
mov
fistpl
pop
or
fwait
lds
push
mov
punpckhwd
ffreep
pop
jl
scas
sbb
lret
mov
fcmovnbe
lret
jnp
sbb
push
or
ja
aam
pop
xchg
lcall
ss
xchg
test
lods
js
mov
mov
lret
xchg
loope
push
xor
xor
or
insl
and
addr16
repz
and
xor
mov
mov
cmpsl
mov
outsl
xchg
sub
bound
lods
stc
add
jbe
arpl
loop
rorb
inc
call
pop
aad
js
filds
outsl
lods
cwtl
fstps
push
lock
enter
xchg
mov
enter
lret
mov
pop
loope
les
incl
adc
fucomp
stos
inc
add
scas
add
push
push
inc
mov
mov
outsb
jo
pop
das
xlat
or
xchg
jo
inc
xor
sub
xlat
arpl
pop
js
sahf
mov
test
adc
mov
lock
pushf
stos
xor
fs
rolb
cltd
mov
ret
xor
sti
jmp
mov
and
adc
cmpsb
mov
gs
lods
cld
xor
or
push
aad
pop
xor
xlat
lock
fadds
mov
mov
sub
fwait
loopne
jb
pop
push
jbe
add
gs
and
lods
roll
test
ds
mov
jmp
mov
stc
lret
ljmp
lahf
out
inc
cmp
aaa
pop
mov
jg
and
aas
mov
mov
je
popf
pop
lea
stos
pop
ja
xorb
inc
jne
pop
jecxz
jae
pop
int3
scas
lldt
and
pop
cwtl
lods
or
clc
xchg
lods
rorl
xor
dec
fwait
or
loop
mov
test
insl
and
jge
mov
addr16
lods
sub
mov
push
or
xor
dec
enter
iret
mov
xchg
xor
add
lret
or
add
lea
loopne
dec
stos
xorl
add
inc
jl
or
mov
dec
add
icebp
pop
icebp
cmp
or
sbb
push
mov
dec
test
add
movsb
mov
push
int3
mov
pop
or
pop
movb
jbe
test
jb
sub
ja
jmp
pop
mov
sbb
lcall
fsubs
sub
cmp
mov
and
fisubl
and
dec
mov
inc
cmp
outsb
jmp
adc
test
sub
jle
mov
scas
add
xchg
andl
imul
xchg
mov
add
cmp
cmp
andl
lret
push
addb
pop
mov
ret
mov
dec
repz
dec
aaa
ljmp
pop
push
or
add
xchg
push
pop
nop
sub
xor
nop
lods
xchg
dec
mov
xor
sub
cmp
mov
and
scas
out
and
aam
in
mov
js
stc
jbe
loope
sbb
adc
mov
pop
mul
pop
shll
shll
iret
cltd
fsubp
nop
inc
adc
popa
rol
sti
xchg
dec
mov
in
jmp
sub
sbb
inc
or
xlat
cli
adc
pop
mov
nop
fmuls
stos
jae
cmp
cmp
and
jp
sub
pusha
jge
test
sub
das
or
ljmp
adc
aad
in
fisubrs
cmp
mov
movsb
aad
lahf
pop
mov
adc
cmp
lods
call
cmp
mov
mov
out
es
push
pop
adc
inc
sbb
or
or
cs
pusha
lahf
fcmovnu
dec
mov
mov
imul
sub
ds
jp
std
jbe
aas
clc
js
lahf
in
adc
xor
fimull
in
mov
pushf
shrb
outsb
sbb
popl
inc
popa
jg
xlat
imul
dec
cmp
jge
or
jmp
mov
call
pop
dec
or
call
mov
and
aam
push
and
pop
test
cltd
stos
and
cltd
stos
fidivl
jge
inc
xchg
dec
jns
jp
pop
lahf
adc
jecxz
adc
or
lret
fcoml
jl
mov
pushf
mov
mov
orl
xchg
mov
test
in
insb
fstpl
mov
outsl
mov
lahf
mov
cltd
test
push
jne
xor
bnd
xor
mov
ret
jns
sarb
jbe
xchg
fldenv
mov
dec
dec
inc
mov
lahf
or
lea
dec
jmp
stc
pop
mov
cwtl
out
daa
mov
aaa
push
push
cmc
dec
ss
sub
push
mov
stos
jp
gs
jne
mov
call
aad
fcom
sub
data16
jge
sub
jmp
into
mull
push
push
pmovmskb
je
lock
andl
jge
aam
dec
jmp
dec
mov
pop
inc
iret
sbb
and
push
mull
cld
loopne
test
xor
gs
jp
and
mov
adc
and
out
fbstp
xchg
jnp
mov
add
dec
mov
fsts
or
ficomps
push
dec
cmp
or
mov
push
es
push
dec
cmp
mov
mov
int3
mov
add
ss
lret
or
add
sti
stos
mov
adc
out
leave
xor
xor
pop
rolb
add
sbb
pop
inc
mov
jns
ret
shlb
sbb
scas
inc
je
arpl
xor
mov
es
inc
ss
dec
jmp
cwtl
stc
jge
xchg
enter
mov
ljmp
call
out
aaa
mov
dec
out
in
ret
test
loopne
pop
shlb
push
outsb
inc
push
fadds
test
push
pop
push
cmp
out
and
cli
mov
push
and
mov
push
fcomps
ds
xchg
std
jb
fisubrs
inc
cmp
pop
div
loop
pop
fisttpl
fbld
test
jmp
test
or
sub
loop
clc
pop
push
or
mov
imul
cltd
test
add
dec
repz
cmc
scas
repz
jno
push
int3
pop
fldenv
arpl
pusha
gs
add
sub
sbb
cmpsb
jl
subb
fdiv
stos
jmp
and
aaa
inc
pusha
or
mov
loope
or
insl
adc
push
lods
fcompl
mov
das
and
cmp
loop
inc
fistpll
scas
fiadds
xor
cmp
subb
fcmovbe
adc
pop
and
bound
xchg
mov
lock
repz
cld
lock
out
push
sub
mov
push
fsts
cld
sbb
jo
sbb
in
arpl
pop
cli
pop
lods
cmp
cmp
adc
js
add
inc
pop
mov
aaa
push
testl
xchg
stos
and
pop
cmc
loop
jle
roll
andl
sbb
int3
push
outsb
adc
cld
pop
insl
popa
sub
cmpsl
imull
stc
jae
setnp
into
rcll
into
call
add
mov
xchg
mov
xchg
adc
ret
xor
pop
xchg
roll
jbe
push
and
fcoms
adc
sbb
imul
shlb
dec
cmp
scas
mov
out
pop
lods
call
aad
push
mov
or
pop
xchg
stc
pop
xchg
jp
je
push
pop
cmp
fs
cmc
loope
lahf
pop
mov
dec
dec
mov
sbb
loopne
flds
outsl
loopne
inc
daa
adc
in
in
imul
std
cli
xor
ljmp
fstpl
leave
popf
jnp
inc
push
mov
iret
rol
jp
jne
addr16
sbb
sar
outsb
cs
cmpb
mov
mov
jg
pushf
call
ss
pop
xchg
xor
jmp
adc
mov
fimuls
out
fcomps
es
iret
lock
movb
mov
ds
dec
add
inc
fsub
sub
lahf
xchg
pop
xchg
xchg
movsl
pop
cmp
hlt
int
stos
or
pop
in
mov
imul
pop
xchg
outsw
pop
mov
cltd
mov
lods
repz
jmp
addl
arpl
pop
cmp
loopne
cmp
push
jmp
mov
std
shll
loop
push
int
arpl
pop
push
fldenv
mov
mov
es
mov
sub
sbb
jbe
sub
rorb
push
imul
mov
aad
add
outsl
xchg
clc
out
mov
lret
das
fisttpl
xor
rcr
aam
rcr
jl
call
popf
lea
sbb
aaa
cmc
iret
int
inc
arpl
movsb
sbb
pushf
shl
fisubl
mov
push
out
je
movsb
repz
movl
inc
xor
mov
jmp
mov
pop
add
repz
jno
xchg
std
cmpsl
xor
insb
fs
adc
les
mov
std
fsubs
xchg
repz
pop
inc
jno
test
jo
loope
dec
shlb
test
xlat
loopne
fildl
lret
pop
aaa
mov
ljmp
into
pop
inc
xchg
sub
cmp
shrl
or
fistpl
stc
mov
cmpsl
mov
and
out
in
dec
fstl
cltd
pop
insl
fsubrl
cld
push
shll
mov
jmp
mov
cwtl
outsl
aad
imul
fistps
jmp
out
loop
shlb
test
or
jns
mov
jl
ljmp
mov
adc
mov
pop
mov
in
leave
fsubs
shl
bound
outsl
fistpl
test
jecxz
and
pop
xor
lret
jp
jno
lret
fnsave
sbb
inc
mov
loop
aaa
push
jb
add
mov
stos
int
scas
mov
cs
loopne
fdivl
test
add
fstpt
mov
hlt
and
or
ss
pushf
xor
cltd
lds
mov
stc
mov
mov
leave
iret
and
jg
mov
pusha
dec
fldenv
or
mov
or
inc
scas
xchg
hlt
popa
shlb
outsl
push
or
popl
das
cmp
xor
mov
xchg
aad
mov
inc
ss
jmp
std
jo
cmp
into
mov
mov
aas
push
push
imul
add
xchg
lds
das
sbb
mov
or
or
out
pop
lods
lock
cld
or
xchg
out
es
pusha
sub
pop
mov
outsl
xchg
inc
mov
pop
or
mov
ret
jne
lock
add
xchg
sub
jae
ret
mov
fisubrl
dec
push
test
fisubs
add
inc
cmc
stos
or
jecxz
push
stos
adc
pop
test
inc
ss
insb
and
ficompl
fmul
push
push
jg
fimuls
icebp
add
pop
inc
jp
cmp
and
xchg
mov
cmp
pop
push
ljmp
flds
and
dec
inc
aad
cmp
cmpl
ds
ret
or
push
lock
jge
icebp
pop
and
rcl
sub
mov
cmp
adc
test
movsb
push
test
rcrb
jmp
cmpsb
xchg
mov
aam
cld
adc
shlb
ret
sbb
in
xchg
sbb
mov
cmpsl
js
mov
xor
cmp
or
test
dec
adc
push
pushf
adc
mov
clc
popa
sbb
rcrl
fisubs
setge
adc
testl
push
push
addb
mov
adc
add
aad
mov
cmpsl
xchg
xchg
sub
fwait
push
pop
cli
fcompl
mov
sub
xchg
xchg
pmaxsw
repnz
scas
fdiv
dec
cmp
sub
out
pop
pop
jbe
push
divb
lock
out
cmpsb
lock
das
xor
outsb
dec
xor
mov
mov
repz
cmp
enter
cmp
clc
outsb
mov
aas
sbb
repnz
and
imul
imul
jb
xor
xchg
aaa
mov
dec
or
mov
pop
loope
pusha
mov
xchg
es
pop
leave
shlb
inc
pushf
scas
jge
scas
clc
mov
xchg
les
xor
ss
das
mov
mov
cmp
and
mov
mov
xlat
call
push
imul
xchg
pusha
and
cmp
add
push
jp
jb
xor
enter
fildll
push
das
pop
adcl
clc
add
rorl
add
cmp
lret
cmpsl
inc
cs
inc
js
iret
cmp
xor
cmpsb
sub
int
lods
rcrl
pop
cmp
inc
ret
mov
test
jecxz
push
cld
or
lret
test
movsb
xor
out
icebp
mov
cmc
push
pop
add
flds
pop
xor
xchg
push
lret
dec
into
xchg
xlat
call
mov
aad
sub
add
aam
pop
lret
mov
push
fstpl
stos
adc
and
jb
lea
pop
insl
lock
test
daa
std
jae
enter
dec
and
ds
jmp
hlt
pop
adc
bound
lods
or
inc
xchg
dec
push
loopne
repz
sti
out
mov
adc
jg
insl
mov
push
nop
cmp
jnp
xor
or
sub
lock
push
pusha
scas
scas
out
shll
xor
xlat
out
or
sub
xor
sbb
push
test
pop
jns
stc
lcall
pop
iret
out
std
push
ljmp
mov
mov
add
dec
push
sbb
xlat
push
clc
adc
xor
bound
cmp
sbbl
push
ljmp
mov
into
stos
addb
mov
orb
jg
fucomi
inc
adc
sbb
cmovbe
xor
dec
mov
add
adcb
dec
pop
test
jns
inc
mov
loop
dec
andb
js
push
mov
cmc
xorb
mov
popa
inc
fld
cltd
iret
lea
inc
fcmovnbe
pop
rolb
jne
je
in
cmp
pop
mov
inc
inc
sbb
data16
clc
rorb
xor
stc
frstor
sahf
or
imul
cmpsl
or
imul
hlt
jl
ficompl
dec
pop
or
jo
mov
adc
xorb
or
xchg
sbb
pop
mov
cmc
js
jb
xchg
jbe
mov
stc
push
xor
and
lock
mov
cmpsl
sahf
sbb
add
adc
mov
fdivrl
shr
mov
in
out
mov
add
adc
bound
cmp
cmc
ljmp
push
imul
lock
sahf
into
cltd
daa
mov
xor
xchg
ljmp
xchg
dec
mov
pop
jge
rclb
sahf
stc
sti
mov
pop
xorb
div
xor
or
fisubrs
push
mov
ror
jae
sbb
popa
sub
push
sub
add
lods
inc
push
jb
lock
and
xchg
aam
out
dec
sahf
fcomps
into
and
test
sar
lret
enter
xor
sub
ss
ficomps
mov
push
push
std
cld
sub
ret
mov
mov
add
shrb
sbb
pop
mov
mov
xor
push
and
xchg
repz
testl
aaa
sar
push
cltd
orb
mov
jl
jnp
pop
into
and
popa
pop
inc
mov
dec
adc
aad
push
jb
fsubrl
jg
add
add
lahf
cmc
pop
sub
cltd
daa
rcrl
pop
jo
int
mov
sbb
xor
jecxz
ret
daa
or
daa
icebp
leave
lods
push
mov
pop
insl
mov
daa
add
and
jnp
mov
stos
push
sbb
add
mov
add
jp
cmpb
mov
adc
mov
mov
pushf
outsl
cld
unpcklps
inc
out
push
dec
out
test
daa
into
mov
movb
les
jp
int
xor
int3
jnp
jbe
dec
icebp
adc
adc
mov
mov
testb
and
ret
ret
out
in
adc
fwait
cmp
cs
enter
mov
jne
xchg
and
xchg
sub
lds
xor
pop
inc
inc
lret
aas
sbb
sbb
adc
repz
call
lds
xchg
add
aad
add
frstpm(287
je
clc
loopne
les
stos
sbb
scas
lret
out
push
shr
int
jecxz
ljmp
cmc
cmp
fldenv
stos
inc
repz
sbb
adc
hlt
test
pop
inc
mov
pushf
add
mov
test
sbb
push
add
sbb
push
les
out
cmp
leave
xor
enter
push
in
fisttps
in
ss
aam
cmc
shl
scas
jne
mov
inc
divl
cmpsl
mov
mov
pushl
lods
mov
pop
mov
test
mov
jno
push
jmp
push
mov
inc
incb
cs
and
adc
rcrl
dec
mov
dec
mov
stos
push
pop
mov
sub
xchg
push
call
aaa
repz
sbb
sahf
fisttpl
cltd
mov
cmp
push
xchg
subl
testl
scas
lods
hlt
mov
rorb
dec
adc
test
and
dec
add
pop
orb
pusha
sub
popa
ds
adc
lods
push
in
sbb
add
in
or
push
xchg
dec
fwait
sbb
xor
push
adc
data16
jae
mov
std
out
fildl
mov
inc
xchg
add
and
ret
inc
inc
sbb
or
lods
mov
scas
cmp
adc
jmp
pop
or
iret
jae
xor
pop
fsub
sub
jp
mov
aas
xchg
jbe
movsl
xchg
dec
rolb
fdivrl
addr16
in
lahf
std
imul
jmp
lods
movsb
or
jmp
or
shrl
cmp
imul
xchg
mov
shl
xchg
sbb
add
dec
pop
fstpl
and
clc
sub
and
push
cld
jl
jnp
imul
cltd
sahf
sbbb
fists
loope
xor
or
adc
shr
or
aad
rcr
je
loop
scas
js
inc
xchg
push
in
adc
cmp
or
sbb
jo
lods
jb
int3
fisttps
dec
xor
jp
insl
cmp
gs
iret
mov
inc
gs
jg
idivl
dec
or
xchg
xchg
xchg
sbb
pop
pop
mov
out
push
push
pop
popa
stos
test
mov
sbb
lret
xor
mov
aas
cmp
mov
mov
sub
dec
mov
push
ljmp
fcoms
lahf
pop
mov
xchg
add
push
shlb
adc
stos
icebp
dec
cs
and
out
stos
fildl
jp
negl
fidivl
arpl
cwtl
xchg
cwtl
add
stos
cmpsb
mov
xorb
hlt
mov
fwait
in
aaa
stos
fisubl
mov
leave
and
loopne
xor
leave
scas
call
cmc
jecxz
sti
jge
and
jecxz
lret
sti
pop
fldenv
mov
jecxz
pushf
mov
loopne
xor
daa
adc
ss
xchg
xchg
inc
pop
sbb
add
sbb
stos
scas
arpl
aaa
xor
lea
mov
sbb
and
jle
jae
mov
mov
inc
roll
iret
sub
inc
inc
xor
add
mov
push
cwtl
xchg
test
das
cld
dec
cwtl
or
sub
mov
jge
jmp
mov
std
int
mov
ljmp
cs
or
inc
in
cmp
negl
push
loop
mov
test
cmp
jnp
repnz
movsl
fildl
pop
add
dec
jge
xor
outsl
aam
sub
push
shll
xor
inc
loope
jns
ret
sub
insl
jecxz
notb
or
in
std
inc
add
std
jne
mov
push
fcmovnbe
insb
mov
test
inc
sahf
sub
shll
inc
test
mov
dec
dec
mov
lock
bound
xor
fbld
cmc
pop
mov
dec
lret
cmp
jbe
cwtl
mov
mov
jnp
leave
sbb
sub
es
shll
stos
pop
data16
or
rolb
negl
arpl
and
rcll
inc
lea
mov
les
dec
dec
das
insl
sbb
js
jae
sbb
xchg
mov
in
adc
testb
inc
pop
mov
mov
xchg
testl
fs
jno
cs
mov
add
dec
sbb
adc
repnz
das
insb
inc
int3
adc
ret
jmp
scas
add
push
test
jo
es
fnstsw
in
fwait
pop
movsl
pop
adc
xchg
popl
test
mov
iret
aaa
ret
outsb
imul
xor
inc
jns
add
sub
sbb
cmpsl
fisubrl
push
adc
subl
mov
aad
mov
fimull
dec
xchg
scas
dec
jnp
aaa
icebp
insb
or
aam
out
enter
add
lret
push
lock
std
into
mov
cld
mov
xchg
jle
popa
jg
add
add
or
rcrl
mov
mov
frstor
jecxz
ds
mov
imul
cmp
mov
xor
mov
stos
xchg
xor
das
loop
cltd
arpl
movsb
rolb
mov
aad
ja
and
or
dec
cmp
mov
xor
insl
mov
scas
fwait
aaa
cs
das
inc
dec
insb
mov
orl
mov
mov
cmpsl
push
pop
cmp
jecxz
inc
pusha
xchg
repz
cld
dec
imul
add
enter
inc
bound
dec
jle
movsb
push
mov
or
int3
mov
cld
lods
inc
mov
fsubr
test
add
in
inc
lcall
or
pop
adc
lds
push
or
cmp
mov
pusha
in
cmp
sbb
roll
lock
cli
and
inc
lcall
test
inc
jo
rcr
ds
gs
cmp
test
jne
jp
dec
and
loope
and
test
mov
mov
or
jo
and
sub
bound
push
mov
fidivs
in
xchg
out
mov
and
inc
fisttps
add
stos
or
add
pop
sub
mov
aas
inc
lods
jb
pop
leave
fidivrs
mov
ss
mov
repz
out
movsb
cli
mov
sti
lds
mov
jae
or
mov
push
jecxz
dec
xor
ss
sbb
pusha
dec
mov
iret
iret
out
in
push
aam
push
out
sub
xchg
mov
cli
jns
sar
shrb
pop
push
mov
pop
mov
push
jg
push
jbe
mov
sbb
mov
jb
pusha
mov
add
repnz
xchg
mov
xchg
mov
adc
dec
out
repz
fistl
std
fwait
cmp
or
xor
negb
mov
mov
rorb
adc
enter
dec
leave
cmp
sub
out
popa
gs
inc
push
adc
push
xchg
dec
imul
rolb
movsb
jbe
pop
cmp
in
xor
outsl
inc
and
daa
sti
mov
cmp
sub
push
scas
jnp
into
xchg
bound
lret
pop
mov
jmp
fbld
out
cmpsb
jecxz
cli
insl
hlt
jp
insl
push
and
ja
cmpsl
mov
iret
adc
push
outsb
mov
ljmp
leave
lret
andb
in
sti
insl
mov
test
xchg
cmp
cmc
adc
fcmovnu
lods
dec
insl
les
pop
jns
insl
cmp
or
cli
pusha
das
aas
mov
in
loopne
dec
or
pop
int
aaa
xchg
mov
xchg
popl
push
inc
add
lahf
iret
arpl
sub
mov
adc
rcrb
push
data16
lds
outsb
push
push
addr16
orb
mov
and
mov
arpl
adc
in
popf
push
or
dec
cmp
imul
test
clc
mov
mov
xor
repz
loopne
ret
outsb
push
adc
mov
jno
es
outsb
enter
addl
mov
lcall
jne
movsb
lcall
rcrb
test
ret
sub
sti
sbb
cmpsb
inc
sub
jb
lret
adc
andb
jge
push
test
stos
lahf
xchg
int3
sti
repnz
or
mov
bound
in
add
xchg
jecxz
repnz
ret
sbb
je
mov
or
adc
xchg
repz
mov
clc
imul
mov
ret
pusha
jge
pushf
add
push
js
mov
outsl
das
cli
or
add
add
push
jns
sub
pop
icebp
push
jb
fisttps
mov
pop
push
mov
push
les
loopne
hlt
inc
shrb
shlb
sahf
out
mov
xchg
fwait
insl
shll
ret
dec
icebp
repnz
jns
dec
xchg
lds
push
cld
xchg
in
sub
inc
ret
test
les
pusha
loopne
arpl
lds
push
fimull
out
lret
dec
mov
add
sahf
in
or
xlat
add
pop
add
data16
push
sbb
js
jns
cmp
ljmp
fcmove
pop
and
roll
cmp
and
and
fdivr
test
xchg
inc
push
dec
xchg
mov
mov
xchg
stos
fsubl
jle
sub
gs
imul
xchg
out
sbb
mov
je,pt
add
xchg
push
mov
dec
lods
pusha
jnp
mov
mov
addr16
xlat
sbb
cmp
arpl
lods
outsl
sbb
adc
jbe
push
into
xor
nop
dec
push
mov
fdivrl
xchg
stos
jecxz
adc
sub
dec
fdivl
lods
add
andl
test
cli
lcall
jecxz
std
or
enter
adc
mov
rorl
xchg
int3
gs
xchg
das
xor
lods
xchg
flds
mov
dec
ror
sub
adc
in
push
test
roll
jbe
xchg
sub
push
xchg
lret
push
push
jno
sub
cmp
sub
pop
push
mov
adc
or
cltd
mov
mov
int
jne
loopne
add
mov
ds
daa
lock
xor
mov
cmp
rcr
out
ficomps
inc
dec
cmp
fdiv
je
popf
and
sar
dec
popf
fistpl
add
xchg
fcoml
push
mov
loope
aaa
push
push
adc
je
sub
in
fstpl
dec
je
mov
and
repz
or
dec
cmp
dec
adc
or
jne
mov
and
adc
fmul
and
push
mov
addb
jp
dec
mul
pop
ror
mov
into
push
loope
adc
ficoms
xor
enter
ds
les
pop
mov
js
inc
sub
popf
xchg
ds
lea
mov
aas
out
fisubs
lcall
mov
ds
fcoms
enter
pop
and
add
call
xlat
popf
push
add
inc
push
jmp
add
orb
scas
cltd
cmc
ficoms
mov
sub
xchg
iret
or
es
mov
add
mov
sahf
fxch
imul
pop
and
inc
insl
cmp
mov
in
pusha
shrl
jle
icebp
adc
into
or
mov
xchg
adc
dec
in
cli
push
push
mov
dec
sti
push
lods
mov
aam
dec
sub
ds
fadds
add
scas
leave
cmc
mov
mov
lock
or
movsl
inc
sbb
push
sub
or
scas
pop
xor
inc
mov
dec
sbb
clc
movsl
sarl
cld
aas
sbb
xchg
jo
popf
inc
xchg
sbb
leave
sbb
add
stos
faddp
cmpsb
lods
sbb
leave
sarl
add
icebp
loope
dec
arpl
push
ss
ret
pop
cs
cmpsb
inc
mov
inc
negl
cli
inc
imul
shr
andl
adc
adc
adc
pusha
pop
jle
repnz
xor
fdivrl
add
sbb
and
jg
scas
or
movsb
repz
test
cmpl
in
in
pop
imul
repz
xchg
mov
ds
inc
daa
jg
push
aaa
pop
test
clc
cli
jo
cld
loopne
sub
out
and
std
xchg
bound
aad
mov
dec
rcrb
movsb
or
dec
mov
mov
cs
aad
xor
mov
adc
xchg
data16
lahf
or
push
pop
fiadds
pop
scas
in
mov
cmp
repnz
dec
pop
or
idivb
cmp
push
mov
pop
adc
push
shl
jno
xchg
pop
cli
sarl
mov
rcrl
rcrl
cmpsl
adc
add
xor
enter
aaa
mov
aam
loope
sub
sbb
sub
ret
sbb
mov
std
sti
jbe
pop
xchg
sarb
xchg
or
pop
stos
ret
shll
cmp
push
push
push
xchg
stos
int
jo
pop
enter
xchg
shlb
inc
adc
int3
mov
xchg
stos
fidivs
mov
lret
aas
test
in
inc
dec
adc
xchg
and
dec
jno
mov
inc
add
xchg
cmpsl
xor
mov
cmp
inc
sarl
ss
pushf
fs
jge
mov
out
mov
fstl
xlat
add
mov
fsubrl
push
push
dec
lds
push
xor
mov
pop
sbb
loopne
push
aas
push
fidivrl
test
jne
jne
xchg
push
push
movb
insb
das
dec
lea
add
mov
insl
cmp
add
lcall
mov
and
add
jb
dec
sub
push
dec
push
inc
fwait
push
inc
lock
jb
leave
insb
dec
inc
push
andl
sbb
mov
xchg
in
fsts
ja
fst
dec
pop
pop
xchg
push
jg
mov
mov
mov
mov
jae
xorb
addr16
adc
mov
jmp
jecxz
pop
js
push
cmp
out
xor
sti
fisttpll
rcr
into
jp
in
pop
ljmp
jne
dec
mov
pop
int
fbld
mov
lea
jecxz
push
cltd
rorl
push
cmpsl
insl
loope
dec
fwait
jb
lahf
xchg
repnz
leave
std
mov
mov
dec
jne
push
push
dec
lods
mov
cwtl
call
xchg
jmp
mov
xchg
mov
aad
scas
mov
push
xchg
jns
xchg
jo
ja
inc
inc
repz
pop
lods
shlb
lds
loop
fidivl
or
mov
adc
fwait
je
lret
aaa
mov
cmpsl
in
or
mov
mov
test
lret
adc
fidivs
jp
xchg
push
jp
stos
movsl
arpl
nop
nop
popa
jbe
inc
fisubl
adc
lea
fdivrl
cli
or
inc
dec
insb
xchg
in
or
mov
push
and
inc
adc
add
imul
insl
sbb
pop
push
cmp
movsb
lcall
lea
add
add
or
fstpl
das
gs
leave
xlat
lods
push
push
sub
imul
ds
or
jge,pt
jnp
ss
push
xchg
sbb
mov
pop
mov
sbb
jbe
push
pop
dec
pop
repnz
jbe
sub
cmp
mov
add
xor
adc
or
ljmp
rcrl
sub
add
loop
mov
pop
sub
pop
mov
xchg
xor
les
inc
xor
add
ss
addr16
xchg
aas
imul
into
inc
test
aas
jle
rorb
test
push
add
ret
mov
lods
into
test
orb
pop
mov
lea
pop
pop
cmpsl
sbb
cmp
insl
lds
out
xchg
mov
push
lds
cmp
lods
hlt
testb
fcmovu
ret
fistpl
fs
add
xchg
jle
mov
xchg
mov
mov
lcall
out
in
clc
fistpl
adcl
dec
push
cs
lea
adc
mov
mov
movsl
lds
js
mov
ljmp
mov
pop
fwait
enter
dec
dec
mov
shlb
int
xchg
dec
dec
jae
andb
repnz
notb
adc
mov
popa
add
into
jo
xor
pop
fildll
insl
mov
test
adc
loop
sbb
jg
aam
movsb
pushf
sub
dec
mov
xchg
inc
int3
xor
dec
repz
pop
cmp
sahf
repnz
imul
mov
hlt
fwait
movsl
call
pop
fcmove
stos
mov
daa
lcall
loop
daa
inc
xor
sahf
mov
fisubl
lret
cmp
out
sub
or
fcoms
leave
pop
dec
mov
add
loop
cmpsb
push
add
repz
movb
insb
cwtl
cmp
pushf
mov
adcb
push
adc
hlt
dec
rolb
add
lea
in
xchg
mov
out
and
adc
dec
xor
je
imul
movsl
xor
fwait
or
cmp
enter
jbe
inc
adcb
pop
jnp
push
pop
lods
ficoms
call
ljmp
cmc
cmp
jne
mov
pop
lret
int
push
es
cmc
test
fiadds
int3
jp
inc
dec
push
push
xorl
inc
mov
stc
dec
push
push
inc
cmp
mov
int3
das
out
xor
push
mov
pop
pop
data16
add
sti
loope
fisubs
pop
jne
pop
mov
cmp
sub
rorl
mov
pop
lods
xchg
scas
lods
pop
cld
or
stos
push
outsl
jns
addr16
inc
and
xor
or
in
add
pusha
lahf
stos
mov
call
sub
loope
aas
stc
adc
mov
ret
pop
scas
subb
loope
and
adc
xchg
inc
push
jno
lcall
dec
outsb
sbb
xchg
sahf
and
mov
loopne
es
mov
mov
adc
sbb
xchg
loopne
clc
mov
or
movsb
or
jno
sbb
inc
std
jle
add
ljmp
stc
mov
call
mov
aam
inc
jmp
sarb
mov
jbe
repz
ljmp
loop
cli
sbb
mov
sbb
pop
dec
shlb
pop
sub
into
shrl
iret
sbb
and
pushf
mov
pop
lret
imul
popf
mov
loope
nop
shrl
andb
and
aaa
in
sub
cmp
inc
and
cmp
fprem1
mov
dec
and
mov
inc
adc
mov
jbe,pt
jg
aas
push
and
cmp
clc
dec
filds
sbb
push
mov
lods
enter
cmp
insb
arpl
add
inc
sub
jnp
enter
and
loopne
mov
sbb
fwait
inc
cwtl
in
pop
mov
jno
xchg
test
mov
scas
dec
rorb
xchg
xlat
push
inc
push
addl
loope
das
daa
mov
aaa
mov
gs
cmpsb
ret
outsb
out
add
sti
add
push
movsb
jp
cmp
mov
rcr
pop
mov
or
call
mov
dec
cwtl
stos
lcall
pop
jp
push
ss
xchg
add
push
add
mov
jb
subb
jns
lret
int3
scas
jp
xlat
stc
sahf
pop
inc
data16
xor
jb
scas
out
pop
dec
dec
in
jnp
lods
inc
adc
mov
and
mov
aad
stos
xchg
pop
es
ja
inc
fwait
dec
test
das
mov
mov
jp
out
add
leave
scas
mov
shll
sarl
xchg
sti
jge,pn
scas
xor
push
sub
xlat
push
int
les
stos
pop
movsb
ja
pop
lcall
pop
xchg
mov
movsb
test
add
aas
out
sbb
xchg
push
adc
add
stc
and
icebp
xor
xor
popf
and
push
pop
sbb
lahf
push
sub
xchg
mov
sub
jbe
mov
dec
add
jno
dec
or
jo
cmp
cmp
mov
inc
ret
fs
sbb
lcall
fwait
aas
mov
mov
inc
inc
not
or
sub
sub
inc
cmpb
cmp
push
jecxz
cmp
jnp
shlb
hlt
shlb
shrl
mov
push
pop
mov
cmp
jae
inc
ljmp
stos
xchg
icebp
aaa
xchg
and
bound
out
mov
adc
arpl
in
adc
push
movsl
push
repz
popa
or
stos
mov
cmp
cmc
dec
sahf
jne
je
adcb
sbb
xlat
rclb
xchg
rcrl
mov
andb
fcmovnb
int3
mov
sub
fcompl
mov
xchg
jle
mov
aad
fwait
sbb
cmpsb
add
or
xor
stc
addl
pop
fiadds
xor
popf
outsb
scas
out
push
mov
mov
xchg
sti
test
mov
xchg
cmp
das
les
adc
test
cmp
clc
mov
into
mov
pop
ret
mov
neg
jg
mov
mov
clc
xchg
lea
outsb
xchg
mov
cmp
out
lret
adc
movsl
cmpsb
pop
adc
popf
sub
jnp
notl
xor
sbb
inc
lahf
add
mov
lds
pop
outsb
mov
loopne
push
xlat
test
pop
cmp
and
add
mov
dec
mov
hlt
pop
les
lods
repz
cli
jnp
cltd
push
cmp
cld
mov
sbb
aad
mov
neg
nop
or
xchg
mov
mov
mov
and
inc
lea
ljmp
arpl
mov
sbb
pop
test
mov
xchg
cmp
lahf
push
adc
in
int3
fstpt
into
in
js,pt
sti
cmp
add
mulb
out
aas
in
sub
xor
xchg
insb
movsb
xchg
push
inc
sbb
xchg
outsl
xorl
stos
mov
movsl
mov
and
sahf
xchg
pusha
dec
imul
mov
dec
out
sub
imul
mov
dec
xchg
imulb
mov
or
xchg
mov
inc
arpl
ja
sbb
sbb
mov
out
mov
int3
push
lods
decb
mov
or
dec
dec
mov
inc
jo
xor
lret
mov
loopne
jg
mov
pop
aaa
dec
add
xchg
ja
inc
lock
fldl
loop
nop
test
mov
test
push
pop
inc
mov
sub
shll
xchg
in
fsub
repz
cmp
jle
int
add
mov
jo
add
sub
aaa
xor
dec
and
jle
sub
mov
mov
scas
adc
and
je
and
xchg
mov
pop
mov
orl
add
and
xchg
sbb
incl
lea
adc
repz
xor
fcmovbe
scas
popf
jnp
mov
into
cmpsl
call
jge
mov
iret
fbld
rol
jnp
mov
and
shlb
nop
fisubl
mov
cmp
lock
cld
mov
shll
sbb
and
xor
loopne
pop
out
mov
out
jle
nop
adc
add
ret
push
mov
adc
outsb
pop
rcll
cltd
les
fiadds
mov
les
jle
fdivl
shlb
jl
ret
jge
jmp
adc
call
cli
lcall
sbb
test
mov
pop
sti
jnp
int
rcll
or
sub
iret
icebp
mov
mov
adc
inc
shll
enter
inc
xor
nop
lcall
insb
fisubs
rcll
sbb
jp
cmp
fldt
dec
ljmp
and
dec
loopne
pop
push
call
test
bound
xorb
fcom
jge
insl
mov
pusha
push
decl
adc
push
jne
jno
in
sub
insl
xchg
adc
jecxz
cmp
mov
push
add
and
sbb
jnp
pop
sbb
aad
pusha
xchg
xlat
mov
inc
mov
loop
cwtl
push
mov
push
jb
fldt
push
mov
bound
xchg
push
jbe
pop
or
cmp
mov
add
push
clc
out
aaa
out
pop
pop
mov
mov
notl
mov
lds
sub
and
lock
jb
shl
fldcw
rcrl
mov
in
push
stc
dec
pop
adc
ficoml
or
xchg
pop
pop
mov
and
cmp
idiv
or
adc
ljmp
test
jne
in
sub
jns
aad
inc
mov
xor
cltd
pop
imul
outsl
sbb
mov
lods
push
jnp
push
sub
push
sub
lods
cmp
stc
sbb
jecxz
js
outsl
add
jge
lods
hlt
into
popa
lcall
and
call
sbb
call
jmp
popf
mov
repz
lret
push
xchg
fcomip
xor
mov
ja
push
mov
push
lods
sub
sbb
push
test
lahf
popf
sbb
mov
add
xchg
sub
push
sbb
bound
je
test
jp
adc
pop
pop
mov
int
push
sbb
mov
sbb
nop
dec
xor
jl
popf
cmp
or
sbb
fimuls
push
data16
fs
mov
push
mov
push
loope
rclb
imul
mov
and
hlt
pop
outsl
faddl
and
shlb
ret
pop
dec
xor
pop
pop
jge
add
jmp
jmp
or
dec
mov
jb
sub
push
dec
aas
popf
push
fstpt
lahf
sub
or
ja
rolb
lret
push
out
jge
repnz
or
aas
sub
sahf
push
test
ret
lret
movsl
and
insl
cmp
lds
sub
sarl
sub
mov
jl
xchg
sbb
xlat
sub
cmpsb
jb
daa
mov
stc
push
push
sbb
stos
inc
fistps
addr16
loopne
sbb
fldcw
ljmp
mov
sbb
dec
mov
lahf
jae
stos
shrb
dec
xchg
mov
out
stos
dec
popf
mov
jbe
fcoms
out
in
lods
imul
fisttpl
les
fidivs
pop
add
loopw
push
stos
sahf
lock
xor
add
stos
rclb
lea
and
cmpsl
clc
stos
push
sub
ficoms
and
xor
and
push
in
cld
push
sbb
cmp
lods
push
addr16
setns
pop
xchg
jae
addr16
pop
pop
pop
fisttpl
cltd
decl
inc
ljmp
iret
mov
sub
iret
and
dec
das
pushf
leave
push
outsl
ret
shlb
pop
xor
shl
mov
fidivrl
pop
rorl
xor
iret
add
enter
mov
popa
xchg
movsb
adc
lock
add
jae
lret
enter
cld
push
stc
sbbb
mov
cmp
jae
xchg
mov
clc
insl
xchg
xor
cmc
lds
stos
adc
je
add
jl
or
add
pop
fsubs
cmp
daa
jnp
add
mov
dec
sub
cwtl
outsb
dec
and
cli
clc
and
fsub
loopne
or
leave
adc
adc
pusha
lret
xorb
push
cmpsl
decb
dec
jae
enter
dec
dec
insb
testb
mov
out
push
jl
sbbl
pop
inc
push
mov
outsl
pop
stc
inc
mov
aaa
sub
dec
mov
aam
jno
jo
movsl
lods
lahf
pop
stos
jle
dec
in
ss
imul
xor
fnstenv
adc
cs
adc
jne
add
xchg
mov
orl
data16
xchg
pop
insb
pusha
neg
mov
jge
xor
and
pop
mov
push
pop
jbe
faddl
jno
lea
cs
pop
jno
pop
mov
xlat
push
or
jge
rorl
inc
imul
lods
jno
pop
push
cmp
loopne
jle
jo
xchg
mov
jecxz
shlb
js
push
fdivrl
and
fwait
movsl
sub
add
outsl
jge
adc
or
hlt
mov
jno
xor
icebp
aad
loopne
imul
rclb
xchg
aaa
imull
pop
mov
push
mov
or
xor
jbe
lret
mov
insl
repz
xor
cmpsb
das
sub
call
sbb
fidivl
sbb
pop
mull
add
mov
pop
and
sbb
js
rcrb
mov
jp
jne
lcall
inc
dec
mov
jo
clc
mov
fs
sbb
sub
pop
push
and
push
iret
add
roll
add
xor
bound
imulb
imul
ficoms
sahf
sub
dec
jp
adc
out
in
repnz
mov
sti
int
pusha
xlat
loope
push
test
stc
les
sbb
cs
scas
lret
jecxz
fucomi
and
imul
mov
adc
push
sub
dec
lock
sbb
dec
pop
cwtl
outsl
pop
daa
nop
std
insl
push
rorb
cmp
repnz
push
xchg
ret
imul
adc
or
ds
dec
mov
movsb
outsb
cwtl
push
push
mov
jge
dec
mov
dec
push
cmp
mov
push
incb
sbb
fisttpl
popa
cmp
xchg
xor
push
sbb
push
rorb
xchg
movsb
sbb
push
pop
sbb
xor
adcb
push
jg
jmp
mov
addb
xchg
stos
cmp
cmpsb
push
push
outsb
je
xchg
call
fmull
imul
stos
decl
lret
sbb
adc
call
inc
sub
sbb
add
lds
xor
dec
out
cmp
aaa
cmpsl
pop
or
shll
lea
jae
or
lcall
and
insl
lock
mov
mov
bswap
xchg
pop
mov
inc
push
xor
cmp
xor
jns
dec
mov
cmp
adc
xor
add
in
fstp
jge
pusha
andl
and
mov
pop
jmp
rclb
sub
imul
xor
leave
pop
jle
or
gs
repnz
mov
out
xchg
pop
mov
mov
jb
loope
or
add
lcall
push
lds
mov
repnz
das
aas
ljmp
aad
loopne
push
dec
mov
add
jae
out
in
outsb
les
inc
inc
jecxz
pop
popf
jae
xchg
xlat
sbbb
or
jp
pop
cmp
lret
mov
dec
xchg
push
in
jne
xor
mov
pop
popf
mov
inc
stos
fidivl
fcoml
or
arpl
mov
pushf
pop
loop
pop
xchg
and
out
xor
sbb
adc
add
stos
cmc
test
sub
mov
mov
inc
repnz
jo
sub
mov
push
push
inc
lcall
std
mov
movsb
pop
mov
dec
stos
mov
push
stc
add
xlat
push
jmp
sbbb
sub
test
in
jecxz
pop
pop
outsl
fsubrl
insb
in
mov
inc
ror
arpl
cmpsb
lds
and
movsb
push
adc
cmpsb
test
stc
xchg
fists
psubsw
ds
xor
or
cmp
rclb
pop
out
inc
dec
addr16
test
dec
repnz
push
pop
push
ljmp
xor
fildll
mov
mov
jmp
mov
jne
pop
aad
and
inc
mov
sbb
addr16
es
gs
bound
fwait
inc
push
jno
or
es
dec
repnz
iret
mov
in
dec
movsb
jg
js
fcompl
sti
mov
mov
push
xor
jp
repnz
je
fwait
mov
xchg
insl
mov
out
test
mov
pop
ret
leave
cmc
fdivrl
dec
cmp
push
fdivs
mov
std
rolb
in
repz
xchg
jo
add
dec
cmp
mov
aaa
and
jmp
aaa
pop
jg
imulb
pop
mov
es
push
adc
mov
das
jb
shll
and
cmpsb
int
stos
jg
mov
leave
lcall
test
call
sub
notb
cli
test
jp
push
jnp
or
dec
lcall
or
aaa
dec
mov
cmp
frstor
stos
outsb
outsl
mov
push
data16
cmp
dec
mov
dec
dec
cmc
cmp
add
sub
lods
test
cli
mov
aas
jle
pop
or
testb
jbe
fistps
arpl
add
or
add
sub
mov
sbb
adc
xchg
sub
ds
loop
lcall
jo
mov
nop
test
repnz
scas
adc
and
mov
fwait
add
sbb
inc
incb
mov
xor
in
outsl
mov
mov
xor
dec
xchg
pushw
out
mov
or
adc
insl
lds
roll
iret
sbb
mov
adc
add
add
mov
lds
stos
inc
pop
pop
pop
xchg
movsl
fsubrs
lock
stos
outsb
int
sti
into
adcb
xlat
nop
mov
mov
push
add
mulb
mov
daa
adc
or
mov
lds
fistpl
xor
imul
div
mov
das
xchg
mov
mov
or
into
cmp
push
or
adc
addr16
dec
loopne
cmp
iret
pop
mov
aaa
dec
adc
cmpsb
dec
clc
push
outsl
hlt
mov
je
loopne
insl
mov
mov
das
sub
shrl
xchg
lds
push
and
xchg
ror
inc
sbb
adc
int
inc
lods
ret
push
sbb
or
pusha
js
jbe
outsl
das
lea
jle
imul
sbb
dec
jg
loopne
add
test
pop
and
xchg
les
shlb
mov
add
dec
xchg
jl
xchg
out
fistl
and
mull
sub
adc
dec
pop
pop
gs
sbb
lea
lret
lahf
pop
lcall
in
pop
je
xchg
lahf
ficoml
sti
cmpsb
and
sbb
jl
adc
dec
mov
aas
lods
push
jnp
int
xor
cwtl
push
into
lcall
sub
pop
jo
lahf
mov
mov
les
cmc
jmp
mov
mov
fldcw
push
dec
cmp
cltd
sub
leave
stos
adc
enter
mov
mov
fsubrl
add
and
sbb
pop
jb
cmp
sahf
dec
cmp
aas
xchg
cmp
mov
xor
std
insb
add
mov
add
xchg
adc
push
fwait
push
xor
pushf
sar
mov
push
xor
ljmp
ret
das
mov
iret
orb
jnp
jp
sbb
aad
push
xor
or
pop
stos
int
lea
popa
in
cwtl
push
and
cmp
bound
aad
xor
loop
xor
and
mov
sbb
test
sbb
lock
xchg
mov
fidivl
test
mov
sub
outsb
rcpps
lret
pop
lret
mov
pop
sbb
and
loop
jno
inc
and
dec
sub
andl
add
jb
in
orl
shlb
jl
je
jg
and
ljmp
sarl
std
pop
sub
insl
cmc
xchg
sbb
pop
cmp
xor
fcmovnbe
push
mov
adc
lret
adc
mov
jg
scas
add
into
imul
cmp
cmp
dec
cmp
clc
pop
cwtl
push
mov
pop
ret
mov
adc
cmp
dec
cmp
fdivl
and
push
xor
aaa
test
xlat
mov
mov
orl
push
fldl
pop
adc
and
cmpsb
xor
repz
lahf
idivb
jno
test
aas
pushf
movsl
das
push
cmovae
or
add
sbb
ljmp
sbb
lea
movsl
xchg
in
addl
aaa
add
mov
cmp
insl
bound
sahf
mov
mov
les
popa
ljmp
push
adc
cmp
cmp
aam
shll
test
call
cmpsb
push
push
orb
into
lods
lock
imul
jno
sub
in
test
ds
ja
add
test
pop
push
sub
push
sbb
repnz
in
clc
mov
lahf
sub
in
push
jmp
or
in
mov
in
dec
out
jl
lret
jo
cld
jbe
push
cmp
mov
cmc
gs
cmc
push
xor
and
test
dec
xchg
dec
push
mov
xchg
push
cltd
sub
mov
imul
sub
mov
push
inc
inc
mov
xchg
popf
mov
inc
push
and
jecxz
mov
std
das
sub
push
dec
jns
cmpsl
sub
js
arpl
cmp
subb
dec
int3
leave
gs
sahf
rcrl
mov
adc
filds
in
out
jp
add
sub
dec
and
fcoms
lods
lahf
push
hlt
mov
cs
or
outsl
mov
inc
jnp
or
lahf
xlat
jnp
arpl
sar
mov
xor
push
push
rorb
cli
mov
push
imul
sbb
pop
jl
push
adc
inc
mov
sbb
imul
add
sub
xor
lcall
mov
lcall
push
fmul
add
imul
jne
mov
push
cltd
xor
push
mov
nop
mov
rcll
push
jge
cmp
rcrb
mov
ret
call
std
imul
sbb
roll
jl
sahf
or
sbb
or
sub
cld
loop
xchg
loop
or
jmp
inc
adc
and
push
jp
and
mov
std
xor
sub
xor
mov
and
pushf
xor
pop
icebp
inc
jno
insl
int3
repnz
mov
push
xchg
mov
aad
pushl
dec
lock
scas
mov
ss
insl
mov
and
bound
mov
sbb
int
cmp
frstor
nop
jnp
inc
sub
cmpsb
jp
sbb
lahf
inc
sbb
sub
xchg
scas
xor
xchg
jns
or
jg
ja
fistpll
lods
mov
imul
dec
int3
cs
insb
pop
aas
jl
ret
mov
std
out
dec
mov
jp
loopne
cs
jns
mov
cwtl
mov
xor
pusha
mov
mov
jg
stos
cmp
mov
jae
pop
iret
xchg
sbb
lret
outsb
and
fwait
popa
dec
inc
ret
and
xchg
push
daa
mov
stos
jb
clc
loopne
pop
lcall
nop
cmp
cmp
dec
bound
jne
jg
inc
pop
dec
xlat
jl
lret
repz
inc
xor
mov
and
pop
pop
idivb
jbe
cltd
pop
scas
jnp
test
sti
mov
dec
cmp
jecxz
push
add
add
mov
or
xchg
inc
sbb
adc
shlb
cltd
mov
fsubrl
mov
push
inc
xor
sbb
ss
in
add
dec
pop
and
aam
sub
cmp
imul
daa
add
out
cmc
add
adc
push
mov
mov
sbb
push
imul
mov
cmp
shr
adc
shlb
flds
inc
cmpsb
pop
cli
xor
push
movsb
cli
mov
add
inc
mov
cltd
ret
scas
push
mov
pop
aad
inc
lods
je
test
xor
repz
xchg
xchg
and
pop
shrb
mov
sub
jg
lret
cmp
xchg
mov
dec
push
sub
adc
outsb
cmp
into
ja
xor
in
xchg
cmp
scas
adc
add
mov
test
add
mull
lcall
sub
jecxz
stos
inc
test
sbb
sub
dec
loopne
mov
inc
jae
dec
push
adcl
adc
imul
sub
decb
sub
inc
jge
sub
pop
outsl
subb
loopne
mov
inc
sarl
jnp
mov
in
mov
xor
adc
ret
inc
inc
mov
or
in
and
or
orl
mov
xchg
fwait
in
push
xor
and
ljmp
leave
mov
ret
movsl
out
vpcomuq
jno
gs
jnp
rcr
mov
cmpsb
repz
jmp
ret
lea
inc
jne
and
orb
xchg
aam
sub
mov
in
push
popf
sbb
daa
rsm
clc
fucomip
fildl
hlt
pop
sbb
pop
iret
orb
mov
imul
stc
or
lds
or
jns
mov
sub
lods
inc
std
and
inc
lods
popf
gs
dec
pop
adc
scas
xchg
inc
sub
rolb
call
int
cvtpi2ps
and
jae
pop
mov
and
mov
rcll
sub
pop
mov
dec
je
ret
lcall
jle
mov
shll
add
repz
xlat
in
outsl
xor
mov
cli
or
insb
adc
push
test
adc
rolb
nop
lcall
push
push
and
movsl
je
jmp
and
jb
je
mov
mov
pop
pop
mov
and
and
add
mov
push
movsl
adc
cmpsb
call
dec
test
mov
cmp
test
fs
dec
sub
jg
cmp
jno
sbbl
movsb
cmp
xchg
cmp
mov
mov
incb
adc
mov
nop
dec
scas
imul
ret
sbb
sub
and
xchg
into
or
inc
loop
mov
leave
popa
icebp
out
mov
lds
mov
push
aad
push
and
push
push
adc
add
popa
push
jmp
jo
fmull
pop
sahf
testb
jle
or
sarl
pop
jo
in
xor
jno
int
rcrl
xorl
stos
adc
scas
sahf
dec
sub
lahf
cwtl
mov
and
add
fmul
nop
gs
xor
orl
or
aad
fwait
or
mov
xchg
lahf
and
jge
lds
cld
mov
stos
repz
int3
push
or
mov
pop
sbb
and
cmp
push
jg
add
jle
mov
sbb
cwtl
in
psllw
outsb
cs
sub
and
cmpsl
xor
arpl
push
data16
push
dec
cmpl
mov
int3
xor
and
cmp
in
cmp
mov
lahf
movsb
test
test
mov
shlb
pop
mov
dec
in
andl
push
mov
out
and
out
xor
movb
ret
cmp
ja
popa
cli
mov
and
dec
incl
pop
pop
stc
add
out
pop
imul
push
mov
js
fimuls
sbb
mov
js
gs
mov
cmpsl
pop
mov
js
std
jae
sbb
ja
sub
inc
jl
mov
adc
cmp
xchg
jp
les
dec
sbb
out
inc
lahf
scas
fdivrp
loopne
int
push
lods
loope
call
push
jno
jae
mov
jae
addb
cld
outsb
popa
in
loop
pop
lahf
cmpsb
lcall
jecxz
sub
adc
insb
adc
push
fstps
movups
nop
or
loopne
sbb
pop
jne
testb
sbb
sbb
decl
int3
sbb
xor
outsl
jge
and
loope
jns
in
clc
cltd
leave
ja
mov
adc
mov
jno
xchg
or
and
or
in
pop
add
jnp
enter
sub
add
sahf
jmp
fisubrl
or
cmp
xchg
xor
push
int
je
leave
add
xlat
jge
jge
xchg
or
in
out
jb
gs
out
pop
xor
fwait
dec
mov
hlt
ss
mov
aas
outsb
je,pt
in
pop
pop
mov
imul
pop
push
mov
inc
cmp
add
add
scas
or
js
call
push
pop
sbb
cld
stos
add
repz
ljmp
push
sub
clc
sub
cmp
out
jne,pn
fistpl
xchg
sbb
fwait
add
jecxz
cmpsl
incl
xchg
add
repz
jbe
in
mov
cmp
lock
mov
jl
add
lret
sub
in
lcall
fistpll
adc
jbe
fs
movsb
sub
mov
dec
and
or
mov
xchg
cmp
adc
int3
fdivs
ljmp
fcomip
sahf
inc
pop
jae
pop
dec
std
sbbb
rorl
fmuls
sbb
dec
test
ljmp
cmp
jno
and
xchg
popa
andl
nop
hlt
in
gs
push
adc
gs
jmp
nop
shl
pop
sti
outsl
push
mov
mov
lahf
cmpsb
hlt
scas
cmp
jbe
mov
mov
or
iret
cmp
sub
push
mov
jb
sbb
pop
cli
xor
bound
fdivs
ja
outsl
jmp
dec
out
out
mov
xlat
repnz
addr16
test
jne
dec
mov
imul
leave
xchg
imul
lods
lahf
push
mov
mov
cmp
jne
pop
aas
jg
inc
dec
mov
jb
test
cmp
xchg
mov
hlt
mov
adc
cs
xchg
fildll
pop
mull
div
test
sub
and
jnp
mov
jle
call
sti
push
mov
pushf
movsl
movsl
pop
dec
add
mov
fists
and
sub
cmp
or
xchg
xor
xchg
rcr
repz
fidivrl
lds
fstpl
stos
push
call
lds
out
xchg
subl
lock
test
das
or
sub
lock
push
ret
movsl
test
mov
add
xchg
xor
out
or
sarl
mov
push
dec
mov
cli
outsb
aas
loop
adc
ret
cmp
std
mov
es
cwtl
cmpsb
sub
pop
orl
inc
push
sbb
dec
inc
test
fstpl
dec
or
cmpsb
test
aad
lods
push
xchg
aas
cmpsl
int
loop
mov
cmp
cmp
ret
sti
ljmp
xor
pop
dec
lret
add
mov
jg
loope
mov
repnz
sub
add
fs
lret
in
mov
gs
mov
fsubr
add
pop
or
add
or
jno
stos
jns
out
into
mov
sub
fidivrl
mov
add
out
push
sbb
or
add
test
jp
imul
mov
aaa
ror
imul
icebp
pop
inc
xchg
pusha
jb
daa
xor
xor
add
aas
jge
dec
cmp
insb
scas
xor
mov
sub
imul
push
jg
add
push
mov
ret
testb
into
adc
sub
daa
sbb
outsb
or
ja
sbb
mov
sbb
movsb
dec
cwtl
jo
jno
mov
insb
jl
push
and
pcmpeqd
pop
push
sub
loop
movsb
mov
inc
outsb
scas
fbstp
jp
int3
and
mov
or
bound
jb
and
add
js
fisttpll
cli
arpl
out
outsl
fdivl
clc
rclb
mov
mov
lds
icebp
int
xchg
jo
jp
pop
or
push
xchg
pop
sbb
push
sbb
cmpsb
or
pop
les
mov
test
cmpsb
cmp
pop
add
out
ja
mov
or
fwait
dec
sbb
into
lret
mov
xchg
cwtl
adc
jp
mov
mov
xlat
mov
mov
mov
clc
imul
mov
push
repnz
push
addr16
insb
ds
jmp
add
imul
mov
mov
sbb
filds
push
push
repnz
dec
adc
std
dec
cli
gs
dec
sub
jns
outsb
stos
or
in
ficompl
bound
push
into
aad
dec
fidivrs
mov
or
mov
mov
mov
inc
pop
cs
xorb
mov
xchg
sub
arpl
and
orb
mov
sbb
adc
sub
popa
jl
gs
call
inc
mov
int
sahf
imul
xlat
pop
in
sub
pop
lahf
push
sbb
mov
pop
jp,pn
dec
mov
test
les
sbb
cmp
repz
rcrb
sahf
gs
mov
pusha
sahf
loopne
add
repz
stos
mov
call
out
je
cltd
adc
and
jns
nop
xchg
sahf
jp
mov
int3
cmp
sti
jecxz
push
pop
loopne
ret
cmp
out
popa
or
out
push
in
pop
lret
mov
aam
mov
sub
subb
rorb
test
add
int
jp
mov
jo
movsb
pop
inc
leave
jbe
addr16
out
xchg
inc
inc
int3
mov
push
cmpl
inc
dec
adc
bound
mov
loope
ret
das
pop
in
jecxz
jno
jns
test
iret
mov
jge
in
dec
push
cs
ds
or
ret
ret
jl
jl
popf
mov
mov
ss
sub
jo
in
push
push
lahf
mov
stos
push
repnz
movnti
out
dec
shl
sbb
fs
jb
out
push
loop
mov
or
insb
jno
nop
push
dec
sbb
pop
sarl
xchg
jo
loope
sbb
stc
push
jo
mov
test
inc
pop
insb
std
imul
adc
scas
cld
push
lcall
lcall
sbb
in
lods
addr16
pop
arpl
push
cld
xchg
lahf
add
rorl
dec
mov
sub
cmp
mov
subb
cs
in
and
cmp
dec
sub
or
pop
pop
testl
inc
adc
fs
data16
mov
dec
xchg
sub
arpl
nop
dec
mov
sbb
dec
push
ss
lock
and
sub
pop
mov
cmpsb
into
ss
cmp
aas
dec
lret
std
pop
push
xor
pusha
jb
pop
sbb
cmp
jl
stos
dec
mov
mov
xor
sub
mov
jno
inc
in
jecxz
jp
daa
pop
cmp
cmp
fidivrs
cmp
out
enter
test
fnsave
sub
lods
int
test
arpl
fcom
mov
lds
es
push
cmp
push
xchg
into
hlt
jns
loop
popa
and
mov
hlt
adc
xor
push
ds
test
sbb
cmp
lods
dec
stc
mov
testl
pushf
pop
sbb
sarl
addr16
mov
bound
jle
loopne
mov
lds
or
test
jns
fisttpl
movl
jge
push
adc
cmp
ret
inc
jle
cmp
addr16
adc
in
loope
jmp
sub
push
pop
lods
cs
xor
push
mov
xorps
nop
pop
inc
cmp
les
mov
mull
mov
lret
adc
push
or
out
xor
pop
pop
nop
cmpsl
aam
pop
mov
icebp
mov
rorl
lods
rcrb
jg
or
gs
sub
lcall
dec
mov
imull
push
aad
out
nop
sarl
lret
nop
jecxz
xor
test
mov
push
add
aaa
sarb
cmp
xor
pop
scas
mov
jne
out
in
xor
test
inc
add
inc
push
movsb
fwait
xchg
fwait
pop
jnp
adc
out
jnp
cmp
inc
sbb
iret
sub
test
adc
fldt
cmp
test
add
divb
sbb
loope
mov
std
out
mov
ds
scas
pop
movsb
aad
or
popa
inc
inc
cmp
cmp
xor
push
ret
out
push
std
cli
sahf
mov
jae
adc
pop
ss
adc
jge
fsubl
mov
and
in
xchg
lds
fbstp
pushf
cmp
cltd
test
test
rcrl
add
dec
cltd
xchg
lahf
mov
dec
inc
sub
mov
shrl
ds
stos
push
pop
and
fbstp
adc
cmpb
int3
mov
rcr
enter
or
cld
cmpsb
aad
mov
jmp
and
add
sub
aad
push
addr16
xchg
in
mov
mov
cmp
sbbb
test
add
int3
movsl
xchg
sbb
push
mov
lds
pop
xor
fadds
std
xchg
push
inc
sbb
sahf
inc
or
jbe
cltd
jmp
int
inc
outsb
push
cltd
sub
ja
sbb
lock
sub
sbb
and
pop
andnps
lcall
cmp
stc
test
jne
push
hlt
loopne
xchg
cmc
push
jne
nop
jl
dec
jns
xchg
pop
dec
adc
jb
or
ss
mull
cmp
std
push
std
pusha
jno
jo
dec
mov
and
out
push
lret
adc
adc
xchg
pop
xorb
repnz
pop
fmull
aaa
and
aad
xchg
push
rorb
lds
mov
inc
daa
add
xchg
scas
mov
adc
sahf
popa
aad
sub
aas
frstor
inc
in
jae
xchg
xorb
adc
push
cltd
hlt
test
inc
in
fcompl
in
sbb
xor
add
pop
mov
add
out
sbbb
ret
test
jns
imul
sbb
xor
jnp
imull
adc
dec
movsl
cmc
cmpsb
int
les
push
lcall
scas
int
mov
sbb
pop
stos
mul
outsb
mov
cwtl
push
sti
shll
lahf
lret
sbb
out
sbb
adc
mov
pop
into
inc
add
mov
sub
mov
adc
int3
add
dec
jnp
outsb
ljmp
lcall
movsl
pop
pop
fdivrl
mov
inc
xchg
repz
sub
hlt
fisttpll
inc
and
adc
cmp
inc
sbb
and
mov
out
pusha
xchg
fcmovnbe
shrb
mov
scas
aad
cmpsb
mov
bound
add
xchg
mov
push
jp
lods
add
int3
mov
push
push
insl
pop
dec
pushf
or
jecxz
pop
push
popf
xor
leave
or
sbb
push
test
xor
xor
cmp
lret
sub
xlat
shlb
or
jg
out
xlat
adc
adc
aad
push
inc
add
lods
or
insb
test
push
sub
aas
imul
pushf
into
adcb
mov
push
jno
or
in
cmp
or
cmpsl
movntps
add
rclb
subb
out
sbb
cmp
jae
inc
out
orb
movsb
jmp
das
jns
loop
cmp
push
xor
fldcw
jns
or
outsb
jp
nop
out
mov
pushf
cld
rorb
lock
sbb
fnstcw
mov
mov
push
add
lea
fmuls
or
inc
push
pmullw
scas
mov
ret
dec
lret
mov
out
lret
xor
inc
pop
sarl
hlt
imul
xchg
add
leave
xchg
sbb
pop
mov
test
jns,pn
jp
fisttpl
ljmp
push
push
das
push
xchg
or
xchg
jns
sti
hlt
mov
sbb
xchg
inc
aad
mov
mov
or
adc
sub
pop
pusha
mov
rclb
shl
mov
lods
add
paddusw
mov
dec
testl
mov
lock
lcall
adc
cmp
xchg
outsl
cmp
pop
cmc
pop
ja
and
mov
mov
mov
inc
iret
fists
push
pop
std
out
dec
or
dec
dec
push
rolb
mov
lock
nop
push
movsb
adc
sub
lret
push
sub
or
nop
adc
aad
push
lcall
insl
mov
sub
shrb
scas
sbb
fwait
push
insl
loopne
enter
imul
jae
dec
sbb
sbb
enter
mov
jp
cmpsb
sub
xor
dec
stos
pop
sub
cmp
jge
mov
pop
iret
aad
fnstcw
dec
js
xlat
push
fisubl
test
sub
loope
push
dec
int
insb
push
pop
push
fwait
js
jge
adc
icebp
push
xchg
jne
push
jne
mov
mov
xchg
cmp
jb
mov
sbb
hlt
bound
mov
jl
es
out
gs
dec
jg
test
daa
jmp
dec
js
dec
adc
push
jae
aas
test
jp
mov
filds
cmpb
ja,pt
ds
enter
stc
aad
and
sub
xchg
pop
andl
adc
adc
jmp
in
lods
int3
insl
xorb
jl
aad
cmpsb
rcrl
pop
lcall
cmc
mov
adc
lods
shll
xor
jns
xor
jge
adc
js
ja
mov
out
mov
mov
clc
xlat
push
ja
in
xchg
and
mov
lods
fsubr
imul
inc
cmpsb
cmp
cmp
and
mov
cmp
xor
bswap
addr16
mov
cmp
out
mov
jo
mov
adc
cmp
int
icebp
jp
cmp
add
fs
outsb
jmp
jp
mov
test
fmuls
xchg
sahf
pop
fs
mov
dec
in
pop
testb
ja
cmp
outsb
out
xorb
inc
js
fdivl
idivb
push
xor
and
dec
mov
jno
bound
int
xor
loopne
jns
sub
mov
jle
out
arpl
or
xchg
les
adc
xor
mov
push
mov
and
int3
mov
mov
fcomps
popa
sbb
pop
fisubs
and
leave
xchg
fists
adc
xchg
mov
push
cltd
push
add
mov
or
sbb
ss
push
cmp
stos
mov
mov
gs
cmp
adc
dec
pop
xchg
jbe
repnz
repz
cmp
sub
mov
daa
sub
daa
jmp
stc
test
mov
sub
aam
stos
sbb
pop
add
int3
cltd
and
inc
lret
stos
in
rcrb
mov
test
adc
lods
mov
sbb
jbe
pop
push
nop
mov
data16
jnp
fdivp
test
xchg
sbb
mov
subl
sbb
test
push
cli
repz
fdivrs
rcll
insl
fidivrl
add
push
movsl
push
mov
fdivl
jl
or
int3
and
xchg
addr16
addr16
xchg
jno
ror
lret
lahf
rol
ret
mov
xor
shrl
push
pop
mov
or
test
das
pushf
xchg
pop
cld
jns
call
adc
and
mov
arpl
jno
test
mov
out
stos
mov
lds
pop
shlb
movsb
jo
pop
js
dec
or
mov
pop
aaa
outsb
cli
mov
mov
inc
aaa
lcall
shl
sbb
fildll
psraw
mov
fstpl
ficoml
aaa
pcmpeqb
lea
mov
lea
sbb
sub
cli
jnp
xchg
jb
add
mov
adc
js
vmovntps
push
pop
jmp
push
sub
push
add
jmp
add
std
add
pop
ret
mov
cwtl
cmp
fidivl
adcb
sahf
fstl
sub
push
repnz
inc
xchg
outsl
addl
icebp
sbb
in
xchg
arpl
dec
stos
push
outsl
popf
sti
push
mov
int3
mov
jge
pop
sti
mov
xchg
jecxz
and
das
mov
mov
mov
mov
mov
lret
add
lret
idivb
insl
test
push
ficoms
xlat
in
insl
fcmovne
and
imul
arpl
or
pop
jns
xor
in
and
push
pop
xchg
pop
add
xchg
sarl
addr16
into
subb
rcll
call
hlt
les
cli
ret
add
xlat
lret
xchg
cld
test
pop
jp
sbb
loope
sub
adc
int
jg
aas
stos
cmp
lods
push
sbb
inc
in
repnz
mov
jg
in
roll
dec
stos
bnd
subb
mov
mov
dec
mov
jp
fcomps
push
mov
adc
push
imul
mov
push
cmpsb
lds
push
push
pop
cld
test
xor
push
lods
jecxz
xchg
testb
add
hlt
cld
das
ret
mov
mov
mov
dec
out
testb
jg
out
test
sub
daa
dec
mov
gs
inc
loope
popa
call
fdivrs
das
cmp
xlat
jg
xor
adc
mov
cmp
xor
jns
dec
dec
pop
cmpsb
push
adc
cwtl
imul
fdivs
idivb
aas
jo
sbb
loop
data16
push
jne
call
mov
or
int3
mov
lret
int
leave
dec
inc
nop
xchg
aas
lods
dec
xor
xor
stos
lcall
mov
ss
mov
inc
aaa
xchg
mov
or
jns
aam
sbb
stos
pushf
mov
les
stc
popa
sahf
lock
jge
cmp
or
dec
repz
mov
test
lret
aad
test
cmc
adc
push
mov
dec
mov
insb
jae
sti
pop
add
cmp
rdtsc
xor
pop
xchg
sub
xor
xchg
ss
repz
cmpsb
cmp
mov
cmp
shlb
int
lahf
cwtl
xchg
or
sbb
outsl
daa
test
inc
add
inc
dec
jne
jo
push
mov
pop
jp
mov
sbbl
xchg
mov
or
mov
fmul
sbb
or
aaa
mov
pop
stos
push
jecxz
jg
in
pop
xchg
shll
jg
ds
add
add
rolb
jno
and
xor
jbe
lahf
fdivrs
mov
mov
lods
add
addr16
repnz
cld
jmp
ret
sbb
pop
lcall
repz
add
cmp
call
sub
movsb
jmp
pop
mov
lcall
mov
xlat
mov
jno
push
sti
clc
test
faddl
mov
cmp
movups
xor
jns
imul
jg
lods
sub
jge
xor
xchg
int3
xor
push
test
lods
or
and
mov
adc
jo
push
adc
pop
iret
aas
fisubrl
dec
jg
pop
inc
aas
inc
outsb
sarl
or
inc
cmp
sbbb
jnp
ror
inc
push
jge
shlb
mov
push
test
adc
jg
daa
jno
or
xor
aad
movb
pop
lock
jmp
inc
aad
loopne
add
or
push
add
imul
sub
shrb
xor
test
ret
mov
inc
push
xchg
mov
std
jno
mov
fdivrp
sub
cmp
int
jle
les
push
into
jns
sub
stos
xchg
lods
mov
pushf
jno
addr16
dec
rcr
int
and
movsl
inc
mov
lret
push
lds
and
sbbl
sub
dec
push
orl
sbb
scas
xor
push
pop
adc
cmp
mov
lods
add
dec
push
in
cmp
ss
xor
addr16
arpl
inc
imul
pop
cmp
jle
popa
cmpsl
xchg
shl
mov
leave
sub
int3
pop
in
cli
and
jne
aaa
outsb
int
jg
xor
push
add
xchg
or
mov
mov
clc
mov
cmp
or
addr16
ljmp
sahf
sbb
adc
jmp
pop
loope
out
jl
out
push
sbbl
and
aas
add
gs
push
out
sti
movl
xchg
and
lds
pushf
sub
pusha
arpl
notl
ja
and
pop
sbbb
cltd
daa
jns
sbb
mov
repz
lret
add
push
fidivs
shr
aas
pop
int
hlt
inc
and
inc
mov
adc
adc
xor
call
loopne
icebp
lods
fs
push
cmpsb
push
pop
cwtl
shrl
xchg
test
xchg
fisubl
push
in
daa
push
std
push
cmp
dec
mov
movsl
cmc
cmp
stos
pushf
je
insl
shrb
test
popa
icebp
fdivl
hlt
inc
xor
jp
shrl
mov
repnz
cld
jno
cmc
jmp
cs
rcrb
sub
icebp
sub
pop
inc
shl
fsubl
jg
lds
outsl
pusha
stos
or
jne
cmp
or
loop
loopne
xchg
lods
sub
imulb
inc
ret
je
dec
outsb
jmp
xchg
cmp
mov
push
dec
iret
jl
dec
jle
or
mov
push
pushf
or
adcb
mov
sub
sahf
into
imul
cltd
jb
inc
inc
rolb
in
push
or
andl
scas
fmul
push
setl
cmp
fnstcw
ds
or
test
or
call
fldt
or
cs
dec
jge
inc
pop
add
inc
outsl
inc
andb
in
hlt
out
sub
xor
cmp
stos
mov
xchg
repnz
cmp
ffree
test
mov
pop
pop
iret
cmp
mov
sub
mov
pusha
jae
xor
fiaddl
addr16
xchg
mov
std
or
inc
scas
mov
jl
in
outsb
cmp
cs
adc
imul
adc
leave
cmpsl
lret
mov
or
inc
pop
xchg
mov
mov
inc
add
or
sahf
aam
fcomps
and
gs
add
sbb
movlps
mov
push
sti
mov
mov
dec
inc
inc
sti
into
dec
lods
sub
mov
lods
add
add
jns
cwtl
and
es
inc
inc
iret
mov
cmp
movsb
adc
lret
pop
cmpsl
bound
cld
or
mov
mov
jns
fcompl
mov
mov
lret
in
adc
popa
cmpsl
cmpb
jne
icebp
push
inc
xchg
clc
push
ret
ret
rcrl
leavew
pop
ja
cmp
sar
fdivr
scas
push
aaa
dec
insl
in
xor
ja
mov
in
stos
adc
sbb
jmp
dec
sbb
mov
sub
aam
arpl
mov
and
mov
loope
pop
stos
mov
adc
clc
ds
xchg
adc
or
mov
or
sub
mov
das
lret
and
push
and
jbe
push
loope
xchg
cwtl
sbb
clc
lcall
inc
into
lods
lock
ja
pushl
aas
dec
sbb
jmp
adcl
or
sbb
sbbb
lret
jno
ret
add
jne
cld
fdivrs
out
push
push
inc
std
push
jbe
daa
xchg
jo
mov
inc
push
pop
lret
testl
xor
sub
pop
inc
xor
cmp
in
xchg
leave
pop
bnd
vpandn
lret
int3
pop
out
addr16
sub
inc
out
mov
jne
xchg
mov
cmp
xchg
outsl
sbb
call
out
xchg
popf
cmp
sti
repnz
cmp
lods
and
xor
xor
sbb
lahf
dec
mov
push
lret
pop
or
test
and
jo
sub
nop
jecxz
stc
cmpsb
dec
mov
ljmp
xor
cld
and
xchg
mov
and
in
aad
pop
inc
jns
dec
fstpt
jmp
sbb
mov
mov
lret
pushf
shll
aad
dec
subl
enter
xchg
cld
shlb
les
adc
lods
lahf
mov
icebp
sar
push
sarb
scas
rcr
push
imul
cmp
movsb
sbb
lock
scas
rolb
xchg
arpl
pop
xchg
aas
push
addr16
lods
xchg
leave
enter
jo
jg
aad
sbb
mov
mov
bound
mov
addl
neg
adc
repz
iret
jmp
dec
push
loopne
sub
and
push
sahf
mov
out
notl
mov
lods
sbbl
mov
mov
enter
mov
cmc
inc
jp
dec
and
shl
sahf
jge
imul
pop
sbb
lcall
ja
test
scas
xor
popl
pusha
ljmp
xchg
xor
xlat
in
mov
test
negl
inc
jne
sbb
sbb
inc
call
cmp
les
lods
outsl
jno
push
in
adc
or
push
adc
cltd
arpl
mov
xchg
scas
xor
pusha
cmpsb
mov
mov
mov
dec
xor
data16
scas
mov
mov
adc
ret
jl
push
int
cld
mov
rcll
xchg
push
sbb
int
ret
aad
push
xorl
or
mov
push
addr16
push
mov
mov
addb
in
push
jo
addl
cwtl
cli
ss
sahf
es
push
xor
adc
int
xchg
cmpsl
add
pop
call
lret
adc
out
and
add
adc
cmp
sub
lock
mov
xchg
fs
jne
inc
jne
dec
rorl
mov
add
rclb
cmp
xchg
push
gs
sub
add
nop
es
pop
in
das
push
shl
mov
push
icebp
gs
and
dec
fwait
mov
pop
xorl
pop
das
mov
push
imul
push
fcomps
mov
sub
sbb
jp
mov
insb
jbe
andl
jge
leave
push
mov
shlb
notl
xorl
mov
sahf
paddb
std
mov
fiaddl
mov
ljmp
dec
add
xor
mov
lahf
call
push
in
cli
mov
mov
shrb
inc
les
inc
jae
imul
jle
jge
xchg
pushf
or
insl
inc
ror
cmp
sbb
jo
inc
adc
sub
jno
popa
xchg
rorb
sti
shrb
sti
cmp
push
pop
or
push
cmp
fsubp
ja
fnstsw
mov
push
jg
arpl
adc
daa
mov
pop
cli
push
jmp
xor
les
cmp
scas
aam
ja
add
xchg
lock
mov
add
push
icebp
push
xorb
mov
out
leave
inc
cmp
push
xchg
jnp
test
insb
xor
mov
out
xlat
les
imul
pushf
outsb
test
ds
into
sbb
rorb
and
adc
std
into
push
mov
iret
mov
sbb
stc
mov
or
lods
xor
int
rorl
divb
mov
xlat
mov
xchg
test
cmp
adc
lds
pop
add
arpl
xchg
sub
icebp
cmp
cmp
pop
loop
and
stos
es
jl
sub
lahf
dec
lock
hlt
xor
pop
jmp
in
dec
mov
jno
and
inc
mov
cli
psrld
out
add
lret
xor
lods
jb
pusha
jbe
mov
or
and
enter
xor
adc
push
aas
repnz
mov
stos
loopne
jecxz
cmpb
std
xor
inc
outsl
sbb
dec
sbb
sub
mov
loopne
xchg
xor
or
push
pop
jno
cmc
adc
mov
in
jnp,pt
mov
sbb
js
push
pop
sbb
dec
cmp
pop
push
push
xchg
aaa
in
jbe
lods
adc
fsts
fisttps
xchg
and
loope
daa
mov
fmuls
pop
jp
fldcw
fsubrl
jb
repz
imul
fldl
fnop
ja
mov
xor
jns
pop
cld
call
xlat
push
ret
sub
sub
pop
jmp
fldt
mov
test
pusha
mov
in
out
inc
cmpsl
sbb
movl
cmp
stos
leave
mov
je
mov
cmp
push
mov
fcmovnbe
push
cmp
jns
je
inc
xchg
mov
xor
into
mov
or
sbb
cld
push
xchg
rcrl
push
jp
insl
popf
clc
jecxz
cs
inc
mov
cmp
push
pop
mov
push
ljmp
aas
inc
xchg
mov
shll
decl
and
xor
sbb
pop
mov
dec
lcall
das
sub
inc
dec
mov
movsb
jo
dec
insl
sub
jbe
adc
xchg
inc
inc
es
push
inc
nop
and
fcmove
addl
test
fs
dec
in
aam
push
sar
add
cld
mov
cs
pop
dec
inc
out
insb
xchg
hlt
ror
xchg
outsl
dec
mov
inc
push
sarb
jmp
dec
dec
rcrl
scas
and
popa
push
stos
lcall
mov
jb
clc
and
loopne
fsubs
dec
lea
mov
ljmp
adc
cmp
es
push
cltd
sub
or
xor
fwait
js
testl
mov
xchg
popf
pop
and
dec
or
dec
adc
xchg
gs
pop
pop
test
loop
outsb
test
mov
ret
and
add
jle
outsl
inc
mov
cli
outsb
or
popa
cmp
jg
daa
lret
or
dec
adc
and
and
xchg
sbb
cmp
mov
mov
cmpsl
rcl
sarb
inc
adc
cmp
fptan
movl
lds
lock
outsl
aaa
mov
dec
push
in
xor
xchg
mov
xor
ret
mov
pop
sub
xor
jns
iret
sahf
adc
incl
ljmp
jge
inc
mov
int
mov
popf
dec
push
ret
add
int
subb
lahf
jl
leave
jmp
push
aad
and
cld
mov
lock
pushl
xchg
mov
inc
mov
lahf
sub
test
cwtl
xor
fwait
out
test
push
pop
ret
lret
adcl
leave
arpl
or
pop
pop
xor
and
jecxz
mov
addr16
mov
sbb
pop
and
xor
inc
sbb
pop
sbb
pcmpeqb
push
jl
lds
pop
push
subl
hlt
les
adc
dec
scas
pop
repz
dec
and
rcrl
fadd
leave
pushf
or
int
icebp
dec
ss
xor
sub
xchg
sbb
xchg
aas
lods
sub
sbb
shr
in
mov
aas
inc
cmp
lds
pop
das
call
push
jmp
fcompl
rorb
push
cmp
mov
mov
enter
repz
cmpl
xchg
or
out
add
sahf
subl
adc
push
and
test
mov
add
outsb
stc
xor
add
cltd
push
repz
das
mov
cmp
mov
sub
loope
adc
sub
aam
sbb
inc
lahf
cmp
mov
add
xchg
push
add
and
mov
leave
xor
sub
pop
cs
jmp
fwait
aaa
jae
je
sarb
push
pop
daa
mov
movsl
xchg
iret
repnz
out
nop
test
ss
sub
rcll
int
shrl
push
fcomi
mov
mov
xchg
mov
aad
cmpsb
lods
in
pop
cld
cmc
adc
or
xor
push
pop
clc
iret
cld
and
pop
fistpll
lret
imul
or
in
fs
pushf
aas
pusha
mov
popa
scas
push
aas
push
sbb
mov
iret
pop
fwait
sti
imul
orb
pusha
dec
and
fmull
jb
mov
and
xchg
mov
mov
pop
sbb
movsb
rorl
sti
loop
adcl
jecxz
cwtl
pop
dec
ljmp
push
daa
push
sub
sub
int
ja
rclb
jnp
ljmp
mov
xchg
sub
pop
int
push
sub
xchg
xchg
jl
arpl
inc
lcall
jns
sub
sbb
lret
out
mov
dec
out
pop
xor
jae
rcr
xchg
pop
cltd
and
push
dec
in
or
fildll
mov
rolb
cmpsl
gs
pop
adc
incl
pop
push
adc
push
stc
lcall
fisubs
inc
dec
jne
fs
out
cmp
insl
xchg
stos
mov
and
sarb
jnp
push
mov
xchg
dec
or
cmp
dec
xor
mov
mov
sbb
mov
or
jg
jecxz
hlt
dec
call
add
cmc
jbe
mov
or
fs
ror
pop
add
sub
sbb
std
and
ret
aaa
sub
sub
aas
icebp
push
cmp
lret
push
aas
cmpsb
ds
mov
push
push
pop
gs
dec
cmp
in
xchg
or
xchg
stc
inc
fsubrp
cmp
dec
out
push
xchg
inc
outsl
ja
hlt
sbb
cmc
sbb
jns
mov
push
sbb
int3
into
mov
ret
dec
pushf
adc
add
enter
lock
out
aam
in
cmp
xor
aad
lahf
pop
sub
out
into
lods
pop
jecxz
cmc
cs
push
in
test
shlb
adc
mov
jg
test
cld
fisubrs
lock
aas
sub
xrelease
or
call
dec
inc
movsl
movsl
ret
enter
cmp
rol
adc
ja
imul
mov
aas
inc
xchg
les
loopne
idiv
cmc
negb
inc
jne
and
out
lea
mov
fcomp
and
and
dec
sub
xchg
mov
fcoml
mov
call
ret
insb
mov
adc
dec
loope
adc
fmulp
lds
push
shrb
or
pop
xor
mov
call
ret
movb
stc
pop
pop
cmpsl
cmp
aam
fcoms
mov
jns
pop
dec
lret
mov
fs
repz
fsubrl
out
cld
xchg
repz
jnp
dec
in
divl
xor
push
sbb
cmp
pop
leave
int3
lcall
jne
rclb
xor
and
in
push
push
add
in
int3
jge
xchg
pop
daa
jno
inc
dec
fsubl
xchg
push
push
stos
push
sbb
and
movsl
clc
das
les
mov
lds
shlb
aaa
push
pop
stos
jge
jns
xchg
and
ljmp
or
ret
addb
and
int3
sub
sub
or
lea
pop
fsubp
clc
or
popf
in
gs
push
inc
imul
jge
mov
xor
adc
sbb
jnp
addr16
inc
push
daa
xchg
mov
fistpl
loop
pusha
fwait
mov
rorl
pusha
pop
cs
sbb
shll
rclb
mov
inc
and
popf
jnp
cmp
daa
mov
inc
sub
aam
clc
sbb
pop
negb
mov
mull
sbb
inc
stos
and
push
fwait
outsl
and
insl
scas
shl
cmpsb
rcl
notl
bound
jo
dec
push
add
js
imul
mov
mov
xlat
daa
cmp
adc
aad
repz
sbb
mov
jle
jl
stos
fistl
in
xor
loopne
xor
xor
adc
add
fidivl
sub
scas
mov
sub
repnz
xchg
or
xchg
adc
adc
jnp
xchg
loop
test
mov
xlat
bound
mov
jg
pushf
faddl
sti
aaa
ljmp
push
jle
mov
icebp
push
stos
mov
jl
add
jp
jp
and
pop
jbe
mov
insl
cmp
and
js
cld
cmpl
mov
into
inc
cld
lret
fcoml
jp
fmuls
mov
mov
sarb
cmpsb
in
out
sub
loope
cmpb
negl
pop
pop
add
arpl
int
add
xchg
or
iret
bound
xor
test
ret
sbb
xor
mov
test
imul
pop
push
imul
outsl
cmp
pop
testl
enter
sub
cmpsb
cmp
sahf
lds
mov
pop
or
xor
xor
div
test
mov
mov
scas
fcomps
loopne
lahf
mov
sub
push
das
push
movb
in
mov
jl
pop
inc
pusha
sub
test
cmpsb
fnsave
jecxz
stos
inc
bswap
jns
addb
stos
movsb
xor
fcomps
pop
pop
les
add
sub
aad
push
test
adc
push
sbb
popa
jno
pop
mov
ja
je
xor
test
adc
shrl
icebp
out
inc
pop
mov
clc
dec
sti
dec
cmp
outsl
xchg
lret
sub
std
std
adc
sbb
add
xchg
push
lods
push
inc
adc
out
fsub
jge
mov
lods
int
dec
mov
jne
int3
mov
pop
jo
or
sbb
sub
stos
adc
mov
push
jp
aaa
pop
into
mov
hlt
loopne
ror
and
test
outsl
lret
sub
cmp
pop
jle
mov
dec
aam
and
std
mov
xchg
add
rorl
adc
add
loopne
dec
xchg
iret
out
xor
xor
pop
sbb
mov
inc
and
dec
xor
fs
xchg
mov
add
shrl
and
subl
xchg
jae
mov
cld
pop
jae
lcall
pushf
fiadds
sahf
push
jmp
stc
fldt
jge
stc
mov
shll
and
inc
sbb
dec
popf
sbb
jle
std
fcomps
dec
mov
insl
fidivl
cli
mov
call
ja
rclb
gs
or
popf
xchg
adc
dec
scas
cmp
lret
cld
enter
jnp
in
aad
xadd
push
xor
ss
xor
iret
add
in
mov
inc
mov
jmp
jecxz
inc
mov
push
clc
test
add
jp
subl
cmp
jb
pop
iret
mov
jmp
xlat
nop
pusha
mov
jl
pop
faddp
pop
hlt
sbb
jle
cmpsb
cmp
out
jae
or
mov
pushf
or
sbb
adc
mov
push
inc
aaa
dec
push
inc
jp
pop
popa
mov
cmp
xchg
out
out
mov
adc
mov
popa
test
and
arpl
cs
or
mov
cmc
cwtl
xchg
xchg
or
cmp
xchg
fsubl
adc
xor
cli
rorl
ret
inc
mov
in
pop
ror
popa
pop
mov
je
push
pop
stos
push
push
inc
or
cmpsl
cmp
mov
sbb
sub
mov
cli
int
imul
xchg
sbb
dec
inc
sub
aaa
mov
jp
dec
lcall
add
in
push
pop
dec
adc
je
xor
pop
neg
js
push
sub
inc
in
inc
push
mov
dec
lret
jne
jns
push
subl
mov
pop
jae
pop
aas
dec
jp
mov
or
and
sbb
pop
push
mov
loope
mov
pop
pop
out
or
mov
sarb
ret
fwait
test
jb
or
js
lea
lahf
pushf
fyl2x
iret
mov
repnz
sahf
xchg
ret
mov
jns
push
push
mov
arpl
repnz
adcb
and
sbb
pop
andps
mov
lods
imul
mov
inc
outsb
xchg
out
pop
orb
push
push
jo
frstor
lods
mov
imul
jle
push
jl
push
in
enter
xlat
add
adc
ja
repnz
pop
cmp
scas
mov
sbbb
std
mov
mov
and
xor
mov
popa
fisubrs
xchg
jp
js
outsb
mov
jnp
cmpsb
pop
mov
mov
nop
orb
std
stos
lcall
popf
jge
adc
add
pop
sarb
clc
iret
add
iret
pop
lret
js
cli
lds
push
or
jne
sub
aaa
pop
mov
test
cmp
ss
popa
add
cld
fcomps
pop
mov
mov
pop
inc
fdivrl
cmp
test
cmp
jns
repz
sub
aam
sbb
cmp
in
std
and
cmp
popf
insl
loop
ljmp
aam
repnz
and
mov
xor
push
loopne
int
cmc
xchg
add
jecxz
sub
notb
repnz
dec
xlat
cmp
jbe
sbbb
inc
mov
sarl
outsl
in
xchg
aad
es
inc
dec
and
mov
xchg
jae
mov
insb
pop
bound
lahf
pop
xchg
cld
cmpsl
test
adc
xchg
jbe
mov
pop
mov
leave
std
out
jmp
fwait
xchg
push
cli
cmc
mov
cwtl
push
icebp
std
bound
scas
cmc
aad
lret
test
popa
lods
or
aad
scas
mov
inc
sub
outsl
in
fadd
popa
out
clc
pop
js
mov
xor
and
mov
ja
int
sub
cmp
sub
mov
test
rol
es
pop
lcall
cs
jnp
sub
xor
xchg
mov
sbb
aam
insl
or
add
sbb
cmc
mov
mov
inc
xchg
mov
mov
inc
fcomp
bnd
out
out
testb
cs
aam
fmull
lret
sub
lods
pop
mulb
stc
sbb
es
js
scas
stos
mov
pop
pusha
push
jbe
and
leave
mov
cmp
mov
iret
dec
cmp
mov
cld
adc
inc
jg
stc
and
movsl
ror
xlat
test
dec
insb
pop
xor
adc
lods
cltd
push
sub
jns
lock
aaa
push
lock
jecxz
loope
in
mov
push
insl
fisubl
pop
dec
and
mov
mov
nop
daa
movsb
add
fcmovnbe
lret
movsb
enter
outsb
xor
add
add
pop
cltd
jle
insb
fnstcw
sbb
in
inc
stos
mov
inc
cltd
mov
and
adc
mov
stos
data16
push
fdivs
adc
or
pop
mov
adc
lcall
pop
mov
lods
mov
push
xor
fsubl
adc
insl
cmp
pop
cmpsl
mov
mov
and
shrb
mov
sub
or
adc
sbb
insl
or
sti
stc
adc
mov
daa
sarl
stc
test
mov
mov
decl
mov
or
or
mov
jns
rcl
sbb
adc
inc
pop
popf
aam
or
arpl
popa
mov
sti
jnp
lock
pop
pop
jmp
sahf
sbb
push
mov
pop
js
push
stos
je
pusha
scas
ret
loope
inc
xchg
jo
pop
fld
pop
mov
mov
testl
fisubrs
mov
push
pop
xlat
cmp
cld
insl
adc
push
imul
lea
outsb
lods
xchg
mov
push
xchg
push
and
or
sarb
orb
dec
int3
fs
in
rorb
jmp
in
call
loopne
loope
jns
xchg
sub
or
mov
adc
stos
sbb
shl
nop
sbb
dec
lahf
jle
mov
lds
dec
out
mov
cmp
pop
outsl
mov
push
ja
and
in
add
push
and
stos
es
sub
out
lods
scas
dec
xchg
les
cmc
xchg
lret
cs
int
fs
hlt
gs
push
jnp
cmp
or
lcall
iret
test
test
pop
js
lods
ret
lcall
in
xlat
enter
fiadds
sub
pop
gs
cld
pusha
in
loope
xor
xchg
test
jo
loope
sbb
inc
outsl
and
push
push
in
lds
jb
stc
and
mov
lret
mov
ss
loopne
xor
mov
fnstsw
lret
imul
cwtl
jmp
daa
es
ss
lret
pop
pushf
dec
push
xchg
add
mov
and
push
rclb
cmp
ljmp
add
mov
aam
out
ljmp
sbb
pop
mov
xlat
dec
and
sbb
pop
dec
push
sbb
sti
pop
inc
out
mov
add
push
inc
packuswb
ret
sbb
push
or
pop
cmp
in
push
push
rclb
push
push
jne
outsl
popa
out
dec
pop
mov
pop
mov
jno
pop
shrl
jg
cmp
int
adc
mov
ja
leave
jb
frstor
pop
test
jae
lds
icebp
inc
inc
std
adc
jno
fcomps
sahf
sub
pop
scas
cmp
dec
adc
sbb
shrb
pop
xchg
mov
or
jns
push
dec
mov
ror
push
pop
sub
pop
jbe
ljmp
mov
or
pop
mull
cmp
pop
bound
out
xchg
jnp
mov
fisttpll
fisubl
stc
cmpsb
sub
fcomps
mov
and
inc
fcomi
inc
push
pop
push
aas
jns
fwait
mov
out
xor
movsb
stc
mov
cmpsb
xchg
fwait
mov
lods
or
imul
inc
and
neg
sbb
lods
xor
inc
sub
sub
dec
aam
call
xor
mov
sub
inc
mov
mov
fstl
addr16
pop
or
cmp
mov
sarb
or
xlat
fimull
int3
ret
pop
mov
mov
into
scas
ds
lcall
pop
in
shl
movsl
out
out
ret
neg
sbb
xchg
adc
cwtl
mov
lahf
mulb
repnz
hlt
lret
jle
dec
push
jbe
cmp
dec
pop
sub
lock
push
jle
xchg
fstpt
jbe
mov
pop
or
test
lods
push
add
into
cmp
loop
cmp
xor
adc
and
roll
push
add
cmpl
jno
and
jnp
dec
and
add
cli
push
loop
and
mov
mov
lahf
jns
ds
outsb
xchg
popa
loope
adc
subb
mov
cmp
fistpll
mov
mov
imul
mov
int
int
sub
int
sbb
jg
xor
lcall
lret
js
add
sub
popf
add
mov
add
push
inc
cmp
ja
jb
cmpsl
or
decb
mov
jns
pop
in
aam
push
pop
xlat
pushf
lahf
ds
fstl
dec
aad
sbb
sub
mov
or
push
mov
sub
dec
mov
loope
and
push
and
scas
and
stc
inc
xchg
shll
es
into
cmp
and
popl
pop
insl
xor
imul
fcmovnu
xor
iret
xchg
dec
pushf
sti
add
scas
push
xchg
rcll
fidivl
repz
or
enter
cmc
aam
in
ss
cmpsl
pop
ljmp
scas
add
mov
fistpll
xchg
mov
mov
sbb
into
aas
mov
popa
xchg
insl
mov
xlat
pmuludq
leave
cld
imul
push
pop
out
xchg
testl
cld
jp
push
aad
sub
std
jg
hlt
mov
push
test
xchg
out
push
push
push
mov
jp
cltd
in
jg
jns
mov
jnp
adc
mov
test
and
lods
dec
les
mov
fsts
stos
int
dec
lcall
sub
insl
arpl
jno
sub
lea
movq
je
jle
repz
jmp
and
icebp
ds
push
pusha
sbb
xor
pop
xchg
ret
icebp
push
sbb
pop
mov
stos
call
pop
push
es
cmpsl
loop
jmp
cld
data16
mov
or
dec
xorb
mov
jmp
xchg
push
aaa
out
add
sbb
inc
push
sub
dec
std
adc
xchg
xchg
scas
adc
mov
sbb
push
add
jne
inc
aaa
and
mov
push
inc
icebp
rcl
mov
dec
adc
cmc
aaa
int
sahf
mov
std
jecxz
xor
push
mov
and
mov
xchg
dec
test
add
cmp
sbb
imul
xor
sti
mov
sti
lcall
xorb
imul
inc
mov
shrb
fildl
sbb
and
sub
insl
xchg
xorb
jmp
pop
mov
jp
test
in
aam
cmp
or
dec
xchg
add
add
insb
dec
gs
pusha
mov
ljmp
mov
imul
test
push
jno
jg
and
dec
in
shrl
out
pop
mov
test
repz
outsl
je
out
jmp
push
icebp
fcmovne
repz
inc
repnz
jmp
jmp
in
sub
cmp
push
aam
testl
jo
dec
sbb
dec
ret
out
mov
sti
and
shlb
push
dec
inc
ljmp
xor
cltd
ficomps
cmpsl
jg
xor
mov
lahf
push
lods
leave
notb
push
hlt
hlt
sub
push
mov
dec
cmp
pusha
mov
stc
lock
jg
repnz
or
fmull
sub
inc
push
stos
xchg
adc
fdivrl
lret
push
aaa
dec
rcll
int
add
notl
mov
decl
in
in
mov
pop
adc
popa
addl
push
cs
pop
loop
int
jnp
rcrb
in
cld
imul
xchg
jp
sub
test
clc
sar
outsb
xor
cmp
and
fwait
push
pop
test
adc
adc
ror
loope
les
dec
sub
inc
imul
inc
out
mov
fs
mov
repz
and
ret
pop
aas
dec
scas
inc
adc
cmp
int3
aaa
xchg
add
test
push
pop
adc
jno
dec
insb
insl
mov
shlb
into
cli
ret
adc
les
inc
ss
out
mov
pop
mov
sbb
scas
clc
sbb
mov
into
lods
add
lock
icebp
mov
xor
mov
adc
mov
das
repz
cld
jb
mov
js
mov
dec
adc
test
pushf
decl
dec
es
cmpsb
xor
fs
je
es
inc
pop
aas
out
insl
and
xchg
jle
dec
add
push
dec
push
xor
mov
add
imul
in
out
adc
jbe
cmp
inc
adc
mov
and
jmp
or
fisubs
cmc
ffree
aaa
aam
add
dec
jo
out
fwait
add
rcrb
mov
adc
cmp
push
sti
ficomps
adc
xchg
inc
mov
aam
lcall
scas
mov
cmp
xor
loope
fiaddl
shl
dec
mov
lods
stc
xchg
lods
sub
add
mov
and
outsb
adc
mov
jnp
cmp
mov
push
aas
std
sbb
or
cwtl
daa
xor
jecxz
push
stc
dec
xlat
into
lahf
jp
int3
jle
out
aas
mov
rorb
jle
mov
mov
nop
aad
clc
rclb
xchg
leave
inc
xor
popa
jns
xchg
push
dec
sbb
dec
xchg
mov
sarb
pushf
jmp
mov
imul
push
and
stc
mov
ljmp
adc
push
cmpsl
movsl
out
adc
sub
scas
cmp
or
pop
hlt
mov
adc
cwtl
add
cli
and
xor
sbb
add
enter
aam
mov
divl
outsl
stos
in
ljmp
push
divl
mov
ret
pop
jge
lock
push
rolb
cltd
test
pushf
xor
xchg
sbb
xchg
loopne
ficoms
or
and
sbb
xchg
nop
pusha
into
dec
mov
test
cwtl
rolb
inc
jns
cli
mov
or
addr16
cmp
loope
mov
xor
inc
out
stc
cmp
mov
test
aas
and
push
imul
cmp
mov
mov
jg
pop
pop
xchg
add
fincstp
aas
xchg
cmp
inc
push
mov
shll
ja
pop
inc
fwait
jno
xchg
aad
adc
std
fstpt
test
jbe
lcall
pop
jmp
pop
mov
push
cmp
loope
movsb
push
push
jle
rorl
xor
mov
fiadds
roll
test
fcmovbe
daa
mov
mov
or
lcall
mov
pop
bound
call
mov
popf
xchg
jno
push
js
imul
filds
push
bound
js
mov
insl
and
fcomi
xorl
leave
push
jo
mov
inc
movsb
pushf
movsl
cmp
mov
mov
stos
outsb
push
inc
cmp
mov
jbe
cmpsb
je
arpl
inc
sahf
push
add
jnp
inc
mov
cmpsl
mov
cmp
dec
aad
pop
add
hlt
dec
push
out
push
and
call
cli
pushf
mov
push
stos
pop
xchg
pushf
adc
sbb
mov
pop
imul
adc
cmp
dec
sbb
sarl
cmp
insl
ss
jae
fldenv
testb
or
jae
leave
xor
push
cmp
data16
jle
or
lret
cmp
adc
mov
sbb
pop
lods
xor
lcall
shl
mov
shlb
jno
pop
std
jb
lods
movsl
fnstsw
and
inc
inc
pop
mov
imul
nop
test
jns
repnz
sub
xchg
jge
sbb
dec
mov
rclb
mov
jg
xchg
cmp
jp
mov
mov
scas
lret
je
xchg
aas
outsb
push
shld
adc
pop
lahf
and
in
fs
jae
xchg
sub
push
pushf
jne
mov
jne
or
icebp
push
fdivp
stos
xor
in
xchg
js
sbb
push
hlt
mov
in
mov
mov
dec
adc
jo
outsl
int
imul
or
jno
popf
xchg
sbb
push
jle
mov
dec
push
pop
cmp
aam
fwait
mov
sahf
xchg
or
popa
js
pushf
mov
jmp
jns
in
mov
pop
insl
mov
fisubl
outsl
lds
pop
stos
pop
cld
pop
lret
cmp
add
stos
xor
test
jmp
or
and
mov
out
inc
leave
push
mov
in
mov
jno
xchg
jp
lahf
lods
mov
mov
and
sbb
cs
pop
aad
imul
add
or
mov
sub
mov
lods
push
mov
jnp
sti
insb
cmpsb
inc
lcall
fs
ds
add
xchg
and
jo
push
mov
mov
arpl
shll
inc
in
ficomps
jno
cltd
mov
hlt
jnp
rcrb
mov
push
push
daa
pushf
pop
mov
das
mov
xor
fucomip
stc
dec
jg
xchg
xor
dec
sub
outsl
mov
fwait
and
sahf
dec
test
rcll
aad
gs
xchg
jnp
jb
xor
and
jp
arpl
or
xchg
je
xor
repnz
pop
outsb
xchg
data16
pop
fmull
aam
fisubl
cltd
insl
xchg
stos
sbb
dec
fcoms
dec
sar
add
fstl
mov
jl
cmp
fildll
les
xor
or
js
arpl
push
lret
movsl
inc
inc
ljmp
xchg
roll
sub
mov
sarl
pop
test
mov
push
mov
fstpl
cmpsl
ret
shl
add
setbe
inc
out
sbb
sbb
mov
gs
sub
mov
dec
call
mov
xchg
lds
xor
adc
adc
outsb
or
pop
adc
orb
sub
sbb
addr16
mov
cmc
nop
adc
push
andl
mov
pop
or
pusha
dec
add
out
add
add
xchg
fs
cmp
inc
mov
dec
adc
repnz
xor
pusha
sbb
imul
sub
mov
mov
jecxz
outsb
mov
mov
dec
pop
dec
xor
adc
mov
and
or
or
sbb
shll
and
lahf
ss
dec
pop
pop
faddl
mov
xor
push
dec
mov
xor
mov
xchg
adc
and
leave
into
leave
push
clc
add
adc
iret
sub
pop
or
push
fcompl
popa
mov
lods
mov
popf
sbb
xlat
push
xchg
push
stc
nop
inc
pushf
jl
lods
jmp
pop
jne
sbb
icebp
in
les
jg
sub
sbb
mov
popf
mov
mov
stc
mov
sti
mov
in
movsl
fldt
std
xchg
addr16
ja
and
sub
jle
jne
int3
mov
hlt
lods
out
movsl
and
xchg
gs
xor
jmp
dec
divb
jae
xchg
popf
gs
xorb
xor
pop
movb
push
and
or
sbb
sahf
in
pop
or
xor
xor
dec
xorl
ja
bound
int
clc
sbb
in
cmp
popa
add
fstpt
scas
int
stos
push
mov
jne
mov
dec
mov
in
lret
or
fistps
in
mov
mov
gs
outsb
or
cmp
insb
adc
mov
xchg
popl
stos
ja
push
js
roll
mov
loope
cmpsl
cmpsb
inc
pop
cmpsl
cld
sbb
push
add
xchg
cmp
jne
scas
test
scas
and
mov
das
popa
out
mov
lods
ret
push
mov
divb
mov
mov
adc
jmp
lret
leave
cs
andnps
dec
adc
pop
rorb
jge
pop
jo
fidivs
push
aaa
pop
and
xor
icebp
adc
cmp
pop
mov
mov
ficoml
fistpll
inc
jns
push
enter
mov
outsl
inc
inc
scas
ljmp
pop
pop
repz
xor
cs
ja
cmp
or
fmuls
repnz
adc
mov
jge
std
lds
int3
pop
in
jecxz
lods
lcall
inc
add
push
aas
mov
iret
fnstenv
inc
add
push
imul
xchg
je
sahf
rol
mov
xchg
dec
adc
xorl
sub
int
enter
das
push
loopne
mov
addr16
cltd
and
mov
mov
inc
in
rol
or
cld
int
je
ja
push
fstl
imul
mov
int
andb
and
out
shlb
jnp
mov
into
clc
mov
mov
mov
dec
mov
cmovbe
mov
out
jge
insl
mov
add
ds
sbb
ljmp
mov
andl
dec
push
mov
lcall
dec
jne
cltd
mov
int3
mov
iret
dec
iret
jbe
cmp
scas
lcall
jge
test
insb
in
aaa
pusha
mov
fwait
jp
sub
fildll
jns
xchg
and
xlat
ret
inc
shll
sub
in
je
gs
loop
out
push
inc
arpl
lods
movsb
dec
movsl
jp
in
mov
mov
mov
andb
push
fidivrs
shll
out
or
out
jo
cltd
loop
sbb
sbb
or
sbb
mov
inc
out
push
addr16
or
adc
leave
adc
adcl
dec
mov
ds
jmp
les
fwait
arpl
jnp
clc
out
mov
arpl
dec
mov
mov
mov
imul
negb
cwtl
jg
jmp
mov
add
adc
pop
fs
loop
push
cld
cmpsb
pop
add
push
in
cltd
pop
fisubl
xor
lea
lcall
push
pop
jo
jp
in
mov
or
pop
push
shrl
cmpsb
sub
xor
outsl
lods
and
aad
loope
pop
xchg
cs
lods
cld
xchg
dec
pop
push
dec
pusha
or
cwtl
lods
add
jle
fcomps
bound
cmc
inc
xchg
and
push
sbb
je
adc
pop
adc
fists
or
or
add
inc
ss
jo
mov
js
loopne
sbb
scas
inc
mov
cmp
add
dec
es
dec
add
out
fstp
xchg
mov
fildll
stos
sub
ljmp
adc
xchg
dec
hlt
les
lods
or
pop
mov
jb
loopne
mov
out
andb
jno
jne
inc
dec
push
pop
sbb
mov
mov
xlat
inc
repnz
or
and
push
aaa
and
inc
xchg
sbb
pop
imul
ljmp
mov
int
loope
jae
icebp
lret
adc
jbe
sbb
fistps
adc
in
insl
test
xlat
dec
inc
inc
mov
inc
cmc
jp
xchg
fisttps
movsl
fadds
xor
or
call
xchg
lret
jmp
sub
jae
cmpsb
xor
push
mov
imul
xor
mov
sbb
xlat
dec
xchg
ss
sub
icebp
and
sbb
jmp
and
xchg
out
sbb
scas
inc
mov
cltd
mov
xor
mov
mov
adc
daa
sub
adc
inc
or
sti
dec
gs
out
into
xor
cmp
xorl
xor
in
rcr
push
in
ja
cmp
popf
mov
xor
sar
add
lret
scas
and
inc
in
ret
leave
movsb
les
ljmp
rolb
mov
ds
inc
popl
and
stos
nop
hlt
adcb
pop
xor
icebp
pop
and
pop
repnz
lds
mov
addl
jmp
out
dec
cmpsb
fisttpl
clc
mov
pop
push
out
push
xchg
and
xor
out
in
shl
adc
xchg
xchg
inc
xor
cli
push
mov
lcall
lods
aam
in
imul
sar
test
insl
stos
push
lds
dec
pop
mov
xchg
loop
xchg
fisubs
sarb
push
or
jo
dec
jae
jns
insb
xor
push
xchg
rol
xchg
dec
in
imul
loop
fildll
out
test
adcl
pop
push
in
sbb
mov
lcall
scas
push
addr16
sar
and
movsl
ljmp
cmp
pop
pop
arpl
test
push
sysexit
pxor
in
ljmp
sub
lret
es
xor
rorb
mov
mov
jmp
and
xchg
inc
int
dec
xor
pop
ret
outsb
jmp
pop
daa
xlat
lods
pop
and
or
add
dec
push
push
inc
mov
lret
jno
mov
stos
les
hlt
dec
outsl
add
lret
and
mov
or
jmp
mov
ss
mov
mov
xor
addr16
orl
xor
bound
int3
std
das
lcall
and
mov
mov
repnz
lahf
insl
cltd
shr
inc
and
pop
mov
test
das
dec
xor
in
sub
jb
adc
sbb
flds
lods
shlb
fidivrl
jnp
addl
arpl
inc
mov
mov
push
stos
stc
jle
mov
test
mov
or
in
cmp
add
cmp
cmp
aas
leave
and
mov
cs
pop
cmp
icebp
out
mov
inc
inc
push
fmul
cmpb
cmp
xchg
sbb
xchg
es
jmp
loope
in
inc
mov
dec
or
cmp
out
xor
add
sbb
cli
rcrb
and
xchg
jg
rcr
mov
movsb
daa
loopne
dec
lcall
xchg
xor
push
or
mov
adc
xchg
or
out
lret
xchg
sbb
jno
jecxz
lcall
jmp
adc
push
push
sub
sbb
inc
jno,pt
mov
shrl
adc
sub
imul
lret
or
xor
lea
into
dec
jo
cmpl
out
ret
dec
sbb
pop
not
dec
clc
add
flds
dec
xlat
loop
imul
in
xchg
idiv
mov
pop
adc
jnp
mov
imul
and
dec
test
loopne
push
bnd
enter
xor
popf
mov
sub
push
pop
xchg
mov
lret
adc
mov
mov
icebp
data16
test
sbb
push
pushf
push
xor
xchg
jle
dec
jecxz
jecxz
pop
mov
dec
popa
mov
dec
mov
xchg
sbb
add
mov
dec
cmc
xorb
xchg
sarl
pop
in
and
push
sub
dec
in
mov
xchg
jns
fsubs
jge
arpl
jp
shll
cld
int
xorb
inc
mov
cld
out
fldenv
lahf
cmp
pop
inc
mov
int
or
xchg
add
sbb
ljmp
inc
add
sub
dec
pop
and
hlt
fildl
mov
lret
rcrl
fcomi
arpl
jle
loop
push
sbb
and
jo
rcr
je
mov
fistps
xchg
faddl
jne
dec
xchg
add
mov
add
lea
aaa
js
hlt
imul
lcall
lods
pop
les
cmp
xchg
lcall
pop
out
jecxz
imul
jle
enter
pushf
repnz
cli
pop
dec
and
bound
xchg
pop
aad
sub
xchg
enter
sub
addl
lock
pop
nop
dec
cli
nop
fdivs
sub
and
subb
push
sbb
xor
mov
lret
hlt
mov
or
mov
jno
push
mov
and
movsb
fucomp
cli
xor
pop
xchg
and
loop
jo
outsl
clc
rcr
lea
jge
cmp
inc
dec
jle
stos
cltd
cld
add
and
out
adc
icebp
fsubl
loope
pop
int3
and
pcmpeqw
or
mov
mov
cltd
out
push
cmpsl
je
repnz
imul
pusha
cmp
cs
mov
add
stos
sbb
jp
inc
loopne
sbb
ljmp
scas
addr16
fsubl
ret
jle
js
xchg
cmp
xchg
scas
iret
inc
cmpsl
out
rol
rcrb
dec
xor
lahf
cmp
cmp
xlat
and
push
loop
fwait
popa
negl
jg
js
adc
jecxz
mov
jae
mov
call
ret
cld
xlat
notl
mov
hlt
adc
dec
inc
xchg
mov
inc
pop
cmpsl
fildl
sbb
xchg
dec
mov
xchg
faddl
js
das
negl
jle
outsb
test
out
jl
pop
jle
xor
sub
popa
out
ror
add
cmp
ficompl
mov
decl
into
lods
sbb
jnp
andb
sbb
mov
xor
fbld
mov
sarl
xor
and
icebp
ret
cld
push
mov
stos
fcmovnu
cmp
data16
jnp
mov
fndisi(8087
lock
sub
ret
xchg
xlat
idivb
int3
pop
adc
imul
arpl
addb
cltd
mov
das
mov
fwait
pusha
mov
inc
jnp
mov
mov
or
add
jecxz
repz
sub
dec
adc
or
out
mov
jmp
fcomps
loopne
shll
sbb
inc
cmp
pop
in
stc
imulb
fisubrl
cld
push
and
clc
stc
sar
cltd
inc
and
add
pop
std
add
pop
push
pop
aaa
lahf
outsl
push
movsb
pop
add
push
or
enter
int3
lret
xor
pop
push
hlt
xlat
sbb
cmc
or
cli
jg
sbb
fs
sbb
sub
insl
incl
push
dec
daa
int3
test
sub
push
mov
xchg
loope
sahf
xor
jae
jl
push
mov
pop
push
pusha
mov
clc
repnz
mov
pop
popa
push
nop
jb
stc
jp
xchg
cmp
aad
pop
adc
dec
iret
pusha
std
lds
add
pop
in
xchg
jnp
incb
xchg
lods
cmp
aad
inc
cmc
pushf
adc
sub
mov
sub
dec
push
push
xchg
ret
in
ds
and
pop
pop
nop
ljmp
insl
je
jae
repz
cltd
js
mov
cwtl
je
rclb
inc
add
xchg
rol
sarl
in
lds
pop
movsb
sbb
ja
cmc
dec
jecxz
xor
fdivr
out
adc
lds
bound
sub
popf
ljmp
xor
inc
repz
xor
je
into
sub
rcl
mov
push
fnsave
sahf
inc
jp
dec
aaa
hlt
xchg
inc
pop
js
lods
cmp
pushf
inc
pop
and
xor
das
addl
xchg
and
xor
int3
jecxz
xchg
add
jno
rcr
roll
dec
hlt
leave
outsb
iret
xchg
cwtl
mov
xchg
aaa
rcl
mov
dec
pop
insb
fs
and
imul
movsb
bound
push
in
adc
ffreep
andb
lods
es
and
stc
iret
ds
popf
insb
pop
pop
inc
in
sbb
dec
insb
cmpsl
ss
loopne
ljmp
js
das
jge
mov
fldl
fdivrs
loop
xlat
dec
mov
push
mov
xor
nop
mov
aam
rol
je
insb
scas
dec
pusha
xor
scas
cmp
or
hlt
push
or
ret
mov
or
ljmp
pop
xor
outsl
lds
in
add
mov
sbb
xchg
sbb
push
xorb
jmp
dec
int3
cld
xor
mov
adc
fisttpl
addb
pushf
mov
js
mull
jae
cld
shll
mov
cmc
lods
jno
jbe
test
arpl
xchg
sub
imul
sbb
test
lds
add
call
pop
aad
aam
je
pushf
xor
ret
call
fwait
andb
imul
lock
mov
dec
mov
pop
dec
add
fsubrl
inc
lcall
test
repz
imul
push
addr16
mov
sbb
daa
sub
outsl
in
add
fnstenv
push
nop
in
sub
jle
aam
mov
sub
les
test
push
ljmp
sbb
push
jne
add
pushf
dec
inc
xor
std
jb
xchg
mov
ds
data16
inc
js
mov
stc
sub
or
sub
jge
xor
add
loope
dec
pushf
mov
rcll
in
mov
pop
mov
adc
jne
pop
xchg
adc
mov
push
imul
mov
cld
or
xor
mov
sub
movsl
test
adc
xor
jae
mov
xchg
dec
pop
mull
cs
mov
data16
and
imul
cmp
in
sub
icebp
cmp
and
add
aad
hlt
jecxz
mov
mov
popa
pop
out
mov
pop
mov
add
out
dec
imul
mov
aad
mov
frstor
lea
inc
xor
mov
xor
insl
mov
pop
sahf
mov
ja
into
adc
push
shll
inc
call
pop
jle
lret
aad
inc
cmp
int
jns
adc
xor
inc
sub
test
push
cwtl
in
sbb
lds
idivl
adc
xor
and
jecxz
pop
xor
mov
push
rcrb
insl
mov
orb
mov
les
xor
popf
sbb
pushf
in
sub
rcrb
push
push
jecxz
cmp
js
xchg
push
mov
add
jp
pop
push
jle
bound
hlt
mov
testb
mov
or
inc
loope
and
or
inc
xor
jg
inc
dec
mov
int
or
adc
push
jno
sbb
mov
repz
inc
jl
push
mov
out
fs
cltd
lahf
mov
in
xor
inc
and
mov
mov
add
jne
sub
cli
cmpsb
mov
and
sub
andb
dec
shr
pop
dec
and
mov
mov
lock
sbb
sbb
dec
es
hlt
add
or
loop
sub
pop
sub
popa
cs
nop
adc
clc
pop
hlt
pop
jbe
push
js
pop
inc
sub
cli
xchg
adc
sub
mov
inc
rcr
dec
push
jp
arpl
adc
fisubs
std
lahf
fcmovnb
ds
roll
inc
sub
insl
mov
test
es
jp
test
ss
mov
sub
inc
mov
loopne
pop
lret
cmp
aas
mov
out
pop
push
popf
sbb
adc
or
mov
jp
or
pop
inc
loopne
or
lcall
ss
clc
andb
in
adc
push
imul
inc
inc
pusha
out
clc
and
aam
sbb
sub
jg
in
dec
adc
push
sub
and
add
nop
leave
pusha
aam
push
and
xor
mov
push
idivb
in
scas
jmp
or
popf
sbb
outsl
pop
mov
rorb
shrb
xchg
push
sbb
pop
dec
mov
sbb
cmp
xchg
testb
in
lea
loop
add
push
rolb
shrl
mov
cmp
std
xor
daa
addb
shlb
xchg
sub
xchg
add
rorl
jge
adc
out
inc
cmp
mov
mov
pop
mov
outsl
fadds
lods
int3
fdivrs
and
xor
add
push
lret
in
fimull
clc
sarb
loop
dec
insb
imul
mov
dec
push
cmp
sub
push
jmp
xchg
xchg
adc
gs
insl
jecxz
fisttps
inc
xchg
sbb
pop
imul
mov
and
fcomps
xchg
loopne
or
std
push
ss
push
ss
push
dec
xchg
mov
shlb
das
lahf
stos
mov
ja
jnp
ss
jg
imul
ja
imul
cli
int
data16
mov
adc
pop
loopne
lahf
or
das
dec
imul
loop
inc
jmp
push
adc
in
cwtl
add
push
data16
loopne
and
aas
pop
lahf
sbb
shrl
push
das
cld
stos
std
pop
inc
xchg
ss
mov
out
adc
popfw
daa
fsubs
and
xor
adc
pop
adc
mov
int3
and
repnz
or
mov
push
jns
jae
pop
jmp
lods
ljmp
into
mov
cmp
ja
xchg
add
pop
repz
mov
jbe
mov
mov
mov
scas
sbb
sbb
subl
loope
push
aaa
mov
into
fbstp
add
pop
movsb
lds
aam
fdivs
jno
gs
mov
cltd
outsb
jl
in
inc
add
inc
jecxz
mov
addr16
mov
mov
je
mov
incb
adcl
repz
les
sbb
incl
pushf
mov
adc
dec
ds
pop
mov
xchg
int
in
hlt
push
sub
test
lds
mov
mov
jb
mov
repnz
mulb
les
rorl
ret
fyl2x
mov
int3
xchg
mov
cmpsl
inc
ret
lret
or
sti
jns
xor
adc
stc
fmulp
cmp
adc
clc
icebp
fistl
scas
mov
fstpt
roll
push
jecxz
push
popf
and
stos
aam
loope
lods
repnz
cmp
mov
xchg
mov
mov
popa
cmp
inc
push
xchg
gs
add
dec
nop
jmp
pop
mov
rclb
lahf
push
adcb
out
fcmovnbe
clc
mov
dec
mov
xchg
jbe
pop
lds
mov
les
adc
sahf
xchg
aad
adc
repnz
jae
mov
setl
rep
cmc
pop
mov
jecxz
mov
cmp
or
fdivrl
fs
jnp
imul
jno
lea
dec
enter
jge
test
sub
insl
jl
cmpsl
out
cwtl
pop
dec
inc
dec
adc
test
push
pop
nop
pop
insb
mov
jae
add
dec
out
pop
movsb
xchg
mov
dec
cmc
jg
mov
out
outsb
gs
mov
mov
pop
clc
in
mov
test
data16
cmpb
loopne
insl
sub
sub
sub
test
adc
popf
mov
repz
mov
sub
repnz
shll
in
stos
sub
sbb
rolb
sub
adcb
mov
jbe
popf
iret
leave
mov
push
push
add
push
adc
test
mov
nop
cmpsb
rclb
adc
dec
arpl
call
mov
sbb
addr16
in
scas
nop
mov
and
xor
insl
out
cmp
cmp
inc
pop
cld
rolb
clc
daa
imul
ljmp
outsb
xlat
and
in
push
sbb
xorb
lret
call
insb
into
adc
lahf
sti
pop
add
test
add
push
arpl
ror
mov
inc
or
jb
rol
sbb
push
cmp
int
adc
nop
cmpb
lods
hlt
and
cmp
notl
dec
sbb
push
shl
xor
aas
xor
cmpsb
shl
cwtl
jecxz
jg
pop
sbb
out
outsl
aam
jbe
sub
add
xchg
mov
pop
mov
sub
jbe
mov
or
cli
push
mov
hlt
div
mov
iret
push
mov
and
fisubrl
add
loop
out
xchg
mov
cmp
adc
adc
lcall
dec
mov
fwait
adc
rcrl
mov
scas
repz
push
andl
xchg
js
hlt
xchg
decl
enter
cmp
mov
jo
ja
lds
mov
adc
out
mov
dec
dec
stos
neg
jb
cmp
jae
out
pop
loop
and
pop
mov
inc
mov
lods
je
pusha
outsb
xchg
add
or
sahf
cmp
cmp
lret
cmpsb
lret
jmp
cmp
push
data16
lods
xchg
mov
add
add
or
and
and
mov
jge
fimull
jae
fidivl
pop
mov
in
pushf
jns,pn
mov
ficompl
jmp
sahf
dec
lods
loopne
popf
fimull
pop
cld
sub
sbb
xor
mov
lcall
out
push
inc
lods
icebp
daa
lret
mov
mov
adc
lahf
xchg
clc
insb
sti
leave
xchg
loop
push
sub
adc
push
sbb
out
aam
in
bound
jo
xlat
sub
mov
mov
add
sbb
mov
mov
push
cmpb
jae
andb
sub
mov
push
jb
adc
dec
adc
rcrl
jne
cmp
jl
imul
pop
rol
mov
push
jl
call
pop
dec
push
dec
add
into
push
sub
das
push
mov
pusha
sbb
lods
movsb
jecxz
and
inc
jecxz
fucomi
pop
cld
pop
mov
sti
lcall
scas
sbb
sbb
adc
mov
std
xlat
jecxz
sar
popa
or
in
jo
bswap
fidivs
sub
lock
inc
outsl
push
inc
popf
in
add
sbb
inc
xchg
loope
cld
cmp
lock
adc
xchg
adc
jmp
pop
std
lret
adc
adc
adc
mov
lock
mov
sbb
cmp
xor
sbb
or
dec
scas
mov
cs
mov
pop
bound
enter
pop
jnp
cmp
fisttpll
imul
orl
hlt
jno
push
mov
xchg
enter
cmp
in
xchg
inc
push
mov
mov
out
rcrl
daa
lds
mov
mov
fcompl
xchg
add
jge
outsb
xchg
stos
push
les
pop
loop
arpl
fisttpll
pop
mov
dec
insl
xchg
push
sbb
push
arpl
push
cmpsb
call
into
jno
cli
mov
inc
popf
pop
in
cmp
xor
and
sub
jb
cld
adc
xor
push
es
mov
fidivrl
add
sti
pushf
mov
cmp
pop
popf
fcoms
sbb
adc
jle
mov
mov
mov
add
adc
mov
je
sub
xchg
hlt
nop
notl
jle
and
xchg
sbb
pop
jb
inc
mov
sub
adc
arpl
sahf
sbb
inc
cmc
sub
cmp
cli
xchg
pushf
dec
pop
movsl
sahf
xchg
repz
jge
push
sub
movl
pop
pop
mov
mov
fcoml
iret
scas
into
int3
aaa
out
loop
sub
cmp
jecxz
sub
jae
sub
aam
int
dec
test
scas
xchg
push
cmp
sbb
ret
popa
push
insl
add
aad
pop
mov
test
hlt
loop
cs
mov
xchg
std
shlb
pop
insb
adc
or
repnz
sbb
daa
mov
call
and
outsl
mull
into
mov
dec
mov
lds
adc
pop
popa
inc
sub
outsb
int
dec
xchg
mov
pop
mov
frstor
or
jl
sti
pusha
xchg
ds
mov
ds
sub
pop
sar
mov
imul
in
or
xchg
mov
das
test
lea
dec
sbb
lods
push
out
addr16
xchg
hlt
pusha
nop
fimull
add
inc
ljmp
cmp
mov
imul
fcomp
xlat
and
xor
mov
jbe
je
rorl
lret
lea
addl
mov
lds
ret
inc
sahf
sub
xchg
mov
mov
rcll
adc
aas
outsb
jmp
cmpsb
pop
dec
lea
mov
decl
icebp
sbb
add
andb
xor
aam
outsl
or
lcall
popf
notb
inc
insl
or
lds
mov
imul
xchg
sub
iret
outsl
mov
movsb
outsl
sbb
scas
sub
mov
cmp
std
cmpl
ja
adc
pop
shll
and
mov
pop
and
icebp
lods
dec
scas
mov
and
cmp
fstpl
inc
test
cmc
inc
mov
inc
insl
sarl
cmc
shl
pop
call
fcmovnb
scas
mov
inc
mov
repnz
in
shlb
inc
mov
lock
and
jo
sub
fldl
outsb
xor
sbbb
repnz
aaa
out
fbld
and
cmc
or
add
sahf
divl
aad
shll
sub
inc
test
lahf
adc
jae
inc
lds
int
mov
bound
dec
iret
xchg
imul
mov
and
aam
pop
and
aam
call
or
addl
mov
stos
jl
aas
inc
stc
test
pop
push
aaa
add
push
insl
lret
jp
mov
iret
loope
or
push
popf
jg
pop
mov
lret
xor
fsubrs
flds
or
aas
mov
jecxz
aad
cwtl
fidivrs
ja
sti
xor
mov
rcr
mov
xchg
mov
fwait
lret
daa
jne
push
dec
stos
ret
pusha
jg
sbb
lahf
ds
in
fistl
loope
das
pop
jne
xchg
push
enter
lods
cmc
xchg
sar
in
scas
pop
xchg
or
or
xchg
adc
imul
jl
add
cmc
mov
push
scas
push
lcall
cmpsl
push
les
cmpsb
push
mov
inc
movl
loop
adc
daa
cmc
cs
nop
fs
add
jne
jno
pop
add
inc
mov
out
aaa
jp
dec
repnz
mov
adcb
adc
inc
jnp
inc
xchg
in
mov
out
jmp
jae
cmp
fidivrs
call
mov
pop
inc
lret
lahf
inc
pop
xor
cmp
hlt
adc
movsl
lahf
cltd
jmp
mov
xor
lcall
push
xor
daa
sub
dec
inc
and
inc
jo
mov
ret
loopne
mov
fldlg2
mov
push
xchg
and
mov
hlt
mov
mov
aaa
in
dec
sbb
lea
dec
pop
stc
xchg
sbb
mov
cmc
adc
popf
rcl
cltd
arpl
sarb
jno
jge
loope
pop
mov
dec
push
test
sbb
out
outsl
xchg
shrb
leave
out
arpl
jns
adc
or
call
cmp
js
scas
xor
cmp
push
xchg
inc
les
sub
dec
popf
xor
fdiv
xchg
and
xor
sub
les
and
xlat
arpl
dec
add
flds
hlt
pop
or
mov
pop
sar
lock
mov
or
sub
das
iret
cmc
jecxz
adc
imul
cmp
icebp
jo
stos
lods
push
ss
add
bound
int3
fucomip
push
aam
lea
jp
pusha
aad
imul
dec
orb
bound
es
jne
dec
cmp
jns
and
adc
loop
jns
xchg
inc
mov
mov
out
add
ljmp
adc
cld
fcmovne
mov
gs
mull
or
adc
push
cmpsl
inc
in
push
aas
push
sbb
mov
test
ljmp
cmc
out
mov
std
or
push
or
mov
arpl
mov
cmp
push
ds
out
xchg
jae
test
push
dec
inc
mov
daa
fwait
jmp
cmp
jecxz
adc
addr16
mov
cmpsl
and
pop
xchg
fwait
pop
cmc
xchg
sub
push
sti
mov
pop
arpl
dec
je
xchg
inc
filds
mov
push
aam
in
or
adc
xor
xchg
gs
or
stos
mov
pop
add
test
xlat
mov
dec
out
std
xchg
jge
sbb
rol
test
fisttps
testl
rcrb
xchg
cmpl
jb
ss
das
jge
lods
lcall
notl
pop
int3
popa
cmp
int
or
inc
lds
clc
jecxz
mov
pop
in
push
lods
inc
jecxz
add
ja
lret
scas
push
or
ss
push
lcall
xor
dec
shll
adc
inc
leave
dec
stos
daa
out
adc
outsb
and
add
fidivrl
inc
out
dec
scas
stos
ds
cmp
pop
movsb
loope
mov
ljmp
inc
or
xchg
stos
cmpsl
sub
jmp
fs
and
xchg
pusha
divb
add
or
or
xor
adc
mov
outsb
dec
xor
pop
imul
mov
sbb
outsl
dec
and
arpl
jecxz
jo
jg
pop
incb
and
jne
add
leave
cmp
imul
popa
mov
add
push
adcl
emms
xchg
add
xchg
jne
dec
mov
loop
mov
xchg
cltd
fcmovnbe
dec
adc
add
test
rcrl
mov
inc
call
push
jg
add
add
test
mov
mov
mov
adc
and
adcb
mov
pop
fldenv
test
fdivs
jne
cmp
and
cmpsb
adc
mov
bound
cmc
mov
pop
push
into
xchg
cs
pop
bound
aad
pushf
ds
addr16
cmp
shl
clc
lcall
int3
scas
xchg
mov
mov
xchg
pop
or
mov
pop
js
mov
cmc
inc
insl
jecxz
dec
push
sbb
call
pop
lods
ljmp
popl
dec
mov
pop
fistps
jecxz
divl
inc
out
push
jns
xchg
dec
sub
mov
sti
in
cld
xchg
in
test
aam
push
ret
out
popa
sub
jmp
pop
push
addr16
dec
mov
jo
xor
test
std
mov
pop
or
dec
bound
pop
jno
scas
cmc
pop
or
sub
lds
mov
sbb
enter
in
cmpsl
lret
mov
mov
daa
imul
or
jg
je
adc
xchg
aam
mov
int3
or
stc
cmp
orb
mov
xchg
shlb
sub
push
mov
in
or
aam
stos
sub
pop
aas
pop
mov
inc
dec
out
lds
xor
xchg
xchg
mov
inc
inc
push
test
fildl
stc
or
aam
into
aaa
fdivl
lds
push
das
fs
sub
hlt
sarl
daa
dec
mov
je
pop
clc
mov
inc
sub
cld
clc
jle
pop
lods
adc
jecxz
xchg
pop
lock
xchg
in
mov
jo
loopne
mov
mov
fadd
jbe
mov
cmpsb
test
push
gs
dec
gs
dec
sbb
rcrl
xor
xchg
add
cmp
pop
inc
adc
loop
mov
mov
xlat
pop
popa
dec
cltd
push
js
int3
push
test
lcall
adc
xor
sub
aad
scas
push
stos
inc
loopne
mov
push
lret
rcrl
add
mov
outsb
mov
inc
cmc
fwait
test
loopne
stos
sbb
leave
jbe
notb
pop
jecxz
or
movsl
insl
mov
dec
inc
sbb
xor
andl
add
jmp
cli
rorb
dec
stos
push
push
push
push
mov
stc
push
aam
aad
sub
ja
dec
mov
xor
fisttpll
andb
mov
js
or
push
lcall
movsb
scas
mov
in
jg
push
imul
dec
adc
xchg
mov
or
push
dec
int3
push
fbstp
nop
jl
ror
fsubs
xchg
add
outsb
ja
jmp
inc
mov
in
mov
mov
das
jge
aas
int3
fiadds
idiv
and
and
add
push
test
ret
xchg
ja
adc
daa
push
jae
jb
dec
sbb
jl
out
mov
mov
imull
cmp
mov
adc
xchg
add
inc
sub
sub
adc
sbb
jns
in
adc
mov
imul
cmp
sub
js
out
outsl
jnp
jmp
push
mov
xor
repz
dec
popl
mov
je
lods
mov
movsl
fcmovne
fistpl
popf
inc
loopne
aaa
cld
add
leave
outsl
iret
out
mov
xor
cmc
int3
arpl
push
ffree
insb
addr16
aam
fistps
sti
sbb
mov
sbb
rol
dec
ret
add
and
lret
addl
push
pusha
popf
push
xlat
push
adc
push
pop
pop
int
pop
ss
jg
adc
push
mov
lret
insl
hlt
out
mov
or
std
bnd
or
and
push
mov
lods
in
and
push
fwait
jno
les
adc
inc
aam
jmp
repz
fidivrl
push
pop
mov
sbb
scas
xchg
popf
test
aam
mov
jns
push
scas
xor
iret
popa
loope
popa
xchg
pop
in
out
pop
loope
add
scas
xor
add
sub
sub
sub
jecxz
cli
jae
and
sahf
pop
push
adc
imul
jl
pop
mov
and
enter
fwait
mov
fdivrs
mov
call
ficoms
cmc
aad
jns
insb
aas
mov
mov
push
dec
sbb
mov
pushf
jno
std
dec
pusha
xor
leave
xor
adc
ret
pushf
jle
cmp
xchg
mov
mov
imul
xor
mov
sub
cs
xlat
cltd
das
jae
pop
pop
notb
dec
push
pop
inc
mov
flds
leave
or
inc
jge
push
xchg
sbb
dec
outsb
std
dec
cmp
cmp
aas
lods
in
inc
data16
fcomi
sti
mov
shrb
int
lock
test
cli
jl
inc
icebp
ja
cmp
ret
push
fimuls
sub
dec
inc
and
mov
pop
pop
js
pop
mov
into
mov
popa
push
jle
lret
in
in
int
sbb
movb
dec
jecxz
fstl
jg
cmpsb
ret
sbb
aad
mov
or
aas
pop
jno
add
aam
push
xlat
fst
and
and
add
sbb
dec
inc
push
cmp
cli
movsl
cmp
xor
sbb
or
pushf
mov
mov
arpl
jge
ds
aas
pop
sbb
pop
sbb
imul
loope
sub
or
mov
sub
movsl
push
out
fmulp
or
jmp
adcb
imull
mov
push
mov
enter
push
aaa
cmp
mov
xchg
adc
inc
lods
in
cmpsb
push
rolb
faddl
aad
push
pop
xchg
shl
push
or
xchg
mov
loope
es
les
out
ds
aam
cltd
test
outsb
pop
xchg
les
mov
shll
int
movsl
xor
sub
cmp
pop
loope
push
jge
fcmove
enter
loop
loope
add
pop
mov
lret
repnz
arpl
insb
imul
mov
push
mov
int3
push
lret
lret
add
inc
or
and
notl
xor
in
and
xlat
adc
fdivrl
mov
mov
imul
nop
into
sub
icebp
jne
jmp
ss
mov
out
popf
jo
stc
xchg
sbb
les
ret
fmulp
sub
incl
xor
add
sbb
inc
loopne
enter
cmp
inc
pusha
movntps
cld
aaa
cmc
sub
push
xor
lret
and
dec
sub
sbb
addr16
mov
dec
jo
jle
or
pop
jne
andl
test
mov
rcl
jno
and
adc
push
lcall
int
hlt
xchg
xchg
pushf
in
pop
popa
insb
or
in
xor
inc
lods
pop
out
iret
mov
or
sub
mov
fdivl
adc
out
and
std
arpl
adc
mov
sbb
ret
in
stc
inc
fisubs
popf
mov
out
das
inc
sub
int
ja
add
adc
inc
enter
loope
es
xchg
xchg
inc
les
and
mov
adc
xlat
jne
pop
ffree
mov
mov
iret
icebp
lahf
call
xor
out
xchg
mov
orb
lock
shll
in
ret
mov
jns
push
push
outsb
lret
insl
xchg
push
test
dec
push
jo
fstl
adc
outsb
xor
sub
mov
adc
cmp
or
xor
push
notb
test
mov
mov
cmp
movsl
sub
int
in
inc
push
stos
lret
mov
inc
add
insl
test
out
add
fstpl
ret
gs
or
fildll
int
push
in
dec
aas
inc
xchg
adc
mov
cmp
push
mov
xor
xchg
jne
stos
cli
sti
out
shrb
pop
pop
int
push
add
aad
adc
push
sbb
adc
mov
add
das
dec
jbe
mov
push
push
inc
or
decb
arpl
cs
mov
jmp
inc
clc
jmp
cmp
mull
cltd
andb
or
stc
ljmp
dec
fsubs
mov
dec
xchg
jl
mov
movl
cmpsl
jge
outsb
jmp
fwait
jo
cmp
cld
mov
mov
shlb
aam
rep
incl
lret
sahf
roll
mov
push
cmpsl
mov
out
roll
out
cmpsb
fstpt
leave
pop
inc
addl
xor
ljmp
lahf
and
ret
push
sbb
pop
jno
or
mov
cmp
jne
push
ljmp
inc
push
in
ljmp
xor
push
aaa
cmpsb
cmp
loop
std
xor
cmp
lds
aas
cmpb
int
push
in
jp
aas
add
jmp
cli
aad
sbbl
sbb
sbbl
sub
push
popa
hlt
ljmp
ds
bnd
push
sub
jo
mov
dec
aad
push
stos
jmp
leave
mov
jge
pop
fdivl
in
aas
int
rorl
push
mov
inc
mov
cmp
push
jp
cmp
mov
lea
xchg
sub
adc
push
xchg
adc
popa
test
xchg
and
das
movntq
loop
adc
fsts
pop
inc
or
cwtl
xchg
jnp
sti
dec
popf
ret
add
inc
and
insl
out
mov
cmpl
les
mov
out
enter
and
xchg
push
cs
or
lea
sub
aaa
sub
fsubrs
sub
data16
mov
and
sbb
aad
scas
cmpsl
lret
pop
jae
movl
mov
lock
or
jns
xor
repnz
pop
dec
and
mov
es
cs
mov
daa
in
andl
jb
jnp
lcall
aad
mov
pop
das
in
iret
adc
stc
mov
lock
andb
mov
and
cwtl
mov
adc
pop
and
lcall
lds
xchg
adc
out
push
outsb
repz
cmpsb
and
daa
inc
fistpl
imul
jmp
ja
mov
xor
std
sahf
hlt
pushf
cmp
pop
in
jle
xchg
or
sbb
stos
cwtl
mov
sbb
jmp
and
mov
les
in
lea
adc
sbb
jecxz
in
push
shrb
mov
daa
lahf
cld
sub
pop
or
lods
and
inc
je
int3
push
push
adcl
mov
arpl
cltd
xor
ds
inc
gs
sbb
xchg
into
mov
push
fcoml
repz
jl
adc
jp
inc
xor
fimull
aad
dec
in
or
or
ficoms
aas
movsl
jnp
mov
xchg
jno
bound
jb
jmp
lods
push
jl
scas
aas
dec
mov
push
ret
pop
add
and
xor
ss
arpl
cmpsl
mov
test
sbb
andl
frstor
les
lock
xchg
jnp
sahf
fstps
mov
sbb
jecxz
fst
loop,pn
fadds
mov
stos
xchg
inc
xchg
stos
dec
dec
loop
rol
bound
xor
scas
unpckhps
shlb
dec
cld
push
pop
cltd
frstor
inc
xchg
es
or
jae
es
pop
xor
faddp
iret
mov
outsb
jnp
leave
adc
and
cltd
sub
test
enter
subb
mov
xorl
sbb
adc
iret
fistps
adc
into
and
cltd
sbb
adc
lret
test
lds
add
and
icebp
jne
or
psraw
and
ss
add
in
icebp
pop
insl
cmp
sub
sbb
jne
xor
inc
rorl
out
sbb
rcrl
add
lea
pop
mov
push
mov
daa
lcall
and
xor
lcall
push
cmp
lret
xchg
ja
aaa
push
jg
ret
cmp
imul
cwtl
xor
push
or
inc
xor
add
sbb
sub
pushf
inc
fdivl
rcrb
jnp
scas
adc
push
sarb
cli
sarl
outsl
mov
sbb
aam
inc
mov
jae
es
fs
mov
ja
sbb
dec
dec
add
xchg
push
sahf
in
mov
and
push
jne
push
outsl
in
cmp
ss
jg
jge
nop
dec
mov
and
or
dec
testb
lds
les
movsl
stos
out
cmpsl
jne
shl
jo
push
test
inc
jnp
popf
xchg
mov
fwait
sar
sbbl
inc
les
cmp
test
sfence
cmp
lods
mov
imul
push
pop
jl
gs
aaa
push
popf
repz
xchg
out
cmpsb
jecxz
and
shl
jmp
fmull
mov
bound
pop
jge
and
adc
sub
outsb
xor
das
xor
gs
aam
adc
mov
stos
lds
cli
aad
add
outsl
into
pop
pop
hlt
mov
xlat
imul
xchg
lret
mov
std
push
sub
das
mov
cmp
dec
ja
int3
xchg
xor
xor
dec
cmpsb
jecxz
and
aam
inc
push
scas
shlb
push
dec
lods
aaa
cmp
dec
adc
dec
mov
pop
pushf
mov
cmp
gs
pusha
jl
iret
dec
push
lcall
or
leave
mov
invd
cwtl
out
cwtl
enter
into
xchg
jecxz
test
ret
sbb
and
pop
inc
and
push
lcall
jle
xchg
or
subl
insl
aad
jecxz
int
gs
jb
cmpsb
add
sbb
pop
push
jge
sti
ja
shlb
inc
movsl
vpaddq
mov
ret
into
xor
or
and
cli
sbb
cli
dec
inc
call
dec
xor
push
pushf
mov
or
sbb
stos
push
adc
out
clc
lcall
inc
jo
add
inc
sub
jno
or
test
adc
lods
fistl
cmpsl
cwtl
inc
jl
lea
shrl
pushw
imul
ret
movsb
jae
push
iret
lret
inc
cmp
call
fstpl
fsubrs
mov
out
xchg
xor
inc
push
out
lahf
dec
and
push
shl
andl
ss
hlt
xor
fs
aam
daa
xor
mov
clc
call
out
les
pop
ds
das
dec
xchg
out
mov
test
fchs
jae
cltd
xchg
mov
sbb
mov
cmp
lds
mov
mov
popf
loopne
pusha
mov
pop
xchg
xor
dec
add
dec
add
ret
xchg
gs
pop
outsb
add
cli
adc
rcll
adc
or
xchg
or
or
add
xor
sub
outsl
xor
xlat
cmp
xchg
cmp
loop
lcall
mov
hlt
test
xlat
loopne
lcall
out
or
xchg
imul
jmp
push
hlt
dec
mov
sub
and
xor
inc
pop
mov
add
addr16
sub
dec
imull
fs
enter
lods
cs
std
loopne
out
fsts
pop
mov
popf
push
push
jo
adc
cmp
or
popa
stc
inc
push
cmp
sahf
fs
std
mov
jae
xchg
int
lds
dec
aam
jbe
enter
lret
lahf
xchg
nop
inc
xlat
stos
mov
mov
mov
pop
jmp
jl
adc
dec
pop
pop
cltd
fdivs
xor
loop
jb
faddl
test
dec
adc
aaa
out
hlt
dec
cmpl
jnp
xadd
mov
xor
jmp
mov
inc
pop
mov
js
out
jg
sti
shll
int
xchg
cmp
fwait
arpl
mov
jp
jnp
jge
test
push
sub
mov
mov
mov
popf
add
cmp
or
jecxz
jmp
test
jae
negl
insb
std
jp
push
out
lret
in
lods
xorl
mov
test
jnp
out
mov
test
in
js
fildl
jg
call
lock
ficompl
out
push
xor
xchg
lret
xchg
xor
outsl
xchg
cmp
int
mov
and
inc
lcall
mov
push
jp
js
mov
inc
iret
dec
fsubrp
addl
clc
sub
mov
out
mov
and
inc
daa
loop
jge
add
mov
fadds
jnp
stos
lods
scas
int3
mov
lods
mov
clc
jge
and
das
adc
mov
inc
add
les
pushf
xchg
push
imul
lock
mov
aad
loopne
adc
mov
dec
repnz
sbb
jo
stos
or
int3
pop
sahf
mov
pop
in
std
popa
mov
fucom
sub
stc
add
lret
fldln2
adc
cmp
data16
xor
mov
xor
dec
ror
imul
lret
mov
add
xchg
jae
lret
push
jb
add
pusha
shld
pop
loop
mov
mov
push
jle
sub
sbb
in
movsl
and
in
movsl
cmp
and
inc
jl
imul
and
xor
mov
mov
dec
gs
lock
fdivs
nop
mov
clc
arpl
cmp
lret
in
sbbl
pop
div
jecxz
popa
in
add
sbb
jns
adc
xchg
mov
xor
adc
jnp
pop
cmp
stos
mov
outsb
xor
jns
inc
movsl
stc
mov
insb
pop
daa
movsb
lahf
nop
fistpl
add
je
sbb
test
xchg
iret
pop
fwait
xchg
pop
mov
push
aam
dec
dec
sub
icebp
addr16
inc
or
ret
push
jbe
in
adc
ret
adc
and
add
add
cmp
test
lcall
pop
xchg
pop
rclb
pop
in
or
cmp
hlt
and
and
jl
mov
jmp
rclb
adc
adc
sti
jge
ficoms
adc
add
cld
psubw
lret
cmp
into
push
in
notb
cmpsb
jp
push
push
sub
push
pop
clc
in
lcall
jp
xchg
call
out
add
sub
inc
jb
rcrb
add
add
fsubrs
int
in
loop
inc
scas
addr16
mov
imul
adc
inc
test
push
call
into
insl
xchg
cmc
in
outsl
and
lock
adc
add
dec
pushf
nop
adc
fisubrl
sbb
mov
jmp
or
or
daa
loope
jge
inc
mov
mov
mov
pop
fs
movsb
pushl
mov
mov
arpl
fs
je
xchg
pop
jle
fidivrl
cli
push
adc
mov
xchg
inc
mov
xor
leave
xchg
ret
sahf
rorl
fs
sbb
jp
xlat
inc
or
add
adc
gs
jg
mov
and
jg
inc
push
push
inc
xor
cld
cmp
inc
loope
in
xchg
cs
out
int
pop
data16
outsb
inc
enter
outsl
shrb
rcrl
xor
sbb
aam
movsl
sub
aam
jmp
xor
enter
idiv
ja
push
cmp
mov
dec
inc
xchg
cs
mov
mov
psllw
push
or
jbe
push
imul
and
add
divb
push
mov
imul
cli
adc
jnp
cmpsl
jb
xor
icebp
movsl
inc
cmp
ds
push
in
jmp
lcall
repz
inc
adc
add
dec
inc
js
pop
sub
inc
lds
cmpsb
into
inc
ret
or
int3
cmp
cmp
xchg
lea
sub
rcr
fldpi
jbe
cmpsb
push
fsubr
pop
scas
gs
outsl
xchg
loopne
xor
icebp
xor
jnp
cmp
shrl
inc
push
sub
pop
dec
out
rorb
cmp
sahf
cwtl
lea
sbb
ds
enter
out
mov
sub
push
cmp
sub
adc
sbb
adc
adc
fwait
pop
xchg
xor
int
cmp
jo
shl
jecxz
xchg
leave
adc
cld
sub
mov
sub
pop
sub
stos
add
stos
push
and
push
and
jns
je
xlat
adc
jns
jno
fcoml
sub
stos
add
inc
popf
ret
xchg
fcompl
test
fsts
sbb
sbb
nop
clc
nop
outsl
dec
neg
aas
dec
xor
xchg
shrb
pop
cli
fisubs
dec
adc
mov
clc
addb
mov
stos
cmp
sub
sbb
je
push
dec
sub
pop
icebp
adc
cmp
xor
cmp
je
dec
cltd
pushf
sbb
loopne
out
jge
mov
sahf
testl
sbb
sahf
add
cmp
addl
js
mov
and
dec
and
fstl
repz
jno
stc
je
test
and
iret
jecxz
bound
xchg
dec
mov
inc
pop
ljmp
push
inc
and
inc
and
nopl
mov
xchg
cwtl
mov
movsl
push
lahf
mov
mov
out
outsl
cmp
push
fistl
jl
sub
rorl
sbb
cmpb
mov
xor
shl
add
push
lcall
jno
lods
pop
fdivs
std
test
shll
inc
jecxz
js
gs
push
or
sar
cli
cs
out
push
jmp
in
or
cmc
xor
xor
fldt
es
pop
fsubrs
pop
stos
adc
fwait
sbb
nop
add
pop
and
cmp
inc
movsb
sbb
jp
test
jge
divl
aad
sub
sahf
in
inc
ljmp
lds
dec
dec
pop
cmc
jmp
xchg
repnz
inc
cmp
rorl
pop
push
orb
cs
adc
xchg
arpl
mov
mov
lret
and
pop
das
add
or
add
fistpll
mov
mov
fidivrs
jnp
sarl
or
adc
rolb
or
xchg
mov
call
xchg
fwait
scas
xchg
addr16
mov
mov
stc
mov
pusha
or
nop
and
loopne
inc
pushf
jge
clc
sbb
and
dec
mov
push
xor
popa
aaa
push
xchg
mov
insl
cmp
decb
js,pn
dec
les
sbb
loop
fimull
sbb
pop
andb
pushf
cs
xor
aas
push
fidivl
sarb
popl
jo
mov
jnp
into
xor
cmp
jle
mov
aam
pop
or
sub
leave
mov
fimuls
xor
adc
insb
pusha
dec
ja
movsw
popa
call
pop
movsb
int
fdivs
fildll
cs
imul
mov
repnz
movsb
push
mov
adc
out
cwtl
mov
cs
nop
mov
pop
mov
fisttpll
enter
adc
bound
jb
les
lods
call
sbb
ret
inc
adc
pop
fistpll
dec
ja
dec
test
testl
cmpsb
neg
adc
xchg
stc
pusha
idivl
dec
leave
mov
mov
jb
gs
jmp
lret
mov
xchg
jmp
mov
icebp
mov
xor
test
into
test
out
pushf
popa
inc
push
pop
into
jle
hlt
in
ljmp
xor
pusha
icebp
sbb
dec
lods
pop
jne
cmp
mov
es
mov
pop
cmp
jnp
mov
cmp
repnz
aam
jl
cmp
aad
mov
sbb
push
daa
xorl
sbb
ret
fcompl
outsl
aaa
jle
mov
or
cmp
mov
lea
lret
cmpsl
lcall
sub
ss
push
sahf
xchg
cmp
rcrb
filds
mov
ror
ja
or
pop
sub
cltd
adc
sbb
push
adc
add
sarl
inc
pop
push
mov
pop
dec
jp
fs
push
cltd
fiaddl
xor
call
lret
xchg
mov
es
add
mov
mov
pop
sbb
test
mov
mov
mov
popf
push
loopne
jno
outsb
lds
int
xchg
push
testb
nop
imulb
test
test
addl
sub
jmp
mov
mov
daa
cmp
into
aaa
pop
cmp
adc
neg
roll
lods
and
push
out
enter
pop
jecxz
mov
adcb
mov
xchg
repz
sbb
pop
int
sub
push
cmpsl
jae
insb
xor
and
jae
shll
adc
insb
popa
popa
loope
cmp
test
sahf
xchg
mov
and
or
push
inc
pop
repz
xor
xlat
and
dec
aas
and
push
mov
sbb
inc
shll
loope
leave
and
notl
vpavgw
imul
lock
mov
xchg
das
frstor
in
pop
mov
popf
les
push
pushf
cmp
imul
pop
xchg
mov
sbb
jb
dec
ret
insl
stos
mov
out
jp
cmp
mov
stos
push
out
dec
sub
cltd
inc
pop
jno
sti
out
push
mov
adc
neg
xchg
dec
shrb
push
pop
push
inc
hlt
in
js
popa
sub
aas
and
fwait
mov
inc
mov
loopne
jmp
sbb
cmc
mov
mov
xchg
dec
leave
push
xor
jno
loopne
jge
mov
sub
shlb
stos
popa
movsl
cmp
iret
fndisi(8087
fcmovb
gs
and
in
push
pop
shrb
lods
cwtl
sub
jo
in
ljmp
fdivrs
sarb
mov
sbbl
mov
jae
out
lahf
xlat
jb
jle
push
jno
scas
inc
jl
fs
jl
sbb
push
and
clc
shll
sub
xlat
pop
sbb
shrl
jmp
xor
rcrb
sbb
xor
mov
pushf
add
jg
xchg
sbb
inc
cli
sbb
js
sbbb
push
cmp
icebp
lods
xor
and
std
int
out
cmp
mov
das
sahf
add
mov
push
test
pop
int3
sub
jbe
pop
mov
dec
aaa
test
push
jb
jp
scas
popf
or
adc
pop
mov
popl
rorl
add
jl
mov
stos
mov
push
mov
divb
jbe
mov
lods
push
int
sahf
sbb
fcmovb
into
dec
mov
cmp
mov
insl
jge
push
loopne
ja
inc
and
sbb
subl
jmp
xorb
mov
inc
sti
ret
and
or
and
sbb
lahf
test
outsb
dec
mov
lea
push
mov
and
cmp
js
dec
add
xor
xchg
push
mov
fnstcw
pop
or
mov
or
sahf
in
in
push
mov
loop
test
jne
in
mov
les
stos
sbb
or
repz
xchg
mov
xchg
imul
sub
and
dec
push
add
les
out
inc
add
std
loope
sbb
rcrl
push
xchg
rclb
pop
int3
mov
dec
inc
inc
sub
mov
lds
xchg
cmp
into
mov
hlt
fwait
setb
mov
lea
inc
mov
pop
add
xchg
or
push
mov
imul
dec
lock
pop
jbe
pusha
push
stc
xorl
jae
cmp
xlat
pop
out
dec
cmp
imul
pusha
shll
pop
jb
push
mov
pop
in
xor
push
pop
dec
adc
cld
outsb
popf
pop
xchg
inc
mov
pop
hlt
out
loop
push
push
or
nop
push
xchg
dec
adc
or
jae
and
dec
stos
arpl
xor
mov
sbb
push
xchg
lea
aaa
out
sar
mov
or
fildll
lea
and
movsl
push
xor
adc
jp
cld
fidivrl
add
adc
mov
call
mov
push
call
sbb
lret
lret
mov
jb
es
dec
push
pop
imul
inc
data16
shll
sub
jns
mov
popf
outsb
fcmovu
aaa
cmpsb
inc
enter
lret
xchg
xor
xchg
dec
sbb
xchg
mov
or
sti
dec
test
mov
cs
dec
pop
push
and
push
popa
sbb
mov
pop
imul
fdivl
aam
mov
roll
push
xor
ret
repnz
hlt
add
gs
inc
int
adc
ljmp
movl
icebp
or
or
leave
mov
hlt
add
rcrl
loop
pop
fistpl
test
cltd
mov
adc
fsubrs
push
bound
cmpsl
xor
test
jecxz
jne
inc
cvttps2pi
pop
mov
push
jno
fildll
pop
sbb
movsb
xchg
sbb
sbb
jmp
cltd
xchg
pop
dec
lret
jg
cmp
add
cmc
adc
xchg
je
inc
push
stos
dec
nop
add
mov
pop
js
scas
and
stos
int
rcl
in
test
incb
push
outsl
pop
test
fsubrp
shll
stos
jl
sub
jmp
je
pop
inc
xchg
xor
xchg
sbb
rcll
ds
cmp
in
xchg
sbb
jnp
jae
hlt
imul
cwtl
rcrl
test
mov
repz
adc
dec
sub
mov
addr16
test
loopne
jnp
scas
jmp
mov
in
cs
mov
pusha
out
inc
pop
pop
test
mov
rclb
das
pop
lahf
mov
jo
adc
nop
repnz
fdivs
dec
dec
adc
subl
shrb
pop
add
mov
fiadds
pop
out
pushw
mov
pop
sbbb
jnp
xor
outsl
inc
jmp
lock
xchg
cmp
scas
mov
mov
and
outsl
inc
xchg
push
xchg
xorb
repz
popa
xor
decl
push
pop
xchg
lock
icebp
mov
int
int3
pop
stos
inc
cmpsb
lds
repnz
testl
ljmp
xor
mov
shl
repz
cmp
sub
outsb
push
add
push
jnp
jl
mov
pop
ret
xchg
mov
push
mov
shrl
test
std
mov
daa
or
stos
cli
fwait
add
notl
push
add
jne
fdivs
arpl
sub
inc
mov
mov
scas
arpl
sbb
dec
out
push
add
xor
into
out
daa
cmp
test
inc
clc
mov
mov
dec
into
xchg
fnstsw
sbb
fdivs
add
pop
mov
mov
push
aas
into
loopne
push
imul
cltd
adc
dec
addr16
ds
mov
push
aam
fwait
mov
test
pop
sub
aas
enterw
xor
adc
push
popa
cmp
cwtl
xor
movsl
mov
out
popa
jecxz
adc
jo
dec
add
dec
je
adc
inc
push
pop
xor
mov
decl
imul
mov
inc
cmp
xlat
popa
jbe
push
cmp
xlat
jl
push
int3
xchg
jmp
cmp
data16
insl
clc
lahf
repz
dec
iretw
hlt
mov
cmp
icebp
jbe
int3
repz
pop
into
jb
and
mov
je
iret
push
xchg
hlt
fs
sbb
aas
xchg
jns
sahf
push
insl
add
shll
mov
stos
jecxz
je
js
dec
pusha
mov
subl
daa
and
fildll
dec
pop
push
nop
lahf
outsl
lock
adc
mov
cmp
leave
mov
ds
fs
pop
sub
jecxz
pop
shrb
dec
jecxz
xor
lcall
mov
sub
gs
js
jb
in
int3
adc
insb
lcall
lcall
mov
inc
test
mov
movsl
fdivs
test
daa
sub
dec
scas
repz
lds
xchg
and
stc
aad
je
ret
mov
shrl
and
negb
dec
pop
dec
pop
push
inc
mov
cmp
nop
rcrb
xor
out
jg
dec
mov
or
push
push
aas
mov
lret
in
jns
ljmp
repz
lock
out
movsb
mov
in
cmp
daa
xor
stc
add
dec
jne
rorl
mov
test
xlat
ret
mov
push
inc
mov
mov
inc
mov
sub
jg
js
cmp
mov
jnp
pop
xor
push
and
nop
repnz
sub
push
push
insb
ljmp
jns
mov
mov
bound
std
cli
mov
jl
mov
push
xchg
xor
and
jo
xor
and
cwtl
xor
fidivrl
xlat
ret
cwtl
inc
push
xchg
shlb
mov
xlat
je
ss
lret
mov
mov
mov
push
shlb
repnz
mov
imul
mov
paddd
mov
jbe
jno,pn
push
adc
iret
mov
int3
inc
inc
fwait
cmpsl
lret
push
mov
jge
mov
ja
push
cmpsl
pop
cmp
mov
es
fldenv
lods
or
cmpsl
lock
scas
cmpsl
sti
cld
xlat
mov
scas
dec
adc
sahf
mov
cs
cmp
and
push
sbb
cli
popa
out
mov
inc
sbbl
push
inc
and
push
xchg
cwtl
clc
jle
hlt
int
xor
pop
shrb
sbb
stc
clc
nop
aas
std
mov
fidivrl
sbb
imul
icebp
xchg
out
rolb
fstpl
mov
or
mov
pop
ljmp
test
lret
xchg
mov
dec
mov
sbb
outsb
enter
fwait
cwtl
ret
jno
inc
cmp
cld
lahf
or
inc
mov
add
repnz
mov
scas
mov
inc
ss
clc
cmpsl
subb
cmp
js
sbb
xchg
insb
pop
adc
sbb
jno
es
pop
repz
sub
imul
xor
xlat
adc
mov
mov
cmp
mov
popa
jbe
decl
mov
pop
clc
movb
and
jb
jge
mov
cltd
or
les
rclb
pop
stos
add
dec
lea
mov
mov
mov
adc
insl
outsb
int3
mov
dec
std
add
add
sub
dec
cmpsb
push
je
bound
inc
jo
jp
ljmp
in
and
adc
add
cs
out
or
ja,pt
inc
scas
cmp
inc
or
inc
cmp
xor
fninit
imul
mov
repz
mov
cmp
aam
cwtl
cmp
aad
xor
cli
jbe
pop
and
lds
int3
sbb
or
sbb
les
leave
cmpsl
and
out
sbb
fmul
aas
mov
lahf
or
pushf
insl
cmp
dec
mov
adc
mov
outsb
and
outsb
pop
xchg
mov
icebp
ret
and
loop
lahf
mov
insb
gs
ds
mov
lods
xchg
dec
jmp
aaa
sbb
add
mov
cltd
sub
mov
jg
sbb
rcrb
xchg
loop
xchg
shll
in
sahf
mov
sbb
pop
sub
lods
lods
jecxz
lea
mov
jp
sbb
cmc
mov
cmp
ss
jp
push
mov
nop
hlt
in
and
xorb
mov
ret
pop
rclb
mov
loopne
fldcw
leave
mov
xchg
sahf
mov
or
sub
leave
mov
push
dec
loope
lds
mov
shll
fstpt
out
mov
inc
mov
insb
sahf
ror
rcr
jl
push
xor
out
ret
jns
adc
xchg
mov
jp
lods
out
push
aam
cmpsl
sahf
and
xchg
adc
pop
adc
pusha
pop
es
adc
add
cwtl
movsb
mov
mov
dec
push
xlat
bound
push
pop
cmp
imul
mov
arpl
lods
mov
cmp
arpl
jns
je
insl
pop
jle
sub
pop
fimull
fnstenv
or
push
jns
push
jmp
lods
mov
adc
mov
stos
or
mov
push
xor
scas
xchg
cltd
arpl
clc
pop
mov
cmp
scas
out
aas
xchg
test
aam
je
sub
mov
xchg
fxam
roll
push
in
in
insb
adc
or
mov
inc
jge
aaa
ljmp
orl
lret
dec
sub
push
dec
mov
gs
push
dec
mov
mov
push
xchg
dec
lods
cmp
and
fldl
push
push
icebp
inc
mov
push
movb
test
js
jo
leave
add
sbbb
sub
rolb
stc
in
movsl
jmp
mov
loop
xorb
dec
or
xor
adc
push
xor
jmp
pop
cld
and
fisubrs
jo
adc
bound
icebp
jecxz
data16
sahf
sarb
jmp
mov
in
add
adc
push
pop
aas
ljmp
js
sub
jb
sbb
xor
hlt
cmpb
notl
cmc
and
mov
cmpsb
fdivl
cmp
imul
push
ss
or
mov
popa
inc
mov
aam
js
stos
cmp
push
xchg
xchg
jecxz
aam
mov
mov
sarb
adc
cld
push
es
inc
int
loopne
call
mov
fisttps
mov
cmpsb
addr16
dec
and
dec
dec
into
mov
das
sbb
ret
or
insb
les
push
dec
js
dec
sbb
jmp
lea
push
daa
lcall
in
push
or
xchg
mov
in
cmp
or
and
stos
xchg
fldl
sbb
xor
and
cmpsl
inc
mov
js
or
stc
scas
mul
push
movsb
loopne
scas
add
sub
push
sbb
or
das
push
popa
dec
orl
mov
mov
aaa
xor
repz
bound
dec
and
insb
push
or
sbb
push
cmpsb
xor
mov
fdivl
sub
push
out
jle
cli
pop
lds
adc
dec
push
testl
test
pop
sbb
sub
imul
sti
icebp
jge
dec
maxps
sub
aad
daa
lret
cltd
dec
mov
cld
inc
adc
mov
mov
in
lcall
fidivl
add
jbe
push
testb
dec
jmp
adc
mov
lcall
dec
mov
push
scas
hlt
adc
sbb
enter
mov
imul
gs
pop
lret
fstpt
jle
in
dec
adc
in
mov
shll
int
lea
adc
add
xchg
in
adc
mov
push
ror
fwait
clc
push
xchg
cmpsb
or
jno
rcll
xchg
int
sbb
aaa
mov
sub
out
addr16
and
clc
mov
icebp
add
insl
call
test
int3
call
mov
sbb
add
cmp
mov
dec
xchg
insb
cmp
cmp
mov
stos
out
inc
push
fistl
dec
xor
outsb
loope
loop
rcr
inc
lcall
ljmp
adc
lahf
in
roll
or
push
and
rcll
cs
pop
daa
outsb
rep
pop
in
inc
mov
add
xchg
sbb
pop
test
and
call
push
or
fld
adc
mov
fcompl
mov
pushf
mov
rcr
sbb
dec
xor
andb
pusha
sub
xchg
ss
out
call
imul
cld
ret
outsl
in
cmp
ficoms
cmp
idiv
fsubp
cld
ljmp
iret
clc
add
jmp
popa
les
insl
sub
jge
in
ss
inc
mov
sbb
pop
pmullw
icebp
sub
shll
pop
add
data16
dec
pop
xor
pop
xor
sub
in
insl
test
int3
dec
insl
ljmp
push
pop
xor
push
jae
jae
xor
xchg
and
add
je
add
cltd
in
aad
ljmp
mov
inc
jp
movsl
mov
mov
lock
test
jnp
fs
dec
xchg
push
jo
cmp
mov
call
insl
cld
fnstsw
cli
push
xorl
lock
xchg
test
mov
clc
jbe
cmp
jmp
iret
sbb
jo
and
loop
add
or
lcall
rcrb
lods
fildll
pop
out
push
arpl
jp
je
mov
mov
mov
call
dec
mov
movsl
and
test
dec
test
std
scas
aam
ljmp
mov
add
xchg
pop
inc
add
mov
scas
add
enter
repnz
dec
addr16
push
aaa
int
xchg
mov
out
push
adc
push
aaa
adc
sbb
jns
mov
cmp
inc
lret
outsb
ljmp
xchg
into
add
test
bswap
jne
sbb
fucomp
enter
lcall
fcomps
sti
aas
fcmove
lds
mov
fdivrl
jecxz
cmp
mov
movups
dec
push
les
iret
in
push
mov
mov
mov
push
mov
shll
and
xchg
xor
dec
mov
das
adc
sbb
or
push
jbe
xor
inc
lds
fidivs
xlat
pushf
int3
dec
in
mov
dec
inc
jne
push
nop
sub
fwait
test
iret
jl
sti
adc
mov
cld
xor
xor
les
inc
mov
cmp
ret
stos
push
jp
pop
stos
jg
or
sarl
lret
dec
fcoms
lods
imul
loope
aad
xlat
repz
test
mov
push
es
xor
add
lea
imul
addl
mov
loop
sti
push
daa
add
mov
call
dec
cmc
cmpsl
daa
mov
dec
xchg
ljmp
sub
mov
cwtl
sbb
es
mov
test
push
leave
test
mov
mov
stos
test
adc
fbstp
fbstp
mov
push
push
fsubrs
addr16
cmpb
sub
es
push
in
loopne
xchg
or
outsl
fsub
test
inc
push
dec
jne
ret
pop
les
and
orl
hlt
in
cmp
cwtl
hlt
sub
pop
pop
leave
inc
mov
push
pop
imul
stos
cmp
cs
sbb
and
mov
mov
mov
sbb
dec
mov
and
adc
addr16
sub
mov
inc
std
cli
mov
das
stc
cmp
adc
sahf
sahf
dec
jmp
dec
xor
inc
pop
dec
loopne
test
pop
in
adc
pop
arpl
fsubrl
xchg
lock
push
jo
enter
mov
cmp
xlat
add
sub
or
fs
pop
lahf
jb
adc
rol
mov
dec
sarl
pop
mov
or
sti
sbb
rolb
in
mov
push
lahf
sbb
arpl
inc
and
insl
add
jnp
loope
je
mov
cmp
pop
jecxz
inc
sub
sub
add
stos
xchg
sbb
cmpsb
mov
and
cwtl
movsb
imul
xchg
jle
xor
ret
cmpsb
loop
arpl
pop
pop
jo
mov
jmp
jae
hlt
pusha
imul
push
lahf
pop
clc
push
call
lcall
cs
mov
sbb
repnz
cmc
loopne
mov
dec
addl
and
pop
sarb
cwtl
cmp
filds
pushf
xchg
jp
dec
mov
fcompl
out
and
insl
push
jle
sbb
call
jae
stc
or
inc
mov
mov
adc
mull
in
repz
leavew
decl
push
aaa
scas
inc
hlt
dec
or
cmp
pop
inc
jge
sbb
lret
xchg
out
and
add
das
sarl
push
dec
sar
xchg
dec
or
or
sub
inc
xchg
dec
mov
push
sbb
mov
xchg
lret
inc
mov
out
adc
hlt
aaa
add
lds
xchg
or
incl
test
aam
jp
clc
mov
cmpsb
cmpsb
sbb
cmpsb
xchg
jle
inc
sub
pop
inc
mov
xor
popf
pop
mov
lret
faddl
stc
sahf
add
xor
mov
mov
icebp
mov
inc
pop
and
fs
ds
inc
divb
pop
dec
xor
loop
rol
repnz
jmp
loopne
das
mov
out
inc
xor
sbbl
dec
cltd
xchg
fidivrl
inc
lret
popa
pop
roll
pop
outsl
inc
subb
sub
lret
push
mov
push
jbe
aas
icebp
xor
mov
ret
repz
sbb
outsb
ss
mov
jne
xor
push
fdivr
cmp
scas
adc
insb
mov
test
andb
lock
scas
or
mov
sub
sbb
dec
dec
and
ds
mov
fsub
lret
bound
ss
add
xchg
sbb
lods
pushf
in
xchg
xchg
push
pusha
push
fwait
rcr
pusha
sarb
nop
inc
icebp
cmpsb
das
stos
fwait
xchg
arpl
and
xchg
repnz
dec
pop
movsb
mov
cmpsl
in
add
adc
cmp
mov
jg
out
addb
fnstsw
rorl
lock
mov
jp
cmp
mov
int
loop
addr16
je
add
cmpsb
imul
jno
lahf
test
or
gs
mull
mov
jne
aaa
push
frstor
xchg
in
cmc
or
push
cmp
faddp
sbb
mov
mov
cmp
pop
outsb
adc
ljmp
push
pop
inc
inc
and
jle
and
clc
pop
gs
cltd
fsubs
adc
aad
sub
fidivs
pusha
jmp
js
jb
fldcw
adc
hlt
fdivs
aas
mov
test
addr16
add
shl
xor
xor
cs
xor
fiadds
fdivs
jp
jnp
push
leave
out
xchg
jnp
pop
sub
out
adc
arpl
cmc
jns
and
sbb
fdiv
push
subb
popa
sub
inc
xor
and
js
push
ds
inc
jle
out
aas
das
out
movsl
loopne
xor
mov
mov
subl
pop
mov
es
push
loop
pop
dec
sbb
movsl
das
lret
das
pop
or
fistpl
stc
jno
mov
dec
cmc
add
or
pop
enter
test
notb
data16
mov
cltd
jno
orl
cld
imul
dec
sbb
push
sub
xor
rcrl
and
lock
test
hlt
push
js
xchg
cmpsl
scas
rolb
push
jnp
cmpsb
lock
push
imul
mov
jp
push
xchg
and
jne
call
in
mov
jl
mov
enter
shlb
add
mov
cmc
fldt
mov
fstps
jl
jg
sbb
addr16
add
sub
or
push
fisttpl
pop
inc
xor
dec
dec
std
xchg
sbb
sbb
fdivrl
sti
test
adc
push
les
mov
or
sub
pop
mov
aaa
ficomps
mov
in
and
pop
cmp
push
dec
pusha
mov
testl
in
add
push
imul
adc
add
les
addl
cmp
mov
es
fdivrs
mov
jnp
dec
outsl
fwait
jno
fdivl
sbb
xchg
cli
add
fnsave
push
repz
in
pusha
sti
cli
mov
test
lock
arpl
sub
mov
je
cs
jo
mov
xchg
shlb
pop
popa
dec
xlat
adc
lods
je
push
into
push
mov
fiaddl
repz
js
cmp
rcrb
stc
jmp
loop
jg
outsl
scas
mov
insb
mov
repz
and
stc
xchg
andl
pop
out
stc
xchg
int3
icebp
or
push
inc
adc
add
pop
mov
adc
in
cmp
jno
mov
enter
jbe
push
push
push
outsb
sbb
std
mov
stos
icebp
fcmovne
fidivrl
add
inc
addr16
mov
pop
cmp
mov
dec
jge
cmp
sbb
jg
pop
cltd
mov
push
push
ja
in
cmp
jecxz
xlat
dec
jl
inc
cltd
inc
test
iret
inc
jnp
dec
sbb
aaa
dec
or
aas
add
push
mov
pop
add
mov
mov
fwait
jl
and
aad
jg
imul
fcmovnbe
cmp
loope
mov
mov
insb
jnp,pt
insl
cmpsb
lret
mov
int
loope
outsb
sub
pop
loope
ljmp
mov
out
cmp
push
cli
in
dec
dec
adc
loope
xchg
je
out
sbb
addl
or
xchg
stc
leave
sbb
sbb
xor
xor
js
dec
loope
inc
ret
ud1
xor
add
sub
das
cmp
and
daa
cld
or
rcrb
sahf
jae
push
xor
pop
movsl
sahf
mov
je
mov
jbe
rol
or
jp
cmp
cmp
mov
cmpsl
xor
cli
push
je
popa
xchg
std
lods
cs
mov
lahf
ret
mov
inc
test
mov
jo
mov
sub
push
sti
rcll
mov
mov
mov
cltd
fwait
push
movsb
outsl
outsb
or
insl
sub
adc
clc
push
iret
pop
dec
push
jno
jbe
ja
or
pop
mov
out
xorb
lea
in
pushf
jecxz,pt
notl
jne
out
scas
mov
sbb
jmp
test
jno
cmp
sbb
inc
mov
inc
fiadds
xchg
popf
call
lret
data16
stos
jge
push
into
fisubs
stos
or
sahf
inc
aas
jg
jno
cmp
sbb
add
mov
mov
push
sarl
sarb
sarb
inc
or
out
out
mov
sub
inc
sbb
popaw
lret
and
negb
dec
mov
bound
mov
lret
jmp
add
jnp
aad
and
addb
cmp
dec
dec
leavew
mov
pop
inc
lcall
mov
nop
sbbl
sub
or
les
mov
lock
cmp
sbb
popf
dec
inc
xchg
jnp
inc
inc
mov
cmp
mov
iret
popl
aas
in
ret
and
mov
enter
mov
loopne
mov
int
das
fmull
dec
jp
jp
and
lea
or
push
sbbl
sahf
sbb
and
adc
jp
xchg
outsb
dec
add
lcall
xlat
sarb
and
push
inc
inc
daa
add
rorl
push
or
movsl
jp
adc
or
lods
imul
fsubrl
pop
scas
into
dec
js
dec
xchg
out
jp
dec
int3
es
xchg
stos
dec
ret
sbb
xchg
cs
mov
lods
jns
sbb
addb
ret
stc
repnz
js
aas
dec
movsl
movsl
out
or
iret
sub
sbb
xor
lock
jecxz
adc
sub
and
adc
inc
xchg
in
xor
and
adc
loopne
jg
addr16
sbb
pop
out
addr16
push
mov
adc
fbstp
pop
cmp
addr16
adc
ljmp
fwait
mov
pushf
cltd
adc
and
mov
cltd
dec
ljmp
jg
xchg
dec
sub
lcall
out
js
adc
sbb
cwtl
rorl
cmpsl
mov
pop
dec
mov
jns
push
out
pushf
and
lret
ss
je
ret
or
rclb
push
or
cmp
fwait
push
mov
aam
loop
ret
imul
xchg
mov
jg
pusha
sbb
or
in
xor
adc
mov
cmp
inc
fstpt
add
movd
iret
leave
inc
jp
adc
sub
adc
mov
movsl
mov
pop
mov
cmpxchg
inc
movsb
lods
push
mov
inc
cmpb
xchg
inc
pop
push
mov
pop
mov
jns
aas
sub
lret
rcrb
ds
jne
mov
lock
mov
pop
rolb
and
fldenv
fwait
add
pop
sahf
jle
outsl
sub
add
push
or
bound
cmp
int3
popa
cmp
ljmp
call
xchg
scas
dec
dec
sub
sub
sahf
mov
test
xchg
arpl
jbe
leave
fwait
xlat
xchg
pop
inc
mov
stos
dec
orb
stos
mov
xchg
outsb
cmpsl
sbb
push
test
js
sbb
ja
shll
insb
dec
adc
mov
mov
jl
lcall
pop
mov
scas
cmp
mov
test
sub
adc
adc
xor
jecxz
imul
cmpsl
add
xchg
fdivr
mov
outsl
mov
pop
pop
test
push
sbb
rcl
xor
push
mov
adc
out
insl
aad
pushf
mov
cmp
ss
ja
fs
test
adc
inc
decb
not
and
aad
mov
cltd
mov
mov
loope
xchg
cmpsb
lahf
in
cld
popf
fs
sbb
int
and
jecxz
aam
or
cs
mov
pop
ja
jp
push
mov
fcoml
adc
mov
cmpsl
daa
mov
cs
dec
addl
lock
pop
sbb
hlt
sti
outsl
pop
and
shr
mov
iret
dec
pop
pushf
ret
add
lret
in
xchg
shrl
out
or
adc
fnstsw
adc
jp
gs
jle
psrlw
popa
ret
mov
or
mov
xor
mov
stos
fstpl
push
int
sarl
aad
and
inc
rcrl
imul
mov
into
lret
sbb
push
push
fnstenv
push
sub
lock
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
mov
sbbb
add
enter
add
pop
add
add
add
add
cmp
add
sbb
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
cmp
add
or
add
xor
add
pop
add
xor
add
addb
xor
add
test
add
rolb
add
clc
add
xor
add
and
add
dec
add
sub
add
jo
add
cwtl
add
sub
add
rolb
sub
add
call
add
add
add
sub
add
cmp
sub
add
pusha
add
addb
add
or
add
add
add
push
add
call
add
add
add
add
add
add
pop
add
mov
add
or
add
add
js
add
rolb
add
or
add
bound
add
or
add
add
add
add
add
insl
add
call
add
add
add
add
add
add
js
add
add
add
add
add
add
add
js
add
add
or
add
add
add
add
mov
add
or
add
add
add
add
or
add
add
mov
add
or
add
ret
call
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
call
add
add
add
add
add
add
jecxz
add
or
add
add
add
add
add
add
add
out
add
call
add
add
add
add
add
clc
clc
add
mov
add
or
add
das
add
call
add
add
add
add
cmp
mov
add
or
add
add
add
cmp
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
jo
add
call
add
add
add
add
add
pop
pop
add
mov
add
add
add
mov
add
add
add
add
movsl
add
add
add
add
add
loopne
add
add
add
or
add
add
add
bound
sub
add
loopne
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsb
add
add
dec
add
add
add
add
inc
add
jb
add
add
jb
add
add
addb
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
je
add
popa
add
add
add
add
add
add
and
data16
add
and
sub
inc
add
push
add
add
add
outsl
add
jb
arpl
add
add
outsl
add
add
add
add
je
outsl
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
jo
add
js
add
add
sbb
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
insb
add
data16
add
add
add
add
add
add
add
add
add
jns
and
inc
add
outsb
add
add
dec
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
je
add
popa
add
add
add
add
js
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
add
popa
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
test
add
add
add
test
add
adc
add
aam
add
pop
test
add
sub
add
aaa
test
add
inc
test
add
push
test
add
outsb
test
add
mov
add
add
add
test
add
add
add
mov
add
add
test
add
test
add
in
test
add
cld
test
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
insl
bound
fs
insb
add
jb
imul
add
outsb
imul
insb
add
outsb
je
jne
je
fs
insb
add
jae
jo
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
js
popa
jb
insl
inc
add
add
dec
dec
imul
push
gs
jne
jb
push
popa
insb
jne
push
add
push
push
imul
push
jae
add
dec
push
push
push
push
inc
imul
jbe
add
push
push
imul
push
insb
push
jne
addr16
outsb
jo
je
