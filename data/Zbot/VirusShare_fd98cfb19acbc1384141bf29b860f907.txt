out
push
sahf
cmp
jae
inc
dec
jns
in
and
xor
and
push
pop
pop
lea
out
movsl
fwait
cmpsb
or
in
mov
cmc
js
loopne
int3
dec
fiaddl
jl
in
js
xlat
outsb
xor
inc
outsl
inc
roll
push
inc
outsl
jl
add
subl
push
cmp
in
and
or
and
popa
mov
hlt
popaw
inc
cmp
in
loopne
jno
add
and
xchg
sbb
mov
nop
jge
clc
lods
pop
ja
add
subb
test
or
in
mov
icebp
jecxz
cmp
inc
mov
popa
sbb
mov
in
aad
outsb
in
mov
xor
in
scas
ja
add
or
outsl
in
mov
dec
outsl
in
arpl
in
sar
orl
dec
jo
in
pop
dec
outsl
in
add
bound
cmp
in
push
jbe
popf
add
ds
rorl
in
outsb
jmp
dec
negb
popa
or
push
or
in
out
imul
bound
loope
aam
mov
add
out
or
jbe
fisubrs
cmpsb
aaa
jo
or
outsl
jbe
mov
jbe
or
in
jg
out
hlt
jecxz
pop
mov
mov
inc
sti
mov
xor
adc
add
dec
jmp
push
notb
pop
pushf
imul
xorl
cvtpi2ps
sbb
add
and
mov
jmp
xchg
out
push
push
and
inc
outsl
xchg
add
jbe
dec
stc
jecxz
mov
in
jg
out
ret
xchg
subb
push
add
dec
outsl
in
or
or
add
and
dec
dec
pop
add
dec
outsl
in
add
fmul
mov
shll
xor
in
add
mov
jb
inc
dec
outsl
in
add
dec
imul
sub
jbe
push
loopne
hlt
jb
cmp
pushf
jle
sbb
add
andb
xor
sbb
ret
shll
mov
hlt
sbb
lret
mov
pop
cmp
or
inc
cmc
mov
popa
stc
roll
ljmp
inc
cmp
inc
pop
cld
fists
cmpb
and
sbb
xor
mov
dec
cld
sahf
pop
jle
ds
push
pushf
sbb
jno
pop
cli
out
test
sub
xchg
cmp
bound
inc
jae
push
push
xchg
inc
fildl
jle
dec
outsl
jns
adc
outsl
in
sbb
outsb
in
mov
dec
cmp
outsb
in
mov
scas
js
shrl
inc
mov
dec
outsl
rol
pop
add
dec
outsl
in
mov
aam
fld
pop
push
pop
inc
mov
in
mov
in
adc
jns
leave
jb
sbb
repz
insb
stos
dec
mov
fildl
popa
xchg
sbb
sbbl
stc
out
xor
fidivrl
sub
dec
pop
and
jl
arpl
dec
les
subb
test
add
mov
in
sub
ss
xor
pop
popa
ds
outsl
in
sbb
imul
cmpsl
sbb
in
jle
outsl
add
dec
outsl
in
mov
inc
enter
in
xor
pushf
cmpsb
pop
jb
mov
imul
jbe
outsl
arpl
add
es
aas
in
mov
add
jmp
test
sti
cmpsb
push
jno
mov
pop
aam
dec
in
xchg
mov
inc
push
fwait
movsb
loope
cmpsb
sub
loope
push
sub
in
xchg
inc
aam
dec
sbb
dec
outsl
in
push
cmp
imul
xchg
cmp
dec
dec
add
das
cmovp
sti
cmpsb
cmpsb
jno
mov
pop
push
add
xchg
cmpsb
int
in
or
outsl
fisttpll
pop
insl
in
mov
pop
add
dec
outsl
in
push
xor
addr16
outsl
in
add
popaw
adc
scas
mov
mov
adc
jmp
xchg
xor
sbb
or
xor
sahf
lcall
orb
fwait
shll
pop
fisubrl
sarl
arpl
ss
jp
rolb
add
sbb
ljmp
fst
std
push
pop
sbb
push
xchg
cmp
lret
bound
inc
in
push
add
js
and
pop
insb
mov
inc
cmp
insl
cmpb
call
xor
addr16
push
push
dec
jo
or
sbb
daa
xchg
dec
outsl
pusha
add
outsb
in
mov
popa
repz
inc
adc
add
cwtl
aam
jmp
adc
mov
fnstcw
loope
cs
jo
sahf
pusha
fucomp
sbb
in
add
pop
popa
pop
jns,pt
mov
insb
outsl
xchg
xor
add
lods
dec
negl
lcall
stc
sti
cmpsb
out
jb
out
ret
add
stos
jecxz
xchg
xor
cmp
mov
js
std
mov
mov
js
mov
into
jmp
dec
in
mov
popaw
inc
inc
in
add
pushf
roll
aad
cmp
lea
sub
mov
into
jmp
dec
insb
imul
pop
cld
and
mov
mov
shll
xchg
dec
outsl
in
sub
in
cmpb
popa
cmp
pushf
jbe
gs
mov
daa
aam
push
cmpl
out
jb
and
or
mov
xchg
aam
and
mov
cmpsl
push
outsl
in
mov
and
inc
outsl
orb
jo
sahf
pusha
jmp
jl
pushf
insl
repz
push
adc
sub
inc
dec
imul
dec
add
inc
outsb
loope
aas
pop
data16
mov
and
inc
mov
cmp
out
ret
pop
lods
imul
int3
push
fisttpl
xor
mov
mulb
jno
into
fmull
ds
insl
aam
cmp
jmp
pop
repz
movsl
mov
jnp
popf
inc
rcrb
in
or
ljmp
add
xchg
inc
mov
negb
cmc
inc
in
or
push
fmulp
sbb
jns
call
insl
lahf
ret
or
and
sub
pop
add
mov
lcall
and
push
xadd
jb
inc
jmp
jno
pop
jl
dec
test
dec
push
dec
pop
insb
lods
cli
xor
leave
jnp
cmp
sbb
enter
pop
push
daa
inc
test
inc
in
lea
pop
andb
xchg
daa
add
sbb
rorl
loope
ficoms
lahf
je
cmp
test
sub
mov
cmp
imul
dec
in
inc
add
or
push
rolb
in
sub
std
jo
add
repz
stc
js
add
lret
call
scas
sub
testl
cltd
outsb
xchg
cmp
adc
mov
push
jmp
fcompl
or
xor
pop
push
mov
mov
mull
divl
lret
daa
sub
lods
lods
imul
sub
sti
jecxz
andb
ja
push
fprem
or
mov
xor
inc
or
push
jp
pop
xor
mov
jle
insb
dec
imul
and
outsl
outsl
sbb
fucomip
cmc
mov
sub
aaa
jecxz
mov
fldt
hlt
mov
xchg
push
pusha
rcl
or
test
pushf
lea
stc
pop
push
pop
push
pop
xchg
pusha
mov
inc
mov
das
adc
outsb
jl
nopl
call
mov
cmpsb
mov
fiaddl
mov
loope
lds
gs
pop
mov
jmp
cmp
in
jae
xor
cmp
push
mov
fsubrs
pop
ljmp
dec
divb
addr16
scas
outsb
outsl
mov
aam
dec
sub
fisttpll
loope
ljmp
add
mov
adc
pop
jl
or
popa
mov
imul
movsb
movsb
cmp
enter
jmp
jecxz
faddl
push
or
into
outsb
sbb
outsb
adc
jae
jmp
inc
pop
lahf
notl
pushf
subl
dec
jns
inc
and
dec
or
or
mov
mov
loopne
or
mov
ja
outsb
push
jns
sub
jmp
fwait
mov
xchg
jecxz
pop
lock
or
mov
fidivrs
addr16
mov
int3
orl
outsb
stc
mov
outsl
mov
test
frstor
mov
jecxz
mov
pop
aam
mov
out
adc
jp
mov
cmc
jae
jg
cmc
pusha
dec
jge
sar
cmp
fs
xchg
mov
pusha
and
cmc
aam
inc
dec
das
fsubs
add
xchg
mov
pop
dec
mov
nop
jmp
insb
adc
outsb
pop
jg
jns
mov
dec
imul
dec
int3
sahf
ljmp
stos
push
jecxz
lods
push
test
mov
popf
pop
in
mov
add
shll
lcall
jns
daa
cmp
dec
mov
cmpsb
jmp
jp
insb
test
push
ja
imul
lock
pop
add
test
pop
mov
outsl
dec
movsl
push
xchg
pop
xor
and
jo
mov
imul
fldl
cmp
xchg
punpckldq
outsb
repz
ret
xchg
dec
enter
aam
xchg
outsl
push
test
mov
jle
push
pop
xchg
cmp
xchg
cmpsb
cs
pop
push
xchg
data16
outsl
jp
pop
xchg
mov
add
pop
jno
sub
mov
stos
std
dec
xchg
std
inc
sahf
dec
add
cmp
and
sbb
cli
cltd
stc
js
fyl2x
dec
insb
int
fwait
xchg
inc
cli
xor
repnz
dec
mov
loop
out
and
push
outsl
ret
cld
popf
adc
test
mov
ds
push
mov
sbb
cli
imul
cmp
adc
insb
sarl
movsl
cmp
ss
into
fnstcw
aas
mov
movsl
and
xor
stos
stc
jle
jns,pt
jmp
and
ljmp
push
push
jnp
jmp
add
push
sub
xchg
ficomps
xor
mov
xchg
fmull
push
add
fnstcw
leave
jg
sbbl
jns
xchg
or
inc
jmp
sub
insb
dec
nop
fsubrl
xor
cmp
stos
jmp
push
in
sub
sahf
pop
and
jb
mov
es
int
xchg
repz
je
rolb
sub
movd
out
or
dec
mov
outsb
insl
jg
or
pop
jecxz
add
mov
aad
mov
stos
outsb
and
adc
inc
mov
cmpsb
into
sahf
jnp
ja
insl
cli
fucom
push
lret
incl
mov
mov
and
fldcw
dec
jge
cwtl
dec
scas
outsb
push
jmp
mov
cmp
in
test
rcrl
inc
mov
lcall
movsl
popa
sbb
inc
xchg
clc
data16
dec
test
aad
or
lret
test
xorl
xchg
inc
bound
mov
insb
jg
addl
fnstsw
in
xor
sbb
int
adc
sub
adc
fstpt
es
scas
push
jnp
mov
bnd
imul
adc
xor
sar
inc
dec
push
popa
loopne
ljmp
jge
stos
scas
ss
in
push
pop
scas
jmp
pop
insl
cmp
jae
inc
out
cmpsb
test
sahf
outsb
stc
mov
dec
add
cltd
jnp
pushf
dec
jb
xor
xor
cmc
dec
gs
sub
inc
xchg
lods
push
push
arpl
mov
xchg
cld
adc
in
push
lret
ficomps
cmc
inc
add
mov
movsl
jno
or
out
stc
fists
movsb
jmp
xchg
add
and
outsl
test
inc
iret
push
leave
addr16
gs
in
inc
inc
xchg
test
and
jnp
loop
jle
push
adc
inc
or
out
sub
repz
push
fsubrl
add
aaa
pop
bound
inc
fisubrl
out
xor
xchg
rcl
out
sahf
pop
mov
shlb
andb
mov
fdivrp
out
cmpsb
add
dec
loope
popw
movsl
inc
imul
inc
and
mov
jle
dec
adc
xor
enter
insb
rorb
inc
iret
sbb
xchg
in
fdivr
lods
push
outsl
outsb
popf
xchg
in
or
int3
andb
xor
xor
push
sarb
outsl
pop
cmp
pop
sbb
or
dec
int3
mov
cltd
hlt
fs
fcompl
movsb
js
cmp
adc
scas
bound
nop
or
add
dec
push
jle
outsb
mov
fwait
movsb
int
imul
in
lcall
stos
xor
inc
cltd
pop
outsb
and
mov
push
inc
lea
es
xchg
int3
xor
inc
lea
xchg
mov
popf
sahf
repz
sbb
cmp
xchg
dec
cli
outsb
jmp
cmp
lock
mov
sbb
push
leave
jno
pop
cmpsb
cmc
outsb
rcrl
jge
xlat
jmp
test
cltd
sub
and
loope
subl
scas
stos
pop
push
adc
test
lods
repnz
xor
shrl
add
stos
clc
imul
inc
cld
push
pop
add
xor
pop
leave
stos
mov
lahf
mov
lea
jnp
mov
pinsrw
in
or
outsl
leave
push
lret
ds
pop
or
push
mov
cmpsb
lea
pop
dec
inc
pop
cs
jmp
cmp
lret
into
daa
pop
bound
sub
fildl
fistl
aam
test
mov
cli
adc
arpl
mov
popa
mov
in
xchg
popa
lods
or
pop
stos
insl
mov
push
aad
out
arpl
adc
sub
addr16
mov
mov
dec
call
ret
movsb
lock
sbbl
sub
push
jne
out
sbb
int3
ror
loopne
cli
xor
xchg
xlat
adcb
push
lahf
cmpsb
or
pop
add
jne
lahf
in
ljmp
frstor
aad
cmp
and
decb
xor
outsb
and
mov
push
xchg
xlat
lock
in
dec
fistps
popa
aas
or
mov
push
sbb
in
jmp
ja
cmp
pushf
dec
mov
std
dec
lds
push
xchg
fcompl
lahf
ljmp
scas
mov
outsl
clc
add
pusha
lcall
add
loop
xchg
xchg
xchg
aaa
sahf
imul
adc
add
mov
frstor
ljmp
js
arpl
adc
mov
repnz
aaa
mov
ss
cmpsb
xchg
cmp
mov
push
fwait
cwtl
cmp
fldln2
rclb
xorl
inc
aam
call
into
test
out
mov
dec
orb
inc
das
es
mov
sub
mov
icebp
inc
pop
jecxz
insb
pop
out
sub
xchg
fcmovnbe
bound
outsb
push
mov
dec
mov
xchg
add
jne
pop
sarb
xchg
fsubr
mov
dec
push
rcrw
inc
sub
les
mov
mov
sbbb
fimuls
outsl
aas
xchg
or
inc
ja
xchg
or
cmp
pop
fstl
push
orl
sub
ret
mov
loopne
xor
in
popf
mov
mov
jl
mov
and
loop
xchg
xchg
loop
nop
add
or
dec
lds
sbb
movsb
pop
insl
xchg
mov
jbe
imul
sub
mov
inc
and
or
pop
cmpl
testb
gs
test
mov
mov
sub
add
jmp
sub
xchg
leave
and
cmp
lret
dec
outsb
push
movsl
jmp
in
call
add
mov
adcb
mov
mov
fwait
ja
inc
pusha
mov
fwait
xchg
aad
sbb
outsb
fstpt
icebp
out
mov
cmp
shlb
aaa
imul
mov
xchg
outsl
dec
mov
push
loop
lock
cmpsl
inc
in
rolb
add
dec
dec
mov
outsb
push
mov
movsl
test
jmp
stc
rorb
sti
aad
pop
lret
push
dec
or
sbb
aas
sbb
loopne
lods
lahf
jp
outsb
movsb
mov
js
fcomip
out
or
push
in
jg
xchg
and
sbb
jmp
testb
jge
mov
int
cmp
add
adc
or
or
mov
fxch
test
push
pop
insb
xor
outsb
iret
pusha
dec
aad
xchg
cmp
loopne
or
mov
loope
mov
aas
mov
lahf
sti
cmp
mov
fnstsw
pop
stc
sub
enter
xchg
dec
cli
jmp
push
push
fwait
sub
xchg
pop
in
data16
call
add
insb
jl
jmp
or
mov
xor
test
imul
lock
and
xchg
in
or
rcrb
cltd
jp
jb
sub
push
inc
and
mov
and
jne
scas
sub
and
and
pop
orl
xchg
pop
adc
push
jl
stc
movsl
mov
xchg
jmp
lea
xchg
jg
ljmp
xchg
mov
sahf
dec
cmpsb
add
int
inc
xor
or
movsl
aaa
or
cmc
jmp
fdivrp
rclb
xorl
sahf
jae
andl
mov
jbe
add
fisttpl
add
adc
mov
xor
gs
push
cwtl
outsb
xchg
fsts
jl
add
add
mov
mov
adc
dec
push
es
iret
pop
shrb
jae
dec
and
jae
dec
clc
mov
cmp
ja
mulb
scas
inc
outsl
push
add
pop
outsl
data16
pop
daa
out
jmp
mov
push
mov
xchg
in
in
rorb
push
or
outsl
push
in
repnz
mov
repz
pop
jb
dec
mov
pushf
out
outsb
cmpsb
push
stos
dec
in
and
jmp
sbb
pop
in
es
out
pop
sbbb
int
sbb
cltd
data16
mov
into
dec
das
or
out
mov
mov
addl
pop
and
dec
jbe
mov
dec
jne
dec
adc
decb
ret
outsl
mov
outsl
lock
jp
push
jmp
sub
mov
mov
push
cmc
test
mov
out
cld
cmc
sbb
and
add
cmp
fwait
xlat
int3
or
repnz
in
jb
lret
fmuls
scas
imul
or
mov
inc
js
cmp
sbb
icebp
es
jmp
mov
inc
mov
and
repz
imul
cld
data16
inc
nop
push
das
push
mov
fwait
orl
mov
add
ds
je
ljmp
xor
jmp
adc
cmp
lock
mov
je
or
mulb
jb
dec
andl
jge
pusha
jp
fisubs
mov
cmp
cli
jg
mov
js
or
aad
pop
ret
mov
enter
aad
fwait
xchg
dec
jge
xchg
jg
movsbl
pop
stos
jae
rcrl
mov
ljmp
fwait
or
jge
hlt
sbb
xchg
push
mov
out
outsb
xlat
arpl
lahf
and
in
inc
adc
mov
ret
mov
sub
mov
inc
inc
lcall
cmp
cmpsb
inc
pusha
cld
jg
jbe
test
mov
jmp
push
lds
dec
sub
dec
movsb
imul
xchg
adc
push
xchg
jmp
mov
js
mov
enter
das
stos
insl
cmp
jle
sub
outsl
sub
stos
cwtl
jmp
cli
or
mov
cli
subl
lods
cmpsb
mov
popa
adc
outsl
fsubs
sbb
ret
hlt
into
pop
and
in
cmp
icebp
adc
pop
adc
or
mov
out
in
enter
mov
leave
mov
xchg
mov
sti
cmp
movsl
jl
addr16
cld
push
arpl
jbe
iret
ja
les
aaa
ljmp
sub
pop
jmp
and
fnstcw
mov
mul
sahf
push
loopne
movsl
mov
xchg
dec
pop
lds
aaa
adc
flds
mov
mov
push
xchg
cmc
mov
test
or
das
xchg
testb
nop
xchg
add
loope
mov
popa
call
test
test
mov
and
in
mov
mov
dec
ja
jnp
mov
dec
call
dec
xchg
push
inc
sub
adc
clc
adc
dec
enter
mov
mov
repz
adc
jno
mov
das
roll
mov
cmc
xchg
shr
scas
in
dec
jne
dec
push
mov
jnp
outsl
mov
cltd
push
ret
dec
add
and
adc
mov
in
cmp
fnsave
in
pop
popa
inc
or
push
mov
sti
fnstsw
inc
notb
das
outsl
xchg
adc
and
sub
lret
xchg
pop
push
mov
pop
xor
adc
mov
adc
outsb
push
xchg
pushf
mov
ljmp
fdivr
outsb
negl
push
outsl
inc
mov
inc
test
aad
stos
mov
out
jge
mov
inc
into
idivl
and
pop
loop
push
pop
lret
scas
insl
sub
inc
cli
cmp
out
inc
je
or
fwait
imul
jge
inc
mov
insb
jne
add
in
arpl
dec
cmpb
push
jg
lods
cmp
out
dec
ss
out
leave
sub
jp
addr16
outsb
mov
xorl
in
pop
or
jno
fwait
dec
dec
mov
push
mov
mov
shll
mov
inc
sbb
std
mov
clc
lahf
add
ss
movsl
jmp
mov
pop
push
sub
in
or
inc
mov
test
or
jmp
jecxz
stos
xchg
pop
inc
mov
pop
addb
sub
into
clc
xchg
push
mov
divb
cltd
bound
push
fdivl
cmp
pop
or
jbe
leave
pop
cwtl
lret
ret
xchg
xchg
and
rorb
fwait
outsb
xor
jae
out
xlat
aaa
andb
mov
dec
push
adc
or
rorb
mov
fstpt
jge
movsb
push
loop
lea
subl
cs
cld
and
dec
adc
cmpsb
adc
test
jle
stos
pop
pop
out
mov
pop
pop
jmp
mov
xchg
ror
push
ljmp
and
push
popl
inc
xor
int3
xchg
mov
stos
cld
xor
js
inc
sbb
lret
or
inc
cmp
leave
xor
or
scas
hlt
in
cmpb
mov
mov
idivl
cmp
mov
imulb
int3
xchg
jmp
nop
mov
js
mov
lea
inc
cld
mov
adc
xchg
in
adc
mov
mov
mov
daa
out
push
xchg
arpl
adc
sbb
stos
ljmp
lods
jmp
out
outsb
les
cli
ret
inc
mov
or
in
and
fisubrl
dec
mov
mov
xor
in
call
outsl
cltd
lcall
in
ret
cltd
xchg
mov
inc
xchg
mov
dec
sbb
mov
mov
outsl
imul
pusha
imul
lea
lahf
adc
mov
sbb
add
xchg
insl
fadds
ja
adc
jmp
push
mov
popa
mov
stos
sahf
jbe
cmpsl
fistps
ret
out
mov
xchg
sub
lock
or
dec
sbb
inc
aas
jno
mov
sahf
add
adcl
jns
loopne
dec
xchg
outsb
outsb
adc
pop
xor
pop
mov
out
mov
jb
outsb
call
nop
pop
in
fwait
aas
xor
mov
aad
push
dec
sub
jb
in
sti
loopne
repz
arpl
dec
ss
or
outsb
sbb
jns
xchg
fstps
lock
xchg
fsubl
sub
mov
pop
fsubrs
pop
scas
jg
cld
dec
andl
mov
mov
ficompl
adc
in
out
pop
jnp
push
in
addr16
jns
subb
and
mov
bound
mov
add
mov
ja
xor
add
and
ffree
lds
add
shl
dec
adc
arpl
xchg
jbe
pop
popf
sbb
mov
sbb
daa
ret
xor
leave
mov
clc
mov
xchg
mov
mov
call
inc
popa
fnstenv
dec
dec
add
and
in
sub
int
sbb
fwait
pop
ljmp
jno
cmp
in
and
test
mov
and
outsb
loop
pop
lret
test
jmp
jno
sub
mov
outsb
jp
cmpsl
test
adc
fnstcw
xchg
pop
sub
xchg
outsb
popf
xchg
jmp
loop
icebp
ret
hlt
pop
repz
fsubrl
loopne
cmp
dec
mov
out
jne
mov
push
loope
out
mov
jb
and
in
xor
xor
lcall
mov
adc
and
inc
outsl
xor
add
fsubrp
cmp
push
sbb
mov
out
lods
xor
sub
push
das
dec
loope
jbe
or
adcb
arpl
outsb
sahf
or
outsb
daa
sahf
les
loope
jecxz
jp
sub
cmp
mov
and
insl
lcall
imul
inc
imul
rorb
jbe
cmp
sbb
jb
cli
fisttpll
repnz
mov
inc
jmp
sbb
leave
out
dec
lea
out
inc
push
dec
xor
out
addr16
dec
rcr
sbb
jl
mov
in
out
call
jl
std
je
outsl
inc
stos
outsl
stc
mov
addb
jmp
mov
mov
xor
lret
sbb
stc
dec
lret
push
fadd
mov
shl
mov
gs
ds
xchg
jmp
outsb
adc
mov
jns
xchg
outsb
sbbl
jnp
adc
cltd
dec
add
orb
stc
sub
dec
xchg
push
push
out
and
push
xchg
and
int3
lock
sub
jp
mov
stos
inc
in
aaa
xor
cmp
add
scas
nop
mov
dec
dec
movsb
pop
sub
jmp
stos
adc
sbb
mov
incl
dec
out
push
cwtl
sbb
mov
dec
int3
stos
popa
mov
dec
lock
jae
inc
push
or
mov
add
mov
shll
xorl
adc
mov
add
inc
adc
add
mov
pushf
add
or
xor
cmp
cmpsl
pop
or
inc
jne
scas
push
mov
jmp
into
stos
sub
hlt
dec
dec
bound
xor
add
pop
and
test
xchg
out
daa
imul
mov
jb
ljmp
stc
push
or
jmp
adcl
push
hlt
add
in
lock
jnp
pusha
fstpt
pop
xor
mov
dec
in
mov
mov
aaa
mov
xor
add
fwait
cltd
clc
inc
icebp
sbb
or
push
stc
das
push
mov
in
mov
dec
ja
dec
jns
adcb
mov
imul
xchg
dec
popf
jecxz
aam
mov
cmpsl
add
inc
pusha
jp
aam
fldcw
in
adc
fbld
sbb
loop
adc
push
mov
dec
jge
scas
dec
jmp
or
scas
mov
shr
mov
sahf
sub
pushf
jns
or
xchg
sbb
pop
incl
mov
inc
inc
leave
mov
mov
inc
sub
je
sahf
inc
cld
daa
dec
outsb
inc
mov
jl
dec
scas
stos
test
jb
push
stos
xor
lods
mov
or
subb
jbe
mov
cmp
popf
pop
notl
hlt
mov
push
mulb
pushf
push
pop
sub
popa
js
push
outsl
dec
cmp
or
mov
aaa
cmpb
pop
xchg
and
cmp
dec
ret
inc
jle
mov
cmp
mov
adcl
mov
push
imul
pop
push
xor
and
lods
iret
dec
mov
out
xor
outsb
sti
loop
ds
loopne
ljmp
test
test
mov
sbb
or
lret
push
mov
add
cld
sub
test
outsb
inc
sbb
add
jmp
hlt
icebp
mov
mov
push
adc
push
mov
mov
shll
cli
iret
loopne
and
jge
jmp
pop
mov
dec
mov
sbb
dec
icebp
xchg
or
cmp
or
mov
mov
cmp
lds
mov
push
sub
scas
xchg
fsubp
daa
in
sahf
jo
lds
in
xor
mov
scas
cmp
fldl
inc
xor
mov
shl
outsb
jl
inc
jecxz
cmp
push
in
jns
outsl
xchg
nop
aaa
push
mov
in
stc
cmp
jp
jb
daa
push
mov
dec
mov
inc
testl
in
ja
shll
adc
pushf
popw
movsl
jmp
push
add
pop
sub
adc
test
inc
mov
orl
and
mov
push
mov
push
mov
andl
scas
outsb
test
mov
jns
lods
sbb
or
xor
mov
jb
hlt
inc
and
adc
inc
xor
adc
xchg
pop
cmc
stos
test
xchg
stos
imul
pop
mov
add
insl
mov
fldcw
adc
cmp
adc
out
ss
mov
in
out
xor
jg
fstl
scas
bnd
shr
sub
filds
in
mov
call
sbb
xchg
or
jmp
pusha
mov
hlt
int
jo
mov
dec
push
mov
mov
mov
push
insl
inc
inc
lods
cli
add
xchg
push
xchg
leave
mov
into
call
jl
pop
stos
xchg
lods
fimuls
xchg
scas
lahf
cmp
add
fdivl
inc
sbb
out
add
aam
adc
js
mov
in
mov
mov
pop
dec
dec
mov
mov
adc
xor
jno
jp
mov
std
pop
aad
cmp
adc
outsb
push
xor
pop
or
insl
push
loope
hlt
fsubrl
mov
jmp
xor
xchg
cmp
inc
stc
movsl
addr16
sub
bound
dec
nop
jbe
mov
pusha
push
fcmovnu
mov
shrl
cmc
popf
loopne
cmp
pop
sahf
mov
mov
repz
lds
loop
ja
pusha
cmc
enter
outsb
aaa
mov
test
add
add
sarb
and
lds
mov
pop
lds
repnz
ret
and
jmp
xor
cwtl
mov
jbe
stos
jbe
ficompl
jg
add
inc
mov
sub
test
mov
stc
jmp
loope
enter
xorl
in
int
xor
fisttpll
push
aaa
jno
mov
lret
dec
cmc
jmp
cmc
mov
cmpsl
aam
cmp
xor
xor
sahf
or
sbb
jg
incb
sub
scas
mov
ds
nop
std
pushf
mov
jns
arpl
mov
imul
jno
add
mov
clc
ficompl
cld
in
adc
dec
push
adc
in
dec
mov
xor
mov
fwait
mov
enter
mov
lret
push
jnp
and
cmp
dec
cmp
ret
fs
mov
xor
jge
fstps
ja
jno
pop
push
sbb
fwait
mov
mov
add
outsb
pop
xor
xor
mov
sub
pop
mov
outsb
sub
mov
mov
jns
push
fists
sbb
push
mov
dec
dec
push
ds
into
call
mov
cs
lods
jp
xor
sbb
cmpsb
mov
add
or
sub
pop
fwait
daa
jne
jmp
or
lcall
mov
push
ss
clc
dec
push
push
pop
lea
cwtl
push
outsl
inc
sub
rorb
int
push
sub
jae
aad
dec
scas
mov
call
lods
jmp
xchg
arpl
insl
in
in
jg
addr16
sbb
xor
leave
nop
les
mov
das
jne
or
jae
jmp
sub
in
mov
in
pop
cwtl
pop
mov
js
jmp
test
in
lret
mov
outsl
stos
push
fsubrs
in
fld
popa
jg
clc
jecxz
mov
mov
outsb
mov
or
xchg
and
lahf
into
dec
sub
loope
jno
lret
sbb
jmp
jo
dec
sub
rclb
ljmp
ss
xchg
cld
test
enter
out
jbe
insb
xchg
jae
sahf
mov
dec
jp
bound
daa
stos
and
inc
xchg
sbb
fildl
mov
xchg
jmp
mov
or
loopne
je
pop
push
jl
dec
push
inc
pop
jo
cld
jg
outsb
mov
jmp
jl
sarb
in
rclb
movl
mov
nop
orb
sbb
mov
and
scas
mov
jmp
lds
ds
pop
cwtl
mov
cs
stos
dec
es
shll
lods
jne
stos
fs
pop
in
push
mov
sub
into
push
xor
jg
mov
outsw
setns
push
loope
fdivs
mov
mov
push
insl
sbb
or
pop
sbb
jns
mov
push
int3
jl
repnz
hlt
sub
pop
dec
test
push
repz
inc
lods
lock
mov
adc
ljmp
jae
and
loopne
sahf
add
scas
fldcw
xor
aaa
outsl
das
fdivl
dec
mov
scas
pop
lds
mov
push
push
mov
mov
lret
add
jb
cs
mov
mov
outsb
sbb
ja
outsb
push
dec
adc
imul
in
inc
xor
hlt
mulb
data16
sbb
test
jbe
scas
xlat
mov
fbld
int3
cwtl
mov
dec
inc
dec
dec
push
push
outsb
test
jl
mov
cld
dec
pushf
and
dec
stc
mov
mov
sub
pop
sbb
fbld
pop
sub
jl
dec
or
push
xchg
mov
pop
test
insb
mov
sarb
mov
sbb
cld
add
mov
hlt
xchg
inc
ds
movsb
lahf
jne
je
leave
shrl
lods
into
jmp
dec
adc
les
repz
inc
mov
bound
push
outsl
adc
push
xlat
or
mov
jge
lods
data16
sarb
ret
cmp
sub
cmp
jge
xor
or
test
add
push
int3
out
mov
sbb
lock
dec
xchg
fsubrl
jbe
adc
in
loope
call
iret
jo
in
jge
test
stos
test
push
ret
pop
pop
ret
jmp
das
sbb
popf
sahf
adc
stos
pop
pop
xor
inc
dec
rolb
push
adc
leave
aad
jb
int3
insl
xor
loopne
xlat
mov
js
cmp
loop
mov
outsb
push
add
ss
jns
mov
adc
repnz
mov
pop
dec
std
sub
ljmp
jmp
test
pop
jnp
mov
xor
push
mov
pop
ret
dec
dec
cld
jmp
and
mov
fcoml
push
loopne
iret
mov
jmp
dec
popa
lock
movsl
mov
sarl
in
out
aad
inc
in
sbb
xor
test
add
lret
rorb
enter
imul
jp
push
gs
aam
sub
mov
test
stos
mov
sbb
mov
fistpl
js
aas
outsl
int3
lods
cli
inc
jmp
repz
cmp
enter
loope
xchg
mov
stos
scas
lret
dec
loope
and
out
add
sub
in
paddq
and
push
xor
add
popa
int
enter
ja
xchg
out
outsb
loope
cmc
fnstenv
mov
jb
cwtl
pop
pop
jnp
xor
inc
rcr
pusha
jmp
sub
je
mov
pop
pop
mov
jmp
ja
sbb
xor
and
xchg
mov
mov
mov
inc
sub
dec
dec
mov
and
ja
lock
popa
lahf
or
sti
icebp
movsb
sub
orl
mov
jb
neg
or
dec
push
push
mov
pushf
inc
das
outsl
mov
or
pop
incl
xchg
insl
xchg
cmc
fbstp
clc
lods
shrl
shl
pop
jno
mov
lahf
mov
xchg
in
leave
mov
jp
movsl
repnz
push
in
sbb
sub
lahf
adc
jb
out
jg
or
das
jp
mov
dec
mov
xor
sbb
jmp
out
ds
jae
dec
call
mov
cmp
dec
clc
dec
sbbl
icebp
addr16
idivb
rcll
loopne,pn
push
and
push
push
imul
in
js
ljmp
fstpl
ljmp
scas
push
mov
mov
xlat
sbb
push
pusha
rorb
in
lea
int
lret
pop
in
outsb
and
add
lret
addl
in
std
push
jp
inc
lret
mov
mov
sahf
pop
icebp
sub
adcb
or
outsb
jg
mov
inc
mov
into
pop
cltd
xchg
int3
mov
mov
outsl
push
sub
push
sub
lahf
clc
add
jbe
pop
mov
xorb
dec
xchg
cmpsb
hlt
add
cmp
lds
pop
push
add
int
out
in
mov
stos
sub
leave
mov
lods
std
pop
jl
dec
xorb
outsl
push
pop
sbb
lds
int3
sti
mul
mov
adc
sub
inc
lahf
xchg
sarb
or
xchg
inc
inc
adc
dec
push
movsl
pushf
outsb
sti
fisubrl
test
fcoml
and
aas
pop
or
shr
sarb
test
mov
xchg
add
pop
fldt
pop
cmpsb
mov
leave
lcall
outsb
outsb
leave
and
pop
hlt
test
mov
out
cmp
xchg
and
pushf
imul
stos
pop
jb
popf
outsl
loopne
fisubrs
cmp
aaa
add
lea
cmp
loopne
loop
enter
or
push
jmp
sub
es
hlt
sub
adc
pop
xchg
icebp
sub
aad
jmp
movsl
pop
adc
or
outsl
push
mov
xchg
mov
xor
popf
mov
push
pushf
pop
dec
pop
xor
inc
sub
dec
push
add
inc
jmp
xor
jmp
negb
cmpsb
inc
sbb
mov
rcrb
daa
push
adc
jl
stos
jmp
push
cld
xchg
push
iret
xor
inc
insb
mov
push
push
movsl
fmuls
inc
dec
xchg
cltd
add
or
fisttpll
aaa
insl
mov
inc
stc
and
cmp
repnz
push
popa
dec
mov
fs
mov
jnp
aad
cmp
fcom
shlb
or
dec
mov
out
xrelease
inc
outsl
shll
aas
jmp
mov
insl
int
adc
push
pop
pop
xchg
fmull
and
mov
and
xor
out
mov
adc
push
rcl
push
clc
mov
xor
and
cmp
lods
fwait
jo
pop
mov
rorl
cmc
outsb
jns
sarb
hlt
cmp
pop
cwtl
jbe
xor
sbb
shl
sub
pop
or
or
xor
add
cmp
jmp
mov
rcll
jnp
idiv
mov
jae
fadds
jno
or
cmp
sub
cli
jnp
mov
pushf
dec
mov
sub
adc
je
xchg
imul
out
loop
or
mov
sbb
clc
imul
mov
fxch
imul
lret
dec
leave
add
std
mov
outsb
push
pushf
and
xor
in
rclb
push
or
pop
mov
jmp
cmp
mov
loopne
xchg
stos
sub
icebp
sub
aam
push
scas
xor
popf
dec
or
or
cmp
and
out
outsl
enter
sub
clc
and
in
jns
aad
in
ljmp
jmp
xchg
inc
sub
lret
push
fmull
lret
test
and
cwtl
and
sub
int3
mov
outsb
mov
fwait
dec
inc
rcll
sub
std
mov
bound
rorb
in
in
and
inc
push
test
push
adc
mov
and
aam
xchg
es
in
xor
jle
outsb
rcrb
push
jp
movsb
jmp
les
in
mov
lahf
cmpsb
idivb
out
pusha
mov
dec
sub
inc
repz
mov
jmp
ret
jecxz
sti
ss
stos
inc
push
jp
adc
outsb
test
xor
push
fldl
mov
xchg
sti
sbb
outsb
xor
shr
fbstp
sbb
sub
inc
aaa
outsl
cmp
add
adc
aas
adc
cmpsl
ja
fmuls
clc
jmp
test
call
push
icebp
fdivr
sub
adcb
mov
or
outsl
cmc
lods
mov
mov
mov
push
and
adc
push
out
in
jmp
fidivs
fnstcw
inc
insb
jl
sbb
cli
jbe
lock
fcmovnbe
cs
mov
aaa
cmpsl
scas
lods
dec
add
dec
mov
mov
lret
imul
mov
cmp
dec
sbb
cli
pop
cmp
jp
outsb
call
dec
dec
jle
aam
dec
std
and
fisubrs
lods
mov
faddl
adc
mov
mov
or
je
repnz
add
sub
dec
cmp
ja
mov
lock
sbb
outsl
in
popa
mov
or
lock
jmp
lea
inc
imul
lea
ret
scas
test
icebp
push
push
and
outsb
jecxz
in
inc
push
mov
adc
rcrl
inc
mov
xor
push
or
fmuls
js
gs
dec
sub
scas
mov
mov
outsl
inc
adc
outsb
mov
cmp
cmp
sub
testl
mov
jo
xchg
pop
iret
rolb
mov
std
pop
ss
loop
pop
adc
dec
push
data16
adc
cmpsl
xor
xor
xchg
mov
jl
scas
jmp
clc
in
sbb
dec
in
outsb
in
dec
in
aam
out
dec
sbb
jb
outsl
lcall
sarl
shr
pop
jbe
sub
andl
fld
jmp
and
xchg
aad
adc
push
adc
add
sub
or
in
imul
les
lret
ret
cmp
mov
daa
mov
xchg
testb
dec
mov
xchg
push
adc
mov
out
int
push
mov
dec
fmul
fisttpll
pop
sub
mov
jle
aaa
icebp
fdivs
cmp
cli
pop
mov
repnz
cld
inc
lahf
jge
mov
mov
stos
jo
ror
dec
inc
pop
pop
je
inc
lds
mov
das
inc
flds
dec
push
xchg
rcr
mov
add
pushf
and
mov
dec
sbbl
mov
imul
sub
pop
xchg
pushf
inc
outsl
mov
fwait
mov
test
jge
outsb
int3
xchg
mov
outsl
mov
shrb
jmp
sub
pushf
std
cli
sbb
push
mov
mov
ljmp
xor
push
test
lcall
pop
pop
and
mov
cwtl
leave
mov
push
push
mov
adc
dec
xchg
ret
xor
xchg
xchg
pusha
out
mov
mov
aaa
mov
adc
mov
ret
gs
stos
imul
mov
adc
xor
inc
jge
jg
inc
sbb
push
outsl
inc
outsb
adc
pop
pop
mov
repz
dec
xchg
test
and
inc
pop
outsb
xchg
push
jo
or
sbb
jnp
dec
xchg
sbb
mov
mov
js
dec
arpl
fcmovu
cwtl
push
addr16
jbe
inc
testb
lds
pop
adc
xchg
mov
mov
addb
sbb
int3
mov
repz
add
test
lcall
movsb
outsb
aam
shll
cmp
add
inc
dec
push
cmc
out
push
mov
xchg
pop
add
popa
mov
mulb
push
test
aad
ss
push
call
rcll
sbb
test
lret
jnp
sti
mov
push
mov
rcr
sti
shrb
pop
dec
dec
mov
loope
jnp
outsl
cmc
ja
mov
dec
jge
mov
je
xor
pop
fcomps
push
les
xchg
push
mov
test
xor
dec
shll
push
pop
or
sbb
or
jle
subl
pop
clc
in
jl
mov
sti
icebp
cmc
mov
fs
push
jo
dec
stc
inc
sti
pop
in
sar
jmp
mov
lock
sub
arpl
hlt
xchg
jmp
jle
hlt
popf
push
enter
xchg
fldl
enter
popf
sti
sti
in
repz
dec
loopne
aaa
repz
daa
mov
repz
scas
or
fisttpll
push
cmp
cmp
and
arpl
mov
in
mov
outsl
inc
mov
sbb
xor
dec
popf
pop
jmp
mov
outsb
movb
gs
ljmp
push
mov
mov
mov
lea
imul
sti
roll
inc
cli
inc
jns
jno
fwait
jg
pusha
mov
les
arpl
call
sti
gs
lods
mov
outsb
inc
push
push
sbb
jo
dec
leave
jb
je
mul
or
mov
add
pop
inc
and
mov
cmpb
pop
mov
adc
add
mov
push
cmp
and
dec
xchg
sub
mov
inc
aam
cmp
push
xor
push
loopne
jmp
loopne
jmp
push
jge
in
in
rclb
outsl
sub
jmp
cltd
push
rorb
jmp
cmp
imul
mov
cltd
sub
orb
imul
sbbb
imul
lods
out
test
mov
or
fdivp
push
insb
sti
int
or
mov
sub
sbb
lds
lea
aaa
lret
sarl
cld
sbb
cs
xlat
inc
dec
pusha
shll
je
dec
dec
ret
rorl
xor
icebp
cwtl
pop
mov
mov
in
inc
sbb
xchg
adc
lahf
pop
and
fwait
std
loope
mov
and
pushf
out
pop
dec
int3
xorl
cmp
cmpsl
xor
jmp
imul
dec
cwtl
pop
xchg
das
cmp
int3
outsb
fstp
cltd
jp
pop
into
xchg
or
scas
cmp
dec
nop
xchg
mov
mov
and
dec
stos
out
outsb
jno
xchg
lret
or
inc
mov
aas
pusha
adc
pop
sbb
loope
or
jmp
sub
lret
or
out
fstp
dec
xchg
rcll
or
icebp
and
ret
fs
xchg
adc
insb
inc
mov
mov
xchg
mov
and
push
fisttpl
adc
add
cmpsl
mov
in
incl
mov
dec
xchg
jae
mov
pusha
jle
push
push
pop
add
roll
les
ds
sub
mov
push
iret
pop
test
fisttpl
mov
push
xor
or
pop
in
dec
and
outsb
push
push
daa
jns
inc
lret
and
outsb
jp
out
xchg
xchg
mov
jmp
bound
mov
loop
mov
lock
fsubr
cwtl
in
mov
and
imul
lds
rcll
push
push
sbb
pop
jle
and
dec
fidivrl
or
dec
inc
mov
iret
pop
xchg
sbb
push
jge
in
out
popa
push
adc
xor
dec
mov
xor
pop
mov
scas
push
or
outsb
out
cmp
push
xlat
dec
mov
jl
aam
fnstenv
pop
jmp
adc
sbb
test
aam
push
inc
flds
orb
sub
add
insb
out
or
mov
ja
add
mov
mov
faddl
outsl
pushf
test
xchg
jo
sub
into
pop
pop
imul
push
and
cmpsl
loop
jo
ret
push
cmp
sbb
dec
add
jb
xor
rorb
sub
and
pop
jns
cmp
xorl
fsubrl
shll
jbe
adcb
or
or
mov
aad
add
stos
adcb
je
sub
push
cs
mov
mov
nop
push
mov
lret
ret
outsb
cmp
movsl
fwait
in
jmp
outsb
testl
into
rclb
aaa
pop
outsb
adc
mov
mov
pop
add
lds
xchg
lret
push
push
sti
outsb
clc
movsl
repz
or
hlt
jmp
dec
inc
cmp
icebp
push
arpl
adc
dec
jp
dec
out
pop
jae
jno
bound
shlb
enter
cltd
adc
inc
mov
jg
xchg
jo
dec
das
cmp
clc
sbb
mov
ja
fldt
mov
pop
jae
stc
dec
jno
sahf
out
dec
icebp
mov
dec
mov
outsb
lcall
testl
lods
in
mov
orb
rcl
pop
inc
in
mul
sbb
stos
scas
popl
push
loopne
jb,pn
xchg
xor
loop
and
mov
sbb
mov
cli
stos
dec
movsl
orl
loopne
orb
aas
pop
xor
popa
sbb
hlt
test
sbb
sti
mov
xchg
mov
xor
adc
sbbl
mov
jmp
mov
dec
add
aas
cmp
adc
mov
jg
lds
mov
jns
mov
xor
int3
inc
mov
push
jbe
jmp
call
inc
jmp
fstpl
push
jg
in
int3
pop
jns
mov
mov
xor
mov
mov
cli
dec
inc
rorl
jg
xor
push
scas
mov
add
xchg
jns
mov
popa
fwait
adc
sahf
mov
add
cmp
pop
sbb
test
insb
lds
sbbb
out
push
aas
xchg
jp
xor
pusha
push
mov
push
js
fstpl
xchg
jmp
adc
mov
sbb
pop
mov
jns
xorb
inc
cmpsl
push
adc
cmp
sbb
sub
cmp
out
inc
js
add
mov
cld
adc
andl
aas
pushl
cmc
lahf
mov
mov
push
movsl
mov
int
xchg
sub
test
shll
push
dec
fidivrl
add
xchg
pushf
loope
bound
shl
fmulp
sahf
cmp
mov
pop
js
cmp
hlt
cwtl
mov
push
xchg
lahf
shll
outsl
xchg
push
testb
cld
jmp
push
shl
orl
aam
pop
dec
in
push
daa
xor
dec
repz
mov
adc
aaa
jl
inc
inc
fcmovnb
jmp
das
jno,pn
cmp
lods
pop
add
aad
xchg
pop
das
pop
adc
xor
iret
cmpl
insb
rcl
sbb
or
vmovhpd
jg
cmc
jne
aas
push
cld
cwtl
inc
cltd
or
in
fwait
add
dec
jno
mov
movsl
and
addr16
cs
cmpsb
fs
rorl
mov
mov
icebp
mov
ret
inc
xor
dec
pop
fstl
hlt
lcall
scas
rol
add
pop
in
mov
cli
xchg
dec
adc
pop
push
pop
sbbl
popf
jmp
dec
std
push
or
and
xchg
add
xchg
cltd
dec
lea
or
outsl
ret
and
mov
and
mov
mov
insb
dec
mov
psubq
loopne
std
xor
mov
or
les
aas
pop
subl
inc
jns
inc
inc
pop
push
mov
repz
sub
xor
xchg
daa
outsb
into
mov
jb
push
aas
es
ror
jmp
lock
dec
sbb
jne
push
cld
fstps
ja
jecxz
mov
push
cmp
sarl
icebp
cmp
lea
aas
lahf
leave
es
mul
adc
imul
mov
mov
les
push
jg
mov
outsl
lahf
mov
push
sub
shr
mov
push
push
sub
sub
jno
jae
dec
cld
cwtl
aad
in
or
inc
cmp
jg
sub
mov
shll
lea
mov
pop
xchg
sbb
out
inc
sbb
jnp
mov
out
ret
jne
cs
jmp
stos
sbb
push
mov
mov
inc
and
ljmp
sbb
mov
sub
cld
rcrb
and
mull
outsb
scas
cs
jmp
xor
pop
popf
cmp
call
ds
dec
test
add
mov
rcrl
or
lods
inc
inc
pop
cmp
jmp
inc
or
jnp
fdivr
addb
movsb
int
or
sbb
push
repz
cmp
lret
mov
subb
negb
call
inc
or
xor
mov
mov
push
je
test
xchg
pop
cmp
add
jmp
mov
mov
stos
imul
mov
ds
lea
test
outsl
dec
jg
pop
rcrb
cmp
add
mov
jns
and
jmp
pushf
sbb
add
push
push
push
pop
data16
aam
xchg
push
iret
adc
push
icebp
push
and
push
mov
mov
lcall
scas
fcomps
addr16
pusha
inc
cwtl
xor
cli
out
adc
ficoms
sub
adc
pop
insb
sbb
dec
rol
pushf
lea
adc
mov
xchg
outsb
xor
xor
stc
sbb
daa
and
stos
sub
dec
add
lods
push
in
ds
mov
jecxz
pop
mov
pop
cmp
shrl
jle
dec
adc
loope
cltd
jb
addr16
test
mov
inc
dec
popf
insl
enter
subl
push
js
mov
call
cwtl
mov
or
jle
jmp
ljmp
mov
lret
fisubrs
mov
gs
sub
inc
cmpsl
fdivl
mov
xor
mov
inc
and
xchg
mov
movsl
stc
inc
test
dec
out
xor
data16
sbb
cmp
in
je
addr16
sub
cltd
aam
ds
cli
shl
cmp
leave
cmpsb
lds
ret
sub
adc
incb
mov
popa
out
repz
loope
or
aas
out
mov
add
jl
cmpsb
outsb
push
mov
aam
jl
lods
push
outsb
insb
and
push
ret
out
clc
adc
jno
pop
xchg
dec
loop
outsb
insl
addl
addr16
outsl
sub
out
in
out
aam
adc
dec
push
push
mov
lds
in
add
fldenv
int
xchg
ds
imul
scas
mov
call
jnp
xchg
jecxz
shlb
dec
sahf
xor
int3
ss
dec
fldt
call
outsb
testl
adc
movq
and
push
jge,pn
or
xor
lcall
mov
dec
in
out
icebp
call
push
outsl
inc
lds
pop
mov
mov
sub
aad
mov
sbb
xor
pusha
nop
imul
jno
cmp
mov
jmp
ficoml
add
lahf
xchg
imul
cmp
push
lea
or
outsb
test
push
stos
lods
ret
adc
mov
sub
mov
mov
imul
data16
lret
fs
push
ficoml
cs
rorl
xorps
lds
cld
adc
stos
mov
push
bound
mov
int3
loop
aas
movsb
sbb
jg
aaa
push
push
sub
sbb
or
lods
jmp
or
xor
aam
inc
sub
outsb
push
leave
inc
arpl
mov
divl
outsl
imul
push
dec
in
sbbb
rorl
xchg
ret
push
cmp
cli
dec
inc
cli
lret
cmc
sbb
xchg
shll
inc
mov
ja
aas
xor
hlt
outsb
addl
cld
test
lea
jmp
adc
iret
mov
mov
pop
sbbb
incl
cmc
mov
fimull
add
into
xchg
dec
xchg
stos
xchg
nop
xchg
clc
roll
dec
mov
out
mov
ss
pop
into
dec
dec
mov
mov
dec
movsb
orl
test
push
fwait
outsb
cmp
inc
loope
dec
pop
xor
adc
sub
dec
in
test
clc
test
dec
or
pop
xchg
jg
mov
sbb
dec
jns
adc
outsb
aam
cmp
sub
mov
nop
es
mov
and
push
fisttpl
pop
sbb
pusha
mov
cld
aas
push
dec
movsl
mov
mov
jmp
xchg
xchg
cmp
bound
dec
pop
push
mov
outsb
add
xorb
or
jmp
dec
sub
sbb
sub
or
pusha
mov
push
push
je
cli
mov
bound
repnz
out
lcall
lret
or
subl
test
push
add
int3
iret
sahf
sahf
pop
cmpsl
or
inc
je
rcll
mov
pop
mov
sub
inc
iret
sub
mov
jno
cmc
lahf
fcmovne
test
pop
mov
jo
ja
outsl
dec
inc
xchg
jle
into
cmp
mov
mov
sbb
pop
ret
ljmp
sub
ds
loope
sarb
push
testb
fisubrl
sub
cli
enter
adc
outsb
xlat
sbb
xchg
cmp
lcall
scas
pop
xchg
or
cmp
imul
sub
add
sub
xlat
in
sbb
push
sub
or
mov
into
insl
loope
shlb
add
inc
or
negb
insb
dec
dec
or
xor
push
imul
out
ret
in
rorb
pop
fsts
xchg
adc
shrb
pop
int
shlb
jmp
xor
adc
ret
push
fsub
rolb
mov
sbb
mov
mov
lret
dec
fidivl
push
mov
cwtl
cmpsb
out
into
jmp
pop
decl
lea
imul
cmp
push
cmp
dec
ja
adc
test
pop
fldenv
pop
cmpsb
xchg
mov
jns
js
xor
fsubr
xchg
imul
fs
fdivrl
sub
leave
rorl
dec
push
inc
or
scas
pop
mov
dec
aas
xlat
jmp
imul
cs
jno
push
jecxz
mov
sub
fisubs
push
jmp
sub
pop
out
jno
add
outsb
pop
adc
mov
xor
sti
push
cmc
or
std
push
dec
repz
mov
sub
cmp
cmp
pusha
mov
stos
mov
push
clc
mov
outsl
cmp
pop
push
lea
dec
pop
or
jecxz
xchg
cld
cmp
rorb
jo
dec
push
stos
scas
loop
inc
jb
dec
in
aas
push
je
je
jnp
scas
push
ljmp
dec
sbb
mov
mov
ds
jg
in
sbb
ja
movsl
and
xor
push
rolb
push
insb
lock
push
jne
outsb
es
xchg
data16
in
scas
mov
fwait
hlt
jg
and
out
sarb
cld
inc
in
push
insl
pushf
adc
or
ja
dec
icebp
lea
and
mov
jns
mov
or
loopne
mov
test
test
dec
xor
insl
dec
outsb
or
mov
bound
sti
push
mov
jmp
insl
pop
lret
andb
sub
add
mov
inc
jg
mov
lahf
push
jne
dec
rsm
pusha
sti
test
outsb
repz
je
out
in
jmp
pusha
scas
cs
clc
xor
jmp
or
cmc
lea
test
fbld
dec
out
fcoms
lret
test
xor
dec
jne
dec
ds
in
subl
and
dec
scas
mov
iret
pop
in
add
and
shll
or
adc
sub
jp
es
es
ror
cmp
cmp
jo
call
shr
into
pop
mov
in
insl
mov
clc
push
cs
jb
shr
inc
mov
in
stos
std
loop
rorl
mov
or
mov
dec
ss
xchg
xor
mov
jo
dec
add
pusha
add
outsb
add
pop
test
ds
out
pushw
push
sbb
dec
out
dec
movsl
adcb
pop
out
outsb
test
mov
sbb
pusha
xor
sbb
xchg
ljmp
dec
or
in
insl
or
adc
xlat
mov
xchg
fistl
push
jb
loopne,pn
roll
sub
sub
negb
inc
pop
aas
imul
outsl
scas
mov
movq
out
sbb
add
ja
and
pop
sbb
aas
mov
pop
xor
or
pop
adc
leave
insl
sub
in
sahf
xor
pop
mov
mov
bound
inc
outsl
xchg
out
pop
scas
arpl
dec
cmp
addr16
add
and
lahf
and
loopne
cmp
cmp
hlt
in
pop
mov
fsubrs
cmp
gs
sub
pop
sub
add
fisttps
bound
ror
jl
aad
inc
mov
jmp
scas
dec
gs
ss
dec
inc
outsl
in
aaa
add
imul
dec
xorb
mov
test
rolb
hlt
cmp
icebp
ljmp
mov
mov
out
lahf
inc
aad
adc
imul
cli
mov
lock
in
jg
jns
push
outsb
and
xchg
add
shr
cmp
jl
cmp
addb
int3
je
inc
pop
xor
es
mov
inc
and
mov
push
addl
mov
fwait
aaa
fmuls
rolb
shll
sub
imul
iret
or
imul
lret
mov
sub
pop
dec
cld
mov
mov
outsl
es
lcall
jg
push
jl
dec
aas
loopne
inc
adc
pushw
mov
es
cli
jle
xlat
dec
or
loopne
mov
xchg
sbb
cmp
fsts
cmp
and
cld
mov
loop
push
dec
xor
cld
inc
lea
mov
fdivr
lahf
into
subb
aad
pop
pop
pop
adc
mov
dec
or
mov
push
push
imul
xor
jne
insb
out
sbb
sub
push
add
jb
insb
mov
mov
jo
enter
ja
lret
pop
sbb
loopne
outsl
cltd
in
inc
out
adc
inc
cmp
adc
int
int
fcoml
pop
adc
dec
je
test
add
int
pop
mull
or
or
jno
mov
fbstp
mov
ja
in
inc
sub
loop
mov
mov
pop
imul
push
aad
inc
in
dec
xchg
ret
or
mov
add
in
int3
mov
jmp
push
sub
xchg
jmp
jmp
jnp
dec
push
test
inc
jo
mov
outsb
dec
lods
inc
push
loope
imul
adc
lds
adc
jo
outsb
call
inc
imul
and
jo
mov
xchg
cmp
inc
inc
cmp
inc
xchg
xchg
fwait
jb
mov
lds
daa
daa
daa
loopne
pop
nop
mov
outsb
negb
xor
or
imul
inc
das
in
into
dec
fs
lods
lods
jle
jb
dec
lahf
into
or
scas
mov
push
lods
mov
outsb
les
or
aad
nopl
inc
out
jp
gs
addr16
mov
cld
ss
sbb
das
push
test
sahf
jecxz
mov
jge
shll
cs
dec
imul
sub
outsl
insb
dec
je
sub
jmp
cmc
jmpw
fistps
xchg
push
sub
cld
jmp
sub
movsl
mov
mov
cmpl
in
test
aaa
cmp
sub
das
je
fiaddl
jp
and
leave
rcr
test
pop
pop
or
fcomip
mov
popa
mov
in
popf
insl
xor
push
jb
pop
stos
dec
xchg
out
inc
or
push
into
int
lods
cmp
xchg
inc
aad
rorb
mov
mov
pop
cmp
adc
mov
fdiv
cmp
cmp
dec
cld
or
daa
pop
test
xchg
das
addb
insl
xchg
aad
sub
xorb
xor
sbb
daa
and
inc
xor
pop
movsb
xor
mov
jmp
pushf
push
and
std
das
stc
mov
aad
lcall
orl
test
add
pop
xchg
outsl
iret
and
lods
jo
nop
jno
shr
cmp
shll
pop
addb
dec
mov
ljmp
lea
in
adc
popf
mov
mov
pop
test
and
imul
jl
cmp
inc
insb
sub
inc
cmp
ss
sbb
inc
jmp
fsubr
dec
arpl
push
flds
mov
loop
lret
mov
outsb
mov
push
dec
in
sbb
ljmp
jl
adc
mov
jecxz
dec
imul
ja
data16
push
jg
pop
push
push
dec
rorb
notl
sub
les
sub
mov
sidtl
fs
loop
mov
movb
cli
outsb
out
jb
arpl
cld
pop
outsl
fisttpl
sub
jne
sahf
out
movsb
mov
and
sub
repz
pop
mov
sahf
sub
in
jecxz
mov
push
and
jb
leave
aas
xchg
xor
scas
dec
jo
jne
xchg
pop
movsl
dec
outsb
gs
sub
adc
jns
popa
sbb
mov
cmc
add
jecxz
jae
inc
adc
mov
ja
jp
and
sbb
je
xchg
jp
imul
addl
rorl
fimull
sub
mov
movsl
clc
fs
js
call
stc
pop
push
pusha
scas
jmp
imul
js
sti
mov
sub
jg
add
jo
pushf
xchg
out
inc
xchg
and
or
mov
jle
in
cmp
into
aam
ret
test
sub
mov
mov
add
mov
test
icebp
outsb
inc
aad
xlat
pop
cmpsl
xchg
inc
pop
cmp
jbe
dec
add
pushf
pop
dec
in
sub
cli
js
or
fsubrl
mov
xor
loop
mov
out
xor
jae
sti
outsb
jg
mov
or
js
dec
add
xlat
std
addr16
mov
dec
xor
dec
add
xchg
fdivl
jmp
jae
jbe
outsl
cs
lcall
mov
push
mov
arpl
cmpsl
aas
push
fisubrs
in
jmp
pop
push
das
notb
pop
inc
mov
in
cld
incl
mov
mov
cmpsl
lock
loopne
push
loope
rcll
mov
push
jp
inc
mov
push
outsb
test
jo
xchg
mov
xor
xorb
in
or
push
push
enter
cmp
pop
pop
outsb
pop
mov
pop
pop
dec
sub
loop
and
stos
mov
cmpsl
fwait
in
jmp
test
sarl
popa
jb
mov
xchg
mov
stc
clc
lods
sbbb
dec
add
pusha
push
push
and
outsb
and
mov
in
int
pop
shr
bound
pop
cli
ret
jecxz
sbb
sbbb
iret
std
mov
les
out
fsubr
sbb
or
ds
scas
inc
pop
mov
adc
pop
mov
jno
lock
lcall
fldenv
int
dec
add
insl
imul
cld
jmp
iret
ljmp
xchg
imul
add
int3
mov
fs
int
insb
mov
and
push
sar
dec
mov
cmp
push
and
push
test
int3
inc
cmp
aam
imul
and
dec
add
add
loope
movsl
mov
jmp
sahf
outsb
dec
outsb
adc
test
jo
pusha
ss
div
xchg
sub
xchg
mov
movsl
mov
or
mov
mov
data16
xchg
movsl
pusha
or
mov
xor
mov
fcomps
inc
xor
push
mov
outsb
lock
cmp
int3
push
cli
jmp
mov
sub
loop
add
and
jmp
rcl
cli
sub
clc
mov
mov
xchg
push
dec
ds
clc
imul
xchg
sahf
xlat
pop
cmpsl
outsb
lret
jmp
stc
aam
jae
in
add
nop
inc
mov
inc
lcall
adcb
insl
sbbl
inc
mov
nop
sbb
addl
lahf
sbb
or
sbb
mov
scas
jp
cmp
or
or
dec
movsb
fcomip
popf
fdivl
mov
sub
jle
mov
ds
inc
lds
fldcw
mov
rcl
jmp
mov
insl
sub
jge
idivl
ljmp
push
fistps
leave
outsl
out
jmp
sti
or
xor
int3
pop
xchg
mov
lods
cmpl
push
and
test
pushf
lahf
inc
out
pop
bound
jmp
out
push
daa
cld
sub
inc
mov
xchg
pop
out
ja
xchg
shll
ror
sub
jmp
jmp
outsl
movsl
cmc
sahf
lds
cltd
stc
mov
sub
mov
dec
jge
in
imulb
inc
nop
cmp
mov
mov
cmp
mov
aas
pop
mov
mov
inc
popl
cmp
outsl
cmp
pop
sub
add
xor
mov
xchg
std
ljmp
dec
mov
outsb
mov
and
jmp
pop
popa
imul
xor
loop
es
sub
mov
lea
mov
gs
sub
fimuls
mov
mov
iret
ficomps
rorl
cmpsl
out
out
inc
mov
adcb
mov
jge
lret
out
mov
inc
xor
mov
sti
in
push
dec
insb
test
push
cld
xchg
jmp
and
pop
add
js
xor
fisubs
fnstenv
das
mov
dec
aas
fchs
faddl
push
imul
adc
add
addl
or
mov
outsb
jbe,pn
jge
out
shl
cmp
mov
xchg
js
dec
adcl
jp
es
and
ret
dec
sbb
add
icebp
mov
inc
sbb
dec
xor
pop
xor
data16
fsubrs
jecxz
pop
dec
dec
pop
mov
xor
lret
mov
pop
dec
mov
mov
inc
in
xor
daa
fcmovnu
or
mov
cmp
or
fdivrs
inc
mov
add
xchg
lret
cmpsb
enter
xor
jb
loope
outsb
cmp
cld
xchg
cld
jmp
test
shll
xchg
push
rorl
lret
cmpsb
adc
fwait
jb
cmp
or
inc
sub
add
scas
jecxz
jbe
dec
mov
dec
jbe
lcall
outsb
pop
out
push
pop
and
mov
push
xchg
mov
pop
repz
aad
jmp
jno
outsb
rorb
arpl
cmp
outsb
jmp
push
loop
jmp
enter
jmp
data16
mov
add
addr16
je
mov
sub
das
dec
push
pop
push
cmc
fstps
int
and
jl
mov
imul
cmp
andb
in
or
cmpb
pop
int
xchg
mov
pushf
or
out
jmp
pop
pop
stos
jl
fadd
push
or
loope
fidivrl
lret
rorb
in
xlat
xchg
scas
xor
lods
adc
lds
or
inc
xchg
not
dec
pop
and
stc
imulb
xor
mov
jmp
xchg
aas
mov
mov
mov
fucomi
cmpsb
xlat
sub
jno
jns
mov
dec
imul
call
in
dec
sbb
pusha
adc
lret
cwtl
cmpsl
test
sub
pop
cmc
lock
pop
lret
cmp
cmp
enter
dec
loopne
xor
movsb
sub
je
push
mov
xchg
jnp
pop
push
adcl
aas
jmp
inc
outsl
shlb
inc
mov
pop
and
cli
cwtl
mov
mov
sti
push
mov
pushf
jge
xchg
jle
fnsave
adc
stos
jge
nop
jl
addr16
sbb
sbb
orl
in
sbb
dec
mov
mov
or
xchg
mov
outsl
rcrl
imul
xor
stos
inc
mov
fisubrs
mov
xor
jmp
and
jg
inc
rorl
outsl
std
or
jae
in
xor
jecxz
insl
out
mov
mov
sub
pop
cmp
not
fsubr
icebp
icebp
inc
rorb
test
out
or
fimull
cmp
xlat
pop
push
inc
dec
dec
adc
outsl
dec
ja
dec
cmpsl
jb
xchg
mov
pop
jae
xchg
or
jg
insb
mov
test
xor
dec
or
test
cmpl
push
shll
push
or
gs
adc
jmp
int3
jecxz
sarb
mov
insb
xchg
pop
inc
mov
xor
xchg
push
mov
jmp
loop
mov
test
loopne
gs
or
repz
mov
mov
mov
dec
lret
mov
pop
aas
rcrb
outsb
in
sbb
cmp
mov
shr
bound
adc
pop
dec
add
sub
jmp
imul
pop
mov
dec
ret
movsb
mov
shlb
xlat
sub
gs
or
orb
dec
outsb
push
dec
xchg
mov
mov
hlt
test
sub
mov
iret
js
pop
xorb
dec
sahf
cmp
andb
fs
jmp
lcall
mov
pushf
and
int
adc
add
add
sbb
push
pop
imul
icebp
cmp
scas
adcb
inc
pop
xor
rcrb
fisttps
xchg
pop
push
sahf
mov
inc
aas
add
inc
or
jbe
stos
ja
dec
lds
cltd
jb
stc
ret
es
sub
xchg
in
xchg
and
daa
jmp
ret
mulb
out
dec
cld
lods
ljmp
bound
dec
sub
les
mov
ret
pop
mov
xchg
dec
filds
add
mov
outsl
dec
mov
xchg
stos
es
mov
cli
outsb
push
push
mov
imul
adc
cltd
lock
xchg
jae
xchg
mov
pop
cmp
test
or
aam
xor
mov
pop
pop
mov
push
test
gs
insl
push
or
jg
push
popa
jnp
mov
mov
int3
inc
gs
pop
inc
int3
rcr
jmp
inc
push
call
pop
aas
scas
test
and
xchg
add
pop
xchg
iret
mov
push
fidivrs
jp
xor
pop
adc
jae
outsb
out
pop
xor
out
xor
mov
push
cmp
inc
sbb
into
leave
out
add
outsl
add
push
pop
stc
pusha
nop
call
cmpsl
jb
fs
cli
popa
mov
sbb
in
je
push
out
xchg
outsl
outsb
mov
xchg
mov
faddl
jnp
js
fldcw
dec
xchg
ds
and
fwait
cmp
mulb
xchg
out
orl
or
cmp
mov
jl
xchg
rorl
sbb
or
scas
xorl
xor
lret
outsb
xor
mov
cmp
fbstp
push
jbe
ljmp
sahf
xchg
cmpsb
decl
lods
scas
inc
ja
outsb
mov
add
jg
and
jmp
cmp
loope
outsl
pushf
jne
mov
sbb
addr16
xor
jns
call
xchg
jmp
push
and
jp
test
add
adc
jmp
ds
jo
xchg
jp
lea
ljmp
arpl
pushf
in
cmp
mov
sub
jne
cmp
or
sub
xor
jg
xor
xchg
jno
in
test
out
cmc
add
je
aam
sbb
movsl
xchg
push
push
mov
in
sbb
adc
leave
movsl
outsb
cmp
shrl
daa
push
jmp
pop
sub
stc
xchg
mov
jmp
je
cmp
in
sti
cmp
scas
ljmp
notb
cmpsl
in
dec
ret
push
pop
dec
push
jmp
or
inc
aas
cmp
test
push
rcl
xor
pusha
leave
and
fcoms
fistpl
push
mov
outsb
sub
jo
leave
adc
out
adc
insl
mov
or
lods
xor
stos
addr16
jae
push
inc
shll
xor
outsb
pop
add
xchg
mov
dec
or
fcoml
test
push
ret
mov
xchg
mov
in
xor
jl
mov
push
jmp
xchg
aad
aas
sbb
out
and
ret
iret
fwait
add
pop
repnz
pop
outsl
mov
repnz
xchg
cmp
arpl
dec
push
cwtl
imul
leave
loopne
inc
xchg
mov
js
cmp
test
mov
push
jb
push
in
outsb
push
jno
and
xchg
mov
rorb
sbb
push
daa
aad
in
inc
repnz
sub
gs
xchg
mov
jmp
sub
push
mov
lret
or
sbb
jmp
inc
cwtl
orl
mov
xchg
jmp
sub
arpl
jno
mov
cmc
jo
push
insl
mov
inc
in
mov
adc
dec
jp
dec
mov
xlat
or
xor
arpl
out
lret
shlb
mov
pusha
lods
mov
jp
mov
mov
xor
out
fs
outsb
mov
xor
clc
push
adc
cli
push
sub
jp
xlat
xor
enter
into
jnp
jmp
stos
fstp
jae
lahf
fmuls
mov
and
test
cwtl
aam
lods
mov
rorl
inc
das
mov
lods
adc
mov
stc
mov
rorb
dec
add
pop
adc
int
cmp
lock
sbb
pop
mov
icebp
rorl
sbbl
mov
data16
sbb
add
mov
xor
lods
mov
in
pop
xchg
jecxz
inc
outsl
jmp
mov
aam
in
xor
xor
out
insl
outsl
pop
lahf
das
fisubrl
ss
repz
cmp
cmc
insl
mov
mov
cmc
ret
xlat
out
sub
add
dec
aaa
add
pop
popf
fcmovb
jo
mov
fldenv
das
mov
testl
movsb
push
test
push
xchg
xchg
and
sub
pusha
mov
gs
test
cmc
pop
into
ja
xchg
js
dec
stos
pop
jecxz
sahf
push
cli
outsb
mov
loope
pop
lret
outsl
aas
dec
lret
pop
mov
sbb
inc
es
lds
adc
in
mov
pop
mov
xchg
daa
pop
ja
mov
inc
iret
mov
sbb
pop
pushf
outsb
ljmp
xor
cmp
or
outsb
add
je
cli
sub
xchg
in
repz
lret
out
dec
outsb
xchg
pop
es
jmp
addr16
outsb
out
lds
call
scas
repz
test
or
lret
inc
fistpl
hlt
jmp
stc
add
jl
push
dec
lea
sti
lea
paddusb
gs
mov
xor
lock
leave
and
push
mov
inc
outsb
cmp
cmp
out
std
push
outsl
pop
das
fs
adc
outsb
in
mov
sub
pushf
mov
sti
mov
xchg
insb
cmp
imul
scas
rcll
dec
subb
sbb
lahf
jmp
pop
xor
xchg
cmpsl
xchg
and
push
add
dec
dec
fstpt
hlt
sbb
push
pop
out
jno
mov
pop
and
sub
jmp
aas
cli
mov
pop
cmpsl
addl
push
int3
iret
xor
dec
mov
xor
rorl
sarb
pop
outsl
ret
popa
mov
cmc
dec
adc
jmp
hlt
data16
popf
sbb
ja
sbb
xchg
sbb
jo
adc
dec
xchg
fdivrs
outsb
sbb
sub
aaa
lret
cmc
ljmp
sub
test
mov
sarl
adc
arpl
daa
outsl
fmulp
xabort
or
xor
add
movsl
sti
fldcw
jg
inc
xchg
mov
mov
add
ss
mov
jnp
adc
dec
adc
sub
pop
in
sub
adc
mov
cmp
in
cli
jmp
pusha
xor
and
pop
and
inc
pop
push
cmp
sbb
and
fsubrl
sbb
jl
dec
push
or
outsb
push
add
outsb
dec
push
arpl
inc
cmpb
lahf
faddl
int3
mov
jo
test
fdivl
adc
into
dec
cmp
push
cmp
push
push
scas
int3
or
das
sub
stos
lods
in
jle
jl
nop
xchg
inc
adc
int3
dec
cmp
pop
push
fsubrl
pop
outsl
imul
push
inc
adc
in
nop
sub
jp
insb
mov
inc
int
addr16
movsb
outsb
hlt
fcoms
dec
push
mov
inc
outsl
js
mov
cs
icebp
insl
in
adc
mov
mov
mov
je
cli
push
inc
mov
mov
daa
sbb
push
pop
std
xchg
in
insl
insb
inc
test
scas
repz
sub
cmp
push
pop
jmp
mov
fisttpl
fisttps
sti
mov
sarl
out
outsb
lods
fwait
cmp
add
pop
in
ja
aam
jnp
xor
repz
push
push
pinsrw
popl
fs
aad
ss
add
jp
pop
jp
nop
sub
je
fimull
das
lret
repnz
int
js
bound
in
push
js
cs
sbbl
jae
in
jae
add
xor
push
inc
jg
push
nop
jmp
add
adc
mov
sarb
sbb
nop
and
jne
sar
cmpb
sub
push
dec
imul
gs
lcall
inc
call
sub
ds
out
adc
xlat
outsb
adc
cmpsb
push
ret
outsb
aam
sbb
subl
stc
jb
mov
mov
out
nopl
adc
loop
testb
mov
xor
fcoml
inc
and
sbb
in
sbb
inc
inc
ljmp
loop
test
adc
and
outsb
inc
add
add
pop
js
call
cmp
mov
dec
nop
outsb
btcl
pop
jno
fwait
pop
mov
sbbb
xor
test
lea
inc
xlat
sub
ljmp
xor
dec
mov
lea
andb
push
shrb
in
out
jns
stos
cld
xor
loope
jecxz
repz
bound
sbb
pop
stos
outsb
outsl
mov
dec
addl
test
and
loopne
fiaddl
mov
inc
dec
dec
dec
mov
lods
pop
xchg
ffree
outsb
mov
sub
insl
repnz
mov
outsl
mov
nop
xchg
dec
popf
dec
adc
in
and
sti
faddp
xlat
mov
stos
outsb
xchg
xchg
inc
leave
pop
dec
and
pop
hlt
or
call
scas
push
mov
xorb
dec
je
pusha
xor
orb
outsb
cmp
imull
or
aas
cmpsb
or
mov
icebp
sub
sub
outsb
cmpsb
dec
pop
test
inc
jbe
jmp
ds
mov
mov
add
in
ret
mov
lods
in
insl
sahf
add
jg
scas
scas
dec
cmpl
add
dec
js
push
mov
sub
lcall
outsb
loope
jg
inc
and
lret
adc
fdivrs
inc
inc
aad
push
sub
push
xor
jg
in
adc
lret
xchg
enter
shrb
hlt
enter
mov
mov
xchg
popf
add
popa
in
mov
ficoml
adc
push
fabs
loope,pn
push
jo
insb
inc
or
sahf
push
mov
jmp
and
fldt
xor
sbb
data16
dec
arpl
mov
push
outsl
pop
int
sub
dec
mov
call
cmp
inc
jns
rep
mov
outsl
out
fwait
mov
mov
rclb
jae
lea
mov
sahf
ss
xchg
mov
movsb
xor
ja
jmp
and
sbb
mov
rorb
and
mov
movsb
push
in
xchg
pop
scas
inc
in
ljmp
adc
dec
popa
sbb
mov
fnstcw
or
push
fldl
pop
scas
push
jp
cmc
jmp
mov
std
cltd
subl
sub
mov
ficomps
inc
pop
xchg
lods
fsubr
pop
push
loopne
mov
insl
jo
scas
popa
mull
mov
aas
rcll
push
shl
push
xor
sbb
adc
mov
enter
pusha
cmp
xor
mov
cld
mov
jge
inc
mov
sqrtps
rolb
enter
push
mov
and
dec
clc
sbb
in
and
int
call
xor
lret
inc
pop
pop
dec
sub
mov
into
daa
mov
or
mov
jns
mov
stc
repz
dec
pop
outsl
cld
ds
xchg
imul
dec
outsl
je
mov
outsb
lock
aas
jb
sub
jae
lcall
outsb
cmc
stos
aas
mov
mov
imul
or
fsubrs
jmp
xchg
xor
cmpsl
in
xchg
iret
push
lods
mov
mov
stos
int
xchg
imul
jmp
ljmp
push
fcmovnbe
jmp
int3
scas
push
push
cmc
jmp
fwait
dec
sbb
inc
and
pop
push
aaa
je
cmp
cmc
or
outsb
mov
sub
adc
outsl
push
jecxz
ds
jae
call
xlat
mov
je
cmc
ljmp
in
sub
adc
lods
ja
sbb
xchg
loope,pn
bound
ja
stos
push
lock
push
cltd
idivb
cli
ljmp
pop
inc
cmp
mov
sub
cmc
pop
out
test
out
sub
add
subb
popa
int3
jo
popl
fsubrp
adc
sub
lods
iret
add
mov
mov
and
pop
adc
mov
test
mov
jo
adc
outsl
add
mov
xchg
push
jne
pop
lret
dec
jb
sbb
push
aam
emms
inc
mov
pop
sub
xor
addb
mov
test
mov
and
inc
dec
cmpsl
adc
outsb
insl
int3
sub
add
ret
or
rolb
int3
fstps
mov
sub
xor
cli
dec
pop
fisubrs
movsb
jne
push
adcl
fucom
inc
int
out
es
pop
sbb
imul
inc
enter
fldl
test
pop
add
dec
fxch
paddsb
mov
test
hlt
lds
in
or
test
mov
mov
lret
sbb
push
push
jmp
outsl
mov
and
sbb
or
dec
or
ret
and
outsb
xchg
xor
cld
dec
outsb
loop
test
sub
or
mov
jl
dec
arpl
lea
or
mov
cmp
sub
ss
aaa
sahf
enter
aam
dec
stos
sbb
and
push
xchg
popa
and
pop
fstl
movsl
mov
shrl
ffree
adc
inc
dec
pop
adc
aad
and
dec
ljmp
cltd
imul
cmpsl
imul
pop
jbe
push
push
sbb
neg
jns
xchg
mov
push
lods
icebp
insb
lods
adc
imul
jmp
enter
mov
dec
xchg
sahf
sub
mov
xchg
cli
cwtl
sbbl
pushf
adc
in
mov
cmp
leave
mov
fmul
push
jp
mov
xor
adc
scas
pop
mov
outsb
or
add
leave
in
lods
cwtl
shrl
push
shr
out
nop
addr16
ret
into
dec
lea
mov
xchg
outsb
push
movsl
xchg
das
dec
test
jbe
dec
aas
mov
push
aad
in
idivl
mov
cmp
or
cmp
hlt
or
or
shr
mov
push
pop
dec
cltd
les
rolb
es
outsb
jp
mov
aas
and
jae
inc
rcr
ss
jmp
sbb
push
insl
sub
sti
js
jmp
js
add
xor
push
pop
xchg
jmp
movlps
minps
in
jne
stos
test
adc
and
sub
jmp
rcrb
dec
pusha
pop
scas
inc
mov
in
insb
ret
dec
jmp
mov
test
add
mov
dec
in
mov
ficoml
jmp
ficompl
orl
or
stos
ljmp
lods
pop
and
mov
cmpsl
cld
adc
sub
jge
xchg
cmpsl
out
popf
xor
out
pop
sub
inc
sub
out
bound
or
mov
mov
sub
sub
cmp
push
lods
outsb
push
push
cmp
adc
dec
ja
popf
and
enter
stc
pop
add
lds
mov
mov
jae
mov
cmp
jmp
call
in
test
mov
int
outsb
push
je
inc
sub
adc
mov
push
into
in
rclb
out
inc
sub
in
repnz
mov
jl
inc
adc
cltd
cmp
in
iret
das
dec
sbb
ljmp
cmp
and
fwait
xchg
mov
and
aaa
mov
int
in
or
mov
inc
xchg
adc
or
sbb
int3
or
pop
xor
adc
sarl
pushf
adc
aas
xor
cmpsb
jmp
sbb
fcompl
xchg
add
xchg
cwtl
arpl
bound
fimull
daa
mov
mov
int3
push
dec
push
insb
fiaddl
lods
icebp
aad
fdivr
xchg
shl
mov
cmp
adc
std
inc
jle
mov
inc
mov
lea
dec
std
aam
jae
and
pop
sub
push
outsb
sbb
jle
xor
adc
mov
inc
cmp
cmpsl
iret
xchg
cmp
lret
mov
arpl
iret
ret
jp
movsb
jge
jp
pop
or
pop
test
hlt
jmp
push
fildll
xchg
dec
rorl
or
push
mov
mov
jge
xor
dec
mov
in
sbb
in
out
add
fcmovu
frstor
jnp
jnp
outsl
subb
outsb
test
ret
stc
or
test
orl
adc
ror
jmp
leave
or
xor
test
jg
stc
cmp
dec
icebp
js
cmc
sbb
lods
enter
xchg
call
sahf
mov
add
pop
lahf
imul
outsl
dec
inc
dec
xchg
push
daa
ja
scas
lcall
add
xchg
shll
lods
subb
hlt
lret
xlat
cs
pop
xor
shlb
xor
mov
in
mov
dec
xchg
xchg
pop
je
inc
mov
es
in
add
add
push
int3
dec
lea
jmp
dec
xchg
push
mov
cmc
mov
pop
outsb
idivl
push
mov
in
shll
and
outsl
xchg
push
pop
jb
pop
push
sahf
aam
xor
pop
sahf
dec
aaa
xchg
mov
jl
insb
mulb
psubsw
mov
and
mov
or
jp
sbb
jb
pusha
out
add
dec
int3
mov
mov
fs
jl
js
mov
push
inc
xor
mov
dec
mov
mov
xor
clc
xorl
jecxz
xchg
ret
jmp
icebp
pop
rclb
cli
jo
mov
mov
pop
inc
adc
idiv
bound
fisttps
movntq
out
rclb
adcb
lahf
cmp
jge
mov
pop
fisubs
mov
ja
ds
xor
push
and
fsubrs
adc
dec
leave
and
cmp
xchg
test
mov
jns
test
sbb
ret
mov
imul
mov
fucom
imul
lods
cmc
pop
cmp
pop
repz
in
add
jbe
xor
int
xchg
es
sbb
sbb
imul
xchg
and
inc
loop
jle
inc
repz
test
imul
out
jmp
cmp
sbb
mov
and
lods
adcl
out
out
push
loopne
mov
lods
es
adc
xchg
mov
arpl
lds
cltd
mov
lret
push
fisubs
dec
mov
xchg
popa
insl
mov
and
inc
into
xor
mov
jno
addr16
mov
mov
jle
inc
inc
xchg
and
mov
lret
fidivl
pop
cltd
lea
hlt
dec
ret
cmp
lods
stos
lahf
mov
insl
ror
add
daa
pop
and
lret
dec
mov
dec
dec
pop
xlat
bound
aam
mov
and
iret
dec
mov
add
scas
outsb
jbe
mov
mov
cmp
divb
hlt
stos
loope
cmc
iret
rcl
xor
pop
ret
cmp
bound
sub
in
add
shlb
sub
jmp
sahf
xchg
mov
outsb
clc
mov
mov
sub
mov
add
dec
aam
or
pop
movsl
mov
out
push
cmp
dec
cs
cmp
xchg
adc
sahf
fstpt
dec
mov
loopne
mov
in
ljmp
cwtl
clc
fisttpl
mov
mov
mov
pop
dec
cltd
xor
add
fnstsw
xchg
jle
sub
pop
mov
mov
inc
testb
jae
sub
in
jmp
adc
into
outsb
std
int3
jecxz
icebp
mov
sarl
addl
mov
out
jno
jle
pop
xor
outsl
cmp
inc
mov
xchg
mov
lea
clc
xlat
dec
pushf
jge
mov
leave
jge
sbb
adc
test
dec
dec
xchg
fcmovu
mov
pop
pop
insb
jecxz
pop
dec
xchg
jle
es
stos
loop
push
dec
cmpsb
sbb
inc
stos
adc
ret
push
mov
pop
mov
dec
sahf
push
jnp
les
mov
outsb
mov
dec
jmp
push
stc
cwtl
push
push
xor
jp
insb
xor
xchg
pop
ljmp
js
mov
push
rol
mov
scas
outsb
pop
jmp
fildll
lret
cmp
outsb
cli
and
lret
sti
idivb
imul
push
andl
jae
xchg
pop
push
sub
sbb
xchg
in
dec
or
fnstcw
xchg
test
mov
cwtl
icebp
aaa
cmp
pop
dec
mov
dec
pop
outsb
fnstenv
dec
lahf
hlt
push
jl
gs
test
jp
pop
insl
cmp
or
cmp
or
inc
sbb
popa
mov
mov
popa
inc
lods
stos
pop
insl
adc
imul
test
test
add
sbb
sbb
mov
cwtl
pop
push
cmp
push
jle
inc
sbb
adc
jo
mov
outsb
jo
std
or
mov
subb
pop
dec
jb
mov
jmp
mov
test
mov
sub
xchg
xchg
mov
inc
pop
sbb
aaa
loopne
push
lret
pop
into
bsf
jmp
jg
data16
sub
icebp
jmp
or
mov
sti
push
jb
dec
faddp
cli
fs
fldt
outsl
imul
movsl
inc
pop
adc
aam
xchg
sahf
adc
xchg
mov
outsb
dec
mov
aaa
setb
xchg
cwtl
mov
inc
daa
push
clc
push
scas
pop
dec
hlt
aas
fnstsw
jnp
outsl
fldl
add
hlt
lods
loope
out
pop
mov
jg
xchg
outsb
or
push
mov
gs
xor
cmc
int
stos
push
stos
cli
aas
outsb
xchg
fdivr
jecxz
rclb
xchg
push
dec
das
dec
sbb
jns
jb
outsl
std
sar
xor
lods
jmp
sbb
roll
iret
lods
mov
fstpl
mov
data16
dec
or
mov
xchg
mov
mov
in
gs
scas
subb
mov
mov
orl
adc
enter
outsb
xlat
in
mov
jmp
pop
mov
mov
sub
mov
jl
or
push
or
and
stos
inc
mov
pusha
cltd
dec
pop
mov
jne
sarb
inc
lret
out
ret
add
dec
outsb
in
sub
dec
lds
pop
in
mov
add
push
sub
insl
fimull
cmp
out
sbb
cmp
int
inc
scas
jp
cmp
jne
xor
push
orl
adc
cmpsb
in
call
nop
jmp
cmc
faddl
jo
mov
fisubl
jb
push
add
aad
rorl
jns
lcall
cmc
jno
in
hlt
inc
pop
in
xor
scas
cmp
dec
jl
push
jno
inc
std
xchg
sti
xlat
xchg
pop
fiadds
rol
add
mov
jecxz
aaa
mov
jmp
insb
cmp
lea
stos
pop
pop
add
jmp
and
push
int3
cmp
gs
aaa
xchg
push
out
mov
into
push
lret
outsl
mov
cltd
das
xor
data16
mov
sbb
inc
icebp
cmpsl
jnp
popf
mov
mov
sbb
in
add
xchg
imulb
lret
sbb
xor
xchg
fs
mov
repnz
xlat
jno
data16
xorb
sub
dec
mov
dec
xchg
data16
lods
or
push
cmp
jge
or
push
in
ds
insb
mov
mov
sarl
inc
push
mov
mov
loopne
jae
xor
dec
pushl
xchg
dec
loop
mov
jmp
fdivrl
jae
popf
or
es
in
addr16
fidivs
mov
pop
xor
inc
sub
cmp
std
arpl
sub
std
out
push
inc
and
decb
in
mov
sarb
aaa
or
enter
dec
inc
cmpsl
popa
lcall
mov
push
cs
cmp
rorl
mov
push
push
sub
fcomps
xor
dec
mov
int
inc
outsl
call
inc
or
in
sbb
adc
div
stos
aas
push
and
test
inc
repnz
push
sbb
sub
dec
icebp
jmp
mov
push
call
ljmp
lods
inc
push
mul
lock
into
adc
sub
outsl
xor
sahf
pop
int
lds
clc
cli
xchg
rorl
dec
ja,pn
movsl
pushf
mov
or
lret
mov
dec
repz
aad
push
xchg
sbb
or
jbe
mov
test
adc
mov
mov
sbb
or
adc
std
rorb
mov
icebp
iret
sarl
add
ret
push
dec
xchg
popf
cmpsl
scas
ja
xchg
call
hlt
dec
push
fs
cmc
loope
xor
sahf
loopne
cmc
xchg
add
in
pop
nop
jmp
or
pop
xchg
lret
inc
cmp
sbb
inc
jb
scas
xchg
sub
imul
xor
in
jmp
fcoml
scas
mov
push
pop
and
and
push
cmpsb
sbb
subl
mov
cltd
jmp
sub
mov
aaa
outsl
jbe
push
je
lods
mov
out
add
dec
out
mov
mov
stos
or
fstpl
test
mov
outsl
inc
lcall
jmp
dec
sub
cmp
test
inc
xor
jnp
call
mov
repz
insb
lods
out
mov
or
insb
je
and
sbb
and
inc
adc
dec
iret
cld
aaa
mov
xor
mov
mov
popl
sbb
xor
outsb
sahf
mov
int
lods
mov
les
int
call
sbb
stos
sbb
jo
mov
cmp
sub
sbb
or
enter
shll
dec
aas
jl
lock
push
pop
sub
xlat
out
dec
inc
or
imul
data16
push
or
pop
push
mov
stos
pushf
das
mov
and
in
pusha
and
fwait
insb
nop
fwait
sbb
add
add
push
outsl
xchg
push
xor
mov
gs
jg
xchg
jbe
scas
mov
popf
test
adc
sbb
xchg
mov
inc
push
cs
lret
cmp
lods
movsb
mov
or
xchg
or
lock
rclb
repnz
dec
jmp
and
mov
sahf
loop
jge
js
mov
lea
pop
pop
push
repnz
test
loope
fwait
sbb
les
sub
cs
mov
outsb
cmp
repz
jmp
nop
fs
icebp
cmp
and
in
inc
xchg
dec
cmp
push
sbb
dec
add
fwait
push
jmp
inc
xlat
sbb
push
dec
pushf
jmp
shlb
jmp
mov
push
and
or
ror
ds
lds
adcb
add
sub
mov
push
xchg
aas
mov
fldenv
or
jmp
dec
ja
scas
out
test
sub
pushf
xlat
push
jnp
adc
stos
mov
mov
jecxz
mov
adc
mov
inc
mov
gs
cmp
and
divb
fistpll
cmp
mov
in
push
or
in
or
nop
adc
jp
les
int
outsl
xchg
inc
inc
in
dec
dec
subb
pop
les
jp
inc
mov
cli
and
dec
jnp
inc
mov
dec
ja
mov
pop
mov
dec
dec
mov
push
xchg
scas
xchg
outsb
adc
lods
adc
adc
mov
loop
pop
mov
push
inc
dec
pop
outsl
popf
adc
movsb
sarl
mov
pushf
and
pusha
mov
jmp
or
out
imul
xlat
test
fnstcw
test
out
jl,pn
and
dec
in
ljmp
push
lods
pop
and
pop
jl
fnstsw
dec
mov
jne
cmp
mov
xchg
cmp
out
inc
shr
and
add
addr16
mov
cltd
inc
fcoms
pop
xchg
lcall
sub
pop
dec
push
call
movsb
call
push
xor
roll
dec
adc
jo
dec
fsubrl
bound
jne
int
xchg
addb
sbb
repz
xor
push
adc
mov
mov
ja
dec
dec
out
xor
shrl
mov
mov
lret
mov
negb
ss
add
data16
fcoml
data16
lds
jp
ret
adc
cmpsb
sti
xor
cmp
inc
sbb
int3
dec
mov
or
and
cmp
mov
les
jmp
push
adc
pop
cli
stc
mov
mov
outsl
orl
pop
fdivl
dec
leave
mov
stc
jecxz
fwait
outsl
push
dec
mov
das
and
pop
outsb
cmp
pusha
jp
xor
dec
out
pop
sbb
mov
push
xchg
mov
repnz
ljmp
pop
xchg
dec
pop
stc
jmp
mov
mov
add
pop
filds
enter
arpl
test
xor
xchg
or
or
pop
mov
and
xchg
ja
sub
xchg
push
out
inc
inc
mov
clc
sub
pop
xchg
xchg
add
cltd
loopne
dec
mov
jb
push
dec
jecxz
cltd
mov
aas
fbld
cmp
jmp
pop
mov
jle
cs
xor
ja
fldpi
int3
inc
fidivrs
push
dec
mov
or
aas
dec
scas
cmp
xor
dec
pop
sbb
lret
lock
pop
jl
lods
imul
xor
rol
push
mov
sarl
icebp
fdiv
mov
mov
bndldx
jnp
test
mov
push
adc
fs
in
cs
xor
outsb
pop
incb
out
sbb
dec
jns
jnp
les
push
outsl
and
mov
jecxz
sub
mov
leave
cmp
and
bound
xor
outsl
ds
rorb
or
shl
add
dec
dec
scas
xchg
arpl
or
sbb
subl
sarl
jmp
or
ljmp
ss
inc
xor
mov
aaa
popa
jne
fdivrs
inc
leave
filds
and
nop
mov
sub
cli
sar
dec
std
add
lret
sbb
xchg
pop
les
sub
mov
int
cmp
mov
sbb
stc
fmull
ret
jb
lods
sbb
mov
inc
xchg
xor
fstpt
add
dec
insl
and
dec
or
cmp
push
dec
cmp
mov
push
shrb
mov
icebp
xchg
dec
push
int
inc
adc
repnz
gs
stc
or
stc
push
sahf
xchg
into
fmuls
inc
lods
cs
mov
cmp
inc
xchg
push
sahf
jmp
mov
cmp
xor
std
push
ret
imul
outsl
pop
loope
out
lea
ret
nop
test
cmp
inc
scas
into
and
and
mov
pop
add
ja
xchg
dec
inc
lods
fsubrp
jle
dec
jmp
or
clc
mov
or
in
sbb
fidivrs
sbbb
jbe
jmp
repz
ljmp
mov
push
jbe
imul
jmp
adc
jae
inc
and
push
ds
xor
inc
dec
aam
nop
lahf
xchg
cmp
iret
push
mov
lods
xchg
cmp
sahf
outsl
fildll
and
cmp
dec
jle
enter
pusha
push
xchg
inc
push
in
stos
jmp
movsb
sub
jge
icebp
xchg
mov
fcompl
pop
add
pop
pop
shll
ret
pop
mov
cmpsl
pop
mov
sbb
mov
xchg
cmpl
push
cmp
pop
sub
mov
fmul
push
mov
test
mov
sbb
push
mov
ds
ljmp
loop
divb
fimuls
fsts
outsb
mov
cmp
or
cmp
sahf
pop
push
push
ds
inc
das
cmp
or
fcmove
dec
out
inc
in
and
add
fdivrl
pop
dec
xchg
outsb
pop
scas
insb
lods
jl
dec
adc
pop
mov
mov
lret
lods
outsl
aaa
mov
cmpsb
leave
jmp
push
push
sub
fsubs
orl
inc
add
cs
ret
xchg
or
stc
mov
js
inc
inc
cwtl
enter
out
insb
and
mov
inc
dec
test
out
cmpsb
cld
pop
push
xlat
fstl
rcrb
sub
bound
mov
int3
sbb
push
jle
fimuls
je
mov
or
pop
aad
mov
test
mov
ret
movsl
dec
in
dec
test
xchg
popf
outsb
cmp
pop
jae
push
add
subl
aad
mov
loope
and
jp
mov
xorb
inc
shrb
jo
mov
cmp
jl
jno
fimuls
test
add
and
cmp
out
adc
mov
insl
mov
dec
imul
pop
adc
xor
mov
sub
fdivs
mov
sbbl
sub
ret
adc
sub
jle
int3
ret
jg
adc
outsb
pop
insl
dec
imulb
jg
outsb
mov
das
ss
lods
jmp
mov
sarb
cmp
mov
and
mov
mov
jmp
scas
mov
mov
test
mov
dec
or
enter
sbb
jne
in
mov
sahf
jmp
in
cltd
fcomi
and
into
in
jge
das
mov
test
mov
mov
jne
in
sub
pop
push
popa
mov
ret
das
into
pop
dec
cmp
xlat
mov
or
imul
repz
mov
lahf
fucomi
dec
dec
out
adc
adc
pop
pop
push
xor
mov
stos
and
rorl
add
cmp
movsb
pushf
outsb
fcmovb
ljmp
repnz
out
jbe
pusha
xor
add
stos
sti
gs
or
imul
adc
cmp
sbb
roll
inc
jno
xchg
xlat
outsb
mov
loope,pn
sub
shr
enter
xchg
mov
sub
cmp
inc
add
or
jl
lds
mov
mov
cmp
jge
into
and
jae
jae
and
pop
mov
lds
sub
push
insb
fmul
mov
mov
mov
in
inc
lcall
je
ljmp
shrb
rclb
or
fadds
inc
lods
pop
outsl
cltd
jno
fsubr
jae
add
cld
mov
jl
adc
mov
or
sti
or
jge
cmp
and
cmpsl
jl
pop
jle
test
inc
sub
inc
shll
jne
negl
cmp
cmp
sub
jmp
push
out
xor
adc
dec
cmp
std
dec
incl
clc
and
sbb
cs
adc
mov
cmc
xor
jo
pop
outsl
xor
dec
mov
mov
adc
xor
outsl
outsb
cmp
gs
fidivrs
or
pop
adc
cmpsb
repz
cmpsb
stc
xchg
movsl
jmp
dec
ss
orl
pusha
push
dec
sbb
sbb
into
int3
xor
mov
mov
sub
add
movsl
int
add
mov
add
insl
push
cmpb
and
or
aam
outsl
dec
fcmovbe
pop
jle
jno
xchg
cmpsb
into
imulb
in
bnd
gs
mov
inc
lods
lods
mov
negb
adc
pop
repz
and
mov
ret
ror
dec
add
jnp
stos
sbb
mov
and
and
fldz
mov
out
in
push
add
in
and
add
inc
je
fsubp
shrb
repnz
jae
pop
sti
int3
int3
sub
add
cmpsl
push
jmp
mov
movl
xchg
cmpsl
xchg
arpl
and
in
iret
lock
mov
sbb
sbb
push
pop
pop
jge
jle
pop
mov
push
xchg
cmpsl
ret
push
inc
mov
mov
in
loop
dec
inc
pop
or
mov
sbb
pop
mov
sbb
adc
jne
xlat
popf
insb
outsb
je
sbb
or
in
push
ljmp
pop
inc
pop
sub
lods
call
cli
xor
rolb
sub
xor
and
jns
js
call
stos
leave
pop
fnstenv
dec
push
clc
aad
int
jmp
daa
loop
jb
outsb
scas
sub
sub
addl
movsb
test
and
xchg
or
into
sbb
mov
cmp
outsb
adc
pop
adc
xor
imul
pushf
mov
or
sbb
rol
lds
xchg
adc
or
inc
pop
and
movsl
scas
test
sbb
shl
jmp
ds
repnz
sub
mov
dec
and
repz
sub
dec
imul
dec
xchg
xor
dec
cwtl
cli
movsb
out
jb
into
mov
adc
mov
mov
inc
adcl
loope
and
sub
mov
loop
xor
std
or
sbb
ljmp
pop
inc
mov
and
mov
movsl
sub
sbb
jno
sbb
jg
cmp
xchg
jb
xchg
loopne
xor
jmp
mov
fs
imul
mov
std
repnz
insb
mov
inc
lea
fiadds
xchg
sbb
cwtl
cs
inc
add
adc
push
dec
insl
jge
sub
ja
sub
and
add
cwtl
std
mov
popa
mov
push
mov
dec
jb
mov
mov
mov
dec
jno
bound
nop
test
or
sub
cmpsl
out
push
xchg
aam
notb
dec
xor
outsb
sub
bound
subb
outsb
aaa
test
fbld
enter
jl
aaa
cmp
and
mov
or
aam
push
sahf
add
outsb
fwait
outsb
sub
xor
jmp
lock
cmpsb
shr
cmp
inc
xchg
in
xchg
sahf
jmp
movsl
inc
enter
and
scas
pop
repz
sbb
outsl
fidivrs
outsl
xor
lods
jmp
dec
mov
js
cmp
mov
sarl
out
aas
out
inc
dec
int
adc
pop
icebp
cltd
out
mov
inc
mov
sub
push
mov
pop
adc
mov
cmp
jp
into
int3
cmp
data16
lea
mov
ljmp
sbb
pop
push
mov
lcall
lea
and
add
mov
scas
lods
sarl
ret
xlat
jmp
push
loopne
decb
xchg
xchg
xchg
movsbl
push
mov
fs
add
pop
jns
in
sbbb
jo
repz
cmp
jp
dec
add
movsl
xor
push
aad
imul
ret
cltd
cwtl
or
pushf
jmp
leave
mov
icebp
mov
ret
cmp
lcall
mov
test
fmuls
stc
sbb
ret
je
inc
punpckldq
or
mov
mov
in
jmp
arpl
sbb
cmp
mov
jl
fbstp
jne
and
pop
scas
sbb
addl
outsl
decb
jl
mov
imulb
imul
sbb
sbb
lcall
outsl
in
jno,pn
xor
mov
fucom
jmp
call
sbbb
f2xm1
push
dec
loopne
rorb
icebp
mov
add
lods
pop
das
jecxz
lods
cltd
add
movsb
pop
inc
mov
adc
dec
jns
out
notb
fildll
push
fmul
sbb
and
dec
xor
mov
jo
addr16
stos
movsl
lret
xchg
dec
xchg
adc
nop
outsb
push
sbb
das
in
gs
in
fnstenv
dec
pop
xchg
push
sbb
inc
pop
xor
xchg
das
imul
insl
out
cmp
stos
adc
cmpb
cs
xlat
inc
xchg
pop
sub
xor
cmpb
fcoml
mov
push
out
inc
and
add
loope
cmpsb
mov
xchg
in
cmp
jmp
push
jbe
mov
pop
adc
sbb
cld
cmp
fadds
cltd
push
cwtl
adc
xor
pop
popf
jmp
mov
aas
js
mov
xor
mov
jmp
or
out
and
jge
jbe
mov
out
mov
pop
push
adc
jl
jnp
in
sub
cmp
cmp
dec
inc
dec
mov
pop
adc
enter
aaa
mov
and
lods
inc
pop
sub
add
dec
movsb
fistps
mov
and
scas
mov
cs
lods
sbb
lock
mov
pop
jecxz
xchg
negl
and
push
lcall
and
mov
or
xchg
idivb
push
mov
jno
movsb
les
lods
xlat
or
xchg
insb
dec
xlat
mov
cs
or
negl
dec
mov
sub
nop
dec
shlb
xor
lahf
xor
ljmp
les
das
dec
push
repnz
lcall
xchg
call
int3
dec
mov
xor
test
outsb
repnz
pop
adc
mov
das
cmp
mov
xchg
aaa
imul
jg
test
cltd
jl
shr
mov
pop
sbb
lods
pop
mov
cmp
scas
popa
shr
lods
inc
xchg
jae
daa
mov
in
add
scas
pop
pop
in
lock
push
mov
test
adc
roll
ss
mov
jle
mov
jge
shl
sub
adc
mov
loopne
cld
pop
and
jp
inc
sub
cli
xchg
pop
fdivs
arpl
fidivl
dec
outsb
cmpsl
fistpll
in
in
push
mov
scas
mov
ds
ret
dec
scas
inc
inc
xchg
fimuls
pop
xchg
jge
dec
push
rcrb
mov
js
rcrb
xchg
mov
pop
popa
rcrl
lcall
inc
xor
mov
lcall
into
jae
mov
inc
sbb
xor
pop
pop
jb
inc
jo
push
sahf
mov
clc
mov
mov
fnsave
jmp
mov
outsb
cmp
ret
mov
mov
insl
dec
lods
jmp
outsb
sbb
dec
ss
mov
cmp
adc
xor
ret
out
arpl
testl
das
sub
gs
inc
or
pop
cmp
cmpsl
stc
stos
dec
cmpsb
and
in
adc
loope
mov
popf
push
add
scas
dec
xchg
or
out
in
mov
and
sub
enter
fisttps
xchg
mov
mov
call
imul
sub
outsl
inc
sub
outsl
xor
cmp
or
push
xor
mov
mov
mov
sarb
dec
int3
inc
add
out
cmpsb
dec
std
test
rolb
xor
lock
fucomi
add
push
dec
adc
in
cmpsl
mov
stos
mov
pop
and
adcb
sbb
rorb
into
sub
mov
ljmp
pushf
or
or
push
std
lret
cmp
and
mov
imul
out
mov
pushf
sbb
outsb
jo
push
adc
in
mov
lret
mov
sar
clc
enter
hlt
pop
imul
push
clc
xlat
outsb
js
sbb
adc
int
in
cmp
fs
jae
ret
js
iret
adc
sbb
sar
outsb
popf
xchg
test
js
sbb
sbb
adc
mov
mov
lods
shll
xor
std
dec
sub
fisttps
pop
nop
or
outsb
sub
enter
inc
push
xlat
sub
rcrw
lret
inc
test
mov
mov
lods
cmp
sub
and
in
aas
cwtl
xlat
mov
xor
loope
adc
mov
movsl
mov
lcall
imul
lret
mov
je
cltd
in
outsl
aas
les
stc
cli
stos
call
jge
mov
push
mov
das
call
dec
and
dec
or
repnz
in
pop
clc
inc
subb
cmp
mov
fimull
pop
fstpl
mov
dec
leave
mov
and
xor
cmp
cli
adc
xchg
xchg
rorb
pop
sbb
sub
sub
mov
aaa
sub
dec
sbb
adc
mov
dec
mov
outsl
test
mov
mov
repnz
mov
out
fs
push
and
movsb
mov
arpl
and
imul
cmp
sbb
xorl
pop
adc
and
imul
cmp
jmp
mov
mov
dec
jl
xor
adc
div
lret
je
outsl
or
xchg
movsl
je
outsl
add
lcall
leave
iret
jns
pop
scas
push
insb
ret
xlat
fisubs
mov
scas
scas
pop
sbb
es
dec
mov
repz
jl
test
xchg
arpl
push
jl
add
insl
pop
lcall
push
push
cmp
fsubs
pop
xchg
enter
xchg
mov
cmp
dec
jbe
stc
cmp
test
out
add
jno
jne
push
inc
hlt
adc
and
out
insb
dec
jns
arpl
push
ss
faddl
mov
mov
daa
sbb
dec
cwtl
std
lods
popa
mulb
jb
inc
sbb
pop
dec
int
push
shrl
movsl
mov
sub
cmpsl
imul
and
push
mov
test
mov
nop
pop
sti
pop
mov
or
mov
lds
fld
pop
mov
cmp
out
sub
jle
sbb
adc
leave
pop
sahf
jg
inc
mov
push
fwait
stos
out
incb
daa
insb
pop
adc
xor
sti
jbe
out
outsb
add
mov
popa
mov
mov
xchg
push
les
test
icebp
or
push
sbb
ljmp
popl
pusha
xchg
dec
pop
es
lods
sbb
test
jl
mov
mov
push
mov
push
push
fiadds
pushf
mov
test
mov
daa
adc
xchg
out
xchg
jmp
xor
mov
jge
mov
popf
mov
xchg
push
fidivl
mov
adc
jle
imul
inc
outsl
inc
leave
mov
lret
push
popa
cmp
xor
pusha
imul
adc
push
movsb
outsl
mov
out
push
xor
testb
dec
into
shll
lea
add
xor
out
imul
cmp
mov
mov
push
or
mov
pushw
out
jno
ja
je
dec
in
inc
sub
push
js
jecxz
pop
inc
in
popf
test
xchg
jmp
inc
inc
sub
cwtl
out
jno
jle
in
xor
inc
push
and
jmp
cli
pop
push
mov
aam
jg
mov
xor
mov
push
jne,pn
mov
jmp
push
jge
subb
outsl
dec
out
mov
jg
jmp
mov
aas
pushf
imulb
fldcw
and
repz
mov
iret
cmp
and
mov
popa
lock
xorl
push
movsl
jmp
mov
push
outsb
pop
mov
xchg
xchg
int
push
loop
sbb
dec
das
int3
int
sub
push
shlb
xchg
std
jne
push
test
sbb
outsb
shrb
jl
jmp
sbb
icebp
imul
ja
loopne
adc
adc
push
cmp
out
xor
jne
add
dec
xchg
or
sub
mov
addb
lods
outsb
cmp
inc
cltd
sbb
push
mov
mov
data16
mov
add
sbb
lock
and
clc
imul
pop
shl
outsb
jb
xor
jmp
add
cmp
cmp
cwtl
inc
test
insl
sub
out
movsb
cmc
hlt
push
add
insb
loope
dec
inc
or
adc
add
add
les
mov
mov
sahf
cmp
sub
mov
xor
push
in
push
dec
mov
aam
add
imul
cmp
mov
shr
test
mov
pushf
xchg
ss
outsl
and
cmp
jmp
pushf
in
outsb
loope
in
push
enter
mov
jae
outsb
mov
scas
test
xchg
lods
sub
test
cld
test
mov
lods
movsb
mov
repz
into
psubsb
ss
mov
imul
js
sub
mov
arpl
mov
or
adc
jmp
push
sti
mov
iret
xor
cmp
ljmp
cmp
and
jbe
cmp
pop
adc
mov
loop
leave
pop
or
shl
add
dec
inc
sub
aad
jecxz
mov
push
jbe
inc
dec
shrb
out
cwtl
mov
imul
rol
add
dec
nop
or
push
cmp
dec
adc
jb
cltd
pop
dec
dec
fists
mov
mov
or
fmull
or
fwait
or
clc
pop
ja
jne
or
xchg
jbe
imul
rorl
aad
xor
leave
cmp
faddl
or
test
fimull
xchg
ret
in
dec
pop
leave
sub
imul
movsb
bound
insl
out
arpl
add
aad
out
enter
out
inc
dec
or
in
sub
rclb
cmp
jmp
jmp
out
loopne
rcrb
fcmovnb
movsb
scas
lret
inc
push
jmp
sub
and
pop
mov
xchg
pop
adc
out
pusha
dec
leave
loop
in
addr16
adc
mov
pop
dec
mov
adc
jl
xlat
cmc
stos
call
mov
out
ret
pusha
jb
addr16
mulb
jo
jnp
sbb
mov
mov
and
mov
dec
pop
or
jno
jle
inc
vcvttpd2dqx
inc
outsl
out
es
sarl
std
in
adc
xchg
cmpsl
scas
jmp
xchg
pop
std
mov
mov
pushf
inc
mov
mov
stos
cmpsb
jp
std
or
cli
andps
dec
mov
push
inc
outsb
mov
outsb
push
mov
xor
out
mov
stc
js
jb
mov
cwtl
push
xchg
dec
movsl
cmc
adc
shrb
aaa
add
xchg
cmc
out
jmp
lea
orl
xor
sub
xor
ret
push
mov
and
iret
imul
loopne
je
sbb
mov
mov
fldcw
or
xlat
cmp
and
inc
test
dec
dec
or
sbb
fcmovnb
mov
iret
orl
mov
in
pop
ds
jmp
fldl
sti
pushf
cwtl
xchg
push
pop
ss
mov
push
jmp
pop
and
mov
dec
push
outsb
jb
or
jns
cmp
outsl
scas
pop
icebp
pop
rolb
test
dec
jnp
cmp
out
inc
in
mov
out
mov
mov
sbb
into
cmp
shlb
cwtl
cmpsl
sbb
scas
ja
out
inc
js
popa
pusha
loop
outsl
cmp
fwait
jns
lds
cmc
sub
inc
outsl
cltd
lock
push
adc
push
xchg
shrb
outsb
xchg
mov
in
aad
jge
frstor
call
out
dec
aas
jns
out
xchg
mov
push
jbe
sbb
cmc
dec
cmp
dec
cli
xor
sub
addr16
pop
in
ret
push
das
mov
mov
shr
sbb
pop
push
sub
aad
nop
sub
cld
pop
jns
lea
mov
add
cmpsb
inc
in
movsl
es
sub
shrl
sub
mov
rol
xchg
int
mov
add
rorb
insb
inc
cmp
mov
jno
sub
lea
adc
fisubrs
repz
out
popa
rol
sbb
dec
loop
cmpsl
ret
dec
cmp
ds
adc
aas
xchg
inc
fimuls
inc
adc
mov
mov
jle
push
in
mov
xor
sub
mov
movsl
les
pushf
stc
movsb
sbb
insl
dec
push
push
jge
pop
mov
pop
fidivrs
jle
dec
sbb
in
daa
icebp
ljmp
shrl
adc
cmp
dec
or
outsl
push
lcall
cmpl
jns
test
push
je
scas
pop
mov
cwtl
dec
or
inc
adc
adc
mov
and
xor
popa
popa
push
pop
pop
std
jg
xlat
imul
aaa
pop
jb
into
inc
in
cld
movsl
jne
loop
fidivl
mov
pop
push
test
sub
adc
ja
pop
sub
or
dec
mov
addr16
rorb
dec
shll
cmp
in
and
fistl
inc
ds
sub
sahf
es
sub
push
fdivr
sub
lea
sbb
xchg
stos
in
dec
adc
jne
into
outsb
mov
push
or
inc
data16
out
test
outsl
movl
and
sub
aaa
sub
shlb
pop
sti
xlat
jmp
push
dec
or
sbb
mov
mov
push
std
dec
push
lea
in
dec
cmp
dec
aam
lahf
jmp
leave
in
inc
xchg
adc
or
dec
dec
scas
sub
std
outsb
lea
lods
stos
jmp
lret
sub
or
movsl
add
push
and
mov
cld
jbe
fadd
jmp
mov
int3
inc
mov
incl
inc
mov
sbb
outsb
stc
addb
test
imul
fsubr
cli
push
sub
dec
in
dec
adc
ds
mov
add
dec
add
mov
sbb
rorb
stos
cli
jp
cmp
sarl
out
fstl
jle
into
mov
loopnew
movsb
mov
sahf
jle
sub
sub
in
xor
xor
cmp
mov
lret
dec
adc
mov
push
adc
iret
push
hlt
jecxz
or
fld
aad
jge
in
mov
fsubr
jae
cmp
pop
or
or
mov
in
mov
call
je
sbb
sub
dec
inc
sub
std
lcall
cmp
loopne
loope
or
ret
or
mov
mov
jo
cmp
mov
xchg
sub
enter
cmpsl
aas
jo
mov
mov
dec
repnz
popa
loopne
or
xchg
test
insb
cmp
pop
push
jmp
adc
clc
mov
insl
gs
insl
push
in
push
add
sbb
das
outsl
xor
cmc
pop
in
in
pop
aaa
lds
jle
scas
lods
jecxz
mov
cmp
mov
rcrb
pop
xchg
mov
push
pop
sub
mov
aaa
rorb
dec
mov
cmp
add
out
dec
adc
pop
bound
push
inc
xchg
lds
repz
subb
sbb
outsl
arpl
add
clc
in
pushf
jae
mov
lret
in
ret
insb
push
cmc
mov
scas
nop
outsb
xor
lods
lcall
dec
test
sbb
push
sub
jmp
dec
jb
dec
add
nop
jno
mov
or
loope
inc
lahf
jb
sbb
xchg
cmp
loope
inc
jecxz
sbb
aas
test
outsl
xchg
push
dec
mov
pop
jno
jnp
adc
in
insl
fildll
cmp
sub
inc
dec
dec
negb
cmpsb
in
lds
pop
test
ss
xor
sub
cmp
jp
mov
pop
adc
bound
add
mov
cmp
add
movsb
add
lret
outsl
mov
jne
loop
out
inc
bound
push
scas
fsubrs
fxam
cmc
mov
int
mov
popa
loope
mov
mov
mov
sub
int3
ret
stc
cmpsl
or
fstps
cs
notb
xchg
sahf
cli
jmp
and
lret
push
pop
repnz
jb
dec
push
stos
inc
insb
push
popfw
out
dec
lret
lods
les
jl
push
pop
fisubrs
mov
fsubp
imul
cmp
pop
rdtsc
int3
dec
ds
insl
sbb
mov
ret
in
add
sbb
jg
fbstp
les
add
ss
and
scas
adc
dec
mov
addr16
int
leave
jge
fldcw
and
in
jecxz
sti
jmp
mov
xchg
or
push
push
xor
mov
inc
aas
ret
cmp
in
and
lahf
cmp
mov
and
in
repnz
dec
neg
cmp
jae
les
cmp
mov
sub
jp
dec
push
call
xor
jae
into
sbb
aaa
xchg
xor
push
xor
mov
jae
mov
fldenv
xchg
jbe
mov
pop
mov
pop
loope
xchg
rcrb
sub
ljmp
mov
cmpb
mov
fucomp
sub
sbb
bswap
push
inc
pop
push
xor
loopne
adc
cwtl
int
push
cwtl
cwtl
xchg
clc
ret
dec
adc
mov
cmp
mov
xchg
cmc
add
push
pop
test
out
ret
bswap
addr16
adc
cmp
jae
mov
imul
xchg
or
outsb
aad
jle
movsb
mov
insl
insl
leave
push
test
arpl
add
outsb
push
ds
jl
bound
mov
push
cmpsl
xchg
in
jmp
out
cli
decl
add
xor
aas
repnz
clc
loop
inc
adc
shrl
pushf
das
fcoml
jg
xor
popa
clc
mov
mov
popf
jnp
adc
testb
mov
in
ja
or
ds
push
das
js
les
dec
call
mov
in
mov
lahf
xchg
add
dec
push
add
in
outsb
and
movsl
and
loopne
sbbl
out
push
pop
in
or
pop
hlt
add
jo
push
je
xchg
jmp
adc
mov
jns
orb
test
xor
leave
rorl
shll
out
push
popa
ja
inc
xlat
stos
pop
fbld
ret
sub
outsb
fstl
ja
mov
adcb
xor
out
inc
shll
roll
imul
sbb
xor
push
outsb
mov
imul
ljmp
adc
jnp
mov
cmp
dec
dec
mov
imul
movsl
dec
outsb
shll
mov
bnd
xchg
in
mov
loope
mov
cld
pop
mov
ljmp
cmp
insl
test
outsl
jecxz
mov
frstor
test
loope
lret
or
and
inc
out
pop
std
imul
cmp
cmp
xchg
scas
lea
fldl
hlt
ds
pop
adc
sbb
sbb
sbb
sbb
mov
xchg
xchg
pop
cmp
test
pop
mov
and
mov
cmpsb
outsb
test
das
lret
mov
mov
scas
scas
arpl
aas
aad
adc
cmp
lods
into
jecxz
and
adc
cmpsb
xchg
addr16
clc
sub
mov
lcall
push
mov
xchg
jmp
adc
push
into
xor
lcall
daa
xchg
xor
mov
inc
fsubrl
add
cli
push
in
test
mov
mov
jg
int3
mov
je
dec
mov
xchg
icebp
dec
outsb
xchg
mov
push
mov
mov
shlb
xchg
ds
inc
fdivl
pop
test
ror
or
mov
int3
jno
lret
mov
scas
sub
mov
push
insb
lret
mov
mov
arpl
js
iret
ret
nop
dec
outsb
enter
jl
mov
in
stos
mov
sahf
mov
loope,pt
in
mov
inc
inc
or
mul
outsb
daa
lret
mov
dec
dec
movsb
ret
cmp
into
adc
dec
inc
js
sub
mov
dec
loope
mov
sbb
loopne
dec
adc
enter
insb
mov
mov
and
or
addr16
dec
rcr
dec
xchg
or
loop
jb
mov
fstps
adc
inc
jnp
inc
dec
jnp
mov
fidivs
inc
jb
test
or
push
cmc
fsubs
or
pop
pop
mov
hlt
pusha
jbe
in
dec
pop
pop
adc
mov
and
push
mov
sub
mov
sbbb
inc
dec
jne
mov
push
outsl
push
sbb
mov
jl,pt
fnstsw
jp
into
in
jno
pop
outsb
inc
mov
sub
in
xchg
in
mov
pop
pop
fistpll
mov
mov
xchg
shr
sbb
mov
adc
outsl
push
mov
rorb
ds
dec
fbld
sub
dec
dec
lret
jne
mov
push
push
rolb
pop
out
jmp
int3
xor
jg
fbstp
xchg
imul
daa
jae
jecxz
lret
mov
jg
nop
mov
mov
data16
test
jge
push
testb
ret
adc
jecxz
mov
and
push
test
or
fldenv
add
fs
int3
push
cs
add
pop
mov
shll
jle
mov
cmovns
push
outsb
cmc
std
lret
repnz
daa
lock
bnd
scas
sbb
push
dec
cmpsl
insb
stos
cmp
imul
iret
push
imul
push
mov
insl
out
ds
push
mov
xchg
outsb
mov
xchg
pop
mov
adc
into
mov
ja
imul
xorl
mov
mov
inc
icebp
inc
inc
or
mov
mov
mov
in
pop
arpl
jns
add
mov
add
sahf
imul
push
sub
mov
shrb
jp
xor
fbld
inc
fistpl
lret
inc
js
mov
aaa
xchg
pop
adc
sbb
cs
stc
sub
xor
xchg
mov
insb
cli
filds
out
orb
push
xchg
jmp
add
push
mov
fiadds
insb
jo
cwtl
or
sbb
mov
mov
xchg
mov
cmp
pop
into
jmp
stos
or
sahf
fcmovnb
or
xchg
push
jecxz
in
and
hlt
pminsw
inc
jge
xchg
mov
jo
pusha
dec
push
test
or
push
adc
lahf
mov
hlt
mov
fs
lahf
mov
ss
shll
mov
imul
or
inc
aas
push
clc
jmp
mov
js
and
into
mov
adc
inc
fs
pop
das
jle
adc
enter
pushf
aad
pop
xor
push
xchg
outsb
mov
rorb
jmp
inc
mov
dec
fs
cmpsl
mov
outsb
mov
jmp
mov
ja
mov
cld
jnp
sbb
dec
mov
cli
outsb
jne
xor
aaa
pop
iret
jmp
add
negb
dec
or
dec
leave
add
into
dec
sbbl
pop
movsl
std
sbb
pusha
xlat
out
cmp
inc
inc
mov
xlat
ds
out
in
mov
pop
inc
inc
outsl
fisttps
xor
cs
lds
mov
mov
push
fxch
mov
popa
cmp
dec
in
pop
pop
jns
fwait
dec
les
int
or
push
push
loope
fsub
outsb
cmpsl
out
mov
cmpsb
push
cmp
test
sub
outsb
test
sub
mov
dec
push
inc
test
insb
int
gs
int
jo
xchg
mov
xor
outsl
imul
rol
pusha
ret
stc
pop
dec
lcall
push
inc
jae
outsb
push
xchg
dec
pop
inc
lods
imull
in
jno
xchg
addr16
inc
fstpt
movsl
xor
cmp
test
or
cmp
jge
outsl
jo
ja
mov
aas
cmp
jecxz
add
repz
and
les
insl
jecxz
cmpsl
inc
pop
subb
jl
sub
mov
dec
xlat
mov
ficoms
into
int3
cmpsb
dec
stc
jmp
pushl
cs
mov
jo
and
push
mov
mov
dec
jae
xchg
xor
inc
jp
jg
sbb
and
pop
outsl
and
sub
cltd
xor
hlt
sahf
mov
or
aas
in
lods
stos
fldpi
subb
add
fs
sbb
imul
and
push
in
add
iret
in
fcomp
mov
pushf
pop
stos
dec
push
scas
sub
insl
imul
xchg
dec
bound
mov
add
lea
lahf
or
jne
cmp
mov
inc
mov
and
call
mov
outsl
jne
and
insb
sub
into
sbb
mov
ss
dec
fcmovnbe
xor
pop
xchg
lcall
or
outsb
ljmp
jmp
rcrb
mov
repz
dec
pop
out
pop
pop
sbb
or
rorl
call
dec
jp
dec
out
pop
ds
jb
cmc
xchg
xchg
pop
dec
mov
adc
test
adc
jns
sub
jo
or
insb
jno
aad
pushf
and
mov
xor
xchg
push
pop
outsb
mov
ja
push
add
inc
test
sbb
xlat
ret
sarb
cmp
test
push
jbe
push
xchg
mov
sbb
pop
dec
mov
loopne
inc
xchg
aad
negl
dec
in
inc
test
out
into
int3
xor
popf
fdivs
sbb
jmp
or
push
mov
jbe
je
and
loopne
or
or
cwtl
ljmp
repnz
sub
cld
add
ljmp
push
ret
lahf
jmp
mov
es
dec
scas
insb
and
int3
xchg
sub
inc
shrl
jmp
ja
mov
sbb
stc
insl
sbb
cs
adc
mov
gs
insl
pop
adc
andl
pop
pop
mov
outsb
out
ljmp
into
scas
test
scas
pop
pop
popf
fiadds
outsl
sub
fcmovne
push
shr
leave
mov
out
dec
es
aaa
lds
mov
cmp
mov
sahf
in
sub
fmuls
imul
push
adc
push
out
pop
add
push
int
subl
or
clc
orl
xchg
cmp
out
icebp
mov
mov
cli
fidivrs
push
fildll
xchg
fisttpl
dec
in
test
insl
aad
jg
in
sbb
ss
mov
adc
loop
repnz
sti
int
pop
or
xor
cli
add
xchg
jns
cmp
scas
dec
imul
lods
pushf
outsb
data16
ds
xor
adc
jmp
mov
aas
sub
fnstsw
stc
stos
dec
int3
adc
arpl
dec
insb
int
loopne
outsb
mov
mov
push
icebp
out
sub
inc
popa
cmc
cs
lret
nop
cmpsb
mov
mov
enter
dec
enter
movsl
data16
mov
decl
xchg
inc
lcall
xchg
outsl
cwtl
imul
ja
pop
xlat
clc
cmp
sub
roll
inc
cmp
mov
mov
jae
mov
bound
pop
cmp
mov
in
jmp
out
out
mov
fists
ja
lret
mov
fldt
cmp
mov
je
jle
dec
and
lret
shl
xchg
addr16
fdivl
sub
dec
les
pop
push
outsl
cmpl
mul
dec
scas
xchg
pop
mov
popf
push
outsl
fwait
mov
jns
add
inc
in
pop
xor
add
and
push
into
out
arpl
push
sub
outsl
test
and
out
add
out
inc
jo
clc
mov
movsb
loop
test
sub
add
fadd
pop
cmp
mov
push
sub
push
das
mov
in
loopne
push
fldenv
xchg
mov
outsl
lret
dec
fnstenv
mov
dec
pop
movsb
mov
push
out
cwtl
imul
xor
jle
dec
inc
in
jmp
aam
jl
push
popa
jns
mov
mov
jmp
mov
test
push
popf
cmp
mov
add
stc
sub
and
mov
cmc
clc
jno
xor
add
pop
in
outsl
mov
lea
sbb
lcall
outsb
aaa
mov
popf
cmp
cli
mov
fcomp
sub
mov
pop
lds
pusha
inc
test
dec
ret
jb
aas
adc
dec
aad
loopne
inc
in
lds
shlb
shl
push
js
dec
lret
mov
pop
push
outsl
shl
ljmp
enter
inc
ret
mov
int
shrb
xor
scas
xchg
ljmp
scas
sbb
addb
dec
cld
xorb
jno
pop
xor
inc
and
nop
rol
notb
jmp
push
sbb
in
mov
mov
ljmp
call
xlat
pop
jl
aas
fsts
mov
cmp
push
mov
sbb
push
je
pop
mov
cmp
fwait
mov
fsubrs
cmp
scas
mov
outsb
cmpsb
lock
mov
sub
xchg
cli
ss
mov
sub
lahf
dec
mov
imul
jo
push
adc
push
inc
xlat
outsb
out
cwtl
ret
jb
dec
das
mov
rclb
dec
out
adc
pop
lcall
mov
inc
iret
in
jmp
fsub
mov
xor
pop
jns
sbb
into
xlat
push
jb
icebp
adc
pop
rcl
push
sub
mov
repz
and
gs
fnstenv
jnp
outsb
lcall
nop
pop
cmp
ss
insl
cmp
or
cmp
adc
jb
mov
pushf
jne
ja
sahf
mov
sbb
pop
movsl
inc
dec
dec
nop
adc
outsb
enter
out
push
data16
jle
jle
std
int3
xor
mov
mov
add
xchg
ss
adc
js
xor
roll
outsl
outsb
sub
pop
cmp
dec
addr16
pop
mov
dec
xorl
cs
pusha
stos
scas
sbb
cmpl
jg
add
inc
or
loopne
xor
add
mov
aam
jae
outsl
cwtl
mov
mov
std
aas
das
xchg
dec
into
and
inc
jle
jbe
sub
jmp
cmp
mov
mov
dec
out
es
popf
mov
mov
dec
ret
loope
andl
jle
pop
and
fs
pop
mov
xchg
scas
add
xchg
dec
cmpsl
jb
push
mov
xor
pop
mov
xor
jmp
mov
pop
fs
xor
stos
nop
mov
es
scas
fnsave
mov
test
xchg
mov
push
mov
addl
inc
and
mov
bound
xor
xchg
in
jo
and
fnstenv
dec
push
pop
inc
repz
lret
inc
push
cltd
dec
jle
jmp
and
in
xor
jge
in
inc
lcall
aas
jle
in
push
into
mov
and
in
out
or
adc
testb
pushf
cmp
nop
scas
sbb
std
dec
xor
movsb
dec
negb
jmp
repz
cmpsl
insw
lahf
mov
rclb
nop
jmp
lahf
popa
pop
mov
test
cmp
cwtl
xchg
clc
sbb
mov
divl
dec
cmpsb
mov
scas
jns
or
inc
mov
stc
test
aad
cmp
outsb
icebp
ret
stc
or
outsl
cmp
cld
into
popf
mov
in
leave
mov
lods
mov
cmpsb
jmp
or
jmp
xchg
mov
xchg
mov
lret
jb
insl
lods
jle
outsl
cmp
outsb
cld
int
push
add
xchg
jmp
pop
xor
jge
adc
insb
fldcw
arpl
push
cmp
adc
jmp
or
pop
pop
jl
gs
sub
inc
jb
push
les
adc
push
add
xchg
jle
cltd
inc
dec
dec
imul
adc
imul
dec
lret
sub
inc
ljmp
test
mov
mov
out
ljmp
mov
rorb
xor
xchg
repnz
mov
dec
enter
or
mov
rol
addr16
cmp
dec
xchg
icebp
cmp
ror
adc
pop
push
dec
pop
or
movsl
fisttps
xchg
outsb
adc
test
xchg
xchg
dec
jge
imul
dec
inc
push
sbb
into
mov
imul
xor
mov
xchg
jmp
ds
mov
mov
les
jns
std
and
xchg
les
bound
xor
pop
lret
out
mov
out
repz
sub
cltd
dec
popf
push
test
or
sti
xor
pop
push
outsl
scas
sub
pop
cmp
inc
in
mulb
and
push
push
pusha
dec
jns
sub
inc
imul
es
cwtl
xchg
jmp
lret
fcomip
jb
xor
sti
lods
push
insb
sub
mov
mov
test
repnz
rol
out
cmp
ja
pop
in
xchg
pop
sbb
out
mov
leave
sub
in
sahf
add
sub
int
into
sbb
cs
gs
dec
pusha
jnp
sub
mov
pop
sub
cwtl
sub
mov
rcrl
aad
cmpsl
add
sub
fs
jmp
adc
xchg
jns
loopne
aad
insl
dec
mov
mov
dec
lea
mov
inc
outsb
in
and
iret
mov
mov
aas
push
fisttpll
es
jb
adc
pop
jl
fs
and
clc
or
mov
cmp
insb
aam
cmp
push
mov
filds
push
mov
mov
fdivr
sub
cmovno
in
mov
pop
dec
mov
in
pop
lds
imul
cld
in
mov
fs
ret
loope
lea
leave
shlb
add
mov
popf
jno
jae
cli
int3
mov
sub
xchg
jmp
shlb
mov
mov
dec
push
mov
clc
mov
mov
or
lds
fstl
jae
mov
outsb
fnstsw
mov
sub
scas
aaa
mov
xchg
xorl
mov
fstpt
dec
sub
js
lret
imul
stos
and
call
test
cmpsl
jecxz
push
push
jmp
jbe
sahf
sarl
pop
cmp
enter
jmp
fldenv
scas
jns
ss
and
in
push
xor
outsb
test
or
inc
inc
dec
jmp
ds
mov
js
jnp
push
call
fcomps
sub
mov
scas
in
xor
inc
cmp
jl
cmp
outsb
icebp
adc
pushf
and
lods
jmp
push
hlt
sub
mov
jns
fwait
in
inc
inc
leave
push
popf
adc
insb
mov
sub
insl
lock
daa
mov
cmp
orb
outsl
dec
cmc
lcall
outsl
jno
out
out
pop
pop
adc
loopne
aas
lea
data16
add
sub
mov
sbb
xlat
xor
mov
dec
lds
fidivrl
xchg
pop
add
into
es
or
push
nop
xchg
cs
sbb
cmc
mov
mov
shl
in
or
dec
and
bound
push
inc
fisubrs
jecxz
das
sahf
lods
and
mov
sbb
dec
jmp
sar
mov
mov
push
mov
in
jmp
int
mov
mov
cmp
push
inc
icebp
jl
jl
lock
shll
movl
mov
jb
dec
pushw
inc
mov
pop
mov
push
adc
lods
cmp
ds
dec
push
adc
rcll
std
mov
in
jne
shrb
call
inc
push
jae
ljmp
pop
inc
mov
add
cmpsb
test
shrb
sub
cli
sub
sub
mov
out
mov
leave
mov
mov
into
xor
cld
outsb
push
leave
or
cmp
out
pusha
out
out
test
pushf
cwtl
xor
sbb
das
aas
jbe
push
or
sbb
adc
adc
fwait
test
test
fistpl
dec
test
in
movsb
fwait
mov
xor
jl
sbb
sbb
mov
push
ljmp
mov
outsl
gs
div
mov
aas
mov
aad
mov
icebp
and
cli
sahf
dec
cli
pop
lret
mov
jmp
lret
jmp
jp
xchg
cmpsl
in
mov
fs
xchg
movsb
or
pop
and
stos
outsb
in
popa
stos
cmc
sbb
cmp
inc
arpl
cmc
test
mov
xchg
pusha
movsl
or
call
aam
shll
add
push
inc
das
cmp
mov
mov
stos
idivb
lock
movsl
push
cmc
mov
mov
in
cmp
cmpb
sarl
sub
pop
test
pusha
add
push
fs
sbb
test
sub
xorb
pop
dec
sbb
cld
xor
outsl
dec
icebp
mov
arpl
out
push
popa
inc
jno
add
adcl
mov
fnstcw
test
push
lods
int
ror
push
xor
out
test
fisubs
lcall
pop
push
rorl
leave
add
out
cmp
push
leave
stos
sbbb
outsl
mov
ret
int
sub
dec
iret
in
jl
mov
and
adc
sub
dec
in
das
jnp
jo
mov
mov
out
sub
mov
pushf
enter
test
sbb
lea
cmpsl
pop
mov
and
push
cwtl
push
mov
dec
mov
in
in
xor
mov
sub
test
ljmp
mov
imul
orb
test
outsb
mov
xchg
xor
inc
pop
xor
call
add
and
jno
and
mov
sahf
bound
insl
push
sbb
mov
sub
out
mov
in
sub
jne
push
lea
jo
mov
cmp
out
loop
inc
pop
bound
cwtl
push
outsb
lret
lea
in
clc
loope
in
cli
pop
mov
pop
lret
mov
fistpll
dec
cs
cs
pop
int
int3
dec
dec
mov
mov
add
gs
nop
int
inc
sub
out
movsb
inc
pop
push
js
mov
movsb
cltd
cmc
jo
dec
je
lds
outsb
dec
push
movsl
into
loope
mov
icebp
xor
pop
jle
mov
stos
fadds
pop
pop
and
jge
xchg
adc
mov
cld
stos
bound
fs
lcall
aad
scas
sub
mov
enter
lea
bnd
pop
jmp
sti
pop
fimuls
xor
clc
lret
outsb
leave
push
test
das
aaa
sar
jmp
mov
lods
rcr
push
roll
sbb
sbb
outsb
lret
mov
in
inc
sbb
dec
xchg
or
int3
pusha
jae
lea
cmp
dec
fcompl
loopne
pop
cwtl
inc
xchg
hlt
mov
mov
outsb
dec
ret
repnz
fcmovnu
cld
nop
outsb
ss
in
lret
data16
mov
jae
fwait
popl
lret
lret
mov
mov
orb
jb
inc
jge
jmp
push
mov
les
jmp
add
inc
pop
jo
jae
sub
mov
aad
cmp
inc
movsb
cmp
outsb
cs
dec
outsb
out
fmuls
lcall
lahf
dec
in
in
push
mov
shrl
dec
cmpsb
push
add
jge
adc
sarb
idivl
lods
mov
in
testl
andl
xchg
ficoms
ret
pop
cmp
push
xchg
mov
pusha
xchg
mov
dec
mov
jno
lret
imul
cmp
and
xchg
addr16
js
in
xchg
mov
add
inc
mov
imull
pop
pop
sti
and
movsl
mov
xchg
ret
lds
mov
fs
popa
sub
sbb
mov
mov
dec
sarl
sub
pop
sub
inc
xchg
mov
sub
std
scas
or
push
push
dec
lea
scas
xchg
das
sar
mov
bound
dec
inc
push
stc
sbb
xchg
xchg
add
rcrb
out
dec
xchg
pop
pop
std
sub
test
gs
ficomps
fidivrs
loop
xor
jo
cmpsb
push
add
or
test
je
nop
mov
cmp
cli
sub
add
ja
cmp
adc
mov
iret
or
lret
mov
push
lea
or
push
icebp
sub
mov
pop
sbb
out
in
aam
xchg
pop
adc
rorb
bound
sub
movsl
or
jg
mov
outsb
jno
sub
lods
in
mov
scas
pop
add
mov
lret
add
mov
and
push
pop
insl
mov
mov
outsb
loopne
imul
imul
int3
pop
hlt
mov
jb
jg
jp
mov
jns
jno
dec
stos
or
inc
outsb
xor
add
cmpsl
sub
ds
mov
dec
xor
add
xlat
push
outsb
sub
dec
pushf
mov
fs
repnz
mov
adc
out
pop
gs
cld
and
jg
push
push
scas
call
es
in
mov
mov
outsl
add
push
dec
imull
inc
jbe
lret
insb
inc
lret
mov
mov
into
lock
push
dec
push
sub
clc
adc
jae
ljmp
cmp
jno
leave
add
mov
hlt
push
scas
mov
inc
in
cmp
es
jns
in
sbb
outsb
int3
cltd
cmp
pop
or
xchg
xorl
inc
dec
or
adc
andb
adc
xchg
push
pushf
inc
jo
push
add
and
mov
test
sbb
pushf
scas
inc
jno
mov
cld
inc
aaa
out
faddl
cmpsl
movsl
pop
pop
loop
lods
jmp
ret
adcl
fwait
outsb
testl
jne
aam
es
int3
and
outsl
jns
test
mov
out
pusha
dec
daa
jns
jns
cmc
fisubrl
add
dec
mov
sub
sti
fldpi
jle
cmp
call
cli
sbb
sub
loop
sub
inc
dec
jecxz
adc
sbb
jae
popf
stos
push
in
ss
add
popf
xchg
xor
movsb
bound
pop
outsb
inc
mov
lahf
jmp
pop
fld
and
xchg
add
xor
nop
sti
inc
std
add
cmp
mov
jae
fwait
cs
mov
or
jno
into
iret
pop
arpl
xor
int
xchg
and
test
dec
inc
adc
dec
adc
pop
sub
xchg
add
lods
pop
mov
cmp
and
pop
bound
orl
in
idivl
ljmp
cld
stc
xacquire
jmp
and
cli
out
popa
add
mov
lret
outsb
and
cmp
jbe
inc
sbb
inc
ds
out
insb
mov
rol
movsl
jle
dec
idiv
call
lods
cmpsl
out
std
mov
ss
ds
test
clc
movsb
push
out
inc
sbbl
in
sar
out
push
cs
xchg
cli
aas
pop
jle
imul
popa
lock
mov
repz
push
cmp
addr16
in
arpl
lods
sbbb
add
sbbb
into
stos
mov
movsl
inc
je
inc
test
popf
insb
dec
xor
fidivl
dec
je
pop
leave
popa
shll
add
and
ss
mov
adc
xchg
addr16
adc
scas
push
aam
inc
lcall
inc
jmp
arpl
adc
loope
jns
lock
mov
lea
test
mov
jb
popa
es
push
add
movl
dec
outsb
ss
subb
xchg
out
enter
push
mov
mov
cmpsl
and
pop
jg
movsb
ds
push
jo
pop
in
push
vminpd
add
aad
xchg
pop
aaa
sub
push
cmp
imul
ds
inc
or
mov
dec
mov
adc
or
shrl
sahf
mov
dec
in
cmp
sahf
movsb
ja
insb
jnp
push
sub
pop
cmp
imul
aam
cli
dec
cmpsb
sbbl
outsb
cli
sub
push
lods
out
inc
cmp
push
sub
dec
mov
rorl
ss
lods
jno
mov
pop
push
cwtl
add
pop
dec
and
mov
nop
jae
inc
iret
xlat
fcmovne
fs
xor
adc
jne
cmpsl
iret
add
gs
imul
repz
mov
icebp
hlt
jg
xor
loope
xchg
arpl
call
mov
fidivs
mov
xor
xchg
ficompl
dec
and
adc
sub
cmp
cmp
movsl
scas
ljmp
mov
or
pop
add
fmul
pusha
mov
xchg
dec
jno
lret
sub
aam
outsb
les
cltd
sub
dec
inc
loope
loopne
add
xchg
das
js
rcrb
jnp
orb
or
shrl
sub
pusha
in
sub
jne
push
ss
pop
mov
push
xor
int
pop
dec
mov
push
mov
push
pop
add
sub
adc
test
and
pop
mov
aad
jmp
push
pusha
fildl
stos
jle
or
lahf
cmc
sbb
mov
mov
xchg
cmp
adc
dec
mov
bound
pop
stos
ret
push
dec
xchg
pop
mov
repz
test
dec
xchg
lods
icebp
outsb
js
shl
mov
outsl
inc
insb
cmpsb
mov
out
fstpt
jmp
pop
jno
dec
shl
push
dec
outsb
xor
dec
or
enter
ja
mov
mov
in
adc
xchg
add
arpl
and
mov
fimuls
push
in
pop
or
sub
mov
push
fistpll
and
in
add
outsb
xor
pop
rol
inc
insb
inc
sub
mov
test
fsubl
pop
out
sti
outsb
sbb
out
inc
mov
roll
imull
adcb
adc
nop
fcoms
cmpsb
into
mov
push
lock
jnp
push
out
push
xchg
jg
inc
sti
sub
inc
test
negb
ss
push
mov
sub
push
imul
test
cmpb
movsb
mov
aas
inc
rol
enter
std
pop
jnp
outsl
jg
sub
insb
dec
aaa
leave
bound
xchg
mov
mov
xchg
push
sub
outsb
dec
pushf
or
iret
pop
mov
jnp
inc
jne
js
inc
cmp
inc
push
jbe
stc
outsb
movsl
fcmove
mov
or
enter
push
rorb
jno
cli
dec
sub
mov
repnz
fldl
repnz
imul
out
push
push
rcrl
sti
dec
jl
cltd
cmp
call
pop
outsb
mov
mov
fdivrl
idivb
mov
or
mov
jp
andb
adc
lods
cmpsl
pop
ljmp
push
aaa
xchg
test
mov
mov
lds
mov
scas
sub
and
outsb
andb
jmp
pop
or
loopne
jle
mov
out
test
mov
subb
lods
or
test
lahf
sub
sahf
sbb
arpl
insl
and
aas
scas
outsb
or
pop
xchg
outsb
in
gs
adc
jmp
imul
jnp
dec
outsb
xchg
mov
shr
or
fiadds
test
and
adc
jle
cld
add
mov
fmull
jb
xor
pop
cmp
xchg
mov
fisubrl
outsl
pusha
es
outsb
arpl
xor
xlat
cltd
xor
cmc
out
fsubl
mov
cli
jge
out
fstpt
mov
dec
cltd
in
fsts
cmp
lods
xchg
int
into
inc
pop
push
jno
outsl
push
inc
std
jecxz
add
pop
pusha
jbe
and
push
add
lahf
repz
hlt
rorl
xchg
xchg
pusha
stos
push
mov
insl
add
das
sub
js
xor
out
rolb
shll
pmulhuw
testl
push
cmp
aad
xchg
jo
or
ret
jmp
ljmp
into
push
or
pop
std
sub
push
jmp
shll
sub
stos
cmp
and
outsb
sbb
int3
dec
iret
sub
popf
dec
mov
jbe
inc
outsl
xor
lods
xchg
jae
in
ror
cwtl
push
ret
jg
inc
jmp
push
lock
mov
pop
scas
ret
adc
push
mov
jecxz
pop
xor
loop
mov
adc
outsb
jbe
add
mov
cmp
arpl
xor
lcall
push
rcll
and
cmp
mov
cltd
cwtl
add
sbb
dec
add
out
insb
cli
insb
mov
push
iret
jbe
repz
mov
jo
lea
mov
dec
xchg
or
push
clc
xor
test
loopne
add
adc
jo
mov
punpcklwd
nop
popa
in
cli
mov
inc
in
jns
xor
cmp
mov
jb
loope
cmp
sub
and
movsl
jae
dec
sub
dec
xchg
and
dec
or
mov
mov
jg
dec
lret
cmp
xrelease
shrb
in
enter
xor
gs
pop
jbe
inc
dec
xchg
mov
dec
cmp
sbb
mov
sbb
fstpl
sarb
inc
push
push
movsb
sub
pop
or
sub
or
shl
xor
jno
sahf
cmpsb
shll
test
cltd
add
jmp
dec
cmp
arpl
or
pop
jns
or
sub
clc
add
push
push
ficoml
mov
add
mov
in
decl
xor
push
call
sub
add
call
pop
mov
rclb
dec
imul
mov
push
daa
xchg
out
adc
mov
fldcw
les
and
popa
and
xchg
bound
cmp
gs
or
pop
out
outsb
xor
test
jne
mov
push
mov
dec
sbb
cli
push
imul
dec
nop
in
vunpcklps
and
pop
jb
mov
aad
jb
js
sbb
push
into
jmp
xor
jecxz
push
cmpsl
js
push
xchg
outsb
add
inc
cmp
test
push
inc
imul
jno
or
dec
inc
neg
push
cmp
sbbl
je
imul
je
jle
jecxz
mov
out
xchg
pushf
outsb
outsb
push
daa
sub
aam
jno
fcmovnu
mov
dec
jmp
insb
jg
shrb
xchg
daa
jmp
pop
lcall
cmp
inc
lea
jecxz
cmp
jmp
sbb
fwait
cmpsb
xchg
incl
daa
or
xor
dec
xchg
out
xor
fcmovbe
ja
fisttps
sti
push
mov
jle
add
sbb
or
ljmp
xor
cmp
add
pop
inc
adc
stc
nop
mov
lods
push
scas
mov
mov
xchg
inc
sahf
add
loope
aas
out
stos
mov
dec
sti
loope
jnp
pop
ret
or
cltd
call
lods
jmp
loopne
push
sbb
test
push
cltd
jmp
xor
add
sbb
cmp
sti
or
inc
mov
or
add
xor
sbb
in
js
js
aad
fstl
in
cmp
scas
inc
loop
outsb
scas
jge
sbb
test
inc
push
shr
gs
pop
dec
icebp
jmp
and
aas
imul
mov
xchg
mov
out
pop
xor
xchg
xacquire
push
sbb
xor
les
into
inc
addb
xorl
shrb
add
adc
sub
pop
xor
stos
hlt
shll
dec
mov
sub
xrelease
imul
into
clc
lret
or
lods
in
pushf
addr16
fisubl
jecxz,pt
imul
push
lock
outsb
pop
xlat
popf
add
lret
rcrb
popf
push
add
ljmp
faddp
mov
mov
fisttpl
popf
fiaddl
fwait
and
dec
icebp
aas
ficoml
jle
outsb
stos
stos
xor
das
test
jmp
inc
and
pop
pop
mov
inc
xor
and
xor
or
fnclex
insl
mov
cld
cmp
movsl
xchg
xor
push
pop
jmp
ss
js
xchg
pop
cmp
bound
imul
sbb
cld
jmp
addr16
ror
mov
xchg
push
call
cmp
arpl
jl
js
popw
ss
sbb
xchg
in
jbe
push
adc
dec
int3
pop
jns
push
push
jb
or
jae
into
or
aaa
loop
lock
or
mov
ja
sbb
std
jmp
js
aad
loop
in
sub
ret
jmp
je
inc
nop
not
in
cltd
pop
and
gs
jl
lods
push
std
aam
sarl
push
es
inc
scas
call
fisubrl
in
inc
dec
mov
cmp
leave
inc
mov
xor
sbb
cmp
out
xor
outsl
dec
jl
push
inc
loop
pop
pop
rclb
insl
pop
push
sub
in
mov
push
push
sarl
jle
jle
xchg
and
in
ljmp
inc
push
cs
test
in
sub
mov
dec
pop
aaa
sbb
cmp
jg
les
and
push
jle
cld
inc
dec
popf
xor
mov
insb
jmp
xchg
jmp
leave
xchg
ja
lods
sti
jo
pop
pop
dec
cli
dec
or
adc
cmc
and
or
adc
out
xorb
cltd
loopne
xchg
outsb
dec
scas
test
loop
mov
xor
push
pop
sub
out
pop
xchg
xor
dec
xchg
test
adc
and
sub
inc
push
and
cltd
inc
sub
out
mov
aas
hlt
sbb
insb
outsb
mov
and
mov
cmp
cmpsb
or
inc
adc
outsb
and
mov
dec
in
ja
xchg
aaa
stc
and
jb
fcoml
jbe
iret
add
push
push
add
out
hlt
add
icebp
into
lea
pusha
push
mov
shrb
mov
js
jecxz
push
pop
popa
dec
cmc
pusha
out
popa
jl
mov
pop
and
xchg
pusha
jmp
je
cld
fs
mov
outsb
fadds
andb
js
sbb
push
outsb
loop
cmp
jmp
add
pop
sub
pop
popa
inc
cmp
push
sub
hlt
int3
push
lret
mov
or
jmp
mov
pop
je
mov
mov
fs
iret
imul
xor
mov
aad
add
imul
scas
int3
lds
jg
mov
into
pusha
pop
aaa
xchg
mov
je
inc
imul
outsl
adcb
pusha
pop
mov
pop
insb
xor
mov
sub
jb
ficomps
pop
jmp
xchg
inc
adc
add
mov
lods
shlb
mov
aas
push
inc
lret
lock
loope
sahf
and
inc
push
sti
mov
jp
fstps
out
lret
outsb
mov
sbb
xor
sub
testl
xchg
sbb
push
cld
push
cmpsb
mov
test
push
xchg
ljmp
jbe
into
push
or
mov
mov
data16
pop
mov
ljmp
inc
scas
mov
shrl
mov
mov
popf
sub
mov
in
outsb
push
cmp
push
fwait
popa
or
sbb
push
loopne
dec
cmpb
int3
xchg
ret
mov
mov
sbb
jle
pop
dec
sub
popf
out
add
dec
movsl
rolb
flds
loope
arpl
je
divb
mov
pushl
jg
adc
test
push
push
sbbl
ss
outsl
lock
cmp
mov
xchg
roll
inc
inc
inc
and
cld
fsubrs
xor
mov
mov
mov
xchg
push
shll
cli
cwtl
dec
lea
xchg
test
fdivrs
sbb
dec
movsl
imull
or
add
or
mov
test
ret
loop
or
lods
sbb
cmpsb
mov
or
scas
sti
ret
int3
daa
mov
mov
push
ret
out
scas
push
addr16
insl
lcall
cmp
adc
pop
push
mov
outsl
xor
or
push
add
add
insl
cmpsl
pop
out
orb
clc
les
out
sub
pop
test
mov
pop
test
cmp
cmp
xchg
jbe
orl
ds
iret
js
aad
mov
jnp
fs
pop
and
inc
outsb
aam
jb
aas
fisttpl
dec
loop
inc
mov
sbb
add
or
dec
add
inc
int3
fsub
xchg
movsl
xor
cmp
or
pop
pusha
add
sbb
mov
mov
outsl
es
or
xor
mov
mov
xor
mov
arpl
les
inc
in
pop
pop
test
mov
fstl
test
dec
sub
inc
inc
imul
mov
jno
test
int3
cmp
stos
jo
push
mov
in
int
int3
loope
jbe
xchg
mov
rolb
aam
pop
adc
sti
mov
fistpl
mov
dec
push
dec
xchg
jbe
lret
mov
loope
loop
cltd
pusha
dec
xor
push
rcll
or
mov
mov
xor
shr
mov
fstl
jno
shl
hlt
das
or
add
cmpsl
out
mov
xor
push
cmp
into
out
popa
iret
inc
imul
jmp
or
and
rclb
mov
shl
jl
jp
jg
or
mov
imul
xchg
repnz
imul
outsl
push
pop
outsb
inc
or
push
pop
xchg
arpl
adc
cmp
fidivs
call
divl
rcrl
fisttpl
int
int3
push
scas
sub
xchg
lea
in
scas
sbb
call
insl
lret
cmpsl
xorb
data16
fcomps
cmpsl
inc
ss
loope
mov
das
js
movsl
add
std
clc
call
jmp
and
inc
xchg
mov
jecxz
cltd
add
inc
or
or
xchg
imul
sub
xlat
xor
jno
push
outsl
and
pop
in
icebp
mov
pop
or
dec
sbb
sub
pop
cmp
xlat
orl
adc
ret
mov
filds
int
jns
cmpsl
test
pop
xchg
dec
mov
mov
out
outsb
aam
cmp
mov
shll
subl
push
paddsb
mov
icebp
mov
push
stos
or
pusha
dec
sub
test
dec
lods
das
dec
adc
xchg
xchg
or
iret
inc
je
dec
push
mov
jg
imul
push
mov
imul
jns
lods
pop
inc
lock
das
loope
arpl
jns
push
mov
xchg
loop
scas
add
xor
mov
stos
les
pop
icebp
out
imul
clc
insl
sbb
sbb
dec
lds
adc
enter
inc
outsb
lods
rolb
sbb
and
inc
outsl
sub
addr16
jmp
lods
inc
inc
ret
andl
add
sub
arpl
outsb
in
mov
inc
cltd
ret
push
mov
xor
inc
icebp
push
enter
pop
rorb
loop
dec
xchg
xor
fsubr
out
mov
scas
mov
jg
jg
subb
mov
idivb
inc
test
aad
fsubrl
sub
jmp
cmc
xor
repnz
sub
mov
or
dec
xchg
adc
enter
lea
pop
adc
jno
mov
stos
add
and
mov
outsl
jmp
jge
lret
stos
pop
adc
into
push
inc
jmp
insb
pop
mov
dec
add
lods
xchg
stc
cmp
lea
sbb
jb
test
mov
add
xor
sbb
mov
mov
andl
jmp
enter
lods
jg
lock
iret
stos
subl
movsb
inc
mov
leave
and
mov
subb
push
test
jmp
mov
adc
adc
sar
push
adc
cmp
pusha
xchg
jmp
test
mov
fwait
inc
inc
addr16
jl
in
lret
push
leave
test
cli
cmpsl
xor
or
inc
inc
push
lock
mov
sahf
mov
out
jmp
jno
mov
mov
xchg
push
pop
cwtl
lock
pop
adc
out
push
insl
xor
sbb
mov
jb
sbb
or
into
sbb
mov
shll
inc
outsb
test
lret
hlt
mov
inc
stos
pop
ficomps
sub
aaa
pop
out
fnstenv
stc
inc
and
fcoml
outsb
mov
xchg
mov
adc
jno
sbb
sbb
push
les
jmp
jl
insb
dec
mov
imul
mov
cwtl
add
daa
jo
aad
xchg
jp
mov
ror
fldt
inc
mov
loope
cmp
xor
jmp
push
jnp
lods
xor
stos
ja
push
xchg
mov
rep
sub
push
in
lods
mov
push
dec
jg
lahf
js
jns
int3
dec
js
push
in
pop
xchg
mov
mov
dec
jbe
dec
repz
scas
rcrb
mov
mov
adc
es
mov
mov
bound
cmp
jbe
movsb
mov
test
xchg
jg
aad
les
inc
cmp
dec
jecxz
hlt
shlb
aad
jmp
jecxz
nop
add
cltd
imul
imul
push
fsts
mov
outsl
mov
xor
aad
add
out
fnsave
outsl
clc
aam
dec
or
and
aad
mov
mov
xor
cwtl
les
jnp
pop
std
mov
jbe
jo,pt
mov
jg
imul
xchg
add
pop
aaa
mov
inc
ds
mov
in
add
aas
daa
mov
test
sahf
test
or
cmp
movsl
mov
imul
outsb
xchg
pop
mov
and
push
mov
xchg
out
or
outsb
in
outsb
inc
mov
xchg
xor
jmp
pop
cmpsb
xorb
out
push
xchg
jne
scas
in
sub
and
and
jecxz
inc
push
jle
mov
adc
pop
es
mov
insl
in
iret
pop
outsb
cmp
jmp
cmp
gs
adc
outsb
mov
xchg
add
in
jb
inc
mov
sub
arpl
dec
out
aam
sub
or
mov
sbb
loop
mov
inc
repnz
and
in
loopne
jp
outsb
jne
int
sub
scas
or
lods
sbb
fmull
outsb
mov
push
jle
push
stc
cwtl
leave
push
mov
adc
in
xor
xchg
fs
daa
jle
outsb
repnz
push
cmpsl
add
fildl
dec
add
xor
xchg
mov
shll
mov
ret
ja
iret
add
aas
or
add
gs
cld
dec
add
leave
jg
xchg
shrl
es
fisubs
in
push
jp
adc
loop
lea
test
jmp
dec
xchg
dec
xlat
jae
mov
ficoms
bound
jecxz
add
mov
pop
or
adc
push
aad
addb
inc
push
in
clc
mov
out
mov
jge
lock
xchg
fisttps
mul
outsb
xor
ljmp
inc
divl
fiaddl
and
outsb
add
pop
cli
inc
mov
stos
adc
jmp
lods
mov
data16
insb
ds
mov
push
aaa
iret
push
dec
fistpll
cwtl
inc
cmpsb
dec
xchg
outsl
mov
pop
mov
enter
scas
enter
xchg
lcall
mov
and
push
push
filds
ja
jmp
mov
mov
sti
lea
ret
xor
sbb
dec
push
lods
xchg
adc
insl
dec
xchg
jnp
push
inc
add
test
outsb
js
mov
outsl
xchg
dec
subb
ja
and
cmp
pop
jle
jns
add
cmc
xlat
lcall
cmpb
or
fcos
int3
dec
sahf
mov
popf
inc
sub
dec
dec
lods
test
mov
lds
mov
loopne
jg
and
sbb
push
pop
jmp
cmp
cld
sub
xchg
in
sbb
lods
add
xchg
mov
shrl
rcrl
adc
aas
sarb
push
sbb
movsb
jmp
mov
mov
sub
sub
pop
mov
pop
in
or
dec
mov
lret
loop
push
js
repz
stos
push
sti
pop
les
repz
inc
sub
jb
xchg
push
mov
cmp
cmp
in
jmp
jne
loopne
pop
xchg
dec
out
jnp
and
adc
cmp
pop
sub
or
jne
leave
sbb
mov
sarb
mov
adc
jmp
enter
mov
out
clc
push
jge
add
sub
xchg
mov
or
sbb
insl
mov
rorb
in
mov
sbb
mov
ss
pusha
inc
andb
aam
pop
inc
leave
aam
sbb
jns
pop
das
mov
dec
lds
loop
push
mov
jmp
push
xor
fimuls
cmp
out
stos
ds
xor
mov
inc
out
outsb
lahf
inc
jnp
dec
mov
ret
jp
and
outsl
push
sbb
add
mov
xor
push
inc
adc
push
jns
pop
jbe
jne
sub
push
out
xchg
lret
mov
loop
dec
ret
mov
inc
sbb
xchg
mov
pusha
sbb
add
dec
stc
in
jns
mov
scas
xchg
mov
add
outsb
pop
out
mov
in
ret
xchg
pop
call
xchg
insl
mov
ljmp
outsb
xchg
stos
cli
jns
lcall
ds
out
pusha
mov
and
xchg
sbb
imul
sete
push
push
xchg
dec
iret
sbb
imul
int
and
popf
pop
xor
dec
inc
jns
cmp
cmpsl
cmpsb
aad
aaa
in
fs
sub
mov
adc
sbb
jecxz
xor
outsb
xor
inc
jp
in
mov
outsb
mov
enter
outsb
jmp
repnz
inc
fdivrs
in
jo
mov
push
mov
mov
clc
call
cld
push
cmp
out
fucomp
pop
inc
dec
and
add
and
mov
push
push
std
jmp
out
mov
jb
outsb
stc
jne
push
mov
loop
insl
xorl
mov
pop
lods
pop
dec
jecxz
lcall
mov
mov
cmp
insl
add
int
mov
lret
pop
std
int
cmp
mov
mov
into
cwtl
mov
jno
cmp
mov
jmp
sub
jp
cs
test
inc
movsb
test
xchg
mov
lock
ret
xchg
cmpsb
int
cmp
jg
in
ret
push
sub
aam
mov
clc
dec
add
ret
outsl
jg
or
aad
lods
out
inc
mov
and
add
mov
out
mov
mov
mov
outsb
repz
pop
mov
loop
iret
jmp
or
aas
add
testb
call
scas
dec
je
jno,pn
je
sahf
mov
adc
dec
jmp
push
xchg
push
pop
gs
sub
lea
stos
out
pop
xchg
aad
rcll
mov
jae
pusha
and
es
dec
enter
push
mov
outsb
xchg
lcall
icebp
xchg
push
in
sub
and
sahf
mov
test
decl
push
sbb
xchg
mov
fdivl
mov
mov
mov
push
jno
push
repnz
lds
lods
insl
in
pop
push
xchg
mov
fs
jl
add
call
or
push
arpl
mov
jmp
arpl
mov
xchg
push
fsubrs
mov
mov
pop
cmp
xchg
push
adc
xchg
sbb
scas
leave
sub
pop
adc
out
cmp
dec
mov
xchg
sbb
or
jge
pop
mov
and
aad
and
lds
es
and
int3
xor
inc
icebp
xchg
jbe
rorb
bt
sub
pop
inc
fcmovbe
xchg
lods
dec
test
aaa
adc
adc
das
jge
push
hlt
dec
das
push
int
xchg
test
sub
fistpl
jmp
dec
aam
in
push
push
bound
push
mov
push
dec
cmp
daa
out
add
sbb
repz
ret
orb
cld
add
inc
mov
pop
fmul
loope
dec
jecxz
add
jo
fcomps
loopne
inc
inc
popf
into
pop
sti
jecxz
out
into
mov
test
into
cmp
lock
scas
dec
dec
push
data16
jmp
jne
out
mov
in
sbb
dec
or
and
clc
stos
cmp
add
pop
or
xchg
sbb
outsl
icebp
dec
sbb
pop
xor
insl
jecxz
dec
cmp
push
sti
xchg
pop
cs
inc
cmp
sub
cmc
out
into
sub
not
insl
push
pop
mov
lahf
dec
push
sub
add
in
out
int3
imul
dec
xchg
jmp
dec
mov
cmpsb
push
outsb
ljmp
imul
lods
inc
mov
add
mov
arpl
mov
inc
test
mov
pusha
les
sti
xor
jne
jp
aam
insl
out
or
popf
fwait
push
andl
jnp
insb
inc
movsbl
adc
lea
push
jp
pop
push
hlt
fwait
imul
shrb
test
lea
popf
pushf
movsbl
outsl
movsl
lods
mov
jns
xor
pop
xchg
movsl
pop
push
mov
push
xor
test
aas
xchg
cmpsb
lahf
sbb
cmp
mov
insb
outsb
inc
xchg
repnz
sub
sub
jp
ret
call
mov
popf
cmpsl
daa
outsl
inc
in
pop
push
leave
out
adc
scas
cmpsb
cwtl
lret
xor
push
aaa
mov
inc
jp
roll
sub
incl
outsl
sub
sub
mov
roll
insb
movsb
cmpsl
jo
xchg
push
mov
test
mov
mov
cmpsl
mov
lret
xchg
aam
outsb
mov
mov
out
int
fbstp
sbb
jo
mov
dec
hlt
daa
inc
stos
call
imul
cmpsb
sahf
mov
addl
mov
mov
add
lret
insb
scas
add
adc
ss
inc
pop
xor
xchg
enter
dec
lret
jns
mov
adc
pop
cmp
fisttps
xor
clc
add
fisubrs
sub
call
xchg
xchg
xchg
lret
adc
fiadds
ret
xchg
xchg
push
imul
lea
ret
dec
and
push
popf
fcompl
adc
mov
jns
sti
or
add
hlt
lret
inc
lds
lods
dec
push
cs
push
mov
jmp
sbb
sahf
pop
dec
push
or
subb
movsl
sbb
jge
push
ficompl
adcl
movb
mov
mov
pop
in
push
std
mov
lcall
dec
mov
mov
jmp
call
repz
inc
data16
arpl
lret
sub
movsb
pop
cmpsl
mov
stc
daa
lsl
mov
ljmp
push
outsb
orl
jae
jg
lock
in
lods
outsb
pushf
mov
pushf
cs
push
add
fdivrs
mov
cld
sub
or
std
stos
dec
pusha
rclb
data16
outsb
mov
dec
add
rcrl
in
in
insb
xor
idiv
gs
sub
sub
mov
movsl
mov
pushf
or
xchg
aad
jne
dec
ljmp
mov
add
or
js
cmp
pop
add
das
push
mov
sub
dec
jl
push
out
into
orb
das
mov
icebp
mov
imul
lret
pop
jne
sbb
add
cmp
or
mov
mov
push
push
dec
into
push
mov
jnp
test
mov
bound
in
sahf
fiaddl
outsb
movups
fwait
mov
or
sahf
and
arpl
mov
hlt
xchg
xlat
int3
inc
cmp
dec
nop
sub
pop
outsb
gs
mov
insb
ret
jmp
out
call
stos
sbb
mov
mov
shr
sbb
jp
jo
loope
push
pop
xchg
mov
mov
push
pop
pop
or
adc
jecxz
inc
sub
pusha
js
cmp
pop
mov
inc
xchg
out
or
cmp
fs
sbb
push
repz
out
and
mov
push
jg
lahf
push
xchg
dec
cs
push
cmp
pop
outsl
xor
xor
cmp
scas
or
int
jg
dec
inc
mov
fwait
mov
ja
or
mov
popa
inc
sub
push
push
dec
aaa
movsl
sar
or
push
push
outsl
pop
and
adc
in
jge
inc
ret
imul
xor
push
fcmovnb
dec
subl
clc
daa
punpcklbw
dec
cmp
idivl
fstpl
fdivr
insb
in
jp
cmpsb
cmp
mov
mov
push
lds
ds
mov
loope
out
mov
int
jne
pop
gs
dec
dec
cmpl
xor
sub
gs
cwtl
mov
addr16
mul
sub
mov
jns
jmp
add
lahf
push
jmp
in
outsl
outsl
xor
outsl
lret
xor
movsl
push
mov
cwtl
mov
mov
mov
mov
aad
push
dec
xor
sub
sub
jmp
adc
push
orb
adc
ret
push
daa
push
mov
or
movsb
push
dec
adc
cs
and
mov
dec
xlat
and
ja
push
sti
dec
loop
rolb
xchg
lea
xchg
hlt
adc
in
cmpsb
pop
outsl
lret
and
mov
test
jbe
inc
mov
scas
cmp
sbb
shl
popa
lcall
clc
adc
jl
leave
pushf
mov
das
mov
sarl
scas
fwait
push
movsb
inc
test
bswap
pop
push
inc
mov
push
in
or
dec
sub
xchg
sbb
ss
scas
mov
dec
mov
dec
ss
insl
sbb
jb
inc
mov
insl
aad
les
test
inc
add
cmp
push
sub
inc
pushf
jmp
vpsrlw
cli
lea
pop
mov
xchg
jle
sbb
push
fsubs
xchg
jl
je
push
adc
rol
add
insl
adc
dec
stos
adc
jnp
outsl
adc
xlat
dec
arpl
aas
dec
add
in
or
jmp
stos
jbe
mov
dec
sahf
stc
pop
or
fsin
js
jp
cmp
sbb
pop
arpl
inc
sub
pop
dec
mulb
sbb
outsb
ret
adc
mov
pop
push
jle
jle
out
cmp
lock
sub
and
dec
js
lea
jne
push
outsl
cld
jnp
mov
jmp
or
and
jecxz
adc
lea
pop
adc
ja
fiadds
mov
outsb
pop
push
jbe
repnz
in
mov
adc
testl
push
dec
in
cmc
bnd
adc
outsl
mov
std
aam
pop
jg
jle
inc
inc
xchg
push
mov
mov
sub
das
outsl
adc
aad
dec
out
or
outsb
adc
mov
or
orb
and
in
fisttps
dec
aam
push
mov
sbb
pop
sub
lret
rorl
aad
out
pop
test
fcmovnu
or
in
mov
dec
xor
pusha
sub
add
sbb
jb
lds
popa
pop
push
mov
pop
nop
call
ljmp
addl
repz
sahf
adc
dec
push
dec
or
xchg
bound
sub
mov
out
test
fisttpll
lods
push
pop
lret
outsl
ljmp
insb
sub
dec
xchg
push
aaa
outsl
loop
mov
jae
mov
mov
les
fs
btr
sahf
adc
sar
test
jne
sar
dec
int3
cmpsb
jmp
sbb
cmpl
aam
inc
xchg
sub
jmp
pop
out
data16
nop
mov
aad
xor
mov
push
jns
sti
cmp
fcompl
jmp
pushf
dec
jae
pop
les
repz
adc
leave
fs
notl
scas
sbb
sti
sub
lret
loopne
mov
mov
mov
push
mov
mov
mov
inc
pop
stos
adc
or
xor
mov
inc
ljmp
in
ss
jno
cmpsb
je
jge
fsts
sahf
push
pop
cs
and
cmp
xchg
adc
data16
outsb
popf
imul
mov
mov
mov
repnz
add
out
sbb
push
in
jno
aam
clc
sti
ss
mov
jo
cltd
lret
dec
int3
lea
jp
adc
sbb
adc
cmp
mov
xchg
inc
movsl
pop
aad
lock
lahf
sub
or
push
outsb
pop
mov
push
cmp
stos
roll
outsl
push
fcomp
ret
sub
aas
cmpsb
test
push
out
jp
jo
cmpsl
pushf
arpl
adc
dec
enter
push
cwtl
mov
popa
inc
movsb
jle
outsb
xorb
pushf
jmp
pop
repnz
and
test
mov
mov
mov
mov
fs
sub
jns
lret
mov
je
lret
imul
test
mov
lahf
mov
mov
cmpsl
ret
adc
dec
pop
mov
in
mov
mov
test
adc
stc
adc
pop
lahf
or
lahf
or
out
mov
mov
mov
dec
jge
mov
sbb
int3
fpatan
inc
mov
pusha
stc
rcll
xor
es
iret
test
jg
adc
sub
jae
fstp
sbb
outsb
out
cwtl
mov
and
push
sub
jmp
pop
or
sarl
daa
xchg
xchg
push
jg
jmp
or
cli
out
and
out
xchg
mov
or
mov
fs
adc
jmp
pop
push
jb
imul
gs
or
pop
repz
mov
gs
dec
outsb
loopne
insl
lahf
stos
push
xor
cmp
addr16
hlt
fnsave
fsubrs
bound
mov
mov
movsl
jmp
or
sbb
push
loope
sub
hlt
repnz
insl
add
push
ss
xchg
les
cmc
or
fisttpll
pop
xor
out
stc
outsb
pop
dec
jl
pop
aam
clc
ljmp
mov
cs
outsb
dec
cmp
mov
in
sti
iret
jle
adc
in
inc
inc
xor
jns
dec
xchg
xchg
repz
imul
pop
lahf
dec
or
stc
pop
mov
pusha
rol
xor
inc
lcall
jl
and
sbb
mov
out
iret
imul
add
xor
leave
mov
push
jp
jmp
and
and
push
mov
je
outsl
pop
xor
stc
mov
lahf
shll
add
outsb
push
dec
add
cmc
out
rorb
push
shrl
add
sub
add
add
adc
loope
sbb
rorl
repz
sbb
aam
inc
shrb
jmp
data16
iret
push
sbbl
push
mov
pop
data16
dec
sbb
push
xor
cmpsb
mov
inc
push
je
add
pop
adc
inc
sub
dec
pop
lcall
addr16
add
mov
dec
inc
inc
shlb
mov
sbb
mov
pop
icebp
jne
sarb
cmpb
shl
rolb
adc
mov
data16
fiadds
jo
inc
insb
dec
rorb
sub
clc
push
adc
push
sub
mov
jg
add
fisttpll
sub
shld
jecxz
mov
mov
test
xchg
jo
xchg
pop
jp
fmull
push
roll
adc
aaa
jne
add
dec
sahf
dec
int
mov
push
sar
outsb
mov
loope
lahf
sbb
mov
cmp
lret
into
xchg
jmp
out
sti
imul
icebp
dec
fisubrl
xchg
cmpsb
in
sub
jmp
ja
mov
cli
ss
xchg
lock
and
rclb
sahf
outsb
xor
pop
imul
sub
jle
cmp
hlt
inc
imul
cmp
aad
inc
xchg
iret
leave
test
in
mov
dec
out
out
push
and
mov
bound
fimull
xchg
dec
andl
mov
std
sub
call
shlb
mov
push
repz
enter
mov
mov
push
out
leave
xchg
pop
dec
mov
inc
add
mov
mov
sub
dec
sti
mov
jno
lock
pushf
dec
pop
popa
xchg
mov
jno
movsb
ret
and
adc
cmp
sahf
in
mov
pusha
and
fldt
push
scas
xchg
xchg
dec
inc
and
push
mov
fdivrs
lods
test
je
bound
out
mov
add
sub
inc
or
push
lock
lds
jmp
push
dec
pushf
xor
mov
lret
es
and
mov
in
jl
push
xchg
aaa
in
sbb
pop
xchg
iret
enter
cmp
sarb
or
push
jno
gs
add
scas
int
and
clc
lahf
sub
add
je
test
dec
call
shlb
loopne
lock
push
sbb
dec
xor
icebp
mov
or
pushf
outsb
adc
nop
fstpl
mov
aad
xor
mov
xchg
pop
sub
stos
out
or
dec
sub
outsb
pop
and
inc
hlt
jmp
fisubrs
push
xchg
fidivs
dec
jne
dec
popl
inc
pop
sbb
mov
mov
dec
or
cmpsl
data16
filds
in
lods
and
fsubr
push
loope
jb
sub
sbb
cltd
je
cmp
insb
orl
das
out
cltd
outsb
mov
aad
outsb
lds
fnsave
nop
xlat
dec
xchg
pushf
and
mov
pusha
adc
std
movsl
xor
mov
push
rolb
out
mov
inc
or
dec
lock
in
sub
xor
rcl
scas
pushl
outsb
int3
fisubs
pop
mov
xor
mov
pop
cwtl
sub
rol
outsl
mov
shr
fs
sti
or
call
addr16
inc
into
mov
push
inc
pop
andb
xor
arpl
add
mov
lret
je
inc
fimuls
mov
dec
sub
mov
or
lret
not
mov
in
icebp
dec
enter
mov
jb
add
movl
push
dec
mov
xor
outsb
adc
or
iret
xchg
aam
sarb
push
or
loopne
inc
pop
sbb
adc
mov
inc
in
adc
testb
sub
int
clc
push
call
sub
outsb
mov
adc
test
outsb
sub
mov
out
mov
pop
jne
pop
xchg
cmpsb
inc
lahf
jbe
jecxz
sbb
enter
movsb
outsb
jecxz
cmp
rcrl
xor
cmpsb
imul
inc
arpl
fisttpl
inc
dec
fisttps
cwtl
cmpsb
push
pop
jnp
sub
jns
cmp
add
repnz
mov
lret
pop
enter
add
popf
pop
cmp
shrb
movsb
lea
or
add
jmp
adc
stc
adc
dec
out
or
frstor
push
in
aaa
lahf
js
add
push
mov
cmpsl
pushf
popa
into
mov
inc
dec
repnz
outsl
adcl
sbb
lods
or
mov
inc
cs
arpl
cmp
sbb
pushf
or
cmp
adc
xchg
sbb
jp
sbb
pop
dec
icebp
lcall
filds
xchg
decb
dec
cmp
jns
dec
insl
mov
popa
subl
push
mov
push
xlat
femms
popf
push
adc
mov
test
push
test
sbb
xchg
outsb
cwtl
in
mov
stos
mov
arpl
xchg
rcll
mov
imul
mov
dec
lds
adc
call
in
imul
out
loop
push
stos
mov
loopne
sbb
shll
dec
lret
rcrb
ja
sub
iret
xchg
fsubr
loopne
mov
push
push
or
lret
sbb
jl
nop
out
cs
adc
jmp
push
add
lods
xchg
das
and
dec
outsb
int3
aad
sub
ret
in
xchg
sub
cmpsl
out
sbb
in
adc
xor
push
dec
lea
adc
mov
mov
mov
dec
sti
dec
dec
and
dec
testb
in
cmpsb
movsl
icebp
and
pop
xchg
cmp
andb
test
mov
test
jmp
lds
mov
mov
je
imul
outsl
cli
lret
jg
pop
dec
pop
test
mov
pop
into
and
inc
mov
into
mov
pushf
pop
jge
mov
fisubrs
outsl
add
imul
xor
pop
mov
nop
outsb
jmp
jns
adc
sbb
outsb
popa
push
mov
sbb
in
dec
or
inc
sub
pushf
xchg
xor
xor
das
dec
out
movsb
int
push
add
pop
scas
add
insl
lds
sbb
int3
mov
cmp
sub
mov
dec
data16
pop
xchg
paddsb
clc
sub
mov
sub
iret
into
enter
scas
adc
jnp
ljmp
insl
in
sub
sbb
sbb
rclb
cmp
je
repnz
push
push
mov
push
or
dec
hlt
fnsave
fmuls
xchg
mov
js
sti
pop
rclb
outsb
sbb
insl
jge
in
icebp
xchg
pushl
and
and
pop
jbe
xchg
cs
ror
decl
outsb
or
sbb
popf
mov
mov
int
stc
cmp
loopne
dec
test
sub
out
icebp
int
das
push
lods
jae
jmp
pop
or
in
adc
mov
jno
jmp
push
iret
imul
dec
add
jmp
mov
mov
out
mov
addr16
push
icebp
mov
sbb
add
push
mov
sub
push
push
push
call
add
push
cmp
je
mov
push
push
push
push
push
call
add
push
sub
push
push
push
push
push
call
add
mov
add
push
push
push
call
add
mov
push
call
sub
mov
mov
add
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
lea
push
call
mov
test
je
cmp
je
add
cmp
je
mov
sub
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
xor
mov
cmp
je
mov
cmp
jne
test
je
sub
mov
mov
mov
mov
cmp
jne
mov
add
cmp
je
mov
or
mov
mov
mov
cmp
je
mov
xor
mov
cmp
jne
mov
and
cmp
jne
cmp
jne
add
cmp
jne
cmp
je
mov
cmp
jne
xor
test
jne
sub
mov
mov
cmp
je
cmp
je
test
je
cmp
je
cmp
jne
and
mov
cmp
je
mov
add
cmp
jne
mov
add
cmp
je
and
mov
mov
test
jne
mov
mov
and
mov
cmp
jne
cmp
je
sub
cmp
jne
sub
mov
cmp
je
cmp
jne
cmp
jne
cmp
jne
add
test
je
cmp
je
mov
cmp
je
mov
mov
add
mov
mov
cmp
je
mov
mov
xor
mov
cmp
jne
sub
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
je
mov
mov
cmp
jne
test
je
xor
mov
mov
mov
mov
cmp
je
and
test
je
test
jne
mov
cmp
jne
mov
mov
test
je
mov
mov
mov
mov
cmp
jne
mov
xor
cmp
je
xor
mov
mov
cmp
je
mov
mov
sub
test
je
mov
mov
cmp
jne
mov
sub
mov
mov
mov
xor
call
mov
xor
mov
mov
cmp
jne
mov
push
push
push
push
call
add
add
mov
call
mov
cmp
jne
add
mov
push
push
push
push
call
add
cmp
jne
cmp
jne
sub
push
push
push
push
push
call
add
cmp
jne
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
add
xor
cmp
jne
add
push
push
call
add
push
push
push
push
push
call
add
call
mov
cmp
jne
xor
mov
cmp
jne
push
call
add
mov
mov
sub
mov
push
push
push
push
push
call
add
cmp
je
mov
xor
cmp
jne
xor
mov
mov
mov
cmp
je
mov
mov
sub
test
jne
call
mov
mov
cmp
jne
test
je
add
cmp
je
mov
mov
mov
push
push
push
push
call
add
call
mov
mov
push
push
push
push
push
call
add
test
jne
call
mov
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
add
mov
mov
push
push
push
call
add
cmp
je
call
cmp
je
push
push
push
push
push
call
add
cmp
jne
sub
mov
cmp
je
add
push
push
push
push
push
call
add
cmp
jne
mov
xor
mov
cmp
je
add
mov
cmp
je
mov
or
cmp
je
mov
push
push
push
push
call
add
mov
mov
sub
mov
mov
sub
push
push
push
push
call
add
add
push
push
push
call
add
mov
sub
mov
cmp
jne
mov
mov
push
call
add
add
mov
sub
push
call
add
push
push
push
push
call
add
mov
cmp
jne
mov
push
push
call
add
test
jne
call
push
push
push
push
call
add
cmp
je
cmp
jne
xor
mov
cmp
je
mov
call
mov
and
cmp
je
mov
call
test
je
cmp
je
xor
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
push
call
add
mov
xor
mov
mov
cmp
jne
test
je
xor
mov
mov
cmp
jne
mov
push
push
push
call
add
test
je
push
call
add
push
push
push
call
add
cmp
jne
push
push
push
push
push
call
add
mov
call
mov
push
push
push
call
add
mov
test
jne
mov
lea
mov
push
push
call
add
add
mov
push
push
call
add
push
push
push
push
push
call
add
mov
cmp
je
xor
mov
cmp
je
call
cmp
jne
mov
mov
sub
mov
push
mov
call
push
mov
call
mov
mov
call
push
call
add
mov
cmp
jne
sub
cmp
jne
mov
xor
cmp
je
mov
cmp
jne
mov
mov
xor
mov
mov
mov
mov
test
jne
xor
mov
mov
mov
test
jne
cmp
je
mov
xor
mov
test
jne
xor
mov
mov
cmp
jne
mov
mov
mov
mov
shr
mov
cmp
jne
xor
mov
cmp
jne
push
push
push
push
push
call
add
push
push
call
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
pushl
push
pushl
call
mov
test
je
mov
mov
mov
sub
push
push
push
call
add
push
push
push
call
add
call
cmp
je
cmp
jne
xor
mov
mov
mov
addl
mov
mov
cmp
jne
mov
mov
test
je
sub
mov
mov
cmp
je
mov
mov
xor
mov
mov
mov
call
sub
cmp
jne
test
je
sub
mov
cmp
jne
mov
cmp
jne
xor
mov
mov
call
push
push
call
add
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
test
je
add
mov
mov
push
call
add
push
push
push
call
add
cmp
je
xor
mov
cmp
je
sub
cmp
jne
mov
sub
mov
mov
mov
push
call
add
cmp
je
cmp
je
mov
mov
cmp
jne
cmp
jne
push
call
add
sub
cmp
je
push
push
call
add
sub
mov
mov
pop
mov
push
push
push
call
add
push
push
push
push
call
add
cmp
je
mov
push
push
call
add
push
push
push
push
push
call
add
pop
mov
push
push
call
add
pop
mov
cmp
je
push
push
push
call
add
leave
ret
mov
push
push
push
push
call
add
push
push
call
add
push
push
call
cmp
je
mov
xor
push
call
add
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
push
call
test
jne
mov
push
push
push
call
mov
call
push
push
push
call
push
call
add
push
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
push
call
add
mov
push
call
add
push
push
push
push
push
call
sub
mov
mov
mov
call
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
push
call
cmp
jne
mov
mov
push
push
push
push
push
call
xor
mov
push
push
push
push
push
push
call
mov
push
push
call
add
call
cmp
je
mov
push
push
call
add
pop
mov
call
pop
mov
push
push
push
call
add
or
cmp
je
cmp
jne
mov
cmp
jne
and
cmp
je
mov
mov
mov
pop
cmp
jne
mov
sub
mov
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
xor
call
push
cmp
je
mov
mov
push
push
push
push
call
add
mov
mov
movl
mov
push
push
call
add
call
push
push
push
call
add
and
mov
call
mov
mov
mov
mov
xor
mov
cmp
jne
mov
push
push
push
push
push
call
add
and
mov
push
push
call
add
cmp
je
mov
mov
test
jne
mov
push
push
push
push
call
add
cmp
je
mov
cmp
je
mov
and
push
push
push
call
add
mov
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
push
push
push
push
call
add
add
mov
mov
call
push
call
add
push
push
call
add
cmp
jne
mov
add
push
push
push
push
call
add
call
or
mov
test
je
mov
xor
mov
mov
mov
mov
cmp
je
add
push
call
add
mov
mov
mov
call
add
test
jne
sub
mov
mov
mov
cmp
je
mov
sub
push
push
call
add
call
cmp
je
mov
test
je
push
call
add
mov
cmp
je
xor
mov
push
push
push
push
push
call
add
mov
mov
add
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
or
je
xor
mov
mov
mov
addl
mov
or
mov
lea
xor
mov
inc
mov
mov
xor
cmp
je
mov
mov
sub
xor
mov
mov
mov
cmp
jne
test
je
xor
mov
cmp
je
push
call
add
cmp
je
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
mov
push
push
push
call
add
mov
xor
mov
mov
mov
sub
mov
add
mov
mov
push
push
push
push
call
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
add
cmp
jne
push
push
call
add
xor
mov
mov
mov
push
push
push
call
add
sub
mov
call
cmp
je
mov
mov
mov
push
call
add
call
test
jne
mov
cmp
jne
mov
mov
cmp
je
xor
push
call
add
cmp
jne
push
call
add
add
mov
pop
cmp
je
mov
add
mov
pop
xor
mov
mov
mov
pop
xor
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
sub
push
push
push
push
push
call
add
push
mov
sub
mov
push
sub
mov
push
call
add
sub
mov
test
je
mov
add
mov
test
je
cmp
jne
mov
add
cmp
jne
mov
cmp
je
sub
mov
mov
mov
cmp
je
xor
mov
cmp
je
call
sub
cmp
je
push
push
push
call
add
rdtsc
mov
cmp
jne
mov
sub
mov
cmp
jne
mov
mov
sub
cmp
jne
mov
cmp
jne
mov
cmp
jne
add
mov
mov
cmp
jne
and
mov
cmp
je
cmp
jne
mov
mov
mov
mov
cmp
je
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
xor
push
call
add
mov
mov
mov
push
push
call
add
mov
mov
push
push
push
push
push
call
add
add
push
push
push
push
call
add
rdtsc
mov
sub
mov
cmp
jne
mov
mov
mov
mov
test
jne
mov
cmp
je
mov
cmp
jne
mov
mov
mov
test
je
mov
sub
mov
mov
sub
mov
cmp
jne
mov
add
mov
mov
mov
mov
mov
pop
mov
pop
mov
sub
mov
pop
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
push
push
call
add
mov
push
call
add
mov
mov
mov
mov
test
jne
mov
mov
or
mov
mov
cmp
je
mov
add
cmp
je
xor
mov
mov
cmp
jne
mov
mov
add
mov
decl
mov
mov
sub
mov
sub
mov
negl
mov
sub
mov
subl
mov
xor
mov
add
sub
mov
jmp
mov
push
push
call
add
mov
and
mov
add
call
pop
mov
test
jne
push
push
push
push
push
call
add
pop
push
push
push
push
push
call
add
pop
mov
cmp
jne
mov
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
lea
call
lea
push
call
mov
push
mov
call
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
add
mov
jmp
movl
movl
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
jmp
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
push
push
push
je
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
lea
cmp
ja
add
mov
lea
cmp
ja
add
cmp
jne
test
je
inc
add
jmp
mov
cmp
jne
pop
pop
xor
pop
mov
pop
ret
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
test
je
mov
mov
add
cmp
jbe
mov
add
mov
mov
add
push
mov
mov
add
mov
xor
mov
mov
test
je
push
jmp
mov
mov
add
mov
mov
je
mov
cmp
je
inc
inc
cmpb
jne
test
je
mov
movzbl
xor
mov
shr
and
je
xor
mov
shr
and
je
xor
mov
shr
and
je
xor
mov
shr
and
je
xor
mov
shr
and
je
xor
mov
shr
and
je
xor
mov
shr
and
je
xor
mov
shr
and
je
xor
inc
dec
jne
not
cmp
je
inc
cmp
jb
xor
pop
pop
mov
pop
ret
mov
movzwl
mov
mov
pop
add
pop
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
test
je
test
je
mov
xor
lea
sub
mov
mov
je
mov
xor
inc
inc
sub
mov
jne
sub
ret
xor
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
sub
push
push
call
add
push
cmp
je
cmp
je
test
je
mov
add
call
push
cmp
jne
mov
cmp
je
mov
test
jne
and
cmp
jne
push
push
call
add
mov
push
call
add
cmp
jne
add
mov
xor
mov
test
je
xor
push
push
push
push
push
call
add
mov
push
push
push
call
add
push
call
add
mov
xor
mov
sub
mov
mov
push
call
add
pop
add
push
push
push
push
push
call
add
mov
call
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
pop
or
push
push
push
call
add
mov
push
push
call
add
cmp
je
cmp
jne
mov
mov
add
cmp
jne
add
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
cmp
je
xor
push
push
push
push
push
call
add
push
mov
xor
test
je
xor
push
push
push
push
push
call
add
push
mov
call
cmp
jne
and
push
call
add
push
push
call
add
mov
push
call
add
mov
mov
mov
push
push
call
add
push
push
push
call
add
mov
push
call
add
cmp
jne
mov
pop
push
push
push
push
push
call
add
pop
push
push
push
push
push
call
add
pop
add
mov
cmp
jne
mov
mov
cmp
je
add
mov
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
mov
and
push
push
push
push
call
add
push
mov
or
call
push
add
mov
cmp
je
mov
push
push
push
push
call
add
mov
xor
push
push
push
push
call
add
push
push
push
call
add
sub
mov
push
push
call
add
cmp
je
cmp
jne
mov
mov
push
push
push
call
add
mov
mov
pop
mov
pop
mov
call
pop
cmp
je
mov
sub
cmp
jne
cmp
jne
mov
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
call
add
push
mov
mov
push
push
push
call
add
push
mov
mov
cmp
jne
cmp
jne
mov
or
mov
sub
push
push
push
call
add
push
push
push
push
call
add
pop
mov
push
push
call
add
pop
add
call
pop
mov
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
call
add
push
mov
mov
push
mov
push
push
push
push
push
call
add
push
mov
mov
push
push
push
push
push
call
add
xor
mov
mov
push
push
call
add
mov
push
push
push
push
push
call
add
or
push
push
push
call
add
mov
pop
mov
pop
add
push
push
push
push
call
add
pop
mov
sub
test
je
cmp
jne
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
add
push
push
call
add
push
add
push
push
call
add
push
cmp
jne
add
cmp
jne
mov
push
call
add
test
jne
and
push
call
add
add
mov
cmp
je
add
mov
pop
mov
mov
pop
mov
call
pop
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
sub
mov
push
push
push
push
push
call
add
push
cmp
je
mov
mov
push
push
push
call
add
mov
mov
mov
add
cmp
je
mov
xor
call
mov
mov
sub
cmp
je
cmp
jne
mov
mov
cmp
je
cmp
je
push
call
add
add
cmp
jne
mov
push
push
call
add
push
push
call
add
sub
push
push
push
call
add
cmp
je
or
push
push
push
push
call
add
mov
mov
mov
call
pop
mov
sub
push
push
call
add
mov
pop
mov
add
push
push
push
push
push
call
add
pop
mov
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
push
call
add
push
push
push
call
add
push
mov
mov
mov
cmp
je
mov
xor
mov
mov
sub
mov
pop
mov
test
jne
mov
mov
mov
cmp
jne
xor
mov
test
jne
mov
cmp
je
cmp
jne
mov
push
push
call
add
mov
or
mov
cmp
je
mov
add
push
call
add
push
push
push
call
add
cmp
je
mov
test
jne
mov
call
mov
pop
mov
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
push
push
call
add
push
push
push
call
add
push
cmp
jne
mov
sub
push
call
add
xor
mov
push
push
call
add
mov
add
mov
xor
mov
cmp
je
call
mov
push
push
push
push
push
call
add
pop
push
push
push
call
add
pop
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
mov
mov
push
mov
push
mov
mov
mov
xor
mov
mov
mov
and
mov
pop
add
mov
mov
pop
add
test
je
mov
add
cmp
je
or
mov
cmp
jne
mov
mov
cmp
je
mov
xor
mov
test
je
mov
mov
mov
test
jne
xor
mov
mov
mov
mov
cmp
je
mov
mov
pop
mov
sub
cmp
jne
mov
mov
cmp
jne
mov
mov
cmp
je
test
je
cmp
jne
mov
xor
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
sub
mov
push
mov
push
mov
test
je
mov
add
test
jne
mov
and
mov
mov
mov
push
test
jne
mov
xor
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
add
mov
mov
cmp
je
and
mov
cmp
jne
mov
add
mov
mov
mov
cmp
je
mov
mov
cmp
je
mov
sub
mov
cmp
je
sub
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
pop
mov
mov
add
mov
pop
or
mov
mov
test
je
test
je
mov
test
je
mov
cmp
je
mov
cmp
je
mov
mov
sub
mov
cmp
je
mov
mov
mov
mov
pop
test
je
cmp
je
mov
leave
ret
add
add
dec
mov
or
inc
inc
addl
inc
add
jp
inc
popa
and
or
and
add
and
sub
insb
pusha
inc
ret
push
add
and
inc
inc
xor
add
or
jge
or
or
mov
mov
adc
and
adc
adc
xor
or
pusha
imul
adc
push
jecxz
add
imul
xor
add
dec
lock
mov
inc
adc
add
and
sub
test
adc
adc
test
enter
and
add
or
or
sbb
xor
sbb
push
xor
xorb
add
cmp
or
add
or
shll
add
inc
adc
mov
xor
add
and
push
sbb
add
push
adc
mov
mov
adc
add
adcb
adc
mov
cmpl
lret
addb
push
add
jo
inc
add
addb
add
lea
add
movb
bound
and
dec
add
add
xor
cwtl
add
add
xchg
xor
add
or
add
sub
add
add
add
mov
in
inc
or
inc
or
push
sbb
xor
dec
inc
popa
andb
dec
ret
add
loopne
mov
or
push
inc
pop
lods
xor
test
add
dec
or
orb
dec
loope
and
inc
cmp
adc
orb
add
add
nop
adc
and
inc
push
add
add
mov
sub
push
add
push
adc
or
xchg
add
js
add
or
shlb
add
inc
add
inc
add
call
orb
or
adc
adc
inc
popa
or
adc
add
aam
add
dec
inc
add
add
or
xor
nop
add
inc
adc
and
add
and
add
and
imul
sbb
xor
add
ret
inc
and
or
mov
andb
or
and
inc
inc
add
sub
mov
add
or
addl
and
or
ret
inc
test
push
enter
and
xchg
add
add
and
addl
inc
or
loop
or
adc
jmp
add
and
and
add
add
data16
add
add
adc
push
shrl
add
in
add
loope
xor
add
addb
and
or
add
or
add
sub
and
aam
push
mov
add
and
mov
and
mov
or
add
push
lods
mov
addb
add
inc
add
popf
add
adc
sbb
xor
andb
cmpsb
mov
pop
add
add
inc
adc
or
or
add
sub
xor
push
add
adc
add
inc
push
loope
addb
lods
dec
add
add
js
adc
cmp
add
xchg
test
inc
add
rolb
add
push
sbb
adc
sub
add
or
pop
inc
loopne
add
inc
or
inc
add
pusha
inc
add
and
add
add
insl
add
add
and
mov
push
adc
mov
mov
sub
or
and
inc
dec
add
inc
add
and
add
mov
add
and
pusha
adc
or
sub
adc
adc
inc
and
add
xor
inc
or
or
add
enter
add
jecxz
add
add
sub
inc
add
add
add
push
andb
rcll
roll
adc
insb
add
dec
and
add
adc
sbb
dec
sbb
or
subb
ret
or
add
ljmp
or
test
xor
xor
rolb
add
adc
or
add
and
or
sub
jb
imul
inc
sbb
add
and
add
nop
andb
or
xor
add
clc
addb
sbb
cltd
sbb
add
or
invd
dec
inc
test
movsb
mov
xor
xchg
cltd
cwtl
pop
inc
xchg
into
add
inc
ret
mov
or
rorb
pushf
movsb
and
or
rolb
adc
add
and
xor
add
add
add
addb
sbb
shrl
cmp
mov
add
mov
add
arpl
sub
or
mov
add
push
or
rolb
xor
add
add
inc
add
enter
xorl
adc
mov
add
mov
add
dec
inc
add
test
add
inc
mov
inc
andl
sbb
roll
orb
cwtl
add
add
inc
orl
or
add
add
inc
add
add
adc
add
add
add
add
adc
adc
adc
test
jb
add
adc
add
inc
cwtl
or
or
or
add
add
or
add
add
mov
nop
or
and
sub
inc
add
and
lea
pusha
nop
add
add
add
add
sbb
cmp
add
or
add
addb
or
dec
add
inc
xchg
mov
mov
and
pop
and
add
add
add
mov
add
or
xor
inc
and
add
inc
xchg
add
daa
and
mov
das
add
add
shlb
mov
xchg
rolb
inc
cwtl
adc
addb
push
and
adc
xchg
or
xchg
inc
adc
and
pop
nop
push
inc
and
and
xchg
adc
das
and
bound
clc
repz
add
and
and
inc
data16
dec
mov
or
mov
add
mov
les
inc
inc
rol
add
ret
xorl
xor
xor
mov
add
enter
bound
push
addb
add
and
add
add
cwtl
or
inc
sub
inc
sub
mov
and
or
or
add
inc
orb
add
and
andb
add
xor
dec
add
mov
addb
dec
and
rcrb
addb
orb
inc
add
lock
or
jne
pop
add
and
add
sbb
and
add
adc
adc
sbb
lea
rolb
inc
das
push
add
orb
mov
adc
test
mov
or
mov
xor
shlb
inc
add
xor
sbb
add
and
or
mov
sub
and
add
add
add
mov
add
or
add
bound
adc
add
add
cmp
inc
add
pop
dec
mov
push
or
add
nop
add
sbb
mov
add
add
push
orl
or
dec
dec
or
add
sbb
popa
add
addb
daa
mov
add
inc
or
inc
push
dec
xor
adc
pusha
dec
inc
and
add
add
push
nop
inc
cltd
test
int
xor
adc
add
add
add
add
dec
dec
sbb
dec
xchg
or
inc
ret
inc
dec
adc
dec
add
movsb
add
inc
push
add
pusha
addb
cmp
add
mov
or
add
add
xchg
mov
or
adc
add
mov
adc
and
add
addl
imul
add
inc
or
push
rolb
push
inc
and
pusha
and
in
add
ret
add
nop
adc
add
mov
adc
xor
or
and
enter
xchg
shll
inc
add
xor
xor
subb
addb
inc
add
sub
inc
and
subb
add
or
add
inc
loopne
sldt
add
inc
add
or
and
mov
and
subb
or
adc
dec
push
add
add
add
dec
add
adc
and
and
add
add
stos
and
inc
addb
adc
add
add
push
sbb
movsb
pusha
inc
inc
add
or
adc
xor
add
add
and
adc
inc
sbb
or
mov
adc
inc
xchg
nop
add
add
addb
add
push
or
subb
add
and
add
and
add
jb
add
inc
inc
test
addb
pop
inc
adc
add
add
sbb
dec
push
dec
adc
or
cmpb
lods
rorb
inc
and
add
dec
inc
or
insb
and
sbb
inc
adc
and
and
sub
adc
xorb
sub
xorl
sub
add
inc
inc
rolb
add
test
add
sub
adc
inc
pop
inc
xchg
dec
call
stos
add
addb
inc
adc
inc
xchg
leave
shlb
add
mov
addb
mov
les
sub
add
dec
and
xor
or
add
add
mov
add
sub
and
adc
add
add
addl
jno
add
adcl
nop
es
and
adc
dec
push
inc
or
or
or
test
addb
es
add
sbb
or
add
popa
add
shlb
add
and
and
add
push
add
or
mov
and
add
adc
adc
call
sub
push
add
adc
adc
pusha
ret
or
or
or
add
and
add
adc
addb
mov
inc
xor
add
fs
add
andb
add
add
add
add
or
xchg
roll
push
sub
nop
add
and
add
lret
adcb
add
adcb
adc
orb
and
dec
inc
inc
add
and
push
sbb
inc
mov
push
inc
inc
dec
jnp
add
add
add
add
pusha
nop
add
and
mov
or
add
add
add
popa
and
dec
or
adc
dec
inc
add
loopne
add
addb
xchg
and
add
loopne
lret
pusha
mov
add
or
inc
movsb
adcb
mov
add
data16
inc
push
add
sub
or
adc
xchg
add
mov
add
adc
adc
sub
daa
inc
lods
add
pop
add
add
or
add
and
add
add
inc
inc
nop
sub
or
cmp
and
or
adc
push
nop
xorb
add
mov
inc
add
ret
daa
add
inc
add
mov
adc
push
rolb
add
orb
cwtl
xor
or
adc
add
enter
push
addb
and
add
pop
addb
add
inc
mov
mov
addb
push
addb
inc
loop
or
add
and
add
and
adcb
addb
add
adc
add
or
add
adc
addl
or
lds
sbb
add
addb
add
add
test
cmpsb
enter
add
inc
test
push
add
add
add
orb
add
and
xor
clc
add
pusha
and
stos
and
nop
and
mov
adc
adc
mov
adc
pop
mov
add
sarb
add
pop
or
push
add
nop
inc
and
sbb
add
add
adc
push
call
adc
inc
addb
push
add
jb
mov
subb
and
add
rclb
cmp
shlb
adcb
nop
add
add
adc
test
jl
mov
addl
and
mov
sbb
test
inc
sbb
sbb
and
or
andb
add
push
rolb
add
push
add
sub
pusha
or
or
or
push
xchg
or
add
dec
inc
sub
inc
xor
add
add
add
add
ljmp
test
mov
subl
hlt
add
add
inc
adcb
add
roll
fs
add
test
add
add
sbb
push
ret
add
push
rclb
inc
inc
addb
add
or
inc
add
pop
xchg
add
or
add
xorb
add
add
add
push
mov
or
or
and
add
pusha
or
add
pop
dec
inc
and
mov
mov
adc
test
and
fs
add
or
adc
or
or
and
mov
addb
add
inc
or
adc
add
mov
adc
push
dec
inc
inc
orb
add
add
add
or
inc
adc
imul
adc
and
xchg
inc
sub
adc
jns
adcb
mov
or
or
call
inc
add
add
add
add
or
add
inc
add
add
add
adc
inc
add
add
add
out
inc
add
add
sbb
add
or
adc
and
add
sub
or
add
add
adc
addb
add
adc
adc
dec
fs
ret
and
andb
xor
test
je
add
and
and
add
and
nop
push
push
and
cmp
adcl
inc
add
loopne
adc
sbb
lret
adc
dec
add
andb
xor
xchg
or
adc
add
xor
add
add
or
sbb
test
adc
add
inc
add
xor
and
pop
xor
or
add
add
adc
adc
sbb
and
add
pusha
and
and
orb
add
addb
and
addl
push
inc
add
push
and
adc
sbb
addb
add
add
add
pusha
bound
add
mov
add
or
ret
add
inc
and
xor
pop
les
add
add
adc
and
xor
adc
int3
and
mov
and
addb
add
or
sub
xor
and
mov
inc
add
test
push
mov
mov
subb
in
adc
and
or
add
add
add
add
sbb
jp
dec
or
pop
adcb
push
and
test
mov
adc
or
adc
xchg
add
add
adcb
nop
add
mov
nop
inc
orb
test
xor
adc
popa
or
add
js
sub
sub
xchg
adc
mov
push
inc
adc
lea
or
mov
add
mov
addl
add
pusha
ds
inc
xchg
add
adc
add
and
mov
adcb
push
add
add
adcb
add
or
andb
rolb
add
add
inc
add
add
inc
inc
inc
sub
sbb
or
adc
or
add
inc
add
sub
add
or
add
inc
adc
add
add
inc
inc
orl
add
add
add
and
leave
add
inc
push
push
rorl
inc
add
and
mov
jo
mov
rolb
add
and
mov
add
adc
push
mov
push
add
mov
sbb
add
cmp
or
adc
test
inc
pusha
add
add
and
dec
addb
adc
lds
add
cs
sub
xor
add
and
and
jb
and
or
mov
add
inc
rorb
sbb
dec
addl
sbbb
add
inc
inc
or
adc
and
add
adc
lret
shll
add
insl
inc
pusha
sub
lds
add
or
add
adc
pusha
add
add
add
inc
add
sub
and
sub
xor
push
and
add
mov
push
pop
or
or
or
add
rcll
mov
inc
push
or
or
sub
inc
adc
add
gs
and
pop
mov
jb
add
add
xor
add
add
or
add
nop
pusha
pop
inc
add
add
and
mov
or
and
or
add
cmpsb
add
addb
add
inc
andb
and
adc
or
adc
or
inc
add
cmp
inc
add
subb
sub
add
adc
adc
inc
inc
add
dec
sub
adcb
inc
add
or
add
and
cmpsl
fwait
mov
add
add
mov
xor
dec
add
inc
addl
push
or
xchg
or
inc
add
xor
add
add
inc
add
push
mov
add
add
add
bound
add
inc
and
sbb
addb
and
dec
add
inc
inc
jns
nop
pusha
add
add
rolb
add
add
inc
rcll
mov
adc
popa
add
add
and
inc
mov
sub
dec
or
adc
and
mov
test
loope
add
or
xchg
push
and
ror
add
or
push
push
add
andb
inc
push
mov
add
dec
les
add
xor
sub
add
or
inc
mov
add
adcb
dec
and
inc
add
or
inc
adc
push
test
add
test
dec
sbb
fstps
test
stos
adc
test
inc
andl
or
push
add
and
add
add
orl
inc
andl
sub
adc
mov
sbb
nop
xchg
add
adc
xchg
mov
adc
add
push
roll
and
add
add
andb
addb
or
adc
rclb
sub
pop
cmpsb
add
dec
mov
add
fistpl
or
sub
xchg
inc
push
mov
mov
adcb
adc
add
and
jo
push
adc
add
add
add
push
add
add
sbb
add
xor
or
adc
xor
or
add
sbb
adc
add
dec
or
inc
and
lock
addl
addb
ret
inc
inc
xchg
pusha
mov
or
and
add
add
push
addl
lahf
and
sbb
add
addr16
add
add
sbb
and
xchg
rorb
adc
and
or
or
add
add
addl
ret
fadds
add
or
adc
add
add
add
sub
mov
mov
addb
add
add
pop
adc
inc
add
add
and
add
inc
adc
les
adc
add
dec
lret
test
or
dec
inc
and
inc
addl
adc
add
add
add
or
test
add
add
push
and
add
mov
add
fs
pop
or
push
dec
cmp
add
icebp
sub
imul
add
push
add
add
and
dec
mov
mov
mov
add
adc
and
add
rolb
and
and
movups
xchg
fdivr
adc
adc
xor
or
inc
inc
adc
inc
and
add
addb
adc
adc
inc
sbb
and
xchg
adc
movsb
adc
adc
les
add
sub
add
adc
add
adc
xor
and
add
push
or
andb
add
dec
add
push
lea
or
addb
subb
add
test
add
addl
add
or
add
les
inc
push
add
xor
inc
add
add
add
xor
add
cmpsl
add
or
dec
add
cltd
xor
or
adc
inc
or
or
call
mov
shll
dec
add
adc
ret
sub
stos
add
mov
add
add
mov
add
or
int3
and
and
mov
addb
test
inc
push
xor
pusha
mov
and
mov
and
rolb
push
or
or
add
or
add
add
add
inc
inc
dec
rolb
inc
or
and
and
or
adc
and
add
add
add
jb
orb
lods
inc
subb
inc
loope
add
loop
into
xchg
pop
cwtl
push
add
mov
adc
add
add
sub
push
dec
inc
inc
xchg
sub
add
inc
cmp
push
and
ret
loopne
je
inc
add
or
rolb
loopne
pop
enter
enter
sub
int3
xor
add
sbb
or
dec
add
add
add
mov
adcl
sub
sub
imul
adc
or
dec
adc
add
orb
andb
add
dec
add
or
add
add
leave
and
dec
inc
xor
add
or
or
adc
add
mov
ret
dec
sbb
movsb
add
addb
rolb
cmp
addl
xor
push
push
add
sub
add
xor
mov
addl
ret
add
test
xor
sbb
test
rolb
add
addl
test
or
add
add
add
xchg
inc
or
or
enter
inc
insb
push
and
add
add
loop
and
popl
add
sbb
push
sub
dec
push
add
sub
inc
and
movsb
adc
add
les
adc
xor
xor
data16
or
add
add
xor
push
add
inc
dec
inc
add
add
sbb
int3
or
sbb
addb
add
add
adc
xor
add
lds
inc
inc
add
inc
and
xchg
and
sbb
add
inc
add
adc
adc
sbb
add
add
cwtl
nop
and
adc
inc
add
sbb
and
and
mov
add
add
aad
in
add
dec
mov
xor
sub
mov
add
inc
add
xchg
add
addb
push
mov
addb
inc
aad
add
mov
add
orl
sub
add
pusha
or
inc
sbb
add
push
cmp
inc
add
loopne
sub
dec
and
xchg
pop
and
mov
sbb
add
mov
rolb
addl
pusha
inc
orb
dec
pop
add
push
inc
dec
push
jno
add
adc
add
sub
add
add
rolb
or
ret
sbb
and
add
add
enter
mov
xor
and
add
or
orb
push
push
lret
out
or
mov
adc
push
add
push
sbb
push
adc
orb
adc
adc
orb
add
nop
inc
push
and
orl
add
add
dec
inc
and
or
inc
add
xor
rolb
add
xchg
or
push
orl
sub
inc
sbb
test
mov
int3
mov
movl
orb
and
or
add
addb
imul
push
add
nop
add
add
sbb
add
and
push
mov
dec
add
add
mov
andb
xor
or
xchg
add
lcall
addb
inc
gs
lea
push
jo
and
adc
or
add
xor
movsb
add
add
loop
or
xchg
push
pusha
add
add
inc
movsb
push
sbb
xor
ror
xor
add
and
add
or
or
add
ret
add
add
or
pop
inc
mov
add
or
insl
add
sub
or
and
inc
adc
add
and
add
sub
adc
add
add
cwtl
inc
mov
shlb
add
or
sbb
or
adc
or
add
add
adc
push
and
les
add
adc
ss
stos
add
inc
dec
addb
add
inc
inc
push
push
push
add
add
add
add
sbb
add
pusha
and
sub
and
and
insb
sub
mov
and
push
addb
add
and
sbb
and
add
push
cltd
inc
or
mov
adc
and
xor
or
adc
adc
subb
mov
and
dec
adc
orb
shlb
cmp
add
pop
and
add
fs
adc
add
push
pop
add
inc
add
adc
xor
je
adc
adc
pop
add
rorb
or
sbb
add
or
adc
push
in
or
or
inc
adc
addb
adc
adc
add
addb
xchg
les
or
cmp
aaa
push
add
andb
pushf
xor
sub
push
cwtl
add
and
push
and
adcb
nop
sub
add
add
rolb
inc
or
inc
or
xor
sbb
rorb
jae
add
add
adc
shlb
inc
xchg
jno
addl
dec
mov
add
je
and
or
or
and
and
inc
adc
or
add
movsl
inc
sbbb
inc
and
sub
movsb
or
cmp
inc
nopl
pusha
loopne
add
push
cwtl
xor
adc
add
mov
or
stos
sarb
or
add
push
and
add
add
and
push
loope
add
sbb
and
sbb
sub
or
add
and
sub
inc
test
add
push
andb
add
test
or
nop
or
sbb
adcl
add
test
add
add
sbb
lret
add
adc
movsb
push
insl
add
addb
add
add
and
adc
xorl
add
inc
add
or
mov
adc
inc
push
mov
test
inc
add
sbbb
add
add
addb
and
sub
sbb
or
add
addb
or
add
nop
pusha
adc
adc
add
or
cwtl
and
addb
cltd
xor
inc
sbb
or
nop
orb
and
and
add
ret
dec
adc
adc
xchg
inc
inc
add
add
add
sub
sbb
and
insb
adc
and
adc
adc
adc
dec
pop
or
add
add
mov
adc
or
or
and
add
adc
adc
or
adc
add
add
inc
push
xchg
nop
adc
or
adc
sub
pusha
mov
inc
shlb
and
rolb
rorb
add
test
or
adc
sub
add
loope
das
test
test
or
inc
mov
add
or
add
xchg
adc
and
dec
shll
add
ret
add
add
add
subl
adc
and
jo
adc
fcoms
push
add
leave
xor
lock
bound
add
xchg
addb
push
and
xor
ret
or
add
sbb
adc
adc
inc
inc
sub
add
addb
addb
insb
mov
nop
adc
or
mov
cmp
adc
adc
and
or
add
daa
mov
or
mov
adc
mov
and
add
shrl
or
and
add
les
add
and
add
and
add
adcb
or
adc
xor
adc
add
add
add
jbe
nop
push
adc
or
add
inc
xchg
add
addl
mov
mov
add
notb
mov
add
ljmp
and
loopne
rclb
or
add
and
mov
test
inc
add
sub
and
cwtl
xchg
add
or
imul
add
inc
add
and
or
adc
adcb
movsb
push
add
or
push
add
or
sub
add
add
sub
and
adcb
adc
inc
add
add
adc
inc
add
add
push
add
add
xorb
add
xchg
mov
inc
orb
test
pusha
add
and
addb
fsubs
inc
orb
mov
or
sbb
add
addl
add
add
add
addb
dec
add
lret
mov
inc
inc
sbb
push
and
add
push
push
nop
or
dec
add
and
adc
add
inc
add
adc
and
pop
add
inc
adc
call
or
inc
or
add
add
add
inc
adc
add
sub
and
push
inc
enter
sbb
push
add
mov
inc
inc
mov
mov
xor
add
daa
adc
xchg
addb
and
add
cmp
push
and
push
add
pop
and
add
dec
push
or
inc
sub
and
xchg
mov
lret
sbb
inc
push
add
add
and
leave
add
sbb
or
test
cmp
dec
add
sti
add
sub
movsb
inc
add
add
or
mov
and
xchg
or
andb
xor
and
inc
or
push
or
push
or
xchg
adcb
add
js
or
xchg
add
adc
or
add
adc
sub
cmp
or
mov
nop
mov
push
adcb
or
or
inc
inc
and
add
or
push
adc
add
adc
add
pusha
mov
cltd
or
mov
adc
push
adc
rorb
loopne
mov
andb
pop
push
add
add
xchg
push
add
inc
add
dec
addl
and
xchg
mov
adc
mov
add
enter
push
adc
ret
or
add
lea
add
adc
and
or
and
and
xorl
inc
pusha
xor
and
mov
and
les
nop
add
and
hlt
add
add
xorb
test
xchg
add
add
inc
inc
and
add
inc
or
add
pop
jo
or
add
mov
add
add
sbb
add
test
inc
inc
lods
adc
xchg
or
or
push
andb
or
xor
and
add
inc
sbb
or
and
int
add
nop
xor
add
add
andb
and
xor
sbb
adc
add
push
add
nop
mov
enter
pop
and
sub
inc
adc
add
dec
addb
pop
push
addb
add
mov
jo
loopne
and
xchg
add
adc
inc
add
adc
lret
cltd
adc
mov
and
add
inc
xchg
push
add
shlb
inc
js
add
add
inc
dec
dec
xor
add
add
adc
add
push
or
loopne
inc
and
and
stos
and
add
sbb
add
add
add
add
addl
push
adc
or
and
addb
add
inc
add
add
add
or
push
add
or
adc
xchg
adcl
addb
dec
add
xorb
andb
xor
push
add
add
add
add
ret
add
push
add
add
add
subb
mov
add
add
add
sbb
sbb
push
lods
mov
inc
mov
dec
add
adc
add
addb
mov
xchg
xchg
or
adc
add
popf
push
add
mov
and
adc
add
add
mov
push
es
push
add
sub
sbb
les
addb
adc
mov
and
mov
or
adc
push
sub
adc
inc
xchg
add
push
adc
adc
add
mov
or
xchg
inc
mov
sub
add
fadds
dec
inc
sub
push
andb
pop
sub
and
add
lret
inc
xor
nop
adc
push
and
or
add
ret
add
add
mov
add
adc
and
lret
and
add
add
fimull
adc
pop
push
add
and
or
in
call
shll
or
add
dec
xor
dec
add
nop
orb
add
or
inc
adc
inc
dec
and
imul
add
adc
adc
add
add
adc
add
mov
or
or
es
js
sub
add
inc
or
adc
adc
add
dec
addl
adc
inc
push
push
push
fs
or
inc
inc
add
inc
sbbb
adcb
add
sub
inc
or
add
mov
andb
lods
add
movsl
add
mov
push
add
inc
add
xor
or
adc
and
add
inc
dec
test
adc
ret
add
add
add
pop
add
push
or
adc
cmp
sbb
loopne
sub
add
xchg
pusha
int3
in
or
dec
or
or
or
add
jl
sub
inc
and
add
pop
and
fdivs
and
mov
inc
add
xchg
mov
add
adc
add
sbb
inc
and
add
add
push
mov
or
adc
or
adc
adc
and
push
add
ret
or
add
and
adc
pop
and
mov
addb
xor
add
or
inc
adc
inc
or
and
icebp
and
or
sbb
or
inc
and
or
add
adc
in
add
add
mov
and
xor
dec
adc
cwtl
lea
sbb
inc
lea
sbb
adcl
addl
in
inc
mov
and
add
and
stos
dec
test
inc
push
adc
or
dec
inc
nop
or
add
add
add
add
les
inc
jl
or
sbb
adc
add
or
add
add
sub
mov
add
xchg
adc
lods
mov
and
add
or
inc
or
xchg
adc
and
add
xor
add
sbb
andb
enter
les
mov
or
faddl
and
sbb
push
add
inc
adc
mov
add
test
xor
xor
add
or
add
push
and
inc
adc
adc
adc
or
add
adc
mov
add
xchg
bound
inc
sub
add
and
adc
push
dec
adc
add
add
add
inc
push
sbb
inc
inc
inc
add
cmpb
or
bound
inc
add
add
sbb
rorl
inc
add
sub
or
adc
loopne
adcb
adc
add
inc
inc
lods
adc
push
or
jne
and
orb
xchg
inc
popa
or
add
addl
or
inc
test
addb
pop
add
or
int
sbb
add
or
rolb
or
add
addb
sbb
add
add
add
inc
push
push
add
sub
and
and
add
add
add
ret
or
inc
sub
adc
add
rolb
sbb
adc
add
add
andb
leave
inc
andb
mov
rorb
inc
add
inc
push
add
dec
jo
inc
add
push
and
add
orl
add
roll
inc
inc
inc
inc
push
and
sbb
add
add
test
xchg
inc
add
add
inc
cwtl
push
add
add
and
add
dec
adc
pop
add
inc
adc
add
pop
inc
and
dec
add
sbb
inc
adc
add
add
and
insb
orb
add
addb
pusha
addl
shrb
sbb
adc
push
rorb
inc
xor
add
mov
inc
or
sub
or
adcl
inc
pop
inc
sub
mov
xor
or
pusha
add
adc
or
add
add
lcall
dec
adc
add
add
add
add
or
inc
adc
xor
add
xor
add
lret
add
rolb
cmp
add
dec
addl
mov
ss
and
add
add
push
add
add
adc
and
mov
add
add
or
dec
and
add
inc
rcl
add
add
adc
or
pop
add
cmp
add
add
cmp
add
movsl
adc
push
sub
add
inc
add
dec
add
orl
add
and
or
pop
rolb
push
sbb
and
inc
mov
adc
and
sbbl
rolb
inc
imul
inc
and
inc
or
mov
xorl
xchg
mov
add
add
sbb
or
in
addl
xor
cmp
andb
add
sbb
or
adc
add
add
add
add
addb
inc
inc
xchg
nop
adc
xorb
or
sbbb
sub
xor
mov
or
mov
addb
addb
push
sbb
mov
add
movsb
push
adc
add
inc
or
or
xor
add
add
add
add
pop
add
scas
adc
sub
and
add
add
pop
and
mov
add
inc
adc
add
mov
les
mov
add
adc
inc
pop
xor
adc
ror
sarb
inc
add
sub
dec
nop
add
dec
ret
push
test
add
add
addb
orb
add
dec
or
dec
and
and
pusha
add
add
inc
xchg
inc
add
add
add
in
add
or
and
add
rclb
push
push
xchg
and
adc
push
or
or
insb
xor
add
add
nop
push
cmp
mov
inc
xor
or
inc
add
add
cmpsb
and
mov
adcl
add
inc
test
xorl
nop
adcb
adc
add
or
and
and
adc
mov
adcb
addb
inc
int
or
and
inc
inc
addb
add
subb
test
add
je
push
adc
and
nop
ret
pusha
add
add
inc
cwtl
adc
rolb
inc
addl
es
add
inc
or
add
add
and
mov
or
add
adc
cwtl
add
and
and
adc
adcb
leave
or
jb
push
mov
add
je
sub
nop
pusha
and
mov
in
inc
add
lds
inc
inc
add
or
shrb
adc
addl
adc
and
orb
sbb
adc
add
add
and
add
adc
shlb
add
adc
inc
add
or
test
push
add
inc
dec
mov
pop
or
and
add
call
or
xchg
addb
and
cwtl
sub
and
addb
add
add
mov
adc
add
nop
mov
and
mov
or
jo
add
andb
inc
pop
push
andb
mov
mov
push
pop
add
orb
add
mov
sbb
mov
or
adc
add
int3
cmp
adc
adc
test
adc
dec
out
enter
and
rclb
add
add
or
and
and
test
and
sbb
test
sbb
mov
add
cmp
mov
and
or
xor
push
rolb
es
addl
push
add
pop
nop
sbb
inc
add
xchg
xor
or
and
add
add
and
and
push
mov
nop
popa
add
push
and
sbb
inc
pusha
and
imul
nop
rolb
adc
add
add
push
sub
adc
andb
add
sbb
add
add
test
inc
xor
add
dec
bound
xor
mov
and
popa
xchg
and
mov
test
add
nop
inc
add
and
in
mov
or
add
sbb
add
add
add
xor
and
add
inc
add
sub
xchg
add
add
push
or
add
push
add
inc
addb
mov
add
addb
inc
add
add
inc
adc
push
add
add
mov
movl
push
and
push
sub
sub
orl
add
mov
or
sub
and
add
or
add
mov
and
push
and
add
add
cmpl
push
add
and
add
inc
add
add
mov
add
sbbb
adcl
and
test
rolb
add
movsb
shlb
cmp
add
push
inc
push
add
sub
adc
and
out
add
or
mov
adcb
or
add
fs
and
inc
mov
add
inc
add
add
and
dec
insb
add
or
inc
lea
addb
enter
add
add
add
add
add
or
bound
add
pusha
or
inc
and
mov
add
push
adc
push
cmp
adc
mov
adc
shlb
add
clc
and
mov
add
and
add
add
add
bound
push
push
and
xor
test
mov
add
loope
add
aam
adc
add
inc
sbb
xorb
adc
or
add
test
add
sub
or
add
add
sbb
fadds
inc
inc
test
bound
fwait
add
pop
sub
push
or
add
add
sub
rorb
and
inc
inc
add
mov
add
andl
or
add
addl
mov
add
pop
adc
cltd
add
mov
xchg
add
or
sbb
mov
sub
xchg
dec
mov
add
pop
and
dec
in
adcl
inc
or
pusha
or
and
add
push
addb
add
push
addb
addb
inc
add
es
dec
xor
sub
mov
and
nop
subb
sbb
push
or
add
rclb
adc
mov
push
test
add
add
ret
dec
xchg
or
and
add
inc
add
pusha
push
push
mov
addb
roll
orb
insl
mov
dec
or
mov
subb
mov
imul
ret
push
add
push
mov
adc
sub
adc
sbbl
andb
push
sub
or
add
inc
add
sub
push
addl
adc
add
inc
push
add
sahf
inc
bound
mov
or
xchg
addl
push
push
inc
sbb
mov
lods
xor
push
mov
adc
addb
push
add
xor
dec
sub
shlb
lar
xor
add
and
ret
add
add
lahf
and
add
push
and
add
add
add
add
add
push
or
enter
adc
add
add
add
or
andb
push
mov
add
sbb
cmp
popa
jbe
sbb
and
push
adc
add
adc
push
pop
sbb
sub
and
add
inc
or
push
add
xor
lock
add
add
add
imul
add
or
adc
test
sub
adc
mov
xor
and
or
add
pusha
xor
and
and
xchg
nop
push
and
test
enter
out
adc
add
add
add
rorb
xor
adc
popa
inc
add
popa
inc
add
add
add
xor
add
push
add
push
sbb
cmpsl
or
xor
dec
or
add
add
mov
add
xor
add
add
inc
nop
roll
and
xor
inc
add
xor
xor
inc
add
mov
pop
pop
pop
push
add
outsb
mov
int3
mov
adcb
es
and
mov
adc
mov
rol
mov
xchg
dec
add
in
sbb
adc
mov
add
mov
or
add
mov
mov
orb
add
push
ret
pop
add
movsb
add
adc
sbb
add
and
xchg
add
dec
add
sbb
les
or
jp
dec
add
and
sub
or
add
bound
sbb
pusha
rclb
adc
xchg
add
adcl
mov
mov
or
inc
adc
inc
add
add
sub
stos
add
cmp
and
add
add
or
andl
addb
dec
xor
loop
jae
into
pusha
add
sub
xor
adc
and
add
inc
or
add
inc
add
add
and
adc
inc
call
add
test
add
push
add
rolb
xor
add
inc
mov
shlb
push
push
or
add
sub
push
xchg
imul
add
inc
add
add
je
add
rorb
pop
add
inc
adc
inc
add
addl
pop
and
add
je
rol
bound
dec
addl
xor
and
inc
inc
adc
add
add
and
inc
add
xorb
add
add
add
and
nop
or
inc
adc
addb
add
adc
add
add
sbb
inc
adc
and
add
and
adc
xchg
add
dec
add
adc
addb
dec
or
orb
adc
add
addb
inc
add
and
pop
add
add
add
daa
cmp
adc
shrb
add
add
add
pusha
push
push
xchg
inc
adc
add
rolb
or
movsb
inc
and
add
test
inc
add
sbb
xor
and
nop
push
adc
mov
or
dec
lret
add
xchg
push
or
add
add
nop
adc
inc
and
roll
nop
dec
and
and
inc
push
addb
and
sub
addb
push
ret
adc
mov
push
push
push
adc
inc
jo
or
mov
add
andb
add
add
or
movsb
sbb
in
sub
or
nop
add
push
inc
or
push
xor
inc
lret
adc
sbb
add
and
inc
inc
inc
cmpsb
push
dec
add
or
sub
xchg
add
and
push
add
aam
adc
or
add
add
inc
and
adcl
add
adcl
inc
add
and
or
inc
inc
mov
push
adc
or
test
rorb
add
adcb
orb
addl
sbb
inc
and
dec
call
adc
pusha
cmp
adc
or
or
add
test
adc
add
xor
rorb
and
and
or
mov
or
or
in
inc
or
adc
add
add
add
inc
mov
adc
add
test
adc
sub
sub
inc
add
or
dec
push
add
and
add
add
mov
adc
mov
add
add
and
mov
dec
sbb
inc
add
dec
rorl
push
dec
or
and
sbb
adc
mov
or
adc
add
ret
dec
addb
and
rolb
and
inc
inc
adc
push
subb
or
add
or
and
push
add
nop
addl
fisttpll
adc
sbb
add
orb
add
inc
inc
add
add
int3
inc
add
xor
andb
inc
add
add
rcrb
add
add
add
add
adc
add
inc
sub
cmp
add
add
cwtl
and
adc
pop
data16
les
adc
adc
add
pop
and
inc
sub
push
xchg
adc
gs
sbb
adcb
adc
or
repnz
jp
add
mov
dec
inc
xor
mov
add
sbb
xor
add
or
or
lea
mov
addb
mov
add
jae
addb
add
test
movl
add
in
add
adc
push
or
add
addb
add
or
cmp
add
add
add
dec
xchg
xchg
dec
roll
adc
or
addb
or
add
and
xorb
add
mov
rolb
nop
inc
or
dec
inc
push
and
add
inc
inc
and
inc
add
and
add
cmpsl
or
outsb
mov
mov
add
nop
loope
inc
andb
or
pop
and
add
pusha
xchg
orb
add
push
add
add
push
xor
inc
and
adcb
and
jae
andb
dec
mov
addb
mov
inc
and
add
cwtl
andb
adc
leave
xor
mov
add
push
sub
adc
jns
add
pusha
add
adc
add
adc
add
adc
add
add
sbb
or
add
imul
or
add
add
or
add
sbb
add
out
loope
add
add
add
xor
inc
and
add
call
add
fld
add
enter
sub
andb
inc
test
add
jo
add
and
add
push
andb
add
add
xor
xor
add
adc
and
mov
add
sbb
test
inc
sub
xchg
add
xchg
add
popa
add
or
addb
or
sub
inc
or
add
add
sub
inc
test
xchg
inc
sbb
lods
adc
add
pop
or
addb
add
xor
xorb
mov
or
inc
orl
add
adc
and
inc
ret
inc
or
add
add
cltd
inc
add
and
or
add
test
add
add
and
or
addb
rol
and
rorb
add
inc
add
popa
xchg
sbb
add
xchg
lcall
xor
enter
mov
and
inc
xchg
push
andb
and
mov
add
mov
inc
add
add
xchg
and
or
inc
adcb
jmp
add
addb
jo
adcb
adc
adc
and
or
adc
inc
and
addb
inc
add
dec
sub
xchg
push
add
or
and
add
add
add
add
adc
adc
call
test
imul
add
pusha
and
add
or
xchg
add
add
fadd
push
add
nop
adc
adc
inc
add
mov
inc
and
loope
addb
adc
sub
inc
sbb
adc
sub
dec
inc
inc
bound
push
add
and
push
inc
adc
adc
xor
dec
stos
push
dec
add
add
add
add
add
inc
adc
add
adc
adc
and
add
lock
adc
inc
pop
xor
inc
inc
add
test
add
add
adc
and
cmp
add
or
and
cs
add
xchg
xor
sbb
add
adc
inc
push
popa
andb
add
add
orl
and
mov
sbb
in
aaa
in
sub
js
cld
mov
push
rorb
es
jmp
dec
inc
push
ja
mov
fldt
adc
rol
lods
stc
addr16
lret
push
cmp
mov
repz
std
pop
scas
insb
mov
mov
cltd
dec
mov
dec
sbb
daa
mov
xorl
push
push
aam
add
add
xlat
sbbl
push
mov
push
in
pop
adc
push
addr16
insl
xor
jge
jle
dec
dec
xchg
sbb
daa
outsl
mov
mov
xor
cs
jmp
stc
xlat
push
mov
insb
lret
add
shrl
inc
cmc
lods
outsb
cmp
mov
jmp
cmc
ljmp
ret
push
push
mov
pop
fcmove
xor
sub
mov
outsl
insl
mov
sub
dec
dec
sub
imul
sahf
and
mov
scas
push
or
in
cli
jb
test
mov
adc
shll
cmp
imul
out
inc
ret
sbb
dec
fcoms
jmp
pusha
mov
cmovne
inc
in
fsubr
nop
in
jns
inc
leave
mov
pop
adc
inc
repz
mov
jno
mov
mov
fsubrl
outsl
or
fwait
dec
mov
pop
fs
out
add
sub
aas
mov
in
xchg
jle
jbe
stc
and
pop
in
push
pop
ret
jmp
jo
in
fisttpll
jl
inc
jne
mov
in
in
js
cwtl
sub
mov
lcall
nop
xchg
in
pop
stos
popa
inc
jno
sbb
or
negb
pop
cmc
jge
imul
jne
ror
cmpsb
mov
push
push
cmpsb
out
in
iret
pop
push
ds
push
inc
std
push
popa
insl
dec
jl
cli
dec
and
std
pop
jmp
inc
movsl
das
mov
xchg
imul
enter
dec
cli
and
test
jle
mov
push
push
or
test
pop
fldcw
movsl
push
out
sub
xchg
popf
je
out
pop
loope
in
bound
sarl
sbb
sbb
inc
stos
dec
jg
and
loop
mov
push
mul
cmp
bound
outsb
ja
adc
jl
mov
or
sahf
fwait
lods
mov
aaa
icebp
cmp
js
lret
and
lcall
add
jmp
outsb
inc
inc
or
mov
fmuls
xchg
push
jo
dec
arpl
mov
push
xor
in
movsb
adc
mov
inc
aaa
das
frstor
push
stos
insb
mov
testl
pop
push
outsb
sbb
fisubs
and
cmp
pop
xchg
aas
scas
imul
inc
shrb
outsb
mov
scas
or
aad
jg
std
mov
sbb
cmp
cmp
inc
jecxz
cmp
fimull
cmp
dec
jmp
or
insl
cmp
push
adc
push
push
scas
and
jb
hlt
cmp
flds
leave
jnp
imul
lret
jmp
outsl
jecxz
in
icebp
dec
repnz
jmp
sbb
dec
out
sti
or
out
pushf
jge
or
dec
mov
in
dec
outsb
sbb
pop
add
and
into
test
mov
ret
incl
outsl
psubsb
stos
push
lret
add
cli
mov
mov
jmp
and
lds
xor
imul
stc
aam
loop
xchg
mov
enter
shlb
jmp
jbe
push
mov
mov
jnp
decb
jp
xchg
lea
sub
inc
cs
mov
jmp
jno
pop
fldl2e
shlb
sub
stos
dec
lods
pop
enter
in
in
push
sti
xor
clc
jmp
fidivs
stos
mov
test
and
cld
aas
inc
jge
test
std
int
mov
mov
sbb
push
jne
mov
mov
roll
jp
and
les
pusha
outsb
jle
xchg
daa
xor
xor
mov
inc
cltd
jp
jo
adc
jg
cltd
or
jbe
mov
pop
sub
insb
dec
loop
push
or
pop
add
movsb
adc
adc
js
and
xchg
enter
sub
push
cmp
addr16
fimull
pop
pop
ret
ljmp
sub
idiv
das
out
outsl
call
adc
mov
dec
push
push
in
lds
lahf
cld
sub
mov
add
jp
lock
pop
es
add
pop
es
mov
jl
sbb
les
dec
hlt
push
popf
gs
mov
xlat
in
mov
add
roll
push
xlat
pop
or
push
lahf
mov
repz
js
cmpb
imul
or
jge
in
insb
fdivrl
dec
test
pop
mov
sbb
loopne
call
mov
inc
pusha
jmp
fisttpl
inc
cmpsl
mov
dec
xchg
xor
push
mov
xor
mov
inc
stos
jg
push
push
mov
movl
sub
mov
mov
jb
inc
ljmp
fldl
test
cmpsl
add
test
out
pushf
jl
mov
dec
inc
in
ljmp
bsr
pop
fmuls
mul
aam
push
xchg
jb
mov
in
je
bound
dec
popf
test
push
test
xchg
mov
sarb
xorb
xlat
mov
mov
sub
pop
sahf
inc
mov
add
outsb
outsl
ds
daa
xor
ljmp
and
shrb
subl
adc
push
adc
addr16
ds
add
sahf
and
cli
xchg
mov
andb
arpl
jmp
sbb
mov
aaa
call
imul
add
scas
mov
add
into
mov
sub
nop
lret
push
es
xlat
xor
sti
iret
lcall
enter
pop
dec
xchg
xchg
lahf
nop
xlat
pop
mov
dec
push
nop
or
aam
mov
ss
cmp
xor
scas
fwait
jg
out
jmp
xor
out
cmp
or
mov
mov
push
push
inc
mov
xchg
mov
into
sahf
mov
mov
and
std
aaa
scas
dec
outsb
das
push
sbb
xchg
jno
jmp
pusha
int
adc
aam
mov
or
dec
push
pop
inc
inc
adcb
sti
outsb
or
push
sti
fldcw
sub
aam
insl
outsl
test
mov
adc
out
dec
icebp
adc
rol
addr16
dec
cmp
jmp
or
xor
jbe
ljmp
fwait
outsb
sbb
pop
outsl
insb
in
mov
scas
jnp
mov
fwait
mov
push
push
dec
cmpl
sub
push
std
fdivrl
rcrl
jl
je
mov
outsb
push
daa
outsl
jg
dec
inc
pop
cwtl
mov
jmp
sarl
add
add
jmp
outsb
dec
jge
sub
xchg
movsb
insl
mov
ja
das
xor
lcall
push
mov
sub
mov
mov
les
out
jmp
cmc
les
mov
xchg
jp
push
jo
das
xor
lret
add
outsb
fdivs
and
test
lods
sub
sub
bound
jne
pushf
sub
jo
mov
xchg
mov
inc
gs
ret
sub
jmp
test
cmp
add
out
mov
std
mov
sbb
mov
fcoms
in
pushf
or
sub
andb
inc
test
out
dec
mov
fisubs
repnz
lock
or
push
push
dec
out
scas
adc
push
nop
outsb
sti
std
loopne
jmp
fistpl
mov
in
fstl
cmc
or
popl
outsb
sub
movsb
inc
cmpb
and
push
cmp
push
orl
stc
mov
mov
add
lods
lret
into
jle
dec
sub
fsub
cmc
mov
aas
jge
cld
roll
dec
nop
inc
pop
lcall
mov
add
inc
sbb
push
sbb
sbb
mov
pop
insl
enter
push
sub
jl
fldt
push
clc
rcrb
cmp
fmuls
pop
in
dec
mov
scas
in
jb
pusha
clc
and
xchg
dec
push
mov
push
lock
xor
dec
test
mov
outsb
pop
xor
enter
in
inc
ret
pop
js
stos
loop
mov
stos
add
inc
or
rcrl
sub
pop
sub
repnz
loopne
pop
fimuls
imul
jbe
test
inc
fwait
das
mov
test
scas
pop
jge
xchg
xchg
mov
pop
mov
cmp
cwtl
pop
lods
mov
jnp
outsb
fldl
iret
in
leave
popa
adc
loopne
mov
sbb
js
mov
mov
icebp
out
imul
push
stc
push
gs
in
pop
sarl
dec
jns
xlat
mov
mov
jns
and
push
jae
outsb
mov
jno
jmp
xchg
out
jmp
aas
daa
fdivrp
cmp
out
adc
xor
dec
mov
jl
out
lock
push
jne
push
dec
test
adc
dec
in
clc
arpl
lds
push
xchg
cmpsl
mov
xlat
popa
push
dec
lock
sub
outsb
xor
outsl
gs
dec
ror
jae
movsl
out
pusha
outsb
inc
mov
out
notb
dec
in
repnz
lret
xchg
adc
mov
lcall
mov
outsb
pop
in
inc
sbb
mov
ss
cmpsb
cltd
insb
inc
out
ret
inc
xchg
ljmp
jl
mov
dec
bnd
les
in
mov
dec
jb
ret
int
mov
adc
cmp
aaa
sub
mov
lods
lea
outsl
adc
pop
xchg
enter
aad
jmp
nop
xlat
sub
stc
inc
push
outsl
cmp
jge
mov
std
cmp
shll
in
cmp
rorl
add
dec
xchg
dec
pop
adc
mov
dec
rorb
xor
dec
lods
inc
jns
vpunpckhbw
aas
mov
es
rep
add
sub
sub
adcl
cld
popf
push
mov
sahf
fisubrl
sub
loope
cmp
js
mov
mov
in
xor
dec
jle
stos
pop
push
fs
pusha
cs
loope
lods
sti
popf
movsl
hlt
addr16
sub
cmp
mov
shrb
inc
cmp
cld
andb
in
xchg
loop
adc
jg
or
push
cmpsb
leave
addl
sub
ror
loope
jp
jo
fsubl
inc
pop
cmp
fstpt
lods
pop
ja
mov
mov
mov
cwtl
dec
pop
or
insb
sub
shlb
cmp
les
int3
outsb
adcw
add
xor
dec
pop
xchg
adc
out
xchg
lock
iret
mov
imul
fs
mov
jns
mov
mov
add
out
outsl
lret
mov
jbe
cmp
mov
popf
xchg
sbb
aas
sbb
xor
outsl
pop
mov
fxch
jmp
jns
sub
push
add
dec
add
sub
out
cmpsl
int3
push
push
in
pop
or
dec
xor
adc
aas
mov
cmp
push
stos
sti
addb
or
adc
inc
push
test
aaa
adc
leave
adc
pusha
jge
mov
lcall
cmp
popa
pushf
jo
xchg
mov
lock
or
xor
iret
imul
ret
push
and
lock
push
dec
adc
frstor
or
pop
mov
sti
test
push
sub
add
stos
xchg
mov
nop
movsb
gs
mov
inc
loope
jmp
xchg
pop
aam
insl
push
inc
bt
push
mov
push
jb
test
fdivs
fwait
mov
add
sahf
fwait
jae
mov
adc
push
sahf
in
dec
mov
shlb
dec
fsubl
aas
test
movb
pop
outsb
ror
jmp
mov
xor
dec
push
in
adc
adc
push
adc
push
push
jecxz
outsb
mov
insl
rorl
xchg
jae
jle
insb
out
xor
xchg
in
sub
mov
pop
fisubrl
cld
fs
mov
jne
adcb
cmp
jmp
pop
add
jo
popf
or
mov
outsb
jbe
jmp
sub
mov
or
dec
add
push
push
xchg
in
clc
dec
jno
scas
fwait
loop
xchg
ffree
and
xchg
lods
roll
mov
mov
insb
push
push
add
scas
push
dec
inc
push
jno
xchg
data16
inc
jb
inc
lods
push
das
in
mov
int3
dec
icebp
push
pop
mov
lahf
dec
xchg
mov
pop
fldl
rcrb
cld
inc
lods
outsb
cmpsb
and
cmp
mov
stos
loope
gs
mov
dec
pop
inc
cmc
inc
out
in
xlat
iret
jle
mov
incl
push
sub
in
mov
jnp
aad
xchg
or
test
cmp
inc
cmc
lret
mov
in
mov
hlt
shll
jl
popf
mov
sub
mov
and
lock
js
xchg
je
into
jnp
add
or
mov
dec
fisubrs
insb
dec
push
jg
jp
orb
ja
dec
fs
jne
ja
outsl
lahf
outsb
mov
enter
stos
ljmp
xlat
mov
xchg
dec
mov
jecxz
sub
push
addr16
aas
icebp
int
hlt
push
sub
cmp
sbb
loopne
orl
es
aas
jae
xchg
sahf
xchg
cmpsl
adc
sahf
ljmp
pop
adc
repnz
or
jmp
add
xor
outsl
rcl
inc
push
push
jnp
jge
aad
insb
mov
arpl
sbb
fs
ret
adc
xor
dec
dec
orl
push
sahf
cli
add
lea
outsl
daa
xchg
jo
adc
mov
imul
decb
jne
xor
mov
add
stos
inc
mov
jb
inc
dec
jl
mov
fcoml
cltd
sti
mov
gs
or
daa
mov
add
arpl
sbb
stos
outsb
push
sahf
jmp
xor
roll
sbb
imul
pop
out
in
leave
pop
dec
movsl
loopne
sub
cmpsb
ret
outsb
and
ljmp
add
in
outsb
cli
lods
or
lret
sti
out
outsl
dec
fsubr
xor
outsl
sbb
inc
lahf
ror
jnp
mov
test
cltd
popf
hlt
dec
cmpsb
scas
add
add
ljmp
jecxz
push
cmp
movl
and
dec
lahf
push
aaa
cmovo
incb
xchg
cmp
push
std
data16
pushf
imul
sbb
sub
xchg
add
cs
xor
ret
push
xor
push
test
xor
stc
pop
rclb
xor
enter
mov
push
out
scas
push
in
jo
xor
sbb
sub
imul
and
push
fwait
pop
pop
insl
roll
loopne
roll
adc
and
cmpsb
sub
cwtl
imul
lock
jno
mov
add
and
ds
mov
out
js
outsb
sbb
cmpsb
subb
add
jnp
imul
popl
sub
cwtl
ss
sub
fucomip
push
adc
inc
and
cmp
push
mov
mov
imul
cmp
outsl
imul
dec
mov
outsl
test
pop
popf
push
pop
mov
mov
or
xor
xor
dec
mov
and
outsb
mov
dec
cmp
movsb
lock
or
push
xchg
test
xor
sbb
in
shl
in
icebp
call
outsb
sbb
push
in
fmuls
dec
lea
xchg
dec
sahf
pop
les
shlb
and
mov
lea
es
sbb
add
or
jp
mov
ds
add
and
iret
adc
jmp
and
in
subb
cmp
lea
test
mov
fsubs
or
aad
das
cmc
cmp
push
mov
adc
jns
das
xlat
dec
ret
sahf
js
fwait
test
ret
cs
insl
sub
pusha
add
subb
lock
sub
int
add
dec
mov
inc
sub
outsb
das
test
loopne
xor
aam
mov
push
inc
and
fs
mov
jmp
cmpsl
sar
sbb
fstps
lahf
jmp
mov
mov
push
cwtl
push
pop
outsb
call
adc
dec
in
mov
nop
adc
mov
mov
loop
mov
shll
mov
sub
fsubrl
popf
lahf
movsl
sti
fdivrl
out
cs
mov
jmp
sahf
aad
in
jne
in
dec
push
fnstsw
outsl
sub
mov
lods
mov
inc
push
roll
nop
jbe
outsb
loope
xlat
jo
fs
push
icebp
lds
push
les
sahf
push
sub
push
out
out
outsb
scas
test
inc
lcall
jmp
hlt
outsl
mov
cmp
adc
mov
xchg
push
sub
jns
inc
push
and
adc
out
fildl
icebp
cwtl
fmuls
aaa
mov
das
push
sti
fidivrs
std
test
push
ss
loope
and
sti
outsb
in
lret
ljmp
pop
sub
adc
jno
scas
repnz
loope
xchg
aad
inc
mov
test
mov
mov
xor
jmp
dec
cwtl
inc
test
arpl
add
das
into
push
test
inc
ret
lods
out
jp
mov
mov
test
dec
nop
imul
mov
shll
fadd
ret
add
dec
ss
xchg
jmp
lock
and
xor
xor
sub
outsb
push
aad
in
mov
fwait
or
mov
lods
and
push
dec
gs
out
bound
push
jmp
push
shlb
mov
mov
xchg
inc
out
jecxz
add
ljmp
shlb
sahf
fidivrl
fwait
mov
pop
popa
xchg
pusha
pop
in
aad
adc
mov
fmuls
ljmp
pop
loope
into
rcll
mov
scas
push
in
or
inc
mov
into
jle
adc
add
fisubrs
andl
xchg
cmpsl
add
stos
pusha
test
stc
js
mov
aam
cmpb
pop
sti
test
mov
sub
and
negl
inc
cmp
lea
adc
sbb
cmpsl
inc
ljmp
push
pop
loop
outsb
ret
sub
adc
xchg
loope
rcrb
add
gs
mov
mov
popa
xor
fcomp
pushf
mov
movsl
shlb
cmp
or
add
outsb
cmpsl
inc
in
int
je
icebp
mov
fisubl
dec
xchg
mov
in
or
jnp
mov
mov
mov
stc
mov
les
cld
mov
addr16
mov
push
pushf
mov
dec
cmp
inc
adc
add
jecxz
xor
adc
ret
sub
push
jp
and
into
ljmp
out
lcall
bound
sbb
out
inc
outsl
mov
ret
jmp
ficompl
xor
add
pop
dec
add
movsl
std
mov
fisubrl
in
xchg
fcomps
jo
xor
pop
pop
test
cli
aad
in
inc
push
jmp
adc
and
mov
cmp
mov
movsb
adc
dec
cwtl
cmp
cmp
into
mov
sub
inc
outsl
outsl
adc
adc
jmp
and
mov
mov
test
xchg
or
sub
adc
push
in
mov
or
jns
jnp
popf
dec
and
mov
repnz
xchg
jmp
sbb
clc
int3
stos
sub
adc
mov
imul
mov
loopne
jns
lods
dec
inc
sbb
outsb
gs
cwtl
push
dec
or
in
cmp
push
aad
sub
inc
fbld
cmp
jg
div
mov
cmp
imul
imul
push
pop
push
das
in
mov
or
insl
jae
addr16
pop
std
xchg
jmp
jb
loop
pop
aas
f2xm1
jbe
sbb
jge
xchg
fwait
add
dec
loope
call
mov
cmp
dec
rcl
cmp
aas
mov
jle
xchg
inc
mov
cmp
aas
xor
lock
mov
gs
icebp
adc
and
and
mov
popa
mov
push
jbe
dec
jp
inc
popf
fnstenv
sub
mov
insl
mov
out
or
dec
jnp
mov
jae
fcmovbe
dec
dec
stos
bswap
ljmp
and
mov
inc
or
cwtl
jl
das
in
push
popf
out
dec
sbbl
fsubrl
xchg
jmp
inc
loopne
cmp
dec
pop
push
sbb
jl
sbb
jmp
outsl
data16
ja
shlb
push
iret
inc
xchg
jl
or
or
mov
sar
mov
and
lcall
jle
pop
mov
add
outsl
scas
jns
sub
iret
enter
fisubs
stos
es
call
mov
rcrl
sub
xlat
dec
aam
add
jge
inc
sub
movsb
lcall
cmpsl
les
mull
mov
or
push
jb
push
cld
mov
dec
mov
fisubrs
mov
jno
inc
mov
inc
sahf
or
push
sbb
cmc
sub
mov
and
icebp
rcrb
inc
push
insl
dec
mov
xchg
jg
sbb
add
outsb
lcall
jmp
movl
repnz
add
cs
leave
and
inc
dec
test
fwait
stos
sub
or
inc
fucomp
dec
or
lods
xorl
cmc
pop
aas
std
xchg
cmp
aaa
dec
or
adc
test
mov
scas
pop
insl
in
jbe
sbb
pop
and
in
cmp
and
mov
in
mov
outsb
adc
addr16
mov
xor
testl
cmpsl
sti
jle
ja
or
jmp
xor
iret
popa
adc
icebp
addr16
inc
pop
dec
decb
pop
mov
and
icebp
jg
xor
inc
mov
mov
in
in
jne
push
jb
xchg
push
inc
bswap
fidivrs
inc
enter
adc
orb
jl
or
push
test
push
addr16
xchg
add
adc
in
cmp
jg
int3
cmpsb
push
outsl
lahf
add
mov
mov
cmpsb
jmp
mov
pop
cmpsb
sbb
outsl
xchg
push
mulb
jle
data16
lea
xor
sbb
or
add
cmp
in
cmp
push
add
mov
cmpsb
jne
sub
inc
fidivrs
lahf
xchg
ret
outsl
sbb
mov
lahf
fs
cli
rcrl
push
lret
push
push
out
cs
adc
ja
lea
mov
cmpsl
jmp
add
enter
xlat
out
mov
in
dec
or
loope
hlt
cmp
lods
mov
out
cmpsb
push
pop
ret
push
xor
nop
jmp
mov
dec
loopne
sub
xchg
fcompl
loop
mov
pushf
cwtl
scas
mov
mov
ficompl
adc
dec
mov
rorb
xchg
pop
jbe
outsb
scas
or
inc
out
imul
jmp
fwait
cmp
fstpl
adc
shrb
jp
jmp
xlat
adc
mov
aaa
jle
or
dec
nop
pop
sub
dec
hlt
inc
push
pusha
jne
test
pop
imul
jmp
sub
mov
cmc
lea
js
lods
icebp
pop
dec
in
xchg
jg
stos
test
nop
fmulp
add
imul
bnd
mull
loopne
xchg
test
outsb
out
inc
dec
shrb
dec
cmpsb
addb
mov
mov
dec
call
and
xlat
addb
xor
inc
xchg
jmp
sar
daa
daa
jnp
test
add
fisubl
and
adc
jecxz
add
jge
jl
lods
push
xchg
lahf
frstor
pusha
dec
shrl
mov
push
jne
mov
xchg
sbb
into
sbb
dec
jle
pop
pop
xchg
push
movsb
subl
push
xchg
pop
push
std
jnp
sbbl
test
mov
pop
outsl
push
cmp
jmp
in
out
inc
jg
es
mov
mov
sub
hlt
xor
lock
adc
xchg
rcrl
test
es
hlt
out
jle
xchg
xchg
outsb
cs
scas
lret
mov
out
sub
scas
add
inc
pop
int
inc
sub
dec
xor
dec
jg
dec
in
lock
mov
outsl
test
add
mov
in
cmp
jmp
cs
subl
iret
xchg
mov
rclb
iret
pop
jns
push
dec
jae
insb
sti
xchg
cwtl
jle
outsl
add
jp
gs
mov
imul
cmpsb
jge
gs
pop
out
inc
and
jb
cmpsl
xor
xor
xchg
cs
sbb
out
xor
sbb
fdivrl
push
into
jl
xchg
sbb
ret
sub
xor
mov
xchg
jl
jg
les
hlt
mov
jg
adc
orb
popa
sub
xor
mov
dec
push
push
mov
movsl
sub
mov
rolb
inc
mov
jge
mov
sarl
or
sbb
inc
or
mov
cmpl
mov
repz
mov
insl
cmp
lahf
mov
in
jp
test
inc
hlt
pushf
mov
test
sbb
jmp
lock
stos
fsubs
mov
jno
xor
ficoml
cmp
aad
mov
into
lods
pop
xor
daa
iret
jl
mov
mov
stos
jmp
xor
inc
aam
mov
mov
mov
jmp
fiaddl
aad
pop
je
aam
imul
push
adc
dec
adcl
in
pop
jp
mov
xchg
mov
lea
dec
push
ja
call
mov
ja
test
sub
movb
add
div
sbb
in
addps
dec
mov
imul
add
add
push
adc
idivl
fcmovu
popa
es
mov
cmpsl
jns
outsb
hlt
inc
pushf
loop
int
fsub
std
cmp
dec
fstl
dec
test
sub
hlt
adc
pop
orl
pop
and
xchg
loopne
addl
pop
mov
jmp
out
pushf
leave
jge
mov
adc
pop
inc
out
je
xor
and
cltd
fcoms
mov
arpl
pop
pop
sahf
fs
cmp
sub
andl
insl
or
mov
aam
cwtl
mov
jecxz
mov
int3
lahf
inc
or
push
aas
mov
test
xor
pop
jmp
adc
or
fadds
sub
outsl
xchg
in
lret
leave
adcb
dec
push
inc
cs
outsl
insl
jbe
lds
mov
sbb
lahf
or
jmp
jnp
jbe
fs
mov
add
or
hlt
jmp
lret
xchg
ffree
jge
out
push
dec
stos
push
daa
xor
or
aas
aas
push
outsb
fimull
mov
jmp
xor
or
fdivs
mov
addr16
fcmovbe
mov
pop
jae
sarl
dec
ret
cmpsb
cwtl
jb
int3
pop
insl
loopne
loop
out
repz
pop
imul
iret
xchg
pop
stc
inc
hlt
jnp
imul
mov
pop
jb
xor
test
mov
dec
xchg
inc
push
pusha
push
jo
lods
decb
xchg
or
and
xchg
lock
and
cld
push
mov
mov
in
in
cmpsl
xchg
outsl
xchg
loopne
pop
xchg
xor
sbb
arpl
imul
sub
adc
sti
repz
inc
popa
cmpsb
movsl
jo
sbb
test
loop
into
aam
mov
xor
xor
xor
dec
sub
inc
andl
or
icebp
xchg
out
clc
xchg
inc
cld
stos
mov
add
cwtl
nop
xchg
jo
out
sbb
sbb
ficompl
movsl
mov
shl
xchg
dec
sbb
pop
cli
insl
lcall
in
aad
inc
sub
inc
out
pop
arpl
pop
sub
xchg
mov
subl
outsl
inc
loopne
dec
cmpsb
std
andb
jae
mov
arpl
das
mov
popa
push
dec
adc
inc
pop
subl
in
dec
cmp
cmovns
dec
jge
sub
xor
mov
test
iret
sub
jno
bnd
and
in
adc
cli
rorl
pop
ret
mov
outsb
xchg
dec
mov
jmp
cmp
cs
imul
sbb
dec
dec
mov
call
cmp
jmp
in
push
adc
add
pop
fxch
and
mov
xor
mov
addr16
cld
pop
cmp
arpl
rorl
fwait
xchg
nop
in
fsubp
dec
aas
cmp
jno
jl
les
xchg
inc
inc
mov
push
and
fs
dec
jnp
pop
arpl
inc
jle
lahf
ds
adc
adc
pop
dec
in
xor
sbbl
in
sub
std
and
rclb
ja
jmp
lock
and
mov
mov
xchg
out
insb
es
pop
xchg
xor
icebp
shrl
sub
iret
call
in
add
sarl
inc
outsl
scas
push
push
movsl
sbb
lret
mov
sub
xchg
push
addl
lcall
dec
or
dec
and
pop
outsb
xor
pusha
fcmovb
push
inc
jl
push
imul
sub
aad
into
out
scas
inc
insb
mov
mov
mov
lahf
push
scas
ret
cmp
repz
outsb
stos
xchg
xlat
jmp
xchg
add
test
jmp
in
sub
les
ret
pop
testb
pop
arpl
adc
dec
mov
das
cmpsb
jl
ss
cmp
push
fs
in
cmp
in
pop
stc
push
cmp
xchg
xor
push
les
cmp
sbb
fildll
dec
scas
insl
iret
dec
and
mov
iret
push
sbb
add
cmp
jge
lret
push
imul
sbb
notl
adc
je
fwait
dec
out
jge
outsl
cmpsb
and
sub
fildll
push
jl
and
xchg
pop
adc
mov
xchg
sbb
or
push
fisubs
mov
inc
mov
out
int
sti
xorl
and
mov
cmpsl
adc
jb
jmp
fidivrs
cmp
cmp
pop
push
dec
addl
inc
stos
ret
sbb
stos
jl
push
test
sub
xor
test
push
push
popa
push
test
lret
outsb
push
scas
imul
mov
inc
mov
ret
sub
std
mov
xchg
inc
cmp
mov
repnz
sbb
mov
push
testb
dec
jecxz
nop
loopne
das
enter
mov
dec
inc
dec
out
jbe
cmc
sbb
adcl
xorb
pop
mov
dec
push
add
add
jnp
mov
fsubrp
in
fildl
repnz
lock
xchg
mov
xchg
cmp
cmp
aam
sub
adc
sub
cmp
sbb
mov
sub
add
je
mov
pushf
repnz
pop
daa
mov
xlat
push
iret
fcoml
lret
push
jmp
lock
pop
xchg
insb
sub
lods
cmp
pushf
outsb
fs
negl
and
jno
push
jae
insl
jo
or
inc
jle
jmp
xchg
inc
fdivp
push
xlat
mov
xchg
out
pop
outsb
xorb
incl
jle
call
clc
lret
mov
das
xchg
outsl
test
xor
or
xchg
push
mov
outsb
std
aaa
cmp
mov
sbb
out
in
pusha
fidivl
stos
icebp
mov
pushf
outsb
test
sub
dec
jb
sbb
test
lods
push
push
add
push
iret
or
push
fsubrp
sbb
insb
mov
xchg
jnp
lods
je
mov
fimull
cld
sbb
jg
or
push
mov
stos
es
xor
test
sbb
lahf
mov
outsl
frstor
xchg
iret
xchg
xlat
int3
push
scas
and
leave
mov
fwait
xchg
or
mov
pop
jno
push
pushf
jmp
jp
push
icebp
sbb
outsl
jns
dec
into
call
aaa
je
sub
enter
clc
ds
repnz
scas
enter
inc
enter
push
outsb
or
dec
les
dec
sub
add
outsb
std
popf
in
ja
or
imul
push
jl
rorb
add
subb
or
in
push
setns
bound
cs
pop
fisubrs
insb
das
loopne
mov
insb
mov
fbld
mul
push
xchg
ret
icebp
xchg
pushf
outsb
or
xor
jmp
ret
lock
push
out
mulb
jecxz
push
dec
or
mov
scas
outsl
movsl
je
sub
jb
dec
pop
or
sarb
cmp
fnstcw
mov
jmp
sub
jbe
js
popf
lret
jno
dec
dec
call
sti
insl
xor
pop
lcall
xorl
and
mov
idivb
and
mov
ret
dec
aam
loop
jl
mov
sub
int3
and
push
mov
inc
jne
ss
arpl
xchg
adc
mov
dec
outsb
ja
shll
or
fimuls
adc
or
shrl
push
lahf
pop
sub
sti
mov
mov
pop
dec
and
aad
fdivr
pop
add
inc
jo
popf
add
int
jl
cwtl
xlat
outsb
mov
inc
idivl
jecxz
in
mov
ljmp
mov
inc
test
add
mov
les
add
cmpl
aam
call
js
iret
outsb
inc
add
cmp
movsl
or
sub
outsb
call
push
sbb
jge
push
push
int3
arpl
or
pop
push
xor
loopne
lahf
push
outsb
imul
add
sbb
pop
xchg
xchg
ljmp
in
into
mov
inc
dec
dec
stos
jmp
out
sbb
or
rclb
cwtl
pop
inc
rolb
outsl
mov
je
xchg
lods
sub
outsb
mov
dec
outsb
int
push
cmp
enter
dec
or
lods
movsl
es
xlat
rep
faddp
add
or
add
daa
shlb
cmovno
mov
jnp
push
sub
pop
dec
loopne
in
pop
fbstp
dec
in
outsb
xchg
cmpsb
xchg
xchg
outsb
enter
cld
shrd
push
testl
stos
inc
out
scas
ficompl
sub
test
dec
into
cmpsl
rorb
mov
pop
pop
lods
push
pop
fistl
dec
mov
fmul
adc
cmpsb
loop
mov
xchg
xor
repnz
lea
xchg
jnp
repnz
pop
jno
cwtl
call
pop
jle
ss
mov
insb
sub
xor
mov
mov
dec
xor
lock
nop
jno
jns
in
sub
repz
bound
add
fcoml
adc
or
repnz
iret
push
into
ljmp
jmp
push
add
popf
pop
mov
leave
push
in
mov
cltd
adc
pop
in
and
adc
sub
orb
mov
jae
clc
push
xor
stos
inc
aam
xchg
adc
mov
imul
xchg
int
sahf
jne
ss
dec
fdiv
jmp
into
stos
stc
mov
loope
xchg
cmp
fcompl
dec
jo
xor
cmc
pop
jo
into
lods
lret
jae
xlat
xchg
dec
or
inc
adc
jecxz
subl
dec
xor
sub
imul
adc
lcall
data16
xchg
or
dec
outsb
rorb
xchg
xor
mov
out
xor
or
cltd
sbb
popa
outsb
mov
adc
mov
jo
push
jnp
sub
mov
add
in
imul
inc
mov
sbb
xorl
lret
imulb
push
gs
mov
lret
repnz
xchg
mov
loope
fnstcw
inc
jle
test
inc
cmp
add
in
mov
popa
outsl
lret
clc
enter
lahf
jno
dec
dec
mov
dec
bound
aaa
outsb
cmp
mov
in
adc
jne
pop
bound
mov
cwtl
xchg
jge
pop
pop
mov
addr16
mov
adc
xor
testl
stc
out
je
dec
pop
pop
testb
xor
aad
mov
jge
cmp
xor
dec
in
dec
ss
mov
cmp
cmc
dec
lcall
jb
pop
push
push
or
add
fs
clc
xor
push
mov
sbb
jo
cs
mov
mov
adc
inc
lret
outsb
movsl
lods
je
xor
ret
and
xchg
and
mov
sub
xor
xchg
adc
lock
add
xor
in
and
scas
in
jg
arpl
stc
pop
shrl
jle
cmc
mov
inc
test
inc
cmp
jbe
and
cmp
dec
test
xchg
pusha
mulb
aaa
leave
stos
cmp
push
xchg
and
hlt
fisubrs
or
pushf
stos
test
mov
mov
sub
cwtl
inc
jnp
es
jae
lea
rolb
sub
lods
loope
xchg
scas
mov
cmpsb
cld
imul
push
popf
mov
lods
outsb
in
mov
bound
mov
into
fstps
dec
push
fsubrs
test
scas
arpl
jp
leave
jmp
addl
test
mov
mov
inc
and
sbb
sub
push
scas
fstl
outsb
punpckhbw
and
fists
mov
mov
dec
xchg
addr16
inc
dec
repz
push
lock
ja
les
xor
popa
aaa
outsl
mov
lods
mov
rorb
fwait
dec
testl
xchg
sub
test
adc
cmp
outsb
stos
push
mov
notb
stc
pop
ret
mov
sub
sub
mov
mov
adc
aaa
or
inc
lea
inc
xchg
adc
lahf
pusha
fucomp
stc
jo
adc
sub
outsb
pop
pop
lods
test
into
aaa
sbb
jmp
sysret
lahf
inc
outsl
fs
sub
sti
ja
out
jmp
lods
mov
insb
inc
shlb
ja
ss
sub
jmp
sub
sub
mov
gs
fadds
fisubrl
stos
mov
push
imul
dec
inc
jnp
and
inc
pop
push
inc
jg
out
enter
xchg
mov
fldl2e
imulb
adc
jae
repz
lea
ret
push
xchg
push
movb
xor
inc
mov
cmp
dec
jge
scas
test
jnp
sub
or
cmp
push
shr
mov
mov
fsubrs
iret
dec
or
cmp
mov
add
cmp
sub
fbld
push
outsb
repnz
adc
xchg
jmp
push
jne
mov
push
cmp
sbb
lahf
fstpt
mov
cmpsb
mov
popa
leave
insl
andb
mov
adc
jb
jmp
inc
or
aad
outsl
in
jle
int3
dec
xchg
dec
in
outsl
mov
pop
inc
jbe
mov
mov
out
rcll
orl
je
sbb
pop
jg
into
inc
jns
pop
xchg
sbb
mov
mov
mov
adc
pop
orb
outsl
int3
push
cmc
mov
hlt
dec
in
sbb
cmp
outsb
push
and
pop
int3
cmp
sub
jl
out
jbe
sbb
pop
push
cmp
sub
rorb
outsb
dec
mov
pop
or
pop
adc
cwtl
test
sub
sbb
push
cmp
jo
mov
nop
gs
and
push
fsubs
xchg
push
add
std
sbb
outsl
and
imul
imul
jbe
sbb
fadds
dec
and
repz
and
outsb
stc
xor
outsl
sbb
imulb
aam
pusha
ss
movsl
mov
mov
fimuls
outsb
adc
outsb
cmp
pop
mov
xchg
loope
aam
ret
cmp
ljmp
scas
add
imul
adc
in
adc
push
out
mov
mov
fiadds
cwtl
mov
aaa
mov
xchg
aaa
jne
inc
cld
mov
dec
and
out
or
push
or
scas
or
sbb
jno
xchg
sub
and
mov
jecxz
adc
aam
xor
or
push
or
gs
loop
fwait
sbb
dec
aam
pop
sub
mov
push
push
dec
outsl
jp
mov
push
jmp
cmpsb
cmp
xchg
push
ret
das
push
dec
enter
lret
adc
insb
jecxz
xor
xor
mov
mov
repnz
mov
rclb
adc
ja
outsb
insb
std
or
call
sahf
xor
jmp
lahf
ljmp
mov
lcall
mov
push
mov
hlt
push
popa
pop
lds
and
or
dec
jno
sbb
xchg
cmp
jp
jmp
insb
and
mov
lock
int
aad
out
iret
das
in
add
cltd
xchg
push
scas
mov
fcompl
push
xor
fidivrs
pop
push
in
xchg
ja
and
adc
pusha
cmp
mov
dec
dec
sahf
nop
loopne
rolb
outsb
pop
sbb
in
popa
and
mov
sbb
out
dec
dec
cmp
jo
push
lcall
outsl
movsb
clc
jg
lret
xchg
jmp
xor
mov
out
pop
out
mov
cwtl
dec
rcl
or
and
mov
repz
inc
sub
in
sub
sub
es
mov
inc
sub
jne
idivl
subb
outsl
jp
inc
and
mov
add
lea
pop
sub
or
cmp
call
push
xchg
int
cltd
aam
outsw
and
push
mov
and
das
lods
cltd
inc
fisubrs
adc
mov
shrl
dec
mov
mov
in
jmp
lods
mov
add
sbb
jne
add
lods
jmp
fcmovnu
popf
mov
jl
fs
push
ja
in
dec
loopne
imul
bound
sub
xor
in
mov
and
dec
xor
jmp
mov
data16
out
or
mov
mov
pop
xchg
sbb
jmp
out
hlt
pop
arpl
pop
lcall
dec
inc
pop
icebp
into
mov
iret
std
mov
xchg
push
push
and
sub
cwtl
mov
jns
mov
sub
loop
in
leave
sbb
mov
into
jnp
addb
cltd
jl
enter
jb
scas
es
rorb
mov
dec
lods
filds
adc
inc
fwait
pop
imul
or
mov
into
pop
ljmp
out
pushw
dec
inc
xor
sub
xchg
iret
and
jg
outsl
adc
imul
or
pop
jmp
jo
xor
mov
adc
aaa
push
decb
sbb
int3
cmp
imul
hlt
out
mov
mov
push
test
dec
popf
movsb
pop
test
jmp
jmp
repnz
outsb
daa
or
dec
scas
enter
test
push
psrld
cld
mov
add
xchg
push
xorb
cmc
aad
or
fs
push
add
bound
aaa
out
jg
adc
int3
xchg
testb
clc
mov
cmp
and
add
mov
ret
insl
jg
in
add
inc
mov
mov
rolb
adc
cmpsb
addl
and
dec
push
xchg
shll
lods
mov
daa
imulb
jno
lods
push
dec
mov
sti
pop
lods
outsb
add
loop
fwait
int3
xlat
shll
dec
idivl
fwait
mov
sub
add
sbb
fucomp
add
bound
lods
daa
shrl
xchg
mov
pop
add
icebp
sbb
aad
mov
pop
je
cmp
xchg
mov
mov
jmp
cmp
mov
inc
push
lret
jno
sub
js
test
les
cmp
or
push
jo
outsb
push
xor
sbb
jb
cwtl
sub
inc
bound
insl
sbb
outsb
inc
inc
push
aad
gs
push
xchg
mov
addb
push
inc
shlb
dec
jnp
xor
shlb
insl
ret
test
adc
add
stc
popa
mov
jne
fs
sub
dec
push
xchg
mov
pop
into
adcb
push
arpl
xor
outsb
push
sbb
fwait
xor
scas
jmp
addr16
or
pusha
adc
pop
mov
jo
lea
in
push
jl
push
sar
outsb
mov
decb
push
stc
or
jns
push
pop
mov
shrb
hlt
mov
sbb
dec
push
out
cmp
hlt
shlb
cwtl
neg
mov
sbb
push
shl
and
add
xchg
sbb
jno
push
int3
into
sub
fstl
mov
adc
daa
loopne
xchg
dec
std
lds
sbb
cmpsb
sbb
xchg
cmp
dec
shl
rcrb
dec
and
inc
or
outsl
loope
jno
arpl
xor
mov
mov
jb
add
addr16
lods
push
sub
dec
arpl
pop
cwtl
pop
fsub
pop
outsb
in
or
push
fidivrl
add
in
loop
mov
xchg
lahf
fs
sub
or
push
sti
cmp
mov
and
push
mov
jmp
pop
movsl
pop
js
cmp
insl
out
fiaddl
lret
fmul
sub
test
inc
arpl
xchg
push
or
xchg
cmpsb
sub
push
jnp
push
lds
pop
in
dec
pop
mov
les
imul
push
lods
pusha
jl
jmp
mov
fimull
fwait
cmp
imul
xor
dec
dec
and
push
sbb
fcompl
jo
inc
call
mov
test
jno
fdivs
xchg
rorl
jp
outsb
mov
lea
cmp
icebp
iret
cs
pop
jmp
mov
loop
insl
adc
xor
pop
jne
mov
dec
pop
stos
std
inc
lret
sub
xor
cs
loop
xchg
mov
mov
mov
push
sbb
dec
push
sarb
jne
and
adc
shrb
ret
or
jg
call
or
lods
out
pop
xchg
gs
mov
mov
adc
add
mov
xor
sahf
insb
int3
cmp
or
into
enter
mov
arpl
frstor
dec
std
jle
mov
je
mov
xchg
aaa
int3
xchg
dec
ret
test
mov
lods
rcll
int3
jmp
popa
test
bnd
out
jmpw
call
mov
mov
mov
push
notl
in
out
test
aam
pushf
mov
in
in
ss
test
aaa
lods
rcl
sahf
pop
cmp
outsl
outsb
scas
test
rorl
or
outsb
rorl
pushf
in
adc
jbe
mov
mov
mov
or
mov
jo
jg
lea
add
xorb
add
add
das
movl
jns
jge
repz
push
outsb
imul
and
xchg
les
push
mov
mov
outsl
decb
mov
push
and
jb
fsubrl
or
adc
jmp
pop
repz
fistpll
mov
rcrl
dec
fisubl
xor
xchg
outsb
fwait
divb
outsb
movsb
dec
xor
in
sbb
sbb
mov
inc
dec
lahf
cmp
lret
xchg
lods
jmp
mov
aas
in
xor
ss
push
mov
aas
dec
mov
inc
lock
decb
incl
xchg
sub
push
xchg
add
popl
jbe
clc
xchg
shrl
jmp
pop
mov
jle
dec
hlt
mov
insl
xor
stos
mov
or
dec
push
cmpsb
dec
pop
sbb
or
pop
lods
jmp
mov
adc
and
outsb
adc
aad
iret
jl
add
jno
sub
subb
mov
mov
in
add
or
jg
fidivrs
pop
dec
ja
pop
inc
push
mov
lret
mov
outsb
pop
nop
sbb
jge
mov
loopne
xor
loope
jno
ja
sbb
dec
inc
jmp
xchg
xor
fistl
outsb
push
xor
jp
pop
fs
mov
add
lea
push
imul
rcrl
mov
cmp
jp
out
sub
jmp
dec
popa
push
or
xor
sub
test
inc
inc
bound
mov
cmc
sbbb
cmp
xorl
xchg
push
cmp
adc
ror
push
inc
mov
and
push
xorl
out
and
mov
sti
mov
or
aad
mov
push
push
jl
andps
inc
push
cmpsb
dec
sub
lock
or
sahf
mov
add
mov
xchg
ret
outsb
sub
pop
push
in
xchg
mov
ret
icebp
or
fsts
xor
dec
in
ret
insb
icebp
insb
inc
stos
mov
dec
and
loop
mov
push
pushf
out
das
out
sub
sarl
aam
inc
int
test
or
nop
mov
xchg
lock
xlat
outsb
sbb
je
adc
fldlg2
aam
sbb
mov
push
pushf
xchg
lods
je
aaa
mov
xorb
mov
call
sbb
mov
xchg
outsb
xchg
fwait
xor
push
mov
ret
ljmp
popa
push
movsb
movsb
mov
and
cmp
lock
sub
sub
inc
xor
mov
notl
cmp
xchg
in
jmp
dec
in
mov
addr16
and
imulb
sbb
out
movsl
xor
inc
cld
inc
add
push
mov
mov
cld
add
sbb
jl
dec
jo
call
lcall
sarb
jle
sub
jb
cmp
rol
orb
enter
or
pushf
pop
dec
push
dec
cmp
clc
dec
dec
jmp
xlat
in
outsb
lahf
cld
sub
loopne
pop
enter
outsb
mov
and
add
aaa
pushf
jmp
inc
cli
sbb
or
imul
cmp
ja
jg
repz
push
jo
pop
lock
sar
jmp
cmp
ds
jae
mov
jmp
shll
fildl
in
and
stos
in
stos
sbb
mov
stos
fmulp
add
and
call
mov
lds
xchg
adc
outsl
sahf
xchg
push
pop
sti
dec
rcl
mov
shll
movsb
aad
xchg
out
add
jp
movsb
out
push
cmp
mov
inc
dec
pop
into
dec
ljmp
hlt
outsb
inc
movsb
es
iret
sub
ss
pop
pop
jmp
arpl
xchg
lret
xchg
dec
sbb
cli
lods
sub
inc
ret
std
loope
sbb
mov
aaa
icebp
call
repz
je
add
sbb
test
roll
aas
sbb
push
adc
push
rcr
stc
dec
lods
xchg
mov
mov
divl
and
dec
ficoms
add
cmp
es
out
ret
jns
fcoms
pop
xchg
pop
push
int
jmp
aaa
stos
adc
jmp
mov
dec
sbb
fwait
jmp
aas
test
lret
cmp
rorb
pop
stc
movb
inc
xchg
jmp
dec
pop
and
iret
leave
mov
shl
xor
es
pop
adc
bound
or
loopne
and
jp
pop
lods
int
ljmp
das
outsl
xchg
inc
sbb
mov
stos
repz
add
dec
add
call
rorl
lahf
sbb
cmc
leave
jmp
test
popa
arpl
xor
push
push
mov
divl
push
popf
lcall
xor
andl
bswap
mov
std
aad
lret
push
cli
mov
ljmp
mov
jno
fstps
pop
icebp
nop
or
mov
or
fsubp
dec
mov
dec
rcrb
sbb
inc
in
lcall
xor
push
xor
and
inc
xor
jl
cmp
pop
fldt
or
mov
into
stos
mov
mov
mov
loop
and
mov
add
cld
fadds
std
je
inc
push
mov
add
pop
cmpb
pop
int3
mov
pop
push
mov
xlat
adc
outsb
mov
sbb
jmp
jnp
mov
roll
outsl
mov
or
dec
cwtl
inc
fmul
xor
sbb
imul
es
test
std
into
xor
cmp
pusha
add
jno
mov
pop
fnstenv
jg
dec
stos
leave
inc
jno
fs
dec
xor
arpl
xchg
jne
sub
mov
ljmp
test
mov
in
fisttpll
pop
mov
jecxz
imul
test
push
sbb
adc
popa
jg
test
cmp
dec
and
pop
cwtl
xchg
jnp
imul
stos
inc
hlt
punpcklwd
test
or
int
lret
cbtw
into
push
fsub
leave
mov
mov
ret
xor
jnp
jae
daa
data16
das
bound
dec
adc
jl
jge
mov
cmp
ja
outsb
jns
shrl
xor
adc
insb
push
mov
roll
sbb
mov
std
rcrl
xchg
dec
xlat
mov
out
outsl
dec
cmp
int
lea
into
jge
jmp
outsb
test
in
mov
popf
mov
mov
mov
imul
cmp
mov
ficoms
xchg
mov
pop
test
push
and
sbb
mov
outsb
insb
and
pushf
into
pusha
pop
in
mov
lock
mov
mov
dec
imul
das
pop
xchg
xor
outsl
cmp
mov
mov
out
cmc
and
rcr
mov
pop
int3
lret
movsb
fildl
lret
fbstp
decl
mov
adc
cmp
leave
jns
jl
andl
inc
mov
push
cmpsb
push
loopne
outsl
popf
adc
sub
mov
mov
aaa
dec
popa
loop
fisttpl
or
mov
mov
ret
xor
jo
sub
push
movsb
sub
testl
repz
movsl
inc
mov
pop
push
cmp
mov
dec
xchg
or
into
aas
outsl
addr16
das
movsl
mov
push
jecxz
decl
mov
aas
cmpl
insb
push
outsl
ss
jmp
jle
add
lret
call
scas
inc
sbb
sub
mov
xchg
gs
jmp
jmp
insb
movsb
mov
cmp
pop
inc
push
mov
ljmp
jb
push
jbe
mov
mov
loope
push
inc
add
fdivs
jecxz
xor
add
sti
outsb
in
dec
mov
jge
shl
jecxz
add
ss
out
leave
ja
jl
mov
push
fimull
stc
push
push
or
or
mov
sub
fdivrs
add
mov
aaa
orl
jecxz
jg
mov
cmp
dec
xchg
std
mov
mov
sbb
subb
xchg
jle
outsb
fiaddl
add
pop
mov
ret
loopne
adc
call
dec
fsubrl
dec
inc
cli
gs
scas
in
pop
or
or
insl
loope
aas
shl
fsubrp
sub
stc
jb
pop
inc
rorl
ret
cs
test
push
les
ljmp
rcll
and
test
pop
test
ret
sarl
xchg
test
cmc
xchg
pusha
pop
mov
pop
and
fcoms
xchg
jo
je
push
addr16
cwtl
aam
mov
inc
mov
mov
fnstcw
icebp
xchg
popf
outsb
pop
cld
out
jmp
mov
ret
mov
jo
fdivl
loop
loope
xchg
aas
xchg
lret
jg
mov
pushf
aaa
hlt
ss
and
rcrb
add
push
jmp
push
scas
pop
xor
xor
cmpsl
and
leave
arpl
test
sub
std
pop
stc
pop
bound
filds
xchg
pop
in
push
call
mov
inc
imull
xchg
xchg
repz
mov
sbb
xor
insb
test
cli
or
cmp
lods
add
cs
adc
xchg
leave
rorl
lea
test
xchg
mov
xor
test
bound
xor
sub
inc
push
dec
mov
sahf
push
dec
dec
push
ficoml
fcoms
mov
mov
imul
jecxz
inc
in
mov
sbb
scas
xchg
cmp
xor
jmp
psubusw
movsb
hlt
jo
push
hlt
aas
nop
repnz
dec
inc
mov
dec
fmull
outsb
dec
dec
mov
pop
orl
add
into
pop
icebp
xchg
jno
inc
cmp
jns
sbb
psllq
imul
rcrl
cmc
xor
and
fwait
dec
mov
fwait
inc
ja
jg
xchg
int
ret
sahf
in
orl
or
inc
sbb
sti
ficoml
sub
and
cmp
outsl
and
push
outsb
push
cmp
mov
push
sbb
pop
scas
jnp
mov
and
sbb
test
int
inc
mov
pop
out
mov
adc
inc
dec
and
and
out
cmp
std
xor
or
push
inc
lea
ss
push
push
ljmp
pop
mov
add
fdivs
mov
push
push
and
pop
push
ret
xchg
loopne
push
fwait
pop
cld
cltd
cs
dec
inc
int
lret
jae
or
popa
es
xchg
rcl
pushf
add
mov
fldcw
fdiv
lods
push
adc
outsb
pop
mov
push
cmpsb
add
clc
es
push
dec
adc
in
mov
or
aad
and
aad
sahf
outsb
inc
repnz
cmp
sub
mov
aad
cli
pusha
shll
cs
mov
xor
movsl
cmp
dec
inc
pushf
enter
lret
and
push
insb
stos
mov
dec
sub
scas
xchg
aaa
outsb
cltd
dec
xchg
and
pop
inc
leave
scas
in
inc
inc
mov
mov
or
adc
mov
push
jmp
jg
movsl
popa
test
out
lcall
hlt
loop
mov
outsb
jb
jae
daa
jp
jge
out
loopne
call
push
mov
jmp
int
int3
imul
hlt
add
aad
push
fwait
inc
addb
push
and
adc
imul
or
iret
fdivrl
outsl
add
imul
jmp
ss
pusha
pop
cmp
dec
sub
mov
mov
fs
cs
sbb
dec
outsb
stos
ret
xchg
std
adc
add
ficompl
test
out
xchg
mov
rcll
test
test
cmpsb
js
sub
mov
or
xor
mov
fistpl
mov
push
leave
sbb
inc
push
sahf
sbb
sub
aam
sahf
les
loop
movsb
inc
mov
fldl
inc
inc
inc
cmp
jmp
and
xchg
pop
in
jg
mov
jns
js
sbb
inc
jle
push
addr16
mov
mov
mov
mov
insl
shrb
pushf
cmp
outsb
js
idiv
fdivp
dec
jo
xchg
sahf
fldz
movsl
add
xchg
lret
shrb
dec
into
stos
outsb
les
add
xchg
pusha
movsl
and
in
xchg
inc
addr16
add
mov
fsubl
aad
pushf
ret
outsl
mov
sahf
xchg
mov
aam
in
outsb
push
enter
jle
xchg
or
mov
ljmp
jae
aas
mov
or
imul
push
cmp
mov
push
out
popa
cltd
mov
mov
mov
sub
jmp
scas
shl
push
imul
mov
jb
leave
dec
bound
ljmp
fmul
subb
adc
sarl
mov
cmp
sub
insl
shrl
test
in
fcmovnb
sbb
or
mov
push
stc
cli
cmpb
sub
and
in
ror
imulb
jno
sti
retw
mov
xlat
pop
sub
adc
outsb
add
add
jmp
movsb
mov
pusha
inc
lds
mov
or
cld
jmp
mov
fbstp
sbb
fwait
mov
mov
adc
cmp
push
pop
int3
jbe
shll
test
or
mov
adc
ret
jmp
pop
jae
jmp
das
stc
pop
push
or
mov
jb
add
cmp
inc
push
lret
xor
pop
cli
adc
mov
pop
cmp
inc
arpl
sbb
jle
leave
mov
cmpsb
push
dec
sub
cwtl
xchg
push
xchg
inc
outsl
test
ret
jmp
scas
adc
je
test
sbb
out
jge
jno
dec
pop
and
mov
outsl
inc
mov
push
adc
sbb
or
mov
or
add
sub
scas
insl
cmc
mov
lods
push
xchg
dec
jecxz
nop
insb
sbb
rol
outsb
and
mov
adc
cs
jnp
jno
pop
leave
into
mov
lret
jecxz
push
adc
cmp
lods
pop
frstor
imul
sbb
in
inc
ds
push
outsb
movsb
sbb
pop
mov
sub
flds
mov
adcb
push
loope
xor
push
jns
mov
stos
ja
dec
mov
cs
or
dec
and
or
push
or
test
imul
outsb
pop
mov
repz
jmp
pop
mov
sub
inc
cmp
outsb
pop
and
stc
push
inc
lret
mov
sub
and
pop
inc
sub
subl
or
jge
and
pop
dec
out
or
les
pop
mov
fbld
dec
or
in
mov
push
pushf
cli
fldt
mov
sbb
sub
pop
aam
adc
outsb
push
adc
mov
jmp
xchg
outsl
jo
mov
dec
xchg
int3
int
inc
ljmp
inc
inc
dec
push
nop
stos
insb
mov
inc
pop
inc
lds
xchg
std
inc
or
insl
dec
pop
xchg
xchg
or
mov
mov
scas
je
fsubrp
push
inc
movsl
js
daa
cld
xor
dec
and
and
push
xor
xchg
cmp
in
mov
js
sub
aam
pusha
xor
in
cmpsb
imulb
xchg
mov
pop
fwait
inc
mov
subb
fs
decb
jo
or
in
pushf
mov
mov
jg
push
outsl
push
ret
in
jbe
orl
test
clc
dec
jno
lcall
mov
sbb
pop
or
icebp
xor
loopne
or
movl
sbb
cmp
or
lods
shrb
push
adc
imul
mov
sub
cld
sub
adc
loopne
push
outsb
mov
push
jbe
jmp
sub
ds
pop
sub
sbb
inc
in
jmp
pop
and
lea
pop
jbe
sub
or
mov
test
mov
mov
jle
and
mov
ret
pop
sbb
incb
imul
mov
imul
xchg
push
loopne
or
loope
dec
jmp
push
jns
outsb
sub
in
leave
js
inc
in
movsl
negl
jae
adc
mov
dec
push
dec
dec
mov
pop
mov
rclb
sbb
sbb
cli
jp
repnz
xchg
jp
push
add
fsub
fisttpll
and
stos
push
adc
ror
gs
loopne
inc
inc
sub
xchg
inc
push
jle
adc
adc
dec
andl
add
push
imull
outsl
in
jecxz
xor
fildl
sbb
incl
adc
dec
jae
lock
xchg
lcall
add
addr16
addl
leave
pop
emms
mov
xchg
in
repz
add
xchg
push
mov
in
mov
adc
add
pusha
jo
cs
mov
lea
test
int3
adc
out
stc
cwtl
xor
jecxz
pop
mov
mov
jbe
cmp
or
cmc
jno
and
pop
std
movsb
push
sbb
sbb
cmpsb
push
mov
inc
jb
xchg
icebp
mov
hlt
or
pusha
mov
mov
bound
fdivrs
int3
frstor
cmc
push
rcrb
pop
pop
out
outsb
xchg
adc
push
xor
out
pop
ret
mov
add
pop
xchg
inc
je
sub
push
mov
mov
dec
js
test
shl
jne
call
pop
push
addr16
enter
mov
outsb
jnp
aad
pop
jno
fsubrp
ficompl
sub
mov
mov
lock
xor
sbb
pop
js
push
loopne
lret
jne
push
js
sbb
in
add
mov
xlat
lcall
mov
arpl
ds
ljmp
push
mov
and
pop
outsl
mov
movsb
or
jmp
xor
inc
lods
xchg
mov
bound
and
dec
std
in
rcrb
stc
push
outsl
call
popa
xchg
loopne
scas
add
add
jmp
testb
mov
test
push
push
dec
jb
xchg
std
xor
cmp
and
fimuls
in
xor
sti
inc
adc
push
dec
mov
push
stos
fsubr
jge
dec
mov
fists
mov
imul
mov
mov
insl
pusha
mov
push
outsb
je
lcall
mov
mov
mov
mov
mov
data16
dec
push
out
xor
insb
sbb
adc
mov
pop
mov
aaa
sub
dec
roll
add
mov
push
leave
mov
daa
test
adc
pop
fs
popf
cmp
stos
xchg
dec
pop
shl
js
outsl
fdivrs
out
outsb
inc
xchg
or
pop
push
movsl
fstp
shrl
loope
scas
pop
and
aam
test
into
pusha
into
adc
jmp
cli
hlt
out
ret
sub
mov
test
popf
cmp
es
push
scas
mov
mov
sub
cltd
hlt
outsb
jnp
mov
add
ror
sti
mov
sbb
loop
test
std
movsl
fisttps
test
cmpsb
fucomip
outsb
fstpt
mov
leave
xor
jle
ljmp
outsl
ljmp
test
dec
int
jmp
and
xlat
add
xor
push
popa
cs
cmp
outsb
push
pop
push
xchg
sub
in
adc
inc
pop
mov
ret
jbe
data16
push
inc
repnz
adc
lods
jnp
push
jg
mov
into
cmp
jbe
sub
cli
hlt
mov
in
repz
inc
mov
dec
negl
sub
push
outsb
mov
or
dec
mov
cmpsb
lea
mov
scas
rcr
mov
les
dec
xor
outsb
mov
call
push
jl
in
cltd
add
jmp
xchg
aas
popa
dec
mov
outsb
daa
and
push
ret
jmp
insb
clc
push
cmp
pop
inc
mov
dec
pop
out
xchg
mov
fmul
and
cmp
call
xor
push
sbb
mov
mov
or
mov
insb
fadds
call
scas
cwtl
mov
outsl
pushf
shrl
rorl
push
push
fwait
pop
popf
ja
cmc
mov
adc
shrl
and
and
arpl
jno
mov
xor
nop
add
dec
pop
data16
and
push
outsb
lret
xlat
pop
add
and
fucomip
jae
xchg
js
lahf
sub
pop
pop
dec
dec
and
xor
aam
cmpsb
cmc
fnstsw
sbb
out
ret
xchg
add
pop
lea
dec
lcall
xor
cmp
jl
push
xchg
gs
sub
loop
enter
ds
divl
adc
push
or
movsb
xor
mov
inc
pop
inc
rep
push
test
int
inc
scas
mov
jbe
mov
lods
or
int
add
outsl
mov
mov
cmc
fisubs
std
into
jb
ret
loopne
aad
pop
dec
jge
adc
dec
and
dec
cld
xor
loop
mov
outsb
pop
jno
push
inc
mov
add
adc
outsb
xchg
cmpsb
bound
cmp
call
add
es
push
add
mov
dec
sub
pop
cmp
inc
out
push
sahf
inc
inc
sub
pushf
inc
mov
lea
mov
cmp
sbb
mov
imul
leave
dec
jecxz
push
ror
mov
or
pop
jnp
or
popf
push
dec
cli
in
mov
sbb
cmp
jp
sub
mov
lea
in
jae
sbb
subl
fsts
adc
add
out
add
jle
sahf
pop
loop
cmp
dec
pop
sbb
inc
sbb
shll
hlt
dec
push
in
cmp
popf
pop
sub
out
and
nop
cld
push
pop
lahf
mov
imul
arpl
fs
enter
fisttpll
xor
dec
fld
lods
test
outsb
adc
xchg
lds
test
aaa
ljmp
movzbl
roll
push
xchg
bswap
lahf
addl
mov
daa
push
fstps
add
adc
outsb
int
neg
stos
pop
ret
dec
dec
in
fcomi
mov
cmp
repz
sbb
leave
adc
jbe
add
dec
scas
lcall
ret
dec
jle
repnz
xor
addr16
push
push
loop
sahf
or
stos
inc
push
pop
aaa
mov
push
in
in
mov
idivb
dec
imul
fsubrs
enter
dec
and
mov
outsb
jp
mov
push
inc
out
jmp
idivl
arpl
orl
xor
adc
push
jnp
enter
data16
in
scas
pop
lock
push
jle
hlt
imul
inc
xor
iret
mov
jns
mov
negb
cmp
outsb
loope
aaa
test
fists
push
lods
out
adc
mov
in
sbb
rolb
xchg
sub
dec
addl
cmp
or
les
in
xchg
jmp
xchg
scas
fcmovb
jo
stos
adc
fs
scas
mov
je
rcrb
jle
dec
mov
into
push
subl
in
cltd
add
push
jno
mov
into
inc
dec
mov
in
push
mov
mov
pop
xchg
mov
outsb
adc
ror
shll
gs
inc
jo
cltd
ljmp
arpl
push
insl
cmp
jge
pop
outsl
enter
dec
jo
adc
jbe
imul
mov
fidivrs
stos
cmpsl
or
rcrb
cmp
imul
imul
testb
pusha
out
push
jmp
mov
dec
out
loope
popf
stos
enter
les
pop
lret
dec
pop
jns
and
popa
dec
or
xchg
imul
fisttpll
xchg
mov
mov
add
addr16
and
es
mov
out
sbb
loopne
enter
int
xchg
fisttps
and
xor
leave
outsl
ds
xlat
pop
je
jne
push
cmp
mov
outsb
addl
xchg
pop
xor
stc
movsl
or
lds
xor
sbb
add
add
adc
outsb
repnz
push
in
in
jecxz
dec
bound
cmp
inc
cmp
repnz
pop
xor
fs
cld
loope
nop
jne
daa
outsl
cs
add
push
inc
jnp
enter
in
jg
mov
dec
rorl
mov
inc
loopne
jno
mov
fidivrs
ja
gs
cmpb
test
xor
pusha
mov
or
jle
jp
or
mov
popa
ss
out
sub
and
adcl
add
jb
mov
dec
movsl
mov
ret
jmp
jns
cmp
cmp
mov
aam
adc
call
into
sti
xor
mov
ret
mov
jle
jnp
test
mov
sbb
stos
mov
insb
ja
std
aad
jmp
mov
mov
pop
imul
jo
test
jo
pmaxsw
addr16
lds
jmp
dec
sub
xchg
lods
outsb
pop
mov
sbb
nop
fildll
das
ret
and
repnz
movsl
inc
mov
cwtl
add
cmpsl
gs
cmc
mov
sbb
aam
jmp
leave
sbb
or
jg
or
or
pop
addb
cmp
jmp
cmp
or
inc
in
shrb
inc
call
mov
loopne
testl
inc
outsl
pop
out
and
xchg
xor
orl
inc
outsl
xor
push
inc
cmp
push
test
test
push
adc
movsl
or
push
imul
pushf
aaa
mov
adc
jmp
arpl
adc
arpl
push
fs
outsl
pusha
dec
sub
pop
insb
mov
aaa
or
adc
lock
les
dec
ret
in
movsl
rorb
orl
cs
cltd
sub
jl
icebp
test
outsl
es
xor
sbb
mov
jmp
andl
xor
test
les
outsb
lcall
mov
push
pop
xor
pop
add
aaa
jbe
inc
jb
fisubrs
call
inc
outsb
push
fdivl
push
ss
xor
dec
fldenv
clc
push
adc
push
mov
adc
sbb
mov
inc
ficompl
in
test
mov
lea
stos
js
jge
jp
dec
out
outsb
mov
outsb
jle
sbb
jmp
dec
xchg
out
iret
xor
mov
pop
in
daa
add
outsl
sbb
xor
into
lea
jg
cmp
sbb
xchg
push
mov
and
mov
cmpsb
call
xor
mov
es
mov
nop
sarl
dec
push
lea
icebp
roll
mov
cmp
sbb
test
xchg
mov
jo
scas
pop
push
xor
mov
out
insl
xor
shlb
cmp
push
popa
aam
jmp
and
loop
xchg
insb
push
lds
push
jb
dec
push
ss
cmpsl
in
pop
outsb
stos
sbb
and
std
cmp
jns
test
mov
push
xor
stos
and
sbb
and
and
fstps
mov
adc
dec
pusha
push
fldt
outsl
fisttpl
mov
fstl
gs
mov
and
aaa
push
out
arpl
imul
lea
sbb
xlat
inc
inc
mov
das
inc
dec
pushf
stos
outsb
push
jb
lcall
daa
cli
addl
adc
xchg
dec
insb
popf
mov
mov
test
ror
or
xor
cs
xchg
cmp
outsb
mov
and
fisttpll
or
dec
xor
sub
and
fildl
stos
int3
push
and
inc
jns
adc
outsb
js
test
cld
jbe
dec
mov
enter
mov
pop
fidivs
inc
cmp
xchg
cmpb
mov
int
leave
ficompl
and
inc
xchg
dec
add
dec
or
mov
in
push
gs
iret
aas
dec
int
and
cmpl
add
and
outsb
or
out
and
ficomps
enter
push
subb
sbb
mov
shlb
jmp
mov
sahf
leave
nop
push
insl
jl
repz
add
dec
into
xor
xchg
xor
idivb
insb
popf
shlb
xchg
dec
dec
dec
xchg
mov
mov
outsb
xor
ja
jmp
cmp
pop
sub
xchg
mov
ds
jmp
clc
ds
adc
stos
jmp
mov
dec
mov
pusha
inc
adc
stc
sub
leave
adc
cld
cmpsb
push
add
in
cmp
pushf
jp
cmpsl
jo
jbe
add
mov
cmp
cld
sub
mov
dec
xchg
icebp
pusha
add
jge
ret
pop
dec
test
repz
jmp
int3
js
xchg
lods
ja
mov
mov
mov
jge
pop
movsb
in
test
lahf
jmp
sub
xor
enter
mov
je
xor
jae
or
push
xchg
sbbb
inc
cmc
inc
and
dec
sub
jmp
insl
xor
jnp
movsl
ja
sub
dec
jg
dec
arpl
push
inc
adc
inc
cmpsl
xchg
push
outsb
jnp
jno
pop
in
imul
xor
add
stos
adc
out
xor
sbb
rdtsc
push
sub
push
lahf
lret
imul
dec
addb
push
and
or
mov
inc
jae
dec
dec
push
imul
inc
sub
jmp
pop
aam
call
ret
ja
cmpsl
loope
dec
add
mov
pop
subl
daa
add
dec
pop
movsl
insl
fprem
mov
lods
adc
inc
inc
push
sbb
mov
insb
mov
push
jg
xchg
push
decl
in
add
cli
sub
xor
jge
push
lods
inc
das
neg
ja
xchg
roll
pop
xchg
insl
or
lods
mov
jb
dec
pushf
add
push
pop
pop
push
push
sbb
mov
push
rorl
movsb
dec
adc
incl
jl
jle
pop
xchg
dec
pop
loopne
adc
fsubrl
push
lret
jle
pop
xchg
push
aas
outsb
lcall
push
lret
pusha
and
xchg
cmp
cld
das
cmp
cltd
lret
jbe
inc
inc
mov
scas
cmp
pop
imul
pushf
push
mov
jnp
nop
mov
sarb
ds
icebp
jmp
push
inc
adc
fstp
xchg
mov
push
loopne
bound
or
sti
cmpsl
sbb
hlt
imul
adc
rclb
insb
jmp
mov
mov
mov
xchg
icebp
sub
sbb
test
cmp
in
loop
fs
sub
js
out
js
add
and
push
xor
outsl
mov
cmp
and
or
daa
inc
ja
xlat
test
outsb
pop
imul
jae
cmp
mov
mov
aam
push
sbb
push
dec
inc
loopne
xor
imul
or
mov
adc
stos
cmpsl
sub
mov
jecxz
sbb
sub
outsl
jmp
jae
sbb
inc
xchg
xor
mov
imul
or
lea
sub
loope
cmp
testl
dec
jmp
mov
mov
testl
imul
decb
outsl
shlb
loop
rcl
jge
inc
sahf
fcmovnu
cmp
mov
insb
mov
scas
mov
jns
add
faddp
jmp
mulb
aad
imul
in
leave
inc
sub
push
cmp
mov
lcall
and
inc
dec
shrb
xchg
fimull
push
sub
in
out
shlb
les
xchg
ret
cmp
adc
jg
orb
xchg
push
cmpsb
lock
xchg
cmp
push
sti
insb
adc
call
push
xchg
push
ja
mov
jne
cmp
pop
mov
fisubrl
outsl
mov
push
scas
add
rorb
lock
adc
cmp
sbb
sub
fiadds
inc
xchg
dec
into
call
adc
outsl
push
insl
or
in
sub
movsb
and
mov
cli
inc
dec
push
test
or
pushf
sub
sbb
outsl
ds
and
inc
in
in
jp
sbb
outsl
and
loopne
fwait
icebp
repnz
inc
scas
outsb
mov
outsb
pop
mov
inc
es
shr
and
jno
sti
or
mov
xlat
insl
rcrb
mov
dec
cltd
cmpsb
shlb
testl
jb
aaa
inc
or
dec
repnz
push
das
insb
dec
std
adc
dec
xor
push
pop
cltd
pop
loopne
pop
notb
insb
sub
js
dec
mov
jb
adc
adc
lcall
lods
pushl
xor
repnz
lcall
int
iret
mov
iret
push
mov
insl
test
imul
mov
stc
or
outsb
lods
inc
sub
lret
dec
mov
ljmp
sti
out
mov
pop
popf
test
mov
mov
mov
add
or
push
jmp
push
jp
pop
mov
jmp
fldpi
cmp
cwtl
xchg
push
push
push
mov
mov
sbb
lds
mov
sub
xlat
sub
insb
outsb
scas
push
lea
ja
jecxz
imul
ficompl
or
movsb
outsb
cld
fsub
push
jbe
jno
mov
pop
loop
test
sbb
divl
push
aam
pop
out
mov
aam
test
mov
movsl
ret
add
mov
insl
in
pop
fdivl
gs
cmpsl
rcrl
mov
sub
insb
adc
xorl
jbe
dec
lret
sub
mov
idivb
sub
out
pop
stos
hlt
inc
jl
int3
icebp
mov
adc
cwtl
mov
pushf
mov
inc
adc
into
cmp
mov
lods
jmp
or
pop
outsb
and
push
add
dec
lock
add
loop
add
out
inc
ljmp
and
mov
push
xor
inc
dec
pop
in
mov
divb
imulb
push
mov
stos
iret
jne
popl
adc
into
mov
lret
xchg
dec
icebp
and
jmp
mov
gs
xchg
das
popa
and
iret
cmpsl
cmp
lcall
sbb
dec
movsb
mov
push
loope
dec
addr16
stc
adc
xor
xor
aam
or
movsl
cmp
test
jg
fsubrs
fwait
push
lcall
xlat
cmp
int
outsl
jo
mov
or
mov
mov
cmp
aad
xor
pushf
test
pop
jl
insb
xchg
sub
fcmovnu
mov
subl
lods
xor
int3
aas
push
shrl
sub
mov
bound
pushf
testb
mov
mov
xchg
jge
push
movsl
cli
inc
sarb
ljmp
xlat
dec
xchg
and
dec
aad
dec
mov
sbb
push
popa
mov
fsts
je
dec
jmp
or
dec
add
jge
sbb
inc
ss
loopne
dec
iret
push
out
pop
mov
inc
mov
cld
inc
jno
rorb
dec
cmpsl
dec
test
mov
ret
dec
mov
adc
adc
sbb
outsb
adc
pushf
dec
sbbl
loopne
ja
imul
cmp
mov
sti
loope
dec
xchg
dec
repz
mov
mov
iret
pop
int
inc
scas
mov
inc
inc
add
mov
in
push
push
pop
sub
cmpl
testb
or
ret
pop
pop
dec
sub
mov
outsb
dec
inc
and
outsb
or
or
mov
jo
ret
mov
push
sub
jmp
push
jp
jg
xchg
fldt
xchg
adc
icebp
sar
mov
cmpsl
jecxz
fmul
mov
mov
jbe
test
add
inc
xor
jae
ds
dec
test
mov
outsb
sbb
add
shr
adc
je
jb
sbb
insl
mov
jmp
cwtl
inc
xchg
loop
shr
pop
lods
test
ja
and
ja
fs
stos
in
imul
into
test
mov
or
inc
iret
mov
daa
xchg
jbe
adc
mov
dec
shr
and
out
jae
movq
jle
sub
cmp
add
mov
dec
sbb
ret
dec
jl
cld
push
pop
fcmovnbe
xchg
outsb
dec
sub
dec
ja
mov
jmp
test
xchg
mov
ret
cmpsb
in
mov
sbb
fsub
test
sub
pop
daa
rorb
lcall
push
jmp
in
or
jbe
aam
ret
sarb
inc
push
xchg
mov
mov
cmp
clc
xchg
push
dec
and
outsl
cmp
test
adc
jbe
inc
dec
cmp
outsb
dec
or
in
out
lahf
cmp
lea
imul
popa
pop
pop
adc
and
jno
movsl
pop
push
xor
and
mov
gs
gs
xor
sbb
imul
jg
or
sub
ss
out
mov
xchg
pop
add
sbb
mov
lahf
sub
add
xor
jmp
daa
and
cmpsb
dec
pop
xchg
jg
idivb
and
add
clc
dec
mov
push
mov
mov
pop
outsb
pop
sbb
mov
cmp
mov
movsl
idivl
jno
dec
mov
add
cwtl
inc
mov
fdivrl
mov
push
nop
outsb
imul
pop
outsl
ss
arpl
and
mov
aad
les
and
or
std
movb
dec
ss
mov
int
sbb
dec
call
inc
xor
outsb
cmpsl
inc
shl
lret
scas
push
scas
ficomps
cltd
inc
sub
les
aas
cs
cmc
fs
dec
xchg
cmc
int
ja
jo
mov
mov
arpl
dec
dec
in
jl
shl
sub
jb
sahf
sub
fisubs
dec
or
outsb
and
push
mov
rcrl
push
gs
push
push
mov
adc
jmp
push
pop
xchg
jge
or
rorb
inc
cli
mov
insl
push
cmp
mov
dec
rol
adc
mov
dec
int3
out
arpl
daa
out
xchg
or
aas
fld
and
sbb
mov
test
ret
mov
out
pop
xor
xchg
mov
fldenv
scas
add
and
mov
outsl
xchg
ret
mov
cwtl
push
loope
push
jmp
pop
je
jmp
lds
movd
sbb
call
stos
mov
inc
ja
lcall
mov
insb
subl
xor
ficoml
hlt
outsl
insl
std
jle
sbb
fiaddl
xchg
out
cli
jns
push
xlat
jle
fisubrl
into
stos
xchg
fiaddl
jge
fisubrl
cmp
and
leave
xchg
push
icebp
call
ljmp
adcb
mov
xor
dec
sbb
enter
aas
outsl
dec
or
ja
pop
add
les
cmp
adc
jno
adc
cmp
cmpsl
jmp
sub
adc
xor
mov
jecxz
push
mov
sbb
cmp
mov
sub
fwait
jle
into
or
outsb
paddq
add
scas
imulb
xor
int
fistl
outsb
adc
aam
push
jbe
ja
or
hlt
adc
in
shll
add
lret
test
sahf
incl
subl
jp
cli
jmp
fwait
sub
mov
lret
dec
sbb
jecxz
fcmovu
sarl
leave
insb
mov
inc
pop
data16
clc
stos
mov
xor
sub
ds
mov
add
int3
outsb
sbb
cltd
xor
cmp
mov
mov
mov
ja
scas
jb
les
cmp
xlat
imul
outsl
mov
fxch
adc
mov
lds
xchg
loop
xlat
dec
sbb
xchg
dec
fisubrl
pop
xchg
nop
adc
mov
xchg
gs
aam
sbb
jo
xchg
push
imul
jg
or
inc
or
fisubrl
adc
punpckhdq
scas
out
mov
outsb
dec
push
loope
loopne
jmp
mov
jo
jl
dec
mov
imul
inc
or
cmpsl
dec
mov
mov
lods
jmp
mov
adc
fildll
sbb
loopne
sub
push
lods
push
mov
push
push
arpl
ss
cmpsl
fsubl
test
jg
cld
repz
jae
cmp
repnz
gs
enter
test
mov
outsb
test
xlat
lods
push
in
pop
pop
mov
movsl
movsl
pop
mov
faddl
sbb
cwtl
cmc
xchg
push
jmp
aaa
enter
cmc
sub
add
mov
mov
adc
ficomps
mov
shrl
ds
jno
adc
add
mov
push
iret
jo
enter
jmp
mov
fisttps
jbe
data16
dec
adc
mov
inc
xchg
lods
das
push
cmc
insb
jle
repz
pop
rcl
or
stos
and
outsb
lods
incl
or
ret
jmp
inc
xchg
movsb
jnp
mov
mov
push
xor
mov
inc
add
scas
mov
dec
cmp
movsl
inc
outsl
fwait
inc
movsb
out
adc
gs
in
mov
outsb
push
ds
sub
dec
cwtl
test
ret
and
push
push
ja
outsl
adc
in
push
sbb
jb
sti
xor
mov
std
adc
dec
dec
lods
int
lock
or
sub
cmp
stos
xchg
out
repz
aaa
xchg
jbe
inc
sub
mov
dec
push
mov
mov
orl
dec
fbstp
and
lea
mov
cmp
in
mov
in
inc
jae
mov
das
andb
loopne
xor
hlt
jle
ss
xchg
dec
xchg
xchg
pop
movsb
orl
xorb
sub
mov
in
push
out
sahf
dec
std
fcomi
loopne
mov
lds
xchg
jmp
and
sub
js
fmull
addr16
or
adc
leave
les
sub
lds
aam
xchg
cli
ljmp
mov
rep
jb
insl
push
rorb
jmp
pop
jns
mov
mov
call
ret
mov
xchg
loopne
mov
dec
pop
pusha
pop
aad
mov
dec
adc
add
sbb
and
sbb
divb
mov
shr
and
cmp
loopnew
sub
out
push
jbe
sub
jo
or
orl
ficoml
in
push
xchg
arpl
jo
xor
jle
add
popf
fimull
push
push
scas
sbbb
add
dec
xchg
cs
jg
pop
out
outsb
dec
or
dec
dec
mov
sbb
pop
pop
sti
outsb
lcall
sbb
adc
sbb
or
push
clc
subl
popa
jle
test
mov
cwtl
dec
xchg
xchg
fisubrs
and
scas
shlb
fmulp
pop
into
inc
fisttpll
in
je
ljmp
and
jp
and
js
fimuls
pop
sti
in
lods
jp
sub
dec
fisubs
cltd
push
pushf
fildl
inc
inc
pop
jbe
scas
psraw
sti
push
dec
gs
cs
iret
mov
pextrw
inc
nop
mov
mov
je
leave
adcl
mov
dec
movsb
inc
jo
inc
fdivl
rorl
stos
mov
cmp
lds
mov
mov
add
jmp
push
shrl
das
cmp
cmp
lcall
mov
cmp
int3
leave
enter
test
fists
iret
mov
out
xchg
ja
or
fstpl
mov
push
cmc
push
xchg
push
dec
sarb
outsl
out
ss
push
pushf
sub
sub
jne
jmp
xlat
jnp
mov
in
xor
mov
inc
mov
mov
pop
pop
mov
lret
hlt
mov
cmp
xchg
dec
rolb
stos
and
mov
gs
sahf
adc
test
aam
mov
mov
push
cld
scas
lds
dec
mov
inc
add
cli
cmc
rcrb
aaa
inc
dec
mov
xlat
mov
pusha
cwtl
or
mov
jge
mov
int3
and
sub
sub
mov
std
in
jg
ficoms
leave
mov
jmp
cwtl
shrb
fidivs
popa
in
inc
addr16
and
push
scas
dec
cltd
jl
xchg
sub
lea
out
pop
lahf
or
inc
call
mov
repz
mov
imul
adc
mov
dec
loopne
adc
outsb
pop
pop
sub
pop
cmc
mov
fcmove
dec
pop
in
adc
decb
xchg
mov
cmpsl
scas
sbb
stos
shrb
mov
adc
pop
jp
or
or
dec
fs
push
pop
enter
mov
pop
jle
sub
mov
fs
stc
inc
xchg
pop
outsb
cmp
xchg
nop
ljmp
out
mov
mov
aad
in
fidivs
ja
inc
inc
push
imul
push
rolb
ss
add
jnp
repz
inc
push
dec
dec
jle
mov
clc
pop
int
dec
lcall
das
outsl
outsb
pop
jb
push
scas
rcr
ljmp
jmp
mull
xor
mov
in
mov
adc
sub
mov
push
sahf
xchg
dec
insl
shlb
subb
cwtl
jecxz
or
adc
sbb
fistps
xchg
push
add
nop
jge
mov
in
ret
mov
cmpsb
mov
xor
mov
and
lcall
or
jb
mov
pop
push
int
test
jg
roll
lods
jle
je
dec
in
sub
mov
xchg
pop
inc
out
pop
pop
mov
stc
mov
adcl
ss
cmc
pop
dec
xor
les
add
imul
out
dec
je
mov
cmp
arpl
adc
daa
fstpt
mov
stc
pop
in
push
mov
scas
lea
mov
cmpsb
pop
lahf
test
dec
add
pop
iret
inc
fmul
push
rclb
push
dec
scas
out
pushf
cmp
push
daa
mov
mov
stos
pop
outsb
mov
divl
jmp
adc
addr16
mov
sub
es
add
xchg
or
out
inc
je
out
cmp
mov
pusha
add
dec
or
cltd
in
inc
xor
xor
dec
push
movb
xor
xchg
outsb
jmp
jle
pop
insb
sbb
dec
and
cld
leave
jnp
and
pop
pushf
jmp
inc
cmp
push
mov
xorps
sub
std
inc
lods
or
negl
mov
dec
push
cld
dec
or
ja
loopne
bound
mov
das
xchg
xor
lock
lahf
push
outsl
in
scas
pop
push
add
push
or
push
insb
inc
cmp
arpl
mov
pusha
jne
fimull
xor
and
pop
sti
cmp
push
insb
push
fcmovb
inc
incb
lods
test
je
outsb
add
mov
dec
mov
sarl
stc
cld
lcall
jmp
xchg
inc
test
mov
fimuls
push
push
sub
test
outsl
add
in
inc
out
popf
ljmp
lahf
push
repz
out
push
adc
popf
cmp
ja
inc
movsb
or
cltd
int
fildl
movsb
pop
popf
pop
rcl
xchg
dec
pop
sub
cwtl
cmc
mov
cltd
jge
fldz
shlb
jmp
ds
in
sbb
push
fbld
loopne
sub
cmp
dec
cmpsb
jmp
sbb
adc
add
lock
and
mov
mov
mov
mov
ret
in
leave
xchg
or
cwtl
test
fstl
push
cmp
jno
xchg
add
imul
orb
aas
and
sti
mov
xchg
mov
dec
test
push
outsb
cmp
xchg
mov
fcomi
ljmp
das
pop
repz
add
inc
xlat
dec
dec
mov
dec
dec
lods
jp
xor
xchg
dec
push
iret
dec
push
lods
cmp
or
icebp
and
adc
xchg
fnstcw
jmp
lea
popf
ficoms
outsl
mov
jbe
or
jo
test
shrb
mov
pop
ljmp
jmp
jmp
cmp
insb
mov
call
add
sbb
in
shlb
sarl
es
in
mov
push
xchg
pop
js
shrb
dec
lock
neg
call
cmp
pop
repnz
scas
jge
cmpsl
sub
aas
cmp
insl
add
push
jle
dec
and
imul
jno
sub
cltd
jmp
jbe
pushf
loopne
loope
xor
lds
mov
or
popf
inc
cmp
jne
stc
sub
test
cmp
xchg
sub
jmp
mov
out
mov
or
fisubl
push
inc
mov
jne
dec
push
ss
int
jecxz
xlat
and
sbb
popf
in
dec
gs
stos
rcr
sub
scas
lods
mov
ja
test
sbb
mov
outsb
push
shrb
inc
js
gs
push
mov
scas
ljmp
mov
dec
bound
jl
push
fldenv
jmp
cmp
imul
push
dec
imul
sub
pop
aas
jno
shl
or
mov
stc
movsb
cltd
hlt
dec
cmc
mov
push
enter
decl
push
call
adc
dec
push
and
cmp
das
adc
in
popa
dec
js
movsl
call
push
lods
jmp
jg
ljmp
pushf
cmp
push
jo
insb
imul
test
sbb
jmp
leave
sahf
cs
ja
das
popa
popf
push
addr16
cmpl
xchg
in
xchg
inc
iret
lods
xchg
lret
fiadds
mov
mov
das
pop
es
test
or
inc
ret
mov
dec
test
inc
xchg
insb
pop
mov
ja
sbb
test
ss
rclb
ljmp
jge
pop
mov
pop
nopl
data16
mov
adc
sub
clc
hlt
cltd
dec
addb
popa
xorl
or
add
xor
jecxz
out
fs
xor
ss
mov
or
aaa
hlt
aaa
dec
je
sar
out
jmp
imul
mov
jbe
adc
push
xchg
cmp
and
mov
mov
icebp
adc
pop
xchg
fcmovne
xor
stos
push
mov
cld
dec
and
stc
sub
dec
ret
push
xchg
jecxz
mov
sub
mov
jecxz
push
xchg
jns
repnz
std
jl
pop
pop
pop
adc
je
push
add
cmc
adc
imul
scas
pop
xlat
cmc
jmp
loop
ja
lods
mov
pop
jmp
dec
imul
xlat
outsb
pop
push
call
jne
cmp
adc
orb
inc
xchg
rol
push
sahf
stc
scas
or
test
xor
and
push
pushf
outsb
push
jo
movsb
add
adc
xor
rorb
xchg
and
and
inc
das
in
add
add
mov
nop
decb
dec
cmpsb
test
xchg
pop
outsl
push
mov
jg
cmovns
sub
int3
imul
leave
and
adc
add
push
jnp
into
mov
outsb
ret
aam
test
lret
ja
push
pop
sbb
and
movsb
movsb
pop
les
pop
in
shrb
pop
push
jge
sub
outsb
inc
dec
inc
cltd
sti
inc
xor
cltd
cld
cli
sbb
sub
iret
sub
das
jp
adc
aaa
test
mov
mov
lods
mov
cmp
int3
jae
dec
xor
jmp
insl
out
fists
pop
je
lods
les
std
cwtl
mov
mov
mov
adc
mov
repnz
xor
sub
ss
add
dec
xor
cmp
and
and
sbb
outsl
dec
adc
cltd
mov
test
outsb
pop
xchg
pop
hlt
cmp
xor
fistl
lahf
ss
shlb
jne
xor
stc
les
mov
outsb
xlat
adc
xchg
sbb
dec
movsb
jne
dec
aaa
pop
push
outsb
dec
dec
jmp
outsl
jmp
adc
and
mov
mov
mov
neg
or
lahf
cmp
lods
movsl
sub
outsl
in
mov
jl
mov
popa
nop
lcall
push
jb
sahf
sar
lret
into
jmp
out
enter
and
pop
outsb
pop
cmp
and
push
insb
leave
std
imul
dec
testb
push
jl
sbb
push
push
in
popf
pop
mov
inc
xchg
movsb
aaa
cltd
push
cltd
sub
dec
imul
bound
stos
ljmp
and
jmp
int
or
jmp
jl
clc
mov
cli
pcmpgtw
xor
pop
mov
add
sub
xchg
cmp
out
pop
sub
gs
push
lret
enter
popa
mov
hlt
dec
out
adcb
xchg
mov
test
rol
test
mov
sub
shrl
andl
mov
clc
insb
in
mov
or
out
adc
lret
inc
xchg
in
mov
or
mov
mov
mov
sub
xchg
insb
dec
hlt
xchg
adc
outsb
inc
lret
xchg
cmp
int3
jmp
stos
adc
out
jo
sub
and
fisubl
jge
outsb
cmp
je
pop
in
nop
inc
fadd
adc
mov
cmp
dec
test
lods
pop
outsl
mov
mov
cwtl
jmp
mov
lahf
adc
out
outsb
outsl
inc
xchg
xchg
out
in
cmp
dec
mov
sub
mov
sahf
cmp
jnp
ss
hlt
jno
inc
sbb
aaa
push
sub
insl
bswap
adc
jb
sub
nop
imul
and
mov
add
dec
data16
mov
cmp
push
outsl
mov
sub
pusha
das
out
inc
pop
mov
sti
fstpl
enter
xor
cmp
in
iret
lea
cltd
mov
add
pop
xchg
sub
lea
scas
int
mov
pop
cmc
test
inc
mov
xchg
inc
aad
lods
xchg
pop
mov
into
outsb
pop
adc
sub
gs
jmp
dec
mov
outsl
mov
outsb
xor
insl
nop
sub
xor
sti
repz
push
ja
test
and
adc
dec
mov
fimuls
cltd
jmp
jmp
incb
daa
mov
fnstsw
jp
stos
xchg
xchg
test
ja
sbbb
gs
ljmp
leave
pushf
inc
jmp
pop
sbb
xchg
dec
call
jae
xor
mov
mov
mov
sbb
ror
ret
andb
pop
cld
cmpb
jle
push
es
pop
pop
popa
in
dec
movsb
mov
mov
outsb
and
cmp
xlat
xchg
jmp
inc
push
xor
mov
or
std
or
cmpsb
jae
jb
inc
pusha
jo
mov
inc
lret
dec
pop
popf
stos
dec
mov
jecxz
adc
nop
into
outsb
mov
mov
ss
rolb
test
lods
test
aaa
mov
jge
ret
ffreep
jae
xchg
push
fdivrs
daa
mov
pop
lods
mov
dec
dec
movsl
icebp
fcmovne
fcompl
add
mov
pop
frstor
adc
clc
xchg
pusha
jle
lods
arpl
repz
loopne
xchg
inc
loopne
or
sbb
adc
mov
pop
std
mov
cli
popa
dec
add
shrl
add
xor
fimull
and
xchg
jmp
mov
mov
pop
stos
sbb
xchg
jmp
sahf
jle
cli
insb
push
or
mov
sahf
pop
pop
int
orl
mov
aaa
outsb
mov
push
xor
loopne
sbb
enter
jl
bound
push
jno
push
scas
pop
sbb
xor
loopne
imul
dec
mov
mov
dec
jns
mov
repnz
xchg
xchg
xchg
adc
or
mov
pop
pushw
outsb
cmpsb
mov
inc
in
adc
adc
orl
stos
mov
sbb
inc
dec
insb
outsl
inc
sbb
mov
sbb
test
jae
pop
loop
pushf
filds
xor
adc
hlt
push
dec
sbb
mov
lret
lahf
fsubr
jo
jne
jmp
push
dec
mov
dec
or
out
lcall
sbb
mov
mov
mov
or
mov
push
dec
cli
sbb
jecxz
outsb
xor
and
dec
pusha
loopne
repz
sbb
mov
sbb
jb
mov
dec
imulb
xor
rolb
sbb
outsb
lods
push
loop,pt
cmp
add
adc
rorl
pop
push
push
xchg
stc
or
sub
enter
sahf
test
dec
xchg
or
mov
inc
sbb
jmp
cmp
outsb
popf
mov
movsl
mov
dec
or
dec
shl
cltd
ss
jmp
ret
jge
cltd
mov
in
sti
lods
les
imul
xchg
fs
aas
inc
mov
in
test
adc
or
sti
into
movsl
and
mov
les
jle
outsb
fisubl
rcr
imul
outsb
ja
push
ss
or
call
jg
sbb
ds
xor
jno
dec
and
add
inc
into
add
insb
push
pusha
hlt
orl
inc
pushf
arpl
arpl
pop
jge
out
and
xchg
sahf
push
outsl
add
sbb
mov
aam
repnz
js
sub
jmp
int3
movzwl
mov
mov
scas
dec
mov
mov
lods
aas
aad
pop
push
lds
in
mov
lods
jb
dec
xor
mov
addr16
push
roll
sbb
push
adc
outsl
enter
orb
dec
jnp
sbb
out
aas
mov
cmpsl
mov
jae
dec
push
mov
mov
fmull
mov
cmc
pop
outsb
or
lcall
enter
ret
jg
inc
dec
cmc
outsb
pop
sti
roll
and
pop
bound
loope
lods
or
jge
mov
fiadds
aad
mov
jne
aas
mov
push
fnstcw
js
outsb
dec
out
testb
inc
arpl
pusha
xchg
es
cmc
stc
sbb
xor
ja
divb
xor
xchg
pop
lock
lea
sub
add
mov
aas
addr16
or
cwtl
sbb
outsb
xor
aad
mov
inc
in
jle
add
cmc
xchg
pop
mov
stos
xchg
bound
arpl
or
xor
xor
sub
std
mov
pop
jl
test
cltd
mov
movsl
dec
flds
pop
and
mov
inc
pop
int3
inc
outsl
sbb
dec
dec
push
mov
outsb
mov
aam
xchg
jmp
fcmove
sbb
sub
stc
sub
aas
outsl
pop
in
dec
pop
mov
clc
hlt
and
cmp
movsb
cmc
lret
ljmp
xchg
push
dec
mov
js
jmp
push
bound
scas
inc
mov
iret
mov
int3
cwtl
and
test
mov
or
add
xchg
and
jmp
jmp
jg
mov
aas
pop
xlat
and
sub
mov
push
mov
sub
out
xlat
dec
pop
out
fcompl
push
cmpb
cmp
sub
loopne
cmp
sbb
or
aaa
ret
xor
pop
insl
test
test
iret
fisttpll
ja
adc
mov
stos
fisubrs
ret
pop
leave
rclb
and
in
mov
jmp
das
pop
adc
xor
aaa
loop
mov
push
int
subl
or
inc
in
jge
add
or
in
pop
jecxz
out
addr16
out
mov
scas
jae
into
push
popf
adc
insl
call
adcl
inc
xchg
lods
or
icebp
inc
pop
addr16
loop
inc
test
jo
dec
out
xchg
mov
fisubrl
movsl
lods
pop
sbb
in
mov
dec
pop
shl
push
int
xor
outsb
lcall
ds
dec
lcall
push
push
and
movsb
outsb
stos
jns
in
or
ret
dec
pushf
cmpsl
xchg
sub
in
leave
pop
sbb
adc
xchg
mov
out
adcb
jecxz
mov
cld
xchg
xor
pop
push
call
mov
inc
in
cli
test
fwait
push
outsb
cmp
sbb
in
dec
pop
loope
hlt
or
lret
pop
inc
cli
xlat
outsb
fcmovnb
pop
add
xchg
into
paddusw
xchg
xchg
stos
sub
adc
sbb
jns
adc
push
xchg
sbb
icebp
and
ret
stc
push
outsl
mov
test
xchg
sub
rcl
dec
shrb
pop
pop
pop
psubd
fsubrs
push
sbb
ss
mov
pop
xchg
xor
in
notb
outsl
lret
notl
imul
cmpsb
xchg
test
jge
mov
inc
in
mov
mov
daa
push
adc
out
inc
ficoms
in
fistl
out
addr16
test
test
ds
das
fimull
leave
test
xor
in
icebp
adc
push
movb
lcall
inc
ja
decb
shrl
cmpb
outsb
movsb
pop
pop
testl
arpl
push
push
popa
xchg
clc
jle
xor
xchg
dec
ss
mov
movsl
lods
dec
outsb
test
ret
pop
adc
ret
shlb
in
xor
xorb
adc
xchg
pop
push
cmp
in
fcom
lods
sub
mov
dec
rorl
int
cld
inc
mov
outsb
pop
lret
mov
mov
jmp
mov
hlt
imul
aas
lods
add
push
inc
in
sub
and
pop
neg
mov
enter
jp
dec
insl
ret
push
fs
iret
inc
push
scas
int3
inc
or
xchg
sahf
mov
outsb
cli
stc
mov
sub
push
bnd
mov
std
and
mov
cmpsb
cld
push
adc
jl
adc
pop
add
fcmovne
loope
xchg
cmpsl
and
lock
fs
xlat
dec
in
flds
sub
fnstsw
dec
dec
bnd
repnz
adc
outsl
fwait
fwait
xor
insb
shr
xor
loope
push
cld
bound
outsb
mov
xor
sub
mov
cvtpi2ps
mov
out
mov
mov
ret
push
insb
je
in
cltd
je
or
dec
push
cmp
sahf
push
jns
dec
fisubs
mov
mov
xchg
mov
jl
and
xchg
out
jno
xor
or
push
push
clc
adc
ljmp
ret
loop
jbe
fisttpl
pop
aam
fdiv
mov
pushf
xchg
xchg
jmp
insb
cmp
clc
sub
jns
push
addr16
push
jbe
adc
test
addr16
mov
adc
dec
mov
mov
xchg
xor
mov
jmp
arpl
mov
mov
sahf
decb
sub
rep
std
outsb
mov
sbbl
sbb
dec
cmp
jae
pop
dec
sub
push
jle
inc
mov
xor
nop
jnp
sbb
pop
pop
subl
das
add
ss
adc
pop
mov
shr
fbstp
cmp
outsb
push
and
outsb
inc
sbb
cmp
add
stc
outsb
addr16
out
or
out
in
pushf
out
sbb
sets
jle
das
pop
mov
sbb
sbb
inc
icebp
imul
fisubs
imul
and
mov
clc
xor
sbb
push
sbb
sti
jle
xor
mov
test
mov
js
pop
push
gs
in
in
add
cmp
mov
ljmp
push
adc
popl
cltd
call
sbb
aad
dec
pop
into
inc
inc
push
sbb
push
movsb
scas
mov
fdiv
push
bound
mov
fxtract
aad
ficoms
popa
in
ljmp
pop
add
leave
cs
cltd
outsb
jecxz
sub
aad
pop
in
sub
mov
movsl
xor
mov
rcrl
ret
push
jmp
push
inc
push
sarb
decl
push
outsb
pop
inc
lock
in
inc
mov
clc
cmp
jno
xchg
enter
jb
fisttpll
js
outsb
dec
incl
jp
rorl
xchg
sub
sbb
push
sbb
aas
cmp
lret
pop
sub
dec
fmull
loope
cmp
or
icebp
repnz
mov
xor
mov
or
sbb
jnp
jae
mov
push
mov
cmpsb
iret
push
inc
enter
outsb
out
dec
jb
mov
pop
stos
imul
int3
inc
fisubrs
out
daa
dec
fnstcw
adc
cld
jmp
dec
push
jmp
mov
pop
out
xor
addr16
xlat
sbb
pop
insl
push
sarb
jb
adc
test
jge
dec
push
loope
fsubrs
hlt
scas
pop
sub
in
and
mov
setg
dec
pop
and
sbb
subb
pop
rolb
dec
out
inc
push
or
and
outsl
fstl
push
xor
jno
mov
dec
fidivrs
push
ud0
loopne
sub
inc
shll
andb
out
inc
mov
pop
pop
pop
jge
dec
scas
addr16
fisubs
pop
out
ja
xlat
nopl
mov
mov
sub
ss
pop
or
imul
lret
adc
dec
inc
loope
data16
sub
loopne
push
lea
loopne
in
dec
xlat
mov
mov
lods
and
dec
or
out
mov
je
fsts
leave
jne
push
jmp
cmpsb
aad
insl
xlat
dec
dec
cld
jmp
cld
pusha
inc
ret
xchg
mov
sub
in
arpl
inc
sub
sahf
test
xor
or
in
jbe
mov
mov
push
xchg
testl
mov
outsl
cltd
jmp
fsts
mov
cmp
lock
mov
imul
adc
addb
or
adc
jns
dec
pop
xchg
lret
or
push
xchg
sub
cmp
fs
cmp
pop
jo
jg
pop
decl
test
push
jb
inc
dec
xchg
mov
push
dec
sub
jb
mov
cmc
shlb
enter
xchg
loope
in
or
out
lahf
lahf
fisttps
stos
sahf
inc
and
xchg
insl
dec
inc
test
les
xor
dec
push
fldenv
sbb
insl
sub
adc
add
outsb
adc
and
sub
or
ds
insb
jne
inc
bound
loop,pn
outsb
mov
ljmp
arpl
aas
pop
mov
add
ja
mov
enterw
mov
bound
dec
lea
cmpsb
shrb
lods
icebp
add
pop
in
inc
jge
inc
test
push
sub
cmc
sub
xchg
clc
mov
rcr
mov
sbb
dec
cmp
mov
jmp
sbb
or
sub
stos
push
mov
rcrb
in
sub
xor
mov
in
loop
cmp
or
sub
or
repz
dec
inc
arpl
sbb
mov
sbb
dec
ror
push
cwtl
push
inc
xor
push
push
sahf
mov
ja
in
dec
sbb
jmp
jbe
pop
mov
int
cmpsl
repnz
mov
and
pop
in
int
cmp
jg
dec
dec
sbb
lock
xor
ljmp
dec
aad
aam
mov
insl
mov
fldl
nop
or
ficompl
idivl
lds
inc
enter
push
sbb
ficoms
adc
sub
jne
and
adc
ja
call
cli
aad
sbb
lahf
dec
fsubrs
jmp
dec
lahf
pop
icebp
xchg
addr16
bound
xor
or
mov
mov
add
dec
jo
fstp
xchg
divl
sub
ffreep
push
in
push
add
push
push
test
mov
mov
mov
fildll
jne
push
orb
insl
sahf
push
dec
dec
fcomps
dec
dec
jge
xrelease
fnstsw
loop
in
dec
mov
shrb
aas
sbb
jno
dec
mov
hlt
enter
lea
ficoml
adc
repz
inc
mov
loope
lock
mov
ffree
or
xor
lock
call
xor
outsl
fwait
sbb
xchg
mov
cmp
jae
inc
push
scas
jb
outsl
adc
frstor
pop
pop
cwtl
mov
int3
lcall
addl
in
dec
add
outsl
imul
sbb
ss
bound
jmp
sub
cmp
dec
xchg
cmpsl
mov
mov
pop
scas
loope
cmovle
decl
in
inc
jg
sub
adc
xchg
imul
xlat
inc
xor
push
fisubrs
cmp
mov
sub
adc
mov
idivl
pop
adc
dec
inc
das
xor
inc
pushl
or
imul
jg
mov
sbb
inc
jb
pop
mov
adc
xor
hlt
inc
pop
mov
addb
cwtl
push
push
mov
mov
aam
aad
into
mov
jmp
lcall
or
lahf
jb
mov
pop
jne
mov
dec
or
enter
push
xor
push
adc
insl
pop
mov
call
sub
insb
or
mov
dec
and
imulb
data16
mov
addr16
ds
hlt
fcoml
xchg
cltd
and
sbb
push
pop
jle
shll
shlb
xchg
cld
out
adc
jle
cmc
out
jl
xchg
xchg
movsl
fiaddl
push
dec
add
mov
vsubpd
jmp
and
mov
andl
xor
pop
or
xchg
cs
mov
jmp
pop
jg
subb
mov
out
pop
and
decl
cmp
ror
jle
lods
stc
or
aaa
xor
jbe
or
mov
pop
daa
dec
adc
mov
fnstenv
dec
gs
add
aad
pop
lret
addr16
dec
xor
out
push
mov
pusha
idivb
inc
arpl
in
lods
outsb
leave
sbb
aam
in
cmp
sub
shl
lea
loopne
mov
cmp
mov
es
movsl
push
inc
jno
dec
lcall
dec
loop
sahf
pop
lcall
xor
stos
and
call
xchg
ss
pop
mov
add
mov
lret
outsl
inc
dec
fwait
das
sbb
pop
xor
dec
call
jmp
inc
out
ficoml
lret
outsl
cmp
mov
sbb
or
mov
xchg
and
mov
cs
inc
test
mov
dec
and
dec
and
scas
cmpl
pop
or
sub
fcmovbe
lock
shr
pop
repz
sbb
cmp
dec
mov
jg
dec
pop
push
test
cmpsb
inc
or
pop
in
lea
aas
inc
mov
test
lret
dec
push
pop
movsl
push
dec
or
jmp
sub
and
jmp
mov
xor
out
mov
adc
jge
repz
dec
aaa
adc
push
sub
push
insl
inc
in
mov
lret
xchg
jns
ja
outsb
mov
cs
idivl
pusha
jecxz
and
iret
mov
inc
sbb
dec
mov
loop
out
clc
mov
inc
in
push
mov
cmp
mov
push
pop
sub
das
in
cmp
jmp
mov
push
call
xchg
inc
andl
jp
test
jnp
ljmp
mov
bound
lds
cmpsb
sub
aaa
sbb
add
or
mov
addb
lock
xchg
es
insl
fdivrl
jmp
adc
aas
neg
or
push
cltd
sarl
pop
jecxz
into
or
inc
andl
or
dec
gs
cmpsb
push
addr16
add
bound
cmp
je
jle
inc
adc
pop
add
add
dec
xor
int3
addr16
enter
xchg
mov
test
in
outsb
push
dec
bound
inc
in
and
iret
xchg
mov
push
and
inc
push
pop
loopne
add
adc
dec
loopne
xchg
inc
adcb
cmp
into
fmull
inc
stc
jge
mov
sub
iret
pusha
jno
mov
push
jbe
hlt
or
mov
faddp
mov
push
stc
lret
das
data16
push
or
xchg
mov
mov
dec
popa
inc
shll
pop
xchg
cld
rcrl
cmp
lret
outsb
mov
jo
xchg
aam
cmpb
dec
xchg
mov
cmp
and
cmp
int3
xchg
xor
imul
xor
enter
insb
lds
fsubrs
sbb
push
fiadds
pop
enter
stos
in
push
xor
popa
aad
je
out
sbb
gs
in
fisubrs
inc
mov
roll
cmp
adc
push
sarb
imul
cmpsb
xor
xorb
test
inc
xor
stc
and
push
dec
cmpsb
lret
lods
stc
ljmp
repz
push
and
pusha
shr
adc
ret
inc
inc
xor
daa
add
inc
leave
push
stc
ljmp
pop
xor
popa
inc
stos
cmp
es
fidivl
add
clc
jbe
bound
push
orl
in
popf
add
bound
popa
aas
dec
cmpsl
mov
das
call
mov
inc
sbb
popl
repz
aam
data16
test
js
inc
and
cmp
pop
push
scas
icebp
push
aad
shrl
sbb
add
sahf
sub
out
jle
rol
xor
int3
mov
xor
in
arpl
out
xchg
mov
mov
mov
getsec
push
sbbl
lock
jbe
popa
scas
add
adcl
repnz
mov
loope
shlb
push
or
sbb
mov
out
fimuls
subl
rolb
jl
aaa
inc
in
add
shrl
pushf
mov
mov
jg
pop
cmpb
sub
push
shrl
stos
lods
push
or
invd
aam
mov
jecxz
pop
out
jne
sub
xor
stc
std
add
sub
insl
insb
sbb
in
mov
insb
add
loopne
ss
jnp
dec
enter
cmp
push
pop
sbb
jle
ja
sti
hlt
aam
xor
xchg
arpl
out
nop
loop
popa
inc
sub
imul
or
outsb
and
mov
outsb
popl
xor
les
leave
out
push
jmp
ret
ljmp
xor
data16
aam
aas
push
negl
sub
loopne
or
mov
cmp
es
sbb
testl
imul
enter
ds
push
add
sbb
cmpsb
das
xchg
hlt
mov
in
mov
or
in
loop
jle
insb
push
jnp
push
out
dec
pop
pushf
out
cli
add
or
adc
adcb
pop
adc
xlat
push
sub
push
fwait
or
outsl
pop
inc
fisttpl
xor
mov
pop
aad
jp
fisttps
jl
mov
out
mov
loop
outsb
ror
das
ja
push
es
clc
daa
cmpsl
pop
inc
sub
lret
cld
lods
sbb
cltd
dec
popa
pop
sub
in
dec
and
dec
mov
lcall
mov
repz
mov
mov
xchg
inc
gs
cld
mov
sub
sbb
loope
xchg
mov
call
push
cltd
lods
lods
inc
fisttps
je
sbbb
mov
sarl
dec
clc
out
mov
test
or
nop
lods
and
mov
dec
push
cld
nop
cltd
outsb
jl
fidivs
or
test
cmpsb
pop
jae
xor
dec
dec
cmp
inc
jle
and
cmp
cltd
mov
repz
jg
rep
and
outsl
xchg
dec
repnz
mov
cmpsb
fisttpl
xchg
push
push
xor
push
imul
adc
jp
mov
jnp
aas
test
mov
inc
popa
and
or
loop
and
ljmp
push
scas
je
add
xchg
inc
fstps
aad
pop
movsb
les
lcall
lods
pop
adc
popa
or
cli
cmp
push
cli
xchg
aad
xor
fsts
bound
cmpsb
and
lds
jg
rcll
js
popa
pop
jns
in
outsl
mov
jg
and
mov
subl
into
add
or
sahf
lds
dec
in
lret
xchg
stos
mov
notb
sub
rol
add
out
xlat
add
ds
cmp
into
and
outsl
lcall
sub
fildll
mov
fadds
test
sub
and
mov
xchg
adc
mov
mov
push
iret
pop
mov
sub
sub
add
jbe
movsb
fsub
fcompl
out
and
imul
cs
mov
stos
or
or
data16
push
insl
inc
jg
inc
sahf
fdivp
xchg
sub
sysret
aas
cld
mov
xchg
mov
popa
int3
in
sarb
inc
xor
fisubs
aam
xchg
pop
jns
fistps
lret
es
push
jne
cld
fbld
xchg
sub
sub
mov
bound
shll
fsubrs
dec
icebp
sahf
mov
scas
test
pop
imul
imul
or
mov
fidivs
mov
rcrl
xor
sub
in
imul
int
inc
mov
xlat
xchg
add
shlb
cwtl
out
xlat
lea
inc
int
es
test
dec
add
lahf
js
leave
sub
inc
cs
addb
in
gs
test
out
push
mov
fmul
cmp
loop
sub
pop
or
mov
stc
arpl
dec
dec
sbb
cmpl
fcompl
cli
mov
enter
pushf
add
rclb
popf
enter
test
push
cwtl
popf
adc
dec
mov
add
or
push
bound
enter
rcrb
jle
pop
push
pop
sbb
dec
pop
inc
negb
ss
cmpsb
ja
mov
insb
data16
push
adc
in
and
cmp
lahf
shrl
inc
loope
scas
push
je
out
push
lret
xchg
sti
vmovntdq
jecxz
imul
adc
insb
jns
lds
jns
out
or
ret
mov
add
jne
movsl
cmp
mov
call
in
pusha
popa
cmp
and
add
push
stc
jecxz
cmpsb
ficoms
out
push
mov
mov
xor
jnp
adc
add
outsb
jb
aas
cld
insl
cli
movsl
pop
aam
sub
xor
clc
icebp
xchg
mov
in
popa
sub
repnz
lret
fisttps
lock
mov
add
mov
inc
js
and
neg
or
and
xor
add
cmc
pop
cmp
and
xchg
add
lds
pop
push
cmpsb
pop
dec
push
push
jbe
sub
insl
mov
mov
inc
xor
loope
push
lods
inc
add
inc
outsb
xor
inc
ja
inc
and
nop
push
push
cmpsb
loopne
aam
shrl
and
fcoms
mov
data16
push
add
push
inc
mov
push
xor
cmp
jg
pusha
push
xchg
cld
lds
push
insb
inc
mov
stos
xchg
cmp
popf
jnp
or
insb
lods
cmc
pop
mov
ja
dec
xchg
in
jle
inc
dec
jg
stos
inc
dec
cmc
cs
mov
jecxz
cmpsb
mov
lahf
rcll
fwait
movsw
jo
cmpsb
xorb
cmp
ret
xchg
push
mov
cli
insb
inc
js
stos
sti
fdivrl
sub
or
int
bound
imul
lods
mov
add
rclw
push
lods
xor
sbb
dec
mov
out
mov
rorl
cmp
sub
inc
arpl
cmp
or
aaa
inc
dec
pop
mov
sahf
lcall
outsl
js
popa
and
icebp
mov
les
clc
pop
and
inc
pop
and
fsubs
push
fsubrl
push
sbb
xchg
int3
mov
push
insb
lods
mov
push
shr
sbb
push
inc
and
jnp
dec
or
imul
pop
sbb
jno
imul
jnp
cmp
xchg
xor
jo
cmp
lock
leave
pop
sahf
mov
movsb
jecxz
add
mov
rol
data16
data16
mov
mov
jb
dec
stc
mov
dec
mov
mov
insl
jl
test
pop
inc
ja
push
aad
jl
movsl
xchg
cmc
fildl
inc
repnz
adc
push
xor
fstp
fiaddl
add
push
pop
call
lret
push
stc
fidivs
aad
add
pop
popa
enter
pusha
out
cld
movsl
cmp
and
push
fbstp
ss
adc
adc
loope
sbb
and
xchg
aam
jne
jmp
push
icebp
call
push
cmpsl
scas
stos
sub
jo
cmp
lods
ljmp
cmovl
cmp
mov
lcall
add
xchg
lret
shll
mov
pop
orb
xor
push
xchg
pop
cmp
outsl
xchg
mov
inc
inc
mov
popf
test
jb
lods
mov
sbb
or
mov
lds
ja
sub
xchg
xor
lods
shlb
mov
push
and
jb
out
rorl
outsl
fimuls
or
lcall
xor
or
into
fs
out
insl
enter
aad
add
xchg
add
call
outsb
jp
xchg
add
mov
sbb
and
inc
ret
test
cmp
push
adc
inc
fisubl
sbb
mov
insb
mov
mov
sbb
xchg
lock
jb
nop
pop
lret
xor
jmp
xchg
xor
dec
test
xlat
lret
mov
addr16
dec
xchg
push
sub
andl
sbb
sub
repnz
jg
ss
out
rorl
out
dec
call
dec
push
adc
jp
xor
xor
mov
inc
ljmp
push
mov
jge
jmp
add
testb
add
add
lock
mov
insl
sub
mov
mov
aas
mov
pop
mov
addl
insl
aad
xchg
or
std
ss
call
ljmp
outsb
jle
lods
mov
push
loopne
js
xlat
decl
xchg
inc
sbb
mov
fisttpll
popf
push
out
lods
sub
jmp
pop
in
and
outsl
sti
or
ss
add
jb
es
mov
ds
mov
fs
jle
pop
popf
test
inc
sbb
and
pop
mov
push
push
cmc
mov
xchg
test
ds
lret
cmp
xor
dec
jne
xor
jns
cmp
pop
pop
insl
push
jle
ret
lods
adc
test
rorl
mov
jmp
xchg
or
and
divb
negb
or
push
jle
cmp
ret
cmpsl
pop
shll
jnp
mull
push
sub
cmp
and
roll
fisubrl
fs
sub
pop
sbb
std
or
jne
mov
es
pop
xor
jnp
cmpsb
test
and
add
mov
pop
lahf
aam
xchg
mov
cmp
and
mov
push
or
lds
mov
in
loopne
cwtd
inc
add
mov
push
in
mov
pusha
or
add
inc
imul
xor
mov
add
add
jmp
inc
daa
je
inc
dec
inc
dec
ds
bound
xor
cmp
inc
insl
jl
xor
imul
into
int3
rol
out
add
jmp
arpl
inc
movsb
pop
sarl
sub
repnz
movsl
xor
lret
push
xchg
cmpsb
dec
pop
mov
mov
dec
sub
repz
dec
ljmp
aas
faddl
stc
stos
rcrl
and
jbe
sbb
out
icebp
dec
and
jmp
sub
ja
push
cs
into
es
add
push
loopne
hlt
mov
xchg
pop
or
adc
jmp
inc
xor
insl
xchg
sub
inc
cmp
sub
fwait
and
push
loop
push
and
or
les
jne
aam
xor
push
hlt
push
adc
add
in
lods
ja
or
notb
rcl
xchg
into
std
cli
ret
cmp
pushf
push
dec
cwtl
mov
adc
fsubrl
int
xor
pop
add
lods
lret
fsubr
xchg
xchg
in
add
shll
xchg
lcall
sbb
int3
pop
push
lock
popa
xchg
or
pop
xchg
adcb
cmp
outsl
imull
scas
test
arpl
mov
add
imul
xchg
pop
xor
sahf
fists
push
leave
add
xchg
psrld
sub
pop
mov
std
repz
imul
in
imul
dec
shll
setg
test
psllq
stc
inc
adc
xchg
adc
add
mov
out
adc
jno
push
push
call
adcl
jb
jecxz
jmp
and
test
fadds
movsb
mov
popa
stos
iret
lock
ljmp
stos
inc
stos
xchg
testb
xor
dec
fimuls
stos
imul
cmp
lret
push
fs
shll
mov
mov
pushf
cmp
sbbb
shr
hlt
inc
div
daa
adc
addr16
cld
outsb
inc
inc
ja
adc
std
leave
ja
push
jno
fldcw
xlat
xor
imul
loopne
mov
std
call
mov
bndstx
je
pusha
pop
fsubl
in
fwait
lds
int3
push
mov
inc
loopne
xchg
jmp
test
push
fwait
daa
das
mov
mov
xchg
addr16
push
lock
fmuls
fists
inc
or
mov
call
dec
mov
xchg
jnp
les
loope
jnp
xor
mov
les
and
jb
int
pop
add
pop
cli
xor
inc
pushf
outsb
adc
sbb
stos
sahf
xchg
cmp
out
add
xchg
test
mov
sbb
push
data16
fisubrs
outsl
xor
inc
enter
movsb
test
and
das
or
push
dec
scas
and
pop
gs
sbb
push
dec
xor
xor
pop
adc
mov
push
jb
adcb
cltd
fiadds
enter
push
cwtl
cmp
cmc
imul
dec
leave
xchg
std
out
inc
mov
cmp
shrb
mov
jecxz
push
xchg
pop
cmp
mov
mov
lahf
add
mov
mov
loopne
out
decl
nop
std
pop
push
sbb
rcrb
fxch
jnp
std
divl
imul
bound
cmp
in
out
outsb
es
je
enter
aas
and
data16
push
push
sahf
cltd
outsb
mov
cmc
mov
add
xchg
sbb
mov
mov
mov
stos
add
aad
mov
arpl
fwait
into
jecxz
out
in
mov
jp
pop
mov
scas
gs
mov
mov
ljmp
pop
adc
push
cmc
fwait
jmp
aas
leave
setno
subl
notl
inc
jno
add
sbb
das
mov
insb
push
mov
push
jle
in
je
dec
test
push
lahf
sbb
ffreep
ja
jmp
insb
nop
cltd
test
cmpsl
inc
dec
adc
mov
fucomip
xor
stc
ret
jmp
mov
xchg
jge
sbb
rorl
jb
mov
sbb
lcall
mul
popa
lahf
nop
inc
and
cmpsb
lcall
rorl
divb
sbb
inc
adc
shl
sbbl
cmp
enter
jp
mov
jge
fdivp
mov
inc
inc
and
push
popa
dec
enter
cmp
pushf
sahf
add
jbe
push
pop
aad
daa
sbb
jb
int3
leave
xchg
sbbl
pop
loopne
inc
adc
sbb
xchg
outsl
mov
in
xor
mov
mov
nop
jmp
fadd
scas
pushf
push
inc
pushf
pop
jnp
lcall
into
push
or
jnp
daa
sbb
pop
call
test
inc
repnz
dec
aas
sbb
sbb
out
pop
sbb
daa
cld
xor
insb
movsb
outsb
imul
fldenv
fwait
add
fwait
out
and
pusha
sbb
cmp
cmp
pop
add
hlt
sbb
imul
pusha
mov
movsl
or
outsl
mov
adc
mov
jnp
xchg
fucomp
push
jmp
lret
scas
sub
gs
jno
sahf
mov
outsb
and
mov
or
shlb
das
adc
adc
add
fsub
enter
outsl
add
cmc
inc
cli
les
ja
dec
das
adc
mov
in
mov
jne
xchg
xchg
outsl
pop
xor
fistps
aam
pop
inc
mov
scas
insb
clc
add
pusha
sub
inc
and
dec
mov
cmp
inc
hlt
add
das
adcb
mov
notl
dec
and
loopne
mov
aaa
mov
add
sbb
div
mov
pop
mov
je
cmp
push
push
cmp
loopne
add
scas
push
ja
inc
jge
mov
inc
rorb
loop
outsl
out
cli
adc
mov
fisubrs
mov
or
and
jle
fistpl
addb
add
mov
pop
fwait
mov
pop
arpl
dec
xlat
or
rorl
sbb
add
imull
hlt
rclb
stos
popl
adc
mov
mov
inc
cmp
xchg
pop
repz
push
dec
and
mov
xor
sbb
out
ret
dec
shll
aas
ret
setnp
movsb
mov
mov
lock
das
andl
icebp
test
cmp
mov
test
fisubl
cmp
rorb
sub
into
cwtl
inc
push
rol
cwtl
cmp
sub
nop
jb
jge
push
fwait
cmp
dec
sti
mov
icebp
and
fwait
xchg
dec
xor
pop
push
shlb
ljmp
das
inc
das
leave
leave
lock
dec
mov
push
ret
shll
xor
fsubrp
push
fdivrl
arpl
cmp
fidivrs
lock
lods
add
mov
inc
xchg
adc
cmpsb
jl
jecxz
jmp
setp
shrb
mov
push
inc
jp
inc
repnz
iret
mov
mov
push
and
stos
xor
xchg
sbb
jl
dec
les
int3
mov
mul
push
add
xor
hlt
ds
push
leave
cwtl
mov
xor
icebp
mov
jge
pop
aam
leave
bound
sbb
cli
pop
and
or
outsl
pushf
inc
shrb
mov
call
ja
pop
dec
sub
mov
inc
and
bound
ljmp
cmp
cli
pop
push
and
adc
pop
push
sbb
in
test
push
inc
push
retw
mov
arpl
fisttps
xor
ss
rorl
fisubs
push
mov
sbb
add
cmp
js
fwait
mov
mov
lcall
or
mov
cmp
mov
jmp
xchg
xchg
or
test
xorb
fcoml
xorb
ror
sbb
out
je
mov
pusha
or
add
sub
std
xchg
dec
pusha
clc
aaa
test
bound
pop
mov
aas
xor
xor
fimull
sub
aad
in
lret
es
pop
test
push
pop
cmpsl
push
xchg
xchg
push
lods
xchg
scas
dec
lods
mov
in
sbb
outsb
lods
or
test
pop
sbb
push
inc
jo
pop
dec
cwtl
sbb
jo
adc
inc
out
lds
stos
imul
bound
sti
out
andb
pop
xor
pop
lret
sbb
push
andb
outsb
bound
scas
xchg
fiaddl
add
ret
jle
add
xchg
pusha
pop
jns
hlt
xchg
mov
xchg
addr16
jne
dec
jge
incb
adc
lods
insl
fsubr
scas
arpl
icebp
pop
addr16
pop
cltd
inc
pop
jb
mov
sbb
movsb
or
or
in
push
imul
in
mov
mov
stos
ljmp
inc
cmovg
add
ret
insb
sahf
dec
mov
or
push
fsubrp
adc
pop
mov
add
adc
das
out
xchg
orl
dec
jg
xchg
pop
cmpsl
addb
and
jns
mov
or
jae
mov
fistps
ss
out
cltd
outsl
lahf
fbstp
xchg
out
jle
jno
nop
or
cmp
nop
jns
push
sahf
stos
or
dec
mov
insl
push
push
xchg
aaa
rolb
sub
sbb
fstp
out
sarl
out
dec
push
or
mov
sti
or
dec
ret
cmp
adc
andl
xchg
xchg
mov
movsl
push
dec
es
sbb
jne
int3
les
rorl
push
push
popa
stc
push
imul
scas
js
add
xchg
repnz
xchg
add
or
jb
outsb
test
rcrl
mov
int
xor
stc
or
adc
les
ljmp
imul
fisubrs
out
outsb
cmp
or
fucomp
outsl
aaa
push
adc
push
das
jmp
push
in
in
pop
es
out
xchg
push
fcoms
outsl
lods
dec
mov
cmc
insb
lret
push
aad
cld
ljmp
mov
mov
pop
dec
in
push
jg
mov
je
push
imul
in
bound
add
sahf
mov
xchg
or
jne
mov
mov
sbb
or
jmp
xchg
fisttpll
insb
ljmp
push
and
aas
push
jle
imul
cmp
xor
push
fnstcw
insl
loopne
or
adc
mov
push
call
jp
lsl
dec
jle
into
mov
scas
or
mov
and
dec
stos
out
cli
out
inc
lcall
inc
movl
mov
test
mov
push
or
jge
pop
lret
pop
or
mov
or
mov
xchg
sub
lcall
in
and
mov
jne
dec
and
fs
ss
push
push
sub
mov
sbb
xor
in
test
loopne
sbbb
stc
jne
shl
jmp
ljmp
mov
fcoms
push
in
movsl
lret
mov
mov
jmp
nop
mov
int3
test
and
jle
sbb
jo
adc
arpl
jmp
push
jnp
cltd
push
ja
gs
je
outsb
jp
add
xchg
pop
mov
pop
les
movsl
xchg
and
dec
sarb
outsl
adc
mov
jnp
daa
insl
in
pop
out
mov
leavew
pop
idivl
or
adc
xchg
lret
xchg
outsl
cmp
xchg
incb
outsl
fs
push
mov
out
das
insb
xchg
cmc
ret
xor
xor
inc
mov
xorb
dec
inc
or
or
xchg
mov
pop
rcrl
inc
sub
cmp
adc
sub
push
mov
jge
std
insb
mov
orb
jmp
xor
fistl
mov
ss
mov
dec
inc
cwtl
lret
jo
repz
xchg
add
in
iret
inc
jmp
dec
notb
jg
mov
iret
test
push
call
shlb
repz
dec
or
not
pop
cmp
push
xor
mov
call
ja
loopne
shl
das
ds
xor
cld
imul
mov
mov
outsb
shlb
sbbb
push
movq
loopne
sti
leave
les
sbb
add
mov
mov
dec
cmp
subb
sbb
lret
adc
test
ret
fstpl
jnp
dec
mov
cli
and
add
sub
fisttpl
imul
fsubrs
inc
jl
jge
xor
xor
js
mov
popf
and
cltd
push
mov
mov
dec
scas
xchg
xchg
fists
sbb
ss
pop
popa
dec
jp
out
cmp
mov
fwait
outsb
xor
ja
aam
add
ljmp
mov
cltd
and
out
or
rcl
dec
test
xor
sbb
outsb
sbb
mov
outsb
mov
test
decb
dec
in
inc
add
ss
test
xchg
or
rcrl
mov
add
rol
and
push
aas
mov
cli
fnstcw
mov
sbb
jmp
dec
rorl
mov
dec
fcmove
fidivs
addr16
push
out
mov
push
outsb
and
pop
sub
pop
ja
mov
jmp
enter
push
dec
in
aad
jbe
mov
aam
mov
mov
adc
in
out
shl
sbb
mov
xchg
daa
and
mov
or
insb
into
jnp
adc
call
into
add
and
xchg
mov
add
pop
and
and
subb
adcb
and
push
daa
mov
andb
adc
jmp
cmpsb
jmp
inc
subl
sub
mov
out
js
out
dec
outsl
hlt
jmp
les
add
push
leave
mov
jbe
test
mov
inc
idiv
xor
shrb
punpcklbw
in
xchg
add
pop
aaa
outsl
xchg
adc
jge
in
sub
daa
lds
loop
mov
pop
xchg
mov
jp
or
add
and
and
fwait
jl
adc
outsl
or
lock
mov
gs
aam
lods
shl
imul
lea
dec
daa
shl
jmp
push
push
xor
xor
pop
stos
cmp
mov
jnp
xor
mov
rclb
call
sub
xchg
mov
push
jo
add
push
outsl
xor
repnz
dec
pop
push
mov
mov
sub
dec
loop
sub
sub
fimull
aas
hlt
aad
jmp
in
call
mov
jo
adc
jno
ljmp
out
pinsrw
cmp
outsb
je
lods
dec
es
sbb
nop
les
mov
cmp
test
test
enter
pop
aas
data16
sub
mov
and
ja
pusha
or
pusha
aam
fmull
fadd
int3
mov
mov
xchg
or
sbb
lret
push
fcoml
jmp
xchg
mov
test
or
loopne
movsl
popa
jns
jmp
inc
fsubrs
push
out
aas
popf
enter
sub
loope
inc
sbb
jecxz
nop
inc
pop
pop
jmp
addl
or
cmpsb
or
aas
ss
es
adc
mov
repnz
icebp
xchg
lahf
sbb
cmc
outsb
aaa
gs
add
dec
lea
mov
sti
shlb
js
test
mov
mov
testb
fwait
push
xchg
insl
and
mov
xchg
aas
pop
mov
sbb
jmp
addl
ja
inc
xchg
fimuls
int
icebp
in
cs
mov
loop
sbb
cmpl
fimuls
inc
int
rolb
xor
dec
mov
movsl
lds
adc
call
pop
push
sbb
or
jns
jmp
jg
inc
xor
jl
push
xchg
out
in
into
bound
test
int
mov
xor
mov
in
int3
icebp
inc
cmp
or
outsb
sub
imul
pop
das
cmc
movl
enter
mov
in
movsl
xchg
mov
adc
lods
out
push
hlt
mov
and
mov
jle
sub
and
adc
push
frstor
fsubl
sub
hlt
mov
mov
pop
mov
pop
xor
inc
xor
in
dec
out
nop
popa
fcomi
mov
xor
iret
out
les
fucomip
pop
stos
outsb
jl
pop
fmuls
bnd
mov
xor
sbb
add
fcoml
loopne
push
push
enter
arpl
jl
jl
shrl
out
lods
ljmp
test
loop
jno
sahf
jnp
pop
jp
mov
mov
sahf
mov
in
mov
icebp
xor
push
and
xor
sub
adc
mov
pop
pushf
aas
jns
xchg
lea
mov
je
xor
je
and
stc
test
cli
jmp
cmp
pusha
dec
cmp
fisttps
outsl
leave
cmpsb
rolb
and
lds
lods
sbb
add
jg
mov
mov
push
push
dec
pop
jle
mov
ja
mov
insb
xchg
adc
jecxz
iret
pop
dec
fcmovnbe
xchg
or
mov
outsl
and
dec
inc
subl
jne
movsb
fcompl
jmp
dec
cmpsb
xchg
movsl
ds
cli
mov
and
and
pushf
sub
lret
mov
xchg
xor
jbe
arpl
jle
or
pop
and
pusha
fidivs
jg
aam
adc
in
int
mov
leave
push
push
push
ret
and
lods
icebp
filds
popa
dec
aaa
or
adc
fmuls
lret
stos
clc
decb
mov
push
and
imul
adcl
xor
xchg
shr
dec
push
adc
shufps
push
xchg
je
test
mov
leave
jno
fldl2e
cmp
std
or
negl
cmc
dec
xchg
out
addl
cwtl
lds
sarl
popa
jns
pop
add
mov
fs
mov
aas
mov
cmp
rcrb
jle
pop
sbb
popf
and
jl
iret
jmp
add
add
add
add
push
pusha
add
addb
cmp
add
adc
inc
addb
adc
add
test
bound
sbbb
test
inc
add
inc
sbb
inc
test
add
inc
adc
dec
inc
mov
add
add
mov
or
addb
dec
xor
adc
add
inc
inc
inc
inc
add
add
and
and
adc
add
bound
inc
add
add
adc
mov
add
mov
inc
and
add
or
and
addl
push
or
add
and
add
add
add
add
add
inc
or
add
add
adcl
add
sub
and
andb
add
add
adc
add
add
push
test
or
add
pusha
adc
xor
adcb
adc
add
and
add
loopne
pusha
or
inc
pop
rolb
adc
bound
rolb
add
nop
bound
add
incl
inc
add
pop
add
add
addb
adc
add
cmp
push
pusha
pusha
mov
add
pusha
adc
add
mov
popa
add
inc
or
adcb
inc
addl
and
add
inc
add
and
mov
add
addb
mov
inc
add
mov
add
adc
or
test
ss
and
add
add
pop
loopne
or
jl
adc
and
add
push
inc
add
and
addb
add
test
or
jb
cmp
and
xor
inc
add
adc
add
adc
inc
pusha
or
inc
adc
js
mov
test
inc
add
add
sub
add
add
or
and
adc
add
add
xor
add
push
add
add
inc
or
add
adc
adc
jo
xlat
inc
xchg
inc
inc
rolb
inc
add
and
xchg
addb
in
mov
sub
add
add
add
pop
add
add
add
add
inc
inc
add
add
mov
mov
push
and
enter
fs
adc
add
xchg
addb
mov
addb
ret
adc
add
add
add
add
rolb
add
add
adc
add
sbb
mov
nop
xchg
add
add
push
and
add
adc
add
add
sub
add
jne
add
adc
add
or
add
add
sbb
add
and
adc
orl
and
imul
sbb
add
inc
add
dec
push
inc
inc
nop
push
push
add
add
adc
add
rolb
add
add
add
mov
add
adc
inc
mov
and
add
rolb
add
add
adcb
add
add
add
dec
mov
add
add
mov
add
add
add
addb
add
addb
inc
add
and
pusha
add
inc
add
mov
add
add
nop
mov
push
dec
inc
pop
inc
or
adc
inc
sbb
and
add
or
add
or
dec
les
xchg
add
pop
arpl
jo
adc
add
inc
orb
push
inc
rolb
sub
push
addl
push
adc
roll
add
add
inc
or
xor
inc
inc
add
add
add
add
nop
adc
add
add
or
addb
or
add
add
add
add
inc
inc
add
add
add
addb
addb
in
inc
add
inc
nop
popl
mov
sbb
andb
or
adc
roll
sbb
mov
adc
add
inc
adc
or
add
add
nop
add
add
add
or
add
push
mov
bound
or
test
adc
dec
adc
add
add
xorb
mov
addb
addl
adcb
inc
adc
add
inc
inc
and
mov
nop
sbb
add
add
sub
add
add
add
add
orb
adc
nop
inc
adc
int3
add
add
xchg
add
andl
adc
mov
add
add
inc
test
or
add
add
xchg
adc
and
mov
add
add
addb
andb
add
inc
adc
inc
add
lds
inc
add
or
or
icebp
shl
inc
adcb
add
pusha
add
or
add
mov
add
add
add
adc
adc
dec
add
xor
adc
shrb
add
add
add
and
add
add
add
add
add
and
push
orb
adc
or
add
add
add
addl
inc
loopne
add
dec
and
insb
or
add
inc
and
test
or
inc
inc
cwtl
rolb
add
mov
inc
or
movl
and
add
adc
add
and
add
and
add
adc
add
dec
adc
xchg
sbb
dec
add
add
mov
adc
subb
add
and
add
add
or
add
add
inc
mov
add
ret
add
sbb
add
add
xchg
dec
or
adc
add
adc
add
adc
xor
movsl
inc
adc
add
add
add
add
dec
add
test
add
mov
mov
add
and
or
test
add
pop
or
mov
add
bound
add
add
addb
and
orb
adc
adc
addb
inc
pop
or
or
adc
test
add
add
mov
inc
add
addb
and
adcb
insb
add
xchg
test
inc
dec
add
orb
stos
adc
inc
pop
and
adc
pusha
mov
inc
and
and
add
add
and
add
add
add
and
add
fidivl
or
inc
add
addl
inc
and
add
adc
add
andb
and
inc
push
inc
add
add
add
add
or
addb
push
add
and
les
mov
add
add
adc
or
inc
orl
and
inc
add
or
add
inc
addl
addl
adc
inc
add
dec
inc
push
add
push
xchg
or
inc
test
and
pop
and
add
add
add
or
les
sbb
pusha
adc
loopne
ret
or
inc
mov
test
add
enter
add
push
add
inc
and
push
add
cmp
push
inc
adc
and
or
add
add
add
adc
add
test
add
add
adc
roll
xchg
adcl
and
inc
add
add
add
push
add
add
inc
inc
add
xorl
add
add
addl
add
add
mov
cmp
add
adc
add
inc
add
add
or
rorb
add
add
and
adc
pusha
adc
add
inc
add
adc
add
addb
inc
mov
and
add
and
mov
add
add
enter
inc
test
add
or
xchg
fcmovb
or
add
add
add
add
push
mov
and
addb
and
orb
inc
push
xor
or
xor
add
inc
inc
add
and
or
add
sbb
add
add
add
add
add
push
add
inc
add
or
add
popa
add
mov
and
add
add
inc
add
subb
add
push
and
movsb
add
or
mov
xor
add
add
or
inc
mov
inc
mov
inc
nop
add
add
push
mov
xor
push
test
inc
pusha
mov
add
add
adc
push
loopne
push
pusha
add
loopne
add
add
add
add
add
add
inc
and
and
add
adc
add
add
adc
orb
adc
adc
add
add
add
xorb
xlat
imul
push
and
inc
and
add
add
aam
pop
rolb
add
inc
rolb
add
adc
mov
adc
addb
add
adc
mov
push
rclb
add
add
inc
adc
add
add
add
call
add
and
pop
mov
add
inc
enter
add
and
and
dec
inc
or
add
mov
data16
add
add
cmp
inc
sub
loopne
push
push
add
orl
adc
xchg
or
les
push
addl
and
inc
add
mov
adc
dec
add
push
nop
add
orb
add
or
inc
rolb
test
add
inc
and
adc
addl
add
add
add
add
or
inc
add
sbb
inc
add
popa
add
or
adc
add
inc
add
add
and
or
or
inc
push
addb
and
add
add
inc
or
add
add
and
or
or
add
test
add
add
adc
or
inc
add
add
sbb
test
adc
add
nop
and
add
inc
pushf
add
addb
sahf
add
add
loop
movsl
and
add
or
push
addb
subb
test
add
cmpsb
adc
add
add
add
inc
mov
mov
movl
add
inc
test
inc
add
and
or
add
add
add
ret
mov
add
adc
add
push
aaa
add
pusha
lods
or
or
or
or
inc
addb
or
bound
adcb
sbb
inc
shrb
adc
add
and
or
adcb
and
add
or
inc
or
or
add
add
add
or
addl
cmp
sbb
or
or
or
mov
pusha
adc
or
subb
or
add
or
inc
andb
or
inc
imul
add
add
add
or
addb
or
and
add
mov
enter
add
push
cs
and
loope
addl
inc
bound
test
add
adcb
add
mov
or
add
inc
and
add
add
dec
add
or
adc
add
add
add
orb
mov
addb
and
or
add
add
add
add
add
and
and
add
add
sbbb
addb
jo
or
adc
and
inc
xchg
or
inc
and
xor
sbb
dec
add
inc
or
xor
and
adc
add
adc
add
inc
adc
push
sbb
pusha
add
or
nop
test
add
adc
cltd
inc
add
mov
add
inc
add
add
rorb
or
dec
inc
xor
or
add
and
add
add
add
inc
add
test
add
inc
inc
cmp
mov
add
inc
add
inc
pusha
addb
add
or
add
addb
add
and
adc
add
or
add
add
or
add
and
or
and
xor
or
and
add
mov
dec
inc
andb
inc
and
add
adc
or
inc
addb
pusha
add
ret
add
add
add
add
push
mov
loop
sbb
add
or
add
dec
xor
sbb
xchg
mov
inc
mov
push
add
add
imul
insb
add
add
add
add
add
or
or
or
add
add
add
add
bound
inc
adc
push
das
or
add
add
mov
pusha
or
add
add
add
add
push
add
dec
and
and
nop
push
lds
les
adc
add
pop
or
add
xchg
xor
add
mov
addb
add
aam
and
add
adc
inc
and
add
or
adc
push
pushf
and
push
adcb
test
add
mov
adc
mov
add
jo
push
popa
inc
adc
add
inc
or
add
add
add
or
add
add
adc
dec
andb
and
pop
inc
add
push
and
or
and
mov
add
push
add
add
add
add
or
push
adc
sbb
or
or
.byte
mov
ret
and
adc
dec
jb
stos
mov
outsb
mov
stos
insb
test
divl
adc
push
shlb
add
dec
cmpsb
ror
call
dec
sub
xor
dec
repz
cmp
je
jl
cwtl
mov
push
sbb
add
arpl
aad
sub
cmp
rolb
orl
mov
pusha
icebp
add
outsl
or
icebp
imul
cltd
scas
aas
pop
mov
outsl
dec
dec
xchg
sub
or
mov
dec
jmp
jle
out
jae
pop
aad
cmc
aas
mov
xor
inc
stos
gs
xlat
sti
loopne
sub
es
add
sti
data16
outsb
push
popa
jnp
cmpxchg
lods
addr16
pop
jno
dec
or
les
cmp
leave
addr16
inc
xchg
push
jle
adc
cmc
enter
shlb
dec
mov
or
add
mov
ret
iret
hlt
outsb
xchg
or
xchg
lahf
sub
jg
in
add
icebp
aad
jbe
rcrl
mov
int3
push
out
out
or
ss
inc
cld
jo
in
adc
fsqrt
outsb
imul
adc
aas
shrb
test
jecxz
stos
xlat
imul
pop
pop
mov
mov
int3
sbb
or
pop
daa
gs
cmp
add
fstps
mov
xchg
and
cmc
sub
dec
pop
cmp
fs
mov
xlat
jge
enter
fisttpll
aas
lret
cmpsl
push
cmc
mov
add
xchg
mov
sahf
mov
ds
out
mov
shr
outsl
dec
add
std
xor
fdivrs
push
sbb
out
xchg
xchg
int
cmc
fistl
test
push
insl
data16
outsb
xchg
mov
movsl
pushf
pop
pop
repz
dec
push
push
add
mov
lret
add
or
or
add
sbb
jo
hlt
fisubl
cltd
xchg
pop
lret
iret
mov
jl
inc
orb
mov
ficoml
fstl
xchg
lret
push
sbb
push
pushf
movsb
nop
inc
push
dec
and
rorb
dec
xor
mov
loope
sub
sbb
popa
jecxz
mov
mov
xor
in
sahf
pop
popa
adc
xor
aas
in
mov
mov
test
sbb
outsb
mov
loop
mov
scas
sarb
ret
sbb
add
mov
dec
aas
stc
fcompl
inc
shrb
das
js
or
loope
sbb
test
popa
ljmp
int3
mov
and
call
rcrl
in
out
inc
cmp
mov
outsb
add
ljmp
loopne
pop
stos
gs
sbb
call
stc
es
mov
cs
loop
imul
je
jg
dec
push
stos
jmp
mov
out
jns
negb
fists
jp
das
aas
movsb
inc
mov
out
gs
dec
xchg
scas
movsb
dec
inc
mov
mov
outsb
outsb
mov
mov
push
test
dec
in
sahf
xchg
js
fimuls
stos
push
push
mov
out
xor
movsl
mov
mov
mov
inc
jnp
sti
cmp
xchg
pusha
mov
sub
mov
inc
jg
test
xchg
sub
enter
cltd
or
sti
dec
xor
scas
fsts
les
adc
rcrb
fsubl
stos
loope
outsb
mov
outsb
sti
mov
xchg
in
jmp
outsb
les
clc
test
jb
inc
in
dec
xchg
fs
cmp
xor
aaa
nop
xchg
mov
pop
enter
or
prefetchwt1
push
cs
add
xchg
jp
dec
insl
pop
repz
jae
in
insb
loopne
jne
aas
inc
sub
loope
sahf
icebp
pop
inc
and
cs
std
mov
pushf
cmpl
xlat
pop
lods
pop
dec
loop
mov
pushw
outsl
imul
iret
and
in
jno
inc
ljmp
sqrtps
arpl
xor
loope
inc
test
dec
pop
add
dec
dec
and
in
push
sbbl
in
cltd
dec
nop
negl
enter
lock
fwait
dec
call
or
loope
sbb
flds
call
aas
mov
xchg
mov
sbb
sbb
push
pop
mov
outsl
mov
lahf
sbb
cs
adc
stc
cmc
mov
lcall
sbbb
sbb
ljmp
rorb
inc
and
stc
inc
xor
mov
int3
outsb
sbb
loope
outsb
ja
test
jnp
sub
ljmp
jbe
pop
sbb
adc
pop
sub
jmp
dec
dec
sbb
lock
sub
xchg
jp
pop
dec
fldenv
add
enter
addr16
and
lds
repz
mov
sub
jmp
fbstp
fimuls
repz
pop
adc
jns
xchg
or
and
pop
jns
lcall
fwait
adc
divb
jne
jmp
inc
cmp
lods
sbb
pop
mov
jnp
jbe
xor
and
mov
sbb
aam
adc
mov
pop
dec
xor
outsl
fdiv
mov
push
out
adc
xchg
cwtl
push
outsb
add
jle
sbb
in
gs
and
mov
dec
jg
pusha
jns
dec
mov
push
xor
mov
cli
decl
mov
icebp
jae
push
sbb
push
sti
mov
push
js
movsb
pop
outsl
or
adc
addr16
aad
shrl
pop
lock
pop
out
mov
xchg
sbb
inc
push
mov
or
outsb
jmp
lcall
cli
adc
jno
lahf
mov
addr16
dec
test
sub
out
mov
jle
jp
bound
cmp
das
push
das
mov
cli
mov
mov
jmp
fnstsw
xor
push
lahf
xchg
xchg
xor
mov
pop
or
pop
sbb
mov
mov
mov
push
mov
lahf
cltd
sub
aad
std
popf
mov
jb
lret
mov
push
xchg
fistps
stos
cmp
push
dec
xor
outsb
ja
les
adc
mov
inc
or
movb
cwtl
popf
subb
in
sub
out
xchg
pop
xor
pop
mov
jns
sub
or
lret
mov
mov
xlat
into
jno
mov
mov
inc
adc
outsb
int
lea
cmp
out
fucomi
mov
cltd
imul
repz
push
sub
out
mov
pop
dec
xchg
mov
inc
orb
and
sbb
imul
sti
jmp
cmpl
in
fidivl
xchg
movsb
mov
popa
cmp
dec
andl
sbb
addr16
xchg
dec
add
into
stc
aam
cmpsl
dec
sbb
xlat
movsb
sbb
sbb
dec
sbb
outsl
jg
andl
xor
lea
iret
push
cli
adc
into
adc
jg
pusha
lcall
mov
dec
data16
pusha
xchg
sarl
mov
sub
int
mov
loop
push
sbb
adc
jle
sub
jmp
mov
mov
movb
xor
sbb
cli
push
xchg
push
adc
aas
enter
in
mov
sbb
sub
in
scas
cmp
mov
add
cwtl
out
subb
pop
out
cmp
out
faddp
xchg
lea
jmp
adc
subb
js
dec
aas
cmpsl
adc
pop
fsts
in
aad
jae
rcr
les
cmpsl
cmpsb
outsb
cmp
xchg
inc
or
dec
sbb
jne
sarb
adc
fiadds
sub
int3
popa
jge
imul
xor
outsb
xchg
jmp
imul
jge
mov
test
dec
xor
sub
inc
test
adc
xchg
and
push
cmp
xchg
sub
in
out
dec
loopne
pop
cmp
imul
inc
adc
mov
jo
cmc
lods
aas
cmp
insb
or
mov
lea
jle
dec
scas
out
rcll
push
iret
ds
fildl
gs
movsb
mov
dec
fnsave
dec
add
sub
lods
xor
negb
enter
mov
gs
cmp
xchg
dec
jne
and
mov
push
push
jne
js
outsb
fimull
roll
insb
enter
incl
idivb
xchg
cmp
aad
insb
cs
test
mov
movl
sbb
movsb
or
pop
mov
sbb
into
cmpb
fbld
or
xchg
roll
dec
loopne
fsubl
sub
push
orl
xchg
or
adc
xor
or
adc
fldt
jg
inc
out
outsl
in
imul
cli
or
dec
push
xchg
outsb
push
rolb
std
jmp
xchg
and
mov
xor
pop
push
int3
lret
aam
pushf
add
ret
scas
bound
in
scas
dec
inc
out
pusha
push
dec
mov
les
dec
rorb
movsl
in
stos
push
mov
aam
push
cld
mov
pop
dec
push
dec
test
rcl
enter
outsb
es
xor
and
cmp
scas
test
pop
xchg
lea
sub
xchg
cli
jge
or
mov
js
outsb
ret
sbb
mov
in
push
ja
cmp
js
outsb
jecxz
and
mov
mov
mov
xchg
xor
arpl
or
jmp
scas
xchg
sarl
pop
mov
into
loope
cmp
test
xchg
jl
fdivrs
jo
out
jno
aas
sub
ljmp
outsl
movsb
stos
loope
loope
aas
dec
jl
inc
jp
mov
subb
insl
cmp
or
cs
cld
dec
xchg
xchg
stos
sub
addr16
dec
stc
dec
lods
test
and
iret
pop
rcll
bnd
gs
and
push
xchg
mov
call
stos
mov
dec
push
and
iret
mov
mov
insb
rcrl
or
aas
push
mov
loop
xchg
or
add
stc
out
inc
inc
or
lods
dec
aam
adc
test
fmuls
es
lea
aas
xchg
repz
mov
movswl
lret
adc
inc
leave
jp
cli
sbb
jno
fadd
dec
stos
jnp
push
dec
mov
sub
arpl
outsl
hlt
jmp
insl
mov
push
std
out
adc
fwait
sub
adc
outsb
push
icebp
jl
cmpsb
test
ljmp
mov
and
cmp
and
or
pop
xchg
dec
outsb
inc
jmp
lock
push
adc
dec
cmovge
outsl
out
lahf
mov
mov
sub
scas
cltd
dec
jl
add
ret
push
data16
lcall
in
movsb
aad
add
je
cmp
cmp
mov
fbld
or
aas
cltd
or
sahf
mov
mov
inc
mov
outsb
or
sub
idivl
cmp
xor
gs
scas
cltd
and
lods
xor
outsb
sub
loope
fisubrl
in
insl
test
int3
or
jmp
shl
xlat
out
fcomip
sbb
in
jmp
mov
push
loop
jmp
jnp
dec
cwtl
insb
test
cli
dec
aaa
aaa
xor
arpl
outsb
ds
sbb
fldenv
imul
xchg
cmp
mov
xor
xchg
dec
xlat
ja
js
cmpsb
jmp
loop
or
mov
mov
add
or
outsb
aad
xchg
xor
xor
inc
jbe
mov
push
std
dec
mov
call
jno
iret
push
pop
loope
jne,pn
sub
mov
mov
push
pop
pushf
mov
inc
out
cmp
adc
popa
sbb
sub
bound
xor
call
cmp
imull
outsb
pop
enter
sub
orb
dec
outsb
pop
pop
push
cmp
or
or
xchg
fdivs
cld
push
js
in
fldcw
call
xchg
insb
icebp
aas
hlt
and
adc
inc
call
sub
pop
mov
sub
js
stos
hlt
icebp
mov
dec
sbb
adc
ds
adc
int
je
fsts
stos
gs
mov
dec
mov
adc
cli
loop
and
subl
mov
cmp
push
xchg
or
test
jmp
sub
lods
mulb
repnz
les
cmp
and
xchg
or
bound
cmp
mov
jecxz
cmp
fisubrl
mov
push
sbb
enter
in
push
mov
into
add
cmp
mov
das
push
jo
xchg
jae
mov
cmpl
pop
insb
dec
enter
xlat
mov
dec
cmc
mov
cltd
mov
dec
out
shrl
aas
xor
out
outsb
mov
push
dec
pop
cmp
repnz
push
jae
mov
or
icebp
mov
mov
loope
lea
mov
pop
movsb
cmp
nop
adc
jg
enter
popf
push
push
ds
lcall
scas
fs
test
imul
or
cld
pop
dec
lods
jge
je
outsb
lock
jmp
jnp
cld
mov
jbe
jno
sub
test
outsl
imul
clc
jae
inc
and
and
gs
test
mov
xor
jo
fs
push
pop
sbb
xchg
insl
xchg
outsb
jg
push
inc
test
mov
outsb
out
out
inc
emms
or
push
imul
call
popf
enter
lock
movsb
sub
fs
loop
icebp
das
add
xor
and
pop
adc
ret
sub
repz
je
mov
push
cmp
cmpsl
cmp
nop
inc
lret
fldcw
or
inc
repz
jae
sbb
adc
push
jmp
jb
mov
decl
jns
dec
out
dec
add
stos
repnz
push
nop
cs
stos
loop
mov
push
imul
jmp
fdiv
jmp
subb
in
fsub
xchg
mov
push
addr16
sub
inc
sbb
pop
cltd
stos
stos
adc
jl
sub
mov
mov
cli
push
jl
cmp
mov
pop
or
cld
xchg
jbe
xor
cmp
mov
lcall
and
ret
into
xor
adc
inc
data16
mov
adc
popf
mov
sbb
in
sub
rcll
adc
mov
jae
rcll
stc
aas
insb
jmp
sti
jo
sbb
inc
incb
shlb
js
sub
cld
jno
pop
xchg
outsb
jecxz
mov
outsl
cs
mov
subb
enter
push
push
in
add
js
cld
iret
in
pop
sahf
popf
outsb
stc
cs
dec
push
pop
shr
jge
pop
clc
sub
push
mov
mov
rcrb
mov
mov
movsb
popa
rorl
insl
ss
iret
daa
cmp
ror
jg
lret
popl
inc
jg
or
outsl
dec
xlat
jmp
outsb
mov
sub
sbb
in
pop
sar
mov
mov
repz
dec
arpl
test
fnsave
ret
das
test
add
and
and
rclb
adc
fistl
mov
pop
jmp
out
add
outsb
je
pushf
xlat
int
pusha
cmp
sub
add
aaa
adc
pop
xor
ljmp
out
rcr
mov
outsb
outsl
and
push
rorl
jmp
loop
and
cwtl
sbb
rep
call
jno
iret
sbb
sahf
push
pushf
into
decl
daa
pop
cmp
movsl
mov
xchg
xacquire
inc
clc
jno
xor
xchg
enter
icebp
jne
mov
jl
iret
ljmp
adc
dec
adc
sarl
push
sub
shll
mov
add
add
push
cltd
jg
and
push
inc
mov
sub
lahf
sti
fbld
add
mov
in
mov
inc
push
add
addl
clc
and
sarb
lcall
sub
aam
cmp
pusha
mov
and
lods
push
ljmp
inc
hlt
dec
dec
in
ljmp
xor
and
sbb
pop
adc
lret
scas
in
int3
or
js
dec
dec
push
pop
xor
jp
subb
pushf
icebp
lcall
in
pop
push
mov
outsb
inc
rcrl
dec
inc
xor
dec
cltd
xor
lods
cmp
cltd
jl
jge
sub
sbb
dec
cltd
leave
ja
dec
dec
pop
or
mov
mov
arpl
mov
mov
push
jg
add
mov
cmp
inc
int3
inc
dec
out
mov
mov
sahf
mov
jmp
push
inc
addr16
call
jp
fsubrl
in
movsl
or
jmp
sbb
cmp
jl
insl
imul
inc
xlat
lcall
dec
mov
inc
pop
pop
mov
and
jp
scas
out
call
loop
push
in
xor
pop
inc
adc
leave
xor
icebp
sub
scas
adc
adcl
sub
push
and
inc
int
adc
mov
ss
mov
push
fcomip
push
cs
pop
sbb
and
aas
sahf
adc
add
dec
pop
lret
pop
push
pop
aas
xlat
adc
outsb
sbb
jle
out
xchg
sub
test
mov
nop
fcmovnu
dec
sbb
pop
icebp
orl
addb
jmp
repnz
js
movb
notl
loop
cmpsl
cld
outsb
addb
xlat
gs
enter
jno
add
inc
leave
push
jbe
rcr
jmp
rol
mov
pushf
add
dec
lds
and
pop
pop
in
fiaddl
popa
add
inc
mov
jnp
aaa
fisubrs
jne
cmp
lods
sub
dec
pop
cmp
cs
xchg
movsb
pop
dec
mov
push
into
jle
adc
data16
insl
xchg
push
js
cld
dec
out
mov
ret
push
xchg
addr16
ds
and
xlat
mov
imul
or
dec
mov
and
and
xor
ljmp
xor
clc
inc
mov
shl
repz
pushf
fnsave
pop
insb
call
lret
mov
movsb
sbbb
pop
cmpsl
lods
inc
pop
scas
or
dec
dec
and
inc
jp
lret
push
outsb
cmp
or
pop
outsl
mov
aaa
roll
mov
push
dec
fs
xchg
jnp
or
ja
stos
fstl
jb
xorl
hlt
inc
dec
gs
out
xor
xor
imul
push
hlt
ret
xchg
mov
dec
mov
int3
dec
stos
outsb
inc
mov
adc
push
dec
popf
mov
mov
sbbl
fsub
imul
in
movsl
pop
jae
inc
ljmp
add
shrl
adc
mov
push
lods
dec
add
jno
daa
inc
mov
lret
or
ljmp
scas
dec
mov
outsl
mov
scas
dec
int3
insb
mov
pop
adc
pusha
jb
jno
rclb
or
stc
repnz
jns
add
adc
sub
pop
std
adc
outsl
leave
cmp
push
iret
dec
popa
xchg
jmp
lods
lods
aam
push
scas
mov
mov
cwtl
pop
pusha
pop
or
cmp
aas
dec
fcomps
sbb
mov
rcr
test
push
sub
clc
shrb
push
lods
lock
and
shl
mov
pop
pop
orl
cmp
dec
mov
pop
mov
sub
add
mov
xor
test
leave
sub
popf
mov
cmp
jmp
xchg
mov
pop
cmp
jno
fs
jno
mov
mov
es
or
and
dec
je
mov
dec
jns
sub
insb
pop
dec
addl
inc
and
adc
mov
push
mov
mov
lods
push
xchg
inc
pushf
bound
pop
aad
and
mov
pop
cmp
iret
cmp
dec
sub
mov
int3
stc
hlt
pop
shrb
je
dec
int
add
mov
stos
movlps
daa
clc
sti
inc
fadd
nop
inc
sub
pop
mov
mov
xor
sub
push
orb
mov
or
jg
cmp
ret
sub
rorb
out
bound
jo
jl
icebp
mov
add
xchg
mov
push
stos
insb
lock
mov
adc
cmp
call
mov
outsl
xor
mov
outsb
into
jb
test
jmp
aad
xchg
or
test
push
xor
clc
push
in
xchg
or
loopne
mov
push
sbb
pusha
dec
add
fidivrs
jo
outsb
popf
xorl
jl
in
test
or
mov
stc
sub
mov
mov
popf
fmuls
fmull
push
mov
lea
dec
std
dec
test
cmpsb
scas
gs
cmp
jmp
loope
jecxz
inc
out
test
jle
and
mov
das
push
cmc
lock
adc
mov
sbb
push
int3
jle
adc
xor
xchg
fdiv
and
and
and
out
popf
loop
xlat
xor
xor
in
fidivs
pop
dec
rolb
mov
andl
xor
add
xchg
shl
scas
orb
mov
bound
jmp
fcmovbe
scas
sub
push
dec
inc
fisubrs
push
orl
add
push
sub
inc
adc
fistpl
xor
fsubrs
mov
or
push
sarb
xchg
mov
lret
clc
mov
mov
rorb
mov
scas
cmpsb
add
xor
add
cs
in
rcrl
ret
mov
and
or
neg
data16
mov
leave
jmp
icebp
dec
imul
test
cmp
jno
jae
lahf
movsb
outsb
push
push
mov
jmp
inc
jns
lea
fistpll
mov
push
addb
fstpt
adc
aam
getsec
mov
js
es
fcompl
stos
or
pusha
mov
adc
ja
dec
test
and
xorl
xor
lea
jns
sub
mov
aas
loope
dec
pop
push
test
nop
loope
sti
mov
mov
ds
dec
fiaddl
push
pushf
negb
xchg
mov
in
enter
aam
loop
mov
mov
sub
push
inc
dec
lahf
std
lahf
addb
nop
out
jge
lret
imul
vmovdqu
xor
mov
aad
mov
or
rclb
jnp
testl
in
sahf
add
xlat
xlat
in
push
sub
shrl
outsb
addb
mov
sub
push
add
or
int
add
adc
pop
stos
mov
scas
hlt
aaa
fs
dec
mov
scas
clc
push
gs
scas
bnd
sbb
in
inc
clc
fbstp
xchg
scas
push
enter
xor
enter
inc
imul
subb
dec
xor
jl
sbb
pusha
sbb
sbb
adc
dec
xchg
fmull
pop
insb
inc
and
divb
push
add
iret
addr16
jle
push
stos
icebp
jmp
mov
fidivs
notl
in
sub
push
pushf
and
rorb
into
cmc
fldt
pop
out
mov
aad
inc
add
mov
dec
icebp
mov
mov
mov
in
xchg
add
add
mov
popf
mov
push
leave
or
cmpb
or
jecxz
test
mov
dec
adc
jg
addb
loopne
push
dec
je
xchg
test
dec
lea
adc
push
jge
jmp
push
xor
pop
shrl
mov
ljmp
loopne
lock
sub
loopne
lock
test
mov
sbb
mov
mov
mov
inc
sti
leave
jg
repz
gs
mov
call
loopne
mov
popa
xchg
ds
inc
xor
mov
lods
sbb
aas
sub
mov
xor
negl
popa
out
test
pop
jmp
icebp
inc
mov
sbb
out
mov
shll
sbb
cmp
mov
lods
out
into
jp
loopne
sub
pushl
and
outsl
push
in
ret
push
shlb
inc
pop
and
inc
addb
mov
call
push
xor
mov
push
mov
mov
xor
inc
mov
pop
aam
xor
repnz
sti
fucomi
outsb
mov
hlt
add
movsb
roll
outsl
sub
mov
mov
in
xchg
push
mov
pop
add
rsm
jbe
in
dec
jns
movl
mov
nop
mov
push
add
mov
mov
ja
ss
cli
push
sub
or
xchg
outsb
sub
aaa
fimull
cli
scas
dec
out
sbb
shll
and
cwtl
sub
mov
fidivl
lock
adc
cltd
addl
push
adc
out
sub
mov
mov
hlt
sbb
fimuls
cmc
mov
loope
cmp
xchg
loope
add
lods
cmp
adcb
dec
and
fs
inc
lret
mov
iret
push
sbb
testl
inc
mov
int3
outsb
shrl
ljmp
jo
mov
lods
stc
test
adc
or
sub
push
dec
cmp
xor
out
pop
repz
pop
push
lea
lcall
jmp
loope
iret
mov
sahf
sub
rol
xchg
push
or
or
cmc
pop
bswap
hlt
loop
out
mov
push
cmpsb
lea
out
mov
mov
dec
push
mov
dec
push
jp
popf
jne
mov
cmp
sbb
xchg
jmp
lahf
push
loopnew
shlb
push
adcl
int
pop
mov
jnp
jo
ja
aaa
dec
jae
imul
push
loopne
rorl
xchg
pop
fdivrl
cmp
int
into
movsb
in
push
psrlw
inc
jl
and
mov
into
mov
push
adc
mov
mov
lea
std
jbe
lods
cmp
push
sub
fadd
pop
xchg
outsb
mov
mov
jmp
adc
mov
aam
push
in
adc
stos
jae
mov
ja
ja
mov
mov
out
and
mov
mov
call
pop
dec
rcl
jl
adc
push
xor
sahf
adc
or
dec
xlat
dec
popf
sbb
sub
outsb
add
fcompl
test
mov
and
pop
lock
testb
ljmp
shrb
lret
mov
jae
lods
jl
addr16
and
lret
jmp
pop
iret
imul
call
inc
icebp
icebp
push
mov
cmc
inc
xorl
pusha
out
or
data16
std
call
dec
imul
lret
mov
mov
sub
loopne
fists
in
and
movsb
sub
xchg
sbb
outsl
test
sbb
shr
pop
mov
xchg
pop
in
sbb
scas
xor
xlat
in
nop
jno
sti
pop
jp
and
mov
cs
jb
sbb
shl
leave
ss
and
lea
pop
inc
dec
into
push
or
push
loope
jne
mov
js
fadd
movsb
mov
push
dec
xor
mov
out
add
out
add
mov
xor
dec
clc
fmulp
mov
cmc
aad
inc
adc
sbb
stc
xor
ljmp
cs
pop
outsb
nop
iret
sbb
lods
daa
xchg
les
mov
jecxz
mov
fisubrs
jno
fnstsw
inc
fbstp
jg
sti
jecxz
mov
dec
sub
dec
pop
faddp
sub
xor
mov
out
adc
leave
fsubrs
cld
jmp
out
pushl
outsl
repz
mov
addr16
push
jb
mov
lods
xchg
rol
jmp
ds
push
jae
mov
scas
clc
inc
ds
sub
loopne
mov
lahf
js
sbb
or
int3
mov
outsl
pop
or
sub
xchg
xchg
shlb
or
and
dec
ss
test
push
insl
repz
in
andb
sahf
mov
add
out
jp
jae
xlat
pop
jmp
push
imull
movsb
mov
jae
mov
mov
push
lea
add
xchg
mov
cmpsb
jb
or
inc
push
cmp
dec
xor
arpl
mov
lods
pop
cli
movsb
int
notb
adc
stos
arpl
inc
call
imul
adc
data16
mov
dec
lock
sub
sub
into
add
fsubl
mov
sbb
and
dec
sub
repnz
into
or
gs
hlt
push
add
es
mov
adc
add
sub
ljmp
jge,pn
cmp
push
in
movsl
repz
sbbl
cmp
jo
xchg
stc
adc
in
jmp
add
nop
xchg
in
mov
into
cltd
sub
add
dec
insl
xlat
push
aam
ret
out
push
mov
xchg
mov
mov
ss
fcmove
sub
outsb
dec
mov
pop
push
fnstsw
lock
addr16
pusha
adc
jg
sbbl
jo
mov
stc
jg
outsb
cmp
stos
lods
sub
addr16
test
ljmp
orb
push
lcall
mov
or
dec
test
mov
xchg
or
imul
or
ficoms
pop
daa
mov
testb
mov
testb
scas
scas
jl
jae
outsb
sub
ret
in
mov
inc
imul
cmp
insb
outsl
cmp
and
lahf
insl
mov
jle
mov
in
or
xchg
ljmp
outsb
mov
sub
xor
dec
repnz
adc
loop
loop
cld
push
clc
adc
scas
xchg
push
dec
leave
xchg
movsb
or
pop
cmp
insb
test
and
push
js
xchg
lret
mov
mov
mov
dec
roll
or
outsl
loopne
cmc
or
lcall
or
popa
out
jg
stos
dec
js
mov
mov
push
jnp
pop
push
dec
sahf
dec
or
or
add
jno
les
sub
imul
inc
mov
push
xchg
orl
dec
inc
outsl
xor
cs
cwtl
jmp
fdivp
mov
mov
nop
imul
inc
in
cmpsl
jmp
sub
aad
pop
pop
jl
push
dec
sub
or
fsubrl
subl
xchg
nop
push
or
xlat
sbb
shrb
and
mov
mov
cmpsl
dec
iret
pop
in
or
call
adc
clc
lock
inc
cmp
sbb
ds
mov
mov
and
test
fs
das
sbb
pop
inc
inc
add
jo
mov
inc
or
pop
inc
aas
sub
lea
sbb
xor
jmp
in
pop
xlat
loop
arpl
xchg
inc
scas
xlat
ljmp
jbe
dec
dec
lds
outsb
inc
ja
lret
mov
fistpl
in
rcll
jae
push
out
cs
inc
push
aad
repnz
pushfw
adc
mov
imulb
enter
push
push
insl
inc
xchg
je
jns
bound
push
dec
dec
inc
mov
xchg
rcrb
out
stc
sahf
out
add
test
in
dec
enter
jg
xlat
subb
dec
and
mov
outsb
daa
idivl
aam
or
std
mov
outsb
mov
out
fisttpl
outsb
iret
jge
js
repz
iret
fs
mov
dec
shrb
xor
pop
mov
sub
pop
daa
push
add
xchg
insb
inc
les
in
or
inc
jmp
cmp
mov
or
shl
xor
mov
push
adc
add
bound
xchg
sub
out
jno
dec
mov
add
outsb
aas
sbb
dec
jmp
imul
aad
repz
pop
or
or
inc
mov
mov
cs
ja
adc
mov
sbb
add
dec
test
stos
cmpsl
push
ret
jne
arpl
xlat
push
lcall
xchg
jno
jmp
popf
add
add
outsl
or
mov
inc
fwait
pop
in
and
mov
enter
ss
cmpsb
and
xchg
enter
test
push
ja
imul
out
jmp
mov
jmp
push
pop
push
push
inc
inc
popa
dec
xor
dec
pop
xchg
jne
mov
push
incb
xchg
mov
inc
push
xchg
mov
je
clc
and
lods
outsb
sub
dec
sbb
push
xor
xchg
arpl
or
mov
rcl
ret
push
icebp
test
or
addb
jmp
sbb
sbb
mov
xor
inc
xor
dec
inc
push
dec
std
sbbb
stc
push
fs
xlat
dec
xor
jno
test
mov
icebp
pushf
mov
dec
or
mov
mov
notb
iret
inc
aad
decb
cmc
mov
imul
mov
test
test
add
lret
decl
push
lcall
mov
fcoml
add
addb
cmp
jge
jbe
jecxz
fwait
pop
nop
sub
jmp
fsubrp
mov
or
je
jb
lods
int
je
stc
in
adc
dec
mov
push
addr16
dec
bound
in
loop
or
mov
subl
lds
insb
in
aam
jl
bound
dec
ja
mov
imul
and
lds
ret
in
xor
push
out
out
sub
int3
rolb
push
xchg
cmpsl
dec
adc
xor
xchg
in
das
aas
dec
fiadds
lret
mov
jmp
pushf
outsl
test
clc
inc
and
mov
bound
scas
cmc
in
add
aas
mov
adc
jl
outsl
shlb
pop
add
and
divb
test
mov
bound
mov
lods
cld
aaa
pop
cld
jp
in
iret
fwait
cmc
jbe
scas
nop
lret
push
roll
es
scas
pop
jl
daa
jbe
outsl
mov
add
repz
adc
push
xchg
outsb
mov
fmull
sbb
fadds
or
fidivrl
push
mov
mov
jle
xchg
pop
push
in
xor
aam
mov
sbb
iret
mov
shll
mov
dec
int
and
jmp
shr
arpl
out
push
mov
test
pop
push
jae
dec
jb
sbb
mov
sbb
scas
outsb
enter
or
dec
ja
mov
sbb
pusha
push
jmp
mov
jbe
xchg
dec
lret
and
jmp
outsl
add
ja
lret
test
inc
lret
xor
xor
bound
jnp
shr
fstl
imull
mov
push
sahf
pop
mov
inc
mov
cmpb
jb,pt
sub
mov
lcall
mov
mov
aam
outsl
sub
inc
add
enter
mov
push
sub
push
dec
xchg
mul
push
mov
add
fistpll
mov
test
pop
popa
cld
mov
popa
mov
xchg
divb
jmp
cltd
stos
dec
pop
and
xchg
outsb
and
test
cs
adc
enter
cli
xchg
inc
fbld
imull
in
adc
push
jmp
pop
xchg
fucomp
add
in
jbe
lcall
mov
jmp
push
xchg
imul
addl
cmpsl
mov
jmp
outsb
into
ljmp
hlt
push
or
leave
and
dec
aad
movsl
jmp
push
pop
cmp
dec
adc
ret
push
xchg
pop
and
in
testl
and
das
in
inc
jae
ficoms
inc
divl
mov
ja
mov
xor
insb
leave
or
cli
ret
mov
je
je
clc
out
enter
xor
jo
scas
and
pop
push
fnsave
xchg
push
fildll
mov
shlb
push
sahf
shlb
xchg
scas
dec
adc
and
outsb
arpl
mov
into
sub
add
push
sahf
adc
test
jecxz
imull
sub
or
xor
inc
movq
mov
movsl
inc
and
movsl
jmp
hlt
pusha
aaa
jp
notb
and
sahf
mov
xchg
iret
jbe
ljmp
inc
add
mov
je
fisubl
in
adc
insl
cs
scas
out
cmp
push
xor
cmp
mov
mov
leave
xchg
mov
scas
movsb
jb
fstpl
int
outsb
jp
into
fwait
jmp
fwait
cld
dec
push
pop
ljmp
addl
fldl
mov
scas
cmp
hlt
rorl
enter
or
inc
or
xchg
out
dec
mov
mov
xchg
movsb
inc
outsl
push
js
cmp
dec
fcmove
or
pusha
mov
fistps
mov
pop
jl
push
push
sub
test
sti
or
nop
xor
roll
repnz
adc
imul
mov
sub
inc
lcall
jg
fucomip
jp
dec
stc
jp
mov
pop
push
rorl
popfw
adc
fimuls
ja
sub
insl
decl
jmp
cmp
mov
pop
repnz
out
jno
icebp
adc
mov
and
cmp
sahf
cmpsb
and
xchg
std
pop
in
add
push
in
mov
stos
mov
jno
sub
and
jmp
mov
adc
addr16
lock
cmp
mov
or
dec
add
iret
fwait
imul
jmp
sbb
push
out
rclb
pop
adc
aad
xor
or
lods
sarl
stos
aam
or
mov
lcall
dec
mov
je
das
outsl
xchg
adc
in
in
aaa
adc
call
outsb
xchg
lds
imul
push
nop
lock
jg
jle
add
das
test
in
dec
adc
adcb
adc
cmp
clc
sub
jmp
icebp
shl
jecxz
int
mov
lods
adc
ss
imulb
push
mov
push
pop
repz
sub
cltd
fs
lock
fcompl
xor
aaa
stc
pop
push
jl
in
mov
icebp
dec
xchg
js
pop
mov
into
pop
rcrl
sub
out
jp
pop
call
pop
mov
jbe
jb
loope
rclb
loopne
mov
mov
and
mov
mov
or
add
jo
sbb
jg
bound
or
sub
lods
mov
ret
stc
fcmovb
pop
pop
sub
in
jne
movsl
fcmovne
xchg
inc
jno
cmp
jmp
jl
les
add
addl
fnstsw
lods
mov
inc
cmp
mov
and
ss
cs
or
arpl
in
les
jecxz
movsl
div
nop
xchg
adc
xor
scas
inc
out
out
mov
sub
xor
jl
arpl
dec
cmp
and
faddp
cmpb
sub
in
fs
sbb
mov
lods
in
jg
je
hlt
push
jecxz
xchg
cmpsb
mov
cmpsb
sub
dec
shl
mov
add
xor
or
cmp
jmp
pop
mov
fwait
mov
xorb
inc
dec
and
inc
cmpsl
fdivs
ficomps
push
jmp
loope
loopne
insb
push
jnp
jecxz
cmp
cmp
lods
mov
outsb
sub
ja
lods
mov
jmp
lods
div
adc
and
dec
outsl
ds
xlat
inc
jbe
outsb
push
sbb
dec
mov
and
ret
aaa
bound
pop
xlat
cltd
arpl
xor
lods
stos
and
pop
adc
mov
lea
push
test
jmp
cmp
mulb
and
dec
repz
mov
push
pop
adc
jmp
cmp
mov
call
lahf
jbe
cmpsb
ficompl
in
je
lcall
lea
scas
mov
dec
mov
stos
mov
mov
pop
sub
ret
mov
fisubrs
ljmp
ds
shrb
hlt
pushl
shlb
or
jge
nop
ds
mov
pusha
xor
cld
inc
mov
enter
stos
insl
lods
adc
fisubl
stos
dec
mov
jne
pop
outsl
jae
insl
cli
cmp
js
xor
push
ret
add
xchg
out
scas
out
sub
cwtl
xchg
lds
dec
dec
cli
out
sbb
sbb
aas
scas
push
sar
jmp
mov
pop
aas
xchg
fsubl
lods
mov
dec
setae
mov
mov
xchg
ret
adc
cli
mov
nop
repz
jnp
ja
and
cmp
pushf
xorb
sbb
jmp
xchg
xchg
push
cmp
push
jbe
sbb
xchg
mov
fmull
addl
dec
xchg
xor
jp
out
outsb
cwtl
or
jne
std
cmc
mov
xchg
arpl
rclb
dec
outsb
mov
cltd
pop
nop
lock
lods
cmp
out
jne
lods
in
cmpsl
add
outsb
stos
loopne
cmpsl
or
rolb
dec
mov
and
outsb
mov
xor
dec
add
jo
outsb
cmp
cmp
fsubs
lods
jmp
jmp
add
rcrl
push
mov
cmc
fsubrl
std
or
roll
sbb
xlat
aas
jle
mov
mov
or
mov
dec
lods
and
lods
in
xchg
sets
movsl
addr16
jo
mov
xor
sub
aad
mov
stos
pop
shld
xchg
filds
cld
rcl
pop
lods
out
cmp
adc
int
jo
rorb
fimuls
inc
in
addr16
or
jb
xchg
sub
mov
mov
fnstenv
outsl
mov
or
out
push
mov
inc
and
lock
push
mov
dec
daa
mov
cs
imul
xchg
int
adc
push
xchg
call
xor
or
push
pop
rol
mov
cli
sub
cmpsb
into
aaa
pusha
mov
outsb
insb
popa
test
in
cli
in
add
push
rorl
and
mov
add
pusha
xchg
in
inc
dec
insb
ljmp
jmp
dec
sbb
iret
push
stc
dec
mov
das
adc
jnp
push
or
push
negl
push
dec
mov
mov
lods
inc
cmp
testb
aam
loope
jle
gs
xchg
jmpw
cwtl
xchg
out
hlt
rol
add
subl
xchg
leave
jge
rcrl
sbb
std
inc
insl
out
push
mov
lds
fcoms
jb
lcall
test
sub
rdmsr
fsts
pop
scas
fisttpl
adc
out
lds
xor
push
sbb
hlt
inc
push
cmpl
insl
inc
cwtl
mov
mov
inc
mov
enter
sub
mov
aas
mov
inc
mov
lock
cmp
cmp
push
add
out
inc
faddp
jno
pop
mov
mov
movsl
push
ljmp
mov
std
enter
decl
shlb
filds
jns
filds
fwait
mov
inc
cmp
xor
aad
cs
mov
rcrb
je
mov
mov
outsb
xor
and
add
dec
adc
andl
xchg
cmp
cmp
pop
testl
mov
cs
imul
insl
pop
mov
push
mov
js
outsb
das
xchg
adc
mov
cmpps
sub
xor
orl
out
push
mov
xor
out
rorl
popa
mov
push
push
pop
cli
pusha
je
and
pop
dec
cmp
lcall
aad
notb
mov
aad
in
test
and
mov
jns
insb
dec
mov
movsl
jb
outsb
mov
jg
xor
test
fwait
daa
dec
icebp
outsb
notl
jae
jge
bnd
dec
iret
out
push
pop
mov
out
pop
in
enter
mov
mov
pinsrw
test
imul
adc
lds
dec
ret
divb
rcrb
dec
daa
and
mov
dec
sbb
aaa
and
xor
jo
jbe
loop
outsl
gs
ret
jle
stos
sahf
je
ss
push
or
sbb
in
pushf
cli
pop
lcall
mov
loop
fsubrl
faddl
es
mov
lcall
sub
sub
outsb
lods
mov
in
cwtl
sbb
ljmp
xchg
ss
fldt
movsl
fldl
mov
shll
pop
fwait
lcall
mov
loopne
outsb
lds
clc
cli
rorb
jmp
mov
mov
mov
les
dec
aas
pop
push
gs
ljmp
jl
int3
movsb
push
cmp
ljmp
out
dec
bound
inc
or
jno
out
sbb
sbb
and
in
add
out
jno
movsl
popf
mov
xchg
mov
orb
nop
js
out
dec
gs
dec
dec
mov
mov
divl
or
cmp
cmp
inc
and
mov
out
lea
add
jnp
test
cmpsb
jp
lock
mov
iret
outsb
push
scas
stc
mov
in
sbb
mov
mov
add
gs
cmc
es
jmp
xor
pop
xor
mov
enter
mov
xchg
dec
dec
push
das
cmp
aas
adc
mov
lock
scas
pop
xchg
adc
outsb
aaa
pushf
sti
mov
popf
test
dec
jae
inc
adc
jb
or
push
adc
gs
xor
negl
outsb
cli
lea
pushf
leave
pop
xchg
jmp
pop
cltd
sub
mov
test
jmp
rol
or
fs
inc
mov
pop
in
addb
add
mull
sbb
push
negl
add
outsb
in
or
insb
xor
enter
xor
push
rclb
nopl
add
jmp
stos
sub
push
test
sbb
out
mov
mov
ja
out
data16
cmp
clc
push
shll
pop
inc
fdivrs
mov
sub
cmp
in
aad
push
in
cli
lret
dec
mov
jle
cltd
mov
js
les
test
mov
lds
mov
shl
inc
jmp
add
cltd
mov
ljmp
ds
idiv
mov
movsb
push
adc
adc
adc
imul
jp
fisttps
jmp
inc
xchg
jp
loop
xchg
mov
test
lea
add
call
sti
xor
dec
or
aaa
leave
xor
push
xchg
and
lret
jmp
adc
sbb
shll
aaa
pusha
cmp
dec
enter
jmp
mov
outsb
rcl
lret
daa
movsb
add
inc
mov
enter
push
faddp
ret
or
jb
adc
iret
imul
dec
adcb
outsl
push
mov
sub
fxch
inc
cwtl
push
aas
test
or
mov
adc
sbb
jmp
dec
hlt
popa
or
jnp
push
push
push
inc
dec
adc
push
loop
cmp
xor
mov
fistps
lods
nop
inc
inc
in
mov
dec
mov
adc
jo
lret
xchg
jno
xor
sbb
stos
outsb
in
stos
rclb
mov
sbbb
cmp
and
sub
daa
xlat
movsl
int3
adc
jmp
enter
mov
cmp
inc
call
jg
inc
jo
cli
adc
or
mov
sub
adc
outsl
inc
or
shl
rorb
jmp
mov
fdivrs
mov
dec
stos
aad
loope
jns
jmp
lods
movsl
mov
sub
and
sbb
cs
cwtl
lea
inc
mov
jle
add
dec
cmp
sbb
outsl
and
adcb
ss
popf
dec
xor
outsl
dec
cmp
push
dec
inc
in
jae
or
adc
push
inc
jae
mov
lods
mov
loope
lds
push
mov
and
imul
push
lcall
outsl
cmp
pop
pop
in
enter
ss
fsubr
jo
push
fnstsw
arpl
push
inc
dec
in
inc
push
aad
and
cmpb
mov
fnstenv
jb
jns
sub
dec
addr16
jecxz
pop
xchg
into
test
dec
push
mov
outsb
pusha
adc
mov
add
or
push
mov
pop
imul
fs
inc
push
imul
xchg
push
iret
pop
pop
jp
mov
stos
fstpt
jno
pop
leave
jmp
or
push
jecxz
imul
xchg
shlb
in
or
cld
inc
xor
mulb
mov
inc
xor
jmp
xchg
les
call
xor
je
inc
jno
mov
mov
das
ret
or
mov
insl
fisttps
xchg
movsl
stc
cld
das
mov
shlb
and
xchg
outsb
mov
push
xlat
pop
push
stos
das
dec
jnp
and
repz
mov
sub
mov
push
icebp
dec
daa
pop
cmp
in
imul
cmp
insl
hlt
pop
imul
in
dec
xchg
das
sbb
arpl
lret
mov
push
push
movsb
iret
mov
mov
sub
mov
mov
mov
push
dec
adc
popf
mov
rcrl
nop
mov
mov
xchg
outsb
rcrb
imul
popf
or
mov
test
dec
imul
mov
lods
mov
xor
jl
pop
mov
inc
out
mov
int3
mov
adc
jmp
jbe
push
or
lods
imul
cld
jnp
xor
test
inc
add
out
and
mov
xor
dec
xchg
out
push
outsb
popf
add
out
xchg
inc
xchg
jmp
test
pop
dec
sbb
xchg
cs
call
pop
fmul
and
mov
fsubrs
sbb
or
cmpsl
arpl
loope
or
cmp
call
sti
mov
push
inc
pop
push
xchg
popf
sub
push
inc
lock
add
or
stos
movl
shl
dec
fcmovu
cmp
fcoms
insl
rcl
jbe
nop
dec
sahf
movsb
mov
jno
jecxz
pop
add
in
and
fstl
push
mov
fimull
lret
ss
adcb
xlat
sbbl
sbb
add
push
mov
and
insl
fmuls
mov
mov
movsl
scas
xchg
test
test
dec
arpl
inc
push
decl
dec
sbb
bound
add
roll
mov
pop
jbe
test
push
jmp
xor
jmp
jp
repz
pop
mov
jnp
mov
jb
mov
pop
test
rolb
xchg
xchg
xor
xchg
lret
pop
dec
lods
push
in
repz
out
push
lret
fucomp
loopne
dec
add
pop
rolb
insb
stos
or
out
std
mov
xbegin
mov
not
add
mov
sbb
inc
cmpsl
repnz
outsb
jl
inc
mov
nop
sbb
in
inc
cmp
imull
mov
adc
es
decb
test
mov
lds
dec
mov
int
cltd
outsb
push
dec
jb
mov
mov
mov
mov
stc
outsb
pop
cmpsl
dec
test
cwtl
mov
dec
pop
pop
addb
mov
outsl
and
jp
push
jbe
push
fimull
imul
cwtl
cwtl
in
cmp
sbb
mov
add
out
shr
cli
jecxz
pop
test
pop
mov
add
arpl
mov
dec
ret
push
jo
lret
push
mov
pop
stos
or
dec
mov
dec
dec
fdivs
insl
push
jmp
cmp
jnp
jp
insb
or
aad
fucomi
xchg
mov
fisttpl
cmp
push
push
lock
xor
jecxz
std
mov
cmc
pop
and
mov
push
outsb
or
in
loop
ret
popa
sbb
pop
mov
sub
jo
dec
mov
lret
insl
out
lahf
xchg
push
mov
sub
lret
dec
mov
outsl
jmp
adc
cmp
jno
aam
pusha
ds
xor
movsb
mov
xor
hlt
bound
mov
xchg
and
je
or
cs
lahf
aad
dec
sahf
scas
adcb
sbb
bound
in
test
lahf
movsl
ss
js
shll
cmp
sub
xor
mov
and
mov
pop
scas
scas
aaa
loopne
fsubs
aam
dec
in
inc
dec
jmp
loopne
mov
adc
inc
cmpsl
mov
mov
lock
mov
in
pop
sbb
dec
fucomip
pop
stos
rorl
inc
cmp
xchg
fmull
and
in
ljmpw
pop
imul
xchg
scas
jbe
outsb
cmc
pop
mov
daa
popa
or
in
hlt
data16
dec
xchg
jno
mov
sbb
shll
and
jge
cwtl
inc
sub
jl
cmp
aam
imul
pop
into
dec
inc
cltd
pop
mov
sub
aad
sbb
pushf
dec
push
lods
xchg
mov
jne
mov
jo
and
mov
xchg
arpl
fwait
ljmp
mov
call
rol
nop
fisubl
mov
fsubrl
inc
movsb
ret
mov
fldt
fwait
ja
pop
add
jns
pop
xchg
dec
adc
cwtl
jns
jbe
pushf
pop
iret
pop
mov
mov
mov
jle
xor
pop
and
rorb
fadds
sbb
push
out
add
dec
push
mov
loop
pop
mov
daa
imul
cmp
inc
mov
aas
fsubrs
out
push
and
mov
shll
push
cmp
pop
outsb
xchg
jl
pop
popf
mull
mov
sbb
arpl
push
fwait
push
jp
inc
test
fsubrs
dec
std
xorl
daa
xchg
adc
imul
in
stos
pop
in
mov
push
imul
adc
xchg
mov
mov
adc
int
pop
pop
mov
outsb
decb
and
jns
lock
jae
cltd
imul
shlb
inc
sbb
lock
pop
add
pusha
aaa
cmpsb
pop
sub
lret
roll
loopne
inc
hlt
insb
test
outsl
mov
or
aad
test
loopne
pop
inc
lds
cld
mov
in
mov
enter
rorl
mov
lea
mov
cmpsb
sub
jno
cld
inc
aaa
in
fidivl
xor
ljmp
xchg
aam
in
mov
stos
mov
and
loopne
mov
xor
call
enter
sbb
outsl
dec
pop
pop
cld
adc
cmp
das
test
xlat
mov
out
iret
mov
pop
jb
pop
or
out
int3
int3
in
lea
push
mov
xor
adc
sbb
jg
pop
push
mov
dec
pop
ss
rorl
and
xchg
insl
inc
and
cli
fwait
lret
jo
adc
jmp
movsb
mov
mov
jg
rolb
dec
pop
shrb
int
stos
bnd
jle
dec
mov
jno
out
daa
pop
hlt
iret
enter
jb
xor
inc
mov
fdivrl
fnstsw
cli
and
dec
in
fbld
adc
outsl
hlt
adc
pop
pop
jp
ljmp
mov
dec
mov
sub
scas
aaa
jmp
jp
dec
pop
ficompl
loop
fxch
outsb
inc
mov
inc
mov
outsl
iret
jmp
rorl
testb
je
pop
popf
jle
or
pop
push
insb
dec
add
jne
lret
fldcw
leave
push
jle
lock
bound
fadd
pop
jmp
pop
mov
pinsrw
int3
and
rcll
popa
test
push
push
jne
cs
bound
cltd
outsb
bound
sub
sbb
mov
adc
push
jmp
cld
daa
mov
lcall
icebp
mov
jmp
inc
dec
mov
mov
push
dec
nop
and
fisubs
sar
pop
shr
push
bound
jo
subl
rcrb
mov
jmp
jae
inc
inc
pushw
or
sbb
jp
push
cmpsb
out
and
das
inc
notl
loopne
in
add
xchg
outsb
test
rcl
xchg
insl
testb
sarb
jnp
inc
mov
ja
daa
in
aas
xchg
sahf
cmpsb
mov
mov
xchg
pop
jbe
pop
in
push
xor
je
or
jle
add
sub
lds
insl
and
sub
jg
test
inc
or
addb
adc
or
in
pusha
lds
xor
mov
mov
pop
pop
and
adc
out
jle
and
pop
jp
repnz
xchg
sub
mov
aas
loop
fstp
fwait
ja
rolb
scas
popa
jmp
adc
dec
adcb
jmp
and
cmp
insb
in
dec
pop
mov
dec
push
fmull
fmull
pushf
pop
popa
pop
in
addr16
pop
pop
rcrl
pop
xchg
mov
dec
clc
cmp
jne
push
push
incl
pop
inc
xchg
icebp
add
insl
add
push
outsb
inc
aas
scas
and
outsb
cmp
sbb
mov
repz
dec
fsub
sub
xchg
hlt
cs
mov
jge
mov
rolb
inc
cmp
mov
sbb
dec
shrl
rcll
adc
push
xor
es
inc
std
pop
jb
dec
mov
in
or
repnz
mov
pop
pop
leave
add
shr
pop
loop
pop
mov
roll
lcall
add
mov
and
jp
scas
xchg
jp
and
popf
or
ja,pn
and
fst
mov
jp
fbld
ss
enter
and
dec
dec
insb
mov
adc
js
cli
outsb
add
aam
hlt
out
jl
fwait
outsb
sbb
cmpsb
outsb
sti
into
adc
jo
sub
push
push
adc
pop
pushf
out
mov
push
jnp
dec
int
int
xor
jge
sub
lahf
sub
inc
or
mov
xchg
cli
xor
out
xchg
pop
and
add
scas
out
mov
jnp
mov
int3
and
imul
jmp
fldenv
outsb
xor
fisubl
addr16
and
sub
jmp
push
popf
or
cmp
and
andps
xchg
push
ret
jg,pn
push
and
jnp
xchg
leave
fmulp
cmp
cmp
mov
and
push
xchg
rorb
sbb
out
ja
adc
addr16
lock
popa
lahf
aas
fisubrl
jno
mov
jb
mov
xchg
test
pop
xchg
jo
jmp
or
orl
mov
push
arpl
repnz
push
shlb
mov
push
mov
inc
add
out
call
out
push
pop
fnstenv
jg,pn
cmp
sub
adc
lret
and
icebp
mov
add
arpl
mov
sbb
stos
ds
fistpll
dec
mov
xchg
pop
mov
scas
mov
inc
sub
sbb
outsb
insl
mov
scas
aad
xor
or
divl
pusha
jmp
and
inc
sbb
xor
repz
xchg
div
rolb
xchg
movsl
push
mov
xchg
mov
mov
seto
repz
jae
sti
pushl
add
mov
push
cltd
push
mov
outsb
dec
inc
clc
mov
sbb
out
push
sub
xchg
and
jmp
movsl
hlt
bound
in
sbb
jmp
cmpsl
jg
push
mov
push
jae
adc
and
pop
jae
rorb
or
lret
dec
adc
loopne
outsl
and
inc
xlat
mov
sbbl
cmp
daa
das
cltd
insl
ss
push
and
nop
stos
insb
fs
adc
test
std
push
or
dec
sub
sbb
and
movsb
fnstcw
shl
test
cld
jmp
push
insb
pop
loopne
dec
test
int3
dec
testl
add
mov
inc
loopne
in
repz
sahf
frstor
jae
adc
mov
incl
aaa
decb
mulb
push
insl
rorl
test
mov
dec
shll
jmp
imul
mov
sahf
and
mov
pop
mov
jmp
insb
sub
mov
imulb
pop
pop
sahf
mov
jg
inc
fcmovbe
ret
jmp
leave
inc
pushf
xchg
jge
shr
pushf
jle
dec
enter
loopne
xor
mov
add
or
pop
popa
cltd
iret
aad
outsb
jbe
lret
jb
adc
dec
push
in
in
int
jnp,pn
in
mov
in
xchg
in
fnstenv
call
adc
outsl
cld
fwait
insb
xchg
andb
ret
inc
dec
dec
dec
pop
cmp
inc
jmp
shll
das
test
outsb
jo
lea
into
fidivl
sub
mov
jns
insl
mov
das
fidivrl
or
dec
cwtl
jl
addr16
mov
pop
outsb
icebp
and
adc
pop
push
clc
cwtl
dec
in
adc
and
dec
or
das
and
jbe
dec
insb
cld
movl
outsb
sbb
dec
sbb
stc
pop
dec
shlb
in
loopne
cli
bound
adc
imulb
subb
paddb
fs
in
mov
lods
inc
outsl
pop
out
stos
loop
clc
push
jmp
dec
add
push
push
mov
adc
push
mov
xchg
int
xacquire
mov
cmp
lret
cmp
insl
sbb
lret
jne
dec
ljmp
sub
pop
test
lock
mov
out
adc
add
xchg
ljmp
push
jae
or
mov
or
outsb
inc
mov
addr16
jecxz
das
sub
inc
sti
pusha
push
jl
jmp
incl
mov
mov
push
cmc
sub
scas
scas
subl
repz
stos
pop
xchg
outsl
pop
dec
sbb
shl
imul
fbstp
cltd
and
xlat
dec
mov
add
insl
dec
adc
loope
push
sbb
pop
jb
sarl
xor
call
dec
lods
lea
mov
test
lods
lcall
dec
mov
push
push
cmpb
outsb
imul
hlt
add
clc
xchg
fwait
or
in
jge
lock
clc
and
notl
lds
jecxz
xor
xchg
pop
sub
mov
cli
jmp
or
xchg
in
ror
xor
cmp
out
fiaddl
push
cmp
xchg
iret
into
adc
cmpb
inc
xchg
mov
push
aas
outsl
shrl
lods
pop
test
lds
in
add
sub
jle
sub
ja
in
cmp
repz
into
cmp
lods
inc
gs
mov
scas
inc
xchg
stos
in
or
lea
sbb
or
mov
sbb
sbb
out
aas
push
outsb
negb
jmp
popf
xor
jl
lret
pop
pop
data16
xor
dec
leave
sub
push
sahf
jb
inc
inc
in
cmpsl
lahf
shrb
mov
cmpsb
repnz
dec
cmp
mull
fs
cmp
mov
cwtl
popa
xor
insb
mov
dec
pushf
xchg
nop
insb
in
xor
outsb
ficoms
jno
movsl
cmp
sahf
mov
outsb
mov
mov
sub
and
or
mov
mov
cmp
ss
loop
xchg
outsb
mov
pop
mull
mov
fistpl
outsb
lds
mov
stos
inc
mov
roll
mov
or
fcoml
cltd
call
test
sub
cmpsb
ljmp
test
scas
aas
pop
repz
scas
test
movsl
dec
cmpsb
inc
mov
cmpsl
and
add
lea
dec
add
andl
sbb
jbe
lods
mov
es
jge
push
outsb
pop
jmp
xchg
movsb
cmp
sbb
mov
and
fstl
xlat
into
or
mov
sbb
andl
pop
push
and
adc
fs
fmuls
fwait
cmp
xchg
repz
ljmp
jmp
mov
cmp
clc
outsb
cli
cld
andb
xor
lods
scas
mov
or
sub
scas
jnp
mov
add
sbb
push
sahf
sub
inc
mov
cwtl
xor
cmp
mov
into
sbb
xchg
cmp
into
pop
nop
pop
adc
inc
xchg
adc
in
inc
push
inc
or
cmc
iret
aaa
mov
inc
or
movsl
jmp
ljmp
dec
jbe
fldl
cmp
adcb
mov
add
sbb
mov
lahf
sbb
notb
sbb
and
jnp
lcall
aas
xchg
pmullw
pushf
dec
fdivs
lea
sarb
cmp
pushf
xor
push
jns
mov
dec
xor
inc
push
sbb
xor
int3
test
sub
sbb
cwtl
pop
std
stos
fwait
loopne
jmp
jle
sub
nop
add
dec
aaa
sti
scas
ret
add
xchg
mov
movsl
xchg
iret
movzbl
dec
jne
xlat
xor
dec
addr16
and
xchg
outsb
rcll
xchg
and
ret
sub
dec
jno
test
cs
test
push
jb
ss
push
out
jp
outsb
mov
leave
outsl
repnz
divl
jns
sub
xchg
lret
sarl
fdivrp
or
into
add
insl
int
call
mov
push
xor
xchg
out
xchg
jb
jbe
sbb
cltd
daa
xchg
adc
movsb
inc
cmp
push
mov
pop
and
outsb
enter
leave
adc
pop
and
ds
mov
outsb
and
sbb
add
xor
ss
inc
loope
mov
aaa
imul
leave
or
pop
push
enter
mov
pop
cmp
shrl
cmc
mov
sub
pop
es
cs
mov
mov
xchg
jmp
pavgw
stos
push
xor
sbb
sahf
jge
nop
jmp
aaa
jecxz
sub
ja
fs
jle
pop
loop
pop
and
pop
mov
imul
sbb
cld
iret
dec
inc
mov
mov
outsb
sti
loop
cltd
inc
cli
xor
pop
fimuls
mov
dec
push
test
adc
ds
movsl
int
movsl
mov
js
push
sbb
adc
cmovne
int3
pop
jnp
loope
inc
jno
jne
mov
push
cmp
jmp
mov
or
push
imul
and
xor
ret
call
xchg
pop
xor
scas
jl
dec
and
jmp
mov
add
popa
inc
insb
pop
sub
xor
inc
ss
add
xor
xorb
dec
lret
mul
roll
xchg
aas
cld
mov
sbb
into
mov
cmc
sti
jmp
test
adc
mov
dec
push
jg
pop
popa
sarb
inc
adc
pop
xor
pop
pop
daa
stc
loopne
jno
xchg
decb
out
outsb
push
fists
insl
jnp
fldt
into
cltd
push
dec
gs
jo
jns
mov
mov
cmp
mov
dec
ds
mov
shlb
cmp
mov
in
xchg
mov
or
enter
arpl
int3
in
mov
mov
fld
pop
fcoml
jno
push
in
sahf
in
mov
cmp
cmp
jg
add
cmp
call
sbb
or
pop
cmc
popf
mov
push
std
xchg
mov
hlt
sbb
dec
inc
mov
ret
jo
mov
or
insb
fsub
addb
xchg
adc
and
mul
inc
or
adc
cmp
xor
inc
xchg
icebp
lret
fists
jne
bound
outsb
dec
lcall
in
movsb
adc
popa
adc
mov
inc
aaa
dec
xlat
inc
clc
repz
int
pop
outsb
mov
mov
jmp
shll
xchg
subb
popf
mov
jnp
inc
dec
pop
xor
push
out
roll
out
lods
mov
mov
in
sub
in
inc
jp
sbb
mov
push
dec
adc
and
add
push
jae
add
je
add
add
cmp
add
jb
add
jae
add
jae
add
jae
add
jae
add
jb
add
add
inc
je
add
jae
add
add
jae,pn
add
add
xor
int3
jae
add
je
add
jb
add
je
add
add
pop
jae
add
add
add
add
mov
add
mov
add
jne
add
jbe
add
add
lret
add
add
xchg
je
add
jne
add
je
add
jne
add
jne
add
add
outsb
jne
add
add
test
add
sbb
add
add
fidivs
or
add
jne
add
jne
add
je
add
add
cli
ja
add
ja
add
ja
add
add
inc
ja
add
add
shlb
add
ja
add
add
loop
add
lret
add
add
lcall
add
add
mov
add
add
js
add
jns
add
js
add
jns
add
jns
add
add
cmpsb
jns
add
jns
add
js
add
add
add
mov
add
js
add
js
add
jns
add
js
add
add
pusha
js
add
add
push
js
add
jns
add
add
dec
js
add
add
add
add
sarb
pop
jp
add
jp
add
jp
add
add
or
add
jp
add
jp
add
jp
add
jp
add
add
add
add
xor
jbe
add
mov
jl
add
jnp
add
add
into
jnp
add
jl
add
jnp
add
add
mov
add
jnp
add
jnp
add
jl
add
add
dec
jnp
add
add
add
adc
mov
add
sbb
push
lods
add
add
inc
add
add
inc
jg
add
and
sbb
add
movsb
add
push
or
add
or
xchg
or
sub
arpl
insl
add
add
insb
add
add
add
add
add
add
add
addb
and
add
xorb
sub
adc
cmp
or
and
js
sub
add
sub
add
popa
add
insb
add
add
add
popa
add
add
add
nop
pop
sub
cmp
pop
add
lcall
sbb
pop
sub
add
add
add
add
add
add
inc
inc
dec
dec
xor
cs
insb
add
add
inc
outsb
inc
outsl
jo
add
add
gs
gs
outsl
jae
dec
popa
insl
gs
add
inc
jb
push
push
add
gs
js
arpl
add
add
push
bound
gs
je
dec
outsb
jbe
jae
bound
add
dec
gs
arpl
outsb
arpl
add
inc
outsl
jo
add
add
dec
bound
outsb
popa
insl
add
add
jne
jb
inc
outsl
jne
fs
add
dec
gs
push
add
dec
insb
gs
insb
outsl
outsb
add
add
dec
insb
gs
gs
gs
jae
add
add
inc
outsb
inc
jno
popa
insb
add
add
dec
insb
gs
outsb
popa
insl
add
add
inc
gs
popa
je
add
add
outsb
inc
insb
outsl
outsb
add
add
dec
push
jne
jb
inc
outsl
jne
fs
add
dec
insb
gs
jb
popa
je
inc
jb
insl
push
gs
jo
popa
je
add
add
gs
jb
ja
add
dec
insb
gs
jne
jb
push
jb
je
arpl
add
add
dec
insb
gs
jb
popa
je
dec
imul
inc
insb
imul
push
jne
jb
push
imul
inc
imul
inc
outsl
jne
fs
add
add
inc
jb
popa
je
dec
imul
inc
imul
outsb
inc
outsb
jne
inc
outsl
jb
popa
je
add
dec
insb
gs
gs
gs
add
add
push
outsb
fs
jb
arpl
add
add
jb
arpl
outsb
arpl
add
dec
insb
gs
gs
popa
jb
gs
gs
arpl
add
add
gs
outsb
jne
dec
bound
arpl
add
inc
xor
cs
insb
add
add
outsb
imul
popa
je
jbe
push
popa
je
push
outsl
add
add
dec
dec
dec
inc
push
inc
inc
dec
dec
inc
pop
push
jae
jb
imul
outsl
push
gs
arpl
popa
je
dec
bound
arpl
add
inc
jb
popa
je
inc
popa
je
inc
popa
arpl
add
add
je
outsl
outsb
jbe
jb
push
je
add
add
gs
jb
popa
je
inc
jb
insl
inc
popa
je
add
add
gs
jb
popa
je
dec
imul
add
gs
je
inc
popa
je
inc
fs
jae
dec
outsl
insb
fs
add
add
inc
inc
inc
dec
pop
push
jae
jb
popa
jb
push
add
inc
gs
outsl
outsl
imul
gs
popa
arpl
add
add
gs
je
dec
je
insl
dec
outsl
outsb
imul
inc
jb
popa
je
inc
insb
popa
jae
dec
outsl
outsb
imul
add
je
jb
outsl
jb
outsb
outsw
add
add
push
jb
je
push
je
imul
popa
insl
add
add
inc
pop
push
jae
jb
popa
jb
push
add
gs
jne
insb
imul
je
add
add
push
jb
je
dec
insb
gs
je
add
add
gs
je
dec
insb
gs
fs
jae
dec
outsl
insb
fs
add
inc
outsl
inc
jb
gs
insb
insb
dec
imul
jae
add
add
dec
popa
jb
push
je
jb
popa
arpl
add
add
inc
pop
push
jae
jb
imul
inc
gs
insb
popa
jae
inc
imul
gs
fs
insb
popa
jae
push
je
add
add
push
jb
jo
popa
jb
popa
outsb
je
outsl
jo
add
add
outsb
imul
insl
outsl
outsb
push
jb
imul
push
outsl
inc
gs
outsb
je
jb
popa
arpl
outsb
fs
gs
gs
jae
push
je
gs
insl
add
add
inc
outsl
push
gs
jb
js
inc
insb
popa
outsb
imul
add
dec
dec
inc
push
inc
inc
dec
dec
inc
push
dec
inc
push
pop
push
jae
jb
jb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
jb
outsb
jae
arpl
insl
gs
imul
outsl
popa
fs
imul
add
add
push
gs
outsb
fs
inc
imul
jb
je
push
jb
imul
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jne
jb
outsb
je
outsl
outsb
jae
insb
gs
outsl
outsb
je
add
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
add
insb
jae
jb
popa
je
add
add
dec
outsl
jbe
inc
imul
add
je
jae
jb
gs
jne
je
inc
dec
inc
add
add
inc
popa
je
insb
inc
jo
inc
js
je
add
add
je
jne
jb
outsb
je
push
add
add
dec
jae
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
inc
gs
imul
dec
push
push
inc
push
xor
cs
insb
add
add
push
gs
outsl
insl
jo
gs
inc
jb
insl
add
add
dec
inc
dec
jo
outsb
inc
jne
arpl
outsb
add
add
dec
inc
dec
outsl
arpl
add
add
inc
jb
ja
imul
insb
gs
imul
add
inc
jb
ja
imul
insb
gs
add
add
push
gs
outsl
insl
jo
gs
inc
jb
insl
gs
outsb
add
add
dec
outsb
jae
popa
insb
insb
add
add
je
jo
outsb
inc
imul
jb
jbe
gs
add
add
ja
imul
add
dec
inc
dec
jo
outsb
add
add
dec
inc
dec
outsb
outsw
add
add
inc
jb
ja
imul
add
dec
inc
push
gs
outsl
jbe
add
add
dec
inc
inc
outsl
insl
jo
gs
outsl
jb
push
add
add
dec
inc
inc
arpl
jo
gs
add
add
inc
jb
ja
imul
insb
gs
add
add
je
jo
outsb
inc
imul
jb
jbe
gs
add
add
push
outsb
fs
gs
popa
add
add
dec
push
outsb
fs
imul
popa
jae
add
add
ja
imul
add
add
dec
inc
dec
insl
popa
addr16
outsl
insl
jo
gs
add
add
ja
imul
add
inc
jb
ja
imul
add
dec
inc
dec
push
outsb
fs
jb
popa
je
add
add
dec
inc
dec
push
outsb
fs
jb
popa
je
push
add
add
fs
inc
outsl
jb
imul
gs
imul
dec
inc
inc
insb
outsl
jae
add
add
ja
imul
jp
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
jb
inc
insl
jo
push
add
add
inc
insl
jo
jns
arpl
insb
gs
imul
dec
outsb
je
jb
popa
insb
inc
js
jb
arpl
outsl
outsb
dec
imul
add
popa
insb
push
push
js
arpl
gs
add
add
inc
outsl
jb
popa
je
jb
jbe
add
add
inc
gs
outsl
insb
fs
outsl
arpl
imul
dec
inc
gs
arpl
dec
jbe
jb
popa
jns
outsb
fs
add
add
inc
jb
addr16
jne
jb
inc
imul
push
dec
inc
imul
je
outsl
outsb
inc
add
add
push
dec
inc
gs
gs
imul
inc
add
add
inc
gs
outsl
insb
fs
popa
je
inc
outsb
fs
jne
inc
imul
insb
insb
dec
outsb
jae
popa
insb
insb
add
add
push
push
js
arpl
gs
js
add
dec
push
inc
push
dec
cs
insb
add
add
push
gs
gs
popa
je
inc
add
add
push
jne
jb
dec
outsb
outsw
dec
gs
add
add
je
inc
outsl
insl
bound
gs
add
add
push
jb
inc
gs
outsl
arpl
imul
push
popa
je
push
gs
insb
addr16
je
insl
push
popa
je
push
add
add
je
dec
jae
gs
outsl
jb
push
popa
je
push
add
add
push
popa
je
inc
gs
jb
jbe
dec
jne
bound
inc
add
add
je
push
gs
outsl
jbe
inc
imul
add
add
push
gs
gs
gs
push
push
push
popa
insb
jne
inc
add
add
inc
gs
gs
inc
insl
jo
jns
gs
add
add
push
gs
gs
gs
inc
insl
jo
jns
push
dec
gs
add
add
push
je
inc
push
add
add
insb
outsl
jb
fs
jae
dec
jne
popa
add
add
push
gs
jb
je
push
push
push
popa
insb
jne
inc
add
add
push
popa
je
push
outsb
jno
outsl
je
push
jo
arpl
inc
add
add
push
popa
je
push
gs
outsl
jbe
inc
popa
arpl
insb
popa
jae
inc
add
add
push
popa
je
inc
gs
jb
jae
add
add
push
popa
je
inc
imul
je
inc
add
add
add
add
xorb
jo
add
mov
add
add
in
outsl
add
cld
jge
add
jo
add
add
or
add
add
cld
jns
add
jno
add
jle
add
jnp
add
add
in
add
push
jae
add
je
add
add
cmp
add
jb
add
jae
add
jae
add
jae
add
jae
add
jb
add
add
inc
je
add
jae
add
add
jae,pn
add
add
xor
int3
jae
add
je
add
jb
add
je
add
add
pop
jae
add
add
add
add
mov
add
mov
add
jne
add
jbe
add
add
lret
add
add
xchg
je
add
jne
add
je
add
jne
add
jne
add
add
outsb
jne
add
add
test
add
sbb
add
add
fidivs
or
add
jne
add
jne
add
je
add
add
cli
ja
add
ja
add
ja
add
add
inc
ja
add
add
shlb
add
ja
add
add
loop
add
lret
add
add
lcall
add
add
mov
add
add
js
add
jns
add
js
add
jns
add
jns
add
add
cmpsb
jns
add
jns
add
js
add
add
add
mov
add
js
add
js
add
jns
add
js
add
add
pusha
js
add
add
push
js
add
jns
add
add
dec
js
add
add
add
add
sarb
pop
jp
add
jp
add
jp
add
add
or
add
jp
add
jp
add
jp
add
jp
add
add
add
add
xor
jbe
add
mov
jl
add
jnp
add
add
into
jnp
add
jl
add
jnp
add
add
mov
add
jnp
add
jnp
add
jl
add
add
dec
jnp
add
add
add
push
cli
ljmp
cltd
push
repnz
xor
andb
cmovns
fs
clc
imull
hlt
mov
push
pop
mov
jl
stos
loop
mov
in
mov
jbe
lods
insb
daa
mov
pop
lods
mov
leave
insl
icebp
ret
pop
mov
gs
cs
testb
jne
xchg
int
fidivs
pop
dec
xor
push
ds
insb
sbb
fldcw
jmp
mov
sub
sahf
leave
pop
dec
mov
xchg
lods
sbb
outsl
mov
mov
mov
cwtl
into
into
fadds
push
hlt
inc
pop
sbb
cld
dec
mov
in
cmpb
lret
aam
pop
les
jmp
cmp
sbb
jmp
sub
clc
filds
sbb
pop
or
fwait
aam
mov
sub
sub
scas
int3
mov
sbb
sub
scas
jle
out
mov
mov
cmp
push
xchg
sti
mov
lret
add
sti
inc
dec
cld
arpl
mov
in
and
inc
dec
lea
js
flds
xchg
stos
negb
xlat
sub
dec
notb
lcall
popa
sub
popl
in
dec
sub
mov
xchg
movsb
movsb
xor
shrb
ds
pushf
adc
adc
in
enter
mov
adc
sub
jne
jne
sahf
and
leave
push
jo
adc
ja
mov
or
fmul
xor
mov
mov
cltd
movl
pusha
sti
pop
fsubrl
lret
outsb
scas
fsts
add
mov
jne
lret
daa
je
outsl
outsb
xor
iret
in
sti
adc
adc
pop
rolb
dec
sub
std
push
addr16
mov
cmp
mov
cmc
in
mov
sub
dec
mov
sub
inc
push
mov
and
jle
sub
cs
loop
lods
push
xor
push
jno
outsb
roll
out
in
and
jnp
cltd
mov
cmp
jnp
into
test
dec
mov
sbb
outsl
mov
decl
and
mov
ljmp
xchg
daa
xchg
cmp
addr16
mov
jne
jmp
xchg
sti
xor
push
jl
lcall
out
dec
cmpsl
lea
mov
shrb
and
in
dec
ret
inc
xlat
adc
cmpsl
push
imulb
or
sbb
mov
and
nop
mov
out
push
cmc
xchg
jns
repnz
pmaddwd
ljmp
pop
mov
xchg
jecxz
cltd
push
adc
pop
mov
pushf
sarl
in
cmp
mov
adc
in
jmp
dec
add
pop
cmpsl
sub
int
sbb
mov
jmp
sub
xchg
inc
js
or
leave
add
out
dec
hlt
jmp
mov
gs
dec
add
mull
add
shr
xchg
push
outsl
ud2
cmc
into
sbb
jnp
inc
stos
js
fwait
jmp
out
sub
loopne
push
out
mov
and
ftst
cli
mov
rclb
scas
movsl
adc
mov
jae
dec
push
fwait
xor
imul
xchg
fwait
pop
dec
push
fstpl
add
push
mov
add
add
xchg
cmp
repz
imul
cmp
sahf
pop
lahf
push
add
mov
mov
mov
clc
inc
jnp
push
mov
push
xlat
imul
push
fcmovb
lret
clc
dec
sub
sub
or
adc
cld
mov
out
insb
inc
pop
cmp
sti
dec
cmpsb
jg
xchg
xor
pop
push
fmull
jge
mov
jmp
xor
mov
test
out
jb
sahf
cmp
scas
jne
cmp
push
in
push
mov
mov
mov
mov
shrl
mov
call
scas
aaa
mov
fprem1
inc
rorb
inc
push
hlt
jg
sbb
mov
scas
jge
dec
hlt
dec
mov
outsb
mov
arpl
jmp
add
push
rclb
mov
out
data16
mov
inc
in
inc
repz
sub
xchg
bound
hlt
push
dec
add
xor
jmp
sub
push
loopne
and
add
cmp
leave
hlt
stc
adc
sub
dec
sub
bound
dec
xlat
push
mov
dec
xchg
mov
jns
loopne
popf
mov
mov
sub
lahf
add
sti
mov
sub
ret
mov
add
lea
in
inc
lods
sahf
xor
mov
adc
jb
pop
and
movzbl
mov
mov
stos
mov
leave
shrb
pop
sub
enter
test
jp
lcall
pop
and
imul
popa
call
les
shr
adc
jle
test
test
cmp
movsb
in
cltd
aam
adc
mov
xor
test
jge
aad
sub
sbb
test
fildll
sbb
stc
shl
pushf
std
jmp
jge
mov
mov
mov
cmp
dec
mov
popf
push
test
cmpsl
xchg
jbe
mov
push
stc
leave
dec
cmc
faddl
dec
inc
push
mov
addr16
stc
stc
sub
dec
push
clc
mov
add
orb
jmp
or
out
mov
adc
insb
shr
sbb
jb
sbbl
mov
arpl
fldt
mov
sahf
or
xlat
dec
push
xor
fsubrl
loope
jb
xlat
sahf
mov
dec
test
dec
pop
pop
cmp
orb
xchg
aaa
fst
divl
push
dec
les
jmp
dec
sub
sub
ret
push
fisubl
cmp
inc
fsubl
or
dec
mov
jle
and
pop
je
jns
subb
dec
sbb
negb
out
insl
mov
inc
mov
into
jl
mov
sub
cltd
push
nop
xor
dec
cmpb
and
pop
or
cmpb
xchg
scas
outsb
insl
xor
push
xchg
cld
cmpsb
jmp
push
jmp
jecxz
cwtl
push
mov
arpl
mov
jns
dec
mov
or
outsb
js
mov
cwtl
jmp
jne
insb
es
sbb
cmp
icebp
in
adc
mov
or
mov
sti
bound
aas
mov
sub
aad
pusha
or
sbb
packuswb
stos
lock
out
aaa
lock
mov
sub
int3
jno
sbbb
outsb
fstpl
int
in
jmp
jo
jecxz
lret
iret
push
mov
adc
hlt
jmp
test
cmc
sub
enter
dec
mov
jg
sbb
mov
iret
outsb
lret
test
data16
dec
push
mov
xor
push
iret
mov
sub
rclb
rcl
lods
insl
mov
popf
pop
outsl
outsb
je
mov
es
out
lock
adc
ja
push
pushf
dec
pusha
lds
cli
arpl
mov
enter
xor
dec
movsb
or
lods
dec
mov
jns
inc
lock
add
fsubl
dec
dec
lea
mov
outsb
pop
sbb
xor
push
test
jmp
and
adc
fdivrs
mov
jnp
add
loope
into
or
dec
iret
mov
or
fsubr
push
into
outsl
sbbl
push
cmp
inc
xchg
xor
jo
insb
lret
pop
mov
mov
dec
push
mov
frstor
xchg
mov
mov
dec
fsubrp
shrl
sub
outsb
psubusb
out
mov
jb
push
je
mov
inc
sub
fdivr
imul
aas
mov
lods
int3
in
out
es
rcr
repnz
jp
cmp
adc
lcall
cltd
mov
add
mov
aad
inc
sub
sub
pushf
out
jg
and
loopne
add
ljmp
repnz
jg
addps
inc
outsl
jbe
xchg
add
adc
mov
outsb
add
mov
popf
mov
sub
in
or
popl
in
mov
sub
cs
cmp
sub
xor
sub
hlt
push
mov
sub
sub
fnstenv
lahf
mov
cmpsl
stos
jmp
adc
rcr
mov
cmp
test
push
ficoms
adc
dec
outsb
add
aad
fiadds
mov
mov
gs
iret
sar
cmp
pop
rorl
mov
sbb
rcll
xchg
iret
cmp
jl
imull
cmp
in
lea
jmp
push
jmp
push
pushf
pusha
and
jmp
adc
and
into
sub
sahf
out
dec
and
mov
outsb
push
sbb
push
push
fldl
jg
into
into
jle
fidivs
clc
cmovo
jmp
imul
or
test
sbbl
inc
in
sub
outsb
sub
mov
xchg
mov
dec
jmp
xor
add
orb
mov
xchg
test
push
xor
add
rcl
jmp
mov
sbb
xor
stos
bound
ret
movsb
mov
pop
jecxz
jmp
fists
bound
cmp
inc
push
sbb
movsl
leave
jnp
fsqrt
bound
sbb
jo
add
ss
jmp
pop
dec
rclb
fldt
sbb
ss
push
jnp
sub
mov
hlt
jmp
mov
add
out
and
shrb
shll
inc
adc
lea
insl
and
bswap
adc
push
mov
xor
dec
js
lods
jmp
addr16
jl
xchg
negl
fidivl
dec
in
sbb
loop
mov
ret
aaa
outsl
in
sbb
mov
mov
das
aas
popf
adc
cmp
test
pop
pop
iret
mov
xor
in
add
arpl
jae
sub
in
fisubl
xchg
xchg
iret
xor
cmp
dec
push
push
pushf
sbb
outsb
outsl
stos
sbb
in
aad
outsb
and
lods
sbb
pusha
mov
movb
mov
in
jg
xchg
xlat
xor
xor
out
aas
jmp
mov
sbb
outsb
jnp
orl
push
add
aam
xorb
sti
dec
mov
push
out
sub
mov
xor
push
fildll
int
jg
jmp
push
push
mov
xchg
fmuls
push
arpl
outsb
filds
cmp
jmp
cmpsl
sbbb
sti
inc
nop
ljmp
jno
lods
add
push
dec
mov
testb
jne
add
xor
imul
jl
test
fsubrl
movsb
add
outsb
popf
out
and
sub
xor
inc
xchg
repz
shl
xchg
mov
cwtl
dec
hlt
mov
and
repz
jbe
pop
cmp
sarl
add
jns
mov
shr
inc
or
pop
mov
cmp
mov
pop
into
jnp
mov
mov
stos
push
inc
mov
lret
fs
jnp
xchg
xlat
mov
movsb
xchg
fisttpll
mov
pop
repnz
imul
xlat
mov
jg
jae
insl
pop
dec
lock
xchg
add
dec
or
mov
push
mulb
mov
mov
imul
mov
cmpsb
mov
fidivs
push
sahf
nop
imul
pop
jp
xor
int
mov
pop
xchg
pop
dec
sub
jmp
add
pcmpeqb
fsubl
or
fisubrs
mov
xor
sub
pop
fnstcw
add
bound
outsb
dec
sbb
or
jl
rcrl
ja
or
es
in
lahf
mov
push
mov
mov
daa
cmp
outsl
mov
or
in
sbb
pop
push
inc
mov
pop
jnp
xor
pop
xchg
sub
gs
fcomps
iret
out
xorb
in
sbb
cmpsl
mov
fdivp
aaa
dec
rolb
cmp
push
sarl
pop
sarl
enter
es
pop
xchg
aas
pusha
jg
cwtl
pop
test
inc
flds
or
or
aam
jecxz
mov
mov
fimuls
xchg
aas
js
imul
js
aam
in
mov
mov
sub
mov
jmp
gs
nop
xor
in
mov
out
les
fdivp
mov
pusha
add
outsb
xor
xorb
ljmp
imul
lea
mov
out
and
out
xchg
dec
push
jle
in
xchg
hlt
sub
outsb
mov
pop
popa
adc
dec
int3
in
sbb
fwait
jae
add
dec
imul
mov
rclb
dec
push
testb
aad
jb
das
adc
or
jmp
and
ja
mov
stos
or
stos
jl
arpl
push
ss
aam
sbb
fisttpll
mov
mov
dec
jnp
xchg
cwtl
mov
sti
outsb
add
pushf
lea
dec
mov
push
sbbb
je
mov
outsl
or
std
pop
cmp
dec
mov
push
dec
je
test
dec
lret
add
imul
stos
xchg
mov
movsb
outsb
insb
jo
insl
jo
mov
fidivrl
xlat
or
loopne
dec
punpckhwd
loop
mov
xor
fistpll
divb
jmp
scas
add
out
push
pop
mov
push
outsl
je
jle
sub
inc
push
xchg
xor
sahf
jmp
mov
xchg
xchg
popf
cli
in
iret
loope
les
jg
addr16
mov
pop
scas
popa
mov
push
js
jb
jo
out
repz
sbbl
jns
inc
insb
cmpsl
cli
mov
jae
outsl
frstor
scas
cld
jmp
cld
sti
sub
add
mov
xchg
push
incl
inc
or
jo
pop
int3
imul
jne
out
jmp
fidivs
jmp
out
jmp
aam
inc
sub
aad
and
cli
call
xchg
mov
outsb
xchg
jno
jno
movsb
jmp
sub
aad
ljmp
push
arpl
dec
cwtl
movsb
lods
insl
pop
das
aad
das
jge
dec
inc
fmul
lods
stc
mov
mov
xchg
mov
out
sbbl
dec
stc
mov
cmpsl
dec
nop
stc
loopne
stos
icebp
push
mov
hlt
testl
inc
stos
js
cld
mov
rep
mov
aaa
mov
ja
dec
dec
pop
pop
rcrl
daa
or
movsb
sbb
add
flds
outsl
notl
xchg
das
aam
sbb
gs
jb
and
inc
push
dec
out
push
popf
push
push
data16
ret
inc
cs
xor
mov
nop
outsb
pop
cmc
or
outsb
add
mov
jmp
repz
jb
cmc
rorb
mov
scas
arpl
imul
mov
stc
stos
lods
mov
orb
and
dec
or
subl
rcrl
jnp
or
in
shll
sti
test
outsl
pusha
push
cmp
ds
rorb
decl
pop
or
sarb
push
js
mov
cmpsb
dec
in
push
sti
mov
sbb
jp
mov
pop
aad
test
hlt
sub
mov
enter
mov
testb
shll
adc
pop
inc
mov
iret
fcmovb
sahf
inc
shr
fsubp
adc
gs
mov
fmull
pop
popa
push
bound
outsl
loopne
adc
cmc
mov
sbb
or
adc
sbb
mov
std
inc
push
mov
lret
leave
rorb
push
outsb
ja
repnz
popa
jmp
pushf
mov
xchg
in
out
pop
test
lea
out
mov
mov
cmpb
outsl
inc
in
xor
dec
into
sbb
icebp
xlat
or
push
mov
addr16
pop
cmp
and
adcl
stos
mov
mov
mov
dec
sub
push
add
cmp
jg
push
aas
add
jns
ja
jmp
push
pop
repz
dec
int
rcrb
xchg
outsb
shll
dec
and
jne
hlt
mov
movsb
addr16
and
inc
out
aas
mov
pop
dec
mov
inc
mov
outsb
dec
mov
jmp
lahf
ds
mov
xchg
mul
xor
in
mov
xor
jns
orb
hlt
cmp
clc
mov
fisttpll
fs
addr16
outsl
rcrl
push
sub
popa
pop
aas
push
cmp
push
add
into
pop
sub
sbb
adc
in
push
mov
cld
mov
or
pusha
add
adc
xor
jge
fsubrl
lock
push
pop
dec
outsb
pop
cmpsl
mov
test
imul
fcoms
scas
push
lods
lret
push
push
lds
jmp
mov
stos
hlt
dec
std
xlat
mov
fstl
cmp
in
mov
sub
xor
lods
outsb
data16
das
or
push
dec
scas
int
jbe
and
or
sub
sub
mov
outsl
iret
or
clc
in
insl
repnz
iret
rcrl
insb
push
mov
push
dec
dec
jmp
add
mov
cmp
xchg
xchg
jg
dec
mov
inc
clc
mov
in
dec
jbe
cmp
jns
ret
into
or
jecxz
dec
xchg
testl
mov
or
in
insb
aam
loopne
xor
paddsb
data16
adc
fnsave
dec
dec
jge
addr16
outsb
pop
jmp
jl
pusha
pop
add
es
enter
and
imull
xor
mov
add
mov
cmpsb
mov
dec
loopnew
sbb
hlt
popa
add
daa
xlat
subb
sbb
mov
dec
daa
jp
pop
adc
sub
in
fs
dec
jmp
dec
sub
push
in
loopne
mov
imul
xchg
dec
inc
lock
jne
push
xchg
dec
bound
xlat
movsb
mov
fucom
fldcw
xchg
pop
add
inc
dec
pop
mov
dec
mov
jbe
push
iret
addl
stc
jo
jle
mov
pop
push
jmp
sbb
shr
scas
dec
popf
dec
shr
and
stos
sbb
cwtl
mov
xor
mov
xor
xor
sti
mov
shlb
setg
mov
loope
test
mov
pop
dec
cmc
jns
jl
push
call
cmp
fcompl
jae
inc
es
repz
testb
ja
and
jno
cld
testb
mov
test
testb
cmp
and
add
dec
scas
or
xlat
cltd
aaa
push
cli
jecxz
add
cmpl
dec
mov
outsb
adc
in
fimuls
out
cmp
push
lock
pop
push
repnz
jmp
gs
sub
push
jmp
call
fdivp
fidivs
xchg
mov
xchg
adc
and
adc
pushf
cmpsb
aad
enter
push
cs
lret
bound
sbb
and
test
mov
xchg
sub
ret
dec
scas
fsubl
dec
out
xor
mov
sub
movl
xchg
test
xor
fwait
add
xchg
test
mov
dec
sbb
mov
mov
dec
fmul
loope
xor
cmp
and
insl
out
jge
dec
push
insl
mov
lods
sbbb
inc
or
push
in
bound
out
jg
mov
ljmp
add
mov
jne
gs
dec
jge
cmpsb
mov
js
and
jne
mov
pop
sbb
inc
add
ja
dec
pop
mov
in
out
sub
jmp
sub
mov
es
mov
icebp
mov
in
out
lods
jns
dec
nop
mov
outsb
jnp
loop
and
fsubrl
cmp
stc
imulb
into
cmp
dec
jno
xor
add
jge
xor
lock
lea
call
aaa
dec
mov
mov
mov
jmp
push
popf
mov
pxor
add
xor
test
iret
and
loope
scas
les
xchg
inc
ficoml
int
mov
aad
fmulp
push
mov
ds
test
pop
mov
sti
xor
mov
jl
out
sarl
push
in
stos
jb
out
repz
fldt
ljmp
nop
inc
ja
fists
inc
pushf
gs
add
lcall
sbb
les
jns
outsl
push
scas
fidivrs
outsb
inc
xor
ret
stos
jns
stos
sbb
dec
fnstcw
sub
es
in
leave
incl
mov
xor
bound
mov
ficompl
xor
mov
rorb
xlat
adc
mov
push
cld
adc
push
pop
insl
xchg
ljmp
call
cmpsl
cltd
lret
push
jp
fsubrl
stc
in
xchg
or
pop
sbb
jg
out
sbb
pushl
lcall
mov
fsubrp
insl
rcr
mov
xchg
inc
cmpsb
mov
les
rorb
rep
imul
cmp
and
dec
bnd
sarb
mov
data16
out
out
jb
push
outsb
fwait
xchg
jb
imul
mov
sbb
or
lahf
and
inc
xor
pusha
inc
sub
mov
inc
inc
inc
sbb
insb
ret
sbb
xor
or
outsl
push
and
jnp
jne
mov
jmp
mov
sbb
cs
jb
je
sub
outsl
hlt
sub
mov
xchg
adc
repz
cmp
or
call
and
dec
jle
push
lods
adc
sbb
sub
mov
sahf
mov
jns
movsl
and
pminub
dec
jo
pushl
insb
sub
cmc
repnz
cwtl
jmp
mov
andb
andb
les
in
jmp
gs
jbe
leave
xor
xchg
and
int3
and
push
xor
sbb
pop
in
lret
dec
or
in
jecxz
adc
inc
mov
repnz
dec
cld
cli
jmp
cs
sbb
je
lea
push
mov
push
ss
repz
or
sbb
out
lea
xor
jae
int3
add
xchg
jo
dec
dec
mov
fcomps
cmp
push
xchg
jmp
inc
sub
mov
mov
mov
dec
add
aad
and
les
cmp
into
adc
ljmp
inc
lock
dec
outsb
push
insb
insl
into
xchg
cmp
mov
mov
xchg
cmpsl
bswap
pop
dec
mov
mov
movsl
stos
dec
lret
loop
jge
scas
das
ljmp
decl
and
adc
dec
loopne
cli
arpl
jo
popa
mov
testl
in
enter
dec
sti
cmp
fldl
sbb
lret
pop
jb
sbb
cmpsb
push
lods
fidivrl
mov
cmp
or
rcll
lahf
fmulp
in
xchg
jb
jmp
dec
or
dec
shll
jmp
sarl
mov
xchg
in
jmp
jno
xchg
inc
mov
and
cmp
add
cmpsb
lock
sub
xchg
xchg
daa
cmp
jno
in
xlat
pop
add
lds
insb
sbb
jnp
mov
inc
mov
adc
imulb
and
mov
push
xchg
pop
dec
sbb
jb
fwait
test
pop
filds
pusha
or
or
stos
cmp
jmp
xlat
or
adc
xchg
pop
outsb
fwait
into
ja
cmp
pop
in
clc
ds
subb
jp
fisubrs
sbb
aam
fs
lret
enter
stc
gs
icebp
call
out
pop
xchg
mov
lret
xchg
inc
sbb
sub
pop
outsl
xlat
jg
das
or
pusha
inc
pop
inc
imul
xchg
inc
pop
adc
xchg
sbb
psadbw
jno
and
sbb
inc
test
dec
mov
mov
lret
fs
test
mov
mov
dec
outsl
sbb
mov
repz
scas
mov
ja
cmp
sub
test
adc
mov
pop
out
fadds
cmp
dec
mov
dec
lods
unpckhps
xor
inc
mov
popf
adc
inc
shr
mov
push
dec
mov
cmpsl
mov
mov
mov
mov
inc
cld
jbe
es
insl
add
dec
lea
ss
fcmovb
lahf
movsl
cmp
mov
push
fwait
dec
pop
or
clc
sti
or
gs
or
dec
jns
iret
and
add
adc
push
mov
in
inc
xor
cs
and
dec
dec
clc
dec
sbb
xchg
lds
aam
push
push
mov
and
test
adc
outsb
lea
xchg
in
clc
pop
dec
ret
shlb
mov
or
mov
mov
aad
jge
ret
notb
sub
dec
inc
push
dec
xorb
dec
leave
nop
push
sbb
pop
mov
sub
inc
pop
cmp
sti
into
push
pop
call
imul
mov
scas
sub
outsb
imulb
pop
lret
fs
mov
sub
mov
xlat
sub
mov
lock
int
sbb
leave
mov
jmp
mov
pop
cmp
lret
out
fwait
mov
lods
shrb
push
mov
fbld
outsl
movl
mov
mov
push
in
hlt
cmp
imul
lods
dec
das
inc
imul
pop
mov
cmp
test
cmp
je
fwait
out
xchg
mov
dec
pop
cmp
push
imul
mov
xor
sub
dec
jns
imul
jg
scas
push
jno
or
scas
pop
jne
ret
sub
dec
jge
movsl
in
cmp
cltd
gs
test
gs
in
imul
mov
xor
inc
adc
xor
jg
mov
outsb
lret
lret
test
xchg
jmp
jmpw
xchg
and
and
inc
jmp
leave
sbb
lea
hlt
rcrl
push
xor
in
int3
cmp
inc
popa
xor
gs
repz
testl
sub
ret
shrb
pop
dec
and
dec
test
xchg
mov
xchg
inc
je
fwait
lods
aas
outsl
xlat
xchg
inc
add
push
mov
and
outsl
pop
sar
jecxz
fcoml
jb
ss
cmp
mov
movsb
add
mov
xor
divb
in
stos
sub
cmp
push
jb
inc
push
sbb
mov
test
mov
mov
push
dec
inc
mov
int3
jmp
icebp
scas
xlat
call
dec
ja
pop
mov
pop
scas
mov
xor
clc
inc
inc
jg
out
shrl
rcrb
fisttpll
mov
bound
lcall
ds
popa
lods
nop
adc
insl
pop
fiaddl
test
push
mov
repz
lods
imul
adc
jmp
push
shlb
inc
out
jmp
adc
aaa
out
xchg
add
mov
mov
int3
adc
push
cmp
xchg
imul
jo
mov
mov
shl
push
mov
pop
icebp
nop
xor
sarl
pusha
dec
inc
aad
push
fwait
dec
jnp
dec
fst
addb
xchg
outsb
repz
dec
sub
mov
scas
jmp
jnp
adc
sub
mov
and
daa
test
out
dec
sub
loope
push
mov
and
inc
ss
sbb
outsl
stos
lods
xor
push
dec
sahf
daa
mov
aaa
aad
aas
movsb
mov
dec
jle
std
cmp
mov
addl
xor
cltd
jnp
lock
jo
cmc
cwtl
and
insb
sbb
lods
push
mull
sbb
cmp
dec
sti
or
dec
fimuls
mov
lods
fstpt
mov
mov
xlat
frstor
dec
movsl
jg
cld
enter
es
rorl
sti
inc
cmp
out
popa
rcrl
hlt
scas
ds
sbb
shl
outsl
mov
adc
push
leave
push
jmp
aas
lea
scas
ss
mov
mov
in
movsb
mov
pusha
add
inc
dec
shr
loope
xor
pop
adc
jne
lds
jbe
or
loope
leave
mov
sbb
fcompl
int
shufps
lcall
in
push
ss
das
mov
jmp
ds
cmp
jl
pop
mov
and
int3
outsb
sbb
mov
push
scas
test
cmc
pop
push
aam
ret
mov
dec
icebp
sbb
outsl
es
dec
movsl
push
mov
insb
jmp
mov
push
ficomps
push
test
cmc
int3
imul
fiaddl
insl
mov
jge
ret
jle
into
negl
scas
pushf
out
sbb
arpl
mov
mov
test
sbb
sbb
sti
out
lods
imul
pop
unpcklps
cmpsl
arpl
cld
jmp
push
push
or
cwtl
adc
mov
xchg
or
sub
inc
adc
inc
sub
into
icebp
and
cmpsb
mov
dec
mov
or
mov
popf
mov
or
cmpl
jecxz
pop
sbb
dec
add
sbb
cli
stos
lea
sbb
pop
and
sub
cli
dec
inc
js
pop
sti
dec
lahf
enter
cmc
xor
xor
push
outsl
adc
jae
cmp
sti
into
cmp
mov
outsl
push
imul
inc
mov
cmp
cmp
inc
out
or
ss
xchg
nopl
jmp
daa
push
jnp
sub
lret
lea
add
test
leave
mov
add
or
es
adc
daa
into
sar
lock
push
outsb
xlat
xor
dec
loop
outsb
jno
lahf
stc
lcall
mov
add
jae
push
jno
mov
sbb
push
xor
es
adc
lcall
into
push
fsubl
jns
fstl
fisttps
or
pusha
insl
pop
ss
lods
jnp
jo
dec
aaa
hlt
pop
dec
pop
in
stos
rclb
mov
dec
dec
stc
cmp
xchg
or
xor
xchg
stos
sbb
dec
jl
dec
sbb
int
fdivl
mov
pop
push
mov
fcmovnu
aaa
mov
hlt
rcrb
xchg
cli
sti
mov
mov
test
and
daa
adc
jae
mov
scas
andb
xchg
sub
fmull
movsb
xor
jmp
lock
jle
cmpsb
ss
fsubr
mov
out
dec
jmp
test
loopne
xchg
mov
pop
stc
push
cmp
mov
int3
mov
std
repnz
xchg
lds
mov
jnp
frstor
daa
cmpsl
inc
add
in
gs
stos
test
jbe
push
testl
movsw
mov
movsb
xchg
pop
mov
xchg
enter
inc
mov
daa
or
sub
mov
mov
add
cs
mov
int
jmp
cli
or
jle
mov
out
int3
mov
jae
lea
and
and
lds
inc
rorb
adc
mov
sub
jne
jmp
push
mov
dec
fidivrs
popa
popf
cmp
cld
sub
rcr
and
xor
adc
aaa
jo
sti
pop
mov
aas
lods
xor
fwait
jmp
addr16
cwtl
mov
js
adc
add
inc
mov
cmp
repnz
jecxz
dec
ffree
mull
mov
in
xchg
mov
mov
int3
lret
dec
sarl
mov
cli
add
pop
ret
cmp
dec
sbb
jmp
mov
sbb
mov
pop
and
lret
dec
jle
insb
mov
cmp
popa
je
enter
push
aam
loope
xor
std
pop
out
test
mov
in
les
mov
sbb
lock
repz
shrb
xchg
cld
cmp
jl
dec
dec
stos
adc
or
push
je
imulb
addr16
fmull
shufps
je
adc
imul
xor
push
lret
mov
jo
fildll
sarl
push
mov
jl
jge
xchg
orl
mov
cmpsb
sub
outsl
push
jno
insb
jecxz
jne
in
sbb
sbb
jge
loop
dec
dec
popl
push
add
xor
xor
imull
and
lods
lods
pusha
add
or
push
repz
add
in
adc
jbe
mov
mov
movsl
or
in
sbb
dec
aad
xchg
or
pop
add
in
sub
lahf
insl
mov
out
xor
outsl
stc
out
adc
popa
and
push
iret
stos
adcl
test
lock
clc
gs
int
pop
fstl
adc
mov
push
sbb
adc
dec
jg
mov
stos
ficoms
mov
pop
or
pop
mov
loop
loopne
pusha
insb
out
push
cmp
out
jmp
leave
pop
xor
mov
cld
xchg
push
push
sbb
mov
stc
fs
push
add
push
shlb
pop
add
inc
xor
push
mov
xor
mov
jge
lahf
dec
and
push
sbb
mov
cmpsb
sbb
int
call
out
mov
pop
cmp
mov
popf
pop
push
add
mov
add
nop
in
cmp
xchg
sti
mov
dec
xor
out
fdivs
jl
into
notb
dec
loopne
add
inc
inc
mov
pop
sub
cld
adc
aaa
jg
mov
push
adc
mov
push
mov
incb
mov
ja
test
int3
pop
lea
cld
jno
cmp
sbb
imul
dec
pop
push
xchg
dec
mov
adc
leave
push
in
lcall
mov
pop
js
mov
xor
in
mov
mov
mov
ftst
mov
popa
cli
insb
fwait
xlat
jne
add
into
ret
and
ss
cmpsl
jno
insl
js
repnz
fidivrs
add
mov
call
jg
and
xchg
inc
xchg
iret
stos
xor
or
das
outsl
xchg
mov
push
push
sbb
outsb
mov
lods
add
xchg
std
add
inc
pop
lods
shlb
shrb
daa
or
sub
loope
inc
test
stos
sti
inc
or
outsl
push
xchg
notw
mov
aas
hlt
add
xchg
sbb
ja
and
mov
xor
das
pusha
push
dec
fwait
add
jecxz
je
test
cmpsb
shrb
adc
pusha
mov
jmp
mov
add
add
jo
jp
repz
add
sahf
cmp
les
xchg
dec
ljmp
mov
leave
push
aaa
lcall
ret
leave
sub
dec
xchg
lahf
push
xor
cli
inc
ds
dec
subl
outsb
and
test
out
iret
out
jmp
std
data16
in
jg
xchg
add
jecxz
mov
mov
or
or
out
pop
xor
fmul
pop
push
jb
mov
sbb
xor
jns
xchg
jmp
lcall
mov
cmp
call
and
repnz
mov
dec
outsb
xchg
sarl
xor
jle
pop
sbb
mov
dec
push
push
or
loop
adc
push
shr
outsb
or
cmp
lods
mov
out
dec
xor
mov
mov
jl
loop
arpl
mov
add
in
lret
or
lret
in
cmp
fucomi
mov
gs
iret
imul
out
sub
inc
add
movsb
xchg
cmp
push
jb
daa
fistpl
xor
stos
dec
sub
sbb
or
mov
shrb
push
stc
push
ljmp
cs
lods
mov
fst
push
icebp
sti
jmp
add
psubusw
inc
jmp
adc
hlt
sub
mov
bnd
sbb
pop
add
fwait
fwait
ja
dec
xchg
scas
ja
jmp
lds
ret
jl
add
mov
scas
push
les
or
fcoml
inc
les
mov
dec
icebp
test
das
hlt
inc
dec
xorb
cmp
out
ret
and
icebp
loop
sub
fmuls
mov
mov
xor
repz
mov
push
sub
inc
cwtl
test
iret
adc
in
test
jmp
pop
xor
push
int3
imul
ds
movsb
add
push
fistl
dec
cs
repnz
xor
mov
call
pop
cmp
ja
out
sbb
dec
adc
fadds
adc
jno
mov
add
inc
jg
lock
sbbb
cwtl
fnstenv
inc
stos
mov
cmp
jmp
pxor
adc
mov
dec
icebp
or
xlat
inc
or
jne
enter
fldcw
dec
insb
pop
shlb
pop
out
fimuls
xchg
std
lds
xchg
mov
adcb
sarb
sub
cli
or
cs
testb
movsb
pushf
inc
imul
imul
lea
cmpsb
rcl
sub
inc
cld
jmp
outsl
push
pop
pop
roll
or
jb
inc
js
outsb
or
scas
mov
jns
xchg
mov
outsb
cli
xlat
ds
ficoms
dec
test
pop
cmp
cltd
jb
imul
fidivrl
xor
clc
mov
cmpsb
jmp
insl
xchg
inc
xorl
pop
fwait
jbe
pushf
das
xchg
ljmp
movsb
jge
js
mov
fst
out
sarl
inc
leave
mov
pop
mov
cmp
imul
push
insb
popf
dec
fisubrs
mov
sti
leave
mov
lcall
mov
aaa
insl
sub
mov
dec
add
insl
pcmpeqw
cli
das
hlt
fistpll
ret
mov
cmp
movsb
or
mov
mov
sbb
int3
icebp
jmp
inc
push
cli
scas
push
push
sub
mov
push
negl
cmp
xor
mov
pop
xchg
clc
sub
in
push
cmovo
cmp
bound
xor
jp
inc
xor
sub
lahf
mov
jle
sub
mov
aas
popf
iret
cli
fwait
mov
sbb
fwait
aad
enter
jmp
jmp
stc
and
xchg
sub
adc
jbe
jae
mov
mov
sbb
jb
push
cmp
adc
les
ja
mov
sub
push
and
out
push
mov
call
xchg
xchg
jb
jg
pusha
mov
pusha
or
popa
add
outsl
int
aad
movsl
and
movsl
ja
sub
outsb
fimull
mov
iret
in
aam
jmp
bound
push
rep
push
mov
cmp
dec
nop
cli
mov
jo
outsb
dec
fbstp
push
addr16
inc
push
cmp
out
adc
scas
cwtl
cmp
mov
jae
dec
outsb
lock
into
outsb
and
in
popf
scas
jmp
imulb
or
lret
sbb
adc
xor
repnz
jbe
sbb
ror
enter
outsb
and
aad
fldenv
mov
jbe
lcall
lret
dec
mov
xor
jge
dec
das
cmp
hlt
std
jecxz
in
repz
test
movsl
pop
stos
jns
cmp
call
test
add
outsl
push
shrl
dec
clc
jg
jns
pop
cmpl
dec
in
ror
mov
mov
cmp
jg
and
xchg
ja
pusha
mov
lret
out
or
inc
ljmp
insl
sub
cmpsb
ret
movsb
inc
xor
xchg
sub
dec
adc
nop
loopne
clc
scas
mov
in
orl
mov
outsb
lahf
or
xchg
out
cmp
outsl
std
pop
jle
int
pop
test
inc
and
repnz
int3
and
lock
rcrb
cmpsb
pushl
lods
lea
push
fstps
stos
sub
pop
mov
outsb
fdivs
lahf
roll
xchg
inc
mov
sub
test
mov
inc
movsl
enter
movsb
sub
xor
es
mov
push
inc
push
dec
mov
adc
sahf
jo
cmp
dec
mov
into
mov
imul
pop
sti
test
jg
or
out
and
cltd
adc
or
cltd
lea
and
dec
dec
testb
cli
dec
mov
xchg
es
frstor
in
into
lods
andb
xor
mov
dec
ljmp
sbb
ret
jnp
push
jne
shrb
addb
adc
adc
xchg
rolb
jb
jmp
out
test
cmp
cmc
xchg
sbb
jmp
icebp
in
stos
popf
popf
adc
sti
push
popa
jnp
rolb
mov
pop
mov
stos
subb
sarl
xchg
outsb
stc
je
cmp
mov
jmp
push
mov
in
loopne
mov
lahf
cmc
or
incb
scas
mov
sbb
mov
fmull
jb
bound
in
mov
mov
add
push
dec
out
push
sbb
jl
or
shll
lock
fisubrl
jp
push
sar
cmp
push
js
test
mov
loop
popa
je
jmp
cmp
imull
dec
setb
jp
dec
sbb
fisttpll
outsb
push
nop
pop
ja
sub
or
add
pop
lock
cmpsl
push
hlt
in
clc
or
mov
scas
jno
dec
in
jmp
jp
sbb
in
lret
fcoms
dec
push
outsb
mov
in
into
cli
jmp
jae
ja
xlat
sbb
lahf
dec
cld
je
jg
test
mov
push
xor
sbb
dec
cmpsl
cmpb
inc
dec
icebp
push
xor
daa
das
ret
pop
loop
pop
xchg
dec
lcall
xchg
mov
test
xor
pushf
inc
dec
jae
movsb
sbb
fsubl
cmp
jmp
arpl
repz
and
test
xor
cmc
mov
fs
mov
ret
loop
cmp
sbb
enter
int3
lock
or
lds
adc
xchg
mov
imul
jl
in
jle
mov
and
xchg
pushf
mov
and
adc
adc
ljmp
setae
aad
or
mov
cmp
pop
adc
je
push
ja
mov
jg
test
jb
mov
test
sbb
int
cmp
popf
jb
push
mov
cs
imul
mov
xchg
outsb
jb
lods
and
ja
jae
out
and
pop
lret
nop
jg
xor
push
fs
mov
repz
sub
jmp
daa
mov
push
mov
fucom
pop
ss
cmp
pushf
pop
xchg
and
popf
fwait
xor
jno
mov
inc
adc
mov
dec
inc
cmp
dec
push
jns
dec
outsb
xor
repz
fstps
sub
std
cld
sbb
xlat
cmpsb
pushf
iret
mov
mov
movsb
inc
and
pop
enter
imul
imul
sub
xor
xor
jne
sbb
lods
add
cmc
insl
repnz
stos
or
arpl
and
in
push
sbb
cmp
outsb
mov
cs
push
inc
daa
out
jne
adc
dec
test
add
jp
inc
cmp
aam
ror
std
sub
addr16
jecxz
repnz
mov
cli
jb
mov
mov
adc
dec
push
ret
mov
adc
xor
cmp
dec
decl
ljmp
enter
hlt
daa
pusha
sub
aad
xor
out
fwait
test
mov
jge
neg
dec
jl
cmc
push
or
lea
outsl
int
outsl
push
push
scas
adc
aas
mov
stos
jb
mov
outsb
orb
xchg
sbb
adc
dec
dec
gs
in
jmp
xchg
add
outsb
in
and
sbb
ror
popf
jae
addr16
roll
ss
dec
pop
les
cmpsb
call
int
mov
push
xor
mov
stos
jmp
shr
sub
sub
inc
sbb
and
stos
dec
ljmp
or
rorl
adc
test
push
mov
pop
arpl
imul
loope
dec
jmp
push
lcall
mov
addr16
sub
mov
xchg
inc
movsl
adcl
insb
xchg
jnp
fmuls
sub
aas
pop
dec
mov
test
outsl
mov
loop
mov
xchg
cmp
mov
lcall
in
xor
notl
outsl
insl
pushf
pop
pop
sbb
or
mov
inc
or
pusha
push
mov
pop
shrl
outsb
or
add
jl
pop
push
out
fimull
mov
xchg
lret
sbb
xor
mov
pusha
std
stc
scas
or
add
nop
inc
push
fcoml
insb
les
jge
dec
into
and
jae
sub
popa
scas
fwait
pop
inc
pushf
icebp
test
bound
sub
cmp
push
push
sahf
lret
leave
inc
je
xor
das
jp
mov
or
push
push
xor
push
leave
inc
divps
pusha
aas
push
push
cwtl
jmp
xchg
jecxz
xor
repz
pop
fwait
aaa
mov
mov
pop
add
lcall
clc
jecxz
dec
mov
sti
mov
xchg
out
addr16
out
mov
dec
outsb
fwait
inc
fs
js
outsb
andb
aam
clc
imul
fs
ss
sbb
cmp
lods
pop
lods
xor
nop
inc
mov
pushf
sub
jge
xor
push
cld
call
sub
lods
fwait
out
mov
push
loopne
enter
mull
add
sub
cwtl
lcall
dec
icebp
sbb
sbb
pop
ja
bound
adc
xor
or
rcl
js
loopne
fwait
cld
ret
test
add
jnp
sub
stos
mov
mov
jo
dec
and
ja
mov
aas
xor
sarb
xchg
sbb
insl
fcoms
xlat
cmp
call
mov
ret
insb
xchg
xchg
and
jns
leave
xlat
adc
ljmp
xchg
jl
or
imul
rcr
inc
jae
popa
sbb
sti
cmp
jmp
jg
es
push
inc
leave
lods
pop
clc
imul
ret
out
fmull
aam
xor
inc
insb
insb
movsb
push
int3
outsl
in
mov
in
mov
sub
daa
sub
mov
mov
imull
popa
insb
sbb
xchg
mov
push
ja
xchg
jae
incl
xchg
scas
outsb
aas
sbb
es
mov
add
cs
enter
cmp
sub
and
lods
ja
orl
xor
xchg
inc
arpl
jmp
xchg
rcr
add
iret
clc
and
sub
and
and
cmp
jne
enter
outsb
fnstenvs
lcall
dec
popa
xor
fildll
xor
or
mov
jmp
repnz
cltd
fsubrs
dec
ds
jne
mov
inc
cmp
dec
push
and
dec
jb
pop
and
pop
sarb
out
mov
out
xor
roll
inc
shll
dec
into
outsb
lock
mov
dec
outsb
inc
jmp
jl
mov
sahf
mov
stos
lods
dec
dec
test
xchg
rclb
pop
push
imul
push
pop
add
lock
pop
pop
movsb
push
ficoms
pop
cmp
xor
mov
outsb
je
push
setae
faddp
sub
pop
pop
shlb
shll
leave
insl
xor
dec
and
add
dec
out
mov
push
mov
pop
dec
in
ret
xchg
mov
cltd
or
fistpll
sti
inc
dec
repnz
mov
jb
orl
rcrl
ret
jmp
pop
push
and
mov
imul
fwait
jae
repnz
jmp
sub
sbb
add
sbb
and
xlat
test
adc
inc
push
push
aaa
jecxz
addr16
repnz
test
lret
add
or
adc
and
imul
jmp
cmp
dec
sbb
mov
cmpsb
jns
xchg
mov
cmp
push
dec
jno
nop
dec
fs
and
inc
mov
xchg
mov
dec
sub
repz
fsubp
xchg
into
mov
fldt
mov
xchg
add
mov
sbb
nop
jo
in
lods
dec
mov
aaa
fmul
push
push
jnp
pxor
aam
shl
aas
aaa
dec
ficomps
inc
push
push
popf
dec
jae
xchg
jno
lahf
aad
jmp
push
cmp
in
rorl
ret
cmp
aaa
jne
dec
imul
dec
rep
js
loop
mov
int3
jb
mov
mov
push
mov
sub
mov
cli
jno
scas
int3
aas
std
cmp
out
loop
mov
lret
mov
pop
dec
dec
cwtl
mov
dec
xchg
xor
mov
fistl
push
cmp
cmc
or
adc
push
imul
ljmp
lcall
fwait
sub
loop
or
mov
jne
lcall
outsb
aam
mov
mov
arpl
incl
xchg
aam
sub
rolb
dec
ret
pop
xchg
adc
outsl
pop
in
jl
lcall
in
nop
cmpsb
sub
cwtl
cltd
adc
cltd
sub
mov
pop
hlt
jmp
sbb
xor
and
insb
adc
fwait
adc
sbb
mov
jbe
cmp
xlat
mov
lods
lods
shrb
cli
and
inc
lock
aaa
orl
test
mov
jmp
or
xchg
sbb
inc
lcall
ds
mov
inc
leave
outsl
push
pop
pusha
insb
cmp
mov
mov
sub
test
jo
sbb
in
xchg
rorb
shl
shl
sti
xchg
addl
mov
xorl
inc
cs
clc
mov
xor
stc
pop
test
hlt
mov
cmp
mov
fisttpll
fiaddl
aas
sbb
pop
add
mov
test
push
out
call
and
negb
pop
mov
repz
mov
shrl
imul
mov
inc
mov
push
dec
sub
dec
fcmovbe
lcall
cmp
lcall
xchg
int
mov
fisubrl
jge
ror
dec
outsl
sbb
insb
lock
outsl
mov
lock
stos
mov
shlb
jmp
xchg
sub
out
push
lret
xchg
mov
add
cli
lea
outsb
pop
loopne
or
mov
push
xchg
insl
mov
fisttpll
adc
xor
push
pop
dec
push
inc
push
mov
addr16
fbld
mov
xchg
movsb
ret
xor
pop
fwait
jb
rcll
subb
push
rcrb
xor
push
xlat
jmp
mov
jp
mov
cmp
and
dec
sub
jo
adc
sub
es
shlb
xorb
push
test
ljmp
loope
sbb
dec
in
stc
jle
dec
insl
adc
push
and
fldt
jmp
outsb
pop
mov
pop
mov
mov
push
out
adc
inc
add
xor
sbb
clc
push
pop
or
lods
mov
repz
sbb
out
mov
mov
insb
loope
decl
pop
xchg
adcl
xor
sti
dec
mov
pop
mov
pop
jo
mov
mov
sti
imul
test
jb
jbe
movsl
pop
hlt
cmp
out
cmp
jmp
mov
or
sub
scas
in
push
hlt
sbb
xchg
pop
enter
dec
mov
inc
js
pop
cmp
mov
sahf
and
mov
add
add
nop
sub
lret
jle
in
push
pusha
in
setp
je
inc
dec
ret
pop
bound
lahf
dec
dec
addb
test
repz
imul
pop
and
test
push
jge
sbb
enter
mov
mov
fsub
out
imull
pop
mov
leave
pushf
push
sub
imul
fst
xchg
int
push
test
mov
pop
and
in
nop
pop
cmpsb
rolb
in
sbb
mov
cmp
imul
arpl
add
push
push
repz
jl
mov
push
jmp
jle
inc
add
outsl
mov
or
add
ds
mov
mov
push
sub
and
sbb
std
mov
outsl
mov
mov
shlb
imul
cmp
clc
test
dec
xlat
int
das
dec
stos
lcall
outsb
push
cmp
in
lods
pop
adc
je
mov
and
shr
addr16
fs
loopne,pn
or
dec
pop
aaa
bound
arpl
movsl
mov
stos
mov
mov
and
sub
jmp
leave
gs
xchg
mov
xor
mov
xchg
cmp
outsb
add
inc
xchg
cmp
orl
cs
push
mov
adc
rol
jmp
movsl
or
mov
mov
mov
cmp
xor
subl
jg,pn
ljmp
xchg
shr
add
rclb
dec
test
outsb
icebp
push
mov
pop
mov
mov
or
xorb
and
dec
jbe
lcall
push
mov
jns
cltd
and
mov
stos
xor
popa
loopne
pop
sub
mov
xchg
iret
js
pop
lock
fsubr
sub
jae
mov
mov
mov
pop
in
dec
outsb
push
enter
sbb
lds
xchg
ds
loopne
jns
push
jo
dec
or
mov
loopne
sbb
mov
repz
fmull
push
je
sbb
mov
xor
add
inc
jg
lock
mov
inc
mov
lret
xchg
push
imul
dec
push
push
dec
mov
dec
test
pushf
test
xor
mov
test
popf
lods
imul
shlb
sahf
jmp
rcll
mov
cmp
in
adc
inc
cmp
and
movsl
cmpsl
shlb
in
stos
mov
rcll
inc
jns
push
in
cld
push
mov
cmp
outsl
dec
sub
jb
lea
jmp
ljmp
cmpsl
scas
out
fidivrl
in
into
push
lcall
pop
fcoml
jecxz
mov
fidivl
scas
ds
push
pop
push
sbb
hlt
pop
mov
and
ficoms
fwait
and
push
dec
inc
mov
fsubp
push
sbb
push
push
inc
mov
gs
sbb
sub
movsl
in
jns
aad
into
cmp
cmp
xor
push
into
jmp
mov
mov
jb
or
daa
das
jp
sbb
in
mov
test
mov
imul
mov
nop
enter
mov
inc
xchg
inc
sbb
jmp
and
lock
ret
mov
fsts
fbstp
push
and
rcrl
out
dec
mov
mull
mov
and
add
pop
xchg
or
movsb
aad
xchg
or
call
mov
scas
ret
add
jmp
jmp
fldcw
add
cltd
fxch
push
mov
popf
jmp
mov
xchg
fiadds
sbb
mov
push
jp
xchg
jmp
pop
movsb
jecxz
shl
sub
add
mov
mov
sbb
mov
ds
push
sti
and
adc
mov
jae
fdivl
cs
int3
pop
in
sahf
cltd
fisubrs
adcb
cmpsl
stc
jge
jecxz
aaa
and
dec
jg
cmp
or
mov
or
loope
iret
stc
dec
jno
shr
cmp
jg
cmc
push
imul
jbe
icebp
sbb
dec
mov
mov
mov
sbb
and
es
jmp
in
imul
in
mov
cmp
jbe
bound
jae
mov
das
adc
movups
sbb
inc
cmp
dec
lea
out
sub
jg
imul
push
lock
loopne
lods
dec
in
jecxz
push
inc
xor
and
jg
test
sub
jnp
jne
jae
dec
add
das
cmp
inc
mov
push
rorl
sub
add
add
int3
hlt
ljmp
mov
xchg
mov
xor
cmp
xchg
inc
lret
icebp
test
pop
fidivl
sbb
dec
pop
dec
cmpsl
push
in
icebp
call
push
leave
loope
ljmp
cmc
cwtl
mov
mov
push
lahf
inc
dec
jl
lds
lahf
lock
xor
jle
xchg
vmovupd
in
mov
outsb
addr16
shl
hlt
out
call
xor
jp
mov
push
movsb
pop
stos
jno
mov
fwait
adc
jne
aam
mov
adc
stos
jns
and
xchg
lods
xchg
imul
test
add
pop
push
xor
insl
and
mov
xor
push
sbb
cltd
lret
out
pop
scas
cmp
fdivs
mov
mov
cltd
cli
cmc
sub
and
sub
lds
adc
push
outsl
sbb
imul
fnsave
xrelease
clc
scas
fldl
pop
cmc
fsubrl
or
xchg
mov
outsb
mov
add
inc
in
repz
mov
mov
jae
adc
loopne
jbe
adc
push
in
outsb
or
or
lock
mov
mov
cmovo
xor
xchg
fisttpl
nop
push
dec
arpl
push
cmp
cld
mov
add
jnp
sarl
jbe
and
mov
push
dec
sbb
out
outsb
xchg
lcall
scas
fsubrl
cmp
inc
cmp
lock
inc
fiaddl
pusha
sub
std
test
xchg
sti
mov
out
fldl
jns
rclb
cli
adc
xor
cli
jo
dec
or
and
mov
shrl
mov
mov
cld
push
xchg
imul
inc
fdivrs
dec
aam
adc
adc
out
xor
lahf
enter
jb
lods
inc
shlb
mov
sbb
movsl
cmpsl
aam
in
xchg
inc
js
xchg
arpl
pop
outsl
jmp
xor
xor
sub
sti
sar
mov
rclb
xchg
orb
jbe
or
mov
dec
cld
sbb
mov
repnz
xor
aaa
cmp
push
jnp
outsl
xchg
and
dec
in
and
imul
loopne
ljmp
jmp
xchg
test
dec
and
fidivs
daa
mov
mov
xchg
mov
iret
mov
outsb
loope
scas
xlat
push
push
loope
lods
dec
outsl
fcomps
jl
lea
adc
inc
push
pushf
dec
mov
add
mov
into
iret
mov
xchg
xor
stc
icebp
inc
sti
fwait
int
mov
push
jnp
outsb
pop
add
dec
xchg
loope
pop
fisttps
mov
fsubrs
daa
fadds
popf
mov
push
in
stos
xor
cmp
xlat
xlat
mov
or
sub
sti
movsl
adc
repz
jns
mov
dec
mov
add
sbb
mov
idivl
test
sahf
and
test
xor
lret
enter
sub
sti
dec
ja
rcll
sub
sub
mov
mov
rcr
test
xchg
dec
dec
push
lods
push
inc
xor
testb
loope
ljmp
jb
cmpb
std
shl
iret
call
fildl
xchg
lods
cmc
es
gs
push
hlt
dec
dec
mov
xor
imul
push
xchg
pop
or
cmp
xor
mov
inc
mov
pop
jns
outsl
mov
fs
jo
and
hlt
jmp
add
jp
cmp
sub
out
js
arpl
sbb
aaa
add
dec
add
movq
xchg
dec
or
shll
pushf
xor
aad
xchg
lret
fldl
in
repz
scas
scas
lret
out
jmp
cmpsl
sti
fsubrl
sub
stos
pop
dec
mov
add
dec
imul
cmpl
insb
xor
dec
dec
xchg
outsb
or
lcall
daa
sti
pop
cmp
push
jae
and
jbe
ret
xor
aam
xor
lods
pop
insl
mov
scas
pop
jns
xchg
pop
nop
dec
cmpsb
hlt
or
add
ret
mov
ror
mov
sbb
xchg
scas
outsb
inc
inc
test
test
xchg
dec
add
cmp
jmp
nop
loopne
sbb
add
aaa
mov
fbld
or
loope
and
adc
daa
and
pushf
insl
cmpsb
or
adc
jge
push
test
ret
mov
jb
imul
mov
int3
fcomp
jge
lcall
pop
inc
fldcw
sbb
test
mov
mov
cs
add
add
in
mov
sub
jp
leave
dec
jmp
scas
ret
jl
mov
cmpl
push
dec
inc
jp
pop
sbb
push
lods
lods
cs
sti
fs
cmp
xchg
or
push
mov
dec
add
ja
mov
add
push
and
dec
loopne
imul
xor
mov
ss
mov
sbb
outsb
repnz
xchg
mov
fadds
test
push
pusha
jno
or
mov
loope
xor
add
xor
out
out
cmp
jl
outsb
sbb
aad
call
xchg
je
jmp
xchg
mov
adc
mov
jb
push
insb
test
xchg
push
and
aad
fld
in
push
in
adc
rcrb
and
push
test
outsb
in
sub
out
dec
inc
push
lcall
xor
roll
call
jne
cmpsl
sbb
leave
inc
ljmp
jge
xor
xor
icebp
lods
lods
add
rcll
lret
sub
je
push
pop
push
jns
and
inc
adc
outsb
jg
push
push
dec
movsb
jbe
mov
out
dec
mov
mov
mov
xchg
lret
imul
xchg
add
add
adc
lcall
outsl
mov
stos
or
femms
outsl
xor
xor
and
xchg
fcomps
xchg
aad
jmp
frstor
in
mov
xlat
pop
push
and
cmp
lea
repnz
cs
cwtl
cmpsb
or
insb
jnp
mov
or
jno
ds
outsb
cmp
xchg
sbb
and
fcoml
cld
or
jo
xor
mov
cli
lea
out
and
lret
dec
bound
dec
stos
jp
xor
outsb
fs
mov
push
js
cmp
mov
mov
test
dec
mov
cld
jo
fiaddl
xor
and
dec
dec
arpl
inc
in
gs
cltd
in
mov
sub
mov
jge
ljmp
jg
push
into
movsl
xchg
in
leave
mov
mov
lret
inc
decb
pop
jbe
push
dec
mov
cmp
push
push
mov
scas
add
push
sbb
inc
scas
or
fwait
mov
frstor
in
mul
inc
xchg
jne
inc
andb
sahf
bound
push
dec
pop
sbb
out
setne
push
out
mov
mov
dec
push
shl
jmp
cmp
inc
push
icebp
ret
fisttpl
sub
push
xchg
cmpb
mov
lea
movb
cltd
push
push
into
add
ret
xchg
and
fcmovne
fsts
sbb
fwait
pop
sub
inc
jno
push
mov
sub
int3
xor
insb
bound
lods
decb
sub
mov
mov
std
fdivl
lret
das
mov
mov
push
sti
ret
dec
sub
push
cli
mov
mov
scas
outsb
and
stos
or
test
outsl
cwtl
xlat
aad
sub
loopne
out
into
xchg
nop
inc
mov
aad
stos
inc
sbb
outsb
clc
loope
xor
sub
xchg
sub
sub
ljmp
ljmp
pop
pop
out
rorl
int
mov
out
mov
push
pop
subl
jle
add
push
lret
inc
movsb
push
dec
jo
dec
dec
lret
xchg
inc
outsb
jle
fidivrs
stos
lret
push
xchg
or
adc
out
scas
out
ljmp
push
insb
outsl
mov
sbb
repz
les
test
aaa
jecxz
sbb
lods
ja
scas
aam
lods
xor
xlat
inc
push
xchg
pop
pusha
jmp
xchg
xor
aam
addr16
outsl
or
cmp
jge
push
xchg
mov
xor
int3
xor
repnz
out
int
jno
cmpsl
sbb
gs
jmp
stos
mov
mov
and
pop
inc
jns
nop
ljmp
test
push
adcb
fisubrl
sbb
dec
xlat
mov
pop
out
adc
xchg
ss
fbld
and
mov
enter
inc
popf
pop
ja
sub
mov
dec
or
fucomip
sbb
faddp
pop
mov
sub
xchg
inc
push
jo
test
shlb
in
fs
arpl
xor
push
clc
adc
enter
lods
insl
cli
repnz
fcoms
push
mov
mov
adc
inc
mov
xchg
mov
mov
fadd
mov
aaa
or
jg
lret
mov
xchg
cli
movsl
jb
jbe
cmp
add
add
imull
jnp
lcall
mov
iret
pop
out
subb
cmp
mov
inc
mov
hlt
jmp
add
jl
mov
and
mov
xor
outsb
int
popa
stos
xchg
leave
jmp
mov
sbb
mov
mov
xchg
jmp
in
mov
cld
cmc
mov
clc
cmp
in
sub
push
in
adcl
fstpt
cmp
andb
outsb
filds
ljmp
sub
imul
lods
js
in
subb
mov
jae
gs
cmp
sbb
ret
nop
outsb
jo
rclb
pushf
xor
in
rcrl
mov
out
popa
adc
inc
nop
mov
lds
dec
fcomps
imul
cwtl
mov
inc
sub
pop
sbb
int3
fsubrs
cmp
and
lods
sub
pop
mov
pop
out
xchg
inc
je
sub
movsb
rcrb
inc
in
inc
leave
es
xchg
stos
cwtl
xchg
imul
leave
out
scas
mov
or
xor
jo
dec
ja
lods
pop
inc
xchg
mov
mov
mov
jnp
dec
cmp
lret
pop
faddl
and
or
inc
mov
and
xchg
cmc
sub
xchg
in
mov
in
bound
inc
loope
test
sbb
cld
jbe
jno
fwait
aaa
or
sbb
add
xor
jmp
push
dec
sahf
mov
bts
test
shll
in
mov
les
je
pop
mov
mov
nop
mov
bound
aam
ret
sub
shrb
or
pop
jb
scas
outsl
dec
data16
lea
rolb
mov
cmp
add
add
imul
scas
aam
or
jmp
pop
rcrl
ja,pn
into
pop
dec
or
imul
imul
push
or
mov
andl
add
cwtl
int
pop
mov
out
outsb
fs
fwait
jge
mov
loopne
in
jle
push
outsl
xor
sti
xchg
xor
and
dec
pop
inc
aad
add
jmp
addr16
cmc
or
sti
pop
mov
mov
adc
jae
rcrl
pop
jae
daa
mov
aas
mov
lods
out
popa
dec
mov
dec
add
xorb
mov
sahf
or
push
iret
mov
cmp
lods
pop
adc
in
addr16
stos
inc
pushf
loop
jnp
in
pop
jg
dec
inc
rcr
mov
outsb
push
and
mov
dec
cltd
icebp
cmpsl
pop
or
cmp
enter
pop
mov
inc
mov
sbb
xor
and
or
loope
add
in
fsubrl
dec
je
jb
pop
cld
jmp
xchg
xchg
xchg
loopne
stos
outsb
jb
dec
jnp
mov
daa
mulb
push
in
in
stc
inc
fsubrl
subl
xor
into
clc
ss
fisttps
ja
loopne
pop
lahf
test
cmp
mov
test
jge
addr16
mov
jno
mov
add
push
and
mov
mov
int3
rcll
cmpsb
add
add
jecxz
xchg
into
outsb
loopne
lcall
xchg
add
cmp
dec
push
add
dec
cmp
dec
imul
push
cld
shrb
fsub
jge
fcmove
mov
fucomp
dec
in
lods
insl
out
dec
xor
ret
pusha
push
repz
scas
mov
lret
icebp
daa
movsl
repnz
mov
sub
cld
sub
addl
dec
addl
les
xor
mov
dec
in
or
xchg
push
mov
cmp
fldl
mov
sub
mov
movsl
jb
cltd
pop
iret
imul
std
xor
sti
popf
sub
stos
rcll
sub
icebp
daa
fnstenv
pop
ljmp
jg
mov
inc
imul
out
mov
jp
roll
dec
sbb
repz
xchg
xor
xchg
inc
lods
fcomps
sub
or
jmp
push
jne
les
test
lahf
xchg
cmpsb
inc
adc
cmp
jle
dec
lock
cs
inc
pop
iret
fs
mov
mov
clc
dec
adc
mov
ljmp
and
xor
adc
jmp
mov
or
or
xor
fnsave
rorl
repz
loopne
jbe
icebp
dec
push
addr16
or
fwait
outsb
jbe
inc
out
mov
iret
jmp
jg
in
dec
and
sahf
outsb
sbb
add
xor
call
jmp
mov
fldl2e
mov
movsl
pusha
ja
imul
jecxz
dec
mov
lods
mov
leave
imul
dec
or
scas
idivl
jge
xor
clc
jns
mov
or
push
movsb
ljmp
push
add
push
mov
loope
push
ja
adcl
mov
outsb
lahf
cmp
add
mov
adc
mov
scas
sub
subb
cmp
mov
xor
jmp
test
jb
ja
mov
dec
imul
inc
mov
sub
xchg
push
pop
cmp
sub
sarb
inc
xchg
jg
dec
mov
rclb
add
outsl
cltd
mov
mov
aas
into
pop
cmpb
xor
cmp
popa
xor
xchg
dec
xor
aaa
push
push
outsl
xchg
jo
lock
pop
in
out
popf
cmp
scas
aaa
cmp
xchg
movsl
sbb
xchg
jmp
shlb
inc
pushf
inc
adc
adc
inc
std
insb
outsb
mov
adc
fisubs
scas
inc
outsb
and
test
xor
mov
rcl
stos
mov
data16
cmp
push
jge
mov
dec
push
sub
xchg
mov
xor
outsl
xor
int
cmc
push
adc
sahf
fistps
pop
mov
dec
test
test
and
push
pop
cmc
jmp
aam
and
fldcw
mov
mov
or
int3
and
in
xchg
push
push
jnp,pt
jg
jb
jge
mov
das
xchg
xchg
dec
dec
add
adc
add
fmul
scas
and
jmp
clc
jg
lcall
mov
adc
movsb
ss
nop
sub
in
fimull
mov
jno
xor
sbb
push
or
sub
mov
jnp
adc
xor
movsb
xor
cs
pop
mov
ficoml
icebp
xchg
sub
push
stos
outsb
daa
xchg
movsl
test
pusha
sub
cmpsl
mov
ss
fldenv
mov
xchg
jns
in
xchg
dec
repnz
xor
incl
mov
and
icebp
imul
shll
sub
inc
mov
sub
sub
mov
and
lods
mov
lret
outsb
pop
adc
pop
or
icebp
testl
and
fmuls
pop
scas
loopne
sbb
xor
ja
out
jmp
pop
adc
addr16
dec
push
ljmp
dec
mov
xchg
or
out
mov
or
data16
jmp
pop
fnsave
notb
sbb
fadd
movsl
int
imul
push
push
xchg
nop
jb
add
pop
push
jecxz
jle
and
cmpsb
adc
xchg
test
lods
andb
and
mov
sbb
mov
inc
cvtdq2ps
clc
fmuls
inc
cs
inc
fs
in
xor
xchg
in
int3
push
xor
mov
imul
in
mov
inc
jae
shr
cwtl
sbb
pop
scas
arpl
rorl
aad
out
aaa
jecxz
push
scas
inc
adc
lds
dec
in
jae
popa
xor
sbb
mov
scas
fnstenv
dec
rcrb
and
enter
loopne
push
jne
mov
add
pop
push
and
insb
imul
out
outsl
cltd
push
rcr
ljmp
jo
icebp
test
mov
jo
out
cmp
pop
out
xchg
adc
stc
inc
adc
sbb
dec
stc
sub
push
shl
jle
mov
mov
mov
loopne
sbb
mov
addr16
outsb
adc
jge
cmpsl
jmp
push
cwtl
sub
or
data16
sub
fisttpl
f2xm1
out
in
push
adc
iret
mov
imul
mov
in
mov
adc
mov
xor
cmp
add
mov
push
push
add
out
mov
add
lods
hlt
sbb
js
sbb
in
or
mov
test
cs
and
lods
dec
pusha
push
jne
es
mov
pushw
cmp
jmp
and
insb
jno
test
cwtl
rorb
out
or
sub
leave
je
xchg
pop
cmpsl
and
pop
adc
push
dec
dec
and
mov
insl
dec
movsl
push
pop
popa
jmp
dec
xchg
pop
jne
sbb
into
jle
outsl
push
insb
adc
jmp
mov
stc
adc
add
out
or
xchg
xchg
push
imul
pop
push
mov
in
inc
or
into
mov
test
in
push
out
mov
cmp
mov
and
leave
xchg
inc
sub
mov
adc
xchg
mov
mov
dec
nop
xchg
mov
jmp
adc
adcl
insb
mov
ja
fcoml
inc
into
insl
out
sar
mov
and
repz
mov
xchg
in
xchg
jb
mov
sbb
or
push
push
out
dec
push
inc
test
cld
or
xor
out
sub
fwait
adc
mov
mov
push
mov
xor
jg
inc
cmp
popa
add
or
outsb
pusha
push
xchg
das
push
xchg
lret
out
fnstsw
gs
js
arpl
out
div
ret
jns
xchg
xchg
ss
pop
insl
cmpsl
push
inc
pop
pop
lock
xor
xchg
outsb
pop
jge
sbb
mov
jmp
lods
mov
pushf
sub
or
addr16
lods
clc
roll
fisttpl
ds
push
add
dec
pop
inc
loope
mov
mov
pop
jae
sub
sbb
cmp
push
mov
out
push
and
test
mov
pop
pop
mov
dec
xor
jno
add
mov
insb
inc
pop
mov
or
imul
test
lea
pushf
nop
adc
mov
mov
push
xchg
popf
cmpsb
fimull
enter
xor
pop
aad
mov
lea
std
leave
add
scas
in
outsl
shrl
pop
xchg
inc
outsb
sbb
mov
push
xor
push
jo
dec
dec
mov
in
push
mov
pop
lock
dec
mov
mov
inc
adc
ljmp
jne
inc
add
jecxz
out
cmp
and
mov
pop
mov
aam
je
mov
icebp
mov
push
mov
in
mov
aam
scas
lret
sub
mov
jmp
adc
insb
or
add
shl
mov
jl
insl
xchg
cmpsb
bound
sti
lods
outsb
fisubrs
cmp
jmp
xor
sti
shl
mov
pop
loopne
cmpl
test
mov
adcb
xchg
mov
sub
jl
or
es
imul
outsl
jbe
dec
enter
fnstsw
pop
out
pop
aas
scas
outsb
pushf
push
inc
push
inc
iret
inc
in
xor
push
pop
inc
icebp
lret
jnp
inc
add
pop
xor
or
pop
push
dec
jns
test
push
cmp
daa
mov
inc
stos
adc
test
jbe
xor
stos
js
xchg
xor
cmpsl
js
test
fcmovb
lea
pusha
jg
cmp
adc
add
sbb
addb
add
lahf
fsubrs
mov
sbb
imul
and
mov
addr16
pop
outsl
leave
add
mov
push
addr16
push
gs
mov
sbb
or
out
adc
mov
lahf
add
pop
jl
hlt
push
in
test
test
mov
fucomp
xor
aad
dec
cmpsb
add
xchg
icebp
mov
mov
dec
in
aaa
mov
insl
sub
test
mov
inc
mov
fdivs
jnp
sbb
jp
scas
dec
addr16
daa
jmp
or
mov
call
jbe
in
mov
adc
fdivl
lret
dec
xor
add
sti
call
aaa
sbb
fidivrl
cmp
sahf
mov
es
inc
fdivp
icebp
int3
je
movsl
mov
outsb
push
inc
popf
scas
stc
mov
movsl
dec
add
test
xor
fstpl
pop
mov
adc
mov
add
sub
jl,pn
fsub
adc
dec
cmc
dec
sarb
out
xchg
cmp
test
test
shrb
fdiv
cmp
lea
stos
cmp
jae
lds
xor
xor
mov
pavgb
pop
shll
mov
or
cmp
jmp
and
das
mov
shll
cld
dec
mov
push
hlt
jge
add
push
jg
mov
int
add
in
jecxz
fdivrl
lahf
mov
ss
jno
outsl
arpl
or
dec
pop
cmp
mov
pop
cmp
iret
or
das
in
lock
icebp
push
pop
nop
jp
scas
jmp
fmulp
xlat
lret
mov
sub
push
je
mov
ds
mov
nop
push
not
sub
pop
jb
in
mov
scas
and
xchg
cmpsb
shlb
mov
lds
hlt
mov
je
lret
stc
lds
or
in
cmpsb
test
lahf
stos
scas
lret
push
test
inc
jnp
nop
cs
fsub
mov
mov
add
icebp
enter
imul
push
jl
int
leave
xchg
sbb
mov
cmp
xchg
mov
inc
or
and
jne
mov
outsb
push
notl
push
gs
jne
repz
lods
xchg
inc
inc
jge
stos
jecxz
stos
jecxz
pop
lock
outsl
mov
je
dec
or
insl
pushl
pop
rolb
outsb
push
shr
ljmp
iret
mov
adc
mov
mov
jecxz
jo
adc
add
cld
pusha
in
mov
push
into
lret
aas
dec
mov
mov
in
xchg
mov
jne
mov
inc
or
pop
mov
cmp
mov
jb
xchg
bound
cmp
inc
cltd
cmp
shlb
data16
imul
push
addr16
push
sbb
stos
ret
and
data16
das
xorl
rorl
mov
ja
loopne
lret
jecxz
inc
pop
into
cltd
dec
ljmp
pop
insb
xor
stc
cwtl
aam
ret
packssdw
xchg
rep
add
adc
out
aam
cltd
pop
das
into
int3
xchg
ljmp
push
xor
jne
or
mov
dec
scas
and
pop
in
aas
cmp
jb
jg
push
jp
aaa
or
xor
xor
shll
jmp
add
adc
xchg
or
xchg
aad
scas
jo
movsb
xchg
repnz
in
loope
notl
repnz
jge
leave
adc
aaa
xchg
sub
xlat
jne
dec
setg
xor
lock
sti
jmp
pop
leave
xor
mov
xor
inc
incb
cmp
mov
cmp
or
jecxz
int
jmp
aas
repz
xlat
pop
or
aad
xchg
add
mov
sbb
push
mov
insb
das
mov
mov
or
mov
imul
mov
mov
loop
dec
in
imul
cmp
pop
les
mov
or
cmp
andl
divl
adc
sub
inc
stos
mov
dec
dec
mov
xchg
sub
movsb
fmull
arpl
jmp
push
push
adc
xchg
sbb
inc
push
enter
cltd
cmp
dec
xor
pop
hlt
inc
lcall
loop
outsb
nop
lret
sahf
mov
mov
or
shrb
mov
jl
cli
jmp
xchg
enter
jb
test
lahf
outsb
mov
shlb
xchg
out
adc
dec
js
lcallw
stos
stos
sbb
push
pop
loope
adc
pop
ret
shrb
add
add
adc
and
je
sbb
mov
lcall
outsb
add
aas
cmp
aam
or
cmp
mov
adc
jmp
adc
adc
sahf
push
dec
popa
mov
or
cltd
xor
inc
testl
xor
std
mov
aam
jl
das
mov
imul
and
jmp
cmc
aad
test
out
mov
ret
arpl
mov
int3
pop
ficoms
push
scas
int
pop
out
fldenv
push
ljmp
sub
fs
ljmp
pop
cltd
sbb
lods
add
loopne
shll
or
jl
mov
scas
stos
or
int
fs
insb
pop
inc
addb
out
xor
inc
pop
jg
daa
addr16
insb
jae
xchg
mov
dec
into
adc
ljmp
jg
ret
inc
mov
mov
and
cmpsl
push
xchg
mov
jae
or
jmp
xlat
orb
gs
mov
jne
pop
dec
lret
pop
out
sub
push
rclb
in
cmp
outsb
pop
fucomp
sbb
iret
push
jecxz
jnp
jbe
icebp
mov
adc
push
xchg
push
movsl
into
into
inc
das
or
add
jmp
loop
cmp
pop
cltd
xchg
jne
push
lods
jmpw
sti
pop
popf
push
xor
aad
push
mov
jno
out
daa
hlt
movsb
xchg
outsl
push
lret
add
pop
jb
gs
lods
push
hlt
xor
sbb
push
push
clc
imul
ret
inc
fldenv
fcoms
fisubrs
dec
mov
movsl
jmp
daa
mov
add
add
mov
ss
mov
aaa
es
out
fstpl
call
sarb
xchg
jo
or
lods
inc
pop
mov
cmpsb
ljmp
scas
sbb
iret
push
test
popf
sub
mov
push
outsl
or
push
add
jmp
repnz
xor
xchg
mov
popa
xchg
nop
test
push
and
push
insl
or
into
xor
incl
inc
mov
pop
hlt
and
test
push
adc
test
mov
jg
jp
pusha
xchg
inc
dec
ret
lods
outsb
dec
lods
test
outsb
jae,pn
ja
rol
push
jmp
testl
cld
cli
scas
ret
imul
push
add
cwtl
ljmp
push
pop
mov
dec
cltd
xor
leave
leave
call
mov
int3
ret
xor
pop
xchg
pop
jne
pop
rep
push
mov
add
mov
mov
push
insl
sub
std
xchg
je
cmpsb
fstpl
xchg
inc
dec
adc
out
inc
fists
imul
jecxz
and
ljmp
sahf
mov
subb
out
in
subb
sbb
scas
mov
push
leave
inc
shll
and
lds
bound
cmp
xchg
test
xchg
fdivs
pop
pop
xor
imul
add
sbbl
roll
jmp
insl
stc
int3
mov
dec
jge
fcoms
sahf
push
and
lahf
push
dec
lods
hlt
pusha
subl
jo
cmc
or
sub
push
push
sub
mov
jne
jbe
xchg
mov
sub
scas
or
into
sbb
or
or
rcr
daa
loopne
jmp
fs
jp
mov
xchg
add
cmp
xor
push
test
push
pop
push
bound
dec
mov
xchg
jmp
cltd
xor
mov
adc
ss
outsb
in
lock
xchg
in
mov
pusha
jb
inc
loopne
out
jp
push
dec
mov
jbe
imul
in
sbb
lods
mov
sbb
mov
add
sub
nop
mov
mov
jnp
mov
xlat
je
leave
sbb
outsl
outsl
push
adc
lret
adc
arpl
out
inc
or
mov
push
es
fwait
xchg
imul
fwait
ja
in
aas
mov
mov
jno
cmc
mov
ret
test
int
sbb
insl
add
insb
in
arpl
sub
sbb
mov
iret
mov
ja
sub
mov
sub
sub
movsl
push
daa
sbb
sub
int
sti
imul
dec
adc
cwtl
adc
outsb
add
pop
loopne
cmpsw
jmp
jg
nop
dec
xor
add
rorl
lcall
mov
testb
xlat
jno
push
jecxz
or
jno
or
outsb
sti
jb
jmp
jmp
popf
es
cmp
lea
push
in
or
pop
or
mov
in
dec
sub
notb
movsb
xor
jmp
push
imul
dec
sti
cli
inc
test
lea
insb
out
cmp
adc
inc
push
inc
push
sub
nop
and
scas
out
repnz
push
outsb
cmp
test
mov
jae
test
add
das
loop
into
fs
bound
in
out
ss
jno
pusha
push
cmpsb
mov
fnstenv
mov
add
pop
repnz
mov
mov
iret
lahf
aaa
roll
ja
mov
out
or
outsl
inc
cmp
add
jmp
lds
sti
pop
jbe
jbe
fsubrs
cmpsl
ret
std
mov
xor
gs
and
mov
inc
lea
lods
leave
xchg
dec
pop
outsb
inc
inc
fimull
dec
hlt
pop
jmp
mov
cld
pushf
adc
jnp
or
jg
pop
in
int
cli
jle
jmp
push
push
lcall
shr
add
jne
dec
es
stc
xor
lea
jae
fcmovnu
mov
popa
add
aad
dec
addr16
mov
ss
fwait
dec
test
int3
es
adc
and
xchg
cltd
in
jne
ljmp
orl
lahf
inc
into
adc
jge
imul
js
jecxz
pop
out
sti
sbb
mov
mov
or
sub
hlt
cs
leave
hlt
mov
pop
ja
push
sbb
ds
mov
out
cmp
cld
jo
je
add
fsubr
sub
or
in
cmp
popf
add
xor
call
dec
or
or
sub
sbb
lret
jne
or
popf
stos
jmp
test
mov
int
out
movb
xor
or
loop
ljmp
outsb
bound
jbe
cmp
xchg
pop
xor
stc
iret
dec
in
jbe
xchg
sti
xchg
inc
jg
stc
mov
out
lock
lret
adc
lcall
jmp
aam
adcl
dec
clc
scas
and
jne
xchg
mov
aaa
xchg
push
lea
jmp
shlb
inc
mov
mov
jmp
ss
aam
xchg
xor
insl
js
dec
mov
xlat
jne
cmp
repnz
pop
push
iret
xor
dec
jg
stos
mov
in
xchg
fs
pop
mov
test
dec
cld
pop
lock
push
sbb
das
daa
jb
sub
jno
and
pop
jns
cmc
sub
addl
arpl
cli
scas
icebp
mov
pop
xchg
and
sahf
sbb
jge
enter
mov
xor
inc
jnp
xchg
scas
mov
enter
xchg
call
mov
push
in
iret
movsl
pop
dec
loopne
movsb
xacquire
xchg
loope
scas
mov
inc
test
scas
cld
je
mov
int
in
xor
pusha
pop
out
lret
dec
mov
loopne
imul
in
pushf
mov
iret
shrb
cs
xor
subl
test
cwtl
jmp
dec
adc
xor
mov
dec
push
es
test
mov
and
outsl
cli
lds
push
jae
pop
xlat
stos
push
into
mov
fld
rcll
xorl
mov
outsl
inc
pop
movsb
cmc
push
xlat
inc
mov
icebp
mov
repz
mov
call
jns
xchg
lcall
std
and
dec
aam
cli
insl
jl
std
jmp
pusha
sti
sbb
mov
mov
inc
pop
mov
dec
out
sbb
mov
and
ret
test
cwtl
lcall
xor
pop
mov
aas
xor
jb
out
gs
testl
gs
mov
mov
push
add
sarb
cmp
mov
scas
orb
fldl
jl
adc
sub
or
mov
pop
ret
xchg
inc
ljmp
icebp
movsl
outsb
sbb
pop
leave
mov
or
outsb
pop
cmp
nop
movsl
lock
jo
mov
push
incl
dec
fisubl
pop
loope
leave
pop
mov
xor
jle
pop
sbb
jmp
sub
jmp
xchg
stos
cltd
outsb
inc
iret
loope
adc
movsl
popa
out
in
loop
push
mov
sub
mov
adc
push
inc
movsl
daa
inc
jns
std
dec
loopne
out
jb
gs
lret
mov
inc
movsb
mov
fisttps
add
xchg
add
or
jmp
xor
sub
mov
fldenv
xchg
mov
lds
cmp
push
adc
add
push
iret
sar
jmp
pop
stos
addl
pop
fidivrs
inc
cmpb
scas
dec
movsb
insl
xor
fiaddl
idiv
push
outsl
fldcw
mov
cmpsl
fmull
das
lock
insl
cwtl
push
cmp
inc
incl
sti
push
shr
jmp
movsb
pop
nop
sub
outsb
adc
ss
sahf
dec
out
or
ss
dec
jg
mov
es
xor
mov
sbb
xor
icebp
mov
iret
cltd
cmpl
sahf
pop
mov
out
dec
cmp
mov
popl
lcall
dec
sub
or
inc
repz
mov
loopne
xchg
arpl
fld
stos
push
in
mov
push
cmpsb
outsb
mov
xchg
sti
mov
push
lock
es
bound
and
pushl
ja
xor
sbb
mov
dec
fisubs
int
mov
call
add
and
ret
sbb
cmp
cmp
jo
mov
lods
scas
das
push
mov
adc
mov
lds
sbb
and
mov
outsb
mov
enter
pop
jle
lahf
xor
jno
mov
xchg
xor
xor
add
jbe
mov
sbb
pop
cmp
xor
sbb
rclb
lcall
stos
mov
dec
xchg
adc
sahf
jbe
into
add
lahf
pop
clc
ljmp
lock
imul
ss
inc
fcoml
outsb
mov
stos
jnp
dec
ds
lcall
sub
adc
ror
and
adc
or
in
cmp
loope
mov
mov
xor
or
sar
in
xchg
fmul
fwait
add
aaa
aad
mov
rorb
call
dec
push
and
add
inc
fs
daa
sub
cmc
cmc
jne
xor
iret
push
popa
add
mov
lea
cmpsl
addr16
inc
addr16
or
into
es
jmp
dec
sbb
pop
xchg
fisttpll
sub
adc
dec
adc
lcall
mov
pop
pop
cmp
xor
adc
mov
mov
mov
sbb
pop
and
loop
ljmp
mov
fidivs
ljmp
je
push
push
pop
imul
dec
add
adc
aad
push
or
sbb
jmp
filds
xchg
sbb
inc
mov
and
xor
mov
cmpl
int3
mov
mov
imul
iret
daa
or
incb
pop
addr16
dec
add
std
out
inc
push
jl
jo
mov
mov
add
inc
mov
loopne
insl
mov
adc
jb
dec
xlat
int
cmp
in
mov
push
mov
inc
lods
mov
enter
mov
outsb
xchg
cwtl
sbb
add
jmp
inc
mov
into
dec
frndint
enter
xor
aam
inc
leave
pop
cmc
js
mov
outsb
enter
outsl
dec
or
jg
cmpsl
repz
push
sub
iret
push
mov
jmp
cwtl
adc
addb
mov
out
outsl
loope
aas
jg
jb
mov
int3
mov
push
sub
dec
movsl
and
pop
inc
xchg
mov
sti
fucomp
add
scas
dec
mov
mov
pop
jo
ret
les
adc
push
loope
loopne
enter
or
adc
add
iret
cmpsb
pop
adc
xchg
dec
mov
sub
add
jno
fsubl
out
mov
out
sbbb
lcall
fldenv
nop
test
sub
sub
insb
insl
jns
rorl
push
xor
shlb
sub
cmp
cmp
out
xchg
iret
jnp
dec
cs
jmp
mov
addr16
and
clc
mov
adc
xchg
inc
add
push
cmpsb
mov
mov
push
cmp
pop
and
out
int3
jmp
out
mov
xchg
insb
loopne
xchg
test
out
pop
pop
add
test
ss
jle
cmovbe
mov
sub
das
dec
dec
cmp
dec
xor
mov
outsl
or
push
movsl
aam
push
fstl
push
xchg
and
imulb
push
jmp
adc
adc
pop
bound
std
dec
mov
repnz
int3
outsb
xlat
inc
lea
fldl
mov
dec
cwtl
mov
sahf
enter
or
push
repz
fdiv
cmc
outsb
mov
fcomi
jecxz
inc
in
sub
rcrb
int3
sbb
out
je
in
call
test
or
adc
lret
lods
xchg
dec
jl
pop
dec
outsb
addl
popf
in
or
mov
jg
and
and
daa
aam
dec
pop
lret
push
int
xlat
pusha
outsl
push
jmp
in
orl
dec
or
shll
xchg
shrl
pop
push
rcrb
enter
and
test
push
das
jmp
jmp
scas
xor
pop
mov
int3
jg
mov
dec
dec
sbb
sub
jo
aam
sahf
into
push
nop
nop
ljmp
xchg
imul
rolb
jo
mov
out
arpl
jmp
bound
mov
push
dec
or
imul
cmpb
repz
jns
jmp
pop
dec
push
adc
call
xor
jbe
daa
mov
push
pop
pop
dec
je
xor
dec
stc
stc
sti
mov
shll
movsb
sahf
cs
xchg
repz
dec
mov
movsl
cmp
sbb
adc
jmp
repz
xor
sub
jno
test
lea
dec
pop
in
xor
fdivrl
incb
jnp
pop
sbb
sti
out
stos
ja
pop
lock
clc
adc
pop
sti
mov
jl
in
ret
mov
add
adc
dec
adc
pop
mov
or
stc
pop
jo
dec
lcall
adc
or
dec
jp
dec
push
sbb
mov
je
inc
ljmp
lcall
hlt
cmpsl
or
dec
iret
addb
sbb
das
xchg
fucomip
in
cmp
sub
mov
lods
ret
ds
or
mov
scas
out
outsb
test
aaa
mov
incb
push
test
stos
pop
scas
push
lret
xchg
push
adc
out
xchg
dec
outsb
jns
stc
xchg
loopne
lods
fwait
xlat
lcall
pop
stos
xchg
pushf
dec
ss
jb
lret
iret
or
hlt
inc
pop
dec
fimuls
daa
jecxz
jns
addr16
jmp
xchg
mov
stc
sahf
lods
xor
jmp
xchg
add
jge
push
pop
cmp
fimuls
pop
mov
insl
mov
adc
jmp
dec
adc
or
lret
test
outsb
aaa
lods
into
enter
es
lahf
ljmp
xchg
stos
and
mov
pop
decl
push
mov
jae
mov
push
in
inc
push
mov
pop
pushf
inc
mov
mov
mov
pop
lock
dec
insb
clc
lahf
dec
push
inc
dec
jecxz
pop
dec
push
or
fwait
jecxz
xor
xor
sbb
nop
or
ror
outsb
stc
cmc
push
daa
sub
cmp
cld
sti
fdivr
mov
add
sbb
in
movsb
inc
mov
outsl
lret
js
or
xchg
jmp
rorb
add
sbb
cmp
xchg
lret
xchg
xchg
fiadds
repnz
loopne
lcall
mov
or
iret
dec
cli
shlb
sti
add
ja
ljmp
mov
fxch
lock
pop
lds
std
outsb
mov
ljmp
push
decl
jbe
cmp
icebp
xor
movsl
jae
xchg
push
aad
aaa
jbe
pop
cmp
mov
or
xchg
ja
mov
lods
lock
inc
fisubrs
or
mov
in
cld
in
popf
dec
fwait
push
nop
sub
xchg
test
dec
gs
mov
loope
jle
or
inc
add
inc
mov
ret
inc
sub
in
nop
test
push
lods
xchg
shlb
scas
loop
outsl
orb
mov
dec
repnz
push
xchg
and
or
and
xlat
out
or
int
jg
mov
push
inc
inc
jns
mov
mov
sub
in
push
pop
jno
rclb
mov
jnp
dec
add
icebp
cwtl
xchg
inc
ja
loope
fcompl
jne
jecxz
bound
test
mov
lret
iret
push
pushf
mov
popa
or
dec
inc
or
xor
xor
mov
add
nop
dec
movsb
insb
ficompl
push
inc
mov
pop
dec
ret
imul
jne
cwtl
and
repz
dec
add
mov
insl
das
sub
loop
scas
ljmp
popa
insl
lahf
xor
jp
or
push
mov
sarb
sbb
xchg
orb
in
testl
adc
cmp
mov
pusha
leave
fldl
push
pop
pop
adc
and
pusha
add
push
mov
dec
loop
fisubrs
out
scas
insl
mov
bt
lcall
or
mov
insb
movsl
out
sub
mov
mov
ret
dec
jge
lea
daa
outsl
pop
add
sub
punpckldq
jmp
cltd
addb
out
push
in
out
test
in
inc
jbe
add
pop
repnz
inc
or
loopne
mov
mov
push
repnz
xchg
repz
cmp
xlat
clc
dec
aam
add
add
imul
jo
and
push
and
fldl
pop
mov
inc
das
sbb
jmp
fld
add
push
cld
push
pop
test
dec
dec
orl
or
mov
sub
arpl
fistpll
and
or
pop
shlb
shlb
adc
xlat
jle
out
sbb
inc
add
mov
and
push
dec
mov
sub
hlt
mov
adc
popa
inc
cmp
je
adc
and
inc
nop
push
dec
mov
fwait
jmp
gs
repnz
add
movsb
leave
dec
lds
mov
out
insb
scas
adc
xchg
cmpsb
jl
stos
mov
mov
fsts
dec
push
das
sbb
outsb
out
les
lcall
fnstenv
push
dec
pop
push
fiadds
frstor
or
adc
das
sub
fimull
sub
sbb
out
loop
out
mov
inc
jb
pop
ret
or
mov
xlat
and
jl
and
jmp
push
pusha
psubw
shrb
icebp
imul
xchg
dec
xor
xchg
scas
mov
jge
je
adc
outsb
movsl
mov
jle
in
cmp
je
outsl
icebp
cwtl
imul
outsl
jmp
gs
ljmp
cmc
repz
insb
arpl
xchg
fstps
in
pop
bound
mov
cs
jns
mov
add
jbe
or
pop
repnz
int3
lret
xor
pop
push
outsb
xchg
movsl
imul
jns
sub
lods
imulb
pop
or
aaa
repz
add
xchg
jnp
daa
adc
leave
mov
xor
roll
xchg
xor
push
sbb
rorb
cld
inc
mov
clc
aaa
inc
adc
xchg
xchg
ficomps
scas
dec
push
mov
test
pusha
fwait
pop
xchg
xchg
daa
push
jo
scas
cld
pop
pop
mov
flds
push
ss
dec
test
cwtl
mov
xor
and
jmp
push
mov
lods
cmp
sbb
xchg
pcmpgtb
jge
sbb
ljmp
out
cmp
xlat
mov
outsb
mov
push
inc
mov
jnp
push
push
push
repnz
inc
dec
lods
jmp
and
sub
mov
outsb
outsb
fldln2
adc
pminub
mov
imul
mov
cwtl
aas
jge
jne
cwtl
xor
into
test
add
push
dec
jmp
and
je
mov
adc
scas
adc
sub
fdivrs
test
outsb
movsb
adc
imul
or
jmp
lcall
icebp
jo
jmp
dec
dec
cli
lahf
mov
rclb
mov
mov
cs
xchg
or
xchg
mov
out
pop
pop
iret
jmp
lods
cmpsl
push
jmp
mov
mov
or
loop
bound
icebp
mov
mov
push
jp
adc
outsb
mov
dec
pop
aaa
or
mov
repz
shrb
push
adc
pop
ror
fs
ss
dec
mov
in
fwait
outsb
fxch
aaa
lret
outsb
and
popa
fadds
sbb
mov
dec
in
daa
cld
lds
adcl
out
mov
mov
xchg
imul
test
push
nop
xor
push
adc
mov
xchg
lret
cmpsb
sub
mov
mov
sub
orb
loopne
and
sti
ds
push
hlt
loope
adc
iret
jmp
dec
jp
xor
xchg
jle
rolb
push
xchg
daa
bound
orb
dec
add
negb
hlt
xchg
imul
adc
push
ffreep
dec
roll
ljmp
das
push
test
popf
movb
nop
jle
dec
push
and
addl
inc
cmp
sahf
imul
dec
jg
xor
inc
lds
mov
mov
jp
xor
pop
in
push
ja
bound
mov
mov
xlat
mov
insl
aas
pop
ja
mov
mov
orl
adc
xchg
mov
mov
push
stos
or
push
cmp
les
inc
call
outsl
ja
xchg
jno
aam
jmp
dec
out
cmc
testl
test
and
inc
and
jge
in
cmc
aas
jbe
icebp
cmp
rcl
outsb
jo
movsl
pushf
inc
nop
jns
jbe
mov
inc
loope
arpl
mov
mov
pushf
pop
in
sbb
pop
dec
add
aas
inc
or
add
js
inc
js
mov
outsb
add
push
out
sub
data16
jl
jbe
pop
iret
and
loop
call
fildll
daa
mov
mov
push
adc
jmp
je
inc
fisubrl
lods
sbb
pusha
cwtl
insl
xor
enter
mov
lahf
imul
arpl
push
stos
rcrb
rorb
cltd
pmulhuw
jb
fwait
addr16
pop
aas
push
mov
sbb
pop
push
dec
and
mov
lds
dec
stos
inc
push
lret
xorl
mov
dec
pop
movsl
adc
push
xor
pop
arpl
out
xor
dec
dec
in
or
cmp
and
shll
jmp
fisubrl
jmp
push
jg
adc
adc
adc
dec
ja
repnz
and
xor
mov
cmp
cwtl
mov
or
or
out
lahf
push
popa
jno
xlat
adc
push
pop
pop
cmpsl
mov
leave
dec
push
xor
or
mov
cwtl
outsb
imul
into
add
inc
ret
push
jno
das
mov
inc
pop
xor
gs
jns
dec
mov
or
mov
mov
popf
dec
ret
mov
fnstenv
or
loope
add
sbb
and
ljmp
movsl
or
arpl
jp
dec
cmc
lock
sub
idivb
mov
ret
xchg
add
std
push
outsb
icebp
inc
jp
mov
inc
ret
mov
pop
pop
adc
outsl
sub
inc
or
push
shr
test
clc
push
pop
sub
mov
xlat
mov
push
out
out
cmp
insl
and
mov
xchg
jg
jmp
mov
inc
xor
lret
pavgw
xchg
scas
inc
es
dec
mov
aaa
data16
dec
rcrl
cmp
repz
lret
or
cmc
jle
stos
or
add
push
outsb
jae
pusha
mov
mov
jnp
or
cmp
adc
outsb
icebp
das
rorl
out
cs
add
bnd
lcall
inc
ss
cli
inc
dec
push
ja
mov
cmp
push
daa
sahf
mov
lods
mov
dec
jno
enter
xchg
iret
repnz
mov
lock
fildll
mov
push
into
mov
out
xor
mov
fwait
adc
das
mov
std
js
pop
and
test
push
lods
mov
loopne
test
xchg
imul
cmp
pop
jb
cmpsl
imul
jge
sti
xor
repz
inc
bnd
lods
push
out
mov
std
bound
add
jmp
aad
or
hlt
rorl
movsl
mov
cmp
mov
out
leave
push
frstor
fucomi
cltd
sub
paddsb
in
loope
jp
mov
aas
arpl
mov
lret
pop
add
stos
mov
adc
inc
sbb
lahf
mov
sub
push
lea
std
xchg
fisubrl
sub
mov
mov
imul
cs
push
pop
jle
push
xor
decl
shl
xchg
add
push
jae
mov
das
mov
ret
pop
cltd
lret
insl
call
shll
loope
xchg
mov
in
jp
lret
mov
ja
pop
pusha
aaa
imul
lea
mov
mov
xchg
pop
cmp
sbb
imul
push
jae
xchg
outsl
inc
enter
xor
pop
dec
pop
mov
jbe
jmp
mov
adc
nop
mov
mov
cmpl
mov
stos
add
mul
bound
cld
push
dec
mov
sub
adc
imul
adc
push
jge
fdivrs
xor
loope
xchg
mov
out
sbb
fisttps
pop
lds
ret
push
stos
in
mov
xchg
pop
stc
and
mov
mov
in
dec
pop
push
das
jne
aaa
es
sub
adc
add
xor
xchg
mov
dec
jae
hlt
int3
push
mov
ja
bound
pop
sbb
lods
outsb
sarl
mov
xor
stc
call
add
ficompl
iret
mov
mov
or
cmpsl
aaa
inc
cltd
into
jns
movsb
fisttpl
xchg
and
pop
enter
inc
cmp
xchg
push
push
xor
mov
je
ds
cwtl
movsl
cmpsl
orb
mov
pop
imul
mov
inc
push
leave
dec
adc
adc
sub
mov
test
popf
inc
loop
dec
mov
adc
push
jmp
sub
jne
sbb
cwtl
mov
dec
iret
jo
das
xor
loope
cmovs
push
and
imulb
xchg
or
adc
cld
push
js
out
adc
fcomps
add
sub
xchg
sub
inc
sarb
ds
jle
ja
pop
mov
test
xchg
dec
inc
iret
test
push
dec
imul
push
and
or
lret
stc
aas
sub
pop
pop
roll
call
xor
in
and
dec
pushf
out
mov
jg
mov
adc
lcall
into
iret
cld
sbb
sarl
dec
mov
or
sahf
mov
notb
das
fldcw
icebp
pop
in
cmpsb
dec
dec
inc
out
out
stos
sbb
xchg
push
movsl
outsb
push
jb
iret
mov
xchg
paddsb
stos
sub
mov
jae
xor
enter
insl
pop
rcpps
dec
sub
push
mov
int
mov
push
and
adc
mov
cmp
stc
rolb
and
leave
mov
loopne
cmp
popa
outsb
ja
in
fcoml
jbe
cmp
pop
dec
adc
cmp
dec
popf
push
aad
push
xor
popa
add
jmp
mov
ja
jns
ret
popl
or
sub
dec
mov
xchg
xchg
jns
xlat
pop
outsb
fdivp
call
out
out
movsb
or
gs
lea
call
outsl
jmp
xrelease
int3
out
rcrl
std
outsb
sbb
jne
fisubrl
lods
xchg
xchg
outsb
loope
nop
pop
popf
xchg
popa
out
pop
fstpt
and
sbb
shrb
jnp
push
outsb
outsb
jb
jp
test
stos
fidivrl
pop
das
cmp
push
mov
xchg
sub
pop
sbb
out
push
mov
in
push
or
fs
fiadds
fsts
push
mov
stos
adc
adc
sar
mov
test
adc
xor
stos
or
pop
dec
mov
out
or
inc
aad
aaa
mov
icebp
fsubp
insl
lock
mov
stos
mov
iret
psubw
pop
addr16
fidivs
add
pop
btr
adc
out
and
icebp
mov
mov
and
imul
xchg
or
jnp
jno
mov
adc
sub
sub
cmp
in
sub
add
mov
cs
inc
cmp
out
dec
inc
push
insb
jl
and
aad
call
aam
sub
loope
outsl
adc
mov
or
xchg
xchg
adc
mov
cmpb
jle
lea
mov
jmp
repz
push
js
outsl
jo
cmp
int3
sarl
je
addr16
jo
aaa
push
pop
add
insl
pop
inc
mov
cmc
push
push
or
test
jno
mov
dec
sub
notl
jno
in
sub
jae
push
inc
jmp
cltd
scas
sub
pop
cmp
nop
mulb
or
dec
jae
and
push
lcall
sbb
es
js
adc
lret
into
cli
pop
pop
adc
out
inc
leave
out
push
jecxz
add
fidivrs
outsb
push
add
adc
add
mov
mov
aas
jecxz
pop
scas
inc
fildll
jecxz
adc
dec
mov
mov
jl
dec
add
test
mov
pushl
das
sub
mov
mov
inc
das
leave
nop
mov
iret
loope
incl
mull
xchg
mov
mov
in
mov
aaa
dec
out
icebp
mov
adc
push
mov
into
push
push
daa
ljmp
nop
lret
push
pxor
dec
lahf
xchg
push
mov
push
adc
xchg
mov
push
arpl
gs
push
mov
adc
xchg
xor
nop
dec
cmpsl
xchg
jns
mov
insb
ret
repnz
test
mov
push
in
int
loopne
out
sar
lea
mov
pop
and
jmp
push
ret
pop
clc
daa
push
dec
outsb
out
sub
sbb
fucomp
lods
leave
fmuls
stc
push
jle
daa
in
mov
push
cmovs
lret
cmp
jb
and
pop
in
sub
cs
clc
out
sub
xchg
outsb
test
mov
fcoms
mov
adc
xchg
push
sub
inc
and
add
cmc
pop
jne,pt
push
arpl
test
lret
leave
fs
jb
ja
roll
pop
pushf
mov
outsl
iret
sbb
cmp
push
mov
out
dec
in
lret
cmc
ds
mov
test
fs
mov
out
ficoms
push
adcb
mov
repz
push
fs
shl
int
icebp
pusha
int3
dec
clc
fistl
test
mov
shr
outsl
xlat
push
mov
in
and
pop
test
cs
jns
mov
in
pop
dec
inc
outsl
jg
aas
scas
xchg
push
das
mov
aad
add
or
or
xchg
imulb
mov
push
and
dec
cmpb
push
mov
jnp
and
pmullw
or
ja
jmp
movsl
push
dec
sub
xchg
leave
fistpll
repz
inc
cmp
xor
out
xor
divb
loope
cmp
sub
adc
xor
pop
iret
jmp
sub
sub
sbb
cmpsb
enter
repnz
movsb
movsl
cmp
mov
pop
out
inc
push
sub
push
dec
fwait
pop
ret
inc
cmp
stos
jno
shrb
jno
mov
sub
clc
lea
pop
cmp
sbb
bnd
sbb
push
dec
add
out
inc
mov
leave
call
insl
inc
lcall
mov
fs
jmp
fimuls
movsl
xchg
loope
or
cmpsl
fwait
jmp
movsl
rclb
sbb
push
or
mov
notl
lock
mov
aam
sub
addr16
sub
pop
aam
mov
hlt
push
mov
lahf
jecxz
pusha
dec
in
popa
cmp
insl
pusha
cmp
mov
into
inc
icebp
push
and
mov
cli
mov
es
mov
jmp
jecxz
mov
test
or
inc
popa
ljmp
dec
idivb
add
iret
jp
dec
jb
add
xor
jbe
sbb
testl
jb
testb
xchg
inc
dec
in
dec
lcall
xchg
adc
mov
divb
nop
pop
in
push
imul
xor
push
pop
into
and
mov
xchg
leave
or
adc
stos
sbb
dec
ja
imul
ds
hlt
shll
pop
fisttps
nop
or
lock
jae
ljmp
xchg
lret
adc
dec
add
pushf
clc
mov
cli
push
or
pop
mov
cmp
dec
push
and
xchg
loopne
rcll
test
arpl
dec
aas
sbbb
push
dec
cmp
fs
mov
nop
mov
xor
inc
out
icebp
stos
xor
jge
dec
ljmp
aaa
or
ss
movsb
or
punpcklwd
cld
inc
outsb
mov
pop
and
lock
add
aaa
xchg
lock
enter
sbb
iret
dec
mov
addr16
xor
pusha
mov
scas
jecxz
repnz
sub
test
sbb
popf
xchg
shlb
mov
aad
leave
js
icebp
rclb
xchg
jmp
imul
das
push
lret
lock
popf
mov
pop
sti
mov
dec
lock
mov
les
insb
in
shrb
lcall
jae
pop
aam
dec
das
imul
lods
dec
and
jns
dec
push
sbb
xor
dec
mov
gs
aas
jmp
mov
lret
clc
hlt
inc
jae
and
sbb
mov
or
mov
mov
clc
icebp
xchg
pop
xor
adc
mov
inc
xor
push
das
js
dec
dec
and
pop
sub
push
and
mov
fisttps
adc
pop
repnz
ja
jns
mov
and
push
ret
addr16
dec
mov
mov
mov
in
jno
dec
dec
fmull
ljmp
or
std
and
pop
push
imul
and
scas
aas
jne
aam
filds
aam
imul
lods
sti
jae
lods
and
mov
insl
sbbl
gs
aad
push
pop
cmp
push
sub
dec
repz
and
sub
cld
xchg
lret
lds
shll
repz
cltd
inc
fwait
sub
cmpsb
lea
lock
pop
out
jmp
xchg
popa
into
dec
cmp
xorl
dec
ja
cld
mov
adcl
outsl
outsb
das
insb
int3
loope
xchg
inc
jp
mov
stos
rcrb
int3
push
and
out
orb
stc
mov
dec
mov
and
or
dec
push
inc
mov
lds
push
int3
lods
jb
jb
in
mov
mov
xor
pushf
sarl
dec
sbb
adc
mov
add
aad
into
or
aad
dec
dec
push
lcall
les
pop
mov
outsl
dec
push
fistpl
daa
pop
pop
xor
pop
xor
jp
bound
or
mov
enter
jle
jp
mov
rcl
inc
mov
popf
add
cmp
jmp
ljmp
lods
sti
pop
test
mov
fadd
lret
xchg
int3
ss
xchg
ljmp
jb
sbb
out
mov
mov
jg
outsl
int
test
mov
dec
gs
ficompl
out
rcr
mov
adc
sub
dec
stos
aad
pop
jbe
sbb
jo
mov
mov
jmp
fistpll
cli
mov
and
mov
cmp
neg
or
dec
cmpsb
push
mov
inc
inc
dec
mov
xchg
lods
repz
orb
aam
mov
cmp
iret
repnz
mov
scas
mov
push
mov
mov
dec
jbe
std
push
adc
inc
mov
cmp
cmpl
push
fucomip
push
adc
popf
pusha
dec
sub
test
iret
outsb
jp
sbb
std
pusha
cld
push
jbe
push
mull
das
inc
mov
pop
push
jnp
mov
dec
int3
xor
ret
xchg
pushf
cmp
push
dec
insl
mov
out
out
push
cltd
jno
add
mov
dec
xchg
hlt
andl
jb
into
leave
sar
dec
pop
pop
dec
xlat
mov
into
loope
push
mov
dec
push
lock
or
jmp
lock
arpl
mov
mov
lret
ja
negl
ljmp
jg
cmp
rclb
sbb
mov
pushf
add
repz
mov
subb
call
xchg
inc
sarb
mov
sub
cwtl
out
pop
jb
fsubrp
inc
jmp
add
and
xchg
push
sahf
mov
mov
xor
add
sbb
rorb
pop
mov
movsl
jbe
mov
fldpi
jmp
add
movsb
xchg
inc
sahf
andb
jo
sti
pop
mov
je
mov
jns
aad
out
mov
mov
fadds
jg
dec
outsl
mov
jl
inc
pop
dec
push
xorb
push
jmp
nop
lds
jo
jp
push
pop
dec
push
out
sbb
pop
jbe
sti
in
mov
out
xor
pop
and
mov
cmc
outsl
data16
dec
push
dec
cmp
fwait
in
stc
fmul
mov
out
jg
jns
inc
outsl
out
lahf
sbb
dec
jbe
jo
adc
mov
sub
or
push
push
ljmp
adc
sti
mov
popf
sub
sub
mov
or
enter
std
jecxz
inc
xchg
outsb
fcmovbe
out
sbb
mov
jae
jnp
dec
adc
or
sbb
ss
in
add
mov
vpcmpgtb
sub
loopne
push
dec
rcll
fiadds
popf
adc
sbb
leave
cmp
sub
sahf
mov
adc
push
jle
inc
test
add
pop
fst
aas
repz
push
mov
xor
cmp
sarl
enter
cmp
in
push
adc
jne
into
dec
ds
sbb
xor
mov
mov
dec
mov
pop
ja
test
sar
cld
fsts
inc
ss
dec
push
pop
dec
out
rol
jnp
test
out
dec
push
and
addr16
mov
stc
jns
nop
icebp
nop
icebp
sbb
or
push
dec
jb
push
outsb
loop
mov
inc
imul
mov
sbb
mov
iret
pop
scas
dec
fdivl
sbb
ffreep
xchg
mov
out
test
jae
stc
outsb
pop
push
fsts
ljmp
xchg
pop
je
and
fxch
icebp
mov
push
push
hlt
jl
outsb
jl
imul
movsb
mov
mov
orb
pop
push
lock
pop
or
rcll
negl
pcmpgtw
mov
push
xor
jmp
stos
inc
out
and
out
cmp
cld
iret
test
stc
mov
scas
es
int
xchg
std
iret
pop
lea
push
lret
clc
push
or
xor
pop
rorb
jmp
js
mov
pop
sbb
add
out
mov
ljmp
dec
in
stos
loope
std
and
arpl
push
inc
es
push
cli
or
inc
repz
das
icebp
mov
jb
mov
packuswb
in
mov
add
xchg
ret
test
enter
jo
cwtl
jle
adc
xchg
cmpl
outsb
lcall
jmp
or
fnstenv
cwtl
jae
out
mov
mov
push
sti
xchg
out
push
ja
lock
pop
pop
std
test
mov
mov
mov
outsb
out
xor
or
orb
std
fisubrs
clc
pop
push
push
outsl
test
sarb
cwtl
jbe
lret
push
imul
lock
push
sti
or
outsb
dec
push
and
inc
push
mov
loopne
jnp
cwtl
lahf
and
push
push
xor
dec
out
out
notl
pop
mov
mov
and
add
xor
out
mov
cwtl
idivb
mov
adc
ss
inc
adc
push
pop
shrb
je
rcr
js
in
outsb
repz
int3
int3
rcll
mov
xchg
outsb
dec
xor
dec
pop
mov
lret
imul
jnp
pop
mov
shl
out
scas
lea
mov
inc
mov
aad
mov
fstpt
lods
xchg
pop
xor
stos
mov
inc
sahf
enter
push
shlb
mov
jle
inc
push
pop
in
sub
mov
or
mov
aad
lock
pop
sbb
outsb
aas
int3
xlat
jae
inc
sub
lret
inc
sbb
mov
lods
ljmp
das
iret
xchg
into
in
xchg
sti
popa
mov
mov
idiv
mov
dec
push
mov
movsl
sub
push
dec
in
adc
sub
sahf
scas
outsb
ljmp
mov
xor
shlb
xchg
adc
jg
je
out
popa
push
and
mov
nop
mov
insl
testl
push
cvttps2pi
xchg
sub
jae
mov
and
out
stos
icebp
cltd
and
cmp
fsub
mov
mov
jmp
push
and
pusha
fdivl
lds
mov
cltd
leave
cli
ljmp
enter
addr16
inc
cld
xchg
lds
and
pushf
out
dec
scas
repnz
enter
jmp
and
addr16
ljmp
jno
clc
push
lds
outsb
push
mov
stos
incl
dec
adc
or
dec
mov
adc
out
aaa
push
movsl
push
mov
mov
adc
outsl
cmp
adc
iret
jp
mov
hlt
hlt
push
jbe
adc
xchg
addr16
ss
lods
cmp
in
sahf
iret
rorl
push
and
icebp
mov
in
xchg
outsl
jne
mov
lock
repz
call
xor
jae
and
inc
jecxz
stos
xor
or
mov
sbb
mul
imul
jae
repz
test
pop
decl
sbb
jae
imul
mov
push
shll
fsubrp
arpl
enter
clc
mov
xchg
arpl
scas
push
in
jns
jecxz
mov
xor
pop
jmp
out
test
int
push
lock
mov
sub
pop
sahf
mov
out
aas
pop
in
sub
sub
xor
mov
xor
mov
das
push
mov
test
outsl
loopne
xor
or
or
cltd
xchg
push
sbb
leave
or
dec
cmp
dec
pop
mov
pop
stc
clc
pushf
push
adc
jmp
push
or
push
pushl
mov
jbe
mov
adc
sub
or
sub
lea
mov
and
jmp
nop
mov
mov
sub
jnp
bound
xchg
jge
jmp
pop
iret
jns
adc
add
cltd
fimuls
xchg
xchg
pop
push
adc
sarb
mov
js
lahf
xlat
dec
mov
add
add
sub
jbe
lods
outsb
adcb
push
jg
leave
int
gs
in
adc
cmc
ds
cli
scas
push
adc
ret
dec
adc
dec
xchg
subb
lea
dec
mov
jmp
orb
sbbb
inc
push
test
loopne
or
imul
jle
dec
xor
add
aad
stos
das
in
out
jl
dec
roll
addr16
das
sub
pinsrw
cmp
inc
repnz
fwait
jl
and
pop
test
mov
push
mov
in
fstpl
fisubs
insl
xlat
jecxz
int
add
aas
fldcw
xor
sbb
insl
out
and
jmp
subl
pop
jbe
lods
mov
je
dec
xchg
push
outsl
loope
adc
sbbl
adc
pop
stc
add
sbb
adc
push
sbb
cwtl
xchg
mov
dec
mov
pop
cmp
or
dec
js
test
in
out
scas
das
enter
leave
mov
and
sbb
jecxz
jmp
jo
sub
hlt
jns
sbb
rcll
push
pop
insb
add
popf
scas
stc
fsubr
rcrb
push
xor
je
repz
mov
imul
mov
inc
sbb
test
hlt
xchg
scas
xchg
xor
test
iret
jns
out
mov
mov
inc
dec
mov
pushf
and
lret
dec
push
in
pusha
outsb
jne
add
out
jle
je
enter
adc
add
dec
jno
jns
jmp
pop
and
sbb
in
movsl
les
out
test
sbb
add
mov
inc
movsl
inc
in
dec
popf
jno
insl
lods
mov
jo
mov
shr
xor
loopne
pop
inc
enter
nop
push
stos
xlat
xchg
mov
xor
jl
xchg
imul
push
hlt
xchg
out
stos
xor
and
lahf
cltd
stc
push
sbb
aas
dec
leave
mov
js
jge
in
cmpsb
sarb
jo
jnp
scas
and
push
mov
push
adc
dec
push
inc
cmc
nop
outsb
cmp
add
jmp
and
xor
into
inc
xor
mov
loop
dec
sbb
or
and
or
dec
cli
int3
into
sbb
jnp
and
pushf
push
sbb
outsl
xchg
pop
test
mov
orb
stos
push
jb
add
jp
pushf
add
ja
aas
dec
jne
adc
ljmp
addb
sbb
add
aam
loopne
pop
scas
cs
xor
lcall
push
mov
inc
xor
xchg
fsubl
sbb
std
jmp
add
mov
cli
out
adc
mov
das
push
sbb
outsl
gs
pop
jg
repz
lods
pop
fst
jmp
in
push
jno
gs
or
aam
mov
add
lcall
xchg
je
test
mov
jbe
adc
stos
sbb
mov
fists
push
pop
mov
push
sub
jmp
sarb
incb
data16
lods
push
mov
mov
pushf
fsubs
hlt
fcomps
cmp
adcl
xor
adc
test
xor
sub
test
inc
ljmp
cmp
inc
dec
jge
js
mov
mov
dec
imul
imul
call
jns
jmp
sbb
xchg
and
mov
sbb
sub
rorl
cwtl
xor
xor
xor
xor
sbb
push
roll
lods
leave
push
addb
fwait
sahf
dec
mov
xchg
mov
xor
lahf
push
out
lds
or
test
xor
popa
push
add
pop
mov
stos
std
mov
xchg
mov
jb
mov
popf
push
mov
dec
push
outsb
testb
jno
push
outsb
insl
and
lcall
js
adc
rorl
pop
sbb
mov
aas
in
int3
push
or
xchg
jo
lret
xchg
mov
jp
mov
or
jecxz
adc
sahf
test
out
movsb
iret
stc
mov
mov
mov
gs
add
sbb
movsl
adc
sub
push
jle
mov
and
jne
jbe
inc
fdivrs
xchg
xor
jno
std
aam
jp
mov
imull
jmp
movsb
xchg
mulb
cmp
imul
out
cmpsb
mov
iret
mov
or
adc
mov
lret
dec
stc
cs
sbb
pop
mov
add
imul
sub
mov
mov
add
or
gs
jae
dec
push
mov
scas
ret
or
repnz
cmp
sub
sbb
fidivs
mov
mov
mov
stos
jg
enter
imul
adc
pop
push
cs
stos
ljmp
pop
outsb
lret
leave
pusha
hlt
mov
mov
adc
decl
or
aas
pop
sbb
out
bound
fildll
imul
cwtl
ljmp
jo
mov
mov
fsubrp
adc
into
test
pop
sub
jge
test
mov
dec
cmpsb
jmp
xor
dec
insl
int
out
and
dec
inc
int
popa
jmp
aad
popa
mov
orb
adc
into
aam
pop
inc
pop
xchg
mov
cltd
iret
mov
pop
mov
dec
clc
mov
test
cmp
lea
cmp
ficoml
clc
andb
popf
lcall
lds
mov
xor
pop
arpl
repz
add
push
loopne
mov
ja
mov
dec
inc
xor
daa
inc
movsb
imulb
sbb
mov
fs
test
movb
pop
pop
jl
rcll
jno
jne
mov
hlt
add
dec
cmp
mov
js
inc
mov
cmp
xor
hlt
mov
push
pop
mov
insl
movsl
or
jp
pop
pop
mov
fistps
lret
push
hlt
pop
dec
add
jo
mov
mov
sbb
pop
addr16
add
cmp
mov
inc
jg
outsl
or
push
sub
lahf
idivl
es
or
lret
dec
stos
dec
pop
or
inc
pop
inc
cwtl
sahf
mov
fsub
addr16
dec
cmp
mov
outsl
push
aas
sbb
ljmp
testl
call
cld
ds
mov
jg
jecxz
jge
cld
test
lret
outsb
mov
addb
mov
mov
shrl
mov
clc
jb
test
ds
call
jbe
lock
adc
iret
jmp
stc
jecxz
outsb
pop
rcrb
xchg
jae
insb
popf
push
xchg
push
repz
xorl
and
jbe
iret
test
lods
dec
incb
rcl
cmp
xor
xchg
xlat
jge
adc
out
adc
adc
mov
imul
xlat
stos
movl
movsb
fidivl
rcr
jb
pop
out
push
dec
sbb
sbb
or
inc
fsts
mov
jns
fs
lods
jmp
mov
rorb
push
cld
jb
push
mov
push
add
fucomip
jb
xchg
aad
push
add
in
jmp
mov
jne
clc
jb
push
adc
ja
xchg
add
frstor
movsl
sbb
mov
std
or
dec
aaa
nop
push
sub
testb
pop
inc
mov
sub
ret
pop
dec
pop
into
mov
xor
dec
imul
push
lock
inc
cmpb
arpl
pushf
cld
mov
icebp
mov
sbb
mov
incl
mov
gs
shll
stos
or
xlat
jae
aaa
dec
shl
lds
xchg
cwtl
pop
jbe
mov
and
mov
imul
scas
test
lret
lds
in
movsb
out
lods
pop
enter
nop
pop
push
pop
adc
int
pop
gs
pop
add
adc
fsubl
pop
sbb
rclb
lods
insl
outsb
inc
mov
inc
popf
out
imul
mov
adc
or
outsb
pop
cmp
add
lret
loope
ss
iret
repnz
js
mov
and
cmpsl
or
mov
jmp
iret
in
jle
sbb
mov
fistpll
jnp
ljmp
ret
insb
lock
cwtl
fidivrs
mulb
sub
btc
movsl
mov
fs
sub
insb
jbe
stos
dec
mov
xchg
mul
pusha
ja
or
or
jmp
daa
dec
mov
divb
aad
ljmp
rcr
lods
popa
enter
ja
stos
or
lahf
pop
jae
xchg
mov
mov
shlb
mov
mov
repz
mov
and
mov
insb
sbb
stc
cmc
scas
iret
enter
outsb
mov
out
or
stc
inc
fmul
lea
cmpl
fldt
xchg
mov
dec
int
inc
jb
rorb
ja
cmp
lea
ja
and
pop
xor
lock
jbe
xchg
xchg
nop
xor
lock
lds
sti
inc
mov
xchg
inc
bound
inc
jnp
cmp
jg
movsb
mov
je
ss
insb
mov
mov
test
rolb
xor
scas
pop
mov
dec
lock
sub
aam
and
outsl
out
jne
or
and
mov
pop
and
mov
iret
xor
mov
inc
or
in
xchg
adc
pop
test
mov
es
dec
inc
mov
repnz
push
movsbl
in
xchg
dec
xchg
lcall
das
pop
cmpsl
mov
xchg
cwtl
mov
xor
gs
popf
orl
mov
lock
jg
push
icebp
or
fadds
mov
push
sub
test
pop
push
add
cld
icebp
mov
in
sbb
out
pusha
dec
popf
cli
mov
cmp
or
xchg
fwait
inc
outsl
addl
sbb
outsb
rorb
adc
jae
jmp
and
mov
adcb
sub
lds
addb
fs
jbe
inc
dec
stos
pop
lahf
dec
sbb
adc
pop
xor
lods
jle
add
add
ror
cld
xchg
jb
mov
stos
adc
lret
in
cmpxchg
sbb
and
cli
jne
scas
sub
push
pop
pop
add
mov
pop
dec
mov
testb
scas
jmp
jge
jge
sub
adc
stos
iret
jae
and
sbb
pop
adc
outsl
mov
mov
dec
in
std
sub
lea
and
pop
bound
add
sbbb
scas
or
popa
inc
lea
push
sub
mov
int3
pop
aaa
cltd
outsb
outsl
add
in
imul
test
bound
outsl
orb
xchg
pop
sbb
lock
mov
mov
imul
pushf
mov
jne
mov
rclb
shrb
mov
push
inc
inc
xor
jmp
lock
ja
push
enter
or
jmp
mov
inc
adc
pusha
decb
dec
add
dec
xchg
popa
cmpsb
push
mov
xchg
or
mov
jl
cltd
fdivl
mov
inc
sbb
xor
mov
imul
shlb
iret
cld
jl
jl
mov
or
aas
jbe
mov
into
imul
mov
ret
lea
mov
mov
test
dec
js
aam
jg
add
shlb
dec
out
mov
jns
jmp
push
loop
cmp
outsl
in
pop
xchg
div
gs
jmp
icebp
mov
xor
mov
aam
push
movsb
adc
clc
fistl
add
xor
das
cmp
and
cmc
push
pop
rolb
lods
out
adc
test
cld
daa
leave
scas
out
sbb
mov
xor
xor
outsb
outsb
and
jg
pop
ljmp
dec
dec
push
leave
test
sbb
push
sbb
test
pusha
ror
jmp
pop
sbb
insl
es
cld
push
xchg
jbe
and
jmp
ljmp
lret
push
push
cmc
js
mov
fdivl
test
dec
mov
push
cmc
jns
fwait
jmp
sub
push
sbb
or
shr
cli
push
adc
cld
xchg
out
jb
jb
dec
loopw
cmp
into
mov
jmp
and
adc
dec
rolb
mov
lods
jne
idiv
int3
jb
shlb
push
sub
popa
int
inc
cmpsb
jo
mov
daa
inc
in
push
ret
aam
and
adc
jmp
sahf
mov
lcall
push
in
int3
sbb
les
pop
into
jl
or
push
call
and
fisubrl
icebp
xor
dec
rcll
ret
inc
xor
mov
stos
xor
scas
inc
psrlw
mov
notb
adc
punpcklbw
pop
mov
sub
sbb
loop
in
dec
add
stos
xor
pop
jae
ja
and
es
mov
cmp
jb
ret
lret
aam
repnz
xor
xchg
sbb
lods
shlb
clc
pop
test
and
xlat
cmpsb
fstl
stos
inc
test
dec
jae
lret
adc
mov
sbbl
lock
add
je
je
sub
jb
push
fcmovbe
dec
jb
int3
pop
inc
push
mov
sub
jmp
sub
mov
ret
lock
mov
popl
pop
and
lcall
push
and
push
stc
stc
jae
imul
mov
mulb
xor
sub
popl
pop
jl
mov
cld
lcall
test
mov
push
dec
stos
je
sub
outsl
scas
inc
jl
add
test
daa
int
cmp
dec
push
xorl
cmp
insb
and
mov
jnp
int3
adc
lds
pop
sbb
test
jge
mov
hlt
scas
mull
mov
fisubs
daa
or
or
mov
in
std
mov
add
or
push
es
cli
xlat
arpl
xchg
mov
add
cmp
iret
mov
addr16
mov
jns
xchg
mov
roll
jae
fsubs
pop
ljmp
lcall
mov
pushf
mov
mov
push
fcomps
add
pop
clc
jmp
test
xchg
dec
lock
push
enter
adc
addb
mov
cmpsl
adc
movsb
testb
outsb
push
jl
sub
mov
add
or
jle
inc
or
in
mov
or
iret
das
popa
pop
push
push
mov
mov
imul
fmuls
lret
jno
xrelease
je
jle
mov
daa
jb
scas
cmp
out
push
hlt
out
imul
stos
imul
inc
jns
xor
sub
nop
stc
cmp
leave
push
inc
in
mov
sbb
test
sub
cs
mov
imul
or
sub
fsubr
add
dec
imul
shrl
movsb
je
enter
cltd
scas
jg
addr16
pop
ja
sahf
dec
push
mov
pop
test
adc
in
ss
jmp
adc
adc
stos
xchg
les
jp
mov
pushf
imul
or
xor
add
pop
mov
xlat
mov
dec
push
into
out
pop
out
stos
push
sti
cmp
iret
stc
mov
daa
xchg
mov
js
adc
mov
je
ret
mov
ja
fisttpl
outsb
sub
outsb
jp
iret
dec
mov
or
ret
je
movsb
pushf
test
cmp
in
mov
shll
mov
inc
sbb
cltd
lea
mov
inc
xchg
xchg
in
inc
fsubrs
sub
in
sub
pop
daa
aas
mov
add
outsl
jnp
inc
inc
movsl
cmp
sbb
push
inc
jp
inc
pop
imul
mov
push
pop
dec
dec
imul
std
adc
cmp
mov
fs
push
das
in
sbb
notl
dec
jnp
data16
pusha
cld
lahf
or
pop
pop
xor
shl
scas
int3
iret
mov
jne
ja
jno
cmp
inc
cmp
push
vhaddps
test
push
jl
inc
es
ljmp
popa
fnstenv
dec
into
inc
iret
push
lahf
pop
scas
out
xor
sbb
fs
mov
mov
insb
xor
sbb
jge
sub
mov
add
xchg
out
push
pop
in
pop
int
bound
xor
sub
aaa
pop
add
arpl
or
fistl
mov
push
push
dec
add
pusha
mov
add
add
mov
hlt
int
ret
pushf
sub
sbb
mov
xchg
rdpmc
xorl
cltd
xor
flds
lock
pop
stc
into
push
loopne
repz
ja
mov
lahf
mov
in
cmpsb
insb
adc
or
out
jg
pop
test
push
cwtl
jl
dec
insl
pop
jb
jns
sbb
outsl
sbbb
mov
or
outsl
outsb
inc
lret
cmp
mov
sub
in
call
dec
sbb
stos
dec
ret
dec
cmp
imul
mov
loop
int3
into
icebp
daa
cld
cmc
push
add
in
lea
xchg
movsb
sbb
mov
mov
je
sbb
mov
int3
lahf
push
dec
jmp
loope
add
bound
add
aaa
mov
es
cli
adc
inc
dec
stc
push
xchg
pop
enter
popf
xchg
xor
mov
push
cmp
fcompl
push
out
pushf
icebp
and
fsubl
pop
mov
inc
arpl
gs
jg
mov
mov
mov
mov
fwait
pop
lock
xchg
outsb
dec
mov
push
cmp
and
push
pop
xor
dec
xchg
and
arpl
jno
int3
repnz
stos
push
out
jns
jmp
repnz
xchg
mov
sar
xchg
test
repz
dec
dec
repnz
mov
lock
push
movsl
stc
int3
imul
test
sarl
mov
mov
dec
mov
jns
cmp
repnz
rolb
mov
pop
push
lahf
int3
jg
mov
xchg
cltd
jnp
int
mov
stos
jo
mov
outsb
mov
mov
call
sub
jne
int3
pop
push
cs
mov
es
es
fmuls
dec
addl
ss
mov
xorb
push
pusha
pop
or
cld
rorl
jbe
cli
popa
int3
lods
or
jecxz
aad
lea
mov
test
xor
push
orl
daa
push
ret
sub
pop
inc
push
pop
imulb
std
es
mov
add
xchg
cmp
loope
mov
cli
aas
mov
add
into
or
ds
int
or
jmp
stc
addr16
pop
mov
enter
push
mov
daa
insl
xchg
and
int
sahf
mov
int
loopne
lret
push
pop
jae
lds
repnz
and
dec
loopne
pop
cs
ficoms
gs
pop
mov
xor
jl
aam
in
xor
add
movsl
push
xor
test
sub
mov
mov
int
and
push
mov
fwait
outsl
cmp
sbb
lret
fwait
dec
pop
cmp
add
sub
aaa
mov
cmpsl
add
cmpsb
nop
sbb
repz
jno
xchg
fbld
mov
pop
divb
push
sub
ljmp
xchg
push
lds
mov
dec
lds
and
sahf
jp
push
decb
mov
and
lock
ljmp
aas
out
add
dec
test
inc
and
int3
cmpsl
mov
sbb
push
divl
mov
lods
dec
jo
add
inc
push
aam
lret
xor
sbb
rolb
cltd
cmp
sub
in
push
pusha
cs
jns
sti
hlt
sbb
insb
mov
fdivs
jmp
arpl
bt
outsb
push
mov
and
pop
lahf
sbb
dec
mov
and
aas
mov
ss
or
sbb
sahf
jg
inc
mov
sub
jecxz
bound
mov
inc
and
inc
sahf
into
cmc
outsl
mov
or
inc
scas
fisttps
sub
std
mov
ret
fidivl
add
dec
mov
add
jb
jmp
pop
mov
jno
jno
ljmp
and
stos
pusha
pop
or
sub
and
lret
and
mov
push
bswap
jmp
test
hlt
lea
das
adc
repz
orb
sub
cld
lods
mov
adc
jo
mov
mov
divb
cmp
ljmp
stc
inc
sub
push
add
lret
cmpsl
jmp
and
popl
pusha
cltd
outsb
pop
jmp
sbb
xlat
mov
mov
mov
lods
sbb
pop
sbb
mov
adc
add
xchg
rcrb
push
dec
push
sbb
lea
outsl
fisttps
mov
movsb
mov
xchg
pushf
repz
sbb
mov
jne
sub
sub
outsb
testl
fsubr
fcoml
jno
adc
in
push
xchg
pop
sar
lea
or
jge
mov
xchg
lret
jl
cmp
pop
dec
jno
fnstenv
push
lods
sbb
mov
nop
pusha
fildll
xchg
jmp
lahf
insl
mov
xor
sarb
xchg
and
cmpsb
push
jbe
dec
xchg
lods
gs
mov
inc
out
out
xor
dec
imul
shrb
mov
in
or
fsubr
xchg
push
je
mov
mov
and
mov
add
and
mov
dec
or
sahf
repnz
fadds
sub
and
enter
mov
scas
loop
cmp
adc
cmpsl
insb
mov
in
add
jno
pushf
lahf
sti
cs
add
in
jb
push
fimuls
pop
bound
mov
pop
into
mov
mov
or
push
adc
push
sarb
fisubrs
dec
lahf
icebp
cmpsl
ljmp
push
sbbb
mov
test
or
cli
dec
push
mov
xor
adc
jg
push
mov
fisubrl
int3
clc
insb
xchg
inc
adcb
adc
das
lock
fnstsw
mov
dec
cmpsl
jmp
in
mov
inc
dec
mov
mov
add
mov
das
pop
test
lea
repnz
xchg
mov
outsb
sbb
fdivrs
push
mov
dec
cwtl
mov
rcrl
push
adc
fstps
int3
out
push
mov
inc
mov
nop
aam
xchg
add
xchg
int
xchg
xchg
pop
in
cmp
stc
nop
ljmp
pop
mov
or
xor
mov
and
sbb
arpl
sti
movsb
aam
insb
mov
xchg
mov
fwait
inc
icebp
cld
xchg
xor
mov
adc
lahf
push
and
outsl
dec
mov
mov
je
or
mov
cltd
out
mov
push
lods
xchg
mov
mov
fxch
repnz
in
jbe
ret
pop
jge
push
mov
pop
dec
jbe
jno
adc
and
lods
xlat
mov
lock
pop
dec
and
dec
sub
iret
add
fldl
mov
idivl
dec
outsb
and
xchg
scas
leave
pushf
int3
in
dec
loopne
in
imul
imul
pop
mov
inc
xchg
stos
add
inc
fstps
mov
cld
out
jle
dec
ss
in
mov
pop
clc
pop
lret
filds
and
pushf
pop
inc
repz
mov
outsl
insl
shrb
xorb
dec
icebp
sbb
push
outsb
inc
cmp
int
sub
jb
cmpsb
cmpsb
in
xor
mov
fisttps
mov
icebp
mov
scas
push
fs
mov
ds
lock
and
les
lods
sbb
sub
arpl
xchg
mov
xchg
sbb
sbb
jnp
and
cmp
cmp
cwtl
mov
test
xor
cmp
or
inc
and
mov
ds
inc
dec
movsb
stc
xchg
popl
adc
xor
lahf
dec
xor
es
aas
inc
mov
cmp
pop
mov
subb
mov
int3
mov
bnd
mov
insb
std
sti
lret
add
cs
outsl
pop
lods
lds
add
xor
lods
mov
jl
xchg
dec
movsl
push
lods
dec
movsl
inc
stos
jp
dec
loope
xor
cmp
mov
ja
fucomp
add
das
xor
lock
pop
das
std
pop
inc
test
cmp
pop
sub
push
xor
ljmp
push
lock
xchg
out
out
cltd
leave
shl
test
js
je
pop
aaa
daa
fbld
push
test
stos
int3
jno
das
xchg
in
addr16
clc
pop
mov
or
cmp
fwait
xchg
adc
mov
arpl
dec
mov
icebp
jmp
and
mov
movsb
hlt
in
cmpsl
jmp
mov
jmp
into
xor
mov
or
sub
daa
dec
cli
outsb
mov
popf
jno
mov
cmpl
imull
cli
addr16
outsb
inc
xchg
aad
das
dec
and
ja
cmp
or
jnp
mov
popf
imul
pop
fwait
sub
or
and
testl
out
mov
sti
in
xor
push
dec
adc
cli
je
xchg
jge
pop
dec
pop
pcmpeqb
imul
scas
inc
mov
gs
imul
orl
in
or
arpl
push
inc
mov
pop
push
pop
xlat
mov
daa
fs
leave
pop
cmp
dec
jle
sbb
or
das
js
adc
push
dec
push
pop
aas
das
cli
xchg
les
insb
jnp
add
fisttpl
and
inc
jno
leave
cwtl
adc
pop
add
add
fcmovnu
mov
cltd
xor
notl
cmp
in
loopne
push
xor
inc
jmp
cmc
call
mov
int
js
mov
gs
aas
sub
fldcw
stos
test
inc
gs
xor
lods
add
mov
movsl
cmp
jno,pn
outsl
aaa
scas
push
test
pop
mov
aas
adc
test
and
push
pushf
cmp
mov
loop
adc
push
xor
cs
mov
nop
rorl
push
fistl
cmpsl
pop
ret
cmp
dec
or
push
lret
jb
adc
lock
jne
aam
rcrb
out
sub
jbe
sub
inc
xor
dec
pop
adc
cmp
xor
dec
scas
popa
scas
inc
scas
jmp
mov
scas
add
inc
out
insb
or
scas
add
xor
hlt
outsl
or
lock
or
das
sarl
lret
pop
mov
std
jp
loope
scas
xchg
xchg
imul
and
ret
cmp
mov
int
scas
mov
repnz
sarb
clc
imulb
sbb
lods
scas
clc
jmp
push
mov
sub
lods
sarl
js
push
dec
mov
push
xor
push
xchg
gs
or
or
ret
or
int
inc
jl
dec
or
aaa
jecxz
test
das
inc
sub
int3
lods
cmp
fmull
fisttpll
sbb
cld
js
fiaddl
scas
inc
daa
orl
data16
test
push
out
cmc
sub
sbb
rolb
icebp
and
lods
sbb
xor
and
or
jge
sbb
sbb
xor
mov
sbb
adcl
cli
or
sub
stc
mov
and
repz
mov
lcall
imul
lea
sbb
push
stc
inc
jmp
ror
mov
pop
cwtl
sub
fldenv
aaa
sbb
clc
pop
push
lea
popa
cmp
cmp
cmp
inc
dec
jl
push
or
push
stos
hlt
xchg
aaa
cmp
mov
mov
loope
inc
inc
jns
xchg
pop
fiadds
and
or
sub
sbb
push
loop
js
sbb
ljmp
pop
or
cli
repz
dec
xchg
sbb
pop
pop
out
push
pop
nop
cld
jecxz
dec
xor
aaa
adc
stc
mov
adc
cwtl
jns
das
mov
fs
cmp
add
add
clc
cld
sbb
aad
sub
lods
dec
loop
int
adc
movsb
mov
cld
or
outsb
xor
mov
mov
jge
imul
cmp
hlt
dec
iret
sub
lds
cmc
test
xchg
mov
inc
or
xor
dec
push
sbb
xor
repnz
mov
icebp
or
dec
xchg
inc
jecxz
jns
pushf
inc
dec
les
cmpsb
xchg
mov
sub
js
ret
push
inc
mov
jg
sbb
or
dec
into
xchg
pop
mov
dec
les
cmpsl
add
push
add
or
and
add
addb
xorb
add
add
add
enter
add
add
addb
add
clc
add
orb
add
sbb
add
xor
add
dec
add
sbbb
add
pusha
add
subb
add
add
add
add
add
mov
add
add
add
add
add
addb
add
add
add
call
add
add
add
addb
add
sbb
add
xor
add
add
add
add
add
dec
add
addb
add
add
add
pusha
add
addb
add
add
add
js
add
nop
add
addb
add
add
add
rolb
addb
add
add
add
fadds
add
add
add
add
add
lock
addb
add
add
add
or
add
add
push
add
add
add
add
addb
add
add
addb
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
inc
add
add
add
add
add
adc
add
pusha
add
add
add
jo
add
add
add
addb
add
add
add
add
nop
add
add
add
add
adc
add
add
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
add
add
or
add
adc
add
ss
add
je
add
push
add
add
add
pop
lds
mov
in
add
add
add
and
add
add
add
add
into
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
roll
add
add
and
add
add
add
add
add
add
add
add
add
add
fiadds
add
add
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
inc
dec
ss
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
and
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
and
add
and
add
add
and
add
add
and
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
add
add
and
add
add
and
add
and
and
add
add
and
add
and
xor
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
add
add
and
and
add
and
add
add
fidivs
fidivs
fidivs
fidivs
add
add
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
add
and
and
fsubl
xchg
add
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
add
and
xor
fidivs
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
add
and
xor
fidivs
fidivs
fidivs
fidivs
and
xor
fidivs
fidivs
fidivs
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
add
and
add
and
xor
fidivs
fidivs
add
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
add
and
fsubl
xchg
add
fidivs
fidivs
fidivs
add
fidivs
fidivs
add
and
add
fsubl
xchg
and
xor
fidivs
fidivs
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
fidivs
fidivs
add
add
and
add
and
xor
fidivs
add
fsubl
xchg
add
add
and
and
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
and
xor
fidivs
fidivs
fidivs
fidivs
fidivs
and
and
add
fidivs
fidivs
fidivs
fsubl
xchg
add
and
add
add
and
add
fidivs
add
and
xor
fidivs
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
fidivs
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
add
fidivs
and
and
and
add
and
add
add
add
and
add
and
xor
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
add
add
and
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
and
xor
fidivs
fidivs
fidivs
add
and
add
and
add
fsubl
xchg
fsubl
xchg
add
and
add
add
and
add
and
xor
fidivs
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
add
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
and
and
and
and
and
and
and
add
fsubl
xchg
add
fidivs
and
add
and
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
and
xor
and
add
and
and
fsubl
xchg
add
add
fidivs
and
add
add
and
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
add
and
xor
and
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
and
and
xor
and
add
add
and
add
add
and
and
add
fsubl
xchg
and
xor
fidivs
fidivs
add
add
and
and
fsubl
xchg
add
add
fidivs
add
fsubl
xchg
add
fsubl
xchg
add
and
fsubl
xchg
fsubl
xchg
add
add
add
and
xor
fidivs
add
and
and
add
fsubl
xchg
fsubl
xchg
add
and
xor
add
fsubl
xchg
fsubl
xchg
add
add
and
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
add
add
and
and
add
add
and
and
xor
add
fsubl
xchg
add
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
add
and
add
fsubl
xchg
fsubl
xchg
and
xor
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
and
fsubl
xchg
add
add
and
fsubl
xchg
and
xor
add
add
and
fsubl
xchg
add
fidivs
fsubl
xchg
add
add
and
add
fsubl
xchg
add
fsubl
xchg
add
add
and
fidivs
add
add
and
add
and
add
and
xor
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
add
and
add
and
xor
and
fidivs
add
add
and
add
fsubl
xchg
and
xor
fsubl
xchg
add
and
add
add
add
and
fsubl
xchg
add
fidivs
add
fsubl
xchg
fsubl
xchg
add
add
and
and
add
and
add
fidivs
fsubl
xchg
fsubl
xchg
add
add
and
add
add
and
add
fidivs
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
and
add
add
fidivs
add
add
and
add
add
and
add
fsubl
xchg
and
xor
and
xor
and
fsubl
xchg
fsubl
xchg
fsubl
xchg
and
xor
add
add
and
add
add
and
and
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
and
and
xor
and
fsubl
xchg
fsubl
xchg
add
and
add
and
xor
add
fsubl
xchg
fsubl
xchg
add
and
fsubl
xchg
add
add
add
fsubl
xchg
add
and
and
and
add
add
add
fidivs
add
fsubl
xchg
fsubl
xchg
add
and
add
and
add
add
fidivs
add
fsubl
xchg
add
and
fsubl
xchg
add
add
and
and
add
add
add
and
add
add
and
add
fsubl
xchg
fsubl
xchg
add
add
add
and
xor
add
add
add
and
fsubl
xchg
fsubl
xchg
fsubl
xchg
and
xor
add
and
add
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
add
add
and
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
add
add
add
and
fsubl
xchg
fsubl
xchg
add
and
add
fidivs
add
and
add
add
and
add
and
add
fsubl
xchg
add
add
and
and
fsubl
xchg
fsubl
xchg
fsubl
xchg
and
xor
add
add
add
and
add
add
and
add
and
add
add
fidivs
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
add
add
add
fsubl
xchg
fsubl
xchg
add
add
fidivs
and
and
fidivs
fidivs
fidivs
fidivs
fidivs
and
fidivs
fidivs
fidivs
and
fidivs
fidivs
add
and
add
fsubl
xchg
and
xor
fsubl
xchg
fsubl
xchg
add
add
and
add
add
and
add
and
add
add
fidivs
and
and
fsubl
xchg
fsubl
xchg
add
add
add
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
fidivs
fidivs
fidivs
fsubl
xchg
fsubl
xchg
and
xor
fsubl
xchg
add
and
add
add
and
add
and
add
fsubl
xchg
add
add
fidivs
fidivs
fidivs
fidivs
add
and
xor
and
and
and
xor
and
add
add
add
and
add
add
fidivs
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
and
add
add
add
fidivs
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
and
add
add
and
add
and
xor
fidivs
fidivs
add
and
xor
and
and
add
add
fidivs
add
fsubl
xchg
fsubl
xchg
add
add
add
fsubl
xchg
add
and
xor
fidivs
add
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
add
add
add
and
xor
fsubl
xchg
add
fsubl
xchg
add
and
add
and
add
add
and
fidivs
add
add
fidivs
add
fsubl
xchg
add
add
and
add
add
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
add
and
add
fidivs
fidivs
add
fsubl
xchg
add
add
and
add
and
xor
add
add
and
fsubl
xchg
add
add
add
fsubl
xchg
fsubl
xchg
add
add
and
fsubl
xchg
and
xor
add
and
xor
add
fsubl
xchg
add
add
and
add
fidivs
add
add
add
and
add
fsubl
xchg
add
fidivs
fidivs
fidivs
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
fidivs
add
add
and
add
and
add
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
and
add
fidivs
add
fsubl
xchg
fsubl
xchg
and
xor
fidivs
add
fsubl
xchg
fsubl
xchg
add
add
and
add
add
fidivs
add
add
and
fsubl
xchg
and
xor
add
add
and
add
and
add
fsubl
xchg
add
and
xor
fidivs
fidivs
and
add
fsubl
xchg
add
fidivs
add
fsubl
xchg
fsubl
xchg
add
and
xor
add
add
add
and
add
fsubl
xchg
and
xor
add
fsubl
xchg
fsubl
xchg
add
add
and
add
add
and
add
fsubl
xchg
add
add
add
fsubl
xchg
add
and
xor
add
add
and
and
add
fidivs
add
add
add
and
add
fidivs
add
add
add
and
add
fsubl
xchg
and
xor
add
and
fidivs
add
add
and
add
fsubl
xchg
add
add
and
and
xor
fidivs
fidivs
fsubl
xchg
add
fidivs
add
add
add
and
and
xor
fidivs
add
add
add
and
and
and
xor
fidivs
add
fsubl
xchg
and
xor
add
add
and
add
add
and
and
and
xor
add
and
add
fidivs
add
add
add
and
add
and
xor
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
fidivs
add
fidivs
add
fsubl
xchg
fsubl
xchg
add
add
fidivs
fsubl
xchg
fsubl
xchg
add
and
xor
add
add
add
and
add
fidivs
fidivs
fsubl
xchg
fsubl
xchg
add
fidivs
add
and
xor
add
fsubl
xchg
add
and
and
xor
fidivs
add
add
and
and
add
add
fidivs
add
add
add
and
and
add
fidivs
add
add
and
add
fidivs
add
add
fidivs
add
and
add
fsubl
xchg
add
fidivs
add
and
add
fsubl
xchg
fsubl
xchg
add
fidivs
add
add
add
and
and
and
xor
fidivs
fsubl
xchg
fsubl
xchg
add
and
xor
and
xor
add
and
add
add
and
add
fidivs
fsubl
xchg
fsubl
xchg
add
and
xor
add
add
add
and
and
add
and
xor
fidivs
fsubl
xchg
add
add
fidivs
and
xor
fidivs
fidivs
fidivs
fsubl
xchg
add
add
and
add
add
fidivs
fidivs
add
add
and
add
add
and
add
add
fidivs
add
add
add
and
add
fsubl
xchg
add
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
and
xor
fidivs
add
and
xor
and
xor
fidivs
fidivs
fidivs
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
add
fidivs
add
and
add
fsubl
xchg
and
xor
add
add
add
and
add
fsubl
xchg
add
add
fidivs
add
fsubl
xchg
add
add
and
and
xor
add
and
xor
add
and
xor
and
fidivs
fidivs
add
add
and
add
add
fidivs
fsubl
xchg
add
and
add
add
add
fidivs
add
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
and
and
add
add
add
fidivs
add
and
xor
fidivs
fidivs
add
add
and
add
add
add
fidivs
fidivs
fidivs
fidivs
fidivs
fsubl
xchg
fsubl
xchg
add
fidivs
add
add
and
fsubl
xchg
add
add
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
fidivs
fidivs
and
and
fidivs
add
fidivs
add
and
xor
fidivs
fsubl
xchg
add
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
and
fidivs
fidivs
add
and
xor
add
fsubl
xchg
add
add
and
add
fsubl
xchg
add
fsubl
xchg
and
xor
and
and
and
add
add
fidivs
and
xor
fidivs
fidivs
add
add
and
add
add
and
add
add
add
fidivs
fidivs
fidivs
fidivs
fidivs
add
and
add
and
xor
and
add
and
add
add
fidivs
and
add
and
xor
and
and
xor
add
fidivs
fidivs
fsubl
xchg
add
and
and
and
xor
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
add
and
and
xor
fidivs
fidivs
and
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
and
xor
add
fsubl
xchg
add
fidivs
add
add
fidivs
fidivs
add
fsubl
xchg
add
fsubl
xchg
add
add
and
and
xor
and
xor
fidivs
fidivs
fidivs
add
and
add
and
and
add
and
add
and
add
fsubl
xchg
add
and
xor
add
fidivs
fidivs
and
add
add
and
add
add
fidivs
add
add
fidivs
fidivs
fidivs
fidivs
add
and
add
fsubl
xchg
add
and
add
fsubl
xchg
add
fidivs
and
fidivs
and
add
and
xor
fsubl
xchg
and
xor
add
add
and
add
add
fidivs
add
add
fidivs
fidivs
fidivs
fidivs
fidivs
add
fsubl
xchg
add
fsubl
xchg
fsubl
xchg
add
add
and
add
fidivs
add
fsubl
xchg
add
add
fidivs
add
fsubl
xchg
fsubl
xchg
add
fidivs
add
add
and
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
fidivs
add
fidivs
fidivs
fidivs
fidivs
fidivs
and
add
add
and
add
fsubl
xchg
fsubl
xchg
add
fidivs
add
add
add
and
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
add
fidivs
add
add
and
add
add
add
fidivs
fidivs
fidivs
add
fsubl
xchg
add
add
and
add
add
add
fidivs
add
and
fidivs
fidivs
fidivs
fidivs
add
fsubl
xchg
add
and
fsubl
xchg
add
and
xor
add
add
and
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
fidivs
add
fsubl
xchg
add
add
fidivs
and
and
xor
fsubl
xchg
add
add
fidivs
fidivs
fidivs
fidivs
and
add
fsubl
xchg
add
add
add
fsubl
xchg
add
and
xor
add
fsubl
xchg
add
add
add
and
xor
fidivs
add
fsubl
xchg
add
fidivs
add
add
and
add
fsubl
xchg
fsubl
xchg
add
fidivs
fsubl
xchg
add
add
and
fidivs
fidivs
fidivs
fidivs
fidivs
add
fsubl
xchg
add
add
add
fsubl
xchg
add
add
fidivs
add
and
add
add
add
fidivs
fidivs
and
add
and
xor
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
fidivs
fidivs
fsubl
xchg
fsubl
xchg
add
fidivs
fidivs
fidivs
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
fidivs
fsubl
xchg
and
xor
fidivs
and
add
add
fidivs
add
fsubl
xchg
add
and
and
xor
add
and
xor
fidivs
add
add
and
fsubl
xchg
add
add
fidivs
fidivs
fidivs
and
add
add
fidivs
add
add
and
add
add
fidivs
fidivs
add
add
fidivs
add
and
add
fsubl
xchg
fsubl
xchg
add
fidivs
and
xor
fidivs
add
fsubl
xchg
fsubl
xchg
add
and
add
fsubl
xchg
and
xor
fidivs
fidivs
fidivs
add
add
fidivs
add
fsubl
xchg
add
fidivs
add
and
and
add
add
add
fidivs
add
fidivs
fidivs
fidivs
fidivs
add
fsubl
xchg
add
and
add
and
and
xor
fidivs
fidivs
fidivs
add
add
fidivs
add
and
and
xor
add
and
xor
add
and
and
add
add
add
fidivs
add
fidivs
fidivs
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
fidivs
fidivs
and
xor
add
add
and
add
and
xor
add
fidivs
fsubl
xchg
fsubl
xchg
add
fidivs
add
add
fidivs
fidivs
fidivs
fsubl
xchg
add
add
and
add
fsubl
xchg
fsubl
xchg
add
fidivs
fidivs
fidivs
fidivs
fidivs
add
fidivs
add
add
and
fidivs
and
xor
fsubl
xchg
fsubl
xchg
add
fidivs
and
xor
fidivs
add
fsubl
xchg
add
fsubl
xchg
add
and
and
add
add
fidivs
fidivs
fidivs
fidivs
add
and
xor
add
and
xor
and
add
add
fidivs
add
and
and
add
and
xor
add
and
xor
fidivs
fidivs
add
fsubl
xchg
add
and
add
fsubl
xchg
fsubl
xchg
add
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
add
add
fidivs
add
add
add
and
and
xor
add
and
add
fsubl
xchg
add
add
fidivs
add
add
fidivs
fidivs
fidivs
fidivs
add
add
and
add
add
and
add
and
and
add
add
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
add
and
xor
fidivs
add
add
and
and
xor
add
fsubl
xchg
add
add
add
fsubl
xchg
add
add
fidivs
add
add
fidivs
fidivs
fidivs
add
fsubl
xchg
add
add
and
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
fidivs
add
fidivs
fidivs
fidivs
fidivs
fidivs
fidivs
add
fsubl
xchg
add
add
fidivs
add
add
and
add
add
add
and
and
xor
fidivs
add
fsubl
xchg
fsubl
xchg
add
and
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
add
add
and
xor
add
and
xor
and
xor
fidivs
fidivs
fidivs
and
add
and
xor
add
add
and
fsubl
xchg
add
add
and
add
add
and
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
and
xor
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
and
xor
fidivs
add
add
fidivs
add
add
and
and
xor
and
add
and
add
and
xor
fidivs
fsubl
xchg
add
and
xor
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
fidivs
fsubl
xchg
and
xor
add
add
add
and
fsubl
xchg
add
add
fidivs
fidivs
add
fsubl
xchg
add
and
xor
add
fidivs
add
add
fidivs
add
and
and
xor
fsubl
xchg
fsubl
xchg
add
add
and
and
xor
fidivs
fidivs
add
and
and
xor
fidivs
add
and
xor
fidivs
add
fidivs
add
add
and
add
and
xor
add
add
and
add
and
and
xor
fidivs
fidivs
fsubl
xchg
add
fidivs
add
and
xor
fidivs
add
and
xor
fsubl
xchg
fsubl
xchg
add
and
xor
add
add
and
fsubl
xchg
fsubl
xchg
and
xor
fidivs
fidivs
add
fsubl
xchg
add
add
fidivs
add
add
fidivs
fidivs
and
xor
fsubl
xchg
fsubl
xchg
add
and
xor
add
and
add
add
and
add
add
fidivs
fidivs
fidivs
add
and
add
add
fidivs
add
add
add
fidivs
fidivs
add
fidivs
add
and
add
fidivs
add
add
and
and
fsubl
xchg
add
add
fidivs
fidivs
fidivs
fidivs
fsubl
xchg
add
fidivs
add
and
xor
fidivs
add
and
add
add
fidivs
add
and
and
xor
add
and
add
fsubl
xchg
add
and
xor
fidivs
fidivs
fidivs
fsubl
xchg
add
fidivs
fidivs
add
and
and
xor
add
fsubl
xchg
fsubl
xchg
and
xor
fsubl
xchg
fsubl
xchg
add
add
and
and
xor
fidivs
add
fsubl
xchg
add
and
xor
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
and
xor
add
add
and
add
add
fidivs
add
fsubl
xchg
fsubl
xchg
add
and
xor
fidivs
fsubl
xchg
and
xor
fidivs
add
and
and
add
fidivs
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
add
and
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
and
xor
fidivs
add
fsubl
xchg
add
and
xor
fidivs
fidivs
add
and
and
and
and
and
add
and
xor
fsubl
xchg
fsubl
xchg
add
fidivs
fsubl
xchg
fsubl
xchg
add
add
add
and
xor
fidivs
fidivs
add
add
and
and
and
add
fidivs
and
fidivs
add
add
add
fidivs
fidivs
add
and
xor
and
and
and
and
and
and
and
xor
fsubl
xchg
add
fidivs
add
fsubl
xchg
fsubl
xchg
and
xor
fidivs
fidivs
fidivs
add
add
and
and
and
add
add
and
and
and
and
and
and
and
and
and
xor
add
add
add
and
and
xor
fsubl
xchg
and
xor
fidivs
add
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
add
fsubl
xchg
and
xor
fidivs
add
add
add
fidivs
fidivs
fidivs
add
fidivs
fidivs
and
add
add
fidivs
and
fidivs
add
add
fidivs
fidivs
and
add
add
add
fidivs
fidivs
add
add
add
fidivs
fidivs
fidivs
add
fsubl
xchg
add
add
and
fsubl
xchg
fsubl
xchg
fsubl
xchg
fsubl
xchg
and
xor
add
and
xor
fidivs
fidivs
fidivs
add
and
xor
fidivs
fidivs
fidivs
add
fsubl
xchg
fsubl
xchg
add
add
fidivs
fidivs
and
xor
fidivs
fidivs
fidivs
fidivs
fidivs
add
add
inc
cmp
popa
adc
adc
testl
mov
mov
lea
leave
nop
xor
xchg
xor
xchg
aaa
lret
enter
fwait
cmp
lahf
xor
stos
aaa
loop
cmp
stos
cmp
mov
out
cmp
mov
in
mov
lock
lret
rcrb
aam
inc
scas
dec
xlat
scas
dec
shll
aad
push
xlat
movsb
pop
aam
push
scas
push
xlat
scas
pop
fisubrl
fnstenv
fnstenv
aad
pusha
fnstsw
mov
fdivrl
in
push
in
inc
out
inc
out
inc
in
dec
out
inc
jmp
inc
call
inc
call
dec
cmc
mov
out
imul
outsl
in
je
roll
inc
in
lds
dec
out
dec
stc
ret
les
rcll
jo
shlb
jo
sarb
js
jle
leave
imul
js
sarb
aad
js
fnstcw
mov
leave
xchg
loope
test
les
int
in
mov
int3
mov
roll
sub
xchg
int3
test
lret
int
out
lret
lret
iret
xchg
out
cltd
call
xchg
call
pushf
icebp
iret
xchg
into
mov
rorb
aad
not
mov
faddl
mov
aad
repnz
xchg
cmc
xlat
nop
sti
fistl
fistpl
aad
jmp
stos
in
fldenv
fdivrl
loope
loope
jmp
fwait
jmp
lahf
jmp
movsb
jmp
movsl
jmp
movsl
stc
loope
cli
jecxz
jmp
lods
call
lock
mul
mov
loop
mul
mov
ljmp
mov
ljmp
mov
in
out
sar
sar
out
stc
jmp
sti
in
lret
cli
in
into
out
enter
imul
sar
lock
push
int3
push
into
push
int3
push
aam
repz
hlt
xlat
push
fcos
hlt
neg
push
mul
std
mul
mul
std
clc
loop
clc
loope
clc
out
sti
out
lock
push
add
add
stc
add
add
add
sub
add
add
add
add
or
add
or
orb
push
add
or
arpl
cmp
ret
int
pop
mov
inc
adc
xchg
sub
or
cmpsb
mov
jle
mov
add
dec
or
adc
xor
lahf
sub
ret
push
jno
sbb
pusha
xchg
sub
shlb
inc
scas
pop
pushf
call
xchg
daa
inc
pop
xchg
and
scas
pop
mov
loope
shlb
pop
daa
adc
add
arpl
test
add
movsb
dec
add
pusha
push
pusha
subl
les
push
fdivs
inc
inc
add
adc
mov
cmp
inc
inc
lea
dec
dec
jp
or
test
aaa
rcrb
addb
pushf
adc
shll
xor
inc
lock
add
mov
fldcw
mov
les
or
adc
shlb
ret
cmp
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
fildl
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
inc
add
add
add
adc
add
add
les
pop
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addb
mov
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
jecxz
in
out
jmp
cmc
div
clc
stc
cli
fiaddl
or
add
add
add
add
add
push
lods
jg
js
dec
lock
xchg
in
cmp
iret
cmp
in
mov
pop
in
inc
add
dec
inc
mov
das
ret
mov
xchg
dec
insl
push
push
mov
pop
out
and
call
adc
add
push
xchg
aam
cmp
and
push
les
jnp
cmp
fldt
stos
mov
mov
cmp
popfw
mov
or
int
jmp
adc
add
out
pop
out
jle
lcall
sahf
cli
pop
or
ret
cmp
sahf
mov
mov
in
inc
push
pop
jae
adc
sub
fstpl
cwtl
mov
xchg
jg
aam
jno
mov
sbb
jg
cmp
lret
sbb
cltd
movsb
fucomi
fwait
cmp
mov
int3
jo
movsb
int
int
icebp
insl
imul
xchg
and
inc
dec
add
int
outsl
mov
ss
divb
mov
and
in
mov
adcb
cmp
push
or
loopne
sub
pop
xor
shll
loope
arpl
mov
push
inc
push
insb
adc
out
sbb
mov
incl
mov
popf
dec
fdivl
and
bound
push
lea
cld
test
cmpl
push
add
sub
icebp
lea
sub
pop
lods
sbb
dec
xchg
sub
dec
idiv
movsb
std
popf
fst
push
lret
sti
fists
aam
cli
into
lahf
loope
cmp
push
cli
fisttpl
xchg
gs
lret
adc
xchg
adc
cwtl
xorb
sbb
and
push
fwait
in
xlat
lods
mov
mov
cmpsl
cmp
and
push
addr16
nop
lock
test
add
adc
jae
dec
jnp
movsb
and
leave
mov
lret
pop
fiadds
dec
scas
lret
ds
in
incl
ret
jge
pop
xchg
dec
jecxz
pop
cmp
sbb
and
jns
dec
and
pusha
cs
mov
testl
pcmpgtw
fildll
jne
push
mov
test
les
xor
push
jmp
in
fsubrp
cli
pop
sub
push
clc
ret
into
aas
pop
fidivl
jge
ljmp
inc
or
add
or
rcrb
mov
jge
cmc
mov
add
mov
mov
dec
aam
shlb
sub
fwait
pop
inc
push
loope
mov
xchg
data16
js
pop
mov
inc
loop
aas
ret
lahf
addr16
dec
cmp
fsubrl
fcomps
dec
int
or
bound
jno
push
bound
cmp
ret
mov
scas
ljmp
movsl
pushf
imul
dec
dec
mov
sbb
and
mov
mov
iret
jnp
sti
mov
xor
mov
adc
fwait
ja
addr16
lods
jns
xlat
loope
pop
dec
sub
push
xchg
jg
jl
loope
cmp
dec
je
sub
rorl
mov
pop
fstpl
and
popf
mov
testb
xchg
inc
icebp
pop
pop
xor
pop
or
rorb
mov
push
sbb
insb
gs
jl
incl
cli
popa
clc
cmpsl
gs
imull
das
add
mov
outsb
inc
or
loopne
imul
out
add
ljmp
std
pop
inc
shrl
aaa
ret
cli
gs
dec
sub
out
icebp
add
and
mov
mov
adc
jge
mov
mov
call
aad
add
push
mov
inc
test
jno
loop
xchg
cmpsl
and
fistpll
xchg
pop
xlat
mov
sbb
jp
js
pop
pop
mov
xchg
fisttpl
pop
dec
out
loop
jb
stos
sub
daa
je
shrb
or
or
dec
mov
in
scas
mov
lret
jno
arpl
adc
and
ret
sti
inc
cltd
testb
fsubs
insl
fstl
cmp
outsl
loope
or
imul
mov
pop
mov
ret
adc
mov
push
push
jp
add
add
add
xchg
mov
cmp
adc
push
cs
cmp
repnz
push
adcb
lods
loope
ja
jp
sahf
mov
push
or
push
push
mov
jb
dec
push
dec
sub
jp
fcmove
dec
mov
mov
ret
xlat
je
ficompl
outsl
xchg
ficoml
sbb
sub
mov
inc
add
adc
jmp
add
add
pop
mov
jge
addr16
in
mov
mov
fisttpl
aaa
jmp
mov
xchg
in
fistl
into
outsl
pop
ja
mov
clc
pop
rol
mov
outsl
outsl
scas
jbe
fwait
sti
jmp
jo
js
add
xor
sbb
shll
gs
push
mov
rolb
xchg
ds
int3
scas
adc
roll
add
dec
icebp
push
ret
idivb
insb
out
xor
aad
mov
jbe
sbb
and
sbb
mov
and
pusha
test
sub
movsl
inc
into
int3
rep
fs
movsl
push
std
jmp
lret
pop
xchg
dec
xchg
cmp
sbb
lock
xchg
loope
add
inc
aad
mov
mov
stos
lret
mov
dec
fisubrs
imul
or
pop
push
das
pushf
test
fldenv
dec
scas
push
xor
lret
pop
xchg
insl
rolb
xchg
jo
movsb
scas
lret
shll
int
xor
pop
sub
icebp
jbe
insl
adc
adc
insl
push
fnstsw
pop
jge
lret
cmp
sbb
xor
ss
xor
xchg
int3
stc
jl
pop
fs
push
gs
loop
adc
mov
movsl
mov
sahf
in
and
xchg
push
sbb
enter
jno
mov
mov
mov
inc
stc
pop
fidivrl
call
ds
imul
test
mov
test
mov
fxch
cltd
sti
fisubrl
addr16
and
addl
jae
xor
add
xor
and
dec
sbb
cmp
mov
pop
stc
repnz
daa
adc
lahf
incl
and
xchg
ljmp
jecxz
cmp
sub
in
jmp
rep
out
sbb
sbb
sti
cmp
mov
rcrb
xchg
inc
js
inc
dec
push
shll
fldcw
mov
dec
mov
in
decb
in
mov
xchg
ret
inc
outsb
fmul
je
sbb
shll
addb
mov
sub
fcmovb
push
insl
orb
xor
adc
cmpb
cltd
incl
or
nop
incl
xor
jle
lds
incl
mov
call
repnz
imul
sub
jo
mov
stos
dec
incb
sahf
mov
fst
aad
pop
imul
or
add
sbb
ja
or
loope
cld
cmp
test
sub
out
push
mov
insb
in
out
sub
popf
jae
adc
testb
ret
cld
mov
sub
incl
cld
and
inc
xchg
icebp
pop
jge
push
xor
push
fmulp
loopne
or
mov
test
cmp
daa
mov
jg
popa
xor
pop
push
xchg
pop
in
rcll
outsb
cmp
fwait
in
in
sub
mov
cld
and
std
or
mov
add
jp
or
push
dec
icebp
dec
fdivl
pop
lods
xor
sbb
rcr
jae
adc
jbe
into
jle
fdivrl
lahf
mov
jl
incl
or
xchg
sbb
popa
aam
les
jnp
divl
movl
xor
push
xlat
sub
dec
xor
jnp
sti
sbb
aaa
jg
scas
mov
cmp
arpl
out
iret
fnstenv
insb
popf
and
push
mov
mov
dec
leave
in
mov
xchg
out
pop
divl
in
mov
test
mov
cli
jbe
popa
popa
cmp
ret
and
jb
or
xor
push
ret
mov
cmp
sub
arpl
flds
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
incb
cmp
inc
inc
push
dec
push
cmp
addr16
and
xor
sub
imul
and
inc
inc
and
xor
sub
jno
popa
insb
imul
or
fildl
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
pop
add
add
add
adc
add
add
les
pop
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addb
mov
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
jecxz
in
out
jmp
cmc
div
clc
stc
cli
fiaddl
or
add
add
add
add
add
push
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
fsubrl
cmp
or
inc
or
mov
adcb
add
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
and
and
leave
data16
jno
sbb
outsl
mov
lods
cltd
xchg
jecxz
mov
daa
mov
stos
jmp
dec
int
xchg
into
int
dec
movsl
sub
mov
add
dec
mov
push
cmpsb
fdivrl
dec
popa
lea
pop
lock
xchg
push
fstp
xchg
sbb
addb
movsb
mov
push
cltd
push
adc
scas
adc
pop
pop
stc
call
mov
pop
mov
ret
aaa
cmp
in
clc
push
cwtl
scas
bound
outsl
sbb
cmpsl
lock
mov
gs
outsb
lahf
lea
cmpsb
ficomps
xchg
aad
add
xor
sahf
jno
ljmp
fildl
pop
dec
stos
add
fistps
xor
xor
cmp
mov
insb
push
xor
add
test
push
lods
dec
pop
or
daa
push
mov
lods
in
das
pop
mov
pusha
adc
ret
jno
aas
xor
in
pop
add
imul
push
fcoms
loop
mov
movsb
cmp
sbb
or
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
and
jmp
add
sahf
imul
es
adc
iret
cmp
cmc
fists
pop
js
dec
jnp
cmpsl
adc
notb
jle
fisubrs
push
repnz
scas
add
shll
pop
push
call
je
cltd
das
cmpsl
push
gs
aas
cs
add
jmp
ja
cmp
ss
cs
push
jns
lret
hlt
jmp
fisubrs
mov
testl
stc
imul
leave
icebp
cmpsb
mov
push
sub
push
mov
pop
das
add
lods
jle
mov
push
jno
push
xchg
jge
popf
test
popf
outsl
cs
jl
jno
fs
test
mov
mov
lret
pop
cmc
scas
das
incl
test
sbb
leave
cld
clc
jmp
sbb
mov
int3
fildl
loopne
mov
imul
push
push
arpl
xchg
push
mov
xor
mov
test
fcmovnu
mov
mov
add
xchg
pop
test
mov
jnp
js
out
pop
sbb
push
lock
inc
jne
add
repz
incl
pop
mov
push
jo
lds
jl
mov
mov
xor
ljmp
jl
scas
hlt
cmp
dec
sub
cmp
dec
xor
sub
sub
pop
sahf
push
push
jae
cld
mov
mov
dec
and
sub
js
ffreep
rcr
pop
inc
jns
jo
pop
and
mov
jecxz
xor
mov
je
jle
imul
push
jbe
test
cmpsl
test
sub
add
out
and
jge
jle
ret
int
mov
jns
xor
mov
jb
fs
incl
mov
xchg
into
xor
adc
mov
popa
mov
dec
in
fcmove
test
mov
push
push
inc
cmp
hlt
iret
pop
std
pop
add
ljmp
dec
push
mov
mov
xor
sub
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
data16
dec
rorl
mov
lods
add
aam
jo
sub
inc
add
adc
mov
adc
fidivrl
int3
mov
enter
test
cmp
popa
insl
mov
das
sbb
iret
dec
jae
and
jg
int
xlat
adc
xchg
mov
mov
int3
loope
dec
xor
and
popa
ja
pop
leave
xor
bound
adc
cmpsl
mov
add
or
int3
sub
adc
jp
cmp
stc
mov
les
dec
loop
add
xchg
pop
and
fiadds
mov
out
pop
aad
inc
fwait
jnp
icebp
rorl
repnz
jne
mov
std
push
les
outsb
out
sub
dec
shrb
hlt
icebp
insl
sbb
leave
je
jns
dec
jecxz
mov
mov
bnd
stos
jle
lock
jp
ss
ret
dec
lahf
xor
jmp
sub
jnp
dec
and
lods
movl
cmp
pusha
xchg
gs
sub
jo
imul
mov
mov
ficoml
push
das
and
dec
inc
aam
cli
imull
pop
cmp
cmp
ror
and
dec
movsb
push
and
inc
js
cmp
xchg
scas
jl
xchg
test
pop
jo
test
pop
cmp
imul
pop
jp
push
out
ss
lret
cltd
push
sbb
imul
mov
mov
loopne
cli
push
sbb
scas
xor
pop
mov
data16
push
mov
ja
mov
sub
jecxz
aas
pop
lret
test
dec
loopne
aad
fwait
dec
fdivs
adc
jmp
dec
aas
in
arpl
push
mov
sbb
divb
mov
imul
mov
jns
cmp
inc
cmp
int
loop
scas
lret
pop
ja
sub
scas
fwait
and
ss
adc
pop
sbb
dec
test
pop
fistps
and
fists
mov
cmc
sbb
ret
enter
arpl
pop
jmp
cmp
push
xor
clc
ja
pop
push
mov
push
enter
lahf
fwait
cmpsl
push
add
sahf
sub
or
mov
mov
popf
push
pop
fstpl
lret
sbbl
sbb
loop
or
push
dec
cmp
rcrb
test
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
mov
je
mov
rclb
push
movsb
aad
lea
push
fucom
xchg
cmp
pop
out
loop
xor
data16
bswap
sub
pop
pop
jnp
sub
push
add
pop
repnz
mov
jb
movsl
mov
pop
out
cs
xor
mov
jge
cmc
lods
imul
fsubl
aas
mov
loope,pn
out
mov
pusha
test
jmp
cli
pop
mov
push
fmull
sahf
js
sarb
stos
movb
pop
aas
sbb
sub
les
cmp
addr16
inc
push
out
ret
dec
icebp
xorb
xchg
sub
jns
outsl
mov
aad
clc
testl
add
int3
and
dec
cmc
jo
mov
in
mov
movsb
mov
add
mov
cmp
sbb
cmc
mov
rcrl
jne
cmc
fsubrs
lds
stos
pop
push
int3
xchg
lods
adc
inc
jp
or
sbb
add
and
or
cmc
movsb
fimull
jbe
fdivl
pushf
xlat
sbb
mov
fistpl
imul
jne
loop
sbb
dec
adc
and
jbe
jl
repz
pop
inc
xchg
xchg
fadds
sbb
xlat
enter
cmpsb
mov
push
mov
dec
data16
imul
jmp
mov
leave
testb
call
dec
cmp
fstpt
sub
dec
add
in
movsl
inc
stos
jno
mov
call
jmp
pop
testl
xchg
cltd
jle
lods
dec
inc
arpl
dec
push
pop
std
negb
sahf
repz
add
popf
push
and
jecxz
jg
imul
push
cmpsl
ss
repz
test
pop
xchg
pop
repnz
les
loope
mov
jno
stos
leave
sub
push
jl
lret
jge,pt
cld
stos
mov
sub
and
and
xlat
xchg
cmc
scas
pop
dec
shll
fbstp
inc
addr16
push
ds
repz
mov
sub
sbb
jae
jmp
aad
mov
add
pop
pusha
add
iret
test
movsb
cmp
jg
loop
or
loopne
enter
mov
das
int3
dec
cmp
mov
jg
cli
jge
int
cmpsl
lods
movsb
xlat
xchg
or
sbb
lock
jns
enter
pop
sbb
lods
imul
adc
mov
aas
mov
dec
and
cli
xchg
pop
out
sbb
outsl
mov
mov
dec
rcrl
notl
inc
adc
mov
sbb
sub
cmp
inc
add
lea
in
or
add
cmp
mov
pop
jnp
add
lock
xbegin
xlat
inc
movsl
push
lods
je
mov
test
add
sbb
xchg
pop
into
or
stc
cwtl
aam
jne
mov
mov
jb
inc
lods
jmp
or
dec
ret
sbb
push
sarb
fdivl
push
push
or
push
mov
xchg
mov
mov
out
inc
mov
push
inc
gs
adc
mov
aaa
xchg
scas
and
imul
cmpsl
fildll
jle
out
push
or
cmp
lods
pop
dec
movsl
push
pop
imul
incl
gs
jnp
mov
sub
inc
xor
xor
lahf
jp
in
push
dec
sub
push
ljmp
out
jl
jae
insl
sbb
shrb
mov
test
sahf
dec
sub
add
xchg
lahf
ret
mov
loope
mov
aam
mov
arpl
js
loopne
xchg
movsl
dec
incl
js
mov
add
dec
dec
ret
in
mov
iret
popf
sub
out
outsl
xor
add
nop
inc
arpl
add
scas
mov
pop
jl
mov
jne
fimull
xorl
dec
movsb
cli
adc
and
add
aad
jo
and
xor
jmp
in
lods
loop
cmpb
mov
js
lea
add
or
lret
mov
lcall
push
adc
push
pop
push
jb
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
movsl
add
pop
movsl
add
or
sub
cmp
loop
out
and
leave
insb
icebp
clc
sbb
cld
push
lods
cmpsb
xchg
cmpb
xlat
cmp
les
mov
gs
loope
add
idivl
xlat
enter
dec
ds
cs
dec
jecxz
dec
jecxz
arpl
mov
xchg
jmp
and
addr16
mov
sbb
fstl
cmp
or
jl
test
pop
stos
add
pop
dec
popa
mov
jle
in
rclb
in
inc
xor
iret
adc
out
xor
jnp
gs
cmpsb
xchg
fwait
pop
jl
test
sti
mov
icebp
or
xchg
in
incb
cmc
subl
lea
xchg
daa
jae
fldenv
out
add
cmp
dec
and
pop
test
push
ljmp
jns
cld
mov
and
outsb
daa
ja
mov
cmp
fdiv
lahf
jmp
jns
push
movl
outsw
xor
cmp
sbb
scas
iret
ret
pop
ja
les
jnp
jo
cmp
pop
arpl
std
add
lcall
dec
fs
add
aad
das
ret
out
pop
incl
pusha
pop
or
or
sbb
pop
mov
lods
mov
jp
and
fiaddl
mov
out
push
jb
pop
nop
jno
inc
jle
inc
test
aam
cmp
fs
movsb
int
jo
dec
inc
ds
lods
js
xlat
inc
xorl
repz
fldl
push
cmc
push
stos
sbb
sahf
mov
xchg
xchg
lock
ror
ljmp
ljmp
loope
in
lods
lds
fcompl
dec
lret
icebp
pop
mov
inc
xchg
jns
mov
pop
into
mov
in
xchg
xchg
sbb
fimuls
dec
sarb
inc
loope
mov
insl
dec
lret
mov
add
les
popf
sbb
mov
insl
insl
inc
imul
enter
xchg
adc
dec
ja
je
hlt
test
fisubs
stc
in
icebp
inc
dec
or
ljmp
pop
icebp
aas
idivb
xchg
sbb
ds
lods
jns
mov
jnp
sarb
notb
sbb
mov
pop
dec
rclb
pusha
push
and
into
fs
cltd
call
xchg
fcompl
sbb
xor
stc
sarb
dec
popa
sbb
mov
aam
jns
mov
fwait
xchg
xor
dec
dec
js
incl
add
adc
dec
xchg
push
mov
leave
mov
stos
push
and
jmp
and
push
scas
jbe
lods
jg
mov
pop
ja
popf
jmp
adc
xchg
mov
adc
jo
xor
add
jmp
inc
inc
repz
ljmp
fists
dec
pop
xchg
loope
mov
add
mov
iret
lock
movsl
push
xchg
test
mov
pushf
mov
iretw
dec
push
add
xchg
out
out
hlt
xor
fimull
jmp
sub
das
xor
pop
pop
lret
test
push
popf
mov
cmp
lea
adc
push
andl
inc
add
jb
cmpsb
shrd
loopne
sbbl
xchg
cmp
stos
int
jmp
scas
sti
sub
mov
cmc
ss
outsl
sbb
mov
push
pop
inc
in
pop
addr16
and
cmp
jge
cwtl
xor
sub
mov
mov
in
push
push
cld
loopne
and
push
jg
jl
dec
or
fidivl
push
xor
mov
movsl
pop
sbb
daa
xchg
and
jno
insb
push
test
jl
pop
xor
or
add
movsl
sub
pop
xchg
add
add
push
popf
inc
or
mov
cmpsb
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
or
sub
xchg
dec
cmp
and
cmp
sar
xor
mov
arpl
sub
popf
xor
leave
jno
xor
jns
jo
outsb
add
adc
loope
xchg
jo
leave
es
mov
cs
out
mov
adc
in
fisubrl
es
mov
ljmp
rorb
fists
mov
aad
pop
in
pusha
xchg
push
fimull
repnz
push
dec
lds
mov
push
sub
sub
or
mov
icebp
sub
ja
insb
xor
cli
dec
add
jbe
xchg
cli
sti
jne
das
push
cwtl
ljmp
inc
enter
adc
lea
movsl
and
sub
fstps
insb
and
fldenv
push
push
pop
pop
xor
xchg
mov
dec
xor
xchg
ror
test
dec
loopne
cwtl
push
jae
lahf
dec
mov
fidivrl
and
add
mov
ljmp
dec
mov
sti
mov
push
sub
adc
sbb
xchg
pop
int3
push
add
sub
mov
adc
and
jo
or
notl
lock
aas
dec
out
shl
and
pop
loope
ret
divl
xchg
insb
mov
adc
pop
test
push
pop
add
addb
je
lahf
xchg
aam
xlat
in
js
and
je
sub
push
popf
mov
mov
pop
push
test
ss
push
gs
rcrb
sahf
cmpsl
fdivs
aaa
jecxz
mov
cmp
dec
imul
int3
jno
movsl
sbb
mov
xor
mov
jl
icebp
sub
dec
fbld
cmp
sbb
dec
std
jns
inc
movsl
jns
mov
xchg
pop
or
mov
cmpsl
movsl
jae
pop
mov
jb
fcoml
xor
adc
enter
inc
mov
mov
leave
in
cmp
out
xchg
adc
jge
and
dec
cmc
jns
inc
call
jmp
sub
sbb
and
or
enter
jae
xchg
dec
sar
and
mov
icebp
xchg
js
repz
dec
dec
loop
push
loop
out
adc
repnz
inc
xchg
fnstenv
inc
mov
lds
into
push
xor
icebp
push
inc
push
jne
jge
stc
mov
cmpsb
mov
dec
adc
stc
push
xor
jp
in
mov
xchg
mov
cmp
lret
rcr
and
sbb
xor
jmp
aam
ret
orb
add
repnz
mov
adc
icebp
lea
mov
mov
jns
mov
add
mov
and
mov
aas
dec
jmp
orb
cmp
sahf
pop
fidivl
les
xchg
stos
bswap
mov
add
sbb
cld
imul
imul
insl
cmp
add
in
sbb
add
ds
pop
ss
jae
sbb
xchg
cmpl
jge
sub
jmp
lea
sub
cmp
icebp
jge
repnz
popa
sbb
mov
jb
fidivrl
xlat
rcrl
sbb
lds
je
push
xchg
jns
push
pop
mov
std
cmp
dec
mov
fcmovbe
and
and
xor
push
imul
push
pop
dec
or
fiaddl
lds
adc
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
test
push
add
adc
insl
and
ds
mov
fildl
pop
pop
mov
cltd
or
incl
push
mov
sbb
outsb
cmpb
pop
sub
add
jge
test
repz
mov
sahf
fistpl
std
jns
pop
imul
add
incl
scas
mov
jp
nop
cmp
std
mov
in
pop
mov
push
xor
pop
outsl
mov
sub
imul
ret
jmp
or
icebp
lahf
dec
imul
or
stc
lea
stos
jl
xchg
push
nop
movsl
mov
mov
cmp
jns,pt
lret
mov
les
sahf
or
aad
popf
pop
adc
lds
jmp
iret
ja
lret
stos
popf
push
pop
sub
jne
roll
pop
inc
push
jp
ja
sub
div
mov
scas
clc
movsl
popf
push
pop
and
push
mov
or
add
jb
add
add
lods
sub
xor
sbb
xchg
inc
cli
lcall
mov
jmp
subl
ss
stc
xlat
xor
push
pop
jp
testl
dec
testb
cmp
loop
scas
lea
jb
and
out
lds
sahf
adc
lods
lods
and
push
addr16
mov
cmovl
scas
cmp
adc
lods
dec
imul
sbb
in
sub
mov
fwait
dec
shr
out
outsl
xchg
imul
pop
dec
ja
and
call
lods
cmp
inc
icebp
lods
outsb
cmp
out
lods
das
sbb
repz
cli
mov
mov
mov
testl
jmp
inc
mov
and
mov
test
test
imul
fmul
in
les
cmp
push
aaa
aaa
iret
or
add
add
jnp
sub
push
or
out
sbb
cmpsb
mov
or
or
add
stc
xchg
cmp
imul
addr16
adc
in
mov
into
mov
rol
cs
add
fidivrl
hlt
fmull
aas
in
push
orb
cwtl
aam
push
cmp
or
adc
repz
cli
movsl
scas
movsl
arpl
mov
inc
nop
push
mov
mov
sub
lret
xor
push
lods
sbb
mov
inc
nop
mov
shrl
insl
cmc
iret
movsl
jns
mov
fstps
mov
mov
push
inc
ds
std
dec
sti
filds
scas
bound
pop
push
lds
or
mov
inc
push
add
cmp
inc
sbb
xchg
jnp
aas
cmp
cli
stc
in
rcrb
mov
mov
jb
cmc
cmp
das
mov
and
test
fmuls
leave
imul
dec
jle
mul
jmp
jne
push
loope
fisttpl
xchg
push
cmp
test
mov
clc
insl
sbb
bnd
cwtl
pop
popa
arpl
sub
shrl
into
lret
sub
data16
sub
cmpsb
push
insl
loope
aad
inc
mov
mov
inc
cmpsl
leave
push
stos
loop
push
or
enter
into
jecxz
jo
pop
icebp
lret
sbb
arpl
in
sbb
dec
test
fildll
hlt
scas
inc
jbe
nop
and
inc
sbb
leave
js
rclb
push
xlat
shr
lcall
pop
xchg
add
adc
jp
sahf
aad
test
sbb
push
xlat
xchg
mov
add
or
pop
xor
mov
mov
mov
jbe
clc
mov
push
pushf
fnsetpm(287
mov
cmpsl
cmp
jne
mov
into
inc
or
xor
fidivs
int3
movsb
add
mov
mov
push
or
je
gs
sbbb
data16
into
aaa
adc
jne
dec
hlt
iret
or
dec
insl
xchg
outsb
outsb
fs
mov
test
adc
mov
add
test
cwtl
lods
lods
rcll
arpl
mov
sub
aad
jo
xchg
icebp
lods
jno
mov
cmpsl
and
push
push
add
add
adc
dec
or
outsb
loop
aam
push
pop
mov
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
es
sub
ret
cmpsb
pop
mov
lahf
xchg
je
mov
pop
mov
push
mov
insb
sahf
out
dec
mov
fimuls
push
cmpsb
mov
test
fldcw
pop
pop
jg
mov
sbb
std
xor
and
loope
cltd
fimull
xchg
ss
pop
lock
fistps
xlat
mov
sarl
xchg
mov
loopne
cmp
sbb
aam
xchg
in
loopne
stos
imul
pop
ret
jne
pop
pop
mov
add
sub
jb
lods
stc
outsb
in
mov
xor
mov
pusha
test
sbb
jl
mov
cmp
lret
push
add
cmp
test
pop
loopne
frstor
dec
sbb
lea
scas
inc
mov
push
mov
push
adc
movsb
jns
mov
xchg
stos
loope
mov
clc
inc
loop
sti
push
dec
xchg
sub
arpl
fdivr
addr16
mov
test
pop
sbb
mov
mov
sbb
aad
dec
cld
lea
and
shl
cmp
inc
cmpsl
inc
dec
int
popa
lcall
test
adc
sbb
repnz
inc
cmp
ss
loope
cwtl
mov
movsl
mov
mov
iret
mov
cmp
sbb
cmovp
lock
sahf
shl
mov
dec
and
and
cmp
jg
fidivrl
repnz
incl
cmp
insb
and
int
xchg
ja
aad
popa
mov
adc
lret
sub
dec
testl
shrb
loop
mov
adc
sub
lods
inc
test
shll
sub
ret
xchg
arpl
sub
jae
pop
leave
and
dec
bound
or
sub
fistl
sahf
das
cwtl
xchg
fs
push
lret
jmp
fidivs
jb
pop
sbb
dec
adc
jg
jae
sub
pusha
jp
sbb
lods
sub
dec
fnstenv
lret
insl
bound
xor
sbb
dec
std
mov
rclb
inc
loope
clc
clc
sbb
mov
adc
cmpsl
inc
sub
sbb
pop
xor
in
cmc
lds
imul
ljmp
jo
or
cmp
dec
jns
fadds
sub
inc
repz
push
pop
inc
adc
pusha
cmc
adc
loop
fisubl
push
ror
and
or
mov
dec
jnp
and
lods
xlat
into
push
sbb
jb
add
mov
jb
or
lret
adc
jae
and
push
jle
add
aaa
mov
aam
and
xchg
fs
bound
in
fisubl
stc
push
push
push
sbb
pushf
inc
mov
add
aas
std
jne
arpl
add
inc
repnz
jno
jge
popf
mov
repz
xchg
or
xchg
add
aam
dec
push
lds
test
add
pop
jnp
pop
ficoml
loop
xchg
pop
adc
pop
pop
incl
gs
and
or
sbb
test
shr
aam
sahf
and
inc
push
lahf
into
mov
jecxz
mov
cmp
mov
scas
mov
mov
jb
gs
lods
jp
jno
imul
mov
cmpsl
imul
aaa
add
std
sub
mov
inc
sarl
push
mov
js
inc
inc
sub
test
or
fcomps
sub
lret
mov
mov
lods
ljmp
inc
das
loope
enter
mov
in
test
movsl
xchg
or
push
sbb
inc
and
movsb
aam
fldenv
mov
push
push
and
xor
in
push
and
inc
btc
call
rcr
or
dec
mov
mov
jnp
aam
xlat
clc
addl
xor
ja
or
cmc
shr
mov
add
jne
sub
imul
rorb
jp
mov
js
sbb
es
xchg
push
andb
call
inc
imul
mov
ds
out
ds
dec
jle
mov
pop
icebp
and
nop
sahf
ret
das
lret
daa
mov
lock
test
dec
mov
mov
add
jg
cmc
aad
adc
add
push
or
jo
aam
inc
ja
mov
roll
or
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
lds
xor
addb
inc
push
lea
cwtl
loopne
fistps
mov
int3
push
orl
xor
sub
outsb
xchg
out
jp
iret
jle
icebp
pop
ficompl
add
push
xchg
repz
test
in
inc
push
lea
fldenv
inc
ja
cmp
push
cmp
aad
sbb
sbb
out
and
daa
clc
jle
adc
icebp
xor
jns
imul
cmp
shlb
out
mov
js
insb
orb
xchg
push
pusha
jno
xor
mov
out
and
cli
insb
sbb
jae
arpl
es
xchg
xchg
pusha
into
sti
xchg
and
cmp
iret
inc
pop
mov
jl
jne
jns
mov
popf
into
sbb
add
sub
pop
pinsrw
xchg
stos
scas
cltd
addr16
repnz
cmp
xchg
mov
mov
adc
jo
dec
push
xchg
jl
pushf
mov
imul
inc
jp
cmpl
dec
dec
jb
push
xchg
dec
xor
out
adc
ret
or
xor
repnz
and
xchg
jae
xchg
push
repz
jmp
sti
sbb
out
hlt
loope
flds
inc
add
push
jae
mov
mov
jb
cmp
hlt
jmp
lret
out
mov
mov
pop
jg
aad
test
mov
add
in
dec
dec
mov
xchg
xchg
ss
push
ss
sbb
hlt
test
or
cmp
pusha
lret
xchg
sub
jl
in
sub
xor
xchg
stos
mov
mov
inc
icebp
jl
in
pop
and
mov
in
subb
enter
lods
stos
mov
xchg
iret
adc
gs
int
cmpsl
push
out
test
push
lea
mov
lahf
outsb
mov
fdivr
out
sbb
and
mov
xor
mov
inc
cmp
and
mov
cmp
dec
test
bound
aaa
adc
cmpsb
mov
or
cmp
fs
popf
mov
pop
repnz
dec
push
inc
mov
push
les
lds
mov
fs
xor
sub
lods
jno
outsl
mov
sbb
rcll
xor
lea
push
in
addr16
lods
pop
test
in
in
into
sbb
mov
cmp
xor
popa
jno
nop
lahf
cs
lret
inc
out
stos
jbe
add
mov
stos
in
nop
scas
shl
xchg
addr16
xlat
pop
lods
imul
inc
adc
dec
add
push
mov
jo
pusha
and
xchg
loopne
repz
adcb
shlb
adc
cmpb
out
lcall
cmp
add
and
add
fmull
mov
mov
mov
mov
add
in
bound
adc
add
in
imul
popf
les
lret
or
jg
arpl
xor
add
and
lods
inc
push
movsb
xchg
rorl
mov
icebp
mov
mov
push
dec
xor
arpl
add
cmpsb
nop
jae
out
scas
movsb
mov
push
dec
jl
xchg
leave
fisubrl
leave
fimull
sbb
and
mov
adc
mov
cli
out
xor
mov
lret
mov
enter
dec
subps
jb
xchg
fstl
pop
xchg
jecxz
std
fiadds
sbb
add
in
cld
pop
loope
fnsave
adc
fdivl
dec
pop
fidivrs
out
test
ds
mov
loopne
or
cmc
outsl
jg
cmc
cmc
pop
cmpl
imul
mov
xor
cltd
mov
lret
pop
sub
syscall
js
xlat
ret
test
fidivrs
std
in
sahf
jge
jne
xorl
add
mov
faddl
adc
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
xchg
dec
push
aam
dec
mov
out
loopne
sub
sbb
incl
mov
loopne
inc
outsb
int3
and
aas
jns
or
aad
imul
dec
aaa
int
into
dec
mov
lcall
sti
cmp
fbstp
repz
rcrl
jge
lods
xlat
subl
dec
pop
mov
stc
xlat
adc
mov
test
aam
jo
mov
outsb
ss
int
test
cld
xlat
pop
pop
out
lcall
mov
sbb
and
in
ja
mov
sub
std
inc
ja
xchg
in
cld
cmp
pop
out
sbb
imul
jae
mov
outsl
jge
negb
sbb
jns
push
sbb
lahf
shlb
inc
or
test
pop
mov
xor
movsl
mov
daa
sub
mov
jbe
fidivl
dec
jle
cmc
pop
jecxz
mov
les
mov
inc
or
inc
sbb
subb
dec
lea
aam
out
scas
movsb
cmp
add
push
pop
and
pop
sbbl
or
lahf
fwait
mov
push
add
lock
lds
mov
xchg
mov
xchg
mov
stos
dec
js
add
repnz
lods
xor
lcall
cwtl
addr16
mov
repnz
scas
xchg
pop
lret
test
xor
das
es
gs
push
mov
dec
add
dec
inc
pop
xor
outsb
repnz
or
push
push
ret
inc
ds
mov
in
mov
frstor
pop
clc
mov
test
sub
cmp
cmp
sbb
pop
in
in
shll
mov
lea
xchg
outsb
push
clc
cmp
lds
leave
aam
dec
mov
outsl
and
cmp
or
cli
push
xchg
mov
mov
pop
and
and
sbb
fildll
inc
or
cld
inc
mov
lods
xchg
xchg
sahf
pop
xchg
cld
loope
je
nop
ds
jbe
and
mov
aam
hlt
aam
lcall
int3
lret
pop
mov
in
pop
sub
shrl
testb
fisttpl
sbb
dec
leave
daa
push
mov
jge
stos
ror
js
loope
dec
leave
pop
mov
repz
adc
out
pop
pop
mov
xchg
push
inc
inc
push
mov
add
jecxz
lods
leave
test
sub
loope
push
mov
adc
sub
dec
lock
sbb
pop
pop
adc
push
shll
push
js
outsl
enter
cmp
xor
out
cld
push
lea
pop
dec
xchg
inc
or
cmc
scas
outsb
lret
adc
cmp
addb
daa
mov
xchg
lods
cmp
ret
mov
sbb
fstpl
movsb
rcll
out
or
lret
sbb
shr
jae
scas
or
lcall
mov
shrb
mov
push
lahf
int
fs
pop
leave
rcll
pop
test
xor
and
xchg
and
fcmovnbe
lds
sbb
adc
xor
cmp
mov
dec
push
fcoms
and
jbe
mov
jecxz
pop
popf
popf
fdivrp
movsb
xor
in
ficoms
push
sbb
push
jg
jbe
mov
ds
cmp
or
xor
jne
sbb
aad
xchg
add
icebp
add
pusha
lret
xor
fildl
adc
lcall
mov
sti
push
roll
and
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
das
aam
repz
mov
cld
jp
push
cmc
sbb
mov
insl
ret
add
inc
pop
xchg
loope
sti
pop
mov
pop
xchg
loopne
sub
jae
sahf
out
dec
pop
repz
pop
fsubl
pop
lahf
fisubrs
xchg
fmull
std
mov
lahf
adc
xor
push
sbb
repnz
push
imul
call
dec
scas
lds
sbb
into
mov
add
adc
or
test
mov
mov
mov
or
add
cmpsb
inc
push
fcoms
inc
divb
cmp
jp
lock
mov
cmpsl
inc
or
dec
fcomps
sbb
insb
orb
add
nop
faddl
dec
jecxz
aad
jl
sbb
sbb
pop
lock
pop
inc
xor
dec
iret
js
ljmp
int
fisubrs
jle
std
sarb
xchg
push
mov
cmp
hlt
sub
or
lret
sbb
cld
lods
jmp
push
xor
dec
inc
mov
incl
xor
cmpsl
cmp
xchg
fiadds
mov
sub
xor
sub
cmp
loop
cmp
lods
rcll
and
xor
lea
aaa
sbb
leave
adc
mov
jnp
cwtl
add
jmp
adc
push
ja
insb
xor
iret
jns
adc
xor
sbb
in
iret
sbb
xor
lds
sbb
stos
and
addl
imul
push
jl
shlb
push
dec
mov
pop
pop
dec
cmpsl
mov
mull
mov
repz
lahf
hlt
push
inc
and
stc
lock
xchg
arpl
mov
scas
insb
je
popf
mov
je
std
shrb
enter
add
sbb
arpl
ds
popf
sbb
push
shll
inc
dec
int
mov
xchg
bound
jbe
fbstp
fldl
lea
cmpsb
scas
orb
js
lcall
sub
sub
pushf
ja
jnp
jo
imul
mov
stc
and
push
pop
ret
daa
les
cld
xor
sub
adc
push
ret
div
xchg
jge
lods
in
std
les
repz
icebp
jne
pcmpeqw
stc
jecxz
mov
xchg
cld
int
les
fildl
mov
sarb
mov
into
out
insb
outsb
inc
add
into
cmp
stc
mov
and
clc
xchg
gs
loope
loope
mov
xchg
incl
sahf
rorb
xchg
mov
sahf
sbb
subps
xchg
out
and
rclb
out
xchg
add
insl
sub
aas
jnp
xchg
dec
into
out
and
lods
mov
fcmove
dec
ja
in
sbb
scas
iret
push
push
ds
xchg
les
cmp
mov
mov
xchg
inc
repnz
jmp
mov
outsl
fs
mov
mov
lods
jns
mov
xchg
or
adc
repz
jmp
inc
fnsetpm(287
repnz
sub
scas
adc
xor
in
bound
cwtl
lock
aam
cs
ljmp
test
jno
pop
push
cmp
add
sbb
and
imull
cmpsl
push
dec
cltd
jbe
pushf
addb
scas
cmpsb
loop
mov
imul
sbbb
jmp
out
sub
cltd
mov
or
shll
imul
fldenv
mov
mov
and
jno
mov
mov
rolb
mov
jo
imul
and
mov
gs
shll
xlat
cmp
sub
push
inc
lods
jnp
xchg
cltd
mov
jb
pop
mov
pop
inc
cld
cmp
xchg
xchg
mov
cmpsl
imul
sub
push
xlat
cmp
dec
dec
jecxz
mov
sub
lea
loope
mov
xlat
ja
stos
cs
dec
imul
cmp
subl
pop
pop
rcrl
imul
mov
aas
jns
test
xchg
pop
sub
pop
in
cs
jo
sbb
xchg
push
xchg
call
mov
add
out
call
test
cmpsl
aaa
sub
in
aam
lret
scas
mov
pop
mov
sti
push
stos
jnp
mov
inc
xor
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
imul
cmp
sub
inc
js
mov
dec
xchg
pop
inc
dec
test
pop
add
scas
imul
insl
sbb
bound
fiaddl
dec
repnz
or
aas
cmp
cmp
repnz
sbb
mov
dec
fdivrl
and
test
xchg
sbb
mov
and
adc
inc
popf
xchg
cmp
adc
movb
das
test
test
jbe
mov
stos
mov
in
xor
lods
mov
arpl
xor
cmpsl
add
cmpsb
ss
sub
xchg
sbb
in
shlb
jg
pusha
sub
or
sbbl
pop
cmc
push
mov
dec
xor
cltd
movsb
dec
mov
xor
xor
sbb
loopne
lods
sub
cmpsl
sahf
test
imulb
cmc
shll
dec
cltd
daa
pusha
int
dec
mov
sbb
test
mov
jae
fsubrl
mov
mov
in
scas
jmp
push
movsb
cli
jge
xchg
add
sbb
pop
aad
lcall
pusha
add
sub
and
test
mov
rcrb
adc
xor
scas
or
ss
push
bound
cmp
adc
lret
push
call
mov
outsl
pop
xor
sub
inc
and
mov
popf
jo
mov
push
fcmovbe
mov
inc
out
dec
inc
std
cltd
insl
loope
pop
or
testb
sub
push
dec
in
or
push
xchg
clc
xchg
pop
addr16
les
cmc
aaa
test
jl
std
lahf
cld
cmp
out
sub
ljmp
add
mov
repnz
icebp
jg
cld
ss
mov
lods
cmc
pop
mov
outsb
int3
mov
push
or
and
pop
jo
push
push
pop
clc
jg
pop
fistpll
out
lret
lret
lock
xlat
mov
in
cs
cmp
repnz
push
push
dec
lods
jp
divb
dec
jne
les
adc
mov
loopne
mov
mov
aam
mov
dec
dec
inc
int
add
jne
loop
mov
das
cmpsb
js
push
out
scas
xor
dec
mov
leave
pop
ss
lret
dec
fiadds
mov
sub
std
jp
je
sqrtps
dec
mov
paddusw
jbe
into
cmp
scas
xchg
mov
mov
popa
pcmpgtw
lret
pop
sbb
divl
pop
fcmove
outsl
cmp
sub
mov
lods
movsb
pusha
cmpb
or
dec
ds
sbb
sub
lods
dec
dec
sub
bound
sbb
test
pop
loop
out
pop
push
push
movsb
shl
std
aam
icebp
es
mov
cmpsb
push
cmp
push
in
add
mov
adc
sub
sub
sbb
andb
push
add
rcrb
fnstsw
into
fisttps
aam
cmp
jbe
push
push
in
pushf
dec
mov
bound
cltd
and
push
and
leave
add
mov
xor
mov
pop
adc
sbb
jg
into
cltd
adc
jp
mov
dec
mov
pushf
jae
mov
jmp
xor
jg
pop
js
inc
xchg
cmp
jecxz
test
repnz
fxch
inc
mov
cmpsl
xchg
out
sahf
pop
sub
gs
loop
in
movsb
lret
mov
fcmovb
sbb
in
test
cmc
das
or
icebp
or
cwtl
fdivrl
imul
out
inc
out
aaa
xchg
int
cmpsl
aas
loop
icebp
inc
movsl
sub
sarl
inc
cmp
lcall
ds
test
mov
and
cmp
push
sti
lds
mov
hlt
cmpsl
lds
push
sbb
lock
fistps
stos
push
dec
mov
repnz
out
cmp
xor
lret
gs
pusha
pop
test
lods
inc
push
fwait
cmpb
jnp
in
cmp
scas
int
mov
sti
icebp
adc
stc
xor
jno
or
pop
call
and
xchg
dec
jmp
xchg
clc
into
clc
or
ret
add
or
push
add
jmp
pop
ja
popa
pop
push
xchg
jge
adc
cmp
dec
icebp
faddl
lahf
js
cmp
push
faddl
lfs
and
pusha
fnstsw
mov
lods
jae
sbb
jbe
mov
mov
clc
jo
imul
ror
sbb
and
mov
sar
push
add
sub
sbb
lods
or
cmp
dec
pop
ret
jb
xchg
cmp
lret
loopne
into
fidivrs
cmc
sub
cld
data16
movsl
cld
packsswb
pop
xor
push
pop
dec
mov
add
jo
scas
inc
pop
jbe
lds
test
aas
xchg
je
lds
das
jne
pop
mov
scas
xchg
xchg
mov
mov
outsb
dec
jno
mov
popf
mov
outsb
mov
ss
cmp
movsb
dec
popa
jno
mov
lret
dec
fldenv
adc
cmp
ret
cmp
xor
mov
test
or
mov
sbb
jle
movsl
lods
das
or
xchg
fcmovnb
push
aas
push
mov
and
inc
fnsave
outsb
xlat
test
int3
andb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
lcall
lret
cmpsb
enter
adc
icebp
ds
sti
xor
fsts
add
aaa
sarb
jae
xlat
sub
js
lds
mov
test
leave
aam
enter
push
lret
mov
addr16
or
and
jge
dec
pop
repz
add
sbb
dec
test
cmpsl
cmp
pop
outsb
lds
rolb
es
jp
iret
sbb
fwait
xchg
xchg
pop
mov
les
jge
call
cmp
inc
sub
mov
subl
add
push
mov
andb
clc
push
jo
mov
mov
pop
leave
lea
mov
movsl
push
in
dec
cmc
cmp
data16
and
out
into
sbb
pop
lods
jl
cs
ror
movsl
pop
stc
fidivl
imul
add
add
mov
icebp
pop
xchg
mov
shrb
pop
pop
jmp
mov
jecxz
cmp
mov
add
lds
add
call
adc
stc
ret
mov
mov
pusha
rorb
mov
jmp
lock
jge
addr16
xor
in
inc
mov
movsl
clc
xor
std
adc
jo
addr16
jb
or
ret
cmpsl
sub
ljmp
nop
scas
sub
pop
mov
add
mov
sbb
cmp
scas
call
cmpsl
imul
xchg
js
mov
sub
enter
insb
sbb
lods
test
imul
iret
pop
ljmp
cmpsb
push
imul
out
adc
add
into
lock
ret
add
fmuls
out
fidivl
mulb
mov
dec
mov
lret
mov
jo
mov
ret
jmp
xor
jns
xchg
cmp
mov
sbbl
lea
std
add
ret
les
ljmp
arpl
in
mov
in
xchg
sbb
lods
mov
mov
cmp
or
or
outsb
jns
push
hlt
xchg
ds
dec
in
pop
icebp
sbb
jg
lods
inc
out
loope
in
ljmp
fwait
and
jg
jle
sahf
adc
shl
pop
pop
push
lret
pop
lds
inc
imul
xor
fisttpll
lds
pop
or
adc
lods
jle
hlt
scas
xor
jnp
icebp
sbb
int3
mov
push
add
mov
cmp
or
cmp
mov
sbb
adc
shrl
lods
lods
jne
stc
hlt
call
push
push
adc
add
adc
stc
mov
push
popl
out
scas
fcmovbe
adc
sub
loope
gs
pop
scas
loope
sbb
sub
lahf
loop
push
lret
xor
daa
std
es
inc
gs
xchg
lret
scas
negb
in
stc
cmp
in
sahf
pop
lock
fidivs
clc
cmpsl
jmp
jbe
inc
mov
ss
push
lcall
dec
shlb
enter
out
sub
hlt
gs
inc
fnstenv
iret
adc
or
jg
cld
ret
mov
push
daa
imul
push
and
sub
dec
mov
cmp
nop
out
sbb
cmpsb
les
and
xor
daa
mov
fnclex
into
lods
mov
add
inc
pop
rcrb
xchg
jle
scas
pop
pop
sub
jae
outsl
push
test
sahf
xchg
gs
or
push
xchg
repz
and
repz
push
fidivl
pop
xchg
imul
lahf
loop
stos
pop
test
loopne
enter
mov
cli
jg
mov
inc
iret
repz
xorb
hlt
and
adcl
fcoml
fwait
push
jo
loopne
cli
xlat
pop
ja
mov
call
xor
pop
test
mov
sub
jo
addr16
ljmpw
imul
out
ret
cmp
and
inc
adc
sahf
in
mov
loope
sbb
or
ljmp
js
shll
jnp
jne
fs
enter
push
gs
or
ret
out
push
mov
xchg
xlat
push
sahf
iret
inc
pop
mov
mov
mov
inc
lods
xor
movsb
icebp
sarl
sub
leave
and
and
js
xchg
sarb
mov
jo
ja
pop
push
dec
imul
jns
jp
ror
dec
aas
inc
mov
lret
fcomip
fidivrl
cwtl
movsl
pop
fiadds
incl
jecxz
pop
movsl
jp
loope
insb
bound
sbb
cmp
add
sub
jg
lock
mov
xor
inc
addr16
push
or
pop
add
jp
mov
mov
push
loop
adc
outsb
nop
mov
sub
jo
adc
inc
jne
push
mov
shrb
xor
or
nop
jae
jbe
and
repnz
push
dec
loope
repnz
mov
pusha
mov
add
dec
idivl
scas
push
scas
outsl
ret
xchg
push
ss
mov
scas
mov
lret
sub
ret
loope
sub
push
inc
adc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
rcl
nop
cld
pop
shl
iret
pusha
jbe
lods
sbb
scas
sbb
mov
push
ljmp
enter
mov
ret
rcrb
jbe
es
mov
out
pop
mov
push
out
and
in
mov
fisubrs
or
and
pop
xchg
mov
arpl
ljmp
out
pop
adc
addr16
xchg
and
loopne
and
sub
push
cmp
sub
jnp
push
push
lret
push
stos
adc
bound
loope
jge
sub
jae
mov
dec
mov
stos
mov
fisubrl
adc
inc
add
inc
fmull
adc
aad
and
mov
fwait
pushf
jp
add
or
out
push
aas
aam
mov
push
mov
inc
inc
lcall
pop
scas
mov
add
dec
pop
pop
je
mov
sub
scas
jnp
movsl
leave
loop
lock
xor
ss
cmp
leave
xor
or
mov
mov
sbb
adc
push
cmp
mov
in
mov
pop
orb
dec
std
je
out
mov
mov
push
mov
pop
int3
pop
add
iret
lret
lea
dec
sahf
outsl
inc
jae
out
test
or
aas
adc
pop
push
mov
in
cld
xor
xchg
add
jge
fldenv
inc
inc
sbb
mov
or
mov
mov
mov
dec
fwait
mov
fldt
lret
sub
cmp
ret
fcom
fidivrl
imul
sub
xor
sbbl
xchg
mov
adc
and
les
loop
or
add
add
push
hlt
add
pop
xor
xchg
mov
jne
push
xchg
movl
clc
jnp
outsb
xchg
xor
adc
mov
jbe
int3
loop
inc
shlb
hlt
cmp
pop
dec
sbb
jae
bound
sub
or
testb
ja
shrl
and
mov
outsb
pop
js
sub
nop
and
xchg
sub
js
fcomps
lods
js
dec
adc
test
ret
pop
imul
add
xlat
push
sub
gs
or
scas
aam
xchg
fildl
mov
adc
fiaddl
pop
pop
cmc
add
imul
xor
push
bound
add
das
sbb
dec
and
jns
mov
ffreep
shlb
sbb
scas
out
je
popf
cmp
lods
push
jl
lcall
xchg
sar
stos
movsb
dec
jecxz
in
xchg
pop
adc
cmp
sub
cld
insl
loopne
dec
push
xlat
out
adc
ret
adc
rcr
std
mov
or
jb
and
xchg
cmpb
daa
das
mov
sti
inc
dec
mov
lock
cmpsl
fsubl
sbb
sbbb
js
in
lahf
dec
lock
mov
inc
push
clc
mov
mov
mov
lret
jecxz
aas
push
mov
jecxz
rcrl
dec
in
lods
out
lods
sub
aaa
xchg
inc
jmp
push
pop
jae
clc
push
imul
sbb
dec
cmp
icebp
adc
xor
mov
mov
stc
insl
shl
mov
mov
lss
cmp
out
test
insb
clc
mov
mov
pop
push
add
ljmp
jge
adc
out
mov
stos
adc
cs
fucomp
xlat
cmp
ja
lret
jb
out
inc
sub
cmp
jbe
aam
xchg
cli
mov
sub
cmpsl
sbb
repnz
dec
lcall
mov
aas
les
std
cmp
xchg
inc
insl
mov
adc
idiv
add
mov
xchg
mov
hlt
into
pmulhw
popf
in
mov
ljmp
adc
mov
pop
mov
fistpll
and
mov
rorl
iret
xorb
sbb
adc
ljmp
jae
xchg
and
cmpb
scas
mov
mov
arpl
fcompl
inc
arpl
hlt
cld
imul
cmpl
adc
data16
or
mov
out
add
xor
ljmp
xchg
dec
aam
jno
dec
add
negb
or
repz
hlt
xor
mov
push
jno
mov
or
roll
dec
bound
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
testl
jp
jp
aad
push
mov
cld
jmp
fwait
jmp
into
sub
cmc
add
and
incl
mov
or
xchg
rorl
mov
mov
push
inc
daa
or
jp
enter
ds
fimuls
out
and
adc
fdivrl
mov
out
xor
inc
fs
pop
leave
cmp
lret
imul
or
xor
xor
xor
pop
jecxz
dec
pop
cmp
or
mov
divl
jle
dec
sahf
int3
fimuls
aas
fsub
sub
add
fs
loopne
sahf
popf
cwtl
sbb
ja
pop
fsts
gs
sti
test
jecxz
imull
out
or
or
jnp
mov
sbb
and
loop
insl
push
dec
jg
outsl
jo
mov
fwait
xor
ss
out
adcl
call
lock
xchg
mov
jae
sub
add
push
nop
mov
testb
shrb
repz
dec
cmc
aas
je
add
pop
lahf
shrl
test
test
or
pop
fisubs
sbb
adc
cmp
push
jmp
out
jp
sub
push
jl
cmp
xchg
dec
mov
mov
fsubr
mov
add
mov
js
jl
mov
jne
xor
sub
enter
loop
aaa
pop
lcall
jne
adcl
pop
cltd
lret
das
xchg
sbb
ret
lahf
cwtl
jne
xor
pop
sbb
out
jl
and
loop
leave
or
adc
out
dec
cwtl
jb
rcl
mov
mov
cmp
add
add
sbb
or
jb
sbbl
mov
lds
lods
or
inc
out
mov
cmp
nop
scas
inc
and
shrb
mov
leave
in
xor
test
xor
fwait
adc
addr16
outsl
and
lods
cmpsb
outsl
in
lea
loop
or
insl
enter
jecxz
mov
lock
ja
sbb
imul
ja
testl
xor
or
or
jns
ja
fisttps
cld
mov
mov
sbb
add
push
stc
cmp
aas
mov
insl
sub
imul
mov
xchg
adc
imul
lahf
push
pop
ret
in
xlat
imul
adc
mov
sub
adc
pop
pusha
in
dec
add
jl
icebp
insb
sahf
xor
repz
imul
lods
movsb
inc
cltd
mov
loopne
xchg
sub
aad
cmp
sbb
lahf
xchg
mov
cmc
dec
push
dec
mov
in
jl
mov
push
jae
int3
mov
push
xchg
mov
sub
loopne
xlat
outsl
jg
sbb
imul
les
and
sbb
mov
mov
imul
mov
mov
inc
mov
and
in
movl
cmp
mov
add
jo
dec
loop
mov
aaa
xchg
icebp
cmpsl
xchg
and
and
push
std
insb
cmpsl
push
mov
andl
jle
icebp
lahf
loop
incl
lea
adc
jae
cmp
lret
test
add
ret
mov
stos
out
jecxz
mov
jge
imul
lock
gs
push
mov
dec
ss
xor
xor
add
and
stos
dec
aas
ret
jg
je
int
loop
dec
sub
shll
lds
mov
jl
sti
push
aam
popa
lods
pop
push
fwait
sbb
jno
inc
ds
push
xor
mov
shl
push
fistpll
xlat
test
mov
scas
loopne
and
add
scas
add
mov
movb
shr
add
mov
popa
add
push
fildl
xchg
xchg
daa
mov
popa
es
cmp
stos
dec
xchg
mov
pop
cmp
ds
iret
repnz
mov
mov
test
dec
mov
test
adc
sbbl
rcll
sti
dec
mov
sbb
adc
test
mov
and
inc
add
outsb
sbb
movsl
je
fs
out
or
jmp
in
aas
dec
in
push
aas
fs
out
pop
les
loopne
inc
aas
jecxz
cmc
lock
sub
loop
mov
rcrl
clc
divb
adc
iret
dec
lock
mov
repnz
pop
cs
scas
adcb
inc
pushf
push
and
mov
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
adc
mov
add
pop
rcll
faddl
cmp
jnp
mov
pop
lock
inc
rcl
xor
bound
fisubrs
out
mov
push
xor
sub
pop
cmp
sub
icebp
mov
in
loope
fcoml
ja
lret
sbbl
std
adc
daa
or
jne
jecxz
popf
mov
inc
insb
adc
sbb
popf
ds
push
adc
ss
gs
out
jno
lods
ja
cltd
cltd
fistpll
jge
jmp
sub
cld
mov
loop
cs
testl
push
mov
and
mov
push
loop
outsb
and
in
sub
inc
push
jo
xlat
mov
lahf
test
xchg
mov
test
or
in
inc
push
popf
popf
int
pop
push
push
pop
jns
jl
enter
mov
scas
jns
arpl
std
push
shr
mov
or
xchg
fidivl
cmpsl
movsb
jns
mov
lcall
gs
shlb
inc
pop
repz
inc
lret
push
sub
mov
mov
push
lcall
inc
adc
ficoms
push
call
dec
repnz
stos
push
lahf
mov
mov
jecxz
jecxz
pop
pop
int3
sti
xchg
mov
mov
jne
or
test
fldcw
in
or
enter
sti
dec
dec
jne
js
lret
insb
lock
scas
leave
mov
ret
imul
xchg
fidivs
cmc
shll
sub
sarb
clc
shll
js
lret
pop
xorb
in
push
inc
and
mov
out
shrl
aad
lret
int
out
aaa
icebp
pop
xchg
out
repz
shl
fcmovnu
test
fstps
xchg
aam
adc
pushf
mov
incl
sbb
dec
stos
and
mov
lret
sbb
push
dec
inc
sti
popa
push
lret
fidivl
lret
xlat
jg
iret
lea
ficomps
adc
xor
in
or
push
mov
jb
push
aaa
clc
subl
andl
mov
clc
xchg
daa
fidivs
sti
pop
fidivrl
sar
mov
jns
addr16
pop
call
aaa
mov
out
out
aam
dec
and
into
add
jge
data16
xor
lods
sub
push
imul
sbb
pop
or
add
adc
cwtl
in
loope
xor
xchg
js
mov
lcall
add
cmc
ret
cltd
out
dec
notb
test
in
pop
cli
jne
xchg
inc
jo
mov
in
cmp
jne
jae
iret
mov
pop
arpl
sub
push
push
aad
inc
xchg
outsb
pop
sub
and
repnz
and
cmpsl
shll
cmp
aad
xchg
adc
in
push
shll
fcoms
xchg
in
pop
out
fisttpll
jmp
push
adc
in
mov
je
cmp
xorb
mov
sub
cmp
jno
push
movsb
test
sbb
push
fsubl
test
mov
xor
sub
ds
pusha
pop
dec
jne
mov
sub
cmp
sbb
add
in
push
fldl2e
imul
and
xchg
sbb
aam
cmp
xchg
cld
cmp
mov
and
jo
sub
loopne
cmc
lods
and
push
mov
rol
pavgw
sti
sbb
xor
mov
sbb
hlt
sti
push
push
test
add
add
outsl
add
adc
inc
repz
pop
std
mov
sbb
add
pop
sbbb
jg
adc
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
aad
xor
test
insl
jecxz
xchg
mov
sbb
loopne
sahf
cwtl
inc
or
lods
jp
in
scas
popf
sbb
in
shrl
lret
sbb
or
test
push
sbb
mov
mov
xor
lret
mov
in
je
in
and
sarb
fs
push
xchg
jge
jno
into
mov
bound
inc
int3
repnz
jl
mov
add
inc
dec
push
xor
cmc
scas
xchg
mov
jbe
xor
cmp
ss
cli
push
mov
or
hlt
xor
or
xor
fadd
shrb
scas
cmpsl
push
cwtl
stos
xchg
push
sbb
jp
dec
das
movsl
mov
dec
jo
mov
cmpsl
pop
pop
test
lods
int3
mov
dec
and
dec
jne
sbb
aas
sbb
adc
cmp
fs
mov
dec
iret
mov
nop
enter
add
inc
aaa
int3
mov
divb
or
cmp
aad
lods
mov
sub
mov
enter
dec
jbe
and
orb
loopne
sub
or
mov
push
pushf
add
xchg
lahf
cmp
js
cmp
ja
adc
sub
cmp
jae
push
ret
shll
xor
std
cmp
sbb
sub
jno
jnp
scas
outsl
ret
into
mov
adc
push
mov
push
lret
jae
pop
lret
and
mov
aas
je
xor
rclb
clc
lcall
clc
jp
jmp
loopne
add
xchg
mov
sub
ds
mov
mov
mov
mov
push
add
leave
daa
mov
mov
push
leave
xor
sub
add
movsl
push
lods
inc
fs
cmpsl
mov
jno
add
adc
sbb
sub
loopne
inc
rclb
xor
data16
je
int
imul
jno
arpl
push
sub
idivl
sub
rorb
cmp
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
sub
push
mov
pop
push
ljmp
push
pop
rcr
imul
cmp
jns
mov
and
pop
inc
mov
data16
sbb
ror
sbb
movsl
cltd
js
push
sbb
and
pop
fidivl
mov
xchg
push
std
sub
cmc
subl
dec
adc
mov
sbb
mov
lret
js
js
aad
and
mov
imul
pop
sbb
pop
daa
add
clc
xlat
cmpl
sti
insl
mov
fiaddl
mov
std
inc
jge
int
pop
xchg
cmpsl
shrl
add
insl
les
mov
push
mov
imul
inc
dec
sub
mov
aaa
dec
add
mov
xchg
gs
mov
insl
jbe
lret
or
dec
arpl
add
addb
fdivr
adc
daa
lret
push
cmp
aam
mov
mov
sub
ss
cmp
cmpsb
mov
inc
cmpsb
loope
mov
xchg
cwtl
cmp
jecxz
cs
and
in
fstps
andb
inc
inc
cmp
sbbl
in
int
and
orl
pushf
pusha
imull
ret
pop
xor
jmp
stos
sbb
xchg
jnp
add
or
test
push
add
aaa
mov
mov
jmp
push
jb
es
sbb
dec
rcl
loop
dec
and
outsb
ficompl
mov
jne
and
sbb
push
dec
out
lahf
out
mov
testl
rcrb
sbb
lds
scas
test
sbb
leave
add
xor
xchg
dec
xchg
xchg
inc
sub
mov
out
and
xor
pop
push
pop
ja
and
xorb
ret
fbld
or
test
xor
out
mov
inc
mov
test
fwait
shrb
call
push
jl
and
lds
push
clc
push
lock
iret
pop
xor
clc
mov
jl
xor
imul
sbb
or
add
cmp
jae
cmp
adc
jge
sahf
bound
xor
xchg
test
inc
fsubr
jg
jmp
mov
xchg
leave
insb
mov
cmp
and
outsl
lret
sbb
push
push
xchg
xchg
fdivr
sbb
scas
xor
insb
insl
loopne
and
push
push
add
push
cmp
sbb
add
stc
cmp
test
testb
dec
cmovae
jle
shrl
jnp
add
xor
xorb
sub
jno
sub
cmp
xchg
xor
and
nop
inc
enter
push
add
cmpsl
push
mov
popa
lcall
dec
sbb
dec
clc
xlat
scas
inc
data16
xchg
pop
add
jns
pop
sbb
in
int3
inc
xor
add
and
shl
repz
les
and
je
pop
sbb
jmp
and
ficoms
pop
mov
xchg
mov
xchg
lahf
dec
pop
in
sub
mov
fs
inc
add
mov
jb
scas
xchg
push
xchg
xor
roll
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
lret
push
lcall
mov
out
mov
xchg
add
sbb
mov
inc
mov
loop
int
push
aam
mov
mov
mov
js
movsb
fsubrl
jne
jbe
stos
lods
jno
int3
push
dec
repnz
mov
mov
mov
or
mov
es
bound
sbb
lds
mov
daa
fsub
mov
dec
jne
add
sub
aas
sbb
out
cmp
outsl
push
mov
ljmp
aad
out
fdivr
xchg
fildll
in
push
xchg
jnp
mov
mov
adc
mov
aas
fldcw
mov
sub
stos
fs
scas
imul
sbb
jo
inc
out
test
lods
sahf
cltd
hlt
scas
insb
xchg
dec
sti
push
mov
jb
aad
xchg
data16
add
mov
jno
cmp
pop
mov
sbb
imul
mov
lods
addl
scas
xchg
stos
inc
insl
or
jecxz
cmp
inc
lret
call
adc
and
sub
and
jle
sub
jp
movhlps
int
pop
push
xor
lret
insb
push
jecxz
jb
dec
jb
inc
scas
imul
jg
xchg
lods
lret
xchg
mov
jno
cmp
adc
dec
or
mov
pop
jae
mov
xor
xchg
ljmp
cmpl
xor
loop
scas
sbb
xlat
inc
testb
mov
push
test
cltd
mov
mov
xlat
pop
and
fsubl
outsl
sti
push
jg
sahf
rorb
fs
rcll
movb
xlat
mov
hlt
jmp
pop
movsl
fisubrl
gs
fsts
jg
jl
xor
jg
mov
ret
or
cltd
sbb
xcrypt-ofb
cmpsl
test
lret
jae
aam
aad
in
aad
and
fbstp
sub
inc
test
sbb
fs
andl
add
sub
rclb
in
imul
outsb
push
loopne
test
lods
jge
rol
shl
imul
insl
repz
outsb
xchg
test
cmp
dec
sahf
push
cmp
pop
xor
divb
inc
mov
sahf
sub
inc
loop
out
or
fcmovne
aad
insl
cmp
jo
ds
stos
and
add
or
xor
jo
jmp
aam
adc
mov
pushf
stc
lahf
pusha
mov
repnz
loopne
jp
lret
or
outsb
xchg
push
shrl
xor
out
mov
push
into
xor
cmp
clc
fcmovu
push
mov
in
cmp
adc
cmpb
movsb
sbb
mov
xchg
in
outsb
lret
ljmp
fwait
mov
mov
dec
and
push
out
ss
sub
hlt
scas
lahf
dec
mov
aad
mov
mov
test
adc
jmp
or
jmp
scas
xchg
sub
lret
ss
jge
xlat
jmp
pop
jns
xchg
test
sub
pop
add
bound
mov
pop
mov
sbb
cmp
sub
dec
mov
cmp
push
inc
test
stc
imul
sub
and
inc
inc
fisttps
ret
mov
dec
aam
sub
popf
mov
sbb
inc
shl
icebp
push
mov
imul
lea
sub
sub
push
push
dec
ss
ficomps
mov
and
sbb
mov
xchg
dec
roll
push
sbb
jns
fwait
add
movsl
adc
and
or
nop
jae
xlat
push
mov
repnz
xor
in
sub
sbb
popfw
sub
gs
testl
cmp
jno
into
xchg
xor
sbb
out
xchg
shl
jg
call
mov
loop
in
xor
addr16
add
xor
inc
insl
and
or
hlt
lret
jp
xlat
xchg
xlat
push
pop
repnz
xlat
pusha
test
mov
in
cld
in
inc
ja
and
ret
push
pop
ficompl
cld
shrl
inc
xchg
adc
push
fistps
sub
jbe
mov
iret
pop
leave
add
movsl
jne
outsl
mov
push
leave
push
dec
imul
jmp
sbb
xor
iret
xor
pushf
insl
pop
aam
in
adc
lods
mov
int
movsb
pop
imul
outsb
scas
mov
pop
scas
cmp
xchg
outsb
or
pop
jo
loope
adc
xlat
and
pop
int
jge
push
mov
aas
loope
mov
lret
cmp
ja
scas
scas
and
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jb
mov
sarb
notb
xchg
dec
dec
icebp
std
stos
push
push
mov
lret
sbb
xlat
outsb
jo
orb
pop
adc
xor
out
xor
or
adc
mov
stos
rolb
out
jns
mov
push
add
lahf
dec
jp
xor
mov
sti
xlat
jge
das
or
mov
jo
jne
push
cmp
or
dec
or
inc
gs
or
push
xchg
lock
test
adc
adc
jnp
nop
and
dec
in
out
insl
data16
leave
mov
rclb
and
arpl
ljmp
rorb
cmp
mov
hlt
popl
pop
cs
cmp
es
mov
lcall
or
jecxz
lods
and
outsl
mov
int3
pop
movsb
dec
xor
popa
pop
jnp
pushf
push
cmp
ja
inc
mov
inc
lds
movsl
insb
mov
test
mov
mov
out
pop
inc
lods
clc
jb
cmp
push
in
fisttpll
xlat
xchg
push
dec
fwait
mov
xor
mov
sbb
inc
mov
jae
addr16
loop
out
add
lcall
pop
imul
jno
mov
adc
jmp
repnz
pop
fucom
out
mov
jle
gs
pusha
mov
pop
jns
adc
loop
cmc
inc
jae
jns
js
fcmovu
into
push
sbb
cmp
aam
cmp
into
mov
in
jo
rcll
push
jp
mov
push
jle
sarb
lods
sahf
add
movsb
outsl
insl
fadd
cmp
shll
and
inc
mulb
adc
test
mov
push
xlat
sub
add
sbb
fidivrs
and
dec
fwait
stos
mov
mov
mov
adc
xchg
sub
lahf
xor
xchg
iret
inc
push
jno
pusha
cmp
ja
adc
fisttps
loop
mov
sub
mov
leave
cli
lds
mov
mov
xchg
clc
push
scas
jmp
int
mov
xchg
sbb
dec
xchg
popl
dec
incl
adc
lcall
nop
loope
xlat
cmp
pusha
popf
iret
cmp
into
bnd
xor
insb
popa
xchg
int3
sub
mov
push
movsl
clc
or
in
pop
pop
lds
outsb
jo
in
loop
roll
imul
sub
inc
stos
jmp
lret
mov
fcmovnb
test
mov
insl
imul
mov
or
stos
nop
jns
arpl
lock
xchg
ja
pop
aad
adc
rcll
adc
lods
sti
fwait
mov
out
mov
cmp
scas
push
sti
dec
lock
pop
testb
fstps
and
xor
ffree
loop
and
loop
push
push
mov
imul
pop
in
or
cmpb
pop
pop
xor
dec
jmp
pop
push
inc
inc
xchg
insl
fwait
push
stos
ret
out
sahf
js
cmpsl
push
or
xor
push
mov
mov
pop
icebp
xchg
xorl
and
insl
sarb
inc
cmp
inc
mull
jge
fldl2t
jle
mov
loop
push
sti
lods
inc
jecxz
xchg
xchg
pop
loope
pop
fwait
push
mov
add
lret
fnstcw
sub
imul
pop
jmp
ljmp
arpl
in
mov
repnz
push
mov
incl
lret
repnz
cmp
adc
cmpb
adc
dec
mov
jmp
lcall
dec
pop
cwtl
and
aad
add
loop
lcall
mov
push
fiadds
into
dec
stc
dec
and
push
lds
test
lret
cltd
push
outsb
xchg
outsb
ja
in
scas
cmpsl
dec
xor
mov
cltd
int
mov
adc
cmpsl
adc
mov
xorb
inc
loope
push
mov
imull
adc
fwait
jne
cmp
pop
fldl
pop
fidivrl
subl
int3
push
js
fcomip
scas
mov
xor
mov
dec
cmp
pop
shll
mov
loope
adc
mov
pop
in
in
mull
inc
pop
xchg
mov
psraw
stos
xchg
aad
push
sbb
and
idivl
cmc
cli
push
jbe
orb
pop
jne
shlb
es
in
jp
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
inc
sarb
pop
test
out
cmp
mov
dec
faddp
mov
call
push
loope
movhps
insl
jns
sbb
inc
pop
xor
xchg
inc
movsb
loop
stc
dec
les
pop
out
lahf
adc
arpl
inc
jp
das
push
iret
jo
cmp
ss
sub
js
pop
inc
push
jae
ja
jp
ds
js
loope
mov
testb
mov
pop
je
hlt
fdivrl
pop
test
adc
rcrl
xchg
mov
in
into
or
and
mov
sub
std
scas
dec
imul
xchg
mov
js
into
xor
fwait
sub
or
ss
imul
mov
icebp
push
shrb
fdivs
dec
jle
sbb
data16
hlt
jne
push
imul
stos
add
jp
sbb
jge
pop
mov
mov
imul
add
inc
jnp
popf
jno
jg
leave
sub
cwtl
jno
sub
lock
or
sbb
dec
xchg
mov
add
inc
jnp
lods
mov
stos
mov
ja
pop
hlt
mov
add
xlat
popf
insb
pop
ja
push
out
push
movsl
adc
or
rcrb
inc
mov
iret
in
xor
arpl
hlt
lods
sbb
jns
inc
pop
rclb
imul
lcall
add
test
sub
jo
inc
scas
daa
lea
out
das
lcall
jmp
ja
test
fldt
stos
popa
movsl
mov
sahf
arpl
add
push
mov
arpl
cmp
sbb
push
adc
xchg
ja
out
shll
stc
in
fistps
xchg
cmp
jb
bound
loope
sbb
cmc
xchg
mov
jno
dec
xchg
fsts
mov
aam
and
sbb
mov
sbb
fstps
xchg
js
push
arpl
mov
push
mov
sub
mov
popf
xchg
out
add
sbb
and
int
inc
and
outsb
jne
mov
lcall
xor
push
loope
xlat
push
and
ja
cmpsl
sarl
cmp
inc
push
iret
push
xchg
test
out
stos
das
and
out
dec
repnz
in
imul
jne
or
adc
fadd
xchg
pop
pusha
jecxz
jbe
jle
insl
jbe
outsl
cmp
int3
test
in
mov
ljmp
addb
pop
lock
adc
mov
rorb
inc
cmp
mov
imull
enter
xchg
cmp
mov
in
pop
in
cli
mov
dec
movsl
mov
pop
mov
sbb
sahf
std
sub
jmp
xor
sub
and
jge
imul
and
lret
or
and
out
insl
sbb
repz
and
cmp
leave
cmpsb
ret
add
ljmp
sub
js
xor
jae
cmp
pop
iret
jl
jmp
sub
ja
mov
dec
push
fucomp
iret
push
dec
mov
or
sub
ljmp
xor
jp
mov
fisubs
ret
loope
jnp
rdmsr
fidivs
jns
dec
adc
push
cld
mov
push
ljmp
mov
push
out
mov
ljmp
xchg
fstl
inc
mov
mov
pop
jb
mov
dec
or
xchg
push
xchg
ss
xlat
dec
cmp
mov
pop
and
das
lcall
pop
cmpsl
xchg
push
push
aas
xchg
movsb
mov
pop
out
call
pop
fdivl
dec
mov
xor
inc
mov
mov
div
movsb
test
out
push
cs
out
in
jno
cmp
ret
lret
bound
out
imull
fwait
cmpsl
dec
fsubrp
inc
orb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
adc
mov
mov
mov
and
jecxz
adc
addr16
ss
js
leave
and
jg
aas
ret
sub
test
shll
cwtl
mov
aad
in
movsb
shrb
pop
xchg
mov
mov
int3
mov
imul
in
mov
jb
in
clc
cmovne
into
lcall
inc
adc
enter
mov
test
jmp
jmp
adc
shlb
iret
lret
sub
sub
and
xchg
repnz
pushf
scas
movsl
pop
int
push
pop
pushf
inc
mov
adc
fisubrl
jg
or
pop
out
outsb
jb
jno
mov
cmpsl
lds
add
lods
mov
or
call
hlt
imul
stos
ffree
sub
mov
or
pop
in
cmovne
rol
inc
lds
outsl
mov
xorl
pop
jg
shl
aad
mov
arpl
hlt
xchg
push
pop
dec
rorb
ja
xchg
arpl
in
push
cmovp
mov
imul
ret
inc
jae
fstps
ds
imull
adc
xchg
mov
fistpl
js
and
jmp
fsub
xchg
xchg
adc
jle
sbb
es
mov
mov
xchg
xchg
xor
lcall
lds
xchg
mov
fcoms
and
hlt
and
jne
cltd
and
loop
lcall
rol
pop
jae
push
rorb
gs
imul
push
mov
mov
sub
add
pusha
pop
cmp
mov
jl
mov
sub
cwtl
test
jns
clc
push
cli
dec
sbb
mov
ljmp
imul
add
arpl
inc
cmpsl
inc
add
cltd
and
fs
outsl
xor
cmp
insl
into
shlb
repz
rorb
jae
mov
sub
push
mov
jns
test
push
sbb
idivb
pop
call
pop
outsb
test
jne
cwtl
in
mov
jge
shlb
iret
adc
scas
fdivl
ret
xchg
xor
stc
xchg
pop
xor
movsl
jo
sbb
or
sub
or
js
ret
mov
test
push
mov
pop
mov
lods
xchg
cmp
mov
mov
mov
lahf
xchg
dec
sbbl
pop
adc
cmp
test
aaa
pop
out
jb
sbbl
lods
insl
push
imul
push
and
jge
dec
mov
pop
cmp
jl
fmul
add
dec
pop
leave
dec
cmpb
int
push
mov
icebp
mov
mov
loope
pop
pop
ficomps
mov
push
sub
incb
clc
lds
jecxz
adc
adc
fadd
lock
xor
pop
ja
mov
adc
lods
jb
jg
and
movsb
jnp
cld
rorb
jle
fwait
push
cmp
scas
lret
ret
mov
mov
rcrb
roll
aam
and
incb
fisttps
imul
frstor
ret
in
cld
pop
jno
dec
mov
xchg
and
jecxz
dec
pop
cmp
test
cld
cmp
roll
add
fwait
icebp
shlb
mov
ljmp
iret
push
imul
mov
inc
cmp
rclb
imul
imul
or
sarb
shrl
hlt
adc
mov
pop
add
jne
or
push
sti
imul
jae
mov
or
addr16
test
and
or
nop
lahf
in
hlt
mov
push
rcl
mov
xor
mov
rolb
mov
sahf
mov
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
imul
jecxz
in
push
roll
jae
icebp
ja
cmp
les
pop
dec
cs
mov
jne
out
pop
cmp
daa
sbbl
sub
outsb
std
xchg
imul
shrb
mov
divb
and
sarl
jecxz
mov
push
push
cmpsl
mov
xchg
das
je
addr16
fwait
lret
bound
jecxz
jne
out
lods
inc
cmc
shrb
test
xchg
adc
mov
andl
jecxz
popf
pop
xlat
jle
dec
cmpsl
add
dec
jns
xchg
scas
cld
mov
aas
frstor
test
popf
imul
fldcw
sbb
loope
xorb
cmp
adc
loop
pop
dec
xchg
and
jbe
or
and
loopne
push
jae
mov
gs
test
mov
dec
sti
sti
xlat
push
popf
sub
add
xor
add
in
push
inc
sti
jbe
jae
fldenv
mov
jecxz
call
ljmp
les
xchg
xlat
int3
add
dec
xchg
in
cwtl
pushf
lret
js
push
pop
fs
jno
fimull
lcall
pop
das
xchg
inc
idivl
cs
xorb
add
mov
in
fiaddl
pop
jae
push
pop
xchg
scas
and
es
or
dec
nop
loopne
fdivl
xchg
push
ret
sahf
enter
lock
in
popa
and
and
movsb
xchg
shl
stos
xor
pusha
cmp
sarb
aam
movsl
jge
movsl
js
push
mov
sbb
enter
jg
fbld
add
in
and
cwtl
fimull
and
iret
mov
cmp
scas
fiadds
xchg
repz
loope
lods
and
mov
out
lret
mov
lret
rolb
lcall
addr16
shr
cmc
insl
inc
adc
fildll
jb
repnz
incl
mov
and
pop
es
insl
sahf
cltd
add
sbb
cli
mov
nop
push
movsb
adc
leave
push
out
push
enter
fldcw
addr16
popa
loopne
outsb
in
fucomi
mov
repz
enter
sbbl
add
insb
fs
pop
fimuls
xchg
and
test
inc
jecxz
loopne,pt
jmp
std
cmp
or
nop
in
add
or
add
jne
fcoms
out
sub
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sbb
or
shl
or
dec
cmp
loopne
inc
inc
gs
xchg
sub
push
imul
sub
loop
adc
pop
adc
cmp
dec
mov
mov
cli
lcall
adc
out
pop
pop
add
lock
pop
push
cmp
pop
ret
lods
pusha
mov
xchg
lock
std
aam
push
mov
popf
das
adcl
ficoms
rorb
outsl
cmp
add
inc
add
sub
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
rorb
mov
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
or
mov
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
fdivr
loopne
adc
dec
inc
add
add
add
add
add
incb
cmp
inc
inc
push
dec
push
cmp
addr16
and
xor
sub
imul
and
inc
inc
and
xor
sub
jno
popa
insb
imul
or
fildl
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
sub
sub
add
add
adc
add
add
les
pop
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addb
mov
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
jecxz
in
out
jmp
cmc
div
clc
stc
cli
fiaddl
or
add
add
add
add
add
push
mov
orl
inc
and
inc
add
inc
add
inc
add
adc
dec
add
push
inc
adc
push
ss
jb
scas
movsl
je
loope
dec
xchg
pushf
jne
add
test
fsubr
mov
mov
mov
adc
and
cmp
and
cld
ja
mov
push
test
leave
pop
dec
fldenv
aad
mov
jb
mov
inc
add
and
xchg
push
or
cli
mov
inc
jle
lcall
push
add
ja
ljmp
push
add
enter
cmp
pminub
pop
icebp
pop
xorb
jp
aaa
pop
cs
sub
jle
inc
xchg
enter
imul
cmp
mov
or
aad
push
pop
jg
ds
ja
xchg
sub
jbe
sbb
stc
jae
xlat
popa
in
jno
pop
test
sub
jmp
sahf
pushf
xchg
pop
rol
sub
jno
adc
push
inc
pop
adc
inc
add
lds
add
push
inc
pop
adc
inc
add
lcall
lahf
out
add
jp
rolb
push
loop
sub
lds
mov
fsubl
sub
cmpsb
cmp
or
adc
sti
dec
lock
mov
int3
adc
rorb
mov
pushf
pushf
jne
add
addr16
mov
xor
aam
roll
and
or
and
stos
xchg
sahf
jo
iret
sbb
mov
repz
mov
adc
pop
cltd
mov
xchg
clc
mov
dec
rol
ficoml
sar
or
push
jb
fdiv
scas
adc
repnz
cwtl
hlt
jmp
dec
add
xchg
mov
fdivrs
lcall
fsubp
push
loopne
sbb
jns
mov
or
dec
mov
sub
push
push
fildll
xchg
jl
bound
sub
inc
jno
jo
xor
pop
push
repz
lahf
fucomi
jmp
pop
inc
sub
pop
clc
pop
loop
mov
int
pop
cmp
loopne
sbb
scas
test
fsubrl
xchg
sbb
ss
mov
fistpl
cmp
inc
xor
loopne
lds
stos
add
mov
inc
mov
pop
in
sub
sub
sbb
inc
sbb
and
jge
dec
les
das
stos
loop
lahf
inc
sar
add
xor
std
cmp
pop
cmp
popf
pop
jb
gs
cs
jmp
inc
jge
push
jg
jl
aas
mov
shrb
pop
test
pusha
mov
adc
jmp
and
int
rol
orl
cld
jmp
iret
mov
icebp
insl
jmp
push
dec
push
mov
cmc
adc
sahf
out
dec
aam
sbb
cmp
cmpsl
push
lahf
sbb
imul
scas
shrb
ret
fstpl
dec
and
fisttpl
aas
and
scas
cli
shrb
mov
iret
ret
add
ret
cmp
cmp
out
int
aas
sti
aaa
clc
xor
sahf
push
fildll
fldenv
mov
pop
pop
cmp
lock
mov
cmp
and
iret
push
sar
jp
xchg
popf
aam
and
out
into
lods
and
pushf
mov
divb
js
loop
mov
inc
inc
jo
jg
inc
push
inc
sbb
pop
incl
shrb
lret
loopne
ret
push
and
ljmp
lret
add
and
mov
jbe
cmpb
imul
cmp
pop
pop
insl
push
mov
lahf
xchg
pop
xchg
sub
jle
jle
mov
lahf
xchg
pop
xchg
sub
daa
in
in
inc
add
in
in
jp
inc
or
push
stc
push
sar
jp
add
jle
mov
out
add
add
inc
add
adc
fiadds
pushf
mov
test
ss
cmpsb
enter
sbb
sbb
mov
lea
sbbb
stos
mov
pop
out
lds
cmp
lret
jmp
rclb
cmp
sub
pop
jg
shll
fisubrs
xlat
daa
icebp
cmp
mov
fs
sub
and
ds
popf
push
imul
xor
mov
sbb
push
mov
aam
loope
mov
xor
pop
jp
mov
les
fmuls
loop
enter
cmp
jb
and
je
and
xchg
xchg
aas
sub
mov
pop
ret
pushf
jno
xchg
popa
repnz
sub
cmp
icebp
inc
sub
mov
jne
leave
sbb
movsb
icebp
enter
test
call
push
mov
adc
add
jno
lahf
incb
lods
pop
dec
neg
addr16
cmp
ja,pn
jge
aam
js
push
xchg
or
jo
add
inc
jns
cmp
aas
mov
mov
mov
jge
xor
lods
and
xchg
lods
mov
and
inc
dec
insl
outsb
rorb
hlt
jmp
mov
ret
daa
and
sbb
aam
je
popa
mov
push
push
push
dec
outsl
xor
lret
mov
dec
inc
sbb
pushf
jle
pop
in
in
mov
push
add
sub
loope
push
sub
cmp
dec
xor
xchg
loopne
push
pop
clc
rol
sbb
inc
push
jl
pop
push
mov
pop
test
in
fnclex
xor
nop
mov
sbb
sbb
popa
incl
nop
jmp
std
jp
push
jmp
sbb
and
xchg
lds
xchg
jecxz
mov
inc
adc
stos
pop
notl
repnz
test
jne
pop
enter
push
les
mov
loop
fsub
add
out
add
mov
movsl
scas
push
ret
jg
pop
lret
dec
mov
jb
aaa
lret
rorl
in
shll
out
fwait
xchg
mov
fists
jmp
pop
pop
in
cmp
mov
test
add
cmpsb
clc
vpmaxub
dec
cmp
movsb
dec
add
stos
incl
sub
push
jecxz
shl
mov
push
int3
ljmp
pop
pop
dec
test
outsl
fs
lock
andb
xchg
lahf
jo
adcb
stc
cmc
cld
stos
out
mov
inc
mov
push
mov
xorb
mov
fcmovnbe
jge
cmp
lock
test
insb
inc
push
movb
clc
push
out
xchg
mov
shr
in
jb
lods
xlat
stos
repz
aad
sub
cmp
and
push
pop
add
cmp
or
iret
dec
sub
add
jp
inc
adc
push
jp
inc
add
inc
add
out
adc
inc
add
dec
inc
or
dec
inc
or
mov
cmp
inc
adc
push
sub
sub
mov
test
roll
jns
jp
fcomi
pushf
clc
nop
insb
ret
ret
shl
push
jb
leave
mov
lods
inc
enter
sbb
sbb
mov
push
sbb
lods
push
lret
push
jp
popf
push
or
out
lea
sub
iret
cmp
bound
movl
sti
dec
sbb
imul
xlat
ret
cli
jb
cmc
cmp
lcall
jo
imull
out
popf
cmp
jb
bsf
aam
inc
dec
mov
call
dec
xor
aaa
pusha
setno
imul
inc
jle
jmp
cmp
inc
push
lock
fisubrs
adc
jp
pop
sbb
movsl
sbb
stos
xchg
jge
mov
mov
movsl
mov
clc
dec
je
push
push
xor
push
sbb
stos
ljmpw
mov
push
cmpsl
clc
xchg
loop
repnz
push
or
xchg
and
in
loope
imul
pushf
jmp
mov
adc
jb
jl
xor
mov
inc
mov
pop
jecxz
data16
and
jl
dec
pop
jle
push
popf
dec
pop
mov
lock
mov
jg
movsl
out
mov
inc
and
sbb
in
adc
mov
inc
fidivrs
cmp
fstpt
incl
sub
ljmp
mov
add
add
mov
mov
mov
test
in
pop
icebp
cld
test
sbb
push
push
pop
jp
add
xchg
rcrl
adc
inc
aad
dec
gs
lea
inc
sub
push
and
jno
dec
xor
loop
pushf
mov
xchg
sbb
jae
inc
mov
cmp
ds
push
test
lock
add
push
cmp
call
push
fidivrl
and
jecxz
push
mov
mov
incl
rclb
dec
jecxz
clc
xchg
xchg
shrl
adc
outsb
int3
cmpsl
and
out
aas
clc
dec
in
mov
and
pop
ret
cmpsl
jb
lret
mov
addr16
scas
seta
cs
loope
inc
mov
test
sbb
loope
sbb
mov
sbb
loop
call
cmp
imul
jbe
push
stc
lret
dec
sbb
pushf
jb
mov
out
dec
adc
push
out
dec
test
push
mov
push
test
jo
stos
mov
fstpt
xchg
mov
jbe
icebp
ljmp
stc
or
lds
pop
adc
cmp
pop
loope
cli
jge
xchg
mov
mov
jbe
xchg
outsb
jnp
add
xchg
repnz
scas
push
pop
imul
pop
es
pop
mov
mov
xor
in
sbb
cmp
cmp
mov
or
cltd
cmc
dec
adc
inc
repnz
ss
cli
cmc
nop
incl
call
mov
adc
pop
mov
and
xchg
pop
sub
xor
cmp
push
sbb
sub
insl
shrb
cmp
xchg
xchg
pop
xchg
mov
xor
imul
inc
xor
jns
fstp
push
inc
sub
sub
mov
sub
sub
mov
sub
movsl
mov
xchg
add
dec
ret
mov
inc
add
lahf
in
not
lret
push
jecxz
jae
add
adc
lds
pop
inc
repz
jne
xchg
lods
mov
mov
cs
enter
push
andl
dec
inc
imul
pop
jae
in
enter
sub
cmpl
mov
jg
fidivrs
iret
nop
lods
and
arpl
xchg
into
repnz
mov
movsl
fs
mov
push
rol
push
test
addr16
xchg
pop
adc
pop
clc
ja
shl
push
sbb
or
xchg
add
and
cltd
cmc
outsl
sbb
fildll
push
test
dec
mov
add
in
add
jmp
sbb
sub
push
sbb
sti
xor
mov
mov
mov
repz
and
and
lcall
mov
cwtl
lret
sahf
sti
sbb
lods
push
cmp
aam
jne
bound
xor
push
stos
xchg
adc
mov
inc
jge
repnz
cmp
daa
daa
xor
imul
mov
add
cmc
or
pop
jl
lea
jb
adc
adc
test
lret
mov
out
pushf
aaa
push
xchg
fstpl
test
sbb
mov
movb
mov
daa
pop
cmp
add
out
mov
in
hlt
or
cld
test
leave
and
mov
cmp
mov
cmp
add
pop
jo
xor
jp
push
pop
sbb
push
inc
lahf
ret
fwait
mov
dec
lret
cltd
or
mov
cli
jne
lahf
dec
push
jg
mov
outsl
or
scas
ror
daa
lcall
fstps
leave
xchg
leave
iret
scas
add
jl
mov
imul
pop
pop
hlt
fwait
cmpb
mov
adc
adcl
das
outsb
cmc
cmp
add
inc
loop
loopne
test
ja
insl
mov
inc
mov
xchg
and
inc
pop
mull
jno
jp
or
shrl
movsb
loop
jg
jp
lea
xlat
std
push
and
xor
cmp
mov
lahf
rolb
lds
mov
outsl
bound
enter
inc
scas
push
xchg
les
outsb
xor
cmc
pop
in
mov
out
and
clc
push
mov
mov
xchg
pop
xchg
xor
popa
out
movsb
cmpsb
filds
mov
clc
incl
test
cmp
xor
push
movsb
divps
xchg
jl
lock
scas
ret
mov
lods
stos
lret
cmp
cld
mov
popf
incl
icebp
out
lock
xor
lock
mov
cmc
and
jmp
and
cmp
jg
mov
cld
js
mov
and
xchg
lods
xchg
xor
xchg
push
out
cmp
aad
hlt
cmpsl
adc
push
cmpsl
sbb
ja
mov
pop
imul
sbb
mov
push
pop
lds
push
call
les
inc
icebp
stos
pop
imul
icebp
out
lahf
in
jne
ja
imul
jns
add
fucomip
lds
mov
sbb
test
sub
test
icebp
and
aas
rclb
inc
out
or
pop
lcall
push
or
add
inc
loope
icebp
stos
or
sub
lds
fldln2
dec
lcall
add
mov
sbb
sbb
rolb
inc
adc
add
sub
sahf
mov
push
rclb
add
xchg
test
mov
sub
adc
data16
pop
pop
dec
movsb
scas
shrl
in
add
rolb
sahf
aad
sub
leave
cmpsb
mov
jmp
sbb
std
rcrb
out
cmp
test
rcl
mov
lcall
sar
lahf
into
mov
cmp
sbb
aas
loope
jge
out
cltd
lahf
sub
mov
imull
jne
adc
jae
xor
cmovae
add
lret
into
pop
jmp
aam
enter
pop
movsl
aas
pop
mov
xor
testl
pop
mov
or
loope
jg
pop
xor
push
movsb
lods
jge
dec
inc
xor
das
pop
sub
xchg
aas
movsl
insb
fldt
push
stc
xchg
sub
mov
sub
cltd
cmpsb
jns
outsb
aas
das
push
out
incl
xlat
xor
shlb
jge
xchg
test
push
out
js
or
sub
jmp
negl
lods
int
jne
pop
adc
add
mov
sub
mov
gs
mov
ret
in
pop
je
aam
mov
leave
lds
sub
pop
out
mov
jno
shlb
jnp
jmpw
scas
lods
cld
dec
cmpsl
cmp
pop
inc
and
enter
cmpb
and
adc
sub
pop
xchg
cmp
sbb
pop
mov
incl
pop
js
inc
dec
pop
int3
repz
loope
cmpsl
lods
ljmp
inc
mov
xor
add
lods
cmp
xchg
mov
adc
cmp
std
pusha
jae
cld
mov
xor
inc
enter
xchg
sub
inc
repnz
movsl
imul
lock
sbbb
js
std
cmp
out
insl
ds
sbb
ds
loop
popa
testl
jg
mov
jecxz
mov
dec
int
mov
imul
lds
insl
ja
xor
sbb
imul
call
sbbl
daa
adc
lds
pop
repnz
jecxz
mov
icebp
mov
lods
sub
mov
out
pop
ljmp
pushf
dec
fwait
pop
inc
push
ror
mov
out
in
cmpb
push
inc
mov
cltd
pop
sub
pop
push
xchg
popf
ja
push
pop
int3
addr16
mov
lcall
pop
dec
ficompl
out
xor
lods
iret
mov
out
xchg
sbb
insb
and
ret
scas
jecxz
mov
out
adc
int3
mov
push
pusha
ds
sub
or
jno
mov
sahf
sbb
int3
jae
sub
cmp
xchg
inc
cmp
mov
sub
xor
jl
mov
roll
lds
mov
fisubs
push
jnp
test
or
hlt
idivb
into
mov
push
stos
or
out
mov
aaa
lret
and
imul
sub
sub
push
incl
cmp
mov
inc
inc
push
mov
sub
daa
sbb
mov
cltd
les
or
push
adcb
adc
and
loop
inc
fistpl
mov
or
cmpsl
fidivrs
adc
or
push
int3
xor
incl
psllq
mov
scas
pop
in
jge
dec
cmp
lahf
lock
xchg
int3
mov
repnz
aam
cmp
add
cmc
and
int3
incl
lahf
push
mov
mov
bound
jmp
sets
leave
pop
std
jle
xchg
jb
sub
jl
inc
mov
jno
loopne
cmpsl
mov
fildll
test
pop
mov
mov
xlat
imul
push
xor
sar
or
shrl
test
mov
xor
pop
aas
fidivrs
add
add
jb
cwtl
int
inc
push
js
push
mov
fnsave
cmp
lods
aaa
push
mov
dec
jno
push
xor
int
adc
test
inc
and
loopne
jne
jnp
fldt
jae
scas
jae
fcomi
pop
leave
popa
pop
in
jae
jno
and
push
inc
in
pop
push
pop
insb
in
xor
cwtl
fcoml
repz
cmp
jae
mov
pushf
push
sub
fisubrs
int3
outsl
mov
mov
imul
jnp
add
xor
xor
push
int
cltd
and
or
addr16
popa
pop
sarb
cwtl
stos
mov
out
jle
pop
in
je
movsl
arpl
sar
mov
fs
lock
leave
movsb
cmp
pop
sbb
jg
lock
jae
push
mov
imul
int3
cmc
in
and
xor
lock
pop
data16
dec
js
cld
sub
dec
cmp
cmpsl
adc
ret
lods
xchg
jnp
pop
clc
and
jae
incl
ficompl
sub
int3
xchg
loopne
inc
mov
int
stos
sbb
aam
jmp
out
push
cmp
imul
sbb
mov
test
subb
push
add
push
xchg
or
pop
add
mov
mov
test
cmp
lea
push
ljmp
ljmp
jb
jl
mov
idiv
aad
in
dec
lods
fdivrs
ret
lods
je
dec
stos
fsub
jb
jmp
mov
je
xchg
loopne
pop
cmc
js
shl
imul
push
jle
sti
or
jp
push
xchg
lock
mov
jbe
and
icebp
insb
mov
repnz
and
scas
mov
cmpsb
xchg
jp
xchg
lahf
cmpsb
popa
mov
mov
popl
out
mov
dec
cltd
imul
push
stos
xor
jb
dec
cltd
jecxz,pt
cld
pop
scas
cmp
lods
add
pushf
sbb
lret
sub
bound
xchg
xchg
xchg
adcb
sub
mov
sub
scas
jnp
sahf
and
pop
lock
loopne
xchg
push
pop
arpl
mov
inc
dec
push
imul
aas
jmp
divl
je
repnz
xchg
mov
pop
fcomps
xor
sahf
sub
lods
pusha
out
xchg
fldt
add
fdivl
lock
je
sti
adc
jg
mov
in
fs
inc
arpl
mov
xor
subl
inc
fdivl
ds
cmp
cmp
inc
scas
iret
stos
jns,pt
jge
and
in
fs
mov
icebp
in
imul
sub
enter
mov
sarl
push
fldcw
sbb
jb
imul
jo
jo
dec
ja
jno
mov
js
fbstp
dec
in
mov
jmp
arpl
jns
xor
jo
mov
andl
loopne
jbe
aas
dec
call
xchg
jbe
repnz
sbb
xlat
jb
inc
in
insl
xchg
cld
dec
js
outsb
stos
mov
xlat
cmp
nop
or
mov
cs
idiv
addb
xchg
inc
mov
divb
jle
out
stos
xchg
jns
adc
pop
push
andl
je
fsts
xchg
pop
xor
and
pop
ret
push
repz
imulb
jbe
jnp
mov
mov
push
test
ds
mov
xlat
push
and
jnp
test
pop
mov
jns
and
push
les
ja
push
mov
inc
push
je
data16
cmp
mov
test
gs
push
fwait
mov
mov
pop
aas
lock
shll
movsb
add
mov
xor
mov
rcrb
jge
stos
mov
icebp
adc
push
jp
scas
xor
jno
iret
xchg
jno
into
outsb
jmp
push
into
in
jnp
inc
scas
inc
pop
lock
inc
lods
ss
sbb
popa
or
sub
lds
jmp
shlb
mov
pop
movsl
cmp
lcall
shll
fdiv
outsl
ret
jp
push
aad
inc
repz
pop
pop
mov
mov
sub
jne
xor
push
mov
sbb
ret
jp
sub
adc
mov
divl
xor
incl
lods
xlat
xor
lea
xchg
arpl
rcrl
dec
dec
int
jg
push
bound
dec
repnz
jns
movsl
mov
nop
jp
add
stos
shll
cmp
test
scas
cmpsb
jl
icebp
push
lods
je
into
sub
jmp
les
cld
sub
sbbb
jns
xchg
sahf
cmc
into
push
adc
sarb
mov
sti
in
add
aaa
sahf
out
mov
mov
xchg
xchg
and
mov
push
cmp
mov
xchg
add
cmp
add
ficoml
imul
xchg
ja
outsb
xor
std
jnp
xchg
xchg
sbb
add
mov
push
cwtl
inc
and
mov
aam
mov
push
mov
test
push
cmp
outsb
jl
loop
sbb
pop
push
in
cmp
jge
cmp
imul
inc
aad
xlat
je
cmp
jae
lret
cmp
cld
cmpsl
mov
xchg
inc
cmpsl
sbb
pop
cmc
negl
in
jecxz
scas
js
out
xchg
pop
rcrb
and
cmc
fdivrs
cld
push
aas
xor
xchg
bound
xchg
idivb
test
xor
aad
dec
scas
scas
cmp
sub
push
cmp
push
inc
push
repz
sbbb
and
push
leave
mov
cmp
repnz
sub
hlt
add
xor
punpckhdq
jnp
cwtl
mov
cmp
imul
adc
bound
dec
into
out
cli
or
pop
push
imul
aas
xor
rol
jb
mov
sbb
dec
and
cmpsl
dec
lock
cltd
addr16
mov
pop
or
push
leave
incl
add
xchg
shll
xor
scas
shll
cld
jg
insl
mov
dec
inc
jno
aas
inc
cmp
les
ljmp
aas
adc
std
mov
and
pop
mov
cmp
jg
jo
outsl
mov
cltd
aas
xor
xchg
pop
mov
mov
mov
dec
inc
push
rcrl
and
or
sarl
bound
pop
push
pop
fs
les
inc
sar
push
les
addl
push
mov
lock
jae
dec
insb
mov
jecxz
enter
push
insl
ret
lret
jno
push
jg
jmp
ja
and
xor
out
test
fwait
jb
pop
orb
addb
pop
outsl
and
xor
xor
jg
out
mov
mov
xlat
movsl
dec
test
sbb
jg
pushf
ja
jmp
dec
fwait
sub
dec
in
mov
daa
mov
adc
in
enter
sbb
mov
push
and
sbb
sub
js
or
sbb
sub
xchg
scas
fbld
movsl
adc
cmpsl
mov
sbb
sub
cmc
incl
cmp
lods
insb
lds
inc
iret
negl
imul
addr16
bnd
mov
stc
inc
cmp
pusha
add
mov
xchg
les
sbb
add
mov
push
xchg
mov
hlt
or
mov
pop
les
jge
xor
sbb
push
cld
sub
sbb
mov
mov
daa
and
mov
adc
ljmp
xor
or
xchg
pop
pop
int
jbe
adc
out
cmp
mov
orb
iret
loope
mov
loop
sti
mov
ret
mov
mov
in
mov
inc
sbb
push
pop
add
push
stos
into
sub
jecxz
scas
pop
adc
mov
jmp
add
lock
movsb
cmp
mov
xchg
sub
out
sti
jo
pushf
lods
addr16
clc
xchg
loopew
and
ret
inc
shll
push
mov
inc
test
in
test
mov
adc
pop
icebp
or
dec
mov
mov
push
mov
add
arpl
cld
scas
enter
test
pop
cmpsl
mov
insl
stos
jmp
aas
fistpl
and
pop
push
aam
xor
aad
xchg
adc
gs
fsubrl
inc
pusha
jae
push
dec
jnp
mov
clc
in
push
test
pop
ds
push
push
in
sub
inc
cld
cmp
fcmovnu
std
push
movsb
push
loopne
notb
sbb
movsl
iret
les
ret
pop
addb
mov
fistps
mov
fwait
push
aad
insl
dec
cmp
pop
fmul
xor
ret
mov
sbb
inc
add
fwait
loope
cltd
xor
rcr
ss
sbb
inc
dec
sbb
loop
movsl
es
jbe
jno
xor
out
xchg
xchg
stos
sub
xor
mov
pop
mov
out
aam
fcompl
mov
dec
ja
jae
cli
cmp
jnp
ror
data16
and
imul
ficoms
dec
mov
adc
pop
cmc
repnz
or
push
cmp
push
xchg
mov
jmp
gs
add
inc
jb
xor
pushf
adc
push
mov
int3
pop
jae
mov
aad
xchg
cmp
in
es
loopne
and
cld
jle
lods
xor
test
jnp
repz
int
fwait
cld
inc
xchg
xor
mov
icebp
xor
les
cmpsl
in
in
iret
sbb
ljmp
add
push
sub
lcall
insl
xchg
sbb
call
xchg
xchg
push
into
cmp
out
mov
mov
fmull
test
push
sub
or
jne
mov
and
or
dec
repz
adcb
sub
cmp
icebp
push
pop
clc
and
sahf
mov
inc
incl
jge
lock
nop
cmp
sti
ret
mov
out
icebp
scas
stos
ds
arpl
push
inc
cmp
sub
aas
adc
add
bound
int3
divb
add
xor
sbb
jge
iret
sbb
jg
jmp
into
call
fdivr
add
stos
dec
nop
mov
sbb
pop
mov
fnsave
out
sbb
or
sub
cmpsl
js
sahf
mov
and
pop
fdivrl
jb
dec
paddq
cli
xlat
jg
loope
add
mov
repz
or
inc
pop
test
cli
shl
jge
jo
aas
test
sbb
scas
arpl
jno
aam
and
push
jp
out
push
jl
jmp
cmc
lods
popf
ds
mov
sbb
out
inc
pop
les
out
xchg
pop
int3
bound
lods
mov
push
add
stc
movsl
xor
jecxz
push
push
fdivl
test
out
mov
popf
pusha
xchg
leave
sbb
mov
push
das
dec
xchg
sbb
movsb
or
stos
mov
pusha
inc
add
pop
mov
dec
cmpsb
adc
sarl
xor
xchg
and
jne
notl
cmp
cmp
xlat
cmp
lods
pop
pop
sbb
dec
add
int3
imul
pop
pop
mov
into
jbe
or
dec
jl
outsb
out
idivl
sub
mov
xchg
inc
dec
push
add
shrb
shrb
scas
cs
add
icebp
cltd
sbb
sbb
nop
sub
cli
mov
data16
xchg
sub
mov
out
pop
xor
insl
out
jl
loopew
xor
gs
mov
sbb
pop
xlat
jae
in
dec
addr16
mov
sub
cs
xor
fnstcw
mov
cmp
aad
xchg
test
dec
jecxz
push
jge
pop
jns
xor
xor
nop
mov
jmp
nop
ds
insl
data16
or
orb
lock
loopne
mov
lods
lods
cmp
ds
xchg
lret
adc
js
sub
mov
and
imul
pop
or
jg
fiadds
dec
outsl
sub
sbb
mov
repz
sahf
orb
lahf
mov
js
inc
clc
insl
lock
je
or
lods
in
push
lret
pusha
dec
and
nop
mov
cltd
iret
fidivrs
pushf
and
adc
lcall
insl
pop
movsb
cmpsl
es
jg
popf
daa
cmp
loope
xchg
push
cmp
in
movb
stc
pop
idivl
sbb
insb
insl
out
cmp
arpl
sbb
mov
inc
jb
jne
cmp
cmp
into
jno
and
sarb
cmpb
adc
mov
adc
pop
imul
or
cmpb
stos
push
mov
adc
mov
inc
sub
sub
inc
bound
mov
or
lahf
and
dec
or
lcall
pop
or
out
mov
stos
cmp
and
inc
and
dec
mov
into
icebp
jns
mov
out
push
pop
test
dec
dec
shll
fiaddl
adc
sarb
addr16
scas
fnstsw
and
shll
in
lds
arpl
jecxz
mov
adc
push
jb
xor
cmp
push
addb
mov
mov
mov
pop
les
mov
adc
iret
les
insl
js
xor
sbb
ret
les
repz
int
inc
test
jmp
out
xchg
and
iret
mov
loopne
int3
dec
and
mov
dec
in
xor
and
pop
jnp
popa
lea
mov
xor
loopne
stos
int3
jo
xchg
mov
cmpsb
mov
cs
push
filds
inc
iret
mov
adc
mov
inc
fmuls
push
inc
xlat
pop
dec
mov
xchg
adc
xor
ds
mov
mov
clc
mov
ss
pop
mov
xchg
neg
sub
sarb
adc
inc
inc
out
mov
and
push
int
push
pop
aas
lcall
mov
clc
mov
sarb
mov
imul
mov
cwtl
incl
cmc
incl
cmp
cmpsb
shr
sub
or
xor
test
pop
mov
lret
mul
pop
icebp
lods
xor
scas
rorl
dec
push
mov
imul
sti
loopne
test
lahf
test
sbb
arpl
mov
fst
mov
leave
testl
inc
sbb
xlat
mov
jmp
das
enter
dec
mov
and
sub
add
sahf
xchg
push
jp
add
test
jns
mov
pop
lods
ds
dec
cmp
scas
xchg
jl
lds
sarb
aas
lods
jge
icebp
fisubs
outsl
or
ret
out
lods
ror
sub
bnd
aas
xlat
or
sahf
jno
mov
aas
xchg
in
loopne
add
dec
push
add
inc
stc
xchg
pop
pop
and
cltd
je
mov
push
test
ljmp
pusha
mov
jne
mov
out
mov
xchg
inc
into
cmp
jb
ljmp
popf
ret
dec
jo
sub
pushf
incl
xor
lock
aas
icebp
cmp
mov
inc
rorb
xchg
mov
addb
aas
imul
mov
cli
jne
sahf
into
popa
not
sbb
add
in
popa
and
push
jnp
movsl
pop
clc
push
or
or
daa
lock
jne
xor
mov
add
add
aam
xor
idivb
ffree
sub
fsts
ss
insl
stc
mov
jl
add
pop
fs
push
cli
jbe
je
push
sarl
scas
lcall
out
xlat
sbbl
add
out
mov
dec
jae
xchg
call
jae
imulb
sub
mov
into
sub
inc
sub
xor
je
cmpsb
ja
adc
in
jle
pushf
insl
shl
test
inc
movsl
in
pop
mov
inc
xchg
mov
outsb
js
xor
scas
lahf
cld
jge
pop
clc
and
out
data16
push
pop
cs
sub
pop
in
jecxz
fsubrl
fidivrl
or
ljmp
or
jae
loop
lret
cld
or
fsin
xor
sarl
jbe
xchg
es
insl
xor
or
es
mov
or
push
jmp
pop
testb
xchg
aam
mov
aas
mov
ret
pop
lock
push
xchg
fwait
popf
xchg
arpl
push
adc
idiv
icebp
cmp
sub
ret
ja
dec
icebp
lds
adc
or
aad
and
pop
push
or
pop
and
jle
pop
clc
ss
in
pop
push
mov
mov
test
xchg
mov
sub
sub
jecxz
daa
scas
sub
incb
cmc
mov
and
in
push
movsb
cli
movb
insl
mov
add
jge
out
bound
jmp
pop
mov
add
lcall
pop
add
mov
nop
lods
mov
aas
in
loopne
imul
cmpsl
push
fidivrs
sub
leave
pop
fs
repz
mov
mov
mov
es
mov
bound
mov
ficomps
and
adc
adc
push
and
push
and
enter
fsubs
and
jecxz
out
out
out
xlat
sub
cmp
sub
xor
xor
mov
repz
in
sub
or
dec
fdivr
xchg
loop
xchg
and
subb
in
add
push
push
mov
js
xchg
mov
mov
out
pop
sbb
xor
dec
adc
mov
pop
int3
xlat
mov
arpl
jae
mov
jp
pop
dec
into
popf
rcrl
inc
hlt
lods
lea
or
or
fistpll
insb
jle
movsb
fstl
ja
pop
sub
cld
jg
mov
fstpt
xchg
or
push
outsb
aas
inc
scas
xchg
ret
lret
fwait
inc
fstps
mov
sub
adc
inc
das
ficoms
xor
mov
gs
cmp
sbb
jo
bound
popf
lret
pop
repz
add
lret
fcoms
adc
mov
jg
xchg
add
jmp
aas
pop
sub
fucom
fwait
shll
addl
lcall
or
add
testb
xor
out
stos
cmp
icebp
cmpsl
mov
fnstenv
jae
jae
add
scas
popf
int
stos
jge
pop
add
push
xchg
and
fsts
adc
mov
mov
outsl
lods
fstpt
pushf
mov
push
mov
mov
pusha
jbe
pop
sub
cmpsl
scas
jne
dec
xor
lods
rcl
mov
xchg
rcrl
aas
nop
add
cmp
mov
mov
fs
jmp
in
insb
sbb
xorb
out
jmp
incl
lea
pop
pop
arpl
loope
je
cmp
jg
pop
mov
and
dec
xchg
pushf
out
fdivrs
mov
nop
paddq
loop
leave
ja
fcmovnu
icebp
jmp
adc
mov
clc
xchg
and
ret
bound
add
into
jns
std
and
stos
xlat
mov
push
inc
push
lahf
das
and
leave
adc
mov
pop
aas
mov
incl
addr16
sarb
movsl
inc
and
pop
movsb
jnp
pop
outsl
test
and
mov
xchg
pop
out
adc
and
fidivrl
insb
insb
cmp
xor
rol
add
sbb
imul
iret
push
fisttpl
movsb
mov
jbe
cld
cld
ret
adc
mov
mulb
pushf
pop
iret
mov
repnz
sti
cmp
xor
jb
lods
js
mov
fstpl
cmp
mov
adcl
jg
jl
sub
fisubrl
fldt
jmp
xor
sbbl
xchg
outsl
sub
xor
sbb
scas
mov
ds
loope
sub
pop
filds
xor
mov
aad
jnp
movsb
pushf
xchg
adc
xchg
dec
orb
and
push
pushf
frstor
jl
or
jae
clc
pop
loope
sub
ficompl
pushf
popf
inc
jge
in
sub
xor
mov
lret
mov
xorb
mov
push
jmp
mov
cmpsl
pop
mov
lds
xor
orb
sar
jb
jle
dec
add
inc
aam
dec
inc
jnp
das
sub
mov
scas
or
add
pusha
inc
popa
lcall
fs
lea
sbb
adc
mov
shl
fistps
out
add
gs
mov
xchg
adc
inc
jecxz
fsts
cs
lods
and
jne
mov
pop
jg
pop
in
mov
mov
sbb
sbbb
and
push
movsl
add
and
jne
test
outsb
cmp
mov
push
addr16
push
ss
sbb
push
icebp
add
mov
outsb
scas
xchg
mov
sbb
push
push
cld
sub
js
out
mov
dec
mov
mov
mov
add
pusha
mov
shr
cltd
ds
ds
mov
mov
arpl
sarl
mov
mov
dec
cmp
or
cmp
daa
aas
cmpsl
pop
or
pop
js
insl
sti
aaa
push
xchg
dec
subl
jns
rclb
inc
add
js
rorl
ror
or
jmp
js
ret
pop
aas
mov
lahf
adc
lcall
mov
sbbl
insl
addr16
mov
aad
aas
xchg
xchg
mov
mov
mov
loop
jne
sti
cmp
pop
insl
cltd
aas
aad
jns
out
jb
mov
push
scas
mov
jge
and
mov
mov
fiaddl
sub
dec
mov
pop
xchg
mov
sbb
scas
ds
icebp
scas
lea
dec
push
fisubl
adc
test
add
hlt
incl
or
mov
jl
rcl
test
inc
lea
daa
ret
mov
cmp
dec
cmpsb
mov
mov
cli
jp
cwtl
scas
sub
or
mov
or
or
idivb
es
mov
inc
je
sub
into
lahf
incl
or
in
adc
imul
pop
ret
aas
test
pushf
fwait
push
out
iret
outsb
insl
and
xchg
cli
and
jle
jmp
cwtl
lret
push
jb
mov
in
ljmp
cmpsw
and
xchg
jge,pt
pop
shrb
mov
stc
cmp
mov
mov
stos
and
adc
sub
mov
add
mov
jno
icebp
pop
and
dec
sarl
aam
rclb
jo
xor
mov
xor
add
int3
jae
xchg
in
js
cmc
stos
int
shl
movsl
jle
jbe
jl
sub
negl
popf
xchg
push
shl
dec
popa
in
jle
sbb
cli
sbb
rcrb
dec
insb
out
mov
movsl
jns
aam
add
jns
add
mov
sbb
xchg
pop
and
cld
inc
mov
sbb
imul
cmp
loopne
xor
and
pop
add
js
pop
push
pusha
jl
outsb
push
inc
add
dec
mov
push
popf
add
stos
inc
scas
jbe
add
into
mov
dec
jecxz
jns
scas
jp
xchg
mov
dec
fucom
nop
pop
sahf
mov
cmc
dec
les
movsb
xchg
sbb
add
shrb
in
test
ret
add
stc
aam
inc
mov
lcall
xor
sar
add
ljmp
pop
pop
cmc
lret
sbb
jns
mov
push
scas
ja
and
jecxz
lods
sbb
pop
xchg
add
dec
push
aad
inc
or
pop
scas
xor
inc
pushf
cmc
enter
or
flds
aas
movsl
jb
cs
and
daa
sbbl
and
jae
mov
jl
sbb
push
ss
sarb
mov
fldcw
pop
mov
xchg
lret
mov
mov
or
dec
push
dec
incl
pop
aad
or
cmp
dec
shrl
sbb
adc
and
orl
leave
and
or
inc
add
aaa
out
fs
cli
sbb
ds
in
js
iret
nop
inc
rorl
loopne
mov
repz
aas
cmp
loopne
cmc
push
arpl
ljmp
xor
test
jg
sti
div
sbb
daa
fs
cmp
ficoml
cmp
sahf
jns
jle
jns
jno
mov
cld
sub
es
add
push
fwait
insb
notl
adc
lret
jge
loop
jg
clc
imulb
adc
in
mov
das
mov
mov
ret
inc
insl
sbb
out
out
or
mov
addr16
adc
xchg
sti
mov
mov
sarl
pop
mov
ficompl
movsb
dec
push
jmp
lea
jb
add
sub
jae
aas
cmpsl
cmpb
clc
mov
push
adc
mov
loope
mov
mov
inc
aam
pop
sti
pop
test
js
push
and
out
cmp
inc
pop
inc
dec
or
jae
iret
int
mov
cli
movsb
pop
jp
push
jl
sahf
dec
outsb
dec
mov
and
jl
mov
sbb
fistpl
lods
pop
ret
sbb
into
and
bound
xchg
jnp
xchg
pop
fsubl
int
push
ja
pop
les
insl
push
fbstp
les
stc
sub
cmp
pop
outsl
xorb
jmp
popf
aaa
pop
mov
pushf
inc
xchg
inc
push
addb
jbe
inc
inc
sub
dec
inc
xchg
cmp
lahf
jp
adcb
or
sarl
xlat
pop
aam
in
insb
hlt
mov
cmp
dec
scas
xor
mov
stos
movsb
jb
popf
testb
mov
jecxz
jl
loop
stos
or
dec
dec
adc
adcl
dec
aam
sub
lods
pusha
jl
pop
mov
insb
xchg
rcr
ret
jmp
stos
jl
xchg
fstpl
cmp
xor
int
push
cld
push
mov
lock
dec
jbe
sub
sub
stos
inc
imul
cltd
mov
jmp
push
mov
js
adc
push
push
xlat
scas
into
repz
xor
sub
mov
sbb
mov
jmp
mov
mov
pop
mov
or
rorb
pop
repz
std
inc
add
jl
mov
xor
mov
jne
fdivr
loopne
sub
fsubrp
cltd
pop
repz
mov
xlat
lcall
in
scas
push
ret
fidivl
sub
or
adc
out
icebp
mov
add
jns
outsb
popa
lcall
ja
cmp
mov
in
test
clc
push
pop
push
and
pop
push
add
scas
mov
push
dec
add
aas
iret
dec
sub
add
sub
cmp
mov
push
je
incl
mov
test
arpl
cltd
or
out
sub
push
je
cli
xchg
sbb
dec
dec
je
or
push
hlt
int
es
sbbb
pushf
lret
ret
xchg
add
jg
clc
cld
ljmp
xor
inc
mov
pop
fucomi
lahf
jmp
pop
mov
xor
in
mov
into
out
in
cld
incl
xchg
jl
and
pushf
fcompl
hlt
in
sbb
xlat
cmpsb
dec
inc
add
jno
push
cmp
mov
jae
js
in
std
aas
sbb
outsb
or
xchg
scas
xor
mov
inc
por
add
mov
adc
mov
leave
fidivl
push
sbb
fs
adc
or
mov
pop
in
in
stc
pop
lret
mov
pop
in
out
clc
in
jl
xchg
popa
or
ret
orl
jo
mov
cltd
test
xchg
mov
fcoms
stc
sar
mov
dec
push
pusha
mov
push
sahf
sbb
pop
push
and
cli
push
aas
dec
loop
shlb
data16
lret
ret
cmp
cmp
pusha
arpl
fmull
sub
hlt
test
mov
xchg
clc
jle
cmpsl
sub
movsb
mov
fldenv
out
cwtl
lods
lea
ficomps
ror
add
in
xor
or
mov
inc
mov
adc
push
cmpb
dec
popf
cmpsl
and
jns
pop
xchg
dec
in
dec
add
repz
xchg
sahf
dec
add
mov
ds
loope
dec
push
mov
push
jns
push
rcll
incl
add
xchg
cld
cmp
xchg
sarb
shll
cli
sbb
xor
out
fnstcw
lcall
push
std
in
inc
dec
mov
pop
lahf
fnstcw
inc
mov
and
jne
mov
mov
rcrl
dec
cld
dec
movsl
jmp
or
fs
push
pop
nop
test
movsb
xchg
sub
pop
and
inc
mov
pop
mov
push
ffreep
lods
adc
cmp
iret
cmpsl
ficompl
push
push
imul
sub
inc
add
push
xor
mov
gs
leave
fisttpl
into
xchg
loope
add
outsb
aad
cmp
cs
out
addr16
fs
add
shlb
mov
and
add
xor
jg
cmp
and
insb
xchg
mov
insl
adc
mov
or
xchg
pushf
push
in
repz
rclb
test
adc
lock
xlat
xchg
adc
xor
jae
sub
push
xchg
imul
sbb
dec
inc
pop
adc
lret
fstl
cmp
push
inc
jbe
mov
popf
lea
fwait
push
mov
jp
pop
sub
xchg
inc
pop
mov
sbb
rcrb
scas
divb
mov
mov
mov
xor
push
push
mov
pop
rcrl
lcall
out
add
dec
push
mov
loope
into
out
jb
scas
push
sar
xor
jno
or
dec
lock
outsb
lds
insb
arpl
push
sbb
dec
xor
shr
cmp
loop
sub
movsl
out
xchg
not
xchg
call
fisttpll
ds
push
popf
ja
push
enter
scas
inc
jo
les
js
add
jbe
inc
mov
incl
push
aad
gs
addr16
push
dec
popf
xchg
pop
outsl
cltd
xchg
inc
mov
xor
and
pop
jg
pop
jmp
jmp
xchg
mov
mov
cmp
xchg
mov
sub
add
dec
mov
stc
push
and
cltd
cmpsb
jmp
ds
jecxz
lods
fistpl
outsl
jge
psrad
ljmp
pushf
push
cs
adc
dec
aam
rcr
xchg
sbb
clc
popf
jl
aam
cmpsl
ret
push
into
dec
lods
mov
in
and
dec
mov
pop
inc
ljmp
add
fsubrl
fbld
mov
stos
add
cltd
scas
jae
lahf
mov
or
in
imulb
loopne
int
jl
mov
je
mov
jecxz
pop
clc
imul
add
fisttpll
out
or
sbb
sub
mov
inc
jae
lock
pop
push
icebp
jbe
loopne
sub
inc
lock
std
fldt
xchg
xchg
mov
fmuls
loope
xchg
push
mov
xchg
leave
xchg
push
mov
loope
in
aas
sahf
imul
fmul
loopne
jmp
pop
inc
or
pushf
mov
int
add
cli
xlat
fmuls
mov
ja
mov
mov
sub
loopne
mov
add
mov
incl
cmp
sub
mov
ds
and
jg
dec
test
leave
sets
in
ljmp
mov
mov
fidivrs
and
popf
jle
lret
adc
test
push
roll
jl
icebp
mul
push
movl
lret
stc
gs
sub
out
fistpl
cmc
repz
xchg
sbb
jnp
mov
repnz
in
out
dec
stos
push
adc
les
js
pop
aam
repz
pop
ficompl
in
pop
push
aaa
add
scas
cmpsl
ret
sbb
mov
sar
sbb
pop
out
push
mov
scas
xor
scas
add
leave
aad
mov
xor
bound
jmp
or
sbb
mov
jbe
sub
pop
fstpt
cli
sbb
sub
mov
sbbl
xlat
pop
sub
jl
sub
jl
cli
mov
es
ja
js
fstp
cltd
add
incl
pop
in
das
jae
lret
and
xchg
hlt
cmp
in
xor
mov
in
sbb
bound
aas
sarb
stos
adc
pop
xchg
push
cmp
mov
jne
mov
add
stc
push
jmp
sbbl
out
sbb
out
aas
ret
cmpsl
fnstenv
jb,pt
sarl
loop
shrl
nop
add
xor
push
mov
dec
lret
nop
dec
nopl
adc
pop
into
mov
movsl
push
pop
inc
gs
mov
fiadds
cltd
dec
cli
push
adc
pushf
jne
xor
pop
ret
push
mov
and
xchg
xchg
push
add
faddl
mov
or
gs
popf
imul
repnz
shl
dec
out
or
pop
cmp
push
cwtl
xor
pusha
cmp
in
jnp
outsl
or
lock
je
push
lea
loope
jbe
xchg
aad
test
aaa
cmpsb
jae
mov
data16
lods
push
out
mov
add
aaa
pop
fs
std
movl
test
bnd
sub
in
jae
js
gs
out
jge
inc
icebp
dec
lahf
loop
inc
mov
dec
push
pop
push
fs
mov
ror
cs
sbb
out
sahf
jp
sbb
xchg
push
jne
pop
xor
test
shrb
add
add
cmc
push
cmp
pushf
loopne
pop
loop
clc
inc
scas
push
incl
push
push
aam
mov
sub
jecxz
pop
cmp
into
add
cmpsl
nop
out
cmpsb
xchg
unpcklps
in
gs
imul
sti
pop
pop
jbe
jnp
test
lods
dec
js
les
mov
lods
notl
or
xor
arpl
outsb
jnp
dec
and
or
add
and
sbb
inc
sti
mov
das
iret
inc
jo
mov
jp
imul
call
mov
or
xchg
pop
adc
in
ljmp
jecxz
mov
pop
cwtl
je
sbb
enter
mov
xchg
cli
add
hlt
in
out
pop
lock
or
jb
or
cmpsb
cmpsl
outsl
loop
arpl
incl
adc
loop
jle
es
inc
push
cltd
xor
in
mov
rolb
lods
mov
mov
mov
sbb
and
lahf
outsl
int3
inc
jecxz
jae
out
pop
sbb
mov
jnp
sub
int
sub
aas
lea
mov
lcall
xchg
stos
roll
or
incb
xchg
mov
sbb
lock
mov
loop
lahf
and
stc
xchg
iret
cmp
push
cld
iret
xlat
ds
idivl
add
sarl
mov
mov
pop
mov
xchg
adc
out
fldl
cwtl
cld
and
stc
jl
movsl
inc
mov
andl
and
push
dec
jecxz
dec
xchg
jb
lahf
xchg
stos
js
pop
mov
cmp
fidivl
testb
rolb
jo
push
int3
add
and
sub
cmc
mov
sahf
popf
or
shll
icebp
cmc
in
pop
cmc
cmp
jecxz
jge
loope
lea
pop
sbb
movsb
fnstsw
loope
adc
or
popa
mov
je
inc
ja
mov
lret
mov
xchg
inc
dec
jecxz
jnp
mov
inc
xchg
leave
out
pop
aaa
fcomi
scas
mov
sub
inc
mov
sbb
jg
or
add
movb
xorb
iret
add
std
lcall
or
xor
mov
aad
loopne
into
mov
pop
ret
push
push
in
sahf
mov
aas
or
fisttps
fldt
aaa
dec
stos
mov
incl
dec
ret
rclb
inc
and
fwait
insl
mov
adc
inc
push
orb
add
sub
add
lods
jg
clc
push
lds
into
fwait
jnp
js
push
cmpsl
aam
push
out
pop
adc
cvtps2pd
lods
fwait
pop
mov
sub
notl
into
xchg
dec
js
add
lcall
add
scas
in
js
scas
ret
sub
in
mov
pop
sbb
cmc
adc
xchg
xorb
jb
pop
adc
pop
ja
sub
hlt
js
dec
imul
cmp
loope
adc
outsl
and
inc
xchg
mov
test
xor
ss
and
adc
jno
scas
xor
cmpb
std
insl
mov
incl
pop
mov
mov
in
xchg
sete
or
mov
je
idivb
js
cmp
lret
mov
in
filds
pop
adc
and
imul
sbb
outsl
inc
cmp
jns
cmp
incl
insl
push
push
dec
add
jne
mov
out
mov
mov
cmp
sbb
inc
aaa
sub
jnp
push
arpl
bound
or
loopne
cmpsl
rep
popf
and
sbb
xor
xchg
jae
movsl
inc
fcmovu
std
jp
cmp
xchg
pushf
addr16
push
xchg
out
ds
push
fistpl
add
or
cmp
nop
aas
mulb
lahf
fisttpl
stc
pop
dec
sarb
or
pop
jbe
jge
and
lods
jno
or
sbb
jp
mov
ds
notb
ficoms
cmc
iret
inc
sub
mov
dec
push
mov
sbb
mov
pushf
mov
adc
aam
and
xorb
and
or
push
push
sbb
sbb
mov
fcmovbe
pop
and
ds
mov
mov
cmp
or
mov
popl
sti
jle
xchg
ds
or
in
rcrb
jb
jp
and
mov
lcall
arpl
lret
ret
cmp
scas
xchg
jne
adc
loopne
int
sbb
push
fistps
cmpsl
mov
call
pavgw
dec
lret
inc
pop
sbb
inc
out
mov
aad
fwait
adc
iret
pop
lock
hlt
xchg
dec
outsb
xchg
jp
mov
cs
mov
fcomps
sbb
test
leave
stc
cmpl
adc
cmpsb
lea
adc
in
test
pavgb
mov
roll
xor
sub
or
add
jno
and
dec
les
pop
ss
ja
xor
jge
mov
mov
jmp
jmp
mov
lahf
mov
mull
js
les
xchg
in
fldt
pop
scas
mov
jp
ds
mov
sub
mov
ljmp
jbe
dec
push
mov
pop
mov
sbb
incl
push
enter
test
pop
loope
sbbl
ror
jne
jno
out
mov
pop
push
cmp
dec
cmc
and
fimull
test
fcomps
and
stos
dec
outsl
loope
xor
lahf
push
mov
and
lahf
ss
adc
bound
loop
insl
and
xchg
scas
ss
scas
pop
pop
cmp
out
out
insl
sbb
and
add
cmp
add
cmp
jl
repnz
push
clc
in
fidivrl
dec
repz
pop
ret
mov
lods
mov
arpl
jbe
pop
lea
xchg
push
cmpb
and
mov
add
aam
xchg
loop
lret
or
xor
jge
xlat
fidivrs
and
add
cmpb
punpckhbw
ds
insl
mov
or
or
fimull
jnp
aam
pop
jno
ret
lods
cmp
xchg
stos
cmp
out
add
add
push
add
push
add
addl
jg
mov
push
inc
adc
push
inc
adc
push
inc
sub
arpl
mov
test
movsb
inc
in
fdivr
imul
xor
sub
xor
cld
cltd
loopne
scas
push
push
jbe
adc
xchg
out
cli
push
iret
xchg
repnz
jae
dec
lret
jnp
ret
jle
cld
sub
mov
mov
idivl
push
insl
aas
xchg
jbe
xchg
ss
cmpsl
aam
ret
jecxz
jmp
test
mov
xchg
mov
mov
xor
rcll
add
stc
push
cmpb
lahf
mov
add
jo
xchg
cmp
in
pop
das
outsl
jne
mov
sub
jae
sahf
cwtl
aas
xchg
jbe
insl
int3
pop
jbe
sbb
inc
sbb
pop
testl
dec
mov
in
fs
nop/reserved
sub
iret
icebp
fs
mov
shrl
xor
rcl
cld
xchg
cli
push
int3
jle
mov
dec
movsl
adc
push
pushf
sbb
iret
jecxz
push
cmpsb
sub
dec
mov
push
push
push
sbb
sbb
mov
pop
lret
sbb
ss
loope
enter
cli
jle
mov
xor
mov
mov
xchg
addb
adc
stos
arpl
into
pushf
mov
add
pusha
mov
sbb
call
sub
and
add
sbb
pop
shlb
jbe
sbb
leave
in
jge
cmp
xchg
sub
xchg
mov
fcoml
pop
andb
fmull
test
mov
iret
push
and
sti
xlat
imul
ljmp
call
push
pop
xor
xchg
and
mov
adc
jno
jmp
pop
pop
dec
sub
cmpsl
and
jne
lret
ret
adc
int3
nop
test
inc
add
imulb
adc
pop
push
fs
leave
scas
ja
icebp
xor
mov
xchg
js
sbb
sub
jl
ljmp
inc
rcrb
out
push
into
push
hlt
lods
xchg
sti
cmp
andb
stos
js
imul
or
ret
les
xchg
dec
pop
cmp
outsb
mov
lcall
jne
rcll
sahf
popf
movsl
stos
dec
sbb
or
add
adc
lea
xorb
jae
jmp
jle
insl
ja
shl
push
dec
add
ret
imull
push
icebp
mulb
lcall
fmuls
hlt
lock
movsl
pop
fidivrl
mov
les
inc
out
inc
imul
clc
loop
das
outsb
loop
sub
lret
dec
ret
cmpsl
cmp
sub
imul
call
or
arpl
sahf
in
ficomps
lock
cmpsl
xchg
sub
loop
mov
test
inc
nopl
ds
push
jp
sub
mov
inc
jno
or
sub
cmp
movsl
test
ljmp
mov
jg
xchg
add
adc
adc
pop
sub
ja
addl
inc
or
or
sbbl
lds
pop
test
dec
mov
lods
jp
adc
pop
gs
xchg
test
fwait
loopne
mov
int3
adc
mov
cli
ja
jns
xchg
jecxz
mov
and
and
sbbb
sti
jmp
sbb
repnz
fisubrl
cld
jnp
leave
outsl
test
and
mov
add
add
insl
xor
inc
mov
scas
lds
jl
and
in
sarb
xchg
mov
gs
jae
mov
insl
sbb
mov
loopne
mov
jae
loop
sub
hlt
enter
xchg
inc
out
mov
add
push
clc
pop
pop
pusha
mov
pushf
mov
pop
outsb
imul
xor
fsubl
inc
outsl
int3
push
test
push
jnp
inc
mov
inc
sbb
cmpsb
pop
sarb
pushf
repnz
cmp
mov
pop
xchg
loope
cmp
ljmp
imul
ret
jo
sbb
icebp
out
adc
sbb
pop
pop
pop
xchg
sbb
inc
aas
lods
inc
movsb
or
push
or
push
xor
lods
cmp
insl
aam
pop
lcall
inc
shrl
in
sub
out
push
stos
in
int3
jle
mov
dec
fucom
rorb
sbb
dec
sahf
push
add
fisttpl
aam
imul
xchg
fisubl
mov
jo
test
ds
push
jp
cwtl
jge
pushf
ds
jae
insl
add
fs
arpl
xor
int
xor
jb
movnti
cmp
mov
jae
stos
and
sbb
adc
arpl
arpl
sbb
flds
mov
mov
dec
loop
adc
push
testb
lahf
push
sub
int
mov
jns
arpl
xchg
push
popf
popf
dec
adc
push
mov
das
idivb
nop
ss
popl
xlat
fdivr
dec
lea
pop
inc
imul
add
imul
push
adc
cmc
xchg
jo
mov
jmp
popf
ja
mov
adc
inc
je
add
xor
sub
pop
arpl
push
xor
stos
sarb
fisubrl
xor
push
or
shll
in
inc
adc
mov
orb
mov
lahf
inc
add
push
inc
adc
push
inc
adc
push
inc
inc
lods
adc
add
push
inc
xchg
ss
int3
cmpsl
mov
xor
mov
sbb
fwait
test
cwtl
push
xchg
push
sub
xchg
lcall
loopne
adcl
and
jp
int3
mov
or
in
sar
out
cwtl
push
xchg
insl
push
xchg
fwait
mov
push
stos
int
cmp
jle
mov
bound
push
xbegin
jle
ret
jno
jp
arpl
push
mov
sub
flds
stos
ja
mov
std
lcall
xchg
popf
xlat
mov
sarl
dec
mov
dec
xchg
add
mov
sub
pop
mov
push
xchg
mov
inc
inc
mov
movsl
in
inc
or
call
lods
jo
mov
mov
xor
test
movsl
add
bound
stos
mov
push
cmpsl
push
scas
and
xchg
loop
mov
lcall
cmc
cmpsl
enter
iret
cmp
flds
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
incb
cmp
inc
inc
push
dec
push
cmp
addr16
and
xor
sub
imul
and
inc
inc
and
xor
sub
jno
popa
insb
imul
or
fildl
inc
add
add
add
add
add
add
add
add
or
pop
push
or
or
or
or
or
push
adc
or
adc
adc
adc
pop
sbb
adc
adc
inc
add
add
add
add
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
add
or
mov
mov
add
add
adc
add
add
les
pop
add
add
add
add
add
or
inc
add
add
add
add
add
jge
add
add
add
push
adc
pop
and
xor
inc
mov
adc
xor
orb
push
pop
sbb
sbb
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
and
push
adc
pop
popa
jno
and
orl
mov
or
xor
adc
push
and
loope
icebp
pop
sbb
sbb
daa
sub
sub
cmp
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
addr16
jne
ja
jns
addb
mov
xchg
xchg
cwtl
cltd
lcall
test
stos
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
jecxz
in
out
jmp
cmc
div
clc
stc
cli
fiaddl
or
add
add
add
add
add
push
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
call
lahf
inc
add
movsl
pop
addr16
sahf
mov
or
jp
sub
add
jge
push
add
lret
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
mov
pop
inc
mov
adc
imul
mov
xorb
outsl
incl
dec
out
push
push
incl
xor
lock
jl
stc
sbb
pop
and
in
bound
adc
pop
mov
sbb
jg
sub
xor
add
clc
imul
pop
adc
jg
out
jns
incl
pop
cmp
pop
dec
inc
inc
xchg
sub
out
inc
mov
inc
adc
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
dec
loop
sub
or
or
add
das
pop
cld
pusha
lock
ret
jnp
aas
mov
cmp
fstpl
push
pop
das
icebp
xchg
imulb
jl
jno
xchg
jge
aas
lahf
in
add
mov
pop
jns
xor
idiv
repnz
ja
imul
rorl
fistpl
aas
insb
out
adc
cmova
sti
push
incl
xchg
leave
pop
popf
jno
add
lret
incl
mov
subb
cld
push
jns
popf
arpl
aam
sti
divl
das
cmc
scas
dec
dec
inc
int
arpl
add
fucomi
incb
stc
aas
jns
push
cmp
ss
jl
sti
iret
out
movsl
jae
and
cs
fcomip
sar
jnp
jne
dec
repnz
sahf
dec
das
addr16
xor
aas
sbb
lcall
fcomps
inc
out
icebp
and
incl
bound
mull
mov
sub
int
and
fwait
cld
iret
imulb
inc
and
jp
xchg
cmp
mov
sarb
mov
sbb
xor
repz
jae
daa
in
cmc
jecxz
pop
lret
dec
pusha
fprem
adc
aaa
fisubl
mov
notl
mov
aas
jns
xor
lock
in
shl
movhps
ljmp
mov
incl
jg
cld
sub
hlt
jge
dec
icebp
push
popf
sbb
jg
das
sub
daa
lcall
ficomps
in
out
int3
scas
repz
dec
adc
aaa
aad
mov
xor
stc
loop
std
hlt
aas
sub
xor
int3
inc
and
adc
or
mov
scas
mov
cmpsb
clc
lcall
imul
incl
push
incl
add
lea
dec
pushf
enter
lods
inc
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
nop
rolb
and
lea
mov
fldl
lock
or
ljmp
shl
jle
cwtl
jge
out
idiv
jae
dec
fisttpl
negb
add
aam
mov
in
incl
jae
sub
aam
repz
jg
adc
xor
mov
xchg
jb
pop
fdivrl
ret
fildll
lcall
rorl
pop
jl
mov
jbe
insl
cmpsl
fcompl
out
testl
in
in
popa
scas
and
jle
adc
test
in
sti
aas
andl
data16
mov
jp
mov
pop
je
jbe
in
adc
cmp
imul
fsin
sti
enter
sub
subl
incl
mov
incb
and
xchg
test
mov
pop
fists
gs
mov
int
mov
xchg
daa
mov
inc
sar
xor
xchg
dec
xchg
out
mov
jmp
mov
jecxz
pop
jle
repz
or
pop
cld
sbb
out
dec
rcrl
sti
push
ret
out
xchg
std
out
push
mov
imul
addr16
repz
xchg
push
jl
fs
jmp
dec
loope
jns
repnz
fbstp
pop
pop
incl
mov
xchg
sbb
out
out
aas
mov
add
sbb
in
out
outsb
arpl
rcrb
test
sti
lahf
mov
and
adc
imul
std
test
dec
jg
incl
hlt
into
aas
sahf
mov
testl
aam
pop
mov
cld
lahf
repnz
xchg
in
add
cli
lret
lds
call
int3
mov
mov
pop
fiadds
mov
repnz
pop
mov
in
shl
les
add
fcompl
dec
jl
daa
popf
adc
aas
cltd
push
lret
xchg
sub
pushf
repz
sbb
ds
mov
jge
pop
es
lcall
push
cld
or
out
lods
jl
icebp
sbb
jbe
fimuls
aaa
int3
stc
sbb
sarb
pop
sub
pop
test
cmc
fstl
out
in
jp
fisubrl
pop
sar
jg
sub
movsl
push
xor
test
int3
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
addr16
stc
mov
scas
clc
incl
outsl
lock
inc
mov
push
scas
jno
jnp
test
add
call
arpl
and
add
pop
mov
add
jns
fstpl
cmp
push
push
vpaddusw
lahf
jnp
pop
jle
incl
mov
addr16
aam
movsl
or
fisttpll
xor
and
repnz
or
repnz
clc
mov
or
pop
mov
jns
int3
sti
fwait
fwait
in
repnz
fsubp
loop
push
std
jnp
and
ds
test
mov
movsl
les
insb
lahf
clc
incl
jp
sub
lock
scas
out
imul
lcall
decb
lahf
in
icebp
pop
aaa
daa
out
jl
incl
imull
std
sahf
fcompp
cli
incl
sti
ljmp
incl
xchg
fwait
sub
jle
lock
cmpsl
insl
loop
sti
sbb
ljmp
push
movsb
jl
clc
pop
sub
jmp
sbb
in
js
mov
add
repnz
aaa
lret
test
add
xlat
mov
fwait
iret
stc
sbb
add
push
mov
or
or
add
push
jnp
addr16
dec
lahf
out
mov
ljmp
add
lahf
in
push
pop
addr16
ds
es
cs
mov
int
push
fsubrl
add
aas
fdivrl
add
push
fdivr
shll
mov
adc
jg
cli
mov
lret
dec
sti
arpl
leave
pop
sarl
xor
pop
jecxz
sbb
cld
lret
stos
mov
push
jbe
sti
aas
jl
or
adc
adc
daa
xchg
imul
scas
arpl
pop
imul
mov
inc
mov
sub
stc
ds
jg
repz
inc
loopne
add
vpaddw
xor
cmp
sti
aas
out
push
cld
mov
outsl
sti
ljmp
jg
mov
fidivrl
and
fnstsw
mov
push
adc
inc
xlat
popa
lock
or
in
icebp
sti
jge
pop
out
and
mov
xchg
jle
mov
inc
pop
push
xchg
lock
adc
jl
jns
aaa
imull
sarb
jmp
jb
xchg
mul
ja
icebp
out
fs
incl
jnp
xor
daa
ret
sub
pop
pop
jmp
jmp
adc
enter
push
out
aaa
cmc
popl
out
insl
cld
int
es
mov
js
pop
pop
sahf
pop
clc
pop
fiadds
scas
rorb
mov
or
pop
push
inc
dec
cmp
push
aaa
stos
jl
push
incl
in
das
xor
pop
cli
sbb
pop
jmp
mov
pop
cli
inc
pop
out
das
icebp
jecxz
mov
and
mov
push
je
imul
in
mov
loop
loope
mov
into
cli
dec
pop
ret
stos
pop
ret
cmp
iret
incl
fldcw
incl
in
lea
pop
dec
testb
inc
es
cmpsl
mov
ds
sub
cld
imul
repnz
mov
jl
cld
clts
mov
pushf
mov
pop
ret
jg
sbb
enter
fisubrs
adc
clc
sarb
jmp
push
push
push
mov
and
fimull
sti
sbb
xchg
jns
cmp
inc
adc
mov
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
jp
add
push
inc
mov
loope
lock
int
std
and
out
cmpsl
dec
mov
incl
xlat
push
incl
or
jae
xor
stc
aas
imulb
icebp
lahf
imulb
cltd
movsl
jmp
mov
mov
mov
add
fst
push
mov
and
aas
out
aaa
out
jp
hlt
mov
in
loop
lds
into
jp
xchg
dec
aas
sarb
lods
adc
adc
xchg
out
out
popf
jecxz
idivb
pop
inc
pop
inc
out
mov
jb
out
xchg
lret
std
int
lret
clc
push
cmp
mov
sti
aad
fstps
xor
and
mov
clc
adc
lret
xchg
lret
iret
sbb
fwait
jo
cmp
iret
loopne
lahf
lock
rep
aas
icebp
adcl
dec
bnd
aas
cld
hlt
fistps
push
and
sti
leave
cmp
sti
mov
imul
xor
cld
fldl
incl
push
cli
hlt
prefetchw
or
fcompl
sbb
incl
clc
adc
xor
icebp
sub
leave
push
sbb
dec
lahf
cmp
jle
cld
jmp
xor
lock
repz
out
pop
push
cs
jb
mov
xchg
aas
addr16
std
incl
stc
jmp
das
into
incl
mov
lahf
arpl
out
imul
jp
cmc
or
mov
fdivrl
out
aas
mov
push
xchg
icebp
iret
ret
pop
push
add
incl
lcall
inc
jne
mov
idivl
jg
xchg
les
incl
pop
lcall
dec
in
xchg
jg
sub
ds
xchg
push
icebp
dec
test
jge
imul
mov
mov
mov
jbe
test
das
outsl
out
jge
pop
loope
add
stos
repnz
jl
outsb
pop
push
jp
cmc
dec
or
imul
negl
in
mov
jg
pop
or
imul
icebp
out
lahf
leave
mov
repnz
scas
insl
mov
pop
sbb
out
aam
movsl
mov
or
jmp
and
pop
stos
cmp
test
xchg
in
push
mov
gs
addr16
xor
push
xchg
rorl
pmaxub
mov
jecxz
in
mov
mov
add
xor
cmpl
cmp
adc
sbb
test
ljmp
std
subl
das
scas
das
adc
mov
xchg
mov
cmp
xor
mov
aaa
fstpl
sti
idiv
add
test
push
or
and
mov
adc
out
clc
or
cmpsl
pop
lret
icebp
xchg
jns
jge
jns
mov
lods
pop
dec
xchg
dec
sbb
ljmp
cld
lahf
es
lret
repz
pop
xchg
stos
xchg
test
push
mov
enter
daa
and
lret
dec
mov
jge
sbb
xchg
repz
mov
shll
xchg
aaa
fisubl
popf
ror
xchg
pop
mov
in
mov
sub
push
push
jp
sahf
mov
not
mov
daa
dec
pop
sub
inc
shr
and
sti
dec
iret
out
xor
scas
cld
mov
xchg
fiaddl
add
popf
or
adc
cmp
xchg
cmp
aas
les
xchg
fstpt
dec
incl
jle
std
leave
and
pop
lods
pop
pop
mov
fistps
out
jo
sub
dec
push
jecxz
movsl
lret
jge
mov
xor
fwait
clc
mov
les
pop
mov
jmp
xorl
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
pop
sti
pop
js
cmc
jg
mov
cmpsb
es
mul
jl
scas
mov
dec
inc
sub
xchg
out
ficoms
cltd
mov
int
push
imul
xchg
les
xchg
idivl
jmp
popf
out
pop
incb
mov
cmp
fisttpll
fidivrl
xchg
push
cmp
aaa
mov
mov
aam
dec
mov
cs
mov
sti
aas
fisubrl
mov
fcomip
aas
mov
out
cld
jbe
mov
lock
outsl
jnp
mov
mov
cmp
jnp
push
icebp
ror
xchg
out
mov
add
lods
insb
js
dec
xchg
inc
mov
pop
clc
test
dec
loop
test
jnp
repz
stc
fidivl
mov
outsl
frstor
jns
lods
js
mov
das
mov
cmp
ja
and
test
fisttps
fdivrl
cli
iret
xor
xor
incl
out
jmp
xchg
ds
xor
mov
pop
aad
in
in
mov
mov
mov
xchg
cmp
incb
sbb
cmp
xchg
js
repnz
xor
jle
int3
incb
loope
adc
out
sti
iret
lahf
out
or
mov
mov
mov
dec
ror
int3
xchg
adc
out
es
xchg
es
fstpt
int
shrb
aas
cli
movsb
repz
sub
cmpsl
fsubl
in
jg
jge
add
pop
clc
andl
imul
mov
fldenv
or
out
xchg
fisubrs
in
out
jp
cmp
cmpsl
fldcw
paddb
jb
adc
xchg
das
push
clc
incl
mov
mov
gs
mov
cmpsl
in
xrstor
in
push
lods
movsb
xor
fildl
sahf
gs
ficoml
xchg
xchg
aas
xchg
dec
jnp
icebp
and
sarl
jg
insb
outsl
clc
adc
mov
cld
and
adc
imul
in
inc
pushf
lods
sbb
dec
jle
ficoml
repz
cmpsl
jno
inc
sti
mov
mov
movsb
cmp
jecxz
das
enter
and
movsl
xchg
bound
xchg
bnd
jl
jl
jmp
push
jo
cmp
cmp
dec
push
cltd
fstl
and
arpl
pop
idivb
mov
and
adc
cmp
sti
aaa
jl
pop
jle
jg
jmp
setge
xor
lea
subps
ffreep
push
mov
push
out
popf
mov
xor
jge
daa
fwait
enter
out
cs
cwtl
incl
fbstp
loopne
and
sahf
xor
out
cmp
testb
std
lea
and
arpl
mov
or
pusha
or
inc
mov
stc
sti
std
sub
push
pop
sti
dec
call
pushf
insl
insl
and
mov
dec
repz
mov
and
xchg
xor
cmp
repnz
pop
rcrl
imul
roll
loope
insl
daa
rolb
pop
cmp
jnp
out
jg
incb
dec
push
filds
lock
xchg
mov
pop
js
cmp
incl
push
jo
jne
jle
sti
mov
cmp
add
mov
seta
lahf
cmp
pop
inc
inc
mov
xchg
lods
push
pop
leave
cmpsb
push
incl
cmpsb
xchg
jg
adc
fisttpl
das
not
adc
std
in
mov
fisttps
loope
mov
dec
sahf
jmp
mov
xor
push
xchg
xchg
dec
ror
sub
mov
mov
add
sub
add
sub
add
sub
add
clc
incl
lods
sbb
call
mov
rcr
cld
jbe
cmp
lret
iret
sub
loope
in
repz
rcrb
std
mov
pop
mov
push
cltd
pusha
lahf
jle
idivl
lock
loop
mov
enter
add
push
in
and
add
xchg
pop
js
dec
aam
pop
stc
cmp
fbstp
lods
jns
icebp
ret
bound
xchg
mov
cmp
je
xchg
dec
mov
icebp
adc
pop
jle
xlat
and
and
add
ja
and
ds
outsl
adc
pop
fnstcw
out
std
mov
push
sub
cltd
iret
sub
jo
fidivrs
movsl
repnz
out
cld
fistpll
xchg
icebp
test
add
jne
imul
jecxz
repnz
bound
push
xor
aas
mov
cld
mov
scas
cmp
mov
jg
loop
or
dec
pop
fidivl
cmp
pop
pop
xchg
add
xor
shrl
dec
mov
movsb
fcmovu
inc
xchg
and
leave
sbb
sti
mov
stc
push
sti
mov
mov
cli
cs
and
dec
stc
add
es
in
add
jae
add
adc
cld
mov
fistpll
arpl
mov
iretw
fst
jg
and
insb
pop
icebp
push
fsubp
xor
pop
repz
lahf
jae
fsin
rcll
pop
pop
js
ss
in
daa
imull
repnz
incl
outsl
in
sub
std
out
std
fmulp
out
std
repz
fdivs
and
push
arpl
jp
pop
incl
mov
dec
mov
dec
imul
iret
decb
xor
out
fdivp
insl
scas
lahf
cwtl
dec
repnz
cmp
sar
pop
mov
push
pop
and
out
and
cli
cmpsb
cld
and
pop
incl
mov
sub
notl
mov
fimull
jmp
jl
scas
aam
sub
movsl
mov
movsl
in
cmpsb
xchg
scas
and
loop
fistpll
add
movsl
mov
xchg
mov
inc
scas
incl
dec
and
xchg
incl
mov
incb
pop
sbb
mov
mov
lea
clc
cwtl
fistpl
add
fisttps
push
fs
add
das
ret
or
jnp
mov
lds
loop
ret
negl
incl
shlb
sub
cwtl
jl
fsubr
mov
dec
test
mov
sbb
sbb
xchg
fldt
fidivs
cli
incl
adc
insl
insb
and
ljmp
mov
loop
xor
pop
xor
jb
ljmp
jbe
cld
push
mov
repnz
out
lds
jbe
push
in
xchg
div
lahf
mov
inc
iret
insb
jb
cmp
pop
movsb
clc
lret
jg
ret
push
mov
jmp
sti
dec
ss
inc
das
notl
ret
call
mov
xchg
push
mov
jno
add
mov
pop
cld
fisubrs
loop
loop
fwait
mov
cli
stc
ds
mov
xchg
movsb
imul
jg
mov
scas
mov
mov
mov
add
add
les
mov
stc
push
iret
sbb
xchg
repz
jg
jl
icebp
mov
pop
leave
mull
sti
dec
mov
lods
jge
ret
stc
lahf
mov
incl
jns
jl
icebp
mov
dec
out
adc
jp
jle
in
jmp
jns
mov
pop
xor
jg
jae,pt
inc
xchg
imul
push
insb
dec
in
ljmp
pop
ret
mov
inc
cltd
aas
cmp
in
mov
int
les
dec
cmc
fwait
cmc
insb
js
fs
stc
outsl
pop
incb
es
mov
cld
jg
or
cmc
adc
mov
mov
inc
adc
add
mov
add
mov
add
mov
add
mov
add
mov
add
jg
sub
xchg
jle
incl
popa
out
lahf
incl
sbb
xchg
jno
xchg
fsubl
leave
and
lret
inc
push
xor
jg
cmp
aam
int3
dec
jnp
push
mov
xchg
mov
ja
cs
scas
daa
adc
push
mov
ret
and
jae
mov
xchg
dec
xor
push
mov
sarl
lock
dec
scas
cmp
in
dec
dec
ror
js
add
subb
loopew
adc
mov
push
fsubrs
in
xlat
movsb
pop
push
mov
iret
out
das
adc
les
xchg
add
jnp
jg
xor
in
mov
sti
ficomps
jp
incl
loope
incl
dec
mov
cmc
fwait
adc
jg
mov
sub
mov
push
mov
not
icebp
in
std
loop
and
incl
sahf
xchg
out
data16
pop
mov
daa
fisttps
ficomps
push
imul
cld
jne
into
inc
repnz
in
lahf
jno
jns
mov
aas
cs
cmp
jns
fdivl
xor
cmc
lea
std
arpl
daa
idivb
mov
jl
add
inc
scas
inc
shr
adc
divl
xor
repnz
jnp
mov
dec
jg
dec
mov
fisubs
mov
dec
das
jp
fstpt
adc
negl
cld
fistps
jp
out
mov
ljmp
aas
xchg
sti
call
mov
clc
xchg
cmp
neg
and
sub
xchg
jo
add
lret
in
incl
ja
mov
adc
ja
insl
out
in
scas
ss
ss
sbb
or
ret
iret
in
dec
into
inc
incl
rorb
ds
in
outsl
pop
fldenv
cmpsl
lock
ffreep
aaa
cld
push
mov
dec
cmpsb
aas
mov
push
dec
aas
mov
mull
incl
cmpb
lock
icebp
dec
jno
jae
jg
outsl
out
push
mov
lret
lahf
mov
clc
imul
cmp
test
iret
incl
mov
js
jle
push
xchg
iret
lock
mov
scas
lds
mov
popf
jg
imul
fstpl
incl
loop
jp
xchg
add
mov
notb
ficompl
add
jg
leave
dec
lods
js
les
add
mov
mov
jmp
incl
sbb
add
std
push
inc
mov
in
das
rorb
jmp
mov
cli
scas
out
stos
jmp
xchg
add
jmp
rcl
sahf
xlat
loop
jbe
dec
je
sub
xchg
dec
inc
incl
sbb
stc
mov
xchg
push
xlat
xchg
pop
pop
fcompl
mov
sti
pop
int3
pop
incl
inc
scas
cmp
add
add
add
add
jg
jb
sub
stc
adc
cmpsl
fdivrl
daa
out
aaa
insb
aas
popa
pop
pop
std
mov
out
mov
jns
ss
and
xchg
cmp
mov
leave
ss
lods
sbb
lcall
mov
int
add
stc
and
mov
jae
sbb
lcall
leave
mov
inc
push
das
es
bound
pop
ret
daa
cltd
cmp
shl
jg
jl
insb
inc
stos
repz
dec
inc
mov
mov
notb
clc
out
add
push
mov
push
sub
in
xchg
clc
out
xchg
mov
lcall
std
cli
cmc
mov
add
in
ss
ja
xchg
incl
adcb
jae
xor
jl
lret
lock
stc
sub
rclb
adc
inc
xor
sub
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
mov
push
lods
lock
push
aas
xor
jne
lahf
clc
out
cmc
scas
test
in
aaa
lcall
incl
insl
pop
lcall
mov
lret
daa
jmp
xor
or
add
dec
outsl
and
ss
incl
popa
xchg
mov
test
aas
mov
cld
fildll
fnstsw
cmpsb
mov
inc
data16
incl
lret
or
fcmovnb
pop
mov
rorb
in
roll
out
jge
incl
in
insl
scas
xchg
cmp
add
pop
mov
pop
mov
and
out
push
xchg
ss
std
mov
adc
jmp
or
or
outsl
fnstenv
aam
arpl
xor
test
repnz
push
xchg
xor
sub
adc
fdivrs
scas
imul
int3
jle
cmpsl
leave
mov
push
pop
push
xchg
loop
call
leave
in
jg
decb
sub
mov
aas
jb
add
sar
pop
mov
pop
imul
iret
out
dec
std
scas
outsl
push
mov
jg
mov
mov
or
jl
inc
mov
test
dec
in
sti
int
repz
mov
loop,pn
adc
and
sahf
xchg
jb
xchg
fmul
sti
out
cs
incl
jbe
jg
ljmp
push
mov
ds
lret
mov
fimuls
jg
dec
mov
lahf
not
jp
mul
xchg
sti
jmp
fstpl
lcall
pop
pop
jns
sbb
outsl
incl
mov
cwtl
cmp
lea
xor
test
lcall
jecxz
aad
repnz
movsb
mov
aas
cmc
xor
mov
fucomi
incl
jg
cmp
rclb
and
mov
fisubrl
std
mov
inc
incl
fisttps
pop
fidivrs
in
out
xor
clc
jmp
std
push
lahf
ljmp
incb
lfs
jae
add
dec
mov
cld
insb
sub
lahf
push
incl
push
mov
mov
adc
adcl
jnp
push
incl
cmpsb
lahf
repz
or
ret
sub
incl
mov
jnp
out
fnstcw
out
je
sub
add
jmp
mov
stc
insl
imul
in
js
mov
cmp
test
incl
xor
and
lahf
xchg
incl
sbb
jne
test
movsb
push
cld
notl
mov
pop
push
xchg
jecxz
adc
and
shr
dec
outsl
adc
sub
add
dec
repz
out
das
push
mov
pop
jns
mov
popa
mov
mov
add
mov
notl
jae
push
repnz
jns
incl
loopne
daa
fildll
dec
mov
push
mov
xchg
daa
cmp
push
pop
cld
push
sti
adc
add
xlat
sar
add
shrl
cmc
test
mov
lcall
ret
out
repnz
incl
sahf
fwait
stos
out
incl
xchg
sbb
or
dec
sarl
sub
add
icebp
scas
jnp
xchg
outsb
popa
aas
popa
inc
flds
xor
stc
inc
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lock
aad
std
ficompl
incl
cmpsb
mov
dec
gs
inc
mov
jp
cli
jge
std
fsubrl
movsl
and
and
out
sub
lahf
fstp
cmpsl
enter
in
out
xor
outsl
xor
out
mov
cmp
and
jbe
jo
adc
mov
cld
jmp
mov
loop
in
cmc
push
fdivrp
ficoms
jp
clc
or
std
mov
fdivr
add
iret
das
out
xor
daa
imulb
in
stc
xchg
and
fbstp
out
mov
cld
imul
and
ja
mov
add
inc
push
scas
lcall
xchg
popf
mov
pop
insb
incl
pop
jno
adc
popa
mov
ds
cmc
inc
aam
xchg
mov
nop
outsl
fsincos
mov
sbb
mov
and
cmp
incl
imul
ficomps
cmp
repnz
in
lahf
sub
imul
add
les
cmp
repnz
push
ds
incl
jbe
ljmp
cmp
jne
clc
pop
jno
jns
inc
xchg
int3
dec
mov
xchg
cld
xchg
xchg
test
out
and
pop
incb
lahf
movsl
ja
cmpsl
test
push
mov
cld
mov
in
out
outsb
scas
xor
pop
xchg
cmp
repz
add
lahf
fdivrl
cmp
or
fbld
jle
aas
sti
in
push
mov
xlat
sub
add
out
push
mov
imul
lret
jg
and
pop
aas
fistpll
out
leave
sub
and
push
lret
out
ror
es
stc
idiv
mov
fildl
sahf
mov
hlt
sti
mov
out
incl
mov
and
iretw
mov
dec
in
or
mov
cmp
lahf
mov
cmp
push
stc
loope
enter
cltd
es
xchg
push
xchg
out
sbb
pop
out
movsl
jns
lahf
scas
pop
clc
jle
not
jns
outsl
leave
rep
xchg
call
xchg
mov
jo
lahf
cmp
cld
jnp
mul
scas
jns
shl
dec
adc
jnp
cmp
addr16
jg
push
fcompl
out
ss
cmp
testl
mov
outsl
mov
inc
sahf
addr16
pop
fbld
movsl
push
lahf
int
add
sahf
sahf
addr16
daa
std
sti
movsl
into
imul
repnz
stc
jne
js
ret
and
es
and
jnp
repz
stc
adc
into
mov
ljmp
js
mov
lret
stc
push
sti
inc
int
bound
loope
mov
inc
and
insb
cltd
mov
repnz
rcrb
je
push
pop
test
shlb
sahf
xor
in
in
ret
imul
sarl
cmpsl
xor
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
out
add
xor
mov
cmpsl
cld
dec
sub
add
shrl
cmp
out
call
and
test
lock
jns
push
int
out
lret
paddb
scas
aaa
pop
xchg
mul
mov
out
dec
arpl
iret
mov
sahf
fidivrs
sub
out
notl
jle
clc
push
sub
and
incl
sbb
adc
jecxz
aad
xor
out
sub
or
mov
jp
xor
std
imul
dec
ds
imul
repz
daa
leave
repz
xchg
jecxz
lds
popl
js
xor
push
dec
mov
mov
pop
mov
mov
outsl
cmpsl
ljmp
imul
hlt
fs
imul
clc
aaa
jle
lahf
outsl
test
clc
pop
loop
mov
lds
jg
cmp
cmp
sbb
or
xor
jbe
hlt
xchg
inc
jnp
shll
fcoml
xchg
dec
aas
push
jl
pop
mov
lock
loop
std
mov
mov
fnstsw
lock
iret
add
lods
js
jecxz
imul
popf
ds
rclb
and
lea
sbb
jnp
dec
addr16
incl
jge
xchg
out
movsl
js
test
sbb
aas
xchg
sub
mov
mov
mov
mov
fs
sbb
push
cmpsl
clc
cmpb
idivl
pop
mov
bound
sbb
mov
jecxz
dec
mov
jp
xchg
xchg
repnz
out
and
in
sti
scas
and
adc
pop
adc
comiss
repz
cmpsb
fsubr
aaa
xchg
negl
xchg
out
xlat
xchg
ljmp
xchg
dec
mull
lahf
cmp
stc
popa
adc
sahf
aaa
aas
xor
xor
xchg
dec
mov
stc
outsl
inc
xchg
pop
imul
icebp
xlat
rcrb
or
test
mov
imulb
int3
fsubr
mov
dec
jp
sbb
rcrb
lret
fxam
out
lahf
jb
aaa
movsb
xchg
ficompl
out
test
es
mov
mov
mov
and
shl
cmp
fwait
out
adc
call
fsubrs
inc
repnz
stc
sbb
out
jne
popf
insb
cmp
mov
in
mov
push
div
push
xchg
adc
in
pop
fldcw
cld
call
loope
aas
inc
mov
incl
in
lahf
jle
in
movsl
les
xor
daa
sti
lahf
jno
lahf
ljmp
test
push
cmp
dec
jnp
hlt
insl
ss
xor
clc
in
mov
lock
jae
pop
jg
push
xchg
cmc
or
idivl
jg
outsl
scas
fidivrs
repz
mov
das
mov
fldcw
fidivrs
popa
fs
sub
popa
xor
stos
dec
mov
pop
loop
sub
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
xchg
jge
loop
lahf
daa
fisubl
mov
aas
lahf
incb
loop
rcrl
ficoml
divl
fcmovnb
iret
adc
nop
mov
xor
and
and
mov
test
les
lcall
cmp
push
jl
xchg
inc
fnstcw
or
jmp
repz
daa
fisttps
mov
sbb
push
repz
cmp
daa
cld
and
aas
repz
add
scas
add
pop
ror
clc
pop
incb
pop
les
mov
mov
pop
xor
cmc
push
xor
push
pop
cmpsl
call
fimull
clc
pop
lret
addr16
std
xor
cmc
mov
and
iret
xor
out
dec
mov
jno
movsb
sahf
pop
leave
daa
stc
ss
repnz
fcomi
xor
fucomip
movsb
lahf
jb
lods
std
scas
and
aam
incl
jge
xchg
inc
incl
jns
and
movsl
fstpl
xchg
gs
fldt
mov
inc
mov
dec
idivb
cmpsl
test
fisubs
loope
dec
cmc
dec
pop
shr
das
movsb
ficoms
mov
xor
jae
cmpsl
push
mov
popf
in
xchg
pop
int3
fwait
sbb
jecxz
js
mov
daa
sarb
int3
mov
jg
mov
jp
std
cmc
pop
inc
mov
movsb
fisubs
lahf
jbe
in
shrb
cs
loop
sti
mov
jno
mov
incl
mov
xchg
jp
rcll
jp
jno
icebp
cld
adc
dec
jg
negl
add
adc
aas
mov
jb
out
mov
shr
fsubrp
mov
ds
scas
sbb
dec
sbb
incl
cmp
sbb
xor
push
ficoms
dec
in
fsts
xchg
and
lahf
jne
xorb
add
jnp
aaa
decb
mov
fsubrp
jp
jp
test
jbe
and
cmc
out
ficoms
jp
test
not
lods
in
out
fisubrs
jg
adc
test
fldl
jnp
aas
jecxz
sar
inc
lock
jmp
scas
testb
loop
mov
movsl
lods
or
mov
out
movsl
jge
adc
leave
add
sti
fsubrp
lret
or
mov
fidivrl
or
sub
inc
adc
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
cltd
mov
and
scas
add
add
push
dec
sahf
or
in
mov
fisttpll
cmpsb
mov
aas
icebp
iret
mov
clc
and
sahf
into
into
repz
lahf
fistpl
mov
mov
mov
inc
icebp
addr16
cmp
jb
or
incl
mov
sbb
daa
fidivrl
std
mov
mov
mov
fdivp
dec
outsl
cld
dec
dec
incl
gs
pcmpgtb
mov
out
jmp
jecxz
xor
dec
lret
imul
jp
xchg
dec
js
aam
std
pop
clc
aas
mov
testb
jp
hlt
jg
icebp
jne
scas
hlt
cltd
push
ficomps
mov
leave
das
ret
pop
data16
fnstenv
mov
jl
mov
incl
stos
pushf
pop
mov
cmp
ljmp
mov
dec
std
in
cmp
mov
js
cmp
dec
mov
sarl
sub
incl
or
mov
cmc
incl
cmpb
aas
sti
pop
les
pop
pop
dec
notl
xchg
xor
repnz
stos
cmpsl
or
pop
fstpl
and
or
add
loop
mov
add
pop
fwait
incb
pop
cltd
loope
test
add
lock
or
insb
mov
repnz
jg
clc
mov
pop
adc
lret
cmp
stc
arpl
out
lahf
incl
push
scas
iret
scas
push
imul
sub
leave
sub
in
add
in
clc
xchg
in
sbb
fwait
sti
scas
ja
pop
ret
jg
clc
add
leave
shll
in
pop
incl
int3
incl
cmp
jg
in
int
aam
lods
dec
cmovp
cmpsl
xor
push
inc
je
test
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
push
xchg
add
mov
sub
mov
or
icebp
sub
incl
ret
outsb
xchg
sbb
iret
out
lret
incl
add
movsb
and
lret
xchg
es
mov
or
add
cltd
aaa
cmpsb
fwait
sbb
pop
sahf
out
ffreep
pop
sub
add
xchg
icebp
inc
lea
push
sti
or
popf
out
mov
xor
xchg
clc
xchg
push
mov
add
out
sbb
xchg
fwait
icebp
scas
jle
or
fimull
inc
incb
stc
sarb
push
mov
call
jg
idivl
push
sarb
mov
ljmp
sub
addr16
icebp
push
fwait
pop
out
outsb
and
aas
xchg
repnz
inc
std
cmpsl
lods
leave
sbb
cmpsb
testl
std
jmp
shlb
lds
xchg
neg
pop
in
out
and
pop
into
xchg
xor
add
jle
outsb
mov
mov
xchg
cmp
aaa
out
mov
incl
or
inc
mov
dec
sbb
xchg
in
push
pop
clc
test
fildll
enter
dec
sbb
stos
lds
pop
xlat
incl
lock
mov
loope
and
adc
xchg
fnstsw
lret
sbb
fimuls
cmp
aas
shl
cmpsl
out
aas
or
cmc
jl
inc
or
arpl
cmp
pop
leave
sub
mov
in
std
ja
jbe
and
es
mov
xchg
cmpsb
push
test
push
sar
inc
xor
and
lahf
loopne
mov
and
pushf
xchg
ret
insl
jns
fnsave
mov
stc
in
js
and
in
xchg
int3
incl
scas
jne
jns
das
fildll
out
dec
loop
sbb
clc
jno
push
dec
clc
mov
push
cmp
pushf
incl
jl
mov
ficomps
add
jg
adc
sbb
ss
outsb
out
xchg
dec
cld
sbb
incl
pop
js
pop
push
js
ret
push
test
adc
negl
clc
xchg
cli
scas
stos
shll
jns
mov
fdivr
cmp
cltd
les
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
or
scas
pop
call
xchg
les
push
cld
out
xor
jbe
addr16
sti
inc
ljmp
lret
movsb
jmp
jb
outsl
aaa
pop
cmp
negl
ret
mov
xor
add
sti
pop
mov
repz
lock
in
outsl
jecxz
shr
out
arpl
add
push
aas
jg
xor
add
lahf
jge
incl
dec
aaa
hlt
js
xchg
outsb
lahf
xchg
lret
sti
sti
push
out
or
test
div
clc
dec
rcll
dec
mov
ss
data16
mov
les
jg
dec
leave
pop
push
xchg
cmpsl
fcmovnu
fcmovnb
idivl
mov
jle
aas
mov
clc
jg
in
add
insb
into
ds
dec
fisubrs
cmp
jp
jecxz
jle
mov
out
pusha
sahf
daa
inc
mov
arpl
pop
hlt
or
jge
cmp
add
pop
jnp
stc
imul
imul
es
aas
sbb
mov
fisubs
rorl
aad
int
scas
imul
imul
push
icebp
cmc
or
in
out
idivl
mov
shl
dec
arpl
cld
leave
ss
cmp
sub
dec
jl
fdivr
xchg
in
xchg
jge
mov
fs
aas
icebp
aas
xor
add
cmpsl
js
shll
test
fwait
out
jg
stos
int
cld
aas
sub
iret
fdivrp
add
pop
cmpsb
test
fcmovnb
jae
jg
ficomps
hlt
lock
insb
xchg
mov
push
xchg
mov
hlt
mov
in
rorb
stc
imul
pop
iret
cld
jne
cmpsl
iret
pushf
xchg
inc
sar
test
mov
lahf
shl
jp
mov
mov
shl
mov
cs
xchg
out
jmp
ds
in
ds
jle
out
fstpl
add
xor
mov
add
push
dec
out
dec
into
adc
test
fdivrl
dec
insl
jle
leave
iret
leave
idivb
and
fnstsw
les
adc
jmp
dec
mull
dec
jmp
and
jl
ficoms
cmpl
jne
mov
aaa
jne
insb
fdivrl
xlat
stos
test
sub
xor
xor
cmpsl
add
cli
or
out
sbbl
daa
popf
imul
std
scas
dec
mov
sub
inc
or
jno
mov
repz
push
inc
push
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
push
inc
adc
into
mov
lods
imul
pop
shrb
mov
mov
movsl
xchg
imul
dec
clc
not
std
mov
mov
popf
mov
jne
frndint
sti
sarl
xchg
mov
repz
stc
bound
push
mov
testl
mov
add
sti
push
les
cmp
repnz
jno
xchg
les
icebp
xchg
pop
outsl
xchg
insl
ds
aas
jmp
leave
pop
adc
mov
mov
pop
fld
fnstsw
mov
dec
aaa
pop
xchg
jl,pn
loopne
inc
inc
dec
stc
out
fisubrs
ja
insb
mov
jecxz
aas
mov
stos
pinsrw
xor
aaa
repz
int3
imul
xchg
push
repz
mov
pop
cmp
sbb
xchg
sbb
dec
sub
mov
mov
mov
out
push
pop
loopne
jb
add
cmp
xor
sbb
mov
mov
cmp
xchg
clc
aad
xchg
mov
xchg
out
incl
ret
das
xchg
sti
iret
das
jg
into
mov
xchg
dec
lea
jge
mov
push
in
add
in
cltd
insl
out
add
jl
addr16
xor
call
adc
xor
repz
cmpsl
lret
shrb
push
out
sub
shl
std
fmull
clc
loop,pt
cmp
stc
incl
jns
iret
sbb
xchg
xchg
cmp
add
iret
std
pop
push
mov
fcomps
mov
push
arpl
hlt
dec
imul
dec
lds
jnp
test
stos
pop
jns
insl
pushf
xchg
int3
incl
jne
mov
add
mov
imul
mov
xchg
std
fmulp
cmc
xchg
movsl
sub
testl
jecxz
push
pop
mov
jg
divb
test
xchg
shrb
dec
das
sti
bnd
cmc
bound
mov
imul
imull
popf
in
pop
pop
stc
sarl
addr16
std
jbe
lahf
gs
out
mov
leave
xor
out
bound
xor
and
sti
mov
push
scas
pop
js
out
outsb
and
movsb
repnz
push
out
daa
fmull
mov
daa
fidivl
es
and
and
pop
cs
cmc
mov
jg
hlt
jo
jns
jae
negl
pop
fisubs
std
in
outsl
cmpsl
fmull
jns
outsl
scas
orl
mov
aas
into
mov
lahf
das
icebp
stc
jb
aas
and
cld
or
cmc
int
sarb
and
sahf
addr16
and
mov
aas
sbb
js
ret
fstpl
inc
jle
aas
icebp
sub
icebp
pop
das
jl
xlat
addr16
mov
imul
decb
jg
cmp
cld
mov
sbb
xor
int3
aas
insb
jecxz
testb
or
sbb
dec
push
pop
ljmp
and
std
in
notl
mov
sbb
mov
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
ss
fmul
scas
sub
fcomi
mov
xchg
inc
mov
gs
sti
testl
imul
jecxz
xchg
iret
adc
ds
leave
adc
jbe
incl
scas
lods
cmp
stos
lods
jns
jg
mov
xlat
cmp
xor
aad
mov
out
shll
ret
sub
add
push
xchg
inc
mov
js
jnp
daa
into
ja
sbb
fcoms
push
jp
jle
mov
and
inc
sti
incl
mov
arpl
out
sub
rorb
incl
std
mov
sbb
testb
incl
pop
in
jno
repnz
jmp
es
dec
imull
repz
push
fwait
pop
int3
idiv
add
pop
cltd
and
xchg
aas
xchg
cltd
mov
xor
pop
inc
jmp
test
mov
lret
lea
jecxz
xchg
dec
adc
out
in
add
loope
lock
les
push
cmp
fcomip
out
mov
and
cli
inc
pop
popf
or
imul
cmp
jg
pop
xor
jge
add
leave
mov
mov
cmp
xchg
and
or
out
cmp
mov
in
notl
and
mov
fnstsw
fdiv
mov
pop
push
cmp
jnp
xor
idivl
cld
mov
xchg
bnd
jb
in
repnz
or
bound
and
fistpll
jg
push
in
mov
mov
dec
fcom
out
adc
stc
imul
xchg
pop
popf
cld
lret
js
std
jg
call
imul
sti
mov
jge
imull
or
jne
int
and
adc
mov
aas
mov
jecxz
icebp
cld
imul
imull
and
jns
mov
push
dec
jns
lods
mov
loopne
mov
mov
and
in
repnz
test
mov
mov
xchg
and
out
scas
and
jg
and
ret
ret
in
test
popf
insl
jns
add
xor
js
das
cs
mov
clc
lea
fwait
sti
sbb
bnd
fcomip
xlat
push
loope
cmp
cld
lret
sub
jp
xchg
jecxz
outsb
test
ds
sbb
cmp
outsb
ss
dec
ss
std
in
or
pop
aaa
dec
pop
inc
outsl
mov
out
sti
test
fimuls
jg
jg
mov
out
aaa
xchg
jno
test
push
lahf
lock
inc
mov
mov
dec
mov
stc
data16
std
imul
xlat
iret
cli
pop
lret
cwtl
jecxz
xchg
cmp
sarl
add
imul
cmp
aas
fbstp
lret
imul
lahf
add
xor
dec
sub
sub
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
clc
test
aad
incl
xchg
stos
stc
mov
jmp
jno
push
and
sbb
adcl
fpatan
jg
lret
das
inc
dec
jl
cmc
ds
icebp
mov
add
jg
das
and
cltd
sti
jg
mov
jle
icebp
daa
idivb
jb
ja
jg
repz
push
repnz
dec
loop
lea
xchg
dec
sti
fstps
and
add
fsubrs
mov
mov
int3
mov
xchg
pop
cli
addr16
and
jo
dec
push
in
fsubrs
jg
inc
nop
mov
xchg
mov
mov
int3
fistps
jbe
jmp
enter
xor
add
dec
aas
push
mov
lret
dec
mov
out
mov
loopne
sysret
lds
add
lahf
mov
pop
fdivr
add
cmpsl
movsb
mov
cmc
or
cmp
push
in
test
in
out
stc
push
cmp
stos
jp
xchg
out
leave
dec
and
out
mov
ficoml
in
js
sti
incl
mov
mov
repz
sti
aaa
mov
xor
clc
and
std
iret
xor
enter
mov
mov
adc
repz
out
aam
fsubrs
fwait
ds
sbb
cmc
iret
jne
push
jnp
cmp
mov
mov
inc
idivl
jmp
les
dec
sahf
aas
xor
sti
repnz
pop
movsb
jle
dec
jecxz
jecxz
jg
xor
jmp
std
xor
dec
mov
jp
les
mov
sbb
je
cli
movsb
push
xor
fucomip
jnp
out
jns
mov
fcmovnu
imul
jle
clc
or
out
jg
out
in
nop
iret
xchg
pop
dec
outsl
icebp
dec
pop
xor
jp
fwait
std
jmp
and
dec
clc
adc
pop
clc
or
push
xchg
iret
fcomip
push
dec
popf
and
and
fcmovnb
outsl
mov
in
es
cld
out
sti
lods
sub
sub
loop
jo
sub
jmp
pop
mov
lods
cld
xchg
mov
aas
out
mov
jns
adc
jns
std
lret
mov
push
mov
lahf
daa
out
jmp
sti
push
sub
mov
jl
daa
ret
das
popf
in
cld
les
out
cli
aam
hlt
mov
addr16
stc
aas
out
jne
and
in
lcall
scas
das
push
shl
shll
mov
pop
jnp
inc
cld
adc
test
mov
jbe
xor
iret
pop
xchg
mov
ds
push
cmc
int
pop
mov
int3
call
lds
cmpb
sub
repz
mov
mov
jbe
aaa
sbb
add
shll
mov
and
test
cmp
push
sbb
cs
xchg
std
dec
fwait
popf
shll
sub
add
push
in
incl
mov
ret
mov
call
inc
xchg
lret
xchg
in
xchg
adc
repnz
dec
inc
idivl
ja
xchg
inc
iret
out
imul
jl
add
sti
push
push
lds
mov
out
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
addr16
fwait
std
lret
mov
sti
jmp
pop
out
mov
pop
lds
aas
cs
popf
shll
fmul
aad
addr16
jge
psllw
add
lods
cmpsl
js
jmp
shl
cli
xchg
das
std
xor
jg
std
lret
xlat
dec
adc
rol
jae
daa
pop
addr16
iret
in
roll
daa
dec
xchg
testl
mov
lods
mov
in
ficoml
jae
jp
inc
repnz
out
aas
jmp
insb
inc
idivb
stc
imul
push
xchg
inc
repnz
das
sti
fwait
outsl
cli
imul
pop
test
rcrl
hlt
mov
adc
cltd
leave
mov
aas
int3
incl
sahf
fwait
aas
jmp
inc
mov
arpl
and
cld
ds
lock
enter
mov
ljmp
mov
daa
cmp
idiv
xchg
incl
fstpt
ljmp
xchg
incl
mov
jg
stos
movsb
mov
mov
sub
loop
xchg
dec
stc
addr16
mov
adc
notl
rolb
jno
idiv
add
dec
mov
xchg
dec
jnp
enter
cmp
out
mov
fcoml
pushf
jne
jecxz
xchg
clc
and
add
xor
xor
xor
mov
jecxz
mov
dec
dec
out
insb
jecxz
movsb
jp
sti
mov
cld
scas
cli
jmp
scas
jg
sub
fcoml
bound
incl
daa
cld
mov
stos
popf
mov
jmp
out
in
xchg
aas
pop
mov
std
sbb
xchg
imull
xchg
xchg
leave
mov
xchg
sarb
clc
dec
enter
out
aad
mov
cmp
push
stos
mov
enter
fnstcw
repnz
fists
fisttps
mov
dec
incl
jmp
jnp
jb
add
decb
and
in
jl
fstps
jg
mov
jg
out
das
into
repnz
push
incl
cli
imul
and
aaa
out
cld
lahf
mov
inc
std
lahf
outsl
insl
in
mov
iretw
jecxz
out
aam
mov
test
clc
shl
jp
incl
lret
aas
jne
mov
in
jg
mov
aaa
mov
mov
add
dec
je
hlt
dec
add
cmp
mov
sar
inc
into
xchg
sub
std
arpl
dec
aam
call
notb
jne
cmp
loope
arpl
incl
jne
add
scas
jnp
and
pop
mov
mov
pop
jae
das
cmp
xor
ret
repnz
loope
xchg
mov
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
and
pop
shrl
in
dec
xchg
mov
outsl
icebp
xlat
ret
filds
push
jb
xchg
jmp
mov
mov
out
sbb
jns
lcall
stc
xchg
mov
cltd
rorl
and
lods
mov
fnstsw
xchg
clc
cld
enter
incl
lret
dec
hlt
jg
cld
adc
in
dec
andl
jecxz
sbb
add
lods
pop
cmpsb
mov
mov
aaa
out
scas
xchg
les
stc
mov
lock
incl
fldl2t
pop
xchg
mov
daa
cld
push
mov
mov
cmpsb
jne
int3
mov
aas
jecxz
dec
incl
fcoms
xchg
jl
sti
iret
cli
out
dec
mov
dec
cmpsl
es
xchg
jl
add
push
in
jmp
dec
incl
sahf
xchg
jge
and
add
cmp
lahf
repnz
stos
leave
daa
xchg
repnz
jns
repnz
lahf
in
aad
xor
xchg
out
aas
cld
jb
lods
cmp
dec
jecxz
dec
incb
dec
mov
dec
cmpsb
xchg
lret
inc
stc
idiv
add
std
cmpsl
out
fdivrl
mov
jp
cmp
imul
mulb
xchg
add
cmc
iret
jge
arpl
cltd
jmp
mov
cs
mov
jl
fsts
jae
out
aad
sbb
outsl
xor
pop
mov
scas
or
andl
leave
in
repnz
outsl
mov
clc
add
mov
sbb
dec
repnz
incl
dec
into
push
aaa
push
ffree
pusha
xchg
lock
hlt
mov
cmp
pop
lret
stc
sub
shr
sub
fbstp
add
addr16
mov
cli
mov
sbb
enter
mov
add
fidivrs
xchg
iret
mov
les
jg
sarb
sub
lahf
repnz
clc
sbb
xchg
sar
add
pushf
xchg
outsl
incl
dec
and
xchg
and
and
xchg
aas
es
mov
out
inc
push
lret
cmp
add
incl
xchg
and
jge
xchg
sar
fistpll
test
arpl
add
jbe
fisttps
cmp
add
jne
jmp
cmp
jo
ljmp
sbb
cmpsl
icebp
pushf
inc
jp
mov
insb
dec
hlt
xchg
scas
inc
lock
adcl
mov
scas
orl
mov
incl
shl
fcomp
out
imull
adc
les
add
mov
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
popf
cmp
pop
xor
pop
clc
cmp
out
test
xchg
std
leave
je,pt
das
push
clc
inc
loop
jg
xor
fbld
std
xor
jnp
xor
push
sbb
xor
push
jmp
mov
cmp
lods
imul
decb
repnz
mov
mov
cld
cmp
daa
dec
mov
mov
in
leave
aas
mov
loop
leave
outsl
sbb
lahf
daa
cltd
pop
adc
fmull
fnsave
ret
inc
mov
pop
out
shll
xor
push
movsb
fstl
aas
test
stos
in
lahf
lods
sarb
cmp
jnp
xor
outsl
xchg
in
inc
dec
mov
push
das
cld
out
add
push
add
sub
daa
mov
add
sub
mov
incl
and
movhps
ffreep
xchg
repnz
xchg
jle
std
cmc
jg
jle
cld
imul
in
in
scas
sub
outsl
xor
add
pop
scas
cmpsb
jl
mov
mov
push
lret
push
stc
stos
push
cld
cmp
in
out
dec
ds
push
mov
jle
and
dec
ss
mov
mov
incl
mov
mov
add
mov
xor
jno
add
jle
std
je
aad
outsl
outsl
insl
pop
out
insl
jecxz
std
enter
dec
sub
fldt
daa
mov
clc
jae
mov
aas
mov
fwait
loopne
mov
incl
fmuls
sub
rcll
lds
lret
push
notb
mov
cmp
mov
test
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
orb
mov
add
sub
add
and
add
inc
add
add
add
add
add
add
add
jle
add
std
incl
add
add
incb
incb
add
add
add
std
add
jle
sarl
add
std
add
std
add
add
std
add
add
jg
addb
add
sub
and
and
xchg
and
and
int3
and
and
and
and
and
xchg
and
and
xchg
int3
int3
int3
int3
int3
int3
ret
and
cltd
xchg
and
xchg
and
sub
int3
int3
int3
and
and
sub
and
and
and
and
xchg
and
and
xchg
and
and
and
sub
sub
and
and
xchg
cltd
and
and
and
and
and
sub
and
xchg
and
and
and
cltd
and
cltd
pushf
leave
and
and
xchg
and
xchg
and
xchg
leave
and
and
cltd
cltd
and
and
leave
and
and
int3
and
and
and
leave
cltd
and
and
int3
ret
cltd
cltd
cltd
xchg
and
leave
and
sub
leave
and
cltd
sub
and
and
xchg
and
int3
ret
cltd
pushf
leave
cltd
xchg
sub
and
sub
and
cltd
cltd
and
cltd
sub
and
sub
and
and
xchg
xchg
cltd
pushf
int3
leave
cltd
cltd
cltd
cltd
cltd
and
sub
and
sub
and
and
and
and
int3
sub
and
and
cltd
cltd
cltd
cltd
sub
int3
int3
ret
and
and
and
cltd
and
cltd
cltd
xchg
and
and
and
and
and
cltd
and
pushf
int3
int3
int3
and
and
and
and
and
and
and
and
and
and
int3
int3
xchg
cltd
and
and
and
and
int3
int3
int3
and
sub
ret
int3
and
and
and
and
int3
and
and
and
and
and
sub
and
and
and
and
and
and
sub
and
and
and
and
and
cltd
cltd
xchg
and
and
and
and
and
and
and
cltd
cltd
jecxz
std
cmp
std
incl
std
lcall
jle
decl
out
cld
leave
sti
mov
push
jle
push
cmp
decl
xbegin
aas
movl
mov
sbb
rorl
add
add
enter
mov
cld
add
decl
jg
incl
incb
clc
jg
cld
lahf
aas
pop
jmp
jmp
les
enter
add
add
add
add
mov
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
pop
add
add
add
add
incl
add
je
add
add
add
cmp
add
add
jns
jae
dec
add
outsb
add
add
popa
add
add
add
add
add
je
add
add
add
or
add
add
add
add
add
add
add
add
incl
add
je
add
push
add
add
add
add
add
add
add
add
data16
or
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
push
add
and
inc
add
cmp
and
jo
push
add
dec
add
jno
outsb
add
push
add
add
inc
add
dec
add
push
add
inc
add
add
push
add
add
push
add
add
outsl
add
add
add
add
inc
add
push
add
push
add
add
push
add
inc
add
aaa
add
jae
and
jp
dec
add
xor
add
outsb
add
push
add
xor
and
push
add
jne
pop
add
dec
add
add
push
add
xor
imul
add
push
add
add
push
add
push
add
push
add
cmp
inc
add
add
add
cmp
imul
cmp
push
add
and
dec
add
add
xor
and
dec
add
add
add
insl
add
jne
push
add
add
add
inc
add
inc
add
add
add
push
add
and
inc
add
cmp
and
jo
push
add
dec
add
jno
outsb
add
push
add
add
inc
add
dec
add
push
add
inc
add
add
push
add
add
push
add
add
outsl
add
add
add
add
inc
add
push
add
push
add
add
push
add
inc
add
aaa
add
jae
and
jp
dec
add
xor
add
outsb
add
push
add
xor
and
push
add
jne
pop
add
dec
add
add
push
add
xor
imul
add
push
add
add
push
add
push
add
push
add
cmp
inc
add
add
add
cmp
imul
cmp
push
add
and
dec
add
add
xor
and
dec
add
add
add
insl
add
jne
push
add
add
add
inc
add
inc
add
add
add
push
add
and
inc
add
cmp
and
jo
push
add
dec
add
jno
outsb
add
push
add
add
inc
add
dec
add
push
add
inc
add
add
push
add
add
push
add
add
outsl
add
add
add
add
inc
add
push
add
push
add
add
push
add
inc
add
aaa
add
jae
and
jp
dec
add
xor
add
outsb
add
push
add
xor
and
push
add
jne
pop
add
dec
add
add
push
add
xor
imul
add
push
add
add
push
add
push
add
push
add
cmp
inc
add
add
add
cmp
imul
cmp
push
add
and
dec
add
add
xor
and
dec
add
add
add
insl
add
jne
push
add
add
add
inc
add
inc
add
add
add
push
add
and
inc
add
cmp
and
jo
push
add
dec
add
jno
outsb
add
push
add
add
inc
add
dec
add
push
add
inc
add
add
push
add
add
push
add
add
outsl
add
add
add
add
inc
add
push
add
push
add
add
push
add
inc
add
aaa
add
jae
and
jp
dec
add
xor
add
outsb
add
push
add
xor
and
push
add
jne
pop
add
dec
add
add
push
add
xor
imul
add
push
add
add
push
add
push
add
push
add
cmp
inc
add
add
add
cmp
imul
cmp
push
add
and
dec
add
add
xor
and
dec
add
add
add
insl
add
jne
push
add
add
add
inc
add
inc
add
add
add
add
and
add
add
call
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
push
add
outsb
aad
cmpsl
add
add
outsb
aad
cmpsl
add
add
add
add
loopne
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
popa
add
pop
add
add
add
ja
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
push
add
add
add
dec
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
cmp
xor
add
add
add
add
add
add
xor
cmp
add
cmp
xor
xor
xor
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jns
add
push
add
add
push
add
add
add
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
imul
cmp
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
arpl
add
pop
add
dec
add
add
add
add
add
adc
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
add
add
add
xor
xor
aaa
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
dec
dec
bound
cmp
push
push
cmp
popa
dec
push
dec
outsl
push
imul
push
inc
dec
pop
inc
inc
push
push
inc
ss
inc
dec
bound
dec
jo
dec
popa
inc
dec
addr16
inc
dec
dec
push
dec
push
insb
inc
xor
jo
push
addr16
jae
jno
inc
xor
push
xor
pop
dec
dec
push
dec
push
bound
jno
popa
jne
cmp
push
push
aaa
dec
push
dec
jns
popa
inc
dec
insb
inc
ss
xor
inc
dec
jne
gs
inc
imul
insb
push
xor
push
imul
jo
push
insb
jno
jb
push
dec
push
js
ja
addr16
jno
dec
push
dec
ja
popa
push
dec
dec
addr16
dec
dec
jbe
popa
jns
push
push
jno
push
jp
aaa
bound
cmp
xor
dec
insl
js
push
dec
imul
jo
inc
push
addr16
inc
push
pop
dec
push
cmp
xor
dec
cmp
xor
xor
fs
outsb
jne
pop
dec
dec
dec
outsl
jo
jne
push
cmp
pop
jp
imul
dec
pop
ja
inc
jbe
fs
inc
pop
push
jo
push
cmp
push
ja
imul
jne
xor
gs
jno
dec
imul
je
jae
jns
je
insl
xor
pop
dec
js
dec
fs
push
je
dec
xor
arpl
popa
insb
inc
push
dec
inc
cmp
ja
inc
pop
pop
js
bound
jo
push
ss
popa
dec
xor
push
dec
inc
jo
inc
dec
je
outsb
inc
inc
jb
jp
dec
dec
inc
arpl
pop
jne
push
ja
jne
xor
jb
aaa
inc
ss
pop
je
insl
ja
jb
push
dec
insl
push
data16
ss
dec
jne
gs
jae
inc
pop
dec
push
xor
push
jns
dec
pop
push
xor
push
outsb
data16
pop
cmp
add
data16
inc
xor
push
jp
push
inc
cmp
dec
data16
push
xor
xor
push
dec
fs
outsl
inc
inc
aaa
push
popa
jbe
jae
arpl
cmp
imul
dec
pop
jns
imul
jns
js
push
jp
dec
inc
pop
jns
dec
xor
push
imul
dec
popa
inc
inc
xor
inc
push
push
inc
pop
outsl
ss
imul
push
cmp
imul
aaa
aaa
arpl
dec
outsb
bound
xor
push
dec
je
pop
bound
xor
xor
push
arpl
inc
xor
push
push
inc
jo
jae
inc
dec
dec
jbe
inc
dec
inc
ja
jp
popa
js
inc
popa
imul
cmp
popa
xor
outsb
addr16
jp
gs
pop
je
dec
imul
jne
xor
push
jns
outsl
jno
jbe
inc
ss
inc
xor
jae
jo
push
dec
jb
pop
push
inc
imul
imul
dec
imul
inc
inc
addr16
outsl
inc
ja
jo
insl
arpl
inc
aaa
pop
jo
dec
data16
push
xor
pop
jae
dec
dec
dec
xor
xor
xor
insb
push
bound
ss
dec
addr16
dec
ss
cmp
jns
dec
push
jae
cmp
dec
jne
jo
dec
insl
push
inc
insl
data16
push
js
dec
xor
ss
jns
push
dec
jns
inc
dec
push
xor
dec
dec
inc
add
dec
jb
dec
data16
dec
dec
addr16
imul
aaa
push
imul
jno
push
jp
popa
addr16
push
jne
imul
dec
outsl
inc
dec
jp
inc
insl
arpl
dec
dec
xor
push
dec
inc
insb
push
push
je
cmp
xor
arpl
xor
insl
outsb
inc
inc
fs
jns
jae
push
dec
push
push
jns
jae
push
bound
push
push
outsl
push
push
inc
xor
js
xor
xor
cmp
dec
push
imul
inc
xor
inc
push
jns
dec
xor
imul
inc
cmp
jae
inc
pop
push
dec
insb
cmp
js
inc
push
pop
jae
inc
push
imul
jp
bound
insb
jp
xor
insl
xor
dec
dec
xor
xor
jne
data16
jp
gs
inc
push
cmp
jp
push
inc
push
pop
inc
push
push
pop
push
inc
js
inc
xor
push
push
arpl
inc
bound
inc
inc
push
push
dec
push
inc
push
xor
dec
xor
popa
insl
fs
addr16
jae
pop
inc
je
push
inc
inc
inc
inc
xor
dec
outsb
pop
aaa
xor
js
ss
js
imul
xor
xor
jno
inc
push
aaa
dec
dec
inc
pop
inc
dec
push
push
dec
dec
pop
inc
dec
pop
arpl
xor
dec
xor
dec
push
xor
ja
push
push
inc
xor
ja
insb
dec
inc
data16
pop
pop
bound
inc
fs
inc
add
insb
outsb
dec
bound
pop
jne
xor
addr16
cmp
inc
dec
ja
imul
push
aaa
push
xor
pop
push
dec
jb
imul
push
pop
outsb
dec
xor
dec
xor
dec
bound
imul
dec
aaa
jbe
push
dec
push
js
aaa
jo
insl
imul
push
dec
pop
outsb
insl
inc
popa
jp
inc
outsb
jns
jbe
dec
push
inc
push
push
push
push
dec
pop
arpl
gs
xor
cmp
jns
dec
push
inc
js
insb
popa
jns
inc
push
insb
push
dec
js
gs
push
inc
jne
jo
jne
je
inc
xor
dec
xor
jno
jb
inc
dec
push
push
pop
cmp
insl
pop
push
cmp
imul
push
data16
push
jns
xor
xor
dec
addr16
xor
jne
pop
ja
push
xor
imul
push
xor
outsb
dec
jbe
xor
push
inc
dec
push
dec
dec
jp
jo
imul
jo
inc
xor
push
outsl
dec
ss
dec
jbe
jns
push
cmp
addr16
push
xor
inc
inc
bound
push
xor
addr16
outsb
imul
jb
jp
aaa
dec
push
dec
jae
xor
outsl
push
jp
push
xor
jo
jne
dec
cmp
addr16
dec
push
push
outsb
pop
outsb
popa
push
jno
push
arpl
cmp
push
push
jb
inc
push
outsl
gs
xor
push
push
inc
jp
push
insl
xor
bound
inc
jo
dec
imul
ss
inc
je
push
push
insb
push
je
push
dec
inc
jne
xor
dec
ja
cmp
addr16
push
gs
dec
imul
dec
jb
js
arpl
dec
push
push
push
aaa
pop
bound
fs
push
jns
outsl
cmp
push
xor
fs
insl
xor
imul
dec
imul
inc
jb
inc
xor
pop
push
push
push
outsl
insb
imul
cmp
xor
pop
push
insl
inc
xor
imul
jae
pop
push
pop
push
dec
inc
dec
xor
outsl
xor
cmp
push
dec
push
push
xor
push
insb
jb
jb
dec
dec
dec
inc
je
gs
inc
push
addr16
imul
jp
inc
bound
push
jne
inc
dec
cmp
outsl
push
xor
cmp
push
inc
push
gs
insb
push
dec
inc
data16
gs
dec
inc
dec
ja
addr16
cmp
push
inc
inc
xor
imul
dec
xor
pop
inc
gs
pop
xor
addr16
xor
jno
push
imul
push
xor
dec
dec
dec
jno
outsl
outsl
ja
dec
jns
addr16
jns
imul
jno
xor
push
insl
push
inc
dec
jno
push
xor
push
insl
aaa
xor
je
addr16
bound
insb
aaa
xor
js
jp
aaa
aaa
jo
inc
cmp
inc
xor
inc
push
imul
dec
xor
ja
inc
dec
xor
xor
jb
inc
inc
xor
bound
outsb
ja
pop
push
push
inc
dec
jns
xor
jae
push
push
xor
inc
xor
