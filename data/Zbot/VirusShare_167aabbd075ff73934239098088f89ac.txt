decl
push
inc
xchg
lea
addr16
insl
stc
call
xchg
or
stc
mov
addr16
call
or
add
xor
stc
xor
mov
addr16
insl
fwait
mov
mov
mov
cmp
call
loop
call
insl
lods
jne
or
insl
rcll
stc
std
mov
mov
adc
addr16
fwait
stc
in
call
std
in
mov
or
xchg
jnp
fwait
aaa
xor
xchg
xor
stc
loop
mov
mov
insl
cmp
mov
cmp
dec
stc
insl
pop
xor
push
xchg
mov
fnstsw
jnp
cmp
mov
fisubrs
movsb
add
or
aaa
test
ds
bound
jnp
fidivl
xor
inc
fwait
fwait
pop
xchg
mov
call
xchg
addr16
mov
pop
clc
xchg
xchg
push
fistpl
in
xchg
loop
ret
push
std
cmp
fwait
mov
jbe
pop
fiaddl
xor
jne
mov
js
addr16
rcrl
push
insl
sub
sahf
mov
or
ss
jnp
xchg
in
sbb
mov
pop
imul
gs
scas
es
imul
push
pop
fildll
jae
rclb
imul
jnp
movsl
sub
lods
mov
pop
shrb
and
pop
in
ja
scas
xchg
lods
fcmovnu
stc
sub
inc
inc
sbb
imul
dec
dec
fwait
sbb
fdivrl
sub
sbb
mov
ficoml
add
ds
cmp
test
pop
mov
xchg
fisttps
daa
aaa
adc
mov
sub
xchg
pop
scas
or
lcall
in
push
push
mov
add
negl
push
push
lea
push
call
leave
mov
sbb
sbb
aad
repnz
and
jnp
loopne
lods
jo
insl
dec
cmpsl
aad
pop
fistpl
int
loop
popl
stc
or
rorb
xchg
pusha
stc
sub
sbb
jo
mov
pop
imul
subl
sbb
and
and
xchg
addr16
adc
loop
fsubr
push
imul
ja
fistpl
adc
pop
ss
call
inc
addb
xchg
push
out
dec
or
fwait
in
push
inc
imul
jo
out
pop
adc
pop
std
lcall
lret
out
lods
cltd
sbb
lcall
shll
jo
jl
add
or
add
jo
loope
and
inc
dec
out
mov
sbb
xor
mov
sub
cmp
add
dec
jae
loope
sbb
cmp
push
fistpl
mov
inc
mov
push
loope
or
sub
cld
data16
cmp
cmp
mov
loop
jns
and
test
mov
pop
or
lcall
xor
push
stos
test
lods
test
mov
dec
or
cmp
sbb
push
scas
sbb
lods
sbb
xchg
push
sbb
xchg
cmp
imul
pop
pop
push
scas
pusha
or
shr
cmp
xchg
aam
dec
jbe
xchg
lcall
cld
imul
sti
out
jbe
ds
fdiv
addr16
mov
outsb
call
push
push
or
push
jb
push
add
push
mov
add
add
xchg
sbb
xlat
sbbb
les
lods
rol
cmp
cld
pop
jae
or
and
push
sbb
add
fwait
movsl
cmpsl
inc
sub
test
sbb
aad
insl
rcll
stos
shll
int
in
das
push
stc
mov
ret
cmp
xlat
shr
ss
jae
cmp
aaa
sbb
adc
adc
fsubrl
loopne
aad
shl
add
inc
jae
cmpsb
cmp
fcoml
pop
push
push
loop
mov
jnp
push
aaa
stc
popf
lock
lods
je
cmp
aas
cmp
jge
aam
imul
lcall
mov
dec
dec
xor
xlat
or
scas
mov
orl
into
jge
cli
mov
shr
aaa
xchg
lcall
inc
pop
or
mov
scas
mov
addr16
xor
push
add
stos
ds
pop
mov
dec
mov
pop
inc
xor
stos
or
fwait
cmc
mov
test
xchg
push
call
sbb
pop
scas
stos
nop
cmp
shlb
xchg
sbb
pop
outsb
aaa
aas
mov
push
mov
push
pushf
cmp
lods
sbb
fisttps
xchg
pushf
xchg
call
das
stc
jbe
jno
subl
or
rol
shl
mov
push
or
in
jge
je
fistps
xchg
mov
cmc
mov
xbegin
jae
shrb
add
call
jmp
add
push
rcr
push
pushl
roll
or
std
jg
sbb
push
add
sbb
add
sbb
inc
jmp
jnp
cmp
scas
and
sbb
inc
inc
scas
idivb
sbb
outsl
xchg
sbb
stos
sbb
jecxz
adcl
loop
push
cmpsb
lahf
xchg
sarl
es
dec
mov
and
mov
test
mov
inc
fisttpl
push
sbb
pop
sub
loop
call
test
dec
xchg
lods
sbb
add
es
popa
mov
xor
inc
or
scas
pusha
dec
mov
pop
insl
cmp
jg
adc
pop
in
sbb
inc
imul
or
rolb
or
aaa
xor
fwait
mov
dec
ror
or
sub
xor
adc
loopne
or
movsb
stos
popa
mov
jp
imul
mov
in
cmp
adc
cld
xchg
jmp
push
xor
mov
xor
or
cltd
sub
mov
imulb
add
lcall
outsl
push
outsb
and
mov
jne
sbb
jae
ss
int
dec
sbb
popa
call
pop
shr
sbb
mov
daa
push
or
in
xchg
push
stc
into
lds
fadds
xor
or
lods
cmpb
cmp
loope
sar
mov
rcrb
in
sbb
add
shll
stc
addr16
movl
mov
jnp
stc
shr
fcmovb
xor
addr16
push
push
cmp
sti
inc
rcll
sti
fistps
sbb
cwtl
sbb
pop
or
stc
mov
fistpl
xlat
lock
sub
les
push
xchg
pushf
and
pop
lock
daa
pop
inc
sub
push
inc
xchg
jae
mov
cmpsb
inc
or
jle
push
out
lcall
sbb
aas
mov
adc
adc
jb
scas
mov
push
sbb
rorl
xchg
mov
lcall
or
xor
fwait
jae
sbb
xchg
popa
cmp
push
sbb
add
and
ret
pusha
mov
iret
iret
aam
pop
jnp
xchg
pop
xlat
insl
negl
imul
enter
call
fcmovne
xor
fwait
iret
mov
sbb
xor
or
lahf
jge
mov
xor
and
lods
pop
scas
cmc
rclb
outsb
cmp
stc
mov
sub
scas
sub
addb
adc
stc
in
ret
aam
call
push
xor
sub
cmp
scas
out
rcr
jg
or
out
inc
mov
xor
leave
sbb
lods
mov
fwait
clc
dec
mov
inc
jae
add
add
mov
roll
enterw
into
rcrl
or
jnp
testb
cmp
in
jle
adc
add
aaa
dec
adc
into
xchg
sbb
mov
xchg
in
adc
in
fistpl
jmp
mov
int3
lods
hlt
add
rclb
or
push
add
pop
add
pop
popf
shlb
mov
push
fnstcw
inc
fcoml
inc
loopne
and
or
mov
add
mov
pop
data16
mov
mov
add
addb
add
loopne
jle
scas
sbbb
rcrb
rorb
inc
ret
rclb
or
mov
shlb
push
ss
scas
data16
sbb
insl
sbb
movsb
cmp
mov
in
dec
cmp
sbb
jle
add
push
pop
xor
cmpsb
gs
dec
push
sbb
fimull
mov
loopne
ljmp
adc
popf
mov
push
pop
xchg
stos
pusha
push
movsl
andb
iret
stc
jp
push
stos
xchg
sbb
mov
loop
inc
fwait
sub
pop
mov
movsb
orl
shl
ror
or
call
xchg
xchg
xor
fsub
xchg
sbb
int
mov
mov
and
addr16
mov
push
rcl
or
pop
xchg
fisttps
addr16
fwait
jmp
pop
xchg
orl
cmpsb
or
pop
fldcw
sqrtps
addr16
inc
out
jb
scas
xchg
jo
inc
cmp
mov
out
mov
insl
xor
jecxz
push
lcall
loopne
ror
fwait
in
pop
rcrl
orb
and
cmp
mov
fnsave
cmp
inc
es
dec
add
and
sub
cmp
xor
jo
adc
loopne
cmp
add
mov
push
mov
scas
out
cltd
fadds
in
nop
fcoml
aas
xchg
inc
add
sub
jg
xor
cli
sub
sbbb
fwait
clc
adc
dec
push
adc
sbb
push
dec
push
popa
adc
dec
outsb
mov
decl
lahf
push
add
adc
push
add
sbb
in
fiadds
add
xchg
iret
push
cltd
addl
clc
xchg
or
mov
mov
fcmovnu
repz
push
add
inc
xor
in
and
lock
push
add
dec
arpl
sar
dec
lods
inc
cld
mov
jmp
dec
and
clc
ds
and
adc
mov
xchg
jbe
aaa
or
or
enter
loopne
jo
jo
add
lods
fnstsw
enter
xor
lods
addl
xor
adc
push
sbb
sub
es
mov
push
pop
inc
mov
push
gs
sub
sahf
aam
jb
xor
sub
add
inc
and
xchg
test
xor
and
out
pop
jae
pusha
rclb
jae
jmp
inc
fsubrl
call
jae
jb
dec
mov
lcall
jne
push
or
rorl
btc
mov
cltd
lea
and
pop
int
mov
pop
mov
add
push
cmp
jle
cmp
lcall
push
pop
leave
arpl
andl
addr16
ret
sbb
scas
mov
daa
pop
xor
imul
jmp
mov
cs
sbb
gs
push
or
lret
push
imul
int3
insl
shl
mov
pushf
dec
and
add
nop
push
cmp
addr16
jae
xchg
xchg
xlat
inc
addb
sub
test
mov
adc
and
adc
add
mov
repz
pusha
xor
xor
ret
out
mov
xor
cmp
lods
dec
sbb
sub
inc
icebp
incl
sub
mov
ret
fcoml
test
dec
jle
out
shrl
push
test
loopne
jl
repnz
mov
leave
inc
call
push
xchg
lret
les
sbb
les
inc
in
mov
push
sbb
mov
imul
mov
hlt
mov
js
sub
call
ss
xor
add
bound
add
rorl
imul
lcall
mov
call
rorl
and
sbb
lea
sbb
clc
lods
inc
xor
sbb
add
push
xor
xor
fwait
or
jne
mov
aaa
push
add
ret
xor
dec
loopne
pushf
add
into
push
dec
mov
xor
mov
push
mov
sub
push
das
iret
sub
mov
aad
or
xor
out
cmp
js
jb
das
xlat
add
mov
add
push
xor
mov
call
ret
cmp
mov
fimuls
pop
add
adc
pop
shll
xchg
or
mov
xor
or
sbb
ret
sub
mov
sbb
mov
mov
add
stos
lcall
mov
mov
or
lods
sbb
repz
dec
dec
in
dec
sub
xchg
scas
movsb
xor
xor
mov
mov
jmp
imull
ret
je
shl
mov
negb
adc
dec
daa
adc
notb
insl
cltd
xor
pop
lcall
xchg
sbb
mov
jmp
pop
rol
std
mov
subl
and
adc
xor
xor
scas
pop
lds
inc
fsubr
push
mov
mov
xchg
mov
cltd
xor
sub
and
pop
in
inc
mov
jnp
fidivl
push
rcll
inc
mov
inc
sbb
daa
push
dec
push
loop
xor
ficompl
pop
inc
jnp
push
push
cwtl
sarl
or
sysenter
insb
xchg
ficomps
add
jne
jo
cmp
lahf
mov
stc
or
scas
adc
mov
mov
add
stc
xor
pop
xchg
scas
dec
mov
lods
add
adc
xchg
imul
pusha
sub
andl
icebp
shll
leave
pop
pop
mov
gs
jae
or
loope
loopne
lcall
mov
ret
sbb
or
mov
icebp
xchg
mov
stos
fwait
stos
inc
into
sub
stc
pop
push
loopne
popa
call
lods
loopne
push
pop
insl
ss
in
loopne
leave
int
push
sub
int
xor
loopne
popw
mov
push
add
mov
mov
add
cmp
mov
add
loope
fmuls
aam
call
push
xchg
push
adc
adc
dec
sbb
add
inc
jg
mov
shrb
jmp
inc
cld
fwait
sarb
inc
les
lods
sbb
push
mov
in
mov
push
and
push
outsl
dec
imul
aas
or
mov
xchg
and
cld
clc
hlt
and
or
and
cli
scas
inc
xor
test
loopne
jp
jns
or
push
mov
outsb
xlat
push
jo
sbb
or
sub
mov
sbb
insl
or
jle
inc
sub
mov
xorl
fwait
into
xlat
or
mov
xor
aad
pop
mov
lods
mov
loop
inc
testb
xor
cmp
aam
in
aad
sub
and
sbb
jb
jmp
test
lahf
cmpsb
imul
dec
adc
and
mov
call
test
or
leave
fdivrl
sub
loop
fidivrl
jb
add
jge
std
xchg
test
push
rcrb
sti
adc
dec
jae
xlat
dec
or
xchg
cmp
es
push
jnp
jo
mov
push
and
fwait
mov
fs
aaa
in
gs
push
or
les
mov
sub
adc
push
fs
add
jae
push
aam
xchg
pop
test
pushf
loopne
push
ficompl
adc
sbb
gs
pop
popf
lret
add
or
out
push
dec
mov
push
pop
jp
adc
mov
pop
or
data16
adc
xchg
inc
mov
fs
sub
adc
aad
ljmp
std
jmp
imul
pop
in
nop
mov
or
hlt
adc
ljmp
pop
cs
lahf
inc
dec
xchg
mov
ss
out
push
fsts
xchg
fimuls
adc
shll
sub
pop
lret
adc
push
pushf
int3
xor
xor
addr16
in
aad
mov
cmp
rcll
add
sbb
fisubl
stc
xor
pop
sub
sbb
add
push
shl
pushw
fisttpl
add
mov
cmp
xor
ficompl
pop
inc
popa
loopne
inc
xchg
xchg
call
or
dec
mov
jle
xor
pop
loope
inc
jae
sbb
and
push
inc
mov
sbb
fsub
divb
cmp
sbb
jmp
pop
rcrl
xchg
pop
stc
ret
cmp
sbb
arpl
mov
hlt
cmp
xchg
cltd
jo
sub
sbb
sub
mov
add
jbe
pop
stc
adc
add
shll
sub
adc
pusha
gs
pusha
xor
push
sti
in
or
jo
dec
inc
xchg
sbb
inc
int
mov
aam
jb
test
mov
es
push
bound
cmc
jmp
lea
mov
push
pop
inc
es
fs
jo
sub
loopne
lods
inc
push
cld
pop
mov
scas
jge
dec
fst
daa
icebp
mov
out
je
repz
jg
sub
out
incl
fmulp
dec
sub
push
xchg
pop
repz
ja
arpl
cmp
cmp
fdivrl
and
or
mov
cmpsb
xor
or
xor
insb
shr
fistpl
xchg
mov
gs
push
je
jp
xchg
sahf
jle
icebp
xchg
popa
cmp
inc
xchg
adc
mov
sbb
test
rcll
and
xor
shlb
iret
mov
and
imul
adc
push
mov
push
cmpsb
xor
fs
test
movsl
jo
sti
mov
mov
fs
adc
cmp
xor
les
sub
sub
add
stos
add
cltd
sub
mov
movsb
out
or
xchg
cmpsb
cs
and
xchg
ror
stos
inc
cs
icebp
xor
mov
loope
add
shr
loope
push
je
insl
loop
fwait
pusha
push
xlat
xchg
jmp
nop
mov
push
push
inc
repnz
mov
shlb
jo
xchg
fistps
xlat
pop
cmp
in
mov
shrd
pop
call
push
test
pop
mov
lahf
scas
stos
adc
mov
cmp
dec
test
lods
push
jae
leave
xor
call
or
call
aad
or
mov
mov
pop
fdiv
adc
ss
mov
add
inc
cld
push
jbe
call
mov
ds
mov
enter
shll
cli
pop
add
mov
jmp
jmp
adc
mov
scas
xor
cmpsb
add
loop
in
je
and
ds
sbb
dec
cmpsb
scas
jb
mov
xor
loopne
lret
popa
push
inc
jnp
imul
pop
mov
sbb
lret
addr16
inc
test
test
int
and
sub
aad
daa
stos
mov
enter
mov
and
xchg
or
dec
mov
inc
mov
jo
xlat
dec
and
xchg
cmp
pop
lods
mov
push
movsb
inc
jl
dec
xor
fcoms
sbb
add
jl
insb
xor
or
enter
loope
sbb
xchg
dec
insb
int
fnstsw
mov
mov
mov
mov
mov
fsts
mov
mov
mov
dec
adc
and
xchg
jnp
out
mov
jg
xchg
std
or
xor
cld
cltd
aaa
scas
adc
fimuls
push
sub
sbb
in
xchg
xor
sbb
push
pop
rcl
xchg
cmp
scas
stc
push
rcrl
scas
mov
cmpsb
inc
xchg
dec
mov
scas
sbb
addb
leave
pop
lcall
clc
or
adc
rcll
xchg
rclb
inc
ljmp
sbb
lods
sub
and
pop
push
addr16
int
loop
cltd
jae
lods
iret
cmp
lods
jp
sahf
xor
lea
pop
int3
push
jb
out
jnp
and
lcall
fnstcw
fiadds
sbb
pop
sub
incl
xchg
pop
and
add
aam
out
or
adc
jg
jne
or
push
hlt
jnp
jae
cltd
push
mov
xchg
test
leave
cmpsl
sub
xor
sti
xor
xor
jnp
jmp
addr16
lods
dec
xchg
aaa
cmp
xchg
addr16
lret
push
imul
insb
aam
xchg
fldl
xchg
popa
test
lret
sahf
lret
sbb
dec
dec
add
mov
or
int
sbb
in
mov
cs
imul
cmc
add
jb
mov
insb
add
pop
pop
xor
pop
pop
push
or
add
mov
loopne
pop
addr16
mov
dec
je
sub
push
add
push
scas
test
int
stc
scas
xor
xor
and
andb
push
jo
mov
ret
inc
push
xchg
add
sub
or
enter
push
fiaddl
jo
push
cmp
imul
sub
pop
out
pop
leave
shl
jo
rorb
stc
stc
pop
rclb
dec
mov
ret
push
mov
sub
pop
add
mov
add
xor
aaa
ss
push
nop
mov
inc
test
mov
cltd
ss
arpl
cmp
or
js
loop
push
lcall
inc
pop
xchg
insl
aaa
lret
mov
cmc
lcall
mov
adc
inc
add
inc
ret
mov
push
lock
dec
std
outsl
mov
dec
cld
mov
mov
pop
cmpl
adc
xor
hlt
pop
jae
rcl
test
or
xchg
pop
add
and
fisubl
in
sbb
data16
adc
pusha
mov
popf
loop
subl
in
dec
hlt
loope
or
inc
xchg
mov
xor
sbb
or
loopne
add
add
add
push
pop
lods
xor
sbb
lret
add
loopne
push
add
adc
sbbl
pop
xchg
push
add
adc
notb
loopne
orb
fcmovnb
mov
inc
pusha
sbbl
pop
shll
xor
lods
andl
add
cmp
dec
fs
sti
xchg
adc
rcrb
mov
mov
and
mov
sbb
stos
hlt
loop
sbbl
rclb
jmp
inc
pusha
arpl
mov
or
pop
sub
out
jmp
dec
mov
addr16
sbb
xchg
xchg
sarb
or
ljmp
jae
xor
scas
sbb
inc
adc
mov
test
pop
rorb
out
imul
mov
inc
inc
mov
xchg
cmp
loop
mov
fs
mov
push
push
push
mov
int
in
push
push
mov
call
in
call
pushl
sub
or
arpl
add
divb
test
add
lret
mov
pop
out
mulps
sahf
cmp
std
mov
call
xor
sbb
mov
jle
dec
pop
xor
cs
dec
sub
out
hlt
and
jo
pushl
xlat
or
cmp
inc
mov
dec
add
imul
inc
popf
ja
pop
adc
and
jo
push
push
outsl
mov
testl
insb
sbb
test
incl
mov
sub
jb
jb
mov
pushf
cmc
aaa
repz
ja
dec
enter
and
jo
and
jg
std
mov
repz
adc
inc
les
fdivl
inc
sub
xchg
mov
mov
inc
das
mov
imul
faddl
je
mov
cmpsl
jg
push
cld
incl
mull
xor
push
xor
pop
js
inc
outsb
call
xlat
call
adc
outsb
jae
and
add
mov
js
push
pop
inc
popf
pop
arpl
add
inc
jo
or
or
push
jo
pop
sahf
iret
popf
stc
imul
cmp
vmptrst
out
out
lret
enter
mov
jg
and
mov
ja
mov
sbb
xchg
sbb
movsl
mov
std
adc
out
push
inc
ficomps
mov
push
cmp
xchg
push
dec
jo
jnp
in
xor
inc
cmc
xor
je
call
pop
inc
addr16
pop
jp
stos
xor
jno
cmp
mov
aaa
jo
lcall
mov
fisubs
lcall
push
push
test
bound
lret
js
enter
mov
sbb
cmp
bound
pop
push
aas
jbe
in
popf
jae
sub
cmp
ja
xor
lcall
mov
mov
cmp
cmp
jne
add
dec
and
push
xchg
jecxz
idivl
dec
cmpsl
jnp
das
sbb
push
xorl
call
and
xor
fcmovnbe
into
xor
cmp
xchg
repz
fwait
std
out
pushf
jno
xchg
outsb
cs
stos
leave
aam
mov
ss
ss
mov
dec
mov
shld
daa
mov
inc
push
mov
push
not
adc
in
loope
call
ja
sti
ja
adc
pop
call
sub
fnsave
adc
ret
jo
inc
data16
add
sub
adc
cmp
aaa
jo
ja,pt
inc
mov
add
sbb
xor
out
cmc
cmp
adc
aas
into
jno
ja
jns
add
push
sarl
push
aam
push
or
cmp
jmp
adc
daa
daa
rolb
aam
cmp
aaa
pushf
push
push
push
test
ja
push
ja
pop
adc
out
dec
add
sub
pop
stos
inc
arpl
icebp
jmp
jnp
mov
mov
jp
or
fistps
scas
and
sbb
push
fstl
cmp
adc
loope
aas
or
sahf
movsb
test
or
jge
mov
jmp
inc
cmpsl
push
dec
in
out
and
negl
lcall
mov
sbb
mov
add
xor
xchg
in
aas
inc
or
scas
xchg
mov
mov
dec
outsl
jno
fistps
insl
add
nop
adc
arpl
les
xor
mov
lahf
inc
push
cmpb
sub
sahf
add
add
jmp
add
std
xchg
xor
imul
jg
mov
or
bnd
mov
xchg
aas
cmp
xchg
out
fcoml
lcall
jmp
std
add
jmp
mov
dec
clc
outsb
call
dec
jne
and
and
hlt
inc
inc
daa
mov
lcall
mov
xchg
mov
push
mov
sti
aas
jae
add
dec
mov
mov
mov
call
inc
sti
fbstp
xchg
jmp
push
fs
push
xor
repnz
fucomi
mov
xor
rcr
iret
hlt
sbb
call
xor
sub
sbb
mov
or
shr
lret
fwait
rorb
outsl
js
dec
jg
or
pop
pop
jo
pop
jmp
pushl
and
adc
cmp
mov
out
pop
and
inc
push
sbb
or
jbe
sar
or
jge
ds
out
sub
data16
push
mov
mov
je
cmpb
sbb
lahf
hlt
fbstp
sub
lret
jl
cltd
push
pop
ljmp
push
loope
addb
das
pushl
incl
adc
insb
xchg
aam
sbb
andb
aas
xorl
in
fdiv
gs
jge
lahf
jae
xchg
push
mov
outsl
pop
and
cmc
dec
sub
popa
in
pop
jae
jg
jl
xchg
xor
clc
mov
add
dec
aas
sbb
icebp
into
push
cmp
dec
xlat
call
jl
cli
or
roll
pop
and
loope
pop
movsb
out
jnp
adc
les
lret
mov
dec
sbb
clc
jmp
and
adc
xor
das
xor
jo
sbb
jg
add
ja
js
test
iret
fidivrs
dec
test
add
test
popf
gs
add
sbb
mov
fldenv
jl
nop
repz
mov
mov
out
jp
adc
xchg
inc
sbb
mov
or
lock
iret
std
xchg
std
xor
sbb
aad
mov
out
mov
adc
add
sub
mov
xlat
ja
jl,pn
roll
mov
xchg
fistpll
lods
mov
dec
pop
fistps
add
jne
sub
jg
mov
push
pop
pop
mov
sbb
lock
cmp
jae
call
xor
and
jmp
data16
pop
jp
clc
shll
xor
lea
mov
idiv
fucomi
jp
fs
insl
stos
jne
push
dec
fistps
int
push
popf
mov
adcb
and
xchg
mov
icebp
fimuls
or
add
mov
test
ja
stos
pusha
sbb
int
fsubr
repnz
jecxz
lcall
push
popa
adc
mov
sub
jne
cmp
cmp
daa
into
lret
mov
inc
cmpsb
sub
std
inc
jp
jbe
pusha
xor
aam
mov
adc
or
and
dec
sub
pop
jmp
jnp
sub
leave
fcmovnb
jg
cld
arpl
or
inc
ficoms
sarb
pop
jmp
mov
inc
ret
cld
imul
mov
jl
jp
imul
or
ret
push
loopne
mov
add
and
dec
cld
aas
test
sub
fldcw
dec
sbb
mov
lcall
inc
out
fdivr
out
pop
sbb
jecxz
sub
dec
js
dec
rcrl
push
shr
pop
inc
test
mov
xchg
in
iret
cli
popf
add
adc
cltd
call
mov
in
idivb
iret
cmp
or
jb
cwtl
int3
fxch
mov
jle
jp
into
pop
ljmp
rolb
test
incl
out
loopne
pop
imul
out
push
or
fisubl
cmp
jmp
call
xchg
mov
inc
pop
and
lcall
ljmp
daa
jle
xor
pop
scas
clc
pushf
fwait
push
fsub
inc
add
das
jmp
decb
addr16
in
cs
dec
scas
clc
xor
mov
mov
mov
ljmp
out
lds
adc
mov
out
icebp
and
jecxz
pop
cli
mov
filds
mov
sti
xor
aaa
sub
mov
sbb
xchg
jle
jg
sti
fnstsw
xchg
lods
lea
aaa
push
xor
and
cmp
fdivl
loopne
jo
jecxz
xchg
mov
lea
mov
fcomp
decl
mov
ss
movsl
sti
push
pushl
into
movsb
sub
in
lret
add
pop
sbb
iret
rcl
xor
sahf
insl
mov
push
das
jmp
lea
push
jno
and
jnp
xchg
adc
test
rolb
mov
incb
mov
enter
test
fsts
decl
cwtl
bsf
mov
adc
ljmp
add
add
cmpsb
dec
xor
mov
fwait
cmp
push
pxor
cmc
xor
insl
test
test
sub
xor
icebp
insb
mov
xchg
jmp
inc
fbld
cwtl
cld
mov
iret
out
push
lock
outsb
test
inc
adc
sub
jnp
jne
imul
ss
jl
out
aam
out
jo
inc
pop
and
dec
jae
jnp
mov
in
xchg
and
xchg
call
call
mov
andb
call
xor
call
sbb
fnsave
mov
jle
fst
mov
jle
mov
mov
inc
cld
iret
jecxz
sarl
pushl
lods
and
push
sbb
dec
gs
popf
sti
mov
loopne
jns
in
mov
mov
sub
int3
lret
xchg
lds
jmp
jno
nop
lcall
or
cld
mov
and
lahf
mov
pop
repnz
nop
repnz
mov
ja
dec
adc
mov
popa
jle
inc
lcall
inc
ljmp
mov
pop
cmpsl
lahf
jg
jl
mov
inc
add
xor
hlt
cltd
mov
clc
ljmp
cwtl
mov
fbld
sbb
sti
mov
inc
xchg
push
outsb
add
mov
inc
in
pop
jle
or
dec
ficompl
imulb
sar
movsl
fstpl
jb
sbb
lret
ss
sub
cmp
lret
dec
popw
mov
nop
pop
or
shl
fbld
xchg
cmp
cmp
xchg
cmp
sub
fadd
lods
cmpsb
mov
mov
add
iret
fiaddl
dec
add
or
xchg
xor
or
cltd
out
and
add
aaa
xlat
jle
mov
arpl
push
mov
push
mov
add
arpl
cld
pusha
fcomip
sbb
pop
pushl
scas
pop
cld
inc
mov
in
dec
fdivrl
std
in
pop
mov
loopne
sbb
out
mov
sbb
adc
or
outsb
gs
dec
jp
pop
dec
sar
fistps
sbb
add
mov
jle
push
jge
ja
jg
fidivrl
mov
outsl
jbe
xor
es
js
adcl
hlt
loop
out
call
push
fbstp
imul
pop
pushl
movsb
out
clc
mov
jmp
add
decl
mov
fsubrl
jmp
add
leave
push
sarl
add
sti
mov
add
sub
cmpl
call
jne
xlat
incb
lcall
jg
movsb
pop
mov
hlt
fcmovnbe
cli
lahf
fdivrs
dec
pop
clc
lahf
cli
mov
push
mov
push
push
xchg
mov
aam
ret
mov
setno
loopne
push
sbb
pop
cmp
decb
xchg
sub
enter
xor
cs
leave
repz
cld
shl
pop
mov
prefetcht2
adc
mov
lcall
mov
adc
fists
je
mov
loop
es
loop
or
cmp
rorb
fmuls
sbb
aas
inc
and
in
mov
jb
mov
movsb
lret
inc
pop
mov
mov
push
inc
aam
int
jge
xchg
xchg
stc
or
sub
jge
cld
mov
gs
inc
and
adc
sarb
insb
clc
add
pop
or
cli
xchg
lahf
rolb
inc
push
fildll
adc
int3
mov
add
jp
jmp
lock
out
cmc
and
xor
jg
cli
out
push
sbb
or
outsb
sbb
cwtl
mov
movsb
cmp
or
inc
shll
mov
sti
sub
jg
fidivs
mov
out
push
push
imul
cld
idiv
std
movsl
movsl
cmp
push
xor
imul
negb
out
mov
ftst
sub
jmp
cmpsb
cli
out
lock
lds
sub
ljmp
sbb
push
pusha
fcompl
jmp
pop
push
popf
dec
imul
popa
and
sti
mov
clc
sub
cmp
mov
push
or
jmp
cmp
sbb
sahf
xor
pusha
les
imull
sbb
lcall
mov
mov
adc
mov
enter
adc
push
jmpw
push
mov
jecxz
xchg
jne
ljmp
push
into
xor
mov
push
outsb
arpl
cwtl
cmp
xchg
cmp
fwait
push
mov
fcmovne
scas
outsb
aad
clc
addr16
or
add
jmp
xchg
call
mov
outsl
xchg
mov
push
sahf
mov
dec
icebp
jmp
movb
shlb
mov
div
jno
xchg
xchg
inc
mov
jge
xchg
insl
adc
imul
dec
xor
fcoms
and
popf
sti
dec
mov
ljmp
jp
dec
mov
repnz
jns
and
lods
sti
mov
fndisi(8087
pushl
sbb
adc
int3
icebp
xorl
testl
mov
addr16
lcall
sarl
cmp
fdivrp
and
mov
test
repnz
gs
xor
aas
lods
sbb
test
adc
aaa
jbe
and
ret
jbe
idivl
sarl
xchg
push
out
sub
push
pop
pop
sbbl
jg
inc
cld
mov
enter
pusha
xchg
out
cltd
adc
cmp
pushf
pop
jns
adc
mov
rclb
jmp
aas
inc
mov
jecxz
mov
pop
jo
fistpl
mov
xlat
sti
movsl
sub
jns
sub
popl
dec
cmp
push
call
out
adc
rcll
cmp
adc
add
hlt
mov
sub
data16
loopne
jg
cltd
inc
adc
cmp
mov
mov
mov
inc
mov
lret
push
add
or
rcll
int
jmp
jnp
cmp
out
pop
push
ret
add
pop
or
fisubl
std
out
cmp
loop
cmpb
lret
test
jbe
xchg
push
aas
fsubrp
bound
or
dec
dec
inc
and
jmp
cs
xchg
hlt
fmull
and
cli
inc
repz
lcall
fmul
loope
in
jns
mov
sbb
cwtl
cmpsl
clc
mov
sub
and
cmp
in
ss
add
mov
cmp
iret
pop
mov
xchg
data16
es
xchg
sbb
shlb
push
and
dec
add
add
lods
idivl
lea
call
mov
dec
scas
mov
into
mov
popf
sti
icebp
jne
push
pop
pop
mov
imul
push
test
or
mov
inc
and
jbe
cmp
outsb
fwait
and
fs
negl
sbb
lods
shl
bound
shr
mov
std
lea
dec
icebp
jecxz
jmp
jb
out
std
fwait
call
int3
push
in
sub
dec
add
push
out
mov
shlb
xor
or
cmp
cmp
push
test
dec
mov
inc
stc
mov
sti
and
cltd
cmpsl
inc
insb
cmc
into
add
push
adc
scas
inc
sti
sar
loopne
imul
and
jecxz
scas
pop
mov
sub
lea
cli
lahf
std
scas
dec
insb
out
jae
outsb
scas
inc
lds
xchg
cmpsb
aas
loope
mov
mov
lods
mov
and
fdivs
mov
inc
mov
push
cmp
ret
popf
mov
sub
pop
mov
or
out
ds
mov
and
fwait
jne
xchg
aam
add
adc
or
in
dec
add
fiaddl
lods
sbb
inc
add
lods
mov
sub
aas
ljmp
xchg
pop
faddl
mov
movswl
stos
fiadds
xor
jg
enter
addl
loopne
test
xchg
leave
in
hlt
insl
cmp
cmp
out
imul
and
mov
xor
sbb
push
cmp
adc
imul
sub
dec
cmp
xchg
int
push
inc
sbb
cs
inc
sbb
loop
incw
data16
popf
mov
bound
pop
idiv
jnp
cmp
sahf
ja
sbb
xchg
and
stos
rclb
inc
es
lcall
out
mov
arpl
push
aas
pop
incl
in
scas
std
xchg
jg
lds
lods
inc
call
rcrl
idivl
dec
mov
loop
loopne
jnp
dec
out
and
pusha
je
ja
cli
idivb
push
mov
nop
outsb
negb
xlat
dec
pop
mov
add
clc
inc
jnp
dec
fsub
cmp
sahf
in
ffree
clc
daa
lock
and
mov
or
mov
jg
adc
fwait
dec
xor
dec
bound
mov
mul
jne
cmp
aad
jg
and
test
jne
xchg
mov
jmp
out
jb
xor
xchg
popf
pop
push
dec
std
adc
cmp
mov
setl
pop
sarb
dec
adc
cmpsb
mov
mov
adc
imul
push
or
gs
sbb
xchg
sbb
in
out
push
mov
sbb
incl
xor
js
pusha
xor
clc
arpl
push
sub
add
dec
sbb
aam
pop
lods
insl
add
enter
cli
popl
sbb
cmp
fwait
ss
pop
dec
fistpll
xor
addr16
jnp
cmpl
sbbl
mov
jno
adc
aas
jns
push
mov
jg
inc
test
or
daa
insb
mov
adc
lds
jmp
and
lock
push
pop
test
roll
test
cmp
aad
mov
adc
aas
les
fisttps
push
jnp
divb
pop
in
ret
sti
jmp
push
inc
sub
out
or
cmp
mov
dec
dec
fldl2e
sub
cmc
clc
jg
insl
and
iret
cmpsl
push
cs
cmpsb
outsb
adc
arpl
cli
jno
test
sti
jg
div
cwtl
out
inc
mov
adc
push
stos
lea
ficompl
test
test
daa
xchg
mov
icebp
clc
sbb
xor
ret
or
ficoms
out
fistpll
stos
es
or
jnp
into
sub
call
inc
test
add
mov
cmp
jg
sbb
aam
in
jno
push
ljmp
mov
jno
jg
push
mov
lods
rcrl
xor
out
mov
fs
cmp
pop
cmp
int3
sti
jmp
sub
mov
std
cmp
popf
xchg
clc
xchg
mov
and
stos
push
cli
lahf
pop
test
iret
loopne
xorb
int
les
mov
lock
repnz
cld
lahf
jbe
jge
dec
mov
dec
fcomps
aas
pop
mov
scas
pop
pop
jno
pushf
mov
xchg
mov
nop
push
fstpl
mov
minps
aas
negl
movl
insl
inc
loop
in
pop
fldenv
pop
lret
sar
adc
adc
fstps
inc
mov
dec
mov
xchg
cli
xchg
outsl
addr16
out
inc
jns
jg
clc
pop
mov
sarb
xor
xor
cmp
fisttpll
dec
sbb
fs
sub
fucomip
movsl
or
dec
jb
fsubl
mov
or
jo
outsb
push
pop
incl
xchg
push
sub
fcomip
sbb
add
popa
pop
fs
xchg
scas
pop
mov
xlat
loope
jns
das
sub
push
inc
fchs
mov
mov
ficompl
cwtl
xchg
jbe
popf
addr16
mov
push
dec
mov
mov
popf
into
enter
xchg
into
xor
mov
adc
adc
add
lret
daa
jo
xor
jmp
call
stos
mov
inc
mov
push
cmc
loop
js
cli
jns
pop
fcomip
call
sahf
dec
aas
ret
out
imul
adc
cmp
std
push
movsb
jg
lock
cltd
clc
fstl
mov
icebp
out
fnstenv
pop
pop
lock
push
mov
repz
and
in
xor
push
call
mov
js
or
add
xchg
sbb
fwait
iret
jg
sar
mov
je
scas
mov
xor
ljmp
iret
inc
sbb
je
xchg
pop
mov
mov
xchg
cmpsl
push
fbld
jb
in
stc
sub
stc
rdpmc
or
dec
dec
std
dec
lods
xchg
mov
fcompl
mov
movl
addb
and
jmp
cld
jecxz
sub
js
xor
fmuls
std
fs
clc
dec
mov
xchg
inc
lea
rcll
movsl
jle
mov
aas
out
fs
dec
loopne
stc
pop
outsb
cmpsb
or
call
or
add
push
mov
xor
lea
push
ja
ljmp
push
inc
and
jno
mov
jmp
in
out
xor
sub
xor
add
test
xchg
add
add
inc
arpl
ficomps
pop
jb
inc
into
xor
push
mov
xor
adc
les
in
es
lea
mov
push
inc
loopne
dec
fidivrl
pop
push
xchg
inc
decl
icebp
call
mov
adc
cmp
push
add
dec
dec
pusha
dec
mov
cli
daa
std
cld
out
fldcw
into
lret
std
pop
cmp
call
jge
sbb
mov
xor
mov
in
and
jg
sub
xchg
xor
sbb
xchg
ss
dec
lods
test
mov
jg
jnp
adc
aaa
adc
pop
add
clc
outsb
xchg
dec
jns
jb
fwait
testb
xchg
mov
rcll
pop
jle
jmp
cs
cmpl
aas
xlat
and
jns
xor
jmp
dec
cwtl
aam
stos
jge
loop
dec
mov
push
fs
mov
push
cmp
dec
sbb
notl
lcall
leave
push
mov
adc
cmpsl
idivl
stos
loop
decb
inc
cli
out
aas
out
in
cmp
adc
inc
test
mov
loope
repnz
pushf
mov
jmp
std
leave
and
or
dec
hlt
mov
out
loope
inc
pop
lock
jge
out
adc
dec
sbb
nop
or
adc
mov
out
inc
adc
inc
sub
out
fdivr
adc
testb
sbb
dec
mov
adc
loope
cmp
rcrl
or
dec
jno
testb
mov
out
xchg
scas
sar
aas
mov
sub
xor
mov
sub
std
ja
stc
fisubl
add
aaa
ljmp
and
pop
decl
mov
loopne
stos
fwait
cmp
mov
add
mov
repnz
push
aaa
jo
idiv
sub
test
in
call
repz
rolb
gs
std
ret
lahf
pop
iret
sbb
cmp
int3
stos
push
mov
lcall
pop
lret
fdivl
mov
adc
mov
mov
test
push
push
fistpll
loop
push
push
lock
js
es
cwtl
push
adc
ja
lcall
push
divl
je
ret
jmp
adc
ja
pop
sub
sbb
lret
add
jmp
aad
sbb
pop
push
sub
jae
movsl
cmpsb
mov
xchg
jmp
lcall
and
xor
mov
enter
adc
jne
outsl
out
aas
add
daa
adc
out
test
xchg
mov
iret
or
push
adc
loopne
and
addr16
mov
pop
iret
aad
adc
lock
mov
out
int
mov
idivb
clc
lds
mov
push
push
xchg
mov
xchg
jg
ror
mov
pop
cld
int3
fimull
jmp
ficompl
bound
pop
push
pop
jl
mov
out
repnz
jg
iret
aas
sub
sbb
clc
dec
or
int3
lds
and
xchg
aas
jno
enter
dec
loope
sbb
clc
add
inc
adc
lret
dec
call
xchg
fs
mov
in
xor
mov
inc
in
dec
orb
pop
and
xchg
les
shll
xchg
cmc
in
sbb
mov
shll
jbe
lret
xor
mov
movsb
xchg
shrb
int3
fists
out
das
mov
mov
insl
mov
jecxz
cmp
aas
xor
std
pushf
cmp
sahf
pop
jne
add
xchg
cld
push
lods
add
mov
jo
and
or
push
mov
outsb
dec
lea
lahf
mov
call
scas
and
std
push
jp
jle
imulb
pushl
insb
push
ficoml
ds
test
je
or
sahf
mov
add
xchg
clc
icebp
xchg
cmp
sbb
jl
lret
out
lock
xchg
jne
lock
into
jle
inc
mov
jg
inc
or
xor
lods
lahf
dec
aam
cld
inc
lods
jg
scas
jge
outsb
roll
shrl
aas
mov
pop
ret
imul
cltd
jmp
stos
inc
iret
sbb
mov
and
push
xor
loopne
aaa
daa
xor
adc
jmp
popa
dec
jg
dec
sub
test
dec
pop
cmp
adc
popl
cmp
iret
repz
and
sbb
adc
cld
ljmp
cmpsl
mov
int3
iret
and
inc
inc
mov
inc
push
pusha
cmp
popa
cmc
cltd
mov
scas
sbb
movsl
daa
pop
jae
jno
pop
inc
and
out
fdivrl
cmpl
fsubrs
dec
lods
jne
cmp
jle
jecxz
push
icebp
stos
mov
dec
in
dec
into
dec
mov
dec
push
lds
mov
stos
scas
mov
loop
jmp
mov
push
cmp
push
sbb
shrb
loop
mov
fdivrs
fidivl
dec
adc
mov
add
xor
sbb
filds
jnp
idiv
mov
cmp
add
lcall
imul
fnstsw
xchg
adc
or
bound
ret
mov
inc
cli
into
std
pop
loopne
mov
movsb
shrb
xchg
and
or
pop
in
dec
das
cmp
shrb
and
test
adc
pop
pop
adc
xchg
push
jbe
cmpsl
je
addr16
and
pop
sub
mov
bndstx
add
xor
mov
jne
cmp
inc
sub
ljmp
les
mov
out
push
push
push
xchg
cwtl
lret
push
outsl
mov
lds
mov
sbb
pop
push
xor
fwait
mov
popa
or
ret
push
lods
jp
push
cmc
lcall
pop
negl
leave
jl
scas
adc
pop
call
lret
imull
mov
mov
fcompl
and
pop
addb
call
sarb
dec
out
mov
outsl
cmc
push
push
pop
loopne
jle
jmp
pop
loope
hlt
aas
mov
loopne
std
pop
fistpl
jnp
sahf
push
inc
ror
jle
pusha
mov
xchg
push
fwait
movsb
and
push
jo
and
or
mov
jg
std
push
dec
mov
pop
sub
mov
cmp
ret
jg
jle
sub
cli
mov
loop
insb
jp
adc
push
cmc
maxps
je
inc
adc
xchg
movsl
js
test
add
push
arpl
dec
push
jmp
mov
dec
cmp
rcr
jp
testl
push
data16
aas
ret
movsl
in
and
sbb
jg
mov
push
std
aas
addl
jmp
iret
icebp
pxor
insl
xchg
jg
cmpsl
lret
in
movsb
clc
out
loopne
inc
sahf
or
fadds
dec
imul
int
int
mov
nop
inc
add
sub
sbb
jg
sub
aam
pop
icebp
pop
in
pop
out
lcall
dec
ja
movsb
mov
cmp
xchg
jmp
mov
pop
xor
sub
push
and
inc
inc
mov
dec
pop
loop
scas
out
cmpsl
jmp
add
in
sar
pop
ficompl
jb
test
dec
push
push
out
fbstp
xor
jge
sarl
push
pop
mov
pop
xchg
stos
pop
fistpl
test
push
rcl
mov
add
xchg
mov
mov
fsubrl
cmp
repz
scas
lcall
cli
je
int3
aas
repz
and
jo
pushf
sbb
xchg
out
inc
jge
mov
std
aas
negl
sub
int
pop
xchg
lcall
cli
push
les
xchg
pushf
into
lds
dec
out
pop
push
cmp
out
loop
lahf
aaa
int3
mov
fidivl
jg
add
aaa
ret
out
xchg
push
and
movsb
aaa
mov
out
dec
nop
outsl
cmpsl
pop
movsb
pop
or
adc
pxor
or
inc
mov
int
gs
cmp
ja
clc
sbb
inc
jle
imul
daa
mov
ffreep
jb
das
out
push
cld
stos
out
pop
in
faddl
test
cmp
cmp
mov
dec
imul
mov
jbe
cli
jg
clc
dec
lods
decl
xor
cmp
rcrb
aad
sub
inc
movsb
adc
test
cwtl
push
ljmp
mov
frstor
sbb
mov
rolb
xor
jle
fidivrs
pushf
fistpll
outsb
and
pusha
cmp
je
inc
adc
mov
decl
dec
dec
add
mov
imul
aas
pushf
mov
hlt
pushf
jle
ja
loopne
inc
mov
xor
rcr
jbe
cmpsl
aas
test
push
arpl
loope
cmc
push
test
jg
jg
sub
or
sbb
xor
les
fbld
dec
mov
cmp
push
lods
popw
mov
das
mov
inc
ret
clc
pop
imul
push
hlt
push
insl
out
cmp
inc
lahf
mov
dec
sbb
adc
mov
clc
mov
in
jae
sbb
aas
mov
lret
adc
ja
dec
or
jbe
stos
add
sbb
adc
in
push
sbb
pushf
lahf
cmp
ljmp
jne
push
lock
js
leave
add
js
in
incl
addr16
and
std
push
adc
sub
dec
inc
sub
aas
mov
cmpb
jecxz
inc
cmp
push
jecxz
cmpsl
jmp
mov
add
loopne
fdivr
pop
outsl
jnp
and
out
enter
movsb
push
aam
sbb
jp
ja
mov
fsubrl
ss
outsl
sbb
stc
jle
push
arpl
add
std
dec
mov
gs
xchg
mov
sahf
pop
pop
lods
ja
mov
add
push
clc
sbb
out
jge
jmp
pop
pop
pop
imul
mov
outsl
cmp
cmp
imul
mov
cmpl
aad
ljmp
js
inc
icebp
xchg
mov
adc
adc
test
sti
mov
fstl
push
push
sbb
insl
or
mov
sbb
lock
add
shlb
out
and
sbb
in
mov
fistl
pop
xchg
clc
daa
sbb
xchg
inc
nop
mov
mov
scas
pop
test
add
out
sbb
decl
lods
lods
jge
stc
arpl
inc
in
or
sbb
or
jnp
loope
pop
mov
lock
sti
pop
mov
xchg
and
mov
jmp
dec
inc
mov
daa
cmpsb
in
mov
cmp
mov
cmpsl
adc
sub
stos
pop
ja
or
cmc
fs
add
test
test
leave
inc
sbb
cmpsl
andb
aas
cmp
inc
incl
cmp
or
fisttpll
movsl
dec
sub
jmp
sub
fimuls
aas
add
outsl
and
fcmovnbe
and
jle
push
pop
leave
pushf
cli
xor
jne
leave
ret
lods
mov
jg
das
sbbb
or
xchg
jnp
lret
jge
sub
lock
out
jge
fwait
mov
cli
lcall
addr16
aad
into
lods
insl
or
cmpsb
cld
and
sbb
shl
adc
cld
mov
cltd
and
cltd
dec
lret
fbld
lock
mov
ucomiss
mov
lds
and
mov
sahf
mov
outsb
xchg
sbb
sahf
es
icebp
jle
fidivs
push
jge
or
roll
sub
cmp
mov
clc
pop
andl
mov
jmp
xchg
sub
shlb
mov
inc
pop
jb
adc
cwtl
rcrb
jmp
push
or
in
adc
push
and
jmp
leave
ucomiss
mov
jge
cmp
or
mov
nop
jbe
mov
mov
pop
out
pop
fisttps
shll
popa
shlb
fildll
int3
fmulp
add
and
push
or
xor
les
in
stos
subb
adc
sti
out
lock
enter
dec
fs
or
mov
inc
adc
fsubrs
inc
fistl
lods
in
lret
ja
test
push
dec
sahf
cmp
ret
push
pop
dec
imul
fldt
dec
inc
call
pop
movsb
pushf
stc
pusha
adc
je
aam
in
xabort
ljmp
jg
mov
es
hlt
loopne
or
out
pop
adc
mov
sbb
mov
xor
jg
jecxz
insl
call
decl
jns
bnd
sbb
jo
mov
shlw
push
pop
aas
inc
hlt
stos
arpl
repnz
inc
addl
out
push
jne
push
movsb
out
push
add
pop
add
jae
loope
pop
inc
xor
push
jbe
outsb
jnp
adc
pop
xor
sbb
ja
aam
jp
rolb
loopne
pop
push
cmp
adc
test
test
imul
shr
repnz
adc
mov
cwtl
mov
inc
cs
push
stos
cmp
push
or
call
mov
jge
push
outsl
sahf
adc
cli
mov
sub
mov
or
repz
test
sub
jl
adc
in
sahf
push
xchg
add
dec
xchg
xor
pushl
inc
aas
jle
inc
test
add
insl
shrl
jg
adc
sbb
mov
push
sub
mov
fs
movl
cmp
mov
mov
mov
movsl
mov
je
out
push
addr16
ret
sbb
enter
sbb
xor
jo
call
push
int3
orb
xchg
mov
daa
xor
pop
dec
insb
dec
loope
jb
and
outsl
mov
push
into
cld
dec
sub
movsb
test
and
int3
xchg
idiv
call
mov
call
and
cmp
cli
into
pop
add
lahf
movsl
inc
hlt
or
incl
inc
leave
ficoms
adc
jmp
ret
pop
jae
mov
out
xor
or
ficoms
lret
pop
incl
sbb
xchg
aam
fwait
bound
testl
jmp
mov
mov
mov
inc
jmp
std
xchg
ljmp
add
add
inc
pop
pop
mov
lret
iret
stos
cmp
sub
mov
int3
pop
imul
aas
sbb
mov
mov
push
je
std
clc
jg
mov
xlat
xor
and
and
addb
rorl
mov
push
pop
pop
pop
pop
idiv
mov
lret
mov
cmp
jle
lcall
mov
jne
imul
inc
push
loop
jmp
sahf
push
out
movsl
cli
fadd
push
popf
pop
loop
sahf
inc
aam
jecxz
and
hlt
pop
imull
pop
pop
mov
add
inc
push
aas
add
loope
and
cs
sub
out
out
mov
inc
inc
sbb
imul
xchg
mov
mov
lea
dec
pushf
pushl
aas
sbb
push
fucompp
jecxz
sti
mov
ljmp
lahf
dec
jo
sbb
sub
cmpsl
test
cs
jl
notb
ja
pop
ds
data16
mov
add
jg
clc
js
cli
ss
sbb
or
out
nop
push
incl
loopne
leave
mov
pop
jecxz
loopne
sahf
fs
and
negl
xchg
lea
cld
ret
and
cmp
das
mov
add
pop
pusha
out
and
aam
mov
jmp
push
fistpl
addl
cmp
int
ja
pushl
push
push
gs
imul
dec
repnz
aaa
popa
jnp
ret
mov
fcmovu
outsb
cmp
gs
fiaddl
pop
cmp
fiadds
add
push
pop
sti
rcrl
stos
stc
out
inc
ljmp
dec
pushf
imul
pop
lods
leave
add
out
mov
sahf
or
cmp
or
out
inc
mov
fs
push
mov
cmp
xchg
loope
in
cs
cmp
xchg
pcmpgtw
cld
xchg
push
cmp
lcall
adc
ficompl
cltd
cmp
pop
lock
lock
mov
les
jp
cmp
push
sub
rolb
hlt
inc
pop
popa
leave
jae
pop
popf
sbb
call
cltd
xor
pop
ficompl
cmc
jg
push
pop
ja
pop
or
or
pushf
xor
jo
fldt
jge
adc
arpl
jle
adc
push
popa
sub
xor
sbb
subb
xor
mov
push
out
in
notb
jg
push
cwtl
add
orl
sbb
cltd
and
mov
dec
mov
xor
jmp
int3
cmp
push
or
sub
ret
push
cltd
mov
popl
mov
push
mov
stos
jmp
in
rcl
stos
add
pop
test
push
fisttpll
xor
mov
negb
imul
stc
fisubrl
lahf
cmc
ljmp
leave
sbb
into
int
ja
pop
add
sub
lock
adcl
shrb
insl
and
jg
or
and
into
push
push
sbb
jg
jmp
hlt
adc
insl
mov
aas
jmp
jmp
jne
sub
lahf
dec
roll
xbegin
add
pop
rcll
js
push
inc
daa
hlt
loopne
pop
outsl
cwtl
aad
xchg
add
fistps
or
jb
data16
mov
cs
push
or
icebp
jo
pop
lods
pusha
jecxz
or
ja
jecxz
outsl
cwtl
std
arpl
repnz
aad
xor
iret
lock
mov
pop
js
fwait
push
adc
mov
out
mov
jne
adc
mov
pop
in
ficompl
js
xor
stos
mov
lods
out
icebp
lock
sbb
push
and
sbb
jle
pop
aam
repz
dec
jbe
lea
lods
mov
jnp
sub
fldt
mov
xchg
sub
inc
sti
mov
dec
bound
idivl
cltd
dec
and
and
aas
adc
dec
and
stos
lret
inc
imul
stc
test
push
cmpsl
mull
xchg
jb
cli
push
adc
xchg
clc
test
mulb
jmp
mov
jge
pop
scas
fisubl
jg
push
outsl
jno
aas
cmpsl
insl
lods
lret
rclb
data16
fdivl
mov
or
and
push
push
incb
js
ljmp
loopne
fistps
pop
cmp
or
jae
leave
test
icebp
or
mov
mov
push
xor
pusha
int3
jae
aas
add
mov
pop
push
sub
icebp
pop
mov
pop
sub
mov
pop
daa
inc
sti
jmp
jbe
addr16
sbb
call
adc
add
and
lahf
and
and
mov
movb
adcl
fiadds
sbb
fdivrl
add
test
sbb
mov
inc
pop
xorb
in
pusha
jno
imul
sub
lds
push
push
movsl
sub
jno
std
sub
into
cmc
neg
cli
outsb
push
lods
push
or
jae
out
lock
dec
pushf
pop
jnp
pusha
and
mov
les
decb
repnz
inc
cmp
pop
sqrtps
lahf
mov
xor
inc
mov
cmp
xor
insb
mov
arpl
inc
mov
subb
mov
fstpl
les
lea
call
aas
ja
fnstenv
arpl
je
mov
jns
mov
mov
es
loopne
or
repz
cli
sub
lds
dec
mov
sbb
call
ds
mov
jg
dec
jb
scas
aam
out
ja
sbb
sub
shl
out
jp
call
dec
mov
cmp
adc
in
mov
xchg
push
adc
sub
push
jg
fdivrp
paddsw
pop
js
mov
les
ficoms
std
pop
cli
fldcw
push
ret
lahf
cmp
ja
xchg
sub
dec
push
sbb
mov
add
cld
xor
popf
in
push
fwait
jecxz
ss
mul
insl
inc
jbe
mov
std
dec
xor
fstp
in
lahf
xor
cmp
cmpsb
jge
out
or
or
ret
test
repz
orl
inc
fisttps
pop
mov
xchg
popa
ss
clc
cmc
cmp
jne
or
xchg
hlt
clc
mov
sub
mov
xor
ljmp
push
dec
lahf
je
scas
dec
imul
push
jecxz
or
repnz
sti
daa
arpl
fisttps
addr16
adc
and
aas
push
pop
cmp
push
shl
mov
xorb
sahf
mov
loope
jns
inc
incl
scas
hlt
xchg
in
stos
repnz
cmp
out
into
mov
mov
jne
mov
pop
pop
or
dec
cli
dec
mov
repnz
lds
cld
aaa
add
mov
fnstenv
ret
xchg
js
ud0
jge
inc
cmpsb
call
in
fdivrp
jecxz
outsb
popf
cmp
cmp
push
jle
pushl
sub
add
adc
mov
dec
repz
imul
push
adc
daa
sbb
jg
cmp
cmp
and
daa
in
inc
jecxz
aad
or
adc
adc
loope
aas
lods
sarb
dec
mov
aas
add
xchg
in
push
test
adc
movsb
shlb
adc
sub
sbb
cwtl
fiaddl
lods
xor
mov
rclb
fdivrp
pop
sbb
jg
loop
sub
adc
aas
inc
jmp
mov
test
jo
subb
addr16
jp
mov
shlb
icebp
sahf
and
inc
out
dec
sub
sub
incl
jns
mov
mov
cmp
repz
fdivrl
outsl
mov
je
mov
pop
lcall
sub
daa
in
cmp
pop
and
push
arpl
push
cld
mov
adc
xchg
lahf
mov
ja
clc
pop
or
incl
test
cmp
in
adc
stc
cli
clc
or
aas
sbb
inc
fisubrl
jle
test
out
xchg
xlat
mov
adc
pop
out
pop
gs
mov
out
cmc
mov
hlt
cmp
add
sbb
mov
jno
jle
pop
sbb
cs
mov
out
cmc
shrl
lods
inc
pop
sbb
stc
enter
testl
xchg
jnp
or
sar
fsub
sbb
pop
imul
out
cltd
loope
test
cmp
push
adc
jg
std
ljmp
jns
cmp
call
or
sbb
pop
std
rorl
daa
or
jnp
mov
sahf
mov
mov
ja
push
cltd
in
adc
lock
pushf
jmp
daa
push
adc
aas
jmp
and
cmp
int
repnz
xchg
pop
jno
fwait
push
adc
leave
jns
shl
ljmp
idiv
pop
lods
or
sti
je
dec
insl
jae
in
jp
mov
mov
lcall
mov
dec
ret
outsl
mov
inc
inc
cmp
dec
fsubr
xor
ljmp
and
inc
push
lock
not
test
xor
decl
push
and
dec
inc
xor
imul
fndisi(8087
fs
lcall
aas
clc
add
aas
xchg
inc
sbb
push
inc
lock
mov
dec
idiv
mov
xor
inc
sub
pop
movlhps
fbld
not
orl
les
jle
cld
mov
ljmp
clc
pop
and
repnz
dec
mov
mov
mov
lods
in
movsl
mov
rorl
aam
idivl
pop
xchg
dec
jbe
cmp
xchg
push
xlat
lcall
jnp
xchg
in
and
adc
and
sarl
push
aas
xchg
mov
mov
psubb
push
xchg
jp
fwait
sahf
movsb
mov
ja
fidivl
xor
sub
out
push
js
pop
test
mov
xchg
mov
imul
mov
lahf
mov
sub
and
xor
cmp
and
stc
ds
jae
xchg
push
imul
pop
bound
fwait
cli
push
mov
adc
fildl
sub
out
sub
negb
int
jl
cmc
cmc
mov
xor
or
ljmp
sbb
adcb
test
ljmp
ds
dec
adc
call
mov
and
icebp
sar
mov
jg
imul
jno
lock
dec
hlt
xor
jae
lock
and
les
cmp
jecxz
inc
xchg
adc
mov
iret
adcb
movsl
sbb
mov
add
daa
adc
shrl
lret
out
inc
std
xor
enter
mov
idiv
int3
and
icebp
sbb
insl
adc
cld
push
cld
pop
add
scas
rcrb
sbb
ja
out
outsb
cli
fldl
mov
jg
or
or
dec
aas
loope
xor
cmpsb
idivb
jne
shr
bound
inc
jmp
fsubl
fcoml
dec
pop
les
lock
xlat
push
fsubrl
inc
pushf
into
mov
adc
out
repz
out
pushf
icebp
scas
movsl
roll
jne
loope
ret
test
lahf
push
dec
into
xchg
or
jp
aad
sbb
dec
xor
sbb
jo
decl
stos
je
adc
adc
adc
mov
fldl
pop
xchg
nop
pushf
bnd
outsb
negl
test
and
loope
insb
roll
imul
inc
mov
ds
aaa
cmpl
inc
ljmp
push
push
jl
fistpll
xor
je
mov
icebp
bound
mov
mov
int3
dec
cmpb
fildll
lret
fildll
or
mov
jg
movsb
xchg
jp
dec
ds
pop
pushl
push
icebp
idiv
idiv
jg
aad
sbb
sbb
iret
mov
mov
mov
sub
sub
or
in
jo
or
idiv
and
mov
jecxz
stc
adc
sbb
xor
dec
add
mov
push
mov
pusha
mov
mov
jmp
ljmp
repnz
inc
out
cmp
shrl
pop
ja
jecxz
aaa
jge
and
push
cmp
loopne
xor
ja
hlt
ds
inc
mov
add
inc
mov
pushl
push
into
loopne
push
push
outsb
out
dec
lock
insl
sub
mov
push
ljmp
sti
mov
adc
add
sbb
push
or
pop
mov
ret
jae
ljmp
hlt
shlb
cmc
aas
divl
icebp
dec
adc
push
sbb
ret
aaa
sti
xchg
incl
sbb
addr16
pusha
mov
push
movsb
ljmp
imul
push
fucomp
out
mov
xchg
mov
stc
subb
and
daa
popa
ret
pop
dec
ljmp
pop
inc
jmp
movsl
cmp
scas
ds
and
cld
pop
mov
imul
fiaddl
cmp
xorb
xchg
fildll
aam
jg
repnz
jle
in
rcll
clc
out
hlt
aas
dec
mov
lcall
pushf
inc
push
cmp
ret
je
in
mov
jae
cmp
out
icebp
pop
or
ficoms
or
add
out
pop
adc
lods
adc
fs
icebp
out
push
inc
cs
push
mov
sbb
mov
dec
and
add
xchg
loopne
jl
outsl
int
test
xchg
int
fidivrs
movsb
pop
mov
fmull
pop
addr16
into
outsb
pop
lods
inc
test
sahf
mull
push
ret
ffreep
jecxz
loopne
push
dec
pop
sahf
sub
jge
or
aas
repnz
push
fs
sti
enter
gs
jne
rcrb
cmp
fwait
outsb
jo
std
push
cld
push
enter
fbstp
xchg
sub
mov
dec
xchg
jg
fistps
psubusw
jecxz
xchg
and
in
loopne
jg
aaa
icebp
mov
mov
mov
jns
xchg
fwait
dec
jl
rol
sbb
rorl
loope
jp
mov
call
fistpll
out
mov
outsb
mov
retw
fidivs
hlt
or
push
inc
jg
xor
sbb
jl
sbb
push
xchg
xchg
mov
ja
add
outsb
jge
xchg
jne
inc
dec
xchg
aas
sbb
inc
push
das
or
cmpsb
sbb
pop
shrl
sti
xchg
out
outsl
hlt
cmp
inc
dec
cmpsb
movlps
mov
filds
aad
jle
orl
xor
loope
mov
mov
or
shrb
jo
inc
push
dec
add
aad
cmp
dec
mov
jecxz
dec
enter
je
mov
push
and
aam
pushf
enter
icebp
pusha
sbb
mov
lahf
out
int3
cld
loope
std
push
sub
xor
cmc
fdivrl
test
iret
push
jl
in
cli
mov
ljmp
inc
test
sub
rclb
sarb
pop
cld
cmc
cmp
mov
pop
shl
mov
out
or
dec
push
aas
adc
bound
repz
emms
mov
out
test
xbegin
add
orl
xchg
xchg
sbb
in
mov
dec
push
mov
sub
mov
fadds
pop
mov
or
push
decl
rcll
fmuls
mov
sbb
cmc
ja
mov
jmp
stc
dec
xor
sbb
dec
fistpll
fucomip
icebp
std
xor
pop
test
xor
inc
pop
sar
jecxz
ds
aaa
fisubs
xchg
mov
inc
stc
lods
jae
cs
push
daa
fbstp
imul
cli
incl
aaa
inc
jb
sti
adc
movaps
mov
cwtl
xchg
data16
stos
mov
fildll
mov
xchg
dec
xchg
push
dec
fwait
mov
and
call
xor
xchg
lahf
lahf
hlt
mov
rorl
sub
aad
test
lods
adc
enter
xrelease
neg
jmp
les
bound
jg
adc
rcr
sbb
xor
and
jns
lcall
dec
add
jae
loope
sub
sub
mov
lahf
adcl
popf
fwait
call
mov
push
shlb
decb
inc
xchg
inc
lds
mov
fbstp
push
std
xchg
jle
jecxz
add
loopne
insl
mov
jl
cld
loope
arpl
call
lods
out
inc
jb
sti
test
fistpll
and
clc
pusha
jb
add
cmpsl
pop
jbe
aas
shlb
dec
cmp
rclb
jg
lock
push
nop
xor
push
test
popf
mov
addr16
mov
mov
xchg
lea
repz
std
dec
mov
js
sbb
in
mov
call
testl
add
pop
sti
cmpsl
lcall
aad
cwtl
cmp
and
mov
test
lahf
push
sbb
mov
or
out
add
int
mov
and
xchg
sar
push
ljmp
sbb
pop
jmp
loope
repnz
xor
inc
cli
movsl
dec
mov
leave
pop
add
or
pop
nop
mov
mov
sar
xor
ret
cmp
add
mov
mov
xchg
dec
mov
popf
cs
fnstenv
inc
pop
cmp
dec
loopne
addl
add
movaps
sti
sub
call
clc
out
icebp
stc
xchg
mov
pop
faddl
popf
stos
aas
and
inc
xchg
cmc
repnz
ret
sub
adc
jae
add
loop
lcall
mov
outsb
xlat
xchg
sub
xchg
lret
outsb
inc
mov
loope
and
arpl
add
sub
scas
push
dec
pop
jb
push
jecxz
dec
out
mov
arpl
xchg
iret
loopne
js
mov
out
loop
sub
mov
lahf
inc
mov
sub
adc
cs
cmpl
xchg
mov
push
aas
adc
int3
lret
inc
scas
mulb
push
xchg
roll
mov
shrb
ret
mov
sbb
les
je
cld
mov
inc
add
jne
jmp
ds
xchg
ret
incl
int
ret
push
adc
inc
lods
loop
push
mov
addl
cmp
ljmp
jbe
test
mov
aad
add
int3
scas
enter
mov
bound
jae
xchg
repz
imul
push
pop
aas
orl
push
and
paddq
popa
cwtl
icebp
push
into
jno
push
in
cs
mov
adcb
push
mov
sub
jae
adc
cmp
aas
pop
popa
push
imul
fdivrp
cmpsb
jo
clc
js
dec
fstpt
test
pop
and
mov
mov
das
repnz
int
cmp
inc
dec
pop
push
movb
mul
insb
adc
shll
les
cwtl
xchg
and
mov
dec
cmc
loope
cmp
jo
mov
std
inc
es
cmc
sub
ficompl
add
xor
gs
mov
jmp
stos
mov
dec
mov
mov
push
add
aas
inc
cmp
jo
out
fcos
xchg
icebp
inc
jnp
es
iret
stos
jge
stos
lahf
mov
dec
xchg
or
push
jnp
icebp
push
fcompl
xor
addr16
mov
and
cmpsl
add
sbb
icebp
sub
mov
enter
add
std
dec
pop
lock
std
jo
mov
mov
cmc
pop
mov
mov
sub
jge
lods
pop
xchg
out
lcall
out
inc
in
dec
aas
pop
cld
dec
mov
int3
add
decl
insb
movsb
insl
sti
movb
rcrl
leave
and
cld
adc
aas
cmp
loop
inc
jae
pop
sbb
mov
pop
mov
cld
pop
jp
lods
push
lret
and
add
push
lods
lods
sub
aad
scas
nop
nop
add
sti
aas
adc
es
push
adc
jg
ljmp
mov
cmp
andb
ja
jo
daa
jp
sbb
inc
mov
xchg
jno
pop
out
mov
push
mov
test
cltd
inc
test
cmp
adcb
scas
loope
jp
pusha
pop
adc
pop
jl
lret
mov
jp
fs
repz
sub
jne
xor
mov
dec
pop
add
js
pop
and
neg
sub
test
in
push
xlat
xor
jg
cli
mov
ret
ds
sbbl
add
add
jp
int3
roll
push
jnp
popa
and
dec
dec
mov
ret
inc
cmp
stos
add
incl
mov
cld
inc
negb
inc
orb
clc
lcall
pop
je
lret
push
jl
ss
clc
arpl
pop
and
jbe
fisubs
jmp
fdivs
or
xor
jmp
cmp
popa
call
test
movsl
and
lcall
jp
call
xor
jg
mov
in
je
fildll
ret
std
das
ret
out
push
jbe
inc
jl
lods
jge
mov
cmp
call
mov
testb
cmpsl
dec
push
mov
lret
out
jbe
push
mov
mov
xor
add
and
aad
data16
and
in
popa
cmp
pusha
addr16
jnp
dec
fistpll
sbb
ljmp
dec
and
lock
dec
mov
adc
lahf
jo
and
cld
pop
je
or
imul
lock
lods
andb
jge
xchg
test
fisubrs
adc
sbb
xchg
lds
cld
fxch
and
leave
jnp
leave
hlt
push
scas
mov
mov
shlb
imull
insb
filds
push
mov
lea
into
inc
push
mov
adc
in
out
iret
mov
psubq
add
push
std
cmp
mov
data16
movsl
inc
push
sub
into
inc
mov
xchg
xor
les
decb
pop
rcll
cld
fidivrs
or
pop
cmp
mov
pop
std
inc
jmp
mov
dec
imul
ja
mov
mov
ljmp
call
imul
pop
mov
adc
mov
dec
mov
jecxz
jg
adc
leave
bound
inc
mov
loop
dec
fs
add
fsin
sub
test
pop
clc
xor
adc
mov
jno
stc
or
sbb
push
push
scas
and
or
inc
les
addr16
or
mov
imul
and
iret
std
sub
cmp
jmp
cmpsl
aas
enter
imul
and
out
dec
out
ret
and
add
addb
add
sbb
or
mov
ret
sbbb
jge
lcall
aam
cwtl
xor
sbb
fists
pop
push
cmp
and
xor
mov
clc
adc
out
lret
inc
pop
and
mov
test
sub
push
outsb
sbb
inc
sahf
push
inc
push
jge
xor
xlat
mov
mov
xchg
insb
mov
ds
mov
or
sbb
or
out
or
pop
dec
scas
into
testl
mov
sbb
jmp
loopw
dec
pop
cmp
iret
mov
lret
icebp
call
mov
mov
les
mov
incl
pop
jbe
jnp
pop
mov
sbb
sti
out
lock
loop
inc
sub
and
xor
mov
cmp
and
mov
ret
pop
add
adc
data16
mov
push
fsts
decl
repnz
mov
xchg
sbb
mov
arpl
and
ret
add
outsl
xor
sbb
lret
lcall
mov
into
das
pop
ret
inc
mov
in
inc
in
jg
movsb
inc
adcb
xchg
icebp
push
mov
test
ss
repnz
iret
push
add
cmp
xchg
or
orl
clc
mov
sbb
jmp
jle
call
cmp
mov
jge
mov
cld
mov
add
outsb
sub
sbb
mov
xchg
clc
pop
in
mov
out
pop
adc
mov
or
pop
hlt
mov
xor
mov
jno
je
adc
mov
lock
cmc
cmp
mov
roll
arpl
das
and
jg
adcb
dec
push
xchg
jae
je
out
jbe
std
xchg
and
mov
or
pop
sbb
sub
push
push
mov
movsl
push
gs
fldt
aas
ret
js
pop
xor
mov
jmp
xchg
cmp
icebp
sbb
enter
imul
jns
sub
fbld
daa
mov
aas
daa
ljmp
hlt
insl
cli
aad
shlb
cmp
jnp
fnstsw
lock
mov
subl
pushf
jge
mov
std
mov
xchg
bound
aam
push
jb
sbb
jnp
jmp
sub
dec
notl
pop
mov
or
jnp
mov
jno
jmp
int3
inc
cli
in
testl
lods
adc
cmpsl
xchg
add
jecxz
scas
xor
xor
dec
iret
inc
decl
xchg
lahf
es
add
xchg
mov
fucom
adc
lea
stos
mov
cltd
jnp
rcll
mov
push
es
xchg
jp,pt
xor
jnp
cmpsl
push
rcrb
xchg
xchg
mov
adc
inc
adc
xchg
push
out
or
jp
scas
cmp
fwait
cmc
mov
jg
bound
mov
lock
mov
jmp
fimull
jg
add
testl
arpl
outsb
mov
test
adc
and
add
dec
out
inc
jb
jo
stos
jle
mov
mov
ret
fs
pop
mov
imul
shrb
xchg
jle
pusha
adc
xlat
pop
mov
je
or
in
aas
mov
jo
inc
movsl
push
decb
daa
std
arpl
push
ja
movsl
loop
bound
ret
jmp
jl
jbe
std
fucomi
lahf
test
repz
jecxz
repnz
sub
or
jae
out
pusha
pop
call
ficompl
data16
in
jmp
lock
arpl
es
mov
dec
loope
clc
xor
pop
jo
xchg
fimull
cmp
push
mov
ja
pop
add
push
outsb
cs
dec
pop
inc
cmp
jg
jbe
loopne
inc
jg
jg
aas
inc
test
stos
lods
fdivl
push
push
and
lea
lcall
jp
loopne
push
stc
aas
pushf
pop
pop
adc
cld
jne,pn
xlat
mov
jl
adcb
mov
push
mov
xchg
push
inc
mov
pop
repnz
or
aad
je
decb
mov
push
add
lods
add
xor
fwait
outsl
clc
xchg
outsl
adc
push
mov
jl
mul
rcrl
mov
jmp
mov
add
jmp
decb
daa
or
push
add
jne
jecxz
xor
pop
in
out
inc
and
inc
sub
push
stos
xchg
mov
mov
std
mov
inc
ljmp
sub
pushl
pop
cmp
mov
lods
mov
arpl
sub
jle
lahf
xchg
xchg
pushf
push
cmc
ja
cmpsl
fsubs
pop
add
pusha
lret
mov
inc
mov
fnstenv
imul
jnp
out
sbb
mov
loopne
mov
inc
test
ret
sti
out
mov
pop
ljmp
mov
aam
sahf
dec
adc
lcall
mul
sub
data16
add
lahf
adc
adc
dec
sbb
pushf
xchg
pop
ljmp
jb
sub
adc
xorb
out
jg
dec
adc
or
push
insb
dec
add
fucom
mov
fcoms
inc
push
divl
js
xchg
xchg
fucom
mov
pop
push
jp
ret
push
pop
inc
adc
repnz
aas
inc
test
mov
sub
or
push
mov
ljmp
ljmp
cltd
or
stos
sar
jmp
loope
cs
jg
mov
mov
aam
lock
ret
decl
sarb
arpl
xchg
sbb
xchg
mov
or
push
add
sbb
push
hlt
fcompp
xchg
sbb
imul
cld
fcoms
inc
jg
push
and
shl
add
pushl
ja
std
ficoms
cwtl
nop
in
cwtl
shlb
or
push
push
jmp
sahf
lods
mov
movsl
mov
xor
adcl
aad
pop
movsl
rcrl
in
aad
dec
aam
lahf
popa
pop
add
cmp
std
cmp
sahf
cld
add
jnp
in
xchg
lea
lahf
loope
xchg
or
ljmp
lods
sahf
xchg
loopne
xorl
dec
rol
in
adc
out
imul
int
dec
mov
pushf
pop
mov
std
pop
pushf
add
dec
pop
sub
stc
jg
cltd
xchg
inc
sbb
cmp
loop
mov
fisttps
lock
push
ret
and
mov
insb
pop
mov
jg
xor
mov
lcall
in
adc
test
cmpsl
mov
push
pushf
lahf
or
into
sbb
sub
cmp
test
imul
lcall
addr16
pop
push
ljmp
mov
fsubp
xchg
rcrb
idivl
cmp
cmp
subl
stc
sub
sarl
aas
dec
std
int3
push
hlt
mov
not
out
addb
mov
adc
inc
cmpl
pop
dec
push
xchg
idivb
inc
cmp
jnp
sbb
sar
xchg
push
je
call
xchg
or
repz
cmp
cmc
or
adc
xchg
call
hlt
iret
ja,pn
push
sbb
pop
into
xlat
decl
outsl
mov
push
popf
push
out
scas
mov
cmp
jnp
mov
hlt
or
movsl
out
dec
ljmp
jmp
dec
pushl
xor
sub
mov
jnp
movsl
dec
sbb
movsl
push
mov
ds
in
fstp
jne
jnp
jo
hlt
loope
cmpsl
repz
jno
cld
pop
sti
xor
mov
stos
and
add
ret
lahf
js
xor
divb
sbbl
jecxz
cli
xchg
inc
mov
fists
sub
stc
sbb
add
pop
mov
call
xor
mov
loope
pop
dec
test
mov
mov
cmp
loope
out
data16
mov
and
insl
js
pop
mov
jg
loope
adc
sbb
jl
cmp
icebp
cwtl
mov
negb
inc
cli
pop
or
cmpsl
stos
cmpsl
pop
aad
cmpsl
adc
pop
add
lods
mov
daa
push
ljmp
out
xchg
addb
lret
push
xchg
aas
sbb
les
cmp
ja
out
mov
xor
jge
lahf
mov
movsb
popa
dec
addr16
xchg
adc
fidivrl
jno
data16
fdivrl
mov
stos
inc
inc
test
ret
decb
cmp
cmp
jae
mov
out
popf
xlat
jns
int
dec
clc
xor
clc
popl
adc
call
mov
jnp
or
inc
and
fbstp
mov
add
mov
push
jl
push
jg
stos
mov
testb
mov
jg
mov
js
imulb
aam
hlt
push
cli
sbb
xchg
sub
or
data16
inc
aaa
fidivrl
adc
jl
aas
addl
idiv
sbb
push
lods
pop
xchg
cs
lret
pushf
cwtl
fwait
mov
dec
mov
push
clc
jg
decb
ret
mov
and
icebp
ret
ret
std
sbb
mov
fs
iret
and
pop
dec
pop
in
adc
dec
mov
mov
lods
shrl
push
cwtl
push
sub
cmpsb
push
add
push
lahf
sub
xchg
xchg
bound
pushf
sarb
lods
scas
pop
inc
jg
ja
cld
sub
outsl
pop
pop
mov
and
jns
sbb
sbb
mov
movsb
inc
pop
push
jg
clc
jb
cmp
dec
mov
adc
push
popa
loope
jae
jnp
mov
test
jo
cmp
lahf
push
test
push
mov
lds
icebp
and
out
fwait
add
jns
jge
sti
mov
sub
xor
xor
dec
rorl
inc
movsb
aad
inc
jae
or
inc
cld
xor
les
testb
into
inc
add
stos
jge
cs
cmp
add
mov
pop
inc
jo
sahf
pop
sub
stos
dec
fstps
xchg
mov
xor
xchg
in
jbe
addl
test
mov
lods
pop
cmp
push
enter
cmpsl
cli
dec
jg
icebp
fs
call
ja
clc
pcmpgtb
dec
inc
dec
or
add
cmpsb
shll
mov
mov
repz
fsubp
clc
push
js
cld
mov
and
pop
push
es
mov
lea
movsl
inc
mov
ud1
sbb
and
jnp
imul
sarl
dec
les
push
cmpsl
mov
xchg
pop
push
std
hlt
or
fwait
lahf
test
sub
jle
mov
jmp
inc
into
or
pop
faddl
inc
jmp
outsb
out
jo
sar
mov
or
decl
xchg
or
sbb
dec
je
adc
push
in
out
cmpb
sbb
fdivrp
jbe
cs
sbb
pushl
or
pop
xor
push
push
cmc
jbe
sti
cwtl
jg
hlt
hlt
dec
or
adc
icebp
in
adc
ret
and
cli
jne
stc
sbb
jbe
push
mov
jecxz
add
nop
add
xchg
mov
pmullw
jle
les
sti
push
cmp
mov
shrl
shr
jle
cmc
call
xchg
cli
flds
data16
sub
ljmp
lds
xor
punpckhwd
fcompl
add
mov
enter
inc
push
fsub
rep
fisubs
mov
jp
inc
adc
pusha
xchg
into
jge
sbb
scas
ja
lods
pop
push
gs
push
sahf
fdivrp
pop
test
ret
insl
sahf
ss
in
bts
xlat
lcall
lods
sbb
int3
ss
fwait
insb
rcl
and
jmp
js
into
es
js
push
icebp
out
push
cmpsb
mov
mov
xor
in
cmp
out
push
sbb
adc
mov
je
lcall
les
lahf
outsl
out
mov
cmp
ret
mov
sbb
icebp
std
movsl
iret
jle
scas
repz
adc
lcall
fbld
fs
cltd
idivl
inc
dec
sub
aaa
push
sysexit
sti
push
sbb
mov
push
jmp
cli
ljmp
out
xor
fs
ja
ret
fsubr
icebp
cmpxchg
jecxz
repz
int3
cmc
ds
cmp
pop
cwtl
mov
mov
cmp
inc
adc
lock
icebp
fisttpll
ss
sub
call
mov
inc
sub
jle
pushf
or
aas
sbb
fs
jnp
cld
mov
jno
in
mov
lcall
pop
sub
aaa
int
hlt
jo
and
lods
add
dec
mov
mov
dec
adc
decb
or
jbe
or
je
add
and
xchg
bound
cmpsl
int3
popf
inc
sub
pop
cmp
dec
inc
repz
dec
mov
mov
out
push
fistpll
daa
mov
imul
cmpsl
cmp
cmp
es
or
push
cmpsl
inc
jmp
lock
data16
dec
xchg
push
scas
push
jns
sub
idivl
push
sub
push
filds
mov
in
int3
xor
pop
test
roll
sub
jbe
aas
sar
push
in
pusha
leave
mov
pop
and
xor
mov
rcl
push
pop
es
cmc
aas
idivl
mov
sbb
test
mov
pop
lahf
adc
mov
jl
sub
adcl
mov
fisttpl
dec
inc
sti
in
mov
cmp
dec
cwtl
sub
or
pop
inc
dec
out
lahf
enter
jnp
or
out
gs
loop
mov
xchg
das
jne
pop
sbb
hlt
test
sahf
mov
sub
rorb
arpl
inc
push
jmp
rclb
jl
aas
push
jae
xchg
jb
sarl
test
sbb
and
jge
nop
cmp
sub
mov
xor
add
mov
lds
inc
pushf
xlat
jne
cltd
and
lahf
pop
cmpb
mov
lock
gs
mov
cmpsl
in
mov
mov
outsb
movb
ja
and
pop
inc
lcall
lds
sbb
mov
fisttps
push
xchg
faddl
leave
pop
sub
out
mov
xchg
xchg
add
mov
mov
call
out
js
mov
negl
int3
push
and
dec
jecxz
xor
inc
dec
mull
jne
add
pop
push
or
fdivl
shll
addr16
hlt
sub
sbb
pop
in
push
xchg
or
inc
scas
sbb
or
sarb
and
call
mov
popf
ja
push
scas
ffreep
call
cmp
sub
pop
data16
sbb
lcall
inc
movsb
out
popa
filds
mov
sarl
jecxz
movsb
ror
cltd
ljmp
xor
loopne
icebp
stos
jns
pop
cmpsl
mov
pop
jns
cmpsb
jmp
or
push
inc
inc
pop
adc
lods
icebp
arpl
xor
testb
icebp
or
inc
bound
cwtl
inc
mov
lahf
adc
sub
shrb
mov
into
call
push
ret
mov
xchg
inc
popf
ljmp
inc
incl
sbb
pop
jae
iret
sti
out
jo
xor
imul
or
lods
fistps
fcoms
sbb
jae
sti
xchg
aad
mov
inc
or
cld
lock
rcr
cwtl
into
loopne
jne
cmp
mov
jmp
stc
mov
leave
sub
and
or
pop
lock
or
in
pop
ret
and
out
jecxz
outsl
stos
adcb
mov
sti
inc
out
add
push
jecxz
mov
stc
adc
pop
and
je
inc
pusha
outsl
mov
jno
std
ud0
stos
test
lret
or
lock
clc
mov
ret
fimull
or
loop
mov
xchg
pop
imul
in
jg
sbb
fsubl
xor
decl
fcoml
loopne
stos
inc
xor
faddl
xchg
xlat
sarb
xor
dec
notb
push
mov
or
mov
mov
movsl
cld
pop
ds
ds
inc
jmp
mov
dec
das
cmp
and
pop
out
jg
aaa
std
xchg
xchg
jno
or
jno
pop
lods
cmc
iret
push
lds
or
or
jo
testl
jns
andnps
ja
mov
ds
mov
int3
xchg
stc
lea
fisttpll
push
push
mov
or
jmp
fimuls
data16
dec
cmc
mov
out
mov
sub
mov
inc
sub
ret
loop
aas
and
push
rorl
gs
call
sub
dec
add
cld
in
cmp
inc
das
loope
loopne
xor
cmpsl
mull
call
jecxz
ret
xorps
lahf
lock
filds
icebp
adc
push
adc
xchg
sub
bound
push
adc
adc
insb
mov
fsubp
xorl
jnp
popf
arpl
outsl
xchg
cld
dec
and
mov
jle
inc
fildll
sbbl
cld
sbb
lds
pushl
jo
sbb
jo
push
mov
lret
loop
out
mov
adc
sub
and
xchg
pop
and
jl
mov
int3
fistpll
xchg
mov
ds
sarb
xchg
sbb
jno
aas
ret
shlb
xchg
jns
ret
out
xchg
xlat
xor
jg
cmc
xorl
mov
adc
mov
not
add
adc
xchg
mov
and
mov
test
push
mov
sbb
mov
jg
sbb
push
rcr
xor
aas
pushl
add
jno
nop
inc
fdivs
lret
std
imul
cmpsl
pop
fbstp
lock
ja
inc
out
lock
mov
jg
cwtl
dec
mov
xlat
call
mov
sub
lret
xor
cmpl
int
jg
hlt
lcall
jbe
push
adc
sub
adc
or
subb
decb
sbb
movd
shll
out
and
stos
rolb
mov
std
or
sbb
pop
sbb
dec
out
mov
sbb
or
icebp
daa
cmpsb
xchg
addb
lock
xor
or
cwtl
faddl
mov
inc
jge
push
int
divb
out
faddl
push
sub
inc
movsb
add
inc
je
repnz
test
jo
popl
popf
sub
ret
dec
cli
daa
mov
clc
test
ret
popa
sub
add
mov
mov
into
sbb
das
adc
xchg
lcall
mov
cmp
repz
dec
mov
jl
cmp
xor
pop
iret
out
mov
jle
adc
scas
pushl
insb
mov
mov
popa
cmovb
add
jmp
jo
jp
mov
mov
mov
mov
jg
sub
adc
inc
mov
and
adc
outsw
push
shlb
loop
sbb
push
adc
pop
shl
cmpsb
shl
pop
sub
int3
or
pop
jnp
and
push
pop
pop
ljmp
pop
stc
aaa
adc
outsb
mov
jae
ficomps
call
mov
push
addr16
sbb
rcrb
mov
adc
jp
mov
inc
xchg
jp
sub
subb
mov
pushf
aas
mov
aaa
repnz
pop
cli
movsl
pop
idiv
ret
mov
imul
shll
pop
cmp
mov
popa
or
dec
popf
push
call
popa
pop
stc
ret
fstps
lods
mov
std
addl
ror
inc
test
adc
jg
cltd
jecxz
add
loopne
mov
jbe
fucom
mov
mov
daa
xchg
fildl
rcr
icebp
jo
shll
enter
dec
fisttps
cmp
insl
push
inc
ds
pop
dec
stos
movsl
das
cwtl
sahf
mov
decb
xor
sbb
jecxz
or
pop
stos
mov
pushf
mov
xchg
loopne
dec
pusha
cs
fsubl
sbb
mov
bound
jp
xor
sbb
clc
mov
lock
push
mov
pop
cmp
clc
and
jno
jb
fstps
pop
cld
mov
fisttpl
aaa
mov
jecxz
jo
mov
dec
xor
xor
test
sti
cs
aas
mov
push
jg
je
inc
stos
push
and
add
add
sub
aas
mov
inc
jno
stos
in
inc
mov
inc
int3
or
and
jge,pn
ljmp
ja
xchg
dec
inc
fs
mov
ss
pop
sbb
call
adc
out
ret
rcrb
jnp
aas
sbb
xchg
inc
cmpsb
loopne
or
out
fidivrl
dec
stc
and
cmc
icebp
cmpsb
adc
pop
ljmp
fs
cmp
mov
leave
nop
adc
xor
fcmovbe
lds
cli
xor
push
push
cmp
dec
int3
rcr
andl
fldenv
mov
lahf
inc
std
or
dec
inc
jns
into
pop
in
or
push
cmc
andl
cli
shlb
sbb
dec
adc
vpmacssdqh
out
into
out
jge
sub
aam
mov
dec
sbbb
xchg
outsb
or
cmc
cmpsl
xchg
sti
lcall
mov
xchg
xchg
shrl
add
add
loopne
push
cmc
jecxz
push
or
ja
or
jbe
lea
shll
mov
push
mov
jnp
fyl2x
clc
jns
fsub
out
mov
and
dec
data16
push
adc
add
fimull
dec
mov
pushl
out
imull
push
outsl
adc
push
ja
testl
sahf
pop
fs
loope
out
jg
roll
dec
push
out
push
mov
es
mov
fwait
and
sub
push
or
jmp
jl
cld
lds
xor
leave
fmul
addr16
das
jmp
lods
dec
loop
and
incl
and
stos
gs
jbe
mov
popf
daa
adc
incb
push
rclb
adc
cmp
cmpsb
into
cltd
or
xchg
mov
mov
sub
hlt
cli
pushl
fs
push
stos
sub
mov
push
mov
xchg
sar
cmpl
hlt
scas
push
mov
mov
pop
mov
out
add
out
xlat
outsl
cwtl
sarl
ret
pushf
outsb
jne
dec
mov
inc
mov
mov
pop
sbbl
inc
pop
jl
ret
popa
pop
jmp
xchg
cmp
js
lock
loopne
xor
frstor
decl
int3
jbe
mov
jg
shll
lea
ror
jle
mov
mov
jbe
jns
sub
hlt
fisttpll
or
adc
cmpsb
rcrb
enter
cli
ja
sub
sbb
pop
int
popf
stos
clc
add
adc
push
out
lock
ror
jns
enter
jbe
xchg
je
jmp
jg
addr16
xchg
shll
call
adc
das
mov
call
sbb
idiv
adc
out
pop
xor
xor
sub
inc
in
ret
and
movsl
xchg
js
out
test
adc
decl
xchg
push
inc
test
xchg
xchg
mov
insb
or
jo
add
scas
sbb
or
loopne
and
and
jmp
decl
in
jb
adc
pop
outsb
lret
xchg
pop
cltd
dec
hlt
inc
add
in
fsub
push
dec
push
pop
mov
incl
xchg
mov
or
mov
sti
adc
dec
xlat
stc
out
sahf
ret
cmp
inc
rcrb
push
cmp
xchg
mov
sub
into
stos
mov
out
jle
push
and
scas
fimull
fmull
mov
sub
cmc
fldt
mov
lds
incl
mov
dec
mov
shr
popa
pusha
outsb
lahf
and
mov
lods
stos
inc
ljmp
cmp
pop
inc
add
xchg
jle
loop
out
dec
dec
das
cmc
es
pop
lock
cli
lock
cltd
enter
and
add
sub
inc
mov
sbb
mov
testb
cmp
sub
cs
repz
hlt
pop
leave
insl
inc
cmp
xor
addr16
clc
xor
mov
cmc
inc
test
ljmp
pusha
out
pop
sbb
cli
xchg
lcall
mov
jle
ljmp
xchg
sbb
js
scas
popa
movsb
test
add
push
loope
mov
stos
cmp
repnz
sbb
scas
icebp
and
sbb
stc
inc
outsl
pusha
cltd
rcl
decl
incl
mov
std
sar
inc
pop
fsts
xchg
sbb
dec
bound
mov
cmpsb
dec
daa
inc
jne
push
fistpll
or
dec
mov
cld
sub
jae
push
in
lods
fs
mov
mov
loope
test
adc
int
sti
cs
cli
in
sbb
mov
push
xor
xchg
mov
mov
gs
jns
jg
loop
or
dec
cmpsb
incl
cmp
and
ja
mov
xchg
psubq
das
or
and
pop
std
lret
test
pop
rorb
sub
add
add
inc
fnsave
and
out
inc
sar
and
adc
add
inc
sub
pop
incb
dec
add
jmp
adc
push
out
lods
xor
lock
add
bound
add
mov
sub
push
xor
mov
pop
mov
out
sub
test
divl
lret
sub
cld
insb
fdivs
fucomi
stc
aas
mov
adc
push
jnp
mov
push
mov
sti
mov
hlt
jge
fs
cmpsl
push
cmp
sti
jnp
mov
pop
shlb
cmpsb
ljmp
inc
or
ds
test
inc
push
add
les
loopne
rolb
imul
xchg
push
lea
pop
ficompl
sbbb
and
mov
mov
add
push
cmp
pushf
push
inc
pop
sub
xchg
adc
or
ljmp
sub
lods
add
xchg
sub
adc
ss
lds
mov
mov
insl
lods
das
add
rcrl
push
cmp
fildl
inc
inc
or
xorl
sub
adc
add
mov
xchg
addb
insl
cmp
lcall
fwait
push
mov
inc
aas
in
add
add
adc
or
lcall
cwtl
mov
je
rclb
inc
in
pop
add
xchg
mov
mov
in
adc
fwait
loop
inc
stc
out
stc
dec
rorl
insl
xchg
lods
mov
adc
fwait
lock
mov
aaa
or
pop
jmp
dec
insl
sub
cmp
inc
push
add
cld
or
lods
hlt
and
or
mov
std
aaa
lods
ss
aaa
pusha
scas
les
outsb
sub
pusha
sbb
push
lret
fcomps
mov
and
or
mov
popa
push
lea
je
add
fildl
lods
fwait
xchg
xchg
jbe
aaa
stos
mov
addl
and
pop
into
dec
fadds
je
insl
rcl
mov
imul
or
lcall
mov
sub
push
daa
sbb
jo
mov
dec
daa
and
mov
aam
lahf
mov
icebp
fistpll
inc
or
nop
icebp
outsl
cmp
repz
push
lcall
mov
inc
or
addr16
and
mov
or
stc
push
xchg
sbb
jnp
notb
inc
imul
fwait
mov
imul
xor
add
shl
into
xor
xor
jae
mov
cmp
scas
addr16
call
add
lods
xchg
inc
jle
xor
dec
outsl
out
lods
mov
mov
xchg
sub
jnp
xor
cmp
pop
jae
mov
imul
je
repz
and
xor
popa
loop
fcomps
and
adcb
rcrb
adc
lcall
or
pop
push
dec
insl
in
std
jo
rcl
rorb
sub
push
repz
dec
xchg
sbb
lods
sbb
insb
xchg
push
insb
adc
lods
inc
sbb
arpl
add
xor
push
add
pushf
sub
inc
imul
or
shrl
sbb
sarl
ss
xor
xchg
cmp
mov
adc
sbb
fwait
mov
test
inc
xchg
in
lcall
daa
mov
shll
cmp
stos
sub
loopne
mov
test
push
mov
push
negl
cwtl
push
in
enter
pop
imul
outsl
mov
add
data16
or
inc
in
in
pop
xor
shrl
cmp
ss
cld
lahf
call
pmulhw
or
clc
aaa
push
sbb
inc
mov
aaa
xlat
xlat
xor
movsb
sti
lret
push
xchg
dec
stos
outsl
std
aaa
jo
les
dec
adc
add
add
fmuls
ss
movl
push
clc
xchg
test
clc
push
xor
or
incl
shlb
xchg
repz
fidivrl
pop
inc
mov
mov
in
lods
or
pop
sbb
push
push
or
mov
push
adc
pop
cmp
cmpsb
out
pusha
jb
sbb
mov
mov
shl
adc
rcrl
xchg
popa
inc
xchg
rol
lock
inc
cmp
outsl
sbb
add
xchg
add
test
and
jmp
ds
add
or
push
inc
fwait
rorb
in
rorb
int
test
bound
rcrb
and
or
data16
into
xor
push
test
or
insb
mov
lock
jb
sub
shrb
stos
inc
inc
sub
lcall
add
out
adc
xchg
int
cli
xor
cmpb
sub
or
add
shll
scas
and
sub
aad
push
fwait
and
and
cmp
scas
mov
mov
push
mull
jnp
ss
aam
push
xchg
inc
add
insl
push
add
pushf
xor
aaa
sbb
sub
cmc
aam
mov
les
shll
inc
into
ja
mov
and
fmuls
xor
inc
imul
jns
and
xchg
pop
lods
xor
pop
push
pop
mov
mov
sbb
fldcw
sbb
pusha
fsubs
inc
in
hlt
push
nop
cmp
outsl
pop
aam
push
andb
loop
repz
adc
cmp
fwait
lea
in
push
cmpl
add
dec
aaa
cwtl
inc
in
fnstcw
movsl
sbb
mov
dec
xchg
mov
mov
fidivl
sbb
mull
sub
rolb
push
pusha
cs
xor
mov
mov
stc
jo
in
jo
xor
push
inc
shll
rolb
mov
outsb
sbb
dec
out
in
mov
mov
ss
xor
pusha
shl
and
cltd
xor
pop
add
int
cltd
movb
lea
int3
aam
adc
jnp
xor
jne
adc
sbb
js
out
cld
add
inc
imul
scas
sbb
fwait
arpl
arpl
popa
push
push
mov
jge
sbb
jnp
loop
xchg
and
dec
pop
cmpsb
and
push
pop
add
mov
rcrb
addr16
sbb
les
fidivs
cmp
inc
mov
pusha
mov
aad
shlb
stc
xor
or
rcl
sti
jo
lcall
dec
cmp
xor
inc
jmp
sbb
inc
popf
xor
rolb
dec
jo
pushw
shll
mov
inc
test
jl
fcomps
enter
mov
xchg
leave
adc
scas
jae
cmpsb
stc
and
add
subl
sbbb
les
or
xor
xor
ret
and
out
jbe
push
xor
adc
mov
aaa
mov
jge
dec
lods
inc
js
fstpt
out
inc
sbb
loopne
xchg
ljmp
xor
cmpsl
push
mov
sub
jo
inc
inc
insl
lock
xlat
push
mov
icebp
mov
mov
jl
xchg
popa
test
add
loope
loope
sub
mov
add
data16
cmp
hlt
pop
xor
mov
ficomps
jo
jo
in
pop
fcomps
hlt
jb
or
xor
data16
or
lcall
cs
sub
es
and
xor
mov
inc
mov
push
jns
jb
dec
inc
xor
imul
das
divl
nop
mov
xor
test
push
lods
imul
fucomi
insl
cmp
pushf
orl
loopne
or
fidivl
cmp
push
int
cmp
cmp
dec
push
adc
lcall
jge
push
xlat
jne
insl
mov
in
xor
js
fiadds
aad
lods
loope
rclb
push
push
dec
adc
mov
das
push
mov
push
insl
lods
xchg
fldt
sub
or
ljmp
js
dec
sub
jnp
paddusb
imul
cltd
xor
lea
sbb
xor
xchg
mov
inc
imul
jl
push
push
pop
xor
cltd
ret
into
addl
in
cmpsb
xchg
in
sbb
xor
idivb
pop
jge
adc
sub
fnstcw
mov
aaa
add
sbb
and
sub
mov
sub
mov
lods
aam
pushf
add
adcl
flds
std
outsl
add
fcomps
enter
lret
dec
push
mov
fstpt
adc
cmp
jns
mov
and
mov
mov
push
add
or
push
loopne
rclb
lds
xor
push
inc
jae
jg
jns
xlat
nop
xor
shll
sbb
or
je
or
push
xor
jo
mov
jo
jns
mov
out
sub
es
ret
xor
sbb
dec
adc
add
adc
and
xchg
in
xlat
lock
jae
movsl
enterw
sbb
loope
pushf
xor
enter
cmp
lcall
jge
movsl
out
cmp
push
sub
or
fneni(8087
pop
int
pop
jge
cmp
mov
outsb
sbb
add
push
jae
mov
test
sbb
testl
test
shlb
imul
adc
int
jmp
xlat
in
cwtl
jp
xor
xchg
or
cmp
xchg
mov
jmp
sbb
jp
xlat
fsubl
fadds
stc
jo
in
ret
in
pop
push
push
xor
push
cli
or
cmpsb
xchg
add
stc
mov
dec
insb
hlt
stc
call
mov
push
cltd
sub
and
loopne
or
jecxz
popf
loop
jne
push
je
or
xchg
xchg
xchg
stos
testl
pusha
jo
xchg
iret
inc
fwait
xor
sub
and
jbe
stos
or
jl
xor
push
adc
pusha
xor
or
pushf
sti
push
add
mov
sar
jnp
icebp
imul
sbb
add
jns
xchg
fdiv
decl
xor
dec
sbb
sub
mov
inc
sub
daa
clc
xchg
or
sbb
inc
add
movsl
jmp
lcall
gs
insl
xchg
jnp
aaa
pop
push
add
mov
mov
add
xchg
mov
imul
call
add
sbb
test
adc
aad
scas
add
sbb
add
loopne
mov
xor
subb
xchg
cmp
add
stc
scas
or
mov
xchg
push
cmc
sbb
dec
int
add
xchg
push
int
xor
in
push
push
lods
popa
add
dec
test
xor
cmp
sahf
and
xor
rclb
xchg
cmp
push
mov
shlb
or
mov
decb
aas
push
pop
push
cmpsb
pop
ret
add
popa
pusha
or
push
dec
push
jle
aaa
in
mov
fwait
mov
out
jne
cmp
dec
xor
shll
mov
loope
icebp
push
dec
aaa
das
cmpsl
add
andb
xchg
rcrl
in
aam
jnp
inc
fnstcw
push
mov
mov
into
xorl
inc
cmp
or
loopne
sbb
fs
sub
mov
and
jo
push
pushf
push
sub
test
inc
test
out
sahf
addr16
mov
pop
add
push
adc
lcall
jg
mov
and
xchg
adc
pushl
inc
dec
jb
jno
adc
fimuls
adc
mov
mov
add
push
loop
push
inc
push
inc
sbb
insb
xchg
xor
aaa
scas
adc
and
or
add
insb
add
fwait
ffreep
mov
inc
add
sub
inc
sub
cwtl
sub
xor
dec
fs
leave
pusha
ja
push
nop
std
or
add
loopne
push
sbb
je
xchg
cmp
rolb
ss
clc
icebp
sub
fcompl
movsl
push
jg
dec
jno
mov
popa
sti
js
jne
jns
mov
sub
inc
rcll
sub
movsl
pop
or
mov
cmp
mov
lods
cmp
mov
unpckhps
shlb
push
fsubrl
jbe
jae
jo
test
sub
pop
add
inc
jnp
int
or
push
or
mov
and
dec
sbb
popa
push
das
push
test
int3
add
stos
adc
int3
or
cltd
pop
bound
or
jp
sti
rcrb
insl
xor
or
push
pop
in
bound
mov
pop
rolb
scas
fimull
pop
test
aad
push
rorb
subb
push
cmc
sub
mov
xchg
add
push
add
xor
test
dec
sbb
shll
aaa
or
xor
repz
sbb
sbb
cmp
es
mov
xor
xlat
or
cld
std
sub
mov
mov
inc
mov
xor
cs
sub
dec
fsubl
mov
xor
adc
lret
inc
and
adc
sub
xchg
call
xor
aaa
cwtl
test
sbb
in
ret
xlat
inc
nop
insl
jp
aaa
stos
rorb
mov
sbbb
stos
adcl
and
fs
mov
push
push
jge
fsubl
push
sbb
push
mov
out
inc
icebp
dec
rclb
fsubr
push
push
push
dec
adc
jo
mov
loopne
ljmp
jmp
add
cli
adc
rolb
les
xor
ret
mov
adc
sahf
dec
fbld
jbe
push
lock
aam
push
xchg
in
clc
cmp
fcompl
in
xor
xchg
xor
stos
lods
cwtl
push
xchg
xor
dec
jo
xlat
push
cwtl
xor
decl
inc
and
pop
fwait
int3
mov
or
adc
adc
push
out
push
jne
xorb
push
aas
and
mov
and
and
mov
inc
rol
mov
or
dec
xor
mov
add
add
lret
stos
xchg
adc
imul
stc
sub
adc
cli
jp
adc
hlt
mov
push
jecxz
int3
popa
imull
add
mov
rcrl
mov
push
into
xchg
mov
mov
fyl2xp1
cmp
inc
mov
jno
dec
xchg
push
ss
lcall
add
and
xchg
shl
iret
lock
adc
push
add
push
pop
cwtl
xor
adc
lret
sbb
push
mov
addl
adc
mov
xchg
enter
or
fwait
jo
xor
sub
cs
outsl
out
int
loopne
dec
repz
imul
aaa
cld
setbe
xor
xchg
or
stc
in
adc
stos
xchg
add
inc
cli
nop
dec
or
pop
lods
mov
fs
fmul
jbe
inc
adc
pop
stc
push
xor
shlb
decl
dec
test
or
mov
push
out
jp
adc
sbb
pop
jns
loop
cmp
in
cmp
scas
jae
ljmp
sub
adc
inc
and
loopne
xchg
sbb
incl
push
movsl
mov
xor
out
lea
sbb
sti
fiadds
xor
adc
test
int
jno
xchg
xor
insb
btcl
mov
jp
xor
lea
cmp
hlt
push
es
add
int
sbb
dec
fmuls
mov
xchg
push
xchg
int
mov
aad
lods
sub
xor
je
jae
lods
inc
adc
insl
loop
pop
pushf
test
cmp
subl
push
xor
jb
xor
movsl
fwait
or
add
mov
xor
lcall
lret
pop
push
lahf
stc
rolb
out
pop
jnp
or
xorb
xchg
or
cmpsb
add
xor
ja
dec
lcall
jl
mov
jge
mov
mov
adc
rclb
jmp
and
out
jbe
push
outsb
fwait
insl
xchg
adc
xchg
mov
test
mov
cs
inc
dec
stc
jb
pushf
or
popf
jne
add
push
rsm
mov
cmp
push
mov
add
xchg
lds
dec
adc
mov
push
das
xchg
jecxz
movsb
andl
jge
add
push
pop
push
cli
aaa
dec
cs
or
mov
repz
and
xor
pop
pop
inc
fsts
daa
dec
xor
cmpsl
or
lea
addl
loope
or
mov
xchg
adc
inc
adc
adc
inc
mov
or
test
out
xchg
push
pushf
mov
es
add
jecxz
or
dec
cmp
jns
subl
jbe
xchg
rcrl
aad
cmp
push
mov
and
scas
insl
cmp
xor
or
mov
mov
in
lcall
data16
push
stc
in
sbb
hlt
push
mov
test
roll
jne
call
and
lcall
inc
inc
sub
hlt
aam
call
xchg
rolb
mov
lea
ret
mov
stos
andb
scas
scas
dec
test
cltd
pop
xlat
bound
xor
scas
loop
push
jg
xchg
adc
ds
ja
mov
shrb
aad
into
roll
or
add
fsubrs
sbb
cltd
cmp
ljmp
into
rcll
je
dec
gs
int
push
ret
push
sub
data16
add
aas
repz
es
jb
mov
mov
mov
xchg
inc
in
pop
popf
rorb
sbb
cli
jle
xlat
fst
inc
dec
dec
mov
add
lods
push
out
leave
add
lcall
push
pop
inc
jno
shl
sbb
scas
mov
test
add
test
or
ret
ljmp
rclb
xor
mov
pop
sbb
jnp
add
loopne
inc
sbb
pop
scas
xchg
in
hlt
test
mov
cltd
add
fcompl
iret
rcl
pop
les
mov
lahf
cmp
xor
sarl
xor
pop
bound
mov
mov
xor
fwait
lret
lods
mov
jmp
dec
es
hlt
stc
popf
call
add
outsb
adc
addr16
std
sbb
test
sub
adc
aam
mov
cwtl
xor
dec
jle
inc
jmp
stc
xchg
lcall
loopne
mov
push
push
dec
mov
adc
lret
push
mov
je
gs
fidivs
ja
mov
add
fimull
sbb
add
inc
imul
inc
mov
lea
pop
cmp
xor
mov
mov
cltd
jp
aad
or
xchg
in
in
jl
enter
test
inc
jl
fwait
or
mull
cmpsb
mov
test
jge
lahf
sbb
add
push
or
hlt
mov
fwait
and
cs
call
cld
jg
std
stos
pop
pop
lock
leave
arpl
push
push
leave
hlt
mov
fucomp
jg
aas
dec
sbb
mov
dec
jns
scas
frstor
sub
dec
sub
mov
fldt
add
cmpsl
out
push
or
dec
subb
or
mov
and
repz
cmp
pop
mov
push
xchg
mov
jb
xor
std
sub
icebp
loope
jge
and
or
and
pusha
add
hlt
popf
dec
xchg
rcrb
enter
testb
inc
aam
mov
imul
mov
dec
or
mov
sbb
sub
adc
inc
adc
mov
fmuls
in
push
imulb
push
dec
dec
push
jmp
loopne
sbb
dec
mov
cli
hlt
stos
jmp
jnp
sbb
mov
repnz
jb
add
push
cld
pop
insb
cli
add
dec
ret
cmp
jne
cmpsl
nop
in
push
sbb
xchg
push
je
push
divps
push
mov
cmp
ljmp
mov
test
xchg
ret
fs
out
imul
in
es
adc
sbb
and
andl
aaa
push
loope
or
scas
xchg
sub
cmpsl
push
mull
push
dec
int
jl
sbb
xor
pop
imul
movsb
outsl
sbb
pop
imul
or
mov
xor
inc
xchg
xor
xor
or
pop
andl
jno
test
xchg
sub
sub
enter
cwtl
or
mov
mul
mov
mov
push
push
xchg
pop
jmp
mov
inc
hlt
das
pop
add
jecxz
pop
mov
jmp
rep
andl
cmp
rcl
pop
int
fisubrl
push
loop
pop
out
mov
icebp
mov
jb
or
dec
lcall
inc
popf
stc
in
cmpsl
das
cmpsb
xor
mov
fdivrp
sbb
xor
or
adc
mov
mov
loopne
call
fisubrs
mov
cmpsb
ds
mov
pop
adc
out
mov
push
xchg
pop
mov
cmpsb
sbb
dec
and
into
sahf
pop
xchg
or
pop
imul
push
xor
cmc
rolb
test
idivl
inc
repnz
push
cmp
or
cmp
cltd
fdivs
mov
in
rcrb
inc
adc
mov
xor
mov
pop
inc
jae
xor
inc
adc
pusha
into
aad
sub
loop
and
movsl
fwait
push
loope
andb
loopne
aaa
or
ret
pop
xchg
cmp
jle
adc
gs
and
add
jmp
mov
add
xchg
insl
popf
jnp
mov
sti
add
sub
lods
sub
mov
lcall
push
xchg
mov
inc
aaa
data16
push
stos
pushf
dec
jbe
xor
jg
push
sbb
mov
aam
adc
addr16
jo
je
movsl
mov
imul
ret
clc
xchg
mov
xor
int
andl
cmp
loop
test
lcall
pop
imul
cltd
mov
xchg
pop
sbb
scas
sbb
mov
shlb
aaa
jne
xor
or
jbe
xchg
mov
push
jnp
push
lea
xor
pop
xchg
jne
rolb
enter
jae
test
push
add
mov
pop
mov
test
fidivl
jp
pop
rcpps
test
add
call
or
stc
cltd
cmc
push
loop
hlt
lds
jge
lods
das
cwtl
mov
addl
into
adc
adc
test
mov
pop
sub
cmpsb
jne
ret
test
push
pop
xor
jl
mov
sub
cmp
int
sbb
and
sub
sbb
popf
jo
mov
fnstcw
pusha
jp
push
bound
orb
add
pop
adc
cs
xor
rcll
loopne
cmp
jb
sub
mov
mov
es
inc
sub
in
sahf
stc
mov
subl
gs
jb
fsubl
add
pop
cmpsl
pop
or
insb
xor
into
adc
lock
dec
adc
or
cmp
divw
push
lock
add
test
scas
sbb
cmp
mov
repnz
jge
iret
mov
insl
lret
flds
rorl
xor
pop
mov
xor
scas
data16
adc
adc
push
pop
sti
fwait
or
push
push
sahf
sbbl
out
int
pop
xchg
rclb
lret
add
xor
or
loopne
mov
in
inc
test
frstpm(287
xor
dec
mov
or
aad
jge
inc
aaa
mov
sbb
lcall
mov
adc
xchg
fisttpll
sti
sbbl
or
fwait
clc
loopne
test
clc
xor
push
lds
or
mov
cmp
add
decb
hlt
outsl
pop
lods
rcr
push
push
ljmp
xchg
mov
and
fcomip
fcoml
or
negl
lods
sbb
fmuls
fwait
lahf
stos
push
cmpsb
push
mov
or
adc
xchg
stos
pop
loopne
xchg
jmp
push
mov
lcall
ds
cltd
and
int3
push
xor
stos
add
into
add
stos
or
xor
dec
push
cmp
pop
push
cmpsb
jo
xchg
cmp
dec
cltd
jp
loop
cwtl
scas
push
es
or
and
jo
jo
sub
push
out
xlat
call
adc
mov
pop
in
cmp
mov
push
pusha
jo
cld
pusha
mov
sbb
push
test
mov
lret
testb
add
data16
add
daa
and
xlat
sbb
fiadds
jo
data16
pop
imul
sarb
mov
add
clc
sbb
inc
cwtl
push
pusha
jae
sub
stos
sbb
push
add
inc
cld
cmp
xchg
ret
push
sarl
rclb
ret
pop
cmp
mov
and
jnp
aad
sbb
lret
push
in
nop
add
mov
xchg
push
xor
sub
fmuls
jae
mov
push
dec
test
test
fwait
sbb
or
lods
int3
add
add
mov
pusha
fwait
orb
incb
sbb
push
sbb
fmulp
mov
cmpsl
dec
inc
add
mov
outsl
sub
adc
or
adcl
sbb
ja
in
sbbb
adc
pop
inc
push
movsl
push
mov
enter
pop
mov
in
loop
push
xor
push
addb
cmp
pop
jmp
jbe
add
or
mov
or
or
ds
out
pop
push
mov
loope
sarl
fisttpll
mov
push
sub
inc
adc
pop
cwtl
fimuls
and
add
stos
cmp
cmp
cmpsb
add
fwait
pop
cmpsl
pop
adc
stc
rcrl
mov
mov
inc
leave
cmpl
lea
push
adc
sbbl
xor
push
shll
sub
rorb
scas
imul
push
rclb
outsl
xor
inc
arpl
nop
add
loopne
sub
js
lea
dec
data16
pop
dec
ljmp
push
pop
cmp
pushf
das
js
rcll
inc
add
movsl
sub
sub
xchg
or
xor
mov
cmpsb
push
or
push
scas
outsb
push
push
pop
lea
adc
mov
jb
xor
adc
adc
pop
orl
in
aam
andl
cmp
pop
and
dec
xchg
pop
call
sub
mov
xchg
and
cli
ja
outsl
inc
add
cs
int3
pop
sub
call
add
xchg
iret
pop
push
cli
adc
fldl2e
add
mov
fisubrl
loope
test
pop
jae
xor
sub
xchg
andl
adc
xor
loope
inc
rorl
pusha
xor
lret
adc
mov
lock
or
ret
lock
push
popa
pusha
sub
sub
add
add
or
jo
scas
mov
xor
mov
mov
push
jl
pop
mov
icebp
stos
ss
pop
loope
inc
adc
add
xor
cltd
sbb
stc
les
adc
dec
mov
or
jo
sbb
fldenv
mov
inc
pop
mov
ljmp
stc
ss
es
xchg
xorb
mov
mov
xor
lret
icebp
fistpl
ret
stc
int3
mov
gs
data16
push
jl
xor
mov
xchg
mov
mov
push
sbb
push
sbb
push
jnp
fdivs
xor
scas
mov
xor
movsl
dec
pop
das
xchg
in
rolb
std
addr16
xor
sub
scas
push
lcall
adc
sub
es
movsb
loop
jb
enter
ljmp
mov
adc
dec
mov
les
inc
and
push
ret
push
sbb
cmp
aaa
mov
xor
lea
sbbb
cmp
call
add
sar
push
or
cmp
sbb
push
inc
loop
repz
mov
sti
pusha
cwtl
mov
std
push
pop
jne
or
push
jmp
fsts
and
mov
mov
mov
sahf
test
cltd
mov
or
pop
addl
imul
movsl
jo
or
rcll
add
loop
sub
stos
adc
rorl
loope
loop,pn
xchg
clc
into
lock
shll
inc
out
push
push
mov
fldt
xchg
ds
jae
pushf
sub
jae
cwtl
push
jo
mov
pop
jo
cmpsb
cmp
sbb
push
mov
jmp
cltd
fwait
jno
xchg
rcrl
int
xor
xchg
cmp
popa
push
xchg
jns
mov
scas
add
jne
mov
push
mov
mov
jmp
fs
iret
mov
sbb
cli
pop
pushl
mov
mov
sbb
addr16
sbb
or
xor
mov
loop
or
js
adc
lcall
inc
in
adc
xor
mov
mov
xor
cli
rcrb
sbb
add
je
test
mov
rcll
jge
rclb
sahf
loope
sbb
std
xchg
mov
inc
dec
xchg
mov
in
sub
adc
inc
sub
push
pop
ror
aad
lret
pusha
adc
ja
mov
stos
mov
call
scas
push
insl
xchg
dec
shll
sub
in
push
and
iret
adc
into
jmp
enter
jo
adc
adc
pop
rcll
daa
or
js
dec
jb
mov
jle
rorb
pop
sub
mov
mov
enter
jo
jle
fwait
cmp
add
pop
xor
sbb
call
jo
lods
cltd
pop
hlt
insl
inc
jnp
movsl
lret
fwait
pushw
popf
push
jle
adc
push
add
loope
inc
mov
push
and
test
cmp
popa
mov
scas
dec
mov
jmp
xchg
sub
push
or
cmp
xor
mov
cmp
cmp
sbb
inc
inc
shll
xorb
int
jle
sub
xor
test
sahf
jbe
dec
push
adcb
test
in
inc
mov
pop
xlat
loope
scas
jbe
push
out
push
cmp
and
adc
call
sbb
ret
mov
into
push
cmp
adc
mov
ret
jmp
dec
mov
xor
enter
push
inc
xchg
xchg
xor
cmp
sbbl
fs
add
into
adc
ret
push
and
xor
das
outsl
sub
stc
push
pop
int
and
int3
pop
cltd
fadds
xchg
jb
filds
addr16
data16
xor
xor
sbb
mov
aad
add
xor
inc
push
cwtl
jo
mov
subl
shl
sub
pop
mov
sbb
jno
lock
pop
imul
pushf
ds
dec
jo
sub
lock
push
lret
adc
push
mov
sub
test
jp
push
cwtl
or
popf
mov
shr
mov
cmp
icebp
and
inc
xchg
adc
dec
cmp
inc
dec
pop
push
xor
sbb
stos
mov
fisubl
dec
cmp
in
loope
push
xor
popf
xor
int
jp
dec
mov
je
add
rcr
leave
sub
dec
push
add
lock
insl
fwait
mov
out
inc
mov
push
xor
leave
push
cmp
jo
sbb
iret
addr16
inc
jo
xor
cmp
mov
xchg
mov
call
or
dec
xor
in
jge
iret
add
enter
leave
mov
ret
cli
add
push
mov
lea
arpl
icebp
lret
xlat
addb
inc
test
lcall
orb
aam
cmc
push
cwtl
dec
cmpsl
push
pop
adc
cs
mov
scas
dec
gs
stos
adc
and
aam
inc
push
push
cld
xlat
push
or
loopne
les
movl
sbb
call
scas
lret
mov
or
add
push
mov
add
add
inc
jne
pop
hlt
mov
sahf
inc
push
or
mov
sti
in
and
mov
decb
icebp
or
shll
lea
and
sub
push
ljmp
cmp
inc
mov
clc
stos
push
or
orb
push
push
push
xor
mov
jb
cmp
xlat
sbbl
xlat
pop
in
jle
test
xor
push
sub
test
xor
sbb
adc
jae
cs
inc
stos
addr16
in
enter
mov
adc
mov
xor
pushf
dec
int
ret
cmpb
cli
test
lret
xor
fmuls
push
push
pop
stos
inc
xchg
mov
cmpsb
lcall
shlb
sahf
loop
or
xchg
arpl
ret
sub
mov
mov
pop
mov
add
xorl
js
inc
jae
gs
jo
jle
inc
scas
dec
testl
js
test
je
fisttpl
sbb
xchg
out
cmp
sub
outsb
or
rorb
out
mov
or
pop
scas
icebp
push
insl
js
push
sub
pop
sbb
jmp
enter
xor
adc
add
fwait
push
xor
or
sbb
movb
adc
push
test
testb
ficomps
mov
pop
sbb
aas
repz
mov
gs
aas
sbb
push
mov
xchg
cwtl
jb
lcall
sub
mov
stc
ss
cltd
cmp
xchg
sti
mov
jo
loopne
sub
push
push
xchg
fdivrl
mov
aam
pop
dec
and
fs
add
or
xchg
add
ret
mov
cmp
subl
xchg
cmpsl
pop
lret
gs
and
pop
lods
ror
and
mov
loop
lea
lock
push
xchg
mov
pop
scas
cmpb
test
cmp
test
scas
mov
or
push
ljmp
mov
xchg
pop
mov
icebp
xor
add
imul
push
dec
cmp
pop
loop
jno
lcall
arpl
adc
xor
xchg
xor
inc
jae
add
jp
sbb
rcrl
or
mov
dec
push
mov
pusha
mov
jecxz
stos
jbe
inc
cld
fimull
xchg
rol
fstpl
dec
pusha
repz
cwtl
dec
push
mov
add
mov
dec
xor
cmp
jmp
xlat
mov
jle
push
xor
mov
mov
dec
lds
movsl
cmc
sbb
std
aaa
lds
inc
fwait
push
sub
adc
inc
or
fimull
push
mul
pop
lods
dec
inc
push
fsubs
push
ss
xchg
xchg
stos
mov
jae
xor
xor
and
mov
pop
adc
jne
push
sbb
pop
xchg
ret
xor
jp
leave
loope
push
mov
push
push
sub
test
call
mov
adc
leave
loop
es
mov
fwait
ret
adc
or
scas
nop
loopne
dec
and
data16
mov
dec
push
sub
sub
push
adc
andl
cmp
aad
sub
and
sub
dec
cmpsl
pushf
pop
xor
xchg
cltd
sbb
dec
xchg
push
mov
jo
mov
out
cmpsl
mov
cmpsb
pushf
stos
adc
movntq
out
xor
push
pop
js
loop
and
pop
lds
ret
adc
push
adc
dec
loope
mov
mov
scas
dec
dec
test
sbb
std
lcall
jnp
cwtl
xor
lret
cmp
push
jo
sub
cmp
push
pop
sbb
pop
xor
test
push
push
dec
mov
xchg
mov
in
test
pop
xor
and
xor
xlat
push
std
call
aam
out
pushf
sub
and
shll
sahf
push
jo
out
or
testl
inc
add
sbbb
bnd
xchg
push
mov
fdivr
jg
and
sbb
add
jns
std
incl
push
add
sbb
cltd
inc
loop
mov
push
cmp
int
inc
pop
push
loopne
cmp
jmp
xchg
mov
pop
sub
xor
dec
insl
pop
int
das
cmp
insl
inc
pushf
mov
mov
xchg
sahf
push
and
adc
outsl
das
call
cwtl
stos
mov
dec
roll
xchg
add
lcall
daa
sbb
addl
or
mov
or
mov
in
push
mov
push
andl
push
mov
test
mov
lock
int3
pop
loop
or
adc
mov
mov
scas
addr16
nop
and
or
xchg
sub
dec
les
push
lods
insl
icebp
or
mov
into
push
addl
and
xor
mov
pop
mov
sti
xchg
cmp
xor
cmp
insl
jle
pop
test
adc
sbb
sbb
add
aaa
shrb
in
xchg
xor
push
xor
les
or
mov
push
stos
xor
leave
test
mov
icebp
and
outsl
and
sub
sub
into
adc
bound
add
addr16
incl
jmp
mov
mov
fidivs
icebp
cs
adc
pop
sbb
inc
mov
popa
push
pop
or
leave
outsl
rorl
mov
mov
subl
inc
ljmp
cltd
gs
push
pop
rorl
xchg
loopne
xor
and
dec
mov
call
inc
jae
inc
sbb
mov
mov
or
out
fstl
pop
adcl
cmp
hlt
push
mov
scas
mov
es
push
mov
xchg
shlb
pop
jnp
stc
std
jb
add
mov
jae
mov
lret
push
xor
nop
cmp
xchg
stos
fidivl
mov
scas
sbb
adc
movsl
xor
mov
pop
fs
pushf
test
ret
stc
mov
lret
inc
add
mov
aas
xor
pop
sbb
lcall
cmp
mov
sti
pop
sbb
test
test
aaa
aaa
and
adc
pop
or
cmpsl
xor
pop
push
scas
shr
es
sbb
adc
mov
test
subl
ret
push
divb
push
mov
pop
sub
xchg
jb
nop
push
clc
out
lcall
aas
adc
addb
xor
in
aad
aam
pop
push
lcall
loope
adc
test
add
xor
mov
jae
pop
aam
adc
int
inc
push
je
dec
push
jecxz
mov
add
xchg
mov
inc
cs
and
in
xlat
or
cmpsb
ret
adc
xchg
pop
adc
sbb
mov
cmp
daa
rorl
push
sbb
xor
jo
lret
or
rorl
insl
xchg
enter
scas
cmp
hlt
lcall
mov
push
in
add
jge
dec
add
fs
shll
xchg
stos
mov
pop
aad
int3
bound
loopne
xchg
mov
push
mov
add
inc
pusha
mov
sbb
stos
xor
outsb
iret
cmpsb
cmp
mov
jecxz
dec
pusha
mov
clc
sub
shlb
incb
popa
enter
inc
mov
shlb
sbb
mov
arpl
in
add
push
cs
add
push
sti
bnd
andl
rcl
sbb
inc
scas
dec
addr16
out
pop
fs
cmp
aad
jl
sbb
arpl
xor
or
xor
dec
rcll
int
insb
fsubp
mov
jo
pop
xchg
and
loop
add
dec
pop
push
mov
out
jecxz
or
ficoml
jb
adc
call
xchg
mov
int
sub
pop
lea
jb
push
lods
insl
push
jp
aad
push
shll
push
out
push
adc
inc
incl
xlat
ficoml
sbbl
mov
jb
outsb
mov
mov
mov
inc
add
dec
add
and
inc
cmp
cli
mov
je
mov
jmp
cli
pop
outsb
sub
orb
insb
clc
test
jns
adc
js
cmp
push
xchg
das
jo
and
mull
xor
mov
sbb
stos
fdivrs
mov
xor
mov
rcll
addl
rcrl
enter
jg
xchg
sub
daa
mov
addl
or
pshufw
sub
loope
push
sub
sbb
pop
push
xchg
daa
loopne
mov
roll
pop
sahf
pop
dec
popa
add
cmpsb
sbb
mov
int
sub
and
mov
add
push
addr16
enter
push
sbb
pop
fs
stc
add
sbb
xor
arpl
mov
sub
and
jno
xchg
inc
shrb
push
divl
loopne
loopne
imul
jo
or
cmp
and
stos
ret
test
mov
jo
stc
dec
mov
dec
int
mov
gs
loop
imul
mov
loopne
mov
push
xchg
adc
pop
scas
push
cmp
adc
xchg
push
push
sub
dec
ret
adc
add
dec
push
stos
dec
dec
push
add
lret
popf
jmp
pop
test
ret
xchg
xor
jl
mov
mov
pop
std
sub
mov
xor
mov
dec
mov
lods
push
frstor
aaa
dec
add
sub
mov
adc
add
loope
mov
arpl
and
mov
jecxz
ret
add
or
rclb
loope
ficompl
lcall
or
sbb
inc
or
dec
ror
inc
int
push
inc
mov
inc
int
mov
es
imul
enter
cmp
ret
dec
jo
dec
jb
enter
mov
loope
in
adc
xor
dec
sbb
mov
stos
out
mov
pop
scas
daa
aad
xor
pop
fcmove
lea
bound
xchg
jge
rcll
pushl
es
mov
dec
shlb
push
xchg
lret
adc
testb
add
xor
cmp
xor
rclb
push
pop
mov
jne
pop
xor
rclb
mov
mov
xchg
cmpsb
mov
insl
shll
rcr
in
stos
das
ret
inc
push
cmpsl
rcrl
xchg
lret
sbb
imul
add
fs
mov
mov
ljmp
and
ja
or
push
push
out
inc
pop
aam
xchg
ja
aad
add
int
cmp
cmp
push
push
sbb
jno
mov
sbb
call
adc
icebp
add
inc
mov
add
dec
inc
push
push
or
mov
mov
sahf
xor
dec
mov
add
mov
rorb
push
pushf
xor
mov
mov
sub
mov
mov
pop
add
or
sub
loop
clc
or
inc
loope
sub
push
add
lock
and
add
dec
rol
sub
pop
mov
lods
jo
or
sbb
pop
cltd
sbb
lahf
addr16
sub
mov
into
inc
lds
push
addr16
push
pop
pop
sbb
cmp
fs
add
in
xor
dec
add
popa
xor
leave
mov
mov
xchg
sar
add
dec
cmp
mov
mov
iret
adc
push
es
or
dec
js
out
cmpsb
stc
stc
or
push
mov
and
adc
adc
jmp
data16
inc
sbb
pop
popa
xor
mov
cmp
rcrl
test
xorb
dec
call
dec
push
pop
push
mov
jb
mov
scas
jb
push
enter
or
add
mov
mov
adc
add
xor
jmp
cmpsl
pop
loopne
or
lcall
sub
and
cmp
pushf
lret
loope
aas
idivb
nop
inc
push
jno
xor
mov
int
loop
dec
sbb
or
or
xor
or
mov
pop
lahf
sbb
inc
decl
jne
out
xor
ljmp
out
les
jo
push
imul
test
lea
lret
lcall
les
push
lds
add
xor
or
dec
jno
andb
enter
xchg
cmp
push
andb
loopne
inc
cltd
pop
add
jno
push
ljmp
pop
or
push
add
add
dec
mov
nop
lret
adc
in
sub
mov
cmovp
out
adc
or
jo
mov
ret
cmp
cmpsb
adc
cmp
pop
aaa
sub
jmp
push
orl
mov
xor
or
inc
mov
xchg
lods
movsl
push
dec
shrl
sub
sub
roll
push
inc
cmp
fwait
aas
mov
or
int3
mov
test
sbb
xchg
lret
mov
jno
xor
pop
push
mov
aaa
pop
add
or
cmp
ret
jb
xor
sbb
lcall
into
push
ret
rorb
and
xor
jge
add
dec
push
repnz
push
iret
xchg
jnp
stos
xchg
cmp
fistps
mov
stos
add
fnstsw
push
pop
lcall
xchg
or
mov
jo
sbb
ljmp
cmp
test
lahf
pop
mov
in
lds
inc
test
js
push
adc
mov
or
push
scas
loope
adc
dec
and
into
rclb
xor
and
stos
das
cmp
and
cmc
dec
push
shll
or
mov
out
xchg
stos
mov
mov
call
xor
emms
mov
dec
or
push
inc
orl
mov
xor
sbb
pop
cmp
stc
xchg
cmp
enter
xor
dec
pop
cltd
mov
mov
rorl
sub
roll
mov
jl
cmp
and
xor
test
pop
pop
sti
push
and
or
xor
scas
jp
jnp
cs
or
mov
pop
es
pusha
sbb
test
and
sbb
roll
add
xchg
loope
or
push
in
andb
xor
in
flds
xchg
fisubrs
or
es
push
lcall
sub
js
pop
aad
or
and
call
sbb
adc
adc
ret
push
lods
jp
leave
popa
sub
adc
mov
jp
cmp
inc
cmp
lods
cmp
bound
and
insl
inc
movsl
lret
int
adc
lcall
inc
push
mov
sbb
shll
loopne
mov
jns
xor
rcrl
addl
push
imul
test
sub
dec
rclb
xor
inc
or
pusha
enter
xchg
cmp
insl
dec
int
scas
sbb
sbb
fisubrs
scas
faddl
clc
outsb
iret
aaa
add
or
pusha
mov
ret
cmp
inc
stc
inc
sarl
jns
orl
in
shrl
xlat
mov
pop
xor
adc
test
gs
movsl
mov
rolb
dec
push
sub
in
or
inc
jl
bound
mov
xchg
in
inc
push
int
mov
mov
pop
cwtl
dec
sbb
aas
adc
fidivrl
inc
cmc
push
adc
call
sbb
sub
loope
shll
gs
lret
subb
cmp
adc
call
jo
pop
call
xor
std
pop
cmc
push
cmp
les
scas
cmpb
jno
jb
pop
sub
inc
sbb
xor
scas
add
sub
dec
adc
mov
xorb
pusha
pop
push
or
or
push
cmpsb
push
jg
mov
or
push
pop
pushf
xchg
jge
ljmp
sub
imul
test
add
pop
pop
mov
ljmp
cwtl
add
jns
ljmp
xor
inc
sub
sbb
jg
ja
mov
mov
dec
dec
mov
and
out
test
adc
jl
stc
dec
dec
sub
push
mov
mov
xchg
addr16
cli
add
icebp
cmc
jge
roll
pop
dec
loop
das
inc
or
add
jmp
jbe
or
and
adc
xchg
clc
jb
pop
loop
pop
stos
mov
fisubrl
push
jne
sbb
inc
sbb
add
movlps
inc
or
movsl
pop
jne
pusha
insl
push
addb
jmp
or
push
cmpsb
dec
das
add
shrl
test
jnp,pn
or
add
sub
stc
test
addl
andb
rorb
xchg
cli
pop
push
mov
push
add
mov
jo
inc
arpl
lret
push
jnp
push
mov
push
cld
outsl
jo
and
je
lret
loopne
xchg
bound
addb
popf
xor
int
xchg
scas
cmp
mov
add
add
and
call
inc
cs
lods
or
adc
addb
jp
jl
popf
sbb
sbb
cmp
ret
std
pop
rolb
mov
xchg
xorl
rclb
insl
in
pop
xchg
lret
aad
lahf
aaa
sub
mov
push
mov
sub
jae
add
pop
lret
mov
mov
lds
pop
sub
lahf
mov
push
mov
shll
push
inc
mov
movsl
push
mov
out
pusha
ret
js
mov
sub
and
cli
lds
xchg
cwtl
xchg
inc
mov
or
dec
dec
pop
or
pop
cmp
repz
dec
xor
loope
stos
sbb
sub
mov
aas
lret
rorb
inc
mov
push
ret
pop
inc
jne
xor
mov
rcrl
and
push
sub
lret
call
jg
out
ss
mov
xor
xor
jo
stos
popa
jno
clc
adc
lods
enter
ret
mov
psrld
call
inc
pop
pop
test
add
adc
scas
mov
or
in
in
hlt
mov
xor
or
push
adc
inc
loopne
and
out
lret
or
inc
and
bound
test
aad
add
adc
in
xor
addl
sub
js
push
sub
lret
out
mov
ja
sub
sub
or
loop
pop
inc
das
test
xor
mov
daa
or
mov
xchg
loop
clc
mov
int3
addb
xchg
xchg
mov
xchg
jns
mov
add
jo
lods
sbb
inc
cmp
pop
xchg
mov
xchg
add
je
dec
pop
es
dec
jno
sbb
scas
inc
popf
xchg
sub
sbb
insb
call
push
push
es
aad
pop
js
or
add
pop
loop
mov
and
imul
adc
ds
test
loop
or
scas
mov
xchg
lret
idivl
cmpsb
inc
push
cwtl
daa
xor
test
push
add
dec
aam
sar
or
faddl
movsl
dec
sahf
mov
push
mov
push
adc
jmp
mov
hlt
xchg
fsubp
mov
xor
stos
sbb
xor
sbb
push
xchg
lret
inc
jnp
push
aas
jnp
push
push
or
mov
in
mov
xor
aad
add
adc
xchg
lret
aad
call
inc
scas
sbb
mov
sbb
mov
ljmp
xor
and
loop
mov
adc
mov
gs
push
pop
cli
ss
ret
or
sbb
hlt
or
or
lahf
std
je
sub
adc
and
sbb
inc
pop
mov
mov
jge
je
xor
fsts
out
test
mov
add
inc
jae
push
ret
sub
xlat
cltd
lcall
loopne
cmpsb
jo
mov
mov
and
fiaddl
xchg
xor
pop
addr16
call
in
sahf
sub
and
subb
push
jg
jb
out
xchg
xchg
pop
jns
in
xchg
mov
adc
inc
xor
insb
add
popf
inc
push
push
jae
popa
je
aas
cmp
je
scas
xorl
shlb
mov
xchg
mov
adc
fwait
or
add
mov
jnp
in
pushf
mov
and
popa
mov
push
xchg
idiv
dec
mov
adc
sysenter
xorl
sti
jno
or
pushf
popl
cld
or
push
push
es
shl
in
les
sub
je
xchg
sub
push
int3
cmp
sub
jp
sub
adc
adcl
pop
xlat
inc
cmp
mov
test
insl
call
shlb
sub
mov
mov
add
popa
gs
jb
cs
test
out
dec
lcall
add
mov
push
repnz
and
jmp
push
or
cmpsl
por
mov
mov
shrb
add
add
fmuls
mov
inc
aam
repnz
and
cmp
pop
sysexit
addr16
fs
jno
push
and
nop
jecxz
jae
push
pop
push
or
in
and
push
test
iret
push
ret
xchg
and
cltd
mov
xor
sbb
fnsave
mov
sbb
sbb
fcmovb
jge
mov
sbb
sbb
js
adc
in
scas
aaa
inc
out
adc
lcall
jp
pusha
rolb
lcall
cmp
pop
mov
out
xorb
incl
inc
push
sub
loopne
cltd
cli
cmpsb
data16
adc
sbb
inc
xchg
and
jmp
pop
jo
inc
aas
push
popf
orl
push
xchg
in
leave
stos
js
fldenv
inc
std
or
push
lcall
xor
inc
in
fsubrp
inc
aas
or
stos
in
or
sbbb
addb
sbb
adc
xor
jb
out
or
inc
sub
xor
out
femms
aam
lret
inc
loope
in
jns
loop
into
in
hlt
lcall
mov
call
fdivrs
and
cmp
sbb
fcomps
lock
in
jns
ja
add
dec
leave
push
das
push
add
bound
add
or
fsubrs
sub
mov
xlat
and
pushf
add
xchg
jae
scas
insl
cmp
ss
fcompl
es
push
lret
int3
jle
scas
or
push
loopne
arpl
add
mov
dec
sbb
shll
lret
inc
pop
push
add
mull
jmp
sub
xor
add
int
sub
hlt
and
xchg
sub
or
loopne
hlt
popf
mov
imul
add
lods
xchg
sti
add
jmp
xchg
xchg
xor
cmpsl
pop
mov
cltd
stos
adc
xor
mov
in
daa
test
xor
loope
adc
mov
xlat
dec
and
and
or
push
loop
lock
push
cmpsl
mov
mov
fnstcw
pop
or
int3
lret
ds
inc
xor
ljmp
xchg
mov
push
xchg
push
sbb
mov
adc
in
jle
push
popa
add
sbb
xchg
add
pop
adc
adc
xchg
scas
lods
add
push
cmpb
cmpsl
stos
les
pushf
jae
pop
sbb
scas
cltd
sub
push
es
ret
test
lret
or
mov
xchg
cltd
roll
adc
mov
stc
stc
pop
push
or
xor
sahf
cmp
mov
loop
add
andl
lcall
mov
adc
push
aad
imul
mov
cmp
mov
or
or
das
mov
stos
inc
cli
test
inc
xchg
insl
cwtl
pop
xchg
or
add
and
cmp
sub
adc
sbb
mov
aad
adc
xchg
sub
push
sbb
push
mov
repz
pop
shrl
mov
pop
insb
int3
mov
mov
cli
fiadds
dec
xor
int3
pop
ret
sub
mov
inc
lock
das
add
shrb
scas
addb
jne
inc
in
adc
mov
jg
jae
inc
and
xor
aad
add
pop
inc
sub
add
mov
sti
test
adc
jno
mov
adc
mov
and
out
std
mov
sub
pop
sbb
add
dec
call
mov
mov
cmc
or
add
std
imul
cmpsb
xor
fwait
clc
cs
or
push
clc
and
dec
mov
inc
push
sti
mov
push
test
inc
add
ss
aas
enter
or
jmp
sbb
loopne
push
sbbl
ljmp
aad
xor
inc
movl
cmpsl
nop
scas
pop
das
pop
cmpsb
jmp
adc
cmpb
pop
pusha
rolb
xor
test
push
pop
and
add
js
pop
cmpsl
ret
add
mov
mov
cmp
cmpsl
enter
pop
stos
lcall
insl
int
inc
or
fs
add
pop
jo
adc
dec
movsl
cs
cmp
enter
mov
mov
push
mov
clc
push
lds
in
mov
or
orb
push
movd
dec
test
inc
daa
lods
pushf
sbb
mov
xor
pop
popa
mov
add
xchg
icebp
addr16
rcr
add
xchg
xor
mov
fwait
xor
push
mov
sub
loopne
add
shlb
mov
or
mov
xchg
push
test
cli
int
cmp
mov
jne
gs
push
or
rorb
xchg
test
arpl
stos
inc
lock
lods
cltd
js
add
fstpl
or
cmp
lcall
push
into
out
xchg
inc
inc
popa
jo
mov
loop
shrl
mov
in
cmp
adc
stos
fcom
dec
insb
ds
mov
xchg
sti
ds
addr16
mov
or
add
jle
test
rclb
les
and
mov
movsb
cmpsb
pop
loop
imul
adc
sbb
aaa
xchg
mov
push
inc
sbb
or
lods
ja
pop
jp
bound
pushl
fisubrs
sbb
adc
incb
testl
jo
adc
insl
mov
add
cmp
adc
les
add
jle
imul
cwtl
ret
jmp
mov
out
pop
ja
shlb
mov
push
sti
pop
neg
adc
aaa
add
jnp
cmovp
ret
repz
pop
push
cmpb
cmp
ret
fs
int3
add
ret
inc
mov
mov
cld
inc
faddl
mov
in
sub
mov
testb
mul
push
sub
pop
xor
cmp
mov
incl
rcrl
sbb
push
pop
popf
cmc
push
enter
rcl
rcrl
inc
adc
js
add
pop
pop
lahf
mov
ret
out
cmp
jnp
xor
jne
cltd
push
rorl
push
scas
andb
push
add
push
xchg
mov
call
jb
adc
nop
mov
iret
les
bound
jb
sub
ret
addb
sub
mov
jne
mov
lea
sbb
sbb
sub
cmpsb
out
or
push
xorb
add
push
and
stos
jo
push
jo
cmp
cmp
mov
cwtl
inc
sbb
lock
adc
xorl
je
imul
xor
stos
fwait
sbb
or
xchg
mov
sub
in
fdivrl
xchg
and
push
cmpsb
dec
mov
cmp
out
inc
add
add
adc
mov
adc
out
jp
pop
loopne
inc
lods
sub
sbb
xchg
enter
push
adcb
imul
and
pop
jl
xchg
ret
and
mov
xchg
mov
or
add
push
scas
sub
mov
add
add
ret
lret
push
push
pushf
lods
lds
stc
out
fldcw
mov
or
or
sbb
mov
fwait
push
std
push
ja
jecxz
mov
push
loop
int
into
mov
imul
rolb
scas
js
addr16
roll
pop
jo
inc
pop
mov
test
mov
or
or
push
pushf
jmp
loopne
cmp
cmp
out
dec
call
mov
scas
nop
cmp
push
cltd
mov
add
mov
pop
in
push
lcall
test
push
out
wrmsr
push
lea
fwait
bound
addr16
push
es
inc
xchg
in
out
into
inc
push
pop
call
or
mov
jp
mov
or
cmp
jb
mov
shrl
jo
or
push
cmp
or
xchg
clc
jbe
or
mov
mov
xchg
add
scas
imul
xchg
dec
rol
out
xor
test
and
add
push
mov
mov
aas
or
xchg
enter
rcll
inc
mov
push
dec
nop
subl
add
pop
xor
imul
xchg
jp
enter
adc
push
mov
inc
int3
jbe
push
mov
inc
adc
push
add
inc
jae
sub
fisttpl
or
push
xchg
mov
and
mov
sbb
roll
sbb
shrb
fldlg2
popf
icebp
add
xchg
xchg
push
arpl
sub
adc
insl
int3
stos
jae
sbb
in
sbb
and
lahf
or
insl
icebp
sbb
sahf
fidivl
fs
push
mov
mov
adc
mov
loop
inc
div
enter
stos
xor
add
or
jg
xchg
add
insb
or
xor
add
sarb
fs
push
mov
xchg
pop
popa
mov
mov
xor
sti
and
xor
sbb
js
push
xor
or
xor
jl
or
stos
pusha
lret
out
mov
xor
enter
pop
lock
push
adc
mov
dec
lcall
in
sbb
inc
adc
orl
rolb
or
jb
xor
lahf
and
sub
aam
adc
sbb
data16
in
cmpsb
es
insb
das
stc
sub
lret
sub
loopne
push
push
mov
enter
pusha
addr16
les
xor
and
lcall
sub
add
add
xorb
pop
sub
icebp
sub
cs
jge
in
or
or
or
andb
mov
lods
mov
sbbl
push
jecxz
outsb
fists
cmp
sbb
inc
or
adc
pop
push
mov
xchg
sub
mov
add
pop
lds
and
gs
test
jno
xor
push
add
test
inc
lahf
add
pushf
fsubl
out
jle
mov
push
sbb
add
push
push
and
xchg
std
mov
in
pop
imul
data16
add
hlt
iret
inc
in
push
adc
in
jge
mov
or
push
push
out
jecxz
imul
add
aam
loopne
sub
cs
xor
in
mov
jo
sbb
cmp
push
aaa
fcomps
push
add
js
bound
cmc
add
xchg
xlat
push
sbb
pushf
lahf
loop
aaa
jo
lods
push
enter
inc
das
add
lret
pop
scas
mov
or
rorb
loop
mov
adcb
lret
fs
xor
fs
mov
or
add
pop
psubusw
xor
pop
cmp
fbld
sub
inc
mov
fs
pop
cmc
push
add
push
ret
or
cmc
cmpsb
loope
adc
dec
test
jb
lock
push
push
test
add
sbb
push
add
std
lcall
cmp
cltd
cmp
cmpl
or
inc
mov
rolb
sub
imul
lret
popf
pop
lret
pop
pushf
int
xlat
push
in
cmp
aam
xchg
add
pop
test
push
adc
push
xchg
push
adc
push
call
jmp
stc
and
repnz
adc
mov
popf
push
inc
rolb
arpl
mov
xchg
or
test
or
ret
js
jg
push
mov
fs
pop
mov
and
pusha
sub
pop
mov
leave
xorl
push
jge
loop
cs
push
mov
scas
shll
mov
loopne
add
out
pop
xor
xor
mov
rolb
enter
xchg
mov
inc
xor
icebp
fs
sub
ret
inc
mov
subb
mov
addl
push
aas
xor
xor
add
pop
xchg
jns
push
sbb
pop
daa
mov
xor
sbb
mov
jp
and
nop
test
es
xchg
hlt
je
movsb
stos
cmp
daa
stc
daa
xor
sbb
movsl
sub
sub
push
movsb
pushf
mov
lcall
push
mov
add
push
inc
xor
jae
dec
mov
ret
jo
pop
pop
mov
ret
addb
pop
push
sbb
mov
push
arpl
aam
ret
adc
rclb
pushf
mov
out
pop
les
hlt
cmpsl
sub
mov
jns
push
inc
cs
ja
jns
sbbl
dec
stos
fwait
adc
push
dec
jecxz
xchg
add
push
dec
loopne
pop
pusha
xor
add
pop
adc
test
sti
push
fs
dec
xchg
test
jns
mov
mov
fwait
xchg
cmc
out
lcall
iret
pop
add
sbb
add
fsubrs
ret
inc
xlat
shlb
roll
and
repnz
xchg
or
add
xchg
cmp
jnp
xchg
add
xchg
push
sbb
push
xchg
sub
popa
xor
dec
in
push
or
filds
cmp
cmp
mov
jnp
push
sbb
pusha
mov
or
scas
sub
bound
daa
push
mov
or
aam
rolb
pop
loope
in
cmp
xor
and
xchg
lret
jmp
mov
adcb
lock
ret
je
sar
std
sub
cs
jns
xchg
pusha
sub
hlt
stos
push
adc
push
jb
adc
inc
cs
hlt
les
jnp
xchg
in
in
adc
stos
pop
mov
xor
pusha
loop
jae
int
flds
scas
push
jnp
pop
nop
adc
add
subl
jae
inc
push
stos
sbb
es
sbb
cmp
or
test
add
and
jecxz
imul
sub
pop
loop
sub
in
leave
adc
cmpsb
or
cmp
in
lods
push
xchg
ret
mov
mov
mov
jecxz
mov
adc
push
cmpb
aaa
aaa
andb
leave
jae
xchg
decb
inc
or
lret
adc
fisttps
inc
jno
dec
and
pop
cld
push
je
sahf
sub
push
ret
mov
sub
xor
sbb
mov
ret
xor
xlat
sbbb
pop
jmp
sbb
aad
fwait
fwait
xlat
aam
mov
adc
and
pop
cmp
sbb
test
in
repz
add
jo
push
mov
aaa
push
mov
imul
cmp
stc
push
in
lock
dec
cli
xchg
pop
lahf
adc
pop
push
dec
pop
lock
lahf
loope
ret
push
std
lods
pop
std
or
cs
shlb
stc
xchg
inc
scas
mov
jo
mov
add
loopne
jo
push
jnp
fdivs
in
fs
push
add
enter
sar
pop
pop
fsubs
inc
cwtl
inc
rolb
xchg
ret
xchg
mov
lcall
imul
push
inc
int3
xor
rorb
dec
cs
in
xchg
pop
repnz
dec
lods
adc
pop
gs
mov
push
xor
nop
sbb
push
iret
push
mov
xor
push
push
notl
add
imul
test
inc
sahf
outsl
nop
sub
push
jo
or
xor
dec
sub
pop
pop
adc
lret
roll
rorl
fidivl
fs
ss
rolb
rolb
std
mov
std
out
cli
xlat
rorb
dec
dec
xor
xor
inc
dec
je
fwait
in
lock
xor
clc
adc
test
add
insl
aad
es
sarl
push
andb
shrl
fimuls
push
mov
mov
lcall
inc
push
scas
cmp
data16
xor
stc
frstor
xor
insb
enter
inc
pop
pop
or
cmp
add
ljmp
pop
mov
push
cmpsl
lcall
inc
sbb
add
jmp
add
adc
data16
sub
add
cmpsb
fmul
loope
sti
xor
push
xchg
loopne
pop
repz
addb
mov
hlt
cmp
jo
jo
mov
and
cmp
test
dec
dec
dec
jg
pusha
js
mov
and
add
in
dec
jecxz
mov
testb
mov
push
rcrb
mov
loope
test
mov
add
rcl
jl
sbb
mov
add
jo
or
jg
push
or
cltd
out
aaa
xchg
lret
test
lods
ret
pushf
mov
xorb
adc
and
jns
imul
mov
cmpsb
into
adc
inc
fwait
adc
inc
xor
push
arpl
pop
aad
arpl
es
push
jae
add
movsb
or
jb
xchg
inc
sub
mov
mov
push
out
add
shll
jno
fldcw
sbb
mov
or
mov
add
test
pushf
xorl
add
add
ljmp
clc
int3
push
or
inc
outsl
cmp
sub
and
mov
rolb
leave
addr16
dec
or
stos
fmul
xor
add
enter
loope
es
xchg
aas
dec
and
xchg
test
daa
pop
mov
push
fs
jo
in
sub
cmpsl
sub
out
test
pop
add
rorl
add
out
jge
aam
stc
push
push
fiaddl
inc
push
cmp
mov
cwtl
xchg
xor
cmp
jge
xor
xchg
add
int
sub
aam
mov
dec
jno
enter
and
nop
push
add
mov
addr16
xchg
ret
popa
leave
or
loop
rcll
adc
cmp
xorb
pop
xchg
push
call
nop
repz
inc
cmp
inc
pop
jae
sub
loope
fidivl
int
pop
loopne
in
xchg
ret
inc
dec
inc
scas
sbb
insl
call
pop
in
lods
rolb
sbb
pop
mov
test
pop
lock
dec
xchg
push
insb
addl
push
add
call
cmp
scas
cltd
imul
xchg
pushf
mov
mov
fwait
aaa
sbb
imul
pop
jge
loop
push
mov
insb
cmp
stc
mov
mov
mov
test
xlat
push
pop
pop
jbe
push
jp
pop
add
add
adc
and
mov
scas
cmp
add
out
cmp
add
ja
mov
or
scas
ds
lret
lock
ja
fldcw
cmp
into
mov
sub
addl
outsl
jae
add
mov
fwait
sbb
adc
sbb
sub
inc
sub
push
adc
call
mov
leave
les
pop
add
mov
jb
mov
push
mov
outsl
jecxz
sbb
rcl
cwtl
icebp
addl
push
mov
sub
jle
add
mov
fldl
push
inc
cwtl
sub
inc
cs
jp
mov
rorl
nop
push
inc
loopne
dec
dec
rolb
mov
dec
es
and
or
adc
inc
subb
inc
add
mov
push
pop
jo
or
mov
pop
push
aad
lret
mov
lret
push
popa
test
sbb
pop
inc
mov
inc
adc
ficoms
push
pop
push
and
sub
jnp
imul
mov
cmp
icebp
jb
mov
gs
xchg
call
jae
mov
ds
movb
shlb
hlt
mov
addl
shlb
outsb
loop
lret
mov
pop
test
pop
pusha
test
push
test
push
inc
jno
pandn
test
dec
sbb
adcl
mov
add
or
push
adc
out
mov
jbe
test
loopne
aam
cmp
sti
stc
add
and
push
in
push
xor
mov
inc
subl
movsl
mov
pushf
add
out
push
fcmove
je
movsl
cmp
cltd
adc
arpl
outsl
stos
mov
fstpt
inc
lock
mov
leave
sub
push
sbb
in
mov
push
push
sbb
cmpsl
push
mov
sarb
jb
push
cmp
pushf
mov
inc
cmp
ret
fbld
es
and
dec
xchg
dec
mov
shrl
ljmp
push
xor
xchg
mov
dec
jg
rclb
or
xchg
inc
cmp
popa
test
mov
inc
ret
push
inc
push
idiv
xchg
xchg
and
inc
sbb
cmp
xor
jge
xchg
push
pop
xchg
xor
pushf
dec
cmp
jle
jne
int
mov
push
inc
xor
jb
mov
loope
mov
xchg
loope
mov
sbb
scas
sbb
jns
inc
mov
dec
push
mov
loopne
in
cli
or
bound
ret
cmp
dec
add
pop
jp
loop
or
int
inc
cmp
ljmp
adc
out
sbb
push
lods
fmull
xchg
sub
into
bound
mov
adc
push
test
push
sbb
add
inc
fstps
jb
data16
pop
test
xor
mov
fldenv
pop
or
or
into
rcl
or
mov
inc
jnp
stos
pop
cmp
cmp
push
jmp
xor
lcall
es
add
push
cmpsb
fbstp
mov
cmp
shll
mov
ret
dec
mov
es
xor
sbb
or
lea
mov
cmp
aaa
lcall
pop
lds
or
xor
adcb
leave
inc
jae
fdivr
rcrl
or
or
jne
sbb
lock
xchg
jecxz
lds
inc
rclb
dec
mov
pusha
fistl
push
in
rcl
jmp
sbb
orb
push
lahf
mov
pushf
cmp
hlt
movsl
mov
mov
bound
cmp
xchg
xor
movsl
icebp
test
sbb
xchg
cmp
popa
jo
or
lods
repz
ret
cmp
inc
jb
jo
lcall
mov
mov
or
mov
xchg
out
mov
inc
imul
jnp
jbe
xor
das
push
jmp
push
ror
adc
add
pop
jo
sbb
repz
xchg
xor
in
sbb
cmp
mov
mov
xor
mov
pop
push
mov
push
stos
adc
pop
jne
popa
or
les
stos
cltd
jg
cli
rclb
mov
sbb
mov
jae
mov
push
jmp
xor
ret
jnp
sub
loope
ret
cmpsl
mov
inc
lahf
leave
dec
test
mov
sub
in
inc
out
push
xchg
call
adc
inc
jo
jo
add
lcall
xor
inc
cwtl
and
or
sbb
sub
and
in
mov
outsl
nop
enter
cmp
nop
jae
xor
clc
clc
outsl
cmp
stos
aaa
or
lods
test
cmp
rorb
sub
add
lahf
mov
out
cmp
jcxz
out
xchg
push
faddl
sbb
es
xlat
xchg
and
cld
or
outsl
hlt
xlat
cli
lcall
loope
addr16
repnz
cmpsb
push
loopne
loop
jne
mov
pop
cs
add
int
sbb
or
call
push
xor
adc
mov
stc
adc
repz
xchg
jae
dec
loopne
jmp
pop
sub
sbb
ljmp
gs
push
pop
and
cmp
or
pop
pop
sub
aad
mov
xchg
jp
jae
rolb
mov
cltd
inc
pop
cmp
push
mov
add
pushf
cmp
add
cmp
mov
sbb
xlat
fmull
leave
mov
ret
adc
roll
mov
in
ss
adc
ret
push
jae
jne
fdivl
test
call
inc
sbb
sbb
dec
inc
aad
mov
mov
inc
cmp
inc
imul
push
nop
sub
push
shll
dec
push
out
mov
lock
or
mov
shr
jp
mov
scas
lcall
add
xor
stos
data16
das
sbb
lret
inc
xchg
pop
pop
in
jo
or
sub
add
add
cmp
adc
test
stos
mov
xchg
loopne
out
loope
cmp
sbb
push
inc
addb
stc
or
clc
mov
cmp
jbe
push
or
sub
mov
add
sub
mov
jecxz
sbb
add
inc
mov
sub
clc
inc
jl
push
cli
loop
or
and
or
lret
mov
sti
adc
cwtl
cmp
push
hlt
and
jne
add
pop
mov
lods
xchg
cmp
int
or
dec
inc
sub
mov
xlat
dec
sub
pushl
push
cmp
xor
cmp
fxch
aam
or
lock
test
int3
nop
add
mov
jo
cli
sbbl
shrb
cmpsl
ds
cwtl
add
and
mov
mov
loop
push
lret
push
jb
or
inc
inc
sub
decb
inc
in
add
into
loope
dec
push
fisttpl
jb
add
and
cmpsb
xchg
in
je
test
add
icebp
enter
fwait
orb
dec
rorl
xchg
push
lahf
push
or
lods
dec
ja
out
add
js
rorb
xor
mov
xchg
push
cmp
push
cmpsl
mov
clc
sub
cmp
call
clc
ljmp
gs
dec
out
adc
scas
stos
sub
aas
jge
sbb
ss
push
das
addb
scas
ret
inc
fs
aad
lret
pop
pop
mov
stc
mov
mov
and
enter
push
sbb
out
xor
push
and
mov
cltd
xor
test
push
fs
mov
jl
daa
jb
int
xor
andb
push
gs
adc
xchg
sub
mov
jecxz
push
leave
cmp
sbb
arpl
in
add
repnz
inc
rcrb
bound
dec
add
cltd
mov
sbb
push
xor
loop
push
and
fisubrl
xlat
faddl
leave
rcr
mov
and
mov
lods
dec
dec
pop
and
mov
stos
adc
cmp
test
adc
lds
insl
sub
ja
adc
mov
in
pop
lods
sub
es
jo
in
cmc
inc
rorl
pop
ds
lret
js
iret
test
clc
jne
cmp
add
cmp
and
mov
imul
pop
xor
popf
and
sbb
sbb
xor
adc
stos
int
subb
pop
cwtl
push
shll
inc
or
cwtl
or
xor
pop
cs
int
mov
xchg
leave
inc
lcall
pop
inc
mov
ret
add
mov
mov
lcall
js
add
test
and
out
iret
cmpsl
repz
xor
dec
out
dec
popa
and
shll
xchg
xor
adc
and
push
enter
add
jnp
lret
xchg
pop
pop
cmp
addr16
loop
pop
stc
sbb
inc
mov
sub
add
push
jo
push
adc
rcrb
test
xor
jo
pop
call
ja
stos
mov
mov
pop
push
rolb
push
ss
inc
test
scas
or
mov
dec
addr16
adc
out
xor
jl
cmp
mov
xchg
adc
push
push
push
sbb
adc
xor
or
cmp
pop
add
sub
add
int
rorl
inc
popf
ret
sbb
dec
in
sbb
loop
cmp
xchg
push
add
adc
xlat
cltd
sbb
pop
sub
or
mov
mov
push
dec
fcmovb
sbb
jmp
subb
data16
push
push
loop
add
xor
call
xor
mov
adc
mov
pop
cltd
dec
xor
test
mov
jae
or
inc
imull
jb
in
ret
jmp
adc
loope
adc
in
xor
and
sbb
loopne
push
cld
ror
push
xor
rolb
push
adc
or
call
xchg
add
sub
xchg
ret
adc
imul
inc
loopne,pn
mov
mov
xchg
test
stc
test
jb
clc
adc
add
or
test
and
nop
leave
add
mov
enter
cmp
and
push
insl
push
and
cmpsb
data16
ljmp
mov
cltd
enter
loope
add
inc
rcrb
fs
xchg
loop
mov
aaa
inc
lret
mov
sub
lods
test
ds
enter
mov
aad
add
sbb
and
cmp
push
call
inc
insb
es
xor
ljmp
push
inc
dec
adc
sbb
mov
mov
cmp
add
hlt
test
inc
fadd
lahf
cmc
mov
out
dec
sbb
push
stos
ljmp
neg
add
sub
enter
pop
sarb
sarl
mov
jg
add
push
test
push
mov
test
pop
nop
cs
inc
lea
les
inc
dec
pop
mov
outsb
icebp
jb
std
mov
dec
sbb
clc
aas
mov
outsl
jne
fdivrl
dec
fists
jb
add
pop
dec
or
rorl
add
xor
jb
cmpsb
subb
push
pop
cltd
dec
or
xor
jo
sbb
sbb
sub
scas
test
fcoml
add
nop
mov
add
sbb
adc
or
loope
lea
sbb
adc
shlb
mov
push
or
sub
les
jmp
or
mov
adc
sub
push
inc
mov
or
test
hlt
ja
add
jecxz
inc
push
and
in
mov
lret
xor
push
push
pop
sub
sarb
pushf
adc
int
into
inc
sub
cmp
push
insl
jns
and
icebp
lock
push
jae
pushf
mov
cmp
xor
sub
mov
fsubrl
loop
cmpsl
pusha
and
push
shll
rclb
sub
divb
es
mov
sbb
sbb
call
adc
sbb
xor
inc
push
add
pop
sbb
insl
push
data16
test
insl
ss
xchg
mov
outsb
push
push
mov
scas
adc
inc
and
stos
adc
out
sub
stos
outsl
jb
loop
in
aad
xor
aam
stos
inc
lcall
movl
push
es
loopne
xor
mov
mov
cld
cmc
loope
sbb
add
xor
in
and
ret
inc
es
mov
jne
xor
mov
outsb
or
lds
pop
movsb
cmpsl
stc
lcall
pusha
sti
jnp
decb
repnz
sub
adc
scas
gs
fcmovu
icebp
add
jno
jb
xchg
repz
into
inc
rclb
jecxz
pusha
sub
out
push
xchg
add
cmp
inc
mov
ficompl
sbb
inc
sub
mov
sub
add
aaa
into
addb
cmp
and
xchg
add
imul
cmp
dec
or
test
sbb
push
loope
cmpsl
and
setne
push
test
xor
pop
mov
and
mov
xchg
cmpsl
loop
jmp
xor
rcll
add
sbb
cwtl
fbstp
out
dec
cmc
or
push
xchg
mov
loope
pop
divl
or
sub
movsl
mov
push
sbb
pop
aaa
xchg
jle
ds
adc
and
xchg
and
xchg
adcl
sub
cmp
pop
adc
cmp
inc
pusha
push
mov
adc
mov
in
push
lcall
add
add
std
jmp
inc
mov
xchg
mov
ret
popa
or
inc
pusha
js
lcall
cmp
fisubl
insl
int
adc
and
add
adc
mov
rolb
jae
mov
shrb
xchg
xchg
and
push
adc
out
push
dec
scas
push
jae
loopne
xorl
inc
adc
shlb
xor
ljmp
add
xor
hlt
or
and
xchg
fimuls
and
addr16
add
call
loop
push
xor
sbb
jb
addl
dec
icebp
out
aam
jbe
mov
fildll
aas
in
fstpl
lock
sub
mov
mov
rcll
arpl
or
bound
inc
sub
shlb
cmc
lcall
add
lock
and
xchg
push
aam
mov
sub
jae
or
pusha
ds
in
mov
loop
mov
ret
dec
sub
pop
sbb
adc
gs
jp
push
fsubs
xor
in
sbb
mov
data16
cmp
mov
push
gs
mov
add
push
lret
jle
push
xor
adc
out
or
inc
out
adc
or
stos
mov
inc
push
push
loopne
mov
test
dec
push
mov
addb
inc
daa
mov
inc
mov
xrelease
adc
adc
rolb
add
xorl
add
add
arpl
sbb
popf
mov
in
sbb
mov
or
push
xchg
push
fiaddl
mov
cmc
loope
or
aas
jo
or
rcrl
pop
stos
fst
add
cmpsl
cmp
push
ficoms
inc
xor
lods
or
sbb
sub
adc
loop
enter
pop
mov
out
push
imul
jg
dec
shrl
inc
es
pop
push
cmp
imul
out
xchg
popa
xor
imul
mov
mov
flds
xor
and
pop
mov
cwtl
dec
or
inc
rclb
inc
rcrl
mov
jle
pusha
mov
nop
popa
push
inc
pop
scas
xor
sbb
sbb
lret
sbb
pop
cs
sarl
pop
es
pop
jne
xor
out
pop
scas
ljmp
jae
aad
std
stos
push
xchg
dec
or
mov
xchg
into
rorl
scas
push
adc
loope
xor
imul
cmp
add
mov
sbb
stos
mov
inc
dec
lds
out
cmp
jo
popf
imul
adc
mov
push
mov
add
lods
mov
mov
add
adc
or
pop
daa
sbb
outsb
push
sub
scas
jecxz
stos
adc
mov
sbb
add
ljmp
sbb
xor
jmp
scas
addb
add
jmp
inc
sub
push
int
imul
push
and
add
xchg
inc
sub
inc
subl
test
aad
out
mov
cmp
in
sub
aam
jbe
xchg
orl
xchg
nop
imul
ds
push
add
lahf
sbb
mov
incl
scas
data16
mov
pop
out
or
push
push
sbb
push
iret
pop
sub
rcrl
rolb
add
and
and
decl
in
nop
fidivrl
xor
push
mov
mov
lods
push
mov
imull
imul
scas
data16
mov
pop
cmpsl
out
or
inc
or
cmp
jb
inc
es
fwait
xchg
sub
jae
xor
enter
pop
int
cmp
add
ror
pusha
xor
leave
adc
push
sub
pop
xchg
cmp
dec
pusha
sub
stos
xor
sbb
shll
lds
imul
aam
enter
shl
mov
cmp
xor
mov
cmpsl
push
mov
cwtl
sbb
rcrl
inc
push
sbbl
cli
loopne
mov
push
mov
sarb
cltd
xor
fidivs
ljmpw
add
add
das
push
jae
push
adc
daa
push
in
stos
xor
out
xchg
adc
loopne
mov
cltd
mov
or
ja
fwait
outsb
push
cltd
jo
or
jo
pop
leave
icebp
pusha
xchg
pop
xchg
rcrb
jo
adc
mov
iret
ret
xor
mov
jmp
in
add
jbe
xor
lock
push
and
dec
outsb
adc
pop
test
mov
shll
call
gs
out
je
pop
in
cld
pusha
test
stos
fisubrl
sbbb
sub
inc
gs
test
stos
lret
repz
loope
int3
and
data16
push
mov
or
or
and
jecxz
push
pop
cmpsl
adc
dec
mov
add
pop
ljmp
add
mov
inc
out
xorb
adc
cmp
test
push
mov
ret
mov
lret
jae
push
cltd
out
push
ss
gs
pop
cmp
or
cmp
push
xchg
test
xchg
xchg
add
cwtl
ret
test
mov
or
inc
xchg
or
lcall
add
xor
and
popa
add
imul
mov
pop
mov
cwtl
dec
loopne
push
jne
mov
lea
xchg
das
fidivrs
sbb
add
cltd
stos
pop
fimuls
cmc
pop
inc
jo
jo
sbb
jo
jb
pop
imul
pop
xor
test
and
dec
scas
data16
pop
or
cmp
fnstsw
adc
add
lret
clc
cmp
inc
pop
nop
push
jae
ret
xchg
xchg
scas
inc
cmpsb
rolb
push
imul
push
sbb
subl
test
adc
and
addr16
pop
outsb
orl
or
imul
inc
scas
cmp
push
loop
xchg
leave
and
gs
loope
adc
cmp
pushf
mov
or
faddp
lret
jo
ret
mov
sbb
add
shl
orb
push
repz
pop
movsb
adc
mov
int
xor
cmpsb
or
shl
or
lods
mov
inc
lcall
popf
sub
xchg
sbb
loopne
orb
xor
mov
mov
sbb
inc
je
cmp
lret
ret
cmp
jle
pop
imul
sub
cmpsb
pop
pop
pop
sbb
or
jno
xor
push
push
jae
push
mov
stos
xor
jae
inc
popf
bound
mov
movsl
pop
aad
xchg
leave
adc
sub
shlb
not
sbb
and
lcall
mov
jo
lcall
xchg
xor
mov
xlat
int
popa
or
dec
mov
push
jg
fisubl
inc
cmp
shrl
test
pop
cwtl
push
pusha
xchg
loopne
xor
pusha
sub
into
sti
push
and
pusha
jb
mov
xor
add
in
mov
loopne
push
scas
repz
xchg
or
in
xor
and
xor
lods
xchg
push
sbb
test
pushf
cmp
jp
roll
and
and
mov
out
sub
in
inc
addb
pop
sti
test
push
add
push
ljmp
outsb
jae
jl
rcl
mov
loope
fisubrl
into
xchg
stos
push
pop
decl
scas
rcll
push
xchg
add
lret
bound
out
inc
rcrb
in
or
sbb
or
xor
popa
ret
push
or
loope
cmp
fdivs
mov
pop
mov
jno
pop
push
or
jb
cmpsb
out
shl
incb
outsl
sbb
or
inc
sub
mov
int
gs
xor
push
cmpsb
lret
mov
shlb
in
cmc
xlat
push
imul
add
jo
loope
popf
add
rclb
fldt
rclb
cmp
pop
xor
stc
fwait
arpl
sbb
sbb
stc
xchg
cmp
add
aas
movsb
pop
sbb
insb
loopne
out
mov
or
cwtl
jo
fnclex
cmp
out
outsl
mov
test
mov
or
xchg
rclb
jb
jb
pop
movsl
lods
mov
push
out
int
jae
push
orl
pushf
jb
mov
xchg
push
xor
xlat
sbb
sbb
test
or
jb
mov
call
sbbb
in
and
inc
cmc
in
loopne
dec
sub
mov
mov
mov
adc
mov
fsubs
xor
ds
test
pusha
enter
add
in
cmp
popl
mov
aam
aam
adc
mov
rcl
fwait
cmp
cmpsl
es
cs
test
mov
pop
xor
nopl
push
pop
mov
inc
sbb
mov
daa
inc
sbb
adc
inc
or
pop
cmp
ljmp
cmpsb
xchg
cli
sahf
imul
inc
sbb
test
or
push
add
push
gs
and
push
jae
sbb
pop
je
enter
dec
mov
adc
pop
popf
mov
push
clc
repz
popf
pop
push
inc
sti
mov
inc
xchg
aaa
cmp
adc
ja
sbb
or
adc
pop
inc
jo
sbb
lahf
sub
cwtl
xor
sbb
mov
lods
loop
fwait
xor
dec
pushf
call
and
sahf
out
add
ljmp
ljmp
cmp
lcall
int
pop
cwtl
jg
popf
rclb
or
aam
loop
addr16
xor
mov
es
jae
out
shlb
inc
inc
rorl
fdivrs
loopne
in
je
std
addr16
xor
rorl
pushf
mov
data16
in
call
push
jo
sbb
add
add
das
cmp
test
rclb
invd
iret
data16
sub
push
or
imul
mov
jl
xchg
cmp
adc
sbb
mov
lds
add
fstps
iret
and
or
sahf
jg
add
adc
sub
clc
jbe
cld
sub
pop
mov
dec
pop
loopne
sti
ret
jns
jge
jle
shrl
add
lret
sub
rolb
popa
subl
sbb
adc
sub
push
int
sti
adc
mov
inc
pop
push
xor
call
cli
jno
or
xchg
subl
aad
subl
sbb
pusha
jp
in
mov
mov
ljmp
or
es
gs
daa
fiaddl
cmp
pop
add
adc
jo
lock
sbb
or
mov
adc
sub
inc
popa
mov
push
sub
cmpsb
loope
shlb
js
loope
in
lret
mov
adc
testb
sysret
or
jo
xchg
sarb
cmp
js
stos
cltd
pop
loopne
insb
out
inc
jo
add
lret
or
jl
pop
push
push
test
pop
or
loope
les
mov
add
js
xlat
sub
mov
dec
sbb
cmp
push
xchg
xchg
or
outsb
dec
aad
xlat
addr16
lock
bound
dec
scas
imul
dec
mov
mov
bound
loopne
sbb
inc
sub
lcall
inc
jae
and
nop
xor
test
call
push
sbb
test
jns
std
adc
fcomps
subl
push
lock
ret
adc
xchg
fwait
les
jmp
mov
test
loope
fwait
dec
jg
xor
aas
lock
dec
inc
add
sbb
sub
mov
fstpl
jmp
pop
xor
pop
push
mov
dec
sub
sahf
je
out
mov
sbb
pusha
bound
inc
aad
pop
clc
lret
adc
xchg
mov
shl
outsl
ret
push
dec
adc
loope
leave
scas
lods
cld
lock
push
mov
mov
sub
xor
push
rclb
xor
fistl
add
dec
iret
in
push
xchg
add
add
and
sub
mov
shl
pusha
xchg
in
add
cmp
in
sbbb
rcrl
jmp
or
mov
fs
or
sbb
rcll
dec
add
inc
and
jmp
push
call
cwtl
push
xor
cmp
imul
in
xchg
addl
sub
jnp
push
mov
mov
sub
xchg
loop
push
into
push
inc
mov
jo
test
lea
pop
movsb
sbbb
push
stos
xor
js
cwtl
int3
decl
rcrl
mov
subl
in
cmp
popa
push
arpl
roll
mov
rclw
cmp
push
push
xor
test
xor
imul
or
in
lcall
scas
pop
insb
ret
xchg
lahf
and
sub
or
std
loope
mov
mov
xor
cs
adc
leave
aad
pop
ja
mov
xchg
push
leave
stc
push
scas
jmp
jb
stos
test
dec
jno
jmp
das
add
fbstp
insb
outsl
cmp
cmpsl
and
mov
and
dec
aad
mov
or
jo
add
jne
aam
lock
or
push
cli
pop
adc
jb
lahf
sbb
dec
cmp
push
xlat
push
insl
out
xor
xor
inc
ficoml
sub
fs
inc
fisttps
push
jo
out
out
sbb
enter
dec
adc
pop
or
mov
loope
adc
stos
cs
mov
or
or
inc
cmp
push
stos
dec
call
imul
dec
outsb
in
cmp
subl
mov
adc
mov
in
fstps
pusha
jo
lods
fwait
dec
faddl
cmp
cmp
fsubl
and
or
addr16
cmpl
inc
in
cmp
fmuls
stos
rclb
shll
iret
xor
mov
scas
mov
mov
out
push
cmovne
cmp
or
insl
test
sub
xor
stos
cmpb
push
pop
jo
or
adc
cmp
stc
sbb
inc
aad
pop
ljmp
dec
rclb
mov
xchg
or
jp
int3
push
sahf
pop
test
or
inc
xor
xlat
lcall
decl
pop
xor
jno
sbb
xlat
mov
filds
cli
inc
cld
adc
add
dec
pop
adc
xor
insl
mov
mov
subl
inc
adc
or
int
push
data16
ret
or
and
cwtl
sub
add
xchg
out
pop
jno
imul
lea
xchg
testb
xchg
mov
add
ret
jmp
jp
inc
mov
mov
fwait
pushf
push
add
inc
pop
sbb
cmpsb
lret
fstpl
jns
test
mov
loop
adc
push
scas
faddl
bound
subl
mov
or
xor
add
mov
dec
hlt
loope
xchg
aaa
dec
pop
mov
out
jmp
daa
pop
cmp
add
xchg
dec
enter
sar
mov
push
popl
sub
add
inc
or
push
or
cwtl
lret
or
loope
push
jae
pop
movsb
je
pop
xor
adc
inc
pusha
dec
or
lret
rolb
addl
jo
inc
cli
leave
shrl
adcb
lds
cmp
loope
sahf
hlt
lods
jb
stos
pop
push
jge
push
pop
adc
out
add
inc
test
sub
in
test
pop
test
rclb
popa
movsb
jge
fcmovnb
lret
rolb
popf
jnp
jb
rcll
loop
mov
es
mov
outsl
jb
push
mov
xor
insb
inc
fs
mov
inc
scas
mov
and
sub
xlat
int3
lahf
mov
xchg
push
in
repz
mov
adc
and
pop
jae
mov
imul
arpl
cs
inc
aam
mov
pop
inc
cmpsb
or
push
loopne
cmpsl
out
xchg
cmp
cmp
stos
iret
jae
insl
es
cmp
dec
mov
adc
push
inc
adc
push
add
in
sub
push
xrelease
sbbb
dec
dec
pop
inc
mov
mov
aaa
iret
inc
les
push
add
jge
adc
push
shlb
dec
fs
gs
shl
jmp
push
xlat
arpl
push
pop
and
xor
jg
inc
push
xchg
lods
cmp
jo
pop
aad
rcl
jmp
sub
leave
add
nop
and
mov
lods
add
insb
int3
dec
into
rcrl
test
pushf
and
aas
lahf
xchg
push
jb
pop
push
xor
xor
test
test
and
in
jp,pt
orb
mov
push
xlat
add
sub
call
bound
sub
aam
and
std
test
loopne
je
push
and
dec
sub
insl
mov
fnstenv
pop
popa
cmp
push
sbb
insb
adc
aaa
xor
sbb
sub
jle
dec
add
mov
pop
jne
clc
ret
test
xchg
add
dec
roll
lods
stos
xchg
pop
filds
lret
dec
sub
mov
je
pop
xchg
sbb
inc
int
enter
andnps
mov
das
add
dec
add
sub
sahf
xor
sbb
mov
pop
loopne
xorl
mov
ja
addl
adc
push
dec
mov
sub
sbb
aad
add
jnp
fidivrs
repz
xor
adc
dec
sbbl
sbb
cs
fchs
add
push
dec
test
bnd
dec
add
dec
rolb
std
into
lret
testl
dec
aad
mov
xorl
enter
in
add
xchg
add
mov
pop
out
out
jge
pop
mov
and
xor
arpl
in
pop
mov
add
dec
xchg
add
cmpsl
cmpb
cmp
push
jnp
das
fisttps
inc
cwtl
lea
xchg
fnstcw
ds
andb
add
sub
jle
loope
cld
fs
inc
orl
xor
out
add
jle
and
xchg
imul
daa
add
rorl
in
inc
outsb
adc
das
mov
fbld
pop
aaa
aad
add
pop
add
test
loope
dec
pop
adc
xorb
cmp
dec
mov
cmp
sub
adc
jbe
arpl
outsl
ds
pusha
arpl
or
fistpll
cmp
dec
inc
xlat
sub
add
mov
sbb
jbe
sbb
sub
and
test
fndisi(8087
xchg
fisubrl
adc
out
outsb
je,pt
loope
adcl
mov
mov
sti
test
jae
lcall
cmp
pop
arpl
or
and
popf
adc
cmp
cmp
arpl
pop
sbb
push
adc
std
js
into
test
addl
jge
adc
pop
sub
sbbl
fs
mov
psadbw
iret
jno
jbe
add
mov
loope
addr16
lcall
jnp
ret
and
mov
and
push
icebp
jns,pt
mul
ficoml
aas
jp
sbb
mov
xchg
int
push
pop
inc
pop
popf
stos
mov
pop
dec
inc
fistl
push
test
sbb
js
xor
in
mov
popa
mov
push
add
jle
hlt
pop
jmp
mov
adc
out
clc
popf
push
incb
push
xor
pop
push
inc
add
mov
xchg
sub
and
pop
or
inc
cmp
vmwrite
add
icebp
mov
loope
fisubs
inc
sbb
das
xor
pusha
sahf
xchg
mov
inc
in
fisttps
mov
mov
fsts
fs
aas
and
add
dec
jnp
jne
adc
jne
jecxz
inc
roll
jge
xor
push
inc
imul
pop
stos
filds
mov
loope
dec
cwtl
jns
jbe
cmp
inc
in
ficoml
add
add
or
sub
pop
lcall
in
pop
pop
add
dec
jno
loope
psrld
mov
jnp
pop
mov
cmp
sbb
jmp
inc
mov
inc
inc
inc
aad
lea
xchg
sbb
xchg
fs
stc
in
in
add
fs
mov
jmp
push
add
jb
stc
cmp
aaa
pop
fadds
aaa
xchg
and
xchg
ds
aas
sbb
jge
inc
pusha
ret
nopl
xor
jp
cmpps
add
mov
dec
dec
add
aaa
outsl
fadd
fdivrs
inc
sahf
and
cmpsl
xor
cmp
and
adc
pushf
pop
out
mov
pop
in
mov
jp
negl
rol
add
fldenv
lock
psadbw
push
pop
cmpsl
cwtl
cmpsb
xor
jnp
mov
jp
push
mov
or
loope
data16
lret
mov
or
and
jl
orb
push
jmp
mov
inc
cmp
sbb
xor
mov
sub
and
fimull
repnz
rcrb
je
rcll
out
out
out
jl
andb
jg
loopne
push
push
fwait
mov
test
nop
dec
clc
cmp
add
xchg
mov
loope
es
xor
pop
and
jl
scas
xchg
add
sub
pusha
jae
add
jnp
iret
arpl
sub
adc
jge
into
cmpl
xchg
jb
jo
cmp
mov
cmp
xchg
loope
div
daa
clc
popf
pop
jnp
jle
lahf
xor
loop
jle
pop
loope
outsl
or
test
add
push
sbb
jle
cmpsb
and
push
movsb
pop
lea
gs
aad
sbb
shufps
testb
pop
stc
testb
pop
sub
jl
mov
or
movsb
add
jp
push
sub
or
jl
divb
rep
adcb
mov
movb
in
add
xchg
rorl
inc
jb
cmp
in
stos
inc
and
inc
hlt
jnp
pop
mov
xchg
movsb
filds
roll
cmp
cmpsb
and
pop
in
lods
or
dec
cmp
aas
in
xor
add
cld
lds
jl
lock
pop
add
sub
cwtl
icebp
and
xchg
pusha
sbb
mov
jno
xchg
dec
jne
test
dec
jg
stc
je
rorb
mov
xchg
xor
sti
out
loop
adc
sbb
jb
inc
jle
test
dec
clc
mov
lret
dec
xor
int
pop
mov
nop
mov
clc
aad
bound
daa
cmpb
xchg
fcompl
icebp
cmpsb
pop
mov
sub
cmp
orl
jno
pop
addl
hlt
add
or
mov
mov
repnz
lds
sbb
xor
dec
sti
add
inc
jnp
das
mov
out
xchg
ljmp
jecxz
js
mov
aas
pop
inc
imul
push
mov
add
sbb
daa
fiadds
arpl
imul
mov
ja
ljmp
fildl
xlat
add
popa
pusha
imul
sub
in
push
cld
xchg
jne
mov
addr16
add
cmpps
sbb
or
adc
mull
pusha
mov
and
rolb
push
xor
clc
push
jbe
xor
inc
aaa
leave
lods
jnp
ret
loopne
pop
movsb
pop
xchg
aad
sub
aas
aaa
add
xor
pop
xchg
stc
out
mov
aaa
fnstsw
daa
mov
mov
push
mov
pusha
cmp
notb
cmpl
cmpb
mov
mov
pop
jnp
jne
mov
lea
bound
icebp
sarl
mov
fs
in
add
inc
loop
fldenv
adc
push
inc
mov
fwait
sbb
test
notb
xchg
scas
dec
push
sub
xor
shrb
ret
xchg
mov
flds
push
xor
gs
xchg
scas
or
aas
pop
lock
inc
mov
mov
xor
and
call
popa
lret
fildll
cmpsl
mov
mov
sub
dec
pmulhuw
movsl
push
adcb
enter
rolb
fwait
rolb
mov
in
mov
sub
or
inc
xor
inc
mov
inc
jae
rclb
inc
xchg
push
push
std
mov
mov
mov
sbb
add
pop
jae
aaa
dec
inc
sbb
lcall
pop
xchg
pop
push
popa
in
lea
int
andb
mov
shrl
cmp
out
cltd
xchg
inc
mov
mov
add
sbb
or
sbb
adcb
mov
mov
scas
stc
ret
out
push
sbb
ja
inc
sub
push
test
je
mov
ljmp
adc
push
rorl
sub
sar
push
or
cmp
dec
inc
sub
sub
rcl
inc
das
mov
mov
sub
jnp
popa
mov
int
orb
and
outsb
jno
mov
insl
cmpb
jl
fwait
mov
sub
xor
jp
and
push
cld
iret
ret
lods
jge
cmp
and
inc
sbb
hlt
lods
fsubs
xor
mov
mov
push
ljmp
call
xchg
dec
je
sbb
xor
fdivs
jg
scas
stos
dec
inc
in
mov
push
push
aam
test
icebp
sub
lcall
sbb
sub
cltd
ret
loopne
in
add
inc
mov
mov
stos
mov
movsl
jp
push
push
adc
push
xchg
loopne
mov
jns
push
mov
xor
aam
mov
les
pop
xchg
push
push
adc
mov
loop
sbb
cmp
popf
push
inc
aas
mov
outsb
jne
scas
enter
int3
es
or
inc
or
sub
mov
fstps
loop
int
cltd
in
cwtl
xor
pop
inc
test
add
push
ret
enter
and
add
add
add
clc
cmp
push
adc
cmp
push
mov
fstps
adc
cs
mov
inc
inc
loope
fsubl
dec
dec
call
jb
bnd
push
sti
pop
incl
or
test
push
mov
xchg
xor
call
xor
cmp
mov
pop
imul
jno
fwait
mov
fstpt
mov
push
adc
push
xchg
push
lods
cmp
xor
and
push
mulb
jnp
add
add
hlt
dec
push
fstpl
push
dec
cmpsl
mov
pop
sti
pop
nop
stos
inc
stos
inc
cmpsb
add
das
add
inc
mov
inc
dec
cwtl
leave
adc
clc
dec
push
add
lret
popa
mov
or
push
sbb
adc
push
subl
push
inc
pop
dec
roll
push
xor
inc
push
cs
push
adc
loop
les
mov
loop
lods
sbb
push
cmpl
sbb
mov
xchg
sbb
inc
or
or
lret
std
mov
mov
ret
sbb
push
xchg
subl
and
pop
adc
mov
push
jecxz
dec
xor
fisttpll
lods
mov
adc
mov
shrl
aad
inc
inc
js
xor
mov
sub
lods
inc
in
inc
lcall
scas
out
sbb
popl
pop
mov
xlat
divb
cmp
or
test
and
mov
add
pop
inc
mov
jle
sub
xor
jo
cmpsl
mov
adc
xor
pshufw
cld
mov
xchg
loopne
push
int3
fisubrl
push
push
sub
shl
jb
push
jmp
push
loopne
cltd
rcrb
in
push
add
dec
cmc
popf
push
sbb
adc
mov
mov
push
mov
movsb
rcl
dec
mov
pop
push
stc
lcall
push
xor
sub
mov
add
xor
add
add
pop
sbb
jb
movsl
pop
icebp
push
int
jb
popl
ret
jae
aam
addr16
sbbl
sub
mov
push
push
and
dec
test
push
jo
loopne
popa
jp
cwtl
pop
int
xor
hlt
mov
mov
mov
inc
popf
call
out
out
ds
stos
data16
sbb
sub
sub
sti
cmp
cmp
cld
adcb
pop
cmp
add
mov
aaa
adc
cmpb
mov
fists
roll
test
add
insl
mov
or
inc
testl
push
sub
nop
push
xor
push
sbb
stos
sbb
cmp
xor
xchg
fistps
mov
call
jo
lock
gs
sbbb
xchg
call
cmp
int
popa
mov
mov
cmp
test
ret
or
xor
mov
leave
mov
add
jmp
jae
xchg
ret
push
jle
push
push
sbb
insl
add
and
xor
fcmovnbe
add
cmp
popa
cli
mov
data16
aaa
addr16
mov
sbbb
or
das
adc
sbb
xor
add
and
inc
stos
ror
mov
jb
or
jb
loopne
aad
jg
xchg
nop
sbbb
iret
sub
push
push
lods
das
call
addr16
lahf
ljmp
pop
popf
sti
fwait
int
jnp
inc
push
lock
dec
clc
xor
ljmp
icebp
mov
aad
decl
inc
shlb
test
lret
cmp
mov
mov
ljmp
cmp
mov
mov
xchg
ret
lds
push
jnp
jl
push
inc
orl
mov
inc
push
clc
jmp
pop
inc
add
and
xchg
sub
xchg
loop
cwtl
push
xor
sub
gs
enter
push
inc
xchg
push
sub
add
roll
sub
adc
lock
push
sbb
push
fdivl
cmp
adc
addr16
test
cltd
push
cltd
sbb
in
xchg
mov
ret
icebp
or
xchg
rorl
insb
pop
mov
and
xor
bound
sub
mov
inc
loopne
add
lcall
pop
inc
pushf
test
neg
adc
or
sbb
mov
aaa
shlb
xor
loop
cmp
cltd
addb
sbb
adc
popa
mov
pop
subl
cmpb
inc
addl
xor
jnp
daa
inc
icebp
je
or
cmp
push
pop
rol
add
mov
leave
ret
dec
cltd
add
push
xlat
inc
test
push
sub
aam
push
into
push
and
hlt
jg
add
sti
or
sbb
dec
and
test
sahf
push
xchg
fs
push
push
int
adc
push
pushf
addl
or
push
push
loop
or
mov
cmp
xchg
mov
jnp
push
inc
rcl
xor
mov
jecxz
lds
inc
hlt
test
loop
mov
lds
es
rol
rorb
mov
enter
out
icebp
imul
xor
loope
xchg
rol
adc
dec
stos
into
cmp
and
fs
mov
sbb
sbb
mov
es
sbb
inc
jae
lret
add
pop
aaa
sub
cmpsl
test
inc
xchg
lret
call
data16
pushf
jmp
inc
xchg
jo
test
dec
js
cmp
sub
test
dec
adc
xchg
in
loop
loope
aaa
pop
int
sub
popa
decl
mov
stos
or
adc
push
adc
scas
push
into
jg
pop
inc
aad
sbb
test
jb
cmp
sbb
xchg
lcall
push
or
subb
es
aas
or
sub
shlb
xor
out
sbb
rolb
enter
xor
leave
xor
add
xchg
adc
push
adc
adcl
mov
movsb
mov
sbbb
push
sbb
mov
jne
rcll
dec
jl
aas
loop
fstpt
adc
into
xchg
dec
cli
inc
in
adc
cli
mov
ljmp
or
mov
outsb
in
mov
mov
es
sub
xor
cmpl
jle
fwait
sbb
into
push
dec
dec
in
push
adc
ret
mov
jecxz
aam
add
push
dec
xor
sti
pop
das
adc
xor
inc
mov
enter
xchg
or
push
inc
les
and
inc
nop
mov
mov
and
scas
jb
or
push
ficomps
or
add
int3
jb
aad
jno
jmp
shll
outsl
xchg
sbb
pop
push
test
movsl
pushf
sub
in
push
mov
xchg
sbb
add
xor
rclb
ret
lods
pop
pop
test
into
popa
cmp
out
in
loopne
sbb
xlat
pop
lret
dec
gs
inc
mov
add
or
call
mov
cwtl
add
sbb
jl
mov
sbb
inc
enter
jmp
dec
es
mov
sub
push
jge
add
jo
push
pop
lcall
outsb
add
cmp
nop
ret
test
cld
or
dec
xchg
dec
pop
or
jnp
mov
fwait
popa
cmp
stos
ljmp
mov
outsl
inc
jb
call
stc
push
out
inc
cld
add
or
aas
pop
and
mov
push
sbb
dec
adc
add
mov
add
je
inc
sub
mov
lahf
les
bound
pop
add
ss
mov
xor
pop
mov
push
mov
jbe
mov
rorl
sbb
lods
xor
add
xchg
cmc
xor
add
arpl
fmuls
shr
jl
and
or
mov
jbe
decb
gs
lds
add
gs
stc
iret
mov
mov
pop
mov
loopne
cmc
jg
mov
lret
or
cmp
stos
push
lds
cmp
pop
out
lea
les
xor
je
add
xchg
add
shlb
mov
in
xor
scas
adc
aaa
mov
adc
test
popa
and
mov
mov
mov
mov
call
mov
xchg
mov
pop
daa
and
loope
mov
push
aaa
xlat
aaa
add
pushf
xchg
ja
lret
inc
jae
test
scas
pop
xchg
inc
sti
jecxz
inc
es
lahf
insl
add
jae
loope
loopne
inc
lock
adc
inc
push
mov
pushf
mov
pop
or
rorl
adc
mov
xchg
ja
mov
cmp
fdivs
les
scas
add
divb
jns
mov
xchg
lods
and
fdivrl
loope
jp
in
push
pop
test
xchg
fldcw
repz
cmp
add
add
pop
cs
inc
lods
loopne
lods
cltd
dec
cs
mov
stos
push
sub
and
and
sub
cmp
xchg
pop
mov
leave
cmp
sbb
sub
mov
pop
add
in
cmp
mov
aaa
lock
jo
mov
in
fidivs
sahf
test
out
cli
mov
and
lds
jns
std
fwait
dec
mov
xchg
popf
cld
jmp
cmp
mov
mov
adc
jnp
add
loopne
aaa
mov
ret
xor
je
sarl
push
push
or
pop
sbb
mov
push
pop
fisttpll
cmpsb
dec
inc
loop
cmpsb
call
setb
shll
in
mov
xor
les
pop
xchg
mov
inc
jae
push
cmp
mov
mov
mov
shr
xchg
roll
jg
mov
mov
sub
jmp
sub
adc
inc
sbb
or
and
jnp
lret
mov
mov
pop
andb
sbb
dec
push
jnp
add
icebp
stos
fimuls
sbb
cmp
into
fdiv
push
jae
mov
andl
and
jno
adc
adc
mov
inc
adc
xor
cltd
lds
inc
push
out
or
lock
inc
push
and
fistpll
aaa
call
sub
push
sub
sbb
dec
xchg
sub
adc
jl
mov
sub
ljmp
xor
mov
cmp
xchg
test
add
lahf
cmp
mov
mov
stos
lcall
xor
push
aaa
rolb
loopne
fld
rclb
clc
dec
mov
movsb
loopne
xor
adc
lock
pop
jns
adc
pushf
mov
jbe
out
andnps
addr16
int
dec
in
cmp
loopne,pn
push
sbb
inc
popa
loope
loopne
mov
pop
adc
xor
pop
adc
ret
pop
cmp
addl
lahf
out
push
inc
nop
shll
inc
int
cmp
sub
shlb
pop
int
push
inc
clc
xor
or
cmp
mov
jnp
adc
cmp
lods
in
or
adc
fists
sub
dec
roll
dec
xlat
jo
push
jnp
mov
fwait
loopne
lcall
sbb
std
js
mov
int
mov
test
imul
xor
jo
and
shll
shrb
lods
xor
or
or
fwait
xor
push
and
sbb
pop
cs
jl
movl
es
inc
inc
hlt
test
int
pop
repz
add
xor
dec
pop
adc
mov
fildll
cmp
push
lods
jl
scas
sub
jo
cmp
push
sub
popa
inc
inc
push
xchg
cmc
pop
xor
leave
sub
and
lahf
mov
enter
pop
push
xchg
out
pushf
jecxz
bound
and
dec
inc
push
test
jae
mov
sbb
cmpsl
les
outsb
sbb
std
and
enter
aas
cmp
add
mov
vpunpcklbw
dec
cli
lods
hlt
loope
incl
movl
arpl
add
adc
xor
mov
cmp
das
push
sub
mov
mov
adc
mov
loop
dec
fwait
or
mov
adc
call
shll
or
jmp
test
repz
jno
repz
cli
aaa
inc
addl
cmp
fnstenv
or
mov
push
mov
sbb
mov
inc
sub
repz
and
adc
cmpsb
push
pushf
push
sahf
ret
loope
and
jo
int
cli
insb
push
into
inc
in
inc
xorl
mov
jnp
mov
arpl
or
xor
mov
and
xchg
xchg
es
xor
mov
adc
add
test
loopne
cli
jl
movsb
pop
push
mov
cld
js
add
cs
add
das
xchg
mov
mov
dec
icebp
pop
push
lret
subb
sbb
scas
sub
jnp
test
stos
gs
addb
test
jo
or
xor
add
mov
sbb
vpsrlw
mov
mov
jb
xchg
mov
dec
sub
loopne
adc
push
lods
jnp
add
add
or
mov
pop
arpl
push
imul
push
adc
add
mov
xlat
dec
loope
mov
dec
popa
ret
lods
enter
ja
lret
jae
sub
pop
in
jp
sbb
mov
xor
lahf
sbb
repnz
pop
pop
push
pop
push
int
test
pusha
in
pop
std
fwait
sbb
mov
mov
sub
jbe
nop
add
int
jl
xchg
lret
add
loope
add
pop
adc
xchg
fnstsw
out
mov
jecxz
add
sub
mov
xlat
pop
mov
movsl
sbb
in
cwtl
sub
pushf
jnp
cwtl
jno
jb
test
jle
cmp
or
adc
push
adc
out
arpl
push
jb
xchg
dec
addr16
addl
lcall
push
andl
cmp
cmp
dec
inc
aaa
jae
add
sbb
inc
fimull
das
rcrb
outsl
movsb
test
xchg
je
or
rolb
mov
ss
cmp
push
in
sbb
push
mov
cmp
int
ror
cmp
mov
dec
shlb
lock
add
cmp
addr16
xchg
add
add
stos
pop
mov
int
ret
jl
pop
rcll
push
cs
loopne
adcl
fdivr
push
dec
jg
out
cwtl
jmp
loop
lea
movsl
aaa
rolb
jl
inc
leave
inc
or
jae
cmpsb
inc
ja
stos
dec
or
or
or
pop
in
add
enter
cmp
jnp
inc
and
add
push
add
fdivp
pop
ret
jne
jb
je
cmp
into
clc
lcall
stos
add
rorl
ret
aaa
ja
adc
push
and
add
or
jns
loopne
andl
out
outsl
sbb
push
jno
movl
out
bound
xor
jle
jle
dec
jne
cmc
push
sbb
add
sbb
pop
rcrb
dec
ret
subb
mov
stc
shl
push
lds
in
or
in
cs
jns
or
push
leave
mov
mov
push
mov
xor
mov
call
repz
pop
aas
adc
insb
cmpsb
xchg
mov
div
xchg
les
jno
lahf
mov
sahf
add
fcoml
in
cmp
xlat
ret
mov
je
sub
cmpsb
push
push
stc
sahf
lahf
call
inc
out
push
ljmpw
add
jb
mov
cmpsl
jb
enter
in
movlps
cs
das
mov
push
jae
xchg
sbb
add
rolb
or
ret
inc
xor
ja
xor
pop
push
das
sarl
mov
outsl
test
jp
mov
movsl
adc
rcrb
mov
push
fs
xchg
or
add
xchg
jmp
dec
es
xchg
adc
rol
stc
add
push
aam
sbb
xchg
jnp
addl
stos
mov
loop
scas
push
cmp
arpl
cmp
dec
mov
rorb
rcr
lods
jb
adc
lahf
dec
cmp
test
push
jae
push
mov
add
loop
mov
rclb
and
sub
aam
addb
add
add
fdivl
mov
cmp
inc
push
lods
fwait
nop
xor
jo
jl
adc
sub
je
hlt
adcb
fstpl
or
gs
or
mov
adc
add
ss
incl
mov
test
or
pop
pop
data16
les
mov
mov
in
cmp
pop
mov
insl
in
xor
pop
loopne
int3
and
mov
cwtl
rcrl
mov
cmp
sub
mov
pop
pop
adc
push
ja
xchg
or
pop
js
out
sub
xchg
aam
push
inc
mov
xor
mov
stos
cmp
enter
mov
iret
fnstenv
mov
or
xor
into
ljmp
xchg
ret
xchg
inc
push
xchg
push
test
pushf
sub
stc
xor
loopne
sbb
xchg
jb
nop
leave
ja
flds
lods
dec
jb
inc
es
pop
cmpsb
cltd
jo
mov
jb
sbb
fists
insl
mov
xor
push
xor
jecxz
aam
sub
jecxz
and
sub
mov
loop
xor
scas
adc
xor
gs
mov
sbb
sub
shrb
xor
sbb
sub
jecxz
fisubrl
bound
addr16
xor
xor
cwtl
or
xchg
or
push
sbb
add
push
xchg
adc
insb
cmc
mov
ds
sbb
pop
adc
mov
mul
xlat
rcrl
scas
fisttps
mov
shlb
pop
popf
xchg
sub
loopne
add
fs
push
dec
dec
aam
inc
outsl
mov
inc
pop
mov
ror
mov
lods
aam
inc
xor
pop
inc
push
push
jecxz
arpl
push
or
cmp
jnp
xchg
movb
adc
add
mov
push
scas
sahf
adc
mov
push
fldenv
inc
popf
mov
js
push
adc
cli
inc
arpl
lcall
dec
mov
in
mov
push
cwtl
add
js
mov
xchg
cmpsl
add
in
testb
dec
fs
jo
push
add
js
and
mov
nop
or
into
add
inc
jno
adc
cltd
xor
add
orl
xor
add
sub
scas
clc
mov
xor
imul
mov
cmp
into
push
xor
sbb
aad
mov
pusha
xor
mov
hlt
lret
aad
cs
jp
test
xchg
idivb
inc
inc
adc
mov
sbb
stos
inc
xchg
inc
jae
xorb
out
sbb
xchg
adc
call
dec
in
pop
cmp
add
roll
dec
stos
mov
cmpsl
lcall
inc
pop
cmp
push
andb
adc
pop
pusha
rolb
cltd
mov
rcrl
cmp
shrd
mov
pop
sub
xor
dec
pop
fiadds
inc
adc
imul
or
cmp
es
pop
sbb
loop
iret
and
mov
stos
xor
push
sbb
fisubl
pop
push
cwtl
pop
loopne
mov
add
dec
sbb
int3
jnp
addr16
in
jle
mov
push
xor
cltd
sbb
fbld
add
arpl
insb
cmp
jb
lock
or
shrb
push
cli
add
shll
jp
cwtl
sub
loope
mov
out
ds
sbb
loope
sbb
data16
shll
xchg
fnstsw
cmp
into
and
push
dec
adc
repz
dec
fs
push
push
lret
ds
aad
sub
xchg
jae
and
shrb
adc
sarb
fwait
loop
jg
scas
and
jnp
jo
push
rol
leave
mov
add
xor
or
dec
add
or
push
add
and
arpl
jle
hlt
add
adc
leave
mov
push
xor
lcall
push
cltd
in
mov
jo
rcrb
fs
aaa
push
or
adc
cmp
out
mov
adc
xlat
in
xor
rep
sbb
lea
popa
push
or
in
xchg
or
insl
mov
and
mov
inc
lahf
inc
stc
cmc
xor
notl
inc
or
mov
lahf
pop
ljmp
pop
scas
imul
xor
push
xchg
pop
add
adc
mov
sub
scas
dec
add
xor
pop
dec
popa
ret
jae
cwtl
div
ret
out
cmpsl
adc
cmp
out
aaa
lret
xchg
xor
icebp
or
nop
or
and
mov
jno
inc
in
in
rolb
jae
sbb
pop
les
jo
rolb
fiaddl
popa
rcl
adc
sar
push
cmp
enter
into
inc
sbb
cmp
mov
and
stos
xor
cmpsb
adc
mov
lret
inc
xchg
xor
sbb
lret
inc
push
push
lcall
xor
lods
mov
pop
orb
popa
mov
inc
int
mov
push
adc
or
inc
fdivl
sbb
gs
lret
or
int
mov
xor
cmpsb
and
outsl
lods
and
adc
fnstenv
and
cmp
fadds
rolb
push
xchg
adcl
jp
dec
out
add
popf
mov
dec
and
adc
xor
and
ror
outsl
ror
jge
add
dec
adc
lret
and
test
out
imul
mov
test
lret
imul
aam
les
test
push
xor
mov
add
sbb
shrb
test
jne
xchg
loopne
push
ret
mov
cltd
add
dec
jbe
sbb
jo
sub
test
push
cld
cltd
rcll
int
cmp
mov
clc
andb
dec
push
je
mov
lcall
shll
sub
jo
xor
dec
aas
or
inc
cmpl
sbb
add
jecxz
or
jo
add
xor
ja
dec
rolb
mov
call
lods
xor
orb
and
adc
iret
in
jno
fmull
fucomi
adc
in
jp
sub
sbb
adc
xor
inc
add
es
lods
sub
cmp
jmp
push
ret
sbb
lock
sbb
xor
sbb
cmp
loope
push
mov
pop
pushf
fisubrl
cmp
push
or
lods
add
adc
lds
mov
orl
je
rol
and
movsl
lret
aam
pop
cmpsb
cltd
adc
mov
jo
pop
fs
lret
or
pop
add
jl
and
pop
and
ljmp
jp
xor
popa
es
add
jmp
fcmovu
or
dec
xor
fcomip
push
les
shrb
cmc
push
shll
push
jl,pt
out
loopne
xchg
dec
jmp
sub
or
out
mov
in
xchg
and
or
iret
jnp
loop
pop
xor
adc
xchg
std
in
adc
nop
jnp
dec
sahf
imul
xlat
xor
xor
scas
cmp
jl
jecxz
xor
rcrl
push
inc
cmp
nop
mov
jb
dec
aaa
add
jae
incb
push
cmp
loop
lret
xor
hlt
and
repnz
dec
xchg
adc
sub
pop
clc
es
push
xor
cli
in
cmp
jecxz
imul
jo
loope
pop
sub
xor
add
daa
cmpsb
sbb
int3
inc
cltd
stos
jo
repz
insl
add
xchg
shll
mov
push
jecxz
sub
adc
dec
cmp
shl
jbe
leave
inc
cmpsb
jb
loop
es
mov
fisubl
dec
scas
mov
cmp
test
cwtl
add
in
push
loopne
xchg
movsl
fmull
cmp
mov
icebp
mov
mov
jl
xchg
lret
add
faddl
and
ss
inc
push
mov
sbb
add
loop
gs
push
daa
pushf
jns
lea
xchg
rcll
or
sub
and
cmpsl
sar
ja
pop
pop
push
mov
pop
mov
pop
aad
inc
decl
jnp
out
stos
adc
push
mov
and
pop
or
add
test
xor
mov
lock
lcall
jecxz
sahf
inc
cmp
sbb
xchg
daa
pop
xor
imull
add
inc
xor
sbb
test
xor
cmp
sbb
js
lret
sbb
pop
movsl
xlat
pop
xor
or
add
xchg
loope
roll
inc
jnp
test
icebp
aad
jnp
gs
push
sbb
dec
sbb
mov
aad
adc
cmc
sbb
sbb
fistl
sbb
shrb
pop
test
xor
and
out
cmp
jl
push
test
cwtl
xor
mov
jae
inc
pop
xchg
and
push
cmpsb
add
pop
mov
rclb
or
cltd
lcall
inc
cmp
jnp
xchg
xchg
stos
push
push
inc
aad
cmp
sbb
lea
lcall
ljmp
adc
jae
cmp
dec
xchg
lret
sub
or
aaa
loop
mov
mov
pop
cmp
lret
cmp
jmp
in
push
xchg
movl
mov
filds
xorl
or
cld
insb
call
aam
inc
je
imull
sbb
clc
ljmp
inc
sub
in
fsubl
pop
mov
inc
mov
push
mov
insb
push
ljmp
mov
sub
call
dec
call
ljmp
sub
cli
movsl
mov
sub
dec
or
and
shrb
lea
aaa
jl
push
lock
int
aam
rorb
dec
out
ds
ret
in
adc
subb
push
sbb
push
sub
pop
xchg
mov
daa
push
aaa
add
and
jge
cmp
push
dec
pop
movsl
stos
jo
or
int
mov
jno
pop
mov
push
and
sub
sbb
push
xchg
int
xchg
add
sub
dec
jo
mov
in
mov
scas
sbb
xor
and
roll
jo
call
test
call
leave
xor
or
add
add
jp
pop
adc
fisubs
pop
xor
pop
scas
and
mov
popa
std
test
popa
or
xchg
faddl
int
outsb
fidivrl
xchg
inc
sbb
and
jo
dec
inc
sbb
adc
lcall
jmp
fiaddl
inc
xor
cwtl
mov
mov
scas
mov
aad
push
xchg
pop
int3
sub
cld
sub
or
xorl
or
inc
shrl
or
add
insl
jmp
xchg
mov
mov
scas
loop
jae
loopne
push
xor
or
add
fs
and
popf
xor
push
push
jnp
in
ret
mov
in
sub
icebp
incl
jb
xor
test
mov
inc
xor
xor
in
call
mov
mov
add
pop
scas
shll
das
rclb
test
sbb
mov
add
xchg
xchg
leave
xchg
lret
out
sbb
mov
bound
mov
js
sub
decl
test
xor
nop
push
cmp
xor
repz
inc
sbb
or
adc
out
pop
and
or
mov
gs
mov
inc
adc
rclb
xor
mov
scas
cmp
gs
lret
sbbl
jnp
inc
lock
add
cmp
loope
xchg
adc
mov
js
stos
adc
add
cli
adc
cmpsb
pop
xor
enter
lret
xor
cmp
add
pushf
push
les
or
pop
pop
pop
repnz
push
loope
aad
fsubrl
scas
outsb
stc
mov
xor
xor
and
cmp
xchg
or
cmp
fsubrs
insl
adc
ret
out
dec
loop
mov
pop
lock
ret
mov
add
loop
xchg
push
pop
mov
decb
xor
xor
pop
cmp
addr16
sub
xchg
cmp
jle
out
pop
int
dec
cmp
iret
add
into
loope
push
fisubl
push
dec
xchg
cwtl
mov
ljmp
pop
xor
cmpl
add
sbb
lods
pop
xchg
adc
add
mov
push
loopne
js
fldt
idivl
imul
sub
mov
add
incl
shll
roll
hlt
dec
inc
sub
mov
pop
mov
popf
stc
mov
dec
pop
add
add
aaa
or
es
pop
push
hlt
add
enter
mov
in
cmp
call
add
sti
jg
xchg
mov
mov
lret
cmpsb
filds
je
xchg
and
mov
inc
imul
dec
xorb
pusha
mov
pop
nop
xor
lahf
cmp
lret
add
fdivrs
sbb
les
rolb
sub
lds
andb
test
ss
rol
lods
xor
jl
mov
inc
pop
dec
inc
cltd
lcall
pop
cmp
or
jae
inc
add
pop
mov
inc
shll
xor
adc
inc
jnp
jo
enter
xor
pop
insl
imul
mov
push
aaa
pop
mov
in
loope
push
pop
scas
out
adc
movsb
and
call
adcb
mov
add
adc
mov
pop
leave
adc
inc
out
roll
inc
push
dec
out
pushf
mov
push
inc
es
add
push
add
addb
aas
mov
push
and
push
jno
mov
or
and
imul
mov
int
mov
inc
pushf
fisubrs
sbb
cmpsb
sahf
mov
addl
adc
push
mov
or
jno
sbb
xchg
mov
push
pop
xor
cmpsb
lea
inc
push
mov
dec
add
add
icebp
outsl
das
dec
shlb
leave
jp
pop
enter
xor
ljmp
mov
lahf
lds
rolb
pop
pop
movl
jo
push
cld
stc
adc
pop
inc
push
test
add
fisttpl
mov
xor
andl
mov
mov
xorb
dec
adc
add
rclb
pop
sbb
push
lods
or
fsubl
fdivl
adc
and
pushl
push
out
adc
mov
les
adc
adc
sub
rol
push
sub
xchg
movsb
push
movsl
push
and
cltd
sbb
pop
insb
add
decl
sub
sbb
or
aad
sub
cmp
mov
add
push
sub
or
in
pop
jbe
push
inc
aam
push
cli
mov
loop
test
add
lcall
xor
pop
out
pop
cmp
loope
inc
in
pop
jo
jo
and
push
hlt
enter
and
mov
aaa
lcall
repz
stc
or
push
jno
mov
add
push
call
adc
push
adc
js
jle
sub
stos
imul
jp
insl
loopne
enter
std
mov
pushl
or
mov
testl
sub
dec
aaa
sbb
pusha
sbbb
push
xor
sub
dec
push
pop
mov
bound
xchg
imul
mov
adc
sub
or
mov
sbb
add
push
mov
inc
mov
test
add
call
push
hlt
mov
cmpsl
mov
sub
nop
xor
inc
lret
fs
mov
inc
mov
mov
fdiv
adc
sub
push
aas
push
add
inc
adc
inc
mov
mov
jno
sub
jmp
shll
xlat
mov
out
adc
lret
lcall
mov
push
cmp
sub
push
fidivs
xor
addb
sub
ret
sub
dec
pop
and
scas
or
inc
inc
pop
in
inc
or
sub
pushl
inc
movhps
adc
add
cmp
jb
jp
test
or
lcall
push
das
xchg
testl
push
dec
pusha
or
sbb
mov
sbb
movsl
jb
sub
test
inc
sbb
cmp
lea
mov
out
jnp
negb
ds
adcb
data16
pop
push
sbb
inc
shl
xor
pusha
sub
pop
int
xchg
pushf
cmpsb
ror
andb
xchg
test
push
inc
lds
push
arpl
push
jnp
outsb
add
cli
fnstcw
push
mov
ja
push
sahf
stos
adc
sbb
push
ret
inc
inc
jae
pop
cmpsl
add
adc
push
loop
jnp
add
cmp
add
pop
inc
xor
cmp
in
in
mov
sub
loopne
mov
out
or
cwtl
sbb
cs
pmulhw
sbb
pop
imul
push
test
adc
icebp
sub
and
push
push
cmp
pop
arpl
in
jne
sbbl
cltd
fs
or
or
or
jno
sbb
imul
std
mov
lret
adc
ss
mov
sub
adc
cmp
jae
ret
ss
inc
rcll
cmp
scas
pop
jno
push
out
push
sbb
dec
xchg
dec
mov
adc
movsl
sbb
push
inc
fs
push
adc
inc
or
push
mov
lahf
dec
jbe
and
jno
sbb
xchg
xor
mov
cmpsb
pop
or
test
cwtl
jb
clc
cmp
leave
mov
add
mov
sub
gs
popa
aaa
mov
bound
pushf
mov
ljmp
loopne
inc
adc
mov
or
mov
jle
test
inc
pushf
dec
add
iret
xchg
popf
and
push
mov
out
insb
mov
jge
jo
in
pop
and
fsubl
xor
xor
push
cltd
aam
jp
mov
dec
push
and
xchg
xor
push
adc
dec
push
and
aad
jo
loopne
cmpsb
ljmp
cld
sbb
xor
mov
sbb
cmpsb
sbb
adc
subl
add
mov
mov
xchg
mov
and
sub
fstpl
adc
xchg
jnp
movsl
icebp
add
rclb
pop
mov
add
popf
repnz
test
mov
adc
pop
idiv
rcrb
stos
xor
sarl
adc
mov
mov
dec
push
jl
orb
dec
xor
xor
addl
or
xor
mov
pop
xchg
xchg
dec
or
sbb
adc
aad
lods
jecxz
lret
cmc
add
das
sub
je
lret
mov
mov
inc
scas
enter
aaa
xchg
cmp
and
jae
xor
lret
jmp
mov
in
mov
cmpsb
or
pop
dec
in
pop
rorb
inc
addr16
je
xchg
or
and
lcall
cmp
cmp
test
jmp
lfs
lods
mul
add
mov
sbbb
mov
xor
movsl
cmp
mov
and
jo
push
sub
mov
xchg
jo
enter
xchg
rclb
cs
loope
xchg
repnz
pop
mov
stos
cmp
ror
out
test
clc
aam
mov
scas
imul
mov
cmp
sbb
xchg
roll
enter
daa
xchg
and
cmpl
sub
mov
push
mov
mov
aam
stc
jno
cltd
mov
add
daa
addr16
mov
inc
inc
jg
sub
xor
lods
loop
aaa
mov
push
push
push
push
adc
icebp
add
push
outsb
dec
dec
inc
sub
jmp
jecxz
push
js
psraw
es
pusha
outsb
into
andl
loop
add
xorl
add
das
lcall
xchg
xor
dec
cmp
int
xor
subb
addr16
cmp
icebp
xchg
sub
mov
xor
push
into
push
clc
cmc
fwait
xor
loope
test
dec
cmp
and
bound
xchg
jle
jb
or
push
sub
ficoms
mov
outsb
pop
mov
xor
loopne
add
lret
and
push
and
mov
inc
or
jl
shl
push
pushf
and
ret
adc
or
pushf
sbbl
inc
aad
xchg
ds
test
loopne
andl
out
testb
or
daa
and
out
or
cli
cmp
scas
loope
and
jl
in
es
add
xchg
dec
ret
mov
sub
push
adc
bound
pop
mov
pop
cmc
test
subb
jmp
scas
add
mov
clc
xchg
xor
pop
fs
ja
mov
adc
fwait
push
retw
rcrl
aas
push
cmpsb
pop
push
cmpsb
ljmp
sbbl
and
inc
lret
pushf
insb
push
dec
add
clc
push
int3
scas
mov
or
add
fwait
lods
push
flds
loopne
fisttpll
inc
mov
sbb
lea
ss
mov
roll
pop
and
inc
dec
loopne
mov
test
push
inc
dec
fisubl
cmpl
loop
pop
bound
xchg
addl
sub
push
adc
sbb
inc
xor
enter
or
out
and
mov
jo
stc
xor
add
xchg
mov
push
hlt
sbb
mov
addb
sub
addb
jbe
push
xchg
shll
rolb
sbb
inc
movhps
mov
add
in
shr
fwait
pop
add
mov
jo
test
xchg
sub
mov
push
cmp
int
scas
xlat
test
ss
je
xchg
ret
cmpb
push
jae
stos
js
lret
lods
ljmp
sbb
inc
bound
jnp
and
push
data16
sbb
in
xorb
xor
mov
or
add
push
cltd
and
jbe
jae
dec
hlt
mov
pusha
sub
add
xchg
and
icebp
stos
test
adc
or
sti
adc
sbb
push
jnp
loopne
in
sahf
repnz
push
sub
scas
pushf
ss
subb
or
pusha
push
loop
pop
add
cwtl
addb
addb
pop
cmp
fwait
jo
jb
pop
lods
in
in
pushf
or
push
or
sbb
mov
xchg
push
gs
jbe
imul
dec
push
aaa
sub
ljmp
outsb
inc
add
mov
jne
mov
scas
test
mov
pop
and
push
std
xchg
repz
push
shlb
or
loopne
mov
add
pop
repnz
loopne
ds
out
lods
inc
pop
mov
out
movsl
add
and
test
and
mov
mov
test
sahf
ret
bound
and
sub
cli
inc
movsl
xlat
mov
orl
push
add
and
mov
adc
in
pop
test
outsb
cmp
and
lret
test
push
xor
cltd
xor
pop
xor
sbb
sahf
cli
pop
push
into
fs
sub
add
pop
mov
pop
inc
jmp
and
mov
inc
xor
mov
push
js
cwtl
enter
cmpsl
int
lds
xchg
sub
push
int
add
sub
push
or
inc
push
inc
fdivl
inc
adc
out
xchg
add
sub
cwtl
shl
add
int
and
jp
xor
add
pop
cmpsb
add
jp
push
cmp
fcmovne
pop
jae
cmpsb
lret
rcr
inc
cmp
lcall
nop
leave
mov
in
adc
test
lret
dec
stos
sbb
push
aam
outsl
dec
sbb
jb
addr16
jnp
shrb
xchg
xor
xchg
loop
cwtl
cwtl
sub
or
adc
xchg
repnz
cmpsb
push
cwtl
ds
bound
or
sbb
dec
scas
xchg
inc
jmp
push
jmp
inc
push
dec
xchg
inc
icebp
inc
dec
add
shl
stc
cmp
cmp
inc
loopne
cmpsl
cmp
sbb
pop
mov
push
cmp
in
push
push
cld
inc
jbe
inc
mov
stos
push
adc
push
dec
or
pop
and
cli
push
sbb
sub
aad
mov
popf
ret
dec
popa
stos
pop
push
jo
cmp
inc
aam
push
mov
inc
pop
sub
out
inc
insb
popa
mov
fxtract
mov
mov
andb
call
neg
in
pop
andb
sub
add
dec
mov
mov
inc
paddusb
das
dec
repz
inc
fs
jle
sub
mov
push
outsb
mov
imul
push
push
dec
stos
int3
lea
clc
sahf
mov
inc
aad
dec
xchg
cltd
aam
movsb
pop
pusha
movsl
pop
int3
mul
in
pop
inc
jo
push
mov
shrb
xchg
mov
jl
std
sahf
sbb
pop
ljmp
pop
jno
lea
adc
add
and
adc
inc
mov
lock
xor
dec
push
adc
adc
xchg
lret
adc
sub
pop
stc
dec
mov
cmpb
jp
sub
push
orl
popf
inc
jp
fisubrl
push
data16
fiadds
ja
ljmp
add
xor
add
out
aam
cmp
sub
mov
mov
push
aas
addr16
push
mov
mov
xchg
or
and
or
lret
or
cmp
cmp
iret
popf
jmp
imul
leave
pusha
sub
movsb
scas
sti
xor
push
add
pop
xchg
adc
dec
or
out
data16
dec
adc
jb
pushf
sub
cs
add
int
sar
nop
mov
inc
xchg
dec
xchg
or
fildll
xchg
sbbl
movsl
in
sbb
stos
lods
lods
push
xchg
dec
mov
add
mov
mov
insb
xchg
int
sub
add
add
pop
int
adc
xor
mov
pop
cwtl
pop
int
and
mov
sub
ljmp
xchg
xor
or
sbb
scas
add
call
and
inc
movsb
in
clc
clc
aas
dec
pop
pushf
lock
jnp
cwtl
scas
repnz
xor
add
aas
cmp
scas
sbb
filds
pusha
fdivp
aam
mov
add
inc
jne
mov
call
xchg
lret
and
push
or
xchg
arpl
sub
push
or
cs
jo
mov
js
das
orl
sub
cmp
js
cwtl
aaa
rolb
cs
movl
dec
and
imull
push
scas
mov
mov
loope
push
add
sbb
jns
mov
mov
pusha
add
jo
orl
push
add
or
pop
pushf
adc
imul
cmp
in
fwait
mov
rolb
fwait
mov
arpl
adc
orb
es
push
stos
leave
lock
or
xor
jne
inc
or
xchg
or
mov
cs
jb
inc
es
xor
incl
adc
orb
inc
es
sarb
push
cmp
pop
add
cmp
mov
int
jnp
push
arpl
sbb
push
xchg
xor
xlat
cmp
push
xchg
stos
or
push
in
sub
mov
sbb
rcrl
lods
mov
das
add
int
pushf
imul
push
xor
ljmp
fstpl
push
fmull
adc
and
fs
cmpb
loopne
subl
and
in
stc
xchg
mov
lret
xchg
call
inc
push
orl
sub
jne
fisttps
lock
xlat
lock
adc
sti
insb
ss
std
jno
add
push
dec
mov
inc
cmp
daa
imul
adc
or
mov
add
stos
jnp
add
jnp
stc
and
mov
push
or
stc
or
adc
or
mov
mov
push
inc
cwtl
and
inc
rcrb
mov
mov
sbb
dec
inc
lods
pop
fs
inc
ljmp
mov
or
stos
sbb
lcall
dec
cli
xor
call
mov
cmp
mov
popf
pop
lods
mov
jecxz
fwait
or
and
addr16
push
or
or
jmp
ror
or
scas
adc
or
add
mov
xor
popa
inc
jb
and
xor
xchg
push
inc
mov
add
xchg
lret
add
dec
dec
xor
push
scas
xor
push
xchg
test
jo
andb
je
dec
adc
and
out
dec
dec
test
sbb
fwait
mov
xchg
xchg
addr16
xchg
sub
faddl
sub
or
sbbb
adc
sahf
push
mov
xor
stos
push
xchg
and
dec
add
dec
adc
xchg
dec
pop
push
push
and
ss
add
in
or
lahf
sub
add
test
dec
mov
stos
jb
sub
outsl
mov
push
xor
adc
mov
push
add
aaa
imul
add
idivl
add
aaa
jb
ret
sbb
push
movsl
call
or
call
call
nop
popa
loop
mov
add
xor
add
lcall
adc
sbbb
loop
inc
insl
scas
lret
aam
inc
push
andb
test
mov
call
dec
xlat
mov
push
loope
outsb
sbb
cmp
xorb
xor
adc
pop
jnp
inc
xchg
jns
test
cmp
ficomps
shl
xlat
cmp
cmp
dec
mov
add
cmp
mov
cmpsb
repz
inc
dec
dec
add
mov
inc
mov
subb
addr16
mov
xor
sar
sbb
adc
sbb
xor
in
push
or
pop
outsl
rcl
scas
sti
lea
mov
pusha
or
add
mov
sub
pop
sbb
mov
push
push
sub
ret
loopne
or
mov
add
mov
pop
push
add
ja
fwait
xchg
mov
inc
dec
subb
scas
loop
dec
mov
xor
push
imul
push
xor
fildll
cltd
sub
jecxz
bound
mov
dec
imul
mov
mov
testl
inc
xchg
adc
push
pushf
das
stos
out
dec
pop
test
sahf
mov
in
push
cwtl
and
fucomp
call
cmp
rclb
jl
or
pop
vstmxcsr
cs
roll
faddl
stc
mov
pop
xor
or
outsl
dec
pop
xchg
dec
adc
int3
mov
pop
jae
or
mov
dec
test
mov
jl
or
mov
lret
cmp
sbb
addb
sub
and
push
or
imul
lods
jg
and
inc
stos
push
mov
mov
jae
test
pop
pushf
mov
mov
lcall
lcall
sbb
addr16
test
paddd
push
inc
jae
xchg
pop
inc
pop
inc
push
sbb
push
popa
cmp
cmp
jae
ss
adc
jae
test
in
movsl
fnsave
jp
btc
mov
jmp
rclb
ret
aad
mov
add
jmp
fwait
push
popl
xor
inc
mov
pop
cmp
scas
out
push
lcall
pusha
daa
add
jae
adcb
adc
cmpl
pop
xchg
imul
iret
xchg
mov
mov
xlat
in
fsubr
dec
adc
or
rorb
sbb
sub
push
add
int
mov
xchg
inc
jnp
or
and
das
xchg
pop
cmp
decl
lcall
sbbl
in
rclb
es
xor
loop
xchg
or
leave
cmp
cmp
adc
cwtl
stc
or
add
mov
popa
sub
or
orb
sub
inc
sub
icebp
mov
rorb
ret
fldenv
push
test
rolb
mov
jo
cmpl
push
jmp
inc
mov
sub
ret
stc
inc
add
xor
daa
sub
ja
loopne
dec
mov
and
mov
fsubrs
push
add
add
bnd
in
scas
lds
adc
push
lcall
fs
int3
xor
subb
adc
jo
out
xor
sbb
pop
cmp
xor
pop
mov
sahf
mov
lods
test
mov
ret
cmpsb
stos
sbb
sub
ret
es
inc
push
and
inc
adc
call
sub
xor
xchg
cltd
lcall
adc
push
dec
push
sub
jae
enter
test
sbb
fs
pop
daa
ret
push
cmc
sub
inc
xchg
or
lcall
push
jae
push
in
shll
or
xchg
sahf
in
and
cltd
fsub
push
lock
jb
push
test
fs
inc
repnz
sbb
scas
add
addr16
ret
or
sub
fidivrl
in
push
in
or
mov
add
add
mov
sti
inc
les
xor
jmp
xchg
mov
loop
sub
test
xor
hlt
or
dec
push
orb
mov
es
addr16
adc
mov
or
pop
adc
pop
scas
enter
xor
mov
dec
add
add
xchg
test
mov
subl
sti
sbb
adc
jmp
pop
cmp
inc
lds
lock
xchg
test
add
ret
cmp
cmp
mov
sub
add
cmp
out
loopne
push
out
loopne
push
add
add
daa
idivb
dec
aaa
or
orb
sbb
and
cvtdq2ps
dec
push
out
xchg
adc
loop
aam
inc
mov
gs
inc
adc
sbb
dec
sub
xor
sub
xchg
mov
rep
lds
or
rcl
inc
into
rcll
scas
adc
int
mov
inc
and
ss
xor
or
xor
addr16
lcall
push
mov
push
push
cmp
or
ret
xchg
pop
lods
mov
imul
in
adc
and
sti
or
je
out
out
pop
xor
push
shl
lea
loopne
loop
inc
std
pop
and
aaa
jle
outsb
lods
in
push
out
js
xchg
cwtl
dec
or
test
es
xorb
loope
clc
js
int
mov
jl
inc
push
mov
dec
push
out
cmpsb
loop
in
mov
ficoms
cmp
sbb
in
out
in
mov
sbb
addb
hlt
mov
cmp
dec
cmpsl
mov
nop
imul
sbb
pop
adc
ljmp
xchg
pop
xchg
mov
dec
pop
mov
inc
mov
cld
cs
es
fldl
mov
nop
xchg
and
inc
pop
adc
sbb
push
jb
xlat
sbb
xor
jecxz
xchg
ds
loopne
jno
bound
insl
xchg
addl
sub
out
adc
cmp
stc
add
or
sbb
push
je
xchg
pop
imul
add
inc
test
push
arpl
pushf
and
or
inc
adc
scas
sbb
scas
loop
dec
xor
inc
sahf
imul
jo
int3
xchg
popa
or
inc
mov
mov
pop
lret
xlat
stos
cmp
pop
inc
push
adcl
stos
pop
sbb
loopne
jae
shr
xor
inc
test
adc
jb
jle
and
ljmp
jecxz
cmp
sti
lret
jae
jo
or
xor
dec
sub
out
and
and
pop
pop
add
sbb
icebp
dec
adc
loopne
xchg
jg
or
xor
imul
add
cmp
jp
sbb
xor
push
inc
cmpsb
sbb
data16
pop
inc
or
jo
sub
xor
cmp
pop
mov
and
out
outsb
xor
insb
jmp
nop
and
lcall
and
fmuls
sbb
pop
xor
stos
jb
sbbb
push
mov
or
ret
add
mov
fwait
iret
inc
xchg
das
js
xor
add
into
gs
je
dec
adc
lods
sub
or
jo
rcr
adc
in
nop
jae
or
cmp
cmp
cmp
int
sub
fsubrs
mov
fisttpl
dec
or
inc
adc
push
jo
and
daa
sub
pop
lcall
andb
sbb
push
sub
dec
cmp
imul
cmpsl
xor
lret
ljmp
jbe
sub
sbb
xor
mov
out
inc
or
cmp
fsubs
int
jo
mov
dec
pushf
leave
js
push
fildll
enter
jnp
dec
and
mov
or
aad
xor
or
xor
pusha
jo
mov
in
add
mov
push
cmp
lea
in
pop
jno
push
push
es
jecxz
pop
push
dec
push
decb
call
movsb
push
adc
ret
lock
cmp
xchg
lret
leave
sti
ret
and
iret
loop
jo
sub
js
or
mov
mov
addr16
or
test
push
inc
inc
shrl
sub
mov
sub
or
add
popf
push
pusha
ljmp
loopne
lea
cmp
add
hlt
xchg
xor
inc
jae
or
in
orb
js
jmp
push
sub
pop
cli
push
mulb
in
test
jb
mov
mov
pop
push
mov
inc
adc
xorb
sub
out
leave
or
leave
andb
test
movsl
pushf
push
xor
and
loopne
call
addr16
xor
je
cvtpi2ps
xlat
pusha
cli
cs
scas
loopne
repnz
roll
xchg
and
pusha
xor
das
hlt
scas
inc
push
xchg
or
push
rorl
or
js
jo
sub
ror
mov
jns
sbb
js
mov
add
xchg
xchg
push
sbb
push
cmp
mov
mov
jb
int
or
cmp
jo
push
mov
das
or
scas
mov
aas
shlb
sbb
push
mov
fsubl
jb
dec
sbb
pop
ds
shlb
mov
cmp
nop
push
lods
dec
sti
mov
sub
rol
mov
ret
popf
push
repnz
mov
into
loop
inc
pusha
jb
push
les
sbb
push
and
push
imul
test
and
cmpsl
stc
mov
popa
push
xor
fidivs
sbb
popf
jo
push
or
subb
xor
cltd
mov
push
.byte
decl
push
inc
xchg
lea
addr16
insl
stc
call
xchg
or
stc
mov
addr16
call
or
add
xor
stc
xor
mov
addr16
insl
fwait
mov
mov
mov
cmp
call
loop
call
insl
lods
jne
or
insl
rcll
stc
std
mov
mov
adc
addr16
fwait
stc
in
call
std
in
mov
or
xchg
jnp
fwait
aaa
xor
xchg
xor
stc
loop
mov
mov
insl
cmp
mov
cmp
dec
stc
insl
pop
xor
push
xchg
mov
fnstsw
jnp
cmp
mov
fisubrs
movsb
add
or
aaa
test
ds
bound
jnp
fidivl
xor
inc
fwait
fwait
pop
xchg
mov
call
xchg
addr16
mov
pop
clc
xchg
xchg
push
fistpl
in
xchg
loop
ret
push
std
cmp
fwait
mov
jbe
pop
fiaddl
xor
jne
mov
js
addr16
rcrl
push
insl
sub
sahf
mov
or
ss
jnp
xchg
in
sbb
mov
pop
imul
gs
scas
es
imul
push
pop
fildll
jae
rclb
imul
jnp
movsl
sub
lods
mov
pop
shrb
and
pop
in
ja
scas
xchg
lods
fcmovnu
stc
sub
inc
inc
sbb
imul
dec
dec
fwait
sbb
fdivrl
sub
sbb
mov
ficoml
add
ds
cmp
test
pop
mov
xchg
fisttps
daa
aaa
adc
mov
sub
xchg
pop
scas
or
lcall
in
push
push
mov
add
negl
push
push
lea
push
call
leave
mov
sbb
sbb
aad
repnz
and
jnp
loopne
lods
jo
insl
dec
cmpsl
aad
pop
fistpl
int
loop
popl
stc
or
rorb
xchg
pusha
stc
sub
sbb
jo
mov
pop
imul
subl
sbb
and
and
xchg
addr16
adc
loop
fsubr
push
imul
ja
fistpl
adc
pop
ss
call
inc
addb
xchg
push
out
dec
or
fwait
in
push
inc
imul
jo
out
pop
adc
pop
std
lcall
lret
out
lods
cltd
sbb
lcall
shll
jo
jl
add
or
add
jo
loope
and
inc
dec
out
mov
sbb
xor
mov
sub
cmp
add
dec
jae
loope
sbb
cmp
push
fistpl
mov
inc
mov
push
loope
or
sub
cld
data16
cmp
cmp
mov
loop
jns
and
test
mov
pop
or
lcall
xor
push
stos
test
lods
test
mov
dec
or
cmp
sbb
push
scas
sbb
lods
sbb
xchg
push
sbb
xchg
cmp
imul
pop
pop
push
scas
pusha
or
shr
cmp
xchg
aam
dec
jbe
xchg
lcall
cld
imul
sti
out
jbe
ds
fdiv
addr16
mov
outsb
call
push
push
or
push
jb
push
add
push
mov
add
add
xchg
sbb
xlat
sbbb
les
lods
rol
cmp
cld
pop
jae
or
and
push
sbb
add
fwait
movsl
cmpsl
inc
sub
test
sbb
aad
insl
rcll
stos
shll
int
in
das
push
stc
mov
ret
cmp
xlat
shr
ss
jae
cmp
aaa
sbb
adc
adc
fsubrl
loopne
aad
shl
add
inc
jae
cmpsb
cmp
fcoml
pop
push
push
loop
mov
jnp
push
aaa
stc
popf
lock
lods
je
cmp
aas
cmp
jge
aam
imul
lcall
mov
dec
dec
xor
xlat
or
scas
mov
orl
into
jge
cli
mov
shr
aaa
xchg
lcall
inc
pop
or
mov
scas
mov
addr16
xor
push
add
stos
ds
pop
mov
dec
mov
pop
inc
xor
stos
or
fwait
cmc
mov
test
xchg
push
call
sbb
pop
scas
stos
nop
cmp
shlb
xchg
sbb
pop
outsb
aaa
aas
mov
push
mov
push
pushf
cmp
lods
sbb
fisttps
xchg
pushf
xchg
call
das
stc
jbe
jno
subl
or
rol
shl
mov
push
or
in
jge
je
fistps
xchg
mov
cmc
mov
xbegin
jae
shrb
add
call
jmp
add
push
rcr
push
pushl
roll
or
std
jg
sbb
push
add
sbb
add
sbb
inc
jmp
jnp
cmp
scas
and
sbb
inc
inc
scas
idivb
sbb
outsl
xchg
sbb
stos
sbb
jecxz
adcl
loop
push
cmpsb
lahf
xchg
sarl
es
dec
mov
and
mov
test
mov
inc
fisttpl
push
sbb
pop
sub
loop
call
test
dec
xchg
lods
sbb
add
es
popa
mov
xor
inc
or
scas
pusha
dec
mov
pop
insl
cmp
jg
adc
pop
in
sbb
inc
imul
or
rolb
or
aaa
xor
fwait
mov
dec
ror
or
sub
xor
adc
loopne
or
movsb
stos
popa
mov
jp
imul
mov
in
cmp
adc
cld
xchg
jmp
push
xor
mov
xor
or
cltd
sub
mov
imulb
add
lcall
outsl
push
outsb
and
mov
jne
sbb
jae
ss
int
dec
sbb
popa
call
pop
shr
sbb
mov
daa
push
or
in
xchg
push
stc
into
lds
fadds
xor
or
lods
cmpb
cmp
loope
sar
mov
rcrb
in
sbb
add
shll
stc
addr16
movl
mov
jnp
stc
shr
fcmovb
xor
addr16
push
push
cmp
sti
inc
rcll
sti
fistps
sbb
cwtl
sbb
pop
or
stc
mov
fistpl
xlat
lock
sub
les
push
xchg
pushf
and
pop
lock
daa
pop
inc
sub
push
inc
xchg
jae
mov
cmpsb
inc
or
jle
push
out
lcall
sbb
aas
mov
adc
adc
jb
scas
mov
push
sbb
rorl
xchg
mov
lcall
or
xor
fwait
jae
sbb
xchg
popa
cmp
push
sbb
add
and
ret
pusha
mov
iret
iret
aam
pop
jnp
xchg
pop
xlat
insl
negl
imul
enter
call
fcmovne
xor
fwait
iret
mov
sbb
xor
or
lahf
jge
mov
xor
and
lods
pop
scas
cmc
rclb
outsb
cmp
stc
mov
sub
scas
sub
addb
adc
stc
in
ret
aam
call
push
xor
sub
cmp
scas
out
rcr
jg
or
out
inc
mov
xor
leave
sbb
lods
mov
fwait
clc
dec
mov
inc
jae
add
add
mov
roll
enterw
into
rcrl
or
jnp
testb
cmp
in
jle
adc
add
aaa
dec
adc
into
xchg
sbb
mov
xchg
in
adc
in
fistpl
jmp
mov
int3
lods
hlt
add
rclb
or
push
add
pop
add
pop
popf
shlb
mov
push
fnstcw
inc
fcoml
inc
loopne
and
or
mov
add
mov
pop
data16
mov
mov
add
addb
add
loopne
jle
scas
sbbb
rcrb
rorb
inc
ret
rclb
or
mov
shlb
push
ss
scas
data16
sbb
insl
sbb
movsb
cmp
mov
in
dec
cmp
sbb
jle
add
push
pop
xor
cmpsb
gs
dec
push
sbb
fimull
mov
loopne
ljmp
adc
popf
mov
push
pop
xchg
stos
pusha
push
movsl
andb
iret
stc
jp
push
stos
xchg
sbb
mov
loop
inc
fwait
sub
pop
mov
movsb
orl
shl
ror
or
call
xchg
xchg
xor
fsub
xchg
sbb
int
mov
mov
and
addr16
mov
push
rcl
or
pop
xchg
fisttps
addr16
fwait
jmp
pop
xchg
orl
cmpsb
or
pop
fldcw
sqrtps
addr16
inc
out
jb
scas
xchg
jo
inc
cmp
mov
out
mov
insl
xor
jecxz
push
lcall
loopne
ror
fwait
in
pop
rcrl
orb
and
cmp
mov
fnsave
cmp
inc
es
dec
add
and
sub
cmp
xor
jo
adc
loopne
cmp
add
mov
push
mov
scas
out
cltd
fadds
in
nop
fcoml
aas
xchg
inc
add
sub
jg
xor
cli
sub
sbbb
fwait
clc
adc
dec
push
adc
sbb
push
dec
push
popa
adc
dec
outsb
mov
decl
lahf
push
add
adc
push
add
sbb
in
fiadds
add
xchg
iret
push
cltd
addl
clc
xchg
or
mov
mov
fcmovnu
repz
push
add
inc
xor
in
and
lock
push
add
dec
arpl
sar
dec
lods
inc
cld
mov
jmp
dec
and
clc
ds
and
adc
mov
xchg
jbe
aaa
or
or
enter
loopne
jo
jo
add
lods
fnstsw
enter
xor
lods
addl
xor
adc
push
sbb
sub
es
mov
push
pop
inc
mov
push
gs
sub
sahf
aam
jb
xor
sub
add
inc
and
xchg
test
xor
and
out
pop
jae
pusha
rclb
jae
jmp
inc
fsubrl
call
jae
jb
dec
mov
lcall
jne
push
or
rorl
btc
mov
cltd
lea
and
pop
int
mov
pop
mov
add
push
cmp
jle
cmp
lcall
push
pop
leave
arpl
andl
addr16
ret
sbb
scas
mov
daa
pop
xor
imul
jmp
mov
cs
sbb
gs
push
or
lret
push
imul
int3
insl
shl
mov
pushf
dec
and
add
nop
push
cmp
addr16
jae
xchg
xchg
xlat
inc
addb
sub
test
mov
adc
and
adc
add
mov
repz
pusha
xor
xor
ret
out
mov
xor
cmp
lods
dec
sbb
sub
inc
icebp
incl
sub
mov
ret
fcoml
test
dec
jle
out
shrl
push
test
loopne
jl
repnz
mov
leave
inc
call
push
xchg
lret
les
sbb
les
inc
in
mov
push
sbb
mov
imul
mov
hlt
mov
js
sub
call
ss
xor
add
bound
add
rorl
imul
lcall
mov
call
rorl
and
sbb
lea
sbb
clc
lods
inc
xor
sbb
add
push
xor
xor
fwait
or
jne
mov
aaa
push
add
ret
xor
dec
loopne
pushf
add
into
push
dec
mov
xor
mov
push
mov
sub
push
das
iret
sub
mov
aad
or
xor
out
cmp
js
jb
das
xlat
add
mov
add
push
xor
mov
call
ret
cmp
mov
fimuls
pop
add
adc
pop
shll
xchg
or
mov
xor
or
sbb
ret
sub
mov
sbb
mov
mov
add
stos
lcall
mov
mov
or
lods
sbb
repz
dec
dec
in
dec
sub
xchg
scas
movsb
xor
xor
mov
mov
jmp
imull
ret
je
shl
mov
negb
adc
dec
daa
adc
notb
insl
cltd
xor
pop
lcall
xchg
sbb
mov
jmp
pop
rol
std
mov
subl
and
adc
xor
xor
scas
pop
lds
inc
fsubr
push
mov
mov
xchg
mov
cltd
xor
sub
and
pop
in
inc
mov
jnp
fidivl
push
rcll
inc
mov
inc
sbb
daa
push
dec
push
loop
xor
ficompl
pop
inc
jnp
push
push
cwtl
sarl
or
sysenter
insb
xchg
ficomps
add
jne
jo
cmp
lahf
mov
stc
or
scas
adc
mov
mov
add
stc
xor
pop
xchg
scas
dec
mov
lods
add
adc
xchg
imul
pusha
sub
andl
icebp
shll
leave
pop
pop
mov
gs
jae
or
loope
loopne
lcall
mov
ret
sbb
or
mov
icebp
xchg
mov
stos
fwait
stos
inc
into
sub
stc
pop
push
loopne
popa
call
lods
loopne
push
pop
insl
ss
in
loopne
leave
int
push
sub
int
xor
loopne
popw
mov
push
add
mov
mov
add
cmp
mov
add
loope
fmuls
aam
call
push
xchg
push
adc
adc
dec
sbb
add
inc
jg
mov
shrb
jmp
inc
cld
fwait
sarb
inc
les
lods
sbb
push
mov
in
mov
push
and
push
outsl
dec
imul
aas
or
mov
xchg
and
cld
clc
hlt
and
or
and
cli
scas
inc
xor
test
loopne
jp
jns
or
push
mov
outsb
xlat
push
jo
sbb
or
sub
mov
sbb
insl
or
jle
inc
sub
mov
xorl
fwait
into
xlat
or
mov
xor
aad
pop
mov
lods
mov
loop
inc
testb
xor
cmp
aam
in
aad
sub
and
sbb
jb
jmp
test
lahf
cmpsb
imul
dec
adc
and
mov
call
test
or
leave
fdivrl
sub
loop
fidivrl
jb
add
jge
std
xchg
test
push
rcrb
sti
adc
dec
jae
xlat
dec
or
xchg
cmp
es
push
jnp
jo
mov
push
and
fwait
mov
fs
aaa
in
gs
push
or
les
mov
sub
adc
push
fs
add
jae
push
aam
xchg
pop
test
pushf
loopne
push
ficompl
adc
sbb
gs
pop
popf
lret
add
or
out
push
dec
mov
push
pop
jp
adc
mov
pop
or
data16
adc
xchg
inc
mov
fs
sub
adc
aad
ljmp
std
jmp
imul
pop
in
nop
mov
or
hlt
adc
ljmp
pop
cs
lahf
inc
dec
xchg
mov
ss
out
push
fsts
xchg
fimuls
adc
shll
sub
pop
lret
adc
push
pushf
int3
xor
xor
addr16
in
aad
mov
cmp
rcll
add
sbb
fisubl
stc
xor
pop
sub
sbb
add
push
shl
pushw
fisttpl
add
mov
cmp
xor
ficompl
pop
inc
popa
loopne
inc
xchg
xchg
call
or
dec
mov
jle
xor
pop
loope
inc
jae
sbb
and
push
inc
mov
sbb
fsub
divb
cmp
sbb
jmp
pop
rcrl
xchg
pop
stc
ret
cmp
sbb
arpl
mov
hlt
cmp
xchg
cltd
jo
sub
sbb
sub
mov
add
jbe
pop
stc
adc
add
shll
sub
adc
pusha
gs
pusha
xor
push
sti
in
or
jo
dec
inc
xchg
sbb
inc
int
mov
aam
jb
test
mov
es
push
bound
cmc
jmp
lea
mov
push
pop
inc
es
fs
jo
sub
loopne
lods
inc
push
cld
pop
mov
scas
jge
dec
fst
daa
icebp
mov
out
je
repz
jg
sub
out
incl
fmulp
dec
sub
push
xchg
pop
repz
ja
arpl
cmp
cmp
fdivrl
and
or
mov
cmpsb
xor
or
xor
insb
shr
fistpl
xchg
mov
gs
push
je
jp
xchg
sahf
jle
icebp
xchg
popa
cmp
inc
xchg
adc
mov
sbb
test
rcll
and
xor
shlb
iret
mov
and
imul
adc
push
mov
push
cmpsb
xor
fs
test
movsl
jo
sti
mov
mov
fs
adc
cmp
xor
les
sub
sub
add
stos
add
cltd
sub
mov
movsb
out
or
xchg
cmpsb
cs
and
xchg
ror
stos
inc
cs
icebp
xor
mov
loope
add
shr
loope
push
je
insl
loop
fwait
pusha
push
xlat
xchg
jmp
nop
mov
push
push
inc
repnz
mov
shlb
jo
xchg
fistps
xlat
pop
cmp
in
mov
shrd
pop
call
push
test
pop
mov
lahf
scas
stos
adc
mov
cmp
dec
test
lods
push
jae
leave
xor
call
or
call
aad
or
mov
mov
pop
fdiv
adc
ss
mov
add
inc
cld
push
jbe
call
mov
ds
mov
enter
shll
cli
pop
add
mov
jmp
jmp
adc
mov
scas
xor
cmpsb
add
loop
in
je
and
ds
sbb
dec
cmpsb
scas
jb
mov
xor
loopne
lret
popa
push
inc
jnp
imul
pop
mov
sbb
lret
addr16
inc
test
test
int
and
sub
aad
daa
stos
mov
enter
mov
and
xchg
or
dec
mov
inc
mov
jo
xlat
dec
and
xchg
cmp
pop
lods
mov
push
movsb
inc
jl
dec
xor
fcoms
sbb
add
jl
insb
xor
or
enter
loope
sbb
xchg
dec
insb
int
fnstsw
mov
mov
mov
mov
mov
fsts
mov
mov
mov
dec
adc
and
xchg
jnp
out
mov
jg
xchg
std
or
xor
cld
cltd
aaa
scas
adc
fimuls
push
sub
sbb
in
xchg
xor
sbb
push
pop
rcl
xchg
cmp
scas
stc
push
rcrl
scas
mov
cmpsb
inc
xchg
dec
mov
scas
sbb
addb
leave
pop
lcall
clc
or
adc
rcll
xchg
rclb
inc
ljmp
sbb
lods
sub
and
pop
push
addr16
int
loop
cltd
jae
lods
iret
cmp
lods
jp
sahf
xor
lea
pop
int3
push
jb
out
jnp
and
lcall
fnstcw
fiadds
sbb
pop
sub
incl
xchg
pop
and
add
aam
out
or
adc
jg
jne
or
push
hlt
jnp
jae
cltd
push
mov
xchg
test
leave
cmpsl
sub
xor
sti
xor
xor
jnp
jmp
addr16
lods
dec
xchg
aaa
cmp
xchg
addr16
lret
push
imul
insb
aam
xchg
fldl
xchg
popa
test
lret
sahf
lret
sbb
dec
dec
add
mov
or
int
sbb
in
mov
cs
imul
cmc
add
jb
mov
insb
add
pop
pop
xor
pop
pop
push
or
add
mov
loopne
pop
addr16
mov
dec
je
sub
push
add
push
scas
test
int
stc
scas
xor
xor
and
andb
push
jo
mov
ret
inc
push
xchg
add
sub
or
enter
push
fiaddl
jo
push
cmp
imul
sub
pop
out
pop
leave
shl
jo
rorb
stc
stc
pop
rclb
dec
mov
ret
push
mov
sub
pop
add
mov
add
xor
aaa
ss
push
nop
mov
inc
test
mov
cltd
ss
arpl
cmp
or
js
loop
push
lcall
inc
pop
xchg
insl
aaa
lret
mov
cmc
lcall
mov
adc
inc
add
inc
ret
mov
push
lock
dec
std
outsl
mov
dec
cld
mov
mov
pop
cmpl
adc
xor
hlt
pop
jae
rcl
test
or
xchg
pop
add
and
fisubl
in
sbb
data16
adc
pusha
mov
popf
loop
subl
in
dec
hlt
loope
or
inc
xchg
mov
xor
sbb
or
loopne
add
add
add
push
pop
lods
xor
sbb
lret
add
loopne
push
add
adc
sbbl
pop
xchg
push
add
adc
notb
loopne
orb
fcmovnb
mov
inc
pusha
sbbl
pop
shll
xor
lods
andl
add
cmp
dec
fs
sti
xchg
adc
rcrb
mov
mov
and
mov
sbb
stos
hlt
loop
sbbl
rclb
jmp
inc
pusha
arpl
mov
or
pop
sub
out
jmp
dec
mov
addr16
sbb
xchg
xchg
sarb
or
ljmp
jae
xor
scas
sbb
inc
adc
mov
test
pop
rorb
out
imul
mov
inc
inc
mov
xchg
cmp
loop
mov
fs
mov
push
push
push
mov
int
in
push
push
mov
call
in
call
pushl
sub
or
arpl
add
divb
test
add
lret
mov
pop
out
mulps
sahf
cmp
std
mov
call
xor
sbb
mov
jle
dec
pop
xor
cs
dec
sub
out
hlt
and
jo
pushl
xlat
or
cmp
inc
mov
dec
add
imul
inc
popf
ja
pop
adc
and
jo
push
push
outsl
mov
testl
insb
sbb
test
incl
mov
sub
jb
jb
mov
pushf
cmc
aaa
repz
ja
dec
enter
and
jo
and
jg
std
mov
repz
adc
inc
les
fdivl
inc
sub
xchg
mov
mov
inc
das
mov
imul
faddl
je
mov
cmpsl
jg
push
cld
incl
mull
xor
push
xor
pop
js
inc
outsb
call
xlat
call
adc
outsb
jae
and
add
mov
js
push
pop
inc
popf
pop
arpl
add
inc
jo
or
or
push
jo
pop
sahf
iret
popf
stc
imul
cmp
vmptrst
out
out
lret
enter
mov
jg
and
mov
ja
mov
sbb
xchg
sbb
movsl
mov
std
adc
out
push
inc
ficomps
mov
push
cmp
xchg
push
dec
jo
jnp
in
xor
inc
cmc
xor
je
call
pop
inc
addr16
pop
jp
stos
xor
jno
cmp
mov
aaa
jo
lcall
mov
fisubs
lcall
push
push
test
bound
lret
js
enter
mov
sbb
cmp
bound
pop
push
aas
jbe
in
popf
jae
sub
cmp
ja
xor
lcall
mov
mov
cmp
cmp
jne
add
dec
and
push
xchg
jecxz
idivl
dec
cmpsl
jnp
das
sbb
push
xorl
call
and
xor
fcmovnbe
into
xor
cmp
xchg
repz
fwait
std
out
pushf
jno
xchg
outsb
cs
stos
leave
aam
mov
ss
ss
mov
dec
mov
shld
daa
mov
inc
push
mov
push
not
adc
in
loope
call
ja
sti
ja
adc
pop
call
sub
fnsave
adc
ret
jo
inc
data16
add
sub
adc
cmp
aaa
jo
ja,pt
inc
mov
add
sbb
xor
out
cmc
cmp
adc
aas
into
jno
ja
jns
add
push
sarl
push
aam
push
or
cmp
jmp
adc
daa
daa
rolb
aam
cmp
aaa
pushf
push
push
push
test
ja
push
ja
pop
adc
out
dec
add
sub
pop
stos
inc
arpl
icebp
jmp
jnp
mov
mov
jp
or
fistps
scas
and
sbb
push
fstl
cmp
adc
loope
aas
or
sahf
movsb
test
or
jge
mov
jmp
inc
cmpsl
push
dec
in
out
and
negl
lcall
mov
sbb
mov
add
xor
xchg
in
aas
inc
or
scas
xchg
mov
mov
dec
outsl
jno
fistps
insl
add
nop
adc
arpl
les
xor
mov
lahf
inc
push
cmpb
sub
sahf
add
add
jmp
add
std
xchg
xor
imul
jg
mov
or
bnd
mov
xchg
aas
cmp
xchg
out
fcoml
lcall
jmp
std
add
jmp
mov
dec
clc
outsb
call
dec
jne
and
and
hlt
inc
inc
daa
mov
lcall
mov
xchg
mov
push
mov
sti
aas
jae
add
dec
mov
mov
mov
call
inc
sti
fbstp
xchg
jmp
push
fs
push
xor
repnz
fucomi
mov
xor
rcr
iret
hlt
sbb
call
xor
sub
sbb
mov
or
shr
lret
fwait
rorb
outsl
js
dec
jg
or
pop
pop
jo
pop
jmp
pushl
and
adc
cmp
mov
out
pop
and
inc
push
sbb
or
jbe
sar
or
jge
ds
out
sub
data16
push
mov
mov
je
cmpb
sbb
lahf
hlt
fbstp
sub
lret
jl
cltd
push
pop
ljmp
push
loope
addb
das
pushl
incl
adc
insb
xchg
aam
sbb
andb
aas
xorl
in
fdiv
gs
jge
lahf
jae
xchg
push
mov
outsl
pop
and
cmc
dec
sub
popa
in
pop
jae
jg
jl
xchg
xor
clc
mov
add
dec
aas
sbb
icebp
into
push
cmp
dec
xlat
call
jl
cli
or
roll
pop
and
loope
pop
movsb
out
jnp
adc
les
lret
mov
dec
sbb
clc
jmp
and
adc
xor
das
xor
jo
sbb
jg
add
ja
js
test
iret
fidivrs
dec
test
add
test
popf
gs
add
sbb
mov
fldenv
jl
nop
repz
mov
mov
out
jp
adc
xchg
inc
sbb
mov
or
lock
iret
std
xchg
std
xor
sbb
aad
mov
out
mov
adc
add
sub
mov
xlat
ja
jl,pn
roll
mov
xchg
fistpll
lods
mov
dec
pop
fistps
add
jne
sub
jg
mov
push
pop
pop
mov
sbb
lock
cmp
jae
call
xor
and
jmp
data16
pop
jp
clc
shll
xor
lea
mov
idiv
fucomi
jp
fs
insl
stos
jne
push
dec
fistps
int
push
popf
mov
adcb
and
xchg
mov
icebp
fimuls
or
add
mov
test
ja
stos
pusha
sbb
int
fsubr
repnz
jecxz
lcall
push
popa
adc
mov
sub
jne
cmp
cmp
daa
into
lret
mov
inc
cmpsb
sub
std
inc
jp
jbe
pusha
xor
aam
mov
adc
or
and
dec
sub
pop
jmp
jnp
sub
leave
fcmovnb
jg
cld
arpl
or
inc
ficoms
sarb
pop
jmp
mov
inc
ret
cld
imul
mov
jl
jp
imul
or
ret
push
loopne
mov
add
and
dec
cld
aas
test
sub
fldcw
dec
sbb
mov
lcall
inc
out
fdivr
out
pop
sbb
jecxz
sub
dec
js
dec
rcrl
push
shr
pop
inc
test
mov
xchg
in
iret
cli
popf
add
adc
cltd
call
mov
in
idivb
iret
cmp
or
jb
cwtl
int3
fxch
mov
jle
jp
into
pop
ljmp
rolb
test
incl
out
loopne
pop
imul
out
push
or
fisubl
cmp
jmp
call
xchg
mov
inc
pop
and
lcall
ljmp
daa
jle
xor
pop
scas
clc
pushf
fwait
push
fsub
inc
add
das
jmp
decb
addr16
in
cs
dec
scas
clc
xor
mov
mov
mov
ljmp
out
lds
adc
mov
out
icebp
and
jecxz
pop
cli
mov
filds
mov
sti
xor
aaa
sub
mov
sbb
xchg
jle
jg
sti
fnstsw
xchg
lods
lea
aaa
push
xor
and
cmp
fdivl
loopne
jo
jecxz
xchg
mov
lea
mov
fcomp
decl
mov
ss
movsl
sti
push
pushl
into
movsb
sub
in
lret
add
pop
sbb
iret
rcl
xor
sahf
insl
mov
push
das
jmp
lea
push
jno
and
jnp
xchg
adc
test
rolb
mov
incb
mov
enter
test
fsts
decl
cwtl
bsf
mov
adc
ljmp
add
add
cmpsb
dec
xor
mov
fwait
cmp
push
pxor
cmc
xor
insl
test
test
sub
xor
icebp
insb
mov
xchg
jmp
inc
fbld
cwtl
cld
mov
iret
out
push
lock
outsb
test
inc
adc
sub
jnp
jne
imul
ss
jl
out
aam
out
jo
inc
pop
and
dec
jae
jnp
mov
in
xchg
and
xchg
call
call
mov
andb
call
xor
call
sbb
fnsave
mov
jle
fst
mov
jle
mov
mov
inc
cld
iret
jecxz
sarl
pushl
lods
and
push
sbb
dec
gs
popf
sti
mov
loopne
jns
in
mov
mov
sub
int3
lret
xchg
lds
jmp
jno
nop
lcall
or
cld
mov
and
lahf
mov
pop
repnz
nop
repnz
mov
ja
dec
adc
mov
popa
jle
inc
lcall
inc
ljmp
mov
pop
cmpsl
lahf
jg
jl
mov
inc
add
xor
hlt
cltd
mov
clc
ljmp
cwtl
mov
fbld
sbb
sti
mov
inc
xchg
push
outsb
add
mov
inc
in
pop
jle
or
dec
ficompl
imulb
sar
movsl
fstpl
jb
sbb
lret
ss
sub
cmp
lret
dec
popw
mov
nop
pop
or
shl
fbld
xchg
cmp
cmp
xchg
cmp
sub
fadd
lods
cmpsb
mov
mov
add
iret
fiaddl
dec
add
or
xchg
xor
or
cltd
out
and
add
aaa
xlat
jle
mov
arpl
push
mov
push
mov
add
arpl
cld
pusha
fcomip
sbb
pop
pushl
scas
pop
cld
inc
mov
in
dec
fdivrl
std
in
pop
mov
loopne
sbb
out
mov
sbb
adc
or
outsb
gs
dec
jp
pop
dec
sar
fistps
sbb
add
mov
jle
push
jge
ja
jg
fidivrl
mov
outsl
jbe
xor
es
js
adcl
hlt
loop
out
call
push
fbstp
imul
pop
pushl
movsb
out
clc
mov
jmp
add
decl
mov
fsubrl
jmp
add
leave
push
sarl
add
sti
mov
add
sub
cmpl
call
jne
xlat
incb
lcall
jg
movsb
pop
mov
hlt
fcmovnbe
cli
lahf
fdivrs
dec
pop
clc
lahf
cli
mov
push
mov
push
push
xchg
mov
aam
ret
mov
setno
loopne
push
sbb
pop
cmp
decb
xchg
sub
enter
xor
cs
leave
repz
cld
shl
pop
mov
prefetcht2
adc
mov
lcall
mov
adc
fists
je
mov
loop
es
loop
or
cmp
rorb
fmuls
sbb
aas
inc
and
in
mov
jb
mov
movsb
lret
inc
pop
mov
mov
push
inc
aam
int
jge
xchg
xchg
stc
or
sub
jge
cld
mov
gs
inc
and
adc
sarb
insb
clc
add
pop
or
cli
xchg
lahf
rolb
inc
push
fildll
adc
int3
mov
add
jp
jmp
lock
out
cmc
and
xor
jg
cli
out
push
sbb
or
outsb
sbb
cwtl
mov
movsb
cmp
or
inc
shll
mov
sti
sub
jg
fidivs
mov
out
push
push
imul
cld
idiv
std
movsl
movsl
cmp
push
xor
imul
negb
out
mov
ftst
sub
jmp
cmpsb
cli
out
lock
lds
sub
ljmp
sbb
push
pusha
fcompl
jmp
pop
push
popf
dec
imul
popa
and
sti
mov
clc
sub
cmp
mov
push
or
jmp
cmp
sbb
sahf
xor
pusha
les
imull
sbb
lcall
mov
mov
adc
mov
enter
adc
push
jmpw
push
mov
jecxz
xchg
jne
ljmp
push
into
xor
mov
push
outsb
arpl
cwtl
cmp
xchg
cmp
fwait
push
mov
fcmovne
scas
outsb
aad
clc
addr16
or
add
jmp
xchg
call
mov
outsl
xchg
mov
push
sahf
mov
dec
icebp
jmp
movb
shlb
mov
div
jno
xchg
xchg
inc
mov
jge
xchg
insl
adc
imul
dec
xor
fcoms
and
popf
sti
dec
mov
ljmp
jp
dec
mov
repnz
jns
and
lods
sti
mov
fndisi(8087
pushl
sbb
adc
int3
icebp
xorl
testl
mov
addr16
lcall
sarl
cmp
fdivrp
and
mov
test
repnz
gs
xor
aas
lods
sbb
test
adc
aaa
jbe
and
ret
jbe
idivl
sarl
xchg
push
out
sub
push
pop
pop
sbbl
jg
inc
cld
mov
enter
pusha
xchg
out
cltd
adc
cmp
pushf
pop
jns
adc
mov
rclb
jmp
aas
inc
mov
jecxz
mov
pop
jo
fistpl
mov
xlat
sti
movsl
sub
jns
sub
popl
dec
cmp
push
call
out
adc
rcll
cmp
adc
add
hlt
mov
sub
data16
loopne
jg
cltd
inc
adc
cmp
mov
mov
mov
inc
mov
lret
push
add
or
rcll
int
jmp
jnp
cmp
out
pop
push
ret
add
pop
or
fisubl
std
out
cmp
loop
cmpb
lret
test
jbe
xchg
push
aas
fsubrp
bound
or
dec
dec
inc
and
jmp
cs
xchg
hlt
fmull
and
cli
inc
repz
lcall
fmul
loope
in
jns
mov
sbb
cwtl
cmpsl
clc
mov
sub
and
cmp
in
ss
add
mov
cmp
iret
pop
mov
xchg
data16
es
xchg
sbb
shlb
push
and
dec
add
add
lods
idivl
lea
call
mov
dec
scas
mov
into
mov
popf
sti
icebp
jne
push
pop
pop
mov
imul
push
test
or
mov
inc
and
jbe
cmp
outsb
fwait
and
fs
negl
sbb
lods
shl
bound
shr
mov
std
lea
dec
icebp
jecxz
jmp
jb
out
std
fwait
call
int3
push
in
sub
dec
add
push
out
mov
shlb
xor
or
cmp
cmp
push
test
dec
mov
inc
stc
mov
sti
and
cltd
cmpsl
inc
insb
cmc
into
add
push
adc
scas
inc
sti
sar
loopne
imul
and
jecxz
scas
pop
mov
sub
lea
cli
lahf
std
scas
dec
insb
out
jae
outsb
scas
inc
lds
xchg
cmpsb
aas
loope
mov
mov
lods
mov
and
fdivs
mov
inc
mov
push
cmp
ret
popf
mov
sub
pop
mov
or
out
ds
mov
and
fwait
jne
xchg
aam
add
adc
or
in
dec
add
fiaddl
lods
sbb
inc
add
lods
mov
sub
aas
ljmp
xchg
pop
faddl
mov
movswl
stos
fiadds
xor
jg
enter
addl
loopne
test
xchg
leave
in
hlt
insl
cmp
cmp
out
imul
and
mov
xor
sbb
push
cmp
adc
imul
sub
dec
cmp
xchg
int
push
inc
sbb
cs
inc
sbb
loop
incw
data16
popf
mov
bound
pop
idiv
jnp
cmp
sahf
ja
sbb
xchg
and
stos
rclb
inc
es
lcall
out
mov
arpl
push
aas
pop
incl
in
scas
std
xchg
jg
lds
lods
inc
call
rcrl
idivl
dec
mov
loop
loopne
jnp
dec
out
and
pusha
je
ja
cli
idivb
push
mov
nop
outsb
negb
xlat
dec
pop
mov
add
clc
inc
jnp
dec
fsub
cmp
sahf
in
ffree
clc
daa
lock
and
mov
or
mov
jg
adc
fwait
dec
xor
dec
bound
mov
mul
jne
cmp
aad
jg
and
test
jne
xchg
mov
jmp
out
jb
xor
xchg
popf
pop
push
dec
std
adc
cmp
mov
setl
pop
sarb
dec
adc
cmpsb
mov
mov
adc
imul
push
or
gs
sbb
xchg
sbb
in
out
push
mov
sbb
incl
xor
js
pusha
xor
clc
arpl
push
sub
add
dec
sbb
aam
pop
lods
insl
add
enter
cli
popl
sbb
cmp
fwait
ss
pop
dec
fistpll
xor
addr16
jnp
cmpl
sbbl
mov
jno
adc
aas
jns
push
mov
jg
inc
test
or
daa
insb
mov
adc
lds
jmp
and
lock
push
pop
test
roll
test
cmp
aad
mov
adc
aas
les
fisttps
push
jnp
divb
pop
in
ret
sti
jmp
push
inc
sub
out
or
cmp
mov
dec
dec
fldl2e
sub
cmc
clc
jg
insl
and
iret
cmpsl
push
cs
cmpsb
outsb
adc
arpl
cli
jno
test
sti
jg
div
cwtl
out
inc
mov
adc
push
stos
lea
ficompl
test
test
daa
xchg
mov
icebp
clc
sbb
xor
ret
or
ficoms
out
fistpll
stos
es
or
jnp
into
sub
call
inc
test
add
mov
cmp
jg
sbb
aam
in
jno
push
ljmp
mov
jno
jg
push
mov
lods
rcrl
xor
out
mov
fs
cmp
pop
cmp
int3
sti
jmp
sub
mov
std
cmp
popf
xchg
clc
xchg
mov
and
stos
push
cli
lahf
pop
test
iret
loopne
xorb
int
les
mov
lock
repnz
cld
lahf
jbe
jge
dec
mov
dec
fcomps
aas
pop
mov
scas
pop
pop
jno
pushf
mov
xchg
mov
nop
push
fstpl
mov
minps
aas
negl
movl
insl
inc
loop
in
pop
fldenv
pop
lret
sar
adc
adc
fstps
inc
mov
dec
mov
xchg
cli
xchg
outsl
addr16
out
inc
jns
jg
clc
pop
mov
sarb
xor
xor
cmp
fisttpll
dec
sbb
fs
sub
fucomip
movsl
or
dec
jb
fsubl
mov
or
jo
outsb
push
pop
incl
xchg
push
sub
fcomip
sbb
add
popa
pop
fs
xchg
scas
pop
mov
xlat
loope
jns
das
sub
push
inc
fchs
mov
mov
ficompl
cwtl
xchg
jbe
popf
addr16
mov
push
dec
mov
mov
popf
into
enter
xchg
into
xor
mov
adc
adc
add
lret
daa
jo
xor
jmp
call
stos
mov
inc
mov
push
cmc
loop
js
cli
jns
pop
fcomip
call
sahf
dec
aas
ret
out
imul
adc
cmp
std
push
movsb
jg
lock
cltd
clc
fstl
mov
icebp
out
fnstenv
pop
pop
lock
push
mov
repz
and
in
xor
push
call
mov
js
or
add
xchg
sbb
fwait
iret
jg
sar
mov
je
scas
mov
xor
ljmp
iret
inc
sbb
je
xchg
pop
mov
mov
xchg
cmpsl
push
fbld
jb
in
stc
sub
stc
rdpmc
or
dec
dec
std
dec
lods
xchg
mov
fcompl
mov
movl
addb
and
jmp
cld
jecxz
sub
js
xor
fmuls
std
fs
clc
dec
mov
xchg
inc
lea
rcll
movsl
jle
mov
aas
out
fs
dec
loopne
stc
pop
outsb
cmpsb
or
call
or
add
push
mov
xor
lea
push
ja
ljmp
push
inc
and
jno
mov
jmp
in
out
xor
sub
xor
add
test
xchg
add
add
inc
arpl
ficomps
pop
jb
inc
into
xor
push
mov
xor
adc
les
in
es
lea
mov
push
inc
loopne
dec
fidivrl
pop
push
xchg
inc
decl
icebp
call
mov
adc
cmp
push
add
dec
dec
pusha
dec
mov
cli
daa
std
cld
out
fldcw
into
lret
std
pop
cmp
call
jge
sbb
mov
xor
mov
in
and
jg
sub
xchg
xor
sbb
xchg
ss
dec
lods
test
mov
jg
jnp
adc
aaa
adc
pop
add
clc
outsb
xchg
dec
jns
jb
fwait
testb
xchg
mov
rcll
pop
jle
jmp
cs
cmpl
aas
xlat
and
jns
xor
jmp
dec
cwtl
aam
stos
jge
loop
dec
mov
push
fs
mov
push
cmp
dec
sbb
notl
lcall
leave
push
mov
adc
cmpsl
idivl
stos
loop
decb
inc
cli
out
aas
out
in
cmp
adc
inc
test
mov
loope
repnz
pushf
mov
jmp
std
leave
and
or
dec
hlt
mov
out
loope
inc
pop
lock
jge
out
adc
dec
sbb
nop
or
adc
mov
out
inc
adc
inc
sub
out
fdivr
adc
testb
sbb
dec
mov
adc
loope
cmp
rcrl
or
dec
jno
testb
mov
out
xchg
scas
sar
aas
mov
sub
xor
mov
sub
std
ja
stc
fisubl
add
aaa
ljmp
and
pop
decl
mov
loopne
stos
fwait
cmp
mov
add
mov
repnz
push
aaa
jo
idiv
sub
test
in
call
repz
rolb
gs
std
ret
lahf
pop
iret
sbb
cmp
int3
stos
push
mov
lcall
pop
lret
fdivl
mov
adc
mov
mov
test
push
push
fistpll
loop
push
push
lock
js
es
cwtl
push
adc
ja
lcall
push
divl
je
ret
jmp
adc
ja
pop
sub
sbb
lret
add
jmp
aad
sbb
pop
push
sub
jae
movsl
cmpsb
mov
xchg
jmp
lcall
and
xor
mov
enter
adc
jne
outsl
out
aas
add
daa
adc
out
test
xchg
mov
iret
or
push
adc
loopne
and
addr16
mov
pop
iret
aad
adc
lock
mov
out
int
mov
idivb
clc
lds
mov
push
push
xchg
mov
xchg
jg
ror
mov
pop
cld
int3
fimull
jmp
ficompl
bound
pop
push
pop
jl
mov
out
repnz
jg
iret
aas
sub
sbb
clc
dec
or
int3
lds
and
xchg
aas
jno
enter
dec
loope
sbb
clc
add
inc
adc
lret
dec
call
xchg
fs
mov
in
xor
mov
inc
in
dec
orb
pop
and
xchg
les
shll
xchg
cmc
in
sbb
mov
shll
jbe
lret
xor
mov
movsb
xchg
shrb
int3
fists
out
das
mov
mov
insl
mov
jecxz
cmp
aas
xor
std
pushf
cmp
sahf
pop
jne
add
xchg
cld
push
lods
add
mov
jo
and
or
push
mov
outsb
dec
lea
lahf
mov
call
scas
and
std
push
jp
jle
imulb
pushl
insb
push
ficoml
ds
test
je
or
sahf
mov
add
xchg
clc
icebp
xchg
cmp
sbb
jl
lret
out
lock
xchg
jne
lock
into
jle
inc
mov
jg
inc
or
xor
lods
lahf
dec
aam
cld
inc
lods
jg
scas
jge
outsb
roll
shrl
aas
mov
pop
ret
imul
cltd
jmp
stos
inc
iret
sbb
mov
and
push
xor
loopne
aaa
daa
xor
adc
jmp
popa
dec
jg
dec
sub
test
dec
pop
cmp
adc
popl
cmp
iret
repz
and
sbb
adc
cld
ljmp
cmpsl
mov
int3
iret
and
inc
inc
mov
inc
push
pusha
cmp
popa
cmc
cltd
mov
scas
sbb
movsl
daa
pop
jae
jno
pop
inc
and
out
fdivrl
cmpl
fsubrs
dec
lods
jne
cmp
jle
jecxz
push
icebp
stos
mov
dec
in
dec
into
dec
mov
dec
push
lds
mov
stos
scas
mov
loop
jmp
mov
push
cmp
push
sbb
shrb
loop
mov
fdivrs
fidivl
dec
adc
mov
add
xor
sbb
filds
jnp
idiv
mov
cmp
add
lcall
imul
fnstsw
xchg
adc
or
bound
ret
mov
inc
cli
into
std
pop
loopne
mov
movsb
shrb
xchg
and
or
pop
in
dec
das
cmp
shrb
and
test
adc
pop
pop
adc
xchg
push
jbe
cmpsl
je
addr16
and
pop
sub
mov
bndstx
add
xor
mov
jne
cmp
inc
sub
ljmp
les
mov
out
push
push
push
xchg
cwtl
lret
push
outsl
mov
lds
mov
sbb
pop
push
xor
fwait
mov
popa
or
ret
push
lods
jp
push
cmc
lcall
pop
negl
leave
jl
scas
adc
pop
call
lret
imull
mov
mov
fcompl
and
pop
addb
call
sarb
dec
out
mov
outsl
cmc
push
push
pop
loopne
jle
jmp
pop
loope
hlt
aas
mov
loopne
std
pop
fistpl
jnp
sahf
push
inc
ror
jle
pusha
mov
xchg
push
fwait
movsb
and
push
jo
and
or
mov
jg
std
push
dec
mov
pop
sub
mov
cmp
ret
jg
jle
sub
cli
mov
loop
insb
jp
adc
push
cmc
maxps
je
inc
adc
xchg
movsl
js
test
add
push
arpl
dec
push
jmp
mov
dec
cmp
rcr
jp
testl
push
data16
aas
ret
movsl
in
and
sbb
jg
mov
push
std
aas
addl
jmp
iret
icebp
pxor
insl
xchg
jg
cmpsl
lret
in
movsb
clc
out
loopne
inc
sahf
or
fadds
dec
imul
int
int
mov
nop
inc
add
sub
sbb
jg
sub
aam
pop
icebp
pop
in
pop
out
lcall
dec
ja
movsb
mov
cmp
xchg
jmp
mov
pop
xor
sub
push
and
inc
inc
mov
dec
pop
loop
scas
out
cmpsl
jmp
add
in
sar
pop
ficompl
jb
test
dec
push
push
out
fbstp
xor
jge
sarl
push
pop
mov
pop
xchg
stos
pop
fistpl
test
push
rcl
mov
add
xchg
mov
mov
fsubrl
cmp
repz
scas
lcall
cli
je
int3
aas
repz
and
jo
pushf
sbb
xchg
out
inc
jge
mov
std
aas
negl
sub
int
pop
xchg
lcall
cli
push
les
xchg
pushf
into
lds
dec
out
pop
push
cmp
out
loop
lahf
aaa
int3
mov
fidivl
jg
add
aaa
ret
out
xchg
push
and
movsb
aaa
mov
out
dec
nop
outsl
cmpsl
pop
movsb
pop
or
adc
pxor
or
inc
mov
int
gs
cmp
ja
clc
sbb
inc
jle
imul
daa
mov
ffreep
jb
das
out
push
cld
stos
out
pop
in
faddl
test
cmp
cmp
mov
dec
imul
mov
jbe
cli
jg
clc
dec
lods
decl
xor
cmp
rcrb
aad
sub
inc
movsb
adc
test
cwtl
push
ljmp
mov
frstor
sbb
mov
rolb
xor
jle
fidivrs
pushf
fistpll
outsb
and
pusha
cmp
je
inc
adc
mov
decl
dec
dec
add
mov
imul
aas
pushf
mov
hlt
pushf
jle
ja
loopne
inc
mov
xor
rcr
jbe
cmpsl
aas
test
push
arpl
loope
cmc
push
test
jg
jg
sub
or
sbb
xor
les
fbld
dec
mov
cmp
push
lods
popw
mov
das
mov
inc
ret
clc
pop
imul
push
hlt
push
insl
out
cmp
inc
lahf
mov
dec
sbb
adc
mov
clc
mov
in
jae
sbb
aas
mov
lret
adc
ja
dec
or
jbe
stos
add
sbb
adc
in
push
sbb
pushf
lahf
cmp
ljmp
jne
push
lock
js
leave
add
js
in
incl
addr16
and
std
push
adc
sub
dec
inc
sub
aas
mov
cmpb
jecxz
inc
cmp
push
jecxz
cmpsl
jmp
mov
add
loopne
fdivr
pop
outsl
jnp
and
out
enter
movsb
push
aam
sbb
jp
ja
mov
fsubrl
ss
outsl
sbb
stc
jle
push
arpl
add
std
dec
mov
gs
xchg
mov
sahf
pop
pop
lods
ja
mov
add
push
clc
sbb
out
jge
jmp
pop
pop
pop
imul
mov
outsl
cmp
cmp
imul
mov
cmpl
aad
ljmp
js
inc
icebp
xchg
mov
adc
adc
test
sti
mov
fstl
push
push
sbb
insl
or
mov
sbb
lock
add
shlb
out
and
sbb
in
mov
fistl
pop
xchg
clc
daa
sbb
xchg
inc
nop
mov
mov
scas
pop
test
add
out
sbb
decl
lods
lods
jge
stc
arpl
inc
in
or
sbb
or
jnp
loope
pop
mov
lock
sti
pop
mov
xchg
and
mov
jmp
dec
inc
mov
daa
cmpsb
in
mov
cmp
mov
cmpsl
adc
sub
stos
pop
ja
or
cmc
fs
add
test
test
leave
inc
sbb
cmpsl
andb
aas
cmp
inc
incl
cmp
or
fisttpll
movsl
dec
sub
jmp
sub
fimuls
aas
add
outsl
and
fcmovnbe
and
jle
push
pop
leave
pushf
cli
xor
jne
leave
ret
lods
mov
jg
das
sbbb
or
xchg
jnp
lret
jge
sub
lock
out
jge
fwait
mov
cli
lcall
addr16
aad
into
lods
insl
or
cmpsb
cld
and
sbb
shl
adc
cld
mov
cltd
and
cltd
dec
lret
fbld
lock
mov
ucomiss
mov
lds
and
mov
sahf
mov
outsb
xchg
sbb
sahf
es
icebp
jle
fidivs
push
jge
or
roll
sub
cmp
mov
clc
pop
andl
mov
jmp
xchg
sub
shlb
mov
inc
pop
jb
adc
cwtl
rcrb
jmp
push
or
in
adc
push
and
jmp
leave
ucomiss
mov
jge
cmp
or
mov
nop
jbe
mov
mov
pop
out
pop
fisttps
shll
popa
shlb
fildll
int3
fmulp
add
and
push
or
xor
les
in
stos
subb
adc
sti
out
lock
enter
dec
fs
or
mov
inc
adc
fsubrs
inc
fistl
lods
in
lret
ja
test
push
dec
sahf
cmp
ret
push
pop
dec
imul
fldt
dec
inc
call
pop
movsb
pushf
stc
pusha
adc
je
aam
in
xabort
ljmp
jg
mov
es
hlt
loopne
or
out
pop
adc
mov
sbb
mov
xor
jg
jecxz
insl
call
decl
jns
bnd
sbb
jo
mov
shlw
push
pop
aas
inc
hlt
stos
arpl
repnz
inc
addl
out
push
jne
push
movsb
out
push
add
pop
add
jae
loope
pop
inc
xor
push
jbe
outsb
jnp
adc
pop
xor
sbb
ja
aam
jp
rolb
loopne
pop
push
cmp
adc
test
test
imul
shr
repnz
adc
mov
cwtl
mov
inc
cs
push
stos
cmp
push
or
call
mov
jge
push
outsl
sahf
adc
cli
mov
sub
mov
or
repz
test
sub
jl
adc
in
sahf
push
xchg
add
dec
xchg
xor
pushl
inc
aas
jle
inc
test
add
insl
shrl
jg
adc
sbb
mov
push
sub
mov
fs
movl
cmp
mov
mov
mov
movsl
mov
je
out
push
addr16
ret
sbb
enter
sbb
xor
jo
call
push
int3
orb
xchg
mov
daa
xor
pop
dec
insb
dec
loope
jb
and
outsl
mov
push
into
cld
dec
sub
movsb
test
and
int3
xchg
idiv
call
mov
call
and
cmp
cli
into
pop
add
lahf
movsl
inc
hlt
or
incl
inc
leave
ficoms
adc
jmp
ret
pop
jae
mov
out
xor
or
ficoms
lret
pop
incl
sbb
xchg
aam
fwait
bound
testl
jmp
mov
mov
mov
inc
jmp
std
xchg
ljmp
add
add
inc
pop
pop
mov
lret
iret
stos
cmp
sub
mov
int3
pop
imul
aas
sbb
mov
mov
push
je
std
clc
jg
mov
xlat
xor
and
and
addb
rorl
mov
push
pop
pop
pop
pop
idiv
mov
lret
mov
cmp
jle
lcall
mov
jne
imul
inc
push
loop
jmp
sahf
push
out
movsl
cli
fadd
push
popf
pop
loop
sahf
inc
aam
jecxz
and
hlt
pop
imull
pop
pop
mov
add
inc
push
aas
add
loope
and
cs
sub
out
out
mov
inc
inc
sbb
imul
xchg
mov
mov
lea
dec
pushf
pushl
aas
sbb
push
fucompp
jecxz
sti
mov
ljmp
lahf
dec
jo
sbb
sub
cmpsl
test
cs
jl
notb
ja
pop
ds
data16
mov
add
jg
clc
js
cli
ss
sbb
or
out
nop
push
incl
loopne
leave
mov
pop
jecxz
loopne
sahf
fs
and
negl
xchg
lea
cld
ret
and
cmp
das
mov
add
pop
pusha
out
and
aam
mov
jmp
push
fistpl
addl
cmp
int
ja
pushl
push
push
gs
imul
dec
repnz
aaa
popa
jnp
ret
mov
fcmovu
outsb
cmp
gs
fiaddl
pop
cmp
fiadds
add
push
pop
sti
rcrl
stos
stc
out
inc
ljmp
dec
pushf
imul
pop
lods
leave
add
out
mov
sahf
or
cmp
or
out
inc
mov
fs
push
mov
cmp
xchg
loope
in
cs
cmp
xchg
pcmpgtw
cld
xchg
push
cmp
lcall
adc
ficompl
cltd
cmp
pop
lock
lock
mov
les
jp
cmp
push
sub
rolb
hlt
inc
pop
popa
leave
jae
pop
popf
sbb
call
cltd
xor
pop
ficompl
cmc
jg
push
pop
ja
pop
or
or
pushf
xor
jo
fldt
jge
adc
arpl
jle
adc
push
popa
sub
xor
sbb
subb
xor
mov
push
out
in
notb
jg
push
cwtl
add
orl
sbb
cltd
and
mov
dec
mov
xor
jmp
int3
cmp
push
or
sub
ret
push
cltd
mov
popl
mov
push
mov
stos
jmp
in
rcl
stos
add
pop
test
push
fisttpll
xor
mov
negb
imul
stc
fisubrl
lahf
cmc
ljmp
leave
sbb
into
int
ja
pop
add
sub
lock
adcl
shrb
insl
and
jg
or
and
into
push
push
sbb
jg
jmp
hlt
adc
insl
mov
aas
jmp
jmp
jne
sub
lahf
dec
roll
xbegin
add
pop
rcll
js
push
inc
daa
hlt
loopne
pop
outsl
cwtl
aad
xchg
add
fistps
or
jb
data16
mov
cs
push
or
icebp
jo
pop
lods
pusha
jecxz
or
ja
jecxz
outsl
cwtl
std
arpl
repnz
aad
xor
iret
lock
mov
pop
js
fwait
push
adc
mov
out
mov
jne
adc
mov
pop
in
ficompl
js
xor
stos
mov
lods
out
icebp
lock
sbb
push
and
sbb
jle
pop
aam
repz
dec
jbe
lea
lods
mov
jnp
sub
fldt
mov
xchg
sub
inc
sti
mov
dec
bound
idivl
cltd
dec
and
and
aas
adc
dec
and
stos
lret
inc
imul
stc
test
push
cmpsl
mull
xchg
jb
cli
push
adc
xchg
clc
test
mulb
jmp
mov
jge
pop
scas
fisubl
jg
push
outsl
jno
aas
cmpsl
insl
lods
lret
rclb
data16
fdivl
mov
or
and
push
push
incb
js
ljmp
loopne
fistps
pop
cmp
or
jae
leave
test
icebp
or
mov
mov
push
xor
pusha
int3
jae
aas
add
mov
pop
push
sub
icebp
pop
mov
pop
sub
mov
pop
daa
inc
sti
jmp
jbe
addr16
sbb
call
adc
add
and
lahf
and
and
mov
movb
adcl
fiadds
sbb
fdivrl
add
test
sbb
mov
inc
pop
xorb
in
pusha
jno
imul
sub
lds
push
push
movsl
sub
jno
std
sub
into
cmc
neg
cli
outsb
push
lods
push
or
jae
out
lock
dec
pushf
pop
jnp
pusha
and
mov
les
decb
repnz
inc
cmp
pop
sqrtps
lahf
mov
xor
inc
mov
cmp
xor
insb
mov
arpl
inc
mov
subb
mov
fstpl
les
lea
call
aas
ja
fnstenv
arpl
je
mov
jns
mov
mov
es
loopne
or
repz
cli
sub
lds
dec
mov
sbb
call
ds
mov
jg
dec
jb
scas
aam
out
ja
sbb
sub
shl
out
jp
call
dec
mov
cmp
adc
in
mov
xchg
push
adc
sub
push
jg
fdivrp
paddsw
pop
js
mov
les
ficoms
std
pop
cli
fldcw
push
ret
lahf
cmp
ja
xchg
sub
dec
push
sbb
mov
add
cld
xor
popf
in
push
fwait
jecxz
ss
mul
insl
inc
jbe
mov
std
dec
xor
fstp
in
lahf
xor
cmp
cmpsb
jge
out
or
or
ret
test
repz
orl
inc
fisttps
pop
mov
xchg
popa
ss
clc
cmc
cmp
jne
or
xchg
hlt
clc
mov
sub
mov
xor
ljmp
push
dec
lahf
je
scas
dec
imul
push
jecxz
or
repnz
sti
daa
arpl
fisttps
addr16
adc
and
aas
push
pop
cmp
push
shl
mov
xorb
sahf
mov
loope
jns
inc
incl
scas
hlt
xchg
in
stos
repnz
cmp
out
into
mov
mov
jne
mov
pop
pop
or
dec
cli
dec
mov
repnz
lds
cld
aaa
add
mov
fnstenv
ret
xchg
js
ud0
jge
inc
cmpsb
call
in
fdivrp
jecxz
outsb
popf
cmp
cmp
push
jle
pushl
sub
add
adc
mov
dec
repz
imul
push
adc
daa
sbb
jg
cmp
cmp
and
daa
in
inc
jecxz
aad
or
adc
adc
loope
aas
lods
sarb
dec
mov
aas
add
xchg
in
push
test
adc
movsb
shlb
adc
sub
sbb
cwtl
fiaddl
lods
xor
mov
rclb
fdivrp
pop
sbb
jg
loop
sub
adc
aas
inc
jmp
mov
test
jo
subb
addr16
jp
mov
shlb
icebp
sahf
and
inc
out
dec
sub
sub
incl
jns
mov
mov
cmp
repz
fdivrl
outsl
mov
je
mov
pop
lcall
sub
daa
in
cmp
pop
and
push
arpl
push
cld
mov
adc
xchg
lahf
mov
ja
clc
pop
or
incl
test
cmp
in
adc
stc
cli
clc
or
aas
sbb
inc
fisubrl
jle
test
out
xchg
xlat
mov
adc
pop
out
pop
gs
mov
out
cmc
mov
hlt
cmp
add
sbb
mov
jno
jle
pop
sbb
cs
mov
out
cmc
shrl
lods
inc
pop
sbb
stc
enter
testl
xchg
jnp
or
sar
fsub
sbb
pop
imul
out
cltd
loope
test
cmp
push
adc
jg
std
ljmp
jns
cmp
call
or
sbb
pop
std
rorl
daa
or
jnp
mov
sahf
mov
mov
ja
push
cltd
in
adc
lock
pushf
jmp
daa
push
adc
aas
jmp
and
cmp
int
repnz
xchg
pop
jno
fwait
push
adc
leave
jns
shl
ljmp
idiv
pop
lods
or
sti
je
dec
insl
jae
in
jp
mov
mov
lcall
mov
dec
ret
outsl
mov
inc
inc
cmp
dec
fsubr
xor
ljmp
and
inc
push
lock
not
test
xor
decl
push
and
dec
inc
xor
imul
fndisi(8087
fs
lcall
aas
clc
add
aas
xchg
inc
sbb
push
inc
lock
mov
dec
idiv
mov
xor
inc
sub
pop
movlhps
fbld
not
orl
les
jle
cld
mov
ljmp
clc
pop
and
repnz
dec
mov
mov
mov
lods
in
movsl
mov
rorl
aam
idivl
pop
xchg
dec
jbe
cmp
xchg
push
xlat
lcall
jnp
xchg
in
and
adc
and
sarl
push
aas
xchg
mov
mov
psubb
push
xchg
jp
fwait
sahf
movsb
mov
ja
fidivl
xor
sub
out
push
js
pop
test
mov
xchg
mov
imul
mov
lahf
mov
sub
and
xor
cmp
and
stc
ds
jae
xchg
push
imul
pop
bound
fwait
cli
push
mov
adc
fildl
sub
out
sub
negb
int
jl
cmc
cmc
mov
xor
or
ljmp
sbb
adcb
test
ljmp
ds
dec
adc
call
mov
and
icebp
sar
mov
jg
imul
jno
lock
dec
hlt
xor
jae
lock
and
les
cmp
jecxz
inc
xchg
adc
mov
iret
adcb
movsl
sbb
mov
add
daa
adc
shrl
lret
out
inc
std
xor
enter
mov
idiv
int3
and
icebp
sbb
insl
adc
cld
push
cld
pop
add
scas
rcrb
sbb
ja
out
outsb
cli
fldl
mov
jg
or
or
dec
aas
loope
xor
cmpsb
idivb
jne
shr
bound
inc
jmp
fsubl
fcoml
dec
pop
les
lock
xlat
push
fsubrl
inc
pushf
into
mov
adc
out
repz
out
pushf
icebp
scas
movsl
roll
jne
loope
ret
test
lahf
push
dec
into
xchg
or
jp
aad
sbb
dec
xor
sbb
jo
decl
stos
je
adc
adc
adc
mov
fldl
pop
xchg
nop
pushf
bnd
outsb
negl
test
and
loope
insb
roll
imul
inc
mov
ds
aaa
cmpl
inc
ljmp
push
push
jl
fistpll
xor
je
mov
icebp
bound
mov
mov
int3
dec
cmpb
fildll
lret
fildll
or
mov
jg
movsb
xchg
jp
dec
ds
pop
pushl
push
icebp
idiv
idiv
jg
aad
sbb
sbb
iret
mov
mov
mov
sub
sub
or
in
jo
or
idiv
and
mov
jecxz
stc
adc
sbb
xor
dec
add
mov
push
mov
pusha
mov
mov
jmp
ljmp
repnz
inc
out
cmp
shrl
pop
ja
jecxz
aaa
jge
and
push
cmp
loopne
xor
ja
hlt
ds
inc
mov
add
inc
mov
pushl
push
into
loopne
push
push
outsb
out
dec
lock
insl
sub
mov
push
ljmp
sti
mov
adc
add
sbb
push
or
pop
mov
ret
jae
ljmp
hlt
shlb
cmc
aas
divl
icebp
dec
adc
push
sbb
ret
aaa
sti
xchg
incl
sbb
addr16
pusha
mov
push
movsb
ljmp
imul
push
fucomp
out
mov
xchg
mov
stc
subb
and
daa
popa
ret
pop
dec
ljmp
pop
inc
jmp
movsl
cmp
scas
ds
and
cld
pop
mov
imul
fiaddl
cmp
xorb
xchg
fildll
aam
jg
repnz
jle
in
rcll
clc
out
hlt
aas
dec
mov
lcall
pushf
inc
push
cmp
ret
je
in
mov
jae
cmp
out
icebp
pop
or
ficoms
or
add
out
pop
adc
lods
adc
fs
icebp
out
push
inc
cs
push
mov
sbb
mov
dec
and
add
xchg
loopne
jl
outsl
int
test
xchg
int
fidivrs
movsb
pop
mov
fmull
pop
addr16
into
outsb
pop
lods
inc
test
sahf
mull
push
ret
ffreep
jecxz
loopne
push
dec
pop
sahf
sub
jge
or
aas
repnz
push
fs
sti
enter
gs
jne
rcrb
cmp
fwait
outsb
jo
std
push
cld
push
enter
fbstp
xchg
sub
mov
dec
xchg
jg
fistps
psubusw
jecxz
xchg
and
in
loopne
jg
aaa
icebp
mov
mov
mov
jns
xchg
fwait
dec
jl
rol
sbb
rorl
loope
jp
mov
call
fistpll
out
mov
outsb
mov
retw
fidivs
hlt
or
push
inc
jg
xor
sbb
jl
sbb
push
xchg
xchg
mov
ja
add
outsb
jge
xchg
jne
inc
dec
xchg
aas
sbb
inc
push
das
or
cmpsb
sbb
pop
shrl
sti
xchg
out
outsl
hlt
cmp
inc
dec
cmpsb
movlps
mov
filds
aad
jle
orl
xor
loope
mov
mov
or
shrb
jo
inc
push
dec
add
aad
cmp
dec
mov
jecxz
dec
enter
je
mov
push
and
aam
pushf
enter
icebp
pusha
sbb
mov
lahf
out
int3
cld
loope
std
push
sub
xor
cmc
fdivrl
test
iret
push
jl
in
cli
mov
ljmp
inc
test
sub
rclb
sarb
pop
cld
cmc
cmp
mov
pop
shl
mov
out
or
dec
push
aas
adc
bound
repz
emms
mov
out
test
xbegin
add
orl
xchg
xchg
sbb
in
mov
dec
push
mov
sub
mov
fadds
pop
mov
or
push
decl
rcll
fmuls
mov
sbb
cmc
ja
mov
jmp
stc
dec
xor
sbb
dec
fistpll
fucomip
icebp
std
xor
pop
test
xor
inc
pop
sar
jecxz
ds
aaa
fisubs
xchg
mov
inc
stc
lods
jae
cs
push
daa
fbstp
imul
cli
incl
aaa
inc
jb
sti
adc
movaps
mov
cwtl
xchg
data16
stos
mov
fildll
mov
xchg
dec
xchg
push
dec
fwait
mov
and
call
xor
xchg
lahf
lahf
hlt
mov
rorl
sub
aad
test
lods
adc
enter
xrelease
neg
jmp
les
bound
jg
adc
rcr
sbb
xor
and
jns
lcall
dec
add
jae
loope
sub
sub
mov
lahf
adcl
popf
fwait
call
mov
push
shlb
decb
inc
xchg
inc
lds
mov
fbstp
push
std
xchg
jle
jecxz
add
loopne
insl
mov
jl
cld
loope
arpl
call
lods
out
inc
jb
sti
test
fistpll
and
clc
pusha
jb
add
cmpsl
pop
jbe
aas
shlb
dec
cmp
rclb
jg
lock
push
nop
xor
push
test
popf
mov
addr16
mov
mov
xchg
lea
repz
std
dec
mov
js
sbb
in
mov
call
testl
add
pop
sti
cmpsl
lcall
aad
cwtl
cmp
and
mov
test
lahf
push
sbb
mov
or
out
add
int
mov
and
xchg
sar
push
ljmp
sbb
pop
jmp
loope
repnz
xor
inc
cli
movsl
dec
mov
leave
pop
add
or
pop
nop
mov
mov
sar
xor
ret
cmp
add
mov
mov
xchg
dec
mov
popf
cs
fnstenv
inc
pop
cmp
dec
loopne
addl
add
movaps
sti
sub
call
clc
out
icebp
stc
xchg
mov
pop
faddl
popf
stos
aas
and
inc
xchg
cmc
repnz
ret
sub
adc
jae
add
loop
lcall
mov
outsb
xlat
xchg
sub
xchg
lret
outsb
inc
mov
loope
and
arpl
add
sub
scas
push
dec
pop
jb
push
jecxz
dec
out
mov
arpl
xchg
iret
loopne
js
mov
out
loop
sub
mov
lahf
inc
mov
sub
adc
cs
cmpl
xchg
mov
push
aas
adc
int3
lret
inc
scas
mulb
push
xchg
roll
mov
shrb
ret
mov
sbb
les
je
cld
mov
inc
add
jne
jmp
ds
xchg
ret
incl
int
ret
push
adc
inc
lods
loop
push
mov
addl
cmp
ljmp
jbe
test
mov
aad
add
int3
scas
enter
mov
bound
jae
xchg
repz
imul
push
pop
aas
orl
push
and
paddq
popa
cwtl
icebp
push
into
jno
push
in
cs
mov
adcb
push
mov
sub
jae
adc
cmp
aas
pop
popa
push
imul
fdivrp
cmpsb
jo
clc
js
dec
fstpt
test
pop
and
mov
mov
das
repnz
int
cmp
inc
dec
pop
push
movb
mul
insb
adc
shll
les
cwtl
xchg
and
mov
dec
cmc
loope
cmp
jo
mov
std
inc
es
cmc
sub
ficompl
add
xor
gs
mov
jmp
stos
mov
dec
mov
mov
push
add
aas
inc
cmp
jo
out
fcos
xchg
icebp
inc
jnp
es
iret
stos
jge
stos
lahf
mov
dec
xchg
or
push
jnp
icebp
push
fcompl
xor
addr16
mov
and
cmpsl
add
sbb
icebp
sub
mov
enter
add
std
dec
pop
lock
std
jo
mov
mov
cmc
pop
mov
mov
sub
jge
lods
pop
xchg
out
lcall
out
inc
in
dec
aas
pop
cld
dec
mov
int3
add
decl
insb
movsb
insl
sti
movb
rcrl
leave
and
cld
adc
aas
cmp
loop
inc
jae
pop
sbb
mov
pop
mov
cld
pop
jp
lods
push
lret
and
add
push
lods
lods
sub
aad
scas
nop
nop
add
sti
aas
adc
es
push
adc
jg
ljmp
mov
cmp
andb
ja
jo
daa
jp
sbb
inc
mov
xchg
jno
pop
out
mov
push
mov
test
cltd
inc
test
cmp
adcb
scas
loope
jp
pusha
pop
adc
pop
jl
lret
mov
jp
fs
repz
sub
jne
xor
mov
dec
pop
add
js
pop
and
neg
sub
test
in
push
xlat
xor
jg
cli
mov
ret
ds
sbbl
add
add
jp
int3
roll
push
jnp
popa
and
dec
dec
mov
ret
inc
cmp
stos
add
incl
mov
cld
inc
negb
inc
orb
clc
lcall
pop
je
lret
push
jl
ss
clc
arpl
pop
and
jbe
fisubs
jmp
fdivs
or
xor
jmp
cmp
popa
call
test
movsl
and
lcall
jp
call
xor
jg
mov
in
je
fildll
ret
std
das
ret
out
push
jbe
inc
jl
lods
jge
mov
cmp
call
mov
testb
cmpsl
dec
push
mov
lret
out
jbe
push
mov
mov
xor
add
and
aad
data16
and
in
popa
cmp
pusha
addr16
jnp
dec
fistpll
sbb
ljmp
dec
and
lock
dec
mov
adc
lahf
jo
and
cld
pop
je
or
imul
lock
lods
andb
jge
xchg
test
fisubrs
adc
sbb
xchg
lds
cld
fxch
and
leave
jnp
leave
hlt
push
scas
mov
mov
shlb
imull
insb
filds
push
mov
lea
into
inc
push
mov
adc
in
out
iret
mov
psubq
add
push
std
cmp
mov
data16
movsl
inc
push
sub
into
inc
mov
xchg
xor
les
decb
pop
rcll
cld
fidivrs
or
pop
cmp
mov
pop
std
inc
jmp
mov
dec
imul
ja
mov
mov
ljmp
call
imul
pop
mov
adc
mov
dec
mov
jecxz
jg
adc
leave
bound
inc
mov
loop
dec
fs
add
fsin
sub
test
pop
clc
xor
adc
mov
jno
stc
or
sbb
push
push
scas
and
or
inc
les
addr16
or
mov
imul
and
iret
std
sub
cmp
jmp
cmpsl
aas
enter
imul
and
out
dec
out
ret
and
add
addb
add
sbb
or
mov
ret
sbbb
jge
lcall
aam
cwtl
xor
sbb
fists
pop
push
cmp
and
xor
mov
clc
adc
out
lret
inc
pop
and
mov
test
sub
push
outsb
sbb
inc
sahf
push
inc
push
jge
xor
xlat
mov
mov
xchg
insb
mov
ds
mov
or
sbb
or
out
or
pop
dec
scas
into
testl
mov
sbb
jmp
loopw
dec
pop
cmp
iret
mov
lret
icebp
call
mov
mov
les
mov
incl
pop
jbe
jnp
pop
mov
sbb
sti
out
lock
loop
inc
sub
and
xor
mov
cmp
and
mov
ret
pop
add
adc
data16
mov
push
fsts
decl
repnz
mov
xchg
sbb
mov
arpl
and
ret
add
outsl
xor
sbb
lret
lcall
mov
into
das
pop
ret
inc
mov
in
inc
in
jg
movsb
inc
adcb
xchg
icebp
push
mov
test
ss
repnz
iret
push
add
cmp
xchg
or
orl
clc
mov
sbb
jmp
jle
call
cmp
mov
jge
mov
cld
mov
add
outsb
sub
sbb
mov
xchg
clc
pop
in
mov
out
pop
adc
mov
or
pop
hlt
mov
xor
mov
jno
je
adc
mov
lock
cmc
cmp
mov
roll
arpl
das
and
jg
adcb
dec
push
xchg
jae
je
out
jbe
std
xchg
and
mov
or
pop
sbb
sub
push
push
mov
movsl
push
gs
fldt
aas
ret
js
pop
xor
mov
jmp
xchg
cmp
icebp
sbb
enter
imul
jns
sub
fbld
daa
mov
aas
daa
ljmp
hlt
insl
cli
aad
shlb
cmp
jnp
fnstsw
lock
mov
subl
pushf
jge
mov
std
mov
xchg
bound
aam
push
jb
sbb
jnp
jmp
sub
dec
notl
pop
mov
or
jnp
mov
jno
jmp
int3
inc
cli
in
testl
lods
adc
cmpsl
xchg
add
jecxz
scas
xor
xor
dec
iret
inc
decl
xchg
lahf
es
add
xchg
mov
fucom
adc
lea
stos
mov
cltd
jnp
rcll
mov
push
es
xchg
jp,pt
xor
jnp
cmpsl
push
rcrb
xchg
xchg
mov
adc
inc
adc
xchg
push
out
or
jp
scas
cmp
fwait
cmc
mov
jg
bound
mov
lock
mov
jmp
fimull
jg
add
testl
arpl
outsb
mov
test
adc
and
add
dec
out
inc
jb
jo
stos
jle
mov
mov
ret
fs
pop
mov
imul
shrb
xchg
jle
pusha
adc
xlat
pop
mov
je
or
in
aas
mov
jo
inc
movsl
push
decb
daa
std
arpl
push
ja
movsl
loop
bound
ret
jmp
jl
jbe
std
fucomi
lahf
test
repz
jecxz
repnz
sub
or
jae
out
pusha
pop
call
ficompl
data16
in
jmp
lock
arpl
es
mov
dec
loope
clc
xor
pop
jo
xchg
fimull
cmp
push
mov
ja
pop
add
push
outsb
cs
dec
pop
inc
cmp
jg
jbe
loopne
inc
jg
jg
aas
inc
test
stos
lods
fdivl
push
push
and
lea
lcall
jp
loopne
push
stc
aas
pushf
pop
pop
adc
cld
jne,pn
xlat
mov
jl
adcb
mov
push
mov
xchg
push
inc
mov
pop
repnz
or
aad
je
decb
mov
push
add
lods
add
xor
fwait
outsl
clc
xchg
outsl
adc
push
mov
jl
mul
rcrl
mov
jmp
mov
add
jmp
decb
daa
or
push
add
jne
jecxz
xor
pop
in
out
inc
and
inc
sub
push
stos
xchg
mov
mov
std
mov
inc
ljmp
sub
pushl
pop
cmp
mov
lods
mov
arpl
sub
jle
lahf
xchg
xchg
pushf
push
cmc
ja
cmpsl
fsubs
pop
add
pusha
lret
mov
inc
mov
fnstenv
imul
jnp
out
sbb
mov
loopne
mov
inc
test
ret
sti
out
mov
pop
ljmp
mov
aam
sahf
dec
adc
lcall
mul
sub
data16
add
lahf
adc
adc
dec
sbb
pushf
xchg
pop
ljmp
jb
sub
adc
xorb
out
jg
dec
adc
or
push
insb
dec
add
fucom
mov
fcoms
inc
push
divl
js
xchg
xchg
fucom
mov
pop
push
jp
ret
push
pop
inc
adc
repnz
aas
inc
test
mov
sub
or
push
mov
ljmp
ljmp
cltd
or
stos
sar
jmp
loope
cs
jg
mov
mov
aam
lock
ret
decl
sarb
arpl
xchg
sbb
xchg
mov
or
push
add
sbb
push
hlt
fcompp
xchg
sbb
imul
cld
fcoms
inc
jg
push
and
shl
add
pushl
ja
std
ficoms
cwtl
nop
in
cwtl
shlb
or
push
push
jmp
sahf
lods
mov
movsl
mov
xor
adcl
aad
pop
movsl
rcrl
in
aad
dec
aam
lahf
popa
pop
add
cmp
std
cmp
sahf
cld
add
jnp
in
xchg
lea
lahf
loope
xchg
or
ljmp
lods
sahf
xchg
loopne
xorl
dec
rol
in
adc
out
imul
int
dec
mov
pushf
pop
mov
std
pop
pushf
add
dec
pop
sub
stc
jg
cltd
xchg
inc
sbb
cmp
loop
mov
fisttps
lock
push
ret
and
mov
insb
pop
mov
jg
xor
mov
lcall
in
adc
test
cmpsl
mov
push
pushf
lahf
or
into
sbb
sub
cmp
test
imul
lcall
addr16
pop
push
ljmp
mov
fsubp
xchg
rcrb
idivl
cmp
cmp
subl
stc
sub
sarl
aas
dec
std
int3
push
hlt
mov
not
out
addb
mov
adc
inc
cmpl
pop
dec
push
xchg
idivb
inc
cmp
jnp
sbb
sar
xchg
push
je
call
xchg
or
repz
cmp
cmc
or
adc
xchg
call
hlt
iret
ja,pn
push
sbb
pop
into
xlat
decl
outsl
mov
push
popf
push
out
scas
mov
cmp
jnp
mov
hlt
or
movsl
out
dec
ljmp
jmp
dec
pushl
xor
sub
mov
jnp
movsl
dec
sbb
movsl
push
mov
ds
in
fstp
jne
jnp
jo
hlt
loope
cmpsl
repz
jno
cld
pop
sti
xor
mov
stos
and
add
ret
lahf
js
xor
divb
sbbl
jecxz
cli
xchg
inc
mov
fists
sub
stc
sbb
add
pop
mov
call
xor
mov
loope
pop
dec
test
mov
mov
cmp
loope
out
data16
mov
and
insl
js
pop
mov
jg
loope
adc
sbb
jl
cmp
icebp
cwtl
mov
negb
inc
cli
pop
or
cmpsl
stos
cmpsl
pop
aad
cmpsl
adc
pop
add
lods
mov
daa
push
ljmp
out
xchg
addb
lret
push
xchg
aas
sbb
les
cmp
ja
out
mov
xor
jge
lahf
mov
movsb
popa
dec
addr16
xchg
adc
fidivrl
jno
data16
fdivrl
mov
stos
inc
inc
test
ret
decb
cmp
cmp
jae
mov
out
popf
xlat
jns
int
dec
clc
xor
clc
popl
adc
call
mov
jnp
or
inc
and
fbstp
mov
add
mov
push
jl
push
jg
stos
mov
testb
mov
jg
mov
js
imulb
aam
hlt
push
cli
sbb
xchg
sub
or
data16
inc
aaa
fidivrl
adc
jl
aas
addl
idiv
sbb
push
lods
pop
xchg
cs
lret
pushf
cwtl
fwait
mov
dec
mov
push
clc
jg
decb
ret
mov
and
icebp
ret
ret
std
sbb
mov
fs
iret
and
pop
dec
pop
in
adc
dec
mov
mov
lods
shrl
push
cwtl
push
sub
cmpsb
push
add
push
lahf
sub
xchg
xchg
bound
pushf
sarb
lods
scas
pop
inc
jg
ja
cld
sub
outsl
pop
pop
mov
and
jns
sbb
sbb
mov
movsb
inc
pop
push
jg
clc
jb
cmp
dec
mov
adc
push
popa
loope
jae
jnp
mov
test
jo
cmp
lahf
push
test
push
mov
lds
icebp
and
out
fwait
add
jns
jge
sti
mov
sub
xor
xor
dec
rorl
inc
movsb
aad
inc
jae
or
inc
cld
xor
les
testb
into
inc
add
stos
jge
cs
cmp
add
mov
pop
inc
jo
sahf
pop
sub
stos
dec
fstps
xchg
mov
xor
xchg
in
jbe
addl
test
mov
lods
pop
cmp
push
enter
cmpsl
cli
dec
jg
icebp
fs
call
ja
clc
pcmpgtb
dec
inc
dec
or
add
cmpsb
shll
mov
mov
repz
fsubp
clc
push
js
cld
mov
and
pop
push
es
mov
lea
movsl
inc
mov
ud1
sbb
and
jnp
imul
sarl
dec
les
push
cmpsl
mov
xchg
pop
push
std
hlt
or
fwait
lahf
test
sub
jle
mov
jmp
inc
into
or
pop
faddl
inc
jmp
outsb
out
jo
sar
mov
or
decl
xchg
or
sbb
dec
je
adc
push
in
out
cmpb
sbb
fdivrp
jbe
cs
sbb
pushl
or
pop
xor
push
push
cmc
jbe
sti
cwtl
jg
hlt
hlt
dec
or
adc
icebp
in
adc
ret
and
cli
jne
stc
sbb
jbe
push
mov
jecxz
add
nop
add
xchg
mov
pmullw
jle
les
sti
push
cmp
mov
shrl
shr
jle
cmc
call
xchg
cli
flds
data16
sub
ljmp
lds
xor
punpckhwd
fcompl
add
mov
enter
inc
push
fsub
rep
fisubs
mov
jp
inc
adc
pusha
xchg
into
jge
sbb
scas
ja
lods
pop
push
gs
push
sahf
fdivrp
pop
test
ret
insl
sahf
ss
in
bts
xlat
lcall
lods
sbb
int3
ss
fwait
insb
rcl
and
jmp
js
into
es
js
push
icebp
out
push
cmpsb
mov
mov
xor
in
cmp
out
push
sbb
adc
mov
je
lcall
les
lahf
outsl
out
mov
cmp
ret
mov
sbb
icebp
std
movsl
iret
jle
scas
repz
adc
lcall
fbld
fs
cltd
idivl
inc
dec
sub
aaa
push
sysexit
sti
push
sbb
mov
push
jmp
cli
ljmp
out
xor
fs
ja
ret
fsubr
icebp
cmpxchg
jecxz
repz
int3
cmc
ds
cmp
pop
cwtl
mov
mov
cmp
inc
adc
lock
icebp
fisttpll
ss
sub
call
mov
inc
sub
jle
pushf
or
aas
sbb
fs
jnp
cld
mov
jno
in
mov
lcall
pop
sub
aaa
int
hlt
jo
and
lods
add
dec
mov
mov
dec
adc
decb
or
jbe
or
je
add
and
xchg
bound
cmpsl
int3
popf
inc
sub
pop
cmp
dec
inc
repz
dec
mov
mov
out
push
fistpll
daa
mov
imul
cmpsl
cmp
cmp
es
or
push
cmpsl
inc
jmp
lock
data16
dec
xchg
push
scas
push
jns
sub
idivl
push
sub
push
filds
mov
in
int3
xor
pop
test
roll
sub
jbe
aas
sar
push
in
pusha
leave
mov
pop
and
xor
mov
rcl
push
pop
es
cmc
aas
idivl
mov
sbb
test
mov
pop
lahf
adc
mov
jl
sub
adcl
mov
fisttpl
dec
inc
sti
in
mov
cmp
dec
cwtl
sub
or
pop
inc
dec
out
lahf
enter
jnp
or
out
gs
loop
mov
xchg
das
jne
pop
sbb
hlt
test
sahf
mov
sub
rorb
arpl
inc
push
jmp
rclb
jl
aas
push
jae
xchg
jb
sarl
test
sbb
and
jge
nop
cmp
sub
mov
xor
add
mov
lds
inc
pushf
xlat
jne
cltd
and
lahf
pop
cmpb
mov
lock
gs
mov
cmpsl
in
mov
mov
outsb
movb
ja
and
pop
inc
lcall
lds
sbb
mov
fisttps
push
xchg
faddl
leave
pop
sub
out
mov
xchg
xchg
add
mov
mov
call
out
js
mov
negl
int3
push
and
dec
jecxz
xor
inc
dec
mull
jne
add
pop
push
or
fdivl
shll
addr16
hlt
sub
sbb
pop
in
push
xchg
or
inc
scas
sbb
or
sarb
and
call
mov
popf
ja
push
scas
ffreep
call
cmp
sub
pop
data16
sbb
lcall
inc
movsb
out
popa
filds
mov
sarl
jecxz
movsb
ror
cltd
ljmp
xor
loopne
icebp
stos
jns
pop
cmpsl
mov
pop
jns
cmpsb
jmp
or
push
inc
inc
pop
adc
lods
icebp
arpl
xor
testb
icebp
or
inc
bound
cwtl
inc
mov
lahf
adc
sub
shrb
mov
into
call
push
ret
mov
xchg
inc
popf
ljmp
inc
incl
sbb
pop
jae
iret
sti
out
jo
xor
imul
or
lods
fistps
fcoms
sbb
jae
sti
xchg
aad
mov
inc
or
cld
lock
rcr
cwtl
into
loopne
jne
cmp
mov
jmp
stc
mov
leave
sub
and
or
pop
lock
or
in
pop
ret
and
out
jecxz
outsl
stos
adcb
mov
sti
inc
out
add
push
jecxz
mov
stc
adc
pop
and
je
inc
pusha
outsl
mov
jno
std
ud0
stos
test
lret
or
lock
clc
mov
ret
fimull
or
loop
mov
xchg
pop
imul
in
jg
sbb
fsubl
xor
decl
fcoml
loopne
stos
inc
xor
faddl
xchg
xlat
sarb
xor
dec
notb
push
mov
or
mov
mov
movsl
cld
pop
ds
ds
inc
jmp
mov
dec
das
cmp
and
pop
out
jg
aaa
std
xchg
xchg
jno
or
jno
pop
lods
cmc
iret
push
lds
or
or
jo
testl
jns
andnps
ja
mov
ds
mov
int3
xchg
stc
lea
fisttpll
push
push
mov
or
jmp
fimuls
data16
dec
cmc
mov
out
mov
sub
mov
inc
sub
ret
loop
aas
and
push
rorl
gs
call
sub
dec
add
cld
in
cmp
inc
das
loope
loopne
xor
cmpsl
mull
call
jecxz
ret
xorps
lahf
lock
filds
icebp
adc
push
adc
xchg
sub
bound
push
adc
adc
insb
mov
fsubp
xorl
jnp
popf
arpl
outsl
xchg
cld
dec
and
mov
jle
inc
fildll
sbbl
cld
sbb
lds
pushl
jo
sbb
jo
push
mov
lret
loop
out
mov
adc
sub
and
xchg
pop
and
jl
mov
int3
fistpll
xchg
mov
ds
sarb
xchg
sbb
jno
aas
ret
shlb
xchg
jns
ret
out
xchg
xlat
xor
jg
cmc
xorl
mov
adc
mov
not
add
adc
xchg
mov
and
mov
test
push
mov
sbb
mov
jg
sbb
push
rcr
xor
aas
pushl
add
jno
nop
inc
fdivs
lret
std
imul
cmpsl
pop
fbstp
lock
ja
inc
out
lock
mov
jg
cwtl
dec
mov
xlat
call
mov
sub
lret
xor
cmpl
int
jg
hlt
lcall
jbe
push
adc
sub
adc
or
subb
decb
sbb
movd
shll
out
and
stos
rolb
mov
std
or
sbb
pop
sbb
dec
out
mov
sbb
or
icebp
daa
cmpsb
xchg
addb
lock
xor
or
cwtl
faddl
mov
inc
jge
push
int
divb
out
faddl
push
sub
inc
movsb
add
inc
je
repnz
test
jo
popl
popf
sub
ret
dec
cli
daa
mov
clc
test
ret
popa
sub
add
mov
mov
into
sbb
das
adc
xchg
lcall
mov
cmp
repz
dec
mov
jl
cmp
xor
pop
iret
out
mov
jle
adc
scas
pushl
insb
mov
mov
popa
cmovb
add
jmp
jo
jp
mov
mov
mov
mov
jg
sub
adc
inc
mov
and
adc
outsw
push
shlb
loop
sbb
push
adc
pop
shl
cmpsb
shl
pop
sub
int3
or
pop
jnp
and
push
pop
pop
ljmp
pop
stc
aaa
adc
outsb
mov
jae
ficomps
call
mov
push
addr16
sbb
rcrb
mov
adc
jp
mov
inc
xchg
jp
sub
subb
mov
pushf
aas
mov
aaa
repnz
pop
cli
movsl
pop
idiv
ret
mov
imul
shll
pop
cmp
mov
popa
or
dec
popf
push
call
popa
pop
stc
ret
fstps
lods
mov
std
addl
ror
inc
test
adc
jg
cltd
jecxz
add
loopne
mov
jbe
fucom
mov
mov
daa
xchg
fildl
rcr
icebp
jo
shll
enter
dec
fisttps
cmp
insl
push
inc
ds
pop
dec
stos
movsl
das
cwtl
sahf
mov
decb
xor
sbb
jecxz
or
pop
stos
mov
pushf
mov
xchg
loopne
dec
pusha
cs
fsubl
sbb
mov
bound
jp
xor
sbb
clc
mov
lock
push
mov
pop
cmp
clc
and
jno
jb
fstps
pop
cld
mov
fisttpl
aaa
mov
jecxz
jo
mov
dec
xor
xor
test
sti
cs
aas
mov
push
jg
je
inc
stos
push
and
add
add
sub
aas
mov
inc
jno
stos
in
inc
mov
inc
int3
or
and
jge,pn
ljmp
ja
xchg
dec
inc
fs
mov
ss
pop
sbb
call
adc
out
ret
rcrb
jnp
aas
sbb
xchg
inc
cmpsb
loopne
or
out
fidivrl
dec
stc
and
cmc
icebp
cmpsb
adc
pop
ljmp
fs
cmp
mov
leave
nop
adc
xor
fcmovbe
lds
cli
xor
push
push
cmp
dec
int3
rcr
andl
fldenv
mov
lahf
inc
std
or
dec
inc
jns
into
pop
in
or
push
cmc
andl
cli
shlb
sbb
dec
adc
vpmacssdqh
out
into
out
jge
sub
aam
mov
dec
sbbb
xchg
outsb
or
cmc
cmpsl
xchg
sti
lcall
mov
xchg
xchg
shrl
add
add
loopne
push
cmc
jecxz
push
or
ja
or
jbe
lea
shll
mov
push
mov
jnp
fyl2x
clc
jns
fsub
out
mov
and
dec
data16
push
adc
add
fimull
dec
mov
pushl
out
imull
push
outsl
adc
push
ja
testl
sahf
pop
fs
loope
out
jg
roll
dec
push
out
push
mov
es
mov
fwait
and
sub
push
or
jmp
jl
cld
lds
xor
leave
fmul
addr16
das
jmp
lods
dec
loop
and
incl
and
stos
gs
jbe
mov
popf
daa
adc
incb
push
rclb
adc
cmp
cmpsb
into
cltd
or
xchg
mov
mov
sub
hlt
cli
pushl
fs
push
stos
sub
mov
push
mov
xchg
sar
cmpl
hlt
scas
push
mov
mov
pop
mov
out
add
out
xlat
outsl
cwtl
sarl
ret
pushf
outsb
jne
dec
mov
inc
mov
mov
pop
sbbl
inc
pop
jl
ret
popa
pop
jmp
xchg
cmp
js
lock
loopne
xor
frstor
decl
int3
jbe
mov
jg
shll
lea
ror
jle
mov
mov
jbe
jns
sub
hlt
fisttpll
or
adc
cmpsb
rcrb
enter
cli
ja
sub
sbb
pop
int
popf
stos
clc
add
adc
push
out
lock
ror
jns
enter
jbe
xchg
je
jmp
jg
addr16
xchg
shll
call
adc
das
mov
call
sbb
idiv
adc
out
pop
xor
xor
sub
inc
in
ret
and
movsl
xchg
js
out
test
adc
decl
xchg
push
inc
test
xchg
xchg
mov
insb
or
jo
add
scas
sbb
or
loopne
and
and
jmp
decl
in
jb
adc
pop
outsb
lret
xchg
pop
cltd
dec
hlt
inc
add
in
fsub
push
dec
push
pop
mov
incl
xchg
mov
or
mov
sti
adc
dec
xlat
stc
out
sahf
ret
cmp
inc
rcrb
push
cmp
xchg
mov
sub
into
stos
mov
out
jle
push
and
scas
fimull
fmull
mov
sub
cmc
fldt
mov
lds
incl
mov
dec
mov
shr
popa
pusha
outsb
lahf
and
mov
lods
stos
inc
ljmp
cmp
pop
inc
add
xchg
jle
loop
out
dec
dec
das
cmc
es
pop
lock
cli
lock
cltd
enter
and
add
sub
inc
mov
sbb
mov
testb
cmp
sub
cs
repz
hlt
pop
leave
insl
inc
cmp
xor
addr16
clc
xor
mov
cmc
inc
test
ljmp
pusha
out
pop
sbb
cli
xchg
lcall
mov
jle
ljmp
xchg
sbb
js
scas
popa
movsb
test
add
push
loope
mov
stos
cmp
repnz
sbb
scas
icebp
and
sbb
stc
inc
outsl
pusha
cltd
rcl
decl
incl
mov
std
sar
inc
pop
fsts
xchg
sbb
dec
bound
mov
cmpsb
dec
daa
inc
jne
push
fistpll
or
dec
mov
cld
sub
jae
push
in
lods
fs
mov
mov
loope
test
adc
int
sti
cs
cli
in
sbb
mov
push
xor
xchg
mov
mov
gs
jns
jg
loop
or
dec
cmpsb
incl
cmp
and
ja
mov
xchg
psubq
das
or
and
pop
std
lret
test
pop
rorb
sub
add
add
inc
fnsave
and
out
inc
sar
and
adc
add
inc
sub
pop
incb
dec
add
jmp
adc
push
out
lods
xor
lock
add
bound
add
mov
sub
push
xor
mov
pop
mov
out
sub
test
divl
lret
sub
cld
insb
fdivs
fucomi
stc
aas
mov
adc
push
jnp
mov
push
mov
sti
mov
hlt
jge
fs
cmpsl
push
cmp
sti
jnp
mov
pop
shlb
cmpsb
ljmp
inc
or
ds
test
inc
push
add
les
loopne
rolb
imul
xchg
push
lea
pop
ficompl
sbbb
and
mov
mov
add
push
cmp
pushf
push
inc
pop
sub
xchg
adc
or
ljmp
sub
lods
add
xchg
sub
adc
ss
lds
mov
mov
insl
lods
das
add
rcrl
push
cmp
fildl
inc
inc
or
xorl
sub
adc
add
mov
xchg
addb
insl
cmp
lcall
fwait
push
mov
inc
aas
in
add
add
adc
or
lcall
cwtl
mov
je
rclb
inc
in
pop
add
xchg
mov
mov
in
adc
fwait
loop
inc
stc
out
stc
dec
rorl
insl
xchg
lods
mov
adc
fwait
lock
mov
aaa
or
pop
jmp
dec
insl
sub
cmp
inc
push
add
cld
or
lods
hlt
and
or
mov
std
aaa
lods
ss
aaa
pusha
scas
les
outsb
sub
pusha
sbb
push
lret
fcomps
mov
and
or
mov
popa
push
lea
je
add
fildl
lods
fwait
xchg
xchg
jbe
aaa
stos
mov
addl
and
pop
into
dec
fadds
je
insl
rcl
mov
imul
or
lcall
mov
sub
push
daa
sbb
jo
mov
dec
daa
and
mov
aam
lahf
mov
icebp
fistpll
inc
or
nop
icebp
outsl
cmp
repz
push
lcall
mov
inc
or
addr16
and
mov
or
stc
push
xchg
sbb
jnp
notb
inc
imul
fwait
mov
imul
xor
add
shl
into
xor
xor
jae
mov
cmp
scas
addr16
call
add
lods
xchg
inc
jle
xor
dec
outsl
out
lods
mov
mov
xchg
sub
jnp
xor
cmp
pop
jae
mov
imul
je
repz
and
xor
popa
loop
fcomps
and
adcb
rcrb
adc
lcall
or
pop
push
dec
insl
in
std
jo
rcl
rorb
sub
push
repz
dec
xchg
sbb
lods
sbb
insb
xchg
push
insb
adc
lods
inc
sbb
arpl
add
xor
push
add
pushf
sub
inc
imul
or
shrl
sbb
sarl
ss
xor
xchg
cmp
mov
adc
sbb
fwait
mov
test
inc
xchg
in
lcall
daa
mov
shll
cmp
stos
sub
loopne
mov
test
push
mov
push
negl
cwtl
push
in
enter
pop
imul
outsl
mov
add
data16
or
inc
in
in
pop
xor
shrl
cmp
ss
cld
lahf
call
pmulhw
or
clc
aaa
push
sbb
inc
mov
aaa
xlat
xlat
xor
movsb
sti
lret
push
xchg
dec
stos
outsl
std
aaa
jo
les
dec
adc
add
add
fmuls
ss
movl
push
clc
xchg
test
clc
push
xor
or
incl
shlb
xchg
repz
fidivrl
pop
inc
mov
mov
in
lods
or
pop
sbb
push
push
or
mov
push
adc
pop
cmp
cmpsb
out
pusha
jb
sbb
mov
mov
shl
adc
rcrl
xchg
popa
inc
xchg
rol
lock
inc
cmp
outsl
sbb
add
xchg
add
test
and
jmp
ds
add
or
push
inc
fwait
rorb
in
rorb
int
test
bound
rcrb
and
or
data16
into
xor
push
test
or
insb
mov
lock
jb
sub
shrb
stos
inc
inc
sub
lcall
add
out
adc
xchg
int
cli
xor
cmpb
sub
or
add
shll
scas
and
sub
aad
push
fwait
and
and
cmp
scas
mov
mov
push
mull
jnp
ss
aam
push
xchg
inc
add
insl
push
add
pushf
xor
aaa
sbb
sub
cmc
aam
mov
les
shll
inc
into
ja
mov
and
fmuls
xor
inc
imul
jns
and
xchg
pop
lods
xor
pop
push
pop
mov
mov
sbb
fldcw
sbb
pusha
fsubs
inc
in
hlt
push
nop
cmp
outsl
pop
aam
push
andb
loop
repz
adc
cmp
fwait
lea
in
push
cmpl
add
dec
aaa
cwtl
inc
in
fnstcw
movsl
sbb
mov
dec
xchg
mov
mov
fidivl
sbb
mull
sub
rolb
push
pusha
cs
xor
mov
mov
stc
jo
in
jo
xor
push
inc
shll
rolb
mov
outsb
sbb
dec
out
in
mov
mov
ss
xor
pusha
shl
and
cltd
xor
pop
add
int
cltd
movb
lea
int3
aam
adc
jnp
xor
jne
adc
sbb
js
out
cld
add
inc
imul
scas
sbb
fwait
arpl
arpl
popa
push
push
mov
jge
sbb
jnp
loop
xchg
and
dec
pop
cmpsb
and
push
pop
add
mov
rcrb
addr16
sbb
les
fidivs
cmp
inc
mov
pusha
mov
aad
shlb
stc
xor
or
rcl
sti
jo
lcall
dec
cmp
xor
inc
jmp
sbb
inc
popf
xor
rolb
dec
jo
pushw
shll
mov
inc
test
jl
fcomps
enter
mov
xchg
leave
adc
scas
jae
cmpsb
stc
and
add
subl
sbbb
les
or
xor
xor
ret
and
out
jbe
push
xor
adc
mov
aaa
mov
jge
dec
lods
inc
js
fstpt
out
inc
sbb
loopne
xchg
ljmp
xor
cmpsl
push
mov
sub
jo
inc
inc
insl
lock
xlat
push
mov
icebp
mov
mov
jl
xchg
popa
test
add
loope
loope
sub
mov
add
data16
cmp
hlt
pop
xor
mov
ficomps
jo
jo
in
pop
fcomps
hlt
jb
or
xor
data16
or
lcall
cs
sub
es
and
xor
mov
inc
mov
push
jns
jb
dec
inc
xor
imul
das
divl
nop
mov
xor
test
push
lods
imul
fucomi
insl
cmp
pushf
orl
loopne
or
fidivl
cmp
push
int
cmp
cmp
dec
push
adc
lcall
jge
push
xlat
jne
insl
mov
in
xor
js
fiadds
aad
lods
loope
rclb
push
push
dec
adc
mov
das
push
mov
push
insl
lods
xchg
fldt
sub
or
ljmp
js
dec
sub
jnp
paddusb
imul
cltd
xor
lea
sbb
xor
xchg
mov
inc
imul
jl
push
push
pop
xor
cltd
ret
into
addl
in
cmpsb
xchg
in
sbb
xor
idivb
pop
jge
adc
sub
fnstcw
mov
aaa
add
sbb
and
sub
mov
sub
mov
lods
aam
pushf
add
adcl
flds
std
outsl
add
fcomps
enter
lret
dec
push
mov
fstpt
adc
cmp
jns
mov
and
mov
mov
push
add
or
push
loopne
rclb
lds
xor
push
inc
jae
jg
jns
xlat
nop
xor
shll
sbb
or
je
or
push
xor
jo
mov
jo
jns
mov
out
sub
es
ret
xor
sbb
dec
adc
add
adc
and
xchg
in
xlat
lock
jae
movsl
enterw
sbb
loope
pushf
xor
enter
cmp
lcall
jge
movsl
out
cmp
push
sub
or
fneni(8087
pop
int
pop
jge
cmp
mov
outsb
sbb
add
push
jae
mov
test
sbb
testl
test
shlb
imul
adc
int
jmp
xlat
in
cwtl
jp
xor
xchg
or
cmp
xchg
mov
jmp
sbb
jp
xlat
fsubl
fadds
stc
jo
in
ret
in
pop
push
push
xor
push
cli
or
cmpsb
xchg
add
stc
mov
dec
insb
hlt
stc
call
mov
push
cltd
sub
and
loopne
or
jecxz
popf
loop
jne
push
je
or
xchg
xchg
xchg
stos
testl
pusha
jo
xchg
iret
inc
fwait
xor
sub
and
jbe
stos
or
jl
xor
push
adc
pusha
xor
or
pushf
sti
push
add
mov
sar
jnp
icebp
imul
sbb
add
jns
xchg
fdiv
decl
xor
dec
sbb
sub
mov
inc
sub
daa
clc
xchg
or
sbb
inc
add
movsl
jmp
lcall
gs
insl
xchg
jnp
aaa
pop
push
add
mov
mov
add
xchg
mov
imul
call
add
sbb
test
adc
aad
scas
add
sbb
add
loopne
mov
xor
subb
xchg
cmp
add
stc
scas
or
mov
xchg
push
cmc
sbb
dec
int
add
xchg
push
int
xor
in
push
push
lods
popa
add
dec
test
xor
cmp
sahf
and
xor
rclb
xchg
cmp
push
mov
shlb
or
mov
decb
aas
push
pop
push
cmpsb
pop
ret
add
popa
pusha
or
push
dec
push
jle
aaa
in
mov
fwait
mov
out
jne
cmp
dec
xor
shll
mov
loope
icebp
push
dec
aaa
das
cmpsl
add
andb
xchg
rcrl
in
aam
jnp
inc
fnstcw
push
mov
mov
into
xorl
inc
cmp
or
loopne
sbb
fs
sub
mov
and
jo
push
pushf
push
sub
test
inc
test
out
sahf
addr16
mov
pop
add
push
adc
lcall
jg
mov
and
xchg
adc
pushl
inc
dec
jb
jno
adc
fimuls
adc
mov
mov
add
push
loop
push
inc
push
inc
sbb
insb
xchg
xor
aaa
scas
adc
and
or
add
insb
add
fwait
ffreep
mov
inc
add
sub
inc
sub
cwtl
sub
xor
dec
fs
leave
pusha
ja
push
nop
std
or
add
loopne
push
sbb
je
xchg
cmp
rolb
ss
clc
icebp
sub
fcompl
movsl
push
jg
dec
jno
mov
popa
sti
js
jne
jns
mov
sub
inc
rcll
sub
movsl
pop
or
mov
cmp
mov
lods
cmp
mov
unpckhps
shlb
push
fsubrl
jbe
jae
jo
test
sub
pop
add
inc
jnp
int
or
push
or
mov
and
dec
sbb
popa
push
das
push
test
int3
add
stos
adc
int3
or
cltd
pop
bound
or
jp
sti
rcrb
insl
xor
or
push
pop
in
bound
mov
pop
rolb
scas
fimull
pop
test
aad
push
rorb
subb
push
cmc
sub
mov
xchg
add
push
add
xor
test
dec
sbb
shll
aaa
or
xor
repz
sbb
sbb
cmp
es
mov
xor
xlat
or
cld
std
sub
mov
mov
inc
mov
xor
cs
sub
dec
fsubl
mov
xor
adc
lret
inc
and
adc
sub
xchg
call
xor
aaa
cwtl
test
sbb
in
ret
xlat
inc
nop
insl
jp
aaa
stos
rorb
mov
sbbb
stos
adcl
and
fs
mov
push
push
jge
fsubl
push
sbb
push
mov
out
inc
icebp
dec
rclb
fsubr
push
push
push
dec
adc
jo
mov
loopne
ljmp
jmp
add
cli
adc
rolb
les
xor
ret
mov
adc
sahf
dec
fbld
jbe
push
lock
aam
push
xchg
in
clc
cmp
fcompl
in
xor
xchg
xor
stos
lods
cwtl
push
xchg
xor
dec
jo
xlat
push
cwtl
xor
decl
inc
and
pop
fwait
int3
mov
or
adc
adc
push
out
push
jne
xorb
push
aas
and
mov
and
and
mov
inc
rol
mov
or
dec
xor
mov
add
add
lret
stos
xchg
adc
imul
stc
sub
adc
cli
jp
adc
hlt
mov
push
jecxz
int3
popa
imull
add
mov
rcrl
mov
push
into
xchg
mov
mov
fyl2xp1
cmp
inc
mov
jno
dec
xchg
push
ss
lcall
add
and
xchg
shl
iret
lock
adc
push
add
push
pop
cwtl
xor
adc
lret
sbb
push
mov
addl
adc
mov
xchg
enter
or
fwait
jo
xor
sub
cs
outsl
out
int
loopne
dec
repz
imul
aaa
cld
setbe
xor
xchg
or
stc
in
adc
stos
xchg
add
inc
cli
nop
dec
or
pop
lods
mov
fs
fmul
jbe
inc
adc
pop
stc
push
xor
shlb
decl
dec
test
or
mov
push
out
jp
adc
sbb
pop
jns
loop
cmp
in
cmp
scas
jae
ljmp
sub
adc
inc
and
loopne
xchg
sbb
incl
push
movsl
mov
xor
out
lea
sbb
sti
fiadds
xor
adc
test
int
jno
xchg
xor
insb
btcl
mov
jp
xor
lea
cmp
hlt
push
es
add
int
sbb
dec
fmuls
mov
xchg
push
xchg
int
mov
aad
lods
sub
xor
je
jae
lods
inc
adc
insl
loop
pop
pushf
test
cmp
subl
push
xor
jb
xor
movsl
fwait
or
add
mov
xor
lcall
lret
pop
push
lahf
stc
rolb
out
pop
jnp
or
xorb
xchg
or
cmpsb
add
xor
ja
dec
lcall
jl
mov
jge
mov
mov
adc
rclb
jmp
and
out
jbe
push
outsb
fwait
insl
xchg
adc
xchg
mov
test
mov
cs
inc
dec
stc
jb
pushf
or
popf
jne
add
push
rsm
mov
cmp
push
mov
add
xchg
lds
dec
adc
mov
push
das
xchg
jecxz
movsb
andl
jge
add
push
pop
push
cli
aaa
dec
cs
or
mov
repz
and
xor
pop
pop
inc
fsts
daa
dec
xor
cmpsl
or
lea
addl
loope
or
mov
xchg
adc
inc
adc
adc
inc
mov
or
test
out
xchg
push
pushf
mov
es
add
jecxz
or
dec
cmp
jns
subl
jbe
xchg
rcrl
aad
cmp
push
mov
and
scas
insl
cmp
xor
or
mov
mov
in
lcall
data16
push
stc
in
sbb
hlt
push
mov
test
roll
jne
call
and
lcall
inc
inc
sub
hlt
aam
call
xchg
rolb
mov
lea
ret
mov
stos
andb
scas
scas
dec
test
cltd
pop
xlat
bound
xor
scas
loop
push
jg
xchg
adc
ds
ja
mov
shrb
aad
into
roll
or
add
fsubrs
sbb
cltd
cmp
ljmp
into
rcll
je
dec
gs
int
push
ret
push
sub
data16
add
aas
repz
es
jb
mov
mov
mov
xchg
inc
in
pop
popf
rorb
sbb
cli
jle
xlat
fst
inc
dec
dec
mov
add
lods
push
out
leave
add
lcall
push
pop
inc
jno
shl
sbb
scas
mov
test
add
test
or
ret
ljmp
rclb
xor
mov
pop
sbb
jnp
add
loopne
inc
sbb
pop
scas
xchg
in
hlt
test
mov
cltd
add
fcompl
iret
rcl
pop
les
mov
lahf
cmp
xor
sarl
xor
pop
bound
mov
mov
xor
fwait
lret
lods
mov
jmp
dec
es
hlt
stc
popf
call
add
outsb
adc
addr16
std
sbb
test
sub
adc
aam
mov
cwtl
xor
dec
jle
inc
jmp
stc
xchg
lcall
loopne
mov
push
push
dec
mov
adc
lret
push
mov
je
gs
fidivs
ja
mov
add
fimull
sbb
add
inc
imul
inc
mov
lea
pop
cmp
xor
mov
mov
cltd
jp
aad
or
xchg
in
in
jl
enter
test
inc
jl
fwait
or
mull
cmpsb
mov
test
jge
lahf
sbb
add
push
or
hlt
mov
fwait
and
cs
call
cld
jg
std
stos
pop
pop
lock
leave
arpl
push
push
leave
hlt
mov
fucomp
jg
aas
dec
sbb
mov
dec
jns
scas
frstor
sub
dec
sub
mov
fldt
add
cmpsl
out
push
or
dec
subb
or
mov
and
repz
cmp
pop
mov
push
xchg
mov
jb
xor
std
sub
icebp
loope
jge
and
or
and
pusha
add
hlt
popf
dec
xchg
rcrb
enter
testb
inc
aam
mov
imul
mov
dec
or
mov
sbb
sub
adc
inc
adc
mov
fmuls
in
push
imulb
push
dec
dec
push
jmp
loopne
sbb
dec
mov
cli
hlt
stos
jmp
jnp
sbb
mov
repnz
jb
add
push
cld
pop
insb
cli
add
dec
ret
cmp
jne
cmpsl
nop
in
push
sbb
xchg
push
je
push
divps
push
mov
cmp
ljmp
mov
test
xchg
ret
fs
out
imul
in
es
adc
sbb
and
andl
aaa
push
loope
or
scas
xchg
sub
cmpsl
push
mull
push
dec
int
jl
sbb
xor
pop
imul
movsb
outsl
sbb
pop
imul
or
mov
xor
inc
xchg
xor
xor
or
pop
andl
jno
test
xchg
sub
sub
enter
cwtl
or
mov
mul
mov
mov
push
push
xchg
pop
jmp
mov
inc
hlt
das
pop
add
jecxz
pop
mov
jmp
rep
andl
cmp
rcl
pop
int
fisubrl
push
loop
pop
out
mov
icebp
mov
jb
or
dec
lcall
inc
popf
stc
in
cmpsl
das
cmpsb
xor
mov
fdivrp
sbb
xor
or
adc
mov
mov
loopne
call
fisubrs
mov
cmpsb
ds
mov
pop
adc
out
mov
push
xchg
pop
mov
cmpsb
sbb
dec
and
into
sahf
pop
xchg
or
pop
imul
push
xor
cmc
rolb
test
idivl
inc
repnz
push
cmp
or
cmp
cltd
fdivs
mov
in
rcrb
inc
adc
mov
xor
mov
pop
inc
jae
xor
inc
adc
pusha
into
aad
sub
loop
and
movsl
fwait
push
loope
andb
loopne
aaa
or
ret
pop
xchg
cmp
jle
adc
gs
and
add
jmp
mov
add
xchg
insl
popf
jnp
mov
sti
add
sub
lods
sub
mov
lcall
push
xchg
mov
inc
aaa
data16
push
stos
pushf
dec
jbe
xor
jg
push
sbb
mov
aam
adc
addr16
jo
je
movsl
mov
imul
ret
clc
xchg
mov
xor
int
andl
cmp
loop
test
lcall
pop
imul
cltd
mov
xchg
pop
sbb
scas
sbb
mov
shlb
aaa
jne
xor
or
jbe
xchg
mov
push
jnp
push
lea
xor
pop
xchg
jne
rolb
enter
jae
test
push
add
mov
pop
mov
test
fidivl
jp
pop
rcpps
test
add
call
or
stc
cltd
cmc
push
loop
hlt
lds
jge
lods
das
cwtl
mov
addl
into
adc
adc
test
mov
pop
sub
cmpsb
jne
ret
test
push
pop
xor
jl
mov
sub
cmp
int
sbb
and
sub
sbb
popf
jo
mov
fnstcw
pusha
jp
push
bound
orb
add
pop
adc
cs
xor
rcll
loopne
cmp
jb
sub
mov
mov
es
inc
sub
in
sahf
stc
mov
subl
gs
jb
fsubl
add
pop
cmpsl
pop
or
insb
xor
into
adc
lock
dec
adc
or
cmp
divw
push
lock
add
test
scas
sbb
cmp
mov
repnz
jge
iret
mov
insl
lret
flds
rorl
xor
pop
mov
xor
scas
data16
adc
adc
push
pop
sti
fwait
or
push
push
sahf
sbbl
out
int
pop
xchg
rclb
lret
add
xor
or
loopne
mov
in
inc
test
frstpm(287
xor
dec
mov
or
aad
jge
inc
aaa
mov
sbb
lcall
mov
adc
xchg
fisttpll
sti
sbbl
or
fwait
clc
loopne
test
clc
xor
push
lds
or
mov
cmp
add
decb
hlt
outsl
pop
lods
rcr
push
push
ljmp
xchg
mov
and
fcomip
fcoml
or
negl
lods
sbb
fmuls
fwait
lahf
stos
push
cmpsb
push
mov
or
adc
xchg
stos
pop
loopne
xchg
jmp
push
mov
lcall
ds
cltd
and
int3
push
xor
stos
add
into
add
stos
or
xor
dec
push
cmp
pop
push
cmpsb
jo
xchg
cmp
dec
cltd
jp
loop
cwtl
scas
push
es
or
and
jo
jo
sub
push
out
xlat
call
adc
mov
pop
in
cmp
mov
push
pusha
jo
cld
pusha
mov
sbb
push
test
mov
lret
testb
add
data16
add
daa
and
xlat
sbb
fiadds
jo
data16
pop
imul
sarb
mov
add
clc
sbb
inc
cwtl
push
pusha
jae
sub
stos
sbb
push
add
inc
cld
cmp
xchg
ret
push
sarl
rclb
ret
pop
cmp
mov
and
jnp
aad
sbb
lret
push
in
nop
add
mov
xchg
push
xor
sub
fmuls
jae
mov
push
dec
test
test
fwait
sbb
or
lods
int3
add
add
mov
pusha
fwait
orb
incb
sbb
push
sbb
fmulp
mov
cmpsl
dec
inc
add
mov
outsl
sub
adc
or
adcl
sbb
ja
in
sbbb
adc
pop
inc
push
movsl
push
mov
enter
pop
mov
in
loop
push
xor
push
addb
cmp
pop
jmp
jbe
add
or
mov
or
or
ds
out
pop
push
mov
loope
sarl
fisttpll
mov
push
sub
inc
adc
pop
cwtl
fimuls
and
add
stos
cmp
cmp
cmpsb
add
fwait
pop
cmpsl
pop
adc
stc
rcrl
mov
mov
inc
leave
cmpl
lea
push
adc
sbbl
xor
push
shll
sub
rorb
scas
imul
push
rclb
outsl
xor
inc
arpl
nop
add
loopne
sub
js
lea
dec
data16
pop
dec
ljmp
push
pop
cmp
pushf
das
js
rcll
inc
add
movsl
sub
sub
xchg
or
xor
mov
cmpsb
push
or
push
scas
outsb
push
push
pop
lea
adc
mov
jb
xor
adc
adc
pop
orl
in
aam
andl
cmp
pop
and
dec
xchg
pop
call
sub
mov
xchg
and
cli
ja
outsl
inc
add
cs
int3
pop
sub
call
add
xchg
iret
pop
push
cli
adc
fldl2e
add
mov
fisubrl
loope
test
pop
jae
xor
sub
xchg
andl
adc
xor
loope
inc
rorl
pusha
xor
lret
adc
mov
lock
or
ret
lock
push
popa
pusha
sub
sub
add
add
or
jo
scas
mov
xor
mov
mov
push
jl
pop
mov
icebp
stos
ss
pop
loope
inc
adc
add
xor
cltd
sbb
stc
les
adc
dec
mov
or
jo
sbb
fldenv
mov
inc
pop
mov
ljmp
stc
ss
es
xchg
xorb
mov
mov
xor
lret
icebp
fistpl
ret
stc
int3
mov
gs
data16
push
jl
xor
mov
xchg
mov
mov
push
sbb
push
sbb
push
jnp
fdivs
xor
scas
mov
xor
movsl
dec
pop
das
xchg
in
rolb
std
addr16
xor
sub
scas
push
lcall
adc
sub
es
movsb
loop
jb
enter
ljmp
mov
adc
dec
mov
les
inc
and
push
ret
push
sbb
cmp
aaa
mov
xor
lea
sbbb
cmp
call
add
sar
push
or
cmp
sbb
push
inc
loop
repz
mov
sti
pusha
cwtl
mov
std
push
pop
jne
or
push
jmp
fsts
and
mov
mov
mov
sahf
test
cltd
mov
or
pop
addl
imul
movsl
jo
or
rcll
add
loop
sub
stos
adc
rorl
loope
loop,pn
xchg
clc
into
lock
shll
inc
out
push
push
mov
fldt
xchg
ds
jae
pushf
sub
jae
cwtl
push
jo
mov
pop
jo
cmpsb
cmp
sbb
push
mov
jmp
cltd
fwait
jno
xchg
rcrl
int
xor
xchg
cmp
popa
push
xchg
jns
mov
scas
add
jne
mov
push
mov
mov
jmp
fs
iret
mov
sbb
cli
pop
pushl
mov
mov
sbb
addr16
sbb
or
xor
mov
loop
or
js
adc
lcall
inc
in
adc
xor
mov
mov
xor
cli
rcrb
sbb
add
je
test
mov
rcll
jge
rclb
sahf
loope
sbb
std
xchg
mov
inc
dec
xchg
mov
in
sub
adc
inc
sub
push
pop
ror
aad
lret
pusha
adc
ja
mov
stos
mov
call
scas
push
insl
xchg
dec
shll
sub
in
push
and
iret
adc
into
jmp
enter
jo
adc
adc
pop
rcll
daa
or
js
dec
jb
mov
jle
rorb
pop
sub
mov
mov
enter
jo
jle
fwait
cmp
add
pop
xor
sbb
call
jo
lods
cltd
pop
hlt
insl
inc
jnp
movsl
lret
fwait
pushw
popf
push
jle
adc
push
add
loope
inc
mov
push
and
test
cmp
popa
mov
scas
dec
mov
jmp
xchg
sub
push
or
cmp
xor
mov
cmp
cmp
sbb
inc
inc
shll
xorb
int
jle
sub
xor
test
sahf
jbe
dec
push
adcb
test
in
inc
mov
pop
xlat
loope
scas
jbe
push
out
push
cmp
and
adc
call
sbb
ret
mov
into
push
cmp
adc
mov
ret
jmp
dec
mov
xor
enter
push
inc
xchg
xchg
xor
cmp
sbbl
fs
add
into
adc
ret
push
and
xor
das
outsl
sub
stc
push
pop
int
and
int3
pop
cltd
fadds
xchg
jb
filds
addr16
data16
xor
xor
sbb
mov
aad
add
xor
inc
push
cwtl
jo
mov
subl
shl
sub
pop
mov
sbb
jno
lock
pop
imul
pushf
ds
dec
jo
sub
lock
push
lret
adc
push
mov
sub
test
jp
push
cwtl
or
popf
mov
shr
mov
cmp
icebp
and
inc
xchg
adc
dec
cmp
inc
dec
pop
push
xor
sbb
stos
mov
fisubl
dec
cmp
in
loope
push
xor
popf
xor
int
jp
dec
mov
je
add
rcr
leave
sub
dec
push
add
lock
insl
fwait
mov
out
inc
mov
push
xor
leave
push
cmp
jo
sbb
iret
addr16
inc
jo
xor
cmp
mov
xchg
mov
call
or
dec
xor
in
jge
iret
add
enter
leave
mov
ret
cli
add
push
mov
lea
arpl
icebp
lret
xlat
addb
inc
test
lcall
orb
aam
cmc
push
cwtl
dec
cmpsl
push
pop
adc
cs
mov
scas
dec
gs
stos
adc
and
aam
inc
push
push
cld
xlat
push
or
loopne
les
movl
sbb
call
scas
lret
mov
or
add
push
mov
add
add
inc
jne
pop
hlt
mov
sahf
inc
push
or
mov
sti
in
and
mov
decb
icebp
or
shll
lea
and
sub
push
ljmp
cmp
inc
mov
clc
stos
push
or
orb
push
push
push
xor
mov
jb
cmp
xlat
sbbl
xlat
pop
in
jle
test
xor
push
sub
test
xor
sbb
adc
jae
cs
inc
stos
addr16
in
enter
mov
adc
mov
xor
pushf
dec
int
ret
cmpb
cli
test
lret
xor
fmuls
push
push
pop
stos
inc
xchg
mov
cmpsb
lcall
shlb
sahf
loop
or
xchg
arpl
ret
sub
mov
mov
pop
mov
add
xorl
js
inc
jae
gs
jo
jle
inc
scas
dec
testl
js
test
je
fisttpl
sbb
xchg
out
cmp
sub
outsb
or
rorb
out
mov
or
pop
scas
icebp
push
insl
js
push
sub
pop
sbb
jmp
enter
xor
adc
add
fwait
push
xor
or
sbb
movb
adc
push
test
testb
ficomps
mov
pop
sbb
aas
repz
mov
gs
aas
sbb
push
mov
xchg
cwtl
jb
lcall
sub
mov
stc
ss
cltd
cmp
xchg
sti
mov
jo
loopne
sub
push
push
xchg
fdivrl
mov
aam
pop
dec
and
fs
add
or
xchg
add
ret
mov
cmp
subl
xchg
cmpsl
pop
lret
gs
and
pop
lods
ror
and
mov
loop
lea
lock
push
xchg
mov
pop
scas
cmpb
test
cmp
test
scas
mov
or
push
ljmp
mov
xchg
pop
mov
icebp
xor
add
imul
push
dec
cmp
pop
loop
jno
lcall
arpl
adc
xor
xchg
xor
inc
jae
add
jp
sbb
rcrl
or
mov
dec
push
mov
pusha
mov
jecxz
stos
jbe
inc
cld
fimull
xchg
rol
fstpl
dec
pusha
repz
cwtl
dec
push
mov
add
mov
dec
xor
cmp
jmp
xlat
mov
jle
push
xor
mov
mov
dec
lds
movsl
cmc
sbb
std
aaa
lds
inc
fwait
push
sub
adc
inc
or
fimull
push
mul
pop
lods
dec
inc
push
fsubs
push
ss
xchg
xchg
stos
mov
jae
xor
xor
and
mov
pop
adc
jne
push
sbb
pop
xchg
ret
xor
jp
leave
loope
push
mov
push
push
sub
test
call
mov
adc
leave
loop
es
mov
fwait
ret
adc
or
scas
nop
loopne
dec
and
data16
mov
dec
push
sub
sub
push
adc
andl
cmp
aad
sub
and
sub
dec
cmpsl
pushf
pop
xor
xchg
cltd
sbb
dec
xchg
push
mov
jo
mov
out
cmpsl
mov
cmpsb
pushf
stos
adc
movntq
out
xor
push
pop
js
loop
and
pop
lds
ret
adc
push
adc
dec
loope
mov
mov
scas
dec
dec
test
sbb
std
lcall
jnp
cwtl
xor
lret
cmp
push
jo
sub
cmp
push
pop
sbb
pop
xor
test
push
push
dec
mov
xchg
mov
in
test
pop
xor
and
xor
xlat
push
std
call
aam
out
pushf
sub
and
shll
sahf
push
jo
out
or
testl
inc
add
sbbb
bnd
xchg
push
mov
fdivr
jg
and
sbb
add
jns
std
incl
push
add
sbb
cltd
inc
loop
mov
push
cmp
int
inc
pop
push
loopne
cmp
jmp
xchg
mov
pop
sub
xor
dec
insl
pop
int
das
cmp
insl
inc
pushf
mov
mov
xchg
sahf
push
and
adc
outsl
das
call
cwtl
stos
mov
dec
roll
xchg
add
lcall
daa
sbb
addl
or
mov
or
mov
in
push
mov
push
andl
push
mov
test
mov
lock
int3
pop
loop
or
adc
mov
mov
scas
addr16
nop
and
or
xchg
sub
dec
les
push
lods
insl
icebp
or
mov
into
push
addl
and
xor
mov
pop
mov
sti
xchg
cmp
xor
cmp
insl
jle
pop
test
adc
sbb
sbb
add
aaa
shrb
in
xchg
xor
push
xor
les
or
mov
push
stos
xor
leave
test
mov
icebp
and
outsl
and
sub
sub
into
adc
bound
add
addr16
incl
jmp
mov
mov
fidivs
icebp
cs
adc
pop
sbb
inc
mov
popa
push
pop
or
leave
outsl
rorl
mov
mov
subl
inc
ljmp
cltd
gs
push
pop
rorl
xchg
loopne
xor
and
dec
mov
call
inc
jae
inc
sbb
mov
mov
or
out
fstl
pop
adcl
cmp
hlt
push
mov
scas
mov
es
push
mov
xchg
shlb
pop
jnp
stc
std
jb
add
mov
jae
mov
lret
push
xor
nop
cmp
xchg
stos
fidivl
mov
scas
sbb
adc
movsl
xor
mov
pop
fs
pushf
test
ret
stc
mov
lret
inc
add
mov
aas
xor
pop
sbb
lcall
cmp
mov
sti
pop
sbb
test
test
aaa
aaa
and
adc
pop
or
cmpsl
xor
pop
push
scas
shr
es
sbb
adc
mov
test
subl
ret
push
divb
push
mov
pop
sub
xchg
jb
nop
push
clc
out
lcall
aas
adc
addb
xor
in
aad
aam
pop
push
lcall
loope
adc
test
add
xor
mov
jae
pop
aam
adc
int
inc
push
je
dec
push
jecxz
mov
add
xchg
mov
inc
cs
and
in
xlat
or
cmpsb
ret
adc
xchg
pop
adc
sbb
mov
cmp
daa
rorl
push
sbb
xor
jo
lret
or
rorl
insl
xchg
enter
scas
cmp
hlt
lcall
mov
push
in
add
jge
dec
add
fs
shll
xchg
stos
mov
pop
aad
int3
bound
loopne
xchg
mov
push
mov
add
inc
pusha
mov
sbb
stos
xor
outsb
iret
cmpsb
cmp
mov
jecxz
dec
pusha
mov
clc
sub
shlb
incb
popa
enter
inc
mov
shlb
sbb
mov
arpl
in
add
push
cs
add
push
sti
bnd
andl
rcl
sbb
inc
scas
dec
addr16
out
pop
fs
cmp
aad
jl
sbb
arpl
xor
or
xor
dec
rcll
int
insb
fsubp
mov
jo
pop
xchg
and
loop
add
dec
pop
push
mov
out
jecxz
or
ficoml
jb
adc
call
xchg
mov
int
sub
pop
lea
jb
push
lods
insl
push
jp
aad
push
shll
push
out
push
adc
inc
incl
xlat
ficoml
sbbl
mov
jb
outsb
mov
mov
mov
inc
add
dec
add
and
inc
cmp
cli
mov
je
mov
jmp
cli
pop
outsb
sub
orb
insb
clc
test
jns
adc
js
cmp
push
xchg
das
jo
and
mull
xor
mov
sbb
stos
fdivrs
mov
xor
mov
rcll
addl
rcrl
enter
jg
xchg
sub
daa
mov
addl
or
pshufw
sub
loope
push
sub
sbb
pop
push
xchg
daa
loopne
mov
roll
pop
sahf
pop
dec
popa
add
cmpsb
sbb
mov
int
sub
and
mov
add
push
addr16
enter
push
sbb
pop
fs
stc
add
sbb
xor
arpl
mov
sub
and
jno
xchg
inc
shrb
push
divl
loopne
loopne
imul
jo
or
cmp
and
stos
ret
test
mov
jo
stc
dec
mov
dec
int
mov
gs
loop
imul
mov
loopne
mov
push
xchg
adc
pop
scas
push
cmp
adc
xchg
push
push
sub
dec
ret
adc
add
dec
push
stos
dec
dec
push
add
lret
popf
jmp
pop
test
ret
xchg
xor
jl
mov
mov
pop
std
sub
mov
xor
mov
dec
mov
lods
push
frstor
aaa
dec
add
sub
mov
adc
add
loope
mov
arpl
and
mov
jecxz
ret
add
or
rclb
loope
ficompl
lcall
or
sbb
inc
or
dec
ror
inc
int
push
inc
mov
inc
int
mov
es
imul
enter
cmp
ret
dec
jo
dec
jb
enter
mov
loope
in
adc
xor
dec
sbb
mov
stos
out
mov
pop
scas
daa
aad
xor
pop
fcmove
lea
bound
xchg
jge
rcll
pushl
es
mov
dec
shlb
push
xchg
lret
adc
testb
add
xor
cmp
xor
rclb
push
pop
mov
jne
pop
xor
rclb
mov
mov
xchg
cmpsb
mov
insl
shll
rcr
in
stos
das
ret
inc
push
cmpsl
rcrl
xchg
lret
sbb
imul
add
fs
mov
mov
ljmp
and
ja
or
push
push
out
inc
pop
aam
xchg
ja
aad
add
int
cmp
cmp
push
push
sbb
jno
mov
sbb
call
adc
icebp
add
inc
mov
add
dec
inc
push
push
or
mov
mov
sahf
xor
dec
mov
add
mov
rorb
push
pushf
xor
mov
mov
sub
mov
mov
pop
add
or
sub
loop
clc
or
inc
loope
sub
push
add
lock
and
add
dec
rol
sub
pop
mov
lods
jo
or
sbb
pop
cltd
sbb
lahf
addr16
sub
mov
into
inc
lds
push
addr16
push
pop
pop
sbb
cmp
fs
add
in
xor
dec
add
popa
xor
leave
mov
mov
xchg
sar
add
dec
cmp
mov
mov
iret
adc
push
es
or
dec
js
out
cmpsb
stc
stc
or
push
mov
and
adc
adc
jmp
data16
inc
sbb
pop
popa
xor
mov
cmp
rcrl
test
xorb
dec
call
dec
push
pop
push
mov
jb
mov
scas
jb
push
enter
or
add
mov
mov
adc
add
xor
jmp
cmpsl
pop
loopne
or
lcall
sub
and
cmp
pushf
lret
loope
aas
idivb
nop
inc
push
jno
xor
mov
int
loop
dec
sbb
or
or
xor
or
mov
pop
lahf
sbb
inc
decl
jne
out
xor
ljmp
out
les
jo
push
imul
test
lea
lret
lcall
les
push
lds
add
xor
or
dec
jno
andb
enter
xchg
cmp
push
andb
loopne
inc
cltd
pop
add
jno
push
ljmp
pop
or
push
add
add
dec
mov
nop
lret
adc
in
sub
mov
cmovp
out
adc
or
jo
mov
ret
cmp
cmpsb
adc
cmp
pop
aaa
sub
jmp
push
orl
mov
xor
or
inc
mov
xchg
lods
movsl
push
dec
shrl
sub
sub
roll
push
inc
cmp
fwait
aas
mov
or
int3
mov
test
sbb
xchg
lret
mov
jno
xor
pop
push
mov
aaa
pop
add
or
cmp
ret
jb
xor
sbb
lcall
into
push
ret
rorb
and
xor
jge
add
dec
push
repnz
push
iret
xchg
jnp
stos
xchg
cmp
fistps
mov
stos
add
fnstsw
push
pop
lcall
xchg
or
mov
jo
sbb
ljmp
cmp
test
lahf
pop
mov
in
lds
inc
test
js
push
adc
mov
or
push
scas
loope
adc
dec
and
into
rclb
xor
and
stos
das
cmp
and
cmc
dec
push
shll
or
mov
out
xchg
stos
mov
mov
call
xor
emms
mov
dec
or
push
inc
orl
mov
xor
sbb
pop
cmp
stc
xchg
cmp
enter
xor
dec
pop
cltd
mov
mov
rorl
sub
roll
mov
jl
cmp
and
xor
test
pop
pop
sti
push
and
or
xor
scas
jp
jnp
cs
or
mov
pop
es
pusha
sbb
test
and
sbb
roll
add
xchg
loope
or
push
in
andb
xor
in
flds
xchg
fisubrs
or
es
push
lcall
sub
js
pop
aad
or
and
call
sbb
adc
adc
ret
push
lods
jp
leave
popa
sub
adc
mov
jp
cmp
inc
cmp
lods
cmp
bound
and
insl
inc
movsl
lret
int
adc
lcall
inc
push
mov
sbb
shll
loopne
mov
jns
xor
rcrl
addl
push
imul
test
sub
dec
rclb
xor
inc
or
pusha
enter
xchg
cmp
insl
dec
int
scas
sbb
sbb
fisubrs
scas
faddl
clc
outsb
iret
aaa
add
or
pusha
mov
ret
cmp
inc
stc
inc
sarl
jns
orl
in
shrl
xlat
mov
pop
xor
adc
test
gs
movsl
mov
rolb
dec
push
sub
in
or
inc
jl
bound
mov
xchg
in
inc
push
int
mov
mov
pop
cwtl
dec
sbb
aas
adc
fidivrl
inc
cmc
push
adc
call
sbb
sub
loope
shll
gs
lret
subb
cmp
adc
call
jo
pop
call
xor
std
pop
cmc
push
cmp
les
scas
cmpb
jno
jb
pop
sub
inc
sbb
xor
scas
add
sub
dec
adc
mov
xorb
pusha
pop
push
or
or
push
cmpsb
push
jg
mov
or
push
pop
pushf
xchg
jge
ljmp
sub
imul
test
add
pop
pop
mov
ljmp
cwtl
add
jns
ljmp
xor
inc
sub
sbb
jg
ja
mov
mov
dec
dec
mov
and
out
test
adc
jl
stc
dec
dec
sub
push
mov
mov
xchg
addr16
cli
add
icebp
cmc
jge
roll
pop
dec
loop
das
inc
or
add
jmp
jbe
or
and
adc
xchg
clc
jb
pop
loop
pop
stos
mov
fisubrl
push
jne
sbb
inc
sbb
add
movlps
inc
or
movsl
pop
jne
pusha
insl
push
addb
jmp
or
push
cmpsb
dec
das
add
shrl
test
jnp,pn
or
add
sub
stc
test
addl
andb
rorb
xchg
cli
pop
push
mov
push
add
mov
jo
inc
arpl
lret
push
jnp
push
mov
push
cld
outsl
jo
and
je
lret
loopne
xchg
bound
addb
popf
xor
int
xchg
scas
cmp
mov
add
add
and
call
inc
cs
lods
or
adc
addb
jp
jl
popf
sbb
sbb
cmp
ret
std
pop
rolb
mov
xchg
xorl
rclb
insl
in
pop
xchg
lret
aad
lahf
aaa
sub
mov
push
mov
sub
jae
add
pop
lret
mov
mov
lds
pop
sub
lahf
mov
push
mov
shll
push
inc
mov
movsl
push
mov
out
pusha
ret
js
mov
sub
and
cli
lds
xchg
cwtl
xchg
inc
mov
or
dec
dec
pop
or
pop
cmp
repz
dec
xor
loope
stos
sbb
sub
mov
aas
lret
rorb
inc
mov
push
ret
pop
inc
jne
xor
mov
rcrl
and
push
sub
lret
call
jg
out
ss
mov
xor
xor
jo
stos
popa
jno
clc
adc
lods
enter
ret
mov
psrld
call
inc
pop
pop
test
add
adc
scas
mov
or
in
in
hlt
mov
xor
or
push
adc
inc
loopne
and
out
lret
or
inc
and
bound
test
aad
add
adc
in
xor
addl
sub
js
push
sub
lret
out
mov
ja
sub
sub
or
loop
pop
inc
das
test
xor
mov
daa
or
mov
xchg
loop
clc
mov
int3
addb
xchg
xchg
mov
xchg
jns
mov
add
jo
lods
sbb
inc
cmp
pop
xchg
mov
xchg
add
je
dec
pop
es
dec
jno
sbb
scas
inc
popf
xchg
sub
sbb
insb
call
push
push
es
aad
pop
js
or
add
pop
loop
mov
and
imul
adc
ds
test
loop
or
scas
mov
xchg
lret
idivl
cmpsb
inc
push
cwtl
daa
xor
test
push
add
dec
aam
sar
or
faddl
movsl
dec
sahf
mov
push
mov
push
adc
jmp
mov
hlt
xchg
fsubp
mov
xor
stos
sbb
xor
sbb
push
xchg
lret
inc
jnp
push
aas
jnp
push
push
or
mov
in
mov
xor
aad
add
adc
xchg
lret
aad
call
inc
scas
sbb
mov
sbb
mov
ljmp
xor
and
loop
mov
adc
mov
gs
push
pop
cli
ss
ret
or
sbb
hlt
or
or
lahf
std
je
sub
adc
and
sbb
inc
pop
mov
mov
jge
je
xor
fsts
out
test
mov
add
inc
jae
push
ret
sub
xlat
cltd
lcall
loopne
cmpsb
jo
mov
mov
and
fiaddl
xchg
xor
pop
addr16
call
in
sahf
sub
and
subb
push
jg
jb
out
xchg
xchg
pop
jns
in
xchg
mov
adc
inc
xor
insb
add
popf
inc
push
push
jae
popa
je
aas
cmp
je
scas
xorl
shlb
mov
xchg
mov
adc
fwait
or
add
mov
jnp
in
pushf
mov
and
popa
mov
push
xchg
idiv
dec
mov
adc
sysenter
xorl
sti
jno
or
pushf
popl
cld
or
push
push
es
shl
in
les
sub
je
xchg
sub
push
int3
cmp
sub
jp
sub
adc
adcl
pop
xlat
inc
cmp
mov
test
insl
call
shlb
sub
mov
mov
add
popa
gs
jb
cs
test
out
dec
lcall
add
mov
push
repnz
and
jmp
push
or
cmpsl
por
mov
mov
shrb
add
add
fmuls
mov
inc
aam
repnz
and
cmp
pop
sysexit
addr16
fs
jno
push
and
nop
jecxz
jae
push
pop
push
or
in
and
push
test
iret
push
ret
xchg
and
cltd
mov
xor
sbb
fnsave
mov
sbb
sbb
fcmovb
jge
mov
sbb
sbb
js
adc
in
scas
aaa
inc
out
adc
lcall
jp
pusha
rolb
lcall
cmp
pop
mov
out
xorb
incl
inc
push
sub
loopne
cltd
cli
cmpsb
data16
adc
sbb
inc
xchg
and
jmp
pop
jo
inc
aas
push
popf
orl
push
xchg
in
leave
stos
js
fldenv
inc
std
or
push
lcall
xor
inc
in
fsubrp
inc
aas
or
stos
in
or
sbbb
addb
sbb
adc
xor
jb
out
or
inc
sub
xor
out
femms
aam
lret
inc
loope
in
jns
loop
into
in
hlt
lcall
mov
call
fdivrs
and
cmp
sbb
fcomps
lock
in
jns
ja
add
dec
leave
push
das
push
add
bound
add
or
fsubrs
sub
mov
xlat
and
pushf
add
xchg
jae
scas
insl
cmp
ss
fcompl
es
push
lret
int3
jle
scas
or
push
loopne
arpl
add
mov
dec
sbb
shll
lret
inc
pop
push
add
mull
jmp
sub
xor
add
int
sub
hlt
and
xchg
sub
or
loopne
hlt
popf
mov
imul
add
lods
xchg
sti
add
jmp
xchg
xchg
xor
cmpsl
pop
mov
cltd
stos
adc
xor
mov
in
daa
test
xor
loope
adc
mov
xlat
dec
and
and
or
push
loop
lock
push
cmpsl
mov
mov
fnstcw
pop
or
int3
lret
ds
inc
xor
ljmp
xchg
mov
push
xchg
push
sbb
mov
adc
in
jle
push
popa
add
sbb
xchg
add
pop
adc
adc
xchg
scas
lods
add
push
cmpb
cmpsl
stos
les
pushf
jae
pop
sbb
scas
cltd
sub
push
es
ret
test
lret
or
mov
xchg
cltd
roll
adc
mov
stc
stc
pop
push
or
xor
sahf
cmp
mov
loop
add
andl
lcall
mov
adc
push
aad
imul
mov
cmp
mov
or
or
das
mov
stos
inc
cli
test
inc
xchg
insl
cwtl
pop
xchg
or
add
and
cmp
sub
adc
sbb
mov
aad
adc
xchg
sub
push
sbb
push
mov
repz
pop
shrl
mov
pop
insb
int3
mov
mov
cli
fiadds
dec
xor
int3
pop
ret
sub
mov
inc
lock
das
add
shrb
scas
addb
jne
inc
in
adc
mov
jg
jae
inc
and
xor
aad
add
pop
inc
sub
add
mov
sti
test
adc
jno
mov
adc
mov
and
out
std
mov
sub
pop
sbb
add
dec
call
mov
mov
cmc
or
add
std
imul
cmpsb
xor
fwait
clc
cs
or
push
clc
and
dec
mov
inc
push
sti
mov
push
test
inc
add
ss
aas
enter
or
jmp
sbb
loopne
push
sbbl
ljmp
aad
xor
inc
movl
cmpsl
nop
scas
pop
das
pop
cmpsb
jmp
adc
cmpb
pop
pusha
rolb
xor
test
push
pop
and
add
js
pop
cmpsl
ret
add
mov
mov
cmp
cmpsl
enter
pop
stos
lcall
insl
int
inc
or
fs
add
pop
jo
adc
dec
movsl
cs
cmp
enter
mov
mov
push
mov
clc
push
lds
in
mov
or
orb
push
movd
dec
test
inc
daa
lods
pushf
sbb
mov
xor
pop
popa
mov
add
xchg
icebp
addr16
rcr
add
xchg
xor
mov
fwait
xor
push
mov
sub
loopne
add
shlb
mov
or
mov
xchg
push
test
cli
int
cmp
mov
jne
gs
push
or
rorb
xchg
test
arpl
stos
inc
lock
lods
cltd
js
add
fstpl
or
cmp
lcall
push
into
out
xchg
inc
inc
popa
jo
mov
loop
shrl
mov
in
cmp
adc
stos
fcom
dec
insb
ds
mov
xchg
sti
ds
addr16
mov
or
add
jle
test
rclb
les
and
mov
movsb
cmpsb
pop
loop
imul
adc
sbb
aaa
xchg
mov
push
inc
sbb
or
lods
ja
pop
jp
bound
pushl
fisubrs
sbb
adc
incb
testl
jo
adc
insl
mov
add
cmp
adc
les
add
jle
imul
cwtl
ret
jmp
mov
out
pop
ja
shlb
mov
push
sti
pop
neg
adc
aaa
add
jnp
cmovp
ret
repz
pop
push
cmpb
cmp
ret
fs
int3
add
ret
inc
mov
mov
cld
inc
faddl
mov
in
sub
mov
testb
mul
push
sub
pop
xor
cmp
mov
incl
rcrl
sbb
push
pop
popf
cmc
push
enter
rcl
rcrl
inc
adc
js
add
pop
pop
lahf
mov
ret
out
cmp
jnp
xor
jne
cltd
push
rorl
push
scas
andb
push
add
push
xchg
mov
call
jb
adc
nop
mov
iret
les
bound
jb
sub
ret
addb
sub
mov
jne
mov
lea
sbb
sbb
sub
cmpsb
out
or
push
xorb
add
push
and
stos
jo
push
jo
cmp
cmp
mov
cwtl
inc
sbb
lock
adc
xorl
je
imul
xor
stos
fwait
sbb
or
xchg
mov
sub
in
fdivrl
xchg
and
push
cmpsb
dec
mov
cmp
out
inc
add
add
adc
mov
adc
out
jp
pop
loopne
inc
lods
sub
sbb
xchg
enter
push
adcb
imul
and
pop
jl
xchg
ret
and
mov
xchg
mov
or
add
push
scas
sub
mov
add
add
ret
lret
push
push
pushf
lods
lds
stc
out
fldcw
mov
or
or
sbb
mov
fwait
push
std
push
ja
jecxz
mov
push
loop
int
into
mov
imul
rolb
scas
js
addr16
roll
pop
jo
inc
pop
mov
test
mov
or
or
push
pushf
jmp
loopne
cmp
cmp
out
dec
call
mov
scas
nop
cmp
push
cltd
mov
add
mov
pop
in
push
lcall
test
push
out
wrmsr
push
lea
fwait
bound
addr16
push
es
inc
xchg
in
out
into
inc
push
pop
call
or
mov
jp
mov
or
cmp
jb
mov
shrl
jo
or
push
cmp
or
xchg
clc
jbe
or
mov
mov
xchg
add
scas
imul
xchg
dec
rol
out
xor
test
and
add
push
mov
mov
aas
or
xchg
enter
rcll
inc
mov
push
dec
nop
subl
add
pop
xor
imul
xchg
jp
enter
adc
push
mov
inc
int3
jbe
push
mov
inc
adc
push
add
inc
jae
sub
fisttpl
or
push
xchg
mov
and
mov
sbb
roll
sbb
shrb
fldlg2
popf
icebp
add
xchg
xchg
push
arpl
sub
adc
insl
int3
stos
jae
sbb
in
sbb
and
lahf
or
insl
icebp
sbb
sahf
fidivl
fs
push
mov
mov
adc
mov
loop
inc
div
enter
stos
xor
add
or
jg
xchg
add
insb
or
xor
add
sarb
fs
push
mov
xchg
pop
popa
mov
mov
xor
sti
and
xor
sbb
js
push
xor
or
xor
jl
or
stos
pusha
lret
out
mov
xor
enter
pop
lock
push
adc
mov
dec
lcall
in
sbb
inc
adc
orl
rolb
or
jb
xor
lahf
and
sub
aam
adc
sbb
data16
in
cmpsb
es
insb
das
stc
sub
lret
sub
loopne
push
push
mov
enter
pusha
addr16
les
xor
and
lcall
sub
add
add
xorb
pop
sub
icebp
sub
cs
jge
in
or
or
or
andb
mov
lods
mov
sbbl
push
jecxz
outsb
fists
cmp
sbb
inc
or
adc
pop
push
mov
xchg
sub
mov
add
pop
lds
and
gs
test
jno
xor
push
add
test
inc
lahf
add
pushf
fsubl
out
jle
mov
push
sbb
add
push
push
and
xchg
std
mov
in
pop
imul
data16
add
hlt
iret
inc
in
push
adc
in
jge
mov
or
push
push
out
jecxz
imul
add
aam
loopne
sub
cs
xor
in
mov
jo
sbb
cmp
push
aaa
fcomps
push
add
js
bound
cmc
add
xchg
xlat
push
sbb
pushf
lahf
loop
aaa
jo
lods
push
enter
inc
das
add
lret
pop
scas
mov
or
rorb
loop
mov
adcb
lret
fs
xor
fs
mov
or
add
pop
psubusw
xor
pop
cmp
fbld
sub
inc
mov
fs
pop
cmc
push
add
push
ret
or
cmc
cmpsb
loope
adc
dec
test
jb
lock
push
push
test
add
sbb
push
add
std
lcall
cmp
cltd
cmp
cmpl
or
inc
mov
rolb
sub
imul
lret
popf
pop
lret
pop
pushf
int
xlat
push
in
cmp
aam
xchg
add
pop
test
push
adc
push
xchg
push
adc
push
call
jmp
stc
and
repnz
adc
mov
popf
push
inc
rolb
arpl
mov
xchg
or
test
or
ret
js
jg
push
mov
fs
pop
mov
and
pusha
sub
pop
mov
leave
xorl
push
jge
loop
cs
push
mov
scas
shll
mov
loopne
add
out
pop
xor
xor
mov
rolb
enter
xchg
mov
inc
xor
icebp
fs
sub
ret
inc
mov
subb
mov
addl
push
aas
xor
xor
add
pop
xchg
jns
push
sbb
pop
daa
mov
xor
sbb
mov
jp
and
nop
test
es
xchg
hlt
je
movsb
stos
cmp
daa
stc
daa
xor
sbb
movsl
sub
sub
push
movsb
pushf
mov
lcall
push
mov
add
push
inc
xor
jae
dec
mov
ret
jo
pop
pop
mov
ret
addb
pop
push
sbb
mov
push
arpl
aam
ret
adc
rclb
pushf
mov
out
pop
les
hlt
cmpsl
sub
mov
jns
push
inc
cs
ja
jns
sbbl
dec
stos
fwait
adc
push
dec
jecxz
xchg
add
push
dec
loopne
pop
pusha
xor
add
pop
adc
test
sti
push
fs
dec
xchg
test
jns
mov
mov
fwait
xchg
cmc
out
lcall
iret
pop
add
sbb
add
fsubrs
ret
inc
xlat
shlb
roll
and
repnz
xchg
or
add
xchg
cmp
jnp
xchg
add
xchg
push
sbb
push
xchg
sub
popa
xor
dec
in
push
or
filds
cmp
cmp
mov
jnp
push
sbb
pusha
mov
or
scas
sub
bound
daa
push
mov
or
aam
rolb
pop
loope
in
cmp
xor
and
xchg
lret
jmp
mov
adcb
lock
ret
je
sar
std
sub
cs
jns
xchg
pusha
sub
hlt
stos
push
adc
push
jb
adc
inc
cs
hlt
les
jnp
xchg
in
in
adc
stos
pop
mov
xor
pusha
loop
jae
int
flds
scas
push
jnp
pop
nop
adc
add
subl
jae
inc
push
stos
sbb
es
sbb
cmp
or
test
add
and
jecxz
imul
sub
pop
loop
sub
in
leave
adc
cmpsb
or
cmp
in
lods
push
xchg
ret
mov
mov
mov
jecxz
mov
adc
push
cmpb
aaa
aaa
andb
leave
jae
xchg
decb
inc
or
lret
adc
fisttps
inc
jno
dec
and
pop
cld
push
je
sahf
sub
push
ret
mov
sub
xor
sbb
mov
ret
xor
xlat
sbbb
pop
jmp
sbb
aad
fwait
fwait
xlat
aam
mov
adc
and
pop
cmp
sbb
test
in
repz
add
jo
push
mov
aaa
push
mov
imul
cmp
stc
push
in
lock
dec
cli
xchg
pop
lahf
adc
pop
push
dec
pop
lock
lahf
loope
ret
push
std
lods
pop
std
or
cs
shlb
stc
xchg
inc
scas
mov
jo
mov
add
loopne
jo
push
jnp
fdivs
in
fs
push
add
enter
sar
pop
pop
fsubs
inc
cwtl
inc
rolb
xchg
ret
xchg
mov
lcall
imul
push
inc
int3
xor
rorb
dec
cs
in
xchg
pop
repnz
dec
lods
adc
pop
gs
mov
push
xor
nop
sbb
push
iret
push
mov
xor
push
push
notl
add
imul
test
inc
sahf
outsl
nop
sub
push
jo
or
xor
dec
sub
pop
pop
adc
lret
roll
rorl
fidivl
fs
ss
rolb
rolb
std
mov
std
out
cli
xlat
rorb
dec
dec
xor
xor
inc
dec
je
fwait
in
lock
xor
clc
adc
test
add
insl
aad
es
sarl
push
andb
shrl
fimuls
push
mov
mov
lcall
inc
push
scas
cmp
data16
xor
stc
frstor
xor
insb
enter
inc
pop
pop
or
cmp
add
ljmp
pop
mov
push
cmpsl
lcall
inc
sbb
add
jmp
add
adc
data16
sub
add
cmpsb
fmul
loope
sti
xor
push
xchg
loopne
pop
repz
addb
mov
hlt
cmp
jo
jo
mov
and
cmp
test
dec
dec
dec
jg
pusha
js
mov
and
add
in
dec
jecxz
mov
testb
mov
push
rcrb
mov
loope
test
mov
add
rcl
jl
sbb
mov
add
jo
or
jg
push
or
cltd
out
aaa
xchg
lret
test
lods
ret
pushf
mov
xorb
adc
and
jns
imul
mov
cmpsb
into
adc
inc
fwait
adc
inc
xor
push
arpl
pop
aad
arpl
es
push
jae
add
movsb
or
jb
xchg
inc
sub
mov
mov
push
out
add
shll
jno
fldcw
sbb
mov
or
mov
add
test
pushf
xorl
add
add
ljmp
clc
int3
push
or
inc
outsl
cmp
sub
and
mov
rolb
leave
addr16
dec
or
stos
fmul
xor
add
enter
loope
es
xchg
aas
dec
and
xchg
test
daa
pop
mov
push
fs
jo
in
sub
cmpsl
sub
out
test
pop
add
rorl
add
out
jge
aam
stc
push
push
fiaddl
inc
push
cmp
mov
cwtl
xchg
xor
cmp
jge
xor
xchg
add
int
sub
aam
mov
dec
jno
enter
and
nop
push
add
mov
addr16
xchg
ret
popa
leave
or
loop
rcll
adc
cmp
xorb
pop
xchg
push
call
nop
repz
inc
cmp
inc
pop
jae
sub
loope
fidivl
int
pop
loopne
in
xchg
ret
inc
dec
inc
scas
sbb
insl
call
pop
in
lods
rolb
sbb
pop
mov
test
pop
lock
dec
xchg
push
insb
addl
push
add
call
cmp
scas
cltd
imul
xchg
pushf
mov
mov
fwait
aaa
sbb
imul
pop
jge
loop
push
mov
insb
cmp
stc
mov
mov
mov
test
xlat
push
pop
pop
jbe
push
jp
pop
add
add
adc
and
mov
scas
cmp
add
out
cmp
add
ja
mov
or
scas
ds
lret
lock
ja
fldcw
cmp
into
mov
sub
addl
outsl
jae
add
mov
fwait
sbb
adc
sbb
sub
inc
sub
push
adc
call
mov
leave
les
pop
add
mov
jb
mov
push
mov
outsl
jecxz
sbb
rcl
cwtl
icebp
addl
push
mov
sub
jle
add
mov
fldl
push
inc
cwtl
sub
inc
cs
jp
mov
rorl
nop
push
inc
loopne
dec
dec
rolb
mov
dec
es
and
or
adc
inc
subb
inc
add
mov
push
pop
jo
or
mov
pop
push
aad
lret
mov
lret
push
popa
test
sbb
pop
inc
mov
inc
adc
ficoms
push
pop
push
and
sub
jnp
imul
mov
cmp
icebp
jb
mov
gs
xchg
call
jae
mov
ds
movb
shlb
hlt
mov
addl
shlb
outsb
loop
lret
mov
pop
test
pop
pusha
test
push
test
push
inc
jno
pandn
test
dec
sbb
adcl
mov
add
or
push
adc
out
mov
jbe
test
loopne
aam
cmp
sti
stc
add
and
push
in
push
xor
mov
inc
subl
movsl
mov
pushf
add
out
push
fcmove
je
movsl
cmp
cltd
adc
arpl
outsl
stos
mov
fstpt
inc
lock
mov
leave
sub
push
sbb
in
mov
push
push
sbb
cmpsl
push
mov
sarb
jb
push
cmp
pushf
mov
inc
cmp
ret
fbld
es
and
dec
xchg
dec
mov
shrl
ljmp
push
xor
xchg
mov
dec
jg
rclb
or
xchg
inc
cmp
popa
test
mov
inc
ret
push
inc
push
idiv
xchg
xchg
and
inc
sbb
cmp
xor
jge
xchg
push
pop
xchg
xor
pushf
dec
cmp
jle
jne
int
mov
push
inc
xor
jb
mov
loope
mov
xchg
loope
mov
sbb
scas
sbb
jns
inc
mov
dec
push
mov
loopne
in
cli
or
bound
ret
cmp
dec
add
pop
jp
loop
or
int
inc
cmp
ljmp
adc
out
sbb
push
lods
fmull
xchg
sub
into
bound
mov
adc
push
test
push
sbb
add
inc
fstps
jb
data16
pop
test
xor
mov
fldenv
pop
or
or
into
rcl
or
mov
inc
jnp
stos
pop
cmp
cmp
push
jmp
xor
lcall
es
add
push
cmpsb
fbstp
mov
cmp
shll
mov
ret
dec
mov
es
xor
sbb
or
lea
mov
cmp
aaa
lcall
pop
lds
or
xor
adcb
leave
inc
jae
fdivr
rcrl
or
or
jne
sbb
lock
xchg
jecxz
lds
inc
rclb
dec
mov
pusha
fistl
push
in
rcl
jmp
sbb
orb
push
lahf
mov
pushf
cmp
hlt
movsl
mov
mov
bound
cmp
xchg
xor
movsl
icebp
test
sbb
xchg
cmp
popa
jo
or
lods
repz
ret
cmp
inc
jb
jo
lcall
mov
mov
or
mov
xchg
out
mov
inc
imul
jnp
jbe
xor
das
push
jmp
push
ror
adc
add
pop
jo
sbb
repz
xchg
xor
in
sbb
cmp
mov
mov
xor
mov
pop
push
mov
push
stos
adc
pop
jne
popa
or
les
stos
cltd
jg
cli
rclb
mov
sbb
mov
jae
mov
push
jmp
xor
ret
jnp
sub
loope
ret
cmpsl
mov
inc
lahf
leave
dec
test
mov
sub
in
inc
out
push
xchg
call
adc
inc
jo
jo
add
lcall
xor
inc
cwtl
and
or
sbb
sub
and
in
mov
outsl
nop
enter
cmp
nop
jae
xor
clc
clc
outsl
cmp
stos
aaa
or
lods
test
cmp
rorb
sub
add
lahf
mov
out
cmp
jcxz
out
xchg
push
faddl
sbb
es
xlat
xchg
and
cld
or
outsl
hlt
xlat
cli
lcall
loope
addr16
repnz
cmpsb
push
loopne
loop
jne
mov
pop
cs
add
int
sbb
or
call
push
xor
adc
mov
stc
adc
repz
xchg
jae
dec
loopne
jmp
pop
sub
sbb
ljmp
gs
push
pop
and
cmp
or
pop
pop
sub
aad
mov
xchg
jp
jae
rolb
mov
cltd
inc
pop
cmp
push
mov
add
pushf
cmp
add
cmp
mov
sbb
xlat
fmull
leave
mov
ret
adc
roll
mov
in
ss
adc
ret
push
jae
jne
fdivl
test
call
inc
sbb
sbb
dec
inc
aad
mov
mov
inc
cmp
inc
imul
push
nop
sub
push
shll
dec
push
out
mov
lock
or
mov
shr
jp
mov
scas
lcall
add
xor
stos
data16
das
sbb
lret
inc
xchg
pop
pop
in
jo
or
sub
add
add
cmp
adc
test
stos
mov
xchg
loopne
out
loope
cmp
sbb
push
inc
addb
stc
or
clc
mov
cmp
jbe
push
or
sub
mov
add
sub
mov
jecxz
sbb
add
inc
mov
sub
clc
inc
jl
push
cli
loop
or
and
or
lret
mov
sti
adc
cwtl
cmp
push
hlt
and
jne
add
pop
mov
lods
xchg
cmp
int
or
dec
inc
sub
mov
xlat
dec
sub
pushl
push
cmp
xor
cmp
fxch
aam
or
lock
test
int3
nop
add
mov
jo
cli
sbbl
shrb
cmpsl
ds
cwtl
add
and
mov
mov
loop
push
lret
push
jb
or
inc
inc
sub
decb
inc
in
add
into
loope
dec
push
fisttpl
jb
add
and
cmpsb
xchg
in
je
test
add
icebp
enter
fwait
orb
dec
rorl
xchg
push
lahf
push
or
lods
dec
ja
out
add
js
rorb
xor
mov
xchg
push
cmp
push
cmpsl
mov
clc
sub
cmp
call
clc
ljmp
gs
dec
out
adc
scas
stos
sub
aas
jge
sbb
ss
push
das
addb
scas
ret
inc
fs
aad
lret
pop
pop
mov
stc
mov
mov
and
enter
push
sbb
out
xor
push
and
mov
cltd
xor
test
push
fs
mov
jl
daa
jb
int
xor
andb
push
gs
adc
xchg
sub
mov
jecxz
push
leave
cmp
sbb
arpl
in
add
repnz
inc
rcrb
bound
dec
add
cltd
mov
sbb
push
xor
loop
push
and
fisubrl
xlat
faddl
leave
rcr
mov
and
mov
lods
dec
dec
pop
and
mov
stos
adc
cmp
test
adc
lds
insl
sub
ja
adc
mov
in
pop
lods
sub
es
jo
in
cmc
inc
rorl
pop
ds
lret
js
iret
test
clc
jne
cmp
add
cmp
and
mov
imul
pop
xor
popf
and
sbb
sbb
xor
adc
stos
int
subb
pop
cwtl
push
shll
inc
or
cwtl
or
xor
pop
cs
int
mov
xchg
leave
inc
lcall
pop
inc
mov
ret
add
mov
mov
lcall
js
add
test
and
out
iret
cmpsl
repz
xor
dec
out
dec
popa
and
shll
xchg
xor
adc
and
push
enter
add
jnp
lret
xchg
pop
pop
cmp
addr16
loop
pop
stc
sbb
inc
mov
sub
add
push
jo
push
adc
rcrb
test
xor
jo
pop
call
ja
stos
mov
mov
pop
push
rolb
push
ss
inc
test
scas
or
mov
dec
addr16
adc
out
xor
jl
cmp
mov
xchg
adc
push
push
push
sbb
adc
xor
or
cmp
pop
add
sub
add
int
rorl
inc
popf
ret
sbb
dec
in
sbb
loop
cmp
xchg
push
add
adc
xlat
cltd
sbb
pop
sub
or
mov
mov
push
dec
fcmovb
sbb
jmp
subb
data16
push
push
loop
add
xor
call
xor
mov
adc
mov
pop
cltd
dec
xor
test
mov
jae
or
inc
imull
jb
in
ret
jmp
adc
loope
adc
in
xor
and
sbb
loopne
push
cld
ror
push
xor
rolb
push
adc
or
call
xchg
add
sub
xchg
ret
adc
imul
inc
loopne,pn
mov
mov
xchg
test
stc
test
jb
clc
adc
add
or
test
and
nop
leave
add
mov
enter
cmp
and
push
insl
push
and
cmpsb
data16
ljmp
mov
cltd
enter
loope
add
inc
rcrb
fs
xchg
loop
mov
aaa
inc
lret
mov
sub
lods
test
ds
enter
mov
aad
add
sbb
and
cmp
push
call
inc
insb
es
xor
ljmp
push
inc
dec
adc
sbb
mov
mov
cmp
add
hlt
test
inc
fadd
lahf
cmc
mov
out
dec
sbb
push
stos
ljmp
neg
add
sub
enter
pop
sarb
sarl
mov
jg
add
push
test
push
mov
test
pop
nop
cs
inc
lea
les
inc
dec
pop
mov
outsb
icebp
jb
std
mov
dec
sbb
clc
aas
mov
outsl
jne
fdivrl
dec
fists
jb
add
pop
dec
or
rorl
add
xor
jb
cmpsb
subb
push
pop
cltd
dec
or
xor
jo
sbb
sbb
sub
scas
test
fcoml
add
nop
mov
add
sbb
adc
or
loope
lea
sbb
adc
shlb
mov
push
or
sub
les
jmp
or
mov
adc
sub
push
inc
mov
or
test
hlt
ja
add
jecxz
inc
push
and
in
mov
lret
xor
push
push
pop
sub
sarb
pushf
adc
int
into
inc
sub
cmp
push
insl
jns
and
icebp
lock
push
jae
pushf
mov
cmp
xor
sub
mov
fsubrl
loop
cmpsl
pusha
and
push
shll
rclb
sub
divb
es
mov
sbb
sbb
call
adc
sbb
xor
inc
push
add
pop
sbb
insl
push
data16
test
insl
ss
xchg
mov
outsb
push
push
mov
scas
adc
inc
and
stos
adc
out
sub
stos
outsl
jb
loop
in
aad
xor
aam
stos
inc
lcall
movl
push
es
loopne
xor
mov
mov
cld
cmc
loope
sbb
add
xor
in
and
ret
inc
es
mov
jne
xor
mov
outsb
or
lds
pop
movsb
cmpsl
stc
lcall
pusha
sti
jnp
decb
repnz
sub
adc
scas
gs
fcmovu
icebp
add
jno
jb
xchg
repz
into
inc
rclb
jecxz
pusha
sub
out
push
xchg
add
cmp
inc
mov
ficompl
sbb
inc
sub
mov
sub
add
aaa
into
addb
cmp
and
xchg
add
imul
cmp
dec
or
test
sbb
push
loope
cmpsl
and
setne
push
test
xor
pop
mov
and
mov
xchg
cmpsl
loop
jmp
xor
rcll
add
sbb
cwtl
fbstp
out
dec
cmc
or
push
xchg
mov
loope
pop
divl
or
sub
movsl
mov
push
sbb
pop
aaa
xchg
jle
ds
adc
and
xchg
and
xchg
adcl
sub
cmp
pop
adc
cmp
inc
pusha
push
mov
adc
mov
in
push
lcall
add
add
std
jmp
inc
mov
xchg
mov
ret
popa
or
inc
pusha
js
lcall
cmp
fisubl
insl
int
adc
and
add
adc
mov
rolb
jae
mov
shrb
xchg
xchg
and
push
adc
out
push
dec
scas
push
jae
loopne
xorl
inc
adc
shlb
xor
ljmp
add
xor
hlt
or
and
xchg
fimuls
and
addr16
add
call
loop
push
xor
sbb
jb
addl
dec
icebp
out
aam
jbe
mov
fildll
aas
in
fstpl
lock
sub
mov
mov
rcll
arpl
or
bound
inc
sub
shlb
cmc
lcall
add
lock
and
xchg
push
aam
mov
sub
jae
or
pusha
ds
in
mov
loop
mov
ret
dec
sub
pop
sbb
adc
gs
jp
push
fsubs
xor
in
sbb
mov
data16
cmp
mov
push
gs
mov
add
push
lret
jle
push
xor
adc
out
or
inc
out
adc
or
stos
mov
inc
push
push
loopne
mov
test
dec
push
mov
addb
inc
daa
mov
inc
mov
xrelease
adc
adc
rolb
add
xorl
add
add
arpl
sbb
popf
mov
in
sbb
mov
or
push
xchg
push
fiaddl
mov
cmc
loope
or
aas
jo
or
rcrl
pop
stos
fst
add
cmpsl
cmp
push
ficoms
inc
xor
lods
or
sbb
sub
adc
loop
enter
pop
mov
out
push
imul
jg
dec
shrl
inc
es
pop
push
cmp
imul
out
xchg
popa
xor
imul
mov
mov
flds
xor
and
pop
mov
cwtl
dec
or
inc
rclb
inc
rcrl
mov
jle
pusha
mov
nop
popa
push
inc
pop
scas
xor
sbb
sbb
lret
sbb
pop
cs
sarl
pop
es
pop
jne
xor
out
pop
scas
ljmp
jae
aad
std
stos
push
xchg
dec
or
mov
xchg
into
rorl
scas
push
adc
loope
xor
imul
cmp
add
mov
sbb
stos
mov
inc
dec
lds
out
cmp
jo
popf
imul
adc
mov
push
mov
add
lods
mov
mov
add
adc
or
pop
daa
sbb
outsb
push
sub
scas
jecxz
stos
adc
mov
sbb
add
ljmp
sbb
xor
jmp
scas
addb
add
jmp
inc
sub
push
int
imul
push
and
add
xchg
inc
sub
inc
subl
test
aad
out
mov
cmp
in
sub
aam
jbe
xchg
orl
xchg
nop
imul
ds
push
add
lahf
sbb
mov
incl
scas
data16
mov
pop
out
or
push
push
sbb
push
iret
pop
sub
rcrl
rolb
add
and
and
decl
in
nop
fidivrl
xor
push
mov
mov
lods
push
mov
imull
imul
scas
data16
mov
pop
cmpsl
out
or
inc
or
cmp
jb
inc
es
fwait
xchg
sub
jae
xor
enter
pop
int
cmp
add
ror
pusha
xor
leave
adc
push
sub
pop
xchg
cmp
dec
pusha
sub
stos
xor
sbb
shll
lds
imul
aam
enter
shl
mov
cmp
xor
mov
cmpsl
push
mov
cwtl
sbb
rcrl
inc
push
sbbl
cli
loopne
mov
push
mov
sarb
cltd
xor
fidivs
ljmpw
add
add
das
push
jae
push
adc
daa
push
in
stos
xor
out
xchg
adc
loopne
mov
cltd
mov
or
ja
fwait
outsb
push
cltd
jo
or
jo
pop
leave
icebp
pusha
xchg
pop
xchg
rcrb
jo
adc
mov
iret
ret
xor
mov
jmp
in
add
jbe
xor
lock
push
and
dec
outsb
adc
pop
test
mov
shll
call
gs
out
je
pop
in
cld
pusha
test
stos
fisubrl
sbbb
sub
inc
gs
test
stos
lret
repz
loope
int3
and
data16
push
mov
or
or
and
jecxz
push
pop
cmpsl
adc
dec
mov
add
pop
ljmp
add
mov
inc
out
xorb
adc
cmp
test
push
mov
ret
mov
lret
jae
push
cltd
out
push
ss
gs
pop
cmp
or
cmp
push
xchg
test
xchg
xchg
add
cwtl
ret
test
mov
or
inc
xchg
or
lcall
add
xor
and
popa
add
imul
mov
pop
mov
cwtl
dec
loopne
push
jne
mov
lea
xchg
das
fidivrs
sbb
add
cltd
stos
pop
fimuls
cmc
pop
inc
jo
jo
sbb
jo
jb
pop
imul
pop
xor
test
and
dec
scas
data16
pop
or
cmp
fnstsw
adc
add
lret
clc
cmp
inc
pop
nop
push
jae
ret
xchg
xchg
scas
inc
cmpsb
rolb
push
imul
push
sbb
subl
test
adc
and
addr16
pop
outsb
orl
or
imul
inc
scas
cmp
push
loop
xchg
leave
and
gs
loope
adc
cmp
pushf
mov
or
faddp
lret
jo
ret
mov
sbb
add
shl
orb
push
repz
pop
movsb
adc
mov
int
xor
cmpsb
or
shl
or
lods
mov
inc
lcall
popf
sub
xchg
sbb
loopne
orb
xor
mov
mov
sbb
inc
je
cmp
lret
ret
cmp
jle
pop
imul
sub
cmpsb
pop
pop
pop
sbb
or
jno
xor
push
push
jae
push
mov
stos
xor
jae
inc
popf
bound
mov
movsl
pop
aad
xchg
leave
adc
sub
shlb
not
sbb
and
lcall
mov
jo
lcall
xchg
xor
mov
xlat
int
popa
or
dec
mov
push
jg
fisubl
inc
cmp
shrl
test
pop
cwtl
push
pusha
xchg
loopne
xor
pusha
sub
into
sti
push
and
pusha
jb
mov
xor
add
in
mov
loopne
push
scas
repz
xchg
or
in
xor
and
xor
lods
xchg
push
sbb
test
pushf
cmp
jp
roll
and
and
mov
out
sub
in
inc
addb
pop
sti
test
push
add
push
ljmp
outsb
jae
jl
rcl
mov
loope
fisubrl
into
xchg
stos
push
pop
decl
scas
rcll
push
xchg
add
lret
bound
out
inc
rcrb
in
or
sbb
or
xor
popa
ret
push
or
loope
cmp
fdivs
mov
pop
mov
jno
pop
push
or
jb
cmpsb
out
shl
incb
outsl
sbb
or
inc
sub
mov
int
gs
xor
push
cmpsb
lret
mov
shlb
in
cmc
xlat
push
imul
add
jo
loope
popf
add
rclb
fldt
rclb
cmp
pop
xor
stc
fwait
arpl
sbb
sbb
stc
xchg
cmp
add
aas
movsb
pop
sbb
insb
loopne
out
mov
or
cwtl
jo
fnclex
cmp
out
outsl
mov
test
mov
or
xchg
rclb
jb
jb
pop
movsl
lods
mov
push
out
int
jae
push
orl
pushf
jb
mov
xchg
push
xor
xlat
sbb
sbb
test
or
jb
mov
call
sbbb
in
and
inc
cmc
in
loopne
dec
sub
mov
mov
mov
adc
mov
fsubs
xor
ds
test
pusha
enter
add
in
cmp
popl
mov
aam
aam
adc
mov
rcl
fwait
cmp
cmpsl
es
cs
test
mov
pop
xor
nopl
push
pop
mov
inc
sbb
mov
daa
inc
sbb
adc
inc
or
pop
cmp
ljmp
cmpsb
xchg
cli
sahf
imul
inc
sbb
test
or
push
add
push
gs
and
push
jae
sbb
pop
je
enter
dec
mov
adc
pop
popf
mov
push
clc
repz
popf
pop
push
inc
sti
mov
inc
xchg
aaa
cmp
adc
ja
sbb
or
adc
pop
inc
jo
sbb
lahf
sub
cwtl
xor
sbb
mov
lods
loop
fwait
xor
dec
pushf
call
and
sahf
out
add
ljmp
ljmp
cmp
lcall
int
pop
cwtl
jg
popf
rclb
or
aam
loop
addr16
xor
mov
es
jae
out
shlb
inc
inc
rorl
fdivrs
loopne
in
je
std
addr16
xor
rorl
pushf
mov
data16
in
call
push
jo
sbb
add
add
das
cmp
test
rclb
invd
iret
data16
sub
push
or
imul
mov
jl
xchg
cmp
adc
sbb
mov
lds
add
fstps
iret
and
or
sahf
jg
add
adc
sub
clc
jbe
cld
sub
pop
mov
dec
pop
loopne
sti
ret
jns
jge
jle
shrl
add
lret
sub
rolb
popa
subl
sbb
adc
sub
push
int
sti
adc
mov
inc
pop
push
xor
call
cli
jno
or
xchg
subl
aad
subl
sbb
pusha
jp
in
mov
mov
ljmp
or
es
gs
daa
fiaddl
cmp
pop
add
adc
jo
lock
sbb
or
mov
adc
sub
inc
popa
mov
push
sub
cmpsb
loope
shlb
js
loope
in
lret
mov
adc
testb
sysret
or
jo
xchg
sarb
cmp
js
stos
cltd
pop
loopne
insb
out
inc
jo
add
lret
or
jl
pop
push
push
test
pop
or
loope
les
mov
add
js
xlat
sub
mov
dec
sbb
cmp
push
xchg
xchg
or
outsb
dec
aad
xlat
addr16
lock
bound
dec
scas
imul
dec
mov
mov
bound
loopne
sbb
inc
sub
lcall
inc
jae
and
nop
xor
test
call
push
sbb
test
jns
std
adc
fcomps
subl
push
lock
ret
adc
xchg
fwait
les
jmp
mov
test
loope
fwait
dec
jg
xor
aas
lock
dec
inc
add
sbb
sub
mov
fstpl
jmp
pop
xor
pop
push
mov
dec
sub
sahf
je
out
mov
sbb
pusha
bound
inc
aad
pop
clc
lret
adc
xchg
mov
shl
outsl
ret
push
dec
adc
loope
leave
scas
lods
cld
lock
push
mov
mov
sub
xor
push
rclb
xor
fistl
add
dec
iret
in
push
xchg
add
add
and
sub
mov
shl
pusha
xchg
in
add
cmp
in
sbbb
rcrl
jmp
or
mov
fs
or
sbb
rcll
dec
add
inc
and
jmp
push
call
cwtl
push
xor
cmp
imul
in
xchg
addl
sub
jnp
push
mov
mov
sub
xchg
loop
push
into
push
inc
mov
jo
test
lea
pop
movsb
sbbb
push
stos
xor
js
cwtl
int3
decl
rcrl
mov
subl
in
cmp
popa
push
arpl
roll
mov
rclw
cmp
push
push
xor
test
xor
imul
or
in
lcall
scas
pop
insb
ret
xchg
lahf
and
sub
or
std
loope
mov
mov
xor
cs
adc
leave
aad
pop
ja
mov
xchg
push
leave
stc
push
scas
jmp
jb
stos
test
dec
jno
jmp
das
add
fbstp
insb
outsl
cmp
cmpsl
and
mov
and
dec
aad
mov
or
jo
add
jne
aam
lock
or
push
cli
pop
adc
jb
lahf
sbb
dec
cmp
push
xlat
push
insl
out
xor
xor
inc
ficoml
sub
fs
inc
fisttps
push
jo
out
out
sbb
enter
dec
adc
pop
or
mov
loope
adc
stos
cs
mov
or
or
inc
cmp
push
stos
dec
call
imul
dec
outsb
in
cmp
subl
mov
adc
mov
in
fstps
pusha
jo
lods
fwait
dec
faddl
cmp
cmp
fsubl
and
or
addr16
cmpl
inc
in
cmp
fmuls
stos
rclb
shll
iret
xor
mov
scas
mov
mov
out
push
cmovne
cmp
or
insl
test
sub
xor
stos
cmpb
push
pop
jo
or
adc
cmp
stc
sbb
inc
aad
pop
ljmp
dec
rclb
mov
xchg
or
jp
int3
push
sahf
pop
test
or
inc
xor
xlat
lcall
decl
pop
xor
jno
sbb
xlat
mov
filds
cli
inc
cld
adc
add
dec
pop
adc
xor
insl
mov
mov
subl
inc
adc
or
int
push
data16
ret
or
and
cwtl
sub
add
xchg
out
pop
jno
imul
lea
xchg
testb
xchg
mov
add
ret
jmp
jp
inc
mov
mov
fwait
pushf
push
add
inc
pop
sbb
cmpsb
lret
fstpl
jns
test
mov
loop
adc
push
scas
faddl
bound
subl
mov
or
xor
add
mov
dec
hlt
loope
xchg
aaa
dec
pop
mov
out
jmp
daa
pop
cmp
add
xchg
dec
enter
sar
mov
push
popl
sub
add
inc
or
push
or
cwtl
lret
or
loope
push
jae
pop
movsb
je
pop
xor
adc
inc
pusha
dec
or
lret
rolb
addl
jo
inc
cli
leave
shrl
adcb
lds
cmp
loope
sahf
hlt
lods
jb
stos
pop
push
jge
push
pop
adc
out
add
inc
test
sub
in
test
pop
test
rclb
popa
movsb
jge
fcmovnb
lret
rolb
popf
jnp
jb
rcll
loop
mov
es
mov
outsl
jb
push
mov
xor
insb
inc
fs
mov
inc
scas
mov
and
sub
xlat
int3
lahf
mov
xchg
push
in
repz
mov
adc
and
pop
jae
mov
imul
arpl
cs
inc
aam
mov
pop
inc
cmpsb
or
push
loopne
cmpsl
out
xchg
cmp
cmp
stos
iret
jae
insl
es
cmp
dec
mov
adc
push
inc
adc
push
add
in
sub
push
xrelease
sbbb
dec
dec
pop
inc
mov
mov
aaa
iret
inc
les
push
add
jge
adc
push
shlb
dec
fs
gs
shl
jmp
push
xlat
arpl
push
pop
and
xor
jg
inc
push
xchg
lods
cmp
jo
pop
aad
rcl
jmp
sub
leave
add
nop
and
mov
lods
add
insb
int3
dec
into
rcrl
test
pushf
and
aas
lahf
xchg
push
jb
pop
push
xor
xor
test
test
and
in
jp,pt
orb
mov
push
xlat
add
sub
call
bound
sub
aam
and
std
test
loopne
je
push
and
dec
sub
insl
mov
fnstenv
pop
popa
cmp
push
sbb
insb
adc
aaa
xor
sbb
sub
jle
dec
add
mov
pop
jne
clc
ret
test
xchg
add
dec
roll
lods
stos
xchg
pop
filds
lret
dec
sub
mov
je
pop
xchg
sbb
inc
int
enter
andnps
mov
das
add
dec
add
sub
sahf
xor
sbb
mov
pop
loopne
xorl
mov
ja
addl
adc
push
dec
mov
sub
sbb
aad
add
jnp
fidivrs
repz
xor
adc
dec
sbbl
sbb
cs
fchs
add
push
dec
test
bnd
dec
add
dec
rolb
std
into
lret
testl
dec
aad
mov
xorl
enter
in
add
xchg
add
mov
pop
out
out
jge
pop
mov
and
xor
arpl
in
pop
mov
add
dec
xchg
add
cmpsl
cmpb
cmp
push
jnp
das
fisttps
inc
cwtl
lea
xchg
fnstcw
ds
andb
add
sub
jle
loope
cld
fs
inc
orl
xor
out
add
jle
and
xchg
imul
daa
add
rorl
in
inc
outsb
adc
das
mov
fbld
pop
aaa
aad
add
pop
add
test
loope
dec
pop
adc
xorb
cmp
dec
mov
cmp
sub
adc
jbe
arpl
outsl
ds
pusha
arpl
or
fistpll
cmp
dec
inc
xlat
sub
add
mov
sbb
jbe
sbb
sub
and
test
fndisi(8087
xchg
fisubrl
adc
out
outsb
je,pt
loope
adcl
mov
mov
sti
test
jae
lcall
cmp
pop
arpl
or
and
popf
adc
cmp
cmp
arpl
pop
sbb
push
adc
std
js
into
test
addl
jge
adc
pop
sub
sbbl
fs
mov
psadbw
iret
jno
jbe
add
mov
loope
addr16
lcall
jnp
ret
and
mov
and
push
icebp
jns,pt
mul
ficoml
aas
jp
sbb
mov
xchg
int
push
pop
inc
pop
popf
stos
mov
pop
dec
inc
fistl
push
test
sbb
js
xor
in
mov
popa
mov
push
add
jle
hlt
pop
jmp
mov
adc
out
clc
popf
push
incb
push
xor
pop
push
inc
add
mov
xchg
sub
and
pop
or
inc
cmp
vmwrite
add
icebp
mov
loope
fisubs
inc
sbb
das
xor
pusha
sahf
xchg
mov
inc
in
fisttps
mov
mov
fsts
fs
aas
and
add
dec
jnp
jne
adc
jne
jecxz
inc
roll
jge
xor
push
inc
imul
pop
stos
filds
mov
loope
dec
cwtl
jns
jbe
cmp
inc
in
ficoml
add
add
or
sub
pop
lcall
in
pop
pop
add
dec
jno
loope
psrld
mov
jnp
pop
mov
cmp
sbb
jmp
inc
mov
inc
inc
inc
aad
lea
xchg
sbb
xchg
fs
stc
in
in
add
fs
mov
jmp
push
add
jb
stc
cmp
aaa
pop
fadds
aaa
xchg
and
xchg
ds
aas
sbb
jge
inc
pusha
ret
nopl
xor
jp
cmpps
add
mov
dec
dec
add
aaa
outsl
fadd
fdivrs
inc
sahf
and
cmpsl
xor
cmp
and
adc
pushf
pop
out
mov
pop
in
mov
jp
negl
rol
add
fldenv
lock
psadbw
push
pop
cmpsl
cwtl
cmpsb
xor
jnp
mov
jp
push
mov
or
loope
data16
lret
mov
or
and
jl
orb
push
jmp
mov
inc
cmp
sbb
xor
mov
sub
and
fimull
repnz
rcrb
je
rcll
out
out
out
jl
andb
jg
loopne
push
push
fwait
mov
test
nop
dec
clc
cmp
add
xchg
mov
loope
es
xor
pop
and
jl
scas
xchg
add
sub
pusha
jae
add
jnp
iret
arpl
sub
adc
jge
into
cmpl
xchg
jb
jo
cmp
mov
cmp
xchg
loope
div
daa
clc
popf
pop
jnp
jle
lahf
xor
loop
jle
pop
loope
outsl
or
test
add
push
sbb
jle
cmpsb
and
push
movsb
pop
lea
gs
aad
sbb
shufps
testb
pop
stc
testb
pop
sub
jl
mov
or
movsb
add
jp
push
sub
or
jl
divb
rep
adcb
mov
movb
in
add
xchg
rorl
inc
jb
cmp
in
stos
inc
and
inc
hlt
jnp
pop
mov
xchg
movsb
filds
roll
cmp
cmpsb
and
pop
in
lods
or
dec
cmp
aas
in
xor
add
cld
lds
jl
lock
pop
add
sub
cwtl
icebp
and
xchg
pusha
sbb
mov
jno
xchg
dec
jne
test
dec
jg
stc
je
rorb
mov
xchg
xor
sti
out
loop
adc
sbb
jb
inc
jle
test
dec
clc
mov
lret
dec
xor
int
pop
mov
nop
mov
clc
aad
bound
daa
cmpb
xchg
fcompl
icebp
cmpsb
pop
mov
sub
cmp
orl
jno
pop
addl
hlt
add
or
mov
mov
repnz
lds
sbb
xor
dec
sti
add
inc
jnp
das
mov
out
xchg
ljmp
jecxz
js
mov
aas
pop
inc
imul
push
mov
add
sbb
daa
fiadds
arpl
imul
mov
ja
ljmp
fildl
xlat
add
popa
pusha
imul
sub
in
push
cld
xchg
jne
mov
addr16
add
cmpps
sbb
or
adc
mull
pusha
mov
and
rolb
push
xor
clc
push
jbe
xor
inc
aaa
leave
lods
jnp
ret
loopne
pop
movsb
pop
xchg
aad
sub
aas
aaa
add
xor
pop
xchg
stc
out
mov
aaa
fnstsw
daa
mov
mov
push
mov
pusha
cmp
notb
cmpl
cmpb
mov
mov
pop
jnp
jne
mov
lea
bound
icebp
sarl
mov
fs
in
add
inc
loop
fldenv
adc
push
inc
mov
fwait
sbb
test
notb
xchg
scas
dec
push
sub
xor
shrb
ret
xchg
mov
flds
push
xor
gs
xchg
scas
or
aas
pop
lock
inc
mov
mov
xor
and
call
popa
lret
fildll
cmpsl
mov
mov
sub
dec
pmulhuw
movsl
push
adcb
enter
rolb
fwait
rolb
mov
in
mov
sub
or
inc
xor
inc
mov
inc
jae
rclb
inc
xchg
push
push
std
mov
mov
mov
sbb
add
pop
jae
aaa
dec
inc
sbb
lcall
pop
xchg
pop
push
popa
in
lea
int
andb
mov
shrl
cmp
out
cltd
xchg
inc
mov
mov
add
sbb
or
sbb
adcb
mov
mov
scas
stc
ret
out
push
sbb
ja
inc
sub
push
test
je
mov
ljmp
adc
push
rorl
sub
sar
push
or
cmp
dec
inc
sub
sub
rcl
inc
das
mov
mov
sub
jnp
popa
mov
int
orb
and
outsb
jno
mov
insl
cmpb
jl
fwait
mov
sub
xor
jp
and
push
cld
iret
ret
lods
jge
cmp
and
inc
sbb
hlt
lods
fsubs
xor
mov
mov
push
ljmp
call
xchg
dec
je
sbb
xor
fdivs
jg
scas
stos
dec
inc
in
mov
push
push
aam
test
icebp
sub
lcall
sbb
sub
cltd
ret
loopne
in
add
inc
mov
mov
stos
mov
movsl
jp
push
push
adc
push
xchg
loopne
mov
jns
push
mov
xor
aam
mov
les
pop
xchg
push
push
adc
mov
loop
sbb
cmp
popf
push
inc
aas
mov
outsb
jne
scas
enter
int3
es
or
inc
or
sub
mov
fstps
loop
int
cltd
in
cwtl
xor
pop
inc
test
add
push
ret
enter
and
add
add
add
clc
cmp
push
adc
cmp
push
mov
fstps
adc
cs
mov
inc
inc
loope
fsubl
dec
dec
call
jb
bnd
push
sti
pop
incl
or
test
push
mov
xchg
xor
call
xor
cmp
mov
pop
imul
jno
fwait
mov
fstpt
mov
push
adc
push
xchg
push
lods
cmp
xor
and
push
mulb
jnp
add
add
hlt
dec
push
fstpl
push
dec
cmpsl
mov
pop
sti
pop
nop
stos
inc
stos
inc
cmpsb
add
das
add
inc
mov
inc
dec
cwtl
leave
adc
clc
dec
push
add
lret
popa
mov
or
push
sbb
adc
push
subl
push
inc
pop
dec
roll
push
xor
inc
push
cs
push
adc
loop
les
mov
loop
lods
sbb
push
cmpl
sbb
mov
xchg
sbb
inc
or
or
lret
std
mov
mov
ret
sbb
push
xchg
subl
and
pop
adc
mov
push
jecxz
dec
xor
fisttpll
lods
mov
adc
mov
shrl
aad
inc
inc
js
xor
mov
sub
lods
inc
in
inc
lcall
scas
out
sbb
popl
pop
mov
xlat
divb
cmp
or
test
and
mov
add
pop
inc
mov
jle
sub
xor
jo
cmpsl
mov
adc
xor
pshufw
cld
mov
xchg
loopne
push
int3
fisubrl
push
push
sub
shl
jb
push
jmp
push
loopne
cltd
rcrb
in
push
add
dec
cmc
popf
push
sbb
adc
mov
mov
push
mov
movsb
rcl
dec
mov
pop
push
stc
lcall
push
xor
sub
mov
add
xor
add
add
pop
sbb
jb
movsl
pop
icebp
push
int
jb
popl
ret
jae
aam
addr16
sbbl
sub
mov
push
push
and
dec
test
push
jo
loopne
popa
jp
cwtl
pop
int
xor
hlt
mov
mov
mov
inc
popf
call
out
out
ds
stos
data16
sbb
sub
sub
sti
cmp
cmp
cld
adcb
pop
cmp
add
mov
aaa
adc
cmpb
mov
fists
roll
test
add
insl
mov
or
inc
testl
push
sub
nop
push
xor
push
sbb
stos
sbb
cmp
xor
xchg
fistps
mov
call
jo
lock
gs
sbbb
xchg
call
cmp
int
popa
mov
mov
cmp
test
ret
or
xor
mov
leave
mov
add
jmp
jae
xchg
ret
push
jle
push
push
sbb
insl
add
and
xor
fcmovnbe
add
cmp
popa
cli
mov
data16
aaa
addr16
mov
sbbb
or
das
adc
sbb
xor
add
and
inc
stos
ror
mov
jb
or
jb
loopne
aad
jg
xchg
nop
sbbb
iret
sub
push
push
lods
das
call
addr16
lahf
ljmp
pop
popf
sti
fwait
int
jnp
inc
push
lock
dec
clc
xor
ljmp
icebp
mov
aad
decl
inc
shlb
test
lret
cmp
mov
mov
ljmp
cmp
mov
mov
xchg
ret
lds
push
jnp
jl
push
inc
orl
mov
inc
push
clc
jmp
pop
inc
add
and
xchg
sub
xchg
loop
cwtl
push
xor
sub
gs
enter
push
inc
xchg
push
sub
add
roll
sub
adc
lock
push
sbb
push
fdivl
cmp
adc
addr16
test
cltd
push
cltd
sbb
in
xchg
mov
ret
icebp
or
xchg
rorl
insb
pop
mov
and
xor
bound
sub
mov
inc
loopne
add
lcall
pop
inc
pushf
test
neg
adc
or
sbb
mov
aaa
shlb
xor
loop
cmp
cltd
addb
sbb
adc
popa
mov
pop
subl
cmpb
inc
addl
xor
jnp
daa
inc
icebp
je
or
cmp
push
pop
rol
add
mov
leave
ret
dec
cltd
add
push
xlat
inc
test
push
sub
aam
push
into
push
and
hlt
jg
add
sti
or
sbb
dec
and
test
sahf
push
xchg
fs
push
push
int
adc
push
pushf
addl
or
push
push
loop
or
mov
cmp
xchg
mov
jnp
push
inc
rcl
xor
mov
jecxz
lds
inc
hlt
test
loop
mov
lds
es
rol
rorb
mov
enter
out
icebp
imul
xor
loope
xchg
rol
adc
dec
stos
into
cmp
and
fs
mov
sbb
sbb
mov
es
sbb
inc
jae
lret
add
pop
aaa
sub
cmpsl
test
inc
xchg
lret
call
data16
pushf
jmp
inc
xchg
jo
test
dec
js
cmp
sub
test
dec
adc
xchg
in
loop
loope
aaa
pop
int
sub
popa
decl
mov
stos
or
adc
push
adc
scas
push
into
jg
pop
inc
aad
sbb
test
jb
cmp
sbb
xchg
lcall
push
or
subb
es
aas
or
sub
shlb
xor
out
sbb
rolb
enter
xor
leave
xor
add
xchg
adc
push
adc
adcl
mov
movsb
mov
sbbb
push
sbb
mov
jne
rcll
dec
jl
aas
loop
fstpt
adc
into
xchg
dec
cli
inc
in
adc
cli
mov
ljmp
or
mov
outsb
in
mov
mov
es
sub
xor
cmpl
jle
fwait
sbb
into
push
dec
dec
in
push
adc
ret
mov
jecxz
aam
add
push
dec
xor
sti
pop
das
adc
xor
inc
mov
enter
xchg
or
push
inc
les
and
inc
nop
mov
mov
and
scas
jb
or
push
ficomps
or
add
int3
jb
aad
jno
jmp
shll
outsl
xchg
sbb
pop
push
test
movsl
pushf
sub
in
push
mov
xchg
sbb
add
xor
rclb
ret
lods
pop
pop
test
into
popa
cmp
out
in
loopne
sbb
xlat
pop
lret
dec
gs
inc
mov
add
or
call
mov
cwtl
add
sbb
jl
mov
sbb
inc
enter
jmp
dec
es
mov
sub
push
jge
add
jo
push
pop
lcall
outsb
add
cmp
nop
ret
test
cld
or
dec
xchg
dec
pop
or
jnp
mov
fwait
popa
cmp
stos
ljmp
mov
outsl
inc
jb
call
stc
push
out
inc
cld
add
or
aas
pop
and
mov
push
sbb
dec
adc
add
mov
add
je
inc
sub
mov
lahf
les
bound
pop
add
ss
mov
xor
pop
mov
push
mov
jbe
mov
rorl
sbb
lods
xor
add
xchg
cmc
xor
add
arpl
fmuls
shr
jl
and
or
mov
jbe
decb
gs
lds
add
gs
stc
iret
mov
mov
pop
mov
loopne
cmc
jg
mov
lret
or
cmp
stos
push
lds
cmp
pop
out
lea
les
xor
je
add
xchg
add
shlb
mov
in
xor
scas
adc
aaa
mov
adc
test
popa
and
mov
mov
mov
mov
call
mov
xchg
mov
pop
daa
and
loope
mov
push
aaa
xlat
aaa
add
pushf
xchg
ja
lret
inc
jae
test
scas
pop
xchg
inc
sti
jecxz
inc
es
lahf
insl
add
jae
loope
loopne
inc
lock
adc
inc
push
mov
pushf
mov
pop
or
rorl
adc
mov
xchg
ja
mov
cmp
fdivs
les
scas
add
divb
jns
mov
xchg
lods
and
fdivrl
loope
jp
in
push
pop
test
xchg
fldcw
repz
cmp
add
add
pop
cs
inc
lods
loopne
lods
cltd
dec
cs
mov
stos
push
sub
and
and
sub
cmp
xchg
pop
mov
leave
cmp
sbb
sub
mov
pop
add
in
cmp
mov
aaa
lock
jo
mov
in
fidivs
sahf
test
out
cli
mov
and
lds
jns
std
fwait
dec
mov
xchg
popf
cld
jmp
cmp
mov
mov
adc
jnp
add
loopne
aaa
mov
ret
xor
je
sarl
push
push
or
pop
sbb
mov
push
pop
fisttpll
cmpsb
dec
inc
loop
cmpsb
call
setb
shll
in
mov
xor
les
pop
xchg
mov
inc
jae
push
cmp
mov
mov
mov
shr
xchg
roll
jg
mov
mov
sub
jmp
sub
adc
inc
sbb
or
and
jnp
lret
mov
mov
pop
andb
sbb
dec
push
jnp
add
icebp
stos
fimuls
sbb
cmp
into
fdiv
push
jae
mov
andl
and
jno
adc
adc
mov
inc
adc
xor
cltd
lds
inc
push
out
or
lock
inc
push
and
fistpll
aaa
call
sub
push
sub
sbb
dec
xchg
sub
adc
jl
mov
sub
ljmp
xor
mov
cmp
xchg
test
add
lahf
cmp
mov
mov
stos
lcall
xor
push
aaa
rolb
loopne
fld
rclb
clc
dec
mov
movsb
loopne
xor
adc
lock
pop
jns
adc
pushf
mov
jbe
out
andnps
addr16
int
dec
in
cmp
loopne,pn
push
sbb
inc
popa
loope
loopne
mov
pop
adc
xor
pop
adc
ret
pop
cmp
addl
lahf
out
push
inc
nop
shll
inc
int
cmp
sub
shlb
pop
int
push
inc
clc
xor
or
cmp
mov
jnp
adc
cmp
lods
in
or
adc
fists
sub
dec
roll
dec
xlat
jo
push
jnp
mov
fwait
loopne
lcall
sbb
std
js
mov
int
mov
test
imul
xor
jo
and
shll
shrb
lods
xor
or
or
fwait
xor
push
and
sbb
pop
cs
jl
movl
es
inc
inc
hlt
test
int
pop
repz
add
xor
dec
pop
adc
mov
fildll
cmp
push
lods
jl
scas
sub
jo
cmp
push
sub
popa
inc
inc
push
xchg
cmc
pop
xor
leave
sub
and
lahf
mov
enter
pop
push
xchg
out
pushf
jecxz
bound
and
dec
inc
push
test
jae
mov
sbb
cmpsl
les
outsb
sbb
std
and
enter
aas
cmp
add
mov
vpunpcklbw
dec
cli
lods
hlt
loope
incl
movl
arpl
add
adc
xor
mov
cmp
das
push
sub
mov
mov
adc
mov
loop
dec
fwait
or
mov
adc
call
shll
or
jmp
test
repz
jno
repz
cli
aaa
inc
addl
cmp
fnstenv
or
mov
push
mov
sbb
mov
inc
sub
repz
and
adc
cmpsb
push
pushf
push
sahf
ret
loope
and
jo
int
cli
insb
push
into
inc
in
inc
xorl
mov
jnp
mov
arpl
or
xor
mov
and
xchg
xchg
es
xor
mov
adc
add
test
loopne
cli
jl
movsb
pop
push
mov
cld
js
add
cs
add
das
xchg
mov
mov
dec
icebp
pop
push
lret
subb
sbb
scas
sub
jnp
test
stos
gs
addb
test
jo
or
xor
add
mov
sbb
vpsrlw
mov
mov
jb
xchg
mov
dec
sub
loopne
adc
push
lods
jnp
add
add
or
mov
pop
arpl
push
imul
push
adc
add
mov
xlat
dec
loope
mov
dec
popa
ret
lods
enter
ja
lret
jae
sub
pop
in
jp
sbb
mov
xor
lahf
sbb
repnz
pop
pop
push
pop
push
int
test
pusha
in
pop
std
fwait
sbb
mov
mov
sub
jbe
nop
add
int
jl
xchg
lret
add
loope
add
pop
adc
xchg
fnstsw
out
mov
jecxz
add
sub
mov
xlat
pop
mov
movsl
sbb
in
cwtl
sub
pushf
jnp
cwtl
jno
jb
test
jle
cmp
or
adc
push
adc
out
arpl
push
jb
xchg
dec
addr16
addl
lcall
push
andl
cmp
cmp
dec
inc
aaa
jae
add
sbb
inc
fimull
das
rcrb
outsl
movsb
test
xchg
je
or
rolb
mov
ss
cmp
push
in
sbb
push
mov
cmp
int
ror
cmp
mov
dec
shlb
lock
add
cmp
addr16
xchg
add
add
stos
pop
mov
int
ret
jl
pop
rcll
push
cs
loopne
adcl
fdivr
push
dec
jg
out
cwtl
jmp
loop
lea
movsl
aaa
rolb
jl
inc
leave
inc
or
jae
cmpsb
inc
ja
stos
dec
or
or
or
pop
in
add
enter
cmp
jnp
inc
and
add
push
add
fdivp
pop
ret
jne
jb
je
cmp
into
clc
lcall
stos
add
rorl
ret
aaa
ja
adc
push
and
add
or
jns
loopne
andl
out
outsl
sbb
push
jno
movl
out
bound
xor
jle
jle
dec
jne
cmc
push
sbb
add
sbb
pop
rcrb
dec
ret
subb
mov
stc
shl
push
lds
in
or
in
cs
jns
or
push
leave
mov
mov
push
mov
xor
mov
call
repz
pop
aas
adc
insb
cmpsb
xchg
mov
div
xchg
les
jno
lahf
mov
sahf
add
fcoml
in
cmp
xlat
ret
mov
je
sub
cmpsb
push
push
stc
sahf
lahf
call
inc
out
push
ljmpw
add
jb
mov
cmpsl
jb
enter
in
movlps
cs
das
mov
push
jae
xchg
sbb
add
rolb
or
ret
inc
xor
ja
xor
pop
push
das
sarl
mov
outsl
test
jp
mov
movsl
adc
rcrb
mov
push
fs
xchg
or
add
xchg
jmp
dec
es
xchg
adc
rol
stc
add
push
aam
sbb
xchg
jnp
addl
stos
mov
loop
scas
push
cmp
arpl
cmp
dec
mov
rorb
rcr
lods
jb
adc
lahf
dec
cmp
test
push
jae
push
mov
add
loop
mov
rclb
and
sub
aam
addb
add
add
fdivl
mov
cmp
inc
push
lods
fwait
nop
xor
jo
jl
adc
sub
je
hlt
adcb
fstpl
or
gs
or
mov
adc
add
ss
incl
mov
test
or
pop
pop
data16
les
mov
mov
in
cmp
pop
mov
insl
in
xor
pop
loopne
int3
and
mov
cwtl
rcrl
mov
cmp
sub
mov
pop
pop
adc
push
ja
xchg
or
pop
js
out
sub
xchg
aam
push
inc
mov
xor
mov
stos
cmp
enter
mov
iret
fnstenv
mov
or
xor
into
ljmp
xchg
ret
xchg
inc
push
xchg
push
test
pushf
sub
stc
xor
loopne
sbb
xchg
jb
nop
leave
ja
flds
lods
dec
jb
inc
es
pop
cmpsb
cltd
jo
mov
jb
sbb
fists
insl
mov
xor
push
xor
jecxz
aam
sub
jecxz
and
sub
mov
loop
xor
scas
adc
xor
gs
mov
sbb
sub
shrb
xor
sbb
sub
jecxz
fisubrl
bound
addr16
xor
xor
cwtl
or
xchg
or
push
sbb
add
push
xchg
adc
insb
cmc
mov
ds
sbb
pop
adc
mov
mul
xlat
rcrl
scas
fisttps
mov
shlb
pop
popf
xchg
sub
loopne
add
fs
push
dec
dec
aam
inc
outsl
mov
inc
pop
mov
ror
mov
lods
aam
inc
xor
pop
inc
push
push
jecxz
arpl
push
or
cmp
jnp
xchg
movb
adc
add
mov
push
scas
sahf
adc
mov
push
fldenv
inc
popf
mov
js
push
adc
cli
inc
arpl
lcall
dec
mov
in
mov
push
cwtl
add
js
mov
xchg
cmpsl
add
in
testb
dec
fs
jo
push
add
js
and
mov
nop
or
into
add
inc
jno
adc
cltd
xor
add
orl
xor
add
sub
scas
clc
mov
xor
imul
mov
cmp
into
push
xor
sbb
aad
mov
pusha
xor
mov
hlt
lret
aad
cs
jp
test
xchg
idivb
inc
inc
adc
mov
sbb
stos
inc
xchg
inc
jae
xorb
out
sbb
xchg
adc
call
dec
in
pop
cmp
add
roll
dec
stos
mov
cmpsl
lcall
inc
pop
cmp
push
andb
adc
pop
pusha
rolb
cltd
mov
rcrl
cmp
shrd
mov
pop
sub
xor
dec
pop
fiadds
inc
adc
imul
or
cmp
es
pop
sbb
loop
iret
and
mov
stos
xor
push
sbb
fisubl
pop
push
cwtl
pop
loopne
mov
add
dec
sbb
int3
jnp
addr16
in
jle
mov
push
xor
cltd
sbb
fbld
add
arpl
insb
cmp
jb
lock
or
shrb
push
cli
add
shll
jp
cwtl
sub
loope
mov
out
ds
sbb
loope
sbb
data16
shll
xchg
fnstsw
cmp
into
and
push
dec
adc
repz
dec
fs
push
push
lret
ds
aad
sub
xchg
jae
and
shrb
adc
sarb
fwait
loop
jg
scas
and
jnp
jo
push
rol
leave
mov
add
xor
or
dec
add
or
push
add
and
arpl
jle
hlt
add
adc
leave
mov
push
xor
lcall
push
cltd
in
mov
jo
rcrb
fs
aaa
push
or
adc
cmp
out
mov
adc
xlat
in
xor
rep
sbb
lea
popa
push
or
in
xchg
or
insl
mov
and
mov
inc
lahf
inc
stc
cmc
xor
notl
inc
or
mov
lahf
pop
ljmp
pop
scas
imul
xor
push
xchg
pop
add
adc
mov
sub
scas
dec
add
xor
pop
dec
popa
ret
jae
cwtl
div
ret
out
cmpsl
adc
cmp
out
aaa
lret
xchg
xor
icebp
or
nop
or
and
mov
jno
inc
in
in
rolb
jae
sbb
pop
les
jo
rolb
fiaddl
popa
rcl
adc
sar
push
cmp
enter
into
inc
sbb
cmp
mov
and
stos
xor
cmpsb
adc
mov
lret
inc
xchg
xor
sbb
lret
inc
push
push
lcall
xor
lods
mov
pop
orb
popa
mov
inc
int
mov
push
adc
or
inc
fdivl
sbb
gs
lret
or
int
mov
xor
cmpsb
and
outsl
lods
and
adc
fnstenv
and
cmp
fadds
rolb
push
xchg
adcl
jp
dec
out
add
popf
mov
dec
and
adc
xor
and
ror
outsl
ror
jge
add
dec
adc
lret
and
test
out
imul
mov
test
lret
imul
aam
les
test
push
xor
mov
add
sbb
shrb
test
jne
xchg
loopne
push
ret
mov
cltd
add
dec
jbe
sbb
jo
sub
test
push
cld
cltd
rcll
int
cmp
mov
clc
andb
dec
push
je
mov
lcall
shll
sub
jo
xor
dec
aas
or
inc
cmpl
sbb
add
jecxz
or
jo
add
xor
ja
dec
rolb
mov
call
lods
xor
orb
and
adc
iret
in
jno
fmull
fucomi
adc
in
jp
sub
sbb
adc
xor
inc
add
es
lods
sub
cmp
jmp
push
ret
sbb
lock
sbb
xor
sbb
cmp
loope
push
mov
pop
pushf
fisubrl
cmp
push
or
lods
add
adc
lds
mov
orl
je
rol
and
movsl
lret
aam
pop
cmpsb
cltd
adc
mov
jo
pop
fs
lret
or
pop
add
jl
and
pop
and
ljmp
jp
xor
popa
es
add
jmp
fcmovu
or
dec
xor
fcomip
push
les
shrb
cmc
push
shll
push
jl,pt
out
loopne
xchg
dec
jmp
sub
or
out
mov
in
xchg
and
or
iret
jnp
loop
pop
xor
adc
xchg
std
in
adc
nop
jnp
dec
sahf
imul
xlat
xor
xor
scas
cmp
jl
jecxz
xor
rcrl
push
inc
cmp
nop
mov
jb
dec
aaa
add
jae
incb
push
cmp
loop
lret
xor
hlt
and
repnz
dec
xchg
adc
sub
pop
clc
es
push
xor
cli
in
cmp
jecxz
imul
jo
loope
pop
sub
xor
add
daa
cmpsb
sbb
int3
inc
cltd
stos
jo
repz
insl
add
xchg
shll
mov
push
jecxz
sub
adc
dec
cmp
shl
jbe
leave
inc
cmpsb
jb
loop
es
mov
fisubl
dec
scas
mov
cmp
test
cwtl
add
in
push
loopne
xchg
movsl
fmull
cmp
mov
icebp
mov
mov
jl
xchg
lret
add
faddl
and
ss
inc
push
mov
sbb
add
loop
gs
push
daa
pushf
jns
lea
xchg
rcll
or
sub
and
cmpsl
sar
ja
pop
pop
push
mov
pop
mov
pop
aad
inc
decl
jnp
out
stos
adc
push
mov
and
pop
or
add
test
xor
mov
lock
lcall
jecxz
sahf
inc
cmp
sbb
xchg
daa
pop
xor
imull
add
inc
xor
sbb
test
xor
cmp
sbb
js
lret
sbb
pop
movsl
xlat
pop
xor
or
add
xchg
loope
roll
inc
jnp
test
icebp
aad
jnp
gs
push
sbb
dec
sbb
mov
aad
adc
cmc
sbb
sbb
fistl
sbb
shrb
pop
test
xor
and
out
cmp
jl
push
test
cwtl
xor
mov
jae
inc
pop
xchg
and
push
cmpsb
add
pop
mov
rclb
or
cltd
lcall
inc
cmp
jnp
xchg
xchg
stos
push
push
inc
aad
cmp
sbb
lea
lcall
ljmp
adc
jae
cmp
dec
xchg
lret
sub
or
aaa
loop
mov
mov
pop
cmp
lret
cmp
jmp
in
push
xchg
movl
mov
filds
xorl
or
cld
insb
call
aam
inc
je
imull
sbb
clc
ljmp
inc
sub
in
fsubl
pop
mov
inc
mov
push
mov
insb
push
ljmp
mov
sub
call
dec
call
ljmp
sub
cli
movsl
mov
sub
dec
or
and
shrb
lea
aaa
jl
push
lock
int
aam
rorb
dec
out
ds
ret
in
adc
subb
push
sbb
push
sub
pop
xchg
mov
daa
push
aaa
add
and
jge
cmp
push
dec
pop
movsl
stos
jo
or
int
mov
jno
pop
mov
push
and
sub
sbb
push
xchg
int
xchg
add
sub
dec
jo
mov
in
mov
scas
sbb
xor
and
roll
jo
call
test
call
leave
xor
or
add
add
jp
pop
adc
fisubs
pop
xor
pop
scas
and
mov
popa
std
test
popa
or
xchg
faddl
int
outsb
fidivrl
xchg
inc
sbb
and
jo
dec
inc
sbb
adc
lcall
jmp
fiaddl
inc
xor
cwtl
mov
mov
scas
mov
aad
push
xchg
pop
int3
sub
cld
sub
or
xorl
or
inc
shrl
or
add
insl
jmp
xchg
mov
mov
scas
loop
jae
loopne
push
xor
or
add
fs
and
popf
xor
push
push
jnp
in
ret
mov
in
sub
icebp
incl
jb
xor
test
mov
inc
xor
xor
in
call
mov
mov
add
pop
scas
shll
das
rclb
test
sbb
mov
add
xchg
xchg
leave
xchg
lret
out
sbb
mov
bound
mov
js
sub
decl
test
xor
nop
push
cmp
xor
repz
inc
sbb
or
adc
out
pop
and
or
mov
gs
mov
inc
adc
rclb
xor
mov
scas
cmp
gs
lret
sbbl
jnp
inc
lock
add
cmp
loope
xchg
adc
mov
js
stos
adc
add
cli
adc
cmpsb
pop
xor
enter
lret
xor
cmp
add
pushf
push
les
or
pop
pop
pop
repnz
push
loope
aad
fsubrl
scas
outsb
stc
mov
xor
xor
and
cmp
xchg
or
cmp
fsubrs
insl
adc
ret
out
dec
loop
mov
pop
lock
ret
mov
add
loop
xchg
push
pop
mov
decb
xor
xor
pop
cmp
addr16
sub
xchg
cmp
jle
out
pop
int
dec
cmp
iret
add
into
loope
push
fisubl
push
dec
xchg
cwtl
mov
ljmp
pop
xor
cmpl
add
sbb
lods
pop
xchg
adc
add
mov
push
loopne
js
fldt
idivl
imul
sub
mov
add
incl
shll
roll
hlt
dec
inc
sub
mov
pop
mov
popf
stc
mov
dec
pop
add
add
aaa
or
es
pop
push
hlt
add
enter
mov
in
cmp
call
add
sti
jg
xchg
mov
mov
lret
cmpsb
filds
je
xchg
and
mov
inc
imul
dec
xorb
pusha
mov
pop
nop
xor
lahf
cmp
lret
add
fdivrs
sbb
les
rolb
sub
lds
andb
test
ss
rol
lods
xor
jl
mov
inc
pop
dec
inc
cltd
lcall
pop
cmp
or
jae
inc
add
pop
mov
inc
shll
xor
adc
inc
jnp
jo
enter
xor
pop
insl
imul
mov
push
aaa
pop
mov
in
loope
push
pop
scas
out
adc
movsb
and
call
adcb
mov
add
adc
mov
pop
leave
adc
inc
out
roll
inc
push
dec
out
pushf
mov
push
inc
es
add
push
add
addb
aas
mov
push
and
push
jno
mov
or
and
imul
mov
int
mov
inc
pushf
fisubrs
sbb
cmpsb
sahf
mov
addl
adc
push
mov
or
jno
sbb
xchg
mov
push
pop
xor
cmpsb
lea
inc
push
mov
dec
add
add
icebp
outsl
das
dec
shlb
leave
jp
pop
enter
xor
ljmp
mov
lahf
lds
rolb
pop
pop
movl
jo
push
cld
stc
adc
pop
inc
push
test
add
fisttpl
mov
xor
andl
mov
mov
xorb
dec
adc
add
rclb
pop
sbb
push
lods
or
fsubl
fdivl
adc
and
pushl
push
out
adc
mov
les
adc
adc
sub
rol
push
sub
xchg
movsb
push
movsl
push
and
cltd
sbb
pop
insb
add
decl
sub
sbb
or
aad
sub
cmp
mov
add
push
sub
or
in
pop
jbe
push
inc
aam
push
cli
mov
loop
test
add
lcall
xor
pop
out
pop
cmp
loope
inc
in
pop
jo
jo
and
push
hlt
enter
and
mov
aaa
lcall
repz
stc
or
push
jno
mov
add
push
call
adc
push
adc
js
jle
sub
stos
imul
jp
insl
loopne
enter
std
mov
pushl
or
mov
testl
sub
dec
aaa
sbb
pusha
sbbb
push
xor
sub
dec
push
pop
mov
bound
xchg
imul
mov
adc
sub
or
mov
sbb
add
push
mov
inc
mov
test
add
call
push
hlt
mov
cmpsl
mov
sub
nop
xor
inc
lret
fs
mov
inc
mov
mov
fdiv
adc
sub
push
aas
push
add
inc
adc
inc
mov
mov
jno
sub
jmp
shll
xlat
mov
out
adc
lret
lcall
mov
push
cmp
sub
push
fidivs
xor
addb
sub
ret
sub
dec
pop
and
scas
or
inc
inc
pop
in
inc
or
sub
pushl
inc
movhps
adc
add
cmp
jb
jp
test
or
lcall
push
das
xchg
testl
push
dec
pusha
or
sbb
mov
sbb
movsl
jb
sub
test
inc
sbb
cmp
lea
mov
out
jnp
negb
ds
adcb
data16
pop
push
sbb
inc
shl
xor
pusha
sub
pop
int
xchg
pushf
cmpsb
ror
andb
xchg
test
push
inc
lds
push
arpl
push
jnp
outsb
add
cli
fnstcw
push
mov
ja
push
sahf
stos
adc
sbb
push
ret
inc
inc
jae
pop
cmpsl
add
adc
push
loop
jnp
add
cmp
add
pop
inc
xor
cmp
in
in
mov
sub
loopne
mov
out
or
cwtl
sbb
cs
pmulhw
sbb
pop
imul
push
test
adc
icebp
sub
and
push
push
cmp
pop
arpl
in
jne
sbbl
cltd
fs
or
or
or
jno
sbb
imul
std
mov
lret
adc
ss
mov
sub
adc
cmp
jae
ret
ss
inc
rcll
cmp
scas
pop
jno
push
out
push
sbb
dec
xchg
dec
mov
adc
movsl
sbb
push
inc
fs
push
adc
inc
or
push
mov
lahf
dec
jbe
and
jno
sbb
xchg
xor
mov
cmpsb
pop
or
test
cwtl
jb
clc
cmp
leave
mov
add
mov
sub
gs
popa
aaa
mov
bound
pushf
mov
ljmp
loopne
inc
adc
mov
or
mov
jle
test
inc
pushf
dec
add
iret
xchg
popf
and
push
mov
out
insb
mov
jge
jo
in
pop
and
fsubl
xor
xor
push
cltd
aam
jp
mov
dec
push
and
xchg
xor
push
adc
dec
push
and
aad
jo
loopne
cmpsb
ljmp
cld
sbb
xor
mov
sbb
cmpsb
sbb
adc
subl
add
mov
mov
xchg
mov
and
sub
fstpl
adc
xchg
jnp
movsl
icebp
add
rclb
pop
mov
add
popf
repnz
test
mov
adc
pop
idiv
rcrb
stos
xor
sarl
adc
mov
mov
dec
push
jl
orb
dec
xor
xor
addl
or
xor
mov
pop
xchg
xchg
dec
or
sbb
adc
aad
lods
jecxz
lret
cmc
add
das
sub
je
lret
mov
mov
inc
scas
enter
aaa
xchg
cmp
and
jae
xor
lret
jmp
mov
in
mov
cmpsb
or
pop
dec
in
pop
rorb
inc
addr16
je
xchg
or
and
lcall
cmp
cmp
test
jmp
lfs
lods
mul
add
mov
sbbb
mov
xor
movsl
cmp
mov
and
jo
push
sub
mov
xchg
jo
enter
xchg
rclb
cs
loope
xchg
repnz
pop
mov
stos
cmp
ror
out
test
clc
aam
mov
scas
imul
mov
cmp
sbb
xchg
roll
enter
daa
xchg
and
cmpl
sub
mov
push
mov
mov
aam
stc
jno
cltd
mov
add
daa
addr16
mov
inc
inc
jg
sub
xor
lods
loop
aaa
mov
push
push
push
push
adc
icebp
add
push
outsb
dec
dec
inc
sub
jmp
jecxz
push
js
psraw
es
pusha
outsb
into
andl
loop
add
xorl
add
das
lcall
xchg
xor
dec
cmp
int
xor
subb
addr16
cmp
icebp
xchg
sub
mov
xor
push
into
push
clc
cmc
fwait
xor
loope
test
dec
cmp
and
bound
xchg
jle
jb
or
push
sub
ficoms
mov
outsb
pop
mov
xor
loopne
add
lret
and
push
and
mov
inc
or
jl
shl
push
pushf
and
ret
adc
or
pushf
sbbl
inc
aad
xchg
ds
test
loopne
andl
out
testb
or
daa
and
out
or
cli
cmp
scas
loope
and
jl
in
es
add
xchg
dec
ret
mov
sub
push
adc
bound
pop
mov
pop
cmc
test
subb
jmp
scas
add
mov
clc
xchg
xor
pop
fs
ja
mov
adc
fwait
push
retw
rcrl
aas
push
cmpsb
pop
push
cmpsb
ljmp
sbbl
and
inc
lret
pushf
insb
push
dec
add
clc
push
int3
scas
mov
or
add
fwait
lods
push
flds
loopne
fisttpll
inc
mov
sbb
lea
ss
mov
roll
pop
and
inc
dec
loopne
mov
test
push
inc
dec
fisubl
cmpl
loop
pop
bound
xchg
addl
sub
push
adc
sbb
inc
xor
enter
or
out
and
mov
jo
stc
xor
add
xchg
mov
push
hlt
sbb
mov
addb
sub
addb
jbe
push
xchg
shll
rolb
sbb
inc
movhps
mov
add
in
shr
fwait
pop
add
mov
jo
test
xchg
sub
mov
push
cmp
int
scas
xlat
test
ss
je
xchg
ret
cmpb
push
jae
stos
js
lret
lods
ljmp
sbb
inc
bound
jnp
and
push
data16
sbb
in
xorb
xor
mov
or
add
push
cltd
and
jbe
jae
dec
hlt
mov
pusha
sub
add
xchg
and
icebp
stos
test
adc
or
sti
adc
sbb
push
jnp
loopne
in
sahf
repnz
push
sub
scas
pushf
ss
subb
or
pusha
push
loop
pop
add
cwtl
addb
addb
pop
cmp
fwait
jo
jb
pop
lods
in
in
pushf
or
push
or
sbb
mov
xchg
push
gs
jbe
imul
dec
push
aaa
sub
ljmp
outsb
inc
add
mov
jne
mov
scas
test
mov
pop
and
push
std
xchg
repz
push
shlb
or
loopne
mov
add
pop
repnz
loopne
ds
out
lods
inc
pop
mov
out
movsl
add
and
test
and
mov
mov
test
sahf
ret
bound
and
sub
cli
inc
movsl
xlat
mov
orl
push
add
and
mov
adc
in
pop
test
outsb
cmp
and
lret
test
push
xor
cltd
xor
pop
xor
sbb
sahf
cli
pop
push
into
fs
sub
add
pop
mov
pop
inc
jmp
and
mov
inc
xor
mov
push
js
cwtl
enter
cmpsl
int
lds
xchg
sub
push
int
add
sub
push
or
inc
push
inc
fdivl
inc
adc
out
xchg
add
sub
cwtl
shl
add
int
and
jp
xor
add
pop
cmpsb
add
jp
push
cmp
fcmovne
pop
jae
cmpsb
lret
rcr
inc
cmp
lcall
nop
leave
mov
in
adc
test
lret
dec
stos
sbb
push
aam
outsl
dec
sbb
jb
addr16
jnp
shrb
xchg
xor
xchg
loop
cwtl
cwtl
sub
or
adc
xchg
repnz
cmpsb
push
cwtl
ds
bound
or
sbb
dec
scas
xchg
inc
jmp
push
jmp
inc
push
dec
xchg
inc
icebp
inc
dec
add
shl
stc
cmp
cmp
inc
loopne
cmpsl
cmp
sbb
pop
mov
push
cmp
in
push
push
cld
inc
jbe
inc
mov
stos
push
adc
push
dec
or
pop
and
cli
push
sbb
sub
aad
mov
popf
ret
dec
popa
stos
pop
push
jo
cmp
inc
aam
push
mov
inc
pop
sub
out
inc
insb
popa
mov
fxtract
mov
mov
andb
call
neg
in
pop
andb
sub
add
dec
mov
mov
inc
paddusb
das
dec
repz
inc
fs
jle
sub
mov
push
outsb
mov
imul
push
push
dec
stos
int3
lea
clc
sahf
mov
inc
aad
dec
xchg
cltd
aam
movsb
pop
pusha
movsl
pop
int3
mul
in
pop
inc
jo
push
mov
shrb
xchg
mov
jl
std
sahf
sbb
pop
ljmp
pop
jno
lea
adc
add
and
adc
inc
mov
lock
xor
dec
push
adc
adc
xchg
lret
adc
sub
pop
stc
dec
mov
cmpb
jp
sub
push
orl
popf
inc
jp
fisubrl
push
data16
fiadds
ja
ljmp
add
xor
add
out
aam
cmp
sub
mov
mov
push
aas
addr16
push
mov
mov
xchg
or
and
or
lret
or
cmp
cmp
iret
popf
jmp
imul
leave
pusha
sub
movsb
scas
sti
xor
push
add
pop
xchg
adc
dec
or
out
data16
dec
adc
jb
pushf
sub
cs
add
int
sar
nop
mov
inc
xchg
dec
xchg
or
fildll
xchg
sbbl
movsl
in
sbb
stos
lods
lods
push
xchg
dec
mov
add
mov
mov
insb
xchg
int
sub
add
add
pop
int
adc
xor
mov
pop
cwtl
pop
int
and
mov
sub
ljmp
xchg
xor
or
sbb
scas
add
call
and
inc
movsb
in
clc
clc
aas
dec
pop
pushf
lock
jnp
cwtl
scas
repnz
xor
add
aas
cmp
scas
sbb
filds
pusha
fdivp
aam
mov
add
inc
jne
mov
call
xchg
lret
and
push
or
xchg
arpl
sub
push
or
cs
jo
mov
js
das
orl
sub
cmp
js
cwtl
aaa
rolb
cs
movl
dec
and
imull
push
scas
mov
mov
loope
push
add
sbb
jns
mov
mov
pusha
add
jo
orl
push
add
or
pop
pushf
adc
imul
cmp
in
fwait
mov
rolb
fwait
mov
arpl
adc
orb
es
push
stos
leave
lock
or
xor
jne
inc
or
xchg
or
mov
cs
jb
inc
es
xor
incl
adc
orb
inc
es
sarb
push
cmp
pop
add
cmp
mov
int
jnp
push
arpl
sbb
push
xchg
xor
xlat
cmp
push
xchg
stos
or
push
in
sub
mov
sbb
rcrl
lods
mov
das
add
int
pushf
imul
push
xor
ljmp
fstpl
push
fmull
adc
and
fs
cmpb
loopne
subl
and
in
stc
xchg
mov
lret
xchg
call
inc
push
orl
sub
jne
fisttps
lock
xlat
lock
adc
sti
insb
ss
std
jno
add
push
dec
mov
inc
cmp
daa
imul
adc
or
mov
add
stos
jnp
add
jnp
stc
and
mov
push
or
stc
or
adc
or
mov
mov
push
inc
cwtl
and
inc
rcrb
mov
mov
sbb
dec
inc
lods
pop
fs
inc
ljmp
mov
or
stos
sbb
lcall
dec
cli
xor
call
mov
cmp
mov
popf
pop
lods
mov
jecxz
fwait
or
and
addr16
push
or
or
jmp
ror
or
scas
adc
or
add
mov
xor
popa
inc
jb
and
xor
xchg
push
inc
mov
add
xchg
lret
add
dec
dec
xor
push
scas
xor
push
xchg
test
jo
andb
je
dec
adc
and
out
dec
dec
test
sbb
fwait
mov
xchg
xchg
addr16
xchg
sub
faddl
sub
or
sbbb
adc
sahf
push
mov
xor
stos
push
xchg
and
dec
add
dec
adc
xchg
dec
pop
push
push
and
ss
add
in
or
lahf
sub
add
test
dec
mov
stos
jb
sub
outsl
mov
push
xor
adc
mov
push
add
aaa
imul
add
idivl
add
aaa
jb
ret
sbb
push
movsl
call
or
call
call
nop
popa
loop
mov
add
xor
add
lcall
adc
sbbb
loop
inc
insl
scas
lret
aam
inc
push
andb
test
mov
call
dec
xlat
mov
push
loope
outsb
sbb
cmp
xorb
xor
adc
pop
jnp
inc
xchg
jns
test
cmp
ficomps
shl
xlat
cmp
cmp
dec
mov
add
cmp
mov
cmpsb
repz
inc
dec
dec
add
mov
inc
mov
subb
addr16
mov
xor
sar
sbb
adc
sbb
xor
in
push
or
pop
outsl
rcl
scas
sti
lea
mov
pusha
or
add
mov
sub
pop
sbb
mov
push
push
sub
ret
loopne
or
mov
add
mov
pop
push
add
ja
fwait
xchg
mov
inc
dec
subb
scas
loop
dec
mov
xor
push
imul
push
xor
fildll
cltd
sub
jecxz
bound
mov
dec
imul
mov
mov
testl
inc
xchg
adc
push
pushf
das
stos
out
dec
pop
test
sahf
mov
in
push
cwtl
and
fucomp
call
cmp
rclb
jl
or
pop
vstmxcsr
cs
roll
faddl
stc
mov
pop
xor
or
outsl
dec
pop
xchg
dec
adc
int3
mov
pop
jae
or
mov
dec
test
mov
jl
or
mov
lret
cmp
sbb
addb
sub
and
push
or
imul
lods
jg
and
inc
stos
push
mov
mov
jae
test
pop
pushf
mov
mov
lcall
lcall
sbb
addr16
test
paddd
push
inc
jae
xchg
pop
inc
pop
inc
push
sbb
push
popa
cmp
cmp
jae
ss
adc
jae
test
in
movsl
fnsave
jp
btc
mov
jmp
rclb
ret
aad
mov
add
jmp
fwait
push
popl
xor
inc
mov
pop
cmp
scas
out
push
lcall
pusha
daa
add
jae
adcb
adc
cmpl
pop
xchg
imul
iret
xchg
mov
mov
xlat
in
fsubr
dec
adc
or
rorb
sbb
sub
push
add
int
mov
xchg
inc
jnp
or
and
das
xchg
pop
cmp
decl
lcall
sbbl
in
rclb
es
xor
loop
xchg
or
leave
cmp
cmp
adc
cwtl
stc
or
add
mov
popa
sub
or
orb
sub
inc
sub
icebp
mov
rorb
ret
fldenv
push
test
rolb
mov
jo
cmpl
push
jmp
inc
mov
sub
ret
stc
inc
add
xor
daa
sub
ja
loopne
dec
mov
and
mov
fsubrs
push
add
add
bnd
in
scas
lds
adc
push
lcall
fs
int3
xor
subb
adc
jo
out
xor
sbb
pop
cmp
xor
pop
mov
sahf
mov
lods
test
mov
ret
cmpsb
stos
sbb
sub
ret
es
inc
push
and
inc
adc
call
sub
xor
xchg
cltd
lcall
adc
push
dec
push
sub
jae
enter
test
sbb
fs
pop
daa
ret
push
cmc
sub
inc
xchg
or
lcall
push
jae
push
in
shll
or
xchg
sahf
in
and
cltd
fsub
push
lock
jb
push
test
fs
inc
repnz
sbb
scas
add
addr16
ret
or
sub
fidivrl
in
push
in
or
mov
add
add
mov
sti
inc
les
xor
jmp
xchg
mov
loop
sub
test
xor
hlt
or
dec
push
orb
mov
es
addr16
adc
mov
or
pop
adc
pop
scas
enter
xor
mov
dec
add
add
xchg
test
mov
subl
sti
sbb
adc
jmp
pop
cmp
inc
lds
lock
xchg
test
add
ret
cmp
cmp
mov
sub
add
cmp
out
loopne
push
out
loopne
push
add
add
daa
idivb
dec
aaa
or
orb
sbb
and
cvtdq2ps
dec
push
out
xchg
adc
loop
aam
inc
mov
gs
inc
adc
sbb
dec
sub
xor
sub
xchg
mov
rep
lds
or
rcl
inc
into
rcll
scas
adc
int
mov
inc
and
ss
xor
or
xor
addr16
lcall
push
mov
push
push
cmp
or
ret
xchg
pop
lods
mov
imul
in
adc
and
sti
or
je
out
out
pop
xor
push
shl
lea
loopne
loop
inc
std
pop
and
aaa
jle
outsb
lods
in
push
out
js
xchg
cwtl
dec
or
test
es
xorb
loope
clc
js
int
mov
jl
inc
push
mov
dec
push
out
cmpsb
loop
in
mov
ficoms
cmp
sbb
in
out
in
mov
sbb
addb
hlt
mov
cmp
dec
cmpsl
mov
nop
imul
sbb
pop
adc
ljmp
xchg
pop
xchg
mov
dec
pop
mov
inc
mov
cld
cs
es
fldl
mov
nop
xchg
and
inc
pop
adc
sbb
push
jb
xlat
sbb
xor
jecxz
xchg
ds
loopne
jno
bound
insl
xchg
addl
sub
out
adc
cmp
stc
add
or
sbb
push
je
xchg
pop
imul
add
inc
test
push
arpl
pushf
and
or
inc
adc
scas
sbb
scas
loop
dec
xor
inc
sahf
imul
jo
int3
xchg
popa
or
inc
mov
mov
pop
lret
xlat
stos
cmp
pop
inc
push
adcl
stos
pop
sbb
loopne
jae
shr
xor
inc
test
adc
jb
jle
and
ljmp
jecxz
cmp
sti
lret
jae
jo
or
xor
dec
sub
out
and
and
pop
pop
add
sbb
icebp
dec
adc
loopne
xchg
jg
or
xor
imul
add
cmp
jp
sbb
xor
push
inc
cmpsb
sbb
data16
pop
inc
or
jo
sub
xor
cmp
pop
mov
and
out
outsb
xor
insb
jmp
nop
and
lcall
and
fmuls
sbb
pop
xor
stos
jb
sbbb
push
mov
or
ret
add
mov
fwait
iret
inc
xchg
das
js
xor
add
into
gs
je
dec
adc
lods
sub
or
jo
rcr
adc
in
nop
jae
or
cmp
cmp
cmp
int
sub
fsubrs
mov
fisttpl
dec
or
inc
adc
push
jo
and
daa
sub
pop
lcall
andb
sbb
push
sub
dec
cmp
imul
cmpsl
xor
lret
ljmp
jbe
sub
sbb
xor
mov
out
inc
or
cmp
fsubs
int
jo
mov
dec
pushf
leave
js
push
fildll
enter
jnp
dec
and
mov
or
aad
xor
or
xor
pusha
jo
mov
in
add
mov
push
cmp
lea
in
pop
jno
push
push
es
jecxz
pop
push
dec
push
decb
call
movsb
push
adc
ret
lock
cmp
xchg
lret
leave
sti
ret
and
iret
loop
jo
sub
js
or
mov
mov
addr16
or
test
push
inc
inc
shrl
sub
mov
sub
or
add
popf
push
pusha
ljmp
loopne
lea
cmp
add
hlt
xchg
xor
inc
jae
or
in
orb
js
jmp
push
sub
pop
cli
push
mulb
in
test
jb
mov
mov
pop
push
mov
inc
adc
xorb
sub
out
leave
or
leave
andb
test
movsl
pushf
push
xor
and
loopne
call
addr16
xor
je
cvtpi2ps
xlat
pusha
cli
cs
scas
loopne
repnz
roll
xchg
and
pusha
xor
das
hlt
scas
inc
push
xchg
or
push
rorl
or
js
jo
sub
ror
mov
jns
sbb
js
mov
add
xchg
xchg
push
sbb
push
cmp
mov
mov
jb
int
or
cmp
jo
push
mov
das
or
scas
mov
aas
shlb
sbb
push
mov
fsubl
jb
dec
sbb
pop
ds
shlb
mov
cmp
nop
push
lods
dec
sti
mov
sub
rol
mov
ret
popf
push
repnz
mov
into
loop
inc
pusha
jb
push
les
sbb
push
and
push
imul
test
and
cmpsl
stc
mov
popa
push
xor
fidivs
sbb
popf
jo
push
or
subb
xor
cltd
mov
push
cmp
inc
aad
mov
push
xchg
mov
in
inc
jae
push
fwait
push
fidivrl
test
and
and
push
cmp
test
sub
lret
inc
jae
fwait
es
rcll
push
mov
push
addl
lret
add
hlt
mov
xor
or
mov
sbb
std
xor
pushf
xchg
jb
xchg
and
mov
inc
jo
mov
lds
lds
dec
add
xchg
aaa
or
xor
mov
pop
insl
mov
mov
sub
cmp
inc
xchg
orl
cmp
xchg
sbb
out
push
pop
lret
enter
push
loop
insl
sbb
jae
inc
push
idivl
jecxz
xchg
rorl
subb
or
push
add
mov
aad
xor
push
inc
mov
inc
add
adc
mov
stc
into
lock
ret
jle
orb
sahf
or
or
pushf
push
out
sbb
test
jmp
or
lcall
sbb
adc
fisubrl
dec
shl
lock
test
adc
rcr
sbb
js
add
mov
enter
and
add
in
xchg
jo
push
sub
adc
pop
pop
js
cltd
jo
adcb
jae
dec
xor
scas
stos
pop
xor
sub
ret
rolb
push
or
mov
mov
sti
les
test
arpl
sub
out
sub
ljmp
sub
or
inc
jle
or
inc
daa
ret
xchg
and
popa
ret
jno
call
fs
xchg
jmp
push
xchg
sbbl
adc
fsubrl
sub
clc
mov
pop
mov
shr
sbb
adc
std
push
rcrl
mov
fimull
lcall
sbb
jge
data16
or
int
in
push
jmp
push
mov
mov
push
mov
enter
push
and
dec
lret
test
jo
push
hlt
repnz
ret
ljmp
loopne,pn
xor
sti
pop
xchg
add
data16
mov
sbb
loop
inc
loope
xor
pop
jne
mov
xchg
pop
pop
sbb
or
add
add
and
sarl
stos
xchg
jo
aaa
adc
je
sub
push
sbb
xor
cmp
xor
inc
das
out
add
pop
inc
mov
gs
jno
pop
leave
cmp
adc
mov
pop
rcrb
xchg
push
in
xor
pusha
mov
mov
cmp
rorl
adc
pop
push
push
add
adc
inc
scas
xorb
cmp
xchg
bound
mov
cmp
xchg
mov
add
jno
dec
mov
scas
in
jb
loop
rolb
scas
pushf
sub
rcll
gs
xor
jnp
pop
xchg
sub
adc
outsb
stc
test
popa
pop
push
add
es
dec
mov
test
mov
lahf
xor
pop
pusha
inc
inc
sbb
sbb
xor
inc
out
ret
mov
rcrl
test
pushf
jae
push
sbb
bound
loopne
outsl
mov
out
adc
jno
in
mov
xchg
enter
sub
shlb
or
push
icebp
stos
fwait
ret
es
sub
sbbb
call
stc
xchg
in
leave
in
adc
addr16
inc
add
fwait
jo
push
insl
push
pop
mov
add
jp
ds
add
fisttps
add
push
dec
hlt
mov
es
stc
jb
sub
pusha
or
pop
mov
leave
test
jnp
mov
add
push
xor
icebp
dec
rcrb
xor
mov
cltd
xchg
jnp
pop
popa
or
les
mov
xor
sbb
mov
jb
or
aaa
mov
cmp
ds
add
rorb
xor
rcrl
sbb
dec
inc
dec
inc
fiaddl
push
fs
and
cwtl
xor
xchg
lret
adc
cwtl
mov
outsb
icebp
stos
xor
xor
es
cmp
inc
cwtl
inc
mov
pusha
and
mov
mov
xchg
cs
lds
js
xor
or
xor
jb
xor
xorb
adc
jne
jecxz
cmp
inc
es
sar
jno
fistps
aam
popf
ja
xchg
cmpsb
sbb
push
inc
xchg
add
ss
rcl
add
add
dec
xor
imul
add
push
pop
add
enter
and
dec
jle
popf
rcll
pop
jnp
icebp
xor
add
adc
mov
sub
jns
sbb
and
add
scas
movsb
arpl
sbbb
imul
pop
pop
mov
sub
xlat
int
enter
jl
cmpsb
push
pop
lock
je
or
and
mov
push
subl
xor
shlb
les
xor
stos
lret
out
jne
loopne
rolb
insl
or
out
dec
fidivs
loopew
dec
push
leave
call
xor
ret
mov
and
or
lcall
pop
sbbl
fs
jge
push
mov
pop
jle
or
in
and
push
in
adc
popa
push
xchg
fists
cmp
ret
dec
sbb
xor
mov
and
cmpsb
pop
imul
xchg
jb
add
sbb
xor
mov
add
bound
mov
sbb
and
cmp
loope
into
loopne
rcrb
xor
jno
mov
aad
mov
aam
nop
out
dec
or
mov
xchg
ret
repz
daa
sub
cli
xchg
add
stos
push
jo
lret
inc
push
add
or
or
testb
cmpsb
out
xor
fcoml
test
jge
push
mov
dec
stc
js
xor
mov
orb
inc
femms
push
das
or
icebp
add
lret
lock
jmp
sbb
insl
aam
in
daa
push
movsb
pop
xor
leave
inc
dec
repnz
into
add
mov
inc
xor
or
add
xlat
mov
in
scas
rcrl
xor
and
pop
call
xchg
add
adc
inc
ror
pop
inc
inc
sbb
enter
scas
sbb
jb
xchg
dec
int
sub
stos
testb
out
add
sbbb
adc
stc
xor
dec
push
cmpsl
add
test
ret
adc
outsb
je
jo
loop
push
push
scas
inc
es
adc
and
mov
mov
xchg
insl
xor
sub
data16
add
cmpsb
sub
test
xor
push
mov
imul
adc
push
andl
decl
lods
int3
test
add
xchg
insb
push
push
int
jae
jmp
and
mov
push
pop
sbb
call
enter
pushf
pop
push
lret
aam
out
mov
jecxz
xchg
add
add
xchg
lret
sub
mov
xor
sub
cmpsl
ret
push
sbb
sarl
lret
xor
add
adc
inc
or
and
inc
ss
cmpsl
scas
pop
mov
test
lods
adc
cmpsb
aas
test
xor
inc
xchg
dec
jno
stos
or
mov
xchg
lds
mov
xchg
daa
ds
push
aam
test
lret
fs
xorb
jl
mov
add
loope
enter
leave
xor
daa
and
or
inc
scas
add
pop
scas
sbb
inc
bswap
sbb
mov
adc
mov
sub
pop
inc
mov
push
int
jl,pt
pop
inc
jae
cmp
fs
cmp
pop
lcall
or
data16
mov
je
xchg
loope
cltd
sbb
inc
add
test
daa
aas
mov
ljmp
orl
mov
es
push
jg
push
inc
pop
lcall
xor
sub
and
faddl
jae
pop
ret
ss
cld
add
mov
pop
jae
ret
mov
sub
add
inc
push
jp
lock
enter
shrl
jo
mov
or
scas
jbe
push
bound
mov
cltd
xor
push
fs
int
rolb
push
and
push
push
sbb
push
xchg
pop
sbb
sbb
and
xchg
jle
ror
sub
xchg
add
jmp
xor
cmp
cmpsb
mov
ret
inc
imul
js
enter
loop
lcall
xchg
sbb
jbe
jl
sbb
mov
xor
add
adc
sbbb
insb
mov
xor
or
cltd
dec
das
xor
push
test
lret
pop
or
insl
pop
pop
in
rcll
inc
sub
push
push
fidivl
mov
idivb
rolb
xchg
mov
loopne
in
mov
mov
or
mov
xchg
mov
sub
ret
xchg
mov
shrl
add
nop
mov
movsb
mov
lret
push
xchg
out
test
stc
das
and
call
test
into
push
mov
push
cmp
sbbl
cwtl
jle
loop
ljmp
das
sarb
push
add
mov
mov
mov
sub
cmp
adc
mov
jae
jb
jmp
add
pop
aad
jne
xchg
and
adc
jae
and
mov
pop
xlat
and
lahf
xchg
lret
orl
mov
pop
pop
dec
inc
mov
sbb
push
sub
push
leave
push
sub
outsb
xlat
mov
mov
mov
outsb
fwait
mov
cmpsb
push
cld
or
cwtl
jp
rclb
xchg
stc
mov
gs
inc
add
ret
or
rolb
pop
bound
jo
daa
cmpl
aad
repz
and
and
jno
xchg
xor
shll
xor
jl
cmp
lcall
and
xor
jo
shr
and
movsb
call
jno
nopl
inc
or
out
dec
ret
icebp
or
test
and
cltd
rclb
in
test
addl
into
lock
jae
adc
pop
jno
lahf
call
and
rolb
sbb
insl
lea
icebp
lret
imul
js
jg
lret
sub
dec
sub
xchg
insb
movsb
inc
xchg
mov
and
movsb
loop
leave
mov
cmpb
out
aaa
or
jg
xchg
das
nop
loop
test
xlat
and
stc
xchg
xor
mov
push
push
add
pop
jo
jo
scas
jbe
sub
daa
mov
dec
inc
pshufw
xor
mov
sbb
scas
ljmp
call
nop
aad
push
stos
sbb
cmp
add
add
mov
int3
loope
push
jle
dec
or
inc
push
push
xchg
ret
cmpb
push
dec
outsb
mov
and
jne
push
add
cmp
add
cmp
adcl
scas
cmp
pop
mov
mov
cmp
aam
rcr
movsl
repnz
popf
mov
jmp
es
scas
pop
xchg
xorb
or
add
dec
cmp
jno
adc
shll
or
data16
or
inc
int3
xchg
ret
jo
push
mov
xor
xchg
mov
subb
pop
adc
push
into
add
or
jle
fisubrl
pop
mov
push
adc
int
lcall
inc
jae
push
iret
jl
scas
and
or
sub
xchg
mov
dec
scas
pop
xchg
sub
repnz
lret
jmp
stos
mov
push
aas
lods
inc
cmpsb
xchg
and
jmp
mov
and
cmp
iret
xor
pop
and
add
movsl
ja
fwait
jno
xchg
addb
xor
sahf
cmp
sbb
xchg
add
imulb
xchg
ljmp
cltd
push
pop
mov
mov
enter
dec
scas
test
and
js
xchg
sub
xchg
mov
cmpsb
adc
mov
pop
inc
adcb
enter
cmp
xor
jmp
test
inc
dec
cmp
adc
add
mov
int
sub
outsb
mov
push
test
hlt
mov
test
dec
into
add
sbb
pop
jae
imul
cltd
mov
mov
sahf
jno
push
xchg
out
cmp
jb
push
jns
out
scas
pop
push
ret
add
out
inc
xchg
xor
jae
call
pop
mov
nop
mov
cmpb
cs
or
stc
das
mov
push
sub
fldenv
adc
push
in
jo
ret
xchg
pushf
mov
mov
scas
inc
pop
cmpsl
push
scas
aaa
jae
xorl
jb
cmp
fsub
sub
dec
shll
jmp
and
adc
mov
scas
adc
jno
mov
mov
rorb
push
push
arpl
xchg
cmc
jg
cmp
cltd
and
jns
cltd
sbbl
cmc
push
cltd
add
scas
stc
and
pushw
fisubrl
mov
push
add
xor
xor
sub
and
add
dec
or
cmp
shl
jb
dec
xorl
add
adc
mov
leave
les
lret
add
or
inc
adc
adc
dec
mov
xchg
aad
mov
pop
cwtl
push
add
fimull
mov
dec
aam
cmp
dec
daa
or
sub
cmp
add
push
dec
cmp
lods
dec
add
insl
add
pop
add
or
push
inc
fs
lret
daa
out
inc
xchg
xchg
mov
popa
mov
cmp
mov
aad
mov
cs
pop
sbb
jae,pt
test
ret
adc
add
loope
push
push
cli
mov
mov
cmpl
push
ret
add
add
mov
cltd
pop
add
int
lea
push
inc
xchg
sarb
xchg
mov
cmp
push
dec
mov
cmp
xchg
mov
add
imulb
rcl
xchg
add
cmpsl
pop
push
push
call
sbb
and
push
rcrb
rclb
cmp
mov
inc
add
xchg
fmull
repz
ret
xchg
add
sahf
cmp
insl
mov
or
add
adc
pop
cmp
ret
shlb
push
aam
fisttpl
cs
inc
xor
test
sub
or
sbb
test
add
push
pop
jb
pop
popf
in
mov
cmp
lret
pushf
test
icebp
mov
push
push
out
push
out
lods
testb
xor
scas
push
sbb
js
jecxz
pop
push
dec
cs
pop
sub
add
push
fnstcw
pop
in
inc
adc
jo
push
xchg
or
dec
in
mov
sbb
inc
in
ret
scas
add
rep
js
roll
or
rolb
pushf
cmp
jo
pop
xchg
xor
pusha
sub
sub
sbb
sbb
push
loope
iret
popf
fists
mov
cmp
mov
xchg
sub
outsb
jge
test
push
in
out
push
rcl
popf
sub
dec
cmp
cmp
add
rcll
lret
into
inc
or
inc
mov
push
push
cmp
or
push
and
dec
cltd
xor
movsl
sub
cltd
sar
mov
adc
xchg
sub
inc
jno
fdivs
cmp
imul
test
loopne
add
aad
pop
das
sbb
int3
sbb
inc
push
jns
ret
add
push
pushf
fidivrs
imul
cmpsb
pop
add
jb
jne
sub
inc
loop
andl
mov
push
repnz
push
add
mov
add
fstl
movsl
xchg
or
xor
xchg
pop
jo
or
jne
mov
adc
inc
jae
dec
outsl
xchg
cld
pop
into
xor
outsb
add
xor
or
lods
addb
in
shrb
xor
mov
sub
add
jo
cwtl
nop
mov
adc
push
dec
int
mov
mov
push
mov
xor
or
sub
adc
mov
cmpsl
adcb
mov
int3
rorl
rolb
mov
es
call
pop
xor
clc
mov
cmc
xor
scas
inc
out
into
or
fwait
nop
sbb
inc
sbb
lret
xchg
push
push
shll
or
cmp
xor
dec
cltd
pop
add
push
shrb
aaa
mov
pusha
add
pop
clc
out
adc
cmp
sbb
out
mov
popa
mov
gs
mov
outsb
and
data16
cmp
in
scas
fwait
mov
enter
adcb
dec
int
inc
sub
sbbl
or
pushf
and
stc
sar
sbb
sub
jp
test
mov
push
sub
inc
mov
fmull
inc
cltd
mov
xor
adc
inc
popa
je
or
push
xor
inc
inc
shlb
or
jecxz
dec
fldl
imul
cmp
rcrl
and
rcl
subb
lret
loop
sub
xchg
hlt
push
dec
in
stc
mov
daa
mov
cwtl
push
xor
in
test
mov
sbb
push
push
push
sub
test
jmp
xor
insl
roll
pop
cltd
sarl
jge
mov
shll
daa
add
sbb
jb
pop
mov
aas
lds
or
push
popa
sub
rclb
pop
vprotd
loope
cmpsb
xchg
repz
mov
nop
or
fs
mov
shl
ds
sbb
test
mov
xor
or
out
scas
mov
jmp
aaa
inc
mov
mov
pop
xor
stos
dec
sub
bound
andb
inc
stos
call
and
mov
cmp
popa
shlb
stos
pusha
mov
test
scas
call
add
dec
sub
push
test
nop
pop
movsb
rclb
mov
inc
inc
nop
imul
rolb
lret
mov
adc
add
rolb
dec
jns
mov
imulb
pop
add
mov
jns
pusha
xor
jo
xor
dec
adc
mov
push
sahf
sub
push
insl
insl
stc
add
hlt
and
imul
pusha
xchg
sub
add
in
out
add
lcall
jae
dec
ljmp
sub
leave
inc
push
xor
hlt
adc
cmp
sarb
cwtl
jp
insl
cltd
dec
ret
xor
cmpsl
pushf
lcall
int3
cwtl
leave
add
mov
jecxz
add
mov
cmp
push
xor
sbb
dec
inc
sbb
cs
loopne
shll
xor
xchg
les
popa
and
xchg
jb
inc
int
loope
pop
scas
sub
lods
insl
jnp
mov
fstp
sbb
shrb
ljmp
out
sbb
lret
std
jbe
orl
int3
cwtl
jg
popa
xor
pusha
pop
test
sub
clc
jno
push
jae
cmp
adc
lret
fidivl
xor
mov
sub
cltd
cs
gs
and
aaa
outsl
aam
sbb
fnsave
lret
pop
ret
pop
les
aam
push
imul
in
dec
jecxz
push
shlb
popf
ja
pop
inc
mov
or
jp
mov
jmp
aam
insb
sub
xchg
clc
rorb
lahf
or
imul
aam
outsb
push
test
xor
sub
call
data16
lret
ret
les
stos
cltd
push
and
and
hlt
mov
int
mov
in
pushf
mov
sub
std
xor
mov
cli
xor
js
sbbl
addr16
add
pop
xor
movsl
inc
jne
add
sti
stos
jb
sub
jne
xchg
pop
scas
add
ret
sub
mov
subl
call
roll
cmp
sbb
test
je
adc
inc
jne
or
and
adc
sbb
stos
dec
pop
adc
leave
sbb
aad
push
jae
or
pop
lea
roll
pop
int
test
mov
call
jmp
jmp
xor
inc
mov
js
or
push
inc
sub
pop
push
push
cs
push
cmp
jne
push
jb
cmpsl
cwtl
xor
xor
int
sahf
mov
xchg
sbb
stos
cmpsb
jo
imul
dec
loope
inc
mov
mov
mov
xor
scas
push
push
push
aam
fldcw
inc
xchg
jae
cmp
test
sarb
cli
and
stos
add
or
mov
lea
xchg
and
adc
movsl
js
imul
xor
mov
mov
subl
lcall
xchg
xor
scas
pop
or
in
lods
out
lcall
ljmp
push
and
xor
roll
addl
xor
inc
es
cmp
jae
push
js
and
orb
inc
and
insl
lret
and
ud1
mov
dec
inc
scas
cmp
mov
push
pop
add
dec
add
mov
or
lret
daa
xchg
in
lock
mov
pop
pop
aaa
mov
mov
js
pop
inc
popa
cld
rorb
mov
aaa
push
lcall
es
fbstp
rorb
stos
or
out
push
mov
shl
push
push
push
jo
cmp
loope
cmp
dec
jbe
add
or
cltd
outsb
xor
and
add
xchg
push
dec
rolb
pop
call
popa
xor
add
mov
xor
stos
pop
test
xchg
mov
xchg
jb
jo
gs
cmp
sbbl
xor
lcall
add
add
or
and
sbb
cmp
mov
mov
cltd
and
push
add
and
or
or
adc
loope
test
mov
and
mov
aam
mov
test
icebp
and
outsl
or
jbe
in
mov
test
loope
iret
in
mov
and
mov
mov
imul
push
xchg
xchg
roll
cmp
add
sub
mov
shlb
and
mov
in
push
js
push
test
clc
or
adc
ret
sub
mov
or
cwtl
or
or
mov
stos
or
jae
mov
sub
roll
dec
pop
lods
pop
inc
jae
cmp
jnp
call
movsb
dec
mov
jo
pop
or
in
mov
incl
add
scas
pushl
add
insb
imul
xchg
mov
jp
adc
xor
shl
insb
iret
subl
sub
sbb
testl
orb
push
aad
lcall
icebp
stos
jp
in
fsubrs
jp
loope
mov
push
adc
pop
push
data16
rolb
jg
std
addl
push
and
xor
add
lcall
mov
sbb
and
and
popa
dec
lret
push
sbb
mov
push
mov
cmp
jge
pop
mov
xchg
mov
adc
mov
mov
push
int
cmp
rcrb
sbb
test
adc
add
sbb
sbb
jo
mov
jnp
test
cs
xchg
fisubs
fsubr
cltd
sub
in
in
sub
dec
mov
or
inc
and
push
xor
jp
cltd
mov
in
cmp
cmc
bound
push
sbb
sti
adc
enter
addb
neg
cmpsb
xor
stos
enter
lcall
jb
scas
addb
dec
cmp
in
sbb
dec
movsl
xlat
sub
stos
data16
push
mov
push
mov
pop
or
pushf
jmp
loopne
mov
in
xchg
out
shl
outsl
sub
movsl
cmpsl
add
shlb
popa
clc
pop
fs
jp
repnz
int
dec
repnz
add
push
push
push
int
out
xchg
pop
adc
pop
popa
test
fiaddl
adc
ret
push
mov
mov
or
test
mov
rcl
pushf
stc
stos
pop
and
add
push
pop
push
and
add
or
sbb
add
pop
push
mov
imul
cmpl
add
enter
inc
or
dec
xor
dec
cmp
adc
add
pop
mov
test
xor
in
push
or
inc
aas
cmpsb
push
mov
mov
or
push
fists
xchg
mov
dec
push
lcall
roll
mov
ja
dec
iret
push
fiaddl
or
cmpsl
mov
jp
dec
or
scas
rclb
add
call
mov
pop
add
xchg
test
mov
call
cmp
jb
loop
mov
dec
xor
jnp
aad
xchg
lret
shll
sbb
std
movsb
push
push
ss
jo
mov
loopne
push
add
pop
mov
jnp
dec
xchg
push
out
mov
out
ret
and
ds
add
hlt
js
xchg
mov
cs
leave
mov
push
repz
mov
push
jg
hlt
rorb
leave
mov
cmp
mov
pop
cmpsl
movsb
mov
xchg
or
ljmp
sbb
nop
sub
adc
sbb
cmpsb
or
sub
pop
dec
or
ljmp
push
jo
or
loopne
cwtl
xchg
adc
sbb
out
insl
addr16
sbb
mov
push
cmp
lods
dec
mov
loopne
xchg
stc
cmp
add
pop
dec
cmp
testb
out
mov
mov
push
call
enter
loop
flds
rcll
into
aad
addr16
sub
adc
and
in
subl
jp
push
push
imul
jg
iret
aas
jo
or
inc
inc
or
mov
mov
xchg
lret
hlt
movsl
xchg
add
push
inc
xchg
addr16
shll
pop
xchg
ljmp
enter
mov
pop
jb
mov
enter
add
mov
shlb
lods
mov
stos
xor
out
jle
and
xor
xchg
call
es
mov
test
sbb
xchg
push
subl
std
sbb
setns
sti
mov
mov
adc
rclb
int
lods
imul
push
ret
xor
adc
inc
cmpsl
or
xchg
add
cmp
push
movsl
shrb
add
jo
jo
add
cmp
xlat
cmpsb
push
push
or
icebp
and
shrb
or
add
arpl
pop
out
out
test
add
pop
je
out
mov
inc
push
pop
jbe
mov
or
adc
xlat
jle
pusha
iret
subb
in
lods
jb
pop
jae
add
push
and
pop
pusha
push
inc
and
or
inc
fwait
pushf
xor
subl
mov
pop
into
loope
jl
xor
sarl
and
or
iret
int
stos
sbb
les
push
xchg
shrl
adc
aaa
ficompl
push
pop
xor
ss
fwait
push
pop
sbb
push
sbb
xchg
mov
fisubrl
cmp
push
lds
call
lods
push
pop
jnp
dec
pusha
mov
xchg
and
cmc
aad
push
imul
adc
mov
or
rorb
mov
iret
stc
add
inc
inc
push
fbld
xorl
pop
adc
jb
adc
xchg
xchg
fisttpl
stc
out
xor
lcall
sub
xchg
rcrb
cmp
pop
sbb
add
push
lret
mov
push
mov
es
out
mov
add
sub
add
stos
sbb
imul
cmp
mov
dec
xchg
shll
push
loopne
insl
jecxz
ror
adc
test
test
and
in
adc
or
or
and
out
cmp
mov
and
dec
xor
insb
insl
into
sub
jae
mov
cwtl
loopne
out
je
test
add
jne
sbb
mov
mov
pop
cwtl
mov
mov
loope
sti
js
fdivrl
faddl
subl
jg
fisubl
pop
cmp
aad
push
daa
pusha
rolw
test
sbb
pop
loopne
push
xor
adc
or
mov
xchg
or
and
xor
sub
in
dec
push
mov
je
test
and
cmp
andb
pop
shr
push
push
cmp
adcl
sahf
outsl
fwait
sbb
mov
push
cmp
arpl
stc
adc
jb
addl
gs
movsl
sbb
mov
jmp
xchg
call
call
add
inc
xor
hlt
aas
inc
add
fcomps
bnd
xchg
aaa
shlb
jmp
xor
and
enter
dec
inc
es
repz
loopne
mov
xchg
mov
sub
push
adcb
fldl2e
lahf
cwtl
add
add
scas
insb
out
in
pushf
mov
lret
push
mov
lods
add
or
sub
mov
xchg
loop
mov
add
mov
xchg
jmp
insb
or
incb
cwtl
sub
rolb
inc
cs
add
popf
dec
add
add
add
jo
xor
or
pop
test
mov
negl
in
fiaddl
ljmp
cli
sub
aaa
mov
xchg
inc
push
push
jo
add
xchg
loope
dec
in
and
gs
loope
and
push
adc
mov
mov
lahf
push
jae
test
ja
andl
xchg
sub
es
lcall
add
popa
stos
adc
sub
mov
dec
loop
scas
cltd
push
daa
bound
enter
add
push
cmc
gs
pop
fsub
xor
push
shrl
pusha
das
mov
xchg
icebp
loope
or
or
subb
sar
or
push
and
sub
pop
jg
cld
es
call
mov
mov
or
lcall
mov
dec
xor
test
ret
jo
pusha
jno
aaa
mov
pop
jmp
push
mov
jae
dec
stos
adc
push
add
mov
cwtl
stos
sbb
stos
scas
add
fs
pop
xor
imulb
jne
rcrl
xor
sbbl
xchg
lret
aam
sub
scas
cltd
push
lcall
loope
pop
add
sub
mov
cmp
andb
or
sub
push
xlat
add
arpl
add
cwtl
jo
push
push
loopne
push
sbb
inc
mov
in
mov
es
push
add
lock
cmp
xor
pop
hlt
or
andb
or
pusha
sub
leave
jne
stos
and
push
leave
cld
movsl
xchg
pop
add
mov
jno
jne
xor
mov
push
pusha
sub
rolb
dec
popf
rcll
mov
cmc
dec
sbb
orb
stos
loopne
cmp
int
add
int
push
shr
lock
scas
scas
cld
lcall
pop
test
iret
adc
fxch
cmpl
xor
mov
pop
mov
xchg
fdivs
dec
push
mov
enter
sub
push
xchg
mov
add
add
rcrl
imul
in
mov
add
cmp
ret
mov
adc
sbb
popa
jo
je
xor
leave
daa
push
cli
add
or
mov
fwait
pusha
std
cmp
mov
outsb
adc
push
aad
add
enter
das
push
cmp
push
scas
add
and
inc
aas
jnp
lret
dec
rorb
ret
in
adc
pop
and
sbb
push
ret
jno
andb
jg
xor
add
add
ljmp
add
add
je
aam
loopne
cmpsb
iret
mov
rcl
loopne
or
loope
mov
sub
add
inc
mov
mov
or
das
cld
sbbl
das
add
inc
jae
xor
stc
std
push
push
js
lock
sub
in
and
enter
adc
xor
or
adc
adc
cmp
sar
pop
sub
mov
aaa
sub
int
xchg
int3
pop
idivb
jae
adc
cmc
ja
sbb
or
jne
cmc
or
enter
sbb
sbb
fmuls
mov
lret
xchg
int3
clc
xor
sbb
cmp
dec
addr16
rcl
je
stc
imul
xor
push
pushf
sub
sbb
sub
xchg
in
jmp
xchg
pop
jne
add
jne
addb
sub
or
sbb
popf
or
inc
loop
loopne
or
gs
jns
cmp
fisttpll
test
cs
cmp
sti
cmpsb
or
jb
shll
push
ret
mov
ljmp
or
shl
gs
lea
popa
adcb
and
pusha
ret
sub
jmp
add
add
and
enter
mov
ret
sbb
movb
or
sub
inc
cmp
pop
and
flds
inc
or
cmpsl
shl
shl
stc
or
adc
adc
dec
pushf
sub
inc
rcrb
xchg
xor
loop
dec
xor
jo
lret
sti
mov
inc
xor
pop
add
test
mov
jo
xchg
js
add
jb
inc
jno
inc
fs
jno
in
push
jo
inc
iret
arpl
lahf
adc
sti
pop
inc
test
les
cmc
xchg
adc
test
mov
push
dec
pop
orl
jmp
pop
push
xor
inc
ret
js
les
push
pop
hlt
stos
jmp
mov
inc
test
inc
loopne
sbb
mov
mov
js
or
sbb
cwtl
mov
push
sbb
inc
push
mov
mov
es
xchg
nop
subl
cld
pop
and
dec
push
and
xor
in
or
mov
test
push
pop
mov
fwait
popa
mov
sbb
fwait
and
xchg
imul
or
lret
dec
sub
push
or
in
shl
or
inc
in
xor
sub
jne
ret
push
popa
pop
es
lcall
push
adc
pop
adc
ret
xor
sbbb
mov
shrb
shr
mov
repz
push
sbb
in
movsb
adc
mulb
loopne
test
jp
jnp
lcall
add
andb
push
sub
add
push
or
loope
push
dec
std
ret
ret
dec
lcall
sbb
movq
add
rorb
out
andb
add
iret
jnp
mov
sub
jb
mov
call
ds
xor
xchg
andl
xchg
dec
icebp
push
mov
cmp
sbb
in
hlt
xor
mov
call
cmp
adc
xchg
xlat
mov
cmpsb
push
outsb
pushfw
pop
rorb
sbb
xchg
stos
jb
in
loop
loop
mov
inc
insl
cmp
rorl
push
xor
jl,pt
cmp
popa
xchg
or
add
popf
mov
add
aam
pop
adc
pop
imul
pop
shrb
in
pop
jb
out
pop
push
dec
in
cmpsb
push
or
stos
pop
cltd
jnp
cmp
adc
enter
jle
mov
jne
movsl
push
imul
jo
mov
sub
push
xchg
rolb
mov
jo
sbb
aaa
pop
jae
pop
aas
jo
mov
xor
push
xchg
stos
rcll
push
daa
adc
pop
rolb
dec
aam
mov
enter
lcall
movsl
jae
adc
loop
mov
fcmovbe
js
add
push
nop
ret
cmp
sbb
push
or
or
shl
jo
jge
jae
shll
inc
movsl
fisubrl
test
subb
fists
xchg
lock
dec
xchg
mov
decl
jecxz
mov
dec
pushf
jb
lods
adc
test
loope
jnp
xor
jbe
push
sub
in
and
mov
inc
insl
scas
test
xchg
jno
rcrb
jecxz
push
push
pop
pushf
or
fcoms
dec
and
popa
sub
insb
test
rolb
fists
leave
icebp
push
cmp
inc
add
cmpsl
jp
sbb
jo
loopne
lret
scas
pop
push
int
jae
dec
arpl
pop
push
cmp
nop
xchg
inc
stos
push
xchg
fsubrs
mov
and
in
dec
add
xlat
pop
push
test
add
pop
pop
ret
or
test
add
inc
aam
sbb
rorb
adc
mov
sub
mov
js
lret
push
movsl
xchg
add
xchg
jns
sub
std
push
mov
inc
call
mov
popa
push
mov
mov
pop
sub
loopne
mov
xchg
xlat
fimull
jns
int
cld
pop
movaps
mov
cmp
out
push
mul
gs
jne
jne
push
xchg
mov
je
cwtl
xchg
imul
sbb
jb
jns
pop
push
pop
popa
js
lret
sbb
mov
pusha
xor
sub
add
mov
jle
cmp
push
or
jno
add
test
jne
mov
in
mov
xor
or
mov
sarl
xchg
test
in
sbb
jmp
rcrl
lahf
es
or
popa
xor
lahf
jno
mov
jle
or
je
xchg
lock
jo
lret
add
sbbb
and
xchg
and
fnstenv
sub
hlt
fwait
insl
lock
ss
adcb
fadds
ret
adc
add
mov
arpl
in
sbb
fldenv
shrb
icebp
mov
insl
pop
mov
xchg
jo
test
sub
ret
arpl
or
hlt
gs
pusha
cmpb
adc
mov
fs
inc
xchg
mov
push
push
add
push
ret
daa
xor
adc
scas
jp
insl
test
loop
movsl
push
pusha
add
adc
inc
cmp
scas
shlb
inc
xchg
push
and
and
pop
aad
jnp
xor
sarb
js
inc
xchg
lea
pop
jne
pop
inc
loopne
xor
or
pop
or
rcrb
jae
stos
sbb
mov
pop
movsb
inc
lock
cmp
iret
sbb
pusha
xor
pop
xchg
push
mov
and
ja
xchg
jg
dec
inc
sarb
filds
fdivp
or
ficoms
and
sbb
mov
int
xorl
xchg
fldenv
push
xchg
sbb
jnp
fistpl
or
push
add
clc
push
repz
and
sahf
adc
dec
imul
adc
jmp
mov
jnp
out
inc
loopne
daa
fists
mov
push
xchg
sbb
mov
lock
or
mov
inc
aas
adc
and
and
inc
orb
sub
lsl
lea
loop
cmpsb
das
dec
xor
fsubrs
inc
inc
imul
xchg
loope
js
les
pop
sub
loopne
out
jmp
pushf
int
xor
xchg
mov
cmp
lret
adc
push
jnp
or
add
leave
add
pop
mov
sbb
mov
mov
dec
gs
fisubrs
inc
pop
xor
fbld
scas
cltd
popa
xor
cmp
js
jo
repnz
bound
popl
xchg
jo
dec
cltd
mov
jb
jg
adc
mov
aaa
adc
push
aad
cmp
xchg
or
rorl
in
xor
loope
fs
adc
jecxz
mov
fstpl
pusha
test
cltd
enter
mov
les
outsb
add
sbb
outsl
cs
pop
and
int3
push
pusha
loopne
or
inc
out
dec
dec
or
xchg
or
sbb
leave
push
nop
xor
sub
adc
cmp
test
in
lock
js
cmpb
adc
cltd
mov
mov
cmp
pop
push
orl
scas
or
pop
call
add
enter
ljmp
cmpsb
in
sub
add
mov
mov
inc
xor
stc
sub
insb
clc
xchg
xchg
push
hlt
adc
push
or
movsb
adc
inc
xchg
inc
xor
jo
or
sbb
sub
push
push
inc
jecxz
fsubp
xchg
inc
pop
add
push
jl
mov
and
xchg
ret
push
sbb
sub
push
and
xor
push
cmp
or
jo
outsb
fidivrs
icebp
mov
dec
sbb
mov
gs
push
add
loope
imul
pop
mov
push
push
push
cmp
ror
data16
adc
nop
outsl
jo
stos
sub
xchg
lcall
ljmp
mov
cltd
insl
aad
outsl
rolb
push
cmc
push
cmp
hlt
rcrb
stos
or
neg
cmp
mov
out
or
inc
lret
call
push
mov
cltd
test
pop
mov
in
fcmove
push
enter
or
mov
test
xor
stos
clc
addr16
sub
add
xor
jecxz
add
push
addb
pop
cmp
jle
xchg
popa
enter
sub
or
jno
and
or
mov
mov
jne
lds
lcall
push
mov
push
test
lcall
mov
jecxz
lock
or
rcll
inc
dec
jg
cmpsb
jb
pop
out
lahf
mov
call
stos
mov
rcrl
mov
xor
out
add
push
push
push
xlat
dec
addr16
dec
mov
add
stos
clc
jp
xchg
pop
sub
daa
mov
add
mov
fidivrl
int3
in
and
push
aas
inc
jne
cmp
pushf
push
daa
mov
js
fs
sub
cltd
stos
shrl
xor
xchg
xor
sub
sub
add
popl
pop
adc
xor
test
rcrb
decb
dec
fldcw
jbe
sar
sub
sti
jo
cmpsl
cli
lahf
adc
push
cmpsb
rclb
orb
jb
loopne
push
mov
push
shrb
push
and
pusha
pop
int
dec
add
sub
test
dec
inc
cmp
sahf
sub
mov
pop
cmp
push
cmp
pop
es
je
jne
pusha
sub
xorl
lds
mov
xchg
pop
xchg
fwait
sbbb
lret
in
inc
loopne
test
data16
cmp
mov
add
test
cmpsl
adc
sub
xor
pop
xchg
push
inc
orl
pop
mov
andl
adc
or
xchg
push
in
lock
shlb
pop
dec
mov
test
call
clc
or
jnp
in
cmp
sbb
cwtl
or
adc
cmp
out
or
das
inc
lahf
cmp
out
ljmp
cmp
pop
gs
and
or
xor
int3
mov
sub
or
sub
repz
cmp
xor
adc
and
addr16
mov
cmp
push
fwait
adc
xorl
inc
add
dec
bound
and
xor
cmp
pop
adc
cld
lcall
js
mov
cs
jne
lcall
push
push
rcrl
mov
mov
cmp
push
int
or
rcll
dec
lcall
loope
xorb
outsb
stos
aam
or
sahf
and
and
xor
dec
sub
xchg
sbb
jb
push
lods
fists
push
cmp
dec
or
lahf
pop
mov
adc
push
into
inc
test
inc
mov
add
cmp
rcrb
push
popa
nop
adc
inc
mov
pop
loopne
xor
imul
adc
or
pop
jae
xchg
out
sbb
xchg
xchg
adcl
mov
push
push
mov
dec
adc
dec
rcrb
xor
movsl
test
bound
shll
or
ret
rcl
push
lds
stc
sub
xchg
or
out
fs
xchg
xor
in
pushf
leave
andl
sbb
cmc
mov
push
sbb
aam
adc
xor
int
fistps
test
xor
js
stos
enter
pop
or
hlt
or
push
and
xchg
inc
xchg
jae
in
cmp
or
pop
mov
cmc
xor
cli
and
scas
lret
mov
ret
cli
das
adc
enter
ja
bound
sub
xchg
es
test
and
ret
add
and
lds
mov
add
cmp
or
pop
or
xor
xor
xlat
jnp
leave
inc
scas
sbb
insl
add
scas
loope
sub
stos
pop
and
lods
sub
mov
sbb
sub
sub
jbe
call
cmp
pop
fmull
cltd
pushf
add
xchg
xlat
or
add
xchg
and
test
mov
xchg
aad
sbbl
inc
movsl
cwtl
push
cmp
mov
jg
push
sbb
cmpsb
rolb
mov
std
sub
and
jle
mov
inc
xor
into
xchg
add
inc
das
push
add
outsl
in
push
pop
clc
mov
test
or
cmpsl
jmp
xor
dec
add
jo
adc
sahf
xor
loop
xor
jo
roll
std
insl
and
or
or
xor
sub
xchg
or
rol
xchg
push
or
in
mov
and
inc
aam
cmp
add
cmp
mov
loop
ret
mov
cs
out
or
js
or
add
decb
push
add
xchg
test
cs
adc
dec
les
lods
std
pushl
push
pop
call
and
lcall
daa
inc
lahf
lcall
sub
mov
jae
or
test
loopne
push
imul
xor
push
add
add
cmp
mov
cltd
sarb
test
pushf
and
mov
orl
push
add
push
cmp
or
mov
gs
iret
mov
or
cmpsb
mov
jo
dec
lea
sbb
add
les
sbb
rorl
or
subb
test
ljmp
xchg
test
mov
lret
xchg
pop
mov
adc
add
mov
jne
int
jae
inc
cmc
pop
or
pop
bswap
cmp
cs
sub
push
cpuid
or
inc
out
ds
or
inc
adc
rcrl
jp
push
mov
inc
movsl
ret
imul
cmp
in
lods
cmp
pop
sbb
mov
pop
je
aaa
orb
add
cld
sub
stos
cmc
mov
test
call
loopne
addb
inc
xor
cmp
mov
or
ds
subb
push
jl
into
ret
mov
jo
sbb
xor
and
cmp
pop
cli
sub
adcb
add
adc
aas
pop
pusha
icebp
fists
push
mov
mov
pop
add
clc
mov
mov
add
loope
mov
sub
inc
mov
xlat
add
ja
mov
add
mov
mov
jb
lcall
orb
cmc
lret
lahf
and
inc
roll
mov
sub
insl
xchg
shlb
lds
addr16
jne
mov
sbb
in
adcb
inc
cmp
mov
divl
xor
or
cmp
xor
push
cmp
pop
rclb
cltd
jp
in
cs
pop
andb
sbb
dec
mov
popf
loope
dec
mov
aam
mov
or
adc
orb
rcll
sub
imul
inc
jb
xor
or
dec
lret
and
cmp
lcall
popf
jo
jo
xchg
lret
dec
pusha
inc
jae
mov
js
inc
cs
and
mov
add
ja
inc
cwtl
test
fidivrl
mov
mov
shl
sbb
sub
sub
or
xor
jo
and
or
adcb
test
es
enter
inc
pop
sbb
test
fcomip
sbb
dec
inc
out
ss
pop
and
push
in
lcall
or
or
xchg
stos
cltd
test
or
loopne
sbb
test
jb
jle
pusha
fwait
sbb
pushf
inc
ret
int3
call
adc
mov
push
xlat
and
ffreep
jnp
scas
dec
add
push
fisubrl
scas
sbb
push
pop
xor
inc
push
sbb
push
pop
xchg
push
inc
movsb
sub
sbb
or
pushf
xorl
orl
cmp
sbb
mov
cmp
mov
xor
js
dec
pop
shl
inc
adc
popa
ds
sbb
rclb
push
sub
add
or
inc
jo
sbb
lods
xlat
pusha
xchg
loopne
sbb
push
pop
dec
mov
ds
gs
xor
rorl
mov
inc
loopne
insl
lds
dec
xor
popf
std
test
cmpsb
sar
add
push
int
sbb
or
stos
adc
sbb
fidivs
or
cwtl
lea
es
jb
movsb
movd
rorl
mov
xor
pop
xchg
stc
in
mov
adc
xor
add
mov
scas
mov
aad
jmp
mov
jl
in
cmc
mov
icebp
dec
jae
stos
ret
mov
mov
cltd
lods
imul
pop
cmp
xor
jge
jp
enter
push
inc
or
dec
int
xor
jno
xor
push
jp
sbb
and
icebp
inc
cmpsb
push
mov
stos
mov
add
subb
sbb
andb
and
leave
out
inc
pushf
or
call
add
jnp
add
rcll
adc
sbb
add
pop
js
pop
mov
pop
loope
mov
addr16
sub
in
xchg
sub
or
cmp
push
pop
in
cmp
add
dec
add
and
cmp
mov
shr
inc
popf
adcl
dec
int
sub
adc
popa
stc
mov
subl
add
scas
loopne
lods
cwtl
jae
pop
and
test
clc
mov
add
xor
sbb
mov
inc
xchg
ret
cmp
add
add
or
cmp
mov
mov
push
ret
push
int3
jns
xchg
jmp
loopne
je
mov
mov
pusha
call
lret
jo
in
lods
push
mov
push
cmp
aam
cmp
push
test
add
jb
sbb
lret
xchg
ljmp
mov
int3
cmp
clc
lsl
cmp
push
je
shl
add
pop
test
loope
pushf
mov
inc
pusha
cmp
push
cmp
lret
ljmp
adc
enter
jmp
in
pushf
idivb
loop
or
push
sqrtps
stc
sbb
and
faddl
xchg
jae
mov
push
xor
in
jae
add
in
xchg
mov
pop
in
in
shll
movsl
sub
cltd
or
xor
mov
ja
mov
imul
jb
inc
mov
testl
add
mov
and
ja
cmc
loop
dec
cmp
push
je
jl
mov
repnz
inc
popf
pop
push
push
subl
imul
mov
dec
sbb
push
mov
push
or
cld
xor
scas
sarl
cmp
out
mov
mov
sbb
in
loopne
inc
pop
pusha
mov
cwtl
subl
xor
and
insl
cwtl
cmp
adc
pushf
mov
loope
jmp
test
sbb
sub
pop
xchg
aad
movsl
jp
pushf
xor
fstl
push
sbb
pop
and
sbb
push
out
in
push
fst
leave
sarb
add
out
pushl
paddq
adc
es
adc
sub
shrl
cs
or
repnz
inc
cmp
inc
lds
in
inc
addl
add
sbb
insb
xchg
pop
xor
in
jl
inc
scas
pop
pop
mov
rorl
sub
add
or
sub
scas
cmp
push
arpl
inc
mov
bound
push
adcb
sbb
xchg
inc
pusha
jb
in
push
mov
inc
loop
cld
xor
cmpsb
push
in
mov
dec
jno
call
enter
sbb
or
or
add
cmpsb
jo
mov
jno
xchg
addr16
mov
pop
fs
das
cmp
imull
adc
ja
cmpsb
mov
adc
push
pop
sbb
aaa
jmp
xchg
and
test
mov
cmc
pop
sub
jecxz
in
in
or
and
adc
sub
scas
mov
notl
xorb
rorb
and
bnd
or
push
adc
in
and
mov
push
jp
jne
rolb
sub
xchg
fldenv
mov
xchg
roll
icebp
jb
and
jo
push
cld
sbb
addl
dec
pushf
ds
sbb
push
mov
jmp
pop
dec
ljmp
xor
clc
rorl
xor
sbb
in
xchg
roll
ret
push
dec
fidivrl
pop
in
push
aad
sub
inc
sbb
adc
loopne
lods
jne
cmp
adcl
cmp
inc
scas
jo
and
xchg
inc
fwait
push
push
popl
mov
aas
out
daa
dec
nop
test
in
lods
inc
dec
or
push
mov
or
shll
sbb
ret
xlat
xor
push
sub
js
pop
sbb
pop
mov
push
scas
push
fidivl
xchg
xchg
xor
movsl
xchg
lret
adc
mov
inc
ror
sbb
inc
data16
pop
mov
imul
popa
mov
jp
xor
sub
or
mov
pop
sub
fldt
xchg
es
mov
stos
in
mov
xor
stos
fs
push
pop
popa
xor
add
xor
push
mov
adc
pop
jae
sbb
add
mov
xchg
sub
adc
push
das
mov
jnp
add
shll
mov
and
adc
inc
inc
mov
or
inc
cmp
and
xchg
jmp
inc
mov
and
jge
push
sbb
push
scas
fldl
cmp
out
lea
into
adc
adc
dec
lea
add
mov
mov
sbb
add
jp
jo
cs
sub
scas
adc
pop
loope
xor
add
sbb
fbld
dec
mov
popl
xchg
dec
or
sahf
or
pushf
aaa
fs
xor
in
loope
imul
adc
jg
add
sbb
cmp
sub
mov
clc
jb
sub
adcb
cmp
lcall
or
test
cmp
or
adc
xor
sbb
daa
xchg
jmp
inc
mov
xor
cmp
orl
pop
inc
pop
xchg
add
orb
mov
or
loopne
test
push
loop
pop
jae
jmp
lret
jp
test
inc
mov
aaa
andl
nop
sarl
cld
data16
cmp
jb
sbb
orb
and
xchg
mov
loopne
inc
sbb
push
out
mull
mov
out
cwtl
lahf
test
into
inc
ja
adc
pop
and
fbld
outsl
mov
add
imul
shrl
fisubl
pop
mov
test
inc
jne
sbb
call
xor
xor
lcall
out
into
pop
or
in
mov
xor
inc
sub
sarb
dec
into
cmp
aad
sbb
imul
enter
cmp
repz
inc
scas
xchg
pushf
int3
mov
add
lea
in
inc
loope
push
and
push
pop
loopne
mov
adcb
push
inc
mov
sbb
cli
mov
pop
push
pop
dec
pushf
mov
into
aad
dec
adc
dec
mov
jo
dec
pushf
clc
sbb
or
or
mov
jp
inc
jne
jg
aaa
test
mov
sbb
loopne
push
sbb
sub
out
fwait
pushf
xorl
xor
or
fs
fstps
pop
push
ljmp
mov
xor
xchg
shl
xchg
sahf
es
or
pop
nop
mov
push
in
sarb
add
dec
push
xor
xor
fiaddl
xor
orb
and
sbb
push
aad
xchg
enter
push
enter
leave
mov
and
sbb
mov
fs
jg
div
loopne
movsl
lock
xchg
stos
mov
and
mov
cmp
push
pop
iret
sbb
shl
fisubl
jb
insl
xor
mov
mov
mov
dec
fisubl
daa
pop
sbb
aam
or
fldl
rcl
dec
das
and
add
mov
pop
subl
push
or
jno
pop
out
jo
in
fs
and
add
or
test
cs
sub
xor
or
movsb
pop
mov
jne
in
dec
xlat
lods
add
les
or
fldt
jnp
push
xchg
inc
into
lods
sub
xor
pop
int
bound
cmpsb
push
test
or
push
jae
push
sub
cmpsb
xchg
mov
cmp
sub
call
pop
xorb
sub
pop
popa
mov
jb
ret
or
or
and
or
or
jnp
loop
loopne
adc
mov
cmp
jb
mov
cmp
hlt
icebp
lret
test
dec
add
shr
das
arpl
mov
test
push
mov
add
jb
xor
and
in
inc
inc
or
jb
add
xchg
jecxz
pusha
test
xchg
pop
add
repz
push
ds
sbb
add
pop
lea
mov
or
sub
jo
cmp
dec
es
and
and
cmp
pop
adc
push
xor
cmp
sbb
mov
xchg
jnp
loopne
or
add
lret
lods
ljmp
rcll
mov
insl
or
jmp
push
push
loopne
add
pop
lahf
push
loop
aam
cwtl
fistl
mov
out
mov
sbb
jl
je
jo
xchg
push
adc
mov
mov
rolb
adcl
jnp
imul
jle
sbb
popf
jb
sub
mov
mov
pop
inc
mov
or
rolb
gs
pop
jae
lcall
adc
xchg
jae
out
xchg
dec
stc
data16
dec
cmp
cltd
and
mov
cmp
fwait
push
lret
inc
cs
test
cmp
mov
mov
push
ja
push
rclb
jl
and
test
out
adc
xchg
xor
orl
jne
or
lcall
lcall
es
subb
jno
push
sub
sbb
pop
pushf
pusha
push
or
and
cmp
sub
in
dec
inc
adc
jg
mov
inc
push
sub
decb
xor
push
call
lock
push
ret
cmp
or
pop
sub
lock
pop
pop
or
push
je
addb
rolb
sub
pushf
int
ret
lret
inc
add
or
rcrl
push
pop
test
inc
xor
add
jne
shll
jnp
repnz
hlt
test
mov
mov
add
pop
arpl
adc
adc
xor
dec
je
and
xor
in
ja
xlat
loopne
jae
push
jnp
xor
adc
xor
and
out
xchg
out
mov
mov
xor
push
inc
stos
add
mov
and
mov
xchg
cmp
mov
xor
mov
js
xor
stos
mov
add
js
out
mov
push
mov
loop
subl
xor
mov
add
in
dec
push
add
jb
ret
push
loop
rcl
outsl
insl
icebp
cwtl
hlt
mov
je
stos
mov
pop
shl
push
test
outsl
popf
add
sbb
js
adc
inc
pop
mov
push
push
adcb
push
test
mov
jle
int3
inc
or
in
xor
stos
loopne
push
xor
scas
jo
sbb
sahf
push
xor
push
mov
jg
cmp
and
sub
out
push
add
insl
push
inc
add
ljmp
jmp
jnp
movl
xchg
sub
sahf
xchg
mov
dec
cltd
or
addb
into
inc
cltd
ljmp
xchg
subl
adc
pushf
subl
or
inc
adc
inc
jge
shlb
push
xchg
dec
cmpsl
loope
cmp
psubusb
inc
xor
out
repnz
loopne
stc
inc
mov
adc
arpl
scas
mov
sbb
or
push
mov
mov
mov
mov
jno
inc
scas
sub
sub
push
jg
fwait
dec
rcrl
xorl
test
push
popa
std
jno,pn
popa
mov
in
addl
mov
cmp
mov
pushf
lret
add
inc
loop
push
push
xchg
scas
or
add
cmp
pusha
jb
or
and
test
pop
jl
mov
xchg
mov
cmc
adc
pushf
dec
adc
dec
stc
or
faddl
or
lcall
mov
out
push
dec
scas
out
add
in
pop
call
std
std
push
mov
push
filds
std
fdivp
addr16
add
cmp
pop
xchg
adc
enter
pusha
sub
sub
mov
pop
sbb
cltd
jecxz
adc
mov
adc
fiaddl
subb
mov
push
jl
lea
mov
outsl
orb
dec
push
sub
test
xchg
sbb
scas
xchg
call
xchg
and
test
mov
add
call
add
sbb
pop
decl
add
jge
inc
mov
xchg
mov
sbb
lcall
data16
enter
dec
rol
movsl
mov
into
jnp
jo
inc
adc
adc
mov
cmp
stos
mov
add
sub
loope
xor
in
and
dec
test
sbb
in
std
lret
mov
bound
adc
xchg
loopne
rclb
sub
or
in
lcall
das
cmp
mov
jp
popf
push
inc
cli
cmp
data16
mov
xor
cmp
test
jb
xor
add
mov
loopne
pop
nop
pop
repnz
test
rorl
inc
cmp
jg
inc
add
xchg
sbb
or
add
mov
mov
incl
mov
pop
fucomp
fmull
roll
jle
dec
jns
push
cld
dec
xchg
inc
push
jmp
add
sub
addl
pop
loop
out
add
adc
loopne
js
leave
xor
mov
fcmovnbe
stos
ret
pop
xor
jae
adc
sbb
stos
and
mov
notb
push
dec
das
add
cmpsb
ret
lock
mov
in
mov
mov
mov
rorb
dec
push
ret
mov
and
cmpsb
pop
or
mov
cmp
and
test
xchg
jae
jo
pushf
shrl
or
test
xor
push
rcrb
cli
push
pop
add
and
mov
cmp
es
scas
jp
mov
adc
mov
repnz
cmp
cmp
jb
push
cmp
sti
rclb
inc
xor
push
sub
testl
or
pushf
inc
pop
add
sbb
shll
addl
dec
into
xchg
mov
push
xor
loope
jl
sbb
mov
addr16
xor
xor
jb
divl
jb
outsb
out
pop
cmp
xchg
jae
xlat
out
inc
stc
cmpb
cmc
inc
sbb
or
icebp
pop
or
mov
icebp
jl
add
mov
sbb
fisubs
xchg
mov
adcb
pop
push
jno
mov
fidivs
cwtl
xchg
mov
mov
inc
mov
mov
push
sub
inc
xchg
scas
std
xor
sbb
in
adcb
daa
push
adc
cld
sub
aas
xorb
shrl
xor
aad
jp
out
loop
hlt
or
aad
aaa
or
push
mov
and
or
sub
icebp
popa
jo
mov
push
in
and
loope
stos
mov
test
cmp
sbb
loop
out
jb
push
popa
cmp
dec
imul
aad
dec
enter
sbb
xorb
cmc
mov
xor
mov
leave
inc
mov
adc
das
out
rcrb
lret
aad
stc
jl
shrb
dec
scas
sbb
push
movsb
cmpsl
sti
mov
add
nop
or
mov
pop
lods
cmp
adc
or
daa
xchg
pusha
jo
dec
je
mov
xor
sbb
push
or
add
imul
xor
pushf
leave
rol
jnp
push
push
push
insb
daa
outsb
and
push
xlat
xlat
addr16
fistps
pop
je
pop
movsl
cmpsb
xchg
push
sbb
aad
jg
ja
fidivrs
stos
xor
and
push
test
in
cwtl
movsb
and
scas
push
xlat
or
bound
in
push
push
aaa
loop
or
shlb
cmp
xor
test
push
dec
mov
push
and
frstor
lret
std
inc
jo
scas
dec
ds
jmp
mov
or
mov
pop
aad
das
lcall
adc
mov
popa
mov
or
movsl
dec
in
sbb
call
mov
dec
and
jb
iret
xchg
jle
daa
rcl
dec
call
xchg
xchg
cmp
into
cmp
pusha
sub
pop
fsubs
sub
adc
push
scas
cmpsl
xchg
jne
sti
loop
sub
add
mov
cmpsl
iret
cmp
add
fs
nop
xor
jb
mov
aam
xor
fstps
pop
inc
sub
add
add
cmpl
cmp
xor
mov
rcrb
inc
test
enter
sarl
mov
push
mov
inc
xor
jae
add
incl
repnz
jmp
scas
nop
nop
xor
pop
inc
scas
inc
jae
jp
mov
add
shll
pop
test
add
test
je
test
inc
push
loopne
outsl
je
lods
outsb
jecxz
and
inc
scas
ss
add
stos
lea
stos
loopne
sarl
xchg
cmp
sub
mov
cmpb
push
add
stos
mov
xlat
popa
xchg
or
loope
aaa
adc
xor
loope
loope
pop
cmp
inc
or
sbb
dec
test
inc
andb
subb
fistpl
stos
jge
sub
jge
sub
test
in
xor
xchg
addl
sbbl
rorl
push
xchg
lcall
out
rolb
push
popf
pop
push
jb
cmp
fs
cmp
or
mov
daa
mov
sbb
pop
cmp
xor
cmp
out
xchg
mov
add
mov
jnp
in
push
add
loope
in
cmp
sub
cmp
push
push
loope
cmp
fisubl
pop
loop
scas
add
sbb
ss
xor
scas
jae
mov
mov
jns
xchg
in
in
push
out
pop
lods
push
push
fistpll
outsl
and
lods
xor
inc
dec
jmp
xor
jl
inc
xor
es
sub
mov
test
cli
sbb
pop
mov
insb
mov
incl
mov
inc
jae
in
out
pop
and
sub
lock
adcl
sbb
push
imulb
or
add
push
je
imul
inc
stos
push
add
aam
push
xor
push
xor
je
scas
sbb
cmp
jge
addr16
gs
and
test
or
jnp
mov
and
xchg
test
shl
or
or
rorb
aam
ror
jp
inc
cmp
cmp
lret
lret
ret
push
mov
or
das
adc
nop
pusha
xchg
int
add
jne
lea
aam
sbb
mov
push
cld
ss
mov
xor
push
stc
ret
vmovaps
pop
inc
pop
icebp
dec
fs
es
jb
lret
lret
sbb
sbb
ror
mov
addb
adc
rsqrtps
add
xorl
push
ja
mov
and
adc
mov
inc
xchg
mov
xchg
xchg
add
adc
js
je
and
dec
xor
jb
add
sub
push
cwtl
imul
xchg
add
sahf
sub
in
in
popa
jb
mov
test
aam
aaa
push
insb
push
test
andl
mov
pop
dec
push
clc
pop
add
xchg
sbb
divb
ret
loope
ret
inc
jno
cmp
call
mov
inc
push
add
lock
js
push
and
xchg
jb
sbb
inc
push
xor
daa
rorb
sbb
pusha
stos
and
in
je
fldcw
scas
pop
inc
in
insl
mov
cmc
test
mov
adc
xor
mov
cmp
pop
xchg
scas
dec
inc
sti
xchg
pop
ret
mov
call
pop
xchg
mov
int
jno
push
pop
cmp
push
xchg
out
jecxz
adc
hlt
jo
mov
or
inc
es
cwtl
and
xor
cmpsl
test
adcb
stos
dec
xchg
sub
xchg
ret
mov
xchg
addr16
add
adc
push
and
inc
sbb
sub
pop
scas
inc
adc
jg
adc
mov
mov
cmp
and
stos
push
mov
in
push
or
enter
mov
inc
inc
xor
mov
jnp
xchg
pop
icebp
lret
adc
addb
cmpsl
xor
dec
cmp
iret
shrb
jmp
xchg
pop
push
ret
addr16
and
mov
xchg
jae
or
pop
xchg
xor
outsl
xchg
mov
or
notl
push
adc
mov
push
setns
adc
push
nop
in
or
mov
imul
aam
lods
push
add
loopne
sbb
cmp
cs
cmp
cmp
push
jecxz
rcrl
jmp
in
test
mov
sarb
cli
loop
aad
loopne
int
cmp
inc
jae
cmp
mov
cmp
aam
jno
jb
stos
fcmovb
inc
scas
or
lds
push
or
xorl
cmp
rorl
ds
sub
dec
arpl
add
adc
loope
test
movsl
jge
inc
int
test
xchg
xchg
jmp
cwtl
dec
inc
lock
test
jno
cmp
and
cs
xchg
nop
ljmp
leave
stc
sub
pop
mov
cmpsb
sbbb
push
push
pop
lahf
xor
aam
push
pop
cmp
xchg
adc
pop
in
cmp
inc
jae
add
jae
mov
lods
mov
sbb
ror
adc
mov
sub
out
outsb
mov
sahf
jae
add
xor
mov
lsl
pusha
call
xchg
push
add
pop
jg
and
or
iret
lcall
into
cmc
aaa
push
add
push
cmp
add
fs
mov
xlat
add
mov
lock
adc
leave
sbb
xchg
or
sub
add
cltd
dec
in
xchg
mov
xchg
leave
inc
mov
push
popf
jmp
movsb
mov
jne
cmp
add
in
jae
scas
push
pusha
out
push
aam
add
cwtl
sbb
xchg
jecxz
add
test
arpl
movsl
inc
add
add
inc
jno
cwtl
dec
push
psubsb
sub
mov
adc
mov
shll
mov
xchg
and
scas
out
xor
sub
push
mov
in
jl
dec
dec
ja
fsubrl
mov
jecxz
adc
mov
xor
shrl
scas
or
xchg
fwait
mov
sbbl
fsubrl
lret
rcr
test
inc
outsb
cmp
dec
loop
cs
loop
or
pop
movsl
addr16
ret
mov
sbb
xor
pop
in
add
cmp
mov
data16
or
jmp
loope
insb
and
cmp
xor
xor
scas
pop
mov
orb
add
and
mov
insb
call
pop
mov
add
dec
dec
xchg
add
dec
mov
pop
les
pop
jae
shlb
lcall
addr16
add
sub
call
fcoms
push
cs
push
cmc
jmp
into
or
mov
xor
rcrl
out
xchg
inc
in
aad
xlat
xor
fmul
sub
vpmacssdd
dec
out
rcrb
or
sbb
cmp
jb
push
xorps
dec
sub
xchg
cmp
adc
mov
xor
arpl
mov
push
dec
cmp
test
push
add
adc
cmp
sbb
adc
aam
or
pop
lock
xchg
add
xor
fwait
dec
rolb
and
incl
xchg
xor
ds
les
sbb
fsubrl
inc
movsb
fistpll
mov
int
push
sbb
push
lret
decl
das
add
adc
push
rorl
add
cmp
data16
add
pop
pop
shll
add
mov
xchg
addr16
add
sbb
rorb
pop
push
jmp
lcall
fwait
pop
jne
subl
push
loope
pop
movsb
aaa
xchg
xor
sbb
test
or
pop
sahf
push
cmp
cld
add
mov
and
inc
in
cs
sbb
inc
in
rorb
sub
fwait
ret
test
xchg
enter
sbb
add
sub
dec
pop
fstpl
xchg
inc
xchg
and
inc
jo
loope
rorl
sbb
jae
mov
and
pop
cmp
sbb
sub
test
pop
or
xorb
out
push
xor
inc
sbb
xchg
sbb
out
in
lret
mov
and
cmp
pop
xchg
mov
orb
pop
push
xor
sbb
xlat
das
fsubs
xlat
inc
pop
xor
loop
or
xchg
addb
xor
addr16
adc
cmc
andb
push
sbb
adc
jo
push
test
cmp
push
cs
xor
push
cmpsl
push
push
popf
or
test
or
mov
mov
mov
xchg
cmp
js
rclb
scas
push
and
test
add
cmc
loop
test
xor
jb
sub
cmp
xor
mov
push
cmpsb
xor
adcb
sub
rcl
mov
pop
mov
inc
imul
jne
es
arpl
jle
cmpb
lahf
fld1
addb
mov
daa
push
xor
cmp
dec
mov
jns
stos
lods
js
add
js
jmp
add
jge
jae
and
or
rcrl
negb
cmc
fucomp
test
inc
push
xlat
icebp
jg
in
inc
in
shlb
inc
jae
sbb
push
sub
cmp
push
jnp
mov
jo
jecxz
pop
test
addr16
sub
mov
mov
in
add
in
and
outsb
ss
add
or
bound
inc
inc
pusha
ljmp
fisubrl
loop
push
loop
xor
inc
push
cmp
icebp
stos
pop
push
add
pop
cmc
lret
into
inc
dec
or
push
xor
pop
lahf
ret
push
pop
dec
xchg
jb
mov
xor
mov
sub
das
mov
xor
stos
or
in
fiaddl
and
jns
add
xor
cmp
add
loopne
ja
push
pusha
andl
lahf
push
test
push
pop
mov
clc
aad
pushf
mov
out
push
mov
jecxz
jl
sbb
mov
mov
fisubl
jo
cmp
popa
mov
add
jne
mov
xchg
mov
inc
add
shrb
sbb
enter
cmp
sbb
jge
mov
push
push
fstpl
les
dec
sbb
fiaddl
dec
mov
mov
dec
lods
ret
lods
jae
jbe
push
test
int
popa
sbb
adcb
inc
or
scas
adc
lds
cmp
fnstsw
pop
inc
sub
push
mov
add
cmpsb
push
and
or
bound
in
or
push
lds
enter
mov
and
andb
jle
cmpsb
dec
cmpsb
adcl
pushf
leave
icebp
mov
mov
adc
hlt
cmpsl
mov
jecxz
cmp
add
out
popa
jo
xchg
xchg
divl
adc
mov
cltd
bound
push
and
imul
dec
add
lcall
jp
sbb
in
cld
xor
push
shrb
pop
aad
call
jb
jecxz
in
adc
or
out
es
hlt
scas
push
jne
jbe
mov
ss
js
push
mov
clc
pop
cmp
dec
dec
mov
push
jne
pop
sub
cmpsl
cmp
adc
dec
loope
leave
cmp
jmp
das
adc
mov
cmp
clc
addr16
je
xor
or
rcrb
es
push
in
sub
adc
jmp
jnp
aad
push
xchg
aam
je
push
sti
pop
pop
jns
clc
dec
add
addr16
mov
cmp
sbb
mov
incb
add
inc
adc
pushf
jmp
cwtl
sbb
test
inc
loope
push
int3
mov
xchg
mov
jmp
cmp
push
mov
pop
jb
or
loop
cmpsl
pop
cltd
data16
push
seta
rclb
add
push
les
sub
movsb
pop
loopne
aam
hlt
adc
ltr
fistpll
sub
or
sbb
mov
xor
sbb
lcall
push
pop
inc
push
ljmp
push
stos
jg
add
inc
add
sub
ret
or
cmp
stos
add
pop
es
test
inc
lock
insb
dec
stc
xchg
in
cwtl
adc
pop
loopne,pn
and
or
mov
lea
push
shl
sbb
add
mov
mov
push
pusha
ss
test
movb
sarl
add
cld
mov
loop
stos
pop
lods
pop
popa
cli
lret
pop
rcll
in
psubw
adc
pop
mov
shlb
cltd
push
cmp
test
in
testl
and
mov
sub
pop
push
sbb
inc
pop
add
jae
jg
mov
mov
xchg
pop
out
add
jge
inc
jmp
xor
rcr
adc
and
adc
cmp
out
iret
nop
lret
add
sbb
push
daa
xor
push
cmp
dec
push
pusha
mov
push
pushf
loope
adcl
sbb
cmpsl
or
push
or
enter
enter
in
pop
adc
cs
and
orb
loope
shlb
popf
jb
mov
xor
stc
add
add
rcl
add
addl
gs
sbb
inc
stos
mov
xor
pop
push
xchg
in
xor
mov
stos
push
cmp
dec
push
scas
add
mov
pop
addr16
leave
jg
mov
add
mov
mov
and
adc
pushl
mov
jno
arpl
dec
cmp
cmp
sub
push
or
mov
inc
xor
aam
add
loop
adc
mov
pop
loopne
fisubl
aaa
sub
cmp
outsb
das
cmp
add
out
sub
fsub
repnz
nop
or
jbe
pop
xor
out
sbb
mov
or
jo
add
cmp
and
mov
jg
mov
add
jb
clc
outsb
loope
out
xor
es
mov
push
aad
push
cmp
std
or
mov
loopne
and
sbb
outsl
inc
inc
int
dec
rclb
jb
insb
jp
ret
les
add
dec
add
enter
mov
dec
add
xchg
insl
add
inc
imul
jge
push
inc
test
in
adc
add
dec
pop
aas
rcll
inc
sbb
and
cld
mov
add
add
or
add
sbb
push
jnp
jnp
adc
ret
out
add
cltd
dec
jge
jne
lcall
adc
add
jbe
orb
jb
cwtl
test
notb
and
lods
jb
xor
shl
dec
stc
push
call
ret
repnz
adc
pop
cmc
xchg
stos
add
xor
mov
adc
mov
mov
add
hlt
jmp
cs
scas
mov
push
mov
sbb
mov
add
loope
in
push
mov
push
ret
imulb
or
pop
jge
insl
ja
into
mov
call
sub
stc
mov
xchg
jnp
adc
scas
push
or
cmpsb
mov
dec
pop
shr
pop
rclb
inc
stc
push
or
insb
mov
pop
pop
jns
mov
fnsave
xor
push
cmp
in
jo
cmp
dec
sbb
pop
cs
xchg
fsubrs
or
test
insl
sbb
loop
imul
and
sahf
pop
sub
cmp
test
sub
sbb
or
mov
and
dec
mov
adc
es
mov
push
test
xchg
add
push
inc
rolb
xor
mov
or
js
fsubrp
stos
cmpsb
and
sub
cmp
and
push
lret
add
or
mov
mov
xchg
sbb
sub
pushf
mov
add
mov
pop
xchg
loope
adc
stc
sub
mov
push
cmp
insb
mov
loop
fimull
scas
mov
clc
jmp
inc
dec
int
scas
popa
push
lea
popf
dec
mov
add
sahf
jle
xchg
cmp
jp
cmpl
iret
push
rcrl
xchg
mov
fmuls
lcall
test
adc
mull
inc
int3
ljmp
jp
data16
rclb
jb
xchg
mov
cmp
or
pusha
or
mov
jg
mov
xor
and
adc
popa
test
scas
lret
mov
pushf
push
sbb
sub
jp
mov
jbe
dec
ret
out
scas
je
mov
iret
cld
andl
test
cmp
or
push
mov
movsl
add
dec
adc
sub
xchg
icebp
stos
ljmp
or
das
jbe
test
push
sub
adc
mov
mov
addb
xor
dec
pop
rcrb
sbb
or
lds
hlt
sub
pushf
sub
ja
repz
sbb
enter
or
add
popf
sbb
loop
mov
jg
popf
xor
cmp
inc
xor
ret
jo
roll
add
lret
xor
shlb
inc
scas
ficoms
sbb
cmp
xlat
lcall
mov
adc
sahf
or
scas
or
stos
add
loop
push
pop
mov
scas
inc
mov
jmp
or
inc
scas
sahf
das
icebp
test
inc
sub
popa
test
mov
repnz
add
mov
jae
cmpb
rcll
and
push
jge
and
jp
xor
push
inc
or
lds
in
inc
jno
mov
push
cmp
fs
ret
add
std
decl
jecxz
ret
inc
insb
ja
inc
and
cmpsb
lret
mov
and
sbb
push
and
fcmovnu
adc
enter
jo
mov
in
subl
push
daa
sbb
xchg
adc
cs
inc
int
sub
test
push
push
mov
jmp
inc
in
cmp
shll
add
aam
stos
cltd
mov
mov
ja
cmp
insl
add
xchg
add
popf
push
inc
nop
xorl
push
or
add
test
push
dec
jnp
push
and
mov
inc
pop
push
in
icebp
push
push
fistpl
push
xor
lret
mov
inc
sub
push
pop
add
mov
pop
pusha
jae
ja
loopne
pop
scas
mov
mov
push
scas
jmp
pop
xor
mov
add
dec
repnz
sbb
cmp
mov
cltd
mov
add
lcall
pop
xlat
or
xorl
test
aas
in
enter
xor
or
sarb
in
adc
fidivl
push
ret
jb
xorb
loop
push
inc
leave
orb
mov
andb
call
xadd
add
cmp
inc
push
inc
repnz
mov
push
popa
aad
or
xor
mov
jae
inc
aam
or
add
dec
cmpsl
cmp
cmp
push
and
hlt
addl
rol
aam
push
xor
cmpsl
mov
add
inc
mov
scas
pop
fildl
mov
lcall
mov
lcall
cmp
mov
je
and
or
or
aas
test
shrb
xchg
call
sarb
add
loop
daa
pushf
int
rcrl
adc
and
adc
ljmp
aam
jo
add
pop
sbb
jbe
cmc
sbb
or
push
xchg
pop
insb
js
xchg
push
ljmp
xor
js,pn
adcl
into
popa
dec
adc
cmp
gs
mov
cmp
and
jg
arpl
mov
add
cmp
jne
cpuid
faddp
xor
xchg
shll
dec
xor
popa
in
mov
mov
loopne
cmp
sbb
mov
loope
push
cwtl
adc
mov
jge
out
in
push
dec
stos
xchg
pop
or
jg
mov
cmp
xchg
add
inc
out
hlt
test
jo
xchg
push
aad
mov
mov
daa
push
mov
popa
add
outsb
jb
push
inc
push
pop
test
mov
inc
ror
call
xchg
lahf
mov
pop
add
sar
jb
out
mov
sbb
cmp
sbb
rcll
ljmp
daa
jb
int
dec
out
test
cli
push
ret
inc
loope
or
cmp
jg
adc
repnz
cmp
or
gs
ret
enter
add
popf
dec
push
loopne
pop
xor
and
adc
inc
pop
cltd
fidivl
adc
dec
push
pop
mov
inc
aad
mov
xchg
mov
pop
addb
js
stos
roll
int
bound
mov
add
push
mov
adc
adc
ljmp
ret
mov
push
popa
sub
movb
in
xchg
repz
loopne
mov
and
and
pop
fbstp
cmp
xor
adc
fwait
pushf
jbe
push
xchg
xor
jmp
dec
adc
adc
loop
cmp
test
sbb
sub
in
lea
orb
cmp
xor
mov
in
mov
fisubl
fldenv
push
xchg
xlat
or
cmp
xchg
insl
ret
dec
mov
inc
xor
jo
mov
push
addl
mov
xor
mov
push
loopne
shlb
push
lock
pop
insb
das
push
add
xor
push
outsl
bound
xor
aaa
jne
cmp
inc
and
popa
subb
xor
lea
jo
lcall
es
dec
or
jo
push
mov
clc
test
cmp
repz
pop
inc
push
push
loopne
or
and
jnp
shlb
pop
scas
stos
ja
inc
adc
inc
mov
int
add
adc
cmp
mov
cmp
or
dec
mov
jmp
rolb
xchg
aas
xor
inc
ljmp
mov
inc
nop
stc
sbb
stos
imul
jae
jo
cmp
adc
adc
cmp
popa
add
inc
push
sbb
push
inc
mov
dec
xchg
push
mov
nop
aaa
aaa
add
inc
mov
jnp
gs
out
loope
jo
das
test
or
inc
dec
dec
mov
or
jb
cld
aas
mov
sub
daa
cmp
in
mov
jnp
mov
mov
cli
movsb
xchg
sub
xor
cmp
out
nop
js
daa
stc
je
xor
pop
pusha
or
adc
mov
cmpsb
push
enter
xor
xchg
push
jmp
pushf
and
mov
scas
xor
adcl
mov
push
push
add
push
or
pop
push
inc
cmp
xor
or
insb
inc
cwtl
jb
jp
insb
lea
inc
imul
loopne
test
jp
jne
test
lods
jnp
inc
hlt
xor
sbb
cmp
jnp
inc
jae
push
xchg
xor
cmp
fwait
mov
xchg
xchg
andl
out
pushf
fdivrs
jo
ljmp
push
xor
out
test
adcb
or
sbb
lcall
add
inc
shll
test
ljmp
test
roll
inc
scas
push
fidivrs
inc
pop
push
sbb
adc
xchg
std
dec
xchg
mov
rclb
sub
push
sub
ret
mov
jle
push
adc
ret
mov
imul
mov
adc
call
add
xchg
add
push
pop
sbb
incl
fsts
sub
and
and
cmp
or
xchg
cld
xor
xor
push
adc
stos
imul
enter
jo
cmp
inc
ret
in
cmp
int
outsb
test
shrb
jb
stos
push
shr
aaa
xor
mov
jmp
sub
das
inc
xlat
sbb
enter
mov
scas
test
repnz
and
daa
mov
adc
push
adc
push
inc
sbb
jno
dec
lea
cmp
subb
in
and
les
add
test
dec
arpl
push
invd
inc
xchg
out
lock
scas
int
rorl
inc
call
sbb
dec
loop
push
cmp
movsl
cmp
nop
in
leave
mov
adc
sub
push
cwtl
jp
mov
popf
pop
xor
xor
mov
leave
push
adc
pusha
mov
cmp
loop
mov
adc
stos
mov
out
cmp
mov
stos
sbb
inc
xchg
push
cmpsb
nop
fcoms
je
daa
cmpsl
xchg
add
add
pop
jns
aam
add
mov
mov
inc
int3
push
mov
push
popf
sub
mov
mov
pop
adc
fldt
pop
push
xchg
sub
and
test
jb
xchg
popa
jg
rclb
in
push
mov
or
or
or
addr16
push
enter
push
push
cltd
adc
or
push
scas
push
push
push
xchg
int
push
xor
or
mov
inc
mov
loop
and
pusha
sub
loopne
pop
addl
or
and
rolb
xchg
stos
xor
test
inc
sbb
pop
cmp
in
pop
mov
inc
xor
jnp
or
lds
jae
cmp
in
mov
sub
scas
cmp
push
jae
jb
inc
clc
adc
xchg
push
pop
jne
mov
pushf
and
mov
leave
jne
inc
push
inc
mov
mov
add
push
lcall
xor
dec
xchg
sbb
cmp
adcl
mov
dec
push
xor
popa
mov
mov
pop
pusha
lret
pop
in
subl
or
inc
mov
lods
fyl2xp1
ss
push
pop
test
testl
leave
out
jb
xchg
mov
loop
ret
push
adc
test
and
pop
jne
mov
dec
add
push
int
test
shll
out
sar
xchg
test
nop
insl
aas
in
je
adc
in
pop
sub
or
testl
lret
subps
jno
or
and
test
and
bound
or
pop
or
js
xor
in
push
push
add
adc
push
add
push
pushf
out
pop
mov
das
daa
sub
scas
addl
push
xor
pop
outsb
cmp
add
push
data16
xor
or
in
unpcklps
adc
pop
ja
testb
jb
je
cltd
loopne
xor
pop
je
cmpb
adc
pop
loop
nop
jae
push
in
dec
ja
push
jecxz
and
xor
adc
mov
mov
ljmp
andb
sub
xchg
daa
or
pop
jae
sub
pop
adc
fs
adc
mov
cmpsl
jmp
inc
jae
mov
and
mov
loopne
test
aam
xchg
pop
xchg
fs
pop
push
jecxz
sbb
stos
or
mov
es
inc
xor
adc
mov
andl
gs
pop
adc
cwtl
xor
test
jmp
lods
xor
xor
fnstsw
std
mov
clc
gs
repnz
push
sbb
scas
out
inc
inc
insl
or
dec
fisubrl
push
mov
mov
adc
adc
pop
mov
xchg
js
mov
rolb
arpl
cltd
enter
and
push
sbb
daa
add
repnz
add
xchg
cmpb
jo
mov
ljmp
sub
sub
mov
icebp
or
sbb
adc
adcl
out
mov
cmpsb
nop
das
sbb
mov
cwtl
or
cmp
push
loopne
in
in
mov
push
std
mov
jo
adc
sub
aam
addr16
jno
js
add
cmp
xor
push
sbb
adc
ret
adc
lock
out
xchg
jne
push
inc
push
pop
scas
add
out
mov
push
jl
xor
xchg
add
push
es
in
or
mov
notb
popf
out
cwtl
pop
sbbb
push
inc
jae
cmp
dec
push
ljmp
pop
scas
lcall
sbb
mov
pop
xchg
pusha
and
xchg
stos
inc
mov
inc
gs
fistpl
movsb
xchg
stos
push
push
add
cmpsl
ljmp
push
jae
into
sahf
or
and
ds
das
mov
cmp
cmp
cmp
push
ret
sub
loopne
popf
mov
push
popa
loop
jbe
pushf
orl
xchg
aas
leave
testb
call
daa
and
ret
into
mov
push
and
scas
push
andl
xchg
adc
xchg
lret
adc
mov
add
jb
mov
or
or
cmp
in
push
adcb
hlt
dec
sbb
mov
mov
push
or
pop
pop
adc
lcall
add
pop
cmp
fwait
lea
sbb
in
pop
push
int
or
pop
lock
mov
inc
mov
adc
sub
or
adc
mov
scas
icebp
pop
je
ret
ds
data16
ret
stos
jnp
and
imul
inc
mov
aam
adc
jo
mov
lea
addr16
leave
dec
mov
call
adc
int3
inc
add
ja
sbb
inc
jne
std
or
cmpsl
cld
xchg
outsl
mov
or
jo
sahf
mov
xchg
aaa
leave
sub
add
lcall
test
push
icebp
loopne
inc
sbb
xchg
js
dec
and
aaa
adc
jg
mov
lret
testb
loope
push
ds
movsl
add
sbb
push
xor
dec
cmc
mov
pop
stos
pop
gs
add
or
jo
push
icebp
mov
adc
add
loope
inc
fwait
cltd
stos
inc
mov
push
add
push
jle
test
adcl
idivl
inc
pop
pop
cmp
je
stc
mov
xchg
cmp
sub
shlb
push
mov
aad
shrl
ret
rclb
jbe
xor
pusha
or
or
mov
pop
cmp
inc
mov
xor
in
push
xor
xchg
out
pop
icebp
sub
jbe
sbb
or
outsb
pop
lret
add
and
jl
ja
dec
add
loopne
mov
sbb
jns
xor
push
ret
shrl
pop
push
jae
sbb
add
xchg
testl
push
inc
lcall
add
xor
push
jbe
push
adc
bound
pop
or
xchg
jae
in
xlat
dec
add
xor
roll
mov
bound
xor
push
pop
cmp
sbb
sub
mov
sub
jno
aaa
and
dec
and
mov
and
push
push
cwtl
or
mov
filds
jno
jo
jo
aad
add
mov
or
fs
fdivl
and
sub
pop
cs
ret
cmp
scas
cmp
xchg
xor
jne
sub
in
mov
push
inc
daa
cs
scas
mov
jo
or
lret
inc
out
inc
add
cltd
sub
data16
sbb
mov
mov
sbb
lcall
mov
enter
xchg
push
sbb
shl
add
push
dec
inc
fisttpll
or
or
nop
xor
addr16
stos
loop
fistps
cltd
fs
xor
pop
adc
xor
push
inc
and
loope
jb
in
loope
inc
sbb
int
or
insl
repnz
pop
push
aad
xchg
and
cmp
pusha
mov
imul
mov
test
add
sbb
xor
ss
push
in
and
sub
push
loope
or
push
dec
mov
das
add
shll
pop
or
fmul
test
mov
sbb
push
js
xchg
mov
inc
and
imul
mov
xchg
jae
xlat
or
push
and
xchg
and
mov
loope
add
nop
xor
push
call
shrb
das
adc
mov
xchg
ja
and
adc
je
add
ljmp
lcall
aam
add
cmp
xchg
sub
cmp
sti
sbb
xchg
mov
ret
sbb
xor
or
xor
xchg
mov
roll
sbb
pop
adc
jecxz
adc
mov
rol
or
pop
mov
fwait
add
mov
mov
xor
shlb
mov
incl
aam
lret
xchg
add
sbb
sbb
addr16
neg
loop
nop
ret
fdivs
push
or
scas
add
and
cwtl
sbb
out
popa
popf
lret
add
ret
add
jne
add
insb
pusha
rclb
inc
sbb
sbb
xchg
jo
mov
les
or
jmp
push
test
jb
mov
mov
pop
push
inc
daa
or
cmp
cwtl
in
aam
mov
cmp
rol
out
cmp
push
inc
mov
lods
and
mov
test
push
adc
jb
roll
mov
jns
stos
ret
sbb
xor
xchg
inc
jnp
xchg
sti
mov
sbb
js
in
daa
dec
mov
jno
pop
adc
sub
cwtl
orl
sbb
and
mov
ret
and
dec
pop
xor
cmp
cwtl
pop
gs
pop
pusha
inc
jecxz
call
fldenv
and
add
xor
iret
cmp
cmp
inc
iret
lock
sbbl
in
pop
xchg
psllw
add
in
push
cltd
xor
mov
mov
inc
ljmp
push
mov
loopne
adc
rorb
inc
loop
add
bound
mov
out
xor
test
lcall
jnp
into
sub
fs
int
gs
cmp
daa
and
add
mov
push
int3
pop
addl
mov
mov
shll
sbb
push
insb
test
lret
adc
leave
decb
bound
repnz
or
and
pop
cmpl
dec
lcall
push
push
mov
push
xchg
scas
and
in
or
cmp
ljmp
jmp
jo
cmp
push
les
and
shr
mov
or
add
push
add
rorl
cmpsl
and
or
add
adc
dec
xchg
test
pop
jo
inc
mov
addr16
ret
cwtl
and
scas
fdivr
ljmp
test
fabs
mov
push
loopne
sbb
and
mov
and
inc
xor
cmp
inc
test
cmp
xchg
add
test
push
mov
fistpll
aaa
add
add
sbb
push
je
fwait
cmp
xorl
pop
stos
xorl
fldt
cmp
add
sahf
pop
mov
xor
xchg
dec
mov
stos
or
xchg
hlt
lea
or
jo
inc
add
enter
lods
pushf
xor
inc
out
mov
stos
or
cmp
adc
scas
out
in
dec
mov
push
mov
loop
pop
add
call
popa
imul
push
out
and
dec
adc
mov
stos
cltd
or
ret
push
add
inc
mov
sub
iret
cmp
outsb
push
scas
jo
daa
lret
fcoms
cmpsl
add
and
xor
mov
dec
ret
xor
xchg
cmpl
lods
insb
imul
mov
into
push
inc
jae
dec
sbb
stos
jnp
arpl
xchg
mov
add
cltd
sti
movsl
mov
mov
sub
sub
mov
adc
pushf
or
inc
jnp
in
aam
xor
pop
mov
ljmp
shll
jo
cmpsb
and
sbb
out
cmc
push
pop
out
pusha
jl
adc
mov
add
xor
cwtl
pop
adc
inc
test
into
inc
negb
or
dec
aam
mov
insl
and
mov
es
push
mov
icebp
mov
jnp
xor
xor
sbb
sbb
add
inc
cmc
xor
jb
cmpsb
xor
mov
daa
sti
mov
insl
xor
lret
or
mov
mov
popf
cmp
add
outsl
sub
test
loope
mov
int
lret
shlb
adc
jo
in
movsl
insb
cmp
mov
jmp
xchg
jle
pop
mov
inc
adc
shlb
mov
jmp
lods
loope
ja
clc
or
test
pop
fistpl
xchg
nop
sub
jp
loop
pop
mov
xchg
ret
xor
adc
add
fadd
push
pop
add
mov
pop
int
pop
inc
jo
stos
xchg
inc
in
mov
cmpsb
cs
test
xor
cmp
and
and
jecxz
adc
cmp
ret
xor
dec
pop
rcll
sub
movsl
popa
xor
mov
mov
dec
shll
push
enter
push
fdivrl
lcall
and
rorl
cmp
jmp
cmp
mov
jb
sti
xchg
pop
jae
test
rorl
jb
ficompl
add
ss
add
add
xchg
adc
jne
push
mov
cwtl
or
test
test
fyl2xp1
mov
mov
int
mov
xor
sbb
add
je
stc
dec
clc
dec
or
mov
xchg
js
cmp
call
mov
nop
and
fs
xchg
lods
enter
ds
mov
cmpsl
mulb
lods
cltd
sbb
push
inc
ret
sub
dec
loope
lret
sbb
lcall
mov
xor
push
loopne
xchg
mov
push
loopne
push
stos
inc
out
and
push
shll
addb
inc
xlat
mov
add
into
cs
insb
icebp
mov
pusha
loop
and
es
ret
and
jp
data16
add
shlb
jp
cmp
push
je
cwtl
pop
push
loopne
sbb
pushf
jo
or
js
or
add
sbb
xchg
ret
andb
mov
jae
push
add
mov
and
call
inc
rolb
add
inc
loopne
push
mov
xor
ljmp
pop
cmp
jo
int3
std
sbb
jae
insl
jae
dec
and
mov
enter
jo
dec
cltd
movsb
jo
or
shrl
pop
cmpsb
add
sbb
mov
ret
adc
inc
cmp
cs
inc
ja
pushf
dec
les
pusha
jb
movsl
jnp
pop
cmp
jnp
pushf
sbb
adcl
xchg
test
rclb
mov
xor
decl
push
sbb
adcl
jns
xchg
sub
test
or
test
jle
add
xchg
sub
xchg
sub
rcll
sub
mov
add
push
cmp
push
xchg
push
jnp
mov
pop
cmp
adc
lret
and
push
fwait
lret
in
out
inc
fidivrs
push
in
rorl
cmp
sbb
adc
xor
push
adc
lcall
test
xchg
or
enter
nop
add
jg
test
fwait
jp
add
jmp
scas
or
imul
popa
cmp
pop
mov
add
pop
call
mov
or
fsubr
jge
mov
push
xchg
jo
rclb
sti
dec
sti
inc
aaa
dec
mov
mov
in
and
pop
gs
out
push
inc
or
sub
and
xchg
push
mov
imul
outsb
sbb
add
inc
or
mov
and
cmpsl
and
push
and
mov
sub
dec
int
test
scas
or
and
jb
sbb
push
es
push
mov
lds
insw
add
call
push
mov
cmp
outsl
inc
xchg
pop
mov
pushf
add
es
and
dec
jne
insl
or
mov
add
xor
js
ljmp
xorb
cmp
stos
js
into
push
xor
pop
daa
pop
stc
jae
dec
add
jno
subb
xchg
sbbl
add
adc
cmp
xchg
jmp
mov
mov
inc
or
in
dec
mov
push
cmp
sbb
mov
stos
cltd
jo
push
dec
push
inc
push
add
test
ret
adc
sub
mov
mov
das
mov
jb
fwait
stos
jae
dec
add
and
cmp
mov
es
push
sub
ljmp
or
dec
dec
jg
mov
add
jb
frstor
loope
push
aad
push
push
sub
push
adc
sbb
cmp
lds
pop
sub
sub
js
cs
dec
out
push
jo
push
mov
in
mov
pop
fs
jo
fisubrl
outsb
push
pop
aam
cmc
jb
imul
or
add
xor
add
in
aas
xor
mov
xchg
jo
cs
loop
popf
lret
and
or
ret
mov
or
loope
push
test
push
jae
sbb
xchg
ret
xor
pop
adc
js
out
aad
or
aad
popa
push
cmpsb
push
inc
into
ljmp
add
in
push
cmp
jge
repnz
pop
cwtl
out
rol
popf
sub
insl
pop
mov
push
xlat
mov
xchg
jne
mov
popf
and
cmpsb
cli
and
push
test
sub
ss
inc
and
mov
jne
or
pusha
icebp
mov
adc
nop
jae
popf
jb
sub
mov
ss
or
jnp
cmpsl
xchg
cmp
popa
fidivs
pop
loopne
adcl
addb
jg
inc
xchg
jp
aas
dec
lock
cmp
or
decl
push
int3
xor
and
sub
inc
sub
bound
cmc
add
cmp
pop
cwtl
pusha
xorb
sbb
jb
and
cmp
rclb
mov
mov
xor
aam
cmp
pop
test
inc
sub
or
hlt
std
jnp
pop
scas
mov
rcr
mov
js
ret
push
es
repnz
pop
xchg
loope
into
imul
cs
orl
or
lods
and
mov
mov
scas
enter
jg
jbe
scas
or
in
cltd
filds
mov
xlat
or
add
adc
cmp
cld
xor
enter
and
cmp
add
rcll
add
inc
push
xor
cmp
lret
pop
mov
jle
xor
jb
xor
imull
pop
mov
add
or
cld
popa
and
mov
pushf
jbe
xchg
and
push
xlat
or
mov
int
xchg
and
sub
xor
push
xor
adc
pop
addl
mov
push
and
inc
clc
or
push
xchg
gs
or
jb
lea
xchg
pushf
aaa
pop
loope
or
lea
adc
cld
mov
mov
cmpsl
mov
outsb
gs
xor
cs
insb
and
push
adc
jbe
nop
xorl
cwtl
and
xchg
add
push
dec
daa
xor
call
and
jp
inc
pusha
ss
pop
adc
lahf
xor
pusha
add
xor
scas
sbb
and
mov
mov
push
jecxz
stc
rcl
idivl
add
jp
scas
pop
xchg
das
test
cmp
xchg
mov
push
cmp
cs
jbe
jo
test
add
fdivl
mov
outsl
mov
loope
psubusb
inc
sbb
out
xchg
pushl
push
lods
rcl
pushf
xlat
int3
push
bound
orw
mov
add
vpunpckhbw
mov
fiaddl
mov
adc
enter
testb
cltd
out
cmp
sub
lock
jo
inc
jnp
in
jp
outsb
fs
xchg
mov
and
adc
xor
decb
inc
in
int
push
add
sbb
pop
jae
pushf
lcall
adc
orb
add
lods
push
push
add
nop
inc
cmpsl
adc
dec
cwtl
mov
and
ret
jo
scas
add
in
adc
sbb
xor
rolb
pusha
and
sbb
push
and
pushl
lret
pop
lods
popa
lret
cmp
pusha
stos
cmp
push
es
cmp
or
lcall
in
inc
xor
cmp
outsb
xchg
dec
gs
jbe
push
push
cltd
test
xor
daa
mov
mov
loopne
repz
pop
push
out
xor
sub
sub
push
sbb
lock
lret
sub
test
xchg
add
add
in
add
rol
xchg
adc
xor
cmp
and
push
and
sub
test
mov
push
xchg
idivl
jb
jb
cwtl
mov
lret
adc
pop
push
pusha
test
popf
cmpb
int
xorl
jo
inc
mov
das
out
subl
rolb
in
sbb
mov
pushf
jecxz
sbb
xchg
push
mov
jno
enter
lret
dec
adc
ret
pop
push
mov
sbbb
adc
ljmp
call
dec
dec
push
push
mov
icebp
sub
mov
call
clc
lods
sbb
add
lret
mov
xchg
lods
leave
xchg
or
inc
cmc
xor
push
xchg
cmpsl
xlat
mov
xchg
cwtl
hlt
mov
sbb
push
cltd
js
and
fbld
enter
cmp
push
int
pop
mov
cmp
push
sbb
cmc
gs
adc
stc
push
mov
fnstcw
push
pop
lret
and
pop
nop
ret
add
push
xchg
test
xor
sbb
loopne
jp
pop
jns
in
pusha
jb
jmp
orb
push
sbb
xor
push
mov
xchg
insl
xchg
xchg
jno
lahf
xor
add
and
adc
rolb
xchg
or
in
push
mov
loope
push
insl
xchg
push
stos
out
inc
test
or
stos
pop
inc
mov
adc
mov
stos
stc
fcompl
fucom
sbb
ljmp
stos
in
dec
lret
stos
lock
xchg
jl
add
adc
sub
push
popa
enter
cmpsb
adc
mov
or
mov
pop
add
shll
xor
inc
push
nop
cmp
xchg
mov
addb
inc
mov
loop
sub
out
or
in
add
adcl
adc
inc
push
push
loop
or
jg
scas
sub
and
nop
and
sarl
shlb
jae
cmp
add
adc
pusha
cmpl
mov
test
mov
dec
bound
int
mov
cmp
xor
sub
dec
or
and
call
roll
add
je
jb
outsl
arpl
fs
arpl
insl
gs
push
gs
push
outsl
pop
js
inc
pop
negl
push
jb
jbe
or
insb
cmp
neg
inc
push
je
arpl
or
cs
jo
outsb
out
fcomi
insl
xor
add
je
das
imull
cs
imul
arpl
fcom
mov
gs
imul
sub
imul
dec
add
insl
sti
call
stos
gs
push
push
ja
push
cmp
divl
sbb
push
dec
push
cwtl
mov
inc
jo
inc
imul
insb
arpl
outsb
addr16
push
outsl
jb
mov
rcll
jp
add
mov
jne
je
mov
xor
out
ds
inc
inc
push
out
insb
jne
push
loopne
mov
scas
inc
jecxz
push
push
insb
mov
push
imul
jns
fsubrs
inc
jo
popaw
mov
dec
inc
dec
inc
adc
pop
inc
mov
pop
inc
imul
sbb
shlb
jo
sbb
jb
cmp
insb
rclb
popa
fwait
cmp
imul
insb
pop
jae
jbe
inc
iret
lea
jne
inc
ret
pop
ror
outsw
or
outsb
xchg
mov
or
pop
insb
dec
mov
jns
mov
fisttpl
inc
adc
sbb
fisttpl
xchg
jge
dec
push
ret
fs
imul
xchg
lods
or
push
les
jnp
push
pop
jne
inc
xchg
cmpl
std
mov
mov
outsb
push
dec
out
imul
outsb
push
imul
andl
push
sub
pop
ret
pop
inc
dec
bound
jae
mov
sbb
or
clc
pop
xchg
jb
fs
fs
add
jo
fwait
mov
sbb
mov
mov
jg
in
inc
clc
popa
bound
and
sbb
xchg
hlt
outsl
pop
mov
or
jns
pop
push
das
insl
jns
jo
popf
outsl
jae
insl
ret
vmwrite
sarb
jbe
subl
out
pop
in
inc
jns
outsl
add
jmp
fidivrl
mov
js
jo
xchg
mov
mov
jnp
inc
push
dec
addr16
cltd
arpl
jg
fs
insl
add
or
inc
rcll
jne
jp
mov
dec
jmp
pop
jbe
sub
inc
push
rcrb
ja
ficomps
fcmove
sti
sub
bound
cmp
pop
je
jae
dec
sub
jne
push
inc
cld
jne
pop
leave
sbb
outsl
jle
testb
insb
arpl
cltd
imul
bound
xchg
jns
pop
xchg
inc
push
jo
jmp
ds
sbb
add
fmull
jo
addr16
dec
push
lea
xor
add
inc
mov
xchg
mov
mov
or
pop
divb
xor
xlat
jp
inc
sub
push
daa
out
and
mov
lds
scas
insl
lahf
mov
outsl
pop
popa
jns
je
mov
inc
xor
ss
lods
arpl
mov
aaa
je
jo
push
imul
ret
orl
insb
ja
ret
cmpsl
lahf
adc
outsl
outsl
leave
adc
or
clts
sub
pop
mov
pop
andb
jns
andl
je
jae
pop
fcomp
fcompl
and
testb
test
popa
je
outsb
sbb
or
and
jo
popf
jne
sub
push
xchg
inc
mov
in
jb
inc
pop
or
leave
lret
leave
add
jo
push
sub
in
es
dec
mov
pop
fimuls
in
or
js
ret
push
xor
xchg
int
inc
adc
xchg
pop
xor
into
test
push
and
rcrl
ret
and
decl
jo
xor
insb
sub
sub
ss
mov
jbe
push
push
sbb
sbb
cmp
outsl
push
testb
sbb
dec
mov
mov
mov
imul
inc
arpl
jb
cmp
dec
cli
fnstsw
push
dec
dec
dec
dec
push
or
insl
push
jns
xor
sbb
lods
dec
and
inc
test
fidivrl
jae
outsl
jo
pop
lods
and
btr
rolb
jb
jno
test
les
popa
inc
test
ret
and
inc
pop
and
inc
jmp
leave
mov
dec
lods
fwait
xor
and
dec
dec
jb
je
imul
mov
lcall
jns
pusha
movsl
out
xchg
inc
push
mov
shll
pop
inc
daa
insl
cwtl
sbb
mov
add
fwait
sbb
or
push
imul
and
dec
push
sbb
push
lods
sbb
or
push
pop
inc
daa
addb
sbb
inc
push
frstor
inc
sub
je
fmuls
xchg
fidivs
sub
aad
sub
jne
inc
cld
pop
dec
and
inc
add
mov
cmp
ljmp
push
lcall
arpl
jnp
and
insb
leave
xchg
xchg
mov
push
push
push
add
sbb
bound
sub
imulb
sbb
roll
jle
push
jecxz
or
jno
scas
mov
js
push
cmp
stc
mov
mov
out
ss
sub
sub
imul
in
or
mov
add
push
jb
add
jbe
test
cmp
sbb
mov
sub
je
or
or
popf
es
and
dec
mov
push
sti
mov
fadds
je
adc
in
sbb
into
jo
cmp
arpl
lret
push
or
sbb
pop
mov
andl
imul
adcl
je
and
xchg
imull
cmp
sbb
lock
adc
in
std
inc
pop
push
imul
mov
sub
outsl
arpl
jmp
lock
or
xlat
jl
pop
add
add
push
add
add
xor
fnsave
add
or
lock
inc
adc
sub
mov
add
sub
les
sbb
pop
dec
cmp
in
mov
dec
and
lock
test
sbb
cmp
sti
and
adc
pop
pop
lock
je
fsubrs
add
push
or
and
mov
inc
arpl
sbb
mov
xor
dec
mov
adc
lock
add
fistpl
inc
adc
push
sub
clc
push
and
mov
and
dec
popf
push
cwtl
cs
fstp
loope
pop
and
xor
add
cmp
jg
lock
add
cmp
pop
sbb
add
into
add
pop
or
and
lock
jmp
fs
idivb
add
push
xchg
dec
pop
fstps
sbb
push
cmp
into
lretw
inc
push
sbb
ss
arpl
sysret
add
sbb
in
rorb
dec
fcoms
adc
stos
sub
xor
popf
xor
sub
sub
cmp
outsb
ret
push
or
testb
arpl
mov
jae
dec
rorl
and
push
xor
pop
add
dec
jae
add
fmulp
push
add
xor
and
jecxz
lea
or
inc
sbb
lock
cmpsb
outsb
mov
fisubs
push
lock
add
daa
xchg
es
fldln2
in
mov
and
add
pop
sub
arpl
add
fisttpl
sub
shll
aam
add
and
sidtl
adc
mov
push
add
xor
or
cmovo
outsb
or
add
add
ss
or
push
sub
pop
outsl
jnp
dec
push
add
rorb
ss
xchg
inc
lret
loopne
add
add
fiadds
adc
cld
add
mov
int3
xlat
aam
jmp
pop
into
xchg
les
and
adc
in
movsl
add
sti
idivl
add
cs
shlb
jecxz
in
rol
movq
jb
das
add
jae
add
pusha
gs
iret
cmpsb
movsb
jmp
or
std
sbb
addr16
in
leave
jle
add
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
hlt
mov
mov
lret
pop
outsb
cmp
xchg
mulb
cmpsb
and
inc
cmp
jecxz
or
jge
sub
inc
lods
test
mov
push
xlat
lds
push
sbb
or
sbb
movsb
inc
push
imul
sbb
jp
mov
fiadds
je
mov
cmp
in
cmc
fdivp
popa
push
or
in
ficomps
insl
pop
mov
test
or
lret
cmp
shl
add
adc
cld
sbb
adc
movsl
push
sbb
mov
mov
scas
push
xchg
sub
mov
jp
jae
test
lods
inc
add
shll
sub
add
test
cmp
inc
pop
or
outsl
cmp
push
jl
xor
test
pushf
aas
fistpl
pop
push
stc
xchg
sub
out
aad
lret
xchg
inc
pusha
dec
in
add
fcoms
add
insb
ljmp
jge
ds
xor
xorb
sahf
adc
cmc
lahf
sbb
in
shlb
jno
mov
enter
dec
push
mov
mov
lret
cwtl
lahf
inc
cmpb
push
add
aaa
scas
add
sahf
push
jle
dec
or
mov
jno
mov
pop
in
and
repz
adc
jecxz
mov
fs
jge
inc
fisubl
imul
sbb
cli
mov
dec
mov
sti
aas
rorb
repnz
inc
pop
or
mov
xor
sbb
leave
fs
daa
mov
and
xchg
arpl
dec
lret
cmp
test
xor
test
inc
imul
.byte
.byte
cltd
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
xor
add
add
add
add
pop
loopne
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
call
add
add
xor
cmp
xor
xor
inc
add
add
add
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
add
je
and
inc
add
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
imul
add
insb
add
outsb
add
and
push
add
imul
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
add
outsb
add
add
add
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jbe
add
add
add
imul
and
xor
cmp
cmp
cmp
sub
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
outsb
add
jb
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
jb
popa
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
inc
xor
add
add
pusha
xor
add
xor
add
xor
add
add
add
add
fdivs
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
jae
push
add
add
add
or
add
adc
