std
jmp
test
movsb
xor
imul
roll
add
add
mov
adc
adc
andb
add
packssdw
fwait
in
mov
sbb
push
addr16
and
add
sahf
mov
cmp
and
or
nop
or
fwait
stc
cs
adcb
inc
adc
add
adc
imul
nop
inc
outsl
adc
push
inc
push
mov
xor
outsl
add
xchg
jbe
ss
imul
inc
into
outsb
in
in
add
dec
gs
sbb
scas
or
lds
xor
mov
jae
lahf
pop
dec
pop
pop
leave
ret
std
divl
inc
add
les
adc
ret
jnp
fsubrs
adc
xor
pop
adc
add
cmp
sub
pop
ret
das
and
lods
jg
and
jae
mov
cwtl
jg
and
add
arpl
jbe
cltd
mov
push
cmpl
shll
adc
inc
push
lods
ds
cmpb
xorb
cmp
jno
cmp
sbb
test
pop
mov
js
icebp
repz
ss
mov
jg
xchg
leave
mov
mov
add
mov
dec
dec
jbe
add
cmp
pop
jno
incl
leave
or
or
dec
xchg
sub
popf
int
jmp
inc
in
adc
push
pushl
add
pop
xchg
mov
outsl
fs
loopne
out
sbb
fnsave
out
pop
lcall
decl
adcb
fistpl
adc
and
mov
sub
or
mov
outsb
mov
in
push
add
mov
add
mov
cmp
inc
imul
in
inc
es
pushf
hlt
or
movsl
or
push
add
imul
call
imul
xor
or
lret
add
imul
jmp
ljmp
jmp
shlb
mov
dec
mov
xchg
std
adc
sti
mov
inc
add
incl
mov
pop
inc
sub
and
cmpl
add
ljmp
daa
in
add
es
mov
mov
jge
test
mov
lcall
lahf
jp
cmpsb
ret
push
push
rcrb
pop
jmp
imul
enter
lea
cmp
mov
ljmp
push
aas
and
fcomps
rcr
mov
sub
adcb
pop
clc
decl
mov
add
movsb
push
sbb
inc
das
mov
aam
lret
test
mov
dec
shll
push
pop
cmp
lahf
mov
scas
sbb
add
and
rolb
xchg
clc
incl
sub
jl
outsb
pop
mov
sbb
sub
sbb
inc
mov
lcall
lcall
iret
or
xor
xor
pop
xchg
and
movsb
inc
add
decl
and
sbb
and
add
and
mov
dec
mov
popf
call
push
inc
neg
sbb
xor
ret
scas
sbb
pushl
inc
pop
and
jmp
neg
not
dec
push
or
push
push
add
jbe
adc
aas
jae
add
dec
push
into
movb
adc
sbb
enter
in
stc
cmp
adc
leave
or
jbe
iret
add
test
pop
mov
sub
test
pop
fsub
push
outsl
or
addb
in
pop
repnz
adc
xchg
pop
xor
push
loope
cs
adc
sbb
mov
jbe
insl
push
outsb
pop
push
or
inc
es
gs
sbb
push
adc
fs
add
gs
jb
les
cmpl
add
add
sbb
mov
or
stc
fldt
aaa
cmp
mov
test
iret
pushf
cld
pop
dec
add
add
mov
or
add
sbb
mov
adcl
push
ret
incl
and
decl
sbb
xor
adc
sbb
sbb
rol
xchg
jp
std
out
jmp
mov
xchg
xchg
dec
mov
mov
cmp
addr16
ljmp
leave
xor
add
nop
jae
and
adc
push
push
and
cli
inc
mov
or
js
aam
or
jg
insb
fisttps
cld
jg
stos
fimuls
xchg
mov
outsb
and
mov
jl
xorl
enter
cmpsl
adc
sbb
jno
lahf
jae
inc
inc
cmp
inc
lcall
inc
js
enter
add
dec
or
pop
fmull
cmp
xor
inc
push
jae
mov
add
ss
shlb
pushf
ret
inc
jp
lods
inc
jg
test
mov
pushf
xor
std
add
adc
jo
sub
in
in
sbb
push
cmc
popa
pop
sub
mov
cmp
ret
decl
loopne
stos
repnz
out
dec
or
test
gs
dec
decl
out
lcall
hlt
adc
inc
test
sbb
cli
mov
pop
sbb
dec
aam
popf
data16
aam
in
hlt
inc
ljmp
orb
sbb
adc
add
hlt
lcall
iret
mov
jbe
xchg
out
add
push
scas
and
shll
inc
ucomiss
dec
push
adcb
sub
mov
mov
inc
and
sbb
lcall
sbb
imul
iret
inc
xchg
shll
adc
mov
and
daa
mov
mov
xchg
mov
push
loopne
adc
decl
decl
filds
pop
jo
dec
rcll
rcrl
push
scas
ss
ljmp
xchg
push
dec
xchg
lods
push
cld
push
push
mov
and
outsl
adc
push
mov
js
movsl
lret
lods
movsl
cmc
inc
xor
add
xlat
adc
cmp
cmp
cs
mov
mov
cwtl
pop
in
lea
push
add
lret
cli
fs
jecxz
enter
pop
fistpll
pushf
in
jno
into
adc
pop
int3
cmp
repz
loop
cli
mov
xor
or
scas
data16
daa
push
add
leave
add
clc
fsubrs
jmp
mov
je
testl
aas
and
mov
xchg
in
movsl
xchg
mov
sub
popf
jle
outsl
lea
mov
mov
sub
outsb
sub
test
sub
and
dec
and
repnz
in
fdivrl
add
xor
pusha
std
in
xor
sub
add
jae
mov
daa
cmp
not
inc
mov
addr16
add
cmpsb
fldcw
sbb
dec
inc
xchg
push
pop
jg
rolb
sar
inc
mov
or
push
jb
dec
xchg
jmp
xor
add
aas
or
lea
rcr
add
pop
push
dec
mov
pop
incb
cmp
sti
sbb
push
lcall
fcomp
daa
popa
iret
inc
iret
or
mov
daa
fcomi
cmpsl
or
add
call
or
dec
xor
enter
add
je
lahf
push
cmp
add
push
lea
jmp
xchg
mov
aas
xor
clts
ds
cltd
loope
push
push
add
movl
cld
inc
cmpsb
ja
enter
xchg
fsts
push
in
mov
xchg
dec
cwtl
sti
or
adcb
xor
jl
movsb
pop
pop
push
lcall
jl
aam
mov
push
xor
sbb
stos
pop
fcomp
lock
loope
divl
pushl
leave
aam
inc
and
xchg
jp
xor
dec
insl
mov
and
psrlw
icebp
das
mov
jg
pop
loopne
jg
sbb
mov
int
xor
call
je
repz
lcall
pop
jmp
mov
mov
out
ljmp
std
pushl
xor
mov
sbb
push
mov
mov
std
cltd
cltd
fistpll
inc
push
dec
loopne
je
sub
cs
and
jecxz
mov
nop
adc
addr16
clc
xchg
insb
or
cmp
jg
jg
mov
out
imul
call
cs
je
jne
pop
add
inc
push
les
mov
call
hlt
xorb
mov
push
ja
xor
incl
mov
pop
fcmovnb
add
dec
shl
jp
jmp
mov
ret
lock
rcr
scas
cmp
insl
push
lea
jbe
fsts
fucomip
inc
insb
or
aam
mov
imul
sub
lods
in
sbb
or
mov
mov
sbb
daa
pop
std
jg
add
inc
mov
push
pusha
push
sbb
cli
pop
out
jb
xchg
test
imul
outsl
scas
add
je
mov
addps
sbb
mov
inc
push
and
push
add
and
inc
hlt
push
inc
loopne
mul
leave
shl
sar
mov
pop
jge
or
add
mov
mov
sbb
mov
pop
fs
mov
mov
hlt
pop
mov
shrb
jg
cs
pop
fildl
rcrl
inc
sbbl
add
xor
or
aaa
ss
clc
jmp
xor
dec
mov
xchg
test
push
inc
repz
add
ud0
cmp
jge
jg
cmc
imul
sub
push
mov
cwtl
or
imul
cli
cmpsb
add
cwtl
jle
not
pop
popa
bound
lea
sbb
add
push
ljmp
pushf
xchg
or
aad
repz
sbb
push
stos
mov
mov
sub
push
lahf
sbb
dec
fldcw
mov
adc
rorb
jg
dec
or
fstl
loop
in
inc
cwtl
sbb
mov
ljmp
lahf
jno
or
fdivl
jge
push
mov
add
movl
mov
rcrb
mov
test
mov
rcrb
add
dec
sbb
xlat
rolb
sbb
incb
add
mov
mov
pop
add
iret
add
filds
cmp
emms
test
fildl
lret
inc
mov
dec
mov
mov
inc
sub
mov
inc
mov
ss
mov
mov
dec
push
mov
add
sub
loopne
arpl
mov
ja
aad
inc
dec
in
xlat
incb
mov
lea
lock
dec
push
inc
pop
out
call
adc
repnz
imul
pop
sbb
push
mov
mov
push
int3
mov
cmp
nop
rol
xor
jmp
sti
lea
ficomps
jmp
aaa
aaa
mov
cld
xor
mov
popf
add
in
scas
and
mov
push
and
cmp
and
sbb
mov
fucomip
ljmp
and
outsl
int3
cmp
pop
adc
inc
fwait
xchg
add
pop
xor
outsb
in
pop
xchg
xchg
lock
push
mov
insl
xlat
fisubrs
xor
pushf
fdivl
in
divb
in
fucomi
xor
sub
pop
out
xor
call
or
add
cmpb
inc
mov
bound
adc
shl
decl
cmp
les
test
cmp
jbe
fildl
jb
jecxz
jge
out
cli
sub
lock
cmp
popa
pop
insl
cmp
push
mov
ret
clc
lcall
pop
dec
pushf
push
xchg
ss
or
fisubrl
rcll
xor
repz
shrb
adcl
cmp
mov
push
outsb
push
hlt
and
sbb
mov
pop
pop
adc
mov
sbb
pop
mov
push
adc
lods
inc
dec
test
jne
push
or
cmp
add
fcmovnu
lock
imul
or
add
das
rol
sbb
add
jns
lods
jge
jae
arpl
loopne
cmp
push
xor
in
ss
fimuls
aad
incl
cwtl
fwait
mov
imul
mov
test
pop
or
adc
jae
cmp
sbb
jae
ret
mov
sub
jecxz
bound
cmpsl
xchg
inc
adc
sbb
inc
mov
mov
add
mov
je
push
push
icebp
or
dec
jno
dec
aas
jb
rorl
xor
push
sbb
mov
adc
test
sarl
hlt
jl
mov
jp
orb
js
fwait
mov
mov
mov
lret
sub
dec
std
sbb
out
pop
out
test
xchg
btr
lock
push
mov
push
lea
pop
dec
sbb
pop
dec
fsubl
icebp
lcall
push
inc
enter
add
not
nop
cs
mov
inc
fadds
pop
pop
sub
out
xchg
test
jno
icebp
mov
ret
es
inc
out
icebp
fstpl
add
adc
sub
and
fiaddl
pop
sbb
inc
insb
sbb
xor
jae
lret
jo
inc
js
mov
dec
pop
adc
add
jbe
jmp
out
pop
mov
adc
push
imul
mov
xchg
test
cwtl
or
pusha
outsb
jl
add
add
nop
js
ja
or
out
dec
lcall
out
mov
xchg
sub
outsb
dec
fcmovnu
inc
cmp
sar
sbb
sub
mov
sti
sahf
or
idiv
fistps
sbb
sbb
inc
test
adc
lcall
ret
mov
les
pusha
adc
sbb
pop
adc
mov
dec
inc
movsl
out
scas
nop
cmp
inc
dec
cld
inc
shl
fdivs
aaa
jmp
popf
and
and
je
and
int3
in
enter
clc
das
xlat
enter
das
test
int3
and
adc
mov
filds
and
and
test
adc
mov
ljmp
xor
adc
and
dec
je
sbbl
sbb
mov
push
stos
or
and
enter
inc
push
jg
fwait
int
push
pop
cmp
shl
cs
movl
call
pop
xor
and
test
dec
mov
sbb
das
cld
inc
pop
nop
jp
inc
and
int3
adc
mov
xchg
cmp
mov
sub
insb
xchg
bound
test
and
xchg
jne
or
jg
ds
mov
and
xchg
add
and
xchg
mov
and
push
cmp
test
jo
cld
jg
dec
fcmovnb
inc
jl
pusha
pushf
nop
adc
mov
xchg
stos
push
incl
inc
pop
leave
add
mov
dec
inc
in
and
fstpl
or
xor
in
pusha
dec
adc
inc
bound
test
and
and
cmpsb
lcall
jmp
addr16
jnp
xchg
xchg
inc
nop
add
sbb
add
ljmp
cld
and
sbb
and
cmp
pop
pop
inc
add
push
out
scas
inc
dec
sbb
mov
xor
dec
jo
xor
inc
xchg
or
cmp
and
jmp
and
ljmp
adc
adc
clc
hlt
rol
incl
and
inc
lahf
xorl
lret
and
inc
out
movsl
adc
mov
push
insb
mov
adc
mov
xor
sbb
in
mov
xor
inc
or
sbb
stc
fsubrl
sub
pop
dec
mov
mov
int3
and
das
cwtl
leave
test
lock
xchg
es
fdivrl
icebp
push
xchg
mov
fisubrs
or
ftst
adc
stos
sub
cmc
lea
mov
test
mov
fiadds
movsl
dec
cmp
mov
out
xchg
cmpsb
xlat
xor
dec
int3
or
jbe
xorl
icebp
into
sbb
push
jl
fidivrl
inc
pushl
dec
pop
test
mov
fldenv
das
lds
mov
imulb
xchg
pop
not
test
std
repz
sub
jae
leave
or
or
adc
movsl
and
pop
lahf
add
push
ret
std
dec
jo
loope
push
mov
jl
faddl
in
scas
pop
dec
addr16
pushl
cmp
pusha
addl
insb
nop
xchg
inc
add
cmp
adc
ljmp
fsubs
shll
add
lahf
call
dec
pop
cmp
or
push
pop
jmp
push
pop
jbe
subl
lcall
test
fbld
pop
jne
lea
push
mov
adc
pushl
xor
loopne
sub
or
pusha
lahf
sbb
xor
insl
sbb
fsubrs
ljmp
clc
mov
lods
xchg
daa
out
push
mov
bound
mov
inc
mov
je
decl
movsl
sub
mov
divb
push
cld
fistpl
cs
cmpsb
inc
adc
push
jg
lcall
std
dec
xor
shlb
scas
add
or
adc
fstps
callw
loopne
lret
shlb
loop
sub
and
mov
add
ja
pusha
leave
xor
leave
sbbl
shll
add
testl
ljmp
std
mov
push
jl
fwait
and
sbb
sti
insb
add
mov
and
pop
or
or
icebp
pop
sar
outsb
scas
cmp
insb
cltd
dec
addb
sub
mov
mov
or
sbb
mov
sahf
je
xor
xor
inc
cmpsb
pop
add
ret
cmc
ds
scas
lret
fstl
cmp
inc
push
add
lea
push
incl
outsl
mov
fwait
mov
push
shl
add
cld
loop
jmp
or
repz
rolb
or
clc
in
incl
arpl
shrl
mov
push
pusha
jo
loopne
mov
fistps
sahf
sbb
xor
orl
push
bound
xchg
jmp
enter
xchg
cmp
outsl
lock
outsl
cld
mov
ret
imul
stos
cld
movsl
pusha
pusha
pusha
sbbl
cld
sbbl
arpl
mov
insl
ljmp
adc
pop
stos
pop
lods
lcall
aas
std
xor
xchg
mov
cld
and
push
dec
adc
push
dec
dec
adc
test
push
or
decl
rcrb
mov
aas
xor
push
lahf
daa
out
aas
mov
shrl
sub
mov
outsb
cwtl
cmp
sbb
aaa
jmp
lcall
int3
dec
push
inc
jle
ljmp
sbb
int
push
adc
decl
mov
in
lock
cmpsb
add
push
stos
push
loope
je
sbb
movsb
in
aam
and
std
psrad
lcall
scas
nop
das
sbb
call
and
mov
outsb
lahf
out
lahf
aas
out
loopne
jle
inc
cwtl
push
lods
aas
mov
add
fs
mov
pop
pushf
and
test
mov
xor
lea
xor
or
fs
mov
add
ret
pop
push
int3
clc
mov
outsb
jle
sbb
stc
pushf
cld
shlb
popf
add
fsts
test
pop
out
cmp
cmc
enter
cld
pushf
ja
dec
out
int
loopne
loope
and
push
push
adc
ret
mov
or
gs
mov
dec
imulb
fistl
lods
cmp
jle
dec
pop
jle
decl
adc
js
cltd
cmp
jnp
xorb
jg
inc
jmp
loopne
add
scas
dec
add
mov
call
std
jns
add
in
add
loope
cmpsl
jne
add
add
loope
cmpsl
mov
stc
les
lret
sarl
fldt
push
std
jg
add
es
xchg
xor
push
dec
pushf
jge
cmp
aaa
mov
mov
in
scas
lds
mov
push
addr16
lcall
mov
jle
aas
push
aas
xlat
cld
inc
stos
rdtsc
fstl
test
out
pushl
lods
xor
mov
jle
or
lret
or
xchg
mov
leave
rcrl
cli
pushl
or
dec
cltd
mov
adc
push
mov
js
repz
and
cmp
call
sbb
sbb
adc
outsb
fisttpl
lret
std
sub
mov
fcmovnbe
cmp
inc
push
add
inc
mov
push
loop
add
in
pop
and
rorl
rorl
rcrl
xchg
mov
adc
fistl
mov
dec
mov
mov
and
addb
scas
aam
dec
sbb
f2xm1
adc
cmpb
push
fsubs
xor
lret
mov
or
and
dec
cli
adcb
push
or
lret
jae
xchg
into
pop
xchg
aam
push
repnz
popa
jmp
jbe
cs
psubusb
add
fimull
aam
fdivs
inc
sub
adc
mov
xchg
mov
adc
dec
adc
push
sub
jp
mov
dec
dec
jle
lods
clc
mov
jge
and
imul
ja
ds
add
xor
int
dec
mov
jmp
push
mov
sbb
enter
mov
mov
lea
or
pop
push
dec
mov
fiaddl
ja
int3
prefetch
inc
sub
into
xor
push
clc
movsb
and
aam
xlat
or
pusha
mov
fmuls
push
jo
mov
ds
pop
adc
bound
ret
mov
and
out
add
sahf
out
fs
dec
stos
std
fidivs
int3
rcrl
lock
inc
adc
pop
push
insb
sub
lods
and
add
adc
push
int3
inc
ljmp
enter
popl
push
lods
sub
dec
dec
adc
cmp
inc
sbb
inc
int
aaa
lcall
ds
inc
popa
vpunpcklwd
aaa
pop
jnp
mov
stos
pop
xor
out
shlb
scas
sub
hlt
xor
pop
call
adc
jae
adc
insl
and
push
or
rorl
les
sub
test
cwtl
iret
orb
cs
or
and
ret
jne
or
add
xchg
and
xchg
test
rclb
xor
jmp
fmuls
addl
push
arpl
enter
sub
sbb
out
enter
outsb
test
fnsave
gs
ja
push
hlt
sbb
jl
sarb
lahf
mov
push
or
dec
fsubrs
mov
test
or
insl
mov
push
enter
addr16
rcr
aam
and
es
inc
pop
sbb
fidivs
int3
loope
int3
jmp
hlt
cmp
jne
rcrl
pop
sbb
xchg
add
testb
xor
jno
test
mov
scas
std
fstpt
sub
enter
mov
adc
or
cmp
add
pop
ds
cmp
push
pushl
add
push
sbb
lcall
mov
xchg
dec
clc
sub
lds
adc
jae
sarb
sbb
add
loop
cmpsb
sar
test
enter
xchg
sbb
dec
repz
nop
sbb
lcall
sbb
enter
int
mov
fsqrt
leave
ret
fistpll
ret
pop
data16
mov
in
sar
cmp
sub
push
rcrb
dec
cmc
imul
add
add
mov
mov
fwait
push
jmp
or
pop
sub
mov
cmc
inc
es
aaa
cli
aaa
clc
add
sub
pop
inc
xor
pop
incb
jae
and
mov
inc
jge
mov
popa
push
inc
dec
xchg
inc
ds
decl
pop
int
push
je
lahf
adc
adc
and
and
and
mov
mov
add
lea
cli
inc
xchg
je
sbb
cmp
xlat
xchg
push
insb
pusha
jle
dec
ja
mov
outsb
lcall
inc
gs
subb
pop
cld
fldenv
test
into
loope
pop
sbb
adc
pop
jb
cmpl
jg
jmp
ljmp
sub
loopne
lock
scas
cld
pop
rolb
fs
aaa
clc
jnp
cmp
inc
fstpt
jl
bswap
xchg
inc
loopne
or
clc
lcall
scas
aam
dec
push
lahf
ret
leave
or
dec
sbb
lcall
cmp
fcoml
sahf
xor
adc
std
dec
scas
jbe
test
sbb
pop
push
dec
lcall
shll
push
in
mov
jnp
inc
imul
sbb
jle
popf
cmp
inc
push
vpmacssww
data16
pushl
xchg
imul
pop
les
out
nop
stc
ljmp
cld
repnz
iret
add
es
pop
pop
push
inc
ja
adc
mov
lock
call
or
add
mov
out
push
mov
ljmp
add
stos
dec
testl
push
lds
js
mov
or
bound
add
clc
aas
cmp
mov
adc
ljmp
cltd
inc
jne
sub
mov
aaa
xchg
and
nop
adc
scas
adc
mov
lcall
mov
xor
cmp
pop
and
icebp
in
dec
jbe
rolb
mov
add
data16
jb
lock
bound
scas
gs
pushf
fsubrs
andb
dec
ljmp
loopne
dec
lock
adc
push
pop
adc
shll
sub
xor
lods
or
xor
mov
sub
mov
xor
mov
popa
or
inc
push
outsl
pop
dec
testb
out
xchg
inc
jo
dec
hlt
adc
sub
jb
mov
add
andb
into
pop
subl
popf
xchg
xor
add
mov
mov
pop
cli
mov
and
sub
call
xchg
das
sbbl
mov
jl
in
and
add
sbb
add
mov
inc
insl
push
xor
cmp
sub
outsl
rol
idivb
inc
data16
cld
sub
stc
push
cld
or
jl
add
push
clc
add
mov
rorl
or
sub
popa
jecxz
or
in
add
call
mov
mov
dec
cwtl
adc
cld
insb
lock
lods
xor
rcrl
lods
sbb
incb
clc
pop
jl
mull
aam
loop
push
mov
and
cld
adc
pop
adc
movsb
dec
push
cmc
sbbl
insb
cmp
jle
rclb
push
add
push
loop
and
mov
mov
mov
les
loopne
add
outsl
inc
mov
mov
out
push
int3
mov
jl
roll
nop
add
push
mov
lahf
test
adc
popf
bound
push
xchg
mov
loop
jns
xor
mull
out
fwait
int
movsl
adcb
data16
orw
add
push
cmp
push
loopne
mov
fisttpl
push
les
cmc
dec
sbbl
adc
aaa
cmp
xor
adc
sbbl
jnp
inc
pop
in
xor
adc
adc
and
mov
or
fcomps
filds
xor
pusha
pushf
inc
int3
mov
arpl
and
or
fcomi
das
xchg
int
mov
ret
xchg
pop
adc
repnz
sbb
cs
stos
or
stos
lret
mov
cmp
dec
add
add
lock
std
sbb
cld
shrb
addb
incl
jmp
jp
lea
inc
push
inc
icebp
fsubrs
lock
sub
sbb
mov
jp
add
xor
cmpsl
add
jg
ret
lods
ret
add
and
subb
add
pop
add
das
cld
in
add
lock
push
xor
sbb
pop
sbb
sti
movsb
add
pop
adc
jbe
xchg
pop
xchg
cmpsb
adc
inc
mov
pop
sub
in
xchg
inc
push
xor
addr16
call
and
fistpll
cmp
add
mov
fidivs
incl
xchg
mov
xchg
add
mov
add
pop
fs
mov
fldt
xchg
int3
dec
pop
shlb
mov
sub
jnp
outsl
push
sub
outsl
sarl
hlt
add
jl
sbb
adc
or
mov
shrb
mov
add
inc
das
aam
imul
testb
sub
mov
adc
dec
pop
fildl
mov
je
insl
mov
xchg
add
cmp
ds
cmp
or
fldt
dec
pusha
add
repz
add
mov
and
test
clc
push
nop
addr16
jg
mov
xor
inc
or
aaa
push
jbe
xchg
maskmovq
testl
and
mov
add
pusha
pop
les
add
push
mov
sar
xchg
rorb
pushf
pushf
sbb
jmp
add
outsb
sbb
out
jmp
into
fcmovbe
cmp
clc
les
dec
sub
push
or
into
testb
pop
mov
outsl
mov
adc
sbb
mov
das
xor
pop
inc
push
cmp
or
or
std
outsl
mov
pop
rorb
add
inc
sbb
or
add
mov
inc
outsl
adc
sbb
mov
js
into
faddl
mov
sbb
sub
inc
pop
mov
mov
testl
xlat
sub
xchg
cmp
int
cli
mov
lcall
int3
fisttpll
add
xor
in
es
js
ljmp
loopne
rclb
scas
adc
jae
xlat
xchg
push
mov
ret
mov
cwtl
sbb
dec
outsb
add
inc
mov
pop
daa
xor
mov
rolb
jb
mov
and
cli
in
and
lods
jecxz
shlb
and
xchg
loopne
push
add
jo
jne
in
daa
adc
aaa
pop
fucomip
inc
jo
sbb
mov
subb
or
adc
add
cltd
jge
mov
adc
int
sbb
add
rol
in
dec
pop
inc
push
jecxz
adcl
outsl
sub
cltd
jne
pusha
ja
pop
stos
sub
or
dec
dec
lcall
dec
outsb
fdivl
add
in
sbb
adcb
dec
cwtl
cli
push
mov
out
lds
add
and
pop
xor
sub
inc
imul
or
xchg
mov
or
lock
pop
lret
mov
ljmp
pushf
lcall
add
xor
mov
fstpt
aam
adc
fistpll
ficoms
es
push
ficompl
jnp
add
adc
sbb
jnp
std
push
pop
mov
ret
mul
push
cs
mov
pop
inc
daa
loopne,pt
repz
add
nop
or
sub
jle
or
inc
in
sub
out
adc
sub
inc
ja
or
cmp
gs
je
add
mov
call
xlat
sbb
and
jo
adc
and
jge
mov
cld
or
add
inc
cmp
fadd
pop
inc
shl
pop
add
bswap
adc
shll
out
or
mov
xchg
adc
dec
dec
pop
shll
or
add
inc
sub
cmpsl
inc
daa
in
sbb
mov
adc
loope
je
and
push
mov
js
mov
pop
xorl
rolb
lods
fstpt
add
int3
fdivrl
test
mov
push
jecxz
add
xor
push
lret
cltd
inc
mov
adc
mov
mov
rorb
out
outsb
cmp
test
add
add
or
push
scas
or
xchg
and
shrl
and
xor
fbld
or
jbe
adc
sbb
out
push
dec
fnstenv
push
in
adc
push
stc
mov
fxch
cld
call
mov
sbb
mov
inc
jmp
push
inc
and
xchg
pop
dec
nop
sub
push
cmp
sahf
xchg
xchg
dec
pop
and
or
sub
ret
mov
mov
pop
push
and
lret
loope
cmpsb
inc
cmc
mov
arpl
in
roll
or
adc
data16
incl
mov
or
sbb
mov
cmpb
cmpsb
jb
inc
fdivrp
decl
inc
or
add
test
cmc
pop
decl
mov
sbb
ret
ljmp
cltd
mov
fnstsw
pop
and
jp
jge
add
dec
test
das
les
cmp
shlb
pop
cld
decl
insb
rcrl
scas
jg
fildl
movsb
xchg
dec
sti
ficoms
push
sbb
jg
xchg
out
pushf
pop
out
stc
adc
xchg
lret
mov
jl
incl
test
lock
gs
xchg
jo
dec
ret
dec
fnstcw
jo
mov
pop
stos
push
imul
call
das
enter
and
out
and
or
call
jmp
add
repz
leave
ljmp
std
add
lcall
ljmp
and
popa
jae
add
inc
push
imul
je
subb
push
stc
mov
sub
dec
pop
lret
jle
xor
sbb
or
test
xor
incl
add
jl
inc
mov
mov
test
pop
loop
shrl
gs
rcl
jnp
push
lret
ljmp
jmp
pop
inc
pop
xchg
xchg
xchg
and
in
push
or
lret
lcall
movsb
or
mov
sub
decb
sbb
adc
sbbl
adc
cmp
pop
push
test
scas
in
rcll
cld
out
mov
test
adc
adc
sub
adc
pushl
clc
bound
sub
insb
add
pop
pusha
js
orb
ljmp
fildll
nop
pusha
das
and
add
mov
adc
mov
test
int
rorb
mov
lcall
mov
shlb
add
sbb
pop
mov
jmp
mov
mov
jmp
inc
pop
call
cmp
xor
xlat
inc
jp
nop
mov
xchg
sub
stos
xor
imul
imulb
cmp
sub
adc
add
sub
daa
or
jmp
icebp
aam
sbb
or
es
mov
das
pushfw
pop
or
push
push
fldenv
andb
and
rcll
mov
pop
jle
shll
lods
pop
mov
xchg
cmp
movsb
mov
cmc
or
adc
pusha
stc
and
rcrl
xlat
enter
rolb
and
xor
stos
orl
shrb
pop
mov
shl
push
das
xchg
jns
repz
jno
cwtl
lock
jp
xchg
add
xchg
cmc
in
pop
into
cmc
cmp
mov
cltd
mov
xchg
sub
scas
fisubs
pop
sbb
sar
fists
adc
and
or
fnstsw
pop
pusha
repnz
cltd
inc
out
and
ljmp
cld
cmpsl
je
mov
aas
imulb
xchg
pop
or
add
push
mov
dec
out
out
in
fsub
or
idivl
and
cmp
pusha
or
add
inc
sbb
and
and
cmp
or
cmp
fsts
and
test
fstpt
pop
mov
or
and
or
mov
mov
xor
jl
sub
mov
call
sti
std
rcl
push
icebp
mov
mov
es
inc
pop
jg
outsl
dec
jmp
movsb
sbb
pop
shl
fistpll
jne
adc
pop
mov
inc
cmpsb
divl
call
cld
jg
and
xchg
mov
jns
pop
imul
sbb
dec
test
add
or
xor
notl
sbb
push
ret
cmp
ljmp
popa
mov
pusha
add
inc
adc
mov
mov
lods
sar
add
pop
jnp
jae
test
xchg
mov
test
lcall
sbb
adc
push
orb
adc
incl
and
lea
xor
xorps
ljmp
nop
hlt
add
aaa
or
mov
cmpsl
test
inc
mov
jb
lret
inc
add
mulb
fstpt
inc
or
xor
repnz
faddl
jae
xchg
add
sbb
pusha
push
enter
inc
adc
je
mov
pop
movsl
or
jp
mov
ds
sub
push
push
sbb
xor
outsb
rcrl
adc
push
dec
mov
out
dec
dec
add
mov
fxch
push
sbb
outsb
mov
fcmovnb
add
dec
hlt
ret
mov
dec
hlt
cltd
dec
or
sahf
or
iret
sub
mov
push
push
jl
xchg
xchg
sub
mov
inc
push
les
or
xor
mov
insl
cld
pop
mov
fistpl
mov
mov
mov
adc
adc
into
jno
dec
xor
aas
dec
jmp
xchg
adc
enter
xor
cmp
pop
xor
movsb
sbb
jg
ljmp
push
test
test
call
add
mov
dec
pushf
push
inc
in
popf
inc
stc
mov
rcrw
and
jge
lods
mov
ret
add
pop
jo
mov
test
dec
int3
inc
inc
pop
popf
mov
mov
cmp
mov
dec
enter
das
xor
cwtl
and
testl
push
lods
sbb
or
inc
dec
test
adc
sbb
jmp
sub
cmp
mov
mov
stos
sub
mov
lods
inc
inc
mov
add
lods
je
adc
in
or
shrb
ds
test
sarb
jmp
push
fisttps
mov
lret
test
movsb
push
icebp
mov
jp
cs
jo
dec
ljmp
movsb
sbb
push
add
insb
loop
sub
adc
sub
mov
push
psrad
test
fs
jns
push
adc
adc
add
cli
add
push
dec
xor
mov
inc
and
and
add
and
sbb
dec
dec
mov
jge
nop
xchg
call
scas
inc
addr16
sub
and
pop
neg
jns
and
ja
xor
dec
or
sahf
hlt
test
flds
xchg
js
lret
das
fcompl
and
je
sbb
push
push
rcrl
dec
sbb
sub
test
inc
cmpsb
cmp
jne
aad
sbb
pop
sub
mov
dec
fbstp
popf
xchg
cli
outsb
ret
push
dec
gs
test
dec
dec
push
inc
mov
lock
sbbl
mov
outsl
icebp
scas
insb
adc
push
insb
push
and
movsl
and
sti
das
hlt
lock
mov
cli
mov
mov
mov
into
decb
andb
cmp
inc
cmc
cmp
xchg
jg
nop/reserved
aas
mov
fildll
fucomip
push
icebp
mov
cmc
fcompl
pop
stos
fcmovu
inc
cli
mov
cmpsl
pop
fnstsw
or
shrl
xchg
popa
mov
fisttps
cmp
sarb
mov
push
push
test
in
jg
cltd
gs
cmp
mov
dec
xlat
adc
inc
xchg
hlt
cmc
sbb
xor
jle
xor
add
cmp
add
pop
cmp
push
add
arpl
sub
adc
push
and
pop
mov
dec
mov
ljmp
ret
cmpsb
fmuls
leave
and
and
lcall
pushl
pop
arpl
iret
mov
cmp
inc
add
movsb
into
das
loopne
sbb
lods
mov
and
cmp
add
into
sbb
fistpll
pop
and
xor
loop
iret
mov
adc
and
dec
lods
imul
cmpl
xor
leave
jno
imul
jmp
pop
or
test
inc
and
and
push
popa
and
aad
call
insb
push
add
and
mov
jns
push
imull
xorl
aaa
add
hlt
stos
dec
pop
mov
mov
mov
jnp
js
das
icebp
ljmp
inc
sub
lcall
xchg
addr16
lea
adc
in
adcb
fidivrs
pop
cld
ss
test
in
popf
dec
decl
xlat
cmp
or
dec
lahf
or
loope
js
or
js
mov
jg
cld
aaa
clc
std
and
lods
adc
add
enter
sub
sub
push
mov
push
idiv
fs
or
pushf
xchg
pop
jp,pt
scas
push
pop
fistpll
cmp
xor
lds
stc
repz
cmp
movsb
sbb
andb
push
cmp
lock
mov
inc
cmp
jb
push
sahf
lcall
test
lods
cwtl
dec
aam
mov
sub
sub
dec
das
rorb
xor
and
jns
scas
jmpw
inc
dec
popf
xor
andb
fwait
mov
notl
mov
adc
ds
fstps
outsb
or
jle
xchg
popa
or
dec
xor
enter
or
mov
push
add
mov
cmp
xchg
jb
imul
push
lods
add
push
push
stc
and
cmpsb
incl
mov
mov
add
enter
in
insl
hlt
mov
cmp
pop
push
aad
mov
rcrb
fcoms
enter
add
in
cwtl
or
xchg
aam
test
daa
add
mov
fmuls
movsb
inc
jle
es
dec
add
lods
push
pop
test
fs
and
insb
ds
incl
cmp
movsb
clc
xor
test
fucomp
lds
fists
add
int
fadd
call
lock
dec
repz
sub
sbb
rcrb
or
aaa
fadd
push
lcall
add
lock
or
push
or
and
cld
rolb
test
xor
sub
mov
or
and
sahf
sbb
sahf
add
das
mov
inc
pop
aad
push
jo
and
pushf
inc
sahf
xchg
ret
adc
xchg
loopne
push
scas
dec
xorb
dec
in
push
inc
xor
sarb
arpl
movsb
mov
xlat
fisttpll
or
sbb
sti
mov
dec
aam
pusha
xchg
adc
inc
mov
enter
loopne
mov
pop
cwtl
les
into
xor
or
and
fs
add
or
imul
mov
lods
push
inc
ror
cs
fdivrs
incl
and
inc
cld
testl
dec
cmp
cld
cld
sbbb
cld
xor
inc
shl
xor
pop
pushf
mov
in
xor
aaa
and
movsb
add
push
mov
mov
orb
adc
bound
orb
mov
inc
cltd
jnp
mov
push
cld
cmp
mov
insl
jnp
mov
iret
cmpsl
xchg
cwtl
les
int3
sub
into
in
add
test
incb
aaa
and
sbb
fnop
add
dec
push
mov
out
mov
jne
push
jmp
je
into
ss
or
int3
xor
les
jecxz,pt
push
jl
mov
out
cmp
data16
ljmp
push
cmpb
pop
icebp
or
lock
jo
cmp
negb
add
outsb
test
sbb
mov
mov
std
mov
sub
add
test
sub
and
loope
jbe
pop
sbb
orb
aam
mov
mov
sbb
adc
pop
push
enter
xor
jae
shlb
or
cwtl
das
sbb
push
test
jmp
mov
push
xor
adc
out
xor
push
pop
or
pop
xchg
mov
cmpsl
pop
jecxz
pop
imulb
push
pop
cli
leavew
sbb
cmc
arpl
pop
jno
rcrl
jb
pop
sub
pop
out
jbe
sub
pusha
push
mov
loopne
fcoml
mov
xor
sub
addb
adc
into
sbb
fisubrs
jo
cmp
insl
push
inc
int3
test
bound
xor
insb
push
cwtl
and
add
inc
push
fmull
lret
fstpt
lea
repz
push
inc
jmp
insl
pop
inc
fildl
push
jp,pt
lret
in
loopne
mov
daa
and
rclb
addr16
xchg
test
push
add
cltd
fisttpl
enter
sbb
ljmp
pop
shlb
pop
ja
add
stos
test
and
sbb
sti
or
xor
cmc
jb
adc
pop
jb
xchg
or
pop
jmp
sbb
test
cmp
fxch
adc
shlb
popa
inc
shll
mov
test
dec
jb
sbb
or
cmp
ret
push
jae
mov
test
dec
mov
movsl
popa
push
shr
sub
xchg
lret
or
loopne
cmp
dec
je
rclb
xchg
or
sbbl
mov
cwtl
jg
sub
or
fs
das
jmp
cld
outsb
add
andb
and
decl
sub
and
dec
add
or
add
ljmp
cltd
add
xchg
or
pop
push
xor
call
andb
popa
jbe
mov
sti
cmp
dec
add
popa
push
mov
mov
ds
pop
sbb
leave
adc
mov
jecxz
inc
inc
mov
es
pop
clc
incl
pop
fsubrl
jbe
push
mov
push
mov
incl
movsl
test
outsl
or
clc
icebp
mov
adc
call
and
sbbl
pop
idivl
pop
in
mov
add
pop
xor
pop
push
lock
mov
push
mov
and
popf
mov
adc
scas
inc
loope
add
add
inc
adc
pop
push
mov
in
rolb
cmp
jecxz
sub
leave
lods
pop
jbe
dec
inc
dec
notb
mov
xchg
out
inc
nop
pop
dec
mov
mov
out
daa
xorb
dec
dec
inc
cmp
leave
inc
je
mov
decl
call
mov
sbb
inc
addr16
jg
mov
xchg
int
cmp
xchg
or
or
dec
adc
jg
xchg
nop
push
insb
jo
adc
fcmovu
xchg
mov
out
or
sub
xchg
xchg
dec
jge
inc
push
cmc
mov
pop
push
push
nop
pop
xchg
xchg
sahf
repz
push
decl
jecxz
movsl
add
dec
dec
mov
ljmp
and
imul
and
xchg
xchg
insl
and
or
insl
inc
cli
and
ljmp
clc
cmpb
jg
jg
or
sub
andl
jmp
mov
insb
jbe
add
add
and
mov
call
jo
cmp
les
xchg
mov
ljmp
dec
mov
adc
add
cltd
jg
lcall
fistl
or
sub
sbbl
pop
xchg
rolb
adc
pusha
mov
ljmp
mov
inc
aaa
and
pop
inc
adc
adc
out
shr
sbb
add
inc
adc
lcall
sbb
repz
inc
inc
out
sbb
movb
add
ljmp
mov
pusha
pop
ja
cmpsl
mov
sbb
xor
jp
dec
add
and
and
decl
sbb
lea
push
fwait
mov
sbb
jl
lcall
push
sub
inc
push
jecxz
push
or
test
add
aad
cld
cmpsb
dec
push
lahf
fstpt
add
mov
xor
aaa
sub
push
insl
call
cmc
call
jl
xchg
mov
mov
sarl
call
call
or
adc
dec
inc
lcall
sarl
push
out
add
movsl
mov
ss
push
push
pusha
or
loop
adc
sti
and
inc
sbb
lock
sbb
or
movsl
shlb
or
pop
cli
cmpsb
inc
xor
adc
in
mov
pop
and
jg
adc
and
jnp
sub
dec
cmp
out
inc
and
aas
inc
loopne
mov
xor
in
xor
or
adc
add
sub
push
loop
xlat
and
xor
int3
popf
push
mov
jmp
ljmp
sub
test
xchg
dec
xchg
push
repz
fnsave
popf
dec
lea
mov
cld
push
add
pop
adc
xor
sbb
mov
lods
hlt
and
sub
xchg
and
and
jmp
out
std
add
and
rcr
push
cmc
push
adc
sar
jg
repnz
add
xchg
xchg
ret
arpl
push
xor
fwait
xchg
clc
lods
jle
ret
sbb
dec
in
loopne
icebp
mov
jmp
xor
sub
lcall
hlt
jno
lock
push
arpl
jecxz
xchg
fwait
pop
test
ret
xchg
and
call
inc
push
lret
push
popa
rol
mov
xor
repz
mov
and
adc
pusha
xor
arpl
mov
mov
cmp
add
stos
es
scas
add
mov
sub
sub
call
cmp
cmp
out
sbb
cs
jb
mov
jg
out
mov
sbb
push
pusha
insl
or
std
gs
std
pusha
adc
mov
lret
addb
add
adc
aam
mov
ljmp
add
add
jb
je
jp
movsb
pop
fdivrl
or
mov
xchg
adc
sbb
cmp
push
lock
mov
outsl
push
cmp
or
cmp
pop
lahf
insl
rep
cmp
push
mov
out
or
aaa
outsl
call
in
lock
outsl
mov
clc
inc
add
in
sub
bound
lcall
loop
sbb
sub
mov
fbld
pop
xchg
pop
insl
or
push
sub
cld
lock
lcall
cmovo
or
aad
call
dec
cs
pop
imul
roll
dec
into
ljmp
cmp
addr16
clc
dec
lock
add
or
sbb
adc
scas
jg
sahf
xor
repz
shl
mov
and
div
cmp
dec
inc
stos
mov
dec
call
cli
xor
add
lcall
push
daa
jl
lret
hlt
dec
lea
cmpl
clc
loopne
sbb
in
xchg
cmpsl
xchg
or
cmp
sbb
fimull
ret
mov
rol
inc
pop
out
loopne
xlat
in
inc
pop
push
mov
rorb
cmp
sbb
adc
fdivr
jo
ficoms
xchg
inc
addr16
inc
xchg
lcall
insl
icebp
xchg
mov
arpl
sub
cmpsb
inc
and
push
int3
lock
loop
mov
sub
pop
nop
test
jge
and
fadd
inc
mov
xor
add
dec
and
mov
outsb
adc
xchg
push
sbb
mov
sbb
out
push
out
out
or
mov
andb
add
add
sub
jo
adc
push
cmp
xchg
pop
or
dec
mov
or
add
push
push
pop
xor
mov
int
sbb
jne
mov
enter
test
dec
xor
xor
adc
cmp
xor
sbb
shll
dec
sahf
mov
adc
and
or
mov
imul
fcoml
and
or
shlb
pushw
hlt
dec
mov
cmp
mov
movb
and
lret
adc
andb
in
push
mov
sbb
add
rorl
lock
dec
add
xchg
in
sarl
mov
lcall
mov
shll
xchg
in
mov
out
out
clc
shll
std
xor
dec
sbb
mov
inc
ret
jae
scas
lret
cmpb
jno
sbb
imul
mov
fwait
push
mov
and
adc
dec
or
or
push
push
xor
into
cli
cmp
cld
aas
or
lds
test
mov
and
shll
add
and
test
jnp
pop
and
adc
insb
adc
xor
xchg
inc
or
fistpll
and
repz
fneni(8087
or
adc
add
or
xor
jge
mov
cs
jb
call
dec
dec
scas
adc
xor
ret
enter
xchg
push
insb
out
mov
add
add
mov
outsl
add
aaa
adc
andb
add
cmc
jg
fdivs
lds
imul
ds
add
andl
int
popa
aad
pop
pop
cmp
or
push
js
add
hlt
faddl
test
dec
jns
fs
push
addb
lods
pop
xor
pop
mov
icebp
ljmp
add
mov
fsubl
push
rorb
test
push
add
push
add
push
clc
push
test
xor
adc
dec
push
jae
sub
adc
jne
mov
cmp
fisubs
inc
and
xchg
push
icebp
and
test
mov
dec
cmpsb
sub
sub
adc
loope
int
ljmp
xlat
add
in
or
sub
fmuls
sub
jle
cld
push
aam
test
ljmp
pop
rol
test
aam
cmp
cmpl
int
mov
leave
cmp
pusha
fsubs
scas
mov
push
xchg
cmp
sarl
and
lods
icebp
cmpsb
and
fadds
fists
add
or
imul
adc
sbb
or
push
test
dec
fmuls
adc
or
pop
mov
push
push
iret
jne
inc
sbb
add
cmpl
and
clc
add
enter
shr
jb
adc
inc
or
jle
xor
bound
mov
fidivrs
xchg
sarb
fs
sbb
shll
cmp
rcr
add
fmull
add
shll
dec
jne
and
int3
lret
int3
fdivl
or
add
and
add
jmp
lea
es
add
gs
adc
int
in
mov
pop
xchg
or
cltd
jns
or
insb
push
mov
cmpsb
or
pusha
sbb
scas
add
add
je
xlat
xchg
mov
xchg
fidivl
jle
leave
add
mov
adc
loopne
dec
stc
clc
xchg
xor
cmp
cwtl
cld
or
fisubl
dec
cltd
lret
push
push
movsb
shr
test
ljmp
sbb
push
jae
dec
adc
cmp
add
dec
decl
nop
cmc
adc
test
jae
hlt
jge
push
outsb
test
ljmp
sahf
inc
hlt
push
faddl
jb
in
pushf
mov
jmp
add
cltd
lea
cwtl
mov
sbb
enter
push
cld
call
js
dec
jge
and
aas
add
es
dec
add
ljmp
dec
dec
inc
jno
push
push
ja
popa
or
and
jae
xchg
sub
xchg
les
call
push
xchg
and
bound
jg
pop
xor
cmpb
popa
xor
xchg
sub
subl
out
scas
ljmp
cmp
jmp
jns
fwait
sub
inc
pop
test
shrb
adc
montmul
cmpsb
shll
cli
call
repnz
cmp
xchg
inc
ror
imul
mov
lcall
pop
or
mov
xchg
in
jns
in
fsubs
mov
or
push
inc
out
icebp
test
mov
aas
cmp
cltd
lea
rorb
xchg
mov
jg
sub
add
loopne
xor
rorb
xor
add
xor
mov
subl
js
test
sti
dec
scas
dec
push
cmp
and
sar
xchg
lcall
xor
jno
inc
int3
into
jae
jecxz
sub
mov
pop
mov
add
or
arpl
mov
popf
imul
add
jecxz
push
and
mov
jns
mov
inc
int3
jg
incl
mov
inc
push
fwait
in
lea
jbe
xchg
mov
mov
or
mov
mov
or
je
sub
inc
fisttpl
ljmp
aaa
sub
enter
xchg
xchg
mov
and
jmp
cmp
daa
jmp
push
sub
jb
mov
xor
cli
subb
mov
add
aam
in
ror
movsl
sbb
adc
repnz
dec
sub
dec
loop
and
add
xchg
and
rcll
push
sbb
mulps
inc
ds
sub
out
cmp
test
cmp
mov
add
dec
mov
cmc
pop
pusha
scas
push
insb
outsl
sbb
roll
xor
mov
nop
jo
push
test
loop
and
lahf
je
and
sahf
popa
sarb
into
stos
imul
cmpsb
out
or
cld
pop
test
push
pslld
int3
jbe
ljmp
lods
enter
xchg
xchg
xor
add
incl
stc
xchg
pop
hlt
push
cmp
adc
mov
imul
out
rcrb
mov
or
sbb
rol
imul
sbb
mov
fists
mov
ficompl
lods
or
cmp
lcall
mov
and
fwait
bswap
mov
clc
or
leave
and
maxps
call
add
sahf
sahf
add
jnp
test
xor
incl
ljmp
inc
inc
xor
xchg
dec
xor
xlat
cmp
into
mov
jg
mov
adc
xor
jbe
int
mov
incl
mov
sub
lods
mov
pop
adc
pop
sahf
shlb
xchg
hlt
incl
in
rolb
cltd
dec
hlt
xlat
jle
nop
jg
jp
sbb
cli
outsb
lret
mov
icebp
lcall
dec
pushf
mov
push
fcomps
xchg
lret
rcll
ret
sub
mov
cs
jecxz
orb
fwait
add
scas
xor
movsb
adc
pop
shr
loope
outsl
lock
sarb
add
je
loopne
and
jg
sub
add
movsb
inc
adc
sub
push
loop
insl
dec
push
fistpll
inc
inc
movsl
test
push
adc
sub
jbe
xor
clc
aas
sub
xchg
js
stc
ss
daa
jg
xchg
add
xor
std
xchg
mov
fcomps
decl
mov
jmp
fcmovnbe
xor
clc
decl
bnd
dec
inc
in
jo
push
cmp
adc
andl
mov
call
stos
inc
ret
nop
add
xchg
mov
jmp
sbb
pop
lret
call
ret
cmpsb
movsb
lods
push
aam
popf
int
ds
xor
loope
push
repz
jl
mov
das
add
shl
fwait
enter
mov
add
aaa
leave
lret
pop
jo
pushl
test
pop
js
add
sub
pop
shlb
jmp
xchg
pop
repnz
xchg
loopne
addl
add
add
mov
das
std
decl
nop
fmull
leave
sbbl
into
sub
mov
inc
mov
pop
push
loopne
sub
cli
mov
inc
push
js
cmp
es
sbb
mov
jl
jecxz
jl
icebp
add
mov
jecxz
ds
ds
mov
bound
jmp
fwait
clc
sbb
daa
ds
ds
cmp
jl
jl
cwtl
jno
nop
pop
push
repnz
movl
ds
call
incl
jne
and
xchg
cmp
xor
into
clc
out
ds
idivl
std
in
rorl
mov
clc
xor
ds
jmp
cmp
push
sub
jl
jne
scas
mov
jnp
jl
cld
pop
jecxz
test
movsl
daa
sbb
dec
ljmp
lock
xor
pop
sub
clc
popa
inc
insb
movl
sub
mov
hlt
js
leave
out
aaa
and
jl
adc
aaa
decb
stos
movl
sbb
xchg
add
xchg
std
pop
cli
call
ds
sbb
fs
sub
rcrb
pop
in
lcall
xor
data16
icebp
push
jecxz
mov
adc
lret
inc
into
jo
loope
mov
psubb
inc
or
shll
lcall
pop
sub
and
mov
jl
jecxz
and
out
es
mov
incb
push
pop
insl
and
adc
jl
ja
push
fsubp
cli
fbld
icebp
xchg
mov
adc
lods
repnz
andb
and
popa
adc
jg
jl
loopne
sbb
xchg
and
adc
mov
or
and
loope
clc
mov
pop
es
cmpsl
ds
popl
decl
fistps
and
jecxz
mov
stc
pop
lods
clc
xlat
clc
pop
push
adc
xorb
icebp
pop
pop
pop
dec
ds
jl
stos
ficomps
lock
dec
in
add
push
mov
push
bound
lock
clc
inc
mov
pop
shll
out
shl
je
pop
icebp
or
pop
js
add
shrb
or
fcmovne
es
in
icebp
mov
jecxz
pop
push
fisubrs
outsb
push
jmp
out
aaa
outsb
aad
pushf
cwtl
jecxz
call
jl
jp
les
loope
movb
filds
inc
dec
adc
lock
xor
push
nop
je
jg
ffree
pop
mov
add
enter
aas
cmp
inc
add
mov
data16
mov
lea
ja
xchg
into
sub
sbb
add
and
mov
gs
push
insl
inc
push
sar
cmc
dec
addl
push
xor
mov
xor
test
adc
mov
add
mov
or
adc
ja
mov
fsubs
and
clc
decl
bound
mov
mov
and
or
mov
jg
mov
or
pop
inc
rolb
inc
mov
dec
xchg
sbb
jge
test
call
sub
adc
push
mov
sub
out
insw
ljmp
inc
jo
xchg
inc
nop
push
mov
stc
and
or
xchg
daa
movsl
popf
pop
cltd
mov
aaa
jmp
inc
and
jl,pn
dec
inc
mov
jo
pushf
inc
jb
add
pop
push
push
loop
rolb
aaa
pushl
hlt
xchg
inc
clc
mov
mov
xchg
lock
cmc
mov
jne
call
adc
xor
rol
pushf
pop
ds
jecxz
ret
xchg
lret
pushl
xchg
xor
pop
stc
test
mov
cmp
shrl
pushl
xor
enter
subb
adc
loopne
xchg
lods
add
scas
mov
mov
pop
cld
aaa
jae
iret
adc
xlat
arpl
popf
ficoms
lea
jle
das
lret
and
pop
and
les
sbb
jg
dec
push
lock
pop
stos
push
stos
lcall
insb
xor
mov
adc
add
xchg
cmpsb
push
xchg
enter
mov
sub
jg
xor
pusha
push
xor
fidivrl
xor
xor
adc
ljmp
mov
ljmp
cld
inc
mov
xor
xchg
adc
bound
popf
test
jge
mov
mov
jb
cld
jg
inc
push
and
mov
jbe
hlt
dec
jne
js
cmc
pop
mov
xlat
ret
cmc
lods
pop
pushl
out
or
jns
pop
movsb
jge
cmp
aad
rol
out
fdivrl
mov
leave
cld
xor
scas
push
xor
ljmp
or
loop
mov
pop
cld
sbb
stos
push
in
inc
cld
adc
push
push
stos
dec
andb
pop
sub
xchg
es
pop
loopne
push
mov
lea
add
pop
popa
xchg
loopne
sub
int
inc
lock
sbb
jne
addb
sub
addr16
add
in
mov
pop
cmp
add
push
faddl
xchg
sbb
cltd
add
test
ss
adcb
cltd
inc
and
andb
int3
sbb
mull
pop
imul
mov
loop
push
jmp
add
stos
dec
and
mov
mov
lret
xor
cmp
and
and
or
fdivs
pop
mov
push
cmp
daa
mov
icebp
xor
dec
xor
or
inc
xor
sahf
push
js
mov
leave
faddp
mov
loopne
test
cmp
sarb
adc
xor
mov
cmp
in
or
mov
clc
add
add
inc
dec
sbb
scas
sub
xchg
jne
pop
rorl
and
int3
clc
in
sbb
outsl
and
bound
loopne
cmp
adc
mov
mov
lock
icebp
and
in
sub
iret
clc
xor
jl
out
cmp
ss
lock
icebp
add
call
cmp
lods
sahf
fiadds
cmp
adc
pop
test
cwtl
and
inc
andl
add
xchg
and
add
xor
mov
sbb
fnsave
sbb
js
insb
ficoml
and
push
hlt
push
push
arpl
sbb
push
dec
and
cld
pop
mov
bound
or
dec
xchg
aam
mov
adc
cmp
dec
and
xorb
roll
push
mov
fldt
push
mov
sbb
xor
cmp
sbb
cmp
add
sbb
jo
loope
adc
inc
lea
shr
add
add
mov
fsubl
or
pop
dec
dec
push
aam
fistpl
sbb
sub
jmp
rorb
cmpsl
sbb
pop
xor
daa
cwtl
adc
adc
rcrl
out
es
adc
sub
mov
push
fcomps
sbb
mov
dec
rcrl
adc
adc
inc
mov
sbb
int3
ret
inc
sub
cmp
or
dec
adc
jge
out
adc
push
sub
negb
jb,pn
xchg
xor
sahf
jecxz
sbb
negb
outsb
push
cmpsb
pop
scas
cmp
pushf
push
add
aam
xchg
and
rcll
cmp
sub
or
jle
lret
rcrl
and
aaa
xchg
dec
pop
xor
aam
fld
or
adc
inc
mov
and
jne
dec
xchg
cmpsb
xchg
les
loopne
cld
test
mov
dec
cmp
out
inc
addb
add
sub
leave
xor
andl
pop
inc
add
rcll
sub
pop
mov
lds
xchg
jns
inc
scas
sbbl
nop
cmpl
jcxz
add
dec
dec
outsl
mov
or
inc
into
and
enter
pop
cmc
sub
test
xchg
or
aad
fmulp
inc
pop
adc
mov
loop
cmc
pop
sbb
int3
cmpsb
pusha
mov
push
sti
sbb
ss
movups
dec
lock
push
mov
mov
push
pop
jmp
lcall
xchg
loop
out
shll
xchg
push
fcomps
pusha
lea
loopne
xor
pushf
mov
and
addr16
dec
insl
rorb
mov
cmc
dec
mulb
inc
push
lock
pop
lret
add
dec
shlb
mov
jno
add
imul
add
push
lods
outsb
aam
pop
mov
jge
push
jb
xor
add
xor
dec
push
sbb
jmp
mov
cli
movb
xor
shlb
sahf
add
cli
mov
sbb
cmp
enter
cmp
push
je
sub
mov
lea
jne
jmp
test
jb
clc
subb
add
push
pop
add
xor
xor
insl
sub
fsubr
roll
push
icebp
inc
rorl
insb
adc
les
stos
jmp
cmp
push
sahf
shr
ror
ret
dec
xor
test
xchg
mov
sbb
sbb
faddl
push
cmp
sbb
mov
imul
pop
sbb
mov
jmp
adc
insb
and
cmp
jb
push
push
push
lea
push
cmc
xor
push
and
dec
shlb
dec
pop
sub
rorl
cmp
push
pop
stos
enter
cmc
dec
adc
jecxz
mov
hlt
movsb
aam
cwtl
out
or
cli
int
lahf
add
andb
sbb
sub
push
aas
mov
adc
fstpt
pushf
push
aam
fiadds
aas
jmp
push
fsubs
fmuls
ljmp
call
mov
sbb
mov
lret
mov
and
es
jb
call
mov
aas
mov
add
sub
lahf
dec
push
inc
lock
incl
rolb
xchg
cmp
mov
or
enter
dec
stos
xchg
cmp
lods
add
in
call
mov
cmp
cmp
pop
mov
add
jg
jmp
jo
bound
inc
sbbl
addr16
gs
loope
iret
bswap
shlb
cltd
cwtl
test
push
adc
sahf
adc
inc
jle
popf
ljmp
std
push
and
pop
idivl
cmp
add
xchg
rol
push
call
mov
jmp
dec
lea
add
inc
xor
xlat
hlt
cwtl
push
add
add
mov
dec
ljmp
cli
and
mov
ret
jb
arpl
jne
or
add
aas
imul
mov
xor
adc
jns
mov
jmp
push
scas
adc
cmp
addr16
int3
mov
adc
imul
mov
pop
arpl
fwait
nop
mov
xchg
std
mulb
xchg
stos
sub
pop
mov
push
push
mov
imul
jmp
jns
pop
xchg
lds
inc
mov
mov
clc
in
mov
dec
mov
push
in
or
dec
cmp
xchg
xchg
rsm
mov
test
mov
jecxz
addr16
inc
mov
lods
cmp
in
or
xchg
mov
repnz
add
fnsave
mov
mov
mov
ret
call
xor
jle
test
addl
xor
loop
call
sub
sbb
pop
es
mov
jo
lods
sub
out
sahf
jnp
inc
repnz
mov
mov
jo
or
daa
pop
cli
jbe
push
pushl
push
mov
and
iret
push
insb
ret
sbb
adc
fimuls
inc
mov
in
mov
js
test
inc
or
or
ret
orb
fnstsw
add
dec
rorb
rolb
xchg
or
mov
mov
adc
imull
sub
add
mov
in
xor
imul
jno
sbb
adcl
or
xor
sbb
adc
call
adc
lds
lods
add
test
testl
cmpl
add
fisubs
pop
loopne
mov
movsl
add
mov
xchg
imul
mov
int3
inc
add
sub
xchg
sar
dec
mov
clc
sub
or
add
dec
or
jbe
push
adc
or
pop
roll
pop
out
mov
enter
dec
insl
and
adc
jle
test
popf
ljmp
xchg
jmp
xchg
idivl
xchg
add
bound
dec
jge
mov
or
sbb
movsl
add
cli
int3
sbb
js
sbb
or
xor
bound
or
aad
ljmp
sbb
add
inc
outsb
sub
ret
dec
xor
call
and
sbb
xor
out
int3
adc
lods
fwait
lds
or
dec
sbb
xor
hlt
mov
out
cwtl
mov
inc
pop
es
sbb
sbb
xlat
js
mov
repnz
cmp
cmp
dec
push
and
loopne
sub
jmp
test
jae
pop
pusha
mulb
sbb
or
cwtl
sarl
ljmp
push
das
lret
push
add
adc
enter
mov
and
xchg
pop
dec
adc
test
dec
lahf
movsb
add
test
nop
add
mov
call
loopne
scas
call
push
sub
mov
out
call
push
popl
fsubs
pop
mov
jo
dec
xchg
and
mov
cmp
fwait
hlt
stos
add
mov
mov
rcrl
mov
hlt
lcall
je
int3
xchg
add
or
xor
or
lock
xchg
aad
jno
or
lahf
mov
add
lcall
lret
xor
rcrb
adc
in
add
xor
inc
rolb
xchg
xor
add
js
fdivr
cmp
mov
ljmp
sbb
lret
add
cmpsb
sub
add
push
sub
nop
dec
pushf
inc
cmp
cmp
mov
leave
lock
jg
lock
or
js
push
outsb
cmp
mov
rorb
call
sub
call
jae
lcall
cmp
adc
push
or
and
lret
mov
sbb
repz
push
fildl
xor
mov
rcr
repz
mov
mov
adc
cwtl
rsqrtps
xor
ss
xchg
pop
call
push
cltd
pop
adc
push
shlb
add
je
jmp
fildll
cld
andl
cmp
mov
xor
add
std
mov
dec
dec
jno
icebp
ret
es
sbb
dec
xchg
xor
push
call
test
inc
inc
das
mov
mov
and
pop
bound
ljmp
stos
or
and
xchg
mov
jecxz
pop
pusha
xor
incl
sub
add
stos
add
shll
and
adc
dec
scas
icebp
cmp
lods
fdivl
aad
clc
sbb
pop
xchg
movl
cmp
repnz
das
hlt
jae
add
das
gs
movsb
dec
loopne
pusha
rolb
test
dec
jo
outsb
sbb
push
inc
add
data16
mov
and
pop
loop
imul
je
and
sub
movups
xor
ret
push
in
scas
mov
repz
js
inc
lcall
mov
mov
sbb
fidivrs
adc
mov
icebp
into
ss
mov
in
xor
jl
out
mov
outsl
cli
mov
pop
cmp
in
ljmp
mov
scas
add
das
cwtl
sbb
mov
sub
out
and
inc
jg
push
dec
lods
gs
lcall
mov
ret
push
add
ds
fiadds
fwait
lock
xchg
push
stc
jecxz
cmp
xor
cmp
addb
jns
movsl
hlt
or
push
xbegin
pop
inc
or
inc
add
in
daa
adc
xor
movsb
push
and
add
xor
dec
and
loop
jle
pop
inc
out
rol
daa
and
ss
push
dec
add
xchg
mov
pop
adc
push
pusha
mov
enter
xchg
ss
or
cmc
adc
fiaddl
daa
sub
ljmp
add
adc
out
sub
mov
or
sub
and
mov
jo
inc
inc
xchg
adc
into
adc
call
outsl
adcb
inc
add
shrl
jge
dec
xchg
pop
lods
adc
xor
adc
xchg
mov
sub
adc
push
cmp
or
fistpl
shlb
iret
adc
sub
imul
imul
lcall
mov
mov
test
xor
ret
mov
loopne
and
and
mov
repz
movd
outsl
and
dec
jp
and
add
inc
lods
xlat
scas
adc
addl
jne
dec
mov
mov
jp
or
rcrb
mov
lahf
icebp
cmpsb
pop
jecxz
fbld
lcall
xor
lock
sbb
out
add
or
cwtl
adc
loopne
add
repnz
test
std
inc
or
or
ret
and
xor
xchg
iret
sub
sahf
jecxz
lcall
mov
add
lock
stos
in
lret
xchg
inc
mov
or
pop
jo
xor
xchg
test
mov
sub
xlat
jnp
xchg
outsl
adc
cmp
in
jno
cmp
and
lock
loop
push
and
xor
orb
xor
daa
dec
jmp
xor
add
dec
sub
adc
push
aas
addr16
js
mov
movb
and
hlt
out
ljmp
mov
adc
inc
xchg
into
pinsrw
add
fistl
mov
stos
sbb
adc
data16
movsl
sbb
add
xor
fcmovnu
icebp
sub
push
imul
data16
pop
inc
adcl
fmul
add
mov
jmp
arpl
add
pushl
inc
mov
fiadds
jns
clc
test
lcall
pop
pop
shlb
xchg
mov
push
push
pop
jbe
xchg
push
loopne
sub
and
xor
std
adcl
sar
mov
ljmp
addb
int3
int
and
lods
fxch
cmp
mov
cmp
push
nop
lea
add
jg
inc
xor
xor
cltd
dec
pop
dec
cld
rcll
ret
lret
push
lret
in
insb
into
insl
das
sbb
mov
ds
loop
inc
stos
pop
in
dec
mov
push
or
inc
cmp
in
adc
fyl2x
push
subb
call
hlt
xchg
insb
fs
repnz
or
xorb
sti
ror
insb
movsl
jbe
mov
lcall
flds
arpl
movsb
ret
int
push
and
and
jns
mov
addr16
stc
add
jns
pushl
lret
ljmp
inc
bound
push
imul
repnz
fdivrl
roll
or
add
pop
sbbl
add
or
xchg
mov
mov
sub
or
jmp
jge
dec
jne
data16
cmp
and
test
es
movsl
push
jp
icebp
inc
popa
jne
clc
inc
test
es
dec
push
cmpb
call
cld
push
stos
jo
push
iret
sbb
pusha
lret
mov
or
jmp
adc
sub
adc
ljmp
mov
lcall
lcall
mov
clc
loopne
insb
test
es
call
inc
mov
call
mov
add
pop
lahf
or
pusha
push
pushf
subl
mov
out
cmp
fnstenv
xchg
push
inc
lret
sbb
mov
mov
mov
fsubl
movsl
jle
jbe
mov
or
or
jmp
inc
fs
add
inc
repnz
or
mov
out
push
inc
or
mov
ljmp
movsb
xor
test
orl
inc
xor
loop
es
fsubp
sbb
decl
or
pop
sbb
cmp
repz
ljmp
mov
push
mov
icebp
test
fcoms
icebp
pop
imul
fs
jl
icebp
int3
push
ds
das
mov
mov
sub
shrl
inc
or
cmp
jle
mov
push
scas
xchg
ret
xor
call
inc
add
testl
cmp
loope
lds
xchg
jl
loop
jb,pt
imul
mov
cmp
or
fdivrp
call
pop
mov
jg
pop
mov
out
into
xchg
mulps
out
clc
movsl
ds
xor
test
call
test
das
lock
clc
or
lcall
mov
mul
mov
sbb
and
xor
lcall
das
xchg
inc
orl
ds
mov
ficomps
mov
adc
hlt
sbb
mov
jecxz
push
mov
ljmp
jg
mov
ds
sub
clc
sbb
pop
decl
fistps
pop
lods
jl
cmp
jno,pt
push
outsl
sbb
xor
loopne
inc
into
call
pop
fcmovb
inc
fsubrp
push
cmp
add
mov
clc
adc
idiv
aaa
push
cmc
pop
push
notl
sub
and
lret
icebp
inc
pop
push
add
add
mov
je
lahf
std
mov
push
jecxz
jecxz
jg
test
jl
add
or
xlat
mov
flds
xchg
pop
or
lods
loope
mov
inc
testb
imul
orl
xchg
pop
mov
inc
push
xor
mov
shll
push
pop
loopne
inc
cltd
sbb
or
adc
mov
fistpll
xor
aad
loope
pop
test
aaa
or
mov
pop
test
test
in
shl
or
xchg
pop
addr16
sub
mov
imul
fisubs
outsl
icebp
push
jo
and
mov
pop
das
jmp
jp
cs
pushl
icebp
adc
and
push
adcl
paddusw
es
jge
pop
rcr
lds
add
sbb
mov
ret
inc
sahf
add
aam
fnstenv
add
daa
add
jbe
xchg
add
push
sub
xchg
outsl
inc
jne
movb
xor
das
fstpt
out
das
lock
call
movsl
mov
in
int
push
or
call
add
xor
mov
dec
enter
decl
andb
and
mov
xor
mov
jae
cmp
xor
out
or
lcall
cmp
and
pop
push
jg
push
push
test
andl
mov
xor
jmp
add
roll
lods
xorl
or
rorl
inc
fdiv
add
loopne
push
stos
outsl
mov
sbb
nop
movsb
std
popf
cmp
loope
jg
fcoms
lret
push
mov
stc
adc
into
subb
lods
scas
push
mov
xchg
lds
sarb
add
pop
fldl
call
mov
rcr
pop
push
cmp
cli
inc
add
pop
mov
cmp
add
cmp
dec
pop
sbb
cmpsb
sub
test
xchg
push
pop
clc
lods
mov
nop
push
mov
add
cmp
fdivrs
dec
adc
cmpsb
test
xchg
xchg
mov
lcall
lcall
adc
add
shll
stos
mov
xor
inc
add
cli
add
call
fdivl
sub
iret
aam
in
xor
in
incb
add
jg
decl
xor
pop
push
cmp
subl
pop
jmp
mov
mov
mov
cmc
jg
nop
sbb
pop
or
pop
testb
mov
dec
daa
loope
inc
mov
movsl
dec
rolb
cmp
jmp
mov
push
cmp
push
cld
test
xorl
mov
xchg
addb
xor
in
rolb
add
int3
ss
jg
pop
loope
insb
mov
pop
adc
imul
cwtl
xchg
int3
and
call
sti
call
sbb
add
vdivss
addb
push
add
bound
dec
outsb
movsb
or
jno
fs
dec
cmp
decl
fwait
mov
add
jo
mov
xor
mov
jp
push
mov
inc
sti
arpl
jecxz
mov
clc
jg
filds
fdivl
and
mov
fstpl
xor
call
xchg
std
xchg
mov
in
push
adc
pop
cmp
mov
jmp
lds
ljmp
or
sbb
mov
jg
inc
and
dec
fs
push
xor
lret
cltd
decl
xor
push
dec
mov
and
imul
mov
fbld
xchg
cmp
fnsave
stos
dec
and
scas
push
add
out
cmpsb
mov
pop
ja
push
fadds
mov
sbb
pop
bound
xor
dec
cmp
lock
cs
mov
cs
out
inc
in
fwait
mov
mov
add
inc
push
das
adc
sub
jge
xchg
and
incl
sub
or
push
adc
cmp
dec
mov
ret
xlat
out
movsl
jae
add
push
dec
mov
jmp
add
cmp
leave
fucom
xchg
pop
inc
and
dec
xchg
fidivs
inc
and
out
jge
mov
xchg
out
test
adc
sbb
sbb
add
decl
jnp
pop
add
stos
mov
out
add
icebp
or
clc
pop
insl
mov
lock
rolb
jg
cld
fistps
jg
call
pop
popa
sbb
fidivrs
mov
jno
incl
test
adc
cs
jecxz
outsb
std
outsl
das
aad
daa
push
mov
inc
sbb
jo
filds
clc
mov
dec
inc
mov
adc
lret
fisttpl
add
imull
xchg
cmpsl
sub
or
xchg
mov
mov
stos
movl
imul
in
sub
outsl
cli
add
xor
outsb
or
mov
pop
dec
fucomi
call
mov
mov
je
int
mov
std
pop
or
sub
ret
push
dec
repz
jg
inc
out
fisttpl
xchg
daa
lret
pop
stos
jg
fs
in
in
lods
xor
repz
push
push
mov
push
add
mov
dec
fadds
push
stos
lcall
adc
or
test
stos
pop
fistps
ficoml
sahf
pop
cld
test
pop
mulb
fwait
pop
or
imul
push
adc
mov
bound
lods
mov
nop
mov
cmp
or
dec
add
jne
in
rcrb
push
sbb
mov
jmp
push
add
add
and
mov
push
pop
dec
sbb
xor
lret
add
push
push
and
addr16
test
test
add
mov
out
mov
aas
fs
test
daa
xor
dec
cmp
sarb
dec
mov
xor
add
sbb
mov
dec
outsl
lea
pusha
or
jb
add
ljmp
sbb
ror
push
sub
xchg
mov
ret
mov
mov
incl
pop
mov
adc
test
loope
lds
push
aad
mov
in
dec
jne
fsubrl
mov
shl
xorb
jg
push
dec
insl
ret
mov
pop
sbb
jecxz
sub
cmp
lock
inc
movsl
movsb
in
jns
sbb
adc
cltd
or
aaa
pop
js
push
mov
ljmp
jecxz
call
fstpt
mov
fcmovnb
push
rorl
sub
mov
sbb
je
fisubrs
into
or
adc
pop
pop
and
test
and
addb
out
movsl
rorl
mov
loopne
loop
cmp
push
cmpsl
add
and
sbb
mov
fdivrl
add
imul
adc
repz
mov
push
xchg
push
decl
jns
jmp
movsb
les
lcall
gs
insb
out
cmp
in
mov
testb
sub
or
cmp
lcall
lahf
in
lods
dec
pusha
test
and
ja
add
and
sbb
aad
xor
or
jg
and
outsl
leave
testl
jae
mov
aam
push
movsb
imul
jg
loope
movl
mov
aam
jo
pushf
push
in
mov
mov
mov
jne
movsl
push
and
imul
outsl
push
add
pop
mov
or
cltd
pop
dec
cld
movsl
fwait
subl
out
std
push
in
ja
aaa
pop
cmp
adc
dec
test
je
fs
mov
or
outsl
jnp
mov
jae
xchg
mov
and
jbe
inc
mov
pop
lock
push
daa
add
mov
insl
jb
pop
sub
decl
mov
test
hlt
pop
mov
xor
mov
insb
lock
pushl
movsb
push
mov
cwtl
mov
push
ret
push
adc
das
sub
mov
stos
or
pushf
jmp
test
fwait
idiv
cmp
repnz
loop
xchg
mov
pop
loop
add
imul
ljmp
or
pop
clc
pop
sbbb
push
sub
divb
adc
movsb
xor
cltd
pusha
push
ret
ljmp
jmp
stos
fcompl
fidivrs
in
adcl
fildl
add
inc
pop
mov
mov
ret
pop
sbb
cmpsl
pop
pop
sub
push
mov
mov
xor
popa
insl
rcrb
or
in
or
cwtl
mov
inc
inc
sbb
or
and
in
and
addb
dec
xchg
popf
arpl
mov
sub
lcall
add
idivb
mov
mov
add
mov
ret
daa
mov
cmp
out
push
jl
pop
dec
cmp
mov
pop
sbb
jg
gs
test
js
stos
jns
cmpsb
inc
jle
push
mov
loopne
sub
nop
mov
ret
cs
stos
jge
fucomip
mov
es
movsb
mov
into
shl
arpl
nop
add
mov
imull
jbe
adc
sbb
xor
scas
add
ror
or
js
ljmp
inc
dec
inc
das
hlt
movsl
outsb
stos
mov
add
add
ljmp
nop
adcb
inc
add
movsl
dec
cmp
xor
jle
dec
dec
repz
movsb
or
jb
ja
pop
loopne
jno
sbb
das
sbb
mov
cs
popa
cmpsl
pop
jo
inc
xor
xchg
push
push
je
xor
ljmp
fisubl
cmp
incb
adc
leave
add
sub
jg
mov
adc
movsb
test
cltd
outsb
adc
jmp
or
jmp
xchg
in
push
movsb
in
mov
or
mov
mov
add
mov
or
test
mov
out
xchg
mov
and
mov
sbb
enter
repnz
and
mov
xchg
xchg
push
flds
jae
add
xor
cs
xchg
sbb
cltd
bound
xorb
jmp
aaa
xchg
rolb
inc
xchg
mov
das
arpl
pop
mov
enter
cli
jmp
pop
dec
in
pop
ror
pop
sbb
push
or
sbb
pop
mov
adc
pop
in
fmull
ds
sub
pushf
xchg
mov
outsl
rcl
in
inc
mov
loope
push
fs
decl
push
mov
mov
inc
xchg
jg
hlt
inc
jo
and
adc
mov
mov
jecxz
shlb
jbe
in
lods
shll
pusha
mov
iret
xchg
jb
incl
sub
popf
jmp
pop
cwtl
inc
sti
mov
ficoms
adc
xlat
rep
mov
subl
sbb
je
add
fldt
mov
out
pusha
fs
sbb
push
and
cmp
push
stos
test
leave
push
pop
mov
lcall
pop
and
jmp
nop
pusha
sbb
inc
ljmp
xchg
sub
push
cmp
xchg
mov
loope
rcrl
xor
ss
xor
dec
pop
dec
popa
mov
mov
test
loope
inc
sar
rorb
push
test
jns
icebp
movsl
mov
inc
adc
icebp
sub
jge
pop
mov
jno
fdivrs
jno
add
test
fucomp
call
cmp
inc
add
mov
jge
jp
loopne
jmp
lock
xor
daa
or
add
jg
bound
imul
ljmp
lods
int
mov
call
incl
push
stos
movsb
test
adc
sub
inc
inc
xlat
js
test
movsl
in
cmp
push
mov
pusha
jmp
outsl
pop
out
dec
addr16
sub
lret
daa
pop
stos
call
pop
or
xlat
test
mov
xlat
rolb
rcll
inc
loopne
mov
aaa
mov
inc
lods
mov
movsl
incl
test
sub
jne
jl
and
add
mov
push
inc
add
lahf
jl
dec
push
lcall
or
cltd
call
fisttps
jbe
adc
fildll
or
push
and
mov
outsl
inc
cld
js
stc
data16
jno
cmc
je
pop
ss
and
ret
push
xor
push
lret
xchg
loopne
pop
test
js
in
cmp
fs
popa
and
or
sub
sub
or
je
pop
cmp
incl
filds
test
fwait
add
xor
loope
cld
jmp
push
jns
xchg
leave
int
popf
xor
pop
inc
adc
cmc
inc
jg
cmpsl
mov
jge
je
cli
adc
mov
cli
loope
pop
loope
lret
mov
insb
adc
pop
mov
pop
adc
add
adc
sbb
aas
inc
mov
lods
lcall
push
test
push
out
sub
fsubs
push
sbb
inc
jns
aad
jb
or
inc
jg
sub
hlt
neg
inc
adc
add
testb
add
dec
inc
mov
rol
mov
xlat
insb
in
dec
hlt
pop
sbb
or
inc
rolb
clc
add
pop
push
mov
icebp
mov
fimuls
fcomps
clc
inc
pop
xor
cmpsb
stos
push
inc
int3
adc
mov
inc
sub
lock
lock
lds
pop
arpl
mov
lods
and
in
pop
add
push
sub
sbb
xor
jl
cld
loop
andb
or
rol
sub
ffreep
inc
add
int
mov
int
sbb
repz
mov
xor
pusha
inc
add
or
and
cld
popf
jp
sub
xor
inc
ja
inc
xchg
jecxz
or
mov
jno
ret
test
dec
in
and
mov
cli
mov
sti
adc
idiv
pop
inc
cmp
cwtl
js
movlps
sbb
xchg
mov
cli
and
lds
push
cld
inc
adc
popf
sub
outsb
mov
dec
out
lock
mov
or
das
lahf
sub
xor
mov
cli
dec
out
hlt
and
lcall
and
lock
or
jb
pop
sbb
arpl
icebp
jne
mov
scas
loopne
aaa
add
add
cmp
aas
popf
push
jno
pusha
cs
shll
and
call
mov
jle
mov
fdivs
dec
adc
add
mov
or
mov
cmpsl
mov
or
mov
jbe
jl
rcrl
adc
call
sbbl
cmpsl
out
cmp
jmp
pop
jmp
push
shrb
mov
or
loopne
insb
incl
sahf
jg
mov
scas
xchg
and
mov
bound
stos
popa
in
cwtl
or
push
mov
test
shlb
int3
jae
ret
std
call
xchg
sbb
jge
cmc
push
jle
icebp
fldt
into
decl
dec
push
cmp
cld
sub
add
gs
cli
cmp
popf
sbb
cld
pop
mov
mov
sahf
pop
repz
lock
call
adc
jnp
push
sbb
xor
int3
jecxz
mov
adc
mov
dec
lods
stos
cmp
mov
ljmp
push
or
in
sbb
pusha
mov
jg
pop
ljmp
jmp
lods
push
mov
jle
lcall
push
xor
add
adc
fs
jl
or
insb
gs
mov
sti
xor
and
shlb
loop
shll
shl
aad
cmc
jmp
gs
sbb
push
dec
ljmp
ja
movsl
push
popa
jb
arpl
pushf
mov
es
ljmp
je
jb
sub
das
loopne
movsl
push
cmp
pushl
lods
popf
push
lock
mov
scas
add
fldl
mov
xlat
mov
add
fisubrl
cld
push
xchg
cwtl
push
inc
int
test
fbstp
pcmpeqw
jl
cld
ds
clc
mov
les
or
xor
test
cmp
pop
mov
andl
push
fwait
das
mov
lods
lahf
push
das
orl
pop
or
lea
pop
push
lret
mov
xor
lret
lcall
jge
xadd
js
dec
add
std
mov
dec
mov
fstpt
ret
cmp
test
pusha
push
sub
adc
inc
ds
push
ljmp
xchg
sbb
icebp
push
xor
mov
jg
cmp
jne
popa
mov
xor
pop
incl
jg
jle
pop
sahf
mov
dec
push
imul
fsts
dec
jg
adc
sub
push
out
repnz
mov
mov
call
mov
inc
es
cmp
cld
or
xor
adc
inc
mov
lcall
je
movsl
outsb
adc
movsl
pop
add
aaa
sbb
ds
cmp
push
outsb
pop
cs
and
inc
fs
iret
orl
fbld
push
rep
pop
or
or
and
pushl
nop
sbb
dec
cmp
mov
xchg
pop
pop
leave
fsubrs
aad
ljmp
and
mov
out
sbb
outsl
push
sbb
xor
cltd
clc
sbb
jle
inc
lea
fs
iret
mov
rcr
push
push
add
ljmp
aad
jle
sbbl
jl
jl
cmc
xchg
hlt
fnstsw
push
addr16
inc
pop
rcr
data16
into
jg
outsl
inc
fidivs
lcall
in
cmp
inc
xor
jg
call
adc
popf
in
jle
inc
icebp
mov
jo
incb
adc
movsl
inc
call
outsl
jbe
bound
xor
ljmp
mov
repz
push
inc
push
rep
call
ljmp
add
dec
sbb
push
cmpsb
adc
rolb
inc
mov
nop
rcll
xor
jp
test
xor
dec
or
ror
pop
xchg
mov
mov
add
sub
dec
dec
pop
pusha
in
add
xchg
and
and
push
mov
jns
loopne
call
fdivp
xchg
cmc
imul
adc
dec
add
cmp
xor
and
sbb
popl
and
pushl
cmp
ret
and
ret
mov
testl
shlb
dec
ds
pop
xadd
std
cmp
sbb
mov
xchg
and
and
mov
subb
or
negl
xor
outsl
lock
cmp
movsb
adc
cltd
jb
or
mov
loop
jge
ljmp
jle
push
dec
dec
push
enter
cmpsb
dec
div
mov
insb
lahf
in
shlb
decl
out
stos
aas
ds
add
dec
loope
dec
or
inc
sbb
lcall
es
addl
addb
mov
mov
cmp
call
sub
add
jbe
add
test
jmp
ss
cmp
icebp
rclb
pop
or
cld
in
nop
mov
adc
outsl
add
mov
dec
adc
test
xor
xchg
stos
add
adc
fdivl
repnz
test
fwait
mov
cmp
fadds
fwait
adc
add
dec
addb
orb
sub
mov
fdivrs
push
adc
dec
jb
jmp
sub
pop
adc
pop
and
mov
mov
sbb
pop
push
jle
adc
sbb
push
adc
outsl
xor
aad
mov
push
jns
sub
mov
pop
test
adc
ret
mov
dec
pop
enter
sbb
sub
pusha
mov
arpl
jne
fisttps
repnz
add
pop
mov
mov
sti
das
out
je
lcall
sub
sub
adc
mov
pusha
pushf
or
cmp
add
cmpsb
adc
iret
lds
jp
aas
stc
adc
push
clc
add
inc
sub
dec
add
rolb
clc
add
sub
andb
call
add
leave
lock
cmp
mov
mov
add
sub
daa
arpl
and
add
xchg
push
and
inc
add
sbb
dec
les
inc
push
rol
ret
push
or
add
jge
ss
dec
mov
xor
int3
pop
pop
sub
xor
xlat
sbbb
pop
ret
test
cltd
fcomps
fwait
and
out
fs
fmull
imul
xor
rcl
pop
cmp
adc
jae
out
adc
dec
mov
or
and
rolb
jecxz
andb
inc
sbb
and
pop
cwtl
lock
lcall
lcall
push
add
inc
adc
mov
pop
dec
fiadds
in
mov
pop
clc
call
lods
add
pop
orb
dec
fwait
test
adc
adc
mov
fsubl
add
sbb
mov
je,pt
mov
shrl
or
lret
jo
add
lret
push
push
cwtl
jl
ret
add
jb
or
or
ljmp
sub
mov
lea
out
neg
aaa
inc
mov
iret
dec
jle
inc
sbb
loop
or
dec
xchg
xlat
jle
ss
push
jne
addb
xchg
mov
push
and
loop
or
jmp
test
jb
adc
ljmp
imul
mul
ljmp
lcall
or
jbe
stos
cltd
xchg
rcll
add
mov
mov
push
hlt
adc
pop
sub
cmp
sub
jb
mov
fsubs
or
cmp
pop
inc
add
clc
out
sub
hlt
out
mov
fsubr
inc
lcall
adc
arpl
aaa
pop
inc
int
and
inc
sbb
push
xor
jbe
popf
mov
pop
movsb
jnp
mov
cmp
in
pusha
test
outsb
mov
sahf
push
outsl
pop
xchg
xchg
adc
add
addr16
loopne
push
adc
cwtl
arpl
cmp
sub
cs
mov
int
jp
cmp
inc
and
inc
dec
addr16
dec
ss
lcall
xorl
fcmovnb
inc
shlb
loop
insl
stos
cmp
mov
out
xchg
ds
sbb
fnstenv
mov
xor
cmpl
jne
sbb
add
or
pop
clc
mov
xchg
mov
mov
aam
sbb
pop
mov
mov
dec
clc
add
fisubl
xchg
js
filds
aas
ret
mov
test
ja
pop
in
orb
push
fwait
xchg
enter
adc
inc
inc
flds
adc
or
mov
push
pop
mov
lock
pop
loope
sbb
xor
mov
jne
sbbl
cmp
mov
push
jne
notb
popf
pop
pop
ret
cwtl
scas
ljmp
les
int
out
out
xchg
and
or
cli
cmp
cmp
pusha
adc
add
outsb
mov
lret
adc
movsb
call
add
xchg
pop
fs
xor
aam
jmp
add
fldt
pusha
sbb
xchg
jnp
insb
pop
outsl
adc
and
aad
inc
inc
jecxz
fiaddl
sub
xchg
add
ror
push
jno
dec
iret
and
loop
or
xor
rolb
cli
push
pop
pop
arpl
mov
adc
stos
outsl
ret
push
out
or
adc
sbb
lds
lret
adc
imul
rclb
jbe
xchg
push
jbe
cmpsb
outsl
das
test
mov
stos
inc
and
jo
pop
and
push
jmp
xchg
xor
or
mov
mov
les
addb
adc
adc
pop
pusha
cmp
add
loopne
mov
sub
mov
inc
test
ljmp
jne
rcr
inc
and
mov
data16
mov
addr16
jns
es
das
inc
lock
sub
cmp
sbb
subl
pop
nop
pop
xor
cmpsb
popf
push
mov
push
sbb
icebp
ficompl
cld
fsubs
mov
scas
lock
stc
jl
or
das
pop
xor
cmpsb
pop
pop
inc
push
cmp
xchg
cmpsl
je
adc
aad
imul
or
insb
lock
xchg
push
dec
insb
pop
xor
push
inc
loopne
andnps
bound
cmc
decl
inc
adc
aam
add
xor
int3
inc
outsl
dec
add
mov
inc
mov
or
ret
into
adc
mul
xor
aad
fcom
hlt
xor
add
std
or
incb
addr16
cmp
out
pop
push
aam
cmp
and
out
es
in
out
in
in
xor
jmp
adc
dec
aaa
cld
roll
cmp
add
jnp
fsubl
mov
enter
dec
adc
dec
push
jb
imul
mov
popa
int3
inc
push
jb
mov
shrb
add
ficoml
dec
push
clc
adc
repz
xchg
pop
and
adc
inc
fmulp
fnstcw
dec
jmp
mov
int
dec
xor
aad
sub
and
adc
mov
les
pop
out
mov
lcall
aaa
icebp
scas
jne
jbe
add
adc
outsl
push
sub
call
lock
cli
mov
adc
adc
jle
jb
mov
stos
adc
adc
sbb
xor
test
rcrl
jno
mov
subb
push
jge
mov
xchg
xchg
pushf
repnz
insb
fs
mov
mov
inc
inc
call
add
ret
sbb
and
arpl
sub
enter
cmp
aaa
push
xchg
into
test
mov
xor
das
aam
test
adc
cs
ret
daa
mov
fimuls
pop
inc
ret
lret
xchg
mov
adc
sub
test
xor
xchg
jno
jbe
mov
call
sbb
or
sbb
mov
mov
lea
xor
sbb
cmp
mov
inc
mov
push
push
mov
call
and
jle
rorl
adc
addr16
loope
jp
pop
and
stos
adc
pop
push
cmp
or
sub
es
lcall
iret
push
out
or
dec
xor
shrl
data16
or
hlt
and
movsb
into
push
iret
and
fld
lcall
mov
and
xchg
pop
lret
and
call
ret
popf
clc
and
sbb
shll
incb
pop
bound
push
dec
daa
orl
out
xchg
jnp
and
out
jecxz
icebp
nop
movsl
lcall
fwait
xchg
push
stos
cltd
mov
sbb
loopne
mov
cltd
aas
mov
push
les
and
sbb
lock
andl
or
filds
cmpsb
scas
mov
bound
mov
roll
xchg
outsl
inc
hlt
mov
jbe
shrb
mov
adc
push
inc
mov
movsb
stc
divl
cli
andl
add
lcall
loop
stos
subl
add
xchg
daa
sbb
push
jmp
loope
shrb
loopne
and
pop
inc
xorb
add
rcll
xchg
test
xor
inc
sahf
rolb
pop
fldenv
negb
mov
mov
mov
popa
mov
out
dec
mov
popa
stos
jmp
jge
sub
add
cmp
cli
sbb
cmpsb
test
pusha
fs
loope
mov
mov
sarb
rcrl
es
sbb
adc
adc
mov
adc
pop
mov
sbb
push
and
sub
scas
push
add
add
xor
dec
cwtl
mov
cmp
adc
fisttpl
push
mov
dec
sub
test
enter
mov
cwtl
dec
ljmp
mov
jb
mov
add
jp
jp
outsl
inc
push
sub
or
popa
adc
mov
jnp
faddl
pop
fisubl
push
int
movsb
pop
adc
fs
push
cmp
jae
xchg
pop
sarl
pop
sti
sub
or
fwait
xchg
adc
popf
adc
jg
push
pop
inc
notl
sub
cwtl
outsl
mov
or
pop
xor
adc
iret
mov
mov
mov
xor
arpl
mov
mov
lret
cmp
mov
lret
adc
xlat
xor
xor
push
inc
xor
push
daa
xchg
lods
and
sub
aaa
icebp
xor
sbb
or
roll
and
jns
mov
dec
or
adc
lock
je
and
and
sub
aaa
cwtl
aaa
add
adc
lds
ret
jle
adc
loope
mov
sbb
aad
js
fwait
jno
adc
bound
jg
cmp
cltd
sahf
ficomps
fs
adcl
xor
andb
nop
in
and
or
test
pop
sub
out
jl
and
add
sbb
jnp,pt
lgs
imul
inc
jmp
push
ljmp
ret
or
out
in
subl
popa
test
jno
dec
jbe
test
dec
sbb
fidivrl
lcall
mov
fwait
aam
fs
adcl
cmp
loope
xchg
cmpb
pusha
push
pop
in
xor
push
cli
dec
mov
dec
and
push
mov
pusha
inc
mov
ret
mov
gs
mov
ljmp
push
add
ret
aad
sub
add
add
cmc
sub
or
loopne
hlt
int3
andb
sub
ja
jmp
int
inc
enter
adc
cmp
pop
pop
push
xor
add
xchg
lret
jle
push
cmp
add
out
mull
xchg
lods
cwtl
lret
lock
sbb
mov
cli
sbb
cmp
xor
add
mov
push
mov
pop
push
adc
adc
and
or
aam
or
dec
call
cmpsl
push
lea
push
push
xor
int
clc
inc
cld
push
add
add
int3
loopne
push
cmpsl
xor
test
je
dec
and
sbb
mov
and
xchg
or
enter
lds
into
xchg
popl
fwait
jge
xchg
incb
pop
insb
nop
jnp
hlt
daa
mov
test
sbb
ja
push
xor
out
xchg
jae
ret
mov
inc
in
pop
mov
and
das
inc
add
leave
loop
cmp
inc
adc
jl
adc
adc
pop
faddl
addl
sbb
mov
es
pop
fdivs
mov
imul
add
vunpcklps
ss
inc
and
arpl
out
adc
roll
andl
sub
push
daa
add
cmp
xchg
pop
sarl
js
add
inc
js
cwtl
adc
xchg
xor
mov
fwait
cmpb
sub
pop
xchg
xor
in
dec
push
sbb
push
push
sti
jge,pt
cmp
aad
and
jbe
and
js
sub
out
frstor
call
or
insb
ret
aas
scas
cmp
or
push
testl
mov
add
mov
sub
or
push
xchg
sub
mov
gs
sub
cs
ret
shll
and
jl
fisttpll
inc
sti
cs
aas
jecxz
sub
push
popf
fisttpll
orl
jecxz
fldl
xorb
bound
xchg
add
push
daa
xor
shlb
je
sbb
pushf
rol
push
test
jne
mov
cmpsb
and
ds
add
cmp
cmp
inc
mov
adc
cs
ja
pop
hlt
bound
leave
push
add
xchg
and
inc
inc
scas
je
sbb
adc
add
dec
pop
or
in
jp,pn
out
add
or
shrl
outsl
push
test
push
mov
push
or
add
add
add
shrl
ja
pusha
dec
inc
adc
and
dec
inc
dec
aas
fcoml
data16
cmp
test
xchg
jge
push
or
in
out
cld
xor
pop
iret
divl
sbb
nop
pop
arpl
ljmp
pop
xchg
jmp
cmp
inc
loop
fidivl
ljmp
or
cmp
outsb
cs
inc
inc
cli
inc
jecxz
lcall
xchg
outsl
or
jg
jp
daa
adc
sub
sbb
xchg
xchg
fsubrs
add
stos
pop
jne
fsubr
push
inc
into
fiadds
xchg
pop
mov
mov
inc
cli
arpl
enter
mov
lds
or
sub
cmp
jo
xchg
and
les
cld
jp
movb
sub
adc
push
addr16
imul
test
lea
adc
lock
inc
jmp
movsl
xchg
pop
inc
inc
pop
xchg
mov
pop
nop
jle
cmc
xor
add
aam
subb
aas
xor
adc
daa
sar
or
mov
cmp
mov
pop
add
cmp
pop
inc
fidivrl
xor
ja
add
adc
in
aaa
adc
sub
adc
lock
inc
sbb
fmuls
hlt
cwtl
imul
mov
push
jmp
testl
ret
mov
loopne
movb
push
mov
cmpsl
ret
mov
inc
ljmp
aam
cli
ljmp
addr16
loope
outsl
mov
pop
xor
pop
icebp
mov
push
test
jbe
xchg
sbb
mov
or
push
ret
mov
inc
popa
int
inc
dec
dec
sahf
orb
push
lcall
jp
cmp
je
mov
cmpsb
sbb
fsubrl
jp
inc
jl
jl
test
jb
mov
sarb
push
stos
out
xchg
test
dec
xor
int
xchg
xchg
cmc
xlat
push
pop
adc
ret
decb
aad
cmp
repz
adc
repz
bound
mov
icebp
cmp
fsts
jb
pop
push
flds
mov
call
fidivs
pop
sub
or
shll
inc
mov
insl
or
lods
mov
fwait
cmp
sar
mov
cmp
je
cmp
fwait
mov
sub
dec
sub
xor
hlt
xor
cld
add
and
or
cli
stc
dec
push
dec
add
inc
popf
in
cmp
lock
adc
lock
mov
sbb
scas
xchg
clc
enter
jno
test
cltd
push
out
inc
xchg
jp
cmpsl
xchg
or
jl
int
cmp
loop
in
and
sbb
inc
lret
loope
rolb
mov
test
pushf
imul
or
icebp
sbb
ds
add
in
mov
lea
sub
and
jp
subb
popf
call
pop
push
pop
imul
sbb
fldl
imul
pop
js
mov
xor
popa
icebp
bound
dec
add
rol
adc
ljmp
movsl
js
popa
adc
add
lcall
ret
and
or
jg
loop
testl
cmp
and
fs
sbb
jno
xchg
cmpsb
or
gs
mov
adc
pop
jg
dec
sbb
mov
daa
inc
cmp
mov
add
and
andl
bound
jp
mov
ljmp
pusha
ficoml
adc
in
xchg
xlat
mov
mov
sub
sbb
jmp
icebp
adc
ret
mov
fs
cmpsb
push
loopne
int
cmp
sbb
cmp
jae
xor
inc
in
rorl
push
and
add
cmpb
xchg
lea
dec
push
dec
enter
cmpl
mov
push
lods
pop
adc
into
add
adc
ret
pop
pop
loope
mov
add
and
inc
adc
cmpsb
jne
jl
xor
loopne
mov
push
mov
arpl
pop
int
cmp
icebp
xor
and
pop
mov
add
je
mov
lods
add
xor
inc
jl
or
mov
dec
or
insl
cmp
sahf
ljmp
or
aam
cwtl
dec
mov
adc
xor
add
jo
out
movb
inc
mov
pusha
fwait
mov
or
stos
in
adc
pop
push
sub
dec
ret
or
cmp
jmp
gs
jae
adc
add
test
jb
sub
out
fwait
lcall
mov
leave
sub
mov
clc
inc
and
repnz
aaa
adc
sub
dec
orb
add
ret
push
xchg
sub
cmp
lods
mull
jg
test
xchg
outsb
call
aam
in
repnz
xchg
gs
add
popa
je
repnz
test
cmp
adc
cmp
mov
imull
sbb
mov
aam
mov
es
adc
xchg
push
mov
jno
or
add
adc
add
xchg
sbb
popa
and
vmread
and
push
lock
sahf
fdivp
mov
aas
add
xchg
dec
daa
mov
sti
cmp
clc
ret
add
mov
cmp
out
xor
bound
sti
sbb
push
rcl
test
add
pop
daa
stos
clc
stos
leave
push
and
and
sub
add
dec
sahf
pop
dec
cmp
and
adc
imul
fadds
or
jl
inc
dec
dec
les
mov
test
lock
add
mov
xchg
lahf
test
test
add
and
popa
or
test
ret
or
inc
or
mov
es
out
add
insb
andl
and
cs
jbe
push
ret
cs
or
mov
add
fcoml
xchg
mov
call
in
push
xchg
outsl
push
fmuls
and
and
lret
mov
add
insl
inc
loopne
repnz
leave
mov
cld
or
cltd
enter
mov
jg
sar
pop
add
push
cld
shlb
repnz
pop
cld
shll
or
or
mov
icebp
ja
shll
pop
xor
pop
or
lock
cmpsl
xor
pop
push
inc
and
dec
lods
pop
aas
dec
popl
add
scas
jno
pop
stos
out
insl
mov
and
lahf
cmp
rorb
and
xorb
or
push
cmpsl
cmp
mov
xchg
mov
aaa
popa
adc
push
insb
adc
adc
out
jbe
xor
sahf
pop
add
adc
pop
xor
cmp
mov
inc
push
movsb
add
mov
sbb
cmp
popa
adc
sbbl
lds
inc
adc
je
jbe
gs
push
and
lret
push
cmp
pop
enter
cmpsb
xor
pop
outsl
mov
adc
jecxz
shll
and
inc
jle
cli
pop
fadds
dec
and
mov
jl
pop
jp
fs
fildll
out
inc
adcb
rcrl
adc
adc
cmpb
add
jg
rcrl
stc
mov
sbb
mov
xor
nop
fwait
stos
xchg
xchg
add
repnz
ret
rorl
or
mov
pop
hlt
mulb
push
mov
sbb
inc
mov
sbb
addr16
xor
jo
adc
mov
sbb
decl
cs
or
adc
pushf
pop
add
das
sbb
inc
inc
xor
sbb
xchg
data16
cmp
adc
dec
enter
jb
fs
leave
jae
shl
loopne
mov
inc
mov
ret
fcmovb
dec
dec
jnp
jae
subb
pop
arpl
mov
or
add
loop
std
or
sbb
sbb
test
push
push
lock
adc
push
pop
addr16
cmp
jmp
sbb
ljmp
adc
push
shl
cmp
je
adc
sub
mov
mov
mov
ret
pop
addr16
sbb
pop
inc
rcrb
and
dec
das
lock
incl
lahf
fdivrl
ret
fsubs
imul
clc
mov
fdivr
mov
popf
jl
push
call
jecxz
pop
iret
movl
mov
sar
pushl
icebp
sbb
pushf
jl
mov
jl
jle
pop
loopne
mov
es
icebp
sub
cld
ds
jecxz
jecxz
jecxz
out
movsl
test
clc
jl
pop
mov
or
jg
movsl
push
and
xlat
push
movl
clc
icebp
pop
cli
inc
ds
jl
lahf
xor
leave
out
stos
inc
repz
or
sbb
lcall
jl
jp
jae
clc
jo
icebp
cmc
pop
aad
into
clc
sub
mov
scas
cmp
adc
cmpb
jecxz
pop
push
ljmp
fistps
pop
mov
inc
negb
mov
decl
ret
and
jl
adc
cwtl
mov
mov
and
ds
add
popl
mov
test
push
pop
les
push
jl
ds
jecxz
cmp
push
mov
in
decl
decl
sar
mov
mov
fdiv
jne
fstps
in
incl
sbb
sbb
clc
es
jecxz
lea
shrb
decb
loopne
inc
sub
cmp
xchg
mov
inc
in
call
jo
cmp
add
pop
push
mov
sub
bnd
decl
fbld
push
pop
pusha
pop
icebp
jge
into
movl
clc
outsl
dec
jg
or
jno
jl
push
lret
pop
cs
sbb
mov
and
cli
popl
testb
xchg
mov
and
jg
call
idiv
mov
mov
lods
pop
roll
mov
xlat
xchg
inc
sub
mov
inc
xchg
and
adc
icebp
call
push
adc
hlt
fs
sub
test
jo
and
sbb
ljmp
aad
stos
push
iret
cs
jno
mov
decl
push
inc
les
cmp
nop
inc
and
ljmp
inc
sub
push
mov
adc
cmp
xchg
les
repz
add
jge
leave
mov
test
loop
nop
or
fs
fwait
or
add
xchg
cmp
ja
add
push
or
add
movsb
stos
adc
dec
loop
push
sbb
push
add
dec
inc
clc
movsb
xor
inc
dec
lret
push
add
aad
xchg
adc
dec
mov
das
sar
ss
push
das
mov
aam
daa
and
inc
inc
push
adc
mov
ss
mov
jbe
or
stos
mov
cmp
pushl
or
std
inc
in
cmp
inc
stos
out
fadds
cwtl
outsl
in
push
cmp
jo
xchg
in
jg
hlt
or
pop
cld
in
sbb
xchg
loopne
sbb
mov
cld
inc
shrb
lock
push
adc
add
sub
dec
lods
fdivrp
pop
mov
push
bound
test
js
loopne
popf
jle
jbe
add
mov
cld
pop
inc
mov
pushl
jmp
mov
movl
mov
mov
ds
outsl
lods
push
pop
loop
popf
jge
push
outsb
in
adc
incl
arpl
mov
push
add
rcrl
fistps
adc
sbb
or
andl
or
mov
ljmp
sbb
adc
jg
inc
or
lods
je
cmp
jg
cmp
sbb
iret
jnp
mov
lea
imul
jbe
repnz
js
or
das
sbb
jle
popa
sub
mov
subb
mov
sub
int3
mov
jg
mov
pop
push
arpl
inc
ds
repz
push
or
je
cltd
lea
jnp
pop
push
bound
pushf
mov
test
and
mov
adc
bound
clc
mov
dec
lret
xor
aam
adc
mov
xor
add
cmp
add
in
in
insl
dec
inc
and
sub
lret
push
enter
into
aas
cmp
je
mov
xorb
and
dec
movsl
popa
lock
mov
std
out
sub
je
arpl
mov
fadds
test
call
popa
arpl
cwtl
sbb
and
inc
cmp
js
test
add
inc
movsl
push
js
std
pop
stc
jle
sub
cwtl
cmp
jg
cmp
rolb
mulb
jb
push
sar
jmp
loop
lods
xor
pop
jmp
out
test
sbb
adc
ret
ret
out
dec
sbb
cmc
ret
bound
sbb
pop
test
mov
inc
aad
shlb
pop
jbe
mov
sbb
adc
hlt
cld
mov
das
push
cwtl
les
pusha
xchg
push
jae
xchg
aas
mov
inc
aaa
adc
mov
add
jge
push
add
dec
xchg
adc
pop
divl
mov
add
or
inc
mov
add
fmull
push
mov
rep
cmp
inc
jge
fwait
mov
sub
add
add
mov
push
adc
adc
cld
mov
sbb
jns
incl
add
cmp
sbb
sub
lret
lret
pop
das
cld
lea
mov
repz
and
fildll
add
ss
popa
jg
ljmp
inc
sbb
clc
js
jb
pop
inc
push
sub
repz
fistps
repz
xchg
jle
xor
or
clc
pop
sahf
rcll
and
jl
mov
rcrb
mov
inc
std
mov
insl
adc
or
aas
iret
aaa
add
in
scas
outsb
jo
sbb
nopl
icebp
lcall
std
inc
cmp
outsl
test
outsb
sub
mov
cmc
idivl
outsl
in
or
and
fldcw
lcall
xor
leave
dec
mov
sbb
push
mov
xor
das
lds
adc
cmp
push
orb
cmpb
xor
stos
sub
xor
jg
addr16
xchg
call
jb
adcb
mov
pop
arpl
xor
cmp
cld
or
incb
pop
test
inc
in
enter
cmp
ljmp
cli
pop
adc
rcl
dec
pop
pop
jle
mov
sbb
lds
ss
sub
fisubrs
mov
dec
jp
test
fldcw
xor
inc
cmpb
aam
in
add
lock
clc
int
cmp
call
decb
addb
mov
inc
push
test
sbb
bound
mov
xchg
add
push
sar
jmp
js
repz
sti
lret
aam
dec
repz
cld
xlat
xlat
pusha
lretw
ret
lcall
mov
fldcw
loopne
arpl
jge
jmp
nop
adc
push
pusha
sub
fucomp
mov
or
lods
out
jecxz
sti
adc
call
mov
in
daa
cmp
push
xor
pop
sbb
shlb
lret
movsl
stos
push
dec
and
push
xchg
mov
test
pop
adc
icebp
ret
push
inc
sub
fs
xchg
xchg
mov
jp
mov
xor
xor
and
push
cmp
mov
adc
jle
jmp
ljmp
dec
add
add
aaa
lock
jae
push
and
and
sarb
shl
mov
mov
test
inc
ret
or
movsb
inc
or
add
pop
repnz
sbb
ljmp
nop
add
mov
add
fmull
add
aaa
adc
adc
inc
rol
mov
mov
andl
insl
addb
imul
rorb
mov
aad
xor
sbb
stos
xor
sub
pop
adc
aas
add
add
ret
cmp
mov
adc
and
inc
add
add
andb
inc
sub
mov
jl
adc
shlb
add
cmp
enter
jo
cltd
jo
shll
push
sbb
cmc
stos
push
shlb
data16
negb
inc
adc
dec
icebp
inc
xchg
mov
mov
inc
fs
adc
mov
fmull
test
stos
pop
filds
inc
adc
mov
cmp
test
sbb
scas
add
inc
aas
outsl
jmp
push
push
mov
dec
xor
cmp
add
push
and
sub
or
and
nop
mov
sub
bound
xchg
nop
mov
orb
sbb
dec
loopne
hlt
add
stc
adc
add
es
jge
or
imull
lds
xlat
sbb
xchg
add
push
adcb
add
adcb
push
ja
or
ja
or
mov
test
push
shlb
push
mov
addr16
int3
pop
add
mov
inc
adc
push
inc
test
in
adc
add
sbbl
icebp
or
js
out
stc
icebp
ds
mov
adc
call
addr16
dec
shl
and
sub
mov
insl
lds
pop
adc
adc
sbb
or
push
push
es
mul
pop
mov
ret
and
jno
pop
mov
mov
and
add
rcr
dec
and
cmpsl
jns
adc
push
mov
xor
pusha
and
add
xor
sbbb
shl
adc
sub
jmp
dec
xor
xor
test
inc
pop
adc
push
cmp
xor
test
ljmp
jbe
lret
or
mov
push
or
inc
cmp
add
xor
pop
mov
imul
add
mov
inc
lock
lea
mov
pop
inc
dec
arpl
aas
in
adcb
outsl
jnp
into
lds
flds
addb
cwtl
pop
scas
cmp
sahf
mov
mov
pop
push
pop
jo
jg
dec
mov
or
aaa
imulb
hlt
jns
daa
mov
cmp
sub
roll
push
dec
gs
cmc
pushl
nop
sbb
push
jl
jle
jmp
mov
inc
das
inc
sub
add
cli
js
add
je
subl
call
push
lahf
iret
cwtl
push
addb
jg
pusha
mov
mov
sub
daa
sbb
xchg
jno
cmpl
ret
jmp
add
lret
mov
cmp
pop
cld
fildll
cli
and
or
std
daa
mov
cmp
mov
incl
test
jg
fdivrp
mov
jg
mov
sub
es
push
mov
xchg
test
mov
dec
pop
movsb
mov
outsl
add
mov
stos
sahf
aad
inc
imul
roll
daa
ds
pushl
jp
test
ret
data16
mov
rol
inc
xchg
adc
test
adc
cwtl
jge
lock
and
dec
ds
and
mov
mov
or
add
lahf
sub
sub
xchg
test
jbe
or
leave
cmp
incl
dec
sbb
or
jo
sub
mov
cwtl
rorl
adc
xchg
pushl
cli
inc
jmp
jl
or
sbb
jae
cltd
movsb
inc
push
push
dec
and
sbb
test
xor
dec
dec
push
inc
mov
add
xchg
mov
inc
and
push
cltd
out
push
mov
sub
xor
jg
mov
sub
add
mov
xor
jo
push
call
daa
pop
or
outsb
outsl
sbb
jg
ja
sbbb
add
xchg
bound
add
mov
pop
lods
movsl
gs
fildl
and
shl
push
lcall
xor
push
cltd
mov
xchg
mov
push
ds
xchg
dec
loope
jg
repnz
cli
fstps
jns
mov
dec
std
jg
sbb
sbb
dec
mov
mov
adc
cli
ret
cwtl
pop
mov
lock
push
lcall
jo
decl
int3
pop
and
repnz
divb
vpsraw
sub
dec
and
xchg
mov
out
or
add
fisubs
push
sub
pushf
pushf
adc
out
inc
sbb
or
ja
jg
icebp
add
cmp
or
jg
pop
iret
mov
icebp
pop
mov
inc
cwtl
inc
test
or
lret
mov
nop
jns
and
add
mov
add
addr16
shrl
or
add
mov
psraw
or
push
ss
bswap
stc
sbb
fists
ret
insb
add
add
add
cmp
lock
mov
push
bound
adc
adc
inc
xchg
sar
mov
out
adc
sbb
xchg
cmp
test
rclb
dec
jecxz
jb
mov
shr
lea
add
cld
jle
test
push
add
sub
loop
fists
imul
call
icebp
aam
xor
enter
push
and
stos
mov
les
cmpsb
pusha
ljmp
push
inc
mov
arpl
add
push
cli
call
fs
push
es
inc
xchg
outsb
mov
js
jle
andb
mov
shrd
into
inc
mov
cltd
mov
lock
mov
dec
cli
mov
sub
and
inc
lcall
std
sbb
ret
xchg
or
push
xor
lods
xchg
pop
cs
ljmp
sbb
das
push
mov
push
cli
movsl
jle
mov
mov
sbb
sbb
pop
loopne
add
mov
or
mov
test
inc
pusha
add
mov
push
out
push
push
pushf
sbb
sub
dec
lcall
orb
repnz
movsb
pop
sbb
dec
in
add
mov
xlat
clc
xchg
xchg
shl
enter
inc
dec
call
cmp
add
fisttpl
adc
mov
mov
leave
pop
addb
subb
adc
or
je
js
pop
test
imul
loope
pop
xchg
call
inc
hlt
push
inc
movsl
adc
adc
ja
enter
xor
in
inc
es
lock
inc
loop
or
and
aas
xor
push
movl
jle
mov
add
aaa
mov
scas
adc
mov
mov
loopne
pop
and
push
in
cmp
adc
xchg
adc
push
sub
in
mov
shll
loop
pop
adc
jno
or
xchg
orb
dec
and
out
jge
push
mov
adc
into
adcb
adc
stos
rcl
lock
xor
pop
addr16
mov
mov
orb
or
jnp
push
pop
mov
rcl
ljmp
xor
js
mov
cltd
pop
pop
inc
cld
fisubs
in
loopne
jp
fdivrs
jmp
mov
inc
mov
cltd
xor
sub
cmp
icebp
or
fisttpl
punpckhbw
jae
rol
sub
stos
dec
in
jl
stos
mov
ficomps
imul
inc
xchg
mov
sbb
adc
aaa
push
dec
or
insb
call
xchg
or
aad
ljmp
push
insl
repz
insl
ljmp
xor
in
andl
ss
dec
pop
push
or
sub
ss
clc
sub
icebp
fyl2xp1
les
jno
mov
in
fcomi
mov
mov
pop
jns
enter
js
leave
outsl
sub
xchg
rcrb
insl
cli
inc
jl
add
jecxz
ret
lret
push
test
and
mov
loop
jnp
cmpsb
loopne
and
xchg
inc
cmp
les
cmp
cwtl
rcrl
mov
arpl
or
lods
call
dec
sub
jae
std
cwtl
aam
cmp
data16
repnz
sbbb
jp
cltd
in
sub
test
xor
test
inc
das
add
insb
add
mov
jp
push
cmp
ret
aam
bound
jbe
sti
xor
push
or
xchg
repnz
fcmovbe
shr
dec
add
cld
add
push
test
outsb
inc
and
iret
jne
lock
ljmp
sub
lret
loopne
repnz
mov
xlat
xchg
inc
sbb
rcl
adc
jle
jge
ljmp
sahf
rorl
xchg
push
add
es
or
mov
fdivr
and
mov
shlb
fstps
lock
add
cli
rorl
pop
sbb
cwtl
mov
incl
lcall
mov
loopne
cmp
movsl
decb
and
and
or
in
pop
sub
and
pop
add
push
adc
sbb
add
push
jle
test
add
ret
out
jg
incl
nop
pop
mov
nop
ret
and
adc
fdivl
bound
cwtl
jg
mov
mov
cmpsl
add
les
dec
shlb
test
push
fs
inc
cmp
mov
sub
adc
push
sar
loop
push
adc
pop
add
mov
adc
xor
dec
add
push
adc
jns
sub
int
jmp
sub
js
and
mov
xchg
shll
outsb
adc
and
data16
rclb
fists
add
and
mov
jns
cmp
mov
xchg
adc
and
loop
mov
and
or
inc
dec
fadds
std
inc
ror
add
fstps
push
or
xchg
test
rcl
or
mov
inc
push
das
lea
sub
or
ljmp
test
dec
push
and
xor
and
stos
adc
aam
incl
loopne
adc
mov
hlt
and
inc
mov
adc
xor
pop
test
test
or
mov
adc
mov
mov
xor
sub
and
adc
lods
das
sub
loop
pop
mov
add
cmp
jne
dec
cs
mov
mov
popf
inc
lea
or
add
xchg
adc
nop
dec
or
loopne
dec
icebp
and
sub
or
nop
jno
sbb
or
in
sub
mov
jb
and
clc
leave
inc
arpl
inc
loop
rorl
cmp
or
enter
mov
sbb
outsl
and
fs
and
mov
or
nop
shlb
add
jmp
stos
inc
insl
inc
lods
enter
and
mov
cmovs
push
adc
iret
push
test
test
in
test
aaa
and
add
std
jmp
test
adc
imul
jne
inc
mov
xchg
mov
or
pusha
jp
xchg
pop
cltd
js
add
or
xor
lret
loopne
dec
pop
dec
inc
mov
fld
add
xchg
and
sub
vmread
pop
adcb
or
add
ret
mov
sbb
dec
push
sbbb
mov
cli
pop
outsb
jne
ret
or
inc
xchg
lea
mov
insl
add
js
mov
xchg
or
andb
loopne
rolb
cmpsl
movsb
jnp
sbb
mov
hlt
add
pop
add
pusha
push
icebp
test
insb
sahf
pop
in
rolb
sbb
mov
dec
enter
outsb
add
push
adc
jle
insb
aad
adc
cmp
orb
call
pop
fadds
ja
sbb
pop
sbb
je
pusha
lea
pop
inc
jle
rolb
sub
dec
inc
inc
add
cmp
fmuls
jg
lods
or
movzbl
loope
addb
pusha
pop
sarb
sub
je
cld
rcr
clc
sbb
sar
jbe
push
push
les
andb
rcrb
pop
sub
clc
neg
dec
inc
jno
scas
dec
push
cmp
sbb
pop
xchg
jo
call
dec
adc
fistps
mov
and
movsb
in
lods
icebp
pop
adc
stos
cmpsb
add
test
add
jmp
adc
inc
fbstp
icebp
leave
lds
pop
mov
jg
xor
stos
dec
push
and
push
jp
into
sahf
pop
shll
jg
adc
pop
popl
in
fidivrs
cmp
call
dec
mov
add
pop
cld
xor
ss
das
pop
scas
sbb
imul
into
mov
or
decl
add
cs
jno
jmp
test
mov
jmp
hlt
sub
shrb
sbb
js
leave
mov
lcall
xchg
cmp
mov
ret
xor
cmp
jmp
jno
and
cld
push
loope
pushf
pop
out
stc
test
and
push
stos
mov
icebp
shlb
mov
pop
bound
jg
jnp
mov
xchg
xlat
stos
inc
mov
pop
pop
cli
outsl
imul
repnz
insl
nop
out
add
js
pushl
adc
aas
rcrb
sahf
pushf
add
inc
fists
sub
aas
inc
pusha
ret
fmull
adc
pop
sbb
jge
jb
pushl
rcll
dec
cmp
mov
outsl
pop
insb
fxch
cmp
push
ficoml
adc
mov
repz
rclb
mov
ret
lock
sub
das
shrl
int
scas
mov
iret
in
cld
jg
jmp
ficomps
les
enter
pushf
push
fdivr
incl
ret
push
andb
movsl
aas
push
rcrb
jle
stc
decl
in
jne
jl
mov
gs
inc
loope
in
inc
into
iret
pop
int3
aas
stos
cld
mov
lods
cld
outsl
clc
pushl
pushl
mov
iret
lods
jecxz
out
out
cmp
inc
jge
jle
and
lcall
clc
aas
sarb
lahf
psubw
aas
cmp
add
enter
mov
add
lahf
xor
lahf
jle
cld
mov
sbb
xchg
jle
cld
stos
ret
lods
adc
jb
jbe
inc
mov
jle
jle
jle
jbe
hlt
jmp
jl
push
mov
mov
add
addl
jp
cli
out
pop
stos
mov
fs
add
dec
test
call
adc
mov
aam
imul
mov
sbb
aas
pop
xchg
jb
test
inc
pop
clc
faddl
cltd
cs
iret
pop
aad
dec
push
jnp
pop
or
and
mov
xor
or
ret
les
mov
push
lret
lret
inc
in
jo
mov
push
das
or
or
mov
lds
push
fiaddl
mov
fldcw
std
sbb
aam
imul
jno
mov
jae
xlat
push
push
iret
pop
daa
testl
adc
movsb
xor
fisubrs
sbb
jo
jge
jmp
stos
das
cld
mov
mov
pop
sub
lds
out
add
aaa
rclb
aam
into
dec
insb
mov
cld
add
hlt
movsl
and
out
loop
pop
rolb
mov
cwtl
add
add
mov
add
fiaddl
adc
into
insl
out
fdivrs
repnz
adc
je
rolb
ljmp
adc
stos
frstor
sub
push
cmp
pop
mov
pusha
dec
adc
mov
icebp
call
call
or
inc
add
int3
cmpsb
inc
or
sub
cwtl
cmpsb
add
out
add
cwtl
sbb
loopne
testl
inc
xor
outsl
mov
adc
mov
cwtl
lock
xor
push
sbb
leave
or
inc
int3
pushf
popf
inc
fsub
add
cmpsb
adc
out
sub
out
add
fdivrs
and
aam
rcll
add
lret
xchg
ljmp
cmp
dec
pop
push
adc
sbb
xorb
int3
fsts
mov
aam
lock
adc
pop
cli
push
inc
dec
js
cmpl
jmp
jo
sub
sbb
inc
jl
dec
add
jp
xchg
add
orl
jbe
cmc
loop
fsts
stos
in
mov
add
stos
insb
push
std
fs
push
push
jno
jge
outsl
int3
xor
cmp
adc
iret
ret
sbb
adc
outsl
stos
sti
xchg
insl
repnz
lret
es
nop
lahf
push
add
add
inc
or
fadds
adc
push
aad
jp
adc
inc
add
inc
into
or
sub
and
inc
push
cwtl
jmp
inc
pop
loopne
fwait
fs
hlt
andb
xor
shlb
sbb
cmpsl
mov
mov
xor
dec
sub
rcrb
popa
adc
in
scas
sbb
stc
inc
mov
adc
jmp
push
js
cmp
addb
les
nop
mov
ret
mov
test
out
jns
movsb
and
mov
mov
cmpsb
or
movl
js
sbb
pop
cs
fisttpl
test
sbb
cld
ljmp
lret
mov
adc
add
push
sbb
in
cmp
inc
and
das
ret
mov
add
shlb
sub
add
mov
insb
xor
fwait
cmp
mov
sahf
mov
scas
mov
xchg
cmc
lahf
xchg
das
je
add
mov
stc
loope
sub
out
push
jg
or
repnz
imul
inc
sbb
pop
clc
sar
and
pusha
adc
sub
mov
mov
scas
scas
sbb
imul
test
movsb
call
lock
push
dec
sahf
cmp
dec
mov
adc
push
push
or
mov
cs
xchg
or
jns
fildll
xchg
lahf
add
mov
xchg
pushf
adc
idiv
movsb
add
mov
sub
xchg
jbe
jg
xchg
arpl
nop
movsl
gs
adc
outsl
jns
adcl
push
cmpb
filds
es
adc
lcall
mov
dec
aaa
aam
cmp
push
xchg
ret
hlt
and
sub
test
inc
arpl
sub
loop
mov
sub
sbb
mov
pop
stc
dec
mov
mov
jo
push
and
and
enter
or
jo
bound
ljmp
imul
mov
pop
mov
pop
pusha
adc
xor
cli
lcall
incl
xor
sbb
iret
xor
mov
pop
inc
mov
lods
push
lcall
jno
psrld
push
dec
mov
sub
incl
in
or
adc
dec
rep
mov
andl
test
adc
push
mov
inc
sbb
add
out
call
cmp
push
dec
les
sbb
xor
loop
in
ret
cmp
dec
subl
xchg
les
push
das
cmc
fbld
adcb
cli
out
sarb
or
pop
fimuls
aam
lock
les
lea
mov
test
jg
mov
daa
scas
mov
aas
push
or
sub
and
hlt
test
subb
out
and
out
jmp
pop
cmp
rolb
test
out
fdivp
push
pop
cmp
test
xchg
call
stos
filds
pop
lods
jmp
sub
add
push
jl
rorl
cmp
add
and
aaa
clc
adc
out
pop
sub
dec
nop
psrld
les
xchg
or
fcmovnbe
push
mov
fimuls
sub
mov
and
cmp
adc
jmp
shlb
push
int3
or
push
clc
xchg
add
add
jo
inc
pop
fcom
mov
lret
les
mov
pop
loop
dec
out
stos
xchg
shll
jg
fcoms
mov
arpl
mov
mov
shrl
push
dec
inc
test
mov
jne
adc
cmc
or
jle
fiadds
test
xchg
nop
xor
xor
jg
dec
and
xchg
add
pop
sti
pushl
test
mov
iret
push
arpl
je
imul
inc
mov
roll
jl
and
cwtl
push
cli
movsl
mov
mov
mov
mov
sbb
idivb
sbb
dec
sub
bound
mov
rcrb
push
fwait
es
pop
xor
push
lods
das
nop
or
pop
xchg
outsb
lods
xchg
jecxz
pop
je
mov
sbb
push
test
jl
cld
pop
pop
mov
icebp
adc
push
xchg
test
cld
jle
mov
movsl
popa
inc
cs
pop
sbb
add
incl
or
and
shr
sub
or
daa
leave
test
pop
and
lahf
pushf
ret
dec
or
popa
mov
mov
xor
leave
adc
xor
test
fcmovb
fs
test
inc
cs
cmpb
adc
mov
std
repz
pop
das
push
loop
add
lods
dec
jge
mov
sbb
nop
inc
fmul
and
test
outsl
lock
jge
popf
stos
jo
jle
out
mov
push
ret
into
daa
xchg
mov
xchg
fwait
jg
fnstsw
shl
mov
dec
mov
dec
sub
leave
xlat
bound
call
inc
cmpsl
pop
dec
inc
push
xor
mov
pop
fisttpll
pop
or
jbe
adcl
or
aam
mov
ljmp
push
xchg
add
dec
cs
js
xlat
roll
push
insb
outsb
push
mov
movsl
sub
mov
jmp
cld
pushl
dec
inc
jno
repnz
cli
cmp
jp
and
sub
inc
jb
pop
in
mov
aas
and
mov
decl
pushf
and
pop
xchg
jnp
test
lret
mulb
push
and
inc
inc
imul
jmp
push
pop
and
add
add
dec
mov
dec
data16
mov
inc
adc
orl
or
lret
mov
lcall
jecxz
call
outsb
lea
add
or
jl
movsl
adc
add
xchg
mov
mov
ljmp
push
mov
jnp
int3
and
je
sbb
mov
test
fs
popf
insb
stos
dec
jmp
cld
jmp
les
jae
mov
pop
and
cmpb
testb
aas
dec
cwtl
pushf
int
adcl
testl
jg
rcll
xor
loopne
cmpl
repnz
arpl
mov
add
jp
xorb
adc
add
fldt
icebp
mov
shrb
xor
jl
mov
mov
lcall
dec
push
sbb
lea
icebp
inc
sub
mov
add
incl
xchg
mov
sti
ljmp
fnstsw
dec
jg
mov
orb
cmp
data16
or
leave
add
pop
pushl
ret
out
add
scas
push
xchg
push
sub
xor
and
jo
loopne
pop
adc
std
cmpsb
mov
popa
sbb
lds
loop
punpcklwd
add
in
sub
nop
xchg
or
fmul
into
insl
sbb
mov
sub
iret
xor
and
push
ret
js
jno
or
jg
mov
sarl
adc
loop
add
hlt
add
jb
add
pop
loop
testl
push
add
jg
push
xor
out
sub
popa
sub
fmull
inc
je
xchg
leave
dec
push
cmc
lret
out
pop
clc
push
jecxz
stc
test
pop
aaa
inc
aas
sbb
push
mov
jns
sub
fs
fwait
xchg
pop
pop
jge
out
cmpsl
filds
cli
aaa
mov
mov
jne
ret
adc
aad
add
pop
aaa
jno
dec
xor
movsl
stc
in
clc
mov
jno
xchg
loop
inc
ss
xor
adc
sar
imul
dec
dec
jmp
jle
mov
xchg
in
popf
and
dec
aad
lds
aad
int
push
scas
orb
adc
sub
aam
stos
movsb
cmp
jae
sub
ffreep
sub
push
mov
arpl
add
int3
xchg
inc
rorb
add
mov
sub
test
fcomp
pop
fs
out
out
sbb
enter
cmp
outsl
lods
jge
imull
or
ficomps
inc
xchg
mov
add
testl
push
leave
jno
mov
andl
dec
out
adc
ljmp
in
mov
ret
cmp
adc
sub
and
outsl
shrb
jmp
push
pop
add
add
mov
stos
mov
or
dec
ret
cli
jg
popa
jae
cmpl
cs
inc
in
enter
call
jo
in
mov
addb
jp
cmp
jmp
jo
aad
mov
push
pop
clc
adc
lret
inc
xor
inc
shrl
cld
dec
fistps
pop
subl
inc
js
jns
cmp
inc
mov
or
ds
pop
push
call
push
test
mov
and
lcall
repnz
repz
mov
and
push
les
jp
lods
jg
sbb
outsl
or
adc
inc
sub
ret
add
ljmp
xchg
add
inc
ret
xchg
cltd
loop
pusha
gs
out
fdivp
jg
mov
inc
xorb
add
and
cli
stos
fisttpl
adc
pop
roll
jno
cmpsb
mul
pop
loop
sbb
shlb
jbe
in
jg
dec
icebp
sub
adc
and
adc
jno
in
mov
call
das
push
dec
jg
push
push
mov
fmul
inc
inc
add
or
in
mov
call
je
mov
sti
adc
cwtl
fisubrs
mov
das
cld
outsl
icebp
fcomp
aad
das
lock
cwtl
add
cmp
mov
push
xchg
arpl
xchg
jo
mov
jg
ret
data16
fadds
cltd
ljmp
decl
test
inc
fs
icebp
outsb
mov
dec
pushf
mov
subb
fidivl
push
sub
xlat
daa
push
push
sbb
add
mov
mov
jne
add
outsl
rcl
cmp
outsl
daa
mov
test
lret
xor
or
xlat
ljmp
std
das
call
lea
icebp
or
xor
jnp
sub
emms
scas
add
leave
push
and
outsl
cld
outsl
adc
ret
push
movsl
xchg
mov
bound
jbe
add
xlat
lods
jg
inc
repnz
clc
pop
or
je
xchg
cmp
add
pop
decb
into
or
insl
adc
out
mov
jo
cmc
or
ja
out
mov
mov
cmp
popf
ljmp
inc
cld
decb
push
lds
add
xchg
xor
lods
or
push
rcll
incb
ds
mov
nop
int
out
mov
pop
xchg
ja
outsl
std
fstpl
les
sub
push
push
jp
pop
jns
mov
mull
shll
dec
pop
inc
pop
loope
adc
call
lahf
adcb
lods
stos
popf
popa
cmp
mov
out
or
rcrl
pop
rclb
xchg
cmpsb
aaa
clc
or
nop
sub
cld
insb
mov
out
mov
lret
movsl
add
pushf
clc
aas
call
loopne
cmp
js
std
sub
mov
mov
pusha
and
mov
mov
in
and
jl
and
adc
insl
jo
inc
ljmp
push
push
add
sar
decl
jns
pop
pop
in
mov
movsb
sbb
test
push
sub
push
pop
xchg
test
adcl
movsl
mov
push
aad
jbe
hlt
lock
icebp
add
pop
popf
adcl
and
cmpl
pop
push
inc
sub
icebp
jg
mov
and
insl
in
fstp
jl
out
and
btr
cltd
cli
incl
das
mov
pop
inc
mov
or
add
out
or
mov
push
sti
dec
fildll
cmpsl
ds
jg
adc
mov
ret
add
pop
mov
ljmp
scas
add
adc
dec
adc
mov
pop
add
scas
sub
in
inc
sbb
add
mov
push
xchg
and
fdivrl
aad
mov
cmp
lahf
insl
jbe
inc
data16
push
cmp
mov
in
int3
add
dec
sub
jp
je
xor
cld
push
outsl
jo
pop
psubw
inc
lock
xor
xor
hlt
jg
pop
inc
int
ret
pop
mov
cmc
cmp
out
push
inc
testl
xchg
adc
or
testl
repz
call
dec
mov
mov
bound
das
add
inc
inc
jns
push
and
push
dec
test
pop
push
shrl
icebp
jge
dec
adc
stc
sub
inc
jl
in
pop
cli
mov
dec
add
adc
jnp
nop
lods
lods
fwait
std
add
mov
push
loopne
rol
and
adc
lahf
add
loopne
adc
addb
mov
adc
or
shr
adc
mov
add
xlat
adc
sub
or
pop
sub
arpl
test
inc
fs
jae
into
subl
jl
add
sub
adc
pop
js
ds
in
popa
jno
lret
inc
aaa
push
jno
add
add
in
je
das
out
add
add
mov
int3
sub
add
pop
js
mov
xor
xor
mov
mov
fwait
loopne
cmp
jo
sub
mov
push
or
sbbb
sbb
mov
testb
mov
adc
xor
jmp
in
cmp
jmp
adc
lret
fmull
fildl
jmp
roll
iret
pusha
sbb
movsb
loop
or
adc
loop
adc
pop
loope
fldl
arpl
daa
push
sbb
dec
addl
jl
cs
ljmp
lock
lock
jecxz
adc
jae
out
ret
dec
inc
fistpl
add
test
xchg
icebp
xchg
mov
cmp
adc
orl
cmp
hlt
sbb
inc
ljmp
mov
add
aam
or
jnp
xchg
rorl
rcrl
stos
xor
loopne
jnp
je
sbbb
dec
mov
xor
inc
rcll
in
mov
push
add
push
iret
dec
add
shll
imul
sbb
xor
and
pop
jne
and
lock
data16
and
sbb
std
into
inc
bts
sub
inc
lock
fistps
sub
ret
mov
xor
test
cmp
es
mov
mov
lods
inc
ds
int
inc
shlb
pop
pushf
add
adc
setbe
sti
jb
xchg
add
rcll
cltd
add
and
mov
daa
ljmp
inc
xorb
mov
or
sub
out
and
adc
cs
popl
cmp
add
sbb
rolb
pusha
sbb
in
push
adc
push
movsb
pushf
repz
rcll
es
xorb
daa
jae
test
xchg
dec
inc
in
jb
mov
andb
mov
jecxz
xor
or
adc
inc
dec
adc
inc
mov
insl
or
in
stos
jo
sbb
mov
std
mov
fcompl
jecxz
inc
mov
inc
or
dec
add
addl
cli
mov
filds
jnp
popa
insb
jbe
xor
inc
out
inc
lods
mov
xor
cmpsl
sub
adcl
cmp
mov
and
or
cmp
adc
add
xor
or
jb
push
xor
call
cmp
xchg
icebp
add
clc
add
fwait
sub
outsl
add
xor
pop
dec
loopne
dec
ljmp
sub
sub
bound
cmp
push
and
inc
loope
mov
pop
mov
push
scas
lock
pop
lods
inc
and
addr16
xchg
inc
sbb
mov
lret
push
testl
std
popf
and
decl
xor
mov
in
test
add
movsl
std
incl
pop
pop
stc
inc
cmpb
and
loop
xor
decl
shlb
lcall
inc
in
bound
ss
outsl
mov
and
test
push
mov
sub
ret
outsl
xchg
push
lret
push
sub
or
xchg
cltd
int3
hlt
pushl
cmp
jnp
std
cmp
mov
mov
clc
mov
fadds
and
fs
shlb
add
mov
push
mov
cmp
rcrb
push
mov
and
push
pushf
dec
addr16
addb
xchg
adc
ljmp
jecxz
mov
in
jno
lock
sbb
aaa
xchg
pop
push
add
std
jmp
test
lcall
cld
fists
dec
dec
xchg
pushf
hlt
insl
cmp
jg
and
xchg
or
add
dec
push
jno
mov
in
pop
dec
pop
cmp
add
xor
mov
test
test
cmp
add
dec
scas
fsubl
ljmp
pop
jp
add
out
mov
pusha
dec
push
out
mov
jg
xchg
mov
je
and
cld
add
pop
pop
adc
pusha
dec
aad
xor
ljmp
mov
add
and
cmp
fstpt
cmp
inc
pop
mov
mov
mov
add
xchg
stos
incl
call
popf
cld
sub
pop
jb
add
movsl
pop
lods
addl
dec
mov
jmp
aam
sub
mov
pop
into
stos
add
mov
fcom
cmpsb
mov
mov
add
pop
adc
lret
adc
call
mov
sbb
or
jge
add
cltd
xchg
add
in
enter
and
popa
xchg
sbb
daa
insb
push
add
test
and
dec
push
shl
and
or
mov
cs
rcrl
add
test
mov
adc
push
mov
dec
jmp
sub
mov
mov
dec
test
iret
mov
jp
in
mov
mov
sbb
pop
add
cmpsl
and
and
xlat
dec
sbb
pusha
fs
and
cmpsl
add
cld
ret
addr16
pop
test
dec
cmpsb
sarb
test
in
xchg
les
out
orl
scas
push
gs
or
jo
push
sbb
lret
and
std
or
and
decb
sub
stos
and
dec
mov
xor
push
ret
inc
mov
mov
or
dec
mov
out
sub
jl
jg
insb
add
and
push
lods
mov
mov
lock
add
lahf
pop
lods
xchg
pop
add
fcmovu
pop
clc
hlt
xchg
xor
sub
pop
adc
sub
push
mov
fildll
xchg
cmp
aam
ret
cmp
pop
insb
add
out
repnz
mov
dec
push
add
sti
push
sbb
sub
mov
nop
dec
pusha
dec
xchg
sbb
dec
adcb
push
jmp
adc
add
in
fdivrl
cmp
and
cli
mov
jbe
adc
mov
dec
cmpsb
pusha
fs
mov
add
and
ret
int
cmpsl
fs
jbe
cmp
pop
inc
xchg
jecxz
sbb
add
sahf
add
mov
sub
ds
lock
push
test
imulb
jnp
mov
lods
mov
xsaves
test
mov
add
add
mov
int
xor
jb
fistpll
jno
and
mov
add
aaa
test
mov
fistpll
es
daa
stos
mov
lods
out
outsb
addb
mov
cld
cli
mov
pop
cli
xchg
add
xchg
shll
mov
sti
ret
sub
js
fs
push
mov
lea
stos
fisubrl
cmp
subl
xchg
lock
fcmovnb
or
test
dec
and
inc
out
cmc
add
sub
ret
ss
pop
fbld
clc
fildll
mov
pop
sub
call
inc
lahf
clc
jns
xchg
jbe
rclb
das
lea
incb
insb
jge
xor
clc
xlat
dec
adc
ficompl
out
push
mov
or
cmp
and
mov
pop
fmul
das
or
and
test
shlb
jno
popa
xchg
insl
mov
inc
jecxz
adc
inc
adc
sar
pushl
sti
idiv
jo
dec
pop
jae
cli
out
dec
and
mov
adc
or
fcmove
iret
and
xchg
dec
push
inc
adc
shll
mov
sti
mov
in
fwait
mov
roll
cmp
adc
nop
fldcw
mov
nop
push
int3
mov
and
or
ljmp
test
test
pop
cld
adc
out
clc
xchg
stos
inc
mov
lahf
push
xor
xchg
mov
and
pop
inc
sar
fstpt
and
and
fs
inc
imul
aam
xor
test
inc
adc
or
mov
pushl
cld
sub
vmulss
pop
dec
mov
mov
and
xlat
ljmp
mov
sbb
jb
pop
adc
int3
inc
mov
test
jnp
dec
adc
or
jae
test
push
pop
fidivl
shrl
lock
xchg
mov
es
and
scas
xor
jne
mov
sar
aas
mov
and
roll
ds
ljmp
pop
hlt
arpl
pusha
popf
clc
loop
or
inc
mov
mov
pop
aam
add
stc
sbb
notb
test
ret
repnz
inc
sbb
xchg
fnstenv
popl
pop
les
sti
fildll
fbstp
cmpsl
xchg
pop
push
test
or
jg
jg
sub
cmpsl
jo
aaa
lcall
lret
sbb
repz
lret
dec
repnz
mov
add
mov
mov
ljmp
mov
lret
ret
inc
cs
xchg
in
insb
lret
neg
js
mov
cld
push
mov
es
mov
rorl
dec
test
dec
pop
push
add
push
xorl
lods
lahf
stos
andb
ret
mov
pushl
out
in
add
sahf
or
mov
jecxz
lahf
dec
scas
test
inc
inc
cmpsl
pushl
int3
fwait
out
push
dec
insb
in
push
in
push
clc
xlat
adc
adc
inc
jmp
test
xchg
sub
fimull
flds
jnp
or
dec
outsl
sub
xor
pushl
and
add
jae
sbb
add
je
jbe
fstpt
addb
mov
and
shlb
lret
gs
dec
pop
pop
testl
jg
lods
fidivs
aad
or
loope
mov
jle
test
ss
push
push
or
dec
sbb
outsb
enter
pop
fisubrl
hlt
push
outsb
insl
lcall
cmp
add
mov
push
dec
inc
push
dec
das
xchg
dec
mov
fistpl
pop
dec
jne
fisttpl
repnz
call
das
std
add
push
mov
ret
adc
ds
xchg
mov
cmp
movsl
xchg
sbb
pop
pusha
movsl
rcrl
adc
pop
cli
dec
aas
addl
aam
xor
push
xor
or
dec
mov
movsb
leave
jne
das
pop
sub
scas
xor
mov
cmp
sub
bnd
add
in
data16
aas
daa
pop
loopne
or
ret
imul
call
fisubrs
std
push
fnsave
movsl
xchg
xchg
cmp
ret
mov
pop
or
ficoms
push
test
bound
add
dec
xor
fistpll
or
pop
adc
int3
cmp
sbb
cwtl
inc
mov
push
adc
dec
xchg
mov
scas
pop
sbb
data16
fildl
ds
sbb
das
mov
xor
xlat
sub
xor
bound
sub
cld
dec
test
push
int3
dec
arpl
test
shr
mov
xor
ljmp
jb
pop
scas
cmp
mov
fmull
inc
adc
pop
mov
fnsave
inc
mov
jg
loopne
sbbb
sti
jg
test
scas
mov
cmp
lods
cs
or
lret
pop
push
in
pushl
loopne
adc
xor
mov
lcall
insl
push
mov
xor
incl
dec
jl
fcmovnb
sub
gs
xlat
inc
aam
rcrb
xchg
pop
push
mov
cli
and
sub
pop
mov
inc
lods
push
xchg
push
cwtl
lods
xchg
dec
test
negb
inc
cmc
icebp
test
push
push
sub
incl
in
std
movsl
add
cmp
mov
mov
or
leave
ds
cmc
cwtl
xchg
scas
adc
in
test
jg
pop
leave
mov
dec
mov
push
mov
sbbl
jge
stos
mov
test
cld
jmp
add
inc
inc
push
lret
adc
aaa
clc
push
and
fwait
mov
and
addr16
sub
es
push
jg
lcall
fbstp
xchg
add
add
icebp
fstpt
dec
xlat
jns
test
add
fstl
mov
pop
adc
stos
scas
xor
pop
lods
sub
and
or
push
aad
hlt
jg
inc
xor
in
mov
xor
dec
je
mov
aaa
lods
int
sbb
jecxz
sahf
mov
stos
or
fs
movsb
xchg
adcl
jnp
dec
in
or
jge
outsl
xlat
stos
les
call
mov
mov
dec
mov
pop
fs
aaa
xchg
decl
sbb
sub
stc
hlt
in
into
jbe
popf
mov
enter
jg
decl
or
gs
es
mov
scas
dec
fdivrs
add
push
sub
sbb
xlat
adcl
add
xchg
incl
pop
call
movsl
push
push
shlb
test
jg
lcall
cld
push
orb
push
into
in
clc
outsl
cmp
sahf
mov
inc
sbb
add
cs
xlat
add
inc
mov
and
sub
xorl
ret
sub
cmc
rcrb
out
jbe
sar
lcall
lcall
rorl
push
push
shl
dec
adc
xlat
fcmovnu
jle
push
jne
scas
jle
leave
inc
xor
cmp
push
mov
rcr
hlt
adc
inc
jp
jne
mov
cwtl
inc
adc
inc
mov
mov
shrb
std
push
sub
nop
in
mov
jle
mov
outsl
cld
mov
push
pop
scas
jo
pop
adc
sbb
rcl
pop
sahf
lods
out
mov
call
xor
cmp
popa
negl
sbb
outsl
pop
clc
arpl
pop
and
and
adc
xor
insl
add
sub
ss
or
mov
repnz
inc
push
je
stc
inc
inc
movsl
cmp
andl
dec
push
mov
jmp
js
push
push
cli
inc
inc
sbbl
xor
call
mov
dec
adc
test
repz
lcall
jmp
incl
in
adc
lods
mov
dec
stos
inc
sub
cmp
mov
push
mov
int
mov
arpl
lods
adc
dec
dec
incl
outsl
jno
jge
push
out
pop
jae
push
dec
pop
roll
cmp
data16
aad
fcom
adc
mov
out
sbb
fistpll
lcall
in
xchg
adc
xchg
add
mov
out
sub
dec
jp
jmp
inc
fisttpll
popf
dec
or
stos
orb
sbb
jb
in
add
pop
mov
pop
mov
std
cmpl
pop
jp
mov
inc
push
or
mov
out
data16
leave
push
add
push
decl
imul
sub
push
int
or
outsl
or
dec
push
rolb
jmp
mov
or
sub
xchg
dec
das
test
sub
dec
nop
xchg
lcall
dec
fistps
je
lock
mov
adc
adc
inc
and
dec
fstpl
cli
ret
aad
sti
test
js,pn
clc
cmp
cmp
sbb
add
cltd
jl
sbb
mov
rorl
lcall
adc
sbb
mov
leave
inc
outsb
insb
and
push
jg
mov
add
test
lret
mull
push
outsl
cmp
dec
cltd
cmp
mov
add
inc
adc
test
adc
dec
stos
sub
xchg
push
lcall
cld
insb
lds
or
movsl
xlat
push
ja
push
pushf
sbb
or
aaa
fsubrs
ljmp
in
lea
loopw
cmc
decl
inc
inc
mov
sub
js
call
ret
mov
iret
pushf
mov
mov
sbb
out
inc
movsl
incl
mov
test
sbb
add
mov
out
jmp
sbb
add
mov
xor
addb
or
adc
cmpsb
outsb
push
pusha
clc
lcall
std
adc
ret
mov
xchg
xor
or
incl
push
adc
dec
cmp
xchg
lods
sbb
nop
or
jo
adc
mov
adc
cmp
mov
ret
loop
pushf
push
add
push
outsl
push
mov
dec
pusha
jns
mov
sahf
push
mov
push
cmp
mov
inc
in
add
mov
xchg
insb
mov
std
add
sbb
or
das
hlt
xchg
sub
into
jmp
jmp
inc
jno
push
fildl
cmpsb
outsb
mov
and
clc
inc
jne
push
hlt
rorb
sbb
fildl
adc
push
sub
es
push
dec
cli
mov
sarl
pop
mov
inc
jg
xchg
push
mov
push
cld
sub
inc
mov
mov
push
cmp
popf
and
bound
loopne
lds
loope
mov
test
mov
adc
mov
out
ret
fidivrs
inc
daa
xor
add
orl
lahf
insb
mov
ficompl
pop
mov
nop
into
jecxz
pop
push
scas
mov
fcmovnu
push
xchg
sub
inc
mov
mov
mov
inc
imul
cmp
mov
push
lods
js
push
enter
rcrl
mov
iret
das
es
mov
lds
int
sbb
xlat
mov
cmp
add
lret
inc
mov
cli
repz
push
xchg
ss
cwtl
pop
fsubs
leave
insl
shlb
loop
xchg
sti
in
push
pop
mov
ficomps
xchg
and
sub
daa
stos
pop
jp
in
add
jle
push
or
jle
cmp
pop
lock
sbbb
dec
push
lods
insl
test
xor
mov
mov
push
sti
dec
adc
mov
sbb
aam
ss
movsb
sub
fwait
outsl
mov
das
sbb
sub
cmpsb
pop
cmp
sbbb
fs
aas
mov
cmpsl
fimuls
lahf
jne
sub
clc
ret
mov
jbe
pop
inc
push
jo
roll
mov
test
out
fbstp
add
and
iret
mov
adc
inc
push
jo
daa
scas
fucomip
std
push
pushl
ret
adc
push
popf
pop
mul
sub
mulb
adc
dec
rolb
or
nop
mov
pop
xchg
aaa
or
loop
mov
dec
or
bound
or
and
xchg
xchg
xchg
roll
jb
xchg
sub
test
or
pop
inc
pop
jo
scas
imul
pusha
add
les
enter
xchg
addl
adc
xor
aas
adc
push
add
enter
mov
cltd
inc
jno
hlt
nop
mov
in
adc
jl
dec
sub
nop
sbb
pushf
aad
inc
push
add
or
iret
add
adc
xchg
adc
stos
push
stos
ret
ret
mov
dec
leave
sub
or
int3
mov
cmp
enter
hlt
movsb
cmpsb
pop
lods
cmpb
and
xchg
jg
or
mov
mov
stos
or
inc
mov
xchg
rolb
xchg
das
dec
hlt
addr16
pop
cld
or
dec
xchg
jecxz
or
inc
fsubs
push
adc
mov
negl
inc
ret
add
cmp
mov
lock
test
pop
sub
aas
mov
add
sarl
cs
addr16
fs
cli
inc
mov
shll
test
mov
or
int3
push
arpl
mov
mov
sub
enter
ficomps
or
dec
mov
inc
push
adc
or
scas
pusha
xchg
xor
mov
mov
xor
test
repnz
jo
add
clc
pop
aam
stos
xchg
sub
mov
mov
lods
ret
xlat
or
push
sbb
push
and
mov
out
adc
push
push
stos
push
sbb
xor
xor
xchg
sub
or
pusha
sub
inc
cwtl
cmc
test
and
aam
je
mov
mov
mov
cwtl
mov
ds
aas
adc
push
adc
ljmp
das
pop
push
into
cwtl
dec
xor
rorl
add
xchg
sbb
pop
push
out
ret
aad
xorb
fisttpl
xchg
or
int3
push
mov
lds
and
inc
sub
stos
lahf
push
pop
adc
sbb
je
mov
and
cmp
pop
inc
dec
fsts
orb
pop
sar
xor
out
pop
push
cmp
loopne
lret
sbb
mov
mov
bound
stos
mov
orl
lock
cmp
sbb
mov
xchg
les
sub
shlb
lahf
loop
popa
adc
cmpsb
and
cmp
dec
pusha
pop
jbe
pop
nop
and
or
lds
lret
jbe
ja
adc
pop
sbb
cs
mov
out
xor
js
movups
cmpsl
adcl
call
cmp
push
cmp
add
and
roll
inc
jne
test
lcall
dec
inc
fdivrl
mov
movhps
icebp
xchg
in
pop
jbe
sbb
inc
cmp
popa
dec
sbb
fsubrl
xchg
xchg
lret
add
sahf
push
fisubrl
or
fistl
fstl
stos
lds
cmpsl
inc
pop
push
aaa
push
jne
xor
mov
sbbl
mov
loopne
and
aaa
mov
sbb
push
stc
jg
push
sub
xchg
add
xor
add
sub
and
cmp
add
into
sbb
shlb
bound
fnstsw
je
mov
aas
xchg
adc
mov
inc
or
aad
sbb
mov
xchg
push
sbb
jno
mov
sub
jle
mov
xlat
push
mov
mov
sti
shl
lock
gs
xchg
or
ret
xor
jp
add
mov
lea
fsubs
mov
pop
push
mov
ss
sub
xlat
dec
jl
xor
ficompl
pusha
cmp
xor
xor
sbb
aas
and
jge
mov
and
adc
loopne
push
aaa
mov
sub
adc
das
cld
push
pop
fucomp
dec
sbb
addr16
outsb
pop
sub
out
sbb
aam
push
sbb
cltd
lea
sub
and
nop
dec
int3
and
sahf
aas
cmp
and
xchg
out
xlat
inc
sbb
mov
add
pop
pop
lods
je
mov
xchg
ljmp
aas
imul
or
ret
inc
xor
jbe
in
clc
mov
stos
ret
insl
mov
sub
adc
and
test
aaa
mov
cwtl
and
add
and
mov
movsl
cmpsl
adc
mov
adc
pop
mov
icebp
dec
cmpsl
sub
sub
aaa
push
pop
test
sti
sub
divb
cmp
mov
push
mov
mov
clc
sahf
call
stc
imul
adc
inc
ja
and
pusha
jo
push
or
loope
mov
sub
dec
fdivrl
nop
addl
aam
arpl
lret
lods
cmp
push
stos
add
fucomi
inc
lds
add
adc
lret
movsb
pop
imul
jo
aad
insl
cmp
insl
sbb
arpl
aaa
jle
lods
xor
stos
add
js
xchg
mov
mov
nop
cli
insb
loop
jle
mov
mov
sbb
test
mov
mov
lods
andb
out
int
incb
in
stc
sbb
adc
mov
push
mov
inc
or
jecxz
mov
or
pop
jne
jne
out
stos
fisubs
loopne
lods
xor
and
inc
xorb
add
fwait
xchg
clc
pusha
add
jecxz
ljmp
inc
pusha
mov
shrl
addr16
mov
add
add
icebp
jle
in
push
mov
xchg
lods
stos
xchg
sub
jle
mov
inc
sub
rcl
iret
test
pop
shlb
lds
mov
push
orb
je
sub
cmc
or
outsl
xchg
fistps
fnstcw
push
outsl
movsb
mov
ja
ss
test
push
leave
sbb
sub
or
nop
or
aas
repz
cmp
cmp
inc
fxch
adc
mov
adc
jg
adc
adc
adc
xchg
adc
cmpsb
pop
and
cmp
adc
lcall
cwtl
adc
sub
mov
xchg
jecxz
jl
loopne
push
inc
cmpsl
mov
dec
lea
push
dec
add
mov
mov
in
mov
dec
adc
push
xchg
sub
adc
add
iret
enter
or
or
pop
shlb
call
push
and
imul
dec
stos
ljmp
test
adc
xchg
push
add
push
rclb
add
sti
jb
sbb
add
les
lret
xor
sti
cld
lea
daa
add
push
mov
adc
incl
jmp
cmc
jge
mov
cmp
adc
sub
mov
into
mov
and
fnstenv
imulb
and
cltd
xlat
inc
adc
or
out
xchg
cmpsb
in
mov
in
push
into
pusha
pop
jo
xor
push
add
mov
es
cmp
pop
mov
push
and
cmpsb
pop
mov
clc
dec
mov
mov
xor
dec
mov
xchg
mov
mov
cmp
outsb
mov
or
cmp
rol
aam
stos
dec
int
les
pop
or
mov
out
adc
cli
push
rcrb
frstor
ljmp
xor
aaa
cmp
incl
addb
push
adc
add
loopne
cmp
ja
icebp
inc
pop
mov
cmp
sbb
test
data16
in
adc
imul
aam
xchg
dec
loopne
jmp
sbb
xchg
roll
or
inc
subl
loopne
jno
mov
cmp
or
dec
adc
stc
test
leave
sub
je
xchg
jo
jne
mov
mov
xlat
jp
inc
fiaddl
jecxz
sub
scas
jbe
jmp
cmp
ja
adc
aas
inc
add
adc
fimuls
cld
pop
fst
mov
push
test
push
push
mov
sbb
aad
mov
popa
les
inc
jl
jbe
inc
filds
pop
xlat
mov
mov
aam
pop
lock
test
inc
add
jle
xchg
inc
xor
call
xchg
hlt
adc
aam
gs
jl
sbb
call
orb
xor
inc
daa
test
push
pop
xchg
xor
or
les
popa
shl
adc
es
adc
jge
cmpsl
sub
sub
fisubl
shrl
sbb
scas
and
xchg
add
subb
add
movsb
cmp
and
scas
jmp
add
pusha
inc
sbb
sub
mov
fs
pusha
add
add
push
sahf
xchg
push
lock
xor
push
je
test
pop
and
add
popa
loopne
mov
dec
add
cmpsl
scas
ljmp
push
push
cmpsl
jae
add
jnp
xor
sbb
push
aam
aas
daa
xlat
push
or
mov
loope
adc
and
sub
into
lods
hlt
cmp
test
je
pop
popa
out
stos
jb
mov
ja
ss
shrl
icebp
push
ror
xor
shl
xorb
iret
inc
andl
add
sbb
outsb
sti
daa
out
ret
push
aam
btr
and
cmc
xor
push
sbb
aam
dec
lds
dec
or
fbstp
lods
add
cmp
and
loopne
ljmp
js,pn
int3
es
fiaddl
mov
in
adc
jmp
xor
add
sub
or
mov
into
ret
notb
and
add
mov
inc
daa
adcb
sbb
xor
push
shl
fs
lea
mov
test
add
lcall
iret
ret
fwait
rclb
lret
push
test
push
cmc
sub
push
add
sub
or
push
sbbb
stos
push
or
cwtl
xor
adc
dec
add
cltd
jno
int
xchg
push
jo
and
add
add
insb
mov
dec
sub
xchg
ret
jbe
xor
bound
fiadds
inc
sub
jno
in
inc
sbb
shll
daa
and
add
mov
call
dec
inc
clc
ret
pop
in
fld
inc
out
mov
pcmpgtw
and
cwtl
cli
inc
mov
dec
rolb
push
xchg
sub
and
fcompl
add
filds
fstpl
fcmovnb
sub
push
pavgb
test
adc
cmp
xlat
aad
or
lret
dec
ss
dec
or
pop
or
cli
adc
clc
push
rolb
test
ret
in
das
cmp
cld
arpl
jbe
je
loopne
in
cltd
sar
in
ss
mov
add
icebp
mov
sahf
test
dec
ret
pop
inc
inc
rol
inc
icebp
icebp
mov
xchg
inc
jmp
dec
das
pop
test
fs
push
testl
jne
push
push
cmp
cmp
mov
rorb
ret
int
pop
or
add
and
out
out
push
or
inc
xor
inc
xchg
lea
sub
sti
lods
add
and
inc
jnp
sti
push
pop
aad
push
xchg
shrb
nop
lock
fisttpl
mov
sbb
xchg
xchg
pop
push
int3
lcall
popa
movb
pop
jg
dec
roll
mov
enter
xchg
add
push
mov
push
cmp
add
repnz
add
mov
or
and
je
cmpsb
sbb
movd
inc
push
jbe
call
jge
enter
dec
lret
shl
sbb
push
mov
imul
inc
adc
push
addb
mov
sbbl
ljmp
pop
repz
jl
mov
addr16
cmpsl
inc
insl
stos
pop
xor
inc
insl
add
jle
cmp
out
ret
add
sub
adc
xchg
dec
stos
aad
cmpsb
add
mov
loop
sub
jg
mov
add
ret
mov
imul
and
sti
adc
push
cmp
inc
sar
inc
sbb
inc
sahf
imull
sbb
iret
repz
ljmp
push
repnz
int3
and
inc
sbb
std
incl
dec
mov
dec
fs
iret
xchg
pop
cmp
cmp
fbld
push
push
and
lcall
or
pop
rorb
cwtl
xor
test
rorl
cmpsl
movsl
mov
mov
sbb
xchg
push
call
inc
decl
mov
imul
stos
gs
or
incl
push
mov
cmp
mov
rclb
bound
jmp
xor
jnp
lods
adc
sub
stc
sub
pop
add
lds
jnp
movsb
lock
cld
push
adc
aaa
push
stc
lahf
mov
or
xchg
dec
and
inc
ljmp
pop
cld
addr16
ret
sub
iret
pop
lret
outsb
notl
ljmp
insl
mov
into
test
repz
sbb
add
pop
repz
ljmp
js
or
xchg
call
push
sbb
es
data16
call
insb
mov
sbb
shll
test
and
cwtl
add
jb
cwtl
lcall
adc
fisttpll
adc
and
fdivr
pushl
push
jae
xor
or
out
movsb
mov
mov
ret
inc
xchg
test
out
pop
stos
lcall
xchg
mov
ret
outsb
sub
adcb
pop
dec
mov
xchg
fsubl
and
mov
mov
jge
test
inc
mov
loop
addl
mov
pushl
loopne
adc
bound
push
mov
divb
mov
dec
push
cld
adc
inc
and
das
jecxz
and
xor
inc
or
incl
add
les
and
adc
imulb
mov
mov
sub
pop
jg
inc
call
or
pushl
add
nop
mov
test
inc
ret
mov
adc
adc
nop
add
clc
pushl
ljmp
out
movsb
pusha
cld
add
ret
pusha
add
std
les
clc
and
or
pop
das
push
pusha
mov
adc
cwtl
adc
mov
js
loop
fsubrs
lds
call
in
push
sub
lcall
xor
scas
mov
stos
out
fwait
dec
push
adc
stc
mov
ljmp
jbe,pn
dec
movsb
sar
int3
sbb
movhlps
std
ljmp
cli
repnz
mov
mov
add
loop
or
enter
sbb
or
pop
add
shlb
push
in
sub
dec
pop
incb
mov
pop
cwtl
push
fdivrs
sub
stos
cwtl
imul
dec
enter
or
pop
mov
jns
inc
fsubl
mov
in
aad
adc
test
lret
adc
inc
rcll
push
sbb
call
sbb
xchg
imul
sbb
movsb
add
into
imul
mov
adc
incl
jg
sti
mov
test
add
mov
xor
push
cmpsl
daa
andb
lods
pop
sub
pop
xchg
mov
mov
mov
mov
test
jmp
rcl
ljmp
sub
mov
xorl
pushl
mov
add
xchg
test
jmp
lcall
lock
sti
inc
cmp
inc
andl
ja
mov
lcall
or
nop
xchg
test
add
inc
add
sbb
inc
inc
adc
in
in
int3
orb
data16
sub
dec
repz
jmp
jl
sahf
and
ret
movsb
push
or
adc
test
adc
jecxz
mov
test
test
push
enter
pushf
adc
and
inc
fwait
sub
sub
and
mov
outsl
xchg
inc
shlb
jp
inc
or
movsb
or
xorl
dec
add
rcll
add
test
inc
inc
pushl
js
xor
outsl
add
mov
scas
inc
stos
sbb
call
int
mov
dec
jns
push
inc
sbb
or
or
and
inc
push
fistl
decb
adc
add
and
adc
negb
bound
mov
ret
dec
xor
dec
rcll
push
mov
mov
pushl
test
adc
je
pop
sar
mov
cmpsl
mov
mov
pop
push
sahf
das
scas
cwtl
ss
daa
aad
cwtl
push
dec
push
cltd
cli
dec
aad
inc
or
cmp
enter
es
bound
jge
xchg
xor
ljmp
sbb
mov
sub
inc
or
adc
sarb
test
nop
pop
jnp
cmpsl
sbb
jo
cmp
idiv
jmp
aaa
add
and
mov
in
xchg
adc
pop
je
xchg
pop
loop
and
out
pushl
push
test
inc
inc
aas
add
cli
xor
xchg
jb
mov
ja
out
cmp
mov
testb
fldl
andl
mov
mov
lock
sbb
sahf
xor
hlt
jmp
imul
rcr
shrb
jmp
mov
out
movsb
or
mov
mov
mov
loop
hlt
add
push
arpl
jmp
or
pop
pop
sub
pop
inc
notl
ljmp
sbb
xor
insb
insb
pushl
fists
shlb
adc
jbe
sbb
arpl
xor
mov
out
das
inc
mov
push
ret
sti
xorb
mov
notl
lods
lods
push
jle
repz
adc
roll
mov
in
dec
sub
add
mov
js
jmp
std
das
dec
pop
sub
xor
andb
mov
aad
adcb
call
xor
cmpl
cmp
pop
addr16
ret
call
les
int3
in
xchg
pop
or
and
xchg
sbb
adc
aas
sbb
int3
lahf
inc
or
xchg
out
mov
jg
jl
popf
or
jb
into
mov
dec
xchg
das
std
mov
call
xlat
pop
jp
ss
mov
ss
repnz
shll
rorb
fldl
lcall
adc
cmp
lcall
pop
xor
stos
pop
jmp
mov
jnp
scas
mov
cmpsl
cltd
xor
ret
fisttps
dec
mov
push
ret
lret
pop
in
les
cmp
adc
popf
int
add
push
dec
lea
outsl
xchg
push
mov
mov
xchg
call
jl
je
pop
fnstcw
jl
pop
mov
inc
call
or
jg
shl
mov
cmp
pop
xor
cmc
int3
inc
lods
push
aad
and
mov
lods
xchg
outsb
push
cmp
jb
jle
std
clc
mov
xchg
pop
push
clc
push
pop
jecxz
clc
popf
pushl
in
jecxz
test
push
pop
mov
mov
mov
rcrb
sbb
outsl
sbb
idiv
jg
ret
cld
in
push
sbbb
adc
hlt
pop
mov
push
lcall
cmp
clc
mov
dec
mov
pop
jecxz
pop
je
push
jo
fistpll
ror
adc
mov
out
lcall
test
lcall
aas
imul
cmp
pop
fwait
bound
cwtl
or
sbbl
mov
outsl
shll
nop
ss
add
pop
lahf
adc
mov
or
test
stc
icebp
mov
add
pop
jnp
jo
jmp
jno
movsl
loope
jg
ret
in
leave
icebp
jne
fwait
pop
mov
out
xlat
icebp
cmp
roll
loope
loope
and
sub
icebp
out
pop
ja
outsl
mov
jg
fbstp
pop
jecxz
ret
or
ljmp
cld
cmpsl
pop
xchg
icebp
cli
lods
pop
fdivp
mov
jecxz
icebp
inc
out
cmpsl
icebp
cmc
add
in
or
test
add
lock
test
fisubrl
sub
push
loopne
clc
and
jg
incl
and
push
adc
mov
push
pop
mov
jne,pt
shl
in
or
adc
insb
xlat
adc
xchg
add
jecxz
mov
adc
insl
jl
xchg
jecxz
mov
rcll
fmull
push
or
icebp
clc
cmp
outsl
jl
xlat
movl
pop
sar
ret
ret
sub
jo
dec
cmp
loop
xchg
pop
fadd
dec
fstpt
int
scas
push
pop
leave
pop
push
icebp
xchg
pop
pop
jg
in
repnz
add
sub
jl
pop
jecxz
jl
outsl
sarb
ds
dec
sub
pop
xchg
orl
out
jb
push
lds
cli
lods
aam
push
xchg
cmp
or
pop
and
push
mov
sub
xorb
adcb
mov
lret
pop
out
mov
pop
or
push
or
cwtl
loop
sub
adc
push
les
pop
cs
mov
es
sar
addl
shl
inc
pop
inc
xchg
movsb
push
mov
and
and
add
pop
sub
pushl
inc
cltd
je
jae
aaa
pop
or
xchg
inc
adc
cli
in
dec
call
stc
andb
movsb
dec
dec
xor
adc
mov
adc
fstpl
cld
dec
mov
imul
push
pusha
idivb
add
pop
dec
or
push
push
mov
cmp
adc
ret
in
lcall
imul
sub
into
loopnew,pt
arpl
and
loopne
sbb
mov
sbb
nop
jg
imulb
jmp
inc
test
into
adc
adc
cmp
cld
subb
cli
orb
lods
jo
ja
sbb
filds
inc
cwtl
test
push
mov
push
or
mov
mov
mov
icebp
ljmp
pop
lock
mov
test
sub
inc
fs
add
adc
int3
xchg
outsb
enter
icebp
mov
sar
movsl
fsubrl
jecxz
lods
cltd
in
dec
add
mov
pop
mov
call
mov
loopne
test
push
inc
fs
adcb
jg
jmp
out
and
push
and
or
les
imul
std
inc
adc
addr16
in
xchg
movb
fcomps
test
cltd
ficompl
test
jg
pop
ss
or
pop
pop
pushf
scas
ja
pop
inc
mov
mov
xchg
and
icebp
sahf
and
add
push
out
add
mov
lret
les
es
jle
inc
cs
inc
xchg
clc
cmp
decb
fs
xor
sub
cltd
andb
sbb
dec
xchg
je
or
sti
dec
mov
out
sbb
outsl
cld
push
xchg
lods
jae
aas
inc
xchg
aam
mov
xchg
sbb
fldl2e
decl
jb
cmp
or
pop
loope
pop
pop
nop
sub
adc
or
aaa
loope
lcall
or
sub
or
adc
test
mov
mov
xchg
xor
les
ret
push
cmp
dec
aas
or
jno
add
leave
lret
lock
push
fsts
and
dec
xor
leave
in
pushf
bound
pop
call
adc
repnz
shlb
adc
popf
jp
call
int
mov
and
mov
rcll
cltd
mov
inc
out
ror
leave
mov
adc
ljmp
lcall
in
add
adc
jbe
dec
xchg
lds
outsb
lahf
inc
xor
inc
gs
mov
call
mov
inc
shlb
inc
pusha
mov
jne
fisubs
adc
pop
cld
or
xchg
jns
add
cwtl
jg
lcall
add
fistpl
out
xchg
sbb
push
or
lds
xor
add
ret
mov
jnp
movsl
or
inc
dec
dec
rorl
adc
mov
add
mov
sub
xchg
mov
sbb
mov
cmpsl
add
xor
leave
and
ljmp
xchg
lcall
or
clc
sub
test
mov
xchg
xor
cmp
clc
mov
and
mov
aaa
or
push
adc
xor
sub
ljmp
xchg
adc
das
sub
mov
push
xchg
cltd
add
bsf
jnp
ja
hlt
das
cmp
ljmp
push
es
jecxz
enter
push
jb
push
sbb
push
cld
or
sub
sbbl
test
dec
lret
stos
repnz
shlb
cs
add
jns
icebp
and
pop
fcoml
loop
push
inc
mov
xchg
pop
sbbb
push
test
pop
push
cli
and
push
sbb
enter
pop
iret
mov
pop
dec
in
popl
sub
mov
cmc
test
lds
filds
pop
fs
insl
test
imul
push
ljmp
mulb
xor
and
test
jmp
shlb
daa
call
int3
dec
mov
jg
jge
lods
call
mov
lods
push
fbld
test
fs
cli
pushl
or
pop
or
push
push
imul
lds
xchg
inc
dec
clc
mov
push
dec
push
jl
aam
push
cld
push
loop
pop
dec
add
std
insl
adc
inc
pusha
add
sbb
cmpsl
cld
push
dec
cmp
push
lret
jne
test
fistpl
sbb
adc
sub
adc
cmpl
clc
inc
dec
adc
jmp
or
aas
pop
cld
pmaddwd
inc
or
add
xchg
lahf
fistpl
fdivrs
and
jo
adc
cli
or
inc
popf
outsl
fimuls
sub
cli
mov
and
int3
subb
push
clc
lods
jp
adc
and
or
and
rorl
ret
sbb
shl
sub
ret
add
mov
xchg
push
out
or
push
and
orb
push
mov
ret
and
pusha
mov
adc
repnz
dec
movsl
mov
xchg
sub
sub
push
popa
xchg
dec
jge
and
es
inc
gs
dec
inc
xchg
add
rcrl
inc
cwtl
cld
mov
pop
sbb
cmpsl
jecxz
adc
loope
pop
push
loopne
xchg
mov
mov
adc
sub
mov
and
or
inc
dec
and
mov
adc
stc
or
mulb
aas
mov
push
fists
sahf
adc
inc
xor
js
cwtl
mov
and
and
daa
mov
test
js
cltd
test
je
cld
pusha
mov
or
add
fstps
xor
bound
inc
cld
in
test
sub
sbb
ret
mov
adc
mov
loopne
arpl
out
or
xchg
int3
mov
loop
mov
sub
or
push
xor
or
mov
or
inc
int
shlb
and
dec
cmp
push
push
inc
sub
inc
orb
xor
dec
setge
je
test
repnz
cmp
addb
aaa
outsb
jno
inc
push
adc
and
and
jmp
jge
cmpsl
sub
or
sub
xor
adc
push
mov
cli
cmp
and
out
insb
out
es
int3
add
push
push
fdivrp
jnp
pop
test
or
cmpsb
and
pop
je
dec
sub
insl
xor
jmp
leave
jge
sub
jns
add
jae
mov
inc
dec
stos
jle
push
cmp
jo
xchg
popa
out
fldcw
mov
add
cld
fwait
xor
cs
add
nop
add
or
add
fistpl
mov
aad
push
out
sub
add
add
lds
stc
call
or
xor
call
pop
mov
sbb
push
pop
mov
sbb
jle
adc
aas
push
mov
push
test
leave
xchg
ja
xor
jg
and
roll
inc
or
inc
or
or
xchg
and
js
lods
xor
in
sub
mov
in
add
and
rcrb
and
mov
add
je
test
push
or
fwait
int3
aam
sbb
push
adc
adc
es
testb
mov
xor
js
in
cmp
in
enter
movsb
adcl
fadd
or
out
push
cmpsb
inc
mov
mov
in
and
or
lods
push
push
loopne
clc
mov
pop
adc
and
sbb
loop
pop
leave
dec
jne
jo
hlt
cmp
push
popf
stos
push
das
mov
mov
sub
or
adc
mov
sub
xlat
inc
push
mov
lea
add
mov
lcall
mov
fcoms
repz
mov
dec
push
or
and
sub
lock
fdivs
js
iret
push
mov
dec
out
add
xchg
ss
jmp
push
pop
sbbb
int
jmp
xor
jb,pn
inc
dec
pop
mov
push
rolb
shrl
jle
push
add
mov
mov
inc
xchg
push
sub
sbb
jp
and
arpl
xchg
xor
or
inc
sub
minps
pop
aaa
ret
in
add
pop
jmp
or
outsb
add
dec
lds
mov
dec
and
add
fimull
iret
inc
xor
dec
inc
push
add
sbb
add
es
test
adc
scas
movsb
ret
scas
push
add
out
test
inc
jge
rclb
xchg
insl
mov
les
adc
aad
in
cmpsl
and
incb
cmp
pop
sub
or
aas
rcr
xor
adc
lods
sbb
pop
addb
loopne
cmp
lds
jg
loopne
and
sub
sahf
xchg
xor
cmc
push
push
xor
mov
inc
cmp
inc
sbb
and
cltd
aaa
sahf
add
sarl
adc
jge
mov
rorl
aas
cli
add
add
ret
clc
adc
inc
dec
add
popa
add
add
popa
push
adc
lods
aaa
xor
out
add
push
das
or
loop
insl
inc
std
adc
pop
bound
ljmp
aam
mov
adc
imul
sbb
cmp
adc
fiaddl
add
xor
inc
push
adc
cwtl
push
jmp
les
pop
push
pop
hlt
les
icebp
leave
mov
test
push
shll
enter
daa
loop
mov
mov
pop
jb
imul
ficoms
inc
aam
cmp
xor
faddl
cltd
dec
sub
jp
xor
sti
in
sbb
cmp
inc
push
and
pop
or
pop
sbb
or
icebp
jbe
test
notb
sbb
call
leave
sub
movsl
das
cld
ret
add
add
aas
add
fwait
mov
test
jo
inc
sub
rorb
pusha
fistpl
imul
outsl
cmc
mov
pop
xchg
cmc
adc
repnz
jno
pushl
mov
dec
mov
push
add
pushl
out
ds
scas
jae
dec
xor
mov
fmull
cmp
xor
mov
incl
into
dec
out
divb
xchg
jecxz
push
je
shrb
lock
movsl
pushl
mov
add
dec
xchg
loope
ljmp
cld
or
cli
dec
push
inc
add
push
imul
dec
pop
lea
jp
lcall
add
and
lcall
pop
push
add
push
add
cmp
xlat
pop
jne
ret
pushl
jmp
in
cli
int3
push
mov
mov
mov
and
in
cmpsl
sub
cmp
std
pop
mov
and
add
cmp
sahf
incl
test
cwtl
mov
arpl
and
dec
scas
add
push
inc
adc
push
pop
std
pop
das
std
out
push
mov
pop
lahf
rclb
push
sub
mov
mov
and
call
pop
cltd
lock
lahf
mov
stos
arpl
into
loopne
call
cmc
add
xor
sbb
lret
or
scas
push
mov
add
out
clc
lret
dec
pop
add
push
inc
mov
jle
sbb
pop
add
decl
ljmp
sub
ss
sbb
sbb
add
js
clc
ljmp
xor
pop
mov
xchg
dec
or
lcall
rclb
pop
inc
pop
fisubl
je
pop
mov
fstps
add
push
xor
sbb
dec
pop
ja
imul
dec
xor
jae
mov
js
dec
mov
jp
lods
sbb
sbb
pop
mov
mov
fildl
iret
div
loope
mov
adc
pop
clc
cld
les
ret
loope
xor
sub
inc
in
ljmp
loope
mov
xlat
test
adc
ret
mov
out
jle
outsb
rol
ljmp
mov
and
add
es
lret
inc
into
xchg
xchg
pop
push
mov
sbb
jl
loopne
outsl
sbb
sbb
shrl
pusha
adc
or
adcb
fstpt
mov
les
mov
ljmp
xlat
inc
pop
or
add
pop
std
sub
les
fiaddl
push
out
add
imul
flds
and
movsl
and
or
sbb
int3
imul
inc
or
add
cmpl
ret
mov
mov
pusha
add
lret
cmp
flds
lods
push
pop
jecxz
ficoml
add
les
shll
aam
sti
in
pushf
push
sbb
push
xor
lret
or
mov
jmp
fwait
outsl
ja
call
test
push
and
jns
inc
stc
cmc
add
inc
shl
or
test
mov
adc
fs
add
dec
nop
or
scas
adc
xor
add
push
imul
test
or
sbb
stc
or
insl
aas
sbb
mov
and
fsubl
jl
fs
cmc
lods
fnstsw
cltd
sbb
dec
add
sti
add
fstpt
mov
or
loope
divl
cmp
sub
nop
add
adc
inc
sub
les
lock
clc
loope
adc
cltd
inc
and
arpl
shlb
sar
push
jecxz
pop
or
mov
or
xor
sarl
dec
cmpsl
lahf
inc
fiadds
aad
orb
inc
xor
or
inc
adc
fmuls
push
int3
push
fcoms
dec
sbb
mov
cli
test
aam
data16
inc
shl
js
jecxz
shrb
or
bound
repz
pusha
sbb
dec
push
hlt
in
lea
sbb
addl
cld
arpl
cli
lea
call
prefetchnta
pop
xor
int3
repnz
adc
rcr
hlt
popa
dec
sub
add
add
repz
fsubrs
pop
or
xchg
in
inc
out
lock
add
pushl
iret
pxor
or
movsb
sbb
test
add
and
add
lcall
mov
lea
nop
lods
gs
xchg
lods
cld
insb
aaa
clc
mov
inc
adc
icebp
cmp
movsb
jno
xchg
leave
jae
leave
adcb
cld
sbb
nop
shrb
sub
aam
jmp
xchg
enter
push
dec
sbb
movsl
push
leave
mov
jmp
xchg
and
inc
shll
cmp
add
add
pop
xchg
insb
xchg
aaa
icebp
dec
movsb
xchg
call
aad
adc
in
cmp
or
mov
and
sti
lods
and
mov
sbb
mov
push
lds
cwtl
xor
push
shl
out
cli
ljmp
ljmp
cli
add
int3
inc
stos
ds
add
pop
les
xor
stc
mov
xchg
sub
leave
xchg
push
jg
jmp
push
jbe
enter
push
sub
xor
push
loope
jg
aas
add
mov
inc
sarb
add
jg
icebp
jmp
pusha
jns
enter
inc
mov
out
jge
jmp
jg
and
pushf
orb
add
pushf
call
jg
adc
cltd
jmp
jns
cld
adc
push
add
mov
add
das
iret
fnstsw
jmp
mov
movsl
cltd
add
out
enter
push
add
mov
mov
mov
add
movsb
arpl
dec
cmp
sbb
pop
mov
je
xor
iret
push
es
mov
cmp
dec
lahf
js
popaw
stos
testb
dec
cmp
jmp
xchg
inc
hlt
adc
shlb
arpl
add
popf
adc
dec
push
mov
jle
loopne
jae
fcomps
rcr
orb
mov
jne
xchg
test
inc
call
lcall
xor
or
leave
xor
xchg
popf
ljmp
or
call
push
addr16
aam
add
lahf
jne
jae
mov
fildl
and
mov
adc
sbb
dec
fcmovnbe
lret
jnp
jle
jmp
mov
push
stos
push
mov
mov
or
inc
sbb
push
sbb
inc
dec
or
testl
cwtl
fs
imul
push
jmp
xor
add
mov
addb
jp
adc
xchg
xor
dec
shll
movsb
and
rcrb
pop
daa
push
ret
sbb
imul
std
fdivs
jp
add
mov
and
fistpll
push
iret
inc
insl
movsb
sub
inc
inc
aam
aas
jbe
je
inc
ficoml
test
repnz
or
loopne
xchg
pop
jno
and
pop
mov
sub
fsubrl
les
rcrb
sub
fadds
stc
mov
mov
pop
arpl
scas
imul
pop
andb
int3
je
jne
out
sub
fmuls
dec
push
mov
rcr
mov
stos
mov
outsl
sbbb
in
outsb
or
adc
sbb
loope
or
pop
dec
pop
stos
jnp
daa
leave
or
mov
adc
add
and
mov
pushf
dec
mov
mov
popa
add
pop
orl
sub
stos
or
jne
loope
cmp
into
jo
mov
into
incb
sbb
or
pop
and
shrl
sub
or
fmul
push
add
and
fldenv
push
jno
mov
inc
outsl
add
repz
mov
adc
and
aam
les
jle
icebp
adc
or
sub
das
cwtl
iret
mov
aad
xchg
js
mov
jp
imul
xchg
and
in
mov
inc
lret
fwait
cwtl
cmc
add
fistpll
xchg
cmp
call
xchg
test
call
incl
scas
popf
fwait
add
sub
cli
ljmp
insl
insb
and
ret
loop
xor
mov
xchg
sbbb
aas
test
ljmp
jno
aaa
gs
pop
inc
cld
jno
mov
dec
push
dec
gs
rcrl
push
clc
incl
adc
popf
repz
pop
push
hlt
sub
xor
stos
decl
and
pop
call
xchg
ret
insl
push
inc
dec
cwtl
fdivs
or
sub
mov
mov
xor
pop
dec
and
push
jge
mov
call
and
inc
fidivrs
add
and
mov
movb
or
mov
sbb
xchg
xchg
in
scas
aaa
clc
call
mov
les
gs
mov
or
scas
mov
inc
and
add
lcall
addr16
cmp
popa
nop
push
sbb
or
lods
cli
pop
and
pop
mov
ds
movsl
jle
cmpsl
add
jle
mov
fistps
xor
jne
je
dec
jl
test
pop
std
xchg
jmp
add
ljmp
fucomip
pushl
adc
js
jo
loop
rclb
call
shlb
sarl
cmc
aas
add
jg
insb
aam
aad
push
cwtl
mov
pop
mov
add
icebp
fst
ljmp
lock
sub
jno
mov
sahf
in
sbb
leave
out
xchg
sarb
xchg
push
and
repz
insb
call
pushl
nop
cmp
mov
inc
sub
scas
getsec
decl
call
add
push
loop
pop
and
adc
test
adc
int3
add
cs
outsl
cld
stos
xchg
jns
jb
je
xor
in
shl
pop
incb
js
mov
mov
sub
jns
in
decl
adc
inc
sub
add
xor
mov
ja
adc
sub
call
jb
mov
push
int3
fwait
mov
test
clc
aaa
test
mov
push
outsl
pop
scas
cmp
prefetch
pop
mov
jmp
out
dec
push
jno
sbb
mov
inc
lcall
pop
cld
sbb
aad
mov
cmp
inc
push
in
add
add
call
push
mov
or
xchg
cmp
iret
ret
pop
sub
decl
loopne
jo
xchg
adc
xchg
ror
dec
arpl
insl
enter
out
inc
xchg
jbe
jg
in
dec
or
inc
repz
in
je
int3
pop
lret
loop
mov
add
fidivs
mov
pop
cmp
mov
loopne
js
call
incl
cltd
cmp
dec
imul
adc
fbld
cmpsb
add
xor
gs
add
iret
mov
mov
cs
jne
js
mov
xlat
decl
jnp
cmp
jae
enter
inc
xor
pusha
jbe
insl
scas
xor
fisttps
xchg
and
cmp
mov
dec
mov
inc
test
adc
xchg
adc
sarl
xor
mov
cmp
and
das
icebp
mov
and
adc
test
jg
sbb
jns
pand
pop
xchg
mov
or
hlt
loope
ljmp
cld
testb
repnz
add
or
negb
mov
adc
test
orl
call
push
inc
push
lcall
jg
pop
rcrb
scas
xchg
sbb
imul
mov
decl
mov
dec
add
jno
fdivr
int3
inc
push
cmp
mov
add
data16
and
jb
or
call
int3
cwtl
in
and
push
rcrl
pop
mov
jg
sbb
sbb
test
or
adc
mov
fiadds
shll
bound
sub
sbb
push
ljmp
cmp
imul
push
push
stc
mov
sub
scas
sub
lcall
push
and
movsb
cmp
cmpsb
jnp
bound
or
call
pop
ds
movsb
test
ret
mov
addr16
sub
pop
jg
pop
add
adc
push
fsubr
in
xchg
je
sahf
in
shll
cld
jmp
jmp
add
sahf
movl
aas
and
mov
adc
push
addl
andb
stos
sbb
movsl
push
out
popa
mov
xchg
add
andb
ret
push
mov
adc
mov
ret
loopne
or
add
or
adc
gs
mov
je
xor
nop
or
add
mov
sub
mov
pop
cld
cmp
push
mov
cmpsl
and
neg
scas
popa
das
pop
ret
data16
sub
subb
pop
repz
mov
in
enter
or
jle
mov
sbbl
jmp
lods
or
scas
sbb
icebp
and
loopne
fs
push
out
add
pusha
mov
stos
push
cli
pop
fadds
and
loope
jae
cld
inc
mov
push
shrl
mov
xor
xor
inc
sub
imul
test
test
loope
dec
enter
or
cmp
js
xchg
mov
cmpsb
lret
fcomps
fsubs
add
or
jge
adc
enter
pop
rolb
inc
addb
dec
insb
add
mov
adc
inc
std
xchg
and
ret
fisubrl
pop
lods
jge
imul
les
das
fdivl
lret
add
adc
and
push
and
adc
xchg
lcall
sbb
test
or
sub
push
mov
sub
cmp
xchg
dec
cld
sbb
cld
insb
add
inc
subb
rorb
leave
mov
test
mov
or
rolw
mov
pop
push
es
adc
inc
add
pop
clc
mov
sbb
pop
add
cmp
pop
inc
clc
shr
loope
lock
ds
loop
add
xor
jbe
add
or
popa
dec
cmp
pop
jae
sub
mov
subb
sbb
or
out
and
inc
inc
cmp
sbb
mov
rolb
mov
in
adc
mov
mov
enter
inc
jb
adc
inc
jnp
test
mov
rcrb
clc
gs
mov
outsl
icebp
mov
aaa
pop
push
rorb
mov
jno
push
sahf
jb
mov
mov
lds
std
jge
mov
xor
inc
xchg
pop
adc
popa
sub
or
setns
scas
ret
add
mov
cld
pop
mov
sarb
ret
test
iret
lea
test
je
enter
add
imul
ss
jne
add
repz
sbb
sbb
test
sbb
out
dec
sub
mov
cmp
pop
add
inc
add
pop
or
pop
dec
add
add
mov
popa
push
sub
ds
cmp
dec
adc
dec
mov
ret
ss
sbb
cmp
movsb
sub
sbb
fldenv
or
or
add
mov
push
xor
rorb
pop
xlat
xchg
lods
ljmp
inc
loopne
fldcw
add
mov
jbe
cmpsb
popf
mov
inc
adc
hlt
das
int
dec
lock
add
jbe
enter
inc
or
std
inc
data16
jnp
lea
sub
or
ret
xor
sbb
das
loope
pusha
arpl
xchg
icebp
rorb
sub
adc
cmc
nop
mov
adc
xor
add
stc
dec
mov
sbb
xor
pop
out
testl
sub
inc
inc
add
stos
dec
les
push
pop
loopne
lods
inc
sbb
inc
orb
mov
daa
fnstenv
or
sbb
orb
pop
xchg
xor
mov
mov
cmp
inc
inc
xor
mov
dec
inc
stc
negb
push
jnp
pop
pop
loope
adc
push
aad
lret
jp
add
loope
push
jo
loopne
fcomip
lock
or
xchg
incb
push
pop
inc
mov
lock
push
add
sbb
xchg
mov
adc
sbb
jp
cmp
repz
sub
adc
scas
or
add
call
xchg
jbe
inc
mov
insl
movsb
mov
inc
test
pop
rorb
lds
rolb
mov
and
mov
push
insl
mov
popf
imul
and
and
sahf
and
add
inc
cwtl
mov
inc
xchg
pop
xchg
adc
cmp
pavgb
iret
pop
cmpsb
push
jp
jo
or
sub
jbe
pop
icebp
es
lahf
sbb
cmp
cmp
ret
jo
cmp
push
adc
xchg
loopne
aas
mov
in
add
lret
jp
push
gs
mov
hlt
pop
gs
scas
loop
mov
pop
xor
enter
das
inc
or
inc
push
out
jge
or
mov
shrb
fs
xlat
jmp
test
sub
xor
add
fadds
outsb
sarl
pop
mov
sbb
and
out
and
addb
or
clc
pop
add
sbb
jmp
nop
push
add
mov
or
xchg
fmuls
lea
ljmp
dec
add
ss
add
cmpl
lea
aad
or
mov
inc
test
fadds
or
repnz
mov
mov
popf
test
adc
shrl
xchg
stos
xchg
push
sbb
rorb
sub
pusha
in
adc
bound
sub
iret
push
sub
push
out
popa
xor
add
xorb
daa
or
sbb
pop
bound
mov
shrl
sar
inc
pusha
enter
cmc
mov
or
test
sbb
push
roll
sbb
ja
arpl
push
push
jnp
inc
popa
decb
inc
rorb
add
pop
scas
jne
fldl
dec
sub
js
inc
adc
roll
inc
scas
pop
dec
mov
rcr
adc
rolb
in
jbe
push
sub
cmp
aaa
aad
inc
jmp
jno
cltd
stos
stos
popa
or
xor
fstpt
sbb
cmpsb
and
mov
dec
fsubl
adc
imul
mov
xchg
mov
arpl
mov
xchg
mov
ljmp
bound
lods
repnz
add
outsl
mov
add
mov
jp
sub
sub
lock
mov
mov
sub
dec
lret
decl
cmc
mov
fisubrs
outsl
lahf
out
addr16
sbb
in
xchg
incl
mov
adc
pop
pop
js
inc
scas
lret
inc
xor
ljmp
jmp
jo
adc
adc
cmp
and
ffreep
mov
mov
rcll
lods
arpl
addr16
pop
push
je
inc
push
adc
jno
pop
xchg
add
dec
pinsrw
push
inc
cld
jno
jb
in
sbb
bound
clc
xchg
clc
bound
mov
xchg
stc
mov
fwait
sbb
movsl
ds
incl
aas
stos
mov
sbb
lea
push
ds
mov
push
les
incl
jnp
jbe
push
in
jo
popf
sbb
jmp
out
inc
dec
adc
sub
dec
add
add
mov
xor
aaa
inc
ret
icebp
fsubl
mov
jnp
jp
dec
or
gs
fs
insb
sbb
push
mov
jae,pn
xchg
gs
jge
cmpsl
fs
lcall
aas
xlat
xchg
add
inc
push
or
cltd
push
icebp
ljmp
std
ljmp
shlb
xor
nop
mov
sub
sbb
int
fadds
ljmp
ss
sub
cmp
add
pop
testb
mov
dec
shrb
pop
add
mov
sbb
cmp
in
jbe
lods
mov
js
loope
cli
xor
jecxz
imul
std
mov
movsl
jne
jg
sub
pop
enter
xchg
add
movsb
add
out
int
test
dec
out
mov
jp
pusha
mov
push
sub
mov
outsb
mov
daa
sub
cmpb
adc
ljmp
test
addr16
jge
push
jecxz
xor
aad
xor
lds
hlt
adc
and
ret
out
mov
repz
int3
push
cmovo
nop
add
and
pop
int3
or
xor
mov
rclb
jmp
push
pop
rcll
cmp
add
hlt
cmp
movsb
and
cmp
pushf
or
std
or
push
loopne
scas
cmp
stos
ret
xchg
int3
hlt
aaa
ds
fdivrs
js
xor
lret
push
sarb
push
jge
xor
cmp
xor
stos
aaa
adc
push
and
call
es
mov
mov
cmp
jns
push
or
inc
pop
inc
sbb
dec
test
xor
movl
xor
aad
std
pop
xor
push
or
inc
lock
add
add
int3
fwait
push
add
jbe
lock
or
int
aaa
sbb
xchg
add
and
mov
repz
push
mov
inc
pop
inc
dec
mov
adc
fildl
add
and
xchg
xor
xchg
mov
call
mov
sbb
sbb
ffreep
test
inc
ltr
dec
test
xlat
pushf
adc
orb
and
or
adc
adc
fs
popa
push
mov
mov
or
mov
adc
popa
les
test
or
and
xchg
add
inc
cmpsl
lret
or
mov
subb
stc
mov
mov
jmp
loop
inc
inc
mov
leave
loop
rcrb
mov
dec
xor
adc
ljmp
and
push
sbb
test
xor
xor
lcall
and
adc
lods
mov
xchg
mov
insb
or
test
pop
push
call
ljmp
add
ja
imul
adc
dec
fmull
mov
inc
dec
cmp
and
and
mov
or
pusha
sub
inc
test
jmp
cmp
ja
xor
aas
orl
adc
pop
add
and
xor
fistps
scas
sbb
cmp
cmp
and
mov
mov
xor
fwait
mov
inc
jecxz
out
into
es
lcall
movsb
xchg
shl
cs
lret
mov
sbb
fwait
mov
or
cmp
jle
adcb
jno
pop
sahf
cmp
es
mov
cmp
adc
fs
or
xor
cld
or
lcall
rorl
iret
mov
inc
jno
test
loopne
adc
xorb
mov
mov
dec
adc
add
ret
in
mov
mov
xor
lea
and
fs
cmp
sbb
adc
addr16
jge
fs
or
jp
sbb
and
sbbl
fnsave
push
insb
mov
dec
adc
stos
and
add
aaa
adc
pop
ret
bound
mov
cwtl
or
es
jg
sub
nop
ret
sub
mulb
lret
or
cwtl
push
in
stos
mov
inc
int3
and
inc
mov
test
rorl
sbb
imul
jbe
filds
mov
rcrl
dec
movsl
adc
addr16
rcrb
xor
sbb
popa
inc
int3
es
or
lods
adcb
test
sub
pop
and
loop
push
xor
xchg
cmp
lods
daa
push
add
andl
mov
xchg
ret
or
mov
fmuls
frstor
fisubrl
sbbb
jo
inc
fildl
stc
mov
ret
out
mov
fmuls
jg
aaa
jae
mov
adc
shlb
mov
mov
dec
mov
sarl
icebp
jge
pop
loopne
test
test
mov
and
pusha
add
ja
pop
jo
adc
fsubrl
in
adc
adc
lcall
int3
mov
shrl
and
in
sbb
lock
es
add
scas
and
aaa
das
pop
js
addr16
push
mov
xor
sub
adc
mov
call
or
push
cli
dec
push
adc
pop
inc
and
or
addl
icebp
pop
sub
sub
inc
js
bound
sub
es
sbb
mov
mov
shrb
ret
or
mov
clc
push
inc
fists
or
outsl
jge
mov
push
xlat
mov
in
xchg
shll
cs
scas
out
inc
mov
outsl
jl
inc
rcrb
test
dec
or
inc
and
and
and
es
loop
and
xor
in
or
or
mov
add
sbb
fimull
fldenv
or
and
outsw
xor
mov
push
xor
call
testb
outsl
and
hlt
sub
sub
cs
push
stc
push
cwtl
or
jl
inc
dec
jecxz
mov
inc
xchg
mov
int3
sbb
push
addb
cmp
inc
pop
cmp
adc
mov
loopne
les
sbb
shll
andl
test
pop
adc
scas
and
sbb
cmpsl
jns
pop
icebp
call
xchg
or
inc
out
mov
and
mov
xchg
inc
pop
dec
call
xchg
dec
aad
addl
jl
fisubrl
mov
add
xor
xchg
sbb
add
fndisi(8087
sarl
jl
mov
xchg
aas
cld
pop
inc
cmp
outsl
and
lock
and
sbb
mov
pop
xchg
loopne
jp
out
or
jns
mov
mov
cld
push
hlt
push
adc
test
jb
cwtl
das
add
xor
loopne
sbb
xchg
mov
inc
inc
das
ret
sbb
jp
or
shl
popa
xor
add
mov
pusha
orb
inc
or
jg
mov
adc
insl
loopne
test
ljmp
dec
jmp
pop
inc
rolb
cmpl
xchg
dec
cld
cld
sbb
and
jge
out
jb
rcl
call
movsl
cltd
aaa
fistps
mov
iret
and
cmp
mov
les
js
dec
push
fchs
adc
imul
mov
iret
aas
cmovb
mov
call
add
push
mov
lods
pop
mov
int
inc
dec
or
rcll
push
adc
mov
fdivl
scas
or
lea
pop
enter
js
add
jg
xchg
rorb
push
out
jle
xchg
pop
je
mov
add
push
sbb
inc
or
adc
dec
aaa
fisubs
adc
ret
cmp
cltd
movsl
and
cmc
mov
jg
pop
out
adc
loopne
ret
add
xchg
fnstsw
pop
loope
les
adc
push
push
xchg
jo
push
scas
pusha
push
addb
adc
push
ja
mov
adc
mov
rorl
adc
incl
mov
push
adc
sub
andl
pop
xor
mov
xchg
inc
inc
aam
adc
add
mov
jae
mov
push
rcrl
sbb
push
mov
mov
sub
andl
insl
inc
les
lcall
mov
add
mov
loopne
add
mov
adc
movsl
into
add
je
add
jl
or
jns
ffreep
and
push
adc
jb
je
cmpsl
xchg
cmc
or
popa
movsb
or
sub
inc
xor
mov
dec
jge
adc
pop
sbb
fsubrs
push
add
imul
mov
push
adc
pop
add
cmpsb
dec
ja
lds
shl
sbb
push
push
cwtl
push
jg
mov
int
xor
add
cli
xlat
mov
in
mov
adc
enter
mov
xlat
add
push
xchg
test
and
mov
xchg
push
adc
iret
sub
aam
cmp
mov
clc
add
sbbb
pop
mov
pusha
in
inc
mov
or
jmp
in
or
test
test
adc
rorb
push
mov
inc
es
out
pop
jmp
hlt
sbb
fisubl
push
inc
dec
fcoml
in
sarl
pop
adcb
enter
insb
push
enter
inc
mov
fisttpl
pop
adc
or
lea
inc
jno
pop
cmp
fcomp
pusha
mov
fcoms
xor
andb
add
and
jbe
fadds
and
pop
push
mov
loop
add
in
enter
push
or
cwtl
movsb
mov
lods
in
mov
adc
adc
or
adc
push
mov
lods
in
xchg
orl
or
loopne
jbe
jo
mov
xchg
les
xchg
cwtl
sbb
imul
les
shrb
dec
xor
ret
and
dec
sbb
and
or
lret
or
roll
and
mov
sbb
add
hlt
insb
sbb
popf
popf
fiaddl
dec
adc
xchg
sbb
add
fs
out
pop
sbb
fwait
dec
jmp
cmpsl
or
add
cs
jecxz
movsl
fldcw
cmc
rcrl
add
aam
icebp
pop
hlt
jecxz
cmp
ret
lretw
imul
mov
addb
jbe
and
addl
int3
pop
shrb
sub
and
push
adc
out
sub
loopne
jbe
add
mov
push
jp
pop
sub
add
push
int3
sahf
push
cmp
push
outsl
jecxz
sbb
ret
add
inc
ljmp
push
ficoms
cld
test
inc
daa
jp
or
pop
mov
lret
jge
cmp
rcrl
dec
sub
shlb
push
das
mov
mov
fprem
daa
add
and
xor
inc
adc
add
or
rclb
add
sarb
ja
sar
add
fistl
sbb
mov
nop
push
sub
pusha
mov
push
rcr
adc
lcall
dec
inc
mov
pop
sbb
jns
iret
test
test
repnz
sub
pushl
iret
in
mov
inc
daa
add
shlb
mov
cld
fildll
push
push
inc
pop
mov
fdivl
out
dec
push
adc
push
fistl
xor
cmp
je
mov
pop
or
cld
or
rolb
dec
push
or
mov
sar
add
xor
ljmp
nop
push
mov
mov
mov
xorl
inc
push
xor
pop
jo
or
dec
xchg
mov
add
imul
ss
and
cmp
adc
pop
ljmp
sbb
nop
xchg
scas
push
adc
push
stos
inc
test
in
adc
or
lock
mov
in
push
adc
mov
call
inc
jl
imulb
jnp
mov
sahf
sbb
mov
mov
lods
pop
sub
pop
sub
jmp
lcall
es
sbb
dec
orl
je
hlt
sbb
ja
sti
rcrl
clc
push
test
lock
mov
mov
sti
mov
stos
add
aam
outsl
std
jmp
add
or
mov
adc
int
bound
xchg
adc
add
mov
leave
out
xchg
lods
loope
xor
jge
xor
rcrb
jmp
sahf
push
or
add
mov
jmp
jl
adc
je
subb
loope
adc
mov
pop
mov
popa
or
xchg
sbb
pop
mov
popf
sahf
stos
shlb
jmp
outsb
fidivs
xchg
inc
mov
and
xchg
test
add
je
cmp
test
inc
lds
mov
sbb
push
or
xor
add
jmp
inc
popf
jns
in
or
idiv
das
and
mov
xchg
int
lret
inc
mov
or
adc
jmp
adc
sub
movsl
mov
pop
pop
adc
sub
mov
mov
inc
cs
inc
mov
sub
inc
outsb
out
popa
out
push
mov
test
add
dec
or
pop
adc
or
jecxz
and
std
and
add
cwtl
andb
lods
mov
outsb
pusha
adc
add
mov
sub
or
inc
adc
jb
dec
test
push
orb
mov
jns
iret
cmp
jbe
in
rcll
mov
inc
dec
sub
mov
dec
mov
mov
sbb
cmc
imul
inc
test
add
mov
jb
adc
cmp
and
pop
shr
jg
mov
mov
mov
xor
es
or
jp
in
cmp
les
and
sti
cmpsb
push
test
pop
call
addb
pusha
inc
dec
cmp
into
hlt
or
jne
cmpsb
aaa
ss
scas
sub
daa
xor
mov
daa
cmp
testb
hlt
rcrl
sub
call
push
sbb
mov
push
adc
cmp
mov
iret
inc
add
mov
mov
and
add
and
fisubrl
sbb
inc
and
cmp
cmpsb
or
add
add
cmp
les
divb
mov
mov
cmp
loopne
adc
out
call
fadd
or
adc
pusha
cmp
das
sub
xor
push
dec
xchg
mov
xor
and
push
xchg
mov
inc
data16
fidivrs
jne
fadds
es
sub
pop
imul
loopne
ja
inc
or
fcmovnu
sbb
xor
sahf
iret
or
int3
and
in
andb
sbb
in
fisubs
enter
shll
ret
int
test
jle
jecxz
pusha
push
add
mov
pop
xor
dec
rorb
sarl
rolb
movsb
sarb
hlt
add
inc
outsl
dec
mov
fnstcw
inc
inc
mov
mov
push
mov
add
sub
movsl
mov
rorb
dec
aam
or
hlt
push
mov
loop
stc
inc
lret
das
orl
jmp
jg
shrl
mov
aaa
cmp
not
mov
scas
dec
pop
add
push
addr16
test
lock
mov
jmp
pop
fistl
sbb
decl
test
inc
jo
in
outsb
or
std
rorb
or
call
inc
and
push
sbb
jns
push
mov
movsl
lds
or
std
jmp
test
movsb
xor
imul
roll
add
add
mov
adc
adc
andb
add
packssdw
fwait
in
mov
sbb
push
addr16
and
add
sahf
mov
cmp
and
or
nop
or
fwait
stc
cs
adcb
inc
adc
add
adc
imul
nop
inc
outsl
adc
push
inc
push
mov
xor
outsl
add
xchg
jbe
ss
imul
inc
into
outsb
in
in
add
dec
gs
sbb
scas
or
lds
xor
mov
jae
lahf
pop
dec
pop
pop
leave
ret
std
divl
inc
add
les
adc
ret
jnp
fsubrs
adc
xor
pop
adc
add
cmp
sub
pop
ret
das
and
lods
jg
and
jae
mov
cwtl
jg
and
add
arpl
jbe
cltd
mov
push
cmpl
shll
adc
inc
push
lods
ds
cmpb
xorb
cmp
jno
cmp
sbb
test
pop
mov
js
icebp
repz
ss
mov
jg
xchg
leave
mov
mov
add
mov
dec
dec
jbe
add
cmp
pop
jno
incl
leave
or
or
dec
xchg
sub
popf
int
jmp
inc
in
adc
push
pushl
add
pop
xchg
mov
outsl
fs
loopne
out
sbb
fnsave
out
pop
lcall
decl
adcb
fistpl
adc
and
mov
sub
or
mov
outsb
mov
in
push
add
mov
add
mov
cmp
inc
imul
in
inc
es
pushf
hlt
or
movsl
or
push
add
imul
call
imul
xor
or
lret
add
imul
jmp
ljmp
jmp
shlb
mov
dec
mov
xchg
std
adc
sti
mov
inc
add
incl
mov
pop
inc
sub
and
cmpl
add
ljmp
daa
in
add
es
mov
mov
jge
test
mov
lcall
lahf
jp
cmpsb
ret
push
push
rcrb
pop
jmp
imul
enter
lea
cmp
mov
ljmp
push
aas
and
fcomps
rcr
mov
sub
adcb
pop
clc
decl
mov
add
movsb
push
sbb
inc
das
mov
aam
lret
test
mov
dec
shll
push
pop
cmp
lahf
mov
scas
sbb
add
and
rolb
xchg
clc
incl
sub
jl
outsb
pop
mov
sbb
sub
sbb
inc
mov
lcall
lcall
iret
or
xor
xor
pop
xchg
and
movsb
inc
add
decl
and
sbb
and
add
and
mov
dec
mov
popf
call
push
inc
neg
sbb
xor
ret
scas
sbb
pushl
inc
pop
and
jmp
neg
not
dec
push
or
push
push
add
jbe
adc
aas
jae
add
dec
push
into
movb
adc
sbb
enter
in
stc
cmp
adc
leave
or
jbe
iret
add
test
pop
mov
sub
test
pop
fsub
push
outsl
or
addb
in
pop
repnz
adc
xchg
pop
xor
push
loope
cs
adc
sbb
mov
jbe
insl
push
outsb
pop
push
or
inc
es
gs
sbb
push
adc
fs
add
gs
jb
les
cmpl
add
add
sbb
mov
or
stc
fldt
aaa
cmp
mov
test
iret
pushf
cld
pop
dec
add
add
mov
or
add
sbb
mov
adcl
push
ret
incl
and
decl
sbb
xor
adc
sbb
sbb
rol
xchg
jp
std
out
jmp
mov
xchg
xchg
dec
mov
mov
cmp
addr16
ljmp
leave
xor
add
nop
jae
and
adc
push
push
and
cli
inc
mov
or
js
aam
or
jg
insb
fisttps
cld
jg
stos
fimuls
xchg
mov
outsb
and
mov
jl
xorl
enter
cmpsl
adc
sbb
jno
lahf
jae
inc
inc
cmp
inc
lcall
inc
js
enter
add
dec
or
pop
fmull
cmp
xor
inc
push
jae
mov
add
ss
shlb
pushf
ret
inc
jp
lods
inc
jg
test
mov
pushf
xor
std
add
adc
jo
sub
in
in
sbb
push
cmc
popa
pop
sub
mov
cmp
ret
decl
loopne
stos
repnz
out
dec
or
test
gs
dec
decl
out
lcall
hlt
adc
inc
test
sbb
cli
mov
pop
sbb
dec
aam
popf
data16
aam
in
hlt
inc
ljmp
orb
sbb
adc
add
hlt
lcall
iret
mov
jbe
xchg
out
add
push
scas
and
shll
inc
ucomiss
dec
push
adcb
sub
mov
mov
inc
and
sbb
lcall
sbb
imul
iret
inc
xchg
shll
adc
mov
and
daa
mov
mov
xchg
mov
push
loopne
adc
decl
decl
filds
pop
jo
dec
rcll
rcrl
push
scas
ss
ljmp
xchg
push
dec
xchg
lods
push
cld
push
push
mov
and
outsl
adc
push
mov
js
movsl
lret
lods
movsl
cmc
inc
xor
add
xlat
adc
cmp
cmp
cs
mov
mov
cwtl
pop
in
lea
push
add
lret
cli
fs
jecxz
enter
pop
fistpll
pushf
in
jno
into
adc
pop
int3
cmp
repz
loop
cli
mov
xor
or
scas
data16
daa
push
add
leave
add
clc
fsubrs
jmp
mov
je
testl
aas
and
mov
xchg
in
movsl
xchg
mov
sub
popf
jle
outsl
lea
mov
mov
sub
outsb
sub
test
sub
and
dec
and
repnz
in
fdivrl
add
xor
pusha
std
in
xor
sub
add
jae
mov
daa
cmp
not
inc
mov
addr16
add
cmpsb
fldcw
sbb
dec
inc
xchg
push
pop
jg
rolb
sar
inc
mov
or
push
jb
dec
xchg
jmp
xor
add
aas
or
lea
rcr
add
pop
push
dec
mov
pop
incb
cmp
sti
sbb
push
lcall
fcomp
daa
popa
iret
inc
iret
or
mov
daa
fcomi
cmpsl
or
add
call
or
dec
xor
enter
add
je
lahf
push
cmp
add
push
lea
jmp
xchg
mov
aas
xor
clts
ds
cltd
loope
push
push
add
movl
cld
inc
cmpsb
ja
enter
xchg
fsts
push
in
mov
xchg
dec
cwtl
sti
or
adcb
xor
jl
movsb
pop
pop
push
lcall
jl
aam
mov
push
xor
sbb
stos
pop
fcomp
lock
loope
divl
pushl
leave
aam
inc
and
xchg
jp
xor
dec
insl
mov
and
psrlw
icebp
das
mov
jg
pop
loopne
jg
sbb
mov
int
xor
call
je
repz
lcall
pop
jmp
mov
mov
out
ljmp
std
pushl
xor
mov
sbb
push
mov
mov
std
cltd
cltd
fistpll
inc
push
dec
loopne
je
sub
cs
and
jecxz
mov
nop
adc
addr16
clc
xchg
insb
or
cmp
jg
jg
mov
out
imul
call
cs
je
jne
pop
add
inc
push
les
mov
call
hlt
xorb
mov
push
ja
xor
incl
mov
pop
fcmovnb
add
dec
shl
jp
jmp
mov
ret
lock
rcr
scas
cmp
insl
push
lea
jbe
fsts
fucomip
inc
insb
or
aam
mov
imul
sub
lods
in
sbb
or
mov
mov
sbb
daa
pop
std
jg
add
inc
mov
push
pusha
push
sbb
cli
pop
out
jb
xchg
test
imul
outsl
scas
add
je
mov
addps
sbb
mov
inc
push
and
push
add
and
inc
hlt
push
inc
loopne
mul
leave
shl
sar
mov
pop
jge
or
add
mov
mov
sbb
mov
pop
fs
mov
mov
hlt
pop
mov
shrb
jg
cs
pop
fildl
rcrl
inc
sbbl
add
xor
or
aaa
ss
clc
jmp
xor
dec
mov
xchg
test
push
inc
repz
add
ud0
cmp
jge
jg
cmc
imul
sub
push
mov
cwtl
or
imul
cli
cmpsb
add
cwtl
jle
not
pop
popa
bound
lea
sbb
add
push
ljmp
pushf
xchg
or
aad
repz
sbb
push
stos
mov
mov
sub
push
lahf
sbb
dec
fldcw
mov
adc
rorb
jg
dec
or
fstl
loop
in
inc
cwtl
sbb
mov
ljmp
lahf
jno
or
fdivl
jge
push
mov
add
movl
mov
rcrb
mov
test
mov
rcrb
add
dec
sbb
xlat
rolb
sbb
incb
add
mov
mov
pop
add
iret
add
filds
cmp
emms
test
fildl
lret
inc
mov
dec
mov
mov
inc
sub
mov
inc
mov
ss
mov
mov
dec
push
mov
add
sub
loopne
arpl
mov
ja
aad
inc
dec
in
xlat
incb
mov
lea
lock
dec
push
inc
pop
out
call
adc
repnz
imul
pop
sbb
push
mov
mov
push
int3
mov
cmp
nop
rol
xor
jmp
sti
lea
ficomps
jmp
aaa
aaa
mov
cld
xor
mov
popf
add
in
scas
and
mov
push
and
cmp
and
sbb
mov
fucomip
ljmp
and
outsl
int3
cmp
pop
adc
inc
fwait
xchg
add
pop
xor
outsb
in
pop
xchg
xchg
lock
push
mov
insl
xlat
fisubrs
xor
pushf
fdivl
in
divb
in
fucomi
xor
sub
pop
out
xor
call
or
add
cmpb
inc
mov
bound
adc
shl
decl
cmp
les
test
cmp
jbe
fildl
jb
jecxz
jge
out
cli
sub
lock
cmp
popa
pop
insl
cmp
push
mov
ret
clc
lcall
pop
dec
pushf
push
xchg
ss
or
fisubrl
rcll
xor
repz
shrb
adcl
cmp
mov
push
outsb
push
hlt
and
sbb
mov
pop
pop
adc
mov
sbb
pop
mov
push
adc
lods
inc
dec
test
jne
push
or
cmp
add
fcmovnu
lock
imul
or
add
das
rol
sbb
add
jns
lods
jge
jae
arpl
loopne
cmp
push
xor
in
ss
fimuls
aad
incl
cwtl
fwait
mov
imul
mov
test
pop
or
adc
jae
cmp
sbb
jae
ret
mov
sub
jecxz
bound
cmpsl
xchg
inc
adc
sbb
inc
mov
mov
add
mov
je
push
push
icebp
or
dec
jno
dec
aas
jb
rorl
xor
push
sbb
mov
adc
test
sarl
hlt
jl
mov
jp
orb
js
fwait
mov
mov
mov
lret
sub
dec
std
sbb
out
pop
out
test
xchg
btr
lock
push
mov
push
lea
pop
dec
sbb
pop
dec
fsubl
icebp
lcall
push
inc
enter
add
not
nop
cs
mov
inc
fadds
pop
pop
sub
out
xchg
test
jno
icebp
mov
ret
es
inc
out
icebp
fstpl
add
adc
sub
and
fiaddl
pop
sbb
inc
insb
sbb
xor
jae
lret
jo
inc
js
mov
dec
pop
adc
add
jbe
jmp
out
pop
mov
adc
push
imul
mov
xchg
test
cwtl
or
pusha
outsb
jl
add
add
nop
js
ja
or
out
dec
lcall
out
mov
xchg
sub
outsb
dec
fcmovnu
inc
cmp
sar
sbb
sub
mov
sti
sahf
or
idiv
fistps
sbb
sbb
inc
test
adc
lcall
ret
mov
les
pusha
adc
sbb
pop
adc
mov
dec
inc
movsl
out
scas
nop
cmp
inc
dec
cld
inc
shl
fdivs
aaa
jmp
popf
and
and
je
and
int3
in
enter
clc
das
xlat
enter
das
test
int3
and
adc
mov
filds
and
and
test
adc
mov
ljmp
xor
adc
and
dec
je
sbbl
sbb
mov
push
stos
or
and
enter
inc
push
jg
fwait
int
push
pop
cmp
shl
cs
movl
call
pop
xor
and
test
dec
mov
sbb
das
cld
inc
pop
nop
jp
inc
and
int3
adc
mov
xchg
cmp
mov
sub
insb
xchg
bound
test
and
xchg
jne
or
jg
ds
mov
and
xchg
add
and
xchg
mov
and
push
cmp
test
jo
cld
jg
dec
fcmovnb
inc
jl
pusha
pushf
nop
adc
mov
xchg
stos
push
incl
inc
pop
leave
add
mov
dec
inc
in
and
fstpl
or
xor
in
pusha
dec
adc
inc
bound
test
and
and
cmpsb
lcall
jmp
addr16
jnp
xchg
xchg
inc
nop
add
sbb
add
ljmp
cld
and
sbb
and
cmp
pop
pop
inc
add
push
out
scas
inc
dec
sbb
mov
xor
dec
jo
xor
inc
xchg
or
cmp
and
jmp
and
ljmp
adc
adc
clc
hlt
rol
incl
and
inc
lahf
xorl
lret
and
inc
out
movsl
adc
mov
push
insb
mov
adc
mov
xor
sbb
in
mov
xor
inc
or
sbb
stc
fsubrl
sub
pop
dec
mov
mov
int3
and
das
cwtl
leave
test
lock
xchg
es
fdivrl
icebp
push
xchg
mov
fisubrs
or
ftst
adc
stos
sub
cmc
lea
mov
test
mov
fiadds
movsl
dec
cmp
mov
out
xchg
cmpsb
xlat
xor
dec
int3
or
jbe
xorl
icebp
into
sbb
push
jl
fidivrl
inc
pushl
dec
pop
test
mov
fldenv
das
lds
mov
imulb
xchg
pop
not
test
std
repz
sub
jae
leave
or
or
adc
movsl
and
pop
lahf
add
push
ret
std
dec
jo
loope
push
mov
jl
faddl
in
scas
pop
dec
addr16
pushl
cmp
pusha
addl
insb
nop
xchg
inc
add
cmp
adc
ljmp
fsubs
shll
add
lahf
call
dec
pop
cmp
or
push
pop
jmp
push
pop
jbe
subl
lcall
test
fbld
pop
jne
lea
push
mov
adc
pushl
xor
loopne
sub
or
pusha
lahf
sbb
xor
insl
sbb
fsubrs
ljmp
clc
mov
lods
xchg
daa
out
push
mov
bound
mov
inc
mov
je
decl
movsl
sub
mov
divb
push
cld
fistpl
cs
cmpsb
inc
adc
push
jg
lcall
std
dec
xor
shlb
scas
add
or
adc
fstps
callw
loopne
lret
shlb
loop
sub
and
mov
add
ja
pusha
leave
xor
leave
sbbl
shll
add
testl
ljmp
std
mov
push
jl
fwait
and
sbb
sti
insb
add
mov
and
pop
or
or
icebp
pop
sar
outsb
scas
cmp
insb
cltd
dec
addb
sub
mov
mov
or
sbb
mov
sahf
je
xor
xor
inc
cmpsb
pop
add
ret
cmc
ds
scas
lret
fstl
cmp
inc
push
add
lea
push
incl
outsl
mov
fwait
mov
push
shl
add
cld
loop
jmp
or
repz
rolb
or
clc
in
incl
arpl
shrl
mov
push
pusha
jo
loopne
mov
fistps
sahf
sbb
xor
orl
push
bound
xchg
jmp
enter
xchg
cmp
outsl
lock
outsl
cld
mov
ret
imul
stos
cld
movsl
pusha
pusha
pusha
sbbl
cld
sbbl
arpl
mov
insl
ljmp
adc
pop
stos
pop
lods
lcall
aas
std
xor
xchg
mov
cld
and
push
dec
adc
push
dec
dec
adc
test
push
or
decl
rcrb
mov
aas
xor
push
lahf
daa
out
aas
mov
shrl
sub
mov
outsb
cwtl
cmp
sbb
aaa
jmp
lcall
int3
dec
push
inc
jle
ljmp
sbb
int
push
adc
decl
mov
in
lock
cmpsb
add
push
stos
push
loope
je
sbb
movsb
in
aam
and
std
psrad
lcall
scas
nop
das
sbb
call
and
mov
outsb
lahf
out
lahf
aas
out
loopne
jle
inc
cwtl
push
lods
aas
mov
add
fs
mov
pop
pushf
and
test
mov
xor
lea
xor
or
fs
mov
add
ret
pop
push
int3
clc
mov
outsb
jle
sbb
stc
pushf
cld
shlb
popf
add
fsts
test
pop
out
cmp
cmc
enter
cld
pushf
ja
dec
out
int
loopne
loope
and
push
push
adc
ret
mov
or
gs
mov
dec
imulb
fistl
lods
cmp
jle
dec
pop
jle
decl
adc
js
cltd
cmp
jnp
xorb
jg
inc
jmp
loopne
add
scas
dec
add
mov
call
std
jns
add
in
add
loope
cmpsl
jne
add
add
loope
cmpsl
mov
stc
les
lret
sarl
fldt
push
std
jg
add
es
xchg
xor
push
dec
pushf
jge
cmp
aaa
mov
mov
in
scas
lds
mov
push
addr16
lcall
mov
jle
aas
push
aas
xlat
cld
inc
stos
rdtsc
fstl
test
out
pushl
lods
xor
mov
jle
or
lret
or
xchg
mov
leave
rcrl
cli
pushl
or
dec
cltd
mov
adc
push
mov
js
repz
and
cmp
call
sbb
sbb
adc
outsb
fisttpl
lret
std
sub
mov
fcmovnbe
cmp
inc
push
add
inc
mov
push
loop
add
in
pop
and
rorl
rorl
rcrl
xchg
mov
adc
fistl
mov
dec
mov
mov
and
addb
scas
aam
dec
sbb
f2xm1
adc
cmpb
push
fsubs
xor
lret
mov
or
and
dec
cli
adcb
push
or
lret
jae
xchg
into
pop
xchg
aam
push
repnz
popa
jmp
jbe
cs
psubusb
add
fimull
aam
fdivs
inc
sub
adc
mov
xchg
mov
adc
dec
adc
push
sub
jp
mov
dec
dec
jle
lods
clc
mov
jge
and
imul
ja
ds
add
xor
int
dec
mov
jmp
push
mov
sbb
enter
mov
mov
lea
or
pop
push
dec
mov
fiaddl
ja
int3
prefetch
inc
sub
into
xor
push
clc
movsb
and
aam
xlat
or
pusha
mov
fmuls
push
jo
mov
ds
pop
adc
bound
ret
mov
and
out
add
sahf
out
fs
dec
stos
std
fidivs
int3
rcrl
lock
inc
adc
pop
push
insb
sub
lods
and
add
adc
push
int3
inc
ljmp
enter
popl
push
lods
sub
dec
dec
adc
cmp
inc
sbb
inc
int
aaa
lcall
ds
inc
popa
vpunpcklwd
aaa
pop
jnp
mov
stos
pop
xor
out
shlb
scas
sub
hlt
xor
pop
call
adc
jae
adc
insl
and
push
or
rorl
les
sub
test
cwtl
iret
orb
cs
or
and
ret
jne
or
add
xchg
and
xchg
test
rclb
xor
jmp
fmuls
addl
push
arpl
enter
sub
sbb
out
enter
outsb
test
fnsave
gs
ja
push
hlt
sbb
jl
sarb
lahf
mov
push
or
dec
fsubrs
mov
test
or
insl
mov
push
enter
addr16
rcr
aam
and
es
inc
pop
sbb
fidivs
int3
loope
int3
jmp
hlt
cmp
jne
rcrl
pop
sbb
xchg
add
testb
xor
jno
test
mov
scas
std
fstpt
sub
enter
mov
adc
or
cmp
add
pop
ds
cmp
push
pushl
add
push
sbb
lcall
mov
xchg
dec
clc
sub
lds
adc
jae
sarb
sbb
add
loop
cmpsb
sar
test
enter
xchg
sbb
dec
repz
nop
sbb
lcall
sbb
enter
int
mov
fsqrt
leave
ret
fistpll
ret
pop
data16
mov
in
sar
cmp
sub
push
rcrb
dec
cmc
imul
add
add
mov
mov
fwait
push
jmp
or
pop
sub
mov
cmc
inc
es
aaa
cli
aaa
clc
add
sub
pop
inc
xor
pop
incb
jae
and
mov
inc
jge
mov
popa
push
inc
dec
xchg
inc
ds
decl
pop
int
push
je
lahf
adc
adc
and
and
and
mov
mov
add
lea
cli
inc
xchg
je
sbb
cmp
xlat
xchg
push
insb
pusha
jle
dec
ja
mov
outsb
lcall
inc
gs
subb
pop
cld
fldenv
test
into
loope
pop
sbb
adc
pop
jb
cmpl
jg
jmp
ljmp
sub
loopne
lock
scas
cld
pop
rolb
fs
aaa
clc
jnp
cmp
inc
fstpt
jl
bswap
xchg
inc
loopne
or
clc
lcall
scas
aam
dec
push
lahf
ret
leave
or
dec
sbb
lcall
cmp
fcoml
sahf
xor
adc
std
dec
scas
jbe
test
sbb
pop
push
dec
lcall
shll
push
in
mov
jnp
inc
imul
sbb
jle
popf
cmp
inc
push
vpmacssww
data16
pushl
xchg
imul
pop
les
out
nop
stc
ljmp
cld
repnz
iret
add
es
pop
pop
push
inc
ja
adc
mov
lock
call
or
add
mov
out
push
mov
ljmp
add
stos
dec
testl
push
lds
js
mov
or
bound
add
clc
aas
cmp
mov
adc
ljmp
cltd
inc
jne
sub
mov
aaa
xchg
and
nop
adc
scas
adc
mov
lcall
mov
xor
cmp
pop
and
icebp
in
dec
jbe
rolb
mov
add
data16
jb
lock
bound
scas
gs
pushf
fsubrs
andb
dec
ljmp
loopne
dec
lock
adc
push
pop
adc
shll
sub
xor
lods
or
xor
mov
sub
mov
xor
mov
popa
or
inc
push
outsl
pop
dec
testb
out
xchg
inc
jo
dec
hlt
adc
sub
jb
mov
add
andb
into
pop
subl
popf
xchg
xor
add
mov
mov
pop
cli
mov
and
sub
call
xchg
das
sbbl
mov
jl
in
and
add
sbb
add
mov
inc
insl
push
xor
cmp
sub
outsl
rol
idivb
inc
data16
cld
sub
stc
push
cld
or
jl
add
push
clc
add
mov
rorl
or
sub
popa
jecxz
or
in
add
call
mov
mov
dec
cwtl
adc
cld
insb
lock
lods
xor
rcrl
lods
sbb
incb
clc
pop
jl
mull
aam
loop
push
mov
and
cld
adc
pop
adc
movsb
dec
push
cmc
sbbl
insb
cmp
jle
rclb
push
add
push
loop
and
mov
mov
mov
les
loopne
add
outsl
inc
mov
mov
out
push
int3
mov
jl
roll
nop
add
push
mov
lahf
test
adc
popf
bound
push
xchg
mov
loop
jns
xor
mull
out
fwait
int
movsl
adcb
data16
orw
add
push
cmp
push
loopne
mov
fisttpl
push
les
cmc
dec
sbbl
adc
aaa
cmp
xor
adc
sbbl
jnp
inc
pop
in
xor
adc
adc
and
mov
or
fcomps
filds
xor
pusha
pushf
inc
int3
mov
arpl
and
or
fcomi
das
xchg
int
mov
ret
xchg
pop
adc
repnz
sbb
cs
stos
or
stos
lret
mov
cmp
dec
add
add
lock
std
sbb
cld
shrb
addb
incl
jmp
jp
lea
inc
push
inc
icebp
fsubrs
lock
sub
sbb
mov
jp
add
xor
cmpsl
add
jg
ret
lods
ret
add
and
subb
add
pop
add
das
cld
in
add
lock
push
xor
sbb
pop
sbb
sti
movsb
add
pop
adc
jbe
xchg
pop
xchg
cmpsb
adc
inc
mov
pop
sub
in
xchg
inc
push
xor
addr16
call
and
fistpll
cmp
add
mov
fidivs
incl
xchg
mov
xchg
add
mov
add
pop
fs
mov
fldt
xchg
int3
dec
pop
shlb
mov
sub
jnp
outsl
push
sub
outsl
sarl
hlt
add
jl
sbb
adc
or
mov
shrb
mov
add
inc
das
aam
imul
testb
sub
mov
adc
dec
pop
fildl
mov
je
insl
mov
xchg
add
cmp
ds
cmp
or
fldt
dec
pusha
add
repz
add
mov
and
test
clc
push
nop
addr16
jg
mov
xor
inc
or
aaa
push
jbe
xchg
maskmovq
testl
and
mov
add
pusha
pop
les
add
push
mov
sar
xchg
rorb
pushf
pushf
sbb
jmp
add
outsb
sbb
out
jmp
into
fcmovbe
cmp
clc
les
dec
sub
push
or
into
testb
pop
mov
outsl
mov
adc
sbb
mov
das
xor
pop
inc
push
cmp
or
or
std
outsl
mov
pop
rorb
add
inc
sbb
or
add
mov
inc
outsl
adc
sbb
mov
js
into
faddl
mov
sbb
sub
inc
pop
mov
mov
testl
xlat
sub
xchg
cmp
int
cli
mov
lcall
int3
fisttpll
add
xor
in
es
js
ljmp
loopne
rclb
scas
adc
jae
xlat
xchg
push
mov
ret
mov
cwtl
sbb
dec
outsb
add
inc
mov
pop
daa
xor
mov
rolb
jb
mov
and
cli
in
and
lods
jecxz
shlb
and
xchg
loopne
push
add
jo
jne
in
daa
adc
aaa
pop
fucomip
inc
jo
sbb
mov
subb
or
adc
add
cltd
jge
mov
adc
int
sbb
add
rol
in
dec
pop
inc
push
jecxz
adcl
outsl
sub
cltd
jne
pusha
ja
pop
stos
sub
or
dec
dec
lcall
dec
outsb
fdivl
add
in
sbb
adcb
dec
cwtl
cli
push
mov
out
lds
add
and
pop
xor
sub
inc
imul
or
xchg
mov
or
lock
pop
lret
mov
ljmp
pushf
lcall
add
xor
mov
fstpt
aam
adc
fistpll
ficoms
es
push
ficompl
jnp
add
adc
sbb
jnp
std
push
pop
mov
ret
mul
push
cs
mov
pop
inc
daa
loopne,pt
repz
add
nop
or
sub
jle
or
inc
in
sub
out
adc
sub
inc
ja
or
cmp
gs
je
add
mov
call
xlat
sbb
and
jo
adc
and
jge
mov
cld
or
add
inc
cmp
fadd
pop
inc
shl
pop
add
bswap
adc
shll
out
or
mov
xchg
adc
dec
dec
pop
shll
or
add
inc
sub
cmpsl
inc
daa
in
sbb
mov
adc
loope
je
and
push
mov
js
mov
pop
xorl
rolb
lods
fstpt
add
int3
fdivrl
test
mov
push
jecxz
add
xor
push
lret
cltd
inc
mov
adc
mov
mov
rorb
out
outsb
cmp
test
add
add
or
push
scas
or
xchg
and
shrl
and
xor
fbld
or
jbe
adc
sbb
out
push
dec
fnstenv
push
in
adc
push
stc
mov
fxch
cld
call
mov
sbb
mov
inc
jmp
push
inc
and
xchg
pop
dec
nop
sub
push
cmp
sahf
xchg
xchg
dec
pop
and
or
sub
ret
mov
mov
pop
push
and
lret
loope
cmpsb
inc
cmc
mov
arpl
in
roll
or
adc
data16
incl
mov
or
sbb
mov
cmpb
cmpsb
jb
inc
fdivrp
decl
inc
or
add
test
cmc
pop
decl
mov
sbb
ret
ljmp
cltd
mov
fnstsw
pop
and
jp
jge
add
dec
test
das
les
cmp
shlb
pop
cld
decl
insb
rcrl
scas
jg
fildl
movsb
xchg
dec
sti
ficoms
push
sbb
jg
xchg
out
pushf
pop
out
stc
adc
xchg
lret
mov
jl
incl
test
lock
gs
xchg
jo
dec
ret
dec
fnstcw
jo
mov
pop
stos
push
imul
call
das
enter
and
out
and
or
call
jmp
add
repz
leave
ljmp
std
add
lcall
ljmp
and
popa
jae
add
inc
push
imul
je
subb
push
stc
mov
sub
dec
pop
lret
jle
xor
sbb
or
test
xor
incl
add
jl
inc
mov
mov
test
pop
loop
shrl
gs
rcl
jnp
push
lret
ljmp
jmp
pop
inc
pop
xchg
xchg
xchg
and
in
push
or
lret
lcall
movsb
or
mov
sub
decb
sbb
adc
sbbl
adc
cmp
pop
push
test
scas
in
rcll
cld
out
mov
test
adc
adc
sub
adc
pushl
clc
bound
sub
insb
add
pop
pusha
js
orb
ljmp
fildll
nop
pusha
das
and
add
mov
adc
mov
test
int
rorb
mov
lcall
mov
shlb
add
sbb
pop
mov
jmp
mov
mov
jmp
inc
pop
call
cmp
xor
xlat
inc
jp
nop
mov
xchg
sub
stos
xor
imul
imulb
cmp
sub
adc
add
sub
daa
or
jmp
icebp
aam
sbb
or
es
mov
das
pushfw
pop
or
push
push
fldenv
andb
and
rcll
mov
pop
jle
shll
lods
pop
mov
xchg
cmp
movsb
mov
cmc
or
adc
pusha
stc
and
rcrl
xlat
enter
rolb
and
xor
stos
orl
shrb
pop
mov
shl
push
das
xchg
jns
repz
jno
cwtl
lock
jp
xchg
add
xchg
cmc
in
pop
into
cmc
cmp
mov
cltd
mov
xchg
sub
scas
fisubs
pop
sbb
sar
fists
adc
and
or
fnstsw
pop
pusha
repnz
cltd
inc
out
and
ljmp
cld
cmpsl
je
mov
aas
imulb
xchg
pop
or
add
push
mov
dec
out
out
in
fsub
or
idivl
and
cmp
pusha
or
add
inc
sbb
and
and
cmp
or
cmp
fsts
and
test
fstpt
pop
mov
or
and
or
mov
mov
xor
jl
sub
mov
call
sti
std
rcl
push
icebp
mov
mov
es
inc
pop
jg
outsl
dec
jmp
movsb
sbb
pop
shl
fistpll
jne
adc
pop
mov
inc
cmpsb
divl
call
cld
jg
and
xchg
mov
jns
pop
imul
sbb
dec
test
add
or
xor
notl
sbb
push
ret
cmp
ljmp
popa
mov
pusha
add
inc
adc
mov
mov
lods
sar
add
pop
jnp
jae
test
xchg
mov
test
lcall
sbb
adc
push
orb
adc
incl
and
lea
xor
xorps
ljmp
nop
hlt
add
aaa
or
mov
cmpsl
test
inc
mov
jb
lret
inc
add
mulb
fstpt
inc
or
xor
repnz
faddl
jae
xchg
add
sbb
pusha
push
enter
inc
adc
je
mov
pop
movsl
or
jp
mov
ds
sub
push
push
sbb
xor
outsb
rcrl
adc
push
dec
mov
out
dec
dec
add
mov
fxch
push
sbb
outsb
mov
fcmovnb
add
dec
hlt
ret
mov
dec
hlt
cltd
dec
or
sahf
or
iret
sub
mov
push
push
jl
xchg
xchg
sub
mov
inc
push
les
or
xor
mov
insl
cld
pop
mov
fistpl
mov
mov
mov
adc
adc
into
jno
dec
xor
aas
dec
jmp
xchg
adc
enter
xor
cmp
pop
xor
movsb
sbb
jg
ljmp
push
test
test
call
add
mov
dec
pushf
push
inc
in
popf
inc
stc
mov
rcrw
and
jge
lods
mov
ret
add
pop
jo
mov
test
dec
int3
inc
inc
pop
popf
mov
mov
cmp
mov
dec
enter
das
xor
cwtl
and
testl
push
lods
sbb
or
inc
dec
test
adc
sbb
jmp
sub
cmp
mov
mov
stos
sub
mov
lods
inc
inc
mov
add
lods
je
adc
in
or
shrb
ds
test
sarb
jmp
push
fisttps
mov
lret
test
movsb
push
icebp
mov
jp
cs
jo
dec
ljmp
movsb
sbb
push
add
insb
loop
sub
adc
sub
mov
push
psrad
test
fs
jns
push
adc
adc
add
cli
add
push
dec
xor
mov
inc
and
and
add
and
sbb
dec
dec
mov
jge
nop
xchg
call
scas
inc
addr16
sub
and
pop
neg
jns
and
ja
xor
dec
or
sahf
hlt
test
flds
xchg
js
lret
das
fcompl
and
je
sbb
push
push
rcrl
dec
sbb
sub
test
inc
cmpsb
cmp
jne
aad
sbb
pop
sub
mov
dec
fbstp
popf
xchg
cli
outsb
ret
push
dec
gs
test
dec
dec
push
inc
mov
lock
sbbl
mov
outsl
icebp
scas
insb
adc
push
insb
push
and
movsl
and
sti
das
hlt
lock
mov
cli
mov
mov
mov
into
decb
andb
cmp
inc
cmc
cmp
xchg
jg
nop/reserved
aas
mov
fildll
fucomip
push
icebp
mov
cmc
fcompl
pop
stos
fcmovu
inc
cli
mov
cmpsl
pop
fnstsw
or
shrl
xchg
popa
mov
fisttps
cmp
sarb
mov
push
push
test
in
jg
cltd
gs
cmp
mov
dec
xlat
adc
inc
xchg
hlt
cmc
sbb
xor
jle
xor
add
cmp
add
pop
cmp
push
add
arpl
sub
adc
push
and
pop
mov
dec
mov
ljmp
ret
cmpsb
fmuls
leave
and
and
lcall
pushl
pop
arpl
iret
mov
cmp
inc
add
movsb
into
das
loopne
sbb
lods
mov
and
cmp
add
into
sbb
fistpll
pop
and
xor
loop
iret
mov
adc
and
dec
lods
imul
cmpl
xor
leave
jno
imul
jmp
pop
or
test
inc
and
and
push
popa
and
aad
call
insb
push
add
and
mov
jns
push
imull
xorl
aaa
add
hlt
stos
dec
pop
mov
mov
mov
jnp
js
das
icebp
ljmp
inc
sub
lcall
xchg
addr16
lea
adc
in
adcb
fidivrs
pop
cld
ss
test
in
popf
dec
decl
xlat
cmp
or
dec
lahf
or
loope
js
or
js
mov
jg
cld
aaa
clc
std
and
lods
adc
add
enter
sub
sub
push
mov
push
idiv
fs
or
pushf
xchg
pop
jp,pt
scas
push
pop
fistpll
cmp
xor
lds
stc
repz
cmp
movsb
sbb
andb
push
cmp
lock
mov
inc
cmp
jb
push
sahf
lcall
test
lods
cwtl
dec
aam
mov
sub
sub
dec
das
rorb
xor
and
jns
scas
jmpw
inc
dec
popf
xor
andb
fwait
mov
notl
mov
adc
ds
fstps
outsb
or
jle
xchg
popa
or
dec
xor
enter
or
mov
push
add
mov
cmp
xchg
jb
imul
push
lods
add
push
push
stc
and
cmpsb
incl
mov
mov
add
enter
in
insl
hlt
mov
cmp
pop
push
aad
mov
rcrb
fcoms
enter
add
in
cwtl
or
xchg
aam
test
daa
add
mov
fmuls
movsb
inc
jle
es
dec
add
lods
push
pop
test
fs
and
insb
ds
incl
cmp
movsb
clc
xor
test
fucomp
lds
fists
add
int
fadd
call
lock
dec
repz
sub
sbb
rcrb
or
aaa
fadd
push
lcall
add
lock
or
push
or
and
cld
rolb
test
xor
sub
mov
or
and
sahf
sbb
sahf
add
das
mov
inc
pop
aad
push
jo
and
pushf
inc
sahf
xchg
ret
adc
xchg
loopne
push
scas
dec
xorb
dec
in
push
inc
xor
sarb
arpl
movsb
mov
xlat
fisttpll
or
sbb
sti
mov
dec
aam
pusha
xchg
adc
inc
mov
enter
loopne
mov
pop
cwtl
les
into
xor
or
and
fs
add
or
imul
mov
lods
push
inc
ror
cs
fdivrs
incl
and
inc
cld
testl
dec
cmp
cld
cld
sbbb
cld
xor
inc
shl
xor
pop
pushf
mov
in
xor
aaa
and
movsb
add
push
mov
mov
orb
adc
bound
orb
mov
inc
cltd
jnp
mov
push
cld
cmp
mov
insl
jnp
mov
iret
cmpsl
xchg
cwtl
les
int3
sub
into
in
add
test
incb
aaa
and
sbb
fnop
add
dec
push
mov
out
mov
jne
push
jmp
je
into
ss
or
int3
xor
les
jecxz,pt
push
jl
mov
out
cmp
data16
ljmp
push
cmpb
pop
icebp
or
lock
jo
cmp
negb
add
outsb
test
sbb
mov
mov
std
mov
sub
add
test
sub
and
loope
jbe
pop
sbb
orb
aam
mov
mov
sbb
adc
pop
push
enter
xor
jae
shlb
or
cwtl
das
sbb
push
test
jmp
mov
push
xor
adc
out
xor
push
pop
or
pop
xchg
mov
cmpsl
pop
jecxz
pop
imulb
push
pop
cli
leavew
sbb
cmc
arpl
pop
jno
rcrl
jb
pop
sub
pop
out
jbe
sub
pusha
push
mov
loopne
fcoml
mov
xor
sub
addb
adc
into
sbb
fisubrs
jo
cmp
insl
push
inc
int3
test
bound
xor
insb
push
cwtl
and
add
inc
push
fmull
lret
fstpt
lea
repz
push
inc
jmp
insl
pop
inc
fildl
push
jp,pt
lret
in
loopne
mov
daa
and
rclb
addr16
xchg
test
push
add
cltd
fisttpl
enter
sbb
ljmp
pop
shlb
pop
ja
add
stos
test
and
sbb
sti
or
xor
cmc
jb
adc
pop
jb
xchg
or
pop
jmp
sbb
test
cmp
fxch
adc
shlb
popa
inc
shll
mov
test
dec
jb
sbb
or
cmp
ret
push
jae
mov
test
dec
mov
movsl
popa
push
shr
sub
xchg
lret
or
loopne
cmp
dec
je
rclb
xchg
or
sbbl
mov
cwtl
jg
sub
or
fs
das
jmp
cld
outsb
add
andb
and
decl
sub
and
dec
add
or
add
ljmp
cltd
add
xchg
or
pop
push
xor
call
andb
popa
jbe
mov
sti
cmp
dec
add
popa
push
mov
mov
ds
pop
sbb
leave
adc
mov
jecxz
inc
inc
mov
es
pop
clc
incl
pop
fsubrl
jbe
push
mov
push
mov
incl
movsl
test
outsl
or
clc
icebp
mov
adc
call
and
sbbl
pop
idivl
pop
in
mov
add
pop
xor
pop
push
lock
mov
push
mov
and
popf
mov
adc
scas
inc
loope
add
add
inc
adc
pop
push
mov
in
rolb
cmp
jecxz
sub
leave
lods
pop
jbe
dec
inc
dec
notb
mov
xchg
out
inc
nop
pop
dec
mov
mov
out
daa
xorb
dec
dec
inc
cmp
leave
inc
je
mov
decl
call
mov
sbb
inc
addr16
jg
mov
xchg
int
cmp
xchg
or
or
dec
adc
jg
xchg
nop
push
insb
jo
adc
fcmovu
xchg
mov
out
or
sub
xchg
xchg
dec
jge
inc
push
cmc
mov
pop
push
push
nop
pop
xchg
xchg
sahf
repz
push
decl
jecxz
movsl
add
dec
dec
mov
ljmp
and
imul
and
xchg
xchg
insl
and
or
insl
inc
cli
and
ljmp
clc
cmpb
jg
jg
or
sub
andl
jmp
mov
insb
jbe
add
add
and
mov
call
jo
cmp
les
xchg
mov
ljmp
dec
mov
adc
add
cltd
jg
lcall
fistl
or
sub
sbbl
pop
xchg
rolb
adc
pusha
mov
ljmp
mov
inc
aaa
and
pop
inc
adc
adc
out
shr
sbb
add
inc
adc
lcall
sbb
repz
inc
inc
out
sbb
movb
add
ljmp
mov
pusha
pop
ja
cmpsl
mov
sbb
xor
jp
dec
add
and
and
decl
sbb
lea
push
fwait
mov
sbb
jl
lcall
push
sub
inc
push
jecxz
push
or
test
add
aad
cld
cmpsb
dec
push
lahf
fstpt
add
mov
xor
aaa
sub
push
insl
call
cmc
call
jl
xchg
mov
mov
sarl
call
call
or
adc
dec
inc
lcall
sarl
push
out
add
movsl
mov
ss
push
push
pusha
or
loop
adc
sti
and
inc
sbb
lock
sbb
or
movsl
shlb
or
pop
cli
cmpsb
inc
xor
adc
in
mov
pop
and
jg
adc
and
jnp
sub
dec
cmp
out
inc
and
aas
inc
loopne
mov
xor
in
xor
or
adc
add
sub
push
loop
xlat
and
xor
int3
popf
push
mov
jmp
ljmp
sub
test
xchg
dec
xchg
push
repz
fnsave
popf
dec
lea
mov
cld
push
add
pop
adc
xor
sbb
mov
lods
hlt
and
sub
xchg
and
and
jmp
out
std
add
and
rcr
push
cmc
push
adc
sar
jg
repnz
add
xchg
xchg
ret
arpl
push
xor
fwait
xchg
clc
lods
jle
ret
sbb
dec
in
loopne
icebp
mov
jmp
xor
sub
lcall
hlt
jno
lock
push
arpl
jecxz
xchg
fwait
pop
test
ret
xchg
and
call
inc
push
lret
push
popa
rol
mov
xor
repz
mov
and
adc
pusha
xor
arpl
mov
mov
cmp
add
stos
es
scas
add
mov
sub
sub
call
cmp
cmp
out
sbb
cs
jb
mov
jg
out
mov
sbb
push
pusha
insl
or
std
gs
std
pusha
adc
mov
lret
addb
add
adc
aam
mov
ljmp
add
add
jb
je
jp
movsb
pop
fdivrl
or
mov
xchg
adc
sbb
cmp
push
lock
mov
outsl
push
cmp
or
cmp
pop
lahf
insl
rep
cmp
push
mov
out
or
aaa
outsl
call
in
lock
outsl
mov
clc
inc
add
in
sub
bound
lcall
loop
sbb
sub
mov
fbld
pop
xchg
pop
insl
or
push
sub
cld
lock
lcall
cmovo
or
aad
call
dec
cs
pop
imul
roll
dec
into
ljmp
cmp
addr16
clc
dec
lock
add
or
sbb
adc
scas
jg
sahf
xor
repz
shl
mov
and
div
cmp
dec
inc
stos
mov
dec
call
cli
xor
add
lcall
push
daa
jl
lret
hlt
dec
lea
cmpl
clc
loopne
sbb
in
xchg
cmpsl
xchg
or
cmp
sbb
fimull
ret
mov
rol
inc
pop
out
loopne
xlat
in
inc
pop
push
mov
rorb
cmp
sbb
adc
fdivr
jo
ficoms
xchg
inc
addr16
inc
xchg
lcall
insl
icebp
xchg
mov
arpl
sub
cmpsb
inc
and
push
int3
lock
loop
mov
sub
pop
nop
test
jge
and
fadd
inc
mov
xor
add
dec
and
mov
outsb
adc
xchg
push
sbb
mov
sbb
out
push
out
out
or
mov
andb
add
add
sub
jo
adc
push
cmp
xchg
pop
or
dec
mov
or
add
push
push
pop
xor
mov
int
sbb
jne
mov
enter
test
dec
xor
xor
adc
cmp
xor
sbb
shll
dec
sahf
mov
adc
and
or
mov
imul
fcoml
and
or
shlb
pushw
hlt
dec
mov
cmp
mov
movb
and
lret
adc
andb
in
push
mov
sbb
add
rorl
lock
dec
add
xchg
in
sarl
mov
lcall
mov
shll
xchg
in
mov
out
out
clc
shll
std
xor
dec
sbb
mov
inc
ret
jae
scas
lret
cmpb
jno
sbb
imul
mov
fwait
push
mov
and
adc
dec
or
or
push
push
xor
into
cli
cmp
cld
aas
or
lds
test
mov
and
shll
add
and
test
jnp
pop
and
adc
insb
adc
xor
xchg
inc
or
fistpll
and
repz
fneni(8087
or
adc
add
or
xor
jge
mov
cs
jb
call
dec
dec
scas
adc
xor
ret
enter
xchg
push
insb
out
mov
add
add
mov
outsl
add
aaa
adc
andb
add
cmc
jg
fdivs
lds
imul
ds
add
andl
int
popa
aad
pop
pop
cmp
or
push
js
add
hlt
faddl
test
dec
jns
fs
push
addb
lods
pop
xor
pop
mov
icebp
ljmp
add
mov
fsubl
push
rorb
test
push
add
push
add
push
clc
push
test
xor
adc
dec
push
jae
sub
adc
jne
mov
cmp
fisubs
inc
and
xchg
push
icebp
and
test
mov
dec
cmpsb
sub
sub
adc
loope
int
ljmp
xlat
add
in
or
sub
fmuls
sub
jle
cld
push
aam
test
ljmp
pop
rol
test
aam
cmp
cmpl
int
mov
leave
cmp
pusha
fsubs
scas
mov
push
xchg
cmp
sarl
and
lods
icebp
cmpsb
and
fadds
fists
add
or
imul
adc
sbb
or
push
test
dec
fmuls
adc
or
pop
mov
push
push
iret
jne
inc
sbb
add
cmpl
and
clc
add
enter
shr
jb
adc
inc
or
jle
xor
bound
mov
fidivrs
xchg
sarb
fs
sbb
shll
cmp
rcr
add
fmull
add
shll
dec
jne
and
int3
lret
int3
fdivl
or
add
and
add
jmp
lea
es
add
gs
adc
int
in
mov
pop
xchg
or
cltd
jns
or
insb
push
mov
cmpsb
or
pusha
sbb
scas
add
add
je
xlat
xchg
mov
xchg
fidivl
jle
leave
add
mov
adc
loopne
dec
stc
clc
xchg
xor
cmp
cwtl
cld
or
fisubl
dec
cltd
lret
push
push
movsb
shr
test
ljmp
sbb
push
jae
dec
adc
cmp
add
dec
decl
nop
cmc
adc
test
jae
hlt
jge
push
outsb
test
ljmp
sahf
inc
hlt
push
faddl
jb
in
pushf
mov
jmp
add
cltd
lea
cwtl
mov
sbb
enter
push
cld
call
js
dec
jge
and
aas
add
es
dec
add
ljmp
dec
dec
inc
jno
push
push
ja
popa
or
and
jae
xchg
sub
xchg
les
call
push
xchg
and
bound
jg
pop
xor
cmpb
popa
xor
xchg
sub
subl
out
scas
ljmp
cmp
jmp
jns
fwait
sub
inc
pop
test
shrb
adc
montmul
cmpsb
shll
cli
call
repnz
cmp
xchg
inc
ror
imul
mov
lcall
pop
or
mov
xchg
in
jns
in
fsubs
mov
or
push
inc
out
icebp
test
mov
aas
cmp
cltd
lea
rorb
xchg
mov
jg
sub
add
loopne
xor
rorb
xor
add
xor
mov
subl
js
test
sti
dec
scas
dec
push
cmp
and
sar
xchg
lcall
xor
jno
inc
int3
into
jae
jecxz
sub
mov
pop
mov
add
or
arpl
mov
popf
imul
add
jecxz
push
and
mov
jns
mov
inc
int3
jg
incl
mov
inc
push
fwait
in
lea
jbe
xchg
mov
mov
or
mov
mov
or
je
sub
inc
fisttpl
ljmp
aaa
sub
enter
xchg
xchg
mov
and
jmp
cmp
daa
jmp
push
sub
jb
mov
xor
cli
subb
mov
add
aam
in
ror
movsl
sbb
adc
repnz
dec
sub
dec
loop
and
add
xchg
and
rcll
push
sbb
mulps
inc
ds
sub
out
cmp
test
cmp
mov
add
dec
mov
cmc
pop
pusha
scas
push
insb
outsl
sbb
roll
xor
mov
nop
jo
push
test
loop
and
lahf
je
and
sahf
popa
sarb
into
stos
imul
cmpsb
out
or
cld
pop
test
push
pslld
int3
jbe
ljmp
lods
enter
xchg
xchg
xor
add
incl
stc
xchg
pop
hlt
push
cmp
adc
mov
imul
out
rcrb
mov
or
sbb
rol
imul
sbb
mov
fists
mov
ficompl
lods
or
cmp
lcall
mov
and
fwait
bswap
mov
clc
or
leave
and
maxps
call
add
sahf
sahf
add
jnp
test
xor
incl
ljmp
inc
inc
xor
xchg
dec
xor
xlat
cmp
into
mov
jg
mov
adc
xor
jbe
int
mov
incl
mov
sub
lods
mov
pop
adc
pop
sahf
shlb
xchg
hlt
incl
in
rolb
cltd
dec
hlt
xlat
jle
nop
jg
jp
sbb
cli
outsb
lret
mov
icebp
lcall
dec
pushf
mov
push
fcomps
xchg
lret
rcll
ret
sub
mov
cs
jecxz
orb
fwait
add
scas
xor
movsb
adc
pop
shr
loope
outsl
lock
sarb
add
je
loopne
and
jg
sub
add
movsb
inc
adc
sub
push
loop
insl
dec
push
fistpll
inc
inc
movsl
test
push
adc
sub
jbe
xor
clc
aas
sub
xchg
js
stc
ss
daa
jg
xchg
add
xor
std
xchg
mov
fcomps
decl
mov
jmp
fcmovnbe
xor
clc
decl
bnd
dec
inc
in
jo
push
cmp
adc
andl
mov
call
stos
inc
ret
nop
add
xchg
mov
jmp
sbb
pop
lret
call
ret
cmpsb
movsb
lods
push
aam
popf
int
ds
xor
loope
push
repz
jl
mov
das
add
shl
fwait
enter
mov
add
aaa
leave
lret
pop
jo
pushl
test
pop
js
add
sub
pop
shlb
jmp
xchg
pop
repnz
xchg
loopne
addl
add
add
mov
das
std
decl
nop
fmull
leave
sbbl
into
sub
mov
inc
mov
pop
push
loopne
sub
cli
mov
inc
push
js
cmp
es
sbb
mov
jl
jecxz
jl
icebp
add
mov
jecxz
ds
ds
mov
bound
jmp
fwait
clc
sbb
daa
ds
ds
cmp
jl
jl
cwtl
jno
nop
pop
push
repnz
movl
ds
call
incl
jne
and
xchg
cmp
xor
into
clc
out
ds
idivl
std
in
rorl
mov
clc
xor
ds
jmp
cmp
push
sub
jl
jne
scas
mov
jnp
jl
cld
pop
jecxz
test
movsl
daa
sbb
dec
ljmp
lock
xor
pop
sub
clc
popa
inc
insb
movl
sub
mov
hlt
js
leave
out
aaa
and
jl
adc
aaa
decb
stos
movl
sbb
xchg
add
xchg
std
pop
cli
call
ds
sbb
fs
sub
rcrb
pop
in
lcall
xor
data16
icebp
push
jecxz
mov
adc
lret
inc
into
jo
loope
mov
psubb
inc
or
shll
lcall
pop
sub
and
mov
jl
jecxz
and
out
es
mov
incb
push
pop
insl
and
adc
jl
ja
push
fsubp
cli
fbld
icebp
xchg
mov
adc
lods
repnz
andb
and
popa
adc
jg
jl
loopne
sbb
xchg
and
adc
mov
or
and
loope
clc
mov
pop
es
cmpsl
ds
popl
decl
fistps
and
jecxz
mov
stc
pop
lods
clc
xlat
clc
pop
push
adc
xorb
icebp
pop
pop
pop
dec
ds
jl
stos
ficomps
lock
dec
in
add
push
mov
push
bound
lock
clc
inc
mov
pop
shll
out
shl
je
pop
icebp
or
pop
js
add
shrb
or
fcmovne
es
in
icebp
mov
jecxz
pop
push
fisubrs
outsb
push
jmp
out
aaa
outsb
aad
pushf
cwtl
jecxz
call
jl
jp
les
loope
movb
filds
inc
dec
adc
lock
xor
push
nop
je
jg
ffree
pop
mov
add
enter
aas
cmp
inc
add
mov
data16
mov
lea
ja
xchg
into
sub
sbb
add
and
mov
gs
push
insl
inc
push
sar
cmc
dec
addl
push
xor
mov
xor
test
adc
mov
add
mov
or
adc
ja
mov
fsubs
and
clc
decl
bound
mov
mov
and
or
mov
jg
mov
or
pop
inc
rolb
inc
mov
dec
xchg
sbb
jge
test
call
sub
adc
push
mov
sub
out
insw
ljmp
inc
jo
xchg
inc
nop
push
mov
stc
and
or
xchg
daa
movsl
popf
pop
cltd
mov
aaa
jmp
inc
and
jl,pn
dec
inc
mov
jo
pushf
inc
jb
add
pop
push
push
loop
rolb
aaa
pushl
hlt
xchg
inc
clc
mov
mov
xchg
lock
cmc
mov
jne
call
adc
xor
rol
pushf
pop
ds
jecxz
ret
xchg
lret
pushl
xchg
xor
pop
stc
test
mov
cmp
shrl
pushl
xor
enter
subb
adc
loopne
xchg
lods
add
scas
mov
mov
pop
cld
aaa
jae
iret
adc
xlat
arpl
popf
ficoms
lea
jle
das
lret
and
pop
and
les
sbb
jg
dec
push
lock
pop
stos
push
stos
lcall
insb
xor
mov
adc
add
xchg
cmpsb
push
xchg
enter
mov
sub
jg
xor
pusha
push
xor
fidivrl
xor
xor
adc
ljmp
mov
ljmp
cld
inc
mov
xor
xchg
adc
bound
popf
test
jge
mov
mov
jb
cld
jg
inc
push
and
mov
jbe
hlt
dec
jne
js
cmc
pop
mov
xlat
ret
cmc
lods
pop
pushl
out
or
jns
pop
movsb
jge
cmp
aad
rol
out
fdivrl
mov
leave
cld
xor
scas
push
xor
ljmp
or
loop
mov
pop
cld
sbb
stos
push
in
inc
cld
adc
push
push
stos
dec
andb
pop
sub
xchg
es
pop
loopne
push
mov
lea
add
pop
popa
xchg
loopne
sub
int
inc
lock
sbb
jne
addb
sub
addr16
add
in
mov
pop
cmp
add
push
faddl
xchg
sbb
cltd
add
test
ss
adcb
cltd
inc
and
andb
int3
sbb
mull
pop
imul
mov
loop
push
jmp
add
stos
dec
and
mov
mov
lret
xor
cmp
and
and
or
fdivs
pop
mov
push
cmp
daa
mov
icebp
xor
dec
xor
or
inc
xor
sahf
push
js
mov
leave
faddp
mov
loopne
test
cmp
sarb
adc
xor
mov
cmp
in
or
mov
clc
add
add
inc
dec
sbb
scas
sub
xchg
jne
pop
rorl
and
int3
clc
in
sbb
outsl
and
bound
loopne
cmp
adc
mov
mov
lock
icebp
and
in
sub
iret
clc
xor
jl
out
cmp
ss
lock
icebp
add
call
cmp
lods
sahf
fiadds
cmp
adc
pop
test
cwtl
and
inc
andl
add
xchg
and
add
xor
mov
sbb
fnsave
sbb
js
insb
ficoml
and
push
hlt
push
push
arpl
sbb
push
dec
and
cld
pop
mov
bound
or
dec
xchg
aam
mov
adc
cmp
dec
and
xorb
roll
push
mov
fldt
push
mov
sbb
xor
cmp
sbb
cmp
add
sbb
jo
loope
adc
inc
lea
shr
add
add
mov
fsubl
or
pop
dec
dec
push
aam
fistpl
sbb
sub
jmp
rorb
cmpsl
sbb
pop
xor
daa
cwtl
adc
adc
rcrl
out
es
adc
sub
mov
push
fcomps
sbb
mov
dec
rcrl
adc
adc
inc
mov
sbb
int3
ret
inc
sub
cmp
or
dec
adc
jge
out
adc
push
sub
negb
jb,pn
xchg
xor
sahf
jecxz
sbb
negb
outsb
push
cmpsb
pop
scas
cmp
pushf
push
add
aam
xchg
and
rcll
cmp
sub
or
jle
lret
rcrl
and
aaa
xchg
dec
pop
xor
aam
fld
or
adc
inc
mov
and
jne
dec
xchg
cmpsb
xchg
les
loopne
cld
test
mov
dec
cmp
out
inc
addb
add
sub
leave
xor
andl
pop
inc
add
rcll
sub
pop
mov
lds
xchg
jns
inc
scas
sbbl
nop
cmpl
jcxz
add
dec
dec
outsl
mov
or
inc
into
and
enter
pop
cmc
sub
test
xchg
or
aad
fmulp
inc
pop
adc
mov
loop
cmc
pop
sbb
int3
cmpsb
pusha
mov
push
sti
sbb
ss
movups
dec
lock
push
mov
mov
push
pop
jmp
lcall
xchg
loop
out
shll
xchg
push
fcomps
pusha
lea
loopne
xor
pushf
mov
and
addr16
dec
insl
rorb
mov
cmc
dec
mulb
inc
push
lock
pop
lret
add
dec
shlb
mov
jno
add
imul
add
push
lods
outsb
aam
pop
mov
jge
push
jb
xor
add
xor
dec
push
sbb
jmp
mov
cli
movb
xor
shlb
sahf
add
cli
mov
sbb
cmp
enter
cmp
push
je
sub
mov
lea
jne
jmp
test
jb
clc
subb
add
push
pop
add
xor
xor
insl
sub
fsubr
roll
push
icebp
inc
rorl
insb
adc
les
stos
jmp
cmp
push
sahf
shr
ror
ret
dec
xor
test
xchg
mov
sbb
sbb
faddl
push
cmp
sbb
mov
imul
pop
sbb
mov
jmp
adc
insb
and
cmp
jb
push
push
push
lea
push
cmc
xor
push
and
dec
shlb
dec
pop
sub
rorl
cmp
push
pop
stos
enter
cmc
dec
adc
jecxz
mov
hlt
movsb
aam
cwtl
out
or
cli
int
lahf
add
andb
sbb
sub
push
aas
mov
adc
fstpt
pushf
push
aam
fiadds
aas
jmp
push
fsubs
fmuls
ljmp
call
mov
sbb
mov
lret
mov
and
es
jb
call
mov
aas
mov
add
sub
lahf
dec
push
inc
lock
incl
rolb
xchg
cmp
mov
or
enter
dec
stos
xchg
cmp
lods
add
in
call
mov
cmp
cmp
pop
mov
add
jg
jmp
jo
bound
inc
sbbl
addr16
gs
loope
iret
bswap
shlb
cltd
cwtl
test
push
adc
sahf
adc
inc
jle
popf
ljmp
std
push
and
pop
idivl
cmp
add
xchg
rol
push
call
mov
jmp
dec
lea
add
inc
xor
xlat
hlt
cwtl
push
add
add
mov
dec
ljmp
cli
and
mov
ret
jb
arpl
jne
or
add
aas
imul
mov
xor
adc
jns
mov
jmp
push
scas
adc
cmp
addr16
int3
mov
adc
imul
mov
pop
arpl
fwait
nop
mov
xchg
std
mulb
xchg
stos
sub
pop
mov
push
push
mov
imul
jmp
jns
pop
xchg
lds
inc
mov
mov
clc
in
mov
dec
mov
push
in
or
dec
cmp
xchg
xchg
rsm
mov
test
mov
jecxz
addr16
inc
mov
lods
cmp
in
or
xchg
mov
repnz
add
fnsave
mov
mov
mov
ret
call
xor
jle
test
addl
xor
loop
call
sub
sbb
pop
es
mov
jo
lods
sub
out
sahf
jnp
inc
repnz
mov
mov
jo
or
daa
pop
cli
jbe
push
pushl
push
mov
and
iret
push
insb
ret
sbb
adc
fimuls
inc
mov
in
mov
js
test
inc
or
or
ret
orb
fnstsw
add
dec
rorb
rolb
xchg
or
mov
mov
adc
imull
sub
add
mov
in
xor
imul
jno
sbb
adcl
or
xor
sbb
adc
call
adc
lds
lods
add
test
testl
cmpl
add
fisubs
pop
loopne
mov
movsl
add
mov
xchg
imul
mov
int3
inc
add
sub
xchg
sar
dec
mov
clc
sub
or
add
dec
or
jbe
push
adc
or
pop
roll
pop
out
mov
enter
dec
insl
and
adc
jle
test
popf
ljmp
xchg
jmp
xchg
idivl
xchg
add
bound
dec
jge
mov
or
sbb
movsl
add
cli
int3
sbb
js
sbb
or
xor
bound
or
aad
ljmp
sbb
add
inc
outsb
sub
ret
dec
xor
call
and
sbb
xor
out
int3
adc
lods
fwait
lds
or
dec
sbb
xor
hlt
mov
out
cwtl
mov
inc
pop
es
sbb
sbb
xlat
js
mov
repnz
cmp
cmp
dec
push
and
loopne
sub
jmp
test
jae
pop
pusha
mulb
sbb
or
cwtl
sarl
ljmp
push
das
lret
push
add
adc
enter
mov
and
xchg
pop
dec
adc
test
dec
lahf
movsb
add
test
nop
add
mov
call
loopne
scas
call
push
sub
mov
out
call
push
popl
fsubs
pop
mov
jo
dec
xchg
and
mov
cmp
fwait
hlt
stos
add
mov
mov
rcrl
mov
hlt
lcall
je
int3
xchg
add
or
xor
or
lock
xchg
aad
jno
or
lahf
mov
add
lcall
lret
xor
rcrb
adc
in
add
xor
inc
rolb
xchg
xor
add
js
fdivr
cmp
mov
ljmp
sbb
lret
add
cmpsb
sub
add
push
sub
nop
dec
pushf
inc
cmp
cmp
mov
leave
lock
jg
lock
or
js
push
outsb
cmp
mov
rorb
call
sub
call
jae
lcall
cmp
adc
push
or
and
lret
mov
sbb
repz
push
fildl
xor
mov
rcr
repz
mov
mov
adc
cwtl
rsqrtps
xor
ss
xchg
pop
call
push
cltd
pop
adc
push
shlb
add
je
jmp
fildll
cld
andl
cmp
mov
xor
add
std
mov
dec
dec
jno
icebp
ret
es
sbb
dec
xchg
xor
push
call
test
inc
inc
das
mov
mov
and
pop
bound
ljmp
stos
or
and
xchg
mov
jecxz
pop
pusha
xor
incl
sub
add
stos
add
shll
and
adc
dec
scas
icebp
cmp
lods
fdivl
aad
clc
sbb
pop
xchg
movl
cmp
repnz
das
hlt
jae
add
das
gs
movsb
dec
loopne
pusha
rolb
test
dec
jo
outsb
sbb
push
inc
add
data16
mov
and
pop
loop
imul
je
and
sub
movups
xor
ret
push
in
scas
mov
repz
js
inc
lcall
mov
mov
sbb
fidivrs
adc
mov
icebp
into
ss
mov
in
xor
jl
out
mov
outsl
cli
mov
pop
cmp
in
ljmp
mov
scas
add
das
cwtl
sbb
mov
sub
out
and
inc
jg
push
dec
lods
gs
lcall
mov
ret
push
add
ds
fiadds
fwait
lock
xchg
push
stc
jecxz
cmp
xor
cmp
addb
jns
movsl
hlt
or
push
xbegin
pop
inc
or
inc
add
in
daa
adc
xor
movsb
push
and
add
xor
dec
and
loop
jle
pop
inc
out
rol
daa
and
ss
push
dec
add
xchg
mov
pop
adc
push
pusha
mov
enter
xchg
ss
or
cmc
adc
fiaddl
daa
sub
ljmp
add
adc
out
sub
mov
or
sub
and
mov
jo
inc
inc
xchg
adc
into
adc
call
outsl
adcb
inc
add
shrl
jge
dec
xchg
pop
lods
adc
xor
adc
xchg
mov
sub
adc
push
cmp
or
fistpl
shlb
iret
adc
sub
imul
imul
lcall
mov
mov
test
xor
ret
mov
loopne
and
and
mov
repz
movd
outsl
and
dec
jp
and
add
inc
lods
xlat
scas
adc
addl
jne
dec
mov
mov
jp
or
rcrb
mov
lahf
icebp
cmpsb
pop
jecxz
fbld
lcall
xor
lock
sbb
out
add
or
cwtl
adc
loopne
add
repnz
test
std
inc
or
or
ret
and
xor
xchg
iret
sub
sahf
jecxz
lcall
mov
add
lock
stos
in
lret
xchg
inc
mov
or
pop
jo
xor
xchg
test
mov
sub
xlat
jnp
xchg
outsl
adc
cmp
in
jno
cmp
and
lock
loop
push
and
xor
orb
xor
daa
dec
jmp
xor
add
dec
sub
adc
push
aas
addr16
js
mov
movb
and
hlt
out
ljmp
mov
adc
inc
xchg
into
pinsrw
add
fistl
mov
stos
sbb
adc
data16
movsl
sbb
add
xor
fcmovnu
icebp
sub
push
imul
data16
pop
inc
adcl
fmul
add
mov
jmp
arpl
add
pushl
inc
mov
fiadds
jns
clc
test
lcall
pop
pop
shlb
xchg
mov
push
push
pop
jbe
xchg
push
loopne
sub
and
xor
std
adcl
sar
mov
ljmp
addb
int3
int
and
lods
fxch
cmp
mov
cmp
push
nop
lea
add
jg
inc
xor
xor
cltd
dec
pop
dec
cld
rcll
ret
lret
push
lret
in
insb
into
insl
das
sbb
mov
ds
loop
inc
stos
pop
in
dec
mov
push
or
inc
cmp
in
adc
fyl2x
push
subb
call
hlt
xchg
insb
fs
repnz
or
xorb
sti
ror
insb
movsl
jbe
mov
lcall
flds
arpl
movsb
ret
int
push
and
and
jns
mov
addr16
stc
add
jns
pushl
lret
ljmp
inc
bound
push
imul
repnz
fdivrl
roll
or
add
pop
sbbl
add
or
xchg
mov
mov
sub
or
jmp
jge
dec
jne
data16
cmp
and
test
es
movsl
push
jp
icebp
inc
popa
jne
clc
inc
test
es
dec
push
cmpb
call
cld
push
stos
jo
push
iret
sbb
pusha
lret
mov
or
jmp
adc
sub
adc
ljmp
mov
lcall
lcall
mov
clc
loopne
insb
test
es
call
inc
mov
call
mov
add
pop
lahf
or
pusha
push
pushf
subl
mov
out
cmp
fnstenv
xchg
push
inc
lret
sbb
mov
mov
mov
fsubl
movsl
jle
jbe
mov
or
or
jmp
inc
fs
add
inc
repnz
or
mov
out
push
inc
or
mov
ljmp
movsb
xor
test
orl
inc
xor
loop
es
fsubp
sbb
decl
or
pop
sbb
cmp
repz
ljmp
mov
push
mov
icebp
test
fcoms
icebp
pop
imul
fs
jl
icebp
int3
push
ds
das
mov
mov
sub
shrl
inc
or
cmp
jle
mov
push
scas
xchg
ret
xor
call
inc
add
testl
cmp
loope
lds
xchg
jl
loop
jb,pt
imul
mov
cmp
or
fdivrp
call
pop
mov
jg
pop
mov
out
into
xchg
mulps
out
clc
movsl
ds
xor
test
call
test
das
lock
clc
or
lcall
mov
mul
mov
sbb
and
xor
lcall
das
xchg
inc
orl
ds
mov
ficomps
mov
adc
hlt
sbb
mov
jecxz
push
mov
ljmp
jg
mov
ds
sub
clc
sbb
pop
decl
fistps
pop
lods
jl
cmp
jno,pt
push
outsl
sbb
xor
loopne
inc
into
call
pop
fcmovb
inc
fsubrp
push
cmp
add
mov
clc
adc
idiv
aaa
push
cmc
pop
push
notl
sub
and
lret
icebp
inc
pop
push
add
add
mov
je
lahf
std
mov
push
jecxz
jecxz
jg
test
jl
add
or
xlat
mov
flds
xchg
pop
or
lods
loope
mov
inc
testb
imul
orl
xchg
pop
mov
inc
push
xor
mov
shll
push
pop
loopne
inc
cltd
sbb
or
adc
mov
fistpll
xor
aad
loope
pop
test
aaa
or
mov
pop
test
test
in
shl
or
xchg
pop
addr16
sub
mov
imul
fisubs
outsl
icebp
push
jo
and
mov
pop
das
jmp
jp
cs
pushl
icebp
adc
and
push
adcl
paddusw
es
jge
pop
rcr
lds
add
sbb
mov
ret
inc
sahf
add
aam
fnstenv
add
daa
add
jbe
xchg
add
push
sub
xchg
outsl
inc
jne
movb
xor
das
fstpt
out
das
lock
call
movsl
mov
in
int
push
or
call
add
xor
mov
dec
enter
decl
andb
and
mov
xor
mov
jae
cmp
xor
out
or
lcall
cmp
and
pop
push
jg
push
push
test
andl
mov
xor
jmp
add
roll
lods
xorl
or
rorl
inc
fdiv
add
loopne
push
stos
outsl
mov
sbb
nop
movsb
std
popf
cmp
loope
jg
fcoms
lret
push
mov
stc
adc
into
subb
lods
scas
push
mov
xchg
lds
sarb
add
pop
fldl
call
mov
rcr
pop
push
cmp
cli
inc
add
pop
mov
cmp
add
cmp
dec
pop
sbb
cmpsb
sub
test
xchg
push
pop
clc
lods
mov
nop
push
mov
add
cmp
fdivrs
dec
adc
cmpsb
test
xchg
xchg
mov
lcall
lcall
adc
add
shll
stos
mov
xor
inc
add
cli
add
call
fdivl
sub
iret
aam
in
xor
in
incb
add
jg
decl
xor
pop
push
cmp
subl
pop
jmp
mov
mov
mov
cmc
jg
nop
sbb
pop
or
pop
testb
mov
dec
daa
loope
inc
mov
movsl
dec
rolb
cmp
jmp
mov
push
cmp
push
cld
test
xorl
mov
xchg
addb
xor
in
rolb
add
int3
ss
jg
pop
loope
insb
mov
pop
adc
imul
cwtl
xchg
int3
and
call
sti
call
sbb
add
vdivss
addb
push
add
bound
dec
outsb
movsb
or
jno
fs
dec
cmp
decl
fwait
mov
add
jo
mov
xor
mov
jp
push
mov
inc
sti
arpl
jecxz
mov
clc
jg
filds
fdivl
and
mov
fstpl
xor
call
xchg
std
xchg
mov
in
push
adc
pop
cmp
mov
jmp
lds
ljmp
or
sbb
mov
jg
inc
and
dec
fs
push
xor
lret
cltd
decl
xor
push
dec
mov
and
imul
mov
fbld
xchg
cmp
fnsave
stos
dec
and
scas
push
add
out
cmpsb
mov
pop
ja
push
fadds
mov
sbb
pop
bound
xor
dec
cmp
lock
cs
mov
cs
out
inc
in
fwait
mov
mov
add
inc
push
das
adc
sub
jge
xchg
and
incl
sub
or
push
adc
cmp
dec
mov
ret
xlat
out
movsl
jae
add
push
dec
mov
jmp
add
cmp
leave
fucom
xchg
pop
inc
and
dec
xchg
fidivs
inc
and
out
jge
mov
xchg
out
test
adc
sbb
sbb
add
decl
jnp
pop
add
stos
mov
out
add
icebp
or
clc
pop
insl
mov
lock
rolb
jg
cld
fistps
jg
call
pop
popa
sbb
fidivrs
mov
jno
incl
test
adc
cs
jecxz
outsb
std
outsl
das
aad
daa
push
mov
inc
sbb
jo
filds
clc
mov
dec
inc
mov
adc
lret
fisttpl
add
imull
xchg
cmpsl
sub
or
xchg
mov
mov
stos
movl
imul
in
sub
outsl
cli
add
xor
outsb
or
mov
pop
dec
fucomi
call
mov
mov
je
int
mov
std
pop
or
sub
ret
push
dec
repz
jg
inc
out
fisttpl
xchg
daa
lret
pop
stos
jg
fs
in
in
lods
xor
repz
push
push
mov
push
add
mov
dec
fadds
push
stos
lcall
adc
or
test
stos
pop
fistps
ficoml
sahf
pop
cld
test
pop
mulb
fwait
pop
or
imul
push
adc
mov
bound
lods
mov
nop
mov
cmp
or
dec
add
jne
in
rcrb
push
sbb
mov
jmp
push
add
add
and
mov
push
pop
dec
sbb
xor
lret
add
push
push
and
addr16
test
test
add
mov
out
mov
aas
fs
test
daa
xor
dec
cmp
sarb
dec
mov
xor
add
sbb
mov
dec
outsl
lea
pusha
or
jb
add
ljmp
sbb
ror
push
sub
xchg
mov
ret
mov
mov
incl
pop
mov
adc
test
loope
lds
push
aad
mov
in
dec
jne
fsubrl
mov
shl
xorb
jg
push
dec
insl
ret
mov
pop
sbb
jecxz
sub
cmp
lock
inc
movsl
movsb
in
jns
sbb
adc
cltd
or
aaa
pop
js
push
mov
ljmp
jecxz
call
fstpt
mov
fcmovnb
push
rorl
sub
mov
sbb
je
fisubrs
into
or
adc
pop
pop
and
test
and
addb
out
movsl
rorl
mov
loopne
loop
cmp
push
cmpsl
add
and
sbb
mov
fdivrl
add
imul
adc
repz
mov
push
xchg
push
decl
jns
jmp
movsb
les
lcall
gs
insb
out
cmp
in
mov
testb
sub
or
cmp
lcall
lahf
in
lods
dec
pusha
test
and
ja
add
and
sbb
aad
xor
or
jg
and
outsl
leave
testl
jae
mov
aam
push
movsb
imul
jg
loope
movl
mov
aam
jo
pushf
push
in
mov
mov
mov
jne
movsl
push
and
imul
outsl
push
add
pop
mov
or
cltd
pop
dec
cld
movsl
fwait
subl
out
std
push
in
ja
aaa
pop
cmp
adc
dec
test
je
fs
mov
or
outsl
jnp
mov
jae
xchg
mov
and
jbe
inc
mov
pop
lock
push
daa
add
mov
insl
jb
pop
sub
decl
mov
test
hlt
pop
mov
xor
mov
insb
lock
pushl
movsb
push
mov
cwtl
mov
push
ret
push
adc
das
sub
mov
stos
or
pushf
jmp
test
fwait
idiv
cmp
repnz
loop
xchg
mov
pop
loop
add
imul
ljmp
or
pop
clc
pop
sbbb
push
sub
divb
adc
movsb
xor
cltd
pusha
push
ret
ljmp
jmp
stos
fcompl
fidivrs
in
adcl
fildl
add
inc
pop
mov
mov
ret
pop
sbb
cmpsl
pop
pop
sub
push
mov
mov
xor
popa
insl
rcrb
or
in
or
cwtl
mov
inc
inc
sbb
or
and
in
and
addb
dec
xchg
popf
arpl
mov
sub
lcall
add
idivb
mov
mov
add
mov
ret
daa
mov
cmp
out
push
jl
pop
dec
cmp
mov
pop
sbb
jg
gs
test
js
stos
jns
cmpsb
inc
jle
push
mov
loopne
sub
nop
mov
ret
cs
stos
jge
fucomip
mov
es
movsb
mov
into
shl
arpl
nop
add
mov
imull
jbe
adc
sbb
xor
scas
add
ror
or
js
ljmp
inc
dec
inc
das
hlt
movsl
outsb
stos
mov
add
add
ljmp
nop
adcb
inc
add
movsl
dec
cmp
xor
jle
dec
dec
repz
movsb
or
jb
ja
pop
loopne
jno
sbb
das
sbb
mov
cs
popa
cmpsl
pop
jo
inc
xor
xchg
push
push
je
xor
ljmp
fisubl
cmp
incb
adc
leave
add
sub
jg
mov
adc
movsb
test
cltd
outsb
adc
jmp
or
jmp
xchg
in
push
movsb
in
mov
or
mov
mov
add
mov
or
test
mov
out
xchg
mov
and
mov
sbb
enter
repnz
and
mov
xchg
xchg
push
flds
jae
add
xor
cs
xchg
sbb
cltd
bound
xorb
jmp
aaa
xchg
rolb
inc
xchg
mov
das
arpl
pop
mov
enter
cli
jmp
pop
dec
in
pop
ror
pop
sbb
push
or
sbb
pop
mov
adc
pop
in
fmull
ds
sub
pushf
xchg
mov
outsl
rcl
in
inc
mov
loope
push
fs
decl
push
mov
mov
inc
xchg
jg
hlt
inc
jo
and
adc
mov
mov
jecxz
shlb
jbe
in
lods
shll
pusha
mov
iret
xchg
jb
incl
sub
popf
jmp
pop
cwtl
inc
sti
mov
ficoms
adc
xlat
rep
mov
subl
sbb
je
add
fldt
mov
out
pusha
fs
sbb
push
and
cmp
push
stos
test
leave
push
pop
mov
lcall
pop
and
jmp
nop
pusha
sbb
inc
ljmp
xchg
sub
push
cmp
xchg
mov
loope
rcrl
xor
ss
xor
dec
pop
dec
popa
mov
mov
test
loope
inc
sar
rorb
push
test
jns
icebp
movsl
mov
inc
adc
icebp
sub
jge
pop
mov
jno
fdivrs
jno
add
test
fucomp
call
cmp
inc
add
mov
jge
jp
loopne
jmp
lock
xor
daa
or
add
jg
bound
imul
ljmp
lods
int
mov
call
incl
push
stos
movsb
test
adc
sub
inc
inc
xlat
js
test
movsl
in
cmp
push
mov
pusha
jmp
outsl
pop
out
dec
addr16
sub
lret
daa
pop
stos
call
pop
or
xlat
test
mov
xlat
rolb
rcll
inc
loopne
mov
aaa
mov
inc
lods
mov
movsl
incl
test
sub
jne
jl
and
add
mov
push
inc
add
lahf
jl
dec
push
lcall
or
cltd
call
fisttps
jbe
adc
fildll
or
push
and
mov
outsl
inc
cld
js
stc
data16
jno
cmc
je
pop
ss
and
ret
push
xor
push
lret
xchg
loopne
pop
test
js
in
cmp
fs
popa
and
or
sub
sub
or
je
pop
cmp
incl
filds
test
fwait
add
xor
loope
cld
jmp
push
jns
xchg
leave
int
popf
xor
pop
inc
adc
cmc
inc
jg
cmpsl
mov
jge
je
cli
adc
mov
cli
loope
pop
loope
lret
mov
insb
adc
pop
mov
pop
adc
add
adc
sbb
aas
inc
mov
lods
lcall
push
test
push
out
sub
fsubs
push
sbb
inc
jns
aad
jb
or
inc
jg
sub
hlt
neg
inc
adc
add
testb
add
dec
inc
mov
rol
mov
xlat
insb
in
dec
hlt
pop
sbb
or
inc
rolb
clc
add
pop
push
mov
icebp
mov
fimuls
fcomps
clc
inc
pop
xor
cmpsb
stos
push
inc
int3
adc
mov
inc
sub
lock
lock
lds
pop
arpl
mov
lods
and
in
pop
add
push
sub
sbb
xor
jl
cld
loop
andb
or
rol
sub
ffreep
inc
add
int
mov
int
sbb
repz
mov
xor
pusha
inc
add
or
and
cld
popf
jp
sub
xor
inc
ja
inc
xchg
jecxz
or
mov
jno
ret
test
dec
in
and
mov
cli
mov
sti
adc
idiv
pop
inc
cmp
cwtl
js
movlps
sbb
xchg
mov
cli
and
lds
push
cld
inc
adc
popf
sub
outsb
mov
dec
out
lock
mov
or
das
lahf
sub
xor
mov
cli
dec
out
hlt
and
lcall
and
lock
or
jb
pop
sbb
arpl
icebp
jne
mov
scas
loopne
aaa
add
add
cmp
aas
popf
push
jno
pusha
cs
shll
and
call
mov
jle
mov
fdivs
dec
adc
add
mov
or
mov
cmpsl
mov
or
mov
jbe
jl
rcrl
adc
call
sbbl
cmpsl
out
cmp
jmp
pop
jmp
push
shrb
mov
or
loopne
insb
incl
sahf
jg
mov
scas
xchg
and
mov
bound
stos
popa
in
cwtl
or
push
mov
test
shlb
int3
jae
ret
std
call
xchg
sbb
jge
cmc
push
jle
icebp
fldt
into
decl
dec
push
cmp
cld
sub
add
gs
cli
cmp
popf
sbb
cld
pop
mov
mov
sahf
pop
repz
lock
call
adc
jnp
push
sbb
xor
int3
jecxz
mov
adc
mov
dec
lods
stos
cmp
mov
ljmp
push
or
in
sbb
pusha
mov
jg
pop
ljmp
jmp
lods
push
mov
jle
lcall
push
xor
add
adc
fs
jl
or
insb
gs
mov
sti
xor
and
shlb
loop
shll
shl
aad
cmc
jmp
gs
sbb
push
dec
ljmp
ja
movsl
push
popa
jb
arpl
pushf
mov
es
ljmp
je
jb
sub
das
loopne
movsl
push
cmp
pushl
lods
popf
push
lock
mov
scas
add
fldl
mov
xlat
mov
add
fisubrl
cld
push
xchg
cwtl
push
inc
int
test
fbstp
pcmpeqw
jl
cld
ds
clc
mov
les
or
xor
test
cmp
pop
mov
andl
push
fwait
das
mov
lods
lahf
push
das
orl
pop
or
lea
pop
push
lret
mov
xor
lret
lcall
jge
xadd
js
dec
add
std
mov
dec
mov
fstpt
ret
cmp
test
pusha
push
sub
adc
inc
ds
push
ljmp
xchg
sbb
icebp
push
xor
mov
jg
cmp
jne
popa
mov
xor
pop
incl
jg
jle
pop
sahf
mov
dec
push
imul
fsts
dec
jg
adc
sub
push
out
repnz
mov
mov
call
mov
inc
es
cmp
cld
or
xor
adc
inc
mov
lcall
je
movsl
outsb
adc
movsl
pop
add
aaa
sbb
ds
cmp
push
outsb
pop
cs
and
inc
fs
iret
orl
fbld
push
rep
pop
or
or
and
pushl
nop
sbb
dec
cmp
mov
xchg
pop
pop
leave
fsubrs
aad
ljmp
and
mov
out
sbb
outsl
push
sbb
xor
cltd
clc
sbb
jle
inc
lea
fs
iret
mov
rcr
push
push
add
ljmp
aad
jle
sbbl
jl
jl
cmc
xchg
hlt
fnstsw
push
addr16
inc
pop
rcr
data16
into
jg
outsl
inc
fidivs
lcall
in
cmp
inc
xor
jg
call
adc
popf
in
jle
inc
icebp
mov
jo
incb
adc
movsl
inc
call
outsl
jbe
bound
xor
ljmp
mov
repz
push
inc
push
rep
call
ljmp
add
dec
sbb
push
cmpsb
adc
rolb
inc
mov
nop
rcll
xor
jp
test
xor
dec
or
ror
pop
xchg
mov
mov
add
sub
dec
dec
pop
pusha
in
add
xchg
and
and
push
mov
jns
loopne
call
fdivp
xchg
cmc
imul
adc
dec
add
cmp
xor
and
sbb
popl
and
pushl
cmp
ret
and
ret
mov
testl
shlb
dec
ds
pop
xadd
std
cmp
sbb
mov
xchg
and
and
mov
subb
or
negl
xor
outsl
lock
cmp
movsb
adc
cltd
jb
or
mov
loop
jge
ljmp
jle
push
dec
dec
push
enter
cmpsb
dec
div
mov
insb
lahf
in
shlb
decl
out
stos
aas
ds
add
dec
loope
dec
or
inc
sbb
lcall
es
addl
addb
mov
mov
cmp
call
sub
add
jbe
add
test
jmp
ss
cmp
icebp
rclb
pop
or
cld
in
nop
mov
adc
outsl
add
mov
dec
adc
test
xor
xchg
stos
add
adc
fdivl
repnz
test
fwait
mov
cmp
fadds
fwait
adc
add
dec
addb
orb
sub
mov
fdivrs
push
adc
dec
jb
jmp
sub
pop
adc
pop
and
mov
mov
sbb
pop
push
jle
adc
sbb
push
adc
outsl
xor
aad
mov
push
jns
sub
mov
pop
test
adc
ret
mov
dec
pop
enter
sbb
sub
pusha
mov
arpl
jne
fisttps
repnz
add
pop
mov
mov
sti
das
out
je
lcall
sub
sub
adc
mov
pusha
pushf
or
cmp
add
cmpsb
adc
iret
lds
jp
aas
stc
adc
push
clc
add
inc
sub
dec
add
rolb
clc
add
sub
andb
call
add
leave
lock
cmp
mov
mov
add
sub
daa
arpl
and
add
xchg
push
and
inc
add
sbb
dec
les
inc
push
rol
ret
push
or
add
jge
ss
dec
mov
xor
int3
pop
pop
sub
xor
xlat
sbbb
pop
ret
test
cltd
fcomps
fwait
and
out
fs
fmull
imul
xor
rcl
pop
cmp
adc
jae
out
adc
dec
mov
or
and
rolb
jecxz
andb
inc
sbb
and
pop
cwtl
lock
lcall
lcall
push
add
inc
adc
mov
pop
dec
fiadds
in
mov
pop
clc
call
lods
add
pop
orb
dec
fwait
test
adc
adc
mov
fsubl
add
sbb
mov
je,pt
mov
shrl
or
lret
jo
add
lret
push
push
cwtl
jl
ret
add
jb
or
or
ljmp
sub
mov
lea
out
neg
aaa
inc
mov
iret
dec
jle
inc
sbb
loop
or
dec
xchg
xlat
jle
ss
push
jne
addb
xchg
mov
push
and
loop
or
jmp
test
jb
adc
ljmp
imul
mul
ljmp
lcall
or
jbe
stos
cltd
xchg
rcll
add
mov
mov
push
hlt
adc
pop
sub
cmp
sub
jb
mov
fsubs
or
cmp
pop
inc
add
clc
out
sub
hlt
out
mov
fsubr
inc
lcall
adc
arpl
aaa
pop
inc
int
and
inc
sbb
push
xor
jbe
popf
mov
pop
movsb
jnp
mov
cmp
in
pusha
test
outsb
mov
sahf
push
outsl
pop
xchg
xchg
adc
add
addr16
loopne
push
adc
cwtl
arpl
cmp
sub
cs
mov
int
jp
cmp
inc
and
inc
dec
addr16
dec
ss
lcall
xorl
fcmovnb
inc
shlb
loop
insl
stos
cmp
mov
out
xchg
ds
sbb
fnstenv
mov
xor
cmpl
jne
sbb
add
or
pop
clc
mov
xchg
mov
mov
aam
sbb
pop
mov
mov
dec
clc
add
fisubl
xchg
js
filds
aas
ret
mov
test
ja
pop
in
orb
push
fwait
xchg
enter
adc
inc
inc
flds
adc
or
mov
push
pop
mov
lock
pop
loope
sbb
xor
mov
jne
sbbl
cmp
mov
push
jne
notb
popf
pop
pop
ret
cwtl
scas
ljmp
les
int
out
out
xchg
and
or
cli
cmp
cmp
pusha
adc
add
outsb
mov
lret
adc
movsb
call
add
xchg
pop
fs
xor
aam
jmp
add
fldt
pusha
sbb
xchg
jnp
insb
pop
outsl
adc
and
aad
inc
inc
jecxz
fiaddl
sub
xchg
add
ror
push
jno
dec
iret
and
loop
or
xor
rolb
cli
push
pop
pop
arpl
mov
adc
stos
outsl
ret
push
out
or
adc
sbb
lds
lret
adc
imul
rclb
jbe
xchg
push
jbe
cmpsb
outsl
das
test
mov
stos
inc
and
jo
pop
and
push
jmp
xchg
xor
or
mov
mov
les
addb
adc
adc
pop
pusha
cmp
add
loopne
mov
sub
mov
inc
test
ljmp
jne
rcr
inc
and
mov
data16
mov
addr16
jns
es
das
inc
lock
sub
cmp
sbb
subl
pop
nop
pop
xor
cmpsb
popf
push
mov
push
sbb
icebp
ficompl
cld
fsubs
mov
scas
lock
stc
jl
or
das
pop
xor
cmpsb
pop
pop
inc
push
cmp
xchg
cmpsl
je
adc
aad
imul
or
insb
lock
xchg
push
dec
insb
pop
xor
push
inc
loopne
andnps
bound
cmc
decl
inc
adc
aam
add
xor
int3
inc
outsl
dec
add
mov
inc
mov
or
ret
into
adc
mul
xor
aad
fcom
hlt
xor
add
std
or
incb
addr16
cmp
out
pop
push
aam
cmp
and
out
es
in
out
in
in
xor
jmp
adc
dec
aaa
cld
roll
cmp
add
jnp
fsubl
mov
enter
dec
adc
dec
push
jb
imul
mov
popa
int3
inc
push
jb
mov
shrb
add
ficoml
dec
push
clc
adc
repz
xchg
pop
and
adc
inc
fmulp
fnstcw
dec
jmp
mov
int
dec
xor
aad
sub
and
adc
mov
les
pop
out
mov
lcall
aaa
icebp
scas
jne
jbe
add
adc
outsl
push
sub
call
lock
cli
mov
adc
adc
jle
jb
mov
stos
adc
adc
sbb
xor
test
rcrl
jno
mov
subb
push
jge
mov
xchg
xchg
pushf
repnz
insb
fs
mov
mov
inc
inc
call
add
ret
sbb
and
arpl
sub
enter
cmp
aaa
push
xchg
into
test
mov
xor
das
aam
test
adc
cs
ret
daa
mov
fimuls
pop
inc
ret
lret
xchg
mov
adc
sub
test
xor
xchg
jno
jbe
mov
call
sbb
or
sbb
mov
mov
lea
xor
sbb
cmp
mov
inc
mov
push
push
mov
call
and
jle
rorl
adc
addr16
loope
jp
pop
and
stos
adc
pop
push
cmp
or
sub
es
lcall
iret
push
out
or
dec
xor
shrl
data16
or
hlt
and
movsb
into
push
iret
and
fld
lcall
mov
and
xchg
pop
lret
and
call
ret
popf
clc
and
sbb
shll
incb
pop
bound
push
dec
daa
orl
out
xchg
jnp
and
out
jecxz
icebp
nop
movsl
lcall
fwait
xchg
push
stos
cltd
mov
sbb
loopne
mov
cltd
aas
mov
push
les
and
sbb
lock
andl
or
filds
cmpsb
scas
mov
bound
mov
roll
xchg
outsl
inc
hlt
mov
jbe
shrb
mov
adc
push
inc
mov
movsb
stc
divl
cli
andl
add
lcall
loop
stos
subl
add
xchg
daa
sbb
push
jmp
loope
shrb
loopne
and
pop
inc
xorb
add
rcll
xchg
test
xor
inc
sahf
rolb
pop
fldenv
negb
mov
mov
mov
popa
mov
out
dec
mov
popa
stos
jmp
jge
sub
add
cmp
cli
sbb
cmpsb
test
pusha
fs
loope
mov
mov
sarb
rcrl
es
sbb
adc
adc
mov
adc
pop
mov
sbb
push
and
sub
scas
push
add
add
xor
dec
cwtl
mov
cmp
adc
fisttpl
push
mov
dec
sub
test
enter
mov
cwtl
dec
ljmp
mov
jb
mov
add
jp
jp
outsl
inc
push
sub
or
popa
adc
mov
jnp
faddl
pop
fisubl
push
int
movsb
pop
adc
fs
push
cmp
jae
xchg
pop
sarl
pop
sti
sub
or
fwait
xchg
adc
popf
adc
jg
push
pop
inc
notl
sub
cwtl
outsl
mov
or
pop
xor
adc
iret
mov
mov
mov
xor
arpl
mov
mov
lret
cmp
mov
lret
adc
xlat
xor
xor
push
inc
xor
push
daa
xchg
lods
and
sub
aaa
icebp
xor
sbb
or
roll
and
jns
mov
dec
or
adc
lock
je
and
and
sub
aaa
cwtl
aaa
add
adc
lds
ret
jle
adc
loope
mov
sbb
aad
js
fwait
jno
adc
bound
jg
cmp
cltd
sahf
ficomps
fs
adcl
xor
andb
nop
in
and
or
test
pop
sub
out
jl
and
add
sbb
jnp,pt
lgs
imul
inc
jmp
push
ljmp
ret
or
out
in
subl
popa
test
jno
dec
jbe
test
dec
sbb
fidivrl
lcall
mov
fwait
aam
fs
adcl
cmp
loope
xchg
cmpb
pusha
push
pop
in
xor
push
cli
dec
mov
dec
and
push
mov
pusha
inc
mov
ret
mov
gs
mov
ljmp
push
add
ret
aad
sub
add
add
cmc
sub
or
loopne
hlt
int3
andb
sub
ja
jmp
int
inc
enter
adc
cmp
pop
pop
push
xor
add
xchg
lret
jle
push
cmp
add
out
mull
xchg
lods
cwtl
lret
lock
sbb
mov
cli
sbb
cmp
xor
add
mov
push
mov
pop
push
adc
adc
and
or
aam
or
dec
call
cmpsl
push
lea
push
push
xor
int
clc
inc
cld
push
add
add
int3
loopne
push
cmpsl
xor
test
je
dec
and
sbb
mov
and
xchg
or
enter
lds
into
xchg
popl
fwait
jge
xchg
incb
pop
insb
nop
jnp
hlt
daa
mov
test
sbb
ja
push
xor
out
xchg
jae
ret
mov
inc
in
pop
mov
and
das
inc
add
leave
loop
cmp
inc
adc
jl
adc
adc
pop
faddl
addl
sbb
mov
es
pop
fdivs
mov
imul
add
vunpcklps
ss
inc
and
arpl
out
adc
roll
andl
sub
push
daa
add
cmp
xchg
pop
sarl
js
add
inc
js
cwtl
adc
xchg
xor
mov
fwait
cmpb
sub
pop
xchg
xor
in
dec
push
sbb
push
push
sti
jge,pt
cmp
aad
and
jbe
and
js
sub
out
frstor
call
or
insb
ret
aas
scas
cmp
or
push
testl
mov
add
mov
sub
or
push
xchg
sub
mov
gs
sub
cs
ret
shll
and
jl
fisttpll
inc
sti
cs
aas
jecxz
sub
push
popf
fisttpll
orl
jecxz
fldl
xorb
bound
xchg
add
push
daa
xor
shlb
je
sbb
pushf
rol
push
test
jne
mov
cmpsb
and
ds
add
cmp
cmp
inc
mov
adc
cs
ja
pop
hlt
bound
leave
push
add
xchg
and
inc
inc
scas
je
sbb
adc
add
dec
pop
or
in
jp,pn
out
add
or
shrl
outsl
push
test
push
mov
push
or
add
add
add
shrl
ja
pusha
dec
inc
adc
and
dec
inc
dec
aas
fcoml
data16
cmp
test
xchg
jge
push
or
in
out
cld
xor
pop
iret
divl
sbb
nop
pop
arpl
ljmp
pop
xchg
jmp
cmp
inc
loop
fidivl
ljmp
or
cmp
outsb
cs
inc
inc
cli
inc
jecxz
lcall
xchg
outsl
or
jg
jp
daa
adc
sub
sbb
xchg
xchg
fsubrs
add
stos
pop
jne
fsubr
push
inc
into
fiadds
xchg
pop
mov
mov
inc
cli
arpl
enter
mov
lds
or
sub
cmp
jo
xchg
and
les
cld
jp
movb
sub
adc
push
addr16
imul
test
lea
adc
lock
inc
jmp
movsl
xchg
pop
inc
inc
pop
xchg
mov
pop
nop
jle
cmc
xor
add
aam
subb
aas
xor
adc
daa
sar
or
mov
cmp
mov
pop
add
cmp
pop
inc
fidivrl
xor
ja
add
adc
in
aaa
adc
sub
adc
lock
inc
sbb
fmuls
hlt
cwtl
imul
mov
push
jmp
testl
ret
mov
loopne
movb
push
mov
cmpsl
ret
mov
inc
ljmp
aam
cli
ljmp
addr16
loope
outsl
mov
pop
xor
pop
icebp
mov
push
test
jbe
xchg
sbb
mov
or
push
ret
mov
inc
popa
int
inc
dec
dec
sahf
orb
push
lcall
jp
cmp
je
mov
cmpsb
sbb
fsubrl
jp
inc
jl
jl
test
jb
mov
sarb
push
stos
out
xchg
test
dec
xor
int
xchg
xchg
cmc
xlat
push
pop
adc
ret
decb
aad
cmp
repz
adc
repz
bound
mov
icebp
cmp
fsts
jb
pop
push
flds
mov
call
fidivs
pop
sub
or
shll
inc
mov
insl
or
lods
mov
fwait
cmp
sar
mov
cmp
je
cmp
fwait
mov
sub
dec
sub
xor
hlt
xor
cld
add
and
or
cli
stc
dec
push
dec
add
inc
popf
in
cmp
lock
adc
lock
mov
sbb
scas
xchg
clc
enter
jno
test
cltd
push
out
inc
xchg
jp
cmpsl
xchg
or
jl
int
cmp
loop
in
and
sbb
inc
lret
loope
rolb
mov
test
pushf
imul
or
icebp
sbb
ds
add
in
mov
lea
sub
and
jp
subb
popf
call
pop
push
pop
imul
sbb
fldl
imul
pop
js
mov
xor
popa
icebp
bound
dec
add
rol
adc
ljmp
movsl
js
popa
adc
add
lcall
ret
and
or
jg
loop
testl
cmp
and
fs
sbb
jno
xchg
cmpsb
or
gs
mov
adc
pop
jg
dec
sbb
mov
daa
inc
cmp
mov
add
and
andl
bound
jp
mov
ljmp
pusha
ficoml
adc
in
xchg
xlat
mov
mov
sub
sbb
jmp
icebp
adc
ret
mov
fs
cmpsb
push
loopne
int
cmp
sbb
cmp
jae
xor
inc
in
rorl
push
and
add
cmpb
xchg
lea
dec
push
dec
enter
cmpl
mov
push
lods
pop
adc
into
add
adc
ret
pop
pop
loope
mov
add
and
inc
adc
cmpsb
jne
jl
xor
loopne
mov
push
mov
arpl
pop
int
cmp
icebp
xor
and
pop
mov
add
je
mov
lods
add
xor
inc
jl
or
mov
dec
or
insl
cmp
sahf
ljmp
or
aam
cwtl
dec
mov
adc
xor
add
jo
out
movb
inc
mov
pusha
fwait
mov
or
stos
in
adc
pop
push
sub
dec
ret
or
cmp
jmp
gs
jae
adc
add
test
jb
sub
out
fwait
lcall
mov
leave
sub
mov
clc
inc
and
repnz
aaa
adc
sub
dec
orb
add
ret
push
xchg
sub
cmp
lods
mull
jg
test
xchg
outsb
call
aam
in
repnz
xchg
gs
add
popa
je
repnz
test
cmp
adc
cmp
mov
imull
sbb
mov
aam
mov
es
adc
xchg
push
mov
jno
or
add
adc
add
xchg
sbb
popa
and
vmread
and
push
lock
sahf
fdivp
mov
aas
add
xchg
dec
daa
mov
sti
cmp
clc
ret
add
mov
cmp
out
xor
bound
sti
sbb
push
rcl
test
add
pop
daa
stos
clc
stos
leave
push
and
and
sub
add
dec
sahf
pop
dec
cmp
and
adc
imul
fadds
or
jl
inc
dec
dec
les
mov
test
lock
add
mov
xchg
lahf
test
test
add
and
popa
or
test
ret
or
inc
or
mov
es
out
add
insb
andl
and
cs
jbe
push
ret
cs
or
mov
add
fcoml
xchg
mov
call
in
push
xchg
outsl
push
fmuls
and
and
lret
mov
add
insl
inc
loopne
repnz
leave
mov
cld
or
cltd
enter
mov
jg
sar
pop
add
push
cld
shlb
repnz
pop
cld
shll
or
or
mov
icebp
ja
shll
pop
xor
pop
or
lock
cmpsl
xor
pop
push
inc
and
dec
lods
pop
aas
dec
popl
add
scas
jno
pop
stos
out
insl
mov
and
lahf
cmp
rorb
and
xorb
or
push
cmpsl
cmp
mov
xchg
mov
aaa
popa
adc
push
insb
adc
adc
out
jbe
xor
sahf
pop
add
adc
pop
xor
cmp
mov
inc
push
movsb
add
mov
sbb
cmp
popa
adc
sbbl
lds
inc
adc
je
jbe
gs
push
and
lret
push
cmp
pop
enter
cmpsb
xor
pop
outsl
mov
adc
jecxz
shll
and
inc
jle
cli
pop
fadds
dec
and
mov
jl
pop
jp
fs
fildll
out
inc
adcb
rcrl
adc
adc
cmpb
add
jg
rcrl
stc
mov
sbb
mov
xor
nop
fwait
stos
xchg
xchg
add
repnz
ret
rorl
or
mov
pop
hlt
mulb
push
mov
sbb
inc
mov
sbb
addr16
xor
jo
adc
mov
sbb
decl
cs
or
adc
pushf
pop
add
das
sbb
inc
inc
xor
sbb
xchg
data16
cmp
adc
dec
enter
jb
fs
leave
jae
shl
loopne
mov
inc
mov
ret
fcmovb
dec
dec
jnp
jae
subb
pop
arpl
mov
or
add
loop
std
or
sbb
sbb
test
push
push
lock
adc
push
pop
addr16
cmp
jmp
sbb
ljmp
adc
push
shl
cmp
je
adc
sub
mov
mov
mov
ret
pop
addr16
sbb
pop
inc
rcrb
and
dec
das
lock
incl
lahf
fdivrl
ret
fsubs
imul
clc
mov
fdivr
mov
popf
jl
push
call
jecxz
pop
iret
movl
mov
sar
pushl
icebp
sbb
pushf
jl
mov
jl
jle
pop
loopne
mov
es
icebp
sub
cld
ds
jecxz
jecxz
jecxz
out
movsl
test
clc
jl
pop
mov
or
jg
movsl
push
and
xlat
push
movl
clc
icebp
pop
cli
inc
ds
jl
lahf
xor
leave
out
stos
inc
repz
or
sbb
lcall
jl
jp
jae
clc
jo
icebp
cmc
pop
aad
into
clc
sub
mov
scas
cmp
adc
cmpb
jecxz
pop
push
ljmp
fistps
pop
mov
inc
negb
mov
decl
ret
and
jl
adc
cwtl
mov
mov
and
ds
add
popl
mov
test
push
pop
les
push
jl
ds
jecxz
cmp
push
mov
in
decl
decl
sar
mov
mov
fdiv
jne
fstps
in
incl
sbb
sbb
clc
es
jecxz
lea
shrb
decb
loopne
inc
sub
cmp
xchg
mov
inc
in
call
jo
cmp
add
pop
push
mov
sub
bnd
decl
fbld
push
pop
pusha
pop
icebp
jge
into
movl
clc
outsl
dec
jg
or
jno
jl
push
lret
pop
cs
sbb
mov
and
cli
popl
testb
xchg
mov
and
jg
call
idiv
mov
mov
lods
pop
roll
mov
xlat
xchg
inc
sub
mov
inc
xchg
and
adc
icebp
call
push
adc
hlt
fs
sub
test
jo
and
sbb
ljmp
aad
stos
push
iret
cs
jno
mov
decl
push
inc
les
cmp
nop
inc
and
ljmp
inc
sub
push
mov
adc
cmp
xchg
les
repz
add
jge
leave
mov
test
loop
nop
or
fs
fwait
or
add
xchg
cmp
ja
add
push
or
add
movsb
stos
adc
dec
loop
push
sbb
push
add
dec
inc
clc
movsb
xor
inc
dec
lret
push
add
aad
xchg
adc
dec
mov
das
sar
ss
push
das
mov
aam
daa
and
inc
inc
push
adc
mov
ss
mov
jbe
or
stos
mov
cmp
pushl
or
std
inc
in
cmp
inc
stos
out
fadds
cwtl
outsl
in
push
cmp
jo
xchg
in
jg
hlt
or
pop
cld
in
sbb
xchg
loopne
sbb
mov
cld
inc
shrb
lock
push
adc
add
sub
dec
lods
fdivrp
pop
mov
push
bound
test
js
loopne
popf
jle
jbe
add
mov
cld
pop
inc
mov
pushl
jmp
mov
movl
mov
mov
ds
outsl
lods
push
pop
loop
popf
jge
push
outsb
in
adc
incl
arpl
mov
push
add
rcrl
fistps
adc
sbb
or
andl
or
mov
ljmp
sbb
adc
jg
inc
or
lods
je
cmp
jg
cmp
sbb
iret
jnp
mov
lea
imul
jbe
repnz
js
or
das
sbb
jle
popa
sub
mov
subb
mov
sub
int3
mov
jg
mov
pop
push
arpl
inc
ds
repz
push
or
je
cltd
lea
jnp
pop
push
bound
pushf
mov
test
and
mov
adc
bound
clc
mov
dec
lret
xor
aam
adc
mov
xor
add
cmp
add
in
in
insl
dec
inc
and
sub
lret
push
enter
into
aas
cmp
je
mov
xorb
and
dec
movsl
popa
lock
mov
std
out
sub
je
arpl
mov
fadds
test
call
popa
arpl
cwtl
sbb
and
inc
cmp
js
test
add
inc
movsl
push
js
std
pop
stc
jle
sub
cwtl
cmp
jg
cmp
rolb
mulb
jb
push
sar
jmp
loop
lods
xor
pop
jmp
out
test
sbb
adc
ret
ret
out
dec
sbb
cmc
ret
bound
sbb
pop
test
mov
inc
aad
shlb
pop
jbe
mov
sbb
adc
hlt
cld
mov
das
push
cwtl
les
pusha
xchg
push
jae
xchg
aas
mov
inc
aaa
adc
mov
add
jge
push
add
dec
xchg
adc
pop
divl
mov
add
or
inc
mov
add
fmull
push
mov
rep
cmp
inc
jge
fwait
mov
sub
add
add
mov
push
adc
adc
cld
mov
sbb
jns
incl
add
cmp
sbb
sub
lret
lret
pop
das
cld
lea
mov
repz
and
fildll
add
ss
popa
jg
ljmp
inc
sbb
clc
js
jb
pop
inc
push
sub
repz
fistps
repz
xchg
jle
xor
or
clc
pop
sahf
rcll
and
jl
mov
rcrb
mov
inc
std
mov
insl
adc
or
aas
iret
aaa
add
in
scas
outsb
jo
sbb
nopl
icebp
lcall
std
inc
cmp
outsl
test
outsb
sub
mov
cmc
idivl
outsl
in
or
and
fldcw
lcall
xor
leave
dec
mov
sbb
push
mov
xor
das
lds
adc
cmp
push
orb
cmpb
xor
stos
sub
xor
jg
addr16
xchg
call
jb
adcb
mov
pop
arpl
xor
cmp
cld
or
incb
pop
test
inc
in
enter
cmp
ljmp
cli
pop
adc
rcl
dec
pop
pop
jle
mov
sbb
lds
ss
sub
fisubrs
mov
dec
jp
test
fldcw
xor
inc
cmpb
aam
in
add
lock
clc
int
cmp
call
decb
addb
mov
inc
push
test
sbb
bound
mov
xchg
add
push
sar
jmp
js
repz
sti
lret
aam
dec
repz
cld
xlat
xlat
pusha
lretw
ret
lcall
mov
fldcw
loopne
arpl
jge
jmp
nop
adc
push
pusha
sub
fucomp
mov
or
lods
out
jecxz
sti
adc
call
mov
in
daa
cmp
push
xor
pop
sbb
shlb
lret
movsl
stos
push
dec
and
push
xchg
mov
test
pop
adc
icebp
ret
push
inc
sub
fs
xchg
xchg
mov
jp
mov
xor
xor
and
push
cmp
mov
adc
jle
jmp
ljmp
dec
add
add
aaa
lock
jae
push
and
and
sarb
shl
mov
mov
test
inc
ret
or
movsb
inc
or
add
pop
repnz
sbb
ljmp
nop
add
mov
add
fmull
add
aaa
adc
adc
inc
rol
mov
mov
andl
insl
addb
imul
rorb
mov
aad
xor
sbb
stos
xor
sub
pop
adc
aas
add
add
ret
cmp
mov
adc
and
inc
add
add
andb
inc
sub
mov
jl
adc
shlb
add
cmp
enter
jo
cltd
jo
shll
push
sbb
cmc
stos
push
shlb
data16
negb
inc
adc
dec
icebp
inc
xchg
mov
mov
inc
fs
adc
mov
fmull
test
stos
pop
filds
inc
adc
mov
cmp
test
sbb
scas
add
inc
aas
outsl
jmp
push
push
mov
dec
xor
cmp
add
push
and
sub
or
and
nop
mov
sub
bound
xchg
nop
mov
orb
sbb
dec
loopne
hlt
add
stc
adc
add
es
jge
or
imull
lds
xlat
sbb
xchg
add
push
adcb
add
adcb
push
ja
or
ja
or
mov
test
push
shlb
push
mov
addr16
int3
pop
add
mov
inc
adc
push
inc
test
in
adc
add
sbbl
icebp
or
js
out
stc
icebp
ds
mov
adc
call
addr16
dec
shl
and
sub
mov
insl
lds
pop
adc
adc
sbb
or
push
push
es
mul
pop
mov
ret
and
jno
pop
mov
mov
and
add
rcr
dec
and
cmpsl
jns
adc
push
mov
xor
pusha
and
add
xor
sbbb
shl
adc
sub
jmp
dec
xor
xor
test
inc
pop
adc
push
cmp
xor
test
ljmp
jbe
lret
or
mov
push
or
inc
cmp
add
xor
pop
mov
imul
add
mov
inc
lock
lea
mov
pop
inc
dec
arpl
aas
in
adcb
outsl
jnp
into
lds
flds
addb
cwtl
pop
scas
cmp
sahf
mov
mov
pop
push
pop
jo
jg
dec
mov
or
aaa
imulb
hlt
jns
daa
mov
cmp
sub
roll
push
dec
gs
cmc
pushl
nop
sbb
push
jl
jle
jmp
mov
inc
das
inc
sub
add
cli
js
add
je
subl
call
push
lahf
iret
cwtl
push
addb
jg
pusha
mov
mov
sub
daa
sbb
xchg
jno
cmpl
ret
jmp
add
lret
mov
cmp
pop
cld
fildll
cli
and
or
std
daa
mov
cmp
mov
incl
test
jg
fdivrp
mov
jg
mov
sub
es
push
mov
xchg
test
mov
dec
pop
movsb
mov
outsl
add
mov
stos
sahf
aad
inc
imul
roll
daa
ds
pushl
jp
test
ret
data16
mov
rol
inc
xchg
adc
test
adc
cwtl
jge
lock
and
dec
ds
and
mov
mov
or
add
lahf
sub
sub
xchg
test
jbe
or
leave
cmp
incl
dec
sbb
or
jo
sub
mov
cwtl
rorl
adc
xchg
pushl
cli
inc
jmp
jl
or
sbb
jae
cltd
movsb
inc
push
push
dec
and
sbb
test
xor
dec
dec
push
inc
mov
add
xchg
mov
inc
and
push
cltd
out
push
mov
sub
xor
jg
mov
sub
add
mov
xor
jo
push
call
daa
pop
or
outsb
outsl
sbb
jg
ja
sbbb
add
xchg
bound
add
mov
pop
lods
movsl
gs
fildl
and
shl
push
lcall
xor
push
cltd
mov
xchg
mov
push
ds
xchg
dec
loope
jg
repnz
cli
fstps
jns
mov
dec
std
jg
sbb
sbb
dec
mov
mov
adc
cli
ret
cwtl
pop
mov
lock
push
lcall
jo
decl
int3
pop
and
repnz
divb
vpsraw
sub
dec
and
xchg
mov
out
or
add
fisubs
push
sub
pushf
pushf
adc
out
inc
sbb
or
ja
jg
icebp
add
cmp
or
jg
pop
iret
mov
icebp
pop
mov
inc
cwtl
inc
test
or
lret
mov
nop
jns
and
add
mov
add
addr16
shrl
or
add
mov
psraw
or
push
ss
bswap
stc
sbb
fists
ret
insb
add
add
add
cmp
lock
mov
push
bound
adc
adc
inc
xchg
sar
mov
out
adc
sbb
xchg
cmp
test
rclb
dec
jecxz
jb
mov
shr
lea
add
cld
jle
test
push
add
sub
loop
fists
imul
call
icebp
aam
xor
enter
push
and
stos
mov
les
cmpsb
pusha
ljmp
push
inc
mov
arpl
add
push
cli
call
fs
push
es
inc
xchg
outsb
mov
js
jle
andb
mov
shrd
into
inc
mov
cltd
mov
lock
mov
dec
cli
mov
sub
and
inc
lcall
std
sbb
ret
xchg
or
push
xor
lods
xchg
pop
cs
ljmp
sbb
das
push
mov
push
cli
movsl
jle
mov
mov
sbb
sbb
pop
loopne
add
mov
or
mov
test
inc
pusha
add
mov
push
out
push
push
pushf
sbb
sub
dec
lcall
orb
repnz
movsb
pop
sbb
dec
in
add
mov
xlat
clc
xchg
xchg
shl
enter
inc
dec
call
cmp
add
fisttpl
adc
mov
mov
leave
pop
addb
subb
adc
or
je
js
pop
test
imul
loope
pop
xchg
call
inc
hlt
push
inc
movsl
adc
adc
ja
enter
xor
in
inc
es
lock
inc
loop
or
and
aas
xor
push
movl
jle
mov
add
aaa
mov
scas
adc
mov
mov
loopne
pop
and
push
in
cmp
adc
xchg
adc
push
sub
in
mov
shll
loop
pop
adc
jno
or
xchg
orb
dec
and
out
jge
push
mov
adc
into
adcb
adc
stos
rcl
lock
xor
pop
addr16
mov
mov
orb
or
jnp
push
pop
mov
rcl
ljmp
xor
js
mov
cltd
pop
pop
inc
cld
fisubs
in
loopne
jp
fdivrs
jmp
mov
inc
mov
cltd
xor
sub
cmp
icebp
or
fisttpl
punpckhbw
jae
rol
sub
stos
dec
in
jl
stos
mov
ficomps
imul
inc
xchg
mov
sbb
adc
aaa
push
dec
or
insb
call
xchg
or
aad
ljmp
push
insl
repz
insl
ljmp
xor
in
andl
ss
dec
pop
push
or
sub
ss
clc
sub
icebp
fyl2xp1
les
jno
mov
in
fcomi
mov
mov
pop
jns
enter
js
leave
outsl
sub
xchg
rcrb
insl
cli
inc
jl
add
jecxz
ret
lret
push
test
and
mov
loop
jnp
cmpsb
loopne
and
xchg
inc
cmp
les
cmp
cwtl
rcrl
mov
arpl
or
lods
call
dec
sub
jae
std
cwtl
aam
cmp
data16
repnz
sbbb
jp
cltd
in
sub
test
xor
test
inc
das
add
insb
add
mov
jp
push
cmp
ret
aam
bound
jbe
sti
xor
push
or
xchg
repnz
fcmovbe
shr
dec
add
cld
add
push
test
outsb
inc
and
iret
jne
lock
ljmp
sub
lret
loopne
repnz
mov
xlat
xchg
inc
sbb
rcl
adc
jle
jge
ljmp
sahf
rorl
xchg
push
add
es
or
mov
fdivr
and
mov
shlb
fstps
lock
add
cli
rorl
pop
sbb
cwtl
mov
incl
lcall
mov
loopne
cmp
movsl
decb
and
and
or
in
pop
sub
and
pop
add
push
adc
sbb
add
push
jle
test
add
ret
out
jg
incl
nop
pop
mov
nop
ret
and
adc
fdivl
bound
cwtl
jg
mov
mov
cmpsl
add
les
dec
shlb
test
push
fs
inc
cmp
mov
sub
adc
push
sar
loop
push
adc
pop
add
mov
adc
xor
dec
add
push
adc
jns
sub
int
jmp
sub
js
and
mov
xchg
shll
outsb
adc
and
data16
rclb
fists
add
and
mov
jns
cmp
mov
xchg
adc
and
loop
mov
and
or
inc
dec
fadds
std
inc
ror
add
fstps
push
or
xchg
test
rcl
or
mov
inc
push
das
lea
sub
or
ljmp
test
dec
push
and
xor
and
stos
adc
aam
incl
loopne
adc
mov
hlt
and
inc
mov
adc
xor
pop
test
test
or
mov
adc
mov
mov
xor
sub
and
adc
lods
das
sub
loop
pop
mov
add
cmp
jne
dec
cs
mov
mov
popf
inc
lea
or
add
xchg
adc
nop
dec
or
loopne
dec
icebp
and
sub
or
nop
jno
sbb
or
in
sub
mov
jb
and
clc
leave
inc
arpl
inc
loop
rorl
cmp
or
enter
mov
sbb
outsl
and
fs
and
mov
or
nop
shlb
add
jmp
stos
inc
insl
inc
lods
enter
and
mov
cmovs
push
adc
iret
push
test
test
in
test
aaa
and
add
std
jmp
test
adc
imul
jne
inc
mov
xchg
mov
or
pusha
jp
xchg
pop
cltd
js
add
or
xor
lret
loopne
dec
pop
dec
inc
mov
fld
add
xchg
and
sub
vmread
pop
adcb
or
add
ret
mov
sbb
dec
push
sbbb
mov
cli
pop
outsb
jne
ret
or
inc
xchg
lea
mov
insl
add
js
mov
xchg
or
andb
loopne
rolb
cmpsl
movsb
jnp
sbb
mov
hlt
add
pop
add
pusha
push
icebp
test
insb
sahf
pop
in
rolb
sbb
mov
dec
enter
outsb
add
push
adc
jle
insb
aad
adc
cmp
orb
call
pop
fadds
ja
sbb
pop
sbb
je
pusha
lea
pop
inc
jle
rolb
sub
dec
inc
inc
add
cmp
fmuls
jg
lods
or
movzbl
loope
addb
pusha
pop
sarb
sub
je
cld
rcr
clc
sbb
sar
jbe
push
push
les
andb
rcrb
pop
sub
clc
neg
dec
inc
jno
scas
dec
push
cmp
sbb
pop
xchg
jo
call
dec
adc
fistps
mov
and
movsb
in
lods
icebp
pop
adc
stos
cmpsb
add
test
add
jmp
adc
inc
fbstp
icebp
leave
lds
pop
mov
jg
xor
stos
dec
push
and
push
jp
into
sahf
pop
shll
jg
adc
pop
popl
in
fidivrs
cmp
call
dec
mov
add
pop
cld
xor
ss
das
pop
scas
sbb
imul
into
mov
or
decl
add
cs
jno
jmp
test
mov
jmp
hlt
sub
shrb
sbb
js
leave
mov
lcall
xchg
cmp
mov
ret
xor
cmp
jmp
jno
and
cld
push
loope
pushf
pop
out
stc
test
and
push
stos
mov
icebp
shlb
mov
pop
bound
jg
jnp
mov
xchg
xlat
stos
inc
mov
pop
pop
cli
outsl
imul
repnz
insl
nop
out
add
js
pushl
adc
aas
rcrb
sahf
pushf
add
inc
fists
sub
aas
inc
pusha
ret
fmull
adc
pop
sbb
jge
jb
pushl
rcll
dec
cmp
mov
outsl
pop
insb
fxch
cmp
push
ficoml
adc
mov
repz
rclb
mov
ret
lock
sub
das
shrl
int
scas
mov
iret
in
cld
jg
jmp
ficomps
les
enter
pushf
push
fdivr
incl
ret
push
andb
movsl
aas
push
rcrb
jle
stc
decl
in
jne
jl
mov
gs
inc
loope
in
inc
into
iret
pop
int3
aas
stos
cld
mov
lods
cld
outsl
clc
pushl
pushl
mov
iret
lods
jecxz
out
out
cmp
inc
jge
jle
and
lcall
clc
aas
sarb
lahf
psubw
aas
cmp
add
enter
mov
add
lahf
xor
lahf
jle
cld
mov
sbb
xchg
jle
cld
stos
ret
lods
adc
jb
jbe
inc
mov
jle
jle
jle
jbe
hlt
jmp
jl
push
mov
mov
add
addl
jp
cli
out
pop
stos
mov
fs
add
dec
test
call
adc
mov
aam
imul
mov
sbb
aas
pop
xchg
jb
test
inc
pop
clc
faddl
cltd
cs
iret
pop
aad
dec
push
jnp
pop
or
and
mov
xor
or
ret
les
mov
push
lret
lret
inc
in
jo
mov
push
das
or
or
mov
lds
push
fiaddl
mov
fldcw
std
sbb
aam
imul
jno
mov
jae
xlat
push
push
iret
pop
daa
testl
adc
movsb
xor
fisubrs
sbb
jo
jge
jmp
stos
das
cld
mov
mov
pop
sub
lds
out
add
aaa
rclb
aam
into
dec
insb
mov
cld
add
hlt
movsl
and
out
loop
pop
rolb
mov
cwtl
add
add
mov
add
fiaddl
adc
into
insl
out
fdivrs
repnz
adc
je
rolb
ljmp
adc
stos
frstor
sub
push
cmp
pop
mov
pusha
dec
adc
mov
icebp
call
call
or
inc
add
int3
cmpsb
inc
or
sub
cwtl
cmpsb
add
out
add
cwtl
sbb
loopne
testl
inc
xor
outsl
mov
adc
mov
cwtl
lock
xor
push
sbb
leave
or
inc
int3
pushf
popf
inc
fsub
add
cmpsb
adc
out
sub
out
add
fdivrs
and
aam
rcll
add
lret
xchg
ljmp
cmp
dec
pop
push
adc
sbb
xorb
int3
fsts
mov
aam
lock
adc
pop
cli
push
inc
dec
js
cmpl
jmp
jo
sub
sbb
inc
jl
dec
add
jp
xchg
add
orl
jbe
cmc
loop
fsts
stos
in
mov
add
stos
insb
push
std
fs
push
push
jno
jge
outsl
int3
xor
cmp
adc
iret
ret
sbb
adc
outsl
stos
sti
xchg
insl
repnz
lret
es
nop
lahf
push
add
add
inc
or
fadds
adc
push
aad
jp
adc
inc
add
inc
into
or
sub
and
inc
push
cwtl
jmp
inc
pop
loopne
fwait
fs
hlt
andb
xor
shlb
sbb
cmpsl
mov
mov
xor
dec
sub
rcrb
popa
adc
in
scas
sbb
stc
inc
mov
adc
jmp
push
js
cmp
addb
les
nop
mov
ret
mov
test
out
jns
movsb
and
mov
mov
cmpsb
or
movl
js
sbb
pop
cs
fisttpl
test
sbb
cld
ljmp
lret
mov
adc
add
push
sbb
in
cmp
inc
and
das
ret
mov
add
shlb
sub
add
mov
insb
xor
fwait
cmp
mov
sahf
mov
scas
mov
xchg
cmc
lahf
xchg
das
je
add
mov
stc
loope
sub
out
push
jg
or
repnz
imul
inc
sbb
pop
clc
sar
and
pusha
adc
sub
mov
mov
scas
scas
sbb
imul
test
movsb
call
lock
push
dec
sahf
cmp
dec
mov
adc
push
push
or
mov
cs
xchg
or
jns
fildll
xchg
lahf
add
mov
xchg
pushf
adc
idiv
movsb
add
mov
sub
xchg
jbe
jg
xchg
arpl
nop
movsl
gs
adc
outsl
jns
adcl
push
cmpb
filds
es
adc
lcall
mov
dec
aaa
aam
cmp
push
xchg
ret
hlt
and
sub
test
inc
arpl
sub
loop
mov
sub
sbb
mov
pop
stc
dec
mov
mov
jo
push
and
and
enter
or
jo
bound
ljmp
imul
mov
pop
mov
pop
pusha
adc
xor
cli
lcall
incl
xor
sbb
iret
xor
mov
pop
inc
mov
lods
push
lcall
jno
psrld
push
dec
mov
sub
incl
in
or
adc
dec
rep
mov
andl
test
adc
push
mov
inc
sbb
add
out
call
cmp
push
dec
les
sbb
xor
loop
in
ret
cmp
dec
subl
xchg
les
push
das
cmc
fbld
adcb
cli
out
sarb
or
pop
fimuls
aam
lock
les
lea
mov
test
jg
mov
daa
scas
mov
aas
push
or
sub
and
hlt
test
subb
out
and
out
jmp
pop
cmp
rolb
test
out
fdivp
push
pop
cmp
test
xchg
call
stos
filds
pop
lods
jmp
sub
add
push
jl
rorl
cmp
add
and
aaa
clc
adc
out
pop
sub
dec
nop
psrld
les
xchg
or
fcmovnbe
push
mov
fimuls
sub
mov
and
cmp
adc
jmp
shlb
push
int3
or
push
clc
xchg
add
add
jo
inc
pop
fcom
mov
lret
les
mov
pop
loop
dec
out
stos
xchg
shll
jg
fcoms
mov
arpl
mov
mov
shrl
push
dec
inc
test
mov
jne
adc
cmc
or
jle
fiadds
test
xchg
nop
xor
xor
jg
dec
and
xchg
add
pop
sti
pushl
test
mov
iret
push
arpl
je
imul
inc
mov
roll
jl
and
cwtl
push
cli
movsl
mov
mov
mov
mov
sbb
idivb
sbb
dec
sub
bound
mov
rcrb
push
fwait
es
pop
xor
push
lods
das
nop
or
pop
xchg
outsb
lods
xchg
jecxz
pop
je
mov
sbb
push
test
jl
cld
pop
pop
mov
icebp
adc
push
xchg
test
cld
jle
mov
movsl
popa
inc
cs
pop
sbb
add
incl
or
and
shr
sub
or
daa
leave
test
pop
and
lahf
pushf
ret
dec
or
popa
mov
mov
xor
leave
adc
xor
test
fcmovb
fs
test
inc
cs
cmpb
adc
mov
std
repz
pop
das
push
loop
add
lods
dec
jge
mov
sbb
nop
inc
fmul
and
test
outsl
lock
jge
popf
stos
jo
jle
out
mov
push
ret
into
daa
xchg
mov
xchg
fwait
jg
fnstsw
shl
mov
dec
mov
dec
sub
leave
xlat
bound
call
inc
cmpsl
pop
dec
inc
push
xor
mov
pop
fisttpll
pop
or
jbe
adcl
or
aam
mov
ljmp
push
xchg
add
dec
cs
js
xlat
roll
push
insb
outsb
push
mov
movsl
sub
mov
jmp
cld
pushl
dec
inc
jno
repnz
cli
cmp
jp
and
sub
inc
jb
pop
in
mov
aas
and
mov
decl
pushf
and
pop
xchg
jnp
test
lret
mulb
push
and
inc
inc
imul
jmp
push
pop
and
add
add
dec
mov
dec
data16
mov
inc
adc
orl
or
lret
mov
lcall
jecxz
call
outsb
lea
add
or
jl
movsl
adc
add
xchg
mov
mov
ljmp
push
mov
jnp
int3
and
je
sbb
mov
test
fs
popf
insb
stos
dec
jmp
cld
jmp
les
jae
mov
pop
and
cmpb
testb
aas
dec
cwtl
pushf
int
adcl
testl
jg
rcll
xor
loopne
cmpl
repnz
arpl
mov
add
jp
xorb
adc
add
fldt
icebp
mov
shrb
xor
jl
mov
mov
lcall
dec
push
sbb
lea
icebp
inc
sub
mov
add
incl
xchg
mov
sti
ljmp
fnstsw
dec
jg
mov
orb
cmp
data16
or
leave
add
pop
pushl
ret
out
add
scas
push
xchg
push
sub
xor
and
jo
loopne
pop
adc
std
cmpsb
mov
popa
sbb
lds
loop
punpcklwd
add
in
sub
nop
xchg
or
fmul
into
insl
sbb
mov
sub
iret
xor
and
push
ret
js
jno
or
jg
mov
sarl
adc
loop
add
hlt
add
jb
add
pop
loop
testl
push
add
jg
push
xor
out
sub
popa
sub
fmull
inc
je
xchg
leave
dec
push
cmc
lret
out
pop
clc
push
jecxz
stc
test
pop
aaa
inc
aas
sbb
push
mov
jns
sub
fs
fwait
xchg
pop
pop
jge
out
cmpsl
filds
cli
aaa
mov
mov
jne
ret
adc
aad
add
pop
aaa
jno
dec
xor
movsl
stc
in
clc
mov
jno
xchg
loop
inc
ss
xor
adc
sar
imul
dec
dec
jmp
jle
mov
xchg
in
popf
and
dec
aad
lds
aad
int
push
scas
orb
adc
sub
aam
stos
movsb
cmp
jae
sub
ffreep
sub
push
mov
arpl
add
int3
xchg
inc
rorb
add
mov
sub
test
fcomp
pop
fs
out
out
sbb
enter
cmp
outsl
lods
jge
imull
or
ficomps
inc
xchg
mov
add
testl
push
leave
jno
mov
andl
dec
out
adc
ljmp
in
mov
ret
cmp
adc
sub
and
outsl
shrb
jmp
push
pop
add
add
mov
stos
mov
or
dec
ret
cli
jg
popa
jae
cmpl
cs
inc
in
enter
call
jo
in
mov
addb
jp
cmp
jmp
jo
aad
mov
push
pop
clc
adc
lret
inc
xor
inc
shrl
cld
dec
fistps
pop
subl
inc
js
jns
cmp
inc
mov
or
ds
pop
push
call
push
test
mov
and
lcall
repnz
repz
mov
and
push
les
jp
lods
jg
sbb
outsl
or
adc
inc
sub
ret
add
ljmp
xchg
add
inc
ret
xchg
cltd
loop
pusha
gs
out
fdivp
jg
mov
inc
xorb
add
and
cli
stos
fisttpl
adc
pop
roll
jno
cmpsb
mul
pop
loop
sbb
shlb
jbe
in
jg
dec
icebp
sub
adc
and
adc
jno
in
mov
call
das
push
dec
jg
push
push
mov
fmul
inc
inc
add
or
in
mov
call
je
mov
sti
adc
cwtl
fisubrs
mov
das
cld
outsl
icebp
fcomp
aad
das
lock
cwtl
add
cmp
mov
push
xchg
arpl
xchg
jo
mov
jg
ret
data16
fadds
cltd
ljmp
decl
test
inc
fs
icebp
outsb
mov
dec
pushf
mov
subb
fidivl
push
sub
xlat
daa
push
push
sbb
add
mov
mov
jne
add
outsl
rcl
cmp
outsl
daa
mov
test
lret
xor
or
xlat
ljmp
std
das
call
lea
icebp
or
xor
jnp
sub
emms
scas
add
leave
push
and
outsl
cld
outsl
adc
ret
push
movsl
xchg
mov
bound
jbe
add
xlat
lods
jg
inc
repnz
clc
pop
or
je
xchg
cmp
add
pop
decb
into
or
insl
adc
out
mov
jo
cmc
or
ja
out
mov
mov
cmp
popf
ljmp
inc
cld
decb
push
lds
add
xchg
xor
lods
or
push
rcll
incb
ds
mov
nop
int
out
mov
pop
xchg
ja
outsl
std
fstpl
les
sub
push
push
jp
pop
jns
mov
mull
shll
dec
pop
inc
pop
loope
adc
call
lahf
adcb
lods
stos
popf
popa
cmp
mov
out
or
rcrl
pop
rclb
xchg
cmpsb
aaa
clc
or
nop
sub
cld
insb
mov
out
mov
lret
movsl
add
pushf
clc
aas
call
loopne
cmp
js
std
sub
mov
mov
pusha
and
mov
mov
in
and
jl
and
adc
insl
jo
inc
ljmp
push
push
add
sar
decl
jns
pop
pop
in
mov
movsb
sbb
test
push
sub
push
pop
xchg
test
adcl
movsl
mov
push
aad
jbe
hlt
lock
icebp
add
pop
popf
adcl
and
cmpl
pop
push
inc
sub
icebp
jg
mov
and
insl
in
fstp
jl
out
and
btr
cltd
cli
incl
das
mov
pop
inc
mov
or
add
out
or
mov
push
sti
dec
fildll
cmpsl
ds
jg
adc
mov
ret
add
pop
mov
ljmp
scas
add
adc
dec
adc
mov
pop
add
scas
sub
in
inc
sbb
add
mov
push
xchg
and
fdivrl
aad
mov
cmp
lahf
insl
jbe
inc
data16
push
cmp
mov
in
int3
add
dec
sub
jp
je
xor
cld
push
outsl
jo
pop
psubw
inc
lock
xor
xor
hlt
jg
pop
inc
int
ret
pop
mov
cmc
cmp
out
push
inc
testl
xchg
adc
or
testl
repz
call
dec
mov
mov
bound
das
add
inc
inc
jns
push
and
push
dec
test
pop
push
shrl
icebp
jge
dec
adc
stc
sub
inc
jl
in
pop
cli
mov
dec
add
adc
jnp
nop
lods
lods
fwait
std
add
mov
push
loopne
rol
and
adc
lahf
add
loopne
adc
addb
mov
adc
or
shr
adc
mov
add
xlat
adc
sub
or
pop
sub
arpl
test
inc
fs
jae
into
subl
jl
add
sub
adc
pop
js
ds
in
popa
jno
lret
inc
aaa
push
jno
add
add
in
je
das
out
add
add
mov
int3
sub
add
pop
js
mov
xor
xor
mov
mov
fwait
loopne
cmp
jo
sub
mov
push
or
sbbb
sbb
mov
testb
mov
adc
xor
jmp
in
cmp
jmp
adc
lret
fmull
fildl
jmp
roll
iret
pusha
sbb
movsb
loop
or
adc
loop
adc
pop
loope
fldl
arpl
daa
push
sbb
dec
addl
jl
cs
ljmp
lock
lock
jecxz
adc
jae
out
ret
dec
inc
fistpl
add
test
xchg
icebp
xchg
mov
cmp
adc
orl
cmp
hlt
sbb
inc
ljmp
mov
add
aam
or
jnp
xchg
rorl
rcrl
stos
xor
loopne
jnp
je
sbbb
dec
mov
xor
inc
rcll
in
mov
push
add
push
iret
dec
add
shll
imul
sbb
xor
and
pop
jne
and
lock
data16
and
sbb
std
into
inc
bts
sub
inc
lock
fistps
sub
ret
mov
xor
test
cmp
es
mov
mov
lods
inc
ds
int
inc
shlb
pop
pushf
add
adc
setbe
sti
jb
xchg
add
rcll
cltd
add
and
mov
daa
ljmp
inc
xorb
mov
or
sub
out
and
adc
cs
popl
cmp
add
sbb
rolb
pusha
sbb
in
push
adc
push
movsb
pushf
repz
rcll
es
xorb
daa
jae
test
xchg
dec
inc
in
jb
mov
andb
mov
jecxz
xor
or
adc
inc
dec
adc
inc
mov
insl
or
in
stos
jo
sbb
mov
std
mov
fcompl
jecxz
inc
mov
inc
or
dec
add
addl
cli
mov
filds
jnp
popa
insb
jbe
xor
inc
out
inc
lods
mov
xor
cmpsl
sub
adcl
cmp
mov
and
or
cmp
adc
add
xor
or
jb
push
xor
call
cmp
xchg
icebp
add
clc
add
fwait
sub
outsl
add
xor
pop
dec
loopne
dec
ljmp
sub
sub
bound
cmp
push
and
inc
loope
mov
pop
mov
push
scas
lock
pop
lods
inc
and
addr16
xchg
inc
sbb
mov
lret
push
testl
std
popf
and
decl
xor
mov
in
test
add
movsl
std
incl
pop
pop
stc
inc
cmpb
and
loop
xor
decl
shlb
lcall
inc
in
bound
ss
outsl
mov
and
test
push
mov
sub
ret
outsl
xchg
push
lret
push
sub
or
xchg
cltd
int3
hlt
pushl
cmp
jnp
std
cmp
mov
mov
clc
mov
fadds
and
fs
shlb
add
mov
push
mov
cmp
rcrb
push
mov
and
push
pushf
dec
addr16
addb
xchg
adc
ljmp
jecxz
mov
in
jno
lock
sbb
aaa
xchg
pop
push
add
std
jmp
test
lcall
cld
fists
dec
dec
xchg
pushf
hlt
insl
cmp
jg
and
xchg
or
add
dec
push
jno
mov
in
pop
dec
pop
cmp
add
xor
mov
test
test
cmp
add
dec
scas
fsubl
ljmp
pop
jp
add
out
mov
pusha
dec
push
out
mov
jg
xchg
mov
je
and
cld
add
pop
pop
adc
pusha
dec
aad
xor
ljmp
mov
add
and
cmp
fstpt
cmp
inc
pop
mov
mov
mov
add
xchg
stos
incl
call
popf
cld
sub
pop
jb
add
movsl
pop
lods
addl
dec
mov
jmp
aam
sub
mov
pop
into
stos
add
mov
fcom
cmpsb
mov
mov
add
pop
adc
lret
adc
call
mov
sbb
or
jge
add
cltd
xchg
add
in
enter
and
popa
xchg
sbb
daa
insb
push
add
test
and
dec
push
shl
and
or
mov
cs
rcrl
add
test
mov
adc
push
mov
dec
jmp
sub
mov
mov
dec
test
iret
mov
jp
in
mov
mov
sbb
pop
add
cmpsl
and
and
xlat
dec
sbb
pusha
fs
and
cmpsl
add
cld
ret
addr16
pop
test
dec
cmpsb
sarb
test
in
xchg
les
out
orl
scas
push
gs
or
jo
push
sbb
lret
and
std
or
and
decb
sub
stos
and
dec
mov
xor
push
ret
inc
mov
mov
or
dec
mov
out
sub
jl
jg
insb
add
and
push
lods
mov
mov
lock
add
lahf
pop
lods
xchg
pop
add
fcmovu
pop
clc
hlt
xchg
xor
sub
pop
adc
sub
push
mov
fildll
xchg
cmp
aam
ret
cmp
pop
insb
add
out
repnz
mov
dec
push
add
sti
push
sbb
sub
mov
nop
dec
pusha
dec
xchg
sbb
dec
adcb
push
jmp
adc
add
in
fdivrl
cmp
and
cli
mov
jbe
adc
mov
dec
cmpsb
pusha
fs
mov
add
and
ret
int
cmpsl
fs
jbe
cmp
pop
inc
xchg
jecxz
sbb
add
sahf
add
mov
sub
ds
lock
push
test
imulb
jnp
mov
lods
mov
xsaves
test
mov
add
add
mov
int
xor
jb
fistpll
jno
and
mov
add
aaa
test
mov
fistpll
es
daa
stos
mov
lods
out
outsb
addb
mov
cld
cli
mov
pop
cli
xchg
add
xchg
shll
mov
sti
ret
sub
js
fs
push
mov
lea
stos
fisubrl
cmp
subl
xchg
lock
fcmovnb
or
test
dec
and
inc
out
cmc
add
sub
ret
ss
pop
fbld
clc
fildll
mov
pop
sub
call
inc
lahf
clc
jns
xchg
jbe
rclb
das
lea
incb
insb
jge
xor
clc
xlat
dec
adc
ficompl
out
push
mov
or
cmp
and
mov
pop
fmul
das
or
and
test
shlb
jno
popa
xchg
insl
mov
inc
jecxz
adc
inc
adc
sar
pushl
sti
idiv
jo
dec
pop
jae
cli
out
dec
and
mov
adc
or
fcmove
iret
and
xchg
dec
push
inc
adc
shll
mov
sti
mov
in
fwait
mov
roll
cmp
adc
nop
fldcw
mov
nop
push
int3
mov
and
or
ljmp
test
test
pop
cld
adc
out
clc
xchg
stos
inc
mov
lahf
push
xor
xchg
mov
and
pop
inc
sar
fstpt
and
and
fs
inc
imul
aam
xor
test
inc
adc
or
mov
pushl
cld
sub
vmulss
pop
dec
mov
mov
and
xlat
ljmp
mov
sbb
jb
pop
adc
int3
inc
mov
test
jnp
dec
adc
or
jae
test
push
pop
fidivl
shrl
lock
xchg
mov
es
and
scas
xor
jne
mov
sar
aas
mov
and
roll
ds
ljmp
pop
hlt
arpl
pusha
popf
clc
loop
or
inc
mov
mov
pop
aam
add
stc
sbb
notb
test
ret
repnz
inc
sbb
xchg
fnstenv
popl
pop
les
sti
fildll
fbstp
cmpsl
xchg
pop
push
test
or
jg
jg
sub
cmpsl
jo
aaa
lcall
lret
sbb
repz
lret
dec
repnz
mov
add
mov
mov
ljmp
mov
lret
ret
inc
cs
xchg
in
insb
lret
neg
js
mov
cld
push
mov
es
mov
rorl
dec
test
dec
pop
push
add
push
xorl
lods
lahf
stos
andb
ret
mov
pushl
out
in
add
sahf
or
mov
jecxz
lahf
dec
scas
test
inc
inc
cmpsl
pushl
int3
fwait
out
push
dec
insb
in
push
in
push
clc
xlat
adc
adc
inc
jmp
test
xchg
sub
fimull
flds
jnp
or
dec
outsl
sub
xor
pushl
and
add
jae
sbb
add
je
jbe
fstpt
addb
mov
and
shlb
lret
gs
dec
pop
pop
testl
jg
lods
fidivs
aad
or
loope
mov
jle
test
ss
push
push
or
dec
sbb
outsb
enter
pop
fisubrl
hlt
push
outsb
insl
lcall
cmp
add
mov
push
dec
inc
push
dec
das
xchg
dec
mov
fistpl
pop
dec
jne
fisttpl
repnz
call
das
std
add
push
mov
ret
adc
ds
xchg
mov
cmp
movsl
xchg
sbb
pop
pusha
movsl
rcrl
adc
pop
cli
dec
aas
addl
aam
xor
push
xor
or
dec
mov
movsb
leave
jne
das
pop
sub
scas
xor
mov
cmp
sub
bnd
add
in
data16
aas
daa
pop
loopne
or
ret
imul
call
fisubrs
std
push
fnsave
movsl
xchg
xchg
cmp
ret
mov
pop
or
ficoms
push
test
bound
add
dec
xor
fistpll
or
pop
adc
int3
cmp
sbb
cwtl
inc
mov
push
adc
dec
xchg
mov
scas
pop
sbb
data16
fildl
ds
sbb
das
mov
xor
xlat
sub
xor
bound
sub
cld
dec
test
push
int3
dec
arpl
test
shr
mov
xor
ljmp
jb
pop
scas
cmp
mov
fmull
inc
adc
pop
mov
fnsave
inc
mov
jg
loopne
sbbb
sti
jg
test
scas
mov
cmp
lods
cs
or
lret
pop
push
in
pushl
loopne
adc
xor
mov
lcall
insl
push
mov
xor
incl
dec
jl
fcmovnb
sub
gs
xlat
inc
aam
rcrb
xchg
pop
push
mov
cli
and
sub
pop
mov
inc
lods
push
xchg
push
cwtl
lods
xchg
dec
test
negb
inc
cmc
icebp
test
push
push
sub
incl
in
std
movsl
add
cmp
mov
mov
or
leave
ds
cmc
cwtl
xchg
scas
adc
in
test
jg
pop
leave
mov
dec
mov
push
mov
sbbl
jge
stos
mov
test
cld
jmp
add
inc
inc
push
lret
adc
aaa
clc
push
and
fwait
mov
and
addr16
sub
es
push
jg
lcall
fbstp
xchg
add
add
icebp
fstpt
dec
xlat
jns
test
add
fstl
mov
pop
adc
stos
scas
xor
pop
lods
sub
and
or
push
aad
hlt
jg
inc
xor
in
mov
xor
dec
je
mov
aaa
lods
int
sbb
jecxz
sahf
mov
stos
or
fs
movsb
xchg
adcl
jnp
dec
in
or
jge
outsl
xlat
stos
les
call
mov
mov
dec
mov
pop
fs
aaa
xchg
decl
sbb
sub
stc
hlt
in
into
jbe
popf
mov
enter
jg
decl
or
gs
es
mov
scas
dec
fdivrs
add
push
sub
sbb
xlat
adcl
add
xchg
incl
pop
call
movsl
push
push
shlb
test
jg
lcall
cld
push
orb
push
into
in
clc
outsl
cmp
sahf
mov
inc
sbb
add
cs
xlat
add
inc
mov
and
sub
xorl
ret
sub
cmc
rcrb
out
jbe
sar
lcall
lcall
rorl
push
push
shl
dec
adc
xlat
fcmovnu
jle
push
jne
scas
jle
leave
inc
xor
cmp
push
mov
rcr
hlt
adc
inc
jp
jne
mov
cwtl
inc
adc
inc
mov
mov
shrb
std
push
sub
nop
in
mov
jle
mov
outsl
cld
mov
push
pop
scas
jo
pop
adc
sbb
rcl
pop
sahf
lods
out
mov
call
xor
cmp
popa
negl
sbb
outsl
pop
clc
arpl
pop
and
and
adc
xor
insl
add
sub
ss
or
mov
repnz
inc
push
je
stc
inc
inc
movsl
cmp
andl
dec
push
mov
jmp
js
push
push
cli
inc
inc
sbbl
xor
call
mov
dec
adc
test
repz
lcall
jmp
incl
in
adc
lods
mov
dec
stos
inc
sub
cmp
mov
push
mov
int
mov
arpl
lods
adc
dec
dec
incl
outsl
jno
jge
push
out
pop
jae
push
dec
pop
roll
cmp
data16
aad
fcom
adc
mov
out
sbb
fistpll
lcall
in
xchg
adc
xchg
add
mov
out
sub
dec
jp
jmp
inc
fisttpll
popf
dec
or
stos
orb
sbb
jb
in
add
pop
mov
pop
mov
std
cmpl
pop
jp
mov
inc
push
or
mov
out
data16
leave
push
add
push
decl
imul
sub
push
int
or
outsl
or
dec
push
rolb
jmp
mov
or
sub
xchg
dec
das
test
sub
dec
nop
xchg
lcall
dec
fistps
je
lock
mov
adc
adc
inc
and
dec
fstpl
cli
ret
aad
sti
test
js,pn
clc
cmp
cmp
sbb
add
cltd
jl
sbb
mov
rorl
lcall
adc
sbb
mov
leave
inc
outsb
insb
and
push
jg
mov
add
test
lret
mull
push
outsl
cmp
dec
cltd
cmp
mov
add
inc
adc
test
adc
dec
stos
sub
xchg
push
lcall
cld
insb
lds
or
movsl
xlat
push
ja
push
pushf
sbb
or
aaa
fsubrs
ljmp
in
lea
loopw
cmc
decl
inc
inc
mov
sub
js
call
ret
mov
iret
pushf
mov
mov
sbb
out
inc
movsl
incl
mov
test
sbb
add
mov
out
jmp
sbb
add
mov
xor
addb
or
adc
cmpsb
outsb
push
pusha
clc
lcall
std
adc
ret
mov
xchg
xor
or
incl
push
adc
dec
cmp
xchg
lods
sbb
nop
or
jo
adc
mov
adc
cmp
mov
ret
loop
pushf
push
add
push
outsl
push
mov
dec
pusha
jns
mov
sahf
push
mov
push
cmp
mov
inc
in
add
mov
xchg
insb
mov
std
add
sbb
or
das
hlt
xchg
sub
into
jmp
jmp
inc
jno
push
fildl
cmpsb
outsb
mov
and
clc
inc
jne
push
hlt
rorb
sbb
fildl
adc
push
sub
es
push
dec
cli
mov
sarl
pop
mov
inc
jg
xchg
push
mov
push
cld
sub
inc
mov
mov
push
cmp
popf
and
bound
loopne
lds
loope
mov
test
mov
adc
mov
out
ret
fidivrs
inc
daa
xor
add
orl
lahf
insb
mov
ficompl
pop
mov
nop
into
jecxz
pop
push
scas
mov
fcmovnu
push
xchg
sub
inc
mov
mov
mov
inc
imul
cmp
mov
push
lods
js
push
enter
rcrl
mov
iret
das
es
mov
lds
int
sbb
xlat
mov
cmp
add
lret
inc
mov
cli
repz
push
xchg
ss
cwtl
pop
fsubs
leave
insl
shlb
loop
xchg
sti
in
push
pop
mov
ficomps
xchg
and
sub
daa
stos
pop
jp
in
add
jle
push
or
jle
cmp
pop
lock
sbbb
dec
push
lods
insl
test
xor
mov
mov
push
sti
dec
adc
mov
sbb
aam
ss
movsb
sub
fwait
outsl
mov
das
sbb
sub
cmpsb
pop
cmp
sbbb
fs
aas
mov
cmpsl
fimuls
lahf
jne
sub
clc
ret
mov
jbe
pop
inc
push
jo
roll
mov
test
out
fbstp
add
and
iret
mov
adc
inc
push
jo
daa
scas
fucomip
std
push
pushl
ret
adc
push
popf
pop
mul
sub
mulb
adc
dec
rolb
or
nop
mov
pop
xchg
aaa
or
loop
mov
dec
or
bound
or
and
xchg
xchg
xchg
roll
jb
xchg
sub
test
or
pop
inc
pop
jo
scas
imul
pusha
add
les
enter
xchg
addl
adc
xor
aas
adc
push
add
enter
mov
cltd
inc
jno
hlt
nop
mov
in
adc
jl
dec
sub
nop
sbb
pushf
aad
inc
push
add
or
iret
add
adc
xchg
adc
stos
push
stos
ret
ret
mov
dec
leave
sub
or
int3
mov
cmp
enter
hlt
movsb
cmpsb
pop
lods
cmpb
and
xchg
jg
or
mov
mov
stos
or
inc
mov
xchg
rolb
xchg
das
dec
hlt
addr16
pop
cld
or
dec
xchg
jecxz
or
inc
fsubs
push
adc
mov
negl
inc
ret
add
cmp
mov
lock
test
pop
sub
aas
mov
add
sarl
cs
addr16
fs
cli
inc
mov
shll
test
mov
or
int3
push
arpl
mov
mov
sub
enter
ficomps
or
dec
mov
inc
push
adc
or
scas
pusha
xchg
xor
mov
mov
xor
test
repnz
jo
add
clc
pop
aam
stos
xchg
sub
mov
mov
lods
ret
xlat
or
push
sbb
push
and
mov
out
adc
push
push
stos
push
sbb
xor
xor
xchg
sub
or
pusha
sub
inc
cwtl
cmc
test
and
aam
je
mov
mov
mov
cwtl
mov
ds
aas
adc
push
adc
ljmp
das
pop
push
into
cwtl
dec
xor
rorl
add
xchg
sbb
pop
push
out
ret
aad
xorb
fisttpl
xchg
or
int3
push
mov
lds
and
inc
sub
stos
lahf
push
pop
adc
sbb
je
mov
and
cmp
pop
inc
dec
fsts
orb
pop
sar
xor
out
pop
push
cmp
loopne
lret
sbb
mov
mov
bound
stos
mov
orl
lock
cmp
sbb
mov
xchg
les
sub
shlb
lahf
loop
popa
adc
cmpsb
and
cmp
dec
pusha
pop
jbe
pop
nop
and
or
lds
lret
jbe
ja
adc
pop
sbb
cs
mov
out
xor
js
movups
cmpsl
adcl
call
cmp
push
cmp
add
and
roll
inc
jne
test
lcall
dec
inc
fdivrl
mov
movhps
icebp
xchg
in
pop
jbe
sbb
inc
cmp
popa
dec
sbb
fsubrl
xchg
xchg
lret
add
sahf
push
fisubrl
or
fistl
fstl
stos
lds
cmpsl
inc
pop
push
aaa
push
jne
xor
mov
sbbl
mov
loopne
and
aaa
mov
sbb
push
stc
jg
push
sub
xchg
add
xor
add
sub
and
cmp
add
into
sbb
shlb
bound
fnstsw
je
mov
aas
xchg
adc
mov
inc
or
aad
sbb
mov
xchg
push
sbb
jno
mov
sub
jle
mov
xlat
push
mov
mov
sti
shl
lock
gs
xchg
or
ret
xor
jp
add
mov
lea
fsubs
mov
pop
push
mov
ss
sub
xlat
dec
jl
xor
ficompl
pusha
cmp
xor
xor
sbb
aas
and
jge
mov
and
adc
loopne
push
aaa
mov
sub
adc
das
cld
push
pop
fucomp
dec
sbb
addr16
outsb
pop
sub
out
sbb
aam
push
sbb
cltd
lea
sub
and
nop
dec
int3
and
sahf
aas
cmp
and
xchg
out
xlat
inc
sbb
mov
add
pop
pop
lods
je
mov
xchg
ljmp
aas
imul
or
ret
inc
xor
jbe
in
clc
mov
stos
ret
insl
mov
sub
adc
and
test
aaa
mov
cwtl
and
add
and
mov
movsl
cmpsl
adc
mov
adc
pop
mov
icebp
dec
cmpsl
sub
sub
aaa
push
pop
test
sti
sub
divb
cmp
mov
push
mov
mov
clc
sahf
call
stc
imul
adc
inc
ja
and
pusha
jo
push
or
loope
mov
sub
dec
fdivrl
nop
addl
aam
arpl
lret
lods
cmp
push
stos
add
fucomi
inc
lds
add
adc
lret
movsb
pop
imul
jo
aad
insl
cmp
insl
sbb
arpl
aaa
jle
lods
xor
stos
add
js
xchg
mov
mov
nop
cli
insb
loop
jle
mov
mov
sbb
test
mov
mov
lods
andb
out
int
incb
in
stc
sbb
adc
mov
push
mov
inc
or
jecxz
mov
or
pop
jne
jne
out
stos
fisubs
loopne
lods
xor
and
inc
xorb
add
fwait
xchg
clc
pusha
add
jecxz
ljmp
inc
pusha
mov
shrl
addr16
mov
add
add
icebp
jle
in
push
mov
xchg
lods
stos
xchg
sub
jle
mov
inc
sub
rcl
iret
test
pop
shlb
lds
mov
push
orb
je
sub
cmc
or
outsl
xchg
fistps
fnstcw
push
outsl
movsb
mov
ja
ss
test
push
leave
sbb
sub
or
nop
or
aas
repz
cmp
cmp
inc
fxch
adc
mov
adc
jg
adc
adc
adc
xchg
adc
cmpsb
pop
and
cmp
adc
lcall
cwtl
adc
sub
mov
xchg
jecxz
jl
loopne
push
inc
cmpsl
mov
dec
lea
push
dec
add
mov
mov
in
mov
dec
adc
push
xchg
sub
adc
add
iret
enter
or
or
pop
shlb
call
push
and
imul
dec
stos
ljmp
test
adc
xchg
push
add
push
rclb
add
sti
jb
sbb
add
les
lret
xor
sti
cld
lea
daa
add
push
mov
adc
incl
jmp
cmc
jge
mov
cmp
adc
sub
mov
into
mov
and
fnstenv
imulb
and
cltd
xlat
inc
adc
or
out
xchg
cmpsb
in
mov
in
push
into
pusha
pop
jo
xor
push
add
mov
es
cmp
pop
mov
push
and
cmpsb
pop
mov
clc
dec
mov
mov
xor
dec
mov
xchg
mov
mov
cmp
outsb
mov
or
cmp
rol
aam
stos
dec
int
les
pop
or
mov
out
adc
cli
push
rcrb
frstor
ljmp
xor
aaa
cmp
incl
addb
push
adc
add
loopne
cmp
ja
icebp
inc
pop
mov
cmp
sbb
test
data16
in
adc
imul
aam
xchg
dec
loopne
jmp
sbb
xchg
roll
or
inc
subl
loopne
jno
mov
cmp
or
dec
adc
stc
test
leave
sub
je
xchg
jo
jne
mov
mov
xlat
jp
inc
fiaddl
jecxz
sub
scas
jbe
jmp
cmp
ja
adc
aas
inc
add
adc
fimuls
cld
pop
fst
mov
push
test
push
push
mov
sbb
aad
mov
popa
les
inc
jl
jbe
inc
filds
pop
xlat
mov
mov
aam
pop
lock
test
inc
add
jle
xchg
inc
xor
call
xchg
hlt
adc
aam
gs
jl
sbb
call
orb
xor
inc
daa
test
push
pop
xchg
xor
or
les
popa
shl
adc
es
adc
jge
cmpsl
sub
sub
fisubl
shrl
sbb
scas
and
xchg
add
subb
add
movsb
cmp
and
scas
jmp
add
pusha
inc
sbb
sub
mov
fs
pusha
add
add
push
sahf
xchg
push
lock
xor
push
je
test
pop
and
add
popa
loopne
mov
dec
add
cmpsl
scas
ljmp
push
push
cmpsl
jae
add
jnp
xor
sbb
push
aam
aas
daa
xlat
push
or
mov
loope
adc
and
sub
into
lods
hlt
cmp
test
je
pop
popa
out
stos
jb
mov
ja
ss
shrl
icebp
push
ror
xor
shl
xorb
iret
inc
andl
add
sbb
outsb
sti
daa
out
ret
push
aam
btr
and
cmc
xor
push
sbb
aam
dec
lds
dec
or
fbstp
lods
add
cmp
and
loopne
ljmp
js,pn
int3
es
fiaddl
mov
in
adc
jmp
xor
add
sub
or
mov
into
ret
notb
and
add
mov
inc
daa
adcb
sbb
xor
push
shl
fs
lea
mov
test
add
lcall
iret
ret
fwait
rclb
lret
push
test
push
cmc
sub
push
add
sub
or
push
sbbb
stos
push
or
cwtl
xor
adc
dec
add
cltd
jno
int
xchg
push
jo
and
add
add
insb
mov
dec
sub
xchg
ret
jbe
xor
bound
fiadds
inc
sub
jno
in
inc
sbb
shll
daa
and
add
mov
call
dec
inc
clc
ret
pop
in
fld
inc
out
mov
pcmpgtw
and
cwtl
cli
inc
mov
dec
rolb
push
xchg
sub
and
fcompl
add
filds
fstpl
fcmovnb
sub
push
pavgb
test
adc
cmp
xlat
aad
or
lret
dec
ss
dec
or
pop
or
cli
adc
clc
push
rolb
test
ret
in
das
cmp
cld
arpl
jbe
je
loopne
in
cltd
sar
in
ss
mov
add
icebp
mov
sahf
test
dec
ret
pop
inc
inc
rol
inc
icebp
icebp
mov
xchg
inc
jmp
dec
das
pop
test
fs
push
testl
jne
push
push
cmp
cmp
mov
rorb
ret
int
pop
or
add
and
out
out
push
or
inc
xor
inc
xchg
lea
sub
sti
lods
add
and
inc
jnp
sti
push
pop
aad
push
xchg
shrb
nop
lock
fisttpl
mov
sbb
xchg
xchg
pop
push
int3
lcall
popa
movb
pop
jg
dec
roll
mov
enter
xchg
add
push
mov
push
cmp
add
repnz
add
mov
or
and
je
cmpsb
sbb
movd
inc
push
jbe
call
jge
enter
dec
lret
shl
sbb
push
mov
imul
inc
adc
push
addb
mov
sbbl
ljmp
pop
repz
jl
mov
addr16
cmpsl
inc
insl
stos
pop
xor
inc
insl
add
jle
cmp
out
ret
add
sub
adc
xchg
dec
stos
aad
cmpsb
add
mov
loop
sub
jg
mov
add
ret
mov
imul
and
sti
adc
push
cmp
inc
sar
inc
sbb
inc
sahf
imull
sbb
iret
repz
ljmp
push
repnz
int3
and
inc
sbb
std
incl
dec
mov
dec
fs
iret
xchg
pop
cmp
cmp
fbld
push
push
and
lcall
or
pop
rorb
cwtl
xor
test
rorl
cmpsl
movsl
mov
mov
sbb
xchg
push
call
inc
decl
mov
imul
stos
gs
or
incl
push
mov
cmp
mov
rclb
bound
jmp
xor
jnp
lods
adc
sub
stc
sub
pop
add
lds
jnp
movsb
lock
cld
push
adc
aaa
push
stc
lahf
mov
or
xchg
dec
and
inc
ljmp
pop
cld
addr16
ret
sub
iret
pop
lret
outsb
notl
ljmp
insl
mov
into
test
repz
sbb
add
pop
repz
ljmp
js
or
xchg
call
push
sbb
es
data16
call
insb
mov
sbb
shll
test
and
cwtl
add
jb
cwtl
lcall
adc
fisttpll
adc
and
fdivr
pushl
push
jae
xor
or
out
movsb
mov
mov
ret
inc
xchg
test
out
pop
stos
lcall
xchg
mov
ret
outsb
sub
adcb
pop
dec
mov
xchg
fsubl
and
mov
mov
jge
test
inc
mov
loop
addl
mov
pushl
loopne
adc
bound
push
mov
divb
mov
dec
push
cld
adc
inc
and
das
jecxz
and
xor
inc
or
incl
add
les
and
adc
imulb
mov
mov
sub
pop
jg
inc
call
or
pushl
add
nop
mov
test
inc
ret
mov
adc
adc
nop
add
clc
pushl
ljmp
out
movsb
pusha
cld
add
ret
pusha
add
std
les
clc
and
or
pop
das
push
pusha
mov
adc
cwtl
adc
mov
js
loop
fsubrs
lds
call
in
push
sub
lcall
xor
scas
mov
stos
out
fwait
dec
push
adc
stc
mov
ljmp
jbe,pn
dec
movsb
sar
int3
sbb
movhlps
std
ljmp
cli
repnz
mov
mov
add
loop
or
enter
sbb
or
pop
add
shlb
push
in
sub
dec
pop
incb
mov
pop
cwtl
push
fdivrs
sub
stos
cwtl
imul
dec
enter
or
pop
mov
jns
inc
fsubl
mov
in
aad
adc
test
lret
adc
inc
rcll
push
sbb
call
sbb
xchg
imul
sbb
movsb
add
into
imul
mov
adc
incl
jg
sti
mov
test
add
mov
xor
push
cmpsl
daa
andb
lods
pop
sub
pop
xchg
mov
mov
mov
mov
test
jmp
rcl
ljmp
sub
mov
xorl
pushl
mov
add
xchg
test
jmp
lcall
lock
sti
inc
cmp
inc
andl
ja
mov
lcall
or
nop
xchg
test
add
inc
add
sbb
inc
inc
adc
in
in
int3
orb
data16
sub
dec
repz
jmp
jl
sahf
and
ret
movsb
push
or
adc
test
adc
jecxz
mov
test
test
push
enter
pushf
adc
and
inc
fwait
sub
sub
and
mov
outsl
xchg
inc
shlb
jp
inc
or
movsb
or
xorl
dec
add
rcll
add
test
inc
inc
pushl
js
xor
outsl
add
mov
scas
inc
stos
sbb
call
int
mov
dec
jns
push
inc
sbb
or
or
and
inc
push
fistl
decb
adc
add
and
adc
negb
bound
mov
ret
dec
xor
dec
rcll
push
mov
mov
pushl
test
adc
je
pop
sar
mov
cmpsl
mov
mov
pop
push
sahf
das
scas
cwtl
ss
daa
aad
cwtl
push
dec
push
cltd
cli
dec
aad
inc
or
cmp
enter
es
bound
jge
xchg
xor
ljmp
sbb
mov
sub
inc
or
adc
sarb
test
nop
pop
jnp
cmpsl
sbb
jo
cmp
idiv
jmp
aaa
add
and
mov
in
xchg
adc
pop
je
xchg
pop
loop
and
out
pushl
push
test
inc
inc
aas
add
cli
xor
xchg
jb
mov
ja
out
cmp
mov
testb
fldl
andl
mov
mov
lock
sbb
sahf
xor
hlt
jmp
imul
rcr
shrb
jmp
mov
out
movsb
or
mov
mov
mov
loop
hlt
add
push
arpl
jmp
or
pop
pop
sub
pop
inc
notl
ljmp
sbb
xor
insb
insb
pushl
fists
shlb
adc
jbe
sbb
arpl
xor
mov
out
das
inc
mov
push
ret
sti
xorb
mov
notl
lods
lods
push
jle
repz
adc
roll
mov
in
dec
sub
add
mov
js
jmp
std
das
dec
pop
sub
xor
andb
mov
aad
adcb
call
xor
cmpl
cmp
pop
addr16
ret
call
les
int3
in
xchg
pop
or
and
xchg
sbb
adc
aas
sbb
int3
lahf
inc
or
xchg
out
mov
jg
jl
popf
or
jb
into
mov
dec
xchg
das
std
mov
call
xlat
pop
jp
ss
mov
ss
repnz
shll
rorb
fldl
lcall
adc
cmp
lcall
pop
xor
stos
pop
jmp
mov
jnp
scas
mov
cmpsl
cltd
xor
ret
fisttps
dec
mov
push
ret
lret
pop
in
les
cmp
adc
popf
int
add
push
dec
lea
outsl
xchg
push
mov
mov
xchg
call
jl
je
pop
fnstcw
jl
pop
mov
inc
call
or
jg
shl
mov
cmp
pop
xor
cmc
int3
inc
lods
push
aad
and
mov
lods
xchg
outsb
push
cmp
jb
jle
std
clc
mov
xchg
pop
push
clc
push
pop
jecxz
clc
popf
pushl
in
jecxz
test
push
pop
mov
mov
mov
rcrb
sbb
outsl
sbb
idiv
jg
ret
cld
in
push
sbbb
adc
hlt
pop
mov
push
lcall
cmp
clc
mov
dec
mov
pop
jecxz
pop
je
push
jo
fistpll
ror
adc
mov
out
lcall
test
lcall
aas
imul
cmp
pop
fwait
bound
cwtl
or
sbbl
mov
outsl
shll
nop
ss
add
pop
lahf
adc
mov
or
test
stc
icebp
mov
add
pop
jnp
jo
jmp
jno
movsl
loope
jg
ret
in
leave
icebp
jne
fwait
pop
mov
out
xlat
icebp
cmp
roll
loope
loope
and
sub
icebp
out
pop
ja
outsl
mov
jg
fbstp
pop
jecxz
ret
or
ljmp
cld
cmpsl
pop
xchg
icebp
cli
lods
pop
fdivp
mov
jecxz
icebp
inc
out
cmpsl
icebp
cmc
add
in
or
test
add
lock
test
fisubrl
sub
push
loopne
clc
and
jg
incl
and
push
adc
mov
push
pop
mov
jne,pt
shl
in
or
adc
insb
xlat
adc
xchg
add
jecxz
mov
adc
insl
jl
xchg
jecxz
mov
rcll
fmull
push
or
icebp
clc
cmp
outsl
jl
xlat
movl
pop
sar
ret
ret
sub
jo
dec
cmp
loop
xchg
pop
fadd
dec
fstpt
int
scas
push
pop
leave
pop
push
icebp
xchg
pop
pop
jg
in
repnz
add
sub
jl
pop
jecxz
jl
outsl
sarb
ds
dec
sub
pop
xchg
orl
out
jb
push
lds
cli
lods
aam
push
xchg
cmp
or
pop
and
push
mov
sub
xorb
adcb
mov
lret
pop
out
mov
pop
or
push
or
cwtl
loop
sub
adc
push
les
pop
cs
mov
es
sar
addl
shl
inc
pop
inc
xchg
movsb
push
mov
and
and
add
pop
sub
pushl
inc
cltd
je
jae
aaa
pop
or
xchg
inc
adc
cli
in
dec
call
stc
andb
movsb
dec
dec
xor
adc
mov
adc
fstpl
cld
dec
mov
imul
push
pusha
idivb
add
pop
dec
or
push
push
mov
cmp
adc
ret
in
lcall
imul
sub
into
loopnew,pt
arpl
and
loopne
sbb
mov
sbb
nop
jg
imulb
jmp
inc
test
into
adc
adc
cmp
cld
subb
cli
orb
lods
jo
ja
sbb
filds
inc
cwtl
test
push
mov
push
or
mov
mov
mov
icebp
ljmp
pop
lock
mov
test
sub
inc
fs
add
adc
int3
xchg
outsb
enter
icebp
mov
sar
movsl
fsubrl
jecxz
lods
cltd
in
dec
add
mov
pop
mov
call
mov
loopne
test
push
inc
fs
adcb
jg
jmp
out
and
push
and
or
les
imul
std
inc
adc
addr16
in
xchg
movb
fcomps
test
cltd
ficompl
test
jg
pop
ss
or
pop
pop
pushf
scas
ja
pop
inc
mov
mov
xchg
and
icebp
sahf
and
add
push
out
add
mov
lret
les
es
jle
inc
cs
inc
xchg
clc
cmp
decb
fs
xor
sub
cltd
andb
sbb
dec
xchg
je
or
sti
dec
mov
out
sbb
outsl
cld
push
xchg
lods
jae
aas
inc
xchg
aam
mov
xchg
sbb
fldl2e
decl
jb
cmp
or
pop
loope
pop
pop
nop
sub
adc
or
aaa
loope
lcall
or
sub
or
adc
test
mov
mov
xchg
xor
les
ret
push
cmp
dec
aas
or
jno
add
leave
lret
lock
push
fsts
and
dec
xor
leave
in
pushf
bound
pop
call
adc
repnz
shlb
adc
popf
jp
call
int
mov
and
mov
rcll
cltd
mov
inc
out
ror
leave
mov
adc
ljmp
lcall
in
add
adc
jbe
dec
xchg
lds
outsb
lahf
inc
xor
inc
gs
mov
call
mov
inc
shlb
inc
pusha
mov
jne
fisubs
adc
pop
cld
or
xchg
jns
add
cwtl
jg
lcall
add
fistpl
out
xchg
sbb
push
or
lds
xor
add
ret
mov
jnp
movsl
or
inc
dec
dec
rorl
adc
mov
add
mov
sub
xchg
mov
sbb
mov
cmpsl
add
xor
leave
and
ljmp
xchg
lcall
or
clc
sub
test
mov
xchg
xor
cmp
clc
mov
and
mov
aaa
or
push
adc
xor
sub
ljmp
xchg
adc
das
sub
mov
push
xchg
cltd
add
bsf
jnp
ja
hlt
das
cmp
ljmp
push
es
jecxz
enter
push
jb
push
sbb
push
cld
or
sub
sbbl
test
dec
lret
stos
repnz
shlb
cs
add
jns
icebp
and
pop
fcoml
loop
push
inc
mov
xchg
pop
sbbb
push
test
pop
push
cli
and
push
sbb
enter
pop
iret
mov
pop
dec
in
popl
sub
mov
cmc
test
lds
filds
pop
fs
insl
test
imul
push
ljmp
mulb
xor
and
test
jmp
shlb
daa
call
int3
dec
mov
jg
jge
lods
call
mov
lods
push
fbld
test
fs
cli
pushl
or
pop
or
push
push
imul
lds
xchg
inc
dec
clc
mov
push
dec
push
jl
aam
push
cld
push
loop
pop
dec
add
std
insl
adc
inc
pusha
add
sbb
cmpsl
cld
push
dec
cmp
push
lret
jne
test
fistpl
sbb
adc
sub
adc
cmpl
clc
inc
dec
adc
jmp
or
aas
pop
cld
pmaddwd
inc
or
add
xchg
lahf
fistpl
fdivrs
and
jo
adc
cli
or
inc
popf
outsl
fimuls
sub
cli
mov
and
int3
subb
push
clc
lods
jp
adc
and
or
and
rorl
ret
sbb
shl
sub
ret
add
mov
xchg
push
out
or
push
and
orb
push
mov
ret
and
pusha
mov
adc
repnz
dec
movsl
mov
xchg
sub
sub
push
popa
xchg
dec
jge
and
es
inc
gs
dec
inc
xchg
add
rcrl
inc
cwtl
cld
mov
pop
sbb
cmpsl
jecxz
adc
loope
pop
push
loopne
xchg
mov
mov
adc
sub
mov
and
or
inc
dec
and
mov
adc
stc
or
mulb
aas
mov
push
fists
sahf
adc
inc
xor
js
cwtl
mov
and
and
daa
mov
test
js
cltd
test
je
cld
pusha
mov
or
add
fstps
xor
bound
inc
cld
in
test
sub
sbb
ret
mov
adc
mov
loopne
arpl
out
or
xchg
int3
mov
loop
mov
sub
or
push
xor
or
mov
or
inc
int
shlb
and
dec
cmp
push
push
inc
sub
inc
orb
xor
dec
setge
je
test
repnz
cmp
addb
aaa
outsb
jno
inc
push
adc
and
and
jmp
jge
cmpsl
sub
or
sub
xor
adc
push
mov
cli
cmp
and
out
insb
out
es
int3
add
push
push
fdivrp
jnp
pop
test
or
cmpsb
and
pop
je
dec
sub
insl
xor
jmp
leave
jge
sub
jns
add
jae
mov
inc
dec
stos
jle
push
cmp
jo
xchg
popa
out
fldcw
mov
add
cld
fwait
xor
cs
add
nop
add
or
add
fistpl
mov
aad
push
out
sub
add
add
lds
stc
call
or
xor
call
pop
mov
sbb
push
pop
mov
sbb
jle
adc
aas
push
mov
push
test
leave
xchg
ja
xor
jg
and
roll
inc
or
inc
or
or
xchg
and
js
lods
xor
in
sub
mov
in
add
and
rcrb
and
mov
add
je
test
push
or
fwait
int3
aam
sbb
push
adc
adc
es
testb
mov
xor
js
in
cmp
in
enter
movsb
adcl
fadd
or
out
push
cmpsb
inc
mov
mov
in
and
or
lods
push
push
loopne
clc
mov
pop
adc
and
sbb
loop
pop
leave
dec
jne
jo
hlt
cmp
push
popf
stos
push
das
mov
mov
sub
or
adc
mov
sub
xlat
inc
push
mov
lea
add
mov
lcall
mov
fcoms
repz
mov
dec
push
or
and
sub
lock
fdivs
js
iret
push
mov
dec
out
add
xchg
ss
jmp
push
pop
sbbb
int
jmp
xor
jb,pn
inc
dec
pop
mov
push
rolb
shrl
jle
push
add
mov
mov
inc
xchg
push
sub
sbb
jp
and
arpl
xchg
xor
or
inc
sub
minps
pop
aaa
ret
in
add
pop
jmp
or
outsb
add
dec
lds
mov
dec
and
add
fimull
iret
inc
xor
dec
inc
push
add
sbb
add
es
test
adc
scas
movsb
ret
scas
push
add
out
test
inc
jge
rclb
xchg
insl
mov
les
adc
aad
in
cmpsl
and
incb
cmp
pop
sub
or
aas
rcr
xor
adc
lods
sbb
pop
addb
loopne
cmp
lds
jg
loopne
and
sub
sahf
xchg
xor
cmc
push
push
xor
mov
inc
cmp
inc
sbb
and
cltd
aaa
sahf
add
sarl
adc
jge
mov
rorl
aas
cli
add
add
ret
clc
adc
inc
dec
add
popa
add
add
popa
push
adc
lods
aaa
xor
out
add
push
das
or
loop
insl
inc
std
adc
pop
bound
ljmp
aam
mov
adc
imul
sbb
cmp
adc
fiaddl
add
xor
inc
push
adc
cwtl
push
jmp
les
pop
push
pop
hlt
les
icebp
leave
mov
test
push
shll
enter
daa
loop
mov
mov
pop
jb
imul
ficoms
inc
aam
cmp
xor
faddl
cltd
dec
sub
jp
xor
sti
in
sbb
cmp
inc
push
and
pop
or
pop
sbb
or
icebp
jbe
test
notb
sbb
call
leave
sub
movsl
das
cld
ret
add
add
aas
add
fwait
mov
test
jo
inc
sub
rorb
pusha
fistpl
imul
outsl
cmc
mov
pop
xchg
cmc
adc
repnz
jno
pushl
mov
dec
mov
push
add
pushl
out
ds
scas
jae
dec
xor
mov
fmull
cmp
xor
mov
incl
into
dec
out
divb
xchg
jecxz
push
je
shrb
lock
movsl
pushl
mov
add
dec
xchg
loope
ljmp
cld
or
cli
dec
push
inc
add
push
imul
dec
pop
lea
jp
lcall
add
and
lcall
pop
push
add
push
add
cmp
xlat
pop
jne
ret
pushl
jmp
in
cli
int3
push
mov
mov
mov
and
in
cmpsl
sub
cmp
std
pop
mov
and
add
cmp
sahf
incl
test
cwtl
mov
arpl
and
dec
scas
add
push
inc
adc
push
pop
std
pop
das
std
out
push
mov
pop
lahf
rclb
push
sub
mov
mov
and
call
pop
cltd
lock
lahf
mov
stos
arpl
into
loopne
call
cmc
add
xor
sbb
lret
or
scas
push
mov
add
out
clc
lret
dec
pop
add
push
inc
mov
jle
sbb
pop
add
decl
ljmp
sub
ss
sbb
sbb
add
js
clc
ljmp
xor
pop
mov
xchg
dec
or
lcall
rclb
pop
inc
pop
fisubl
je
pop
mov
fstps
add
push
xor
sbb
dec
pop
ja
imul
dec
xor
jae
mov
js
dec
mov
jp
lods
sbb
sbb
pop
mov
mov
fildl
iret
div
loope
mov
adc
pop
clc
cld
les
ret
loope
xor
sub
inc
in
ljmp
loope
mov
xlat
test
adc
ret
mov
out
jle
outsb
rol
ljmp
mov
and
add
es
lret
inc
into
xchg
xchg
pop
push
mov
sbb
jl
loopne
outsl
sbb
sbb
shrl
pusha
adc
or
adcb
fstpt
mov
les
mov
ljmp
xlat
inc
pop
or
add
pop
std
sub
les
fiaddl
push
out
add
imul
flds
and
movsl
and
or
sbb
int3
imul
inc
or
add
cmpl
ret
mov
mov
pusha
add
lret
cmp
flds
lods
push
pop
jecxz
ficoml
add
les
shll
aam
sti
in
pushf
push
sbb
push
xor
lret
or
mov
jmp
fwait
outsl
ja
call
test
push
and
jns
inc
stc
cmc
add
inc
shl
or
test
mov
adc
fs
add
dec
nop
or
scas
adc
xor
add
push
imul
test
or
sbb
stc
or
insl
aas
sbb
mov
and
fsubl
jl
fs
cmc
lods
fnstsw
cltd
sbb
dec
add
sti
add
fstpt
mov
or
loope
divl
cmp
sub
nop
add
adc
inc
sub
les
lock
clc
loope
adc
cltd
inc
and
arpl
shlb
sar
push
jecxz
pop
or
mov
or
xor
sarl
dec
cmpsl
lahf
inc
fiadds
aad
orb
inc
xor
or
inc
adc
fmuls
push
int3
push
fcoms
dec
sbb
mov
cli
test
aam
data16
inc
shl
js
jecxz
shrb
or
bound
repz
pusha
sbb
dec
push
hlt
in
lea
sbb
addl
cld
arpl
cli
lea
call
prefetchnta
pop
xor
int3
repnz
adc
rcr
hlt
popa
dec
sub
add
add
repz
fsubrs
pop
or
xchg
in
inc
out
lock
add
pushl
iret
pxor
or
movsb
sbb
test
add
and
add
lcall
mov
lea
nop
lods
gs
xchg
lods
cld
insb
aaa
clc
mov
inc
adc
icebp
cmp
movsb
jno
xchg
leave
jae
leave
adcb
cld
sbb
nop
shrb
sub
aam
jmp
xchg
enter
push
dec
sbb
movsl
push
leave
mov
jmp
xchg
and
inc
shll
cmp
add
add
pop
xchg
insb
xchg
aaa
icebp
dec
movsb
xchg
call
aad
adc
in
cmp
or
mov
and
sti
lods
and
mov
sbb
mov
push
lds
cwtl
xor
push
shl
out
cli
ljmp
ljmp
cli
add
int3
inc
stos
ds
add
pop
les
xor
stc
mov
xchg
sub
leave
xchg
push
jg
jmp
push
jbe
enter
push
sub
xor
push
loope
jg
aas
add
mov
inc
sarb
add
jg
icebp
jmp
pusha
jns
enter
inc
mov
out
jge
jmp
jg
and
pushf
orb
add
pushf
call
jg
adc
cltd
jmp
jns
cld
adc
push
add
mov
add
das
iret
fnstsw
jmp
mov
movsl
cltd
add
out
enter
push
add
mov
mov
mov
add
movsb
arpl
dec
cmp
sbb
pop
mov
je
xor
iret
push
es
mov
cmp
dec
lahf
js
popaw
stos
testb
dec
cmp
jmp
xchg
inc
hlt
adc
shlb
arpl
add
popf
adc
dec
push
mov
jle
loopne
jae
fcomps
rcr
orb
mov
jne
xchg
test
inc
call
lcall
xor
or
leave
xor
xchg
popf
ljmp
or
call
push
addr16
aam
add
lahf
jne
jae
mov
fildl
and
mov
adc
sbb
dec
fcmovnbe
lret
jnp
jle
jmp
mov
push
stos
push
mov
mov
or
inc
sbb
push
sbb
inc
dec
or
testl
cwtl
fs
imul
push
jmp
xor
add
mov
addb
jp
adc
xchg
xor
dec
shll
movsb
and
rcrb
pop
daa
push
ret
sbb
imul
std
fdivs
jp
add
mov
and
fistpll
push
iret
inc
insl
movsb
sub
inc
inc
aam
aas
jbe
je
inc
ficoml
test
repnz
or
loopne
xchg
pop
jno
and
pop
mov
sub
fsubrl
les
rcrb
sub
fadds
stc
mov
mov
pop
arpl
scas
imul
pop
andb
int3
je
jne
out
sub
fmuls
dec
push
mov
rcr
mov
stos
mov
outsl
sbbb
in
outsb
or
adc
sbb
loope
or
pop
dec
pop
stos
jnp
daa
leave
or
mov
adc
add
and
mov
pushf
dec
mov
mov
popa
add
pop
orl
sub
stos
or
jne
loope
cmp
into
jo
mov
into
incb
sbb
or
pop
and
shrl
sub
or
fmul
push
add
and
fldenv
push
jno
mov
inc
outsl
add
repz
mov
adc
and
aam
les
jle
icebp
adc
or
sub
das
cwtl
iret
mov
aad
xchg
js
mov
jp
imul
xchg
and
in
mov
inc
lret
fwait
cwtl
cmc
add
fistpll
xchg
cmp
call
xchg
test
call
incl
scas
popf
fwait
add
sub
cli
ljmp
insl
insb
and
ret
loop
xor
mov
xchg
sbbb
aas
test
ljmp
jno
aaa
gs
pop
inc
cld
jno
mov
dec
push
dec
gs
rcrl
push
clc
incl
adc
popf
repz
pop
push
hlt
sub
xor
stos
decl
and
pop
call
xchg
ret
insl
push
inc
dec
cwtl
fdivs
or
sub
mov
mov
xor
pop
dec
and
push
jge
mov
call
and
inc
fidivrs
add
and
mov
movb
or
mov
sbb
xchg
xchg
in
scas
aaa
clc
call
mov
les
gs
mov
or
scas
mov
inc
and
add
lcall
addr16
cmp
popa
nop
push
sbb
or
lods
cli
pop
and
pop
mov
ds
movsl
jle
cmpsl
add
jle
mov
fistps
xor
jne
je
dec
jl
test
pop
std
xchg
jmp
add
ljmp
fucomip
pushl
adc
js
jo
loop
rclb
call
shlb
sarl
cmc
aas
add
jg
insb
aam
aad
push
cwtl
mov
pop
mov
add
icebp
fst
ljmp
lock
sub
jno
mov
sahf
in
sbb
leave
out
xchg
sarb
xchg
push
and
repz
insb
call
pushl
nop
cmp
mov
inc
sub
scas
getsec
decl
call
add
push
loop
pop
and
adc
test
adc
int3
add
cs
outsl
cld
stos
xchg
jns
jb
je
xor
in
shl
pop
incb
js
mov
mov
sub
jns
in
decl
adc
inc
sub
add
xor
mov
ja
adc
sub
call
jb
mov
push
int3
fwait
mov
test
clc
aaa
test
mov
push
outsl
pop
scas
cmp
prefetch
pop
mov
jmp
out
dec
push
jno
sbb
mov
inc
lcall
pop
cld
sbb
aad
mov
cmp
inc
push
in
add
add
call
push
mov
or
xchg
cmp
iret
ret
pop
sub
decl
loopne
jo
xchg
adc
xchg
ror
dec
arpl
insl
enter
out
inc
xchg
jbe
jg
in
dec
or
inc
repz
in
je
int3
pop
lret
loop
mov
add
fidivs
mov
pop
cmp
mov
loopne
js
call
incl
cltd
cmp
dec
imul
adc
fbld
cmpsb
add
xor
gs
add
iret
mov
mov
cs
jne
js
mov
xlat
decl
jnp
cmp
jae
enter
inc
xor
pusha
jbe
insl
scas
xor
fisttps
xchg
and
cmp
mov
dec
mov
inc
test
adc
xchg
adc
sarl
xor
mov
cmp
and
das
icebp
mov
and
adc
test
jg
sbb
jns
pand
pop
xchg
mov
or
hlt
loope
ljmp
cld
testb
repnz
add
or
negb
mov
adc
test
orl
call
push
inc
push
lcall
jg
pop
rcrb
scas
xchg
sbb
imul
mov
decl
mov
dec
add
jno
fdivr
int3
inc
push
cmp
mov
add
data16
and
jb
or
call
int3
cwtl
in
and
push
rcrl
pop
mov
jg
sbb
sbb
test
or
adc
mov
fiadds
shll
bound
sub
sbb
push
ljmp
cmp
imul
push
push
stc
mov
sub
scas
sub
lcall
push
and
movsb
cmp
cmpsb
jnp
bound
or
call
pop
ds
movsb
test
ret
mov
addr16
sub
pop
jg
pop
add
adc
push
fsubr
in
xchg
je
sahf
in
shll
cld
jmp
jmp
add
sahf
movl
aas
and
mov
adc
push
addl
andb
stos
sbb
movsl
push
out
popa
mov
xchg
add
andb
ret
push
mov
adc
mov
ret
loopne
or
add
or
adc
gs
mov
je
xor
nop
or
add
mov
sub
mov
pop
cld
cmp
push
mov
cmpsl
and
neg
scas
popa
das
pop
ret
data16
sub
subb
pop
repz
mov
in
enter
or
jle
mov
sbbl
jmp
lods
or
scas
sbb
icebp
and
loopne
fs
push
out
add
pusha
mov
stos
push
cli
pop
fadds
and
loope
jae
cld
inc
mov
push
shrl
mov
xor
xor
inc
sub
imul
test
test
loope
dec
enter
or
cmp
js
xchg
mov
cmpsb
lret
fcomps
fsubs
add
or
jge
adc
enter
pop
rolb
inc
addb
dec
insb
add
mov
adc
inc
std
xchg
and
ret
fisubrl
pop
lods
jge
imul
les
das
fdivl
lret
add
adc
and
push
and
adc
xchg
lcall
sbb
test
or
sub
push
mov
sub
cmp
xchg
dec
cld
sbb
cld
insb
add
inc
subb
rorb
leave
mov
test
mov
or
rolw
mov
pop
push
es
adc
inc
add
pop
clc
mov
sbb
pop
add
cmp
pop
inc
clc
shr
loope
lock
ds
loop
add
xor
jbe
add
or
popa
dec
cmp
pop
jae
sub
mov
subb
sbb
or
out
and
inc
inc
cmp
sbb
mov
rolb
mov
in
adc
mov
mov
enter
inc
jb
adc
inc
jnp
test
mov
rcrb
clc
gs
mov
outsl
icebp
mov
aaa
pop
push
rorb
mov
jno
push
sahf
jb
mov
mov
lds
std
jge
mov
xor
inc
xchg
pop
adc
popa
sub
or
setns
scas
ret
add
mov
cld
pop
mov
sarb
ret
test
iret
lea
test
je
enter
add
imul
ss
jne
add
repz
sbb
sbb
test
sbb
out
dec
sub
mov
cmp
pop
add
inc
add
pop
or
pop
dec
add
add
mov
popa
push
sub
ds
cmp
dec
adc
dec
mov
ret
ss
sbb
cmp
movsb
sub
sbb
fldenv
or
or
add
mov
push
xor
rorb
pop
xlat
xchg
lods
ljmp
inc
loopne
fldcw
add
mov
jbe
cmpsb
popf
mov
inc
adc
hlt
das
int
dec
lock
add
jbe
enter
inc
or
std
inc
data16
jnp
lea
sub
or
ret
xor
sbb
das
loope
pusha
arpl
xchg
icebp
rorb
sub
adc
cmc
nop
mov
adc
xor
add
stc
dec
mov
sbb
xor
pop
out
testl
sub
inc
inc
add
stos
dec
les
push
pop
loopne
lods
inc
sbb
inc
orb
mov
daa
fnstenv
or
sbb
orb
pop
xchg
xor
mov
mov
cmp
inc
inc
xor
mov
dec
inc
stc
negb
push
jnp
pop
pop
loope
adc
push
aad
lret
jp
add
loope
push
jo
loopne
fcomip
lock
or
xchg
incb
push
pop
inc
mov
lock
push
add
sbb
xchg
mov
adc
sbb
jp
cmp
repz
sub
adc
scas
or
add
call
xchg
jbe
inc
mov
insl
movsb
mov
inc
test
pop
rorb
lds
rolb
mov
and
mov
push
insl
mov
popf
imul
and
and
sahf
and
add
inc
cwtl
mov
inc
xchg
pop
xchg
adc
cmp
pavgb
iret
pop
cmpsb
push
jp
jo
or
sub
jbe
pop
icebp
es
lahf
sbb
cmp
cmp
ret
jo
cmp
push
adc
xchg
loopne
aas
mov
in
add
lret
jp
push
gs
mov
hlt
pop
gs
scas
loop
mov
pop
xor
enter
das
inc
or
inc
push
out
jge
or
mov
shrb
fs
xlat
jmp
test
sub
xor
add
fadds
outsb
sarl
pop
mov
sbb
and
out
and
addb
or
clc
pop
add
sbb
jmp
nop
push
add
mov
or
xchg
fmuls
lea
ljmp
dec
add
ss
add
cmpl
lea
aad
or
mov
inc
test
fadds
or
repnz
mov
mov
popf
test
adc
shrl
xchg
stos
xchg
push
sbb
rorb
sub
pusha
in
adc
bound
sub
iret
push
sub
push
out
popa
xor
add
xorb
daa
or
sbb
pop
bound
mov
shrl
sar
inc
pusha
enter
cmc
mov
or
test
sbb
push
roll
sbb
ja
arpl
push
push
jnp
inc
popa
decb
inc
rorb
add
pop
scas
jne
fldl
dec
sub
js
inc
adc
roll
inc
scas
pop
dec
mov
rcr
adc
rolb
in
jbe
push
sub
cmp
aaa
aad
inc
jmp
jno
cltd
stos
stos
popa
or
xor
fstpt
sbb
cmpsb
and
mov
dec
fsubl
adc
imul
mov
xchg
mov
arpl
mov
xchg
mov
ljmp
bound
lods
repnz
add
outsl
mov
add
mov
jp
sub
sub
lock
mov
mov
sub
dec
lret
decl
cmc
mov
fisubrs
outsl
lahf
out
addr16
sbb
in
xchg
incl
mov
adc
pop
pop
js
inc
scas
lret
inc
xor
ljmp
jmp
jo
adc
adc
cmp
and
ffreep
mov
mov
rcll
lods
arpl
addr16
pop
push
je
inc
push
adc
jno
pop
xchg
add
dec
pinsrw
push
inc
cld
jno
jb
in
sbb
bound
clc
xchg
clc
bound
mov
xchg
stc
mov
fwait
sbb
movsl
ds
incl
aas
stos
mov
sbb
lea
push
ds
mov
push
les
incl
jnp
jbe
push
in
jo
popf
sbb
jmp
out
inc
dec
adc
sub
dec
add
add
mov
xor
aaa
inc
ret
icebp
fsubl
mov
jnp
jp
dec
or
gs
fs
insb
sbb
push
mov
jae,pn
xchg
gs
jge
cmpsl
fs
lcall
aas
xlat
xchg
add
inc
push
or
cltd
push
icebp
ljmp
std
ljmp
shlb
xor
nop
mov
sub
sbb
int
fadds
ljmp
ss
sub
cmp
add
pop
testb
mov
dec
shrb
pop
add
mov
sbb
cmp
in
jbe
lods
mov
js
loope
cli
xor
jecxz
imul
std
mov
movsl
jne
jg
sub
pop
enter
xchg
add
movsb
add
out
int
test
dec
out
mov
jp
pusha
mov
push
sub
mov
outsb
mov
daa
sub
cmpb
adc
ljmp
test
addr16
jge
push
jecxz
xor
aad
xor
lds
hlt
adc
and
ret
out
mov
repz
int3
push
cmovo
nop
add
and
pop
int3
or
xor
mov
rclb
jmp
push
pop
rcll
cmp
add
hlt
cmp
movsb
and
cmp
pushf
or
std
or
push
loopne
scas
cmp
stos
ret
xchg
int3
hlt
aaa
ds
fdivrs
js
xor
lret
push
sarb
push
jge
xor
cmp
xor
stos
aaa
adc
push
and
call
es
mov
mov
cmp
jns
push
or
inc
pop
inc
sbb
dec
test
xor
movl
xor
aad
std
pop
xor
push
or
inc
lock
add
add
int3
fwait
push
add
jbe
lock
or
int
aaa
sbb
xchg
add
and
mov
repz
push
mov
inc
pop
inc
dec
mov
adc
fildl
add
and
xchg
xor
xchg
mov
call
mov
sbb
sbb
ffreep
test
inc
ltr
dec
test
xlat
pushf
adc
orb
and
or
adc
adc
fs
popa
push
mov
mov
or
mov
adc
popa
les
test
or
and
xchg
add
inc
cmpsl
lret
or
mov
subb
stc
mov
mov
jmp
loop
inc
inc
mov
leave
loop
rcrb
mov
dec
xor
adc
ljmp
and
push
sbb
test
xor
xor
lcall
and
adc
lods
mov
xchg
mov
insb
or
test
pop
push
call
ljmp
add
ja
imul
adc
dec
fmull
mov
inc
dec
cmp
and
and
mov
or
pusha
sub
inc
test
jmp
cmp
ja
xor
aas
orl
adc
pop
add
and
xor
fistps
scas
sbb
cmp
cmp
and
mov
mov
xor
fwait
mov
inc
jecxz
out
into
es
lcall
movsb
xchg
shl
cs
lret
mov
sbb
fwait
mov
or
cmp
jle
adcb
jno
pop
sahf
cmp
es
mov
cmp
adc
fs
or
xor
cld
or
lcall
rorl
iret
mov
inc
jno
test
loopne
adc
xorb
mov
mov
dec
adc
add
ret
in
mov
mov
xor
lea
and
fs
cmp
sbb
adc
addr16
jge
fs
or
jp
sbb
and
sbbl
fnsave
push
insb
mov
dec
adc
stos
and
add
aaa
adc
pop
ret
bound
mov
cwtl
or
es
jg
sub
nop
ret
sub
mulb
lret
or
cwtl
push
in
stos
mov
inc
int3
and
inc
mov
test
rorl
sbb
imul
jbe
filds
mov
rcrl
dec
movsl
adc
addr16
rcrb
xor
sbb
popa
inc
int3
es
or
lods
adcb
test
sub
pop
and
loop
push
xor
xchg
cmp
lods
daa
push
add
andl
mov
xchg
ret
or
mov
fmuls
frstor
fisubrl
sbbb
jo
inc
fildl
stc
mov
ret
out
mov
fmuls
jg
aaa
jae
mov
adc
shlb
mov
mov
dec
mov
sarl
icebp
jge
pop
loopne
test
test
mov
and
pusha
add
ja
pop
jo
adc
fsubrl
in
adc
adc
lcall
int3
mov
shrl
and
in
sbb
lock
es
add
scas
and
aaa
das
pop
js
addr16
push
mov
xor
sub
adc
mov
call
or
push
cli
dec
push
adc
pop
inc
and
or
addl
icebp
pop
sub
sub
inc
js
bound
sub
es
sbb
mov
mov
shrb
ret
or
mov
clc
push
inc
fists
or
outsl
jge
mov
push
xlat
mov
in
xchg
shll
cs
scas
out
inc
mov
outsl
jl
inc
rcrb
test
dec
or
inc
and
and
and
es
loop
and
xor
in
or
or
mov
add
sbb
fimull
fldenv
or
and
outsw
xor
mov
push
xor
call
testb
outsl
and
hlt
sub
sub
cs
push
stc
push
cwtl
or
jl
inc
dec
jecxz
mov
inc
xchg
mov
int3
sbb
push
addb
cmp
inc
pop
cmp
adc
mov
loopne
les
sbb
shll
andl
test
pop
adc
scas
and
sbb
cmpsl
jns
pop
icebp
call
xchg
or
inc
out
mov
and
mov
xchg
inc
pop
dec
call
xchg
dec
aad
addl
jl
fisubrl
mov
add
xor
xchg
sbb
add
fndisi(8087
sarl
jl
mov
xchg
aas
cld
pop
inc
cmp
outsl
and
lock
and
sbb
mov
pop
xchg
loopne
jp
out
or
jns
mov
mov
cld
push
hlt
push
adc
test
jb
cwtl
das
add
xor
loopne
sbb
xchg
mov
inc
inc
das
ret
sbb
jp
or
shl
popa
xor
add
mov
pusha
orb
inc
or
jg
mov
adc
insl
loopne
test
ljmp
dec
jmp
pop
inc
rolb
cmpl
xchg
dec
cld
cld
sbb
and
jge
out
jb
rcl
call
movsl
cltd
aaa
fistps
mov
iret
and
cmp
mov
les
js
dec
push
fchs
adc
imul
mov
iret
aas
cmovb
mov
call
add
push
mov
lods
pop
mov
int
inc
dec
or
rcll
push
adc
mov
fdivl
scas
or
lea
pop
enter
js
add
jg
xchg
rorb
push
out
jle
xchg
pop
je
mov
add
push
sbb
inc
or
adc
dec
aaa
fisubs
adc
ret
cmp
cltd
movsl
and
cmc
mov
jg
pop
out
adc
loopne
ret
add
xchg
fnstsw
pop
loope
les
adc
push
push
xchg
jo
push
scas
pusha
push
addb
adc
push
ja
mov
adc
mov
rorl
adc
incl
mov
push
adc
sub
andl
pop
xor
mov
xchg
inc
inc
aam
adc
add
mov
jae
mov
push
rcrl
sbb
push
mov
mov
sub
andl
insl
inc
les
lcall
mov
add
mov
loopne
add
mov
adc
movsl
into
add
je
add
jl
or
jns
ffreep
and
push
adc
jb
je
cmpsl
xchg
cmc
or
popa
movsb
or
sub
inc
xor
mov
dec
jge
adc
pop
sbb
fsubrs
push
add
imul
mov
push
adc
pop
add
cmpsb
dec
ja
lds
shl
sbb
push
push
cwtl
push
jg
mov
int
xor
add
cli
xlat
mov
in
mov
adc
enter
mov
xlat
add
push
xchg
test
and
mov
xchg
push
adc
iret
sub
aam
cmp
mov
clc
add
sbbb
pop
mov
pusha
in
inc
mov
or
jmp
in
or
test
test
adc
rorb
push
mov
inc
es
out
pop
jmp
hlt
sbb
fisubl
push
inc
dec
fcoml
in
sarl
pop
adcb
enter
insb
push
enter
inc
mov
fisttpl
pop
adc
or
lea
inc
jno
pop
cmp
fcomp
pusha
mov
fcoms
xor
andb
add
and
jbe
fadds
and
pop
push
mov
loop
add
in
enter
push
or
cwtl
movsb
mov
lods
in
mov
adc
adc
or
adc
push
mov
lods
in
xchg
orl
or
loopne
jbe
jo
mov
xchg
les
xchg
cwtl
sbb
imul
les
shrb
dec
xor
ret
and
dec
sbb
and
or
lret
or
roll
and
mov
sbb
add
hlt
insb
sbb
popf
popf
fiaddl
dec
adc
xchg
sbb
add
fs
out
pop
sbb
fwait
dec
jmp
cmpsl
or
add
cs
jecxz
movsl
fldcw
cmc
rcrl
add
aam
icebp
pop
hlt
jecxz
cmp
ret
lretw
imul
mov
addb
jbe
and
addl
int3
pop
shrb
sub
and
push
adc
out
sub
loopne
jbe
add
mov
push
jp
pop
sub
add
push
int3
sahf
push
cmp
push
outsl
jecxz
sbb
ret
add
inc
ljmp
push
ficoms
cld
test
inc
daa
jp
or
pop
mov
lret
jge
cmp
rcrl
dec
sub
shlb
push
das
mov
mov
fprem
daa
add
and
xor
inc
adc
add
or
rclb
add
sarb
ja
sar
add
fistl
sbb
mov
nop
push
sub
pusha
mov
push
rcr
adc
lcall
dec
inc
mov
pop
sbb
jns
iret
test
test
repnz
sub
pushl
iret
in
mov
inc
daa
add
shlb
mov
cld
fildll
push
push
inc
pop
mov
fdivl
out
dec
push
adc
push
fistl
xor
cmp
je
mov
pop
or
cld
or
rolb
dec
push
or
mov
sar
add
xor
ljmp
nop
push
mov
mov
mov
xorl
inc
push
xor
pop
jo
or
dec
xchg
mov
add
imul
ss
and
cmp
adc
pop
ljmp
sbb
nop
xchg
scas
push
adc
push
stos
inc
test
in
adc
or
lock
mov
in
push
adc
mov
call
inc
jl
imulb
jnp
mov
sahf
sbb
mov
mov
lods
pop
sub
pop
sub
jmp
lcall
es
sbb
dec
orl
je
hlt
sbb
ja
sti
rcrl
clc
push
test
lock
mov
mov
sti
mov
stos
add
aam
outsl
std
jmp
add
or
mov
adc
int
bound
xchg
adc
add
mov
leave
out
xchg
lods
loope
xor
jge
xor
rcrb
jmp
sahf
push
or
add
mov
jmp
jl
adc
je
subb
loope
adc
mov
pop
mov
popa
or
xchg
sbb
pop
mov
popf
sahf
stos
shlb
jmp
outsb
fidivs
xchg
inc
mov
and
xchg
test
add
je
cmp
test
inc
lds
mov
sbb
push
or
xor
add
jmp
inc
popf
jns
in
or
idiv
das
and
mov
xchg
int
lret
inc
mov
or
adc
jmp
adc
sub
movsl
mov
pop
pop
adc
sub
mov
mov
inc
cs
inc
mov
sub
inc
outsb
out
popa
out
push
mov
test
add
dec
or
pop
adc
or
jecxz
and
std
and
add
cwtl
andb
lods
mov
outsb
pusha
adc
add
mov
sub
or
inc
adc
jb
dec
test
push
orb
mov
jns
iret
cmp
jbe
in
rcll
mov
inc
dec
sub
mov
dec
mov
mov
sbb
cmc
imul
inc
test
add
mov
jb
adc
cmp
and
pop
shr
jg
mov
mov
mov
xor
es
or
jp
in
cmp
les
and
sti
cmpsb
push
test
pop
call
addb
pusha
inc
dec
cmp
into
hlt
or
jne
cmpsb
aaa
ss
scas
sub
daa
xor
mov
daa
cmp
testb
hlt
rcrl
sub
call
push
sbb
mov
push
adc
cmp
mov
iret
inc
add
mov
mov
and
add
and
fisubrl
sbb
inc
and
cmp
cmpsb
or
add
add
cmp
les
divb
mov
mov
cmp
loopne
adc
out
call
fadd
or
adc
pusha
cmp
das
sub
xor
push
dec
xchg
mov
xor
and
push
xchg
mov
inc
data16
fidivrs
jne
fadds
es
sub
pop
imul
loopne
ja
inc
or
fcmovnu
sbb
xor
sahf
iret
or
int3
and
in
andb
sbb
in
fisubs
enter
shll
ret
int
test
jle
jecxz
pusha
push
add
mov
pop
xor
dec
rorb
sarl
rolb
movsb
sarb
hlt
add
inc
outsl
dec
mov
fnstcw
inc
inc
mov
mov
push
mov
add
sub
movsl
mov
rorb
dec
aam
or
hlt
push
mov
loop
stc
inc
lret
das
orl
jmp
jg
shrl
mov
aaa
cmp
not
mov
scas
dec
pop
add
push
addr16
test
lock
mov
jmp
pop
fistl
sbb
decl
test
inc
jo
in
outsb
or
std
rorb
or
call
inc
and
push
sbb
jns
push
mov
movsl
lds
or
mov
adc
and
mov
or
push
inc
adc
adc
aad
dec
mov
cmpsb
push
sub
icebp
jg
into
or
mov
mov
enter
dec
add
addl
inc
data16
repz
test
pop
adc
je
outsb
jo
daa
out
push
xor
or
clc
sbb
sarl
push
cld
insb
cld
mov
dec
lds
aam
mov
and
push
pop
xchg
subb
pushl
pop
inc
dec
out
iret
daa
lcall
rorb
pop
out
mov
mov
outsl
jl
cmp
mov
cmpsl
push
adc
sub
xlat
push
adc
pop
dec
call
mov
xor
cmpsb
insl
mov
push
mov
push
cmp
sbb
add
incl
dec
xchg
les
cmp
outsl
std
inc
pop
addr16
push
sub
mov
adcb
loope
jmp
clc
sbb
loopne
nop
addl
pop
mov
jno
aad
or
movsl
jecxz
lds
sbb
arpl
clc
incl
fstpl
loope
or
je
dec
jbe
repnz
push
add
call
mov
sbb
mov
orb
xor
les
add
mov
jle
mov
add
or
stos
sbb
fistpl
lcall
fimuls
adc
push
pop
loop
or
ljmp
add
xchg
rclb
push
xchg
add
adc
cld
decl
jb
jae
add
dec
or
lret
pusha
sub
insb
bound
cmpsl
inc
cmp
cs
test
decl
dec
xchg
fcomip
les
aad
pop
imul
jp
push
cmpsl
inc
push
icebp
lcall
sbb
add
leave
sbb
sbb
sub
cmp
cmpsl
ss
and
add
in
or
jmp
ret
push
sti
shlb
push
loop
pop
push
repnz
and
lods
mov
call
inc
shlb
jo
lcall
cmp
jl
xor
add
rcrl
popa
add
add
mov
test
cmpsb
popf
test
cmp
xor
nop
in
push
mov
mov
inc
jnp
adc
xchg
or
mov
and
or
add
jns
daa
stos
push
xchg
pop
pop
ss
sbb
add
mov
popa
xchg
pop
in
add
xlat
add
mov
mov
jno
push
mov
repnz
je
or
lret
dec
sub
jb
xchg
shlb
mov
jne
pop
cli
lcall
inc
push
jae
mov
add
xchg
mov
mov
mov
incl
sbb
adc
xchg
outsl
add
push
xor
jecxz
lea
test
imul
pushl
das
xchg
fs
lahf
std
jmp
push
loopew
movb
dec
cwtl
test
mov
mov
dec
mov
int
and
xchg
xchg
aad
push
imul
in
mov
adc
and
push
jns
bnd
fsubs
mov
or
fcompl
sbb
scas
add
aaa
in
scas
mov
sahf
data16
fisttpl
out
xchg
shlb
incl
cli
lods
add
loop
daa
decb
mov
dec
jne
sbb
cmp
mov
mov
incl
mov
movb
jno
and
pushl
sub
push
push
push
movsb
shlb
adc
imul
notl
jnp
pushf
jle
jp
jg
jg
push
ljmp
add
adc
cvtdq2ps
jmp
lea
stos
mov
mov
xchg
xchg
test
aaa
pop
les
addr16
data16
bound
or
add
and
mov
xor
or
popf
xor
lret
pop
add
push
mov
shlb
xchg
push
fdivl
shlb
add
xchg
out
or
incl
lods
nop
daa
les
fs
jecxz
xchg
lea
jg
pusha
dec
stos
int3
jp
lock
popa
mov
and
cmc
push
dec
out
dec
cmpsb
imul
das
repz
loop
scas
adcb
mov
popa
call
push
mov
out
jg
rclb
xor
repz
shr
enter
dec
mov
xor
into
xchg
xor
mov
iret
ds
scas
jg
add
scas
nop
aaa
lods
cmpb
add
jecxz
mov
push
scas
fwait
repnz
inc
or
outsb
jmp
imul
sub
or
out
and
ljmp
push
dec
adc
inc
rorl
lret
and
cld
inc
das
rcrb
mov
add
mov
or
mov
add
inc
pop
and
adc
pop
popa
inc
jno,pn
inc
sub
push
in
gs
adc
and
sbb
push
mov
mov
sub
adc
js
sub
add
cli
inc
cmc
fdivrl
mov
or
jecxz
sti
sub
pop
hlt
sahf
hlt
mov
pop
scas
sbb
inc
loope
xor
xlat
cmp
xchg
jge
push
aam
pop
push
or
xor
pop
test
cmpsb
pop
mov
add
movsb
adc
mov
sbb
mov
push
inc
sub
iret
dec
fwait
out
imul
jmp
call
dec
outsb
or
dec
lret
or
push
add
ds
sub
add
sbb
or
rclb
js
and
push
sub
and
lea
sub
int
and
daa
mov
cmp
shrl
or
and
aad
mov
cld
insl
rcll
inc
and
enter
mov
rcll
cltd
mov
and
pop
and
adcl
andb
fnstenv
pop
jo
xlat
sub
pushl
iret
xchg
fcoms
lcall
sbb
push
dec
hlt
jno
bound
repz
fnstsw
pop
cli
hlt
out
dec
stos
test
push
dec
inc
cwtl
ja
mov
mov
cs
xor
and
mov
push
imul
scas
xor
fwait
sub
ljmp
dec
stos
sub
xchg
pop
inc
pop
xor
fwait
and
fs
mov
ljmp
sar
inc
scas
jne
popl
das
mov
mov
les
pop
call
stc
add
push
mov
ret
in
xchg
jecxz
fxch
sub
inc
jne
fsub
call
xor
subb
or
loopne
pushf
repz
bound
sbb
push
clc
pop
loop
je
mov
fneni(8087
inc
dec
xchg
jne
ret
cld
test
jg
jae
aad
ljmp
and
mov
push
add
jecxz
imul
inc
hlt
xchg
mov
mov
xor
lea
jmp
adc
ljmp
hlt
movsl
jns
sti
cwtl
mov
fildll
push
das
call
test
lcall
push
test
mov
xor
dec
xor
and
and
sbb
das
std
mov
nop
add
sbb
mov
sbb
xor
bound
pop
inc
mov
mov
rorb
arpl
dec
subb
decl
mov
dec
xchg
dec
mov
out
jge
hlt
xor
addr16
incl
push
sahf
fcomps
ljmp
cld
cmc
imul
jg
jg
sub
xchg
cmp
push
dec
lcall
repz
lahf
pop
mov
leave
and
cmp
test
dec
in
add
add
cli
sbb
out
int
push
dec
out
andb
ljmp
into
push
mov
pop
xor
jg
pop
cmc
fldcw
add
pop
mov
and
adcb
stc
fildll
add
ds
inc
jno
adc
inc
push
push
push
movsl
js
mov
and
push
lcall
push
mov
mov
push
add
push
sub
out
addr16
sbb
push
out
test
mov
jmp
je
inc
lret
mull
out
insb
jbe
mov
push
push
addl
jo
test
sub
stos
aas
push
xor
mov
subb
dec
jbe
or
add
sahf
insb
jb
sub
lock
mov
sub
cltd
dec
push
addb
push
add
filds
cmp
stos
or
ljmp
push
xchg
lds
mov
push
mov
jge
subb
adc
mov
into
es
and
fcomp
push
xor
ret
xor
call
cltd
outsl
mov
cmp
cmpsb
test
cmp
test
sub
aam
mov
or
mov
ds
enter
fcompl
mov
int
fsubl
andl
inc
add
and
lea
inc
and
test
dec
xor
xorb
and
fmuls
ret
shlb
push
inc
stos
loopne
cmpsb
jo
jo
lea
out
dec
mov
mov
lcall
outsl
or
push
out
roll
pop
mov
aas
les
movsl
nop
fidivs
ret
or
mov
xchg
push
cwtl
sbb
inc
xchg
mov
stos
add
or
sub
or
push
loop
cwtl
mov
pusha
sbb
push
add
ljmp
sub
rolb
je
push
xor
push
test
lods
dec
sbb
add
and
sbb
mov
and
dec
pop
ds
sub
push
maxps
jle
dec
in
push
dec
add
popw
cld
sbb
addl
and
cli
or
add
orl
adc
rorl
ret
pop
add
flds
pop
inc
inc
xchg
rorb
cmp
dec
add
dec
mov
and
adc
test
sub
push
aad
leave
jne
rolb
inc
shll
mov
and
in
hlt
fwait
call
dec
dec
rolb
jbe
test
sub
or
pushf
scas
clc
mov
sahf
test
ja
in
add
mov
adc
pop
gs
push
mov
and
jne
fmuls
jmp
add
xor
add
rolb
sahf
push
xchg
lock
out
mov
add
mov
inc
and
inc
cld
push
je
in
or
adc
je
add
jo
test
push
sub
adc
inc
xor
xchg
or
sahf
push
xchg
add
call
push
adc
inc
and
mov
imul
adc
and
scas
stos
orb
ficoml
popa
add
lret
inc
pop
sbb
pop
in
adc
into
adc
mov
std
mov
out
imulb
xchg
xor
mov
jle
xor
movsb
call
adc
cld
jnp
lock
xchg
test
push
ja
lea
flds
pop
cli
dec
call
fadd
jae
xor
adc
les
inc
popa
pop
imul
mov
int
stc
inc
adc
lret
sub
xchg
inc
hlt
mov
int3
test
jle
xchg
sbb
sbbl
cmp
stos
lock
pop
add
popa
fldt
adcb
lods
adc
mov
push
fistps
add
pop
mov
push
ja
or
add
mov
shrb
ljmp
rcrl
pop
mov
inc
fs
scas
repnz
adc
rcll
add
dec
pop
fdivl
pop
outsl
test
cmp
add
add
mov
xlat
adcl
push
iret
adc
xchg
and
push
cmc
lret
repnz
dec
ss
dec
mov
pop
and
arpl
dec
sbb
pop
sbb
pop
add
xchg
xor
push
cmp
std
mov
andl
fsts
pop
adc
mov
pop
mov
sbb
inc
sub
dec
dec
lods
push
sub
shll
and
sbb
loope
data16
jnp
sub
xchg
or
mov
or
prefetch
xor
out
fnstsw
add
push
lahf
daa
adc
cmp
mov
cmp
dec
imul
mov
add
andb
sbb
bound
xchg
adc
pop
leave
stc
ja
sbb
adc
in
inc
rorb
inc
aaa
incl
sub
or
jmp
push
rolb
stos
mov
sbb
or
fwait
mov
xor
jno
add
mov
add
orl
push
fadd
inc
add
sub
sahf
in
ljmp
xor
add
outsl
push
movsl
leave
inc
jbe
inc
mov
mov
push
nop
push
adc
adc
jge
xchg
pop
lods
jl
fisubl
cmc
decl
incl
dec
or
movsl
aad
andb
push
add
push
inc
movsl
jecxz
das
or
fidivrl
ficoms
hlt
stos
xchg
inc
cmp
aaa
mov
mov
push
insl
cmp
mov
jmp
cmp
sbb
dec
fcoml
xchg
mov
mov
adc
push
in
ret
inc
shrl
sar
pop
call
shrl
mov
ret
sahf
out
add
lcall
mov
insl
push
dec
add
mov
push
pop
out
push
and
push
inc
add
pop
ljmp
and
cld
sbb
into
dec
testl
fwait
and
push
inc
insl
decl
mov
push
xchg
adc
sub
fists
test
mov
inc
ds
mov
jg
shll
enter
insl
fisttpll
test
aaa
outsb
icebp
xchg
and
test
test
mov
push
cmpsl
into
sbb
add
mov
mov
pop
adc
lods
mov
jno
push
lods
jmp
test
rclb
push
or
popa
mov
mov
lock
or
fidivs
or
pop
sub
daa
movsl
rorl
sti
mov
rol
mov
in
in
xchg
pop
jecxz
push
fadds
push
mov
sub
inc
pop
inc
pop
xor
pushf
mov
xchg
dec
lock
sti
outsl
cld
jns
je
add
sbb
jo
and
nop
aaa
cld
pushl
cs
iret
lea
push
lods
sbb
jo
mov
adc
mov
out
jb
jle
int3
pop
cmp
mov
jne
pusha
loope
and
fwait
sub
dec
mov
sbb
shrl
clc
les
dec
dec
cmp
pop
shl
stos
dec
js
mov
insl
test
sbb
ficompl
jg
mov
movb
sarb
imul
add
repnz
jp
cmp
lods
dec
leave
out
imul
cs
mov
movsb
fisttpl
xchg
decb
mov
sbb
pop
xor
add
lods
in
bound
add
adc
ficoml
push
adc
and
or
add
xor
xor
mov
mov
sub
test
cmp
inc
jmp
mov
popa
pop
repnz
dec
pop
push
jl
mov
adc
sahf
push
adc
cmp
sub
xchg
pop
pop
add
jnp
pop
ficoms
sbb
add
xor
add
add
aad
or
inc
add
push
roll
adc
jmp
inc
cmp
dec
mov
dec
or
movsl
rclb
pusha
nop
pop
pop
adc
or
pusha
out
mov
lcall
mov
cmp
dec
cmpsb
out
add
mov
add
push
mov
add
pusha
inc
movsl
cmp
ljmp
in
pop
and
shlb
adc
stos
adc
inc
push
or
rorb
xor
lsl
push
mov
add
sbb
inc
or
inc
sub
stos
es
andb
stc
decb
adcb
test
jne
mov
movsl
lock
push
xchg
mov
xchg
jp
adc
pop
jns
push
mov
mov
sarl
add
mov
cmp
ret
mov
inc
or
adc
cmp
shlb
mov
inc
int
hlt
or
adc
xlat
cltd
ret
jno
inc
popa
cli
or
or
jecxz
add
leave
add
mov
sub
in
and
or
outsl
dec
push
loopne
cmp
test
rorl
in
inc
cmp
aad
test
and
inc
mov
jo
sbb
jmp
pop
pusha
push
cmc
sbb
xchg
inc
adc
xor
and
mov
push
jp
enter
add
fsts
addr16
pop
inc
push
int3
cli
xchg
mov
mov
test
rcrb
pop
in
push
push
push
jmp
js
sar
dec
enter
inc
popa
addr16
jl
add
adc
or
shlb
jbe
int
int3
rcr
xchg
stos
cwtl
cmpsb
push
jge
sbb
inc
subb
test
adc
faddl
dec
push
dec
push
mov
aaa
xchg
sbb
mov
push
xor
xor
mov
xchg
lret
sbb
pop
ds
jbe
sub
push
jg
pushf
xchg
xor
test
sbb
enter
into
jae
mov
fists
fcmovb
and
test
pop
test
ja
sbbb
sub
ret
add
push
jl
test
cmpsl
icebp
adc
push
test
cld
adc
aad
inc
xchg
ljmp
ja
rcll
cmp
movsb
loop
and
shrb
xchg
iret
pop
push
add
jp
pop
xchg
jmp
pop
or
hlt
sbb
add
mov
cli
insl
dec
pop
and
or
hlt
test
add
loope
mov
push
in
jp
adc
rorb
loope
inc
adc
enter
adc
mov
mov
js
adcb
js
loop
add
push
and
dec
xor
or
push
jnp
adc
sti
jge
xor
fs
rcll
add
in
lret
inc
adc
fwait
push
adc
and
int
call
int
add
in
sbb
push
jg
mov
mov
mov
addb
movsl
and
xor
cmpsb
nop
mov
movsl
nop
fiaddl
adc
les
lcall
test
iret
dec
inc
jbe
imul
ljmp
mov
into
pop
les
outsb
adc
jne
inc
pushf
add
rcll
pusha
sbb
inc
stos
decl
push
and
nop
icebp
and
jo
adc
adc
es
das
test
jo
out
push
in
adcb
nop
adcl
and
xchg
adc
adc
dec
call
loopne
inc
lock
test
xchg
pop
mov
cld
lcall
dec
adc
adc
insb
mov
popf
adc
adc
les
das
lahf
decl
je
rclb
enter
mov
fnstcw
cld
push
ret
adc
in
nop
test
or
jae
mov
sbb
jmp
nop
call
adc
out
pop
loop
add
mov
pop
insb
inc
mov
dec
into
xor
and
mov
insl
add
test
inc
shlb
pushf
and
insb
pushl
loopne
rolb
xor
add
leave
and
inc
and
cli
xchg
pop
repz
add
sbb
mov
call
add
jle
push
inc
xor
jg
and
bound
adc
js
sub
das
push
hlt
inc
jb
and
in
mov
and
enter
mov
add
and
loopne
stc
orl
jns
mov
sub
daa
scas
ds
and
das
cmc
xor
les
decl
mov
popl
sub
stos
dec
dec
mov
insl
mov
jg
ffreep
xchg
inc
sub
int3
and
add
imul
lcall
fld1
imul
dec
sbb
sub
in
dec
jg
test
or
call
cmp
dec
aas
inc
pushf
jno
mov
aad
imul
aad
clc
ljmp
pop
push
xchg
loopne
ds
addb
sbb
xchg
fisttpl
mov
push
fadds
lock
and
pop
xor
dec
subb
cmp
mov
add
js
sub
pop
and
xchg
push
mov
test
je
mov
xchg
inc
sub
cmpsb
jmp
mov
lods
inc
dec
add
fsubrl
jecxz
test
lods
out
add
cmc
in
popa
or
imul
das
test
out
dec
call
dec
mov
pop
jl
or
out
cld
mov
popl
mov
lock
hlt
inc
sub
mov
int3
pushfw
imul
inc
cli
push
push
xchg
jne
testb
mov
cmp
pop
and
add
shr
sbb
push
pop
dec
fs
push
dec
inc
jg
pusha
or
jg
adc
jp
add
jnp
fucomp
mov
aaa
cli
decl
inc
bound
cmp
divb
outsb
mov
mov
mov
fwait
or
lods
push
jge
fists
jne
arpl
test
mov
les
add
or
push
mov
mov
nop
sub
xlat
mov
push
xchg
or
ljmp
cld
xchg
cmp
in
mov
jp
inc
xchg
popf
ror
jb
xor
xor
cmc
fisttpl
jne
xchg
add
mov
inc
pop
and
cmpsl
add
cmp
pop
push
fwait
push
inc
inc
jle
std
sub
pusha
mov
push
sbb
aaa
orl
add
out
xor
nop
mov
scas
pop
sbb
jg
push
push
pop
jmp
test
jae
pop
lcall
or
mov
inc
pop
dec
jp
test
int
and
xor
fisubs
or
inc
sbbl
push
sti
lcall
mov
test
push
or
sub
call
gs
sub
in
mov
fcoms
fadds
popa
cmp
add
cmp
inc
lock
or
out
jp
rcll
jmp
sub
cmp
inc
push
bnd
aas
or
adc
and
cltd
xor
xchg
add
dec
push
stos
addl
push
icebp
add
es
stos
mov
pushf
jl
add
in
xchg
mov
mov
push
ds
xor
test
insb
dec
lahf
cs
movsb
ljmp
jns
jbe
xchg
mov
push
mov
or
adc
or
in
pop
pop
xlat
test
xchg
push
mov
inc
test
insl
iret
gs
dec
into
xor
mov
pushf
enter
icebp
lahf
movsb
fistpl
cld
insl
fimuls
mov
sbb
daa
mov
push
and
ljmp
and
pop
sub
mov
fistpll
adc
hlt
add
sub
inc
push
rcrb
xor
mov
push
inc
mov
add
std
mov
adc
sub
aas
ljmp
dec
pop
scas
add
insl
dec
inc
jne
cmp
call
add
dec
push
mov
roll
sti
jl
pop
and
push
in
push
outsl
movsl
sbb
mov
arpl
roll
jmp
xchg
xchg
adc
out
pop
or
adc
adc
inc
mov
int3
repz
add
mov
mov
inc
out
hlt
jo
mov
ja
cmp
add
in
push
hlt
daa
orl
es
lea
or
dec
xlat
pop
mov
lret
sbb
sbb
aad
sub
adc
mov
add
in
mov
jg
push
jge
adc
inc
sub
add
cmp
fwait
pop
loopne
cmp
mov
lock
call
outsl
sar
add
jmp
aaa
dec
aam
in
and
jge
loopne
push
xor
adc
sbb
cmpsl
mov
mov
stc
or
out
movsl
sbb
test
sbb
shlb
test
pop
nop
jne
mov
ljmp
cmp
adc
sbb
test
push
xchg
jb
xchg
mov
adc
ljmp
je
mov
in
stc
sbb
mov
shl
loope
movsb
cld
lret
cli
out
pop
jbe
mov
adc
or
iret
xor
dec
insl
push
rcrb
mov
sbb
testb
push
sub
lahf
inc
adc
jge
in
nop
inc
insb
inc
cmp
popl
lret
hlt
aas
imul
xor
jae
ja
push
push
push
and
xor
adc
les
add
pop
mov
cli
jge
xchg
cld
xor
mov
add
push
add
outsl
adc
cmp
sbb
push
inc
dec
push
inc
sahf
add
pop
rcl
sti
std
daa
dec
sub
mov
mov
loop
pop
xor
xchg
push
mov
or
add
aam
jmp
or
rcrb
xchg
mov
aam
cld
or
notb
insb
aaa
lock
outsl
imul
cmp
in
jl
mov
outsl
push
pop
lods
mov
jle
pop
cwtl
push
sbb
mov
mov
pop
dec
inc
xor
push
or
add
and
popa
lret
loop
repz
fsubrs
adc
mov
push
dec
push
push
or
or
mov
data16
push
sub
mov
ljmp
test
adc
jle
stos
icebp
addr16
dec
xchg
out
lock
and
add
adc
mov
movsb
adc
pop
fildl
int3
jae
inc
mov
mov
bound
mov
dec
outsl
jo
inc
dec
lods
test
in
push
rcll
cmpsl
and
mov
cmp
jmp
loopne
or
xchg
jno
lret
test
mov
inc
and
push
xor
stos
in
jg
inc
fstpl
aam
push
add
push
mov
and
xchg
cmp
test
adc
je
subb
sub
insl
lods
mov
xlat
sbb
das
lock
pop
push
dec
add
push
adc
push
add
insl
shl
lea
sub
cmp
mov
hlt
pop
sahf
adc
pop
inc
mov
pop
gs
es
fadds
imul
xor
scas
or
jl
js
sub
jecxz
loope
or
mov
rcl
add
fisttps
insl
outsl
mov
hlt
fs
xor
adc
or
sub
jno
loop
mov
push
jecxz,pt
lea
addr16
imul
cmc
ret
add
in
push
hlt
repnz
bound
xchg
push
out
cmp
aaa
push
jge
pop
jbe
mov
cmp
mov
fisttps
mov
into
shlb
imul
cmp
in
test
xchg
sbb
xor
mov
dec
mov
out
or
jmp
cmp
frstor
shlb
fcoml
in
inc
mov
in
rorl
jl
cwtl
cmpsl
jecxz
adc
cli
xor
gs
orb
pop
inc
ret
in
cmp
mov
pushl
or
pop
and
sbbl
ret
imul
incl
repz
es
sbb
scas
jmp
dec
and
xchg
inc
rcrb
and
cmpsb
call
dec
xor
xor
fcmovne
mov
dec
data16
lcall
jo
sahf
cmp
outsl
pop
int3
or
pop
unpcklps
push
and
mov
loop
test
push
mov
dec
jg
jmp
pop
adc
adc
addb
insb
and
repnz
sahf
add
mov
xchg
stos
add
or
mov
loopne
or
mov
gs
lock
cmp
int3
das
cld
inc
mov
loope
repz
ret
mov
push
jne
shrl
dec
je
inc
adcb
mov
xlat
decl
jmp
jmp
mov
movsl
adc
xor
pop
daa
mov
aas
insl
adc
and
hlt
ret
sub
xchg
fs
fstps
popa
rolb
test
mov
dec
incl
test
xor
das
add
jle
cmp
push
xchg
fdivl
pop
fistps
xor
in
xchg
sub
xorb
push
pop
xchg
push
imul
notl
mov
jl
inc
pop
mov
jbe
bound
std
sbb
das
repz
lea
jle
jo
rclb
jmp
pop
dec
sahf
mov
cld
movsl
and
pop
adc
or
lahf
cmp
dec
das
xchg
mov
dec
cld
js
pusha
cmp
sbb
test
xchg
jmp
sub
ss
jecxz
add
jne
decl
outsl
pop
shl
adc
cmpl
sub
lcall
mov
or
push
mov
lods
push
jno
movsl
lds
out
sbb
jg
jp
dec
insb
cmp
mov
pop
imul
push
ljmp
sbb
cltd
push
or
mov
cmp
leave
adc
and
icebp
sar
jp
mov
cmp
mov
pcmpeqd
jnp
fwait
and
pop
incb
ret
mov
repnz
cmc
mov
hlt
add
pop
adc
lods
shrl
les
sub
mov
pop
jmp
mov
inc
add
add
inc
add
fisttps
mov
mov
add
loope
call
aaa
xor
in
lret
xor
mov
sub
xor
and
cli
push
inc
lret
int
fs
push
adc
bound
mov
mov
je
aaa
mov
xor
cmpb
xchg
inc
loop
jg
ret
jmp
dec
mov
jp
inc
and
push
mov
jl
xchg
pusha
inc
inc
and
sub
nop
jne
sub
lods
push
shlb
pusha
push
xor
adc
mov
mov
add
daa
adc
mov
sarl
cld
and
sarb
movsb
addb
adc
es
in
mov
and
je
cmpsb
repz
pop
cmp
jp
jno
ficoms
rorl
ror
mov
imul
xchg
mov
js
cli
mov
xor
outsl
icebp
pop
sti
and
add
mov
mov
jb
inc
or
mov
push
add
and
std
or
adc
inc
or
repz
mov
and
pop
add
aaa
or
xor
adc
add
jl
mov
out
and
xchg
aam
in
push
mov
xor
push
adc
pop
int3
js
or
adc
subl
push
mov
stos
mov
pop
pop
das
divl
movsl
xlat
jecxz
sbb
sbb
lds
popf
dec
shll
xor
pinsrw
fiadds
dec
addb
jl
push
adc
fnstcw
out
adc
test
push
and
push
push
push
sub
rcr
aas
xchg
jp
pop
sar
mov
dec
mov
and
aad
inc
adcb
jnp
inc
jle
adc
rcll
hlt
lods
xor
cltd
sub
nop
call
or
adc
enter
and
add
add
in
sub
pop
pop
inc
pop
jne
mov
pushl
into
out
ret
js
jo
mov
jl
and
adc
mov
mov
ljmp
ljmp
push
mov
fidivrl
jecxz
rcrl
nop
inc
ror
and
call
dec
aaa
shl
ljmp
cmp
add
dec
aam
add
ja
cmpsl
cmp
cmp
sbb
je
movsb
loop
decl
scas
xchg
fists
adc
lcall
les
mov
test
adc
pop
mov
and
or
and
jle
mov
pop
sbb
xchg
aam
das
cld
shlb
mov
mov
xchg
and
and
push
lock
dec
insl
mov
sti
and
nop
mov
jbe
repz
jg
ljmp
pop
or
iret
inc
stos
mov
ret
inc
jge
push
loope
cld
jns
jg
fwait
inc
jecxz
cmp
jl
pop
xchg
nop
and
xchg
push
and
dec
lcall
lock
fisubs
sbb
xorb
push
inc
fmull
pusha
icebp
in
ljmp
inc
push
xchg
mov
xchg
movsb
sub
pop
pop
add
cmp
sub
xchg
inc
or
sub
into
out
mov
jne
xor
jg
xor
cmp
test
sbb
mov
dec
fldl2e
jg
pop
pushl
es
shlb
mov
je
and
mov
scas
cmp
xchg
mov
dec
sub
fimull
stc
fbld
mov
daa
cmc
inc
sbb
outsb
mov
lret
iret
bound
std
mov
call
xchg
adc
rolb
mov
test
push
xor
mov
inc
pop
xor
jg
inc
data16
adc
inc
and
popa
js
js
push
out
jecxz
jl
in
dec
ljmp
push
dec
shrb
cmp
sbb
das
pcmpeqb
mov
add
decl
fs
loop
jecxz
mov
push
and
pushl
pop
lods
sbb
pop
and
push
pop
pop
fwait
inc
and
cwtl
add
movsl
les
mov
cmp
mov
repz
in
scas
inc
xor
out
adc
imul
cmp
mov
xchg
sub
inc
fisubl
testl
fcmovu
inc
lods
les
jne
xor
inc
pop
add
add
scas
add
orb
xor
filds
push
out
loopne
rcrb
and
jge
push
arpl
decl
mov
mov
adc
popa
mov
imull
ret
stos
mov
ss
mov
and
lods
jmp
outsb
std
push
pop
pop
xor
push
shrl
into
xchg
cmp
push
sbb
adc
js
cmp
je
jb
add
cwtl
lea
aam
mov
jg
push
and
aaa
fsubs
pop
or
sahf
int
hlt
lcall
mov
pop
arpl
sub
jne
push
dec
aam
mov
pop
inc
pop
xchg
add
push
popa
sub
aad
inc
das
push
jg
or
rorl
lea
incl
xor
loope
jns
mov
imul
mov
mov
mov
lods
dec
add
add
sahf
lods
push
dec
mov
fwait
loope
lret
push
sar
push
ljmp
incl
xor
push
add
fisttps
or
dec
sbb
mov
adc
push
mov
jg
add
lret
push
lock
inc
outsl
inc
push
outsl
ljmp
sub
call
ds
add
sbbb
add
lcall
out
ljmp
int3
add
mov
loop
adc
ljmp
sbb
jno
icebp
les
andb
and
xor
sti
arpl
in
xor
push
xchg
fiaddl
test
mov
push
in
fstpt
pop
cmp
repnz
in
pop
cvtdq2ps
or
jns
jg
and
mov
clc
shll
adc
jle
fldt
idivb
sbb
adc
jg
jl
mov
jecxz
xlat
mov
dec
std
call
push
mov
xchg
and
ljmp
adc
inc
pop
pop
mov
enter
stos
push
pushf
or
outsb
sbb
mov
test
add
mov
loope
pop
cmpb
cmp
xor
aaa
cli
mov
xor
add
daa
nop
add
dec
jmp
mov
inc
lahf
mov
addb
rolb
ret
or
mov
outsl
pop
clc
test
add
in
inc
sub
andb
jb
adc
je
push
push
inc
add
push
insb
decl
pop
mov
mov
insl
inc
mov
sbb
add
js
lods
adc
add
mov
stos
stos
pop
test
add
fidivs
add
mov
fwait
adc
sub
add
mov
push
inc
test
fwait
arpl
and
outsl
sub
inc
push
imul
mov
inc
addb
sti
inc
mov
arpl
cmp
sarl
lods
or
mov
push
int
mov
leave
inc
or
ret
ret
mov
adcb
and
out
dec
cld
inc
pop
pop
pop
jne
jb
sub
pusha
orl
loope
call
stos
lret
jge
xor
andb
add
mov
adc
xchg
push
add
mov
sbb
mov
or
dec
mov
inc
rcrl
add
ja
mov
add
cmp
pop
pop
jbe
xchg
push
add
clc
sbb
cmp
adc
lods
outsl
xor
pushl
push
inc
mov
pop
inc
cmp
pusha
adc
ss
mov
fldenv
mov
mov
mov
int
add
or
cmp
mov
sti
sti
sub
bound
mov
mov
or
add
fcomps
and
and
dec
fsubrs
mov
push
or
daa
pop
push
pop
nop
pop
and
xor
and
push
sahf
lds
push
jg
and
inc
dec
stc
pusha
inc
inc
fildl
xor
addr16
lret
sub
push
icebp
fiadds
xor
sub
xlat
mov
int3
add
sub
adc
imul
cmp
inc
xchg
pop
insl
push
test
push
push
inc
and
push
adc
lock
je
aam
mov
adc
lods
mov
lahf
xchg
push
mov
ret
rclb
dec
lahf
sub
xchg
inc
stos
mov
jg
mov
inc
hlt
int
lods
xchg
and
insb
add
cmpsb
les
or
out
mov
pop
cmp
inc
xchg
mov
fisttpl
sub
push
adc
sub
push
adc
sbbl
and
push
jg
mov
sbb
inc
add
xor
xor
das
or
inc
dec
add
and
or
str
pop
sbb
jns
adc
add
add
sarb
roll
or
lret
adc
mov
in
or
xor
inc
sub
sbb
fdivs
sbbl
sbb
sbb
mull
sub
push
fdivrs
xor
cs
icebp
out
testb
adc
pop
inc
les
shrb
pop
in
sub
xor
adc
inc
iret
fdivl
adc
or
add
stos
push
or
loopne
inc
iret
aas
lock
adc
fadd
push
lods
push
xor
mov
inc
mov
sub
or
outsb
testl
subl
imul
and
test
mov
dec
or
cli
icebp
ret
fwait
call
addr16
or
or
out
popf
call
mov
call
xchg
mov
jb
jl
dec
xchg
pop
push
sbb
jns
or
add
imul
bnd
data16
add
adc
sbb
ss
add
xchg
cmp
out
xor
mov
nop
xchg
lods
mov
fwait
in
imul
fcoms
pop
inc
cmp
mov
sbbb
mov
orl
shr
sbb
sbb
inc
outsb
pop
push
sub
push
dec
inc
xchg
jg
push
mov
add
movaps
cs
inc
cmc
dec
notb
in
or
clc
and
cs
addr16
add
mov
call
inc
aas
adc
out
cmp
xor
sub
adc
ret
pop
inc
push
minps
data16
mov
adc
xor
mov
jmp
fimuls
jge
mov
sub
imul
mov
pop
rcr
add
jnp
push
add
and
cld
cs
and
add
sub
add
aaa
cltd
mov
mov
sub
mov
sbb
xchg
xor
mov
mov
sbb
add
push
sub
add
nop
sbb
arpl
mov
or
and
cltd
sub
mov
add
stos
inc
test
clc
cmc
inc
imul
fistl
inc
add
repnz
add
adcb
xor
pop
mov
push
mov
movsb
cmp
adc
cltd
pushl
popa
bound
pusha
lods
and
filds
insb
dec
xor
pop
sub
jl
ljmp
add
loopne
test
adc
add
dec
cmp
and
inc
mov
mov
or
xlat
sbb
in
movsb
shrl
stc
das
in
cmp
push
lds
fcoml
xor
pop
fmuls
add
add
test
testl
dec
gs
rclb
dec
in
inc
mov
mov
sbb
xor
test
stc
in
cld
pop
inc
or
fdivl
xchg
rolb
hlt
mov
mov
clc
ss
sbb
sub
and
imul
sbb
jmp
push
inc
int3
fldl
add
xor
jnp
xchg
repnz
sub
dec
inc
xor
mov
daa
sti
orb
mov
jp
mov
push
lahf
adc
and
rolb
gs
stos
mov
cs
fdivr
adc
loope
pop
sub
sub
lds
add
or
mov
jl
repz
jnp
and
inc
xor
cmp
int
mov
loopne
loope
sub
insl
insl
iret
lds
faddp
icebp
and
and
pop
mov
sbb
shlb
inc
mov
jg
js
loope
ds
mov
scas
fdecstp
mov
add
aas
js
pop
cmp
pop
mov
dec
mov
inc
out
out
cmpsl
sub
insb
or
adc
test
icebp
push
stos
cli
std
pop
adc
or
push
mov
enter
jmp
cmp
jno
out
imulb
les
out
cltd
nop
inc
decl
fdivrl
les
jbe
mov
subb
lock
pushl
scas
jecxz
mov
inc
jno
jg
mov
dec
jnp
mov
adc
adc
jo
push
lods
loope
add
sbb
and
inc
test
add
or
and
stos
addl
push
aaa
inc
jns
push
xchg
and
jg
xchg
jnp
fcmovb
arpl
fdiv
hlt
and
cmp
add
nop
xchg
in
out
push
leave
sbb
push
mov
in
mov
subb
jl
add
jbe
push
adc
inc
pop
cli
sub
mov
loop
int
or
and
notl
mov
sbb
push
or
inc
cld
cmp
aam
mov
icebp
imul
sti
mov
xchg
cmp
cmpsl
jg
ja
push
loop
or
loope
lret
cwtl
adc
mov
es
movsb
nop
push
push
cwtl
or
dec
cmp
les
push
mov
rclb
fsubl
xchg
notl
shll
inc
jns
xchg
mov
inc
pushl
add
xor
push
jl
cltd
sub
fldl
or
idiv
lcall
cwtl
jns
inc
sbb
mov
push
pop
add
mov
test
adc
cld
or
xchg
addr16
sti
iret
lods
hlt
mov
mov
lahf
int
or
lcall
push
jns
push
enter
in
jmp
mov
jg
mov
dec
xor
push
hlt
icebp
jge
insl
cmpsl
fwait
jp
mov
sbb
jb
xor
jb
popf
inc
and
scas
and
rcr
clc
out
or
addr16
loop
jge
popl
xor
lcall
and
mov
lret
arpl
lea
inc
sbb
aad
add
movsb
in
std
mov
sbb
pop
inc
sbb
das
cld
inc
ret
xorb
je
aam
cmpsb
and
decl
add
ficoml
sbb
sub
xor
fildll
clc
xor
push
and
cmp
shll
or
cmpl
roll
arpl
inc
shll
or
ljmp
lock
lcall
les
popf
or
ret
data16
mov
push
repnz
push
and
and
imul
lds
mov
push
or
xor
and
or
xor
dec
aad
jae
inc
xchg
mov
ficomps
dec
cld
inc
push
pop
roll
cmpsl
mov
sub
into
cmpsb
push
sbb
and
dec
dec
and
push
xchg
rclb
testb
mov
adc
dec
pop
xchg
sti
lahf
push
nop
add
xchg
out
rcl
mov
imul
cmpsl
cwtl
test
jp
dec
inc
rcr
mov
notl
inc
and
xchg
and
andb
test
dec
jg
sub
faddp
push
arpl
cmc
in
int3
pusha
pop
mov
mov
inc
lods
inc
or
or
pop
nop
push
adc
mov
dec
mov
push
hlt
ret
adc
test
pop
cld
adc
push
fildll
cmp
in
pop
js
pop
clc
loope
pusha
mov
les
dec
cmp
inc
and
test
push
mov
rcrb
sub
inc
xchg
nop
and
aam
int
negl
or
rorb
bound
mov
test
aaa
sub
dec
adc
jo
push
ffreep
add
or
lfs
cmp
mov
pop
in
xchg
movsb
mov
cltd
das
cs
addl
cmp
dec
stos
sahf
xor
repz
pusha
stos
cli
push
cli
mov
inc
sbb
aam
add
adc
pop
dec
adc
mov
iret
divb
mov
test
and
mov
push
aad
xchg
ficoms
pop
leave
jmp
or
mov
adc
jbe
xorps
or
faddp
or
xor
pop
lds
ret
popa
sbbb
aam
cmp
add
movsb
pop
addr16
add
pop
aam
pop
and
out
fwait
lods
add
push
push
push
push
test
lea
add
clc
std
aam
data16
add
ja
mov
clc
xor
adc
add
je
sbb
mov
xor
ror
jle
push
push
xchg
xchg
add
cmc
push
and
stos
mov
scas
mov
fildl
incb
xor
dec
add
inc
nop
pop
or
and
hlt
test
xchg
les
dec
mov
test
jge
add
push
idivb
dec
mov
adc
mov
stos
inc
add
adc
int
adc
insb
jmp
out
pop
add
inc
adc
push
push
decl
jmp
in
fiadds
inc
dec
decl
jne
orl
sbbl
push
mov
ficoml
pop
arpl
dec
jmp
push
add
pop
cmpsl
adcb
dec
sbb
inc
cmpsb
or
cld
cmp
in
fs
repz
pop
push
scas
xor
adc
fildll
push
fstpl
shlb
xchg
cld
adc
ljmp
add
xlat
adc
mov
xchg
fsubl
pusha
adc
loopne
fistpll
inc
lcall
test
xor
and
imul
push
xchg
push
fs
or
icebp
lods
inc
adc
aad
mov
inc
ljmp
push
lcall
dec
hlt
inc
add
and
xor
dec
or
xor
xchg
cmpsl
or
call
push
dec
sbbb
mov
shlb
pop
mov
sub
xchg
mov
lret
cld
mov
sub
and
adc
out
bound
xchg
push
stos
popa
add
lcall
push
push
cmp
dec
addl
dec
aaa
adc
in
cmp
cmpsb
loope
xchg
add
mov
cmpsl
call
scas
lock
mov
test
lock
adc
ljmp
outsl
clc
inc
lcall
xorb
dec
loope
and
pop
jbe
mov
addr16
lcall
ret
sub
jmp
lcall
int3
mov
xor
sbb
aad
out
push
lea
push
sbb
incl
loope
lret
and
add
dec
loope
loopne
popf
nop
cmpl
leave
outsl
rolb
cli
mov
jecxz
xchg
ret
lcall
das
inc
add
pop
js
outsl
xchg
lock
and
pop
clc
lret
add
adc
stos
push
repz
outsb
lock
jmp
mov
movsb
mov
std
pop
cmp
and
ss
inc
mov
dec
repnz
or
xor
jno
adcl
cmc
cmc
and
mov
popf
dec
sbb
in
push
repz
in
in
shrb
mov
loopne
inc
and
stos
xor
lcall
mov
inc
dec
pop
pop
pop
push
testb
in
cwtl
mov
mov
inc
test
sub
je
hlt
adc
adc
fiadds
ja
push
pushf
inc
aad
lock
mov
cmp
outsl
in
inc
je
inc
lret
subb
xchg
sbb
sub
mov
adc
sti
cmp
ret
loopne
inc
push
and
and
inc
dec
adc
es
dec
pushf
xchg
add
and
cmp
add
xlat
ja
jno
xchg
jmp
lds
xchg
adcb
fcmovne
popa
add
negl
and
mov
out
cmpsb
and
inc
test
and
adc
mov
fsubl
lods
popf
fdivr
or
pushf
mov
inc
mov
inc
mov
cmp
loopne
mov
inc
mov
lds
and
adc
cmc
xor
hlt
test
and
pusha
add
pop
iret
xchg
and
dec
xor
add
pop
scas
and
aaa
and
pop
inc
and
pop
sarb
inc
rolb
orb
add
in
ja
xchg
adc
xchg
shrb
add
add
lcall
or
sub
in
cmp
or
and
inc
pusha
inc
loopne
dec
mov
das
mov
pushf
fadds
jo
add
repnz
or
dec
loopne
mov
adc
ljmp
or
in
inc
loope
sbb
insl
pop
imul
or
adc
adc
aaa
add
fsubl
jno
mov
aaa
dec
sti
xorb
negb
add
add
dec
in
xor
outsl
jg
add
inc
dec
or
mov
mov
push
cltd
xchg
add
or
incl
push
cmpl
dec
pop
shlb
push
cld
jmp
lahf
mov
shl
sbb
pusha
outsl
cmc
jg
rcrb
fisttpl
or
xor
mov
add
mov
icebp
rorb
inc
jne
xchg
stos
or
rcll
test
xchg
inc
movsl
cmp
add
adc
inc
inc
cli
cmp
and
cs
jb
shll
inc
inc
push
mov
and
xor
das
mov
fiaddl
in
sub
lret
sbb
ja
hlt
push
mov
sarb
fwait
or
idiv
and
and
sub
cwtl
ret
out
add
adc
xchg
mov
test
cmp
or
adc
mov
sbb
es
lds
cmp
fisttpl
lea
fnstcw
xor
sbb
daa
xor
adc
roll
in
ljmp
cmpsb
jne
xchg
ds
xchg
and
dec
shll
pop
dec
adc
nop
les
mov
iret
and
fimull
adc
insl
je
std
inc
mov
cld
mov
daa
lcall
inc
jb
sbb
clc
decl
js
repnz
xorl
cmpsl
mov
clc
jmp
mov
push
dec
es
aam
mov
iret
std
jo
mov
jp
adc
jae
mov
push
stos
je
scas
icebp
rcrb
cmp
cs
mov
xchg
mov
jo
add
cmp
inc
cli
or
sbb
add
jl
sbb
dec
cmp
sbb
jecxz
jbe
call
leave
pushf
stc
outsb
mov
movsb
xor
andb
movsb
repz
sub
cltd
les
stc
mov
rcrb
pop
push
jle
jp
sub
ljmp
jecxz
pop
cwtl
mov
lahf
push
outsl
mov
xchg
xor
mov
dec
mov
push
add
inc
push
add
add
inc
sbb
cmpsb
sti
lcall
or
inc
and
mov
insl
jg
mov
or
adc
inc
ljmp
xlat
sub
mov
inc
mov
lret
test
decl
xchg
or
insl
mov
mov
push
data16
cmp
mov
jecxz
sbb
xchg
lret
ja
clc
sub
mov
ds
pop
adc
inc
sar
insl
push
cmpsl
add
ljmp
jmp
inc
ror
inc
shl
call
xor
fcoms
outsl
add
pop
or
inc
xchg
repz
lock
mov
lcall
js
pop
inc
mov
sbb
rol
mov
pop
rolb
lds
inc
pop
stos
cwtl
rorb
dec
ja
mov
or
jb
fsts
pushl
mov
loope
adc
roll
imul
fdivs
add
push
add
jg
and
popf
fbstp
js
cwtl
push
sarb
jecxz
test
jg
rcrb
add
insb
int
inc
aas
pop
aam
idiv
jmp
mov
mov
aam
xor
fistps
decl
in
sub
push
popa
fcmovb
call
les
xor
int3
xchg
push
dec
nop
push
adc
das
leave
gs
dec
cld
cmpsb
out
cmp
cmp
loope
out
sahf
lock
ljmp
jge
addr16
movb
cmp
sub
dec
cs
jnp
test
jg
hlt
mov
nopl
fbstp
or
mov
icebp
lcall
testl
mov
mov
and
or
fucomip
ds
sub
cmp
mov
sbb
lcall
push
sub
inc
push
dec
pop
stc
xor
and
mov
test
xchg
sahf
jns
sub
jmp
dec
dec
addb
outsb
sti
dec
test
pop
lret
lods
xor
daa
push
cmp
in
outsb
std
lcall
adc
lds
jmp
jbe
test
jg
mov
pop
mov
and
dec
cmpb
movsl
arpl
out
addb
pushl
jne
int3
imul
aam
stc
mov
sub
push
push
dec
sbb
pop
add
mov
movsb
mov
jecxz
mov
and
mov
mov
mov
mov
aam
inc
mov
mov
mov
loope
add
xor
inc
xor
lea
pop
mov
outsb
push
add
lret
inc
jo
jae
clc
rorb
call
adc
inc
fildll
and
sbb
mov
scas
jge
mov
insb
jne
inc
mov
sub
test
sti
jae
sub
test
stos
xchg
push
scas
sbbb
lahf
sahf
push
icebp
mov
adc
neg
mov
mov
ds
popa
mov
pop
adc
cmp
fwait
jle
adc
adc
xchg
sti
lods
cmpb
cmp
fiadds
repz
add
addb
insb
je
fwait
test
lds
mov
inc
shll
sub
lcall
adc
mov
clc
push
es
xor
add
inc
adc
dec
add
lahf
xchg
mov
add
clc
lretw
lods
stos
lock
loope
popf
outsl
xchg
lock
lcall
pop
out
add
or
xchg
adc
jbe
inc
inc
test
xlat
jle
push
cmp
stos
adcb
mov
xor
push
push
cmp
sub
call
inc
orl
stc
sub
sub
cmpsl
add
ss
xchg
push
jo
pop
sbb
insl
test
push
daa
data16
mov
mov
sub
fwait
loopne
and
cmp
adc
jle
xor
pop
cld
mov
push
shr
repnz
lret
adc
push
fadds
jne
mov
adc
addl
ret
mov
icebp
aas
jp
aad
or
pop
pop
sub
icebp
stos
jno
inc
ret
stos
lcall
cwtl
mov
mov
inc
lea
xor
pusha
mov
and
push
test
icebp
add
mov
push
push
nop
test
insl
les
test
dec
pop
push
cld
and
push
xchg
xchg
push
std
pop
inc
pop
cld
inc
stos
cld
and
xor
std
sub
inc
hlt
and
mov
pop
mov
insl
push
bound
ljmp
shlb
mov
arpl
add
cmp
xor
mov
loop
dec
clc
sbb
pushf
out
pop
imul
add
clc
or
add
outsl
add
xor
or
stc
mov
rol
int
mov
push
flds
xchg
push
mov
rclb
loope
mov
dec
pop
mov
or
xor
add
imul
test
out
pop
fnstcw
icebp
mov
push
push
mov
add
es
ret
xor
sbbb
test
les
mov
addb
aaa
push
jno
stos
pop
lds
test
add
adc
data16
and
in
jb
cmp
addr16
pop
adc
push
add
xchg
add
lods
addr16
or
push
or
push
fisubs
xor
add
and
test
repz
or
fisttpll
cmp
pop
data16
ds
inc
jl
and
aaa
push
push
sbb
sbb
or
xchg
sbb
std
sbb
pop
pop
push
mov
adc
and
adc
mov
xor
inc
rolb
add
add
test
cmpb
push
cvttps2pi
test
mov
in
test
sbb
inc
imulb
push
or
mov
les
sbb
mov
and
test
cmp
cmpsl
jl
cs
enter
call
lcall
push
cmp
adc
cltd
xor
push
sub
mov
xchg
inc
pop
dec
imul
and
xor
shrl
fisttpll
jle
add
jb
or
inc
in
aaa
adc
lea
and
daa
ds
sub
inc
inc
inc
or
pop
inc
int
movsl
cmp
out
sub
cmpl
xor
shr
out
sub
and
pop
add
aas
jmp
lret
xchg
dec
clc
mov
stc
or
cmp
cmp
test
add
adc
push
or
lock
enter
and
xor
add
pop
enter
aad
mov
pop
xchg
mov
push
sbb
adcl
mov
ss
sub
mov
add
mov
mov
pop
outsb
add
dec
leave
ljmp
push
test
lahf
adc
and
xor
or
jle
adc
pop
and
sbb
std
sub
aad
pop
mov
lcall
cld
popa
push
dec
sbb
shrb
push
sub
cmp
push
lock
sub
rcrb
sub
js
mov
adc
shrb
push
mov
das
sub
sub
adc
subl
test
inc
lock
adcb
add
das
lock
push
xchg
mov
dec
lcall
call
loope
clc
in
xchg
add
loopne
add
andl
mov
add
loopne
sub
add
or
xchg
fbld
add
xchg
mov
lcall
adc
jb
xor
loope
sbb
jmp
data16
and
iret
sar
xchg
xor
repz
add
push
or
jae
mov
ret
test
mov
sarb
ret
sbb
sub
adc
loope
sbb
cmp
xchg
shl
pop
add
sub
lds
sub
popf
inc
sbb
add
nop
dec
stos
test
int
in
push
sub
push
mov
and
dec
adc
das
push
inc
dec
clc
pusha
adc
lret
xchg
rcll
cmp
mov
jmp
push
push
iret
and
xchg
add
scas
cmpsb
mov
cmc
dec
test
or
lret
pusha
orb
add
inc
adc
or
sub
add
dec
test
cmp
stc
push
adc
mov
inc
and
shrl
or
inc
add
pop
xlat
jbe
insb
inc
hlt
or
add
xchg
gs
cwtl
loopne
sub
inc
pop
hlt
mov
lods
pop
and
or
pushf
shlb
mov
jecxz
aad
in
test
rorb
or
stos
sub
pop
sbb
xor
or
push
cmpsb
das
lds
popa
adc
in
int
or
xchg
mov
jle
incl
mov
ljmp
add
mov
cli
inc
hlt
inc
mov
popa
shrb
and
mov
jns
mov
adcl
xor
dec
adc
add
sub
adc
pop
inc
inc
xchg
je
into
cmc
xor
push
aam
dec
lock
ljmp
sub
inc
xor
fcoms
push
lahf
xor
push
xor
push
add
adc
mov
subb
pop
pop
je
inc
sbb
adc
scas
and
lea
mov
movsl
dec
pushf
mov
cs
add
jge
fistl
push
pop
scas
and
add
das
gs
les
nop
mov
movsb
in
fdivl
je
adc
sbb
lods
aaa
es
jbe
xchg
andb
stc
jl
rclb
fs
push
out
mov
add
inc
nop
hlt
push
rorb
pop
lock
das
jnp
fdivl
push
notb
movsb
or
jo
jbe
subb
sub
inc
out
negb
test
xor
sub
decl
out
mov
add
inc
and
loopne
pop
and
mov
and
adc
mov
repnz
jg
push
lret
jecxz
or
clc
pop
movsb
notl
aad
decb
jmp
test
lock
fs
dec
add
mov
popf
cwtl
mov
into
pop
fstl
stos
cmp
ljmp
jmp
push
lds
mull
pusha
js
add
test
repnz
mov
cmp
add
sub
mov
dec
jge
xchg
push
sbb
push
sbb
mov
adcl
xchg
mov
pushf
mov
in
jp
clc
decl
cmp
mov
mov
stos
cmp
cli
mov
xor
ficoms
and
dec
pop
mov
cmc
jns
xchg
xchg
mov
clc
cmp
cmp
add
inc
mov
mov
sbb
mov
pop
lods
adc
in
dec
adc
into
lcall
das
sti
lret
pop
add
and
inc
mov
xchg
jb
hlt
inc
or
jmp
ret
fadds
jp
push
cmp
cmp
imul
pop
imul
inc
pushf
call
sbb
filds
mov
xor
in
daa
sbb
or
mov
insb
dec
js
es
call
inc
xchg
cmp
push
push
fcoms
call
subb
adc
sahf
sbb
xchg
std
mov
dec
inc
das
jg
inc
jg
lods
mov
and
nop
shlb
aam
mov
js
cli
jb
daa
stos
fdivr
xchg
ss
shll
call
xor
cmp
imul
xchg
jg
jg
js
and
xor
out
jb
pusha
sub
orl
inc
jge
jnp
xor
lcall
adc
sar
sbb
xchg
in
add
push
inc
xchg
sub
mov
aaa
fisttpl
xchg
pop
push
pop
das
ror
cli
sbb
int3
mov
fsubrs
xchg
dec
andb
jecxz,pt
aad
jmp
cmp
xor
dec
or
xor
inc
mov
mov
adc
or
leave
sbb
mov
sub
outsb
ret
mov
inc
ja
fstpt
jo
fwait
add
adc
fs
mov
pusha
mov
addr16
and
sbb
adc
lret
xchg
cmp
arpl
add
sbb
inc
sub
out
cwtl
insb
lods
push
inc
fmulp
bound
repz
nop
mov
mov
mov
adc
add
xchg
mov
cmp
pop
xor
cmp
push
adc
cltd
jmp
push
mov
shl
add
pop
xor
out
sub
sbb
fldl
aas
adc
rorl
cmc
push
mov
scas
jbe
or
add
mov
add
stos
cld
dec
pop
adc
pop
mov
dec
ja
aas
das
jb
repz
incl
jl
sbb
or
xchg
js
lock
and
cmp
and
mov
mov
pop
mov
xor
sub
sbb
add
jno
ljmp
adc
push
inc
bound
and
adc
and
adc
inc
jo
cs
or
jae
inc
add
dec
or
cmp
add
adc
push
xchg
pop
jnp
adc
mov
sub
push
stos
xchg
sub
xchg
xchg
sar
jg
decl
or
inc
and
add
pop
mov
and
adc
push
sbb
dec
pusha
push
sbb
inc
je
xor
and
sub
decl
adc
inc
nop
sbb
xor
or
dec
and
push
sbb
cltd
mov
add
adc
sbb
sbb
loopne
mov
inc
ret
int
sbb
xchg
xchg
mov
push
xor
cld
mov
add
inc
add
push
decl
jne
push
shrb
mov
cltd
bound
jecxz
shll
lcall
xor
xchg
aaa
inc
andl
mov
loopne
cwtl
cld
dec
add
dec
xor
and
lcall
hlt
aam
push
jns
jo
mov
push
xchg
pop
imulb
or
movl
popa
pushl
adc
or
fisttpl
ret
into
sub
pushl
orb
cmc
clc
sarb
in
insl
push
or
roll
mov
pusha
paddq
call
cmp
ljmp
popa
arpl
jae
je
aam
mov
cmp
sbb
pusha
mov
std
push
and
inc
add
push
inc
mov
das
push
ljmp
shlb
mov
push
out
push
daa
add
xchg
push
call
hlt
jbe
pop
push
stos
lock
mov
dec
xor
les
mov
add
dec
sbbb
sar
cmp
filds
outsl
mov
cmp
sbb
and
shl
jg
mov
mov
or
mov
pop
jnp
dec
mov
sbb
enter
and
fisttpll
add
inc
add
out
inc
pop
inc
jge
xchg
popa
add
decl
sti
mov
jmp
sarb
xchg
jo
push
sarb
ljmp
push
adc
pop
or
clc
or
xchg
decl
xor
js
loopw
adc
repz
scas
bound
aad
jno
nop
mov
xchg
jg
sbb
xchg
dec
mov
jb
push
cmp
in
push
mov
cwtl
aam
adc
ljmp
cmpsl
xorb
fsubs
cmp
dec
stos
mov
bound
sub
roll
xor
mov
lahf
sbb
incl
sub
sti
push
dec
mov
xor
push
or
cmpsb
and
or
jmp
jne
mov
and
push
popf
pop
add
incl
mov
inc
jo
mov
dec
inc
pop
or
xor
or
adc
cs
data16
pop
or
lcall
cld
dec
cmc
dec
add
sbb
sub
dec
sbb
shr
dec
loopne
decl
aaa
out
mov
cmp
sub
and
jnp
inc
sub
jp
testl
test
add
andl
or
cmp
or
push
jg
add
jg
decl
xor
mov
pop
es
dec
clc
incl
cltd
dec
xlat
cmp
add
or
mov
or
popa
jg
push
inc
mov
push
lcall
scas
push
cli
push
insb
jae
jns
sbb
pop
call
dec
jmp
dec
and
lock
les
lcall
mov
loop
or
loopne
shl
insb
lahf
mov
mov
cmp
jnp
mov
cld
js
xchg
and
fnstcw
loopne
jmp
pop
mulb
pop
mov
or
outsl
sub
mov
outsb
cld
add
mov
aas
mov
pusha
lret
clc
dec
loopne
and
rdpmc
ret
jo
popf
shl
push
out
sarb
je
data16
ljmp
mov
mov
dec
lock
sbbb
adc
ljmp
push
cli
xchg
mov
sbb
inc
mov
decl
dec
xor
sub
test
lret
sbb
pop
xorl
and
sar
pop
ret
out
mov
inc
jnp
loopne
inc
mov
and
cmp
mov
jmp
out
das
cld
or
lods
adc
mov
fisttps
adc
je
mov
cwtl
in
cmp
sbb
pop
adc
and
inc
xor
dec
cwtl
or
mov
nop
rol
jl
and
inc
das
mov
inc
daa
sbb
xor
outsb
cld
lcall
xchg
sub
inc
inc
push
add
cmp
lahf
xlat
inc
cld
movsl
pop
mov
adc
mov
lods
inc
jae
mov
xchg
mov
aad
cmp
inc
in
jg
hlt
push
les
dec
inc
lock
xchg
jge
and
shll
and
decl
mov
inc
pop
pop
dec
push
or
imul
inc
adc
push
cltd
xchg
je
cmpsl
sbb
adc
and
push
add
lcall
inc
cmc
mov
mov
sbb
and
and
jno
notb
leave
inc
into
and
xor
adc
inc
test
pop
subb
dec
decl
lock
jg
in
push
lret
xor
push
and
clc
fcomi
dec
push
and
and
test
and
movsl
push
out
and
in
and
push
insl
jo
jg
mov
insb
test
cwtl
cmp
nop
or
mov
pushf
inc
xchg
push
adc
or
mov
sar
inc
shlb
in
mov
mov
adc
mov
pop
and
inc
jmp
mov
test
roll
les
loopne
incb
stc
and
enter
jp
adc
mov
rcl
test
xchg
or
lcall
cld
leave
test
xor
inc
inc
lea
sub
xor
aam
dec
aas
les
test
rcll
adc
int
mov
mov
andb
aaa
and
xchg
in
inc
insl
inc
jecxz
pop
sub
ljmp
cmovs
xor
nop
lea
dec
dec
test
cwtl
filds
lcall
imul
ljmp
add
add
dec
dec
aas
bswap
push
xchg
outsb
fisubs
and
fbld
mov
fstl
add
inc
and
mov
xor
dec
push
pop
jno
sarb
rol
jle
fldt
sbbb
pushf
adc
cmp
mov
test
sbb
adc
cs
mov
mov
ds
inc
adc
mov
shr
cwtl
cmp
pop
inc
icebp
pop
mov
add
or
ja
mov
test
mov
stos
call
fs
test
movsb
dec
pop
push
xchg
clc
dec
into
in
mov
lret
fwait
bound
sbb
shll
sub
jns
in
xlat
pop
mov
pop
add
js
xchg
sbb
int3
jne
add
push
insl
jbe
or
js
in
ss
pop
xchg
mov
ficoml
xlat
inc
mov
mov
mov
or
xchg
jne
mov
xchg
xchg
xchg
cs
cwtl
xor
pop
into
jbe
lods
dec
and
aam
sub
push
mov
inc
inc
and
enter
movsb
pop
leave
sub
mov
add
pop
cmpsb
addr16
das
call
mov
cmp
dec
xlat
test
pop
mov
push
and
mov
cmp
ljmp
je
std
push
data16
nop
push
stc
int3
lret
pop
js
jecxz
mov
sub
push
mov
cmp
clc
dec
add
jg
jg
and
rcr
mov
adc
test
xor
dec
dec
mov
add
shlb
cwtl
pop
addr16
adc
decl
pop
shll
sbbb
cmp
inc
mov
cmc
cltd
cmpsl
pop
nop
mov
pop
ljmp
add
adc
lds
mov
shl
and
or
jecxz
mov
popf
cltd
mov
mov
or
mov
mov
jg
jbe
xor
cli
add
jg
sub
jne
das
aaa
inc
sahf
jmp
addr16
pop
add
sub
adc
jp
pop
sbb
lods
mov
or
sub
cmpb
and
dec
inc
mov
add
lahf
sub
lods
jle
inc
cmp
sbb
sub
and
jmp
ret
in
inc
fadds
sbb
add
repz
incl
sbb
fwait
insb
ljmp
pop
dec
sub
sub
call
pop
add
sub
cmovl
test
xor
pop
clc
in
xchg
enter
mov
xor
sbb
sti
jbe
cmp
aam
jmp
repz
cmp
inc
rorl
and
call
sbb
adc
aaa
add
mov
imul
lcall
mov
and
cwtl
jb
je
mov
sbb
js
mov
xchg
or
mov
xchg
sbb
inc
iret
jb
xchg
adc
hlt
call
clc
push
mov
mov
push
int
loop
xor
aad
adc
lods
aam
jle
mov
push
into
ljmp
mov
xchg
mov
or
and
dec
incl
lret
push
or
mov
adc
les
cmp
lcall
imul
les
xchg
cmp
jmp
xor
ljmp
xlat
pop
stc
jmp
bextr
push
sbb
rclb
cli
sbb
jne
xchg
incb
or
xchg
push
clc
outsl
stos
icebp
mov
rorb
fimuls
movb
cld
pop
add
add
sub
xor
jmp
dec
leave
mov
mov
adc
in
movntps
neg
sbb
inc
or
sbb
mov
mov
xor
and
loopne
inc
cli
dec
pusha
xor
mov
add
mov
stos
and
adcb
push
push
korb
add
clc
pushf
jne
rclb
clc
or
xor
mov
and
cmpsb
aam
inc
icebp
push
inc
pop
xchg
sarb
aas
push
add
jne
addl
add
add
xchg
test
inc
pop
add
sahf
lds
repnz
add
in
jnp
xor
mov
sub
jae
or
insb
ret
lods
test
or
imull
sbb
add
test
cs
sbb
cltd
add
push
adc
and
call
bound
push
push
push
test
inc
loop
push
add
and
mov
mov
adc
mov
es
or
sub
sub
cmp
or
mov
addl
add
and
mov
sbb
inc
ret
cld
adcb
mov
mov
add
jp
js
lds
add
push
mov
jbe
mov
arpl
push
adc
cmpsl
sub
mov
add
call
push
jmp
je
xchg
repnz
push
pushf
mov
sub
mov
or
sub
int3
and
cmc
mov
pop
dec
sbb
icebp
xchg
sub
push
xlat
aaa
mov
nop
mov
push
mov
jno
lret
push
adc
shlb
dec
imul
sub
jne
inc
adc
movsb
mov
ret
and
imul
or
cld
adc
inc
lahf
mov
push
in
das
or
out
addr16
lret
push
push
adc
mov
push
mov
and
adc
and
sbb
xor
sub
bound
and
pop
push
call
add
pop
adc
cld
pop
mov
mov
jae
xchg
add
cli
inc
je
push
mov
fldt
fsubs
push
daa
jge
test
orl
test
add
pushf
add
std
nop
inc
roll
push
imul
xchg
sbb
test
mov
push
jge
bound
inc
inc
lret
loopne
push
sub
outsb
sar
test
or
jno
lret
loop
dec
lea
jno
sub
add
test
pusha
xor
jo
leave
mov
mov
jle
scas
add
clc
rorb
add
scas
pop
sub
nop
mov
push
xor
movsl
movsb
push
inc
adc
push
lds
sub
out
mov
adc
adc
inc
jle
incl
xchg
and
mov
je
sub
push
fstpt
dec
sub
mov
push
dec
out
fsub
jg
sub
jne
cmpsb
mov
loop
clc
dec
pop
paddq
fsubrs
adc
test
dec
jmp
jecxz
sbbb
and
jl
xor
loop
cmp
stos
popa
inc
mov
fcomp
add
xor
fs
imul
push
iret
and
rorb
xor
hlt
or
scas
orb
add
adcl
add
add
inc
push
sbb
stc
add
into
jmp
jge
xchg
jmp
sbb
dec
aam
and
adc
pop
add
dec
pop
pop
dec
xor
fistps
push
adc
cwtl
js
or
xor
or
hlt
pop
sahf
add
inc
mov
repz
add
lret
pop
pop
sbbb
ret
sub
and
add
add
push
adc
roll
inc
mov
adc
aad
fisubs
andb
dec
pushf
or
adc
ja
dec
inc
xchg
xor
pop
int
add
ljmp
mov
cmp
mov
pushf
mov
pop
stos
cmc
ds
or
mov
push
xchg
mov
dec
lea
inc
inc
dec
inc
lods
jecxz
rorb
jecxz
dec
ljmp
divb
adc
das
das
inc
les
std
cmpsl
jp
adc
add
or
inc
je
add
roll
clc
inc
inc
add
fiaddl
les
push
xor
inc
mov
adc
les
sahf
mov
cld
cld
clc
and
roll
mov
jg
push
adc
sbb
sbb
jecxz
loopne
or
add
call
int
jnp
das
sbb
or
add
pop
jg
dec
sub
orl
mov
out
xchg
push
jno
adc
aam
pop
mov
shl
xchg
add
add
enter
mov
push
lock
adc
cmp
push
push
stc
push
hlt
push
mov
xor
and
js
or
push
dec
push
inc
mov
lock
shll
xor
call
adc
int3
dec
sub
dec
add
sbb
loope
sub
pop
lahf
mov
aaa
faddl
inc
outsl
gs
aam
mov
popf
and
clc
xor
cmp
jae
aaa
fimull
rolb
and
mov
add
aas
adc
add
sub
mov
int3
je
mov
rorb
push
or
sub
mov
mov
enter
inc
enter
push
xchg
dec
ja
int
fmul
enter
fdivrs
int
dec
xor
sahf
pop
movsl
nop
in
rcrb
add
lahf
and
mov
mov
enter
icebp
xchg
jnp
cmp
sub
aaa
inc
jp
pop
hlt
testb
and
scas
push
or
cmpsb
roll
sarl
daa
fcoms
iret
adc
imul
mov
enter
xor
xor
pop
shlb
add
sub
push
jne
fldenv
inc
add
int3
cli
pop
xchg
lahf
dec
inc
adc
mov
shrl
or
mov
movsb
shlb
addr16
jne
test
ja
hlt
cmpsl
sub
push
loopne
hlt
leave
xchg
mov
sub
xor
lods
ret
sbb
fs
or
mov
das
sub
pop
mov
out
pusha
imul
jmp
icebp
mov
push
xor
ja
aam
pop
sbb
lret
inc
xchg
sbb
or
adc
push
jmp
idivb
add
xor
dec
and
sub
cmp
mov
lods
pop
inc
or
iret
fistps
js
and
xchg
push
mov
inc
out
loopne
arpl
push
out
xchg
add
push
repnz
mov
cli
mov
scas
adc
imul
inc
popf
xorb
mov
xor
dec
mov
adc
andl
repnz
cmp
push
push
mov
out
in
add
dec
push
push
scas
mov
cli
jne
mov
dec
rcll
test
or
jbe
jl
xor
add
push
lods
icebp
jmp
popf
out
mov
cmp
mov
notl
inc
mov
xchg
or
testl
mov
cmp
lock
mov
or
roll
mov
mov
dec
insb
or
xchg
ret
insl
dec
lcall
rclb
jo
inc
xchg
test
mov
imul
mov
jge
f2xm1
addr16
inc
sub
test
mov
pop
or
test
bound
or
in
inc
cmp
into
in
mov
inc
repnz
push
and
push
aad
inc
xor
add
in
cmc
je
inc
shll
rcrl
dec
stos
mov
lahf
int
xchg
cmp
jae
push
push
int
icebp
aam
push
leave
mov
xlat
test
and
jae
inc
inc
xor
or
data16
mov
xor
cmp
push
ss
push
ret
aad
xchg
mov
shr
shlb
mov
je
mov
aam
or
jnp
int3
fcomip
sub
in
xor
addl
out
fmul
adc
std
mov
aad
or
loop
movsl
notl
mov
dec
push
inc
xchg
and
movsb
or
sbb
lods
mov
js
add
js
pop
cld
repz
es
jge
int3
mov
pop
jae
lea
add
pop
or
cmp
adc
loopne
adc
lock
mov
pushf
arpl
loopne
loope
xor
xor
aad
xchg
or
andl
xchg
xchg
and
fsincos
push
mov
add
test
jo
push
or
pop
inc
dec
lods
xchg
and
jnp
sbb
hlt
mov
mov
addr16
add
adc
sarl
das
pop
push
lcall
lret
repnz
inc
outsl
rcrl
js
sub
ljmp
cli
leave
fdivrs
adc
dec
std
pop
movsl
pop
inc
cmp
fisubs
xchg
lods
test
inc
icebp
push
mov
lock
push
xchg
sbbb
sub
jg
decl
cmpsl
daa
push
push
addl
or
add
ret
stos
lods
std
movsl
incb
or
enter
in
mov
test
or
add
ljmp
push
and
sbb
nop
xchg
mov
push
mov
mov
and
push
jno
sbb
addb
stos
or
mov
leave
sub
loopne
xor
lods
std
pushl
repz
jp
sbb
mov
out
mov
jg
mov
push
cwtl
pop
sbb
mov
rcrb
cmp
mov
or
xchg
jo
loope
popf
inc
ja
pop
mov
cwtl
jbe
sub
add
push
jl
movl
jmp
and
add
call
fldenv
outsl
fwait
pop
and
pop
mov
outsb
mov
inc
es
out
mov
decl
shrb
push
dec
test
dec
jp
push
sub
jp
std
call
insb
add
iret
lock
add
pop
xor
jp
das
inc
sar
pusha
push
push
add
mulb
aas
pop
sub
out
pushl
test
push
sbb
sarl
jb
ret
push
sbb
pop
sbb
stos
pop
mov
inc
dec
fcmovnb
mov
lret
pop
lds
mov
xor
and
lcall
mov
and
or
sbb
scas
inc
xchg
mov
std
sub
and
inc
nop
jp
dec
lea
and
cmc
sarl
add
dec
fiadds
sar
mov
loopne
sub
cmp
adc
ljmp
incl
ret
sbb
lret
loop,pt
aam
push
push
cmpl
sbb
or
bound
dec
leave
mov
dec
dec
fwait
in
decl
add
jp
xor
inc
or
push
aaa
jle
xchg
lret
into
xor
pushl
xchg
sbb
shlb
pusha
mov
add
sbb
rol
mov
xlat
dec
out
adc
movsl
loopne
nop
pusha
add
push
xor
mov
subb
mov
sbb
mov
push
leave
movsb
adc
xchg
mov
mov
add
xor
push
test
add
insb
xchg
adcb
xchg
add
stos
imul
ret
repz
cmp
mov
ret
sbbb
sub
enter
sub
push
mov
add
or
xlat
lcall
lods
mov
cmp
dec
setb
and
or
inc
cmp
in
pop
cmp
pop
ljmp
inc
cld
adc
sub
out
das
bound
inc
leave
pop
fcoms
adc
pop
jb
orb
or
int3
fucom
jg
and
les
int3
or
push
adc
or
pop
les
add
js
sbb
sbb
adc
push
mov
lock
cli
leave
push
rcll
mov
lods
sub
add
les
cwtl
adc
mov
inc
pop
mov
mov
shll
loopne
mov
sub
test
mov
push
out
cmpl
mov
pop
jo
sbb
add
pusha
les
dec
hlt
push
les
adc
add
pop
ss
hlt
shr
xchg
pop
fwait
mov
dec
push
scas
push
out
push
and
and
push
lock
and
jbe
fbld
inc
cli
inc
dec
addr16
adc
je
or
enter
mov
jns
or
or
inc
inc
add
add
call
inc
xchg
mov
mov
push
adc
jno
pop
push
add
jge
xor
sarl
cmpsb
out
js
dec
adc
adc
or
lods
clc
sbb
mov
loopne
jge
sub
jge
inc
or
or
fmuls
push
ret
es
int3
ljmp
push
adc
outsl
xchg
cmp
add
outsl
xor
inc
fiadds
sbb
xchg
sub
cmpsl
jae
call
into
adc
es
gs
sub
cli
mov
push
fstl
testl
push
mov
cld
or
stos
mov
xchg
inc
lahf
repnz
add
cmp
adc
lock
out
fdivrp
pop
mov
fcomps
add
loop
and
adc
and
cmp
xor
mov
movsb
mov
das
mov
pop
testl
lcall
test
inc
sub
pop
dec
push
inc
mov
fsubrs
add
ljmp
push
and
nop
ss
outsl
jmp
jmp
add
repnz
or
or
cmp
repz
push
fcompl
xor
test
jge
fnstsw
jl
mov
dec
inc
sub
pmullw
jo
add
loop
inc
mov
mov
lcall
dec
inc
adc
aad
ds
orl
adc
xchg
dec
ljmp
mov
shlb
int
pop
xchg
adc
in
in
or
dec
dec
scas
inc
popaw
sbb
xor
shl
lock
jl
outsb
call
pop
push
mov
cmp
pop
test
and
mov
push
lcall
imul
xchg
into
add
decl
cld
aas
dec
fdivs
iret
imul
or
outsl
add
dec
mov
mov
mov
cmp
jns
add
dec
xchg
or
and
pop
sbb
es
fs
call
popf
pop
es
imull
mov
adc
push
test
cwtl
or
stos
shl
incl
shll
mov
pushl
gs
mov
or
mov
and
movsl
les
call
jno
mov
mov
sub
rorl
mov
rcrl
stos
int3
inc
mov
cmp
incb
mov
push
dec
dec
cltd
add
sub
sub
out
pop
jg
push
cmp
sub
sbb
sbb
fidivs
pusha
js
sbb
shll
push
aad
dec
mov
xchg
addb
js
mov
or
mov
xor
je
mov
jg
rcrl
pop
and
inc
test
js
shrb
xchg
mov
mov
mov
xor
pop
cmp
ljmp
scas
push
jbe
push
stc
and
sub
imul
bound
out
std
or
jge
imul
into
ret
movsl
pop
js
cmc
arpl
ja
push
jg
js
aam
in
xchg
add
ficoml
bound
xor
arpl
stc
fsubr
ljmp
or
lahf
test
xchg
out
cltd
fisttpll
adcb
test
xchg
jp
and
adc
mov
mov
dec
add
inc
pop
inc
xchg
test
mov
sbb
push
sub
adc
adc
xchg
pop
push
sbbl
adcl
test
dec
or
dec
shrb
outsb
fcmovnu
aaa
sbb
mov
incb
flds
loope
pop
daa
or
dec
push
xor
mov
adc
or
data16
dec
out
fisubs
mov
and
aas
push
xchg
mov
movsb
lret
addl
lds
lds
hlt
sbb
mov
dec
es
or
in
std
movsb
call
and
pop
xchg
push
inc
jnp
sub
mov
xchg
add
andb
cmp
dec
stos
add
in
cld
int3
adc
add
shlb
xor
sbb
adc
push
pop
das
les
or
filds
push
roll
js
add
cmpsb
add
adc
in
mov
out
ds
adc
sbb
xor
add
or
sbb
cmp
adc
add
add
das
add
xor
adc
jbe
rorb
test
pop
xor
or
aam
rorb
sub
lcall
into
xorb
pop
fcoml
inc
mov
mov
rol
pop
out
dec
push
je
and
andb
sub
sub
es
dec
xor
cld
lret
hlt
xchg
jmp
icebp
repz
loop
mov
addb
xlat
inc
xchg
aam
popa
int3
mov
aam
inc
xor
dec
pop
stos
lods
add
pushf
push
push
rcr
je
stos
fcomps
inc
dec
inc
pop
call
scas
pop
fs
cmp
inc
and
sarb
mov
shlb
mov
and
clc
fnstsw
outsl
sbb
sarl
or
test
push
add
mov
testb
xor
std
mov
movsb
jmp
pop
mov
xchg
repnz
lret
jl
imul
xor
xor
rclb
xlat
rorl
sbb
and
fists
inc
pop
xchg
push
jae
dec
add
movsb
subb
lret
push
les
inc
mov
push
sub
mov
rcl
incl
aaa
andl
adc
add
add
cmp
out
inc
cmp
lret
pop
stos
mov
ja
sbb
stos
les
push
fadd
push
adc
decl
adc
sar
adc
push
add
lcall
js
adc
js
testl
inc
aam
adc
sub
sbb
jmp
mov
sub
outsl
je
and
lods
in
call
sbb
cmp
movsl
nop
inc
dec
fcoml
lds
in
add
fadds
and
and
dec
push
pop
push
or
out
sbb
mov
loopne
mov
xchg
sbb
push
cmc
xor
das
hlt
jmp
insb
in
pop
cmp
stos
xchg
or
add
incl
inc
or
and
pop
pop
ret
daa
sub
xchg
and
and
or
scas
jg
or
adc
dec
mov
aad
jbe
sbb
inc
ljmp
dec
dec
mov
mov
test
mov
xchg
fadds
stos
push
inc
test
mov
fdivr
outsb
sbb
mov
stos
push
test
mov
les
out
decl
jno
call
mov
loope
add
jo
pushl
or
pop
inc
inc
or
add
xchg
mov
imul
cmc
or
addb
push
test
out
dec
cmp
jne
call
and
sbb
fsubr
aad
divb
popf
stc
iret
sbb
ljmp
mov
dec
sub
jl
bnd
out
mov
and
dec
xor
ja
sbb
sub
inc
test
mov
inc
mov
dec
inc
leave
icebp
mov
hlt
inc
xorl
loopne
cmp
lea
ljmp
push
push
cmp
test
subb
dec
pop
or
mov
push
addr16
imul
stos
les
add
es
sub
pop
xchg
aaa
icebp
test
jns
sahf
add
inc
jle
push
xchg
cmp
dec
dec
test
call
movsl
cmpsb
sub
add
dec
addl
push
mov
mov
les
inc
pop
pop
dec
and
cmp
dec
cwtl
imul
mov
rcll
addr16
inc
rolb
repnz
xchg
adcb
adc
add
sub
shll
mov
ret
lock
ret
add
and
addb
jl
dec
sub
shll
into
das
dec
ja
mov
nop
xor
je
imul
or
nop
int3
and
fstp
mov
inc
testb
decl
shl
add
inc
inc
sbb
scas
loop
popl
xor
inc
or
mov
hlt
xor
test
les
add
idiv
ljmp
icebp
pushw
repnz
ret
add
pop
hlt
imul
pop
push
lock
push
and
pop
stos
mov
in
pusha
mov
cmc
mov
mov
mov
dec
push
dec
mov
cld
pop
cli
and
adc
mov
push
int
mov
push
pushl
dec
or
push
cmpsl
loopne
sbb
mov
aaa
outsb
or
ja
jo
pop
cmp
xchg
es
mov
pop
sti
add
call
pop
push
int3
jg
add
or
mov
jg
mov
dec
mov
std
adc
sub
add
sbb
xor
push
and
call
adc
push
mov
cmp
das
lock
fsubs
std
jmp
es
add
mov
ljmp
adc
fists
aam
cld
mov
xlat
lret
adc
adc
add
push
in
mov
loope
imul
sub
shrb
jmp
dec
and
adc
jg
mov
pop
sbb
pushl
cmpsl
inc
jae
adc
or
push
ja
or
repnz
cmc
mov
inc
lods
lds
loope
cmp
or
icebp
decl
or
jne
jae
and
mov
idivb
mov
pop
mov
sub
adc
adc
mov
or
jg
outsl
lret
mov
push
movsl
inc
pop
pop
adc
cmp
xchg
popa
fldt
shl
jg
add
xor
lock
jbe
mov
push
aam
movsl
dec
loopne
mov
fs
incl
ret
jmp
cmp
add
jbe
mov
jp
aam
add
inc
dec
gs
rorb
adc
fildll
orb
in
push
mov
or
xchg
scas
das
insl
cld
xor
cmp
das
add
sub
cs
xchg
jb
cmp
lock
xchg
cmp
repz
int
cmc
add
imul
pusha
jmp
sbbb
cld
ljmp
addb
adc
add
mov
add
add
and
and
nop
mov
mov
inc
and
or
add
insl
imul
adc
or
inc
push
nop
nop
add
pop
add
decl
adc
mov
adc
inc
inc
rorl
insl
pop
add
jge
sti
lods
cmp
inc
add
add
and
add
dec
add
jo
jle
lods
or
or
fistpl
lock
hlt
inc
mov
lods
mov
dec
and
inc
push
adc
adc
stc
fisubrl
xchg
insl
xor
mov
add
inc
mov
or
xchg
and
adc
xchg
nop
sub
outsb
lods
mov
xchg
adc
mov
inc
add
pop
mov
xor
push
mov
pop
imul
push
inc
and
pop
imul
aaa
mov
lods
inc
fiadds
adc
adc
add
jb
out
lods
mov
pushf
ljmp
sub
xchg
pop
imul
mov
mov
fistpl
loop
push
mov
fldt
in
pop
das
out
adcl
pop
jb
and
imul
andb
scas
rorb
fistl
popa
test
xor
insl
insl
imul
xchg
and
mov
fisubrl
mov
mov
out
mov
pushf
push
imul
and
jecxz
xor
push
out
fidivl
nop
js
mov
and
dec
fisubrl
add
cli
inc
dec
mov
lcall
fidivl
inc
dec
xor
xor
adc
mov
lahf
inc
push
lret
inc
xchg
pop
mov
xor
and
push
xorb
cmp
lods
mov
filds
pop
int
fcmovbe
pop
push
add
cld
outsl
jnp
push
xor
dec
gs
mov
and
les
sub
mov
daa
sbb
dec
mov
dec
nop
inc
nop
sbb
scas
sbbb
fisubrl
addb
or
rcl
dec
and
adc
imul
popa
daa
and
mov
sub
adc
jo
mov
inc
xor
xchg
jl
inc
loopne
push
push
and
pop
ret
fisubl
stos
cltd
pop
mov
mov
mov
test
and
icebp
sbb
mov
adc
je
lahf
jbe
shll
dec
subb
outsb
cmp
insl
imul
inc
push
xchg
hlt
mov
jge
aaa
add
loopne
mov
mov
out
add
adc
mov
sahf
cmpsb
ds
cmpb
mov
cmp
lock
xchg
xor
cwtl
sbb
rorb
ret
mov
test
jp
imul
jno
add
and
pop
imul
cmpsb
add
mov
pop
repz
iret
jbe
xor
pop
mov
fcmovbe
ficoml
pop
aam
inc
or
pop
shll
jnp
push
mov
xchg
jle
repz
dec
pop
int
or
mov
mov
mov
imul
scas
cs
mov
adc
cmp
jne
in
ret
fst
xor
and
pop
sbb
mov
sbb
rcrb
insl
lods
rcrb
mov
mov
inc
jnp
mov
xchg
add
in
push
pop
pop
push
sub
pop
testl
pop
and
ficompl
push
add
jbe
push
mov
pop
ret
jno
into
xchg
cmp
scas
cmp
sbb
sub
xor
xlat
mov
adc
or
arpl
loopne
sbb
pop
inc
popf
xlat
dec
in
inc
imul
jb
cmp
pop
cmpsb
out
cmp
shlb
cmp
or
outsb
ss
pop
xor
jns
fisubrl
lods
cmp
popa
and
adc
scas
iret
icebp
lcall
push
inc
popf
add
insb
ds
jne
lods
aad
and
push
push
rcl
add
xchg
inc
jae
xor
adc
dec
inc
imul
sbb
jnp
testl
imul
arpl
iret
sbb
sbb
je
sub
xchg
lret
dec
cmc
sbb
or
subb
fistpl
mov
xlat
sbb
test
or
leave
in
pop
inc
stc
roll
insl
int
aaa
dec
add
add
popa
add
xor
and
or
adc
or
sbb
test
xlat
incl
neg
lahf
fists
loop
lcall
xchg
add
and
adc
lods
mov
add
dec
sub
lea
sub
ret
adc
sbb
decl
or
push
mov
decl
es
popf
dec
xchg
jo
pop
shlb
lahf
pop
xor
cli
dec
cwtl
adc
adc
jle
stos
dec
pushl
xchg
adc
andb
add
shll
jmp
je
decl
cld
push
cs
es
mov
adc
inc
movb
js
test
mov
clc
dec
xor
jns
ret
push
lcall
test
mov
dec
push
repz
inc
subl
shl
imul
aas
incl
sub
push
xchg
and
add
xor
ds
mov
and
and
pop
loopne
or
outsl
jns
xor
das
ret
cli
cmp
scas
add
push
push
inc
xor
decl
jl
lds
add
les
xor
iret
bound
shlb
dec
push
imul
sbb
add
xor
pushf
sbb
sub
jg
mov
test
lds
mov
jecxz
lahf
in
jecxz
shlb
hlt
call
mov
lcall
jg
aam
lcall
mov
out
mov
cmp
pop
fisubs
sub
add
cld
inc
mov
decl
negb
pop
inc
into
pop
push
inc
inc
out
add
and
std
and
pop
mov
and
cwtl
sbb
fsts
add
scas
sub
jg
dec
or
push
lahf
nop
popf
push
or
push
xchg
cwtl
or
xchg
xchg
movsb
pop
xor
lock
jb
sbb
add
shrl
pop
das
cld
pushl
adc
incb
in
add
stc
jbe
mov
out
add
pop
es
stos
in
dec
add
shll
iret
sbb
xchg
pusha
ljmp
xchg
sub
scas
push
ds
nop
pusha
daa
testb
pop
xchg
enter
out
add
test
xor
xchg
mov
add
leave
mov
push
jne
cld
out
stc
add
popa
mov
test
rcl
out
and
add
daa
ljmp
push
adc
cmp
jl
nop
push
mov
lock
das
lret
pop
addr16
jno
ljmp
imul
repz
cmp
fisttpl
shl
adc
add
leave
xchg
test
in
imul
push
sub
popf
add
int3
jns
bound
shl
jecxz
push
push
or
xchg
jp
xchg
xchg
aas
pop
pop
dec
xchg
fistps
mov
jg
and
nop
sbb
xchg
pop
mov
sub
mov
int
sbbl
cmp
aam
xchg
add
icebp
decl
add
xchg
in
push
sbb
cltd
out
paddd
outsl
pushl
lcall
inc
jmp
cmp
sahf
or
icebp
add
xchg
add
stos
pop
pop
pushl
mov
sbb
pop
xchg
nop
fadds
mov
sti
call
das
jg
gs
xchg
xor
out
in
jecxz
dec
mov
notl
cmpsb
fildll
inc
sbb
jae
xor
test
xor
incl
dec
add
pop
adc
test
push
add
sbb
decb
mov
xchg
shll
inc
jl
addb
mov
mov
daa
cmpsl
push
push
xchg
dec
aaa
popa
jmp
into
ret
push
add
adc
sbb
std
sub
sti
decl
lahf
sub
loopne
or
addr16
add
jbe
in
decl
or
xchg
bound
mov
pop
xchg
fcompl
fcmovnbe
mov
cli
pushl
sub
popl
mov
dec
jg
lcall
clc
test
cmpb
pop
or
int
xor
add
push
gs
mov
scas
add
sub
mov
cwtl
or
or
and
sahf
cmp
inc
inc
je
sbb
inc
adc
mov
sub
adc
lcall
mov
rcrb
orb
fisttpll
cmp
stos
arpl
add
push
add
adc
js
lcall
inc
xchg
mull
aad
subl
std
lea
lock
add
cmp
pushf
fistpll
or
jns
nop
and
inc
fisubl
ret
test
pop
mov
mov
push
aad
out
rorl
mov
ret
mov
out
popa
inc
adc
adc
dec
cmpsl
or
daa
or
push
or
or
bswap
iret
lahf
sbb
add
cmp
add
leave
repnz
xchg
movsb
sub
add
insl
lods
cmpb
pop
ret
add
test
verw
loop
mov
push
xor
call
mov
mov
mov
inc
sti
xor
mov
call
xchg
dec
mov
cld
add
nop
jno
lods
jecxz
or
mov
nop
test
add
ret
dec
arpl
aaa
icebp
repnz
gs
add
ljmp
call
push
aam
add
inc
popa
popf
pop
gs
data16
sub
add
xchg
outsb
dec
imul
push
push
lcall
cmp
fistpl
add
outsb
push
cld
add
ljmp
adc
sbb
xor
cmpsb
les
mov
lea
jmp
in
nop
insb
sbb
mov
stc
inc
mov
int
jns
sub
call
jmp
xchg
mov
push
out
and
ficoml
xor
cmp
out
ficompl
dec
orl
out
pushf
ficoms
lret
cmp
mov
xor
setb
lock
addb
cmc
push
and
ret
dec
push
cmp
or
les
cld
mov
xor
loope
mov
mov
dec
dec
mov
stos
loopne
into
mov
inc
and
xor
incl
add
and
mov
mov
aaa
call
mov
inc
jp
xchg
add
dec
inc
xlat
mov
mov
clc
pop
clc
hlt
mov
out
ret
dec
xor
jp
mov
pop
inc
jno
pop
icebp
cmp
push
mov
loop
into
movsl
loop
add
lcall
rclb
mov
sbb
cltd
add
sbbb
mov
add
xchg
iret
jg
rclb
inc
js
jae
add
or
out
mov
enter
push
pop
add
fistps
jo
push
sub
jmp
mov
add
lcall
add
mov
jg
insl
call
mov
sub
cmp
adc
mov
movb
pop
sbb
push
decl
push
jge
sub
pop
mov
cmp
lock
jmp
inc
pop
add
mov
dec
loope
add
orb
add
jg
cli
mov
into
lods
cmpl
dec
cmp
pushf
xor
push
subl
cmpsl
cwtl
dec
call
fiaddl
shll
mov
cli
pushl
jb
add
pop
loopne
in
pop
xchg
lret
mov
call
ret
cld
call
inc
aaa
out
inc
stc
cwtl
repz
cld
arpl
jle
nop
jmp
enter
jb
dec
aas
lret
add
dec
mov
push
repz
fwait
sahf
cmp
ret
cld
jle
add
jl
jb
mov
test
mov
lock
pop
stc
xor
cmpsl
call
fistpll
repz
push
out
repz
aam
mov
stc
data16
jg
inc
inc
sbbb
repz
sahf
stc
repz
leave
aas
pusha
shll
jmp
xchg
adc
xor
xchg
rcll
mov
sar
leave
jle
jle
out
std
in
dec
out
dec
jle
out
iret
xchg
stc
es
data16
test
decl
fisttps
push
xchg
lods
subl
dec
test
or
jle
xor
mov
ss
insb
lahf
aas
aas
cmpsl
nop
dec
iret
daa
jle
cs
pop
clc
lahf
sub
pop
mov
xor
cltd
cld
dec
cld
int
adc
pushl
jb
inc
push
aas
dec
xchg
mov
addb
mov
mov
enter
fnstsw
jle
cld
xchg
iret
jb
add
das
pop
sbb
repz
aaa
jle
iret
addr16
call
mov
into
nop
push
popa
inc
xor
js
and
dec
cld
test
pop
aas
fs
fistps
push
xor
icebp
xlat
xor
add
sub
fincstp
clc
pop
mov
cmp
leave
adc
add
xor
push
jo
push
xchg
pop
push
inc
sbb
sbb
test
gs
and
push
je
out
or
outsl
sbb
repz
insb
stc
jge
jnp
xor
into
dec
aas
pusha
hlt
ljmp
aas
imul
aas
mov
mov
lahf
adc
leave
sub
mov
clc
cld
pop
dec
out
pushf
pop
jp
out
repz
lahf
jnp
out
js
rorl
jle
fistpl
push
dec
fmuls
push
bound
and
cmp
mov
xor
insl
mov
push
in
outsl
push
leave
shlb
mov
xchg
lret
dec
fdivs
fdivr
or
jns
jne,pt
xor
cld
sar
mov
out
or
sbb
sub
add
into
mov
xchg
inc
mov
push
in
dec
jp
lds
add
mov
mov
inc
call
pusha
adc
pop
sbb
jbe
cmp
xchg
jbe
lock
cmp
and
or
pop
push
std
repnz
sbb
jno,pn
lret
pusha
dec
xchg
and
add
cmp
mov
jl
inc
add
nop
and
ret
inc
mov
mov
xchg
rclb
jb
clc
xchg
es
xor
and
and
es
fisttpll
add
add
repz
pusha
pusha
jge
es
scas
imul
notl
cmp
xchg
add
cmp
jbe
mov
mov
jmp
sbb
push
pop
aas
dec
pop
inc
pop
cmp
popa
adc
shll
jg
scas
dec
xchg
fldt
mov
cmp
mov
leave
stos
in
daa
mov
mov
sahf
aas
out
repnz
jge
mov
aaa
add
cwtl
push
adc
adc
pop
push
push
and
pop
mov
loopne
xor
sub
imul
mov
imul
jno
in
data16
adc
or
xchg
mov
hlt
and
inc
push
dec
ret
jmp
xchg
dec
fldenv
or
sbb
adc
insb
aam
subl
idivb
in
push
das
lcall
cmpsl
aas
pop
in
xchg
cmp
inc
les
adc
je
aam
call
push
rol
jo
push
push
addr16
adc
sub
scas
xor
ja
in
pop
mov
sub
fs
xchg
call
incl
or
addr16
test
cmpsb
les
rclb
aad
inc
push
push
dec
frstor
fildl
mov
mov
mov
lds
in
pop
sub
pop
sbb
inc
mov
sbb
lcall
mov
adc
ss
out
inc
inc
adc
xchg
mov
inc
decl
xchg
leave
cltd
fldcw
fistl
xchg
push
pop
xchg
decb
mov
pop
lret
fsubl
dec
sub
shll
ljmp
pushl
xor
lock
dec
mov
cltd
add
call
fistpll
std
test
loop
ja
pop
smsw
or
insl
inc
inc
je
incl
repz
inc
test
test
add
ret
in
test
aad
imul
stos
les
and
mov
loope
inc
fwait
neg
test
out
daa
fcoml
jmp
xchg
arpl
pushl
mov
repnz
dec
leave
adc
aaa
pop
loopne
add
lret
loop
enter
outsl
inc
inc
inc
sbb
lods
fidivrl
scas
xchg
cmp
sbb
pop
fsubs
popf
mov
or
insl
lods
pop
or
xchg
cli
das
mov
rolb
ja
sbb
pop
or
and
xchg
push
jg
das
mov
test
and
ret
out
rolb
mov
sbb
cmp
inc
lock
shrb
pop
call
cltd
call
inc
ja
mov
es
ret
movsl
fldenv
mov
jle
jl
mov
std
out
and
add
inc
fucomip
ficomps
das
xchg
icebp
addb
sarl
lahf
xchg
loop
aas
xor
sti
pop
xchg
sub
or
cmp
negb
pop
add
ljmp
jbe
notl
inc
lods
shll
pop
idivb
add
les
nop
jb
ret
push
jg
inc
lcall
mov
push
nop
add
adc
jg
add
inc
shlb
movsl
pusha
decl
std
loopne
pop
das
cmpsl
push
insl
xor
aad
loope
mov
jmp
xor
in
and
out
add
shrl
xorl
stos
mov
cmp
rcll
cld
lods
call
dec
fisttpll
mov
sbb
xchg
ficoms
sahf
xchg
xor
mov
in
push
insb
lds
lods
sub
adc
aad
xor
lds
aaa
lcall
sbb
adc
bound
sbb
adc
je
andb
or
iret
pusha
repnz
add
dec
and
mov
xor
popf
pop
ljmp
icebp
xchg
xchg
push
pop
stos
sbb
test
cwtl
lods
incb
jg
es
andl
rclb
push
inc
add
push
cmp
mov
sbb
leave
pushl
sub
nop
adc
sbb
ljmp
jp
rcrb
fdivs
mov
mov
outsl
in
shlb
or
mov
inc
fwait
pusha
sbb
lock
repz
jp
add
mov
fiaddl
popa
rclb
jmp
mov
in
sbb
lds
sub
pop
lcall
rcr
adc
or
inc
sub
mov
xchg
mov
cmp
push
xchg
mov
inc
nop
sub
dec
sbb
test
add
xchg
mov
xchg
sbb
fsubrs
pop
outsl
enter
sub
sub
mov
jno
push
enter
jnp
add
pop
xor
jle
jge
sbb
jo
ds
aas
aas
xchg
sub
sbb
xchg
or
cmc
adc
xor
das
push
out
lods
movsb
xchg
lcall
add
pushf
rcrl
and
aas
pop
push
inc
or
incl
xchg
ja
mov
mov
xor
mov
insl
in
xchg
arpl
loop
push
adcl
sbb
cmc
jg
and
mov
xchg
lock
sub
repz
icebp
cs
shlb
inc
mov
in
mov
sub
and
and
or
js
pop
add
adc
in
push
ljmp
push
pop
ja
hlt
or
loopne
pusha
fs
leave
mov
sub
push
out
sub
mov
add
add
inc
mov
rcl
push
push
call
addr16
xor
test
add
xor
jne
mov
jmp
sbb
mov
sub
bound
xchg
cwtl
push
into
js
xchg
adc
test
inc
mov
data16
outsl
cld
mov
or
xor
es
mov
inc
lahf
outsl
cmc
nop
das
ljmp
stos
mov
adc
adc
loope
mov
outsl
dec
adc
add
cmp
cmp
insb
add
adcl
dec
xor
mov
loopne
xor
shll
mov
mov
in
cmp
decl
rep
jo
sub
clc
sbb
outsl
cmc
adc
jecxz
inc
jb
inc
mov
les
mov
stos
dec
jae
ljmp
sub
and
repnz
loope
popf
push
xchg
popa
insb
sub
dec
outsl
movsb
mov
mov
adc
lock
stc
imul
cmp
rcrb
mov
push
js
jb
subb
dec
sbb
pushl
stos
mov
aam
xor
cli
jp
fidivs
loopne
pop
mov
inc
arpl
lds
sar
xchg
mov
mov
lock
fldenv
dec
hlt
push
ds
out
lret
icebp
mov
push
call
popa
adc
ljmp
sub
xor
fcos
incl
dec
push
adc
mov
inc
jns
ret
faddp
lea
dec
cld
cmp
xchg
sbb
loope
sbb
inc
insb
pushf
mov
repz
addb
fisttpl
add
popa
inc
jb
xchg
mov
push
stos
cmp
xchg
xorb
inc
jb
mov
hlt
cmpsl
shlb
mov
call
xor
popa
add
call
mov
add
mov
addb
enter
pop
push
and
ficoms
lods
sbb
nop
mov
xor
add
mov
into
xchg
cltd
fsubs
push
add
push
pop
jle
jmp
inc
test
lock
ss
push
inc
aas
nop
das
fs
push
fs
xchg
subb
pop
enter
pop
mov
xchg
push
adc
lods
inc
aam
iret
mov
cli
dec
inc
xchg
push
mulb
mov
stc
into
pop
mov
fistpll
xchg
lcall
adc
push
jecxz
call
dec
movsb
rol
xchg
ljmp
add
mov
lea
out
hlt
pop
sbb
jg
adc
call
enter
jle
popa
inc
pop
and
mov
jb
mov
pop
pop
mov
pushl
das
xor
pop
xchg
push
imul
dec
add
xchg
sub
pop
or
das
mov
mov
pushf
aaa
push
icebp
test
pushl
imul
adc
nop
and
insl
out
pop
mov
inc
sahf
add
pop
idiv
jmp
ret
adc
fidivl
arpl
jbe
pusha
lea
iret
adc
decb
mov
inc
jns
movsl
dec
popa
or
dec
pop
shlb
stc
mov
addr16
mov
mov
lods
sahf
cmc
fdivl
fsubrl
sub
data16
mov
inc
leave
sbb
mov
les
out
cmpsb
inc
sub
pop
cwtl
mov
pusha
ds
mov
jne
cwtl
xor
add
jg
inc
push
stos
jmp
pop
and
sbb
lcall
out
push
lods
add
aam
add
lock
push
mov
dec
pop
mov
mov
jg
push
shrb
lock
sbb
jle
clc
jmp
sbb
pop
jb
xchg
bound
aad
mov
test
popf
mov
daa
pusha
pop
cmp
cs
jg
scas
cmpsb
lea
shlb
lock
call
mov
loopne
push
inc
xlat
and
enter
shrl
mov
mov
loopne
rclb
adc
fnstcw
popf
inc
inc
and
icebp
adc
in
test
incl
aad
xchg
or
fldt
shrl
jg
dec
add
xchg
or
cmp
sbb
rorb
mov
or
push
adc
sbb
scas
sti
mov
loop
filds
add
or
iret
adc
inc
jg
sbb
mov
push
dec
pusha
jl
loopne
and
lret
pop
subl
sub
sub
sub
sbb
push
pop
adc
cmc
mov
roll
cmp
stos
sub
enter
iret
inc
repnz
inc
push
mov
leave
dec
enter
icebp
dec
insb
or
jl
test
lods
sbb
or
bound
ret
mov
enter
mov
ja
adc
subl
push
lret
inc
inc
mov
call
stos
dec
in
mov
and
adc
mov
shll
inc
pop
mov
cld
add
inc
jbe
mov
sub
test
cmp
ds
popa
and
std
jg
or
pop
xchg
jle
mov
lods
mov
je
dec
scas
mov
call
xor
xchg
dec
bound
mov
into
sbb
adc
adc
incl
push
mov
out
orl
xchg
adc
mov
inc
sahf
call
jmp
daa
push
sbb
mov
mov
push
mov
clc
call
push
cld
add
sbb
rorb
mov
mov
fcomi
cmpsl
lcall
xor
mov
adc
add
jnp
std
fistpll
push
mov
jmp
pop
push
cmp
cmp
xchg
bswap
decl
pop
clc
mov
mov
inc
icebp
fdivrl
pop
sahf
fs
sar
jmp
les
push
je
mov
or
or
mov
push
daa
mov
pop
test
sbb
stos
sbb
popa
pop
idiv
push
ljmp
xchg
ljmp
rcrl
dec
push
and
call
pop
and
adc
lods
adcl
inc
mov
and
incl
or
xor
pop
repnz
push
out
jnp
and
fucomp
lods
idivl
mov
loopne
les
lcall
fs
adc
mov
mov
lods
aaa
xchg
out
mov
decl
adc
xchg
lds
cmpsb
xor
aam
dec
insl
enter
pop
ret
std
xchg
xchg
sub
xchg
arpl
es
call
out
insb
dec
cli
xlat
loop
xchg
cs
pop
push
call
decl
jae
dec
pop
sub
xchg
nopl
adc
mov
xchg
test
enter
cmpsb
add
jecxz
adc
imul
orl
cmp
in
decl
nop
call
jno
fincstp
inc
test
add
fs
decl
and
xor
inc
adc
ret
inc
inc
pop
incb
ffree
lidtl
sbbl
sub
add
lret
push
lret
jo
jmp
mov
sbb
fistpll
cwtl
cwtl
andl
lcall
ret
inc
into
shrb
jns
push
cmpsb
je
lds
sahf
xor
test
test
cmp
push
or
xchg
mov
jp
decl
lods
popa
sub
push
dec
lock
ss
imul
jmp
cs
mov
add
loop
sti
incl
pop
rolb
dec
addl
mov
cld
leave
lcall
pop
fstl
movsb
jmp
lahf
xsha1
cmpsb
paddsw
lcall
lss
jg
outsb
adc
push
cwtl
add
push
popf
clc
inc
incl
repz
shl
js
je
mov
jnp
mov
push
decl
fmul
pop
fcmovnb
or
mov
iret
mov
inc
out
inc
inc
adc
test
insb
loopne
jl
mov
xchg
and
add
mov
cmp
cmpsl
pop
dec
push
fisttps
std
aaa
fcmovb
pop
push
lea
insl
call
mov
test
push
rcll
sbb
pushl
or
jo
test
inc
repz
push
add
or
xchg
cmp
stc
cmp
ret
dec
dec
push
or
or
test
lret
cmpsb
jo
xchg
mov
sub
int3
jg
add
sbb
outsl
inc
lds
pop
sub
sbb
mov
and
mov
outsl
decl
popf
add
adc
xor
loope
in
mov
lcall
imulb
femms
rorb
adc
icebp
pushl
test
mov
cwtl
xor
pop
add
lds
movsl
sbb
and
push
aaa
mov
cmp
pop
clc
dec
aam
pop
fildl
loope
test
cwtl
sbb
rolb
sbb
fcomps
pop
add
loope
and
popa
mov
lods
pushl
sub
sbb
fnstsw
in
pop
push
dec
or
lods
xchg
out
inc
mov
in
inc
xchg
cwtl
je
mov
sarb
add
pop
adc
push
add
inc
imul
je
inc
test
cmpsl
ror
and
mov
xchg
loope
test
call
lods
stos
loopew
cmp
or
push
pop
xor
int
mov
incl
in
or
mov
imul
sub
cmpb
enter
mov
push
sub
and
lahf
sub
jp
dec
out
cli
decl
mov
mov
sbb
loopne
pop
clc
push
push
fs
incb
adc
negl
add
add
xchg
in
mov
inc
out
add
xor
jg
and
xor
mov
inc
lods
ret
push
adc
jg
es
pop
incl
dec
jecxz
jmp
or
ljmp
xor
adc
je
fadds
aad
incl
push
and
jg
cltd
sbbb
cld
inc
orl
insl
pop
xchg
out
jecxz
and
add
mov
mov
lock
xchg
sbb
inc
test
mov
push
xchg
adc
lahf
adc
je
gs
or
fcoml
out
cmp
pop
addr16
and
cmpsb
scas
add
outsb
jb
push
ds
pop
cli
decl
divl
pop
dec
dec
outsb
push
sub
aad
jl
xor
lea
cmp
or
stos
pop
outsb
or
mov
add
mov
mov
std
mov
add
das
cld
and
cld
nop
push
fcomip
dec
shlb
call
call
sub
xor
mov
insb
xor
test
pop
clc
jmp
inc
das
mov
enter
in
fdivs
pop
and
cmp
loopne
or
movsl
test
movb
inc
in
jmp
lcall
cltd
sbb
lcall
dec
xchg
push
pop
pushf
je
loopne
mov
frstpm(287
jg
dec
push
gs
fisubl
adc
or
xchg
cmp
leave
notl
mov
mov
std
popf
mov
pusha
and
add
sarb
dec
outsl
lcall
mov
add
test
mov
es
outsb
mov
ljmp
dec
rcll
iret
xchg
jbe
dec
inc
sbb
adc
decl
inc
mov
mov
shrl
push
mov
push
repnz
rclb
add
push
sub
sbb
add
mov
mov
adc
mov
mov
mov
and
lock
dec
sbb
dec
loopne
push
sbb
mov
push
stos
pop
fwait
sbb
push
sub
mov
inc
nop
in
add
inc
sub
inc
inc
adcb
rclb
xchg
cmp
xlat
sbb
andl
dec
fimuls
leave
cmpb
cmp
add
ret
pop
cwtl
adc
or
aam
inc
mov
clc
aas
pusha
add
loop
jne
pop
rolb
add
cmp
mov
in
sahf
pop
or
fsts
dec
mov
push
sub
mov
rcl
pop
xorb
and
mov
pop
cld
loope
mov
inc
pop
repnz
add
add
push
or
clc
jg
jo
xor
aaa
cmp
shlb
fisubs
push
cmp
ss
lret
add
adc
movsl
stos
xor
aam
inc
sub
pop
or
lcall
call
imul
lock
and
add
sbb
test
mov
xlat
add
test
cmp
dec
test
mov
ret
fmuls
or
dec
sbb
push
dec
lds
jb
push
rcr
cmp
sub
or
ja
cmp
jns
cltd
pushf
xlat
int3
jmp
into
fldt
jns
pop
push
lock
xchg
loope
cmp
add
or
outsb
lock
or
in
cs
sbb
pop
call
push
rclb
in
mov
mov
lcall
jmp
addr16
adc
mov
nop
mov
cld
decl
or
or
test
adc
loop
ffree
movsl
outsb
add
inc
inc
ret
rolb
bound
sbb
mov
shl
aam
adc
inc
shlb
test
jae
pop
sbb
add
dec
test
push
sbb
and
std
das
icebp
adc
and
adc
cmp
outsl
or
and
mov
test
test
xchg
ret
sub
pop
ljmp
enter
dec
dec
es
insb
inc
inc
int
outsl
cmpb
test
push
adc
popa
mov
mov
ljmp
repnz
cmc
mov
and
into
cwtl
jecxz
inc
push
lcall
ljmp
lods
inc
hlt
adc
nop
mov
xor
lods
hlt
pop
mov
add
add
fstps
fists
add
imulb
push
mov
test
int3
xor
clc
lock
jle
movsb
or
lret
sbb
or
mov
stos
mov
or
and
pop
and
cmp
add
or
andb
incb
jnp
and
stos
sub
sub
sbb
mov
push
push
adc
fwait
aas
aam
xchg
dec
sub
add
rclb
cmc
in
add
movsl
mov
sbb
lods
add
fcomip
aaa
add
pop
adc
lahf
test
lcall
pop
cmp
xchg
cwtl
mov
cld
mov
push
push
mov
pushl
xor
push
stos
adc
xchg
sub
dec
push
mov
rolb
nop
js
pop
adc
mov
and
adcl
mov
jno
adc
sbbl
sbb
pop
mov
cltd
jmp
adc
cld
call
jo
daa
nop
mov
and
dec
and
push
hlt
test
gs
mov
sbb
shlb
mov
sbb
dec
imul
cmpsl
mov
lds
mov
mov
add
cmp
xchg
lret
or
jmp
mov
jmp
aad
mov
js
adc
fildl
je
cli
mov
cmc
shrl
cmpsb
test
mov
lock
mov
daa
add
bound
mov
sbb
cmp
cmp
mov
ds
fbld
test
jns
adcl
jne
dec
shlb
dec
sbb
add
mov
leave
inc
mov
pushf
movsb
ja
inc
clc
jb
push
pop
repnz
push
sub
das
jo
pop
repnz
scas
pop
adc
mov
int3
mov
es
jae
sub
pop
add
mov
outsl
daa
and
movaps
jbe
les
or
sbb
addr16
sbb
outsl
dec
jbe
xchg
insb
xchg
ljmp
daa
cmp
jle
shl
ss
lds
cs
push
pop
clc
out
or
sub
jns
mov
push
lods
mov
ret
add
pop
jb
je
leave
inc
pusha
fiadds
or
inc
mov
ss
call
loop
cmp
cmc
aam
lcall
pop
inc
nop
mov
inc
inc
aas
sbb
pop
push
movl
sub
mov
sbb
bound
insb
shl
arpl
pop
xor
mov
imul
mov
clc
mov
and
pop
into
mov
xor
sti
mov
lcall
cmc
jo
sub
add
and
and
push
add
or
std
mov
lcall
mov
jae
fxam
aad
or
or
mov
sbbb
jle
mov
sub
inc
jp
in
add
int3
adc
sub
inc
sub
jns
push
imul
mov
shll
int
in
jo
lock
jecxz
sub
xor
sbb
ja
jae
sar
call
sbb
pop
jnp
imul
pop
pop
xchg
adc
and
test
icebp
inc
inc
pop
movsb
stc
negb
mov
jmp
xchg
sbb
xor
xchg
cli
pop
scas
call
mov
imul
sub
sbb
add
inc
lock
adc
pop
adc
js
add
and
xor
pop
inc
aas
enter
pop
scas
daa
add
mov
mov
add
xchg
je
jg
call
pop
out
ret
xchg
mov
loope
inc
sarb
cmc
outsl
sbb
outsl
hlt
pop
push
adc
adc
jl
adcb
inc
cmp
cltd
and
sbb
je
mov
xor
sub
in
test
jg
addr16
add
cmp
cli
push
in
cli
sub
leave
sub
aaa
gs
jns
sbb
enter
adc
cmpsb
pop
pop
and
in
popf
adc
call
inc
call
add
dec
rorb
xor
pusha
adc
jg
das
shrb
das
icebp
xlat
loope
jnp
mov
daa
cltd
and
in
sar
loope
je
adcl
cmc
or
push
add
pushl
sti
aam
in
mov
cmp
sub
jg
push
jge
pop
xor
mov
cmp
mov
pop
xchg
jge
sbb
outsl
insb
std
loopne
in
addr16
bound
push
stc
jb
lret
in
cld
lcall
xchg
rorb
pop
dec
pop
idivl
es
xor
clc
or
sbb
sbb
mov
cmpsb
mov
lock
dec
jecxz
xlat
xchg
sub
or
jb
xchg
clc
shrb
inc
push
loope
xlat
mov
andl
outsl
lock
mov
sbb
popa
shlb
cmp
sbb
outsl
lock
and
jnp
inc
adc
adc
sbb
rcrl
shll
cs
pop
pop
sarl
outsb
das
shr
loop
mov
leave
dec
imul
shll
fstpt
jb
or
or
ret
int3
mov
fdivr
call
xchg
sbb
push
mov
mov
cmp
addr16
leave
mov
xchg
mov
dec
pushf
xor
mov
jae
mov
dec
lcall
mov
ja
jo
jnp
jns
loop
mov
pusha
stc
jmp
ja
dec
mov
push
and
jmp
jns
add
in
mov
mov
xchg
mov
cmp
lods
incl
dec
scas
pop
or
out
mov
test
pop
call
sahf
outsl
std
scas
or
adc
inc
adc
inc
rcrb
pop
call
cmp
adc
aam
and
xchg
xchg
dec
xchg
sub
popf
jg
call
push
lods
decl
fldl
mov
das
and
push
fnstenv
popa
or
mov
add
incl
leave
jmp
imul
ljmp
mov
ljmp
mov
jnp
dec
xor
subb
std
aaa
jg
out
xor
xchg
dec
and
arpl
lods
lock
cmp
and
lcall
addr16
outsb
sbb
cli
rcrl
idiv
popf
hlt
mov
add
mov
pop
dec
add
lock
das
fimull
bsf
lds
std
and
and
test
fildll
inc
pusha
lret
pop
les
lods
stos
test
decl
sbb
popf
adc
add
hlt
ret
mov
pop
jg
js
mov
cmp
mov
loope
inc
or
pop
or
and
pop
cmpxchg
inc
add
jmp
xchg
pop
pop
xchg
pop
call
es
movsb
fldcw
jmp
mov
decl
add
mov
test
ret
push
inc
pop
push
arpl
pmaxsw
mov
adc
xor
gs
inc
sbb
std
pushl
pcmpeqb
inc
sub
jmp
fld
and
xchg
cmp
scas
jo
ret
jge
sbb
ficoml
sbb
fdiv
lock
int3
sti
dec
pusha
xlat
fldl
cli
mov
dec
es
adcb
testb
mov
xchg
clc
data16
sbb
sbb
movsl
push
xchg
jns
lahf
pop
es
ljmp
sbb
mov
mov
or
pop
call
push
mov
inc
ljmp
cvttps2pi
mov
sbb
fdivr
or
mov
mov
pop
ret
inc
and
pop
dec
testl
rcll
lret
cmc
decl
push
inc
mov
jns
rcrb
imul
cmp
lock
movups
dec
xor
push
mov
xchg
mov
lret
cmp
jl
lds
mov
in
inc
add
push
cmp
pop
inc
xor
pop
adc
test
mov
xor
call
inc
sub
xchg
push
xchg
sarl
les
pop
xchg
les
ror
push
call
adc
mov
add
pop
add
pusha
push
popa
pop
es
mov
mov
stc
outsb
lret
repz
cli
dec
push
or
inc
pop
dec
pop
addb
mov
in
mov
pop
lods
mov
sbb
push
or
flds
stos
mov
xor
jl
cwtl
pop
sbb
leave
repz
in
xchg
jmp
xor
aam
add
mov
add
lods
dec
rcl
push
pop
inc
adc
jmp
out
es
loop
mov
cmpl
pop
shr
or
loope
lock
hlt
lea
mov
mov
mov
and
dec
jno
pop
lcall
inc
push
inc
sub
mov
mov
mov
or
dec
lcall
sub
sbb
shll
jae
adc
lcall
ljmp
or
cmpsb
cld
data16
jnp
orl
aam
cmc
pop
cmp
jecxz
sub
pop
js
jmp
push
test
int3
hlt
shr
and
pop
dec
orb
ret
cmp
sbb
outsl
dec
cmp
mov
shrl
mov
bound
insb
decl
inc
outsb
pop
jg
push
popa
cmp
test
mov
mov
idiv
das
lock
pop
lea
aam
jo
xor
jp
ret
dec
movsb
add
das
push
icebp
inc
orb
inc
lock
std
pop
cli
outsl
sub
push
sbb
sbb
ret
mov
ficoms
outsl
sub
das
hlt
pop
test
xlat
and
push
push
push
jp
push
pop
test
push
jg
stc
fs
and
add
mov
andl
in
push
negb
push
sub
xor
adc
adc
mov
pusha
sub
imul
imul
cld
pop
adc
inc
jno
movsw
xchg
fadd
mov
or
xor
sti
andb
mov
xor
adcb
or
push
bound
lahf
lods
xchg
ret
pop
add
mov
leave
and
cmp
push
cwtl
add
lret
arpl
push
lea
dec
pop
sbb
cwtl
pop
xlat
ss
mov
movsl
push
adc
aad
and
rol
jl
jp
mov
imul
imul
add
add
or
stos
push
push
incl
mov
outsb
adc
and
movsl
xchg
fimuls
rcr
mov
add
js
mov
xorl
dec
rcpps
decl
xchg
mov
xchg
mov
mov
jecxz
std
sarl
push
das
pop
add
cmp
lcall
lcall
cmc
orl
js
lcall
lret
pop
xchg
xor
pop
popf
jmp
std
incl
inc
push
arpl
je
scas
cmp
dec
jo
std
dec
shlb
mov
or
adc
mov
decl
mov
pop
cs
leave
pushl
inc
inc
popa
add
in
js
xlat
bound
leave
test
js
jl
cmp
ret
mov
lock
scas
adc
mov
in
sbb
scas
add
inc
call
out
or
lds
fistl
jle
sbb
xchg
scas
push
xchg
dec
aaa
xor
insb
test
xchg
cs
pop
ja
les
mov
test
adc
dec
mov
fmuls
call
adc
add
js
push
fcoms
mov
pop
cmp
fadds
dec
inc
aad
cmp
xlat
push
xchg
cmp
jl
leave
push
adc
push
mov
xor
pop
mov
cmp
cmp
shlb
hlt
sbb
adc
cmp
xor
adcl
sbb
or
push
iret
std
pop
push
jo
rcl
fnstenv
aam
sbb
mov
xchg
std
cld
inc
mov
sub
dec
mov
xchg
clc
stos
lods
divl
push
cmp
cmpsb
inc
jg
dec
cmc
cmp
mov
loopne
or
adc
or
or
jecxz
mov
roll
cmp
fyl2x
push
push
call
hlt
jg
aad
mov
mov
loopne
or
cmp
pop
cli
xchg
mov
jns
mov
sarl
xchg
jno
test
mov
lds
mov
lds
aas
mov
sub
dec
repnz
nop
mov
jle
and
mov
ret
mov
inc
mov
mov
push
sbb
jmp
jmp
or
popf
rorb
mov
adc
sbb
and
jecxz
sbb
lcall
repnz
inc
call
sub
inc
mov
loope
lea
xor
cmp
adc
pop
sbb
mov
outsl
arpl
ret
outsb
mov
add
das
ljmp
pop
call
adc
popa
xchg
ljmp
mov
lcall
nop
dec
mov
bswap
add
inc
xchg
ja
and
cmc
jbe
insl
ljmp
lods
mov
sub
xchg
or
repnz
cld
jb
insb
or
sub
mov
sbb
xor
and
push
xor
sub
cmp
cld
stc
dec
inc
cmp
pop
sbb
pop
jle
jmp
test
ljmp
stc
adc
out
mov
pushf
sbb
dec
inc
xor
pop
outsl
std
lcall
sbbl
mov
clc
pushf
addl
ss
call
cmp
insl
and
clc
sbbb
shlb
in
test
mov
mov
int
out
insl
cmc
adc
std
movsl
test
dec
cmp
push
rorl
pushl
mov
push
cwtl
dec
pop
add
jge
or
xlat
dec
std
ljmp
pop
andb
add
cmp
out
ljmp
pushl
xor
xor
push
xor
mov
ret
test
das
icebp
in
pop
xchg
xchg
call
sub
in
xorb
and
jl
call
fldl
push
arpl
ret
xchg
adc
xchg
jg
arpl
ljmp
lcall
push
lahf
mov
ficoms
dec
std
call
inc
xlat
mov
adc
clc
test
leave
ret
fcomps
mov
dec
xor
sub
pop
inc
cmpsl
popa
xchg
ljmp
subl
xchg
cwtl
iret
jnp,pt
aas
ror
mov
lds
jg
lcall
push
jg
mov
and
shrb
aaa
clc
es
cmp
ret
fbld
loopne
xor
sub
dec
out
cmp
imul
cmp
jno
jnp
fdivp
out
and
and
mov
hlt
das
out
sbb
jo
insl
lods
dec
push
ljmp
fwait
and
and
lods
idivb
loopne
out
or
or
cmp
fmuls
cmp
mov
bnd
push
adcl
movsb
jnp
movsl
stos
jl
pushf
cs
insb
ljmp
push
sbb
in
sahf
out
or
jecxz
sbb
lea
xor
ficompl
enter
ljmp
jg
shrb
addl
lcall
fdivr
outsl
cmc
adc
dec
les
insl
iret
pop
test
mov
mov
test
out
and
sbb
add
adc
fisttpl
jl
cmp
std
in
das
sub
loopne
std
mov
push
or
sar
outsl
adc
dec
mov
shlb
cmp
mov
mov
ljmp
sub
sbb
mov
inc
cwtl
and
cmp
adc
addl
push
fistpll
movaps
lcall
stc
cmpsl
adc
aas
into
stc
jle
xchg
decl
leave
inc
ror
fs
bound
dec
bound
fdivrs
jp
fidivrl
in
lock
incl
cmpsl
orl
rcr
sub
call
inc
fildll
cmp
mov
bound
jp
adc
lret
stos
pop
sub
or
pop
xor
and
insl
loopne
in
int3
btr
xor
cmp
getsec
mov
adc
inc
jmp
xor
daa
cmp
fucomip
test
repnz
dec
outsl
setle
inc
int
jo
incl
jmp
out
push
mov
js,pt
dec
fnop
adcl
or
incl
push
cmp
fcmovu
mov
or
push
hlt
jno
cli
fwait
jecxz
or
jmp
mov
dec
sahf
dec
lods
push
xor
ret
sbb
pop
or
push
lock
xchg
rolb
dec
xor
test
inc
std
aaa
clc
sahf
cmc
mov
add
add
xchg
mov
jecxz
repnz
and
add
mov
xchg
mov
lcall
mov
pop
pop
mov
cwtl
test
or
outsl
or
fistpll
aas
xor
outsb
inc
test
add
dec
cmc
call
call
sti
mov
pop
js
icebp
push
mov
mov
cmp
mov
add
jmp
les
jecxz
xor
xchg
lahf
fisubrs
sub
pop
sbb
xchg
sti
loop
sbb
cmp
ljmp
jmp
jnp
sbb
cmp
jmp
push
out
repnz
and
je
pop
outsl
movsb
inc
addr16
leave
xor
mov
adc
fcmovbe
ljmp
icebp
jno
fdivr
fistpll
xchg
mov
inc
xchg
dec
jbe
insb
xchg
xchg
mov
cmp
rcl
adc
xor
divb
outsl
hlt
daa
lods
adc
cmp
sub
jg
pushl
add
out
dec
inc
dec
in
loopne
loop
fsubs
js
stos
mov
mov
icebp
cmp
mov
aam
dec
lret
hlt
adc
push
cmp
and
push
dec
adc
push
leave
pop
inc
sbb
or
ljmp
mov
ret
cmp
add
sub
inc
popf
int
xor
pushl
pop
inc
arpl
jl
adc
in
fwait
dec
and
mov
mov
dec
inc
inc
ja
dec
cmp
push
lods
pusha
mov
movups
call
incl
into
loop
xchg
sub
daa
or
adc
sbb
and
movsl
xchg
push
add
rep
push
lods
add
rcr
jg
push
jo
and
jle
adcl
cs
enter
das
sub
lret
test
repz
add
out
scas
pop
call
xchg
pusha
inc
inc
mov
sub
and
test
in
fnstenv
and
mov
fmulp
in
cwtl
inc
lahf
ror
outsl
cli
mov
xchg
sbb
popf
add
push
lock
and
fistl
inc
movsl
popa
leave
adc
adc
push
inc
xchg
dec
repnz
andl
adc
inc
adc
cmp
in
mov
shlb
mov
addr16
lds
pop
mov
fcomps
mov
xchg
loop
ret
inc
outsl
std
call
and
flds
push
sub
clc
ds
rorl
add
sti
xor
and
push
test
or
adc
aam
xchg
jo
mov
dec
shl
ljmp
xchg
int
call
push
pop
punpckhdq
and
pop
int3
push
adc
out
imul
bound
mov
stos
arpl
jo
test
cmpsl
mov
idiv
pushl
add
xchg
xor
mov
popa
fwait
or
iret
test
outsl
lock
sub
sub
inc
imul
decl
push
mov
loopne
sahf
ss
and
jl
sbb
pop
pop
pop
lock
sbb
icebp
daa
dec
shlb
lret
lds
add
dec
mov
dec
jno
jl
xchg
sbb
xchg
bound
frstor
adc
jg
jbe
aad
shl
test
or
outsb
rorb
jp
js
stos
lcall
mov
and
add
shrl
fcompl
push
push
add
ret
int3
mov
inc
aaa
jecxz
movaps
push
sub
inc
wbinvd
cmp
lcall
decl
insl
and
add
and
jns
out
mov
sbb
loop
adc
xor
shl
lds
xchg
cwtl
loope
mov
filds
jge
dec
xchg
dec
push
inc
or
in
incl
lock
ficompl
jae
ss
pop
in
add
or
cli
decl
andb
out
jmp
push
cmpsl
fisubrl
das
js
outsl
lock
movsl
in
pop
or
shlb
xchg
imul
std
pop
add
adc
cmp
fs
add
roll
call
out
jmp
sub
mov
in
mov
xchg
pop
lods
jb
fs
mov
add
push
cmp
dec
je
mov
cs
into
adc
xchg
incl
shl
and
adc
popl
enter
or
rorb
pop
mov
mov
adc
xchg
cwtl
pop
dec
cld
add
cld
or
in
pop
cmp
xor
jmp
cmpsb
pop
cmpsl
and
pop
cs
enter
adc
xchg
dec
in
rorb
movsb
cmpl
decb
les
jg
xor
repnz
fnstcw
xlat
jbe
test
iret
pushf
push
pop
push
xor
mov
mov
dec
cmp
stos
jecxz
call
mov
es
loope
or
jl
outsl
jo
mov
ljmp
push
dec
in
aaa
test
sub
lret
adc
out
inc
cli
movsl
xchg
mov
mov
sbb
dec
incb
push
inc
dec
jg
dec
mov
std
mov
dec
pop
sar
xchg
dec
push
das
lock
dec
movsl
or
mov
inc
rolb
and
loop
faddp
push
jmp
inc
add
ljmp
pop
fs
add
test
xchg
or
and
mov
inc
aaa
cmp
adc
stos
push
test
mov
push
clc
pop
je
xor
test
cmpsb
hlt
jmp
mov
fisttpl
outsb
mov
jns
adc
sbb
lcall
out
adc
sub
leave
inc
cmp
mov
ret
sub
adc
xchg
pop
cmp
call
je
scas
pop
fdivs
sub
adc
in
fisttps
sbb
mov
mov
mov
cmp
push
repnz
adc
popa
push
mov
ljmp
mov
insb
cwtl
add
or
pop
cld
push
pop
pop
fisttps
dec
cld
lea
or
ret
pop
loop
and
mov
lret
adc
mov
nop
xchg
sub
hlt
or
push
scas
rclb
clc
adc
call
shl
andb
sbb
aaa
xchg
pop
outsb
pop
les
lods
inc
or
stos
adc
inc
push
xchg
xor
mov
cmovo
inc
mov
push
or
mov
mov
adc
adc
pushl
jp
sbb
pop
adc
stos
xor
hlt
addb
arpl
sub
push
inc
inc
sub
pop
or
and
sbb
psllw
fs
arpl
lcall
push
add
repnz
movsl
mov
les
cmp
js
insb
mov
pop
push
add
mov
call
xchg
rcll
jae
add
adc
sbb
lahf
add
cmp
xor
mov
sarl
jo
in
xchg
adcl
dec
add
dec
fwait
aas
and
pop
or
add
mov
addl
jno
and
les
xchg
inc
xchg
sti
nop
movsl
pusha
pop
push
and
cmp
inc
pop
dec
out
jne
addw
or
push
add
cld
xor
push
out
dec
push
or
incb
lcall
cmpsl
xor
mov
mov
dec
inc
add
out
lods
in
pop
jmp
sahf
out
xchg
pop
pop
imul
push
clc
movsl
inc
stc
mov
pop
pushf
out
mov
mov
adc
jg
lcall
mov
mov
jb
push
aaa
xor
ret
lret
adc
movsl
jmp
sbb
xor
cmp
lret
dec
dec
mov
leave
inc
cmpsl
jb
leave
xor
pusha
sub
jmp
and
dec
subb
fs
push
sub
ds
pop
pop
cmp
mov
ljmp
decl
je
pop
push
sub
add
cmp
pop
int
xchg
sti
pushl
jge
leave
aaa
add
push
nop
sbb
inc
fisubs
xor
lock
ret
sub
pop
add
jb
fcmovu
mov
jg
or
enter
das
adc
sub
jmp
fidivl
and
inc
inc
arpl
das
cld
jmp
stos
and
nop
sbb
add
xchg
jmp
inc
notb
push
push
mov
inc
sub
cltd
adc
rcrb
or
mov
adc
or
mov
lcall
and
es
mov
loopne
sub
sub
mov
fs
mov
fadds
adc
movsb
mov
dec
stc
mov
push
and
incl
xchg
fadds
dec
sub
dec
cmc
xchg
andl
pusha
in
idiv
incl
test
int3
icebp
sub
adc
jo
xor
add
mov
mov
adc
lcall
movsl
xor
sbb
cmp
adc
jnp
adc
call
leave
je
mov
or
xlat
cmc
lods
sub
lcall
outsl
jnp
fldt
xchg
adc
stc
leave
xor
cmpsb
cmp
jg
fsts
arpl
cmpl
and
outsl
sar
rorl
push
sub
jge
in
ljmp
lock
or
xchg
add
jns
das
inc
addl
decl
fwait
add
xor
rol
adc
adc
loopne
mov
lods
ret
sub
xchg
mov
loopne
ljmp
mov
imul
mov
mov
jecxz
lret
mov
clc
ret
or
ret
movsb
dec
push
std
add
mov
call
xchg
inc
mov
popa
mov
mov
mov
add
mov
inc
popa
mov
push
mov
pop
or
imul
mov
jnp
pop
pop
dec
sbb
xchg
enterw
push
mov
fisubrl
sbb
pop
in
outsl
dec
fisttps
adc
shl
pop
inc
test
xchg
and
mov
out
jp
sbb
mov
mov
cltd
pop
cmp
add
mov
push
adc
fisttpl
std
pushl
mov
or
leave
fsubp
add
aad
aad
xor
sbb
cmc
push
xchg
das
add
lds
lret
lock
ss
push
xchg
xchg
sti
je
nop
dec
push
pop
sub
ss
pusha
or
orl
fnsave
and
rorb
add
jo
mov
inc
clc
test
xchg
scas
pop
push
xchg
enter
loopne
pop
nop
jg
cmp
or
add
cmpsb
dec
pop
pop
in
loop
push
cmp
mov
ljmp
scas
fs
add
jns
xor
outsl
loopne
lcall
lods
sbbb
xchg
dec
cmp
pop
ret
fisttpl
pushf
sbb
inc
cmp
mov
nop
adc
push
xor
mov
xchg
lcall
xor
mov
scas
in
pminsw
or
and
mov
sub
divb
and
xlat
sti
and
test
subb
pusha
or
mov
out
je
inc
jmp
mov
jnp
movsb
enter
mov
mov
lock
mov
add
popa
pop
fld
imul
pop
xchg
xchg
pop
xchg
mov
cli
add
and
jg
lods
sub
or
add
sbb
cli
mov
mov
test
sbb
and
and
les
adc
push
fcoml
cmp
cmp
das
fldcw
adc
movsl
or
insb
push
push
movsb
gs
fs
add
call
lcall
cmp
pop
mov
jnp
ret
sbb
subb
gs
call
insb
aam
cltd
xchg
mov
push
jb,pn
cs
popf
push
pop
xchg
pop
sbb
add
dec
mov
mov
adc
mov
and
xchg
imul
or
xlat
and
or
movsl
push
xchg
and
sahf
call
outsl
cld
cs
cltd
test
decl
mov
call
add
inc
xchg
js
clc
adc
cli
sarl
jnp
mov
pop
and
mov
orl
adc
pop
test
sbb
stc
or
and
inc
movsl
test
pushl
push
inc
dec
lcall
push
mov
or
iret
popa
lcall
std
dec
adc
stc
cld
add
lock
push
dec
push
daa
ret
mov
icebp
mov
mov
iret
mov
call
push
call
adc
jl
inc
or
adc
mov
roll
decl
add
call
xlat
or
xchg
or
jg
pop
ljmp
and
jg
out
outsb
stos
mov
mov
pop
xor
or
in
scas
mov
inc
jg
mov
or
sbb
stos
inc
inc
push
es
jno
xchg
lcall
sub
lahf
xchg
or
dec
hlt
mov
mov
add
mov
mov
jecxz
outsl
std
ljmp
cwtl
ds
sub
lret
rol
sub
test
aad
mov
daa
push
push
mov
sarb
icebp
fwait
rolb
push
lds
lods
decl
jne
jmp
jecxz
les
icebp
int3
dec
add
cmpsb
dec
inc
push
mov
or
fcompl
xor
outsl
xor
mov
adc
and
dec
sub
jne
adc
mov
and
pop
mov
jmp
jbe
mov
incl
dec
add
mov
xchg
imul
ss
aad
fsubrs
in
into
pushf
cmp
mov
int3
pop
es
adcl
sarb
pushl
call
xchg
clc
jg
sub
push
outsl
dec
inc
jmp
out
lcall
sub
push
fistps
sti
int
and
or
in
loope
dec
addr16
andl
cmp
fidivrs
pop
xchg
xor
sub
rorb
dec
and
mov
ss
adc
jge
aaa
repz
mov
dec
adcb
push
sub
mov
sbb
fdivrp
mov
and
inc
mov
push
enter
lcall
pop
rcr
mov
add
lds
roll
xchg
gs
mov
pop
jbe
jmp
jge
pop
xchg
testl
and
inc
push
hlt
ljmp
stc
in
addb
mov
and
decl
movsb
fcompl
ljmp
fdivrp
dec
icebp
out
ss
movsb
mov
icebp
push
jnp
sub
inc
andw
add
rcr
dec
and
mov
push
push
pop
jecxz
pop
loope
cld
rorl
lods
mov
lcall
dec
leave
sti
xchg
ja
ja
add
push
pop
mov
mov
add
std
sub
inc
inc
cmovs
cmc
lock
xor
inc
or
lock
add
mov
aam
jmp
decl
adc
mov
pop
xchg
mov
xor
inc
stos
or
xor
pop
lcall
cld
mov
mov
dec
arpl
int3
and
lcall
xor
sub
add
or
shl
addr16
jp
movsb
jmp
inc
mul
jnp
inc
and
incl
mov
cmpsb
aam
mov
or
pushf
mov
or
cld
test
roll
jg
mov
scas
xor
out
sub
add
cld
movsl
dec
mov
dec
mov
aas
cmp
ds
std
pop
jge
cld
dec
pushf
jecxz
mov
jl
sbb
in
aaa
clc
jg
mov
stos
push
sub
jns
movsb
jle
js
leave
test
dec
jmp
adc
or
adc
push
dec
imul
jg
xlat
cwtl
add
imul
xor
or
inc
or
fistpll
mov
call
add
mov
mov
or
mov
dec
add
xchg
test
std
lcall
sbb
lods
jmp
jl
cld
add
fwait
arpl
sti
push
das
xor
xor
mov
xorb
ret
pmaxsw
enter
adc
mov
dec
jne
cmpsb
sub
or
pop
fbstp
inc
in
inc
out
mov
lock
dec
jle
dec
inc
les
pop
dec
jmp
ljmp
mov
imull
sti
push
arpl
xchg
dec
mov
loopne
call
and
cmp
fldl
inc
mov
dec
push
sub
cmpsl
adc
fcmovu
cld
mov
jg
xorb
gs
push
push
loopne
or
fcoms
out
arpl
push
test
push
dec
cmc
pop
mov
mov
popa
sub
mov
icebp
lods
or
mov
stos
icebp
notb
in
adcb
loope
inc
dec
out
mov
fs
mov
adc
stos
add
ror
clc
adc
mov
popf
popf
adc
sub
es
inc
jp
jmp
outsl
sti
cmpb
lret
pusha
adc
mov
mov
insb
arpl
lods
imul
outsl
aaa
mov
pop
adc
add
dec
ss
decl
push
jmp
pop
or
lea
cld
aad
mov
push
decl
add
sahf
pusha
fisubrl
jnp
into
cmp
movsl
pushl
cli
pushl
dec
mov
adc
or
enter
cmpsb
int3
test
inc
fmul
iret
jns
jb
call
push
lods
push
sub
sub
inc
rorb
sbb
xchg
mov
and
cmp
mov
ds
aad
or
sub
or
inc
mov
inc
and
mov
iret
fbld
icebp
lret
dec
into
mov
jnp
cmc
and
in
pop
mov
popa
adc
push
xchg
xchg
inc
cmpb
dec
push
fsubrs
loopne
adc
fsubp
inc
stos
xchg
mov
jmp
mov
ret
cmpsb
push
sub
inc
push
xchg
loope
and
push
fs
outsl
adc
sbb
xlat
and
js
in
jge
ret
xchg
push
add
jnp
enter
call
push
mov
shrl
xchg
cli
sbb
icebp
shl
adc
fldenv
push
inc
call
jg
cli
decl
lock
clc
dec
mov
push
mov
sbb
sbb
icebp
sub
dec
aas
rcrb
jo
movsl
out
pushf
mov
pop
popa
jno
mov
mov
aad
xor
inc
ljmp
fildll
inc
sbb
mov
xor
adc
cmpsl
mov
clc
push
cld
jg
lods
xor
add
sbb
sbb
jno
adc
cwtl
movhlps
incl
outsl
out
popl
or
data16
andb
mov
dec
inc
insb
push
sbb
ret
test
fcomps
mov
loopne
shl
adc
cld
jns
push
outsl
hlt
fbld
and
aad
mov
test
pusha
push
std
decl
and
mov
dec
aas
add
push
call
incl
xor
mov
pushw
subl
mov
test
add
inc
inc
scas
pop
sbb
das
cld
pop
adc
arpl
fs
cmp
sti
mov
fildll
sub
cltd
jno
cmp
stos
mov
push
push
push
sbb
dec
clc
dec
hlt
inc
cmp
outsl
fsubrl
push
inc
add
mov
pusha
push
popa
push
adc
mov
sub
jmp
add
mov
cmp
and
in
dec
lock
mov
add
incl
pop
dec
inc
mov
nop
lea
sbb
outsl
icebp
pushl
lret
inc
cmc
jecxz
stos
and
and
sub
mov
fisttpl
test
jp
push
lds
or
jmp
pop
pusha
adcl
ds
dec
hlt
rcrb
movb
jae
shll
dec
cmp
je
cmp
std
or
sub
dec
adc
and
or
xchg
cwtl
scas
incl
xchg
push
fs
and
es
pop
xor
clc
or
out
call
jp
push
jo
fistl
sbb
addb
inc
cli
add
add
dec
outsb
sub
mov
out
add
sub
hlt
inc
inc
ret
lahf
and
jne
or
lcall
jnp
xchg
push
and
cmc
ja
dec
lock
push
stos
cmpsl
cmp
mov
xchg
inc
jae
inc
lret
push
add
fs
and
xchg
inc
mov
pop
lret
pop
jmp
out
iret
cs
push
out
les
dec
xorb
push
add
pop
bswap
addb
add
enter
addr16
adc
inc
or
mov
inc
dec
les
adc
fldenv
aad
jb
add
jnp
mov
xchg
inc
adc
pop
xchg
pop
xchg
popa
xchg
std
inc
shrl
pushf
push
add
icebp
pop
mov
jnp
icebp
and
popa
adc
shll
xlat
bound
or
adc
push
or
ret
or
cld
xor
cmovo
aam
aas
push
and
and
xchg
mov
aad
adcb
loopne
mov
je
adc
aaa
cli
add
jl
mov
add
ljmp
das
outsl
mov
int
das
mov
pop
cld
jo
sbb
cmc
xchg
add
nop
mov
aad
mov
push
rorb
adc
nop
or
adc
into
push
push
and
lods
call
dec
je
sahf
rolb
je
pusha
dec
dec
les
push
or
add
mov
test
and
sar
add
inc
aad
pushf
shl
jecxz
cmpsl
stc
mov
sub
mov
mov
sti
push
jnp
dec
enter
movsl
jle
cmp
outsb
dec
mov
push
fcom
cld
inc
pushf
add
add
sub
sub
insb
push
sub
les
and
sahf
ret
popa
and
sahf
add
popa
cltd
or
test
xchg
fucom
jae
call
dec
and
andb
add
xchg
cmc
movsl
xor
sub
stos
cmpsl
iret
add
sub
incl
sbb
inc
jns
jne
dec
mov
test
fidivrl
xor
adc
cmp
and
stos
nop
inc
push
push
cs
mov
inc
mov
inc
mov
push
cmpsb
ret
mov
add
jg
xor
loop
push
mov
push
mov
call
negb
aad
aas
inc
pop
inc
or
lock
sub
inc
inc
fld1
or
pop
ja
movsl
mov
popa
in
lock
adc
shrl
mov
mov
mov
loope
sub
cld
scas
int3
insb
cli
ljmp
lods
testl
cmp
mov
pop
push
pushl
int
cmp
inc
out
push
or
rclb
xchg
scas
xchg
call
jl
movsl
mov
push
lcallw
in
fnstenv
push
fs
mov
jp
movsl
movb
call
adc
push
iret
negl
dec
adc
or
inc
and
push
lret
in
mov
adc
xor
scas
andl
movsb
xor
hlt
lea
jmp
xchg
nop
mov
and
jmp
lret
xor
pop
clc
mov
adc
stc
ret
and
mov
inc
mov
scas
test
rcrb
sbbb
pop
adc
jns
and
xor
mov
sub
out
lcall
mov
pop
lret
pushf
add
mov
gs
push
cltd
call
cs
call
pop
addb
sahf
or
mov
test
or
push
pop
cmp
icebp
mov
hlt
inc
mov
lcall
repnz
stc
sbb
cmp
mov
mov
pushf
fs
sub
call
and
mov
pop
xor
aaa
dec
lods
push
mov
filds
add
cmp
sbb
pop
lret
mov
mov
loop
cmpsb
xchg
push
push
decl
rcr
sbb
xlat
lahf
clc
fidivl
inc
clc
adc
push
inc
mov
mov
repz
cmpb
pop
ficoml
xchg
leave
hlt
jno
pop
flds
jg
mov
mov
in
in
dec
push
sbb
call
and
mov
push
and
push
incl
cmp
aad
stos
push
call
icebp
mov
fcompl
or
mov
lock
inc
push
add
jge
dec
adc
inc
add
jns
mov
lret
or
mov
in
push
mov
test
decl
movsl
ljmp
fists
xor
xchg
adc
jge
xchg
pop
pushf
sbb
sub
mov
or
sarb
push
or
jnp
xchg
incl
rol
inc
mov
pop
sub
je
push
fs
push
mov
incl
mov
sbb
adc
ds
mov
xor
xchg
inc
dec
aaa
jbe
js
mov
shlb
inc
or
sbb
test
adc
icebp
push
mov
scas
lret
add
into
push
sub
dec
popf
repnz
push
mov
xchg
arpl
incl
xor
sub
lcall
rorb
cmc
and
test
mov
sub
pop
mov
dec
jb
add
push
outsb
fnstsw
adc
scas
icebp
in
call
cli
xchg
jo
out
stc
inc
xor
adc
mov
mov
in
fwait
les
out
rclb
sbb
or
xchg
lcall
call
and
inc
mov
ss
mov
fsubl
rcrb
lods
pop
nop
cwtl
inc
xlat
inc
jg
imul
in
popf
or
inc
test
add
xor
jae
loop,pn
mov
test
decl
pop
push
sti
add
xor
mov
pusha
nop
sub
jmp
and
sbb
rorb
push
loop
loopne
call
mov
dec
mov
mov
pop
mov
lcall
ja
stos
xor
xor
push
sub
xchg
daa
mov
and
mov
pop
inc
stos
mov
and
es
popf
aas
adc
in
andb
dec
pop
loope
test
push
aam
ljmp
loopne
xchg
or
xor
rol
adc
aad
pop
push
mov
or
push
mov
or
xor
sub
mov
xchg
push
mov
adc
mov
stos
dec
in
insb
or
and
jecxz
mov
out
cmp
ret
loop
loopne
sub
sub
dec
lock
inc
pushf
pop
sbb
xchg
dec
cld
mov
popa
adc
icebp
mov
pop
repnz
sub
mov
xchg
cmp
mov
cmp
sbb
aas
imul
xchg
test
sub
or
ficompl
jg
add
js
dec
push
aas
xchg
stos
add
ljmp
scas
fcomps
sarl
insl
sbbb
sbb
add
and
pop
testb
pop
xor
push
push
lods
xchg
aaa
test
add
jge
push
inc
xor
dec
clc
or
inc
adc
add
or
push
jne
or
ss
test
inc
lahf
fcoml
stos
dec
xchg
shlb
and
icebp
pop
dec
pusha
ljmp
cmp
punpckhbw
ljmp
mov
icebp
cmc
jecxz
outsb
dec
jle
jnp
jg
adc
cmp
cmp
mov
clc
flds
nop
test
mov
jg
sbb
inc
lock
ja
inc
adc
or
call
ljmp
into
repnz
xchg
movsl
cmp
popa
push
or
jbe
ljmp
xchg
cmp
cltd
mov
mov
mov
stos
mov
gs
aam
or
in
pop
ljmp
cld
lcall
inc
test
dec
mov
jmp
pushl
mov
pop
cwtl
xchg
pop
lret
stos
mov
incl
fadd
xor
pop
lcall
add
lcall
mov
mov
lods
sbb
rcll
insl
jg
jl
adc
mov
mov
roll
ja
idiv
or
popf
in
push
sbb
push
xor
ficoml
cmc
lcall
test
xchg
add
addb
mov
test
sbb
inc
mov
hlt
or
or
jmp
sub
and
adc
pop
cld
mov
fnstsw
lcall
das
add
cmp
xchg
fistl
jg
pop
jnp
les
imul
shlb
loop
hlt
decl
add
into
sub
dec
pop
cmpsb
test
sub
mov
mov
mov
sub
aam
xchg
xorl
adc
mov
dec
scas
mov
orl
arpl
adc
sub
mov
je
das
mov
sahf
xorb
mov
dec
add
mov
dec
mov
gs
sub
jle
inc
cmp
and
xor
dec
scas
xchg
in
push
jle
dec
push
sub
sbb
ljmp
pop
add
adc
or
pop
mov
fwait
jecxz
loopne
dec
mov
or
or
xchg
xchg
enter
mov
xor
jbe
mov
dec
mov
adc
hlt
xor
popf
sbb
imul
sbb
dec
and
add
call
push
or
sub
pop
mov
add
sub
mov
add
test
and
nop
in
jmp
mov
adc
cmp
stos
inc
cmpsb
inc
inc
sbb
jnp
test
jbe
pop
xchg
mov
push
pop
std
mov
pop
shll
jmp
stc
addl
pop
or
cwtl
or
mov
dec
push
sub
or
pop
pop
xchg
int
jo
push
out
xchg
cli
shrl
xor
mov
roll
inc
xor
mov
add
ret
inc
push
inc
and
or
sbb
mov
adc
cmp
mov
sarl
add
push
mov
lods
inc
pop
movsl
fwait
pop
add
inc
or
cmpsl
inc
sbb
fmull
jb
or
sub
and
xor
mov
andl
xor
jno
cs
enter
sub
dec
jbe
jno
ror
iret
rcl
movsl
test
pop
imul
dec
adc
add
jno
nop
push
dec
or
xor
movsl
sbb
or
inc
and
int3
mov
cltd
add
add
popf
pop
xlat
in
or
cwtl
addl
test
mov
aas
nop
and
aam
lds
mov
dec
adc
into
loopne
es
popf
insb
inc
scas
mov
and
dec
aam
jg
ret
in
mov
and
int
and
jno
or
cli
xor
xchg
lods
sbb
mov
inc
lea
lea
dec
enter
gs
mov
sub
ret
mov
cltd
inc
ficoms
inc
mov
mov
cwtl
test
inc
loope
pop
lods
and
mov
fwait
mov
ljmp
push
lcall
jmp
nop
cs
pop
jl
sub
and
or
decl
mov
adc
test
or
lds
xor
mov
dec
fxch
inc
mov
mov
jne
stc
test
mov
push
lret
inc
push
mov
int
call
sbb
dec
and
or
ss
sbb
lahf
lock
or
sub
jmp
jg
mov
xchg
outsb
and
dec
adc
jnp
jo
xor
aas
mov
adc
jp
and
mov
test
push
lock
add
test
shrb
iret
test
jg
andb
or
inc
adc
jbe
or
ret
push
and
mov
repnz
cmp
inc
mov
or
data16
xchg
jg
jne
incl
imul
into
das
lods
loopne
fwait
repz
ljmp
std
call
pop
cmp
cmp
mov
movsl
sahf
pop
adc
out
inc
mov
fsubl
mov
repnz
push
notl
in
cmp
mov
mov
pusha
lods
shl
arpl
testl
pop
clc
lea
fldt
jbe
pusha
sbb
jmp
ljmp
fistpl
hlt
in
verw
adc
mov
dec
add
jmp
loop
data16
js
add
cs
push
mov
in
stc
mov
lock
push
add
lcall
dec
iret
push
and
test
mov
aas
pop
mov
daa
jl
mov
mov
xor
cmp
sub
or
ljmp
popl
sbb
fldcw
sub
mov
adc
repz
js
sbb
jecxz
cmpsl
andl
loopne
mov
outsb
popf
or
pop
fdivrs
add
fstp
imul
rorb
fistps
push
ret
push
xchg
xor
mov
aam
negl
mov
pop
std
mov
cmp
mov
or
push
test
jg
jmp
pop
xchg
sbb
sub
xor
out
in
in
and
mov
js
aaa
xlat
std
in
jbe
sbb
pop
hlt
and
call
sti
psubd
fsts
jmp
dec
sbb
inc
scas
nop
add
decl
pop
es
xor
shlb
push
xor
imul
rol
daa
clc
mov
dec
int
jmp
jns
mov
sbb
in
lock
cmp
shrl
inc
push
icebp
jg
pop
mov
inc
enter
or
int
out
test
push
push
insl
loop
aad
decb
rolb
mov
mov
in
pop
in
xchg
mov
sbb
ud0
std
andl
fs
cltd
scas
cwtl
mov
cs
add
fsubl
scas
dec
repz
jbe
cmp
sub
out
lock
imul
dec
mov
std
div
ds
cmpsl
cmpsb
loope
mov
inc
sbb
sarb
sbbl
adc
rcll
push
jno
sbb
sbb
decl
jmp
mov
test
into
ret
loopne
mov
push
dec
sub
rorl
pusha
xlat
inc
outsl
hlt
jmp
push
cmpsb
xchg
lret
popf
outsl
mov
cmp
rcrb
mov
add
movl
sbb
cld
ret
or
fimull
pushl
sbb
das
lock
adc
push
bound
jecxz
ret
inc
ret
inc
sub
pop
lcall
std
add
arpl
xor
and
ror
inc
fistl
decb
push
sahf
loope
loope
rclb
popf
aam
fsub
push
push
mov
push
cmp
sub
or
sub
jg
inc
adc
dec
or
jae
push
jecxz
sahf
adc
pop
in
xor
fstps
push
pop
mov
stos
push
ret
jbe
outsl
ss
in
and
and
lea
push
jle
fisubl
inc
mov
sar
ljmp
es
adc
mov
jmp
xchg
mov
cli
incl
sti
lock
outsl
or
sbb
inc
lea
dec
cld
cltd
xor
mov
mov
daa
xchg
out
adc
sbbl
adc
jne
jge
dec
outsb
fdivr
add
and
and
decl
adcb
fs
pop
rcpps
mov
mov
pop
push
adc
mov
adc
inc
add
imul
roll
lret
jl
mov
xor
push
sub
pop
dec
jmp
movsl
call
ss
dec
and
xchg
fsts
push
pushf
pop
or
lcall
add
jae
xchg
jecxz
pop
sub
add
sub
mov
mov
push
in
test
add
mov
jecxz
xchg
lds
das
jo
add
aaa
sarl
add
push
xlat
xor
lret
ljmp
or
out
xor
and
mov
mov
fistl
sub
mov
xor
test
add
mov
aaa
sub
adc
sub
xor
ret
sub
dec
in
jmp
aam
lahf
xchg
mov
mov
push
bound
clc
ljmp
or
stos
mov
and
outsl
pop
clc
lods
jbe
pop
cmp
test
push
push
mov
stos
andb
test
rorl
sbb
nop
mov
cmp
repz
sti
es
jge
das
cld
das
pop
cltd
les
sbb
jmp
mov
and
jns
ljmp
lock
es
insl
jb
or
sub
cmp
pop
pop
dec
movsl
lods
ljmp
cwtl
cmp
jo
nop
loope
faddl
in
jmp
adc
push
nop
dec
inc
xchg
cmp
sub
mov
or
push
xor
dec
cmp
lock
dec
push
pop
xor
insb
aad
pop
std
and
xchg
in
mov
cmp
and
mov
movsb
mov
test
sub
sahf
xor
add
jmp
mov
arpl
ja
cld
mov
test
and
mov
sub
or
jg
and
or
mov
mov
ret
addb
push
ds
inc
push
inc
add
xchg
jge
xchg
mov
insl
fldcw
push
jecxz
push
push
pop
mov
mov
xchg
jmp
mov
addr16
loopne
push
insl
test
sbb
ljmp
cmp
mov
dec
sti
jno
inc
adc
idivl
test
pushl
jge
inc
inc
inc
or
or
shll
mov
sbb
fisubs
jge
jecxz
pop
add
icebp
sbb
mov
sbb
mov
jmp
add
sbb
mov
idivb
int3
call
dec
sub
and
inc
mov
sub
pushaw
cmp
inc
les
lahf
fdivr
mov
xchg
hlt
and
ss
jge
xor
push
les
pop
pop
jns
cmp
and
adc
cld
pop
sub
rolb
xchg
icebp
movsl
xchg
pop
add
jmp
sub
mov
jns
cmp
decl
movsl
sbb
outsb
cld
mov
mov
inc
orb
push
cwtl
dec
sbb
sbb
mov
pop
jge
add
insb
es
ret
jg
ljmp
pusha
xchg
mov
fildll
dec
cmp
fnstenv
fisttpll
fstpt
outsb
cs
loope
lahf
push
fstl
faddl
shll
in
dec
sub
ljmp
pop
ror
mov
dec
in
clc
fildll
add
adc
std
or
adc
fildll
push
sbb
jmp
pop
xchg
mov
jmp
mov
adc
insl
jns
aad
jmp
adc
movsb
mov
clc
ljmp
loop
push
movsb
jmp
jmp
stos
dec
nop
mov
pushf
mov
cli
call
xchg
sbb
add
daa
push
mov
pop
fwait
sbb
pop
call
jns
cmp
pop
dec
add
div
bnd
aaa
and
jmp
js
sub
out
rolb
sbb
ljmp
mov
xor
jge
sarl
add
scas
mov
sbb
std
pop
push
movsb
stos
push
loopne
fcmovnbe
aam
incl
les
adc
inc
or
out
or
clc
jl
push
fnstcw
jne
push
leave
ret
outsl
jmp
cld
decl
shlb
inc
andl
sub
lcall
inc
cltd
add
pop
cmpb
jo
xchg
cwtl
ljmp
ljmp
mov
cli
push
test
push
and
sbb
xor
dec
in
dec
pop
mov
adc
mov
mov
ret
movsl
add
and
or
inc
push
sub
xchg
pop
iret
clc
dec
mov
add
jg
jp
adc
add
pusha
jnp
jb
push
std
and
dec
in
sar
ljmp
xchg
rclb
popa
daa
jo
adc
push
out
push
push
push
mov
mov
stos
adc
xor
cld
push
cmc
or
addr16
mov
cmc
jo
aad
lcall
jmp
cli
mov
or
pop
decl
incl
aam
lret
push
test
cmp
nop
lahf
mov
mov
cltd
sub
jg
push
or
sub
aad
and
sahf
or
mov
icebp
jg
jno
or
push
or
jb
adc
fistps
outsl
mov
push
pop
push
insb
inc
shrb
and
dec
push
lods
cli
loop
dec
out
test
cmp
leave
inc
pop
sub
or
pushf
pushf
cmc
pop
arpl
add
sbb
sti
ljmp
imul
push
test
dec
mov
out
and
sub
mov
ss
pushl
gs
xor
mov
mov
push
incl
adc
xor
xchg
decl
std
das
andl
adc
mov
inc
iret
mov
jg
call
mov
rol
cli
incl
sub
enter
push
jg
fwait
sub
fcompl
std
add
in
cmp
mov
loop
fucomip
add
mov
lds
sub
imulb
adc
call
or
jle
fldt
jg
sub
xchg
inc
add
and
inc
gs
scas
stc
incb
test
ss
js
mov
jg
or
ret
call
cli
cmp
es
inc
test
mov
jg
dec
jno
movsb
inc
out
movsb
add
loop
mov
call
mov
sarb
add
fistps
push
sub
clc
jg
cmc
sub
sbb
adc
xchg
sub
mov
or
jle
inc
dec
jae
sbb
push
jg
pop
lds
dec
inc
and
xor
cmpsb
test
loopne
lea
inc
pushf
add
sbb
push
push
pop
sti
add
pusha
inc
hlt
das
push
rcll
stos
mov
jecxz
decl
scas
in
jo
or
inc
ljmp
pop
dec
fcmovnb
adc
hlt
call
sbb
mov
inc
and
jp
in
mov
push
xchg
test
je
add
lcall
mov
and
mov
mov
add
icebp
jecxz
adc
push
inc
jl
orl
add
rorb
adc
aaa
add
pop
push
cltd
dec
inc
mov
push
xor
inc
mov
ljmp
and
or
call
jb
es
and
mov
mov
pop
fwait
incb
fisttpl
iret
popa
fisubrl
pop
mov
and
add
sar
rcll
mov
push
orl
mov
lcall
mov
or
xor
jl
push
das
icebp
lea
adc
cld
incl
decl
sbb
mov
jno
scas
and
mov
push
and
bound
roll
xor
sbb
mov
jnp
ljmp
sub
xchg
sbbb
repnz
adc
or
mov
mov
inc
ds
dec
out
mov
popf
inc
mov
lock
sbb
ljmp
ds
rolb
push
jmp
cmp
xchg
jecxz
cmpsl
xor
outsb
mov
xchg
or
mov
call
lods
and
pop
cmc
jp
add
mov
jg
pop
push
cmpsl
xchg
ret
mov
addb
aas
mov
popf
jb
sub
mov
cmp
push
imul
cltd
jne
lock
pushl
add
js
pop
mov
fistpl
mov
ret
xchg
push
sbb
or
loop
iret
mov
insl
and
jmp
inc
jl
pop
or
mov
out
mov
paddsw
xchg
mov
jno
inc
xchg
ret
and
shlb
out
and
inc
out
fwait
xchg
movsb
xor
ss
enter
and
mov
mov
mov
shlb
inc
xchg
dec
jg
adc
scas
or
cmp
sub
cmp
bswap
inc
mov
xchg
or
sbb
test
and
test
jle
inc
mov
fst
icebp
xchg
sub
mov
xchg
mov
imul
pop
push
and
pop
movsb
fnstsw
mov
lahf
div
ds
dec
dec
mov
push
inc
sbb
daa
pop
pop
push
or
aad
cmp
push
or
daa
xchg
pop
es
dec
movsl
int
and
imul
arpl
and
test
cmpsb
int3
push
fwait
pushf
adc
aas
cmpsl
xor
adcb
ljmp
pop
icebp
add
mov
push
inc
push
arpl
jmp
bound
sbb
push
les
mov
shl
and
test
je
mov
packssdw
test
clc
jo
inc
pop
enter
mov
shll
mov
pop
ret
adc
or
or
fsubr
cmp
incl
aam
aad
stos
push
stos
mov
dec
cmp
aas
sbb
sub
pushl
xor
mov
in
das
mov
xchg
call
mov
subb
pop
cs
cwtl
mov
mov
mov
sub
outsl
add
xor
xchg
xor
sbb
or
push
lods
mov
pop
and
jbe
inc
adc
inc
loop
cld
mov
mov
ss
outsl
icebp
sub
mov
cmp
push
xchg
out
lea
xlat
mov
xlat
sti
add
cmp
ret
cmp
or
into
fwait
pusha
cmp
inc
loop
push
lcall
sub
or
pop
sbb
cmp
mov
call
mov
inc
or
xchg
scas
pop
testb
sbb
jg
pushl
movsb
roll
or
int3
mov
bound
inc
sbb
mov
fimuls
mov
insb
inc
lods
out
xchg
repz
jne
dec
cmc
add
jp
mov
push
lds
pushl
mov
addr16
ljmp
les
decl
call
stc
cmp
mov
out
mov
in
call
test
ljmp
ja
jae
scas
popf
pop
xlat
decl
enter
mov
inc
push
sub
outsb
xchg
cli
xchg
inc
pop
push
call
inc
and
cmc
mov
adc
fistpll
jle
clc
dec
stos
inc
aas
push
or
push
jbe
mov
call
push
push
push
cld
nop
fadds
mov
or
mov
jecxz
lcall
mov
inc
mov
mov
andb
sti
push
xchg
xchg
popa
lahf
cli
call
fwait
push
lods
jns
stos
std
sbb
pop
in
js
adc
lea
adc
insl
pop
shrb
mov
add
lcall
cwtl
xchg
jo
pop
ds
mov
cld
movsl
movsb
cs
add
or
fisttps
fdivrp
adc
or
mov
xrelease
xchg
cmp
mov
test
jno
cmc
and
pop
cld
call
popa
loope
mov
xchg
adc
ret
cltd
nop
xchg
gs
outsb
test
test
jmp
leave
inc
mov
sbb
loop
xor
sub
out
sbb
test
jo
dec
push
pop
adc
std
sub
hlt
jg
rolb
imul
xchg
shlb
movsb
adc
mov
call
and
jg
mov
movsl
mov
mov
inc
lcall
in
pop
sbb
add
add
and
push
les
shll
adc
push
sbb
je
pushl
incb
inc
cmp
sarl
js
jnp
les
cmp
push
and
jb
dec
pop
lea
out
loope
decl
jmp
mov
mov
sbb
jmp
nop
xchg
pop
ss
lahf
cmp
clc
xchg
pop
ljmp
das
test
push
mov
add
ret
jno
add
call
cmp
or
daa
adc
mov
jae
pushf
insb
mov
push
add
xchg
mov
cs
xchg
sub
mov
push
pop
incl
xor
subb
mov
call
incl
rcrl
xchg
jp
ret
into
adc
leave
adc
movsb
xchg
in
jg
jmp
sti
mov
xlat
rorb
pop
cld
cmc
lret
xor
movsl
jbe
dec
ljmp
add
mov
sub
cmp
mov
push
not
stc
xor
mov
xor
cmp
ret
lods
push
incl
fsts
movsl
xchg
inc
inc
int3
mov
xor
xor
ret
repz
add
mov
jnp
aad
mov
out
push
out
xor
out
sub
mov
enter
sbb
xchg
dec
cmp
xchg
aad
adc
fdivr
or
data16
push
jle
filds
das
and
pop
sub
or
leave
mov
repnz
jbe
fadds
sbb
lods
and
ss
sbb
call
cli
sbb
stos
sub
das
faddl
xorl
jne
ljmp
test
enter
inc
push
roll
and
out
xchg
outsb
addr16
stos
pop
clc
inc
loope
mov
out
xor
mov
pop
xor
js
or
in
sub
nop
andnpd
jmp
mov
sub
adc
rep
add
cmpsb
mov
lock
push
lcall
pushl
jl
out
dec
out
inc
loop
aam
adc
mov
and
sbbl
sbb
xor
mov
rcr
cmp
mov
pushl
lds
jno
insl
xchg
mov
inc
enter
in
mov
cltd
cmpsb
je
jo
mov
xchg
jl
inc
mov
cli
ljmp
icebp
dec
and
xchg
lea
add
pop
rorl
decl
pop
cld
in
push
cli
data16
inc
test
and
call
jg
sub
push
xchg
rclb
loop
mov
test
pop
inc
and
push
xchg
sbb
das
add
push
xor
les
add
jns
xor
bound
mov
in
push
xchg
mov
out
cmc
frstor
mov
sbb
adc
or
leave
adc
lods
mov
sti
inc
mov
decl
adc
xor
cmp
mov
xchg
mov
sub
das
ffree
and
push
lahf
cmp
adc
movsl
xor
push
jg
pop
jb
inc
and
add
mov
test
lret
arpl
pushl
outsb
incl
shlb
ror
or
xor
push
sub
cwtl
lea
mov
mov
cmp
aam
inc
and
inc
mov
mov
scas
and
jb
add
div
enter
shlb
and
pminsw
mov
push
or
lcall
fnstenv
adc
xchg
xchg
cmpb
mov
enter
push
add
mov
adc
xor
mov
popa
add
dec
add
sub
jmp
mov
or
add
jge
xchg
adc
pop
mov
cli
data16
in
cmc
cmp
mov
mov
jnp
shrb
iret
sub
fwait
and
push
popa
xchg
xor
aaa
mov
fucomi
das
icebp
inc
xchg
int3
sub
les
fwait
inc
and
sub
mov
pop
adc
cmp
cmc
das
std
adc
outsb
adc
lds
adc
jg
sbb
mov
sbb
pop
out
loop
xor
clc
pushl
adc
data16
adc
int3
inc
ds
sti
dec
data16
push
mov
sub
push
icebp
pushfw
and
adc
adc
cmp
std
into
stos
test
ljmp
jg
cmpsl
push
loope
das
inc
aas
lret
popf
inc
push
jbe
mov
adc
fidivs
inc
or
pop
jmp
xchg
xchg
mov
ljmp
pop
inc
mov
out
lds
repz
push
shrb
addr16
fdivs
adc
xchg
jb
pop
pop
push
sub
xchg
fsubr
cld
imul
xor
loopne
outsb
adc
or
in
ja
dec
push
sahf
sbb
push
lea
add
inc
xor
cs
cmpb
ljmp
rcrl
std
adc
fsubrp
mov
mov
cmp
ljmp
sub
add
pop
cmpsb
add
mov
xor
dec
and
inc
nop
lea
cli
decl
mov
mov
sbb
add
xor
sbb
inc
jmp
pop
add
xor
sub
insb
mov
cmp
or
mov
push
jle
jns
lock
xor
mov
popf
xchg
jecxz
jg
mov
adc
sbb
lret
lock
fisubrl
stos
rorb
outsb
insl
faddl
adc
divl
push
in
mov
sub
ret
into
or
or
scas
add
loopne
cli
call
cld
shlb
push
mov
fsubrs
dec
sub
mov
cmc
cld
daa
lock
jecxz
testl
fucomp
mov
xchg
std
push
pop
or
les
imul
mov
dec
popf
xchg
push
aaa
cmpsl
dec
lcall
xchg
movsl
adcl
sub
jecxz
dec
jmp
nop
les
jp
je
adc
clc
lcall
pop
mov
enter
push
and
mov
cli
xor
adc
arpl
or
mov
dec
mov
jmp
shrb
or
add
dec
jmp
pushl
xchg
cld
ffree
push
pop
xor
pop
pusha
xor
lds
pop
inc
push
hlt
mov
pop
mov
pop
add
scas
pushf
inc
push
jecxz
aam
sub
loopne
and
repz
loopne
lods
ljmp
push
push
pop
nop
cmpsb
cmc
stc
adc
pop
les
decl
das
inc
mov
loope
sti
rcrb
add
ljmp
mov
push
cltd
fmuls
or
xor
das
les
adc
inc
ljmp
xchg
sbb
push
decl
sbb
add
sub
mov
das
cld
mov
mov
xlat
dec
and
aaa
adc
add
ljmp
call
dec
les
xlat
dec
mov
pusha
test
int3
daa
and
out
ret
js
testl
adc
outsb
in
test
loope
mov
xchg
add
cltd
and
jno
fildl
mov
cmp
xchg
adc
rolb
mov
pop
decl
push
inc
sbb
and
sbb
jmp
mov
test
or
add
xor
icebp
ljmp
cmc
movsb
int
cmp
adc
mov
add
mov
xor
mov
jae
adc
push
daa
sti
andps
mov
rolw
dec
cmp
adc
shl
incl
ret
or
ret
out
or
ret
adc
clc
sbb
mov
cmpsl
out
lcall
adc
jle
scas
mov
movsl
lock
lcall
fdivl
or
mov
jbe
lock
mov
mov
or
decl
xor
and
movsb
sbb
adc
aaa
add
call
lods
fimuls
inc
pusha
cs
and
aam
jg
lea
push
inc
cld
repz
iret
inc
xor
add
das
hlt
push
xor
inc
cmp
adc
dec
int
mov
jle
and
jecxz
repnz
stos
cmp
push
shl
dec
into
enter
jg
push
push
and
inc
xchg
and
out
movsb
sub
call
push
sbb
adc
sub
inc
xlat
test
fisubs
lds
cmpsb
jb
clc
mov
mov
frstor
inc
jo
call
xchg
mov
jb
loope
mov
sar
jg
cld
xor
mov
push
sbb
out
push
cwtl
addr16
inc
mov
incl
inc
add
cmp
add
cmp
and
negl
in
mov
jns
xchg
cs
incl
and
sti
adc
xchg
xchg
cli
decl
sti
ret
mov
cli
mov
mov
scas
mov
fists
lcall
cld
pop
stc
call
iret
cmp
dec
sub
add
aas
mov
sbb
cld
lock
paddb
pushl
jge
mov
jle
or
stc
loop
std
cld
insb
lcall
decl
leave
cwtl
cmp
lcall
pop
pop
daa
ds
das
lock
jge
ds
sbb
std
jg
or
cli
bound
or
lds
and
mov
xchg
rorb
je
jg
fidivrl
pop
clc
mov
gs
inc
sbbb
adc
pop
in
xchg
popf
ds
call
lcall
cmp
inc
xchg
jl
subl
bound
mov
mov
dec
mov
and
out
loop
xchg
ret
mov
outsb
cmp
xor
add
test
mov
cltd
inc
clc
pop
dec
adc
mov
pushf
fs
dec
shlb
xchg
setnp
push
call
sbb
js
sub
jl
ds
jecxz
jge
iret
inc
and
cmc
cmp
pop
hlt
icebp
ds
les
cld
pop
lcall
jge
ret
clc
ret
sub
ds
xor
jecxz
incl
and
ds
clc
pop
clc
lds
ss
add
ljmp
outsb
jmp
clc
mov
xor
mov
or
push
sbb
push
mov
push
jl
jmp
in
mov
sbb
jmp
fdivrl
mov
out
jns
mov
and
into
jecxz
loopne
sti
fistpl
iret
ds
dec
sti
cmpsl
mov
clc
pop
jp
lds
jecxz
dec
adc
adc
jl
ss
jl
clc
scas
pop
in
mul
mov
pop
sub
fstpl
in
lock
cld
dec
sbb
clc
jg
arpl
or
out
shll
lock
ret
roll
mov
ret
mov
fistpll
loope
clc
xchg
lods
or
ds
jg
icebp
leave
jl
and
icebp
mov
sub
push
jecxz
pop
pop
cltd
popa
jl
adc
mov
outsl
push
into
movsl
inc
lcall
sbb
pop
jne
out
adc
pop
out
lock
push
sub
lret
daa
adc
imul
mov
mov
add
or
stos
push
push
mov
inc
cwtl
jg
aad
push
mov
sbb
dec
xor
mov
push
aaa
jo
inc
dec
adc
xchg
mov
fwait
stos
jo
or
sub
sub
out
cli
mov
mov
dec
sbb
jo
inc
mov
lods
es
cld
pop
test
cld
inc
call
push
mov
fidivl
fildl
sahf
sahf
mov
fnstsw
idivl
mov
or
pop
pop
std
xchg
or
sbb
adc
xchg
mov
incl
js
pop
jno,pt
or
sti
pop
sar
and
xor
push
xchg
sub
outsl
decl
std
mov
je
dec
fdivl
dec
inc
loopne
mov
pushf
or
fdivrp
mov
fsubrl
es
mov
push
je
inc
fcomi
xor
ljmp
aam
sbb
lret
inc
insb
add
cli
xchg
xorb
int3
pop
mov
mov
mov
in
rcr
jg
jmp
dec
arpl
xchg
in
and
dec
lock
insl
mov
rcl
push
mov
bound
jb
mov
or
mov
decl
mov
test
and
int
rorb
add
movsl
mov
pop
stos
or
aas
test
push
movsb
jge
fildll
mov
jg
sub
addr16
into
adc
das
adc
in
xchg
mov
push
test
xchg
mov
mov
sbb
jecxz
xchg
xor
mov
xchg
sub
and
stos
jae
data16
imul
incl
call
sbb
incb
out
aas
les
mov
pop
sbb
sbb
enter
mov
mov
fdivrs
loopne
jecxz
orb
cmp
outsl
call
push
or
mov
xor
pop
mov
sub
incl
nop
rolb
aaa
push
sub
jg
sbb
lret
or
xorl
fistpll
xchg
add
pop
cmp
inc
mov
mov
std
cmovg
adc
dec
push
dec
pop
test
fdivr
push
cltd
xlat
incl
add
push
add
mov
fld
or
mov
loop
pop
lret
leave
xor
movsb
loope
or
and
push
push
mov
mov
jnp
decl
outsb
lea
pop
fnstcw
cmc
push
std
lock
mov
or
fistpll
and
pop
xor
mov
jecxz
sbbl
pop
clc
sub
dec
jp
mov
fstpt
pusha
mov
pop
clc
call
repnz
fldcw
test
sub
xchg
inc
mov
jg
das
icebp
add
xchg
mov
push
jbe
adc
dec
in
xor
xchg
daa
mov
je
mov
or
push
cmpl
mov
jbe
jle
ret
xchg
jmp
popf
fldenv
cmc
push
dec
rorb
jecxz
xor
andb
add
lcall
les
das
jne
fstl
xchg
imull
push
mov
add
sub
mov
dec
adc
fbld
mov
inc
push
add
or
pusha
push
cmc
lcall
mov
push
add
push
pusha
xor
adc
dec
out
stos
or
mov
fistps
aas
outsl
loopne
sub
xlat
int3
mov
sbb
add
fistps
ljmp
push
add
and
mov
incl
mov
inc
mov
mov
mov
pop
cmp
pushl
into
push
add
cli
add
cmp
std
adc
cwtl
sub
cld
jg
jmp
and
jns
out
ljmp
rol
lock
hlt
outsl
mov
inc
leave
mov
sbbb
leave
nop
add
into
test
add
dec
pop
push
test
adc
xchg
shrl
fldl
aas
xor
lods
add
int3
or
adc
stos
push
or
nop
pop
mov
add
xchg
lret
sti
insb
and
lea
lcall
jmp
sbbl
mov
rclb
aam
mov
imulb
push
aas
aaa
and
adc
sahf
mov
mov
loop
sub
add
push
sub
shll
dec
inc
in
mov
and
loopne
or
mov
mov
fbld
jno
xor
movsl
mov
and
and
dec
mov
lods
jle
dec
in
pop
sub
lods
mov
xor
mov
or
hlt
decl
loope
sbb
cmpsb
loope
mov
add
adc
mov
mov
xchg
inc
aam
mov
insl
push
fwait
cld
jg
incl
icebp
push
mov
or
icebp
inc
xor
pop
xchg
or
inc
xlat
and
xchg
lds
mov
in
pushl
xchg
bswap
add
xchg
inc
sub
adc
or
pushl
adc
into
push
imul
jmp
test
ljmp
scas
lods
adc
inc
jg
decl
mov
pop
jg
sbb
jno
bound
or
jg
pushl
int3
xchg
cmc
js
jmp
ss
mov
fs
mov
ljmp
dec
call
sbb
dec
or
pop
sub
mov
xlat
push
bound
add
call
pop
pop
data16
inc
jle
mov
imul
and
sub
jnp
out
xchg
hlt
inc
inc
push
ljmp
nop
int3
imul
mov
inc
mov
dec
repnz
movsl
and
insb
fistpl
inc
ljmp
mov
pop
popa
sbb
dec
adcb
add
sub
mov
push
ljmp
insb
cld
push
adc
and
out
in
push
fnstcw
jns
test
mov
push
jmp
xlat
rcl
rcll
sub
incl
push
add
cli
mov
xchg
std
pop
add
ljmp
jle
nop
sub
jecxz
ret
and
pop
mov
push
loopne
jmp
jns
popw
dec
xor
cmp
subl
sub
push
dec
adc
jmp
movsl
push
jae
dec
and
or
xchg
ds
mov
jg
or
dec
sar
sub
push
mov
or
jg
das
lock
clc
push
push
sbb
xor
dec
imul
fcomi
push
inc
mov
shrb
mov
adc
pop
js
dec
repz
or
fsubrl
das
push
mov
inc
test
add
shrb
and
fstpl
and
setb
das
mov
dec
insl
jp
sbb
jg
xchg
repnz
add
push
and
adcb
jne
mov
and
enter
inc
clc
and
jb
daa
push
ljmp
cltd
mov
dec
jno
mov
ret
xchg
add
sbb
clc
sub
pop
inc
outsl
lcall
lahf
or
call
jge
es
hlt
incl
fbld
fdivs
mov
inc
add
mov
jmp
fst
mov
aaa
fisubl
or
scas
lcall
mov
dec
repz
popa
push
jnp
adc
mov
orb
mov
pop
andl
ret
jg
ret
das
mov
test
mov
orb
ficoml
rcr
andl
repnz
adc
gs
loopne
pushl
xchg
and
push
clc
sub
cwtl
push
add
daa
push
scas
jl
cmp
ljmp
push
out
movsb
ret
lods
dec
lea
rol
jl
xor
mov
mov
lcall
std
ljmp
stos
mov
mov
xchg
pop
cmp
add
aaa
or
ds
lock
adc
jb
lcall
and
shlb
idivb
fnstenv
cmp
clc
decl
je
push
pop
jb
repz
sub
call
jge
xchg
in
push
cli
mov
int3
xchg
sub
fildl
daa
dec
xlat
adc
ljmp
test
xchg
testb
mov
xchg
lock
movsl
push
cmp
xchg
aam
out
bound
outsb
cld
das
push
xchg
ret
fistl
addl
lods
imul
lcall
pop
mov
and
inc
in
popf
mov
repz
fldenv
or
iret
hlt
mov
aaa
ss
push
and
insb
mov
ds
mov
outsb
imul
imul
out
and
and
nop
ret
fs
adc
fucomip
jmp
xchg
sub
aas
jns
leave
xchg
mov
out
and
jg
push
xchg
mov
or
call
sbb
stos
pop
and
mov
pop
sbb
adc
xor
and
pop
pop
xor
nop
mov
pop
and
test
sub
xor
popf
add
nop
test
je
sbb
loope
sbb
cld
adc
test
pop
sbb
out
movsl
orb
cs
push
push
pop
popa
jmp
or
xorb
icebp
in
add
sti
inc
inc
push
or
inc
mov
or
ljmp
cmp
movsb
push
mov
xchg
and
jecxz
push
aam
add
sti
sub
xchg
or
mov
test
push
mov
xchg
enter
mov
mov
arpl
dec
mov
fadds
inc
das
pop
test
sti
imul
inc
xor
push
cmp
lret
xor
lods
push
jecxz
and
add
ret
cmp
adc
adc
fs
imul
mov
inc
std
push
out
add
add
jo
mov
and
mov
lea
sar
call
cs
lret
adcb
movsb
pop
and
jnp
fnstsw
lcall
mov
inc
test
clc
inc
and
orb
jmp
push
add
jg
sub
mov
lcall
subl
pop
mov
add
mov
in
adc
mov
xchg
cli
jmp
std
int3
sub
testb
dec
sbb
call
sbbl
or
gs
inc
jae
stos
mov
xchg
add
pop
push
cmc
ljmp
fnstsw
and
xchg
fbld
sbbb
xchg
mov
mov
dec
sub
pop
stos
push
orl
test
sbb
cmpsb
and
out
repz
lcall
hlt
push
sbb
pop
mov
sbb
add
mov
outsb
mov
ret
std
or
lahf
sbb
popf
pop
push
or
sbb
pop
clc
mov
rcrl
nop
pop
and
imul
lret
add
lcall
out
xor
enter
inc
sub
aam
mov
pusha
lret
jg
push
loopne
dec
sub
inc
cli
in
test
ss
aaa
mov
rorl
out
and
cmp
enter
push
add
push
dec
pop
loopne
les
push
xorl
add
mov
repnz
push
ljmp
ror
jp
pushl
xchg
or
cli
sub
pop
jbe
mov
inc
sbb
add
icebp
cmpsb
cmp
pop
movsb
in
xchg
jle
mov
call
sbb
or
xchg
je
add
imulb
mov
into
dec
idivb
aam
push
jg
ljmp
jo
pushf
sub
movntq
out
sahf
cmpsb
mov
mov
call
cwtl
and
xor
ret
mov
jmp
adc
outsl
inc
adc
insb
je
xchg
jnp
and
mov
mov
add
cmp
std
call
cmp
test
int3
push
cmp
mov
mov
fbstp
sti
decl
xchg
cmp
xchg
cmp
insb
ss
testl
fildll
mov
mov
jne
xchg
orb
mov
fldt
int
inc
sarl
fistpll
adc
popl
das
std
roll
jmp
addr16
ret
mov
ss
movsl
test
fadds
outsb
test
call
sbb
sbb
lcall
push
sub
and
int
nop
pop
mov
add
mov
or
jg
pushl
pusha
pop
jle
aas
inc
loope
addb
shl
push
jecxz
mov
xlat
sbb
pushl
mov
mov
imul
decl
clc
addb
mov
sahf
mov
inc
fldcw
inc
jo
in
in
xchg
outsl
hlt
pushl
pop
add
dec
cmp
outsl
pop
imul
fsubs
bound
notb
fbld
vmovntps
decl
call
push
mov
jae
or
fstl
test
mov
mov
decl
mov
cwtl
subl
add
pop
mov
outsl
iret
rorl
sbb
pop
or
xchg
and
std
fists
outsl
cld
test
subl
add
lahf
push
aas
addr16
dec
xchg
pushl
lea
es
xchg
jns
dec
xchg
lds
test
jg
lea
fimuls
jb
push
stos
inc
shrl
in
add
decl
mov
insb
jl
adc
pushl
mov
inc
cli
dec
or
cmpsl
mov
push
push
push
dec
aad
pop
pop
cli
add
xchg
stos
adc
lret
insl
call
mov
icebp
dec
imul
adc
cmp
push
ljmp
jg
int3
not
push
aad
loopne
test
in
shrb
or
std
sub
jp
je
pop
mov
popa
dec
mov
and
sbb
mov
aam
int
lcall
call
sub
dec
mov
add
pop
and
lock
ret
push
add
cld
incl
sbbb
and
push
pop
in
ljmp
je
fisttps
adc
cli
lret
push
push
jl
mov
ljmp
std
popa
testl
pop
je
ret
add
sbb
mov
test
cmp
sbb
pop
or
mov
pop
mov
lods
inc
and
sti
fnstsw
ljmp
jmp
jno
test
push
in
xor
cld
sub
jmp
enter
std
fistps
jns
gs
jl
sbb
adc
fisubs
pop
sub
aaa
enter
add
xor
ljmp
and
daa
jnp
cmp
enter
getsec
icebp
mov
ret
add
into
mov
fnsave
daa
sti
adc
das
mov
decl
inc
pop
cld
pushf
mov
pop
mov
popf
jle
outsl
or
mov
aad
test
loop
adc
repz
imul
nop
pop
mov
clc
pop
js
or
cmpsb
add
imul
testl
jge
faddl
pusha
hlt
or
inc
daa
adc
lcall
in
adc
jecxz
sbb
xchg
adc
mov
lcall
inc
pushl
scas
int3
xchg
enter
push
jl
xor
xchg
jecxz
add
jae
fst
rolb
and
mov
adc
add
xor
jg
stos
sub
cmp
or
jle
pop
add
push
lods
mov
sbb
fs
add
cmp
dec
cld
imul
jge
xor
xor
pop
test
sbb
dec
lret
pusha
mov
pop
and
std
in
daa
fnstcw
adc
scas
jg
in
xor
test
repz
push
add
push
jg
rorb
sbb
cmp
sarl
sbb
mov
jb
fistpll
sub
js
adc
out
push
push
or
inc
or
xchg
pop
cmp
test
xchg
in
mov
cld
icebp
mov
dec
mull
add
pop
mov
cltd
xchg
and
std
mulb
or
stos
cmp
xor
add
clc
pop
fistl
xor
in
incl
fidivrs
fiadds
sub
cltd
in
mov
and
loopne
scas
pop
je
lret
movsb
and
subb
push
mov
push
push
mov
shlb
insl
mov
daa
aaa
mov
cmp
mov
xorb
out
and
and
repnz
cltd
adc
inc
bound
push
sub
push
pop
call
dec
push
sbb
xor
clc
xlat
mov
jl
imul
pusha
in
aaa
repnz
decl
mov
add
pop
mov
jae
or
test
add
shll
sub
decl
and
out
sbb
in
cwtl
insb
and
inc
aaa
jae
lea
fwait
pcmpeqw
xchg
pushf
lods
iret
sbb
lds
call
jmp
jg
icebp
xchg
xchg
out
cmp
ffreep
mov
es
add
fwait
pushl
xchg
out
pop
adc
out
fidivs
outsb
jg
and
dec
and
push
mov
mov
ss
fiadds
push
int3
dec
mov
add
mov
aam
test
cmpl
je
xchg
pusha
pop
in
dec
movsb
out
adc
and
inc
jg
jg
adc
add
rcll
fnstsw
inc
push
mov
mov
mov
xchg
into
xor
mov
add
jg
scas
daa
mov
shrb
sti
jecxz
cli
adcb
mov
jg
ret
or
ds
idivb
xor
pop
cld
stos
mov
mov
sbb
inc
ljmp
cld
aad
outsb
add
int3
ret
fistl
xchg
pop
jle
das
adcl
push
pop
fstpt
hlt
and
gs
push
or
fdivr
inc
or
push
fcoms
mov
mov
xchg
mov
sbb
and
mull
mov
push
or
or
xchg
jo
cmc
cwtl
std
or
fdivl
jg
cmp
je
dec
mov
movsl
lods
jge
xchg
xchg
imul
cli
mov
mov
sbb
push
push
fs
nop
or
fucomip
jg
ljmp
sahf
push
xchg
pop
jge
shr
ss
lds
rorl
push
stos
into
mov
mov
xor
addb
pusha
xor
jl
shll
dec
cld
jg
sub
es
mov
push
xor
cld
std
call
cmp
lahf
mov
and
jp
shll
adc
mov
jns
rep
xor
lock
sub
jmp
xchg
or
mov
xchg
push
mov
sub
addb
imul
clc
notb
cmc
inc
pushf
push
cmpsb
outsl
mov
cmpsl
int3
lcall
fwait
dec
jle
int3
mov
les
in
lock
fcmovnb
or
cltd
push
sbb
gs
sbb
cmp
ljmp
rol
and
or
adc
lcall
mov
pushl
pop
mov
cwtl
and
js
mov
paddusw
hlt
pop
xor
lret
dec
icebp
js
pushf
or
xchg
dec
fmul
dec
les
out
shrl
cmpsl
xor
jecxz
sbb
pushl
dec
inc
cmp
lds
fwait
push
sbb
mov
fisttpl
mov
cld
add
in
adc
mov
in
aaa
call
clc
lcall
adc
dec
mov
lods
or
in
adc
adc
sub
lret
dec
fbld
sub
add
dec
mov
cmp
jg
inc
cld
stos
je
inc
pop
and
add
or
imul
test
xchg
insl
xor
inc
and
mov
sbbb
subl
push
push
ljmp
push
xchg
gs
cmpsb
sub
insb
mov
lds
cmpsb
movsl
dec
or
mov
dec
or
sub
mov
sarb
push
pop
test
pushf
aas
addr16
mov
lret
cli
mov
and
add
rorb
push
aad
out
dec
pop
ljmp
adc
mov
add
decl
daa
push
mov
inc
lods
sub
cltd
dec
and
pop
rorb
test
add
mov
dec
arpl
in
mov
cli
mov
push
fsubs
mov
sbb
sub
ljmp
fldt
mov
lods
pop
jne
lods
pop
test
jle
in
mov
mov
cmp
mov
push
cld
pop
jno
xor
outsb
sarb
addl
cmp
add
inc
je
sar
dec
lods
outsb
add
xchg
incl
sbb
pop
shlb
pop
fstl
pop
sahf
dec
lret
xor
push
pusha
orl
jmp
jl
inc
sub
arpl
xor
fs
adcb
mov
jns
mov
cmp
mov
scas
out
mov
mov
out
pop
cli
inc
dec
inc
es
popa
jb
adc
movsb
cli
popa
mov
ljmp
movsl
fdivr
adc
call
mov
mov
inc
cmpsl
mov
mov
movsb
and
xchg
aad
sahf
aas
cwtl
sub
cmc
dec
dec
ror
js
jns
pop
cmp
aam
fcomip
fadds
sbb
lahf
in
in
test
std
xchg
movsl
aad
lret
cmpl
outsb
std
pop
mov
dec
clc
xor
inc
int
lcall
andl
sarb
xor
mov
or
in
ljmp
loop
mov
test
sub
jecxz
jmp
aam
jne
hlt
mov
inc
add
and
call
push
test
mov
mov
fdivrl
mov
test
adc
add
cmp
dec
adc
outsl
hlt
fbstp
clc
jl
mov
inc
in
pop
nop
fwait
adc
imul
jp
dec
mov
inc
mov
nop
cmpsl
sub
loop
add
xchg
lret
fidivrl
icebp
lods
aam
push
cmpsl
mov
das
ficoml
ficoml
aam
ljmp
push
lcall
jecxz
xchg
mov
or
xor
lock
mov
fimuls
repz
dec
mov
pop
inc
jmp
mov
cwtl
pop
push
inc
cmc
cs
lcall
push
add
in
bound
jae
adc
jmp
xlat
mov
push
ljmp
clc
xchg
sub
call
add
sti
jo
xchg
int3
int3
outsb
inc
sbbl
scas
dec
push
loopne
xor
push
aaa
mov
jg
arpl
fcomps
sbb
push
lock
ljmp
bound
mov
sub
mov
fwait
rcll
jg
mov
sbb
mov
jne
movsb
jge
pop
decl
mov
push
mov
scas
fucomip
call
xlat
jbe
jno
xor
and
pop
push
sahf
es
push
decl
insl
std
stos
push
into
push
cmp
push
xor
xorb
clc
stc
rorl
adc
dec
sub
sbb
inc
call
pop
dec
add
jg
pop
add
adc
inc
or
add
mov
lea
and
in
and
or
add
ret
enter
sbb
sbb
mov
icebp
fs
or
sub
dec
mov
jle
jl
lods
add
orl
xchg
jb
cmp
mov
std
call
pop
ret
in
test
and
mov
jecxz
icebp
adc
in
ljmp
or
pop
sub
xchg
cwtl
bound
mov
ljmp
icebp
movsb
cmpsl
loope
inc
aaa
add
out
adc
cld
fidivrs
and
push
je
clc
mov
sbb
stos
test
pop
cmp
cmp
and
adc
jmp
cmc
jg
or
jmp
add
or
inc
fsts
push
cmp
add
ficomps
leave
add
inc
cmp
hlt
rcrb
xchg
lahf
adc
jno
outsb
out
out
mov
mov
pop
inc
loopnew
or
sub
inc
iret
xchg
or
test
jno
and
lahf
rcrl
adc
decl
dec
stc
pop
iret
xchg
lahf
lock
aas
data16
test
cld
addr16
cmpsl
or
lcall
fs
lock
js
out
cltd
arpl
cld
pop
loopne
mov
aas
mov
cmp
xchg
daa
jle
xchg
pop
sbb
pop
sub
lods
pop
cld
cltd
stc
cmpsb
lahf
jae
jle
pushl
cmp
cmp
fldenv
pop
mov
repnz
jp
push
cld
fsqrt
push
decl
imul
jne
pop
out
loop
lds
inc
sub
adc
or
or
jae
jg
push
roll
add
jl
int3
loop
dec
lds
inc
push
andb
and
popl
mov
sbb
sahf
mov
andb
and
add
lock
jg
cmp
loop
repnz
es
xchg
mov
es
das
mov
adc
shlb
push
or
sti
xor
call
movsb
sbb
outsb
and
push
ja
xchg
mov
jg,pn
imul
call
cmpsl
pop
and
xchg
pop
or
insb
nop
mov
mov
and
jg
lcall
cld
ret
stc
in
jns
and
in
aaa
fldcw
test
or
lcall
sub
or
dec
mov
rol
add
jns
cld
incb
lret
popl
scas
and
push
shrb
fmull
and
sub
dec
jg
daa
pop
mull
and
add
push
mov
or
push
decl
dec
mov
push
or
xchg
punpcklbw
push
mov
das
fucomp
mov
imul
lods
xchg
shl
ret
pop
and
aam
adc
incl
imul
push
lea
push
mov
test
cmp
jb
mov
jecxz
mov
dec
mov
outsl
mov
or
jle
pushl
jle
xorb
dec
arpl
shll
mov
rorl
jmp
loope
xor
inc
enter
shll
popf
inc
inc
dec
pusha
flds
jne
add
mov
inc
addb
sub
pop
lea
sub
pusha
shll
lcall
lcall
mov
push
xor
jl
push
cwtl
mov
and
ljmp
jb
ret
test
out
addr16
out
dec
add
add
jg
xchg
pushf
mov
int3
add
call
mov
or
xchg
inc
loop
xchg
or
fcmove
sahf
lods
mov
push
icebp
or
cld
pushl
jmp
pop
call
xor
into
loope
call
scas
sar
aaa
or
movsb
gs
orb
iret
pop
cmpsb
push
add
jg
repnz
shlb
aas
sbb
mov
mov
out
push
and
jge
push
cld
mov
sbb
cmp
in
push
das
push
mov
sbb
xchg
push
sbb
sub
cmp
lcall
jg
sub
lcall
in
mov
ss
lret
jne
dec
push
imul
dec
or
ss
incl
adc
xor
xchg
pop
das
mov
daa
push
and
and
popa
add
clc
enter
std
leave
cmp
sbb
lret
dec
lods
movsb
sub
mov
mov
lcall
cli
jnp
lods
push
dec
push
fsubrs
lahf
cmp
xchg
pop
inc
mov
push
dec
int
pop
les
push
test
or
push
es
loop
flds
sarl
sbb
pushl
sbb
in
flds
ds
mov
aas
jno
sbb
mov
pop
jmp
fiadds
cmp
push
int
fbld
das
or
jp
mov
inc
call
data16
pushl
mov
push
out
inc
xor
xchg
add
clc
fucomip
adc
cli
shlb
sti
add
xorb
test
mov
out
pop
pop
and
adc
aam
or
and
scas
roll
cli
jp
ficomps
mov
cld
ss
mov
mov
outsl
cmpsl
repz
push
xchg
inc
mov
jne
mov
pop
mov
inc
sub
fs
sub
add
push
jne
aas
movsb
xchg
into
ss
pop
loop
xor
fnstsw
sbb
cmp
imulb
outsl
or
pop
popa
and
call
cmp
mov
popf
repnz
jnp
xor
and
push
mov
mov
xor
or
cmpsl
jle
or
push
add
test
xchg
lock
push
mov
mov
adc
jbe
imul
mov
mov
ret
fistps
push
lret
inc
sub
stc
lods
inc
ret
mov
or
mov
out
sbb
sub
adc
pusha
inc
scas
add
loope
orb
jecxz
mov
and
shl
repz
xchg
push
lcall
mov
loop
lea
sbb
dec
xor
enter
ljmp
jmp
push
inc
push
xchg
xor
leave
adc
sub
inc
and
in
leave
and
mov
jno
mov
es
or
hlt
les
inc
adc
test
rolb
cs
bound
testb
jb
outsl
add
pop
and
and
or
mov
pop
or
mov
mov
jecxz
jg
mov
int
mov
adcb
mov
hlt
negb
mulb
int3
nop
or
mov
jb
inc
jle
inc
sbb
call
incb
popa
adc
fs
imul
sbb
adc
mov
adc
pop
int3
xchg
mov
imulb
lcall
divb
mov
inc
add
inc
andb
or
test
jg
sub
aas
pop
pop
cld
cwtl
gs
cmp
cmp
aam
jmp
pop
jecxz
fisttps
and
bound
adc
les
push
adc
xchg
shll
add
inc
std
aaa
mov
fs
cwtl
in
dec
in
lcall
cwtl
mov
pusha
fs
loop
test
pop
and
adc
es
inc
aam
xchg
pop
push
shll
and
jo
subl
mov
int3
aas
popa
adc
inc
cmp
mov
nop
jae
mov
lock
jo
dec
push
addr16
inc
test
in
and
and
inc
cmp
test
pop
mov
push
inc
cmp
jl
dec
add
outsb
mov
movsl
sbb
lret
incb
xchg
nop
sbb
jb
mov
xchg
mov
jg
inc
andb
xor
add
test
pop
enter
add
incl
and
nop
in
xor
push
jo
imul
xchg
inc
dec
adc
dec
addb
mov
gs
xor
int3
add
mov
in
nop
cmpb
incl
addr16
call
pop
sar
das
lock
push
or
fdivrl
mov
sbb
mov
mov
adc
stos
adc
cmp
push
push
dec
mov
adc
stos
add
and
lcall
or
dec
loopne
xchg
add
sub
cld
xchg
popf
arpl
push
adc
jns
loope
test
add
or
dec
add
lods
pop
in
fld
jg
and
xchg
sbb
or
mov
cmp
in
ljmp
push
loopne
std
popa
test
dec
into
lods
cld
cmpsl
test
test
pop
ljmp
imul
loopne
cmp
nop
sbb
jo
cmp
inc
mov
pop
and
pop
mov
cmp
pop
ret
pop
dec
mov
mov
dec
ljmp
mov
decl
pop
stos
cltd
mov
add
jecxz
cmpsb
adc
jbe
aas
cmp
pop
fisubs
xor
outsb
les
ret
xchg
and
fimuls
dec
jmp
lret
dec
push
mov
sbb
test
jmp
and
negb
lahf
xchg
das
test
push
pop
sbb
cs
aaa
clc
aaa
loopne
or
cmp
sub
ljmp
adc
cld
add
push
rolb
dec
mov
jne
mov
push
pop
daa
scas
add
sub
clc
lret
pop
push
push
fisubrl
outsb
mov
push
xlat
pusha
jae
out
fcmove
jg
jg
dec
in
pop
loop
pop
mov
int3
mov
jo
adc
jmp
push
cmp
ret
test
bound
add
nop
cmp
movsb
cmc
xchg
jle
das
mov
mov
nop
cmp
inc
incl
repz
push
mov
xor
pusha
dec
xorl
sbb
add
or
mov
pop
out
xchg
sub
test
cltd
inc
mov
call
sub
inc
or
push
inc
push
push
cmp
add
fisubs
popf
sbb
incl
int3
mov
mov
rclb
xchg
shrl
in
int
addr16
ljmp
andb
inc
inc
lods
sub
cli
push
lret
or
pop
mov
sbb
pop
pushl
jbe
test
cmc
pushl
cmp
out
sahf
push
mov
push
enter
ljmp
jb
lock
shll
jbe
ficompl
int3
pop
enter
mov
ljmp
cmpsl
xchg
mov
test
enter
dec
or
xchg
lea
loopne
jmp
test
add
adc
mov
popa
xor
push
hlt
ljmp
pop
or
gs
add
in
test
adc
cmp
sbb
adc
push
lock
in
dec
js
nop
and
pop
test
mov
ss
test
stos
loopne
ja
and
roll
hlt
ljmp
jbe
sub
fxam
push
jb
sbb
cmp
lock
cli
mov
adc
or
icebp
pop
xorl
fistl
jp
jle
dec
cmpsb
mov
push
push
sub
or
loop
add
jg
jmp
leave
sar
fs
pcmpgtb
xor
add
subb
aas
dec
adc
fidivl
push
movsl
insb
add
dec
in
dec
or
mov
add
in
jg
mov
imul
adc
idivb
push
addl
fisubl
sbb
adc
lock
repnz
das
lock
or
aad
push
push
movsl
push
jo
or
das
mov
bound
lea
call
movsl
pop
ljmp
xchg
leave
les
pop
pop
adc
cmp
push
das
push
cmp
mov
fcoml
cmpsl
sbb
and
and
pop
cmp
mov
loop
cli
or
test
fisttpl
adc
pop
sub
mov
outsb
loope
mov
sbb
loop
mov
jmp
inc
sbb
adcl
shl
mov
jae
loopne
lock
jl
or
jl
mov
jnp
mov
pop
sbb
mov
xor
loopne
dec
xchg
inc
pop
rolb
cmp
cmp
inc
decl
or
roll
or
imulb
or
inc
pop
daa
std
in
dec
inc
add
mov
nop
cld
les
sahf
enter
xchg
mov
testb
cmc
imul
movl
insb
or
daa
push
rcrb
sub
inc
pushl
sub
decl
add
mov
add
cld
ja
mov
lcall
pop
in
outsl
and
test
sbb
xchg
xchg
xor
incl
mov
aaa
mov
testb
cs
pop
addb
mov
shlb
mov
jo
xchg
outsl
push
cli
rcrl
inc
inc
mov
push
sbb
clc
push
gs
push
sub
push
lret
dec
mov
adc
mov
ds
repnz
mov
cmp
call
nop
pop
lret
fadds
iret
das
icebp
pusha
fdivs
sbb
pop
es
call
lcall
add
scas
or
shlb
mov
push
ret
jmp
cmpsb
sbb
jecxz
dec
or
inc
mov
stos
jg
mov
aad
ud0
pop
mov
jl
in
call
ljmp
or
push
or
add
adc
fdivrp
ret
stos
inc
mov
fdivl
and
outsl
cmc
je
or
inc
aam
pop
shll
pop
push
jg
insb
mov
add
shlb
inc
aad
inc
mov
aam
xchg
std
in
idivl
adc
inc
adcl
adc
jecxz
jmp
imul
lahf
pusha
fnstsw
sarb
gs
addr16
dec
jmp
cs
push
icebp
imul
add
popf
test
shrb
icebp
incl
cmpsb
iret
rcrl
mov
js
push
or
sbb
and
sbb
jae
adc
in
cmpsb
sbb
jae
fldt
jl
pop
sbb
mov
inc
cld
push
into
insb
pop
mov
sub
clc
aas
movsl
daa
mov
pop
arpl
adc
add
pop
jle
clc
mov
ret
pushf
or
dec
push
dec
adcb
push
pop
das
in
rorl
add
xor
stos
incl
xchg
pop
pop
lret
mov
mov
movb
and
lock
sbb
mov
or
add
out
jne
ljmp
lock
mov
inc
sbb
out
mov
inc
sbb
mov
mov
js
addr16
xor
add
into
push
sbb
test
xbegin
imul
pop
jg
dec
jg
loope
jge
cmpsl
out
rorl
pusha
rclb
pop
ret
cwtl
sub
add
outsl
xor
std
out
rolb
repz
in
les
fs
icebp
pop
mov
orb
ret
outsb
xchg
icebp
decl
fbstp
or
stos
loopne
push
add
mov
jb
mov
dec
popf
xor
out
adc
popf
bound
jae
jge
cmp
js
push
push
mov
imul
and
std
add
jl
add
std
movsl
mov
into
fs
or
push
test
sub
sub
mov
fildll
mov
das
or
or
jb
hlt
fucomip
push
adc
xor
push
or
dec
add
add
and
add
pushf
cmp
addl
mov
loope
js
lock
push
addr16
mov
mov
pop
mov
orl
lret
jp
mov
sub
js
mov
xchg
jg
cli
mov
call
and
inc
lods
sbb
pop
add
xchg
mov
mov
sbbl
cmpsl
pop
pop
push
sub
and
mov
lods
loopne
xor
and
fcoml
sub
pushf
ret
popa
daa
jg
or
mov
mov
int
and
je
pop
lods
mov
add
sub
inc
dec
test
repz
lcall
orl
mov
mov
test
imul
pop
mov
mov
adc
jecxz
or
adc
pop
mov
stc
sbb
jl
or
clc
jno
pushf
int
jne
jg
aaa
cld
inc
add
and
jp
shll
lds
ret
cmp
cli
sub
popa
xor
sbb
pop
out
decl
cld
popf
adc
enter
sbb
inc
xor
aaa
cli
call
into
xorb
jno
jb
add
adc
fsubrl
aaa
clc
call
scas
lods
lahf
jo
sbb
loope
in
cld
inc
int3
add
loop
ret
adc
lds
xchg
adc
push
mov
int
add
xchg
add
pop
jbe
pop
xchg
subl
das
sbb
stc
sbb
aas
xorb
push
jg
int3
movsl
xchg
sub
sbb
inc
pop
test
inc
test
leave
xchg
clc
mov
push
movsl
push
popf
jno
adc
jg
popf
add
sbb
push
lods
and
pop
adc
jl
int3
dec
cltd
add
loopne
jbe
pop
mov
je
andb
in
es
aas
addb
lcall
inc
or
call
fwait
lahf
outsl
push
add
pop
pushf
xchg
leave
mov
and
inc
test
addr16
icebp
add
sbb
adc
idiv
jg
and
push
pop
xchg
popf
xchg
add
cmp
dec
xchg
and
lret
stos
or
fwait
or
xchg
pop
mov
mov
mov
dec
fcoms
sbb
les
push
cwtl
rcr
ss
mov
mov
lea
xchg
fwait
popl
mov
fucomip
jg
lods
jns
movsl
stos
mov
xor
or
mov
das
icebp
decl
xchg
pop
xor
out
inc
js
pushf
ret
mov
ja
sbb
sbb
pop
dec
adc
mov
icebp
jo
inc
out
ljmp
decl
shr
add
adc
pushf
or
inc
and
xor
mov
ret
incl
popa
cmp
add
jo
cmp
pop
sub
mov
pusha
adc
xchg
cli
inc
data16
push
stc
iret
pop
and
shll
adc
dec
jg
lea
test
or
pop
mov
dec
fimull
lock
enter
mov
inc
ror
cwtl
adc
sub
enter
lock
fnclex
mov
test
repz
xor
sbb
adcl
push
rorl
hlt
movsl
or
fs
mov
xor
ljmp
cmp
leave
mov
push
xchg
fucomip
repz
shll
inc
enter
decl
es
push
mov
repnz
call
dec
jg
adc
shlb
inc
int
mov
fnstsw
movb
filds
cli
dec
pop
cmpsb
shrl
bound
notl
inc
pop
and
mov
or
push
cmpl
lahf
test
xchg
add
jg
pop
xchg
inc
jle
mov
addr16
gs
push
xor
or
ss
push
rol
stos
subl
ret
cmp
push
icebp
aaa
test
sbb
dec
syscall
hlt
test
xchg
inc
xchg
lahf
mov
sub
ret
mov
pusha
add
adcb
lods
pusha
mov
movsl
sbb
mov
das
mov
and
ret
ret
mov
nop
or
gs
fs
xor
adc
pop
movsb
mov
mov
or
and
and
es
add
xor
fadds
mov
dec
cmp
add
inc
sbb
cmp
add
mov
and
inc
rcll
cmp
je
aaa
clc
popf
inc
xor
sub
mov
adc
add
push
dec
adc
dec
push
fisubrl
mov
mov
cmpsl
ds
push
cmpsb
mov
jg
dec
rolb
hlt
sarb
insl
lahf
sub
fdivs
push
sbb
adc
pushl
sbb
inc
jl
nop
aad
mov
mov
pushl
incb
lret
or
in
and
jle
and
mov
jmp
clc
das
cld
push
and
imul
sbb
mov
lcall
add
cld
push
inc
or
sti
inc
scas
hlt
orl
cmp
rol
pop
sub
test
mov
inc
pop
movsb
jmp
xor
cmpsl
iret
dec
repz
dec
or
call
outsb
cs
jno
xor
mov
cmc
ljmp
icebp
xlat
push
test
int3
mov
sarl
subb
clc
das
mov
push
jp
cmp
sub
sub
repnz
mov
add
add
mov
jbe
pusha
dec
jl
outsl
add
add
mov
add
mov
andb
cmp
outsl
insb
fnsave
dec
jecxz
subb
xor
cwtl
mov
das
push
scas
push
in
and
xchg
testb
adcb
das
mov
sub
cli
pushl
jo
mov
dec
mov
or
xchg
enter
add
pop
cmp
fdivs
loopne
mov
in
push
lds
dec
or
push
jge
lock
iret
sbbl
mov
cmpl
mov
jge
sbb
jne
or
out
jnp
mov
subl
ds
stos
adc
aas
loop
sub
sarb
fnstsw
aaa
sahf
sarb
adc
jns
lods
lahf
add
das
lock
addb
fst
xchg
jb
rcll
xchg
lcall
and
and
out
jp
inc
push
aad
lret
ja
out
cli
ljmp
out
inc
mov
pop
je
lods
mov
add
mov
jg
movsl
pop
decb
adc
cwtl
cs
dec
sbb
decl
add
cmp
enter
call
out
xor
xchg
repz
pushl
aaa
inc
ss
ljmp
mov
lock
imul
dec
mov
push
cmp
push
mov
inc
sahf
rolb
addl
ljmp
out
fwait
cld
test
sub
cmp
sbb
inc
mov
cmp
inc
and
es
ja
jg
cmp
call
clc
les
xor
jecxz
inc
sbb
xchg
adc
int3
stos
mov
cs
and
decl
std
ds
out
and
imulb
and
mulb
xchg
js
loopne
dec
xor
mov
pop
or
xor
ss
rol
and
cli
mov
popf
mov
aam
jmp
cwtl
in
cmp
pop
mul
add
sbb
test
arpl
pushf
sbb
ja
ljmp
mov
sahf
push
jmp
arpl
icebp
pushf
add
push
loop
pop
adc
in
mull
jge
mov
push
sbb
and
ljmp
pushl
movsl
fildll
xchg
sub
mov
mov
pop
add
stos
pop
jnp
push
out
test
cmp
sar
pop
cld
mov
cltd
hlt
push
out
aaa
cmc
push
mov
divb
ljmp
push
dec
movsl
ret
cld
out
push
or
das
push
imul
pop
sarl
call
sub
scas
mov
xor
subl
xchg
sub
loop
call
pop
sarb
je
arpl
insb
cmp
je
pop
fiaddl
ljmp
pushf
fsubr
sbb
cmp
fidivrs
cli
int
xor
sahf
shrb
pop
ficoms
fadds
movsl
call
shrb
push
movsl
ja
in
sub
push
dec
jns
ud0
cli
jmp
pushf
insb
repz
sub
icebp
popa
nop
mov
cwtl
fcoml
xchg
stc
or
pop
call
dec
maskmovq
xchg
adc
push
mov
xchg
mov
mov
mov
add
stc
stc
dec
test
inc
mov
or
inc
add
call
loopne
mov
cli
xchg
addr16
fucom
jmp
dec
ret
aam
jg
xor
test
std
jmp
mov
in
dec
sbb
inc
cs
mov
mov
in
adc
push
cmp
pop
lcall
scas
into
mov
fistpll
ss
jb
loope
cmp
xchg
cmp
std
decl
push
and
dec
pop
or
mov
repnz
adc
jmp
fwait
xchg
sbb
into
iret
xchg
test
xchg
outsb
stos
sar
std
movq
and
iret
mov
int
jb
fsubrl
ljmp
sbb
mov
lock
insl
push
jns
jns
jecxz
pusha
cld
decl
loopne
push
xchg
pop
adc
andb
adc
mov
cmovnp
ljmp
es
shlb
or
mov
aaa
and
ljmp
jmp
popf
cld
rolb
xorb
and
push
push
pop
ljmp
test
pop
js
push
jg
test
dec
movsl
imul
cmpl
call
mov
daa
jl
in
push
sub
rcrl
jb
leave
mov
in
adc
lock
mov
mov
push
adcl
mov
lea
mov
adcb
cmp
xchg
mov
outsl
mov
pushl
addb
shlb
cld
xor
into
aas
jg
mov
xchg
dec
push
pop
xchg
lahf
popa
mov
adc
sub
iret
jl
incl
ljmp
inc
mov
es
and
sub
cld
jg
insl
pop
inc
test
sbb
gs
or
fwait
jbe
inc
add
ja
clc
add
mov
pop
ret
push
pop
lock
sub
insb
mov
mov
cwtl
xlat
add
mov
rorb
test
aaa
cli
jmp
or
mov
xor
iret
enter
xchg
push
mov
jg
mov
lds
inc
sbb
sub
dec
cmc
arpl
cmp
fdivr
pop
call
sbb
sbb
inc
or
sahf
mov
push
inc
jp
push
lahf
pushl
nop
popf
pop
mov
lea
enter
adc
loope
repnz
pusha
cmp
pushl
lahf
or
sbb
inc
in
or
rcrl
jb
imul
pusha
lock
pusha
jo
dec
jae
mov
and
das
adc
das
dec
sbb
inc
mov
add
lcall
push
push
sbb
add
dec
lds
or
cmp
data16
pop
test
dec
pop
and
sbb
or
icebp
incl
push
dec
es
clc
adc
jg
in
loop
rol
pop
clc
mov
nop
lock
sub
adc
push
jecxz
das
cld
incl
jb
jno
loopne
call
sti
stos
icebp
scas
xchg
stos
pop
cli
pop
std
pop
fiadds
std
jnp
lahf
pop
sbb
cwtl
imul
test
sbb
ss
outsb
repz
jno
cltd
inc
addr16
mov
test
sub
aaa
mov
test
fnsave
pop
out
sti
lods
sbb
jnp
in
mov
mov
imulb
inc
dec
xchg
lret
popa
pop
jmp
mov
inc
push
pop
std
call
and
mov
nop
dec
inc
fwait
push
aaa
dec
movsb
fstps
fists
push
ljmp
mov
jmp
sub
mov
push
ljmp
add
sub
jg
sbb
shll
mov
and
cltd
adc
fabs
stos
or
outsl
cld
decl
sbb
xchg
mov
mov
repz
add
mov
subb
jmp
xchg
push
xchg
outsl
fists
std
sub
or
sbb
xchg
push
add
add
fcomip
adc
mov
stos
add
clc
cmp
jmp
psrad
ret
jne
mov
std
lcall
lods
ljmp
lds
sub
and
icebp
out
lcall
cld
popa
xchg
xlat
loopne
mov
xor
psrld
pop
test
das
sub
cmp
sbb
imul
mov
les
test
dec
or
inc
push
call
cli
movsl
xchg
mov
fisttps
xor
incb
ljmp
adc
dec
out
lahf
vmaxps
aad
xchg
mov
mov
push
out
movsb
or
mov
scas
nop
xchg
inc
in
cmpsl
out
repnz
mov
outsl
cld
pushl
div
fwait
roll
pop
shll
xchg
ljmp
inc
jmp
mov
push
lds
mov
fidivrl
arpl
add
pop
sub
and
lcall
sbb
pop
hlt
es
cli
pop
gs
jnp
iret
cmp
mov
mov
out
lret
add
lcall
filds
test
insb
ljmp
daa
cs
rcrb
stc
xchg
andb
stos
inc
lahf
rorb
dec
hlt
shll
ds
pushf
sbb
test
scas
xor
pushl
adc
mov
testl
fistpl
icebp
pop
fiaddl
loop
adc
loop
sub
ds
call
mov
movsl
stos
adc
fs
repnz
pushf
sub
adc
repnz
call
push
daa
nop
in
call
mov
cli
sub
stc
sbb
cmp
fisttps
mov
mov
push
mov
pop
sti
xor
xchg
lods
pusha
push
in
stos
add
or
dec
dec
arpl
lret
jmp
imul
repz
icebp
cmp
inc
xor
pushf
cli
cmp
jb
sbb
ljmp
mov
das
push
nop
sub
mov
or
dec
ljmp
test
jne
mov
push
cli
pushf
shr
rorl
aad
aas
jg
mov
or
xor
push
mov
outsl
inc
mov
mov
jecxz
push
leave
fiaddl
add
mov
adcl
aas
in
cwtl
push
adc
mov
das
das
lock
mov
ror
rorb
inc
movsl
xor
jmp
ret
pop
jmp
mov
pop
dec
cmc
stos
dec
out
lods
dec
lods
fucomip
incl
pop
mov
xor
negb
xor
mov
clc
adc
clc
fcompl
mov
shlb
lret
inc
call
les
and
out
pop
mov
xor
lock
iret
and
in
decl
and
add
jne
rorb
fstpt
and
jp
jmp
mov
cs
into
or
sbb
in
iret
sbb
cli
or
pushl
out
fildll
ds
mov
call
fsubl
mov
fucomi
cmpsb
cmp
adc
add
inc
divb
mov
pushf
decl
out
mov
ret
fidivrs
lods
sub
xchg
pop
xor
insb
mov
sarl
into
scas
cli
push
mov
stos
stos
ret
push
push
adc
jnp
sbbb
mov
xchg
cld
pushl
jns
ret
orl
pop
clc
das
and
xor
out
xchg
jb
aaa
out
lret
loope
ljmp
xor
dec
xor
mov
lods
test
data16
setnp
ljmp
sti
cmp
fstps
popa
xchg
outsl
cld
cmp
imul
pop
push
stos
stc
aam
push
test
fwait
adc
cmc
lcall
mov
mov
addr16
mov
cmp
push
fs
scas
ljmp
arpl
xor
test
mov
cmp
cmp
xor
lock
add
cli
mov
call
xchg
pop
stos
sub
in
push
push
mov
fistps
cs
sbb
sub
sbb
mov
lock
jg
repz
mull
data16
mov
stos
out
jns
jnp
sub
pop
sbb
ljmp
push
stos
cmpsl
mov
repz
sti
xor
mov
mov
inc
ret
scas
ret
dec
and
or
dec
inc
adc
stc
mov
test
std
ljmp
lock
test
ret
out
leave
std
mov
loop
mov
mov
lret
lahf
sbb
lahf
xchg
jnp
imul
dec
sbb
pop
mov
sarl
xchg
mov
or
out
push
mov
sub
jmp
testb
adc
in
roll
jl
pop
out
loope
aad
inc
or
aam
mov
lods
popf
dec
hlt
sub
decl
jle
shl
cmp
pop
inc
out
enter
fdivs
xor
sbb
popf
std
jg
pushl
ss
xchg
aad
mov
mov
xchg
iret
es
lods
jge
mov
aad
clc
das
inc
es
data16
aaa
sarb
and
cmc
jmp
fldt
xrelease
or
mov
call
or
lds
xchg
test
xlat
je
cmp
jg
lcall
mov
rolb
push
loopne
lcall
jmp
jle
leave
push
stc
mov
movsb
data16
pop
sub
aam
dec
cmp
sar
out
inc
clc
push
scas
mov
pop
loopne
jmp
mov
mov
jno
pushl
lods
dec
sbb
fs
jg
sbb
imul
loop
shrl
out
add
outsb
nop
lods
sarl
xchg
out
rcr
stc
cmc
lahf
xor
push
mov
sti
pusha
sub
xor
out
movsl
ss
fildll
int
fdivr
jp
ljmp
filds
push
inc
decl
mov
jb
fldenv
pop
pop
jl
ljmp
add
rcl
fmulp
les
xor
in
int3
jecxz
xlat
mov
jbe
repz
pusha
cmp
imul
pushl
mov
ret
mov
adc
call
push
subl
clts
fdivl
dec
lcall
call
jno
jecxz
in
xor
fbld
push
pushf
imul
push
lea
push
in
dec
clc
sub
js
addl
lcall
cld
out
mov
mov
mov
clc
adc
pushl
pop
xor
cld
or
ret
mov
or
push
jb
movsl
or
decl
mov
sub
in
jg
and
jmp
pop
mov
lods
jecxz
int
je
inc
sti
pushf
lock
pushl
jmpw
push
push
scas
lds
cmp
aas
fdivl
xchg
out
fs
gs
cs
ja
jg
pop
pusha
scas
orb
mov
pusha
add
popa
adc
xor
out
stc
imul
lahf
sbb
int3
arpl
xor
or
jmp
addb
rolb
fiaddl
add
cmpsl
shll
test
and
arpl
std
pop
int
mov
adc
movsb
and
outsl
and
scas
inc
adc
aam
scas
inc
adc
call
push
loope
cli
ret
and
jne
sub
lds
jmp
pop
and
outsl
outsl
icebp
stc
jecxz
mov
push
mov
xor
adc
lcall
dec
pushf
out
sub
jge
xlat
std
sbb
ss
push
clc
fstl
call
add
decl
movsl
adc
jno
les
sar
repnz
aaa
cli
incl
sub
xchg
mov
push
pop
pusha
cmc
dec
xchg
inc
ret
incl
jg
daa
jecxz
dec
rorl
sbb
cmp
or
movsb
andl
outsb
cmp
outsl
mov
push
movsl
pusha
mov
mov
rorb
xchg
push
negl
mov
fucomip
lcall
cli
adc
adc
dec
mov
mov
dec
mov
mov
lock
mov
fldcw
sbb
sbb
or
push
jl
cmp
adcl
push
jbe
mov
stc
loope
in
pop
sbb
and
xchg
gs
lcall
dec
aad
sar
lahf
sti
ret
jno
cmp
xchg
scas
loopne
fcomps
orb
std
outsl
icebp
adc
pop
test
adc
sahf
fidivrl
or
jecxz
pmulhuw
sbb
call
rol
fisubrl
int
jne
pop
xlat
push
cwtl
je
lea
addl
jmp
imul
int3
movsl
add
inc
outsl
inc
sarb
pop
push
xchg
inc
jo
lret
enter
loop
lea
subb
cmp
js
jecxz
push
adc
lcall
loopne
cmp
das
outsb
jp
mov
ljmp
popa
andl
rorb
shll
outsl
xor
decl
or
sbb
sub
call
ret
jnp
mov
test
xchg
aam
or
mov
jnp
dec
jnp
ss
xor
jb
cmp
shld
jb
push
cld
cmc
int
ljmp
fwait
aaa
xchg
leave
mov
xchg
jmp
inc
or
ljmp
mov
mov
xor
out
and
das
icebp
in
in
add
adc
stc
mov
or
aaa
clc
sbb
inc
xor
adcb
fnstsw
addr16
loope
jmp
and
lret
lcall
imul
in
lahf
icebp
ljmp
mov
mov
pusha
jmp
das
jle
lods
or
xchg
imul
mov
je
loope
push
add
repz
mov
ds
jg
jg
or
scas
shlb
dec
pop
adc
lock
mov
shl
fcmovnu
data16
cli
out
and
cmpsl
addb
decl
addb
lret
add
pop
push
into
pop
xchg
mov
inc
dec
fstpt
std
mov
adc
cmc
sar
call
cli
cmp
mov
cmp
push
cmp
ds
aad
dec
pop
xor
fsub
jbe
and
push
outsl
lock
xchg
cmc
jp
aad
add
sub
sub
sahf
mov
xor
xchg
sbb
push
and
sbb
jg
and
cli
jg
pop
lea
in
std
xor
pop
cmp
cmp
xchg
testb
ljmp
and
ss
xchg
lds
mov
add
pusha
lret
or
jle
out
popf
lea
imul
fildll
ja
mov
cmpb
cltd
rcrb
fdivrs
lcall
xor
and
iret
and
bound
bound
daa
loopne
xlat
pop
fsubp
jge
and
mov
mov
negb
stos
push
sti
xor
push
jae
lods
dec
pop
into
outsb
cmp
data16
decl
pop
arpl
pop
loop
pop
addl
sbb
aas
or
jg
and
inc
ret
repnz
dec
popa
push
ja
lret
incl
mov
jp
mov
inc
js
rcrl
test
sub
decl
cmp
inc
iret
xlat
cltd
push
mov
ja
dec
aas
hlt
movsl
incl
mov
ss
scas
fbld
into
inc
adc
mov
push
pop
dec
pushf
test
js
mov
in
fadds
cmpxchg8b
into
pop
call
stos
push
rorb
popf
lods
or
stc
daa
stos
cmp
pop
bound
mov
cmc
cmp
jmp
mov
xchg
ds
test
sbb
mov
xchg
mov
mov
dec
push
dec
lcall
mov
and
add
dec
rorl
mov
sbb
push
test
dec
insb
sub
inc
sbb
pop
pusha
cwtl
or
lret
sbb
das
fstpl
mov
cli
mov
imul
ret
test
xchg
jns
loopne
lret
cmpsl
inc
mov
xchg
inc
cs
mov
aad
xlat
repnz
cmp
mov
xchg
or
lea
stos
rol
lcall
enter
mov
aam
stos
rcrb
pushf
xchg
sbb
inc
mov
imulb
jne
xchg
pop
aad
xchg
dec
in
push
in
call
popa
sbb
mov
sahf
aaa
pop
movb
loopne
in
pop
mov
mov
inc
fwait
jae
jnp
push
jne
jns
sub
arpl
jl
aad
rorl
mov
inc
in
push
jmp
mov
jle
push
adcl
mov
push
scas
mov
jmp
enter
inc
not
out
jge
incl
leave
or
daa
outsl
sahf
das
adc
dec
decl
fnsave
pop
data16
ss
aaa
fsin
add
or
pop
lahf
adcb
repz
inc
cld
call
jne
jne
and
shl
movsl
cmp
psubusb
loop
or
mov
ljmp
outsl
add
dec
gs
in
das
sbb
jb
adc
orl
addr16
rcrb
stos
jne
adc
pusha
push
outsb
ljmp
add
adc
ret
call
iret
shrb
inc
cmp
jle
dec
dec
inc
aad
or
jge
call
cli
push
mov
in
jns
clc
popa
dec
jge
rorb
das
mov
jo
lret
inc
subl
mov
xchg
cmpsl
push
xchg
repnz
decl
cld
in
into
hlt
xchg
mov
push
es
cmc
jo
inc
sbb
fstl
lret
call
sarl
inc
sahf
adc
sahf
stc
sbb
rorb
cs
or
call
test
dec
jmp
lcall
push
dec
ja
outsl
ds
ljmp
dec
push
ljmp
idiv
jns
mov
jge
inc
lret
cmp
mov
pop
push
testb
and
jecxz
enter
dec
cld
call
enter
int3
sti
cmp
pop
mov
clc
not
fsub
vpunpckldq
stc
call
out
cmp
aas
jle
bnd
xchg
int3
mov
in
fisubrl
decl
sub
mov
shll
push
test
lcall
enter
and
iret
aaa
nop
lea
mov
pusha
imul
ret
cli
sbb
pop
push
and
or
mov
xchg
mov
and
les
pop
dec
jmp
out
idiv
cmp
lcall
xor
out
aam
leave
push
sub
sbb
sub
addr16
fcmovnbe
call
mov
inc
call
enter
and
ljmp
popa
xor
adcl
mov
mov
stos
insl
xor
arpl
adc
cmpb
mov
mov
sub
pop
and
push
mov
pop
push
test
lcall
or
add
mov
cmp
mov
repnz
xchg
fs
fsubrs
outsb
clc
cmp
xchg
icebp
cmp
rcrl
ficomps
call
or
dec
scas
add
lret
lods
std
push
out
adc
xchg
adc
pop
aam
repz
sbb
push
fidivl
adc
xchg
outsb
xchg
stos
jmp
sub
xor
and
xchg
xchg
ret
pop
pushl
ficoml
shrd
fmull
mov
adc
testl
dec
mov
inc
jg
arpl
lcall
fcoml
and
imul
out
repz
sub
and
decl
inc
outsb
roll
push
jo
pushf
xor
pop
lret
pop
add
inc
std
dec
and
xlat
or
adc
test
cmp
jecxz
decl
fcomps
daa
dec
or
push
gs
and
and
pop
xchg
jmp
mov
cmpsb
ja
call
pop
jb
xor
xor
add
jmp
mov
lret
and
adc
cwtl
int3
push
cmp
mov
xchg
mul
sbb
xchg
imul
xor
int
mov
outsb
ret
in
push
inc
jns
pop
xchg
aam
lcall
or
movsl
hlt
dec
lods
gs
push
jge
scas
je
dec
xor
mov
notb
mov
addr16
dec
popf
aam
jne
jnp
sub
ljmp
insl
adc
arpl
xor
cld
movsl
decl
loope
pop
cmpsb
out
repnz
incb
push
adc
mov
stos
clc
push
sbb
insb
les
mov
and
aaa
test
repz
leave
add
jno
sbb
popa
inc
andl
sub
test
xor
loopne
cmp
outsl
in
pop
call
sbb
mov
dec
push
push
xchg
fidivs
jg
lcall
ja
shrb
sub
leave
popf
test
sub
jl
call
pushf
xchg
dec
push
jg
sbb
jno
inc
stos
inc
xor
sbb
xchg
call
es
xchg
popf
ss
xor
push
jns
cmpsl
sub
mov
mov
sub
test
push
sub
sbbl
xchg
or
adc
sar
pop
ljmp
out
or
xchg
xchg
cmp
popa
addr16
mov
incl
lods
js
in
xchg
add
mov
adc
xlat
dec
mov
xlat
ljmp
push
push
inc
test
frstor
sub
fistpll
cmp
negl
push
push
xor
pusha
nop
dec
sbb
insl
jne
mov
icebp
or
das
repnz
pop
mov
xchg
pop
out
and
icebp
das
lock
popa
adc
adc
cli
icebp
dec
test
repnz
mov
pushl
cmp
xchg
arpl
push
cmpsl
xor
inc
jle
arpl
push
pop
or
loop
push
mov
jae
mov
pop
jnp
pusha
repz
pushl
cmp
js
push
js
dec
pop
jbe
lds
sub
stos
cmpsb
jecxz
jno
adc
and
mov
ljmp
mov
ds
fld
ds
push
adc
fwait
add
lea
cld
xor
shll
sbb
fdivr
das
cmc
xchg
dec
jb
mov
push
push
movsb
std
push
adc
pop
loop
cwtl
or
loope
and
out
call
jg
mov
out
jp
pop
je
pop
adc
idivl
push
jg
pushfw
out
dec
insl
and
test
popf
mov
cmp
rolb
ljmp
cmp
mov
sub
in
fsubs
push
das
pop
call
sbb
jne
inc
add
push
cwtl
outsl
mov
cld
aad
cmpsb
scas
pop
popa
mov
or
inc
push
shlb
pop
outsb
repnz
dec
cmp
xchg
sbb
pop
stos
add
inc
or
push
out
arpl
js
enter
test
lods
in
outsl
std
call
dec
je
mov
push
mov
mov
adc
call
xchg
and
cmp
adc
pop
movsb
hlt
xor
pop
shl
enter
cld
out
cs
cmpb
push
adc
pop
xlat
clc
mov
mov
pushl
xchg
add
cmpsb
arpl
push
inc
mov
push
fdivrl
repz
jp
push
dec
outsl
lock
lea
cmp
lahf
iret
inc
xor
dec
lcall
inc
cmc
jle
inc
push
mov
or
push
jge
call
pop
lds
jbe
cmp
incl
mov
push
sbb
ljmp
add
and
xor
rol
pop
sbb
push
cmova
mov
lods
icebp
dec
xchg
pop
pop
xor
sub
push
jae
data16
ret
xchg
or
inc
mov
sbb
xlat
or
mov
ret
in
mov
in
push
mov
xchg
add
push
out
pop
push
dec
sahf
inc
sbb
test
mov
outsb
and
sti
rorl
jg
incl
pop
loop
adc
xchg
cmp
and
rcrb
cltd
mov
dec
fistpl
stos
mov
inc
cmc
sbb
xor
pushl
add
test
sahf
jg
jl
cmp
out
xor
loope
xchg
pop
sub
mov
jl
cmp
sti
mov
jmp
sahf
pop
add
cmpsl
clc
cmp
hlt
call
cmp
cld
shlb
xchg
data16
sub
int
lock
xchg
test
std
push
outsl
lahf
adc
xor
or
dec
mov
rolb
js
adc
lcall
dec
push
call
pop
fisubs
mov
iret
mov
jp
pop
repnz
mov
mov
sub
jmp
cmp
leave
jno
sbb
push
cmp
js
mov
pop
push
les
divl
pop
jmp
mov
cli
pop
sbb
ja
mov
lcall
sub
add
clc
add
pop
cmp
mov
inc
jmp
add
xor
fcoms
sbb
cmp
pop
and
cmp
dec
das
cld
inc
imul
jge
inc
outsb
adc
push
pop
push
pop
loopne
cmp
stos
shl
inc
pop
std
sti
fs
xchg
je
cmc
mov
idiv
lcall
call
sub
mov
out
int
mov
inc
out
incl
std
mov
addb
call
lock
out
xor
adc
and
xlat
adc
in
ljmp
iret
add
fnsave
and
insb
xor
mov
aaa
mov
aad
jmp
push
addl
or
cmp
test
andl
jg
jle
cs
pop
xchg
loopne
fisubrs
mov
add
xor
in
popf
sti
add
jg
mov
push
fwait
repz
mov
adc
mov
divw
cmp
mov
cmp
loopne
js
testb
scas
cmp
ljmp
je
fwait
hlt
mov
xor
sub
fucomip
mov
mov
xchg
mov
push
lock
mov
mov
call
addr16
out
jns
insb
and
pop
and
cmc
jnp
push
fnstenv
mov
test
jno
dec
cmp
data16
push
idiv
decl
arpl
and
add
xchg
ror
jmp
push
insb
imul
incl
sub
mov
loope
scas
in
outsl
adc
test
std
push
mov
incl
dec
js
sbb
xchg
jnp
rcrb
dec
iret
outsb
lcall
jbe
xor
push
jg
adc
clc
push
mov
sbb
cmp
decl
mov
jge
jle
orl
fidivrs
xchg
gs
mov
ljmp
jl
sbb
pop
push
xchg
jnp
repnz
fbstp
cmp
lea
pop
iret
das
shl
cmc
jg
lahf
cmp
cmp
mov
dec
inc
sbb
ficoms
mov
mov
push
lock
lcall
adc
adc
divl
mov
scas
ss
clc
call
jnp
jb
ljmp
lods
xchg
xchg
push
xchg
pop
sbb
add
xchg
jae
push
in
mov
lock
std
filds
inc
xlat
mov
cmpsl
lea
add
outsb
add
mov
mov
mov
mov
xor
cmp
call
inc
push
jno
fimull
jbe
jmp
stc
loop
xor
and
ljmp
pop
sub
mov
sub
jl
daa
cmc
into
mov
xor
or
pusha
mov
sub
adcb
nop
or
mov
xchg
lcall
std
call
jno
jl
mov
loop
cli
and
fcmovne
mov
scas
loope
mov
push
xchg
je
inc
push
fs
mov
mov
into
aam
inc
xor
add
ret
decl
add
dec
push
in
mov
dec
ja
clc
test
or
pushl
mov
and
test
nop
jns
mov
jno
ret
incl
insb
mov
xor
sub
jne
cmpb
icebp
call
xchg
mov
incl
mov
mov
add
fwait
or
icebp
jbe
jl
jge
ret
mov
inc
pop
out
fadds
cld
mov
cmp
movsb
pop
loop
fsubrl
inc
cmc
hlt
push
dec
sub
pop
push
fdivl
mov
aaa
int3
fcmovu
push
xor
in
jg
je
mov
push
pop
aam
scas
cwtl
ret
stos
ret
je
dec
xor
aaa
adc
aad
mov
icebp
jno
cmp
dec
xchg
rolb
dec
jl
in
fbld
ja
inc
sbb
das
jmp
push
mov
sub
inc
pop
fsubrl
call
lret
loope
push
cmp
shlb
je
js
inc
fincstp
pop
and
push
arpl
mov
movsb
outsl
cmc
jmp
lret
bswap
mov
movsb
xchg
fs
imul
push
add
out
aam
cmc
in
sahf
lods
sbb
push
xlat
mov
sub
cmp
inc
xlat
lods
mov
sarb
dec
fimull
jns
idivl
xchg
add
int3
cwtl
push
decl
decb
jnp
xchg
jbe
cmpsl
sbb
std
jg
lock
lds
ljmp
call
fcomp
adc
sbb
xor
pop
xchg
mov
and
cmp
push
mov
lahf
sub
movsl
lcall
adc
fwait
icebp
adc
fisubs
stos
fisubrs
cmpsl
comiss
and
movsb
bound
test
lods
sub
movsb
cmp
sbb
inc
lret
and
testb
aas
pushf
std
or
shrb
lock
push
cli
or
insb
and
test
arpl
and
filds
pushf
orl
jecxz
out
adc
sub
add
sub
jmp
sbb
mov
push
insb
add
clc
mov
jmp
pushl
js
fwait
popa
push
sbb
lods
ficoml
test
push
inc
mov
cmp
lcall
je
and
out
mov
push
xchg
push
scas
or
sbb
pop
int
mov
xor
lahf
aam
sar
repz
pusha
call
movsl
mov
test
jns
xchg
nop
cwtl
outsb
lret
inc
mov
mov
in
adc
test
call
mov
and
rsm
and
into
fldl
xor
push
cs
sub
xchg
outsb
in
mov
std
call
shll
cmpb
adc
pop
leave
and
push
add
lcall
aas
out
call
fisttpll
inc
mov
mov
xchg
sti
and
adc
decl
adc
xchg
mov
mov
sbb
pop
fidivrs
cmc
ljmp
std
ret
fstpl
pop
test
xchg
cli
std
mov
cmp
call
cmp
cli
pop
pop
pop
cmp
push
xchg
ljmp
dec
pop
add
es
cmp
or
xchg
pop
sbbl
pop
addr16
sarl
cmp
test
cli
stc
mov
push
inc
call
add
mov
cmp
lea
inc
fstl
shlb
loopne
decl
pop
in
mov
mov
pop
adc
sbb
fisubs
lahf
adc
adc
or
movsb
call
ljmp
shrl
and
int
dec
or
jmp
aam
pop
addl
incl
insb
push
cmpsb
je
mov
sti
divl
pushf
dec
in
ret
pushf
lea
call
cli
es
movsb
mov
icebp
mov
jmp
jg
sub
and
mov
jo
std
jno
dec
xchg
popf
fs
add
push
clc
call
fs
jns
and
jae
sbb
pop
js
out
cmpsb
fsubrl
test
incb
dec
imul
adc
or
movsb
jg
adc
or
sti
add
lcall
dec
fnsave
push
rcrb
int3
not
pop
nop
sub
imul
xchg
ljmp
loop
addr16
push
int
loopne
enter
sub
dec
cmp
ja
je
jg
hlt
cmp
xor
xchg
push
outsb
mov
sar
jg
das
jno
dec
ja
dec
cltd
fmuls
adc
dec
pushl
mov
lahf
sahf
addl
out
out
inc
or
pop
sub
push
lcall
frstor
pop
push
xor
mov
das
and
push
xchg
mov
gs
lods
jae
dec
push
sbb
andb
adc
jle
cmp
fstpl
or
hlt
sub
cmp
add
out
mov
or
scas
orb
mov
mov
lahf
add
mov
inc
mov
mov
adc
ljmp
shrl
adc
fs
cmpsl
jecxz
adc
fucomip
adcl
movsl
cmp
add
push
mov
sahf
sbb
fildll
cwtl
sahf
ja
pop
movsb
adc
scas
int
push
cmpsb
mov
decl
push
shrl
xor
negl
push
fisttpll
in
aas
lret
jb
sar
xchg
shll
test
insb
test
cwtl
dec
fmuls
mov
cmp
lcall
mov
cs
sub
add
sub
shll
ljmp
std
push
and
cmc
scas
out
jmp
lds
push
dec
or
icebp
pushl
xchg
add
clc
jge
push
lds
pop
outsb
add
sub
es
das
cmc
ljmp
out
imul
sbb
flds
adc
rolb
adc
and
lods
xchg
repnz
shll
in
inc
lret
xchg
jb
pop
fstpt
xor
ficomps
add
dec
stos
daa
push
sub
and
aam
mov
inc
cmc
xor
pop
dec
pop
ljmp
mov
inc
cmovp
jne
fs
ljmp
loop
push
fsubr
mov
and
lock
cmp
pop
push
cs
push
dec
xor
decl
imul
dec
addr16
inc
push
rcll
pop
jo
aam
shlb
loop
std
out
fcomps
cmpsb
pop
mov
lcall
and
add
mov
pop
movsl
fisubrl
mov
fistpll
loopne
jge
jb
das
sub
inc
scas
inc
dec
imull
ss
jg
pushl
mov
test
cmc
bound
aad
call
data16
hlt
inc
inc
mov
inc
fcompl
push
inc
outsb
sbb
insl
lea
lret
sub
sbb
mov
loop
ljmp
ja
cld
testb
cli
dec
shlb
pop
call
decl
sub
dec
xchg
lret
js
mov
pop
std
call
fisttpl
push
xor
mov
test
arpl
and
ret
repnz
sti
mov
icebp
adc
sarl
cmc
popl
rcll
sbb
std
leave
jns
incl
sbb
pop
xor
loopne
lods
jmp
sub
sub
out
pop
push
out
outsl
lock
insb
jg
js
ss
mov
mov
sbb
ficomps
mov
std
scas
aam
mov
rorb
dec
out
aaa
imul
mov
mov
lds
stos
dec
dec
xchg
cmp
sbb
in
call
mov
mov
xor
mov
popa
sub
cmp
push
stos
push
or
inc
pop
in
lods
ficomps
or
bnd
das
hlt
jg
into
add
add
mov
adc
cmp
jne
cmpsl
pushl
dec
push
mov
pop
sub
lds
push
outsl
mov
daa
cli
movsb
inc
insb
fmulp
call
call
and
add
in
xchg
mov
jo
push
stos
stos
cmp
ljmp
in
les
xchg
fwait
test
mov
out
pop
gs
and
jno
push
pop
sub
inc
jb
cmp
mov
mov
fsts
in
cwtl
int3
fucomip
sar
ret
dec
push
js
mov
shll
pop
std
pop
insl
xchg
das
mov
lcall
into
pushf
fs
in
shll
int3
outsl
lock
xchg
sub
and
add
jo
mov
inc
push
push
std
ljmp
cld
push
cmpsb
mov
jbe
jmp
lds
out
test
sti
cmp
mov
dec
pop
and
jae
add
icebp
mul
test
ficomps
daa
or
iret
call
clc
push
dec
scas
popf
je
inc
fstl
push
sbb
adc
in
pop
or
das
hlt
inc
test
cmp
das
push
xor
push
cmp
lcall
addl
sbb
jns
dec
and
repz
sub
fiaddl
insb
xchg
bound
scas
jnp
push
jl
xchg
xchg
repnz
xchg
mov
sbb
mov
cmp
push
mov
decl
pushl
fwait
leave
add
mov
add
insb
push
vgatherqpd
ljmp
xchg
fmull
push
addr16
xchg
fadds
roll
sbb
and
fildll
fildll
icebp
pop
data16
adc
shrl
std
sbb
and
mov
adc
push
push
fisubrs
mov
cs
mov
mov
mov
add
addr16
pushl
clc
xchg
sbb
in
add
mov
ljmp
mov
inc
cld
and
cmp
in
xchg
stos
cmp
outsl
test
stos
mov
sarb
push
dec
ds
lcall
jge
pop
popf
jae
mov
jnp
or
lods
mov
push
push
lock
fistpl
movsb
sbb
cmp
mov
jne
jae
lahf
mov
dec
test
xchg
cmp
sbb
fbstp
std
imul
and
push
inc
dec
bound
mov
mov
shll
loope
sub
cmp
mov
cli
and
aad
xor
sub
cli
mov
jnp
lcall
aam
rcr
cmp
inc
push
fcoms
idivb
pushf
add
mov
test
lea
mov
insl
les
mov
cld
call
leave
or
jl
into
jecxz
je
pop
in
stc
cmpsb
insl
cmp
fsts
lea
or
dec
clc
push
shrl
pop
inc
sub
popf
sti
jle
cmp
mov
xor
out
add
pusha
fstpt
inc
cmp
fcoml
xorl
jg
sahf
iret
test
hlt
pop
loope
js
ret
iret
and
and
fwait
repnz
jl
movsl
pusha
xor
inc
movsl
imul
outsl
cmp
mov
and
rcl
push
dec
ret
stos
push
xchg
or
pop
mov
inc
imul
and
dec
adcb
push
jge
sbb
jg
lcall
hlt
push
out
adcl
pop
outsb
scas
pop
and
jg
pushl
mov
loopne
jno
xchg
inc
jle
pop
cmp
loopne
scas
jmp
test
call
dec
push
leave
pop
cmp
mov
fnstcw
aad
addr16
or
lods
outsb
push
stc
mov
outsb
xor
adc
dec
enter
xchg
shlb
inc
xor
cmp
call
or
movsl
cld
mov
ja
jb
pop
mov
or
inc
add
sbb
aad
cmp
ljmp
mov
subl
arpl
shr
pop
xchg
xor
test
clc
push
inc
cli
mov
sub
call
lcall
xchg
loop
cmp
mov
inc
ja
in
jl
sar
jg
lcall
fildl
lock
iret
add
repnz
cltd
mov
mov
ljmp
pop
movsl
push
mov
loopne,pt
sub
call
jae
dec
push
jbe
icebp
mov
iret
jp
gs
fsubs
stos
dec
adc
stos
sbb
lock
pop
pop
jg
lods
addr16
jge
shrl
inc
adcb
sbb
mov
loop
xor
imul
jl
roll
sub
mov
hlt
out
sbbl
ds
pop
ljmp
aaa
subl
xchg
pop
call
cwtd
adc
scas
jmp
dec
adc
pop
loopne
andb
mov
lcall
mov
inc
sbb
outsl
cwtl
cmp
pop
xlat
scas
pop
fstpt
sbb
xchg
adc
incl
pop
jmp
stc
cmpsl
add
and
pop
ret
fldt
lcall
lcall
and
sar
push
shll
lret
mov
and
inc
push
ljmp
push
testl
cld
pop
insb
ret
hlt
and
sub
lcall
std
shlb
popf
mov
pop
jne
mov
sbb
dec
std
mov
cli
decl
sarl
mov
sbb
lods
lret
jmp
and
pusha
loopne
jg
inc
pop
xchg
fimuls
push
jp
xor
aaa
xlat
in
js
es
mov
sbb
adc
pushf
pop
xchg
adc
push
pushl
jbe
fs
das
insl
jp
fwait
jg
decl
cli
push
cmp
jmp
popl
icebp
sub
cmpsl
mov
call
outsl
jmp
add
adc
ret
sbb
test
mov
add
imul
push
fmuls
and
cmpsb
cmp
fstpl
inc
popa
ljmp
popf
arpl
cmp
inc
pushl
inc
xchg
lcall
sub
pop
ljmp
mov
std
jbe
jg
pop
hlt
cmp
jmp
push
daa
jmp
cmp
xchg
repnz
test
or
out
xchg
pop
test
sub
pushl
rcll
jecxz
jmp
into
push
mov
push
dec
jl
lcall
andl
mov
fstpt
mov
inc
xor
mov
adc
jg
daa
or
sbb
xor
enter
mov
jmp
call
mov
xor
popf
shl
lods
cwtl
ljmp
ljmp
dec
jecxz
mov
sbb
fidivl
out
pop
jl
std
incl
call
shlb
fptan
jge
mov
and
mov
sub
add
mov
push
xchg
pop
pop
ja
loop
pop
aas
xchg
jle
outsl
or
sbb
decl
leave
popa
xor
loopne
stc
pop
data16
lcall
add
pop
ljmp
icebp
in
movsl
or
pushf
add
inc
jno
jne
jle
loop
cmc
sbb
sarb
lret
adc
lcall
push
shlb
cmp
dec
mov
fcmovnu
add
call
popf
dec
adcl
clc
incl
je
adc
jnp
push
fildl
push
ret
aaa
test
incl
fistpll
ret
nop
fwait
ret
xchg
arpl
inc
push
mov
inc
cwtl
lods
inc
icebp
mov
dec
ljmp
mov
mov
or
lahf
icebp
push
int
ror
mov
mov
xor
pop
sub
div
fs
rolb
decl
and
inc
test
into
add
lahf
out
inc
and
xchg
addr16
idiv
mov
pop
fs
pop
test
fcomps
iret
outsb
dec
fstpl
add
pushl
pop
mov
js
ljmp
inc
inc
and
xchg
cltd
rolb
push
arpl
dec
lcall
mov
push
cli
loope
rorl
das
je
xchg
lds
mov
call
sbb
in
mov
clc
add
addr16
popf
sbb
jns
and
scas
or
mulb
fcomp
orl
mov
test
scas
aaa
aaa
lahf
ljmp
xor
inc
out
jle
pop
lret
lret
mov
ret
decl
mov
cmc
mov
inc
sbb
mov
enter
clc
call
jb
pop
scas
dec
add
aad
rcrl
fildl
aas
push
arpl
test
xchg
fst
cmp
ret
mov
andl
pop
out
in
inc
adc
aaa
mov
lock
popa
in
clc
sub
nop
std
imul
pop
fwait
jmp
or
mov
sub
sub
mov
xor
jmp
pop
pop
dec
or
ds
out
nop
sbb
bound
and
gs
add
out
xchg
pushf
es
adc
testl
cld
mov
incl
pushl
loop
jo
ss
mov
sub
lods
jmp
or
jnp
push
mov
fwait
es
daa
xor
jl
adc
aaa
pop
pushf
fdivr
mov
push
pop
int3
xor
call
movsl
add
cmp
add
je
push
fcompl
sahf
mov
ja
pop
ret
gs
lret
pop
cli
cmp
mov
mov
push
mov
lods
sarb
test
aam
lcall
adc
mov
outsl
mov
aad
mov
enter
pop
cmp
xor
cs
jb
repz
push
mov
mov
jp
dec
in
lret
push
jmp
ret
mov
out
xchg
je
fisubrs
inc
push
das
enter
pop
shlb
mov
cmp
mov
lods
pop
pushl
fsubr
es
ret
lahf
mov
popa
xchg
aaa
mov
adc
push
call
pushl
fsts
mov
ret
mov
mov
mov
xchg
xor
mov
inc
insb
outsl
into
cli
aad
mov
mov
jp
push
adc
jb
outsb
scas
mov
sbb
xchg
dec
insl
and
decl
jb
push
add
mov
and
jp
add
push
lcall
pushl
movsl
int3
cmp
cmpsl
xlat
add
mov
jae
push
in
test
ljmp
les
and
cmp
sbb
or
ljmp
xchg
push
sub
lahf
rep
ret
testb
clc
lahf
pop
test
mov
lcall
dec
lds
imul
mov
js
pop
icebp
insl
adc
ljmp
inc
lods
mov
dec
ss
fists
sahf
jp
sahf
jbe
lock
aaa
sub
pop
call
addr16
ja
testl
inc
adc
outsl
int
and
mov
cmp
addl
dec
shlb
sub
xchg
jbe
mov
mov
std
pop
aaa
sbb
rclb
filds
add
ljmp
mov
push
fcoml
mov
sar
test
movsb
les
inc
sub
push
cmc
jb
inc
pop
test
pop
mov
jbe
out
inc
out
and
sbb
cmp
cli
js
nop
loopne
add
xor
jmp
cmpsb
push
fs
add
aas
dec
psraw
sar
incl
lcall
repnz
je
cmp
push
sbb
jmp
sbb
lods
pop
xor
add
out
sti
aad
stos
sbb
push
incl
in
add
ds
mov
and
and
jl
add
dec
enter
mov
or
dec
and
call
or
popa
add
mov
pop
test
mov
mov
int3
daa
push
or
fs
lock
dec
mov
dec
sub
add
daa
loope
call
add
jo
aad
push
in
add
jno
dec
fs
add
out
inc
fsubl
in
mov
std
lahf
frstor
sbb
jnp
not
mov
jmp
push
push
adcl
divl
mov
add
test
sbb
xchg
sbb
mov
and
pop
or
inc
arpl
cmpsl
inc
add
call
je
cs
jp
or
mov
sbb
outsl
push
pop
cmp
xchg
xor
bound
negb
push
jbe
add
popa
and
sbb
insb
push
adc
nop
les
cmp
pop
not
pop
adc
stos
inc
jg
stc
jle
lea
pop
mov
into
adc
in
jno
and
and
or
mov
les
jl
into
jge
ret
outsb
jg
sbb
xchg
in
and
inc
sub
mov
ss
hlt
aaa
fisubl
call
in
mov
imul
imul
hlt
jge
pop
push
clc
and
add
incl
je
sbb
int
cmp
scas
add
cmc
sub
or
add
pushf
pop
lret
push
mov
xchg
addl
mov
loopne
fsubrl
mov
mov
clc
cwtl
addr16
shrb
movsl
jae
in
or
dec
dec
aas
xchg
inc
pop
or
cld
cltd
in
dec
cmc
sub
je
mov
and
fcoms
imul
add
aas
sbb
add
icebp
orb
inc
and
cmp
sub
mov
rolb
loope
inc
cmp
orb
or
jecxz
lea
repnz
sub
aad
jecxz
insb
cmp
nop
or
dec
mov
mov
ret
mov
cmp
sub
call
enter
cmp
cmpsl
xor
orb
adc
and
push
jge
stos
adc
scas
add
xchg
sub
and
dec
test
orl
push
jne
and
mov
add
jge
push
call
iret
inc
mov
call
dec
push
popa
imul
loopne
xor
sub
test
cmp
movsl
or
cmc
mov
into
pop
clc
xor
test
cmpsb
dec
pop
loop
ljmp
push
leave
es
push
call
mov
pop
cmp
les
sub
mov
sti
pushl
out
jne
cmpsl
jle
mov
inc
insb
stos
mov
out
lods
ljmp
inc
mov
ljmp
xor
and
andb
shl
mov
mov
xchg
push
rcrb
pop
and
inc
outsl
sbb
sub
dec
inc
xorl
xchg
add
incl
incl
mov
cmp
mov
int
push
add
cmc
gs
mov
nop
jae
push
inc
aaa
stc
jg
ss
ret
dec
inc
mov
mov
adc
adc
jns
mov
lcall
popl
sub
dec
pop
stos
ss
jne
loopne
call
iret
xor
in
mov
cli
adc
aaa
imul
movl
mov
stos
sbb
push
sub
mov
pushl
je
sub
dec
iret
cli
xchg
lahf
scas
test
cmp
cmc
mov
dec
inc
mov
pop
xor
jecxz
test
pop
ret
adc
fcompl
mov
mov
push
js
stos
dec
and
aaa
pop
loop
stos
xorl
pop
pop
jg
scas
clc
in
mov
sarb
and
sub
cmp
lcall
lea
xor
sub
mov
gs
arpl
ja
loope
push
stos
mov
loop
hlt
cmpsl
int
cmp
xor
or
lods
mov
mov
lock
xor
mov
hlt
adc
in
jb
insl
mov
add
lods
movsb
push
pusha
push
mov
ds
xchg
sbbb
lods
int
lock
dec
xor
cmp
mov
incb
repz
sti
test
js
lock
sti
in
pop
inc
incl
dec
sbb
sub
loope
mov
adc
mov
cwtl
and
rcrb
pop
pop
call
and
mov
sub
inc
xor
ljmp
cmc
jl
enter
sbb
sub
sub
dec
mov
lods
insb
fadds
pop
adc
fsubs
les
xor
add
insb
push
push
sbb
xchg
dec
fldl
cmpl
cmp
je
orl
adc
mov
mov
mov
ljmp
adc
cmc
jg
movsl
adc
push
es
push
xchg
loope
sub
jns
outsl
push
mov
mov
dec
pusha
mov
test
cwtl
mov
jbe
xlat
mov
or
dec
xchg
adc
mov
or
sub
stc
xor
addb
cmc
xor
cld
push
lds
andl
cmp
aas
push
mov
repnz
adc
mov
adcb
jle
out
int3
cli
xor
push
call
sbb
inc
jecxz
imul
or
inc
mov
pop
cli
pop
inc
call
and
inc
push
pop
add
scas
xor
sar
sbb
jmp
and
sti
add
out
push
mov
pop
jo
ret
add
jg
or
fistpl
cmp
jbe
hlt
fbstp
xor
mov
xor
in
icebp
call
fldt
pop
adc
jle
push
xchg
movl
ljmp
dec
lea
push
pop
jne
inc
ficompl
inc
hlt
sti
mov
flds
pop
fdivr
jp
jge
dec
shrb
rolb
adc
std
lea
pop
mov
jl
mov
movsb
dec
hlt
loop
into
std
fbld
add
stos
mov
test
outsl
je
xchg
test
imull
mov
aam
pop
cmp
shr
rolb
out
push
sbb
jmp
adc
lea
mov
test
leave
inc
pusha
jmp
icebp
lret
xor
inc
repnz
xchg
lock
or
mov
in
adc
xchg
clc
ljmp
pop
inc
aad
aad
cltd
fwait
inc
mov
inc
test
mov
or
lcall
loopne
xchg
gs
and
cmp
pop
pop
inc
cmp
mov
lcall
outsl
test
mov
scas
or
aas
nop
or
push
or
xchg
dec
add
jmp
dec
decb
mov
enter
adc
cmc
sbb
stos
mov
std
lcall
xchg
cmp
jge
pusha
jns
add
mov
and
in
mov
cmpsb
or
push
popa
shr
repz
xor
jmp
inc
ljmp
leave
inc
lods
hlt
jg
lods
out
mov
jg
jg
mov
fwait
js
iret
sub
jmp
mov
and
cmp
jge
inc
pop
ljmp
dec
jb
dec
and
out
loop
add
push
repnz
mov
pop
ljmp
pushf
xchg
push
jno
jge
test
in
in
adc
add
hlt
jg
sub
mov
xchg
inc
add
test
mov
das
je
inc
insb
push
mov
mov
ljmp
xor
clc
mov
lahf
stos
call
popa
mov
inc
pop
xor
adc
pusha
sub
leave
outsl
loop
adcb
iret
in
bound
out
sti
and
call
clc
fnstenv
xchg
imul
fdivr
insl
sub
scas
sbb
or
push
lock
outsl
cld
mov
cld
mov
add
subb
gs
xchg
loope
sbb
sti
dec
xchg
jb
add
cmpsb
jl
add
mov
es
pop
ljmp
dec
daa
xor
cli
inc
dec
icebp
daa
or
hlt
out
test
jnp
into
xchg
or
scas
adc
sbb
push
daa
sub
lods
cli
decl
ss
inc
jns
incl
adc
push
jle
sub
mov
hlt
jmp
lods
mov
ds
fstps
call
test
test
jbe
outsb
push
shrb
sbb
jg
mov
mov
inc
repz
pop
mov
scas
inc
insl
ljmp
in
js
xlat
push
xor
cmc
add
push
cmp
fcomi
sbb
dec
cld
decl
mov
xchg
cmp
fcom
mov
dec
jg
decl
add
sbb
push
out
mov
das
mov
mov
shl
clc
mov
fcomps
mov
mov
sbb
pop
sbb
jbe
add
pushl
mov
cmpsl
adc
sub
psrlq
nop
sub
addr16
inc
sar
mov
dec
pop
out
mov
mov
mov
add
ljmp
sbbl
andl
mov
incl
daa
mov
imull
and
mov
pop
mov
jns
inc
xchg
mov
inc
out
iret
pop
or
push
les
dec
mov
xlat
xchg
fisttps
add
fcmovu
scas
ja
mov
movsl
sub
adc
js
sbb
lahf
cmp
cltd
inc
push
sbb
mov
push
xchg
xor
sahf
add
mov
loopne
xor
and
aaa
cli
movsl
sbb
mov
aas
in
pop
add
jmp
gs
out
arpl
loop
jecxz
mov
or
adc
jmp
jg
loope
jl
sbb
dec
dec
push
cld
cltd
cmpsl
ret
push
lcall
pop
cli
pushl
mov
cltd
sub
sub
pop
int
icebp
add
call
adc
nop
enter
add
imul
mov
lea
adc
lock
xchg
inc
inc
in
shrd
sbb
repz
cli
lock
fildll
ljmp
dec
sahf
insl
pushl
cli
data16
push
out
mov
jg
lcall
xor
cmp
mov
loopw
lds
pop
mov
xchg
fsubrl
aaa
xor
test
sub
out
cltd
ljmp
or
dec
cmp
and
or
pop
mov
out
lcall
add
push
cmp
dec
and
add
sbb
aas
std
lret
inc
push
mov
dec
xchg
rorb
sub
loope
outsl
lock
loop
inc
mov
mov
stc
mov
add
cltd
mov
jg
stos
daa
hlt
call
andb
xor
orl
call
hlt
jnp,pt
xor
jo
add
arpl
jmp
inc
mov
push
ss
int3
mov
mov
mov
jb
ja
call
add
in
jl
pushl
fsubs
test
jno
xor
ljmp
daa
int
outsl
sbb
outsl
sub
loop
fsubl
push
sbb
push
aam
mov
add
pop
cmpsb
or
xchg
sub
hlt
inc
divl
rcl
xchg
lcall
jl
adc
mov
and
cltd
add
inc
popl
call
adc
xlat
add
mov
pop
rcr
push
add
js
push
test
mov
cwtl
pop
fcmovne
adc
mov
inc
movsb
out
cs
mov
push
and
das
cmp
and
stos
subl
clc
fwait
sahf
push
sarb
fistpl
mov
or
sahf
jno
inc
cmp
and
mov
pushf
les
xor
lods
in
xor
mov
mov
adc
and
in
lret
pop
std
ljmp
imul
xchg
pushf
stc
int3
jo
or
shll
stos
push
decl
and
xchg
into
pusha
ss
pop
sbb
dec
cld
lcall
sub
cmp
inc
testb
imul
stos
and
nop
test
mov
mov
in
sub
dec
loop
pushl
loop
xchg
adc
mov
xchg
adc
test
pop
enter
mov
cmp
xchg
mov
jg
stc
add
xor
jbe
add
mulb
mov
jbe
or
aam
ljmp
xor
movsl
sbb
sub
imul
cmp
cld
pop
cmp
das
shrl
scas
push
test
jmp
rcpps
aad
inc
adc
jns
js
rorb
ret
out
or
es
inc
adc
cli
fisubrs
jno
fucomip
mov
movsb
pop
insb
nop
mov
mov
repnz
in
add
cmpsl
stos
mov
jb
ret
xor
xor
ret
sub
pushl
jecxz
andb
jo
sbb
pushf
push
fwait
sbb
jle
mov
jp
mov
sub
andl
in
jnp
lahf
iret
sarb
std
outsl
hlt
lcall
pop
lcall
lcall
add
clc
pop
sbb
add
pop
push
sbb
xor
push
and
outsb
inc
hlt
je
sar
push
and
fisubrl
test
pop
repnz
add
add
das
fisttpl
or
or
cmp
mov
jns
xchg
mov
push
jle
adc
inc
mov
roll
cmpsl
jne
adc
mov
push
pop
mov
inc
ds
or
insb
add
or
push
daa
jo
sahf
xor
mov
lcall
mov
mov
mov
mov
dec
and
ljmp
or
data16
clc
mov
cmp
aam
or
mov
adc
adc
call
mov
call
and
mov
lds
fmuls
or
mov
lock
fstpl
int
clc
mov
pop
mov
jp
popa
mov
jg
js
xor
orb
cmc
cmp
cmp
enter
cmc
xchg
and
pop
loopne
jmp
aam
adc
dec
dec
adc
decl
inc
clc
clc
inc
test
movsb
add
lock
into
ljmp
je
rcll
lods
dec
xor
std
push
jecxz
mov
mov
jg
lods
lock
push
fwait
mov
and
pop
and
fmuls
and
andb
add
push
adc
daa
inc
pushl
inc
xor
aaa
cli
dec
out
rorb
mov
jne
rolb
test
lods
je
sbb
inc
dec
test
xchg
mov
in
test
stc
jp
mov
push
mov
mov
das
mov
stos
addr16
mov
push
push
insl
push
test
jg
mov
xchg
ds
sub
sub
cli
decl
movb
and
out
push
in
and
lock
nop
push
adc
or
bound
iret
mov
sbb
jns
out
sti
push
sub
push
add
sarl
into
xchg
test
cmpsw
clc
or
fcomip
add
cwtl
test
cmp
loopne
jnp
push
pop
pushf
ljmp
ds
adc
ds
push
xchg
ffree
push
jne
fisubrs
add
bound
inc
and
mov
add
data16
add
test
push
pushf
push
mov
ss
out
and
sub
lcall
sar
outsl
cld
shll
xor
cltd
add
rolb
push
mov
das
mov
sarl
inc
add
push
test
das
xorl
loop
or
pop
insl
ja
inc
mov
hlt
or
aad
mov
push
jge
repnz
lcall
cmpsl
lods
jns
adc
adc
xor
and
pop
ret
lock
cwtl
icebp
in
fistpl
or
mov
cld
cli
jmp
pop
cltd
jae
mov
and
out
jns
shrl
lcall
decl
mov
mov
movsb
stc
dec
pop
dec
gs
ja
or
in
cs
decl
pop
xor
pop
xchg
jecxz
cmpsb
xchg
cli
mov
push
jp
xchg
sti
lret
or
fsubs
idiv
pop
xchg
sub
mov
cmp
add
pop
pop
icebp
mov
clc
dec
fnstenv
outsl
xchg
cmp
push
push
mov
rorl
clc
decl
pop
push
hlt
cmp
in
push
fmuls
pop
call
push
inc
mov
sub
mov
inc
sub
or
rcrl
sbb
push
repz
jae
leave
or
std
pop
call
arpl
push
add
roll
jmp
test
flds
int3
inc
adc
sub
rolb
xor
and
mov
pop
pop
fdivs
inc
xchg
sub
enter
ljmp
pushf
dec
mov
jl
ror
mov
dec
cmp
cmp
mov
sub
gs
iret
mov
dec
mov
push
pop
cmpl
call
push
rolb
or
int
mov
sub
and
jo
add
xchg
in
test
mov
dec
add
and
rcll
mov
clc
jmp
lock
gs
ss
mov
std
xchg
jo
or
test
jmp
xchg
mov
and
push
hlt
push
xchg
popa
cs
sbb
mov
fdivr
mov
sbb
test
cmp
mov
outsl
decl
sub
push
inc
xor
xchg
mov
call
bound
cmp
shll
sub
je
sub
inc
arpl
fbld
jne
fs
ss
out
sahf
outsl
push
test
sbb
jp
xor
xchg
or
mov
add
adc
dec
loop
mov
push
mov
jmp
push
enter
xchg
add
hlt
push
shll
pop
and
or
pop
pop
mov
je
mov
insb
les
mov
rcrb
subl
cmp
xor
ja
push
loopne
outsl
icebp
sub
xor
test
mull
pop
pop
pop
dec
mov
jg
es
pop
xchg
push
das
cmc
jns
add
jo
ficompl
push
push
pop
loope
cmp
pop
lret
add
adc
icebp
and
hlt
adc
fdivr
ljmp
lds
sub
adc
cmpsb
les
cmc
stos
xchg
test
inc
idiv
mov
movsl
pop
pop
inc
sarb
icebp
movb
iret
xchg
and
add
stos
or
daa
lret
mov
push
lods
ss
imul
xchg
pushf
add
lcall
jg
sbb
jmp
sub
pop
mov
rclb
cli
mov
or
xchg
or
inc
in
xor
lcall
fiadds
cmp
mov
inc
push
add
es
std
dec
popf
daa
add
dec
ret
dec
sbb
aaa
mov
xor
xchg
scas
in
movsl
ljmp
icebp
sub
shrb
and
push
mov
or
or
mov
inc
xor
mov
jg
xlat
or
xor
sti
cld
pop
cmpsl
fcomps
mov
xchg
call
fistpl
aas
sbb
and
xlat
sahf
inc
lret
push
pop
mov
xchg
dec
fistpll
cmpsl
sub
pushf
enter
mov
fsubl
push
cmpsb
subb
enter
pop
incb
push
push
dec
or
pop
sub
leave
rclb
pop
clc
je
lcall
clc
ret
xor
lock
adc
and
push
ljmp
push
cli
insb
inc
dec
dec
xchg
inc
sub
cwtl
mov
arpl
inc
pop
pushl
dec
dec
adcb
or
cmp
push
stos
or
and
pushf
xchg
dec
xor
addr16
cwtl
jp
adc
add
cli
test
adc
xor
das
adc
sub
inc
and
add
lea
dec
jo
jg
pop
jmp
sbb
xor
push
mov
jmp
jg
mov
jo
fwait
fisubrl
in
inc
mov
jg
add
cltd
pop
fstl
test
mov
or
and
xor
lret
mov
leave
sbb
test
lods
cmp
xor
mov
mov
stc
cmpsl
imul
test
push
inc
cmp
pushf
aaa
stos
xchg
cmp
mov
fistpll
test
mov
adc
int3
lahf
add
pop
call
data16
xorb
adc
ret
test
sub
lahf
lret
and
xchg
pop
sahf
or
lods
mov
sub
and
mov
pushf
inc
pop
inc
adc
aad
pop
pusha
xor
sarl
mov
loope
inc
dec
fmuls
and
lods
call
cld
pusha
mov
test
inc
rcrb
dec
add
popa
rcrb
and
push
shlb
lock
lods
and
mov
into
adc
daa
test
movsb
and
movsb
xor
add
jge
xchg
mov
and
sub
add
pop
mov
loop
sub
jbe
cld
addb
stc
movl
sub
clc
pop
movsb
iret
xchg
xor
mov
adc
push
dec
mov
adc
mov
in
in
test
or
mov
push
sbb
jecxz
pushf
stc
repnz
add
mov
lods
push
push
push
inc
sbb
inc
xchg
orb
mov
dec
out
pop
sbb
inc
icebp
add
in
mov
adc
cmp
or
push
sbb
fcomps
mov
lods
cmp
rorl
aam
mov
push
imul
lods
mov
pop
adc
inc
push
sub
pop
jge
and
mov
cmp
and
test
mov
imul
mov
xor
lret
jg
movzbl
sbb
shll
push
inc
or
mov
inc
add
add
popa
fs
imul
gs
je
jb
jne
dec
outsb
outsw
inc
adc
outsb
fs
in
fistps
jae
jne
arpl
pop
push
jb
jbe
je
push
outsl
data16
outsb
jae
es
insb
jae
pop
jo
or
ss
outsl
arpl
cmp
imul
std
pop
inc
js
pop
push
imul
fistpl
xor
jae
fistpl
outsb
addr16
imul
pop
insl
daa
xor
fs
dec
jne
insb
neg
je
add
jne
xor
sti
scas
mov
fs
xchg
insl
gs
mov
sbb
inc
sbb
sbb
sbb
lods
mov
lods
lahf
jne
insl
outsl
outsb
add
sahf
imul
add
pop
pop
jae
jne
jb
mov
scas
pop
pop
popa
jo
pop
je
jo
pop
imul
jl
sub
add
sub
push
and
popa
fs
pop
inc
push
insb
xor
sub
data16
mov
jae
sub
push
fsubrl
dec
testb
popa
data16
shr
bound
outsb
xor
push
ja
xor
mov
mov
cmp
fstps
mov
xchg
sub
iret
adc
sbb
push
outsl
jecxz
pop
stos
sub
inc
add
hlt
jge
fisttpl
push
inc
sidtl
add
adc
je
sbb
dec
add
pop
adc
add
or
lods
lret
push
or
repz
mov
push
add
and
notb
test
vpand
es
lcall
js
or
fstl
cs
js
aaa
jns
sub
pop
and
jmp
insl
jecxz
push
dec
pusha
jb,pn
add
rolb
lock
jl
or
data16
pop
inc
add
inc
add
mov
cs
es
adcl
fstps
xor
or
mov
aam
or
sbb
push
mov
dec
sub
insl
sub
enter
mov
add
add
add
incl
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
add
add
addb
add
jo
add
lock
add
xor
add
jo
add
pusha
or
addb
push
add
add
subb
add
test
add
rolb
add
clc
add
sbbb
add
add
orb
add
add
add
add
or
add
faddl
add
add
add
add
add
add
add
add
or
add
add
add
faddl
add
add
add
add
add
add
add
faddl
add
add
add
add
add
add
add
faddl
add
add
add
add
add
add
hlt
faddl
add
add
add
add
nop
add
andb
add
add
add
or
add
xor
add
pop
add
xorb
add
add
add
rolb
add
clc
add
adcb
add
dec
add
xorb
add
add
cwtl
add
orb
cmp
add
call
add
add
add
add
cmp
add
pusha
add
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
push
add
js
add
mov
add
add
add
add
or
add
fldl
add
add
or
add
fldl
add
add
add
add
add
add
add
fldl
add
add
add
add
add
add
add
add
or
add
add
add
add
adc
add
or
add
add
fldl
add
add
add
add
add
add
jl
add
or
add
add
add
add
fldl
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
fldl
add
add
or
add
add
add
fldl
add
add
add
add
add
add
cld
fldl
add
add
add
add
add
fiadds
add
add
add
add
add
fiadds
add
add
add
add
add
add
add
add
or
add
or
add
add
add
adc
add
or
add
add
add
push
add
add
add
add
add
jo
add
adc
add
or
add
add
mov
add
adc
add
or
add
fiadds
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
push
add
aam
add
adc
add
or
add
add
in
fiadds
add
add
add
add
add
add
add
add
or
add
add
add
add
filds
add
add
add
add
add
filds
add
add
or
add
push
add
inc
filds
add
add
add
add
add
pop
add
add
add
or
add
pop
add
push
filds
add
add
add
add
add
add
add
add
add
or
add
add
lods
ljmp
add
sbb
jl
add
push
or
add
add
js
add
mov
pop
add
enter
or
add
lock
adcb
sbbb
add
push
pop
add
nop
or
orb
add
add
add
or
add
xor
add
pop
or
sub
add
orb
adc
add
test
add
rorb
add
clc
or
andb
add
or
adcb
add
dec
or
sbbb
add
cwtl
or
andb
add
or
andb
add
adc
xorb
add
add
add
or
add
add
call
add
add
add
add
in
add
sldt
add
add
add
add
add
out
add
push
add
add
add
add
or
add
add
or
add
or
add
or
add
add
adc
add
or
add
or
add
add
add
add
add
add
add
pop
out
add
or
add
or
add
out
add
adc
add
or
add
out
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
out
add
adc
add
or
add
add
aam
add
adc
add
or
add
add
call
add
add
add
add
out
add
adc
add
or
add
or
add
out
add
adc
add
or
add
or
add
out
add
adc
add
or
add
or
add
add
or
add
or
add
or
add
add
or
add
or
add
add
push
add
add
add
add
out
add
adc
add
or
add
out
add
adc
add
or
add
or
add
add
or
add
or
add
out
add
adc
add
or
add
or
add
out
add
adc
add
or
add
add
lock
add
or
add
inc
add
add
add
add
add
or
add
lock
xor
add
mov
or
adc
adc
adc
add
lods
mov
add
add
inc
xor
add
or
addb
add
and
add
mov
add
sub
add
or
add
mov
add
xor
inc
or
add
mov
add
inc
and
xor
adc
inc
xor
add
mov
add
nop
and
add
hlt
mov
add
adc
adc
adc
or
add
inc
push
add
add
and
or
and
inc
and
or
mov
adc
add
and
add
and
mov
xor
and
and
adc
add
and
sub
and
orb
add
add
add
and
inc
and
inc
sub
mov
pop
lea
add
adc
or
add
add
inc
add
inc
or
and
add
jl
add
andb
and
sbb
addb
adc
or
movl
add
push
adc
inc
adc
lea
add
adc
cwtl
and
inc
add
orb
test
and
add
inc
add
mov
adc
inc
push
and
mov
sbbb
mov
adc
add
lea
add
or
and
dec
xor
mov
add
add
and
mov
add
lea
add
or
or
mov
adc
add
add
cld
lea
add
dec
adc
movl
adcb
add
or
inc
or
sub
and
movl
add
add
mov
add
adc
or
adc
xor
add
test
add
add
cwtl
adc
nop
sbb
or
mov
add
push
adc
inc
add
add
add
or
sub
mov
add
inc
add
mov
add
movl
jo
add
orb
inc
inc
xor
addb
add
xor
add
add
and
sub
add
add
adc
mov
inc
add
add
add
add
mov
sub
or
or
adc
nop
and
mov
test
les
add
lret
add
add
add
add
add
add
add
add
add
iret
push
add
sti
add
incl
icebp
add
push
add
sti
add
testl
repz
std
add
std
add
stc
add
stc
add
sti
add
std
add
repz
incl
cmc
add
std
add
push
add
repz
testl
stc
add
repz
push
add
stc
add
repz
std
add
cmc
add
std
add
icebp
add
std
add
testl
incl
out
push
add
push
add
std
add
push
add
sti
add
repz
cmc
add
stc
add
push
add
std
add
push
add
testl
push
add
cmc
add
incl
testl
into
sti
add
icebp
add
push
add
stc
add
push
add
std
add
push
add
stc
add
push
add
stc
add
repz
icebp
add
push
add
push
add
cmc
add
std
add
push
add
incl
sti
add
incl
incl
iret
push
add
testl
incl
sti
add
stc
add
sti
add
sti
add
testl
out
push
add
push
add
testl
into
std
add
repz
push
add
icebp
add
stc
add
sti
add
repz
sti
add
repz
incl
into
incl
into
push
add
stc
add
icebp
add
cmc
add
push
add
stc
add
std
add
push
add
push
add
push
add
stc
add
stc
add
stc
add
push
add
testl
out
stc
add
testl
iret
std
add
std
add
sti
add
push
add
stc
add
push
add
std
add
push
add
std
add
sti
add
stc
add
icebp
add
sti
add
std
add
sti
add
push
add
icebp
add
sti
add
push
add
push
add
incl
fdivrp
testl
testl
push
add
sti
add
push
add
stc
add
std
add
incl
push
add
std
add
incl
stc
add
std
add
push
add
push
add
sti
add
std
add
incl
incl
fdivrp
sti
add
sti
add
push
add
stc
add
push
add
incl
std
add
repz
push
add
incl
iret
push
add
stc
add
push
add
cmc
add
incl
iret
std
add
push
add
sti
add
repz
sti
add
std
add
incl
iret
push
add
push
add
push
add
push
add
push
add
stc
add
std
add
icebp
add
repz
icebp
add
incl
out
testl
out
icebp
add
incl
out
repz
stc
add
push
add
icebp
add
sti
add
repz
push
add
push
add
push
add
push
add
stc
add
push
add
icebp
add
stc
add
std
add
std
add
icebp
add
push
add
std
add
push
add
cmc
add
push
add
repz
push
add
sti
add
incl
fdivrp
testl
fdivrp
repz
incl
cmc
add
push
add
sti
add
sti
add
push
add
push
add
push
add
std
add
repz
icebp
add
push
add
stc
add
incl
out
push
add
cmc
add
push
add
incl
into
push
add
testl
iret
stc
add
push
add
push
add
repz
sti
add
std
add
testl
mov
push
sbb
imul
jnp
movsb
sub
dec
icebp
jl
test
lcall
or
push
add
std
push
ret
scas
ss
cmp
add
pushf
mov
out
and
mov
jmp
cmpsl
mov
stos
jmp
andl
fimull
xchg
inc
sahf
inc
or
into
jge
roll
jp
lea
rcl
rcrl
andl
lock
jmp
jo
inc
mov
jg,pn
xchg
or
pop
cmpsb
push
in
repz
mov
rorl
orl
xchg
xor
jns
outsb
in
mov
pop
adc
jge
jnp
and
rolb
mov
sarl
js
cmp
insl
pusha
push
rcr
jp
and
pop
and
push
push
in
stc
and
std
icebp
roll
push
xchg
cltd
jp
nop
xchg
or
iret
pusha
ret
pop
pusha
imul
adc
jl
ss
xor
imul
and
or
and
xor
movsl
or
push
bnd
mov
mov
std
cmc
push
faddl
jp
adc
mov
les
lahf
sub
or
decb
pop
ja
je
in
fwait
out
sub
ja,pt
nop
aas
xchg
cmpsb
ljmp
mov
mov
jp
dec
pop
test
add
pop
mov
loopne
rolb
adc
test
fwait
aas
pop
sub
inc
aaa
mov
cmpsl
mov
out
das
outsb
lret
xor
pop
iret
das
push
xor
movsl
insl
add
dec
repz
push
dec
cld
sarb
sub
aam
fcomps
insl
cmp
sahf
mov
dec
cmpsb
cmp
gs
jmp
push
int
add
sahf
mov
data16
adc
data16
or
mov
popf
inc
shrb
inc
xor
xchg
xchg
nop
inc
adc
repnz
aaa
popf
mov
ljmp
sti
ret
mov
mov
add
repz
sbb
pop
stos
movsb
in
into
cmpsb
cld
incb
dec
insl
into
jb
dec
xor
jecxz
adc
mov
adc
sub
lds
mov
or
dec
mov
adc
push
test
std
xor
into
jno
daa
cli
fsubs
or
cmp
or
aam
stos
ds
repz
push
cwtl
xor
insl
push
std
aaa
push
cmp
xchg
add
jnp
popa
xorb
cltd
or
xor
cld
lock
data16
jno
inc
test
fidivrl
shll
pop
xorb
cld
xchg
in
pop
js
cmp
sub
repz
rcrl
xchg
pop
sbb
add
cmpsb
cwtl
push
jp
and
add
pop
scas
xchg
add
pop
arpl
roll
movsl
xchg
inc
mov
out
sti
sbb
das
lds
mov
jle
cmp
sub
xchg
stc
pop
xchg
bnd
popa
inc
jp
lods
lcall
adc
adc
pop
mov
popa
or
mov
aam
sti
aas
mov
shll
fistps
xchg
out
mov
mov
andb
add
adc
push
ja,pn
inc
nop
fadds
ja
je
sbb
data16
xor
dec
jne
pushf
cmp
cwtl
into
cmpb
test
xchg
add
mov
sarl
or
int3
push
sbb
jne
ljmp
add
cmpsl
repnz
mov
fstpl
fisttpl
lods
dec
pop
push
sub
sub
dec
pushf
shl
ja
aam
bound
jle
cs
jge
ret
cvtpi2ps
adc
cmp
mov
jns
in
mov
adc
stos
xlat
ja
lahf
xchg
insl
push
repnz
pop
je
movsl
into
test
fidivrl
cmp
bound
sbb
jnp
pushf
stc
push
out
icebp
mov
cmp
into
cmp
jle
jl
rcrb
test
repz
ficoms
xor
cli
lret
xor
jg
loopne
popf
in
idiv
pop
and
imul
into
dec
mov
sbb
fbld
ja
and
mov
imul
cmp
inc
sub
push
lret
loop
test
lods
adc
sub
xchg
xor
jne
xor
xorb
loopne
jns
cmovae
call
out
into
pushf
mov
jno
push
repz
cmp
push
scas
lock
das
mov
xor
pop
stos
les
xor
cmp
fadd
xchg
stc
or
je
in
js
xchg
pop
add
stos
cwtl
lcall
xchg
aad
xor
mov
add
sbb
sbb
xor
add
xor
cld
pop
cmp
mov
iret
mov
sub
mov
out
inc
jnp
mov
mov
imul
inc
adc
sahf
movsl
gs
repnz
fs
xchg
sub
xchg
ljmp
inc
andb
inc
lods
in
rolb
mov
mov
std
lock
xchg
cmp
movl
jp
test
or
cmc
pop
mov
stos
int
es
and
sahf
fimuls
xor
insb
lods
sbb
neg
sbbl
dec
push
mov
pop
xlat
int
or
scas
fistl
out
insb
repnz
jo
pop
popa
xor
sbb
adc
inc
imul
inc
enter
pop
xchg
pusha
sbb
ret
xchg
sbb
mov
dec
fcompl
sarb
jno
xor
aam
into
mov
pop
iret
int3
aad
ja
cmp
push
ja
xchg
repnz
mov
into
aaa
xchg
xlat
sbb
mov
add
rol
subl
push
pop
jne
ss
and
clc
mov
fidivrs
daa
ficoms
or
lret
adc
mov
jge
inc
adc
in
enter
inc
int3
cs
cmpb
xchg
push
leave
push
das
jmp
in
hlt
pushl
jns
test
stos
and
pop
pop
xchg
inc
jmp
xor
mov
call
adc
push
repz
loop
mov
lcall
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
pop
add
add
add
aas
add
add
add
add
add
add
add
cwtl
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
je
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsb
add
je
jne
insl
add
add
add
add
add
add
and
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
push
add
add
jb
outsl
add
add
add
insb
add
ja
jae
and
inc
add
jne
arpl
push
add
jns
add
popa
add
add
jb
popa
add
outsb
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
sbb
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
bound
outsl
add
and
push
add
jo
jae
and
inc
add
add
and
inc
add
jb
arpl
add
add
add
add
add
add
bound
pop
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
jae
imul
add
outsb
add
add
and
push
add
add
insb
add
add
add
and
xor
xor
xor
xor
sub
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsb
add
jns
add
js
add
add
sbb
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
jb
jo
and
push
add
je
je
insb
add
and
inc
add
insb
add
add
add
arpl
outsl
add
add
popa
add
je
jae
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
popf
add
mov
add
add
add
sub
add
pusha
popf
add
inc
xor
xorb
push
add
add
add
or
dec
or
xor
add
and
adc
inc
inc
and
and
add
inc
adc
mov
mov
add
inc
sbb
or
add
lods
popf
add
adc
and
or
xor
mov
cwtl
mov
addb
or
enter
or
add
inc
or
add
xor
aam
add
or
mov
and
and
nop
cwtl
cwtl
nop
and
call
or
add
adc
adc
sub
sbb
inc
adc
popf
add
cwtl
or
or
test
add
mov
orb
add
push
adc
mov
and
add
mov
inc
inc
and
adc
inc
adc
xor
xor
sub
adc
add
add
mov
sahf
add
adc
inc
and
inc
inc
nop
or
push
or
subb
inc
dec
cwtl
sbb
add
and
or
inc
xor
and
or
and
add
add
and
add
add
andb
or
mov
dec
dec
add
test
add
adc
adc
and
add
xchg
sahf
add
sbb
and
addb
add
and
add
test
add
test
test
or
adc
add
or
nop
add
adc
mov
add
or
mov
inc
inc
and
dec
adc
cwtl
and
xor
add
sahf
add
inc
movl
test
adc
orb
hlt
sahf
add
and
dec
mov
adc
add
push
dec
inc
inc
and
add
inc
push
dec
and
push
add
fs
add
xor
mov
inc
inc
inc
and
add
add
mov
adc
and
cwtl
nop
or
or
and
add
or
andb
adc
sub
sbb
push
sub
add
or
inc
adc
adc
or
cwtl
mov
push
andb
or
cwtl
inc
or
cwtl
and
adc
inc
inc
addb
sbb
andb
inc
sbb
nop
or
add
adcb
inc
inc
and
addb
xor
adc
mov
mov
add
adc
dec
and
adc
mov
inc
inc
adc
movl
test
nop
add
or
and
adc
dec
add
and
adc
sub
and
inc
nop
cwtl
adc
inc
sbbb
and
xor
adc
cwtl
or
inc
test
inc
add
sbb
or
adc
or
inc
and
inc
adc
sbb
and
mov
addb
xor
and
or
add
add
inc
adc
adc
push
cwtl
sbb
inc
and
adc
sbb
and
sub
sbb
adc
test
mov
test
or
subb
mov
inc
addb
adc
push
adc
push
andb
adc
inc
inc
or
nop
or
and
xor
and
or
and
add
and
adc
or
sbb
dec
add
adc
dec
inc
adc
and
and
xor
mov
adc
nop
and
add
and
adc
cwtl
or
inc
nop
nop
add
sub
or
and
adc
cwtl
adc
add
inc
and
or
push
and
and
add
add
repnz
lods
repnz
cmc
repnz
enter
add
add
shl
add
or
repnz
sbb
add
loopne
add
and
add
xor
add
inc
repz
push
repz
pusha
repz
outsb
repz
add
add
jl
add
add
add
xchg
repz
add
add
cwtl
repz
add
add
cmpsb
repz
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
insl
arpl
xor
fs
insb
add
jbe
jb
cs
insb
add
gs
insb
xor
cs
insb
add
insb
ja
jo
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
outsb
add
push
push
bound
je
add
add
jb
outsl
dec
outsb
je
