sub
push
push
mov
push
mov
sub
mov
test
je
push
sub
xor
mov
sub
cmp
ja
movsbl
mov
lea
cltd
mov
idiv
add
mov
jmp
mov
sub
cmp
ja
mov
movsbl
lea
cltd
mov
idiv
add
mov
sub
and
and
jmp
mov
sub
xor
mov
add
add
xor
sub
mov
add
test
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
call
mov
sub
xor
call
add
or
xor
mov
mov
jmp
lea
shl
mov
je
mov
mov
sub
sub
jne
call
mov
mov
lea
shr
mov
jne
mov
mov
mov
sub
jne
mov
push
call
or
mov
mov
movl
xor
push
call
sub
or
mov
push
push
push
push
push
push
call
or
or
add
mov
push
push
push
push
push
push
call
mov
mov
add
add
add
mov
jne
mov
mov
add
sub
jne
push
push
push
push
push
push
call
movl
mov
add
sub
jne
mov
or
add
push
call
mov
mov
lea
sub
mov
je
mov
mov
xor
sub
jne
mov
sub
mov
call
sub
and
mov
mov
add
mov
je
mov
mov
sub
sub
jne
xor
add
push
call
add
or
xor
mov
mov
lea
shr
mov
xor
sub
jne
call
xor
mov
push
push
push
push
push
push
call
push
push
push
push
push
push
call
push
call
sub
call
and
sub
mov
add
call
xor
xor
call
mov
mov
sub
add
push
call
sub
mov
mov
shr
mov
jne
mov
mov
sub
sub
jne
mov
or
push
push
push
push
push
push
call
movl
mov
lea
mov
sub
jne
mov
mov
call
push
call
sub
mov
mov
call
mov
and
mov
call
and
and
and
call
and
and
and
push
call
mov
add
xor
xor
call
movl
mov
lea
mov
sub
jne
push
push
push
push
push
push
call
mov
and
mov
mov
jmp
lea
lea
mov
xor
sub
jne
sub
or
mov
call
mov
mov
sub
mov
je
xor
mov
sub
sub
jne
add
call
add
call
push
call
call
and
xor
sub
call
add
mov
and
mov
mov
lea
add
mov
jne
mov
mov
xor
sub
jne
call
mov
xor
pop
mov
pop
lea
pop
jmp
lea
nop
shr
mov
je
mov
mov
or
sub
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
push
push
mov
xor
lea
mov
push
mov
xor
mov
mov
mov
mov
mov
sub
test
jne
mov
sub
mov
movzbl
add
movl
mov
mov
and
sub
mov
shr
and
add
test
je
mov
sub
test
mov
jne
mov
sub
mov
movzbl
add
movl
mov
mov
and
sub
mov
shr
and
add
test
mov
je
xor
mov
mov
sub
test
mov
jne
mov
sub
mov
movzbl
add
movl
mov
mov
and
sub
mov
shr
and
add
test
je
and
xor
movl
jmp
mov
mov
sub
test
mov
jne
mov
sub
mov
movzbl
add
movl
and
sub
mov
shr
and
add
subl
lea
jne
test
mov
je
mov
sub
mov
mov
add
mov
xor
jmp
movb
add
mov
xor
jmp
movzbl
mov
mov
and
add
add
shr
mov
je
test
je
mov
sub
mov
mov
add
sub
jne
mov
mov
jmp
mov
mov
jmp
lea
call
test
jne
cmp
jne
call
test
mov
je
mov
sub
add
sub
mov
mov
jne
mov
jmp
sub
jmp
sub
mov
movzbl
shl
add
add
lea
mov
mov
call
cmp
jb
add
cmp
jb
add
cmp
jae
add
test
mov
je
lea
mov
sub
mov
mov
add
sub
jne
mov
mov
mov
mov
mov
add
sub
and
mov
jmp
mov
mov
add
add
mov
mov
xor
cmpl
je
mov
mov
lea
shr
mov
je
mov
mov
xor
sub
jne
pop
pop
mov
sub
pop
pop
add
ret
int3
push
mov
sub
push
push
push
push
push
push
call
test
jne
or
jmp
mov
and
sub
mov
or
mov
and
sub
or
sub
mov
mov
sub
mov
sub
mov
or
xor
call
test
je
call
pop
pop
pop
pop
mov
pop
mov
push
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
lea
add
mov
mov
sub
jne
push
mov
push
push
push
lea
push
call
test
je
push
mov
push
mov
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
jne
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
and
add
mov
mov
test
pop
pop
je
lea
movsbl
rol
add
xor
mov
test
jne
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
sub
mov
mov
xor
mov
add
and
sub
or
mov
mov
push
push
push
add
push
push
add
push
mov
mov
call
mov
mov
add
add
cmp
mov
mov
mov
jle
mov
mov
add
xor
and
add
mov
mov
test
je
mov
movsbl
rol
add
xor
mov
test
jne
mov
cmp
je
mov
mov
add
cmp
mov
jl
jmp
movl
mov
or
and
call
cmpl
jne
pop
pop
xor
pop
mov
pop
ret
mov
sub
and
push
call
mov
mov
movzwl
mov
mov
add
pop
pop
pop
mov
pop
ret
int3
int3
mov
sub
test
lea
mov
jne
push
mov
sub
mov
mov
movzbl
add
mov
mov
movl
pop
and
sub
mov
mov
shr
and
add
mov
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
push
mov
call
xor
add
mov
movzwl
mov
add
lea
push
push
mov
mov
mov
movb
call
add
lea
push
call
mov
mov
xor
push
push
call
add
xor
add
mov
lea
push
push
push
push
call
mov
mov
mov
lea
push
push
lea
push
call
test
jne
call
mov
lea
push
mov
mov
push
lea
push
call
test
je
call
and
mov
call
mov
push
call
add
mov
mov
jmp
lea
nop
addl
add
sub
jne
mov
call
mov
mov
mov
mov
add
test
mov
mov
mov
je
mov
lea
mov
add
call
mov
sub
mov
movl
mov
mul
shr
mov
mov
jne
mov
mov
or
subl
jne
cmpl
je
lea
mov
sub
shr
test
lea
jle
mov
movzwl
mov
and
cmp
jne
mov
and
add
add
add
add
subl
jne
add
cmpl
jne
cmpl
je
push
push
push
push
push
push
call
mov
add
cmpl
mov
je
mov
add
push
call
mov
test
mov
je
and
mov
mov
test
jne
mov
mov
mov
add
add
mov
test
je
jmp
lea
mov
test
jns
add
add
xor
movzwl
push
jmp
mov
add
and
add
push
push
call
add
mov
mov
add
test
jne
mov
mov
add
cmpl
mov
jne
mov
add
movl
mov
push
mov
mov
pop
mov
mov
mov
mov
jmp
lea
mov
cmp
jne
mov
push
push
push
push
push
push
call
mov
add
mov
mov
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
sub
push
push
mov
mov
mov
sub
test
jne
mov
sub
mov
mov
movzbl
add
mov
mov
and
sub
mov
shr
and
lea
mov
add
sub
test
jne
mov
sub
mov
mov
movzbl
add
mov
mov
and
sub
mov
shr
and
add
test
jne
mov
mov
add
xor
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
and
add
add
mov
call
add
and
mov
push
call
and
add
and
call
sub
mov
call
sub
push
call
mov
sub
call
sub
call
add
mov
add
call
and
mov
xor
cmpl
je
mov
pop
pop
pop
mov
pop
ret
movl
mov
mov
mov
movw
mov
mov
add
push
mov
movl
call
or
mov
mov
mov
push
push
push
push
push
push
call
mov
mov
push
call
call
mov
xor
xor
push
call
push
push
push
push
push
push
call
add
or
mov
push
call
push
push
push
push
push
push
call
mov
mov
push
push
push
push
mov
call
mov
mov
mov
sub
mov
push
mov
mov
movl
call
xor
mov
sub
mov
call
mov
push
push
push
push
push
push
call
sub
xor
sub
mov
call
push
push
push
push
push
push
call
and
add
call
mov
xor
call
sub
mov
and
and
call
add
xor
lea
push
push
lea
push
call
test
mov
je
mov
mov
xor
test
jbe
and
test
mov
jne
mov
mov
mov
add
cmp
jb
jmp
mov
sub
cmpl
mov
je
mov
mov
jmp
lea
sub
mov
je
mov
mov
sub
sub
jne
mov
mov
sub
shr
lea
je
mov
lea
movzwl
mov
and
cmp
jne
mov
and
add
add
add
add
sub
jne
add
cmpl
mov
jne
xor
xor
mov
push
push
push
push
push
push
call
mov
and
lea
push
push
mov
movb
call
add
lea
push
call
push
push
call
add
test
jne
mov
mov
add
mov
pop
pop
xor
pop
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
fldl
add
fldl
add
fldl
add
fldl
add
fiadds
add
add
add
add
add
add
xor
add
and
add
add
add
jo
add
add
add
add
add
addb
add
xor
xchg
xor
jmp
rdpmc
sbb
push
xor
xor
xor
xor
xor
xor
xor
cmc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jno
test
xlat
cmp
ds
aas
pusha
aas
imul
jnp
cmpl
aas
lods
aas
int3
aas
add
add
add
inc
add
add
and
sub
xor
data16
and
sub
test
xor
xor
xor
sbb
sub
xor
xor
inc
xor
dec
xor
xor
data16
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
cmp
call
add
sub
cmp
add
adc
loopne,pt
xchg
cli
add
fdivp
push
dec
mov
mov
mov
xor
adc
mov
aas
or
sti
xor
cmp
mov
cwtl
ret
or
cltd
or
sbb
xchg
xor
icebp
lods
fcoms
aaa
sub
neg
sub
and
insl
sbb
mov
add
and
imul
popa
je
adc
shlb
in
push
nop
enter
ja
gs
mov
push
inc
push
mov
movhlps
mov
sbb
out
push
das
out
add
inc
xchg
push
and
insl
jge
mov
movsl
and
dec
int
jecxz
sti
and
mov
gs
dec
xchg
xchg
mov
int
in
mov
lock
xchg
xchg
stos
and
or
hlt
or
xchg
mov
cmc
and
mov
fists
mov
sti
dec
pop
inc
movsl
int3
adc
adc
out
dec
dec
mov
rorl
jmp
mov
pop
xor
popa
dec
insl
xchg
jge
xchg
inc
cmpsl
mov
ret
adc
and
dec
stc
mov
in
and
xor
mov
loope
jno
adc
cmpsl
or
dec
jmp
out
and
mov
test
dec
test
inc
mov
adc
int3
or
xchg
sub
xor
loope
or
orl
dec
das
xchg
pop
xor
psubb
loop
jmp
dec
test
inc
outsl
pop
mov
sub
mov
or
subw
aaa
mov
adc
loopne
jecxz
int
roll
mov
jge
gs
dec
xchg
cmp
and
filds
leave
and
lea
jge
imul
lahf
pop
and
ret
daa
mull
adc
or
adc
push
push
adc
stos
repnz
or
data16
and
or
cmp
adc
xor
or
and
dec
cmpsl
xchg
xchg
and
pop
adc
cmp
dec
fs
inc
jmp
enter
pop
and
and
ljmp
mov
xchg
pop
and
cmp
mov
adc
jmp
dec
mov
inc
xchg
imul
popa
enter
dec
and
and
out
and
in
data16
out
adc
ret
dec
mov
lahf
and
popa
adc
xor
jle
out
cltd
jns
or
adc
and
dec
stos
xchg
xchg
and
insl
int3
dec
int3
adc
or
das
sbb
xor
dec
add
cltd
or
sub
xchg
or
and
or
inc
call
iret
and
dec
stos
xchg
popf
and
push
adc
das
dec
pop
xchg
rdpmc
test
jg
sbbl
cmpsl
dec
mov
shll
inc
jmp
xchg
cwtl
or
negb
ret
or
dec
insl
xchg
push
and
inc
sub
mov
inc
in
cmc
or
xchg
lds
scas
inc
xchg
jnp
imul
pop
xor
inc
jmp
dec
or
es
sub
or
inc
pop
mov
xor
pop
outsb
movsb
inc
pusha
mov
pop
xor
push
and
dec
mov
or
in
mov
xor
jg
push
rclb
sti
pop
add
cwtl
xchg
ds
cmp
mov
adc
mov
add
loop
add
fstpl
xchg
repz
pop
mov
shl
jmp
fsubrl
add
gs
rcll
pop
jb
mov
mov
iret
fs
imul
pop
jns
call
lock
insl
add
cmp
sbb
bound
mov
mov
lods
and
sbb
adc
shlb
bound
sbb
pusha
sbb
shlb
push
outsl
mov
ffreep
xor
sbb
sbb
test
je
out
insl
add
push
int3
mov
mov
mov
imul
lea
inc
adc
mov
insl
stos
xchg
hlt
add
sarl
loopne
sbb
pop
cmp
or
mov
mov
insl
lea
orb
inc
adc
or
cmp
pushf
sub
sbb
cmp
mov
arpl
jecxz
test
or
loop
arpl
arpl
dec
bound
sub
xor
insb
imul
jb
lods
sub
movsl
xor
push
sbb
mov
sbb
jae
dec
lods
cmp
mov
push
add
jmp
xlat
add
js
jl
jl
jl
pop
pop
sti
jl
pop
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
push
add
sti
lock
jl
jl
jge
jl
jl
dec
pop
pop
loope
add
pusha
popl
divps
add
sbb
pop
jecxz
jecxz
jecxz
jecxz
jecxz
ret
or
mov
jg
or
adc
or
sbb
inc
sbb
inc
ds
ds
and
push
and
insl
ds
outsl
ds
ds
sub
push
ds
add
cs
das
ds
xor
or
xor
sbb
xor
ds
cmp
adc
cmp
inc
cmp
inc
ds
ds
ds
ds
outsb
ds
jo,pt
inc
bound
dec
psubusb
ljmp
clc
das
mov
mov
int3
sub
sar
stc
inc
int
mov
xor
clc
or
mov
ds
sub
clc
pop
adc
jl
or
mov
ds
inc
aaa
insb
mov
aaa
in
les
adc
jl
cmp
inc
adc
and
gs
call
push
pop
and
sub
sbb
std
adc
loope
pop
les
sbb
dec
pop
sbb
pop
adc
sub
icebp
sub
add
inc
pop
dec
sbb
xor
clc
clc
addr16
inc
add
jg
and
clc
sub
dec
cmp
ss
clc
push
loopne
and
stc
lahf
push
jmp
or
in
push
or
in
jo
out
jecxz
jecxz
jecxz
jecxz
jecxz
out
mov
repz
cmpsb
hlt
loop
testb
clc
pop
stc
sti
cli
mov
ds
aaa
movsl
out
cmpsl
inc
test
into
push
push
lods
pop
and
pop
mov
add
mov
add
mov
add
pop
mov
pop
or
mov
pop
or
rcrb
pop
ret
pop
or
lds
or
pop
leave
pop
nop
pop
adc
lret
pop
adc
int3
pop
adc
int
adc
into
pop
adc
rcrl
adc
pop
xlat
pop
pop
pop
ficoml
sbb
movsl
pop
sbb
ficomps
sbb
fistps
sbb
loopne
sbb
loope
sbb
pop
in
pop
pop
out
and
call
pop
and
ljmp
pop
in
pop
and
pop
repnz
daa
pop
lcall
pop
or
add
sbb
inc
push
xchg
xchg
iret
fistps
and
or
and
or
pop
and
nopl
pop
adc
daa
pop
adc
sub
adc
sub
adc
sub
adc
pop
sub
pop
pop
sub
pop
sbb
das
pop
sbb
fstpt
xor
xor
xor
xor
pop
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
nop
cmp
xor
xor
xor
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
arpl
or
jecxz
mov
in
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
mov
pop
adc
mov
jo
imul
nop
mov
popl
mov
or
add
or
pop
or
add
or
pop
loopne
decb
loopne
clc
or
dec
clc
or
xor
or
inc
clc
or
loopne
clc
pavgb
loopne
clc
adc
inc
clc
adc
cmp
adc
cmp
adc
cmp
adc
loopne
clc
pop
loopne
clc
sbb
ds
sbb
aas
clc
sbb
dec
clc
sbb
inc
clc
sbb
inc
clc
sbb
loopne
clc
pop
loopne
clc
and
xor
and
dec
clc
and
dec
clc
and
aaa
clc
and
dec
clc
and
mov
inc
clc
sub
dec
clc
sub
cs
sub
adc
sub
es
jo
adc
loopne,pn
clc
das
loopne
stc
xor
clc
xor
and
clc
xor
sbb
xor
sbb
xor
loopne
clc
aaa
loopne
clc
cmp
push
clc
cmp
pop
clc
cmp
das
clc
cmp
and
cmp
and
cmp
loopne
clc
aas
loopne
clc
inc
loopne
clc
inc
loopne
clc
inc
loopne
clc
inc
loopne
clc
inc
loopne
clc
inc
loopne
clc
inc
loopne
clc
inc
loopne
clc
dec
loopne
clc
ljmp
mov
in
cmp
cmp
mov
out
ds
cmp
mov
icebp
mov
repnz
cmp
ds
cmp
test
clc
xchg
cmp
cli
lods
jmp
lods
cmp
sub
xlat
cmp
lret
ds
jo
add
jae
int
jo
lret
stc
xchg
adc
cs
xchg
cs
pop
xchg
out
mov
xchg
cs
cs
pop
xchg
cs
xchg
sub
cwtl
cs
pop
cltd
pop
adc
lcall
pop
pushf
sub
pop
popf
pop
pop
pop
sahf
ficomps
lahf
pop
sbb
mov
xchg
mov
mov
pop
cmpsb
sbbb
bound
test
dec
pop
test
pop
sub
mov
sub
mov
dec
pop
mov
es
mov
loop
mov
lods
pop
mov
xor
mov
cs
cs
pop
mov
cs
mov
pop
cmp
shlb
sarl
jl
jl
jl
jl
jl
jl
jl
pop
inc
dec
jl
inc
jl
jl
jl
arpl
cwtl
and
loopne
and
and
out
and
movl
adc
jl
repnz
inc
cwtl
les
icebp
testl
pop
stc
pop
lods
add
test
inc
pop
xchg
or
sub
or
xor
or
sbb
push
movl
adc
inc
push
rcl
pop
icebp
rcl
sbb
popa
icebp
pop
icebp
sbb
and
and
icebp
xor
icebp
sub
es
sub
daa
repz
sub
pop
pop
cmp
cld
jl
pop
xchg
add
and
xchg
inc
inc
sbb
inc
clc
xchg
clc
sub
pop
sub
and
sub
or
sub
jbe
sub
xchg
xor
call
xor
mov
xor
and
xor
jbe
aaa
mov
mov
call
cmp
mov
jecxz
jecxz
jecxz
je
dec
aas
cmp
inc
pop
jl
inc
jl
ljmp
pminub
in
popl
out
fdiv
icebp
mov
repz
cmc
shll
div
es
clc
icebp
and
popa
cwtl
icebp
push
sar
icebp
push
loope
icebp
push
icebp
std
icebp
push
jno
icebp
pop
jno
icebp
pop
repz
repz
lds
les
sub
sbbb
jmp
pop
xchg
movsbl
xchg
sbb
xchg
es
shll
ret
orl
in
nop
and
add
nopl
push
xor
and
daa
sarb
and
rorl
out
iret
leave
xchg
scas
stc
test
out
and
stos
pop
pop
lods
sub
pop
mov
push
pop
mov
es
enter
ds
inc
mov
pusha
scas
mov
es
jmp
pusha
ret
pusha
mov
stc
pusha
cli
and
cmpsb
mov
jl
adcl
pop
insl
dec
pop
testb
jl
push
repnz
pushf
cwtl
lcall
inc
nop
adc
xchg
out
and
and
popa
mulb
add
pop
scas
xchg
js
nop
fdivrl
or
movhps
out
sbb
adc
push
movsb
cmp
icebp
or
pop
repnz
clc
and
arpl
leave
xchg
les
and
shlb
ror
sub
rorl
cs
aad
das
xor
fmuls
xor
fisttpl
ss
fisttpll
cmp
loopne
cmp
loop
cmp
jecxz
cmp
in
aas
out
inc
out
inc
or
push
jmp
rorl
shld
out
lahf
jle
lock
ds
or
repnz
repz
or
cmc
ds
idivb
or
clc
rdseed
adc
cli
adc
sti
adc
cld
adc
std
adc
inc
adc
leave
add
inc
sbb
dec
sbb
jecxz
jecxz
jecxz
out
jl
push
push
icebp
or
pop
icebp
or
arpl
or
popa
or
popa
daa
icebp
or
and
or
ds
adc
daa
adc
sub
adc
sub
adc
sub
adc
ds
sbb
das
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
ds
and
aaa
and
cmp
cmp
and
cmp
daa
ds
aas
sub
inc
sub
inc
sub
inc
ds
inc
ds
ds
ds
ds
xor
inc
xor
dec
xor
dec
xor
dec
ds
dec
ds
ds
cmp
push
cmp
push
cmp
push
ds
push
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
sub
nop
loop
subl
mov
loop
js
clc
repz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
pushf
mov
ds
clc
cli
and
js
clc
incb
or
inc
mov
or
out
mov
lret
dec
xchg
or
or
dec
jg
dec
clc
or
push
clc
or
push
clc
or
push
clc
or
push
clc
or
clc
push
clc
psubb
adc
push
clc
adc
pop
clc
adc
pop
clc
adc
pop
clc
adc
pop
clc
adc
clc
pop
clc
pop
clc
pop
clc
sbb
pop
clc
sbb
pusha
clc
sbb
popa
clc
sbb
clc
sbb
arpl
sbb
push
cmp
and
stos
and
lods
pop
in
lods
and
scas
ds
scas
ds
ds
daa
ds
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
ds
xor
mov
xor
mov
clc
xor
mov
clc
ss
sar
clc
ret
clc
insl
xor
cmp
cmp
cmp
jg
cmp
cmpl
ds
aas
lea
inc
mov
inc
por
inc
mov
popl
stc
or
sub
or
sbbl
cwtl
imul
lock
ljmp
and
movsl
js
clc
test
loop
jg
stos
int3
cwtl
adcb
ret
movsb
jmp
and
push
mov
mov
cli
xor
lcall
pushf
and
dec
popf
xchg
jno
sahf
inc
push
mov
mov
cltd
jb
stos
xchg
adc
stos
inc
je
mov
inc
mov
js
mov
enter
imul
xor
fisubl
dec
fistl
mov
xchg
fisubs
insl
inc
fildll
loopne
outsl
and
dec
jo
loop
jno
in
mov
adc
in
imul
jbe
call
inc
mov
enter
cmc
and
notl
mov
icebp
sub
das
jno
stos
inc
sti
stos
mov
adc
and
pop
and
enter
add
mov
pop
mov
and
dec
mov
inc
or
and
dec
mov
inc
xadd
adc
xchg
adc
les
mov
and
dec
xchg
push
and
inc
pop
leave
mov
adc
and
dec
lret
xchg
sbb
int3
inc
sbb
mov
into
and
dec
iret
xchg
push
and
inc
sub
mov
adc
and
dec
jmp
sub
xor
xor
xchg
xor
movsb
inc
xor
clc
or
inc
inc
cmp
clc
xchg
icebp
or
icebp
loop
imul
and
inc
cltd
rorl
aad
mov
dec
fcoms
or
fistl
and
dec
sub
fidivrs
mov
adc
loopne
xchg
xchg
loope
pushf
inc
loop
mov
loope
rcrb
push
cltd
adc
jo
inc
xchg
fwait
lock
test
gs
movsb
sbb
cmp
and
arpl
push
or
ds
adc
adc
cli
and
inc
hlt
and
cmp
andb
xorb
mov
jno
adc
cli
or
rclb
enter
fs
cmpl
jno
add
inc
add
cmp
push
or
cmp
std
int3
icebp
movsl
adc
int3
push
cltd
adc
cli
xor
pop
int3
adc
add
sub
xor
adc
ds
inc
cwtl
sub
adc
fdivs
rcll
and
dec
pop
or
clc
xor
pop
cli
add
xchg
mov
adcb
jge
stos
xor
jno
cmp
add
out
popa
leave
adc
and
addl
adc
ret
or
adc
addr16
std
inc
cmp
adc
adc
sbb
adc
xchg
adc
xor
adc
or
adc
adc
jne
adc
inc
gs
adc
test
inc
adc
dec
cmp
nop
adc
xchg
xchg
and
jle
adc
or
push
add
cmp
in
dec
and
data16
xchg
mov
adc
adc
adc
test
pusha
rcrb
jne
call
gs
pop
lods
sbb
push
enter
dec
and
xor
addl
sub
adc
shrb
fsubrs
push
xchg
cmp
cmp
push
xchg
fs
adc
dec
jmp
inc
stos
sub
push
test
pusha
dec
push
and
adc
xchg
adc
adc
push
xchg
add
adc
push
es
addl
pop
and
adc
add
in
aaa
add
and
in
dec
daa
adc
in
pusha
xor
adc
xor
int
or
xor
push
enter
aam
mov
adc
js
dec
or
imul
jno
mov
adc
popa
pop
cwtl
pop
xchg
adc
clc
push
adc
and
aad
adc
adc
cltd
xor
sub
lods
pusha
adc
test
nop
push
ss
into
fs
insl
stc
orl
sub
in
cwtl
lea
add
adc
mov
icebp
imul
cltd
adc
inc
push
or
xor
sub
xchg
dec
rcrb
xor
or
adc
mov
xor
xor
lock
and
adc
xor
rorb
add
retw
adc
cltd
andb
adc
inc
push
dec
leave
fdivs
cmp
sub
js
adc
and
dec
stos
push
cmc
inc
xor
data16
xor
adc
popa
int
jo
adc
pop
popa
mov
add
imul
loopne
jp
and
ret
jl
adc
cltd
loope
xchg
xor
adc
add
adc
mov
fs
int3
adc
and
cltd
ret
stc
sub
cmp
sub
test
adc
mov
adc
push
dec
push
pushf
xor
js
stos
nop
xor
push
inc
mov
adc
lock
das
xchg
sub
adc
cld
push
call
cmp
rclb
adc
ret
xor
imull
adc
or
jge
dec
mov
dec
popa
xchg
xor
pop
xchg
sbb
add
mov
incb
dec
dec
test
cmpb
in
fscale
inc
xchg
pop
test
out
jmp
enter
fiadds
pop
insb
in
lock
inc
add
aad
lahf
icebp
rcrb
fnstsw
cmpsl
loop
adc
sbb
xchg
imul
push
add
xor
sub
iret
cmpsl
pop
mov
jmp
adc
lret
xor
repnz
mov
incb
pusha
jb
call
insb
add
addr16
cmpsl
mov
cmp
fisubrl
mov
add
jg
add
xchg
jle
lea
xor
xchg
jmp
sub
test
sub
dec
nop
movsl
add
fwait
xor
add
add
add
adc
jp
add
outsw
push
ss
dec
fsts
jmp
xchg
lock
add
mov
cwtl
push
test
add
pop
add
ljmp
lds
mov
out
push
cmp
add
pop
pushf
lds
add
xor
lret
add
out
push
loope
and
je
and
sub
mov
pop
dec
jae
add
aaa
fcoml
fistpll
das
push
dec
and
insb
js
leave
or
sub
loopne
jge
arpl
jbe
stos
cmp
lahf
cmp
dec
add
test
repnz
xchg
sub
add
fidivs
jno
orb
pop
jne
add
dec
mov
add
stos
shlb
adc
leave
push
cld
dec
add
mov
sarl
inc
cltd
lods
popf
mov
rcrb
mov
xor
fadd
push
inc
add
movsl
inc
insl
push
shufps
lcall
jns
ret
adc
cltd
sbb
lret
cld
rorl
stos
add
sub
and
lahf
pop
cmp
xchg
and
call
clc
ljmp
add
test
lods
mov
or
rclb
repnz
out
push
les
arpl
xorl
aaa
add
inc
mov
je
call
out
sub
lret
adc
sarb
xor
jl
in
push
movsb
add
or
mov
movsl
pop
jo
gs
movsb
add
lea
cmp
xor
lods
mov
and
in
mov
shrb
mov
push
aaa
mov
pushf
add
in
jne
outsl
fsubl
ficomps
adc
stos
mov
mov
dec
push
dec
add
push
dec
shr
push
or
leave
pop
inc
push
cltd
add
dec
jb
inc
add
jp
jge
pop
clc
and
jg
popf
push
rolb
sub
ljmp
mov
sub
add
shll
jg
aam
xchg
das
popf
jmp
and
insb
jns
add
lcall
cmp
jno
xchg
add
adc
mov
cmp
xor
int3
fistl
shrb
add
nop
test
add
xchg
sub
xchg
pusha
cs
pop
adc
jns
add
setne
dec
and
add
cs
imul
push
push
sub
pop
pushf
pop
inc
or
sbb
sub
or
fptan
shrl
lds
xchg
jne
enter
sub
mov
lods
pop
jb
mov
lock
fs
imul
inc
sbb
pusha
fld
mov
sub
pop
or
gs
popa
push
adc
pop
imul
xor
push
jne
add
jb
cmpl
mov
pop
gs
test
fwait
insl
insb
push
xchg
push
mov
rolb
dec
je
mov
call
inc
mov
or
inc
scas
insl
mov
rolb
lods
popa
and
push
cmp
pop
dec
and
rcl
jl
cmp
mov
scas
movsb
sub
gs
mov
stos
or
jns
inc
inc
mov
sub
in
mov
imul
mov
sub
sub
lea
cld
jb
hlt
jo
push
jge
rcrb
pop
outsb
push
mov
outsl
lods
sbb
adc
inc
mov
jae
xor
inc
or
nop
adc
bound
jbe
mov
or
js
xor
dec
push
fimull
push
nop
ds
rorb
push
mov
or
mov
sub
add
dec
insb
mov
stos
inc
jae
xor
mov
shrb
scas
cmpsl
mov
adc
test
jo
xchg
insb
push
outsl
shrb
xchg
loopne
fcoml
mov
sbb
or
imul
mov
inc
inc
mov
dec
mov
data16
ds
xchg
xor
xchg
imul
xchg
fadds
xchg
push
add
jge
xor
jno
outsl
and
mov
mov
dec
mov
add
jns,pn
and
addr16
mov
push
popf
sbb
push
lahf
sub
shrb
outsb
es
pop
sbb
cmp
lods
gs
jae
push
or
mov
and
and
cwtl
pop
xor
jo
xor
in
inc
pushf
leave
push
dec
add
outsb
mov
jns
cmp
xor
xor
sbb
cmp
test
dec
sub
or
xor
push
xorb
addl
ds
call
or
dec
push
nop
dec
push
jno
icebp
dec
inc
nop
or
loope
inc
nop
or
mov
add
imul
inc
push
lock
inc
pop
sbb
cmp
sbb
push
andb
inc
xchg
fs
mov
insl
loopne
fisttps
cmp
jbe
pop
imul
nop
leave
inc
lcall
dec
sub
xor
mov
imul
loopne
or
xlat
cltd
hlt
cwtl
push
fists
xor
es
insl
xor
sbb
sub
fsubs
dec
dec
push
lods
imul
test
push
push
pushf
aaa
or
lock
cmp
pop
pop
mov
stos
pop
fs
nop
icebp
add
mov
gs
rcrb
outsl
mov
xchg
insb
popa
dec
call
cltd
push
mov
or
lods
pop
push
add
jae
push
add
imul
insl
cld
aas
outsb
insb
cmc
adc
dec
sub
js
pop
mov
add
sbb
scas
pusha
pusha
and
scas
and
sbb
mov
and
imul
mov
adc
add
or
sub
icebp
and
inc
jmp
frstor
inc
dec
sti
add
dec
mov
dec
push
jo
fisttpll
popa
add
in
mov
pop
jae
test
mov
das
push
push
nop
inc
adc
movsb
mov
cmp
ret
addr16
dec
add
push
lods
sahf
sub
jnp
cmp
inc
jno
sub
and
xor
lods
out
sbb
cltd
add
mov
hlt
inc
hlt
pop
lock
and
loope
dec
sub
ss
jg
aaa
mov
push
xorl
add
pop
dec
mov
outsl
sbb
subl
ja
fsubrs
cmp
insb
scas
daa
arpl
sub
adc
bound
cltd
cmp
clc
dec
add
pop
inc
outsl
mov
adc
je
sbb
mov
and
or
xchg
adc
sbbb
jb,pn
inc
je
sub
cmpsb
aam
adc
popa
jo
test
xchg
add
mov
jns
push
das
xor
dec
dec
dec
adc
rcrb
popa
outsb
add
mov
jl
lods
popa
jne
mov
fs
fdivrl
inc
inc
test
imul
ret
shlb
mov
xor
jge
push
jno
and
xchg
push
shr
mov
sub
bound
pop
mov
sbbl
outsl
fs
ds
dec
jmp
and
pusha
add
or
gs
or
add
jo
sub
ret
jae
jb,pn
pop
push
xorb
test
pop
cmp
jp
push
and
jb
add
cmp
jg
adc
mov
data16
insl
outsl
mov
sub
or
mov
lret
daa
fsts
adcb
imul
push
pop
jo
push
pop
inc
inc
cwtl
cli
cmp
lea
in
sbb
call
xor
add
test
and
add
pop
sub
push
fwait
cmp
mov
pop
add
xor
xor
add
cmp
ja
or
insb
cmp
xchg
or
dec
sqrtps
jne
push
sub
mov
add
dec
xor
xchg
dec
sbb
push
shlb
xor
sub
jne
jge
and
shll
sub
or
sub
pusha
add
push
pop
xchg
push
dec
sbb
xor
add
xor
jo
cmp
sbb
sbb
add
sub
jae
or
pop
sub
and
jg
gs
dec
inc
lahf
inc
push
dec
add
dec
pop
push
add
bound
pop
ret
sub
rcll
popa
insl
les
imul
xchg
sub
sbb
push
adc
xor
int
push
push
ss
cld
or
pop
adc
add
sub
filds
aaa
xor
fxch
pop
orb
iret
jle
add
cmp
shrb
cmp
loopne
cmp
in
ret
add
mov
in
sarb
jmp
sbb
add
jae
sbb
je
or
sbbb
dec
mov
es
and
cmpb
xor
jge
jb
xor
mov
inc
inc
inc
cwtl
dec
or
loope
mov
movsb
add
pop
push
mov
jl
push
inc
pop
pop
test
rolb
pop
pop
cltd
dec
pop
inc
lahf
add
dec
pop
xchg
push
pop
xchg
xchg
cmp
dec
lds
in
subb
add
inc
ja
sbbb
loop
out
subb
sub
aas
cmc
mov
push
stc
lock
add
hlt
out
out
jecxz
lock
les
imul
cwtl
hlt
adc
jge
mov
in
cmpsb
scas
push
mov
mov
cmpsl
mov
icebp
test
lods
iret
jno
clc
out
cmp
cmpsl
cmp
mov
fndisi(8087
stos
mov
loopne
pop
dec
scas
jno
adc
push
add
cltd
inc
push
inc
mov
sbb
push
outsl
push
mov
pop
pusha
dec
sbb
bound
into
rclb
pop
out
fwait
pushf
loop
lea
or
adc
push
pop
add
pop
cmp
xlat
sbbb
cmc
mov
clc
cwtl
add
dec
stos
push
pop
add
cmp
pushf
push
pop
cltd
int3
add
push
lahf
fs
add
jo
popa
lods
mov
out
and
jmp
out
clc
sbb
jmp
dec
cmp
notl
ret
add
mov
cli
sbbb
inc
jae
hlt
push
aas
movsl
inc
sub
xchg
push
lods
mov
add
mov
push
add
or
adc
or
inc
sbb
inc
arpl
test
push
shlb
sbb
lcall
mov
jle
mov
movsb
dec
pusha
dec
adcl
rolb
add
stos
push
mov
mov
mov
movsl
sbb
add
shlb
ret
jne
jnp
mov
jb
push
js
mov
jg
mov
lods
mov
jecxz,pn
icebp
fldt
sbb
xor
add
jg
mov
loop
mov
jb
cmp
push
jns
das
and
pop
sbb
roll
scas
jno
jp
scas
jae
or
fsubrl
cmp
add
pusha
sbb
inc
push
cld
add
add
test
or
or
push
mov
and
adc
or
jnp
pop
sub
adc
xor
fcmove
adc
jmp
mov
lret
int
add
inc
mov
inc
dec
mov
bound
pop
mov
or
pop
shrd
xor
push
bound
and
pop
lret
adc
xchg
xchg
lcall
xchg
sbb
lret
jmp
fstl
cmc
sub
mul
dec
cmp
out
add
jmp
stos
cwtl
xlat
jg
add
adc
rcr
adc
fisubrs
frstor
rolb
sub
xlat
testl
add
ret
ret
sarl
cmp
add
sbb
or
or
add
dec
push
push
and
test
cltd
jns
inc
adc
pushf
mulb
sub
inc
push
mov
rorb
mov
pop
jl
mov
cmpsl
sub
rcr
into
call
push
lock
sub
mov
jae
sbb
clc
xor
sti
es
ljmp
aaa
cmp
dec
jne
add
xor
pop
popa
pop
incb
add
adc
sbb
push
loop
pusha
push
inc
stc
repz
loop
xor
xor
inc
stos
sbb
cmpsl
sbb
scas
idiv
test
push
js
pop
mov
imul
add
xlat
sbb
xchg
add
dec
lcall
int3
arpl
pop
jg
ret
dec
xor
adc
insl
xor
and
sub
add
pop
mov
in
pop
jne
pop
cmp
add
pop
push
adc
push
push
xor
daa
imul
add
lods
bound
stos
push
pop
xchg
rorl
jns
clc
ds
add
mov
and
add
cmp
or
xchg
test
xchg
andl
fcoml
lret
pop
mov
clc
repz
cmp
cmp
sub
cli
cld
xor
in
fistps
jp
xchg
subl
mov
js
push
mov
mulb
fistpl
push
loop
fcomp
outsb
sbb
cmpb
push
adc
adc
in
sti
or
mov
pop
jp
jl
insb
and
and
mov
or
shrb
xor
jo
test
aad
les
add
rcrb
xor
sub
sub
cmp
ja
push
add
add
dec
xor
sbb
sub
sbb
popl
xchg
dec
pop
add
xor
mov
fcomp
insb
cmp
test
imul
ret
or
mov
inc
loopne
es
jmp
sub
add
pop
jl
add
lea
xchg
andb
add
dec
push
mov
add
cmp
nop
ret
dec
sti
push
add
mov
icebp
jmp
repnz
inc
fldl
sbb
popa
outsl
ja
push
loope
jmp
add
mov
loope
les
push
cld
cmp
jl
add
jp
xor
test
sbb
pop
add
pop
and
cld
scas
stos
lods
orb
and
cs
push
add
dec
push
inc
pop
fwait
dec
mov
aad
bnd
add
test
orl
loopne
test
icebp
aas
cmpsl
clc
sbb
into
ret
repz
pusha
outsl
jl
mov
mov
pop
push
nop
push
scas
loope
outsb
sbb
push
adc
push
pop
xor
pop
push
cmp
or
shlb
inc
push
lahf
add
cmp
mov
cmp
lea
push
pop
dec
push
mov
mov
add
cmpsb
aas
pop
dec
mov
rcrl
push
insb
push
or
xor
push
pop
sub
sbb
jb
jmp
je
aaa
outsb
sbb
sbb
mov
and
mov
add
lcall
mov
inc
cmp
cmc
xor
out
add
lods
clc
aaa
out
add
pop
pusha
mov
inc
lock
pop
push
lea
adc
stos
pop
mov
add
xchg
sub
mov
jmp
push
int3
lret
rorb
into
daa
mov
loopne
and
add
rclb
mov
aad
cs
mov
rclb
mov
ss
add
iret
mull
subb
push
push
push
inc
sbb
pop
sbb
jne
jp
xor
jl
dec
aaa
cmp
push
adc
hlt
xchg
insb
jo
scas
pop
pop
out
shlb
imul
push
and
jb
addr16
js
xchg
mov
jle
test
iret
mov
xchg
popf
aam
mov
xchg
int3
mov
jecxz
cwtl
mov
in
cltd
popl
lcall
cld
jns
add
jmp
add
mov
movsl
scas
psrad
mov
popf
jno
push
jae
and
add
iret
adc
jmp
cmp
fcom
jb
pop
mov
or
enter
aad
jl
jmp
cld
ljmp
repnz
cmp
cmp
or
ljmp
mov
movsb
jmp
rclb
scas
mov
add
mov
ds
add
xor
popf
mov
mov
cmp
cmp
ret
clc
sbb
cmp
sbb
xor
aam
adcb
rcl
ljmp
add
lret
cli
out
pop
iret
js
cmpps
ss
cmp
inc
loope
in
sar
cmp
push
insl
cmp
mov
xor
pop
pop
cmp
xchg
pusha
sar
push
push
pop
add
or
ja
push
add
inc
bound
pop
adc
pop
dec
add
lea
push
inc
stos
add
cmp
mov
das
and
outsl
pop
insl
pusha
mov
jo
push
lcall
loope
out
inc
lods
mov
sbbl
add
in
cmp
pop
in
cmp
fsubs
or
fcmovnb
loope
add
mov
lret
roll
rclb
add
int3
cli
mov
add
cmpsl
fisubrs
mov
mov
pop
mov
lods
call
add
xchg
andb
push
or
lea
add
jp
fwait
les
js
shrl
mov
sub
jnp
lods
push
or
enter
jns
jle
add
dec
inc
inc
call
xchg
push
dec
push
xor
lcall
inc
push
xchg
mov
add
push
xorb
xor
jo
js
mov
cmp
sub
dec
sti
fsubs
ds
add
pop
push
adc
or
push
lahf
pop
pop
mov
popl
jl
push
sbbb
xchg
cmp
or
stc
add
hlt
or
add
jmp
jmp
mov
icebp
idivl
stc
add
ss
add
ljmp
dec
into
sbb
repnz
pop
adc
leave
add
ret
ljmp
int3
shr
push
mov
xor
mov
shrb
add
nopl
xor
and
mov
mov
mov
jge
sub
xor
push
inc
push
lcall
adcb
dec
loopne
loopne
add
add
dec
clc
femms
pop
add
or
dec
adc
or
or
push
add
or
rolb
jg
addl
nop
or
enter
add
pop
adc
pop
js
add
mov
les
test
adcl
mov
adc
movsl
mov
scas
or
arpl
imul
jmp
repnz
add
aas
loop
scas
mov
lret
in
inc
test
loopne
icebp
cmc
add
dec
aad
sub
into
inc
or
sub
add
xchg
inc
dec
pcmpeqb
inc
ds
cmp
dec
sahf
cld
sbb
cwtl
xor
inc
and
cli
inc
fsubl
fadd
enter
fwait
out
icebp
mov
sti
add
cmpsl
mov
popa
jns,pt
ss
les
daa
cmp
dec
clc
cwtl
dec
dec
dec
and
or
loop
mov
mov
cmpsl
ret
loopne
mov
mov
mov
push
cmp
in
sub
mov
pop
jle
les
and
ret
pop
push
call
and
xor
mov
or
insb
adc
xor
push
lahf
add
push
aam
mov
mov
cwtl
enter
jae
fst
pop
adc
aas
pushf
xchg
cmp
in
add
dec
shll
aad
inc
pop
mov
adc
inc
cmp
or
push
outsl
lock
mov
jmp
clc
jne
sarb
mov
pop
bound
push
lahf
mov
inc
lods
dec
rcrb
push
mov
pop
mov
push
jb
or
cwtl
add
fildl
inc
loopne
pop
mov
pop
jge
push
cmc
or
cmpsb
mov
sub
mov
dec
faddl
mov
les
mov
cmp
and
lods
sub
push
stc
dec
nop
rol
mov
cmp
xor
js
push
xor
test
xor
je
nop
in
and
and
adc
hlt
and
inc
icebp
jge
int3
mov
mov
stc
clc
or
cmp
xchg
adc
ror
adcb
enter
cld
inc
call
int3
pop
cmc
lcall
mov
mov
xchg
cltd
cmp
nop
xor
or
push
mov
icebp
clc
push
in
into
sbb
jne
push
push
sub
outsb
in
cmp
lcall
mov
inc
ret
test
leave
addr16
leave
dec
in
pushf
arpl
push
sbb
adc
xor
loop
imul
adc
mov
push
ds
push
dec
sysenter
adc
loopne
sarb
out
lock
sbb
mov
pop
sbb
add
jnp
addl
adc
mov
mov
jge
sbb
sahf
loope
add
outsl
xor
ljmp
or
add
enter
xchg
dec
adc
or
sti
add
leave
scas
xor
je
jo
inc
rcrb
xlat
shl
and
sub
mov
sti
adc
leave
jb
adc
sbb
aam
jne
mov
push
int3
mov
nop
popa
in
pop
dec
push
movb
xchg
mov
rol
nop
push
push
leave
sub
push
aam
pop
dec
into
pop
sbb
jae
xor
add
cltd
dec
sahf
jo
or
xor
orl
add
jle
bswap
inc
add
inc
cltd
mov
sub
enter
pop
lret
enter
or
imul
movsb
jo
ret
cwtl
adc
sub
xor
add
icebp
mov
xor
clc
inc
add
adc
add
xor
cmp
add
clc
aaa
inc
mov
or
dec
test
jb
add
sbb
inc
add
jl
or
jle
mov
stc
push
call
adc
pusha
aad
mov
nop
in
xchg
lret
cwtl
in
jl
and
push
rorb
mov
push
adc
aaa
xor
popf
insb
jg
add
cmpsb
add
push
into
imul
lahf
mov
rcrb
ds
xor
fldcw
add
test
lea
add
clc
pop
adc
mov
push
cltd
and
in
xor
adc
jnp
je
test
xchg
dec
mov
or
push
jno
push
adc
mov
add
frstor
test
sub
test
jl
mov
sbb
inc
je
lock
push
xor
ret
xor
or
pop
pop
movsb
jno
push
or
dec
in
int3
in
mov
lcall
and
or
xor
inc
bnd
mov
mov
arpl
lea
lods
xor
mov
rolb
cmp
adc
add
jg
je
test
lds
push
sbb
dec
dec
push
or
add
mov
xchg
addl
jne
clc
dec
and
push
mov
js
mov
adcl
ja
repz
fistl
jne
jl
bound
add
cmp
incb
add
sbb
mov
mov
clc
scas
cmc
loope
mov
cld
dec
imul
cmp
pop
jbe
add
dec
fadds
mov
mov
or
push
push
leave
call
or
outsb
push
fwait
mov
clc
mov
add
aas
add
shlb
les
lcall
sub
pusha
cmp
xchg
add
std
aaa
add
in
push
icebp
shrb
add
add
inc
mov
dec
repz
and
xchg
dec
pushf
or
movsb
push
or
test
std
mov
xlat
push
stc
add
xor
test
add
mov
or
cmp
sbbb
cmpsb
mov
hlt
mov
sub
roll
dec
sbbb
out
inc
and
cli
in
mov
mov
shlb
loope
or
pusha
sub
or
sub
nop
xor
adc
jp
ds
sub
daa
out
sbb
shl
mov
insb
xor
les
je
ret
aam
mov
cmp
iret
or
jle
icebp
pushf
jne
add
push
xorl
fcompl
mov
js
call
sbb
in
in
sbb
xor
enter
xor
dec
fdivrs
xor
call
lock
and
xor
stos
add
push
enterw
fadds
xor
mov
dec
jge
dec
cmpl
rorb
inc
icebp
sbb
stos
mov
pop
mov
sbbb
js
js
or
mov
pop
clc
loope
jge
xor
bound
ret
std
rol
add
sub
pusha
xchg
sub
test
mov
push
std
jb
dec
sti
mov
add
cmp
imul
clc
dec
andl
or
outsb
and
arpl
push
nop
sbb
or
adc
hlt
dec
add
add
xor
paddq
push
jge
cwtl
mov
and
std
nop
cmpsb
xor
lea
testl
in
adc
xchg
test
test
mov
add
test
mov
cmpsl
add
repnz
add
mov
jae
push
or
and
jmp
dec
sub
test
outsl
psllw
sub
int
fs
pop
mov
movsb
mov
and
jnp
xor
sbb
mov
pop
jne
enter
xchg
add
int
pushf
loope
adc
jle
imul
mov
xor
shl
xchg
mov
push
push
cwtl
inc
hlt
lret
pop
mov
add
cmp
dec
outsl
jle
aas
sub
and
in
mov
mov
or
pop
jne
cs
jle
std
mov
sub
lock
push
fadds
or
pop
call
xor
loopne
test
inc
mov
aas
call
lods
jmp
divb
jg
mov
or
sub
insl
or
cld
subb
mov
push
int3
or
adc
mov
add
fstpt
cld
push
inc
aam
push
popa
or
mov
in
pop
add
add
or
push
push
add
dec
lea
call
cmpsl
clc
dec
xor
dec
lcall
push
add
aas
cld
decb
or
and
fdivs
sbb
hlt
mov
mov
adc
sbb
int3
rcll
mov
mov
sbb
out
mov
shrb
lret
call
mov
xchg
mov
dec
fs
andb
sbb
cld
pop
xchg
push
mov
call
imul
adc
cmp
mov
xor
xor
cld
xor
and
sbb
xor
xchg
sbb
pop
mov
leave
ret
adcb
repnz
mov
mov
push
push
pop
push
call
mov
or
outsl
pop
mov
pop
cmp
push
push
adc
xor
adc
clc
push
and
adc
and
adc
fs
push
pop
in
push
dec
or
jo
aam
dec
adc
sbbl
push
lods
push
movsl
push
pusha
mov
pop
mov
mov
xor
cmp
outsl
and
arpl
push
pop
inc
aam
or
popf
sub
imul
test
push
loop
cwtl
or
test
xor
sbb
add
andb
in
or
xor
adc
and
loope
cld
daa
push
test
adc
in
sub
inc
lock
push
xchg
pop
addb
shl
nop
cli
cld
push
scas
add
add
test
int
and
and
and
push
jge
add
sti
xchg
jne
adc
call
add
mov
adc
or
or
pop
and
jmp
rorl
shr
push
mov
cmpsb
mov
xor
add
je
loope
xchg
push
fsubs
nop
ret
mov
push
push
call
fyl2x
fwait
mov
insl
add
push
dec
mov
call
cmp
repnz
add
decb
adc
ret
insb
movsl
daa
out
sub
dec
pusha
or
dec
les
js
subl
lea
cli
sahf
push
mov
clc
mov
pop
xor
scas
dec
xchg
or
fisttpll
test
adc
pop
add
inc
or
cmp
inc
or
sub
xorl
lea
addl
scas
dec
orb
cld
sub
icebp
imul
loop
pop
lods
jo
add
pop
pop
cmp
or
aam
cmc
enter
push
call
jl
mov
xor
sub
jmp
sti
push
push
pop
ds
mov
sub
dec
pop
pop
js
outsl
add
mov
add
xor
sub
icebp
inc
push
pusha
rolb
mov
mov
sbb
rcl
push
hlt
add
cltd
dec
push
aaa
pop
mov
or
movsb
dec
inc
xor
or
mov
dec
pop
mov
mov
cli
add
xor
dec
jle
imul
testl
adc
xor
cwtl
mov
xor
push
inc
add
jne
mov
pop
loopne
popa
add
or
or
push
out
lds
cmp
xor
add
leave
ret
imul
setne
xchg
push
mov
fwait
popa
subb
outsl
popa
aam
repz
mov
enter
adc
dec
sub
add
dec
xchg
test
xor
mov
xor
jns
or
push
jecxz
or
stc
loopne
adc
cli
int3
cld
and
mov
lea
test
ficomps
dec
dec
int3
xchg
push
inc
dec
popa
adc
mov
dec
cmp
or
add
call
je
inc
out
add
outsb
pop
mov
xor
nop
adc
mov
adc
mov
jnp
insb
add
add
add
mov
xchg
or
rol
inc
xchg
jne
sub
xor
adc
lock
cli
rcr
inc
add
loopne
stos
mov
pusha
aam
inc
mov
sahf
in
int3
jl
int3
loope
rcrl
cmp
push
jge
jbe
test
xchg
fdivs
shrl
shlb
and
add
psrad
inc
mov
mov
sbbl
xchg
or
add
pusha
mov
scas
andb
mov
and
xorl
cli
jae
in
inc
xor
and
jno
call
sub
ret
mov
and
addl
push
mov
or
add
fdivs
test
imul
add
push
inc
sbb
and
jle
adc
aam
or
push
or
cmp
dec
jl
xor
cmp
or
lock
filds
insl
push
add
dec
call
in
push
leave
es
xchg
and
sbb
or
and
je
mov
xchg
subb
js
push
aam
call
pop
movsb
or
xchg
inc
pop
pop
fs
or
orb
je
mov
push
test
cld
nop
fs
je
fsubs
ret
jge
mov
sbb
sub
adc
dec
icebp
lods
je
xlat
movsl
cwtl
je
mov
out
xchg
or
xor
mov
out
push
add
push
pushf
loope
inc
mov
pushf
loopne
imul
mov
loopne
sti
sti
ret
xchg
add
mov
popa
les
sub
cmp
and
cwtl
mov
jecxz
sbb
loope
cltd
pop
xor
xchg
or
dec
call
insb
sbb
and
sbb
mov
pusha
movq
mov
enter
jecxz
or
sarl
xchg
sub
mov
mov
xor
lock
addr16
push
jo
mov
jmp
xor
push
lahf
jo
mov
mov
inc
jg
push
les
mov
sub
cld
dec
les
pop
cmp
xchg
int3
add
pop
dec
rorb
cltd
arpl
adc
sbb
or
push
repnz
enter
push
cmp
mov
nop
test
ret
js
and
loopne,pn
and
rclb
ds
add
les
enter
jmp
jae
mov
cld
andl
enter
dec
stc
out
and
add
and
cmp
jg
dec
rorb
mov
in
mov
add
adc
xchg
and
ret
pop
push
daa
test
jl
and
or
mov
and
mov
and
stc
and
sti
data16
sbb
push
mov
fadds
or
adc
add
push
subb
dec
insl
or
xchg
or
sbb
inc
lock
test
jne
bound
adc
adc
cmp
jg
pop
loope
cmp
sub
rorl
sbb
inc
pusha
push
cmp
add
add
pop
sbb
add
push
test
jno
and
shll
cmp
insb
mov
lret
inc
and
aam
sub
mov
ret
call
sbb
inc
push
and
push
adc
sbb
pop
stc
xor
insl
sbb
das
push
cwtl
mov
and
inc
sbb
cmp
call
sarb
add
push
adcl
sbb
cmpsl
lds
mov
mov
pop
and
add
idiv
add
push
add
or
mov
and
or
xor
cmp
or
or
adc
xor
mov
cmp
or
and
mov
aaa
lret
test
dec
adc
jo
call
cmc
dec
inc
or
or
adc
sbb
nop
js
add
cmp
jae
pop
dec
clc
adc
and
sti
insb
or
testb
hlt
je
ret
sub
add
mov
mov
xor
push
fdivrl
add
shlb
addb
insb
sub
cli
call
sbb
xchg
inc
testl
movsb
jle
adc
stos
in
enter
test
adc
js
push
clc
in
inc
xlat
jp
add
jne
adc
outsb
or
add
ljmp
push
mov
ret
inc
sti
je
push
xor
mov
rcl
push
xor
fs
lock
cmp
pop
or
xlat
loopne
bound
jmp
adc
icebp
js
dec
daa
dec
loopne
inc
or
and
dec
push
mov
xor
add
sbb
push
push
xchg
dec
xchg
inc
lock
int
and
push
aam
call
inc
jns
int3
push
adc
jmp
pop
sbb
jae
sbb
sbb
pop
cli
movsl
rcrb
xor
int
pop
sbb
xor
aam
scas
fs
js
addb
sub
mov
dec
lea
xor
imul
xchg
or
or
pop
or
inc
mov
sub
dec
mul
push
mov
aam
sub
daa
js
dec
adc
nop
inc
cwtl
dec
daa
mov
inc
in
push
imul
dec
das
test
movsb
sbb
dec
movsb
shlb
xchg
shrb
pop
push
dec
outsb
and
test
jns
or
mov
push
loope
mov
mov
or
call
adc
mov
push
push
push
jl
pusha
xor
xor
jl
call
xor
add
and
mov
inc
adc
inc
jnp
aam
enter
xorb
inc
int3
js
push
add
lds
cltd
add
enter
ret
push
xor
cmp
into
je
pop
cmpl
sbb
sub
cmovae
daa
inc
pusha
lock
int3
repnz
outsb
mov
aad
fsts
dec
inc
hlt
in
pop
or
jmp
dec
clc
jl
and
je
lahf
loope
js
add
xor
jbe
cmpb
xchg
jno
jo
xchg
insb
rolb
and
sbb
add
ljmp
pop
call
or
je
les
push
mov
sarb
leave
pop
push
dec
mov
sub
fildl
jne
or
hlt
add
dec
mov
sbb
or
push
into
in
mov
call
lods
jae
pushf
xchg
xor
pop
clc
lock
add
push
ljmp
push
xor
pushf
loope
dec
mov
fdivl
movzbl
mov
push
push
add
fs
inc
outsl
push
dec
lcall
in
add
setns
mov
mov
adc
fdiv
lock
orl
pushf
xor
push
cmpb
add
xchg
add
mov
dec
adcl
test
and
xor
mov
call
xor
cwtl
test
pop
mov
movsb
dec
push
fadds
or
lea
jmp
cmp
les
push
outsb
sbb
or
pop
push
adc
enter
rorl
rorb
lods
adc
mov
inc
xchg
fdivs
incl
insb
add
mov
push
push
rcrl
call
dec
push
loopne
test
push
mov
repnz
pop
pushf
or
or
mov
stc
addr16
je
xchg
jo
jl
jl
sub
push
shrb
mov
fidivrs
orb
in
or
js
xor
mov
inc
jmp
or
das
daa
xor
mov
clc
adc
jmp
rorl
and
or
mov
js
adc
add
loope
push
dec
push
mov
adc
mov
js
mov
and
sub
cli
sbbb
scas
nop
pop
out
jae
and
adc
inc
sub
mov
aad
scas
inc
inc
test
adc
add
lock
mov
jmp
test
ja
sbb
shlb
mov
or
mov
sbb
ds
icebp
adc
shl
loope
dec
xchg
rol
lods
or
aam
lahf
andb
cmpb
cmp
add
mov
jp
xchg
xor
add
pop
invlpg
mov
xchg
dec
inc
or
test
xor
add
xor
clc
mov
pusha
xchg
lock
nop
xor
fnstcw
call
fnstsw
add
cmp
sbb
aaa
pop
or
das
cmp
xchg
jo,pn
movntps
or
xor
dec
or
inc
out
mov
adc
sbb
insl
add
dec
mov
sub
mov
cmp
aas
add
cmp
push
rolb
xchg
mov
pusha
push
jo
dec
ss
sbb
subb
lods
lea
adcb
xchg
push
dec
add
inc
cli
adc
xadd
adc
adc
xchg
std
sub
cmp
mov
xchg
dec
cmp
xorb
add
sbb
dec
fcmovnbe
add
test
imul
pop
or
push
out
sbbb
sbbb
xor
mov
jae
ret
cltd
add
or
jecxz
lahf
fistps
ficoml
jbe
add
sbb
xlat
add
out
sub
adcl
inc
cmp
mov
sbb
adcl
adc
cld
movaps
leave
xor
outsl
addl
fidivrl
sbb
out
sbb
js
push
test
lds
bound
dec
cli
or
loopne
add
lcall
je
jle
push
imul
and
jns
inc
or
lret
in
stc
imul
mov
inc
xor
cli
jo
andb
or
push
mov
clc
push
pop
flds
fdivrl
shl
mov
or
and
pushf
aam
cli
adc
push
inc
sbb
and
lcall
rorb
movsb
addl
aas
les
push
dec
mov
js
or
inc
jae
les
xchg
lock
lahf
inc
adc
inc
js
pop
sub
sbbl
dec
push
push
ss
inc
jp
xor
or
dec
mov
leave
push
nop
adc
je
mov
inc
lsl
or
popa
push
jne
pop
inc
dec
xor
ss
leave
leave
orl
cmp
lock
data16
cwtl
push
hlt
xchg
xlat
flds
sbb
mov
push
lock
popf
add
out
push
sarl
sub
push
xchg
mov
into
inc
data16
lock
or
call
or
sub
mov
mov
pop
fsubrs
add
push
rorb
loop
pop
push
shlb
sub
xor
push
cmp
sbb
adc
sbb
cmp
adc
and
je
lret
cltd
pushf
pop
cs
lret
or
push
nop
sub
adc
sub
dec
sbb
push
cmp
inc
mov
unpckhps
sbb
bound
dec
sbb
mov
cmpsl
hlt
push
inc
xor
add
inc
loopne
pop
cltd
jnp
sarb
push
addl
cmp
or
xchg
mov
lea
movsb
jno
xchg
mov
cltd
pop
xorb
xchg
faddl
xchg
lret
in
xor
push
inc
xchg
popf
mov
and
sbbl
sub
popa
dec
push
clc
sbb
inc
je
fcomp
sbb
loopne
notl
fs
sub
mov
and
xchg
adc
adcb
or
jo
add
xchg
sbb
andl
dec
fwait
xor
pusha
and
cltd
sub
ja
or
repz
cmp
adcl
mov
cmp
or
push
pop
mov
sub
mull
or
push
cmp
and
add
out
ret
adc
lds
add
lret
inc
or
xchg
mov
pop
pop
lock
arpl
dec
xchg
in
and
andl
cmpsb
cmpl
call
add
fwait
lock
adc
push
dec
sub
les
jbe
lret
dec
adc
mov
fstl
loope
in
and
mov
push
xor
popf
cltd
xor
movl
lods
jo
xorb
lea
push
dec
movl
inc
mov
stc
xchg
pop
mov
lods
dec
lea
jne
push
nop
cmp
xor
pusha
mov
movb
outsl
addl
mov
movsb
or
push
rorb
lea
js
mov
and
push
js
xor
inc
std
mov
inc
dec
and
fcmovnbe
push
mov
add
lea
mov
shl
cmp
and
adc
call
and
lock
or
roll
clc
or
and
or
fs
adc
lret
mov
add
xchg
nop
clc
pushw
test
xor
pop
jne
mov
pop
stc
sub
pop
jl
inc
and
es
adc
cmp
int
rclb
jge
add
loope
pusha
and
cltd
dec
decl
movsl
movsb
jnp
pusha
jo
inc
clc
push
call
fdivl
mov
cmp
ror
je
in
int3
adc
clc
cmp
xchg
pop
mov
mov
mov
push
inc
clc
jle
sti
mov
mov
imul
push
aad
sbb
xor
pop
pusha
vmread
dec
add
test
pop
jnp
mov
xchg
mov
clc
or
xor
or
test
add
push
push
rclb
call
or
in
pop
push
cmp
jle
dec
cmpsb
cmp
sub
jg
icebp
rorb
cmp
fs
jge
push
call
add
aam
hlt
fsubl
popf
je
dec
lock
pop
loope
sub
lea
mov
in
add
add
or
movsb
inc
xor
push
adc
xchg
inc
stc
lea
inc
dec
lahf
loop
and
and
cmc
dec
mov
cwtl
test
push
mov
lock
insb
pop
inc
cwtl
mov
jnp
jmp
enter
dec
push
or
cmpb
nop
test
test
lahf
and
push
mov
push
loope
les
cmpb
insb
scas
orb
xor
mov
je
call
dec
push
jl
mov
push
stos
and
je
call
jo
adc
out
xor
and
add
push
mov
insb
add
dec
mov
mov
pushf
dec
mov
call
and
jo
dec
push
mov
sub
in
cwtl
dec
add
mov
sub
cwtl
mov
leave
inc
hlt
hlt
push
shlb
adc
xchg
adc
pop
in
pop
enter
dec
mov
or
sbb
pop
push
int3
adc
xchg
test
mov
mov
add
insl
test
rcr
mov
les
movsb
xchg
push
mov
xor
loope
sub
pop
push
leave
dec
das
inc
mov
js
popf
push
mov
pushf
dec
push
xchg
mov
and
add
loope
call
cld
aas
jmp
repz
rcrb
push
jo
adc
xor
sub
nop
je
mov
xor
ljmp
mov
mov
les
mov
in
mov
dec
mov
pop
cltd
mov
jmp
test
mov
add
test
clc
jo
or
inc
xor
mov
push
push
or
out
fs
push
sub
js
arpl
add
pop
sbb
adc
loop
mov
test
call
push
push
outsb
pushf
mov
es
add
sbb
cli
and
mov
push
jne
mov
dec
cld
test
stc
add
inc
xchg
test
inc
xor
mov
cmp
pushf
add
jp
rsqrtps
cmp
outsb
xlat
xor
or
mov
rcrb
mov
xchg
sbb
jns
popa
push
and
imul
das
ror
mov
aam
ljmp
xor
xor
sub
outsl
push
jl
add
mov
hlt
cmp
mov
ds
cmp
adc
jge
mov
and
mov
dec
xchg
mov
lahf
jg
fs
je
test
pop
cmpsl
pop
dec
in
roll
inc
jns
push
nop
or
rcrb
push
cmp
add
mov
dec
xchg
aam
pusha
sub
shlb
pop
and
add
call
adc
sub
add
pop
call
or
shlb
cmp
mov
loop
stos
cwtl
es
inc
mov
mov
or
xor
inc
mov
adc
or
push
js
call
or
adc
loop
rorb
dec
enter
add
or
cld
fmul
data16
push
adc
add
cmp
dec
pop
jbe
sbb
and
lret
inc
in
mov
push
loope
imul
pop
arpl
lea
mov
enter
sbb
sti
push
add
lret
sbb
jl
pop
add
or
fsubs
aas
dec
add
adc
rcrb
pusha
jne
out
mov
or
test
divl
add
insl
add
adc
mov
sahf
add
into
mov
inc
inc
add
or
movsb
add
orb
pop
xchg
test
jge
dec
inc
inc
das
add
add
adc
mov
gs
jp
enter
xchg
pushf
or
test
mov
dec
enter
xor
cltd
popa
or
mov
cmp
add
sbb
cld
out
fadds
lds
push
aam
pushf
inc
adc
hlt
inc
sub
adc
sbb
jge
push
pop
insl
adc
and
call
add
add
inc
pop
dec
mov
lock
mov
test
sbb
pushf
and
mov
xor
js
pop
roll
or
xchg
cli
mov
xor
jl
bswap
popa
and
out
mov
cmpl
mov
dec
mov
cs
push
adc
inc
jmp
inc
insl
int3
adcl
sbb
inc
and
inc
cs
mov
jmp
ror
test
dec
and
psubd
aam
shll
movsl
add
in
leave
inc
adc
cmp
push
rclb
cltd
dec
lea
pop
jge
adc
pop
push
clc
pusha
jl
int
fs
outsl
xor
xor
dec
inc
call
push
adc
bound
xor
sarb
jle
arpl
lea
pop
insb
adc
test
push
leave
dec
sbb
hlt
popa
sub
xor
or
or
jl
push
or
push
mov
pop
rolb
clc
inc
add
pop
sbb
push
dec
mov
fsubp
jb
and
dec
pop
push
lock
test
dec
mov
add
sbb
mov
dec
push
mov
or
mov
adc
or
or
sbb
enter
mov
cwtl
mov
add
xchg
or
and
mov
jl
subb
jo
and
cwtl
loopne
andb
push
inc
or
bound
sbb
mov
mov
and
mov
pop
and
inc
xor
pusha
test
outsl
mov
xor
sub
rcll
test
addr16
iret
mov
lock
outsl
lds
arpl
lods
adc
push
hlt
xchg
je
call
push
int3
testl
mov
loopne
push
or
mov
imul
adc
push
mov
pop
and
or
or
ret
pop
or
arpl
push
test
cmp
mov
fs
mov
xor
cmp
push
sbb
call
or
jnp
or
inc
push
rep
mov
or
decb
push
mov
xor
mov
push
push
test
js
push
mov
sbb
shrb
pop
mov
add
test
mov
pop
inc
adc
xor
clc
inc
cli
lahf
rcrb
popa
adc
in
or
mov
stc
mov
imul
adc
dec
jns
pop
sbbl
xor
dec
roll
sahf
adcb
mov
nop
inc
and
or
test
xor
jl
sub
xor
add
xor
out
xchg
adc
int
pop
jp
cmp
jbe
mov
pop
pop
mov
imull
mov
push
push
sbb
cmp
loop
fmull
in
add
lods
mov
push
push
xor
sbb
mov
mov
cmp
shr
add
mov
pusha
rcll
cmp
ret
pushf
mov
shrl
shlb
jmp
lock
push
jl
lahf
adc
jo
push
add
adc
or
lahf
sbb
jb
push
je
cld
add
imul
jb
cmp
sbb
push
sub
int3
inc
in
mov
ds
push
lods
add
faddl
arpl
pop
inc
mov
les
xor
or
jl
imul
adc
test
jl
imul
into
nop
lcall
iret
jns
jnp
dec
fs
push
mov
mov
cld
pop
rcl
adc
xchg
mov
inc
loop
jo
cmp
xchg
fmull
pop
inc
xor
inc
push
jne
mov
sub
mov
mov
popa
rcl
jbe
and
movsb
pop
or
int3
mov
mov
loop
pop
sub
cmp
test
dec
push
scas
adc
sbb
add
jo
popa
addr16
mov
xchg
dec
push
test
push
push
in
add
or
or
dec
push
xor
or
dec
ret
movsb
inc
pop
testb
jl
je
test
adc
loope
mov
push
in
cltd
xchg
sbb
cld
hlt
dec
mov
sahf
jl
jno
xor
jl
mov
dec
cmp
cmpb
inc
or
jle
dec
in
mov
mov
cld
sbb
inc
sub
sub
pop
jnp
pop
jbe
and
test
sub
xchg
loope
xor
shlb
and
arpl
xchg
imul
arpl
pop
call
add
adc
mov
test
pop
nop
lds
or
pop
test
adc
and
sub
in
sar
and
inc
push
push
in
mov
loopne
inc
negb
dec
xchg
xchg
sub
jl
and
adc
clc
jne
test
inc
call
inc
sbb
inc
popa
adc
pop
dec
or
jne
aam
add
clc
dec
call
nop
jl
add
cltd
cwtl
inc
cli
je
adc
or
cltd
enter
xor
dec
or
push
repnz
mov
sbb
jns
mov
stos
mov
mov
lock
mov
rorb
add
inc
add
xorb
dec
inc
cld
and
or
das
pop
cmp
xchg
js
es
pushf
and
push
js
push
ret
cmp
xlat
adc
mov
bound
inc
js
je
inc
cmc
fisubs
jns
lods
and
les
or
mov
rcrl
mov
or
enter
pop
push
fwait
mov
and
add
mov
and
xor
inc
xor
rep
sub
or
inc
and
shlb
sbb
adcl
inc
xchg
or
out
inc
sarl
mov
mov
inc
and
cmp
movsl
and
arpl
dec
inc
hlt
rclb
mov
cld
cmp
pop
adcb
test
ret
add
cmp
cmpb
sbb
mov
push
cs
mov
imul
clc
lock
cmpsb
pop
test
push
xchg
lods
push
call
adc
cltd
popa
pop
mov
add
loope
sub
pop
js
adc
add
and
inc
call
adc
adc
clc
pop
loop
adc
addb
test
lcall
dec
adc
and
test
mov
add
add
adc
xor
sbb
sub
inc
aaa
repnz
push
in
mov
test
dec
cmp
cmp
add
dec
repnz
inc
repz
mov
dec
cmc
jns
or
dec
movsb
js
jp
mov
dec
push
nop
in
push
push
xchg
cld
mov
adc
cmpsl
icebp
mov
pushf
and
test
xor
pop
or
adc
test
insb
lock
test
adc
ret
push
dec
mov
dec
icebp
mov
dec
and
dec
fwait
push
ds
dec
loopne
mov
arpl
pusha
or
add
lea
jae
cwtl
enter
inc
sub
call
or
jmp
and
arpl
dec
adc
xor
add
call
arpl
cmpl
sbb
inc
adc
xor
cmp
add
adc
or
call
or
mov
push
popa
and
and
xchg
and
pop
cmp
push
mov
xchg
cmp
cmp
cmp
jbe
xorb
scas
or
rol
push
add
inc
cwtl
sti
jno
lret
andb
mov
pop
andl
sbb
lea
adcb
enter
push
dec
jo
sbb
loope
dec
pop
xchg
fsubl
pop
test
lret
inc
and
mov
lcall
std
mov
xchg
and
pop
and
popa
test
sbbl
test
and
push
sub
push
hlt
or
adc
xor
adc
movsb
cmp
add
int3
adc
sub
push
sbb
mov
int3
outsl
mov
push
inc
dec
jns
les
push
ret
shrl
and
mov
add
mov
xor
es
mov
popa
push
cmp
lret
xorl
lahf
fs
xor
push
lahf
adc
je
and
sbb
mov
movsl
inc
nop
dec
divb
les
pop
and
push
sub
mov
inc
xchg
daa
ret
mov
or
clc
icebp
push
daa
lea
mov
dec
sbb
sahf
jl
mov
mov
inc
jbe
add
xchg
in
sbb
mov
cmp
pop
add
pop
ljmp
aam
sub
lahf
or
and
bound
popa
movsb
inc
adc
xchg
nop
and
push
arpl
fsts
mov
sbb
pop
mov
rolb
xchg
or
fadds
mov
fbstp
pop
or
pop
inc
rorb
pop
add
or
orb
mov
and
or
sbb
repnz
dec
lds
mov
inc
jg
pop
dec
shlb
fs
mov
push
ret
cmp
adc
idivb
xor
clc
in
mov
and
pop
or
pop
les
or
dec
aas
lock
movsb
test
into
shrl
loop
int
jg
sar
test
jecxz
dec
rcrb
fcomps
pop
orb
es
xor
ja
inc
cld
rclb
fdivr
mov
cwtl
call
mov
xchg
mov
adc
xchg
lcall
fsub
les
or
sbb
jne
adc
sar
loope
xchg
adc
add
mov
ds
xor
pusha
sbb
xor
nop
push
inc
mov
fs
roll
mov
adc
and
inc
pop
lock
cld
add
mov
test
lock
pop
adc
and
inc
inc
xor
fdivs
or
jge
nop
mov
mov
call
add
fnsave
mov
lret
jne
jo
jp
push
mov
xchg
out
pop
sub
jl
pop
loop
cltd
int3
jmp
xor
iret
xor
push
jbe
pusha
jmp
testl
cltd
rolb
push
mov
dec
pop
test
or
test
pop
inc
add
repz
mov
out
nop
adc
jmp
xchg
inc
rorb
mov
xchg
adc
xor
pop
jno
orb
mov
and
pop
cld
dec
or
cmp
mov
pop
jle
scas
loopne
xor
pop
je
cmp
jmp
and
sub
sub
fs
clc
push
cwtl
cmp
fnsave
jo
loopne
cs
or
mov
dec
pop
mov
sbb
in
add
adc
xchg
pusha
and
dec
push
jmp
inc
adc
add
rol
pop
mov
adc
xor
addb
sbb
or
sbb
and
adc
jbe
mov
insb
es
mov
add
stc
je
adc
loope
cld
push
jp
adc
dec
and
cmc
mov
shll
mov
fcoms
addr16
and
mov
inc
lock
arpl
rcrl
or
mov
insb
inc
adc
dec
popf
cmp
xchg
adc
jns
xorl
adc
xchg
lock
cmp
loope
and
test
adc
movb
jae
outsl
subb
std
out
push
xor
popf
cltd
mov
xor
inc
or
mov
inc
mov
test
mov
inc
jae
adc
push
roll
sarl
and
inc
cwtl
xor
push
jge
sarb
mov
aaa
dec
cmp
inc
call
dec
adc
xor
pusha
cmp
inc
adc
addb
adc
pop
jmp
cmp
leave
idiv
iret
call
xlat
jbe
inc
shlb
mov
in
stos
sub
ffree
rorl
xor
add
or
and
cmc
cmp
outsb
add
add
jg
je
in
mov
xchg
fimuls
div
dec
nopl
ret
fstpl
and
push
add
cld
lea
cli
dec
add
gs
sub
pop
sub
popa
lods
test
fdivl
mov
ficomps
or
push
pop
rclb
int
cwtl
xchg
pusha
push
push
cli
and
call
cli
inc
dec
mov
ret
jo
out
cwtl
push
xor
dec
ret
xchg
gs
or
mov
pop
dec
push
mov
cmpb
add
sbb
and
inc
popa
mov
jo
mov
sbb
adc
adc
sbb
mov
sbb
shl
or
lds
jge
adc
mov
clc
xor
sbb
in
clc
or
jns
dec
adc
jns
dec
inc
repnz
adc
dec
adc
addb
push
aam
and
push
adc
jl
mov
call
jl
pop
loopne
fcoms
adc
es
add
mov
addl
push
test
add
mov
mov
push
mov
inc
lahf
leave
div
pusha
inc
cmp
xchg
loopne
sub
pop
rolb
xor
cmc
insb
mov
ja
mov
dec
imul
orl
push
pop
mov
rep
jne
pop
push
sar
loopne
pop
cmp
xor
std
cmp
mov
sub
add
push
mov
jns
inc
dec
test
add
mov
mov
adc
add
call
sub
in
cwtl
and
fwait
push
dec
dec
test
add
test
pop
jnp
push
dec
leave
sbbl
jle
cmpb
inc
jo
dec
sahf
and
pop
sbb
or
xchg
inc
sbb
push
inc
cltd
adc
pushf
loop
add
pop
push
or
sub
cld
je
lret
add
call
xor
and
cmp
xchg
push
add
fs
and
add
adc
orl
xorb
add
stos
dec
add
mov
lahf
add
jnp
andb
cwtl
int
sar
add
pushl
push
add
mov
mov
shl
shlb
lock
pop
push
xorb
ljmp
sub
xchg
loop
xchg
cmpb
add
ret
notb
aas
add
gs
mov
jnp
jle
nop
mov
jmp
dec
mov
push
mov
pop
mov
push
add
mov
dec
push
and
xchg
fdivs
sub
js
lret
adc
hlt
and
and
subl
les
xchg
dec
test
dec
or
loop
inc
jae
cmp
xor
insb
nop
xchg
adc
jp
mov
int
dec
pusha
sub
mov
mov
cmp
inc
in
jb
cltd
add
ret
test
daa
and
loope
mov
add
in
mov
pop
out
cld
add
mov
mov
mov
xor
mov
mov
add
mov
pusha
xchg
nop
cli
flds
mulb
mov
stos
xchg
mov
xchg
push
cmc
sbb
test
mov
and
mov
mov
mov
in
mov
inc
and
mov
leave
xor
add
push
shl
pop
adc
cmpsl
adc
and
xchg
xor
xor
fdivr
sbb
cli
sahf
cmp
add
mov
add
mov
mov
mov
adc
fsubs
test
mov
insb
jns
and
or
sbb
add
shrl
sub
fildl
ret
sbb
or
leave
sbb
in
push
xchg
fiaddl
imul
mov
mov
add
and
loop
xor
xchg
sub
fistpll
in
nop
xchg
ljmp
sbb
xchg
out
aas
stos
addr16
fdivrs
xchg
dec
repnz
mov
jg
out
mov
jns
and
and
push
sbb
idivl
dec
inc
mov
popl
hlt
pusha
pushl
or
or
add
mov
sbb
mov
jns
and
lahf
adcb
xchg
cmpsl
sbb
and
lds
sbb
imul
push
mov
pop
adc
adc
dec
imul
xchg
sbb
xor
add
test
cmp
nop
jmp
cmp
jb
cmp
mov
push
push
mov
mov
dec
jle
fwait
xor
dec
add
inc
xor
mov
push
or
adc
cmp
nop
jmp
rcll
lock
adc
mov
xacquire
pop
adc
push
rol
movsl
mov
hlt
xor
cmp
or
and
in
pusha
pusha
add
add
hlt
xor
fdiv
or
mov
inc
add
and
mov
stos
pop
mov
cli
inc
inc
sub
xacquire
push
dec
ja
cmp
add
mov
xor
insb
add
adc
adc
mov
ds
xor
loop
or
in
mov
mov
xchg
das
hlt
mov
dec
cmp
inc
fsubrl
xchg
lret
xor
and
push
add
lock
add
dec
xchg
inc
sbb
aad
loop
mov
add
sub
or
sbb
push
mov
sbb
or
pcmpeqd
pop
addb
outsl
sarb
int3
mov
andl
arpl
or
pop
aam
add
std
dec
mov
loope
adc
and
mov
pusha
loopne
insl
and
jnp
in
cmp
rclb
xchg
cmpsl
and
outsl
int3
sub
aas
rclb
jp
pop
push
shll
std
pop
outsb
nop
sbb
xor
add
test
mov
clc
cmp
jge
ljmp
dec
jo
pop
add
jecxz
stos
add
or
test
hlt
add
imul
mov
call
mov
pop
mov
cmp
xchg
daa
imul
mov
clc
aam
add
cmp
xchg
fnsave
inc
fsubr
and
lock
arpl
test
outsl
lea
jne
push
call
mov
popf
add
dec
loopne
cld
cli
push
jl
mov
add
add
ja
call
enter
add
call
shrl
js
je
movsl
sub
sbb
call
jmp
testl
add
mov
pop
or
or
adc
add
jg
inc
jne
jg
jne
jle
pop
stc
and
mov
push
xor
fildl
clc
dec
clc
sub
scas
in
pusha
fdivs
push
push
nop
mov
loopne
push
inc
pop
in
test
lods
dec
add
add
or
push
ds
mov
aam
cmp
mov
dec
shr
push
adc
cs
inc
sbb
cmp
push
fisttpl
test
mov
jmp
jl
ret
mov
ds
mov
pop
cmp
push
hlt
dec
add
pop
movsb
test
inc
and
add
xchg
hlt
add
xor
rcrl
subb
fdivl
push
out
cmp
jp
mov
repz
jne
faddl
dec
mov
add
addl
sbb
adcl
cmpl
push
sub
bound
xor
je
in
nop
fcompl
mov
jns
mov
cmp
push
mov
inc
cli
push
daa
mov
js
and
or
cmpsl
lods
push
pop
add
clc
das
pop
mov
cli
jne
push
mov
test
sbb
inc
orb
repz
cmp
in
add
and
sub
test
mov
mov
fstpt
and
out
and
and
popf
dec
mov
jnp
lock
add
int3
ss
or
das
and
int3
ljmp
or
push
pop
push
push
sbb
fimull
mov
sub
je
cmpsl
subl
sub
sub
inc
add
jle
rcll
dec
mov
xchg
and
or
dec
in
push
cmp
dec
xchg
jb
jge
lods
int3
mov
push
addl
push
mov
sub
push
lahf
popa
cmp
push
xor
pop
or
push
mov
addr16
pop
sub
je
test
je
pop
repz
das
adc
mov
mov
add
push
pushl
call
sub
inc
adc
mov
into
dec
adc
mov
shrb
lods
movsb
adc
imul
push
mov
sub
fdivr
jle
fs
outsb
lds
nop
lcall
fistpl
cmp
or
lods
cwtl
add
test
add
fiaddl
xchg
and
aam
push
pushf
js
xor
dec
push
jns
pop
mov
sahf
add
xchg
or
lods
imul
inc
loopne
in
push
push
scas
gs
loopne
dec
cmpsl
cmpl
test
jo
fsubr
dec
add
mov
cmpsl
jp
je
ret
mov
jne
mov
nop
lods
mov
dec
in
cmp
inc
dec
and
test
mov
mov
and
and
test
sbb
xchg
jb
and
cmpsb
popa
aad
xor
xor
push
cmp
pusha
inc
ret
cmp
add
lcall
xchg
js
adc
mov
add
lods
sbb
subl
or
pop
nop
int3
pop
icebp
cmpb
jne
aam
in
dec
leave
add
or
incl
and
and
jne
dec
mov
andb
out
sti
inc
push
pusha
mov
lahf
adc
dec
jo
into
push
mov
test
and
addl
scas
mov
inc
mov
rcll
xor
cmp
addl
mull
add
je
mov
enter
cmp
fmuls
into
mov
xor
xchg
imul
mov
gs
leave
test
sbb
movsl
clc
addb
dec
paddb
popf
nop
int3
jge
loope
imul
call
icebp
leave
add
inc
jbe
xchg
jl
pusha
pusha
sub
xchg
cwtl
sar
icebp
ds
sub
sub
lock
cmp
and
pop
cmp
add
dec
in
loop
cmpsl
or
dec
sarl
mov
je
cmp
jbe
add
outsb
or
inc
into
add
dec
in
addl
pop
shlb
subb
ljmp
repz
add
pop
add
lods
rorb
mov
xchg
cs
rorb
mov
test
les
dec
pop
lea
mov
cmovns
add
addb
ja
pop
cmp
subl
mov
test
into
lds
mov
test
xchg
pusha
push
data16
add
add
leave
mov
and
mov
and
sub
inc
shrb
jl
or
lock
call
sbb
aam
mov
int3
or
mov
inc
inc
push
pop
pop
ret
push
arpl
cwtl
inc
in
loope
jae
aam
scas
inc
in
add
movsb
pushf
dec
jae
movsb
leave
orl
xchg
mov
jo
outsb
pushf
cwtl
sarb
dec
add
enter
rorb
hlt
cmp
or
mov
mov
pop
ret
ret
and
dec
dec
push
add
repz
in
mov
shl
xor
bound
loopne
dec
les
das
pop
in
mov
add
mov
mov
loop
dec
aam
mov
adc
in
sub
mov
pop
adcl
mov
jbe
add
aas
rcll
push
and
enter
mov
add
loope
xor
sub
adc
cwtl
sbb
add
dec
call
shlb
mov
call
and
sub
test
test
inc
cwtl
nop
repnz
cmpsb
mov
popa
push
test
movsb
pop
dec
pop
mov
push
lods
loopne
mov
pop
xchg
jle
push
adc
aam
adc
lds
and
cltd
sub
adc
hlt
push
hlt
movsb
mov
mov
and
aaa
je
adc
ljmp
xor
ret
das
pop
mov
push
xor
xor
imul
push
lods
xor
ret
into
out
jbe
jns
dec
imul
inc
les
pop
clc
in
cmc
and
mov
movsb
sub
dec
pop
push
ret
jge
fcomp
sarl
add
insb
mov
ss
and
push
xchg
jo
push
test
aam
test
nop
loope
ss
push
cld
decl
iret
dec
mov
sub
add
roll
fsubrs
mov
push
cld
xor
cmp
push
dec
movsb
mov
pushf
movsb
mov
lods
test
cld
adc
les
mov
mov
inc
jmp
inc
inc
and
add
icebp
dec
mov
add
adc
pop
xor
push
test
and
or
fisubs
cwtl
call
mov
addl
push
in
cmp
add
fs
adc
mov
mov
push
mov
mov
sbb
test
mov
loopne
les
aam
mov
push
or
mov
jnp
jmp
pop
js
add
jne
adc
adc
push
enter
mov
mov
push
mov
dec
jno
dec
lret
xchg
sub
lahf
and
mov
mov
call
cs
sub
je
jmp
pop
xor
adc
divl
sbb
or
push
outsb
jae
mov
and
dec
mov
dec
shrb
aam
hlt
jmp
cli
push
cmp
int3
or
fs
jo
in
push
mov
enter
loop
lock
es
push
xor
rcrb
inc
push
ss
cmp
mov
sub
push
loope
add
mov
pop
pusha
int3
push
pushf
sub
fistl
xor
jne
test
dec
out
inc
scas
sbb
hlt
in
dec
push
pop
test
push
push
mov
rcll
loop
add
scas
add
pushl
dec
in
cld
addl
sbbl
nop
pop
pop
mov
mov
pop
in
loopne
mov
clc
clc
pop
scas
loopne
imul
jo
xor
adc
add
pop
aam
pop
call
scas
cmpl
xor
and
into
int3
pushf
insl
stc
or
mov
sbb
dec
and
adc
or
test
or
cmp
jmp
loope
dec
or
test
dec
lods
xchg
mov
inc
mov
lock
out
xchg
push
mov
adc
in
sbb
arpl
je
enter
loope
adcl
lahf
roll
adc
pushf
ret
add
sahf
movsl
mov
dec
jl
inc
fs
dec
out
out
dec
inc
mov
inc
pop
scas
es
push
inc
cmp
push
cmp
pcmpgtb
or
push
mov
std
mov
and
adc
xor
or
outsb
scas
adc
and
xchg
mov
movsb
out
sub
xor
pop
lods
dec
jecxz
add
movsb
dec
push
je
lods
scas
rcrb
rcrb
stos
lock
ja
leave
sub
xchg
cmp
push
xor
pusha
hlt
mov
stos
enter
fcompl
cmp
add
cmp
lcall
loop
sti
enter
mov
js
cltd
push
pop
in
adc
es
int3
adc
mov
add
pop
pusha
cmp
xchg
mov
mov
call
test
jo
scas
addb
mov
shlb
sub
sub
jl
cwtl
or
imul
popf
sub
sbb
cmp
or
fnstenv
incl
adc
movsb
sub
dec
adc
cltd
adc
adc
int3
mov
cmp
xor
insl
outsb
popa
push
xchg
and
push
lahf
sbb
push
xor
rcll
dec
push
pop
dec
les
bound
lods
add
jle
std
sub
pop
xchg
inc
cmp
push
call
lahf
popa
outsb
pushf
sbb
mov
movsb
int3
inc
adc
fstpl
inc
or
inc
pusha
jne
nop
test
inc
test
imul
push
sbbb
push
cmp
sbb
mov
xor
jecxz
dec
jno
mov
pop
dec
lods
nop
out
adc
cmpb
cmp
dec
aas
and
pop
jle
insl
adc
hlt
mov
call
je
pusha
je
int3
shrb
pop
shlb
add
xor
shlb
outsb
sub
jb
cmp
aas
sbb
xor
popa
push
push
or
xor
cmc
je
inc
ljmp
pop
mov
enter
or
int
fnstcw
add
adc
pop
sbb
pop
fsts
jge
clc
adc
movb
or
or
mov
or
mov
dec
add
jge
mov
int
cmp
xor
sti
lea
inc
clc
push
cwtl
movsb
data16
mov
lock
sbb
and
mov
inc
sbb
cmp
lock
inc
cmp
xor
call
ret
rclb
ud2
xchg
or
sti
loopne
mov
shl
cmp
dec
pop
jecxz
adc
add
pop
sti
jl
and
hlt
push
lea
xchg
sub
dec
dec
ficompl
mov
int3
inc
in
or
xchg
add
je
xor
jne
sub
adc
ljmp
lds
daa
loopne
add
pop
nop
inc
ret
add
and
loop
xchg
icebp
cwtl
adc
fs
int3
push
lock
mov
add
push
jo
cmp
jns
int3
dec
or
shl
stc
pusha
push
add
or
outsb
mov
adc
or
repz
inc
mov
enter
cld
dec
or
push
cli
pop
xchg
inc
je
dec
jo
mov
or
test
push
cmp
test
nop
cli
xor
dec
in
cwtl
and
cwtl
test
rclb
lea
mov
add
testb
ds
add
add
aaa
pop
aas
loope
clc
sub
lcall
cltd
push
fucom
and
out
mov
lock
push
adc
or
dec
not
add
adc
cld
mov
jmp
mov
inc
adc
fs
lea
mov
data16
inc
pushf
jne
inc
call
imul
and
sbb
leave
adc
xor
testl
adc
add
add
jns
fmuls
dec
and
rcrb
test
pop
xor
mov
push
dec
mov
in
push
push
mov
lods
push
adc
subb
fadd
mov
add
inc
adc
outsl
adc
loope
jno
sbb
lods
mov
call
push
neg
into
mov
les
or
inc
push
in
int
test
adc
add
fsts
lock
mov
enter
mov
test
lods
fsubs
cmp
enter
nop
jne
push
mov
lock
popa
lea
rclb
mov
sbb
ljmp
icebp
in
js
outsl
add
test
daa
lds
sub
sti
jne
nop
and
and
pop
or
loopne
lahf
loope
jle
push
movsb
dec
roll
cmpsb
push
mov
ja
xor
lea
das
cmp
pop
aam
push
lock
push
mov
dec
stc
xchg
loope
test
lret
and
or
popa
adc
call
test
push
and
in
or
push
sbb
add
ret
mov
or
sub
cltd
in
adc
sub
nop
sub
cmp
inc
dec
call
clc
jo
mov
cld
xchg
xor
test
push
test
adc
and
add
clc
loopne
push
mov
adc
xor
je
sub
adc
call
daa
aas
xor
sbb
dec
fdiv
sub
fs
nop
add
pop
fdivrl
xchg
cwtl
xchg
std
mov
ds
mov
jl
cli
inc
adcl
testb
fdivl
lea
cwtl
cltd
loope
ror
add
cld
inc
inc
mov
test
inc
dec
je
xchg
mov
hlt
cli
dec
les
repnz
and
aaa
adc
inc
sub
movsb
adc
and
rcrl
mov
jmp
nop
std
les
insl
add
or
nop
adc
push
les
inc
push
xor
shrb
xchg
clc
cmp
pop
pop
enter
sbb
call
inc
cld
xor
cld
int3
xchg
insb
dec
test
not
cmp
std
jnp
add
ret
mov
mov
dec
dec
insl
iret
and
add
inc
leave
repz
subl
dec
pop
pusha
enter
mov
scas
movsb
adc
and
xchg
mov
inc
cmp
inc
mov
jl
decb
pop
xchg
mov
inc
dec
pop
mov
and
xor
pop
scas
test
cmp
rcrl
jne
int3
mull
clc
pop
mulb
loope
and
loopne
cmp
push
adc
adc
adc
or
mov
inc
push
and
scas
push
sbb
sub
add
pop
loope
mov
jg
push
cmp
int
fdivrl
sub
mov
mov
addr16
mov
mov
aas
in
adc
and
mov
mov
fwait
call
sub
int
inc
cld
dec
daa
hlt
add
fistl
stos
dec
jl
incb
std
cmp
pop
and
push
xor
jg
call
mov
rorb
mov
mov
jl
xchg
roll
loope
imul
dec
mov
add
mov
cmpsl
jge
cmp
adcl
and
inc
cmp
in
dec
add
loope
and
push
ds
sub
mov
aaa
incb
movsb
fadd
sub
push
push
mov
movsb
sub
orb
pop
cs
jbe
mov
sarb
test
xchg
orb
pushf
adc
mov
test
out
add
icebp
push
shl
dec
push
mov
jbe
add
xchg
push
call
sbb
decb
lds
inc
pusha
movsb
addb
addl
adc
add
push
dec
call
ljmp
aas
in
mov
add
js
sarb
dec
repnz
and
xorb
push
mull
je
jl
lods
ficompl
in
stc
test
sarb
int3
jbe
mov
loop
push
xchg
inc
and
jge
add
add
test
mov
pushf
movsb
cmp
adc
loope
clc
or
lcall
mov
fucomp
ja
mov
jge
adc
adc
inc
stos
adc
lahf
sbb
xor
repnz
xchg
sbb
pop
inc
test
ds
mov
loop
push
xchg
sub
fcoml
inc
add
mov
jge
lock
clc
add
inc
fs
push
es
and
dec
jmp
add
inc
adc
dec
repnz
sbb
dec
add
lock
or
aas
dec
pcmpeqb
ds
xor
filds
jmp
int3
pop
clc
or
and
pop
mov
cmc
mov
add
cmp
hlt
or
inc
inc
out
dec
cli
addb
call
inc
mov
push
mov
pop
mov
mov
jne
push
sub
jmp
jo
daa
mov
hlt
push
lock
inc
lcall
loopne
rorl
clc
mov
roll
xor
or
aam
cmpl
adc
sbb
out
leave
inc
and
dec
cmp
incl
sub
push
shll
dec
cmp
mov
xor
push
das
jp
dec
add
jecxz
pop
cld
mov
sbb
jle
lahf
and
mov
and
xchg
inc
pop
xor
mov
or
std
add
cmp
fdivrs
repz
mov
arpl
les
dec
mov
pop
sbb
movsb
in
adc
or
adc
adc
add
push
xchg
enter
pusha
push
dec
dec
movsb
pushf
leave
mov
adc
add
int
movsb
fdivs
push
add
mov
cltd
inc
add
ret
je
stc
loopne
mov
push
push
or
sbb
xchg
nop
sti
shlb
lock
cmp
mov
sahf
mov
add
lods
mov
adc
jo
add
dec
push
dec
mov
leave
in
jp
push
frndint
cltd
aaa
jl
pop
fwait
outsb
fadds
and
orl
pushf
movsl
inc
and
xor
ret
loope
sbb
dec
jns
inc
subl
add
lock
std
sahf
sbb
pop
test
push
add
bswap
call
add
in
lcall
jne
jns
xor
in
fmull
shr
adc
std
pop
mov
jmp
mov
in
push
and
cld
dec
adc
rcll
ja
or
or
stc
sub
xor
loop
pop
std
jne
lods
gs
orb
clc
mov
sub
and
mov
mov
xor
adcl
rorb
xchg
in
lock
mov
icebp
nop
mov
lods
sbb
sub
push
mov
push
mov
pop
push
loop
adc
jl
lds
ret
sti
mov
arpl
scas
sub
stc
adc
xchg
xor
jne
cmp
push
inc
hlt
and
sarl
mov
or
imull
imul
test
test
dec
das
js
adc
xchg
enter
cmp
test
dec
mov
xor
add
xchg
orb
add
cmp
test
jge
adc
cmp
inc
aad
not
jg
loopne
cmp
loopne
mov
es
mov
jb
dec
rclb
push
lahf
rcrl
xor
fdivrs
int3
mov
je
shrb
cld
loopne
pusha
int3
or
add
mov
mov
cmp
and
cmp
cmp
inc
outsb
inc
mov
and
or
or
mov
popa
test
aaa
add
sub
pop
xor
mov
and
adc
stos
or
xor
les
sar
lds
xor
jb
js
jo
xor
mov
dec
sbb
aas
inc
rcrb
lock
mov
adc
cld
pop
cmp
cltd
test
adc
pusha
inc
or
and
and
hlt
inc
sub
adc
and
adc
or
test
adc
inc
cli
sub
xor
ret
cmp
add
cwtl
pop
inc
pop
sub
push
and
mov
cwtl
dec
jo
nop
sub
cltd
mov
pusha
and
test
sub
mov
mov
adc
rolb
sti
adc
test
or
adc
add
push
push
rclb
pop
mov
sub
adc
pop
and
rclb
test
sub
inc
adc
iret
push
dec
mov
cltd
or
dec
add
adc
rclb
adc
mov
or
jmp
dec
dec
popf
sub
or
mov
and
add
mov
and
js
cld
jmp
xor
in
jmp
cmp
cmp
rorb
enter
xor
sub
nop
ret
or
aam
push
rclb
pop
jns
dec
adc
push
in
jns
clc
jge
popa
test
inc
int3
adc
xor
mov
pop
sarl
inc
xor
adc
inc
dec
lds
jo
incl
push
mov
cld
or
add
cmp
add
loopne
jo
mov
mov
sti
scas
xchg
mov
sub
cmp
lret
mov
sbb
sub
clc
xor
cltd
sbb
sub
aam
pop
xor
push
and
sub
fucomi
fsubs
mov
adc
enter
test
clc
or
hlt
jmp
js
rol
call
cmpsl
pop
je
mov
xor
dec
pusha
adc
dec
call
jne
xchg
adc
adc
insb
cld
loopne
jg
popf
icebp
je
mov
fbstp
xchg
or
in
mov
roll
pop
js
mov
cwtl
fs
call
hlt
lahf
push
test
std
adc
pusha
adc
or
loope
mov
nopl
js
xchg
sbb
mov
out
xchg
sub
rolb
cmp
mov
and
jo
jno
xchg
dec
shlb
pusha
inc
push
sarb
daa
jb
sbb
movsl
dec
hlt
cmp
repz
andl
push
js
or
aad
dec
adc
pop
out
jo
inc
adc
dec
add
rclb
adcb
ficoms
xchg
xor
mov
jb
hlt
push
fimuls
popa
test
imul
mov
out
add
push
call
mov
faddp
inc
push
mov
push
popa
sarl
call
mov
adc
push
adc
mov
mov
adc
add
div
jo
pop
mov
imul
jl
test
test
sbb
mov
shr
xchg
cld
lods
pop
mov
mov
movsb
shll
and
lods
dec
mov
cmp
cmp
jbe
or
cmp
or
xchg
bndldx
pusha
sub
jne
push
inc
nop
in
ja
into
lods
push
cwtl
mov
and
call
mov
fisttps
test
or
cmp
addb
jle
fs
push
lods
adc
mov
fsubr
xor
dec
xor
pop
push
neg
cmp
adc
mov
dec
and
cmp
add
push
rcrl
pop
adc
xchg
out
mov
add
cld
mov
jnp
lret
dec
js
inc
jo
jg
pushf
pop
add
jl
imul
js
cmpsb
lods
push
dec
xor
add
adc
push
test
mov
mov
push
call
pop
and
add
dec
movsb
cwtl
fsub
pop
dec
mov
inc
sub
mov
imul
pushf
clc
mov
pusha
rcll
and
hlt
or
in
pop
add
pushf
jecxz
sub
add
xor
imul
pop
adc
lock
aas
inc
roll
arpl
xor
cwtl
adc
mov
and
or
mov
jnp
adc
sti
xor
test
cli
call
push
loopne
das
into
fwait
imul
mov
out
in
fdivrl
popa
and
dec
push
lea
movsl
sbb
add
loope
push
or
je
jb
outsb
in
pop
fsubp
cmp
pop
lds
lods
aas
mov
pusha
jne
rolb
xor
sbb
push
call
and
push
add
ret
lods
adc
jmp
test
je
and
pop
mov
lock
cld
or
add
mov
xor
nop
jl
dec
cmp
jmp
push
and
mov
cs
insb
mov
mov
mulb
or
imul
out
adc
out
cmp
sbb
adc
movsb
adc
movsb
pushf
lds
adc
jb
insl
and
mov
xor
dec
fucomip
add
mov
shrl
xorb
rol
or
and
pop
sub
test
inc
sbbb
fidivl
outsl
or
icebp
push
mov
mov
cmpb
js
add
idivb
pop
or
rcrl
or
sbb
mov
rclb
in
loope
inc
mov
inc
mov
dec
rcrl
or
int3
imulb
pop
mov
fmuls
mov
jg
or
add
dec
aaa
mov
cmp
lea
jl
adc
sbb
and
mov
loope
rorb
and
inc
in
pusha
inc
sbb
sbb
mov
mov
cmc
psubb
call
nop
inc
mov
ret
shll
std
inc
test
and
xchg
sub
lea
shl
jae
mov
mov
in
mov
out
sbb
loopne
xor
pop
dec
jle
push
dec
lods
hlt
cmp
dec
repz
mov
aam
jns
cmp
jo
dec
push
cmp
sub
or
push
dec
mov
insb
or
jo
test
test
adc
sbb
jb
inc
adc
pop
push
int3
dec
jne
in
xchg
dec
test
push
or
add
and
hlt
mov
and
xor
xchg
shll
mov
cltd
bound
mov
mov
mov
add
lea
sbb
pop
sbbl
sarl
das
outsb
push
jecxz
mov
push
bound
sti
pop
pop
jl
leave
mov
ljmp
jo
dec
jns
andl
or
ja
jmp
sub
cwtl
xor
or
std
and
sbb
xor
clc
xor
in
dec
test
lds
daa
loop
out
and
stc
aas
aam
xchg
inc
pop
mov
xor
or
test
rcrb
nop
sbb
dec
jl
pop
pop
and
je
jo
dec
add
adc
pop
loop
mov
addr16
lds
les
dec
and
nop
jne
leave
out
push
outsb
and
xlat
xor
add
mov
jo
fmuls
mov
and
pushf
repnz
mov
adc
lea
aam
lods
int3
or
pop
jl
ret
mov
push
mov
and
and
negl
inc
mov
xchg
enter
pop
loop
pop
and
lahf
shl
mov
dec
add
push
call
and
jnp
sbb
pusha
or
aas
xor
mov
adc
in
pop
insb
aas
aaa
fsubs
sub
jno
adc
jbe
add
push
mov
dec
or
or
adc
adc
ret
int3
hlt
pop
test
dec
int3
addl
cmp
mov
std
das
adc
mov
dec
pop
inc
xor
mov
rorl
cmp
aam
addb
jl
add
enter
or
rol
add
or
and
dec
enter
rorb
sub
js
xchg
or
std
out
dec
inc
mov
mov
pop
mov
dec
push
loope
jns
or
ficomps
mov
xchg
mov
jbe
mov
push
dec
or
or
mov
fadd
ret
imul
add
jmp
adc
orl
add
dec
dec
push
mov
pop
jecxz
lock
or
cwtl
sub
bound
dec
push
ds
push
xor
outsl
mov
inc
rcrb
call
inc
or
push
roll
jg
mov
sub
mov
arpl
outsb
shl
push
xchg
pusha
leave
lock
xchg
leave
insb
cmp
loopne
std
cmp
mov
jmp
clc
sbb
lods
jl
adc
loope
ret
cld
mov
dec
pop
ret
dec
xor
add
adc
push
call
pop
mov
rolb
adc
add
loop
adc
xor
jne
xchg
jbe
inc
dec
or
or
shrl
fadds
inc
int3
xchg
and
lock
faddl
jmp
or
pop
and
jns
add
call
mov
cwtl
rolb
pop
dec
lods
jl
pop
adc
loopne
rolb
cld
das
push
test
rolb
mov
or
scas
sub
mov
or
sbbl
js
sbb
cmp
mov
pop
jb
mov
jne
add
gs
sub
sub
push
mov
dec
ret
test
iret
rorb
sbb
pop
inc
mov
in
lcall
or
outsb
clc
call
mov
add
xchg
inc
adc
mov
and
dec
aas
hlt
jmp
inc
sub
add
add
aaa
xor
push
add
jmp
xchg
xor
xor
push
call
inc
lock
ds
xchg
lods
pop
jno
mov
mov
daa
clc
sbb
push
popf
call
sub
mov
cmp
lcall
adc
icebp
mov
fildll
rclb
jl
and
add
cwtl
and
or
rcl
mov
roll
int
outsb
xor
lea
cvtps2pi
mov
leave
jns
xor
insl
add
inc
xor
test
cmp
jno
pusha
cli
into
dec
hlt
add
enter
jne
mov
lock
loopne
xchg
push
push
js
add
sbb
push
mov
inc
add
push
mov
adc
int
jmp
dec
loope
sbb
call
add
jge
repnz
leave
push
nop
pop
add
push
add
aas
adc
mov
push
psubb
mov
mov
aas
xorb
shrl
cmp
jge
dec
push
xor
outsb
jne
add
jmp
int
je
push
mov
mov
jns
cmp
mov
jne
lret
popf
pop
xchg
adc
xor
pusha
mov
mov
dec
dec
in
push
enter
mov
xor
sub
js
cmp
insb
shll
add
movb
pop
or
hlt
cwtl
add
cmp
jno
push
mov
and
inc
or
data16
inc
sub
cmp
push
or
rcrb
lea
mov
add
cmp
and
cld
loopne
inc
lock
dec
rorl
call
loopne
or
mov
in
ss
faddl
jo
jmp
dec
sub
cmpsl
call
add
js
inc
clc
loop
inc
hlt
jl
dec
sbbb
enter
insl
cmp
jmp
adcb
add
aaa
pop
mull
enter
dec
subl
or
popa
xor
in
push
in
fdivp
pop
les
dec
cld
dec
xchg
push
sub
enter
mov
mov
pop
sbb
loopne
cmp
dec
add
jo
cwtl
mov
push
fdivrl
xchg
adc
xchg
jo
popa
pushf
pop
aam
and
js
popf
dec
inc
in
sub
sbb
inc
xchg
leave
xor
loopne
addl
cmp
insl
sbb
jbe
adc
mov
add
and
pop
adc
dec
inc
push
xchg
ret
dec
test
xchg
mov
pusha
add
mov
pop
adc
jae
stos
add
sti
dec
xor
pop
int3
adc
add
pop
pushf
je
adc
cmp
cmc
fs
jl
aam
jbe
push
je
in
xor
or
sub
dec
push
add
cmpsl
clc
outsl
jl
hlt
dec
dec
and
mov
imul
mov
xchg
jle
arpl
adc
or
into
or
clc
add
addl
xor
add
sbb
nop
lock
jbe
pushl
jns
in
outsb
jno
cmpsl
sbb
popa
push
mov
movsb
sbb
jno
test
orb
mov
lock
stos
test
mov
and
adc
andb
mov
rdmsr
iret
and
xchg
sbb
sbb
mov
adc
test
mov
mov
test
and
or
add
dec
mov
adc
push
xlat
or
mov
push
xor
andb
and
pop
inc
test
aam
adc
call
xor
cmpb
jbe
addl
leave
repnz
punpckhbw
push
in
addb
fdivr
dec
pop
mov
fsubr
lock
sbb
into
out
sub
nop
rcrb
inc
or
add
or
shlb
mov
int3
dec
call
adc
push
or
dec
and
rorb
mov
testl
mov
loope
push
add
sarb
arpl
jle
push
jbe
imul
imul
add
js
div
movsb
icebp
xchg
dec
mov
mov
jo
pop
test
xorb
dec
enter
push
push
mov
jl
cmpl
arpl
pop
push
dec
or
mov
push
sub
popa
adc
in
jns
adc
insl
or
faddl
jo
add
scas
sub
notl
insb
dec
call
jl
jo
add
sub
test
test
add
mov
cmp
dec
cmp
andb
xchg
or
movsb
addps
and
popa
je
sub
loopne
mov
leave
js
xchg
add
lcall
dec
mov
and
or
inc
pop
mov
movsl
xor
adc
stc
mov
inc
arpl
or
jmp
mov
pop
inc
dec
ljmp
dec
add
sbbl
adc
cmp
pop
jl
add
ljmp
mov
add
or
push
pop
cld
aad
popf
cmp
cmp
ja
leave
mov
and
addl
pop
cli
add
adc
in
pusha
push
or
mov
ret
lock
movsb
lods
fdivrs
and
out
push
inc
cmp
dec
xchg
inc
dec
add
lods
adc
or
push
scas
xor
jne
push
mov
pusha
rorb
sbb
mov
dec
pop
insb
sub
mov
push
cld
dec
and
popa
sub
push
ror
xorl
lea
push
call
jp
loopne
sub
xor
insl
shrb
add
xchg
cld
or
dec
jo
mov
push
dec
or
jmp
dec
and
insl
mov
jl
shl
imul
ja
in
and
test
fisttpll
add
adc
dec
sub
andb
xchg
lcall
movsb
adc
add
add
dec
mov
dec
nop
xor
sbb
mov
push
add
xor
mov
push
pusha
add
shlb
cld
mov
cli
movsb
sub
or
pop
cld
add
add
sbb
mov
and
fildl
jns
loopne
inc
dec
or
popa
cld
lds
ret
or
enter
adc
or
scas
add
daa
and
add
jmp
add
dec
push
fadds
lcall
sub
inc
shlb
xor
orb
in
jnp
sub
xor
clc
inc
cmp
sub
adc
dec
sub
cwtl
subl
scas
inc
mov
pop
push
lahf
das
add
dec
call
dec
int
dec
xor
mov
lea
pop
jo
jne
rorb
pusha
adc
je
mov
xchg
fs
mov
push
add
mov
aad
cwtl
pusha
aaa
mov
push
cltd
xor
mov
aas
push
xadd
dec
jbe
pop
cmp
sbb
adc
test
mov
loope
scas
adc
call
imul
shlb
sub
sbb
xor
lret
jl
in
test
pop
adc
ret
cmp
fildl
xor
dec
add
lds
mov
cmp
ret
stos
mov
call
outsl
sub
jo
nop
int3
adc
ja
or
xor
jmp
in
mov
sbb
out
dec
mov
add
cld
call
cltd
dec
lods
cmp
inc
cld
jmp
mov
addr16
decb
push
faddl
push
movsb
adc
daa
xchg
pop
aad
enter
enter
push
pushf
test
xlat
or
mov
or
loopne
mov
call
sbb
cwtl
adc
dec
pop
shr
and
or
mov
cmc
inc
adc
and
popa
cmp
gs
clc
xor
jge
and
mov
or
or
cmpsl
lock
add
jbe
loope
add
adc
or
xor
jb
ret
sub
lock
call
inc
pop
cmp
and
or
mov
push
aam
imul
add
jae
push
jl
sbb
and
test
sbb
sbb
push
push
add
and
and
cltd
xor
mov
movsb
imul
xor
adc
adc
add
cwtl
mov
iret
add
push
inc
xor
xchg
or
adc
cmp
adc
adc
xor
mov
add
adc
add
movsb
insl
push
add
pop
jl
lock
add
push
pop
mov
dec
lret
jbe
sbb
add
fwait
and
js
dec
in
jo
xor
xor
loopne
dec
pop
dec
mov
daa
nop
dec
push
jecxz
and
andb
shr
add
les
stc
clc
jo
outsl
xor
mov
int3
adc
mov
jno
adc
and
lahf
dec
push
test
push
dec
rcl
xor
mov
dec
adc
sub
push
push
dec
adc
inc
call
shlb
setne
pushf
cltd
jl
mov
loop
push
push
fcompl
jg
mov
xchg
cmp
std
hlt
daa
cmp
les
cltd
loope
adc
fcoms
js
pop
fs
nop
cltd
push
sub
inc
pop
cs
stos
inc
clc
mov
pop
jge
jo
mov
test
imul
popa
sti
push
dec
xor
push
push
sub
aam
mov
push
stc
adc
mov
je
js
stc
add
cmp
adc
nop
and
cmp
int3
xor
sub
sbb
nop
add
in
nop
hlt
les
subb
pop
jns
adc
and
push
nop
mov
les
pop
pop
mov
out
es
testb
dec
mov
or
int3
add
dec
mov
jmp
test
add
add
outsl
dec
lods
jl
hlt
cmp
test
sbb
xchg
call
adc
dec
push
or
int3
pop
fmuls
mov
call
cwtl
aas
and
vpshufhw
jp
sub
add
loope
decb
es
mov
push
roll
movsb
arpl
jmp
jmp
pop
sub
or
adc
mov
jnp
ret
mov
add
aam
jge
in
and
sbb
insb
int3
dec
jne
xor
xchg
adc
rorl
in
popa
add
or
and
clc
lods
cmp
dec
add
test
test
sbb
enter
adc
adc
xchg
mov
in
push
pop
pop
jg
fadds
or
clc
lds
je
pushf
jge
add
xor
imul
sub
add
mov
and
mov
adc
cmp
mov
sbb
mov
inc
lret
movzbl
and
rclb
and
clc
das
fimuls
push
mov
popf
pusha
or
dec
add
rep
mov
push
hlt
and
push
cmp
adc
push
pop
enter
decl
cmp
into
call
aas
cmp
mov
pop
push
or
xor
push
mov
adc
scas
aam
xorb
aam
adc
and
movsb
call
add
sbb
loope
xchg
mov
cld
pop
pop
mov
and
push
and
mov
add
mov
call
js
mov
aam
xchg
pop
adc
or
and
sbb
add
bound
push
call
or
enter
out
push
in
in
fidivrs
lahf
dec
push
adc
dec
add
nop
lods
jo
adc
clc
or
sti
xor
pop
sar
pop
pop
mov
inc
addl
or
sbb
out
enter
and
push
sub
loope
div
mov
ja
inc
jo
imul
leave
loopne
and
adc
xchg
xor
push
dec
stos
push
lods
jp
sub
mov
pop
xchg
adc
add
call
and
popa
in
and
sub
jo
push
movl
jl
scas
rcrb
or
cmpsl
mov
and
add
mov
push
cmpsb
or
je
popa
push
lahf
call
cmp
inc
nop
cld
fsubr
inc
pop
popf
hlt
xchg
inc
or
call
or
jl
add
cwtl
jb
add
mov
jp
movsb
mov
dec
add
add
jl
add
add
daa
or
inc
loop
call
in
sbb
adc
ss
test
jle
ja
cmp
push
scas
lret
push
or
jmp
int3
sar
lret
push
shlb
loope
jle
sub
add
aam
fcomps
dec
mov
mov
clc
dec
roll
push
shlb
dec
and
sbb
addb
jg
and
pop
add
cmp
lret
mov
in
mov
and
jg
mov
xor
gs
psubusb
push
cmpsl
sbb
sbb
test
pop
andl
shl
fs
push
scas
xor
sbb
jge
pop
int3
mov
leave
pushf
push
jp
popa
push
dec
push
ret
das
xchg
push
add
cld
test
lcall
nop
adc
test
cld
je
add
dec
add
pusha
mov
cmp
sub
test
inc
jmp
cmp
or
xchg
fmuls
test
mov
in
ljmp
leave
or
js
call
and
push
subb
adc
dec
or
adc
leave
adc
mov
rclb
aaa
xor
push
inc
lret
js
dec
jl
int3
or
loope
icebp
dec
inc
ret
movsl
fcomp
mov
dec
in
or
and
inc
dec
sbb
fs
mov
pop
push
sarb
fsubrl
push
cld
fdivrs
dec
hlt
enter
scas
pop
mov
aam
call
push
or
sub
cli
mov
in
push
mov
mov
mov
jle
lahf
sub
xor
mov
adc
mov
pop
jns
or
push
inc
xorl
or
fsubrl
roll
cmp
leave
sbb
mov
inc
or
insl
or
lock
jo
jne
inc
add
cs
jnp
mov
aam
add
out
inc
mov
adc
push
test
xchg
push
mov
int3
add
js
jo
int3
loope
pop
sbbl
dec
adc
push
cs
popl
rorl
inc
nop
loopne
or
push
insl
pusha
adc
or
sbb
js
pop
cmp
dec
or
add
movsb
dec
push
clc
inc
insl
sub
inc
xchg
in
xchg
call
in
jl
push
call
xlat
enter
dec
or
mov
lock
or
pop
jle
je
mov
sub
mov
outsb
jb
popl
jp
xor
gs
pop
orb
sbb
or
mov
ljmp
ret
adc
sub
and
sub
aam
movsbl
jne
clc
mov
in
addb
add
lcall
pushf
or
xor
enter
test
test
add
into
cmpb
cli
jae
inc
rolb
fnstenv
mov
jo
sub
not
insb
addb
push
xor
push
stc
je
out
shll
pop
mov
and
mov
adc
ror
mov
sar
add
mov
leave
jecxz
les
pushl
mov
test
int3
adc
and
mov
mov
ljmp
enter
notb
mov
push
push
sbb
xchg
inc
aam
add
push
jns
cmp
add
or
test
pop
cwtl
add
mov
dec
xor
adc
push
add
repnz
dec
les
xchg
add
and
xor
and
inc
sbb
push
and
pop
sub
ret
push
inc
shlb
dec
sbb
xor
adc
mov
orl
orl
lods
xor
pop
leave
push
lret
dec
jmp
mov
jmp
cmp
ja
rorb
pop
mov
fadds
nop
jo
fisubrs
test
aam
ret
shlb
and
adc
or
pop
inc
hlt
pop
orl
and
cld
js
or
add
mov
mov
and
dec
pop
rorl
fwait
pop
rcll
dec
mov
jmp
pop
pop
mov
jl
out
cmpb
pusha
or
ret
cli
ja
pop
cmp
push
add
xor
and
or
shlb
iret
xor
outsl
sub
enter
stos
nop
push
mov
inc
xor
mov
out
shlb
fisttpl
sar
mov
add
xor
add
out
je
sti
aaa
push
push
std
add
cmp
test
add
fsubr
push
popa
mov
lock
aas
test
pop
add
inc
aam
add
mov
xor
add
std
add
adc
jl
add
adc
pop
sub
pop
test
sub
hlt
mov
pop
pop
lea
xor
ret
js
and
dec
jmp
or
mov
pop
xchg
cmpsb
in
and
mov
add
adc
dec
cmp
mov
add
pop
dec
orb
shl
add
cltd
push
mov
xor
mov
shl
dec
mov
popf
xchg
call
andb
adc
dec
mov
add
sbbl
jne
lock
adc
sub
stc
add
aam
call
insb
sub
pop
shr
dec
jno
xor
push
jns
mov
cld
aam
daa
call
popa
shr
insb
mov
cli
mov
pop
pop
cmp
mov
add
clc
adc
jmp
inc
adc
cmp
cmpsb
push
mov
vpminsd
or
insb
jmp
adc
orl
inc
add
adc
insl
push
cmp
or
push
rolb
call
cwtl
std
mov
test
mov
mov
pop
cli
or
negb
dec
test
mov
mov
sbb
xor
adc
cmpl
sub
test
rorb
jnp
mov
rcrb
and
popa
jo
fidivrs
int3
or
and
cwtl
repnz
adc
xchg
push
mov
push
hlt
cld
mov
cli
hlt
push
or
add
and
ja
push
rclb
fcmovnb
or
lahf
test
cmp
push
xchg
mov
inc
sbb
pop
leave
jo
add
cmc
jmp
xchg
adc
inc
and
push
xorb
inc
cmp
and
inc
and
pop
cmp
push
shll
or
cld
add
hlt
sub
inc
test
add
add
call
dec
loop
hlt
and
and
xor
mov
imul
mov
js
cmp
or
mov
enter
inc
call
add
sub
xor
pop
shll
call
or
pusha
pop
or
out
lock
jne
hlt
shr
test
outsb
add
add
or
add
mov
jle
stc
add
pushf
xadd
gs
pusha
insb
in
lahf
fs
and
mov
and
mov
add
in
fcoml
mov
outsb
jbe
mov
cwtl
mov
push
add
pop
nop
fadd
or
jg
lods
dec
ja
pushf
fsubr
rorb
or
lock
dec
jbe
sti
inc
enter
and
imul
movsb
les
pop
movsb
out
das
inc
sub
add
in
call
clc
in
aam
xchg
movsb
cld
mov
call
jl
test
mov
or
push
adc
ds
enter
rorb
push
cmp
hlt
test
les
inc
mov
shlb
mov
jle
scas
clc
popa
clc
xor
fsubp
sbb
pusha
mov
pusha
jb
outsb
addl
jne
movsb
or
jl
movsl
and
jge
sahf
hlt
test
xor
cmp
pop
mov
adc
sub
jle
mov
pop
pop
mov
sub
or
inc
popl
jmp
push
or
adc
xor
sysret
ret
mov
je
xor
into
lret
std
lahf
xor
ret
mov
jmp
adc
or
test
push
sub
pop
and
mov
jecxz
inc
test
test
inc
and
fs
sub
and
dec
xor
or
inc
mov
test
imul
or
je
in
add
sub
jl
test
adc
roll
icebp
fcomps
or
sbb
mov
les
enter
insb
push
ret
push
sub
loope
repnz
dec
mov
add
or
push
sub
addb
cmp
enter
xor
xor
orb
je
xchg
je
push
or
shr
jo
mov
and
adc
lds
push
aad
subb
pop
fdivrl
aad
call
adc
adc
xchg
andb
fisubrl
xor
push
pusha
dec
mov
mov
or
sbb
hlt
xor
call
jmp
and
inc
or
pop
aad
mov
mov
call
and
cmp
idivb
mov
or
or
add
test
xor
push
xchg
mov
xchg
addb
dec
push
and
mov
pop
adc
adc
sub
jle
loope
std
andb
push
test
push
adc
rclb
or
add
leave
jno
or
clc
cmpb
sub
outsb
ret
or
test
subl
stc
dec
xchg
xor
sub
inc
xor
jp
shrl
inc
dec
jg
or
inc
cmp
dec
cmp
jmp
shlb
or
inc
lods
mov
add
add
inc
jmp
sub
and
adcb
add
repnz
and
push
lea
adc
imul
loope
lods
in
test
mov
popa
shlb
leave
test
sbb
popl
fsubrl
rcrb
out
cmp
or
cs
aaa
push
push
sbb
xor
dec
and
dec
and
or
pop
stc
loopne
aas
outsl
mov
pop
jnp
jne
aam
or
dec
outsb
into
jge
add
cmpsl
mov
cmp
cli
dec
mov
add
push
stos
or
xor
add
imul
pop
nop
add
lcall
or
xor
das
or
lret
pusha
or
xorb
lret
xor
movsb
icebp
aas
add
adc
stc
outsb
mov
sub
xor
sub
jbe
aam
pop
or
adc
sub
xchg
pop
xorl
jle
mov
jae
jnp
pop
cmp
and
or
jmp
pop
push
jnp
adc
lock
dec
hlt
push
xchg
in
mov
rolb
or
outsb
adc
or
popa
sbb
shlb
jle
clc
sbb
insb
and
dec
repz
cmp
inc
or
pop
xor
es
mov
leave
loop
addb
ja
pop
mov
jmp
inc
dec
jns
shlb
mov
xchg
pop
sbb
or
pop
insb
xor
push
movsb
sti
add
lock
and
adc
sti
nop
sbb
sbb
pop
push
xorb
pop
or
and
xchg
add
cli
push
jne
enter
cmp
sub
or
push
jns
sub
imul
orl
daa
popf
cli
js
pop
sub
aas
cmp
into
xchg
and
test
or
add
pop
jmp
jno
pop
test
mov
jmp
push
add
add
xor
dec
jae
jno
add
sbb
inc
pop
loop
jo
or
lahf
xchg
js
loope
out
rcrl
inc
sbb
sub
or
inc
or
in
and
das
js
ret
xor
enter
popa
jge
call
cmp
imul
jmp
mov
fwait
mov
test
cwtl
xor
leave
lds
loopne
cld
enter
mov
inc
add
sbb
jo
inc
lods
aad
mov
mov
mov
xor
add
and
subl
and
or
in
lret
add
xorl
xor
lcall
loopne
repz
mov
jno
filds
lds
add
sub
and
pusha
je
insb
cmp
xor
loopne
out
adc
cmp
jmp
mov
jo
cmp
call
test
orl
ljmp
mov
loope
sub
inc
cltd
pop
or
add
sub
aam
test
shll
add
add
and
ljmp
sub
or
mov
stc
and
cmp
sbb
push
mov
xor
pushf
dec
jle
xchg
mov
inc
sub
pop
adc
addr16
and
popa
mov
enter
inc
push
dec
outsl
dec
adc
in
inc
movsl
xor
cmp
je
pop
mov
push
push
xor
add
cmp
cs
jge
pop
xchg
shl
mov
icebp
cwtl
adc
fcomps
lock
adc
or
inc
pop
sbb
fcompl
push
aam
cmp
aam
and
mov
sub
pop
test
push
shll
xor
push
out
pop
icebp
shrb
inc
adc
xor
mov
das
lcall
fdivrs
or
cs
jl
mov
lock
negb
add
ret
andb
loopne
leave
ss
repnz
sub
push
cmpb
cli
add
sbb
xor
in
jmp
lret
mov
adc
or
pushf
daa
call
movb
pusha
orb
jbe
inc
jl
pop
scas
adc
jl
sbb
fmuls
xor
dec
mov
lock
mov
icebp
pop
rcrb
loopne
push
mov
xchg
clc
mov
cmp
or
xchg
cli
call
pop
loopne
inc
mov
inc
inc
cmp
insb
cmc
inc
rorb
dec
cwtl
lock
add
add
leave
rclb
add
shll
xor
sbbb
pop
pop
fwait
and
pop
mov
incl
vpcomw
daa
dec
fmuls
push
sarb
dec
test
add
push
or
xchg
inc
mov
cmp
xor
xorl
sahf
pop
push
mov
rorl
sbb
mov
add
rolb
cmp
jnp
pop
loopne
mov
add
jns
inc
std
add
jb
mov
mov
outsb
clc
inc
test
aam
mov
idiv
add
push
cwtl
or
je
jle
mov
outsb
loopne
pop
inc
adc
cmpb
rclb
add
pushf
rolb
rcrl
cmpsb
movsb
sub
sub
cld
push
cltd
loope
dec
mov
push
sub
ds
push
mov
in
hlt
and
arpl
jl
dec
add
and
jo
xchg
rclb
and
es
loopne
mov
push
jecxz
out
repnz
enter
jo
pop
call
movsl
imul
push
xor
sub
xor
aam
lock
stos
and
test
insb
enter
adc
cwtl
lock
xchg
cmpsb
daa
das
hlt
cwtl
outsl
dec
jmp
mov
jne
fcoms
in
sbb
mov
sbb
sub
pop
inc
lds
mov
imul
xchg
pusha
in
cltd
stos
mov
popa
sub
adc
adc
add
pop
dec
xor
dec
jno
mov
dec
pushf
mov
bound
movsb
inc
add
cli
imul
je
mov
push
imul
cld
aam
imul
fnstenv
xor
mov
and
arpl
les
xor
add
push
push
repnz
mov
inc
mov
loopne
pop
push
les
sub
xor
pop
ja
or
or
add
xor
fsubrs
push
cmp
pop
aam
cmp
imul
add
push
xorb
aam
fcmovne
mov
xor
popf
sub
sbb
lcall
inc
enter
nop
mov
and
fdivr
or
adc
inc
cld
sub
orl
and
cmp
inc
clc
in
push
mov
scas
hlt
pop
in
jl
lock
cmp
test
pusha
and
call
sbb
cmpl
sbbb
xchg
push
mov
cld
cmp
sbb
cmpb
adc
in
push
or
imul
mov
leave
jo
or
jle
sub
test
or
pusha
add
outsb
adc
mov
lock
xor
sub
les
push
imul
mov
and
call
orl
ret
xor
inc
mov
pop
adc
adc
push
cwtl
sub
pop
cmpsb
and
loopne
inc
and
or
mov
repz
mov
sbbl
push
mov
sbb
out
and
push
mov
aas
les
dec
in
orl
pop
mov
cld
call
pop
jl
pop
push
mov
push
cwtl
mov
dec
or
dec
orb
dec
mov
add
inc
jo
cwtl
test
call
clc
or
lods
add
mov
and
in
xor
xchg
xor
setne
outsb
push
cmp
out
and
xchg
adc
pop
sbb
jb
pop
test
mov
dec
inc
add
or
mov
dec
add
pop
cmpl
and
or
pop
push
in
das
push
adc
imul
pop
ja
pop
push
and
dec
xchg
add
xor
mov
inc
jge
cmp
addl
push
loopne
sbb
test
jne
xchg
cmp
and
mov
or
les
popa
lock
out
add
sub
push
xchg
or
push
mov
pop
mov
hlt
mov
pusha
adc
rcrb
sbbb
adc
lcall
sub
dec
stc
fs
fcoms
sub
test
enter
nop
sbb
inc
mov
push
jl
mov
cwtl
dec
push
les
jp
mov
test
ja
or
hlt
push
push
shl
pop
mov
adc
inc
sub
das
jbe
sbb
adc
and
cwtl
in
xlat
nop
lods
mov
stc
xor
mov
faddl
push
add
testb
insl
add
test
jl
daa
mov
jns
adcb
add
adc
mov
jno
push
inc
insb
nop
rorb
lock
dec
jg
push
pop
dec
add
adc
adcb
push
pop
int3
or
push
push
sub
nop
sbb
popa
mov
daa
sbb
loope
push
insb
pop
push
cmc
dec
xchg
cwtl
adc
adc
pop
aam
jmp
lahf
test
leave
xor
loopne
or
aam
or
test
jbe
add
push
mov
pop
xlat
adc
js
adc
sahf
call
add
jg
xchg
pop
mov
push
pushf
sbb
mov
mov
xchg
test
mov
cmp
adc
je
dec
xor
cwtl
sbb
and
mov
es
mov
xor
rclb
pusha
xchg
rorb
jno
jmp
sbbb
loope
fcompl
je
and
push
dec
mov
lods
rcll
das
lods
shlb
xor
nop
xchg
lcall
pop
mov
adc
pop
push
mov
cmp
dec
jmp
inc
fcompl
cmp
sub
lock
or
cld
data16
mov
mov
enter
jbe
in
or
adc
push
cmp
stc
push
out
int3
in
pop
pop
mov
inc
cmp
fs
stos
cltd
test
enter
rorb
jne
cwtl
adc
adc
cld
movsb
les
add
jg
aaa
cld
mov
pop
addb
call
cmp
ljmp
leave
js
pop
mov
jg
ret
inc
mov
and
inc
xchg
dec
sub
cwtl
or
adc
test
dec
or
mov
cmp
or
dec
daa
insl
or
es
shlb
test
ret
in
jbe
jne
rorb
jge
aam
push
dec
add
aam
or
pop
cmc
rorl
dec
mov
dec
jno
rolb
call
or
and
ja
rcll
add
sub
loope
fdivs
jmp
cwtl
loopne
push
xor
in
push
lahf
addl
jp
leave
jbe
rolb
pop
inc
sbb
sti
adc
jb
test
cmp
xchg
fdivl
fiaddl
pop
cmp
bound
jmp
mov
adc
dec
dec
test
fsubrl
sbb
jmp
mov
xchg
fsubrs
ja
mov
adcb
adc
and
lock
sub
imull
cmc
pop
movsb
enter
rorb
icebp
jl
lea
pop
ret
fsubrp
imul
xor
dec
or
jmp
aam
and
hlt
add
mov
shll
mov
push
cwtl
outsb
loopne
inc
sub
jne
and
xlat
sbb
sub
xchg
push
inc
xchg
movsb
adc
pushf
push
jbe
mov
inc
shll
adc
decl
sub
push
push
loopne
pop
mov
and
sbbl
dec
imul
xor
pop
jp
pop
mov
loop
fists
push
adc
and
ret
xor
nop
lods
and
pop
push
sub
mov
shlb
lock
dec
xor
mov
mov
pusha
int3
icebp
jp
das
jno
sarl
push
mov
and
or
mov
xor
ljmp
or
push
push
mov
mov
orb
inc
invd
jbe
test
rorb
mov
out
push
test
lods
clc
jnp
push
movsl
aam
js
adcb
dec
dec
add
inc
or
inc
sar
rolb
dec
sub
ud0
jb
add
add
cld
mov
mov
sub
sbb
mov
mov
nop
add
mov
inc
orl
mov
mov
adc
or
mov
add
rolb
push
in
pop
mov
lahf
js
sub
add
inc
mov
xchg
add
rclb
mov
push
sbb
push
cmp
ret
mov
cld
jae
or
stc
pop
movsl
inc
push
inc
and
cmp
and
inc
daa
mov
sbb
cmp
mov
xor
bswap
out
add
dec
or
test
cmp
jmp
add
dec
rcrl
leave
dec
lret
inc
ret
push
mov
xchg
lock
or
xchg
add
adcl
jmp
clc
jbe
dec
add
mov
orb
push
xchg
jo
call
add
sbb
xchg
adc
push
rcr
add
lcall
mov
es
mov
add
dec
push
adc
mov
inc
call
add
inc
sbb
mov
test
cmp
cmp
ja
add
adc
jno
adc
mov
xlat
js
inc
aam
inc
mov
sarl
or
and
jl
or
imul
inc
movsb
pop
xor
xchg
pop
stc
lods
dec
mov
fs
mov
cli
popf
jnp
cmp
aad
inc
xorb
cmp
dec
push
mov
dec
aad
mov
test
loope
pop
adc
and
sbb
cld
ja
jge
dec
cld
pop
and
ret
add
popf
sub
xor
lret
popa
aam
xorb
dec
loop
cwtl
or
inc
idiv
pop
orl
adc
xor
xor
dec
lock
add
push
add
add
xchg
call
mov
push
loopne
insl
pop
mov
cmp
mov
aam
icebp
mov
mov
dec
add
js
mov
pop
insb
and
fdivl
enter
cmpl
mov
push
loop
es
ja
test
das
in
lock
mov
leave
popa
cmp
faddl
add
add
sub
call
push
jb
xor
sbb
dec
pusha
mov
jl
rorb
call
mov
mov
bnd
les
mov
xchg
push
lea
xchg
cmp
ja
lods
xchg
mov
pop
test
mov
lea
mov
psllw
cli
xor
shlb
clc
test
dec
cmp
mov
add
inc
shl
sbb
repnz
mov
pop
mov
mov
add
aam
lea
mov
sbb
mov
sti
mov
aam
nop
movsl
pop
pop
test
push
push
adc
nop
adc
addb
jb
into
lret
jp
fs
mov
push
mov
add
add
cli
cmp
in
in
cmp
add
aam
repnz
je
arpl
pop
fdivrs
or
cwtl
sbb
or
and
pusha
ja
xor
jne
mov
push
aam
jae
dec
push
je
xchg
adc
sti
add
and
add
sub
rol
add
cwtl
dec
mov
cmp
lods
out
inc
mov
xchg
or
pop
cmpsl
addb
adc
icebp
gs
cmp
insl
insb
jl
in
and
popl
pop
lret
mul
pop
ja
jae
out
into
or
sbb
adc
pop
sbb
inc
sub
inc
jno
mov
xor
decl
adc
test
inc
sub
nop
call
rorl
movsb
jo
xor
addb
lock
cmp
dec
add
pop
jge
add
bound
jns
call
or
imul
xchg
xchg
jb
cwtl
aad
push
or
adc
adc
xchg
lock
jmp
test
mov
adc
movl
xchg
mov
add
lret
test
call
or
aad
faddl
add
add
jl
adc
outsb
inc
inc
out
add
pop
cld
add
jb
adc
xchg
cmpsl
in
imul
mov
inc
adc
test
xor
in
sbb
mov
sbb
cmp
pop
imul
jmp
test
in
orb
cmp
sub
clc
dec
test
jl
test
xchg
addl
cmp
jp
dec
jl
mov
jno
mov
jo
ds
std
push
push
fs
push
inc
fstps
pop
sub
add
pop
movsb
xor
adc
cmp
in
dec
or
add
push
push
test
sbb
jne
mov
sbb
push
xor
and
in
or
pop
inc
test
jle
lock
jle
jne
push
pop
add
dec
xor
jge
sub
or
jns
int3
and
roll
mov
push
orl
popa
adc
cmp
adc
cmp
xchg
int3
mov
adc
rclb
mov
xor
mov
dec
fcoml
xor
or
push
pop
daa
push
fcompl
roll
ds
call
pushf
adc
or
lods
jge
sub
outsb
fmull
fcompl
pop
icebp
push
mov
nop
cmp
imul
push
mov
inc
pop
mov
add
cmp
insl
cli
shll
lret
dec
out
jno
sbb
decl
mov
dec
enter
add
fcompl
inc
shl
xor
and
adc
lods
add
push
repnz
stos
in
cwtl
inc
loop
xor
add
loopne
jnp
pop
sub
sti
dec
or
subl
dec
pop
push
enter
fistpll
push
imul
and
and
sbb
call
imul
add
and
cld
cmp
inc
rolb
dec
icebp
fucomip
leave
and
add
mov
push
xchg
enter
xchg
popa
cld
cmp
mov
push
dec
push
and
pop
mov
test
aas
push
in
jl
inc
lock
loop,pt
sahf
xor
orb
add
pop
sub
pushf
or
das
fimuls
test
out
inc
cmp
lock
push
jmp
imul
dec
ds
push
add
lods
nop
daa
dec
pusha
pushf
add
bound
sub
sbb
or
add
or
sub
js
jl
pop
sbb
adc
jl
inc
xor
jae
int3
jo
push
mov
adc
ja
subb
cmove
jne
in
cmp
jo
jns
imul
in
push
mov
std
pusha
fcoml
dec
xchg
je
pop
mov
jne
aam
push
test
jne
inc
adc
std
sti
jecxz
das
cld
and
pop
or
push
mov
jo
clc
adc
ret
les
fsubrp
bound
dec
js
push
inc
inc
cmpl
sbb
add
dec
jl
or
inc
mov
and
push
push
cmp
pop
jnp
shrb
test
jl
aaa
sbbb
push
sti
int3
mov
push
cmp
xor
clc
sub
sub
cmpb
clc
cmp
pop
pop
lods
les
adc
pop
je
inc
add
int3
fcompl
xor
test
call
lock
pop
nop
push
sub
enter
lcall
test
mov
fdiv
cmp
mov
add
popf
inc
cld
cmp
je
fdiv
or
lds
hlt
nop
sbb
jns
or
imul
je
ds
popf
jg
sub
jg
dec
mov
dec
jle
push
sub
mov
cld
cltd
test
bswap
test
pushf
lea
ret
loope
jne
fcomps
inc
push
pop
mov
daa
shr
sarl
mov
xor
cli
les
sub
ds
pop
mov
sbb
dec
push
jmp
enter
int
and
faddl
sub
xchg
idivl
enter
or
movsb
dec
jno
loope
jo
mov
xor
int3
inc
mov
cli
and
daa
pop
xchg
push
sti
xor
push
sahf
pusha
dec
pop
xchg
cmp
cmc
call
testb
pop
je
orl
test
dec
js
into
pop
ret
imul
decl
jo
out
lock
add
or
adc
mov
sbb
inc
rorb
inc
cmp
leave
jle
jbe
push
dec
add
enter
add
add
push
test
mov
sbb
mov
pop
rolb
cmp
shl
mov
sub
cmc
cmpsb
lahf
dec
leave
jle
clc
jo
test
popa
jp
mov
sbb
call
push
and
push
mov
pop
shr
test
sbb
xchg
cs
mov
add
shll
jge
add
movl
xchg
add
test
out
int
lock
inc
cld
lock
jmp
or
std
or
mov
push
pop
cmp
add
test
sbb
inc
sarb
adc
add
outsb
cld
jmp
mov
jmp
pop
sub
jo
push
enter
inc
adcl
in
notb
mov
cld
or
add
subl
sti
ljmp
shl
adc
pop
shll
xlat
or
or
orb
test
notb
pop
mov
cmp
add
dec
cld
xchg
loopne
cld
rcrb
clc
subl
jmp
add
inc
out
ret
pop
mov
cmp
jg
das
sbb
leave
test
outsb
mov
in
mov
jecxz
cltd
inc
mov
hlt
cwtl
dec
or
pop
cmpsl
orb
test
and
push
clc
add
int3
mov
mov
add
lock
int3
pop
adc
aad
or
mov
pop
xorb
pop
loop
loopne
lock
imul
adcl
cmp
shlb
adc
divb
popf
fidivl
stos
or
push
mov
adc
push
and
popf
je
leave
fmull
aam
imul
call
dec
push
cwtl
cmc
pushf
cmpsl
mov
mov
jg
call
lea
inc
push
imul
aas
jmp
mov
clc
aam
pushf
pop
mov
inc
and
out
loope
or
inc
adc
fidivl
jnp
jmp
clc
mov
enter
add
adc
cld
xlat
test
push
add
cli
mov
dec
test
xchg
js
add
inc
clc
loopne
jge
rcrb
shlb
cwtl
pop
adc
test
or
pushf
pop
push
rorw
in
in
cwtl
sub
inc
int3
rolb
cld
mov
icebp
jmp
sbb
jmp
cmp
mov
mov
loopne
nop
jbe
mov
rcrl
xor
jmp
cmp
mov
add
dec
test
adc
movsb
fwait
push
dec
stc
clc
pushf
add
jne
dec
cmp
sub
jbe
rclb
shlb
scas
sbbb
sbb
sub
mov
icebp
lock
lock
rcll
mov
pop
fs
mov
push
push
mov
imul
and
dec
mov
jl
pop
add
or
orl
stc
and
jg
xchg
xchg
mov
inc
sbb
cmp
xor
add
cmp
jl
iret
dec
jle
pop
jmp
add
jl
add
int3
dec
jge
dec
js
adc
es
add
xor
mul
cld
mov
inc
jmp
cmp
add
mov
rcll
add
push
xchg
xor
stos
inc
rolb
dec
add
jns
jmp
test
dec
pop
insl
or
sub
popa
addb
push
xor
shrb
leave
pop
rol
popa
mov
or
lret
loope
fstps
pop
cmp
dec
add
and
gs
ret
pop
mov
inc
cmp
ret
push
mov
insb
push
sbb
mov
adc
cld
add
lahf
ds
lods
inc
hlt
and
nop
sub
xor
push
inc
mov
cmp
push
xor
fs
sub
out
add
rorl
pop
test
rorb
imulb
pop
je
xlat
addl
lea
lds
inc
add
cmp
pushf
scas
ret
xchg
inc
std
add
jae
mov
push
sbb
les
cmp
dec
jl
testb
stc
cld
add
push
or
into
icebp
test
js
mov
sbb
sbb
sbb
add
test
shrl
dec
dec
in
mov
xor
lock
ds
mov
adc
ror
inc
cmp
lock
xchg
cld
cmpl
xchg
add
push
mov
fisubrl
repnz
or
or
decb
call
sub
add
in
shlb
push
pop
sbb
les
test
call
mov
pop
and
add
shll
js
call
dec
push
xchg
stc
push
bound
in
or
xchg
lods
jo
or
in
stc
outsb
dec
sbb
rcll
jle
push
enter
es
cwtl
cmp
test
enter
dec
nop
inc
sti
fs
jge
lahf
orb
outsb
ret
dec
popf
jb
push
sar
testb
mov
mov
xchg
in
movsl
cmp
cmc
ret
xchg
sarl
das
mov
loopne
int3
mov
inc
pop
mov
xor
test
test
sbb
js
or
cmp
lahf
push
pop
in
pusha
pop
loope
cli
sbb
inc
push
lea
pop
nop
or
rol
or
in
int3
fidivl
xor
ret
adc
mov
lock
in
sbb
and
and
or
push
pop
add
adc
cmc
loopne
mov
pop
outsl
addb
jb
add
js
add
enter
pop
mov
or
lea
mov
sub
mov
pop
scas
jo
sahf
test
pop
or
or
push
lock
mov
add
inc
xchg
outsb
call
in
mov
cmpsl
sub
dec
insb
mov
movsb
loop
push
decl
add
sub
mov
push
adc
add
dec
push
dec
push
xchg
push
in
inc
push
ror
mov
shrl
add
nop
mov
inc
adc
test
gs
or
and
adc
lcall
ror
outsl
or
push
aam
mov
push
sub
pop
pop
pop
icebp
mov
aad
inc
mov
insb
jle
aad
mov
inc
test
xchg
data16
sbb
mov
adc
in
sbb
icebp
cmp
test
jbe
dec
or
mov
nop
mov
sbb
jp
pusha
and
icebp
inc
nop
cld
jg
dec
adc
adc
shlb
and
lods
mov
mov
adc
incb
js
rolb
xor
pop
jmp
pushf
mov
dec
dec
push
and
mov
mov
sub
adc
and
or
push
or
dec
dec
ds
push
test
icebp
mov
mov
pop
or
cmc
test
sbb
push
sbb
and
add
mov
pop
scas
sub
mov
cmpsb
in
sub
call
mov
mov
lret
jne
mov
jmp
pop
and
cmp
xor
arpl
js
push
adc
cmp
dec
mov
rorb
daa
dec
push
rcrb
aam
dec
xchg
js
jl
jmp
lock
insl
cmp
enter
orb
adc
or
dec
loope
sbb
push
jne
pop
push
sahf
subl
clc
add
jae
test
pop
in
push
mov
gs
or
and
lock
ss
pop
or
repz
sbb
xchg
and
or
push
and
adc
adc
test
fsubrl
rclb
adc
js
adc
icebp
fisttps
adc
jmp
inc
dec
shll
fadds
adc
jmp
rcl
or
leave
mov
testl
enter
loopne
sarl
ja
mov
xor
add
dec
ret
pusha
scas
cld
push
rorl
add
add
push
inc
fcomi
fcomps
mov
add
loope
int3
cmpsb
xor
std
iret
mov
div
mov
cld
add
pop
cmpsb
rcl
xor
mov
or
fsubr
xor
cwtl
insb
xorb
pusha
enter
mov
xchg
push
adc
mov
and
or
add
add
stc
jmp
add
mov
push
aas
jmp
lahf
cli
lods
dec
jns
sbb
mov
pusha
je
ret
cli
addb
jg
es
and
sbb
or
orb
scas
ss
cwtl
add
sti
ljmp
push
jmp
and
add
cmp
jo
inc
cmp
outsl
cwtl
xchg
test
adc
adc
mov
jnp
inc
je
adc
jmp
jo
push
decb
aam
fcmovnb
and
js
imul
enter
or
cli
pop
dec
fdivr
mov
aam
rcl
dec
xor
mov
mov
loope
lods
inc
pop
dec
or
xor
and
dec
add
call
in
adc
mov
add
cmpsl
jl
lods
add
mov
mov
xchg
push
push
push
mov
nop
add
dec
ljmp
mov
or
lret
sub
std
test
dec
and
mov
add
into
mov
mov
rolb
adc
outsl
cmp
lea
push
cltd
daa
loope
add
ret
dec
mov
add
mov
sub
pop
push
lret
sbb
sub
dec
sbb
and
lds
popa
sub
jg
xchg
sbb
arpl
mov
xchg
cli
mov
sbbb
pop
cld
pusha
push
aas
mov
clc
pop
mov
push
mov
xor
nop
or
nop
adc
mov
pop
xchg
icebp
add
lea
add
call
dec
xchg
mov
sub
sub
cmp
adc
pop
push
inc
sub
pop
push
jmp
test
out
dec
cmp
sbb
loop
loope
out
fs
and
or
xchg
and
lock
mov
js
daa
xor
mov
sbb
fs
and
cli
lret
mov
xchg
pusha
gs
fsubs
pop
rcrb
inc
mov
dec
and
adc
mov
aaa
sbb
nop
dec
xor
fs
jge
clc
mov
cltd
cwtl
pusha
jo
add
mov
mov
sub
sub
or
pushf
push
lock
mov
cmc
add
outsb
sbb
jl
and
add
testl
lods
jl
sub
lea
pop
dec
in
fmuls
sub
rcrl
les
and
aam
adc
sub
and
dec
jns
xor
mov
orb
shl
pusha
addb
fs
sbb
fs
xchg
int3
mov
ret
lock
cmp
jle
dec
dec
fs
mov
or
or
adc
dec
and
testl
xor
dec
sub
xorl
push
sub
adc
xor
je
adc
sub
adc
push
arpl
xor
daa
pop
pop
and
add
add
leave
mov
aam
sarb
roll
add
dec
cmc
cmpsl
and
push
sbb
or
ret
mov
mov
adc
adc
and
loop
in
ror
adcb
add
js
and
or
cltd
mov
iret
aaa
pop
js
movsb
rdtsc
mov
pushl
mov
adc
cld
jns
or
pop
dec
and
shrb
add
or
orb
aas
popa
adc
push
inc
mov
sub
xchg
insb
andb
dec
and
xchg
lods
sub
addr16
out
dec
cmp
xlat
pusha
cld
xor
pop
out
mov
or
nop
sub
test
adc
dec
pop
lea
pop
and
mov
jge
push
adc
jp
ret
sar
or
adc
mov
add
xlat
adc
enter
bound
pop
orl
cwtl
inc
call
cld
sbbb
hlt
pop
push
lea
clc
lahf
in
xorl
ret
lock
xor
hlt
sub
mov
scas
or
imul
lea
xor
push
pop
push
adc
and
aaa
les
call
rcr
decl
or
add
jae
push
lahf
loope
roll
lea
loop
push
ror
mov
out
push
lcall
in
test
pop
adc
loopne
push
shlb
hlt
mov
push
stos
jl
dec
jne
mov
ret
or
inc
call
xor
popa
andl
aam
jp
mov
lret
jo
xor
sbb
negl
cmp
test
or
dec
dec
mov
or
add
adcb
imul
push
movsl
cmp
add
inc
cmp
test
fwait
jmp
call
hlt
pusha
inc
outsb
mov
sub
hlt
pop
nop
lods
and
shlb
std
popf
push
jge
and
and
sbbb
sbb
lahf
add
mov
insl
xchg
movsb
cwtl
mov
cltd
flds
cwtl
outsl
or
mov
mov
xor
aam
mov
pop
dec
xchg
mov
dec
jl
cmp
inc
jb
test
adc
or
add
fimuls
and
mov
add
jle
jo
wbinvd
incl
mov
and
stc
cli
rorl
addl
jo
push
enter
xlat
loopne
dec
push
mov
push
movsb
adc
dec
sub
ret
pop
xchg
sbbb
adc
shlb
hlt
add
cmp
mov
cmpsl
pop
mov
cli
xor
popf
jno
inc
popa
dec
jmp
push
mov
and
lock
lods
pop
mov
pop
cli
sbb
mov
aam
dec
insl
push
mov
imul
in
cmp
sbb
xor
inc
cmp
and
cld
mov
nop
mov
pop
xchg
incb
dec
stos
enter
push
call
sbb
lahf
arpl
hlt
cmp
dec
xor
mov
les
or
ret
cmp
and
push
cmp
je
pop
addl
adc
sbb
adc
je
ss
inc
mov
jge
es
pop
sub
cld
js
push
jmp
hlt
push
inc
and
arpl
mov
mov
or
subl
aam
lret
test
fdivrs
rclb
cmp
jg
add
sub
mov
call
dec
fadds
outsl
insl
push
aam
cs
pop
stc
hlt
aaa
push
mov
rcll
loopne
movl
mov
mov
inc
or
test
and
push
popa
sbbb
pop
das
in
push
xor
pop
inc
sub
push
jo
and
mov
or
lret
mov
inc
cmp
add
decb
jb,pn
subb
fwait
xor
cltd
push
int3
inc
and
call
push
popa
movsb
xor
ret
roll
pop
pop
cmpb
repz
push
mov
sub
or
jle
std
nop
cld
je
sbbb
mov
pop
jp
xor
lods
sub
outsl
dec
push
sbb
or
js
test
cli
mov
add
xor
mov
add
jo
adc
daa
in
fs
or
push
orl
xor
dec
enter
mov
adc
std
mov
movsb
dec
mov
rol
sbb
xchg
mov
xor
pusha
cmp
dec
nop
popa
ljmp
loope
sub
add
add
arpl
push
loope
dec
mov
inc
dec
push
rep
mov
insb
lea
push
or
pushf
call
scas
sar
xor
subb
jae
pop
adc
cld
pop
adc
jle
pop
jmp
rolb
mov
in
int3
adc
lock
xchg
and
dec
mov
add
mov
fcompl
adc
inc
call
test
and
add
enter
mov
or
pop
add
mov
in
add
mov
je
inc
sbb
jne
xor
test
test
xor
cmp
imul
and
xor
inc
or
addl
sub
add
inc
hlt
call
outsb
pop
cmp
rclb
jo
aad
xorb
sbbl
or
jge
aad
sub
mov
je
popf
lock
xchg
sub
cmp
and
xor
pop
dec
test
int
das
les
clc
dec
test
in
popa
stos
add
notl
mov
or
and
cli
xchg
insb
mov
insb
xor
insl
int3
push
adc
pushl
in
pop
inc
outsb
push
repnz
jne
in
movsb
cld
add
cmp
imul
pop
stc
cld
mov
icebp
fs
dec
adc
mov
dec
aam
cmp
xorb
xchg
cmp
cmpsb
clc
mov
js
push
orl
dec
cmp
dec
nop
lods
cld
cwtl
dec
jo
mov
inc
add
hlt
xchg
add
loopne
xlat
add
add
inc
cmpsl
rcr
or
jmp
xchg
int3
pop
test
daa
pop
jl
pusha
gs
mov
and
add
push
sbb
rorb
sbb
sbb
push
inc
movq
jle
test
out
mov
dec
movsb
push
lods
inc
or
popf
faddl
clc
adc
dec
jmp
sbb
clc
sbb
lock
add
movsb
xor
movb
xlat
cmp
scas
cmp
rol
sbb
mov
test
xor
adc
mov
stos
fcoms
test
je
mov
jns
popa
shrb
fs
repnz
pusha
fsubr
add
lds
in
rol
pop
fadds
sub
test
sub
and
add
and
add
push
imul
sbb
mov
popa
add
mov
pop
aam
inc
inc
xor
mov
jmp
inc
loop
int
in
cmp
loopne
and
in
or
mov
adc
lods
dec
sub
xlat
pop
dec
cmp
std
sub
xor
or
pop
add
in
adc
push
jg
cld
and
dec
and
cmc
mov
dec
mov
and
insb
cli
mov
xor
loop
adc
enter
scas
add
test
pop
adc
scas
sti
gs
jno
add
and
xchg
inc
mov
or
je
in
popa
cmp
or
adc
xor
jmp
cld
int3
push
mov
call
hlt
or
jbe
ljmp
xor
mov
and
push
mov
jbe
sub
pop
push
mov
ja
push
mov
add
nop
lods
sarb
push
jbe
fs
cwtl
add
mov
test
repz
mov
mov
popa
add
out
sbb
xchg
sub
lock
cltd
jl
loope
lock
fs
add
push
push
mov
test
subl
rcr
and
xor
and
sbb
add
sub
addl
push
cmp
add
pop
outsb
fstps
sub
lock
inc
call
add
bswap
xchg
jns
cmp
sbb
mov
and
cltd
in
andb
ljmp
ret
fs
adc
add
and
jns
cwtl
push
movsb
test
push
out
scas
inc
sbb
dec
add
push
jnp
rcr
cli
xchg
jo
jae
and
in
and
call
mov
in
and
cmp
xlat
bound
shr
cs
dec
addl
push
xchg
adc
jo
xor
add
ret
sarl
sti
scas
leave
push
xor
pop
nop
or
pop
or
adc
sub
pop
cwtl
out
mov
pop
pop
js
scas
push
cwtl
xor
repnz
jl
loope
rcll
mov
ljmp
inc
or
orb
sti
shl
pop
add
dec
movsb
rcrb
push
or
adc
xor
xor
push
mov
dec
loope
and
rclb
pop
sbb
mov
mov
push
pushf
sub
xlat
js
loop
jmp
adc
and
loope
imul
aam
shrl
dec
adc
mov
lcall
repnz
enter
mov
jo
and
or
je
and
jbe
hlt
and
nop
push
mov
lods
jo
pop
test
mov
inc
push
hlt
and
add
sub
les
or
aas
xorl
dec
push
push
pop
jnp
and
mov
outsb
icebp
xchg
adc
add
aam
or
lock
push
icebp
addr16
or
push
mov
test
mov
adc
add
mov
jo
push
cmpl
addb
push
int3
push
bnd
lock
push
and
pop
dec
inc
add
inc
lock
cmpb
call
cmp
jne
in
call
push
xchg
int3
jae
add
lea
aad
jmp
mov
or
sbb
jmp
jmp
pop
mov
add
subl
loopne
aad
notb
push
dec
movsb
mov
je
shlb
pop
push
mov
rorb
bound
xchg
add
fs
movsl
add
xor
add
inc
test
pushf
add
pop
xor
lods
lock
or
pop
xor
jecxz
inc
addb
bound
adc
icebp
or
adc
test
sub
call
stos
add
pop
xchg
mov
inc
adc
xor
mov
mov
outsl
xor
sahf
icebp
sub
iret
imul
std
add
jmp
test
adcb
add
xabort
call
fldl
xchg
in
movzwl
pop
mov
adc
mov
rep
sub
add
outsb
out
jl
add
add
ret
mov
cld
push
mov
jo
insb
sub
pop
pop
rolb
call
mov
xor
pusha
scas
xchg
or
jl
push
cwtl
or
sub
jl
pop
dec
push
mov
or
mov
pop
sbb
test
dec
inc
arpl
pusha
xor
mov
test
jbe
int3
jno
adc
mov
or
stc
cli
pop
push
int3
cmp
pop
pushf
inc
incb
nop
fnstcw
call
out
dec
sub
xor
repz
pop
adc
ret
jmp
mov
lret
add
inc
adc
mov
cld
fcomps
mov
adc
jge
adc
subb
jp
sahf
mov
cmp
arpl
pop
fwait
mov
push
xor
xchg
cmp
inc
call
mov
fs
shll
sub
inc
aam
or
pop
and
stos
xchg
test
adc
subb
mov
hlt
lods
push
pusha
dec
loopne
lods
xor
leave
add
das
jne
clc
dec
pop
js
push
cmp
mov
lds
mov
sbb
daa
add
cmp
push
xor
add
or
pusha
or
pop
mov
fadds
aam
outsl
inc
call
dec
adc
cltd
stos
stc
int3
add
dec
sub
pop
jg
dec
scas
adc
je
adc
xor
jae
xchg
insl
add
or
dec
fiaddl
aad
lods
inc
push
add
push
call
lods
nop
enter
call
jae
mov
jge
inc
push
mov
cmp
leave
mov
add
mulb
fdivrs
aaa
scas
and
cmp
outsb
sub
enter
push
push
in
scas
enter
dec
mov
add
mov
pop
or
nop
push
rcll
xor
test
pop
mov
aaa
cmp
add
jp
cmp
lock
pop
lock
bound
push
loopne
adc
je
nop
int
add
clc
aaa
stc
mov
pop
leave
test
mov
and
jo
inc
mov
inc
cli
std
add
jg
rclb
loopne
leave
cmp
jl
push
mov
pop
ds
xor
test
sub
into
jmp
push
jl
je
cmpb
cli
mov
hlt
xor
cmp
bswap
rol
xor
das
pop
jle
movsb
add
jo
cmc
mov
pop
call
mov
aas
decb
xor
push
pop
test
lock
mov
ss
dec
sbb
movb
call
mov
paddsb
ficomps
mov
ss
add
into
and
pop
push
cmp
rcrb
xor
cmp
push
leave
jbe
or
lret
das
inc
adc
adc
dec
add
hlt
jne
loopne
decb
outsb
dec
cmp
insl
inc
mov
push
mov
in
pop
in
pop
add
push
mov
loopne
aam
in
cmpl
addl
sbb
or
imull
sub
cmc
aas
cmc
mov
cmp
jge
push
or
nop
mov
inc
dec
test
enter
sub
and
movsl
daa
test
rcrb
jb
cmp
jge
aam
and
or
mov
jl
jl
ret
adc
jp
add
repz
outsl
jne
mov
pop
cwtl
test
adc
cmp
mov
cld
add
jmp
scas
or
inc
or
cmp
movsb
popf
ret
mov
test
sbb
jne
or
jno
je
outsl
xchg
repz
loopne
or
je
lea
jl
std
adcb
inc
xor
and
xor
mov
sbb
xor
sarb
sub
add
pop
jge
dec
xor
cmpsb
cmc
jbe
sbb
mov
test
gs
push
icebp
sub
sub
or
mov
sub
pop
xchg
cmpb
je
mov
cwtl
push
or
jmp
jne
clc
inc
add
lock
test
or
or
stc
or
cli
dec
or
mov
jmp
psubb
jge
add
push
popa
push
sub
jo
mov
in
test
and
aam
or
add
xor
xor
lea
add
dec
cli
mov
nop
dec
adc
je
push
adc
cmp
or
push
add
push
pop
add
mov
popa
push
push
and
push
cld
or
clc
sub
xor
test
mov
insl
push
jmp
iret
call
push
outsb
inc
scas
add
jbe
mov
jb
outsb
add
and
test
sub
lcall
notb
and
or
rclb
pop
adc
or
rcrl
dec
test
jg
and
pop
test
or
movsl
lods
inc
test
xor
xchg
fs
out
cmp
sti
cmp
lahf
add
call
adc
in
push
lahf
jle
or
push
adc
dec
add
cmpb
add
aam
sub
outsb
and
push
mov
pop
sbb
dec
pop
inc
and
inc
sbb
add
pusha
clc
add
cmp
inc
pop
test
sbb
je
or
push
aas
test
out
push
xchg
int3
psubsw
test
cmc
xor
fmuls
fbld
xor
cmpsb
pop
add
cmp
or
adcb
push
pop
push
std
call
lret
pop
call
add
xchg
mov
add
jge
addl
push
xor
cmp
cmc
leave
jl
popf
add
dec
fnstsw
popa
or
cmc
call
in
loopne
cmp
cmc
scas
fmul
push
add
xor
andb
pop
add
insl
push
inc
sar
adcl
sbb
test
pmaxub
mov
shrl
or
adc
xor
dec
outsb
ret
mov
mov
pop
loopne
fucomi
das
mov
push
dec
repnz
adcb
xor
and
or
test
or
ret
cld
cmc
clc
hlt
sarl
mov
loope
pop
scas
xor
push
sub
popf
ret
enter
fmuls
push
adc
add
flds
adcl
sti
dec
jo
jg
test
xchg
mov
inc
push
xorb
lcall
mov
push
mov
arpl
js
xchg
or
push
test
mov
lock
or
insb
popa
movsb
inc
pop
or
jl
std
jae
das
mov
jl
xor
clc
adc
push
stos
mov
test
int3
movsl
jg
pop
pop
mov
xchg
adc
test
rcrb
xchg
jle
leave
push
test
pop
cmpsb
mov
dec
js
jns
mov
fdivl
movsb
add
mov
sub
hlt
mov
add
add
or
je
lcall
sub
or
nop
add
inc
in
adcl
stc
pop
ret
push
aam
test
dec
imul
dec
int3
push
add
jl
xor
mov
jo
or
rcrb
stc
mov
ret
xchg
sbb
aam
in
test
lods
pushf
enter
xchg
mov
jne
xor
loop
notb
out
hlt
jo
dec
xchg
sbb
xor
mov
ljmp
or
mov
movsb
sbb
xchg
dec
mov
mov
shl
inc
add
cmp
int3
pop
aam
ja
sub
int3
dec
push
popf
adc
adc
push
lahf
push
testb
loop
adc
or
ss
sbb
push
lods
xor
inc
push
movsb
mov
and
pushf
add
mov
ljmp
dec
jo
mov
enter
fs
push
mov
je
pusha
cs
pop
jb
jge
loopne
insb
pushf
inc
adc
dec
lods
pop
jle
add
mov
sbb
outsb
or
jne
pop
cmpl
xor
ret
mov
push
sti
pop
fs
mov
cwtl
add
push
mov
push
pop
mov
adc
gs
pushf
jg
xchg
pop
push
js
add
push
clc
hlt
adc
mov
dec
inc
dec
push
adc
dec
cmp
lds
loop
das
mov
pushf
mov
sbb
pop
cltd
xor
push
test
addb
nop
inc
out
cmp
clc
cmp
test
fmuls
mov
orl
sub
rcrb
sub
cli
xchg
sub
mov
add
icebp
or
xchg
inc
adc
dec
ds
add
andb
orb
test
mov
xchg
nop
and
clc
test
lods
adc
das
mov
dec
je
std
adc
aas
lock
dec
mov
fdivrs
pop
inc
xor
xlat
ja
mov
mov
testb
push
inc
loopne
pop
mov
inc
or
lahf
jo
and
std
lahf
clc
inc
and
add
icebp
dec
pushf
xchg
movsl
push
movsb
nop
push
f2xm1
das
xchg
push
pop
adc
sub
pop
aas
mov
fs
and
or
add
sbb
lods
or
jl
inc
enter
mov
mov
gs
mov
ror
dec
pop
inc
lods
cmp
xchg
sub
cmp
mov
jg
add
push
into
int3
push
cwtl
rorb
negb
adc
testb
cld
je
pop
add
aas
mov
in
pop
cmp
push
push
pusha
xchg
test
mov
push
aas
cmp
or
sarb
and
dec
loopne
dec
pop
adc
mov
add
shlb
and
negb
out
ret
add
adc
ret
cltd
inc
call
cs
sbb
add
popa
rcrl
incb
pop
stc
cld
jae
adc
xchg
jg
mov
test
clc
jl
or
cmp
adc
xchg
ficoms
adc
add
insb
inc
addl
mov
enter
movsl
jl
inc
add
jmp
or
call
mov
add
add
or
lods
and
test
movsl
ljmp
rolb
ret
mov
sbb
cmp
push
cmp
int3
and
jmp
adc
lea
hlt
or
or
sar
adc
js
pop
clc
dec
fdivrs
add
lea
jle
jne
jl
gs
daa
je
andl
sahf
or
clc
push
dec
mov
lcall
jns
mov
and
inc
add
mov
cmpsl
add
jp
add
dec
pop
and
or
pop
ss
jmp
lock
xchg
nop
out
bound
test
push
bound
or
mov
je
movsb
add
or
push
jo
cmp
mov
sbb
test
or
insl
xlat
pop
fsubr
lock
fcoml
mov
hlt
test
repz
add
add
inc
mov
mov
cwtl
push
xorb
and
and
push
sub
jle
pop
int
dec
cmpsb
lods
add
mov
inc
outsb
xor
pusha
mov
in
daa
lret
mov
pusha
sbb
push
cld
jp
js
ljmp
aas
mov
mov
dec
push
ja
pushf
in
mov
add
adc
pop
lahf
dec
jo
push
and
mov
xchg
cmp
or
xor
xchg
mov
jp
sub
pop
aam
icebp
sbb
xor
pop
hlt
imul
sub
jl
or
mov
mov
jae
inc
mov
jns
test
xchg
add
or
loopne
ret
notb
pop
jl
push
jmp
loopne
or
repnz
pop
outsl
les
aam
adc
inc
mov
jp
mov
add
or
push
xor
dec
movsl
leave
mov
aad
jl
dec
mov
push
xor
jbe
je
or
call
mov
testb
dec
cli
mov
shrb
lea
xchg
sub
mov
daa
fisubl
call
loopne
dec
jo
les
xor
adcb
stc
dec
les
pushl
call
sahf
rcll
push
xor
fs
dec
or
ret
loopne
push
mov
jle
add
xchg
insl
subb
jae
js
or
sub
insl
add
xchg
cs
or
pop
or
push
scas
pusha
jbe
adc
push
add
and
nop
mov
addb
pusha
dec
jno
or
cmc
mov
in
int3
ja
xor
rcll
cmp
inc
pop
xor
mov
and
sbb
addl
sbb
mov
xchg
cs
and
add
add
mov
popa
les
or
adc
push
add
iret
mov
inc
xchg
sub
and
subb
jne
sbb
subl
je
lock
sbb
and
xor
and
rolb
movsb
or
out
add
mov
cmc
mov
rcrl
sub
sbb
jl
add
enter
int3
mov
loopne
enter
adc
js
jge
pop
sbb
mov
lds
pop
push
cwtl
add
dec
sbb
cmp
pop
xchg
rorb
push
and
lcall
or
or
call
mov
cmp
xor
inc
add
nop
fsubl
jbe
adc
dec
call
pop
xchg
mov
adc
adc
inc
add
mov
push
rcrl
insb
hlt
push
adc
pusha
mov
push
lahf
adc
or
loop
mov
xor
and
sub
test
inc
add
cmp
inc
sbb
jns
cwtl
dec
jbe,pn
cwtl
dec
add
dec
xor
dec
div
xor
mov
dec
cmp
jbe
roll
test
roll
xor
jns
add
xorb
sub
adc
mov
mov
mov
adc
inc
sub
ret
inc
and
inc
es
aas
add
cwtl
inc
mov
mov
mov
fadds
mov
rorl
cld
out
nop
dec
out
xchg
lock
jns
lea
dec
or
adc
dec
cmp
xor
fstl
pushf
aas
lods
les
pop
stc
mov
out
int3
pop
std
push
push
push
mov
lods
dec
xor
cmc
sub
push
out
and
loope
and
push
and
ret
push
jp
sub
push
call
cmp
jne
daa
dec
xor
rorb
mov
xchg
adc
or
nop
dec
add
xor
test
add
pop
jbe
fidivs
shl
cmp
add
ja
mov
cmp
ss
aas
lock
pusha
mov
or
in
mov
hlt
xorb
faddl
out
pusha
test
xchg
jmp
int3
loopne
push
fisubrs
loope
testb
shrb
push
mov
mov
push
and
or
or
popf
push
das
pusha
xor
mov
into
cmp
jbe
sub
aas
sbb
pushf
stc
push
sub
cld
push
ss
cmpb
sbb
sub
nop
add
push
lock
xchg
js
xor
ficoms
and
rorb
sahf
jo
icebp
mov
xor
cmp
dec
cmp
xchg
dec
add
jg
jnp
mov
ret
in
fldcw
fmuls
or
xor
popa
pop
push
imul
adc
icebp
clc
fisubs
in
dec
jo
add
dec
outsb
and
mov
test
shll
jo
ret
cmpsb
mov
ljmp
call
repnz
mov
call
jae
cmp
sub
lods
inc
in
jnp
adc
lock
push
mov
xor
ficompl
pop
or
pop
addb
icebp
lock
int3
cs
cmp
pop
rcl
and
dec
clc
call
cmp
push
icebp
jae
test
testl
or
cltd
arpl
subb
in
mov
pop
std
popa
lods
mov
mov
xor
mov
dec
mov
jl
or
loopne
sub
lods
and
pop
lock
dec
sub
shlb
xchg
test
call
in
clc
push
in
scas
push
xor
mov
clc
rcll
jo
push
push
pop
enter
sbb
jmp
jle
nop
sbb
push
out
mov
inc
sub
add
adc
lea
dec
or
push
popa
jo
and
fs
jl
lock
ja
sub
add
push
mov
xchg
mov
sub
add
enter
xor
sub
or
aam
mov
push
inc
or
scas
dec
push
imul
js
or
or
lea
js
popf
clc
in
add
shrb
enter
repz
jns
add
test
ja
dec
add
inc
pop
iret
jbe
inc
cwtl
push
mov
sbb
inc
test
shlb
xor
into
cli
add
inc
cmpsl
mov
dec
push
nop
pop
sub
mov
das
lock
dec
outsb
xchg
test
mov
add
and
or
xchg
add
stos
in
jb
adc
lods
lock
jnp
ds
mov
push
mov
jl
adc
add
addr16
std
add
adc
pushf
scas
rorb
js
inc
in
pop
inc
in
xchg
ret
jl
push
or
add
xchg
js
test
push
test
add
imul
loopne
rcll
cmpsb
icebp
xchg
aaa
mov
popa
adc
push
lea
add
scas
sbbb
cltd
test
dec
xchg
or
inc
je
push
xchg
lcall
inc
push
mov
xor
cld
lret
sbb
xchg
push
dec
jmp
sub
or
idiv
call
cwtl
cmp
jno
pop
std
jl
ljmp
sarb
bound
add
pop
shl
or
adc
sbb
inc
add
sbb
push
mov
xor
orb
xchg
jnp
pop
inc
cmp
sub
insb
aam
sub
or
cwtl
js
mov
inc
imul
pop
or
mov
jbe
pop
scas
rorl
xor
inc
and
repnz
add
or
das
cmpsb
mov
shrb
loopne
push
push
pushf
push
mov
in
adc
popa
add
xor
sarb
rorb
call
pusha
cmp
call
pop
cld
dec
push
dec
add
into
test
jmp
sbb
pushf
std
add
push
pop
sub
sbb
lods
fs
and
inc
sub
cld
hlt
cmp
data16
frstor
std
inc
or
mov
dec
dec
stc
test
jl
adc
cmc
lea
lahf
jno
push
pushf
sahf
call
and
mov
insl
shlb
and
or
xchg
movsb
jge
mov
sub
decl
push
and
xchg
les
sub
movsl
push
lods
stos
xor
mov
mov
lret
shrb
mov
and
push
jl
cmp
cmp
dec
inc
mov
mov
mov
or
sbb
and
enter
sub
andb
mov
jg
push
add
dec
mov
loope
ljmp
or
xor
add
test
sbb
push
pusha
sbb
leave
or
mov
sub
add
or
jmp
push
mull
test
inc
lock
dec
or
pop
in
push
in
mov
add
sub
outsl
mov
xor
gs
push
les
sbb
mov
adc
popf
movsb
cwtl
shrl
xchg
push
pushf
bound
pop
adc
push
test
call
inc
push
push
testl
mov
icebp
call
gs
mov
adc
mov
test
es
lock
adc
push
loopne
cld
test
clc
push
mov
pusha
pop
mov
xor
dec
mov
fcomps
sub
ds
daa
or
aas
call
mov
jl
loop
add
movsb
shlb
clc
clc
push
jge
push
mov
xor
adc
mov
loopne
incb
sbb
jmp
or
sub
add
rcll
into
xor
adcb
dec
dec
sbb
or
mov
dec
movsb
sbb
out
dec
stc
mov
jbe
negb
cwtl
leave
mov
les
rolb
pop
pop
mov
enter
sbb
aas
adc
mov
inc
xor
pop
add
or
pop
push
lahf
sbbb
pop
and
and
dec
mov
dec
in
int3
xor
adc
lods
push
test
or
rcrl
rcl
add
jb
pop
cmpb
scas
mov
stc
push
push
scas
test
fisttpll
xor
dec
dec
inc
add
dec
outsb
sbb
sub
mov
push
pop
pop
in
dec
jbe
shlb
pop
clc
lods
int3
add
insl
adc
xchg
or
sbb
or
adc
clc
mov
xchg
pop
jle
pop
push
stos
ret
add
push
sbb
in
test
adc
push
fwait
push
lock
mov
or
jmp
sub
test
push
filds
in
inc
adc
hlt
sbb
out
and
jae
push
in
mov
arpl
sub
call
and
cld
or
inc
leave
push
hlt
inc
or
insl
dec
push
mov
sarl
pop
cmp
inc
aam
or
into
mov
or
por
inc
insb
ljmp
in
hlt
mov
lods
or
cmpsb
mov
pop
dec
mov
clc
pop
cli
in
add
test
cmpb
xor
dec
sbb
xchg
cmp
push
outsb
cmp
fs
flds
jo
test
orb
shll
sbb
mov
jg
mov
lahf
lcall
popa
enter
inc
add
iret
mov
cmp
jnp
or
adc
jmp
test
mov
add
dec
and
jno
or
cmp
imul
rorb
and
pushf
arpl
int3
sub
out
add
xchg
jo
or
push
test
inc
xchg
jo
xorb
test
sub
or
cmp
cld
push
or
dec
shll
jl
outsl
pop
arpl
das
mov
sbb
mov
inc
adcb
xor
jmp
xchg
dec
push
lods
xor
cmp
add
test
shl
hlt
add
int
stos
js
jl
add
insl
pop
mov
inc
cmp
sbb
mov
jae
mov
xchg
cmp
pop
jmp
cmpsb
add
mov
lock
pop
xor
adc
mov
inc
add
lcall
lcall
sbb
and
cmc
aaa
mov
add
sub
push
mov
dec
dec
sbb
in
jl
xor
movsl
dec
or
mov
in
mov
or
int
sub
push
mov
or
push
adc
fsubr
les
mov
pushf
adc
push
sahf
add
icebp
in
xchg
pop
xchg
call
mov
adc
je
or
adc
loopne
xchg
cmp
adc
jp
sbb
push
push
cmpsb
sbb
push
into
out
insb
jecxz
and
movsb
cmp
dec
jmp
mov
sar
inc
xor
and
mov
ret
and
adc
das
lock
and
jle
orl
cmp
sbb
out
jno
and
or
mov
dec
push
dec
cmp
adc
mov
in
data16
add
cltd
je
sub
mov
xchg
je
aam
pop
loop
inc
sti
enter
imul
pop
and
mov
push
lock
inc
inc
jmp
imul
sbb
sub
pop
mov
sbb
rol
sarb
dec
in
pop
push
pop
mov
lea
nop
ds
mov
cmp
mov
add
mov
jmp
gs
insl
add
insb
add
push
testb
or
loopne
je
and
cmp
and
push
mov
xchg
sub
clc
pop
mov
xchg
sahf
je
repz
mov
pop
call
pop
shl
shl
sar
loopne
ja
xor
pop
mov
and
mov
je
add
mov
pop
shlb
sbb
and
movsb
adc
cmp
pop
loopne
or
sub
rcl
inc
mov
cmp
in
or
cltd
test
call
scas
fdivr
ljmp
clc
cmp
dec
sbb
dec
rorb
cmp
mov
pop
je
mov
mov
cmpl
push
or
adc
push
mov
dec
push
jp
pop
test
push
add
icebp
xor
les
push
adc
push
call
mov
call
sbb
dec
hlt
jmp
sbb
add
test
ret
pusha
mov
or
mov
or
mov
push
mov
adc
enter
adc
mov
add
fs
sub
out
shrb
adc
js
inc
mov
in
inc
rorb
xor
mov
add
or
je
sub
test
push
pusha
in
and
mov
loop
pop
cli
push
test
add
push
pushf
push
push
add
xor
dec
pusha
or
sub
pusha
clc
or
mov
sub
add
sbb
movsb
nop
loopew
and
icebp
lea
or
nop
js
call
inc
mov
mov
rorb
adc
or
fcoms
push
shrl
sbb
lcall
or
push
xor
adc
dec
insl
and
pop
adc
push
sbb
mov
dec
rorb
fidivrl
adc
sub
test
aad
in
stos
cwtl
mov
movsb
pop
jno
pop
sub
lods
adc
orb
dec
xor
mov
and
mov
push
nop
mov
jnp
aam
nop
lods
shr
adc
das
negb
sub
pop
popf
adc
lcall
push
sbb
adc
xchg
push
add
test
or
inc
xor
inc
and
pop
sub
cmp
outsl
adc
das
pop
push
and
testl
add
ret
mov
test
jne
push
push
jmp
push
sub
add
mov
mov
adc
add
movups
cmp
andb
or
je
pushf
rcl
xchg
ljmp
out
aas
mov
pop
or
add
adc
call
adc
dec
je
adc
outsl
push
test
add
adc
push
adc
les
in
in
aas
push
outsb
and
fs
enter
inc
mulb
ret
scas
sarl
adc
pop
mov
jae
mov
xor
pushf
add
loope
push
xor
cmp
leave
xlat
mov
ljmp
stc
imul
pop
ret
sub
orb
pushf
call
je
push
ret
sub
dec
mov
rorl
mov
icebp
sbbb
pop
mul
jmp
or
mov
add
push
int3
test
dec
lods
cld
dec
mov
je
das
pop
mov
or
mov
daa
hlt
jnp
jo
call
arpl
push
out
and
jp
pushf
push
cmc
adc
add
mov
nop
inc
jnp
dec
sbb
sub
je
push
addb
push
xor
adc
in
jmp
push
xor
add
cmp
inc
mov
gs
or
or
jne
in
hlt
adc
sbb
adc
repnz
loopne
scas
mov
cmp
lea
pop
pop
inc
and
js
xor
xor
push
jle
jo
adc
rorb
flds
hlt
lods
decb
mov
lods
pslld
negl
xor
enter
call
adc
or
mov
aam
lods
push
or
add
and
ljmp
mov
aaa
lret
pop
dec
cmp
sbb
add
dec
mov
int3
aas
aam
jge
shl
cmp
in
outsb
xor
mov
jl
and
lcall
mov
in
pop
mov
mov
inc
movsb
je
and
sub
fsubrl
test
adc
add
in
dec
jmp
xor
cmp
cmp
repnz
pop
loope
add
xor
and
push
lcall
adc
adc
fstpt
jo
dec
popf
addl
ds
cld
inc
sub
jo
mov
push
ja
fsubs
mov
popa
in
test
dec
outsb
sub
ss
out
aad
mov
pop
jne
stos
add
aad
clc
push
fcmovb
lahf
push
in
pop
sbbl
adc
shr
mov
mov
icebp
rcll
jne
loop
add
in
rorb
dec
fs
pop
add
lods
mov
adc
dec
add
inc
cmp
adc
dec
inc
xor
adc
cmp
adc
test
movsb
pop
sbb
adc
add
addl
or
adc
pop
lock
dec
adc
push
dec
fcoml
enter
mov
in
mov
int3
nop
or
dec
test
dec
jnp
xor
mov
fsubl
sub
test
loope
and
xlat
pushl
jl
mov
sub
aam
add
loope
dec
adc
jmp
jge
or
push
inc
inc
mov
push
out
pusha
mov
mov
cs
loop
add
call
into
out
push
test
mov
mov
push
lods
add
pop
push
insl
inc
addb
jne
jle
aam
inc
into
or
movsb
or
dec
in
adc
loope
in
cmp
ret
mov
add
popa
cmp
out
adc
jno
pop
ret
cmpsl
mov
dec
mov
clc
push
cmp
pushf
das
sbb
inc
add
mov
sub
jl
cld
mov
jo
mov
cmp
imul
push
add
adc
push
inc
call
mov
call
test
in
shrl
add
or
leave
cwtl
cmp
pop
and
or
jmp
incl
push
roll
xchg
in
xchg
add
std
inc
cld
test
cmp
sbb
movsb
add
enter
mov
cmp
inc
addb
add
pop
sub
cwtl
jl
and
enter
or
or
lret
cmp
mov
mov
clc
mov
iret
or
xor
dec
insl
pop
je
sub
and
hlt
aam
or
dec
jg
dec
add
cmpsb
or
sti
jae
or
inc
mov
popa
ljmp
dec
mull
cmp
nop
das
loope
or
jle
xchg
cmp
and
pushf
adc
cld
adc
add
mov
xlat
push
adc
inc
or
add
or
push
and
dec
adc
jge
je
mov
cmp
aam
lods
pushf
cmp
call
das
and
mov
mov
int
push
cmpsb
or
inc
jle
or
pop
and
mov
adcl
pushf
mov
add
inc
sub
or
sub
xor
xchg
xor
sbb
and
cmc
and
lods
adc
inc
ret
lcall
lret
test
sub
aam
xor
add
sbb
pusha
and
test
or
or
cld
shlb
pop
sbb
inc
adc
dec
pop
add
jg
sub
mov
jmp
or
push
sub
sbb
pop
mov
mov
or
nop
test
or
lock
repz
push
xor
lea
mov
or
loope
push
xchg
cmp
cmpsb
in
add
push
ljmp
mov
sub
je
lea
inc
fmull
mov
mov
clc
xlat
faddl
xchg
jne
mov
push
pop
push
cltd
mov
adc
mov
loop
cld
push
and
lcall
sbb
push
sub
xor
sub
sub
add
lods
pusha
cmp
xor
jno
push
pushf
push
movsb
call
in
and
inc
push
mov
or
adc
pusha
ss
pushf
mov
mov
mov
shlb
pushf
xor
call
push
dec
push
adc
clc
dec
in
cmp
pop
push
sbb
inc
jno
or
add
push
movsb
add
outsl
add
pop
lock
push
test
bound
push
loopne
adc
mov
clc
adc
mov
imul
adc
sti
and
and
and
out
sub
and
xchg
adc
push
sub
adc
lret
lods
push
js
ljmp
imul
push
push
lds
mov
xchg
and
cmp
mov
into
lret
add
jae
jne
arpl
adc
push
orl
or
addb
mov
dec
add
decb
add
sbb
pop
add
add
or
pushf
pushf
pop
sbbb
mov
aam
loopne
mov
push
enter
jle
add
cmp
std
repz
push
clc
adc
imul
push
push
sbb
and
push
or
mov
inc
test
inc
sbb
mov
inc
adc
and
or
dec
adc
ljmp
xor
cmp
push
pop
or
loope
bound
xor
and
cmp
outsb
rorb
push
in
push
movsb
scas
dec
insb
cmc
sbb
jae
or
xor
or
inc
pop
dec
cltd
shlb
test
push
xor
add
nop
sbb
dec
jg
jnp
icebp
cli
imul
xchg
mov
test
ljmp
daa
adc
test
mov
dec
push
repz
or
insb
cmp
scas
fs
imul
popf
sub
test
enter
mov
inc
jnp
aam
call
popa
je
push
jle
je
lods
sarl
push
jo
aam
icebp
sub
ret
sub
cwtl
push
dec
jo
mov
xor
sbb
test
or
push
jmp
push
int3
or
mov
adc
push
mov
adc
je
loope
dec
or
adc
push
xor
adc
pop
inc
push
mov
inc
adc
inc
or
fadd
imul
fs
fnstcw
negb
push
adc
dec
add
sub
in
push
call
ljmp
out
adc
test
icebp
int
or
push
xchg
jle
movsb
or
xor
cltd
cmp
inc
jnp
dec
inc
in
dec
push
xor
pop
pop
mov
repnz
call
call
mov
sbb
mov
fisubrl
xchg
mov
ss
mov
addr16
cwtl
and
inc
adc
push
adc
sbb
sahf
jg
mov
mov
cli
enter
sbb
jnp
inc
jmp
mov
and
push
shrb
loopne
inc
cmp
mov
movsl
dec
incl
mov
aas
adc
mov
cmp
mov
cld
jne
xchg
xchg
rol
insb
cmc
and
dec
or
and
inc
add
mov
or
shlb
mov
dec
leave
shl
shrl
push
fldl
movsb
mov
in
pop
or
pop
icebp
mov
addb
cmp
cmp
orb
ds
shl
icebp
adc
mov
jae
clc
rorb
mov
add
rcl
mov
or
aas
pop
and
jae
inc
mov
push
mov
and
orb
divl
daa
xor
push
enter
inc
adc
test
insb
and
lock
pop
pop
dec
nop
cld
lea
aad
out
add
pop
test
outsb
cmp
adc
insl
gs
shlb
dec
pop
test
mov
lcall
mov
and
out
jp
mov
add
icebp
mov
push
cmp
rclb
push
dec
adc
lret
add
dec
sub
les
scas
add
or
scas
push
add
add
orb
nop
inc
jbe
add
inc
and
lcall
xchg
inc
mov
aas
add
es
int3
mov
in
pop
insl
or
xchg
mov
pop
jmp
jmp
fimuls
subb
cltd
mov
push
fsts
stc
lock
mov
daa
shrl
ss
and
movsb
sub
movsl
nop
das
mov
jl
sub
les
xchg
sti
nop
aaa
cmpl
jno
lods
cwtl
cmp
mov
sbb
hlt
dec
xchg
cmc
xchg
inc
pusha
in
sti
loop
or
sub
or
fwait
mov
jbe
and
jne
subb
nop
add
orl
inc
cmpsl
and
fnstcw
mov
or
or
xor
dec
lods
and
xchg
add
test
dec
push
call
pop
xchg
out
inc
or
aad
mov
sub
add
mov
xchg
dec
or
mov
mov
mov
mov
cwtl
cltd
mov
loope
pop
add
mov
mov
adc
nop
lods
mov
and
sbb
es
std
je
cmp
test
and
mov
mov
push
and
mov
add
sbb
mov
dec
push
lahf
mov
mov
test
pop
in
mov
dec
jl
and
pushf
loopne
xor
test
int
int
inc
sarb
and
inc
sub
adc
xchg
cmpb
adc
test
imul
loop
pop
popf
jns
mov
fcoms
pusha
inc
pop
leave
cmpsl
fisubs
dec
cmp
inc
lock
loop
add
pusha
subb
xor
cld
jae
int3
fldpi
xor
push
rcr
call
aam
mov
cltd
dec
inc
test
mov
adc
into
xchg
daa
fadd
pop
sbb
push
popa
cmp
pusha
les
sbb
mov
fxch
jae
call
cmp
lods
cmp
aas
int3
dec
adc
xor
stos
cwtl
or
xor
xor
andb
pusha
pop
mov
or
sbb
loop
shlb
xchg
sub
jmp
and
add
mov
adc
dec
add
cmp
xchg
ljmp
adc
call
call
aam
enter
adc
adc
aam
cld
fsubl
and
addl
pop
pushf
pop
subb
js
rol
xchg
push
and
leave
push
pusha
pushf
insl
jns
mov
push
dec
in
push
lods
xchg
test
xor
dec
dec
adc
and
aam
pusha
test
xchg
pop
and
sub
pop
clc
mov
mov
lds
sarl
sub
test
pop
lds
pop
mov
cmpb
mov
add
ret
push
inc
lds
cmp
fimull
test
jbe
loope
rcrl
lock
ja
dec
int
movsb
popa
je
or
movsl
and
inc
les
aam
mov
pop
in
test
lods
xchg
sbb
adc
add
adc
test
add
jbe
add
mov
sarl
adc
dec
jle
add
lcall
nop
adc
mov
or
je
add
or
or
fs
jp
cld
pop
adc
rorb
lea
pop
mov
add
inc
hlt
leave
xor
cltd
loope
mov
icebp
dec
movsl
xlat
sbb
push
aam
push
les
das
popf
mov
incl
enter
jge
in
js
nop
pop
imul
inc
rolb
cmp
jne
adc
movsb
dec
pop
shlb
mov
cltd
mov
inc
bound
mov
std
ljmp
mov
or
daa
push
inc
test
add
adc
lcall
adc
sub
jno
push
add
jp
mov
adc
add
xchg
mov
mov
inc
loopne
and
fsubr
cmp
xor
xchg
and
push
shrl
inc
mov
push
xchg
xor
and
and
or
fdivr
and
clc
xor
cli
add
call
mov
mov
ljmp
shll
pop
in
mov
loopne
adcb
jns
je
int
sbb
sub
clc
pop
ret
pop
jg
cmp
aas
xor
lods
and
pop
inc
nop
jp
jmp
sbbb
lahf
mov
ja
jl
mov
inc
aam
setne
or
jecxz
pop
inc
arpl
loope
pop
xchg
shlb
enter
dec
push
cmp
pop
stos
ja
sbb
loope
dec
adc
fadd
call
mov
sub
xchg
xchg
add
movsb
mov
rcl
mov
sub
mov
jecxz
push
loopne
call
mov
push
movsl
sub
xor
andb
sub
addl
and
pop
push
mov
push
test
orb
push
fnstsw
adc
adc
mov
rol
push
test
xlat
stos
pop
mov
push
lock
inc
lock
push
xchg
jne
or
ret
nop
and
test
loope
pop
jle
call
in
dec
cmpsl
adc
lock
inc
push
or
add
xor
mov
cmp
push
adc
lds
in
adc
fucomi
push
mov
jle
xor
jge
jns
ds
push
fdivrs
and
cmp
fmull
lahf
dec
adc
fsubr
rcrb
lock
ret
push
mov
cmp
or
je
and
mov
lret
xor
lock
out
or
dec
out
mov
add
and
pusha
pop
adc
insl
inc
inc
adc
pop
pop
aam
lcall
cwtl
rol
mov
xor
je
hlt
jl
push
ljmp
sbb
outsb
inc
cltd
aad
aam
jb
xor
jns
les
inc
popf
and
xchg
roll
jmp
xchg
sub
mov
mov
mov
sbb
shll
or
test
nop
cmp
popf
or
or
loopne
out
cmp
call
in
enter
sub
and
jno
and
jns
jnp
push
cmpsl
fidivrl
push
stc
frstor
pushf
push
and
adc
out
jbe
jmp
jo
xchg
cmp
adc
stos
inc
mov
das
push
data16
and
sbb
sub
jne
imul
iret
jge
mov
add
test
adc
mov
pop
cwtl
jecxz
xchg
or
std
call
and
cld
rorl
adc
or
push
inc
cld
inc
xchg
mov
pop
inc
cwtl
pop
mov
adc
push
xor
clc
xor
lahf
lods
popa
pop
adc
jmp
test
mov
inc
imul
pop
adc
jo
fs
inc
mov
sub
adc
adc
popf
cld
das
adc
xchg
icebp
rolb
or
xor
je
xor
sti
shlb
xor
adc
ret
add
jns
call
pop
in
test
push
push
ret
dec
fs
adc
fdivr
sbb
pop
fcomip
lea
sti
adc
call
push
xchg
mov
adc
das
or
pushf
mov
sbb
cmpsl
and
lock
mov
data16
sbb
cmp
mov
jns
or
xor
inc
insb
pop
dec
fdivrl
push
daa
cmp
and
fdivrl
or
xor
jne
mov
pop
sbb
sbb
inc
push
and
mov
cmp
std
out
push
out
mov
or
inc
daa
and
mov
adc
lock
xor
mov
popl
dec
jmp
mov
pop
lods
dec
and
insl
cs
jnp
leave
and
add
call
pop
adc
add
push
call
inc
fdivrl
sub
dec
popf
and
push
sub
adc
dec
xor
add
xor
clc
lret
jae
xor
outsl
xor
mov
inc
lods
or
sub
xor
lods
lods
test
or
push
cltd
in
or
sub
in
mov
inc
and
add
jne
movsb
add
movsb
sub
add
push
test
or
pop
cmpl
dec
add
or
lcall
cli
aam
cmpb
jnp
add
mov
shrl
sar
add
lret
cltd
pop
dec
ljmp
subl
jecxz
lret
push
add
pop
add
cld
xorb
and
jl
push
adc
inc
movb
call
push
mov
das
xor
dec
pop
in
int3
dec
idivl
stc
ljmp
rclb
clc
out
add
scas
push
pop
xor
insl
movsb
in
cmp
inc
outsb
insb
jmp
jl
push
mov
nop
mov
outsb
adc
push
fisttpll
mov
add
in
push
sub
mov
mov
popf
ljmp
push
mov
cld
movsl
mov
add
daa
sahf
hlt
sub
mov
add
xchg
mov
enter
pop
fistps
or
dec
dec
xlat
cld
cmp
aaa
or
cli
push
jo
push
je
xor
push
aam
ret
or
sti
je
push
push
cli
mov
nop
xchg
test
fidivs
push
out
sarl
sbb
std
jg
fmul
add
je
aam
inc
dec
aam
out
add
or
and
daa
lods
xchg
loopne
lahf
lods
and
and
shlb
push
push
clc
std
pop
mov
xadd
xor
test
testb
add
dec
push
int3
insl
pusha
inc
inc
adc
jo
test
add
xor
push
sub
hlt
dec
mov
and
adc
add
push
push
mov
pop
icebp
mov
jns
adc
sbb
mov
xor
dec
bound
push
mov
lret
movsb
shrd
cmc
addb
aaa
or
cltd
shrl
popa
sbb
hlt
imul
sub
push
pop
or
adc
inc
push
nop
and
pop
xor
rolb
push
fstpl
sub
or
xor
push
and
or
mov
jo
shll
aad
mov
mov
fs
sub
and
add
pop
fildll
sbb
into
sbb
dec
push
cmp
jne
xchg
mov
jl
push
rolb
xchg
or
je
out
inc
or
insl
and
outsl
aaa
inc
or
adc
mov
pop
lcall
mov
dec
imul
mov
clc
xchg
ja
andb
add
out
sbb
aas
pop
pushw
sub
call
inc
adc
xor
push
clc
je
adc
adc
xchg
inc
and
popa
push
mov
daa
mov
decb
or
popa
push
adc
mov
les
lahf
shl
das
jmp
push
xchg
outsb
or
adc
adc
mov
stos
add
jb
add
mov
dec
fcoml
lds
andb
lds
adc
dec
sbb
pop
mov
scas
inc
jo
pusha
mov
dec
jnp
jo
stc
jne
sub
jl
insb
adc
call
mov
jmp
and
cli
lahf
mov
mov
mov
pop
or
adc
out
or
mov
test
int3
jno
jp
add
add
cs
inc
jbe
test
sar
mov
arpl
mov
adc
push
inc
sbb
ss
popa
mov
pusha
mov
jo
add
loope
int
xchg
shlb
dec
push
add
les
rclb
push
cltd
addb
mov
js
or
icebp
add
jle
in
sub
inc
mov
jmp
lods
out
mov
daa
lcall
add
ret
and
fsubs
push
pop
mov
mov
clc
push
repnz
stos
std
in
aad
cwtl
adc
mov
dec
push
mov
pmulhw
sub
add
or
add
test
and
xchg
sbb
and
mov
pavgb
xor
ljmp
or
xor
mov
shlb
je
jns
xor
pushf
cwtl
and
imul
xor
push
and
jo
xchg
mov
xchg
ljmp
fcompl
jne
outsl
xchg
shll
and
int3
repnz
push
push
loopne
test
adc
cltd
sub
cmp
scas
loopne
cmp
punpckhbw
sbb
and
sbb
adc
int3
imul
adc
pusha
cmp
lret
mov
adc
fldl
fidivrl
cmp
loopne
fdivr
outsb
mov
adc
popa
lock
faddl
xor
test
cld
mov
pop
dec
push
fsubrl
inc
sahf
jne
les
nop
pop
inc
sbb
mov
push
cmp
push
nop
sbb
add
lahf
sub
call
dec
or
imul
cmp
adc
test
test
sub
repz
fs
hlt
adcl
and
shl
ret
inc
lds
out
mov
les
jmp
push
arpl
push
in
imul
gs
ss
sti
dec
mov
shrb
pop
jge
push
sub
dec
out
xor
inc
movsb
in
push
push
adc
dec
out
mov
call
pop
sub
push
rolb
popw
test
and
outsb
push
sub
addb
add
sub
add
mov
mov
lods
popa
mov
push
push
aam
xor
sub
fsub
sub
sahf
arpl
cmpsb
mov
or
movsb
outsb
or
pop
js
cmp
les
pop
cmpsb
out
fs
cmp
add
add
pop
call
xor
in
jo
cwtl
lods
and
push
mov
in
fimuls
adcl
and
ret
pop
and
pushl
sub
add
jg
jbe
jns
push
dec
add
pop
mov
mov
ja
mov
mov
rclb
mov
loop
xorb
and
mov
add
and
dec
push
xor
xor
shlb
popa
sbb
jmp
push
jmp
or
xor
push
stos
loop
xchg
stos
and
adc
daa
dec
sub
inc
ljmp
sbb
in
or
icebp
fs
stos
fsub
loopne
mov
push
popa
mov
clc
rorb
je
insb
jmp
cli
add
add
inc
mov
fmull
fsubs
add
mov
jl
add
idivl
call
roll
push
loope
push
inc
and
je
loope
inc
rol
push
roll
test
ljmp
data16
add
call
or
nop
add
or
add
ds
jg
mov
subb
jbe
mov
mov
bswap
or
test
push
xchg
rolb
negl
hlt
mov
add
stos
inc
js
push
dec
xchg
call
sub
or
inc
jno
fdivs
dec
push
mov
jl
or
insl
sbb
and
jo
cwtl
mov
and
adc
push
je
arpl
add
test
xchg
inc
pushf
sub
and
sub
lods
rclb
cmc
add
test
mov
sbb
pop
mov
xlat
dec
mov
inc
cs
add
insb
and
aas
mov
dec
xor
xor
cmp
insl
jge
xor
sub
cmp
in
pop
ljmp
shll
xchg
call
dec
lret
lods
dec
lcall
inc
mov
jae,pt
xor
mov
loop
arpl
je
hlt
je
sub
fadds
call
adc
inc
or
decb
or
dec
je
jecxz
arpl
adc
pushf
sub
out
mov
clc
jno
call
imul
les
sub
mov
xchg
js
mov
dec
mov
adc
xlat
es
xor
jo
mov
jne
mov
and
mov
outsb
sbb
push
sub
lods
mov
jp
ss
stc
mov
xlat
mov
push
jg
adc
mov
mov
cld
shrb
sbb
adc
dec
cmp
xchg
dec
testb
lea
loop
mov
pop
mov
sbb
push
jle
sti
push
test
rcrb
add
mov
daa
xorl
inc
dec
pop
mov
sbb
mov
xor
hlt
inc
adc
mov
cltd
cltd
cwtl
and
mov
adc
std
lock
pop
cmp
adc
pop
or
push
mov
lods
movl
pusha
nop
int
pop
sub
sarb
jo
xor
sbb
mov
add
jb
jle
pushf
add
mov
cld
int3
pop
push
test
xor
stos
rcrb
sub
push
pusha
sub
or
cmp
add
and
inc
imul
aam
cmp
xchg
ss
scas
add
mov
sub
adc
daa
je
and
inc
xor
push
or
sub
adc
sbb
add
mov
stos
clc
ds
lods
das
test
imul
inc
xor
mov
add
js
adc
in
inc
enter
inc
pop
pop
loope
pop
lcall
jl
shlb
cmp
and
sahf
jne
ret
shlb
shlb
adc
test
leave
cmp
jbe
sbb
int3
xor
movsb
add
jmp
ja
xor
adc
lock
sbb
rdtsc
mov
pop
pop
lret
loope
cltd
mov
rorb
out
and
pushf
or
dec
pushf
sbb
sub
aam
push
push
mov
fcoms
jne
fsubrl
movsb
add
in
and
sub
mov
ljmp
or
xchg
lahf
icebp
sub
add
out
dec
arpl
cld
mov
sbb
mov
xlat
jne
jg
pop
imul
sbb
add
mov
jne
add
inc
push
jo
and
scas
inc
adc
pop
pmullw
mov
xor
fucomip
stos
mov
out
movsb
cli
mov
inc
cwtl
movsl
inc
repnz
mov
jl
mov
sbb
aam
sbb
pop
xor
inc
and
sub
jne
mov
pop
xchg
rolb
inc
les
mov
xchg
in
push
inc
mov
call
rcrl
dec
sub
add
or
jo
mov
mov
sub
pushf
pop
stos
mov
les
push
push
mov
inc
cld
sub
test
lcall
xchg
inc
dec
inc
and
add
and
aas
push
sub
dec
enter
imul
mov
test
push
push
pop
xchg
aam
xchg
addr16
test
cs
adc
bnd
mov
cli
and
add
ret
mul
cmp
ret
xor
and
push
and
or
dec
lods
jne
inc
fildl
or
adc
pushl
js
fistpl
jp
and
cmc
or
mov
pop
mov
push
out
xchg
dec
fldcw
movsb
add
push
mov
adc
je
loopne
mov
outsl
ljmp
xchg
lcall
mov
in
lods
cmpsb
adc
inc
push
pop
xchg
andb
push
decb
test
push
mov
inc
imul
jmp
std
insb
imul
inc
sbb
std
scas
mov
inc
pop
jmp
pop
or
cmp
and
push
pop
shr
jl
subb
pusha
inc
std
sbb
cmp
in
lds
push
test
cmc
loopne
push
mov
inc
sbb
lods
lods
xor
adc
pushf
xchg
pop
in
mov
aaa
inc
fdivl
dec
imul
mov
jle
cltd
pushf
mov
andl
jl
dec
push
test
mov
hlt
lock
das
pop
leave
dec
fsubrl
pushf
add
loope
lods
jb
mov
mov
dec
add
mov
inc
shrb
test
mov
loopne
popa
or
fld1
scas
cmp
jl
aam
test
adc
sbb
add
xor
adc
xor
call
inc
frstor
or
mov
call
shll
sbb
cli
push
push
test
mov
push
xor
lods
frstor
sbb
mov
hlt
mov
or
push
inc
iret
cmc
jl
leave
add
inc
or
mov
cli
es
jo
inc
mov
xchg
dec
add
or
nop
jo
mov
adc
dec
inc
bound
sbb
bswap
push
mov
push
and
inc
shl
push
inc
enter
inc
subl
pop
arpl
movl
sub
push
jle
pop
pop
hlt
sub
enter
dec
inc
or
lret
fdivs
xor
popa
add
adc
mov
xchg
loope
pop
and
inc
xor
shlb
fs
call
std
xchg
fsubs
roll
inc
or
xchg
dec
sti
mov
andb
ljmp
xchg
test
xor
mov
loopne
dec
fs
js
pop
mov
cmpl
cld
push
test
out
jo
add
jg
dec
cld
jne
xchg
andb
dec
xor
pop
lock
sar
cmp
pop
pusha
pusha
xor
je
mov
add
cmp
pop
jle
call
adc
stos
clc
aaa
xor
int3
jbe
push
dec
adc
in
inc
loope
and
add
add
inc
loop
push
sub
cmovns
mov
imul
xor
xchg
rorl
adc
cwtl
mov
push
subps
call
mov
pop
jo
adc
hlt
mov
adc
mov
jmp
lock
mov
xlat
jb
and
inc
or
shrb
mov
and
jns
or
pop
daa
shlb
sub
call
stc
push
dec
roll
lcall
pop
stos
xor
push
dec
xor
push
mov
sti
popf
data16
cwtl
in
push
sub
adc
mov
xchg
pop
fcoms
dec
dec
call
or
pop
ret
or
sbb
cmp
jmp
jae
add
mov
data16
stc
ret
loope
fs
push
mov
cwtl
sbb
or
jo
nop
or
adcl
cmpsl
mov
addl
sbb
subb
xor
mov
js
xor
sti
addr16
sub
or
popa
and
push
push
adc
cs
add
cmc
push
dec
inc
scas
callw
jno
push
sti
xchg
clc
xor
sbb
call
inc
call
pop
cwtl
mov
dec
lods
add
daa
push
add
rolb
aam
sub
xchg
xor
or
sub
jle
mov
addb
jne
push
push
call
sti
dec
test
test
sbb
pusha
add
dec
sbbl
stos
sub
dec
jl
cmp
pop
mov
mov
add
and
add
mov
xor
xor
scas
mov
cmp
adc
mov
sub
push
test
insl
inc
add
mov
xchg
jmp
push
jnp
nop
in
and
mov
aam
xchg
pushf
jecxz
outsl
in
sub
xor
mov
add
or
subb
mov
icebp
loopne
cmp
cmpb
jne
test
call
mov
pop
or
and
test
xor
mov
shrb
adc
sub
dec
int3
pop
imul
push
sbb
ds
les
and
loop
addr16
xlat
adc
and
mov
aad
add
cmp
mov
repz
and
dec
add
hlt
insl
nopl
leave
xor
add
xor
shlb
stc
dec
ljmp
cmp
dec
ljmp
ljmp
add
adc
in
call
inc
sub
test
clc
dec
mov
jg
dec
mov
adc
jge
add
ss
push
jmp
adc
cmp
lds
jge
clc
fs
mov
fadd
add
mov
push
hlt
incb
lds
or
cwtl
test
push
sbb
or
testl
inc
inc
or
stos
push
jge
or
adc
adc
ljmp
push
mov
inc
stos
fucomip
xor
fs
mov
push
icebp
pop
mov
mov
pusha
aad
mov
testb
or
add
mov
aad
dec
inc
insl
and
adc
out
cmp
add
enter
orb
sub
mov
js
or
xor
mov
add
add
mov
and
or
cld
adc
popa
aam
mov
scas
icebp
dec
dec
ljmp
xchg
sub
cmp
add
movaps
enter
addb
orb
pop
sub
push
pop
adc
add
call
inc
xor
orb
rolb
sub
or
dec
sbb
add
push
ljmp
jmp
in
cmp
test
js
mov
popa
dec
and
dec
call
push
adc
push
xor
sti
testb
or
mov
jl
loop
cmp
mov
or
xor
adc
cwtl
gs
popa
adc
dec
std
mov
loope
dec
lods
xchg
jo
mov
xlat
inc
mov
inc
dec
sbbl
mov
rcrb
call
cmp
insb
xor
negb
mov
mov
cld
push
out
pop
xor
lock
push
pop
jle
inc
dec
adcb
mov
push
cmp
or
orl
jmp
stos
hlt
fcomps
movsb
insl
dec
int
and
aaa
cmpsb
push
jo
mov
orl
pop
pop
adc
cmp
xor
mov
cmp
out
js
dec
inc
or
cltd
dec
enter
inc
sub
mov
push
push
adc
sub
adc
adc
dec
inc
or
adc
xor
pop
popa
add
push
mov
call
xor
pop
or
mov
lahf
hlt
int3
cwtl
or
inc
sub
mov
sub
movsb
xor
shlb
adc
and
dec
test
xor
dec
enter
push
add
add
dec
inc
xor
lcall
sti
outsl
jmp
add
cmp
xor
in
fwait
js
push
inc
or
pushf
xor
and
xor
push
mov
scas
mov
mov
mov
je
je
in
mov
xchg
push
pop
pop
mov
add
add
enter
sbbb
add
mov
add
mov
movsl
inc
lock
adc
je
mov
adc
dec
xchg
sti
and
add
xchg
xchg
mov
insl
loope
cmc
aad
pop
adc
cs
sbb
icebp
dec
and
fsubrs
pop
movsb
and
jl
and
int
mov
cmpsl
loop
inc
call
mov
clc
cmp
ja
add
jnp
hlt
mov
out
cwtl
push
or
cld
in
mov
mov
dec
mov
pop
mov
push
mov
fs
jl
test
push
adc
in
add
add
cltd
dec
and
push
mov
or
add
xchg
xchg
mov
jg
js
or
add
mov
adc
dec
jecxz
in
rolb
push
push
adc
call
push
mov
xor
adc
rclb
add
pop
push
hlt
pop
dec
das
pop
and
mov
ret
dec
cmp
or
in
pop
pop
enter
lock
push
add
and
mov
push
pop
sbb
xor
call
movsb
sbb
jmp
test
call
mov
jge
das
dec
mov
int3
and
xchg
lret
enter
ss
clc
fldz
inc
pop
gs
or
mull
or
test
ja
aas
js
push
xor
sub
mov
push
jg
jl
shl
orb
jl
jl
mov
les
mov
adc
push
popa
nop
xchg
cwtl
loop
cmp
add
in
dec
dec
sarb
jne
test
imul
shl
dec
subl
fsubr
push
add
and
xchg
and
push
enter
push
xchg
loopne
pop
loop
std
inc
lea
xchg
add
orl
mov
pop
inc
test
mov
adc
int3
mov
das
sub
scas
int3
mov
push
mov
pop
add
fabs
jg
mov
xor
cmpsb
enter
test
and
dec
add
and
add
nop
xlat
and
pop
out
je
aam
fdivl
pop
sar
adc
push
hlt
sbb
hlt
mov
or
cmp
mov
push
lahf
jns
push
mov
add
cltd
lret
js
adc
adc
xor
or
insl
out
pusha
mulb
jmp
push
and
or
push
clc
xchg
add
imul
cld
xor
test
mov
stos
xor
jl
sbb
or
jmp
nop
sbb
sbb
cmp
jl
cmp
gs
fsts
test
mov
sub
dec
xchg
js
pop
sbb
bound
ljmp
inc
mov
pop
in
or
enter
dec
pop
aad
cmp
xorb
int3
loop
add
inc
jecxz
add
outsl
push
push
xor
mov
test
fsubs
inc
add
ss
aam
divl
adc
mov
stos
fs
pusha
jb
repz
add
sub
or
add
fcmovu
add
mov
insl
add
push
xchg
mov
sub
pop
outsb
fcomps
and
dec
jl
sbb
cmp
stos
push
pop
movsl
lods
in
in
xchg
pop
arpl
xchg
je
pop
cmp
push
notb
bound
jmp
or
sbb
pusha
mov
mov
sub
aas
je
add
jg
aam
push
mov
loop
mov
add
call
jl
adcl
sub
adcl
sbb
insl
mull
adc
insl
pop
call
cmpsb
subb
inc
jno
xor
inc
xor
cld
inc
xchg
jnp
ret
jns
xchg
sbb
gs
add
and
test
cmp
jbe,pn
adc
push
fcoms
jb
push
int3
pop
je
hlt
add
mov
lock
js
and
inc
mov
cltd
arpl
mov
je
call
pop
mov
jge
inc
or
jo
mov
inc
add
xchg
enter
addb
mov
sbb
jo
pop
stc
inc
je
adc
push
pop
cmc
out
jl
lret
or
les
or
and
rclb
loop
dec
mov
pop
repnz
or
inc
in
xchg
in
call
cmp
lahf
movsb
push
lcall
push
add
mov
or
add
xlat
xor
adc
add
xchg
add
or
les
jbe
call
rolb
cwtl
adc
fmull
dec
jo
dec
hlt
mov
mov
enter
jns
xchg
adc
mov
mov
mov
sub
popf
out
xor
xor
add
jg
cmp
and
mov
adc
test
call
xor
cltd
mov
mov
lock
je
pop
push
fsubs
insb
pop
aam
push
push
shl
adc
mov
clc
loopne
or
jmp
push
jle
xchg
scas
mov
mov
push
push
dec
nop
dec
inc
mov
mov
scas
shl
cmpb
repnz
pushf
lret
sbbl
inc
test
jge
xor
stc
call
pop
icebp
aam
cmc
xchg
add
sahf
cld
les
rcrb
or
add
sub
bound
mov
cmp
sbb
dec
or
roll
lea
cld
lret
inc
stos
cmp
fdivrs
jp
or
mov
adc
sbb
mov
repnz
mov
mov
les
push
shlb
add
or
loopne
add
sbb
js
jmp
or
mov
push
imul
push
mov
leave
cmp
movsb
mov
decl
addb
xor
pop
mov
and
fadds
popf
adc
mov
clc
les
insl
aas
mov
rcll
xchg
test
xlat
xor
loope
adc
loop
adc
in
add
loope
sub
push
push
movsb
loope
inc
sbb
fildl
dec
movsb
or
adcl
xor
mov
into
pop
aam
jae
mov
mov
dec
adc
sub
inc
lods
les
call
in
push
and
lods
daa
insl
pop
push
xchg
in
mov
mov
and
mov
test
xor
add
pop
imul
jl
push
xor
dec
addl
adc
jns
lods
push
pop
inc
test
jne
outsl
mov
les
push
orb
cmp
int
and
pop
inc
adc
cld
sahf
cltd
push
aaa
mov
scas
xchg
jmp
nop
pop
addb
orb
push
lods
and
xchg
fcomps
mov
call
les
fiadds
enter
add
shll
xor
xor
dec
adc
int3
add
cltd
inc
int3
fcoml
imul
stos
inc
mov
add
pusha
cmp
dec
mov
loopne
out
jmp
xchg
movsl
mov
push
cmpsb
mov
xor
in
mov
push
lds
cwtl
jp
repnz
mov
dec
or
lods
push
jns
mov
or
in
sbb
inc
hlt
xor
push
lea
xor
movsl
inc
cmp
aam
push
inc
mov
shrb
add
rorb
iret
pop
mov
loopne
psubusb
je
and
or
add
addb
shlb
ds
bound
mov
popa
clc
jl
push
dec
adc
or
and
mov
inc
test
adc
pop
xor
int
xchg
leave
js
in
pusha
push
or
call
sahf
out
and
loopne
dec
add
fsubr
push
bound
inc
or
fs
lock
and
mov
inc
daa
pop
loop
arpl
xorl
nop
or
je
call
sbb
inc
mov
jecxz
daa
aaa
pop
adc
js
dec
dec
jmp
xor
aad
or
pop
or
stc
jae
lret
inc
lock
lahf
loope
outsb
inc
lret
fsubl
adc
test
mov
mov
sbb
xor
cmp
inc
dec
pusha
cmpb
jbe
mov
sbb
mov
push
sub
xor
pop
sarl
scas
cwtl
mov
shlb
clc
orb
insb
push
push
mov
sub
in
or
call
sbb
mov
xor
xchg
add
lock
in
xlat
lret
jl
gs
addb
push
sub
mov
lea
loope
gs
lods
not
cmp
cmp
loop
sub
pop
popa
and
adc
movsb
dec
addl
addb
les
lock
sub
add
mov
andb
mov
jbe
and
loop
mov
shrl
pop
jns
fcoml
nop
outsb
test
pop
or
jne
mov
lods
cwtl
addl
in
adc
xor
xchg
test
or
pop
outsb
push
mov
loope
sub
inc
mov
stos
adc
cmp
data16
jns
cld
cmp
xor
jg
dec
dec
movsb
dec
push
mov
mov
sub
sub
test
or
inc
push
sbb
test
sub
fs
sbb
jmp
push
test
imul
xor
push
mov
jo
push
jae
addb
dec
inc
leave
or
mov
leave
adc
scas
mov
arpl
pusha
test
xor
hlt
test
dec
in
pop
lods
sub
lahf
mov
repnz
inc
push
shrb
scas
test
add
mov
sbb
and
sub
adc
dec
test
mov
and
pop
mov
inc
push
cwtl
xchg
jns
enter
int
lock
pop
call
push
mov
loopne
push
aam
mov
push
cmp
sub
adc
mov
call
mov
pop
adc
sub
enter
push
inc
sbb
in
pop
sbb
push
lcall
adc
sbbb
ljmp
ss
pop
stos
and
inc
inc
or
sbb
adc
jo
sbb
push
pop
call
je
pop
xchg
xchg
mov
push
xchg
int3
rclb
dec
pop
mov
orb
das
orl
fnstsw
les
repz
sbb
lock
lods
punpckhdq
insl
lds
push
and
aam
or
add
cmp
je
or
xor
int3
jl
inc
xchg
fadds
gs
add
jno
ret
add
mov
push
adc
xchg
or
xchg
std
fs
jo
xchg
pop
cmp
dec
push
fadd
xor
xchg
push
fnstsw
and
in
cmp
int3
ds
sti
les
insb
jl
push
sub
ret
push
push
inc
inc
mov
cld
mov
xor
mov
sub
cmp
insl
mov
orb
push
add
sub
lcall
dec
push
jo
xor
adc
sbb
xlat
int3
sbb
das
aam
push
inc
pushf
loop
xor
inc
or
stos
and
dec
stos
lock
or
das
int
sbbl
fcompl
and
cmp
pop
cmp
call
sub
inc
mov
push
add
ds
pusha
pop
xchg
push
or
mov
or
rol
or
pop
adc
and
inc
subl
lahf
dec
or
inc
adc
or
pop
pop
adc
dec
lds
or
cmpsb
inc
mov
test
dec
push
jo
scas
push
leave
shlb
inc
mov
cmc
adc
dec
push
in
into
xor
add
lds
or
xchg
je
ss
add
test
aas
sti
push
add
inc
and
xlat
rep
sbb
push
inc
adc
cmpb
daa
enter
xor
pusha
cmp
insb
sbb
push
aam
add
jmp
adc
jnp
adc
sbb
mov
xchg
dec
adc
jmp
add
aaa
loopne
add
mov
std
les
fadds
data16
jae
dec
and
or
gs
add
jl
or
xor
xchg
jbe
sbbl
mov
pop
imul
movsb
or
adcb
inc
ret
inc
mov
cmp
mov
enter
jns
ljmp
fdiv
add
cmp
jne
mov
enter
test
lahf
jl
into
jmp
adc
call
cmp
aaa
scas
test
mov
push
enter
pop
roll
cwtl
mov
sbb
mulb
jecxz
inc
xor
loop
aad
sub
je
nop
lods
and
dec
and
insb
js
xor
mov
push
ret
pushf
push
cld
test
jno
add
shlb
lea
loopne
pushf
ljmp
lock
mov
jp
js
dec
pop
mov
in
inc
adc
mov
cwtl
fadds
cld
cli
std
pop
pop
or
add
sbb
js
inc
push
pop
call
and
xchg
pop
push
inc
push
cld
or
cmp
and
fs
and
jno
lds
je
aas
das
or
push
int3
xor
enter
mov
scas
mov
int3
cmp
add
jmp
aam
inc
xorl
xchg
push
push
lcall
pop
dec
sarb
mov
fsubrl
call
dec
insl
add
mov
sub
nop
jo
mov
xor
jl
adc
mov
je
outsl
subl
inc
adc
jne
mov
jo
aam
and
lahf
xchg
pusha
push
inc
in
std
vmread
imul
lea
mov
enter
push
xchg
mov
mov
add
test
movsl
out
xor
jns
push
sti
sbb
rolb
push
mov
cmpsb
in
and
push
add
std
mov
andb
aad
and
add
mov
cmpb
cli
shlb
mov
sbb
fcmovnb
and
jne
movsl
test
mov
xchg
insb
rep
add
inc
mov
fsubrl
mov
dec
add
loop
xchg
in
mov
js
xor
mov
call
mov
mov
insb
add
out
inc
xor
push
outsb
testl
addr16
mov
push
mov
movl
nop
xorb
sbb
int
cmp
dec
ljmp
cli
cmp
test
orb
mov
mov
mov
mov
arpl
add
push
hlt
call
aam
mov
aas
shrl
add
sbb
sbb
call
dec
daa
test
pop
cwtl
mov
test
loope
inc
dec
rcll
cld
mov
loop
mov
xor
movsl
stc
test
clc
aam
call
call
xor
inc
add
sbb
add
icebp
pop
and
std
loopne
mov
mov
mov
jno
insb
rcl
idivb
add
or
sub
arpl
mov
mov
int3
rcrl
mov
mov
nop
dec
aas
addl
or
addr16
pusha
sub
pop
sbb
mov
lea
mov
stos
inc
clc
jno
mov
imul
mov
or
sbb
in
xor
adc
xchg
test
mov
addl
and
bound
pop
mov
cmp
push
mov
or
and
in
dec
push
or
mov
adc
js
sub
sub
in
aam
and
xchg
dec
and
pusha
or
add
mov
and
sbbw
std
push
pop
cmp
add
mov
js
and
mov
loopne
cli
in
mov
sbb
push
adc
pusha
mov
pusha
jne
mov
clc
cmp
push
into
scas
inc
fs
movb
cwtl
or
mov
add
cltd
jo
and
or
push
cltd
xchg
pop
or
loopne
xchg
ret
jmp
adc
xor
xor
inc
orb
xor
mov
or
mov
mov
or
mov
mov
subb
fcmove
testb
mov
mov
sub
insb
push
xorl
mov
mov
shrl
push
outsl
shlb
pusha
inc
mov
xchg
int3
push
or
mov
pop
xchg
add
inc
cmp
push
xchg
jo
pushf
xchg
sub
test
or
in
jge
jo
dec
cld
lahf
cli
dec
adc
test
inc
in
or
or
jb
and
add
pop
lahf
xchg
subl
into
aam
xor
loope
rcll
data16
call
jo
nop
jo
xor
push
dec
rcrb
les
mov
xorb
fcomps
je
lret
xor
add
loope
je
in
test
shl
test
call
daa
aam
mov
inc
test
and
add
call
fs
adc
cmp
loop
inc
adc
adc
in
lea
cmp
and
add
or
testb
sub
dec
adc
cmp
dec
enter
cli
je
test
jne
xchg
hlt
negl
jmp
mov
hlt
test
xchg
adc
call
daa
cmp
cmp
and
jne
dec
outsb
push
and
inc
cltd
das
std
in
and
out
loope
jo
mov
jne
mov
in
jle
jbe
mov
mov
test
cwtl
dec
sub
push
adc
dec
dec
lods
rorb
mov
hlt
cmc
test
cld
lods
xor
inc
in
cld
orl
and
and
ret
jne
mov
daa
pop
not
mov
dec
ss
or
mov
clc
or
xchg
xor
add
test
enter
mov
or
pop
inc
dec
cs
mov
mov
sbbl
jle
sbb
enter
jne
lcall
jle
cld
jb
and
or
fs
jb
fdivrl
or
or
inc
and
nop
loope
dec
add
pop
leave
inc
aam
or
mov
xchg
lds
lret
in
xchg
sbb
loopne
iret
ficoms
clc
addb
cmp
cmp
pop
jle
sub
jnp
sbb
test
movsb
clc
ja
sti
xor
xchg
into
clc
sbb
xchg
or
je
adc
add
and
in
mov
adc
mov
loopne
cmp
and
fcomps
out
and
mov
or
jl
xor
in
loope
ds
lods
push
dec
les
pop
mov
fmuls
xor
push
loopne
cmpxchg
cmp
push
sbbb
inc
mov
ljmp
outsl
pop
jo
sbb
psrld
loop
orl
push
or
sbb
inc
shll
mov
aam
mov
bound
push
cmp
push
adc
push
pop
nop
test
and
cli
sub
jb
sub
pop
mov
mov
cltd
outsb
or
cli
push
add
jns
add
inc
decb
xorb
xrelease
hlt
push
pop
cltd
inc
je
adcl
inc
mov
or
push
nop
pushf
dec
jne
rol
fs
sbb
addl
push
adc
jl
or
lods
gs
push
je
add
mov
or
loopne
adc
jne
outsl
and
addr16
and
gs
lods
outsb
popa
push
push
mov
cs
mov
loopne
or
call
mov
sbb
and
dec
or
sub
rolb
mov
dec
adc
mov
sub
and
mov
fs
fcmovbe
mov
and
and
add
leave
mov
and
mov
inc
push
mov
inc
sub
cli
dec
pop
stos
mov
add
or
push
cld
sub
test
shll
cmovs
xor
mov
loop
dec
mov
hlt
cmpsl
aam
call
dec
xor
call
sbb
popf
push
movsb
cmp
jl
mov
xor
leave
dec
daa
jne
fsubrl
and
adc
or
call
scas
mov
jno
nop
lock
sub
inc
pusha
cmp
loopne
call
pop
mov
pop
mov
leave
cmp
inc
les
add
mov
pusha
adc
mov
mov
cmpsl
ret
dec
xchg
test
inc
clc
divb
and
adc
aad
mov
cwtl
push
jmp
jne
cld
clc
aas
addr16
sub
enter
or
hlt
jmp
les
push
and
jg
sbb
mov
rorl
loope
repnz
in
pushf
nop
movsb
or
shlb
and
stos
rcrb
sbb
int
cmpsl
call
xor
or
adc
ret
xchg
mov
loopne
insl
xor
add
push
shl
inc
insb
mov
add
mov
mov
and
je
xor
lcall
dec
sbb
idivl
punpckldq
or
leave
ja
lock
addl
arpl
pop
mov
add
int3
mov
and
mov
xchg
shlb
das
push
inc
or
inc
popa
pop
add
sub
push
in
adc
mov
push
rclb
pop
ljmp
insb
jge
call
cwtl
lahf
xor
pop
lcall
js
dec
ret
std
fs
push
sub
push
sbbl
les
in
add
mov
lock
loope
or
lock
sub
pop
dec
jle
xchg
in
pop
and
pop
add
xchg
pop
xchg
std
ror
pop
loop
jo
pop
mov
or
mov
pusha
mov
mov
and
rclb
and
dec
lock
or
mov
cmp
pusha
outsb
adc
es
xchg
push
das
jo
and
enter
pusha
inc
jne
pop
xor
cmp
lock
jle
mov
push
xor
push
xchg
pop
and
lret
xchg
push
adc
je
pop
pop
cmp
cld
pop
cs
adc
cmp
sub
insl
push
call
je
or
mov
call
nop
cwtl
aam
sbb
mov
add
xor
lret
loop
jl,pt
inc
or
cwtl
xchg
dec
or
mov
xchg
xor
mov
mov
xor
subb
jbe
in
test
mov
repnz
and
int3
xor
adc
hlt
xor
xor
xor
ja
cmp
or
imul
and
lock
mov
cmp
jnp
in
js
sbb
or
jg
clc
mov
out
pop
add
dec
adc
orl
add
ret
int3
push
sbb
dec
jge
jl
push
add
aas
jge
add
nop
and
xor
sub
sub
lods
mov
pop
daa
test
popa
sub
jnp
movsb
cli
push
or
and
dec
push
cmp
jo
je
dec
and
orb
pushl
inc
pop
pop
cmpsl
je
scas
adc
add
add
sub
xor
neg
fcomps
data16
dec
bound
call
fs
call
xor
add
push
call
mov
mov
adc
cmp
lret
mov
mov
mov
mov
ror
add
push
push
js
stos
jmp
fwait
pop
jbe
add
out
inc
or
inc
push
test
and
and
jge
sbb
enter
pop
ret
les
mov
roll
mov
nop
sub
mov
inc
adc
add
xor
mov
mov
and
stos
jmp
xor
les
pusha
push
cmp
mov
push
adc
xchg
les
push
pop
add
enter
bound
rorb
sbb
sbb
call
js
xchg
jmp
push
xchg
in
cld
add
xchg
mov
dec
das
xchg
jns
add
ret
push
in
xchg
pop
mov
mov
int3
mov
or
push
xor
push
call
push
inc
sub
cmp
lahf
mov
sub
or
psubsb
pop
fs
push
and
xor
xor
andl
das
test
sbb
stos
pop
movsb
adc
js
aam
adc
and
js
jne
jnp
rorb
out
inc
cmpsb
sbb
dec
sti
cmp
das
add
sub
add
icebp
xor
sbbl
insl
adc
call
mov
sarb
pop
mov
pop
mov
in
ret
call
or
or
enter
jmp
xchg
js
mov
ret
mov
cmp
enter
add
lods
sub
ljmp
rcrl
flds
jo
dec
xor
sub
add
ret
jne
dec
jb
int3
inc
and
aas
adc
dec
dec
jle
pop
loop
mov
jge
adc
scas
mov
xchg
pop
enter
add
xor
shl
push
add
call
mov
test
xor
test
xor
jae
add
mov
popa
in
adc
addb
mov
test
popa
jmp
add
imul
sub
ss
cld
movsl
pop
les
push
call
enter
cltd
incb
aaa
add
aam
mov
cli
jns
push
mov
pop
mov
add
out
push
push
sbb
ljmp
roll
pop
mov
rcrl
sub
mov
call
push
lock
cmp
pop
lock
mov
das
pop
in
pop
pop
jmp
pop
std
ss
dec
daa
int3
shl
inc
insb
cld
les
or
adc
and
adc
push
dec
xlat
push
call
dec
repnz
jl
and
jg
mov
fcoml
xchg
and
icebp
adc
xchg
pop
bound
sbb
inc
pusha
or
xor
jne
pushf
xchg
lcall
or
cwtl
movsb
mov
fsubp
dec
add
dec
out
and
mov
imul
add
xor
ss
dec
in
add
call
loopne
jecxz
xor
push
ljmp
cmp
add
dec
cmp
and
fs
test
add
aaa
mov
leave
jle
rcl
xchg
mov
imul
sbb
add
push
data16
mov
test
test
sub
or
shr
pop
add
dec
lock
nop
std
add
and
add
addb
adc
cltd
xchg
mov
in
ljmp
pop
ds
add
mov
and
xorl
add
pop
je
or
stos
js
inc
mov
add
loope
daa
mov
shrl
sub
dec
or
push
mov
enter
adc
or
dec
sub
out
insb
add
jl
or
or
cmp
dec
test
dec
adcl
in
orl
scas
rcrl
add
call
lcall
sbb
jne
mov
lcall
bound
incb
movzwl
push
fisubs
inc
inc
int
cli
and
push
rclb
sbb
in
dec
sbb
fsubr
shlb
mov
lock
jo
ljmp
xor
mov
push
nop
ja
test
or
mov
pop
sarb
repz
int
in
sbb
or
adc
mov
and
add
movl
xor
jmp
dec
adc
push
test
pop
jo
push
adc
jne
xor
mov
mov
es
mov
rolb
inc
in
pusha
ja
leave
inc
push
jl
mov
mov
dec
insl
adc
inc
cld
je
jp
sbb
or
cmp
cmp
xor
jae
add
mov
addl
fdivr
lcall
pop
and
dec
cmp
mov
xchg
mov
mov
pop
mov
jno
imulb
push
scas
int3
sub
or
cld
icebp
psubb
mov
mov
hlt
test
fadds
sub
loopne
pop
mov
stc
in
outsl
stos
adc
mov
call
mov
inc
or
jg,pt
jo
inc
pop
imul
cwtl
adc
clc
test
arpl
push
clc
pop
adcl
fdivs
loopne
cmp
xor
pop
or
ret
inc
mov
rorl
sbb
jb
orl
mov
dec
adcl
mov
inc
cmp
insb
divb
adc
sbb
cld
in
in
xor
or
fsub
sbb
pop
or
rolb
push
mov
or
mov
aad
cmp
add
push
cmp
adc
clc
pop
xchg
clc
sbb
test
roll
lahf
cmp
popa
or
or
inc
mov
jge
adc
adc
in
cli
mov
lock
andl
or
push
aam
hlt
cmp
xor
push
nop
jl
adc
stos
push
cmp
outsl
repz
loope
call
cld
mov
adc
or
add
jl
mov
add
fld
mov
cmp
scas
sbb
loopne
xor
sub
mov
in
sahf
jmp
pop
xchg
je
add
sbb
xlat
jle
ds
xchg
cmc
inc
aam
cmpb
mov
add
shll
lock
fsubrs
sbb
jbe
and
add
call
add
inc
clc
shrb
or
sbb
mov
int3
loopne
push
ret
add
mov
and
in
rclb
mov
push
push
loopne
movsb
dec
sbb
jnp
frstor
push
pop
jmp
mov
add
mov
jnp
cmp
jbe
sub
loopne
inc
cmp
hlt
cmp
leave
jl
rolb
inc
mov
adc
xchg
pusha
cmp
dec
inc
in
mov
pmullw
rorb
push
or
fsubs
mov
test
xor
jge
push
in
dec
movsb
fs
unpckhps
rorb
mov
inc
xor
std
add
xor
xor
loope
or
and
adc
mov
or
call
shrb
pushf
xor
int3
and
std
or
add
xor
mov
shlb
ljmp
popa
sarb
xchg
mov
enter
jge
xchg
lock
mov
loope
cmp
pop
int3
pop
cmp
add
dec
loopne
ds
dec
or
loopne
incb
pop
inc
push
add
jne
addl
sub
or
mov
add
sub
push
sbb
pop
jne
fcoms
mov
sahf
clc
mov
mov
loopne
cmp
clc
shlb
cld
cld
dec
or
cmp
dec
adc
add
decl
idivb
call
jns
les
test
sub
dec
jbe
dec
mov
rorl
scas
cld
sbb
push
cld
test
adc
les
lar
sar
or
inc
mov
or
into
jg
in
mov
adc
out
nop
adc
outsl
cmpb
push
sti
mov
sarl
push
xchg
decb
and
sbb
sbb
pop
incl
mov
clc
jne
adc
fcomps
in
push
or
call
add
mov
fadd
clc
dec
call
sub
in
push
cmp
add
clc
push
lock
inc
loop
sti
jne
popa
xor
cmp
lds
push
xor
cmp
repnz
insl
sbb
add
or
add
mov
loope
nop
and
pop
test
test
icebp
mov
es
dec
inc
int3
rolb
in
push
sbb
xlat
fdivrl
fcmovnbe
enter
and
or
test
pop
in
xor
jle
test
xor
add
xor
movsb
pop
push
or
test
ljmp
mov
insb
enter
popa
xor
mov
add
xor
movsbl
repz
iret
cwtl
mov
call
jns
dec
xchg
test
rcr
arpl
popa
and
lods
cmp
jl
cmp
mov
pusha
dec
add
pop
clc
popl
add
lds
or
je
add
sbb
inc
andb
mov
mov
sub
bound
cmp
repnz
js
in
mov
cld
or
push
test
call
sbb
xchg
and
cld
sbb
dec
or
adc
push
lret
cmp
or
inc
and
or
add
mov
nop
subl
or
add
imul
inc
mov
shl
dec
addl
adc
add
inc
and
ret
jb
adc
shrd
mov
xor
adc
push
loopne
push
and
rcrb
mov
aam
and
xor
js
add
shrl
into
shrl
jne
das
icebp
dec
leave
dec
scas
mov
into
decl
jo
and
xor
sub
loopne
sub
insb
adc
add
fidivs
or
cmc
insb
jl
cltd
das
rolb
test
ret
inc
xor
dec
inc
inc
mov
std
add
popa
sbb
lods
pushf
or
and
adc
mov
mov
rolb
adc
je
in
loopne
or
lock
inc
hlt
je
dec
imul
rcl
push
sbb
or
mov
adcb
adc
add
inc
in
aad
orl
cmpl
push
add
fdivs
or
and
dec
loopne
xor
cmp
mov
test
xchg
jle
into
or
or
jle
int3
pusha
jbe
mov
pop
adcb
es
inc
in
adc
sub
or
pop
rorb
movsb
pmullw
sbb
loopne
or
ret
adc
bound
sbb
pop
dec
in
aas
andl
mov
jmp
lea
fmull
cmpsb
mov
dec
pushf
cmp
cmp
xchg
pushf
ja
rorb
lock
add
mov
xchg
test
rorb
add
sub
sbb
daa
sbb
test
xchg
mov
mov
cwtl
out
les
in
leave
sbb
add
add
inc
in
call
aam
in
pop
cwtl
lcall
mov
dec
xorl
adc
call
js
pusha
push
lock
mov
sbb
xchg
adc
sub
fs
pop
and
sbbl
push
pop
push
test
mov
adc
and
inc
xor
and
nop
cld
and
rorb
loopne
int3
and
push
cwtl
mov
mov
cmp
mov
clc
push
dec
sbb
push
lock
push
pusha
clc
xorb
sub
adc
add
pop
jbe
push
add
push
inc
add
adc
in
nop
call
outsb
hlt
and
dec
adc
add
mov
ljmp
and
cld
fidivrs
mov
sbb
jmp
rcrb
in
push
fcoms
hlt
fsubl
and
jo
mov
cmp
pop
in
xor
call
fmuls
adc
je
adc
dec
push
pop
in
mov
dec
dec
enter
sub
cmp
cmp
xor
or
hlt
inc
jnp
adc
dec
push
int3
push
rcrl
sbb
nop
daa
test
inc
les
or
dec
shll
or
ret
xchg
shlb
shlb
inc
lods
enter
std
leave
dec
shll
inc
inc
call
in
les
test
mov
inc
shrb
adc
jl
test
dec
push
int3
add
add
inc
mov
pop
and
sarb
rol
cmp
shl
cli
cs
loopne
les
mov
adc
mov
inc
mov
sbbl
xchg
clc
out
test
clc
or
xlat
fisubrl
mov
in
mov
add
gs
nop
shlb
sub
orb
dec
cltd
jne
xorb
sbb
cld
inc
push
dec
xor
add
mov
cmp
in
sbb
dec
sub
pop
pushf
adc
cwtl
aad
push
and
dec
add
inc
add
sub
into
mov
mov
jl
andb
xor
adc
pushf
shrb
adcb
rorb
add
adc
add
adc
or
rclb
addr16
or
cmpb
pop
add
dec
push
leave
or
push
inc
int
mov
xor
dec
cld
add
mov
ret
or
add
push
and
std
push
sbb
xor
or
pushl
lret
and
cld
lea
stc
jne
sarb
lock
sbb
cld
xor
enter
push
popa
in
cmp
dec
mov
mov
daa
ds
clc
call
shrb
pop
cmp
loope
sbb
push
je
add
in
adc
test
xorl
cmp
call
and
fcompl
xor
or
sub
in
dec
add
lock
jl
mov
or
fs
add
cmc
inc
jl
add
and
es
popa
les
rcrl
add
movl
mov
sbb
sub
lock
add
je
sub
pop
dec
rorl
add
mov
cmp
mov
leave
hlt
add
push
xor
jae
push
sbbl
popa
cmp
pop
js
imul
lods
adc
bswap
insl
incl
pop
pop
mov
pop
lcall
lcall
cmp
clc
scas
jne
or
add
or
mov
jge
sbb
and
sarb
push
rolb
je
mov
pop
pop
dec
insb
cld
add
fadds
xor
rcr
shrl
rcll
push
push
xor
pusha
andb
sub
in
ja
pushf
and
push
adc
adcl
gs
fs
jne
and
sub
or
test
mov
inc
dec
test
in
mov
pusha
pop
add
hlt
filds
and
pop
xor
gs
je
mov
and
xor
into
nop
jne
aam
pop
push
test
sbb
clc
mov
cld
jnp
mov
pusha
sbb
or
test
mov
dec
jns
mov
sub
mov
test
sub
fdivl
push
popa
mov
into
rcll
or
test
shlb
dec
jbe
cmp
or
xor
add
inc
sar
inc
sahf
roll
leave
cmp
mov
and
lock
xorl
movsb
outsb
xchg
loopne
mov
les
mov
xor
jbe
jecxz
add
mov
dec
dec
sarb
dec
mov
clc
adcb
daa
addb
dec
call
iret
cmp
insl
sbb
mov
or
inc
fmull
test
outsb
pop
adc
pusha
sbb
stc
loope
push
inc
pop
cmp
shlb
int3
add
add
clc
popf
and
fdivs
lea
cli
xor
enter
inc
push
fadds
or
pop
add
and
pop
shll
in
mov
adc
sti
mov
or
sbb
mov
mov
mov
jl
dec
add
mov
dec
orb
dec
call
fwait
or
cmp
or
ds
or
fsubs
or
nop
xchg
cli
dec
mov
mov
push
int3
add
push
mov
clc
or
fcoms
test
lcall
jns
cwtl
mov
inc
adc
cmp
shr
das
sub
jmp
mov
add
insb
in
pop
imul
test
add
jmp
push
repnz
ds
mov
rolb
push
call
mov
aad
fadd
inc
jle
sub
testb
xchg
add
xor
fs
dec
xor
inc
or
add
mov
andl
cmp
cmp
push
push
popf
test
pop
aam
call
mov
push
mov
and
push
inc
inc
test
nop
idiv
test
clc
add
rorb
pop
add
push
lcall
je
cltd
sub
popa
xchg
bnd
add
call
or
jg
nop
mov
push
pop
imul
dec
orl
adc
inc
push
mov
sub
xor
mov
push
xchg
shr
js
addl
or
dec
xchg
rcl
aas
and
insb
pinsrw
int3
mov
popf
fmuls
jo
adc
dec
add
subb
fcompl
push
mov
sub
decb
ficomps
enter
and
mov
xchg
xlat
mov
and
adc
call
and
push
pop
lods
cmp
pop
pop
mov
shlb
jle
mov
mov
jp
scas
xchg
loopne
fidivrs
adc
xor
data16
or
aas
add
jne
inc
xchg
cmp
clc
cmp
adc
mov
lahf
loope
shll
aam
push
pop
js
or
jo
sbb
sub
inc
xchg
jns
push
xchg
and
mov
mov
cmp
shlb
test
and
movl
pop
xor
lods
mov
mov
ret
shr
sti
push
mov
clc
mov
mov
mov
xor
cli
xchg
push
fadds
out
mov
lahf
shll
mov
sbb
mov
cwtl
pushf
or
loope
or
das
jo
js
add
push
mov
pop
call
jo
andb
std
pop
mov
ljmp
push
xchg
pusha
test
mov
mov
cwtl
leave
call
mov
fmul
sbb
loopne
sub
call
cwtl
and
jae
lock
mov
test
aam
jl
pop
xor
inc
or
adc
push
add
pop
mov
adc
and
push
jecxz
jl
sub
mov
adc
xor
adc
clc
xor
mov
hlt
sarl
fcomip
mov
int3
loope
flds
pop
inc
jg
sub
push
loopne,pn
sar
ds
mov
inc
dec
jg
fisubs
mov
or
adc
mov
mov
gs
or
or
jg
test
xchg
mov
cwtl
gs
cmc
sti
xor
jge
push
mov
adc
push
fcoml
popw
sbb
inc
mov
gs
or
in
inc
pushf
call
shlb
or
lock
enter
out
into
cmp
adc
sbb
call
out
ret
cmc
pusha
loopne
imul
movsb
ret
mov
sti
cmpsb
jne
or
add
mov
pushf
and
call
sbb
push
fldl
fdivrl
repz
mov
bound
mov
mov
loopne
test
mov
jle
incb
push
cmpsb
shll
xchg
or
loopne
test
out
and
add
inc
mov
dec
xlat
decb
sub
jmp
mov
lret
xabort
jle
inc
and
mov
or
cmp
clc
fst
push
or
adc
fidivrs
gs
or
inc
xchg
in
pusha
test
cmpl
dec
popa
hlt
faddl
dec
adc
pop
mov
pop
mov
dec
dec
jecxz
xor
adc
and
jl
or
jne
pop
dec
or
add
adc
xchg
in
adc
in
push
push
dec
call
rcl
xor
mov
les
mov
daa
cmp
call
cmpsb
add
push
inc
push
adc
scas
xor
test
inc
lock
pop
enter
addb
adc
add
add
dec
insb
adc
xor
nop
shrb
enter
cmp
subb
mov
xor
mov
add
test
aam
ss
sbb
rcr
ja
subl
pop
pushf
out
js
pop
ret
inc
call
and
mov
cmp
add
lahf
dec
call
adc
fs
push
xor
push
nop
push
int
mov
cmp
inc
in
dec
test
sarb
dec
mov
add
test
lock
sti
inc
lock
mov
orb
dec
data16
rcl
pop
or
cmp
pop
or
enter
xor
test
cmpl
jecxz
add
nop
int
rorb
jl
test
rcrb
stos
mov
mov
push
xor
jle
sbb
out
sub
shl
icebp
sbb
xchg
in
fmul
ficoml
push
lret
mov
or
out
int
sete
inc
xorl
jge
or
adc
ljmp
insl
sti
cmp
fwait
pop
ror
cmp
inc
push
jmp
add
or
dec
pop
or
call
enter
insl
or
jne
orb
js
enter
dec
pop
mov
aas
pop
idivl
or
push
push
test
add
jmp
ds
xchg
out
test
mov
cmp
inc
add
jg
aam
mov
push
add
xchg
aam
mov
enter
mov
mov
loope
outsb
stc
and
push
mov
lret
adc
dec
or
xor
mov
rorb
call
xor
gs
int3
int
inc
iret
and
test
lock
mov
add
les
mov
jns
fdivrs
add
pop
scas
xor
jb
jnp
add
or
mov
jb
test
push
bound
add
or
add
push
cld
pop
lock
mov
xor
test
loope
pop
fdivrl
test
adc
mov
or
lock
dec
and
cld
jge
sbb
cmp
orl
adc
or
mov
cmp
daa
push
out
or
enter
adc
cmp
movsl
leave
adc
nop
mov
mov
sub
call
sti
mov
aam
jmp
dec
sub
in
rep
add
shrl
sub
cmp
dec
add
or
and
xor
es
inc
mov
mov
inc
decl
shlb
adc
cmp
dec
xchg
imul
and
sbbb
lock
or
or
add
pop
and
rcl
push
adc
and
js
add
jle
aam
sbb
sub
test
roll
sbb
les
pop
jmp
jno
call
into
pop
xor
sti
adc
add
out
cmp
mov
lods
inc
pop
jns
cmp
je
jns
mov
insl
dec
or
pop
lods
adc
dec
sbb
inc
pop
mov
icebp
fwait
and
add
mov
jnp
or
addb
sbb
xor
xchg
imul
ljmp
xchg
inc
pop
test
or
mov
sub
inc
loop
sub
decb
add
adc
lock
push
push
mov
std
lock
mov
orl
add
jbe
xchg
add
add
test
ret
adc
shlb
ret
pop
add
pop
call
jp
sub
sbb
movzwl
cmp
mov
in
sbb
fimuls
mov
push
test
adc
clc
sub
push
push
aam
pusha
nop
andl
dec
and
loopne
xor
enter
clc
insb
cmp
sarb
out
xor
mov
add
add
pop
loop
push
xchg
aad
sbb
fs
and
add
or
mov
cmp
inc
pop
jns
je
aas
cmp
cmpb
push
sbb
add
mov
inc
xchg
in
rorb
popf
jnp
xor
addl
sub
mov
cmpsl
fs
and
loopne
lea
xchg
call
dec
lahf
jl
dec
pop
mov
das
shll
mov
mov
mov
add
inc
adc
insl
pop
adcl
mov
and
mov
mov
outsl
in
and
sbb
dec
inc
or
adc
test
and
jne
or
movsb
and
in
mov
adc
add
rcr
push
push
lahf
sbb
adcb
pop
adc
or
push
and
arpl
and
dec
cmp
inc
jnp
adc
sbb
pop
xor
sbb
pop
and
dec
and
inc
xor
xor
sti
or
and
dec
add
daa
xor
xor
fisttpl
xlat
and
dec
jecxz
push
inc
movsl
add
xor
mov
dec
ret
push
bound
xchg
or
mov
adc
jg
jnp
ja
jae
adcl
adc
or
pop
dec
jo
mov
mov
test
scas
and
dec
sub
pop
sbb
cmovs
xchg
pop
and
aaa
decl
rorl
xchg
or
and
or
adc
dec
test
xor
loopne
andl
mov
mov
mov
dec
fwait
xchg
xchg
and
xchg
andl
jnp
ja
ficoml
pusha
cltd
or
sbb
or
inc
inc
inc
aas
mov
adc
and
dec
das
xchg
sub
daa
sub
adc
or
mov
adc
das
icebp
and
and
adc
adc
push
push
sti
or
mov
xor
cmp
inc
fildll
fisttpl
xlat
dec
shr
inc
sbb
adc
xchg
or
mov
inc
scas
stos
mov
dec
fwait
xchg
xchg
inc
push
mov
lahf
lret
and
fimull
cltd
mov
arpl
test
adc
and
dec
dec
xchg
xchg
xor
aas
cltd
add
adc
and
dec
sbb
sub
dec
adc
out
mov
inc
scas
sub
ja
fstl
xor
add
or
dec
out
jecxz
filds
mov
cltd
mov
or
cltd
test
or
jge
cld
les
repnz
lahf
sbb
pop
data16
sbb
mov
jnp
adc
dec
push
sub
or
adc
or
movsl
xor
popf
adc
int3
or
adc
and
adc
mov
adc
and
testl
inc
out
mov
push
shlb
dec
cltd
cmp
xor
dec
mov
mov
dec
mov
fwait
mov
cwtl
cltd
icebp
or
adc
and
fisttpll
xchg
shll
pop
pop
pop
and
push
inc
push
dec
mov
inc
and
dec
aas
xchg
cmp
aaa
inc
xor
mov
adc
and
dec
pop
xchg
sbb
pop
inc
adc
mov
adc
and
dec
pushl
repz
adc
and
dec
jecxz
fbld
fildl
mov
adc
and
dec
ret
xchg
mov
mov
enter
cmpsl
dec
mov
adc
cltd
and
and
dec
jnp
in
adc
xor
imul
addr16
arpl
cmpsb
lods
test
inc
cmpb
inc
push
push
and
jae
mov
adc
and
dec
movswl
pop
mov
adc
or
sti
and
dec
repz
out
and
inc
out
lods
adc
lret
and
or
stc
dec
adc
enter
sub
mov
fwait
adc
xchg
mov
xchg
cmpsb
adc
jmp
inc
jae
mov
and
arpl
mov
push
and
dec
dec
xchg
inc
adc
inc
and
aas
inc
cmp
mov
adc
and
dec
pop
xchg
adc
cmove
test
add
adc
decl
xor
or
and
dec
out
xchg
jmp
out
jecxz
mov
adc
and
dec
iret
xchg
lret
xor
ret
xor
mov
dec
mov
scas
and
inc
pop
data16
adc
mov
dec
jg
jnp
ja
jae
mov
sarl
pop
pop
mov
push
and
dec
dec
xchg
inc
and
aas
cmp
popf
imul
cmp
mov
test
dec
sub
and
or
sbb
insl
cltd
adc
adc
out
or
dec
out
push
and
adc
and
dec
in
or
mov
adc
fdivs
sbb
or
and
dec
sbb
adc
sub
test
movsb
adc
or
pushf
xor
cwtl
or
mov
test
mov
je
lds
rorl
dec
mov
inc
lods
test
and
dec
cltd
xchg
xchg
and
test
andl
imul
push
and
dec
cli
and
dec
inc
xchg
cmp
xor
and
and
inc
adc
or
pusha
sti
adc
and
dec
in
xchg
jmp
fisttpll
rorl
xchg
leave
and
inc
sarl
mov
lods
xchg
test
popf
mov
dec
lea
cmpl
jno
insl
xchg
imul
mov
push
and
dec
dec
mov
adc
xchg
xor
sub
and
sbb
xchg
adc
or
add
pop
bound
mov
adc
and
dec
loope
frstor
flds
mov
adc
and
dec
rcll
mov
lods
adc
xchg
popf
and
lea
mov
and
jne
mov
imul
push
mov
call
inc
cmp
xor
and
inc
sbb
adc
cs
add
dec
add
std
sbb
and
cmc
inc
icebp
in
mov
adc
and
dec
fstl
ror
mov
adc
and
dec
mov
inc
mov
inc
add
pop
and
dec
push
xchg
push
and
lea
or
mov
cltd
sub
or
adc
es
sub
gs
popa
xchg
pop
and
push
push
mov
cltd
dec
push
or
adc
and
dec
xor
and
sbb
and
inc
add
sub
cmc
xchg
icebp
and
inc
jmp
frstor
dec
aad
rcll
mov
xchg
int3
and
adc
xchg
movsl
and
xchg
adc
xchg
test
addl
and
dec
imul
adc
or
call
add
cmp
xor
sub
and
xchg
sbb
adc
or
add
xor
cmc
adc
and
dec
jmp
inc
fstp
mov
adc
and
dec
leave
xchg
lds
roll
mov
mov
lods
dec
test
inc
popf
cltd
mov
dec
mov
jge
mov
jno
insl
dec
imul
adc
dec
pop
mov
cmp
dec
xor
and
sbb
and
call
add
std
add
mov
cmc
inc
icebp
in
mov
adc
and
dec
fstl
ror
mov
adc
and
dec
mov
inc
mov
mov
dec
popf
xchg
cltd
and
mov
test
dec
jge
jns
jne
jno
mov
gs
dec
pop
xchg
pop
and
push
dec
mov
dec
inc
xchg
inc
and
xor
sub
xchg
and
sbb
adc
or
xchg
add
std
add
cmc
adc
and
dec
jmp
inc
fstp
mov
adc
and
add
dec
sbb
xor
or
or
dec
icebp
xchg
in
and
inc
in
mov
adc
and
dec
rcll
rorb
dec
mov
lods
and
mov
mov
inc
add
add
aas
push
and
inc
jne
jge
inc
mov
sbb
add
insb
xlat
cld
xor
or
movsl
sar
int3
orl
and
mov
push
ret
sbbl
add
add
or
sub
shl
mov
mov
mov
jo
std
subb
orb
add
movsb
mov
jo
mov
mov
mov
adcb
or
jne
int3
movnti
lds
test
sbb
add
sarb
adc
jne
xchg
xor
adc
dec
sub
pop
ret
decl
jo
dec
mov
fcoml
insb
add
and
cwtl
aaa
sti
dec
dec
add
inc
mov
lret
or
and
pop
outsb
or
adc
inc
and
and
xor
incl
pop
pop
jge
cmp
push
sbb
dec
or
jl
int3
call
dec
mov
or
inc
mov
sbb
add
ljmp
and
inc
xor
inc
aaa
in
std
lea
add
mov
dec
sbb
movl
push
and
xchg
stc
and
ret
roll
sahf
sub
in
call
hlt
incb
clc
sbb
call
mov
mov
cli
and
and
xorb
mov
dec
or
xor
call
pushf
add
test
inc
pop
xor
dec
push
leave
dec
push
add
and
push
int3
add
push
xchg
adc
inc
jp
jge
dec
jmp
into
push
loope
test
or
adc
in
movsb
and
mov
push
mov
adc
je
sub
movsb
push
push
les
pop
adc
add
fcoms
dec
mov
add
pop
or
cmp
ret
lea
jnp
mov
cmpsb
mov
or
dec
jl
fmuls
inc
js
cli
je
xchg
test
and
push
fs
aaa
xor
jmp
loop
lcall
imul
jo
js
mov
dec
negb
fsub
xchg
in
and
and
push
mov
in
inc
clc
or
sub
dec
add
cmp
pop
inc
push
mov
sbbl
lods
rorl
mov
xor
clc
pmaxsw
cmp
mov
mov
and
cmc
bound
movl
pop
cmp
dec
call
push
and
inc
dec
xor
adc
xor
xor
nop
lods
mov
mov
mov
add
mov
dec
pop
or
add
dec
xlat
scas
xchg
pushf
mov
xor
mov
add
add
pop
and
mov
xor
jne
inc
sbb
ds
push
pop
outsb
lods
add
and
dec
dec
xor
xor
sub
sbb
insb
jns
dec
dec
mov
mov
ds
out
inc
and
mov
or
inc
sar
add
or
xor
sti
xchg
jo
or
add
mulb
and
jb
and
jno
ja
rcll
mov
sub
sub
and
in
fs
xchg
repz
pushf
or
add
test
mov
fldl
je
sub
lock
es
dec
add
add
lahf
push
pop
pop
adc
call
sbb
in
dec
lret
clc
ja
fwait
pushf
mov
loope
sbb
enter
add
and
inc
fwait
loope
cld
iret
mov
mov
test
sarb
mov
das
xor
add
adc
adc
cmc
test
push
fwait
pusha
mov
push
cmp
dec
cltd
cmp
lds
xor
test
mov
sub
sub
xchg
je
dec
jo
lods
nop
push
mov
nop
add
mov
cmp
insb
adc
repnz
and
pop
mov
jne
jns
clc
mov
mov
and
lret
add
adc
xchg
sbb
hlt
xor
icebp
mov
pop
jle
inc
shl
pop
inc
inc
lock
and
add
loope
sti
and
adc
ss
lock
or
pusha
je
xor
dec
sti
jo
push
cwtl
jo
sbb
call
js
les
dec
xor
or
outsl
icebp
or
call
lcall
sarb
and
sahf
test
mov
push
push
inc
lock
mov
or
jge
mov
cmp
mov
cmp
mov
jl
imul
and
jae
dec
push
sub
shll
sbbl
add
aam
xchg
sub
inc
aas
and
mov
cli
test
jl
add
pop
mov
scas
ret
push
jecxz
jecxz
jecxz
loope
in
ret
pop
stc
test
mov
push
add
clc
shrb
daa
inc
xor
sub
test
and
loope
loope
icebp
lahf
icebp
xor
mov
icebp
sub
ds
and
cmpsb
ds
addr16
sbb
test
push
gs
adc
leavew
xchg
addr16
or
push
les
incb
dec
cli
mov
stc
ret
mov
shrb
daa
and
add
dec
test
add
test
insb
adc
inc
inc
push
or
test
and
scas
or
cli
clc
push
pop
call
xchg
in
in
adcl
add
sbb
or
inc
pop
pcmpeqb
adc
ds
mov
mov
dec
test
mov
pop
call
sub
add
cmp
lahf
add
shll
mov
outsb
lock
lock
adc
loope
cwtl
lcall
add
inc
std
dec
dec
inc
jo
xchg
dec
rolb
icebp
adc
mov
enter
aam
es
call
aam
mov
dec
xor
mov
aaa
cmc
test
cmp
and
shr
addb
push
outsb
fs
add
fmul
sub
cli
inc
pop
or
aam
and
jns
jns
mov
sbb
jns
mov
pusha
jl
pusha
insl
or
sbb
jg
pusha
inc
call
xor
adc
int3
xor
fs
fnstsw
inc
fcoml
repz
lds
inc
adcl
mov
pop
hlt
shll
or
and
repnz
call
lods
pusha
inc
push
dec
in
int3
ret
add
jg
mov
aas
nop
sbb
add
sarb
jl
jl
sub
or
out
xchg
or
xor
xor
mov
shll
dec
testb
arpl
push
pop
or
hlt
outsb
in
test
repz
push
call
push
sub
andb
pop
pop
add
or
or
push
sbb
jne
inc
out
loop
mov
add
add
movb
and
xchg
jg
fcoml
and
add
or
jmp
sub
sub
jne
or
xchg
test
mov
jns
adc
inc
fistps
inc
repz
push
push
gs
sbb
or
leave
loope
fimuls
inc
js
cmc
fnstcw
xchg
movups
mulb
adc
pop
testl
mov
das
dec
clc
inc
or
pop
adc
jge
mov
int
mov
adc
cmp
and
xchg
mov
int
in
std
inc
or
arpl
jg
xchg
stos
mov
inc
or
cltd
fisttpll
lds
mov
cmc
and
mov
or
inc
mov
mov
cltd
inc
movsl
adc
jne
gs
mov
add
jecxz
rorl
jmp
hlt
inc
or
or
xchg
xor
inc
inc
dec
popa
mov
jge
xchg
dec
cmpsl
xchg
mov
ret
inc
rcr
mov
adc
in
and
dec
inc
xchg
push
adc
loope
jno
mov
mov
or
jmp
out
and
xchg
push
and
test
and
dec
fsts
or
xor
loope
cltd
or
andl
inc
popa
dec
mov
adc
es
gs
or
and
loop
jmp
mov
dec
outsl
xchg
pop
and
sub
mov
mov
subl
and
inc
sbb
and
dec
stos
xchg
popf
and
dec
adc
and
dec
sbb
fbld
jmp
adc
and
dec
cmpsl
xchg
cltd
and
popa
push
test
xor
daa
notl
adc
or
and
push
add
leave
push
inc
xor
orl
pop
xchg
or
cmp
mov
dec
icebp
inc
loope
or
xchg
mov
test
pop
dec
dec
xchg
cmp
xor
add
and
sub
imul
and
dec
mov
inc
pop
dec
mov
adc
and
inc
out
jmp
and
xchg
adc
mov
adc
or
dec
cmp
in
cmpl
xchg
or
and
jge
jae
popa
dec
dec
xchg
xor
cli
es
jns
in
rorl
xchg
mov
pop
mov
int3
dec
xor
aas
or
das
sbb
xor
and
or
sub
or
mov
cltd
pop
pop
or
adc
call
dec
iret
xchg
mov
mov
push
dec
inc
xchg
das
and
inc
pop
int3
cltd
fwait
or
sbbl
or
aad
jmp
in
dec
cwtl
and
mulb
stos
dec
xchg
xchg
jge
insl
inc
push
aas
mov
adc
das
rcll
in
cmc
and
inc
lds
and
dec
push
mov
pop
lret
or
jo
adc
pop
dec
dec
cltd
push
sub
or
pop
adc
or
movsb
pusha
adc
pop
aaa
int
and
dec
shl
repz
or
repnz
add
pop
dec
imul
ret
add
mov
pop
clc
gs
cld
pop
dec
outsl
stos
sub
mov
leave
jae
lock
mov
cli
inc
js
mov
sub
cwtl
xor
jns
loopne
insl
popa
outsb
mov
lahf
xor
std
push
or
jb,pt
imul
pop
mov
popa
pusha
inc
clc
mov
mov
arpl
enter
rolb
pushf
jo
mov
adc
dec
mov
inc
sbb
lods
dec
push
subb
add
bound
add
pop
xor
insl
jne
mov
andl
pop
jo
fsincos
inc
mov
mov
mov
or
mov
imul
add
addr16
testb
pop
imul
push
repnz
push
adc
aas
arpl
cmp
lds
push
push
xor
dec
jo
mov
roll
xchg
popa
fisubl
inc
insb
mov
addr16
test
imul
fs
inc
inc
sub
jb
dec
fs
pusha
cmp
test
mov
mov
jb
inc
mov
test
xorl
add
repz
orb
pop
faddl
and
mov
rcrb
push
bound
add
cld
add
data16
mov
pop
sub
push
inc
scas
sub
loopne
bound
mov
jae
ret
js
scas
insb
mov
fs
in
pushf
sub
cmc
cli
inc
or
popf
nop
repz
and
xchg
sub
dec
push
adc
jns
data16
jo
mov
jmp
xchg
push
sbb
fmul
mov
push
std
and
and
push
lcall
mov
inc
call
push
xor
insb
cmp
enter
insl
outsl
orl
mov
imul
stos
mov
xor
mov
inc
lock
add
add
mov
popf
push
pop
shlb
push
outsb
stos
aas
imul
dec
cwtl
inc
nop
mov
xor
insb
dec
mov
outsb
pop
dec
es
inc
push
scas
imul
sbb
test
andl
outsl
bound
fs
push
arpl
mov
sti
dec
outsb
nop
add
adc
adc
cwtl
add
pushf
dec
mov
sbb
adc
adc
xor
test
cmp
inc
fwait
push
pop
push
jl
out
push
push
and
outsb
inc
in
mov
lods
dec
test
xchg
clc
or
mov
cmp
push
cwtl
mov
cmp
xor
ret
inc
mov
imul
lea
xchg
mov
nop
xchg
sub
cmp
push
xor
sbb
stos
ds
in
test
leave
add
test
dec
in
sti
nop
push
mov
push
mov
lea
xchg
sbb
mov
add
or
ss
pop
push
in
fsubrs
cwtl
pop
push
mov
add
push
sub
shll
inc
mov
adc
xchg
ror
imul
mov
addb
fs
mov
in
and
mov
clc
adc
add
mov
lods
push
fs
pusha
lret
pushf
es
xor
lret
push
popa
mov
jno
inc
fs
sbb
pop
jns
push
xor
test
push
enter
aaa
ret
cmp
ret
test
outsb
or
mov
jns
daa
hlt
cwtl
sbb
inc
enter
lahf
dec
test
mov
push
fs
lea
movsb
xor
rorb
xor
xchg
add
je
addr16
mov
xchg
rclb
sub
cwtl
mov
pusha
adc
dec
es
insb
or
and
scas
cmp
adc
mov
lds
mov
sarb
shll
int3
mov
orb
push
push
push
shll
loopne
stc
das
mov
xchg
xchg
pop
in
cld
sti
mov
dec
jae
pushf
and
xor
push
mov
insb
xchg
xchg
adc
push
pushf
adc
xor
sahf
and
xchg
test
xor
mov
jae
and
enter
shrb
stos
and
pop
mov
lods
insl
and
cmpsl
test
jbe
aaa
push
stos
push
out
out
stc
rorl
cltd
sub
fmull
dec
loopne
rol
and
lock
out
push
shll
push
test
mov
cli
inc
gs
cwtl
jb
iret
inc
and
jo
inc
jns
jne
and
xor
insl
adc
and
repnz
in
call
sub
cmp
add
lahf
or
hlt
adc
mov
jbe
cmp
stos
mov
cld
imul
add
mov
ja
scas
and
xorl
inc
mov
pushf
leave
lds
aaa
pop
adc
xor
js
nop
sbb
xchg
mov
cwtl
cmp
andb
cmp
fdivs
inc
scas
pop
popa
scas
push
gs
xchg
or
or
jno
dec
inc
fwait
jae
dec
dec
lock
cld
std
add
test
jmp
test
movsb
jno
adc
outsl
mov
sub
mov
ja
xchg
pop
std
into
jo
adc
or
mov
pushf
sub
stc
xor
in
pushf
dec
mov
push
outsl
mov
mov
push
insb
sarl
pop
je
clc
pop
lret
adc
repz
push
je
data16
push
jae
dec
and
and
mov
sub
and
bound
imul
sub
nop
mov
mov
push
mov
mov
push
inc
sbb
icebp
shlb
inc
mov
inc
cmp
or
ja
xor
mov
dec
test
nop
and
push
add
add
addb
adc
push
incb
adc
mov
cmp
mov
inc
pop
mov
rolb
bound
lods
popa
sbb
fs
xchg
mov
dec
cs
inc
sub
dec
fs
cltd
mov
pop
mov
mov
cmp
nop
inc
icebp
aad
xor
popa
js
fidivrs
in
dec
xor
sbb
cltd
nop
fsubs
imul
clc
jno
fcoms
insb
stc
outsl
mov
xor
mov
adc
cwtl
loope
sub
rclb
dec
sarl
xchg
push
add
cld
outsb
lea
and
adc
test
cwtl
dec
pop
mov
jns
sub
mov
inc
mov
xchg
cmp
pop
or
cld
inc
outsb
stc
movsl
push
jle
je
cltd
fnstcw
pop
nop
enter
test
push
movsb
dec
adcb
mov
pop
add
dec
xlat
pop
sub
shlb
push
insb
in
imul
xchg
mov
pushf
ret
je
in
or
fmull
int3
mov
bound
movsb
mov
push
mov
mov
inc
mov
adc
xlat
add
mov
shrb
mov
andb
cmp
enter
sbb
xchg
xchg
int
sbb
and
push
jl
inc
jb
jl
mov
sbb
jl
cmp
lahf
enter
jno
and
popa
cltd
or
outsl
mov
mov
push
push
dec
mov
cwtl
popa
sahf
imul
and
mov
dec
push
cmp
and
dec
cltd
push
add
or
inc
pop
dec
sub
pop
dec
xchg
mov
fadd
insb
fadds
insl
movsb
sbb
roll
cli
sub
inc
call
or
dec
jae
push
mov
adc
adc
cmpsl
dec
push
or
in
add
rcr
adc
mov
loopne
stos
enter
or
push
cltd
bound
pushf
in
movsb
nop
inc
cmp
test
cltd
hlt
mov
sub
and
adc
js
mov
push
xchg
loopne
add
fcompl
mov
dec
push
xchg
jge
xor
or
mov
mov
xor
imul
je
inc
inc
test
xchg
sub
sbb
mov
pop
xchg
push
movb
imul
aam
sbb
cmc
mov
xchg
push
imul
cmp
inc
mov
nop
adc
cmp
push
mov
je
adc
push
jns
or
or
xchg
dec
sbb
push
adc
cmp
jo
mov
dec
pusha
inc
mov
addr16
ljmp
in
mov
add
mov
xor
inc
inc
cld
dec
dec
aam
dec
scas
jb
cmc
adcl
inc
inc
iret
je
dec
in
cs
aam
pushf
mov
lock
jae
nop
iret
and
sub
mov
mov
mov
xchg
pop
mov
lock
xchg
xlat
sbb
mov
mov
add
pop
lcall
adcb
mov
dec
outsb
rcrb
sub
push
inc
loopne
sub
adc
enter
movsb
mov
mov
mov
or
fcoms
adc
jae
pop
sub
dec
pop
sbb
sub
nop
push
pop
jbe
xor
outsl
pushf
test
mov
not
lods
push
test
cli
pusha
rol
je
add
dec
xchg
cmpb
mov
xor
popa
sbb
sbb
cwtl
shrb
or
push
jns
clc
mov
dec
jo
sub
and
jo
mov
cmc
pop
add
mov
jo
fwait
inc
lods
mov
cwtl
jo
fs
mov
fcomps
cmpsb
rcl
jl
movsb
cmp
insb
and
pop
insb
test
jae
cmp
mov
and
jne
adc
mov
daa
cld
dec
int
xchg
dec
dec
sbb
mov
xchg
pop
mov
mov
stc
mov
and
or
push
and
cld
lods
adc
cwtl
repz
inc
js
mov
fs
push
adc
cwtl
sbb
mov
jbe
in
nop
sbb
dec
fsubl
mov
sbb
mov
jae
stc
dec
insl
test
inc
add
adc
dec
inc
mov
cmpsb
mov
inc
mov
inc
mov
mov
mov
les
dec
mov
fwait
cltd
sub
in
push
pop
pop
push
adc
xchg
shlb
es
mov
cmp
push
inc
mov
and
popa
rol
cmp
shrb
mov
je
pop
outsb
xor
cmp
xor
mov
mov
mov
cltd
lock
insl
pusha
add
lods
fs
mov
xor
push
adc
push
mov
inc
sbb
enter
nop
push
jne
adcb
pop
arpl
lock
mov
pusha
inc
jb
xchg
or
mov
push
lock
dec
lds
mov
jnp
pop
jb
es
adc
pop
cmp
dec
stos
adc
sbb
gs
cmp
fs
das
xor
shlb
xchg
stc
mov
inc
inc
mov
dec
cwtl
push
dec
imul
and
rorl
jl
mov
xchg
inc
outsl
mov
or
xor
jnp
inc
lods
js,pt
adc
addr16
mov
push
cmp
and
dec
jo
lods
pop
xchg
les
adcb
gs
mov
xorb
or
add
sub
lods
daa
fsubl
mov
dec
xchg
cwtl
add
inc
xchg
dec
faddl
inc
mov
pop
add
xor
mov
and
mov
xor
jnp
sub
jae
das
or
sub
imul
and
xor
mov
bound
mov
pop
pusha
mov
out
lea
test
add
je
and
nop
sbb
cmp
mov
test
sub
enter
ds
pop
andb
insl
cs
xor
push
and
pop
push
mov
inc
cmp
jmp
pop
mov
jnp
mov
pop
cltd
inc
inc
mov
les
cld
jns
mov
pop
jo
lea
shlb
sub
xchg
enter
jl
insb
jmp
pop
add
inc
xor
int3
dec
or
je
and
dec
adc
je
and
xchg
inc
out
rclb
ds
jbe
lock
mov
pushf
xchg
scas
clc
loope
fs
outsw
and
popa
ret
push
hlt
cmp
xchg
xor
push
mov
inc
sti
lock
add
jg
movsb
gs
inc
xor
and
mov
cs
test
mov
and
lods
xchg
dec
and
jl
data16
test
mov
xor
adc
clc
ljmp
inc
insl
inc
inc
dec
and
orb
mov
imul
jo
push
xor
out
test
test
scas
bound
fadds
stc
adc
cltd
aas
pop
popa
pusha
imul
sub
push
jne
dec
push
or
add
xchg
insl
je
insl
inc
pop
xor
jno
test
mov
inc
movsb
inc
repnz
shrb
pop
sub
jecxz
in
cmp
or
insl
sub
fadds
mov
dec
pop
rcl
sahf
test
pop
in
or
push
dec
xchg
je
cmpsb
dec
jo
inc
call
pusha
gs
cwtl
mov
cmp
push
insb
outsl
scas
push
test
push
imul
mov
jb
sbb
lcall
push
push
adc
cwtl
adcb
jne
mov
sub
push
movsb
lods
cmpl
push
lret
push
jb
jb
inc
in
mov
ljmp
sub
movsl
push
mov
pop
test
hlt
nop
fwait
push
rolb
jno
in
inc
and
cmp
push
out
test
dec
inc
popf
lea
push
push
sub
nop
xchg
nop
movsl
shll
loopne
outsb
and
inc
jne
pop
inc
xchg
in
xor
std
sub
inc
mov
insl
sbb
push
pop
pusha
lcall
add
cld
sbb
sub
sub
bound
test
or
sub
inc
sbb
js
mov
and
add
outsb
les
cmpl
xchg
jmp
and
sahf
jl
inc
nop
test
xchg
js
icebp
jbe
and
push
mov
lods
pop
and
loop
push
cmp
test
lret
push
adc
xor
test
push
adc
inc
loop
ds
lods
enter
inc
adc
std
and
les
les
pop
pop
and
inc
jb
lcall
inc
fcoms
xchg
xor
outsb
lods
adc
mov
push
jb
sub
lcall
add
cmc
jns
ret
xchg
cli
adc
add
inc
aam
and
hlt
movl
adc
gs
and
jne
xor
test
inc
icebp
xchg
icebp
push
icebp
movsl
icebp
fs
mov
je
icebp
aad
xchg
icebp
in
movsb
icebp
cmc
icebp
mov
add
adc
jl
jl
jl
jl
pop
add
push
sbb
and
jne
xor
test
inc
pop
xchg
pop
push
pop
movsl
pop
fs
mov
je
lds
test
aad
xchg
pop
in
movsb
pop
cmc
pop
mov
add
inc
aam
and
hlt
movl
adc
gs
and
jne
xor
test
inc
icebp
xchg
icebp
push
icebp
movsl
icebp
fs
mov
je
icebp
aad
xchg
icebp
in
movsb
icebp
cmc
icebp
mov
add
adc
jl
jl
jl
jl
pop
add
push
sbb
and
jne
xor
test
inc
pop
xchg
pop
push
pop
movsl
pop
fs
mov
je
lds
test
aad
xchg
pop
in
movsb
pop
cmc
pop
mov
add
inc
aam
and
hlt
movl
adc
gs
and
jne
out
movl
fs
mov
je
aad
xchg
in
movsb
cmc
mov
add
rcl
icebp
and
hlt
movl
adc
gs
and
jne
mov
ds
ds
movsl
ds
je
lds
test
aad
xchg
ds
movsb
ds
ds
add
aam
and
ds
ds
cmp
gs
popl
xchg
pop
lods
xchg
call
jns
mov
adc
je
call
in
loope
loopne
ss
jne
hlt
je
js
js
jl
jl
jl
jl
jl
jl
enter
add
xchg
imul
rcll
icebp
jno
or
dec
mov
jecxz
lock
clc
push
xchg
lods
jl
je
jl
js
cmp
sbb
add
hlt
mov
flds
push
ss
rorl
fs
mov
jae
popa
xor
fdivrl
cwtl
ds
ds
ds
mov
es
push
ds
cmp
jecxz
cmp
sti
jo
das
jge,pt
aas
rcrl
inc
add
movsb
cld
mov
icebp
inc
and
aas
js
je
jl
js
jl
jl
cmp
cmp
jl
push
aaa
mov
test
pop
mov
inc
arpl
push
jecxz
out
lods
xchg
into
ds
sub
mov
push
xor
sbb
lods
popl
loopne
popf
out
mov
clts
sub
mov
in
cmp
clc
popl
or
pusha
jecxz
mov
mov
pop
scas
cmc
mov
add
jecxz
mov
add
pushf
clc
callw
xor
idiv
fprem
sub
sub
pop
cmp
cmp
cmp
lds
nop
fidivrs
stos
ds
dec
add
xor
lock
push
xor
cmc
jecxz
sarb
stc
stc
and
add
mov
pushf
aaa
lock
call
clc
push
lock
cmp
ds
xor
mov
cmpb
xor
cmp
push
xor
cmp
cmp
scas
push
lahf
rcrl
xchg
pop
ds
sub
rcl
icebp
mov
int
and
cmp
jl
js
jl
jl
pop
inc
aaa
add
mov
xchg
rcrb
aas
je
je
js
js
dec
push
cmp
pop
or
stc
setl
daa
xor
xchg
cmpb
adc
je
je
js
mov
add
cmp
mov
cs
popf
std
adc
mov
mov
add
ret
xor
cmp
popa
cmp
xor
call
hlt
lock
pusha
lock
call
inc
sarb
jo
ss
sub
nop
pushf
je
push
adc
imul
sub
mov
pop
rolb
add
lock
sbb
call
cmp
push
xor
cmp
mov
in
lods
cmp
ds
std
aas
dec
jns
jno
jns
sub
xor
pop
sub
jge
sub
jo
insl
add
loope
mov
or
dec
mov
cli
orb
push
xor
add
sub
xor
sub
cmp
dec
cmp
ds
ds
ds
and
pmaxub
and
lahf
mov
stos
push
loop
cmpsb
xor
ss
cltd
cmp
clc
jbe
or
loop
rolb
inc
loopne
cmp
cmp
mov
mov
jle
sar
popf
clc
jmp
test
clc
mov
lret
and
icebp
inc
movsb
pop
cmp
sbb
xchg
jecxz
in
pushf
inc
xor
cmp
cmp
mov
pop
lock
clc
xchg
clc
add
xor
cmp
inc
cmp
xor
pcmpgtd
in
and
jmp
lock
cmp
ss
inc
cwtl
jmp
cmpsb
xchg
cmpsb
pop
and
hlt
xchg
inc
pop
addb
popa
inc
fsubl
sbb
add
xor
cs
xor
sahf
and
xchg
sub
xor
cmp
cmp
negl
ret
xchg
test
jecxz
ret
xlat
in
ljmp
cmp
cmc
jecxz
jecxz
jecxz
loope
ds
notb
call
imul
clc
jne
sub
jg
xor
clc
inc
clc
xchg
clc
dec
clc
popf
clc
pop
clc
cmpsl
clc
arpl
mov
insl
clc
mov
clc
cmp
fprem
xchg
test
icebp
test
add
stc
and
shll
sub
xor
jmp
adc
aas
push
sbb
pop
pop
gs
and
outsl
pop
sub
jns
xor
jl
jl
dec
xchg
movsb
mov
push
lret
jecxz
jecxz
jecxz
jecxz
loop
imul
cmp
adc
sbb
xor
jl
sti
sbb
test
dec
sub
xor
adc
xchg
cmp
mov
loop
dec
sub
xor
arpl
js
jl
jl
nop
inc
jl
dec
dec
inc
sub
in
lahf
sbbb
pop
stos
add
xor
arpl
dec
sub
pop
push
xor
xor
mov
mov
cmp
mov
icebp
sub
out
cmp
enter
mov
pop
sub
sbb
inc
das
sbb
outsb
xor
aaa
lcall
rol
mov
lret
cmp
cltd
loope
loopne
xor
je
xor
inc
push
lock
scas
pop
adc
es
pop
xchg
xchg
pop
add
mov
xchg
or
leave
sbb
btc
test
cmp
ds
dec
movsb
orb
setle
mov
mov
jo
test
sbb
jg
dec
pop
lods
push
outsb
push
lds
inc
iret
fisttps
repnz
sub
add
and
xchg
and
dec
sub
xor
xchg
xchg
mov
or
loopne
call
dec
jl
cwtl
scas
jl
jl
jl
pop
or
sub
cmpsb
xchg
xchg
rcll
iret
icebp
xchg
rcrb
js
je
push
or
into
cmp
jl
js
pop
push
ss
sbbl
mov
xor
aaa
push
loop
sbb
icebp
lahf
lock
xor
je
xor
je
mov
rclb
sbb
jo
rcrb
pop
cmp
xchg
inc
pop
je
loopne
dec
push
jmp
pusha
cmp
mov
sub
cmp
call
cmp
cmp
xor
decl
cli
rcl
aaa
sub
ds
cmp
int
adc
pop
pop
cmp
imul
and
push
sub
xor
push
js
js
mov
sub
cmp
or
pop
ret
pop
ljmp
cs
repz
push
test
pop
cmpsl
mov
leave
xor
call
cs
xor
mov
or
shlb
call
dec
pop
jae
xor
and
dec
lea
cwtl
icebp
push
push
mov
outsl
rcrb
fstpt
xchg
ds
adc
push
mov
jo
bndldx
and
fyl2x
xchg
icebp
jecxz
lahf
icebp
lock
scas
lock
stos
adc
cld
sub
mov
inc
jmp
call
pop
lcall
mov
in
lahf
xor
je
adc
ss
cmp
mov
loop
arpl
jmp
sub
lock
movsb
cs
and
jbe
ret
ja
lods
mov
xor
push
enter
sub
sub
scas
adc
in
cmp
hlt
je
js
js
jl
pop
sbb
inc
inc
inc
lods
sub
je
arpl
stc
sbb
dec
das
sub
call
xor
rolb
aad
push
ret
xor
rcrb
fbld
fidivs
sarb
stc
cwtl
xchg
call
sbb
fs
pop
sbb
xor
loope
icebp
mov
add
rorl
mov
jb
pushf
ds
ds
or
xor
xchg
mov
sub
icebp
push
loop
es
icebp
nop
in
sub
push
dec
xor
sbb
scas
pop
push
cs
push
lods
xor
pop
sbb
push
imul
aas
cmp
pop
aaa
xchg
sbb
andb
sub
in
mov
mov
data16
inc
xor
je
pop
arpl
xor
inc
divl
cs
xor
mov
add
jl
dec
mov
xor
les
sub
cmp
push
std
cmp
in
mov
mov
inc
rolb
or
mov
jmp
mov
add
lahf
inc
clc
lret
addb
ds
sub
mov
push
mov
clc
jge
fistps
cmp
dec
cmp
icebp
cmp
jg
aas
mov
xchg
and
sbb
adc
pop
mov
cltd
stos
fwait
and
pop
push
sub
jbe
xor
pop
pushf
pop
sti
pop
ret
sub
xchg
test
push
lds
mov
dec
test
icebp
div
or
sbb
pop
push
ficompl
roll
sub
cmp
add
inc
aam
rorb
mov
imul
clc
stc
jo
cmp
hlt
js
dec
pop
mov
cmpb
idivb
sub
out
dec
prefetch
insl
sahf
mov
ds
jl,pt
lret
ds
sbb
dec
fwait
ds
cmp
nopl
outsl
mov
popa
fcoms
lock
je
and
cmp
adc
dec
lret
cmpsl
arpl
ret
sub
jnp
mov
mov
mov
add
adc
mov
xchg
ret
sti
in
mov
js
pop
jp
cmp
and
sub
lock
sub
lods
loope
test
int3
jecxz
inc
cli
or
enter
nop
sub
xor
imul
ljmp
mov
xchg
add
call
or
sub
xor
push
lods
xchg
ja
out
mov
ret
inc
mov
and
bound
and
repnz
sbb
jl
cmp
aaa
jp
push
mov
in
bound
clc
pop
call
and
inc
ds
cmp
shrl
xchg
test
push
call
cmp
mov
in
loopne
adc
clc
inc
jmp
inc
call
iret
clc
pushf
clc
or
clc
cs
xchg
sbb
enter
cmp
mov
loopne
cmp
les
aam
ret
out
shl
ss
sub
lock
int3
add
imul
and
pop
fwait
int3
push
insb
sub
mov
adc
dec
push
sub
xor
sub
mov
lret
add
in
cmp
dec
xor
push
jle
inc
cltd
inc
test
rorl
test
loope
pop
shll
xor
fsubl
andb
xor
ficompl
cmp
outsb
mov
repnz
mov
cmp
push
cmp
cmp
cmp
jno,pt
xor
cmpb
clc
dec
clc
cltd
clc
push
clc
cmpsb
clc
cli
mov
mov
cmp
xchg
loope
adc
cmp
icebp
mov
sub
rolb
rcll
stc
fs
sub
inc
cmp
cmp
cmpb
ds
and
repz
sbb
xchg
jae
test
sbb
loope
mov
shll
loopne
xor
js
push
pop
or
and
sarl
xor
add
mov
loope
icebp
lods
icebp
or
lret
add
xchg
rolb
jnp
shl
nop
cmp
ds
pop
jl
jle
adc
movsb
adc
cmpl
ds
push
movsl
aaa
dec
je
xor
add
lcall
ror
loope
loopne
sub
lds
sbb
clc
adc
lock
pop
stos
addb
xor
sub
or
sbb
xchg
lock
clc
rcrl
push
and
mov
pop
pop
cmpsb
push
movsl
or
xor
cmp
loop
insb
fwait
sub
fnstsw
xlat
imul
pop
setle
lock
mov
xor
xchg
in
test
push
mov
mov
rcll
mov
nop
pop
bound
fstpl
into
push
xchg
pop
out
mov
sbb
inc
das
faddl
inc
aaa
xchg
inc
push
mov
stc
call
xor
cmp
shll
cmp
mov
pop
cmp
and
nop
popa
or
int
stos
xor
push
sbb
stos
test
mov
aaa
mov
scas
cmp
shlb
mov
pop
pop
addr16
cmp
sub
sub
in
sub
or
jmp
xor
mov
add
call
cmp
jo
aas
sbb
fisubl
and
icebp
mov
aam
dec
xor
mov
call
clc
inc
stc
shlb
clc
or
pop
stc
xchg
push
stc
int
loop
lea
inc
lods
xchg
xchg
in
mov
or
popa
dec
rclb
clc
xor
clc
push
lock
clc
je
int
xchg
clc
in
clc
mov
or
mov
clc
dec
lock
xor
dec
lea
jecxz
jecxz
loop
js
es
pop
hlt
push
dec
pop
adc
insl
xor
push
xchg
pop
xchg
and
out
sbb
add
jbe
imul
jo
add
add
popa
insb
jo
js
jae
popa
add
add
adc
add
add
add
mov
add
push
fiadds
add
xor
add
add
add
add
add
add
and
add
cwtl
fldl
add
xor
add
fldl
add
fldl
add
fldl
add
fldl
add
fiadds
add
add
add
add
add
add
xor
add
and
add
add
add
jo
add
add
add
push
add
gs
cmp
inc
outsl
insl
jo
jb
push
je
imul
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
jb
arpl
fs
jae
add
addl
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
imul
je
add
dec
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
jo
je
push
popa
addr16
add
cmp
inc
gs
gs
popa
addr16
add
outsb
jae
popa
je
dec
gs
popa
add
push
push
inc
push
xor
cs
insb
add
dec
dec
inc
inc
push
push
xor
cs
insb
add
jg
inc
jb
popa
je
dec
bound
gs
outsl
outsb
imul
xor
cs
insb
add
add
add
add
addb
add
pusha
add
addb
add
nop
add
sbbb
add
test
add
add
add
add
add
add
andb
add
add
andb
add
add
addb
add
add
add
or
add
add
add
jo
add
and
add
add
add
add
add
add
addb
add
add
add
push
add
addb
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
add
add
js
add
xchg
add
add
jmp
add
add
add
add
test
add
test
add
push
add
add
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
rol
rcr
add
lret
xor
add
add
xor
xor
xor
xor
add
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
incl
xchg
add
add
in
int3
add
out
add
out
add
pushl
add
add
add
cltd
add
add
add
xor
add
xor
add
xor
add
cltd
add
xor
add
xor
add
data16
add
add
data16
cwtd
add
data16
add
incw
add
xor
add
cltd
add
cltd
int3
add
cltd
incl
add
add
add
xor
add
data16
int3
cltd
add
int3
int3
add
int3
incl
add
data16
lcall
add
incl
add
add
add
add
xor
cltd
add
add
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
xor
add
data16
cwtd
add
data16
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
add
xor
xor
xor
data16
int3
cltd
add
int3
int3
add
int3
incl
xor
xor
xor
data16
lcall
add
incl
data16
add
xor
data16
data16
add
incl
xor
add
xor
xor
xor
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
add
data16
xor
data16
cltd
add
int3
add
incl
incw
add
xor
lcallw
add
add
add
add
add
xor
add
add
add
add
cltd
xor
add
data16
cltd
xor
cltd
xor
cltd
cwtd
add
xor
add
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
incl
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
int3
add
add
add
incl
cltd
add
xor
add
xor
add
xor
pushl
cltd
add
xor
add
xor
add
data16
jmp
add
data16
cwtd
add
data16
add
incw
lcall
xor
lcall
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
jmp
lcall
add
incl
jmpw
data16
incl
jmp
add
incw
jmp
and
movsl
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
sub
add
or
add
or
add
add
or
add
add
insb
add
add
addb
addb
add
rol
rcr
add
lret
xor
add
add
xor
xor
xor
xor
add
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
incl
xchg
add
add
in
int3
add
out
add
out
add
pushl
add
add
add
cltd
add
add
add
xor
add
xor
add
xor
add
cltd
add
xor
add
xor
add
data16
add
add
data16
cwtd
add
data16
add
incw
add
xor
add
cltd
add
cltd
int3
add
cltd
incl
add
add
add
xor
add
data16
int3
cltd
add
int3
int3
add
int3
incl
add
data16
lcall
add
incl
add
add
add
add
xor
cltd
add
add
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
xor
add
data16
cwtd
add
data16
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
add
xor
xor
xor
data16
int3
cltd
add
int3
int3
add
int3
incl
xor
xor
xor
data16
lcall
add
incl
data16
add
xor
data16
data16
add
incl
xor
add
xor
xor
xor
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
add
data16
xor
data16
cltd
add
int3
add
incl
incw
add
xor
lcallw
add
add
add
add
add
xor
add
add
add
add
cltd
xor
add
data16
cltd
xor
cltd
xor
cltd
cwtd
add
xor
add
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
incl
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
int3
add
add
add
incl
cltd
add
xor
add
xor
add
xor
pushl
cltd
add
xor
add
xor
add
data16
jmp
add
data16
cwtd
add
data16
add
incw
lcall
xor
lcall
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
jmp
lcall
add
incl
jmpw
data16
incl
jmp
add
incw
jmp
and
movsl
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
sub
add
or
add
or
add
add
or
add
add
insb
add
add
addb
addb
add
rol
rcr
add
lret
xor
add
add
xor
xor
xor
xor
add
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
incl
xchg
add
add
in
int3
add
out
add
out
add
pushl
add
add
add
cltd
add
add
add
xor
add
xor
add
xor
add
cltd
add
xor
add
xor
add
data16
add
add
data16
cwtd
add
data16
add
incw
add
xor
add
cltd
add
cltd
int3
add
cltd
incl
add
add
add
xor
add
data16
int3
cltd
add
int3
int3
add
int3
incl
add
data16
lcall
add
incl
add
add
add
add
xor
cltd
add
add
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
xor
add
data16
cwtd
add
data16
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
add
xor
xor
xor
data16
int3
cltd
add
int3
int3
add
int3
incl
xor
xor
xor
data16
lcall
add
incl
data16
add
xor
data16
data16
add
incl
xor
add
xor
xor
xor
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
add
data16
xor
data16
cltd
add
int3
add
incl
incw
add
xor
lcallw
add
add
add
add
add
xor
add
add
add
add
cltd
xor
add
data16
cltd
xor
cltd
xor
cltd
cwtd
add
xor
add
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
incl
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
int3
add
add
add
incl
cltd
add
xor
add
xor
add
xor
pushl
cltd
add
xor
add
xor
add
data16
jmp
add
data16
cwtd
add
data16
add
incw
lcall
xor
lcall
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
jmp
lcall
add
incl
jmpw
data16
incl
jmp
add
incw
jmp
and
movsl
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
jge
addl
sbbb
addl
lahf
addl
sbbb
addl
lahf
addl
sbbb
addl
lahf
addl
sbbb
addl
lahf
addl
pop
sub
fcom
jmp
loopne
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
fdivr
xor
xor
jmp
jecxz
call
in
call
in
call
in
call
in
call
in
call
in
jmp
jecxz
jmp
jecxz
jmp
in
call
in
call
in
call
in
call
in
call
in
call
in
call
pushl
xor
inc
fcmovnu
jmp
in
lcall
mov
xchg
xchg
subl
andb
jg
decl
andl
xchg
xchg
mov
cwtl
mov
pushf
jne
mov
mov
call
in
call
in
call
in
call
in
call
in
call
in
fcos
xor
xor
jmp
in
jle
dec
jns
inc
pushl
pushl
inc
ljmp
ljmp
cmp
imul
insl
pusha
aas
pushl
inc
pushl
inc
jp
dec
jle
dec
incl
ja
inc
mov
fdivrp
jecxz
fdivr
jecxz
fdivr
jecxz
fdivr
jecxz
fdivr
jecxz
fdivr
jecxz
fdivr
jecxz
fdivr
out
loopne
call
in
call
in
xor
xor
jmp
in
jle
dec
jp
dec
pushl
inc
pushl
inc
ljmp
inc
ljmp
aas
ljmp
aas
ljmp
inc
pushl
inc
pushl
inc
jnp
dec
jle
dec
incl
push
inc
mov
fdivrp
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
out
loope
call
in
call
in
xor
xor
jmp
in
incl
insb
dec
js
inc
pushl
inc
pushl
inc
pushl
inc
pushl
inc
pushl
inc
pushl
inc
js
inc
jl
dec
incl
je
decl
mov
fdivrp
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
call
in
call
in
call
fstp
pushl
xor
inc
fcmovnu
fdivr
call
jb
jle
dec
jnp
dec
js
inc
pushl
inc
pushl
inc
pushl
inc
pushl
inc
jns
inc
jl
dec
jg
dec
incl
jbe
decl
mov
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
out
loopne
jmp
out
jmp
out
jmp
fstp
pushl
xor
inc
fcmovnu
fdivr
call
jne
incl
outsb
dec
jl
dec
jp
dec
jns
dec
jns
dec
jnp
dec
jl
dec
jle
dec
incl
jne
decl
jl
dec
shlb
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
out
loope
jmp
out
jmp
out
jmp
fstp
pushl
xor
inc
fcos
call
js
incl
jb
incl
outsb
dec
jle
dec
jle
dec
jg
dec
incl
jb
incl
js
decl
jg
dec
shll
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
pushl
xor
inc
fcos
call
jnp
decl
jbe
incl
jae
incl
jb
incl
push
decl
jns
decl
jg
call
ret
mov
jmp
out
jmp
out
jmp
out
jmp
out
jmp
dec
mov
call
into
out
xor
xor
fcmovnu
jmp
jg
decl
jp
decl
ja
decl
ja
decl
jns
decl
pop
call
andb
xchg
int
mov
out
loope
in
loopne
in
loopne
in
loopne
in
loopne
in
loopne
in
loopne
in
loopne
int3
mov
ljmp
aas
decl
out
fdivr
xor
xor
fcmovnu
jmp
andl
andl
jge
decl
jnp
decl
jnp
call
jle
call
andl
xchg
sahf
mov
into
lds
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
dec
enter
imul
xchg
xchg
ljmp
pushl
xor
inc
fstp
jmp
mov
cwtl
test
andl
andb
andl
xchg
sbbb
andl
xchg
andl
test
xchg
lahf
mov
mov
mov
call
out
call
out
call
out
call
lret
xorb
jle
dec
lcall
call
fdivr
xor
xor
jmp
fwait
jg
sahf
mov
pushf
mov
lcall
lcall
test
xchg
lcall
lcall
mov
movsb
insl
jmp
leave
mov
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
call
int
decl
js
jmp
jmp
xor
xor
fstp
ljmp
ljmp
lea
mov
mov
lahf
mov
lahf
mov
lahf
mov
mov
lea
movsb
insl
jmp
xchg
jno
lods
xchg
je
aam
mov
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
call
iret
andl
andb
pushf
cmp
jmp
xor
xor
fstp
ljmp
mov
xchg
jae
cmpsb
nop
outsb
jmp
insl
jmp
nop
outsb
jmp
xchg
jo
stos
xchg
jno
lods
xchg
jae
scas
xchg
jbe
mov
jns
int3
mov
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
fcom
enter
imul
mov
mov
mov
jmp
out
loopne
fdivrp
xor
xor
jmp
call
inc
mov
inc
scas
xchg
ljmp
xchg
jae
stos
xchg
jae
stos
xchg
jae
stos
xchg
jae
lods
xchg
jae
lods
xchg
jne
scas
xchg
jbe
mov
jns
mov
jp
mov
jl
fmul
sar
call
in
call
out
call
out
call
out
lret
ljmp
xchg
jne
mov
ljmp
xor
xor
loopne
jmp
jmp
dec
mov
mov
pushl
js
mov
js
mov
js
mov
jns
mov
jp
mov
jnp
mov
jge
mov
jle
mov
iret
ret
call
out
jmp
call
out
jmp
call
out
into
mov
mov
lcall
loopne
pushl
xor
inc
loopne
loopne
jmp
ljmp
mov
movsl
dec
mov
mov
mov
sahf
jge
mov
jge
mov
jle
mov
mov
cmp
movsl
test
fcmovnbe
jmp
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
fcmovbe
inc
stos
mov
ret
test
mov
jmp
loopne
pushl
xor
inc
loopne
loopne
jmp
ljmp
shrb
iret
mov
cmpsl
dec
mov
cmpsb
dec
mov
inc
mov
inc
scas
xchg
inc
scas
xchg
inc
mov
dec
mov
call
mov
lret
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
fld
lods
fld
lods
fcmove
mov
jmp
ljmp
xor
inc
loopne
loopne
jmp
jmp
int
popf
call
mov
mov
dec
mov
mov
dec
mov
mov
call
mov
mov
call
mov
lret
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
fst
fadd
scas
fadd
lods
mov
jmp
jmp
loope
loope
xor
xor
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
loope
loope
xor
xor
jmp
jmp
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jmp
loope
pushl
xor
inc
fdivrp
call
call
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
call
loope
pushl
xor
inc
xlat
xlat
xlat
fcmovu
xor
xor
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
push
push
or
add
add
incl
add
add
incl
add
add
add
and
add
add
add
add
add
add
add
incl
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
incl
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
mov
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
or
