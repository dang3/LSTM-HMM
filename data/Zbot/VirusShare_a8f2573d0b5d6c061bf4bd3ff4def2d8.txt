incl
dec
add
add
mov
mov
xor
mov
arpl
fidivrl
bound
mov
pop
into
cmp
adc
test
mov
jo
lahf
mov
sarb
and
incb
pop
test
loop
and
lcall
sti
and
dec
daa
loopne
iret
xor
push
inc
xorb
sub
call
leave
pop
xchg
out
cltd
cmc
out
repz
mov
mov
pop
jmp
shl
xor
int
stos
movl
decl
ror
out
out
sbb
inc
jo
shrb
sbb
imul
jns
or
or
adc
sbb
xorb
push
pushf
leave
xchg
outsl
imul
adc
stc
sub
mov
and
sbb
popf
dec
sub
adcl
push
adc
lcall
push
inc
loope
dec
jp
add
call
inc
sbb
push
int3
inc
fcmovnu
cmpsl
push
fidivl
cmc
push
cmp
push
insl
mov
mov
test
or
repnz
leave
aas
jmp
and
mov
fs
jno
pop
lahf
push
adc
rcl
jne
mov
cmp
xchg
jno
or
dec
fmulp
lahf
into
fxch
mov
cmp
in
push
xchg
xor
dec
dec
lahf
rclb
pcmpeqw
mov
xchg
sub
fwait
jae
filds
pop
ja
xor
push
lods
jnp
push
movsl
dec
inc
xchg
pop
jge
aad
sbb
out
xor
shr
js
adc
movsl
jbe
pusha
frstor
aas
in
fisubl
cmp
in
xor
fdivrl
jge
cs
imul
ficompl
inc
into
outsb
stc
and
insb
mov
xchg
cmc
mov
test
push
mov
push
out
cmc
insl
or
mov
pop
nop
sbb
sbb
mov
jp
push
int
fwait
cld
and
or
cltd
pop
das
xor
xchg
leave
repz
popa
add
mov
loopne
add
add
in
nop
iret
push
out
scas
pop
call
cld
sbb
dec
loope
adc
and
jae
xchg
insl
pop
jno
and
cmp
inc
fistpll
mov
mov
dec
or
into
int
outsb
mov
outsl
or
in
add
or
pop
insb
or
icebp
fidivrs
inc
dec
push
jge
and
mov
jne
or
sub
lret
and
lcall
pushf
push
lahf
enter
je
orb
repz
stos
sub
xchg
mov
lea
cld
lods
hlt
xor
out
push
aam
xor
fstps
add
mov
or
leave
jge
mov
sti
or
xchg
or
shlb
aas
cmpsl
push
pop
pop
mov
inc
jo
xchg
ret
cmpsb
adc
in
cld
ret
jg
push
in
xchg
fmuls
stc
mov
adc
in
add
sub
mov
shll
aaa
addr16
hlt
sqrtps
std
xchg
xchg
jle
jb
nop
jle
push
xlat
add
sub
add
pushf
push
out
sub
in
stos
aam
jl
mov
shr
xchg
fmull
stc
ljmp
aaa
je
popf
cmp
addr16
push
jmp
loope
push
jp
cmp
mov
adc
test
stos
nop
and
imul
lock
out
xchg
mov
jns
xchg
fwait
lods
adc
jo
cld
adc
imul
push
and
mov
sub
test
lds
lcall
or
lock
jb
negl
enter
std
shll
and
addr16
mov
inc
mulb
mov
sbb
inc
mov
mov
arpl
test
aam
and
push
and
inc
pop
inc
loop
lock
iret
mov
add
ret
mov
rcr
sbb
int3
mov
jle
cmp
mov
cmp
out
movsb
mov
hlt
lret
and
in
adc
repnz
mov
lds
inc
add
xchg
lds
xchg
inc
xchg
icebp
mov
xchg
cmpsb
lcall
dec
daa
dec
dec
xchg
mov
inc
sbbb
and
popa
mov
fists
dec
hlt
mov
xchg
sbb
jnp
daa
jo
in
mov
and
or
es
pushf
sub
loope
shrl
push
shl
cwtl
imul
in
or
imul
stos
testl
mov
data16
add
push
popa
adc
jecxz
sbb
popa
idivl
mov
loop
fs
jcxz
lcall
mov
xlat
sbb
pusha
inc
and
xor
mov
test
sbb
xchg
pop
jl
add
inc
jl
outsb
mov
nop
addr16
inc
mov
pop
popa
jle
cwtl
hlt
lds
push
dec
pop
ret
adc
repz
sub
xchg
xchg
insb
sti
dec
push
xlat
cmp
xor
mov
int3
int
les
in
and
addr16
ljmp
mov
mov
xor
adc
lret
filds
push
aad
cmc
fmuls
js
add
out
push
mov
push
adc
rorb
xor
aad
mul
data16
test
test
stos
xor
and
popf
mov
cmp
fisubl
and
cs
push
xor
xchg
xchg
xchg
popf
les
jle
cli
repz
push
sbb
rclb
xchg
sbb
fmull
cmc
sbb
test
sahf
adc
dec
test
in
cmp
cmc
clc
inc
bound
rclb
xchg
lahf
cmp
inc
andl
inc
cmpsl
jo
inc
lods
stos
fistl
lods
lahf
ror
fwait
xchg
push
xlat
or
mov
mov
xor
xchg
sar
mov
adc
push
repnz
mov
outsl
sahf
ja
sbb
loop
cltd
adc
in
and
mov
sbb
mov
dec
shrl
push
pop
fs
xchg
stos
imul
push
js
pusha
pop
sarl
cmp
add
jmp
xchg
jle
jle
mov
repnz
xor
outsb
xor
jl
scas
hlt
xchg
add
pushl
xchg
nop
mov
call
stos
or
dec
adc
addb
xchg
and
xor
add
fsubrs
lahf
jne
jo
mov
mov
int
js,pn
mov
jbe
fcmove
xchg
inc
add
xchg
shl
add
dec
push
mov
out
cmc
push
popa
lcall
xchg
mov
subl
pop
ss
or
pop
adc
mov
add
stc
mov
ljmp
lock
push
out
lods
sbb
clc
sbb
hlt
push
aas
daa
sbb
arpl
call
mov
js
jnp
jns
xor
sbb
cltd
jbe
lahf
mov
int3
sbb
fdivrp
sub
cmp
iret
dec
push
mov
cmp
cmp
pushf
ds
adc
sar
push
mov
push
jle
push
stos
gs
jns
push
test
out
shll
jbe
sahf
scas
fnstenv
data16
mull
pop
and
jge
mov
leave
lret
fcomp
cwtl
test
push
loopne
mov
lahf
xor
lds
push
loopne
push
sarb
data16
dec
cli
rep
orb
mov
jae
mov
dec
jl
fisttpll
gs
pop
sahf
xlat
xchg
pop
sbb
pushf
inc
mov
push
mov
inc
mov
mov
mov
out
mov
shlb
and
movsb
sbb
movsb
dec
jmp
les
aad
mov
xchg
fwait
and
ds
cs
add
gs
inc
jne
or
jp
fwait
loop
push
pop
pop
test
int3
outsl
xor
insb
gs
sbbl
sub
das
xor
cmpb
jno
hlt
dec
cmpsb
jecxz
push
pop
cmp
repnz
cmpsl
jne
cli
mov
mov
ljmp
roll
loopne
jns
mov
adc
push
mov
add
xlat
jecxz
mov
push
sti
cltd
inc
filds
xchg
outsb
mov
aas
pop
jae
jns
repz
or
jns
scas
dec
jg
cmp
hlt
mov
arpl
negb
int
cmp
leave
pop
adc
icebp
icebp
imull
movsb
aas
add
jg
lea
push
aad
jb
sub
in
rorb
iret
add
data16
fs
mov
das
sbb
sub
add
int3
insb
daa
nop
nop
nop
daa
jb
add
int3
pop
add
ljmp
jo
nop
add
cmp
dec
push
jnp
pop
push
add
incl
add
push
nop
pusha
inc
add
xor
add
dec
sbb
add
push
sub
inc
pushl
xor
mov
jae
add
mov
add
nop
add
nop
nop
add
popa
int3
ljmp
add
add
add
nop
adc
pop
inc
int3
add
orb
nop
je
sub
sub
adc
add
sub
nop
nop
add
add
sbb
int3
int3
nop
nop
mov
call
das
add
dec
add
nop
add
sbb
cmp
jb
add
mov
pop
push
cmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movw
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
and
lea
mov
movl
jmp
mov
sub
mov
cmpl
jle
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
and
xor
mov
lea
mov
jmp
xor
mov
mov
imul
sub
mov
jmp
xor
mov
mov
and
imul
add
mov
jmp
xor
mov
add
sub
mov
and
add
mov
xor
mov
mov
and
cmp
jne
mov
and
add
cmp
jle
xor
mov
mov
imul
add
mov
xor
mov
mov
lea
mov
mov
and
xor
mov
cmp
jne
mov
and
xor
mov
lea
cmp
jl
xor
mov
add
mov
and
sub
add
mov
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
and
xor
mov
lea
mov
jmp
xor
mov
mov
imul
sub
mov
jmp
xor
mov
mov
and
imul
add
mov
jmp
xor
mov
add
sub
mov
and
add
mov
jmp
mov
mov
mov
mov
xor
mov
mov
and
lea
mov
xor
mov
mov
lea
mov
and
cmp
jne
mov
and
add
sub
xor
mov
add
mov
lea
add
sub
sub
mov
dec
mov
mov
mov
mov
and
mov
add
xor
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jle
mov
and
mov
imul
add
mov
mov
and
add
sub
mov
mov
and
mov
lea
cmp
jb
mov
and
add
sub
xor
mov
add
mov
mov
sub
mov
xor
mov
add
mov
and
sub
mov
movl
jmp
mov
sub
mov
cmpl
jle
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
xor
mov
mov
lea
mov
jmp
xor
mov
mov
and
imul
sub
mov
jmp
xor
mov
mov
imul
add
mov
jmp
xor
mov
add
mov
and
sub
add
mov
xor
mov
cmp
jne
mov
add
cmp
jbe
xor
mov
mov
and
imul
add
mov
mov
and
xor
mov
lea
mov
xor
mov
cmp
jne
xor
mov
mov
lea
cmp
jb
xor
mov
add
sub
mov
and
add
mov
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
xor
mov
mov
lea
mov
jmp
xor
mov
mov
and
imul
sub
mov
jmp
xor
mov
mov
imul
add
mov
jmp
xor
mov
add
mov
and
sub
add
mov
jmp
call
xor
mov
add
mov
and
add
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movw
movl
xor
mov
cltd
mov
add
mov
adc
mov
and
cltd
add
adc
mov
mov
add
mov
jmp
mov
sub
mov
mov
cmp
jbe
mov
and
add
sub
xor
add
adc
mov
mov
push
mov
push
push
mov
push
mov
push
call
add
mov
and
add
mov
xor
mov
add
mov
jmp
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
add
mov
adc
xor
mov
cltd
add
adc
mov
jmp
xor
mov
mov
mov
and
imul
sub
cltd
mov
mov
jmp
xor
mov
cltd
mov
mov
push
push
mov
push
mov
push
call
add
adc
mov
mov
jmp
xor
mov
mov
add
mov
and
sub
cltd
add
adc
mov
mov
mov
add
mov
jmp
mov
sub
mov
mov
cmp
jbe
mov
and
add
sub
xor
mov
mov
push
mov
push
push
mov
push
mov
push
call
add
mov
xor
mov
add
sub
mov
and
add
mov
jmp
mov
and
cltd
mov
mov
add
adc
add
adc
xor
mov
cltd
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
xor
mov
mov
add
mov
and
sub
cltd
add
adc
mov
mov
mov
add
mov
adc
mov
and
cltd
add
adc
mov
push
mov
push
call
add
xor
mov
add
cltd
sub
sbb
mov
mov
and
mov
and
lea
cltd
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movb
push
push
push
call
mov
xor
mov
mov
lea
mov
cmpl
je
xor
mov
mov
add
mov
and
add
mov
mov
push
call
movl
mov
sub
mov
xor
mov
cltd
mov
idiv
cmp
je
xor
mov
mov
lea
mov
jmp
mov
and
mov
lea
mov
mov
sub
mov
movl
xor
mov
mov
imul
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
xor
mov
mov
lea
mov
mov
add
mov
mov
mov
and
test
jne
xor
mov
mov
lea
mov
mov
add
mov
movb
jmp
movb
mov
add
xor
mov
sub
mov
mov
sub
mov
mov
add
mov
mov
xor
mov
mov
lea
mov
jmp
mov
imul
mov
add
mov
xor
mov
add
mov
and
add
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movw
mov
add
sub
xor
mov
add
mov
push
call
add
mov
mov
mov
mov
add
sub
mov
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
xor
mov
mov
and
lea
mov
jmp
mov
and
imul
mov
sub
mov
jmp
xor
mov
imul
mov
add
mov
jmp
mov
add
mov
and
sub
xor
mov
add
mov
mov
add
sub
xor
mov
add
mov
mov
and
mov
lea
mov
xor
mov
mov
and
lea
mov
mov
and
push
mov
push
call
add
mov
xor
mov
mov
and
lea
mov
mov
mov
mov
push
call
add
mov
mov
xor
mov
mov
imul
add
mov
xor
pop
pop
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
testw
je
mov
mov
jmp
movl
mov
and
je
mov
test
je
cmp
mov
jb
mov
push
pushl
pushl
call
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
test
pop
jne
cmpl
je
mov
xor
divl
mov
sub
jmp
mov
push
pushl
pushl
call
add
cmp
je
add
sub
cmp
jb
mov
jmp
mov
push
movsbl
push
call
pop
cmp
pop
je
incl
mov
dec
mov
test
jg
movl
test
jne
mov
pop
pop
pop
leave
ret
orl
mov
jmp
mov
sub
xor
divl
jmp
push
mov
sub
lea
push
call
lea
push
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
lea
push
call
cmp
je
cmp
jne
cmpw
je
cmpl
je
push
pop
jmp
xor
jmp
or
push
push
lea
mov
movsl
movsl
movsl
movsl
pop
mov
pop
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
movzwl
push
call
mov
add
test
je
mov
leave
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
mov
andl
pop
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
testw
je
mov
mov
jmp
movl
jmp
mov
testw
je
mov
test
je
cmp
mov
jb
mov
push
pushl
push
call
sub
sub
add
add
add
mov
jmp
cmp
jb
cmpl
mov
je
xor
divl
mov
sub
push
push
pushl
call
add
test
je
cmp
je
sub
add
jmp
push
call
cmp
pop
je
mov
mov
inc
decl
mov
cmpl
jne
mov
pop
pop
pop
leave
ret
orl
jmp
orl
mov
xor
sub
divl
jmp
push
mov
push
mov
test
je
mov
test
je
cmp
je
cmp
jne
and
cmp
mov
jne
push
call
add
pop
xor
push
call
mov
pop
test
je
and
mov
jmp
test
je
test
je
test
jne
movl
push
pushl
pushl
call
add
xor
cmp
setne
dec
mov
jmp
movl
or
pop
pop
ret
call
test
jne
ret
push
pushl
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
pushl
call
pop
ret
push
pushl
call
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
push
call
pop
test
jne
push
call
pop
andl
call
call
mov
call
mov
call
call
call
mov
mov
push
pushl
pushl
call
add
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
je
call
pushl
call
push
call
pop
pop
ret
cmpl
je
call
pushl
call
pop
push
call
ret
mov
mov
mov
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
xor
cmp
push
mov
jle
mov
push
push
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pushl
call
pop
pop
ret
mov
ret
mov
cmp
jbe
xor
ret
push
mov
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
push
push
push
lea
shl
push
pushl
call
test
je
or
jmp
mov
xor
cmp
mov
mov
jle
jmp
xor
mov
push
push
call
test
jne
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
jmp
xor
push
mov
mov
mov
xor
pop
cmp
lea
rep
jl
push
pushl
call
test
jne
mov
xor
lea
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
incl
lea
cmp
jl
test
jne
cmp
jg
cmp
lea
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
andl
lea
mov
mov
andl
lea
mov
cmp
mov
je
mov
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
mov
cmp
jne
cmpl
je
mov
cmp
jge
mov
shr
or
or
jmp
add
mov
shr
or
or
cmp
jne
mov
mov
cmp
jne
cmp
jne
incl
addl
cmpl
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
mov
cmp
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
push
mov
push
push
mov
mov
mov
test
je
test
jne
test
je
andl
test
je
mov
and
mov
mov
mov
andl
andl
and
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
testw
push
je
mov
mov
sub
lea
mov
mov
dec
test
mov
jle
push
push
push
call
add
mov
jmp
cmp
je
mov
mov
sar
and
mov
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
push
lea
pop
push
push
push
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
or
pop
pop
pop
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
testb
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
incl
mov
cmp
jne
incl
movb
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
movl
mov
jmp
call
mov
jmp
lea
push
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
jmp
mov
testb
je
mov
cmpb
je
movl
mov
jmp
sub
jmp
andl
movl
or
pop
pop
pop
leave
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
je
and
mov
jmp
orl
or
mov
andl
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmpl
jne
push
call
cmp
pop
je
inc
jmp
cmpl
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmpl
mov
je
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
inc
inc
add
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
inc
add
inc
inc
add
inc
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
inc
inc
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
push
mov
sub
cmp
jl
cmp
jg
push
push
mov
mov
add
test
jne
cmp
jle
inc
call
mov
lea
imul
sar
mov
mov
add
mov
add
mov
lea
mov
mov
lea
imul
add
imul
add
dec
cmpl
mov
pop
pop
lea
mov
je
cmpl
jne
cmpl
je
lea
push
call
pop
mov
test
je
add
mov
jmp
or
pop
leave
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
andb
test
je
push
call
pop
jmp
xor
jmp
andl
movl
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
mov
test
je
cmp
je
mov
test
jne
mov
push
cmp
je
mov
sar
and
mov
lea
jmp
mov
mov
pop
and
cmp
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
dec
mov
movzbl
inc
mov
pop
ret
neg
sbb
and
add
or
andl
or
pop
ret
push
mov
sub
push
push
mov
push
cmp
jae
mov
and
sar
shl
lea
mov
add
mov
test
je
andl
mov
cmpl
mov
je
test
jne
test
je
mov
cmp
je
decl
mov
mov
lea
movl
movb
lea
push
push
mov
pushl
push
pushl
call
test
jne
call
push
pop
cmp
jne
movl
mov
jmp
cmp
jne
xor
jmp
push
call
pop
jmp
mov
mov
add
lea
mov
test
je
test
je
cmpb
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
movb
inc
mov
jmp
lea
push
push
incl
lea
push
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
inc
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
andl
movl
or
pop
pop
pop
leave
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
jne
movl
jmp
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
andb
lea
mov
jmp
andl
movl
or
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
xor
mov
cmp
mov
jge
mov
push
push
push
call
add
cmp
mov
jl
mov
test
jne
sub
jmp
mov
mov
mov
sub
test
mov
je
mov
mov
sar
and
mov
testb
je
mov
cmp
jae
cmpb
jne
incl
inc
jmp
test
jne
movl
or
jmp
cmpl
jne
mov
jmp
testb
je
mov
test
jne
and
jmp
sub
add
mov
mov
sar
and
lea
shl
mov
testb
je
push
push
pushl
call
add
cmp
jne
mov
mov
add
cmp
jae
cmpb
jne
incl
inc
jmp
testb
jmp
push
pushl
pushl
call
mov
add
cmp
ja
mov
test
je
test
je
mov
mov
mov
testb
je
incl
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
pop
mov
inc
cmp
je
cmp
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
jne
movl
or
jmp
test
je
xor
jmp
or
jmp
push
pushl
push
pushl
call
mov
add
cmp
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
push
push
xor
xor
xor
cmp
push
jle
mov
mov
mov
cmp
je
testb
je
inc
add
cmp
jl
jmp
mov
jmp
mov
push
shl
call
pop
mov
mov
mov
mov
cmp
je
mov
cmp
je
orl
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
push
mov
push
xor
mov
test
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
test
mov
jne
push
call
pop
mov
cmpw
je
push
push
call
mov
pop
inc
cmpw
je
lea
push
call
test
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
cmpw
lea
jne
pop
pushl
call
andl
andl
pop
pop
movl
pop
ret
push
mov
push
push
push
push
mov
push
push
push
call
mov
mov
mov
cmpw
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
shl
push
call
mov
add
test
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
mov
push
andl
cmpl
movl
mov
je
mov
addl
mov
push
pop
cmp
jne
mov
add
push
pop
cmp
je
test
je
incl
test
je
mov
mov
add
mov
add
jmp
incl
test
je
andw
add
cmp
jne
add
jmp
push
pop
incl
test
je
mov
mov
add
mov
add
cmp
je
test
je
cmp
jne
test
jne
sub
jmp
test
je
andw
andl
cmpw
je
mov
cmp
je
cmp
jne
add
jmp
xor
cmp
je
cmp
je
mov
addl
mov
mov
incl
movl
xor
cmpw
jne
add
inc
jmp
cmpw
jne
test
jne
xor
cmp
je
cmpw
lea
jne
mov
jmp
mov
xor
push
cmp
pop
sete
mov
shr
mov
dec
test
je
inc
test
je
movw
add
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
mov
add
incl
add
jmp
test
je
andw
add
incl
jmp
mov
pop
pop
cmp
pop
je
mov
mov
incl
pop
ret
push
mov
push
mov
push
push
xor
xor
push
mov
test
jne
call
mov
test
je
movl
jmp
call
mov
test
je
movl
jmp
cmp
jne
test
jne
call
mov
test
je
xor
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
inc
inc
mov
push
call
mov
pop
test
jne
push
call
mov
jmp
push
push
push
call
add
jmp
cmp
jne
test
jne
call
mov
test
je
cmpb
mov
je
push
push
push
push
push
pushl
call
test
je
push
add
call
cmpb
lea
pop
jne
inc
mov
lea
push
call
mov
pop
test
jne
push
call
xor
pop
pop
pop
pop
pop
ret
cmpb
mov
mov
je
mov
mov
sub
sar
sub
push
push
push
push
push
pushl
call
test
je
push
call
push
lea
call
cmpb
pop
pop
lea
jne
andw
jmp
push
call
pop
xor
push
call
mov
jmp
mov
push
push
push
mov
push
mov
test
jne
call
test
je
movl
jmp
call
test
je
movl
jmp
cmp
jne
call
jmp
cmp
jne
call
mov
push
mov
push
push
push
push
pushl
call
mov
test
je
lea
push
call
mov
pop
test
je
push
push
push
push
push
pushl
call
test
jne
push
call
pop
xor
pop
pop
pop
pop
ret
mov
jmp
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
mov
xor
mov
cmp
je
add
inc
cmp
jl
mov
shl
cmp
jne
mov
ret
xor
ret
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcrb
in
pop
inc
add
pop
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
inc
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
pop
inc
add
pop
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
pop
inc
add
inc
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
pop
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
incl
push
call
pop
mov
test
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
mov
cmp
jb
xor
ret
mov
and
sar
mov
mov
and
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
pop
ret
call
cmpb
je
jmp
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
movl
ret
mov
mov
ret
cmp
jb
cmp
movl
jbe
movl
ret
mov
cmp
jae
mov
mov
sar
and
mov
testb
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
movl
or
ret
cmpl
jne
call
incl
ret
push
push
push
push
push
xor
or
push
xor
mov
mov
mov
call
mov
pop
cmp
jne
push
call
cmp
je
mov
mov
imul
cmp
push
pop
mov
mov
je
mov
imul
add
mov
cmp
je
mov
cmp
je
sub
mov
imul
mov
jmp
mov
mov
lea
mov
push
push
push
mov
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
mov
andb
lea
push
push
push
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
cmpb
je
mov
cmp
je
push
push
call
pop
test
pop
je
pushl
call
push
call
inc
push
call
add
cmp
mov
je
push
push
call
push
push
pushl
call
mov
add
add
andb
cmpb
jne
push
inc
pop
push
call
pop
mov
mov
imul
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
imul
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmp
je
neg
mov
movsbl
cmp
mov
je
push
push
pushl
call
mov
add
andb
jmp
mov
andb
pop
pop
pop
pop
pop
ret
push
push
push
xor
cmp
jne
xor
jmp
mov
push
pop
mov
cmp
jne
cmp
je
cmp
je
movzwl
push
cmp
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
push
push
jmp
movzwl
push
push
movzwl
push
push
push
push
push
call
movzwl
add
cmp
push
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
pushl
push
push
call
add
jmp
movzwl
push
push
movzwl
push
push
pushl
push
jmp
push
push
push
push
push
push
push
push
push
push
push
call
push
push
push
push
push
push
push
push
pushl
push
push
call
add
mov
mov
mov
cmp
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
mov
cmpl
push
mov
push
jne
mov
mov
andl
mov
jne
shl
mov
jmp
shl
mov
mov
lea
imul
lea
push
sar
mov
push
add
lea
pop
cltd
idiv
mov
pop
cmp
jge
imul
sub
add
lea
jmp
imul
sub
add
add
cmpl
jne
cmpl
jne
mov
jmp
mov
cmp
jle
sub
jmp
mov
test
jne
mov
jmp
mov
add
cmpl
jne
mov
mov
imul
add
mov
imul
add
imul
add
mov
jmp
mov
mov
imul
add
imul
add
add
imul
add
mov
jns
add
dec
mov
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
ret
push
push
push
or
xor
xor
mov
mov
test
je
lea
cmp
jae
testb
je
add
jmp
orl
sub
sar
add
mov
cmp
jne
add
inc
add
cmp
jl
jmp
mov
push
call
test
pop
je
addl
lea
lea
mov
cmp
jae
andb
orl
movb
mov
add
add
jmp
shl
mov
pop
mov
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
andl
movl
or
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
andl
movl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
testb
lea
je
mov
ret
andl
movl
or
ret
push
mov
push
xor
testb
push
je
add
testb
je
or
testb
je
or
pushl
call
test
jne
call
push
call
pop
or
jmp
cmp
jne
or
jmp
cmp
jne
or
call
mov
or
cmp
jne
andl
movl
jmp
pushl
push
call
pop
mov
pop
or
sar
mov
mov
and
mov
mov
pop
pop
pop
ret
pushl
push
pushl
pushl
call
add
ret
push
mov
sub
mov
push
xor
push
test
push
movl
mov
je
mov
movb
jmp
andb
movl
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
je
movl
mov
jmp
movl
jmp
movl
jmp
movl
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
jmp
movl
jmp
movl
mov
mov
test
je
mov
not
and
test
jne
push
pop
test
je
or
orb
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
andl
movl
jmp
push
push
pushl
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
mov
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
pop
mov
pop
mov
mov
or
sar
and
mov
lea
shl
mov
andb
mov
jne
test
je
testb
je
push
push
push
call
add
cmp
mov
jne
cmpl
je
jmp
andb
lea
push
push
push
call
add
test
jne
cmpb
jne
pushl
push
call
pop
cmp
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
or
jmp
cmpb
jne
testb
je
mov
orb
lea
mov
pop
pop
pop
leave
ret
mov
mov
cmpw
je
inc
inc
cmpw
jne
mov
push
mov
mov
inc
inc
inc
inc
test
jne
pop
ret
mov
mov
push
mov
lea
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
pop
ret
mov
cmpw
lea
je
mov
inc
inc
test
jne
sub
sar
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
testb
je
push
call
cmp
pop
je
inc
cmp
jl
mov
pushl
call
mov
pop
andl
inc
cmp
jl
mov
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
push
cltd
mov
push
push
mov
push
mov
call
mov
add
adc
mov
mov
movzbl
inc
jmp
cmpl
mov
jne
neg
mov
adc
neg
jmp
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
cmpl
push
push
mov
push
je
test
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
mov
test
je
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
jmp
mov
lea
jmp
xor
pop
pop
pop
ret
push
mov
mov
call
push
mov
push
xor
cmp
jae
mov
mov
sar
and
mov
testb
je
push
push
push
call
add
cmp
mov
je
push
push
push
call
add
cmp
je
push
mov
sub
test
jle
push
lea
push
push
call
push
push
call
add
mov
mov
cmp
jge
mov
push
lea
push
push
call
add
cmp
je
sub
test
jle
jmp
cmpl
jne
movl
or
pushl
push
call
pop
pop
jmp
jge
push
pushl
push
call
push
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
movl
call
mov
push
pushl
push
call
add
mov
pop
jmp
movl
or
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
push
mov
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
push
push
push
mov
push
xor
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
pushl
push
push
call
test
je
push
pushl
call
mov
add
pop
cmp
pop
jne
xor
pop
pop
pop
pop
pop
ret
or
jmp
mov
push
cmp
jae
mov
and
sar
mov
lea
mov
test
je
mov
mov
and
cmp
jne
and
jmp
cmpl
jne
or
neg
sbb
mov
and
add
pop
ret
movl
jmp
movl
or
pop
ret
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
push
pop
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
push
mov
push
push
push
push
push
call
test
je
movl
mov
cmp
jle
push
pushl
call
pop
pop
mov
mov
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jle
mov
jmp
cmp
jg
lea
push
pushl
call
test
je
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
push
jmp
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
push
push
push
pushl
push
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
push
pop
cmp
je
pushl
pushl
push
pushl
push
pushl
mov
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
pushl
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
push
push
push
push
push
xor
cmp
je
push
pushl
call
mov
pop
cmp
pop
mov
je
cmp
je
mov
xor
cmp
sete
cmp
jne
push
call
pop
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
jne
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
sub
mov
mov
push
pushl
call
mov
pop
test
pop
jl
cmpl
je
test
je
pushl
lea
call
pop
cmpl
je
mov
inc
mov
add
jmp
mov
shl
push
pushl
call
pop
test
pop
je
jmp
mov
mov
jmp
test
jne
test
jge
neg
lea
push
push
call
pop
test
pop
je
mov
mov
andl
mov
cmpl
je
pushl
call
inc
inc
push
call
mov
pop
test
pop
je
pushl
push
call
mov
pop
sub
pop
add
andb
inc
neg
sbb
not
and
push
push
call
push
call
pop
xor
jmp
push
mov
push
mov
test
je
mov
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
mov
add
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
push
mov
xor
test
jne
xor
pop
ret
cmpl
lea
je
mov
inc
add
test
jne
push
push
lea
push
push
call
mov
pop
test
mov
jne
push
call
pop
mov
mov
test
je
push
add
call
mov
mov
pop
add
jmp
andl
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
test
push
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
xor
jmp
xor
cmp
ja
push
call
mov
pop
test
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
mov
pop
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
test
jne
test
jne
push
pop
add
and
push
push
pushl
call
mov
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
jmp
test
jne
push
pop
add
and
push
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmpl
jne
pushl
pushl
call
pop
pop
pop
ret
mov
movzbw
test
je
movzbl
testb
je
mov
inc
test
je
movzwl
movzbl
shl
or
cmp
je
jmp
movzwl
cmp
je
inc
jmp
xor
pop
ret
lea
pop
ret
movzwl
mov
sub
neg
sbb
not
and
pop
ret
push
mov
test
je
push
call
inc
push
call
pop
test
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
add
add
add
add
add
add
add
add
dec
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
insb
add
add
add
xchg
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
xchg
add
add
add
faddl
add
testb
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
add
add
add
add
add
add
incl
add
add
add
add
add
rolb
add
cmp
add
ret
ret
inc
ror
into
dec
int
jne
mov
les
fcoms
imul
cmc
and
in
ds
mov
aaa
sub
push
mov
testl
push
jnp
cmc
ja
push
jmp
ror
shrb
movsl
jg
mov
insl
sbbl
in
insl
in
subl
rcll
xchg
or
mov
stc
xor
jns
cmp
outsl
adc
subb
pop
outsb
aas
fstpt
and
nop
or
idiv
add
xlat
test
adc
dec
test
std
and
sub
ss
sbb
push
loop
mov
pop
cmpsl
xchg
jecxz
movsb
push
inc
repnz
push
rcr
in
mov
lcall
mov
fsubs
sbb
es
cmp
insb
push
cmp
mov
cmp
in
pop
sub
std
divl
daa
sbb
push
dec
push
add
pop
push
repz
mov
movsl
adc
insl
mov
inc
xchg
adc
xchg
sub
fstpl
xlat
mov
mov
test
and
inc
push
jbe
enter
xchg
stos
xor
jmp
ror
in
and
xchg
xlat
xor
nop
or
or
divb
pop
in
mov
adc
push
mov
scas
call
repz
loopne
adc
shl
mov
push
xor
loopne
sub
or
into
and
rcl
dec
aad
sahf
xor
dec
fcmovne
insb
xor
lods
adc
incb
bswap
push
outsb
mov
pop
dec
xchg
mov
inc
inc
lock
test
inc
sbb
add
or
inc
sti
sub
add
fsubrs
fisubl
jp
xor
mov
or
push
test
aad
test
dec
xchg
sarl
in
outsb
insl
lcall
iret
fistpll
lahf
adcb
xchg
dec
mov
jecxz
inc
jns
clc
pop
daa
cmp
push
aaa
shll
dec
shll
addl
mov
or
cmp
pop
inc
inc
es
or
jl
jl
ds
test
sbb
ja
out
aas
cmp
sub
sub
pushf
popf
ss
or
sbb
push
mov
pop
and
jbe
xchg
sbb
lret
les
movzwl
and
or
jle
adc
xchg
hlt
sbb
mov
jne
test
sar
jge
sbb
push
jmp
ret
sbb
ret
out
adc
mov
jns
mov
xchg
mov
into
jmp
addr16
inc
lock
iret
test
stos
std
lahf
in
stos
imul
add
push
dec
pop
dec
pop
inc
pusha
outsb
or
inc
ds
and
ja
or
lret
jge
dec
mov
inc
push
mov
pop
fistpll
mov
ret
sub
js
js
push
lds
push
cmpsl
jle
cwtl
in
push
fdivrl
mov
lea
xor
js
xchg
mov
cmpsl
shrb
xchg
mov
cmp
mov
loope
or
jnp
xlat
sub
and
jbe
add
cmp
fsubl
imul
adc
outsb
je
sub
inc
mov
pop
pop
mov
lods
and
mov
sub
scas
ss
cmp
jo
push
xchg
or
lahf
mov
loop
sub
repnz
mov
xor
push
mov
aam
subl
add
pop
shrl
mov
dec
cmpsl
aam
push
mov
jbe
inc
push
outsb
sub
popf
xor
imul
ss
sub
add
pop
jg
movsl
shlb
push
mov
popa
cwtl
into
mov
inc
mov
ja
ret
pop
sbb
pop
ret
fwait
and
jl
cmp
ss
lea
sti
addl
sahf
or
fidivrl
cmp
ljmp
jae
in
inc
add
add
sti
and
shrl
push
sub
adc
loop
shlb
dec
into
sbb
mov
lahf
out
std
jo
stos
and
call
sub
and
int3
or
and
imul
popa
jle
ss
xchg
fnsave
inc
push
sahf
mov
pop
jbe
loop
rcr
xor
cmp
cmp
fmuls
pop
xchg
jo
push
mov
imulb
gs
cmp
out
sbb
adc
movswl
cs
xor
arpl
lcall
les
adc
cmc
push
pusha
sbb
insb
xchg
xchg
push
loopne
adc
rorb
fcomip
xor
repnz
nop
out
or
insb
daa
dec
fisubrs
out
mov
mov
mov
mov
addr16
pop
cmpb
xor
nop
ret
adc
pop
xlat
out
mov
stc
mov
aad
xor
popf
jg
jbe
and
iret
mulb
jmp
jl
jge
or
loopne
push
jle
pop
fcoml
sbb
mov
cmp
mov
push
aad
mov
dec
fldenv
jnp
xor
inc
lods
xor
mov
mov
loope
aaa
ss
push
mov
bsf
mov
jmp
shlb
in
lock
sub
push
dec
pop
inc
jmp
or
decl
push
and
or
nop
dec
fs
outsb
jo
fldl2e
pop
iret
iret
popa
fidivs
push
jno
pop
fiadds
inc
out
cmp
adc
and
mov
mov
movl
xor
les
or
push
mov
fsubrs
insb
xor
add
es
jno
orl
pusha
jne
and
mov
dec
mov
dec
jne
repnz
out
imulb
push
mov
fistpll
sahf
sbb
cltd
dec
dec
pop
dec
cltd
cmp
cmpsl
push
pop
int3
pop
test
inc
mov
adc
pushf
and
test
stc
lret
clc
mov
jge
fdivs
jmp
xchg
sarb
xchg
jo
pop
inc
fs
bt
ret
jae
and
cs
cli
cltd
add
xor
xchg
bound
mov
scas
in
xor
popf
aaa
inc
call
jmp
imul
ret
pop
cwtl
dec
inc
xor
aad
inc
mov
lcall
cmc
lock
ds
mov
call
jb
fsubs
mov
xor
test
out
or
jp
xor
es
ds
push
adc
sbb
cmp
jbe
sbb
xchg
xor
mov
int3
or
out
lods
and
aas
ret
mov
ret
cmp
xchg
jae
cmc
test
sbbl
xchg
test
popa
or
add
dec
jo
int3
pop
mov
inc
push
ds
fldcw
mov
inc
test
inc
stc
pop
bound
cwtl
jmp
jae
popa
or
or
dec
push
inc
into
ret
push
pop
push
pop
sarl
and
lcall
les
enter
pop
je
sbb
adc
push
cmp
pop
sub
inc
dec
mov
sub
push
xchg
daa
add
fwait
int3
cli
push
jecxz
cmp
dec
aam
into
ss
push
jbe
aaa
test
pop
ljmp
pop
test
mov
cmp
sub
insb
repnz
add
push
pop
dec
outsl
dec
loopne
or
inc
inc
cmpsl
add
lcall
out
scas
push
push
add
adc
push
loope
mov
sub
cmp
add
sbb
out
jp
inc
push
dec
repnz
mov
adc
mov
les
incb
mov
mov
pop
mov
arpl
dec
push
scas
icebp
xchg
lock
sbb
sub
popf
mov
cmp
push
test
mov
adc
stos
lods
cltd
or
lcall
sub
lahf
xchg
push
nop
scas
xor
xchg
mov
data16
imul
das
js
outsl
repnz
or
or
nop
fcompl
inc
inc
jmp
push
jnp
mov
add
bound
clc
movsl
stos
mov
dec
loopne
aaa
dec
cmovns
shll
or
xchg
cmp
mov
test
imul
push
ja
fisttpl
or
dec
add
sub
jnp
in
inc
movsl
jae
loop
xor
push
vphaddwd
inc
mov
popf
in
sahf
sub
movsl
stos
mov
lock
mov
mov
push
int
dec
dec
or
push
pop
or
jle
jno
insb
push
inc
mov
pop
push
in
in
dec
movsl
out
push
call
enter
stc
mov
imul
in
xchg
mov
popf
call
mov
sub
loope
jg
insl
divl
mov
outsb
jnp
or
ret
daa
xor
popa
orl
cwtl
inc
int3
inc
outsb
jb
loope
out
test
jne
add
mov
leave
fstpt
lods
sub
cmc
jb
test
les
lods
data16
cmpsl
fiaddl
add
movsl
ds
adc
sahf
lcall
les
add
adc
pop
dec
mull
leave
xlat
in
xchg
push
pop
cmp
leave
lods
lret
arpl
xchg
push
mov
add
xchg
pop
xchg
sarl
xor
add
sub
pop
in
aas
ret
sbbb
imul
mov
aaa
mov
into
xchg
sbbb
mov
add
dec
bound
int3
or
pop
adc
jmp
mov
add
xchg
sub
cmpsl
dec
xchg
cmp
lret
icebp
adc
mov
mov
sbb
pop
int3
or
jns
jb
fstp
dec
jecxz
xor
xchg
ror
or
or
in
mov
add
mov
xchg
pop
pop
sub
xchg
fwait
adc
jae
mov
pop
mov
pop
push
movsl
mov
stos
mov
adc
sbb
push
aaa
insb
add
lahf
and
sahf
stos
inc
call
rclb
xlat
imul
repz
enter
leave
mov
and
repnz
fwait
pop
mov
mov
in
aam
push
xchg
in
push
push
ret
test
cmp
lods
ret
jp
rol
mov
int
ss
jp
add
test
les
pop
loopne
cmp
rolb
imul
test
inc
push
and
test
pop
push
enter
jns
push
inc
cmp
lea
jbe
sub
aaa
fs
fwait
insl
lods
leave
insb
add
ss
dec
cmp
mov
scas
fcoms
stos
pusha
ljmp
xchg
lahf
inc
xor
xor
out
and
sahf
fistpll
fisubrl
or
leave
pop
dec
int
sub
xor
sub
stos
mov
cmp
mov
or
jl
mov
or
inc
stc
imul
iret
xchg
movsb
out
pop
inc
jle
arpl
fdivr
mov
jne
fwait
aaa
insl
or
shlb
sahf
pop
adcb
xor
jns
es
dec
sbb
xor
pop
or
push
lret
mov
les
sbb
shrb
mov
and
hlt
cmp
dec
sub
push
jns
fisttpll
push
ja
jl
pop
loope
dec
fistl
sbb
mov
stc
das
pop
or
add
pop
popf
aad
dec
jmp
lods
sub
mov
sbb
inc
mov
mov
fwait
icebp
dec
lock
push
insb
xor
push
xor
jle
xchg
js
iret
gs
and
add
mov
movsl
jp
xchg
in
shll
clc
inc
add
insb
mov
mov
mov
push
out
xchg
lock
shlb
imul
xor
aam
int3
cmpsl
adc
pop
sub
inc
loop
mov
jmp
mov
out
push
sarb
sbb
sub
jg
xor
mov
cmp
push
or
cli
push
mov
mov
cmpsb
sbb
push
cmp
daa
xchg
fnstcw
cld
mov
sbb
shlb
mov
fxch
ret
adc
pusha
mov
stos
dec
mov
xor
mov
xchg
xchg
push
jo
lret
pop
jo
decb
mov
add
insb
xchg
sbb
in
ret
repnz
mov
mov
rcrl
push
dec
and
xchg
iret
sbb
add
pushf
xor
imul
sub
inc
pop
push
adc
popl
not
inc
sub
and
push
fnsave
int
sub
xchg
jge
sbb
pop
xchg
jbe
push
push
out
loope
adc
and
jae
pusha
sub
int3
xchg
mov
sbb
xchg
fcom
pop
mov
mov
stos
fisttps
pop
fsts
in
mov
pop
sub
daa
lds
fcompl
jl
cwtl
mov
daa
mov
mov
idivl
out
cwtl
mov
pop
pushl
loope
loope
inc
jmp
insl
insb
loope
in
fwait
out
pop
icebp
into
mov
bound
popa
fs
mov
lods
mov
jl
gs
mov
cwtl
pop
mov
sbbl
sbb
insl
pop
scas
std
addr16
and
adc
and
inc
pop
roll
xchg
push
adc
cmp
int
out
lahf
add
jge
cmp
test
stos
jl
outsl
fwait
jae
sar
nop
jno
jg
xchg
jle
xor
andb
mov
and
mov
aas
call
xlat
mov
movb
int
test
mov
xchg
pop
jb
mov
adc
inc
jb,pn
add
lds
sbb
and
jl
std
shlb
adc
push
pop
insl
mov
add
mov
cmp
in
fwait
pop
pop
leave
mov
in
lock
dec
cs
mov
sbb
or
leave
fiaddl
sbb
aaa
and
sbbl
cmp
stos
fists
lahf
inc
xchg
jle
out
call
into
andb
cmc
fidivs
lahf
scas
inc
mov
test
adc
mov
in
fcomps
stos
repz
mov
jle
out
push
aaa
fdivl
pop
or
pop
outsl
jge
xor
outsb
jecxz
std
xlat
js
or
sarl
inc
pop
dec
cltd
je
inc
pop
sti
xchg
or
sub
fldt
pop
insl
iret
mov
pushf
popf
jecxz
adc
add
sbb
or
dec
test
movsb
aas
fwait
out
push
mov
into
inc
out
icebp
loopne
sub
fs
lret
and
icebp
test
adc
cmc
inc
mov
cmp
sub
pop
mov
dec
pop
in
lock
cmpsl
xor
mov
out
loope
test
andl
mov
testb
or
test
mov
inc
ljmp
mov
mov
enter
xchg
inc
aaa
jae
push
fcmovnb
std
int
dec
cmp
mov
sub
sahf
inc
cmpsb
xor
pop
pop
fldcw
xchg
outsb
dec
mov
push
icebp
dec
repz
fcomps
pop
cld
xchg
inc
fdivrs
cmpsb
nop
dec
adc
cmpsl
xlat
inc
cmp
fnstenv
xor
outsb
and
pushf
fimuls
aam
call
xor
pop
icebp
push
or
add
push
lea
add
cld
mov
lret
stc
decl
mov
or
sar
xlat
loope
mov
cs
adc
sub
mov
subl
lods
cld
sub
aas
sbb
idivb
rclb
inc
inc
dec
repnz
int
arpl
ljmp
sbb
xor
rclb
outsb
mov
out
cs
mov
in
pop
pop
scas
cmp
imul
mov
ljmp
or
cwtl
mov
ja
pop
sbb
lods
aaa
sbb
enter
xchg
addl
leave
leave
cmpsb
insb
test
shll
cmp
xchg
cmpsb
xchg
push
cmc
sti
xor
push
aad
cmp
fadd
inc
or
xchg
ljmp
dec
or
out
mov
hlt
sbb
test
or
in
adc
adc
dec
dec
fildll
add
loop
call
sbb
mov
bnd
and
cwtl
inc
insb
out
cltd
or
fadds
pop
shr
fldt
jp
call
loopne
pop
pop
jecxz
and
out
dec
xor
clc
pop
adc
mov
arpl
cwtl
leave
je
pop
mov
test
add
or
mull
iret
orl
fstl
rorl
mov
mov
insb
outsb
xchg
lahf
mov
sbb
clc
adc
inc
cmpl
cmpsl
cmc
mov
out
loop
out
jbe
or
dec
push
into
xor
and
push
out
aad
pop
nop
rorb
fsubs
push
mov
shll
imul
rcll
adc
push
adc
jbe
push
push
push
xchg
cmp
pusha
mov
sub
adc
imul
lret
xor
mov
xor
sub
out
outsl
mov
pop
sub
lcall
call
iret
data16
testl
shll
popf
xor
ljmp
adc
xchg
dec
lds
movsl
jg
in
out
fs
inc
dec
mov
stos
in
xlat
aaa
cmp
les
lea
out
mov
mov
test
cmp
fwait
mov
repz
mov
fsubs
xchg
jnp
xor
push
adc
adc
mov
repz
in
inc
xchg
add
dec
add
pop
sub
dec
cs
int3
push
cltd
cmovne
or
es
mov
lret
ret
inc
sahf
cmpsl
scas
and
in
je
mov
push
scas
testl
loopne
sbb
push
push
ds
andl
jae
adc
pusha
mov
inc
or
mov
frstor
fldenv
pop
out
add
sub
cmpsb
je
ljmp
popf
mov
daa
mov
xchg
ja
push
adc
mov
xlat
sub
add
jp
push
repz
stc
bnd
mov
mov
lods
adc
xor
popf
mov
mov
push
pop
pop
jne
test
or
aaa
add
loope
mov
xor
jmp
or
scas
adcl
xor
cmp
popf
fsubrs
aad
jmp
add
popf
negl
ja
mov
leave
mov
bound
xchg
adc
push
inc
cld
sahf
dec
repz
shrb
or
lcall
xor
cmpb
lock
enter
xchg
mov
std
inc
movsb
mov
jmp
ljmp
stc
mov
mov
jns
xor
push
lds
je
fsubl
mov
xor
pop
xchg
and
sub
jecxz
inc
mov
sub
pop
bound
cmp
enter
rol
lock
shlb
aad
test
mov
ds
js
mov
xchg
mov
or
in
inc
mov
sbb
popa
pop
xchg
xchg
addr16
add
data16
test
ret
repz
mov
stc
or
xchg
sub
sub
push
lods
js
jbe
aaa
mov
xor
fistpll
movsl
push
stos
mov
icebp
xchg
sub
jle
daa
lock
or
shlb
sub
sbbb
push
cmpsl
mov
inc
dec
add
scas
or
dec
shlb
ret
push
mov
inc
push
addr16
mov
gs
cs
lock
in
out
repz
sti
lahf
mov
aas
mov
ss
mov
cmc
fisubrs
cld
xchg
jmp
mov
inc
push
pop
inc
pop
xchg
mov
cmpsl
inc
insb
add
fistpl
test
data16
call
popa
sub
mov
or
pop
pop
clc
jae
aad
push
das
ret
out
sbb
cmpsl
int
cmc
shlb
xor
loopne
fbstp
in
out
inc
mov
adc
aas
bswap
sbb
lock
imul
push
icebp
hlt
and
adc
sbb
into
push
jno
jbe
mov
cmc
xor
sub
aam
je
and
mov
stos
dec
mov
push
mov
iret
jo
fidivrs
arpl
pop
mov
aam
mov
std
dec
mov
push
adc
jg
push
hlt
add
lds
dec
mov
push
jae
pop
inc
cld
adc
push
arpl
test
dec
mov
jbe
inc
call
hlt
sub
dec
repnz
push
jno
mov
es
mov
je
popl
xchg
sbb
aad
xchg
or
push
fwait
clc
out
inc
and
cs
stos
adc
cwtl
and
idiv
rclb
roll
mov
fs
sbb
add
and
jno
test
lret
fwait
adc
mov
sbb
xchg
leave
mov
dec
nop
add
xor
mov
sahf
movl
pushf
mov
sbb
pop
cmp
push
ds
test
pushf
sbb
pop
mov
adc
dec
inc
rorl
repz
push
xor
int
pop
cmp
scas
test
sahf
push
xchg
leave
mov
repnz
ror
test
idivl
lods
pop
stos
push
dec
push
mov
gs
int
jno
inc
jmp
cmpsl
or
cwtl
and
mov
cwtl
jno
mov
mov
leave
gs
jmp
lahf
adc
sub
pop
ja
into
add
jecxz
xchg
push
fcoms
pop
das
push
mov
or
adc
cmp
xorl
xchg
and
enter
mov
mov
sbb
loop
pop
outsl
push
push
arpl
sahf
std
mov
pusha
or
rorl
dec
cmp
cmp
sbb
inc
das
int3
ja
dec
shlb
lret
and
or
hlt
pop
push
jbe
je
cltd
or
inc
or
mov
pop
xchg
xlat
add
std
ds
cmc
lret
adc
mov
hlt
ja
and
mov
lret
or
or
test
sti
fcmovu
push
xchg
mov
jns
inc
sbb
andl
ficoms
insl
lea
imul
fadds
enter
popf
testl
fcompl
movsb
scas
sbb
sub
stos
adc
sbb
rcrl
xor
les
fnstcw
call
gs
out
negb
enter
lea
int
sbbl
mov
jle
pop
adc
add
inc
pushf
pop
mov
je
sub
mov
js
pop
add
xchg
imul
mov
xor
sbbl
jbe
pop
pusha
xor
push
adcb
paddsw
push
sbb
cmp
xchg
and
ja
inc
mov
adc
shrl
cs
lret
mov
mov
pop
cmpsl
mov
ret
fwait
sbb
mov
xor
stos
fldenv
clc
mov
rcr
iret
inc
js
jl
xchg
push
cmpsb
and
insl
push
int3
outsb
adcl
cmp
mov
pop
aad
test
insl
fwait
pop
xor
stos
arpl
in
and
jmp
sar
adc
pop
inc
sbb
mov
mov
insl
and
xchg
inc
push
je
sbb
jecxz
stos
push
fmulp
pop
push
xlat
push
inc
insb
dec
inc
sub
lods
mov
adc
push
loopne
fimull
and
and
fbld
mov
xorl
or
call
jne
in
inc
je
mov
pop
sub
addb
sub
adcb
add
and
lds
and
imul
and
in
lds
out
iret
push
push
sbb
popl
rcll
sti
cld
sarl
mov
lods
sub
xchg
push
int3
test
movsb
mov
pop
lcall
stos
adc
sahf
incb
lret
lea
cmc
mov
mov
mov
xchg
push
push
jns
outsl
adc
add
sbb
xchg
test
jg
in
inc
jg
sub
call
insl
inc
inc
out
push
add
pop
leave
adc
and
cmp
mov
cwtl
inc
push
add
jbe,pn
aaa
push
test
pop
xchg
adc
jl
mov
test
cli
test
mov
cli
shr
pop
iret
outsb
push
jl
loopne
mov
out
and
jne
and
cmpsb
mov
js
and
mov
add
and
and
movsl
adc
pop
mov
xor
repnz
popf
xchg
out
lods
or
icebp
jmp
int3
lds
sbb
int3
and
dec
sub
xchg
and
lock
pop
mov
dec
imull
mov
data16
cmp
imul
jo
xor
stos
lods
rcrl
mov
insw
fmul
pop
jl
jge
inc
xchg
cmp
fnstenv
dec
push
xchg
cli
arpl
cld
inc
mov
sbb
outsl
addr16
jmp
add
mov
jo
es
subb
xchg
cwtl
pop
sub
pop
add
subl
lcall
mov
out
sub
jbe
and
jne
imul
and
fld
ficomps
dec
in
cs
push
int
test
mov
aad
test
sbb
test
mov
fidivrs
inc
pop
mov
push
dec
pop
mov
dec
test
es
adc
xchg
in
mov
pushf
scas
stos
bound
popa
test
jbe
inc
imul
mov
sbbl
repnz
loop
gs
repnz
inc
cmp
popa
enter
lret
cli
add
push
jg
mov
leave
sahf
aas
pop
leave
fcmovu
dec
cli
addl
cmp
jecxz
push
push
adc
stos
jnp
adc
inc
pusha
sub
push
inc
aam
lds
icebp
sub
mov
jb
mov
fmuls
push
mov
mov
pop
imul
fs
sub
jbe
nop
loop
cmc
dec
or
idivl
es
lods
sbb
xchg
xchg
int
testl
pushf
sbb
iret
int3
mov
push
lock
cmp
ja
pop
outsb
inc
jg
jg
xchg
arpl
xchg
ficompl
adc
jo,pt
mov
mov
adc
inc
loopne
add
cwtl
mov
lret
mov
push
jns
pop
or
push
loop
and
jle
arpl
xor
int3
pop
cli
mov
inc
ret
ljmp
inc
and
popa
push
dec
movsb
les
or
mov
jmp
cmp
pop
mov
adc
in
push
jo
inc
sbb
movsb
out
nop
mov
jmp
jl
loope
fsubp
push
scas
insb
sub
inc
orb
jl
mov
inc
dec
ds
fistpl
push
push
xor
rclb
pop
mov
daa
fisttpll
sub
jno
daa
push
test
or
lret
xchg
cmp
or
cmpsb
aad
rolb
stos
in
loope
jbe
sbb
into
insb
imul
mov
test
stos
mov
fdiv
ljmp
lcall
adc
push
insl
fs
and
rsm
je
out
lods
jl
add
cld
sub
pop
ljmp
and
xchg
imul
mov
int
fwait
pop
xchg
lock
repz
negl
and
cmp
dec
adc
mov
lock
cmpb
mov
inc
lret
fistl
fwait
xor
inc
inc
add
push
pop
in
mov
cld
inc
push
push
adc
sub
pop
jmp
dec
mov
pop
sub
test
xor
repz
jb
lahf
pop
in
ret
mov
mov
xor
sbb
fisubrs
cmp
push
test
fiadds
lcall
imulb
mov
stos
lea
incl
mov
adc
cmp
sti
mov
pop
orb
js
mov
inc
in
out
jecxz
sti
push
dec
or
add
fldenv
or
jne
lret
mov
sbb
xor
movsl
cmp
into
shll
xchg
loope
push
dec
in
mov
fmuls
cld
movsl
es
adc
fmuls
out
lret
pusha
ds
outsl
add
lds
jbe
mov
mov
push
push
cmp
xchg
aad
jmp
jge
xor
popf
xchg
jle
adcb
jno
xchg
nop
iret
xor
mov
or
dec
jmp
push
push
ds
enter
enter
fbld
xchg
xor
xchg
xchg
icebp
sbb
mov
add
ror
stos
repnz
rclb
insl
cltd
add
sub
lds
repnz
mov
inc
lods
aad
ljmp
in
pop
and
cli
pop
out
rcll
sub
mov
sbb
pusha
mov
inc
clc
rcll
fimuls
adc
xrelease
sti
pop
inc
pop
rorb
mov
push
adc
push
inc
adc
js
shrl
stos
fbld
pop
jp
scas
jnp
dec
insb
stc
pop
jb
jp
xchg
call
xchg
pop
pop
pop
aad
mov
sbb
mov
and
dec
sub
outsb
or
mov
icebp
mov
jno
incl
dec
fstl
outsb
movb
lods
jbe
xchg
adc
outsl
push
mov
push
dec
xchg
ret
xor
cmpl
jmp
pop
test
cmpsl
enter
mov
fsubrp
fbld
mov
dec
jp
mov
jb
sbb
aad
push
shlb
sub
cmp
lret
add
out
pop
xor
stos
jmp
xor
scas
add
mov
leave
sarb
dec
add
cmpsb
add
icebp
or
push
jg
mov
int
jg
add
clc
popf
dec
aam
cmp
mov
outsl
std
push
std
fistpll
lcall
cmc
or
inc
xlat
lahf
sbb
pop
shll
in
jl
adc
pop
bnd
insl
jg
lea
mov
pop
mov
je
outsl
cmp
shrb
mov
inc
sbb
lret
adc
in
stc
and
mov
lret
mov
mov
xor
mov
mov
bound
mov
das
inc
lods
cmpsl
inc
es
or
sti
and
push
fs
jmp
and
mov
sub
add
mov
dec
flds
mov
je
adc
testl
lea
ficoml
adc
mov
test
psllw
lret
xor
daa
std
add
out
fs
stos
scas
in
mov
sbb
and
insl
sbb
sbb
test
sub
stos
adc
dec
shr
jns
mov
dec
icebp
mov
jge
data16
mov
mov
mov
xor
jnp
test
pop
push
loopne
and
out
mov
bound
adc
pop
cmp
sbb
filds
mov
xchg
push
dec
sub
cmp
nop
imul
pop
jecxz
addb
imul
scas
jecxz
js
in
cmp
jl
shlb
inc
dec
movsl
out
enter
cmp
fwait
push
dec
dec
xchg
fadds
sub
fs
ja
test
cmpl
jg
inc
leave
in
push
dec
or
ret
dec
in
outsl
adc
cmc
icebp
and
mov
mov
in
push
cltd
fists
jle
nop
das
or
and
or
mov
mov
and
cli
push
lret
jp
pop
test
push
mov
mov
sbb
aas
rclb
push
adc
clc
hlt
ret
out
scas
int
add
add
lock
arpl
sub
pop
mov
shll
fildl
stos
cli
dec
cmp
mov
sbb
out
ret
jb
add
sub
pop
mov
dec
mov
call
stc
or
add
xor
mov
cmp
pop
jl
xor
jle
stos
xchg
mov
mov
idivl
cli
or
movsb
push
lds
loope
ljmp
scas
add
sti
mov
fdivrl
jl
dec
dec
in
mov
jo
out
lods
bound
cld
mov
sub
stos
jne
pop
ds
or
fistps
cli
sub
in
adc
mov
and
add
sub
jae
pop
xor
outsb
pop
inc
adc
popf
bound
dec
or
aas
int3
ss
adc
scas
jl
push
fs
pop
push
push
mov
int
pop
add
pop
bound
dec
adc
sbb
push
mov
or
jmp
cmp
or
mov
jle
jo
xor
iret
pop
jp
ret
or
sub
movsb
sbb
gs
mov
jecxz
aad
or
jb
pushf
scas
lret
popf
aam
sbb
xchg
cwtl
imul
int3
loope
jmp
push
enter
and
push
into
cli
call
arpl
jnp
shlb
mull
jae
add
add
mov
inc
in
dec
shlb
data16
push
sub
add
jb
aad
in
gs
cmc
inc
pop
inc
xor
in
repnz
je
xchg
or
outsl
fdivrs
push
fwait
pop
in
xorl
or
out
sub
jb
loopne
cwtl
push
xchg
je
outsb
int3
mov
int
lret
mov
xchg
sub
xchg
aam
adc
xorl
ret
mov
jl
xor
push
es
sbb
push
inc
xchg
add
mov
scas
lods
in
icebp
stos
into
repnz
ficoms
pop
or
cmp
sbb
and
in
mov
push
mov
lret
push
loopne
jecxz
fsubl
data16
aaa
xor
addr16
scas
outsb
out
call
jo
push
stc
push
push
subb
pop
push
pop
sbb
ljmp
and
or
inc
daa
ds
ja
in
adc
icebp
psubq
std
mov
stos
sub
mov
inc
es
adc
sub
cmpsl
inc
add
pop
jmp
lods
ret
pop
insb
jnp
dec
dec
mov
ja
nop
sub
dec
lock
adc
xor
fadd
hlt
cmp
xchg
sub
pop
aam
push
test
or
xor
xchg
pop
movsb
and
in
mov
xchg
dec
ja
lods
push
inc
testb
test
adc
sarb
xor
test
mov
out
add
pop
sbb
jns
xlat
lock
push
cli
fistps
call
sbb
jo
jle
cld
in
mov
pop
pushf
int
cwtl
pop
xchg
out
in
cmpsb
mov
xchg
mov
lahf
ljmp
pop
jae
cmp
ja
mov
cmpsb
daa
cmp
test
jge
pop
mov
mov
inc
mov
iret
inc
int
rep
xchg
or
jle
add
push
dec
frstor
xchg
xchg
fisubs
popf
sahf
out
jae
jle
xor
jmp
aam
mov
sub
stos
mov
sar
stos
mov
mov
cld
pop
outsl
je
jbe
out
sbb
test
lret
out
les
lret
pop
ret
mov
or
out
xchg
cmp
imul
sub
add
js
test
pop
xchg
mov
inc
xor
js
sahf
push
fisubrs
std
inc
sti
jne
mov
ja
push
out
and
dec
into
pop
movsb
lret
pushf
xor
jns
cld
idivb
adc
xchg
stos
mov
dec
xor
xchg
fildll
xor
sahf
icebp
xlat
bound
mov
xchg
xchg
mov
ret
inc
into
sub
jecxz
xlat
push
and
xchg
pop
mov
test
adc
in
jne
xchg
or
ja
mov
loope
mov
aaa
outsl
imul
xor
xor
mov
das
enter
and
pop
out
add
dec
jge
sub
xor
rcrb
fsubrl
sbb
jecxz
push
int
mov
insb
fildl
dec
aaa
cmp
lods
roll
out
pop
inc
jge
repnz
outsl
fisttps
mov
outsb
mov
sarl
std
int
pop
test
out
mov
mov
push
push
dec
lcall
cmp
fistps
jne
scas
fwait
and
xchg
pop
fldl
adc
pushl
push
xor
cmc
in
fildll
sub
xchg
mov
sub
inc
call
inc
cmp
repz
mov
inc
inc
mov
cmp
add
mov
jnp
loope
movsb
mov
pop
adcb
jg
mov
mov
movb
mov
push
mov
add
jmp
jecxz
inc
cmpsb
aad
addr16
out
sub
push
jl
clc
data16
xchg
out
lods
sub
test
xchg
movsl
lods
into
ss
data16
imul
and
dec
popf
pusha
jmp
out
xor
test
jg
dec
ret
sbb
push
cltd
aad
test
xor
mov
fstps
add
sbb
or
push
enter
inc
sarb
insb
je
mov
cmp
cmp
mov
ja
shrb
hlt
mov
imul
test
fildl
out
xchg
sbb
pop
pop
jae
rcll
lods
or
scas
rolb
inc
sbb
add
and
daa
mov
add
cmpsb
mov
mov
mov
pusha
jmp
aaa
fs
int3
adc
imul
data16
inc
mov
pop
adc
jl
and
cli
mov
ret
cwtl
cmpl
sti
mov
or
lea
mov
nop
jp
xchg
fldl
in
shr
cmp
dec
and
jae
xchg
aad
aam
sbb
lret
mov
cld
push
dec
lods
in
add
bswap
pop
rcrb
jnp
call
cmpsb
and
test
pushf
stc
mov
out
jno
lods
xchg
push
cmc
shll
mov
cli
fsts
mov
stos
cwtl
mov
int
call
lret
mov
insl
push
roll
fwait
jle
jno
mov
xor
xor
negb
cwtl
outsl
xlat
popa
rolb
mov
add
adcl
loop
xor
in
sub
lods
ljmp
push
in
mov
pop
push
popf
nop
jmp
cmp
mov
sbbl
fnsave
pop
movsl
fst
adc
inc
inc
jbe
mov
push
loopne
rolb
adc
and
and
decl
int
int3
in
add
stos
movsb
lock
push
push
in
nop
sub
std
icebp
mov
pusha
and
dec
jp
jns
testl
fsts
mov
xor
xor
lret
mov
pop
pop
or
jge
sbb
push
in
jb
xchg
inc
jge
cmp
jns
mov
mov
mov
sahf
dec
inc
cli
in
out
inc
sti
repz
or
jg
xchg
push
nop
fistl
int
adc
loope
mov
mov
push
fsts
in
ss
dec
imul
add
sub
sub
lret
xor
sbb
push
and
mov
jae
or
fidivrl
scas
jnp
sbb
mov
add
inc
mov
and
and
sub
lds
cld
mov
sbb
cmp
loop
orl
jle
lret
ret
pop
das
adc
testb
xchg
adc
mov
imul
mov
or
das
sub
or
ss
mov
lcall
rcl
push
adc
mov
jmp
in
in
xchg
rcrl
sbb
mov
test
cltd
stos
imul
into
mov
insl
jmp
cmp
pop
lret
mov
fsub
cmpl
xlat
dec
lcall
movsb
std
imul
sub
aas
xor
sbb
lock
aam
dec
lea
inc
loop
xor
bound
outsl
fcoml
or
or
sarb
or
loope
cwtl
dec
je
inc
sub
data16
inc
nop
in
add
inc
inc
mov
mov
mov
jno
jl
dec
xlat
loopne
pop
jmp
out
and
mov
in
mov
add
xlat
jns
mov
mov
dec
nop
add
std
jbe
xchg
lock
stos
and
cmp
outsb
mov
cmpsl
mov
push
scas
and
inc
nop
push
mov
sbb
mov
movsl
addr16
ds
out
mov
add
enter
loopne
call
push
iret
arpl
mov
push
mov
jmp
xchg
mov
jp
iret
mov
lods
scas
xor
or
popa
out
cmpsl
outsl
adc
mov
mov
push
std
mov
ds
mov
sbb
or
scas
mov
test
loope
stos
mov
dec
xchg
fidivs
mov
test
lea
xchg
mov
fiadds
les
cmp
push
or
pop
fistpl
xchg
mov
ret
mov
outsl
pushf
or
div
add
out
or
xor
xor
xor
enter
roll
cmc
xchg
mov
cmovg
sub
aaa
mov
xchg
xor
or
loopne
fld
incb
daa
add
mov
outsl
and
pop
aas
addl
push
xor
mov
lret
jno
cli
pop
outsl
jmp
mov
in
push
fistl
xor
mov
bound
push
inc
gs
mov
dec
jmp
fidivrl
or
lcall
scas
inc
pop
imul
xchg
out
fbstp
dec
mov
xchg
or
push
adc
cmc
cltd
sub
or
out
xlat
sub
out
das
mov
enter
aad
decb
test
cmp
and
in
enter
fnstcw
lods
popf
dec
fadd
add
stc
aad
pop
or
mov
aas
sub
sarl
imul
pop
ret
push
jmp
xchg
sbb
mov
add
rcrb
outsb
push
xchg
in
daa
add
sub
in
jbe
enter
xchg
enter
ret
cmp
sbb
push
out
mov
pop
mov
cmpsl
and
mov
jne
into
mov
or
jne
fwait
aad
fstl
dec
je
into
mov
ljmp
in
lea
jnp
aas
es
push
adc
fnsave
dec
js
xor
fwait
mov
mov
or
nop
or
lahf
aaa
xchg
adc
mov
push
andb
xchg
frstor
mov
les
jb
cwtl
inc
out
cld
negb
and
popf
xchg
hlt
jbe
testl
xchg
lahf
jecxz
mov
out
mov
mov
push
or
leave
push
inc
sti
clc
out
push
mov
inc
xor
imulb
add
rol
mov
sub
add
push
mov
cmp
dec
mov
hlt
aam
mov
jne
jno
jo
lahf
cwtl
and
into
xchg
push
in
pop
std
repz
ljmp
sbb
pop
outsl
cmp
and
adc
cmp
scas
xchg
cmp
cmpsb
adc
sbb
inc
jnp
scas
leave
roll
fiadds
filds
and
mov
mov
push
add
adc
out
lods
cmp
xchg
cmpsb
int3
inc
or
fs
inc
mov
and
mov
push
jl
inc
imul
inc
movsl
jl
jmp
stos
movsb
std
lock
je
lret
or
out
pushf
or
fiadds
jns
jne
repz
push
or
clc
lret
mov
and
jae
mov
push
ljmp
push
fidivs
adc
ret
xlat
arpl
pop
xchg
int
mov
mov
adc
loop
in
lods
scas
sbb
mov
iret
cmp
cwtl
cmp
cmp
cwtl
fwait
xchg
lret
jl
or
std
icebp
pop
mov
lret
stos
mov
jno
iret
mov
push
insb
testb
pop
pop
jmp
test
jle
cmp
dec
sbb
push
ret
adc
mov
cmp
data16
icebp
pop
mov
xlat
lcall
or
or
pushf
cmpsl
cs
pop
js
das
mov
sahf
jno
lods
js
loopne
repz
push
fbld
jle
cwtl
icebp
cli
cmp
xor
outsl
pop
jp
sbb
jns
xchg
scas
push
jmp
sbb
jp
popf
push
sub
not
call
leave
or
inc
hlt
mov
cmp
jg
mov
rolb
lock
and
arpl
insb
sub
lods
mov
adc
mov
and
mov
add
gs
add
sub
cmp
jbe
fsts
in
lret
add
pop
sbb
sbb
fbld
popf
lds
sbb
test
jo
mov
sub
fistl
push
imul
int
xor
ret
push
jl
xchg
push
cwtl
add
call
jl
inc
push
orl
adc
ja
adc
or
fldcw
jno
push
xchg
rolb
and
ss
push
movsb
cld
ror
mov
in
fs
jbe
lock
inc
popa
pop
push
hlt
inc
psraw
inc
inc
out
add
jl
sahf
add
into
out
cmp
pop
pop
hlt
call
push
or
icebp
mov
scas
adc
xchg
lret
mov
xor
push
cmp
push
aaa
push
imul
mov
sub
bound
insl
sbb
lds
jecxz
fsts
les
stc
enter
shlb
jb
dec
inc
scas
aas
testl
in
mov
scas
movl
mov
movsb
cltd
lret
divl
cmpsl
out
mov
mov
xlat
xor
pushf
sub
adc
cmp
pop
adc
movsl
pop
call
add
sbb
cmp
testb
out
xor
add
sub
fisttpl
push
call
push
faddl
inc
sbb
mov
jle
test
stos
dec
ret
push
jnp
add
mov
mov
adc
cmp
pop
jno
dec
arpl
mov
pop
sbb
dec
loop
and
leave
fists
mov
out
imul
loopne
lock
fidivl
sub
xchg
out
sub
mov
in
lea
jg
jmp
sbb
inc
frstor
out
cmpb
int
ljmp
xor
adc
dec
rcll
cmpsl
sub
movb
mov
lahf
rcr
adc
cli
out
pop
jbe
push
or
loopne
adc
arpl
jo
jmp
cmpsb
daa
dec
fcoms
cmpsl
pushf
sbb
xor
rcrl
fistl
repz
gs
push
ja
jmp
jnp
and
stc
lea
push
jne
cltd
push
fdivr
xchg
cmp
js
pop
aaa
loope
pusha
cmc
mov
fstl
push
inc
aaa
sbb
xor
push
jp
inc
pushf
aad
rcrb
add
dec
lahf
pop
dec
pushf
stc
pop
xor
mov
cmp
jp
cmpsl
loope
dec
in
mov
add
push
das
shlb
mov
daa
out
inc
mov
jp
jns
mov
cwtl
pop
xor
xchg
fsts
cmp
push
daa
xor
sbb
jl
push
out
pop
orb
out
popa
scas
or
out
mov
pop
cltd
in
jg
jp
sarb
or
and
mov
dec
mov
iret
mov
cltd
movsl
cmpsb
rorb
mov
mov
out
mov
outsb
fsubr
inc
xchg
nop
cmp
pop
dec
idivb
mov
jne
rcrl
sbb
fistpll
and
xlat
jo
call
std
sbb
icebp
shlb
popf
in
pop
xor
pop
test
loop
push
mov
cli
inc
xchg
popa
mov
sub
jge
sbbl
xchg
mov
adc
pop
mov
outsb
fidivs
push
mov
dec
sbb
jge
std
push
fs
mov
test
add
push
ret
sbb
cmp
mov
jg
cmp
lds
jnp
fidivl
mov
push
jae
inc
sbb
jae
test
push
pop
jecxz
outsb
mov
push
xchg
pop
sbb
and
mov
xor
xchg
in
out
push
and
jns
pop
xchg
lret
stos
lds
jle
adc
mov
sbb
jmp
add
mov
fistps
testb
or
pop
cmp
jns
adc
frstor
sbb
ficoms
xchg
sub
pop
xor
mov
ret
test
sub
addr16
xor
call
mov
loopne
sarl
pushf
lods
sbb
xchg
fmuls
jg
cmpb
shlb
dec
inc
sbb
jno
mov
aaa
fidivrs
cli
push
movsl
out
mov
adc
fcoml
adc
ss
pop
cmpsb
xchg
fildl
adc
roll
jo
lea
jg
mov
mov
push
call
jle
xor
sub
aam
pop
icebp
or
fdivl
xchg
lods
lcall
and
mov
std
dec
lret
pop
sbb
js
push
ficompl
movsb
out
rclb
mov
enter
mov
pop
mov
jns
stos
rcl
inc
mov
ficomps
mov
gs
fistpll
cmpsl
cli
push
and
pop
and
sar
push
pop
mov
mov
pop
flds
mov
movsl
mov
push
jl
iret
out
push
and
fdivrl
pop
cld
sub
std
aad
pop
and
cmpsb
mov
adc
inc
stc
mov
pop
lock
mov
ja
sbb
je
movsb
xchg
bnd
fnsave
xor
sbb
pop
daa
xor
push
clc
bound
stc
pop
stos
mov
mov
pop
sbb
daa
mov
int3
pop
xchg
roll
pop
fsubrp
mov
in
cmp
pushf
bound
sub
fdivs
jmp
mov
jb
cmc
rcl
out
dec
mov
mov
pop
in
pop
outsb
cmp
jle
outsb
hlt
adc
mov
lcall
dec
ss
or
fisubrl
enter
xchg
fs
shl
xor
nop
dec
addb
lahf
mov
xor
lret
push
push
dec
aaa
add
mov
cmp
shl
mov
and
xchg
sub
icebp
pushf
cmc
mov
xchg
pop
cmp
mov
enter
ret
xchg
movsb
adc
cld
cmp
sbb
or
dec
sub
je
dec
repz
push
push
mov
cmp
lret
fists
and
test
mov
icebp
cmp
jp
lock
inc
sub
test
test
int
pop
daa
jnp
lahf
push
add
iret
push
int
fidivrl
mov
lock
scas
jle
out
xor
flds
aas
insl
ret
pop
inc
out
inc
push
jp
in
inc
repnz
ret
faddl
xchg
add
xchg
pop
pop
mov
xchg
and
jb
mov
xor
adc
test
jp
mov
rolb
xchg
mov
xor
lods
out
push
sub
inc
ficoml
decb
inc
sbb
int3
jg
sub
lcall
fwait
subb
mov
daa
es
fldenv
xchg
loop
mov
cmp
popa
xchg
das
cs
mov
icebp
xor
and
aad
lcall
xchg
adc
ret
inc
mov
test
sbb
fidivs
lds
mov
sub
les
sbb
loopne
xchg
inc
test
push
mov
loop
mov
mov
mov
adc
cmp
pop
jo
jne
popf
dec
jno
pushf
loope
push
push
movsl
and
aaa
fiaddl
jmp
jmp
orl
cmc
std
push
cmpsb
mov
lret
scas
popf
sub
pop
not
adc
fiadds
push
std
pop
pusha
loopne
lret
loop
stos
sub
jae
cli
inc
or
iret
sbbl
into
xor
les
popf
roll
insb
repnz
lds
xchg
out
add
std
ret
jnp
or
inc
rolb
pop
dec
in
pop
xchg
arpl
je
cld
test
loopne
add
pop
mov
inc
in
sub
mov
loope
jae
and
jecxz
inc
inc
outsl
jne
das
jmp
cmpsb
jbe
jle
fistpll
dec
popa
inc
pop
inc
xchg
fdivs
stos
dec
and
cmp
int
and
repz
adc
jge
daa
mov
jne
cld
xor
mov
and
je
inc
lea
subb
xchg
lret
inc
imul
push
idiv
add
cmp
jmp
jl
push
rcr
ret
sub
xchg
mov
pop
cmp
adc
pop
je
mov
or
and
xchg
ljmp
jp
aad
cmp
jne
aam
inc
cli
jae
cmp
movsl
fistpl
jge
mov
movsb
clc
push
cmpsl
iret
test
pop
inc
into
mov
sub
orb
pop
div
repz
fstp
cmpsl
aas
loopne
jmp
in
sbb
push
mov
mov
pushf
aas
adc
mov
xor
adc
andl
dec
std
sarl
xchg
jnp
mov
cltd
mov
ret
clc
mov
pop
leave
jne
fidivs
ret
or
enter
cwtl
xchg
dec
and
sbb
cmp
push
rol
les
cltd
sbb
inc
mov
mov
rcr
sub
fmuls
aaa
pop
out
cmovs
sbb
pop
bound
movsl
fsubrs
pop
mov
and
lahf
jge
dec
loopne
mov
inc
out
mov
inc
std
lods
mov
std
dec
jae
inc
movsl
int
or
iret
inc
fdivrl
mov
les
std
call
push
mov
imul
fsubs
ds
mov
mov
das
aad
mov
subl
orb
push
jl
push
stos
lea
pusha
popf
jnp
sbb
loop
ss
aas
mov
mov
dec
adc
sub
lret
into
lahf
inc
and
jne
inc
fistl
mov
out
iret
or
pop
sub
outsb
test
push
imul
cmp
xlat
push
icebp
mov
sub
inc
pop
or
test
adc
fistl
jmp
test
cmp
icebp
sub
gs
mov
xor
xchg
fdivrs
dec
jae
in
jg
dec
or
dec
hlt
xlat
cmpsl
out
xchg
ss
adc
jl
push
pop
pusha
pop
sbb
jbe
and
pusha
mov
int
push
and
or
int3
and
mov
pushf
push
pop
sbb
inc
shlb
out
rorb
inc
sbb
push
enter
cli
inc
pop
imul
imulb
adcb
jg
clc
leave
and
pop
ljmp
stos
mov
mov
ja
cld
push
pop
inc
xor
jle
adc
cli
sub
or
into
lcall
inc
jbe
shrb
push
stos
and
movsl
and
scas
out
xchg
inc
adc
cwtl
xor
jle
sub
lock
mov
out
adc
cmp
out
xchg
js
dec
jbe
xchg
ffree
and
or
jmp
loop
mov
push
mov
test
test
jge
ret
movb
cld
inc
cmp
push
ss
jbe
cs
roll
adc
adc
jno
das
fstpl
and
add
push
or
test
in
adc
mov
xor
jge
hlt
sar
scas
repz
cmp
pop
lret
int3
jle
insl
ret
in
test
and
mov
jb
mov
pop
andb
test
push
pop
xchg
int
gs
pusha
sub
enter
in
sbb
lods
or
aaa
rclb
mov
aam
push
mov
or
sub
idivl
add
lret
and
les
fsubrs
stos
cmc
add
inc
or
scas
sub
cmp
fsin
popa
out
cmc
or
adc
jbe
mov
push
jecxz
loopne
xor
dec
dec
inc
popf
inc
imul
push
js
xlat
dec
cmp
fistps
pop
sti
movsl
lahf
in
shll
lock
scas
and
testl
xor
addb
adc
popf
int3
sbb
lock
inc
cmp
icebp
pop
cmp
jg
dec
jbe
imul
jns
jns
sub
adcl
mov
pop
outsb
mov
mov
insl
and
mulb
jno
mov
dec
adc
inc
lock
in
push
cld
ret
rolb
int
add
scas
add
push
xor
and
daa
ja
push
pop
push
mov
adc
xchg
cmp
incb
sbb
jno
sbb
neg
das
push
push
jb
mov
push
inc
inc
cwtl
xchg
pusha
xchg
cltd
mov
int3
jmp
mov
inc
sbb
add
in
xor
lea
nop
fbld
lret
mov
mov
in
ret
add
sub
pop
movsb
loopne
xchg
xchg
inc
and
fists
test
add
in
imul
mov
aaa
xchg
add
inc
cmp
loopne
fnsave
int3
mov
push
xchg
mov
pop
ret
rorl
mov
cli
push
aam
or
lret
sub
xchg
or
popf
ss
and
dec
popf
cli
repz
loop
adcl
xlat
pop
mov
adc
push
pop
sub
call
lods
add
in
loopne
into
daa
fs
pop
mov
jp
or
adc
add
xchg
std
jbe
rcrb
in
rcll
insl
das
in
pushf
mov
in
jmp
testl
inc
sbb
mov
mov
outsb
sbb
es
mov
cmp
adc
ficomps
xor
and
in
dec
test
xchg
push
jmp
into
cmpsl
fldenv
gs
sahf
in
insl
lea
rsqrtps
push
xor
jo
nop
test
or
push
push
pop
out
sti
out
daa
mov
cmp
ds
mov
movsl
mov
mulb
dec
mov
sar
mov
test
pop
out
pop
ret
incb
and
sub
xlat
cmp
fcmovb
insl
out
ret
xchg
pop
daa
cltd
loope
mov
test
xchg
jp
xor
mov
cmp
out
jns
sbb
dec
sbb
sub
cmp
mov
adc
xor
sbb
xchg
das
imul
mov
int3
add
mov
mov
movsl
mov
ret
lods
les
pop
int3
stc
data16
mov
cltd
icebp
jne
insl
fsubs
mov
outsb
adc
adc
lock
das
pop
loope
push
xor
iret
in
out
ja
push
ljmp
mov
popf
hlt
pop
and
fildll
stos
movsl
mov
push
lods
ret
cmpsb
loope
sub
cmp
mov
mov
pop
cmp
push
push
pushf
stos
andb
lods
or
pop
jae
sbb
inc
aad
sub
or
not
je
rorl
jle
cmp
bound
les
icebp
add
xchg
inc
add
scas
jmp
dec
mov
ret
and
adc
test
imul
add
cmp
add
jmp
inc
mov
mov
inc
cmpsb
cmp
je
adc
rolb
imul
xor
xor
sbb
jg
cld
xchg
test
add
and
lret
imul
xor
pop
imul
ror
lret
xor
xor
mov
and
stos
push
cmp
ljmp
ja
push
xchg
cmp
popa
addr16
or
adc
pushf
xchg
or
cmp
cmc
fs
adc
mov
scas
or
popa
mov
outsl
sub
dec
popf
cmp
fsubl
cltd
insl
out
jo
in
cmp
jle
or
adc
xor
popa
mov
mov
mov
icebp
pop
das
mov
mov
sti
aas
add
cld
and
sub
cmp
pop
mov
cmpl
fisubrl
push
jns
popa
bound
out
push
xor
imul
rolb
orb
pop
push
sub
ficoms
lcall
pop
nop
shlb
adcl
into
xchg
inc
lcall
push
iret
push
cmp
call
sahf
out
bound
imul
aad
in
pop
test
or
inc
or
lret
aad
clc
pop
repnz
add
out
mov
xor
nop
imul
aad
cld
int
fnstsw
lahf
xchg
pushf
inc
loopne
inc
xor
aad
jle
lock
sbb
stos
mov
mov
sbbb
xchg
pop
xchg
cmpsl
icebp
dec
shl
pop
cltd
shl
aad
lods
inc
fs
stc
add
inc
sbb
fwait
cmp
fbld
testl
adc
fistl
dec
subb
int
xchg
stc
movsb
lret
dec
sub
fsubrl
sbb
enter
cltd
sbb
out
popa
add
xor
and
inc
or
scas
stos
sbb
clc
mov
push
bound
popa
xchg
mov
inc
xor
sbb
arpl
movsl
inc
jmp
dec
insb
loopne
inc
add
cli
je
cmpl
clc
icebp
mov
dec
adc
mov
test
push
sbb
push
insb
jnp
andb
mov
adc
pop
xorl
je
ljmp
fcomps
lcall
bound
sahf
sbb
test
cmp
jge
push
jnp
pop
popf
jge
loope
jb
in
sub
test
xor
adcl
jg
jge
in
jns
std
sbb
fwait
cmc
or
inc
stos
push
popf
clc
mov
xor
mov
sbb
push
and
and
in
and
jno
add
fiadds
gs
mov
call
mov
push
xchg
cltd
cmpsb
or
orl
mov
sub
aad
pop
test
cmp
sbb
cli
jnp
sub
mov
lret
cmp
fisttpll
mov
adc
outsb
into
dec
xor
bound
or
js
daa
pop
push
decb
mov
filds
sbb
lods
in
in
and
jp
enter
in
and
pop
ja
std
push
les
sbb
outsb
idivb
cmp
in
add
das
jg
testb
and
aas
mov
fsubs
mov
insb
dec
pop
jae
lds
and
lea
insb
push
clc
or
fiadds
loopne
in
cmp
dec
dec
jge
orb
lcall
or
cltd
int3
subb
in
dec
mov
outsb
pop
fisttpl
cmp
ja
add
inc
jp
loop
mov
dec
rcr
sbb
outsl
movsl
adc
sti
shll
mov
lock
stos
mov
push
ss
rclb
pop
or
pop
jecxz
test
out
adc
lcall
ljmp
movsb
lcall
shll
adc
push
xchg
lods
stc
mov
aaa
lret
test
push
dec
xor
lock
push
mov
xchg
fmuls
inc
pop
repnz
cmc
repnz
cmpsb
ret
into
int
icebp
xchg
call
jb
inc
mov
sbb
and
mov
pushf
cwtl
xor
arpl
jecxz
sarl
pop
pop
mov
sbbb
repz
jecxz
fstpt
and
outsl
cmpsb
xor
mov
inc
lret
out
rcrb
mov
sub
cmp
cmpsb
mov
cmc
fcoml
pop
loopne
pop
jne
adc
xchg
cmp
and
cmp
shr
imul
sbb
and
mov
je
mov
push
dec
dec
shrl
enter
ljmp
push
dec
xor
repz
sti
xlat
jmp
cmpsb
fs
mov
and
popa
xchg
mov
int3
decb
mov
jo
fsts
cwtl
push
repz
je
sbb
jg
cli
adc
adc
sub
mov
pop
jne
jo
fcomps
nopl
notl
stc
mov
ds
pop
push
lods
nop
add
neg
inc
gs
add
xchg
lcall
adc
popf
jmp
cmpsl
add
shll
in
dec
pop
in
mov
adc
std
jmp
sub
test
repz
mov
test
xor
push
imul
mov
and
inc
ficomps
inc
jg
insb
xlat
dec
adc
arpl
jg
addr16
sti
cld
add
mov
shlb
test
rcrb
mov
xchg
clc
cmp
mov
negl
cmpsl
cmp
lret
scas
jo
jno
push
pop
pop
inc
push
mov
fwait
dec
test
in
mov
jae
inc
sub
mov
arpl
dec
fsubs
scas
xor
pushf
aas
ret
push
lea
xchg
xchg
jbe
xchg
mov
mov
in
ret
and
cmpsb
xchg
jae
mov
mov
push
push
mov
mov
adc
jl
mov
mov
mov
scas
pop
mov
fwait
imul
or
andb
jl
daa
sub
cmp
movsb
pop
dec
adc
and
mov
cltd
add
or
das
insb
pop
push
ds
xchg
add
cmpsb
inc
idivb
jmp
shlb
loope
xor
adc
test
xchg
jno
bound
pop
lods
aas
mov
mov
and
fcoms
adc
shl
push
test
dec
push
push
loope
xlat
jle
mov
enter
push
nop
push
push
aaa
xchg
jmp
arpl
fsub
cmc
fcoml
xor
jge
enter
icebp
mov
sbb
dec
shrl
aad
adc
out
jg
stc
movzwl
or
test
mov
addr16
sbb
mov
add
leave
mov
pushf
aas
xor
inc
sbb
xchg
shll
mov
iret
mov
jo
imul
mov
xchg
mov
test
mov
movsb
dec
mov
push
daa
sbb
fsubl
std
pusha
adc
adc
pushf
sub
ljmp
movsl
inc
mov
mov
pop
or
mov
cmpl
in
add
xchg
test
stc
or
or
mov
xor
xchg
scas
jl
cltd
mov
fdivrp
xor
cmp
mov
inc
in
inc
scas
xchg
jb
or
xor
sbb
ds
pusha
cmp
popa
mov
stos
dec
outsb
mov
popf
mov
es
mov
inc
push
mov
xchg
outsb
fsubl
das
outsl
push
das
loopne
mov
stc
mov
xchg
inc
lahf
xchg
fptan
add
loope
cmp
xchg
add
ss
movsl
jp
lock
fsubrs
aam
cmovb
inc
shrb
jg
js
inc
stos
sub
lock
pusha
sub
lea
into
arpl
jo
push
jmp
push
leave
xor
xchg
rclb
sbb
dec
lcall
push
mov
cwtl
pop
aaa
pop
test
push
int3
jne
push
xchg
outsl
mov
out
test
cltd
dec
push
out
cmp
int
xor
mov
adc
adc
stos
int3
push
pushf
cwtl
lods
ret
pop
sbb
clc
mov
in
cmp
test
xchg
cltd
insl
xchg
popa
mov
cmp
mov
imul
or
sbb
mov
adc
mov
dec
fsub
and
xchg
imul
loop
adc
lcall
xor
jl
lock
mov
aam
cmp
push
leave
mov
in
sti
js
fs
subb
xchg
pop
jl
adc
sbb
lret
ffree
cld
addr16
stc
push
in
mov
jnp
popf
icebp
cmpsl
xor
daa
sbb
fwait
sub
repnz
cmp
mov
outsb
test
lods
shrb
or
xchg
pop
mov
mov
xchg
sbbb
xchg
adc
lea
jbe
dec
sbb
mov
mov
sbb
int3
ret
mov
je
jb
inc
clc
fisttpll
pop
sbb
jg
xchg
int
insb
lret
nop
insl
lahf
cmp
jo
mov
sahf
cmc
cmc
xchg
dec
and
pusha
fildl
pop
mov
xchg
push
iret
sub
inc
push
mov
sbb
notl
adc
aas
test
or
mov
popf
mov
pusha
push
add
iret
mov
mov
jge
mov
jae
cmp
cltd
insl
dec
mov
add
adc
jo
not
cwtl
lods
repz
mov
out
sub
shll
xchg
cmp
arpl
jge
lock
loope
mov
fcompl
xor
mov
ffree
push
fldt
lea
iret
xchg
test
fisttpl
aas
mov
scas
push
inc
mov
lea
lea
inc
bound
fsqrt
imul
xchg
jae
lret
pop
inc
es
addr16
iret
jmp
fwait
mov
adc
xchg
mov
sahf
sbb
mov
mov
adc
mov
and
ret
fiadds
scas
jmp
cld
stc
xor
jl
sahf
lea
add
xor
sahf
lock
nop
mull
dec
and
mov
out
jbe
adc
mov
or
dec
and
and
mov
add
rcrl
fsubrl
adc
jns
dec
cltd
iret
outsb
test
lcall
cmpl
push
pop
mov
shlb
test
adc
jg
clc
clc
ret
call
imul
insl
int3
adc
inc
arpl
outsl
insl
jg
loope
or
mov
mov
xchg
jmp
jno
add
mov
ljmp
cmp
lea
div
and
jae
repnz
sbb
ss
popa
in
push
ja
es
or
xor
mov
rorb
inc
and
push
add
aad
mov
int3
call
sbb
sahf
and
sbb
xchg
fistps
lret
xchg
push
mov
adc
fisubrs
pop
adc
repnz
pop
call
push
mov
sub
mov
inc
mov
adc
mov
divps
fstpt
cmp
test
test
aam
cmp
adc
je
sti
sarl
sub
add
testl
adc
pop
loop
outsl
mov
mov
shlb
popa
pusha
pop
cld
xor
adc
imul
ds
or
js
js
jge
mov
push
iret
cmc
movsb
fwait
xchg
push
pop
fistps
sbb
ret
xchg
je
ffree
cmp
xor
pop
and
fadds
mov
cmp
adc
in
aas
std
das
repnz
adc
mov
andl
out
add
addr16
pop
popa
cmp
bswap
sbb
in
push
sbb
aas
es
jne
rcrl
lods
lods
sbb
ficompl
mov
mov
xchg
cmpsl
mov
fwait
mov
loopne,pt
lods
mov
dec
mov
stos
cmp
jl
dec
scas
pop
call
out
enter
repnz
and
xchg
or
jo
insb
aaa
push
movsl
es
sub
scas
cmpl
ret
sbb
cli
xor
or
out
adc
jb
icebp
aas
mov
cmp
mov
jbe
mov
daa
adc
test
arpl
jb
xor
add
das
mov
pop
test
test
jne
dec
xchg
xchg
mov
arpl
adc
inc
insl
mov
mov
inc
test
je
adc
andl
pop
adc
inc
mov
jp
jns
mov
adc
xchg
pop
dec
jmp
jp
hlt
bound
adc
xor
das
movsb
xchg
lcall
shll
je
xchg
fwait
adc
sub
sbb
fbstp
push
jno
stos
push
sbb
loop
cmp
adc
cmp
jb
push
dec
stos
lock
pop
fwait
cmp
push
sbb
mov
inc
xchg
repnz
stos
add
sub
or
xorb
or
ror
xchg
sarl
cmp
mov
pop
push
pop
es
inc
aas
out
dec
jecxz
ja
jmp
push
push
loope
aas
mov
cwtl
out
int3
enter
mov
fcoms
add
iret
repz
and
pop
daa
enter
xchg
push
es
outsl
iret
and
fisubl
inc
stos
mov
xor
mov
cs
int
push
cli
sbb
test
add
stos
lods
xchg
mov
enter
sbb
lods
lcall
cld
dec
scas
mov
sub
xor
hlt
mov
add
mov
adc
daa
nop
ja
jp
loop
dec
mov
imul
mov
es
outsl
inc
leave
ds
pop
pop
adc
sahf
sub
push
dec
cmpsb
mov
mov
inc
cwtl
hlt
jnp
ljmp
mov
je
jbe
jno
out
or
pop
jge
bound
sub
stos
cmc
mov
dec
mov
int
imul
ficomps
pusha
xchg
mov
das
loopne
cmp
aaa
xchg
jmp
nop
cmpsb
cmp
mov
int
and
sbb
add
jmp
sahf
mov
and
sub
mov
outsl
mov
or
popa
xlat
int3
shl
in
arpl
pop
mov
jp
ss
dec
cmp
ss
ret
pop
fdivs
cmpsl
sub
inc
and
outsb
push
fisttpl
add
ds
mov
fnsave
test
cmpsl
mov
inc
aam
scas
icebp
dec
cld
push
ja
test
ret
jp
pop
subb
push
or
mov
clc
and
add
std
push
ja
clc
and
or
ret
jle
jge
fisttps
aaa
jae
xchg
mov
xor
xchg
subl
sub
sbb
iret
jge
sub
daa
jecxz
les
push
repnz
and
mov
add
out
mov
mov
push
aad
pop
leave
cmp
mov
dec
xor
test
add
clc
dec
stos
hlt
xchg
gs
lret
xchg
xchg
mov
mov
dec
test
sub
sbb
jae
test
jmp
push
inc
xchg
je
cmp
jo
lcall
dec
test
push
pushf
or
jae
rol
loopne
movsl
cwtl
sbb
movntq
popa
xchg
xlat
imul
mov
add
jno
dec
in
or
cmc
fisttps
and
dec
push
jnp
movsl
push
addb
iret
xor
daa
jmp
jnp
mov
out
mov
ja
sbbb
mov
addr16
xor
jecxz
xchg
je
sub
push
lea
add
rcrb
mov
sub
loopne
insl
xor
mov
mov
jle
cmpsb
mov
mov
and
pop
add
adc
jg
mov
add
sub
fadds
sub
cwtl
mov
outsl
adc
mov
dec
jnp
scas
sbb
daa
mov
out
scas
xchg
out
pop
push
sbbl
shrl
jge
pop
sarb
fs
in
jae
lea
jno
repnz
ja
dec
fcmovbe
mov
pop
mov
dec
jge
fadd
leave
fldl
pop
fs
adc
mov
repz
add
insl
fdivr
adc
add
xchg
popa
in
test
ss
add
jle
into
lret
aas
shlb
push
xor
shlb
pop
add
pop
add
sbb
cmp
stc
mov
mov
enter
push
push
into
pusha
dec
ds
mov
or
adc
pop
pusha
fstps
mov
imul
push
std
dec
jno
add
repnz
ret
test
xchg
hlt
mov
test
add
xorl
in
pop
push
mov
sbb
sbb
dec
mov
negb
push
inc
dec
dec
cmp
nop
aas
rorb
mov
stc
pop
insb
and
jae
out
xchg
xor
into
pop
xor
movsl
rol
sbb
mov
or
xchg
dec
mov
pop
mov
inc
pop
mov
or
mov
inc
mov
pop
xchg
ds
clc
jns
imul
push
jmp
dec
movaps
push
cwtl
inc
aam
int3
add
stos
sbbl
rcll
push
push
or
xchg
and
mov
mov
xlat
and
loop
cmp
ss
mov
pop
push
pop
mov
fildll
cmpsb
mov
and
inc
inc
dec
int3
dec
inc
stos
aam
push
decb
iret
into
xchg
jno
stos
and
sub
enter
and
jnp
addl
les
in
sub
add
andnps
pop
jb
or
mov
int
jb
loopne
and
pop
ficoms
les
push
stc
shlb
and
mov
int
and
fidivrs
test
mov
test
loopne
pop
push
or
jb
push
lret
xchg
filds
gs
dec
stc
ds
daa
es
jnp
push
shl
bound
into
push
int
mov
cmp
xchg
lcall
dec
and
add
imul
inc
xor
sub
lods
or
mov
rcrl
loope
pop
jge
clc
in
das
push
xchg
sti
flds
dec
js
dec
sbb
pop
loopne
mov
insb
cmp
push
inc
ja
fwait
mov
lock
push
cmpsb
xor
mov
mov
das
xor
pop
xchg
push
cld
prefetch
or
loopne
sub
inc
std
xor
sbb
jle
cltd
in
or
cli
mov
out
pop
xchg
sahf
cmpsl
ret
in
push
jge
gs
cltd
cmp
test
cs
jbe
jmp
jne
adc
pop
aaa
xchg
lret
push
cmpsl
gs
bound
mov
gs
cmp
std
icebp
into
sbb
andl
jne
xchg
cmpsl
adc
mov
mov
xor
filds
ficoml
sub
in
ss
add
sub
mov
fcmove
xchg
mov
cltd
lods
loopne
loope
jge
push
pop
add
outsb
sub
shll
in
sbb
sub
rcll
xor
adc
movsl
insb
sti
adc
push
xor
adcl
icebp
add
aaa
insb
imulb
in
cmp
mov
in
fmuls
incl
jmp
mov
mov
sub
sub
ret
lods
sar
mov
imul
mov
xor
mov
rcr
jp
mov
inc
pop
sub
cwtl
push
in
cmp
lcall
mov
xor
jae
lock
sbb
mov
js
dec
and
mov
jp
xchg
stos
or
jo
mov
xor
ret
inc
mov
push
mov
ret
punpckldq
push
gs
mov
mov
test
pop
dec
int3
jp
or
inc
push
pop
shl
jbe,pn
mov
jo
pushf
push
ret
push
rcl
sub
dec
icebp
aaa
mov
fldcw
push
jl
inc
sbb
fistl
jl
and
jbe
das
divb
lret
aad
pusha
pcmpeqb
cmp
movsb
inc
push
add
dec
add
pop
sbb
jns
aaa
enter
add
dec
mov
stos
and
mov
xchg
xchg
icebp
cs
scas
jae
and
pushf
lods
mov
push
and
ljmp
ret
mov
and
dec
ret
and
mov
leave
subl
mov
pop
inc
mov
push
or
loope
adc
dec
sub
mov
cmp
enter
mov
lea
sbb
mov
push
js
data16
mov
jo
jnp
test
imul
movsb
insl
mov
icebp
cwtl
dec
and
out
ja
sub
jecxz
pop
fdivp
cltd
pop
cmp
in
stc
cmp
mov
ficoms
xchg
xor
out
stos
ret
push
dec
arpl
xchg
mov
js
adc
jbe
mov
imul
or
dec
fimull
mov
jne
out
test
cmc
aas
jne
aad
fisttpl
sbb
outsl
in
shrl
hlt
jmp
mov
cmp
push
movsb
stos
mov
aas
ss
xchg
movsb
push
mov
in
adc
clc
loop
aas
pusha
pop
scas
jmp
cs
push
lret
sarb
mov
cli
add
mov
cmpb
iret
addr16
inc
sbb
jg
push
push
push
push
js
push
add
push
fisubs
mov
cld
jno
lahf
or
xor
add
jl
les
lds
inc
pop
sbb
xchg
inc
in
and
jno
mov
xlat
les
mov
sbb
jecxz
sbb
ficomps
enter
sbb
loopne
adc
mov
xlat
adc
lret
insl
xchg
xor
pop
pop
ret
cmp
roll
lret
mov
adc
into
ret
xor
in
xor
int3
scas
cmp
and
pop
mov
cltd
mov
sti
pop
xchg
sub
cmp
adc
aas
test
add
push
push
sbb
lahf
aaa
imul
sub
fucomp
scas
push
divl
call
mov
and
mov
adc
inc
dec
mov
shrl
sbb
data16
sbb
cmpsb
dec
mov
mov
fdivrl
outsl
mov
sbb
lock
ficoml
dec
ss
add
out
mov
lods
xor
mov
je
cmc
outsl
push
cmp
jb
cs
cli
push
jae
cmp
push
inc
pushl
clc
bound
pop
lret
rcrb
pop
insl
mov
out
enter
cmp
loope
filds
std
xchg
mov
pop
pop
or
lods
dec
test
push
je
popf
stos
andl
cmp
push
add
mov
mov
sbb
cmpsb
icebp
rcrb
xor
inc
adc
stc
out
jg
push
or
push
inc
insb
inc
sub
scas
add
jno
xor
jmp
lods
icebp
icebp
mov
pop
addr16
inc
push
add
pop
mov
jno
int
pop
sti
fbstp
filds
outsl
std
inc
aas
cmpsl
movsl
mov
sbb
gs
test
popf
aaa
push
dec
ret
xor
add
xor
std
stos
jnp
loop
inc
daa
int
cld
scas
addr16
cwtl
push
xchg
js
movsl
fsubs
testl
dec
sub
mov
pop
cmp
stc
and
xchg
roll
mov
imul
push
mov
shrl
cmovl
aam
mov
outsb
dec
inc
cmp
sub
sub
mov
add
stos
mov
sub
jbe
cmpsl
xchg
js
adc
mov
xor
push
imul
sbb
pop
cmp
sbb
stc
cmp
mov
push
out
jns
leave
mov
aas
lock
sub
xor
fldenv
cli
and
xchg
movsb
cwtl
decl
jmp
andl
add
dec
hlt
add
repnz
push
es
dec
xchg
or
cmpsl
ljmp
cmp
or
movsb
xchg
mov
pop
std
shrl
mov
lret
mov
add
in
xchg
cmp
xchg
fidivl
sarb
adc
call
lds
jge
cltd
repz
ja
test
push
popf
out
and
fildl
and
std
mov
xchg
mov
dec
add
shlb
arpl
xor
jo
sub
loop
in
mov
or
push
loope
and
jne
arpl
push
fwait
push
lret
adc
sbb
push
mov
out
sub
incb
into
xor
cs
scas
pop
xor
mov
xor
js
clc
fsubs
sbb
xchg
cmp
fwait
push
lock
cld
adc
mov
int
test
add
ja
push
cld
daa
pop
push
das
shll
outsb
fistpll
fcmovbe
mov
ret
ja
loopne
int3
sahf
cwtl
popf
mov
pushf
pop
movsl
repz
xor
xchg
sbb
push
push
and
jnp
scas
push
fdivrp
sub
ja
or
or
lahf
mov
aam
mov
inc
sbb
sub
leave
mov
push
out
fldt
mov
jo
loop
shlb
xor
sti
mov
pushf
outsb
push
enter
mov
push
sbb
mov
sbb
mov
cli
xchg
add
lods
ficoms
das
xor
adc
dec
ljmp
mov
lea
iret
aas
xor
sbb
mov
cwtl
or
ret
enter
cmpsl
loop
inc
xchg
dec
xchg
rol
lret
jnp
inc
dec
arpl
sbb
lea
imul
ljmp
lea
pop
ret
and
inc
mov
sar
pushl
out
pop
insl
ss
sahf
xchg
xlat
popa
testl
xchg
roll
or
cmp
mov
jbe
cwtl
jno
pop
leave
test
lahf
adc
popa
lret
dec
push
cmc
push
sbb
call
mov
subl
jnp
outsl
in
jecxz
cli
xchg
mov
xchg
mov
jg
push
test
mov
mov
in
fdivr
cmp
cwtl
xor
mov
int3
pmaxsw
cmp
adc
aam
shr
jecxz
sbb
cmp
inc
sbbl
int3
mov
fwait
inc
fnstcw
loope
js
aaa
add
jne
test
pop
push
rcrb
jno
mov
inc
shl
sub
loop
xchg
cmc
iret
mov
aam
add
insb
or
addb
shlb
pop
dec
xchg
ss
push
xor
xor
pop
mov
int3
push
dec
ret
in
js
pop
sub
sbb
sub
cmp
sub
mov
sbb
cmp
arpl
pushf
icebp
push
inc
gs
inc
lahf
xchg
stc
cmp
push
scas
inc
fidivrs
lea
cmc
xchg
jne
jno
xchg
rcr
les
inc
fcom
add
sbbb
and
or
jo
mov
fsubl
aam
adc
cwtl
cli
fmulp
movsb
movsl
in
stc
jno
push
mov
push
loope
adc
test
sbb
xor
dec
jno
mov
pop
pop
les
into
inc
pop
add
mov
xchg
std
add
rcr
dec
jnp
in
mov
mov
xchg
cwtl
dec
pop
inc
popa
push
cld
adc
pop
xor
testb
insb
push
or
push
sahf
jl
push
xor
mov
inc
repnz
rol
out
xchg
scas
or
push
pushf
mov
jns
ja
mov
imull
mov
pushf
data16
js
xchg
dec
call
lahf
fdivs
andl
movb
sub
out
das
inc
in
or
aad
jp
mov
push
xor
jns
addr16
adcl
jne
dec
jb
in
jno
or
cld
ret
out
cltd
jge
sub
mov
pop
sar
mov
dec
push
jge
in
pop
mov
fisubs
jecxz
outsb
fwait
sbb
movsl
push
cmp
dec
fadds
jnp
adc
daa
cmpsl
sbb
adc
xor
and
xor
movsl
paddd
mov
cmpl
jl
lods
cmpsb
jnp
rolb
ret
dec
jns
into
cmp
sbb
mov
and
mov
mov
push
pushf
add
test
mov
fstps
daa
arpl
mov
mov
nop
pop
mov
mov
cli
pushf
iret
adcl
outsl
out
test
add
ja
insl
fsts
inc
dec
sbb
lock
inc
sbb
mov
xchg
enter
sahf
insb
mov
xchg
xchg
aaa
dec
pushf
je
frstor
scas
repz
call
fwait
shrl
add
fbld
mov
or
dec
mov
in
mov
rclb
in
int
cmp
shrb
push
jecxz
xchg
mov
dec
mov
in
leave
dec
out
mov
and
in
or
or
lret
cli
mov
scas
jae
rcll
push
test
call
or
inc
xchg
shr
ret
cmp
mov
hlt
idivb
insl
out
cs
pop
mov
dec
lcall
gs
dec
jl
inc
pop
mov
sub
pop
stc
or
xlat
je
roll
ret
mov
cwtl
jnp
lahf
aad
adc
inc
jo
sub
or
sub
adc
out
add
xor
shlb
stos
dec
mov
dec
scas
es
loopne
mov
adc
jle
cmp
stc
out
sti
shll
int3
cmc
data16
add
shll
cmc
std
mov
std
push
mov
daa
icebp
dec
sahf
mov
std
repnz
cwtl
icebp
push
in
xchg
jp
jecxz
mov
lcall
adc
insb
out
nop
jmp
insb
mov
and
popa
mov
xchg
es
pop
fdivr
pop
push
imul
mov
pop
mov
insb
push
into
js
mov
mov
xchg
xor
rorb
sub
mov
aam
dec
into
loope
inc
cmp
adc
jmp
lret
push
inc
dec
cmp
shrb
adc
sbb
cmp
aam
jne
add
mov
or
xor
xor
push
clc
js
cld
xor
nop
mov
jne
sti
and
loop
lods
cwtl
ret
mov
mov
ja
sub
cwtl
incl
cmp
jb
cli
dec
hlt
push
scas
fsubl
popf
ja
push
jb
mov
fisubs
inc
add
dec
imul
ja
jb
addr16
gs
insb
popa
push
insl
add
insb
add
jno
popa
add
add
ljmp
inc
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
decl
jne
add
add
decl
ja
add
ja
add
jle
inc
add
incl
inc
add
inc
add
cli
jg
add
jg
add
add
pusha
incl
add
nop
add
cmp
add
stos
incl
add
xchg
add
and
add
lock
add
nop
add
cmp
add
into
add
add
nop
add
push
add
add
add
add
add
add
add
add
dec
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
insb
add
add
add
xchg
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
xchg
add
add
add
faddl
add
testb
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
add
add
add
add
add
add
incl
add
add
add
push
outsb
insb
outsl
popa
fs
jae
jb
jb
imul
inc
push
inc
dec
push
cs
insb
add
add
push
inc
insb
outsl
jae
push
gs
gs
add
add
push
inc
outsb
jne
gs
je
push
gs
imul
add
push
dec
outsl
outsl
data16
gs
imul
push
inc
push
dec
xor
cs
insb
add
dec
add
je
jo
inc
jne
data16
jb
add
ret
add
je
jae
jb
gs
outsb
outsw
add
add
je
gs
outsb
jns
inc
dec
popa
insl
add
push
inc
push
dec
xor
cs
insb
add
test
dec
gs
jo
popa
insb
imul
lcall
outsl
insl
jo
arpl
add
je
outsl
arpl
push
imul
inc
jb
popa
je
inc
imul
gs
jo
jb
add
cltd
add
popa
jo
insb
insb
outsl
arpl
fiadds
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
add
outsl
jae
dec
popa
outsb
fs
gs
add
outsb
dec
jne
gs
add
jo
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
pop
add
je
jns
je
insl
push
imul
gs
gs
imul
inc
js
je
jb
arpl
jae
popf
add
popa
jo
gs
jb
jns
fwait
add
popa
jo
jb
popa
je
add
mov
je
popa
insb
inc
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
jo
gs
insb
insb
outsl
arpl
mov
popa
fs
jb
je
push
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
sbb
push
gs
fs
imul
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
push
push
gs
imul
gs
add
popa
outsb
fs
gs
js
gs
imul
gs
add
dec
outsl
fs
gs
imul
add
mov
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
mov
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
je
dec
popa
outsb
fs
add
adc
inc
imul
push
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
insb
push
outsb
ja
outsb
add
inc
gs
outsl
fs
gs
imul
add
stos
add
jne
push
inc
jne
data16
add
rolb
push
imul
outsl
dec
jne
je
inc
jns
add
gs
je
dec
popa
outsb
fs
add
xor
inc
jb
popa
je
inc
imul
gs
jb
arpl
fs
jae
add
ret
outsl
popa
fs
imul
add
popa
add
je
outsb
fs
inc
imul
gs
je
imul
inc
add
push
add
je
je
imul
push
add
mov
inc
push
dec
outsb
outsw
add
add
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
inc
push
add
xor
inc
gs
inc
dec
inc
push
add
bound
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
popa
jo
je
imul
add
popa
jo
je
imul
inc
push
dec
inc
dec
xor
cs
insb
out
pop
inc
add
jnp
add
add
outsl
add
popa
add
outsl
add
jne
data16
add
add
popa
add
add
or
adc
andb
mov
out
imul
mov
lods
xor
ss
addr16
mov
mov
mov
mov
fdivrl
sub
mov
dec
loop
push
xchg
pop
test
jno
sub
pop
mov
jp
push
mov
push
adc
out
and
popf
xchg
xor
pop
cmp
fstl
adc
xchg
popf
xor
imul
inc
mov
xchg
add
jge
mov
pop
out
xchg
pushf
insl
in
push
inc
lock
outsl
pop
out
pushf
dec
test
into
dec
and
dec
rcrl
xor
mov
nop
aas
fst
ss
pusha
out
mov
lea
divb
jl
and
dec
inc
in
ret
into
adc
jne
or
push
shlb
aaa
mov
pop
adc
add
insl
pop
repz
pop
addr16
mov
xor
jge
bound
pop
pop
int3
mov
aaa
aaa
mov
sbb
jg
scas
stos
sbb
mov
cwtl
mov
andb
repnz
es
cmpsb
pop
sub
sahf
andl
imull
ljmp
add
insb
gs
sti
mov
dec
ficoml
int3
sar
pop
leave
adc
aas
sbb
loop
addr16
push
xor
jp
sahf
pop
pushl
xor
mov
lods
popf
dec
ficoml
jmp
and
scas
test
push
ds
push
pop
fwait
pop
sbb
cwtl
stc
xor
add
ljmp
addl
xor
mov
xchg
push
popa
lds
loope
adcl
mov
mov
decl
inc
sub
cs
out
cld
lahf
mov
and
lret
out
cmpb
insb
sbb
int3
mov
lock
jg
imul
movsb
xor
push
repnz
iret
arpl
shlb
jb
sbb
mov
pushf
pop
iret
xchg
pop
push
in
adc
nop
cmp
aaa
jp
and
cmp
loope
sti
shll
out
shll
jmp
cmpsl
mov
jae
sub
inc
pop
je
ljmp
sbb
xor
call
or
call
mov
rcll
ljmp
pminsw
rclb
clc
stc
mov
inc
inc
je
ljmp
rolb
cmpsb
imul
jno
dec
test
pop
or
test
outsl
add
neg
rorb
sub
jg
enter
add
add
sarl
ret
fcom
js
jo
mov
in
andb
dec
ja
ljmp
sbb
push
and
mov
mov
insl
ja
shr
stos
test
push
test
push
loope
jo
xchg
mov
sub
mov
aas
ret
lods
xlat
shlb
push
push
jnp
jmp
and
sbb
add
mov
scas
xchg
mov
jae
pushw
lahf
sqrtps
inc
addr16
xor
jns
movmskps
fdiv
test
shll
incb
jbe
jmp
mov
mov
mov
jmp
mov
daa
xchg
inc
push
mov
iret
adc
jne
adc
add
into
push
in
inc
int3
xorb
and
cs
in
int3
xchg
ret
pop
cmp
mov
pop
fsubl
pop
hlt
inc
orl
outsl
and
xlat
addb
ja
or
sbb
push
insl
push
adc
out
shr
inc
xor
test
sub
jmp
sbb
cld
cmp
out
roll
lahf
test
out
xchg
inc
shlb
jmp
fistl
out
or
mov
aaa
jno
jo
sub
jb
inc
iret
jmp
sahf
testl
iret
adc
add
inc
pop
jmp
test
mov
cmp
jo
inc
push
add
xor
jmp
out
push
dec
test
in
lret
sahf
das
cmpsl
or
push
pusha
jns
adc
inc
sbb
mov
sbb
and
je
inc
sahf
dec
xchg
popa
xchg
jp
push
lcall
sbb
xchg
dec
out
or
pop
in
aaa
jb
mov
punpckhbw
out
arpl
xor
in
sbbl
adc
popa
inc
push
mov
jg
jl
ret
pop
mov
test
mov
aas
xor
xchg
pop
inc
inc
outsb
sbb
inc
sbb
test
dec
xor
in
arpl
in
adc
imul
addr16
inc
daa
loope
std
jl
inc
movsl
mov
test
in
xorl
xchg
mov
or
xchg
imul
jbe
add
mov
xchg
shlb
ret
xor
ljmp
pop
orb
jge
inc
pop
jae
adc
faddp
pop
fisttps
cmp
mov
in
sub
pop
xor
insb
ja
mov
pop
mov
and
les
and
les
push
jnp
jmp
pop
movb
inc
jo
xchg
cmp
das
das
push
rorb
sbb
loope
mov
adc
hlt
bound
jg
jbe
aaa
outsb
insl
loopne
repz
insb
xor
iret
les
clc
mov
sahf
inc
and
cmpsb
add
pop
pop
mov
jno
cs
lret
inc
and
jb
push
aam
iret
and
push
in
loopne
or
or
call
mov
and
push
nop
orl
cli
mov
ficoml
out
ret
inc
lcall
fidivrs
jg
xchg
sub
lock
shlb
mov
ds
inc
lret
in
pop
loopne
inc
push
mov
push
imul
ds
sbbl
jg
push
jecxz
add
add
sbb
jmp
mov
adc
gs
lret
popa
in
fdivrs
mov
xchg
sti
adc
and
leave
adc
cmpsl
scas
cltd
shlb
add
adc
mov
test
jo
decb
cmc
rorl
iret
lds
mov
movsb
xor
mov
mov
jbe
pop
mov
nop
dec
out
daa
outsb
dec
es
sbb
fcomp
push
lds
mov
out
arpl
jnp
xrelease
push
mov
sbb
mov
addr16
lock
mov
addr16
popf
ljmp
in
cmpsl
push
or
push
es
outsl
xlat
les
fucomip
sub
inc
bound
ljmp
lods
cmp
push
rep
jnp
mov
in
fnstenv
ret
insb
or
mov
dec
fs
sbb
adc
ja
repz
and
jnp
add
jb
arpl
xorb
cmp
scas
push
and
jmp
clc
hlt
stos
adc
jmp
xor
xchg
mov
or
ds
out
push
jno
adc
or
xchg
dec
aaa
dec
pop
or
jno
in
push
push
icebp
outsb
incl
xchg
inc
mov
sbb
mov
dec
xchg
enter
lock
adc
imul
mov
xchg
dec
dec
xchg
mov
test
fdivrl
cmpsl
cmpsl
movsb
add
cli
aaa
mov
cmpsl
stos
dec
push
push
sarl
adc
jge
adc
out
jecxz
incl
stos
push
mov
leave
jns
sahf
xor
inc
pop
lret
dec
push
mov
fs
ret
leave
sub
adc
mov
repnz
adcb
jae
leave
in
movl
dec
repz
jmp
repnz
pop
scas
push
fmul
jno
mov
addr16
lahf
jp
push
inc
ds
xchg
bound
jge
mov
xlat
or
rcl
jle
jmp
add
xlat
cmp
icebp
sbb
xchg
jecxz
icebp
xorl
adc
xchg
fs
bound
stc
push
jp
mov
adc
ss
shll
push
mov
leave
cltd
out
imul
rol
js
iret
push
xchg
outsb
icebp
pop
mov
rolb
loop
loope
pop
xchg
ficomps
jbe
or
les
and
cld
mov
enter
ret
repz
jl
cmp
sub
insl
sbbb
icebp
out
xor
mulb
cltd
je
js
push
pop
cmp
jmp
mov
xchg
and
mov
repz
push
push
ret
push
insl
imul
jl
repnz
adc
inc
xor
push
jge
jmp
stos
out
bound
jne
and
fdiv
lea
andl
stos
iret
fs
jns
lcall
cmp
add
das
adcb
dec
cmp
andl
and
pop
adc
int
push
jno
lea
and
dec
push
jns
inc
repnz
je
or
fcmovb
test
rol
sbb
jne
or
out
mov
call
jg
outsl
inc
sbb
repz
test
mov
mov
popf
outsb
jg
push
stc
stos
hlt
sbb
pop
lret
rolb
cltd
leave
adc
dec
pop
fwait
dec
pop
sbb
test
loop
dec
and
push
pop
adc
inc
enter
jp
jbe
test
testl
and
sub
pop
wbinvd
xchg
dec
sar
lret
fsubs
pop
es
in
xlat
mov
sub
dec
xchg
dec
sbb
xor
or
mov
add
jmp
outsb
add
mov
into
pushl
movsl
mov
daa
xor
pop
test
push
daa
fdivl
xlat
or
lock
add
xchg
mov
dec
sbb
inc
add
rol
dec
or
xchg
pop
pop
add
addl
inc
xchg
or
mov
je
std
sti
int3
xchg
pop
lock
add
jne
fldenv
pop
mov
daa
mov
std
mov
sub
inc
mov
and
in
cli
sbb
cmp
popa
out
test
lcall
add
orb
insl
cmp
aaa
popf
stos
fbstp
sub
sete
mov
add
adc
inc
fldlg2
pop
out
packsswb
xchg
xchg
pushf
pop
fbstp
sbb
jle
shll
adc
roll
cltd
pop
lret
sbb
adc
push
add
icebp
jno
daa
cmc
negb
pop
aaa
jp
mov
add
push
mov
sti
dec
jne
ficomps
cmp
test
int3
lock
push
sub
into
jge
out
sar
and
je
arpl
pop
imul
xlat
enter
jno
fwait
mov
lds
js
cmp
and
adc
pop
mov
push
mov
jp
int
dec
icebp
nop
xorb
cwtl
xor
pop
mov
adc
sbb
in
ljmp
sbb
in
nop
mov
scas
push
sbb
mov
pusha
or
mov
gs
dec
xchg
or
dec
mov
or
jl
leave
pop
dec
push
mov
lock
data16
cli
mov
adc
push
mov
fcmovnb
pop
cmp
cmp
xor
das
in
dec
rolb
shrl
out
lret
mov
sti
scas
push
sbb
ss
xchg
push
add
test
lea
cmpsl
je
loopne
shll
imul
loopne
mov
stc
hlt
into
add
lcall
lock
nop
jmp
sbb
push
pushf
mov
loope
xor
and
xchg
in
in
inc
jmp
dec
daa
dec
or
mov
lret
stc
js
jb
ret
cwtl
scas
cmp
movsl
mov
inc
dec
lahf
mov
stos
cmp
in
sub
test
in
cli
cs
jb
cmp
mov
rcrl
inc
xor
jmp
sub
stos
out
ja
jno
pop
jae
out
mov
sbb
insb
cmpl
inc
into
xchg
daa
fxam
cmpsl
cmpsb
loopne
mov
mov
xchg
shr
insb
inc
fstl
jp
push
test
filds
xorb
ds
aaa
xor
aad
sub
aas
xchg
repz
mov
std
sub
loope
pop
inc
sub
xchg
jne
icebp
push
mov
jle
lock
inc
push
pop
out
testb
jecxz
lock
hlt
aad
in
cmp
aaa
scas
je
dec
dec
int3
push
pop
jns
and
or
loope
dec
data16
arpl
add
pop
push
sbb
or
push
loop
out
ljmp
or
test
xor
mov
mov
rclb
scas
ljmp
test
cmp
fdivs
or
and
movl
in
xor
mov
and
pop
ret
test
jae
lidtl
mov
mov
xor
std
sbb
mov
mov
xchg
out
hlt
jp
xchg
mov
in
out
xor
mov
sti
insl
xchg
xor
fsts
xsaves
mov
adc
sbbl
and
lret
pusha
aas
es
mov
xorb
lods
data16
jecxz
test
lods
fdivrl
or
mov
push
or
ds
inc
jb
cmp
std
lock
movsl
jb
aas
pop
push
imull
stc
sub
adc
push
loope
cs
jl
jb
aad
xchg
rcr
or
pop
fdivl
std
mov
mov
fdivs
cmp
int
imul
rorb
dec
sbb
movsl
mov
or
or
inc
lods
xchg
mov
xchg
mov
mov
test
sbb
in
andl
insl
mov
movsl
fmull
sub
xchg
and
fistl
jb
roll
lds
xchg
dec
cmp
in
sub
enter
push
mov
dec
pop
xor
jb
push
or
hlt
lds
test
mov
scas
inc
inc
mov
test
sbb
insb
out
loopne
call
mov
mov
hlt
sbb
faddl
pop
int
int3
jo
adcl
or
mov
inc
out
mov
lcall
repz
xchg
add
mov
xor
hlt
mov
or
lcall
pop
dec
in
pop
push
fwait
push
cmp
jmp
inc
fiaddl
sahf
pop
push
xorl
lret
xor
insb
pop
cmc
jmp
jns
test
dec
xchg
adc
xor
sub
mov
sub
ja
loope
mov
or
shlb
pop
shlb
and
sub
loop
push
fidivs
push
int
add
icebp
pop
mov
div
xor
mov
aam
fsubp
shlb
jle
loope
mov
clc
xor
mov
or
sbb
je
mov
sub
add
enter
gs
stc
ljmp
sar
dec
les
cmpsl
lea
mov
pusha
lock
cmpsl
push
mov
in
cltd
cmpsb
pop
pmullw
inc
jo
mov
and
xchg
ljmp
inc
push
aad
and
flds
xchg
jne
pop
jbe
outsb
scas
push
and
add
test
xor
cmc
lahf
adc
mov
sti
fsubrl
test
popf
cmp
test
push
push
aas
inc
fdivrl
mov
imul
lds
xor
imul
sub
xlat
lds
cmpsb
mov
fisubs
xor
rcll
xchg
outsl
push
sub
rorb
xor
push
pushf
xchg
sub
inc
mov
jo
add
int3
fisubl
pop
add
sub
mov
mov
mov
into
xchg
rclb
and
adc
in
fcomps
mov
cmp
inc
hlt
mov
push
call
pop
mov
jg
shll
push
in
adc
or
xor
push
inc
xlat
dec
sbb
jne
xor
adc
shrl
into
scas
mov
clc
sbb
push
je
rclb
es
movsl
sbb
and
js
xchg
sub
pop
into
xor
popa
stos
ja
insl
and
stos
mov
leave
mov
not
inc
or
popf
cmpsb
loopne
adc
shll
bound
insl
mov
out
xlat
mov
cltd
ljmp
jg
xlat
mov
push
stos
sbb
call
sarb
jg
xchg
add
mov
mov
dec
stc
push
bound
lcall
leave
or
stos
xor
sub
movsl
stmxcsr
sub
ficoms
xlat
or
imul
aad
xchg
or
ret
das
mov
xchg
add
push
jae
nop
fld
adc
mov
jo
and
dec
shrb
loopne
dec
jno
loope
jg
mov
bound
je
sbb
sub
cwtl
gs
mov
lret
in
mov
adc
inc
or
xor
cmp
ljmp
xchg
iret
cvtpi2ps
cmp
loope
dec
push
pop
sbb
fistps
add
sti
lret
roll
idivl
or
ja
in
ds
sub
jno
push
imul
cmp
adc
add
lcall
mov
mov
jns
cmp
or
lahf
daa
aam
addl
sti
lahf
in
xorl
sbb
insw
cld
nop
jns
icebp
mov
jae
and
cmc
jecxz
movsl
pop
mov
out
lods
out
push
or
push
and
jl
std
int3
push
jg
loopne
dec
dec
inc
adc
cld
sti
jge
ljmp
adc
mov
mov
jmp
notl
xchg
popf
and
enter
cltd
push
mov
add
ja
mov
add
sub
inc
and
leave
cmc
fs
jge
fwait
shl
xchg
popa
out
xchg
jbe
mov
ja
cmc
fwait
loopne
xchg
popa
aaa
sub
sbb
cld
lahf
jp
jb
fdiv
ljmp
adc
fmuls
xchg
xor
jl
mov
inc
mov
fistpll
stos
rcr
jno
testl
imul
ret
xchg
pop
and
pop
inc
mov
push
enter
lds
or
or
jo
outsl
mov
ds
divl
shlb
lods
add
popa
fs
pop
lods
or
hlt
fsubrs
and
test
sub
xchg
cmp
and
stos
or
mov
xor
jecxz
xchg
stos
bound
adc
lock
adc
call
mov
lcall
shlb
xchg
das
mov
lock
andb
int3
out
mov
addl
repnz
sbb
flds
inc
pop
sub
and
lret
xchg
icebp
xor
movsb
xor
cmp
push
push
fimull
jns
or
pop
mov
xor
fisttpll
fldl
fwait
xchg
sub
push
add
enter
lods
leave
push
xor
push
xchg
cmp
pushf
adc
js,pt
fisubrs
scas
sti
shlb
push
insb
pop
mov
cmp
pop
mov
mov
push
pop
ret
imull
push
sbb
arpl
leave
sbb
sbb
leave
push
mov
xor
imul
push
dec
inc
ss
scas
xor
out
push
mov
sub
daa
inc
lret
sar
mov
and
mov
jle
and
cmpsb
push
into
inc
cmc
in
mov
push
test
loopne
nop
stc
fdivrp
shlb
mov
rcrb
jp
aad
mov
adc
das
mov
pop
popa
push
fdivl
push
jl
inc
push
lret
mov
mov
push
out
enter
mov
adc
out
clc
fistl
ret
movsb
inc
sub
int3
mov
leave
push
or
sti
fcoml
add
lret
jmp
ret
enter
sub
xor
or
hlt
mov
dec
cmpl
jns
xchg
jb
aad
push
shl
movl
ret
sbb
andb
clc
push
in
rolb
shrl
sub
nop
mov
loope
push
fisubrl
xchg
dec
jl
ror
sti
mov
inc
lock
rcl
in
adc
push
cmpsb
xor
in
cli
sahf
mov
test
mov
pop
js
mov
mov
es
sub
orl
out
sbb
sti
inc
cmp
addr16
ljmp
mov
outsl
aam
sub
pop
lret
ljmp
mov
xor
sbb
leave
cmp
mov
loopne
mov
inc
cmp
jno
loop
cmc
das
or
adc
out
and
xor
xor
xchg
data16
and
lds
in
add
lds
adc
jmp
ljmp
adc
cmp
adc
jns
cmpsl
lar
arpl
and
out
push
arpl
inc
pop
dec
ss
lock
aas
cs
sub
test
jge
loop
in
cmp
addr16
lods
push
outsb
lret
mov
mov
cltd
adc
cmc
loop
in
pop
and
stos
inc
pop
mov
call
mov
hlt
or
ret
leave
xchg
lcall
lret
out
cmc
shll
rsm
push
repz
arpl
popa
add
dec
mov
aad
fs
mov
inc
sbb
and
sbb
add
pop
mov
nop
mov
push
iret
out
mov
pop
xlat
pop
and
xor
jle
addr16
roll
jp
add
xchg
lcall
orl
stos
cwtl
cwtl
out
out
sbb
cmp
stos
xor
clc
mov
and
sbb
and
and
jle
pop
xchg
push
lods
inc
flds
test
push
push
or
add
cmp
or
outsb
cmp
mov
icebp
fsubrs
lahf
shll
mov
mov
inc
and
xchg
dec
add
fwait
or
xor
pop
and
cld
clc
test
fnsave
mov
mov
js
test
jmp
dec
dec
xor
fwait
aam
cmpsl
fstpl
movsb
shrl
xor
fdivrp
jns
adc
inc
push
popa
fucom
cmpsb
jge
xchg
bnd
xchg
add
je
push
jp
arpl
lock
repz
sbb
test
rcl
mov
xlat
dec
mov
test
sahf
dec
jnp
scas
adc
cltd
movsb
mov
inc
or
mov
sbb
test
repz
add
out
push
jp
adc
call
inc
jmp
cmp
jmp
lahf
add
aad
movl
xchg
icebp
cmc
ret
mov
cmp
ljmpw
xchg
js
jmp
loop
cmp
mov
dec
and
push
jecxz
pop
pop
add
mov
xor
cld
push
inc
mov
testb
vmptrst
stos
pop
addr16
cli
out
push
mov
data16
insl
aam
sbb
loop
cmp
icebp
sub
ds
or
gs
cltd
lods
sub
adc
aad
inc
lret
sub
mov
mov
xor
push
lods
lahf
aam
adc
pop
ss
mov
mov
xor
xchg
xchg
int
push
call
jae
stc
jne
ds
imul
imul
pop
dec
movsb
push
mov
xchg
jno
pop
mov
fistpll
sti
jo
test
rcl
rclb
jmp
andl
pop
xor
aas
xchg
pop
dec
dec
stos
dec
cmpsl
and
out
pop
out
sbb
ds
and
pop
push
jecxz
mov
mov
jmp
std
and
mov
aad
stc
and
and
add
jge
inc
push
std
adc
shr
add
add
mov
sahf
scas
call
jecxz
adc
mov
movsb
dec
dec
push
cmpsb
loop
dec
mov
push
aas
xchg
or
lods
dec
add
outsb
pushfw
and
sti
add
jge
xchg
out
push
andb
mov
and
loope
nop
fcoms
cmp
test
lret
shll
iret
cmp
ficoml
and
adc
ja
jne
cmp
mov
xchg
pop
xchg
movb
lret
pop
in
add
sbb
mov
hlt
xor
mov
add
add
dec
mov
aaa
clc
stc
xchg
xor
inc
fildl
shl
rcll
sub
or
xor
cmp
push
push
test
mov
je
add
push
mov
jo
shl
add
or
push
adcb
add
xor
insb
inc
xchg
pop
cld
and
movsl
lods
lret
xchg
cmp
xor
fs
mov
xor
adc
stc
jmp
cltd
les
cmp
mov
mov
jmp
aam
sbbl
out
adc
enter
shrb
jno
test
clc
push
sub
mov
and
and
adc
stos
cs
loopne
pop
sldt
add
adc
insb
mov
cmp
mov
stos
mov
and
sub
cmp
and
sbb
push
push
dec
xchg
add
dec
inc
pop
insb
dec
cmp
mov
xor
and
mov
sbb
call
pop
dec
lea
sarb
xor
call
insb
scas
das
in
sub
loopne
cmp
pop
cmp
sbb
daa
aaa
or
mov
mov
inc
sti
add
add
add
imul
push
jp
xchg
sub
rcll
aad
cwtl
pop
inc
insl
pop
inc
stos
fcom
or
mov
daa
cmpsl
jmp
or
enter
xchg
movl
pop
mov
fs
mov
xchg
sahf
pop
data16
and
sbb
mov
test
xor
inc
ret
repz
aam
xchg
movsb
or
lds
jle
mov
pop
daa
mov
dec
outsl
mov
xchg
lds
test
mov
mov
mov
mov
push
sbb
pop
dec
mov
call
lcall
mov
enter
mov
flds
cmp
lcall
add
call
in
pop
mov
push
push
fldcw
sbb
es
and
and
inc
call
cwtl
and
adc
push
in
mov
mov
repnz
stos
jg
mov
pop
xor
nop
outsl
mov
in
xchg
sahf
shrb
mov
sub
leave
out
cmp
sarl
cltd
mov
or
into
jne
outsl
xor
mov
aas
jle
call
add
add
add
pop
dec
mov
rolb
fcompl
rcl
add
lahf
pop
das
add
add
add
mov
das
int3
in
mov
xchg
addb
str
or
hlt
ds
clc
gs
cmp
popa
into
xchg
ficompl
dec
lods
testl
mov
add
xchg
adc
fwait
outsl
test
inc
cmpsb
outsb
inc
lahf
jl
xor
subb
rclb
je
enter
and
jae
and
sar
scas
push
pop
out
mov
rcrl
mov
mov
xchg
lds
xor
sarl
repnz
mov
mov
mov
ss
loop
sub
rorl
fmulp
int
mov
loop
and
mov
insb
mov
mov
jno
das
pop
mov
mov
mov
pop
xor
sub
out
push
push
negb
lcall
and
mov
mov
push
mov
pop
sub
aam
or
xchg
repnz
sub
jo
jg
vucomiss
dec
mov
pop
push
add
add
add
fsubs
imul
lahf
fbld
stos
arpl
push
or
push
pop
sub
push
add
hlt
dec
lds
fimull
ds
push
adc
mov
push
lret
lods
push
repnz
sub
cld
push
loope
sub
fstpt
test
add
xchg
cmpl
jle
push
iret
xor
add
jg
lcall
lds
mov
push
por
aad
test
or
cmp
bound
pushf
ss
inc
pushl
jl
xchg
cmc
add
add
mov
scas
mov
pop
fdivrs
adc
sub
ds
add
inc
rorl
stos
xchg
sbb
xchg
out
mov
arpl
push
sub
mov
rorl
shll
lret
les
mov
imul
stos
mov
push
nop
xor
stos
adc
and
sbb
xor
xchg
push
adc
jne
jns
ret
mov
adc
mov
inc
jae
jle
xlat
ss
xor
lock
jmp
fisubrs
or
ret
or
movsb
inc
sbb
mov
mov
mov
jns
mov
cmp
inc
inc
adc
cs
or
jmp
push
ja
out
arpl
cli
fmull
ret
lret
jmp
add
arpl
out
push
push
enter
add
add
lock
rcrl
lock
jo
cmp
jnp
nop
outsb
jp
stc
out
xchg
int3
enter
enter
rorb
push
mov
fmull
ret
jle
sbb
shlb
outsb
inc
lcall
sbb
pop
add
add
add
xor
mov
movb
and
and
mov
cmpsl
mov
gs
scas
scas
rorl
movsl
test
add
add
hlt
jle
pop
or
jae
or
mov
mov
movsl
out
insl
sbb
jno
cmp
xchg
imull
mov
mov
and
cmc
mov
add
jge
jge
sub
dec
and
cmc
jns
push
das
dec
das
aad
jp
aaa
test
mov
call
nop
dec
add
cli
push
push
fbld
sbb
cld
sub
fstps
rcrb
sahf
xlat
jns
mov
push
out
pop
nop
dec
push
add
xchg
shll
add
add
in
sahf
movsb
call
movsb
dec
iret
mov
jmp
lds
mov
xchg
gs
stos
mov
mov
jae
stos
dec
add
pop
inc
inc
dec
fmul
adc
pop
or
inc
ret
call
jb
lea
mov
and
push
push
lret
rolb
sbb
ljmp
cmp
jae
mov
int3
pop
cmp
sub
fistpl
movsl
xchg
fsubl
movzbl
mov
add
or
mov
icebp
rolb
out
inc
ds
mov
xchg
imul
pop
fisttps
sub
leave
pop
arpl
adc
inc
or
ljmp
mov
rcrb
mov
cmpsl
lret
mov
mov
jnp
push
rolb
ret
dec
and
int
mov
mov
in
sti
dec
jg
push
mov
mov
lock
dec
or
mov
repz
mov
jbe
inc
xor
or
jno
out
push
fisttpl
cmpsb
mov
sbb
sub
int3
mov
cmp
or
mov
adc
push
leave
mov
cmp
mov
imul
cmpsb
cld
std
orb
xchg
push
jo
outsl
jge
cmp
push
outsl
add
inc
and
lahf
subb
adc
mov
xor
inc
bound
and
sbb
xchg
es
sahf
pop
add
add
add
das
xor
pop
xchg
mov
call
pop
inc
test
dec
inc
and
mov
add
test
std
cmp
sub
fdiv
inc
sbb
cmpl
cs
xchg
or
jecxz
data16
pop
cmc
cli
adc
cltd
test
dec
test
jl
adc
daa
jp
jl
rol
sub
out
or
lahf
aas
and
outsl
dec
push
fdivrl
lcall
int3
jne
push
add
hlt
push
xor
stc
pop
lods
lods
lahf
mov
add
je
mov
fwait
adcb
xchg
syscall
jg
test
xchg
or
lret
insl
in
and
pushf
stos
or
loop
jl
out
mov
pop
movsb
add
add
lret
adc
cmpsb
inc
or
addb
inc
cltd
imul
aam
out
sub
adc
ja
loopne
leave
mov
inc
jb
sbb
scas
cltd
cmp
into
mov
enter
loope
mov
dec
cmp
cmc
scas
fistl
sub
nop
call
or
mov
shll
push
fimull
dec
mov
adc
nop
dec
push
jno
mov
push
jb
std
fbstp
push
leave
inc
push
push
jle
mov
pop
in
lock
fwait
fwait
std
cmp
inc
leave
test
dec
iret
stos
rcl
loop
call
add
ljmp
pop
pushf
sbbl
das
jl
sbb
mov
add
cmp
in
xchg
jno
xorb
mov
mov
dec
push
rolb
cld
mov
pusha
pop
mov
sarl
add
enter
stos
js
into
pop
jl
jbe
sarb
xchg
adc
nop
call
push
test
push
ror
mov
clc
mov
in
xlat
shl
xor
scas
mov
sbb
or
movsl
hlt
push
jno
movb
int3
dec
add
out
jg
loop
xor
imul
lock
jno
sub
imul
daa
hlt
dec
sbb
mov
ret
cmpl
sbb
add
add
and
cmp
pop
adc
sub
lock
pop
roll
arpl
repnz
or
xchg
iret
mov
mov
outsl
pop
aaa
sbb
sub
in
sub
add
mov
and
and
fcmovnb
or
fchs
cmp
lcall
shl
or
jmp
shr
mov
pop
pop
in
arpl
pop
xchg
flds
push
cld
nop
jno
mov
adcl
xor
outsb
ljmp
daa
xchg
imulb
andl
fcoml
sub
mov
dec
pandn
lea
sub
aam
int3
and
xor
jge
fbstp
or
add
mov
pop
pop
in
jnp
bound
jnp
sub
sbb
mov
loope
shlb
inc
pop
les
imul
into
jae
inc
mov
mov
ret
and
aaa
test
push
ljmp
inc
test
ret
repnz
clc
sbb
sbb
test
cmpl
sbb
jnp
xchg
xor
push
cmc
jmp
lds
jl
rorb
mov
push
inc
push
sub
xchg
sahf
dec
dec
pushl
pop
cvtdq2ps
push
push
outsl
subb
push
sub
push
add
add
add
mov
repnz
repnz
test
les
push
or
repz
stos
nop
call
daa
pop
mov
iret
cmp
sbb
loopne
nop
cli
idivb
lcall
dec
fbstp
test
insb
mov
call
pop
jmp
ds
outsb
lahf
inc
jns
push
xchg
fwait
mov
icebp
fcmovnu
mov
int
lods
push
lret
inc
lret
jle
add
add
add
loopne
xchg
dec
adc
xor
sub
xor
push
push
dec
jecxz
pop
push
pop
add
mov
jmp
rcrb
aaa
adc
inc
inc
sub
aad
test
outsl
aas
andl
testb
jne
mov
jne
test
mov
sti
sbb
and
jmp
icebp
push
xchg
repz
lods
cld
add
pop
bnd
movsl
mov
mov
mov
ds
shr
cmp
xchg
dec
and
push
add
add
loope
adc
lret
ljmp
jg
hlt
jmp
cs
lock
cs
xchg
in
pusha
adc
xchg
jb
repz
add
add
cmp
adc
push
test
das
icebp
sbbb
and
and
js
mov
cmp
sub
mov
int
nop
call
fimull
sbb
sbb
or
or
xchg
xchg
out
call
je
into
test
cmpsl
dec
fdivr
xchg
and
lds
dec
push
lret
test
ljmp
mul
fs
call
sbb
xor
in
mov
aas
mov
mov
aam
push
daa
xor
add
mov
in
mov
and
call
leave
imul
fcompl
arpl
bnd
push
test
jb
add
add
add
xchg
cmpsl
dec
lcall
push
inc
or
and
repz
call
lret
push
js
adc
andl
movsb
test
or
es
inc
fs
sarb
scas
sbb
or
mov
lret
aaa
xchg
cmp
jmp
fwait
shrb
mov
xlat
arpl
push
push
mov
sbb
fsubl
idiv
int3
dec
pushl
fsubs
fisubs
xor
aaa
test
xchg
adc
ja
je
mov
sbb
in
mov
movsl
push
lcall
add
mov
loopne
sub
push
repz
in
adc
outsb
rclb
xor
daa
int
loope
icebp
xor
dec
xor
idivb
jne
js
mov
cmpsb
push
repnz
xchg
cmp
movsl
adc
clc
dec
sbb
out
mov
aaa
xor
push
and
bound
and
mov
mov
or
pop
sub
mov
adc
fmull
sbb
dec
kxorw
test
cld
and
and
leave
lahf
and
sti
dec
or
mov
stos
fisttps
jne
mov
outsl
dec
fistl
or
xchg
push
add
push
xor
xor
pusha
push
inc
test
push
xchg
out
shlb
dec
push
fdivrl
aaa
push
movsl
or
adc
call
and
xchg
sub
and
mov
adc
out
sti
sub
std
pop
mov
pop
mov
cmp
mov
orb
inc
test
and
push
outsb
popf
loop
cltd
mov
movsb
pop
call
movsl
jg
jmp
adc
sub
iret
mull
fucomi
lret
in
or
lods
adc
adc
mov
mov
dec
jo
jl
shll
lcall
add
add
cmp
fs
addr16
clc
xor
dec
adc
out
ret
push
cld
add
sbb
rcrl
pop
inc
jle
dec
dec
sti
pusha
bound
ret
sbb
test
xor
aam
test
lds
pop
jne
std
inc
push
xchg
nop
call
sbb
addl
std
xor
cmp
and
mov
jb
sub
int3
dec
call
imul
cmp
sub
in
mov
enter
cmpsb
xchg
mov
arpl
sti
add
setns
jl
test
pushf
sub
mov
out
mov
or
add
add
lcall
push
lea
es
add
test
call
add
fndisi(8087
dec
popf
adc
test
pop
imul
jp
add
add
xchg
push
filds
or
xchg
sbb
jne
xchg
jae
sbb
mov
jno
jno
test
push
popf
jmp
jns
push
and
and
and
cmp
dec
xchg
lea
sbb
testl
or
jp
std
or
dec
in
incl
mov
fs
sbb
xchg
inc
sarl
dec
mov
push
in
jmp
notb
pop
pop
push
pop
dec
daa
push
xchg
repnz
mov
xor
cmc
je
mov
and
nop
outsl
mov
icebp
add
sub
mov
lock
lcall
and
xchg
movsb
into
scas
es
xorl
test
lods
cltd
inc
loope
lock
insl
sbb
xor
and
in
inc
xchg
xlat
shl
xor
mov
je
dec
jle
popf
xor
add
or
clc
push
fcoml
int
xchg
pusha
hlt
push
cmp
mov
stc
fisubs
inc
shlb
imul
ja
xorl
fwait
push
inc
or
cli
mov
fwait
pop
adc
aam
fwait
lods
xor
out
loop
testb
sbb
je
pop
sbb
in
hlt
movsl
jbe
int3
dec
call
and
shl
clc
into
adc
add
leave
push
mov
in
es
jo
fcomps
sbb
add
stos
shll
jbe
fidivrl
imul
imul
sahf
jae
sub
call
xchg
out
enter
and
cs
test
mov
stos
xor
jo
sbb
cmp
jnp
sub
ja
call
add
leave
sbb
jnp
pop
lea
pop
adc
pop
inc
jle
add
push
sbb
sub
imul
int3
jle
cmp
fnstcw
inc
scas
jg
hlt
movsb
mov
outsb
push
push
shlb
int
bound
jg
loopne
scas
cmp
push
adc
mov
cmp
aaa
push
inc
add
shr
cmp
jno
mov
and
out
add
adc
mov
dec
pop
xchg
adc
push
incl
mov
pop
push
aaa
dec
sbb
push
add
mov
repz
loopne
es
add
sbb
and
lcall
and
mov
les
int3
movsb
mov
fdiv
cld
and
out
cmpsb
aam
pop
xchg
mov
out
out
xchg
loop
push
lods
fdivrs
adc
mov
add
jmp
inc
xchg
dec
data16
sub
or
mov
mov
sub
insb
xor
loopne
xchg
ja
pop
sub
fimull
mov
movsl
sub
xchg
mov
xchg
rcll
mov
mov
outsl
jae
add
add
les
cs
mov
push
jl
stos
add
push
xchg
loope
arpl
inc
fisttps
cmp
imull
loop
mov
add
add
pushf
adc
mov
scas
aam
xchg
iret
inc
fdivrs
jg
lea
xchg
out
pusha
std
nop
call
aad
jo
push
lods
popa
lods
inc
sub
ljmp
pop
loopne
and
outsl
pushl
notb
aam
pop
mov
mov
add
div
int3
fsubs
mov
mov
jne
sbb
psrad
das
add
call
aam
out
in
fmull
lea
cmc
sub
cld
mov
cmp
sbb
insl
inc
pop
push
xor
dec
out
sbb
das
movsl
out
or
insb
std
adc
jbe
mov
inc
xchg
idivl
sbb
aas
jg
cld
cld
loop
mov
mov
stos
adc
push
jge
rolb
clc
lret
jns
add
add
mov
fstpt
leave
sbb
pop
je
scas
push
test
in
adc
lcall
pusha
dec
or
add
hlt
adc
add
add
ljmp
int3
or
negl
add
add
into
es
adc
push
stos
cmpsl
and
js
xchg
mov
cli
repnz
stc
mov
negl
mov
ror
mov
repz
fildll
mov
xor
out
rorl
popf
aam
sti
add
add
sti
mov
je
xor
nop
ljmp
roll
mov
add
loopne
imull
jne
sub
int3
cwtl
mov
mov
les
fwait
dec
jo
xchg
mov
mov
outsb
out
std
pusha
inc
nop
mov
gs
mov
xchg
cmp
mov
fldenv
repz
dec
inc
roll
cmp
add
mov
and
adc
cld
adc
adc
sub
pop
lds
outsl
pop
iret
out
in
jne
pushf
mov
rclb
pop
cmp
leave
push
ficomps
ss
call
lock
adc
cmp
out
dec
out
ljmp
jmp
cli
adc
test
pop
and
aam
stc
std
lcall
xchg
sbb
popf
pop
and
add
pop
adc
add
imul
cmpsb
push
shrl
leave
fidivs
adc
ret
xchg
dec
sti
enter
mov
push
jle
sbb
sub
aas
jmp
icebp
mov
icebp
les
lcall
addr16
fstpt
aad
or
mov
inc
xchg
mov
aam
mov
add
dec
or
ljmp
adc
out
je
mov
push
std
or
in
add
sti
aam
aas
jp
jecxz
pop
adc
push
xor
inc
leave
inc
cmp
call
jg
push
push
cmpsb
fists
cmp
sbb
je
mov
pop
fcoml
nop
pop
dec
test
aad
and
and
jbe
cwtl
sub
repz
scas
and
and
orl
and
dec
or
lret
add
mov
imul
mov
pop
sub
popa
dec
fbld
pop
push
push
inc
adc
in
mov
movsb
dec
leave
lcall
dec
jp
jns
cmp
aam
add
add
or
mov
mov
pusha
in
xchg
sub
movsl
sub
cltd
aaa
mov
fdivrl
pop
sbb
add
mov
out
std
scas
imul
divl
mov
and
sbb
ja
test
sub
inc
mov
int3
and
jmp
adc
mov
sub
pop
pusha
lea
pop
ljmp
sbbb
hlt
inc
jl
or
pop
mov
or
ret
std
int3
mov
mov
mov
pop
ja
lods
data16
test
add
add
add
inc
or
xchg
lahf
outsb
lcall
adc
jecxz
lock
fmull
adc
iret
cwtl
cwtl
and
shll
dec
dec
jmp
roll
mov
ret
fbld
sbb
imul
ljmp
adc
hlt
in
lret
dec
divb
xchg
mov
shlb
sbb
sub
add
add
imul
lea
jg
sbb
xor
jbe
mov
push
add
add
sar
mov
out
fs
enter
mov
insl
fidivrl
mov
imul
cs
fadds
scas
inc
lds
mov
xchg
paddusb
movsb
mov
xor
xchg
push
add
add
movsl
imul
pop
sbb
jmp
jns
mov
xchg
nop
call
jle
xchg
outsb
inc
mov
sub
cli
lret
mov
xor
push
repz
jp
mov
xchg
movsb
push
sbb
lock
sti
push
and
jecxz
push
dec
or
insl
lret
clc
xchg
cltd
sbb
add
add
out
sub
rcl
inc
out
push
es
das
loopne
mov
ret
mov
mov
outsb
dec
dec
or
dec
in
movsl
sbb
jmp
inc
lcall
push
cmc
lret
jno
ljmp
fwait
mov
sbb
xchg
testb
dec
mov
push
jb
jl
jge
shrl
or
or
sub
sub
mov
sti
lret
inc
shlb
inc
pop
insl
inc
popa
out
and
cmp
sub
dec
dec
jo
mov
scas
jb
xchg
xor
subb
dec
dec
mov
and
rcl
lds
incl
jge
cwtl
inc
ficomps
jge
push
pusha
nop
clc
sbb
jb
sbb
loopne
lds
orb
and
push
pop
or
cmp
faddl
xchg
xor
or
jecxz
dec
add
add
shr
int
xor
cmp
xchg
incb
add
add
shll
add
dec
sar
mov
mov
out
scas
les
clc
mov
xor
add
add
add
cmc
dec
cwtl
loop
in
jmp
movsl
sub
mov
sbbl
mov
loopne
lret
xor
push
aaa
mov
cmpsb
mov
outsb
add
add
insb
and
and
out
jne
jge
ret
mov
jl
mov
mov
mov
sbb
jae
aas
mov
movsb
pusha
sbb
dec
shl
add
push
imul
xor
clc
cmp
outsl
lock
inc
or
add
inc
cmp
add
add
add
pop
dec
push
into
jb
add
add
arpl
fisubrl
sbb
mov
adc
repnz
cmp
jb
aaa
jg
dec
xchg
pop
out
mov
push
inc
fneni(8087
imul
sub
push
sbb
cltd
bound
fimuls
int3
dec
ljmp
std
or
push
out
push
ret
xlat
fistl
popa
xor
scas
xchg
or
mov
cmp
inc
mov
fnstcw
xor
aas
loopne
inc
dec
cwtl
dec
pop
cmpsl
lds
dec
pop
push
in
sub
mov
or
pop
add
add
fbstp
inc
add
push
imul
lea
fwait
pusha
mov
fwait
sub
mov
in
arpl
or
aam
sub
testl
shll
xchg
adc
xchg
cmp
aaa
cmc
nop
call
data16
sub
repnz
jg
dec
dec
imul
pop
pop
je
mov
lock
jno
or
dec
and
sbb
bound
pop
arpl
loopne
sti
jp
xchg
mov
aaa
mov
inc
mov
and
and
add
addr16
pop
pop
mov
stc
push
loope
jae
sub
mov
lock
and
dec
imul
lret
stc
les
jbe
int
and
cmp
scas
xor
cmp
or
cmp
mov
andb
dec
lgdtl
jo
jle
jne
bound
push
movsb
ffree
add
add
insl
xor
jno
stos
xor
adc
push
fists
fbstp
adc
test
test
nop
nop
in
dec
jns
out
cmp
sub
mov
daa
jo
add
add
push
mov
sti
nop
arpl
insb
jne
sbb
incl
je
out
in
loopne
mov
aam
cmp
pop
test
add
push
cs
test
imul
pop
fdivs
add
add
jl
in
add
push
jnp
repnz
sbb
jbe
cli
out
fs
xor
add
ds
orl
cmc
dec
inc
lcall
push
sbbb
sbb
insb
loop
jp
movsb
add
add
ret
iret
mov
and
and
and
mov
lret
add
add
add
dec
pushf
out
mov
jle
push
sub
repnz
lock
xchg
jp
mov
mov
les
add
add
lods
test
pop
mov
and
jne
ficoml
je
mov
mov
stc
mov
rorl
and
testl
mov
es
dec
jnp
dec
lods
mov
pop
xchg
stos
mov
push
icebp
call
call
mov
jp
shr
mov
decl
imul
shll
adc
mov
mov
mov
inc
shrb
sahf
nop
jns
mov
lods
pop
xchg
mov
push
inc
repz
pop
outsb
lds
xchg
dec
mov
jb
inc
and
sub
ss
int3
and
and
cmpsb
cltd
lahf
dec
cmpsb
roll
jp
dec
adc
dec
xchg
adc
sti
sbb
bswap
outsb
mov
xlat
dec
sti
mov
out
repz
daa
dec
inc
or
jecxz
pop
jge
pushf
outsb
clc
ret
adc
mov
pusha
push
mov
lret
ja
repnz
xchg
and
jae
pop
sti
adc
mov
lret
fs
fisubrs
sbb
es
mov
fwait
test
insb
out
jg
cmp
xlat
aam
mov
mov
push
fmulp
cmp
xor
add
add
lret
sub
dec
jbe
scas
cld
test
mov
push
ds
add
jecxz
xlat
fmuls
fsubrp
or
mov
pop
pop
xorl
push
mov
nop
jecxz
sbb
std
in
mov
jns
insl
mov
adc
adc
mov
fstpl
inc
nop
call
cltd
adc
popa
push
insl
sahf
add
sub
mov
cld
mov
mov
lea
jmp
scas
pop
enter
arpl
mov
or
lcall
outsb
in
sar
dec
jnp
jnp
dec
xchg
leave
pop
xchg
aad
call
jns
sub
lds
movsb
jge
push
std
fisttps
hlt
fwait
pop
addl
xchg
neg
push
push
pop
inc
roll
aaa
and
sub
mov
dec
stos
out
mov
mov
call
enter
xor
add
inc
cmp
test
lds
leave
mov
pop
dec
ljmp
jno
lods
fimuls
pushf
push
cmp
imul
cmc
lock
cmp
dec
ss
xor
and
push
imul
push
loopne
outsb
jne
test
inc
jb
xchg
pop
dec
xchg
ljmp
fisttpll
js
push
cmpsb
push
int3
mov
push
or
adc
and
movsb
fisttps
mov
mov
pop
out
loope
cmp
loopne
cmp
add
add
xchg
jb
dec
push
bound
push
sub
loopne
pop
test
sub
cmp
cs
lcall
int3
and
mov
push
in
cmp
dec
stos
or
out
sub
add
mov
pop
xor
add
add
push
std
sbb
mov
xor
xchg
mov
out
adc
iret
or
adc
hlt
jb
ret
inc
cld
sub
pop
and
das
out
dec
out
sbb
enter
movsb
push
mov
mov
pop
jmp
or
loope
fadd
pop
xorl
sbbl
in
sub
inc
pushf
mulb
test
cmp
sub
sbb
fildl
fdiv
xor
mov
cwtl
sbb
flds
stos
xlat
adc
dec
in
inc
pop
addr16
sbb
jge
loop
fisttpl
inc
dec
in
dec
xchg
xor
and
mov
dec
adc
push
inc
std
jmp
or
jmp
and
adc
jp
add
add
lahf
lahf
xchg
inc
test
and
jmp
mov
ljmp
dec
xchg
dec
mov
ss
mov
lds
loope
or
stos
cmp
xor
stos
js
xor
daa
ret
stc
pcmpgtb
icebp
loope
push
cmp
push
cld
mov
in
dec
mov
lods
mov
ds
mov
mov
or
xchg
mov
nop
push
xchg
sbb
enter
in
scas
shrb
xchg
leave
popa
sub
jno
xchg
rcll
nop
xchg
cmp
push
cmp
stc
adc
in
addr16
nop
pop
jmp
mov
xlat
jmp
mov
jecxz
dec
sbb
sbb
arpl
or
xchg
add
xchg
fisubs
stos
mov
inc
pop
adc
jle
jmp
rep
fildl
mov
pop
adc
pop
fwait
stos
or
out
fstl
pop
adc
lock
mov
adc
and
or
pop
hlt
xorl
add
and
in
cmpsl
mov
and
add
leave
js
mov
and
lret
mov
loope
push
sub
dec
decl
xchg
adc
fadd
ds
je
leave
xchg
xor
cmp
arpl
aad
repz
je
inc
lods
negb
jae
imul
pop
cmp
add
mov
addr16
call
movsb
movsb
jge
jno
cmp
decl
jbe
push
subb
fs
mov
push
stos
mov
popa
ficoml
outsb
fsts
inc
stc
stos
cmp
mov
mov
xchg
mov
mov
mov
mov
cmp
xchg
xor
lock
xchg
pop
scas
jo
cmp
push
push
pop
stos
push
sbb
add
add
test
jbe
mov
jg
popa
stos
sahf
fsubs
leave
xor
std
out
daa
test
mov
push
and
mov
or
movsl
sbb
scas
aad
xchg
ficompl
adc
int3
jmp
push
sahf
lds
inc
test
push
jge
sub
popa
iret
cmp
cmp
out
dec
or
inc
sbb
mov
adc
and
xchg
imul
inc
mov
das
shlb
popf
mov
or
xchg
js
mov
dec
push
cli
stc
mov
jmp
es
std
lods
lock
mov
inc
nop
sub
test
testl
andb
xor
mov
dec
fsubs
int3
jmp
xor
addl
jnp
pop
xlat
pop
mov
divb
lock
mul
cld
leave
cmp
lret
jg
jp
clc
ljmp
cmc
into
add
bound
mov
inc
gs
jge
pop
fdivl
xchg
movsl
xchg
jmp
faddl
jmp
and
xchg
leave
push
js,pn
popf
push
arpl
daa
adc
add
dec
add
lock
xor
jecxz
push
add
std
adc
imul
add
add
ret
fstpl
ds
fbstp
and
outsb
push
push
loope
adc
xchg
cmc
or
jp
test
mov
push
or
les
push
jmp
mov
ja
sub
xchg
xor
mov
sbb
mov
imul
in
ljmp
das
testb
lea
movsb
fbstp
xor
fildl
subb
or
mov
outsl
daa
and
test
push
xor
bound
add
add
jbe
fs
dec
iret
and
inc
fnstenv
sti
adc
dec
and
movsl
ror
jg
dec
mov
mov
jns
std
xchg
lahf
pushf
xlat
dec
dec
out
dec
rorl
mov
mov
cmp
pushf
dec
inc
std
in
pop
addr16
cmp
add
add
mov
cwtl
fisubs
mov
orb
jns
mov
fsts
xlat
stos
stc
sbb
imul
sarb
inc
add
jp
adc
mov
cmp
xchg
loopne
mov
insb
sti
fistl
jecxz
rcl
mov
add
add
lea
stos
mov
cli
lock
push
ss
xor
lods
push
and
das
cli
inc
cmp
test
daa
cld
popf
add
pop
xchg
pop
xchg
add
int3
aas
mov
adc
mov
adc
insb
aam
scas
push
repz
jmp
mov
push
adc
sahf
mov
or
jo
std
imul
mov
lahf
pop
mov
xor
hlt
cmp
mov
lret
sub
mov
mov
push
xchg
push
or
xchg
popa
shrl
loopne
daa
sub
movsb
xchg
jg
mov
inc
mov
call
loopne
sbb
add
xor
push
fcomi
aas
loope
stos
xchg
cs
xlat
and
push
aas
fwait
push
mov
xor
lcall
inc
mov
sub
inc
jo
mov
frstor
enter
ja
inc
pushf
stos
fdivl
adc
jno
sbb
pop
push
mov
add
add
imul
jnp
rcrb
xor
or
mov
sbb
jno
std
mov
sbb
pop
int
xchg
fcomi
in
fidivrl
pop
add
fiaddl
cmc
and
xor
xor
lret
dec
jle
stc
aaa
jmp
in
xchg
es
int
das
push
mov
mov
add
xchg
xlat
in
and
push
xchg
adc
add
add
ret
loope
loopne
pop
push
ss
and
mov
and
fbld
sub
xorl
xchg
ret
fbld
sub
mov
jnp
sbb
fdivrl
mov
nop
mov
and
shlb
rcll
out
jl
xor
pop
xchg
sbb
sub
in
sub
add
add
pusha
mov
inc
xorl
push
push
push
arpl
inc
pop
pop
fidivs
mov
int
adc
sub
cmpsl
popf
push
in
add
add
lds
push
enter
outsl
pop
loope
lret
outsl
in
xchg
dec
outsl
add
add
subl
nop
mov
outsb
sbb
popf
fcom
xchg
fbld
push
pushf
adc
test
imul
mov
sub
lods
and
and
test
aam
test
fsub
lods
mov
xchg
out
mov
mov
mov
lcall
ja
mov
adc
or
sbb
clc
push
bound
push
mov
lods
test
jo
cwtl
sbb
in
fisttpll
add
and
and
jo
std
inc
repnz
fnstenv
popf
inc
pop
cld
popa
loope
lds
movsb
fidivs
scas
ja
shrl
mov
cmc
mov
clc
insl
jo
push
ja
ds
mov
dec
lahf
popf
dec
xor
xchg
stos
add
xor
lea
loope
mov
xchg
dec
jmp
fcompl
in
push
cld
dec
mov
gs
sbb
mov
adc
es
push
adc
loop
out
aad
outsb
cltd
loopne
mov
push
jmp
ud2
outsl
cmp
aad
pop
xchg
mov
jb
ret
mov
dec
add
or
sbb
imul
mov
add
sbb
ds
cmpsl
sbb
enter
es
nop
lds
inc
jmp
sti
mov
cmpsl
stos
sbb
aaa
repz
jl
fs
dec
mov
cmpsb
and
sahf
mov
mov
inc
test
add
jmp
sub
add
mov
fs
mov
push
xchg
loope
in
xchg
push
mov
or
jle
lea
mov
fisttpll
ret
push
sub
sub
cltd
inc
out
mov
mov
sub
add
add
imul
mov
fdivl
or
insb
sub
lods
pop
push
dec
sbb
mov
xchg
xchg
cmp
icebp
inc
fcoml
mov
or
jns
test
mov
sub
and
test
clc
int
mov
jo
bswap
outsl
and
pop
bound
sbb
jecxz
and
dec
or
push
gs
repnz
inc
xchg
mov
mov
jo
sbb
inc
or
jae
xor
pop
mov
sarl
jl
js
int3
and
fs
cmp
sub
mov
jne
fwait
sbb
sarl
or
mov
add
add
xchg
adc
div
mov
out
movsl
mov
jns
xor
fcoml
lods
bound
and
and
and
cld
cmp
pushf
test
in
std
repz
inc
jo
mov
xchg
mov
add
add
jg
lods
adc
stc
out
adc
fs
frndint
rorl
popf
int
mov
add
add
test
jb
cmc
xchg
cmpsb
popa
mov
xchg
and
fbld
push
jns
adc
shl
cmp
add
iret
dec
mov
shrl
jnp
mov
inc
jnp
add
add
sub
jbe
inc
mov
ljmp
test
cmc
push
clc
dec
cmp
clc
outsl
xchg
scas
xchg
gs
and
inc
mov
cmp
int3
pop
mov
dec
mov
testb
das
cli
mov
mov
mov
cltd
or
mov
shlb
leave
pop
sub
lods
mov
repnz
out
test
addr16
loop
inc
xchg
test
imul
adc
inc
mov
jnp
arpl
pop
insl
mov
aaa
mul
pop
iret
adc
add
add
loope
sti
xor
knotb
mov
mov
ret
aam
pop
punpcklwd
cltd
dec
sbb
and
inc
pushf
mov
pop
cmp
lcall
xchg
cmc
mov
and
and
lret
jae
pop
pop
pop
ja
fxam
ret
in
es
dec
lods
mov
jo
cmpl
pop
nop
pop
insl
rol
into
pop
xchg
pop
lods
ljmp
cld
cld
loope
dec
mov
push
jb
mov
ret
cld
loopne
insw
cltd
fsts
sub
adc
jno
mov
sub
mov
int3
dec
ljmp
jnp
lahf
loope
pushf
call
jnp
idiv
ret
aad
add
mov
lcall
xor
xchg
mov
bound
in
movq
mov
and
cmc
dec
bound
add
add
add
mov
hlt
int3
cli
adc
jbe
sub
pop
xchg
cmp
out
sarl
mov
ja
cmp
mov
mov
lret
stc
jl
mov
int
jecxz
dec
lock
test
aam
dec
imul
push
pop
add
dec
pop
push
xchg
fs
pop
pop
aas
ret
mov
inc
xchg
jge
iret
inc
mov
in
lds
lcall
or
rcrl
fbld
pop
mov
ljmp
mov
cmpsl
mov
push
fwait
mull
stc
xlat
lcall
fmuls
pause
adc
xchg
clc
xor
cltd
push
fxch
outsl
xlat
jbe
cltd
and
in
jmp
and
and
sarl
pusha
sti
ret
and
aas
sbb
popl
lods
test
jg
mov
mov
into
ljmp
push
mov
pop
ss
mov
or
xlat
lahf
mov
aas
or
aas
xchg
shrl
xor
mov
gs
inc
push
mov
sub
repz
cmp
or
adcb
dec
dec
lods
cmp
cmp
jnp
scas
leave
inc
jl
stc
fwait
xor
jb
dec
and
mov
pushf
bound
rorl
cmp
lea
add
add
test
mov
and
sti
add
mov
jb
jb
mov
add
adc
hlt
iret
stc
dec
mov
nop
in
scas
cmp
cmp
or
xlat
pop
sbb
push
add
add
stc
push
shlb
add
cmp
pop
push
pop
push
ret
sbb
and
add
mov
dec
add
or
dec
dec
adc
inc
dec
popa
lods
sti
call
pop
bound
rcl
cmp
jle
je
das
adc
cmp
inc
int
mov
stos
mov
rorb
jae
mov
hlt
xor
mov
mov
pop
jno
test
push
cmp
mov
sub
sbb
int3
dec
mov
mov
ss
xchg
pushf
xor
or
into
aam
mov
adc
push
inc
daa
jo
fs
add
add
mov
arpl
mov
mov
and
mov
or
sub
push
add
fcomps
fiadds
fcos
sub
xor
jo
jb
inc
sti
fnstenv
divb
mov
inc
sub
fildll
cmpsl
mov
jo
cmp
lea
js
cmp
popa
or
inc
xchg
pop
pushf
dec
test
scas
mov
and
ljmp
ds
add
push
mov
add
add
mov
mov
stos
inc
mov
adc
aad
clc
or
pop
pop
adc
jne
insb
cli
inc
jp
std
out
inc
add
dec
cmpsb
pop
xchg
cli
jno
mov
addr16
lods
lret
add
add
inc
in
pop
gs
in
mov
test
lds
adc
add
add
add
gs
lahf
dec
daa
rcrl
jne
in
test
out
inc
pop
lea
or
pop
adc
sti
je
sub
add
add
fistl
cmp
jmp
loopne
pop
xchg
dec
and
or
mov
mov
divb
in
aaa
mov
popa
add
inc
ffreep
rorl
adc
and
cld
cli
push
fisubrs
pop
dec
dec
movsb
pop
mov
lock
enter
add
pop
jno
xlat
and
cmp
inc
cltd
incb
or
imul
cmp
xchg
add
lret
addr16
inc
into
loopne
test
xor
aaa
loopne
lret
and
add
lret
cmp
gs
sarl
mov
cmp
ljmp
add
sub
xchg
xchg
movsb
pop
cld
xor
sub
call
loop
add
add
rorb
in
jecxz
dec
push
jecxz,pt
cmp
stos
ret
test
sub
sub
pop
pop
pop
inc
cmpl
ret
sti
cs
mov
cmp
fstpl
gs
jae
js
and
sarb
repnz
add
add
xchg
push
gs
rcrb
add
mov
shll
int3
sub
aad
arpl
push
f2xm1
pop
pop
xchg
dec
sar
fcomi
sarl
add
xor
fnstenv
leave
cmp
push
in
lock
jecxz
mov
mov
adc
es
inc
or
and
and
sbb
and
xchg
movsl
push
aad
lret
mov
lock
faddl
xchg
aam
dec
inc
stc
popa
loop
sbb
sub
add
outsb
jecxz
ret
pop
arpl
test
push
cmp
inc
mov
not
sbb
cs
sub
add
add
mov
jge
fstps
jnp
inc
popa
ds
lods
mov
test
and
jo
sbb
ret
daa
leave
fnstenv
and
test
stc
xor
sub
dec
mov
rorb
test
clc
mov
sbb
jno
dec
dec
enter
rcr
inc
mov
insl
mov
fs
mov
es
out
pop
mov
notl
mov
push
sbb
adc
stos
add
jb
cmpb
outsl
popa
push
pop
dec
subl
sarl
add
lds
scas
bound
mov
bound
inc
mov
call
dec
outsl
xlat
outsb
sbb
rep
out
pop
cmp
repnz
pop
insl
movl
push
cmp
mov
cmc
ja
mov
mov
gs
in
cmp
fdivrl
cwtl
jp
int3
dec
ljmp
dec
gs
cmpsl
jno
mov
push
xorl
push
pusha
push
jns
fs
sbb
jge
stos
inc
sub
jmp
neg
or
mov
les
add
add
inc
ljmp
ds
mull
jbe
lea
mov
into
in
cs
jns
inc
imul
pop
push
or
fidivrl
les
cmp
inc
mov
push
add
or
or
addr16
inc
leave
dec
add
ret
jno
dec
cmp
mov
cmp
clc
je
sbb
sbb
inc
dec
inc
nop
call
sub
mov
fisubl
cmp
cwtl
jne
cmp
mulb
shr
xchg
mov
adc
jle
mov
dec
inc
int
jp
jno
pop
cld
pop
rorl
cmpl
hlt
mov
repz
add
lock
add
xor
pop
push
cltd
ss
jbe
mov
dec
mov
add
or
mov
ret
mov
inc
les
lock
dec
add
and
cwtl
or
xor
into
shl
sub
outsb
loope
jno
sub
jnp
mov
cmp
fcmove
cmpsb
xor
dec
pop
sarb
aas
jne
xor
inc
insl
mov
into
pop
push
push
and
xchg
fstl
nop
mov
fstpl
push
push
cmp
jae
test
sub
dec
fistpl
loope
ret
inc
addr16
fldcw
mov
outsb
adc
xor
js
outsb
sbb
scas
mov
or
rolb
pop
cmp
int3
decl
pusha
xchg
ds
sbb
xchg
repnz
popa
iret
jecxz
mov
xor
outsl
sti
push
inc
les
cwtl
loopne
dec
das
sub
push
mov
mov
mov
mov
mov
mov
lret
jle
loop
mov
and
dec
pop
nop
inc
sbb
cwtl
pushf
repnz
xchg
nop
push
push
cmp
adc
jp
push
dec
fldz
mov
mov
lcall
sbb
mov
add
add
add
lock
or
inc
push
dec
das
jns
jg
xchg
xchg
xchg
ds
adc
inc
cmp
jae
mov
xchg
clc
loope
mov
jle
fimuls
outsb
call
sbb
nop
call
jecxz
outsb
outsb
ret
xorb
mov
cmpsb
add
or
cli
mov
out
mov
xchg
xchg
clc
in
test
icebp
sub
jp
adc
into
jl
aaa
fsubrs
fstps
mov
movsl
cmpsb
xchg
decl
clc
sbb
jno
call
in
pop
hlt
or
dec
add
add
ret
add
clc
loopne
jecxz
mov
loopne
and
imull
or
lock
dec
push
repz
into
ljmp
or
fdivrs
inc
leave
dec
pop
gs
inc
mov
nop
lcall
cmc
sub
cld
mov
inc
inc
inc
cmp
xchg
scas
cs
ficomps
in
xchg
inc
mov
inc
mov
daa
sbb
xor
or
test
dec
xchg
call
imul
dec
test
push
idiv
xchg
mov
add
stos
pop
dec
in
pop
insl
lock
mov
xchg
dec
popa
mov
adc
cld
push
sbb
push
aaa
sbb
mov
dec
mov
in
jb
dec
dec
cmp
mov
nop
into
jb
les
or
mov
push
or
out
cli
push
add
daa
xchg
xchg
ljmp
fisubl
pop
mov
fs
divl
loop
jnp
das
xchg
pop
test
and
push
fwait
push
pop
and
and
sub
or
or
arpl
or
shlb
shll
in
mov
and
lret
jmp
jge
jp
in
mov
aam
jp
add
add
push
jecxz
imul
sbb
enter
call
xlat
bnd
enter
pop
lock
xchg
mov
add
add
or
mov
cltd
aam
sbb
ret
or
ds
sbb
rorb
pop
movsl
or
xchg
cli
icebp
add
and
cmp
imul
mov
mov
scas
mov
nop
sub
in
daa
test
sub
pop
das
pop
js
jle
mov
sti
imul
das
jge
lret
sbb
pushf
inc
mov
xor
andb
fwait
mov
insb
or
inc
lea
int3
not
xchg
test
sahf
and
mov
push
out
mov
cwtl
orl
sbb
call
lret
push
pop
xchg
mov
nop
mov
int3
mov
push
push
outsb
arpl
stc
jecxz
push
jge
mov
call
push
enter
add
iret
int
inc
cmc
in
cmp
loope
sbb
call
nop
add
paddq
loop
mov
pop
mov
push
lds
mov
in
xor
inc
hlt
mov
inc
mov
sbb
sub
adc
data16
lods
cmc
fs
ja
test
jecxz
jmp
cmp
bnd
arpl
xor
dec
mov
fwait
sub
int3
and
mov
and
and
leave
mov
mov
out
jge
xor
mov
hlt
lret
cld
jae
add
mov
jo
sub
movsb
ror
mov
jge
jb
dec
jge
pushf
dec
movsb
in
fistl
aas
andl
nop
decl
push
icebp
lods
iret
in
test
call
out
xor
push
movsb
adc
int
or
out
add
add
mov
or
stc
xchg
stc
dec
lods
jp
inc
add
add
mov
or
aas
mov
and
in
and
mov
repz
in
add
add
cmp
rolb
and
xchg
add
mov
jns
lret
cmp
xor
movsb
mov
int
jne
sub
push
inc
aas
add
outsl
xor
loop
movsb
cmp
aad
call
arpl
out
insb
pop
iret
mov
nop
call
jnp
ss
rcll
imul
sbb
cltd
data16
and
std
push
fists
scas
inc
std
xor
dec
roll
add
add
sarb
pop
mov
lcall
cmp
arpl
mov
mov
mov
inc
or
cmp
fstpl
mov
xchg
out
leave
cmp
cmp
gs
mov
leave
mov
dec
fcmove
sbb
jmp
movsb
ret
add
add
inc
pushf
imul
loope
std
test
adc
es
add
or
inc
cmp
xchg
ljmp
shrl
inc
fisttpll
and
pusha
repnz
lcall
ret
xor
sbb
jmp
call
mov
add
sbbb
mov
ljmp
bound
mov
imul
sub
xchg
mov
call
cs
adc
push
push
icebp
sbb
xchg
cmp
push
sbb
popf
adc
sub
aad
cmpsl
out
or
mov
jp
xchg
mov
imul
loopne
or
movsb
or
out
icebp
lds
add
aam
lahf
lcall
xchg
dec
rcll
data16
movsl
xchg
add
add
add
cmp
mov
leave
push
sub
sbb
dec
push
sbb
push
mov
mov
xchg
bound
repz
xchg
les
out
arpl
sbb
and
stc
lahf
sub
std
mov
movsl
dec
iret
mov
leave
mov
mov
mov
jne
sub
enter
outsb
sbb
ds
mov
leave
loopne
sbbl
loope
or
sbb
dec
inc
sbb
cmpsb
pop
xchg
lock
orl
scas
mov
mov
arpl
lahf
sub
bound
jmp
jge
mov
sti
mov
jae
sub
out
scas
pop
lods
push
bound
mov
test
ljmp
and
jmp
cmpl
jge
mov
add
lcall
mov
and
or
pop
pop
dec
mov
dec
repnz
xor
scas
loop
jl
dec
and
inc
mov
jb
lea
stos
aad
mov
mov
ret
adc
mov
and
fisubrl
mov
loopne
dec
clc
fcoms
pop
mov
mov
lcall
cmp
jbe
pushl
pushf
fmull
pop
clc
or
scas
in
jg
icebp
enter
cmpsl
xlat
mov
xchg
jnp
jp
int
sbb
cmp
add
add
sub
leave
sub
mov
adc
add
aad
enter
rcl
xchg
mov
clc
jl
add
call
lods
inc
jle
imul
arpl
jecxz
sbb
jo
sbb
roll
pop
out
ret
or
dec
mov
icebp
imul
adc
rcll
mov
jnp
mov
and
push
mov
sbbb
dec
inc
int
outsb
std
comiss
outsb
test
xchg
pushf
rdpmc
loope
mov
ficompl
in
add
repnz
cmp
imul
lcall
stos
jp
dec
xchg
or
shlb
mov
xchg
pop
lods
xchg
inc
jae
mov
fnstsw
andb
sbb
int
or
test
bsf
movsl
mov
mov
add
dec
jl
ret
mov
jo
iret
popl
sub
sub
mov
lods
enter
adc
inc
in
ds
xchg
rcrb
int
add
add
and
mov
in
push
pop
xchg
addb
cmp
or
nop
insl
movsb
or
dec
add
cltd
add
push
adc
int3
test
add
add
orl
push
nop
call
mov
in
cmp
xchg
pop
jmp
popa
inc
bound
cs
or
frndint
mov
clc
push
sub
sbb
gs
sti
xor
mov
scas
dec
repz
out
inc
cmpsl
ljmp
sti
mov
lock
jb
int
imul
sbb
lret
and
add
and
pop
adc
lods
lret
test
call
out
lock
leave
cli
lcall
dec
mov
imul
int3
dec
pop
aas
fwait
mov
mov
js
incb
nop
call
popf
mov
xor
push
gs
sbb
movl
or
out
fsubs
loop
sbb
pop
adc
lock
testl
or
int3
dec
fbld
andb
cmp
jecxz
xor
mov
dec
enter
dec
popf
loopne
push
imull
cld
cmp
mov
mov
adc
scas
and
inc
js
stos
insb
lret
xchg
xchg
jns
cmp
push
cli
cmp
mov
mov
add
add
les
aas
mov
sub
mov
xlat
pop
cmc
and
movb
std
xchg
outsb
orb
fcmovne
cmp
movsb
pop
scas
mov
fsubrl
sahf
adc
add
fstpl
cmp
jecxz
scas
lods
sub
add
add
cld
repnz
daa
xchg
mov
in
cmpsb
add
ljmp
cmpsl
mov
pusha
inc
dec
out
jl
jo
movsb
cmp
cld
lret
xorl
sub
rolb
cmpsl
mulb
jecxz
sbb
nop
call
scas
or
dec
lock
iret
jbe
xlat
jge
fs
or
xchg
xor
add
dec
add
adc
aam
xchg
test
add
stc
mov
testb
fsts
call
das
jnp
sti
lret
jb
gs
adc
add
add
scas
fsts
test
test
add
fsubr
fistps
lcall
xor
inc
inc
mov
mov
pop
lcall
movsb
or
dec
and
icebp
mov
and
mov
rcr
sahf
jg
inc
cmp
mov
cld
dec
add
jno
int3
and
and
add
pop
sarb
int3
mov
shl
popa
adc
icebp
enter
scas
pop
std
add
test
xchg
xor
pop
or
xchg
sbb
pusha
sbb
stos
addr16
push
aaa
aas
xchg
repnz
cs
ret
or
sbbl
and
add
imul
mov
sti
les
add
add
push
leave
test
push
push
xor
stos
es
mov
cwtl
dec
arpl
cmp
imul
in
jmp
cmp
mov
add
inc
cltd
inc
stos
in
in
mov
sbb
cwtl
dec
incl
lock
jb
ja
setl
adc
cwtl
shll
addr16
mov
add
sub
jg
imul
rcr
push
sub
mov
mul
out
std
sbb
imul
mov
and
jle
and
or
xor
mov
fwait
inc
mov
cmp
xchg
cmp
mov
ljmp
nop
call
xchg
xchg
pushf
fisttpll
or
repz
jb
mov
fcomps
sahf
adc
xchg
cld
call
or
mov
mov
ds
hlt
lret
inc
pop
mov
test
jecxz
mov
ret
dec
stos
sbb
pop
test
repnz
nop
call
jo
xchg
cld
sbb
icebp
mov
ficomps
xchg
mov
xor
add
out
ds
push
ds
lea
shl
clc
or
test
out
stos
or
pop
out
sbb
lods
addr16
xor
cmc
push
ljmp
lock
int
jb
xlat
scas
mov
add
add
xor
call
adc
inc
inc
lahf
cmp
mov
lds
rcrl
add
add
jecxz
sbb
rcl
xor
xor
and
mov
lcall
lock
lahf
inc
cld
stos
cmp
push
push
repnz
jne
stc
sub
flds
cltd
adc
xchg
push
stos
out
int3
dec
out
rclb
and
lds
inc
and
and
clc
lods
orl
mov
pop
cli
push
push
out
aaa
adc
outsl
sbb
pop
outsl
cmp
clc
push
pop
adc
mov
int
inc
xor
out
lea
lock
jge
xlat
sti
movsb
xchg
lcall
push
pop
mov
ja
sbb
add
add
mov
lods
cmpsl
std
cmpsl
jmp
push
inc
lret
xchg
push
inc
dec
lods
sub
iret
xchg
test
imul
in
lcall
and
dec
adc
mov
ja
jl
or
sarl
arpl
xchg
ds
jbe
mov
dec
pushl
cwtl
fmull
mov
out
js
push
or
lods
pop
xchg
or
andl
sub
cmpsl
lds
inc
les
clc
xchg
lret
fucom
inc
fldt
cltd
test
enter
mov
frstor
in
into
adc
jmp
pop
aas
sbb
add
loope
mov
jno
popa
cs
dec
inc
jae
mov
daa
jp
lahf
or
shlb
adc
adc
cltd
or
lret
and
cmpsl
or
pop
std
and
cltd
mov
mov
mov
test
or
sub
sbb
xchg
mov
shrb
cs
xchg
mov
lcall
add
stos
fisttpl
movsl
out
xlat
xor
sub
test
mov
xchg
xlat
leave
mov
mov
push
and
xor
pop
sti
adc
xchg
inc
or
xchg
inc
xor
scas
or
inc
test
fimull
push
in
sbb
add
call
jecxz
in
in
add
ret
lods
push
enter
lea
sub
push
movl
nop
call
sbb
sbb
mov
div
mov
rorl
fcmovnbe
xchg
sti
pop
xchg
dec
xchg
aam
xchg
dec
out
adc
push
xor
inc
jo
and
inc
sub
fstp
scas
xorb
movsb
add
and
outsl
push
jo
aad
add
add
repz
push
fildl
popf
and
adc
and
mov
and
and
mov
adc
xchg
insb
push
xchg
fisubrs
int
sti
mov
xchg
jne
push
dec
push
and
adc
mov
mov
jno
push
sbb
nopl
xchg
out
cmp
jae
sahf
push
push
or
stc
pop
pop
pusha
js
rcll
stc
dec
sbb
dec
add
add
add
imul
sub
sbb
pop
mov
rol
lea
fsubl
pop
sbb
xchg
aaa
sarl
xchg
outsl
add
imul
movsbl
fcmovnu
inc
add
add
enter
int
std
push
into
add
andl
mov
insl
lods
xchg
clc
and
push
cmpsl
mov
gs
mov
in
gs
cltd
pop
mov
leave
add
jge
sub
adc
lcall
and
cltd
or
and
cld
stos
fimull
pop
sub
lret
dec
dec
testb
cli
xor
or
sbb
lods
pop
or
out
lcall
pushaw
loop
test
int3
xor
mov
test
add
fists
xlat
in
fistps
xchg
inc
dec
dec
jmp
roll
push
incl
pop
fs
adc
push
pop
cwtl
stos
xchg
out
mov
jecxz
dec
xlat
pop
aad
xchg
sub
xchg
or
movsb
adc
push
cmp
pop
rcll
mov
mov
mov
jp
out
adc
loopne
xor
xchg
loop
nop
call
mov
cld
js
adc
gs
jp
aam
pop
mov
in
xlat
pusha
shrb
xchg
xchg
sahf
repz
cltd
and
fisubrs
pop
ds
dec
add
pop
pop
scas
pop
xorl
add
add
add
loopne
insl
push
lds
add
inc
repz
jnp
xor
sub
push
add
loope
mov
lods
xor
pop
faddp
push
ret
or
add
add
add
je
sbb
loope
lret
lea
cmp
xchg
jo
int
add
aas
mov
xchg
sub
xchg
xor
fadds
mov
cmpsl
cmpsl
ds
dec
adc
mov
xchg
ljmp
aaa
imul
nop
call
mov
mov
imul
mov
adc
ljmp
bound
cltd
xchg
out
mov
or
xor
add
xor
rcr
in
mov
lock
mov
jmp
add
add
lock
or
inc
mov
xchg
pop
daa
add
shrb
sahf
out
xor
dec
jnp
push
call
insl
inc
or
scas
or
icebp
inc
jo
notb
mov
ret
jb
jl
popa
xchg
dec
pop
in
jmp
sub
push
outsl
or
int3
push
test
jne
and
pop
inc
jg
popa
mov
push
lods
iret
mov
ljmp
mov
sbb
jo
jae
mov
mov
xchg
or
mov
add
lds
lods
imul
push
inc
cmp
fists
addr16
test
cmp
sub
sub
in
in
jne
imul
sarl
in
cli
cmp
sarb
scas
ja
cmpl
xchg
cmp
loope
rcrb
movsl
cwtl
add
add
movsl
je
push
in
push
dec
outsl
movsb
mov
mov
mov
gs
xchg
mov
test
mov
add
pop
test
dec
inc
xor
ret
and
mov
adc
loopne
jge
lds
int3
and
scas
mov
and
xor
or
pop
cwtl
xchg
fldcw
xor
xor
dec
repnz
xor
aas
inc
imul
cmp
jmp
sarb
in
sti
push
imul
and
and
dec
and
inc
ljmp
mov
cmpsb
ja
mov
nop
call
pushl
mov
or
aad
xor
les
ja
fsincos
push
arpl
push
call
js
movb
pushf
add
xchg
mov
js
or
adc
xor
je
loopne
pop
aaa
jge
fisttpl
sub
ss
in
cmpsb
add
cmp
int3
and
dec
jl
mov
in
lcall
xor
add
sbbb
adc
push
lret
add
add
pusha
fwait
inc
xchg
and
xor
adc
sub
or
sbb
mov
and
jne
mull
int3
and
sbb
inc
stos
sub
outsb
ds
inc
rol
dec
add
out
in
jg
nop
mov
aad
dec
xchg
sub
shll
mov
jno
stc
pop
push
jg
push
pusha
test
aam
and
and
or
mov
or
dec
test
mov
push
fcoml
out
shlb
loop
xchg
bound
das
ss
movsb
mov
or
je
movsb
xchg
inc
imul
mov
lret
pop
daa
lods
pop
and
push
inc
mov
orl
call
pop
in
xlat
cltd
mov
mov
cmc
sbb
loopne
popa
or
mov
push
push
movsl
inc
icebp
xlat
cmc
iret
adc
sub
xor
jnp
push
xchg
cwtl
mov
icebp
adcb
in
mov
jp
and
lea
add
add
int
mov
add
sbb
std
mov
shrl
je
arpl
add
pop
jl
mov
or
pop
xor
test
cmpsb
lret
sub
jl
mov
int3
dec
cmp
loope
mov
adcb
sbb
shr
cmp
lods
fistpl
mov
pop
mov
pop
pushf
add
add
sbb
addb
outsb
dec
mov
test
add
out
mov
loope
push
mov
add
add
sbb
scas
mov
inc
sahf
push
jmp
test
push
add
xchg
sahf
push
dec
fwait
int3
insb
mov
push
pop
xchg
inc
shl
push
scas
dec
mov
xchg
pop
and
mov
leave
add
in
int3
bound
xchg
fildll
pop
add
add
add
repnz
jnp
in
xor
mov
mov
das
cmp
add
cmp
subl
mov
add
add
push
or
adc
test
mov
pop
sbb
jno
inc
adc
in
pushf
xchg
inc
xlat
sahf
dec
mov
inc
nop
outsb
dec
adc
nop
addb
cmpsb
int
test
lret
pusha
mov
sbb
jmp
push
xor
add
add
adc
and
fsubp
mov
pop
hlt
push
call
je
stc
scas
aas
inc
rcll
lahf
dec
xchg
dec
fisubs
pop
jae
pushf
ret
aam
pop
mov
cltd
mov
pusha
jnp
cmp
lcall
push
pushf
and
popa
dec
or
add
add
jecxz
cmp
daa
lods
psrlq
int3
and
jb
jl
jo
or
enter
int3
jmp
jns
cmp
cli
sbb
mov
mov
mov
imul
jp
sbb
pop
mov
out
adc
mov
push
inc
mov
cmp
je
bound
iret
mov
movsb
add
add
dec
imul
iret
leave
fld
mov
rcrl
fisubl
and
lds
sahf
jo
outsb
pop
in
out
and
adc
int3
test
dec
dec
jge
add
rorl
out
enter
std
pusha
and
inc
xor
pushf
and
shlb
dec
sbb
test
dec
hlt
push
call
fldenv
cld
into
cmp
andb
and
and
sub
pop
out
sbb
das
nop
imul
pusha
jne
add
cmp
lods
push
mov
sub
jecxz
mov
lods
jne
add
test
inc
fnstenv
int
or
imul
int3
ljmp
andl
push
cld
add
xchg
xchg
push
rorb
dec
in
pop
and
movsb
pop
imull
cmp
or
in
dec
negl
mov
stc
movsb
sbb
pop
leave
cmc
movsl
ss
mov
sbb
cmp
imul
dec
jmp
xchg
inc
sbb
push
sub
lret
dec
add
stc
dec
inc
fstpt
mov
mov
mov
xchg
mov
daa
repnz
mov
pop
out
dec
push
mov
add
add
add
cmp
dec
or
call
adc
pop
inc
iret
and
test
divb
dec
decl
xchg
insb
and
xor
movsb
cmp
pop
js
sarl
int3
dec
call
orl
pop
movsb
les
mov
push
ret
mov
dec
cmc
into
or
pop
xchg
fucomip
ljmp
sub
mov
andl
aas
out
fcmovnbe
pop
in
inc
icebp
clc
push
dec
mov
test
push
xchg
outsl
insb
cmp
xchg
push
testb
add
loope
mov
xchg
into
out
sbb
jnp
loop
movsl
mov
cld
mov
mov
sarb
add
add
add
fldenv
scas
dec
test
insb
xor
les
test
adc
ret
xor
add
add
andl
in
xor
pop
faddl
inc
pop
loop
mov
sub
xchg
inc
ds
les
or
cmp
call
adc
push
popf
lret
sub
ljmp
dec
cmpsl
or
cvtpi2ps
scas
xlat
in
in
aaa
mov
sub
pop
fnstsw
dec
cmp
test
mov
jns
test
dec
int
mov
je
movsl
movsl
dec
roll
xchg
mov
jns
ret
sbb
cmp
jg
adc
and
and
mov
std
outsw
pop
outsb
sbb
xorb
int
xchg
xor
mov
aad
es
add
push
adc
out
mov
inc
mov
inc
xor
movsl
out
in
push
mov
es
aam
stos
jae
loope
jns
flds
add
add
arpl
dec
pop
repz
mov
pop
mov
fs
sbb
les
les
mov
daa
xchg
xor
or
out
cwtl
imul
jae
and
add
mov
mov
sarl
mov
scas
push
scas
sub
cmp
lcall
outsl
adc
jmp
add
xchg
divb
sti
hlt
pusha
sbb
test
mov
int3
dec
cmp
mov
sbb
clc
sbb
cmp
dec
sbb
push
pop
pop
push
roll
mov
movb
mov
add
loopne
test
sbb
popf
dec
add
es
stos
mov
or
jecxz
aam
lods
cli
pushf
xor
sbb
push
stos
movhps
cwtl
push
out
add
add
xlat
data16
mov
stos
adc
xor
xchg
clc
lcall
or
aad
dec
dec
movsb
sub
outsb
adc
mov
pop
pop
xor
push
arpl
dec
std
ret
lret
leave
in
ss
rcll
sub
repz
add
aam
inc
jmp
sub
mov
add
add
ja
daa
xor
js
and
push
mov
cmp
repnz
inc
inc
lcall
push
or
inc
pinsrw
into
bound
inc
sbb
mov
inc
dec
sub
test
out
push
mov
aaa
fimull
dec
jmp
mov
sbb
adc
push
cltd
into
test
push
sti
orb
loopne
and
push
andl
adc
ret
xor
ja
mov
add
stos
lret
add
jae
clc
stos
aad
test
lahf
jp
ds
add
add
xor
inc
sbb
jle
out
sub
lcall
popf
mov
and
and
add
jge
mov
pop
push
dec
in
inc
mov
lods
or
movsl
jns
leave
add
sub
std
dec
loopne
add
add
add
mov
sub
push
sbb
sbb
outsl
xor
scas
ficoml
mov
cmp
mov
or
pop
into
pushf
mov
add
add
and
push
sbb
shlb
mov
int3
and
sub
mov
ljmp
inc
xchg
test
dec
rcrb
push
clc
dec
popf
stos
xor
push
arpl
jns
cli
data16
push
add
xchg
repz
pop
popl
cmp
xorb
jg
inc
sub
mov
cmp
lds
int3
and
lret
adc
and
mov
ja
mov
mov
sbb
popa
cmpsb
sbb
arpl
data16
xor
paddusb
aam
dec
in
sub
movsb
sbb
mov
add
data16
repnz
pop
adc
fmull
inc
xor
lea
xchg
nop
call
dec
or
outsl
fsubl
cmpsb
xor
aas
test
fists
cmp
or
mov
lods
lods
sahf
clc
js
stc
popa
jno
imul
roll
les
pop
and
and
xchg
loop
or
push
ljmp
and
and
lods
fidivs
and
add
jnp
adcl
and
adc
mov
mov
sbb
cld
xchg
adc
scas
jle
and
inc
dec
xchg
out
mov
shr
mov
xchg
jp
adc
ret
push
mov
lods
insb
stos
iret
add
add
loope
push
pop
scas
cmp
xchg
cmpsb
pop
adcl
call
and
push
xchg
jmp
mov
sbb
pop
jno
dec
cli
loopne
sub
data16
add
add
or
or
xchg
jno
ficompl
dec
xor
mov
aas
inc
insb
adc
rcr
and
push
dec
addl
daa
lea
popf
rclb
movsl
xchg
mov
push
lret
bound
mov
cmc
dec
sahf
outsl
mov
mov
out
cltd
jmp
xchg
sbb
repz
jmp
cmp
int3
aad
inc
mov
gs
push
fistpll
xchg
dec
add
add
movsb
outsb
dec
sbb
test
sahf
ficompl
popa
popf
loopne
incb
std
cmc
sahf
jno
imul
mov
adc
xlat
sub
xchg
add
gs
ljmp
dec
testb
lock
pusha
nop
call
jae,pt
flds
jp
xor
jns
jae
insb
inc
mov
orl
call
daa
test
pop
xchg
push
lret
push
stos
lods
add
mov
add
aad
jne
xchg
adc
mov
push
adc
xor
mov
inc
sub
fistl
and
daa
sub
sarl
out
mov
jp
out
and
jo
push
sbb
aam
aad
xchg
or
mov
stc
pushf
int3
rcll
sbb
cs
data16
aas
push
outsl
lahf
pop
in
in
pop
inc
pop
popf
arpl
lret
popf
es
hlt
sbb
dec
cmp
pop
mov
lds
add
add
jns
add
lock
mov
arpl
jmp
dec
mov
jne
sbb
and
adc
in
add
add
xchg
mov
pop
addr16
test
jecxz
enter
sbb
lcall
imulb
popf
fadd
std
out
and
shlb
mov
icebp
xorl
dec
cmpsb
cmp
call
jns
inc
xchg
add
or
mov
and
push
fidivs
loope
into
test
sbb
add
or
mov
mov
adc
shrl
mov
cmp
mov
out
lea
pushf
inc
adc
test
test
outsb
scas
in
dec
or
lods
cmpsl
push
pop
clc
push
xchg
scas
mov
sahf
xchg
pop
les
inc
andl
inc
cli
and
or
inc
ret
fcomps
adc
push
test
add
add
loope
cmc
ss
xchg
lahf
iret
and
lock
and
aaa
in
and
inc
add
xchg
jmp
insl
push
cmp
scas
cld
ror
leave
aam
insb
fisubrl
shrb
add
xchg
in
out
flds
and
int3
and
and
lods
into
mov
dec
in
xor
into
xchg
sbb
mov
push
clc
stos
insl
inc
ss
cmpsb
jg
imul
add
xorb
push
popa
xchg
das
int3
dec
pushl
inc
jg
push
push
xor
call
jge
push
and
daa
leave
jle
cld
verw
pop
inc
sbb
mov
hlt
cmp
and
push
fbstp
jle
out
pusha
fiadds
push
clc
popf
fbld
gs
orb
test
stos
das
in
test
push
std
add
inc
arpl
mov
addr16
daa
or
xchg
pop
addl
jno
and
fisttpll
sub
jl
in
lods
stos
out
jbe
lock
jb
shrb
mov
out
andl
add
add
int
mov
loopne
push
xchg
inc
jmp
inc
cltd
push
dec
and
and
add
adc
mov
or
push
leave
add
or
je
dec
sbb
add
add
add
jmp
scas
adc
jg
cmp
shlb
cmp
cmp
cwtl
xor
inc
dec
lahf
inc
in
mov
mov
mov
pop
mov
dec
fs
fs
dec
lds
xchg
push
mov
mov
cmc
pop
cmpsl
pop
mov
in
add
add
sbb
cmp
es
mov
sub
jecxz
dec
mov
gs
repz
test
inc
sbb
mov
jg
das
or
js
arpl
add
jns
lds
loop
orl
pop
dec
int
mov
sti
loopne
adc
adc
push
movsb
xchg
out
mov
adc
mov
xchg
fcoml
notb
das
out
lcall
add
add
mov
movsl
sahf
cmp
fdivs
pusha
aaa
xor
sub
aas
jecxz
sbb
mov
push
or
into
in
rcrl
popf
dec
enter
aam
out
mov
sbb
addb
cwtl
mov
mov
jns
and
shll
and
pop
rorb
test
aaa
insb
mov
loope
and
jmp
pop
aaa
and
add
push
insl
jbe
jecxz
fs
sbbl
int3
aas
adc
cli
xor
ljmp
roll
sahf
cmpsb
push
mov
cltd
dec
loope
jg
cmpsl
repz
aam
adc
int
enter
lods
test
inc
popl
fwait
add
nop
call
repnz
xchg
pop
xor
mov
hlt
repnz
mov
xchg
sbb
popf
jns
out
js
lret
out
lods
mov
sbb
add
jno
sub
adc
inc
cmp
or
scas
ret
rol
xchg
test
orl
jge
lock
sub
mov
pop
jbe
dec
sbb
imul
imull
shr
dec
dec
fdivrs
aas
aam
aaa
xchg
adc
mov
mov
into
inc
and
and
sbb
mov
scas
and
and
inc
iret
mov
add
std
inc
aad
in
xchg
shll
inc
dec
and
mov
mov
add
add
or
xchg
int3
and
xor
lea
rolb
mov
iretw
test
outsb
push
iret
and
xor
movsb
xor
inc
cmc
mov
repnz
dec
movsb
das
fsubrs
mov
inc
add
xchg
icebp
and
int3
dec
loope
lahf
sub
xchg
stos
clc
cli
sbb
adc
das
aas
mov
mov
scas
out
jbe
cld
dec
sub
mov
dec
ficoms
test
insl
les
add
add
xchg
jae
jl
shl
sar
xchg
xor
pop
movsl
cmp
mov
inc
adc
in
xlat
cs
or
or
pusha
div
jbe
lea
imul
addl
dec
jmp
or
jb
in
test
call
pop
inc
lods
test
pop
add
js
lods
fstps
push
or
clc
lods
dec
shrl
sbb
cmp
mov
fbld
cmpsl
in
jp
cmp
sub
pop
shll
cmp
jmp
lcall
nop
add
jmp
lcall
test
insl
ret
adc
xor
add
fidivs
cltd
xor
mov
add
loopne
pop
cmp
fucomp
stc
repz
fldl
jnp
or
add
js
ljmp
aam
addr16
es
adc
push
outsb
or
mov
dec
dec
lret
fsubrs
jns
decb
cs
mov
adc
int3
lcall
xor
test
xchg
repz
ljmp
push
loope
cmp
ja
mov
aas
mov
xor
sub
scas
mov
push
dec
cmp
dec
out
testb
add
add
fwait
push
xor
mov
test
icebp
loopne
rorl
xchg
adc
jb
pop
sub
in
imull
insb
inc
imul
adc
xchg
sbb
push
dec
aaa
jbe
ret
dec
pop
rcrl
mov
push
sahf
sub
inc
lret
shrb
pusha
adc
lret
adc
pop
dec
dec
mov
add
mov
jecxz
fwait
add
mov
int3
mov
clc
mov
push
repz
orl
int3
dec
iret
les
add
cmp
sbb
sbb
pop
xor
mov
pop
shrw
lds
push
repz
ds
jnp
push
add
data16
xchg
call
jno
stos
fwait
lods
out
pop
pusha
pop
xchg
mov
movsl
add
loopne
fmull
inc
pop
mov
mov
jb
repnz
pushl
aas
popa
loop
int3
and
and
cmp
push
and
mov
gs
jg
mov
fucomi
call
cmp
or
or
fldcw
std
and
mov
insb
incb
clc
and
dec
pop
mov
call
aam
xchg
jecxz
add
xchg
hlt
out
pop
add
push
lret
stos
add
xor
pop
out
pop
rclb
leave
aad
add
rorl
int3
mov
jno
mov
pusha
adc
fmuls
cmp
add
add
add
xor
arpl
fmul
sbb
mov
push
mov
sbb
sub
mov
mov
sbb
xor
dec
mov
aas
pop
cld
aad
std
pusha
mov
pop
and
pop
xor
xlat
pop
test
cld
sub
filds
scas
inc
pop
stos
int3
add
call
test
shl
dec
subl
cs
xchg
xlat
push
jns
add
push
std
jnp
push
sub
cli
aaa
sub
gs
cmp
pop
dec
out
dec
add
add
ss
lahf
adc
push
sub
jb
fwait
lcall
shrb
jne
add
cmp
xchg
call
cld
cmpsl
push
add
movsb
into
jb
loope
dec
out
in
push
and
pushf
rcr
add
push
sub
mov
int3
dec
std
ret
js
add
xor
int3
dec
sub
pop
mov
xchg
std
inc
jo
or
fisubrs
rolb
sbb
mov
nop
lcall
imul
cli
xchg
lahf
jecxz
jmp
mov
dec
mov
in
dec
push
mov
pop
enter
and
and
and
lahf
jp
pop
xor
push
mov
pop
mov
sub
shr
aad
int3
and
dec
xchg
xchg
scas
jl
and
mov
pop
jae
jnp
mov
jmp
and
mov
fldt
aaa
sub
xor
daa
aaa
stc
cmpsb
iret
cmpsl
sar
int3
dec
incl
pop
out
movsl
adc
test
ljmp
jae
dec
loope
dec
mov
ja
jne
movsl
inc
pop
aas
roll
cmp
xchg
cmp
add
enter
leave
xor
es
add
scas
and
pushl
mov
push
dec
dec
sbb
in
ja
cwtl
pop
add
ljmp
ss
fwait
popa
add
aas
rcrb
inc
add
jmp
sub
sbb
test
stos
out
push
shlb
add
and
fsts
dec
dec
out
lret
loop
sbb
jg
cwtl
or
xor
test
pop
jecxz
loopne
mov
pop
xor
aad
mov
hlt
stc
xchg
js
mov
loop
cli
pop
mov
mov
lret
pop
cmc
pop
sar
sub
ja
jmp
mov
sbb
lcall
data16
inc
stos
ljmp
push
lahf
lds
pop
lahf
mov
sbb
jno
je
in
push
jecxz
jmp
mov
lods
pop
xor
mov
jbe
dec
jns
bound
rcrb
nop
call
xchg
outsl
repnz
jmp
ret
ret
add
and
pop
mov
sub
push
scas
push
inc
inc
incl
and
movsb
xor
sbb
or
adcl
adc
imul
push
pop
push
lds
xor
nop
call
pop
rorb
jo
pushf
dec
lds
push
push
adc
cmp
int3
inc
mov
mov
add
cmpsl
insl
dec
lcall
insl
dec
rolb
jmp
nop
repnz
in
jg
inc
push
data16
add
add
add
dec
xchg
nop
jmp
and
testl
jge
cmpsb
xlat
ss
adc
out
test
push
in
icebp
and
call
push
add
mov
push
add
pusha
mov
bound
aad
and
and
jmp
out
mov
dec
mov
fstps
bound
or
adc
ds
jne
rorl
scas
sahf
lahf
inc
mov
out
add
iret
xlat
mov
push
sbb
xlat
icebp
scas
into
or
xchg
xchg
inc
out
outsb
cmp
push
mov
push
inc
mov
pop
inc
push
and
push
call
pop
jb
cmp
push
push
xorl
xchg
mov
jp
sub
dec
dec
jmp
mov
inc
pop
pop
arpl
dec
leave
dec
mov
sbb
in
pop
jno
mov
mov
inc
and
ret
and
imul
xor
inc
mov
int
dec
and
test
mov
xor
adc
add
add
add
int3
xor
add
cwtl
nopl
aam
jae
cmp
int3
dec
cmp
bound
aas
fbld
jbe
mov
jno
std
lcall
adc
call
stos
imul
cli
hlt
scas
pop
pop
cltd
lahf
cltd
mov
bound
mov
dec
loopne
sub
and
call
pop
mov
ja
hlt
or
fldl
inc
repz
cmpsl
push
fwait
inc
cmpsb
imul
push
xchg
or
in
mov
xchg
xlat
insl
lret
and
push
div
pop
idivb
adc
das
jb
sahf
pop
adc
cmp
pop
arpl
rcll
xchg
sub
cmp
mov
out
cmpsl
rorb
test
inc
mov
outsl
hlt
xchg
xor
aam
or
idivl
sbb
push
pop
stos
xor
add
add
push
mov
int
pop
out
inc
dec
fadd
popa
popf
push
add
test
int3
dec
fs
mov
subb
mov
cmp
nop
arpl
int
add
dec
mov
movsl
dec
loope
sbb
jo
and
xchg
xor
push
sbb
mov
ljmp
int3
rorb
pushf
sub
andl
lret
imul
jge
pop
xlat
ret
inc
cmp
jo
add
out
adc
cltd
jge
filds
call
add
add
mov
outsb
in
xlat
jns
movzwl
jp
out
jmp
mov
add
sub
push
mov
cmc
dec
or
mov
inc
jp
xor
add
adc
aas
dec
xchg
push
pusha
adc
add
add
f2xm1
test
pop
in
pop
in
out
mul
dec
push
jbe
jge
mov
cmc
ja
pop
jp
jno
cs
mov
in
std
add
dec
imul
push
fnsave
out
and
and
and
xor
fcompl
lods
sub
hlt
test
add
pop
shr
inc
push
add
push
je
sub
insl
int
pushf
cmpsb
mov
sti
inc
in
lahf
aaa
mov
mov
mov
cwtl
mov
jns
outsb
iret
inc
xchg
pop
add
dec
clc
stos
repnz
stos
popf
inc
xchg
pop
cmpsl
add
cmp
sbb
stos
lods
fildl
cli
or
add
add
add
cmp
jbe
movsb
int
jns
inc
shlb
or
lods
push
inc
mov
add
dec
cmp
repz
pop
inc
mov
fbld
cld
incb
mov
pusha
test
cli
mov
push
scas
xchg
xchg
popf
xchg
push
mov
jl
sub
and
and
add
add
xchg
ds
ja
pop
add
daa
movsbl
sahf
xlat
rcrl
push
mov
dec
mov
xchg
loopne
je
mov
mov
cmpsl
negl
mov
sub
cmp
gs
adc
sarb
shr
inc
test
lock
imul
dec
std
out
pop
push
and
and
in
pop
stos
jge
clc
add
roll
ret
enter
mov
jne
roll
dec
push
mov
sub
cmp
mov
mov
cmpsb
mov
push
lret
xrelease
xchg
in
adc
add
add
pop
pop
sub
or
push
leave
adc
mov
sbbb
inc
or
jl
out
jo
call
cltd
xor
cmp
mov
pop
stc
mov
jg
push
clc
lcall
inc
jg
push
popa
sub
mov
scas
xchg
or
nop
aas
or
call
and
jmp
nop
call
test
mov
mov
jg
pop
pop
movsb
jno
add
sbb
push
push
in
cmp
pop
adcl
push
xlat
jecxz
mov
test
fcmovne
ds
ss
dec
add
sbbb
xchg
xchg
jne
cmpsl
jp
jge
sahf
sbb
xchg
push
cmpsl
dec
dec
cmpsb
sub
test
cmp
cs
mov
add
stos
pop
xchg
xor
lcall
sti
cs
mov
je
stos
in
in
fs
or
pushf
lods
pop
add
add
add
int3
bnd
pop
ret
mov
fisubrs
lods
jmp
cmpsl
imul
std
movl
ljmp
ret
pushf
aad
mov
jecxz
lret
inc
in
in
test
cmp
cmp
imul
mov
ljmp
and
sbb
or
add
fbstp
lcall
dec
dec
jmp
loope
or
ljmp
pop
pushf
dec
pop
cmp
int
rcr
lahf
call
test
int3
addb
sub
cmp
add
rsm
and
ret
jnp
xlat
pop
pop
fisttpll
fisttps
and
fyl2xp1
gs
fneni(8087
movsb
out
rcll
add
psllw
jne
sub
sbb
in
or
out
dec
clc
leave
adc
push
out
mov
dec
or
shll
out
test
sahf
out
lock
add
add
jmp
ljmp
rcrl
xchg
sub
ljmpw
inc
and
adc
js
pop
push
xor
arpl
nop
inc
mov
push
into
push
cmpb
jnp
dec
pop
or
test
xchg
imul
or
ds
cmpsl
imulb
pop
or
add
add
or
pushf
mov
imul
das
ljmp
mov
xchg
xchg
rorl
dec
jl
aad
fsubl
out
cmc
xorb
xor
aad
arpl
jns
repz
stc
xchg
push
mov
mov
cmp
out
cmc
mov
adc
lahf
sahf
add
imul
mov
xchg
cwtl
jns
or
mov
int
fstpt
cmp
xchg
cmp
inc
jge
or
or
cmp
jbe
lea
push
arpl
jmp
mov
in
and
lret
cmpb
pop
and
dec
call
xchg
lahf
cmc
enter
roll
or
jbe
jo
xchg
pop
dec
mov
fcoml
mov
mov
les
rol
dec
mov
or
sub
add
add
add
pop
lea
jo
jno
sub
orb
fmuls
sbb
pop
repz
mov
outsb
in
dec
pop
mov
xchg
sahf
mov
add
ss
xor
push
mov
add
sub
js
aam
movsb
subb
shll
fsubr
sub
les
push
inc
jg
add
add
jle
sti
sbbl
xchg
mov
mov
sub
add
mov
fwait
cmpsb
mov
jecxz
mov
jecxz
ljmp
adc
dec
cltd
inc
mov
imul
fsubr
inc
pushf
dec
mov
pop
xchg
and
dec
clc
addr16
movl
jp
or
pop
sub
repz
leave
je
mov
sub
lret
mov
lods
jecxz
jnp
adc
enter
push
out
daa
notb
into
mov
and
ror
out
dec
rclb
or
pop
mov
popa
mov
mov
nop
xor
fyl2xp1
lret
ja
hlt
jo
cmp
add
pop
cmp
insb
xchg
or
mov
int
out
jl
cmpsb
leave
cmp
bound
sub
test
cmp
data16
jmp
test
pop
data16
imul
lods
out
dec
and
sbb
in
xchg
pop
ror
mov
xor
dec
mov
mov
xor
or
pop
testl
loopne
hlt
clc
pop
mov
jns
xor
mov
movsb
mov
sti
mov
dec
rol
mov
mov
out
iret
dec
add
jb
mov
scas
mov
inc
mov
xchg
push
stos
out
nop
loop
int3
and
and
sub
cmpsb
lahf
mov
pop
lds
push
add
cli
pop
lcall
jb
jbe
popf
mov
sbb
xchg
stc
dec
dec
lcall
test
adc
or
js
pop
xchg
fwait
add
xchg
scas
out
or
dec
jnp
xchg
lods
add
push
lods
jle
lea
jno
jecxz
pop
movsl
lret
fsts
xor
mov
jno
enter
push
rcrl
lds
add
add
stos
daa
cld
lret
mov
scas
gs
outsb
push
lods
imul
sahf
xorb
cs
ds
je
xorb
cs
pop
sub
xchg
push
sub
mov
add
mov
push
mov
xchg
popa
movsb
imul
fsubl
shlb
mov
mov
pop
sahf
mov
xor
incl
add
add
mov
pushf
jl
xor
sub
or
xor
mov
adc
insb
push
sub
or
out
loopne
jmp
or
mov
nop
call
test
xchg
sar
aad
insl
mov
dec
xor
pop
mov
cwtl
or
mov
dec
or
jne
jmp
andb
lds
int3
incl
jle
add
stos
and
shll
aas
into
adc
out
dec
push
pushf
cld
lret
cmc
icebp
iret
test
stos
jno
mov
mov
pop
out
mov
sarb
mov
add
lock
push
test
int3
dec
lcall
dec
adc
cmp
incl
pop
and
sar
cwtl
imul
push
mov
adc
out
and
dec
dec
jl
loope
or
in
aam
sbb
xchg
sbb
dec
pop
fimull
andb
jne
push
ret
lret
out
dec
dec
push
movsl
dec
pop
das
outsb
and
fwait
jp
sbb
or
xchg
fs
lds
push
xor
mov
jle
sub
loop
xor
add
mov
jo
nop
call
sbb
ja
je
cmp
mov
xchg
mov
mov
in
pop
jl
jge
aaa
cmpsl
lock
loope
jo
or
cld
sub
and
repnz
stc
out
inc
push
gs
xchg
mov
or
push
pop
fsubr
inc
je
ds
rol
jb
add
nop
jge
and
mov
pop
pusha
jne
sbb
mov
pop
cmc
cwtl
pop
mov
idivl
out
sbb
pop
popf
lods
repz
pop
mov
arpl
mov
mov
mov
mov
push
adc
divl
mov
nop
inc
lods
movsb
shlb
or
xchg
jno
dec
in
xor
movsl
fstl
inc
or
xchg
xor
sarl
xchg
out
xchg
test
inc
xor
mov
cmpsl
rcl
fmuls
add
ret
mov
inc
aam
movsb
arpl
pusha
jae
leave
in
jno
jno
lahf
xor
gs
jle
push
notb
adc
and
xchg
negb
mov
and
cmp
bound
inc
mov
imul
push
mov
push
push
ds
imul
sbb
arpl
mov
jb
pop
je
mov
inc
pop
pop
sub
sub
xchg
je
je
and
cld
in
xchg
xlat
sbb
aad
incb
add
inc
enter
and
cmp
jns
ret
jae
js
jno
rcll
mov
imul
sahf
pop
ret
inc
or
je
mov
in
or
ds
xor
jecxz
cld
mov
cmp
inc
xorl
call
lock
mov
or
jmp
addb
cmp
fiaddl
stos
lods
popf
mov
mov
xchg
fisubrl
jnp
mull
lods
xchg
adc
xor
test
lret
call
cmp
add
add
jb
cwtl
sub
je
fucomp
dec
add
aaa
mov
sub
arpl
add
dec
ret
ror
xor
sahf
lahf
ja
ret
scas
add
xchg
nop
call
cmpsl
insb
fs
scas
in
or
and
xchg
cmovnp
loopne
push
mov
cltd
xcrypt-ctr
cmpsl
popf
es
and
add
add
int3
xchg
insb
fwait
cltd
rcrb
fiadds
jae
aad
xor
lahf
and
rolb
insb
sub
ja
fs
pop
or
add
jno
movsl
stos
test
in
cmp
test
pop
push
lcall
pop
addl
add
imul
pop
push
jo
enter
subb
lcall
cmp
das
jb
pushf
cmp
cmp
jge
in
pop
and
mov
sbb
out
cmp
pop
mov
nop
jb
shll
mov
cmp
insl
adc
imul
call
xchg
adc
jmp
lods
mov
or
push
rclb
loopne
mov
in
xchg
rorl
aad
pop
leave
cli
inc
cmpsl
icebp
ja
ficoms
pop
stos
cltd
mov
ja
int3
dec
aas
xchg
sbb
dec
andl
dec
and
and
and
mov
testl
mov
int
lahf
dec
movsb
decb
lea
and
ds
adc
cld
mov
inc
or
mov
add
push
push
pop
js
aam
repz
lock
test
add
add
jb
int
xchg
sub
cli
sbb
scas
sub
xor
mov
out
ljmp
aas
add
mov
mov
psubsw
dec
and
cmpsl
pusha
je
xchg
or
mov
xor
test
xchg
push
sbb
jg
data16
or
imul
jae
test
dec
cwtl
dec
fstps
or
push
pop
shll
inc
rcrl
add
add
sahf
imul
fimull
lods
rcll
push
xor
mov
int3
cmp
cmpsb
ds
adc
adc
fwait
mov
std
cmp
daa
lods
popa
push
jecxz
fsubs
mov
mov
pop
mov
rorl
add
gs
nop
call
pop
out
out
add
inc
sub
push
jl
sbb
pop
dec
or
outsb
mov
xchg
shrb
stos
aad
arpl
jg
lret
in
pop
and
mov
into
xchg
and
pop
in
filds
sub
add
add
push
and
pop
ljmp
jmp
add
add
mov
pop
fiadds
xor
jnp
daa
add
inc
dec
pop
jnp
push
scas
and
xchg
lods
out
stos
stos
out
jg
sti
insl
rcrl
lret
outsl
js
mov
and
fcmovnbe
fcomp
adc
mov
rolb
outsb
cmp
imul
adc
int3
mov
jbe
setle
sbb
mov
in
mov
mov
xchg
rcl
ja
dec
in
sbb
or
lds
xchg
xchg
roll
push
xchg
ljmp
stc
fcomip
ss
pushf
adc
xchg
out
or
or
sti
fucomp
pop
add
ja,pt
pop
cmp
add
add
lods
add
mov
fimull
clc
cmp
xchg
adc
gs
mov
mull
add
aaa
inc
mov
test
mov
stos
cmp
xchg
ja
jg
imul
les
dec
pushf
test
ret
inc
addr16
stos
ret
out
in
lea
fidivl
add
mov
adc
cmpsl
adc
and
nop
js
in
xchg
or
mov
shlb
sbb
cmc
dec
dec
orb
insl
push
mov
lods
xor
subb
or
inc
std
sub
cmp
push
ss
dec
out
dec
pushl
pushf
pop
adc
jno
jl
stos
pop
pop
mov
pop
repnz
leave
and
xchg
cwtl
jnp
xor
jae
or
es
or
rcrl
xchg
dec
insl
push
cmp
iret
xchg
gs
in
lret
insl
stos
adc
cwtl
ret
xchg
out
xchg
xchg
les
scas
les
cwtl
mov
dec
test
add
adc
test
dec
das
mov
pushf
dec
sub
jne
adc
pushf
adc
fidivrl
mov
das
inc
int
ret
and
cld
xchg
nop
dec
xor
cmp
sbb
mov
cmp
adc
ret
lahf
xchg
dec
std
in
clc
xchg
cmpsb
outsb
mov
aas
dec
jae
jg
aam
mov
add
loop
and
call
fldl
adc
adc
loope
inc
mov
data16
dec
or
fimuls
pop
or
mov
rcl
sbb
add
add
jnp
aas
cmpsb
rcl
es
es
and
aad
cli
and
jl
bound
jo
lea
in
pop
xor
test
push
pusha
shrb
xor
mov
push
jo
add
xchg
add
add
fisubl
loop
mov
lods
sbb
pop
cmp
loop
lcall
inc
sti
stc
xchg
cmp
out
test
into
jp
pop
into
movsb
mov
pop
adc
outsb
adc
push
std
movsl
nop
call
cmc
cltd
xor
loopne
into
leave
mov
add
add
adc
jg
addr16
test
mov
sbb
xchg
mov
add
pop
lcall
mov
clc
push
mov
std
in
xchg
faddl
dec
int
ds
push
stos
andl
pop
push
mov
sbb
or
cmp
dec
fmull
jb
nop
call
xor
mov
outsl
dec
dec
lcall
ret
mov
mov
in
mov
jne
das
nop
adc
je
repnz
test
in
sbb
cmpsb
fbstp
inc
out
pop
mov
sbb
ret
or
in
jae
bound
xchg
movsl
pop
add
cld
push
sub
xchg
push
push
mov
lret
pop
jecxz
mov
fsts
adc
test
mov
adcl
pop
popf
sbb
pop
jmp
and
or
fcmovnu
aaa
inc
pop
cli
aam
add
add
movsl
out
pop
push
push
sub
enter
inc
push
push
fnstenv
jns
popf
or
xchg
mov
mov
xchg
pop
sub
sbbl
adc
cmp
dec
insl
push
loope
mov
push
shrb
and
cwtl
mov
daa
test
sbb
andb
call
xor
adc
insb
sub
movsb
loopne
gs
adc
orb
cld
int
nop
call
hlt
cmc
arpl
in
je
insb
loopne
push
sti
int3
xchg
dec
cmc
dec
std
push
lock
test
xchg
pop
xchg
mov
mov
imul
add
mov
in
orl
fstpt
pop
bound
call
fsubrs
test
xchg
pop
popf
xchg
and
gs
cmpsb
ds
loopne
dec
mov
and
jbe
pop
mov
and
call
outsl
mov
out
cmc
lretw
sub
ss
into
imul
mov
jge
lds
ret
mov
mov
sti
sub
push
pushf
rep
xchg
dec
dec
dec
push
out
xchg
sbb
loop
sbb
dec
lahf
addr16
xchg
pushf
jmp
inc
dec
pop
test
or
orb
lods
xor
fisttpl
xorb
mov
scas
jb
xchg
push
cmp
xchg
outsl
pop
cmp
jo
sbb
je
cmp
xchg
mov
mov
clc
sub
sahf
ja
outsb
or
call
xchg
sahf
aad
cld
repnz
ljmp
ja
mov
mov
jb,pt
jns
jae
movsb
dec
in
icebp
nop
call
xor
sbb
mov
mov
jne
xor
mov
jmp
dec
xorl
popf
rcl
add
mov
add
js
les
push
cli
ja
aaa
lock
dec
xchg
lahf
ljmp
xchg
dec
or
adc
xor
jg
add
add
add
sahf
inc
dec
sti
data16
int3
rcrl
mov
stos
ss
aad
ja
add
icebp
xchg
scas
inc
outsl
mov
das
pop
iret
dec
dec
jg
out
inc
jl
and
inc
or
aam
push
pusha
and
fucomi
in
inc
out
sbb
dec
dec
incl
cmc
mov
mov
out
or
js
popa
lock
cwtl
xchg
mov
inc
adc
or
fcmovb
jp
scas
mov
push
xchg
test
out
je
and
add
pop
lret
mov
adc
lcall
popf
mov
push
inc
in
adc
push
mov
in
jnp
jno
and
lret
mov
sbb
adc
es
aad
push
mov
dec
dec
fs
cmp
ja
rorl
ja
jecxz
cmpsb
dec
repnz
push
push
imul
and
mov
rolb
and
int3
mov
dec
adc
cli
jae
ffree
inc
int3
add
ficoms
popa
stos
xor
xlat
push
and
inc
pushf
cld
popa
out
xor
mov
and
jnp
out
add
into
xchg
cld
add
add
dec
cwtl
sbb
mov
xlat
fmulp
cmp
pop
pushf
mov
sbb
aas
xor
cs
lret
mov
adc
ljmp
jno
add
add
add
mov
icebp
xor
call
andl
fwait
push
sub
int3
and
lea
imull
out
iret
gs
add
pop
mov
push
pushf
mov
cmpsl
sbb
ja
mov
pop
loope
mov
pop
xor
outsb
cmp
xor
cltd
popa
nop
cmp
push
cwtl
ds
add
add
adc
push
lods
bound
lret
xchg
jnp
xor
inc
jnp
call
or
movsl
or
xlat
mov
dec
aas
inc
andb
sarl
lret
icebp
in
xor
xchg
mov
fmull
add
add
loop
jo
mov
cmc
test
mov
insl
fbstp
test
fimuls
add
mov
xchg
rol
adc
scas
cmc
sbb
call
movsl
insb
xchg
hlt
daa
xor
mov
add
add
jp
sub
push
sub
push
pop
out
test
add
cmp
in
lahf
inc
jno
pop
rclb
or
push
mov
js
sarl
lahf
rclb
test
xlat
fiadds
dec
lods
xchg
add
add
xchg
out
sahf
scas
dec
test
popa
out
pop
jle
cmp
cmp
sub
dec
inc
pop
inc
xchg
lahf
pop
fsubl
and
in
pop
sub
add
mov
adc
sbb
cmp
das
movsb
das
xchg
fprem1
lret
int3
lea
mov
and
imul
lods
test
or
or
mov
popf
movb
add
add
jbe
mov
inc
dec
push
jno
jmp
stos
mov
fnstcw
ret
js
or
test
xchg
subl
sub
leave
add
bound
into
insl
sarb
and
insl
jecxz
add
adc
dec
xchg
mov
arpl
cmp
mov
adc
xchg
mov
nop
call
mov
xlat
iret
push
and
inc
fdivr
cmpb
dec
or
dec
jae
out
mov
gs
dec
xchg
xchg
in
cmp
aam
adc
xchg
scas
test
xor
mov
sub
sbb
stc
popa
arpl
icebp
sub
jnp
inc
xor
inc
into
mov
dec
dec
mov
sbb
cmp
out
fsubs
lods
stos
pop
pop
lea
insl
mov
int3
adc
mov
mov
inc
test
dec
sub
mov
xor
xor
add
jmp
scas
mov
repnz
loope
enter
pop
push
cltd
jne
mov
or
mov
int3
and
and
inc
inc
aad
pop
aas
add
jno
lock
mov
arpl
dec
mov
pop
inc
xchg
adc
xchg
mov
lods
inc
sub
jge
shlb
ja
loopne
mov
cmpsl
js
fidivrs
and
jno
call
xchg
push
adc
inc
les
xor
mov
push
and
and
insb
mov
cmp
cmp
imul
es
test
out
repnz
and
xor
push
dec
and
dec
dec
lcall
sti
mov
adc
or
mov
adc
movsl
ret
aad
cmp
ret
mov
push
push
cmp
in
and
idivl
ljmp
mov
mov
sbbl
test
xchg
cwtl
orb
sahf
js
out
mov
out
fnstcw
aam
push
test
add
pop
test
push
rcr
adc
loop
clc
sub
out
imul
fdivs
test
and
sub
dec
push
push
in
or
rol
repz
fadds
add
add
pop
fistps
mov
xlat
jb
lds
push
adc
jecxz
or
data16
xchg
adcb
stos
rolb
or
call
push
mov
fsubrs
cmp
push
add
and
mov
mov
and
pop
aam
stos
outsb
dec
das
into
aam
lcall
dec
and
mov
sbb
mov
push
daa
fdivs
jp
fisubs
es
sti
leave
or
sbb
aad
addr16
xor
sbb
push
pop
cmpsl
js
aad
and
and
and
jecxz
fisubrs
pop
sub
sbb
sbb
aaa
fchs
stc
add
nop
cs
mov
data16
pop
and
int3
and
cld
test
or
rorl
inc
mov
lret
or
xor
imul
sub
push
or
lcall
sub
imul
sbb
cmp
lods
or
add
add
outsl
test
movsb
pop
mov
sbb
sti
and
repnz
into
or
inc
test
push
xchg
das
addr16
cwtl
fiaddl
jbe
xlat
pop
rolb
ret
icebp
hlt
xor
jne
cmpsb
xchg
push
or
adc
xor
sbb
mov
sbb
and
fcmovnb
jg
aam
and
popf
mov
pop
mov
das
mov
call
xor
call
hlt
sub
leave
xchg
xchg
loop
pop
out
mov
dec
test
xor
hlt
orl
xchg
std
out
fistpl
outsl
sub
push
icebp
fisubl
in
mov
stc
or
loopne
int3
and
cmp
jae
sub
hlt
cld
mov
pusha
shlb
mov
test
in
cmp
clc
mov
or
or
data16
jmp
fldcw
cmp
jns
ficoms
neg
popa
out
add
add
add
test
stos
push
sti
test
mov
dec
movsb
push
pop
cwtl
addl
test
adc
sti
inc
leave
cmc
push
xchg
and
jg
push
xchg
call
push
push
faddp
lahf
mov
adc
add
push
fwait
xchg
dec
cwtl
xchg
ja
dec
test
and
jae
push
and
and
mov
test
addr16
pop
mov
cld
mov
popa
mov
jge
pop
mov
xlat
jl
push
and
mov
xchg
cmp
add
outsb
push
jbe
or
cld
je
pop
imul
jo
or
mul
adc
cmp
dec
decl
mov
sbb
sarb
adc
mov
xor
out
addr16
mov
nop
call
int
dec
popa
pop
xchg
xchg
cltd
pop
and
sbb
fisttps
push
adc
or
mov
scas
or
loop
pop
loop
push
pop
xlat
out
mov
int3
and
and
pusha
pop
jmp
arpl
inc
dec
push
icebp
test
mov
lea
rcll
insl
inc
xchg
jge
jecxz
jbe
jnp
outsl
jb
js
inc
clc
mov
pushf
sub
sbb
outsb
pusha
in
loop
andl
pop
lcall
popa
mov
pushf
fdivs
or
cmp
mov
inc
imul
sub
fbstp
arpl
inc
inc
es
jmp
lahf
sub
jp
cltd
and
rorl
inc
mov
pop
xor
cmp
sbb
or
test
rcll
jae
sbb
adc
pop
mov
inc
xlat
pop
fistpl
jecxz
cmp
add
mov
push
mov
ficomps
adc
add
add
add
sub
sub
test
lret
mov
and
mov
push
jmp
out
dec
push
leave
add
or
aam
enter
adc
flds
dec
inc
sbb
std
mov
dec
mov
mov
inc
xchg
pop
adc
jecxz
and
and
and
loope
ja
xlat
in
ret
dec
mov
les
movsl
push
mov
or
sub
add
cltd
pop
ret
adc
test
mov
sarl
mov
test
xor
lods
mov
add
add
in
mov
loope
mov
and
out
stc
cmpsl
xchg
in
mov
popf
aad
cmp
lock
add
mov
add
add
and
fisubs
jb
les
mov
cmp
out
or
int3
and
int
and
mov
push
xchg
mov
sub
adc
sbb
inc
xor
jb
or
and
adc
push
inc
push
or
lea
ja
js
je
hlt
sbbl
ret
insl
shll
loope
lcall
and
and
cmovae
arpl
sti
test
std
rcr
sub
mov
mov
or
push
xor
and
pop
and
and
and
int3
out
adc
mov
pop
add
aam
cmp
arpl
aad
mov
mov
rorl
call
mov
les
dec
fnsave
mov
int
or
outsb
std
dec
mov
xchg
fwait
les
fs
dec
js
jmp
stos
mov
add
repnz
rorb
out
fcomi
and
adc
fisubl
mov
call
arpl
push
adc
icebp
mov
je
jl
push
daa
shl
out
ret
push
mov
fucomip
or
and
and
fs
int3
lea
pop
mov
xchg
pop
mov
mov
push
jg
sbb
cmpl
ror
cmp
sub
add
add
insl
mov
lcall
fidivrs
mov
jecxz
out
fcoms
sarb
push
mov
stos
xchg
adc
mov
push
mov
aad
scas
pop
xchg
xlat
xchg
lahf
push
add
add
add
cmpsb
mov
stos
adc
scas
inc
lock
inc
repz
imul
push
nop
call
mov
shrb
or
pop
ficoms
ficomps
adc
clc
lods
mov
or
xor
aaa
push
mov
fs
jp
xchg
push
mov
stc
outsb
mov
pop
rorb
xlat
dec
dec
decl
rorb
adc
lock
add
add
add
mull
ljmp
push
xorl
and
cmp
lea
popf
pop
sarl
in
add
adc
jl
shr
cmpsl
sti
jecxz
and
or
cwtl
out
stos
cmp
rol
or
call
xor
jmp
daa
into
jno
into
xlat
push
cmpl
adc
push
ljmp
sub
inc
dec
sub
pop
das
js
adc
cmp
dec
filds
inc
fwait
out
clc
push
stos
adc
jmp
aam
jl
popf
jnp
repz
inc
lret
cltd
lea
mov
fadds
add
add
sbbb
adc
lea
jno
bsr
mov
pop
jmp
cmc
fxch
xchg
sti
shrb
outsl
jns
add
imul
add
xchg
sub
adc
xor
mov
fistpl
repnz
adc
mov
rep
push
shl
cmpsb
dec
decb
xchg
imulb
iret
mov
hlt
and
add
pop
cltd
aam
and
push
or
outsl
repz
aaa
sub
push
mov
inc
scas
sbb
movsb
ret
loope
stos
pop
int
int3
lcall
and
xchg
xchg
push
add
dec
std
jb
add
pusha
sahf
adc
mov
mov
mov
stos
mov
pop
jp
dec
sahf
or
mov
dec
push
lcall
lret
adc
push
out
pop
bound
scas
fsubrl
int3
xor
sti
sbb
sbb
mov
add
xchg
inc
cmp
push
push
cmp
inc
mov
lods
add
mov
mov
loop
add
add
rcrb
mov
dec
imul
clc
filds
mov
add
mov
out
int
call
add
daa
lods
mov
or
sbb
push
repnz
sub
cmp
ret
fistps
stos
scas
fildll
cltd
addr16
loop
adc
stos
mov
push
dec
mov
push
jmp
sbb
data16
inc
ss
add
arpl
movsb
mov
sbb
sbb
ds
jmp
add
push
scas
sbb
and
rcll
mov
pusha
aad
pop
lods
inc
notb
mov
movsb
popf
out
pop
int3
mov
push
push
mov
add
add
add
add
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
or
add
add
add
add
add
cmp
add
add
add
add
add
add
cld
inc
add
add
add
inc
add
add
add
sti
inc
add
add
add
add
add
add
pop
sti
inc
add
add
add
sti
inc
add
add
add
cli
inc
add
add
add
cli
inc
add
add
add
add
add
inc
add
add
push
cli
inc
add
add
inc
cli
inc
add
add
xor
inc
add
add
add
inc
add
add
add
inc
add
and
add
add
add
and
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
xorb
add
add
lock
call
push
add
push
add
inc
add
add
add
add
incl
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
