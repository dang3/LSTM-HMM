call
or
push
outsb
shll
lods
push
dec
ljmp
jg
insl
jmp
adc
pushl
fidivl
sbb
pop
lock
xchg
xor
pop
jae
sub
pop
sub
jmp
cmpsb
ds
sbb
mov
dec
dec
ljmp
jnp
add
adc
pushl
pop
aaa
adc
sahf
push
inc
fwait
outsl
lock
mov
pop
lret
mov
notl
jl
int
cmp
dec
sti
dec
cmp
movsl
jecxz
or
push
lock
fldl
push
jne
push
cmpsb
cld
jl
dec
in
mov
mov
cli
lods
bound
dec
imul
jmp
loopne
stc
pushf
cmc
xor
add
incl
mov
psubw
push
cmp
lds
mov
out
aaa
mov
sbb
mov
mov
adc
push
or
mov
mov
add
adc
incl
lods
sub
cmp
pop
cmpsl
push
in
scas
rcrb
andl
jg
rcll
popa
jo
int3
sbb
orb
add
lcall
and
fwait
lock
call
ja
fwait
inc
cmp
lea
pop
fidivrs
inc
xor
mov
pop
popa
adc
push
jnp
jle
out
int3
scas
adc
push
imulb
pop
jns
xor
rorl
xor
jp
jmp
inc
cld
sub
xor
xor
es
sub
cmovge
ucomiss
sbb
loopne
add
cltd
pushl
inc
sub
test
mov
push
gs
out
fidivl
mov
stos
cmp
in
out
jle
cmp
xor
mov
dec
or
ja
mov
pop
aad
dec
jns
mov
cld
adc
orb
push
ss
xor
jl
mov
loop
outsl
xlat
fcoms
xor
xchg
lcall
neg
repnz
mov
clc
cmpsl
iret
or
and
shlb
inc
fmulp
mov
clc
roll
push
sub
sbbb
adc
lock
imul
add
inc
aas
aam
mov
popf
aaa
nop
and
clc
sbb
cmpsb
sbb
inc
mov
mov
push
arpl
push
cltd
hlt
hlt
and
sti
mov
inc
add
inc
out
ds
jp
push
fidivs
js
mov
mov
push
add
das
pushl
cmp
mov
fldcw
lret
repnz
sbb
jns
nop
dec
in
dec
dec
fcomip
sub
movsl
shrb
pop
inc
leave
xor
sub
add
stos
push
mov
out
adc
sub
decl
lret
lcall
sub
int3
xchg
sbb
or
hlt
inc
enter
dec
ljmp
push
adc
inc
aas
or
cmp
pmaddwd
fildll
ljmp
pushl
or
pop
or
shll
and
adc
daa
pop
jge
popf
mov
push
data16
loope
call
xchg
push
cmpsl
push
xor
shrl
mov
cwtl
into
sbb
idivb
xchg
cwtl
xor
lods
clc
lock
ljmp
or
mov
pop
mov
inc
cmpsb
sub
test
inc
jl
jg
hlt
loope
int
nop
jecxz
andb
and
and
mulb
clc
in
sahf
jg
adc
call
lods
mov
push
xchg
test
inc
fbld
pop
nop
mov
outsl
sub
mov
sbb
inc
repz
add
loopne
inc
repnz
jle
push
fdivs
out
xchg
decb
out
aad
xchg
lods
int3
test
aas
stc
shr
mov
aam
jg
pop
sbb
loopne,pn
sbb
xchg
dec
sbb
daa
test
orb
mov
call
mov
add
mov
jbe
stc
mov
mov
adc
cmp
and
cwtl
out
jmp
clc
fs
cmc
mov
testl
push
lahf
jb
adc
xchg
and
lods
pushl
pop
adc
test
push
movsb
cmp
inc
mov
ds
in
aad
pushl
dec
sti
and
cmpsb
cltd
ds
xor
in
vunpcklps
mov
std
push
jg
xchg
dec
cmp
cmpsl
push
bound
je
mov
movsl
lahf
dec
fdivl
mov
scas
mov
sub
aad
les
xor
jecxz
cmp
int
xor
insl
cmpsb
cmp
fisttpll
andb
xlat
incl
xor
fs
les
xchg
enter
push
pop
jg
pop
push
pushf
adc
decl
les
imul
and
nop
and
ret
xor
jmp
mov
pushf
push
out
icebp
and
loopne
out
jno
aas
inc
inc
popf
mov
xchg
sbbb
sub
ljmp
out
rcll
test
das
dec
lock
movsl
bound
in
mov
incl
push
dec
mov
fsub
mov
add
jbe
ljmp
dec
mov
push
outsb
mov
pop
loop
inc
or
sub
jge
les
sarl
std
xchg
jbe
dec
mov
jg
jb
adc
ret
pop
repz
adc
pop
cld
aas
mov
in
jo
daa
lods
in
rorl
out
add
rcr
add
stos
sub
mov
out
lcall
idivl
mov
fdivr
jp
hlt
mov
xchg
mulb
xorb
cmp
adc
shll
cld
dec
jle
inc
mov
bound
int
ljmp
ret
xor
imul
mov
xor
pop
push
mov
inc
push
aaa
cs
dec
pushl
mov
ds
lds
aaa
sti
jne
mov
add
clc
jns
or
sub
call
inc
or
subb
jg
js
cmc
lret
adc
rclb
xchg
mov
push
add
ljmp
rclb
pop
cwtl
pop
or
repz
sub
and
dec
stc
push
or
inc
pop
pop
pop
add
cmpsl
cmp
sbb
int3
cmp
pushl
inc
pop
ja
lcall
shll
mov
inc
or
aad
pushl
add
mov
lret
xor
sbb
pop
in
add
and
daa
push
idivl
fnsave
mov
pop
cld
ja
push
adc
sbb
pushf
out
rcr
sub
out
inc
aam
iret
scas
scas
mov
les
subl
mov
push
and
out
clc
mov
pop
test
dec
int
xor
push
bnd
pop
in
jg
jmp
jno
popa
cmp
push
movsb
sbb
shr
adc
sbb
jmp
movsb
pop
stc
test
cmp
mov
pop
jle
test
roll
mov
mov
movsb
aam
pop
mov
lds
mov
addb
push
jecxz
test
dec
mov
fidivs
dec
aaa
cmpb
pop
repnz
sahf
lods
leave
or
pop
and
call
jge
dec
std
push
mov
mov
xchg
mov
ljmp
cli
inc
dec
test
fimuls
dec
mov
pusha
xlat
mov
imul
push
cmc
pop
sub
popf
in
lret
int
sub
les
lods
arpl
push
or
sub
enter
add
clc
cld
shlb
std
mov
data16
or
sbb
sti
orl
les
adc
mov
pushw
or
xchg
pop
inc
mov
or
xor
lock
fstl
sub
inc
mov
xchg
lcall
aas
mov
lods
push
sti
cmp
xor
dec
fsubs
cmp
test
jg
leave
enter
inc
adcl
add
rcrb
jp
lods
shlb
and
jg
decl
push
sub
out
sbb
jbe
cmp
mov
das
mov
xor
jmp
dec
cmp
xchg
mov
cli
cmp
push
sbb
and
jge
push
call
aaa
aas
rol
pusha
sub
shll
jns
rcll
fidivs
pushl
xlat
mov
in
nop
fildll
dec
add
add
xor
pop
push
out
and
ja
sar
fcomip
or
add
leave
std
and
pusha
movsb
mov
clc
jg
jae
inc
pop
cs
in
cli
jp
sub
inc
mov
push
mov
dec
into
inc
mov
sub
xchg
cs
mov
mov
or
add
fs
cmp
fs
mov
insb
pop
mov
into
mov
test
cmp
daa
add
push
dec
mov
xchg
push
cmpsb
ret
mov
ficomps
and
and
mov
jp
movsl
mov
insb
ficoml
out
lahf
sbb
cmpsb
jo
orb
sbb
jl
mov
cs
jno
xchg
shlb
xchg
or
sub
decl
cmpsb
aam
js
pop
adc
push
mov
outsb
ja
aam
ret
xchg
das
cli
pop
pushl
clc
pop
test
and
mov
bndldx
xor
jecxz
pop
jecxz,pt
push
imul
into
xor
sub
jb
sahf
inc
ret
pop
cmpsb
xchg
mov
sbb
es
mov
in
imull
jl
loope
outsl
xchg
jle
sarl
pushf
stc
jl
cmp
jmp
and
adcb
enter
in
std
movsl
push
movsb
cmpsl
es
movsl
xchg
aam
cmp
xchg
fdivrs
aaa
mov
scas
push
xlat
rcl
adc
sti
fstl
mov
in
popa
ljmp
and
ret
sti
pop
inc
jbe
xchg
pusha
stos
icebp
bound
jg
iret
mov
outsl
jo
out
or
repnz
add
incl
mov
pop
test
bts
or
inc
cltd
mov
cmp
aas
cs
push
adc
add
pop
inc
je
out
repnz
mov
xchg
inc
jae
sub
push
sbb
fs
and
pusha
mov
es
leave
fdivs
hlt
mov
mov
xchg
ljmp
pop
test
ds
fcoml
dec
outsl
xchg
dec
and
jne
test
sub
scas
adc
lods
jmp
mov
shll
jmp
pop
and
push
xchg
xchg
push
mov
stos
sub
inc
leave
shr
jg
inc
outsw
mov
xor
ja
push
rcrb
push
test
das
or
cmpsb
push
mov
mov
jne
inc
and
pop
lret
mov
cmp
decl
or
dec
inc
not
stos
clc
pushf
xchg
aad
mov
dec
xor
mov
adc
cwtl
pop
jge
inc
scas
xlat
or
pop
adc
jns
fs
inc
jl
inc
imul
mov
les
cli
pop
hlt
adc
sbb
pop
shr
dec
adcb
movsb
pop
lock
pop
cld
dec
jne
int3
mov
popf
popf
ja
jae
sub
inc
xor
pop
andb
adc
mov
dec
incl
fcompl
or
outsl
in
jmp
ljmp
add
pushf
push
in
lret
ficoml
fchs
test
testl
test
enter
sub
push
mov
neg
cmc
and
inc
push
mov
inc
clc
jo
jecxz
lcall
inc
jl
scas
subb
rcrb
jge
insl
fdivr
adc
add
mov
cmp
das
fsubrs
jnp
jg
mov
fdivrs
adc
ret
mov
inc
jg
ljmp
mov
mov
xor
popa
mov
jecxz
fdivl
test
sbb
jg
sbb
push
in
jo
lahf
bndstx
dec
stos
adc
xlat
mov
fs
fisttpl
xor
jg
pop
scas
in
xchg
mov
repnz
bound
inc
sub
das
in
adc
int
xchg
or
iret
fildl
div
les
pushl
test
cwtl
test
lods
xor
stc
and
jl
es
nop
adc
dec
movsb
pop
or
jg
fdivl
adc
mov
clc
int
scas
xchg
cmp
imul
cmp
lock
stos
or
lahf
in
add
mulb
nop
call
popf
jp
in
stos
iret
test
push
and
addb
dec
aaa
lcall
xor
fxch
lock
mov
repnz
lods
out
mov
lret
push
ror
or
vmread
mov
sbb
lcall
fwait
pusha
sub
ja
pop
adc
jle
mov
and
pop
mov
sub
or
or
mov
adc
test
bound
cs
hlt
and
mov
incl
std
sub
dec
sub
dec
inc
sbb
out
outsl
out
lea
inc
movsb
sti
test
insl
cmp
in
cmp
adc
add
push
dec
scas
mov
inc
xor
add
mov
fwait
clc
cmpsl
adc
ljmp
shrl
mov
mov
insb
or
sti
js
add
clc
ljmp
and
or
jne
add
pop
pop
cmpsl
call
cmp
call
push
fstpl
xchg
inc
test
cmp
repnz
inc
out
mov
cld
sbb
inc
cmp
outsl
incl
ret
outsb
fwait
add
cmc
aad
outsl
adc
fisttps
xor
cli
pushl
cmp
cli
sub
add
or
cmp
mov
roll
lock
cld
call
jge
scas
pop
dec
fstps
in
icebp
xor
lret
lock
fwait
popf
lcall
cmpsl
xlat
mov
and
lea
das
xor
xlat
je
dec
xor
ljmp
pushf
cmp
fldl
xchg
ljmp
xchg
dec
pop
xchg
pop
stc
dec
xchg
inc
ret
cmp
mov
cmp
add
lock
mov
into
mov
mov
jmp
sub
jecxz
aam
xchg
lcall
cwtl
dec
aaa
aad
out
mov
and
mov
mov
and
leave
sbb
cmp
adc
int
mov
pusha
mov
incl
fbld
jmp
jp
fisttpl
pop
dec
in
dec
nop
cld
dec
popa
or
jae
inc
lcall
lods
add
jb
aad
xchg
xor
mov
das
xor
cmp
pop
out
mul
ljmp
les
jp
sub
insb
xchg
addr16
call
mov
xchg
push
in
shrl
jle
daa
sbb
jecxz
std
mov
xchg
into
cmc
fdivs
mov
fdivs
and
pop
lds
hlt
mov
jg
pop
imul
aas
mov
sub
push
clc
cmp
test
outsb
pop
or
pop
cmc
pop
xor
inc
mov
into
lcall
mov
aam
jb
cmp
fcomip
ljmp
mov
pop
and
inc
jp
push
mov
mov
jmp
pop
sub
je
out
sbb
push
cltd
add
fstpl
adc
pop
outsl
jmp
push
sbb
xchg
dec
into
pop
inc
or
cmp
or
daa
aas
jle
jb
jg
jmp
notb
jecxz
or
and
mov
sub
pop
cmp
mov
xchg
ljmp
pop
push
test
pushf
dec
cmp
pushf
sbb
shl
jle
pop
enter
enter
pushl
push
jnp
ret
lahf
pop
ljmp
mov
push
rol
xor
adc
lcall
mov
das
xor
inc
inc
jle
add
xor
incl
mov
inc
ss
push
or
inc
inc
ljmp
faddp
add
call
fidivl
jae
cld
pop
sub
cld
lcall
out
pop
ret
test
mov
stos
lcall
and
xor
sbb
loope
mov
divb
xchg
push
or
dec
insb
sub
sbb
jp
jmp
fistps
push
push
std
mov
cld
ljmp
es
xchg
mov
js
into
xchg
xchg
aaa
sbb
fcomip
in
jno
loop
xor
aaa
mov
dec
sbb
test
sub
fdivl
mov
and
push
mov
and
adc
jae
mov
test
incl
push
add
ds
fiaddl
add
push
adc
movsb
leave
push
fwait
mov
movsb
push
cmp
testl
fdivr
ljmp
lock
and
sti
nop
outsl
or
gs
je
out
add
xchg
cmp
pop
fistpl
decl
mov
dec
mov
fistpll
add
mov
or
inc
push
add
inc
out
test
pushl
jp
aam
adcl
mov
roll
mov
cmp
shll
mov
pushl
in
les
and
icebp
cmp
outsb
push
cmc
test
shlb
cmp
or
dec
test
aas
and
push
mov
pop
aad
adc
push
mul
add
ss
jg
jmp
lds
cld
mov
popa
loop
test
sbb
fdivl
mov
mov
loopne
fsts
xorb
jmp
sbb
and
into
clc
sbb
dec
ja
in
lods
cli
fisttpl
jb
ljmp
pop
adc
cmpb
andl
xchg
sub
cmpb
dec
out
jle
cli
or
pop
jb
add
sub
sub
in
imul
ja
xchg
sbbl
adc
lcall
adc
cmp
out
rcr
rcrl
test
imul
lret
clc
int3
cmpsl
or
or
gs
fwait
loop
inc
icebp
mov
adc
outsb
cmp
push
xor
jo
pop
pop
decl
into
mov
scas
jmp
and
inc
ret
inc
push
add
mov
xchg
push
fists
dec
lahf
xor
jmp
scas
movsl
subl
inc
cmp
insl
and
pop
out
xorl
addr16
ds
icebp
jmp
fsubrl
insl
mov
in
dec
fadds
mov
loop
sbb
cmpsb
xor
adcb
orb
mov
pop
ficomps
sahf
stos
outsl
sub
mov
popf
int
and
loop
test
add
mov
stc
and
adc
loop
cld
outsb
or
xchg
lret
mov
xchg
lods
dec
out
cmp
fcmovu
dec
call
cmp
xchg
or
mov
mov
adc
fstpl
pushf
cmp
mov
inc
jo
sahf
repz
ret
adc
push
mov
or
lds
scas
sbb
call
jl
mov
push
push
fsubp
inc
pushf
das
repnz
scas
les
and
mov
mov
cld
cli
add
pop
sub
pop
mov
call
jmp
xor
mov
sub
mov
stos
add
decl
addr16
addr16
shlb
in
scas
sub
in
inc
stc
cwtl
mov
subl
call
and
inc
pop
mov
add
cmp
scas
xor
mov
adc
das
clc
cli
leave
push
mov
jnp
shll
mov
loope
test
lcall
pop
shrb
mov
adc
js
pop
scas
das
mov
xchg
das
clc
lcall
in
stos
xor
or
cmpsl
pushw
out
cmc
push
cmp
andb
mov
clc
stc
je
mov
icebp
stos
push
outsl
dec
or
jecxz
inc
ret
cmpsl
fisttpl
imul
jmp
lret
lea
mov
push
mov
imul
jecxz
sbb
jmp
stc
sti
pmullw
push
jb
into
inc
and
jmp
jns
sbb
sub
out
clc
ljmp
fs
mov
lds
push
xor
movsl
stc
push
adc
mov
std
pop
movsb
mov
adc
insb
inc
sbb
lds
inc
scas
mov
mov
loope
outsl
stos
clc
pop
jb
inc
jg
mov
sbbb
insb
xor
pushl
lret
push
add
lret
cld
into
rorl
outsb
pop
out
pop
cmpsb
insl
xchg
mov
incl
inc
push
movsl
cmp
sbb
sbb
jecxz
adc
popa
sbb
test
out
call
loop
sub
mov
xor
sub
mov
mov
or
std
dec
dec
dec
mov
sub
mov
cwtl
dec
push
mov
ja
fstl
push
int3
mov
push
in
in
jg
push
pop
mov
dec
inc
jns
iret
mov
ret
ja
sti
mov
mov
sbb
mov
ljmp
int
addr16
ds
mov
mov
push
arpl
fistpll
out
mov
rcrl
xor
cmp
les
test
je
jl
add
jno
decb
push
mov
mov
push
xor
ret
cmp
jcxz
cmc
pop
loop
sub
jnp
fidivrl
add
inc
and
jne
push
fidivrs
mov
pusha
mov
mov
dec
xor
push
push
xchg
jo
xchg
mov
add
mov
subb
jmp
cmp
jnp
jmp
popa
gs
push
sti
rcll
adc
sub
pop
imul
ret
pushf
push
xchg
mov
sub
add
lods
push
add
add
shr
jge
push
add
adc
or
sub
adc
jbe
setbe
flds
data16
cmp
aaa
adc
mulb
jg
mov
arpl
arpl
aad
xchg
imul
cmp
xchg
lcall
push
mov
mov
push
fs
dec
cmpsb
sahf
clc
dec
inc
std
sbb
decl
jle
xchg
bound
mov
mov
nop
out
outsl
cmpsl
fwait
scas
sbb
mov
call
ja
bnd
aas
pop
inc
push
push
xchg
sbb
subl
inc
jge
push
mov
imul
inc
add
negl
push
clc
imul
ret
sub
mov
push
inc
dec
mov
lcall
or
icebp
iret
inc
jp
mov
fidivrs
jg
lea
dec
decl
div
aad
push
push
push
xchg
fidivrl
mov
imul
dec
out
mov
mov
sbb
das
pop
daa
sti
push
int
popf
mov
ret
les
ss
arpl
and
call
cmpps
fists
es
xchg
into
idivl
inc
mov
jne
incl
xchg
mov
dec
stos
repnz
scas
int3
leave
push
mov
sahf
add
xor
mov
pushl
mov
testl
mov
jne
and
sbbl
mov
sbb
call
mov
push
repnz
lret
xchg
imul
ficomps
fcomps
sub
lcall
adc
movsl
stos
call
mov
mov
imul
jl
jecxz
incl
fwait
imul
push
testl
sbb
daa
out
xor
test
mov
shlb
xor
sbb
stc
adc
cld
xchg
mov
movsb
jbe
or
mov
cmp
popf
mov
sub
stos
cmp
fcomip
incl
mov
jl
jge
jp
rclb
mov
andb
js
xchg
ljmp
xor
jae
sarl
out
jecxz
cmpsl
inc
cltd
ljmp
dec
insb
push
mov
pop
mov
sbb
mov
lahf
out
mov
ljmp
pop
out
xchg
popf
gs
mov
mov
sub
lcall
pushl
jmp
ljmp
loope
push
loope
cmpsl
sbb
mov
sti
mov
call
jge
sub
ljmp
test
mov
lcall
rcrb
stos
fists
iret
pextrw
sbb
addl
int3
outsb
jmp
push
inc
sbb
int3
mov
mov
mov
int
adc
push
in
cmp
incl
ret
ficompl
cmp
fcmovbe
jnp
insl
rcl
movsb
lods
jo
jp
fdiv
and
pop
idiv
lcall
into
adc
dec
mov
xor
mov
jo
iret
dec
test
lcall
dec
xchg
add
outsb
sub
mov
inc
fsubrl
mov
cmpb
js
out
clc
decl
push
sbb
sub
push
lret
daa
pop
rcll
mov
roll
aad
lcall
cld
and
lret
or
lods
cmp
mov
cltd
clc
and
iret
adc
das
rorl
jns
adc
in
sti
data16
xchg
push
pushl
sub
mov
pop
cmp
inc
sbb
loopne
sub
cwtl
fnstsw
adc
inc
scas
out
std
mov
lahf
mov
pop
cmp
jmp
xor
fstps
adc
sbb
incl
xlat
dec
das
pop
insl
sbb
cmp
pop
fmulp
hlt
test
push
inc
les
sbb
ficoms
xchg
cld
leave
daa
mov
icebp
jecxz
sub
imul
jmp
fstpl
popa
aas
sub
and
nop
adc
mov
xor
adc
stc
negb
ret
dec
jl
or
aaa
rcr
in
insb
cmp
jmp
and
mov
xchg
xor
xor
lcall
insl
dec
jae
insb
and
repz
aas
push
or
ja
dec
inc
ljmp
lcall
add
jno
cmc
jae
pop
rcrb
out
adc
outsb
pop
cmp
je
adc
pop
inc
cli
cmc
roll
in
xchg
xchg
cmpsl
scas
daa
xchg
test
mov
data16
cli
xchg
movsb
pop
sbb
dec
or
mov
xor
imul
pop
inc
cmp
adc
mov
lea
lea
shr
mov
and
push
mov
iret
stc
sbb
inc
iret
pop
sahf
xchg
ja
adc
push
icebp
sub
fdivrp
mov
iret
pop
push
xchg
xchg
fs
pop
ds
decl
in
and
and
mov
popf
pop
pshufw
pusha
into
cmp
or
fisubrs
cmc
out
ljmp
pop
cwtl
xchg
and
jno
cmp
pop
xchg
adc
sub
xchg
inc
fdivrs
insl
repnz
lock
mov
jmp
test
in
push
or
mov
dec
or
stos
xchg
jg
cmp
into
sbb
cmpsb
xor
lods
jns
xchg
jbe
sub
fsubs
mov
inc
pushf
sub
lcall
popf
push
arpl
movsb
jae
and
rcll
jge
pop
add
push
movsl
movsl
int3
pop
or
xor
int
add
add
add
add
cmc
les
push
rcr
dec
repnz
sti
cs
or
sub
es
lods
xor
sbb
or
and
arpl
ljmp
repz
mov
cmp
fstpl
dec
out
daa
xlat
pop
cmp
in
xor
fcoml
or
out
das
jne
inc
mov
cmp
xchg
mov
hlt
lret
in
inc
add
pop
lea
add
lods
in
popf
mov
lret
icebp
cltd
imul
inc
scas
aaa
lock
lcall
imul
mov
pause
or
arpl
pop
shll
mov
mov
call
or
cmc
mov
shr
push
jl
cltd
cmp
stc
sti
jmp
jns
int3
loope
sub
lea
decl
repnz
cmp
or
jmp
test
dec
scas
cmp
jnp
and
bswap
ds
in
jno
incl
je
xchg
sti
xchg
js
adc
xchg
push
scas
mov
cmpsb
push
pop
mov
push
cmp
loopne
mov
mov
bound
sbb
orl
mov
in
add
sbb
ficoms
mov
mov
sti
mov
and
push
pop
jb
and
leave
and
fldl
inc
pusha
popa
mov
lcall
push
sbb
sub
pop
sti
cmp
pop
inc
pusha
loope
sbb
sub
or
ss
mov
imul
cmp
in
aaa
in
and
xor
notb
mov
lea
or
shr
movsl
push
sbb
out
bound
mov
adc
mov
subl
lret
imul
pop
xchg
or
push
inc
add
mov
mov
insl
or
shlb
mov
sbb
popa
sub
and
jae
adc
dec
repz
fldt
or
lds
pop
cmp
fs
add
xchg
push
push
insl
imul
xchg
pusha
mov
jl
fwait
das
or
jnp
dec
enter
xchg
adc
pop
or
movsb
iret
sub
sub
and
mov
das
fstps
mov
fucomip
fbstp
cmp
cltd
jmp
sbb
or
movsb
or
sub
shl
push
or
mov
int
xchg
rorl
xlat
cmpsl
push
loope
ret
testb
xchg
mov
mov
push
loopne
xchg
lds
sub
arpl
aas
sub
xchg
inc
rorl
push
mov
jge
jmp
outsl
cmp
add
inc
fbld
inc
ss
lds
movsl
popa
pop
pop
ja
xchg
push
mov
dec
pop
adcb
insl
addl
mov
stc
add
push
inc
cmp
mov
test
inc
aad
pop
inc
dec
mov
dec
iret
push
ret
xchg
or
mov
and
adc
rolb
add
or
ret
dec
dec
dec
dec
sub
call
and
mov
ret
push
mov
or
outsl
fisttpl
and
lcall
push
sarb
push
mov
pop
rorb
loop
dec
out
fwait
mov
call
jns
dec
lret
movb
pop
adc
imul
inc
stc
data16
and
mov
pushl
jg
ja
mov
push
into
test
sub
sub
lcall
xor
mov
insl
add
mov
xchg
cmp
sti
lret
dec
sbb
imul
mov
sbb
jns
xchg
pop
ja
bound
sub
pushl
mov
fstpt
mov
std
adc
outsb
xlat
xchg
int3
aad
fwait
mov
ljmp
movsl
pop
add
xchg
mov
scas
mov
jne
cs
adc
jecxz
decl
xor
adc
jl
mov
sub
jle
stc
popa
jno
adc
xor
lcall
xchg
inc
rolb
fistps
push
out
sbb
push
ficompl
popf
iret
out
mov
and
lcall
cmp
int3
push
or
push
mov
jge
pop
mov
or
push
ljmp
xchg
or
add
cmp
out
dec
cmpsl
or
insl
sub
push
pop
mov
jl
lret
inc
adc
or
shl
inc
sbb
or
xor
lcall
int
lret
jb
aam
mov
xchg
push
testl
cli
sarl
ja
fdivr
leave
icebp
rcrb
in
mov
rcr
xor
mov
shll
jae
add
jle
lret
sub
jo
cmp
call
aam
jle
dec
scas
icebp
outsl
mov
sahf
xlat
into
mov
ljmp
shlb
pop
sahf
xchg
fwait
insl
repnz
lret
pushf
repnz
mov
clc
push
ss
call
or
sub
mov
and
push
test
sub
mov
leave
je
mov
add
xchg
cmp
fwait
and
pop
xchg
test
outsw
mov
jno
add
mov
dec
mov
xchg
fwait
in
xorb
adc
sub
jmp
cmc
clc
call
mov
lds
gs
pop
xor
clc
hlt
fsubrl
inc
dec
iret
cmp
hlt
pop
inc
adc
decl
inc
pop
dec
lods
leave
cmp
pop
popa
cmp
xor
mov
decl
out
push
xchg
call
test
xchg
push
pop
sub
imul
jmp
call
sarb
inc
subl
aad
cmpl
lds
mov
sub
mov
cmpsl
jns
xor
xor
sarl
pop
xor
sbb
orb
movsl
iret
leave
movsb
jmp
push
ljmp
sub
cmp
sbb
adc
sub
lea
out
jmp
je
cmpsb
jle
cld
inc
push
cltd
ljmp
rcr
cmpsl
mov
add
pop
scas
arpl
cld
mov
repnz
repz
nop
push
or
cmp
das
cmp
and
jmp
jle
int3
mov
inc
into
lcall
test
xchg
shll
push
ror
call
sbb
repnz
mov
pusha
lods
xchg
jg
adc
xchg
add
in
gs
shl
mov
jmp
pop
cld
sub
sbbb
cmp
fisttpl
add
lock
ljmp
ljmp
push
out
lret
out
in
mov
aaa
int
cmpsl
xor
scas
cltd
push
aas
outsb
pushl
daa
mov
fidivrs
data16
lock
imul
ret
fcmovbe
xor
clc
decl
inc
int
mov
out
jmp
dec
or
divl
or
sub
stc
sbb
nop
jg
push
test
jb
inc
dec
iret
repz
data16
test
fldt
jno
cmp
jg
int
mov
dec
jae
cmp
xor
ja
push
addr16
movsb
pop
fbld
dec
mov
decl
xchg
cmpsl
popf
out
adc
sbb
push
sbb
jge
jns
or
and
mov
cmpsb
pop
test
cmp
popl
xchg
or
mov
scas
mov
ljmp
jge
imul
outsl
mov
sti
cli
jg
popa
cmp
js
lcall
mov
outsl
gs
sbb
testb
in
pop
mov
jle
movsb
int
inc
sub
mov
fimull
mov
push
loop
add
fdivr
pushl
and
clc
bound
fst
shl
stc
pop
adc
adc
movsl
cmp
or
stos
and
adc
inc
test
mov
fadds
add
add
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
xor
adc
je
jg
outsb
sar
pushl
nop
lods
push
dec
ljmp
jg
insl
jmp
adc
jbe
fidivl
sbb
pushl
pop
lock
xchg
xor
pop
jae
sub
pop
sub
test
dec
xchg
cmpsb
ds
ljmp
inc
or
dec
dec
ljmp
jnp
add
adc
push
aaa
adc
pushl
sahf
push
inc
fwait
outsl
lock
mov
pop
lret
mov
notl
jl
int
or
dec
cmp
jmp
push
lock
fldl
push
jne
push
cmpsb
cld
jl
dec
in
mov
mov
cli
lods
jmp
dec
imul
jmp
loopne
stc
pushf
cmc
xor
add
inc
push
mov
psubw
std
push
cmp
lds
mov
out
aaa
mov
sbb
mov
and
mov
out
push
or
mov
mov
add
adc
fldl
lods
sub
decl
pop
cmpsl
push
in
scas
rcrb
andl
popa
jo
call
int3
sbb
orb
add
lcall
and
fwait
lock
mov
cmpl
inc
lea
pop
fidivrs
inc
xor
mov
pop
popa
adc
repnz
int3
scas
adc
push
push
push
pop
jns
xor
rorl
xor
jp
test
sub
xor
xor
es
call
sub
cmovge
ucomiss
sbb
loopne
add
cltd
mov
inc
or
inc
sub
test
mov
jle
insb
addr16
gs
out
fidivl
mov
stos
cmp
in
out
jle
cmp
xor
incl
testl
mov
pop
aad
dec
jns
mov
cld
adc
orb
push
pushl
xchg
xor
jl
mov
loop
outsl
xlat
fcoms
xor
xchg
sbb
fdiv
and
mov
gs
ljmp
dec
cld
mov
shlb
inc
fmulp
mov
clc
roll
push
ljmp
sbbb
adc
lock
imul
add
inc
aas
aam
mov
in
sbb
cmpsb
sbb
incl
stc
mov
push
arpl
push
cltd
hlt
hlt
and
sti
mov
inc
out
ds
jp
ljmp
int
rcl
xor
xchg
das
jo
cmp
mov
flds
int
cwtl
inc
lret
repnz
sbb
jns
nop
dec
in
dec
dec
sub
movsl
shrb
lock
call
inc
sub
add
stos
push
mov
out
adc
sub
inc
mov
rol
decl
imul
sbb
or
hlt
inc
enter
dec
test
xchg
insl
loope
adc
lcall
aas
or
cmp
pmaddwd
fildll
mov
cmc
jns
stos
or
pop
or
lcall
in
shll
and
adc
daa
pop
jge
popf
mov
loope
call
inc
xchg
push
cmpsl
push
xor
shrl
mov
cwtl
into
sbb
ljmp
pop
mov
cwtl
xor
lods
clc
lock
or
mov
cmp
ljmp
pop
mov
inc
cmpsb
sub
test
inc
jl
hlt
loope
int
nop
jecxz
orb
and
and
mulb
clc
in
sahf
adc
call
jmp
xchg
push
adc
inc
lret
inc
fbld
pop
nop
mov
outsl
sub
decl
inc
repz
add
loopne
inc
repnz
push
fdivs
out
xchg
decb
out
sub
call
or
mov
shr
mov
aam
sbb
ljmp
loopne
sbb
xchg
dec
sbb
daa
test
orb
fcmovnu
xor
jns
incl
std
mov
jbe
stc
mov
mov
adc
cmp
jmp
clc
fs
cmc
pushl
ds
push
lahf
jb
adc
xchg
and
lods
xor
cltd
sbb
das
cmp
incl
cmp
inc
mov
ds
in
mov
out
aas
or
and
cmpsb
cltd
ljmp
xor
in
vunpcklps
mov
std
push
mov
pop
dec
cmp
or
push
bound
je
mov
movsl
lahf
dec
fdivl
ljmp
add
cmp
rol
mov
sti
xor
push
cmp
int
xor
out
clc
ljmp
cmp
fisttpll
andb
xor
fs
les
xchg
cli
mov
push
pop
jg
pop
push
pushf
adc
sub
imul
ljmp
movsl
and
nop
and
ret
xor
jmp
fsubrs
cmp
jmp
push
out
jno
aas
inc
inc
popf
mov
xchg
sbbb
sub
out
rcll
inc
push
sbb
lock
movsl
bound
in
mov
mov
loop
loope
mov
clc
hlt
ret
daa
add
jbe
ljmp
dec
repnz
mov
pop
loop
inc
or
sub
push
cld
ljmp
jge
les
sarl
dec
jg
pop
add
inc
jg
jb
adc
ret
pop
repz
adc
mov
in
jo
daa
lods
in
shrl
mov
jne
rcr
add
stos
sub
jmp
push
lcall
idivl
mov
fdivrl
hlt
mov
xchg
mulb
incl
adc
shll
cld
dec
jle
inc
mov
bound
int
outsl
mov
imul
mov
xchg
scas
lods
xor
mov
pop
inc
dec
inc
push
aaa
cs
dec
mov
jl
lds
mov
ret
jne
mov
add
clc
jns
or
sub
inc
or
subb
call
cmc
lret
adc
rclb
xchg
mov
push
add
sub
rclb
pop
cwtl
pop
lock
decl
xor
mov
sub
and
dec
stc
push
or
inc
pop
pop
cmpsl
cmp
sbb
add
scas
ror
cmp
sbb
sub
lcall
xchg
jl
add
inc
or
mov
test
adc
ljmp
test
xor
sbb
jne
stos
in
and
mov
push
idivl
fnsave
mov
push
adc
sbb
das
clc
mov
fsubrp
sub
out
inc
aam
iret
scas
scas
add
or
decl
push
movb
pushf
mov
push
and
pop
jg
jmp
int
xor
push
bnd
pop
in
es
popa
cmp
push
cmp
add
bound
movsb
pop
stc
test
cmp
mov
sub
std
or
push
test
roll
mov
xor
jge
mov
inc
movsl
jecxz
aad
mov
addb
push
jecxz
test
cltd
fidivs
dec
aaa
or
incl
and
sahf
lods
leave
or
pop
and
dec
std
push
mov
call
xchg
fstpl
inc
or
sbb
fimuls
jg
dec
mov
pusha
xlat
mov
imul
pop
sub
popf
in
lret
int
incl
mov
push
lods
arpl
pop
sub
enter
incl
or
clc
cld
shlb
std
mov
data16
or
sbb
sti
orl
les
adc
mov
push
xchg
pushw
or
xchg
pop
inc
mov
or
fstl
pop
push
std
cmp
jmp
js
lcall
lods
push
sti
cmp
lcall
push
xor
mov
test
jg
enter
inc
adcl
mov
mov
cmp
mov
shlb
and
push
sub
out
sbb
jbe
fstpt
mov
das
mov
xor
cmp
xchg
mov
cli
cmp
push
sbb
and
jge
push
call
aaa
aas
rol
pusha
ljmp
shll
jns
rcll
fidivs
inc
adc
mov
nop
fisttps
sub
or
xor
pop
push
out
and
ja
or
fwait
ljmp
add
leave
std
and
pusha
movsb
mov
jae
inc
pop
cs
jg
in
cli
jp
sub
inc
mov
push
mov
dec
into
les
repz
sti
xchg
cs
decl
call
or
add
fs
cmp
fs
mov
insb
pop
mov
ljmp
mov
test
cmp
daa
add
push
dec
in
push
cmpsb
ret
mov
in
decl
cld
and
and
mov
jp
movsl
mov
out
decl
jo
orb
sbb
jl
icebp
pop
cs
jno
xchg
shlb
decl
iret
push
popf
and
fnstcw
mov
jl
jg
aam
js
pop
call
push
push
jne
mov
outsb
ja
aam
ret
xchg
das
cli
pop
clc
pop
test
and
mov
movq
mov
add
adc
add
adc
into
xor
sub
pushl
sahf
inc
ret
pop
cmpsb
xchg
mov
sbb
mov
in
imull
arpl
jl
loope
outsl
xchg
jle
sarl
pushf
stc
jl
cmp
cmpsb
mov
mov
rolb
decl
xor
mov
push
in
std
movsl
push
movsb
cmpsl
es
movsl
xchg
aam
inc
xchg
mov
scas
call
call
xlat
rcl
adc
sti
fstl
mov
addb
decl
ljmp
sti
pop
inc
jbe
xchg
pusha
stos
icebp
bound
dec
outsl
jo
out
cli
ljmp
cli
or
repnz
add
bnd
xchg
pop
test
das
jbe
dec
bts
or
inc
cltd
mov
fnstsw
push
adc
add
jnp
nop
pop
inc
je
out
repnz
mov
xchg
inc
jae
sub
pushf
and
call
pusha
mov
es
leave
fdivs
hlt
mov
mov
xchg
scas
cld
hlt
cmp
pop
test
ds
fdivr
call
dec
outsl
xchg
dec
and
jne
test
sub
scas
adc
lods
and
shll
inc
jmp
pop
and
push
xchg
xchg
push
mov
stos
sub
inc
leave
shr
jg
inc
outsw
mov
xor
ja
inc
push
rcrb
push
test
das
or
mov
mov
jne
inc
and
aaa
std
mov
pop
lret
mov
cmp
dec
js
not
stos
clc
pushf
call
dec
xor
mov
adc
cwtl
pop
jge
scas
xlat
or
pop
lcall
call
jns
fs
inc
jl
inc
imul
xchg
les
cli
pop
push
adc
sbb
pop
shr
dec
adcb
movsb
pop
lock
pop
int3
jne
int3
mov
popf
popf
pop
loopne
pushl
jae
sub
inc
xor
pop
andb
adc
mov
fwait
dec
jg
ljmp
mov
or
outsl
in
jmp
stos
xor
std
jb
ljmp
ficoml
fchs
test
testl
test
sub
push
mov
incl
neg
cmc
and
inc
push
mov
inc
clc
jo
jecxz
sbb
mov
subb
rcrb
jge
call
insl
fdivr
adc
add
mov
cmp
das
fsubrs
jnp
jle
cmp
xchg
daa
xlat
mov
mov
inc
jg
ljmp
mov
add
xor
icebp
decl
mov
jecxz
fdivl
test
sbb
sbb
push
fcomip
jmp
jo
lahf
bndstx
dec
stos
adc
xlat
loopne
scas
mov
fisttpl
xor
jg
pop
scas
in
xchg
mov
repnz
bound
sub
das
in
adc
fcmove
dec
xchg
or
iret
fildl
div
les
fildl
out
test
lcall
out
sahf
xor
stc
and
jl
es
nop
adc
decl
pop
or
jg
fdivl
adc
mov
scas
xchg
cmp
imul
cmp
lock
stos
or
lahf
in
add
mulb
nop
call
cli
lcall
iret
test
push
and
addb
dec
aaa
xor
fxch
out
lock
mov
repnz
lods
out
fxch
cmp
push
ror
or
incl
test
cmc
push
divb
in
rcrl
pusha
sub
ja
pop
adc
jle
mov
and
pop
mov
sub
or
adc
test
bound
sub
int3
hlt
and
mov
movsl
loop
sub
dec
sub
dec
inc
lcall
outsl
sbb
outsl
out
lea
inc
movsb
sti
test
insl
cmp
in
cmp
adc
add
push
dec
scas
pushl
dec
add
mov
fwait
clc
cmpsl
adc
inc
jb
shrl
mov
pushl
std
adc
insb
or
sti
js
add
clc
sub
and
or
incl
jne
add
pop
pop
cmpsl
call
cmp
push
fstpl
xchg
inc
test
decl
cmp
repnz
inc
out
mov
cld
sbb
inc
addb
sbb
jg
add
cmc
aad
outsl
adc
fisttps
xor
jnp
aaa
sarb
clc
cli
sub
jg
incl
imul
fwait
sub
movsb
das
cmp
mov
roll
sarb
scas
pop
dec
fstps
in
icebp
incl
lret
lock
fwait
popf
adc
xlat
mov
and
inc
lea
das
xor
xlat
je
dec
xor
fisubrl
pushf
cmp
fldl
xchg
ljmp
je
inc
lea
sahf
mov
fcoms
xchg
arpl
out
js
cmp
add
lock
mov
into
mov
mov
sahf
pop
sub
jecxz
aam
xchg
lcall
mull
dec
aaa
aad
out
mov
and
cmpsb
dec
mov
and
leave
sbb
cmp
decl
adc
int
mov
pusha
mov
fbld
jmp
jp
jmp
fisttpl
pop
dec
in
dec
nop
cld
dec
popa
or
jae
inc
lods
add
jb
std
call
insb
xchg
xor
mov
das
xor
cmp
pop
out
mul
jo
sbb
fwait
mov
pushl
mov
xchg
addr16
call
mov
xchg
push
in
shrl
jle
call
daa
sbb
jecxz
std
mov
xchg
into
cmc
fdivs
pusha
fdivs
decl
lock
push
dec
pop
lds
hlt
mov
jns
mov
hlt
aas
mov
imul
push
clc
cmp
test
outsb
pop
or
call
sbb
ljmp
xlat
je,pt
mov
aam
jb
cmp
mov
pop
and
xchg
push
mov
mov
mov
pop
sub
je
out
cli
sbb
push
cltd
add
fstpl
adc
pop
outsl
mov
push
sbb
xor
push
rclb
or
cmp
or
daa
aas
jle
jb
pusha
push
notb
jecxz
or
and
decl
callw
shrb
xor
inc
aad
mov
aas
lcall
sbb
shl
jle
pop
enter
enter
xor
jnp
ret
lahf
pop
ljmp
imul
mov
push
rol
xor
adc
pushf
das
xor
aam
xchg
dec
inc
inc
jle
add
xor
leave
inc
ss
push
mov
jecxz
inc
ljmp
faddp
add
fidivl
jae
cld
lcall
sbb
cld
lcall
out
pop
ret
test
mov
gs
mov
fidivl
sbb
mov
pop
cmc
loope
mov
divb
xchg
sub
sub
sar
call
sbb
jp
jmp
fistps
push
push
std
mov
es
xchg
mov
mov
js
into
xchg
xchg
aaa
sbb
in
jno
loop
xor
aaa
mov
dec
incl
mov
sub
fdivl
stos
and
push
mov
loop
lcall
add
sbb
mov
test
push
scas
push
add
das
cmpb
cmpsb
ds
fiaddl
add
and
shlb
fwait
mov
movsb
push
cmp
testl
fsubrs
lock
and
sti
nop
outsl
or
lcall
je
out
add
xchg
cmp
pop
fistpl
mov
dec
mov
fisttps
cmp
mov
add
mov
or
test
out
test
movsb
aam
adcl
mov
roll
mov
cmp
incl
aaa
mov
in
les
and
icebp
cmp
outsb
push
cmc
test
shlb
cmp
call
test
aas
and
push
mov
pop
aad
adc
push
mul
mov
incl
jmp
lds
cld
mov
popa
loop
test
sbb
fdivl
mov
inc
mov
loopne
adc
jmp
sbb
and
into
clc
sbb
dec
ja
in
lods
cli
fisttpl
jb
mov
push
pop
adc
cmpb
andl
xchg
sub
cmpb
decl
aam
cli
or
pop
jb
add
sub
sub
in
imul
ja
xchg
sbbl
adc
and
outsl
scas
mov
dec
inc
cmp
out
rcr
rcrl
test
imul
lret
clc
dec
cmpsl
or
lods
gs
fwait
loop
inc
icebp
mov
adc
outsb
cmp
push
xor
pushl
pop
pop
dec
movsb
into
mov
scas
jmp
and
inc
ret
inc
push
add
mov
xchg
push
fists
cli
dec
lahf
xor
mov
movsl
subl
inc
cmp
insl
and
pop
out
xorl
addr16
pushl
ds
icebp
daa
fsubrl
insl
mov
in
dec
fadds
mov
loop
sbb
cmpsb
xor
adcb
mov
push
lock
or
sahf
stos
outsl
sub
mov
popf
int
and
loop
test
incl
data16
mov
test
loop
cld
outsb
or
xchg
lret
mov
xchg
lods
dec
out
cmp
incl
fmuls
cmp
xchg
or
mov
mov
adc
fstpl
pushf
cmp
call
jo
sahf
repz
ret
adc
push
mov
or
lds
ljmp
mov
push
push
fsubp
inc
pushf
das
repnz
scas
incl
and
lods
and
popa
clc
cld
cli
add
pop
sub
pop
mov
ljmp
call
cmpl
mov
sub
mov
stos
incl
sbb
addr16
addr16
shlb
in
scas
sub
in
inc
stc
cwtl
mov
subl
jns
push
dec
push
test
mov
add
cmp
scas
xor
mov
ljmp
leave
push
mov
jnp
shll
mov
loope
ljmp
xorl
shrb
mov
adc
js
pop
scas
das
mov
jnp
xchg
sti
fucomp
stos
xor
or
cmpsl
pushw
out
cmc
push
cmp
cmp
jmp
data16
je
mov
icebp
stos
push
outsl
dec
or
jecxz
inc
ret
cmpsl
fisttpl
ljmp
fs
popa
aas
lret
lea
mov
push
mov
imul
jecxz
lcall
aad
sti
pmullw
push
jb
into
inc
and
jmp
jns
sbb
sub
out
xchg
imul
xor
in
mov
xor
movsl
stc
push
adc
jg
pushl
movsb
mov
adc
insb
inc
sbb
lds
inc
scas
mov
mov
call
push
and
jg
mov
sbbb
insb
xor
ljmp
jne
repnz
push
add
lret
cld
into
rorl
outsb
pop
out
pop
cmpsb
ljmp
lret
sbb
push
movsl
cmp
sbb
sbb
jecxz
adc
popa
sbb
call
cwtl
push
test
loop
sub
mov
xor
sub
mov
mov
cs
or
mov
sub
sbb
ja
ret
out
dec
push
mov
push
int3
mov
mov
decl
pop
mov
dec
inc
jns
iret
mov
sti
mov
mov
sbb
ja
jb
mov
and
insb
mov
pop
add
mov
mov
fnstcw
popf
push
arpl
lds
adc
add
int3
pop
cmp
add
push
dec
lock
std
test
je
aas
jno
push
jmp
pop
testl
add
jecxz
cmc
pop
loop
fldlg2
popf
loopne
fidivrl
add
inc
and
cmp
js
jne
mov
pusha
mov
mov
dec
xor
push
push
mov
mov
push
jno
mov
adc
sahf
mov
std
jmp
popa
gs
push
std
loopne
pop
push
ds
into
in
das
imul
ret
sti
xlat
pushf
push
xchg
mov
sub
dec
mov
addb
mov
add
ror
ds
sub
adc
fdivs
sbb
addl
or
pop
flds
sbb
loopne
adc
mulb
pushl
mov
arpl
arpl
aad
xchg
imul
cmp
xchg
pop
mov
call
sub
xchg
jge
push
fs
dec
cmpsb
sahf
clc
dec
inc
std
sbb
jle
xchg
bound
mov
mov
nop
out
outsl
cmpsl
fwait
scas
sbb
mov
shll
decl
pop
inc
push
push
xchg
sbb
subl
inc
jge
push
mov
imul
jmp
lret
dec
push
clc
imul
ret
sub
mov
push
inc
dec
mov
cld
decl
icebp
iret
inc
jp
mov
fidivrs
jg
lea
dec
or
push
cmc
aad
push
push
push
xchg
fidivrl
mov
imul
dec
out
mov
ljmp
das
pop
daa
sti
push
int
popf
mov
ret
les
ss
arpl
and
lcall
cmpps
fists
es
xchg
into
idivl
inc
mov
jne
or
call
scas
dec
stos
repnz
scas
int3
leave
push
mov
sahf
add
xor
mov
add
mov
testl
mov
jne
and
sbbl
mov
sbb
pushl
cmp
push
repnz
lret
xchg
imul
ficomps
fcomps
sub
incl
mov
fbld
in
pop
mov
imul
jl
jecxz
test
jg
jb
imul
push
testl
sbb
daa
out
xor
test
fcomip
ljmp
xor
sbb
stc
adc
xchg
mov
movsb
jbe
or
mov
cmp
popf
mov
sub
stos
cmp
jg
decl
jp
rclb
mov
andb
js
xchg
fdivrp
mov
push
cmpsb
fidivl
sarl
out
jecxz
cmpsl
inc
cltd
lods
insb
ljmp
push
mov
pop
mov
sbb
mov
lahf
out
mov
jmp
jnp
out
xchg
popf
gs
mov
mov
sub
lcall
mov
stc
pushf
dec
jmp
ljmp
loope
push
loope
cmpsl
sbb
mov
mov
xchg
jg
inc
call
jge
sub
ljmp
test
mov
mov
fisubrl
sbb
addl
int3
outsb
mov
push
inc
sbb
int3
mov
mov
mov
int
adc
push
in
cmp
jmp
lea
ret
ficompl
cmp
fcmovbe
jnp
insl
rcl
movsb
lods
jo
jp
fdiv
and
pop
test
std
mov
dec
mov
xor
mov
jo
iret
dec
test
aas
decl
add
outsb
sub
mov
inc
fsubrl
mov
cmpb
js
push
clc
mov
pop
test
es
lret
daa
pop
rcll
mov
roll
aad
cld
ljmp
and
lret
or
lods
cmp
mov
cltd
clc
and
lcall
iret
adc
das
rorl
jns
adc
in
sti
data16
xchg
xor
fimull
popa
push
roll
sbb
xchg
cwtl
fnstsw
adc
inc
scas
out
std
mov
decl
pop
cmp
jmp
xor
fstps
adc
icebp
ljmp
call
dec
das
pop
insl
sbb
cmp
pop
fmulp
hlt
test
fistl
sbb
ficoms
xchg
cld
leave
daa
mov
icebp
jecxz
sub
imul
fstpl
popa
aas
sub
and
nop
adc
mov
xor
adc
stc
negb
lcall
arpl
rcr
in
insb
cmp
jmp
and
mov
xchg
xor
xor
jg
jae
insb
and
repz
aas
push
or
ja
dec
inc
ljmp
fwait
push
incl
shlb
jae
pop
rcrb
out
adc
outsb
pop
cmp
pushl
rcrl
cmc
roll
in
xchg
xchg
cmpsl
scas
daa
xchg
test
mov
data16
lock
call
cmp
scas
dec
or
mov
xor
imul
pop
inc
cmp
adc
mov
lea
lea
shr
mov
and
push
mov
iret
stc
sbb
iret
lcall
sahf
xchg
ja
adc
push
icebp
sub
fdivrp
mov
iret
pop
push
xchg
xchg
fs
pop
imul
ds
and
and
mov
popf
pop
pshufw
pusha
into
cmp
or
fisubrs
cmc
out
lea
lcall
pop
cwtl
xchg
and
jno
cmp
pop
xchg
adc
add
xchg
inc
fdivrs
insl
repnz
lock
mov
mov
mov
test
in
push
or
mov
dec
or
stos
xchg
cmp
into
sbb
cmpsb
xor
lods
jns
xchg
jbe
sub
fsubs
mov
inc
pushf
sub
cld
lcall
jae
and
rcll
jge
pop
add
push
movsl
movsl
int3
pop
or
xor
int
or
or
adc
enter
xchg
inc
add
cmc
les
push
rcr
enter
call
cs
or
sub
es
lods
xor
sbb
or
and
arpl
pushl
fdiv
xchg
mov
cmp
fstpl
dec
out
daa
xlat
pop
cmp
incl
fcoml
or
out
das
jne
inc
mov
cmp
xchg
mov
hlt
lret
in
inc
incl
fildl
lea
add
lods
in
popf
mov
lret
icebp
cltd
imul
inc
scas
aaa
lock
imul
decl
jle
scas
pause
or
arpl
pop
shll
mov
mov
decl
and
mov
shr
push
jl
cltd
cmp
stc
sti
jmp
jns
int3
loope
sub
lea
aas
cmp
or
jmp
test
dec
scas
cmp
jnp
and
bswap
ds
in
jno
jnp
pushl
aam
xchg
js
adc
xchg
push
scas
mov
cmpsb
push
pop
mov
outsl
or
loopne
mov
mov
call
shrb
call
or
pusha
add
sbb
mov
cmp
pop
jb
shll
push
jb
and
leave
and
pusha
ja
dec
jb
mov
or
pusha
push
mov
and
cmpsb
mov
mov
shlb
push
or
test
sbb
sub
or
fisubrl
inc
imul
cmp
push
pop
sub
xor
push
arpl
dec
lea
sub
add
cmp
push
insl
int
mov
sbb
push
cmpsb
jae
lret
imul
pop
dec
or
push
push
inc
push
fdivs
notl
nop
lods
loopne
imul
sti
imul
mov
aaa
sti
imul
mov
dec
repz
mov
movsl
xchg
inc
sub
mov
xor
dec
nop
pop
add
orb
imul
inc
and
fldt
repnz
or
jnp
dec
xchg
and
and
imul
sub
sub
inc
push
mov
add
mov
ss
fbstp
jmp
mov
jmp
sbb
and
movsb
sub
sub
dec
in
or
sub
xchg
add
cmpsl
push
loope
or
xchg
mov
mov
ret
cmp
sbb
lds
sub
xchg
daa
aas
sub
xchg
inc
shr
mov
aad
jmpw
sub
outsl
cmp
or
cmc
sub
adc
pop
jnp
ficoml
inc
fnstenv
pop
in
xchg
mov
inc
or
addl
and
in
sbb
inc
cmp
sub
dec
test
push
cmp
inc
dec
or
iret
push
ret
pop
sub
pop
loopne
andb
pop
push
adc
test
add
and
ret
dec
dec
dec
dec
sub
call
and
add
mov
ret
or
outsl
fisttpl
and
push
call
mov
pop
push
mov
pop
rorb
loop
dec
out
fwait
mov
call
decl
movb
pop
adc
imul
inc
stc
data16
and
mov
sbb
push
add
fidivs
mov
push
into
test
sub
sub
lcall
cmp
or
dec
insb
mov
insl
add
mov
xchg
cmp
sti
lret
sbb
dec
imul
mov
sbb
jns
xchg
pop
ja
bound
sub
jo
mov
fstpt
mov
std
adc
outsb
xlat
xchg
int3
aad
fwait
mov
mov
add
xchg
mov
scas
mov
jne
cs
adc
jecxz
lea
jmp
into
xor
adc
jl
mov
sub
jle
stc
popa
jno
adc
xor
xchg
jmp
inc
rolb
fistps
push
out
sbb
push
ficompl
popf
iret
out
mov
and
and
cmp
int3
push
or
push
mov
jge
pop
mov
or
push
sub
call
push
push
xchg
or
add
cmp
out
dec
cmpsl
or
insl
sub
push
pop
mov
dec
inc
adc
or
shl
inc
sbb
or
xor
int
in
lret
jb
aam
mov
xchg
push
testl
cli
sarl
ja
fcomp
in
dec
icebp
rcrb
in
mov
rcr
xor
mov
shll
jae
add
dec
sub
jo
cmp
call
aam
jle
dec
scas
icebp
outsl
mov
sahf
xlat
into
mov
loop
pushl
add
mov
fwait
insl
repnz
lret
pushf
repnz
mov
clc
push
ss
decl
ss
mov
and
push
test
sub
mov
leave
je
mov
dec
xchg
pop
cld
cmp
fwait
and
pop
xchg
test
outsw
mov
jno
add
mov
dec
xchg
fwait
in
xorb
adc
sub
jmp
cmc
clc
push
mov
decl
gs
pop
xor
clc
hlt
fsubrl
inc
dec
iret
cmp
hlt
pop
inc
adc
cmp
dec
xchg
inc
pop
dec
lods
leave
cmp
pop
popa
cmp
xor
mov
out
call
call
test
xchg
push
pop
sub
imul
jmp
pop
incl
push
sarb
inc
subl
aad
cmpl
lds
mov
sub
jmp
push
addr16
xor
sarl
pop
xor
sbb
orb
movsl
iret
leave
movsb
in
ljmp
sub
cmp
sbb
adc
sub
lea
out
je
incl
cmpsb
jle
cld
inc
push
cltd
ljmp
rcr
cmpsl
mov
add
pop
scas
arpl
mov
decl
fcmovne
repz
nop
push
or
cmp
das
cmp
and
lcall
mov
inc
into
lcall
test
xchg
shll
push
ror
sbb
inc
rolb
pusha
lods
xchg
jg
adc
xchg
add
in
gs
shl
mov
cld
sub
sbbb
cmp
fisttpl
add
lock
ljmp
stc
clc
jmp
out
lret
out
in
mov
aaa
int
cmpsl
xor
scas
cltd
push
aas
outsb
mov
jmp
leave
stc
daa
mov
fidivrs
data16
lock
imul
ret
fcmovbe
xor
mov
mov
out
jmp
dec
or
divl
or
sub
stc
sbb
nop
imulb
dec
mov
inc
dec
iret
repz
data16
test
fldt
jno
cmp
int
call
lret
dec
jae
cmp
xor
ja
push
addr16
movsb
pop
fbld
dec
mov
sbb
ljmp
popf
out
adc
sbb
push
sbb
jge
jns
or
and
incl
fwait
cmp
popl
xchg
or
mov
scas
mov
mov
mov
call
clc
data16
cli
jg
popa
cmp
js
cmp
jg
outsl
gs
sbb
testb
in
pop
mov
movsb
int
inc
sub
mov
fimull
mov
push
loop
add
fdivs
cld
jmp
inc
lods
clc
bound
fst
shl
stc
pop
adc
adc
movsl
cmp
or
test
cwtl
inc
inc
adc
adc
cmpb
and
push
adcl
adc
add
mov
add
push
lea
sti
mov
mov
push
sub
jmp
pop
jbe
outsl
xchg
out
mov
mov
sahf
mov
sbb
mov
call
cmp
push
mov
cmp
jmp
push
rorb
das
inc
lret
inc
popf
pop
jg
iret
dec
fs
lock
mov
imulb
lret
xchg
and
js
decl
mov
mov
insb
xchg
insw
loopne
ret
pusha
mov
xor
jle
pop
arpl
mov
mov
outsb
xchg
inc
sbb
sti
ds
mov
clc
int3
out
mov
call
adc
and
cwtl
mov
xchg
jb
add
aas
sbb
mov
jmp
icebp
or
mov
sub
xchg
pushf
or
mov
repz
jo
ljmp
jmp
push
cmpsl
mov
lahf
xchg
cmp
sbb
push
jns
xchg
xchg
pop
out
rcrl
ret
call
push
int
xchg
mov
jecxz
lock
mov
cmp
ret
fucomip
dec
shrl
call
sbb
stos
mulb
cwtl
jmp
ja
jle
sbb
cmc
mov
fstpt
lcall
jae
inc
rcl
js
jle
rolb
nop
dec
pop
inc
out
gs
mov
aaa
call
xchg
sbbl
and
fwait
xor
cmp
xchg
fistl
call
imul
pop
or
test
sbbl
addl
ds
pop
add
pop
cli
inc
repnz
bound
sbb
cmp
sub
mov
pop
ljmp
mov
clc
stos
mov
cmp
je
test
test
loop
jl
ljmp
jmp
xor
xchg
sarl
pop
shlb
pop
shlb
mov
add
adc
shll
add
sub
loope
out
ret
dec
or
fs
aas
cmp
add
jmp
mov
mov
lcall
add
pop
in
mov
loope
inc
lahf
rcr
in
hlt
xchg
je
dec
lret
pushl
cmp
jae
fwait
inc
or
in
jae
fidivs
call
cld
cmp
cwtl
cld
ds
jbe
lea
or
sbb
or
jmp
mov
jmp
dec
jae
dec
dec
lods
cwtl
pop
icebp
push
and
addb
inc
add
xchg
incl
pop
add
adc
and
pop
sbb
mov
arpl
inc
lcall
cwtl
lock
lods
loop
xor
push
jecxz
dec
lods
cmpsb
test
jmp
stc
mov
mov
mov
and
loop
pusha
push
mov
jmp
jae
stc
imul
loop
pop
lods
mov
or
mov
adc
out
incl
dec
mov
cltd
outsl
in
cmpsb
imul
xchg
jmp
loop
push
int3
call
rorb
cmp
nop
loop
daa
ds
imul
mov
ds
in
lds
and
in
sub
mov
repnz
fbstp
incl
call
xor
or
adc
mov
add
mov
add
cmp
iret
mov
pop
rolb
cld
jg
imul
repz
mov
in
or
xchg
mov
les
jecxz
leave
dec
push
shlb
jmp
leave
mov
lock
sub
in
ss
inc
jg
idiv
flds
in
fdivs
hlt
push
pushf
stos
jmp
incl
and
xchg
imul
dec
leave
and
fbld
mov
popf
pushf
mov
insb
out
mov
enter
stc
repnz
jg
xchg
pop
loope
adc
les
flds
add
and
gs
mov
sub
orb
and
mov
jo
ss
call
out
imul
xchg
lret
mov
jbe
fbstp
fincstp
jg,pn
fildll
xor
insb
addr16
push
sbb
repnz
inc
xlat
sbb
jae
roll
sarl
push
cltd
into
mov
popf
fdiv
mov
mov
inc
lea
fdivs
cwtl
enter
xchg
jecxz
out
cmp
jae
cmpsl
imul
jns
or
fimuls
ficoms
jmp
fisttpl
mov
push
cs
cmc
aaa
iret
mov
mov
enter
jae
stc
pop
cs
jae
fisubrs
adc
into
ret
testb
jle
cwtl
ret
sahf
mov
and
aaa
out
mov
movsb
data16
xchg
and
mov
scas
adc
aas
incb
mov
loop
mov
cmc
arpl
inc
add
insb
mov
adc
add
ret
pop
scas
popa
bound
lcall
xchg
push
pusha
xor
lcall
roll
lret
inc
xor
loopne
scas
adc
inc
insb
push
and
push
adc
jns
sti
ljmp
or
xor
dec
imul
lret
mov
rcrb
push
fbld
leave
lret
mov
dec
mov
ss
inc
and
scas
arpl
out
ss
inc
hlt
lcall
jecxz
xchg
pusha
in
inc
adc
lahf
jae
push
or
mov
enter
out
mov
repnz
iret
and
xchg
out
push
pop
sar
shll
int3
stos
imul
ljmp
push
enter
and
orb
orb
fcomi
ljmp
or
or
dec
cmp
mov
in
pop
xor
call
inc
test
mov
insl
sbb
mov
mov
sub
pop
pusha
sti
jmp
imul
data16
imul
aas
mov
pushl
xor
xchg
push
out
push
cmpsl
ds
xchg
shl
out
push
add
jecxz
inc
mov
fists
stos
addr16
adc
xchg
out
call
add
push
xor
shr
adc
idiv
ljmp
adc
push
ljmp
jecxz
push
xchg
dec
inc
in
mov
mov
jecxz
mov
hlt
lret
adc
imul
xor
out
jg
call
pop
pop
sbb
fxam
iret
imul
imul
and
outsl
incl
lea
mov
jno
push
stc
outsb
push
nop
jae
push
stc
pop
lods
sbb
pop
stc
push
and
jb
push
push
pop
and
mov
sbb
test
fwait
xchg
mov
ss
ret
scas
push
dec
mov
cmp
stos
adc
jp
dec
lret
imul
jnp
imul
pop
push
ret
dec
xor
je
sbb
stos
repz
imul
jnp
stos
push
stos
fucomip
or
call
out
aad
mov
sbb
inc
loopne
jecxz
outsw
repz
out
in
sub
cwtl
lret
xor
push
jbe
repz
jg
cmp
add
jp
sbb
mov
pop
push
sbb
push
adc
pop
lods
sub
incl
clc
push
cld
mov
jp
sti
sbb
lods
leave
leave
push
hlt
pop
icebp
mov
xchg
mov
sar
iret
mov
lock
push
stc
sti
mov
push
and
jl
push
shll
push
push
outsl
fldt
call
mov
or
push
mov
js
mov
add
pop
cli
mov
or
xchg
jae
push
sbb
pushl
in
ljmp
sbb
xchg
leave
divl
je
jae
and
adc
stos
pop
inc
lds
mov
sub
push
ljmp
lods
adc
insb
stos
and
mov
in
mov
je
push
and
push
imul
add
in
and
outsl
sub
lahf
add
jg
aam
adc
dec
and
or
movsb
adc
pop
jl
lods
les
jmp
ljmp
andl
and
and
inc
adc
mov
jmp
addb
sbb
in
sbb
lea
pop
jg
xchg
dec
xor
pop
jne
push
aaa
call
jae
push
xor
push
jno
aaa
inc
jne
ss
push
dec
xor
dec
dec
aaa
push
jp
pop
dec
pop
jg
call
xor
dec
jne
jns
xchg
push
inc
imul
sbb
fistpll
dec
ja
push
ja
addr16
ja
imul
jae
xor
bound
pushl
push
cmp
dec
xor
jns
push
push
push
cmp
inc
jae
pop
jns
dec
jp
push
decl
push
ss
inc
inc
js
ja
push
jno
xor
aaa
dec
jno
fdivr
decl
inc
push
jne
ja
ss
jp
dec
jae
dec
jns
jno
jbe
addr16
in
imul
dec
inc
push
data16
aaa
push
dec
insl
xor
outsb
dec
inc
dec
push
jne
inc
std
dec
dec
xor
pop
push
jp
jbe
imul
inc
outsl
outsl
jne
jne
lcall
fcmovnb
ljmp
loopne
inc
push
pop
dec
inc
inc
inc
push
imul
cld
push
push
insb
bound
lock
adc
gs
inc
xor
outsl
pushl
imul
outsb
push
dec
popa
inc
dec
dec
dec
cmp
inc
push
dec
insl
jne
dec
mov
push
dec
inc
inc
je
dec
push
arpl
push
inc
xor
pushl
dec
push
dec
insl
xor
dec
jbe
xchg
xor
ja
lds
pop
jb
dec
pop
push
jno
stos
dec
jno
inc
imul
outsl
dec
inc
nop
insb
ss
insb
inc
push
ja
jns
insb
xor
or
pop
adc
xor
jp
inc
dec
dec
mov
adcb
inc
dec
jae
jo
fs
insb
add
cmp
loop
popa
je
or
outsb
sbb
add
dec
add
add
inc
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
out
cmp
xchg
push
into
loopne
clc
push
iret
repz
mov
push
sub
cmp
outsb
iret
repz
je
mov
cmpsb
out
sahf
testl
in
iret
repz
clc
add
push
and
inc
cmp
repz
pop
push
iret
pause
lcall
iret
rcr
in
add
push
and
inc
dec
jns
out
pop
bound
mov
jns
out
movsb
mov
sarb
jns
clc
or
xchg
push
and
jns
out
inc
dec
push
pusha
sahf
out
sahf
je
mov
out
ret
ljmp
ret
xchg
push
and
inc
jns
out
push
pusha
push
mov
jns
out
test
ror
repz
loopne
decb
les
sub
repz
push
pop
push
repz
repz
repz
ror
fdivp
repz
ds
xchg
push
sub
inc
iret
repz
push
bound
test
movsb
scas
ret
jns
iret
repz
clc
add
push
sbb
jns
out
inc
dec
pop
push
out
sahf
jbe
xchg
mov
out
into
fsubr
div
cmp
repz
push
and
cmp
repz
dec
push
push
mov
pushf
mov
into
fdivrs
iret
repz
add
or
out
sahf
out
sub
dec
pop
sahf
out
sahf
bound
xchg
stos
jns
out
mov
int3
loopne
xor
out
adc
push
sub
repz
ss
pop
jb
nop
cmp
repz
mov
enter
iret
repz
adc
cmp
out
sahf
testl
xchg
movsb
int
jns
mov
loop
push
lret
and
repz
xor
pop
push
cmp
repz
imul
int3
sub
sahf
out
sahf
dec
pop
outsb
js
jns
out
pushf
cmpsb
rcl
repz
out
clc
add
sbb
iret
repz
inc
dec
pop
outsb
js
cmp
repz
mov
sahf
cmpsl
stc
push
into
adc
xor
out
sahf
out
push
xchg
lcall
int
jns
clc
adc
and
repz
repz
push
insb
jle
iret
repz
lcall
cmp
mov
sub
repz
pusha
jp
mov
cmp
rcr
in
sahf
out
testb
or
out
sahf
out
push
mov
mov
loopne
adc
cmp
repz
dec
push
fs
cmp
pause
lcall
repz
rcl
rcl
push
adc
cmp
repz
dec
pop
outsb
iret
repz
adcb
out
cmp
notb
aam
xor
sahf
out
ds
pop
je
repz
out
ret
add
iret
repz
adc
push
push
ds
repz
mov
iret
repz
sbb
inc
pop
cmp
repz
mov
iret
repz
call
out
sahf
out
cmp
sahf
out
sahf
mov
int
jns
clc
add
adc
repz
repz
pop
jo
repz
jp
xchg
test
les
out
repz
loopne
fdivr
flds
iret
repz
sub
dec
pop
push
cmp
sahf
mov
aam
ret
out
or
cmp
or
inc
inc
imull
or
mov
in
mov
fdivrs
outsb
cmp
sbb
pushf
cmp
and
pushl
pop
xor
mov
or
in
movsb
mov
inc
jae
push
aas
sbb
incb
ud0
pushl
adc
and
add
lret
pop
iret
or
ss
call
cmp
sti
sti
cmpsl
popf
fidivl
mov
mov
xor
lea
into
xor
jmp
loope
adcb
pop
sub
out
jmp
and
stc
lahf
ja
das
cmp
sahf
ljmp
jne
mov
push
pop
mov
jle
pusha
into
pop
cmp
mov
mov
or
mov
pop
push
push
jne
mov
mov
and
pop
push
pop
lds
call
cmc
sarl
inc
in
cmp
ja
out
mov
loope
inc
lock
hlt
insl
push
xor
ljmp
mov
dec
inc
inc
sub
aam
icebp
mov
pop
and
movsb
neg
adc
xor
cs
ljmp
sub
jnp
mov
or
add
adcb
aaa
xchg
jp
push
inc
inc
cmc
lcall
mov
mov
scas
xchg
jb
and
sbb
hlt
xor
jnp
jmp
or
lcall
add
lcall
scas
and
ss
ds
or
call
add
cli
in
xor
push
mov
inc
and
sub
inc
fs
sbb
jmp
jo
pop
mov
fldenv
out
mov
out
fbld
pop
mov
push
mov
es
mov
mov
les
and
enter
mov
fisttps
xchg
call
add
cmp
jmp
push
lahf
add
lahf
mov
pop
inc
cmp
mov
fdivs
or
mov
pushl
rcr
or
xchg
ds
mov
push
imul
sub
movsl
lds
xchg
sub
jmp
cmpsl
fists
pop
sbb
je
pcmpeqb
js
inc
xchg
sbb
cmp
dec
lcall
push
push
shlb
lahf
or
cmc
int
mov
cmpsb
lcall
pop
mov
cmp
and
pushf
loope
inc
adc
xchg
imul
decl
aam
dec
inc
cltd
dec
les
push
fnstcw
pop
jl
jg
mov
sub
pusha
cmp
in
mov
xchg
ss
and
loop
push
lahf
push
pop
imul
cmp
mov
lcall
incl
pop
jl
jmp
push
clc
lret
adc
das
sub
loopne
cmpb
add
push
dec
sub
push
mov
into
sub
adc
dec
inc
scas
jg
hlt
xor
sub
outsb
xlat
imul
sub
add
cli
out
lret
pop
xchg
das
cmp
dec
xchg
jp
or
ljmp
mov
pushf
xchg
xor
inc
jle
lahf
adc
xorb
or
jmp
cwtl
mov
cmp
push
push
lods
inc
jmp
or
bound
out
xchg
add
xchg
std
cmp
cmp
js
add
das
jmp
sbb
data16
sub
decl
push
xchg
add
sbb
fadds
mov
testb
aad
push
pushl
test
or
stos
and
dec
rcll
jp
aaa
in
pop
cmp
test
pushl
push
or
sarb
mov
sbb
movq
xchg
popf
mov
mov
insb
jmp
popf
jns
std
cld
cmc
xchg
adc
loop
mov
ljmp
xchg
and
and
subl
xchg
sbb
cmp
test
lret
into
sub
jmp
repz
or
lea
cltd
ds
jmp
mov
jge
push
push
outsl
push
and
pop
or
test
mov
jl
roll
nop
dec
mov
xor
out
bnd
incl
or
ret
push
sub
je
push
out
mov
enter
jp
push
jbe
sub
test
mov
push
and
in
das
add
or
mov
jle
decl
imul
pop
add
sarl
in
clc
pushf
in
xchg
sbb
cmp
add
cmp
push
jg
pushl
movsl
mov
arpl
xor
mov
jmp
push
cltd
or
cmp
mov
mov
pop
sbbb
loopne
jge
push
jle
popl
mov
sub
mov
inc
call
stc
test
test
xor
jg
popa
cmp
push
outsb
repnz
push
pusha
icebp
mov
cmp
push
fwait
aam
aaa
std
rcll
jae
pop
pushf
sbb
inc
cmp
ljmp
jnp
push
push
push
js
stc
std
cmp
inc
push
ljmp
mov
cld
jge
push
push
push
xor
mov
cwtl
out
iret
and
or
stc
sub
dec
fldt
dec
js
enter
cli
fbstp
xchg
pop
xchg
jmp
rcrb
sub
pop
mov
jo
mov
pop
jmp
inc
mov
mov
pop
push
mov
xchg
lock
sarb
mov
dec
pop
std
push
pushf
or
sub
test
shrb
push
mov
dec
push
inc
les
jo
dec
std
cmp
sbb
cmp
nop
outsl
mov
lock
les
sbb
shlb
mov
fcomip
aaa
xor
mov
jge
jl
or
xchg
loop
lcall
cli
dec
mov
inc
shrb
jmp
and
cmc
pop
cmc
add
xor
jmp
mov
pushl
dec
insl
cld
adc
loope
push
aaa
outsb
xor
test
dec
dec
lret
std
dec
sub
jg
mov
xchg
fbstp
adc
mov
lods
mov
lcall
mov
clc
pushl
inc
call
std
icebp
or
dec
or
sbb
scas
dec
sub
mov
mov
arpl
add
insw
test
cmp
inc
xor
push
jle
rclb
jno
lret
xchg
jge
lcall
lcall
inc
insb
and
stos
repz
jo
add
xor
stos
xor
and
icebp
test
cmp
mov
ja
xchg
and
lods
inc
movb
movsb
cli
ljmp
call
jo
push
addl
pop
loope
mov
dec
mov
jl
mov
out
popf
inc
cld
out
clc
scas
fwait
dec
mov
xchg
mov
ret
mov
pushl
ss
mov
inc
dec
and
push
addr16
mov
jg
jmp
sbb
fcmovnbe
jp
cmp
cltd
cmp
push
pop
jle
ljmp
adc
addr16
out
js
loop
aam
mov
jnp
dec
xchg
rorl
sbb
call
iret
xchg
sbb
in
inc
jl
mov
lods
stos
test
adc
stos
xchg
add
loopne
shrb
ljmp
mov
jne
xchg
lret
loopne
xlat
clc
lcall
test
jae
aas
or
xchg
jo
bound
das
lahf
sbb
stc
incl
ljmp
insb
fildl
mov
jnp
popl
lcall
push
ss
inc
data16
leave
mov
dec
push
inc
jno
repnz
decl
lahf
call
push
push
mov
sti
insl
je
and
push
lea
cs
out
call
imul
jne
pushf
aad
dec
push
or
mov
push
push
ss
lock
imul
add
clc
sbb
xchg
ds
mov
ja
jnp
or
test
call
incl
xchg
mov
jae
sub
shlb
enter
mov
jecxz
sbb
xchg
fsubrp
decl
inc
arpl
fs
sub
push
push
popa
mov
sbb
call
or
and
jmp
jmp
mov
and
pushl
popf
sbb
xchg
and
mov
or
bsf
push
add
cwtl
sbb
mov
into
mov
insl
test
jg
pop
hlt
jae
add
or
add
movsl
xchg
mov
aaa
shrb
jmp
and
mov
enter
pop
mov
ret
subl
pop
adc
lods
add
out
sub
dec
insl
movsb
outsl
adc
mov
shl
mov
sbb
and
jge
shlb
mov
stc
int3
dec
adc
xor
ret
mul
mov
insl
sar
mov
or
sarb
add
adc
arpl
dec
pop
imul
outsb
data16
dec
in
pushl
adc
frstor
scas
jle
mov
insb
sub
push
add
daa
ja
push
lcall
cmc
scas
lret
repnz
inc
ret
add
std
iret
dec
adc
mov
cmp
add
adc
loope
cmpsb
jno
sub
sub
je
cmp
lret
jmp
pusha
sbb
rolb
xorl
cmc
pop
cmp
fisubrl
lcall
jmp
lods
ror
aam
xor
outsb
sti
push
pop
addr16
iret
and
mov
aas
mov
adc
mov
mov
mov
xchg
inc
leave
addr16
pop
enter
aam
add
scas
clc
nop
xlat
sti
cmc
pop
mov
xor
fimuls
pop
jg
add
data16
push
xchg
cmp
xchg
pop
test
jae
sub
mov
xchg
adc
call
jo
movsb
pop
push
adc
aas
inc
and
cli
dec
ret
mov
mov
mov
pop
xor
sbb
mov
enter
push
push
cmp
mov
mov
push
repnz
fsub
stos
inc
adc
outsb
or
cmpsl
add
cltd
loopne
lds
sub
sar
es
imul
mov
jecxz
call
xchg
mov
adc
icebp
mov
pop
fwait
xor
fwait
paddusw
and
js
les
pop
pop
jmp
adc
lret
arpl
sbb
adc
sbbl
push
sarl
dec
fldcw
sahf
mov
mov
dec
push
imul
gs
or
cmp
adc
jae
decl
aam
das
addr16
jecxz
cli
sbb
jo
ds
and
ffreep
xchg
jle
call
lret
lods
sbb
xor
adc
enter
xchg
into
adcb
ljmp
sub
sub
push
daa
inc
pop
xchg
xchg
xor
adc
inc
lret
cmp
and
pop
icebp
incl
mulb
fstpl
das
data16
imul
lcall
lds
xor
mov
mov
test
dec
sub
pushl
ljmp
pop
cmp
dec
mov
inc
in
loopne
daa
inc
pusha
cmp
insb
outsl
push
or
cmpsb
pushl
mov
adc
mov
jmp
add
fldcw
ss
inc
inc
fs
dec
dec
sub
push
push
mov
movsl
mov
out
xorb
and
outsb
pop
daa
sub
cmpsl
adc
sub
jmp
xor
and
jecxz
ds
ja
test
xor
js
pushf
stc
repnz
cmp
sub
aas
push
les
jp
jo
adc
pop
test
loop
push
cmc
push
and
xchg
sbb
ljmp
popf
into
xlat
cmp
adc
add
sbb
aaa
xchg
ds
incl
mov
pop
pushl
mov
mov
push
fdivrp
ljmp
and
icebp
icebp
xchg
xchg
ret
mov
mov
sarb
lea
xor
ljmp
ret
adc
xor
dec
pushf
aaa
out
push
addr16
mov
enter
enter
jg
pushl
fcoml
lcall
sti
inc
mov
mov
push
cmpsb
pop
adc
incl
jecxz
jmp
lcall
or
or
mov
lock
mov
call
pop
push
cmp
cmpsb
gs
xchg
sti
pop
mov
sub
add
sbb
call
cmp
add
jbe
ret
jo
sbb
sbb
dec
push
loop
ljmp
decb
jg
out
hlt
lods
push
leave
or
or
mulb
std
inc
and
jmp
dec
les
jg
add
mov
orl
ds
push
loop
sbb
clc
jg
rolb
mov
pop
mov
in
cli
ljmp
push
cmpsl
dec
mov
and
xchg
push
xchg
sub
lret
mov
sti
jge
enter
mov
lods
cmp
jae
cmp
adc
cmpsl
cmpsb
mov
or
jno
sub
in
fwait
repz
cld
setne
pop
imul
and
jp
jecxz
insb
pop
incb
pop
std
jmp
lea
mov
and
push
outsl
cmp
jns
call
mov
jno
fimull
mov
imul
pushf
mov
xor
or
cmp
sbb
fiadds
push
cmp
pusha
ljmp
and
dec
jae
loop
sbb
decl
ror
ficompl
pop
cmp
cli
add
stc
xor
setle
cmp
jmp
jg
decl
mov
push
pop
in
in
insb
add
xorb
shl
in
or
push
xchg
cmp
mov
dec
adc
cli
lods
and
jmp
mov
shrb
sbb
stos
lods
jnp
ficoms
xchg
outsb
dec
or
xor
decl
and
lods
jne
cwtl
stos
push
cmpsb
jle
mov
mov
wbinvd
cld
int
repz
cmp
jle
lods
lds
adc
jns
push
sbb
adc
cwtl
idiv
ljmp
push
or
rol
das
mov
dec
jno
pop
cld
imul
aam
fsubs
ljmp
std
pop
iret
cmpsb
shl
push
insb
ss
mov
inc
fisubrl
adc
sbb
imul
andb
in
cmp
xchg
enter
test
aas
inc
pop
iret
mov
out
jmp
cmpsl
mov
outsb
sub
pop
xor
and
movsl
out
jmp
xchg
pop
fwait
fs
or
jmp
call
push
repnz
mov
hlt
add
mov
ljmp
pop
add
mov
dec
push
data16
xchg
pop
mov
xchg
jg
arpl
or
xchg
sbb
nop
lods
outsb
out
cltd
popf
aas
adc
loop
cli
incl
cmp
icebp
add
sub
add
pusha
in
jae
ret
out
ret
pop
dec
sub
iret
add
jmp
lret
aad
add
cmp
jbe
push
mov
mov
mov
inc
sub
add
push
in
mov
outsl
dec
push
mov
jmp
lahf
mov
mov
daa
imul
mov
jb
jle
nop
or
pop
dec
jge
add
lcall
pop
lock
xchg
ret
shll
mov
mov
fcompl
dec
js
decl
fcoml
cs
and
cmp
jae
sub
scas
gs
mov
or
out
in
or
insl
aad
adc
stc
mov
popa
aaa
gs
int
hlt
call
sub
out
test
movsb
pusha
cltd
push
lret
jnp
push
es
scas
loope
mov
rol
inc
je
lahf
std
and
in
pop
icebp
incl
xor
test
xor
mov
gs
rcl
fistpll
xchg
and
arpl
mov
dec
jns
sbb
push
leave
inc
cmp
xor
in
mov
daa
and
aaa
aaa
loop
jge
push
push
hlt
adc
cmp
jg
push
sub
lcall
stc
in
mov
push
pop
mov
mov
int3
test
cmpsb
adc
call
fucomi
xor
xchg
fwait
les
nop
es
and
lret
nop
js
inc
decl
lock
mov
xor
pop
mov
in
sub
jge
jge
dec
loope
push
aas
mov
jl
jl
lock
decb
push
push
pop
jle
xchg
mov
mov
add
adc
ljmp
loope
rolb
adc
jns
adc
in
or
stos
js
mov
push
gs
addl
mov
and
dec
in
orb
jmp
xchg
cmpsb
cwtl
cmc
sbb
jecxz
mov
push
in
repnz
hlt
mov
lahf
add
fcomip
incl
clc
je
xchg
loope
scas
sub
sahf
iret
sub
popa
cmc
not
pushl
inc
cltd
push
add
pushf
xlat
ret
pop
daa
mov
stos
push
add
test
mov
mov
lret
jne
jmp
sbb
fmuls
popa
shrl
xchg
incl
sub
aad
xor
std
sarl
outsl
pushf
mov
in
lahf
shll
inc
repz
or
fs
mov
mov
sbb
decl
ljmp
mov
or
xchg
popa
add
pop
adc
cmp
mov
adc
pusha
push
mov
sub
daa
repnz
mov
adc
push
not
xor
xor
cli
xor
add
add
xchg
sub
jg
lods
fwait
insb
add
roll
add
sbb
iret
cmp
mov
xlat
shrl
in
dec
sti
sbb
cmp
cs
mov
xor
push
fwait
cmp
ss
frstor
mov
jge
mov
cld
push
aam
xchg
push
movl
dec
gs
popa
test
movsl
inc
out
lock
xchg
div
adc
mulb
xor
ja
ss
decl
pop
cwtl
mov
fwait
out
jno
fildl
daa
pop
push
subb
pusha
mov
pop
call
notb
push
cmpsl
sbb
push
push
mov
or
loop
add
mov
xlat
sub
lcall
adc
lods
inc
xchg
mov
xor
adc
rol
push
fidivrs
call
lcall
inc
sub
jae
rorb
sub
xchg
xor
dec
jge
out
shl
dec
lahf
add
inc
mov
cmpsl
std
fisttpl
mov
call
dec
mov
ret
mov
push
decl
and
pop
mov
jmp
pop
movsb
jge
dec
push
popf
outsb
pop
jb
or
pushl
scas
xor
addr16
les
inc
movsl
sub
rdpmc
loop
pop
and
jp
incl
repz
sti
xor
dec
cltd
add
in
adc
jmp
mov
xor
dec
pushf
xchg
adc
ret
movsb
in
test
stos
fidivl
pop
pushl
xchg
xchg
push
push
out
cwtl
pop
mov
cwtl
shl
xor
call
mov
ss
or
or
ja
dec
imul
popf
xlat
ret
adc
cmp
dec
cmpsb
mov
sbb
idivb
lret
push
dec
mov
dec
ret
mov
fwait
sub
adc
outsb
sub
lcall
lods
mov
insb
or
cmp
fildl
sbb
movsb
fdivp
shll
xor
sarl
mov
dec
xchg
std
push
mov
gs
xchg
test
sub
ljmp
call
push
xchg
mov
and
dec
and
orl
pushl
push
arpl
fwait
push
pop
pop
test
mov
js
cmp
decl
jnp
sbb
sar
subl
inc
dec
sub
sub
loop
decl
sbb
and
sbb
fidivl
lret
xchg
icebp
mov
fistpll
sub
xor
iret
negb
sahf
aaa
add
sub
call
sub
loop
xor
das
mov
daa
pushl
jo
movsb
dec
or
pusha
lret
lods
clc
sbb
stos
jle
inc
push
ja
cmpsb
push
jnp
decl
jbe
mov
cmpl
iret
or
movsl
xor
mov
sbb
or
pop
popa
push
imul
and
pop
shr
outsl
popf
ss
fsubs
xor
cmp
sub
loope
pop
add
std
jne
mov
aaa
sub
push
stos
mov
pop
mov
inc
inc
inc
nop
add
loope
movsl
mov
sbb
ss
and
test
in
jg
xchg
and
dec
mov
xor
jmp
daa
push
adc
and
add
xor
scas
mov
inc
out
inc
add
xchg
push
mov
sti
pop
jle
movsb
inc
dec
das
ljmp
ljmp
mov
imul
dec
dec
cld
or
mov
outsb
ret
into
std
push
int
lcall
mov
iret
push
xchg
cmp
sbb
je
les
hlt
pop
xchg
arpl
gs
sbb
adc
xor
inc
jg
adc
jb
xor
adc
push
das
outsb
lock
fidivrl
enter
pushl
negb
jle
jo
adc
jns
inc
sub
jecxz
mov
rcr
or
ljmp
xor
push
iret
mov
pop
or
les
mov
fmuls
adc
lcall
lahf
inc
add
xor
cli
adc
outsb
mov
and
adc
imull
aas
ja
imul
loope
mov
and
ror
sub
pop
into
push
sbb
sbb
incl
inc
cltd
push
mov
aaa
int3
cld
sbb
icebp
adc
fucomp
test
imul
pushl
test
inc
data16
xchg
popf
sbb
fstps
mov
jmp
jb
decl
cmp
or
sub
jb
jbe
push
adc
shll
jle
clc
out
cmp
sbbl
pop
pop
jbe
test
jne
dec
pop
frstor
lret
idivb
fstpt
lret
dec
fisttpll
cmp
data16
mov
sti
push
mov
in
clc
cmp
lcall
aam
mov
add
add
mov
nop
rclb
mov
decl
or
enter
sub
adc
insb
gs
iret
enter
or
out
jb
repz
xor
adc
dec
cmp
cli
hlt
call
incl
mov
cltd
out
and
lcall
divb
ljmp
pop
pop
fwait
aaa
pushl
std
ljmp
mov
or
rclb
push
out
incl
pushf
fidivrl
les
outsb
in
faddl
rcrb
dec
je
jns
lds
pushl
and
and
lahf
ret
jecxz
outsl
stos
clc
in
add
jg
push
inc
in
sbb
add
jae
out
loopne
jge
fmull
rcrl
icebp
lock
sbb
cwtl
in
mov
out
jge
and
xchg
in
orb
dec
jg
arpl
mov
jmp
push
inc
dec
lcall
and
add
push
fwait
shr
incl
mov
mov
lods
mov
out
sub
incl
mov
mov
mov
cli
outsb
lahf
fsts
mov
jmp
je
mov
jl
insb
ljmp
insl
sahf
mov
xchg
inc
mov
je
pop
nopl
adc
push
push
push
push
outsb
and
pop
ds
jl
xorb
add
xor
xorb
idivb
enter
mov
hlt
div
test
jmp
xlat
inc
mov
jo
pop
rorb
sar
movsl
ret
push
inc
subl
lcall
pop
out
mov
push
adc
and
dec
cmpsl
ret
clc
decl
es
mov
and
int
pushl
mov
add
call
fninit
sti
jmp
xchg
pop
mov
adc
and
movsb
pop
aad
das
das
shl
popa
mov
jg
rep
dec
or
jmp
repnz
mov
sub
fsubrs
lcall
inc
add
mov
loop
dec
ljmp
fstps
hlt
jg
inc
addr16
mov
mov
stos
cmc
pusha
jmp
lahf
add
push
pop
lock
cmp
lea
lods
push
dec
push
dec
inc
and
inc
ficomps
xlat
push
decl
push
pop
outsl
mov
dec
sahf
ss
sub
pusha
stc
leave
mov
scas
xchg
hlt
rcll
movsl
xchg
sbb
jg
cmp
std
xchg
cli
js
rorb
xor
addr16
and
pushl
aas
lods
insb
mov
sbb
test
fwait
cltd
loopne
jg
outsl
inc
push
jp
aad
jecxz
dec
push
mov
or
dec
repnz
cmp
cmp
mov
aas
add
jle
insb
xor
imulb
ds
mov
inc
jbe
mov
pushl
or
jl
stos
imul
sbb
jns
clc
scas
and
and
lcall
mov
xor
lea
pop
add
inc
or
mov
fcmovbe
dec
aad
les
mov
xor
in
mov
push
gs
xchg
xor
iret
jge
idiv
jnp
adcb
push
loop
addr16
xchg
mov
fsubr
xor
shlb
dec
xchg
jge
ficompl
mov
pop
scas
addb
push
adc
pushf
js
hlt
and
pop
cmc
fs
mov
popf
in
push
mov
fisubl
ficompl
and
ljmp
enter
dec
ljmp
add
ret
push
loopne
leave
outsl
mov
cmp
inc
dec
testb
sub
ficompl
movsl
cs
dec
mov
je
jge
mov
mov
add
dec
pop
push
adc
jnp
cmp
push
cld
mov
les
mov
push
aam
jp
xor
pusha
mov
call
and
mov
mov
loop
pop
je
sbb
jmp
fs
stc
mov
loopne
outsl
fdivp
cmp
popa
loopne
pushf
pop
call
or
filds
add
cmp
jmp
mov
mov
out
icebp
out
mov
lock
add
add
fistl
jmp
ja
mov
pushl
movsl
add
icebp
scas
mov
pop
clc
xor
loopne
ficoms
dec
jbe
jg
pop
fs
xchg
aad
sub
push
mov
int3
pop
dec
repz
lahf
cmp
lcall
mov
iret
cmc
mov
inc
repnz
inc
int3
lret
mov
std
jg
inc
xchg
scas
mov
jns
rorb
outsl
jg
or
adc
jg
imul
mov
pop
mov
sub
jmp
lods
inc
mov
aas
shrl
pop
pop
in
pop
jo
mov
mov
stos
jnp
decl
dec
dec
addr16
jae
cs
imul
ljmp
das
fwait
xchg
ja
fistl
into
loope
sub
mov
cmp
repz
sbb
int3
or
ss
and
pop
clc
addl
fcmovb
sbb
mov
pop
and
adcb
sbb
dec
sub
aas
jbe
xor
loopne
jmp
jnp
pop
and
in
push
pop
inc
outsl
jge
jns
das
push
std
dec
mov
push
psadbw
shrd
and
pop
lds
jno
xchg
stos
movl
incl
and
test
aas
cmpsl
xor
enter
enter
push
lods
call
out
jl
cmp
push
push
lea
jo
imul
or
sbb
test
ret
out
std
cli
mov
fucomip
fcomip
scas
pop
icebp
es
dec
and
aad
das
dec
mov
test
hlt
addr16
lcall
jmp
xlat
movsb
in
lea
pop
xchg
adcb
imul
test
pushl
add
insl
mov
les
fnstenv
loop
outsb
jmp
test
lea
inc
cmpsb
lcall
push
aaa
fsubs
sub
and
cld
ljmp
shr
repnz
add
call
sub
in
xchg
in
push
int3
xchg
jns
loop
fs
mov
lahf
ss
jno
test
dec
push
sub
daa
pop
into
sbb
inc
imul
lcall
and
xchg
loopne
stc
imul
in
pushl
dec
mov
data16
in
stc
and
dec
or
mov
push
jmp
ljmp
jg
aam
out
and
xor
jmp
push
loope
sub
jb
dec
pop
inc
jne
call
and
jp
jbe
popa
addr16
and
in
dec
push
fcmovbe
int
les
push
push
pop
jmp
stos
lcall
movsl
push
xchg
data16
loope
out
push
sbb
sarl
cli
incl
lock
mov
xor
xchg
decb
pushf
mov
ljmp
xor
enter
cmp
dec
jle
je
and
push
pop
jecxz
lcall
jo
jo
cmp
shl
sbb
jmp
ret
xchg
sarb
xor
incl
jecxz
mov
pop
mov
andb
cmc
pushf
or
xchg
lds
ljmp
xor
mov
pop
les
jecxz
sbb
call
push
testl
inc
xor
movsb
test
jmp
outsb
popf
sbb
sub
popf
insl
imull
gs
push
pop
sub
bound
jmp
and
jg
and
out
mov
or
arpl
adc
out
cli
push
adc
imul
incl
popf
mov
shl
add
lret
sbb
testb
andb
ljmp
cli
jae
xor
shrb
and
dec
cwtl
and
add
aam
cli
jle
out
data16
call
loop
mov
popa
insb
xchg
outsl
add
clc
out
sub
xlat
xor
outsb
pop
rcrl
mov
jmp
enter
mov
loop
repnz
dec
lret
test
push
lea
and
fstp
int
dec
aas
loopne
inc
das
mov
addr16
xchg
and
cmp
sub
ja
xorl
cmc
or
call
cwtl
rcrl
xchg
stos
inc
out
dec
roll
decl
shl
jle
xor
in
loopne
sti
stos
sub
mov
loop
push
push
daa
pop
jg
sub
or
mov
inc
ss
pop
add
jo
sbb
aad
jge
cmc
andl
decl
icebp
cmp
xchg
daa
inc
dec
push
shlb
fistl
jmp
insb
mov
shl
mov
jg
jmp
add
pop
inc
jns
sub
pop
adc
aad
mov
mov
xchg
add
fwait
rcrb
dec
sbb
push
hlt
aam
pop
inc
add
jecxz
cld
decl
andl
hlt
xchg
inc
fs
inc
scas
icebp
loope
ds
movsl
and
dec
outsl
pop
test
adc
dec
xchg
les
popf
xorb
out
bound
mov
imul
cltd
xchg
pusha
or
xchg
mov
pop
cmp
ljmp
cmpb
or
cmp
andl
arpl
inc
call
movsb
pop
xchg
add
jo
mov
add
outsl
mov
jge
inc
jle
pusha
push
loope
xchg
pop
mov
jmp
std
rcr
mov
std
cld
and
or
fcomps
iret
insl
popa
push
jbe
ret
mov
push
mov
idivl
ljmp
cmc
scas
loope
dec
sub
add
jae
xor
ja
fbstp
jg
or
mov
inc
shl
rolb
cld
mov
pop
movsb
sahf
add
add
xor
scas
pop
lahf
push
sbb
mov
push
xor
adc
cld
out
xchg
hlt
out
lea
mov
test
lods
iret
enter
incl
jecxz
add
sub
out
mov
sbb
lock
ret
insl
repnz
jg
lahf
mov
ds
mov
iret
add
mov
xchg
sar
ljmp
cwtl
and
in
popa
roll
jge
mov
sbb
mov
fwait
test
jns
lahf
fldenv
lcall
or
dec
test
add
xchg
sbb
sub
ret
add
pushl
dec
push
xchg
jg
jp
aaa
xchg
hlt
fimull
cmp
pop
fnstcw
mov
jg
dec
xor
mov
mov
cltd
pop
adc
aam
push
jne
ljmp
push
xor
lods
mov
push
cmove
xchg
mov
decl
into
push
sbb
in
pop
pop
pop
push
into
aaa
and
orl
subl
push
std
dec
fs
scas
jnp
sub
ds
dec
push
leave
mov
fnstsw
push
mov
mov
repnz
and
pop
jmp
dec
sbb
test
add
cld
mov
enter
in
mov
and
cwtl
in
push
lock
jl
icebp
stos
jg
call
fs
in
inc
jp
push
adc
sub
clc
lahf
dec
sub
sbb
int
push
add
add
sub
je,pn
pushf
cmp
push
std
cs
sbb
lock
add
mov
ljmp
sub
pop
lods
pusha
aaa
insl
cwtl
dec
mov
andl
or
mov
clc
push
out
adc
inc
lret
shr
push
xchg
mov
push
mov
dec
xor
xor
xchg
dec
cli
adc
ljmp
cld
mov
pop
aad
lods
pop
mov
fmull
cmp
ljmp
js
xchg
mov
fistpll
mov
mov
add
jp
sti
insl
ljmp
cli
mov
shlb
fwait
cmp
jg
push
incl
insl
push
push
ja
lds
mov
or
mov
lcall
insl
bound
jno
mov
sets
je
jns
shr
fsubrl
push
testb
stc
adc
or
dec
imull
neg
das
sub
sub
ljmp
jge
xchg
idivb
pop
mov
sub
jae
cmp
pusha
add
inc
dec
adc
pop
ret
negb
pushl
xchg
out
pop
jge
sbb
arpl
test
jl
jmp
xchg
fsubs
pop
popf
into
gs
out
ret
movsb
mov
test
mov
stos
sahf
test
xchg
test
les
jecxz
filds
jmp
cld
ss
mov
sbb
ljmp
lret
pmulhw
stc
stos
lcall
mov
mov
les
mov
cmpsl
fisubrl
xlat
stos
jg
lock
in
mov
orb
mov
push
jle
dec
fdivrl
cli
sbb
xchg
ret
mov
push
loopne
ficomps
test
fcomi
incl
pop
icebp
or
pop
mov
andb
in
leave
loopne
movsb
test
sub
das
mov
movsb
xchg
cmp
jo
jo
sbb
xchg
fcmovu
call
cwtl
add
push
mov
mov
popf
add
xorb
fisttpl
lcall
sub
ret
aad
nop
or
scas
mov
or
cmp
syscall
js
jne
push
adc
and
test
decl
adc
pop
imul
jae
sarl
add
cmp
dec
std
jnp
icebp
test
ds
insb
cltd
inc
ds
call
loopne
sub
lods
cmpl
pop
hlt
sbb
push
icebp
xchg
je
frstor
popa
ljmp
mov
and
or
sbb
arpl
addl
sbb
sbb
inc
jl
arpl
jnp
fcomps
js
mov
mov
call
adc
mov
scas
data16
jo
or
stos
int
xchg
enter
cmp
sbb
mov
dec
xchg
xor
in
push
mov
out
outsl
leave
mov
cmpsb
ja
ret
ljmp
clc
push
sub
outsl
add
das
in
push
push
sbb
add
mov
js
shl
iret
dec
dec
cwtl
loop
movsl
loopne
arpl
movsl
lret
sbb
sarl
fistps
sub
dec
mov
push
xlat
add
mov
int3
aad
aad
bound
pop
popa
outsl
jmp
jmp
jg
push
and
dec
dec
dec
lret
jg
aaa
add
notl
jle
mov
outsl
cli
cli
in
jmp
out
lods
lahf
xchg
movsl
or
cmp
fldcw
pop
jmp
sbb
and
addb
ss
iret
mov
cwtl
push
lahf
pop
jno
call
push
aad
icebp
or
xlat
ficompl
dec
ret
pop
sub
call
sub
test
or
add
mov
lods
stc
mov
mov
insb
cld
and
cld
add
in
xor
sub
ljmp
lods
dec
inc
lcall
std
cmpsl
insb
imul
sbbb
sub
jne
xor
sub
sbb
outsb
mov
lcall
cmpsl
dec
dec
xchg
test
mov
stc
xchg
lds
ljmp
push
or
inc
in
das
adc
and
or
add
out
jmp
jo
xor
dec
mov
mov
mov
imul
mov
xor
inc
cmp
mov
cmp
push
sub
xchg
shll
inc
sar
nop
lods
sbb
adc
arpl
cmp
xor
pop
out
mov
clc
movsl
sub
test
or
es
ljmp
dec
in
fbld
mov
xor
mov
pop
out
mov
sarl
and
call
add
loop
cwtl
push
stc
push
cld
jns
push
xchg
jmp
inc
fstl
pop
mov
nop
cld
incl
inc
jg
jne
cld
cmp
xor
pop
push
pop
fs
scas
es
xchg
js
add
xor
das
rclb
xchg
imul
mov
pop
mov
jmp
mov
movsb
frstor
mov
adc
sub
aad
out
xor
pop
pop
ja
cmp
decl
or
xor
stc
inc
in
mov
or
mul
push
sti
jecxz
or
lcall
push
or
sti
mov
loop
jns
cltd
or
sbb
xchg
mov
xchg
push
loope
pop
pop
pop
lcall
ror
jge
fwait
incb
popl
xchg
or
subb
push
xchg
shlb
pop
pop
lock
loope
cmp
adc
lock
test
and
xor
cmc
aam
ljmp
nop
mov
test
push
inc
pusha
and
dec
mov
sbb
ja
mov
cmpsb
cmpsl
pop
stos
fs
test
xchg
add
pusha
adc
mov
push
ljmp
js
sub
inc
int
leave
inc
mov
lret
pop
daa
mov
xchg
popf
movsb
and
incl
mov
push
fimull
dec
insb
mov
sub
imul
pop
inc
jl
aas
cltd
cwtl
mov
sti
inc
stos
aas
and
aas
push
ds
push
and
mov
lcall
pop
or
adc
inc
test
mov
pop
idivl
loopne
lods
dec
jg
fstps
pusha
sti
inc
call
and
sbb
mov
insl
xchg
dec
icebp
dec
jnp
jns
aad
fdivp
jae
xorl
mov
push
addr16
mov
pushf
push
stc
icebp
xor
dec
add
push
xor
mov
push
ret
fnsave
jg
jne
adc
test
mulb
mov
stos
dec
sbb
pop
push
cwtl
hlt
sub
sbb
pop
mov
sub
fcos
ljmp
sarl
test
daa
call
mov
inc
lds
dec
lret
add
xor
xchg
add
shrb
adc
jbe
mov
mov
stos
out
loop
les
movsl
outsb
jp
inc
push
mov
jne
mov
ljmp
adc
cmpsb
pop
inc
cld
cmp
out
mov
pop
xorb
push
mov
mov
cmp
jle
dec
cmp
sbbl
int
rclb
decl
lret
fcomps
add
imul
or
cmp
cli
adc
ljmp
xchg
push
mov
cli
and
repz
ja
cmp
push
lret
add
and
cmp
xchg
adc
jne
rorl
gs
jge
and
push
movsl
inc
mov
mov
dec
push
test
lods
dec
jne
ret
jl
mov
fldcw
pushl
repz
repz
data16
mov
jg
add
cmp
cli
add
mov
mov
stos
inc
push
pop
scas
jb
inc
sub
cmp
in
mov
inc
dec
xchg
loopne
aas
mov
ljmp
sub
jae
mov
packuswb
test
add
pop
mov
lcall
decl
push
lods
mov
inc
push
jae
push
mov
fldcw
scas
popf
pushf
imul
incl
sbb
popf
or
jle
loopne
scas
or
xlat
and
adc
aad
aas
test
loope
lods
aaa
loop
arpl
stc
sti
in
push
xchg
jecxz
mov
xchg
fneni(8087
je
int
mov
dec
mov
mov
or
mov
loope
mov
cli
xchg
mov
mov
mov
adc
mov
loop
inc
fadd
orl
xchg
xchg
adc
outsb
ljmp
dec
push
and
dec
scas
jle
xor
outsb
in
jae
fistpll
mov
adc
std
or
dec
xor
xchg
ds
in
hlt
out
out
jle
lea
jae
loope
mov
pop
fstpt
mov
ds
pop
sub
cmp
dec
and
imul
in
fisubrl
sarl
ja
movsb
lods
jmp
jmp
push
cmp
adc
jne
jmp
jp
ss
mov
mov
decl
pusha
dec
js
jne
mov
js
test
mov
fwait
decl
and
mov
mov
lret
incl
test
xchg
add
or
add
ja
jge
inc
ja
fdivp
cli
sar
js
cmpsl
repz
mov
in
fwait
lahf
loopne
pop
pop
pop
mov
scas
idiv
xchg
aaa
cld
jmp
mov
aaa
lahf
adc
push
hlt
rorl
or
ja
sbb
adc
add
ja
mov
mov
pusha
or
mov
jg
push
rolb
push
enter
or
ljmp
jp
les
stos
xchg
add
xlat
mov
movsb
pop
lods
ud0
in
inc
mov
orb
in
pop
ss
mov
or
loope
pop
xchg
mov
inc
dec
push
leave
xchg
notl
sub
mov
and
cld
add
adc
pushf
lock
xchg
dec
push
lcall
fmull
insl
mov
push
mov
imul
xor
fistl
gs
xchg
sarb
sti
int
arpl
fbstp
sbb
pushl
sar
push
aaa
push
out
mov
js
popa
xchg
xchg
loopne
insl
add
es
add
lcall
dec
repnz
dec
push
outsl
insb
or
filds
shr
rclb
cmc
fs
pop
sbb
dec
dec
hlt
jb
aas
lea
push
jg
mov
jg
and
aas
jbe
jno
adc
into
pushl
call
sub
push
and
jl
or
movsb
lcall
pop
std
ljmp
testl
call
fwait
pushf
iret
hlt
xchg
ljmp
cmpsb
lea
enter
call
and
hlt
pop
or
dec
add
stos
jmp
scas
fidivl
push
jp
call
dec
jns
ficompl
lds
cld
lock
loope
and
inc
sbb
mov
popa
xor
clc
in
sar
ljmp
hlt
push
adc
aad
xchg
pop
dec
dec
xor
jg
sbb
and
cmp
push
fs
push
add
enter
add
in
ljmp
mov
jo
dec
ror
or
push
sti
mov
test
aaa
fdivrl
xor
incl
fisttpl
shrb
mov
cmp
cmp
mov
call
or
nop
clc
loopne
mov
sub
mov
mov
mov
incl
push
popf
xchg
push
mov
rorl
addr16
jb
daa
xor
decl
mov
enter
mov
push
rcrb
idivl
sar
or
jg
xchg
pushf
adc
fstp
pop
or
mov
or
es
jge
mov
dec
mov
and
mov
call
addl
ficompl
lds
ret
sbbb
test
mov
aad
mov
lods
decl
push
cmp
pop
dec
dec
test
pop
mov
ret
movsb
iret
sbb
test
mov
aaa
or
lcall
notl
add
iret
mov
mov
test
loopne
xchg
les
sub
xchg
sbb
inc
or
outsb
shlb
testb
inc
mov
or
lea
xchg
or
incl
orb
pop
sbb
mulb
insl
inc
xchg
leave
xor
pusha
push
adc
mov
les
cs
hlt
inc
xor
jmp
imul
pop
adc
xor
xor
incl
push
mov
ds
sbb
jl
push
aas
mov
xor
mov
xor
sbb
aaa
out
clc
outsl
or
shlb
ljmp
mov
outsl
cli
jmp
pusha
push
fldl
xor
ja
cltd
mov
xor
mov
out
das
call
xchg
stc
mov
pop
js
dec
sbb
lret
add
pop
imul
sar
jmp
or
sar
adc
adc
push
mov
sbb
xchg
in
stc
outsb
es
jle
data16
jmp
mov
xchg
adcb
jb
push
mov
xchg
jne
push
add
aaa
inc
dec
fistpl
and
xchg
mov
into
imul
jmp
mov
add
mov
mov
sbb
cmp
stos
or
xor
das
lret
lcall
jo
xchg
mov
notb
xor
xchg
iret
std
popf
cwtl
into
in
mov
iret
outsb
mov
mov
sub
scas
pushf
xor
call
sahf
pop
xchg
fists
iret
movsl
movsl
pop
stc
add
and
fwait
add
inc
scas
orb
xchg
adc
xchg
clc
ljmp
test
shll
adc
les
pop
jg
or
and
push
scas
and
incl
nop
lea
mov
xchg
cmp
sub
adc
fisubs
mov
and
out
jecxz
ja
dec
mov
add
cmc
sbb
stc
dec
ljmp
mov
sub
aad
pop
or
mov
add
fwait
test
cmp
adc
cs
inc
in
dec
mov
in
addb
insb
push
or
sbb
lcall
jle
dec
jl
into
and
in
add
mov
je
aad
loopne
dec
jns
decl
push
insb
add
in
xchg
push
std
movsb
pop
out
popf
mov
cmpsb
sub
ljmp
arpl
je
imul
mov
inc
mov
dec
fwait
stos
std
pop
and
lret
int
add
jp
cmp
stc
imul
inc
lret
cwtl
sub
jb
or
in
mov
fcomip
incl
push
test
nop
cli
stos
pop
mov
into
nop
push
ds
cld
dec
pop
fmuls
mov
xchg
push
mov
inc
js
mov
mov
les
jge
call
push
cltd
repz
popa
sub
dec
lcall
add
imul
push
pusha
mov
dec
rol
fsubrs
dec
adc
pxor
cmp
insl
ffreep
add
call
and
aad
cwtl
filds
test
loop
mov
push
nop
cmpsb
jmp
sub
mov
mov
imul
inc
movsl
push
inc
adc
repz
popa
dec
lods
leave
aam
mov
repnz
sbb
jle
jnp
push
cmp
pushl
mov
sbb
inc
cmp
aad
call
sub
bound
rorl
popf
or
icebp
mov
or
inc
call
out
sub
fsts
adc
lcall
mov
hlt
enter
xor
test
inc
mov
inc
ret
fisubl
xchg
dec
cld
stos
mov
and
inc
pusha
imul
fisttpl
inc
jmp
xor
push
sbb
out
jge
add
mov
xor
jg
dec
xchg
incl
cmp
aas
inc
add
mov
and
out
movsl
xchg
into
fisttpll
cmp
mov
lods
popf
pop
ljmp
or
out
jmp
cltd
mov
sbb
jmp
repnz
dec
lret
ss
mov
fstpt
jae
test
mov
push
jmp
xchg
daa
sub
mov
mov
xchg
test
xor
sbb
push
mov
es
loope
mov
ds
decl
fidivl
mov
inc
jg
mov
mov
pusha
add
mov
aaa
cld
mov
and
cmc
fldenv
push
pop
and
das
cli
ljmp
xor
scas
adc
outsl
jbe
ret
divl
push
lcall
jae
and
cmc
shrl
sbb
sahf
insl
outsb
adc
xchg
dec
sbb
call
cmp
push
insl
xchg
inc
repz
das
jae
insl
es
and
push
xchg
cmp
and
jg
aas
pop
mov
xor
jnp
popf
out
bound
ret
packuswb
pop
mov
int
clc
jmp
movsb
lret
andb
inc
icebp
mov
cwtl
sub
jg
push
icebp
enter
jmp
xchg
inc
shlb
aas
inc
int3
dec
inc
jae
add
outsb
jmp
loope
inc
jo
adc
adc
dec
xchg
or
test
fs
add
decl
sbb
xor
jbe
inc
mov
shll
ret
jg
mov
cs
popa
cmpsb
and
mov
cmp
ja
cli
in
popf
push
and
call
mov
cmp
mov
cmp
outsl
stos
js
and
push
sbb
jns
mov
pusha
mov
pop
negl
cmp
mov
mov
mov
pushl
fdivs
adc
inc
mov
clc
xchg
adc
mov
push
jl
cmp
dec
mov
sub
adc
test
je
adc
call
lea
div
xchg
jno
add
push
addl
stos
cmp
adc
sbb
stos
jno
cmp
add
cli
add
jp
icebp
add
dec
test
roll
mov
or
loope
adc
dec
je
cmp
jmp
aad
xor
jecxz
dec
jno
inc
fcmovnbe
std
por
in
mov
pusha
add
incl
outsb
pop
aad
xchg
jnp
test
push
ds
cmp
xor
decl
sub
out
sub
add
mov
push
mov
mov
or
test
pop
inc
incl
rcl
xor
jnp,pn
enter
mov
and
xchg
add
loop
jmp
sub
mov
movsb
ja
rclb
xchg
inc
adc
adcl
xchg
cwtl
dec
cmp
jmp
aam
mov
lcall
xchg
gs
js
lcall
cmp
fldt
mov
xlat
leave
mov
mov
sub
pop
lret
jecxz
shl
fiaddl
pop
call
rcrl
rcr
push
pop
test
movsl
inc
std
or
movsl
lock
push
imul
pop
mov
cmc
ljmp
loop
jmp
mov
xchg
xchg
jne
or
sti
mov
lcall
inc
mov
jno
outsl
jbe
cmpsb
rol
inc
hlt
push
pop
pusha
cmp
mov
lahf
sti
pop
incl
inc
push
and
inc
sbb
pop
jns
sbb
cld
adc
int
or
fstps
push
add
insl
sahf
inc
in
cltd
leave
and
sbb
ret
cld
and
subb
test
test
cltd
lret
fistpll
mov
mov
and
gs
imul
jmp
inc
mov
ljmp
sub
inc
inc
roll
fs
leave
adc
fcomps
fs
inc
sbb
mov
jmp
cmc
or
lcall
push
pushf
push
loope
in
shrb
call
mov
jmp
mov
repz
mov
faddp
inc
bound
mov
popa
stc
or
add
mov
call
mov
hlt
mov
out
add
sbb
xchg
jmp
or
inc
std
mov
adc
push
cs
and
repz
mov
cmp
mov
mov
cwtl
dec
cwtl
jnp
mov
sub
ds
das
add
pushl
mov
push
pushf
test
fwait
out
xchg
cmp
cmp
and
jg
outsl
fs
ret
ss
loope
jne
push
cmpsb
lcall
fisubs
cmpsb
fisubrs
jg
or
aad
test
out
push
adc
fcmovnb
xchg
clc
daa
cmpsl
xlat
cmpsl
mov
addr16
pop
jge
call
mov
xchg
dec
jnp
movsl
inc
and
sti
shll
mov
push
insb
scas
sbb
loope
sbb
jg
call
sub
pop
stc
repz
test
call
cmp
push
jp
loop
decl
data16
ret
imul
cmp
pop
rol
inc
cld
int
inc
fldcw
lcall
imulb
mov
xor
dec
mov
cltd
and
mov
mov
xor
dec
out
mov
incl
mov
sar
mov
loopne
addb
daa
mov
sub
scas
loopne
mov
cld
call
sbbl
call
mov
sbb
ret
dec
push
push
add
cmp
or
ds
insl
lock
mov
call
xchg
clc
jnp
cmp
sbb
mov
sub
or
stos
sub
enter
inc
add
push
fidivrs
mov
sbb
mov
xor
inc
ret
into
mov
ud0
incl
cltd
cmp
lods
sub
push
sub
repnz
cmp
inc
mov
adc
cmpsl
sti
adc
dec
inc
in
cmp
pop
outsb
mov
and
add
ss
ficompl
arpl
pushl
mov
push
dec
ss
faddl
ja
lahf
outsb
movsl
mov
inc
lcall
cmp
sub
jp
pop
fiaddl
adc
mov
decl
dec
xlat
mov
in
nop
movl
fidivrs
jle
mov
cmpsl
inc
cmp
fsubl
adc
int3
call
pop
or
jno
popa
push
inc
lea
mov
sar
call
aas
decb
push
mov
push
push
mov
adc
cmp
mov
mov
add
mov
idivl
pop
lea
pop
fwait
std
xlat
mov
sti
call
lcall
std
mov
insl
push
sub
adc
enter
mov
sbb
negb
inc
call
jb
test
repnz
aas
mov
mov
cmpsl
imul
inc
xor
inc
mov
push
xor
ljmp
xor
xchg
fdivrp
add
add
jo
jmp
in
test
aam
decl
ljmp
lds
pop
ficomps
loop
daa
cmp
in
ljmp
mov
push
xchg
movsl
mov
jle
and
and
push
insl
sbb
push
in
lock
xlat
cs
sahf
loop
inc
push
ljmp
dec
or
adc
insb
ljmp
cvttps2pi
test
jmp
cmp
aaa
scas
cmp
sub
add
test
cmpsb
out
push
add
sbb
or
call
adcl
movsl
pushf
sub
xchg
jns
sub
xchg
sbb
decl
enter
insl
dec
fwait
cmp
insl
jl
jecxz
lret
mov
ljmp
std
push
jmp
inc
lret
rclb
mov
mov
jbe
test
cmp
ret
sub
lcall
adc
sbb
leave
lahf
push
shll
cltd
mov
cmp
mov
fcomi
pushl
push
aam
xchg
dec
ljmp
inc
lret
test
pop
inc
nop
push
int3
ljmp
pop
fsubr
cmp
pop
inc
cwtl
out
pop
cltd
sbb
lock
add
shr
test
stos
mov
inc
das
or
inc
jno
in
xchg
movsb
stos
outsl
mov
or
sbb
dec
loope
fsubrl
loope
dec
jne
subb
add
addr16
adc
call
jmp
mov
cld
add
xor
lea
jo
notb
cmp
in
decl
inc
sbb
pop
push
or
dec
add
mul
scas
xchg
test
or
std
adc
push
mov
call
int
mov
or
mov
sub
sahf
add
notb
int
in
stc
pushl
std
ja
ljmp
xor
push
test
jae
mov
dec
gs
enter
cmp
lods
test
inc
mull
xor
xor
in
xlat
test
sub
jg
movsb
out
adc
jp
es
jo
xor
lcall
pop
dec
addr16
cmc
pushl
pop
and
push
adc
push
insl
jne
mov
dec
arpl
scas
push
xor
stos
imul
mov
xchg
subb
pop
into
ljmp
jmp
add
stos
stos
push
pop
xchg
mov
pop
std
data16
imul
imul
cli
mov
xor
add
xchg
xor
cmpsb
test
mov
inc
lock
scas
call
es
add
sub
js
and
sbb
hlt
xchg
mov
cmp
cmpsb
mov
in
jb
shll
test
mov
mov
stos
mov
adc
mov
ljmp
jecxz
hlt
cmp
or
cmp
decl
jbe
inc
push
sbb
xchg
in
dec
dec
in
sub
dec
mov
sub
cmc
sbb
lock
pushl
pop
sbb
xor
aam
int3
mov
dec
cmp
aaa
ret
mov
loop
scas
stos
dec
lcall
insb
aaa
mov
dec
ret
pop
mul
mov
ljmp
in
in
push
dec
lods
fnstcw
inc
dec
in
inc
pusha
fcompl
mov
add
jle
xor
mov
ljmp
xor
dec
repnz
and
imulb
sub
mov
ljmp
scas
jle
adcb
xchg
jl
and
clc
push
add
in
in
ret
pop
mull
jbe
aas
insb
mov
xor
std
dec
popf
data16
lock
sub
decl
mov
mov
test
js
sti
push
sub
fwait
push
adc
push
ss
sub
jmp
cmc
stos
divl
popa
arpl
inc
in
aas
orl
lret
xchg
jo
inc
js
lcall
xor
cs
lea
and
int
ljmp
dec
outsl
enter
pop
cld
adc
mov
or
mov
add
cmp
call
push
inc
sbb
stos
imul
adc
outsb
cmc
pop
fdiv
insb
in
lcall
mov
stos
cld
lcall
lret
ss
scas
lret
mov
in
or
lcall
add
lds
idivl
in
push
fsubp
lcall
gs
add
fwait
loop
aam
sarl
mov
pop
mov
in
out
mov
bound
xchg
cmp
inc
mov
icebp
dec
jne
arpl
decl
es
adc
or
std
pushf
mov
sub
test
arpl
pop
xor
call
iret
jge
xor
jae
flds
jns
enter
leave
dec
andb
dec
push
mov
incl
xchg
popf
fiadds
xchg
dec
push
jge
aam
dec
je
je
adc
dec
pop
icebp
incl
add
cld
test
pop
out
testl
ss
sub
xlat
decl
pop
insl
jle
out
testl
lds
fstpt
call
xchg
sub
daa
push
push
jae
ret
cmp
andb
fcomip
mov
lcall
mov
int3
mov
mov
mov
rolb
pop
fisubrs
mov
cmpl
incl
xchg
shll
mov
xchg
or
push
mov
jecxz
cmp
fsubs
fdivrl
ljmp
repz
jg
sar
mov
xor
and
cmpb
popf
scas
incl
mov
enter
mov
lcall
mov
jmp
andb
les
push
inc
ljmp
mov
hlt
and
call
jmp
push
ss
out
cmp
mov
mov
add
dec
rcl
in
iret
push
rolb
jae
adc
or
lret
pop
cwtl
dec
rcl
ljmp
xchg
inc
push
jae
jge
scas
aaa
std
incl
push
mov
or
inc
ffree
add
xchg
pop
dec
adc
out
sbb
mov
outsl
mov
cmp
or
xor
jns
in
inc
mov
push
push
xor
iret
xchg
gs
test
ficomps
xchg
add
mov
mov
sub
andl
mov
addr16
arpl
lahf
inc
loopne
push
shl
data16
in
jecxz
ljmp
int
mov
pop
out
mov
mov
ret
int
stc
jnp
stos
dec
cmp
lcall
jnp
jno
out
aam
ficompl
adc
cmp
loopne
js
mov
mov
inc
or
mov
mov
ret
push
mov
pop
icebp
lcall
sar
jg
scas
cmp
mov
mov
mov
sbb
jecxz
mov
or
lcall
mov
mov
and
iret
outsb
pop
or
ljmp
outsb
cmp
push
loope
xchg
mov
sub
xor
fnstcw
push
call
rcrl
bound
inc
mov
aaa
ja
xchg
pop
fxch
ret
sar
lcall
negl
fdivs
out
cmp
mul
xchg
ja
ss
mov
sbb
test
lcall
iret
pop
clc
mov
pop
mov
cmp
das
or
sub
jg
push
sbb
jl
subb
subl
pop
lods
incl
or
xor
sub
jnp
out
sbbb
jno
mov
or
lret
ljmp
dec
inc
mov
cltd
adc
push
dec
sub
fwait
cmp
iret
xlat
addb
xor
fsub
or
sbb
jmp
mov
mov
shrl
fnstcw
in
dec
imul
popf
mov
fsts
dec
js
dec
into
push
dec
mov
incl
cmp
mov
mov
outsb
scas
dec
in
sub
mov
das
shl
jb
jmp
mov
push
ja
fcmovbe
shr
ror
mov
jmp
cmp
inc
sbb
std
lahf
out
test
and
inc
shrb
sbb
nop
ret
aas
fmull
xlat
or
jmp
pop
pop
bswap
cmp
es
add
jg
sahf
cmp
into
cmpsl
ljmp
cmp
das
repnz
sbb
jnp
mov
js
imul
jge
lods
add
push
outsl
lcall
iret
test
sub
ja
repz
push
xchg
enter
dec
decb
popa
sub
xchg
xor
lgs
lret
out
add
push
sbb
inc
jbe
test
divl
insl
test
popa
out
mov
mov
dec
jg
fmull
lret
push
into
je
jmp
push
and
push
ret
add
cmp
dec
call
dec
cmp
rcll
sub
inc
or
add
mov
cmp
lcall
xor
call
test
in
fisubl
divb
xchg
mov
fucomp
mov
xchg
push
sbb
or
call
inc
movsl
bound
sub
cmp
lods
inc
aam
xor
sbb
add
adc
jg
ljmp
pop
adc
cmp
inc
pop
fiadds
xchg
pusha
div
loope
mov
lret
push
imul
iret
jmp
in
enter
daa
dec
inc
mov
js
mov
clc
popa
xchg
lea
jbe
call
sub
mov
mov
call
xor
lods
jecxz
inc
lock
cmp
inc
movsl
shll
push
xchg
imul
dec
sub
insb
cli
sub
cmp
jg
call
pop
cmp
js
cmp
push
insb
fistps
rolb
test
pop
mov
scas
mov
xchg
adc
loope
mov
repz
mov
sub
mov
xor
decl
scas
repnz
mov
xorl
dec
and
mov
lods
push
aaa
and
inc
fdivrl
push
mov
xor
push
sbb
jno
add
inc
les
adc
dec
adc
and
incl
lahf
add
loopne
sbb
xchg
mov
iret
fldcw
cmp
lods
loopne
lcall
adcl
into
out
sahf
inc
out
sbb
jo
cmc
push
cmpsl
or
movsl
push
jge
cld
mov
sub
pop
mov
mov
or
lret
pop
or
cmp
out
aad
roll
decl
and
addr16
fcmovnbe
jle
cmp
jns
mov
incl
mov
imul
pushf
sbb
jmp
popf
call
icebp
and
xor
push
mov
fdivl
rcll
flds
fistps
dec
fsub
mov
std
ljmp
lock
jnp
jne
rcl
data16
movsl
fbld
or
xchg
repz
jno
fwait
std
push
fwait
out
mov
std
jne
push
test
sti
or
jmp
lods
pop
iret
mov
mov
mov
in
cli
rorl
je
push
out
decl
pop
std
mov
mov
sahf
jmp
and
outsl
push
add
xor
in
paddq
push
ret
pop
dec
scas
mov
push
and
outsb
inc
and
jno
decl
fisttps
stc
add
and
pop
xchg
aam
pop
cmp
add
jecxz
push
push
jb
hlt
cs
daa
ljmp
xchg
cld
jecxz
outsb
sbbb
je
xchg
cld
pushf
mov
inc
dec
mov
aad
ja
pop
mov
mov
fwait
movb
sarl
rclb
int3
mov
jg
dec
outsl
data16
cs
sahf
pop
std
cld
orb
jle
popf
das
jae
es
jmp
xchg
mov
jmp
pop
stc
cmc
adc
fcoms
sbb
incl
dec
int
mov
imul
ret
mov
sub
adc
lea
loope
cmp
std
xlat
in
xor
mov
push
cmp
adc
pop
js
loopne
adc
cmpsl
das
add
xchg
rcrl
das
fadd
repz
mov
movsb
add
jle
cmpsb
fmuls
lods
lds
inc
fs
sbb
ljmp
jg
out
rcrb
rolb
addr16
push
call
sub
mov
push
jge
cld
arpl
lret
test
outsl
or
adc
lret
inc
lahf
mov
mov
xchg
lcall
jmp
pop
pop
push
xchg
inc
or
xchg
es
inc
xchg
insl
incb
lret
dec
add
fldl
decl
mov
or
inc
sbb
lret
ret
pushf
stos
pop
mov
xor
and
es
stos
cld
mov
push
xor
fcmovu
js
adc
cmp
mov
mov
jmp
insl
repz
fstl
cmpsl
and
outsb
mov
jnp
push
push
repz
aas
jo
sbb
cmp
out
clc
bound
pop
shll
lcall
ficoml
push
add
cli
mov
jnp
je
insl
cmp
and
push
push
mov
lcall
xchg
and
mov
mov
clc
ljmp
or
leave
mov
sti
adc
cld
hlt
xchg
arpl
jae
stos
aam
pushl
cld
incl
aaa
add
out
push
testl
mov
mov
scas
push
jmp
stc
cld
adc
or
push
jle
xchg
fisubrl
xchg
incl
jo
sbb
push
shrl
adc
mov
shlb
sbb
test
xchg
ret
gs
lcall
in
and
cmpb
xor
lds
and
stos
xchg
mov
pop
out
add
push
push
push
push
dec
mull
lret
int
adc
and
pushl
jbe
sbb
fldenv
adc
cmp
test
loop
out
lcall
fwait
ss
decl
dec
inc
xor
adcb
cmp
sahf
sbb
scas
inc
inc
shll
dec
jae
movzbl
xlat
inc
in
jno
mov
push
sbb
repnz
in
ljmp
lahf
iret
jl
add
xchg
hlt
es
xchg
mov
ljmp
sbb
lods
cmpsl
pushl
imul
pop
stos
push
fiaddl
pop
fs
or
adc
or
jnp
xor
icebp
popf
mov
xchg
cmp
fs
pop
inc
incl
inc
test
out
rclb
stos
aaa
dec
cmpsl
mov
add
inc
mov
in
jmp
fcompl
repnz
ss
cwtl
insl
repnz
adc
pop
or
xor
or
adcb
cwtl
out
in
lret
dec
aam
jne
aas
test
call
mov
dec
loopne
mov
sti
ret
add
jp
jnp
in
jle
cmp
xchg
cmpsl
mov
xchg
cmpsb
inc
pop
cmpsl
or
mov
call
je
push
jecxz
clc
pushl
mov
dec
and
sbb
fwait
div
sub
mov
inc
adc
push
insl
jg
aas
out
pop
cltd
ficomps
je
push
mov
repz
loope
mov
inc
or
cli
pushl
jns
shrb
cwtl
mov
push
gs
in
inc
cltd
push
mov
push
int3
and
ljmp
push
jnp
enter
imul
or
mov
cmpsl
sub
mov
lock
call
negb
inc
hlt
cli
xor
jg
adc
ficomps
outsb
ffreep
xchg
inc
and
pop
inc
out
movsl
pop
mov
lock
push
sub
push
adc
or
push
or
adc
rcrl
in
pop
dec
call
decl
loop
mov
or
push
xchg
jns
adc
in
adcl
divb
inc
mov
push
cwtl
pop
push
pop
jb
mov
adc
mov
ljmp
call
lcall
mov
lea
mov
pop
aas
inc
pop
xchg
insl
xor
loopne
loop
lret
ljmp
adc
mov
fwait
lods
inc
enter
fs
out
sbb
cs
push
inc
outsb
fwait
jp
popf
adc
repz
ret
lea
xor
add
dec
std
add
out
mov
outsl
and
jg
mov
cmc
cmp
repz
test
ss
inc
mov
xor
leave
ss
pushl
cmp
insb
clc
ss
adcl
jecxz
int3
dec
into
sub
enter
xor
pop
pusha
sbb
xchg
xchg
adc
pushf
test
daa
mov
pop
adc
jg
decl
push
mov
sahf
in
fmul
in
dec
jg
repnz
bound
inc
ljmp
fbld
inc
sar
inc
test
popl
movsb
xchg
int
aaa
jbe
pop
loop
jmp
pop
stc
mov
adc
xchg
and
dec
jmp
daa
aaa
jl
aad
adc
and
dec
sbb
jl
sbb
je
sbb
ljmp
mov
sarb
in
test
stos
scas
arpl
repz
hlt
and
call
jge
fstl
mov
sbb
jg
int
nopl
nop
ljmp
test
insl
pusha
sbb
je
dec
cmpsb
sbb
icebp
xor
and
loope
inc
push
cld
dec
fsubp
add
xchg
mov
scas
stos
mov
clc
sub
inc
jmp
push
mov
mov
call
push
sbb
jo
xorb
arpl
nop
testl
call
xor
movsb
and
data16
adc
clc
imul
or
adc
adc
pop
ja
arpl
adc
xor
sub
pop
sub
or
jmp
jmp
nop
push
test
sahf
or
and
mov
mov
je
cmpb
xor
insb
pop
adcb
std
sub
in
das
cltd
jnp
pushl
push
jne
add
xchg
ja
movsb
mov
jle
sub
adc
mov
sbb
or
inc
jg
into
jecxz
negb
std
out
popf
mov
lods
aam
lods
sbb
lcall
dec
pop
pop
pop
xchg
xor
scas
jae
sub
les
sub
xchg
sahf
push
loope
sub
sub
sbb
sbb
imul
sbb
cmp
inc
xor
xor
pushl
std
out
mov
pop
adc
aad
mov
pop
rol
dec
and
enter
jg
fcmovnu
decb
mov
cmpsb
cmpsb
lahf
push
scas
lods
ss
jno
xor
scas
sub
pushl
push
lds
and
fdivl
je
out
outsb
movl
cld
pushl
cmp
xchg
and
push
push
out
shl
mov
dec
xor
mov
js
test
jnp
shl
enter
dec
mov
aam
out
jle
cmp
lcall
jmp
mov
cmp
push
sbb
jmp
mov
mov
lods
xchg
jb
decl
mov
or
or
mov
and
stc
mov
sub
test
loop
adc
ret
sub
mov
fdivl
movl
decl
gs
movsl
pop
sub
jg
adc
pop
scas
inc
mov
shll
movsb
jg
lcall
xchg
clc
outsb
and
lods
in
movsl
inc
dec
or
pushl
inc
repnz
inc
hlt
mov
fstpl
in
jge
in
cmp
xchg
jg
xchg
jae
add
mov
mov
imul
ror
orl
lds
call
mov
fistpll
loopne
lret
mov
fstpl
sub
mov
je
dec
pop
outsb
pop
push
or
or
cmpsl
test
cmp
bound
lahf
pop
mov
jo
push
decl
movb
or
mov
rcll
xchg
dec
sub
cmp
add
leave
xchg
incl
xor
lds
push
sbb
mov
and
fld
cwtl
dec
rolb
lock
mov
dec
sub
xor
jo
mov
and
popa
aam
pop
xchg
fbld
scas
sub
ja
mov
add
outsb
xchg
and
shrb
dec
add
push
jb,pt
jle
xchg
inc
out
ret
add
out
dec
ficompl
stos
dec
cmpsb
jle
out
hlt
es
test
xchg
into
dec
push
jg
cmp
or
cmpl
btl
inc
loop
cld
lcall
cs
movsl
into
jnp
mov
cli
movsl
inc
jbe
test
out
mov
mov
add
and
mov
or
sub
fcompl
or
mov
rorl
aad
les
inc
push
hlt
push
jnp
jbe
icebp
push
cld
jmp
nop
mov
jbe
sub
xchg
mov
lea
add
jp
lcall
mov
loope
outsl
ret
jns
pop
arpl
mov
push
xchg
aam
icebp
or
stos
in
jg
decl
ret
add
mov
mov
pushf
mov
jno
sbbl
pop
or
mov
aaa
or
or
repz
add
xchg
out
dec
pop
out
ss
pop
call
mov
sbb
mov
out
mov
and
add
mov
push
sbb
mov
mov
dec
mov
mov
pop
out
jne
das
pop
popa
mov
fcomip
mov
je
insl
xlat
or
push
aam
add
xlat
in
jg
push
call
mov
sbb
popa
sbb
inc
xor
push
inc
adcl
jmp
pushf
mov
inc
sahf
outsl
imulb
decl
xlat
in
mov
mov
arpl
out
xchg
sbb
jae
movsl
or
icebp
decl
cmp
sub
mov
push
cmpsl
push
lcall
adc
and
cmpsb
push
lods
jmp
pop
lahf
inc
lods
jecxz
pusha
lds
sbb
xchg
add
push
mov
lock
stc
jne
inc
aam
incl
sub
ficoml
lret
cld
test
lea
jnp
fnstsw
or
fcomip
mov
outsl
subb
push
popa
add
lret
fldl
jmp
test
or
mov
push
or
mov
js
push
xor
out
movsl
ror
mov
js
das
shlb
aad
add
icebp
or
stc
adcb
decl
fcmove
and
mov
adc
xlat
dec
stos
mov
push
jge
xchg
xor
in
das
mov
mov
sti
pop
xchg
or
sbbb
lret
hlt
add
ss
pushl
inc
cmp
aam
outsb
fbstp
jecxz
movsl
test
fcmovu
in
inc
sub
pushl
ficoml
push
fisttpl
jns
lock
fmuls
pop
jmp
cmc
addr16
fisubrs
mov
and
test
cli
dec
mov
int
cmpsb
out
xchg
std
jg
popf
or
push
jmp
dec
push
jg
and
mov
sti
and
push
daa
xchg
mov
dec
test
xchg
mov
fcoml
sub
icebp
movl
ds
ljmp
test
fiadds
repnz
inc
add
xchg
lcall
roll
fwait
pushl
in
mov
es
xchg
pop
test
cmp
push
lock
mov
pusha
in
nop
add
loopne
sub
call
aaa
scas
pop
cltd
faddl
pop
pop
pushl
pop
dec
lods
or
cwtl
add
or
sbb
lahf
out
rcl
call
ljmp
movsb
inc
jbe
lock
stc
pop
or
jle
repz
decl
mov
inc
popf
sub
enter
mov
and
jns
out
jecxz
data16
ljmp
fisubrs
xor
repnz
aas
pop
dec
lea
fsub
bound
jb
mov
or
cmp
pop
shll
inc
mov
jecxz
add
jae
and
push
sbb
jl
fisubrs
sbb
dec
aaa
dec
ja
jge
test
lahf
mov
sarl
stos
repnz
gs
adc
inc
jo
jl
sbb
lcall
pop
add
adc
xlat
xor
in
test
and
lcall
mov
push
stos
in
es
fwait
lfs
push
lds
inc
lds
das
clc
mov
imul
pusha
mov
lds
push
cmp
mov
mov
sub
xor
mov
test
fstps
es
push
lcall
orb
xchg
xlat
push
push
xor
xchg
mov
movsb
pop
lcall
xchg
inc
and
incl
cld
adc
push
mov
fisubs
pop
mov
inc
sti
or
jmp
loope
leave
pushf
test
sbb
push
imul
gs
and
arpl
mov
sti
jmp
bound
adc
dec
mov
addr16
and
dec
test
sti
ss
dec
ljmp
jle
push
sahf
loop
sbb
mov
cmp
lods
daa
pop
loop
call
fisttpll
push
mov
xchg
int3
fistpl
cmp
mov
decl
xchg
mov
arpl
dec
lock
imul
dec
mov
push
sub
in
rcrb
clc
push
inc
pop
das
mov
call
xor
sbb
add
ljmp
fists
mov
ucomiss
addr16
push
or
xchg
sbb
mov
decl
xor
xor
out
add
pop
xor
outsl
fistl
pop
sahf
icebp
das
sub
lcall
jge
add
inc
inc
mov
sbb
pop
cmpsb
cmp
sub
and
xchg
arpl
call
std
pop
xchg
mov
stos
lods
mov
adc
mov
pop
cmp
xor
out
lcall
nop
jnp
adcb
adcl
cli
rorl
sar
sub
or
jmp
mov
fdivs
push
rorl
pop
sub
sbb
sub
mov
or
pushl
sar
leave
das
stos
js
xchg
adc
aas
mov
xor
adc
sbb
fcomip
in
aaa
iret
sar
mov
push
and
fcmovne
lods
ss
ljmp
lcall
sahf
ret
add
bswap
push
xor
pop
xchg
push
mov
pop
xorl
push
mov
lcall
pop
or
adc
xchg
cmpsl
sti
sub
cmp
jle
push
mov
push
dec
or
sbb
leave
inc
cmp
lcall
addl
addl
adc
sub
or
call
mov
xor
bound
call
inc
cmc
jbe
ljmp
push
call
pop
mov
pop
adc
sub
mov
cltd
outsl
push
leave
lods
push
add
inc
out
jo,pn
fwait
push
pushl
pusha
sbb
pop
xchg
sti
xchg
mov
pushf
movsl
outsb
fidivl
lcall
cmp
mov
dec
lcall
sub
and
call
mov
xchg
rcrb
enter
xchg
in
jmp
mov
mov
add
clc
inc
jmp
pop
lock
incl
mov
stos
sub
xlat
sbb
sbb
popf
dec
and
add
push
jo
push
jp
mov
adc
mov
enter
int3
iret
add
gs
pop
sti
jg
stos
push
sub
mov
ljmp
repz
push
inc
pop
mov
jnp
es
sbb
mov
mov
push
mov
adc
mov
inc
in
push
push
hlt
popf
cmp
xchg
aam
sbb
cmpsb
pop
mov
scas
mov
xor
xlat
jnp
jle
adc
xor
cmp
push
cmpsb
mov
or
adc
out
lcall
mov
xor
inc
ja
ljmp
fs
pop
fisttps
push
and
fcoms
inc
mov
into
ljmp
push
scas
and
xor
sbb
loop
ret
sbb
ljmp
fdiv
incb
push
sti
push
inc
push
dec
jb
dec
mov
dec
adc
and
dec
imul
dec
ja
test
push
mov
inc
dec
insl
sti
dec
xchg
int
jle
jmp
jo
xchg
jae
test
jp
outsb
or
repz
or
mov
jmp
and
decl
adc
inc
add
lods
dec
mov
fstps
or
cmp
jbe
sbb
insl
shll
inc
mov
test
xchg
sub
pop
jmp
fcom
or
test
fwait
fs
incl
cmc
icebp
repnz
orl
xorl
adcl
cli
ljmp
clc
nop
lcall
xchg
add
xchg
push
push
iret
inc
pushl
js,pn
dec
es
push
mov
das
pusha
out
sbb
int3
mov
dec
cli
inc
jb
movsl
neg
cld
or
ljmp
das
pop
pop
ja
add
mov
jp
push
push
fsub
stc
mov
or
movsl
jge
lcall
and
dec
imul
mov
xor
or
cs
xchg
add
repnz
or
dec
xchg
xchg
cmpsl
fs
incl
jne
popf
adc
cmc
insb
mov
lods
sub
jecxz
aaa
lret
mov
jg
pop
lock
inc
std
cmp
jmp
pushf
pop
adc
in
mov
inc
jmp
mov
addb
pop
je
fwait
and
lahf
rorb
xchg
test
mov
pushl
cmc
jg
decl
leave
daa
sahf
cltd
xor
xchg
mov
sub
cld
les
cmp
decl
repnz
lret
lcall
repnz
xchg
jo
rcrl
adc
ds
sbb
mov
loopne
lret
rcl
and
pushf
cmp
gs
push
jb
aad
test
push
and
std
pop
inc
mov
decl
clc
icebp
mov
stos
sub
ja
sub
scas
in
sti
or
and
and
call
jle
arpl
jmp
add
jnp
sahf
sbb
movsb
les
push
and
popa
ljmp
sbb
in
jo
in
and
rcrl
and
loopne
lods
dec
stos
lea
jmp
pop
inc
insb
mov
dec
inc
dec
loope
out
sti
adc
jnp
cmpsl
adcl
in
jle
xchg
pushl
call
cli
cs
add
push
and
and
mov
xor
test
lcall
push
or
jae
scas
stos
fstps
pushf
mov
xchg
stc
int3
arpl
mov
xlat
lcall
in
rorb
mov
mov
xchg
adc
xchg
pushf
ficoml
jg
sbbl
sub
pop
dec
pop
cmpsb
daa
clc
push
pop
add
ja
decl
jb
inc
dec
and
cld
call
xor
aad
and
lret
call
out
mov
jmp
outsb
cmp
sbb
gs
decl
in
mov
dec
cld
sub
add
out
fbstp
int
imul
call
push
xchg
jns
out
cmp
sub
jmp
jmp
push
mov
mov
loope
test
mov
cmc
call
sub
in
es
push
xchg
cwtl
jg
adc
jo
pop
pop
cmp
push
rolb
scas
xor
add
or
test
imul
idiv
in
stos
mov
into
pushf
mov
ja
js
cmpsl
add
mov
xchg
loopne
cli
lods
cmp
ja
in
fists
mov
fidivrs
adc
mov
mov
incl
or
inc
std
std
fildll
add
and
test
popf
sbb
inc
aaa
xchg
xor
ss
cmc
fbld
jg
jbe
ret
mov
push
adc
aad
inc
ljmp
jbe
in
test
outsb
leave
stos
in
mov
imul
movsb
jb
jecxz
in
sub
adc
out
jmp
sahf
jae
aaa
push
mulb
mov
dec
sub
data16
dec
mov
push
xchg
mov
sbb
inc
iret
inc
dec
aad
cmp
bound
push
gs
stos
inc
lret
pop
sbb
jg
loope
out
loope
daa
dec
mov
push
jbe
ljmp
outsl
fstpl
std
out
sub
push
jl
add
push
xchg
sbb
sub
mov
mov
pop
outsb
js
mov
je
ret
add
repnz
adc
add
and
inc
jno
adc
pushl
repz
popf
insb
push
enter
rclb
aam
out
je
fsubs
add
lods
cmpsl
push
fcmovbe
inc
or
lahf
jmp
or
cmp
and
arpl
pop
mov
fcoml
push
out
pusha
incl
in
lock
sbb
pusha
in
cltd
add
aas
imul
stos
mov
call
mov
stos
cmp
in
outsb
adc
repz
jo
xchg
lds
pop
addr16
inc
mov
fistps
xchg
xor
add
mov
push
fs
ret
mov
pushl
mov
push
mov
sbb
out
fsubrs
push
subb
mov
fdiv
dec
xchg
cmp
sub
inc
mov
decl
pop
movlps
mov
push
mov
pop
push
cli
or
call
inc
cltd
stc
sahf
xchg
in
gs
dec
aad
add
mov
jmp
pop
mov
jg
loopne
mov
ljmp
xor
jge
jmp
outsb
and
inc
cmp
add
mov
jmp
aas
lcall
dec
xbegin
cmp
xlat
mov
dec
loope
cmp
pushl
pushf
stos
gs
fcmove
mov
rclb
lods
add
cmp
jb
mov
clc
fwait
decl
jbe
test
insb
es
mov
mov
repnz
jg
enter
out
dec
das
lea
add
inc
in
subb
dec
stos
das
pop
xchg
rolb
nop
addl
pop
arpl
rcr
push
enter
jnp
outsb
dec
in
ds
imul
in
jmp
xchg
loope
xchg
fwait
xor
jb
in
fists
sbbb
pop
in
jno
cltd
cli
push
jg
inc
incl
and
jge
mov
dec
out
dec
push
insl
sub
ljmp
scas
mov
add
popa
stc
mov
hlt
mov
dec
pop
notl
mov
pop
inc
addr16
mov
call
je
or
call
dec
add
cwtl
push
sti
cmp
movsl
lods
mov
rorl
pop
call
push
lea
outsl
mov
aas
add
sahf
std
inc
jo
ss
pop
push
adc
pop
mov
mov
mov
sbb
ja
pusha
jp
inc
xor
pop
inc
sbb
xchg
jmp
dec
sub
and
aad
lahf
jnp
xchg
add
sub
adc
fistps
or
popa
inc
bound
mov
jo
lret
adc
cmc
mov
daa
int
lcall
loopne,pt
xchg
or
xlat
mov
fs
dec
and
aas
ja
dec
dec
jmp
pop
sahf
push
rorb
pop
xchg
dec
rclb
add
js
jg
incl
mov
add
jp
push
jge
add
or
sbb
lea
cmp
decl
cwtl
rorl
les
and
pop
push
mov
into
outsl
aam
xor
cmpsb
test
ljmp
es
sar
pop
mov
xor
mov
dec
and
and
pop
rcrb
pop
incl
xchg
sbbl
lea
push
inc
sub
jae
push
xchg
jge
xchg
mov
xor
add
mov
pop
and
aam
inc
mov
jge
inc
call
popf
int
mov
movl
mov
aad
push
pushl
cwtl
push
jbe
push
xchg
mov
xor
lahf
add
fcoms
test
ljmp
sbb
lea
fs
xor
pusha
in
mov
cltd
cmp
mov
clc
incl
pop
mov
add
in
jns
ret
pop
add
loop
scas
sar
jmp
rcrb
xchg
pop
mov
add
insl
repnz
cmpsb
movsl
inc
int3
sahf
fcomip
jg
dec
in
inc
sti
mov
jae
mov
dec
dec
or
insb
pop
add
inc
push
and
outsl
pop
sub
inc
jle
dec
and
push
lods
adc
mov
incl
out
movsb
mov
ss
mov
mov
cmpsb
push
cmpb
push
cmp
decl
push
sbb
repnz
stc
adcb
jbe
outsb
jns
push
xlat
iret
js
call
addr16
mov
push
adc
sahf
imul
fldln2
push
xchg
mov
hlt
and
push
in
and
mov
sbb
xor
mov
adc
pop
es
inc
jmp
or
repnz
pop
incb
repnz
cmp
ljmp
dec
sti
mov
add
adc
cmp
or
mov
add
mov
fsubs
sbb
arpl
dec
xor
xlat
xchg
je
mov
out
cli
incl
lods
mov
or
dec
das
cli
mov
mov
ss
cld
incl
sub
mov
dec
mov
mov
xor
adc
std
inc
or
pushl
insl
pushl
jbe
arpl
cwtl
stc
inc
jp
pushf
neg
push
fisttpll
pushl
mov
dec
js
cmp
mov
ror
xor
in
decl
jae
and
mov
add
movsl
sahf
fistl
push
sbb
pop
leave
gs
call
call
dec
repnz
push
shrb
jbe
es
xor
divb
incl
les
addr16
test
pop
out
ja
push
cmp
xchg
cmp
dec
adc
xchg
sub
jnp
or
loop
sbb
ljmp
ret
add
ljmp
incl
xor
add
sbb
and
add
lods
sbb
arpl
fmulp
inc
xor
decl
fcmovne
pop
xchg
pop
inc
pop
or
insl
sub
dec
jmp
adc
cmp
decl
sub
mov
jbe
std
mov
add
sbb
xchg
pushf
test
xor
xchg
daa
mov
mov
popa
mov
in
sarb
inc
es
test
mov
jg
incl
enter
mov
rol
subl
in
ds
call
cmp
mov
mov
xor
or
lock
adc
popa
out
push
icebp
inc
pop
lea
arpl
jb
incl
lea
xchg
popa
bts
pop
ret
ret
jg
frstor
sub
out
js
fcomip
adc
xchg
xchg
jne
pop
mov
jg
mov
mov
sbb
push
sahf
pop
rol
imul
stos
fnstcw
mov
pop
dec
in
call
testl
shrb
out
xchg
xor
test
xchg
aas
pop
ror
pop
insb
lret
das
mov
fmuls
pusha
test
mov
dec
sbb
enter
lcall
aad
dec
rcrl
shlb
pop
sti
inc
scas
ret
xor
dec
fldt
xchg
push
push
insb
jmp
in
and
xor
sub
in
mov
jmp
fs
xor
popa
push
inc
pop
add
xchg
mov
pop
push
and
jg
icebp
mov
and
xchg
or
mov
mov
mov
fldenv
aad
ss
leave
sub
aam
push
fsubs
xor
cmpb
push
dec
pop
push
fbld
xor
bound
cmp
lcall
call
jecxz
aam
in
pop
push
xor
stos
and
jb
aam
cmp
or
clc
lds
push
dec
cwtl
sar
push
bound
fisubrl
shlb
adc
push
lods
scas
mov
jg
cmp
jno
mov
sbb
push
mov
mov
mov
mov
lcall
sbb
cmp
jmp
sti
inc
jno
decl
jl
ud0
add
neg
outsb
sbb
xchg
sub
out
jb
mov
push
cmp
hlt
cltd
rorl
cmp
mov
shl
adc
decl
imulb
loop
test
out
sarl
dec
and
out
orl
ljmp
icebp
dec
lds
bound
loope
adc
push
pop
rcrb
psrad
jmp
mov
call
out
dec
int
mov
enter
xchg
xchg
mov
ljmp
mov
insb
mov
arpl
cs
pop
pop
inc
xchg
pop
cltd
mov
imul
pushl
xchg
insb
scas
cltd
sahf
xor
inc
movsl
inc
andb
adc
fwait
xchg
cmp
test
pop
incl
lods
pop
out
cmpsl
pop
stc
imull
xchg
dec
mov
aad
sti
ja
aas
adc
adc
pushl
mov
jle
test
mov
xor
aad
ljmp
push
dec
add
cmp
add
cmc
cmpsb
xchg
push
aaa
insl
or
insl
push
fsqrt
mov
popa
mov
mov
push
sbb
xor
aad
push
movl
idiv
out
mov
jmp
sub
inc
nop
mov
mov
clc
adc
stos
inc
ja
jle
dec
or
leave
aad
inc
push
fidivrs
rol
push
push
jns
cs
sbb
ljmp
jl
push
popf
enter
les
add
test
insl
les
fwait
pop
loop
incl
mov
pushf
in
cmp
push
or
jb
pusha
add
nop
sbb
movsl
out
ja
mov
jmp
xchg
test
loopne
or
flds
sarb
ljmp
jl
pushl
pop
cmp
test
pop
and
pop
xor
or
jnp
jns
push
adc
out
decl
mov
pop
jns
pop
adcb
int3
adc
inc
pop
das
xchg
inc
sbb
sbb
pop
xlat
mov
call
xchg
jno
jge
push
lds
sbb
jnp
jecxz
mov
jge
imul
inc
fwait
rorb
cwtl
adc
cmpsb
test
insl
lcall
ljmp
mov
pop
xor
cli
mov
lods
fprem
sbb
insl
lea
pushl
cmp
je
cmp
xor
in
xor
fimuls
incl
adc
jmp
xor
inc
clc
or
sub
push
addl
int3
rorl
sti
inc
and
fmull
xor
fisttpll
xor
xchg
adc
popf
inc
inc
loope
decl
mov
or
stc
jp
mov
add
jae
lahf
xchg
inc
xor
outsl
cli
in
pop
jp
mov
xchg
out
inc
xorb
and
sbbw
pop
pop
xor
sbb
mov
incl
das
adc
fcmove
xor
repnz
cmp
mov
cmp
and
sbb
pop
jo
cmp
insb
adc
add
inc
incb
pop
scas
xchg
inc
mov
insb
mov
xchg
xor
ljmp
mov
push
in
stc
fwait
sub
pushf
clc
push
pop
adc
push
mov
push
jae
jmp
push
test
lret
dec
adc
cli
mov
jecxz
les
cld
lcall
mov
xor
sbb
pop
jg
cmp
or
and
pop
pushf
mov
subl
jg
insb
xor
fsub
or
or
jbe
adc
std
pop
fsubrs
cmc
xchg
jno
movsl
je
out
call
std
ljmp
cmp
and
aas
sbb
dec
fadd
dec
xchg
icebp
cmp
or
lcall
popl
sbb
mov
cmpsb
add
or
or
leave
ds
insb
and
fldcw
lcall
mov
pop
xor
mov
ss
jnp
mov
sub
fdivrp
clc
push
jp
cmp
fcoms
je
xchg
mov
mov
mov
mov
add
jg
sbb
cltd
scas
pop
mov
fdivrp
mov
mov
daa
xchg
and
add
pop
xchg
imull
or
pop
mov
popa
pushl
sti
jnp
jae
out
add
fldl
xlat
xor
cmpsb
dec
or
jecxz
mov
push
decl
std
dec
and
lea
sar
sbb
out
pusha
stc
add
sbb
scas
jae
cmp
xchg
xor
pop
cs
sbb
pop
insl
sbb
mov
loopne
jmp
mov
lcall
push
mov
imul
dec
iret
nop
sbb
pop
cmpsl
icebp
loopne
sbb
adc
scas
xchg
push
adc
inc
sbb
add
imul
ror
mov
sbb
pop
repnz
decl
scas
dec
inc
imul
pushf
xchg
adc
jo
lahf
aam
xchg
fdivl
sub
add
mov
loopne
stos
pop
sub
scas
mov
add
and
adc
sub
mov
aam
pop
cmpb
fidivs
jle
xchg
mov
mov
inc
pop
push
xor
sbb
inc
jo
lock
ficoms
push
jne
push
fs
sbb
call
popa
push
mov
cmp
xor
imul
out
sub
into
jne
mov
add
xchg
lea
iret
push
xchg
mov
fisttps
fcmovbe
mov
cmpsl
pop
sub
movsb
pop
je
mov
xchg
cltd
imul
xor
int3
mov
ljmp
and
call
call
movsb
outsl
push
xchg
push
pop
inc
inc
pop
movsl
lock
shrb
imul
add
ja
out
in
sbb
pop
xchg
lret
push
push
notl
push
fcomps
xchg
sub
jno
and
pusha
bswap
inc
inc
cmc
std
sub
mov
lret
divl
or
adc
mov
mov
jb
movsb
push
push
adc
xor
fs
jo
sbb
imul
mov
push
and
jo
mov
xchg
mov
pushl
outsb
jg
pop
aad
roll
pop
or
jne
out
les
mov
dec
xchg
inc
or
and
or
mov
mov
icebp
pusha
xor
cld
sbb
push
cwtl
into
xchg
lods
add
fcomip
adc
push
mov
add
fnstenv
scas
cli
call
movsl
pop
lea
mov
xchg
lahf
jo
nop
xchg
shl
xorl
xchg
scas
bound
xchg
mov
push
add
adc
int3
into
test
cltd
cmpsb
out
stc
push
jecxz
addb
out
cli
imul
dec
push
addl
mov
jne
push
jmp
aam
addr16
push
imul
add
push
testw
repz
push
xor
adc
nop
pop
bound
mov
imul
jmp
mov
xchg
mov
std
shll
lcall
stos
movsb
cmp
jne
xor
push
aad
push
or
daa
cmpl
incl
shrb
sub
test
fistps
fcomps
or
call
cmpsl
ret
dec
lahf
scas
faddp
jae
jecxz
fwait
cmpb
sbb
addl
mov
stos
xchg
push
mov
inc
pop
lret
xor
jge
pop
subb
jmp
or
shr
arpl
push
cmp
mov
push
sub
or
mov
inc
lahf
dec
xor
xlat
inc
cmpl
sbb
movsl
mov
jmp
push
sbbl
popf
sub
and
punpckldq
mov
sti
dec
lock
leave
cwtl
pop
cmc
decl
pause
pop
xorl
adc
cmp
push
aad
push
rcr
jg
inc
mov
pop
test
outsl
mov
rcrl
mov
lcall
lcall
mov
inc
pop
jne
aaa
inc
mov
loope
and
jae
jbe
mov
push
dec
xor
lock
call
enter
add
pop
sbb
into
sub
nop
push
in
sarl
add
faddl
sub
call
movsb
clc
arpl
add
xchg
cmp
lods
jg
popf
mull
push
incl
aad
inc
pop
fmuls
std
outsl
jnp
fidivrs
mov
inc
in
into
mov
sbb
mov
call
lods
jae
and
inc
gs
incl
call
adc
mov
fsubrl
adc
bnd
cmp
mov
sub
loopne
fwait
in
fs
std
shlb
dec
mov
pushl
in
mov
xor
sbb
pop
cmp
outsl
mov
incl
xor
loopne
loopne
mov
jae
push
sahf
shrb
adc
push
push
or
pop
mov
clc
and
adc
ficompl
dec
incl
call
test
loop,pt
adc
in
dec
sti
xchg
pop
in
lcall
cld
inc
mov
jb
outsb
in
ss
idivb
adc
mov
lods
mov
aam
movsb
inc
xor
stos
sub
sub
cmp
push
adc
xchg
sub
xchg
push
loope
pushl
jecxz
shll
pusha
push
add
gs
jne
aaa
adc
cmp
ljmp
adc
add
insl
leave
jae
xchg
dec
push
mov
int3
insl
xor
or
mov
jle
cmpsl
inc
gs
xor
or
fcos
decl
in
lock
imul
jnp
xchg
faddl
jmp
lahf
lock
movsl
jne
imul
out
aas
stos
popf
adc
ret
mov
jge
lcall
addr16
sbb
sub
sub
inc
inc
inc
jge
cld
sub
loop
jmp
ret
movsl
stos
pushl
inc
ret
pop
xor
mov
inc
test
or
mov
das
mov
cmp
icebp
std
decl
and
mov
outsl
inc
jae
cmp
rcl
and
popa
fcomip
ja
or
jle
dec
push
outsb
test
and
dec
inc
sar
ljmp
sbb
pop
pop
lcall
mov
cmp
dec
add
ficoml
lds
jmp
push
mov
loop
mov
mov
orl
inc
pop
fnstcw
ljmp
pushf
mov
xchg
jecxz
cmpsb
push
into
loope
faddl
lret
dec
add
xor
aaa
cld
bound
and
incb
nop
popa
dec
mov
aad
jbe
sub
ds
inc
mov
and
push
and
cmp
jnp
shrl
aad
scas
in
push
sbb
lret
xchg
fwait
loope
push
fcomps
mov
lea
xor
mov
or
scas
xor
pop
imul
sar
lcall
jle
pop
int3
push
ret
push
xchg
xor
xchg
aam
or
push
test
lret
ljmp
into
add
loop
imul
add
push
adc
inc
xor
inc
incl
loopne
mov
mov
pop
icebp
out
repnz
push
pop
sub
data16
pop
mov
stc
sar
decl
hlt
and
loop
and
out
ljmp
push
mov
imul
ss
pop
jg
jecxz
mov
inc
push
jl
lods
js
lcall
les
mov
sbb
and
mov
je
icebp
adc
incl
js
cli
pop
test
cmc
imul
enter
xchg
sub
pop
jne
jp
xchg
call
jns
adc
and
mov
ret
repz
int3
testb
or
mov
adc
jae
mov
movsb
cmp
cmc
mov
mov
pop
pop
cltd
test
adc
cld
fidivrs
push
call
inc
jmp
mov
jmp
sbb
sub
sub
sbb
loope
dec
scas
imul
jb
aad
inc
lahf
push
mov
popa
ret
jb
and
jp
loope
decl
in
xchg
mov
xchg
out
inc
dec
adc
push
jnp
aaa
test
inc
out
loope
cmpsl
cmpb
fldenv
push
push
push
lock
call
lcall
add
cmp
xchg
push
ljmp
inc
ds
into
popa
rorl
bound
mov
or
enter
pop
sub
or
test
lock
cmp
ja
push
mov
daa
push
mov
mov
test
pand
push
push
or
fwait
add
test
incl
push
ds
ljmp
movsb
sbb
push
insl
das
test
or
cli
or
test
out
mov
xor
jne
pushf
fwait
std
and
xor
out
clc
das
cmpsb
inc
sub
shrl
or
andl
sub
inc
jo
mov
push
inc
adc
push
es
lds
mov
cmpsl
jmp
insb
cmp
pop
inc
and
adc
push
jl
xor
sub
test
in
jg
fiaddl
shrl
int3
mov
xor
shr
icebp
inc
pop
sbb
inc
xchg
cld
call
cmp
sub
inc
ds
cltd
arpl
fwait
movsl
daa
das
cli
incl
and
xchg
clc
fldcw
fisubl
sahf
jne
imul
decl
es
adc
inc
push
ret
and
incl
imull
test
lcall
mov
sub
popf
fstpl
mov
les
xor
dec
sub
adc
push
mov
xchg
in
and
jecxz
ds
jp
lock
cltd
or
xor
lds
int
rcl
jne
xlat
jmp
clc
cmp
loope
icebp
pop
mov
in
mov
fisubl
pushl
sub
outsl
pop
xchg
xchg
test
roll
push
push
or
mov
jge
push
ljmp
sub
and
cli
mov
xor
sub
cmp
decl
insb
lds
shr
push
mov
push
mov
jg
jmp
jb
jmp
cld
mov
cmp
imul
and
xchg
in
imul
and
fisttpl
inc
pop
mov
inc
mov
xchg
mov
push
into
jns
add
or
sar
repnz
stos
cs
mov
mov
adc
xor
incl
push
or
nop
mov
pop
pop
icebp
mov
mov
outsl
stos
mov
xor
push
xor
dec
jno
mov
movntq
jmp
mov
mov
outsl
fildll
ret
call
loopne
out
sub
jbe
or
es
jecxz
push
sbb
rcll
ljmp
mov
repz
or
mov
negl
mov
xchg
dec
int
fstl
ljmp
mov
mov
rcl
fnsave
pusha
aad
and
push
rcrb
sti
push
adc
out
add
push
cld
cmc
mov
fisubrs
outsl
jecxz
je
shll
jmp
in
lods
dec
loopne
push
testb
jno
dec
nop
and
ret
jmp
insb
mov
call
mov
jo
dec
jb
jge
imul
movsl
je
mov
jb
insb
ud0
lcall
out
mov
popa
cld
mov
icebp
mov
and
inc
out
shlb
or
out
xor
inc
pop
fstpl
cli
xchg
sub
dec
push
push
loopne
or
push
into
mov
mov
in
push
addr16
and
and
dec
mov
push
rcrl
push
mov
adc
popf
jmp
movsb
sti
jle
adc
into
filds
inc
and
mov
out
roll
push
xchg
adc
jbe
mov
push
cmpsl
sub
data16
inc
push
xor
inc
sbbl
rcrb
mov
in
pusha
lock
fistpl
add
jge
sub
test
movsl
cmp
pop
mov
xor
data16
jl
movsl
pop
incl
les
cs
test
aaa
pop
ret
nop
jnp
cs
pop
aam
push
xchg
nop
jb
incl
cld
add
mov
ja
leave
test
mov
jmp
xor
pusha
js
rolb
repz
jo
add
popf
add
repnz
in
sub
cwtl
add
arpl
icebp
jle
enter
out
cli
test
int3
sub
cs
ss
fmuls
arpl
dec
mov
jmp
stos
outsb
ss
cmp
sub
mov
adc
mov
or
push
pop
mov
out
loop
xor
hlt
nop
cmp
icebp
mov
cwtl
cmp
cmpsl
or
sub
dec
pop
in
adc
inc
fdivrp
call
sub
push
cmp
cltd
rol
lods
flds
and
mov
inc
dec
pop
cmc
lcall
dec
push
mov
data16
movsb
sbb
mov
inc
lcall
jbe
ficoms
push
inc
mov
sbb
cs
xchg
sub
pop
jno
and
jmp
movsb
enterw
push
inc
fisttpl
and
and
iret
lcall
dec
ljmp
xchg
out
pop
mov
sahf
push
mov
nop
push
shlb
cli
add
jg
es
adc
fbld
inc
dec
sub
mov
push
frstor
out
std
cmp
push
std
cmp
inc
into
xor
sub
pop
out
or
fisubs
popf
fsubl
call
das
xchg
pop
xchg
xchg
je
and
cmpl
addr16
jb
mov
cmp
pushl
leave
sbb
mov
pop
lock
and
and
jbe
shl
push
pop
jg
inc
xor
add
mov
pop
mov
das
adcb
mov
mov
dec
dec
pop
add
xlat
sub
ficoml
js
pop
nop
sub
jmp
lods
cmp
js
sub
sub
imul
push
loopne
mov
in
lods
insl
pop
mov
incl
dec
shlb
dec
int3
xor
ja
lods
rcrl
test
lahf
sub
sbb
adc
incl
incl
loope
test
jno
and
notb
xlat
icebp
jnp
test
mov
xchg
out
cmp
inc
fsts
and
ljmp
js
ret
sbb
aas
add
push
jle
mov
xchg
pop
mov
mov
ret
cmpsb
add
addl
pushl
xor
hlt
mov
ret
inc
cmpsl
fiadds
sbb
xchg
scas
jo
outsl
push
and
ficoms
pop
push
mov
push
cltd
mov
cmp
mov
lea
out
sar
test
and
pop
fisubs
pushf
in
inc
dec
loopne
or
insb
mov
mov
inc
cmp
mov
pushl
or
xchg
jle
push
pop
sub
repz
push
pop
arpl
add
cmpsb
rclb
imul
inc
pop
leave
and
shlb
pop
add
inc
push
cmp
cmp
pop
loopne
jmp
xorb
rclb
adc
je
sbb
fiadds
push
cld
lcall
je
xor
movl
ljmp
or
adcb
adc
push
lret
sbb
movsb
rclb
lods
test
addl
ljmp
movsl
js
mov
test
inc
or
dec
sub
stc
and
das
pop
xchg
xchg
mov
sbb
mov
jmp
int
vprotw
aaa
mov
dec
aaa
mov
or
sbb
push
js
in
ret
clc
mov
aam
mov
add
jns
or
jmp
push
int3
mov
popa
cmpsb
cmpsl
cmp
rorl
and
test
icebp
and
scas
inc
adc
add
idiv
decl
fldl
inc
ss
add
dec
or
pop
dec
xchg
sahf
push
xor
call
push
in
dec
mov
dec
sub
cmpsl
cmpsb
mov
jle
cmpsl
lods
incl
ljmp
push
add
sbb
pop
dec
pop
pop
cmp
push
aas
and
ds
jg
incl
stos
push
int3
loope
pusha
jns
stc
fimull
aad
jae
xor
dec
sub
pop
sbb
movsb
rolb
or
nop
add
decl
pop
push
inc
out
aam
mov
xor
jmp
pop
aaa
pop
scas
jg
lds
fdivr
incl
rcl
xchg
push
pop
xchg
xor
fsubl
mov
ja
mov
cmpsb
inc
jno
xchg
ljmp
dec
sbb
mov
into
sbb
enter
out
add
stos
xchg
cli
mov
inc
int3
cmp
pop
mov
or
dec
ds
jp
add
fs
xchg
or
cmp
lcall
scas
fwait
aad
test
xchg
mov
into
inc
fisttpl
lret
in
addr16
mov
ss
mov
mov
pusha
jecxz
cwtl
mov
xchg
add
jae
cmp
loop
xchg
jmp
shrl
ljmp
jno
movsb
dec
dec
sbb
icebp
out
fs
pop
ds
pushl
std
mov
leave
scas
or
and
jl
xchg
push
fld
xchg
outsl
jge
pop
mov
cld
out
sahf
or
inc
mov
lock
ret
shrb
incl
int3
jg
hlt
mov
ljmp
add
xor
adc
pop
out
push
es
push
xchg
mov
imul
lcall
jmp
rorl
cs
out
cs
mov
mov
je
xor
lcall
lods
jg
cld
pushf
jl
sub
xchg
fbstp
fs
or
mov
inc
sub
pop
cld
mov
jbe
xorl
mov
sahf
data16
jo
pop
jge
dec
pop
lds
sarb
je
sub
jg
movsl
test
arpl
cmpsb
sbb
pop
jmp
rcll
xchg
pusha
xor
cmpl
outsb
fs
sahf
test
dec
imul
outsl
mov
adc
sbb
test
ja
fs
dec
add
jb
jge
cmp
popa
sahf
stos
into
pop
inc
cmp
or
fmull
jge
sbb
fs
cmp
scas
outsl
mov
push
mov
dec
and
jg
imul
jg
fstps
mov
add
pop
inc
cmp
in
jge
pop
pop
dec
add
mov
out
sbb
ljmp
fmuls
lcall
pop
repnz
nop
mov
ljmp
dec
sti
pop
cmp
xlat
leave
sub
fildl
ss
mov
jp
lcall
push
imul
ficomps
inc
or
outsl
cli
cmp
in
cmc
and
xor
ret
cs
mulb
xlat
les
call
test
aaa
repnz
xor
sarl
adc
rolb
scas
jmp
js
int3
fwait
pop
int
pop
inc
mov
das
dec
cmp
jge
dec
push
jle
add
jo
mov
xchg
cmp
ljmp
xchg
cmp
adc
shll
cmp
push
jns
lcall
ss
jmp
and
sbb
mov
push
les
test
push
ljmp
push
jmp
lcall
fildll
inc
sbb
mov
cltd
aam
addr16
ja
mov
inc
out
fmulp
stc
test
xchg
pop
add
dec
jl
xchg
fs
test
or
jb
test
filds
xlat
cld
mov
icebp
cmpsl
popf
das
sub
sbbb
push
xor
dec
adc
dec
mov
adc
leave
icebp
sbb
test
push
mov
xchg
out
add
dec
pop
mov
fsubs
ljmp
jo
mov
jo
inc
ljmp
call
add
push
ficoml
pop
adc
bound
xor
movsl
jmp
mov
nop
and
inc
or
add
aad
arpl
ss
mov
push
dec
dec
mov
aam
fstp
jno
sarl
insb
movsb
orb
scas
cmpsb
pop
int
shl
fcomip
jmp
stos
jl
mov
adcl
jl
mov
push
into
push
ds
adc
data16
outsb
in
adc
fildll
data16
and
mov
vpsllq
imul
cmc
jg
cmpsb
or
lock
inc
data16
repnz
pop
clc
test
mov
cld
push
sbb
into
in
imul
mov
sbb
imul
sbb
mov
pushl
dec
push
sarb
cmp
mov
fidivl
adc
inc
sub
ljmp
andb
mov
mov
andl
jg
lds
rolb
std
incl
mov
popa
scas
mov
mov
xor
jo
test
push
call
jmp
adc
mov
push
mov
sbb
out
jg
pop
dec
mov
and
pop
stos
loopne
push
jmp
call
loopne
add
lret
les
add
mov
ds
inc
mov
add
ss
mov
sbb
cmp
rorl
xchg
popa
adc
push
lcall
cmpsb
test
fxch
ljmp
clc
pop
adc
dec
shrl
mov
dec
clc
decl
addr16
rolb
adc
mov
xchg
xchg
sti
inc
sbbb
or
cmp
dec
xor
dec
mov
ljmp
adc
test
in
adc
repnz
aas
mov
inc
adc
popf
iret
push
mov
lahf
cltd
cmp
push
add
movsl
in
shl
push
mov
bound
movb
ljmp
jns
or
out
lcall
xchg
dec
push
xchg
dec
jo
lret
mov
xchg
cmp
dec
sbb
dec
dec
mov
adc
mov
adc
sti
das
mov
in
notl
or
sbb
jecxz
insb
mov
dec
pushf
mov
push
lods
xor
jo
lcall
in
das
clc
popf
push
aaa
sbb
out
push
test
stc
jge
mov
popf
push
out
imul
pop
mov
fnstenv
repz
add
dec
sarb
push
hlt
rcr
outsb
mov
mov
fdivr
decl
mov
pop
in
out
mov
aam
sbb
sbb
lock
xlat
pop
sub
call
ret
imul
or
jecxz
bound
jle
out
lods
adc
int3
fsts
pop
icebp
dec
ss
push
fcmovb
imul
lret
push
enter
movsb
test
sti
aaa
xlat
sbb
cmc
jg
movsb
lahf
xor
aaa
sub
mov
xor
cltd
in
hlt
sti
xchg
sar
pushl
out
sbb
add
sub
bnd
mov
addr16
jmp
call
add
cmc
mov
jmp
push
pop
inc
inc
icebp
cs
mov
xor
aas
sub
das
push
mov
test
sbb
pushf
push
ljmp
add
incl
push
add
mov
subl
daa
sub
in
shlb
daa
shlb
mov
aam
jne
movsl
mov
icebp
or
int3
daa
dec
scas
and
push
les
in
or
lods
jg
in
mov
jae
mov
jl
push
xchg
push
fwait
testb
mov
out
out
repz
mov
mov
or
addr16
hlt
mov
jle
adc
cld
fisttpll
push
xchg
shrl
xor
xchg
imul
mov
sbb
cmc
jno
call
test
cmp
pusha
lea
push
andb
mov
push
movsb
fcom
push
inc
ja
scas
es
push
mov
jp
dec
push
xchg
repz
lea
push
add
jecxz
mov
lcall
jmp
lahf
mov
or
inc
lea
mov
push
xchg
ljmp
dec
dec
mov
mov
sbb
xor
addb
and
andb
pop
xchg
jmp
std
jl
mov
mov
pop
pop
sub
mov
dec
movsl
or
jb
popf
inc
jb
dec
mov
cli
xchg
fwait
dec
xchg
mov
in
and
add
sti
cmp
ljmp
rcr
es
jnp
rorl
in
in
cld
cmc
sahf
testb
cmp
lcall
test
xor
aam
outsb
es
in
lock
xor
fistpll
or
push
adc
popf
push
pushf
cmpb
mov
mov
pop
inc
fs
jno
loopne
sbb
imul
ljmp
mov
adc
push
ds
jne
dec
mov
arpl
mov
mov
std
and
jmp
loopne
shl
pop
add
scas
xor
imul
sub
xor
xor
pop
sbb
imul
lahf
nop
mov
andb
out
jg
or
mov
jp
add
push
dec
enter
sbb
adc
push
jae
outsl
push
mov
mov
push
mov
push
mov
repz
insl
mov
jmp
jmp
mov
pushf
fs
dec
and
mov
js
sub
pop
adc
lret
incl
mov
shl
mov
lahf
mov
pop
std
fistps
push
adc
dec
xchg
mov
xor
pop
cld
cmpsl
pop
ljmp
cmp
fwait
inc
dec
and
inc
sub
enter
stos
clc
jmp
outsl
ljmp
mov
dec
add
mov
imul
mov
xor
std
sbb
add
lcall
aam
inc
adc
push
add
jle
ja
stos
jb
fcmovb
jo
mov
aad
xchg
push
lcall
std
decl
push
push
sbb
mov
test
shrb
pushl
je
iret
cmp
jbe
lcall
aad
or
sub
std
notl
cmp
jb
out
sbb
repz
add
mov
mov
xchg
outsb
pusha
outsb
jo
and
or
out
fdivrl
mov
lcall
push
sub
pavgw
push
push
xor
adc
fwait
sti
subb
out
in
xor
test
stc
and
dec
es
decl
pop
cmp
outsb
std
ja
popa
gs
mov
mov
rcrl
cmpsb
or
cs
movsl
mov
lcall
adc
sbb
leave
xchg
or
cmpb
ss
mov
call
pop
inc
lods
lret
cmp
fmul
mull
cmp
bound
ljmp
mov
adc
xor
mov
xchg
lret
pusha
ret
or
mov
jmp
xchg
mov
and
hlt
cwtl
jg
sub
jns
sub
or
mov
in
adc
mov
push
iret
arpl
incl
pushf
out
and
icebp
pop
push
jne
nop
out
mov
and
sbbb
ljmp
and
aad
or
dec
out
sar
xchg
dec
addl
decl
cmp
movsb
lods
cld
pop
push
or
pop
lret
leave
frstor
cmpl
loop
xchg
int3
lock
push
mov
sub
fisttpl
pop
sbb
xchg
out
loope
inc
cmc
push
push
lds
mov
ss
lcall
mov
xor
mov
dec
adc
scas
fsubrl
xor
negl
std
jmp
movsb
sarb
lods
inc
mov
and
jp
rclb
mov
mov
jno
mov
test
adc
pop
aam
xlat
sti
or
dec
push
mov
stc
lcall
jns
out
test
jmp
andb
push
out
xor
dec
fadd
lahf
lock
jno
xor
push
iret
push
mov
stos
adc
jmp
xor
in
and
cld
lcall
shr
repnz
es
das
jl
sbb
call
mov
aaa
call
pusha
mov
stos
inc
sub
data16
inc
sbb
aas
xchg
mov
mov
xchg
xchg
mov
push
inc
add
lahf
mov
mov
mov
lea
pop
mov
pushl
int
add
mulb
push
and
das
call
loop
add
hlt
sub
rol
imul
leave
dec
xor
xor
push
lret
jg
cmp
jmp
popf
lcall
jae
jae
loope
adc
in
cmp
mov
mov
ds
cmpb
cmp
scas
in
decl
push
jns
jno
cmp
push
sub
loop
loope
push
and
jmp
fldt
sbb
es
sub
fstpl
inc
out
mov
int3
movsb
sub
sbb
cmpsb
dec
imul
ss
out
add
pop
jae
xchg
mov
js
push
mov
push
sub
cmp
icebp
ljmp
xlat
jl
shlb
push
ss
pop
push
daa
test
add
int3
sbb
sar
mov
push
cmp
inc
inc
mov
xor
mov
shlb
clc
add
xchg
mov
mov
xchg
mov
cmp
xchg
sub
in
jns
ret
push
icebp
fsubs
xlat
jbe
sub
xchg
in
je
push
fsubrl
cltd
jns
jl
cld
popa
add
filds
clc
sbbl
adc
xor
mov
sub
cmp
ja
mov
and
incl
dec
mov
mov
into
mov
gs
stos
ret
addl
lcall
pushw
insl
push
dec
add
xchg
in
push
sbb
fbstp
cmpsl
fwait
dec
jl
xchg
pop
pusha
sar
push
sbb
loopne
add
int3
lock
adc
call
outsl
and
jnp
rolb
jo
shll
scas
jb
sbb
sub
je
mov
call
jmp
inc
negl
push
outsl
push
insb
add
incl
sbb
cwtl
mov
cmp
aad
je
lock
jecxz
and
mov
ja
push
imul
jp
ror
mov
xchg
mov
mov
adc
ret
pop
push
adc
xchg
lret
mov
xor
mov
push
or
loop
sub
cmpsb
add
add
outsl
xchg
bswap
int
xchg
repz
dec
jecxz
in
sbb
cmpsl
inc
xor
data16
jg
test
fdivrp
dec
repz
dec
filds
in
jo
scas
jmp
cmp
sbb
bound
fiadds
sahf
or
mov
lcall
mov
outsb
daa
inc
adc
jmp
or
lahf
pop
insb
jg
jg
push
int
test
mov
sbb
ja
js
icebp
mov
pushl
xchg
jmp
mov
jae
sub
push
fs
jb
jns
push
sbbb
dec
in
test
stc
push
xchg
shl
lcall
call
fwait
adc
mov
loopne
mov
cmc
fwait
jmp
add
mov
inc
or
fistpl
jnp
icebp
jnp
clc
mov
xchg
int3
mov
push
fmuls
scas
xor
add
push
dec
cmp
mov
fisttps
adc
incl
mov
jbe
jb
lahf
mov
orl
test
inc
int
sbb
push
iret
dec
orb
enter
sti
divl
outsl
dec
das
ljmp
pop
pop
rcrb
dec
jno
jle
int3
xor
fisttpll
out
push
stos
push
decl
cmp
inc
fnsave
into
sub
sbb
lcall
sub
jp
arpl
pop
pusha
stos
pop
data16
inc
xlat
pusha
data16
cmp
or
xchg
mov
aas
jno
es
sub
jb
outsb
sub
jmp
loope
test
jmp
push
loope
scas
mov
cmc
adc
jecxz
fld
inc
scas
push
andb
pop
jnp
insb
mov
push
pop
movsb
ret
testb
hlt
cmp
in
mov
sbb
lcall
mov
mov
jne
out
sbb
push
mov
outsl
jge
pushf
jae
adc
dec
test
or
adc
pop
divb
sub
fcomps
repnz
mov
and
jmp
adc
sub
push
out
movsl
sbb
fcomip
scas
adc
push
std
ljmp
inc
adc
lds
jmp
jns
dec
mov
repz
and
decl
outsb
fldenv
mov
fnstenv
jge
mov
xchg
insb
mov
call
push
jecxz
sbb
push
pushf
dec
or
lahf
cs
and
test
rorb
call
inc
das
repnz
sahf
mov
mov
pop
fisttps
pushf
jge
lret
fs
push
ljmp
pop
mov
sbb
int
lahf
pop
jns
ficoms
gs
lret
scas
out
vpsubusw
inc
jo
push
frstor
pushf
ss
mov
inc
orb
pop
pusha
jmp
xchg
ret
jg
data16
lcall
hlt
gs
cmp
call
pop
adc
push
dec
pushf
aam
fs
and
sub
cld
pop
out
decl
out
test
add
fdiv
aas
mov
inc
popf
mov
ret
int3
lcall
sbb
scas
push
push
sub
dec
cmp
imul
rorl
cmp
repz
rcll
inc
imulb
jmp
mov
sbb
fiadds
ljmp
decl
add
xchg
push
xchg
jecxz
cwtl
pop
adc
mov
out
mov
jbe
outsb
mov
cld
mov
inc
push
imul
xor
inc
add
call
pop
aad
fldcw
lcall
mov
sti
arpl
nop
cmc
das
inc
lcall
sbb
sbb
test
fs
pop
cmp
clc
and
and
out
ljmp
cltd
mov
jb
and
xor
push
xchg
pop
xchg
and
repnz
jns
mov
xchg
cmpsb
cmp
sbb
inc
xor
dec
mov
ret
xor
dec
out
mov
test
pushl
pop
cmp
xor
push
xchg
les
cmp
sbb
test
ret
call
addr16
es
mov
sbb
icebp
adc
flds
mov
stc
jge
mov
or
or
inc
inc
test
jmp
lds
es
bound
or
mov
cmc
inc
ss
imul
out
mov
jmp
insb
xor
stos
fs
iret
pop
pushf
jno
jne
call
loop
insl
jp
push
lcall
dec
ret
out
inc
lods
jle
sub
dec
int
sbb
je
loop
add
lock
sub
push
fstps
push
sbb
and
scas
rolb
mov
ficompl
test
fst
mov
adc
mov
int
popa
in
dec
mov
inc
decl
dec
mul
push
gs
push
jle
popa
sti
dec
hlt
mov
insb
pop
inc
mov
shrl
pop
movsb
push
cmp
push
arpl
stc
push
mov
jbe
dec
fidivs
movsb
inc
jle
push
stos
cs
lock
dec
sbb
movsb
cli
add
cs
ljmp
pop
cld
xor
jbe
mov
out
mov
mov
fcmovne
pop
ljmp
or
decl
adc
and
mov
je
jae
mov
repz
mov
jle
cmpsb
out
push
ficomps
and
or
add
pop
aad
mov
or
lcall
xchg
jecxz
pop
mov
mov
jp
das
pop
push
arpl
leave
and
pop
jnp
test
mov
mov
adc
out
lods
imul
scas
and
jg
std
lds
decl
lock
addw
scas
je
mov
xchg
inc
add
lcall
mov
icebp
pop
pop
and
cmp
pop
lods
xchg
bnd
sbb
cld
call
lds
enter
sbb
dec
cmp
or
xlat
hlt
fxch
jb
push
pop
jo
jle
ljmp
adc
rcl
add
mov
mov
je
imul
add
or
push
inc
std
push
cmp
add
cmp
les
mov
sub
cs
mov
lcall
aaa
loop
cmp
repnz
cld
call
imul
push
in
dec
cmp
imulb
mov
mov
dec
aam
mov
lret
dec
ret
popf
lods
out
sbb
sar
pushl
or
pushf
ficoml
jp
sub
mov
notb
not
push
sar
lcall
sub
push
xlat
scas
add
adc
jnp
lahf
notb
jnp
mov
enter
xor
sar
pushl
xchg
out
sub
ja
or
mov
ret
cmp
mov
push
xor
nop
inc
outsl
pop
mov
dec
repz
cmpsl
cmpsb
adc
mov
fwait
mov
jecxz
std
aaa
popf
pop
cmc
call
and
fstpl
xor
stos
jo
sbb
dec
mov
rorb
sbb
xchg
out
ds
add
es
mov
or
aaa
mov
jae
sar
ljmp
pop
andb
xor
mov
mov
inc
sti
add
mov
clc
lcall
push
ffreep
rcl
jb
add
mov
adc
sbb
out
and
xor
sub
or
mov
sti
jns
test
cmpb
mov
cmpsb
lcall
xor
lods
mov
movsl
hlt
shrl
push
enter
fbld
imul
add
cmc
int3
inc
stc
into
out
iret
pop
jg
insb
decl
xchg
push
jl
add
clc
rol
out
or
inc
xor
fstps
adc
mov
mov
xchg
sahf
rorl
mov
mov
cmp
cmp
cmp
test
mov
decl
and
jae
dec
fdivrp
stos
js
pushf
inc
pushl
testl
add
stos
stos
jl
cmp
sbb
xor
outsl
dec
cld
cmp
decl
int3
call
push
test
cmp
cwtl
inc
xchg
xor
and
pop
jg
ljmp
sti
lea
mov
mov
mov
and
into
xchg
std
and
je
mov
push
jg
movsb
ds
imul
ljmp
shrl
mov
push
ja
sub
into
lcall
jg
adc
into
cmpsl
xchg
in
mov
test
and
inc
aad
scas
orb
incl
pusha
data16
jecxz
and
fistps
bswap
aad
xchg
outsb
push
ret
imul
cmp
das
aam
dec
cmp
push
and
clc
pop
mov
and
pop
lds
cmp
xor
call
popf
cltd
fisubs
call
inc
cli
lcall
jno
or
mov
dec
mov
jecxz
or
std
ss
dec
cmp
mov
ljmp
in
fdivrs
fwait
sar
nop
push
lods
push
pop
dec
test
and
pop
call
ja
lret
mov
add
stc
movsl
in
and
add
repnz
out
jp
xor
call
test
cmp
mov
cmp
xchg
pop
aas
add
jg
or
inc
mov
outsb
pop
movb
mov
in
jp
pusha
aas
pushf
add
sub
ljmp
loope
ljmp
pop
adc
dec
fisttpll
push
xor
cmp
sub
jg
sarl
popa
es
sub
data16
mov
popf
mov
cltd
mov
ret
xchg
sub
call
inc
inc
sub
cmp
push
rorl
push
mov
dec
test
orb
dec
pop
pop
sahf
xlat
and
xchg
loopne
mov
inc
cltd
and
jle
fildl
lods
and
add
push
test
sti
xor
test
dec
scas
push
and
std
into
xchg
stos
dec
shll
and
inc
bound
cmp
inc
or
dec
dec
or
sub
or
inc
mov
xchg
dec
or
nop
fcoms
push
jno
pushl
push
xchg
mov
xorl
sbb
add
lods
ljmp
call
mov
dec
adc
xchg
xchg
fsubs
lock
imul
cmpsl
inc
into
inc
fcoms
xor
in
xor
sbb
rep
inc
repz
cmpsb
sbb
aas
cmp
mov
or
pop
enter
incl
jbe
inc
int
in
dec
pop
push
push
jmp
mov
and
in
inc
je
mov
aaa
jmp
gs
xchg
dec
push
mov
dec
pop
inc
cwtl
jnp
jp
xchg
call
pop
repz
jle
xchg
push
ficomps
jnp
loop
mov
push
std
adc
xor
jp
iret
testb
dec
outsb
xchg
test
std
lcall
cmp
sti
imul
and
mov
sub
ds
jg
pusha
sbb
fwait
or
fwait
mov
push
fisttps
mov
xchg
rcrl
movsl
scas
xchg
push
push
sub
js
add
mov
mov
sbb
sbb
mov
testb
mov
cld
sub
decl
test
jbe
dec
push
jge,pt
lahf
mov
into
int3
adc
xchg
cmp
xchg
xor
fcomip
incl
sbb
repnz
push
arpl
xchg
in
sti
js
dec
loopne
fldcw
sbb
mov
jp
sbb
outsb
stos
lcall
jno
sub
jo
mov
inc
mov
jle
pop
call
dec
and
cmp
push
mov
inc
or
adc
mov
jg
lcall
adc
fidivl
loopne
cmp
hlt
popf
push
sbb
std
cld
das
js
enter
insb
jo
cmpsl
pop
out
jmp
xlat
push
jmp
mov
vmwrite
xchg
mov
push
sahf
stos
daa
fdivr
cmp
shlb
je
lahf
inc
lods
cwtl
lods
cmp
mov
ss
ja
or
iret
fwait
inc
ljmp
push
or
in
pop
or
push
mov
and
lcall
push
sbb
jae
lcall
sub
loopnew
jmp
decl
in
pushf
jg
push
jo
push
jle
dec
leave
repz
ds
mov
es
cmp
cs
lcall
int
mov
or
movsl
lret
test
cld
inc
enter
xchg
lret
inc
sub
lcall
dec
xor
fsubr
dec
xor
nop
adc
orl
insb
mov
test
std
incl
add
xchg
mov
into
std
ljmp
or
cmc
call
jle
mov
inc
lea
add
lods
and
in
mov
push
cmp
in
pop
xor
jne
jge
xchg
xchg
pop
jo
pop
hlt
stos
sub
jns
mov
ja
flds
inc
daa
shrb
cmp
ja
pop
sbb
adc
xor
jo
loopne
ljmp
jge
fs
xor
xor
inc
and
and
stos
push
adc
mov
mov
inc
shrb
xchg
imul
fsubs
xchg
cltd
dec
dec
es
outsl
cld
push
jecxz
movsb
jecxz
int3
movsl
cld
in
arpl
call
stc
add
mov
sti
jmp
mov
call
push
mov
and
jmp
jnp
and
push
loopne
mov
adc
ljmp
sbb
jmp
loope
loopne
sub
xor
pushl
pop
jae
in
stc
xchg
add
not
call
mov
lods
push
jb
hlt
cltd
out
shr
cld
lcall
ss
xchg
test
imul
add
push
inc
jb
push
cli
and
sbb
aas
shrb
cmp
xor
fldl
push
andl
adc
ljmp
push
add
jne
std
es
adc
daa
aas
cltd
mov
out
ljmp
inc
adc
daa
in
decb
or
in
stos
inc
scas
pop
adc
decl
std
ja
push
inc
enter
fistpll
mov
mov
subb
or
pushl
test
pop
int3
aad
pusha
cmp
cmp
lret
aas
mov
insl
orb
das
mov
aad
out
cmp
dec
sbb
jne
mov
cmc
lret
mov
jle
xor
int
popa
scas
sub
stos
lock
ljmp
inc
filds
pop
lods
add
sub
scas
in
stos
jo
adc
or
pusha
clc
call
and
scas
loopne
imul
jbe
call
dec
into
mov
inc
and
ljmp
add
jmp
add
pop
icebp
mov
push
mov
xor
ljmp
sub
xchg
sahf
stos
out
loopne
insb
in
adc
fs
xor
mov
rcpps
leave
mov
jno
fbstp
das
mov
out
jnp
rclb
jle
push
mov
pop
sbb
xor
lahf
int3
stos
aam
cld
inc
jg
inc
fs
repz
loopne
insb
aad
push
push
daa
jb
ljmp
imul
arpl
inc
xor
pop
add
xlat
pop
jge
sbb
lahf
shl
dec
scas
pop
and
and
dec
mov
or
adc
das
cld
pop
popf
loope
jg
aam
divb
push
fidivrs
call
xor
and
jp
fwait
lock
jno
test
jg
sarl
ljmp
dec
xor
push
dec
adc
sbb
sbb
icebp
mov
sar
leave
jp
lcall
cmpsl
xchg
mov
inc
jmp
push
cmpsl
mov
inc
and
push
out
leave
dec
mov
frstor
leave
aas
cmc
cwtl
cmp
scas
cli
inc
fsubl
or
fnstcw
jnp
adc
dec
jb
pushl
jbe
out
inc
pop
out
lock
test
sti
cmp
or
adc
xor
mov
jge
cmp
js
mov
xchg
mov
pop
cmp
jns
stc
popa
shr
add
fsubrs
gs
lock
ljmp
aas
sahf
jg
fisubl
subps
dec
jp
scas
mov
out
pop
cli
sar
call
push
fsubrs
ficoml
iret
inc
bound
cmc
rolb
add
mov
push
jl
mov
enter
adc
into
fcomip
xor
jecxz
jg
xchg
andb
pop
mov
inc
and
jnp
std
cmpsb
lcall
mov
enter
and
or
cmp
mov
jb
cwtl
mov
decl
sub
mov
mov
shlb
sub
nop
adc
cmp
mov
cld
pop
call
mov
out
and
cmp
push
sbb
inc
fsubs
int
dec
inc
add
pushl
outsb
and
mov
adc
xor
adc
pop
movsl
popa
test
or
imul
cld
cmp
and
push
push
push
gs
je
loop
adc
jmp
xchg
ljmp
and
fnstcw
pop
cmpsl
sbb
cmp
xor
mov
xchg
fwait
jmp
jg
xorb
cmc
insb
bound
das
push
add
insl
jle
lret
into
gs
lcall
lock
incl
add
add
inc
iret
jp
add
dec
pop
push
out
mov
sub
ss
pushl
js
pop
fcmovbe
adc
mov
lds
push
inc
xchg
mov
lock
dec
xor
xchg
jle
jp
jbe
hlt
test
int
out
cwtl
nop
ljmp
insl
or
sub
adc
inc
or
pop
xchg
push
aam
mov
clc
mov
ljmp
mov
jns
pop
push
push
xchg
push
pop
ljmp
add
lcall
outsl
mov
lods
out
in
dec
ds
pop
jne
xor
pusha
pop
xor
xor
mov
incl
call
aad
pop
shrb
cs
xchg
pop
mov
jnp
ljmp
pushl
pop
sti
sub
or
test
mov
call
xlat
xor
icebp
xchg
sub
cmpsb
fsubrl
ret
push
and
mov
adc
dec
int
call
je
lea
push
addr16
pop
outsl
sbb
sarl
icebp
ret
xor
pushl
pushf
inc
int
jge
decl
cltd
push
insl
enter
out
mov
lcall
mov
mov
push
pop
test
push
pop
mov
and
lahf
inc
xchg
stos
pop
gs
jbe
mov
add
push
xchg
cld
decl
fyl2xp1
inc
gs
mov
inc
stos
add
out
cmp
sbb
repnz
cmp
pop
jle
mov
add
push
xor
sbb
out
sti
adcb
pop
icebp
incl
or
dec
cmpsb
es
fisttpl
sub
test
pop
mov
out
leave
xor
aad
mov
lret
jg
jmp
call
jg
fbld
mov
mov
stos
stos
xchg
stos
and
push
mov
ficomps
fmul
and
xchg
nop
repz
xor
inc
pushl
xor
vpscatterqq
sahf
mov
push
add
enter
dec
negb
scas
aas
push
sbb
fists
push
lods
inc
mov
int
std
pusha
scas
icebp
das
push
cmp
mov
decl
stc
pop
int
imul
xlat
fdivr
push
mov
cmp
pop
in
xlat
lods
dec
pop
jecxz
decl
sub
push
or
fsubl
xor
and
aad
and
ljmp
out
dec
mov
xchg
jne
pop
aad
fucomi
jle
les
je
jp
test
data16
leave
adc
pop
das
jg
jle
cs
add
and
fisubs
scas
adc
mov
das
jno
push
outsl
aam
pop
pop
jp
and
push
sub
arpl
stos
pop
loopne
mov
sti
cmpsl
sub
push
aam
movsl
jne
mov
pushl
dec
cs
jne
orb
xchg
and
arpl
lods
insb
lock
aaa
sub
or
and
dec
cs
incb
std
xor
jns,pt
sub
movsl
dec
std
cwtl
push
pop
daa
push
loope
jle
daa
imul
sti
or
mov
call
inc
pop
push
lcall
sub
pop
lock
jle
dec
pushf
out
mov
cld
ljmp
mov
push
fdiv
or
push
scas
jg
adcl
mov
bound
mov
lcall
jno
fistpl
xchg
inc
dec
rorb
mov
cld
cmp
int3
xor
mov
xchg
aad
scas
lahf
loop
pop
add
or
ficoms
sahf
ja
mov
and
mov
icebp
add
call
in
xchg
fcomip
xor
push
push
mov
add
xor
cmp
lret
sub
fcomip
push
sub
pop
adc
xchg
idiv
insb
repnz
into
pop
xor
sarl
xchg
mov
cmp
add
or
add
pop
into
xor
dec
in
popa
adc
mov
pop
frstor
push
cmp
xchg
mov
gs
xor
pushl
lcall
cmp
mov
movsb
mov
fidivl
xchg
dec
pop
jmp
sar
mov
xchg
push
in
sub
xorl
addl
cmp
outsl
mov
arpl
fiaddl
in
dec
sbb
icebp
jmp
mov
sbb
push
call
inc
push
jnp
scas
dec
pop
es
loope
and
and
imul
ret
pop
bound
incl
je
push
inc
arpl
pop
cs
or
clc
arpl
cmp
decl
pop
mov
mov
fst
out
cmp
push
lods
mov
add
xchg
xor
xchg
cmp
insb
mov
cmp
dec
adc
push
push
and
repz
inc
aas
add
or
pop
pop
lock
push
sub
jbe
into
fadds
mov
inc
add
aad
ljmp
lahf
sub
addb
add
dec
lea
push
fxch
pop
les
test
jg
outsl
fisttpll
lock
call
mov
loop
out
hlt
mov
cmp
repnz
pushl
fisubl
cmp
mov
je
cmp
jne
inc
cli
xchg
mov
pop
lea
ss
sahf
dec
add
aaa
xchg
outsl
ja
ja
sbb
mov
mov
call
in
dec
lods
cs
cwtl
mov
fiadds
sub
and
icebp
mov
ljmp
sbb
mov
shlb
inc
push
sub
fcomps
int
cltd
movsl
lods
repnz
jo
mov
test
xor
push
mov
jmp
pop
push
inc
aad
ss
pop
mov
jl
scas
faddp
ficomps
push
push
in
jns
jmp
test
mov
adc
imul
loop
out
insl
cmpsb
decl
adc
pop
mov
inc
adc
sbb
std
jne
cmp
ds
rclb
pushl
daa
enter
sub
adc
ja
sbb
adc
dec
cmc
mov
lock
call
mov
jecxz
pop
sbb
push
jo
es
add
sbb
outsb
xchg
mov
mov
add
mov
sbb
scas
fnstenv
jle
movsl
inc
xchg
test
mov
lods
addr16
lahf
mov
dec
data16
pop
inc
push
ljmp
nop
in
pop
push
fsubrl
movsl
cmc
mov
popa
imul
pop
inc
push
xchg
mov
pushf
push
ds
cmpsb
loope
push
in
add
xor
push
mov
push
fldenv
int
ret
adcl
adc
sub
pop
rcrl
dec
pop
push
jge
push
shl
popf
inc
es
sub
xor
into
xchg
add
or
jmp
adc
jmp
lods
mov
and
jb
or
mov
pop
cmp
jnp
push
lahf
mov
movsb
ljmp
call
pop
inc
add
out
hlt
cmp
sbb
jle
mov
pop
jle
loop
inc
add
jg
mov
pop
xchg
inc
jl
add
inc
mov
loop
insb
hlt
pushl
xor
sub
scas
pop
mov
jnp
mov
xor
outsb
call
call
aaa
xor
cmc
dec
orl
pop
xor
sti
loope
add
pop
ss
incl
xor
push
adc
push
mov
adc
and
pop
ret
sub
mov
dec
sbb
dec
dec
sbb
test
mov
movsl
jb
cwtl
jp
push
pop
xor
das
push
pop
pop
inc
xchg
shlb
inc
xchg
dec
cli
sarb
pop
hlt
pushl
mov
mov
pop
cmp
sub
leave
shrl
cmpsl
mov
mov
push
dec
jnp
lret
int
movsb
dec
fisttps
xor
xchg
stos
mov
loop
inc
dec
dec
in
sbb
push
mov
aad
fcomps
mov
xlat
lahf
inc
out
outsl
mov
outsb
push
jge
cltd
stos
incl
rorl
popf
ret
sub
xchg
or
lods
mov
call
xchg
sti
mov
into
loop
fists
and
imul
mov
dec
push
fcomip
incl
dec
loope
std
jp
nop
sbb
out
push
jbe
push
pop
call
in
push
jle
mov
addr16
dec
out
dec
cmp
imul
xchg
pop
pop
in
dec
adc
jmp
stos
bound
jmp
adc
add
or
push
push
jl
add
cmp
cwtl
les
arpl
push
loop
pop
imulb
pop
xor
push
sub
jbe
xor
push
cmpsb
pop
enter
cli
sbb
int
cs
ret
aam
sbb
mov
incl
and
mov
jb
popf
arpl
jp
lcall
sub
or
ret
inc
cmp
jle
shll
mov
pop
test
std
movsb
insl
bound
pop
or
je
popl
cmp
test
fisubl
repz
jo
loopne
pop
mov
in
xchg
mov
jbe
lcall
xor
int3
into
stos
dec
sbb
out
mov
push
pop
jl
insl
incl
mov
fadds
xchg
cmpb
daa
loop
repz
in
mov
jmp
shrl
stc
cltd
xchg
out
mov
ja
mov
inc
cmp
jae
push
mov
repz
ljmp
nop
insl
push
dec
mov
dec
aas
std
adc
loope
stc
push
mov
lcall
idivb
pushf
pop
mov
jae
sbb
dec
sub
test
je
jg
push
mov
sub
sbb
fs
mov
out
and
mov
call
std
outsl
call
fs
lret
mov
cmpl
inc
ss
pushl
repz
mov
enterw
pushf
inc
adc
std
pop
lcall
in
push
dec
scas
mov
xor
movsb
inc
movsl
jnp
decl
pop
pop
jmp
or
pushf
cmpsb
inc
jb
or
push
rcrb
ljmp
aad
pop
divb
popf
cmc
mov
pushl
out
inc
mov
dec
ret
adc
fucomp
in
imul
incl
sarb
xchg
popf
sbb
out
add
adc
shll
scas
outsl
xor
mov
mov
push
xchg
std
lcall
out
and
inc
adc
das
push
pushf
jnp
mov
push
repnz
mov
jg
les
cltd
and
dec
push
mov
mov
lret
pushf
push
pop
fwait
jb
and
xlat
aaa
nop
cmp
leave
dec
fsubrp
pop
out
mov
inc
jge
jne
nop
int3
mov
jge
xor
ljmp
mov
call
push
bsr
and
ja
rclb
ljmp
sbb
loopne
push
jne
test
test
cmp
stc
incl
push
aad
or
movsl
cwtl
fistpl
mov
add
pushf
mov
fistl
lea
incl
shrl
push
daa
jno
mov
icebp
push
sub
xor
je
cmp
cmp
out
lock
cmp
enter
test
sbb
js
iret
mov
lcall
lods
fs
vshufps
pusha
jecxz
push
push
pusha
addr16
mov
mov
loop
xor
sub
out
pop
dec
ds
jae
rcll
push
xchg
or
les
cmp
dec
dec
or
xchg
incl
lcall
inc
stc
mov
push
mov
insl
frstor
jecxz
mov
sarb
out
ret
mov
and
mov
loop
call
es
pushl
fcoms
xchg
dec
lock
add
jmp
xchg
jg
adc
lds
pop
lds
popf
sub
call
sti
mov
adc
jp
xchg
movsb
testb
pop
pop
stc
push
mov
decl
clc
lahf
fisubrl
popl
out
es
mov
pop
pop
cmc
cld
mov
sbb
call
push
cmp
fstpl
inc
adc
int3
push
out
inc
test
push
jmp
lcall
lcall
mov
jo
xor
mov
push
inc
push
sbb
jno
incl
mov
mov
test
stc
jbe
sub
jno
nop
icebp
orb
xor
jb
push
test
pop
pop
dec
loop
pop
xor
mov
inc
dec
pop
inc
cmpl
incl
sub
in
cmp
or
addr16
adc
test
roll
jg
dec
or
dec
movsb
and
mov
mov
jnp
pushf
mov
loop
in
rorb
orb
adc
call
push
lret
push
adcl
cli
and
scas
pop
push
jle
mov
pushl
or
call
and
push
xchg
inc
mov
sahf
out
inc
xchg
decl
inc
loope
or
push
or
fcoms
add
pusha
mov
incl
int
and
idivb
sbb
jle
outsb
cli
jmp
in
es
push
hlt
lret
fdivr
jg
outsl
pop
in
outsb
fwait
lods
xchg
xchg
mul
scas
sbb
adc
mov
decl
sub
test
xchg
test
xor
dec
mov
inc
xchg
or
mov
das
jl
jl
aad
sbb
das
mov
add
push
incl
xchg
in
ret
pop
nop
lcall
call
mov
ljmp
imulb
test
ss
cmpsl
sbb
call
stos
call
cmpsl
fldenv
and
jns
mov
jne
mov
xchg
xchg
lcall
mov
lds
sbb
mov
popf
pop
inc
test
adcl
js
xor
in
pushl
pop
scas
jle
cltd
and
hlt
pmulhw
fs
out
dec
aad
or
loop
push
mov
divb
pop
out
pop
inc
xadd
enter
lock
popa
nop
inc
xor
mov
mov
pop
xchg
cmp
add
loopne
test
xor
out
das
mov
mov
mov
mov
push
dec
mov
or
icebp
loope
jmp
push
js
pusha
pop
push
repnz
and
sbb
push
jl
in
mov
ljmp
adc
xchg
push
xchg
out
bound
out
mov
lea
cli
decb
scas
or
push
loop
push
int3
aas
stos
stos
in
mov
dec
hlt
add
fs
jmp
iret
hlt
mov
lcall
out
insb
mov
adc
test
fs
pop
adc
leave
xor
xchg
and
cld
incl
fisubrl
push
test
mov
jg
push
dec
movmskps
cltd
jmp
pop
jmp
mov
or
dec
mov
scas
mov
rclb
lcall
fisttps
sub
imul
clc
fisttpl
rclb
xchg
cltd
jmp
push
fidivrs
jae
pop
pop
pop
cmc
sbb
mov
sub
subb
decl
aam
mov
nop
cltd
push
iret
lods
mov
nop
push
add
push
test
fistpll
dec
jle
pop
icebp
cmp
push
popa
push
pop
jecxz
in
dec
aam
popf
sub
push
or
pop
sahf
fbstp
pushl
std
mov
and
ud1
aas
mov
adc
dec
inc
mov
jns
or
mov
pushl
xchg
js
jp
mov
jns
call
call
pop
decl
pop
ss
test
push
inc
setg
lods
ja,pn
lcall
fwait
ret
jecxz
out
pop
mov
call
repnz
xor
push
adc
cmp
cwtl
pop
add
call
xchg
dec
shrl
movsl
mov
xor
test
je
leave
test
scas
nop
lret
jmp
jmp
xchg
in
sti
enter
aas
mov
jnp
mov
iret
mov
mov
outsb
xchg
in
mov
dec
testb
ljmp
outsb
nopl
js
call
hlt
dec
int
add
xor
sub
enter
jecxz
push
pusha
xor
mov
out
add
xor
dec
aam
and
pop
mov
jmp
cmp
dec
add
sbb
insl
test
pusha
lea
call
cmp
sbb
or
rolb
bound
sti
mov
xchg
sbb
xor
jge
inc
xchg
inc
xor
or
add
push
shl
adc
sub
xchg
sbb
mov
popf
push
or
into
int
jecxz
cmpsb
pop
fmuls
or
fstl
clc
pushl
mov
fs
int
mov
push
jns
or
dec
idiv
mov
xchg
jg
into
xor
push
into
lret
sbb
jae
imul
ds
fisubl
sub
jmp
dec
rclb
push
mov
arpl
sbb
aad
pop
test
cmovnp
and
ret
je
inc
push
cld
ljmp
add
pop
scas
enter
out
mov
test
loop
mov
sub
insl
xlat
pop
sbb
jg
add
lahf
mov
pop
mov
jae
sbb
cli
xor
leave
dec
test
ljmp
cli
mov
inc
inc
in
push
ljmp
mov
rcll
aas
jno
fcomip
ljmp
cmp
hlt
adc
ret
push
adc
fldenv
jmp
out
cli
pushl
imul
cmp
adc
outsb
mov
mov
cmpb
sbb
cltd
out
xor
cmpsb
aas
test
add
mov
clc
lcall
cmp
cmpsb
fwait
movsb
xchg
icebp
inc
jnp
icebp
and
rcrb
test
mov
fs
pushl
notb
adc
mov
js
sub
mov
mov
and
xor
adc
jmp
push
cmpl
int
pop
mov
enter
pop
pop
add
xchg
or
lcall
inc
test
je
rorl
mov
and
xchg
adc
cs
lcall
pushf
bound
movl
bound
cmpsl
mov
mov
lock
aad
call
cmp
in
add
inc
mov
mov
out
sub
mov
call
dec
cli
fildll
jbe
lods
loopne
leave
jle
call
ror
or
jmp
lock
and
das
sahf
nop
xchg
adc
mov
fisttpll
inc
insb
jmp
lods
add
push
mov
pusha
add
lret
inc
sti
xor
ljmp
xchg
xor
mov
xchg
or
inc
cmp
sbb
inc
loop
xor
movsb
aam
outsl
cltd
mov
sbb
fisubl
enter
jnp
dec
rcl
pop
fcomps
gs
cld
xor
jg
jl
and
jns
pop
outsl
fincstp
xor
imul
jl
pushl
lcall
pop
inc
xor
jnp
out
cmp
loop
mov
aas
fistpll
or
daa
sbbb
xor
daa
lods
pop
je
movsb
jg
fistpll
push
mov
mov
test
inc
or
or
lods
int3
decl
daa
loope
mov
xor
or
dec
mov
sub
cld
cli
sub
aam
icebp
dec
inc
test
test
sub
inc
lcall
scas
pop
cwtl
cmp
and
jge
shll
xor
mov
pushl
sti
mov
cmp
push
push
mov
sub
or
leave
dec
test
mov
xchg
in
out
pop
cmp
push
lods
xchg
mov
inc
add
fstl
outsb
fdivl
push
jge
jg
fldt
scas
lea
dec
xor
jl
std
inc
push
insl
aaa
addb
and
aaa
ljmp
inc
pop
mov
lcall
ds
ljmp
out
test
clc
popa
add
outsl
mov
nop
in
mov
xchg
icebp
incl
or
xchg
scas
xchg
mov
sahf
sub
adc
lcall
adc
rcrl
and
ljmp
and
mov
pop
or
data16
clc
arpl
nop
cli
fidivs
decl
ret
ja
rcll
sub
pushw
sub
dec
xchg
popa
inc
jge
cwtl
inc
inc
out
and
cmp
mov
es
xchg
and
push
int
jmp
fs
xorl
pop
cli
cwtl
imul
mov
mov
inc
adc
ljmp
mov
push
lea
int3
mov
cmp
sub
mov
push
ror
ficomps
xchg
cmp
push
shll
mov
imul
and
iret
pop
jne
xor
lock
pushl
out
lds
dec
scas
out
inc
pop
repz
stos
jle
ljmp
push
inc
lock
and
leave
add
push
aam
in
push
stos
inc
jg
insb
cmpsb
adc
cltd
pop
add
jmp
lahf
dec
movsb
cmc
cmp
cmp
adc
ret
negb
jo
xor
cld
mov
ljmp
ds
in
repz
mov
insb
aam
lcall
lcall
in
je
daa
push
add
or
test
out
push
mov
lret
ds
pop
xchg
pop
xor
sub
popf
mov
int3
and
sar
inc
dec
push
test
mov
es
movsl
jne
cld
insl
test
movsb
std
ljmp
pop
arpl
cmp
incl
cmp
mov
test
dec
jmp
pop
rcll
mov
fadd
inc
addr16
js
decl
adc
aaa
call
clc
inc
xchg
cwtl
lds
jbe
cmp
or
mov
push
inc
sub
sbb
add
adc
or
jge
push
pusha
aam
xor
jg
inc
popf
stos
xor
das
call
repz
ficoml
nop
mov
outsb
mov
ficompl
xchg
fdivs
pop
rorl
faddl
mov
xchg
loop
pusha
pop
mov
rorl
xor
lds
lcall
pop
movsb
int
addl
push
mov
adc
test
inc
imul
popf
sbb
dec
push
jg
jmp
in
jnp
pop
fiaddl
cwtl
data16
mov
fdivl
push
mov
pushl
testb
imul
push
loop
leave
pop
outsb
lods
jns
in
push
ljmp
or
movsl
rorb
mov
mov
into
lods
fldcw
cmp
fldlg2
jecxz
pop
stc
arpl
ljmp
cmp
xchg
data16
mov
mov
pop
into
add
jb
mov
xor
lcall
rorl
cmpsl
pop
and
pop
jns,pn
adc
inc
sub
and
cmp
clc
push
xlat
mov
outsl
jnp
sub
lcall
and
in
ljmp
mov
add
xchg
xchg
push
xor
jbe
and
push
add
add
into
pop
cmc
out
push
idiv
inc
fwait
stc
mov
insl
pop
add
scas
incl
adc
adc
inc
pushf
push
jl
jg
in
or
push
mov
sbb
jno
jbe
enter
call
sar
mov
add
and
imul
cmp
jne
sub
sub
outsl
clc
decl
push
bound
jnp
out
lahf
je
lods
rcl
adc
pop
adc
ljmp
out
mov
xchg
outsl
jp
idivl
xor
loop
xlat
adc
sbb
out
push
ja
mov
mov
jo
lret
fidivs
fildll
push
ljmp
jle
add
inc
iret
fwait
dec
pop
clc
dec
mov
push
jno
ret
cmc
cmp
pop
dec
call
sub
push
mov
sub
outsb
inc
push
dec
icebp
inc
std
int
das
jbe
add
ljmp
lcall
cmp
ficoml
cmp
and
lcall
cmp
mov
push
das
lds
cmpsl
cwtl
push
jnp
mov
insb
push
inc
inc
sbb
lock
add
xor
insb
sub
jne
psllq
xchg
pop
popf
inc
pop
add
or
pop
sub
push
stos
mov
ret
mov
ljmp
jne
mov
rorb
mov
mov
cwtl
cmp
sbb
xor
rcll
les
test
mov
mov
pusha
roll
lcall
decl
mov
add
jecxz
cmpsb
add
mov
xor
mov
andb
xor
cmp
cs
lret
or
lcall
out
mov
fmull
xor
dec
add
subl
pop
decl
scas
incl
iret
xchg
push
repz
imul
push
orb
bound
or
sar
mov
fidivrs
mov
aaa
fisttpl
xchg
outsl
cli
jg
int
inc
fisubl
les
fistpll
notb
out
xor
clc
call
outsl
out
cltd
xchg
or
data16
inc
aad
movsl
pushf
adc
ljmp
xor
aas
sbb
push
mov
ficoms
shlb
xor
mov
ljmp
repnz
aad
int
movsl
adc
icebp
in
call
je
sub
iret
or
adc
inc
or
cmc
lods
inc
je
lods
ror
cmp
into
loopne
pop
sub
jl
adc
ljmp
shl
xlat
out
mov
mov
mov
mov
mov
cmc
bound
dec
js
mov
pop
hlt
jmp
mov
pop
outsb
in
mov
xlat
pop
pop
lret
lret
ret
stos
fdivr
call
test
inc
sahf
clc
insl
mov
inc
mov
mov
cmpsb
mov
lcall
mov
lock
pop
dec
push
dec
push
sub
or
repz
incl
in
filds
lea
movsb
cmpsb
mov
inc
mov
mov
sbb
sar
aam
mov
cltd
imul
mov
int3
mov
ja
pushl
movsb
pushf
daa
cmp
sub
pop
out
in
ja
xor
add
mov
arpl
jg
fnstcw
add
cli
mov
jbe
pop
out
daa
filds
out
mul
out
fwait
mov
adc
iret
jecxz
push
mov
imul
outsl
call
xchg
pushf
mov
sub
sbb
lahf
dec
sbb
adc
cld
call
dec
adc
lock
mov
mov
ret
jae
mov
pop
inc
loope
mov
call
dec
pop
inc
pop
roll
call
imul
js
hlt
int
clc
sbb
lods
jmp
fcomip
jmp
ds
sub
mov
or
or
mov
nop
sub
lea
lcall
ljmp
xor
test
fsub
dec
loope
xor
call
or
or
mov
loopne
pusha
jae
fcomp
nop
pop
xchg
test
add
cld
call
mov
sub
push
xchg
adc
adcb
adc
popf
xchg
push
ljmp
or
into
gs
sbb
mov
lock
sbb
outsl
mov
dec
ljmp
dec
xlat
pop
fmull
fldt
dec
scas
or
aad
fildll
loop
push
pop
incl
pop
dec
lret
mov
test
pop
rcr
pop
scas
in
iret
jg
inc
mov
push
mov
lcall
lcall
mov
pop
cltd
cmp
mov
add
lret
test
and
adc
out
push
lock
sahf
ljmp
cmc
imul
test
cmpsb
sbb
testb
inc
popf
imul
push
decl
outsb
or
mov
adc
lret
xor
pushl
fbstp
jg
mov
cltd
loopne
jnp
mov
xor
inc
jmp
aaa
std
sub
shll
inc
mov
add
push
jge
enter
sarb
sahf
ret
imul
sti
movsl
lcall
hlt
insb
add
inc
hlt
out
pop
push
test
mov
xchg
rcrl
lods
and
incl
aaa
rorb
pop
js
das
cmp
in
out
mov
mov
cwtl
pop
jg
ljmp
out
insb
or
push
test
fwait
shlb
inc
fs
sbb
jg
jne
stos
inc
pop
adcb
add
incl
sbb
daa
stc
sahf
pop
pop
jne
in
inc
sahf
pushl
xchg
shrl
shl
xor
mov
outsl
mov
mov
ret
adc
decl
push
popf
add
mov
call
js
lea
movsb
push
or
jns
or
jecxz
enter
mov
mov
ljmp
mov
loope
adc
add
jl
jg
cmpsl
popa
push
insl
lods
cld
xor
xchg
in
out
push
enter
xchg
xchg
sbb
outsb
hlt
movsl
jge
pop
sub
mov
adc
add
stos
std
xchg
addb
mov
mov
call
fisttpl
sti
sbb
pushl
adc
jl
loopne
repz
or
test
mov
mov
cs
xor
repnz
paddw
sbb
fimull
into
mov
push
mov
fwait
or
add
push
mov
loop
fldenv
mov
fcomip
mov
js
sbb
lock
fisttps
cmp
mov
mov
out
es
lcall
xlat
insb
push
aam
xorl
dec
nop
cmp
ljmp
repz
call
push
lods
sbb
sbb
cld
lret
pop
iret
aad
rcl
movsl
inc
mov
decl
pushf
cmp
mov
cmp
add
fistl
fcmovu
rcrb
test
pushl
xchg
jns
loope
mov
inc
outsb
xchg
call
jge
out
adc
inc
adc
jne
sbb
idivb
insb
add
push
inc
inc
cmp
ljmp
push
stos
push
xchg
pop
cmp
xor
ret
inc
xor
popf
inc
adc
add
pop
push
repnz
inc
add
add
or
out
popl
mov
push
gs
shl
add
adc
mov
jg
incl
and
imul
push
in
cli
fisubs
lcall
sub
xchg
cmp
dec
hlt
push
call
int3
lea
jecxz
icebp
push
leave
pop
pop
pop
incl
call
xchg
and
in
mov
adc
les
pop
or
mov
inc
xlat
inc
dec
jl
or
rorl
pop
pop
push
push
cmc
rclb
fstl
mov
test
mov
cld
pushl
loop
jbe
fildll
add
xchg
stos
mov
add
and
mov
xor
aaa
bound
xor
cmp
jo
sbb
jnp
xor
adc
mov
pop
out
aam
pushf
inc
inc
inc
leave
sub
movsl
adc
fadds
call
xor
push
sbb
xchg
enter
mov
jecxz
in
dec
lret
iret
clc
or
call
dec
xchg
sub
push
fstps
and
add
jns
leave
xchg
lods
inc
sar
ljmp
ss
push
xor
xchg
jp
sbb
xchg
mov
jmp
and
mov
cltd
mov
addb
xchg
add
mov
inc
jb
das
sar
mov
jp
call
adc
sub
inc
xor
call
js
addr16
stc
xor
stos
into
sahf
dec
shlb
fisttpl
in
xchg
lret
decl
test
dec
push
dec
fstpl
mov
popa
scas
push
push
stos
mov
fbld
sbb
fisubrs
xor
popf
or
test
xor
and
or
enter
rcr
movb
mov
les
sbb
mov
xchg
and
mov
rcr
enter
cld
out
xchg
mov
mov
inc
push
or
stos
dec
pop
ljmp
pop
je
xchg
push
enter
test
sbb
shl
movsb
addr16
xor
sbb
jl
dec
jecxz
out
and
mov
or
fisttpll
imul
sar
mov
popa
jle
dec
ljmp
stos
pop
leave
aaa
push
jle
jl
mov
or
sbb
pushl
inc
mov
or
orb
out
fwait
in
jae
lret
enter
call
mov
das
dec
in
aam
and
push
jmp
rorl
and
xor
dec
or
out
mov
adc
divb
lret
orb
icebp
xor
lds
int
call
ljmp
filds
adc
xchg
sahf
xlat
out
cmpsl
sbbl
lock
mov
jno
adc
inc
mov
or
and
adc
jge
pop
ljmp
test
and
mov
inc
orl
ljmp
out
cli
scas
ss
leave
or
push
mov
pop
inc
hlt
adc
xor
sti
in
jmp
adc
mov
mull
into
cld
test
lock
inc
loop
in
adc
or
push
xchg
pushl
jmp
xor
aas
mov
jg
mov
sbb
adc
hlt
jmp
xor
push
pop
xor
sti
lock
mov
xor
aam
das
adc
mov
xor
dec
sub
and
fwait
jbe
xchg
sbb
dec
ss
inc
mov
cmp
call
jmp
inc
add
scas
repnz
jl
push
sub
push
dec
sbb
lds
push
pop
mov
pop
cld
pushl
lcall
ret
cs
pop
cmpsb
adc
cs
pop
inc
adc
cmp
sbb
fs
push
mov
ret
mov
dec
pusha
push
cmp
js
loope
jl
shll
clc
lcall
pop
push
jecxz
les
outsb
and
dec
add
add
jge
lahf
nop
adc
ljmp
or
xchg
sbb
push
cmp
repz
add
out
sti
shlb
call
test
les
into
ljmp
sti
sub
ds
decl
call
dec
mov
movsb
int
out
dec
out
pop
incl
rcll
test
pusha
fsubrs
shl
inc
stos
jmp
int
imul
ljmp
jne
aaa
clc
sbb
mov
adc
adc
cltd
in
cmpsb
jg
jmp
inc
xchg
call
daa
push
aas
call
and
mov
push
rorb
aaa
std
jmp
lcall
stos
cmpsl
jb
cmc
adc
mov
push
mov
call
dec
adcb
repz
pop
or
out
mov
js
ret
sar
pushl
pop
mov
push
cmpsb
inc
pop
add
std
fcompl
jp
test
xor
pushl
loope
push
sar
jnp
addr16
dec
bound
and
sti
pop
mov
aad
push
test
xor
jno
out
sbb
jno
mov
popa
jg
ja
mov
xchg
repnz
fdivs
jb
pop
jo
inc
jbe
lret
test
call
insl
mov
imul
fcmovnb
mov
popa
insl
xor
dec
in
adc
jbe
dec
sbb
or
mov
inc
daa
jne
jno
fdivr
xor
lcall
cs
nop
pushf
add
inc
incl
outsb
sub
cmpsl
fists
and
pop
js
inc
pushl
adc
xchg
and
addr16
repz
repnz
scas
out
divb
jb
test
imul
ljmp
enter
movb
cmp
jmp
int
jg
jg
add
iret
ja
std
xchg
pop
or
sti
call
push
sbb
inc
bound
fnstenv
lcall
sub
ljmp
xchg
pop
add
outsb
ljmp
fs
call
mov
add
lea
cwtl
pop
std
add
fistps
dec
sahf
xor
push
inc
push
lcall
and
pop
or
test
push
jae
inc
stos
and
scas
bnd
loope
push
push
js
jmp
fnstsw
test
cmp
mov
ja
orb
push
jmp
pushf
push
incl
xor
inc
mov
xlat
fdivs
xor
and
adc
cmp
shll
cld
out
cli
imul
pop
add
fs
jnp
dec
push
jmp
sbb
adc
jg
cs
pop
pop
cld
call
int3
and
sar
or
scas
cmp
imul
and
mov
ljmp
jecxz
jmp
cmp
aad
popa
fs
fsubl
inc
stos
jno
xlat
sar
mov
leave
rorl
xchg
cltd
repnz
xor
lahf
clc
lods
into
inc
leave
pop
adc
gs
hlt
xor
jno
test
cld
andb
sbb
ja
mov
cmp
gs
in
jg
pop
xchg
fcomps
data16
loopne
repz
cwtl
lods
iret
pushf
test
lcall
popf
push
in
push
stc
cmpb
sahf
aam
enter
dec
and
data16
lcall
mov
add
inc
inc
icebp
jb
fs
mov
dec
iret
lcall
add
arpl
mov
cmp
ds
mov
mov
daa
lods
jo
fisubs
scas
pushf
mov
popf
hlt
jle
cmp
dec
ret
fnstsw
dec
pushf
cli
dec
cmp
dec
aas
repz
lds
sub
and
fstpl
add
lcall
pop
sub
mov
call
popf
pop
test
or
dec
jge
call
inc
hlt
inc
xchg
icebp
pushf
scas
out
xor
push
icebp
aas
lret
sbb
sub
std
incl
shrl
clc
inc
cmc
add
fistps
lods
mov
xor
pop
stos
adc
leave
scas
push
dec
daa
mov
js
test
in
pop
js
fbld
or
incb
je
sub
mov
or
aad
or
jmp
mov
fidivl
ss
mov
jo
in
xchg
jle
cltd
icebp
push
jmp
mull
or
lret
fsubs
jae
rep
lcall
inc
jge
jg
ljmp
and
lock
push
mov
push
mov
push
pushl
mov
jl
roll
push
mov
mov
sub
decl
jp
int
cmp
rclb
push
and
inc
fwait
ret
xchg
xchg
and
incl
subb
stc
fucomi
pop
sbb
int
testb
and
and
mov
mov
popfw
xor
in
out
push
fldl
add
clc
decl
in
or
jne
xchg
cmp
ffree
mov
shr
mov
lret
and
mov
inc
data16
mov
push
or
mov
add
leave
or
push
jne
mov
jmp
inc
test
outsl
xor
lret
push
ss
mov
pop
cmp
fs
pop
xchg
mov
jmp
sbb
and
sub
xlat
data16
mov
pop
push
les
cli
sar
push
das
mov
fadds
push
das
jle
mov
xchg
pusha
out
call
mov
inc
and
outsl
lods
add
mov
pop
inc
sub
stos
xchg
outsb
imul
push
sbb
mov
int
outsb
inc
xchg
js
pop
test
mov
push
pushf
jg
xchg
and
cmp
popf
ds
js
pop
dec
lahf
pop
xor
sbb
dec
cli
mov
and
cmpsl
jecxz
sbb
ja
js
fnsave
and
popl
ror
das
cli
decl
xorb
pop
inc
sahf
mov
xorl
inc
fimuls
decl
pop
add
out
dec
add
and
cltd
sarb
es
repz
cli
sti
pop
sbb
mov
sub
adc
sbbl
jecxz
subl
push
call
jmp
lret
decb
out
in
sbb
push
mov
inc
loop
in
test
push
sbb
cmpsl
push
out
xor
stos
add
sahf
push
xor
ljmp
imul
lds
mov
or
ljmp
dec
cmpsl
ja
incl
clc
stos
sub
or
push
mov
out
inc
dec
insb
xor
pushl
sbb
adc
inc
movsb
sub
mov
mov
adc
imul
mov
ljmp
sbb
xchg
into
repz
dec
into
ljmp
insb
inc
jl
cld
jmp
lcall
sbb
pushf
out
or
and
fstpt
fidivrs
idiv
incl
xchg
sbb
decb
cwtl
jno
in
pop
jmp
mov
lret
or
push
jmp
divb
xlat
fbld
push
out
xchg
cwtl
es
out
mov
lods
sbb
sbb
sarb
sar
xchg
jg
call
fstpt
repz
mov
mov
les
push
test
ljmp
ja
dec
inc
aas
sbb
shll
rclb
scas
scas
sahf
and
pop
lock
stos
call
in
scas
cmp
mov
int
or
mov
paddusw
push
mov
mov
dec
je
in
mov
jmp
mov
or
cmpl
sbb
cld
sub
adc
mov
movsb
ss
incl
std
cmpsb
mov
inc
into
mov
sti
xor
jnp
dec
out
xor
mov
cmp
out
cs
pushf
xlat
xchg
out
das
sar
dec
push
rcll
push
inc
adc
jl
inc
test
fdivr
aaa
cld
das
inc
scas
xchg
rorl
and
pop
push
rcrb
outsb
and
mov
call
clc
aam
insl
sub
push
xchg
call
cmp
bound
icebp
jmp
jb
aas
clc
adc
xor
jle
jg
ja
pop
push
std
push
adc
or
ljmp
fildll
sarb
les
mov
mov
bound
and
mov
jg
jbe
repnz
lcall
mov
pop
lret
test
jnp
dec
xor
decl
movsl
pop
push
push
mov
insb
push
lahf
mov
sbb
test
pop
and
pusha
and
mov
pcmpeqb
subl
mov
inc
in
mov
dec
out
cmpsb
and
xor
cld
dec
les
push
mov
mov
push
pop
xchg
xlat
ljmp
aam
scas
mov
xor
mov
or
xchg
in
int
and
decl
daa
dec
jbe
mov
or
int3
jge
test
fwait
xchg
jle
cli
jge
mov
pop
inc
xchg
out
fsubs
test
loopne
stc
add
out
jo
pop
arpl
fstl
pop
add
dec
pop
cmp
mov
mov
mov
lret
pop
inc
out
adc
jno
int3
pop
pop
outsb
shlb
jecxz
dec
mov
pushl
iret
fdivr
jbe
fs
xchg
sbb
cmp
xor
cmp
mov
int
sub
xchg
incl
mov
sbb
push
cli
out
popa
sahf
xchg
xor
lahf
test
sbb
add
xchg
lcall
imul
mov
sbb
cmpsb
addr16
sub
sbb
cli
mov
incl
fidivl
push
into
sbb
add
xchg
mov
fwait
nop
adc
and
movsb
insl
sub
jmp
xor
ret
bound
mov
es
arpl
lods
push
inc
pop
das
mov
push
sbb
movntq
sbb
cmovp
and
shlb
fimuls
or
cmpxchg
and
sub
fwait
or
cmc
add
sahf
clc
push
les
xchg
mov
or
sbb
mov
hlt
aas
pop
cs
mov
mov
test
mov
adc
notl
xchg
in
cmp
push
fnstenv
push
pushf
test
lcall
pushl
jp
fadds
mov
fstps
adc
ror
add
jg
lcall
imul
sbb
inc
jnp
push
add
mov
sub
xchg
outsl
pushl
dec
movsl
or
jb
repz
jno
inc
int3
cmpsb
outsb
mov
pop
outsb
pop
xchg
sahf
dec
sbb
fildll
mov
hlt
lahf
adc
inc
cmpsb
clc
pop
push
sbb
cmpb
decl
mov
test
test
lahf
rol
sbb
fld
dec
or
incl
adc
sbb
pop
xor
mov
mov
mov
xor
test
mov
and
cwtl
push
dec
adc
sti
mov
add
pushf
loopne
popf
xchg
mov
dec
mov
fmuls
imul
pop
loop
in
push
loope
clc
int3
push
das
clc
jmp
cmp
cmp
push
pop
sub
stc
push
cli
ljmp
or
mov
mov
jg
push
dec
jge
push
gs
pop
fmul
hlt
pop
inc
enter
ljmp
sbb
imul
outsb
imul
adc
leave
rcrb
cmp
in
pushl
cs
iret
sub
lea
pop
and
daa
mov
mov
mov
push
and
repnz
and
and
lea
notb
fstpl
or
jp
ds
fcmovne
add
insb
cli
lret
sahf
push
cld
call
mov
lods
stos
inc
cltd
adc
lea
mov
dec
popa
sbb
lods
and
jmp
push
test
test
push
jne
add
dec
test
inc
xchg
cmp
mov
mov
pop
je
mov
pop
repz
pop
sbb
cs
addr16
rcr
std
stc
lock
mov
add
lods
out
mov
inc
add
in
ljmp
pop
cmp
lea
lahf
adc
push
lea
lods
mov
roll
out
cmpsb
inc
mov
mov
mov
ficoms
pusha
stos
cmp
xor
mov
sbb
imull
hlt
das
imul
das
sbb
das
sarb
lret
scas
pop
leave
dec
mov
cwtl
in
fdivrl
cmp
dec
cmp
mov
mov
dec
xlat
sub
sub
loopne
hlt
add
enter
cmp
aas
ret
mov
jbe
adc
and
and
fbld
mov
incl
lret
movsl
lahf
xchg
sbb
das
jno
mov
mov
inc
pusha
adc
dec
fcoms
push
jge
sbb
sti
jecxz
mov
fisttps
lcall
pop
push
xor
jns
orb
xor
cmp
or
inc
rcrb
stc
dec
pop
adc
cld
inc
push
mov
cmc
into
pop
lret
and
jg
pop
aad
in
ljmp
xor
sub
pop
iret
mov
push
iret
outsl
add
pushf
arpl
out
loop
xchg
cmc
mov
rcll
mov
mov
ljmp
iret
test
mov
es
lcall
hlt
rcrl
pop
shll
ljmp
adc
or
add
js
fcmovu
cmc
pusha
push
sbb
sbb
push
inc
dec
push
jp
push
cld
lcall
out
inc
inc
mov
loope
cli
mov
pop
pop
nop
popf
cmp
sub
decl
xor
jl
inc
aaa
pushf
xor
pop
call
jg
mov
clc
push
add
sub
fs
shrb
jne
jg
mov
xchg
test
pop
push
jmp
call
xor
fistl
lods
jge
sub
push
mov
and
jmp
sbb
adc
add
add
fcomip
insb
cltd
mov
push
aaa
popf
sbb
jle
cwtl
or
cmpb
cmpsl
popf
lret
js
lock
aas
mov
cmp
ret
daa
jbe
jb
sub
ret
lcall
lcall
push
inc
pop
or
dec
pop
scas
test
aas
stos
pop
in
pavgw
cmpsb
out
mov
cli
les
jmp
mov
inc
xchg
out
ret
cmp
mov
hlt
mov
fldenv
mov
stc
xor
mov
cli
mov
outsb
pop
xor
mov
mov
fsubrs
mov
decl
in
subl
or
cld
jg
pushl
dec
mov
mov
mov
pushl
sbb
dec
mov
inc
pop
cmp
roll
sub
mov
fwait
mov
les
loop
arpl
add
aas
dec
mov
out
add
loopne
xchg
push
mov
repnz
call
lcall
andl
mov
mov
pop
leave
pusha
mov
sar
push
jp
jbe
lahf
push
ljmp
fistps
in
xor
jo
cmp
pushl
and
lock
inc
xlat
loop
pop
popl
or
push
mov
push
std
incl
mov
mov
bound
or
adc
sbb
roll
aad
push
cmp
pop
push
jmp
mov
insl
mov
gs
sub
pop
shlb
push
xchg
int
cli
dec
pop
je
add
cmp
into
out
pop
cwtl
arpl
bnd
mov
mov
stos
push
cs
jle
ljmp
adc
jp
aad
sub
shrl
outsb
out
dec
and
lcall
idivl
ror
fidivs
pop
jle
mov
sbb
lea
fwait
lods
das
jle
push
mov
stos
inc
leave
jle
fucomi
ss
jmp
sahf
in
stos
out
pop
mov
cmp
push
adc
mov
and
incl
stos
sub
xchg
mov
popf
dec
adc
jb
subb
sbb
mov
std
or
jmp
inc
jle
movsb
mov
push
lods
stos
clc
lock
pop
xor
stc
repz
cmp
mov
xchg
push
sahf
and
cmpb
scas
xchg
pop
loop
shlb
clc
pushl
mov
sahf
mov
push
inc
imul
jne
adc
ss
pop
int
scas
fstl
call
shlb
cltd
sub
mov
mov
jmp
scas
mov
dec
aas
lcall
pop
push
mov
push
jb
and
mov
scas
inc
aas
xchg
fcomi
mov
xchg
push
imul
lcall
pop
xlat
iret
inc
insl
xlat
arpl
jecxz
xor
xchg
xor
jbe
enter
cld
movsl
xchg
fcomip
popa
test
sub
ret
pop
fimuls
push
mov
mov
dec
push
fcomip
in
test
movsb
mov
sbb
enter
shrb
cwtl
and
push
or
cmpsl
xchg
jae
add
repz
enter
inc
test
pop
adc
test
jnp
or
jmp
or
jmp
test
adc
or
xchg
push
adc
call
jnp
test
ret
int
sarb
out
repz
mov
or
jmp
jl
or
push
or
loope
mov
pop
and
push
mov
popa
jo
ljmp
clc
mov
dec
mov
out
je
pop
in
sub
cwtl
mov
add
push
mov
stos
mov
mov
dec
subl
and
pop
les
fdivr
fcomip
lcall
cwtl
out
test
mov
in
lds
cmpsb
lahf
push
dec
ljmp
shr
add
add
movl
mov
xor
es
mov
jno
decl
xchg
jo
xlat
dec
shll
push
aam
push
push
lock
enter
pushw
loope
cmovne
mov
push
fistps
push
inc
incb
cmp
jl
fcomip
mov
ljmp
pop
ja
stos
divb
jae
into
jno
cmpsl
jb
xchg
in
lock
mov
dec
xchg
into
or
into
cmp
sbb
and
jg
movsl
scas
movsb
jl
loop,pt
incl
cs
and
mov
mov
jg
sbb
push
pushl
cwtl
pop
mov
scas
mul
or
push
outsb
add
jg
cwtl
fadds
and
xor
call
lret
mov
stos
jae
nop
add
cmp
push
int3
or
pushl
mov
ret
imul
add
and
test
fsubl
gs
fldcw
es
sbb
sbb
add
sub
cs
mov
hlt
and
cmc
iret
and
pop
fisttpll
jne
lcall
or
xchg
lods
in
insl
psrld
xor
cmc
incl
add
sti
cld
insl
fs
sahf
fistpl
imul
and
cmp
fistpll
push
testb
cmp
mov
xchg
jno
add
xchg
out
and
jmp
inc
xchg
adc
mov
jle
push
pop
pop
iret
adc
push
gs
mov
hlt
push
xchg
push
clc
xor
add
or
pop
addr16
pop
int3
dec
or
idivl
std
inc
cwtl
or
mov
es
addr16
sub
in
repnz
jmp
sub
test
mov
js
cmc
sub
dec
sbb
xchg
jp
call
insl
orl
ja
adc
in
sub
mov
ljmp
in
xchg
pop
jo
mov
mov
and
scas
xchg
adc
jae
jmp
decl
cltd
push
mov
or
stos
in
mov
cmp
and
loop
imul
sub
mov
mov
ljmp
bound
inc
daa
pop
sub
inc
mov
cltd
xchg
sub
cs
repnz
add
call
xchg
push
cwtl
mov
push
rcrb
jecxz
mov
insb
out
pop
lods
mov
into
xor
or
pushl
jg
shl
mov
loope
cmp
insb
add
cmp
mov
loopne
xor
mov
repz
jns
jecxz
mov
incl
jge
mov
sbb
stc
roll
fnstenv
sbb
pop
sub
pushl
xchg
or
in
jmp
sbb
jae
aas
shll
ds
sbb
xor
sahf
mov
pop
xchg
cmp
xchg
das
sarl
fidivl
pop
xchg
in
mov
xchg
dec
shlb
push
ficomps
xor
push
enter
and
fnstsw
lcall
xor
push
xchg
notl
dec
cli
imul
and
sub
sub
dec
cld
mov
mov
cmpsl
repnz
lahf
mov
adc
jbe
sbb
lods
xchg
xor
ja
call
cmp
ror
push
fistl
ret
pop
in
xor
test
inc
jg
decl
icebp
jno
and
repnz
mov
mov
int
push
mov
push
mov
xor
negl
lret
xchg
int
push
test
jle
inc
jb
lcall
xor
sbb
pop
mov
movsl
js
pusha
andb
jns
and
xchg
mov
fwait
movsb
pop
inc
and
jg
outsl
sbb
push
call
add
add
out
mov
push
pusha
cli
mov
jno
ret
leave
sub
decl
fiaddl
lock
inc
sbb
rorb
mov
lods
int3
loop
push
cld
cmpsb
test
mov
lahf
cmpsb
jne
fcmovnb
xor
dec
adc
scas
adc
les
lods
out
orb
imul
daa
inc
mov
jg
hlt
push
cld
loopne
or
inc
ss
adc
call
dec
cmp
lods
aas
mov
sub
scas
adc
xchg
jl
mov
pop
xchg
out
sti
fisttps
xor
in
add
jnp
mov
xchg
mov
lock
cmp
sbb
sub
mov
fistl
pop
std
incl
push
in
and
pop
and
push
push
loopne
enter
cwtl
sbb
mov
xchg
mov
dec
rcrl
enter
ljmp
add
incl
cld
stos
cmp
call
xlat
or
push
int3
fwait
jle
je
decl
clc
out
mov
fucomip
and
or
mov
inc
push
jg
mov
lahf
imul
cwtl
clc
mov
cmpb
mov
mov
xor
sbb
push
sub
inc
aad
cli
push
movsl
jmp
sti
mov
sub
jge
pop
stos
or
xchg
jmp
push
mov
push
adc
add
push
jb
nop
popa
pop
xchg
stos
shll
mov
and
mov
xchg
xchg
add
lcall
out
add
inc
iret
aad
insb
or
lret
shrb
sbb
lahf
jg
pop
sbb
ljmp
lock
fidivrl
jns
xor
out
jl
jmp
sbb
jle
jg
std
mov
mov
ret
push
loopne
and
lock
xor
xor
pop
cmp
call
jno
sub
incl
cli
ds
mov
ljmp
push
scas
aaa
stos
lcall
outsb
rol
bound
dec
mov
pushf
ds
js
mov
incl
clc
cmpl
or
outsb
es
cmpsl
fucom
jbe
sub
inc
cld
ljmp
aam
mov
dec
enter
sbb
push
pop
sarl
pop
mov
jne
repnz
inc
jb
adc
aad
fidivs
mov
lock
daa
out
shlb
pop
stc
lcall
outsl
inc
inc
test
inc
sarb
xchg
add
add
add
jmp
lods
gs
xchg
cmp
fnstenv
in
or
cltd
js
jmp
shll
pop
cmp
test
or
mov
mov
add
or
adc
lock
jb
or
loopne
mov
xor
dec
shlb
fdivrl
pop
push
push
xorl
clc
idivl
adcb
xor
inc
and
or
decl
dec
lock
insb
inc
int
jo
sbb
pop
push
std
mov
mov
in
lods
fisubl
outsb
add
repz
mov
push
daa
or
into
shrb
push
ffreep
ljmp
sbb
jbe
jbe
add
mov
in
loop
ja
jbe
ljmp
incl
or
shlb
adc
inc
sbb
add
sahf
inc
fisubs
call
add
jg
jns
xchg
ftst
xchg
inc
add
and
inc
or
add
jae
mov
cmp
call
je
fxch
and
ficompl
xor
stos
loop
inc
imul
pop
push
or
sub
push
test
pop
jnp
add
ret
jo
sbb
pushl
mov
in
je
dec
mov
mov
jp
call
xchg
out
fs
aaa
std
js
mov
push
push
inc
push
mov
xchg
sbb
jae
mov
call
sbb
jae,pt
inc
imul
mov
incl
pop
jnp
add
push
int3
shr
mov
xchg
insb
loopne
mov
mov
test
cmp
outsb
cli
movsb
pop
subl
sub
inc
sahf
lods
dec
test
inc
sbb
sbb
incl
sub
sbb
clc
xchg
pop
int
adc
lea
ja
dec
and
mov
push
pop
jb
pop
fidivl
insl
pop
test
rcr
fstps
ljmp
scas
or
js
test
aas
js
inc
adc
sbb
cmp
push
sub
lds
call
xchg
imul
jecxz
add
mov
je
adc
mov
or
pop
and
xor
fsts
push
pop
xchg
pop
loope
sbb
dec
sti
aaa
dec
jo
sar
pushl
lahf
in
xor
mov
inc
ficomps
call
ljmp
cwtl
dec
test
popa
or
mov
push
out
lea
sub
push
sub
pushl
jecxz
clc
or
js
xor
mov
pop
fisubs
hlt
mov
sub
mov
stos
test
lods
in
sarb
fistl
sbb
adc
incl
or
aas
insl
mov
movsb
popa
mov
cmp
xchg
sub
adc
fiadds
pushl
jae
scas
in
in
sub
adc
repz
mov
decl
add
cmp
aas
daa
iret
mov
xchg
sub
decl
xor
xlat
add
sbb
stos
inc
add
xor
popf
incl
and
imul
and
out
mov
add
sbb
incl
jl
das
adc
mov
add
or
ljmp
clc
mov
loopne
imul
push
mov
pop
mov
loopne
inc
ret
insb
cmp
push
nop
inc
outsb
fmull
and
jnp
daa
sbb
stos
divb
imul
scas
jnp
cmp
inc
add
repnz
daa
lahf
imul
or
sub
lahf
lcall
fstps
lock
adc
jb
icebp
push
sbb
sub
mov
sub
subb
and
call
loopne
scas
add
and
lods
stos
mov
ret
sub
cmp
ljmp
push
jp
sub
ja
mov
lock
dec
xchg
ss
pop
xchg
mov
xor
gs
ss
and
jecxz
nop
lods
sbbb
lcall
mov
jge
icebp
ja
add
fdivrl
xchg
pop
jmp
sub
jg
pushl
imul
push
in
sub
dec
arpl
cwtl
fidivs
in
out
inc
pusha
movsl
aaa
lahf
and
loope
xchg
jb
les
call
adc
dec
cld
fistps
ror
arpl
jbe
sbb
xchg
mov
jp
cmp
movsl
stc
mov
pop
jecxz
popa
mov
decl
pop
cmc
xor
ret
push
popa
xchg
in
mov
loopne
or
mov
sbb
fcomps
dec
in
insb
sub
das
mov
sub
cld
jg
cmp
lcall
iret
neg
and
in
arpl
lcall
mov
lea
cwtd
mulb
js
stos
sub
clc
jmp
xchg
sbb
sbb
mov
fnstenv
push
adc
std
aam
mov
nop
inc
lahf
adc
enter
inc
mov
inc
ss
adc
incl
iret
imul
aaa
pop
push
or
pop
xchg
mov
push
mov
dec
push
leave
ljmp
jmp
aaa
fldl
sub
mov
or
jne
movsb
add
cmpsl
ja
mov
cmc
jmp
cltd
jne
inc
inc
mov
or
lods
ficoms
div
mov
bswap
jmp
inc
pop
xchg
lahf
sti
adc
xor
push
std
pop
in
dec
adc
jecxz
pusha
repz
incl
shl
lret
sub
out
rolb
fs
mov
add
push
sbb
inc
jo
idiv
call
jge
ds
enter
fsubl
mov
push
mov
mov
sub
cld
lcall
add
ds
imul
mov
xor
cmp
call
ljmp
movsl
mov
dec
or
mov
push
vzeroupper
scas
ja
push
jnp
dec
mov
clc
pushl
fucomip
es
mov
into
movsb
mov
push
mov
fsubrl
icebp
cli
ljmp
xchg
or
dec
jmp
add
jae
mov
inc
cmp
icebp
pop
push
sub
data16
mov
ljmp
mov
shrb
gs
loop
jp
mov
mov
jp
mov
jmp
out
aam
xchg
clc
dec
jp
lock
andl
out
xchg
push
jbe
inc
incl
dec
push
inc
and
pushf
arpl
fistps
pusha
jl
xlat
push
mov
fwait
mov
insl
sub
and
push
cmp
mov
dec
pusha
xchg
inc
sbb
adc
pushl
mov
jo
pop
xchg
push
js
jne
iret
sahf
es
ljmp
icebp
shlb
testl
push
xchg
lock
adc
mov
cltd
sti
std
in
divb
decl
lahf
xchg
loope
push
cmpsl
mov
icebp
or
jnp
sbb
xchg
cwtl
sbb
jns
xor
pop
decb
cwtl
into
das
dec
sbb
push
rcll
loop
pop
inc
and
cltd
add
rsqrtps
in
cmp
push
cmp
jmp
ljmp
mov
pushl
inc
inc
std
sub
cmp
add
outsl
je
fmull
fists
decl
mov
and
movsl
iret
fcom
xchg
stos
mov
mov
fwait
aas
sub
lret
mov
std
xor
lea
stos
scas
call
nop
and
cmpsl
push
roll
jge
subl
lret
pop
push
call
mov
lahf
je
jle
pop
cwtl
lds
pop
shlb
ljmp
or
inc
insb
ret
iret
inc
push
mov
imul
or
jecxz
add
push
loopne
incl
loope
popf
push
jge
cmp
sti
bound
push
adc
lock
decl
xor
sub
mov
int3
insl
sub
dec
enter
xchg
bound
mov
dec
pop
mov
or
mov
mov
jmp
incl
popl
jbe
xor
cmp
inc
loope
sbb
shll
sbb
cmp
js
lret
mov
out
jb
or
sahf
les
or
scas
add
lret
mov
mov
sub
popa
sbb
mov
scas
clc
call
mov
mov
das
xchg
cwtl
pusha
mov
je
mov
call
sbb
outsl
mov
icebp
jnp
nop
lret
add
les
push
mov
xchg
adc
lcall
scas
jnp
adc
adc
or
movsb
test
and
mov
sar
inc
jb
dec
mov
dec
lret
xor
lcall
decl
push
xor
imul
or
adc
inc
lds
sub
cli
incl
adc
aam
shlb
sbb
movsl
mov
dec
mov
in
sub
movsl
out
les
ja
sti
jae
out
lahf
int3
fbld
nop
pop
sbb
or
push
mov
stos
xchg
dec
jo
cmc
incl
or
loopne
divb
and
and
cmp
decl
mov
jno
pop
fdivp
push
mov
repnz
bound
outsl
call
decl
dec
ficomps
ret
test
cli
mov
lods
vpsubsw
bswap
adc
decl
mov
incb
dec
sarb
aad
fnsave
stos
std
orl
xor
cmp
les
clc
in
in
aas
jg
fisubl
or
enter
xor
cmp
inc
in
cmp
dec
out
out
test
movsl
fwait
fs
scas
xor
dec
xchg
inc
jle
pslld
decl
xor
gs
or
and
cmp
in
cmp
cmp
decl
xchg
jne
mov
adcl
call
cltd
movsb
gs
fcomp
inc
ffreep
sar
decl
hlt
sub
iret
add
out
fs
mov
mov
fnstsw
jno
imul
ljmp
mov
jns
es
bound
sub
add
incl
and
mov
push
jl
mov
sub
xlat
mulb
and
fdivs
jo
jmp
xchg
mov
inc
dec
mov
xor
pushf
xlat
in
fcompl
lret
mov
addr16
jg
fdivr
es
out
ljmp
in
mov
ljmp
stc
dec
fcmovbe
dec
insb
pop
dec
pop
or
rolb
cmpl
dec
jmp
xchg
decl
xchg
ss
or
fs
sub
stos
jp
jmp
addr16
insl
adcb
stos
inc
rcrl
cld
jae
mov
mov
call
pop
add
cmp
outsl
sbb
sub
dec
pop
sub
cmp
incl
pop
push
or
subb
inc
jne
jp
xor
xor
test
decl
mov
in
or
add
jbe
daa
ret
pop
fwait
push
cli
jb
inc
dec
incl
sub
inc
mov
cmpsb
add
mov
lds
push
repnz
lcall
sti
add
out
mov
mov
push
pop
adc
sar
clc
jns
mov
enter
call
push
mov
pop
sub
sub
or
cmp
dec
sub
adc
mov
incl
pop
mov
add
repz
jmp
enter
and
mov
loopew
decl
lahf
nopl
xchg
rorb
jne
xor
imul
lcall
xlat
adcl
sbb
sbb
jle
adc
fs
je
int
call
aad
xorb
arpl
xchg
xchg
fs
aad
mov
sbb
jmp
cmp
rcl
mov
cmp
adc
inc
cmp
adc
sub
jle
jg
xor
lahf
dec
mov
pushf
sbb
in
jbe
into
lret
pushl
ja,pn
stc
lret
xor
jne
mov
cld
js
jmp
cmp
in
nop
add
jmp
and
lods
sti
das
fs
shlb
daa
adc
jl
insl
mov
cmc
aad
add
pushl
mov
xlat
jne
aam
out
into
mov
into
repz
int
pop
xchg
cmp
jno
out
leave
bound
incl
outsb
adc
mov
cmpsl
lea
lods
or
mov
jb
mov
incl
inc
dec
addr16
push
pop
frstor
xor
or
lods
pop
insl
jg
sbb
ljmp
lahf
pop
adc
mov
stos
call
adc
add
mov
ljmp
mov
dec
pop
ret
roll
les
jo
aaa
pusha
call
push
pop
inc
into
and
mov
lret
aaa
and
adc
jns
daa
and
into
aam
das
call
jg
mov
mov
mov
clc
mov
adc
cmc
lds
pop
cmp
mov
push
jb
in
mov
fmuls
mov
lcall
xor
dec
pop
xor
mov
movsb
adc
notl
in
inc
mov
mov
jmp
mov
xor
push
mov
out
pop
jp
shll
dec
jg
aam
shl
jge
sbb
fdivs
loop
jle
mov
loopne
fcompl
ss
dec
and
ljmp
xor
addr16
cltd
cs
in
bound
repz
popf
inc
add
lods
ret
add
push
fsubrp
mov
lahf
mov
pop
outsl
dec
xor
loopne
test
jnp
mov
add
decl
add
inc
insb
movsb
push
test
mov
popa
test
xor
decl
lock
dec
mov
loop
sub
sbb
dec
xchg
ficomps
mov
sti
dec
insb
rclb
movsl
sbb
out
lods
mov
cwtl
dec
ljmp
stos
int3
mov
add
insb
push
cmp
call
push
add
dec
pop
rorl
jns
xor
shlb
mov
xchg
fstpl
lcall
call
push
mov
xor
loope
inc
pop
mov
lock
push
sti
xchg
jmp
xchg
pushl
or
sbb
call
and
outsb
mov
cmp
jge
lcall
xor
xlat
and
jnp
outsl
dec
and
xor
call
mov
jp
jo
sbb
stos
insb
int3
xchg
mov
xor
and
iret
xchg
pushl
dec
lret
aam
inc
or
push
and
xlat
push
inc
sbb
jbe
lahf
inc
mov
clc
jmp
cmp
pop
in
addr16
or
xor
mov
mov
xorl
pusha
xchg
das
cld
call
fucomi
mov
aam
sub
sar
call
inc
mov
inc
pop
aas
xor
push
out
jmp
or
sub
push
lret
shlb
aas
dec
std
incl
test
mov
mov
xchg
fs
addb
push
sub
adc
xchg
mov
mov
mov
adc
sub
fwait
push
rclb
push
bound
sbb
call
lock
sti
add
inc
pop
cmp
mov
xorb
pop
xlat
pop
cmp
sbb
lcall
sub
xor
pop
in
sub
imul
mov
xor
incl
sbb
pop
xchg
rorb
pop
jge
loop
rolb
inc
xchg
shll
inc
adc
inc
std
lea
dec
je
hlt
and
dec
test
out
loopne
xchg
add
cwtl
mov
incl
iret
stos
push
xchg
sti
jnp
pop
lea
inc
mov
enter
inc
and
in
fldenv
mov
hlt
cld
xchg
in
loope
addr16
outsb
sub
out
and
xchg
ss
decl
cltd
andl
pop
and
fsubrs
aad
mov
mov
lcall
push
cmp
fldl
pop
ficoml
dec
dec
test
and
data16
xor
stos
out
cs
popa
addr16
leave
or
shrl
stos
dec
fdivrs
cmp
jmp
call
fsubrl
imul
adc
add
repz
loope
call
fs
loop
iret
loop
mov
sbb
call
xchg
das
cltd
xchg
push
adc
shll
js
xor
stc
fisttpl
lods
int
jg
nop
into
inc
push
cmc
jl
imul
pop
rcrb
jmp
enter
in
jge
inc
push
dec
cmp
push
mov
leave
loop
out
xorb
push
orl
lock
incl
movhps
test
pop
je
or
aam
pop
iret
add
ljmp
stos
ds
sbb
sub
mov
scas
scas
mov
dec
push
adc
add
shll
and
fcmovnu
test
cmc
pop
clc
add
xchg
jmp
cmpsb
in
imul
mov
or
repnz
pop
out
outsl
mov
dec
push
and
in
cli
ret
sub
xor
fldt
xor
inc
dec
cmp
and
sbb
call
loopne
push
mov
mov
iret
pop
push
into
lds
jle
in
mov
lcall
std
jbe
lea
clc
sahf
add
bound
inc
test
mov
jmp
out
jnp
leave
xor
scas
cmp
push
outsl
aaa
test
pushl
cwtl
mov
jge
out
pop
jl
add
fucomip
xchg
les
cwtl
enter
push
lcall
movsl
mov
jno
ss
sbb
les
fisttps
cmp
sbb
shrl
scas
pop
ds
mov
add
pushf
out
or
mov
icebp
mov
jmp
arpl
das
cli
push
inc
xor
mov
ficomps
add
jle
notl
in
sbb
cltd
xor
loopne
sti
xchg
fdivrs
stos
enter
cmp
loopne
call
mov
or
jge
lret
jg
movsl
xchg
je
cmp
in
fs
clc
sub
movsl
stc
testl
in
js
das
push
dec
ror
insl
in
cwtl
bound
lods
push
stos
mov
jbe
dec
leave
mov
inc
xchg
in
push
pop
sub
ja
mov
dec
incl
jbe
xor
mov
inc
push
lods
xor
or
aad
fcomip
jmp
es
lock
add
into
sub
mov
jnp
mov
ljmp
mov
aaa
jecxz
inc
stos
fidivrs
mov
push
or
add
lea
ret
in
cs
lcall
push
adc
mov
gs
add
lds
fiadds
xor
ret
decl
pop
push
test
mov
aam
mov
repz
cmp
dec
xchg
lock
push
xor
sbb
insb
sbb
sub
add
pop
inc
inc
incb
mov
cmp
adc
call
ja
push
mov
push
shl
mov
pop
and
incl
cmc
dec
mov
xor
mov
loope
mov
sub
inc
shrb
frstor
add
ja
inc
lahf
jg
xchg
insb
xchg
xchg
and
fdivrl
fidivrs
scas
scas
sbb
xor
add
ds
dec
mov
lcall
jle
shlb
xchg
sbb
inc
in
pop
outsl
cmp
push
rcr
lret
dec
jge
lcall
int
push
xchg
gs
sub
scas
cmp
inc
mov
movsb
push
pop
mov
jmp
jmp
jnp
ret
cltd
daa
inc
jg
cld
push
jne
clc
test
pop
xchg
mov
xlat
pusha
or
inc
sub
in
dec
mov
xor
nop
lret
jl
or
loope
jl
rol
sarb
mov
jnp
sub
pop
and
or
pop
pusha
scas
mov
incl
dec
push
shll
push
mov
call
sub
enter
ss
adc
jns
in
dec
lea
popf
nop
add
jmp
clc
nop
rcrl
sahf
insl
push
push
jns
add
jl
inc
add
dec
push
adc
dec
pop
ja
stos
jno
fwait
loopne
sbb
loopne
in
pop
mov
or
inc
mov
rolb
mov
decl
jno
pop
pop
and
pop
fildl
mov
push
cli
xchg
mov
jl
pop
das
jg
xchg
jp
jmp
hlt
aad
inc
pop
bound
mov
jg
test
cli
imul
dec
pop
sbbb
xor
repnz
call
cli
and
inc
pop
sbb
pusha
mov
in
xchg
dec
shll
decl
lods
pop
out
push
jge
inc
iret
dec
push
das
fiaddl
scas
cli
mov
push
rol
mov
enter
fisubrl
outsl
call
mov
mov
push
lret
and
insl
popa
xor
jbe
mov
jmp
addr16
add
jbe
sbb
std
push
loopne
nop
and
fs
pop
outsb
adc
push
jmp
cli
mov
xchg
stos
rcll
insb
inc
loopne
adc
jge
ja
pop
das
rcr
imul
das
decl
dec
push
rcr
sarl
jo
fildll
rolb
and
lcall
sti
or
inc
cmp
jge
mov
arpl
xlat
pop
add
dec
aam
jbe
ljmp
jnp
das
sub
sub
into
dec
mov
xchg
push
mov
decl
leave
pop
adc
mov
mov
stos
lea
stos
adcb
icebp
push
dec
je
add
imul
movsl
mov
add
pop
rorl
cmc
and
fisttpl
int
push
call
call
cmp
data16
xlat
cmpb
mov
xor
fcoml
ss
ret
inc
stc
xor
inc
scas
je
xor
lcall
pop
shrb
inc
stc
out
movsb
jecxz
aas
cltd
cmp
les
push
ret
incl
or
icebp
insl
sahf
stos
push
ja
add
test
addb
sar
incl
mov
out
mov
outsb
pop
lea
cmp
dec
cmp
pusha
or
aam
xor
incl
data16
jmp
lahf
adc
cmp
or
inc
mov
inc
ds
jg
add
call
pop
in
ret
push
push
pop
lock
test
add
jg
push
arpl
cmp
jg
dec
fs
scas
loope
aad
fidivrs
imul
mov
ljmp
test
pop
push
sub
out
pop
adc
imull
mov
lods
sub
mov
push
arpl
ds
pop
ds
push
je
mov
in
clc
sub
movsl
push
test
sub
das
or
fistpll
dec
push
rorl
mov
jmp
outsb
leave
shlb
das
imul
cmp
mov
and
into
decl
sub
mov
and
sahf
popf
cltd
movsb
scas
jne
outsl
call
jp
mov
xchg
ss
push
xor
jns
mov
out
sbb
std
clc
aas
hlt
push
xchg
popa
push
mov
out
pushf
gs
pop
je
cmp
pushl
or
popl
inc
xchg
call
mov
push
lods
gs
call
in
and
sub
fmull
fdivrs
cwtl
movsb
sbb
inc
inc
test
mov
call
lock
inc
jg
cmc
xor
and
pusha
movsl
daa
ror
scas
mov
dec
pop
jb
jg
jmp
sti
cli
into
adc
arpl
lcall
xlat
xchg
ret
mov
and
adc
movsb
mov
jbe
dec
dec
mov
idiv
cmp
je
add
out
inc
sub
lock
pop
xor
pushl
out
sbb
fsubl
mov
lea
jbe
fbstp
mov
hlt
jmp
outsb
sub
lea
dec
push
pop
hlt
xchg
lods
inc
addl
lcall
je
mov
fcomps
xor
jmp
stos
das
ror
es
movd
push
xlat
push
aam
decl
mov
adc
pop
cmp
add
decl
cli
roll
adc
movsl
cmp
mov
jne
pop
icebp
decl
das
sbb
mov
sbbb
jge
mov
out
aas
icebp
pop
icebp
ljmp
orb
dec
push
imul
in
mov
faddl
lcall
sbb
xchg
and
pushf
mov
sub
inc
inc
adc
inc
adc
decl
shl
clc
jge
fiaddl
cmpl
aas
pop
int3
mov
sbb
jbe
movsb
sahf
mov
bound
mov
dec
leave
jae
push
outsl
std
sub
or
fcomip
call
jb
mov
xchg
and
movsb
int3
mov
daa
stos
lcall
push
pusha
in
scas
rcrl
int
push
dec
mov
inc
nop
dec
pop
int
jecxz
push
cmp
sub
out
sub
repnz
add
jecxz
and
das
mov
outsl
jmp
pusha
jmp
pop
cld
incl
ds
mov
roll
cmp
sti
sahf
xchg
sub
mov
or
out
ljmp
or
xchg
jns
adc
or
jmp
mov
xor
pushl
add
mov
inc
std
cmp
cwtl
lahf
rcrl
push
or
pop
daa
lods
lods
adc
lahf
outsl
inc
or
inc
fld
cmp
rcr
sub
popf
cli
pop
mull
loop
jle
outsb
incb
pushl
ret
shlb
cld
xchg
mov
sub
adc
rclb
jmp
enter
push
push
outsb
dec
cld
xchg
inc
daa
ret
mov
ljmp
push
outsl
mov
or
fiaddl
and
hlt
or
jmp
ja
leave
out
notl
mov
mov
adc
popf
cmp
es
mov
fcmovnu
mov
lods
mov
stos
or
jb
or
call
xlat
sub
dec
jge
push
and
mov
jg
pop
add
repz
sbb
jle
bound
inc
jmp
xchg
pop
addl
bound
scas
fxtract
add
lret
gs
push
sahf
add
popf
mov
jmp
out
loopne
divb
mov
xchg
shlb
inc
mov
pop
add
pop
cmpb
inc
mov
or
addl
decl
or
in
stos
xor
jmp
jbe
mov
cmp
decl
mov
sub
lcall
fistps
add
pushl
xor
adc
dec
das
xor
push
adc
cs
and
pop
int3
push
push
call
js
dec
mov
lret
fdivs
push
test
dec
sub
lods
mov
jbe
lods
jg
addb
es
aad
in
jle
icebp
pusha
dec
jecxz
push
fldl
sub
jg
ljmp
in
or
mov
dec
xor
data16
leave
xchg
xor
ljmp
pop
jle
push
and
xchg
cmc
in
cmp
lret
hlt
jl
jge
pop
xlat
pop
ljmp
stos
and
inc
sbb
push
addr16
cltd
fs
add
xchg
sbb
jb
jae
inc
sbb
push
inc
mov
and
js
sbb
inc
movsb
push
sbb
xor
out
pushl
push
lret
mov
out
push
test
outsw
cwtl
ffreep
addr16
lret
mov
cmp
call
daa
out
dec
jmp
adc
aam
dec
inc
gs
jb
mov
stc
ret
js
gs
leave
fistpll
pushf
js
add
lods
data16
js
pop
or
jl
iret
xchg
out
sar
int3
pop
jle
fdivl
in
push
dec
sub
ljmp
cmc
cwtl
ss
push
pop
pop
ss
mov
pop
push
xchg
pop
outsb
pop
and
cmp
xchg
aas
pop
leave
push
nop
pop
ljmp
mov
roll
loope
mov
lcall
cs
es
mov
pop
call
jno
pop
dec
inc
inc
push
dec
jo
test
push
in
dec
push
mov
loop
xchg
jns
jl
mov
ja
ss
push
pop
cli
ja
mov
addl
scas
inc
scas
jne
out
sub
pop
repnz
bound
pop
xor
call
loopne
je
xchg
sub
stos
cmpsl
dec
mov
mov
inc
aaa
jmp
pop
cld
incl
push
leave
push
test
test
mov
sbb
push
inc
ss
loope
mov
push
pop
xchg
pushf
mov
je
mov
call
movsl
jp
in
das
dec
jae
xor
cld
movsb
jns
jle
pushf
pop
iret
gs
cmp
lcall
inc
push
xorl
mov
hlt
notb
clc
loopne
sti
push
addr16
fnstcw
aas
leave
jmp
push
lods
lods
cli
mov
push
dec
orl
adc
arpl
movsb
insb
xor
pushl
sbb
mov
rcrl
dec
cmpsl
subb
movb
mov
pop
aas
inc
mov
int
bound
push
add
leave
fwait
mov
or
testb
sub
jb
out
fs
out
push
ret
add
add
movnti
fs
push
sarb
fstp
inc
ja
sar
ljmp
jp
dec
cltd
rcrl
loope
insl
sahf
mov
enter
lahf
hlt
pop
cs
jg
lcall
in
cmp
fidivrl
xor
sub
jne
outsl
xlat
fnstcw
jg
mov
jbe
aam
cmp
jo
fs
mov
mov
arpl
pop
adc
pushl
pushf
arpl
jno
into
loop
in
mov
push
pop
push
mov
fwait
ljmp
mov
xchg
pop
mov
sub
les
inc
cmpsb
mov
xchg
int3
or
push
arpl
paddusb
in
clc
mov
adc
xor
push
cmpsw
adc
int3
icebp
mov
popf
adc
jg
pop
cmc
mov
jno
pop
clc
push
mov
push
dec
repnz
ljmp
into
iret
xchg
lret
pop
hlt
lods
cmp
cmp
jmp
sbb
bound
ljmp
adc
cmpsb
fs
cmpsb
push
sub
daa
stc
mov
pop
inc
sti
inc
mov
imul
imul
bound
jbe
add
outsb
fidivs
and
in
xchg
jp
add
call
mov
inc
gs
pop
imulb
jae
out
mov
in
inc
jecxz
cmc
mov
pop
aas
sub
data16
in
insb
xchg
test
cmp
pop
mov
sub
jns
xlat
xchg
cmp
testl
pop
dec
daa
jmp
clc
imulb
fistl
aam
dec
lods
cld
mov
je
push
push
jmp
incl
cld
xchg
pop
aam
xchg
fcompl
push
pusha
addps
pop
dec
and
and
sub
cs
and
push
ficomps
push
xchg
adc
test
cmp
adc
loop
mov
fwait
xchg
and
pop
lock
mov
lods
mov
pop
cli
and
imul
insb
pushl
les
lahf
add
outsb
xor
imul
loop
pop
aad
int3
test
pop
xchg
es
sar
call
cld
shll
adc
jg
pop
es
lcall
jecxz
rorb
sub
call
imul
aaa
rol
and
push
aad
loop
pop
sub
cld
dec
lock
dec
mov
pop
cmc
decl
sbb
insl
mov
and
pop
sbb
imul
imul
lcall
cmp
js
ja
loopne
ds
inc
flds
xchg
mov
push
lcall
incl
xor
add
decl
inc
lds
sti
xchg
loopne
inc
fwait
inc
into
ja
call
dec
daa
sub
nop
ror
scas
cli
mov
decl
push
push
adc
mov
mull
dec
cmp
nop
mov
rcrl
in
lcall
adc
ret
dec
mov
mov
cld
fldt
loopne
xor
ret
mov
cwtl
xchg
xchg
rol
call
fbstp
sar
sti
push
add
out
mov
shlb
popa
ud0
mov
mov
xchg
pusha
xchg
shlb
testl
mov
push
fwait
push
mov
incl
mov
xor
pop
inc
movsb
cmp
jge
add
jge
pop
mov
fs
aam
mov
lods
nop
mov
pushf
push
sbbl
in
or
xchg
in
inc
jmp
fs
fcmovbe
sub
call
mov
mov
adc
xchg
jge
decl
xchg
ret
xchg
dec
icebp
mov
mov
in
adc
das
pop
outsl
dec
decl
sbb
or
cld
jge
mov
or
xor
jle
lret
cmp
lods
ss
mov
mov
dec
jecxz
and
loop
outsl
xor
mov
das
into
sti
xor
xor
ljmp
decl
lods
lock
xchg
outsl
mov
adc
test
mov
test
sub
imul
pop
es
incl
mov
cmc
sbb
or
into
jae
cmc
add
popf
or
out
stos
xor
outsl
pop
loopne
inc
jno
sub
mov
fxch
mov
push
jns
addb
cs
sti
test
jbe
inc
mov
fisttpll
test
ljmp
mov
inc
adc
sub
iret
push
adc
fsubl
out
in
call
dec
jmp
add
xor
lcall
addr16
ljmp
push
lret
hlt
call
cwtl
fwait
xchg
dec
or
add
scas
mov
scas
out
push
std
sahf
hlt
push
cmc
ljmp
push
subl
or
mov
lds
adc
dec
outsb
and
jbe
mov
fsts
cs
rorb
daa
add
mov
incl
xor
pop
out
add
es
stc
mov
push
fcomip
mov
into
js
or
xchg
sbb
sub
push
repz
fsubs
incl
inc
lahf
mov
jmp
pop
incl
cld
inc
fs
sub
fstpt
call
mov
and
jmp
sbb
or
cmc
ror
mov
je
jae
xor
push
push
jecxz
loope
mov
add
popa
mov
jno
add
lcall
lods
jne
mov
incl
sub
gs
ja,pt
cmp
and
cmp
dec
aad
sbb
mov
lret
in
inc
push
into
adc
mov
nop
jbe
dec
xchg
adc
xchg
cmp
mov
mov
pop
jle
mov
sub
pop
mov
push
xor
add
sbb
popf
fs
lcall
ja
inc
sbb
mov
cld
mov
rclb
mov
inc
call
popa
arpl
and
jl
mov
fwait
xor
test
push
int3
xchg
xchg
lods
mov
lcall
adc
pop
jno
aad
adc
pop
mov
in
adc
pop
pop
sahf
jne
jg
decl
mov
push
mov
mov
fwait
xor
xchg
pop
int3
call
stos
sahf
testl
cmp
ret
push
ljmp
ljmp
cld
cmp
into
push
jg
xor
inc
sahf
lahf
mov
fcmovne
add
aam
cmp
sbb
insb
insb
test
call
mov
bound
andb
push
out
fldl
and
fsubr
dec
add
cmp
call
jmp
push
xlat
and
pop
pop
or
pop
jmp
inc
std
ljmp
mov
add
push
mov
sbb
dec
pop
lods
in
inc
or
outsb
test
sbb
dec
jae
mov
xchg
or
mov
push
inc
mov
mov
jl
adc
push
ja
jmp
jp
add
push
fadd
test
pushl
dec
pushf
subl
js
push
fwait
pop
cmp
jnp
and
jge
fs
cmpsb
jmp
mov
int
outsl
jle
aas
jl
scas
mov
pusha
sbb
call
bound
inc
mov
cli
sahf
inc
out
cmp
rclb
js
pop
and
lds
jecxz
ljmp
ja
inc
lea
pop
cmpsb
xor
jg
add
repnz
stos
or
add
fcomps
loop
lahf
int
mov
push
sub
int
ja
in
xor
mov
aam
adc
call
andb
adcl
pop
mov
pop
mov
dec
pop
xor
bt
lcall
in
sbb
scas
fimuls
mov
popa
xchg
cld
outsl
je
and
jo
lcall
xlat
mov
mov
adc
mov
stos
aaa
out
out
pop
push
sahf
inc
subb
add
inc
pusha
mov
push
ds
call
mov
into
jnp
scas
mov
pushl
clc
sub
adc
add
xor
cmp
pop
push
and
aas
push
push
inc
pop
cmp
outsb
add
or
pusha
jmp
fdivr
push
lods
repnz
cmp
add
call
inc
stos
jg
jmp
jne
in
sbb
mov
mov
repz
call
bound
cmp
xor
loopne
andb
xlat
out
mov
mov
adc
lock
incl
in
jg
xchg
xchg
je
jp
adc
fildl
push
in
add
lods
gs
or
and
mov
inc
xor
sbb
rcrb
jmp
xchg
movsb
push
loope
pop
push
add
mov
push
movsb
mov
adc
inc
ret
lcall
sub
jge
subl
fdivrl
cmpsb
or
pusha
xchg
or
fsts
decl
stos
adc
imul
mov
sub
xor
imul
arpl
sub
mov
rcl
test
int
sub
pop
mov
mov
cmp
add
sbb
fcomip
cmp
jae
mov
movsl
mov
add
mov
push
push
push
int
xchg
mov
jecxz
add
sub
cltd
outsb
insl
aas
sbb
mov
adc
cmp
dec
jbe
mov
xor
loope
mov
jl
jo
add
push
pop
adc
xchg
outsl
mov
js
inc
xchg
and
push
push
je
clc
mov
daa
ds
movsb
sbb
test
mov
pushl
scas
inc
adc
sbb
and
jle
dec
leave
xor
sbb
leave
mov
dec
cmp
mov
jmp
pop
call
testb
lods
data16
jp
mov
dec
ljmp
incl
push
xor
pop
fwait
imul
fstpt
push
inc
loopne
xor
mov
icebp
jle
mov
inc
pop
cmpsb
in
mov
push
mov
lock
pop
mov
inc
insb
lret
cltd
mov
incl
sahf
sub
pop
pop
bnd
adc
push
mov
movsl
nop
outsb
sub
pop
pushf
inc
lcall
pusha
fsts
leave
mov
cmpsl
sbb
dec
arpl
stc
mov
push
pop
push
gs
sbb
inc
inc
push
cmpsb
movsb
ret
mov
mov
aaa
scas
clc
incl
push
xchg
cmp
xor
data16
ss
jmp
mov
loop
fsubl
movsl
clc
std
or
je
stc
mov
mov
xlat
cmp
call
inc
daa
cwtl
out
pop
aaa
js
mov
sub
dec
in
test
jmp
mov
sbb
mov
aas
mov
dec
test
or
push
fidivs
xchg
jmp
loope
pop
mov
shlb
decl
sbbl
xchg
cwtl
or
out
mov
ljmp
inc
popa
xor
call
mov
jmp
xlat
flds
mov
sbb
push
push
sti
add
ljmp
scas
rcrl
push
leave
pop
sub
dec
inc
jb
add
mov
mov
dec
sbb
ja
jbe
xlat
aas
xor
es
mov
inc
mov
xor
out
incl
cld
rorl
add
cwtl
pop
jle
mov
mov
in
lcall
cmp
push
mov
leave
mov
cmp
pushl
sti
sub
lcall
sub
mov
mov
mov
dec
lret
adc
jno
adc
push
data16
in
clc
inc
sbb
adc
sarb
mov
xor
jmp
sub
test
adc
sbb
jp
xlat
in
jno
xchg
push
clc
lahf
sub
mov
stos
pop
aad
out
jp
rcr
mov
sbb
mov
ss
inc
repz
popf
add
cmp
jno
jg
sub
or
aas
jo
jmp
pushl
ljmp
pusha
pushf
and
xchg
sbb
mov
sub
in
jbe
xor
push
ss
ljmp
jmp
push
call
jne
cmpsb
iret
inc
adc
inc
scas
std
mov
mov
mov
jmp
jecxz
push
lret
adc
jg
mov
fists
pop
imul
pop
aam
jae
adc
rclb
cltd
jge
jnp
jl
aaa
or
push
fildll
stc
inc
add
add
push
into
push
mov
pop
es
push
sar
call
dec
lret
add
ret
and
or
imul
push
adc
dec
daa
cmc
pop
cli
mov
xchg
ret
out
dec
xchg
out
ljmp
pop
imul
push
arpl
into
jne
icebp
pop
repz
jmp
dec
mov
ret
push
mov
mov
mov
movsb
movsl
into
aam
sbb
and
out
lcall
jmp
sbb
loopne
out
call
push
enter
incl
adc
shrb
jge
pop
sub
enter
pop
pop
mov
insb
daa
in
adc
fcomip
inc
out
cld
iret
faddl
cmp
mov
cmp
loopne
cmp
aaa
movsb
mov
decl
push
jle
jecxz
cmc
jmp
loope
daa
insb
insb
jmp
dec
xor
icebp
xchg
push
lods
lcall
loope
call
iret
popf
das
lods
insb
xchg
cmp
jp
aam
dec
popa
jno
pop
rcl
dec
sub
call
testb
mov
add
jnp
pop
std
push
cwtl
or
or
gs
pop
scas
iret
adc
cmpsl
sbb
bound
lds
xchg
or
cmp
xorb
dec
push
jmp
fs
lea
mov
incl
out
xchg
out
call
imul
xchg
pop
jbe
mov
fists
dec
cbtw
incl
leave
xchg
push
or
imul
cmp
cmp
add
push
icebp
gs
incl
pxor
mov
dec
jmp
int
dec
or
add
jmp
pushf
ds
repnz
cmpsb
xor
fisubrs
lds
pop
jp
or
sub
loope
mov
push
push
sub
cltd
lock
sbb
push
data16
call
ljmp
push
mov
adc
test
mov
mov
movsb
dec
loope
lea
clc
mov
xor
push
or
in
idiv
lods
cltd
pushf
push
cs
mov
test
ljmp
jg
inc
jle
inc
je
sbb
jl
ror
push
iret
test
call
sbb
arpl
movb
shll
push
mov
pushl
jbe
xchg
and
arpl
pop
adc
pushl
or
outsb
cmp
incl
xor
sar
push
addr16
mov
clc
sbb
sub
sahf
mov
in
or
ljmp
bound
aas
adc
shlb
xor
in
add
ljmp
ja
lret
scas
rclb
pop
movb
jge
jg
out
in
out
mov
incl
add
xchg
pop
pop
mov
repnz
xor
push
out
loop
loopne
dec
les
push
enter
mov
mov
pop
in
pop
lahf
in
or
xor
sub
xor
negl
mov
pextrw
popa
cmp
xorb
push
fcomps
popf
sbb
jmp
inc
mov
pop
pusha
addr16
cmp
cmp
out
outsb
jo
mov
outsl
vmaxsd
call
sub
xchg
add
pop
pop
hlt
icebp
lods
out
push
arpl
gs
dec
jnp
cltd
inc
adc
imul
add
xchg
push
cmp
call
decl
push
dec
andb
jl
lods
lret
xor
and
and
movsl
pop
xchg
mov
mov
sbb
jmp
sub
aas
enter
sub
ljmp
call
xchg
out
sarb
sti
div
out
fadd
js
mov
xor
sub
outsb
les
push
sbb
data16
add
mov
insb
repz
rcrb
xchg
cmp
jns
cmp
lcall
adc
mov
or
insb
mov
cwtl
jns
std
fdivs
or
incl
in
dec
ret
in
and
loopne
mov
adc
lds
lahf
mov
fnstsw
mov
pop
lcall
add
imul
push
and
fcmovnb
xor
mov
inc
xchg
mov
mov
jne
fwait
cmp
push
sarb
popa
push
lock
ljmp
adc
iret
sti
jb
ffreep
xor
jbe
xchg
inc
outsl
jno
jne
push
aad
lds
add
mov
jns
cmp
aas
cli
inc
frstor
jg
pop
in
xchg
sbb
cmp
in
or
jmp
sub
mov
stos
add
das
cmc
sti
inc
out
ljmp
dec
cmpsl
dec
push
sahf
sbb
add
cmp
popa
lods
lret
pop
aaa
pop
mov
pop
mov
lcall
out
mov
sbb
fwait
cmp
test
clc
pop
lock
pop
cmp
ljmp
lods
shlb
call
adc
insb
sub
push
js
or
mov
dec
and
cmp
mov
mov
aad
mov
jg
aaa
lcall
nop
xor
inc
cmp
mov
pushl
or
cli
pusha
andl
lods
pop
adc
jne
and
and
pop
add
call
sahf
xchg
clc
rorb
addb
xchg
cli
je
frstor
jns
adc
arpl
add
jle
fidivs
sbb
mov
push
xchg
xchg
das
xchg
pushl
std
dec
pop
sti
inc
mov
jo
push
pop
mov
shlb
xorb
sarb
out
push
add
dec
and
push
incl
inc
push
jo
cmp
push
inc
js
rolb
sub
incl
ljmp
or
push
sbb
hlt
movsb
lock
cmp
loope
push
rcr
mov
and
or
push
dec
test
jp
inc
inc
mov
das
jnp
in
shll
cmp
call
repz
fucomp
call
adc
push
dec
icebp
loope
mov
stos
mov
ja
jg
dec
sti
scas
and
mov
and
push
push
lret
cmpsb
loopne
out
rol
loope
enter
adc
leave
jns
xchg
lcall
call
mov
clc
push
jge
cmp
popf
lret
push
sub
xlat
sbb
mov
or
ret
call
xchg
nop
std
lods
dec
repnz
fsubs
fidivrl
mov
jecxz
lret
push
inc
push
rcr
jno
pop
decl
inc
xorb
pop
jns
mov
insl
hlt
jmp
and
jns
jg
pop
int3
pop
cmp
fs
cmp
xor
jecxz
dec
movsb
icebp
ljmp
push
stos
fdivrl
inc
stos
mov
push
mov
cld
repz
enter
mov
mov
sub
rorb
outsl
mov
xorb
mov
push
mov
fdivrl
sti
mov
or
mov
jmp
lock
xchg
inc
xor
push
pop
into
pushw
hlt
in
ret
mov
mov
incl
sbb
adc
nop
dec
xorb
das
fidivrl
push
pop
loopne
fnstcw
mov
pushl
jns
add
fs
cwtl
loope
xchg
push
fistpll
inc
insl
sub
xchg
ljmp
jp
pop
push
rolb
mov
push
rolb
stc
and
mov
adc
mov
jge
stc
cmp
popf
cmpsb
jmp
sarb
pushl
mov
jbe
lcall
mov
push
lods
cmp
jg
enter
clc
jno
shlb
js
jb
faddl
into
decl
push
sbb
mov
sbb
xchg
stc
out
mov
fmuls
out
push
call
cmp
sbb
dec
adc
cmc
jbe
push
jg
data16
incl
mov
loop
lret
cld
jne
sub
push
xchg
adc
cmpsl
and
aam
mov
ja
call
subl
aad
cmp
sbb
push
lds
jmp
pusha
cld
pop
mov
pop
iret
mov
xchg
pop
popa
and
not
jg
push
repz
cmp
mov
fadd
stc
cltd
fiaddl
pop
popf
and
inc
xchg
in
repnz
call
sub
adc
ss
add
sbb
or
and
cmp
mov
arpl
incl
pop
push
idiv
fcomi
int3
sub
cmp
aam
dec
jo
leave
push
movsl
inc
cs
lcall
sub
sbb
cltd
jno
cltd
fprem1
ljmp
adc
leave
pop
das
outsb
mov
jmp
cwtl
add
push
repnz
xlat
es
xor
cmp
cmp
in
or
int3
in
mov
repz
jno
inc
pop
mov
adc
bound
cmp
lock
mov
shl
dec
fnstenv
inc
pop
lea
repz
xchg
dec
movsbl
cli
adc
jmp
sti
fcmovnbe
push
or
fwait
add
das
xor
lods
rolb
xchg
and
bound
stos
mov
jg
test
dec
lret
lret
notl
lock
rorb
call
pop
jnp
sub
dec
lahf
shrl
pop
push
and
xor
pop
jmp
mov
insl
or
jnp
inc
int3
lahf
jmp
test
mov
scas
inc
sub
incl
mov
jecxz
or
xchg
cmp
cmovnp
jns
mov
ss
xlat
mov
into
inc
incl
outsb
pop
jp
daa
sbb
push
and
dec
xchg
adc
aam
push
aas
fadds
ljmp
ret
jnp
and
or
mov
outsb
sbb
mov
call
and
mov
jnp
adc
dec
adc
pop
push
xchg
adc
jg
leave
lcall
push
push
cmpsb
cmc
test
scas
loope
jne
std
pop
ja
aad
inc
jbe
jmp
test
pop
ret
or
incl
jg
jne
ds
xor
or
loope
jecxz
icebp
and
stc
ficoms
mov
lock
and
je
mov
push
into
clc
lcall
bound
jne
shr
pop
jg
mov
aas
push
dec
mov
pop
inc
dec
fnstcw
popa
jnp
leave
outsb
adc
fwait
aaa
lock
test
popa
add
jmp
mov
pop
sbb
xchg
addb
sub
and
ljmp
dec
push
push
adc
pop
mov
nop
scas
sbb
cmp
out
add
popa
std
push
sub
inc
dec
adc
imul
orl
pushl
lret
adc
sub
add
dec
mov
pop
loop
sbb
mov
dec
int
push
outsl
pushl
mov
divl
sub
popf
xchg
aam
adc
in
sbb
outsl
push
imul
sbb
ljmp
or
clc
push
nop
stos
pop
in
loopne
fsubs
xor
lcall
loopne
pop
or
orl
xlat
cmp
in
std
in
je
decl
movzwl
add
std
lcall
jo
sub
pop
icebp
scas
ret
or
hlt
fwait
fidivl
int3
cmp
inc
inc
orl
add
sar
ljmp
mulb
add
dec
sub
fsubr
mov
icebp
cmp
xchg
dec
mov
enter
fisttps
pop
sbb
insb
fstps
in
dec
out
pop
lcall
movl
test
adc
jo
adc
cmpsl
cltd
mov
daa
jbe
cwtl
xchg
test
repz
stos
jnp
imul
dec
and
pushl
sub
and
es
xor
shll
inc
movsb
repnz
cmp
lcall
inc
fcomps
out
lret
xchg
cmpsl
jge
sti
aam
add
pusha
imul
dec
jmp
fists
adc
push
xor
incl
loop
jp
add
add
insl
test
push
push
xor
ficoms
test
pop
dec
push
orb
jmp
mov
push
ds
je
jecxz
ljmp
imul
jo
sub
dec
push
iret
jbe
xor
mov
cltd
mov
icebp
call
loope
adc
or
jo
jle
nop
sub
mov
adc
mov
pop
ss
test
mov
outsl
jb
fmull
jne
loopne
call
jb
iret
push
gs
ss
insb
cmc
out
mov
out
inc
aad
lret
lret
push
mov
hlt
lcall
pop
cs
xor
xor
mov
popf
and
call
arpl
xor
sub
loop
outsl
pop
cltd
push
mov
ljmp
sub
scas
popf
or
shrl
jmp
mov
xor
sahf
call
scas
jle
repz
adc
scas
loopne
and
loop
loope
ljmp
lock
xor
repz
mov
in
in
jne
inc
pop
dec
fnsave
pop
mov
ljmp
sbb
pop
lahf
xor
mov
jnp
inc
data16
incl
ljmp
pinsrw
stos
jmp
and
ljmp
jp
add
push
push
scas
cmp
jl
jb
call
icebp
cs
add
js
in
inc
cmpsb
cmp
cmpl
gs
cmp
in
scas
insl
adc
popf
iret
mulb
arpl
mov
pop
add
pop
cli
outsl
cli
lcall
sub
mov
scas
or
hlt
popa
jmp
cmp
sub
sbb
ficompl
push
in
jbe
mov
ret
es
jmp
into
test
in
mov
lds
mov
fwait
xchg
lock
sub
or
jmp
sbb
mov
stc
sub
dec
loopne
lods
sub
data16
movsb
or
inc
decl
jmp
outsl
or
xchg
mov
out
loop
adc
ret
das
xor
decl
dec
mov
or
rcr
add
sbb
call
in
call
push
sbb
fnstsw
imul
shr
ficomps
mov
lahf
icebp
adc
out
popf
mov
lds
and
sub
test
mov
sbb
add
pop
ljmp
out
repnz
mov
lods
ds
andl
mov
sahf
dec
test
dec
sub
repz
clc
xchg
daa
inc
or
popl
outsb
xchg
add
pop
xor
dec
outsb
rcrb
pushf
fwait
xchg
adc
sub
inc
xor
movsb
iret
rcrl
ss
in
movsl
jns
decl
push
shll
push
test
outsl
mov
enter
and
jo
push
gs
adc
es
ss
lcall
lods
insl
mov
loopne
jae
xchg
test
xorl
adc
fcos
jg
push
ret
mov
pushf
sbbl
test
pop
mov
bound
mov
mov
mov
clc
xor
mov
les
xchg
mov
call
in
aam
movsb
addr16
mov
popf
fistl
int
add
ljmp
xchg
das
orl
dec
orb
andb
popa
fnsave
cmpsl
lret
dec
fs
out
lods
in
mov
jmp
sbb
ja
push
in
out
mov
jbe
xlat
ds
arpl
testl
dec
pushl
cmp
pop
insb
pop
nop
rol
adc
jmp
neg
lods
js
cmp
xor
cmp
or
dec
cld
decl
sbb
testl
mov
or
xlat
dec
aad
scas
mov
cmp
popa
js
scas
aaa
cli
jmp
mov
pop
pusha
dec
sahf
test
mov
xchg
mov
mov
shl
jle
xchg
call
loope
lods
sub
dec
pop
xchg
fstpl
cmpsl
rorl
lcall
aaa
fidivrs
idivb
stos
mov
xchg
shll
cld
add
jmp
pop
push
movsl
mov
ljmp
mov
inc
add
push
inc
insb
pop
test
inc
push
int3
fisttps
ss
sbb
mov
stos
sub
push
cmp
lcall
outsb
sub
cltd
in
into
int3
loope
lcall
dec
je
adcl
lds
lret
loopne
lds
push
pop
mov
inc
shrb
lcall
or
inc
lods
daa
dec
jb
jne
mov
or
shrb
sbb
decl
mov
xor
jb
out
sbb
and
out
fldt
stos
fidivs
callw
stc
in
pushf
in
shlb
push
rcll
and
pop
mov
dec
push
and
lcall
fsincos
xchg
jmp
std
push
int3
jmp
les
xor
adc
ljmp
iret
dec
xor
xchg
mov
dec
inc
lea
mov
xorl
incl
movsl
mov
cmp
push
sti
lcall
sub
in
mov
add
mov
adc
imul
stos
addr16
stc
shl
push
aaa
std
jmp
bound
mov
jbe
scas
mov
mov
dec
push
fidivrl
mov
adc
and
loopne
lcall
dec
xchg
inc
cld
push
sbb
mov
sub
aad
sub
orb
clc
incl
mov
adc
out
jnp
insl
pop
stos
add
push
mov
test
push
popa
aam
dec
fldt
pop
fidivl
jmp
pusha
cmp
mov
dec
pop
sub
call
jp
add
sub
ret
lcall
sub
adc
xchg
cmp
sar
inc
add
inc
or
lds
mov
repz
loope
adc
fisttpll
jecxz
ret
incl
mov
dec
es
out
lock
mov
outsb
or
jns
test
lret
push
adc
and
incl
xchg
xor
jnp
dec
stos
ljmp
sbb
sub
pop
fs
stos
and
decl
sub
mov
loope
jnp
ja
add
es
push
ljmp
mov
movsl
cmp
out
add
mov
ret
out
testl
xor
iret
ret
decl
push
ret
les
lock
xchg
shlb
push
outsl
adc
call
outsb
xor
pop
inc
sub
sbb
stos
enter
scas
insl
pop
cwtl
mov
test
ja
jg
cmp
cli
xchg
sti
xchg
jo
les
xlat
sub
pop
stos
jle
cmp
mov
sti
fdivs
je
adc
cwtl
in
adc
into
mov
mov
push
stos
nop
lcall
sbb
cld
mov
cs
adcb
adc
inc
fisttpl
pop
mov
adc
mov
jmp
or
test
outsb
sub
jbe
or
fldcw
pop
or
mov
jge
jmp
sbb
lods
add
sub
mov
and
or
call
cmp
popa
cli
cltd
mov
push
sub
sub
lcall
mov
movsb
lds
sub
xchg
mov
scas
xchg
and
shlb
push
rclb
add
call
jecxz
xchg
mov
mov
test
shrb
lret
push
mov
pop
xchg
scas
shrb
loopne
adc
jg
ljmp
and
jl
xlat
rorb
inc
and
inc
call
aad
hlt
int
sub
pop
pop
hlt
sahf
or
or
loopne
sub
and
jge
arpl
xor
loope
je
lods
es
push
push
xchg
stos
dec
xor
inc
je
jl
or
ret
in
dec
aas
push
aad
aaa
push
and
bound
int
ss
mov
pop
mov
xorb
jmp
xlat
movsl
inc
arpl
mov
loope
mov
sub
mov
je
jae
rcrl
decl
add
insl
xlat
mov
ss
arpl
int
cmp
adc
je
or
imul
dec
rcll
jmp
or
mov
pop
xlat
xor
xchg
cltd
xchg
imul
decl
lock
cmpps
bound
jb
push
or
stos
sbb
jo
dec
sbb
fs
jecxz
sub
out
outsl
mov
jb
cmpsl
sub
and
arpl
gs
out
push
sbb
mov
sbb
bswap
add
addb
ljmp
in
loop
sbb
hlt
cmp
mov
sub
inc
fldcw
sbb
bound
fisubrl
in
xor
jo
push
popa
pop
or
pop
clc
sub
xor
sahf
lahf
movsl
push
jmp
lahf
push
add
cs
inc
add
jecxz
mov
nop
dec
sbb
bound
iret
loop
ljmp
insb
add
je
test
in
sbb
sbb
add
test
in
int
add
idiv
mov
push
pop
add
cmp
inc
repz
imul
inc
movsl
popa
sbb
cmc
fwait
jl
mov
and
orb
das
clc
incl
dec
shlb
adc
mov
lock
pop
inc
cmp
xchg
imulb
fwait
xor
ljmp
mov
or
negb
arpl
out
jmp
sbb
test
ljmp
mov
pop
add
hlt
rcrb
and
jmp
bound
loop
pop
sub
cld
mov
and
jmp
and
push
call
mov
sub
pushl
popf
sbb
and
rcll
cmp
adc
ljmp
adc
fisttpll
out
jmp
xchg
outsb
dec
lcall
js
add
mov
or
popa
jecxz
repnz
push
test
jno
aas
insb
mov
movsl
ljmp
test
pop
xchg
sbb
jmp
add
std
inc
mov
jbe
mov
call
dec
sahf
insb
pusha
add
mov
dec
cs
jbe
sub
jp
jl
jecxz
xchg
mov
mov
dec
fcoms
or
cmp
and
mov
out
cli
pop
jbe
cmp
jb
ds
cmp
mov
pop
fs
xlat
or
add
xchg
or
xorb
daa
popf
inc
jge
jmp
sbb
and
stc
mov
mov
jg
push
and
daa
mov
cmpsl
sbb
pushl
jmp
or
cpuid
cmpsb
inc
mov
into
jb
call
movsl
js
add
push
loop
insl
aaa
mov
xchg
lods
out
icebp
loope
jno
pop
divb
pop
incl
pop
testl
pushf
sbb
icebp
mov
inc
jl
ficoms
pop
pop
test
jns
xor
cmp
cltd
add
cmp
mov
fildll
inc
aas
imul
jno
or
xchg
lret
inc
sbb
cwtl
xchg
repnz
xor
decl
hlt
mov
scas
xor
fsub
or
lret
cli
or
jge
add
pop
hlt
ljmp
and
jb
adc
insl
int3
xor
sbb
fisubrl
hlt
scas
clc
cmp
cs
in
cmpsl
xlat
mov
outsl
in
scas
lret
add
mov
mov
outsb
aam
dec
mov
pop
in
aad
mov
push
sub
xchg
ret
mov
rolb
lret
rcrb
sub
xor
inc
mov
ss
int3
and
imul
out
nop
jbe
incl
pop
lea
sbb
mov
dec
shr
aad
clc
lahf
sbb
dec
and
decl
and
rorb
insl
enter
jbe
movsl
incl
fnstcw
pop
cs
ljmp
dec
lea
out
jno
pop
mov
call
outsl
add
decl
xor
adc
cwtl
xchg
dec
xor
cmp
lea
and
mov
inc
cli
into
fbld
adc
sti
xchg
fisttpll
dec
ficoml
stos
xor
xchg
js,pt
mull
dec
pushf
ret
stos
xchg
enter
hlt
push
out
lahf
and
pop
xor
int
loope
xchg
pop
test
lcall
test
aam
xchg
cmp
cs
and
push
xchg
inc
lcall
incl
ss
cmpl
cmp
mov
jp
mov
xchg
mov
mov
sub
push
xchg
mov
mov
std
pushl
pop
loop
and
incb
in
or
xlat
shll
mov
mov
aas
sub
or
push
inc
call
loope
and
add
imul
incl
in
orl
mov
decl
shlb
fsubrs
pusha
adc
jmp
out
js
insb
icebp
and
jg
lret
dec
fildl
not
fmull
rcll
pop
gs
clc
ljmp
rclb
aam
clc
cmpsl
jmp
cmc
jecxz
stos
fidivrs
inc
fucomip
insl
aam
dec
fwait
adc
call
add
add
dec
fmull
fstpt
push
push
fbstp
test
mov
mov
push
cmp
pop
scas
sub
or
lods
hlt
std
or
mov
push
loop
sbb
call
mov
mov
arpl
jno
pop
leave
stos
jo
sbb
scas
test
movsb
leave
dec
lcall
pop
sbb
pushl
push
inc
negl
cmpsl
mov
push
fmul
leave
dec
push
mov
inc
inc
cmpsl
imul
cmp
call
mov
mov
jl
jmp
push
mov
es
in
gs
call
stc
jnp
add
xor
mov
ficoml
or
mov
dec
insl
call
adc
sub
xchg
mov
xor
imul
loop
adc
fwait
sarb
inc
int3
sar
int3
xor
fsubrl
adc
mov
out
scas
nop
mov
call
push
in
inc
clc
loop
lret
int
fsubl
bound
daa
or
aas
or
decl
mov
jne
shl
imul
movsb
mov
add
mov
dec
push
add
movl
inc
xchg
jo
add
fdivrl
and
jg
jge
out
inc
fsub
push
sub
movsb
movsb
add
jne
outsl
xchg
mov
cmp
mov
in
enter
decl
imul
fcmovu
mov
pop
and
mov
ret
adc
mov
js
hlt
imul
mov
mov
jb
sub
push
insb
aas
mov
mov
outsb
nop
aam
jno
jge
imul
inc
xor
arpl
adc
xchg
mov
incl
mov
mov
xchg
adc
sub
pusha
xchg
xchg
mov
dec
loope
decl
and
inc
sbbb
test
jae
mov
scas
fmul
inc
sti
ljmp
adcb
lcall
stos
xor
pop
adc
xchg
pop
js
pop
ljmp
inc
subb
mov
and
sahf
bound
ficomps
data16
lcall
loop
daa
loop
pop
dec
add
gs
movsb
int
jmp
aad
or
dec
jecxz
insb
add
sub
call
and
adc
in
movl
call
cmp
xchg
adc
jae
mov
sbb
jecxz
jo
add
add
test
lcall
ja
ss
lods
adc
jp
and
sarb
aaa
or
cs
decl
lcall
rcr
mov
dec
aaa
bsf
sub
in
clc
data16
cwtl
bound
ljmp
sahf
inc
pushf
mov
mov
testb
cltd
out
aaa
cmp
in
lcall
enter
mov
add
icebp
mov
xchg
insw
mov
iret
ljmp
mov
pop
cmp
xchg
xor
lcall
jns
xorb
xchg
mov
movb
js
js
cmp
enter
decl
lcall
jle
sti
inc
in
rcrb
call
inc
adc
decl
mov
cmpsb
mov
xor
sti
fstpl
push
aas
inc
addr16
sbb
mov
lret
mov
xchg
mov
mov
ret
mov
and
inc
sbb
sbbl
ja
nop
mov
clc
xlat
pop
cwtl
shrl
pusha
rclb
mov
cmp
call
or
sbb
sarl
fidivl
jno
lret
gs
sbb
lcall
cwtl
xor
xadd
push
shl
out
jae
xor
adc
call
mov
data16
loope
lea
xchg
xchg
notl
mov
mov
movb
cmp
lcall
int
lret
mov
push
dec
mov
pop
hlt
scas
clc
nop
push
lods
scas
push
je
or
scas
sti
or
inc
push
scas
xchg
inc
add
call
mov
sub
jb
mov
mov
bound
xchg
aam
sub
pop
hlt
pop
pop
or
xor
stos
jmp
cld
rorl
jle
jmp
jmp
xor
xchg
jb
cli
das
rcrb
je
mov
test
sbb
xor
sub
push
sahf
or
xchg
daa
add
and
pop
repnz
addl
scas
add
mov
mov
out
pop
aas
out
adc
sub
and
imul
pop
std
lcall
sub
pop
jecxz
or
shr
jg
jg
mov
gs
inc
xor
or
lret
cmp
into
pop
call
iret
inc
mov
jmp
push
ljmp
sbb
inc
repz
xchg
add
push
ljmp
lods
call
fmulp
inc
push
in
mov
dec
push
out
testl
aam
incl
rcrb
push
mov
cmc
or
pop
push
shll
in
dec
sub
sub
jg
aam
out
cmp
jne
xor
cltd
xor
lds
or
fbstp
fsubrl
add
sbb
or
jp
xchg
and
in
dec
aam
push
push
mov
leave
imul
sbb
imul
cli
dec
push
clc
sub
fisttpl
inc
ds
in
push
dec
nop
xchg
mov
aas
clc
dec
ljmp
push
cwtl
ds
mov
leave
mov
ja
jae
inc
loopne
daa
loopne
outsb
movd
pop
push
push
mov
ljmp
in
inc
cmp
and
out
mov
push
pusha
sbb
je
jne
lcall
scas
adc
cmp
xchg
gs
daa
push
and
iret
mov
lcall
jp
xchg
int
stc
popf
ret
fwait
aaa
scas
push
sbb
pop
pop
or
incl
xor
adc
ret
jg
and
adc
jg
repz
out
pop
stos
nop
fistl
mov
xor
das
ljmp
jge
lds
ret
dec
push
mov
shrl
decl
scas
adc
test
clc
jo
xchg
repz
inc
xor
xor
adc
jl
gs
imul
sbb
sub
mov
mov
cmpsl
loopne
fcmovb
fsubrl
out
push
mov
sub
leave
fnstcw
sub
dec
int
and
in
fmuls
dec
adc
lcall
stc
js
loope
les
mov
mov
jno
xchg
sbb
incl
mov
pop
andb
mov
repnz
and
dec
pop
mov
subl
ljmp
sbbb
xor
xor
push
test
add
aad
lods
pop
ds
jecxz
push
imul
jmp
inc
mov
clc
leave
stos
xor
ds
ror
cs
xchg
sar
ljmp
xchg
shll
lods
jae
lods
gs
out
add
pushf
cmpsl
cmp
inc
mov
ret
push
pushf
into
sbb
mov
sub
ljmp
rclb
mov
ror
sub
mov
lahf
adc
mov
pop
jecxz
ljmp
mov
sbb
push
mov
mov
insb
mov
jecxz
in
sub
dec
sub
ret
sahf
aam
jne
cmp
cmp
sub
andl
jmp
mov
dec
or
ja
adc
mov
cmp
inc
out
nop
fnsave
int3
cld
decl
pop
pop
push
push
adc
cld
int3
jnp
or
push
aam
loopne
or
ds
lcall
orb
add
xchg
and
jmp
jnp
loopne
call
out
jge
icebp
xorb
or
pushf
out
sub
fwait
dec
imul
nop
pushl
lret
pop
cli
mov
clc
pop
sbb
mov
push
fcompl
jno
rcll
mov
inc
cmp
es
stos
mov
inc
out
xchg
frstor
pushf
out
repz
lcall
cmp
adc
inc
call
scas
ret
sti
popf
test
push
mov
ljmp
mov
sbb
fwait
popa
js
or
ret
outsl
mov
or
push
incl
decl
mov
pop
pop
scas
push
mov
lahf
cmp
push
jecxz
stos
add
popf
lock
sbb
mov
outsb
outsl
cmp
jecxz
jae
in
mov
out
mov
pop
push
outsl
push
mov
push
cmp
decl
xor
cld
sti
pop
fwait
sete
stc
push
push
shrb
push
lock
ljmp
ret
in
fnstcw
not
xorb
mov
jne
pop
das
and
mov
push
es
fbld
out
cmpsb
hlt
adc
data16
adc
scas
icebp
pushl
aas
cmp
add
mov
nop
mov
adc
add
mov
pushl
fdiv
mov
mov
xor
jb
jne
mov
pop
test
mov
mov
loopne
test
xchg
jle
xor
dec
nop
pop
mov
ds
xchg
cltd
push
dec
es
jmp
ds
adc
faddl
mov
ret
lret
jecxz
pop
sub
sbb
aaa
in
jmp
sub
mov
repnz
sub
fisubl
decl
lret
hlt
es
pop
add
cltd
cmp
gs
cmp
xchg
push
sub
popf
jo
inc
mov
call
push
insl
rcrl
repnz
scas
and
adc
cmp
insb
and
aas
test
fcoml
jl
cs
mov
push
pushl
push
inc
je
andb
jmp
pop
popa
inc
pop
pop
leave
mov
xchg
js
fmulp
and
imul
incl
pushf
xchg
push
jo
leave
pop
in
pushf
cmpb
mov
pop
decl
cltd
adc
aam
das
xchg
xchg
mov
imul
lock
fbld
mov
fldenv
insb
cmp
repnz
in
add
dec
aam
mov
and
pop
ds
dec
call
stos
sub
test
pop
je
divl
pop
and
push
and
out
repz
jb
xchg
std
pop
xlat
xor
incl
aad
xchg
fisubrl
js
fnstcw
xor
js
sbb
sub
test
mov
and
pop
sti
or
ret
in
add
out
ret
fidivl
decl
lock
jne
xor
xchg
push
mov
inc
enter
aad
decl
cld
mov
pushf
rorb
in
rorl
imul
mov
mov
call
in
dec
or
xor
out
repnz
pop
cmp
lds
cld
mov
ljmp
movsl
incl
int
in
sbb
cmpsb
cmc
les
pop
in
dec
xchg
jle
fs
mov
xlat
inc
adc
adc
incl
cld
pushl
aad
xchg
test
mov
gs
repnz
push
rcr
out
lds
lahf
lock
out
loopne
pop
sub
addr16
cld
jne
mov
gs
int
ficomps
lcall
mov
inc
pusha
out
imul
fdivrl
mov
adc
into
lret
xor
pushl
in
mov
jno
xchg
negl
into
das
arpl
xchg
call
test
mov
lcall
out
jle
inc
adcl
xchg
pop
jnp
sbb
or
decl
jg
push
dec
pop
mov
jno
xchg
mov
xchg
push
xchg
add
jg
mov
push
xor
pop
mov
popa
xchg
and
mov
mov
adc
stos
rorl
xchg
dec
pop
inc
sbb
pop
es
inc
adc
lcall
sti
sub
int3
jne
es
scas
xor
scas
into
mov
cld
aad
pop
rolb
lcall
ss
cmp
rol
jecxz
adc
jns
in
icebp
idiv
decl
cs
mov
and
out
mov
push
movsb
or
mov
jne
add
fsubl
mov
xchg
mov
xchg
pop
data16
mov
push
and
push
jmp
pop
vcvtpd2psx
outsb
add
mov
adc
lock
clc
scas
test
xchg
notl
pop
jno
cmpsb
push
cmp
push
adc
jmp
fs
sub
mov
push
pop
sub
dec
xor
mov
icebp
sbb
popf
dec
xlat
jmp
or
call
clc
sarl
dec
jae
cmp
adc
sahf
mov
lret
leave
inc
enter
rorl
sti
add
mov
mov
lret
mov
stos
jmp
xchg
sbb
call
loopne
sar
mov
mov
pop
sbb
add
lods
sbb
call
aad
add
jb
lods
mov
jg
push
xor
dec
stos
cwtl
cmpsb
pop
movsb
inc
dec
sti
call
loopne
dec
mov
adc
add
jo
pop
pop
push
insl
xchg
mov
movsl
pop
movl
push
inc
lea
pop
mov
and
add
mov
es
cwtl
cltd
jg
imul
lcall
and
js
lcall
es
dec
sbb
repnz
mov
pusha
xchg
inc
lahf
jle
sub
ficoml
dec
mov
and
into
mov
test
pop
xor
lret
jne
rclb
adc
lcall
pop
cmp
fwait
test
jnp
aam
sub
mov
fistl
mov
stos
inc
jno
pop
decl
inc
repnz
xor
push
sub
mov
test
sbb
loop
loopne
insl
dec
aam
incl
les
ficoms
dec
lahf
mov
aad
jns
mov
jge
adc
insl
xchg
adc
mov
sbb
mov
out
jle
mov
repz
fistpll
jp
fbld
dec
jge
mov
or
xor
incl
xchg
xchg
mov
fcmovne
mov
lea
lds
xchg
out
dec
lock
test
cmp
lcall
lock
xor
out
lods
xchg
mov
add
cmp
jecxz
addr16
decl
fdivrl
shrb
ret
fisttps
into
jl
repz
jmp
sbb
add
nop
xchg
sub
push
push
dec
roll
shl
ljmp
push
cmp
mov
cmp
mov
jo
pop
mov
aas
scas
incl
jmp
idivb
pusha
push
dec
jl
jb
mov
into
pushf
lahf
cmp
stos
jg
jmp
cmp
jb
cmp
xchg
add
inc
mov
pusha
fisubrs
pop
fldenv
pushl
push
test
pop
scas
sbb
jmp
js
mov
inc
ljmp
fistl
inc
inc
int
in
push
or
and
sbb
jg
dec
push
push
mov
push
and
add
pop
jo
test
fisubrs
call
divl
or
fwait
push
in
sahf
xchg
ds
scas
loopne
xor
pushf
arpl
mov
jns
ljmp
psubw
scas
sbb
call
pop
aas
dec
dec
jae
fdivs
push
scas
fcomip
and
inc
ret
mov
int3
pop
sub
mov
inc
aam
test
mov
scas
stos
scas
add
pop
cmc
incb
fdivl
lds
sbb
xchg
popl
cmp
or
push
jp
stos
loopne
mov
insb
les
shrl
dec
pusha
xor
lret
cltd
mov
or
cmp
mull
subb
adc
popf
mov
mov
sub
mov
and
mov
xor
fs
push
cmpsl
and
es
cltd
cli
movsb
cmpsb
sti
cmp
mov
scas
nop
mov
mov
jg
decl
cltd
xor
sub
stos
push
push
mov
repz
out
stc
movsb
push
test
lret
decl
roll
xlat
inc
pop
inc
cmpsb
jp
outsb
sub
insb
inc
shlb
movsl
jmp
mov
dec
mov
loope
cmp
enter
mov
in
in
inc
popa
mov
sahf
gs
mov
mov
out
mov
idivb
lods
push
push
push
and
sbb
call
call
call
punpckhwd
cmpsl
test
inc
faddl
adc
add
and
dec
into
in
sbb
sbb
jns
imul
inc
xchg
fisubrl
sub
imul
int
cwtl
sub
popl
jmp
out
cmpsl
sub
sarb
shlb
cmp
cltd
mov
ja
fwait
xchg
pushl
hlt
pop
loope
and
cmp
aas
pop
imul
cmp
outsl
pop
dec
push
adc
mov
pusha
mov
xchg
adcl
shll
stos
mov
shlb
inc
in
movsb
out
stos
adc
pop
mov
movb
add
lods
popa
jno
aas
jbe
movsb
dec
fwait
jmp
sub
pop
mov
and
dec
sub
jle
outsl
loope
cmpsl
pushl
aas
out
and
loope
fmulp
inc
xchg
push
sbb
dec
mov
popa
or
fnstsw
int
jbe
pop
sub
push
inc
mov
pop
dec
int3
in
cmp
xchg
mov
add
call
sub
push
lea
int3
out
xlat
inc
or
push
add
scas
jge
out
cmpb
iret
or
lcall
jno
out
add
mov
jp
xor
fdivs
or
jmp
ljmp
or
js
movsl
adc
in
mov
fisubs
and
ljmp
sub
pusha
js
ficompl
push
fmuls
ja
jp
aam
neg
add
js
fistpll
mov
and
loopne
xchg
mov
mov
bound
inc
outsl
arpl
inc
add
mov
xor
aad
mov
inc
pushl
std
fisttpll
cmc
jge
insl
inc
pusha
das
les
popf
add
scas
xor
enter
ss
mov
pushl
mov
aas
add
std
dec
lahf
flds
xor
jb
dec
mov
in
xor
mov
fwait
and
push
xchg
push
add
cmp
ds
mov
pop
dec
mov
push
into
mov
or
push
or
shll
ss
xor
repz
pushl
push
cmpb
bound
mov
or
mov
dec
aam
pop
data16
pop
inc
add
jg
jp
in
dec
inc
xor
fwait
pop
addl
dec
aas
jmp
push
sub
fdivp
mov
mov
or
or
ret
testl
xorb
das
movsl
subl
dec
mov
pop
pop
cmpl
ds
js
jmp
pop
sub
sub
jg
ret
sub
mov
mov
aaa
movsl
fists
sbb
jg
ficompl
movl
adc
adcb
lock
ljmp
scas
adc
push
data16
jg
inc
dec
push
les
xor
andl
or
mov
add
lea
mov
push
jns
push
cli
inc
dec
fdivp
sbb
pushl
and
sbb
cmp
or
jne
jg
test
rcll
fld
xchg
jmp
add
mov
daa
cwtl
push
mov
imul
push
pop
xor
idiv
cmp
sti
iret
inc
xor
outsb
and
in
dec
cmp
leave
push
sbb
jg
fistps
xchg
loope
cs
insb
pop
pop
leave
cmp
cmp
das
cli
pushl
adc
or
mov
dec
mov
and
imul
xor
or
fcmovnb
mov
int
and
bound
pop
cld
jg
or
jb
iret
xchg
adc
sub
push
jbe
mov
out
sbb
pushl
dec
pushf
imulb
movsl
aam
inc
cmp
add
add
ljmp
jne
test
into
outsb
jp
cld
mov
test
rclb
sub
cmp
pushl
xchg
int
stos
in
orl
cmp
ljmp
hlt
aas
mov
imul
js
jo
dec
jnp
test
jle
dec
jecxz
or
pushl
rcrb
cmpsb
push
push
add
mov
mov
lock
pop
pop
pop
jo
int
ljmp
ret
xchg
xchg
cmpb
popf
int
and
mov
cmp
cmp
test
out
inc
test
cmp
movsb
fisubs
pop
jp
jnp
in
sbb
jl
pop
cmp
lahf
shlb
decl
sub
aas
add
adc
xchg
pop
xlat
fistpll
repz
cmp
in
subl
movsl
pop
pop
movsl
or
lahf
xchg
push
test
outsb
xorl
rcr
xlat
sub
xor
cmp
cmp
inc
lods
rep
fstpl
out
pop
cmp
add
hlt
jmp
mov
or
cmpsb
jg
mov
push
cltd
jp
fs
lds
test
clc
decl
rclb
lret
ja
movsl
cmp
insb
cmpsb
frstor
push
ljmp
out
lods
dec
jno
test
das
jge
push
dec
out
mov
add
xchg
out
dec
loop
aaa
xor
sub
call
cld
imul
mov
notl
pop
fs
test
dec
and
imul
jge
jne
std
inc
and
cmp
cs
repz
aas
enter
fmul
inc
or
sbb
jecxz
loopne
movsb
cli
push
lods
cs
inc
xlat
xchg
or
mov
stos
js
stos
xlat
mov
stos
jp
orb
sar
pop
cmc
inc
cmpsb
pop
pop
daa
pop
movsl
adc
push
add
inc
idiv
decl
mov
xchg
jno
xchg
pop
add
mov
inc
call
and
int3
lret
call
notl
or
sub
out
push
push
mov
out
mov
pop
mov
cs
outsl
mov
lahf
sub
lcall
push
dec
and
dec
jl
test
call
jge
sub
dec
adc
xchg
push
jnp
mov
push
mov
mov
add
jns
mov
and
add
movsb
ja
push
ds
out
xchg
jnp
pop
sti
fwait
out
dec
sbb
mov
mov
hlt
mul
dec
jnp
pop
xchg
hlt
insl
mov
sub
xor
push
neg
cli
insb
and
pop
sbb
mov
add
push
jnp
imul
out
in
push
add
xchg
nop
xchg
addr16
mov
cmp
ja
lcall
xchg
xchg
pop
test
adc
jmp
in
mov
push
orl
xchg
fs
imul
stos
add
inc
iret
xor
pop
call
cld
jmp
xchg
xchg
dec
adc
dec
inc
lods
pushf
add
pop
mov
stos
test
incl
jns
push
jecxz
call
xor
out
in
loop
xor
movsl
inc
adc
push
xchg
sbb
fs
jp
ret
dec
idiv
sbb
pop
inc
insb
sub
pmuludq
ja
call
sub
adc
or
mov
mov
sub
incl
jl
faddp
fistpl
stos
mov
stos
outsb
aaa
jbe
adc
dec
call
aad
addr16
movsb
sar
jg
cmc
and
fsubrs
into
out
test
jmp
add
push
sbb
mov
adc
icebp
bnd
sub
std
mov
mov
popa
inc
divb
scas
loopne
xorl
and
adc
dec
sub
sub
cmpsl
lock
data16
jne
jl
int3
or
lods
mul
dec
mov
stc
mov
icebp
scas
sub
or
and
sub
rorl
loopne
sub
xor
nop
sub
lcall
pusha
jle
insl
cmc
dec
rolb
test
sub
pop
iret
dec
shrl
sbb
mov
mov
hlt
bound
int3
add
ds
aam
xchg
inc
loope
push
sahf
subl
inc
jle
mov
mov
imul
mov
decl
sub
or
dec
ljmp
loop
dec
jg
sbb
jl
xchg
add
inc
fistpll
pushl
popl
pusha
test
cltd
loope
popa
inc
adc
jb
into
cmp
pushl
ret
sbbb
adc
dec
movsl
lea
loop
sbb
xchg
int3
adc
add
aaa
notb
ds
mov
lods
fcoml
aas
xor
dec
fwait
es
decl
add
xor
pop
or
add
addl
ror
jae
js
xchg
and
add
aaa
cld
sub
add
jmp
pop
in
lahf
fistl
std
fdivp
notb
es
fsubl
test
push
adc
mov
or
mov
rcll
test
sbb
sbb
xor
out
aaa
or
stos
call
js
and
je
aas
mov
das
fsubrl
daa
test
cmpsb
incl
sbb
push
repnz
cmc
sbbl
out
lcall
push
std
mov
jnp
fwait
add
in
or
sbb
mov
mov
mov
ret
ror
test
cmpsb
scas
cmp
call
fsubrl
pop
scas
cltd
das
jae
add
and
xlat
les
sar
jg
mov
aam
mov
pop
xchg
lods
xchg
out
inc
int
push
repz
pop
cltd
cmp
insl
decl
dec
mov
mov
xchg
das
arpl
push
adc
call
out
scas
jnp
xchg
push
test
ljmp
mov
pop
xchg
stos
ret
pop
dec
aam
sarl
jno
and
add
jg
test
and
hlt
sbb
push
aaa
mov
hlt
nop
sti
sub
xor
or
pop
call
cmp
mov
or
pop
mov
pop
sar
imul
mov
mov
lret
les
fdivl
mov
jl
lods
lahf
mov
jmp
sub
sti
popf
fldcw
sbb
xchg
cmp
mov
repz
aam
sub
or
incl
pusha
inc
mov
or
xchg
rcr
xchg
mov
xchg
rorl
mov
mov
jg
lcall
xchg
sbb
ret
das
sbb
xchg
pop
mov
adc
decl
stc
adc
aaa
in
negb
push
inc
mov
pop
pop
filds
in
push
lcall
mov
jmp
test
shlb
mov
push
sbb
jp
xchg
push
dec
pop
sbb
mov
adc
push
leave
xor
xor
shlb
add
flds
xor
mov
mov
call
repz
daa
or
xchg
stc
push
jge
pop
pop
and
decl
lods
jmp
int
inc
out
cmpsb
sbbl
xchg
push
xchg
mov
cmp
outsl
mov
sbb
repnz
incl
negl
mov
and
fistpl
jnp
mov
lds
or
or
into
sub
dec
pusha
jno
std
dec
les
fwait
push
aam
out
adc
mov
dec
lcall
or
xor
mov
ficoms
frstor
ret
inc
test
and
adc
mov
std
mov
adc
adc
mull
cmpsb
pop
pop
cli
mov
sbb
mov
or
les
decl
test
inc
jbe
adc
jp
adc
mov
push
cmp
mov
sub
fdiv
jmp
pop
xchg
mov
mov
lea
shlb
jg
ljmp
or
call
add
sarb
mul
mov
lods
popa
xor
mov
call
pushw
push
mov
sahf
xor
cmp
mov
subl
inc
mov
arpl
mov
mov
sub
shrb
xchg
sub
incl
jo
or
loop
add
lock
jbe
fcoms
ljmp
ljmp
push
cld
sti
sub
cwtl
or
popl
ljmp
fsubrs
pop
movsl
adc
mov
jns
ss
ljmp
xchg
pop
jns
call
cld
fwait
mov
push
push
fstp
dec
test
icebp
cmc
push
pop
xchg
call
jmp
addl
sbb
popa
sbb
jge
out
fists
mov
dec
dec
call
adc
decl
pop
sub
mov
leave
push
and
xlat
outsb
addr16
orb
pushl
push
test
das
shl
aas
push
adc
loopne
dec
cmp
adc
decl
add
inc
inc
mov
shlb
leave
push
hlt
pop
dec
cmp
int3
lret
mov
inc
xor
and
incl
pusha
cmp
testl
inc
arpl
push
and
lods
outsb
pop
in
push
cld
cli
push
loop
cmc
inc
movsb
adc
mov
scas
out
fnstcw
out
std
stos
push
fldt
sub
repz
cmp
xorb
cwtl
out
mov
and
adc
cmp
movzbl
cwtl
mov
movsb
xor
mov
mov
xlat
cmp
js
adc
push
dec
aas
jno
bound
or
mov
push
je
push
dec
into
call
movsl
jb
imul
add
fmulp
mov
push
xor
add
stc
mov
mov
mov
xor
adc
imul
and
push
lcall
insb
outsl
clc
jmp
aas
cmpsl
cmpb
adc
loop
and
cmpl
mov
jb
add
icebp
aam
jmp
mov
mov
mov
gs
mov
ss
xchg
icebp
adc
or
hlt
pop
xchg
pop
inc
and
fisubs
mov
ljmp
or
pop
push
dec
outsb
add
add
scas
daa
fistpl
pop
and
hlt
inc
imul
ljmp
mov
stc
lahf
mov
in
sbb
cmp
mov
jb
fildll
xchg
imul
decl
hlt
testb
imul
mov
aas
push
cmovno
jns
pushl
or
sbb
in
mov
popf
cmp
fs
aaa
rorl
xchg
inc
outsb
mov
mov
repnz
call
sbb
lock
xchg
xchg
lods
inc
lods
push
sub
fldcw
inc
incl
xchg
js
pop
clc
mov
pop
jge
xor
dec
shl
or
inc
dec
adc
jnp
testb
inc
fnsave
jle
mov
dec
ds
cltd
fnstenv
push
pop
and
gs
cmp
scas
subb
js
xchg
mov
jg
sbb
sbb
add
mov
out
ljmp
sub
ljmp
inc
das
xchg
test
fcompl
jo
mov
inc
pop
mov
add
mov
mov
cmpsb
cld
jmp
jmp
lahf
cmpsl
sbb
lock
scas
add
jbe
cmc
int
xchg
arpl
lock
fs
out
mov
aaa
shlb
adc
xchg
mov
cld
jbe
xchg
call
inc
outsl
aad
xchg
insb
hlt
movsb
pop
cmp
pop
rol
mov
dec
xchg
push
lea
lahf
inc
inc
ljmp
cmp
cmp
or
mov
enter
mov
lods
out
bound
xor
sar
incl
cmp
dec
dec
mov
fadd
mov
mov
orl
das
adc
mov
xchg
mov
sahf
hlt
gs
or
orb
dec
js
call
dec
cmp
jg
or
xchg
andb
call
incl
repnz
xor
add
pop
test
shr
dec
mov
sbbl
inc
dec
test
out
or
adc
mov
mov
jns
popa
dec
or
lcall
dec
push
add
pushf
sbb
adc
clc
call
popa
addr16
bound
mov
bound
adc
cmp
mov
cs
adc
adc
inc
iret
pop
dec
xchg
xchg
scas
cmp
cmp
push
fmull
aaa
pop
lahf
dec
repz
inc
add
dec
es
mov
and
cmc
add
pop
cmp
jl
inc
ljmp
into
xchg
icebp
mov
jecxz
pop
movl
cwtl
dec
ja
jge
mov
lcall
or
orb
xchg
cmp
addl
decl
andb
loop
shll
push
pop
pop
mov
movsb
jmp
dec
icebp
ljmp
sbb
xor
or
sbb
push
inc
pop
sub
test
dec
xor
ljmp
xchg
jecxz
sbb
cwtl
lahf
mov
out
mov
cld
add
jmp
cs
das
dec
add
push
inc
mov
lock
add
inc
sbbl
scas
push
sar
outsb
add
stos
cmpsl
sub
loopne
mov
sub
cmc
decl
decb
daa
pop
mul
test
in
inc
cmp
mov
loope
adc
push
dec
rep
jg
stc
mov
in
jno
jno
data16
or
cltd
inc
or
push
fcomps
jne
popf
mov
jne
push
lahf
clc
out
iret
popf
test
rcr
inc
push
push
mov
loop
xchg
cmc
iret
xor
decl
jne
pop
bound
adc
mov
nop
mov
mov
push
pop
adc
or
arpl
cmp
insl
incl
aas
sbbb
xchg
jb
fcmovb
test
movsb
shlb
pop
mov
push
nop
pusha
mov
inc
add
ret
sbb
xchg
dec
sbb
cmp
aas
add
cwtl
rcl
push
jp
dec
je
and
dec
cmpsb
mov
in
aas
jae
xchg
push
cmp
mov
jns
push
inc
popf
dec
clc
stos
sub
pop
fbstp
pop
out
decl
xchg
ja
sti
and
sbb
pop
scas
bound
in
fs
filds
cmp
add
cmp
xor
in
test
add
mov
cs
mov
dec
ja
incl
jge
xchg
pop
in
and
jl
and
add
insb
lods
rcrl
call
ret
in
xchg
or
push
lock
out
bound
mov
repnz
sub
jb
pop
mov
or
cmp
mov
cltd
shr
pop
scas
or
xor
jmp
push
xchg
imul
or
lods
push
mov
adc
out
insb
scas
jno
seta
cmp
inc
test
lahf
and
fmull
addb
cwtl
pop
stos
push
icebp
jg
imul
ds
ficoms
xchg
stc
mov
std
inc
push
test
cmp
stos
xor
ljmp
mov
gs
jle
cltd
cmc
fsubrl
jae
jne
push
bnd
push
fdivr
jmp
loope
jb
mov
inc
push
dec
add
leave
je
cmpsl
xchg
cmp
push
cltd
iret
and
popa
mov
aas
aaa
xor
and
and
shlb
inc
dec
adc
in
push
lret
xorb
rorl
adc
add
push
mov
jo
mov
jl
mov
xlat
out
mov
lods
pushf
mov
das
add
pusha
idivb
or
adc
dec
cmc
call
aaa
pop
push
xchg
aas
push
pop
rorl
jnp
int
mov
incl
push
xchg
rcrb
pushw
popf
jmp
add
fsubl
push
pop
lcall
jmp
fnstsw
dec
push
ficompl
les
mov
decl
pop
mov
dec
fcomp
aas
or
cs
xchg
push
sub
lcall
pop
fcomps
ljmp
jo
pop
push
adc
xor
jg
xchg
or
jg
xor
add
out
sti
or
les
les
cld
jmp
call
mov
outsl
repz
leave
sub
jmp
lods
js
mov
ljmp
insl
xor
out
sbb
xor
lods
loopne
imul
lcall
mov
lods
or
loopne
pushf
shrl
imul
gs
adc
incl
inc
jl
add
sbb
pop
fs
and
push
or
ret
ss
inc
dec
dec
shrl
lds
test
adc
adcl
xor
decl
aas
mov
call
cmpsl
fstsw
or
add
xor
test
pusha
test
lcall
enter
cmp
xlat
nop
lahf
add
jb
lea
ret
pop
jle
ljmp
push
jne
and
lds
jae
or
pop
lcall
inc
pushl
mov
leave
dec
jg
mov
xchg
xchg
into
loopne
adc
sbb
cmp
sub
incl
inc
dec
adc
push
cltd
adcb
pop
jg
dec
mov
xchg
push
mov
decl
popa
sub
cmp
cltd
and
movsb
test
icebp
out
pushl
dec
out
and
leave
mov
adc
pop
sti
push
xchg
dec
dec
iret
fwait
and
movsl
jmp
lcall
jne
push
bound
out
pop
xchg
dec
lret
mov
lahf
xchg
or
ljmp
xor
call
jbe
sub
popa
sbb
dec
xchg
xchg
add
xchg
pop
ljmp
xor
add
test
outsl
sahf
clc
cwtl
push
pop
sub
fldl
pop
icebp
xor
outsb
mov
gs
sub
push
out
xchg
jge
ljmp
jmp
nop
cmc
ja
hlt
add
pop
mov
out
jno
and
cmc
jns
aam
jge
lods
call
jmp
stos
shl
sti
adc
xlat
lea
int3
subl
or
dec
jg
mov
sub
sub
adc
xor
xchg
jns
dec
xorl
incl
fdivrl
jo
pop
std
xor
push
push
out
mov
fs
fsubrl
mov
incl
mov
mov
sub
ss
sbb
lods
das
mov
push
jmp
sarl
push
imul
or
or
sarb
stc
sahf
lahf
cmp
dec
loop
aam
lea
jle
call
xor
mov
cmp
sub
cmpb
fs
inc
pusha
push
lea
gs
inc
dec
dec
xor
mov
inc
cmpsl
daa
scas
mov
pushf
xchg
sbb
jnp
pop
movsl
xor
dec
std
incl
sub
negb
mov
jmp
dec
inc
mov
mov
pop
call
or
in
or
incl
movsb
cmp
inc
loop
stc
int3
sub
addl
jg
leave
and
andl
push
and
shll
mov
mov
pop
das
pushl
jns
push
jo
cli
push
add
mov
test
cmp
mov
jmp
aaa
inc
loope
and
mull
test
sub
test
fidivrs
and
sbb
push
cld
mov
js
popf
cmpsb
sbb
inc
jg
inc
dec
imul
mov
call
pop
outsb
inc
loopne
lea
push
jbe
pop
lcall
fs
pusha
pop
inc
mov
mov
adc
cltd
mov
push
inc
jo
in
mov
incl
and
insl
sbb
jb
mov
outsb
iret
enter
test
loop
and
fistpll
jle
cmp
mov
faddl
jmp
movsl
and
or
mov
icebp
cmp
inc
ret
gs
in
btc
mov
lcall
jmp
pop
cltd
aad
or
ret
int3
jmp
rcrl
stc
in
jns
incl
fildll
mov
dec
aaa
fisubl
fistps
xor
jmp
or
aas
jns
out
xorb
lret
adc
jmp
into
enter
add
mov
in
xchg
fsubrs
aas
fwait
jnp
out
sbb
out
es
fildl
call
pop
enter
or
scas
outsl
cmpsb
push
xchg
insb
inc
sarl
sub
test
pushf
jg
js
dec
xor
mov
imul
mov
fidivl
data16
call
rcr
stos
pop
lahf
mov
xor
add
mov
shr
lds
ljmp
es
cli
push
mov
pop
testb
xchg
pop
mov
mov
cmp
dec
sub
mov
das
incb
out
movsb
mov
pop
jo
jmp
jmp
ret
pop
hlt
inc
mov
sub
mov
cmpsl
inc
pop
ficomps
fucomp
mov
subb
cli
decl
orl
mov
inc
test
rcll
jmp
roll
ljmp
cld
das
jne
out
hlt
lds
mov
dec
add
js
push
lret
mov
mulb
xor
mov
xor
push
jl
outsl
xchg
inc
push
aam
jns
dec
add
int
or
pop
dec
adc
sbb
hlt
or
push
testb
mov
lcall
push
test
gs
rcll
sub
xor
stos
ds
pop
and
push
xchg
xchg
and
jl
xor
test
fadds
mov
movsl
or
incl
sub
jl
stc
push
mov
scas
repnz
fs
dec
add
sti
inc
fdiv
ret
fs
lcall
cltd
mov
jnp
movsl
rcrl
ficoms
sbbb
mov
fimull
addr16
push
out
sub
xlat
inc
xchg
mov
and
cmp
push
xor
dec
scas
push
mov
cld
decl
lea
cs
mov
cwtl
mov
ret
mov
pushl
bound
mov
les
movsb
loope
xlat
daa
lods
push
mov
inc
addl
jmp
and
out
ret
test
add
and
addb
cltd
sub
cmp
pop
dec
out
in
lcall
nop
or
cli
out
mulb
scas
ljmp
cltd
xchg
mov
repnz
mov
push
pop
loopne
push
scas
cmpsb
sahf
hlt
call
lcall
gs
and
pop
imul
dec
in
test
insb
aad
incl
push
lahf
and
jbe
test
mov
cmp
cwtl
clc
jmp
lock
jmp
mov
out
fsubs
lret
mov
pop
jl
push
adc
mov
pop
jp
lcall
mov
cmp
mov
rcll
fld
fmuls
mov
int
sahf
or
jmp
jg
fsubrs
add
js
iretw
xor
and
lods
inc
mov
fcomip
in
aad
inc
mov
sub
pop
mov
clc
push
and
dec
inc
inc
lcall
push
push
popf
cmp
mov
sbb
sub
cld
and
inc
mov
leave
mov
xchg
pop
push
int
jmp
test
pop
ljmp
clc
je
data16
mov
ja
mov
cmp
es
dec
jne
cmpsl
out
adc
dec
js
jg
imul
and
mov
jp
shl
jg
mov
shrb
int3
imul
and
mov
gs
inc
xchg
incl
jp
mov
jne
mov
mov
das
out
or
outsl
pop
shll
jns
push
mov
notb
jns
aas
xchg
dec
and
jle
shll
jg
xorl
cmp
dec
scas
inc
dec
loope
jne
mov
incl
mov
inc
mov
xor
out
scas
jno
loop
add
dec
mov
add
push
sub
lahf
and
mov
enter
ret
adcl
sub
push
fstpt
scas
push
mov
pushl
push
and
mov
lock
test
sahf
int
adc
push
jmp
jmp
xor
mov
mov
jp
cmp
out
push
das
dec
outsb
cmpsl
push
mov
sbb
fmuls
je
insb
outsb
leave
mov
xor
pushf
call
xorb
push
sub
sub
pop
cmpsb
decl
mov
jb
aaa
mov
adc
pushf
jne
adcl
cmpsb
icebp
outsb
sub
hlt
ds
aam
jnp
pushf
stc
lods
sti
in
lret
dec
fdivl
add
mov
mov
pop
dec
je
fistps
add
lret
add
clc
mov
mov
sbb
xchg
stc
push
pushl
xor
mov
pop
or
cmp
or
dec
lods
jl
cmp
filds
inc
adc
dec
inc
pop
dec
push
loop
xor
test
and
pop
fisubrs
divl
push
lcall
cltd
lret
add
or
xor
ret
xor
sbb
in
sbb
pusha
or
es
fwait
popa
cmc
pop
dec
scas
repz
pop
jp
inc
pushf
lea
mov
fwait
cmp
cmpsl
push
dec
or
sbb
inc
in
or
scas
jae
sbb
decl
push
dec
jle
les
in
dec
dec
xchg
pop
mov
popa
scas
cmp
sbb
clc
notb
sub
decl
test
cltd
xorb
cmp
subl
lock
neg
mov
rclb
cmp
mov
pushl
xchg
ja
vmread
or
ret
push
mov
push
mov
jp
dec
adc
aas
pop
arpl
inc
jmp
jns
fdivrs
repnz
sub
inc
into
cmp
shlb
mov
pop
fmull
lcall
xlat
arpl
sbb
pop
xchg
scas
in
jns
push
mov
adc
add
push
lods
jle
call
jno
pop
out
adc
lea
ljmp
fdivrp
ljmp
shl
je
cwtl
sbb
iret
sub
fldcw
xchg
ljmp
stos
jg
mov
fdivl
pusha
shll
flds
mov
in
cmp
xor
decl
jp
xor
call
mov
cmc
sub
imul
dec
xchg
call
imul
sbb
inc
xor
daa
aam
fidivl
push
int
jmp
loope
jge
push
inc
or
sarl
gs
sbb
mov
je
pushl
mov
mov
jp
push
insl
cmp
sub
jp
jo
out
inc
mov
xor
daa
repnz
dec
cmpsb
ja
and
lock
jge
out
mov
jae
call
ja
int
or
push
push
and
lods
and
out
and
cmp
out
cli
xor
cli
call
pop
in
frstor
cli
and
aaa
cmp
ss
inc
loop
imul
mov
jne
insl
movsb
jnp
stos
aaa
xor
fdivrl
sar
lahf
int
cmpsl
or
fcompl
cmp
out
and
ljmp
clc
mov
sbb
sbb
jp
fs
aad
jle
xor
sahf
lods
aaa
icebp
jle
fbld
push
gs
pop
push
mov
or
divl
inc
fadd
insb
fbld
lea
pushl
mov
int3
adc
out
dec
leave
add
loopne
fsubl
pop
and
jmp
mov
push
pop
bound
push
aaa
ljmp
cmpsb
incl
sahf
arpl
or
lahf
cmp
xor
sub
aas
jl
dec
in
pushl
movsb
std
mov
sbb
les
fwait
imul
xor
sar
lcall
and
push
subl
ret
loopne
popa
lcall
cli
cwtl
loop
pushl
test
clc
into
sti
and
frstor
scas
xchg
stos
mov
cmp
or
mov
pushl
sub
push
sti
and
loope
xchg
icebp
loope
push
pop
jae
jo
cmc
arpl
jg
orb
shlw
lods
jnp
fisubs
sub
lret
fwait
nop
pop
icebp
inc
push
stos
ljmp
sub
xchg
or
mov
and
or
decl
inc
popf
dec
hlt
or
xor
mov
sbb
mov
ljmp
insl
xlat
pop
inc
jns
cmp
mov
mov
ret
je
jo
mov
jmp
outsl
ljmp
fimull
mov
in
dec
adc
daa
loopne
cmp
lcall
stos
xor
pop
sarb
popa
push
sub
mov
fwait
je
or
or
call
or
addb
pop
jmp
dec
add
push
inc
movb
cli
orb
lds
lods
xor
xlat
sbb
decl
cmp
lock
inc
dec
idivb
out
and
insb
test
inc
hlt
test
test
lods
inc
add
aas
and
add
lods
jle
addr16
jp
in
roll
scas
call
mov
inc
lock
push
xor
in
les
fstpl
lcall
sub
cld
cmpsl
sub
jle
cmpsl
jp
cmpsb
or
mov
add
cmp
xchg
decl
sarl
stos
dec
mov
add
pushf
cmp
aaa
lock
xchg
push
test
push
jnp
clc
push
inc
icebp
jg
inc
inc
rcrb
icebp
xlat
scas
push
adc
push
pop
inc
stos
pop
ljmp
rclb
pop
enter
ret
push
pop
repnz
incl
mov
outsb
data16
lods
cmp
outsl
or
sub
jg
add
icebp
push
mov
fwait
insl
ja
icebp
cmc
imul
insb
xor
adc
pop
jg
adc
clc
jle
mov
movsb
jg
mov
fadds
inc
je
fstps
daa
xor
jb
mov
ja
mov
out
mov
mull
clc
or
jg
aaa
mov
loopne
les
cmpsl
dec
and
out
xchg
loope
xchg
fdiv
nop
je
mov
outsl
dec
xchg
aad
jne
sti
push
pop
daa
mov
mov
std
pop
xor
xor
mull
sub
popa
jmp
push
lcall
xchg
mov
scas
loopne
dec
fstl
add
push
fldl
push
es
or
imul
cmp
ljmp
xlat
int
mov
aad
jne
into
pop
jbe
cmp
inc
filds
pushl
push
loop
addr16
mov
cmp
xchg
xchg
push
inc
jmp
movb
call
xchg
lahf
stos
xlat
xchg
adc
xor
pop
mov
or
mov
js
jbe
inc
dec
outsb
test
lcall
and
push
cmpsb
fs
movsl
movsl
push
lret
cld
jg
cmp
nop
xchg
and
incl
aas
push
hlt
add
roll
adc
fldcw
fwait
movb
xchg
lret
cmpsb
jmp
push
test
xchg
inc
inc
push
mov
cmc
repz
xchg
mov
test
imul
cmp
add
pop
push
incl
mov
mov
mov
fildll
aam
subb
xchg
mov
jmp
add
in
cmc
jg
movsb
addr16
sub
clc
mov
lahf
jmp
enter
push
lods
mov
xor
test
lret
jg
or
popf
jmp
sar
decl
faddp
loop
sbb
rcrb
js
fcmovne
leave
aaa
lcall
call
jb
mov
scas
in
and
add
dec
sub
xchg
decl
out
data16
fnstsw
jae
movsb
push
mov
es
repnz
cltd
insb
or
test
insb
sar
mov
mov
mov
out
dec
dec
adc
push
sti
into
xlat
xchg
jg
mov
lcall
nop
lret
jp,pt
mov
mov
pop
popf
add
xchg
xor
repnz
call
arpl
clc
and
call
jge
cmpsl
push
xchg
xor
call
xor
fnsave
lret
sbb
add
out
popf
stc
adc
jae
xchg
sbbl
pop
lock
or
pop
push
clc
test
mov
push
adc
iret
sbb
arpl
call
lods
push
cmp
iret
and
stc
jne
aad
hlt
shr
js
adcb
mov
adc
lds
ljmp
incl
gs
loope
dec
mov
gs
jge
mov
cmpsb
push
mov
jmp
popa
js
sbb
popf
push
leave
lret
outsb
jl
lods
push
push
inc
and
mov
ds
jecxz
repz
fisubl
mov
dec
xchg
mov
insl
sub
sbb
js
mov
mov
negl
test
push
pushf
imul
xor
push
add
cs
xor
lcall
and
aad
in
xor
in
outsl
shl
dec
add
adc
fistpll
lock
decl
out
jecxz
mov
rorb
cmpsl
xchg
dec
std
out
cmpsb
les
shrb
sub
and
jle
lods
push
clc
push
sahf
pop
int3
dec
fisubrs
out
xchg
pop
lret
incb
mov
mov
decl
or
mov
loope
repnz
xchg
lea
arpl
movsb
inc
aas
xchg
fistps
ljmp
pop
cmpsb
cmp
and
cmp
and
lcall
incl
and
sbb
mulb
jp
cmp
pop
cmp
sub
incl
xchg
repnz
stc
push
scas
stos
out
imul
add
mov
jmp
lock
push
loope
mov
xor
mov
push
mov
lods
mov
call
ret
shrb
in
sub
push
jae
outsl
arpl
mov
mov
lret
decl
mov
push
pop
mov
adc
mov
push
fildll
pop
push
lahf
xlat
xchg
out
fdivrs
std
decl
call
push
push
rorb
mov
mov
das
rclb
mov
pop
and
sub
add
incl
mov
mov
xchg
mov
mov
in
add
fnstsw
ret
mov
cld
push
loopne
pop
dec
js
fsubl
sub
rcrb
push
inc
mov
or
incl
out
mov
jo
inc
xor
sbb
add
or
xchg
lcall
push
sahf
into
jno
pop
sub
jp
sbb
scas
testb
mov
add
fistpll
ret
pop
push
pop
test
sub
outsl
add
ljmp
pusha
out
or
add
and
outsb
scas
push
out
jo
mov
pop
mul
sbb
loop
ljmp
pusha
or
inc
jg
push
cmp
add
imul
cmc
xor
pushl
nop
in
cmp
sbbl
dec
sub
pop
test
bound
lcall
pop
xchg
in
shlb
or
jnp
ljmp
incl
shl
jbe
mov
jnp
sbb
mov
xchg
xlat
mov
lods
jo
ret
cld
fcomip
fidivs
and
xor
sbb
mov
pop
mov
repz
mov
stc
mov
ljmp
test
xlat
inc
out
mov
jbe
fnstcw
sti
jns
ljmp
inc
rcrl
inc
and
in
iret
adc
decl
push
xor
into
aaa
add
sub
ret
and
out
and
mov
push
pop
lock
sub
push
es
daa
jbe
mov
sahf
call
mov
fcoml
test
fmuls
fimull
or
pop
in
dec
mov
dec
sub
sub
mov
out
jno
int3
fisubrl
xorb
enter
sarb
movsl
nop
dec
lock
jmp
lock
cwtl
subl
mov
stc
sar
push
sbb
fadds
pop
lds
paddsw
cmc
or
xchg
mov
jo
mov
ret
fld
ljmp
xor
push
dec
clc
pop
jb
cmp
mov
gs
inc
je
xor
or
cltd
jmp
movsl
xor
jmp
in
dec
rclb
cmp
fcomip
xchg
mov
jge
call
jle
sar
mov
jecxz
dec
nop
push
outsb
aas
and
insb
push
jmp
mov
decl
rolb
inc
shlb
xchg
pop
dec
sub
inc
add
incb
shrl
inc
xor
cmpsl
repnz
ljmp
inc
gs
outsb
inc
dec
decl
cltd
js
mov
pushl
mov
jg
adc
jb
cmpsb
add
cmp
and
incl
fadds
cmp
out
inc
mulb
adc
pop
lock
jg
andb
push
jb
dec
push
dec
or
push
push
in
mov
xchg
dec
test
push
pushf
dec
mov
test
rcr
adc
decl
jge
data16
and
rcr
movsb
xor
add
mov
cs
push
add
mov
arpl
or
in
pop
or
addl
adc
sbb
popa
push
dec
dec
xchg
dec
lods
cmpsb
mov
mov
fsub
dec
dec
pop
enter
inc
outsb
pop
mov
decl
test
jge
mov
jp
inc
jmp
fdiv
gs
sti
mov
cmp
call
jg
cld
fsubr
xchg
sti
mov
add
adc
jp
idiv
sarl
add
test
fcomip
push
pop
fs
icebp
push
mov
and
test
inc
adc
popf
inc
outsb
fldenv
pop
repnz
decl
mov
subl
jns
enter
inc
loop
add
int3
adc
jmp
dec
jo
push
mov
mov
pop
adcl
test
xor
fstps
std
pushl
dec
int
xchg
jno
push
and
dec
dec
xor
mov
insl
lcall
dec
mov
sarb
inc
sbb
arpl
jae
fcomip
incl
pop
mov
jbe
xchg
sub
loop
mov
test
fwait
imul
jmp
sbb
mov
push
movsl
int3
xchg
cmp
dec
jle
push
lahf
jge
or
mov
loop
std
mov
mov
cmp
cmp
add
xor
lods
lea
aam
repnz
call
aam
xchg
push
test
jnp
lret
test
and
mov
call
sbb
lret
lock
jl
xlat
xchg
call
stc
shrb
dec
dec
xor
inc
out
jns
in
sub
test
std
xor
pop
loopne
rcll
push
xor
popa
rcrb
sbb
fildll
enter
lcall
fdivp
lcall
fistps
test
push
cmp
pop
add
cwtl
test
fisubrs
cli
decl
int3
xchg
stos
decb
jnp
ficoml
add
inc
jno
sub
mov
sbb
sbb
mov
dec
pop
ficomps
xchg
xor
pop
inc
in
push
jg
mov
lods
mov
ja
cwtl
jnp
lea
pop
mov
cmp
push
mov
adc
mov
xor
and
push
mov
mov
icebp
jmp
jg
sti
ljmp
cmc
popf
xor
jns
mov
aas
mov
imul
jmp
pop
call
inc
pop
xor
sti
jne
sbb
fnsave
mov
xor
out
xchg
clc
fstpl
mov
xchg
mov
jg
lods
bound
ds
pop
fs
addr16
pop
push
inc
loopne
lcall
mov
std
incl
imul
pop
sub
cli
xchg
loope
jae
pop
lcall
cmp
mov
sbb
cmc
mov
lods
adc
decl
push
cmp
mov
jmp
mov
subl
mov
adc
cmp
jecxz
jns
dec
push
inc
pop
fstp
adc
ljmp
call
repz
cmp
lret
xor
aad
xor
adc
sbb
sbb
ljmp
lds
sbb
xchg
xchg
movsl
xchg
aas
test
ljmp
popf
setge
popa
xchg
xor
sub
lcall
pop
or
add
jg
xchg
fwait
sbb
iret
fs
sub
adc
cld
xor
add
fcmovu
cmpsl
mov
cmp
mov
adc
aad
mov
push
mov
or
mov
mov
cmp
add
popa
ret
outsb
stos
or
cwtl
test
inc
mov
stc
jbe
adc
lods
mov
sub
jno
add
mov
incl
sub
adc
xchg
cmpsl
sbb
or
jns
adc
sar
decl
fcompl
jno
cli
movsl
push
ds
lock
insb
sahf
not
pop
dec
pushf
xor
das
adc
add
ret
dec
and
sahf
xchg
mov
lret
jmp
out
inc
outsl
cmp
nop
jmp
xchg
addb
mov
mov
adc
in
push
test
fcoml
incl
and
cmp
and
pop
mov
aam
shll
stc
mov
mov
jg
add
lods
sbb
push
adc
decb
shl
pop
jle
push
cmp
jg
lcall
push
jns
cmp
sahf
ljmp
sahf
ljmp
pushf
fldcw
mov
jle
xchg
call
sub
fstpt
incl
pop
xchg
fmul
popa
xchg
imul
xchg
sub
stos
and
mov
f2xm1
sar
cmp
mov
push
insb
cmp
push
dec
fisttpll
adc
mov
inc
jo
incl
dec
clc
mov
mov
pusha
cmp
cwtl
mov
lods
testb
push
ljmp
loop
and
jne
fs
lods
sub
jmp
popf
loope
lcall
or
inc
mov
mov
test
mov
loopne
sbb
mov
push
sbb
or
fcompl
or
ret
test
jmp
gs
mov
xchg
and
inc
xchg
shll
outsb
sahf
push
popf
popf
sub
repz
mov
dec
push
adc
push
sub
xlat
subl
incl
lea
or
fxch
sub
push
leave
mov
iret
jbe
insb
pop
xor
incl
int
pop
or
xor
adc
lods
jb
or
leave
insl
shlb
pop
ljmp
in
mov
std
xor
std
out
gs
lods
movsb
testl
adc
jmp
inc
push
adc
sbb
fdivrl
lret
cmp
popf
imul
pushl
jp
add
nop
lds
daa
mov
mov
cmp
jg
call
mov
lahf
lea
imul
xchg
push
and
loop
decl
ret
push
push
lods
mov
pushf
insl
push
dec
int
andl
stos
call
mov
enter
xor
rcr
jb
enter
je
mov
imul
fnstenv
cli
inc
out
inc
lcall
arpl
outsl
jmp
adc
repnz
rolb
std
mov
sbb
pop
lods
add
out
fbstp
fsts
bound
dec
scas
dec
lcall
into
ds
or
cmp
pop
das
mov
jp
mov
or
push
adc
cmpsl
aas
jb
cld
cmpsb
incl
xchg
mov
dec
shlb
jl
lahf
and
adcb
incl
jnp
ret
push
imul
sbb
xchg
add
mov
and
mov
sub
adc
rol
xor
lret
pop
pop
xchg
test
sub
ljmp
cmp
mov
xor
insl
pop
pop
mov
jmp
mov
pop
xchg
mov
push
mov
daa
and
pop
cltd
test
jbe
lcall
out
or
jbe
pop
test
xchg
shl
test
in
dec
sub
popl
cld
cmc
call
aas
loopne
out
std
sub
rolb
icebp
cmpsb
push
test
mov
xor
push
mov
ljmp
out
std
mov
rcrl
fisttpl
out
push
out
fadd
test
and
pop
lcall
imull
dec
in
push
pop
push
and
pop
rcl
nop
ss
sbb
out
add
inc
jmp
ljmp
pop
dec
sbbb
loop
cmc
cld
xchg
js
jg
push
xor
mov
and
inc
cmc
fwait
lea
gs
xor
cmpsl
pop
dec
outsb
xchg
ds
popf
fists
push
xor
fs
xor
sbb
into
lret
ret
das
shlb
call
pop
and
pushl
add
add
lock
mov
leave
pushl
aam
sbb
xor
mov
mov
or
shrb
sbb
inc
hlt
mov
adc
ds
leave
pop
pop
inc
sahf
and
lahf
fcmovnbe
push
cmp
js
je
and
fimull
outsb
std
popf
jbe
sbb
sarb
or
ja
cwtl
mov
fdivl
enter
mov
enter
mov
scas
mov
or
ljmp
enter
das
ds
xor
imul
push
repz
notl
jns
adcb
sub
incl
mov
test
jb
mov
jle
addr16
repz
popl
daa
cwtl
xor
push
out
lods
out
test
and
js
adc
pop
pop
out
sti
adc
je
xchg
pop
adc
push
jmp
xlat
arpl
inc
inc
lahf
loope
in
nop
dec
or
cmpsl
idivl
hlt
pop
jae
xchg
mov
call
and
jno
ljmp
std
inc
and
andb
dec
and
sarb
mov
mov
push
stos
call
or
xorl
inc
push
ret
mov
fdivrp
mov
fmul
cmp
jb
jb
stos
int3
loopne
inc
pop
and
jg
sub
call
cmp
jns
stc
pusha
push
cmc
inc
fs
xorl
test
pushl
rcl
sub
leave
sub
sub
dec
push
mov
fwait
mov
data16
jmp
jg
mov
push
mov
gs
notl
adc
push
adc
mov
cld
xchg
add
dec
js
lcall
inc
je
cmp
push
mov
mov
sbb
push
dec
iret
repz
lcall
xchg
cmc
inc
lret
aad
pop
pop
inc
push
xor
addr16
mov
jmp
pop
or
push
loope
adc
xlat
cmp
ljmp
cmpsb
dec
sbb
sbb
mov
ficomps
repz
inc
test
pop
cmp
xor
test
ljmp
pop
push
ja
repz
xorl
je
and
mov
mov
add
xchg
scas
inc
lods
in
insb
iret
pop
es
lods
push
or
call
cmp
xor
cmp
inc
or
inc
das
or
lcall
incl
pop
push
push
or
mov
shl
and
test
mov
and
decl
and
les
pop
insb
push
cmp
repnz
stos
movsl
xor
outsb
mov
call
xor
test
push
sahf
sbb
push
dec
sbb
xchg
cmp
clc
repnz
add
incl
lret
push
inc
rcl
xchg
out
xor
push
cld
rcll
int
dec
or
pop
jns
xor
scas
clc
ljmp
xchg
and
dec
fiadds
cs
add
rcrl
stos
or
ljmp
stos
mov
jg
pop
addr16
lock
mov
push
std
call
in
jmp
sbb
jo
rcr
and
add
cmp
fidivrl
pushl
mov
loopne
jo
mov
outsb
push
loope
xchg
ret
test
rorl
cmp
add
and
cli
inc
xor
call
lds
dec
loop
pop
add
rcll
pushl
push
scas
or
mov
pop
cs
mov
shrl
stos
cmpsl
sar
lcall
sub
pop
outsl
hlt
mov
and
sub
call
pop
call
adc
sub
pushf
cld
negb
mov
jb
adc
repz
mov
inc
sbb
out
adc
mov
mov
xor
mov
das
pop
jp
inc
mov
sub
xchg
or
add
and
stos
outsb
push
mov
inc
int
incl
jae
ret
test
and
xor
or
push
movsb
ljmp
sar
inc
idivb
mov
sbb
sbb
push
add
loopne
jnp
loope
mov
enter
cmp
mov
cmp
out
pop
fdivr
mov
js
and
sub
sbb
or
in
leave
mov
lcall
jg
cmpsl
and
stos
push
ficoms
dec
jbe
jbe
jbe
ss
add
in
lcall
out
sbb
loopne
call
ret
divl
mov
pusha
cmp
popf
outsl
ret
call
cmpl
data16
call
stc
sbb
jg
imul
jl
sub
out
xor
outsb
xlat
pop
cmp
adc
fdivr
jmp
push
movsl
jne
lret
mov
outsb
les
sbb
test
scas
pop
ror
outsl
mov
jmp
cltd
in
popf
mov
xchg
mov
push
jecxz
mov
stc
dec
xchg
mov
jo
dec
or
lret
or
adc
sub
xor
movl
outsl
clc
incl
push
mov
jne
mov
int
mov
push
fdivr
jg
ljmp
mov
cmpb
divl
xchg
jne
dec
pusha
lcall
in
ljmp
fcomi
cmp
fisubs
aaa
iret
arpl
push
jo
dec
xchg
loopne
daa
adc
or
lcall
cmc
mov
push
mov
jp
fldl2t
cmp
je
aad
sub
dec
imul
je
lcall
jp
jg
pop
xor
jg
outsl
sbb
packuswb
ljmp
jnp
jb
arpl
adc
push
push
outsl
sbb
sahf
mov
fsts
lcall
jne
jge
xchg
xor
fildll
and
mov
sarb
cmpsb
pop
shrb
imul
lcall
sahf
int
orps
cld
inc
inc
sbb
inc
test
adc
aas
sub
hlt
icebp
fsubr
push
pushl
std
leave
mov
jb
sub
insl
push
roll
mov
subl
mov
sbb
testl
hlt
mov
inc
adc
sub
fwait
int
adc
decl
cld
leave
dec
sbb
add
dec
and
hlt
dec
xchg
sbb
mov
add
call
mov
sahf
add
fidivrs
add
bound
add
jmp
ja
loope
cmc
xchg
sub
notl
enter
shlb
and
and
mov
pop
rcrb
sbb
je
pop
add
int
or
jnp
mov
ljmp
xchg
dec
icebp
jge
test
mov
xorb
fldenv
xor
xlat
xor
sub
jge
mov
mov
xchg
test
mov
into
xor
inc
dec
jbe
jb
xchg
jbe
decl
aaa
adc
add
inc
orb
aam
cltd
xchg
call
loope
and
sbb
mov
lods
inc
ficoms
xchg
dec
and
xor
ljmp
sbb
dec
iret
mov
jmp
insl
sub
dec
in
or
add
call
std
call
add
inc
jle
and
outsl
aam
xorl
ljmp
cmp
loopne
mov
insb
loope
ljmp
jne
ljmp
mov
cmp
pop
gs
sub
in
stos
pop
pop
aas
add
clc
inc
pop
inc
mov
pop
mov
xchg
mov
mov
mov
dec
stos
loope
daa
or
or
sub
les
dec
mov
cwtl
sub
ret
sbb
jo
fcoms
pop
xchg
mov
inc
sub
dec
push
nop
xchg
xchg
xchg
movsl
adc
fwait
jp
push
xchg
cli
mov
addl
jbe
push
in
pusha
icebp
inc
pop
adc
fisttpl
pop
call
std
or
cmpsb
into
ds
cmc
shrl
fstps
xorl
pop
hlt
push
dec
roll
push
jle
lods
push
push
dec
fwait
sahf
xor
dec
jno
push
fprem
fdivl
xchg
aad
shll
cmp
mov
incl
adc
sahf
pop
push
cmp
negb
loope
inc
add
cld
in
incb
push
cmp
jae
inc
cltd
xchg
jle
sbb
pushl
push
lock
xlat
int
mulb
fcoms
ret
std
pushl
xchg
push
sahf
arpl
add
lret
mov
xorl
jae
hlt
lcall
push
adc
xor
imul
loop
lcall
in
sub
pusha
ret
mov
adc
push
iret
in
lahf
or
lcall
in
ret
call
mov
lea
imul
cmp
popf
cmp
jg
pop
dec
add
out
and
inc
aas
xchg
push
mov
orl
dec
dec
mov
xor
jmp
push
pop
loop
in
mov
xchg
jp
push
sub
lret
xor
cmp
or
stc
mov
mov
push
or
fldenv
add
scas
fxch
loope
hlt
xchg
add
scas
jle
sbb
test
decl
jnp
jg
bound
cmp
jg
mov
testl
jmp
jmp
push
or
add
popf
push
xchg
jb
and
mov
cmp
mov
inc
xor
add
mov
and
lcall
ret
pushl
sbbl
data16
xor
sbb
iret
jl
ljmp
mov
jne
lcall
insb
cmp
loope
loope
or
xorl
and
aad
mov
add
pop
dec
ljmp
stc
int3
insl
call
inc
pop
push
add
inc
addps
add
push
mov
adc
and
ja
dec
jp
and
pop
hlt
stc
cld
cmp
pushf
adc
adcl
je
sti
ss
loope
cwtl
or
push
mov
dec
cli
ljmp
and
dec
cmp
outsb
aas
out
xor
fstps
ljmp
pushf
push
das
and
jge
push
out
data16
xlat
mulb
addb
push
mov
enter
sbb
pop
and
mov
fbld
insl
push
sub
loopne
incl
add
lea
pop
out
push
repz
xor
out
add
cli
inc
fistpll
insl
repnz
repnz
cmp
pop
fisubs
mov
lret
icebp
lret
decl
add
in
mov
insb
xchg
dec
call
pop
mov
cmp
mov
int
rorl
adc
cmp
repz
shll
int
sub
inc
mov
fidivl
loope
jae
decl
lock
int3
ljmp
mov
cs
mov
nop
mov
repnz
mov
cmp
mov
stos
add
hlt
xor
les
incl
lods
les
add
fimull
xchg
pop
add
aas
inc
into
push
and
out
push
rolb
lahf
mov
orb
fistps
jg
dec
mov
mov
popa
xchg
jg
incl
mov
inc
cmpsb
adc
loopne
icebp
popf
les
divl
jp
iret
std
sti
inc
mov
shlb
data16
mov
out
gs
cmp
outsl
cmpsb
pushl
sub
cwtl
mov
mov
sub
loopne
incl
xor
enter
xor
scas
xchg
loopne
ret
jae
mov
jo
gs
lcall
push
rorb
push
mov
cmc
inc
push
pop
cs
inc
jmp
add
sahf
fistl
divl
jbe
jmp
mov
pop
cmp
jmp
xor
fildll
outsl
std
fmul
mov
ss
repz
cli
aam
add
jg
call
lahf
pop
aaa
std
rol
xchg
sub
mov
ss
or
mov
mov
push
frstor
out
ja
out
or
push
adc
fcoml
push
dec
shlb
mov
dec
and
test
add
adcb
mov
mov
mov
int3
mov
nop
push
int
dec
sbb
cwtl
fdivrs
lods
mov
out
adc
mov
mov
xlat
fnstenv
stos
cmpsb
add
lods
mov
jmp
mov
es
outsb
outsb
push
lahf
jbe
scas
xlat
push
cli
aas
adc
pop
jnp
fdivrs
or
in
pop
push
enter
aas
cltd
add
call
sbb
rolb
xchg
imul
fists
roll
incl
test
jnp
stc
push
mov
in
mov
pushf
mov
sbb
adc
sub
adc
imull
decl
dec
stc
adc
xor
sbb
cli
ljmp
fisubl
mov
incl
adc
insb
cmp
mov
mov
lea
out
in
mov
push
incl
incb
adc
insb
addr16
test
mov
sub
clc
jmp
or
xor
and
xchg
inc
pop
jb
pop
cvtps2pi
push
jne
int3
and
and
ror
xlat
add
xchg
jb
sub
clc
ljmp
sti
fwait
in
lea
cld
mov
movsl
or
stc
jae
les
sbb
call
les
pop
xor
imul
loope
inc
dec
jg
decl
test
jecxz
cmp
xorb
out
xchg
mov
loop
jno
aam
lcall
xchg
movsb
loop
sbb
loope
pop
outsl
lock
into
fisubs
leave
mov
xchg
repz
fcomip
mov
ret
fidivs
pop
insb
and
dec
jp
adc
mov
call
adc
push
lret
pushf
sub
sahf
andb
mov
and
je
call
mov
xor
jae
push
sbb
aad
cmc
jae
sarb
dec
out
jno
aaa
notl
jnp
lea
out
jbe
cmp
cmpsl
xchg
xchg
cmpsl
dec
cmpb
xor
mov
cs
scas
dec
cmp
mov
lcall
je
sbb
jl
ljmp
iret
cld
xor
jno
mov
dec
loopne
cmp
push
push
sar
call
sub
pusha
xor
in
cmp
mov
insl
inc
cwtl
daa
data16
jg
cwtl
ret
cmp
xor
rol
dec
jbe
nop
sbb
cmpsb
push
shrl
mov
incl
mov
dec
pop
pop
iret
mov
cld
pop
add
xchg
bound
xchg
dec
aad
das
jmp
push
rcl
cmpsl
xchg
repnz
test
cmpsl
xor
inc
sti
pop
mov
add
ljmp
sbb
dec
dec
js
lea
repz
in
mov
cs
das
mov
xchg
or
jg
shll
fcmovbe
lds
and
stos
cld
mov
outsl
xchg
fs
decb
insl
push
or
pop
je
mov
pushl
stc
add
sbb
mov
or
rcl
out
xchg
and
int3
cmp
xchg
into
ja
jecxz
incl
mov
ja
inc
mov
sbb
mov
jge
sbb
pop
sub
pushl
flds
jns
arpl
cmp
das
dec
cmc
lcall
mov
xor
fists
sahf
sub
pop
mov
dec
sub
repz
insl
sbb
xchg
repz
into
sbbb
xchg
inc
and
dec
add
ret
or
mov
ljmp
lds
ja
dec
fwait
test
in
xchg
mov
mov
ljmp
mov
jno
orl
les
xchg
or
repz
jae
dec
push
jmp
shrb
xlat
cwtl
lea
fisubrs
cmp
gs
pop
hlt
sub
nop
sub
scas
push
stos
xor
sti
and
pop
aas
jo
ljmp
jmp
clc
test
ret
mov
sbb
decl
or
ficomps
mov
cwtl
enter
out
arpl
aaa
xlat
dec
push
pop
mov
push
push
sti
arpl
clc
mov
inc
xchg
jnp
in
inc
sbb
call
cli
iret
sbb
and
mov
adc
mov
push
dec
das
shrl
dec
mov
decb
xor
test
mov
jmp
lcall
push
sar
jmp
push
or
pop
xor
pop
mov
xor
pop
adc
lcall
mov
loop
and
sahf
clc
mov
pop
in
mov
and
fwait
call
dec
pop
dec
pop
lods
dec
pushl
shrb
loop
cmp
pop
shr
negl
jg
divb
out
xchg
jbe
out
xchg
adc
cmpsl
das
xchg
push
ret
jg
or
adc
shll
pushf
les
jl
mov
outsl
popa
daa
cld
aam
sbb
push
sbb
mov
cmp
and
jno
add
jge
loopne
ja
jmp
xchg
xchg
insl
lret
pushf
cmp
in
and
gs
pop
xchg
jg
decl
mov
sbb
ljmp
sub
mov
lcall
mov
inc
inc
fisubl
imul
cmp
lret
lret
addb
insb
scas
repnz
in
fs
data16
sarl
fnsave
test
xor
cmpsl
cltd
pop
into
sub
mov
push
push
jle
loop
xchg
jle
addr16
mov
decl
out
push
into
imul
jae
test
jp
sti
inc
sbb
jl
cmpsl
cmpsl
orb
loop
aaa
das
push
inc
mov
mov
mov
sub
lea
js
jo
pop
daa
jmp
xor
mov
pop
ror
push
sahf
daa
sbb
incl
or
nop
out
lcall
test
pusha
stos
jl
incl
or
std
push
stos
xor
aam
lret
outsb
sarb
jne
inc
pop
xchg
iret
mov
sbb
cmc
xor
stos
xchg
aas
cmp
jecxz
addl
adc
ljmp
inc
cmp
fimuls
outsb
int
mov
jno
idiv
jg
xchg
adcb
test
loope
iret
fistpl
test
fdivrl
pushl
aad
lods
mov
cmp
xchg
sub
rclb
mov
stc
and
cmpb
test
xchg
lock
movmskps
pushl
mov
aam
dec
test
outsb
sub
cmpl
dec
pop
push
mov
mov
ljmp
adc
inc
jbe
stc
sbb
push
lret
sub
repz
mov
ds
addr16
or
stos
sub
out
adc
fs
daa
fwait
loopne
jmp
mov
and
das
push
pop
and
sbbl
stc
adc
sarl
pop
push
push
push
cmpsl
popf
sub
pop
jno
fprem1
pop
lock
cltd
and
dec
sbb
jle
xchg
fmull
hlt
ljmp
xchg
cmp
cmp
add
jle
sbb
sub
cltd
push
push
and
ljmp
xchg
and
test
or
sbb
test
pop
jg
mov
bound
fisttpll
cmpl
pop
and
lock
in
mov
jae
test
xchg
sub
daa
and
nop
jno
cmpsb
jp
jge
jmp
js
mov
inc
scas
push
cltd
inc
xor
shlb
sti
int3
sub
incl
movsb
sub
mov
movsb
pop
fisttpll
aam
add
or
es
push
test
mov
xchg
pop
mov
xlat
nop
scas
lods
mov
ljmp
rcr
ret
jp
add
faddl
mov
jno
dec
sbb
daa
lcall
push
inc
pop
insl
or
add
pop
xchg
psllq
arpl
jmp
ljmp
mov
je
mov
andb
aad
xor
lds
add
call
cltd
xchg
push
jbe
gs
adc
stc
dec
sbb
in
js
sti
lret
call
lcall
dec
inc
cmp
das
sub
iret
cmp
or
incl
fists
push
stc
dec
lods
fidivs
iret
xchg
add
enter
call
and
add
icebp
lcall
jg
lods
push
lahf
push
mov
and
mov
ljmp
call
in
lcall
mov
and
or
inc
xor
pop
loopne
cltd
dec
sbb
lods
roll
mov
push
xchg
ljmp
mov
add
and
add
mov
mov
mov
jns
ljmp
cli
jb
mov
xlat
pop
scas
pop
dec
rcll
addl
add
imul
mov
nop
jo
adc
mov
test
jne
dec
fiadds
cmp
out
sbb
jg
lods
icebp
inc
sub
stos
lahf
lods
dec
lahf
lock
xchg
dec
add
outsl
xor
int3
movsb
jge
and
sub
xchg
pop
pop
jge
push
jnp
jecxz
or
mov
mov
bound
or
adc
popa
add
fs
lcall
orb
insb
outsb
and
rcrb
dec
mov
cltd
mov
inc
or
sbb
cmp
xor
incl
and
mov
int3
add
iret
jecxz
mov
adc
rclb
sbb
push
in
and
push
xchg
es
jb
mov
jg
pop
mov
dec
xchg
nop
aas
test
push
cmp
add
cmp
shll
ljmp
pushf
adc
adc
jne
in
in
mov
cmp
data16
vpmullw
pushl
push
mov
sbb
mov
lahf
orb
mov
shrb
push
pushl
adc
je
adc
rcrb
pop
aam
mov
sti
je
repnz
jb
push
push
mov
jle
leave
pop
mov
mov
and
fcomip
ljmp
inc
jp
idiv
popa
and
sbbl
nop
push
in
jl
ffreep
xor
cmp
fbstp
out
and
rcrb
or
mov
fucomp
mov
scas
out
xchg
icebp
xor
repz
mov
mov
ror
in
stc
mov
imul
nop
rorb
inc
push
push
adc
cmc
inc
scas
sbb
xchg
jb
test
mov
sbb
mov
mov
inc
xor
push
lret
push
lcall
xchg
mov
cmp
loopne
out
and
jg
pop
or
xchg
jmp
dec
push
push
mov
insb
fidivrl
out
subb
mov
std
mov
sar
jg
add
dec
push
fwait
push
stos
aaa
loope
jne
dec
cwtl
negb
jne
inc
mov
int
xchg
incl
sbb
sti
fcomps
mov
inc
add
lahf
mov
dec
cmpsb
outsb
mov
call
hlt
je
fwait
loop
in
aam
sahf
flds
adc
sar
lcall
test
mov
mov
mov
push
adc
add
and
dec
shlb
xor
inc
inc
push
cmpsb
push
pop
in
ficomps
mov
mov
bound
ljmp
inc
jmp
jl
inc
and
imul
shl
inc
jo
push
xchg
aas
xchg
and
sub
clc
jge
push
mov
jecxz
imul
mov
jg
pushl
in
not
inc
mov
pop
sbbl
xchg
out
mov
push
add
push
push
icebp
pop
aad
shl
push
fstpt
aas
inc
cld
notb
dec
pop
mov
xchg
push
dec
rolb
pop
repz
sbb
fcoml
sti
push
or
test
add
cli
mov
decl
lock
mov
adc
jle
hlt
sahf
and
leave
push
add
pushl
leave
fisttpll
pop
adc
mov
xchg
arpl
dec
inc
pop
xor
loope
inc
sub
mov
ljmp
jno
clc
xchg
lods
adc
xchg
mov
or
pop
adc
jg
ljmp
sbb
ret
mov
in
fmuls
xor
pop
push
push
mov
mov
stos
fstps
pop
movl
into
pop
mov
call
sbb
or
adc
dec
mov
rcl
sbb
outsl
push
mov
ffree
or
mov
ficomps
cltd
xor
imul
adc
lret
into
add
mov
sbbl
mov
outsl
out
and
dec
inc
in
enter
in
adc
and
ljmp
add
outsb
lret
es
inc
xchg
sub
insb
enter
xor
fwait
addr16
cmc
fistpll
into
int
sub
jmp
sub
jnp
sti
lahf
imul
cmp
aas
bound
jg
cmp
push
dec
push
fs
dec
scas
cmp
call
cmpsb
test
pushf
xor
sbb
sub
push
adc
outsl
cmpl
add
jp
mov
aaa
shr
jp
dec
mov
push
imul
inc
push
lods
and
filds
lcall
or
pop
lret
xlat
xor
popa
push
add
hlt
add
mov
decl
cmc
out
mov
sbb
add
jae
shl
sti
mov
aas
idivl
ljmp
pop
clc
fstl
in
pop
rol
xchg
lock
fstpl
mov
inc
out
mov
sub
shll
in
mov
jg
inc
inc
jecxz
sbb
xlat
ret
mov
call
js
inc
mov
mov
arpl
cmp
mov
inc
loope
xor
adc
sti
dec
jmp
lret
mov
pop
icebp
sbb
dec
and
int3
es
sub
jb
cmc
mov
cmp
mov
push
clc
sub
das
stos
xchg
adc
push
pop
hlt
fs
ja
cwtl
enter
cli
call
shrl
outsb
repnz
cmp
mov
loop
inc
dec
sub
lcall
outsl
mov
inc
sub
cs
fists
cmpb
sbb
jae
mov
lcall
dec
mov
push
lret
xchg
es
lds
repnz
mov
or
aas
movntps
call
mov
inc
pop
ja
sbb
les
jns
subl
incl
pop
pop
push
stos
add
adc
loopne
sbb
ljmp
inc
movl
stos
rcl
inc
insl
inc
jecxz
imul
in
xor
imul
dec
dec
ss
iret
mov
out
dec
mov
pusha
jecxz
or
incl
cmp
xchg
sub
mov
rorb
shlb
cmp
lcall
jp
sbb
into
fidivrl
mov
add
in
add
add
decb
fnstsw
popa
adc
sahf
jmp
inc
sbb
xchg
decl
jb
nop
pop
lea
xchg
fwait
out
push
adc
or
sbb
aas
aas
sar
ljmp
or
and
pop
push
imul
sbb
jp
fs
das
push
lcall
jg
mov
inc
cli
lcall
test
sbb
dec
adc
sub
fucom
das
out
add
mov
in
movsl
adc
ror
inc
subl
andb
aas
push
push
lcall
test
test
cmp
movsb
xor
test
add
js
mov
imull
mov
push
jecxz
lcall
dec
add
shll
cli
into
mov
cs
sbb
in
mov
jecxz
inc
xchg
push
inc
and
enter
ret
imul
jmp
and
pop
inc
xchg
xchg
push
jecxz
mov
ret
out
out
cltd
enter
cmp
dec
ss
stos
sub
push
daa
shl
dec
mov
pop
adc
sbb
fcomip
lahf
sbb
xor
add
rclb
cmp
iret
std
in
pop
cmp
pushl
cs
rclb
xor
arpl
fcmovnu
cmpsl
mov
repz
pop
xchg
es
ljmp
clc
cmp
jl
aam
jle
push
in
inc
jle
lock
xchg
ficoms
adc
sub
inc
cmpsl
jb
out
and
mov
in
jb
lock
call
out
das
mov
jl
inc
push
pop
testl
mov
in
push
pop
mov
pushf
sub
inc
xchg
pop
and
ljmp
xor
ds
lret
insl
lea
stos
cmpb
mov
mov
clc
push
mov
bound
dec
in
add
jno
or
mov
mov
out
lcall
and
adc
mov
xchg
scas
xchg
mov
shr
call
lds
out
cmp
ret
std
jge
adc
cld
sbb
in
insl
jno
dec
mov
push
movsl
cmpsb
imul
jns
lcall
addr16
decl
pop
xchg
push
mov
std
xor
pop
ret
jb
cmc
cwtl
mov
cmpsl
hlt
call
mov
xor
loope
adc
leave
dec
add
sbb
lret
ja
fisubl
pop
movsb
lcall
ljmp
js
aad
clc
mov
in
jg
cwtl
cltd
repz
repz
jnp
pop
mov
push
inc
pop
gs
into
pop
insl
push
cmp
xchg
or
jg
addl
inc
xchg
data16
mov
addr16
ds
fidivrl
or
or
jge
js
lds
jns
std
call
jns
cmp
cmc
xor
adc
loopne
sahf
or
sti
lcall
scas
xor
hlt
mov
jp
out
mov
xchg
pop
sbb
cltd
jmp
lock
xlat
leave
dec
sub
stos
int
or
pushf
stos
icebp
lcall
mov
movsb
xlat
inc
inc
jae
mov
add
fs
stc
and
sar
ljmp
shlb
clc
xor
mov
es
inc
jl
mov
hlt
lcall
inc
int
adc
xchg
add
jle
sahf
dec
lods
es
mov
and
push
cmc
fcomip
repz
scas
bound
or
cmp
jg
pushl
fucomp
pop
add
testl
push
out
addb
popa
in
insl
loopne
ljmp
ficompl
mov
fsubrs
mov
jnp
outsb
dec
out
sar
call
std
into
mov
add
mov
and
jle
sbb
decl
loopne
or
pop
cmp
int
in
test
loopne
add
mov
mov
jmp
dec
movsl
popl
int
shl
inc
mov
cmp
mov
pop
push
pop
cli
ljmp
ja
std
mov
sub
call
ja
mov
add
adc
adc
sub
fildll
xchg
imul
call
and
push
dec
sbb
test
or
cld
jmp
jb
or
mov
inc
pop
sbb
cmp
call
or
and
push
ss
pop
pop
cmpsl
dec
or
pop
mov
jmp
cmc
adc
outsb
testl
outsl
pop
outsb
push
es
mov
push
mov
roll
jg
or
dec
mov
sar
cli
dec
or
add
cmp
pop
leave
inc
movhps
out
pusha
dec
inc
cmpsl
sub
fdivr
ljmp
adc
mov
inc
loopne
xlat
jbe
test
and
mov
das
into
lods
loope
ljmp
movsl
aas
call
test
clc
dec
outsl
daa
cs
aad
sti
cmp
mov
and
jg
push
xchg
xchg
xchg
adc
sub
mov
ja
call
or
xor
jo
push
out
xchg
mov
sub
xchg
leave
loopne
cli
xchg
flds
ret
adc
or
stc
xchg
xchg
push
jnp
add
incl
inc
dec
cld
cmp
push
add
dec
stos
cmp
les
repnz
icebp
lret
pushl
sahf
adc
mov
inc
pop
setne
adc
clc
loopne
enter
loop
mov
lock
fs
push
cmp
or
int3
subb
cmp
rorl
sbb
sahf
stc
pop
sti
enter
adc
lock
push
pusha
ret
call
adc
push
into
cmp
stos
leave
les
hlt
cli
mov
test
xchg
lds
movl
xabort
mov
jmp
scas
push
dec
arpl
fwait
jno
ljmp
clc
push
dec
cmp
sti
add
lret
or
mov
ljmp
xor
mov
and
xor
pop
sbbl
repz
jae
jg
cli
pop
push
popa
cmovae
bound
xchg
mov
jmp
cli
sub
pop
mov
sahf
das
sti
int3
cmp
pop
in
insb
jp
fildl
push
or
dec
cld
pushf
mov
cmc
popf
stc
adc
pusha
sbb
cmp
mov
pop
pop
inc
mov
jmp
pop
leave
mov
xchg
mov
divb
push
fdivrl
xor
incl
mov
push
aad
sbb
xor
xor
fidivs
mov
out
xchg
js
mov
arpl
add
decl
push
aas
sub
mov
imulb
dec
int
push
sub
jmp
fidivrl
dec
sub
adc
or
lock
mov
lret
rorb
cld
and
iret
inc
call
addr16
mov
push
enter
mov
cmp
mov
es
gs
adc
mov
mov
jg
mov
test
xor
jg
aad
clc
movsb
test
jno
or
scas
ljmp
in
dec
or
jmp
decl
lock
cs
push
frstor
push
shrb
std
jmp
mov
ficoms
imul
lea
cltd
dec
aad
pop
jmp
mov
push
ljmp
inc
xorl
sub
iret
sbbb
scas
test
cmpsl
jp
push
mov
push
adc
cmp
hlt
aam
out
mov
test
andl
loopne
jmp
je
jl
sbb
loope
call
cli
mov
nop
or
rcrb
pop
les
add
call
dec
fwait
xchg
dec
icebp
pop
mov
bound
in
subl
scas
or
mov
incl
dec
xchg
xchg
aaa
inc
sbb
xor
pop
and
movsl
jno
xor
in
call
mov
inc
adc
pop
and
adc
add
sbb
loop
inc
rorb
in
mov
out
and
or
data16
dec
out
hlt
pop
pop
cwtl
cmp
fbstp
shl
pop
jno
imul
dec
and
loopne
clc
xchg
sbb
movsb
aas
mov
sbb
ret
xor
ljmp
jns
enter
or
xorl
pop
lret
rolb
xor
sti
std
mov
int
push
sbbl
push
xchg
or
in
lcall
cltd
mov
icebp
fbstp
pop
push
mov
mov
ja
decl
lock
inc
jns
clc
jg
push
xchg
dec
jne
push
add
jae
push
ljmp
clc
call
add
mov
jle
fcomi
out
xchg
testl
int3
or
call
ds
data16
or
xchg
test
cmp
inc
mov
dec
test
test
push
xchg
mov
jmp
add
xlat
xchg
lcall
incl
mov
cmp
in
adc
xchg
andb
adc
mov
outsl
sub
and
dec
popf
cmpsb
mov
loopne
call
push
lea
or
cmp
pop
aas
loope
scas
jne
fidivl
aad
cltd
and
jne
lahf
je
pop
lock
rcl
mov
mov
cs
add
jp
mov
mov
incl
xor
test
cmpsb
pop
lcall
mov
inc
inc
out
mov
dec
sub
xchg
add
mov
xchg
scas
int3
dec
addr16
cmp
dec
in
das
lcall
jp
call
or
jno
pop
or
mov
sub
lahf
push
repnz
imul
loop
mov
xchg
mov
cmp
xor
in
xor
mov
and
jmp
mov
insl
repz
mov
fs
das
incb
adc
inc
sub
pushl
inc
jle
add
pop
mov
pop
loopne
je
sub
add
jbe
stos
pusha
jge
mov
adc
scas
repz
xor
cli
popf
sbb
ss
xorl
jnp
stos
fisubrs
fidivrs
shrl
int3
sahf
pop
add
lcall
sub
sbb
pushf
scas
test
inc
pop
fcmovb
cld
or
adc
add
mov
aas
jo
dec
inc
mov
mov
add
out
and
push
xchg
and
ljmp
mov
and
sbb
mov
mov
dec
stos
rcr
jl
adc
push
xchg
shlb
inc
xlat
sbb
xor
jno
rcrb
pop
bound
inc
lret
jmp
lahf
loope
shrl
xchg
es
jbe
mov
mov
xor
test
xor
shl
and
scas
hlt
cltd
out
ja
xchg
add
jae
and
testl
add
push
ss
lcall
or
push
rorb
adcb
xor
jnp
cli
jmp
rclb
mov
lds
iret
mov
mov
clc
lcall
jbe
push
in
lock
stc
xchg
add
popa
xor
xchg
cmp
sub
jmp
jl
pop
fwait
inc
lret
out
sub
xor
xchg
cwtl
icebp
hlt
loop
dec
cmpsb
adc
adc
push
jne
xor
lea
mov
add
adc
sbb
mov
jmp
mov
cs
adc
bnd
xchg
push
rcr
inc
addb
call
je
enter
pop
popa
int3
inc
sub
xorl
mov
loopne
cs
psraw
push
mov
jg
in
lds
mov
insl
cmpsl
ss
pushf
imul
nop
leave
inc
jg
cmp
out
iret
lahf
sahf
jmp
lods
or
fisttpl
pop
push
lcall
jge,pt
cs
and
cmp
test
cmpsb
inc
ljmp
movsl
lods
lea
sti
push
fsts
or
cmpsb
or
aas
mov
lcall
imul
lcall
push
xchg
sbb
test
pop
aas
mov
pop
pop
lret
icebp
incl
push
lea
add
ret
sbb
and
imulb
mov
inc
jmp
xorl
mov
out
xor
outsb
mov
incl
ja
mov
paddusb
fistpl
push
fsubl
imul
in
call
push
into
stos
aaa
and
fisubrs
imul
sbb
adc
mov
adc
sbb
jl
insl
in
scas
mov
cmp
testl
add
call
stos
cmc
stos
das
test
jne
mulb
ljmp
push
sbb
mov
nop
in
mov
jmp
enter
aas
or
xor
adc
mov
xchg
iret
outsb
xchg
pop
xchg
insb
dec
arpl
decl
test
xor
xchg
adc
mov
jne
dec
in
jo
xchg
dec
dec
and
js
xchg
xchg
test
fisttps
fidivl
ret
and
nop
lds
jns
shrb
lcall
incb
push
adc
ss
std
fsubrl
iret
or
lock
arpl
mov
mov
test
je
pop
ret
inc
jge
rcl
jg
insb
cmp
dec
aas
ds
mov
push
jo
pop
push
outsl
lods
lret
cmpsb
lret
fwait
mov
pop
dec
or
sub
pushl
sbb
mov
fldl
and
std
lock
and
push
sub
lret
pop
sti
rclb
pushf
mov
jge
xor
fldl
cmp
push
test
jl
push
mov
mov
push
cmpsl
jmp
adc
xor
adc
lds
call
out
fwait
pusha
jp
and
lret
add
jae
dec
xchg
xchg
jg
dec
xor
int
sarl
adc
jecxz
jb
mov
push
popa
into
jg
call
imul
outsb
dec
mov
mov
iret
or
or
dec
mov
inc
in
mov
lcall
int3
popa
mov
sub
dec
push
sbb
lcall
dec
pushf
daa
das
mov
inc
sbbb
int3
xchg
sti
out
push
pop
dec
xchg
dec
popa
int
jmp
mov
inc
scas
jne
push
mov
icebp
stc
add
xchg
push
les
lcall
lret
pusha
movsb
incl
sahf
out
lahf
add
sub
fcmovnbe
pop
push
cltd
movsl
ds
lahf
pushf
dec
xorb
pop
add
ret
repz
pop
aad
bound
leave
sub
push
call
dec
pop
mov
clc
incl
jmp
or
lahf
mov
shrb
lahf
dec
sti
jmp
stc
movsb
and
mov
sbb
stos
sbb
mov
fistpll
pushl
jae
push
pop
icebp
and
and
lret
mov
xchg
rcl
lcall
sbb
pusha
in
inc
test
lea
push
jne
movsb
push
mov
aaa
aaa
je
cli
jmp
out
test
rorb
jg
add
push
xlat
xor
mov
add
xchg
shrb
push
stc
add
mov
mov
aad
int
imul
sub
dec
jle
add
ljmp
mov
repnz
lret
mov
bound
or
xchg
cwtl
xor
inc
push
hlt
out
shll
and
into
lcall
incl
dec
jne
jmp
push
dec
pushf
scas
mov
adc
sub
xchg
in
test
call
popa
mov
xor
stc
dec
test
xchg
mov
sbb
push
js
jecxz
lcall
fistl
jmp
cmp
pop
push
and
test
incl
loope
mov
repnz
leave
mov
sbb
mov
mov
call
cld
xlat
inc
fistpl
jne
xor
data16
jg
lods
dec
dec
inc
test
incl
lock
add
pop
cmp
xchg
loop
into
sbb
cmp
jns
adc
sbb
sbb
incl
in
xor
pop
adc
nop
sbb
inc
xchg
dec
in
clc
jg
jg
jge
push
loop
data16
popf
mov
and
adc
imul
add
sub
aaa
cld
mov
xor
stos
aad
mov
mov
pop
outsb
out
inc
mov
test
jmp
pop
popl
mov
xchg
std
mov
loope
movsb
jg
cmp
decb
mov
cmp
cmp
int
push
cmp
push
jmp
or
icebp
lea
stos
push
inc
adc
jb
and
addr16
call
lock
xor
xchg
dec
imul
add
adc
shlb
das
int
ljmp
mov
in
inc
sub
push
addr16
xor
sbb
mov
sbb
ja
dec
test
mov
xchg
mov
adc
and
mov
decl
cltd
jge
lahf
jmp
mov
into
stos
add
mov
xchg
sub
incl
jb
lods
cmp
mov
jmp
mov
mov
and
test
jmp
push
or
lcall
in
inc
mov
pop
jl
xor
into
sub
lock
incl
mov
mov
inc
sbb
imul
mov
ret
xchg
fbstp
jns
scas
clc
call
and
out
cld
inc
ret
les
xchg
test
jno
decl
setne
mov
jl
cmpsb
mov
jmp
mov
jg
adc
movsb
test
in
sub
fcmovnbe
add
scas
and
pop
insb
sar
mov
add
xor
sub
xchg
dec
push
outsb
enter
fldt
incl
mov
xor
test
stos
jg
notb
or
mov
dec
out
fidivl
jns
int
mov
fwait
xor
sbb
rcll
adc
shrl
xchg
pop
mov
hlt
ljmp
and
xlat
imul
dec
ss
stc
aas
sub
mov
add
add
cs
xor
outsl
out
popa
dec
jb
mov
push
add
mov
xor
mov
xchg
mov
stc
push
negl
insb
mov
aad
cmp
lcall
xchg
mov
push
ds
or
inc
imul
xchg
adc
xchg
xchg
add
popf
sub
dec
loopne
ret
data16
or
pop
cmp
cmp
out
mov
cmp
roll
test
cld
cmp
xchg
es
adc
mov
mov
repz
jne
hlt
dec
outsb
std
jg
mov
das
out
cmp
test
adc
jl
sbb
decl
lcall
add
cmc
jle
out
mov
or
jp
repz
push
cmp
mov
push
push
jecxz
cld
pop
sub
cmpsb
ja
mov
or
xor
clc
pushl
gs
insb
push
cld
add
imulb
xor
lcall
cld
cmc
clc
jb
xor
adc
pop
ds
jbe
cmp
inc
and
lcall
fwait
jmp
push
xor
ja
add
cld
xor
mov
lea
repnz
call
shrb
jns
leave
test
ss
cli
inc
aas
ja
sar
jmp
jmp
dec
jbe
mov
mov
insb
shll
js
lea
lcall
imul
pusha
dec
jo
fistps
out
push
mov
mov
rcll
ljmp
decl
jecxz
xchg
jnp
cli
jl
jg
pop
cmp
fidivrl
add
mov
add
incl
subl
dec
and
movb
adc
dec
in
imul
jle
cmpsb
in
punpcklbw
or
icebp
cs
sbb
xchg
mov
pusha
insl
es
inc
arpl
xchg
stos
in
popa
xor
inc
xchg
cmp
imul
jmp
and
imulb
push
sahf
roll
jnp
lock
mov
out
jne
call
incl
cmp
cmc
xor
adc
lret
ljmp
cmpsl
scas
xor
mov
jmp
bound
inc
lods
and
pusha
and
es
sbb
scas
fldt
std
sbb
cltd
sbb
inc
mov
cmp
sbb
xchg
sub
ljmp
xchg
dec
sbb
sbbl
pop
mov
sub
imul
mov
loop
add
xlat
inc
test
in
pushl
test
repnz
imul
pop
mov
aaa
pop
xchg
call
cmp
mov
int3
iret
ret
insb
aad
pushf
loope
rolb
mov
das
dec
pop
pop
xchg
pushf
sarb
inc
insb
xchg
movsl
push
pop
or
lds
dec
xchg
mov
pushl
loope
into
aas
lds
cwtl
sbb
xor
mov
cmp
push
loop
sahf
adc
aam
aaa
jb
loope
jg
or
xor
sub
dec
lahf
add
adc
sti
lcall
shrl
aam
add
pop
cmp
xorb
mov
aas
mov
mov
fst
push
ret
mov
lahf
xchg
inc
not
mov
loopne
dec
loope
xor
jae
pop
daa
in
push
test
and
jmp
out
mov
movsl
gs
push
test
fldt
fdivrs
int
notl
shlb
and
mov
into
out
scas
dec
movq
cli
sahf
and
add
push
into
jecxz
jo
repz
pushl
outsb
jo
std
movsb
scas
adc
xchg
mov
jp
sbb
jnp
xor
jb
push
out
mov
adc
cs
mov
rolb
roll
push
pop
gs
test
xchg
mov
inc
lcall
adc
out
test
in
mov
sub
xchg
mov
ja
call
and
jl
in
jmp
mov
jno
or
out
mov
add
test
ljmp
add
mov
scas
imul
inc
jnp
inc
add
push
ds
lds
xor
in
mov
push
sbb
jg
cmc
sbb
loopne
cmp
pop
loopne
test
and
mov
insb
jmp
pushf
decl
pop
rolb
sbb
out
aas
push
or
les
lods
ficoms
cs
pop
out
dec
rcrb
mov
push
das
outsl
lahf
pop
dec
aaa
add
in
inc
lea
fs
mov
fbstp
roll
imul
pop
cld
movsb
mov
push
xchg
and
mov
adc
dec
pop
sbb
mov
cmpb
scas
jbe
mov
ljmp
push
mov
sbbl
lods
stos
test
mov
into
inc
adc
jmp
pop
dec
cltd
mov
lods
mov
out
loop
aad
xchg
adc
jmp
lods
ljmp
movsl
jns
test
loopne
sub
mov
pop
bswap
sbbl
cmp
jg
lret
jle
xchg
mov
fimull
insl
inc
push
jns
mov
and
incl
push
push
xor
test
mov
or
lods
jmp
scas
jl
imul
xchg
les
ret
mov
mov
jb
lahf
dec
ret
xchg
jae
mov
mov
scas
stos
mov
jle
icebp
sub
decl
cmp
mov
sbb
repz
roll
sbb
call
lods
sbb
mov
pop
loope
into
pop
cmp
mov
add
jbe
call
outsb
push
xor
or
bound
out
repnz
xchg
sub
pop
ss
sbb
mov
jmp
fstpl
aam
mov
mov
inc
mov
push
data16
mov
inc
out
push
cmp
cmpsb
dec
fwait
push
dec
dec
push
and
mov
inc
sbb
pop
mov
incl
stos
pop
bound
cld
mov
enter
out
xor
jp
clc
fmul
dec
lret
hlt
ds
les
jmp
or
mov
test
mov
insb
xor
mov
xor
pop
dec
add
push
and
fsubs
adcb
ss
adc
xorl
das
jp
jge
or
lret
es
jle
push
fsts
push
loope
mov
xchg
lahf
nop
movsl
mov
arpl
rcrl
jbe
cltd
xor
fildll
cmp
dec
adc
incl
push
push
mov
js
loope
xchg
mov
inc
movsb
mov
daa
out
arpl
lock
call
addr16
cmp
jecxz
jge
jmp
loope
leave
and
out
cmc
pushl
mov
arpl
mov
fildl
adc
sub
sbb
incb
ja
adc
out
jmp
pop
xchg
insb
out
out
xchg
pusha
mov
mov
aaa
cmp
fdivrl
pop
outsl
imul
and
test
cmp
xchg
idiv
pop
mov
mov
dec
clc
pop
test
cmp
push
mov
inc
je
jnp
rolb
dec
jns
jnp
and
mov
notl
sbb
inc
push
outsb
mov
push
cli
xchg
xor
or
mov
inc
sti
ljmp
pop
popf
rcl
xchg
mov
idiv
insl
sbb
add
add
fnstsw
and
mov
or
cwtl
hlt
fs
push
movsb
leave
daa
jl
cmp
push
pop
fmuls
ret
sbb
pop
sahf
mov
std
pushf
jmp
lds
inc
std
xor
xor
adc
std
les
lahf
or
sarl
ss
sbb
and
decl
mov
pushl
pop
insb
sub
and
popa
popa
mov
and
sub
fcomip
cmp
sbb
psraw
dec
add
cmp
clc
dec
out
jno
jnp
ficoml
and
or
xchg
mov
clc
push
jnp
shrl
and
mov
in
adc
jnp
cli
pop
daa
imul
ljmp
adcl
push
lods
xchg
daa
cmp
repz
movsb
cmp
cmc
aaa
mov
xor
clc
jmp
xor
icebp
and
mov
daa
cwtl
mov
cmp
add
shrl
jp
lods
jp
outsl
pop
rol
mov
jg
jg
jg
sub
stos
xor
or
sub
call
cli
popa
xchg
cmpsl
call
test
aas
test
repnz
pushf
lds
cli
or
inc
movsl
pop
and
ljmp
fists
lret
xchg
into
mov
movzbl
out
adc
mov
and
sub
es
dec
xlat
in
push
sbb
rep
xlat
push
incl
mov
nop
sahf
imul
pop
push
out
shlb
mov
dec
pop
fwait
fwait
push
divb
mov
sbb
scas
mov
lcall
jmp
mov
popf
sub
mov
jnp
ljmp
mov
aaa
in
out
xchg
mov
inc
inc
divb
dec
cld
pop
jae
and
xchg
mov
dec
pop
testb
add
sahf
loop
ja
xor
and
ljmp
sbb
sub
sar
mov
dec
jno
inc
lock
and
rorl
sub
xchg
shll
cltd
fdiv
sbb
test
cli
sti
adc
int3
xchg
sub
xchg
in
call
push
sub
adc
rorb
sub
dec
and
movsl
ds
jbe
lcall
incl
outsl
jns
mov
ljmp
mov
pop
pop
xchg
cmp
in
jb
pushf
xchg
rorb
call
dec
cmc
stc
push
loopne
das
xchg
fisttpll
and
dec
out
xchg
sbb
scas
not
leave
das
adc
incl
adc
mov
sub
popf
pop
es
icebp
pop
movsb
movsb
cmpb
and
pop
mov
scas
hlt
mov
insl
adc
xor
push
dec
sub
out
pushf
xchg
push
into
inc
out
outsl
clc
test
cmpsl
jmp
add
jmp
call
mov
and
aaa
jge
imul
or
enter
or
mov
push
in
out
xorb
int3
mov
mov
movsb
sub
ret
inc
adc
or
ss
lods
xchg
pop
jp
in
push
mov
insb
inc
sbb
ljmp
mov
gs
xchg
jne
or
push
loope
outsl
clc
fnsave
js
lret
sarb
sub
stc
cmp
decl
pop
out
sub
imul
repz
ds
js
and
jnp
jb
mov
in
jge
iret
popa
scas
push
or
jae
xchg
pop
push
pop
or
incl
xor
mov
aam
inc
nop
push
ja
adc
insl
clc
call
xchg
pop
dec
mov
jnp
rol
mov
dec
ret
inc
dec
mov
pop
push
popa
aam
cltd
int3
push
lods
and
out
nop
pop
loopne
mov
jmp
xor
xchg
dec
cmpb
js
test
jp
fmull
decl
mov
mov
ljmp
mov
idivl
xchg
or
test
inc
out
cli
jle
inc
inc
out
xor
cmpsl
aas
lahf
mov
fistpl
xor
sbb
ss
dec
outsl
test
adc
outsb
add
inc
ljmp
call
scas
cli
incl
aaa
lret
js
fisubrl
rcr
push
xor
shlb
jmp
mov
xorb
fisttpll
or
push
movsl
mov
stc
loop
out
dec
leave
adc
mov
xorl
cmovs
and
inc
push
fwait
call
sub
sbbl
xchg
scas
outsb
cwtl
dec
xor
add
dec
shl
adc
mov
mov
ja
cmp
push
xchg
push
icebp
adc
mov
loopne
push
xor
dec
lock
add
inc
lcall
sar
call
mov
add
inc
addr16
add
aam
dec
ja
xor
ljmp
add
gs
sbb
fisubrs
in
daa
out
push
decl
gs
xor
call
and
aaa
movsb
push
movsl
es
lock
incl
outsb
icebp
mov
insl
scas
popf
fmull
jg
test
add
mov
pop
mov
sub
std
and
sarl
inc
test
lcall
xor
mov
out
popl
adc
loop
and
dec
add
inc
xchg
adcl
call
notl
mov
or
data16
in
shlb
fchs
jns
out
les
decl
add
push
adcl
pop
int3
adc
mov
loope
add
std
fistpll
dec
cltd
leave
pop
lods
jmp
inc
aam
popa
enter
pop
or
call
lcall
lock
stos
sub
repnz
das
aas
inc
cld
mov
dec
loope
dec
mov
cltd
xchg
jno
ljmp
fimuls
lea
or
mov
bound
xlat
jae
ljmp
push
shll
xchg
add
cmc
clc
jg
pop
and
not
notb
leave
mov
push
cld
mov
repz
add
movsl
lds
lcall
mov
les
cmp
sar
pop
add
xor
push
clc
adc
aad
es
stos
fcmovu
std
es
pop
jno
fdivl
jo
sub
fcompl
insb
or
decl
xlat
add
mov
pop
fwait
aam
mov
adc
mov
ror
and
sub
push
fists
je
pop
adc
scas
push
cmc
inc
sub
mov
clc
cmp
loope
push
mov
scas
ljmp
jge
or
nop
inc
sub
sbb
dec
repz
jmp
mov
lcall
jg
dec
pop
scas
fcmove
mov
xor
mov
inc
cmp
clc
jmp
ret
aam
ljmp
push
xor
fs
cmp
mov
mov
xchg
popa
push
imul
frstor
push
inc
pusha
inc
insl
jg
push
mov
xchg
add
inc
dec
and
stc
inc
inc
popf
adc
fdivr
push
fwait
cmpsb
daa
das
loope
push
push
aad
aam
push
mov
shr
scas
sbb
push
imul
fisubs
into
cmp
adc
sbb
out
xchg
pop
add
shl
call
inc
int
mov
jg
cmp
lret
in
out
xor
hlt
jbe
xlat
fwait
xchg
bound
push
push
fsts
pop
jg
subb
ljmp
clc
jmp
sub
pop
inc
and
popf
fwait
jb
out
adc
dec
cmc
test
aaa
scas
out
pushl
jb
or
in
mov
pop
xor
bound
dec
ljmp
mov
scas
lcall
int
cmpsl
adc
lds
xchg
mov
ret
decl
inc
lea
add
xchg
inc
pushf
lods
cmp
or
mov
lret
popa
fucomi
cmp
lea
dec
sbb
lret
mov
xchg
xor
mov
lcall
mov
inc
push
pop
push
pop
aad
pop
outsl
out
pusha
mov
ljmp
decl
fmull
sub
mov
adc
mov
nop
cmp
cmpsb
mov
sbb
stos
dec
xchg
xor
gs
lcall
bound
mov
lahf
fbstp
sub
pop
lret
ss
stos
xchg
mov
fcomip
pushl
mov
jae
xor
or
adc
pushl
push
jg
sbb
xchg
push
xchg
dec
jno
xchg
mov
mov
pushl
arpl
bound
rolb
je
and
gs
lcall
ds
es
jp
inc
in
cmp
das
mov
incl
loopne
push
or
mov
xchg
cmp
sbb
xchg
scas
push
test
mov
push
fwait
movsb
sti
lcall
xchg
mulps
outsl
sub
jmp
test
xchg
pop
ret
mov
dec
cmp
jg
pop
cmp
cmp
outsl
or
and
out
cli
sub
cmp
mov
pushl
dec
push
js
lds
mov
adc
in
xchg
mov
std
jecxz
cmp
popf
in
iret
xchg
pusha
dec
xchg
or
sbb
push
add
adc
call
shll
add
dec
in
icebp
in
jb
sbb
pushf
sahf
stos
mov
lcall
mov
out
mov
xor
cmpsb
mov
data16
fidivrl
push
dec
out
jecxz
pop
cmpsl
sbb
push
out
push
lea
xchg
dec
pop
out
icebp
push
decl
or
pop
shl
repnz
cli
cli
pop
loope,pt
test
inc
jmp
imulb
jb
icebp
aam
pop
xchg
sub
mov
lea
jmp
jmp
mov
dec
xor
shl
add
loop
add
ror
xchg
fwait
sub
jg
sbb
jle
mov
mov
cmpsb
outsl
push
inc
or
mov
push
jae
callw
test
sbb
push
cmp
shlb
jmp
sbb
pop
test
repz
inc
mov
sub
add
cmp
mov
shlb
lret
xor
pop
jmp
add
sub
pop
ja
cmp
inc
xor
clc
mov
sbb
clc
push
sub
push
mov
xchg
sbb
jmp
sbb
daa
push
mov
xorb
or
mov
shll
call
xor
and
cmp
rcrl
mov
pop
insl
jne
daa
popa
mov
inc
ljmp
and
or
jg
xchg
out
jle
fwait
iret
adc
out
xlat
imul
xor
lcall
cmp
idivb
sub
mov
in
cmc
mov
mov
xchg
jbe
pushl
sub
aad
jmp
ror
cld
lods
push
mov
sbb
out
and
jge
out
das
cli
pushl
in
sarl
push
cmpsb
or
in
jnp
and
xor
sbb
jg
xchg
test
dec
mov
push
insb
out
sub
lcall
nop
inc
divb
mov
les
mov
inc
std
push
lret
sti
xchg
xchg
call
jp
les
xchg
loope
ret
mov
inc
cltd
xorl
lods
outsl
lahf
cltd
movsb
and
cmc
dec
cmpsl
sahf
jb
mov
mov
adc
leave
mov
inc
das
mov
faddl
pop
add
inc
aad
inc
jecxz
sub
fsub
add
pop
add
cs
xchg
xchg
and
test
xchg
pop
jg
movb
push
add
xor
mov
ljmp
stc
add
scas
mov
xchg
icebp
scas
call
cli
mov
xchg
fldln2
inc
fimull
cmp
add
add
sbb
jp
or
add
popa
lahf
xchg
call
shrl
mov
dec
popa
lea
or
sub
push
fcmovnbe
filds
jnp
dec
mov
repnz
out
hlt
xor
xchg
mov
or
inc
pushl
add
pop
test
in
cli
aam
add
mov
lcall
imul
jg
cli
fwait
lcall
out
iret
jecxz
inc
cmc
sti
mov
pusha
and
cmp
ja
movsb
mov
push
mov
jb
jnp
jmp
mov
lcall
call
pushf
pop
icebp
stos
bndldx
push
imull
das
lds
mov
call
jne
es
push
data16
inc
jle
xor
hlt
mov
out
leave
xor
je
push
jg
fistps
and
sub
pop
add
xchg
inc
xchg
sub
cli
aas
xchg
xchg
mov
dec
jmp
sti
mov
mov
add
xchg
scas
test
mov
jg
pushl
sbb
cmp
and
push
clc
jecxz
jb
dec
loope
into
scas
imul
movsl
out
xchg
mov
in
rcll
stos
mov
cmp
mov
xor
call
jecxz
aam
pop
jmp
push
fadd
add
xor
iret
rcr
pushf
mov
outsb
sarl
pushl
nop
in
cld
mov
pop
jmp
mov
in
hlt
sub
sti
add
xchg
jmp
mov
pop
xchg
pop
ret
daa
ror
jno
mov
in
mov
ja
or
mov
mov
std
rclb
loope
sbb
dec
cmp
ss
dec
fiadds
sub
mov
in
jle
stos
sub
in
jmp
push
incl
das
sti
xor
ret
insb
dec
je
sub
lahf
aad
lcall
pop
sbb
roll
lcall
or
mov
sub
and
in
push
mov
outsl
push
fildl
jle
pushf
xor
mov
je
shrb
out
add
push
cmp
cmpsl
fsub
jp
js
out
cwtl
cmp
push
scas
call
call
repz
sbb
stos
lcall
andl
adc
mov
and
sbbl
mov
add
mov
xchg
cwtl
mov
cmp
int3
sbb
push
ret
cmp
xchg
inc
mov
mov
incl
xchg
test
or
push
data16
jno
sbb
push
adc
adc
cs
lcall
gs
push
pop
jb
push
adc
mov
adc
scas
pop
or
jmp
push
int3
add
xor
ficoms
hlt
mov
andb
xor
insb
push
adc
jb
decl
js
roll
out
call
sbb
jle
push
pop
jb
add
fwait
repz
inc
cli
and
push
sub
xchg
in
adc
cmp
stos
mov
decl
mov
lods
movsl
push
cltd
test
cmpsl
dec
daa
xor
mov
cmp
incl
fwait
inc
push
out
mov
mov
test
pop
jae
andb
pushl
std
ljmp
sbb
fs
jmp
fwait
adc
adc
lcall
xchg
xorb
mov
cmpsl
jge
sub
pop
aaa
adc
mov
arpl
js
imul
mov
sub
dec
xor
cmp
lock
outsl
clc
mov
jl
pop
add
mov
mov
xor
cmp
sar
js
sti
and
cmpb
std
pop
hlt
inc
jne
or
loopne
jg
mov
cmp
nop
mov
cwtl
pop
jmp
adc
xchg
dec
mov
incl
sub
cmp
sub
lahf
pusha
fsubs
aaa
push
mov
lcall
sbb
jl
fs
aad
xor
xor
aad
incb
or
and
xchg
push
test
and
mov
jp
mov
sbb
cmc
fnstcw
sub
adc
mov
or
aam
sub
pop
ret
mov
add
xor
jmp
outsb
xor
sub
inc
and
subb
lcall
or
rcl
insb
xor
aaa
stc
dec
push
fptan
adc
ss
xor
bound
outsl
xor
jg
inc
jg
pop
dec
in
lret
dec
rorb
fcoms
in
sub
fninit
cmp
insl
push
and
mov
incl
push
ds
jle
in
inc
cmp
mov
stos
popa
stos
pop
jae
and
popf
pop
mov
dec
loopne
imul
sbb
mov
lcall
push
pop
sub
ficoms
jnp
push
sbb
adc
incl
lret
mov
sub
mov
xchg
lea
pop
aad
or
mov
in
mov
jmp
lea
stos
sbb
in
aas
dec
mov
add
repz
pushl
jne
adc
lds
sti
adc
mov
rcrb
shrl
in
xorb
lcall
sbb
inc
push
cli
iret
push
sub
leave
mov
loope
mov
push
cwtl
inc
stos
jle
pushl
imul
ret
sahf
nop
pop
sbb
dec
mov
push
lret
fcmovne
push
jg
jmp
fdivrl
fstpl
lcall
scas
movsl
std
mov
rorb
fsts
cmpsb
xor
sbb
into
pop
cmpsl
push
xor
push
pop
out
repnz
cmp
mov
inc
dec
jp
mov
mov
cmp
loope
xchg
lea
test
mov
push
adc
arpl
stos
mov
out
dec
xchg
adc
out
and
and
and
mov
mov
pushf
lret
xchg
push
rolb
add
add
push
mov
outsl
movsl
push
xchg
push
inc
call
cwtl
cli
mov
incl
pusha
call
stc
test
decb
daa
gs
jmp
mov
call
js
ja
mov
push
data16
in
sub
bound
or
pop
lods
jb
pop
jmp
xor
data16
fcom
in
test
stc
sub
leave
out
dec
cmpsb
aaa
or
mov
test
mov
pop
ret
mov
inc
mov
and
call
shr
inc
sbb
mov
enter
pop
inc
jb
pop
es
rorb
cwtl
call
xor
push
or
in
push
shlb
aaa
fcoms
dec
rol
lcall
ljmp
ss
repnz
stos
mov
add
stos
stos
push
mov
sub
cmpsb
fwait
dec
call
mov
mov
inc
xchg
push
fwait
adc
push
mov
jp
in
lcall
inc
add
std
idivb
shlb
hlt
sub
pop
out
cmp
nop
mov
and
mov
leave
cmpsb
jl
xchg
or
mov
vpshuflw
cmp
jge
and
ficompl
lock
mov
cwtl
cld
jg
cmp
push
cmp
icebp
mov
add
jg
mov
fcomip
cmp
mov
inc
cmp
fdivrp
mov
pushf
popf
fucomp
hlt
xor
les
jmp
xchg
pop
es
xchg
mov
push
cwtl
orb
pop
add
out
icebp
jle
inc
or
mov
bound
inc
sub
lock
mov
jb
call
das
add
jo
sbb
addr16
cmp
pop
sarl
adc
mov
aas
xor
mov
pop
push
das
push
cmpsl
je
pusha
iret
in
aam
rclb
insb
and
icebp
xorl
hlt
call
and
dec
xchg
sahf
jle
sub
les
loope
in
out
push
xlat
in
lcall
popa
xor
pop
movsl
sub
mov
push
lea
lcall
xor
int3
fists
xchg
push
js
divps
imul
gs
insb
pop
cmc
inc
les
pop
ds
hlt
fstpl
pop
inc
je
push
iret
jmp
incl
pop
orl
or
outsl
adc
inc
mov
daa
jmp
out
nop
dec
jnp
cmc
enter
jl
pop
mov
and
je
rcrl
and
gs
movsb
bound
xor
incl
xchg
stos
jns
shlb
sbb
int
pushf
add
imul
and
stos
scas
incl
mov
fmuls
imul
fdivs
adcl
in
iret
adc
pop
enter
aas
inc
jo
ror
call
cmp
mov
and
idivl
xchg
in
sub
and
and
pop
incl
sbb
push
rcl
inc
xchg
mov
cld
fsubl
dec
push
mov
dec
fwait
pop
mov
xchg
fstl
add
out
mov
pop
inc
push
cmp
das
das
aas
sub
or
addr16
dec
decb
dec
sbb
jmp
les
sub
lods
ss
rolb
aas
jae
cltd
sbb
jbe
and
incl
stos
data16
bound
cltd
jl
rorb
or
sbb
mov
and
ljmp
dec
shll
sahf
xchg
out
movsl
lods
dec
push
push
arpl
push
hlt
push
lods
stc
push
stc
dec
pop
mov
in
pushf
xchg
jmp
jno
out
test
ret
aad
xor
pop
mov
in
and
stos
sahf
jae
testb
lret
sub
out
lds
incl
movsb
imulb
xchg
and
mov
jnp
mov
in
jmp
loopne
or
imul
ds
stos
xor
push
frstor
sub
ss
ljmp
fdivrp
ss
stc
mov
mov
test
xchg
cmp
pop
jo
jae
outsb
roll
pushl
cmp
mov
or
xor
lcall
je
sub
rcrb
lcall
xchg
scas
jmp
out
lock
jl
and
pop
ja
push
sbb
mov
xor
jne
fidivs
ds
sub
ljmp
cwtl
push
cs
and
ds
mov
mov
popa
aaa
dec
jb
pop
cmpsb
jl
into
mov
cmp
shll
sbb
repnz
mov
add
mov
es
ret
lcall
dec
pop
jmp
rorb
mov
andb
cmp
decl
daa
sti
pop
adc
mov
in
aad
pop
insl
ret
lret
das
jge
inc
cmp
decl
mov
repz
mov
xor
sti
mov
mov
repz
pop
hlt
fwait
mov
insl
fiadds
xor
sub
js
lcall
cmp
jns
call
out
pop
inc
hlt
test
mov
movsl
inc
scas
jg
inc
dec
mov
das
data16
pop
sbb
push
rcrb
sar
jmp
test
xor
fists
xchg
out
adc
pop
fucomip
ja
push
scas
enter
call
cmpl
popa
shl
or
xlat
fdivs
mov
xlat
sti
mov
lret
adc
pusha
and
das
cmp
jge
mov
sub
incl
sub
pop
push
cmp
mov
dec
cmpsb
in
or
fcoml
orb
jmp
mov
dec
and
add
fstpl
dec
fildll
ret
ja
push
mov
add
fcmove
push
adc
mov
push
push
icebp
ljmp
mov
stos
push
pop
dec
into
lcall
cmp
jae
jl
inc
inc
lcall
popa
in
stos
out
shrl
rorb
add
out
in
cmp
mov
push
jmp
movsb
cmp
imul
push
mov
xchg
jns
sbb
arpl
mov
cmc
dec
cs
inc
adc
leave
jmp
in
jmp
pop
sbb
pushl
xchg
loope
jmp
mov
cs
scas
stos
ss
add
lcall
mov
jbe
sahf
jne
lods
xor
pop
into
mov
sbb
mov
int
incl
fadd
mov
sarl
pop
stos
lds
je
sbb
in
lcall
std
ds
das
push
xor
aam
test
outsl
mov
dec
inc
adc
jg
pop
and
fisttps
repnz
aam
sub
insb
ret
and
sahf
ljmp
push
mov
shr
ds
adc
push
xchg
test
int3
push
pop
pushf
push
add
jae
pop
ret
lcall
and
lock
scas
cmp
xor
cmp
pusha
icebp
pop
inc
jp
stos
add
lcall
arpl
adc
pop
loopne
je
inc
repz
lea
push
add
mov
xchg
and
lods
xchg
push
jl
call
mov
cwtl
mov
in
add
inc
adc
ljmp
shlb
sbb
cmp
dec
das
scas
setae
jbe
out
pushl
inc
std
aad
pop
imul
movsb
lahf
pop
jnp
adc
jle
dec
sub
addr16
incl
andl
aad
mov
cs
pusha
or
hlt
add
aad
push
mov
ljmp
cmp
dec
push
or
out
jno
sub
notl
xor
jg
decl
shlb
ss
sub
mov
gs
dec
pop
fdivr
mov
ffreep
or
sub
xchg
cld
xor
xor
cmp
and
inc
faddl
push
ljmp
cmp
dec
subw
sarl
in
cmc
xchg
hlt
clc
stos
mov
jg
cli
aas
and
dec
stos
jno
push
out
inc
negb
aaa
mull
ficoml
imul
shlb
and
scas
mov
call
jge
insl
imul
lock
inc
push
mov
fdivr
popf
scas
inc
pop
cmpps
pop
pushf
insb
ds
push
cmp
fcomip
cmp
mov
out
mov
fistpl
dec
jne
sbb
cmpsb
pushl
sub
dec
jle
cmp
sbb
cmc
push
mov
sbb
adc
sub
add
in
decl
jl
add
in
mov
dec
shlb
std
xchg
jb
aas
ds
mov
outsl
mov
ljmp
nop
pushf
out
in
insb
inc
rorb
inc
sbb
xchg
leave
and
dec
push
lds
jmp
notb
out
js
adc
mov
or
aaa
push
sub
dec
jns
cmp
cli
shlb
mov
mov
and
xchg
or
pop
inc
jl
lds
push
sbb
aaa
push
xor
subl
sahf
pop
and
pop
rcll
inc
push
fstps
outsb
mov
push
or
jnp
divl
aas
pop
cwtl
js
xchg
xchg
andl
lcall
mov
addr16
inc
loope
dec
lret
paddusb
cmpsl
and
fbld
mov
mov
mov
int
sub
dec
mov
mov
sahf
cltd
push
decl
jp
in
jp
jmp
adc
js
sub
xor
test
lret
xlat
mov
lcall
cmp
enter
pusha
push
movsb
add
pop
and
out
push
std
fwait
incl
rcrl
enter
loopne
out
xorb
hlt
push
inc
call
sub
int
lret
arpl
pop
xor
mov
xchg
shrb
ljmp
scas
pop
scas
and
and
pop
xchg
add
and
or
xchg
shrb
repnz
nop
pop
loop
adc
push
cmp
ficoml
bound
or
inc
cmpsl
ds
xchg
leave
movb
xlat
aas
shlb
mov
aam
out
daa
push
mov
jg
mov
pop
pusha
orl
sub
incl
jp
mov
rorl
mov
lahf
lret
stos
xchg
lret
dec
filds
ljmp
jb
cltd
sub
sub
mov
aas
mov
call
aaa
pop
dec
movsl
scas
sub
mov
add
in
push
loope
cmpsl
mov
rcr
ljmp
cli
aad
add
and
aaa
and
adc
mov
xchg
pop
dec
incl
push
rcl
cld
inc
in
aad
incb
lods
cmp
insb
and
jl
cmpl
pushl
mov
pusha
mov
scas
hlt
lret
jae
fstl
jbe
loopne
call
inc
ja
rorb
addb
std
xor
pushf
roll
lods
mov
pop
cld
pop
rclb
jo
dec
jl
fs
pop
leave
iret
faddl
je
fsubrl
fisubl
adc
lret
imul
cwtl
test
sub
mov
add
cmp
fisubrs
pop
ja
push
sub
and
push
sbb
fdivs
xchg
xchg
daa
inc
sar
inc
jle
daa
or
xor
ljmp
push
loope
xchg
xchg
psrld
or
mov
sbb
gs
mov
lcall
addr16
mov
shlb
rol
mov
fwait
rcr
out
ss
imul
decl
decb
aam
addb
gs
dec
mov
insl
adc
ljmp
fs
mov
sbb
push
pop
xchg
add
mov
sar
incl
stos
cld
sub
and
or
pop
pop
int
lock
in
cmp
push
movsb
jg
popa
fnstsw
xchg
cmp
mov
mov
dec
adc
and
push
in
leave
mov
call
arpl
mov
mov
xor
pop
outsl
fdivrp
sbb
push
push
cmp
lcall
xor
aad
mov
int
das
into
dec
jbe
push
idiv
push
aad
test
jnp
clc
pop
int3
outsl
adc
mov
cwtl
push
ret
inc
addr16
jl
call
into
jge
mov
aas
lret
jp
mov
into
popa
sbb
test
cmp
scas
scas
sar
incl
ss
lcall
mov
aaa
inc
jp
cli
outsl
lods
dec
and
jl
imul
xchg
outsb
dec
mov
jbe
lahf
popa
hlt
lret
popf
xor
decl
ficompl
aas
sbb
arpl
sbb
jle
fstpl
pop
fcomip
out
ficoms
mov
in
sbb
and
xchg
jp
mov
call
popa
cmc
insb
jae
adc
lcall
filds
jp
mov
or
dec
mov
push
pop
lods
add
cmp
repz
mov
aaa
mov
sub
jno
out
leave
inc
outsl
xor
cmp
arpl
sarb
mov
pushl
pop
mov
jmp
pop
in
in
cmp
out
mov
inc
sub
cli
shl
mov
call
mov
rorb
dec
push
lcall
or
cmp
dec
int
pushl
hlt
or
jnp
frstpm(287
xchg
sti
or
lret
pop
mov
mov
addr16
jmp
aam
ljmp
loop
fsubs
testb
setne
cmpsl
sti
das
sahf
roll
in
lahf
sbb
movsl
jge
dec
das
cli
lcall
imul
outsb
pop
int3
scas
dec
push
xchg
cli
dec
daa
xchg
fnstenv
icebp
and
sub
mov
jmp
xchg
dec
jp
clc
out
or
or
outsb
mov
rcrb
and
fdivrp
idiv
decl
xchg
push
out
jle
push
mov
and
push
sbb
gs
ljmp
mov
stos
jo
mov
ss
push
adc
in
and
sbb
lcall
jo
mov
int3
pushf
les
lahf
xor
jno
dec
xchg
jo
xchg
popa
mov
ljmp
adc
push
add
lods
out
fisubs
sub
decl
ret
lret
and
dec
test
stos
cmp
mov
dec
in
and
cmp
sti
cmp
fsubrp
mov
pusha
mov
add
pop
mov
push
jmp
imul
pop
test
dec
std
push
gs
xchg
pop
test
inc
leave
insb
inc
out
inc
mov
das
sar
outsl
pop
inc
or
push
dec
xor
aam
popf
inc
mov
outsl
clc
pushl
lods
in
or
lfs
pop
dec
test
jl
inc
jmp
or
jle
cmpsl
jo
pop
xor
dec
add
lcall
js
push
stos
ror
mov
cltd
mov
pushl
xor
push
fidivl
enter
inc
dec
int3
fbstp
call
stc
incl
push
rorl
push
roll
adcb
xchg
lds
xor
pop
call
jno
lock
pusha
into
stos
fcmove
inc
dec
pushf
cwtl
notl
sbb
fdivl
std
mov
add
add
inc
cwtl
int
loop
shrb
jae
je
pop
repz
call
sti
lods
clc
push
mov
loop
jmp
inc
cmp
and
jge
decl
mov
mov
insb
or
push
lret
xchg
clc
sbb
imul
jb
ss
popa
andl
inc
movsb
pusha
adc
aas
xchg
loopne
dec
jg
xchg
adc
and
add
test
push
pop
fcmovnu
hlt
mov
jmp
cmp
xchg
pusha
xor
in
add
add
ret
mov
test
call
aaa
cmc
inc
and
mov
jecxz
pop
cmpsb
add
idiv
adc
cmp
mov
jmp
xor
adc
push
out
xor
fiadds
inc
imul
dec
jae
push
aam
leave
mov
jmp
mov
cmpsb
pop
mov
in
dec
orl
loopne
xor
mov
xchg
es
jmp
mov
and
push
push
fdiv
fstps
aad
dec
shll
and
aam
xchg
sbb
jmp
jmp
nop
decl
push
push
jle
jmp
addb
or
outsl
sbb
inc
rolb
repz
add
lcall
pusha
jnp
loopne
or
or
fstl
mov
test
dec
mov
lods
cmp
decl
sub
loop
xor
movsl
pmulhuw
into
fistpll
mov
pop
ljmp
lcall
jg
pop
enter
adc
lea
das
jne
fiadds
loopne
stc
movsb
inc
movsb
add
out
add
sub
jbe
mov
aam
stc
push
cmp
sbb
sbb
dec
imul
jns
dec
push
and
incl
add
and
push
push
xchg
je
testb
push
mov
push
fwait
jle
inc
mov
sub
jb
jg
icebp
push
nop
mov
add
sbb
cmp
ljmp
sub
inc
and
dec
add
inc
lods
pushf
push
ljmp
subl
mov
sbb
cmp
sub
mov
je
adc
jp
cld
pop
cmpsb
dec
jp
cmp
inc
in
fadds
enter
push
push
xor
dec
rorl
push
xor
lds
into
in
or
push
call
sub
dec
popa
out
shrb
mov
push
hlt
mov
dec
xor
xchg
pop
hlt
fldl
fidivl
adc
mov
ljmp
ljmp
lock
hlt
ss
add
cmp
shll
fnsave
pop
int
jg
aaa
jmp
sbb
xchg
sbb
stos
inc
mov
cmp
mov
call
cmp
ficomps
jg
movsl
lret
jbe
movsw
test
cwtl
lcall
scas
lcall
pop
int
push
xchg
mov
cmp
shrb
xchg
and
lds
xchg
mov
or
popa
lea
or
cld
imul
jb
pop
xchg
mov
pushl
pop
int3
in
roll
in
sbb
xchg
out
mov
dec
mov
xchg
scas
or
bt
lcall
xor
xchg
xchg
jl
and
and
add
ljmp
mov
cld
adc
mov
mov
jo
mov
and
test
aas
les
jg
mov
xlat
pop
xchg
test
mov
cld
sti
pop
pop
adc
and
cld
outsb
pop
movsb
fstpl
ljmp
shlb
sbb
ret
jmp
mov
cmp
int3
loop
lret
cmp
jno
or
push
push
inc
push
add
pop
add
fcompl
stc
jl
cmp
xchg
jne
stc
aaa
aam
inc
jmp
rolb
mov
mov
mov
sbb
xchg
es
hlt
mov
sbb
jg
shlb
jle
xchg
mov
xchg
orl
sub
and
sbb
jmp
jb,pt
insl
xchg
pop
push
fists
fwait
mov
and
add
push
ret
sbb
out
pushf
and
lcall
sahf
repz
add
cmp
insb
aas
push
fdivrs
into
js
push
mov
imul
push
loope
decl
frstor
shll
mov
xor
imul
std
inc
movsl
mov
mov
sti
mov
mov
mov
inc
pusha
clc
cmp
gs
inc
cmp
ljmp
mov
cli
rcrl
or
clc
mov
aas
mov
mov
cltd
gs
or
pop
or
xchg
cs
js
jmp
mov
test
pslld
jo
mov
call
leave
cmp
inc
cmp
mov
xlat
dec
scas
xor
stos
sarb
lahf
mov
xor
push
cmp
jne
out
push
pop
int3
data16
push
adc
sbb
lea
cli
mov
mov
fidivl
fimuls
mov
aas
push
repnz
jnp
xchg
cmpsb
fstps
ret
adcl
push
push
and
loopne
xchg
or
fsubr
jb
pop
jmp
stos
pop
enter
pop
cmp
add
negb
jle
je
call
or
ror
inc
cld
mov
dec
clc
jae
aam
jecxz
into
dec
clc
in
push
lret
cmp
loop
out
aam
xor
and
dec
mov
adc
int
sahf
or
mov
dec
rclb
cmpsl
adc
cwtl
cli
dec
sub
ljmp
rcll
mov
jle
loop
add
xchg
add
loop
jbe
and
push
lea
pushl
movsb
jns
sub
mov
and
in
shrl
out
cli
lods
ljmp
lcall
decl
lretw
jne
je
push
sub
stos
pop
roll
sub
jg
cmc
push
cmpl
or
mov
nop
leave
sahf
sbb
cli
fdivr
incl
mull
outsl
sbb
xchg
cmpsl
repnz
or
ja
ds
decl
sarb
inc
fimull
subl
lds
dec
stos
gs
cwtl
mov
movsl
stos
loop
out
jp
sbb
lods
addr16
pop
aaa
sub
add
fisubrs
cmp
mov
lea
ss
testb
pop
jno
daa
add
and
andl
pushl
shl
mov
mov
bound
outsb
imul
je
or
scas
sub
out
xchg
push
mov
adc
cltd
inc
xorb
iret
movsb
sbb
mov
test
xchg
mov
rcll
loope
dec
and
movsl
not
and
incl
add
jmp
push
xor
incb
out
jb
inc
and
test
out
stc
cli
jns
aad
mov
push
scas
pushl
cmp
popa
in
or
aas
jbe
shl
sbb
cmp
push
mov
cmc
decl
mov
cld
inc
xor
mov
sub
inc
or
rcrb
sbb
ret
shrd
stc
pop
jmp
mov
push
aaa
pop
sub
ljmp
push
adc
cwtl
fdivrl
cmp
bnd
ret
lods
js
and
push
jae
sub
out
jle
mov
ss
fs
xor
xor
call
lret
jp
xchg
fmuls
dec
fdivrp
pop
lock
mov
subl
pop
xchg
mov
scas
popf
jnp
fldl
sub
jmp
lods
jl
scas
xor
fisttpl
sub
loopne
loopne
inc
roll
jg
fisubl
inc
addr16
fcmovb
xchg
roll
nop
sbb
jg
out
adc
dec
stos
pop
pop
cmp
and
loopne
mov
push
call
push
lahf
jnp
pushf
out
pop
popa
dec
cs
jle
pop
mov
mov
repz
in
pop
or
decl
lcall
mov
je
xor
push
pop
aam
lcall
xor
mov
inc
stc
xchg
cmp
push
inc
sub
xchg
jne
or
or
jg
aaa
push
lods
std
shl
sub
add
scas
loope
fistps
insb
push
loopne
hlt
cltd
pop
icebp
call
sub
cmp
jb
loopne
lcall
fstl
inc
ret
repnz
dec
inc
mov
push
dec
fucomp
pop
jle
stos
in
dec
inc
lcall
xor
jnp
cmpb
pop
pop
xor
inc
cmp
jmp
pop
scas
lds
cmp
or
pop
mov
neg
loop
out
add
pop
ljmp
call
mov
push
aaa
cld
mov
in
or
lock
push
loopne
sub
int3
or
jmp
sbb
jmp
pop
popa
pop
add
insb
lds
shll
call
or
xchg
jae,pt
dec
lea
mov
iret
push
adc
mov
ljmp
cmp
fiadds
mov
jle
daa
sbb
ljmp
inc
adc
ljmp
sti
nop
out
mov
pushf
stos
cmp
push
jns
dec
pusha
inc
add
in
add
cmpl
mov
shll
scas
test
dec
jp
sbb
or
arpl
xor
jg
mov
js
jg
jo
adc
shrb
icebp
and
imul
or
mov
jmp
cmp
addl
push
sub
bound
fisttpl
lret
repnz
sub
fs
decl
sub
es
push
mov
xchg
push
push
sub
mov
add
fstp
pop
fildll
ret
add
mov
adcl
lock
dec
int
scas
mov
push
mov
xlat
xchg
add
cmp
rclb
das
push
jmp
call
dec
mov
iret
pop
adc
mov
jp
and
popa
aad
adc
sti
sar
call
js
mov
cld
ja
jnp
inc
xchg
out
dec
andb
mov
decl
std
push
imul
mov
loopne
lcall
add
mov
sub
popa
xor
adc
xor
adc
cmp
jg
in
sub
mov
out
clc
decl
jo
int
push
pop
xchg
test
lds
out
ljmp
subl
test
pop
mov
test
cld
shrl
jmp
jmp
jbe
test
dec
xlat
adc
jl
cmp
mov
push
cmpsb
clc
sub
mov
call
mov
sbb
clc
sbb
lods
mov
cmp
push
out
popa
stos
mov
pause
sti
pop
jmp
pop
iret
push
lahf
sbb
inc
pusha
xor
jge
js
fistpll
jmp
jg
sub
mov
pushl
jnp
scas
dec
iret
cli
lds
jg
imul
das
pop
ja
pop
lods
rclb
sti
incl
and
sbb
aad
jp
and
out
mov
scas
js
je
je
stos
and
mov
in
jp
adc
cli
jbe
mov
or
push
sbb
and
pusha
cmp
mov
stos
add
jmp
dec
decb
xor
jmp
nop
jnp
lods
cmpsb
icebp
xchg
das
xorb
jmp
jle
push
push
ret
inc
repnz
aas
sub
inc
paddusb
movsl
lret
cmpsb
sub
out
jecxz
incl
sbb
leave
loopne
fwait
pop
mov
fnsave
mov
mov
inc
dec
mov
or
adc
out
roll
pusha
dec
sarl
fs
fwait
mov
decl
insl
push
sti
dec
test
in
add
ficoms
inc
or
pop
mov
lods
mov
mov
repz
rol
push
aam
stos
and
fdivrs
pop
decl
dec
nop
leave
and
into
xchg
add
mov
push
ror
sbb
pop
push
loop
mov
mov
call
rclb
test
sbb
repz
mov
decl
fs
enter
outsb
fisttpl
loopne
mov
jle
add
inc
push
imul
gs
pop
pop
lcall
rolb
dec
shll
mov
pop
lock
mov
cmp
mov
cmpsl
cli
mov
xor
xchg
stos
sub
cld
push
dec
stos
flds
pop
pop
dec
pop
lret
pop
mov
lret
xor
ljmp
movsb
cwtl
js
loop
ror
push
loop
inc
inc
sarl
dec
push
pushf
jecxz
pushl
sub
mov
add
inc
push
and
or
testb
rclb
clc
addr16
pushl
cld
inc
jg
je
or
lock
sbb
xchg
pop
in
loope
addr16
into
fwait
call
cli
call
stos
mov
int3
call
xor
sbb
or
jnp
lret
jge,pn
shll
rorb
ljmp
push
dec
movsl
pop
sti
jge
sti
movzbl
mov
repz
movsb
push
cmp
lods
out
iret
into
pop
repnz
incl
sbb
jmp
sti
sub
out
jno
imul
clc
lcall
call
and
pushf
pop
popf
xor
sahf
flds
incl
arpl
scas
push
jecxz
cmp
lods
push
pusha
stos
aam
test
jns
pop
call
decl
mov
ljmp
push
mov
push
into
xchg
mov
inc
jae
call
mov
push
sbb
inc
and
dec
push
sbb
and
out
mov
decl
dec
jno
pop
xchg
es
mov
lahf
fists
out
mov
out
addps
shlb
push
cld
push
xchg
ret
xchg
dec
lods
inc
cmp
jns
jae
add
test
sbb
and
cmp
movsb
stc
cmc
ds
xchg
out
clc
lcall
cmpsl
sbb
jae
lret
xor
pop
lcall
mov
js
mov
in
std
fadd
repnz
or
je
mov
inc
outsb
pop
cmc
xor
mov
mov
das
cli
jg
mov
out
sti
pop
cmp
sbb
push
fs
pushl
hlt
pop
mov
mov
gs
xor
sbb
jne
fld
mov
ficompl
xor
jmp
sub
arpl
outsb
sub
mov
cmp
lcall
daa
sub
push
scas
scas
or
mov
out
std
ret
scas
clc
inc
pushf
and
into
sahf
and
jg
mov
xchg
fdivs
inc
sbb
in
cmp
xchg
push
cld
int3
ljmp
sub
data16
loopne
out
push
pop
fcmovnbe
xor
stc
in
or
sbb
pushl
loope
sub
adc
jge
adc
xor
cmp
leave
inc
mov
out
es
mov
cli
dec
pop
add
jge
jno
imul
mov
sahf
xchg
arpl
les
fistl
decl
ret
dec
pushf
jbe
cwtl
jne
mov
mov
jae
call
push
mov
mov
or
pop
mov
fistl
xor
adc
lock
ljmp
roll
or
outsl
cld
popa
xchg
and
rorb
mov
push
mov
fildll
dec
fsubrl
outsl
lahf
in
shll
in
mov
pop
or
add
cmp
lock
out
adc
jg
mov
out
jo
adc
cmp
sub
lods
ljmp
sbb
jg
xor
pop
xchg
stos
or
sub
pushl
lods
jl
fcomi
ljmp
iret
or
cld
aad
fwait
hlt
inc
das
add
scas
sub
sar
cmpl
mov
push
jb
out
ljmp
nop
in
icebp
push
mov
insb
rorl
daa
push
jg
xor
pop
dec
or
push
repz
jne
mov
xor
cmp
jmp
rcrb
cmpsb
or
xor
je
ds
repnz
xor
in
add
mov
loopne
call
negb
notl
std
cmp
fwait
dec
out
inc
pop
mov
mov
pushf
mov
inc
jno
shll
sahf
xchg
enter
in
jecxz
loope
ljmp
sahf
lock
pop
sarb
inc
pop
scas
jecxz
mov
imul
jbe
add
mov
jne
pusha
and
mov
jp
cli
ret
jecxz
mov
inc
rcl
addr16
out
cli
lret
mov
add
test
aad
mov
sub
outsb
pop
or
mov
pop
dec
lods
xchg
std
mov
divl
cmc
jl
xor
dec
dec
into
repnz
lret
call
and
jns
sub
xchg
in
push
notb
jge
or
lret
mov
cmp
repz
push
ret
adc
sbb
xchg
lea
dec
rcr
lcall
mov
add
inc
push
pop
ja
and
mov
ljmp
incl
mov
loopne
xor
push
jmp
loopne
inc
icebp
inc
mull
xchg
push
push
cld
add
rcr
mov
loop
fsubrl
and
sub
insl
push
insb
popa
fs
inc
bound
xchg
test
push
dec
fisttpl
lock
decl
pop
inc
inc
sub
loop
jl
scas
xor
gs
out
mov
lock
lret
dec
or
xchg
loope
mov
std
adc
sarl
and
mov
push
in
push
cmpsl
xchg
and
in
mov
icebp
decl
cmpb
das
icebp
adc
leave
mov
jmp
mov
pop
scas
inc
push
je
idiv
dec
fwait
popa
and
pop
add
jo
jle
cmp
nop
pusha
jg
xor
decl
fcmovne
and
lock
add
ret
clc
out
xor
push
enter
call
push
mov
stos
pop
cmpsl
or
add
decl
add
xchg
and
mov
roll
mov
add
push
aad
push
or
decl
xor
int
cs
int3
mov
jbe
mov
or
movsb
fwait
sub
pop
les
add
pop
loop
dec
data16
pushl
lcall
xor
enter
rolb
ljmp
lock
test
cmp
xchg
pop
ret
add
jne
test
xor
fnstenv
cltd
cmpsb
or
dec
mov
call
inc
insb
imul
cmp
and
frstor
icebp
pop
loop
xor
mov
pushl
fimull
sub
gs
shrb
loopne
inc
or
call
adc
jg
stos
xchg
push
mov
jl
xchg
out
add
xchg
push
popf
sub
icebp
fwait
loope
outsl
or
push
adcb
mov
push
push
cmp
mov
pop
pop
pusha
test
lret
inc
fwait
pop
into
sub
pop
in
arpl
push
push
mov
loope
out
insb
sbb
test
arpl
aaa
sbb
push
push
lock
inc
and
dec
inc
repnz
cmp
shrb
andb
and
test
stos
enter
push
sub
dec
sub
aad
mov
xchg
jmp
or
loopne
xchg
sbb
enter
cs
mov
mov
jl
in
mov
repnz
ss
inc
xor
mov
fcompl
pop
adc
mov
xchg
incl
pop
dec
outsl
sub
mov
inc
gs
cmp
incl
sub
bound
pop
or
insl
mov
orl
stos
aam
adc
add
incl
fs
leave
lods
js
test
xor
test
mov
outsb
mov
mov
sub
lds
xor
and
std
je
jmp
or
jl
cs
fists
push
pop
push
or
xchg
int
outsb
sbb
add
enter
lds
push
sub
ljmp
stc
pop
orb
push
pushf
out
add
xacquire
jp
mov
es
add
dec
push
jecxz
fadds
xor
sahf
and
test
xor
ljmp
jmp
sub
jecxz
xchg
pop
pop
sbb
cmp
outsb
bound
cli
jo
sub
adc
xor
mov
push
andl
pop
cmp
jmp
loope
push
or
rolb
add
lea
int
adc
adc
pushl
inc
repz
sbb
jp
mov
insl
arpl
int
rcrb
or
adc
rcrb
or
aas
jbe
mov
cmp
aaa
push
ljmp
sahf
rclb
fstpl
dec
xchg
inc
push
jns
mov
lods
and
loopne
jmp
and
subl
pop
popa
stos
stos
lea
daa
dec
enter
mov
lods
adc
lcall
lcall
lret
outsb
add
lcall
jmp
cmp
repz
and
inc
cwtl
jns
incl
mov
push
mov
mov
jg
inc
test
inc
setns
js
cli
mov
int
in
lock
in
hlt
pop
dec
inc
adc
incl
cld
xor
sbb
lods
test
xchg
dec
movsb
fdiv
add
xor
call
sub
adc
lcall
mov
stos
imul
mov
rcrl
das
cli
mov
mov
sbb
jo
sarb
mov
insl
mov
jmp
add
inc
in
flds
cs
adc
xor
pop
and
jg
lock
cld
scas
mov
pop
outsb
rorb
sbb
cmp
push
sub
in
push
dec
aam
lcall
jmp
push
mov
mov
bound
stc
mov
repnz
icebp
inc
pushl
cs
popa
test
jmp
iret
and
je
movsb
repnz
in
decl
ljmp
mov
cld
popa
push
jle
mov
dec
ss
test
xor
cmp
push
adc
aas
das
jo
js
pusha
cltd
hlt
inc
cld
xchg
and
mov
imul
add
lock
cltd
xchg
push
cmp
fildll
lds
push
mov
aad
fbld
int3
pop
add
stos
xor
fsubl
ror
mov
cmp
int3
dec
je
mov
js
jle
mov
adc
add
mov
push
sarb
cmp
cmp
cmpsl
pop
cwtl
popa
testb
inc
loopne
push
es
or
lcall
cli
inc
aaa
adc
add
jbe
mov
dec
loop
adc
ljmp
iret
adc
mov
mov
fwait
jns
je
call
sbb
add
cmp
or
add
cmc
sbb
xchg
or
mov
mov
ljmp
stos
test
fwait
div
cmpsl
mov
cmp
cmc
fmuls
je
add
mov
loop
xchg
or
ret
sbb
pop
dec
out
stc
hlt
jmp
roll
add
ljmp
outsl
loop
and
dec
add
sbb
aaa
jns
lods
mov
data16
jg
sbb
movsb
dec
mov
jl
mov
orb
jmp
jns
aam
aaa
xor
js
jmp
aaa
sarb
add
cmp
sub
dec
mov
sbb
into
std
dec
outsl
test
adc
filds
roll
decb
sbb
jl
mov
or
andb
sbb
lcall
jge
sbb
or
mov
push
push
mov
sbb
jmp
ljmp
insl
in
in
adc
mov
inc
outsl
dec
or
lods
mov
lcall
dec
xchg
jb
out
inc
test
dec
dec
sti
jns
imul
xchg
cli
jnp
push
xchg
fxch
rcrl
and
aas
std
xor
icebp
jg
mov
mov
xor
lock
sbbl
mov
ds
add
push
push
sahf
loop
jl
cmp
incl
jmp
cmpsb
inc
pusha
sarb
xor
not
stc
push
cmp
pushl
sbb
pushf
pop
fdivs
pusha
in
ret
shl
sar
jbe
jb
and
mov
mov
jb
call
mov
xor
pop
pop
adc
sub
ljmp
outsl
cli
jmp
jl
out
cmp
gs
lcall
mov
sbb
ss
nop
jle
sti
lcall
xchg
inc
cld
leave
mov
mov
mov
inc
fistpll
jmp
xchg
mov
push
call
push
xor
dec
mov
sahf
xchg
out
dec
pop
mov
sti
jns
popf
ret
pushl
imul
sar
add
xchg
xor
inc
imul
test
lcall
sahf
xlat
loop
inc
add
mov
mov
fsub
aam
push
lcall
stos
out
icebp
scas
lcall
and
xchg
outsb
pop
mov
dec
sub
mov
daa
not
out
pop
sar
cmp
dec
push
mov
jnp
mov
cmovo
push
mov
xchg
lret
sbb
jno
aad
jg
sbb
aas
lods
ja
lahf
icebp
in
xchg
ja
inc
mov
insb
fwait
push
mov
jg
into
rep
cld
jl
imul
add
jmp
popa
test
aad
daa
sub
call
xchg
jmp
repz
repnz
cmp
lcall
sahf
mov
lcall
test
mov
cwtl
jbe
adc
jne
add
out
ljmp
popa
sub
push
push
clc
cmp
rclb
pop
push
inc
roll
add
ljmp
icebp
xor
cltd
idivl
lock
and
pop
and
and
cmc
xchg
xor
push
push
dec
int
cmp
pushl
xchg
ret
lcall
hlt
in
popf
or
aas
cmp
adc
lcall
dec
cld
xor
push
or
hlt
mov
pushf
dec
icebp
movsl
decl
fbld
mov
sub
es
xlat
mov
lods
test
push
lret
mov
decl
mov
test
fidivrl
shrb
cld
out
dec
int
xor
sub
inc
mov
mov
bound
pop
push
sbb
push
mov
jmp
push
mulb
mov
sbb
or
sbb
pushl
dec
mov
stos
cmc
and
movsl
outsb
mov
mov
nop
dec
mov
and
mov
mov
fiaddl
jmp
push
mov
outsl
in
cs
fadd
xchg
sub
xor
inc
aam
sub
ljmp
mov
cwtl
lret
scas
jns
or
mov
fldcw
sahf
leave
or
pop
lock
cli
decl
imul
in
xchg
push
mov
jae
mov
mov
jg
cmc
aad
xchg
nop
push
xchg
enter
push
sbb
lds
jl
sub
push
lret
jge
cmc
mov
cltd
ret
pusha
add
cmp
pop
and
lret
adc
dec
jbe
ljmp
clc
pop
jge
pushf
cld
push
xor
lcall
jns
ljmp
push
cltd
cld
mov
dec
movsl
xchg
mov
sbb
das
mov
out
outsb
mov
jge
sbbl
inc
jo
aas
cld
xlat
mov
sbb
fdivp
mov
icebp
inc
fpatan
mov
push
xchg
ret
fidivrs
and
out
popa
cmp
bound
pop
jl
mov
fistpl
stos
out
cmp
adc
pusha
adcl
vmread
pop
aas
stc
in
data16
inc
out
out
dec
push
sub
push
xlat
lods
push
sar
decl
cltd
ja
dec
mov
hlt
test
outsl
pop
push
jl
stos
mov
inc
cmp
pop
repnz
in
mov
push
jecxz,pt
std
xor
adc
jo
imul
pop
fidivrs
inc
imul
adc
add
sahf
or
sti
call
pop
clc
and
std
cmp
jb
test
pop
cmpsb
call
mov
loope
jnp
cmc
ficomps
imul
jp
rcrb
mov
ret
xor
push
std
decl
jbe
sbb
xchg
imul
jle
cmp
ja
sbb
and
lcall
mov
inc
vmaxss
lcall
pop
in
mov
dec
das
movsl
fiadds
repz
std
mov
xor
jno
in
in
nop
test
sahf
xchg
xor
in
pushl
out
jno
jae
sahf
hlt
pop
mov
push
movsl
xchg
mov
inc
push
outsl
inc
dec
pop
lcall
and
mov
jge
in
pop
push
clc
adc
fidivrl
mov
sarb
lds
push
adc
mov
jecxz
aaa
jge
call
adc
js
out
dec
xchg
ret
jb
lods
incl
je,pt
add
outsl
lds
int
les
inc
fisttps
push
add
ljmp
shlb
outsb
out
hlt
dec
mov
cmp
jmp
mov
stos
or
mov
lock
xor
xlat
pop
and
jmp
dec
fisubrs
loopne
lds
xchg
loope
arpl
repnz
nop
fists
and
fiaddl
dec
fcomp
push
loope
mov
sbb
mov
cmc
or
adc
loop
cmc
push
jg
fsubrs
pop
mov
push
fildl
jmp
xlat
lds
lret
je
push
sbb
xchg
lahf
ja
shl
mov
dec
cmpsb
dec
cmp
xlat
mov
xchg
and
xor
add
adc
cld
inc
ljmp
and
out
mov
loop
movsl
add
les
mov
popl
aam
dec
mov
and
mov
ljmp
shlb
xlat
ret
dec
divb
adc
std
jns
mov
push
xchg
data16
push
std
ljmp
sbb
pop
jge
outsb
movsl
push
inc
push
xor
cmc
and
mov
outsl
call
mov
hlt
out
jle
lcall
test
xchg
fisubl
xor
mov
mov
jmp
fldl
loope
int
push
stc
scas
jo
scas
divb
inc
data16
scas
cmp
jg
cs
and
cmp
mov
lret
pusha
xchg
pop
mov
mov
jbe
jns
std
mov
sbb
jg
mov
aam
sbb
inc
and
mov
mov
cli
decl
cli
jp
mov
or
ja
in
mov
mov
jmp
lcall
arpl
dec
mov
rcl
or
js
jg
cmp
mov
jmp
pop
mov
in
arpl
xchg
lea
or
push
filds
cld
mov
or
icebp
insb
fnsave
pop
in
jg
ljmp
sar
pop
pop
sub
nop
fcomip
mov
loopne
add
inc
pop
xchg
pop
mov
inc
add
cmp
jecxz
fisubs
mov
add
cli
incl
or
scas
das
ret
outsl
ret
cmp
cmp
iret
dec
mov
iret
or
das
adc
cmp
push
frstor
inc
or
mov
pushl
or
push
sub
pop
xor
adc
lods
pop
arpl
sub
dec
call
xchg
enter
or
push
fiaddl
and
fstps
mov
lcall
aam
jns
cs
pop
std
out
lea
lods
jecxz
inc
aas
mov
cs
pushl
jno
imul
dec
or
dec
cmp
push
push
movsb
cli
xor
sti
or
pop
lret
dec
or
pop
stc
repz
out
lods
xchg
cld
mov
push
push
cwtl
out
jge
call
test
jle
or
mov
cli
dec
sbb
and
push
and
xor
dec
sub
call
ja
es
mov
inc
loope
xor
pop
sub
push
lods
push
outsb
jp
inc
pop
cmp
pop
jge
cli
incl
fcoml
ret
push
dec
mov
sahf
loop
mov
scas
xor
fbld
cli
mov
mov
add
mov
lcall
mov
mov
mov
sub
dec
adc
mov
or
and
incl
inc
loopne
addr16
shll
in
adc
push
inc
out
cli
decl
mov
stos
outsb
pop
mov
or
mov
bound
mov
ret
sbb
mov
xchg
test
insl
lock
adc
mov
jg
mov
dec
push
rcll
aas
sbb
loop
mov
sarb
adc
cmp
jae
clc
call
mov
pop
and
repnz
push
out
das
fs
sbb
daa
push
and
xor
das
stc
imul
arpl
stos
jge
in
pop
into
in
sahf
sti
add
fsubs
cmp
aas
xor
sbb
dec
lret
lret
mov
adc
push
lods
xchg
cwtl
imul
mov
add
adc
jl
js
or
notb
sbb
sub
addb
daa
dec
pop
sbb
mov
test
lcall
xchg
adc
ficoms
dec
dec
push
mov
dec
mov
aas
and
cmp
sub
loope
pushl
std
or
mov
xchg
dec
out
lock
pop
push
pop
bound
ud0
jmp
push
mov
fmuls
adc
out
adc
fs
out
daa
movsl
push
loope
fwait
inc
ret
ljmp
inc
sti
pop
testb
xchg
inc
popf
aam
mov
ficoms
cmp
ss
push
pop
fistpll
push
fists
pop
jg
test
xchg
cmp
sbb
mov
pushl
es
iret
and
mov
std
cwtl
adc
test
and
xchg
mov
push
push
leave
dec
cmp
repz
test
mov
loopne
push
mov
and
pushl
xor
sbb
sbb
xor
clc
inc
push
stc
adc
push
ss
outsb
jg
in
insb
insb
mov
cli
incl
push
push
lds
push
mov
or
mov
decl
iret
repz
push
lcall
out
pop
add
mov
jl
lea
decl
inc
cmp
shr
sarb
ds
xchg
or
push
cmpsb
pop
adc
ljmp
loope
testb
sbbb
iret
test
xorb
jns
mov
pop
pop
icebp
call
add
iret
and
ds
or
decl
outsb
int3
push
outsb
bound
dec
mov
cmpsb
icebp
outsl
add
sbb
jmp
push
and
mov
sbb
sahf
and
sub
adc
sub
add
ljmp
movsb
stos
loop
pop
or
lods
mov
inc
and
cld
pushl
sub
pop
mov
out
fnstcw
std
cmp
repz
push
pop
nop
push
adc
or
lcall
test
insb
add
fmuls
test
push
loopne
xchg
mov
mov
std
imul
sub
inc
les
lea
js
mov
stc
pop
fdivrl
dec
mov
mov
lds
fmuls
push
dec
pushl
push
add
int
sub
xchg
adc
xor
sahf
mov
or
push
fsubrl
call
dec
in
jecxz
xor
bound
in
push
dec
shrb
loopne
lea
imul
mov
push
mov
xchg
lds
ret
mov
jge
pop
bound
enter
daa
ds
sar
jg
mov
mov
fildll
inc
subb
inc
pop
add
jg
xchg
insl
sbb
mov
pop
out
pushf
dec
sbb
mov
xor
jp
and
int3
mov
lods
enter
out
push
stos
jg
pushl
cmc
push
fldt
jae
jecxz
add
fldt
xor
lret
lcall
or
cmp
cmp
xorl
jo
mov
fs
sar
push
mov
mov
movsb
mov
out
push
sahf
data16
popf
out
out
mov
bound
push
les
jne
es
ja
pop
sbb
ds
in
add
decl
jl
xchg
inc
push
insb
adc
xchg
std
push
mov
jg
mov
pop
cmp
pop
fs
jbe
or
inc
adc
ljmp
pop
jne
fsubrs
xor
movsb
scas
sahf
and
insl
scas
inc
lret
mov
adc
call
push
sti
inc
add
or
jno
notl
dec
lods
ljmp
into
daa
xchg
adc
roll
ja
jle
push
daa
xor
dec
mov
add
aam
mov
sar
jp
add
dec
test
or
fsubr
xchg
ffree
int3
ss
imul
inc
or
in
test
push
aam
rol
mov
xor
push
mov
mov
push
pushf
loop
ljmp
nop
mov
aad
adc
notl
jg
inc
xchg
out
std
in
incl
cmc
out
cmpsl
fs
aam
ljmp
loope
out
mov
das
adc
mov
loope
sbb
jmp
in
repnz
decl
xchg
xchg
mov
mov
scas
adc
dec
out
pop
pop
repz
aam
dec
xor
aas
sbb
lahf
std
inc
std
add
sbb
jae
lea
pushl
pop
mov
lods
test
mov
push
daa
or
test
push
ret
ljmp
ret
sub
inc
add
jmp
add
mov
jg
fadd
mov
adc
paddw
and
out
mov
cli
imul
je
sub
mov
xchg
ret
movsl
int
jmp
dec
popf
out
cmp
ljmp
jno
cmp
sahf
xor
loope
add
mov
fdivs
sub
into
dec
mov
mov
mov
dec
popl
mov
mov
sbb
add
xor
leave
in
or
pop
jl
cmpl
adc
out
sbbb
bound
fimull
out
inc
pop
ret
cld
repnz
stos
orb
insb
adc
dec
outsb
xchg
fcomip
jmp
xchg
ds
inc
sbb
cmp
pop
mov
cli
sub
pop
xchg
and
shld
cs
or
push
fiadds
push
punpcklbw
ror
out
cli
ljmp
push
inc
cs
adc
cmp
or
jp
add
push
sbb
call
aas
pop
movsb
hlt
imul
int3
testb
decl
mov
repnz
out
sub
leave
mov
aas
fcom
inc
gs
adc
add
pushl
movsl
pop
pop
sti
add
or
xlat
sbb
outsb
in
inc
test
cmp
mov
and
dec
mov
pop
incl
or
fsubrl
addr16
mov
ret
and
and
xor
inc
mov
imul
outsl
sbb
or
mov
data16
mov
pushl
shl
sub
daa
xchg
dec
fcmovnb
lcall
cmc
aas
in
or
mov
cmpsl
or
movsl
pop
out
inc
cmp
les
add
xor
int
movsb
xchg
push
jmp
dec
mov
jae
jbe
pop
add
push
ret
adc
lds
inc
pushl
adc
decl
mov
int
and
icebp
sub
fsubrs
push
sbb
adc
jmp
arpl
ljmp
notb
adc
add
notb
gs
mov
cmp
push
dec
mov
xor
insl
push
sub
or
int3
and
jle
or
idiv
jae
adc
icebp
mov
push
adc
push
call
arpl
rcll
xlat
test
decl
test
data16
iret
xor
lcall
dec
ja
adcb
add
cmp
lahf
cwtl
outsl
jmp
lcall
jb
mov
xchg
lock
js
adc
push
mov
jecxz
decl
add
mov
adc
jl
icebp
pusha
push
setg
push
popf
inc
loopne
sbb
inc
dec
lcall
cltd
sar
dec
fsts
pop
mov
pop
mov
mul
mov
call
in
fs
inc
aaa
mov
test
add
xor
cli
mov
decl
arpl
jae
inc
leave
push
inc
and
or
xor
xchg
into
fwait
pop
pop
sub
scas
clc
mov
push
fisubl
nop
sbb
call
inc
and
std
imul
bound
jae
mov
add
cwtl
lods
imul
dec
push
lcall
daa
sbb
mov
mov
cli
sub
cmp
and
pusha
or
jno
orl
sub
jmp
in
imul
pop
mov
pop
repnz
pop
sub
lahf
dec
sahf
sub
adc
mov
outsl
dec
repz
clc
lcall
leave
add
mov
add
mov
lcall
incl
adc
sbb
push
mov
pop
sub
dec
fisubs
call
cmp
lods
xchg
es
mov
push
fbstp
insb
sub
lods
adc
sbb
int3
pop
xchg
dec
fs
xchg
add
sbb
decl
add
cwtl
insl
lods
push
clc
clc
arpl
inc
mov
adc
test
jmp
pushl
mov
mov
sbb
xor
or
inc
scas
outsb
out
pop
mov
cmp
outsb
pop
int3
gs
fmuls
mov
pop
mov
in
insl
pop
xchg
mov
lods
imull
lcall
jp
bnd
pusha
jbe
nop
sbb
jge
dec
jg
incl
cld
xchg
out
mov
lock
cltd
inc
dec
xor
or
stos
ret
add
mov
pop
jg
or
iret
jae
rcll
mov
fsubrs
shrb
aam
push
ljmp
cmp
sub
xor
xor
out
fsub
out
xor
repnz
sar
fadd
in
test
bound
shlb
sub
sub
call
loop
out
ss
xor
cmc
ret
out
xor
mov
in
pop
insb
decl
out
lcall
ret
sti
jne
ret
pop
push
push
xlat
popa
insb
fwait
dec
ret
jg
ljmp
xor
xchg
ja
push
data16
mul
cmp
mov
jg
and
cmp
pop
adc
xor
mov
cmp
rclb
adc
xor
das
xchg
mov
cmpb
or
je
inc
add
jmp
add
call
xor
dec
pop
sarl
int3
les
fs
fscale
fyl2xp1
gs
and
mov
lret
lret
loope
data16
mov
arpl
inc
or
mov
das
nop
ss
push
add
xchg
lcall
in
stos
lock
daa
sbb
push
scas
pop
and
xchg
dec
iret
push
jmp
xchg
loopne
mov
adc
adc
mov
dec
ja
testb
push
pop
ds
loope
out
inc
cmp
jg
push
mov
popf
xor
dec
cmp
mov
adc
xchg
mov
test
and
jle
mull
mov
into
or
loope
sbb
ret
daa
sub
pushf
stos
inc
imul
nop
xchg
neg
lds
jmp
lods
mov
imul
enter
ljmp
xor
or
mov
pusha
fcoms
in
push
mov
hlt
movsl
jecxz
mov
sbb
jg
jnp
cmp
imul
decl
sbb
lods
sub
fcmovnbe
adc
pop
fs
and
mov
lcall
and
mov
jnp
stc
out
scas
scas
xchg
xchg
sbb
sbb
mov
pop
cwtl
push
sub
push
sub
push
mulb
or
sbb
clc
jmp
lods
fisttpl
or
sub
adc
sub
jmp
push
cmpsb
adc
lretw
and
out
daa
adc
ret
scas
mov
or
add
call
es
fiaddl
jo
add
inc
mov
neg
xchg
cmp
pushf
mov
das
lods
cmp
decl
inc
pop
xchg
test
test
je
or
pop
movsl
cmpsl
stos
int3
and
and
fmul
enter
in
sub
lcall
test
scas
adc
iret
jb
arpl
outsb
xchg
fstps
jns
dec
icebp
add
jmp
mov
and
mov
call
cmp
lret
nop
add
mov
sbb
call
mov
mov
cli
dec
sahf
push
adc
out
xor
shrb
ret
xchg
mov
lcall
push
push
repz
cmp
decl
add
jns
mov
or
inc
int
inc
repnz
das
push
cmp
or
fnstsw
mov
inc
sbb
fldl
add
sbb
cmp
mov
pushl
cld
inc
test
dec
sti
adc
enter
fmull
sub
imul
decl
sbb
sbbb
cltd
mov
ror
inc
roll
scas
mov
mov
cs
or
movsb
aad
outsl
das
mov
add
jnp
mov
dec
popa
and
cmp
in
add
imulb
in
lea
push
lods
lcall
js
pop
jmp
inc
cld
or
ja
sub
test
add
inc
mov
idiv
add
and
stos
sbb
inc
dec
arpl
xor
mov
fisttpll
mov
mov
xchg
xchg
push
arpl
mov
pop
dec
add
cwtl
xchg
fsubrl
cmc
test
lcall
data16
adc
cs
adc
mov
inc
or
mov
test
cli
incl
stos
cmp
pop
roll
xchg
jmp
scas
mov
pushl
cmp
out
add
nop
fcmovu
pop
mov
lcall
and
hlt
push
mov
and
add
aam
cmp
nop
int
mov
pusha
sbb
fcomps
pop
icebp
jge
in
cld
cmp
dec
pop
out
addl
gs
mov
xchg
pusha
push
jge
sbb
sub
mov
outsl
lods
sub
ljmp
ss
cmp
lahf
adc
movsl
adc
mov
pop
lods
mov
testb
sub
or
out
dec
and
lcall
xor
xchg
mov
dec
jno
mov
fwait
mov
push
aas
pop
cmp
fmuls
jmp
frstor
mov
add
sbb
or
call
loopne
orl
mov
repz
xor
rolb
ret
aas
adc
dec
mov
out
cmp
fnsave
gs
jecxz
xchg
mov
call
or
or
rclb
shr
mov
je
dec
call
and
popw
inc
cmp
cltd
pushf
je
mov
lods
in
push
xorb
pushl
incb
mov
mov
jmp
adcl
lret
test
cmp
stos
iret
imul
jmp
or
push
sti
inc
mov
xrelease
mov
stos
inc
mov
dec
push
cli
mov
fdivrs
xor
pushl
adc
loopne
and
pop
adc
data16
andl
push
incl
inc
cmp
std
xor
pushl
ja
fistps
cmp
into
adc
aad
push
push
scas
cli
aas
push
inc
sbb
xchg
mov
jg
mov
in
xchg
pop
mov
decl
and
jge
mov
movsb
add
mov
cmp
adc
ret
cli
idivl
jmp
movsl
mov
dec
sub
scas
pop
pop
shll
push
sbb
fistl
mov
jmp
movb
mov
fldt
add
jle
adc
cmpsb
pop
lea
jbe
cmp
fcompl
jae
ljmp
pop
lea
shll
out
int
xchg
xor
mov
fsubrl
inc
ljmp
push
sahf
xchg
pop
inc
mov
loop
mov
mov
lahf
pop
dec
lcall
int3
push
jp
pop
adc
cmc
xor
insl
jp
test
pushf
add
or
mov
loope
or
dec
mov
cmp
mov
test
adc
leave
rcll
fistl
movsl
ret
sub
enter
adc
lds
outsl
inc
mov
call
jg
popa
sub
movsb
lock
cli
or
mov
sti
fdivr
pop
faddl
push
cmpl
fidivrs
adc
cmp
rorb
lock
push
incl
adc
lods
lret
jecxz
mov
mov
sub
clc
ljmp
pusha
xchg
dec
push
inc
push
adc
jp
push
adc
stos
les
add
incl
push
sub
movsl
mov
sub
xchg
xor
lock
fsubrs
sub
add
gs
aad
cmp
pushl
sbb
shrb
lret
inc
jecxz
cmp
sbb
lret
jae
fnstsw
lcall
clc
push
out
jo
lahf
xor
sti
clc
xchg
mov
inc
imul
and
or
ljmp
xor
pop
pop
xchg
mull
xchg
not
repnz
testl
sahf
add
jg
lcall
xor
sbb
mov
in
xor
popf
mov
stos
adc
in
lcall
sbb
mov
pop
jg
xor
push
pop
cmpsb
cltd
movsb
mov
out
jl
xchg
and
cltd
mov
cwtl
jae
fucomp
faddl
xor
push
mov
inc
call
repnz
ds
mov
pop
fs
lds
iret
idivl
push
mov
aas
aad
xchg
push
bound
pop
and
lods
sar
mov
fcoml
cmp
mov
incl
scas
cmp
add
imul
dec
imul
sbb
jmp
push
jbe
sub
xchg
xchg
mov
pop
fsubrl
int3
lock
in
jecxz
popa
out
jmp
cltd
outsb
incl
push
jg
inc
insl
mov
push
test
test
ja
mov
push
xchg
sbb
jp
jmp
jecxz
cmovl
out
push
jnp
and
outsb
mov
or
popa
xchg
inc
xchg
jnp
lock
mov
sbb
or
fsubs
decl
mov
movsb
mov
pop
cld
insl
cli
rcrl
xor
lcall
pop
ret
lock
cmp
leave
ja
push
cltd
cmp
push
cmpsl
jbe
rcl
ja
push
sub
fcomip
or
iret
insb
pop
movsb
sub
jge
push
mov
lret
dec
cmp
jge
jmp
push
lret
jbe
test
cwtl
scas
cli
add
or
pop
hlt
inc
into
jno
and
leave
in
and
mov
mov
ljmp
mov
push
mov
popa
sarb
data16
sbb
cmpsl
cmp
jge
sar
sahf
fistl
xchg
mov
cmp
dec
call
xchg
movl
jmp
es
rorb
mov
std
sub
mulb
jp
call
jne
fbstp
fimull
mov
jae
fs
jae
jne
loopne
je
and
call
push
or
and
cmp
cmp
push
scas
xchg
stos
dec
cld
outsl
sbb
mov
push
mov
jg
ljmp
push
sbb
xchg
cmpsb
std
add
mov
inc
addb
repnz
scas
divl
std
cmp
shlb
jmp
inc
psubsw
arpl
xor
mov
fwait
cmp
call
pop
inc
lock
call
cmp
push
lods
xchg
imul
lret
push
popa
cld
call
dec
incl
aaa
stc
test
sbb
outsb
cmp
pushf
ljmp
out
and
xor
jg
jg
cld
scas
push
sbbb
in
push
xor
cli
cmp
lcall
addl
fs
sub
sahf
mov
fs
mov
add
add
fisubs
or
mov
sub
sub
and
jg
int3
mov
mov
cmp
cli
lret
test
sbb
je
enter
inc
sbb
jo
sub
mov
outsl
arpl
fbstp
jecxz
push
cltd
push
push
push
mov
fs
push
push
xor
divb
sub
decl
mov
add
aad
jle
xchg
aaa
xor
inc
adc
and
sub
call
inc
sub
pop
out
and
or
nop
mov
in
pop
cld
call
mov
popf
clc
iret
jb
xor
push
mov
sti
outsl
movsb
enter
pop
push
and
cmpsb
roll
pop
pusha
daa
fdivl
call
outsl
sbb
sub
inc
stos
xchg
xchg
sti
ljmp
arpl
mov
inc
das
clc
push
std
int
and
addr16
movsb
cld
sbb
xchg
movsl
cwtl
jge
flds
cs
adc
fs
aaa
int
mov
xor
cmp
cmp
imul
jmp
cltd
inc
add
js
push
ja
test
pop
mov
loop
mov
fsubrs
jecxz
mov
mov
cmpsb
outsl
push
popf
into
mov
imul
jecxz
cmp
call
push
repz
add
lahf
les
cmp
jle
daa
mul
gs
aam
cmp
pop
or
jmp
sbb
mov
ss
add
or
popa
int3
jb
rolb
sbb
mov
out
loope
test
xor
aaa
inc
rorb
mov
mov
outsl
sbb
pop
or
rol
mov
sbb
push
lods
jl
aam
std
push
mov
mov
ja
sbb
jg
test
bound
ret
mov
lcall
sub
cld
lods
stos
jb
pushl
xor
jge
jmp
lods
or
es
aad
push
push
iret
inc
nop
nop
or
das
pushf
push
outsl
clc
pushl
jne
add
push
and
pop
sub
out
xchg
adc
mov
sub
jmp
outsl
lret
test
mov
dec
dec
mov
pop
in
rcrl
xor
pushl
inc
fisttpll
xor
aam
int3
mov
or
pop
scas
sub
inc
bound
dec
dec
dec
inc
pop
jns
mov
jno
lcall
inc
out
or
xchg
pmullw
or
jge
pusha
jo
lds
jle
sub
ret
push
push
mov
fnstenv
push
jp
out
jb
icebp
and
decl
push
out
pop
rol
aas
pop
outsl
lods
cmp
insb
loopne
pop
and
js,pt
cltd
fcompl
or
ficomps
ljmp
push
test
push
add
pop
data16
daa
subb
incl
or
mov
fisttpl
mov
mov
icebp
mov
sbb
or
mov
jp
xor
add
call
and
xchg
fnstcw
jmp
and
jl
lahf
cltd
add
lea
ds
out
add
aaa
cld
pushl
sbb
add
xor
xchg
je
adc
cmovge
fucomp
dec
data16
push
test
ret
xchg
mov
scas
cli
in
test
sub
push
incl
pop
sub
das
push
lods
loopne
mul
sub
rclb
sbb
inc
pop
push
js
and
int3
xor
dec
xchg
ja
adcl
pop
fidivs
mov
cmp
push
jle
in
dec
push
sarl
xor
jg
loop
shl
or
cmp
push
dec
sahf
icebp
in
xchg
xchg
sub
lcall
fisubrl
sub
out
test
pop
sbb
js
loopne
jmp
cltd
repz
or
inc
stc
xor
and
jbe
test
ljmp
cmpsb
fldt
cmpsl
sub
popa
pop
jp
push
xchg
mov
mov
jle
movsl
xor
mov
es
jbe
call
stos
jle
and
xor
repnz
adcl
ja
adc
inc
ds
sti
mov
fstps
dec
mov
mov
sti
push
jl
xchg
shrb
mov
add
je
xchg
out
std
lcall
inc
mov
jne
pushf
decb
iret
pop
sbb
cmpsl
out
cltd
scas
shrl
or
pop
xor
mov
test
xchg
cmp
pusha
fsubl
mov
mov
or
pop
mov
add
arpl
cld
call
xor
rclb
sahf
pop
xchg
repnz
xchg
mov
pop
in
addr16
sbb
sbbb
xchg
jns
jle
outsl
xchg
mov
fld
cmp
fcomip
and
push
fildll
in
scas
mov
popw
jnp
imul
jmp
sar
cmp
daa
sti
movsl
repz
sbb
jb
repz
fbld
jne
outsl
mov
or
mov
sub
xor
clc
jo
add
xor
jmp
in
mov
fwait
jp
mov
adc
pop
dec
or
lret
mov
jg
pop
lcall
sbb
ret
dec
enter
and
mov
sub
repnz
cmc
pushl
push
jns
jo
pop
dec
mov
aad
int
sbb
dec
and
and
iret
idiv
decl
ljmp
mov
mov
dec
xor
jge
scas
mov
stos
cltd
jmp
jg
cmp
pushl
lret
inc
xchg
mov
add
std
mov
pusha
je
cmpsb
inc
repz
fcoms
add
ret
stos
pop
aas
dec
mov
dec
mov
inc
cmp
pushl
idiv
js
push
push
cmp
adc
push
and
pop
aam
insl
enter
ljmp
inc
mov
cmp
inc
dec
test
ljmp
inc
mov
iret
sbb
imul
data16
lcall
lock
jb
xchg
and
decl
stos
test
push
nop
roll
jo
inc
cmc
test
push
xor
push
xchg
xchg
pushl
jbe
or
loopne
imul
adc
sbb
jge
jp
mov
mov
inc
stc
negb
sahf
push
in
push
xacquire
mov
xchg
jno
bound
ljmp
ficomps
sbb
pop
aas
rcr
sbb
and
aas
mov
pop
cmc
ljmp
jp
in
push
fdiv
push
inc
lret
cli
lcall
cs
mov
popf
add
mov
in
test
in
sub
fdivrs
out
out
jmp
and
jecxz
sti
std
dec
sarb
mov
mov
lods
push
nop
push
jg
or
or
mov
lahf
into
jp
outsb
and
clc
lcall
cmp
rcll
mov
flds
pop
cmp
jnp
cmp
incl
movsb
sub
sbb
mov
rolb
addl
aam
mov
aas
call
loope
sub
inc
mov
outsl
outsl
in
pop
inc
ret
cli
scas
xchg
push
adc
cli
idiv
ljmp
mov
mov
push
jg
lds
jecxz
stos
je
jnp
gs
clc
call
jns
cld
mov
xor
lods
hlt
adc
out
and
add
and
sub
nop
std
imul
push
pop
ljmp
shlb
push
insb
sub
test
sbb
or
mov
adc
add
xor
jl
pop
cs
jle
xor
mov
jle
stos
dec
leave
ret
jmp
inc
pop
jns
jb
ja
pushl
cld
fildll
adc
push
pop
mov
xchg
or
scas
inc
mov
scas
inc
mov
es
adc
std
jno
je
dec
mov
cli
inc
pop
add
push
adc
fimull
cwtl
xor
or
pop
sbb
call
lahf
lds
inc
or
or
mov
or
mov
gs
xor
inc
leave
adc
repz
jmp
mov
push
xcrypt-ofb
cmpsl
outsb
cmc
xchg
into
dec
inc
test
jnp
out
ja
loopne
gs
ja
mov
scas
aam
mov
sub
insl
add
push
pushl
xchg
lcall
mov
stos
loopne
lcall
or
int
int3
pusha
enter
aas
repz
adc
ss
xor
cmp
rorb
sub
jmp
or
pop
xchg
lret
ret
in
push
loopne
popa
xchg
fnstcw
pop
mov
sub
xchg
scas
pop
fnstenv
mov
lret
out
stos
ret
incl
int
mov
push
add
xor
shl
enter
dec
add
cld
fiadds
adc
fs
sahf
es
or
loop
pusha
scas
jno
filds
pop
or
inc
mov
dec
iret
jge
cmc
and
pop
push
pushf
lret
adc
call
sar
sub
scas
fistpll
jl
mov
pop
in
jno
cmp
pop
mov
out
jl
jnp
adc
mov
sahf
subl
outsl
push
test
cli
aaa
pop
or
lea
repz
cli
rcr
push
pop
adc
call
mov
jmp
addr16
mov
fwait
xor
and
ror
mov
xor
hlt
jb
jb
jbe
jl
test
adcl
addr16
sarl
xor
pop
ja
mov
das
repz
push
pushl
push
push
mov
add
sub
mov
mov
pushl
sbb
inc
mov
jg
sub
ss
cwtl
test
add
orl
mov
cmp
decb
sub
divl
pop
adc
fidivs
sbbb
mov
dec
gs
jg
push
or
adcl
test
mov
or
movsb
xchg
lods
jle
mov
call
mov
inc
icebp
jmp
cwtl
gs
pop
and
and
push
and
js
add
call
jae
shrb
in
fwait
or
cltd
or
add
dec
test
jmp
test
sbb
insl
jle
sub
xchg
cwtl
and
lcall
dec
dec
pop
dec
ss
pop
xchg
and
cmp
xor
repnz
and
dec
xchg
pop
jmp
push
lods
mov
test
pop
pop
repz
mov
mov
pop
mov
rcll
outsl
adcb
mov
sahf
adc
mov
adc
daa
adc
pusha
mov
xchg
dec
enter
shlb
outsl
push
ret
in
pushl
cmpsb
xchg
adc
idiv
mov
clc
push
gs
ss
sbb
stc
and
push
xchg
inc
mov
test
pop
mov
inc
cld
jae
shl
add
pop
out
jne
jmp
pushl
subb
mov
xchg
jmp
mov
push
inc
test
adc
sbb
pushl
cmp
ret
icebp
jl
inc
or
sbb
pusha
shr
add
aas
aam
dec
pop
les
sbb
mov
dec
scas
shl
call
data16
pcmpgtd
subb
or
inc
je
dec
fmuls
and
iret
lea
fstl
inc
test
fidivrl
jb
repnz
loop
and
incl
push
push
insb
insl
push
adc
lock
xor
cmp
mov
jp
decl
jle
adc
fmuls
std
dec
out
stos
out
lret
xchg
je
out
mov
cmpsb
push
inc
jns
cmc
pop
stc
mov
testb
jb
mov
lcall
sub
add
dec
popw
mov
pusha
fwait
and
jno
ss
jb
ret
incl
cwtl
mov
cmpsl
test
ss
gs
enter
mov
out
clc
pushl
clc
push
idivl
hlt
loop
movsb
mov
cmp
push
jb
jg
add
and
aaa
jo
jge
out
push
ljmp
add
fs
cmpsb
fisttpl
push
add
cmc
in
lods
push
mov
xor
ljmp
pop
lahf
jnp
jecxz
lret
mov
push
ret
dec
mov
sbb
imul
ja
in
inc
and
jmp
outsb
xchg
jl
aas
lock
and
dec
lret
mov
jmp
outsl
mov
das
jle
cld
sahf
mov
call
add
jno
push
and
mov
sar
or
incl
mov
loope
inc
inc
sub
std
aad
int3
mov
decl
pop
mov
xchg
int3
or
dec
sub
insl
std
dec
dec
adc
push
dec
mov
loop
call
mov
cmp
cmpsl
scas
mov
cmp
adc
dec
lock
jp
jecxz
add
add
ljmp
xor
lock
sbb
mov
std
lods
bound
jle
ljmp
xchg
mulb
mov
out
add
aaa
loop
inc
sub
push
jb
mov
and
and
sub
pushf
add
mov
sub
sahf
test
pop
mov
dec
ret
jns,pn
clc
lock
insb
mov
xchg
lcall
dec
mov
and
inc
movsl
add
movsb
and
inc
xor
fsubr
xor
jg
push
pop
mov
mov
mov
sbb
jb
sbb
hlt
sahf
mov
incl
aad
fs
push
add
aas
and
dec
in
in
enter
sbb
push
cmp
inc
jbe
add
mov
push
in
mov
mov
stc
icebp
fwait
pop
notl
incl
hlt
in
adc
cmpsb
inc
es
sub
mov
and
adc
lcall
push
or
cmp
cmpsl
or
cltd
mov
sbb
push
incl
mov
fucomi
mov
adc
xchg
hlt
xor
cmp
shlb
lods
les
adc
jb
lcall
sub
lea
sahf
mov
inc
lret
daa
sub
popa
clc
out
into
popf
sbb
sbb
pushl
lret
popa
lea
add
jae
cld
loop
cmp
or
jns
mov
decl
movsb
je
jbe
mov
andl
xchg
cmp
shrb
gs
inc
int
daa
xor
mov
xor
sbb
shrb
sar
xor
testl
mov
jg
lock
push
fs
call
jmp
mov
mov
out
push
dec
incl
icebp
aam
inc
setne
aam
out
loopne
xchg
jae
popl
add
call
mov
aas
or
sub
mov
pop
scas
into
jp
inc
or
inc
filds
or
jp
sbb
pusha
dec
jo
or
sahf
cld
push
adc
jnp
test
ljmp
lea
or
cmp
sbb
jecxz
insl
mov
and
fwait
decl
shrl
leave
ss
sub
xchg
pop
outsl
cltd
cmp
inc
ds
pop
adc
ja
aaa
fidivs
inc
cs
mov
mov
out
int
mov
mov
xchg
es
pusha
inc
and
icebp
sbb
jb
mov
fwait
test
add
lods
loope
lret
ss
aaa
std
dec
aas
pop
mov
ret
iret
imul
aaa
cmc
arpl
popf
rcrb
pop
std
xor
jbe
stc
or
mov
inc
cmc
stc
or
lcall
fstl
cwtl
and
in
gs
jg
and
xor
sbb
mov
cmp
jp
adc
imul
jp
pushf
mov
xor
cmp
cmpsl
mov
movsb
add
imul
fcomip
sbb
fdivrs
mov
xchg
mov
dec
cmp
jg
test
push
into
stc
jae
add
mov
imul
test
out
inc
push
pushl
sar
js
stc
inc
pop
stos
aad
xchg
xorb
ljmp
xlat
mov
dec
in
in
dec
push
int
adc
stc
lahf
add
mov
data16
fldt
in
xchg
xchg
fs
inc
inc
inc
push
mov
inc
mov
mov
imul
cmp
inc
jne
mov
jb
jge
in
sbb
rol
jns
cli
pop
movsb
jae
inc
mov
sahf
push
inc
adc
movsl
ljmp
cli
cld
adc
mov
adc
add
xchg
pop
mov
xor
ljmp
and
imul
and
mov
cmp
dec
les
xchg
cmc
ljmp
incl
xchg
sbb
aas
popf
mov
rorb
dec
mov
je
icebp
jmp
gs
sbb
jns
mov
fadd
stc
mov
jno
cmc
push
mov
push
sbb
aaa
jge
inc
inc
hlt
ds
decl
sub
mov
lods
push
cs
push
outsl
mov
dec
mov
incl
inc
push
andl
in
mov
pop
idivl
lret
mov
ljmp
pop
cli
push
lock
pop
in
out
cmp
mov
xchg
adc
pop
aam
add
loopne
or
mov
push
rorl
ljmp
out
les
mov
mov
mov
cltd
lock
sub
dec
sub
mul
lret
sbb
sbb
jl
pop
mov
js
subb
ja
jg
test
mov
xchg
in
fwait
mov
push
decl
sti
icebp
dec
rolb
and
aaa
iret
loope
stc
inc
xlat
push
cli
cmp
cmpsb
push
inc
add
call
loopne
sbb
dec
into
frstor
rcl
push
repnz
cmp
xchg
movsb
push
sub
pushl
aam
cli
push
inc
or
leave
adc
rclb
movsb
jp
enter
mov
loopne
jg
test
sbb
push
mov
lret
es
icebp
in
fstp
push
stos
xor
fwait
sahf
mov
xchg
mov
outsl
add
push
and
mov
inc
jle
pop
pop
ret
jo
fmull
mov
mov
popf
jmp
xor
aam
sbb
stc
aam
rcr
xchg
adcl
xor
subb
dec
iret
push
in
cli
decl
pop
psllq
mov
mov
shr
aam
sbb
add
mov
ds
out
cmc
mov
adc
ss
lods
iret
mov
push
mov
push
ret
jmp
lcall
cmp
push
repnz
mov
cmp
aam
pop
popa
pusha
dec
sbb
scas
call
mov
add
push
enter
push
push
cmp
fidivl
jae
pusha
sub
pop
mov
and
out
pop
pop
cs
fdivrp
fildl
loope
imul
cmp
sbb
xchg
mov
mov
rolb
and
dec
lds
adc
test
mov
scas
jno
xchg
and
sar
cmpsl
notl
xchg
jae
or
cmp
scas
jae
pop
in
pop
sub
add
jl
inc
jns
inc
mov
add
cs
dec
jg
incl
jp
inc
and
xlat
jbe
cli
out
mov
lods
mov
out
add
dec
mov
loopne
test
fdivs
loope
mov
sbb
loope
jae
push
jne
test
add
push
push
test
sbb
dec
repz
adc
xor
fdivrs
mov
sahf
fbld
cmp
inc
or
imul
invd
mov
incl
sbb
icebp
inc
cmp
cwtl
lcall
ret
adc
out
clc
ljmp
stos
pop
iret
jp
dec
arpl
test
lods
mov
or
pop
ljmp
push
out
call
andl
pop
sbb
addr16
pop
sbb
loopne
inc
sbb
imull
fdivs
pop
adc
ljmp
call
mov
imul
cmpsb
and
ret
lock
mov
out
xor
inc
scas
je
ljmp
jae
fsubrs
mov
lahf
jo
movsb
pop
mov
lcall
sbb
jbe
shll
cmc
dec
scas
mov
push
insl
fwait
and
lock
inc
clc
decl
lock
mov
stos
stc
imul
stos
xor
aaa
cld
jmp
aas
push
addr16
or
mov
push
decl
jge
das
addb
and
mov
mov
sti
insl
add
mov
call
popa
in
aad
lods
int3
call
loope
rcl
or
push
in
mov
lahf
rcl
xchg
sahf
pop
sub
add
xor
or
cmp
aam
test
xchg
pop
jge
call
in
js
mov
push
bound
cvtps2pi
fdiv
add
pop
sub
cld
mov
test
mov
add
mov
pushl
jp
je
xlat
bound
xor
add
scas
stos
add
fsubrp
shlb
js
pop
dec
mov
fsubrl
hlt
xchg
jmp
iret
pop
mov
sti
jo
ds
push
daa
ds
mov
loop
stc
aaa
jno
mov
idivl
mov
jne
dec
ret
dec
jmp
enter
int3
js
lods
add
xor
ljmp
out
decl
std
push
cmc
bound
pop
inc
into
and
add
pop
in
daa
jmp
mov
popl
aas
mov
andb
pop
dec
xor
popf
sti
pushl
loop
adc
pop
dec
cld
pop
jns
mov
test
aam
adc
and
ret
out
mov
out
jle
dec
sahf
add
lds
fs
mov
repnz
frstor
in
incl
pmullw
adc
cmp
outsl
cmp
mov
call
shlb
shll
push
dec
cld
fnstcw
mov
add
adc
lret
mov
ljmp
jl
outsl
in
and
xchg
popf
pop
out
int
loop
xchg
pop
hlt
repnz
mul
sarl
xchg
incl
pop
lea
aad
pop
shl
test
xorl
insb
mov
addr16
stos
and
ljmp
movsb
jmp
dec
sbb
lret
mov
pop
jl
push
fstl
cmp
leave
popf
jmp
mov
aad
and
pop
adc
pop
ss
xchg
jnp
incl
hlt
add
mov
inc
mov
or
in
test
inc
push
adc
jecxz
in
or
mov
into
into
fcmovbe
stos
notl
sbb
out
pop
mov
xor
or
fcomip
push
cmc
insl
xchg
mov
sub
mulb
ja
iret
cltd
mov
mov
fimull
insl
pop
xor
inc
add
jae
inc
ret
mov
cmp
jo
inc
cld
dec
lods
mov
inc
es
adc
jg
sbb
ret
fwait
loop
add
loopne
cmpsl
sub
ljmp
fdivs
push
xchg
rcrb
ret
pushf
test
rcrb
fistps
test
leave
ficomps
out
jg
add
scas
scas
int3
lods
les
jne
push
push
xor
xlat
adc
roll
lahf
lcall
addr16
sbb
call
pusha
int
sbb
xchg
or
scas
test
shl
out
ja
lcall
and
xor
xor
lock
add
mov
pop
cld
push
xor
inc
mul
inc
pop
loopne
inc
push
insl
xchg
add
dec
gs
jp
lret
push
test
rorl
popa
ljmp
in
mov
jnp
das
setne
test
push
std
and
test
inc
mov
jmp
mov
or
sahf
and
pop
xchg
adc
pushl
mov
cmp
imul
imul
rcr
push
cld
movsl
and
xchg
sbb
adc
lods
incl
pop
jns
mov
sbb
mov
mov
lahf
test
rcrl
mov
mov
popa
imulb
cld
pushf
dec
sbb
shl
bnd
in
mov
mov
xor
jmp
pop
bnd
sbb
test
inc
mov
or
mov
adcl
test
cmpsl
push
sbb
jl
mov
inc
add
push
pushf
das
xor
testl
cltd
pop
out
lods
jne
sub
incl
in
scas
iret
push
or
ljmp
es
jmp
push
in
js
jae
push
in
dec
call
mov
mov
sbb
inc
cwtl
mov
decl
mov
movb
pop
nop
add
out
and
andl
cli
push
dec
loope
pushl
and
lret
lock
or
fchs
inc
and
inc
loopne
mov
cmp
lds
push
add
adc
mov
inc
push
test
jge
divl
add
pop
mov
inc
push
push
das
ret
test
pop
dec
test
jb
repz
jmp
outsl
pop
das
and
pop
sub
cmp
inc
or
jecxz
fbstp
les
enter
loop
push
and
or
inc
push
add
lret
pop
les
stos
xorb
mov
push
ficomps
xor
std
push
or
xor
addr16
popa
mov
lret
mov
xchg
push
pop
and
sub
xor
lods
in
pushf
call
clc
xchg
ja
mov
cli
psrlq
add
call
imul
cmp
arpl
mov
icebp
nop
dec
cwtl
xchg
pop
xchg
jle
mov
add
pop
loopne
flds
cmpsl
push
testb
and
mov
testl
jl
adc
mov
cld
roll
push
insl
pop
add
lret
addb
pushl
jnp
testl
addr16
hlt
xchg
adc
fmul
push
incl
sbb
sti
ljmp
cltd
cmc
fsubs
jns
mov
xchg
pushf
dec
xchg
arpl
and
in
ds
pop
sub
ljmp
idiv
adc
xlat
repz
inc
lret
add
add
jnp
push
movsl
ljmp
loopne
jno
inc
fxch
or
std
or
dec
in
mov
inc
push
loop
fisttpl
jl
icebp
mov
cmpsl
cmp
test
inc
adc
jns
xor
mov
call
faddl
mov
xchg
sbb
ss
addr16
loope
jle
call
and
and
pop
dec
mov
dec
and
movsb
pop
push
ds
in
js
mov
scas
jg
sbb
mov
mov
sbb
add
ffreep
pop
out
stos
lods
cmpsl
add
in
dec
lods
xchg
push
lret
inc
xchg
add
add
pushl
lcall
adc
pop
outsl
push
sarb
ljmp
pop
xlat
loop
jecxz
or
repz
jecxz
js
adc
mov
sbb
sub
es
jo
push
jae
je
mov
incl
rolb
fisttpll
mov
ds
das
pop
xor
fists
jg
pop
shll
mov
stc
or
je
push
sub
lret
lds
xchg
push
call
sbb
xrelease
push
cltd
xor
jb
inc
inc
pop
div
lds
decl
add
jp
push
cwtl
mov
dec
adc
pop
outsb
xchg
aas
in
lahf
fxtract
and
jmp
std
imul
sub
mov
movsb
jp
xchg
mov
aaa
xchg
lcall
jle
imul
push
mov
jo
loop
mov
stc
sbb
sti
push
jg
data16
daa
sbb
xchg
dec
cmpsb
insb
pop
fiadds
fisubs
cmp
sbb
jae
cltd
xor
lcall
test
fdivl
dec
lods
subl
ds
jle
jne
xchg
pop
ds
das
cli
call
xchg
push
push
js
mov
hlt
push
push
lcall
xchg
push
xor
aas
and
fisubs
dec
mov
pop
fwait
popf
push
jmp
mov
cwtl
mov
cmc
pusha
lods
sbb
lret
ljmp
dec
add
or
dec
into
push
cmp
sub
pop
cmp
js
insl
out
inc
pusha
ja
cmp
outsl
add
int
dec
mov
fcompl
int3
inc
daa
pop
shlb
nop
mov
montmul
cmpsb
add
mov
jle
cwtl
ljmp
mov
mov
int
out
dec
mov
imul
jmp
sti
add
insb
mov
mov
pusha
rcrl
lcall
decl
sub
xor
mov
add
push
push
insl
push
out
mov
insb
mov
dec
xchg
push
pop
gs
pop
es
mov
mov
movsb
pop
and
push
or
fsubrl
sub
jne
and
lahf
cmc
repnz
xlat
or
add
lods
lods
insl
ret
jbe
jg
pushl
std
incl
icebp
or
cmp
test
inc
mov
push
mov
outsl
mov
dec
iret
mov
adcb
jg
lcall
shl
loope
sub
insb
testb
mov
ds
mov
insb
out
stc
sub
xchg
or
scas
cmp
mov
adc
out
inc
sahf
fwait
enter
mov
fwait
leave
add
jg
cmpb
gs
stos
push
rclb
call
dec
inc
mov
lea
jp
cmp
jmp
jg
push
lcall
inc
dec
or
loopne
xlat
int3
inc
xchg
adc
inc
push
pushf
inc
loop
nop
and
adc
lods
inc
cmp
mov
jle
inc
sbb
shrb
lock
sbbb
xchg
stos
loop
cmovle
mov
jmp
xchg
add
mov
scas
jo
addb
out
frstor
js
adc
outsl
clc
incl
xchg
push
or
xchg
mov
iret
fdiv
imul
ds
outsb
hlt
push
insl
cli
adcl
push
jb
lods
push
sbb
or
mov
int
cmp
xchg
fwait
cltd
dec
push
in
int3
adc
movsb
jnp
add
cli
jno
into
es
add
daa
xchg
icebp
fcomip
out
js
insb
mov
or
sub
lcall
add
mov
fildll
cmpsl
adc
mov
pop
cmc
pushf
mov
mov
cli
xchg
mov
jno
hlt
mov
pop
inc
push
out
ret
call
mov
addl
or
sar
fcomp
fcom
cmp
jns
cltd
stos
jo
popf
cli
mov
mov
cmp
ja
push
xor
xor
lret
inc
in
sub
sbb
jmp
sbb
inc
jns
iret
pop
repnz
aam
pop
jae
inc
cld
dec
in
dec
imul
inc
and
cmp
jne
mov
sbb
inc
push
sbb
push
in
fwait
fwait
sar
out
movsb
test
movsb
outsl
inc
cmc
movsb
jb
movsl
mov
ljmp
int3
sahf
lods
inc
test
mov
push
mov
pop
xor
fdivs
pushl
xchg
adc
pop
repz
outsb
sub
loop
rcr
js
std
or
pop
cmc
push
aad
fistpll
or
dec
aad
cli
addb
movsb
sbb
inc
in
inc
bswap
mov
hlt
sbb
mov
add
jecxz
rol
cmc
in
lret
xchg
jo
bnd
incl
sbbb
ss
in
je
push
dec
push
sub
pop
fists
in
push
add
sbb
inc
add
test
add
decl
xchg
aad
leave
popa
and
xor
je
sbb
pop
dec
stos
jmp
dec
pusha
fldl
add
inc
kmovw
pop
fldl
mov
fs
inc
push
lods
mov
inc
sti
incl
inc
jb
inc
xor
into
adc
sbb
rcrl
pushf
in
outsb
loopne
aas
mov
pushl
std
cli
or
add
pop
arpl
cwtl
mov
dec
xchg
add
mov
lcall
pop
stos
push
lcall
leave
insl
je
sbbl
pop
shrl
lods
jp
mov
jmp
out
sti
ss
xchg
pushf
xlat
mov
dec
popf
cwtl
pushf
insb
jo
scas
or
jmp
mov
mov
into
int
gs
and
rcrb
xlat
xchg
xchg
xchg
mov
inc
pushf
aaa
fld
jge
movb
mov
inc
aam
call
inc
fildll
int
imulb
aaa
lds
push
lds
jbe
aas
inc
and
pusha
xchg
popf
adc
mov
gs
popa
adc
adc
cltd
push
stc
pop
and
iret
inc
dec
push
and
pop
pop
cwtl
jns
lcall
cmpsl
dec
pop
enter
mov
aas
ljmp
xlat
push
dec
loope
or
pushl
stc
xchg
insl
out
mov
adc
dec
ffreep
sub
xor
pop
fsubrl
add
cmpsb
call
mov
and
cmp
mov
xchg
dec
adc
mov
call
cmp
dec
inc
daa
loop
dec
subb
add
jp
xchg
jnp
in
scas
loopne
loopne
lret
inc
pop
std
xor
xchg
rcrb
outsl
pop
inc
jae
mov
pushf
jo
pop
orb
jle
incl
dec
cmp
dec
sub
push
fdivrl
iret
popf
or
cmp
dec
outsl
xchg
and
pushl
pop
enter
adc
pop
dec
hlt
push
aam
es
loope
jg
sti
push
and
mov
bound
mov
pushl
mov
mov
shll
xchg
iret
stc
jb
mov
dec
push
test
or
add
mov
mov
sub
mov
jbe
lods
push
test
jo
sub
pop
mov
bound
and
pop
cmpb
fcomps
std
incl
xchg
xchg
test
mov
jl
sub
pop
fwait
add
in
movsb
out
lods
or
push
xchg
mov
mov
movsb
dec
rcr
mov
stos
or
into
cld
cmpsb
add
sbb
sub
pushl
xor
pushf
hlt
jnp
inc
mov
jo
jno
iret
les
loope
push
mov
pushl
xor
add
les
sbb
xchg
fsubl
mov
lahf
push
fmull
add
lcall
lods
pop
pop
je
dec
mov
shrl
adc
or
testb
imul
xchg
scas
subb
lea
hlt
pop
sub
xchg
mov
dec
lcall
xchg
mov
and
cmp
push
mov
loopne
subl
outsb
jle
insb
inc
aam
jne
pushw
jle
bound
push
jle
pop
aas
mov
xor
in
dec
sbb
popa
das
add
adc
dec
dec
mov
and
fiadds
mov
call
loop
sub
hlt
out
pop
arpl
and
xor
ret
aas
and
cltd
es
inc
sub
jns
mov
pusha
leave
push
test
push
push
mov
or
movsb
mov
jmp
decl
notb
shlb
or
int
cmpsb
roll
xor
xor
or
ljmp
sbb
test
dec
mov
mov
push
pop
mov
cli
call
jl
orb
mov
pop
inc
adc
stos
fs
mov
pop
orb
xchg
fcomp
add
push
cmp
js
mov
xor
push
push
cld
xchg
jmp
xchg
jl
or
ljmp
adc
fstp
jecxz
out
xor
adc
daa
test
fistpl
sbb
push
ljmp
outsb
cmpl
andl
cmpsb
xchg
and
loopne
or
test
push
mov
pop
repnz
adc
adc
jnp
pop
inc
std
in
dec
repz
mov
ljmp
into
inc
pop
cmp
push
mov
push
imul
int
mov
rcll
mov
mov
mov
mov
mov
fcomip
pop
sbb
push
jg
test
mov
out
mov
loopne
lahf
dec
imul
test
js
push
shl
cli
push
in
call
jnp
lret
adc
sub
in
mov
push
adc
dec
lods
icebp
inc
sbb
dec
jns
scas
mov
jp
rcrb
jmp
dec
dec
dec
loope
mov
xor
clc
stos
push
push
inc
outsb
jg,pt
add
xchg
pushf
cmp
jg
dec
inc
out
iret
or
test
shll
xchg
aad
bound
cmp
mov
gs
mov
outsl
ja
ljmp
dec
scas
xor
xor
bsr
loopne
dec
inc
loopne
jnp
sarb
xor
cmp
andl
addr16
mov
pop
sub
mov
lea
ds
jo
or
orl
incl
jle
sti
pop
push
cmp
pop
js
aad
push
sbb
sub
mov
cmp
mov
incl
adc
dec
outsb
cmp
loopne
shlb
xchg
adc
xchg
lcall
mov
cmpsb
push
inc
outsb
sub
mov
xor
fsubrl
jle
jmp
jg
arpl
push
pusha
jp
xor
inc
adc
pushf
pushf
sbb
xor
jle
dec
sub
cmpsl
mov
mov
pop
sbb
xchg
jo
inc
scas
decl
repz
scas
mov
pop
xor
xor
cs
or
out
outsb
inc
sub
mov
mov
sub
loope
push
cmp
mov
clc
data16
call
cmp
add
cli
sub
mov
xchg
xor
push
movsb
sbb
call
or
or
ret
movsl
pop
or
enter
aas
jne
add
int3
inc
fisttpl
arpl
cli
adc
or
mov
xchg
incl
mov
mov
inc
orl
icebp
mov
adc
ljmp
inc
jge
in
fbstp
push
xchg
mov
pop
andb
xlat
adc
data16
cmp
imul
adc
std
daa
insb
dec
and
lock
adcb
lret
shll
shr
and
orb
loopne
and
adc
mov
and
test
mov
mov
aad
pop
dec
dec
shll
icebp
cmp
movsl
in
or
movsl
movsl
sub
rcrb
outsb
inc
ja
dec
imul
outsb
and
add
mov
ss
mov
mull
std
arpl
push
sub
mov
shrb
or
int
in
arpl
and
mov
mov
icebp
mov
inc
sub
inc
or
push
pop
xor
and
ljmp
xor
aam
ficoms
dec
inc
sub
xor
jmp
ljmp
les
and
fwait
dec
test
fwait
xor
dec
lcall
dec
mov
pop
jle
and
jbe
xor
das
hlt
pop
pop
jb
popa
xchg
xchg
fwait
adc
popf
mov
ljmp
mov
mov
mov
adc
or
into
in
cmp
mov
dec
or
pushf
call
cmp
lcall
es
ljmp
fdivrs
pop
jecxz
push
call
mov
lods
xchg
js
mov
imul
adc
lahf
inc
sahf
inc
add
cmp
push
adc
mov
fisubs
les
insl
inc
in
loopne
mov
jnp
pop
outsl
dec
xor
sbb
xor
cmp
les
std
lcall
adc
push
cld
pop
or
xor
cmpsb
jp
mov
in
call
jnp
sbb
xor
cmpsb
xchg
mov
xor
clc
adc
xchg
cmpb
cmp
cmpsl
mov
xchg
cmp
lcall
cmc
mov
incl
inc
push
push
jecxz
dec
sub
and
out
and
cwtl
pushf
xor
xor
stos
insl
loopne
push
pop
aaa
sti
pop
sub
sti
sbb
cli
adc
call
inc
ficompl
int
xchg
inc
mov
pusha
pop
fistl
lret
lret
jns
das
cmpb
jo
xchg
incl
cld
adc
test
fs
daa
pop
loopne
in
clc
int
add
out
and
fldl
leave
scas
inc
mov
out
data16
or
call
je
mov
aam
shll
scas
bound
pop
call
stc
sbb
fdivr
sub
fwait
or
fstpl
rcrl
add
dec
pop
jecxz
call
jns
cmpxchg
mov
or
sbb
add
xchg
mov
mov
xor
push
push
incl
inc
push
popl
sub
push
or
daa
push
int
leave
dec
mov
cs
pop
jo
ljmp
push
imul
cwtl
fcoml
lret
cmpsb
out
sub
pop
cmp
ljmp
xchg
sub
cld
dec
jae
mov
les
cmp
pushl
enter
cwtl
and
fs
movsl
jp
pop
fimull
into
leave
add
out
inc
stos
out
cmp
xor
into
xor
mov
add
mov
nop
cmp
or
sti
aad
les
int3
adc
lcall
cmp
outsb
mov
mov
test
push
outsb
sti
fsubrp
dec
je
sbbb
scas
clc
fcomip
push
scas
gs
cltd
adc
cmp
jmp
jnp
call
loopne
ja
adc
mov
lahf
jmp
sbb
iret
nop
and
or
nop
in
out
xchg
xchg
movsl
pop
into
sub
xor
cli
xchg
push
or
addr16
int
les
push
cli
icebp
inc
iret
jbe
cmp
cli
jmp
push
dec
sti
push
out
out
dec
dec
ljmp
sub
ljmp
push
out
ds
hlt
mov
fbstp
cltd
dec
pop
push
xor
or
call
incl
sarl
jns
popa
test
outsb
jnp
in
mov
sar
xlat
xchg
and
jmp
jle
leave
pop
push
inc
or
pop
enter
in
shlb
subb
sbb
call
inc
sub
loopne
es
add
fistpll
inc
shll
cmp
jl
xchg
hlt
inc
cltd
lods
sub
add
or
call
adc
mov
and
leave
dec
nop
jmp
std
push
inc
jo
addr16
adc
lock
jne
mov
pop
lock
incl
mov
push
lahf
sti
push
mov
inc
push
es
sub
out
xchg
cmp
lcall
adc
jmp
cld
xchg
push
dec
pop
or
jnp
in
movsb
test
mov
cmp
push
pushf
cmp
sbb
push
incl
loope
ds
jmp
inc
or
mov
stc
push
and
jb
out
es
inc
inc
jbe
imul
pusha
into
decl
fbld
dec
gs
sub
push
insb
mov
mov
adc
fdivrl
mov
mov
xchg
call
mov
rcrb
add
repz
inc
and
inc
fsubrs
sbb
mov
xchg
push
mov
push
ret
rolb
frstpm(287
jmp
jle
bound
xchg
sbb
mov
cmp
inc
mov
push
and
pop
call
cld
pop
pop
mov
jbe
sub
adc
sbb
pusha
addr16
mov
xor
cmp
ret
bound
xor
dec
push
xor
jge
or
cmp
ljmp
int3
push
rcrb
or
outsb
mov
add
ja
push
jae
repz
jg
frstor
call
mov
popa
pop
sub
sub
leave
das
or
mov
mov
pop
ljmp
mov
adc
loop
pop
jnp
mov
lahf
addr16
and
push
sarb
je
sar
incl
in
fstps
outsl
pop
insl
test
xchg
clc
pop
xchg
popl
sbb
push
lcall
popa
rcrl
mov
popf
aam
cmp
mov
lods
ret
call
adc
add
mov
stos
fld
in
ja
cmc
and
outsb
incl
jns
adc
mov
sub
loop
in
call
cmpsb
cwtl
dec
push
mov
mov
pushf
sbb
sbb
test
jno,pt
out
lcall
and
stos
movsb
or
or
out
out
in
idivb
outsl
sub
push
cmc
jl
loopne
dec
mov
cmp
imul
lret
pop
out
and
push
lock
push
cmpsb
xlat
pop
mov
bound
les
add
dec
stos
inc
push
cmp
call
lods
lea
push
cwtl
lds
out
js
pop
push
dec
sbb
mov
incl
int
xchg
js
sahf
aam
adc
jmp
std
cltd
adc
clc
ljmp
adc
in
stc
sbb
fdivp
adc
outsb
repz
adc
ja
adc
pop
xchg
das
jl
push
xchg
rcrl
pop
jecxz
int3
andb
repnz
arpl
push
sarb
data16
jnp
icebp
icebp
stc
sar
fistpll
xor
repnz
sub
pop
imul
imulb
fisubrs
or
sbb
push
mov
sbb
inc
add
xchg
mov
lcall
mov
mov
dec
cmp
pop
imul
mov
shlb
jp
out
mov
ljmp
inc
and
in
sub
mov
sbb
mov
mov
push
push
mov
popf
and
or
out
mov
pushl
cmp
cvtpi2ps
ret
cmpsb
cmp
xchg
mov
xchg
ds
cmp
lret
jg
mov
stos
aad
cmp
inc
jecxz
or
adc
aas
movsb
idivb
mov
divb
into
pusha
loopne
sbb
xchg
push
cltd
xchg
pop
lret
loopne
movsb
adc
xchg
fcomps
jge
dec
loope
ljmp
daa
fcom
scas
lret
jo
js
pop
cs
add
out
sbb
fisttps
sbbb
add
adc
or
fcomp
or
sub
fs
incl
xor
and
sub
in
repnz
and
cmc
lea
or
js
push
add
call
adc
mov
xor
addr16
adc
dec
xchg
stos
fcomip
call
test
arpl
jns
jo
adc
js
dec
jne
jg
cld
mov
mov
pusha
xchg
jbe
out
out
xchg
outsl
mov
adc
push
fcoms
loopne
incl
shr
sti
mov
hlt
cmc
jno
outsb
mov
cld
js
dec
sub
push
add
jae
cltd
or
clc
outsl
jae
std
fldcw
sbbl
mov
pop
cld
mov
imul
cmp
pop
imul
adc
dec
mov
mov
call
in
cwtl
iret
cwtl
cmp
mov
mov
cld
push
ljmp
repz
jno
xor
push
dec
sub
push
outsl
sahf
lods
xchg
mov
mov
cmpsb
repnz
jp
cltd
ja
hlt
pop
icebp
decl
cltd
cmc
adc
adcb
ret
jbe
mov
mov
xor
ss
pop
arpl
mov
and
ljmp
call
add
in
stos
xor
mov
xor
loopne
fs
sub
call
cld
incl
jg
fs
lret
mov
insb
jmp
arpl
dec
push
push
mov
xchg
jne
cmpsb
cltd
cld
fsubrl
mov
shl
mov
dec
sbb
decl
sub
mov
jmp
inc
pop
jns
xlat
jmp
es
sub
mov
lahf
xchg
lods
sti
ret
sahf
out
ljmp
mov
cmp
mov
sahf
push
jns
xor
sub
stos
xchg
fs
push
out
and
shll
xor
movsb
insb
sub
jl
movsb
sub
stos
mov
roll
lcall
mov
fcmovnu
dec
xchg
into
mov
ficoms
call
dec
mov
mov
mov
or
push
xor
lds
xlat
cmp
scas
jnp
mov
cmp
dec
jecxz
testb
pop
shrb
dec
ret
dec
sub
inc
mov
clc
fistps
and
incl
xor
xchg
sub
sub
cld
push
aas
les
mov
int
dec
test
div
rolb
test
ja
outsl
lret
lock
ret
and
cmpsb
dec
fdivrp
jg
neg
and
push
int3
xchg
jmp
fs
fsubrs
inc
or
fcomip
sbb
fwait
pushl
adc
mov
mov
ja
test
rolb
sbb
cmp
ljmp
out
dec
push
fisubrs
jp
jo
add
inc
jne
cmpb
pop
loopne
mov
xor
or
decl
clc
je
pop
sbb
jle
jecxz
lock
int
sbb
and
dec
xchg
jmp
jno
mov
pop
movsl
insb
jg
sub
and
jno
xor
xchg
jp
jl
dec
mov
mov
out
jbe
call
mov
or
sti
adc
stc
sahf
push
je
sbb
sbb
test
mov
jmp
xchg
insl
scas
cmc
into
sahf
rcl
jge
imulb
dec
movsl
loopne
sti
sahf
xchg
xchg
mov
mov
mov
push
fildll
in
push
sub
bound
add
fldl
std
ljmp
jmp
insl
jbe
insb
addl
popl
xor
jns
dec
divb
pushl
xchg
rcll
fsubrl
insl
adc
fcomps
push
mov
push
and
mov
mov
lcall
cltd
jne
and
xor
push
jecxz
pop
sar
sub
push
mov
inc
subb
xchg
dec
jns
cmp
pushl
cli
movsb
movsb
loopne
outsb
ljmp
aad
cmp
and
decl
loopne
adc
repnz
inc
inc
mov
push
add
dec
out
fistpl
xchg
push
jmp
sub
push
inc
fldpi
pop
dec
sub
popf
mov
mov
ljmp
add
into
stos
fmull
mov
adc
cmovg
imul
js
int
shll
jg
adc
repnz
imul
decl
or
push
outsb
pop
mov
sti
stos
mov
mov
into
idiv
jns
mov
imul
mov
insl
repnz
xor
dec
pop
cmp
jg
outsl
xchg
test
sub
mov
push
jmp
push
sbb
in
add
popa
sbb
add
popa
add
das
addl
xchg
xchg
das
mov
clc
pop
inc
in
and
pushf
xor
in
xchg
cmpsl
add
add
xchg
sub
scas
jns
jmp
adc
sar
jns
xor
popa
test
subb
scas
xchg
jmp
lods
mov
aas
aas
out
dec
test
dec
inc
cltd
sbb
int
mov
mov
mov
jle
loop
and
icebp
inc
and
push
adc
in
mov
ljmp
pop
ret
ss
jg
fwait
mov
daa
inc
inc
or
cmpsb
xchg
lret
mov
cmp
loop
jmp
sti
repz
inc
mov
push
addr16
sbbb
inc
cmp
fisttps
add
mov
cli
mov
pop
outsl
sbb
dec
ljmp
adc
repz
outsl
jo
out
mov
mov
loopne
shl
in
scas
fwait
sbbl
mov
pop
ret
dec
sbb
decl
popf
jle
lcall
outsb
inc
xchg
xchg
and
ret
nop
and
aad
push
shl
popf
cmpsl
adc
incl
push
push
dec
add
in
push
pop
xchg
pavgw
inc
or
jg
and
daa
into
mov
xor
xchg
jnp
pop
pop
sub
jmp
call
gs
insl
inc
adc
call
mov
adc
mov
inc
xchg
icebp
clc
call
mov
ljmp
test
aaa
push
scas
test
cltd
repz
dec
cmpsl
ljmp
xchg
dec
loope
imul
jge
cmc
inc
mov
jns
cmp
add
cmp
aad
mov
call
fistl
imull
mov
mov
das
and
movb
test
adc
xchg
daa
adc
loope
pop
dec
fmul
pop
jne
lcall
fs
pop
fildl
xor
into
or
pop
cmc
lods
enter
push
fildl
mov
aam
fists
bound
adc
mov
aas
adc
push
or
adc
mov
or
xchg
lcall
lcall
repnz
mov
pop
jle
iret
mov
mov
andb
fisubs
addr16
cmc
cmc
xchg
push
call
loopne
inc
test
add
dec
push
shll
test
xchg
out
call
mov
pop
mov
std
lods
fst
jns
jge
jns
sbb
lahf
push
jle
std
jo
call
incl
add
xchg
mov
xchg
or
jnp
push
adc
pop
into
cmp
mov
insb
dec
scas
dec
xor
movsb
inc
cwtl
inc
xchg
add
inc
or
cmp
jl
and
ret
sbb
sub
decl
cmp
sbb
xlat
cmp
adc
lahf
pushl
lods
test
push
cmpsb
xor
mov
dec
scas
mov
in
cmpsb
inc
aaa
jecxz
sub
lcall
and
hlt
cmpsb
cmp
pop
ss
je
push
hlt
mov
nop
test
mov
loopne
pop
sub
jle
and
dec
or
push
adc
fadds
stos
or
xlat
cmp
push
lahf
fs
and
push
cs
lcall
pop
outsb
mov
idivb
cld
mov
and
cwtl
cmpsl
mov
stc
in
pop
lahf
in
inc
mov
jg
movsb
ror
mov
ds
and
std
sub
lock
add
cmpsl
cmpsb
stos
lret
xchg
aam
jns
cmpsl
call
ljmp
push
pop
ror
lret
movsl
loopne
test
or
adc
xchg
cmp
call
jl
dec
cmp
add
nop
dec
xor
or
xchg
imul
cmp
cmp
ljmp
into
dec
xchg
jecxz
mov
pop
inc
repnz
iret
test
fcomps
xchg
add
pop
addl
sbb
ljmp
ljmp
faddl
pop
fadd
decl
sbb
mov
pop
adc
call
xor
push
mov
outsw
jecxz
leave
lcall
jmp
adc
movsb
stos
cmp
cmp
mov
sbb
pop
mov
cmp
dec
in
mov
mov
jmp
or
cmp
jne
pop
movsl
adc
jecxz
add
jbe
mov
sbb
in
decl
dec
push
js
jnp
mov
sti
add
cltd
adcl
js
push
adc
icebp
xor
jg
in
lock
mov
subb
aas
fcmovb
stos
pop
outsl
sti
inc
and
dec
or
cmc
jmp
stos
jecxz
shll
push
ljmp
mov
lds
fisttps
mov
inc
insl
jns
lock
out
add
sbb
pop
shll
test
lcall
arpl
clc
xchg
mov
sbb
loop
adc
push
add
or
mov
push
inc
sub
mov
sti
and
decl
stc
xor
push
scas
adc
enter
and
xor
adc
mov
data16
and
sub
dec
jbe
mov
inc
ljmp
dec
scas
mov
rclb
mov
scas
xchg
add
push
push
repz
hlt
dec
jmp
sbb
ljmp
sub
push
in
jp
mov
inc
inc
test
cmpsl
sbb
pop
push
inc
lea
mov
pop
push
inc
ljmp
lcall
add
dec
xor
fistpl
sub
lods
jmp
jg
jns
push
cmp
lcall
inc
pop
bound
mov
ljmp
and
pushf
push
jecxz
cmp
loope
adc
aam
or
jmp
or
call
addr16
sbb
fdivs
mov
mov
sub
lods
adc
or
cld
cmc
popf
xchg
adc
mov
ret
inc
rorb
fnstenv
and
mov
fidivrs
pop
pop
bound
or
test
xor
int3
mov
arpl
outsl
cli
cmp
ja
ljmp
jge
cmp
lret
in
shlb
ljmp
scas
adc
out
push
xor
out
jbe
mov
and
mov
cmp
inc
jo
add
push
repnz
fidivrl
mov
int3
decl
test
aad
push
jb
enter
ret
sbb
cmp
fidivrs
ljmp
addr16
fxch
mov
enter
xor
idivl
dec
arpl
pop
cmp
ja
sti
inc
test
sub
push
push
cmp
jg
xor
test
dec
pop
jg
push
sub
xor
xchg
clc
inc
mov
push
inc
push
cmpb
es
lcall
pop
test
jg
jg
aam
xor
hlt
decb
aas
lock
jo
loopne
sbbb
ljmp
xchg
lock
inc
add
jne
mov
aad
cmp
mov
das
push
lcall
mov
and
sub
mov
mov
jmp
movsl
sub
mov
cmp
stc
dec
test
sub
push
xor
jle
mov
lea
add
xchg
mov
shl
push
inc
cmpb
adc
adc
lahf
xor
jo
ljmp
daa
mov
dec
mov
test
jns
xor
dec
jl
sbb
dec
pop
pusha
test
ljmp
pushf
cmp
or
and
in
std
push
out
dec
in
pop
or
jge
xchg
adcl
loopne
call
std
das
jp
stos
sbb
cltd
sub
ljmp
fisttpll
push
jecxz
ljmp
sub
mov
push
cld
repnz
jmp
xlat
jne
lret
scas
in
and
xor
out
lock
lcall
les
dec
mov
push
push
pop
mov
mov
adc
stos
dec
xchg
test
ss
hlt
popa
cltd
dec
rcrl
mov
push
push
ss
pop
sub
in
ljmp
addr16
std
push
cli
adc
sbb
adc
incl
pop
jl
sbb
mov
shrb
pop
ficoms
mov
fdivl
mov
jb
ss
imull
mov
in
jecxz
dec
mov
aam
in
inc
enter
lock
jg
in
faddl
sbb
adc
popa
pop
les
and
cmp
and
mov
call
call
movsl
adc
xor
stos
jl
cmp
ljmp
loop
mov
int3
jns
mov
iret
insb
push
inc
scas
cmpsl
mov
xlat
loopne
cmp
rorl
push
rcrl
add
insl
decl
fnstcw
push
stos
xchg
cld
sbb
scas
scas
dec
test
divl
xchg
repz
cli
lds
sub
mov
bound
jle
push
push
mov
cmc
push
pop
add
mov
jg
lcall
pop
xor
pop
divb
push
mov
jno
cmp
int3
in
sarb
out
clc
xchg
xchg
stos
mov
jb
cmp
setge
jno
sub
ds
jge
out
jne
outsl
jg
call
addr16
out
xchg
mov
fld
pop
add
outsl
mov
lahf
adc
incl
test
jmp
push
rolb
cwtl
xchg
adc
not
pop
mov
decl
call
jns
add
mov
testl
pop
pop
jmp
sub
mov
cmp
push
push
in
addl
out
sbb
mov
test
push
sarb
daa
ja
cmp
fnstsw
daa
mov
jg
test
fs
mov
decl
iret
ss
outsl
push
xlat
in
add
push
mov
inc
push
fs
dec
cwtl
jbe
xlat
xor
cld
incl
loop
std
mov
add
sahf
mov
push
lock
push
nop
into
mov
push
ljmp
mov
mov
es
mov
dec
jg
fstl
inc
in
popf
pop
testl
gs
pop
jo
and
and
outsb
pop
aas
inc
and
fdivrp
push
lock
jo
cmp
mov
and
call
in
mov
loopne
or
and
cwtl
lret
dec
popf
cmp
push
in
sti
sti
jg
cmp
dec
testb
sti
and
fbld
sbb
xor
cmp
pop
ljmp
pop
jns
cmp
fidivs
push
jle
pop
xor
movsl
xchg
pop
lods
jg
lea
push
xor
test
stos
jmp
cmp
push
jl
fisubl
push
cmp
pop
dec
pop
outsl
or
sub
cmpsl
hlt
jbe
pop
add
mov
std
jo
popa
xchg
mov
cmpsb
mov
cld
push
repz
fistl
sbb
xor
xor
bswap
mov
mov
call
bound
lret
jle
notb
jle
movntq
mov
mov
call
push
fwait
cmpsl
fidivrl
dec
push
popa
jl
dec
pop
dec
dec
cmp
shl
mov
sbb
add
repnz
fisttps
push
and
scas
push
movsb
add
notb
ud0
ja
test
fistpll
mov
stc
out
out
lret
iret
xchg
mov
call
jae
ja
dec
fiaddl
out
insl
mov
int
mov
pop
ja
test
ljmp
std
pop
and
mov
dec
loop
leave
and
cmp
inc
ljmp
push
sbb
jno
pop
popf
lock
inc
out
fbstp
pop
test
call
ficompl
stos
xchg
movsb
mov
sahf
push
loopne
pushl
cld
inc
out
loope
out
fsubl
int
fcoms
xlat
cmpsb
xchg
xchg
or
and
mov
test
dec
lret
add
adcl
fiadds
add
mov
inc
ljmp
adc
movsb
test
in
popf
cmp
inc
dec
fwait
cwtl
movsb
repz
push
clc
imulb
je
pop
mov
inc
xor
dec
out
js
dec
pop
mov
push
adc
cmp
hlt
daa
and
cmc
lea
inc
inc
clc
testb
repnz
ja
nop
js
fstps
cld
sub
int
scas
cli
fwait
ds
cmp
pop
lcall
decl
pop
les
aam
mov
add
dec
mov
sub
dec
pop
dec
test
push
push
std
dec
aas
jmp
and
xor
lahf
clc
es
and
test
insl
sti
xchg
jecxz
mov
or
sub
mov
insb
cs
clc
sbb
mov
and
jbe
int3
daa
stos
sbb
nop
jbe
loop
data16
jbe
sahf
loop
inc
mov
xchg
mov
mov
and
unpckhps
lret
fcompl
cmc
test
or
incl
xor
mov
push
adc
xlat
and
mov
inc
fisttps
sub
adcb
pushl
xlat
and
inc
pop
movsb
cs
je
dec
mov
jmp
mov
jb
mov
and
pop
outsl
jb
pop
hlt
sti
mov
mov
adc
ja
lcall
out
lock
test
data16
mov
push
push
lcall
xor
iret
sarb
add
addb
mov
sbb
jg
clc
ljmp
in
ds
aaa
mov
ret
cmp
inc
aad
cmpsl
dec
jae
ljmp
ret
mov
xchg
pop
xchg
inc
push
into
aas
hlt
sbbl
jg
mov
push
cmovo
sti
and
icebp
std
imul
cld
jmp
jecxz
pop
push
outsb
push
inc
mov
out
pop
in
cltd
ja
cmc
dec
xor
sub
dec
and
gs
loope
jge
sbb
dec
pushf
or
mov
and
repz
lods
push
enter
mov
xchg
daa
pushl
test
cmpsb
dec
jbe
dec
clc
mov
jp
jae
mov
jmp
cmp
fldl
dec
add
add
add
push
push
aam
fwait
jl
lcall
add
hlt
sub
xchg
mov
test
cmp
mov
pushl
out
mov
add
xchg
popf
imul
lods
loopne
outsl
xor
je
jne
pop
jns
incl
jns
lds
xchg
cmp
lock
xlat
mov
aad
add
jecxz
ljmp
pop
and
xchg
call
or
mov
dec
dec
push
sub
fimull
or
mov
push
pop
inc
ds
jae
jle
ret
cmpsb
outsl
repnz
sub
out
int3
enter
or
cld
out
clc
sbb
sub
hlt
pop
ljmp
jmp
push
lret
cmp
sbb
jmp
sub
fisubl
jle
inc
mov
aaa
imul
fildll
sub
cmp
sarl
stos
xlat
push
jne
clc
out
mov
and
ljmp
sbb
or
mov
or
shlb
fisubrs
call
pusha
and
into
sbbl
pop
push
or
jmp
mov
testb
test
stc
jg
mov
mov
aas
add
inc
testb
std
nop
adc
dec
jns
or
mov
xchg
popf
out
call
cmp
jge
mov
icebp
jae
jae
in
shll
mov
lock
out
in
jecxz
push
ud1
decl
outsl
push
add
nop
add
xchg
rcrb
out
or
addr16
jecxz
addl
clc
push
icebp
fidivl
and
mov
push
enter
call
cli
scas
add
call
cld
jb
jne
xlat
pop
xchg
push
add
icebp
cmpsb
lods
mov
push
mov
push
fwait
and
push
inc
push
jb
pushf
ret
rorl
stc
hlt
rcll
insb
lds
leave
in
sahf
shlb
incl
sbb
xor
std
les
fnstenv
xor
in
aad
mov
add
mov
pop
orb
rorb
shrb
jmp
xor
gs
jo
scas
sbb
jecxz
scas
pushl
sbb
incl
xor
insl
test
or
jbe
mov
pop
jmp
cmp
cmpl
inc
inc
mov
ret
fildl
ljmp
mov
pop
or
mov
jle
cmp
lret
sub
ljmp
and
dec
jnp
test
pop
loop
mov
fbld
pop
xchg
mov
sbb
lahf
rclb
or
mov
sub
sbb
insl
sbb
in
mov
hlt
xor
iret
imulb
scas
aaa
mov
mov
jno
pop
in
jmp
dec
push
xor
sarl
push
mull
mov
shlb
or
pushl
out
sbb
mov
pop
pop
iret
gs
fwait
sahf
sbb
cmp
call
push
int
lret
stos
mov
jmp
pop
push
stos
cmp
or
fcoms
pushl
push
dec
sub
lock
inc
ljmp
adc
loope
aam
stos
les
movsl
repz
out
out
cli
decl
fsub
and
pop
test
fwait
mov
daa
push
mov
repz
gs
fldl
add
jg
xchg
pusha
inc
lcall
mov
inc
or
cmp
xchg
mov
cmpsb
and
mov
pop
aad
int3
dec
mov
mov
call
out
mov
je
imul
imul
pop
scas
in
cmpsl
repz
mov
push
sbb
pcmpgtb
or
pop
dec
xor
or
mov
sbb
jmp
mov
cmpsb
mov
out
paddq
jp
xor
xlat
popf
lods
push
lahf
ret
ja
aas
out
mov
jb
and
or
mov
jae
adc
mov
inc
std
push
cmc
ljmp
addl
lahf
inc
mov
add
cmp
aaa
imul
fcompl
jmp
aas
push
js
mov
adc
pop
mov
xchg
mov
rcll
cmp
xchg
scas
fildll
sti
cmc
dec
rcrb
or
xor
stos
out
or
roll
add
lcall
push
pop
arpl
sarb
aaa
cmp
pop
adc
push
fsts
rclb
mov
push
sub
outsb
and
mov
sbb
xchg
aas
clc
xchg
aaa
push
and
aam
sub
neg
push
cmp
inc
mov
push
or
gs
cli
mov
pop
cs
lcall
pop
ss
cs
or
cmp
pop
inc
xchg
mov
push
in
loop
arpl
cmp
arpl
ljmp
rorb
dec
das
lcall
roll
rcr
lcall
iret
fldl
mov
jg
adc
mov
in
mov
push
arpl
or
push
xor
xchg
jmp
jmp
pusha
mov
cltd
mov
sub
dec
push
pop
push
outsl
cli
jae
jmp
push
push
jecxz
mov
push
push
imul
decl
mov
sbb
daa
ret
push
push
xor
sub
adc
pop
sbb
scas
sbb
cld
jmp
fwait
sbb
imul
cmp
fsubp
mov
negb
mov
call
adc
cmp
adc
ffree
sbb
inc
cmpsl
popf
adc
mov
call
mov
mov
add
rclb
xchg
in
cmp
call
add
push
lret
pop
adc
sbb
out
sbb
imul
inc
cmp
sub
movsl
ret
add
push
loope
loope
leave
fldenv
mov
ds
pop
pop
inc
ret
cmp
stos
and
push
adc
ljmp
stc
cmp
femms
imul
pop
scas
jecxz
gs
xchg
push
adc
or
cmp
dec
push
or
push
pop
xchg
pop
mov
aam
jns
cli
jg
pop
mov
jb
add
lret
add
sub
add
fcmovb
das
mov
enter
ljmp
or
test
sbb
out
xlat
or
mov
in
repnz
ret
pop
lcall
cltd
jmp
test
pmuludq
push
inc
and
mov
sub
add
push
decl
dec
imul
shlb
addb
mov
repz
das
sbb
jno
mull
add
outsb
mov
pop
cmc
lock
jne
pop
fidivs
fstps
push
call
sub
inc
aam
add
sbb
rsm
add
or
dec
jp
add
mov
out
cli
dec
xchg
dec
imull
cmc
add
jp
rcl
std
outsl
test
jb
js
movsl
push
ljmp
jmp
inc
add
adc
xchg
jl
sahf
sub
rcr
insb
sarb
mov
mov
cld
mov
aaa
int3
lods
sbb
rol
into
push
cli
mov
in
incl
insb
adc
mov
leave
jge
mov
movsb
xchg
or
dec
ljmp
and
adc
loop
iret
shrb
ret
les
jae
sbb
decl
iret
mov
lods
stos
les
lret
ss
mov
and
mov
call
adcb
pop
jmp
lods
pop
or
out
xor
fs
and
jg
add
jns
lret
loopne
jmp
dec
adc
inc
add
in
adc
ret
inc
or
fwait
pop
jne
cmp
in
fwait
call
jg
jp
nop
and
test
addl
xchg
dec
stos
arpl
jmp
outsl
iret
push
test
and
mov
je
push
mov
cmp
jp
adc
jg
xor
jge
pop
out
scas
sub
and
jnp
lods
sbb
fwait
xor
imul
incl
add
test
fmul
dec
jecxz
popa
push
xchg
sbb
hlt
ljmp
dec
jmp
push
fisubrs
and
int
lods
test
lret
lcall
stos
push
enter
icebp
add
mov
and
or
pop
in
popa
or
cmp
incl
ret
mov
adc
out
pop
cmpsb
sub
mov
mov
es
mov
add
jge
jecxz
testb
mov
out
and
push
stos
sbb
push
jle
pop
lock
es
mov
adc
ffree
jp
adc
idiv
jmp
push
mov
lock
xchg
js
movsl
jge
pushf
inc
mov
leave
in
jecxz
cmp
call
dec
mov
jo
dec
rcrl
aad
arpl
sbb
movl
xor
fcomip
pop
arpl
jle
xchg
js
or
fs
jns
xchg
sar
sub
call
lds
test
mov
out
fcom
cmp
addr16
pushl
dec
fdiv
add
lods
inc
sbb
inc
inc
mov
js
jg
jnp
imul
mov
jmp
mov
rolb
push
shl
mov
sub
sub
cli
inc
xchg
add
fisubrl
push
dec
adcb
and
mov
int3
push
in
jg
fcoms
inc
push
popf
out
cwtl
scas
inc
stos
fs
mov
ds
imul
add
pushl
push
pop
mov
lock
sbb
stos
testb
or
sbb
pushl
add
inc
int
test
mov
xchg
push
lret
sbb
decl
call
jmp
add
sub
cwtl
daa
jmp
pop
xchg
jecxz
inc
inc
mov
stos
pop
xor
cmp
insl
imul
and
out
jb
arpl
ljmp
sbb
inc
cltd
mov
jge
sub
push
add
mov
int3
or
cld
mov
movsl
add
pop
bound
push
jb
mov
lcall
pushl
dec
sbb
add
std
push
dec
cmpsl
stc
and
pop
frstor
xor
cmp
popf
fwait
mov
incl
jge
lods
xor
scas
mov
pop
out
repz
pop
pop
jecxz
xchg
out
subb
dec
mov
mov
aaa
jmp
fbstp
cld
test
jo
lea
dec
addr16
out
and
nop
mov
lahf
mov
inc
dec
aad
dec
dec
gs
push
into
dec
arpl
call
push
stos
les
dec
adc
xchg
das
lods
test
adc
cmp
mov
pusha
inc
jno
cmpsl
xchg
xchg
lods
dec
add
xlat
add
jecxz
push
fcmove
pop
xor
les
addr16
push
fiadds
shrl
sahf
int
mov
pop
cmp
pop
in
or
lock
decl
cltd
shr
mov
jbe
jle
xchg
shrl
sahf
xchg
rorb
add
out
hlt
and
dec
mov
subb
push
jbe
out
ds
imul
inc
push
cmp
cmpsb
mov
mov
inc
scas
inc
je
fidivl
mov
std
push
inc
sar
aas
out
int
add
xchg
mov
imul
jle
stos
push
lds
lahf
mov
push
in
add
in
jmp
push
mov
xchg
mulb
lcall
mov
adc
xchg
mov
clc
iret
mov
mov
aam
jmp
in
mov
cmp
mov
lods
push
ret
cmc
pop
loopne
mov
loopne
push
loopne
jl
hlt
imul
lcall
sahf
imul
dec
lret
aaa
lods
scas
pop
aam
inc
mov
lret
daa
orb
dec
decl
pop
sub
scas
inc
inc
loop,pt
xchg
test
fs
ljmp
imul
mov
inc
add
push
loope
push
ja
mov
mov
test
jno
pushf
outsb
adc
mov
pushl
and
dec
sbb
fidivs
popf
push
testb
inc
pop
push
decl
lret
jae
arpl
popf
les
out
jbe
pop
mov
lret
dec
dec
add
les
pmuludq
mov
sbbl
into
hlt
add
lcall
inc
xor
mov
jo
cmp
push
adc
or
pop
mov
adc
or
into
xchg
cld
pop
dec
xchg
cmp
mov
cmovge
jmp
shlb
arpl
push
jns
jge
xor
xchg
and
jge
dec
pushl
movsl
or
adc
test
cltd
push
lods
adc
jg
decb
pop
mov
mov
call
and
jmp
orl
adc
or
addr16
push
sub
push
mov
xchg
das
pop
push
hlt
sbb
sti
add
daa
xchg
mov
popf
das
jo
cli
jle
lcall
scas
pusha
or
push
ljmp
lret
mov
test
addr16
xchg
cld
pop
lock
inc
and
enter
push
std
in
xor
imul
pushf
jp
push
jnp
aam
jle
lcall
mov
repz
iret
mov
adc
movsb
ja
jmp
loopne
fldl
cmp
xorb
hlt
add
xor
jge
pop
dec
inc
mov
xchg
ljmp
mov
xor
jo
sub
out
mov
or
mov
je
jge
sub
lret
in
add
push
popf
lcall
push
cmp
xlat
hlt
aam
daa
xchg
into
mov
adc
lret
movsb
xchg
add
int3
add
decl
decb
push
cmpsb
test
in
dec
movsb
fisttpll
in
mov
addr16
pop
jp
jl
jns
dec
sbb
pop
out
mov
outsb
inc
scas
dec
pop
xchg
xchg
mov
scas
pushl
clc
aas
push
and
addb
cmc
cmp
decl
sbb
jnp
push
adc
add
jp
in
cs
and
xor
pop
cld
mov
out
inc
das
mov
sub
mov
pop
imul
pop
rcl
data16
ljmp
and
leave
mov
stos
in
add
jge
jo
dec
mov
cmp
std
mov
out
sub
push
push
test
nop
mov
jg
cld
mov
lock
pop
imul
lret
in
pop
js
mov
mov
out
cmp
adc
lods
ret
mov
mov
nop
outsl
nop
cmp
cli
lret
stos
outsl
mov
sub
aad
fidivrl
test
rcr
mov
mov
cmp
pushl
add
test
imul
jnp
rdmsr
pop
imul
es
push
std
cmp
or
stc
insb
add
in
jg
add
xchg
xor
insl
loopne
test
add
shlb
call
addr16
cmp
push
cmp
xchg
arpl
fidivl
in
lock
inc
adc
dec
cmpsl
or
out
mov
andl
jg
push
data16
stos
add
fldt
call
or
jecxz
fidivl
or
bound
jmp
or
push
or
mov
mov
ljmp
rclb
int3
lods
push
mov
sub
cmp
in
pop
mov
dec
xlat
mov
cmp
ja
repnz
sbb
jg
pop
push
mov
dec
and
icebp
mov
nop
add
and
pop
adc
out
jo
call
jge
pop
dec
cmp
jb
rorb
pop
shlb
mov
mov
call
mov
mov
insl
cmpsl
push
nop
push
xor
addr16
in
mov
cmp
jg
fwait
in
fsubrl
dec
shlb
dec
in
xor
dec
shll
mov
pop
mov
jp
popf
rcrl
jmp
and
mov
push
xchg
out
mov
movsl
ret
fs
sbb
mov
mov
pushl
loop
or
mov
add
xchg
jnp
aam
dec
pusha
fsts
sub
lcall
stc
sub
cmpsb
enter
roll
jne
dec
lock
jae
adc
lahf
movsl
ljmp
xchg
cmc
cmp
rorl
mov
sub
mov
ret
ds
outsb
push
mov
push
dec
in
dec
in
into
dec
into
xor
adc
arpl
sar
call
int
fistps
inc
xor
add
dec
sub
and
test
or
lcall
pop
xchg
inc
lret
inc
fiaddl
and
out
adc
call
fs
pop
fwait
cmp
jo
dec
lds
jmp
lcall
push
cmp
pop
outsl
adc
and
in
mov
je
orb
popa
stos
adc
lock
incl
jbe
out
and
xchg
or
leave
testb
cwtl
shll
loop
dec
xchg
roll
and
or
and
lods
pusha
std
push
sub
lcall
lcall
inc
fiadds
test
into
push
push
mov
sbb
jmp
aam
adc
pop
sbb
lds
fs
or
ljmp
sbb
iret
cmpsb
or
fnstsw
inc
add
decl
subl
push
add
cmp
or
push
int
jp
test
push
mov
jmp
cmp
std
adc
mov
and
shll
fisttps
sub
cli
mov
cmc
sbb
icebp
dec
sub
out
mov
mov
dec
sar
das
cli
outsl
shl
or
inc
sbb
in
fcmovnu
mov
jnp
add
dec
sar
lods
test
dec
and
inc
or
mov
jmp
xchg
jo
in
jmp
mov
jg
int3
mov
push
rcrl
pushl
jnp
mov
and
cmp
pop
jl
popa
push
ja
push
imul
pop
jecxz
lret
insb
dec
mov
jne
jp
cmp
push
jmp
sbb
pusha
mov
test
enter
or
mov
xchg
js
dec
inc
pop
push
out
jg
pop
sbb
mov
pop
out
faddl
push
pop
ljmp
clc
ljmp
adc
or
jl
imul
or
call
int3
lret
mov
push
out
repz
lahf
dec
aad
and
mov
dec
call
bound
sbb
cmp
lock
popa
add
jmp
pusha
ja
pop
sub
pop
dec
push
dec
xlat
sub
push
adc
cmpb
stc
and
xchg
data16
fists
lock
dec
mov
dec
pop
scas
push
sar
pushl
cmp
cmp
push
xchg
xchg
cltd
or
or
or
jg
push
mov
mov
out
ja
xchg
in
call
fsubrl
jle
pop
rcrl
jae
pop
andb
rcrb
stos
test
pop
stc
push
xchg
addr16
test
mov
sbb
jmp
fwait
mov
arpl
sbb
push
jecxz
fists
cmp
adcb
lods
adc
dec
xor
jnp
push
mov
or
mov
mov
adc
or
incl
add
imul
mov
mov
xor
lcall
test
pop
mov
incl
and
push
frstor
mov
not
jmp
jmp
imul
arpl
sub
insl
rcl
dec
add
aas
outsl
add
jge
aam
add
xchg
enter
in
lcall
shlb
jl
loope
xlat
lret
call
mov
or
push
push
rorl
decl
mov
call
mov
shrb
inc
pop
ficoml
xchg
scas
mov
push
cli
jl
je
ljmp
sbb
or
and
fldl
and
or
roll
loop
testb
rcll
mov
mov
lcall
cltd
loop
add
outsl
xchg
fcmovnu
je
in
mov
or
subb
decl
out
insb
jne
or
aas
sbb
mov
arpl
sbb
sub
push
push
call
inc
outsl
jnp
push
mov
data16
push
jno
mov
dec
mov
fwait
xor
and
pop
lret
dec
cmpsl
mov
push
paddusw
rcll
arpl
push
xchg
dec
lock
sets
mov
je,pn
divb
fwait
mov
pushf
xchg
pop
call
dec
fistpl
lsl
mov
mov
pushl
loope
scas
pop
cmp
sub
enter
pop
clc
push
push
sbb
aaa
lods
fdiv
mov
dec
ja
xchg
mov
xor
incl
jbe
or
xor
outsl
push
test
sbb
or
lods
and
jg
jmp
jg
lds
mov
fldt
add
or
mov
es
mov
clc
lcall
mov
test
pop
ret
in
jecxz
test
test
mov
cmp
incl
sbb
mov
test
jmp
cmp
mov
mov
lcall
dec
test
divl
add
in
inc
outsl
dec
fisttpl
inc
das
add
add
cmp
rcrl
stos
fsubl
test
mov
inc
cwtl
repnz
repnz
pop
insb
std
mov
push
and
pop
fcomi
mov
xchg
stos
popa
cs
fstl
pop
clc
xor
nop
aaa
enter
decl
xor
mov
repz
pop
ret
push
fcmovu
data16
mov
xchg
in
mov
call
repz
bound
jne
pop
jmp
sbb
mov
push
cld
decl
int
fdivrs
pop
sbb
lods
out
pop
cmovbe
iret
xchg
imul
hlt
les
add
fisttps
mov
ljmp
into
pushl
rol
cmp
or
inc
push
int3
mov
ljmp
cli
call
adc
dec
jmp
or
and
pop
test
aaa
cmp
vcomisd
pop
leave
ljmp
cmc
sbb
cmp
sbb
arpl
stos
cmp
repnz
jno
cltd
arpl
test
jmp
jle
xchg
xor
sbb
ss
pop
aad
xor
es
cmp
ljmp
push
xchg
xchg
scas
add
shl
mov
push
insl
stos
int
les
and
ljmp
insb
add
jp
fwait
add
push
or
aaa
ljmp
int
jg
xor
adc
data16
add
pop
fdivs
in
lods
repz
jno
decl
ds
and
jl
sub
int
ret
movsb
xchg
aad
jo
popf
mov
mov
outsl
pop
mov
decl
push
jae
push
inc
sbb
mov
cmpl
cmpsl
dec
test
cs
incl
jg
jg
jb
or
sub
pop
insb
and
shlb
adc
jmp
pop
inc
fsubrp
lock
cmp
fsubl
cltd
push
jne
lods
cld
mov
jb
xor
loopne
pushl
outsl
fabs
cld
dec
and
xchg
or
jle
and
inc
pop
dec
ljmp
ljmp
lret
mov
clc
push
pop
roll
push
bnd
xchg
sbb
in
insl
sahf
loop
xlat
cld
pushl
ret
add
aas
aam
ret
jb
leave
adc
sbb
xchg
and
pop
mov
popa
cli
je
pop
mov
mov
stc
ja
jl
mov
xchg
pop
sahf
push
add
ret
shrl
sub
xor
sub
mov
inc
test
sahf
fisttpl
xor
dec
mov
arpl
imul
mov
pop
jbe
xchg
cmpl
pop
ficoml
fldl
inc
rcr
test
inc
sub
adc
cmp
aam
push
lret
jmp
dec
xchg
mov
decl
pop
stos
hlt
es
jo
inc
inc
adc
repnz
bound
cmp
aaa
cld
in
decb
ja
push
jnp
or
ror
mov
xor
and
sbb
lcall
push
pop
mov
jnp
pushl
mov
sarb
out
xchg
movsb
cmpsl
jl
pushl
pushf
mov
insb
sti
loop
nop
fs
push
sub
dec
cmp
fcos
lcall
into
and
mov
and
pop
iret
add
xchg
pop
pushf
testb
nop
xor
mov
incl
js
xchg
and
loopne
jb
push
loope
adc
mov
sub
pop
stos
xchg
cmp
pop
psubsb
mov
add
in
mov
out
repz
cmp
fs
dec
movsl
ds
pop
or
xchg
jle
cmp
js
jl
pushf
push
xor
dec
xchg
mov
adc
sbb
push
jl
stc
push
dec
mov
aam
pop
fstl
aam
or
inc
ret
fnstcw
cmpl
shl
cmp
cli
pop
inc
jmp
xchg
or
jno
pop
dec
insl
in
lock
lcall
outsl
lret
data16
xor
imul
pop
mov
cmp
lcall
pop
mov
push
mov
call
test
mov
xchg
fcomip
call
lock
jno
sub
rcrl
dec
sub
mov
fldcw
and
rol
xchg
dec
jp
inc
ss
daa
pop
push
push
test
dec
mov
cs
stos
sub
ljmp
mov
scas
lret
jb
pushf
pop
fwait
cld
jne
scas
fwait
movsl
inc
pop
cmp
shl
pop
fbstp
orl
pop
repnz
cmp
xchg
loopne
bswap
stos
test
pushf
pop
mull
popf
xchg
and
js
lcall
orl
xchg
loop
xchg
cltd
aad
push
data16
inc
movsb
and
pop
add
idiv
jmp
out
lea
pop
iret
addr16
sbb
lock
outsb
pop
mov
mov
rcl
shll
add
fstps
or
mov
inc
dec
test
push
push
xchg
loopne
add
incl
cmp
mov
add
push
fists
dec
flds
lcall
jmp
or
pop
sahf
jbe
ret
mov
aas
fcomps
sub
push
clc
push
pop
cmp
out
mov
in
and
mov
in
and
ljmp
or
in
jae
jle
in
mov
hlt
enter
scas
sub
pop
outsl
jl
inc
push
cmc
popf
dec
movsb
inc
in
add
xchg
jbe
xor
sbb
push
data16
call
dec
xor
test
xor
xor
repz
fimull
in
mov
ud0
call
jno
bound
das
inc
pop
and
int
jb
cmc
adc
bound
scas
into
xchg
or
jns
jg
push
xor
cmp
dec
jecxz
aam
mov
outsb
int
cltd
and
ja
cmpsb
mov
inc
stos
shl
or
out
dec
add
inc
pop
mov
xor
hlt
pop
daa
adc
and
pushl
mov
out
add
jne
adc
decl
add
add
inc
pop
ljmp
jmp
mov
xchg
testl
jecxz
adc
jne
push
cmp
icebp
xchg
push
aam
ljmp
push
test
inc
cwtl
ficompl
test
out
in
movsb
add
sbb
inc
xchg
cli
decl
dec
pop
jns
jne
cwtl
gs
or
mov
js
and
aaa
ret
inc
sub
lods
add
outsb
dec
out
out
xor
stos
mov
xor
pushl
or
inc
out
push
mov
jns
scas
mov
mov
jg
ret
in
dec
shll
mov
dec
jae
es
mov
mov
dec
mov
push
incl
cld
pushl
or
push
imul
and
mov
loopne
ds
lds
push
mov
mov
pop
mov
inc
and
imul
insb
mov
sbb
mov
and
jnp
ss
loopne
inc
jg
test
popf
loope
sbb
lret
inc
fisubl
or
xchg
scas
ds
int3
jne
rol
pop
sub
push
or
call
adc
xchg
and
sub
and
fistpl
xchg
mov
shlb
jb
decl
pop
ljmp
pop
inc
add
in
cmp
push
sahf
out
mov
pushl
jle
in
scas
cmc
loope
into
aas
xlat
aas
cli
xchg
xchg
push
call
roll
or
xchg
adc
fistl
xchg
ror
pop
dec
fwait
dec
iret
push
mov
mov
mov
and
call
mov
in
and
mov
imul
sub
ret
call
mul
xor
clc
gs
pop
lock
or
dec
add
out
pop
sbb
lret
lcall
inc
imul
dec
pop
sub
mov
sahf
aas
jns
int3
imul
inc
adc
scas
jp
adc
lret
cmpsl
add
incl
jnp
loope
dec
cld
cmc
push
mull
cmp
mov
dec
or
loop
outsb
pop
xorb
insb
jecxz
iret
jle
loopne
dec
fcoml
jb
dec
sub
out
mov
jg
jmp
xor
or
fs
adcb
test
out
mov
xchg
add
pop
xor
mov
cmovg
jmp
sbb
mov
pop
inc
scas
out
jno
xor
sti
inc
ljmp
cmp
imul
pop
adc
jne
cmpsl
jb
xchg
repnz
js
fwait
icebp
jmp
push
or
xor
mov
and
mov
filds
push
loopne
repz
fsubl
xchg
xor
rcrl
mov
xor
ljmp
xor
rorl
sub
call
incl
add
sub
push
call
adc
sti
jp
push
push
movsb
add
fisttpll
fiadds
and
out
icebp
repnz
mov
fcomip
mov
adc
cld
and
inc
in
xor
into
int3
mov
daa
mov
inc
stos
cmc
sahf
push
xor
xor
ror
call
jae
xlat
mov
imul
push
xchg
xor
inc
jne
lahf
cwtl
mov
rcl
jmp
shrb
xlat
sbbb
sub
popa
pusha
ljmp
mov
adc
fcoms
cs
xorl
fildl
cmpb
fisubs
sbb
push
xor
dec
les
push
fnstcw
les
jnp
adc
inc
jb
pop
std
jmp
fbld
add
jb
sbb
add
test
fsubrs
jmp
cs
cli
sub
bndldx
enter
jmp
sub
sti
int3
xor
and
jmp
ljmp
adc
push
fadds
pop
and
mov
insl
clc
sti
jb
and
mulb
incl
inc
cs
stos
mov
das
aaa
jmp
push
mov
push
fwait
les
idiv
jmp
sub
add
sbb
mov
loopne
pusha
ss
or
dec
xor
nop
adc
cmp
jle
xor
fnstcw
push
into
scas
popa
push
pushf
iret
mull
ret
lcall
pusha
and
dec
push
jae
aas
add
roll
and
jg
mov
adc
push
inc
imul
pusha
incl
test
jg
lret
es
adc
les
addl
ret
jge
ret
jmp
mov
call
cwtl
in
rcrl
cmpsl
lods
xorb
gs
in
dec
fdivs
out
cmp
pop
loope
pop
mov
push
inc
mov
loope
test
repnz
leave
repz
shl
jl
sbb
mov
aaa
daa
test
ljmp
push
test
loopne
loope
adc
idivl
xor
popa
negb
inc
gs
pushl
mov
js
pushl
addb
mov
mov
out
add
neg
sub
add
inc
adc
cmp
push
mov
adc
pushl
je
jnp
mov
repz
add
sub
and
jnp
lods
fdivrs
movsl
sub
jnp
mov
and
inc
xchg
aam
adc
xchg
fiaddl
xchg
lret
fstps
cmp
pop
push
push
ja
dec
loope
push
stc
xchg
jnp
popa
pushf
pminub
adc
sub
pop
movsb
jg
ljmp
add
pop
sbb
cmp
xchg
mov
dec
cmovne
xor
lods
lods
jmp
jle
test
inc
jo
push
mov
xchg
popa
mov
decl
jno
xor
fiaddl
cltd
test
gs
sahf
sbb
call
push
fcmovu
movsl
sti
pusha
out
shl
inc
scas
xchg
jo
add
cmp
adc
lods
cmc
adc
loopne
sti
push
and
inc
shr
jo
push
mov
inc
ror
pop
jle
and
lds
jmp
pop
fdivr
cmp
sbb
dec
je
out
or
push
mov
push
push
pop
jb
decl
dec
add
pushf
fiadds
out
mov
mov
jp
es
ret
mov
cmp
sbb
call
sbb
ja,pt
jns
xchg
cs
int3
cmp
mov
inc
inc
mov
sub
decl
decb
call
push
jge
cmpsl
and
lods
pusha
ret
jl
mov
js
cli
decl
mov
and
push
or
or
imul
jbe
mov
shrl
je
dec
jp
or
inc
lcall
jge
scas
push
addl
push
mov
mov
loop
mov
cmp
cmp
aad
fucomp
clc
sub
ljmp
xor
dec
fcmovnbe
mov
lods
fcompl
jecxz
mov
jmp
pop
xor
adcl
cltd
outsb
adc
cld
decl
add
test
push
fwait
adcb
jmp
daa
call
jmp
push
jecxz
data16
ficoms
inc
cld
push
sub
subb
jmp
cli
xchg
or
lret
pop
ljmp
daa
cmp
push
fisubs
jns
in
incl
loope
pop
cld
mov
inc
xchg
js
leave
cmp
or
and
pushl
push
addr16
es
push
xor
xor
push
inc
xor
lea
jns
ljmp
clc
push
mov
repnz
lret
shrb
mov
lcall
xor
dec
jno
xchg
jg
cmpsb
or
out
inc
aaa
xchg
data16
add
xchg
pop
add
js
xchg
mov
and
inc
sbb
out
pop
xchg
and
xlat
out
std
fsubl
ret
xchg
ljmp
or
pop
sbb
mov
incl
mov
in
xchg
mov
add
in
lock
jmp
pushf
and
xchg
ror
movsb
fdivr
test
or
icebp
sahf
xor
and
fucomip
fs
push
ljmp
mov
gs
add
pop
mov
sarb
jg
jnp
addl
int3
std
stc
mov
incl
cli
ret
add
push
ja
mov
mov
ret
jmp
into
lcall
frstor
xchg
out
xor
mov
pop
jg
ret
pop
lods
iret
pop
lods
stc
dec
pop
adc
cld
test
mov
aas
add
xchg
mov
push
fwait
cmpsb
hlt
scas
mov
ljmp
push
fwait
add
pop
aaa
push
mov
inc
ja
outsb
pop
neg
andb
dec
mov
pop
cli
and
xchg
and
pop
mov
pushl
js
icebp
push
pop
push
mov
mov
cld
lcall
adc
push
dec
mov
mov
popa
pop
mov
ljmp
jmp
out
shll
cs
data16
mov
push
jo
or
in
das
lea
cmc
ljmp
cmp
dec
dec
jb
ret
leave
push
pop
pop
icebp
ret
decl
adc
push
dec
test
lods
je
and
and
inc
orb
mov
jmp
xchg
cmp
test
cmp
jg
sbb
mov
dec
pop
jle
ljmp
fstpl
adc
sahf
push
roll
add
mov
insb
jo
dec
orb
dec
fadds
jnp,pt
sbb
xchg
decl
xor
xor
ljmp
aas
xchg
stos
mov
mov
call
call
dec
icebp
add
jp
mov
and
mov
lea
sub
into
decl
add
jge
sti
mull
xchg
mov
pop
ss
ljmp
int3
iret
mov
and
sbb
lcall
out
adc
jmp
or
jbe
mov
mov
mov
push
aad
sbb
jecxz
jge
outsb
mov
push
adc
xchg
pop
pushf
adc
sub
push
add
dec
mov
jle
lcall
sbb
rcrl
movsb
adc
test
mov
lcall
push
sub
mov
repz
popa
adc
sti
add
and
je
ljmp
push
xchg
jo
pushf
pop
mov
sbb
jge
sub
inc
dec
add
jne
fimull
push
pop
loope
clc
aas
sbb
xchg
sbbb
pop
dec
xor
dec
pop
ljmp
inc
or
pushl
es
adc
adc
out
icebp
sub
and
sbb
movsb
lret
addr16
add
xor
shrb
std
incl
not
loop
cmp
test
std
xchg
jnp
ljmp
clc
adc
mov
in
pop
mov
call
scas
add
jg
insl
rcll
out
cs
out
int
out
push
inc
ficompl
and
inc
lcall
lea
cmp
adc
sub
cs
sbb
sub
mov
cmpsb
imul
jo
xchg
lea
call
lahf
hlt
stc
pusha
test
pusha
mov
ss
adc
xlat
inc
rol
cmp
in
jg
mov
idivl
hlt
adc
push
outsl
ret
mov
adc
lret
lahf
popa
dec
loope
pushf
jecxz
jmp
fwait
pushf
xchg
loopne
std
sbb
pusha
mov
int3
mov
dec
dec
psubusb
ljmp
mov
cmp
adcl
jbe
in
xlat
push
fimuls
fistpll
lcall
ret
rcrb
jnp
bound
inc
bound
test
pop
xor
jb
scas
or
jge
mov
add
shll
sti
push
add
arpl
jl
inc
jecxz
fdivr
incl
test
push
test
div
stos
sbb
or
pop
pushw
lods
sub
leave
mov
sub
pop
mov
add
jnp
into
sub
mov
cmp
ss
xchg
cltd
loopne
outsl
inc
das
outsb
out
add
test
enter
add
xor
mov
lods
out
pop
fadds
fcompl
ljmp
adc
push
stos
sarl
cli
test
iret
xchg
stc
rolb
push
das
dec
sub
aas
in
jg
call
outsl
jno
jge
add
lcall
xchg
call
mov
outsl
push
jae
jl
push
or
cmc
data16
push
add
jnp
aam
mov
lock
dec
push
xchg
pop
ret
push
out
mov
lea
inc
adc
enter
mov
push
mov
fildl
js
repz
or
push
mov
jmp
aam
das
or
sbb
cmpl
sub
pop
aas
or
push
sbb
std
mov
lods
adc
ret
jns
mov
adc
lret
cmp
imul
addr16
push
pop
fs
pop
call
jnp
and
xchg
decl
fdivs
outsb
jno
push
enter
sar
call
adcb
inc
xlat
jle
leave
aaa
test
xchg
adc
int
ret
lcall
and
inc
bound
sbb
xor
sbb
lea
add
aam
cld
mov
loop
lock
jge
add
push
push
xchg
outsb
xor
shll
cmp
push
decl
jmp
inc
cmc
call
lret
pop
pop
pop
xchg
and
int
xchg
mul
push
lcall
insl
dec
or
inc
cmpsl
lds
scas
cmp
mov
or
sar
mov
sbb
adc
enter
lret
mov
je
cmc
jns
ljmp
cmp
jle
jge
in
int
xchg
test
fucomip
test
mov
add
nop
std
daa
je
push
jns
aas
adc
xor
inc
hlt
icebp
jmp
test
jmp
icebp
arpl
xor
xor
push
fcoml
in
mov
xchg
repnz
pop
mov
inc
adc
mov
les
adc
jmp
sbb
aas
je
push
xor
call
xchg
outsb
xor
pusha
mov
mov
adc
lcall
lods
jge
pop
out
mov
testb
cmp
jp
aad
lds
mov
and
pop
dec
movsl
decl
fdivs
xchg
cmp
xchg
imul
insb
push
mov
pop
push
fiadds
lea
or
cmp
jmp
adc
dec
lods
jle
sub
xlat
sub
pop
push
adcl
or
ljmp
or
push
cs
lret
pop
rcrb
nop
sbb
in
dec
aam
xor
ljmp
adc
jns
andb
ds
mov
mov
call
jge
mov
mov
lds
ds
adcb
push
push
lcall
or
xchg
cmpb
inc
lret
add
test
pop
jle
gs
sbb
and
ss
lret
adc
mov
out
pop
outsl
sbb
fdivrs
fdivl
aam
sti
xlat
cltd
in
mov
popf
test
mov
pop
cmp
pop
dec
loope
repnz
mov
mov
shlb
jecxz
icebp
mov
ret
ljmp
or
pop
hlt
in
clc
push
xchg
pop
leave
jb
les
scas
sub
je
sub
pushl
dec
lcall
mov
nop
xchg
mov
ljmp
cwtl
mov
push
clc
add
mov
outsb
lss
add
jmp
lds
jg
mov
ljmp
or
pop
jnp
sub
adcl
mov
mov
cmp
xlat
clc
in
sub
adc
fidivrs
pushf
inc
pop
popf
mull
call
lret
fcmove
in
jg
test
test
sbb
shl
jg
pushl
test
loope
in
jmp
dec
mov
repnz
push
decl
ror
adc
rcll
jg
in
cmp
mov
fcos
incl
adc
aas
shll
cmp
out
mov
das
or
call
lds
add
mov
sbb
test
sti
push
lods
pop
sar
js
les
or
ljmp
jb
pop
enter
or
imul
test
fwait
xor
xorb
cmp
incl
mov
ficomps
adc
decl
shrl
inc
and
icebp
icebp
addl
inc
xor
aam
call
pushl
imul
lock
cli
pop
fidivrl
clc
mov
mov
cmpsl
fbstp
mov
in
mov
imulb
mov
in
or
decl
imull
and
jns
movsb
fsubrs
xor
jae
inc
mov
sarl
push
incw
sbb
push
xlat
repz
std
aas
pop
xlat
jmp
pop
mov
pushl
aad
or
scas
int3
sub
loope
insl
aam
dec
out
andb
mov
idiv
call
int3
jg
pop
cli
repnz
xchg
or
dec
out
mov
jbe
ret
xor
jo
in
pushf
push
pop
xchg
sbb
jmp
inc
push
out
push
repz
pop
push
mov
cld
shlb
aaa
jb
adc
add
cmp
arpl
incl
dec
sahf
addl
testl
adcb
add
pop
cld
push
fistps
cmp
sahf
outsb
ret
std
mov
scas
adcb
loope
push
jae
movsl
js
repnz
ret
shrl
mov
in
test
mov
aad
and
fcoml
daa
add
add
pop
fwait
xor
sti
aad
scas
cs
pop
adc
or
ljmp
in
xor
jge
add
mov
add
add
in
xchg
add
push
inc
push
and
pop
jno
gs
pop
into
pop
mov
jns
leave
js
mov
inc
xor
call
std
rorl
xchg
insb
add
and
cmp
int3
add
inc
ljmp
ljmp
cmp
stos
mov
push
shrb
ror
imul
int
mov
sbb
xor
cmc
xlat
mull
sbb
fisttps
lahf
sahf
dec
sbb
lock
mov
cmc
decl
insb
jno
scas
icebp
sub
sbb
loope
repnz
repz
mov
add
add
repnz
jecxz
sbb
cmp
jns
and
mov
mov
sub
popf
adc
mov
lcall
pop
fbld
sahf
arpl
dec
fildl
popa
sbb
push
int
in
scas
aas
jns
andl
aas
push
mov
call
jmp
ljmp
cs
out
out
and
push
xchg
cmpsb
ja
mov
jb
jnp
pusha
lcall
add
add
repnz
lret
lret
stc
call
cmc
cli
xor
push
sub
icebp
and
test
pushf
lcall
xlat
decl
lret
xchg
xchg
push
push
popf
cmp
push
mov
fistpl
jno
cmc
outsb
fmul
adc
lcall
cmp
push
pop
lea
cmpl
into
jb
lcall
cwtl
arpl
mov
jne
mov
adc
fimuls
mov
loop
stos
call
fucom
ja
lds
inc
test
call
pop
pop
cmp
call
popf
and
xor
call
sub
xlat
int
sbb
or
notl
aas
bound
fcomip
ljmp
loopw
jmp
jmp
pushf
insb
loopne
pop
sbb
adc
aas
aad
out
cli
ljmp
push
lds
out
mov
inc
sub
and
fcomps
inc
dec
stos
xor
out
pop
or
adc
push
pop
add
and
jmp
nop
mov
mov
push
movsb
in
pushl
mov
adc
aas
ja
jl
pop
imul
ds
inc
jl
xor
stos
jle
mov
and
or
adc
mov
andb
push
inc
push
xchg
test
decl
rcll
push
pop
jnp
and
shl
xor
xor
incl
jb
jmp
loop
jmp
stc
sub
cmpsb
movsb
repz
push
add
cmpl
adc
adcb
add
sarl
push
mov
aad
mov
jp
out
das
lods
scas
inc
push
ljmp
mov
rclb
sub
outsl
shrb
cmp
inc
mov
add
mov
sbb
mov
jp
call
lea
cld
repnz
call
xchg
lods
aam
shl
jp
sub
xor
out
scas
popa
clc
ljmp
call
mov
out
in
pusha
push
es
sbb
or
ljmp
lret
mov
or
inc
xchg
add
push
sub
add
ljmp
ret
mov
cmpsb
lcall
insb
adc
adc
ss
push
add
mov
in
inc
xorl
lahf
cmp
mov
pop
pop
jno
daa
cld
mov
or
shlb
or
cmc
outsb
iret
dec
inc
ds
aad
mov
hlt
inc
arpl
js
add
stos
ds
fcoms
sbb
mov
rol
mov
movsl
push
push
sub
out
inc
std
pand
out
push
pop
aaa
aaa
pop
xorb
add
inc
incl
ret
add
pop
bound
je
jne
pop
roll
jae
mov
mov
lea
cmp
xchg
outsl
pop
xlat
sub
adc
test
decl
mov
cld
jge
mov
pushf
xor
cld
int
pusha
jns
ret
decl
mov
clc
dec
pop
or
jle
insb
into
shrb
lock
shlb
ljmp
fwait
adc
fsubrs
sbb
push
cs
gs
call
pop
fs
jmp
dec
rcll
lcall
cmp
xchg
pop
inc
pop
mov
cmp
mov
shl
ffree
test
jmp
mov
popa
and
addb
cmp
sub
or
xor
sub
dec
sarl
cwtl
aam
scas
xchg
and
jl
pop
dec
loopne
icebp
stos
incb
mov
jmp
ss
mov
leave
into
outsl
lods
shll
cmp
push
es
call
inc
dec
xor
lea
sar
jmp
outsl
push
iret
xchg
dec
fsubr
push
fisttpll
iret
filds
add
xor
loopne
pop
jg
mov
int
xchg
cmp
cmp
xchg
adc
dec
ljmp
mov
lods
add
loop
jne
mov
mov
add
or
lcall
dec
jp
stos
push
addb
test
popa
mov
popa
jg
push
push
and
test
push
mov
mov
adc
mov
lds
sub
leave
insl
sub
add
adc
sti
push
and
mov
jmp
or
aaa
and
cmp
cmp
ja
out
popa
fdivrl
insb
mov
outsl
clc
ljmp
cmpsb
inc
mov
ret
add
jo
jp
ja
jo
ljmp
clc
mov
or
xchg
fisttps
imul
pop
mov
push
inc
aam
sub
mov
add
mov
pop
in
imul
mov
daa
cmpsb
cmp
lcall
sub
sbbl
inc
loopne
sub
mov
jecxz
cmp
aam
shrl
insb
jmp
es
shrl
mov
icebp
adc
or
inc
mov
rolb
ljmp
hlt
pop
sub
xlat
or
jns
xchg
pop
lret
fs
in
dec
pop
nop
push
xor
jmp
dec
xorl
sbb
ret
dec
popf
jbe
ja
notl
adc
pop
adc
ljmp
pop
mov
push
andl
pop
aam
call
cltd
and
iret
mov
rcr
push
rcl
inc
addr16
xor
mov
pushl
jo
mov
out
aaa
jb
enter
imul
inc
jbe
add
push
xchg
nop
das
push
mov
dec
subb
rclb
fwait
mov
popl
and
or
mov
pop
add
sbb
mov
shlb
or
pusha
sahf
and
test
push
decl
inc
add
sbb
data16
sbb
jmp
popf
outsb
mov
ljmp
ret
pop
loop
xor
adc
cmp
and
ljmp
lret
into
sub
inc
jle
mov
dec
das
cmp
add
pop
int
data16
jbe
es
jge
pop
in
incl
mov
cltd
daa
loop
addr16
add
jg
iret
or
mov
repz
jmp
nopl
cwtl
das
sbb
adc
orl
loope
enter
or
cmp
dec
inc
push
cmp
es
out
cld
cmp
incl
xchg
movsl
out
jo
hlt
pop
jl
nop
gs
push
rclb
mov
add
divb
cmp
aaa
or
mov
sub
pushl
sub
loopne
clc
fidivrs
aaa
movsb
sub
cmp
cmpsb
ret
lcall
fildl
xchg
js
aas
mov
bound
add
mov
mov
scas
pop
outsl
xor
dec
inc
aad
push
jb
dec
outsb
inc
mov
xchg
leave
in
or
pop
adc
cmpsb
lds
push
call
mov
push
rolb
lods
xor
dec
pop
mov
inc
xchg
lcall
mov
in
fwait
stos
pop
daa
mov
push
or
aam
lret
outsb
out
add
mov
jae
lock
inc
bound
fmull
dec
xchg
sbb
fisubl
jnp
inc
lods
xchg
adc
mov
nopl
divb
mov
xor
xor
dec
fcmovbe
push
sbb
lcall
mov
sbb
call
in
push
loop
push
fistpll
es
or
dec
repz
push
repnz
cmp
jbe
mov
incl
adc
pop
leave
enter
pushl
out
mov
inc
into
jle
mov
pushl
and
jo
sub
mov
mov
or
faddl
cmp
push
fs
cmp
call
dec
inc
js
bound
jae
aaa
push
lods
aaa
sbb
gs
mov
pop
adc
hlt
add
xchg
xor
addl
ljmp
nop
xchg
insb
shll
adc
loope
add
fisubs
mov
inc
std
aaa
or
outsb
mov
andb
mov
jp
std
fisubrs
or
cli
shlb
dec
push
cltd
out
jmp
jb
push
iret
dec
jg
enter
cmpsb
int3
adc
pop
mov
pop
out
or
jg
decb
imulb
mov
aaa
addl
mov
pop
outsb
lcall
lret
or
subb
loop
ljmp
mov
mov
ljmp
sub
adc
jmp
pusha
clc
andb
jp
xchg
enter
jg
ljmp
jg
sbb
pop
les
pop
dec
mov
push
repnz
pushf
into
out
decl
push
notl
scas
add
js
mov
sbb
call
nop
loopne
jl
jae
inc
sbb
std
loopne
flds
popf
fisttpll
push
pushl
sti
fmulp
jae
ds
es
das
into
ss
pushf
shlb
in
push
enter
jmp
lcall
sbb
es
notl
jae
sbb
adc
call
imul
inc
enter
in
mov
or
jle
push
in
xor
dec
test
je
mov
jl
xlat
out
hlt
and
xchg
nop
in
shll
mov
pop
cld
imul
ljmp
cli
jmp
inc
sbb
and
cmpsb
loop
jp
int
in
into
mov
aad
mov
dec
loop
lahf
xchg
stos
js
insl
sub
scas
rorb
divl
decl
icebp
add
fdivp
shl
sub
sub
pop
xchg
pop
leave
cmp
inc
int3
shll
mov
mov
and
mov
and
je
jns
add
push
and
pushl
ljmp
adc
std
lahf
add
mov
icebp
jl
pop
test
stc
jno
loope
out
scas
ja
add
dec
ds
jbe
sbb
out
and
incl
push
fs
sub
je
and
inc
or
jle
lcall
jmp
mov
xchg
cmpsb
out
pushf
jnp
or
push
mov
mov
pop
xchg
mov
daa
xchg
orl
push
sbb
lcall
rcrb
jge
lret
adc
xor
sub
mov
add
les
push
mov
sbb
pushl
inc
les
rcrb
notb
mov
cld
mov
jb
call
sub
xor
pop
cmpsb
hlt
addb
test
scas
std
test
std
mov
fdivr
call
test
jbe
push
out
loope
call
push
pop
test
mov
jecxz
stc
nop
test
mov
in
jmp
hlt
lret
mov
mov
ljmp
aaa
popa
pop
fcmovu
cli
sbb
push
mov
jns
es
imul
call
imul
mov
cmp
pop
jmp
das
jae
add
push
and
mov
ljmp
pop
mov
cld
push
nop
inc
sbb
inc
es
mov
scas
and
jbe
jmp
fldl
jg
aas
push
sti
incl
dec
jno
in
cmc
iret
lock
daa
les
pop
sub
push
xchg
sub
incl
xchg
jl
push
enter
sarl
adc
or
jecxz
lcall
mov
test
inc
test
jl
in
mov
fdivr
lcall
fdiv
xlat
sub
push
repnz
cmp
mov
ljmp
fldl
xor
rorl
mov
cli
mov
sub
in
push
inc
push
xor
sahf
dec
je
jl
call
jnp
push
sub
mov
push
jmp
ljmp
mov
adc
jle
lcall
adc
jecxz,pn
mov
lret
rcrb
mov
cld
clc
xor
fisubl
loopne
popf
xchg
and
mov
jbe
add
fsubl
cld
mov
call
xor
push
test
jbe
jmp
aam
das
xchg
mov
jp
jo
mov
jg
jg
mov
jne
daa
sub
jb
mov
cld
lcall
mov
inc
xchg
jmp
xchg
sti
lahf
inc
stos
mov
or
mov
mov
call
jbe
xor
in
enter
insl
xor
pop
das
shrb
divb
xor
pop
cli
decl
in
add
int
mov
pop
inc
mov
push
pop
sbb
inc
out
loop
mov
popf
and
aad
call
sub
xor
push
jbe
scas
inc
decb
filds
cli
mov
sub
mov
adc
incl
je
data16
jo
dec
sub
and
jmp
pop
push
mov
push
cmp
movsl
pop
fcmovb
aaa
dec
mov
lock
xchg
xlat
mov
data16
cmp
mov
call
adc
push
sbb
dec
lret
inc
cmpsb
push
or
out
je
fiadds
dec
out
push
out
sahf
mov
outsl
mov
or
xchg
stos
adc
rcr
cltd
out
add
cmpsb
movsl
test
sbb
movsl
dec
aaa
dec
out
mov
add
mov
sub
jg
incl
adc
lea
pavgw
mov
aad
test
ljmp
push
push
jmp
push
cmp
testb
inc
sub
cmp
pop
cmc
add
ljmp
or
inc
sub
jo
cmp
mov
setp
imul
imul
incl
jmp
or
pop
cmc
push
repnz
sarb
mov
call
das
jae
in
cwtl
push
jnp
jo
jno
pop
fiadds
mov
movsl
bound
or
inc
outsb
jle
pop
cmpsl
aad
popf
or
pop
cmp
cmp
jg
sub
pusha
popf
ror
mov
aas
mov
lcall
lock
jns
je
pop
insb
mov
test
lcall
push
cli
out
movsb
mov
cmc
mov
ja
ret
out
mov
mov
cmp
push
push
aam
pop
push
out
clc
adc
xlat
sbb
inc
lcall
pop
ret
mov
mov
fimuls
pop
lock
pop
cmpsb
daa
fstps
je
std
jo
aam
inc
clc
decl
rcrl
shll
arpl
inc
nop
incl
fnstenv
pop
xor
fwait
jp
rcrb
cmc
dec
aaa
jmp
adc
xor
pop
int
nop
mov
mov
lahf
mov
in
sbb
pop
sahf
add
pop
std
pushl
std
sbb
xlat
frstor
into
sbb
lock
mov
push
or
push
imul
ljmp
mov
cmp
rolb
hlt
mov
jl
sub
lcall
adc
jo
push
push
sub
cmpsb
pop
adc
js
pushf
adc
cmp
leave
and
pushl
xor
adc
add
insl
mov
pop
xchg
faddl
cmp
mov
bound
pushl
cmp
ret
push
call
mov
mov
dec
in
lods
push
xchg
imul
call
in
outsl
into
push
add
push
loope
jne
pushf
sbb
add
or
lcall
xlat
arpl
push
inc
pop
sar
std
mov
mov
sub
in
daa
pushl
pop
add
dec
fmuls
cmp
les
jb
pop
js
fisttpll
cmp
push
movzbl
xchg
decl
xchg
scas
jg
repnz
cli
xchg
jecxz
or
pop
and
add
mov
sub
and
mov
and
cwtl
sub
sub
mov
cli
sbb
out
popf
sub
sub
mov
movsl
insb
xor
inc
xchg
xor
mul
incl
int
mov
xchg
mov
fsubl
movsb
arpl
adc
inc
jno
mov
sub
ds
dec
cmc
adc
scas
xor
lahf
add
add
scas
dec
loop
push
cwtl
std
scas
cli
ljmp
fdiv
dec
or
mov
xor
xchg
sbb
fldt
jae
xchg
ljmp
xor
mov
loope
outsb
push
aad
decl
push
adc
mov
inc
push
mov
push
and
add
shll
negb
incl
adc
pop
fsubl
push
aaa
adc
pop
pop
shrl
lret
mov
leave
push
adc
repnz
pusha
and
idivb
and
daa
mov
nop
mov
dec
push
dec
xlat
mov
dec
lods
mov
out
xchg
and
mov
ja
inc
mov
xor
fbstp
std
ljmp
scas
cmpsb
xchg
sarb
xchg
gs
out
fstpl
pop
cli
repnz
mov
ljmp
imul
push
aam
into
into
insb
add
jmp
inc
ss
sbb
test
imul
imul
cmp
jmp
jmp
test
push
push
loope
sbb
cmp
xor
jecxz
cmp
xorb
and
adc
ljmp
fcmovu
arpl
adc
cmp
and
pop
bound
icebp
push
cld
mov
jmp
hlt
inc
add
mov
fidivrs
in
sub
incl
xchg
fidivl
pop
inc
int3
repnz
dec
scas
in
or
lea
adc
pop
pop
inc
inc
ss
dec
shll
mov
outsb
adc
jno
test
decl
sbb
lods
ret
cmc
inc
aam
adc
mov
push
dec
call
loopne
ret
push
sub
ljmp
cmp
mov
cmpl
ss
xchg
dec
imul
push
ja
int
pop
push
incl
stos
mov
and
aad
cli
mov
loop
sbb
js
ljmp
sar
jbe
shrl
mov
xor
or
cmc
push
int3
cmp
push
mov
stos
jmp
adc
cli
decl
jle
xor
fstps
xor
lds
sub
das
clc
xlat
outsb
cmp
jmp
rolb
xchg
push
aaa
mov
xchg
mov
cwtl
pop
fisubl
test
inc
pop
or
mov
sbb
jmp
mov
dec
dec
add
sbb
mov
xchg
mov
push
subb
cmp
fists
loop
xchg
testl
pop
add
scas
sahf
das
mov
push
mov
lcall
adc
scas
push
lods
mov
lret
add
sahf
pop
and
mov
decl
test
test
sbb
stos
jecxz
dec
cmp
jo
and
mov
cmc
mov
lods
stos
xchg
addr16
sub
push
fistps
push
fmuls
cs
mov
push
pushl
and
sbb
xor
push
imul
out
xchg
stos
sub
in
inc
push
mov
mov
decl
xchg
jmp
sahf
dec
sub
inc
cmp
xlat
pop
pop
pop
mov
out
clc
pop
andb
repnz
add
fstpl
add
popa
and
daa
pop
xor
xchg
ret
mov
sbb
pop
jb
inc
xor
outsb
sahf
loop
ljmp
stos
jmp
inc
or
jae
mov
xchg
fbstp
xchg
loop
shrl
mov
call
mov
sbb
fsts
test
xchg
ss
loop
pop
cltd
dec
adc
dec
jmp
aas
outsb
iret
repz
test
xchg
aaa
jae
loop
test
int
cmc
hlt
or
rorb
into
sbb
mov
push
jne
int
orb
ljmp
sbb
popf
stos
pop
or
and
js
cltd
lcall
dec
xchg
pop
fiadds
inc
mov
addr16
push
adc
insb
ror
mov
in
cli
push
dec
sub
add
cli
ljmp
xor
mov
mov
test
add
ljmp
jmp
push
xor
cmp
jno
pop
adc
pop
xor
adc
mov
gs
mov
sub
pop
adc
in
pusha
mov
imul
jg
push
das
xchg
mov
fistl
clc
mov
out
ljmp
test
sub
dec
adc
sbb
or
add
cli
shll
add
incl
shrl
icebp
mov
aaa
std
sbb
mov
test
flds
xor
call
and
cmp
add
and
push
insb
xchg
jnp
jl
xor
mov
dec
inc
mov
ds
in
in
enter
decl
scas
ss
iret
je
mov
loope
aad
mov
or
daa
outsl
or
jnp
mov
test
sub
or
jae
cmpsb
jecxz
movsl
or
jmp
push
cmp
pushf
vmovaps
or
jg
jne
data16
xchg
in
arpl
push
cli
mov
mov
sbb
aad
xlat
cli
push
pushf
cli
jmp
roll
pop
mov
pop
adc
hlt
inc
and
or
cli
cmpsb
push
shll
cmc
iret
loopne
lds
icebp
xor
add
lea
call
sub
dec
cwtl
jbe
xor
add
mov
push
dec
rol
decl
cmp
xor
jg
aaa
mov
and
mov
cwtl
out
dec
enter
insb
lret
jg
roll
dec
xchg
std
mov
sahf
sub
incl
sbb
push
sub
and
jmp
out
nop
dec
xchg
lahf
or
push
repnz
ljmp
pop
mov
adc
inc
adc
rcll
loope
negb
repz
mov
rclb
sbb
and
decl
sub
js
das
fwait
loope
lds
sbb
aam
int3
pop
sub
pop
mov
adc
std
call
incl
mov
dec
jecxz
dec
sub
imul
sub
xchg
mov
xchg
repz
in
dec
es
jle
and
pushl
sbb
push
xor
data16
adc
mov
in
xchg
shll
fnstcw
mov
fcoml
ja
iret
mov
lea
mov
mov
sarl
jp
push
push
push
ret
scas
add
push
push
fdivrs
inc
js
or
ljmp
ret
fmul
iret
xor
fsubs
xchg
mov
xor
pushl
cmpsl
push
xchg
jle
cwtl
loop,pt
loopne
inc
call
adc
scas
pop
fcomip
incl
add
add
ljmp
pop
and
adc
mov
sbbb
jno
rcr
sub
push
sub
sbb
bound
xchg
inc
xor
lods
arpl
push
push
xor
mov
aad
inc
loopne
pop
jne
xor
sahf
push
jle
xchg
enter
pushl
shlb
ljmp
sbb
mov
data16
adc
inc
or
xchg
into
sub
pushl
je
mov
aad
movsl
jge
pop
subl
mov
mov
push
xlat
jno
mov
jl
push
push
insl
mov
into
inc
sub
negb
and
decl
xor
loop
sub
aam
movsb
mov
mov
pop
dec
inc
cmp
scas
dec
xchg
mov
mov
inc
out
repnz
inc
data16
pop
sbb
and
imul
mov
add
xchg
and
insb
jb
lcall
push
mov
sub
sbb
mov
push
inc
mov
ljmp
pushl
rclb
shrl
out
mov
pop
sti
push
in
out
loope
filds
sbb
decl
hlt
insb
call
out
arpl
test
dec
pop
mov
stc
xor
sbb
clc
dec
iret
mov
push
pop
add
rol
bnd
popf
mov
scas
incl
jmp
mov
rcll
mov
ljmp
xchg
fsubrs
xchg
lret
shrl
jmp
ret
push
rorl
push
test
inc
sub
ljmp
lea
mov
or
fisttpl
movsb
fisubs
inc
or
mov
add
sbb
in
inc
xchg
xchg
inc
adc
shr
sti
cltd
sbb
dec
push
fistpll
mov
mov
in
jmp
icebp
pop
fdivr
jl
cmp
mov
add
hlt
les
cmp
pop
mov
rorl
jle
loopne
xchg
jl
lods
jmp
push
mov
sub
ljmp
int
cmp
stos
xchg
sub
outsl
aaa
push
xchg
stos
cmp
pop
adc
lcall
jae
fsubs
mov
jle
or
add
test
loope
sti
mov
jmp
jno
cltd
ss
in
loop
add
push
sbb
xchg
mov
pushf
inc
mov
incl
or
int3
out
leave
mov
sysexit
sub
add
movsl
outsl
lods
int
std
mov
add
mov
lahf
sub
jb
repnz
decl
inc
aam
ljmp
mov
rcl
pop
mov
call
pop
pushf
int3
or
fs
dec
mov
mov
mov
pop
xchg
lcall
cld
mov
or
mov
jl
xor
ret
xchg
sbb
jns
incl
dec
cmpb
mov
xor
stos
ja
outsb
jbe
in
repz
pushl
nop
cwtl
mov
je
push
mov
ja
cmpsl
pop
push
pop
pop
inc
stos
fcomip
adc
inc
dec
sub
sbb
leave
or
call
xchg
fsubr
mov
dec
push
inc
xor
popf
adc
sbb
xchg
push
pop
add
stc
push
fnstsw
aam
out
jecxz
and
cmp
nop
lcall
xchg
mov
xor
mov
sti
rclb
pop
sti
and
or
lcall
pop
addb
pop
xor
mov
inc
adc
imul
incl
cld
lds
sub
js
mov
xor
mov
xchg
jno
shll
es
mov
sub
or
enter
dec
mov
mov
lcall
fildll
sbb
cmp
in
les
call
cld
addr16
xchg
vmread
pop
lcall
or
mov
pop
loope
in
jg
push
pushf
add
add
and
sarb
xor
sub
mov
out
ljmp
mov
inc
pop
push
pop
mov
stc
push
insl
pop
push
mov
mov
mov
jne
jle
inc
test
pop
xchg
mov
aaa
mov
or
sbb
mov
daa
cmp
mov
sbb
sti
push
jecxz
sbb
lcall
repz
scas
loop
cltd
insb
jl
adc
xorl
je
mov
or
js
pop
push
inc
movsb
insl
cli
pop
movsl
sbb
aad
test
mov
fdivrs
mov
rcll
pop
je
mov
lods
outsb
inc
mov
pop
push
jns
cmp
std
fcoms
sti
sub
or
les
adc
call
fidivs
das
data16
push
lcall
les
xor
insb
mov
xor
jmp
fstpl
cmpsb
mov
xchg
push
sub
xchg
dec
pop
adc
push
sbb
mov
repz
lcall
inc
jecxz
insb
cld
mov
lds
cmp
or
add
call
fwait
pop
sbbl
enter
xchg
scas
inc
mov
jle
ficomps
fwait
lcall
lcall
dec
mov
fwait
sub
cmc
inc
add
aaa
cld
cmp
lods
fmuls
push
mov
or
daa
jle
cmp
sarb
push
adc
mov
mov
mov
arpl
stc
add
std
ljmp
xor
or
sbb
cli
testl
leave
jge
mov
lcall
fs
mov
movsb
loopne
lcall
adc
daa
sbb
and
jge
jnp
test
jmp
mov
mov
xlat
negb
pop
dec
loope
stos
dec
mov
in
mov
adc
scas
nop
int3
movsb
imul
mov
mov
jnp
insb
shlb
pop
dec
int3
xor
sbb
sub
call
adc
or
dec
push
stos
jo
cmpsl
nop
dec
push
outsl
mov
sub
in
decl
sub
js
ret
mov
sub
adc
je
cwtl
into
push
call
fmull
out
jmp
repz
notl
cli
push
xor
xchg
out
mov
decl
sar
pop
inc
das
sbb
cld
scas
loopne
xchg
adc
adc
mov
push
in
mov
cmpsl
adc
and
js
and
out
mov
or
cmp
mov
inc
in
clc
and
push
xor
addl
incl
pop
adc
push
cmp
imul
scas
cmp
mov
fcmovbe
jg
xchg
mov
inc
jg
decl
loop
sub
in
test
pop
repnz
pop
pop
gs
test
sub
mov
movsb
inc
xor
push
pop
pop
mov
lret
in
dec
cmpb
out
das
mov
xorb
sub
mov
add
dec
jae
adc
or
mov
fists
sub
clc
jecxz
add
jp
add
xchg
fisttps
inc
std
rorb
push
enter
sbb
push
pop
or
adc
incl
cli
xor
shll
push
jns
ret
mov
clc
sbb
mov
mov
ja
fnstsw
mov
jge
call
push
mov
mov
data16
push
sub
inc
aas
push
loopne
std
call
fadd
ljmp
hlt
adc
outsb
or
mulb
pop
lahf
inc
pop
xor
aas
adc
outsl
test
jo
fdivrp
cs
js
mov
mov
fs
and
fcomip
jmp
arpl
push
std
cltd
sbb
mov
fisubs
push
dec
ljmp
jle
pusha
jns
mov
scas
add
xchg
pop
mov
dec
enter
loopne
incl
mov
cmc
push
mov
adc
mov
xor
sbb
pop
out
pop
and
or
dec
addb
std
and
xchg
enter
clc
andl
push
dec
mov
inc
mov
imul
jl
xchg
fldl
or
scas
and
adc
daa
dec
or
cmp
pop
lret
pop
test
or
or
pop
xor
cli
cmc
fcomip
or
das
mov
xor
sbb
enter
mov
adc
lcall
xorl
dec
adc
aaa
insl
dec
cmp
mov
sbbb
mov
ljmp
test
not
and
ljmp
lods
or
test
cmp
xor
mov
jnp
jmp
sbb
fisubs
mov
nop
negl
jmp
mov
loopne
sbb
jmp
add
mov
push
pop
fildl
sub
and
mov
push
jne
ror
inc
ret
sahf
xchg
fxch
jmp
xlat
ss
push
ja
jp
stc
mov
xchg
mov
jg
shll
incl
pop
pop
push
orb
scas
repnz
loopne
ret
incl
push
xchg
lcall
push
xlat
rolb
pushl
sti
and
dec
jl
lea
mov
data16
filds
mov
sub
and
jle
mov
jmp
outsl
inc
xor
adc
fsubrs
sbb
aad
sbb
repnz
sub
push
cmp
imul
das
test
push
xchg
stos
fcmovnu
shlb
rcl
push
in
dec
movsb
sub
stos
jmp
mov
icebp
ss
mov
push
mov
xchg
add
mov
pop
push
push
je
inc
cmp
pushl
cmp
leave
jp
jno
arpl
cmpsb
ds
jne
insb
sub
les
in
and
popa
push
mov
jg
fisubrs
pushf
jmp
adc
xchg
ror
pop
inc
test
dec
adc
je
arpl
xchg
loope
dec
jle
call
push
and
dec
test
shlb
dec
rcr
cmp
push
cmp
dec
xchg
jne
lds
sub
xchg
push
das
inc
cmc
xchg
inc
andb
push
sbb
fidivs
mov
pop
fildll
ret
mull
add
push
adc
xchg
aas
scas
filds
mov
jg
in
push
icebp
mov
push
push
cmc
lock
enter
daa
aad
xchg
scas
ja
inc
fcomps
loope
pushf
scas
je
xchg
icebp
jae
mov
and
mov
into
push
or
mov
jb
filds
pusha
int3
test
aad
or
jg
and
inc
pop
inc
test
push
push
stos
leave
rclb
xchg
mov
and
leave
mov
cmpl
stc
aam
lcall
gs
cmp
push
dec
stc
adc
dec
out
insb
mov
push
decl
fcompl
jnp
in
jne
xchg
daa
pop
in
cmpsb
pop
inc
and
imul
xor
xchg
ret
aas
or
add
mov
incl
jl
mov
inc
stos
xor
and
std
or
out
fnsave
std
jg
push
xchg
in
shll
cmp
cwtl
in
popf
lcall
sub
in
out
mov
mov
popf
push
mov
call
icebp
lock
inc
adc
nop
ret
inc
in
or
incl
adc
mov
dec
inc
pusha
jecxz
out
inc
ljmp
cmpsb
notl
insb
and
fldcw
and
dec
push
js
adcb
add
pushl
lods
lret
or
icebp
xchg
xchg
adc
mov
jp
fildll
add
sub
in
xchg
mov
cmp
pushl
cld
push
xor
pop
xchg
test
pop
leave
xor
dec
mov
movsl
aaa
xor
jmp
lea
and
shr
jl
bound
mov
loopne
sub
cs
fcoml
icebp
fdivr
sbb
rcrl
jns
dec
dec
fnstenv
test
mov
jmp
adc
idiv
ja
cmp
jnp
imul
in
jae
mov
cmp
fisttps
mov
dec
stc
jb
jle
sbb
incl
mov
or
lods
dec
into
fcmovnb
mov
xor
xor
jp
xchg
fstpt
dec
push
cmpsl
mov
cmc
push
ret
push
push
outsl
fsub
xchg
jae
push
and
sbbl
rcll
mov
mov
loopne
mov
lcall
mov
jne
je
loope
sbb
popa
loopne
addr16
jmp
scas
sbb
rcll
dec
lods
test
mov
loope
xchg
pop
pop
fisubrs
mov
test
fistl
or
stc
lahf
dec
clc
sub
hlt
xchg
pop
fwait
mov
jmp
mov
sarl
pop
movsl
pushl
sbb
pmaddwd
into
cltd
xor
sti
xor
jb
pop
js
push
aam
cmc
ss
pop
dec
inc
xor
lods
mov
adc
outsl
lods
jmp
adc
shr
jns
rcll
xchg
jge
mov
imul
jecxz
add
imul
or
or
roll
mov
cmp
stc
push
mov
push
mov
sahf
mov
sbb
test
pop
dec
jg
mov
ret
decl
push
fistl
sti
xor
or
push
andb
call
cmp
mov
mov
inc
push
adc
xchg
loopne
shlb
fldl
mov
add
mov
inc
dec
lods
mov
sbb
ja
jmp
inc
stc
mov
dec
jl
mov
aaa
test
rcrb
adc
ss
adc
add
xlat
movsl
loope
mov
inc
inc
jns
jno
mov
jne
repnz
add
mov
movsb
lea
mov
sahf
sbb
mov
sub
aaa
sbb
ljmp
ret
mov
cwtl
cwtl
loop
add
pop
gs
mov
fcomip
pop
sub
movsb
out
cmc
incl
jno
xor
inc
mov
sbb
in
cmp
in
std
out
loopne
jmp
ret
cmpb
cld
in
test
fnstsw
ljmp
xchg
xchg
popa
call
add
pusha
iret
cld
decl
mov
cmp
aam
xor
insb
pop
and
fisubl
dec
xchg
xchg
push
dec
addr16
mov
bound
cmp
pushl
addl
push
negb
imul
cmpsb
jmp
popf
in
dec
pushf
xor
and
jecxz
xchg
push
inc
pop
fsts
call
inc
out
sub
add
mov
shr
loopne
les
inc
jo
pop
mov
mov
dec
xchg
ss
ljmp
frstor
shrl
cmc
sbb
sbb
sbb
shll
jb
jnp
ficoms
push
das
rcr
out
xchg
and
or
or
out
push
insl
sub
incl
jge
jb
cld
xchg
pop
jecxz
lahf
ds
int
js
ds
cli
out
jg
decl
fistl
lock
dec
ss
test
scas
daa
push
call
ror
sbb
mov
cmp
std
mov
mov
adc
pop
pop
lcall
push
xchg
push
xorb
jmp
ret
fisttpll
andl
cmp
data16
fwait
out
cmc
testl
repnz
inc
add
aas
mov
dec
add
xchg
clc
imul
mov
js
and
in
or
sarl
or
in
and
pop
arpl
ljmp
xchg
ret
and
inc
lods
rcr
mov
push
loop
jp
movsb
xchg
mov
mov
inc
mov
cmc
mov
sbb
sbb
pop
jno
int3
out
sar
push
xchg
xchg
ds
pop
shrb
stos
scas
mov
call
adc
adc
pushl
iret
sbb
cmp
xor
cmp
inc
pusha
inc
inc
daa
lcall
jp
fildll
cltd
outsl
jns
jne
cmp
inc
xchg
in
jb
cmp
inc
das
shll
decl
test
mov
adc
test
pusha
lahf
outsb
push
cltd
dec
lahf
into
xchg
xchg
loope
cli
ljmp
aas
push
cltd
mov
push
into
jno
xchg
ret
daa
add
pushf
leave
imul
xchg
lcall
xchg
mov
cltd
cmp
mov
cmp
mov
lahf
inc
aaa
decl
out
mov
iret
nop
adc
fnstenv
je
fcoml
mov
inc
loopne
jmp
jbe
lret
pop
mov
and
xor
lret
adc
fstpl
mov
pop
ljmp
jg
mov
pop
cwtl
ret
push
push
rcll
out
jno
inc
ret
dec
cmp
ljmp
xor
push
out
inc
js
or
inc
pop
call
add
sub
mov
and
mov
hlt
jbe
sarb
lods
filds
mov
cmp
les
ds
lods
incl
push
jmp
xchg
sub
mov
sub
sbb
repnz
pop
popf
mov
lods
sahf
loop
sbb
mov
sub
orl
inc
or
inc
and
aam
scas
sub
and
xchg
mov
ret
cmpsl
fistl
xchg
rclb
decl
jp
or
add
push
lcall
movsl
outsb
test
inc
jbe
das
pop
sub
clc
daa
mov
xchg
pop
div
or
popa
popf
lods
inc
push
mov
std
sbb
inc
xor
out
mov
jg
jp
rcrb
incb
xor
repnz
repnz
es
stc
adc
xchg
jmp
js
or
insl
sahf
mov
mov
outsl
mov
aas
jae
imul
dec
hlt
cmpsb
sbb
dec
xor
cmp
xlat
mov
repz
and
iret
sub
xchg
nop
int
jae
mov
fstpt
xorl
ja
ret
jo
repnz
xor
cmp
jg
pushl
jle
fwait
pop
mov
cwtl
jge
test
cmp
or
ljmp
ja
sbb
fdivrl
sarb
or
clc
imul
pop
fisubs
push
lcall
lods
stos
add
hlt
imul
mov
mov
jl
test
xchg
incl
iret
mov
mov
arpl
xchg
inc
imul
mov
inc
push
cld
or
incl
call
sbb
and
pop
jae
jp
mov
ja
cmp
xchg
fsubl
stc
and
cltd
pop
int
in
dec
cmp
jmp
ret
xchg
out
pop
push
ds
icebp
fistl
mov
add
ret
dec
mov
repnz
lcall
sub
gs
les
pop
and
mov
ljmp
xchg
aaa
adc
inc
ds
sarb
ret
mov
popf
dec
enter
jmp
inc
mov
pop
mov
mov
jnp
sub
lock
dec
push
xchg
popf
and
xor
pushl
or
test
inc
dec
pop
jle
nop
xor
sbb
inc
jno
mov
aas
inc
mov
roll
mov
ficompl
sahf
and
shll
mov
pop
scas
sti
push
ret
ss
mov
mov
mov
cmp
andb
pop
mov
sub
cmp
jg
mov
dec
in
sbb
jle,pn
lret
imul
subl
xor
mov
adc
lcall
nop
out
mov
jle
jmp
insb
iret
aas
gs
decl
mov
inc
pop
jbe
stc
mov
inc
cmp
fs
mov
out
cli
call
xor
inc
cmp
or
adc
sub
jb
adc
sub
mov
adc
mov
jmp
mov
cmp
sub
das
push
movsb
push
dec
test
sahf
fbld
cmc
jmp
scas
sahf
xchg
js
mov
cmc
adc
and
xor
into
lock
rclb
gs
add
lock
call
sub
or
inc
lahf
fisttpll
dec
nop
daa
imul
cmpxchg8b
lret
dec
mov
mov
and
sbb
lret
sub
pop
jl
push
sar
xor
or
jmp
call
sbb
fisttps
xchg
add
mov
fcomip
lcall
in
call
jnp
jp
jne
iret
cmpsb
mov
or
cmpsb
gs
or
hlt
fwait
xlat
push
or
jp
addr16
jns
fwait
mov
cmp
jno
fcomps
aas
inc
fs
push
add
add
into
fbstp
iret
fidivs
or
add
mov
push
mov
in
prefetchnta
popf
xchg
cmc
mov
pusha
inc
cmp
ljmp
xchg
adc
aaa
cmpsl
fcoml
xchg
arpl
inc
add
xchg
or
test
nop
aas
inc
pop
loopne
cli
outsl
mov
jl
fs
lods
jnp
shrl
out
dec
test
inc
adc
lcall
mov
xchg
xor
pop
xchg
jmp
sub
sub
add
inc
sahf
pushl
fwait
pushf
inc
or
push
stos
mov
xchg
dec
add
jge
cmc
in
dec
add
pushl
lods
and
outsl
cmp
out
insb
dec
push
cwtl
inc
pop
mov
les
js
ljmp
add
fsubrl
sbb
xor
call
dec
or
cld
popf
subl
push
out
es
adc
push
jno
push
jmp
popf
push
xchg
ljmp
popf
jle
push
lods
das
lods
xor
dec
mov
jo
leave
push
sbb
incl
fsubs
adc
dec
mov
pop
iret
into
jb
aad
jg
inc
jne
pop
xor
add
cmc
jecxz
inc
test
jnp
daa
and
decl
mov
stc
mov
sbb
imul
scas
or
pop
xchg
sbb
jne
inc
xchg
or
clc
incl
stos
add
fisubrs
lods
push
push
mov
or
pushl
in
jl
insb
jecxz
push
js
jmp
repnz
insl
inc
mov
lock
cwtl
inc
fwait
mov
jmp
pushl
outsb
fldenv
pop
inc
jae
sub
xchg
mov
mov
subb
add
adc
int3
shlb
sahf
inc
ds
push
stos
lret
int
out
hlt
fbld
xchg
adc
adc
fimull
pushf
outsl
sbb
pop
mov
pop
add
decb
add
lcall
jbe
xchg
cmp
stc
and
mov
iret
push
iret
pop
fdivr
dec
xor
stos
jp
inc
sub
and
mov
sbb
jle
mov
sbb
push
and
hlt
sbb
aas
cmp
std
xor
push
hlt
dec
sbb
pusha
jns
sbb
or
ljmp
icebp
and
movsb
rol
in
fildl
cltd
bound
sti
mov
leave
lods
fs
js
lahf
vpmaddwd
fcomip
mov
sbb
sbb
fsubrp
mov
add
pop
xchg
cli
loopne
neg
ja
outsl
add
test
jo
push
or
add
lods
dec
dec
decl
ret
mov
mov
fildl
lea
jb
in
decl
push
inc
dec
aad
insb
inc
sub
add
jmp
bnd
jne
sub
pushf
aad
jmp
call
es
fistpll
or
inc
mov
push
mov
pop
lahf
cmpsl
mov
cmp
jmp
sbb
and
int
mov
xor
xchg
fiadds
movsb
lods
mov
addb
iret
sti
das
cmp
mov
and
add
sahf
and
and
mov
pushl
mov
sahf
cmp
stos
mov
dec
mov
cmp
stos
and
cmc
test
call
sub
lock
xchg
xor
cld
pop
or
adc
jmp
sahf
cmp
test
inc
mov
insb
repnz
push
scas
pop
mov
push
mov
sub
mov
xor
pop
cs
arpl
lahf
xor
fildll
ret
cmp
popa
cltd
jae
int3
mov
cwtl
cmpsl
ljmp
mov
cmc
add
adc
out
hlt
cmp
aaa
mov
mov
sahf
lds
rolb
xchg
test
jg
xchg
sbb
push
jbe
inc
jle
lcall
cmpl
xchg
xchg
outsb
inc
and
sahf
jp
mov
scas
mov
rolb
lret
ljmp
imul
xchg
into
add
outsb
out
and
stos
or
cmp
fmuls
pop
bound
add
inc
cltd
fst
ret
inc
cld
mov
sub
cmpsl
shl
xor
decl
inc
imul
mov
jge
mov
adc
pop
mov
out
pushf
loope
push
cld
sbb
xchg
data16
adcl
jnp
scas
inc
daa
aaa
adc
hlt
call
jg
repz
outsb
cmpsl
push
leave
lcall
cltd
subl
jmp
rolb
mov
adc
loope
xrelease
femms
cmc
pusha
in
cli
sarl
or
dec
fcmovb
lock
pop
dec
iret
sbb
test
push
call
loopne
mov
cld
mov
fbstp
je
sub
cltd
mov
loop
lret
popf
and
and
dec
push
mov
jne
decl
lea
icebp
adc
mov
xor
and
jmp
add
inc
lods
push
insl
add
rcl
sub
fisttps
je
scas
dec
push
and
decl
lret
xchg
repnz
js
andl
add
call
cld
loop
jne
pop
and
mov
orb
call
adc
mov
and
cmpsb
adc
cmp
ret
cwtl
ljmp
pop
out
in
movsl
jg
mov
cmp
mov
stos
ficomps
stos
inc
jmp
icebp
push
mov
lods
pop
mov
and
cmp
mov
lods
mov
sub
jg
push
ret
pop
cmpsl
mov
enter
ret
jmp
movsl
outsb
repz
psubq
jg
sub
mov
xchg
inc
fwait
push
mov
fcomip
pop
adc
push
outsb
popf
shll
mov
or
mov
popa
jbe
jmp
jmp
add
inc
aaa
fisubrl
mov
add
mov
cmp
sbb
jb
xor
sub
fldt
or
ja
shl
cmp
add
jl
push
and
test
mov
or
jns
std
stos
int3
movsb
ljmp
push
lds
xchg
and
dec
sub
xchg
mov
jecxz
cmc
rorb
and
fcoml
mov
mov
adc
xor
fcompl
push
scas
outsl
cmc
xlat
xchg
mov
ljmp
xor
ljmp
test
jecxz
or
ja
mov
iret
jge
mov
xor
or
and
adc
punpckhbw
out
les
add
mov
pop
pop
push
insl
repz
xchg
mov
mov
mov
data16
jmp
or
sub
in
jne
lret
testl
and
pop
scas
pop
clc
ja
pop
inc
std
jg
cmp
cmc
out
xor
mov
add
outsl
dec
jnp
sbb
push
jg
call
divl
mov
cltd
ds
cltd
cwtl
lret
pushf
insb
leave
sub
sub
xchg
lcall
push
push
repnz
cmp
out
hlt
imul
icebp
xchg
mov
push
outsl
cli
ljmp
and
mov
mov
jecxz
xchg
adc
push
lods
pop
cld
incl
repnz
ffree
or
outsl
add
push
adc
shrl
leave
incl
mov
mov
daa
fsubp
pop
lahf
aam
push
jp
enter
fdivr
dec
mov
in
popf
sbb
lods
pop
pusha
mov
orl
imul
loope
jnp
int3
dec
jmp
add
dec
ljmp
call
mov
add
out
xchg
dec
scas
inc
sbb
adc
xor
mov
ljmp
adc
sbb
cmp
aas
xor
insb
lcall
decl
jl
dec
lret
stos
stos
hlt
jno
cmp
push
orl
loopne
orl
subl
loope
jmp
mov
cs
rolb
cmp
push
dec
adc
lock
add
in
mov
lret
dec
mov
push
jle
mov
decl
inc
imul
test
jg
jae
xor
test
push
std
ljmp
loopne
decl
out
dec
icebp
loopne
sbb
test
pop
inc
mov
stc
cmc
icebp
xchg
xor
ljmp
push
movsl
call
pop
icebp
bound
mov
stc
cltd
stc
or
jg
add
mov
cmp
stc
rclb
sahf
mov
test
and
pushl
mov
testl
cmp
xchg
cmpsb
adc
fsubr
je
xchg
das
pop
adc
shrb
pushf
decl
in
lahf
pop
pusha
adc
jecxz
fildll
stc
xchg
jmp
scas
dec
popf
sbb
push
stc
mov
insb
iret
mov
add
aad
fstps
incl
out
mov
movsl
scas
and
cld
or
adc
or
adc
inc
test
push
mov
inc
mov
fisubrl
pop
call
push
outsl
aam
adc
cmp
push
cmp
aaa
test
in
das
sar
mov
scas
cmp
in
jo
jne
sub
pushl
aam
pushf
mov
pushf
lea
jle
loope
cmp
push
mov
imul
incl
mov
jo
repz
jge
xlat
mov
enter
scas
cmpl
std
ficoml
dec
jmp
iret
loop
lret
or
sbb
ret
and
xlat
xor
mov
push
ficomps
std
push
pop
cmpsl
into
aaa
mov
imul
or
jecxz
mov
sti
mov
fists
repz
cld
es
fnstcw
sbb
inc
out
dec
enter
mov
ds
test
movq
push
dec
call
lret
xchg
add
jl
inc
push
std
mov
inc
cmp
pop
jg
jb
lahf
fmuls
clc
sub
dec
jae
arpl
jnp
jl
jmp
in
testl
ljmp
pop
sub
nop
xor
pop
in
ficomps
push
imul
dec
es
dec
add
addr16
cltd
pop
es
lock
out
in
fisubrl
and
incl
clc
stc
sti
ret
out
jg
and
xorb
cli
add
add
pop
cs
xchg
xor
out
adc
pushl
addb
mov
pop
sbb
xchg
inc
test
sbb
ja
mov
mov
sbb
pop
movsl
pop
mov
into
jecxz
add
in
mov
jmp
or
bound
scas
test
jne
shr
xor
xorl
pop
test
inc
cli
add
sub
xchg
mov
pushl
xchg
js
sub
and
jp
adc
in
out
or
pop
mov
cmp
lock
pop
pop
push
push
and
imul
loope
inc
push
jg
xor
es
pushl
adc
sbb
es
movsl
mov
sbb
adc
or
add
dec
xchg
xchg
mov
call
movb
clc
sbb
jmp
fimull
in
cmpsb
jge
or
and
hlt
xor
popa
pop
dec
js
push
ljmp
lcall
xchg
fsubrp
add
jo
dec
test
nop
daa
lret
or
popl
pop
cli
sbb
fists
nop
lret
push
int3
jecxz
fs
xchg
xor
rorl
xchg
mov
cmp
push
lcall
shll
xchg
pusha
and
inc
movsl
std
jle
mov
add
pop
dec
xchg
out
pushf
adc
mov
outsb
jge
pmulhw
rorb
iret
fbstp
nop
ds
mov
dec
dec
jmp
test
decl
mov
push
stc
mov
pusha
jo
or
and
jg
scas
cli
inc
sbb
and
out
add
xchg
stos
dec
dec
jnp
dec
mov
into
push
sete
xor
inc
insl
adc
mov
repnz
push
jg
call
popf
and
incl
icebp
mov
mov
out
push
mov
adc
mov
lcall
ds
decl
jle
mov
dec
in
addr16
push
enter
sbbl
dec
aam
lcall
fistpl
lea
xlat
push
test
test
mov
ja
add
mov
cs
pushf
ss
add
ss
ljmp
inc
sub
ffree
pop
add
arpl
mov
mov
xchg
mov
jo
adc
test
cmpsl
and
jb
pushf
paddw
inc
call
outsl
xchg
insl
mov
daa
scas
cs
int3
or
or
and
or
push
nop
sub
es
add
sbb
cmc
sbb
push
test
stc
sbb
jmp
cmpsl
jp
and
push
or
cmpsl
or
mov
push
pusha
lcall
push
daa
mov
clc
cs
call
jl
popa
out
cmp
xor
cli
mov
xor
cmc
scas
gs
mov
cwtl
or
cmpsb
cmp
push
popw
movsb
inc
pop
jle
dec
mov
or
call
jnp
repnz
iret
xchg
jmp
mov
push
xor
iret
mov
lcall
xor
mov
repnz
hlt
fcomip
dec
pushf
xchg
aaa
ret
xchg
dec
aaa
mov
dec
mov
pop
lock
cmc
andb
loopne
sbbl
icebp
jg
out
lock
mov
shll
mov
lcall
pop
inc
cli
ja
lcall
fistps
dec
push
pushf
sbb
pop
cmp
mov
aas
mov
incl
cmpsb
push
je
cmp
xor
adc
decb
out
out
aad
fs
popf
pop
cwtl
sub
push
idivb
cmp
dec
mov
rolb
pop
dec
push
int3
or
incl
push
cmp
stos
mov
loop
cs
xor
fsts
fs
clc
incl
out
lds
popa
push
xchg
xlat
add
add
mov
jmp
in
iret
mov
mov
add
fs
sub
ljmp
mov
imul
pop
lahf
add
loope
aas
fcomps
ret
pop
sbb
imul
pushl
fs
push
shr
pop
inc
cltd
and
jmp
fadd
jns
pop
or
mov
push
push
insb
pop
mov
jge
mov
add
out
fstps
shrb
mov
incl
add
jne
lods
fdivrl
out
mov
cltd
loop
push
mov
and
add
std
pop
cmp
xchg
push
push
add
loop
or
sbb
add
lcall
aad
sti
mov
xchg
mov
mov
lahf
add
and
pop
out
movsb
sbb
adc
jnp
call
adc
push
ja
mov
mov
movsb
gs
mov
test
or
cltd
cltd
popf
mov
fcomp
pop
sbb
cmp
pusha
mov
fnstsw
in
leave
stc
mov
mov
cmp
or
rcrl
addr16
imul
pop
sbb
mov
cmpsl
push
sti
pusha
xchg
xchg
scas
xor
sub
jmp
hlt
mov
mov
dec
arpl
in
dec
mov
dec
jle
sbb
mov
inc
pushf
mov
js
xor
mov
add
and
xor
cmp
mov
or
inc
leave
scas
test
outsl
cwtd
mov
lea
pop
sbb
popf
inc
adc
jmp
rcr
sub
push
outsl
inc
adc
nop
cmpsl
addb
mov
mov
decl
push
mov
mov
mov
shll
rclb
insl
or
push
adc
push
push
shrb
jg
jae
add
dec
ss
mov
mov
or
pop
cmp
incl
or
aaa
popa
sub
adc
enter
push
jo
adcb
jp
lods
xor
lcall
mov
sbb
cmpsl
push
mov
mov
fdivr
lcall
dec
andb
jmp
bnd
sbb
add
jnp
stc
popa
inc
mov
jbe
mov
inc
add
loopne,pn
rcrb
or
add
orl
dec
inc
pushf
aad
or
xor
or
mov
inc
aas
jo
daa
dec
imul
pop
mov
addr16
xchg
insb
ret
js
mov
mov
mov
call
or
ljmp
sub
cmp
sbb
mov
int3
fimuls
data16
pop
call
rolb
cmp
enter
cmp
bound
out
push
xorb
mov
dec
mov
cmc
fwait
mov
dec
sti
mov
xchg
xchg
add
jl
dec
fisubl
pop
cltd
in
icebp
cmp
addr16
fsubr
call
imul
pop
rcrb
jecxz
decl
push
mov
inc
sti
loope
jp
sub
bound
imull
mov
stos
fwait
insl
xor
insb
inc
pop
js
ljmp
cmp
xchg
mov
negb
jmp
cld
cs
testb
adc
int3
loop
rcr
addr16
xor
pushl
adc
inc
sub
mov
inc
mov
jnp
sahf
popf
mov
cmp
jg
sub
xchg
xchg
adc
out
cmpsl
jg
lods
jb
jle
mov
add
in
mov
pop
cmpb
push
pop
mov
cld
insl
sub
gs
repz
decl
mov
mov
out
pop
loopne
mov
push
push
inc
cmpsl
push
movsb
faddl
mov
int3
add
cmp
and
inc
jmp
add
dec
sub
inc
sbb
out
jmp
add
jge
mov
pop
cs
sub
jmp
int3
hlt
adc
push
ret
cli
in
notb
stos
xchg
mov
call
cld
mov
rclb
xchg
cmp
add
inc
and
mov
dec
dec
mov
mov
call
mov
and
jno
jmp
jo
rcrb
popf
syscall
or
insb
movsb
inc
sbb
pop
mov
adc
pushl
mov
frstor
xchg
add
lods
stos
out
je
repnz
mov
call
stc
sbb
or
mov
sbb
dec
loop
mov
decl
stc
aad
es
addr16
add
xchg
jns
cmpl
pop
aas
sub
xor
pop
outsl
leave
aaa
mov
pusha
in
jbe
cmpsl
test
cmpsl
cld
dec
cltd
loope
jge
icebp
xchg
js
in
clc
mov
lods
lock
jmp
and
into
lds
loope
sbb
fmull
orb
jne
lret
pop
xor
inc
sub
sahf
in
mov
mov
mov
inc
and
call
cld
loopne
sub
xchg
sbb
movsl
sbb
lcall
jle
pop
mov
neg
lea
mov
lods
fsubrl
jg
push
lahf
outsl
add
das
cld
ret
sahf
lcall
cmp
pop
cld
push
adc
popf
or
stc
mov
jmp
pop
ss
mov
popf
xor
cmp
pop
mov
push
in
adc
fcoms
loopne
and
mov
fstp
adc
adc
enter
sbb
loopne
push
push
div
sub
call
sbb
adc
xor
popa
lods
push
mov
mov
push
mov
pushl
inc
lods
sub
test
sbb
fidivrs
lods
jge
mov
pop
cmc
push
sti
arpl
lds
mov
pop
mov
call
sbb
das
pushl
sbb
loop
and
mov
xchg
int
sub
das
repz
int3
ror
adc
sbb
es
fdivr
mov
xchg
lea
cmc
jp
fisubrl
push
cwtl
xchg
les
push
fcom
cmp
pushl
push
ljmp
lea
hlt
dec
dec
mov
insb
jne
cltd
inc
adc
call
in
pushf
sub
push
push
mov
jle
pop
lret
push
hlt
test
int
add
out
mov
jg
dec
dec
inc
add
inc
add
or
adc
sarb
mov
and
xchg
jae
cltd
mov
rcrb
cmc
call
std
fidivrs
imul
int
sar
sti
push
repnz
arpl
or
dec
cwtl
mov
add
in
std
cltd
sbb
fidivrl
xor
inc
shll
scas
in
ss
mov
call
sub
dec
and
test
subps
jp
clc
aad
mov
call
lret
inc
xbegin
or
popa
xchg
push
jb
cmp
xor
ljmp
sarl
add
pop
jnp
popa
sbb
push
and
imul
or
xor
rorb
decl
daa
mov
jb
or
loopne
mov
dec
or
hlt
xlat
pop
dec
outsb
pop
jg
mov
lcall
imul
push
adc
jo
inc
fcoml
lea
pushl
out
cli
xchg
push
cmp
xor
rcll
out
xchg
icebp
dec
data16
mov
loope
shr
cmpsb
mov
jns
ljmp
xchg
icebp
mov
add
adc
pop
movsb
cmp
pop
data16
jmp
jns
adc
dec
mov
sti
sbbl
and
adc
fwait
loopne
out
mov
leave
adc
add
dec
xchg
popf
jbe
inc
roll
in
stos
call
or
call
ja
test
add
js
sbb
scas
xchg
mov
cmp
div
xor
push
mov
add
mov
loop
pop
mov
cmp
cmpb
lods
push
mov
mov
cmp
xchg
mov
xchg
int
dec
push
sbb
cmp
jle
pop
or
aaa
lret
stos
addl
lahf
loopne
jo
aaa
cld
ljmp
addr16
pop
add
cmp
cli
fldt
push
jg
xor
push
stos
mov
pop
adc
dec
out
call
pop
jg
inc
lock
aam
mov
sbb
aam
push
clc
adc
decl
add
inc
das
movsb
jle
aaa
cli
cltd
das
sub
jo
dec
dec
push
xlat
mov
push
add
ljmp
inc
and
aam
daa
aas
push
out
pop
outsb
mov
sbb
xor
loopne
jmp
sub
lret
icebp
cs
adc
movsl
scas
add
cltd
sub
icebp
add
sub
fstpt
mov
push
pushf
adc
jns
jle
inc
jmp
pusha
or
hlt
mov
movsl
hlt
mov
cld
cmp
call
cld
push
into
jo
mov
negl
or
sbb
leave
cmc
faddl
mov
decl
jle
jae
sbb
js
jnp
cmpsl
lock
shlb
call
int3
subl
lds
fnsave
add
ficompl
sub
incl
adc
es
fstps
lods
cmp
xor
fxch
ljmp
jmp
fadd
daa
jns
and
push
outsb
adc
adc
push
scas
dec
sub
incl
test
ja
push
adc
cmp
sub
mov
add
scas
xor
lret
out
test
adc
pop
inc
add
mov
jae
pop
lods
xor
in
xor
jbe
cmp
ljmp
cli
incl
push
cmp
add
inc
pop
test
imul
sub
outsl
loop
pushl
xchg
dec
mov
jns
jne
adc
ss
js
xchg
lock
mov
hlt
lods
sti
xchg
lea
fidivrs
jnp
or
decl
push
push
sarb
pop
xchg
sti
pusha
addr16
or
sub
adc
test
cmp
ds
cmc
call
cmpsb
aas
mov
rorl
ss
fstl
sub
cld
ljmp
in
push
sub
icebp
lret
sub
push
roll
shrl
out
jle
adc
call
mov
lret
iret
out
and
bswap
or
xchg
test
or
mov
lcall
rcrb
mov
movsl
sub
pop
xchg
cmp
mov
pop
pop
out
es
mov
jp
cmp
call
mov
popa
insb
mull
and
stos
mov
out
pcmpgtb
clc
cli
lret
pop
sbb
pop
inc
xchg
in
push
test
ret
insl
add
lcall
sbb
adc
lcall
lock
test
push
lock
popf
jl
lea
jb
inc
lods
orl
jns
adc
inc
mov
inc
cmpsl
xor
mov
pop
cmc
call
cwtl
rcll
loope
test
loope
push
xor
xor
scas
loopne
mov
xchg
fcoms
jmp
mov
mov
orb
add
loope
je
shrl
fimull
and
dec
and
jne
decl
out
xlat
lea
bound
test
or
push
cld
push
xor
aaa
mov
pop
scas
mov
scas
cmp
in
sub
cmp
xchg
mov
scas
mov
fadd
cmp
pop
divl
das
sbb
sbb
xchg
pusha
shll
push
rep
xlat
loop
add
mov
and
lods
out
scas
sbb
lods
mov
jle
pusha
sbb
sbb
adc
dec
mov
hlt
inc
push
dec
rorb
shlb
add
out
xchg
test
pop
sti
pop
orb
lds
pop
je
mov
jbe
mov
bound
add
lds
stos
jns
or
or
out
andl
ljmp
loop
sbb
cwtl
not
xor
loope
cwtl
mov
sub
loope
cwtl
in
sub
jns
fidivs
sbb
lock
into
sub
cmp
leave
mov
enter
sbb
pop
push
add
dec
push
je
cmp
mov
dec
pop
faddl
out
xor
stc
pop
je
mov
ljmp
cmp
mov
sbb
adc
mov
shlb
pop
xor
fidivrl
iret
sbb
sbb
call
fcmovb
movntps
push
sbb
ljmp
dec
outsb
in
les
mov
xor
notb
mov
int
lret
mov
pusha
incl
xor
lret
mov
ljmp
loop
inc
mov
mov
rcl
and
and
call
push
xor
or
cmp
lods
cltd
jae
sar
jbe
or
xchg
push
and
inc
mov
repz
sub
lcall
xor
inc
lock
stos
iret
push
and
push
push
mov
pop
test
add
xchg
xchg
push
imul
das
cmc
mov
outsb
frstor
push
mov
fcomps
out
jge
enter
adc
not
in
aad
bound
fisttpll
adc
sarl
dec
adc
out
ret
cltd
fidivrs
sub
stc
mov
addl
lods
int
test
movsb
mov
pop
loope
clc
adc
push
dec
or
popa
inc
fcmovnbe
outsl
lds
or
pop
scas
xor
out
sbb
xor
out
out
shlb
sbb
add
jg
cmp
call
xor
jl
push
jecxz
pusha
inc
adc
adc
fwait
mov
add
jl
leave
call
stos
mov
pop
roll
pop
xlat
cmpsl
pop
sti
or
addps
jmp
insb
mov
jo
les
xor
sti
sub
andnps
cmp
lcall
lret
mov
outsl
sbbl
jge
ret
inc
fnstenv
les
pop
pop
jbe
jp
loop
decl
int
sti
cmp
scas
ds
movsb
dec
dec
daa
cmp
int3
shll
call
jle
into
ret
mov
sbb
mov
call
inc
push
cmp
enter
out
pop
fdivrp
jmp
ss
aad
and
cmp
pop
idiv
jg
xor
cltd
sub
in
andb
mov
cs
push
movsb
pushf
sub
call
gs
adcl
jbe
xchg
mov
sub
lret
ret
push
and
push
mov
popf
push
pop
call
jbe
mov
pushf
call
cwtl
cmp
les
mov
clc
jg
lods
decl
or
insl
std
aaa
fdivrl
inc
or
or
pushf
daa
mov
push
lcall
add
mov
std
sahf
mov
stos
xchg
add
gs
ljmp
ret
loopne
lds
add
mov
enter
call
sar
in
sub
push
mov
je
aas
mov
fldlg2
xor
stos
jle
mov
pop
in
leave
lcall
rorl
inc
dec
call
push
sahf
aaa
mov
sahf
mov
push
push
or
inc
cmp
xlat
jne
insl
jmp
xchg
and
sub
pop
iret
xchg
cmp
jg
sbb
xchg
dec
lock
inc
add
das
push
mov
mov
xor
mov
jp
sti
inc
call
loopne
adc
adc
popa
mov
jge
push
jp
jno
fst
outsb
jbe
popl
inc
std
lret
sub
mov
loopne
pushl
rol
adc
aam
cld
and
ljmp
decl
mov
xchg
insl
inc
push
push
cmp
or
xchg
mov
icebp
std
mov
into
push
adc
jg
shll
xchg
pop
jo
adc
bound
test
lock
cmp
dec
imul
std
xlat
popf
sbb
add
xchg
test
push
push
repz
push
pop
sbb
fildll
out
sbb
into
xor
cmc
mov
push
mov
xchg
rcll
xlat
test
jmp
sub
mov
mov
fdivrs
add
out
push
push
inc
aad
or
pop
push
andl
xor
jno
pop
mov
cli
insl
loop
jns
jae
and
jmp
inc
addb
or
inc
jecxz
les
sbb
adc
xchg
loop
into
xor
std
xchg
jns
inc
mov
fiadds
fdivp
jb
adc
and
jmp
xor
bound
sbb
pop
dec
hlt
xor
stos
jl
push
push
mov
insb
push
das
sar
pop
push
loope
add
jbe
movsb
aaa
mov
sti
or
jae
pushl
xor
je
pusha
push
insb
cmp
arpl
inc
shlb
jmp
xlat
call
loopne
testb
cld
lcall
clc
aaa
jbe
mov
hlt
push
out
clc
fcomp
mov
orb
xchg
insb
out
inc
out
in
loopne
mov
pop
mov
ljmp
sub
add
jp
push
mov
mov
sub
cmp
push
inc
clc
faddl
arpl
add
push
mov
call
outsb
loope
sub
jb
jg
xchg
xor
aaa
mov
decl
sub
shlb
or
lcall
addb
mov
or
dec
sbb
lcall
lock
push
hlt
adc
sbb
mov
rcrb
push
mov
addr16
incl
and
mov
pop
in
cmp
gs
faddl
dec
jmp
cmc
fwait
rol
pop
out
mov
mov
sbb
test
lcall
iret
jae
rcr
icebp
cld
mov
lret
or
xor
dec
mov
push
inc
lods
loop
and
mov
inc
xor
pop
cmp
jo
loope
jne
mov
pop
xor
call
sbb
cmp
mov
add
std
mov
and
shrl
mov
scas
les
dec
cmpsb
cs
mov
cvtpi2ps
or
jmp
pop
xor
mov
dec
mov
push
cltd
call
call
pushl
inc
jne
mov
add
inc
dec
fs
mov
cmpsl
popf
cli
lcall
stc
mov
test
push
xor
in
xchg
inc
jmp
stos
incl
test
sbb
arpl
arpl
icebp
jmp
leave
jbe
xchg
pop
in
sub
inc
mov
orb
mov
aaa
mov
ljmp
je
adc
mov
fdivrl
je
adc
fwait
sahf
aad
sbb
decl
push
es
scas
push
rcll
mov
pusha
popa
xchg
cmp
add
fldt
sar
sbb
mov
inc
push
mov
mov
push
std
add
hlt
push
sbb
jge
int3
and
jl
ret
sub
rclb
ljmp
mov
dec
aad
cmp
mov
mov
enter
jmp
pop
shlb
pop
jne
sub
push
out
cmp
xchg
xlat
mov
scas
add
cli
mov
out
mov
jne
push
cmp
xor
xchg
xchg
incl
pop
in
mov
je
repz
and
and
in
fcmove
pop
lret
cmc
pop
pushf
stos
outsl
mov
jnp
jle
lcall
mov
mov
adc
inc
mov
enter
cli
hlt
jne
lcall
jg
jl
cmc
jg
stos
movsb
aam
gs
xor
cmpsl
fmull
jbe
incl
add
pushf
jl
push
in
sahf
in
xor
and
lea
cld
decl
lret
out
push
jle
pop
loop
pop
jle
leave
das
cmp
enter
jmp
dec
in
cmp
mov
xchg
ljmp
and
loope
incl
adc
clc
das
add
into
fistps
loope
add
mov
mov
jbe
fstps
mov
dec
cmp
lret
imul
jg
ljmp
cmp
mov
inc
rcrb
lcall
pushl
mov
sbb
pop
jo
aad
notl
cmpsl
sub
mov
stc
xlat
mov
mov
jle
enter
or
dec
mov
ret
and
push
ret
xor
rcrb
call
inc
repnz
pushf
insl
and
jg
lcall
int
lods
mov
sub
hlt
dec
cmp
xlat
fwait
xchg
mov
ljmp
pusha
js
jb
in
int
daa
or
fs
fs
jo
leave
mov
xchg
sub
jmp
mov
adc
cmp
mov
cld
cmp
shlb
push
xor
mulps
or
mov
dec
push
fistps
cs
mov
push
stos
aam
shlb
jne
jg
mov
jg
arpl
pop
pop
pop
jmp
sbb
cld
or
jnp
insl
out
sbb
lret
sahf
stos
dec
movsl
xchg
or
addb
ljmp
fisttpll
jmp
mov
lods
fcompl
mov
stos
or
sti
push
fimull
incl
sub
or
iret
repz
push
add
sub
inc
mov
inc
jno
rcrb
inc
repz
repnz
pusha
push
addl
jnp
cli
add
jle
sbb
call
mov
and
mov
sbb
or
lret
sbb
insl
cmpsb
jae
std
or
pop
ljmp
lods
and
clc
push
push
int
ja
call
out
xor
lcall
ja
cmp
sahf
jmp
jno
ud0
int3
imul
call
data16
cltd
add
add
popl
int3
fsub
es
or
incl
dec
hlt
mov
mov
xchg
idivl
push
ljmp
sub
sub
jne
xlat
and
xlat
mov
in
mov
jl
call
inc
pop
call
cmp
andb
cltd
jae
lods
lock
or
loopne
es
inc
sbb
fbld
movsb
xchg
gs
out
fisttps
cmpsl
fidivrl
push
pop
pushl
jne
pop
fadd
out
mov
les
add
cmp
mov
xchg
xor
lahf
popa
push
dec
cmp
and
stos
into
in
push
and
pushl
jno
or
lret
mov
push
xchg
or
or
mov
jmp
xor
pop
xlat
mull
js
rcll
jns
dec
cmp
stc
rorl
jno
lcall
pop
adc
pop
popa
stc
dec
sahf
fwait
or
mov
icebp
jmp
dec
fldcw
or
lcall
pop
lods
pop
iret
filds
fimull
js
jge
inc
sbb
in
lret
jb
shl
mov
adc
jg
in
inc
movsb
or
out
mov
ret
push
decl
mov
pusha
and
mov
sub
test
rcl
ljmp
call
dec
inc
sbb
sahf
add
mov
ljmp
inc
repz
es
cli
inc
mov
jmp
sbb
add
inc
out
xchg
and
mov
xor
pop
dec
clc
aaa
outsb
dec
sbb
rcl
add
rcr
xchg
sub
or
hlt
ret
fiaddl
repnz
jno
jno
jae
fsubrl
iret
sub
and
clc
incl
mov
or
sbb
xor
sbb
scas
outsl
jp
jbe
sub
inc
and
pushl
adc
out
cmpsb
mov
in
out
mov
xor
pushl
xchg
and
dec
adc
adc
xor
sbb
outsb
sub
sbb
pop
sub
xchg
adc
mov
dec
mov
dec
push
xchg
mov
ljmp
imul
outsl
rcll
mov
insl
xchg
sbb
push
mov
push
dec
mov
cld
mov
push
loopnew
mov
fistpl
mov
lcall
lds
stos
shrl
or
shl
cli
mov
add
ret
ss
decl
push
stc
pop
pop
xchg
lcall
pop
js
lods
xchg
sbb
add
out
pop
imul
mov
out
cmp
pop
sar
sti
jle
mov
push
repnz
call
jne
dec
sbb
in
cmpsl
jnp
pop
push
jge
adc
sbb
and
clc
decl
jae
loopne
sub
push
mov
lock
adc
pop
mov
cltd
dec
sub
fs
sbbb
pop
and
decl
test
iret
pop
pop
lret
arpl
push
fsubr
ds
data16
cltd
mov
push
sti
decl
mov
mov
and
push
sub
xchg
push
xchg
je
fidivs
or
pop
out
and
or
lods
add
cli
decl
push
and
sub
test
cmp
mov
sub
and
and
or
incl
js
mov
movsb
and
daa
cld
out
sub
js
sub
ret
adc
pop
add
incl
icebp
inc
sbb
push
rcll
jne
fmuls
out
pushf
xor
js
mov
arpl
decl
sarl
jno
out
hlt
das
or
jecxz
btr
cmp
cwtl
clc
incl
xchg
jge
sbb
xor
cmpsl
out
jne
out
cmp
fdivl
inc
adc
sub
adc
adc
xchg
test
incl
sarl
add
mov
roll
lcall
cld
ljmp
push
and
adc
mov
mov
sbb
mov
pushf
fbld
call
mov
sbb
rolb
mov
movsb
movsb
leave
push
inc
dec
pusha
xor
push
mov
push
inc
aad
lock
sbb
decl
imul
cwtl
iret
and
icebp
jne
or
enter
std
inc
adc
xchg
cmp
in
es
vmwrite
inc
inc
cmp
hlt
ljmp
imul
insb
xor
cld
push
cmp
fcmovb
decl
lret
cmp
stos
icebp
push
test
sub
pushl
add
mul
mulb
and
lahf
pop
subl
and
fs
mov
cwtl
in
mov
sbb
or
pop
mov
scas
sbb
push
popf
dec
into
decl
jbe
aas
lret
ficoms
push
push
call
push
lcall
xor
mov
or
das
dec
sahf
adc
lret
int3
xchg
incl
scas
jge
or
div
lahf
push
shlb
out
jbe
out
dec
fcmovne
gs
dec
and
pop
lret
push
adc
decl
cmp
cmp
and
dec
sub
dec
push
fldcw
js
repz
jmp
lcall
sbb
dec
les
jle
mov
push
daa
inc
xchg
lds
jle
jmp
sbb
dec
test
pop
test
in
pop
fildll
mov
push
adcb
daa
and
mov
call
dec
fbld
adc
mov
ljmp
addr16
outsb
jns
ljmp
add
push
pop
test
aaa
mov
sub
scas
icebp
pop
std
or
stos
lcall
adc
jbe
jns
jae
lea
and
cmp
xchg
dec
mov
sbb
imul
inc
test
mov
stc
and
and
ret
xchg
outsl
adcl
mov
xchg
and
fldl
adc
pop
out
clc
andb
fldl
adc
fisubrl
shrb
pushl
std
xchg
jecxz
out
in
push
cwtl
push
xchg
mov
outsb
imul
push
or
incl
jge
cmp
mov
sbb
js
pushf
test
and
ljmp
lcall
fmulp
loopne
pop
daa
adc
xchg
xor
test
lods
out
or
stc
sbb
jl
or
fs
mov
and
cs
jg
fimull
xor
xchg
pop
rcr
out
sbb
lods
lea
aam
lret
or
aas
pop
inc
xchg
xchg
shl
inc
push
jb
stos
rorb
enter
mov
jg
mov
dec
sub
movsl
daa
xchg
popa
ud0
mov
mov
aas
and
mov
and
dec
mov
dec
out
fnstsw
cmp
lds
dec
xchg
movups
lahf
cwtl
imul
sub
aad
xor
xchg
into
and
xor
pop
sti
pushl
es
repnz
mov
imul
and
sub
inc
repnz
pop
and
ficoml
and
and
out
incl
mov
inc
jle
in
into
call
clc
sbb
rol
inc
mov
adc
and
xor
or
mov
ds
in
scas
out
movsb
mov
lods
inc
fwait
push
mov
js
outsl
jne
jmp
rcrl
mov
test
aaa
cld
outsl
push
call
push
xchg
xor
cmc
enter
xchg
ss
stos
pushl
cli
mov
xor
dec
push
mov
add
xchg
sub
cmpsb
or
movd
in
push
sub
clc
push
ljmp
xor
jo
dec
mov
cltd
ret
lcall
sahf
imul
scas
jb
xchg
test
mov
and
lcall
push
ret
push
and
sub
repnz
lahf
sbb
pop
daa
pop
and
popl
fimull
mov
out
js
ret
lcall
jp
fidivrs
out
mov
add
jno
ds
push
rcrl
jmp
mov
jne
dec
negl
aaa
pop
rcll
cmp
in
cmc
mov
out
call
loopne
sahf
pop
pop
mov
test
ficoms
jns
dec
shlb
push
xchg
repz
add
lods
add
xorb
ss
fstl
xchg
and
mov
or
mov
inc
popf
jbe
enter
out
xor
sahf
mov
test
rol
and
pop
std
fildll
or
push
mov
push
stos
adc
cs
sbb
jg
hlt
je
jne
cwtl
cld
adc
stc
adc
mov
out
lcall
push
add
or
mov
pop
mov
imul
lcall
loopne
jo
bound
sahf
or
cmpsl
pop
jl
and
mov
mov
mov
xor
and
insl
jae
int
inc
repnz
cwtl
push
test
pop
loopne
jbe
push
data16
dec
dec
add
ljmp
push
sub
mov
loop
xor
xchg
cmc
dec
xchg
and
mov
mov
shl
mov
and
mov
inc
jle
pop
je
in
and
call
sub
cmp
adc
movsb
jmp
rorl
or
decl
push
sbbb
mov
arpl
pop
mov
or
bound
or
pop
repnz
cmpxchg
push
dec
pop
cmpsb
pop
in
call
lcall
and
sbb
jge
cli
mov
testl
lahf
and
les
clc
hlt
es
call
incl
mov
andb
call
cs
mov
cltd
jbe
in
ret
inc
ficoms
popa
insl
cmp
jge
nop
jmp
dec
test
pop
rcrl
loop
dec
mov
aaa
mov
push
lock
add
and
pop
dec
push
and
pop
jae
or
cmp
ljmp
test
xor
xor
inc
popf
jnp
fbld
fcomip
mov
rsm
mov
jmp
cwtl
stos
in
jl
sbb
mov
jnp
pop
incl
add
add
adc
xor
mov
imul
movsb
push
clc
cmp
xor
aas
insb
cwtl
push
mov
xlat
movsl
outsl
ds
in
xor
mov
sub
mov
inc
xlat
inc
orl
jl
dec
stos
ljmp
roll
xor
inc
mov
pop
ss
push
out
jl
test
push
sbb
mov
fistpl
das
lods
mov
add
sub
andl
jp
incl
cld
test
xchg
scas
mov
mov
inc
test
loope
hlt
mov
call
cmp
into
jbe
sub
out
cli
push
jo
cli
out
adc
jmp
test
fbld
mov
insl
popa
inc
aad
dec
mov
clc
mov
mov
sub
notl
mov
adc
xchg
dec
mov
hlt
incl
in
push
xchg
mov
clc
mov
shll
jg
mov
dec
xor
jg
jg
addb
pop
xlat
lds
es
xchg
bound
and
jge
mov
mov
dec
cmp
xor
dec
mov
sahf
outsb
dec
jo
mov
push
decl
stos
leave
daa
aas
stos
lods
cbtw
mov
add
decl
mov
sub
sbb
icebp
mov
hlt
pop
push
arpl
decl
jne
or
cli
dec
pop
movsl
dec
sub
int
mov
incl
jo
sub
inc
loop
lds
into
dec
movsb
leave
jg
mov
test
test
mov
sub
fldenv
sbb
cs
cmp
sar
add
addl
sub
xor
add
mov
xchg
imul
inc
jae
sbb
ljmp
push
loop
cs
loop
sub
lret
jl
nop
imull
lret
inc
add
sbb
into
add
mov
sub
mov
cltd
inc
mov
in
icebp
pop
orl
testb
fnstcw
lods
push
arpl
imul
dec
popa
dec
mov
decl
int3
shrb
push
cs
mov
push
or
dec
ret
fdivrs
xor
scas
jae
mov
pusha
das
or
mov
je
ljmp
lcall
xor
pcmpgtw
mov
jmp
mov
mov
push
xor
aas
rclb
dec
js
out
cmp
je
mov
lret
inc
xchg
stos
imul
mov
incb
data16
push
push
fst
incb
dec
je
jae
movsl
outsb
outsb
push
insl
shll
sbb
xchg
jmp
mov
mov
in
out
sbb
fwait
pop
push
pusha
or
jl
call
jecxz
dec
inc
mov
xchg
pop
dec
cmovbe
mov
ljmp
jp
dec
jmp
sbb
call
iret
pop
adc
cmp
cmpsb
mov
xchg
push
mov
dec
repz
ljmp
cmpsb
sbb
jo
xchg
push
jo
imul
adc
fdivs
imul
push
test
sbb
clc
out
lahf
in
jmp
sbb
decl
fxch
mov
xchg
inc
inc
jge
sbb
push
clc
jl
push
dec
in
sub
pop
in
or
hlt
call
leave
ljmp
movsb
call
cltd
loope
ret
ljmp
ror
jp
jo
mov
cmp
jp
loopne
jbe
jnp
fs
lcall
dec
sub
test
cmp
outsl
out
lods
scas
xorl
xor
fiadds
xorl
mov
pop
repnz
or
xchg
sti
sub
loopne
xchg
fistpl
dec
cmp
cli
dec
jmp
lret
in
add
imul
stos
xlat
xchg
shlb
into
adc
data16
mov
lods
xor
cmp
add
ret
push
dec
mov
dec
pop
adc
icebp
lcall
inc
nop
insb
xchg
pop
jecxz
sbb
or
imul
ljmp
adc
scas
cltd
mov
sahf
scas
xor
mov
lea
inc
fcoml
std
jnp
loopne
icebp
mov
std
icebp
inc
andb
mov
sub
jnp
dec
jne
call
scas
rcr
insb
mov
lret
cmp
jne
dec
je
dec
xchg
jmp
jo
mov
cld
pushl
xchg
rcr
mov
mov
lret
jns
dec
pop
inc
cld
dec
jp
lret
sahf
sbb
sbb
sbb
inc
fistl
outsl
inc
out
mov
out
adcb
mov
outsl
ret
fs
mov
inc
stc
lock
push
xchg
push
jae
adc
jae
cmp
pop
movsb
lods
call
sbb
jge
outsl
into
dec
imull
test
shr
push
rcll
decl
ss
mov
jne
add
popf
pop
lcall
push
and
jg
sub
xor
addl
pop
scas
fcomi
adc
push
adc
jmp
pop
sahf
mov
xorl
mov
jmp
add
sahf
inc
ss
mov
mov
pop
pushl
adc
pop
test
sub
jnp
add
mov
xor
jg
mov
mov
sub
movsl
cs
mov
or
loopne
sti
lret
or
mov
int3
mov
cmc
cmpsb
nop
jl
mov
push
cmp
sub
jecxz
jecxz
and
incl
cmp
cmpsl
inc
mov
call
lods
inc
push
cmc
ss
push
sarb
jg
mov
sub
rcrb
bound
inc
inc
xor
call
push
mov
mov
lret
dec
cmp
imul
dec
leave
ss
ljmp
cmp
or
mov
addr16
mov
cmp
cld
and
hlt
mov
test
mov
and
out
adc
or
sbb
mov
incl
cli
sbb
add
inc
mov
cmpsl
test
adc
loope
ljmp
sub
jg
div
cmp
jne
into
mov
add
shr
pextrw
dec
mov
mov
xchg
sbb
cmc
test
test
sbb
xchg
push
test
lods
cmpsb
jle
sbb
push
push
cwtl
insb
lods
scas
mov
lock
clc
mov
ss
es
mov
add
jge
das
add
mov
nop
lods
pop
jmp
mov
pop
dec
cwtl
inc
jl
mov
sub
std
decl
mov
mov
rcr
cltd
shr
in
pop
icebp
pop
fisubrl
adc
int
pushl
mov
nop
xchg
xor
lock
push
mov
jl
push
mov
mov
xor
mov
bound
xchg
or
push
jo
xlat
mov
adc
test
lcall
sarb
stos
loop
cltd
jmp
iret
imul
jge
push
pop
idiv
out
cli
push
inc
fwait
jno
aad
enter
jno
inc
ret
pusha
add
pop
pusha
lock
idiv
add
cmp
xchg
imul
loope
jmp
mov
push
fisttps
sbb
in
dec
shr
cmp
daa
and
mov
cld
mov
nop
jmp
shl
aas
hlt
insl
adc
push
mov
pushl
scas
and
sub
scas
mov
mov
add
loopne
xchg
je
lahf
xchg
push
mov
cmp
lcall
xchg
shll
mov
mov
push
jbe
jl
outsb
dec
call
arpl
repnz
pop
inc
jb
loopne
pushf
in
lret
cwtl
mov
xchg
cmp
ret
jg
call
xchg
cltd
mov
jl
sub
xchg
test
xchg
inc
mov
imul
imul
sarl
push
add
cmpsl
jmp
inc
dec
jae
ds
div
ret
ljmp
call
or
sti
fcompl
sub
icebp
push
inc
mov
xchg
mov
rolb
sbb
push
data16
jns
fisttpl
ljmp
mov
sub
jae
xchg
arpl
xor
pop
cmp
inc
loopne
mov
cmc
inc
xchg
and
bound
pushf
push
clc
incb
mov
ljmp
outsb
fldt
rcr
or
pop
lahf
mov
in
insb
inc
sbb
cmp
xchg
lock
dec
mov
mov
stc
incl
test
pusha
adc
jb
add
pop
js
mov
ljmp
jo
mov
idivl
push
xor
jg
pop
ja
sub
out
into
sub
push
xlat
inc
into
push
out
cmpsb
and
sbb
adc
xchg
lods
mov
cwtl
lea
daa
jne
jmp
push
pop
fiadds
clc
jmp
xor
push
xchg
mov
inc
mov
enter
sahf
loop
push
mov
mov
pop
nop
or
mov
call
mov
std
ret
outsb
mov
pushl
push
imull
fists
jnp
pop
add
mov
sbb
dec
shll
dec
ror
sar
incl
lea
xchg
test
adc
pop
test
js
mov
fbld
fs
push
push
call
imul
push
loop
aad
sub
aad
jle
push
push
test
dec
fildl
fxch
xchg
or
mov
sbb
or
mov
xchg
or
out
cmp
xlat
rcrl
xchg
xchg
lret
ljmp
clc
in
mov
push
add
out
xor
push
int3
daa
xchg
and
call
xlat
pop
or
mov
cld
pop
fiaddl
pusha
inc
ja
je
or
out
pop
mov
mov
ljmp
icebp
mov
push
lods
push
aad
pusha
push
jl
out
sarl
js
lret
mov
fldt
lea
xchg
rcll
outsl
repnz
rclb
js
cmc
mov
fists
testb
rcll
test
out
sbb
sbb
push
data16
lcall
iret
adc
pushl
jmp
sti
add
cs
sbb
adc
sbb
push
jp
shll
xchg
pop
sbb
lahf
mov
ret
or
sub
cwtl
rorb
add
pusha
ss
movsb
xorl
lea
decl
adc
xor
movb
pop
test
push
dec
outsl
push
call
xor
xchg
pop
inc
mov
jno
iret
into
xchg
sub
mov
out
jmp
push
in
mov
mov
mov
jmp
sarl
ja
sub
inc
jecxz
and
daa
xor
and
cmp
add
pop
hlt
xlat
dec
dec
push
mov
stc
pop
stos
cmp
leave
xchg
pop
adcb
and
fcomip
call
xchg
pop
or
jns
mov
test
sbb
adc
push
ds
bound
mov
jne
inc
inc
dec
adc
aas
sbbl
decl
mov
adc
rorb
ret
cs
jb
pop
out
xor
jmp
sub
sbbl
jnp
fptan
push
mov
mov
icebp
ja
pushl
mov
dec
mov
or
in
lcall
or
add
cld
sahf
cmp
cmp
add
test
mov
and
sub
mov
xchg
push
and
jb
gs
dec
inc
movsl
lret
fcmovu
and
mov
and
nop
sbb
mov
cmp
mov
jnp
rcr
inc
adc
popf
add
adc
addr16
jg
mov
fdivl
pop
popf
lret
fs
incl
insb
dec
ds
push
xchg
xchg
mov
fidivl
mov
push
gs
adc
sbb
loop
cmp
cs
sub
pop
jp
mov
jmp
jno
pushf
mov
mov
ljmp
mov
imul
jnp
jns
mov
jp
leave
ljmp
rolb
inc
data16
fnstcw
aam
dec
inc
cmpsl
lret
dec
sti
in
out
inc
neg
push
jns
into
jmp
mov
add
add
add
loopne
data16
cltd
pop
insb
shr
sbbl
lret
lret
lcall
cmp
push
mov
ss
loope
daa
mov
sti
lahf
decl
adc
jae
mov
lret
push
jp
ljmp
adc
ljmp
cmp
push
hlt
cld
call
cld
push
stc
shlb
in
dec
add
sub
daa
add
or
cwtl
ja
stos
adc
sbb
loope
incl
mov
mov
mov
insb
movsb
fsubrs
fdivl
inc
mov
sub
xchg
cmp
mov
cli
cmp
push
pushf
cli
hlt
int
jle
lcall
mov
lock
mov
call
add
push
or
test
call
jbe
loope
xchg
test
jo
roll
fsts
jmp
mov
adc
or
or
ljmp
movsl
test
pop
ja
call
std
int3
jae
hlt
or
scas
adc
ftst
push
add
xchg
fld
das
jnp
mov
pop
leave
add
jns
adc
js
push
cmpsl
adc
xchg
or
sti
xchg
fs
push
out
cmp
fmuls
test
lret
pop
lds
add
push
sbb
mov
pushl
add
out
sub
xor
mov
adc
xchg
pop
pop
cmp
mov
outsb
or
call
xchg
loopne
add
mov
push
inc
ficoml
stos
mov
sbb
mov
neg
aas
mov
test
into
incl
movsb
rcr
xchg
xorl
jg
out
cli
xor
test
outsl
fisttpll
mov
cwtl
mov
and
inc
jp
lcall
cmpsb
jecxz
mov
or
jae
aas
xor
and
sbb
mov
sahf
imul
sub
ljmp
push
lds
adc
clc
mov
jne
test
aam
sub
std
out
cli
cmp
int
shl
stos
pop
out
shlb
rcr
les
lcall
fdivrp
jne
inc
cmpsl
jae
inc
ret
in
jo
addr16
fcomi
xchg
push
outsb
and
pop
mov
push
adc
int3
pushf
lcall
mov
ljmp
in
in
mov
mov
mov
jg
fadds
sub
lcall
arpl
ja
imul
xor
sub
inc
fstl
outsl
out
mov
mov
test
les
xchg
ds
adcb
sub
push
in
sub
ds
push
shlb
mov
xchg
sub
xchg
xor
lods
cmc
pop
mov
aas
sbb
xchg
cmp
in
data16
and
out
je
sub
aas
out
out
sbbb
push
test
jno
movb
hlt
xchg
int3
fsubrl
push
sbbl
lds
and
inc
nop
aam
lock
gs
mov
test
call
ror
sbb
movsb
stos
push
test
cmpsl
testl
incl
cwtl
aad
scas
stc
xchg
pop
das
dec
mov
cmpsl
popa
sbb
je
adc
stos
dec
neg
cmp
lcall
in
jns
dec
outsb
repnz
cmp
push
dec
ja
int
adc
dec
add
mov
idiv
push
jo
wbinvd
push
ss
pop
sub
in
adc
cmc
pusha
out
test
test
fsubrs
call
std
in
lock
xchg
pop
stos
xor
je
mov
pop
xor
mov
mov
pop
data16
jmp
mov
inc
xlat
mov
push
not
fisttpl
mov
mov
aam
lock
fsubr
imul
mov
pusha
and
adc
test
cmp
pop
adc
pop
push
and
xchg
push
insb
fs
fstpl
push
out
push
cmp
ds
mov
and
lods
push
test
cmp
repz
lcall
je
push
jnp
mov
das
sbb
dec
je
sbb
fbstp
mov
mov
mov
mov
stos
sub
rol
movsl
push
mov
fsubrs
icebp
xor
sbb
sub
xchg
test
stos
cmp
xchg
and
icebp
add
jp
sbb
dec
cmp
adc
inc
ret
lds
cmpb
mov
sub
push
pop
ss
cmp
rorb
outsb
sbb
call
unpcklps
incb
push
add
sub
xchg
mov
and
cld
pushl
sahf
je
aas
lods
jbe
aaa
pop
sahf
push
mov
mov
fnsave
xor
call
pop
mov
xor
inc
andl
inc
shrl
jb
cmp
sar
mov
in
mov
adc
jl
mov
aas
dec
push
pushf
add
push
jnp
scas
rcr
ret
in
pop
pushf
negl
inc
aam
leave
push
pop
repnz
add
adc
cmp
pushl
sbb
jl
pop
push
adc
ret
mov
test
pushl
stos
test
int
xor
or
clc
xor
add
clc
cmp
lahf
stc
cmpsl
dec
mov
stos
pop
mov
loope
nop
push
xor
out
popa
ret
mov
inc
sub
clc
incl
cld
mov
sub
inc
adc
pop
add
mov
push
sub
out
mov
sbb
sbb
cli
ljmp
mov
or
pop
lret
incl
add
mov
adc
pop
in
jl
int
leave
dec
pop
add
ljmp
decl
dec
inc
int3
add
add
push
jbe
into
imul
jns
pusha
sub
ret
iret
mov
pushl
iret
mov
int3
fsts
inc
lods
and
icebp
pushf
mov
stos
cmc
fbld
adc
ljmp
adc
das
cmpsl
add
or
push
stc
es
mov
lcall
call
scas
daa
fisubrl
jno
ret
xchg
std
push
es
call
or
je
adc
repz
out
clc
pop
or
sbb
push
test
lahf
xor
fildll
aad
xor
jno
jb
pop
inc
scas
fisubrs
popa
dec
sbb
test
roll
mov
test
cmp
out
and
loopne
stos
lock
push
pop
or
out
in
ret
ja
sar
ljmp
sbb
pop
bound
ljmp
mov
dec
add
mov
sbb
cmp
sub
adc
test
adc
fimull
incl
xlat
clc
push
add
dec
shlb
cwtl
adc
daa
mov
inc
incl
mov
scas
mov
loopne
decl
mov
adc
scas
mov
push
mov
mov
arpl
jnp
pop
ljmp
xor
mov
stc
xchg
insb
js
lahf
lret
push
icebp
xor
pop
jmp
ss
inc
xchg
arpl
lods
mov
hlt
mov
test
lods
mov
push
cwtl
lahf
les
out
inc
inc
cwtl
push
je
ljmp
loop
jg
adc
fucomi
mov
pop
aam
movl
mov
sub
inc
push
lcall
pop
adc
or
movsl
ljmp
sbbb
cmp
adc
push
inc
jg
ljmp
mov
pushf
out
rcrb
lods
cmp
fwait
dec
and
inc
cmp
or
fwait
mov
nop
cs
mov
sar
ljmp
jmp
stos
xchg
aaa
or
mov
adc
out
inc
int
sahf
aad
lds
dec
cmpsb
imul
stos
fisttps
mov
lods
xor
shufps
decl
arpl
dec
sbb
fucom
xchg
jle
mov
pushf
sub
mov
lcall
cwtl
cmp
mov
cmp
mov
test
xor
xor
dec
ret
mov
dec
and
decl
sub
loope
push
cmp
movsl
mov
mov
ljmp
mov
xchg
arpl
out
filds
xchg
aam
inc
dec
jl
ljmp
mov
bound
dec
insb
pop
sub
int3
rolb
mov
arpl
or
loopne
cld
pop
incl
sbb
loopne
jge
cmpsb
bound
loopne
lods
out
cli
xchg
lahf
loop
or
mulb
mov
inc
and
jecxz
add
cmpsb
pop
or
pop
rcrl
lds
in
cld
jg
std
lods
inc
test
jno
adc
and
jmp
clc
sarb
pop
cmp
mov
shrl
test
decl
aaa
pminsw
into
std
or
fnstcw
jg
ljmp
scas
fldenv
ret
enter
mov
pop
dec
jmp
lods
mov
lods
insb
dec
jne
push
sti
lea
adc
mov
sub
push
adc
imul
sub
pop
imul
adc
pop
jle
dec
xor
or
mov
outsl
dec
pop
shrb
pop
lock
scas
lret
jno
push
fcomi
mov
inc
daa
sbb
inc
push
dec
mov
xchg
add
dec
cltd
jnp
rcrl
inc
inc
add
jg
xchg
fwait
dec
sahf
adc
and
mov
das
and
gs
shr
movsb
inc
clc
test
cli
xchg
ret
lods
imul
jg
pop
sbb
mov
jg
ljmp
loope
push
cmp
iret
scas
test
jb
cmp
fadd
jg
stc
loop
mov
rclb
js
inc
ja
adc
cmpsb
out
cli
aaa
inc
stos
dec
inc
sbb
dec
cmp
out
clc
jmp
fadd
push
aaa
sub
jmp
das
insb
fadd
jecxz
stos
sbb
imulb
jnp
push
push
je
cmp
jmp
rorl
or
push
out
jg
call
call
in
pop
lcall
dec
ds
lcall
shrl
mov
fisubs
insb
loopne
mov
push
cs
in
idivl
and
inc
xor
call
std
repz
cmp
mov
shlb
test
loopne
insl
lock
test
cmpsl
clc
dec
fdivl
lcall
adc
and
sahf
or
xchg
sub
and
lcall
jns
and
xchg
inc
add
in
xlat
cmc
popa
in
cwtl
test
or
dec
xchg
mov
scas
jbe
call
std
lcall
test
mov
in
jecxz
fs
pop
ror
scas
leave
or
dec
fiadds
shlb
dec
icebp
js
test
lret
dec
mov
mov
add
dec
pop
pop
into
loopne
shrl
sbb
push
jp
push
push
inc
push
fwait
out
xor
mov
adc
lret
dec
rolb
sti
cmp
sti
mov
cld
call
mov
mov
cld
pop
cmc
inc
sbb
xchg
jp
mov
jnp
sbb
pushl
pop
ret
xor
in
out
les
pop
cmpsb
decb
in
subb
std
call
gs
inc
dec
xchg
xchg
mov
jns
pop
out
cmpsb
call
fucomp
jmp
or
sub
inc
jae
xchg
push
stc
push
add
rolb
dec
sub
shrl
clc
push
sbb
repnz
sbbb
inc
mov
aam
lods
cmpsb
mov
and
das
clc
adc
mov
mov
ds
sbb
push
xchg
arpl
nop
in
xchg
jno
je
sahf
xchg
shl
jecxz
mov
arpl
lods
mov
out
mov
cli
adc
repz
cmpsl
popa
xchg
push
ljmp
jmp
sub
mov
ret
scas
lods
push
mov
cld
adc
mov
outsb
jae
mov
cli
lcall
shll
adc
movsl
ds
out
fwait
push
push
leave
mov
std
aad
decl
iret
test
lock
cmp
das
xor
fnstcw
inc
test
dec
imul
test
or
cmpsl
push
clc
movsb
aas
xor
fucomp
sahf
ljmp
jbe
or
xchg
lret
jne
xchg
add
ss
inc
cmp
rcll
dec
sub
roll
enter
hlt
lret
test
out
add
xor
push
and
sahf
inc
movsb
mov
mov
and
aad
push
in
pop
mov
pushl
icebp
daa
jae
loopne
or
or
out
inc
enter
cmp
inc
nop
insb
push
out
mov
inc
xor
pop
std
mov
test
faddl
lahf
xor
dec
sbbb
sub
jbe
aas
incb
cmpsl
lret
xchg
mov
mov
mov
nop
push
mov
in
ja
mov
xchg
xor
or
outsl
decl
sahf
testl
cmpsb
ret
les
pop
fmul
imul
fcmovnbe
int3
fwait
test
daa
mov
mov
stos
xchg
test
cmp
cli
pop
and
stc
fildl
cmc
jno
or
in
cld
cmp
arpl
fdivrs
sbbb
clc
int3
out
lcall
aad
jmp
mov
fldcw
adc
fs
inc
xchg
inc
mov
inc
jmp
nop
mov
jnp
mov
xchg
shrl
jns
mov
rcrl
ljmp
push
mov
inc
and
int3
mov
cmp
movsb
adc
out
data16
call
inc
imull
push
xchg
ja
pop
sbb
dec
popa
mov
jae
sub
mov
out
loope
std
fs
decl
pop
sbb
pop
dec
int
out
mov
sub
popf
fisubs
sbb
or
outsl
sti
lods
hlt
mov
mov
loop
popf
in
mov
pushf
push
cmpsl
test
lock
xchg
fbld
daa
xor
cmc
dec
in
adc
dec
mov
insl
adc
pop
push
pop
popf
mov
mov
push
ja
push
cmp
push
jmp
shll
mov
jp
pushl
nop
mov
sub
inc
jecxz
inc
or
andl
dec
aam
nop
enter
call
fisubl
sti
mov
xchg
enter
sbbl
mov
mov
sub
mov
mov
xor
stc
mov
push
fmuls
stos
lock
decl
xorb
xor
add
scas
lret
and
stos
add
rorb
popa
rcl
fdivr
decl
repnz
mov
int
cmp
icebp
out
cmp
push
push
xor
and
cli
je
mov
fdivrs
dec
add
dec
or
lock
xor
inc
xor
jle
fcoml
shrb
subl
push
in
cmp
mov
sti
inc
jne
dec
add
jl
outsl
add
inc
nop
mov
mov
repz
mov
pop
sti
lcall
sbb
ret
xchg
sbb
push
sbb
inc
stc
lock
lock
mov
es
jg
jbe
and
repz
insl
cwtl
fmul
lock
add
mov
mov
lcall
push
mov
pop
and
dec
clc
shl
scas
cmp
xor
incl
push
ds
fsubrs
fmull
dec
ret
mov
pmulhw
or
jecxz
bound
dec
repnz
std
inc
xchg
sbb
loop
shll
jnp
sub
or
pushf
mov
push
push
aad
dec
push
cmc
fcomip
cs
stc
mov
in
sbb
pop
or
jo
sub
lock
lcall
fists
xor
mov
dec
xor
jl
test
in
inc
mov
push
xchg
stos
mov
ret
push
fisubs
xor
in
ljmp
dec
data16
lahf
sub
das
push
adc
sbb
out
mov
inc
push
sub
mov
cmp
aas
popf
xchg
shrb
je
shlb
scas
mov
imul
loopne
cmp
jae
sub
ljmp
jmp
jbe
push
mov
or
xor
mov
cmc
push
xchg
dec
inc
aam
or
pop
dec
fadds
mov
push
loope
outsl
or
jg
stos
dec
inc
clc
cmpsl
pop
ret
xchg
std
mov
pusha
push
test
pop
popa
ljmp
imul
push
stos
jb
ljmp
andb
call
mov
mov
jo
mov
decl
pop
xchg
pusha
add
and
repz
lcall
icebp
xlat
push
mov
clc
sbb
pop
and
div
cmc
out
test
sbb
es
gs
out
ljmp
pop
test
mov
cmc
ss
adc
add
ss
cltd
pop
or
dec
push
jecxz
test
mov
pushf
inc
mov
ljmp
add
stos
shll
xchg
in
lahf
mov
mov
clc
pop
ds
call
sub
xor
push
jne
push
testl
scas
icebp
int3
pop
cmp
xor
pop
inc
or
call
or
mov
xlat
fs
out
sub
mov
jae
and
into
jne
push
in
mov
mov
mov
xchg
push
ret
jae
mov
cli
dec
and
jmp
mov
jle
or
jnp
dec
sar
decl
mov
cmp
sub
fdivr
push
xchg
pop
jge
jg
insl
and
test
push
call
incl
fisttpll
xchg
cltd
cmp
xchg
add
lods
pop
sbb
insb
arpl
xchg
sub
jp
aaa
movsl
scas
pop
popa
add
in
cmp
xchg
inc
lock
or
lcall
adc
cmp
cltd
or
decl
mov
out
sbb
inc
out
into
push
aaa
pminub
cmpl
fisubl
jle
add
dec
sbb
push
call
jmp
dec
dec
ss
incl
adc
fidivs
sti
cmp
xor
pop
jae
negb
jno
add
incl
sti
ja
lods
mul
neg
pop
sbb
in
sar
lcall
movsl
ret
dec
lock
jg
lret
lret
jmp
scas
imul
movsb
andb
dec
pusha
fdivrs
or
repz
scas
push
xor
or
lods
mov
sti
stos
jmp
cmp
xor
mov
inc
jl
xor
push
sbb
xor
dec
push
jno
cmp
loop
mov
jno
jg
lcall
mov
mov
pop
pop
ljmp
lcall
std
incl
mov
mov
ficompl
je
orl
out
sbb
ficoml
decl
into
or
xchg
adc
arpl
loope
sbb
sbb
jmp
sub
ss
rcr
mov
insb
popf
mov
orl
les
out
jae
and
lret
xchg
sbb
mov
push
orb
inc
xorb
pop
jle
mov
cmp
add
push
test
and
ficomps
cs
orl
gs
int
fmul
movsb
ljmp
xchg
movzbl
int3
iret
push
mov
aaa
cld
mov
mov
clc
les
mov
insl
jnp
add
lock
dec
pop
mov
pop
inc
adc
sbb
mov
das
adc
insb
sub
xor
call
cmpb
adc
enter
ljmp
out
inc
pop
inc
loopne
mov
mov
fwait
cmp
mov
sub
repz
in
dec
add
jmp
sub
cmp
int3
or
xor
mov
enter
insl
cld
lret
lret
dec
std
mov
mov
outsb
push
mov
add
stos
mov
mov
cld
lods
lods
decb
lcall
pop
clc
adc
lahf
icebp
cmp
inc
das
cltd
scas
ret
hlt
or
test
adc
jmp
fdivrs
ss
pop
xchg
sub
cmpsl
int
hlt
push
xchg
loop
sub
push
ret
call
ja
mov
mov
fcoms
cmp
cmp
adc
jle
cmc
incl
mov
xor
and
ret
loopne
pop
jle
and
imul
mov
call
lea
lahf
jle
addr16
fcomip
mov
xchg
test
fwait
pop
mov
cmpsb
inc
ljmp
xor
mov
daa
dec
xchg
inc
enter
lea
push
mov
xor
push
out
cmp
ljmp
js
jae
fisubl
rcll
jge
stc
popf
xor
mov
pushf
loope
push
pop
add
xchg
inc
popa
call
stc
cmp
test
pop
push
bound
test
ret
pushl
cld
ljmp
popa
movsl
push
push
jmp
cmp
xchg
test
sub
rol
test
cmp
fdiv
xchg
pop
jae
les
arpl
cli
in
add
add
cmc
out
dec
add
cmp
jns
jg
outsl
mov
xabort
stos
decb
cmp
cli
pushl
mov
or
loopne
dec
push
adc
dec
xchg
out
es
push
mov
and
mov
inc
pop
pop
mov
or
addb
jg
mov
inc
in
push
mov
imul
fcomip
pop
scas
dec
adc
mov
enter
mov
clc
in
fisttpl
sub
decl
and
add
sbb
mov
test
jle
mov
notl
add
push
inc
call
xlat
and
pop
insl
add
decl
insb
sub
ret
push
jg
jg
popa
mov
clc
jge
push
stos
call
pushl
decl
mov
sub
sbb
mov
fmulp
test
icebp
and
cmpsb
pushl
out
adc
pop
pushf
dec
inc
push
pop
cmp
int3
hlt
out
sbb
jmp
dec
cmp
push
push
xor
pop
icebp
aad
lret
push
test
lcall
pushl
inc
inc
cmp
xor
mov
push
arpl
ss
sub
decl
ret
push
cmpsb
clc
out
push
iret
fwait
mov
shrl
mov
jno
stos
iret
out
xor
sar
or
push
xchg
test
pop
push
xchg
push
aaa
jnp
cmp
fcompl
stos
lret
dec
in
push
ret
xchg
mov
jne
jb
adcl
roll
dec
jecxz
mov
jns
jne
scas
adc
in
dec
lcall
push
stc
aad
xchg
sub
stos
pop
cmp
jmp
xchg
out
cs
cld
test
mov
insl
mov
ljmp
and
xchg
int
or
into
rcl
mov
in
sub
mov
dec
repz
jmp
xchg
stos
fcoms
xchg
arpl
pop
syscall
int
push
jmp
and
fld
sbb
mov
dec
push
xchg
and
movsl
cmp
jecxz
jp
loop
scas
inc
pop
mov
data16
jmp
mov
mov
test
and
or
in
es
subl
ljmp
das
jb
jl
pop
sub
loopne
xchg
or
and
fiadds
or
outsb
dec
cld
cmp
jb
ret
cwtl
sub
aad
sub
mov
ljmp
sbb
clc
and
or
popa
subl
gs
ljmp
outsb
xchg
popl
inc
mov
cmc
adc
int3
push
mov
cmp
or
shrb
push
sub
fwait
lods
jle
mov
pushl
xchg
shlb
dec
into
jp
or
lcall
pop
decl
ljmp
push
pop
imul
xor
cmp
mov
call
sbb
mov
mov
jg
inc
lcall
sti
fmull
fstpt
das
es
mov
add
shrd
mov
pop
or
insl
cs
out
xor
pushl
subl
mov
mov
cs
sub
std
xor
jmp
xchg
dec
ljmp
ss
jbe
hlt
loope
jns
add
scas
sbb
enter
std
incl
out
cmovs
stos
cmp
push
cld
int3
push
rclb
pushl
aaa
pop
data16
push
mov
mov
movsl
sbb
je
dec
loope
mov
push
cmp
incl
lret
dec
pop
cwtl
pop
inc
inc
cmpsl
xor
or
push
cmp
imul
or
call
std
jb
pop
jecxz
mov
jno
sub
mov
inc
jbe
shrl
add
pushl
popf
jae
xchg
ljmp
inc
xchg
mov
xor
pop
mov
fisttps
gs
jl
das
sar
hlt
pop
sbb
push
xchg
jmp
bound
popf
mov
mov
sub
add
and
std
stos
cmp
fs
adc
pop
nop
xchg
lret
jmp
xor
stos
imul
mov
gs
stc
outsb
out
ret
cmpsl
ljmp
jne
out
dec
xor
and
jle
sahf
pop
cmp
xor
mov
in
call
mov
mov
sarb
xchg
imul
call
call
aaa
jb
mov
decl
test
arpl
incl
and
xchg
mov
xor
scas
push
cmp
aam
or
cs
jg
pop
hlt
outsb
inc
cmp
notb
dec
ljmp
mov
push
dec
sar
call
mov
lahf
xchg
or
push
in
jbe
adc
lret
loopne
fsubrl
cltd
xor
ss
inc
ljmp
mov
cmpl
arpl
adc
or
movsl
jge
decl
movsb
enter
adc
das
movb
inc
iret
data16
jns
lds
inc
add
gs
rorl
incl
mov
arpl
test
cwtl
ja
sbb
mov
push
cmp
addr16
test
and
jmp
out
jb
lahf
mov
cmp
incl
and
orl
dec
dec
sbb
mov
packuswb
or
movsb
sbb
mov
push
push
scas
pop
dec
sub
jle
ds
pop
loopne
cmp
adc
pushl
das
das
adc
push
aam
shl
xchg
dec
push
std
adc
clc
pop
pop
iret
sbb
push
clc
push
leave
push
ljmp
sarb
je
imul
aaa
insl
clc
jmp
movsl
test
jae
ds
imul
in
imul
sar
pushl
sahf
jb
xchg
xlat
dec
jge
stos
sub
fstpl
pop
pop
mov
and
sahf
stc
cmp
pop
out
test
ljmp
pushf
inc
lock
or
dec
mov
mov
lods
push
mov
jmp
xchg
mov
clc
jg
jb
mov
sub
xchg
nop
aad
jno
sbb
or
ret
push
xchg
inc
sub
and
fnstcw
push
pop
stos
lcall
mov
in
sub
jo
mov
into
and
test
push
rcr
sbb
push
jge
xchg
sub
cmp
pushf
dec
xchg
aaa
movb
inc
ljmp
mov
add
xor
leave
and
xchg
adc
ljmp
inc
add
jge
inc
into
mov
out
xor
and
xlat
xor
xchg
inc
inc
call
mov
rorl
sbb
xor
push
xor
pop
sub
fstpl
decl
lods
sub
popa
mov
test
push
xor
shl
mov
int
test
and
aaa
fstps
cmp
sahf
and
rcrb
pusha
incl
roll
xor
cld
or
popa
xor
mov
imul
test
inc
in
call
xorb
pop
jns
xchg
mov
loop
je
bound
cmp
ljmp
jno
icebp
fpatan
mov
hlt
cmp
jbe
adcl
jnp
lret
incl
xchg
int
out
stos
jle
add
repnz
mov
push
int
push
jne
xchg
cmp
jp
dec
cld
hlt
invd
insl
mov
pop
sub
out
rcrl
shl
rolb
into
pop
lahf
data16
scas
mov
js
imul
adc
mov
js
in
addr16
jno
insl
insl
or
sbb
or
pop
xchg
sar
in
mov
cmp
add
push
ss
decl
mov
cmpsl
jb
sub
stc
lock
xchg
sbb
inc
enter
and
xchg
lods
and
insl
cwtl
sub
movsb
es
ljmp
outsl
inc
jb
iret
and
mov
xlat
jl
and
incl
aas
jle
inc
jns
push
cli
aas
push
xchg
int3
and
pop
scas
inc
call
sbb
cltd
mov
xchg
push
and
adc
ss
push
inc
ret
repnz
mov
cld
lret
rclb
xlat
addr16
movsb
adc
sbb
xor
je
hlt
cmp
jmp
clc
xlat
fstpt
mov
cmp
mov
repnz
jns
jb
sub
mov
jle
pop
call
mov
fisubs
push
cmp
lcall
ss
adc
adc
xchg
push
call
insl
shll
pop
pop
and
mov
sub
inc
xchg
test
jg
sub
pop
sub
or
dec
push
fcomip
lods
sbb
lea
xor
xchg
jmp
jb
filds
jb
mov
adc
dec
out
int3
leave
pusha
pop
aas
jae
adc
jge
pop
sbb
lret
out
mov
push
adc
dec
add
mov
add
decl
mov
adc
jg
pushf
mov
aas
mov
or
data16
xor
ljmp
mov
fwait
jge
mov
push
xlat
in
sbb
add
popa
test
shrb
pop
jno
lods
and
decl
insb
es
dec
jge
outsb
xchg
ret
push
jno,pt
in
xor
std
xchg
and
lcall
jo
push
and
add
xor
xchg
cmp
inc
gs
lea
jle
or
inc
cmpsb
or
sbb
mov
and
sbb
xlat
lea
in
mov
sbb
xchg
cmp
dec
xor
push
pop
stos
sti
xchg
jnp
xor
sar
mov
mov
inc
lds
sbb
ret
cmc
mov
cmp
pushf
fs
pop
jne
ds
pop
pushf
ret
pushf
and
mov
notb
insl
jmp
mov
mov
cmp
or
rorb
push
or
mov
dec
push
decl
lds
and
fisubrl
jo
test
sbb
pop
add
ret
insl
cmp
pop
jecxz
xchg
pushl
add
rcrl
sti
hlt
pop
out
xor
rcr
imul
ljmp
jo
xchg
mov
xlat
shr
push
icebp
lret
or
inc
adc
pop
enter
sar
es
xchg
inc
mov
sub
rcll
mov
call
adc
cltd
daa
cld
out
xchg
mov
and
decl
cmp
aad
mov
push
adc
js
incl
sbb
fcompl
scas
xlat
cli
popf
mov
aam
data16
ljmp
jg
mov
dec
add
pop
js
sbb
xor
pushl
mov
insl
inc
out
icebp
sbb
repnz
cmp
jg
inc
insl
repz
pop
decl
adcl
or
push
orl
pop
in
insb
push
cmp
pushl
sub
lcall
stos
fcomip
ljmp
dec
mov
inc
mov
cwtd
popf
xchg
cwtl
rorb
cmp
call
cmp
mov
pop
data16
add
cmpsl
int
movlps
push
cld
std
adc
je
aaa
or
ljmp
cs
push
fimuls
or
pusha
mov
outsl
clc
jg
push
outsb
clc
rclb
dec
hlt
out
dec
out
pop
xchg
test
cltd
mov
dec
adc
push
jle
std
sbb
sahf
mov
push
pop
loope
emms
popf
or
pop
fimuls
add
arpl
dec
jmp
call
sbb
inc
pusha
fildl
jle
add
push
push
enter
dec
xchg
push
xor
loopne
and
fwait
xchg
cmp
fsts
loope
aam
stc
pushf
ficoml
lods
addr16
xchg
test
jae
sahf
test
push
sub
mov
jg
add
inc
stos
sub
ret
pusha
hlt
pop
dec
pop
sbb
clc
aas
sub
cmpb
gs
pop
pop
lods
pop
outsb
jb
fwait
adc
ss
pushl
imul
or
aad
cmp
stc
frstor
inc
data16
filds
or
pop
sar
inc
xchg
mov
inc
adc
in
aas
jb
mov
call
shlb
ljmp
bound
inc
fldl
dec
pop
sub
stos
movsl
mov
jmp
jl
popf
data16
stos
lock
xor
xchg
leave
icebp
add
adcl
mov
sub
add
mov
mov
es
cltd
xor
cmpsl
adc
stos
scas
cmp
dec
push
pop
sbb
lcall
or
je
test
sbb
in
fldcw
pop
mov
sub
sbb
or
push
je
js
xchg
or
and
ljmp
inc
fstpt
push
enter
and
lcall
add
pop
icebp
aaa
sub
or
repz
or
lods
inc
icebp
dec
mov
push
adc
pop
mov
shll
fstpl
or
jg
cli
or
mov
lcall
mov
sub
add
sub
test
or
push
test
jmp
mov
mov
sbb
jne
dec
sub
ljmp
lahf
or
xchg
xchg
and
icebp
jno
mov
pop
test
add
dec
xchg
xchg
aam
ds
push
in
incl
in
cmp
xor
jge
lock
icebp
ffreep
xchg
mov
push
dec
dec
or
inc
aaa
fst
test
mov
stos
lods
pop
or
call
cmovle
mov
mov
dec
dec
xor
cmp
push
sub
pushl
lea
fs
lcall
subb
add
add
mov
dec
clc
shlb
call
icebp
mov
es
hlt
inc
mov
push
test
jp
aas
ss
ljmp
inc
mov
inc
push
adc
shll
add
ror
mov
cmc
btr
pop
xor
push
cmp
test
and
inc
inc
out
push
lods
mov
das
sbb
idiv
decl
and
xrelease
or
dec
inc
pop
pop
int3
shrb
pop
clc
fists
sbb
addr16
insb
adc
call
dec
lods
mov
xchg
lods
cmp
mov
insl
and
dec
adc
ljmp
rcll
in
rcrl
lock
addr16
fdiv
dec
mov
ljmp
cmc
sub
cmp
rcrl
mov
jg
iret
pop
adc
jae
fistps
sbb
outsl
jbe
cld
icebp
in
xchg
mov
test
mov
jmp
push
mov
imul
cmc
mov
dec
iret
mov
lock
mov
and
or
ljmp
mov
es
rcr
mov
fcoms
cmp
cmpsb
mov
pushl
enter
pop
and
push
add
push
daa
je
mov
ret
mov
sar
ljmp
mov
or
sbb
sub
inc
loopne
jge
cmp
lods
jmp
es
out
lcall
and
mov
push
adc
pusha
and
ljmp
and
cmp
sbb
adc
inc
popf
shlb
fistpll
lods
xor
mov
inc
add
lds
andl
test
add
jne
sub
push
test
jmp
or
add
mov
push
ret
push
mov
mov
jbe
xor
inc
add
xor
ljmp
cmp
in
xchg
sbb
inc
sbb
adc
insb
inc
mov
out
mov
cmp
jnp
stos
xor
jbe
mov
fldt
shr
xchg
xor
sbb
mov
cmp
stos
call
repz
fsubl
fistl
pop
dec
das
mov
lods
sub
fidivl
mov
pop
ljmp
jnp
add
imul
dec
enter
cmp
lcall
movsl
pop
imul
addb
lea
das
xor
pop
sub
sarb
add
in
push
call
and
inc
pop
in
lcall
inc
inc
pop
or
mov
mov
xlat
stos
das
imul
mov
iret
push
xchg
fisubrl
roll
cmp
cmp
xor
stos
sti
bound
dec
lcall
scas
cmp
cwtl
mov
pushf
push
sub
out
sub
xchg
xor
xor
mov
pushl
adc
jecxz
cmp
push
mov
scas
fsubp
negb
xchg
ja
outsl
out
dec
cmp
out
jg
fists
or
inc
popf
jp
sbb
jmp
xor
ds
ljmp
pushl
and
mov
fucom
mov
iret
jmp
lcall
pop
sub
xlat
cmc
push
pop
mov
and
mov
push
jecxz
pop
mov
sbb
jmp
in
sub
dec
xor
pop
fnstenv
call
push
xor
imul
cwtl
sti
push
sbb
insl
clc
inc
push
ja
add
call
or
fmulp
jb
mov
sbb
xchg
cmp
jl
dec
xchg
mov
cmp
idivb
jmp
insl
or
or
lods
scas
cmpsl
jge
pop
jecxz
or
jnp
push
push
sarb
cmp
mov
dec
pop
adc
scas
mov
and
shlb
adc
incl
adc
push
cltd
push
and
mov
dec
test
cmp
push
mov
stc
fbstp
adc
fcos
mov
ljmp
frstor
popa
out
push
inc
sub
clc
mov
pop
dec
push
adc
rorb
mull
rclb
stc
dec
adc
fcompl
jne
inc
jne
cmp
cmpsb
cmp
jle
pushf
inc
loop
std
cmpsb
sti
test
flds
jbe
cmp
pusha
sub
in
es
cltd
ss
sub
ljmp
mov
jl
mov
jo
cmpsl
aaa
popf
pushf
movsl
xor
sub
divb
std
push
push
ja
cmp
mov
mov
pushf
outsb
mov
push
pop
add
jge
mov
and
add
rolb
mov
inc
adc
fdivl
mov
cltd
push
push
mov
fstpl
fcomps
fcompl
jns
sub
and
in
out
xlat
insb
lret
dec
pop
cmp
movb
push
loopne
decl
subb
pop
icebp
adc
into
scas
sbb
pop
xchg
orb
push
sub
repnz
fimull
adc
rolb
lahf
push
push
jo
cli
sti
ss
pop
push
and
ret
ljmp
xchg
adc
repz
clc
out
movsl
xor
xchg
xchg
push
and
in
in
dec
mov
cli
orl
xor
mov
sub
loope
push
aas
sub
jecxz
sahf
xorb
mov
lods
insl
and
mov
mov
sahf
cli
lret
add
cmp
test
xor
dec
es
and
mov
sub
icebp
jae
push
into
ret
in
sahf
cmc
inc
pop
filds
adc
pop
pop
sub
inc
iret
add
incl
incl
sbb
or
shl
mov
xor
icebp
adc
mov
sub
fldcw
out
inc
add
dec
cmp
js
mov
ret
dec
inc
and
scas
push
clc
cli
out
mov
std
in
loope
cwtl
jmp
out
sbb
jo
imul
jg
sub
lods
test
jle
cmp
xchg
mov
insb
push
push
add
inc
jmp
push
mov
sub
lock
xor
mov
push
pop
jae
mov
ljmp
dec
xor
in
adc
jb
call
xchg
icebp
out
es
or
js
pushf
sbb
or
inc
jl
lcall
ds
push
mov
dec
jno
sbb
push
dec
xor
inc
xchg
sub
subb
pop
daa
call
mov
xor
cwtl
inc
andb
gs
outsb
or
insl
adc
or
fsub
xor
xchg
push
cmp
jmp
pop
loope
inc
cld
dec
les
in
pop
out
mov
sahf
in
scas
xchg
icebp
incl
xor
stos
or
sti
shrb
call
loopne
cli
ret
push
or
ljmp
lahf
push
fnstenv
jo
imul
lcall
sbb
jb
iret
sbb
ret
push
add
popfw
sahf
dec
std
push
add
arpl
push
xchg
sar
and
xchg
insb
in
add
ljmp
dec
dec
and
jg
das
xor
shlb
pop
fsubrl
mov
jb
mov
sub
push
push
dec
mov
insb
pop
fstpt
xchg
aam
decl
cltd
ljmp
insb
lock
pop
scas
and
mov
clc
call
or
add
cs
xlat
lods
push
in
mov
mov
arpl
sub
and
mov
jmp
js
mov
pop
or
jl
lea
pushl
mov
sbb
and
out
xor
cmp
push
xlat
push
dec
jb
incl
je
les
in
add
daa
xlat
jmp
insl
mov
outsb
loope
mov
rcll
mov
fdivrs
in
test
mov
pop
adc
ja
scas
xacquire
cltd
clc
jns
icebp
inc
loopne
out
push
ljmp
dec
cmp
dec
pop
cmp
pop
xchg
ja
push
pop
jne
scas
jl
es
addr16
or
call
sbb
pop
inc
or
stc
xchg
jg
lods
out
scas
xlat
xchg
lcall
pop
xchg
insl
int
pusha
int3
jne
jl
dec
jge
aam
cmpb
stos
add
add
jae
dec
push
pushl
das
mov
pop
mov
pop
xor
je
mov
add
call
leave
stc
ror
jae
and
lods
cmpsl
adc
jae
push
inc
mov
mov
sarl
std
pushl
pop
stos
add
les
push
inc
enter
jmp
fs
push
imul
cmpsb
das
mov
xor
dec
aas
cmp
adc
iret
daa
out
mov
mov
std
or
sub
cmp
inc
push
loop
xchg
lea
jecxz
call
pop
cld
je
fdivp
jae
ljmp
bnd
mov
mov
xchg
jmp
pop
cld
pop
fists
dec
jns
sub
xchg
push
mov
loopne
out
jp
in
ljmp
inc
and
pop
cmp
mov
xor
fucomp
add
push
ret
ja
adc
pop
std
push
cmp
leave
rcr
push
xchg
sbb
call
jp
call
xchg
add
inc
fnstenv
lret
dec
xchg
add
subb
adc
mov
sub
or
mov
lret
aam
jg
negb
xor
mov
add
out
sub
mov
cmpsl
movsb
mov
fcomps
inc
rcll
sbb
mov
insl
ljmp
inc
mov
xchg
sub
sbb
jne
jg
cld
adc
mov
sub
mov
ficoms
fcomps
stos
ljmp
gs
pop
jno
ds
mov
pop
lods
out
push
xor
filds
ret
loop
mov
lret
mov
int
int3
roll
int3
and
pop
inc
mov
ljmp
and
inc
outsl
int
sar
xor
scas
and
jecxz
push
mov
out
andb
test
nop
nop
das
std
dec
adc
cmp
jmp
xor
clc
ret
ss
lret
jl
cmp
cmp
sarb
add
sbb
outsl
out
sub
aam
inc
sti
daa
pop
cmpsl
stos
test
imul
add
xor
pop
xor
mov
push
out
dec
pop
jmp
xor
popf
sarl
sbb
adc
jle
xor
cli
cmp
call
test
lret
stc
push
in
dec
inc
sbb
inc
cmc
rclb
fs
js
lock
push
mov
ljmp
pop
pop
inc
cmp
jns
das
test
pusha
in
push
push
cmpsb
rolb
or
or
outsb
imul
ljmp
cmp
popf
xchg
movsb
test
int3
fcoml
inc
in
inc
sub
jmp
hlt
in
dec
and
aas
out
push
aaa
sub
repnz
cmpsb
fadd
incl
lret
enter
and
fisttpl
dec
stc
mull
movsb
pop
out
movsb
insl
or
jp
xor
ljmp
cli
repnz
jo
bound
push
sub
out
cmpsl
mov
or
jnp
or
mov
sbb
mov
movsb
mov
mov
add
popa
loopne
add
js
imul
push
arpl
mov
jmp
jnp
repz
das
cli
push
roll
out
dec
into
inc
nop
dec
sbb
xchg
sub
andb
jmp
cwtl
jmp
dec
insl
xchg
jno
notl
mov
cmp
in
fildll
jle
rcr
jne
mov
xchg
sbb
or
lea
jmp
push
test
or
mov
dec
sub
int3
sbb
loopne
add
outsl
sub
and
fwait
mov
jmp
jmp
lret
bnd
mov
lcall
in
mov
inc
xchg
pusha
insl
test
fcos
ljmp
pop
mov
sbb
les
filds
and
dec
or
dec
std
test
sbb
test
in
cmc
lds
adc
mov
xor
test
mov
aas
es
add
enter
xchg
ljmp
es
enter
jb
mov
lds
jnp
jbe
xchg
rol
je
push
repnz
call
sti
sbb
xchg
pop
mul
pop
inc
fst
mov
sbb
lea
push
aam
nop
mov
cli
es
sub
in
es
xchg
movsb
fidivl
lea
pop
cmp
es
sti
lret
jno
loope
mov
pop
push
push
sahf
inc
or
ljmp
cmp
testb
mov
stc
in
daa
icebp
xlat
rsm
pop
jae
xor
insb
decl
loop
mov
enter
scas
mov
dec
pop
test
jecxz
jge
ljmp
jbe
in
cmp
lahf
xor
ret
js
inc
mov
test
stc
pop
stos
gs
ljmp
pop
cmpsb
stos
push
xchg
test
and
add
mov
scas
cmp
inc
pop
mov
add
add
push
ret
insl
leave
xchg
pop
ret
sbb
pushl
loope
fcmovbe
fcomip
decl
hlt
mov
pop
rcrb
or
fstl
mov
cmp
xchg
inc
inc
push
mov
cmc
mov
mov
insb
cli
dec
or
sbbb
lahf
xchg
int
jo
sahf
push
ljmp
mov
insb
mov
xor
mov
push
stos
mov
xchg
bound
mov
push
xor
shrl
cmp
mov
fs
jg
pop
in
jg
cs
push
push
cmp
imul
lcall
xchg
out
mov
pop
adc
sub
insl
mov
repz
sub
cld
popf
push
aad
mov
xor
jecxz
inc
je
fs
out
xchg
test
or
je
jmp
out
test
ret
pop
sbb
shll
decl
and
lods
cmc
pop
adc
push
mov
mov
mov
incb
push
cmp
inc
cmc
bound
jecxz
decl
fmulp
jp
imul
rorl
aaa
loop,pn
in
adc
and
jo
ljmp
daa
sub
decl
cmp
adc
pushf
sahf
and
add
lods
pop
push
lahf
stos
mov
ljmp
dec
push
sub
lds
shll
stos
pop
mov
decl
decl
shr
dec
sahf
pop
mov
lods
sub
push
push
mov
aas
imul
sbb
bound
inc
cld
or
sbb
and
and
lret
jg
es
scas
shlb
mov
push
sub
shrl
subb
jp
jp
jge
in
cltd
mov
iret
lcall
fs
loopne
jmp
xor
ret
and
cmpsl
jl
jne
push
enter
mov
fdivs
incl
movsl
dec
sub
and
scas
scas
jmp
in
inc
jb
cmp
push
dec
pushl
fsubr
test
fisubrl
notb
and
int3
test
mov
outsb
jno
bound
inc
repz
push
cltd
mov
call
add
sbb
mov
mov
inc
inc
dec
add
movb
mov
mov
jns
dec
faddl
sbb
ret
push
fdivl
cmp
push
mov
sbb
pushl
adc
jl
or
sub
push
and
fidivrl
sub
mov
jmp
add
cmpsl
xchg
add
ret
inc
lods
mov
xor
sub
dec
inc
into
aaa
popf
icebp
push
push
fs
ljmp
xchg
pop
in
xorb
ljmp
sub
adc
decl
cltd
or
pop
lret
mov
int
dec
or
repnz
fwait
loope
pusha
dec
std
fadds
fists
hlt
bound
cmc
push
xchg
push
lahf
dec
imul
loopne
or
movl
jl
in
sub
repnz
popf
cwtl
test
ja
ljmp
cmp
hlt
ficoml
add
popa
jmp
lds
and
call
outsb
jne
cwtl
roll
loop
pop
das
ds
cs
pushf
js
sub
out
es
lret
sub
cmp
or
scas
pop
jmp
js
fucomi
int3
ss
stos
push
std
inc
addr16
push
jne
dec
and
and
xchg
dec
jo
sbb
loopne
test
jle
or
sbb
repz
add
repnz
test
push
mov
adc
repnz
ret
add
xor
jbe
mov
cmp
push
and
cmp
xchg
sti
sbb
clc
xchg
out
mov
jmp
iret
mov
or
cmpsl
mov
sbb
fistpll
sub
xor
je
in
mov
mov
in
pop
push
inc
aaa
jbe
push
jb
push
pop
cmc
decl
jne
das
hlt
cmp
sub
xchg
mov
inc
dec
loop
mov
shl
add
ja
xor
loopne
xchg
cwtl
sahf
rclb
pushl
shlb
movsl
and
pushf
mov
mov
or
xor
mov
xor
or
jg
lcall
or
aam
xchg
pop
inc
push
xchg
jbe
jno
xchg
iret
push
mov
fdivr
push
dec
pop
jnp
mov
sub
sbb
or
iret
and
fdiv
fsubrl
stos
pop
js
jg
push
test
push
test
sub
mov
rcl
stos
out
ror
push
add
je
mov
cwtl
xor
scas
lods
xchg
cmp
sbb
lock
call
fimull
jbe
sbb
pop
mov
and
test
mov
je
rorb
repnz
xchg
mov
sbb
les
mov
insl
mov
movsb
cmpb
xchg
pop
add
imul
nop
rorb
stos
dec
bound
mov
mov
incl
pop
subb
int
jmp
jp
push
jo
ljmp
adc
mov
cld
adc
jl
inc
call
push
sbb
jne
inc
jbe
call
cltd
push
inc
scas
pushaw
xchg
out
inc
es
out
sbb
pop
push
shrl
repnz
cmc
push
cld
dec
dec
lcall
mov
cmpsl
aad
xlat
inc
js
mov
sub
push
fimuls
or
fbstp
enter
mov
push
mov
insb
fcomip
or
adc
dec
jmp
pop
outsl
mov
push
inc
movb
xor
ljmp
dec
inc
adc
push
pop
lods
stc
rep
cmp
lret
sar
test
jno
test
incl
fsub
stos
pop
jb
xchg
ljmp
mov
out
popa
inc
addb
js
add
pop
sbb
enter
test
popf
inc
pop
insl
out
add
and
dec
sub
ljmp
mov
leave
leave
and
fcomip
push
cli
lret
add
outsl
pop
loopne
xchg
fidivrs
and
xchg
push
mov
add
sub
pop
push
xor
fidivs
jecxz
lock
jns
sub
inc
dec
sub
jmp
pushf
jle
add
popa
sti
aad
aam
push
pop
fisttpll
lret
cltd
andb
iret
pushl
and
addr16
mov
xor
inc
jo
cli
loop
lahf
insl
aaa
xchg
cmc
ret
or
nop
test
arpl
mov
hlt
xor
mov
sub
scas
add
add
js
push
mov
sahf
imul
lret
sub
cmc
push
sub
repz
add
shrl
test
mov
call
int
pop
push
cmc
imul
sti
ljmp
decl
ss
lahf
lret
xchg
sbb
dec
pop
xor
and
call
cld
dec
daa
fmuls
push
out
lods
jae
aas
mov
gs
es
ljmp
pop
out
inc
inc
jns
and
stos
fs
pop
dec
or
xchg
jge
add
out
fs
cli
lcall
adc
dec
mov
jg
add
add
mov
sbb
push
or
pop
test
xor
pop
xor
lcall
jb
adc
sbb
repnz
fists
jns
mov
sub
nop
ret
cli
jle
jg
in
pop
fcompl
pop
ret
call
sub
jp
xchg
mov
mov
push
mov
xlat
dec
cmp
inc
sar
pop
and
adc
push
and
ljmp
adc
lcall
enter
mov
mov
repz
mov
lcall
xor
icebp
or
pop
xchg
leave
and
icebp
ss
cmpsl
jl
popa
stos
fmull
in
xchg
adc
gs
incl
xor
mov
fwait
sub
jg
shl
sub
jns
daa
inc
jne
and
outsb
mov
jns
push
xor
popa
sub
decl
pop
pop
enter
icebp
lods
je
dec
daa
daa
push
xor
xchg
lods
mov
cmp
push
add
cmp
stos
jnp,pn
push
dec
jecxz
xchg
je
mov
orb
rcrb
incl
jb
fstpl
push
stos
sub
inc
xchg
repnz
xchg
jecxz
sbb
mov
mov
sub
lcall
sahf
cld
scas
xor
mov
fsubr
push
jae
daa
adc
mov
repnz
popa
cwtl
add
shll
mov
jae
mov
fldcw
cltd
loop
or
pop
inc
ljmp
mov
mov
inc
xchg
jb
mov
lcall
cmp
mov
sbb
mov
xchg
pop
cmp
mov
js
mov
ljmp
gs
in
incl
pop
cmp
sub
loop
iret
popa
pop
fwait
out
adc
sub
push
jg
lcall
test
jns
clc
stos
scas
lret
movsb
popf
pop
pop
test
add
aas
xchg
jge
inc
adc
xchg
lahf
leave
add
xchg
add
icebp
mov
cmp
lea
or
jg
gs
push
or
imul
add
mov
outsb
rcl
push
sbb
xchg
push
mulb
push
sbb
lret
lcall
add
cwtl
fisttpll
popf
jbe
cmp
pusha
repz
xchg
clc
mov
lret
pop
int
clc
adc
lcall
jl
jae
push
test
jp
outsb
rorb
test
cmp
mov
lcall
cld
movsb
xchg
cli
jecxz
loopne
xlat
mov
dec
fsubl
imul
fisttpl
lds
ret
mov
mov
xchg
mov
jge
adc
rclb
loop
fdivs
inc
filds
inc
jbe
int3
lea
jge
and
inc
sbb
push
lock
and
outsb
and
fdivl
mov
decl
sbb
and
jp,pt
out
or
jno
inc
test
mov
jl,pt
pop
jg
pop
jp
and
mov
stc
jge
xchg
push
orl
in
int3
ljmp
cmpsb
dec
mov
lock
into
mov
mov
inc
jo
cld
cmpsb
sbb
out
adc
mov
sub
aad
test
mov
lcall
rcrl
or
lock
js
inc
dec
das
sbb
jl
push
or
adc
sbb
mov
mov
inc
or
cmp
jmp
dec
je
fisubs
pop
mov
push
scas
int3
outsl
cli
mov
jp
aad
lock
std
add
mov
dec
call
or
add
rorb
jl
decl
sbb
sbb
jb
enter
jae
mov
adc
cmp
call
xchg
pop
push
adc
xchg
jmp
fstpl
faddl
outsl
add
pop
xchg
xchg
ss
loope
icebp
outsb
jl
dec
pop
loopne
jl
insl
and
mov
loopne
ljmp
outsl
aam
aam
add
cli
xchg
push
pop
popf
jg
rcrb
loop
push
xchg
shl
sub
cmp
scas
mov
xchg
es
daa
mov
mov
dec
fnsave
fwait
or
cmp
fistpll
push
shlb
cs
fs
mov
pushl
mov
mov
clc
push
inc
xchg
mov
mov
fiadds
inc
lods
mov
stc
test
icebp
mov
test
outsb
cli
dec
xchg
jns
jg
lods
or
cmp
pusha
jg
dec
stc
add
pop
mov
lret
sub
cmp
test
mov
in
jmp
add
pop
cmc
push
adcl
andb
stos
inc
mov
rcll
jae
mov
jp
ljmp
or
sub
ljmp
out
in
adc
in
adc
push
mov
je
mov
addr16
push
decl
mov
cld
sub
int
sti
xchg
sbb
fmull
scas
gs
push
sbb
inc
push
sar
jmp
push
mov
or
decl
pop
xlat
adc
aas
push
std
iret
xchg
lds
dec
inc
mov
or
scas
out
adc
loopne
loop
loopne
stos
mov
cmpsb
cld
pop
addr16
and
fimull
sets
fs
xchg
pushf
in
xchg
jle
lret
dec
lret
pop
push
jno
lcall
lcall
lret
test
dec
xchg
mov
mov
out
shll
lret
dec
add
cmpb
adc
mov
push
test
cmpb
roll
jae
adc
mov
sub
pop
mov
jmp
lock
add
mov
lret
cli
pop
imul
fists
cmp
lcall
int3
repz
stos
je
in
data16
or
or
scas
std
mov
sbb
inc
sub
std
jg
cmp
push
mov
push
mov
sub
dec
mov
cmpsb
stos
push
pop
lock
decl
lret
xchg
sub
xchg
mov
fdivrl
sub
mov
icebp
add
mov
inc
mov
fistpll
out
push
or
pop
and
aas
dec
rcrb
leave
cmp
pop
notl
jle
mov
decl
sub
mov
stos
incb
rolb
pop
in
xchg
push
xchg
mov
jbe
add
in
repnz
loope
loopne
into
es
xor
cld
pop
movsb
pop
in
and
pop
cmp
xchg
jl
lcall
cld
cmp
enter
dec
xchg
inc
int3
lock
push
jle
stos
in
jg
dec
push
out
and
decl
rolb
xor
pop
push
popf
and
pop
cli
insl
mov
jl
pop
jle
cli
mov
stos
les
sbb
push
cmp
ljmp
push
cmp
int3
insb
loop
mov
mov
push
inc
mov
incl
mov
lret
cwtl
stos
enter
cld
pop
test
ljmp
jno
mov
testb
sub
jae
cwtl
imul
ljmp
lock
sbbb
adc
aas
aad
loope
or
ljmp
jle
mov
int3
stc
pop
mov
sub
loop
mov
xor
icebp
into
jmp
add
incl
das
sarl
xchg
je
into
lea
idivb
addr16
adc
pop
jns
sbb
inc
outsb
enter
mov
xchg
jp
mov
mov
mov
in
add
cli
add
shr
dec
xlat
loop
xlat
stos
aaa
movsl
dec
mov
xlat
loope
push
xor
jg
cmc
jbe
add
push
xchg
mov
sub
inc
adc
aaa
mov
lcall
adc
movsb
cmp
sbb
add
xchg
cmpsb
stc
xor
jmp
xchg
jae
pop
enter
mov
jecxz
mov
out
stos
adc
out
pop
mov
pop
pusha
mov
notl
cmpb
add
xchg
dec
pushl
push
pop
jp
enter
in
push
lret
lahf
and
outsl
int3
mov
mov
std
decl
int3
or
cltd
jmp
je,pn
cs
add
mov
mov
mov
xor
mov
ret
mov
mov
sbb
mov
lds
mov
cltd
push
ds
ds
in
pop
xchg
arpl
loopne
decl
mov
in
push
inc
mov
imul
adc
je
incl
pop
ja
lods
push
inc
js
adc
outsl
mov
pop
xor
incl
mov
fsub
mov
adc
xchg
xor
clc
in
xor
mov
push
dec
out
fbld
jl
out
or
add
ret
sub
pop
jg
ljmp
and
sub
stc
mov
lret
in
mov
ljmp
adc
ja
iret
aam
mov
rorl
dec
xor
push
pop
inc
adc
test
sbb
adc
mov
lcall
dec
add
xor
jecxz
cld
mov
pusha
lret
outsb
andl
leave
sbb
pushl
cmp
push
dec
pop
jmp
cmp
jl
cmp
mov
inc
ficomps
call
jo
shr
shrb
test
cmp
int
mov
and
decl
cmpsb
jle
dec
sub
cld
bound
mov
lret
xchg
fucomip
jle
fnstcw
int
adc
call
jg
inc
mov
or
cmp
jge
insb
or
daa
sbb
pop
or
push
mov
test
xor
insb
decl
mov
test
jae
mov
lret
loopne
pop
cmpsb
mov
mov
out
xor
mov
in
jg
mov
cli
bnd
jg
ljmp
jg
daa
xor
inc
cwtl
xchg
cwtl
mov
add
jmp
xlat
xchg
sbb
jae
loop
dec
lret
outsl
sbb
jg
push
mov
fsubl
pop
stos
pop
out
cmp
jmp
or
shl
add
adc
cmp
bound
in
pop
gs
repnz
ljmp
fs
sti
or
test
aas
mov
dec
mov
pop
loopne
popa
sub
jg
in
rcrl
and
adc
pop
fcmovnu
mov
mov
lcall
pop
sub
cmp
mov
dec
inc
inc
out
dec
push
cmp
cmp
or
jmp
jno
adc
dec
push
fmuls
sahf
xor
jle
jo
push
sbb
in
loop
mov
and
fwait
stos
or
push
jne
push
jno
sbb
jecxz
mov
shrl
in
int3
inc
out
dec
adc
out
xchg
or
cmp
jmp
mov
addr16
jg
push
gs
adc
jb
lcall
mov
or
add
mov
adc
xor
jmp
call
pop
aad
sbb
stos
adc
pop
xchg
jnp
jo
mov
iret
arpl
icebp
jbe
decl
add
sub
xor
jns
int
cmpsb
shl
dec
inc
cmp
pushl
stos
movsb
jmp
adc
lcall
cmp
add
inc
pop
push
cmc
xchg
je
push
outsb
gs
sub
add
ljmp
cli
shl
mov
inc
pop
cmpsl
es
ret
push
xchg
pop
mov
std
cs
call
push
cmc
mov
test
jno
icebp
aad
fs
and
clc
push
cld
fisttpll
or
lock
fmuls
pushl
cmp
lahf
jns
cmp
gs
test
sbb
mov
aad
icebp
xchg
out
popa
inc
pop
ffree
xchg
rcrl
call
pop
in
sbb
insl
lea
jg
mov
mov
in
shll
push
mov
repz
incl
sub
sbb
icebp
pop
cmp
mov
adc
and
jp
scas
arpl
rdseed
cmp
and
mov
popf
jle
cld
add
lcall
insl
inc
arpl
push
cmp
adc
adc
mov
lcall
ficoms
bound
je
sub
push
add
cmp
mov
xlat
aas
mov
incl
sbb
cmpsl
or
cmp
test
les
mov
imul
out
inc
xchg
out
jg
pop
out
mov
lahf
xchg
movsb
rcrl
fsubrs
lods
daa
xor
sub
push
mov
sarb
pop
hlt
out
in
dec
adcl
inc
out
push
mov
jmp
cmp
cwtl
add
mov
cld
lds
mov
int3
in
rcl
sbb
push
decl
fdivrs
lret
cld
pop
fimull
sub
lahf
jo
add
xchg
jg
mov
rcrb
jle
incb
sub
incl
clc
imul
leave
jo
stos
cmp
push
lret
sti
jmp
rcll
and
ffree
mov
mov
xchg
or
pushl
cmpl
adc
addl
push
inc
xchg
add
out
jle
cmpxchg
sub
push
in
incl
inc
and
mov
cs
shl
or
push
jae
das
push
popa
loopne
push
jno
cmp
sbb
cmp
out
outsl
scas
and
pop
pop
sub
xor
xchg
pushl
pop
adc
insl
and
adc
outsb
lahf
inc
mov
imul
add
xchg
and
jmp
or
in
and
xor
cwtl
push
aaa
mov
fs
fistpll
decl
mov
das
hlt
mov
xor
rcll
or
dec
xor
jmp
dec
inc
jns
scas
test
add
in
pop
xor
mov
adc
mov
mov
std
in
fcoms
lds
cmp
nop
pushf
add
and
or
adc
push
inc
and
shrl
inc
and
leave
push
incl
mov
mov
in
sahf
mov
stos
popa
mov
icebp
mov
pushl
data16
cmpsb
mov
push
inc
into
and
ret
xor
cmp
jno
incl
cltd
sub
jbe
adc
cmp
xor
les
pop
stos
fcomps
fidivs
in
sbb
test
mov
mov
out
aam
mov
cli
add
jbe
test
or
and
jle
lcall
or
jns
push
mov
rolb
xor
je
stos
push
call
xchg
fsubs
fidivs
and
push
jg
sub
and
mov
lea
push
adc
pop
sub
mov
mov
lcall
or
cld
mov
pushf
mov
out
inc
push
daa
sub
js
ljmp
jl
imul
jg
mov
cs
rcr
iret
insb
or
pop
cwtl
pushl
imul
sbb
xor
cmp
jmp
ljmp
dec
cmp
call
shll
fbld
les
mov
mov
adc
jmp
sbb
arpl
push
enter
jp
mov
adc
dec
jl
xor
ljmp
mov
or
in
xchg
push
dec
repz
loopne
movsl
aam
jns
cwtl
sub
pop
push
jmp
push
and
push
or
push
jp
loop
mov
add
and
lcall
fldcw
sahf
push
or
jo
mov
pop
and
jmp
outsl
repnz
sbb
add
call
sub
loopne
aad
jecxz
into
dec
jl
push
fs
hlt
fidivrl
dec
add
insl
xchg
adc
decl
out
vorps
scas
jmp
iret
xor
inc
lods
xchg
jo
mov
sub
sub
rorl
inc
sub
rcl
imul
mov
mov
mov
decl
push
in
adc
in
jbe
pop
icebp
push
into
mov
pushf
aam
aad
mov
jle
xchg
push
jo
cli
pop
cmp
sub
ljmp
add
jne
leave
out
pop
jbe
int
pop
lret
std
nop
xchg
iret
adc
or
aad
ljmp
scas
out
stc
mov
test
mov
gs
mov
je
sub
dec
and
add
push
fsts
in
sub
xchg
dec
mov
mov
jbe
movsl
cmpsl
jb
fmulp
shll
aaa
sub
cmp
dec
popf
dec
push
lock
shl
or
push
and
pop
dec
ljmp
jecxz
sar
test
dec
shlb
sub
jp
jb
sar
jge
sbb
jmp
adc
or
cmp
iret
xor
mov
pop
xchg
test
mov
dec
outsl
inc
push
add
sub
xchg
jae
mov
test
fildll
fistl
mov
ljmp
inc
pushf
push
loop
aad
dec
aam
aad
push
and
push
pop
mov
xchg
and
ljmp
imul
clc
scas
imulb
sbbl
cmp
mov
jmp
out
orl
clc
in
stos
imul
data16
insl
lds
xor
ficompl
outsl
and
ret
fisttpll
adc
enter
shl
ja
or
repz
pusha
and
xor
lods
push
cmp
call
in
pop
fcompl
push
shrl
test
and
outsl
dec
fisttpll
das
mov
fcomip
ljmp
ljmp
add
jne
repnz
cmp
pop
xor
scas
add
arpl
nop
adc
stos
dec
jb
pop
pop
lcall
jnp
push
scas
jo
mov
or
in
inc
dec
inc
mov
adc
in
decl
cltd
insb
shlb
xchg
std
out
jecxz
rorl
mov
mov
jnp
imul
ret
xorb
and
cmp
fdivrs
std
leave
xchg
stos
not
and
mov
fstpl
out
out
lahf
and
ficompl
sbb
incl
ja
ficoml
scas
insl
pop
addr16
hlt
ljmp
pop
stc
fildll
cwtl
xchg
lods
aas
mov
call
pushf
add
clc
push
xor
negb
sub
mov
rcrb
dec
shlb
addb
jae
arpl
pop
insl
jmp
in
cmp
jl
cmpsb
test
mov
aad
jmp
pop
jg
stc
xchg
sub
or
jno
pusha
mov
popa
add
ja
jg
decl
mov
cli
or
sbb
pop
sub
fnsave
lock
mov
cld
call
icebp
mov
popa
mov
xchg
sar
jg
dec
mov
jle
mov
mov
inc
test
or
sub
adc
aas
inc
mov
aas
lret
lcall
pop
lods
or
decl
daa
jge
push
ficoml
mov
xlat
sub
lahf
and
inc
cmp
ret
loopne
fwait
jo
fnsave
in
das
pop
adc
sub
cmc
dec
xchg
pop
aad
les
adc
call
shl
xchg
aad
aad
sbb
lret
mov
adc
into
sub
push
rolb
jg
sub
scas
mov
ret
dec
les
lcall
jle
add
andl
cltd
negb
add
xchg
mov
mov
and
outsl
xchg
loopne
out
adc
insl
push
xor
xor
fistps
xor
shll
jb
jecxz
faddl
outsl
mov
cmp
cmc
jo
loopne
jns
mov
and
cmpsb
sti
push
pop
sub
xor
repz
mov
mov
sahf
xchg
pop
out
cmpsl
daa
or
incl
fs
dec
jns
pop
xchg
pop
jl
jbe
and
jnp
decl
clc
in
push
dec
inc
sbb
imul
mov
sub
cmpsl
cmpsb
inc
jge
and
mov
lods
xor
pop
xlat
nopl
cmp
mov
es
mov
loopne
pop
icebp
jg
stos
mov
inc
out
pop
test
aas
lcall
paddq
push
push
test
hlt
mov
neg
jmp
push
or
mov
xor
std
ljmp
inc
jbe
push
daa
jecxz
jb
push
push
push
in
repnz
dec
into
imul
fistpll
out
stos
pop
enter
jecxz
or
lds
mov
pop
adc
clc
call
lahf
xchg
test
jno
and
jb
inc
jg
pop
sbb
outsl
sub
div
jne
pop
mov
out
test
lret
mov
scas
cmpsb
lock
jbe
mulb
or
js
push
xchg
rcrb
mov
imul
mov
pop
mov
data16
incl
jne
test
andb
mov
lds
jns
xchg
jp
mov
dec
test
inc
mov
scas
jo
lds
cmp
pop
xchg
shl
jne
xlat
sbb
jle
mov
fistpll
cmpsl
fstpl
xor
lcall
or
cmp
xchg
xchg
test
xor
incl
outsl
mov
inc
test
stc
mov
fcmove
cmp
mov
or
btcl
jmp
adcl
repz
pushl
cmp
loope
cmp
or
add
iret
lock
push
int
push
mov
jl
decl
mov
xchg
cmp
fisttps
or
nop
adc
seta
lcall
les
mov
scas
mov
lds
ljmp
decl
mov
movsb
shrb
int3
or
loop
lcall
subb
inc
nop
jb
test
cltd
mov
das
call
jb
loopne
mov
aam
ljmp
and
int3
push
pop
repz
fsubrl
xor
fsubl
sub
xchg
imul
sub
xchg
bound
mov
or
mov
or
or
rorb
lods
stc
jmp
loopne
pop
mov
std
cmp
push
xlat
xor
xchg
sbb
jp
shlb
mov
add
call
mov
js
test
jo
adc
fisttps
push
fdivrl
push
shll
in
mov
push
add
ljmp
ljmp
add
lods
pushf
xchg
scas
fsts
loope
mov
push
adc
mov
push
cwtl
cwtl
dec
sbb
ljmp
dec
sbb
ret
aas
sar
call
rolb
push
xchg
lcall
inc
repz
into
mov
ljmp
inc
lret
cwtl
imul
push
mov
dec
jnp
add
mov
add
sti
xlat
cli
sti
out
add
sub
mov
mov
fcmovnb
add
fcmove
adc
mov
clc
out
pop
jmp
imul
push
adc
sub
fcmovb
psubsw
mov
loopne
push
loopne
jb
testb
xchg
dec
es
lds
incl
insl
stos
repnz
mov
lods
dec
jne
jl
sub
nop
or
decl
test
or
xchg
ljmp
inc
push
lcall
arpl
hlt
mov
pop
enter
lock
inc
jne
mov
into
cmpsb
jmp
repnz
mov
and
xchg
jmp
push
cmp
push
or
mull
xor
in
ds
incl
mov
jle
leave
cmpsl
faddl
icebp
je
in
mov
sahf
jbe
add
scas
ja
xchg
xchg
xor
pop
ret
lcall
jg
jne
jnp
out
mov
mov
mov
cli
shlb
jae
lcall
sbb
xchg
xor
pop
mov
pushf
sub
call
test
push
rorl
mov
incl
in
jae
ret
xor
sub
rcll
add
push
dec
pop
sti
xchg
outsl
mov
popf
popa
inc
out
sbb
sub
cmp
repnz
jmp
sub
sbb
push
xchg
xchg
js
call
xor
cli
test
sbb
mov
pushf
iret
adc
hlt
sub
int3
filds
cmp
xor
xchg
insb
push
fmul
sbb
mov
dec
add
push
mov
jmp
enter
stos
loop
sahf
and
mov
cmp
xor
or
cmp
fsubrp
call
mov
ds
out
cli
mov
js
jg
add
mov
clc
popf
pop
fldl
lret
decl
scas
pop
push
jb
or
xchg
rcrl
fs
hlt
pushf
jbe
imul
pop
cld
add
jmp
pop
adc
mov
and
push
inc
cmp
ret
call
shll
xchg
aam
cmpsb
xchg
call
lods
das
mov
orb
sar
cmp
fnsetpm(287
or
sub
cld
jno
je
and
xor
data16
cltd
mov
jmp
movsb
orb
lds
in
test
loope
jns
or
xchg
sub
dec
mov
jbe
ljmp
cmp
cmp
cmpsl
mov
sbb
out
loop
fs
insl
cld
sarb
adc
and
cmpxchg
decl
dec
adc
in
mov
int
xchg
mov
stos
scas
std
mov
sub
outsb
dec
shr
push
pop
pusha
push
pop
sbbb
ficomps
call
scas
push
dec
sahf
shrb
insl
jo
and
pop
push
inc
decl
leave
jl
jge
mov
jecxz
mov
int
cld
pop
ficoms
mov
mov
js
cltd
cli
iret
pop
fld
movsb
mov
xchg
pop
sbb
out
ljmp
jne
test
mov
mov
outsl
cmp
scas
mov
push
pop
and
addb
leave
xchg
cmp
or
cltd
gs
jg
mov
into
cmc
sarl
out
mov
sar
js
pop
pop
pop
mov
lcall
call
lea
test
test
mov
sub
mov
call
add
inc
adc
insb
mov
fldt
jmp
adc
imulb
mov
pop
dec
fsubl
subl
jo
ljmp
incl
movl
jns
sub
decl
pop
jl
mull
popa
mov
dec
sub
push
bound
pop
js
iret
sbb
lock
mov
jge
dec
pushf
popa
cmp
inc
push
ljmp
sbb
pop
xor
aaa
cmpsb
xchg
jmp
out
mov
jb
push
or
in
xor
clc
jmp
push
leave
xchg
push
ret
pushf
in
stos
and
or
test
icebp
clc
fstps
mov
ljmp
loop
jbe
push
xor
dec
jecxz
mov
popf
movsb
bound
mov
ret
push
mov
lcall
call
jno
mov
outsb
lods
sub
sub
out
insb
and
data16
mov
inc
mov
repnz
fisttpl
or
push
jbe
push
lods
sub
xor
aas
dec
inc
cld
pop
lock
xchg
les
sbb
sbbb
daa
cli
mov
ja
inc
mov
and
xchg
xchg
flds
jbe
incl
push
in
adcb
sti
sahf
xor
sbb
lods
jne
iret
inc
in
pop
incl
mov
mov
stos
outsb
jb
xor
mov
enter
mov
ljmp
out
fs
ret
xchg
enter
ret
stc
stos
and
lods
mov
inc
lcall
ret
mov
shl
xchg
in
and
adc
sar
decl
aam
lahf
sti
dec
leave
add
clc
andl
js
mov
int3
cmc
or
call
std
je
ret
fwait
or
and
cmove
hlt
fstpt
adc
jmp
mov
pusha
lods
sub
andl
icebp
mov
jne
mov
fs
sbb
xlat
push
stos
jg
or
dec
xchg
loop
sbb
mov
gs
pushf
addb
xchg
loope
fwait
enter
cltd
sbb
cmp
sub
cld
jg
dec
sub
jecxz
push
das
xor
lahf
repz
mov
filds
xchg
hlt
pop
pop
and
and
mov
push
imul
pushl
cli
pop
popf
sub
sti
xchg
sbbb
ss
insb
push
hlt
aaa
fcompl
push
mov
dec
push
xor
mov
sarb
aam
mov
dec
push
jle
push
or
mov
dec
xor
pop
je
imul
imul
sahf
xlat
jge
mov
sub
jae
dec
or
xchg
test
aaa
inc
or
repnz
xchg
push
mov
pop
out
jp
and
pusha
jl
repz
call
test
pop
xchg
add
push
cli
cwtl
jle
mov
adc
and
fsubs
lcall
lret
jp
out
scas
subl
ljmp
stc
lret
jno
mov
mov
add
insb
lods
xchg
mov
dec
nop
xor
cltd
incl
push
cltd
jnp
and
loope
mov
gs
dec
nop
ret
lcall
stos
xchg
xor
fldcw
out
inc
std
outsl
clc
call
fmull
push
xor
pop
inc
ja
dec
inc
dec
push
pusha
mov
ljmp
dec
adc
and
das
jmp
push
mov
or
sbb
cld
xchg
pop
and
mov
incl
mov
leave
push
xor
mov
lods
out
decl
xor
dec
adc
mov
scas
int3
inc
push
adc
call
adc
mov
xchg
ret
fstpt
test
mov
test
mov
das
fdivl
xor
cmp
and
call
inc
les
loope
cltd
mov
out
adc
adc
scas
add
pop
sbb
in
pop
mov
pop
pushl
cmc
and
jg
mov
xor
bound
mov
clc
inc
xor
in
xor
call
mov
in
mov
sbb
inc
and
mov
sahf
jbe
adc
mov
lods
sahf
mov
mov
inc
push
xchg
xor
call
xor
push
jb
aam
mov
add
test
xchg
rolb
xor
mul
pop
test
jb
incl
lcall
lahf
add
xlat
xor
pushf
jb
adc
mov
es
inc
dec
loop
adc
aaa
in
pop
lret
in
test
incl
jbe
pushf
rorb
dec
mov
mov
aas
push
pusha
imulb
fcomip
add
jmp
push
mov
setl
cmp
add
add
rcll
cmp
jg
jecxz
nop
dec
jbe
xor
sbbb
xchg
mov
sbb
insl
cmpsl
loopne
add
pushl
or
adc
push
es
dec
shll
xchg
xchg
and
jg
popa
xlat
pop
daa
in
mov
pusha
daa
xchg
xchg
clc
push
mov
cli
popf
add
mov
in
inc
test
lcall
and
cld
in
mov
jmp
adc
mov
rcrb
test
xorb
incl
push
inc
pop
pusha
not
xor
jb
out
dec
ret
inc
inc
adc
call
ljmp
adcb
inc
dec
lock
fnstsw
outsl
loopne
xlat
scas
push
sbb
and
into
clc
out
mov
lock
pop
or
sub
outsl
lret
or
imul
lcall
out
pop
imulb
cwtl
std
into
xchg
jne
iret
sub
inc
add
pop
mov
mov
stos
cmp
ret
jge
sarl
stos
push
xchg
lds
mov
jo
icebp
pop
jb
mov
fs
sub
aam
and
popa
hlt
bound
adcb
cmp
fcoml
fcoml
add
jmp
push
and
rcrl
mov
shlb
stos
lcall
pop
insb
outsl
test
mov
cld
push
sahf
insb
nop
or
and
jbe
in
loop
loope
or
call
jp
or
xchg
inc
and
mov
push
test
push
nop
or
jecxz
cmpsl
pop
call
xchg
inc
stos
xor
lcall
scas
mov
lock
dec
fs
pop
addr16
fcomip
stos
pop
lcall
mov
cmp
cmp
lcall
call
pop
scas
mov
mov
popf
xor
push
into
aaa
cmp
add
push
imul
icebp
out
jg
jge
divb
stos
cwtl
cmp
fmulp
out
or
dec
sub
shll
push
pushl
push
data16
test
pop
sahf
into
push
jp
adc
cmp
adc
pop
repz
pushl
push
es
insb
xchg
ss
insb
outsb
mov
fwait
pop
inc
mov
push
adc
mov
stos
icebp
mov
test
shlb
adc
xchg
cmp
xor
pop
movsl
aaa
or
ret
push
push
imul
add
pop
mov
hlt
inc
out
nop
fwait
std
mov
xchg
and
aam
imul
fnsave
or
enter
dec
adc
sbb
inc
rclb
xchg
cld
sbb
cwtl
out
cs
iret
jns
gs
pushl
cmpsb
cli
cmpsl
cld
lret
pusha
leave
adc
lahf
adc
cld
stos
in
ja
bswap
adcl
xlat
jmp
lea
fdivl
rcr
cmp
pop
or
sub
jmp
jge
out
sub
incl
decl
fcmovb
enter
pop
mov
adcb
test
bound
mov
ja
sahf
push
inc
cmp
dec
jbe
mov
movsl
lods
pop
jno
push
adc
cmp
push
lods
out
push
cmc
pop
add
jmp
pop
iret
add
sbb
sbb
add
ret
mov
imul
mov
xchg
and
and
jecxz
nop
mov
sbb
and
out
leave
sbb
add
es
data16
shll
fidivl
pop
mov
lret
xlat
adc
mov
bound
cmpsb
enter
and
out
cmc
fcompl
je
cmp
mov
push
xchg
jp
fstp
push
push
pop
mov
sub
inc
test
pop
pop
das
mov
or
cs
clc
ljmp
dec
shll
cmpsl
imul
sbb
lcall
les
xlat
aad
adc
jecxz
jmp
pop
cmp
out
xchg
int
fcmovu
frstor
fistpl
mov
andl
lret
jbe
or
push
fs
add
negl
inc
cmpsb
loopne
rorb
push
mov
pushl
ss
sbb
mov
push
sub
cwtl
mov
ja
test
add
call
outsl
jmp
or
push
sub
jo
iret
push
dec
lds
call
jbe
mov
mov
jmp
xchg
cmp
sbb
shl
and
lcall
imul
add
call
stos
in
inc
das
notb
call
dec
jmp
sbb
cld
int
pop
ret
in
aad
imul
sarl
out
aad
lcall
shll
test
add
push
sub
push
adc
ljmp
scas
ljmp
jne
loope
mov
xor
outsl
cmp
sbb
aas
push
and
loopne
loopne
jbe
mov
das
lcall
rcrb
adc
or
outsl
jae
adc
jl
jne
jp
mov
inc
in
daa
movsl
js
mov
cmpsl
fucomip
popa
xor
mov
cld
inc
mov
ja
ljmp
pop
cmp
lods
jecxz
repz
sub
aaa
pop
stos
es
lcall
mull
out
jge
bound
dec
cmpl
ret
pop
jns
lcall
push
scas
les
scas
push
cwtl
fsubl
jo
jae
adc
aaa
cs
sub
or
incl
sub
add
cmc
pop
cmpsl
ljmp
pop
inc
aas
pushl
outsl
mov
pop
in
jecxz
push
loope
in
adc
pusha
mov
ret
mov
mov
inc
inc
iret
pusha
push
test
mov
int
or
mov
stos
push
sbb
daa
adc
js
add
aad
pop
cld
push
inc
icebp
repz
push
jl
sbb
je
sub
shl
fldl
lock
inc
into
lret
or
iret
mov
sbb
cld
fwait
sub
mov
loop
jmp
pop
pop
jmp
xor
je
xor
push
xchg
fisttpl
jno
push
sbb
mov
mul
cli
fstpl
mov
test
inc
fisubrl
inc
in
out
xchg
fisubrs
xlat
sahf
add
or
cmp
popa
stos
lds
mov
inc
push
movsl
int3
and
jb
rcrb
int
popa
pop
out
jg
mov
xor
cmpb
call
lcall
cmp
aas
push
adc
das
lock
jp
incl
in
cmp
popf
cmpsl
out
mov
cmovae
mulb
mov
sub
dec
or
mov
xchg
mov
cmp
mov
es
xchg
dec
clc
jno
loop
lea
lret
in
clc
lret
fs
push
adc
inc
jns
js
adc
lds
hlt
jmp
push
or
and
mov
jecxz
lcall
je
xchg
addb
and
pop
or
xchg
cmp
cmpsb
xchg
push
cmp
mov
stc
sbb
cmpsb
bswap
jl
mov
sbb
sub
dec
int
mov
fidivrs
insb
xchg
mov
adc
rorl
or
ljmp
push
rcr
or
fsts
inc
iret
faddp
mov
lods
xchg
cli
pop
in
lahf
cmp
inc
ss
addb
fidivl
mov
dec
icebp
and
std
loop
cmc
or
cld
incl
mov
inc
mov
cltd
pop
cmpsl
and
ret
push
push
jmp
fs
divl
push
aas
aas
and
add
jmp
pop
testb
stos
sub
cmp
xchg
push
pushf
fs
xor
ljmp
imul
lcall
fistl
sbb
daa
jo
pop
jmp
jnp
dec
rclb
or
js
xchg
push
aas
sbbb
into
push
aam
arpl
out
cld
xor
stos
xor
add
xchg
push
lret
in
lock
push
imul
xor
mov
pop
pop
push
jo
pop
inc
sub
mov
adc
mov
pop
inc
inc
loopne
and
std
sbb
imul
push
enter
xchg
cmp
jecxz
hlt
incl
cmp
sub
lock
out
ja
fwait
movsl
into
in
mov
pop
rcr
jecxz
les
cmp
ss
push
std
push
loope
cmp
mov
scas
sbb
cli
push
sbb
pushl
fdivp
sub
ret
mov
mov
pop
clc
dec
and
inc
test
ret
outsb
mov
xor
pushl
outsb
push
lahf
pop
call
das
inc
sbb
rcll
movsb
and
test
dec
cld
ljmp
add
adc
push
fnstsw
nop
stos
mov
jns
call
sbb
cmc
imul
mov
fistps
pop
jg
insb
mov
and
adc
in
mov
aas
mov
fdivr
jg
jmp
adcl
out
xor
and
or
and
xor
shll
adc
jle
loopne
or
aas
sub
pop
mov
insl
insb
int
movsl
push
sub
ret
jbe
out
add
call
fcoms
out
ljmp
pop
inc
notl
mov
pop
popf
or
fldenv
cwtl
xchg
stos
cmp
das
or
lods
aam
aam
mov
xor
mov
mov
decl
testb
push
mov
dec
lret
push
mov
and
pop
jmp
arpl
lcall
push
dec
test
in
mov
ret
cmp
push
sub
aad
lds
decl
inc
and
test
call
ljmp
adc
pushl
cmp
jp
sbb
decl
push
push
xchg
fmull
xchg
sub
or
sub
pop
lcall
push
pop
push
fsubrp
lret
or
mov
incl
xor
pusha
fistpl
in
fisubl
mov
addr16
mov
ljmp
xor
roll
push
push
out
pop
cmp
ljmp
xor
mov
pushf
fcom
dec
sub
inc
pop
daa
add
aaa
jne
jmp
xor
bound
call
enter
add
int
out
mov
mov
sub
xorl
or
xchg
popf
sub
and
adc
lea
or
pop
pop
mov
sub
out
pop
or
imul
pop
inc
addr16
xor
call
xchg
inc
push
xor
cli
fbld
testb
lods
fidivrs
or
fwait
pop
shrl
pop
shll
pushl
shr
aaa
sub
and
mov
xchg
mov
pop
roll
push
aaa
pushf
les
jns
ficoml
dec
out
adc
mov
xchg
in
mov
push
adc
inc
push
xchg
iret
adc
decl
cmpsl
filds
iret
imul
inc
pop
data16
sar
lcall
lret
cs
out
pop
mov
sub
cwtl
mov
out
lahf
call
add
aas
nop
mov
jp
cltd
dec
fiaddl
pop
insl
in
sub
scas
mov
incl
xchg
cmp
sbb
fstp
jns
imul
push
or
ljmp
jb
dec
mov
jae
mov
xor
daa
xor
xlat
scas
scas
dec
push
inc
dec
ljmp
sub
dec
sbb
inc
cld
mov
and
inc
mov
daa
decl
pop
fs
outsl
fmuls
add
sbb
mov
andb
fstl
leave
xor
out
jge
mov
pushf
pop
sbb
push
es
frstpm(287
mov
jmp
not
in
dec
cmpsb
sub
or
or
mov
testb
aas
mov
outsl
shl
sbb
dec
cli
test
mov
and
faddp
test
xor
cli
inc
mov
adc
pop
cmp
add
movlps
ficoml
mov
dec
xor
std
xlat
dec
add
or
call
sub
and
adc
and
push
aaa
loope
repz
ret
cld
ljmp
dec
rol
adc
test
fdiv
push
imul
ljmp
hlt
enter
roll
pop
cmpsl
jmp
mov
xor
call
xchg
add
imul
dec
inc
mov
and
jg
into
cli
xchg
mov
jg
mov
cmp
adc
mov
loop
pusha
cmp
rcr
and
jmp
sbb
shl
or
jb
mov
mov
loopne
xchg
and
in
pop
ret
inc
mov
les
cmp
mov
xchg
jno
mov
mull
jo
inc
cmp
jmp
cmp
loopne
decl
xor
add
call
mov
jp
mov
test
ljmp
bound
jbe
mov
dec
out
sbb
and
inc
jle
mov
repnz
push
cli
cmp
sub
ja
jmp
bound
jg
imul
cmp
jg
lock
lcall
add
fsts
call
fildl
lds
imul
and
incl
loop
sub
fldt
xor
lock
bnd
shl
inc
int3
lret
mov
jmp
les
shrb
pop
xor
addr16
and
movsb
mov
jecxz
aam
decl
and
lods
outsl
push
sbb
adc
jl
or
pop
push
jae
inc
sub
cs
clc
popf
jns
in
pop
iret
aas
in
xor
dec
pushl
inc
dec
popa
out
xlat
pop
dec
sbb
xchg
in
loope
sub
incl
cld
outsb
mov
pop
add
jp
or
jae
xchg
lds
or
popf
incb
loop
dec
xchg
mov
inc
cmp
fwait
inc
popa
xlat
cld
sbb
incl
or
ss
cmp
aam
mov
jo
jae
call
ja
mov
add
add
or
and
mov
cmp
push
mov
popf
jecxz
fstpt
adc
jecxz
ret
jecxz
ja
pushl
cld
xor
popf
dec
push
pop
xor
std
loopne
loopne
xchg
inc
clc
push
mov
jb
je
pushl
pop
outsb
icebp
daa
lret
cmc
inc
rorl
lret
es
mov
cmp
ljmp
ds
ror
xor
inc
inc
push
inc
fs
xchg
mov
cmp
pop
xchg
add
pop
std
pop
inc
cmpsl
xorb
pushf
pop
sub
test
movsb
shr
out
sub
ljmp
dec
add
pop
push
scas
jns
cmp
fs
dec
insb
mov
imul
decl
cld
xchg
push
push
or
sahf
test
out
addr16
cmp
mov
mov
inc
add
jg
add
xchg
dec
rolb
xchg
mov
ffree
push
and
xor
out
and
call
insl
cmp
lahf
lock
sbb
mov
pop
cmp
fadd
push
or
jo
addb
xchg
dec
sbb
push
cli
adc
test
mov
scas
jle
bound
push
adc
incl
popf
add
inc
xchg
in
subl
jmp
decl
rcl
sub
mov
push
jns
or
or
rcrl
and
inc
bound
push
es
dec
sbb
and
adc
push
clc
lcall
imul
fidivrs
into
and
loope
mov
mov
scas
cltd
shlb
shll
mov
xlat
xchg
jge
sarb
std
lock
push
mov
sub
sarl
sbb
mov
and
repz
outsl
add
in
fidivrl
jge
decl
test
dec
push
jb
adc
in
xchg
push
pop
push
imul
dec
dec
xor
mov
xor
icebp
cli
in
mov
or
out
pushf
cld
push
cmpsl
ss
push
mov
jmp
jge
jbe
cli
out
outsl
pop
addr16
mov
gs
jns
jb
testl
leave
push
xchg
dec
adc
rclb
ret
imulb
mov
cmpsb
or
pop
jb
inc
jp
add
pop
pop
test
inc
clc
fidivs
fldl
jmp
ret
mov
or
cld
int3
inc
pop
sub
mov
mov
jmp
js
add
addr16
shl
xlat
jmp
cli
arpl
xchg
fwait
pop
inc
cmp
fisttps
or
fcmovne
jg
decl
fdivrl
sarb
cmpb
mov
movsb
call
add
cmc
sbb
icebp
xorl
xor
or
cltd
enter
xchg
sti
test
call
mov
and
ret
cmpsl
jnp
stc
ljmp
jnp
inc
inc
imul
jecxz
data16
or
fcomps
dec
test
sar
movsl
push
push
lcall
popa
lea
inc
repnz
mov
int3
mov
pusha
jle
or
loope
or
push
ljmp
ret
cmp
and
cli
movsb
fimull
xlat
cmp
mov
lods
sbb
pusha
sub
cmp
fsubrp
stos
rclb
rolb
adc
int3
int3
sbb
imul
and
mov
or
pop
adc
sti
call
decl
sub
push
inc
addr16
loopne
dec
push
sbb
jmp
push
adc
xchg
jmp
cmp
nop
out
clc
data16
jle
xor
insb
jl
xchg
jge
pop
fldt
sar
test
pop
inc
daa
testl
stos
cli
pop
add
jnp
inc
cwtl
es
sub
push
sub
inc
js
or
mov
and
sub
mov
dec
add
mov
mov
fimull
cmp
incl
pop
lret
push
add
sub
mov
and
into
iret
popf
call
aad
pop
in
daa
cltd
mov
shrl
orb
sti
jl
rol
das
xor
dec
aaa
mov
push
je
aas
aad
push
roll
decl
lock
xchg
mov
movsb
push
inc
aaa
jecxz
aam
xor
popl
decl
aaa
rep
jbe
jno
ret
cmp
jmp
sub
mov
fcomip
call
ror
mov
call
or
mul
push
dec
adc
iret
in
pushl
mov
arpl
adc
out
fisubrl
fsubrs
pop
pop
sbb
pop
adc
lods
mulb
ljmp
sub
adc
mov
enter
inc
push
xchg
fildl
out
mov
gs
cs
jae
sub
mov
movsl
mov
ret
call
add
test
sbbl
xchg
movsl
mov
and
cmpsb
adc
pop
cmp
mov
push
gs
push
xchg
sbb
mov
pop
addr16
inc
mov
cs
cmp
aas
arpl
out
fdivl
sub
push
hlt
sub
sti
out
mov
call
fcmovb
ljmp
popa
jno
jge
mov
jae
js
mov
incl
mov
imul
sbb
test
xchg
mov
sti
mov
decl
in
mov
pop
js
imul
xor
clc
jmp
jns
cmc
cmp
pop
sub
add
dec
shrl
rcl
aas
lcall
repz
jno
push
mov
and
or
pop
bnd
out
movsb
inc
push
fistpl
loopne
pop
sti
jb
jo
add
mov
push
repnz
decl
aas
mov
push
adc
scas
and
push
pushf
mov
and
mov
rcrl
lock
ljmp
rcll
mov
cmc
imul
pop
xor
add
sbb
ffree
call
sbb
movsl
cltd
outsb
movsb
mov
xor
arpl
decl
insb
or
mov
incb
arpl
mulb
in
mov
jg
decl
push
fwait
jb
cwtl
xor
cmpsb
push
pop
mov
dec
or
sbb
jmp
jg
lcall
loop
mov
mov
adc
outsb
adc
fimuls
fisubl
loopne
push
ss
aam
outsb
imul
arpl
fdivrl
xchg
test
mov
ret
or
add
jmp
inc
inc
cld
call
xchg
push
mov
add
xchg
add
dec
or
idiv
ljmp
mov
and
cltd
inc
push
sub
lret
cmp
mov
lea
call
in
sub
xchg
data16
mov
ffree
pcmpgtw
pop
movsl
mov
jecxz
lcall
sub
mov
cmc
fs
push
pop
inc
mov
sar
mov
cmp
ja
cmp
inc
adc
mov
call
fbld
cmp
dec
addl
gs
lds
clc
inc
mov
aas
inc
lcall
stc
add
or
ret
and
or
pop
leave
dec
cs
inc
movsl
jmp
and
in
push
jecxz
jns
pushf
mov
and
xor
arpl
lods
ljmp
or
xlat
sub
jl
js
xchg
xchg
mov
sbb
mov
loopne
fistpll
mov
mov
sbb
bound
test
rorb
cmc
and
decl
pop
cmp
das
fwait
jp
shlb
sbb
inc
mov
push
mov
xor
jbe
mov
dec
sub
addb
repz
or
inc
pop
stos
sub
and
ljmp
ss
and
cmc
xlat
aam
pop
push
jns
adc
incl
int3
les
jbe
sti
in
ret
xor
sub
test
dec
insb
jg
push
cmp
or
sarb
in
cmp
adc
lock
inc
fisubl
jmp
shll
xor
or
shlb
imul
xchg
sub
popl
and
and
jmp
orl
es
ljmp
les
pusha
cwtl
mov
xchg
push
dec
loopne
stos
push
negb
int3
pop
fisubrl
add
test
leave
decl
xor
sub
pop
mov
add
mov
incl
pop
dec
cmp
mov
call
aad
shl
stos
sbb
out
mov
jg
and
call
mov
pushf
sub
stc
out
push
loope
daa
jo
mulb
pop
inc
loope
add
icebp
mull
stos
xor
jp
rcrl
stc
push
mov
cli
mov
jl
dec
sahf
lods
and
sub
mov
test
sti
cmpsl
adc
or
mov
dec
andl
scas
xchg
fdivs
inc
mov
fbstp
dec
mov
mov
rcrl
lret
movsb
sub
fwait
push
jne
lcall
std
push
xchg
push
push
jl
pushf
repnz
jo
fcoml
ret
or
test
ljmp
and
and
leave
adc
xchg
in
subb
sub
mov
push
cmp
movsb
and
cmp
fists
add
ffreep
jmp
sub
adc
outsl
loope
cmpsb
add
pushf
pop
ljmp
xchg
jno
movsb
dec
in
sub
mov
rcll
lock
mov
decl
nop
pop
push
lret
ret
inc
stos
push
in
outsb
enter
jecxz
jae
jmp
push
imul
mov
jle
enter
pushf
jne
std
call
shll
xchg
sub
loop
stos
in
or
lret
in
lods
lds
pushl
adc
pushf
dec
push
loop
xchg
jl
sbb
loop
popa
adc
jmp
sahf
mov
cwtl
pop
fs
les
enter
cmp
xchg
adc
das
shrb
add
nop
in
pop
shrl
les
jmp
jp
mov
cmp
cld
jecxz
pop
popa
repnz
repz
ljmp
mov
data16
xor
sub
ljmp
arpl
cltd
xchg
cmp
fimuls
add
sub
or
outsl
pop
mov
or
mov
out
and
es
jne
xchg
lods
repnz
sarb
mov
inc
push
jmp
test
xor
scas
add
adc
negl
xor
sar
call
lret
or
in
iret
cmp
in
mov
aam
clc
mov
adc
test
xchg
pop
movsl
nop
gs
int3
loope
subb
repz
xor
xchg
pop
push
ds
ljmp
cli
call
pop
mov
xchg
dec
in
ret
ret
sbb
or
bound
sti
fnstsw
filds
pop
or
add
sub
mov
out
aas
sub
pushl
push
in
add
mov
mov
or
shl
xor
jmp
xlat
js
adcl
pushf
mov
fisttps
dec
lods
inc
jb
rcll
ss
ljmp
adc
mov
jl
dec
inc
dec
jns
mov
loop
sub
popf
push
in
call
lods
push
pop
addr16
data16
or
test
lahf
adc
sub
cmp
loopne
pop
cmc
xor
repz
xlat
push
icebp
loop
data16
arpl
sbb
stos
stc
inc
adc
int
pop
xchg
jp
int3
inc
push
xchg
pusha
in
mov
cmc
jg
push
and
and
ret
cld
incl
mov
jbe
fldl
fistpl
jg
mov
mov
imull
stos
or
call
sahf
call
pop
adc
xchg
subb
mov
xor
adc
jge
sarb
fstl
xor
xor
pushl
sub
sbb
adc
jb
mov
inc
pop
or
jbe
rorl
pop
das
pop
addb
clc
fdivrl
test
outsb
je
mov
mov
lds
jno
push
xchg
test
jmp
jae
sub
inc
sbb
jns
ljmp
mov
pop
loop
mov
lds
xor
pop
incb
in
ljmp
ret
mulb
pop
dec
push
daa
inc
fldt
stc
cmp
adc
pushl
fxch
testb
insl
bound
adc
rcr
sub
aaa
pop
jmp
lods
test
or
cmp
xchg
mov
xor
outsb
pop
movsl
aam
xchg
pop
incl
pop
imul
scas
cmp
sbb
cli
fs
mov
pop
ljmp
dec
out
lcall
mov
push
aas
fcoms
push
bound
push
pushl
inc
ljmp
into
sub
out
popf
jl
or
fcomip
jg
std
xchg
mov
and
in
pusha
and
cld
mov
bound
sub
jmp
daa
push
mov
xlat
jne
mov
fwait
adc
dec
dec
xor
jg
mov
mov
cli
testb
xchg
cmp
push
push
sub
xchg
dec
insb
add
xchg
data16
aas
xlat
dec
lock
push
pop
push
cmp
jg
test
lret
shr
es
cmp
insb
jecxz
stos
mov
jg
jg
cmpsb
rorl
lock
or
inc
or
ror
jg
in
lcall
mov
or
mov
scas
jl
cmp
bound
out
xor
enter
adc
rol
jecxz
dec
loop
mov
mov
xchg
addb
stos
add
and
mov
add
pushl
decl
test
movsl
test
loopne
adc
mov
fcomp
and
decl
mov
fdivrs
lods
dec
lods
cmp
fwait
gs
jno
inc
insl
ds
add
mov
sbb
mov
xchg
hlt
fstpt
push
cmc
test
adc
mov
call
jle
cmpsl
sbb
mov
mov
mov
mov
jbe
mov
int
xchg
xor
in
aaa
add
push
xor
inc
xor
imul
ret
cld
out
incl
inc
inc
dec
leave
xchg
pop
push
pcmpgtd
sti
inc
mov
mov
xchg
adc
dec
mov
add
pop
fyl2xp1
xchg
jo
mov
addb
lcall
pushl
sub
push
sti
pop
int
sbb
inc
push
rclb
lods
mov
roll
xlat
jl
cs
decl
dec
adc
jge
clc
jle
test
sbb
pushl
stc
adc
lcall
das
sbb
addl
push
xchg
adc
sub
xchg
push
push
adc
fbld
lods
out
in
pop
gs
pop
notb
and
outsb
and
cmp
dec
xchg
lret
push
or
sub
pop
pushf
push
dec
xor
dec
ja
cmp
mov
jmp
cwtl
mull
xor
rol
sbb
xchg
pop
mov
xlat
push
sbb
std
push
fidivrl
jno
jg
lahf
xor
inc
inc
loopne
dec
fs
mov
jmp
leave
lds
insl
imul
jg
stos
ficompl
insb
inc
cmp
cmp
jmp
jg
inc
cmp
xchg
inc
xchg
xchg
outsl
mov
mov
jg
movsl
mov
insl
jle
popa
xchg
dec
inc
rolb
imul
imul
popa
push
repnz
mov
mov
xor
or
jbe
stos
sahf
mov
mov
adc
pop
cs
inc
sarb
idiv
or
aaa
cld
jmp
dec
cltd
out
add
ret
cmc
dec
notb
cli
cmpsl
xor
aam
decl
out
mov
les
mov
jge
pushf
fucomp
adc
mov
popl
sbb
inc
shrb
adcb
sub
or
ja
mov
pop
pushl
mov
xchg
popf
mov
js
and
es
jns
jbe
cmpl
decl
test
xor
xchg
aas
loop
or
cmp
popa
sub
inc
sbbl
mov
jns
pop
jne
ss
pushl
shll
ja
push
sahf
push
mov
aam
lods
addb
loopne
mov
jg
ljmp
add
pushf
out
push
insb
inc
call
lret
fwait
scas
mov
dec
sub
rorl
pushf
subl
repnz
repnz
xchg
js
dec
les
pushf
out
cmp
imul
pushl
mov
and
mov
fsubl
xchg
ret
movsb
iret
push
int3
ja
cmpsb
test
ljmp
insb
xchg
pop
lds
jecxz
cmp
fucomp
ljmp
cmp
dec
cmp
fucom
push
pop
cmp
inc
movsl
push
mov
fiaddl
push
and
mov
dec
test
pushf
pop
pushl
inc
and
fildl
ret
pop
addr16
push
insl
mov
decl
sub
push
iret
mov
jg
mov
ss
xchg
mov
decl
push
jge
lods
test
call
xchg
inc
hlt
test
incl
lret
into
adc
xchg
gs
int3
pop
jecxz
incl
mov
sub
imul
dec
sbb
test
or
hlt
jecxz
inc
mov
sbb
ss
xorb
mov
add
xor
add
sahf
sub
xor
rol
pop
lcall
cmp
or
loop
or
cwtl
adc
cltd
iret
lret
mov
ja
lret
cli
mov
lcall
inc
fwait
push
insb
adc
leave
and
cli
int3
pop
lret
clc
call
in
imul
pop
pop
mov
jb
mov
je
inc
mov
xor
push
insb
pushf
mov
pop
jecxz
mov
dec
mov
add
inc
push
push
jns
lea
cmp
mov
pop
repz
rolb
popa
int
fnsave
mov
loope
pandn
addb
mov
jbe
pop
incl
mov
adcl
xchg
sub
mov
and
and
dec
cli
adc
push
mov
mov
push
call
push
inc
es
aad
je
outsl
mov
addr16
mov
ret
aaa
inc
or
mov
call
fcomps
int3
sub
jnp
mov
sbb
mov
stc
test
mov
adc
ljmp
divb
hlt
and
jmp
add
lret
mov
mov
addb
pop
jae
dec
and
pop
cmp
ljmp
push
mov
je
dec
jecxz
inc
and
push
adc
inc
mov
mov
pusha
sahf
ljmp
sbb
dec
mov
icebp
pusha
sbb
push
cltd
adc
outsl
or
jae
xor
xchg
mov
add
repz
mov
xchg
sbb
cmp
mov
mov
dec
test
fisttps
jmp
jo
bound
es
cwtl
mov
scas
xchg
andl
xor
ljmp
push
subb
jge
insl
sub
mov
rorb
movsb
and
lcall
mov
in
sahf
and
bound
pop
int3
fs
inc
loopne
lock
daa
test
stc
incl
cs
push
mov
mov
push
cmpsb
jg
ret
push
jecxz,pn
filds
call
mov
fadd
orb
ljmp
call
and
mov
pop
iret
adc
pop
sub
push
popf
adc
pop
jl
or
push
sub
insb
int3
jne
mov
sub
fisubrs
pushl
lret
sbb
push
inc
leave
mov
test
dec
imul
adcb
or
push
lret
scas
mov
fdiv
adc
in
jp
test
sbb
jb
stos
pop
roll
cld
jmp
sbb
xchg
loopne
mov
jle
fwait
xchg
ret
test
cmpsb
jae
mov
push
filds
incl
fcoml
pusha
mov
push
jg
sbb
mov
xor
pop
cmp
xor
lock
xchg
icebp
dec
stos
faddl
cltd
jmp
xchg
cmp
pushf
inc
xor
ds
scas
inc
xchg
cmpsb
scas
cli
fcmovnb
incl
fdivrl
jne
repz
bound
test
pop
nop
push
in
test
fmull
ljmp
scas
push
out
pop
jne
xor
push
cmp
mov
pop
jns
sbb
xor
in
sbb
lahf
sub
aaa
loop
dec
loop
pop
out
outsb
add
inc
mov
xchg
mov
stos
cmp
xor
mov
shlb
push
lods
dec
dec
lock
dec
rcl
es
call
xor
das
sub
test
sub
out
cmpl
jp
test
dec
es
push
cmp
cli
jecxz
sub
xchg
jg
daa
imul
sub
out
push
jno
xchg
or
inc
adcb
xor
lock
pop
jbe
adc
pop
sub
lret
out
arpl
cmpsb
sbb
dec
jmp
mov
xor
lea
mov
adc
push
in
cltd
adc
loop
lcall
js
cmp
fmull
imul
movsl
fcoms
pop
inc
shr
or
icebp
xchg
inc
repnz
aad
pushl
cmp
pushf
lret
adc
pop
into
cmp
jg
hlt
mul
sbb
test
test
mov
call
adc
ja
mov
jmp
dec
fwait
cmp
xchg
pop
stc
or
inc
cmp
inc
bnd
ljmp
cld
fadds
xor
dec
cltd
clc
arpl
or
nop
add
inc
fs
shll
inc
jnp
jle
and
cmpsb
incl
and
or
jle
fsts
cli
pop
repnz
mov
out
and
pop
mov
jg
test
mov
cmp
dec
cmpsl
test
in
sahf
mov
lods
add
ret
fistpll
sub
mov
mov
cmpsb
sbb
jmp
fstps
jg
repnz
icebp
xchg
pop
or
arpl
cmp
cmp
aam
or
cmc
jae
jmp
mov
mov
lret
mov
cmp
xchg
js
add
aaa
hlt
mov
sti
mov
lcall
cmp
inc
cmc
imul
mov
push
mov
test
mov
in
xor
inc
aam
call
sbb
stos
aaa
mov
test
lock
shl
cmp
xor
and
aad
push
test
decl
orl
push
out
rorb
scas
mov
push
mov
add
mov
nop
lock
ljmp
out
sub
sbb
repz
imul
cmc
orl
sbb
xlat
fstpt
lcall
pop
sahf
mov
add
pop
aad
shrl
jo
mov
enter
pushl
mov
dec
xor
jg
jbe
enter
mov
fs
int3
lahf
jb
sub
fidivrl
jmp
mov
xchg
andb
lods
sbb
dec
sarl
mov
and
call
lea
imul
adc
fsts
sub
loopne
push
and
adc
mov
clc
call
imul
lcall
xor
mov
gs
popf
int
daa
fidivrl
xchg
pushl
dec
sub
loop
jnp
arpl
out
stc
sbb
in
push
mov
sub
lcall
lcall
add
fwait
das
or
xacquire
insb
fwait
xlat
rcr
rclb
mov
fcomps
iret
mov
xor
jae
sub
loope
ss
mov
lcall
add
in
mov
sbb
outsl
inc
lret
repz
add
in
and
pop
mov
sti
cmpsl
pextrw
pop
xchg
leave
pop
adc
inc
mov
lods
dec
mov
shrl
fwait
push
jb
xor
mov
pop
push
rolb
xor
jne
jmp
mov
inc
mov
pushl
cld
ja
sahf
pop
mov
pushf
and
cwtl
or
cmpsb
outsb
fdivl
into
call
xor
sub
xor
sbb
push
mov
xor
inc
stc
mov
add
dec
mov
inc
fstpl
rclb
jp
pop
and
fsubrl
dec
sbbl
dec
pushl
dec
lods
icebp
push
fwait
stos
pop
or
jnp
mov
sbb
push
or
mov
lret
int3
mov
push
in
jns
mov
lock
jmp
push
cmp
or
fdivrl
dec
pop
mov
out
pop
inc
adc
stos
dec
pop
mov
mov
or
push
jo
jp
pop
mov
adc
mov
addr16
push
aas
mov
sbb
call
cld
mov
jnp
stos
out
fiadds
sbb
inc
lods
bound
mov
dec
enter
mov
lock
rcll
scas
and
inc
in
dec
cmp
aam
adc
add
or
push
or
andl
pop
fildll
xchg
fistl
pop
sbbb
ficoms
inc
xor
in
dec
ret
jmp
jo
xor
subl
fildl
shll
cmpsb
dec
das
addb
mov
xorl
sbb
jbe
xorb
movl
mov
or
fimull
pusha
mov
mov
aam
mov
decl
fnstenv
push
das
push
cmp
frstor
jmp
daa
dec
inc
xor
adc
in
push
lods
lret
mov
xor
cmp
mov
sahf
mov
adc
addr16
je
push
ljmp
adc
jmp
add
and
sub
lds
cltd
jb
sar
incb
lds
and
sbb
push
aaa
mov
pop
adc
das
mov
lods
shl
push
or
call
test
sbbl
hlt
jg
adc
cmp
push
fcoms
sbb
fidivrl
stos
jp
sbb
lahf
fcoml
ljmp
ljmp
adc
lea
mov
cmp
ljmp
ret
lods
ret
sti
pop
shll
xor
jge
inc
outsb
mov
je
inc
mov
std
decl
out
sub
xor
pushf
stos
push
jg
or
sbb
fwait
test
in
jnp
dec
mov
mov
mov
mov
shlb
xor
jns
and
es
jb
ret
in
inc
mov
fisubl
ret
lcall
inc
mov
sbb
sbb
mov
es
push
out
jmp
nop
jl
ss
movsl
mov
push
adc
jne
cmp
xchg
dec
inc
insl
mov
adc
mov
xor
push
push
mov
lcall
inc
insl
jge
mov
in
add
aaa
pop
add
adc
adc
and
pusha
das
and
jns
aad
loope
pushf
sbb
lcall
test
lods
mov
test
lea
std
sbb
clc
cld
stos
add
cli
sbb
lock
bound
mov
dec
mov
nop
in
adc
xor
dec
pop
inc
add
cmc
cmp
jmp
imul
ret
pop
mov
cmpsl
mov
aad
rclb
sahf
aas
incl
jno
cmp
add
movsl
mov
in
daa
enter
jne
fwait
mov
arpl
ret
jmp
cmc
sbb
jnp
cmp
jle
subl
or
stos
js
adc
decl
daa
aam
das
xchg
ret
in
outsl
test
pop
inc
inc
push
out
mov
int
xchg
pushf
inc
sbb
jnp
fsubrs
jmp
int3
call
add
shl
push
dec
pop
lret
orb
mov
mov
adcl
lret
jmp
mov
fcomps
lods
inc
pop
xor
out
xlat
sbb
mov
iret
jbe
push
inc
iret
jg
pushl
adc
imul
adc
lea
hlt
in
add
mov
dec
inc
xchg
and
outsl
inc
dec
xchg
mov
sbb
or
pop
out
enter
rcl
mov
addl
outsb
xor
jbe,pt
sbb
add
lcall
cmp
ds
mov
fimuls
out
lret
xchg
cmpsb
cld
out
pop
lcall
jb
jmp
mov
arpl
decl
dec
das
out
mov
adc
jmp
test
fnsave
cmc
call
inc
pop
dec
cmpsl
pop
push
fisttpl
fldcw
mov
xchg
sarb
push
clc
cld
shrl
scas
mov
int
add
mov
add
dec
mov
inc
or
push
lcall
push
dec
push
mov
adc
mov
outsl
cli
xor
out
jecxz
mov
daa
lret
movsb
pusha
test
sbb
and
movsb
jmp
mov
mov
arpl
subb
jp
subl
push
ljmp
cmp
popf
sbb
call
dec
repz
mov
sahf
outsl
mov
inc
test
or
dec
iret
je
adc
inc
pop
rcl
sub
dec
cmpsl
lock
and
mov
mov
jmp
adc
and
inc
dec
add
add
jge
xlat
push
xor
jmp
jp
call
cltd
inc
imul
mov
insl
es
mov
cld
or
mov
mov
xchg
pop
nop
jnp
add
push
pop
add
fadd
mov
jecxz
cmp
ljmp
dec
adc
aad
cli
cmpsl
sbb
or
shll
jge
lea
mov
imul
scas
push
shrl
dec
add
fstl
lds
sub
cmp
imul
lcall
dec
in
or
mov
scas
jge
loope
mov
mov
cld
iret
mov
sub
repnz
cs
sbb
cwtl
pop
add
xchg
push
enter
mov
insl
cmp
lcall
call
pop
mov
fsubp
fs
js
leave
pushl
mov
mov
push
lods
xor
mov
or
push
clc
cmp
insl
sbb
lods
fwait
lcall
lds
ss
cmc
xchg
ja
int
outsb
mov
adc
adc
scas
cltd
std
les
xor
pop
dec
lret
idiv
mov
mov
jge
mov
lcall
mov
pushf
fisubl
mov
inc
xorb
in
or
and
sub
inc
fsubp
sub
stos
sbb
cmp
fcmovu
insl
lods
iret
cmpsl
pusha
cmpsl
outsb
push
hlt
into
xor
das
loop
arpl
loop
sti
out
jmp
scas
loop
inc
fwait
mov
xchg
fldt
clc
and
inc
push
ljmp
outsl
movsl
repnz
repz
inc
rol
pop
xchg
xchg
lcall
jg
cli
movsb
cli
adc
lcall
mov
cmp
cmp
or
mulb
sub
addr16
fs
loope
inc
orl
ljmp
clc
xor
xor
popf
int3
xchg
pop
in
jb
cmp
add
inc
addb
decl
inc
fcomps
es
adc
bound
daa
adc
into
mov
jnp
call
iret
shlb
in
jp
add
ljmp
cli
adc
lret
jp
push
xchg
jg
call
sbb
ja
mov
add
mov
call
pusha
cli
or
push
outsl
imul
cmp
test
xor
jmp
fcomip
movsb
mov
xor
jb
int3
adc
pop
inc
add
mulb
incl
cld
add
adc
cmp
xchg
and
fs
and
pushl
jmp
push
aaa
mov
push
aam
inc
or
xchg
adc
das
fisttpl
and
lock
and
rcrb
incl
sub
jae
pop
je
fwait
lcall
jbe
jp
pop
sub
ja
lcall
or
pop
sub
pop
std
lcall
insb
ljmp
popf
adc
out
jns
repnz
ljmp
lds
test
fsubrs
dec
xor
push
dec
std
sub
inc
hlt
int3
dec
mov
adc
mov
adc
sbb
pop
jge
dec
sarl
or
mov
and
rclb
sub
mov
hlt
decl
push
inc
inc
pop
mov
out
and
xchg
lods
cmp
call
mov
repz
xor
mov
stos
sbb
xor
mov
int3
sub
stos
xor
mov
mov
test
stos
movb
xor
xor
push
in
inc
cld
adc
mov
pop
mov
jp
jnp
jb
mov
rclb
or
pop
shl
or
scas
jg
inc
push
repnz
fmulp
daa
ljmp
movsb
or
pop
push
adc
and
sbb
xlat
push
cli
pop
or
xor
jl
inc
mov
sub
and
loop
shlb
ret
inc
jge
leave
push
sub
xor
dec
rorb
mov
dec
addr16
push
sub
outsb
add
xchg
in
mov
jmp
adc
pop
or
lods
je
loopne
lock
mov
fbstp
leave
ds
push
insb
and
call
aas
fdivl
dec
mov
mov
pop
or
daa
jns
mov
ss
lcall
stos
rclb
or
pop
std
mov
jno
fs
rcrl
jno
mov
jmp
mov
cli
adcl
ljmp
mov
lock
add
scas
call
jge
in
inc
dec
push
mov
pop
push
bound
lods
out
lea
sbb
scas
xchg
jno
mov
inc
test
movsb
into
inc
push
add
mov
jae
xor
popa
test
and
jmp
jb
sahf
cmp
ss
mov
mov
in
insb
aam
or
xlat
jo
pop
jne
cmp
lcall
push
stos
dec
or
cmp
pop
fwait
lods
or
sub
gs
jmp
cmpsb
das
push
mov
mov
cmp
stos
enter
pop
into
xchg
call
push
cmc
sbb
xor
lea
popa
jecxz
daa
adc
sub
inc
add
mov
hlt
shll
jp
push
mov
nop
mov
mov
add
add
adc
pop
sbb
or
jae
cmp
repz
jg
out
out
pop
shrb
mov
clc
in
mov
fcmovnb
call
dec
add
popf
lods
pusha
mov
pop
cmp
inc
jle
fnstsw
shl
add
pop
inc
shlb
add
adc
lock
out
xor
inc
cmpsl
repnz
adc
ret
pop
pop
mov
add
aad
fmull
leave
sar
adc
call
aad
mov
std
cltd
mov
sbb
lcall
mov
mov
sahf
mov
sahf
push
dec
ret
data16
jmp
inc
jae
pop
add
insb
or
pop
xchg
les
outsb
ret
mov
xchg
mov
sar
mov
lds
rclb
mov
lret
dec
mov
pop
ljmp
jb
loope
sbb
adc
daa
xlat
push
add
aad
xchg
ss
mov
sub
rclb
ja
ljmp
cld
lcall
and
sub
jg
inc
adc
outsl
out
xor
sbb
jle
cmp
jmp
and
and
xor
xor
lea
sub
das
clc
push
mov
xchg
or
rcrl
loop
negl
jle
mov
decl
jns
aad
xor
insl
xchg
call
push
test
cmp
adc
inc
push
incl
pushf
ds
mov
imulb
push
inc
inc
clc
pushl
stos
fucomp
push
iret
call
jns
and
jno
xchg
stc
lds
rorb
cmp
jmp
mov
pop
push
adc
cwtl
stos
push
aas
push
incl
lcall
fs
mov
adc
and
adc
sub
sar
jle
mov
pop
jmp
movsl
cmc
jo
xor
cmp
mov
ljmp
jo
ds
daa
dec
pop
aam
sahf
outsl
pop
js
or
push
loopne
scas
ljmp
push
ret
cmpsb
lock
fs
adc
divb
int3
and
jmp
addl
lods
cmc
sbb
fdivr
push
scas
mov
push
lahf
jmp
xchg
cwtl
mov
rcrb
lds
inc
stos
insl
dec
std
add
call
mov
scas
popa
jle
iret
mov
push
or
sbb
jmp
enter
add
pusha
test
dec
mov
jns
pushf
mov
add
dec
jnp
push
adc
pusha
int
dec
js
mov
in
xor
enter
frstor
cld
fadd
push
cmp
and
in
sub
pop
adc
mov
insb
addr16
jp
fstps
dec
call
mov
jmp
sbb
sahf
jmp
push
and
push
adc
insb
ret
loop
decl
push
in
pop
movsb
dec
cld
jo
in
cmpsb
leave
das
push
decl
add
decl
test
xchg
mov
loopne
shrb
mov
popa
mov
daa
in
clc
mov
shll
mov
rorb
dec
cmpsb
adc
jmp
inc
sahf
xchg
xor
inc
lret
mov
adc
stos
pop
xor
neg
pop
pop
gs
rep
dec
cli
incl
push
repnz
adc
pop
mov
cmp
jb
jp
in
out
shrb
mov
cmp
lods
mov
add
mov
pop
pop
adc
mov
xor
cs
cmp
mov
jle
leave
pop
push
dec
loopne
cmpsb
dec
push
add
in
das
ret
or
pushl
mov
pusha
xchg
mov
lea
add
xor
jmp
mov
ret
jbe
push
sub
cli
sbb
push
loop
mov
lcall
lret
fadds
xchg
mov
pop
nop
std
ss
ss
add
push
jg
cmp
scas
rcrl
shl
adc
fs
mov
shlb
push
pop
ljmp
pop
and
push
int
jge
mov
lock
fisubrl
out
and
add
jge
data16
jo
sub
xchg
or
js
mov
dec
jp
inc
movsb
cmpl
xchg
push
paddusw
std
das
xor
sbb
int3
sbb
push
call
imul
xchg
or
push
fiaddl
fdivrs
mov
and
push
dec
pop
jecxz
shl
sub
push
lods
xchg
or
mov
jmp
or
out
mov
fisubrs
addr16
push
imul
push
test
jl
cmp
daa
cmpsb
xchg
int3
push
xchg
mov
push
mov
sub
int3
cmp
or
jmp
mov
decl
popl
in
imul
fistpll
pop
loop
adc
mov
mov
call
in
pop
mov
jecxz
adc
inc
setl
incl
outsb
xor
pop
ss
jo
fidivrs
not
insb
daa
push
pop
movsb
inc
pop
lods
test
cmpsl
enter
mov
mov
cmpsl
sarl
aad
and
xchg
sbb
aas
pop
je
scas
or
dec
push
xor
lods
aaa
movsb
pop
jnp
lret
lock
out
ljmp
cmp
insb
xchg
xchg
lret
shrb
je
xor
jbe
lock
mov
jmp
jmp
fistpll
arpl
mov
scas
in
sbb
mov
call
pop
stc
ss
arpl
adc
inc
ja
add
cltd
aam
cmp
mov
mov
fs
icebp
leave
out
es
sub
std
das
cltd
cmp
push
sub
push
std
inc
call
dec
mov
enter
lds
je
hlt
jg
rolb
xchg
out
mov
decl
push
xchg
jbe
cmpb
mov
pop
fbld
xor
repz
ret
test
incl
cmc
dec
mov
xchg
nop
jecxz
bound
dec
repnz
xchg
xchg
arpl
ja
ret
pushl
jecxz
add
imul
mov
or
idiv
jp
cmp
ret
push
inc
dec
cwtl
mov
adc
lock
push
les
inc
mov
inc
mov
cs
out
decl
out
sub
fs
xchg
and
inc
xor
push
push
iret
je
cmp
inc
push
in
loope
fwait
nop
mov
jecxz
enter
pusha
insb
xchg
adc
pop
lret
push
push
clc
jp
in
inc
mov
dec
cmp
loop
xchg
inc
jl
fistpll
xor
cmp
mov
jns
ja
mov
rep
adc
or
les
pop
cmp
into
xchg
mov
les
jle
lock
push
jmp
fmul
test
cmc
push
hlt
das
rcrl
mov
scas
sub
lods
xchg
fwait
test
jnp
enter
jmp
outsl
out
xchg
movsb
imul
ret
cmpsb
xchg
cli
push
pushf
icebp
pop
loopne
inc
xchg
fsubrp
push
clts
mov
out
jp
lods
or
rol
je
xor
jne
in
mov
pop
js
mov
cs
movsb
sub
lret
push
pop
dec
lahf
lea
hlt
out
add
inc
pop
aas
sub
filds
stos
jp
and
sub
or
xor
xorb
rclb
and
popa
std
outsl
clc
sub
push
int
mov
jns
mov
mov
fbld
inc
pop
imul
out
shlb
sti
jne
mov
mov
cli
ljmp
lcall
push
cmp
fsubrs
divb
out
mov
cltd
dec
jge
adc
inc
cld
push
pushf
xchg
roll
icebp
pop
and
add
jg
xchg
pop
and
or
mov
jmp
and
or
xchg
xor
andb
xor
mov
mov
decl
outsl
push
add
sbb
inc
pop
inc
sub
xlat
or
ljmp
clc
std
jne
fistpl
cmp
arpl
sarl
mov
cmpl
jg
jmp
daa
out
pushf
add
sbb
mov
push
stos
stos
cli
out
adc
gs
popa
mov
pop
sahf
daa
shll
sti
lret
jecxz
push
pushl
dec
mov
push
popa
xlat
push
cmp
int3
inc
int
mov
inc
sbb
xchg
sub
in
mov
pop
push
mov
das
push
lahf
int
dec
xchg
subl
mov
jnp
push
pop
subb
decl
mov
andb
sub
lcall
xor
addr16
mov
divb
push
jne
stos
jp
test
mov
fdivrs
cmc
inc
in
cld
dec
mov
cli
into
lds
sbb
out
mov
gs
aad
or
sti
xchg
cmc
in
sbb
sbb
test
or
lret
pop
mov
pop
cltd
jbe
mov
fs
pushl
mov
inc
and
pop
dec
and
jg
jg
inc
add
and
mov
and
leave
or
hlt
cltd
dec
dec
insb
push
lahf
lcall
sbb
andl
leave
push
out
jae
xor
xchg
sub
decb
decl
pop
mov
xchg
jno
cld
leave
inc
fsts
test
add
or
add
scas
push
jmp
pop
sub
and
sbb
stos
movsl
mov
mov
xlat
mov
push
enter
mov
and
lret
push
sbb
pop
inc
xor
mov
mov
dec
leave
mov
cmp
or
xchg
sbb
pop
ds
test
adc
sub
int3
movlhps
hlt
out
mov
xchg
mov
sti
daa
mov
add
lcall
pusha
popf
lcall
pop
nop
nop
mov
cli
incl
and
and
loopne
add
daa
sbb
rcl
mov
mov
pop
and
push
bound
jp
enter
jecxz
inc
cli
icebp
sar
imul
ret
sbb
ja
cs
ljmp
fidivs
test
adc
or
into
sub
inc
dec
ds
dec
adc
xorl
test
out
pop
lods
or
decl
nop
mov
icebp
outsl
test
nop
cltd
rcll
fdivrl
lcall
out
cmovo
inc
pop
rcrl
dec
xor
call
decb
incl
shr
jno
popa
loop
xchg
mov
repnz
mov
or
xchg
mov
lods
cltd
hlt
pop
icebp
call
les
andl
xor
cltd
inc
addr16
jg
out
sar
das
lods
mov
stos
lds
push
cli
dec
jg
and
push
dec
imul
add
pop
xchg
adc
dec
pop
jp
sbb
pushl
ret
fwait
daa
aad
sub
jbe
icebp
cmc
mov
idiv
adcl
ljmp
push
pop
sbb
aad
fbstp
mov
mov
jp
jne
pushl
push
stos
and
pop
test
sub
xor
dec
lar
rol
add
pushl
pop
sub
mov
mov
icebp
jmp
inc
inc
pop
mov
push
xchg
and
aaa
sub
push
or
js
sbb
jg
adcb
push
xchg
jp
adc
hlt
shr
and
incl
shrb
lret
mov
dec
sbb
out
and
push
stos
xor
mov
cmp
and
mov
test
jg
and
xchg
lock
lcall
mov
sbb
rcll
xlat
rcrb
mov
lcall
sbb
xor
sbb
dec
jmp
sbb
cmp
push
repz
sahf
jb
push
gs
call
test
xchg
shrb
movsl
jnp
std
push
testb
adc
call
in
cmpsl
jae
pop
movsb
adc
jmp
loope
push
addl
adc
jp
push
rol
mov
popa
push
pop
push
xchg
or
rclb
push
lahf
loop
scas
mov
je
in
xlat
add
incl
inc
in
mov
push
xchg
xor
imul
cltd
std
ljmp
incl
pushf
int3
lock
lret
inc
pop
pushf
mov
stos
dec
mov
mov
dec
push
xchg
out
inc
clc
stc
das
lahf
jmp
cltd
jecxz
sbb
rol
or
pop
imul
sti
sub
lock
jo
sbb
push
mov
and
push
xor
lcall
xor
test
dec
das
dec
rorb
xorb
mov
sub
faddl
repnz
fcomip
jg
ljmp
jecxz
jns
jae
stos
ficoms
repnz
and
cmp
jno
and
hlt
js
ljmp
cmpl
dec
std
cmp
inc
mov
mov
mov
sub
xor
sbb
jge
mov
cmp
sub
dec
jg
out
mov
lcall
in
ljmp
mov
ljmp
xchg
popl
push
xchg
fisttpll
sarb
and
xchg
jo
jge
mov
mov
test
outsb
cltd
flds
out
jae
pusha
je
fistpll
repz
mov
ja
iret
movaps
ror
push
fs
outsl
push
mov
mov
sbb
cmp
adc
aad
lcall
mov
mov
sarb
daa
addr16
sub
ja
push
xor
pushf
mov
js
icebp
hlt
or
mov
adc
push
ficompl
or
ljmp
loopne
nop
jg
frstor
mov
push
in
daa
xchg
addr16
out
shrb
mov
daa
jb
imul
ljmp
push
jmp
dec
dec
arpl
mov
sarl
rclb
jmp
jecxz
jbe
mov
push
and
add
loop
mov
nop
out
dec
jno
xchg
push
das
lcall
arpl
jge
push
adc
dec
cld
cmp
pop
rcrl
ljmp
clc
fwait
xor
clc
xchg
fdivrl
push
shrl
sub
decl
jo
ss
bound
xchg
add
lock
incl
sub
push
repz
dec
dec
sbb
ss
int3
and
mov
inc
cld
jg
inc
xchg
jmp
mov
out
bound
add
mull
add
je
inc
cld
ficomps
stos
fwait
push
lret
aas
test
lret
cmp
in
ret
xchg
mov
lcall
mov
xchg
stos
out
add
adc
push
or
push
jecxz
push
in
jo
or
orl
out
jnp
clc
mov
mov
mov
or
lcall
ljmp
or
mov
and
add
inc
jl
inc
rcr
in
jns
mov
mov
pop
hlt
dec
cs
dec
cmp
nop
test
xchg
and
flds
add
pop
je
xor
in
ficompl
fildll
sub
sbb
loop
cmp
sub
inc
mov
xor
in
pushl
les
mov
mov
add
sbb
push
push
cmp
test
into
dec
fildl
dec
pop
push
cmp
fsts
and
bound
ljmp
add
pop
mov
orl
mov
xchg
sbb
cmp
dec
lea
sti
ljmp
sbb
jns
outsb
mov
inc
or
enter
sub
daa
out
clc
adc
ljmp
add
sti
and
push
jp
je
adc
push
pushl
roll
aam
jl
ret
mov
fwait
xchg
popf
mov
out
jae
mov
pop
cmc
or
cs
push
fbstp
mov
cmp
inc
xchg
dec
std
cli
stos
incl
lret
dec
nop
dec
insb
add
push
or
rcrl
in
les
jmp
js
lret
pushl
lret
rolb
orb
stos
aam
pop
and
mov
mov
mov
cwtl
xchg
stos
push
pop
push
popf
mov
hlt
mov
push
dec
loopne
ljmp
test
adc
lods
inc
pop
iret
lcall
push
bnd
test
add
or
subb
in
adc
pop
sub
ljmp
or
push
std
fbstp
stc
push
pop
mov
mov
lods
mov
push
cmp
sbb
push
pop
mov
or
xchg
in
fistpl
popf
std
push
inc
jns
add
mov
push
std
jg
in
push
push
aas
ret
insb
jb
nop
cmp
mov
test
mov
dec
pop
std
outsl
jne
pushl
and
and
push
fldl
in
shll
inc
std
punpckhbw
lret
push
sbb
xor
mov
add
movsb
jg
jg
call
inc
movsl
or
mov
andb
fisubs
sub
cmp
cli
or
int
sub
scas
inc
fmull
shll
mov
pop
jp
cmpsb
push
out
cmpsb
mov
inc
aam
mov
stc
mov
fildl
cwtl
and
lea
jg
and
in
mov
mov
mov
fwait
xlat
push
jg
sbb
xchg
stos
bound
rcrb
rcrl
mov
addl
mov
inc
ljmp
mov
pop
dec
mov
sbb
push
inc
ljmp
cli
incl
push
fdivs
mov
mov
inc
cpuid
leave
jl
push
dec
call
cld
incl
mov
pop
dec
and
mov
mov
repz
and
decl
and
adc
jle
xlat
pop
or
cwtl
pop
add
fisttps
das
addl
jae
stos
int3
ret
or
push
mov
and
movsl
shr
call
mov
push
jae
call
push
mov
mov
cmpb
mov
popf
mov
scas
iret
sub
lods
out
mov
mov
enter
lock
mov
addr16
jle
xchg
test
jae
mov
decl
mov
ds
pop
sub
inc
inc
xchg
cmp
pop
jne
std
test
decl
jg
popa
int
adc
mov
repz
les
mov
xchg
popa
clc
mov
pushl
pop
add
sub
and
insb
sub
jns
or
jmp
call
aaa
mov
lcall
and
div
mov
pop
lds
hlt
push
fnsave
pop
pop
sbbb
jge
scas
decl
sbb
push
or
in
fwait
mov
cltd
test
mov
mov
loopne
stos
outsb
or
ret
hlt
inc
sub
std
mov
sub
popf
fldcw
test
and
pop
xorl
dec
pop
das
and
aam
mov
fs
pop
sti
xchg
sti
mov
mov
sbb
shlb
lahf
add
dec
cmp
lods
pop
stos
loopne
mov
xchg
gs
movl
std
jge
sbbl
jg
add
push
stos
dec
push
jbe
daa
fisubs
xchg
add
decl
test
sti
sbb
xchg
popf
in
rorb
fwait
lods
testl
mov
shlb
cld
mov
push
scas
push
xchg
outsl
ret
mov
pop
into
out
lcall
lcall
dec
or
sub
and
xorb
in
dec
mov
pushl
ss
jecxz
mov
loope
ret
mov
mov
mov
sbb
in
add
icebp
lcall
inc
mov
insl
pop
push
sbbb
shr
and
ljmp
xor
out
arpl
hlt
aam
or
jmp
int
mov
jae
cmc
movsb
adc
aam
sub
pop
xlat
rcrb
jo
loop
mov
xchg
lock
mov
add
stc
mov
stos
test
push
mov
xchg
jl
push
punpckldq
iret
xor
jmp
xor
int
fsubrs
dec
dec
lods
loope
scas
jmp
shrl
add
inc
dec
sub
adc
ljmp
jg
push
outsl
outsb
fisubrl
mov
ret
je
inc
nop
popa
idivl
pop
cwtl
loopne
ret
or
mov
or
adc
mov
dec
push
daa
dec
movsl
pushf
scas
test
add
push
push
dec
popa
xchg
jp
cmpsl
hlt
stos
imul
xchg
sbb
or
inc
or
loop
mov
push
lods
js
lods
cmp
stos
movsl
insl
out
iret
mov
and
repz
leave
inc
outsl
jle
adc
test
jns
fadd
test
lea
ret
cmpsl
push
sub
add
xchg
pushf
sub
jb
xchg
xchg
aam
jmp
js
mov
sub
mov
test
mov
add
lret
sbb
enter
sbb
lret
inc
sub
fadds
mov
lret
add
out
add
and
push
jp
nop
push
push
aam
add
sti
or
cli
dec
mov
pushf
fdivrs
jge
push
sti
and
xor
les
pop
call
mov
out
nop
sub
in
and
sub
cs
clc
cmp
dec
mov
add
add
lret
fs
push
mov
arpl
jmp
std
stc
out
int3
dec
lcall
lods
and
mov
jle
dec
aaa
inc
mov
cmpsb
mov
jle
mov
add
lock
lcall
popa
xchg
mov
and
mov
ret
dec
dec
repz
pop
in
in
lahf
adc
jne
inc
inc
jmp
rcrl
fnstenv
jg
decl
add
sarb
xchg
mov
xchg
repz
movsb
push
sub
jmp
outsl
and
jmp
sbb
inc
sti
sub
addb
pop
test
add
dec
orb
clc
sub
push
add
test
cwtl
js
lea
shlb
fadd
jmp
inc
dec
adc
push
das
movsl
add
testb
bound
iret
hlt
xor
mov
cmpb
xchg
push
mov
inc
adc
xlat
mov
mov
mov
popa
stc
adc
fcmovb
adc
stos
mov
pop
cmp
sbb
add
xor
dec
sets
inc
rcll
sti
xchg
outsb
outsl
pop
push
jo
or
call
or
jbe
sbb
decl
push
inc
and
addr16
jp
sbb
incl
push
mov
dec
sbb
aaa
inc
aas
inc
cli
and
add
icebp
fisttps
pushf
cmc
dec
bswap
enter
cmp
cmp
leave
adc
mov
idiv
popa
jl
xor
fsubrl
ljmp
xor
jmp
stc
cmp
xchg
jmp
xorb
filds
call
scas
xlat
pop
pop
mov
adc
notl
cmpsb
outsl
and
push
mov
adc
pushl
aad
or
cmp
mov
lcall
lret
pop
mov
outsl
clc
sbb
ljmp
push
mov
ljmp
cwtl
cmp
js
xor
rcrl
jl
mov
jg
mov
jns
das
cli
lcall
sbb
pop
aaa
mov
lea
xchg
push
inc
insl
mov
arpl
inc
dec
and
out
jmp
inc
adc
daa
cmp
pop
cmp
inc
xchg
sti
or
out
and
enter
mov
lret
outsl
cli
add
enter
xorb
xchg
pusha
adc
jmp
sbb
sbb
outsl
inc
push
sub
push
sub
and
adc
cmpl
dec
data16
je
stos
push
cmp
adc
cld
stos
cmpl
scas
dec
cld
mov
inc
cmp
mov
test
mov
in
jae
push
gs
xchg
adc
push
iret
mov
pop
and
adc
jg
mov
std
lret
ljmp
mov
inc
jno
xchg
outsl
cli
call
test
icebp
jle
xchg
cld
mov
leave
mov
xor
jb
decl
sbb
loop
movsl
subb
lret
mov
inc
cmp
xor
jge
push
fisubrl
hlt
imul
shlb
sub
mov
loope
mov
ret
xor
lret
call
outsb
pop
adc
int3
mov
rorb
aas
and
sub
inc
push
cmpsb
loop
push
data16
call
imul
sbb
add
xor
push
lods
adc
lds
call
in
mov
mov
arpl
insl
pop
rcl
jg
sti
es
push
out
fbstp
aas
cmpsb
int3
decl
std
in
lret
ret
cltd
jge
or
pushl
ret
cmp
popf
clc
fnsave
arpl
loopne
mov
repnz
loopne
adc
push
ds
xchg
pop
xchg
or
enter
jg
inc
jl
push
xor
jno
and
add
incl
add
popa
jmp
or
cmp
stos
lcall
nop
ljmp
popf
ja
mov
stos
push
xchg
xor
jmp
dec
adcl
jmp
fisubs
xchg
xchg
dec
xchg
out
pop
aam
push
out
in
lcall
jbe
lods
stos
lahf
aaa
pop
pop
ret
jb
jmp
mov
in
fildl
aaa
push
mov
clc
btsl
cmp
pushl
push
inc
sbb
jge
mov
fwait
aad
mov
mov
in
movsb
jecxz
xorl
mov
add
jne
xchg
add
test
pop
mov
out
arpl
pop
adc
fwait
inc
decl
outsb
jg
paddb
jnp
push
aaa
lahf
mov
inc
js
add
out
out
es
bound
lcall
push
stos
in
mov
stos
xor
subl
mov
mov
shll
idiv
pushl
std
cmp
push
popa
mov
data16
lret
call
lock
ljmp
test
add
loop
fsubrl
scas
clc
sbb
gs
inc
mov
outsl
xchg
jg
cmp
pusha
sbb
test
jecxz
jo
aas
das
lock
cmpsl
sbb
loope
out
inc
jge
xchg
and
sub
testl
scas
movsl
push
fsubr
or
ffree
cld
fistps
pushl
jg
add
jle
push
adc
push
cmp
mov
mov
ret
mov
adc
es
into
mov
mull
aad
add
or
fsubrs
decl
loop
les
push
sbb
js
nop
cmp
mov
xor
sbb
xor
jg
inc
cld
and
dec
sbb
mov
ret
push
xchg
mov
jmp
jge
cmp
pop
sub
mov
push
add
xchg
icebp
pop
outsl
cmp
or
push
mov
sbb
popf
sbb
decl
cmp
xchg
mov
and
icebp
sbb
hlt
sub
test
jg
dec
gs
dec
out
adc
cmc
sub
cmp
pop
ds
call
outsb
xor
aas
sbb
jge
push
scas
fstl
inc
mov
dec
fcmove
xor
out
into
repz
or
outsl
divl
mov
sti
mov
mov
into
ret
cmp
js
mov
xchg
push
imul
stos
sub
lcall
shrl
enter
pop
mov
sub
jne
outsb
fs
cwtl
jnp
daa
jne
scas
dec
push
mov
mov
iret
jp
popa
xlat
sbb
jae
fistps
data16
pop
sbb
or
lock
push
stos
jge
cwtl
clc
pop
imul
adc
rcrb
inc
cltd
push
or
movsl
xchg
xlat
dec
iret
sub
inc
mov
mov
fistl
fsubs
movsb
mov
pop
push
cli
aas
jecxz
movsl
dec
adc
mov
scas
adc
cmp
daa
and
ret
push
nop
xchg
scas
mov
aam
fidivs
push
cwtl
mov
bound
ljmp
lock
stos
les
and
pop
lea
hlt
mov
int
xacquire
and
addr16
in
mov
fidivrs
in
jecxz
bound
pop
add
inc
pop
fsts
xchg
mov
ljmp
sarl
enter
fdivrs
repnz
add
or
frstor
mov
mov
test
lret
jns
test
outsl
ja
movsl
pushf
add
fcomip
cmp
mov
test
adc
or
mov
cmpsb
push
adc
lock
sbb
fiaddl
lcall
push
adc
shll
in
mov
pop
xlat
test
cs
push
pop
push
or
mov
dec
xchg
mov
xchg
roll
ljmp
movsb
xor
mov
xchg
xor
xor
jmp
inc
cs
pcmpgtw
mov
leave
fstl
lock
and
fwait
inc
inc
ljmp
hlt
lahf
out
imul
pop
clc
std
clc
loop
psubq
mov
shlb
movsb
jno
push
mov
mov
movsb
mov
or
les
push
or
inc
xchg
xchg
decl
notl
sub
enter
cmp
je
rclb
hlt
je
mov
push
mov
pop
leave
cmp
inc
jmp
ret
les
out
je
mull
xorl
sbb
repnz
push
dec
mov
lock
xchg
sti
jg
jnp
cs
cmc
cmpsb
fimull
in
outsl
ss
push
call
jbe
push
in
inc
push
jg
stos
nopl
mov
xor
das
inc
pop
mov
mov
scas
cltd
pusha
or
incl
insl
outsl
sub
imull
fmull
loopne
dec
imul
pushf
jae
bound
jmp
cmc
and
sub
bnd
jmp
push
ja
jnp
and
cmc
outsb
inc
dec
outsl
pop
cmpsl
and
out
hlt
sti
aaa
mov
int3
pop
cmpsl
out
lods
decl
cmp
sub
js
mov
repnz
sub
mov
jle
out
int
int
dec
sahf
adc
rcrl
push
ds
incl
data16
stc
sti
mov
jl
add
lock
incl
adcb
xor
sbb
fsubrl
leave
pop
push
xor
loopne
call
shrl
and
inc
pop
mov
jmp
enter
movsb
in
xor
mov
lds
mov
push
bound
adc
inc
pushf
mov
inc
aam
incl
or
fimull
stos
cmp
bound
repnz
outsl
loop
inc
ljmp
sbb
cmp
out
pushf
and
jecxz
cltd
and
lcall
fprem
call
scas
xchg
jo
mov
xlat
jmp
outsl
mov
xchg
icebp
pop
call
jp
cli
push
lods
enter
mov
incl
clc
cs
add
jmp
movsl
aad
jne
xor
je
mov
call
cwtl
xchg
inc
iret
rorl
test
clc
xchg
mov
decl
push
out
rcrl
pop
jecxz
ljmp
rorb
adc
xchg
je
jmp
decb
cmp
sahf
sbb
pop
or
sahf
pop
ljmp
stos
aas
mov
or
daa
movsl
insb
pop
mov
mov
ja
inc
fdivr
mov
mov
hlt
cmp
int
fiaddl
mov
in
test
and
aad
jmp
adc
sbb
je
test
pop
ret
sub
dec
inc
and
movsl
mov
push
adc
add
sbb
jg
mov
call
icebp
fwait
out
xchg
dec
sub
ljmp
outsl
xor
bound
jge
es
mov
inc
push
out
push
add
mov
jns
imul
push
pop
or
jge
inc
les
or
jp
lcall
mov
mov
cli
int
xchg
inc
mov
xchg
xchg
dec
popa
fbstp
jp
stos
dec
cltd
xor
imull
jbe
pushl
std
mov
inc
xor
adc
andl
mov
movsb
rolb
inc
scas
xor
cmp
xor
shll
lret
repz
scas
pop
dec
outsl
or
subb
fwait
jns
insl
dec
lock
lcall
sub
sbb
enter
or
xorb
loopne
daa
mov
dec
pop
lea
lock
xchg
jnp
push
test
std
incl
dec
xor
jnp
outsb
lret
jmp
pop
lcall
and
pop
mov
fsubrl
addr16
cltd
mov
pop
push
enter
jmp
es
test
mov
stos
dec
mov
jmp
cmp
loop
mov
fdivrs
scas
sbb
lea
push
mov
xchg
ficomps
es
das
pop
pop
out
test
ljmp
jo
lods
stc
or
ss
xor
push
cwtl
sub
lods
js
popf
lcall
or
dec
in
loopne
mov
xchg
daa
rol
ret
aaa
sahf
mov
xchg
les
add
or
incl
jl
jle
ret
cmp
lods
lret
mov
cli
push
jnp
rcl
dec
aas
jmp
decl
loopne
dec
outsb
adc
pop
lret
cltd
lsl
push
push
jmp
fstpl
sbbb
dec
xchg
in
inc
call
add
mov
jl
dec
pop
jmp
xchg
lret
mov
jns
aas
mov
inc
xor
xorb
cmpsb
add
jno
lods
shlb
push
and
xor
imull
xchg
dec
enter
popf
mov
add
dec
xor
adc
repz
repz
fstpl
adc
pushl
xor
insl
inc
jle
sbb
jg
dec
mov
aam
cmp
mov
orl
fs
xchg
cwtl
xor
decl
push
pop
divb
cld
pop
test
cld
cwtl
sub
outsb
mov
ljmp
int
or
pop
add
push
cmc
pop
add
iret
mov
int
mov
inc
jae
xchg
adc
inc
fcmove
aas
in
sub
out
xchg
ljmp
xor
lret
mov
xor
gs
add
sti
std
add
stos
xchg
leave
or
and
push
xchg
adcb
movsb
xchg
scas
cmp
sar
ja
or
jp
cmp
pop
jp
xchg
mov
sar
call
inc
cmp
adc
arpl
inc
and
sub
xchg
das
and
divb
lcall
pop
inc
mov
aaa
jnp
dec
lods
popf
inc
cmp
push
mov
cld
cli
and
xchg
pop
mov
adcl
xor
xchg
popf
fsts
sub
jmp
push
fmuls
std
mov
daa
or
int3
jnp
sbb
outsb
sbb
xchg
int3
ss
cmp
add
in
jb
sbb
imul
pop
std
pop
out
adcb
jle
adc
bound
sub
call
mov
gs
cmp
dec
sbb
or
add
js
dec
mov
mov
sub
in
in
push
cli
inc
sbb
into
or
xor
or
rcrl
sar
lcall
mov
ret
pop
hlt
push
sbb
cwtl
call
pop
xlat
insb
movsb
push
sub
ljmp
decl
repnz
les
and
mov
int3
pop
or
sbb
cwtl
cs
cmc
test
call
push
lahf
add
and
cmp
cmp
dec
xchg
sub
mov
mov
call
push
sub
pop
lea
sbb
sahf
in
ret
sahf
sub
add
ja
pushl
inc
xor
stos
lods
jl
pop
mov
data16
push
cld
sub
test
add
mov
ljmp
cli
cmp
out
xor
jmp
add
xor
hlt
outsl
mov
xor
int
imul
call
pop
stos
sbb
push
lret
fistps
lcall
popf
jmp
test
jmp
loop
xchg
jg
shrb
xchg
mov
xlat
and
icebp
mov
cmp
jp
mov
mov
adc
mov
push
stos
scas
adc
incl
xor
jo
inc
push
push
ljmp
mov
ficoms
and
xchg
icebp
les
popf
fcoml
movsl
xor
in
fcomp
inc
add
sarb
push
lds
int
push
sub
incl
nopl
lahf
outsl
es
add
jg
cltd
push
hlt
sub
lds
push
pushf
mull
sub
fcomip
call
xchg
xchg
aam
addr16
daa
orl
jle
mov
rorb
xor
iret
fwait
test
fdivs
inc
push
in
ds
movsl
iret
dec
cmp
or
test
pop
ljmp
pop
icebp
out
jg
mov
push
sub
std
inc
cmp
test
xor
incl
or
mov
adc
dec
fnsave
jbe
push
sbb
js
xchg
shr
push
loopne
inc
repz
dec
pop
lret
in
pop
pop
ljmp
mov
popa
test
das
mov
push
and
sub
cmp
call
sbb
es
adc
adc
xchg
xchg
sub
test
movl
sbb
fs
test
xchg
lcall
lahf
xchg
or
mov
mov
aas
pushf
addr16
pop
add
fistpll
adc
xchg
ljmp
mov
test
hlt
movups
popf
or
and
adc
scas
mov
or
adc
jp
dec
mov
adc
ljmp
test
mov
addl
repz
dec
fists
mov
sbb
cmpl
mov
shl
mov
xor
movsl
lahf
data16
lcall
loop
and
lods
push
lds
mov
aas
inc
sub
decl
mov
loope
popa
outsl
mov
sahf
push
sub
adc
andb
psrld
lcall
inc
cmpsb
faddl
cmc
cltd
aas
adc
adc
andb
mov
xor
subb
insl
push
daa
sbb
in
mov
pushf
sbb
adc
hlt
lods
pusha
sbb
sbb
out
cli
pop
mulb
test
faddp
shlb
or
lret
sar
jmp
sbb
orl
sub
setl
lcall
ljmp
push
xor
das
sbb
imul
cmp
pop
mov
pop
je
cmp
xlat
sbb
pop
cmp
in
and
push
sbb
incl
das
fucomp
test
sub
dec
pop
cmp
jge
sbb
into
lds
ljmp
fdivs
test
pause
scas
cli
push
mov
stos
subl
pop
cmc
decl
mov
push
in
cmpl
add
into
pop
cmp
aas
leave
and
insb
and
insl
es
pop
pop
pushf
mov
add
outsl
cmpsl
jb
fnstsw
test
fwait
dec
orb
sti
in
outsl
fxch
inc
icebp
sahf
fmulp
cmp
jmp
jno
sti
jnp
imul
ja
lea
rcrb
mov
stc
icebp
decl
sbb
adc
push
push
mov
xor
mov
xchg
lcall
in
imul
mov
movl
ud0
ljmp
out
outsb
out
and
fisubl
xlat
dec
popf
mov
ds
jns
fsqrt
ss
dec
jmp
out
sub
cld
dec
scas
xlat
jae
xor
fidivrs
clc
imul
mov
int3
lods
sbb
lods
fwait
call
inc
jecxz
addb
scas
xchg
mov
inc
and
movsb
jle
shrl
sub
pushl
adc
imul
inc
add
mov
xchg
inc
jp
mov
sahf
imull
dec
test
aam
jnp
inc
dec
adc
jae
jmp
pop
inc
sub
lcall
pusha
stos
xor
je
lods
leave
adc
orl
out
dec
pop
mov
int3
xchg
pop
xchg
xor
cli
pop
push
fisubl
lcall
nop
jecxz
arpl
cwtl
sub
pop
dec
mov
fmuls
mov
xor
pop
pop
inc
xchg
into
mov
push
xchg
and
stos
jno
mov
pop
cwtl
cmp
jecxz
popf
test
inc
repz
pop
xchg
decl
cli
jp
es
pop
iret
sbb
ret
add
pop
push
cmp
scas
adc
call
leave
sbb
mov
push
push
scas
repz
scas
jae
arpl
xchg
cmp
xor
jl
les
in
pusha
icebp
mov
mov
pushl
and
sub
sbb
cmp
sti
sbb
lea
sub
ljmp
mov
fstpl
pop
loope
test
call
lret
clc
cmp
push
xchg
add
mov
fdiv
fs
push
push
out
jmp
add
mov
jecxz
insb
xchg
cli
stos
lods
cli
leave
stc
jp
bnd
pop
imull
pushl
pop
clc
add
lret
jg
and
jp
in
and
inc
and
std
sti
inc
nop
ljmp
data16
not
bound
js
adc
ja
pop
in
push
pop
es
push
inc
arpl
xchg
push
mov
fsubl
cmpsl
lods
lea
cmpsb
stos
push
jbe
shll
bound
xor
incl
les
add
int
mov
adc
mov
shll
and
ljmp
daa
add
mov
cwtl
adc
mov
xor
and
xor
adc
mov
cmp
jecxz
bound
leave
pop
cmpl
adc
push
jmp
fs
test
push
or
sbb
sbb
cmpsl
idivb
mov
stos
ljmp
imul
xchg
loop
cmpl
mov
test
cmp
ficoml
sub
adc
outsb
push
mov
pop
ljmp
pop
xchg
dec
jg
in
add
mov
or
fadd
jecxz
mov
inc
pop
adc
lret
loop
mov
imulb
lret
addr16
xchg
inc
sub
mov
dec
xlat
out
arpl
push
scas
jg
push
arpl
icebp
scas
ljmp
fstps
jb
pop
or
or
cmpsb
mov
inc
lret
enter
clc
push
repnz
andl
sarl
outsl
popa
cld
jmp
cs
or
pusha
mov
cmp
jg
lods
imul
or
fdivl
pushf
inc
ficoml
mov
xchg
js
fcomip
lret
push
fs
xorb
faddl
and
add
add
xchg
scas
lcall
int3
rcl
insb
repnz
xchg
jg
scas
adc
mov
loopne
mov
jmp
jns
cmc
add
lock
mov
je
sbb
sti
ret
push
fxch
mov
and
jae
imul
mov
mov
adc
jmp
loopne
cwtl
into
in
shrb
adc
and
neg
mov
notl
jmp
aas
sub
incl
test
push
cmpsb
lret
add
sbb
mov
je
bnd
dec
and
fcomip
call
push
lds
mov
push
lock
push
sbb
lods
dec
mov
jno
imul
or
ljmp
sub
neg
sbb
leave
repz
shl
push
clc
call
sbb
xchg
into
out
jp
xchg
test
cmpsb
xchg
push
push
es
and
jmp
test
dec
xor
dec
or
jo
add
sub
dec
dec
lods
add
inc
pop
dec
loop
mov
jg
fadd
pop
pop
push
cld
jae
jnp
aad
in
and
incl
adc
mov
ljmp
rcr
nop
push
imul
ds
mov
fbstp
jo
lods
rcrl
pop
ret
insb
fwait
add
jmp
pop
and
push
xor
ja
cli
adc
jo
fwait
cld
lea
jl
in
ret
lret
cli
sbb
or
add
loopne
out
in
aas
sub
mov
adc
jmp
mov
imul
cmp
push
imul
sarb
push
imul
fsubp
jno
cmp
xor
ljmp
iret
and
shll
hlt
imul
push
xor
mov
cwtl
inc
xchg
pushl
aas
es
in
out
loope
inc
add
push
aam
fsubrs
lcall
mov
insl
mov
and
dec
pop
fs
lock
pusha
cli
lock
and
mov
pop
dec
sbb
pop
sub
je
cmp
mov
je
pop
push
mov
mov
mov
shll
popa
pop
jecxz
cltd
dec
arpl
adc
push
js
pusha
sub
insl
mov
adc
aad
or
mov
fmull
lcall
mov
fwait
sahf
and
mov
std
shlb
lret
or
call
dec
adcl
jne
out
movsb
pop
mov
xor
inc
pop
jns
imul
shlb
into
mov
inc
outsb
push
call
mov
imul
cmp
sbbl
or
bound
fucompp
mov
movsb
or
adc
decl
mov
jl
mov
out
jne
sub
and
push
cmc
fwait
pop
std
jo
mov
pop
and
lods
mov
in
xor
adc
hlt
inc
fistl
movsl
outsb
stos
bound
ljmp
nop
icebp
jle
rorl
pop
inc
xchg
sub
xchg
adc
decl
aad
ret
movsl
adc
test
lret
std
lea
jmp
shll
mov
ret
pop
js
mov
push
sub
fcmovb
data16
lret
push
and
pushl
imulb
test
test
shr
jle
add
ljmp
nop
mov
aad
inc
enter
iret
out
jae
stos
push
lret
xchg
cmp
call
ss
sbb
inc
pop
add
call
fwait
ror
and
pop
pusha
mov
xchg
es
call
push
mov
ljmp
aad
pop
jge
decl
shrl
mov
or
or
add
cmp
add
addb
loop
in
ja
decl
pop
icebp
sub
enter
sbb
rcrb
jge
lahf
call
xchg
call
xor
in
mov
jmp
mov
lock
sbb
decl
push
mov
push
lret
ljmp
int3
shl
inc
add
dec
xchg
or
xorb
mov
sub
mov
out
pop
adcl
pop
pop
shrl
jg
pushf
push
and
hlt
out
popa
or
mov
dec
push
add
pop
or
lods
jne
mov
cli
test
dec
mov
fadds
jmp
aas
repnz
rcrb
fdivrs
stos
xor
mov
sub
mulb
loop
mov
or
xlat
dec
xchg
ss
mov
sbb
adc
ljmp
jnp
push
stc
ss
push
ficoms
and
pop
std
mov
addr16
jmp
mov
js
push
fisubrs
jg
movsb
push
or
and
mov
fbld
ds
mov
adc
aas
jne
mov
mov
hlt
aam
sbb
loope
jle
sbb
ret
xchg
jl
fcoms
fldt
xchg
sbb
dec
sbb
pushl
mov
cld
xor
add
dec
stos
sbb
lds
cmpsb
sub
jmp
sbb
pushf
add
decl
lea
insb
cmp
sbb
pop
fwait
pusha
repz
and
test
call
mov
faddl
and
push
fcompl
jne
and
dec
mov
negb
mov
cltd
mov
lods
push
iret
dec
dec
sub
cmp
sarl
pop
js
cmp
sbb
pop
sbbb
call
cltd
insl
dec
sbb
lods
std
dec
lcall
xchg
dec
popa
cld
add
shll
dec
jle
jnp
add
fisttps
jecxz
or
mov
or
es
jae
insl
lcall
dec
icebp
and
dec
sbb
in
mov
aad
mov
fdivr
inc
or
adc
cld
jmp
mov
pusha
fadds
add
movsb
cld
inc
add
and
push
cmp
into
push
mov
fidivs
pushl
cmp
cmc
and
ret
fs
testl
clc
mov
in
test
cld
test
stos
mov
jg
leave
dec
stos
add
mov
arpl
bound
adc
add
jg
iret
shr
dec
inc
bound
or
xchg
jbe
pushf
mov
xor
jmp
push
fcomi
aam
mov
shl
incl
jle
sbb
aas
mov
sub
fisttps
add
int3
add
int3
add
stos
sbb
aas
stos
loop
inc
mov
push
pop
lock
incl
dec
and
cmp
dec
pusha
jno
inc
out
bound
fists
scas
shlb
call
mov
push
imull
lods
push
push
faddl
fwait
rcll
adc
push
orl
mov
mov
ja
and
fwait
inc
incl
mov
out
adc
in
add
div
jp
sti
xchg
out
scas
decl
std
lcall
leave
out
push
into
adc
mov
add
mov
call
add
jb
sub
xor
in
or
mov
sub
call
idivl
sar
dec
push
cmpsl
repz
push
sub
xchg
push
dec
imul
or
int3
or
enter
icebp
scas
xor
and
or
jg
inc
xchg
xlat
xor
loopne
jg
fisubrl
test
fidivs
sub
imul
mov
fsts
xor
xchg
adc
insl
jae
mov
dec
sahf
cld
pextrw
add
ljmp
fidivl
jnp
mov
dec
jg
js
idivl
and
pusha
cmp
pushl
fwait
and
sbb
push
sub
sub
incb
push
push
cmp
mov
jge
lea
add
xchg
leave
and
pop
sub
stos
cmp
or
push
xchg
lret
decl
cs
in
sbb
clc
in
jbe
rorl
addr16
movsl
adc
repz
jg
repz
pop
inc
into
sub
push
mov
arpl
xchg
ss
and
jae
jp
call
idiv
push
andb
fsubrs
pushf
and
xchg
popf
jno
pop
mov
mov
push
js
outsb
ret
adc
int3
pop
push
push
ret
cmpsb
xchg
push
xchg
popa
in
mov
rcrl
cmpb
out
mov
xor
mov
adc
mov
daa
xor
movsl
in
movb
lret
adc
or
lods
in
out
mov
fldt
or
push
xor
xchg
pop
jb
pop
sbb
jg
sbb
aas
jle
pushl
pop
rolb
fcoms
adc
push
xchg
pop
das
fcmovnb
out
fcoms
mov
ret
and
js
mov
test
std
lret
ds
sarb
fsubrp
sahf
jle
aam
ja
ja
mov
mov
jg
in
enter
nop
pop
stos
das
adc
xor
enter
jns
decl
inc
and
jge
sbb
cmp
add
xchg
or
inc
xchg
das
add
es
mov
test
lahf
clc
mov
xlat
mov
adc
out
decb
cmp
mov
test
nop
cmp
in
fisttpl
jbe
scas
jo
ljmp
mov
es
pop
inc
pushw
testl
jnp
ja
mov
adcb
xor
movsb
je
lcall
or
mov
pop
outsl
sbb
mov
jmp
add
xchg
or
es
or
loopne
je
fisubrl
lock
jg
pop
adc
leave
stc
fadd
or
je
sub
decl
sub
aad
mov
insb
stos
adc
repnz
or
xchg
xor
xchg
out
pop
mov
ret
fcmovne
out
push
pop
fistpll
mov
nop
jmp
xchg
mov
push
adc
mov
jge
pop
xlat
sub
inc
fists
or
push
ss
cmp
inc
loope
xorb
sti
add
xchg
dec
sub
dec
push
mov
jo
jns
clc
jmp
lock
lds
lock
testl
divl
call
adc
adc
mov
hlt
add
inc
repz
sbb
pusha
out
in
scas
imull
decl
pop
add
add
aam
mov
mov
ljmp
test
clc
push
insl
lret
rorl
mov
repnz
fidivrl
sbb
xor
mov
sbb
cmpsb
bound
dec
in
stos
rcl
mov
loopne
jg
or
repz
dec
sub
mov
aas
decl
clc
cmp
sbb
imul
inc
std
mov
int
jnp
xlat
hlt
popa
popf
lods
cmp
jp
int
add
xchg
jno
popa
lcall
fisubrl
cmp
sub
out
mov
movsb
nop
xor
mov
ja
in
call
and
xchg
pop
out
or
sub
jnp
aaa
jg
add
gs
mov
pop
not
sbb
aam
and
js
lcall
rclb
scas
ds
sbb
inc
fdiv
mov
add
add
mov
decl
sub
test
xor
cltd
aad
inc
ret
cmp
aaa
addr16
sub
jns
fisttps
js
mov
loop
subl
fldenv
pusha
ds
pop
decl
lock
bnd
inc
mov
data16
mov
push
adc
outsl
jmp
xchg
xor
xchg
out
pop
fldenv
mov
mov
xor
mov
inc
cli
gs
push
inc
dec
mov
mov
mov
scas
xor
mov
pop
stos
xchg
cmp
xchg
das
clc
jle
cmp
sahf
xor
jbe
inc
data16
sub
xlat
jns
das
sarb
shl
jne
or
sbb
mov
lock
mov
ret
loop
xor
xchg
imul
hlt
push
add
cmp
cmpsb
mov
xor
lcall
loopne
fcomip
and
fistpl
sub
pop
inc
out
xchg
je
or
pop
xchg
sbb
jmp
iret
adc
jno
cmp
mov
dec
repnz
enter
enter
jp
xlat
mov
inc
push
pop
ret
xor
insl
sbbl
and
and
inc
adc
jmp
jo
mov
adc
mov
sbb
pop
negl
ljmp
sub
pusha
insl
testb
fistps
inc
sarl
out
out
or
sub
loopne
or
in
sbb
pop
mov
rclb
pushl
inc
mov
or
jns
insl
dec
cmpsl
test
leave
cli
ljmp
and
cmp
dec
iret
sbb
lcall
jmp
mov
sbb
jae
xchg
call
call
lock
mov
lea
decb
fcoml
add
pop
mov
clc
mov
call
jmp
lea
and
int3
out
mov
and
bound
mov
push
out
adc
sub
js
inc
es
and
fs
pop
nop
lahf
pop
sub
cmpsl
add
in
jmp
in
and
sub
push
mov
call
cmp
inc
jno
mov
in
xchg
inc
div
shrb
dec
mov
pushf
add
js
aas
stc
lods
lcall
repz
xchg
push
and
sbb
incl
cmp
sub
sub
jle
ficompl
xchg
aaa
lea
scas
outsb
mov
xor
cltd
pop
mov
ja
movsl
xorl
jae
outsb
mov
xlat
insb
test
pop
mov
ljmp
incl
sub
mov
popa
in
dec
lods
fwait
dec
jge
cld
mov
sub
mov
das
and
dec
mov
cli
ljmp
sbb
in
mov
jle
mov
outsb
xchg
ja
cmpsb
mov
arpl
into
call
mov
addr16
cmp
mov
adc
ja
les
scas
out
pop
pop
xor
sbb
inc
enter
jb
into
fdivrl
lret
pushl
push
xor
push
xor
xchg
xlat
dec
add
jmp
cmp
cmp
cld
incl
jp
fwait
xor
push
stos
adc
roll
cmp
sub
sbb
sbb
lods
cmp
fnstcw
xor
lds
data16
jb
push
lahf
sub
into
lcall
js
dec
mov
xchg
jae
mov
jb
sub
fmuls
js
scas
decl
icebp
lods
fs
loop
daa
aaa
jge
xchg
lret
into
test
popa
into
repz
mov
cwtl
cli
std
mov
test
push
lcall
into
das
pop
mov
dec
scas
mov
out
jb
push
ja
sub
fcmovbe
pop
xor
add
shll
inc
ds
mov
fwait
daa
test
pop
fs
lret
jecxz
mov
cltd
cmp
sbb
js
push
les
leave
pop
push
cmp
mov
adc
jbe
mov
mov
clc
ss
int3
dec
pushf
xlat
dec
shrl
adc
mov
jmp
sbb
cli
sub
or
aaa
es
mov
jmp
jmp
or
mov
cmpsb
hlt
and
cmc
out
add
add
jno
xchg
nop
ljmp
xor
testl
inc
fwait
dec
mov
ja
jo,pn
lahf
push
dec
mov
dec
jge
adc
push
sbb
xor
mov
or
mov
mov
js
mov
or
call
or
ds
cmp
testb
mov
call
in
mov
add
cs
clc
cmc
enter
in
add
xor
mov
mov
nop
test
cs
fsin
add
rdpmc
push
lods
fldl
and
ljmp
loope
fcoms
imul
orb
push
or
dec
jnp
pushf
das
lret
fidivl
push
jg
push
jp
pushl
jb
adc
mov
in
aam
jnp
pop
mov
ss
stos
call
mov
push
push
mov
aas
scas
repnz
into
push
or
cli
lods
or
xor
int3
dec
dec
inc
cmpb
adc
mov
insl
mov
lret
fstpt
mov
int
adc
adc
sub
popa
fbld
cmp
out
push
out
iret
adc
inc
mov
lds
xchg
cmpsb
adc
xor
mov
ljmp
in
jmp
lods
or
aam
mov
pop
test
rcrb
addr16
pushl
or
aam
outsb
mov
mov
aas
xchg
pop
leave
mov
xor
shl
cmp
mov
repnz
fcom
jmp
mov
rolb
nop
outsl
jb
jg
dec
xchg
mov
add
sbb
jge
pop
cmc
pushl
cmp
push
cmp
pop
xchg
in
pop
cwtl
sbb
mov
stc
inc
jg
daa
js
push
cmpsl
mov
xor
test
inc
jnp
sub
mov
cmpsl
push
ljmp
outsl
mov
push
int
mov
je
into
mov
fs
aaa
cld
cmp
adc
cs
jne
cmpsl
or
and
mov
cmp
imul
cltd
pop
insl
xchg
xor
ja
movsl
daa
push
in
test
dec
xchg
jmp
popf
or
sbb
imulb
push
adcl
call
rcrb
shl
test
mov
sub
lcall
lods
inc
scas
mov
jg
jg
jle
fs
mov
sub
ja
sub
movsl
dec
cld
pushl
cwtl
es
or
push
pop
clc
jg
fsubl
xchg
xchg
gs
mov
sbb
lods
mov
jne
divl
push
cld
lcall
jnp
add
or
or
mov
std
mov
out
outsb
in
dec
bound
push
add
mov
fwait
jp
xchg
jns
dec
sub
xchg
adc
adc
cmp
push
push
dec
ret
test
mov
fcompl
add
jns
jns
jnp
mov
idivb
mov
test
inc
jg
or
in
xor
das
jmp
ljmp
or
loope
cltd
or
xor
es
xchg
in
dec
jns
shlb
es
sub
pushf
shl
clc
cli
sub
movsb
pop
pop
js
js
ljmp
dec
pushl
sub
cltd
jbe
cltd
pop
xchg
push
sbbb
lahf
ja
cli
out
dec
xchg
push
mov
mov
add
pushl
movsb
pop
dec
je
push
mov
call
push
jb
out
ds
push
subl
icebp
ljmp
lret
inc
cli
jecxz
daa
dec
cmp
mov
and
jo
rcll
call
mov
mov
or
in
add
lods
pop
sbb
flds
out
jns
lock
or
arpl
outsl
orb
sbb
adcl
sbb
popa
push
leave
and
rep
inc
insb
imul
sbb
cmp
out
in
fists
outsb
adc
push
jbe
cs
shlb
jnp
mov
fs
and
dec
xchg
jne
lcall
ss
inc
rcll
push
cld
mov
xor
fidivrl
push
mov
jmp
insl
rorl
lret
jae
jmp
je
mov
xor
je
lret
sbb
incl
push
xchg
rcrl
fadd
xor
sbb
add
imul
sbb
jg
lret
adc
push
adc
pop
inc
das
inc
and
cmp
pop
ljmp
clc
push
or
out
decb
sbb
stos
es
mov
inc
cmpsb
repnz
jmp
add
inc
dec
das
lock
jecxz
pop
cmp
cmpsl
sahf
mov
fimuls
or
fisubrs
push
pop
fnstenvs
sarb
jno
loope
lock
xchg
popa
inc
aas
test
adcb
je
push
mov
mov
decl
jp
cmc
mov
aaa
pop
push
nop
int3
cmpsb
inc
mov
xchg
popf
mov
dec
cld
dec
test
xchg
outsb
test
decl
or
dec
in
push
push
lahf
push
fnstcw
or
pop
xorb
add
icebp
lods
pop
aas
loop
in
or
pop
xor
jecxz
pop
cmc
and
mov
xchg
fsubl
scas
push
jp
jno
push
add
and
cmpsb
filds
push
lcall
aad
sbb
movsb
into
cmpsb
das
jns
incl
pop
out
mov
mov
inc
scas
enter
fwait
ss
push
test
mov
push
add
repz
decb
ret
adc
mov
push
jmp
cld
ret
jecxz
ret
xor
fisubrl
aaa
fisubrs
add
and
sahf
push
or
and
sub
scas
pop
loop
sub
ljmp
and
gs
xor
incl
dec
fwait
mov
dec
cmp
push
jmp
imul
dec
adc
movsl
sub
pushf
gs
pop
fwait
test
dec
jnp
xchg
popaw
scas
call
jb
mov
cmpsl
hlt
dec
jo
cmp
ss
mov
mov
mov
dec
movsb
push
pop
xchg
mov
iret
and
gs
mov
dec
jmp
sub
bnd
mov
mov
dec
clc
jns
xor
push
dec
push
fcomps
and
mov
test
mov
popf
mov
cmp
xor
xchg
cli
call
out
add
ss
push
jae
call
sbb
cmp
call
popa
es
ss
jecxz
aas
imul
repnz
inc
adc
inc
imul
idivl
clc
cmp
sbb
test
fldl
loop
fcmovb
lahf
in
stos
repnz
xor
mov
paddq
mov
pusha
push
xchg
pop
dec
cld
dec
push
je
jl
les
ret
rorl
roll
mov
cmp
push
mov
adcb
lds
pop
mov
add
mov
clc
inc
loopne
sub
mov
xlat
adc
popa
in
ficomps
test
mov
stc
inc
xchg
sar
ljmp
sbb
negb
imul
lret
sbbb
ljmp
imul
loop
dec
inc
xlat
jbe
xor
cmp
sub
stc
cmc
repz
shlb
pushl
std
stos
sbb
sub
push
popa
aad
push
xchg
addl
loopne
loop
lret
jo
in
xchg
jl
pop
js
cwtl
mov
dec
fs
pop
jns
js
addr16
out
xchg
mov
cmp
imul
push
test
pop
fs
adc
jmp
bound
adc
call
in
int
mov
test
xor
sub
gs
stos
jl
xchg
cltd
bound
cmp
fists
adc
lods
in
fs
and
push
test
mov
push
dec
dec
inc
mov
fdivl
push
mov
data16
cmp
sti
mov
cmp
sub
lret
inc
hlt
ret
mov
mov
fistpl
xchg
loope
loope
sub
xchg
stc
iret
cmp
pop
addb
pop
adc
lcall
xor
filds
outsl
test
sub
mov
ret
cltd
pop
mov
js
ljmp
outsb
and
out
adc
mov
or
pop
cmpsb
ljmp
mov
sbb
loopne
jge
mov
stc
sub
xchg
movsb
cmp
ljmp
inc
icebp
loop
mov
leave
rorb
mov
sbb
insl
jge
int3
sub
pushl
sub
cltd
lahf
mov
xor
or
mov
dec
and
lods
in
popa
test
dec
mov
test
decl
pop
dec
outsb
adc
dec
jecxz
pusha
jno
repnz
outsb
mov
jns
loopne
add
and
out
sbbb
fisttps
push
inc
loop
cmc
cmp
jo
jnp
cmc
xchg
negl
ja
psubq
cmpb
cld
clc
pop
push
fwait
adc
loopne
or
call
andb
lods
test
cmp
or
push
stos
loopne
divb
jae
sbb
ret
sub
out
sar
lcall
mov
xchg
out
pop
xor
stc
mov
xchg
cmp
ja
lahf
fstp
pusha
xor
and
sub
mov
sti
movsb
clc
bound
clc
jg
inc
push
rcl
mov
movsb
and
pushl
pop
bound
imul
sbbl
xchg
data16
push
pop
xlat
push
and
cld
mov
fimull
xchg
and
andl
sbb
jg
push
mov
mov
fdivrs
bound
cmc
jge
cld
call
ret
fnstenv
add
and
std
pop
push
or
mov
pusha
hlt
repnz
sub
pushl
lret
jge
push
xor
inc
or
sbb
mov
dec
test
aam
mov
pop
jge
xor
jns
gs
push
out
inc
dec
ret
xchg
add
push
and
push
mov
jne
lret
pop
or
or
pop
cmp
adc
jle
dec
sbb
fdivrl
decl
cld
lahf
mov
sub
xchg
xchg
icebp
mov
adc
cwtl
mov
call
aam
movsl
jmp
ljmp
adc
daa
xor
repz
aam
ret
aas
mov
sub
push
movsb
mov
cmpsb
cld
xchg
adc
mov
lret
ja
ds
shrl
les
rcll
imul
add
ljmp
aad
adc
je
f2xm1
sbb
fbstp
into
test
mov
rolb
and
call
sbb
icebp
pusha
mov
in
xor
mov
cld
sub
mov
adc
inc
mov
jg
mov
movsl
seta
mov
sub
fiadds
mov
push
sub
sbb
sti
push
fisttpll
cltd
push
mov
filds
pop
mov
jg
incl
or
xchg
aad
mov
xlat
inc
mov
imul
adc
cmp
pop
sub
das
stc
es
pop
scas
inc
repnz
scas
dec
sbb
out
sub
mov
jnp
ret
inc
ljmp
mov
xchg
jmp
sbb
jl
mov
jne
bound
inc
dec
test
pop
lds
pop
inc
mov
ja
mov
mov
xchg
dec
div
es
movsl
xchg
jmp
adc
push
jge
push
leave
pop
sbb
lock
adc
rclb
addr16
decl
shlb
dec
dec
scas
inc
adc
je
add
fs
ja
stc
push
rorb
outsb
clc
pushl
sub
in
cmpsl
icebp
jmp
xchg
fdivrl
pop
cwtl
je
adc
mov
cmpsl
sbb
lret
and
call
ljmp
test
adc
push
aad
ljmp
ljmp
xchg
and
adc
jecxz
dec
jbe
adc
jns
lret
test
sahf
mov
fsubl
stos
mov
xchg
adcl
lods
sbb
jmp
daa
mov
xchg
ja
mov
test
pop
pop
in
shrl
outsb
fbstp
aam
call
push
into
cmpsb
pushf
mov
iret
call
es
outsl
loopne
mov
test
pop
fcmovnb
push
ljmp
enter
in
je
push
ljmp
hlt
mov
repnz
repz
add
dec
test
pop
add
lcall
test
adc
push
iret
mov
iret
sub
lret
hlt
loop
or
mov
divb
ret
jns
xchg
mov
cld
sarl
in
out
in
es
in
in
cwtl
incl
cmp
or
mov
pop
cmp
addb
ret
leave
push
xor
jle
repz
mov
ds
bound
cmp
ljmp
or
jg
mov
data16
repnz
addr16
stos
in
mov
ljmp
cli
dec
fisubrs
jp
jl
in
pop
inc
rcrb
or
int
std
push
mov
int3
ljmp
cmc
fbstp
pop
out
or
mov
sub
pop
pop
aas
sub
sbb
inc
and
or
push
pusha
xor
jb
push
push
push
jns
sub
testb
cwtl
xlat
xor
cmp
rcr
std
mov
cmpsl
lcall
popf
xchg
cmp
ja
dec
xchg
add
aaa
popa
sbb
out
sar
mov
mov
nop
xchg
xor
inc
ret
daa
shll
mov
scas
xchg
sbb
jg
jg
push
int3
sub
lret
jp
push
and
sbb
cmp
push
rorb
push
jbe
jp
outsl
js
sub
mov
or
call
dec
test
mov
adcl
std
and
sti
inc
sub
push
cltd
xchg
popa
leave
inc
inc
pop
sub
mov
aas
adc
roll
lods
mov
cmp
dec
cmc
xchg
popa
inc
jge
mov
add
sbb
rcrl
jecxz
ljmp
and
ret
and
jle
popa
loope
push
push
xlat
mov
decl
lds
jl
pop
dec
mov
lods
adc
notb
pusha
xchg
in
push
call
lcall
lret
dec
mov
sub
mov
std
decl
jno
dec
cmpb
int
ljmp
divl
or
dec
dec
pop
sahf
cmc
xor
jg
das
mov
insb
mov
in
sub
sbb
pop
add
rcl
adc
inc
push
adc
pop
adc
inc
mov
out
ljmp
xor
std
mov
xchg
lock
jno
jb
ljmp
xchg
fs
dec
jp
rcl
sahf
shrb
stos
push
adc
push
xchg
ret
incl
inc
xchg
fsubs
insl
pop
fcomp
lcall
test
aaa
xchg
mov
fucomp
mov
add
mov
incl
shrb
test
lret
jae
add
ret
fdivp
inc
outsb
in
dec
lds
jp
loope
je
pop
fcomip
inc
dec
lock
cmp
ret
test
push
fsts
sar
out
and
fcom
xchg
mov
inc
xchg
mov
sti
mov
xchg
push
pop
xlat
cmpsb
or
jmp
jecxz
loopne
jp
jg
add
or
cmp
out
pushl
std
sub
pop
mov
enter
cltd
sbb
jecxz
lret
jp
pop
mov
ds
scas
jo
pop
call
leave
push
out
cli
test
adc
mov
test
pop
fiaddl
pushf
stos
test
aad
cmpsl
hlt
ljmp
shrb
insb
cld
rclb
faddl
imul
or
stc
ret
inc
xor
loopne
icebp
out
mov
mov
mov
add
sbbl
sbb
incl
push
std
hlt
and
sub
rorl
das
mov
jp
test
nop
rcrl
xchg
cld
out
xchg
fcomip
jmp
inc
mov
push
dec
in
sbb
mov
das
addr16
xchg
ret
icebp
rcll
cmp
pop
lods
std
push
das
dec
dec
push
push
or
imul
inc
mov
rclb
int3
enter
in
loopne
hlt
movsl
stos
xchg
out
out
sbb
cmp
ljmp
push
sbb
inc
xor
pop
les
lods
testb
xchg
icebp
addr16
lcall
shld
pop
sub
pop
pop
pop
imul
enter
sub
jle
lcall
lds
cmpsb
sti
fidivl
mov
popa
outsb
push
out
loope
pop
aas
xor
mov
int
push
sbb
outsb
push
aam
into
and
mov
fstps
cmpsb
sub
stos
cmpsb
icebp
call
pop
add
push
or
test
subb
mov
cmp
jno
sbb
or
sub
mov
ljmp
or
rorl
or
sbb
jb
pop
aad
sbb
je
sub
mov
push
mov
push
cwtl
dec
decl
add
lea
push
rolb
xchg
mov
mov
or
mov
push
mov
addr16
sbb
mov
mov
mov
dec
in
cmp
popw
push
pop
dec
cli
inc
ss
decl
push
dec
sbb
shrb
sub
mov
scas
out
mov
cli
sub
jae
jns
and
fwait
jp
ja
push
ret
cmpsl
mov
pushl
pop
mov
pop
mov
pop
pop
xchg
mov
push
aas
inc
pop
push
shll
cld
ljmp
sub
and
jbe
xlat
dec
dec
jg
mov
sub
pop
rcrl
cmc
outsl
jp
add
dec
lock
jge
inc
in
aas
jae
incb
adc
mov
pushf
mov
daa
mov
mov
cmp
out
cmp
fs
fdivl
inc
pop
or
fimull
mov
xor
mov
and
sbb
sbb
ljmp
cmc
or
clc
mov
sub
jo
dec
std
stos
mov
fisubl
jecxz
je
xlat
sbb
jp
mov
or
cwtl
imul
inc
adc
andb
push
xlat
push
jbe
and
incl
mov
mov
hlt
ds
push
jmp
decl
xchg
repnz
mov
adc
mov
scas
das
cmp
jmp
add
fwait
or
cmp
loope
sbb
mov
in
cmc
dec
and
pusha
or
pop
mov
pop
sbb
inc
inc
mov
mov
and
cltd
jmp
imul
divb
repnz
jmp
mov
and
push
cmpsb
test
sbbl
mov
mov
stos
pushf
sbb
jb
inc
dec
ss
jg
inc
xor
ss
push
dec
nop
in
push
push
mov
and
stos
dec
pop
sub
ss
dec
dec
sub
fcomip
movsl
xor
mov
or
notl
xlat
lea
test
std
pushl
cwtl
sahf
test
popf
push
movsb
or
inc
xchg
push
in
test
pusha
mov
jg
cld
jb
pop
sub
xchg
sub
mov
or
andl
and
das
dec
icebp
bound
pop
mov
pop
mov
repz
xor
clc
xchg
add
pop
add
add
mov
ljmp
mov
mov
mov
dec
cmp
push
adc
xor
decl
pop
insl
and
dec
cli
divb
mov
dec
clc
jmp
pop
lahf
mov
push
cwtl
jg
ljmp
push
mov
pop
aaa
xor
dec
sbb
int3
out
inc
add
call
fld
std
mov
mov
or
cmp
sbb
ja
shrb
enter
ljmp
adc
out
cmpsb
cltd
mov
or
aam
mov
clc
mov
and
mov
mov
je
mov
std
loop
push
push
mov
ljmp
add
and
mov
sub
sub
rolb
pop
clc
cld
jmp
ja
jecxz
incl
adc
dec
loop
lcall
imul
test
aas
icebp
sbb
push
shl
fucomp
sar
scas
mov
addr16
xor
jg
add
lret
or
mov
jecxz
test
pop
sub
or
rorl
xchg
sub
xor
xor
mov
mov
in
bound
mov
les
fwait
les
decl
jl
cmpsb
mov
push
mov
pop
rcl
mov
mov
cs
cmpsb
andb
rcl
xor
rcll
incl
push
xlat
test
xor
ja
cmc
lahf
sbb
mov
fists
ljmp
test
mov
mov
enter
incb
xchg
dec
stc
mov
mov
cmp
inc
test
fs
mov
jno
sub
add
jae
decl
lock
into
xlat
mov
stos
jg
jnp
push
push
mov
decl
xchg
jbe
cmc
sbb
nop
arpl
mov
fisubs
lods
mov
out
adc
cs
arpl
cmp
pop
lret
pop
out
nop
add
scas
push
popf
and
mov
cmp
cs
aam
cmp
dec
clc
shl
ja
adc
in
loopne
pop
mov
out
mov
test
nop
or
add
nop
sbb
int
and
cmpsb
fidivrs
aad
push
sub
or
aas
or
cli
daa
push
or
and
xchg
mov
xchg
repz
in
mov
jnp
dec
xchg
or
out
push
iret
mov
mov
test
mov
sahf
xchg
aad
cli
decl
popa
mov
xlat
cmp
xchg
inc
mov
mov
mov
stos
pop
arpl
ljmp
xchg
mov
cmp
aad
orl
stos
sbb
std
dec
pop
mov
call
imul
push
mov
mov
fdivrp
jmp
or
shr
sbb
inc
inc
sub
icebp
or
inc
xchg
jb
fstl
loop
push
jl
lret
cmc
xor
call
movsb
ret
dec
jb
cltd
out
lahf
movsb
push
rorl
mov
clc
dec
pop
push
sbb
dec
mov
push
movsb
lods
arpl
push
int3
push
pop
jecxz
popa
xchg
lods
fsts
mov
outsb
lret
lea
cwtl
mov
sbb
in
mov
scas
in
mov
icebp
mov
add
ljmp
adc
aad
pop
outsl
pusha
notb
orb
jae
cwtl
adc
imul
cmp
ljmp
clc
sarb
js
push
mov
push
dec
subb
decl
mov
pushf
pop
loop
dec
stos
inc
push
jbe
pop
xchg
les
inc
mov
push
ret
mov
xlat
sti
push
fs
push
ret
sahf
fs
xor
jmp
inc
sub
and
fmul
cld
and
mov
xor
testl
inc
jmp
jmp
pop
insb
jns
dec
mov
in
mov
mov
xchg
cmp
test
or
incl
jle
mov
add
fcomip
test
push
enter
jmp
xor
mov
xchg
and
iret
inc
mov
call
pop
and
cmp
mov
fcomip
fs
mov
push
cmpsl
and
sahf
jecxz
ljmp
sub
xchg
outsl
dec
stos
and
lahf
cmp
shrl
imul
mov
rol
mov
dec
insl
sbb
mov
add
loope
xor
dec
ficomps
pop
sbb
inc
adc
jg
xorb
outsb
xchg
ja
mov
bnd
jle
stc
adc
and
sbb
mov
adcb
hlt
dec
roll
test
mov
ficomps
subb
mov
decl
mull
xchg
inc
mov
sub
fstps
cmp
mov
mov
rclb
clc
mov
hlt
add
call
rcll
test
xlat
inc
out
loopne
sub
adc
incl
hlt
scas
push
xchg
lods
fwait
dec
push
repnz
inc
xchg
imul
es
mov
inc
xchg
int
push
cmp
adc
and
cli
in
dec
cs
popf
lods
repz
xor
sub
xor
mov
and
pop
jno
lcall
mov
inc
in
inc
mov
add
dec
int3
ret
cmp
inc
mov
jmp
jecxz
cli
int3
pop
lret
push
sti
jp
jnp
pop
or
xor
imul
arpl
loope
in
xor
pop
fmull
rcrb
pop
out
xchg
call
sub
sub
cmp
add
repnz
xor
adc
push
scas
adc
xchg
daa
xlat
int
mov
mov
jnp
ror
xor
inc
into
clc
sti
out
add
shll
push
stos
sub
dec
jne
pop
loop
xchg
fidivrl
loopne
xchg
and
popf
push
cmc
mov
pop
ljmp
xchg
pop
mov
ss
lds
pop
add
sti
stc
push
jge
mov
pop
clc
and
arpl
popf
testb
adc
lret
mov
jecxz
scas
js
mov
cmp
dec
mov
aaa
mov
decl
shrb
or
lock
push
adc
jmp
xor
mov
dec
xor
mov
call
mov
cmp
sbb
out
inc
fdivrp
subl
and
jmp
rcrb
jmp
movsb
lcall
inc
xchg
aad
neg
loope
dec
push
ret
incb
and
mov
incl
icebp
dec
mov
outsb
mov
shrl
sub
lods
pop
scas
mov
mov
xor
ficoms
adc
and
in
lcall
jns
adc
and
adc
lock
push
inc
push
out
ljmp
outsl
mov
clc
push
cs
iret
out
mov
push
ja
mov
and
andl
add
call
mov
lds
nop
jge
cli
call
jge
out
lods
sbb
jge
ds
andl
lret
subl
outsl
mov
in
add
lea
cwtl
push
out
adc
sar
sub
scas
adc
fmul
fwait
decl
and
fbld
int
fdivrs
cmp
insb
jle
jg
cmp
leave
jne
xlat
sbb
fnsave
clc
inc
sbb
decl
fs
dec
in
sub
and
sbb
add
fcmovb
cmp
ret
push
sbb
fs
sarl
mov
mov
imul
decl
shlb
and
hlt
jae
jmp
cmp
lahf
scas
mov
pop
xor
jne
rcrl
inc
clc
or
dec
dec
xor
ljmp
adc
in
sub
inc
sahf
out
cltd
xor
lahf
push
pop
mov
push
pop
push
or
pushl
test
leave
pop
outsl
insl
inc
js
shll
insb
cmp
xchg
mov
cld
inc
inc
mov
andb
sahf
fistps
jp
out
fiadds
jmp
dec
dec
ss
stos
and
std
adc
lds
inc
int3
inc
dec
lcall
sub
gs
inc
push
loope
xchg
ljmp
or
pop
rorb
mov
ljmp
mov
jl
sbb
js
test
inc
mov
or
stos
push
mov
xchg
xchg
fldenv
mov
lcall
cwtl
add
mov
bound
lods
scas
cli
dec
jmp
push
push
or
dec
sub
popl
inc
inc
push
add
js
push
adcl
push
mov
aaa
lods
mov
inc
daa
daa
ljmp
sub
lcall
mov
and
xor
inc
mov
dec
icebp
in
in
lea
dec
in
sbb
fld
cmp
loope
pop
lahf
bound
cwtl
mov
stos
mov
xor
push
int
std
js
aaa
cld
call
loop
cmp
xor
cld
scas
cmp
mov
popa
xor
dec
pop
sbb
jno
scas
add
imul
sub
pop
cmpsl
leave
jp
xchg
push
test
mov
pop
cld
mov
and
jno
sub
das
dec
xchg
imulb
sub
decl
push
and
pop
jp
ret
pop
jb
push
sahf
push
pop
int3
pop
pop
jno
mov
std
pushl
cmp
cld
ret
int
lret
je
pop
xchg
in
cltd
out
mov
jg
add
mov
mov
cmpsl
adc
incl
push
test
xor
push
jae
pop
pop
pop
movsl
cmp
or
xchg
cmp
sbb
push
pushl
or
insl
movsl
insl
push
lds
inc
dec
ljmp
dec
pop
sbb
les
add
sub
push
rorb
mov
sub
jne
mov
loopne
push
add
mov
jmp
out
push
rorl
cmp
cmp
or
clc
js
dec
mov
jmp
and
pop
inc
dec
adc
mov
insb
decl
sbb
ret
sbb
movswl
cmp
mov
or
ja
cld
imul
inc
mov
and
dec
stos
mov
lret
sub
jmp
jge
sbb
stc
xor
lods
mov
pop
mov
jmp
mov
scas
lock
mov
add
lcall
call
fists
sub
ljmp
inc
or
dec
test
sbbb
in
bound
add
cmp
cltd
cmpsb
mov
loopne
push
pop
mov
ja
test
dec
sar
lret
repnz
lock
stos
les
incl
xchg
add
mov
dec
adc
mov
jge
fidivs
dec
test
arpl
std
pushl
stc
add
mov
out
or
jcxz
es
jo
pop
movsl
jb
xor
mov
lcall
cmp
cmp
loopne
cmpb
mov
jl
incl
call
repz
je
mov
jge
mov
lods
mov
dec
paddusb
dec
hlt
stos
lds
jmp
pop
cmp
movsl
lock
jae
dec
push
decb
data16
jp
xor
jnp
inc
or
or
cwtl
outsb
sti
les
or
lret
and
push
clc
sub
adc
push
mov
call
pop
mov
nop
adc
inc
mov
jae
jno
lcall
fdivrl
in
stc
out
cmc
rol
pusha
xchg
cmp
cmp
adc
jl
mov
xchg
dec
inc
push
mov
and
sub
sbb
into
ds
jecxz
decl
xor
mov
jne
jnp
test
pop
ljmp
pusha
dec
jb
scas
jb
inc
cltd
mov
lret
lods
jecxz
jb
out
cli
add
ljmp
dec
sbb
cmp
mov
insl
mov
mov
xor
pop
cmpsb
inc
mov
pop
pop
sbb
lock
cmpsl
push
adcb
jg
cmp
sub
mov
in
mov
movsb
lahf
psrad
xor
loop
ljmp
dec
leave
movb
ret
test
cs
cmp
mov
ds
dec
jnp
push
mov
dec
and
cwtl
sub
or
pop
fildll
ffreep
shrl
cli
scas
fldl
jno
jo
push
cmpsl
or
mov
fwait
incb
xorb
ljmp
iret
es
cmc
sub
imul
aas
cli
insl
roll
mov
mov
fcoms
popa
stos
data16
mov
or
push
xor
rclb
pop
mov
ljmp
jne
cmp
sbb
das
rclb
sbb
or
dec
dec
xchg
cld
jg
aad
jnp
cmp
jno
int
sbb
or
call
rcll
dec
das
add
push
mov
dec
sbb
call
fs
test
inc
test
ja
jmp
push
stc
testb
add
dec
and
loop
mov
jmp
subb
xchg
sbb
decl
mov
das
addr16
lods
push
mov
iret
jbe
icebp
addr16
push
icebp
std
sub
xchg
lea
lret
incb
push
push
fsubr
pop
fsubrp
mov
jmp
mov
push
xor
dec
data16
pmulhuw
and
cld
adc
xlat
xor
lcall
mov
cmc
mov
or
pop
sbb
adc
data16
pop
hlt
xchg
sub
leave
xchg
jle
shufps
outsl
mov
arpl
ljmp
movsb
pusha
xchg
jecxz
jg
pop
in
push
and
and
orl
ljmp
push
stos
sbb
sub
rcrl
push
jg
int
cmc
hlt
fwait
mov
and
cli
mov
test
movsl
stc
jb
fistps
xchg
rorl
cmp
test
sar
xchg
repz
call
and
sub
js
push
dec
lret
jecxz
aad
mov
std
enter
adc
mov
lea
sbb
shll
into
cmp
repnz
mov
pop
jp
in
push
cs
fwait
cmpsl
add
mov
xchg
test
or
cmc
daa
aad
out
adc
jmp
dec
dec
mov
lods
movl
xor
mov
setne
std
imul
rcl
nop
in
push
jg
or
jmp
push
stos
lods
insl
aam
push
mov
test
xchg
sub
lds
inc
add
mov
xor
cwtl
shll
mov
pop
mov
loopne
mov
pop
fs
mov
lds
sbb
adc
insb
mov
aaa
pop
push
or
cli
call
cmpsb
cmp
mov
ljmp
jbe
rol
std
lcall
cli
ljmp
pop
adc
pop
repz
push
ja
sbb
cmpsb
mov
push
ret
jno
icebp
ljmp
push
in
or
movsb
out
orl
xor
sub
xor
sub
dec
shrl
imul
je
adcl
mov
insb
scas
leave
and
std
std
sahf
in
dec
mov
or
mov
and
sahf
stos
iret
sar
das
pop
into
out
or
cmp
flds
inc
loope
dec
lods
mov
xchg
mov
and
decl
cmp
or
sub
roll
pop
dec
les
shrl
cmpsl
dec
pushl
rol
add
mov
mov
mov
pop
dec
mov
fidivs
add
sbb
ror
cld
call
lods
lods
cltd
test
lahf
test
add
mov
dec
add
int
mov
aad
ja
xchg
subl
xchg
dec
lods
shll
aad
push
xchg
and
icebp
pusha
mov
movsl
mov
insb
gs
mov
mov
rcl
sub
and
push
or
add
test
xchg
push
int
mov
negb
add
add
addr16
ljmp
gs
imul
sti
fisttpl
hlt
jo
aam
decl
dec
push
pusha
pushf
or
movsl
pusha
push
xchg
mov
xor
sbb
arpl
mov
in
sub
fists
out
mov
pop
repz
test
mov
clc
or
rolb
push
xchg
inc
in
imul
daa
pop
pop
std
pop
std
push
xor
je
dec
in
push
lods
mov
fincstp
xchg
and
repz
fwait
ret
ljmp
mov
adc
test
add
mov
pop
or
cmpsl
mov
out
shl
fisubs
movsb
mov
test
lcall
push
rcll
ss
data16
outsl
mov
sbb
push
sub
sti
incl
sbb
aaa
mov
hlt
cli
cmp
outsl
inc
pop
cmp
sti
and
ljmp
out
fdivrl
and
mov
adc
inc
inc
and
mov
in
mov
pop
stos
aad
in
and
out
inc
sbb
arpl
lcall
inc
dec
mov
enter
cwtl
stos
dec
xor
or
inc
loop
cwtl
fucomip
arpl
filds
adc
cld
rclb
aas
xorl
aaa
out
out
lret
aas
dec
xchg
mov
into
imul
mov
pop
out
add
decl
stos
mov
je
stc
adc
pop
in
in
and
or
sbb
mov
lea
add
fwait
xor
jmp
ret
movsb
push
mov
sub
loop
std
ret
roll
pushl
or
test
scas
xor
lea
jae
cmpsb
adc
fst
xor
mov
cmp
out
add
cmp
dec
stos
ljmp
mov
loop
clc
xchg
inc
mov
xchg
jb
jno
dec
out
xchg
sbb
pushf
or
jae
test
inc
mov
mov
jne
aas
or
shl
ljmp
nop
test
cli
jecxz
xlat
mov
push
jne
push
mov
cs
decl
shlb
inc
loop
add
sti
ljmp
mov
ds
cmp
pop
pop
je
sbb
pop
and
lods
pop
cs
repnz
js
mov
dec
cltd
fwait
push
push
rclb
cmpsl
mov
xchg
jnp
pop
fsts
outsb
mov
cld
in
jecxz
dec
adc
shlb
dec
jg
cld
xchg
es
adc
shll
add
pop
cmp
in
jg
or
fisubs
js
jmp
dec
or
call
mov
sbb
cmpsl
rcll
and
in
jmp
repz
xor
int
xchg
dec
gs
decl
ret
inc
push
xlat
xchg
add
inc
sbb
cmpsb
pop
xchg
pop
cld
sub
push
sub
popa
sar
xchg
xor
sahf
lods
leave
fistps
inc
outsb
sbb
xchg
les
jp
mov
mul
daa
imul
jno
daa
dec
dec
test
ljmp
hlt
ffree
inc
jbe
jno
cmp
cli
add
mov
ljmp
sub
fmulp
push
pop
imul
cmp
out
sub
movsb
xchg
jmp
inc
rcll
xchg
lods
mov
cld
dec
lret
xchg
push
rorb
in
add
outsl
dec
popl
insl
sbb
int
cmp
push
loopne
mov
push
or
lcall
mov
aas
in
mov
fiaddl
outsl
xchg
dec
leave
dec
cmp
dec
jl
dec
lret
daa
and
pop
into
xorl
or
das
in
lcall
subl
inc
inc
stos
pop
jnp
push
cld
scas
xchg
in
cld
sahf
xchg
outsb
pop
add
call
cli
sub
push
sahf
test
inc
ds
popf
adc
mov
push
lods
stos
mov
lret
inc
out
adc
adc
int
sbb
dec
xor
daa
sub
push
xchg
mov
data16
fildl
test
push
mov
ljmp
cmp
xchg
jg
imul
sbb
std
cmp
in
pop
pop
and
clc
push
xor
lcall
dec
or
rcrb
adc
sar
mov
mov
sahf
mov
rcrb
mov
jp
daa
test
dec
ja
jb
add
cmp
test
decl
lret
aas
pop
imul
test
push
xor
fwait
or
sahf
scas
sbb
call
sbb
push
mov
add
loopne
jge
mov
push
mov
pop
gs
xchg
data16
mov
jno
mov
pop
ss
jmp
mov
sahf
aas
cmp
jecxz
xchg
dec
sub
int3
sub
int
je
xchg
xchg
pop
sbb
call
jp
rclb
adc
adc
mov
mov
clc
jecxz
xchg
icebp
stos
pushl
push
inc
aaa
dec
push
stos
lcall
pop
sub
test
bound
stos
cld
mov
mov
mov
and
mov
inc
orb
les
sahf
push
repnz
cli
jae
or
or
pop
scas
out
sbb
mov
mov
lcall
mov
mov
add
push
dec
mov
pop
sbb
fnsave
inc
adc
lock
mov
lret
xor
sbb
lret
rolb
int
fdivp
cmp
aad
cmp
mov
jne
mov
cld
ss
std
pop
lret
loop
fnstsw
jmp
popf
ja
xor
cld
test
pop
mov
mov
movsl
ljmp
aas
jo
das
sar
mov
movb
xchg
sub
lods
mov
mov
dec
mov
jnp
out
cmp
dec
aad
fisttps
pop
ja
inc
fiaddl
pop
shl
adc
inc
xor
xchg
incl
test
out
in
cs
xchg
aad
and
and
sub
hlt
xor
xor
adc
clc
incl
and
movsb
gs
mov
dec
sub
jbe
outsb
in
inc
push
or
mov
lds
and
ss
pop
in
add
out
pushf
jmp
fstpt
adc
jnp
sbbl
xchg
dec
inc
test
decl
sub
or
pop
jbe
sub
mov
outsb
mov
mov
push
mov
push
fistpl
and
decl
pop
shll
add
scas
push
lock
mov
sub
pop
add
mov
stos
cmpsb
clc
pop
push
sahf
mov
jle
bound
add
push
pop
sar
lcall
int
cmp
lea
cltd
sub
jae
or
sti
sub
call
jae
pop
shl
adc
iret
mov
call
out
and
xor
pop
sub
incl
decl
mov
into
xor
dec
lret
or
mov
push
pushl
pop
sbb
jg
cmpb
jle
push
cmp
stos
mov
aaa
xor
jp
cmp
lret
fwait
insb
es
push
jl
sbb
js
rcrl
push
pop
jnp
mov
sbb
incl
fcomp
mov
es
sub
fs
or
xchg
pop
pop
inc
inc
shl
inc
pop
lcall
cmc
mov
xchg
push
lahf
sbb
adc
test
cmp
lcall
pop
or
mov
cmc
ss
and
jg
adcb
es
cmpsl
jo
dec
gs
punpcklbw
push
iret
ljmp
adcb
or
add
xor
inc
repnz
jmp
cmp
add
test
shll
pop
enter
xchg
stc
sbb
fistpl
lcall
jmp
add
push
ds
or
pop
out
call
push
ds
push
xor
decl
dec
sti
cvtdq2ps
lea
call
xchg
inc
out
pop
xor
adc
sahf
sub
pushl
xchg
inc
jb
jg
jp
or
int
cld
add
cli
jo
mov
xor
loopne
mov
push
inc
cmp
addr16
call
push
xor
stc
sub
push
add
xor
mov
jmp
push
adc
adc
sub
or
sub
push
std
insb
push
dec
aas
pushf
ljmp
cltd
sbb
loope
ret
inc
fldt
push
jne
push
add
outsl
aad
and
pop
mov
or
inc
sbb
mov
cmp
fnstenv
push
fcomip
xor
dec
movsb
bound
adc
xor
pop
cmp
scas
adc
dec
mov
jge
and
movsb
roll
push
cwtl
ljmp
sub
lds
fmull
sbb
mov
ljmp
inc
xchg
stos
pop
jge
cld
mov
neg
cmc
jp
jmp
cs
call
cld
arpl
testl
inc
movsb
jmp
ret
fnstcw
push
pop
sbb
mov
push
ficomps
xchg
push
inc
inc
or
xor
lcall
xor
jl
les
filds
mov
sbb
pop
call
mov
loop
into
arpl
jbe
les
and
ret
lcall
bound
mov
mov
or
pop
add
loope
shl
sarl
xor
stc
mov
js
popa
cmp
pop
xchg
test
adc
es
imul
into
es
inc
push
popf
int
lods
xchg
jb
mov
jp
mov
daa
and
outsl
push
or
das
rcpps
lock
mov
add
mov
cmpsl
lods
adc
push
into
pop
incb
repnz
cmc
or
cwtl
push
mov
cs
daa
pop
andl
mov
push
mov
mov
sub
clc
push
inc
shl
sbb
add
andl
cmp
push
pushl
jo
int
in
ljmp
sub
cli
aad
sub
pushf
nop
gs
jp
adc
jbe
or
mov
pop
movsb
cmp
adc
cmp
insb
stos
xchg
js
cwtl
inc
sahf
mov
xchg
pop
insb
sbb
mov
aam
aas
jb
out
pop
rcrb
adc
call
adc
stc
inc
pop
mov
mov
xchg
cmpsl
mov
and
sbb
pop
mov
cmp
les
adc
cmp
mov
lods
push
cmp
enter
push
test
mov
pushl
lds
mov
cli
gs
cmp
xchg
shll
adc
cmp
repnz
call
loopne
add
shrl
pop
stos
nop
pop
mov
mov
imul
sub
decl
mov
jno
movsb
aaa
xor
ret
cmp
lcall
xchg
insl
in
xchg
ret
jmp
push
scas
jle
cmp
xchg
jmp
or
xorb
ret
lock
cmc
cmpsb
ffree
sbbl
adc
push
ret
fwait
lcall
fldenv
xchg
in
repz
test
mov
add
xor
lcall
inc
sub
es
testb
pop
xlat
push
mov
pop
and
mov
cwtl
mov
pushl
jmp
les
mov
and
jmp
popa
add
mov
shll
call
push
pusha
in
insl
test
dec
mov
popf
js
pop
pop
andb
sarb
repnz
and
mov
es
mov
enter
cld
incl
out
out
and
cltd
enter
ret
pop
jmp
jg
or
sub
iret
or
xchg
std
pusha
add
pop
or
fwait
lea
fwait
jnp
sub
call
cmp
and
pusha
lods
stc
or
adc
dec
cmp
sbb
pop
clc
ljmp
cld
incl
addr16
mov
xchg
movsb
mov
pushf
adc
mov
sub
call
add
sub
fwait
movntq
cmpsb
sub
clc
lcall
mov
cltd
xchg
es
and
mov
fcoms
jg
mov
xchg
jmp
pop
inc
loop
scas
cmp
and
clc
int3
mov
mov
fidivrl
and
xchg
sbb
repz
call
mov
or
movsb
xor
mov
pop
add
sub
adc
imul
movl
cmp
mov
cltd
sbb
nop
dec
stos
jae
adc
repnz
jb
sar
call
pop
cltd
mov
push
pop
ss
sub
lcall
dec
mov
mov
rclb
punpckldq
xor
inc
sub
hlt
ljmp
sti
test
mov
dec
rcl
mov
pop
loopne
mov
popa
pop
jmp
xor
movsl
cmp
dec
inc
scas
mov
and
cmp
sub
and
push
cmpsb
or
adc
or
adc
adc
mov
and
pushl
je
cmp
add
jb
jne
insb
push
jb
je
arpl
mov
mov
push
jne
jb
push
push
outsw
jb
popa
outsb
arpl
outsl
jne
ss
idivb
push
push
je
inc
imul
sbb
gs
data16
fldt
jbe
pop
xor
adc
inc
gs
mov
lods
frstor
jbe
outsb
inc
push
inc
je
sub
je
int3
out
xor
jae
inc
fs
mov
cs
aas
rcrl
fs
jae
inc
dec
outsl
mov
shrb
bound
outsb
inc
pop
pop
mov
sbb
imul
nop
push
jns
adc
imul
ret
adc
mov
jle
pop
andb
int3
mov
cli
insb
cs
jo
cli
xor
inc
sub
adc
mov
adc
sbb
or
ret
sbb
stos
inc
cltd
sub
aas
movsl
xchg
gs
inc
subb
or
jns
push
adc
ja
push
add
add
sbb
adc
mov
and
subb
inc
mov
xchg
repz
and
es
push
push
pop
xlat
notl
inc
add
aad
stos
arpl
shll
push
sbb
nop
andb
mov
ud2
sbb
sbb
push
add
sbb
add
and
pop
jae
and
test
inc
mov
fwait
ret
add
push
adc
mov
adc
add
mov
mov
imul
add
imul
sbb
adc
test
call
imul
pop
fs
push
loop
in
dec
fs
push
jb
outsb
jae
xchg
dec
insb
les
xor
and
add
mov
adc
mov
inc
mov
sbb
cmp
adc
add
mov
inc
aas
or
dec
inc
adc
lret
sti
sub
pop
xchg
xlat
ret
cmp
inc
stos
push
imul
push
add
and
and
inc
test
adc
mov
sbb
add
and
push
push
jecxz
xor
inc
pop
cmp
inc
pop
adc
andb
aas
call
adc
jg
xor
push
pop
xchg
and
sub
repz
push
test
or
sbb
test
jmp
adc
roll
push
push
and
or
inc
and
and
inc
sbb
xchg
adc
mov
adc
or
xor
pop
push
push
and
pop
jo
sbb
add
or
mov
sbb
lea
mov
push
daa
push
cmpsb
test
outsl
add
push
dec
add
lcall
insb
mov
sub
loopne
popl
add
lods
cmp
incb
pop
nop/reserved
aas
data16
lea
mov
sub
cmpsl
in
js
add
outsb
ret
add
and
mov
xor
dec
xor
dec
and
sti
sahf
add
mov
mov
xchg
push
nop
xor
leave
shrl
jle
rorb
fistps
rorb
push
xor
sub
insb
cmp
adc
push
xor
add
fs
inc
push
add
sbb
je
jae
dec
mov
vmovhps
lcall
xchg
test
sub
add
xchg
and
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
addb
add
add
add
add
add
add
or
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
addb
add
cmp
add
pusha
add
orb
add
mov
add
mov
add
add
add
add
add
add
add
add
add
mov
add
fcoml
add
pop
add
in
add
add
add
add
add
add
add
mov
add
rcrb
loopne
add
in
add
add
add
add
add
add
add
fadds
add
movsb
popa
aas
add
pop
add
in
add
add
add
add
add
add
add
add
add
mov
add
pop
add
in
add
add
add
add
add
add
add
sub
add
insb
jno
add
pop
add
in
add
add
add
add
add
add
add
push
add
add
aas
add
pop
add
in
add
add
add
add
add
add
add
js
add
xor
aas
add
pop
add
in
add
add
add
add
add
add
add
mov
mov
add
pop
add
in
add
add
add
add
add
add
add
enter
cld
nop
aas
add
pop
add
in
add
add
add
fcom
add
fisubrs
loope
cmpl
jae
adc
mov
stc
dec
cmp
out
in
mov
cmpsb
and
das
inc
xchg
cmpsb
js
xlat
adc
out
pop
movsb
xor
sti
inc
jg
mov
stos
xchg
aam
cs
jb
test
rorl
lcall
std
lock
shll
mov
mulb
rcl
mov
sub
sbb
cmpsb
xor
insb
test
jne
push
repz
mov
inc
add
scas
mov
cmp
mov
imul
mov
mov
cwtl
ljmp
mov
int3
aas
lods
js
mov
fdivrl
pop
sarb
sbb
xlat
sub
subl
shll
jp
andl
jecxz
dec
sbb
dec
push
mov
lods
xchg
dec
xchg
mov
adc
and
jl
mov
sti
or
ss
sbb
and
mov
sar
int
gs
nop
fisttps
lods
sub
test
psubusb
adc
cld
or
jbe
dec
mov
xchg
in
xlat
push
push
sbb
sub
cmc
xchg
mov
xchg
push
push
cwtl
add
fwait
xor
jle
fimull
and
adc
xchg
push
call
cmp
inc
data16
flds
cmpsb
scas
cs
mov
adc
subb
fidivs
test
dec
xchg
rcr
js
lods
xchg
push
cmp
pop
cmc
jle
pop
mov
cmc
sub
loope
jmp
out
js
flds
inc
add
adc
mov
sub
jnp
sbb
mov
or
fdiv
lret
xor
xor
into
or
and
mov
xchg
leave
sub
inc
push
bound
insl
add
sbb
loopne
jno
add
test
and
or
cmp
pop
mov
xchg
je
lods
testl
sbb
cmc
dec
xor
imul
xor
mov
adc
and
pop
cli
push
add
dec
jg
adc
inc
jnp
and
notl
in
and
adc
sub
icebp
sub
add
aaa
stos
jnp
sub
jl
enter
cwtl
movb
std
scas
aad
xchg
cmovs
mov
xchg
out
adc
pushf
cmc
icebp
xlat
xlat
push
inc
dec
adc
repz
aaa
cmp
mov
pop
xor
repz
jp
dec
jne
scas
in
movsb
arpl
jmp
xchg
xchg
in
stc
cmpsl
pop
sbbl
and
sbb
xor
jb
insl
mov
std
aaa
xor
cs
imul
out
dec
push
pusha
ja
adcb
jne
fwait
pslld
push
scas
push
xchg
pushf
cltd
inc
or
lahf
dec
mov
mov
inc
mov
rcll
fidivrl
cmpsl
sub
mov
addr16
push
xchg
add
cmp
jecxz
in
ss
jb
dec
pop
mov
bound
xchg
cmpsl
cmp
out
jge
or
and
dec
push
imul
push
call
sub
mov
lret
fnstcw
fistl
mov
loopne
pushf
sbb
in
jl
fcoms
and
dec
movsl
popa
jge
push
pop
mov
pop
push
cmp
dec
clc
in
clc
out
dec
jp,pt
shl
nop
adc
sub
xchg
fldcw
pop
popf
leave
inc
cltd
pop
pop
lock
push
arpl
sub
loope
and
cmp
jne
fnstsw
adc
outsl
cmpsb
or
sbb
sarl
in
stos
and
movsl
jg
daa
mov
pop
lods
push
xlat
xchg
and
push
arpl
xor
sbb
mov
lods
scas
bound
sub
ljmp
daa
jne
mov
daa
dec
movsl
jmp
push
iret
loope
out
mov
jnp
repz
push
cmpsb
mov
stos
dec
adc
les
cmp
sbb
cmc
push
mul
mov
mov
loop
push
mov
shrb
es
mov
repz
push
sbb
xchg
sti
sahf
dec
push
or
xor
cmp
clc
int
outsl
lods
mov
lods
cmp
pusha
std
jno
loope
negl
jnp
adc
fwait
mov
insb
scas
xchg
imul
push
fmuls
mov
mov
mov
add
dec
lahf
movsb
rol
cs
adc
sti
or
sti
and
sahf
fstpt
loopne
xor
xorb
sub
xchg
xchg
mov
stos
mov
imul
dec
inc
mov
cmp
sub
mov
scas
fnstsw
mov
jbe
nop
aas
scas
xor
popf
mov
pusha
dec
fs
pop
test
mov
orb
sub
sub
lods
jne
lods
lds
nop
movsb
and
push
mov
es
jle
adc
sub
jb
test
or
mov
xchg
xchg
xor
cmp
test
leave
cli
jecxz
xchg
add
mov
jmp
das
jge
out
aaa
or
jg
or
xlat
ds
int
cwtl
cmp
cwtl
pop
pushf
add
int3
add
inc
mov
ret
mov
out
sbb
xorl
leave
push
push
icebp
jl
mov
dec
bound
out
shl
insl
sahf
ljmp
or
inc
icebp
idiv
jecxz
cld
dec
mov
fldt
mov
ret
imul
stos
push
mov
popf
int
cmpsb
test
notl
push
int3
jmp
xchg
or
mov
push
pop
testb
pop
mov
pop
xchg
cs
clc
mov
cltd
adc
into
adc
out
dec
jle
aas
es
or
pop
fcmovb
std
inc
adc
dec
dec
mov
rolb
pop
jecxz
and
cmp
mov
and
pop
ss
fs
daa
jno
jl
stc
xlat
sbb
jns
sti
in
jb
add
iret
adc
jmp
stos
sarb
int3
jae
mov
and
pop
std
jns
sbb
or
push
sbb
ss
sub
sbb
push
outsb
push
xchg
jne
sbb
cmp
jecxz
mov
xchg
icebp
adc
mov
popa
inc
dec
mov
rorb
add
sub
das
mov
add
push
cmp
adc
jmp
popa
or
sub
jmp
into
mov
stos
subl
es
adc
adc
mov
test
bound
mov
and
mov
mov
ficoml
pop
test
xlat
cmp
pop
xchg
fwait
sahf
je
stc
inc
test
mov
cmpsl
pop
lock
xchg
test
test
push
pushf
jge
rcrb
into
xchg
inc
aad
mov
or
push
outsb
mov
outsl
xchg
jge
lods
adc
test
in
push
push
fisubrs
loope
cmpl
jae
adc
mov
stc
dec
cmp
out
in
mov
cmpsb
and
das
inc
xchg
cmpsb
js
xlat
adc
out
pop
movsb
xor
sti
inc
jg
mov
stos
xchg
aam
cs
jb
test
rorl
lcall
std
lock
shll
mov
mulb
rcl
mov
sub
sbb
cmpsb
xor
insb
test
jne
push
repz
mov
inc
add
scas
mov
cmp
mov
imul
mov
mov
cwtl
ljmp
mov
int3
aas
lods
js
mov
fdivrl
pop
sarb
sbb
xlat
sub
subl
shll
jp
andl
jecxz
dec
sbb
dec
push
mov
lods
xchg
dec
xchg
mov
adc
and
jl
mov
sti
or
ss
sbb
and
mov
sar
int
gs
nop
fisttps
lods
sub
test
psubusb
adc
cld
or
jbe
dec
mov
xchg
in
xlat
push
push
sbb
sub
cmc
xchg
mov
xchg
push
push
cwtl
add
fwait
xor
jle
fimull
and
adc
xchg
push
call
cmp
inc
data16
flds
cmpsb
scas
cs
mov
adc
subb
fidivs
test
dec
xchg
rcr
js
lods
xchg
push
cmp
pop
cmc
jle
pop
mov
cmc
sub
loope
jmp
out
js
flds
inc
add
adc
mov
sub
jnp
sbb
mov
or
fdiv
lret
xor
xor
into
or
and
mov
xchg
leave
sub
inc
push
bound
insl
add
sbb
loopne
jno
add
test
and
or
cmp
pop
mov
xchg
je
lods
testl
sbb
cmc
dec
xor
imul
xor
mov
adc
and
pop
cli
push
add
dec
jg
adc
inc
jnp
and
notl
in
and
adc
sub
icebp
sub
add
aaa
stos
jnp
sub
jl
enter
cwtl
movb
std
scas
aad
xchg
cmovs
mov
xchg
out
adc
pushf
cmc
icebp
xlat
xlat
push
inc
dec
adc
repz
aaa
cmp
mov
pop
xor
repz
jp
dec
jne
scas
in
movsb
arpl
jmp
xchg
xchg
in
stc
cmpsl
pop
sbbl
and
sbb
xor
jb
insl
mov
std
aaa
xor
cs
imul
out
dec
push
pusha
ja
adcb
jne
fwait
pslld
push
scas
push
xchg
pushf
cltd
inc
or
lahf
dec
mov
mov
inc
mov
rcll
fidivrl
cmpsl
sub
mov
addr16
push
xchg
add
cmp
jecxz
in
ss
jb
dec
pop
mov
bound
xchg
cmpsl
cmp
out
jge
or
and
dec
push
imul
push
call
sub
mov
lret
fnstcw
fistl
mov
loopne
pushf
sbb
in
jl
fcoms
and
dec
movsl
popa
jge
push
pop
mov
pop
push
cmp
dec
clc
in
clc
out
dec
jp,pt
shl
nop
adc
sub
xchg
fldcw
pop
popf
leave
inc
cltd
pop
pop
lock
push
arpl
sub
loope
and
cmp
jne
fnstsw
adc
outsl
cmpsb
or
sbb
sarl
in
stos
and
movsl
jg
daa
mov
pop
lods
push
xlat
xchg
and
push
arpl
xor
sbb
mov
lods
scas
bound
sub
ljmp
daa
jne
mov
daa
dec
movsl
jmp
push
iret
loope
out
mov
jnp
repz
push
cmpsb
mov
stos
dec
adc
les
cmp
sbb
cmc
push
mul
mov
mov
loop
push
mov
shrb
es
mov
repz
push
sbb
xchg
sti
sahf
dec
push
or
xor
cmp
clc
int
outsl
lods
mov
lods
cmp
pusha
std
jno
loope
negl
jnp
adc
fwait
mov
insb
scas
xchg
imul
push
fmuls
mov
mov
mov
add
dec
lahf
movsb
rol
cs
adc
sti
or
sti
and
sahf
fstpt
loopne
xor
xorb
sub
xchg
xchg
mov
stos
mov
imul
dec
inc
mov
cmp
sub
mov
scas
fnstsw
mov
jbe
nop
aas
scas
xor
popf
mov
pusha
dec
fs
pop
test
mov
orb
sub
sub
lods
jne
lods
lds
nop
movsb
and
push
mov
es
jle
adc
sub
jb
test
or
mov
xchg
xchg
xor
cmp
test
leave
cli
jecxz
xchg
add
mov
jmp
das
jge
out
aaa
or
jg
or
xlat
ds
int
cwtl
cmp
cwtl
pop
pushf
add
int3
add
inc
mov
ret
mov
out
sbb
xorl
leave
push
push
icebp
jl
mov
dec
bound
out
shl
insl
sahf
ljmp
or
inc
icebp
idiv
jecxz
cld
dec
mov
fldt
mov
ret
imul
stos
push
mov
popf
int
cmpsb
test
notl
push
int3
jmp
xchg
or
mov
push
pop
testb
pop
mov
pop
xchg
cs
clc
mov
cltd
adc
into
adc
out
dec
jle
aas
es
or
pop
fcmovb
std
inc
adc
dec
dec
mov
rolb
pop
jecxz
and
cmp
mov
and
pop
ss
fs
daa
jno
jl
stc
xlat
sbb
jns
sti
in
jb
add
iret
adc
jmp
stos
sarb
int3
jae
mov
and
pop
std
jns
sbb
or
push
sbb
ss
sub
sbb
push
outsb
push
xchg
jne
sbb
cmp
jecxz
mov
xchg
icebp
adc
mov
popa
inc
dec
mov
rorb
add
sub
das
mov
add
push
cmp
adc
jmp
popa
or
sub
jmp
into
mov
stos
subl
es
adc
adc
mov
test
bound
mov
and
mov
mov
ficoml
pop
test
xlat
cmp
pop
xchg
fwait
sahf
je
stc
inc
test
mov
cmpsl
pop
lock
xchg
test
test
push
pushf
jge
rcrb
into
xchg
inc
aad
mov
or
push
outsb
mov
outsl
xchg
jge
lods
adc
test
in
push
push
fisubrs
loope
cmpl
jae
adc
mov
stc
dec
cmp
out
in
mov
cmpsb
and
das
inc
xchg
cmpsb
js
xlat
adc
out
pop
movsb
xor
sti
inc
jg
mov
stos
xchg
aam
cs
jb
test
rorl
lcall
std
lock
shll
mov
mulb
rcl
mov
sub
sbb
cmpsb
xor
insb
test
jne
push
repz
mov
inc
add
scas
mov
cmp
mov
imul
mov
mov
cwtl
ljmp
mov
int3
aas
lods
js
mov
fdivrl
pop
sarb
sbb
xlat
sub
subl
shll
jp
andl
jecxz
dec
sbb
dec
push
mov
lods
xchg
dec
xchg
mov
adc
and
jl
mov
sti
or
ss
sbb
and
mov
sar
int
gs
nop
fisttps
lods
sub
test
psubusb
adc
cld
or
jbe
dec
mov
xchg
in
xlat
push
push
sbb
sub
cmc
xchg
mov
xchg
push
push
cwtl
add
fwait
xor
jle
fimull
and
adc
xchg
push
call
cmp
inc
data16
flds
cmpsb
scas
cs
mov
adc
subb
fidivs
test
dec
xchg
rcr
js
lods
xchg
push
cmp
pop
cmc
jle
pop
mov
cmc
sub
loope
jmp
out
js
flds
inc
add
adc
mov
sub
jnp
sbb
mov
or
fdiv
lret
xor
xor
into
or
and
mov
xchg
leave
sub
inc
push
bound
insl
add
sbb
loopne
jno
add
test
and
or
cmp
pop
mov
xchg
je
lods
testl
sbb
cmc
dec
xor
imul
xor
mov
adc
and
pop
cli
push
add
dec
jg
adc
inc
jnp
and
notl
in
and
adc
sub
icebp
sub
add
aaa
stos
jnp
sub
jl
enter
cwtl
movb
std
scas
aad
xchg
cmovs
mov
xchg
out
adc
pushf
cmc
icebp
xlat
xlat
push
inc
dec
adc
repz
aaa
cmp
mov
pop
xor
repz
jp
dec
jne
scas
in
movsb
arpl
jmp
xchg
xchg
in
stc
cmpsl
pop
sbbl
and
sbb
xor
jb
insl
mov
std
aaa
xor
cs
imul
out
dec
push
pusha
ja
adcb
jne
fwait
pslld
push
scas
push
xchg
pushf
cltd
inc
or
lahf
dec
mov
mov
inc
mov
rcll
fidivrl
cmpsl
sub
mov
addr16
push
xchg
add
cmp
jecxz
in
ss
jb
dec
pop
mov
bound
xchg
cmpsl
cmp
out
jge
or
and
dec
push
imul
push
call
sub
mov
lret
fnstcw
fistl
mov
loopne
pushf
sbb
in
jl
fcoms
and
dec
movsl
popa
jge
push
pop
mov
pop
push
cmp
dec
clc
in
clc
out
dec
jp,pt
shl
nop
adc
sub
xchg
fldcw
pop
popf
leave
inc
cltd
pop
pop
lock
push
arpl
sub
loope
and
cmp
jne
fnstsw
adc
outsl
cmpsb
or
sbb
sarl
in
stos
and
movsl
jg
daa
mov
pop
lods
push
xlat
xchg
and
push
arpl
xor
sbb
mov
lods
scas
bound
sub
ljmp
daa
jne
mov
daa
dec
movsl
jmp
push
iret
loope
out
mov
jnp
repz
push
cmpsb
mov
stos
dec
adc
les
cmp
sbb
cmc
push
mul
mov
mov
loop
push
mov
shrb
es
mov
repz
push
sbb
xchg
sti
sahf
dec
push
or
xor
cmp
clc
int
outsl
lods
mov
lods
cmp
pusha
std
jno
loope
negl
jnp
adc
fwait
mov
insb
scas
xchg
imul
push
fmuls
mov
mov
mov
add
dec
lahf
movsb
rol
cs
adc
sti
or
sti
and
sahf
fstpt
loopne
xor
xorb
sub
xchg
xchg
mov
stos
mov
imul
dec
inc
mov
cmp
sub
mov
scas
fnstsw
mov
jbe
nop
aas
scas
xor
popf
mov
pusha
dec
fs
pop
test
mov
orb
sub
sub
lods
jne
lods
lds
nop
movsb
and
push
mov
es
jle
adc
sub
jb
test
or
mov
xchg
xchg
xor
cmp
test
leave
cli
jecxz
xchg
add
mov
jmp
das
jge
out
aaa
or
jg
or
xlat
ds
int
cwtl
cmp
cwtl
pop
pushf
add
int3
add
inc
mov
ret
mov
out
sbb
xorl
leave
push
push
icebp
jl
mov
dec
bound
out
shl
insl
sahf
ljmp
or
inc
icebp
idiv
jecxz
cld
dec
mov
fldt
mov
ret
imul
stos
push
mov
popf
int
cmpsb
test
notl
push
int3
jmp
xchg
or
mov
push
pop
testb
pop
mov
pop
xchg
cs
clc
mov
cltd
adc
into
adc
out
dec
jle
aas
es
or
pop
fcmovb
std
inc
adc
dec
dec
mov
rolb
pop
jecxz
and
cmp
mov
and
pop
ss
fs
daa
jno
jl
stc
xlat
sbb
jns
sti
in
jb
add
iret
adc
jmp
stos
sarb
int3
jae
mov
and
pop
std
jns
sbb
or
push
sbb
ss
sub
sbb
push
outsb
push
xchg
jne
sbb
cmp
jecxz
mov
xchg
icebp
adc
mov
popa
inc
dec
mov
rorb
add
sub
das
mov
add
push
cmp
adc
jmp
popa
or
sub
jmp
into
mov
stos
subl
es
adc
adc
mov
test
bound
mov
and
mov
mov
ficoml
pop
test
xlat
cmp
pop
xchg
fwait
sahf
je
stc
inc
test
mov
cmpsl
pop
lock
xchg
test
test
push
pushf
jge
rcrb
into
xchg
inc
aad
mov
or
push
outsb
mov
outsl
xchg
jge
lods
adc
test
add
fisubrs
loope
cmpl
jae
adc
mov
stc
dec
cmp
out
in
mov
cmpsb
and
das
inc
xchg
cmpsb
js
xlat
adc
out
pop
movsb
xor
sti
inc
jg
mov
stos
xchg
aam
cs
jb
test
rorl
lcall
std
lock
shll
mov
mulb
rcl
mov
sub
sbb
cmpsb
xor
insb
test
jne
push
repz
mov
inc
add
scas
mov
cmp
mov
imul
mov
mov
cwtl
ljmp
mov
int3
aas
lods
js
mov
fdivrl
pop
sarb
sbb
xlat
sub
subl
shll
jp
andl
jecxz
dec
sbb
dec
push
mov
lods
xchg
dec
xchg
mov
adc
and
jl
mov
sti
or
ss
sbb
and
mov
sar
int
gs
nop
fisttps
lods
sub
test
psubusb
adc
cld
or
jbe
dec
mov
xchg
in
xlat
push
push
sbb
sub
cmc
xchg
mov
xchg
push
push
cwtl
add
fwait
xor
jle
fimull
and
adc
xchg
push
call
cmp
inc
data16
flds
cmpsb
scas
cs
mov
adc
subb
fidivs
test
dec
xchg
rcr
js
lods
xchg
push
cmp
pop
cmc
jle
pop
mov
cmc
sub
loope
jmp
out
js
flds
inc
add
adc
mov
sub
jnp
sbb
mov
or
fdiv
lret
xor
xor
into
or
and
mov
xchg
leave
sub
inc
push
bound
insl
add
sbb
loopne
jno
add
test
and
or
cmp
pop
mov
xchg
je
lods
testl
sbb
cmc
dec
xor
imul
xor
mov
adc
and
pop
cli
push
add
dec
jg
adc
inc
jnp
and
notl
in
and
adc
sub
icebp
sub
add
aaa
stos
jnp
sub
jl
enter
cwtl
movb
std
scas
aad
xchg
cmovs
mov
xchg
out
adc
pushf
cmc
icebp
xlat
xlat
push
inc
dec
adc
repz
aaa
cmp
mov
pop
xor
repz
jp
dec
jne
scas
in
movsb
arpl
jmp
xchg
xchg
in
stc
cmpsl
pop
sbbl
and
sbb
xor
jb
insl
mov
std
aaa
xor
cs
imul
out
dec
push
pusha
ja
adcb
jne
fwait
pslld
push
scas
push
xchg
pushf
cltd
inc
or
lahf
dec
mov
mov
inc
mov
rcll
fidivrl
cmpsl
sub
mov
addr16
push
xchg
add
cmp
jecxz
in
ss
jb
dec
pop
mov
bound
xchg
cmpsl
cmp
out
jge
or
and
dec
push
imul
push
call
sub
mov
lret
fnstcw
fistl
mov
loopne
pushf
sbb
in
jl
fcoms
and
dec
movsl
popa
jge
push
pop
mov
pop
push
cmp
dec
clc
in
clc
out
dec
jp,pt
shl
nop
adc
sub
xchg
fldcw
pop
popf
leave
inc
cltd
pop
pop
lock
push
arpl
sub
loope
and
cmp
jne
fnstsw
adc
outsl
cmpsb
or
sbb
sarl
in
stos
and
movsl
jg
daa
mov
pop
lods
push
xlat
xchg
and
push
arpl
xor
sbb
mov
lods
scas
bound
sub
ljmp
daa
jne
mov
daa
dec
movsl
jmp
push
iret
loope
out
mov
jnp
repz
push
cmpsb
mov
stos
dec
adc
les
cmp
sbb
cmc
push
mul
mov
mov
loop
push
mov
shrb
es
mov
repz
push
sbb
xchg
sti
sahf
dec
push
or
xor
cmp
clc
int
outsl
lods
mov
lods
cmp
pusha
std
jno
loope
negl
jnp
adc
fwait
mov
insb
scas
xchg
imul
push
fmuls
mov
mov
mov
add
dec
lahf
movsb
rol
cs
adc
sti
or
sti
and
sahf
fstpt
loopne
xor
xorb
sub
xchg
xchg
mov
stos
mov
imul
dec
inc
mov
cmp
sub
mov
scas
fnstsw
mov
jbe
nop
aas
scas
xor
popf
mov
pusha
dec
fs
pop
test
mov
orb
sub
sub
lods
jne
lods
lds
nop
movsb
and
push
mov
es
jle
adc
sub
jb
test
or
mov
xchg
xchg
xor
cmp
test
leave
cli
jecxz
xchg
add
mov
jmp
das
jge
out
aaa
or
jg
or
xlat
ds
int
cwtl
cmp
cwtl
pop
pushf
add
int3
add
inc
mov
ret
mov
out
sbb
xorl
leave
push
push
icebp
jl
mov
dec
bound
out
shl
insl
sahf
ljmp
or
inc
icebp
idiv
jecxz
cld
dec
mov
fldt
mov
ret
imul
stos
push
mov
popf
int
cmpsb
test
notl
push
int3
jmp
xchg
or
mov
push
pop
testb
pop
mov
pop
xchg
cs
clc
mov
cltd
adc
into
adc
out
dec
jle
aas
es
or
pop
fcmovb
std
inc
adc
dec
dec
mov
rolb
pop
jecxz
and
cmp
mov
and
pop
ss
fs
daa
jno
jl
stc
xlat
sbb
jns
sti
in
jb
add
iret
adc
jmp
stos
sarb
int3
jae
mov
and
pop
std
jns
sbb
or
push
sbb
ss
sub
sbb
push
outsb
push
xchg
jne
sbb
cmp
jecxz
mov
xchg
icebp
adc
mov
popa
inc
dec
mov
rorb
add
sub
das
mov
add
push
cmp
adc
jmp
popa
or
sub
jmp
into
mov
stos
subl
es
adc
adc
mov
test
bound
mov
and
mov
mov
ficoml
pop
test
xlat
cmp
pop
xchg
fwait
sahf
je
stc
inc
test
mov
cmpsl
pop
lock
xchg
test
test
push
pushf
jge
rcrb
into
xchg
inc
aad
mov
or
push
outsb
mov
outsl
xchg
jge
lods
adc
test
add
fisubrs
loope
cmpl
jae
adc
mov
stc
dec
cmp
out
in
mov
cmpsb
and
das
inc
xchg
cmpsb
js
xlat
adc
out
pop
movsb
xor
sti
inc
jg
mov
stos
xchg
aam
cs
jb
test
rorl
lcall
std
lock
shll
mov
mulb
rcl
mov
sub
sbb
cmpsb
xor
insb
test
jne
push
repz
mov
inc
add
scas
mov
cmp
mov
imul
mov
mov
cwtl
ljmp
mov
int3
aas
lods
js
mov
fdivrl
pop
sarb
sbb
xlat
sub
subl
shll
jp
andl
jecxz
dec
sbb
dec
push
mov
lods
xchg
dec
xchg
mov
adc
and
jl
mov
sti
or
ss
sbb
and
mov
sar
int
gs
nop
fisttps
lods
sub
test
psubusb
adc
cld
or
jbe
dec
mov
xchg
in
xlat
push
push
sbb
sub
cmc
xchg
mov
xchg
push
push
cwtl
add
fwait
xor
jle
fimull
and
adc
xchg
push
call
cmp
inc
data16
flds
cmpsb
scas
cs
mov
adc
subb
fidivs
test
dec
xchg
rcr
js
lods
xchg
push
cmp
pop
cmc
jle
pop
mov
cmc
sub
loope
jmp
out
js
flds
inc
add
adc
mov
sub
jnp
sbb
mov
or
fdiv
lret
xor
xor
into
or
and
mov
xchg
leave
sub
inc
push
bound
insl
add
sbb
loopne
jno
add
test
and
or
cmp
pop
mov
xchg
je
lods
testl
sbb
cmc
dec
xor
imul
xor
mov
adc
and
pop
cli
push
add
dec
jg
adc
inc
jnp
and
notl
in
and
adc
sub
icebp
sub
add
aaa
stos
jnp
sub
jl
enter
cwtl
movb
std
scas
aad
xchg
cmovs
mov
xchg
out
adc
pushf
cmc
icebp
xlat
xlat
push
inc
dec
adc
repz
aaa
cmp
mov
pop
xor
repz
jp
dec
jne
scas
in
movsb
arpl
jmp
xchg
xchg
in
stc
cmpsl
pop
sbbl
and
sbb
xor
jb
insl
mov
std
aaa
xor
cs
imul
out
dec
push
pusha
ja
adcb
jne
fwait
pslld
push
scas
push
xchg
pushf
cltd
inc
or
lahf
dec
mov
mov
inc
mov
rcll
fidivrl
cmpsl
sub
mov
addr16
push
xchg
add
cmp
jecxz
in
ss
jb
dec
pop
mov
bound
xchg
cmpsl
cmp
out
jge
or
and
dec
push
imul
push
call
sub
mov
lret
fnstcw
fistl
mov
loopne
pushf
sbb
in
jl
fcoms
and
dec
movsl
popa
jge
push
pop
mov
pop
push
cmp
dec
clc
in
clc
out
dec
jp,pt
shl
nop
adc
sub
xchg
fldcw
pop
popf
leave
inc
cltd
pop
pop
lock
push
arpl
sub
loope
and
cmp
jne
fnstsw
adc
outsl
cmpsb
or
sbb
sarl
in
stos
and
movsl
jg
daa
mov
pop
lods
push
xlat
xchg
and
push
arpl
xor
sbb
mov
lods
scas
bound
sub
ljmp
daa
jne
mov
daa
dec
movsl
jmp
push
iret
loope
out
mov
jnp
repz
push
cmpsb
mov
stos
dec
adc
les
cmp
sbb
cmc
push
mul
mov
mov
loop
push
mov
shrb
es
mov
repz
push
sbb
xchg
sti
sahf
dec
push
or
xor
cmp
clc
int
outsl
lods
mov
lods
cmp
pusha
std
jno
loope
negl
jnp
adc
fwait
mov
insb
scas
xchg
imul
push
fmuls
mov
mov
mov
add
dec
lahf
movsb
rol
cs
adc
sti
or
sti
and
sahf
fstpt
loopne
xor
xorb
sub
xchg
xchg
mov
stos
mov
imul
dec
inc
mov
cmp
sub
mov
scas
fnstsw
mov
jbe
nop
aas
scas
xor
popf
mov
pusha
dec
fs
pop
test
mov
orb
sub
sub
lods
jne
lods
lds
nop
movsb
and
push
mov
es
jle
adc
sub
jb
test
or
mov
xchg
xchg
xor
cmp
test
leave
cli
jecxz
xchg
add
mov
jmp
das
jge
out
aaa
or
jg
or
xlat
ds
int
cwtl
cmp
cwtl
pop
pushf
add
int3
add
inc
mov
ret
mov
out
sbb
xorl
leave
push
push
icebp
jl
mov
dec
bound
out
shl
insl
sahf
ljmp
or
inc
icebp
idiv
jecxz
cld
dec
mov
fldt
mov
ret
imul
stos
push
mov
popf
int
cmpsb
test
notl
push
int3
jmp
xchg
or
mov
push
pop
testb
pop
mov
pop
xchg
cs
clc
mov
cltd
adc
into
adc
out
dec
jle
aas
es
or
pop
fcmovb
std
inc
adc
dec
dec
mov
rolb
pop
jecxz
and
cmp
mov
and
pop
ss
fs
daa
jno
jl
stc
xlat
sbb
jns
sti
in
jb
add
iret
adc
jmp
stos
sarb
int3
jae
mov
and
pop
std
jns
sbb
or
push
sbb
ss
sub
sbb
push
outsb
push
xchg
jne
sbb
cmp
jecxz
mov
xchg
icebp
adc
mov
popa
inc
dec
mov
rorb
add
sub
das
mov
add
push
cmp
adc
jmp
popa
or
sub
jmp
into
mov
stos
subl
es
adc
adc
mov
test
bound
mov
and
mov
mov
ficoml
pop
test
xlat
cmp
pop
xchg
fwait
sahf
je
stc
inc
test
mov
cmpsl
pop
lock
xchg
test
test
push
pushf
jge
rcrb
into
xchg
inc
aad
mov
or
push
outsb
mov
outsl
xchg
jge
lods
adc
test
stc
add
fisubrs
loope
cmpl
jae
adc
mov
stc
dec
cmp
out
in
mov
cmpsb
and
das
inc
xchg
cmpsb
js
xlat
adc
out
pop
movsb
xor
sti
inc
jg
mov
stos
xchg
aam
cs
jb
test
rorl
lcall
std
lock
shll
mov
mulb
rcl
mov
sub
sbb
cmpsb
xor
insb
test
jne
push
repz
mov
inc
add
scas
mov
cmp
mov
imul
mov
mov
cwtl
ljmp
mov
int3
aas
lods
js
mov
fdivrl
pop
sarb
sbb
xlat
sub
subl
shll
jp
andl
jecxz
dec
sbb
dec
push
mov
lods
xchg
dec
xchg
mov
adc
and
jl
mov
sti
or
ss
sbb
and
mov
sar
int
gs
nop
fisttps
lods
sub
test
psubusb
adc
cld
or
jbe
dec
mov
xchg
in
xlat
push
push
sbb
sub
cmc
xchg
mov
xchg
push
push
cwtl
add
fwait
xor
jle
fimull
and
adc
xchg
push
call
cmp
inc
data16
flds
cmpsb
scas
cs
mov
adc
subb
fidivs
test
dec
xchg
rcr
js
lods
xchg
push
cmp
pop
cmc
jle
pop
mov
cmc
sub
loope
jmp
out
js
flds
inc
add
adc
mov
sub
jnp
sbb
mov
or
fdiv
lret
xor
xor
into
or
and
mov
xchg
leave
sub
inc
push
bound
insl
add
sbb
loopne
jno
add
test
and
or
cmp
pop
mov
xchg
je
lods
testl
sbb
cmc
dec
xor
imul
xor
mov
adc
and
pop
cli
push
add
dec
jg
adc
inc
jnp
and
notl
in
and
adc
sub
icebp
sub
add
aaa
stos
jnp
sub
jl
enter
cwtl
movb
std
scas
aad
xchg
cmovs
mov
xchg
out
adc
pushf
cmc
icebp
xlat
xlat
push
inc
dec
adc
repz
aaa
cmp
mov
pop
xor
repz
jp
dec
jne
scas
in
movsb
arpl
jmp
xchg
xchg
in
stc
cmpsl
pop
sbbl
and
sbb
xor
jb
insl
mov
std
aaa
xor
cs
imul
out
dec
push
pusha
ja
adcb
jne
fwait
pslld
push
scas
push
xchg
pushf
cltd
inc
or
lahf
dec
mov
mov
inc
mov
rcll
fidivrl
cmpsl
sub
mov
addr16
push
xchg
add
cmp
jecxz
in
ss
jb
dec
pop
mov
bound
xchg
cmpsl
cmp
out
jge
or
and
dec
push
imul
push
call
sub
mov
lret
fnstcw
fistl
mov
loopne
pushf
sbb
in
jl
fcoms
and
dec
movsl
popa
jge
push
pop
mov
pop
push
cmp
dec
clc
in
clc
out
dec
jp,pt
shl
nop
adc
sub
xchg
fldcw
pop
popf
leave
inc
cltd
pop
pop
lock
push
arpl
sub
loope
and
cmp
jne
fnstsw
adc
outsl
cmpsb
or
sbb
sarl
in
stos
and
movsl
jg
daa
mov
pop
lods
push
xlat
xchg
and
push
arpl
xor
sbb
mov
lods
scas
bound
sub
ljmp
daa
jne
mov
daa
dec
movsl
jmp
push
iret
loope
out
mov
jnp
repz
push
cmpsb
mov
stos
dec
adc
les
cmp
sbb
cmc
push
mul
mov
mov
loop
push
mov
shrb
es
mov
repz
push
sbb
xchg
sti
sahf
dec
push
or
xor
cmp
clc
int
outsl
lods
mov
lods
cmp
pusha
std
jno
loope
negl
jnp
adc
fwait
mov
insb
scas
xchg
imul
push
fmuls
mov
mov
mov
add
dec
lahf
movsb
rol
cs
adc
sti
or
sti
and
sahf
fstpt
loopne
xor
xorb
sub
xchg
xchg
mov
stos
mov
imul
dec
inc
mov
cmp
sub
mov
scas
fnstsw
mov
jbe
nop
aas
scas
xor
popf
mov
pusha
dec
fs
pop
test
mov
orb
sub
sub
lods
jne
lods
lds
nop
movsb
and
push
mov
es
jle
adc
sub
jb
test
or
mov
xchg
xchg
xor
cmp
test
leave
cli
jecxz
xchg
add
mov
jmp
das
jge
out
aaa
or
jg
or
xlat
ds
int
cwtl
cmp
cwtl
pop
pushf
add
int3
add
inc
mov
ret
mov
out
sbb
xorl
leave
push
push
icebp
jl
mov
dec
bound
out
shl
insl
sahf
ljmp
or
inc
icebp
idiv
jecxz
cld
dec
mov
fldt
mov
ret
imul
stos
push
mov
popf
int
cmpsb
test
notl
push
int3
jmp
xchg
or
mov
push
pop
testb
pop
mov
pop
xchg
cs
clc
mov
cltd
adc
into
adc
out
dec
jle
aas
es
or
pop
fcmovb
std
inc
adc
dec
dec
mov
rolb
pop
jecxz
and
cmp
mov
and
pop
ss
fs
daa
jno
jl
stc
xlat
sbb
jns
sti
in
jb
add
iret
adc
jmp
stos
sarb
int3
jae
mov
and
pop
std
jns
sbb
or
push
sbb
ss
sub
sbb
push
outsb
push
xchg
jne
sbb
cmp
jecxz
mov
xchg
icebp
adc
mov
popa
inc
dec
mov
rorb
add
sub
das
mov
add
push
cmp
adc
jmp
popa
or
sub
jmp
into
mov
stos
subl
es
adc
adc
mov
test
bound
mov
and
mov
mov
ficoml
pop
test
xlat
cmp
pop
xchg
fwait
sahf
je
stc
inc
test
mov
cmpsl
pop
lock
xchg
test
test
push
pushf
jge
rcrb
into
xchg
inc
aad
mov
or
push
outsb
mov
outsl
xchg
jge
lods
adc
test
add
add
fisubrs
loope
cmpl
jae
adc
mov
stc
dec
cmp
out
in
mov
cmpsb
and
das
inc
xchg
cmpsb
js
xlat
adc
out
pop
movsb
xor
sti
inc
jg
mov
stos
xchg
aam
cs
jb
test
rorl
lcall
std
lock
shll
mov
mulb
rcl
mov
sub
sbb
cmpsb
xor
insb
test
jne
push
repz
mov
inc
add
scas
mov
cmp
mov
imul
mov
mov
cwtl
ljmp
mov
int3
aas
lods
js
mov
fdivrl
pop
sarb
sbb
xlat
sub
subl
shll
jp
andl
jecxz
dec
sbb
dec
push
mov
lods
xchg
dec
xchg
mov
adc
and
jl
mov
sti
or
ss
sbb
and
mov
sar
int
gs
nop
fisttps
lods
sub
test
psubusb
adc
cld
or
jbe
dec
mov
xchg
in
xlat
push
push
sbb
sub
cmc
xchg
mov
xchg
push
push
cwtl
add
fwait
xor
jle
fimull
and
adc
xchg
push
call
cmp
inc
data16
flds
cmpsb
scas
cs
mov
adc
subb
fidivs
test
dec
xchg
rcr
js
lods
xchg
push
cmp
pop
cmc
jle
pop
mov
cmc
sub
loope
jmp
out
js
flds
inc
add
adc
mov
sub
jnp
sbb
mov
or
fdiv
lret
xor
xor
into
or
and
mov
xchg
leave
sub
inc
push
bound
insl
add
sbb
loopne
jno
add
test
and
or
cmp
pop
mov
xchg
je
lods
testl
sbb
cmc
dec
xor
imul
xor
mov
adc
and
pop
cli
push
add
dec
jg
adc
inc
jnp
and
notl
in
and
adc
sub
icebp
sub
add
aaa
stos
jnp
sub
jl
enter
cwtl
movb
std
scas
aad
xchg
cmovs
mov
xchg
out
adc
pushf
cmc
icebp
xlat
xlat
push
inc
dec
adc
repz
aaa
cmp
mov
pop
xor
repz
jp
dec
jne
scas
in
movsb
arpl
jmp
xchg
xchg
in
stc
cmpsl
pop
sbbl
and
sbb
xor
jb
insl
mov
std
aaa
xor
cs
imul
out
dec
push
pusha
ja
adcb
jne
fwait
pslld
push
scas
push
xchg
pushf
cltd
inc
or
lahf
dec
mov
mov
inc
mov
rcll
fidivrl
cmpsl
sub
mov
addr16
push
xchg
add
cmp
jecxz
in
ss
jb
dec
pop
mov
bound
xchg
cmpsl
cmp
out
jge
or
and
dec
push
imul
push
call
sub
mov
lret
fnstcw
fistl
mov
loopne
pushf
sbb
in
jl
fcoms
and
dec
movsl
popa
jge
push
pop
mov
pop
push
cmp
dec
clc
in
clc
out
dec
jp,pt
shl
nop
adc
sub
xchg
fldcw
pop
popf
leave
inc
cltd
pop
pop
lock
push
arpl
sub
loope
and
cmp
jne
fnstsw
adc
outsl
cmpsb
or
sbb
sarl
in
stos
and
movsl
jg
daa
mov
pop
lods
push
xlat
xchg
and
push
arpl
xor
sbb
mov
lods
scas
bound
sub
ljmp
daa
jne
mov
daa
dec
movsl
jmp
push
iret
loope
out
mov
jnp
repz
push
cmpsb
mov
stos
dec
adc
les
cmp
sbb
cmc
push
mul
mov
mov
loop
push
mov
shrb
es
mov
repz
push
sbb
xchg
sti
sahf
dec
push
or
xor
cmp
clc
int
outsl
lods
mov
lods
cmp
pusha
std
jno
loope
negl
jnp
adc
fwait
mov
insb
scas
xchg
imul
push
fmuls
mov
mov
mov
add
dec
lahf
movsb
rol
cs
adc
sti
or
sti
and
sahf
fstpt
loopne
xor
xorb
sub
xchg
xchg
mov
stos
mov
imul
dec
inc
mov
cmp
sub
mov
scas
fnstsw
mov
jbe
nop
aas
scas
xor
popf
mov
pusha
dec
fs
pop
test
mov
orb
sub
sub
lods
jne
lods
lds
nop
movsb
and
push
mov
es
jle
adc
sub
jb
test
or
mov
xchg
xchg
xor
cmp
test
leave
cli
jecxz
xchg
add
mov
jmp
das
jge
out
aaa
or
jg
or
xlat
ds
int
cwtl
cmp
cwtl
pop
pushf
add
int3
add
inc
mov
ret
mov
out
sbb
xorl
leave
push
push
icebp
jl
mov
dec
bound
out
shl
insl
sahf
ljmp
or
inc
icebp
idiv
jecxz
cld
dec
mov
fldt
mov
ret
imul
stos
push
mov
popf
int
cmpsb
test
notl
push
int3
jmp
xchg
or
mov
push
pop
testb
pop
mov
pop
xchg
cs
clc
mov
cltd
adc
into
adc
out
dec
jle
aas
es
or
pop
fcmovb
std
inc
adc
dec
dec
mov
rolb
pop
jecxz
and
cmp
mov
and
pop
ss
fs
daa
jno
jl
stc
xlat
sbb
jns
sti
in
jb
add
iret
adc
jmp
stos
sarb
int3
jae
mov
and
pop
std
jns
sbb
or
push
sbb
ss
sub
sbb
push
outsb
push
xchg
jne
sbb
cmp
jecxz
mov
xchg
icebp
adc
mov
popa
inc
dec
mov
rorb
add
sub
das
mov
add
push
cmp
adc
jmp
popa
or
sub
jmp
into
mov
stos
subl
es
adc
adc
mov
test
bound
mov
and
mov
mov
ficoml
pop
test
xlat
cmp
pop
xchg
fwait
sahf
je
stc
inc
test
mov
cmpsl
pop
lock
xchg
test
test
push
pushf
jge
rcrb
into
xchg
inc
aad
mov
or
push
outsb
mov
outsl
xchg
jge
lods
adc
test
or
add
fisubrs
loope
cmpl
jae
adc
mov
stc
dec
cmp
out
in
mov
cmpsb
and
das
inc
xchg
cmpsb
js
xlat
adc
out
pop
movsb
xor
sti
inc
jg
mov
stos
xchg
aam
cs
jb
test
rorl
lcall
std
lock
shll
mov
mulb
rcl
mov
sub
sbb
cmpsb
xor
insb
test
jne
push
repz
mov
inc
add
scas
mov
cmp
mov
imul
mov
mov
cwtl
ljmp
mov
int3
aas
lods
js
mov
fdivrl
pop
sarb
sbb
xlat
sub
subl
shll
jp
andl
jecxz
dec
sbb
dec
push
mov
lods
xchg
dec
xchg
mov
adc
and
jl
mov
sti
or
ss
sbb
and
mov
sar
int
gs
nop
fisttps
lods
sub
test
psubusb
adc
cld
or
jbe
dec
mov
xchg
in
xlat
push
push
sbb
sub
cmc
xchg
mov
xchg
push
push
cwtl
add
fwait
xor
jle
fimull
and
adc
xchg
push
call
cmp
inc
data16
flds
cmpsb
scas
cs
mov
adc
subb
fidivs
test
dec
xchg
rcr
js
lods
xchg
push
cmp
pop
cmc
jle
pop
mov
cmc
sub
loope
jmp
out
js
flds
inc
add
adc
mov
sub
jnp
sbb
mov
or
fdiv
lret
xor
xor
into
or
and
mov
xchg
leave
sub
inc
push
bound
insl
add
sbb
loopne
jno
add
test
and
or
cmp
pop
mov
xchg
je
lods
testl
sbb
cmc
dec
xor
imul
xor
mov
adc
and
pop
cli
push
add
dec
jg
adc
inc
jnp
and
notl
in
and
adc
sub
icebp
sub
add
aaa
stos
jnp
sub
jl
enter
cwtl
movb
std
scas
aad
xchg
cmovs
mov
xchg
out
adc
pushf
cmc
icebp
xlat
xlat
push
inc
dec
adc
repz
aaa
cmp
mov
pop
xor
repz
jp
dec
jne
scas
in
movsb
arpl
jmp
xchg
xchg
in
stc
cmpsl
pop
sbbl
and
sbb
xor
jb
insl
mov
std
aaa
xor
cs
imul
out
dec
push
pusha
ja
adcb
jne
fwait
pslld
push
scas
push
xchg
pushf
cltd
inc
or
lahf
dec
mov
mov
inc
mov
rcll
fidivrl
cmpsl
sub
mov
addr16
push
xchg
add
cmp
jecxz
in
ss
jb
dec
pop
mov
bound
xchg
cmpsl
cmp
out
jge
or
and
dec
push
imul
push
call
sub
mov
lret
fnstcw
fistl
mov
loopne
pushf
sbb
in
jl
fcoms
and
dec
movsl
popa
jge
push
pop
mov
pop
push
cmp
dec
clc
in
clc
out
dec
jp,pt
shl
nop
adc
sub
xchg
fldcw
pop
popf
leave
inc
cltd
pop
pop
lock
push
arpl
sub
loope
and
cmp
jne
fnstsw
adc
outsl
cmpsb
or
sbb
sarl
in
stos
and
movsl
jg
daa
mov
pop
lods
push
xlat
xchg
and
push
arpl
xor
sbb
mov
lods
scas
bound
sub
ljmp
daa
jne
mov
daa
dec
movsl
jmp
push
iret
loope
out
mov
jnp
repz
push
cmpsb
mov
stos
dec
adc
les
cmp
sbb
cmc
push
mul
mov
mov
loop
push
mov
shrb
es
mov
repz
push
sbb
xchg
sti
sahf
dec
push
or
xor
cmp
clc
int
outsl
lods
mov
lods
cmp
pusha
std
jno
loope
negl
jnp
adc
fwait
mov
insb
scas
xchg
imul
push
fmuls
mov
mov
mov
add
dec
lahf
movsb
rol
cs
adc
sti
or
sti
and
sahf
fstpt
loopne
xor
xorb
sub
xchg
xchg
mov
stos
mov
imul
dec
inc
mov
cmp
sub
mov
scas
fnstsw
mov
jbe
nop
aas
scas
xor
popf
mov
pusha
dec
fs
pop
test
mov
orb
sub
sub
lods
jne
lods
lds
nop
movsb
and
push
mov
es
jle
adc
sub
jb
test
or
mov
xchg
xchg
xor
cmp
test
leave
cli
jecxz
xchg
add
mov
jmp
das
jge
out
aaa
or
jg
or
xlat
ds
int
cwtl
cmp
cwtl
pop
pushf
add
int3
add
inc
mov
ret
mov
out
sbb
xorl
leave
push
push
icebp
jl
mov
dec
bound
out
shl
insl
sahf
ljmp
or
inc
icebp
idiv
jecxz
cld
dec
mov
fldt
mov
ret
imul
stos
push
mov
popf
int
cmpsb
test
notl
push
int3
jmp
xchg
or
mov
push
pop
testb
pop
mov
pop
xchg
cs
clc
mov
cltd
adc
into
adc
out
dec
jle
aas
es
or
pop
fcmovb
std
inc
adc
dec
dec
mov
rolb
pop
jecxz
and
cmp
mov
and
pop
ss
fs
daa
jno
jl
stc
xlat
sbb
jns
sti
in
jb
add
iret
adc
jmp
stos
sarb
int3
jae
mov
and
pop
std
jns
sbb
or
push
sbb
ss
sub
sbb
push
outsb
push
xchg
jne
sbb
cmp
jecxz
mov
xchg
icebp
adc
mov
popa
inc
dec
mov
rorb
add
sub
das
mov
add
push
cmp
adc
jmp
popa
or
sub
jmp
into
mov
stos
subl
es
adc
adc
mov
test
bound
mov
and
mov
mov
ficoml
pop
test
xlat
cmp
pop
xchg
fwait
sahf
je
stc
inc
test
mov
cmpsl
pop
lock
xchg
test
test
push
pushf
jge
rcrb
into
xchg
inc
aad
mov
or
push
outsb
mov
outsl
xchg
jge
lods
adc
test
adc
add
fisubrs
loope
cmpl
jae
adc
mov
stc
dec
cmp
out
in
mov
cmpsb
and
das
inc
xchg
cmpsb
js
xlat
adc
out
pop
movsb
xor
sti
inc
jg
mov
stos
xchg
aam
cs
jb
test
rorl
lcall
std
lock
shll
mov
mulb
rcl
mov
sub
sbb
cmpsb
xor
insb
test
jne
push
repz
mov
inc
add
scas
mov
cmp
mov
imul
mov
mov
cwtl
ljmp
mov
int3
aas
lods
js
mov
fdivrl
pop
sarb
sbb
xlat
sub
subl
shll
jp
andl
jecxz
dec
sbb
dec
push
mov
lods
xchg
dec
xchg
mov
adc
and
jl
mov
sti
or
ss
sbb
and
mov
sar
int
gs
nop
fisttps
lods
sub
test
psubusb
adc
cld
or
jbe
dec
mov
xchg
in
xlat
push
push
sbb
sub
cmc
xchg
mov
xchg
push
push
cwtl
add
fwait
xor
jle
fimull
and
adc
xchg
push
call
cmp
inc
data16
flds
cmpsb
scas
cs
mov
adc
subb
fidivs
test
dec
xchg
rcr
js
lods
xchg
push
cmp
pop
cmc
jle
pop
mov
cmc
sub
loope
jmp
out
js
flds
inc
add
adc
mov
sub
jnp
sbb
mov
or
fdiv
lret
xor
xor
into
or
and
mov
xchg
leave
sub
inc
push
bound
insl
add
sbb
loopne
jno
add
test
and
or
cmp
pop
mov
xchg
je
lods
testl
sbb
cmc
dec
xor
imul
xor
mov
adc
and
pop
cli
push
add
dec
jg
adc
inc
jnp
and
notl
in
and
adc
sub
icebp
sub
add
aaa
stos
jnp
sub
jl
enter
cwtl
movb
std
scas
aad
xchg
cmovs
mov
xchg
out
adc
pushf
cmc
icebp
xlat
xlat
push
inc
dec
adc
repz
aaa
cmp
mov
pop
xor
repz
jp
dec
jne
scas
in
movsb
arpl
jmp
xchg
xchg
in
stc
cmpsl
pop
sbbl
and
sbb
xor
jb
insl
mov
std
aaa
xor
cs
imul
out
dec
push
pusha
ja
adcb
jne
fwait
pslld
push
scas
push
xchg
pushf
cltd
inc
or
lahf
dec
mov
mov
inc
mov
rcll
fidivrl
cmpsl
sub
mov
addr16
push
xchg
add
cmp
jecxz
in
ss
jb
dec
pop
mov
bound
xchg
cmpsl
cmp
out
jge
or
and
dec
push
imul
push
call
sub
mov
lret
fnstcw
fistl
mov
loopne
pushf
sbb
in
jl
fcoms
and
dec
movsl
popa
jge
push
pop
mov
pop
push
cmp
dec
clc
in
clc
out
dec
jp,pt
shl
nop
adc
sub
xchg
fldcw
pop
popf
leave
inc
cltd
pop
pop
lock
push
arpl
sub
loope
and
cmp
jne
fnstsw
adc
outsl
cmpsb
or
sbb
sarl
in
stos
and
movsl
jg
daa
mov
pop
lods
push
xlat
xchg
and
push
arpl
xor
sbb
mov
lods
scas
bound
sub
ljmp
daa
jne
mov
daa
dec
movsl
jmp
push
iret
loope
out
mov
jnp
repz
push
cmpsb
mov
stos
dec
adc
les
cmp
sbb
cmc
push
mul
mov
mov
loop
push
mov
shrb
es
mov
repz
push
sbb
xchg
sti
sahf
dec
push
or
xor
cmp
clc
int
outsl
lods
mov
lods
cmp
pusha
std
jno
loope
negl
jnp
adc
fwait
mov
insb
scas
xchg
imul
push
fmuls
mov
mov
mov
add
dec
lahf
movsb
rol
cs
adc
sti
or
sti
and
sahf
fstpt
loopne
xor
xorb
sub
xchg
xchg
mov
stos
mov
imul
dec
inc
mov
cmp
sub
mov
scas
fnstsw
mov
jbe
nop
aas
scas
xor
popf
mov
pusha
dec
fs
pop
test
mov
orb
sub
sub
lods
jne
lods
lds
nop
movsb
and
push
mov
es
jle
adc
sub
jb
test
or
mov
xchg
xchg
xor
cmp
test
leave
cli
jecxz
xchg
add
mov
jmp
das
jge
out
aaa
or
jg
or
xlat
ds
int
cwtl
cmp
cwtl
pop
pushf
add
int3
add
inc
mov
ret
mov
out
sbb
xorl
leave
push
push
icebp
jl
mov
dec
bound
out
shl
insl
sahf
ljmp
or
inc
icebp
idiv
jecxz
cld
dec
mov
fldt
mov
ret
imul
stos
push
mov
popf
int
cmpsb
test
notl
push
int3
jmp
xchg
or
mov
push
pop
testb
pop
mov
pop
xchg
cs
clc
mov
cltd
adc
into
adc
out
dec
jle
aas
es
or
pop
fcmovb
std
inc
adc
dec
dec
mov
rolb
pop
jecxz
and
cmp
mov
and
pop
ss
fs
daa
jno
jl
stc
xlat
sbb
jns
sti
in
jb
add
iret
adc
jmp
stos
sarb
int3
jae
mov
and
pop
std
jns
sbb
or
push
sbb
ss
sub
sbb
push
outsb
push
xchg
jne
sbb
cmp
jecxz
mov
xchg
icebp
adc
mov
popa
inc
dec
mov
rorb
add
sub
das
mov
add
push
cmp
adc
jmp
popa
or
sub
jmp
into
mov
stos
subl
es
adc
adc
mov
test
bound
mov
and
mov
mov
ficoml
pop
test
xlat
cmp
pop
xchg
fwait
sahf
je
stc
inc
test
mov
cmpsl
pop
lock
xchg
test
test
push
pushf
jge
rcrb
into
xchg
inc
aad
mov
or
push
outsb
mov
outsl
xchg
jge
lods
adc
test
add
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
cltd
aas
add
cltd
aas
add
add
lret
add
add
add
cltd
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
gs
xor
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
add
add
je
imul
