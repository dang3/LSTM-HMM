mov
jge
aam
int3
jmp
daa
fs
sbb
in
push
or
inc
add
and
mov
add
adc
add
add
push
fldt
and
add
and
add
rdtsc
mov
or
adc
mov
xor
data16
insb
sysexit
add
or
imul
scas
sti
and
inc
dec
or
sbb
adc
add
mov
insl
xor
mov
push
fmuls
addb
adc
and
sub
aaa
addb
scas
std
insb
add
adc
subb
xorb
inc
add
or
aas
dec
lahf
inc
sbb
out
mov
outsb
nop
je
and
lcall
insl
push
sbbb
aas
cmp
mov
pop
ret
pop
leave
ret
add
pop
pop
ret
nop
inc
or
dec
pop
pop
mov
adc
fisubrl
movnti
ret
sub
xor
sti
sub
cmp
and
lcall
add
inc
dec
xor
dec
add
inc
neg
xor
jmp
pop
dec
add
mov
add
movl
pop
cld
not
sub
insl
in
and
mov
adc
adc
faddl
lods
cld
mov
adc
dec
cld
mov
sub
mov
or
loopne
sub
adc
int
neg
jl
pop
xrelease
adc
mov
dec
xor
sbb
mov
shr
insl
cld
in
pushl
xor
pop
sbb
into
cmp
scas
mov
mov
mov
call
xlat
fiaddl
mov
and
mov
sbb
adc
sbb
mov
lock
sub
pop
scas
test
sti
mov
add
mov
mov
movsl
fstpt
lret
xchg
mov
inc
neg
mov
rolb
add
push
test
and
fiaddl
inc
addb
mov
lea
insb
not
mov
jne
dec
mov
mov
fidivs
ret
pop
push
push
mov
push
jle
imul
dec
or
pop
loope
outsl
lcall
std
or
push
inc
adc
pop
or
inc
push
add
aaa
add
sub
or
pop
or
mov
aam
subl
pop
int3
scas
dec
nop
ja
mov
xchg
cmp
es
mov
xor
lock
lock
daa
int3
push
dec
ljmp
insb
adc
jecxz
inc
mull
or
loope
mov
pop
lock
cld
imul
imul
inc
idivb
add
clc
mov
jecxz
neg
xor
lods
arpl
outsl
imul
and
sub
jecxz
pushl
lea
push
add
push
push
push
push
sbb
adc
lret
cmp
and
mov
jge
pop
inc
arpl
xor
fidivrs
mov
and
sbb
out
or
pop
add
not
jnp
outsb
imul
cmp
fbstp
jp
xor
or
dec
ret
arpl
push
mov
or
cs
inc
repz
adc
inc
jo
push
out
daa
inc
pop
cmp
sub
jne
push
clc
das
lods
out
rcll
rcll
push
jae
faddl
sub
sar
inc
sbb
stos
negl
jb
adc
mov
jbe
push
add
jnp
insl
incl
int3
mov
add
xchg
popa
adc
stos
add
fdivrl
stc
rorl
add
sbb
jg
fidivrs
pusha
add
xor
fisubl
jne
idiv
out
incb
dec
loope
std
jmp
jl
lret
inc
mov
rolb
ret
inc
sub
xor
xchg
ja
add
popf
faddl
notl
jno
pop
and
add
inc
sub
inc
idivb
jle
ja
pop
cmp
pop
and
push
fcoml
mov
sti
loop
xor
cmpsl
and
cmp
mov
movsl
add
xor
jb
out
bound
adc
cld
mov
cltd
push
add
adc
add
push
add
cmpb
lcall
repz
xor
sbb
and
imul
sbb
fs
mov
mov
pushf
in
cmp
dec
push
pop
les
mov
ljmp
push
dec
dec
xor
jbe
add
jg
pop
int3
rcrb
mov
jg
aam
mov
incl
or
add
pop
inc
push
loopne
dec
xorb
int3
mov
movsb
sbbl
add
add
testb
div
add
ja
pushf
sub
add
out
jbe
jmp
adc
sbb
cmp
add
cld
pop
lcall
mov
sub
pop
or
aam
mov
mov
and
insl
incl
outsb
sbb
xor
aad
in
loope
mov
cld
xor
in
add
mov
aam
push
loopne
inc
pop
in
loope
lods
add
jns
push
mov
gs
xchg
lret
incl
jae
add
std
inc
add
mov
sti
pop
idiv
xchg
dec
in
in
cmp
mov
fstl
jmp
pop
ret
sti
push
js
test
lcall
idiv
lea
mov
je
add
xchg
test
imulb
pushl
je
pop
roll
jle
dec
dec
add
and
xchg
imul
xchg
add
lock
int3
push
arpl
sbb
inc
in
outsl
mov
stc
popa
cwtl
xchg
rclb
orb
push
or
idiv
cltd
das
xchg
adc
sbb
lcall
mov
sbb
add
add
xorl
dec
insb
cmp
mov
pop
inc
jge
jne
test
or
inc
and
cmpsb
lahf
or
loope
or
es
pop
cmpsl
mov
dec
sahf
lret
inc
lods
divl
pop
loop
sarb
and
cmpsb
xchg
or
lods
jo
rcrl
fwait
jbe
mov
dec
insb
testl
or
or
sub
dec
xor
test
pop
sarl
sbb
sti
inc
test
inc
xor
mov
mov
mov
or
add
orl
stos
mov
sbb
lea
fstpt
push
mov
cmpsl
cmp
dec
pushl
mov
flds
fidivrs
or
add
push
pop
and
scas
js
add
and
or
cmp
add
movb
nop
insb
fcompl
add
push
jb
bound
add
test
cs
push
adc
inc
add
ret
mov
nop
mov
aas
sbb
or
loopne
dec
daa
ret
push
cmp
dec
test
push
xor
jbe
shlb
xchg
mov
iret
out
mov
addb
repnz
stc
push
and
imul
pushf
and
orl
fcomp
sbb
push
shlb
imul
test
jo
cmp
pop
jecxz
push
fisubl
icebp
jne
and
mov
mov
and
push
pop
test
je
nop
and
or
std
out
out
stc
fwait
mov
dec
mov
shll
jp
dec
cs
lcall
dec
aam
jns
xchg
outsb
call
dec
out
sbb
mov
mov
shlb
jnp
cmp
shll
cli
mov
mov
mov
in
mov
mov
jb
xlat
sar
das
pop
push
sub
cmp
or
adc
pushl
xor
in
push
shlb
loopne
jl
in
cmp
jnp
jl
insl
jmp
or
mov
cmp
jl
aas
or
cmp
test
inc
inc
jge
loop
lea
jb
jo
push
imul
je
sbb
das
jl
pop
loopne
in
cltd
in
push
inc
aam
insl
ret
icebp
push
sbbl
inc
pop
lret
mov
in
or
mov
adc
icebp
es
cmp
pop
adc
decl
mov
mov
fmuls
add
dec
not
jl
je
clc
dec
sarb
clc
test
loopne
and
js
out
pusha
xor
mov
ficoml
push
adc
in
push
inc
mov
ret
adc
sbb
pop
aaa
inc
xlat
or
sub
xor
je
sub
aam
jmp
xor
adc
nop
fstps
out
inc
lods
je
inc
inc
mov
std
ret
ret
cmpsl
jp
dec
es
jp
inc
jbe
bnd
jns
outsl
push
stos
mov
adc
in
pushf
xor
xor
inc
pop
lahf
jno
inc
and
cmp
out
negb
sub
ret
adc
jmp
call
mov
pop
inc
leave
repz
aas
xor
pop
mov
ja
das
insb
sbb
repz
or
fnstsw
xchg
incb
popf
mov
mov
stos
daa
addl
xor
loop
imul
std
sub
or
pushw
xor
fcomip
fucomip
xchg
push
sarl
sub
shll
out
outsl
mov
addr16
push
test
xor
mov
dec
cmp
out
pop
xor
shlb
jg
ret
jne
out
fsubrs
addr16
movsl
inc
stos
movsb
or
pop
int3
fcomp
lock
outsl
insb
xchg
push
cmpsl
js
fcomip
sbb
ret
in
loope
push
and
js
ret
inc
fs
lahf
jmp
or
inc
inc
xor
in
lea
or
sbb
mov
pop
ficomps
fsubr
loop
add
or
cmp
jecxz
mov
ret
lahf
push
xor
icebp
sbb
mov
or
ret
jg
jge
dec
loop
cld
test
adc
hlt
push
mov
repz
inc
pusha
mov
sub
das
cmp
adc
inc
pop
fs
jo
jbe
pushl
mov
ret
mov
adc
ret
xor
or
pop
outsl
mov
mov
in
rcrl
lock
pop
xor
mov
sar
mov
lcall
mov
xchg
mov
fildll
repz
fs
cmpb
in
sub
popa
jg
jg
ds
and
adc
rolb
cltd
subl
or
jle
push
mov
lods
popa
jno
into
imul
adc
inc
xchg
enter
dec
dec
push
pop
cmp
pop
sub
add
push
lcall
pop
jg
shlb
mov
aad
outsb
mov
xlat
imul
mov
decb
insb
popf
push
cmp
xchg
pop
ja
adc
add
xchg
jno
or
movb
fidivrl
mov
insl
xor
xchg
mov
pop
pop
inc
stos
push
adcb
and
inc
ja
mov
sbb
dec
jmp
rcl
add
out
and
mov
dec
fiadds
insl
and
xchg
test
mov
mov
fistps
or
aas
lods
add
hlt
sbb
sub
cmc
mov
stc
sbb
icebp
test
push
xorb
mov
add
outsl
push
das
in
add
xchg
lcall
jp
mov
adc
je
mov
cmp
sbb
test
jmp
xor
push
sahf
int
or
enter
xlat
adc
inc
addb
and
fbld
mov
test
inc
sub
les
shlb
js
mov
push
xchg
das
pop
xor
lea
push
jo
mov
sar
jg
pop
mov
test
and
cmp
icebp
mov
add
loop
dec
sbb
xor
jp
cli
pop
js
lods
sti
lret
add
addr16
jl
mov
fisubs
inc
cmp
fcmovb
sbb
movsb
adc
shl
xchg
mov
orl
addl
lods
mov
xchg
out
hlt
jbe
loopne,pt
and
jg
into
das
hlt
pop
mov
in
mov
jmp
add
xchg
and
mov
pop
ret
jnp
sbb
mov
jbe
bnd
sysenter
popf
test
or
xlat
sbb
fcmovb
cmp
les
test
push
call
fstl
pop
call
stos
add
mov
imul
daa
cmc
mov
flds
mov
lret
and
jae
orb
and
jne
lret
dec
xor
test
add
adc
inc
imulb
mov
mov
dec
or
sub
pushf
sbb
ljmp
mov
add
xchg
ret
sbb
dec
dec
sbb
or
jae
jmp
pop
jg
mov
addb
ret
fwait
xor
sbb
shll
shll
stos
mov
xlat
nop
in
ss
cmp
sti
gs
stos
xchg
scas
or
nop
out
les
daa
int3
pop
pop
sahf
adc
fstpl
jle
mov
jg
enter
push
adc
aam
and
imulb
dec
dec
cltd
orl
pop
fstp
mov
rorb
cmpsb
push
mov
mov
mov
sbb
aam
adc
mov
ss
or
mov
rorl
test
call
inc
inc
and
mov
icebp
outsb
pop
aaa
js
dec
mov
jl
mov
mov
je
loope
sub
cmp
xor
icebp
xor
cs
lret
xor
jl
inc
loope
cmp
popf
cmp
clc
jbe
mov
in
ss
cmp
xchg
mov
fwait
sbb
xor
sbb
shlb
dec
fsubr
ljmp
mov
sub
mov
sbb
mov
imul
xor
rorl
and
add
or
mov
mov
push
jns
in
pop
les
pop
dec
mov
mov
push
sub
or
xlat
insb
ror
add
pop
sub
mov
loop
xor
adc
dec
sbb
mov
int3
mov
xchg
mov
cs
push
jle
mov
xchg
aaa
adc
fcom
ror
push
push
insb
insl
lcall
paddusb
jbe
arpl
aam
add
add
push
lods
into
xchg
push
push
adc
mov
iret
add
in
xor
mov
sbb
flds
add
subb
pusha
or
lock
xchg
jne
dec
mov
adc
dec
fidivrs
cltd
fsubs
adc
mov
fimuls
add
push
gs
and
mov
call
dec
pmulhw
or
pop
push
pop
mov
pop
shl
paddusb
lcall
fcoms
and
mov
out
pop
leave
ja
inc
mov
repz
and
js
inc
and
pop
sti
push
and
push
dec
les
icebp
dec
out
call
gs
cli
pop
int3
adc
sub
and
js
shrb
adc
test
insl
adc
jle
xor
insl
testb
insl
call
push
or
push
mov
arpl
dec
daa
imul
adc
daa
add
fcomps
enter
mov
sub
push
jge
outsl
or
out
mov
aas
cmp
adc
mov
xchg
mov
movsl
or
cmpsl
dec
cmp
sbb
pop
pop
lods
and
js
int3
mov
sub
mov
nop
mov
hlt
jo
testb
xor
adc
lds
call
stos
test
add
mov
or
fadd
fmul
sahf
or
enter
mov
or
cmp
inc
or
repnz
push
es
fcoms
pusha
sbb
fsubs
ret
mov
mov
call
adcl
or
mov
or
xor
pop
fs
sbb
push
stc
not
mov
push
dec
sub
insb
std
stc
test
adc
dec
fadds
pop
outsb
mov
dec
mov
push
xchg
add
addl
and
inc
dec
xchg
cld
loope
push
mov
cmp
fdivs
into
pop
inc
mov
gs
and
call
mov
hlt
adc
mov
jmp
enter
dec
or
push
xor
enter
rcll
es
sub
mov
in
jmp
leave
pop
ljmp
fsub
and
jmp
dec
lcall
jnp
add
mov
pop
cmp
fisubl
popa
inc
nop
test
add
outsb
loop
insb
std
imul
mov
cld
add
sbb
xchg
rcr
fwait
int
in
int
sub
xchg
out
adc
jbe
adc
shrb
jo
in
xor
ljmp
popf
loopne
add
add
aam
fcmovnu
add
outsb
cmpsb
push
loopne,pt
jne
sub
inc
cmp
mov
adc
jne
cmp
dec
fdivrs
sub
adc
sbb
scas
or
add
pop
in
fsubl
or
push
xor
pop
out
fdivrs
repnz
negb
mov
lods
shrl
mov
lock
insl
push
ficompl
dec
sbb
push
mov
add
or
adc
add
inc
add
rorl
hlt
sub
aaa
mov
add
mov
lds
data16
fildl
and
out
xor
adc
dec
lea
mov
mov
xlat
push
pop
sub
mov
xor
dec
jb
fnstenv
jb
add
subl
lcall
or
sahf
insb
sbb
imul
out
fsubr
hlt
jl
pop
hlt
jge
mov
in
pusha
and
rcl
out
popf
push
sub
jmp
push
or
jg
pop
xor
cmp
inc
movsb
fcoms
mov
clc
adc
mov
or
dec
mov
lcall
or
or
call
cmp
aas
clc
orb
add
jbe
pop
mov
xchg
out
iret
pop
pop
pushf
in
fld
loope
add
xor
and
jl
fs
dec
jp
cmp
shlb
add
sbb
shrb
add
rolb
rorl
je
clc
xchg
stos
jbe
dec
xor
inc
adc
xor
adc
xor
sbb
xchg
adc
mov
ret
js
dec
mov
dec
mov
inc
adc
sub
iret
jo
or
popf
into
adc
jl
daa
stos
inc
dec
or
rcr
pushf
push
lahf
nop
fs
adc
rcrb
andl
mov
rcrl
cltd
cmp
push
lcall
lcall
or
mov
push
call
inc
test
push
imul
xchg
mov
data16
pop
ljmp
stos
repz
movsb
xor
shll
filds
std
loopne
cld
int
mov
add
push
imul
and
xor
ss
fiaddl
inc
subl
xor
adc
jl
xlat
fildll
push
sbb
lods
or
mov
pusha
fs
fisubs
insb
into
shlb
inc
loopne
rclb
or
test
adc
dec
xchg
add
shr
in
xlat
fxch
test
pop
sbb
into
add
sbb
enter
lret
inc
inc
les
imul
sbb
or
ret
jbe
or
push
repnz
idiv
push
adc
faddl
ret
mov
xor
test
adc
and
es
jo
pop
xor
movsb
int
sbb
and
mov
sbb
inc
nop
dec
fucomip
sbbl
rcl
xorl
sub
loope
test
test
or
inc
in
es
push
add
jmp
and
sbb
hlt
scas
popa
dec
js
adc
pushf
mov
and
lds
mov
adc
dec
sbb
das
sub
lea
mov
int3
xchg
mov
outsb
gs
cwtl
dec
dec
cmp
pop
push
mov
out
adc
inc
sbb
ds
adc
add
add
dec
xor
scas
sbb
fisttpl
inc
jge
test
cwtl
pop
add
xor
push
data16
pop
test
fdivs
xor
dec
mov
inc
and
mov
dec
cmp
insl
sbb
ja
and
xchg
addr16
sahf
cmp
xchg
push
sysenter
dec
int3
jb
lods
sbb
push
dec
cmp
add
iret
ds
push
pusha
fxam
mov
loope
lock
je
js
mov
fadd
imull
and
dec
and
mov
ficoml
outsl
jge
jno
inc
insl
fnstcw
lret
jae
jmp
xor
dec
add
and
adc
aam
mov
aad
in
inc
pop
loope
xor
lods
inc
dec
lock
jb
daa
mov
test
leave
stos
and
imul
scas
sahf
rcrb
shl
push
push
pop
mov
or
cli
push
out
xor
mov
imul
inc
cmp
and
outsb
loopne
or
adc
dec
jle
mov
mov
add
mov
clc
mov
jbe
sbb
repnz
or
inc
inc
addb
out
mov
and
lretw
aad
lahf
sbbb
sub
and
pop
loopne
mov
or
xlat
scas
xchg
stc
rcrb
addr16
cmp
clc
add
insb
rolb
and
pop
sbb
jno
jmp
jnp
loopne
lcall
mov
mov
movsl
cmp
xor
sarb
ret
popa
rcl
dec
rolb
data16
mov
mov
push
pop
pop
mov
clc
shlb
inc
and
aad
add
loopne
fisttps
sar
addb
and
push
inc
loop
outsl
sbb
adc
pop
sbb
dec
mov
push
jbe
clc
jo
jg
clc
ljmp
mov
inc
sbb
add
add
icebp
jns
or
inc
xchg
add
test
sbb
and
dec
es
das
mov
add
xchg
adc
insb
test
sbb
sub
mov
subb
mov
push
xor
add
mov
cmp
push
sbb
shlb
sub
push
int
dec
push
xchg
pusha
adc
sub
or
mov
out
add
loopne
add
xchg
in
dec
sahf
pop
add
cmp
mov
push
or
and
or
idiv
rorb
faddp
and
out
add
ret
lock
dec
or
je
push
rcr
or
push
cld
push
dec
popf
xchg
pusha
repz
pop
jmp
sbb
pminub
pop
sarl
sub
js
loopne
insb
push
sbb
clc
fs
and
jmp
dec
add
cltd
leave
mov
add
insb
js
int3
add
test
addb
push
mov
push
add
push
push
lcall
push
or
test
xlat
jmp
inc
popa
mov
out
stos
jns
adc
mov
out
xor
aad
loopne
icebp
and
push
xchg
cmp
fwait
jl
addl
xchg
fsubl
pushf
adc
sti
mov
inc
negl
jmp
out
add
inc
dec
mov
jge
jb
scas
push
sub
jg
loopne
mov
mov
mov
push
add
insb
imul
mov
or
pop
out
add
addb
loope
ja
mov
add
cmp
faddl
jmp
inc
leave
jmp
xlat
outsl
shr
outsl
rol
cmpsl
xor
fwait
dec
mov
xorb
and
aam
imul
sbb
repz
mov
pop
test
sub
std
cmpsb
lock
dec
imulb
into
jmp
and
sub
mov
fistpl
add
pop
daa
cmp
jge
xor
rorl
ja
stos
cmpsl
jno
add
add
push
pop
sub
notb
or
dec
enter
je
divl
inc
jge
cld
pusha
add
dec
inc
lods
pop
mov
sbb
popf
lock
out
xor
inc
lods
cld
cmpsl
sbb
movsb
out
xchg
xchg
xor
or
arpl
or
mov
dec
popf
in
mov
pop
shlb
lock
sarb
rcrl
loopne
or
or
cld
out
cmpsb
test
mov
fildl
sbb
cmp
or
in
imul
xorb
outsl
jl
and
adcl
aas
movsl
xor
mov
rcl
into
int
push
lahf
inc
dec
int3
cwtl
cmp
cmp
pushl
outsl
pop
jno
cld
xlat
fadds
fsubrs
stc
fiaddl
enter
les
sub
dec
outsb
ret
fcomps
push
repnz
jmp
inc
pop
inc
sub
or
aam
pushf
push
pop
test
add
cmpsb
pop
cmc
inc
jne
pop
xorb
or
scas
divl
testl
ret
and
push
subb
fstl
lahf
mov
add
lahf
xchg
mov
sahf
add
repz
loopne
imul
or
cmp
cwtl
orb
xorl
dec
mov
add
out
idiv
lcall
add
mov
push
rcrb
push
jg
incl
xlat
sbb
shll
in
adc
lock
fstpt
xchg
adc
mov
push
lahf
add
mov
fidivrl
incl
dec
pushf
test
shr
ljmp
stos
roll
lret
add
push
mov
jnp
mov
xchg
jmp
adc
pop
cmp
inc
pusha
add
adc
push
cld
jg
add
add
mov
aas
jl
xchg
dec
xor
adc
sahf
add
sti
incl
out
add
mov
sub
add
push
sub
add
sar
fistps
addl
addb
add
repnz
daa
sahf
and
xor
and
ljmp
out
push
pop
add
push
add
mov
lcall
sub
mov
outsl
xchg
and
test
mov
cmp
add
lcall
dec
into
add
mov
or
inc
add
loopne
test
jmp
and
jp
sbb
je
dec
sbb
or
pushl
sbb
add
fwait
add
addb
add
jg
add
sub
jbe
adc
jbe
lret
roll
enter
cld
aad
shll
cwtl
adc
sbb
inc
sub
sbb
icebp
add
leave
adc
add
adc
mov
xchg
add
inc
clc
inc
or
fwait
push
cmp
push
xor
int
sub
xchg
jne
lcall
imul
call
mov
cmp
xchg
fmuls
jmp
add
add
sub
out
dec
pop
ljmp
stos
mul
adc
and
bound
add
lds
jp
sub
adc
sub
inc
xor
cmp
shl
dec
or
dec
mov
sub
sbb
mov
mov
push
jnp
mov
sar
mov
inc
adc
inc
adc
enter
rcrb
mov
inc
jmp
loopne
sub
mov
pop
xor
pop
popl
fadd
xor
nop
out
push
clc
jge
adcb
fcmovb
sbb
int3
sbb
sbb
pusha
loope
stos
int3
fs
xor
xchg
nop
stc
xchg
add
sbb
insl
push
mov
ret
test
ss
mov
jo
or
enter
mov
sub
je
clc
push
mov
xlat
and
or
int3
cli
fsubs
inc
xor
fs
lock
lea
int3
aam
add
xchg
add
push
jle
stc
push
xorl
xor
or
daa
lock
dec
push
xchg
into
sbb
push
addl
hlt
mov
xchg
xor
sbb
test
mov
mov
sbb
xor
xchg
fsub
roll
and
pop
inc
add
or
ret
xor
add
xchg
pop
in
cmp
loopne
imul
pop
mov
sub
mov
jnp
mov
cmpsb
iret
sarb
sub
mov
imul
adc
pop
and
and
inc
outsb
movsb
push
dec
inc
and
or
sti
xor
or
test
inc
addr16
in
je
mov
mov
imul
xorb
lea
jne
mov
lods
es
xor
clc
mov
aad
xlat
mov
inc
mov
mov
in
cmp
inc
jnp
mov
int
sbb
loope
xchg
push
int3
dec
adc
add
add
add
dec
add
inc
xor
pop
cmp
add
xor
adc
xorl
or
mov
lock
outsl
ret
cmpb
stos
test
mov
cmp
pop
dec
xor
mov
xor
into
cmp
je
ficoms
fcom
inc
push
xlat
sarl
or
fsubrs
or
scas
jno
dec
sbb
outsl
mov
imul
push
dec
mov
outsb
jp
xor
add
or
adc
lds
push
jno
push
xor
jmp
inc
add
mov
or
fcoml
movsl
pop
jno
addr16
stos
mov
pop
cld
into
adc
scas
sbbb
mov
jl
clc
lds
jmp
leave
lock
mov
fs
aas
jmp
out
into
inc
sub
adc
clc
loopne
loop
push
xchg
mov
add
cli
or
aad
xlat
or
sub
aaa
and
loopne
pop
loop
pop
imull
rorb
and
cmpsl
jmp
iret
sub
fdivs
jle
jbe,pn
and
imul
jl
jne
xor
dec
cmpsl
jmp
outsl
mov
rorl
fldl
loope
sbb
aad
sbb
mov
push
ljmp
add
push
or
fidivrs
daa
cmp
ds
and
push
stos
add
adc
adc
push
push
adc
arpl
xor
jnp
push
imul
cmp
loop
pop
sub
testl
loope
sbbl
int3
pop
or
or
adc
xchg
dec
mov
push
add
xor
arpl
cmp
imull
jb
cli
dec
outsb
push
mov
xchg
lds
pop
jo
mov
or
mov
enter
lods
test
add
mov
cmp
nop
lods
add
out
les
add
call
scas
mov
sbb
jmp
cmp
fistps
inc
sti
testl
jo
push
mov
inc
loopne
imul
inc
sbb
out
push
jmp
sbb
sub
cmp
repnz
sbb
enter
inc
jo
ja
loop
add
je
scas
cwtl
ret
test
xor
add
pop
ret
adc
xchg
and
add
out
shl
loop
sub
cmp
xchg
pusha
sbb
shlb
out
sub
lcall
loopne
mov
pop
mov
push
fcomip
adc
rolb
jge
jmp
addr16
adcl
pop
int3
mov
mov
shrl
clc
mov
xor
repnz
pop
lock
dec
pushf
shrl
addb
or
aam
fidivs
in
jae
mull
sbb
push
idivl
inc
xor
addb
cli
dec
mov
and
or
jb
cmp
xor
dec
cmp
jp
inc
sub
mov
int3
push
xor
insb
clc
or
and
pop
xor
inc
insb
scas
sbb
ret
pop
icebp
and
xchg
sub
cmp
mov
or
and
jmp
sarb
mov
xor
in
xor
jnp
mov
mov
mov
inc
or
addb
jbe
cs
sub
sub
daa
int3
jo
jb
sub
pop
mov
je
jmp
movsb
add
inc
xor
add
push
mov
cmp
inc
pop
mov
push
jno
jo
adcl
insb
mov
fstpt
or
add
inc
addl
fldenv
and
adc
jo
jnp
pop
test
dec
clc
pop
outsb
js
xchg
xor
pop
mov
sbb
push
adc
aaa
cmp
pop
loopne
clc
mov
sahf
int
mov
push
adc
push
in
addl
out
mov
jmp
test
pop
jbe
mov
test
mov
dec
or
aas
ret
test
loope
aaa
push
cmc
sub
xchg
popa
cmp
repnz
or
sbb
testl
push
cmpsb
jmp
jle
cmp
jne
mov
call
repnz
mov
mov
push
jecxz
mov
jmp
cs
pushf
rorb
adc
and
cmc
sub
adc
inc
sbb
popa
addr16
shr
adc
dec
testl
lahf
push
fisubrs
pushf
hlt
pop
aaa
dec
mov
or
leave
loope
adc
sub
stc
and
out
rorb
test
mov
cmp
fcompl
pop
xor
lcall
mov
or
sub
gs
cmp
ja
push
sbb
aad
loope
xchg
cwtl
inc
fisubs
pop
adc
mov
adc
or
aam
xor
or
testl
xor
adc
fisubs
pop
xor
adc
insb
or
jg
cmp
xor
jne
loopne
xchg
and
xchg
movsl
or
inc
mov
push
dec
push
cli
ret
jecxz
movsb
lcall
cmp
mov
xor
fstps
push
push
mov
addl
mov
iret
aad
pop
loop
rclb
shll
mov
push
adc
push
jnp
pop
xchg
add
or
inc
std
out
add
movb
test
inc
out
jl
cmp
cmp
rcr
add
and
sarb
mov
or
adc
mov
and
and
pop
dec
xor
testb
and
sbb
pusha
ret
loope
sub
js
dec
sub
add
add
inc
jge
cmp
aam
xor
subb
faddl
sbb
in
daa
cmpsl
sub
jnp
push
sbb
enter
sbb
xor
mov
scas
jecxz
sbb
xor
dec
cmp
loop
cmp
add
in
dec
shl
mov
add
loopne
test
adc
ljmp
int3
jo
jbe
or
mov
shlb
adc
loope
xor
cmpsb
ds
imul
scas
das
jl
sarl
pop
xchg
outsl
pop
xor
std
sbb
call
or
insl
sti
mov
filds
js
mov
shlb
push
cld
push
and
push
sti
loopne
push
dec
or
and
je
mov
xorl
push
jbe
inc
adc
lea
aaa
icebp
cmp
cmp
dec
iret
pop
outsb
and
pop
outsb
in
pop
jbe
dec
popf
xchg
rcll
test
popf
out
out
sub
cmp
mov
sbb
xchg
rcrb
call
sub
sbb
and
xchg
adc
xor
addr16
ret
or
push
or
adc
lea
dec
cs
push
add
push
pop
sub
std
cwtl
test
das
pop
mull
fidivs
repnz
xchg
dec
movsb
add
fnstsw
jg
ret
push
flds
mov
fisubrl
out
pusha
inc
mov
nop
sub
mov
ret
pop
xor
or
pop
mov
inc
mov
xchg
clc
aad
lods
dec
bound
sbb
aaa
es
xor
addr16
mov
addl
imul
stc
testl
cltd
addr16
outsl
nop
ficompl
xor
add
add
cmpsl
inc
push
and
sbb
jle
inc
inc
fbld
enter
cli
test
movsl
mull
push
push
pusha
imul
fwait
rcrb
cwtl
adc
lret
fldl
cmp
push
outsl
aaa
jecxz
ja
iret
loop
dec
inc
outsl
scas
out
fld
push
idivl
pop
movsb
pop
leave
sbb
pop
into
test
xor
andl
aaa
pop
inc
roll
mov
jmp
notl
shll
dec
dec
sub
cmp
inc
or
stos
aaa
imul
js
adc
pop
xor
jo
sbb
pop
xchg
sti
popa
lock
sbb
pop
inc
loope
add
lods
add
inc
es
enter
jno
fbld
mov
xor
insb
xor
push
arpl
sub
pop
test
jae
xor
xor
fadds
lds
ds
jg
notb
and
pop
loop
adc
dec
xchg
push
add
mov
call
dec
popa
les
std
cmp
jbe
inc
xor
dec
pop
faddl
and
pop
andl
andl
les
testb
rcrl
jne
outsl
movlps
stos
xchg
dec
mov
mov
in
popw
cmc
and
pusha
dec
mov
stos
or
pop
xor
fcompl
add
lock
add
jno
lret
icebp
mov
adc
sbb
cmp
pusha
sbb
jbe
test
rorl
inc
std
xlat
cwtl
jmp
ja
daa
pop
cmp
enter
and
pop
xchg
enter
sbb
ljmp
call
jno
je
or
sub
mov
xchg
icebp
push
addr16
or
incl
rcll
movsl
dec
ljmp
sbb
jge
xlat
pop
xlat
fsubl
bound
shll
call
add
call
push
lds
out
sub
pop
mov
fiaddl
call
sti
cwtl
add
jb
hlt
pusha
ficoml
pop
dec
and
je
sbb
inc
mov
mov
or
ret
pop
cmp
jg
aaa
movb
inc
adc
dec
sbb
cmpsl
jp
sar
mov
int
dec
insl
mov
imulb
inc
sbb
enter
adc
dec
iret
imul
dec
adcl
lods
mov
test
rol
mov
fnstenv
negb
jne
cmpsl
inc
stos
sbb
les
add
add
ds
sbb
add
jmp
mov
jbe
cltd
pop
loopne
mov
jge
jmp
sub
inc
pop
leave
in
adc
out
mov
inc
push
mov
mov
dec
shrb
xor
or
add
mov
dec
ja
leave
add
fsub
add
jecxz
dec
xchg
js
jp
pop
shr
add
jp
pop
dec
add
pusha
gs
mov
insb
hlt
clc
daa
pop
push
pop
int
add
adc
rorb
and
mulb
pop
subb
in
ret
bound
adc
faddl
push
jl
xchg
cmpsb
push
dec
or
ret
inc
xor
pop
mov
push
or
cld
push
adc
sub
popl
add
inc
call
push
add
add
cli
call
adc
daa
push
xor
mov
ja
js
sbb
jne
or
addr16
mov
xchg
push
in
jo
sbb
mov
mov
mov
mov
rolb
mov
sub
push
icebp
stos
sbb
xchg
clc
add
dec
jb
lcall
sbb
xchg
adc
inc
dec
jle
xor
rcrb
loop
jne
pop
sub
icebp
bound
sbb
notl
jl
jp
loopne
sti
outsl
les
std
in
lahf
ja
xchg
mov
cmp
cmp
shlb
or
dec
push
add
dec
addb
mov
adc
ds
ret
enter
arpl
out
and
sahf
enter
xor
jo
sub
pop
aam
call
pmulhuw
movsl
ficoms
filds
fisubs
push
xor
or
and
sahf
or
push
adc
fadds
cmp
adc
pop
inc
out
add
inc
mov
pop
ret
scas
pop
data16
imul
cmp
mov
popf
out
sti
mov
inc
stos
add
mov
loope
xor
or
andb
fbld
pop
adc
in
cmp
inc
sbb
jp,pt
mov
aam
nop
or
push
and
dec
es
ret
jmp
stc
sahf
ret
push
mov
adcl
data16
popf
xchg
popl
adc
adc
xor
adc
cwtl
inc
add
rol
stc
jp
sti
in
addl
shr
xor
sbb
and
sub
sahf
and
test
sbb
mov
addl
cs
notl
fdivl
popf
xlat
sub
sub
mul
inc
or
mov
sbb
jp
sub
test
inc
imul
inc
xchg
rorb
ljmp
sub
xchg
test
pop
push
push
xor
fwait
testb
fdivl
pop
shr
bound
mov
data16
ljmp
push
or
or
push
pop
call
sbb
popa
out
add
leave
aam
jmp
mov
iret
dec
mov
jno
xor
test
sbb
into
pop
rcrl
gs
arpl
xor
sbb
inc
jbe
mov
push
cmp
xor
cmp
inc
and
mov
xchg
movsl
add
mov
cmp
xchg
lret
sub
mov
inc
xor
inc
push
and
imul
dec
cwtl
adc
pushf
lods
pop
and
in
ljmp
pop
pop
fbstp
dec
enter
movsb
mov
dec
movb
rcrl
add
sbb
adc
inc
mov
pop
testb
sbb
fnstsw
pop
ljmp
cmc
cmpb
sbb
adc
ret
and
pop
loop
mov
pop
popf
lds
clc
pop
sub
arpl
test
add
adc
test
inc
fwait
ja
rol
hlt
add
pop
pop
mov
jns
add
or
or
dec
adc
xchg
lea
xor
mov
ficoms
add
jae
pop
testl
mov
imul
pop
push
adc
stos
lcall
push
xor
sahf
fidivs
pop
push
aam
xor
xchg
push
or
xor
sbbl
addr16
mov
das
fiaddl
call
shlb
jo
por
js
or
in
mov
ret
mov
cs
cmp
je
push
xchg
adc
pop
mov
push
in
cld
sbb
jge
pop
sbb
cmp
je
or
lret
and
jne
fcoml
iret
les
hlt
aam
sbb
add
mov
mov
jl
dec
sarl
mov
jle
cwtl
icebp
adc
cli
dec
dec
sbb
sub
outsb
mov
jge
les
or
cli
push
lret
add
adcb
lds
iret
addr16
popf
mov
and
cmp
sub
orb
fists
orb
and
fidivrs
cmp
je
mov
adc
lcall
sbb
sbb
call
mov
mov
adc
into
sbb
jne
test
shll
or
sub
jle
test
or
xlat
adc
fbstp
inc
movsb
or
and
in
rolb
push
add
xor
test
jb
or
rolb
mov
std
mov
test
and
add
cwtl
jmp
rolb
arpl
pushf
aam
ret
ja
or
cs
vmulps
pop
std
or
push
xchg
icebp
arpl
push
fisttpll
addb
push
jp
xor
sub
push
out
and
mov
jne
inc
dec
enter
mov
loope
mov
push
xchg
and
adc
push
xchg
in
cmp
and
push
std
dec
nop
arpl
enter
xchg
add
mov
popl
cmp
adc
xchg
inc
div
out
fwait
jmp
push
out
int3
std
jo
int3
sbb
inc
out
roll
cwtl
sub
adc
sub
or
in
clc
mov
jne
jle
ret
andb
test
and
out
add
and
sbb
and
dec
addb
jne
or
add
into
sti
movsl
add
ret
add
pop
out
add
add
mov
shl
daa
scas
push
gs
scas
fisubrl
mov
mov
jmp
and
rcrl
xchg
inc
or
pop
jnp
mov
jp
int
inc
hlt
roll
in
call
dec
cli
xchg
xchg
or
adcb
rorb
mov
jmp
inc
cmp
pop
cmp
ja
adc
andb
ss
ss
sarl
push
fldt
cmp
cs
iret
sbb
pop
in
xor
or
insb
lds
xor
jge
rcl
ret
test
rclb
repz
cld
inc
mov
iret
inc
test
out
lahf
pushf
andl
call
shl
lcall
es
jmp
pop
jno
shrl
popa
das
mov
sbb
and
jg
cmp
cmc
mov
dec
cwtl
icebp
xchg
loope
mov
sbbl
sub
es
add
mov
outsb
or
ret
dec
push
pop
cmp
stos
pop
pxor
jo
addl
xor
dec
xchg
or
stos
pop
mov
ret
add
out
inc
jae
sbb
addr16
xor
sbb
or
roll
sub
fiadds
sub
push
xor
out
pop
xlat
and
push
inc
int
pop
mov
popa
mov
jo
test
cmpsb
fcoml
push
jecxz
testl
call
and
movsl
popf
in
dec
xor
test
jae
mov
jle
sbb
ret
push
mov
pop
stc
inc
cmpsl
shrl
push
xchg
add
inc
inc
xchg
sbb
shlb
ss
mov
or
leave
jecxz
or
jo
scas
pop
sbb
cltd
dec
jecxz
out
push
lods
pop
dec
push
cmp
add
sub
mov
cli
xchg
dec
jmp
ja
cmp
xchg
and
cmp
and
cltd
loope
pop
push
mov
dec
in
push
lea
jecxz
mov
test
adc
add
into
sbb
stos
mov
jl
and
icebp
adc
insl
out
adc
inc
xor
repz
jg
xchg
mov
cwtl
push
lret
xor
mov
fisubs
xor
fisttps
int
jl
cwtl
pop
push
sub
xor
mov
mov
shr
inc
mov
adc
cmp
idivl
mov
push
cld
mov
ret
pop
jmp
call
mov
add
sbb
jmp
inc
sub
jae
xor
adc
repnz
sbb
jecxz
cwtl
adc
sarb
mov
sub
pop
add
xor
cwtl
rcrb
pusha
add
dec
stc
inc
add
inc
jno
cli
daa
push
adc
mov
les
loopne
or
sbb
sbb
int3
xor
cwtl
xor
shr
in
mov
sub
mov
mov
icebp
inc
mov
inc
lret
inc
push
fmull
cli
and
add
js
outsl
fmuls
or
hlt
insl
mov
inc
cld
inc
mov
testl
fs
mov
rolb
cli
out
adc
add
sub
cli
push
dec
aad
loop
push
push
ss
es
ljmp
and
xchg
pop
sbb
movsl
mov
and
add
add
add
mov
hlt
jnp
dec
jb
in
xchg
or
adc
out
add
out
adc
cli
add
ss
add
adc
add
add
insb
cmp
addb
pop
xchg
add
hlt
cmc
or
mov
mov
sub
xor
jg
sbb
fwait
push
xor
push
add
add
clc
inc
cmpsl
dec
movl
add
adc
hlt
add
lods
mov
inc
cmp
jp
add
sbb
loop
jl
outsb
int
enter
add
fucomip
repnz
test
fwait
cmp
add
je
cmp
jno
pushl
inc
and
adc
jo
add
jl
enter
rorl
loope
fildll
adc
ret
xor
shll
in
out
fcoml
or
imul
jmp
incl
lcall
add
mov
hlt
mov
add
add
outsl
idivl
sub
aam
out
fistps
imul
jo
and
push
test
lods
int3
inc
xchg
jge
jg
hlt
daa
add
fwait
imul
push
decl
sub
sbb
fidivrs
negl
jge
ss
pop
imul
aad
add
out
cmp
bound
inc
push
jbe
add
mov
or
lods
add
or
push
or
movsl
fcmovne
inc
out
add
mov
lods
sub
ret
jo
out
enter
and
int3
add
mov
or
add
mov
mov
push
mov
push
outsb
add
adc
adcb
pinsrw
or
incb
fists
adc
add
test
mov
sbb
add
lcall
sbb
out
add
pop
sarb
int3
and
push
add
cld
mov
cli
jmp
shl
mov
mov
push
add
and
jne
mov
sbb
stc
jg
mov
scas
ficoml
xor
mov
jge
ret
lret
mov
movsl
cli
jg
cld
scas
bound
mov
xchg
add
xchg
adc
decl
das
ja
fbstp
or
in
jmp
pop
cmpsl
cs
dec
lods
stc
std
ja
add
int
adc
test
sub
xchg
fidivrl
inc
jp
add
test
mov
popa
cmp
mov
fs
mov
mov
pushf
sbb
pop
ss
xchg
adc
popl
lock
sub
xchg
xchg
sub
je
lock
ja
pushf
imul
or
adc
call
divb
and
and
outsl
push
adc
aaa
adc
in
jg
lea
xchg
inc
outsb
sub
frstor
int
dec
test
mov
add
mov
push
xor
xchg
mov
cld
iret
femms
sarl
sbb
js
jle,pt
cmpsb
scas
jmp
mov
es
inc
xchg
adc
mov
dec
cmpsl
mov
outsb
jnp
xlat
adc
jg
in
fisubs
pop
xchg
cwtl
cltd
and
adc
jp
xor
mov
mov
dec
ja
or
xchg
idivb
dec
pop
sarl
and
loope
insl
push
add
cmp
pop
or
std
add
pop
ljmp
jne
pop
dec
hlt
clc
mov
push
decb
add
shll
inc
add
lods
scas
mov
out
lahf
add
fsubp
mov
inc
adc
mov
or
adc
inc
and
sub
mov
out
or
scas
xchg
ds
sub
lods
sub
mov
in
mov
inc
jp
ja
je
push
imul
pop
popa
dec
fimuls
cli
jns
xor
push
xchg
pop
sub
mov
and
jmp
xchg
test
andb
add
lods
pop
or
adc
add
cwtl
mov
or
inc
and
jo
loopne
xchg
pop
clc
fcmovnbe
mov
xchg
sub
daa
roll
movsl
insl
mov
in
fwait
xor
fldt
in
add
adc
or
sahf
and
pop
push
xchg
hlt
sub
test
inc
stos
xchg
aad
aas
jge
ret
movsb
pop
cli
sbb
lods
cmp
clc
sub
push
lods
scas
add
sbb
ja
into
mov
outsb
and
dec
sub
mov
adc
popf
rcr
mov
shrl
pop
loop
inc
pop
and
jg
mov
aas
adc
mov
lret
add
or
adc
pop
dec
add
enter
enter
mov
js
jl
push
mov
test
or
cmc
push
insl
push
push
fiaddl
orb
inc
jecxz
push
and
lret
out
mov
inc
mov
adcl
jg
cmp
jne
xor
inc
jmp
add
ret
push
pushl
dec
mov
dec
sbb
loopw
ss
lock
inc
xor
clc
testb
mov
loop
push
aaa
lock
push
pop
and
test
or
dec
or
ficoms
les
cmp
mov
js
es
pop
push
push
xlat
lock
cmp
ret
movsl
lods
sbb
mov
call
test
imul
adc
fnstsw
sub
adc
into
mov
pop
outsb
es
jmp
rcrb
inc
jb
jo
aaa
fidivl
xor
cmc
or
stc
push
das
sub
dec
jae
les
push
rcr
mov
movsb
in
and
gs
and
push
in
jb
push
and
push
push
or
mov
inc
fcoms
cs
cld
je
or
mov
iret
arpl
sti
cwtl
cli
test
inc
arpl
in
ret
pop
pop
pop
adc
sub
pop
leave
movb
filds
xchg
inc
jg
aaa
adc
mov
insb
daa
xor
cmp
cs
jns
mov
cmpxchg
fistpl
mov
pop
les
mov
add
dec
jg
xor
ss
add
test
nop
int3
mov
aas
add
mov
cld
inc
das
inc
stos
add
jge
cmp
jo
call
xchg
pop
jns
fcmovu
inc
mov
dec
cmpsl
movsl
sbb
mov
sub
jg
fsubrs
and
int
add
test
mov
fstpt
std
pop
pop
lret
lea
sbb
sahf
stc
bound
push
sbb
mov
mov
jmp
out
outsb
fsincos
dec
push
pop
fidivrl
sub
outsb
insl
sbb
popa
aam
push
cld
mov
jo
aas
fcoms
add
xor
stos
lods
inc
xlat
test
dec
mov
outsb
in
js
addl
sbb
pop
mov
daa
loopne
sub
aaa
sbb
or
inc
jle
dec
aas
mov
mov
addl
repz
sub
sub
adc
clc
push
int
xlat
and
movsl
jb
shrl
cld
testb
jbe
jnp
mov
adc
push
adc
sbb
addr16
cmp
cmpsb
push
and
call
push
xchg
call
or
stos
sar
dec
cld
and
nop
stc
jne
out
push
mov
jecxz
daa
mov
jno
or
test
subl
sbb
mov
loop
hlt
imul
mov
aad
adc
add
pop
inc
dec
dec
mov
test
fadd
sbb
inc
cmp
xor
out
je,pn
hlt
repnz
push
add
push
lods
or
mov
incb
jnp
ds
rcrl
loopne
sub
mov
rcrb
lea
ds
mov
std
mov
inc
cmp
hlt
bound
cmpsl
or
push
mov
dec
shll
add
xor
mov
pop
jne
mov
shll
imull
sahf
pop
mov
addl
inc
pushf
loop
and
mov
xchg
cmp
enter
push
stc
dec
lock
mov
loop
adc
adc
sbb
mov
mov
sub
hlt
shll
cmpsl
sarb
sub
cmp
jo
aad
or
pop
mov
mov
and
xor
dec
dec
stc
lcall
pusha
orb
and
sub
inc
xor
cmpb
and
mov
ret
aad
mov
cs
or
inc
shl
or
hlt
neg
adc
stos
not
shrb
mov
stos
pop
dec
jl
pop
dec
add
pop
lock
pop
inc
dec
stos
or
pushf
out
xchg
xchg
mov
sub
mov
dec
imul
add
loopne
sbb
pop
lea
enter
mov
vmwrite
shlb
pop
imul
scas
push
mov
outsl
dec
jp
mov
hlt
mov
mov
or
cmp
and
sahf
stos
out
cmp
movsl
xor
out
in
cmp
cld
loop
rorl
mov
jge
add
mov
xlat
movsl
in
in
sub
int3
mov
and
jbe
loopne
gs
pushf
clc
xchg
mov
daa
sub
mov
inc
push
fnstenv
xchg
pop
out
pop
in
or
test
xchg
sbb
or
pop
xchg
mov
or
adc
add
outsb
shlb
xchg
push
push
push
mov
inc
rorl
pop
stos
and
cmp
lret
mov
cmp
scas
cli
inc
mov
adc
inc
xor
mov
adcb
lock
shrb
or
aas
sbb
sub
clc
xor
mov
push
in
adc
outsl
or
orb
mov
out
in
out
mov
mov
cwtl
mov
insl
in
xchg
add
loope
hlt
data16
lock
inc
mov
enter
daa
lock
pop
in
mov
lock
mov
mov
fimuls
nop
sub
test
jle
xchg
shll
mov
push
jno
sub
pop
jge
inc
cmc
cld
jmp
or
adc
in
jnp
sbb
nop
add
cltd
adc
mov
sar
jg
test
je
das
mov
movsl
jecxz
mov
shrb
lds
sbb
dec
push
sub
pop
cli
mov
and
cmpsl
ds
jmp
cmpsb
mov
imul
inc
mov
sbb
mov
mov
enter
dec
jo
sub
mov
adc
lgs
out
and
push
xchg
pop
add
movl
jge
add
mov
mov
xor
mov
repnz
mov
es
faddl
pop
stos
mov
loopne
push
xchg
jb
sub
jbe
inc
cmp
adc
dec
push
xor
inc
fildll
mov
push
adc
aas
pop
loop
ficompl
inc
mov
movl
adcl
pop
mov
mov
xor
cmp
lret
lods
dec
fwait
jno
lret
int
sti
add
xchg
insl
arpl
jae
mov
mov
sbb
hlt
sbb
adc
jg
rorl
xor
mov
mov
push
xchg
hlt
sahf
mov
imul
daa
insb
dec
add
mov
add
pusha
inc
and
push
pusha
out
jbe
mov
clc
mov
rcl
xor
dec
std
pop
iret
in
or
fcmovnb
in
loope
stos
cmp
dec
add
jle
cs
xor
jne
sub
and
pop
aaa
mov
inc
push
xchg
roll
mov
or
ljmp
test
lahf
jp
inc
cmp
inc
in
cmp
loopne
rcrl
mov
adc
lahf
inc
popf
test
sub
xchg
fs
pop
gs
pop
jp
jmp
and
xor
scas
in
test
sub
pop
jno
and
or
jl
mov
mov
or
mov
rclb
call
mov
sub
sbbl
je
xchg
push
loop
xor
lds
jns
rcll
xchg
clc
in
push
add
add
outsb
mov
das
mov
inc
sti
jg
cltd
dec
insl
in
push
or
pop
pop
push
hlt
inc
mov
in
mov
adc
lock
sbb
push
add
sub
add
inc
pusha
or
jbe
dec
or
or
loop
outsl
mov
icebp
mov
gs
mov
icebp
jbe
stos
sub
mov
ss
and
or
lds
sbb
test
cmp
adc
push
popf
mov
fmull
inc
pushf
adcb
mov
push
incl
push
pop
inc
jne
ds
sbb
xor
dec
sbb
jns
dec
mov
jecxz
adc
aam
addr16
cs
dec
adc
movsl
jno
mov
xor
push
adcl
loop
xlat
add
leave
dec
xlat
sbb
sub
sbb
stc
inc
es
mov
add
test
ljmp
subb
imul
jne
push
je
xchg
aad
fwait
mov
mov
xchg
adc
xor
dec
push
sbb
int3
call
lahf
xor
or
cmp
cmp
inc
cmpsl
or
mov
sbb
mov
add
subl
add
jae
pop
sub
cltd
fisttpl
xchg
xchg
mov
jmp
xor
add
movb
pop
xchg
mov
xchg
jle
lods
aas
std
dec
inc
inc
or
xchg
packuswb
cmpb
cld
or
out
outsb
aas
rorb
dec
rolb
mov
das
jle
gs
xchg
icebp
lea
lds
jecxz
mov
and
xchg
or
sbb
cmp
neg
and
push
pop
cmp
rorl
aaa
scas
shl
lret
jne
aaa
rcl
fnstsw
fdivp
jns
lods
mov
addr16
sub
sub
mov
cmp
negb
jmp
sub
and
mov
dec
loop
push
sbb
dec
ret
dec
movl
lcall
inc
mov
dec
jnp
stc
aas
push
std
jp
incl
sub
es
xchg
idiv
jns
push
or
push
xor
lock
clc
mov
les
mov
lods
dec
jle
mov
mov
clc
jp
push
add
dec
mov
or
jo
imul
dec
pop
out
dec
add
cmovne
and
pop
pop
stos
mov
leave
mov
jmp
fxch
adc
fs
adc
addl
add
bound
add
adc
mov
sub
cmp
cmp
mov
sub
inc
imul
mov
ljmp
hlt
mov
in
ljmp
mov
test
inc
mov
add
shlb
sbb
or
leave
add
inc
mov
inc
pushf
lods
dec
lods
pop
clc
and
aas
sbb
sub
push
mov
adc
inc
mov
sbb
sub
sbb
lock
inc
icebp
add
fwait
sbb
out
sbb
movsb
xor
mov
ljmp
fnstenv
sub
sbb
stc
aaa
incl
sub
adc
iret
dec
mov
adc
out
sbb
ja
xor
mov
xchg
call
outsb
sub
incl
scas
es
and
and
aam
hlt
in
mov
ret
in
mov
sbb
repz
sahf
push
movsl
sbb
xchg
cltd
daa
xor
ljmp
bound
adc
push
fwait
lret
mov
mul
xor
adc
lods
outsb
pop
das
pop
std
filds
leave
jl
loop
pop
jno
cwtl
xchg
outsl
les
adc
and
call
xchg
cmpsl
les
mov
xlat
nop/reserved
je
movsb
xchg
das
pusha
or
incl
sbb
mov
xor
sub
lods
stos
push
loopne
mov
out
pop
sub
movsl
scas
jo
scas
mov
lods
outsl
xchg
jg
or
ljmp
cld
scas
sub
add
shl
sahf
movsb
inc
js
or
out
pop
or
aaa
jmp
popa
dec
and
mov
mov
out
fmuls
mov
decl
pop
jecxz
inc
jno
lods
repnz
stc
and
mov
aad
sub
mov
std
add
mov
adc
rorb
mov
andl
dec
shrl
dec
mov
in
xorb
les
xor
mov
insl
lcall
push
push
jge
jg
shl
mov
mov
sbb
add
aaa
fldt
jns
jg
push
pop
lahf
ljmp
cmp
sub
inc
xchg
dec
pop
fmull
mov
jg
push
xchg
sub
nop
addr16
int3
in
xchg
adc
and
sbb
cltd
test
pop
pop
cwtl
push
dec
lds
ljmp
inc
xchg
shrl
pushf
ljmp
jb
inc
outsb
loopne
adc
mov
and
add
addb
adc
dec
push
xchg
inc
test
cli
incl
pop
ret
stc
lret
sahf
iret
cltd
stc
lods
push
nop
inc
daa
cmpl
adc
add
inc
je
negl
mov
andl
jmp
pop
andb
movsl
ljmp
dec
stos
push
and
popa
sbb
mov
orl
test
mov
stos
popf
add
shlb
mov
push
or
cs
dec
adc
adc
dec
xor
aaa
cld
pushl
lock
in
or
and
push
xchg
ret
cwtl
lret
hlt
decl
testb
xor
adc
addl
mov
mov
hlt
adc
jp
ret
out
xchg
mov
jo
je
or
popl
addb
jecxz
mov
movsl
das
addl
push
jge
jg
jmp
fildll
mov
mov
adc
pop
sbb
dec
icebp
cmp
sqrtps
xor
mov
mov
sub
in
pusha
and
mov
or
inc
adc
adc
inc
cmp
mov
pushl
aam
cmpl
movswl
ficompl
es
loopne
negl
fbld
repz
mov
insl
cmc
or
iret
dec
pop
mov
cmpsl
xchg
out
xchg
xlat
mov
imul
in
cs
push
cli
sbb
sahf
in
sti
cs
mov
mov
pop
mov
cwtl
mov
movsl
jg
test
adcb
lds
push
lahf
pop
icebp
push
adc
call
iret
inc
push
sub
in
inc
lahf
add
pop
int3
push
cli
mov
xchg
pushl
std
xchg
scas
mov
out
mov
repnz
cmpl
pop
or
sub
cmp
inc
adc
mov
and
aaa
xchg
das
rclb
hlt
inc
add
mov
test
sub
cmpsb
mov
jb
cmp
lods
imul
pushl
adcl
shll
pusha
out
inc
andl
shrl
jmp
aaa
add
enter
push
iret
mov
mov
scas
out
xchg
enter
pushf
das
loope
add
lcall
data16
push
fwait
sub
lock
sbb
in
jl
ds
mov
or
push
pop
mov
sarb
xor
xchg
push
ljmp
add
out
ret
adc
xor
fadd
aam
mov
mov
pop
xchg
pop
mov
mov
xor
gs
push
fists
jl
mov
add
xlat
repz
cli
sub
outsl
xchg
leave
push
fists
in
inc
push
cld
das
pop
faddl
mov
into
jbe
mov
jns
push
mov
jo
inc
in
les
pop
mov
push
fstpt
jecxz
loopne
jp
and
inc
cmp
add
xchg
and
or
bound
mov
notb
push
dec
sbb
push
xchg
in
push
cmp
mov
sbb
or
fs
clc
das
pop
sti
push
repz
movsb
dec
push
outsl
mov
enter
cwtl
pop
xor
or
push
inc
or
sar
or
rclb
jg
aam
dec
addb
xchg
fsubl
push
mov
or
xor
ficomps
aaa
cmp
int
outsl
adc
push
cwtl
mov
mov
pusha
cmpl
inc
pop
jmp
add
jle
lcall
sti
idivb
inc
sarb
xor
jmp
dec
jle
ret
inc
jne
icebp
inc
mov
rorb
xor
jbe
jb
mov
adc
insl
jmp
movsb
add
test
jg
lea
xchg
icebp
add
sahf
sbb
push
insb
mov
add
push
fwait
scas
mov
mov
or
add
pop
mov
push
sbb
push
movsl
mull
stos
aad
sub
les
faddp
fbld
pop
push
cmp
mov
push
roll
subl
add
xchg
loopne
faddp
add
sbb
xlat
jg
add
clc
adc
xchg
cltd
push
pop
xor
and
cmpl
or
js
cmp
adc
add
add
div
icebp
dec
xor
cmpsl
cmpb
imul
and
fldl
test
aas
outsl
jmp
in
adc
ret
or
inc
push
clc
dec
mov
mov
or
add
dec
xchg
fmul
fmull
adc
jmp
pop
jmp
or
dec
mov
jnp
inc
jno
lahf
or
arpl
call
mov
adc
fcoml
into
cmp
out
add
in
sbb
fstpl
xchg
les
adc
push
test
loopne
cwtl
sahf
int3
daa
or
cmp
rorl
jg
jl
or
int3
mov
or
ret
xchg
in
clc
test
xor
daa
mov
lea
in
rorl
and
lock
movsb
js
jl
add
cli
outsb
mov
subb
mov
mov
stc
push
or
das
ffree
inc
mov
add
pop
or
call
add
arpl
sbb
gs
test
les
sub
and
outsb
outsl
xor
es
add
add
leave
test
sub
scas
sub
clc
inc
dec
sbb
cltd
clc
clc
rorb
aam
les
pop
mov
cvtdq2ps
lds
jne
adc
or
fcoml
scas
xor
stos
mov
sbb
aas
nop
call
or
sub
or
cwtl
jp
inc
out
cmp
and
mov
add
insb
mov
in
sbb
movsb
and
push
imul
fldt
xchg
out
stos
cltd
loopne
pop
cmpsb
es
add
stos
add
fstpt
pusha
shrb
out
or
xchg
jb
adc
push
std
xrelease
cmc
mov
jmp
push
iret
mov
leave
dec
scas
jmp
xor
mov
js
leave
mov
shrb
sub
mov
icebp
inc
push
xor
outsb
enter
mov
or
push
and
aaa
icebp
and
lret
dec
loopne
pusha
cs
rcrb
aas
inc
pop
push
mov
fcompl
fldl
add
cmpsl
out
jp
mov
cwtl
mov
loopne
and
rcll
jb
jmp
je
lods
and
cmc
jnp
fcoml
xchg
rcrb
out
dec
loope
outsb
jmp
jnp
testb
stc
sbb
adc
inc
ljmp
mov
lock
and
sbb
jns
add
dec
out
inc
sbb
xchg
int
cpuid
add
scas
dec
sub
je
push
aas
or
sub
adc
xlat
lods
aas
pusha
mov
in
mov
pop
outsb
cwtl
adc
les
add
pushf
or
addb
push
sub
sub
adc
sub
push
xchg
adcb
inc
fnstsw
clc
add
inc
and
dec
add
sub
test
xor
lock
idiv
mov
push
lret
add
inc
jp
fwait
mov
fnsave
pop
pushf
loop
imul
ja
cmp
or
mov
ds
adc
mov
outsb
pop
adc
and
or
and
fdivs
js
adcl
cmp
sbb
sahf
test
pop
dec
pop
je
add
rclb
dec
mov
sahf
aaa
or
sub
in
xlat
or
or
cmc
sbbb
adc
out
cli
daa
sbb
data16
sbbl
jl
mov
mov
push
nop
in
inc
shll
ljmp
pop
outsb
mov
mov
mov
adc
and
xor
arpl
je
jge
or
and
js
or
aad
mov
adc
adc
push
les
push
js
sbb
xor
icebp
nop
gs
xchg
cmp
rorl
pop
cld
jle
cmpsb
push
dec
dec
mov
jb
clc
ret
aas
pop
fdivs
push
cmpl
add
loopne
cmp
rcll
pop
icebp
add
movsl
rorl
mov
lret
add
add
mov
lods
mov
out
stos
inc
inc
ds
out
and
mov
jl
push
pop
adc
es
fmul
push
insb
push
mov
and
push
and
pop
lahf
sub
and
adc
or
inc
xor
xchg
pusha
shlb
add
jae
test
mov
inc
xchg
add
xlat
and
adc
rcrl
popf
sub
daa
mov
subb
and
nop
aam
mov
adcl
movb
mov
dec
or
xchg
push
aas
mov
cwtl
and
mov
insl
dec
jnp
cmp
stos
movsl
cmp
cwtl
je
aad
std
repnz
adc
dec
cmp
ljmp
xchg
push
xchg
imul
cmp
dec
fwait
popa
cld
sar
repnz
adc
add
arpl
in
sub
sar
negb
or
mov
insl
add
ljmp
mov
aas
arpl
sub
cli
add
out
inc
sbb
lret
pop
out
inc
negl
insl
orb
push
adc
mov
arpl
mov
aaa
mov
add
leave
mov
fistpll
test
and
je
and
and
xchg
int3
nop
push
repnz
js
loop
mov
mov
push
sub
cltd
stos
fdiv
out
sbb
jle
ss
loopne
inc
lret
adc
or
mov
sbb
fidivs
jae
add
pop
jecxz
add
push
call
dec
sbb
lahf
std
sbb
pop
pushl
sub
push
and
call
xor
je
shr
fwait
bnd
sbb
adc
jnp
iret
adc
cmp
jbe
popa
jp
lock
lahf
cld
je
aad
mov
sub
xor
dec
add
mov
iret
out
cmp
lods
cwtl
arpl
sub
mov
lahf
sahf
lea
mov
jg
subl
aaa
test
in
push
mov
loopne
hlt
jb
xchg
lods
push
or
decb
repnz
scas
jge
dec
in
jbe
jbe
adc
push
jg
lods
shll
test
jns
leave
lods
insl
outsl
les
scas
into
dec
imul
jb
in
adc
out
xchg
xor
xor
jbe
mov
xor
pop
clc
in
xchg
dec
adc
inc
jp
enter
dec
repnz
repz
add
push
cli
scas
lock
lahf
iret
or
jecxz
sub
rorl
mov
outsl
inc
imul
mov
sbb
pop
sub
into
xchg
add
mov
and
pushf
sub
sar
adc
pop
and
out
mov
inc
stos
addl
shlb
data16
je
mov
add
mov
mov
inc
cltd
int
test
fcoms
pushl
icebp
jle
lock
aas
xchg
mov
mov
cmpsb
push
mov
ljmp
insb
push
mov
addl
fstpt
movmskps
and
subb
jg
sbb
ror
pop
and
or
scas
sub
and
imul
pop
inc
cwtl
fldl
aam
call
test
testb
and
push
add
fldenv
pop
popa
test
sti
pop
fldenv
adc
shrb
pop
pop
movsw
mov
mov
pop
cld
lds
xchg
adc
push
sar
pop
mov
dec
xchg
pop
inc
movsl
nop
xor
loop
mov
aaa
jmp
ret
sbb
cli
mov
mov
lcall
dec
outsb
push
or
jne
scas
ds
je
push
scas
adc
lcall
mov
lea
popf
mov
push
call
pusha
adc
or
xchg
xor
ja
popa
mov
mov
pop
cwtl
jg
jl
movsb
mul
aaa
shl
leave
xor
add
mov
jne
sub
sub
les
jg
test
imul
rcrb
cmpsl
jl
rorl
mov
loopne
cli
rorb
and
rorb
pop
xor
fisttps
sbb
rorb
xorl
repnz
mov
shll
pusha
lock
das
mov
sbb
mov
xlat
adc
xlat
adc
cmp
gs
shll
pusha
add
xchg
stos
mov
add
int
adc
sbb
push
and
pop
stos
cmpsb
addb
rcl
std
xor
pusha
sbb
shll
arpl
fiadds
mov
adc
xorl
test
loopne
insb
jne
sbb
inc
adc
and
loop
mov
mov
orl
or
mov
inc
adc
negl
sbb
scas
ret
xor
popf
movsb
sub
mov
mov
mov
inc
push
pmulhuw
loopne
or
add
push
xchg
or
ss
adcl
pop
mov
xchg
inc
sbb
lds
adc
cmp
lock
ret
jo
ja
jne
add
push
mov
adc
xchg
push
adc
jmp
test
sub
stos
pop
ret
mov
jle
cld
sub
int3
or
adc
cltd
mov
sub
lods
jp
xor
rcll
js
in
xchg
in
icebp
movb
mov
push
xor
xor
and
sbb
xchg
xor
mov
mov
imul
or
aam
rolb
cmpb
stos
mov
sbb
fimull
pop
loope
push
repz
out
jmp
aad
daa
call
aam
iret
xchg
push
cmp
clc
xor
xor
mov
cmp
lea
xor
sbb
lock
mov
xchg
mov
mov
add
or
mov
xchg
pop
sbb
test
movsb
mov
mov
pop
lock
jmp
jmp
pop
rclb
sbb
test
inc
lock
add
out
jo
aam
sub
and
push
cmp
mov
rolb
xchg
fimuls
cmp
and
imul
xchg
pop
in
imul
mov
cltd
stos
cltd
aam
adc
hlt
repz
jp
maskmovq
negl
mov
or
in
push
test
lock
add
and
andl
outsl
xlat
push
mov
lds
filds
push
test
fidivl
dec
xor
cmp
inc
xor
mov
iret
rorb
add
cmp
pop
cmc
push
pop
out
leave
ljmp
sub
cmp
mov
insl
das
sbb
mov
in
es
aaa
and
aaa
fisubrs
icebp
stc
inc
addb
jmp
sub
test
or
inc
hlt
xlat
xchg
dec
inc
or
mov
push
or
and
add
in
jnp
mov
mov
pop
sub
fwait
xor
dec
mov
inc
imul
or
cwtl
mov
inc
adc
stc
cltd
inc
rclb
add
push
mov
out
lds
mov
mov
lret
add
xlat
decb
mov
aaa
cmp
repnz
xor
cld
fisttpll
inc
ret
mov
pop
stos
dec
add
cmc
popa
adc
mov
sbb
dec
nop
add
fmull
jne
and
dec
inc
pop
int3
add
iret
push
insb
into
jmp
notb
jns
aam
mov
arpl
sti
cmpsb
cmp
add
movsb
out
shrb
aas
xlat
jne
jg
xor
pop
je
jo
in
lods
in
das
pop
add
dec
sbbl
loop
dec
jne
mov
mov
sbb
xchg
shl
ret
mov
clc
jae
sbb
push
loope
mov
push
or
andb
mov
pop
xlat
bound
insb
xchg
cmp
ret
mov
lods
push
jne
mov
or
push
int3
sub
cli
push
aam
int3
push
jns
cmpsb
inc
hlt
mov
add
sub
fbstp
int3
add
cwtl
mov
xchg
and
icebp
or
and
push
and
sub
ror
or
pop
jae
les
jle
and
jle
test
outsb
jbe
cmp
mov
aaa
add
in
adc
cmpsb
loop
aaa
and
cmp
pop
daa
repnz
sub
and
or
cli
mov
aam
inc
ret
jo
hlt
fldl2t
int3
dec
fistpll
add
inc
lods
jnp
pop
scas
xor
cmp
outsb
pushf
into
push
mov
cmp
aad
subb
out
adc
add
inc
mov
add
inc
insl
or
xor
nop
mov
adc
cltd
mov
and
dec
and
or
ficompl
mov
or
lahf
pop
xchg
mov
movsb
xchg
rclb
adc
push
xor
jmp
xchg
lea
incl
add
loope
sti
scas
out
es
dec
xchg
sarl
sub
hlt
pop
js
dec
clc
and
std
ja
pop
lahf
nop
or
mov
stos
xchg
push
mov
jge
sbb
sub
add
jge
aaa
lcall
jmp
and
pop
inc
in
clc
xchg
loop
or
and
movsb
call
mov
pushw
test
shrl
fbstp
movl
push
xor
aad
out
gs
inc
testl
dec
std
decl
add
pop
or
xor
push
adc
jbe
lock
jbe
xchg
loope
inc
mov
in
pop
add
adc
mov
pushf
imul
fwait
sbb
or
add
cs
xor
inc
and
loopne
mov
xor
add
push
std
fucomip
mov
scas
sub
jmp
push
xchg
xchg
popf
jne
cli
scas
and
shll
fiaddl
decl
push
dec
filds
pusha
fstps
lea
aam
add
dec
adc
out
mov
mov
inc
mov
in
mov
scas
or
pop
popa
mov
movsb
pop
jg
pop
mov
and
or
movsl
shr
mov
fcmovb
mov
pop
notb
fldcw
inc
jmp
repnz
sbb
lahf
ljmp
mov
push
sbb
pop
add
or
sub
push
or
fidivrs
andb
jge
mov
mov
repz
gs
inc
je
dec
mov
xor
jg
stc
push
dec
fbld
jnp
add
mov
cmc
pushl
and
or
es
out
inc
xor
into
inc
add
mov
fimuls
sub
orl
push
adc
movhps
rcrl
push
call
add
add
aas
adc
mov
cld
jns
add
cmp
xchg
sub
daa
push
mov
push
int
repnz
sub
or
aad
inc
fwait
cmp
add
push
jo
lods
mov
hlt
add
gs
mov
les
loop
sbbl
mov
sbb
lods
and
addr16
xchg
sbb
sbb
pop
sbb
mov
jmp
or
mov
cwtl
jmp
push
ja
mov
lds
fiaddl
adc
stos
add
push
adcb
pop
repnz
mov
outsb
or
adc
call
fcompl
outsl
mov
ficoml
int
mov
lock
rcl
cmc
fwait
imul
int
sub
or
add
inc
loopne
out
adc
fcmovnb
add
push
jg
sub
pop
loopne
outsl
shlb
mov
push
mov
or
dec
movsl
test
cmp
lahf
cmp
and
ljmp
jp
dec
mov
jl
and
add
loope
sbb
jae
imul
xchg
mov
fsubrl
ljmp
sti
test
jl
push
ljmp
mov
add
adcb
popa
faddl
lea
sub
mov
out
mov
mov
divb
and
sbb
sub
shlb
add
mulb
cmp
xchg
lea
jle
mov
and
push
fstpl
add
sub
int3
mov
mov
rorl
mov
inc
add
dec
adc
imul
jl
and
push
push
inc
or
and
fisttpll
imul
loope
xchg
pop
nop
xor
push
mov
in
adc
popa
js
xchg
dec
mov
and
and
fnstsw
and
dec
push
add
adcb
mov
sarb
mov
pop
dec
mov
mov
sbb
gs
in
xchg
fwait
cmp
sahf
cmp
das
pop
test
pop
add
dec
mov
imul
jmp
das
cmpsl
mov
cmp
jle
jmp
dec
pop
sbb
pop
je
or
inc
sbb
lea
popa
jp
push
fcoms
mov
rclb
xchg
push
add
or
jb
mov
icebp
add
test
and
add
loopne
pop
aam
pop
rcll
cli
cmp
and
xor
fbstp
into
add
mov
dec
add
testl
out
gs
jle
jne
nop
insb
xor
xchg
push
inc
add
out
addl
adc
cmp
lds
mov
push
mov
leave
push
push
in
mov
stos
push
inc
insb
ret
pop
sub
push
xchg
int
sub
loopne
sbb
das
xchg
cmpsb
xchg
sub
push
xchg
sbb
jmp
pop
stc
inc
mov
mov
test
lcall
push
sbb
popa
out
add
jp
js
aad
rcr
add
int3
and
or
mov
adc
add
adc
out
mov
mov
rcrl
mov
xchg
push
adc
push
adc
outsb
insl
add
xor
dec
test
or
nop
in
test
rcrl
mov
sbb
lds
push
subl
xchg
subb
mov
and
int
xchg
push
sub
out
addr16
incl
rorb
push
xchg
in
mov
js
ljmp
rol
cld
sbb
add
loopne
pop
push
nop
mov
dec
insb
push
test
xor
sbb
loopne
sub
or
lahf
test
clc
lcall
mov
mov
loopne
push
push
mov
mov
cmc
adc
jmp
mov
or
and
mov
int
push
les
mov
pop
jne
popf
out
lret
jbe
pop
cli
movsl
call
or
imul
out
pop
lea
adc
mov
fstps
dec
add
push
pop
xchg
int
cmpsl
scas
stos
inc
pop
inc
push
subb
xchg
cmp
ss
iret
mov
fildll
mov
hlt
push
mov
push
arpl
mov
pusha
cmpb
loopne
jo
add
cmpsb
pop
jne
mov
cmovp
add
shr
dec
add
or
cld
outsl
es
outsb
sub
fidivrs
int3
fistl
loop
or
or
fcomp
sub
ljmp
fbld
adc
pushl
hlt
cmpl
or
sarb
mov
mov
loope
jnp
jmp
xor
dec
push
inc
icebp
in
es
mov
aaa
and
outsb
mov
xor
add
fstl
xor
mov
in
out
add
lahf
jecxz
add
cmc
adc
add
sub
dec
fstpt
sbb
jle
sbb
ret
bsf
call
pop
pop
adc
fidivrs
and
std
movsl
sub
je
subb
add
mov
mov
dec
clc
lahf
sbb
sub
push
pusha
std
imul
xor
and
nop
rcl
fninit
push
push
out
ljmp
fistpl
adc
add
das
fldenv
das
sbb
outsb
je
mov
push
inc
faddl
or
mov
and
or
jnp
jae
inc
addb
jg
fcmovnu
jo
add
pusha
push
outsb
cmpsb
xchg
mov
jecxz
xor
mov
pop
outsl
cmp
aad
add
fiadds
cli
ffreep
not
outsl
jge
lret
lods
fimuls
jg
stos
or
test
subb
pop
test
push
popf
mov
js
dec
push
add
test
xor
and
rcrb
orl
push
dec
cmc
dec
lods
loope
and
pushl
fdivr
test
jmp
xor
push
jge
lds
cmpsl
lcall
pusha
push
leave
push
pop
jge
ljmp
adc
sub
ret
or
bound
stos
pop
fisttpll
arpl
test
mov
xor
aad
dec
pusha
ja
notl
cmp
pop
mov
mov
pusha
es
fistps
xchg
mov
adc
popa
arpl
std
pop
inc
orb
and
or
push
lret
pop
jne
xchg
dec
sub
sti
ret
lcall
dec
adc
cmp
push
divl
test
fs
push
or
out
mov
in
outsb
dec
mov
les
add
and
sbb
cmp
sbb
inc
pushl
pop
in
in
sbb
nop
inc
mov
lock
lret
xchg
mov
jae
add
adc
stos
in
bound
loopne
imul
iret
into
rol
mov
fstpl
add
fdivrs
test
dec
ficomps
sti
mov
xchg
cmp
push
leave
stos
test
decb
dec
xor
adc
popf
loope
pop
frstor
pusha
pop
jb
push
jmp
pop
jae
iret
inc
or
mov
or
pusha
subb
hlt
js
outsl
aam
loope
xchg
push
mov
xor
sbb
mov
mov
jb
imul
jmp
sub
je
testl
sub
and
mov
ja
pop
popf
and
popf
sbb
cmpsb
push
outsl
ss
sub
mov
mov
fstpt
in
fadds
sbb
stos
dec
cmp
mov
pop
dec
adc
or
fsub
sbb
dec
pop
push
sub
adc
clc
sbb
mov
pop
fwait
insl
out
jp
cmpsb
test
sbb
lcall
mov
mov
xchg
nop
in
jecxz
mov
movsb
jo
lahf
inc
fs
mov
fimuls
adcb
mov
fdivl
es
addb
gs
inc
mov
rcrb
sub
lcall
sub
adc
stos
inc
loope
adcb
adc
ljmp
jmp
adc
clc
shlb
inc
je
imul
iret
cltd
adc
test
and
andl
movsb
fistpll
loope
stc
xchg
loop
sbb
add
leave
aam
fcomps
pop
pop
sbb
and
cld
dec
and
mov
std
sbb
adc
insb
mov
cmp
and
cmp
hlt
dec
hlt
sbb
jo
mov
jne
push
and
scas
aaa
mov
or
xlat
mov
xlat
test
out
mov
pop
xchg
pop
outsl
pop
lret
pushf
fmul
mov
xchg
mov
js
sbb
mov
rcll
jne
in
hlt
testb
imull
jle
fmuls
test
lds
cmp
fucomip
sbb
push
pop
cmp
adc
dec
in
sub
adc
and
fmuls
sbb
insl
jp
push
cmc
fistl
mov
mov
fisubrl
testb
ss
sbb
fdivrp
or
pop
add
xlat
inc
mov
movsb
enter
pop
out
jg
pop
daa
stos
cs
call
das
cld
jbe
fs
and
mov
push
jp
push
xchg
push
jmp
jnp
xor
sub
cmp
push
jmp
mov
inc
push
cmp
test
xchg
das
add
mov
pop
pop
pop
enter
cli
addr16
lods
ljmp
cs
sub
insb
aam
fistpll
mov
andl
jo
push
mov
int3
fdivr
push
push
push
jle
cmpsb
ss
inc
mov
test
jbe
movsl
ja
aas
jns
ffreep
inc
pop
ficoml
test
inc
addb
or
adc
xchg
das
flds
nop
movsb
pop
sub
mov
xchg
xchg
mov
or
inc
ss
or
adc
jne
cmpsl
fwait
loop
jecxz
jns
xchg
add
mov
adc
mov
sbb
fsubrl
pop
mov
testb
int3
test
pop
or
or
xor
loop
aad
pop
out
mov
mov
mov
jae
pop
mov
and
outsl
adc
inc
mov
or
lcall
pop
orb
shll
outsl
gs
mov
or
aad
mov
add
scas
movsl
push
subb
and
pop
or
leave
or
or
mov
xor
and
lret
mov
and
das
mov
push
sbbb
mov
es
popa
and
jbe
and
into
lock
mov
loopne
hlt
jbe
test
xchg
push
mov
inc
mov
das
xor
movsl
imul
outsl
sbb
lret
sub
lds
cli
addl
ds
jno
out
js
fs
pop
in
loop
outsl
xlat
mov
push
decl
push
divb
jp
sahf
jbe
fcmovu
call
cmp
repz
cld
test
fs
sbb
sub
call
inc
loop
mov
mov
daa
addl
addr16
movsl
push
push
outsb
add
cs
dec
rcrl
cmpsl
mov
pop
sbb
cmovbe
cmc
inc
mov
adc
cwtl
mov
jmp
rolb
cmp
mov
push
les
push
xchg
xchg
adc
outsb
out
xchg
rcrl
sub
and
or
ret
mov
add
inc
jo
lock
ljmp
sbb
mov
mov
cmpsb
pushf
dec
sbb
mov
dec
testl
add
mov
sbb
test
adc
outsl
test
test
add
filds
das
std
pop
dec
fisttpl
add
enter
adc
push
sub
mov
sbb
bound
test
pop
pop
or
xchg
and
push
xchg
ljmp
inc
insb
adc
daa
shlb
adc
or
add
rol
aas
cmc
rclb
scas
push
sub
sbb
cmpsl
or
dec
mov
dec
mov
or
or
sbb
jns
loope
lods
add
mov
hlt
push
adc
mov
data16
sub
jp
lret
pop
sbb
dec
sbb
mov
les
push
jnp
mov
std
scas
push
cmc
add
adc
fdivs
stos
sbb
ja
sbb
js
ficoml
hlt
inc
cmp
push
push
aam
imul
popf
mov
mov
test
popf
ret
ret
aad
inc
ret
mov
sbb
push
jb
and
gs
hlt
jmp
pushf
lret
test
int
sbb
int3
rorb
push
sub
nop
add
mov
sti
in
sub
dec
repz
out
pop
out
cmp
das
scas
dec
mov
sbb
loope
stos
jbe
inc
mov
pop
shrl
in
push
fnsave
rcrl
stos
ret
orb
shll
cmp
add
rolb
ljmp
push
insl
push
add
out
sub
xchg
test
out
cmp
enter
cmp
mov
sbb
lock
jns
ret
decl
sbb
xor
sbb
out
ja
movsl
outsb
inc
dec
dec
idiv
pop
fdivl
popf
mov
loope
icebp
xchg
pop
sub
cmc
or
or
push
mov
mov
sbb
and
or
jns
push
mov
sub
in
ss
adc
sbb
xchg
fcoms
sub
lods
in
addr16
push
add
pop
and
fdivrp
pop
mov
rolb
dec
nop
jp
dec
dec
cld
push
sbb
jae
int3
fistpl
mov
mov
dec
es
shrl
cmpsb
outsb
mov
mov
mov
sub
ljmp
dec
xorl
or
ret
pop
add
fimuls
pop
pusha
andl
xor
push
das
aad
gs
inc
jmp
and
jo
adc
add
jl
enter
test
scas
cmpb
or
lea
or
jp
jo
addr16
xchg
push
sbb
sbb
sub
xchg
add
les
or
adcl
loopne
arpl
adc
in
jb
or
adc
cltd
push
mov
std
and
adc
push
test
lret
pushf
lret
mov
xor
xchg
in
dec
ljmp
cmp
clc
and
out
jp
sbbb
jno
fildl
inc
jo
shll
add
notl
aas
sub
movsb
and
jle
push
xor
push
sub
roll
sbb
ss
push
add
inc
sbb
jle
push
clc
repz
dec
sbb
ljmp
add
xchg
mov
mov
mov
subb
push
mov
add
sbb
and
scas
xor
push
ljmp
lret
xchg
fisttpl
push
ja
data16
repz
and
outsl
adc
loop
lret
insb
pop
mov
push
or
cmp
cld
lret
sbb
mov
loope
faddp
sbbl
std
icebp
sub
outsl
cmp
push
cmc
hlt
repz
dec
mov
cli
nop
inc
mov
mov
pop
dec
js
iret
cmc
ret
or
mov
ss
adcl
call
sbb
mov
bound
push
mov
decb
mov
mov
cmp
imul
lea
pop
mov
xchg
idiv
lcall
imul
and
hlt
repz
loop
inc
mov
pushf
xchg
jnp
mov
shll
jge
fildll
adc
mov
or
outsb
jle
in
test
cmp
shr
dec
pushf
dec
inc
push
adc
xor
fsubrs
dec
pushf
insb
push
sbb
jg
jmp
and
jnp
add
rclb
or
cmp
xchg
adc
leave
pop
adc
js
pop
mov
sub
or
push
std
test
cmp
adc
repz
jmp
inc
pop
xchg
inc
lahf
sub
aaa
mov
pop
stos
mov
sbb
data16
xor
cmp
mov
pop
pop
sbb
xor
jecxz
sbb
pop
xchg
sbb
jp
add
mov
fwait
test
adc
mov
jnp
cmpb
xchg
sbb
and
mov
cmpsb
pop
sarl
loop
add
and
push
sbb
add
in
or
rolb
gs
mov
shll
sub
sub
mov
ret
cs
xor
ret
pop
stos
and
xchg
bound
sbb
loopne
lcall
mov
ret
xchg
call
movsl
cld
push
mov
loopne
nop
imul
hlt
fstpl
gs
clc
push
sbb
push
jle
jnp
push
in
lcall
lahf
sub
push
sub
lcall
cmpsb
add
clc
mov
jg
cli
jg
in
in
outsl
popa
inc
in
adc
outsb
xchg
adc
test
insl
cmp
jle
in
mov
addr16
iret
xchg
jmp
cmp
pushf
aas
arpl
jne
xorb
test
iret
dec
mov
push
shrb
add
mov
test
sahf
mov
inc
cmc
in
pop
mov
inc
sub
test
pop
stc
dec
je
int
add
data16
xchg
jecxz
cmp
insl
test
xchg
mov
xchg
mov
sbb
fldenv
cld
inc
clflush
pushf
push
insb
cmpb
daa
stos
push
or
outsl
xchg
lret
lds
and
cli
shll
mov
add
mov
inc
cwtl
nop
pop
cli
mov
xchg
cmp
jmp
stc
add
push
test
xchg
mov
call
xchg
div
mul
xchg
in
lahf
and
mov
xchg
lret
pushf
ffree
fwait
incb
shrb
test
test
dec
outsl
mov
add
push
jle
push
lea
fiadds
daa
das
add
leave
or
sbb
pop
push
xor
jl
push
int
inc
pop
clc
testb
mov
push
mov
pop
fistpll
xor
test
leave
mov
cli
pop
mov
shrb
sbb
jo
mull
sbb
push
rcrb
inc
pop
loopne
mov
push
push
insb
xor
and
mov
pushl
inc
faddl
movsb
push
cld
mov
jne
hlt
popf
xchg
lock
xchg
lock
cli
ja
jbe
pop
dec
shrl
out
jne
aad
mov
xor
shrb
cli
or
and
xorb
adc
mov
mov
pop
mov
xor
xchg
pop
sub
mov
add
adc
pop
mov
loopne
std
jg
sbb
pop
hlt
push
xchg
loope
out
fs
push
push
or
adc
xlat
nop
movsl
mov
out
stos
jle
std
ss
cli
mov
cmpl
mov
adc
xchg
push
cli
xor
inc
jns
int
and
ret
xlat
push
add
xchg
jle
xor
add
add
sub
inc
and
addr16
adc
call
call
decb
rcrb
fiadds
lahf
adc
rcl
mov
xchg
loop
in
jno
cmc
mov
scas
jg
mov
aas
stos
xlat
out
mov
nop
movsb
add
push
jbe
sti
push
test
jae
push
loopne
or
mov
lds
add
or
pop
pushf
imul
xchg
into
std
notb
pop
jg
movsl
mov
rolb
add
mov
jle
fnstcw
fstl
sarl
sub
dec
fcoms
adc
or
adc
add
xor
cmp
cltd
cmp
in
roll
popa
loop
or
inc
push
fiaddl
push
xchg
ljmp
add
int3
pop
fisttps
push
loope
cmpsl
testb
je
jne
shrb
movsl
shlb
test
and
call
or
das
pop
in
stc
xor
adc
pop
xor
inc
std
pop
sbb
push
in
pop
inc
xchg
movsl
mov
jo
or
xor
cltd
push
sub
daa
add
pop
pop
rep
adc
rolb
popa
adc
int
add
fdivs
into
addl
jmp
pusha
aad
xchg
pop
push
loop
loope
push
dec
sbb
push
sbb
or
add
jnp
push
int
icebp
je
hlt
mov
in
in
mov
or
lods
ficompl
add
loope
and
negb
adc
add
xchg
dec
add
dec
test
or
push
mov
les
fists
add
dec
inc
ja
adc
adc
inc
sbb
dec
and
stc
mov
in
add
or
or
popf
xlat
pop
mov
or
and
fmuls
jnp
mov
scas
push
inc
ja
xor
inc
inc
shl
mov
sub
or
es
lcall
push
xchg
sbb
add
adc
jmp
cmp
loopne
sub
inc
clc
sub
push
sbb
ss
jmp
ss
lods
nop
mov
fwait
inc
add
adcb
lods
mov
punpckldq
outsl
xor
lahf
leave
mov
jg
js
cmpsb
mov
pop
or
inc
call
xchg
cli
lcall
imul
cmpsl
addr16
push
xor
out
fbld
mov
flds
cmp
je
inc
add
cltd
mov
data16
out
fstps
xchg
mov
lret
fistpll
pop
inc
sbb
add
imul
and
and
mov
sbb
js
out
pop
mov
addb
lcall
outsl
dec
xor
addr16
sub
inc
adc
push
cltd
lock
mov
ja
pop
cld
mov
ss
mov
cld
inc
lock
rcrb
cmp
cmp
cmp
cwtl
mov
push
lods
loopne
adc
nop
out
int
pusha
jb
sub
les
xor
jbe
mov
iret
add
adc
fwait
stos
sbbl
mov
pusha
or
stc
or
aaa
mov
dec
or
jb
stos
lds
pop
orl
int
xchg
mov
xchg
aaa
out
inc
adc
loopne
pop
out
inc
aam
xchg
push
fldenv
mov
mov
dec
sub
stos
mov
into
jl
mov
cli
mov
loop
mov
lahf
inc
xor
shll
rorb
test
movd
ds
orb
mov
xchg
dec
sub
shr
xor
add
lret
into
std
ret
jne
inc
out
inc
mov
dec
icebp
test
xor
out
lcall
cld
jg
scas
xor
leave
incb
add
test
push
stc
mov
cwtl
lods
add
mov
sbb
xchg
lcall
push
and
sub
hlt
inc
outsl
fcmovnb
iret
cmp
and
add
iret
and
xor
dec
mov
lea
call
subb
out
and
loopne
cmp
push
in
outsl
sbbb
add
mov
cmp
hlt
and
sahf
xchg
icebp
roll
mov
mov
testl
repz
daa
ret
shr
add
outsb
cmc
scas
mov
test
in
scas
aaa
and
insl
aam
cmpsb
inc
pushf
sbb
xlat
sarb
out
jp
dec
test
out
int
dec
rcrb
enter
call
rolb
shlb
negb
mov
cld
jmp
gs
lcall
gs
or
xchg
popf
fcmovu
das
roll
jmp
popf
xchg
mov
mov
mov
add
lcall
call
cmp
loop
or
xchg
xor
adc
mov
push
pushf
sbb
xchg
jecxz
int3
sub
movsl
inc
add
sub
inc
mov
inc
push
lock
je
andb
or
xor
cld
add
push
xor
sbb
add
shl
or
out
add
add
daa
test
inc
mov
imul
push
stos
lret
and
add
mov
xor
or
mov
mov
and
fimull
in
sub
add
rol
mov
sbbb
xchg
in
add
or
lock
add
or
out
push
stos
push
loope
add
push
add
mov
dec
sub
cmp
aas
or
cmpsl
scas
cmpsl
mov
fldpi
int3
jne
push
mov
subl
mov
stos
lar
ss
jbe
mov
icebp
les
out
pop
pop
push
bound
out
add
loopne
lahf
cmp
push
jle
call
data16
push
adc
data16
enter
stos
pusha
mov
mov
iret
cmpsb
dec
ret
or
test
and
ficoml
fcom
int3
jp
sbb
jg
or
in
jmp
test
jb
inc
shlb
add
push
int
lods
inc
insb
xor
add
adc
pop
add
inc
daa
sub
arpl
ss
adc
rclb
pop
push
aaa
inc
fcoms
in
push
stos
outsb
inc
mov
in
or
or
inc
adc
push
out
test
mov
popa
adc
sbb
sub
fmull
leave
mov
inc
add
jns
shll
cmp
mov
popa
clc
xor
push
push
sub
mov
das
popa
add
mov
loop
mov
jbe
cltd
test
mov
bnd
jge
mov
mov
daa
xchg
push
mov
adc
jl
ljmp
mov
mov
inc
mov
fisubl
pusha
adc
mov
popf
lret
inc
shl
inc
add
add
dec
or
bound
sbb
movsl
mov
addb
mov
fstpt
fildl
cld
call
fsubrp
push
xor
inc
jg
rcrb
sub
stc
xorb
add
sub
add
or
sbb
push
je
cmpsb
pop
in
lea
adc
out
scas
xor
aam
fists
data16
push
pop
mov
jp
popf
add
jno
add
add
mov
add
adc
popf
cli
scas
hlt
pop
fs
or
push
pop
cltd
xchg
jo
adc
dec
mov
nop
mov
stos
pop
addr16
xchg
mov
test
push
mov
mov
jo
fchs
xor
rorb
test
cmp
xor
call
xor
fnsave
inc
or
pop
cltd
push
or
repnz
gs
insb
fmull
js
add
mov
shlb
mov
test
ja
sbb
pusha
and
fprem1
pop
mov
mov
mov
out
or
push
insl
xchg
push
jnp
fwait
lret
dec
xor
sahf
loopne
xlat
addr16
jae
adc
inc
push
scas
mov
adc
jl
pop
ss
js
add
sub
or
jp
and
mov
es
int
add
cmp
sub
and
or
mov
es
leave
xchg
mov
add
mov
push
and
jne
fwait
loope
dec
ja
ljmp
sbb
sti
loopne
push
xor
hlt
div
bswap
mov
sub
mov
call
add
movb
inc
push
lock
inc
sbb
dec
fwait
incl
mov
dec
std
or
fstpt
stc
inc
cmc
jecxz
mov
cmp
add
sahf
imul
int3
std
inc
push
sti
cmpsl
aaa
mov
cmc
test
push
dec
popf
loopne
dec
int
adc
jp
xorb
sbb
or
push
js
mov
call
sbb
xor
xlat
inc
add
mov
stos
and
subl
lret
lods
outsb
dec
cmp
mov
and
or
mov
xor
jecxz
movsl
shll
jl
pop
loope
push
pop
sub
ffreep
movl
mov
lods
xor
or
pop
xchg
mov
data16
dec
push
test
ljmp
mov
data16
sbb
fcomi
or
aam
adc
aas
inc
cmpsb
imul
ljmp
cwtl
mov
jle
es
sbb
insb
dec
push
cltd
lcall
jle
bswap
dec
mov
add
arpl
adc
aaa
lds
xor
enter
or
loopne
mov
mov
ret
std
xor
out
add
pop
add
lods
das
addr16
rorb
cmp
lods
mov
ret
pop
sub
cmc
lds
icebp
addb
movsl
xchg
add
sub
xchg
popa
sbbl
cli
leave
and
call
adc
push
mov
ja
aaa
xchg
lock
xchg
sub
aad
addl
add
xchg
inc
mov
push
or
mov
faddl
in
in
out
jns
cwtl
dec
pop
dec
push
add
cwtl
rolb
mov
add
shr
clc
daa
adc
sub
sti
xor
inc
test
lcall
push
cmpl
adc
add
mov
repz
out
adc
cld
stos
addr16
pop
test
inc
hlt
outsl
inc
or
sbb
popf
and
fisubl
pop
cli
push
inc
test
add
ret
dec
les
jne
cltd
mov
mov
pop
call
mov
xlat
xor
in
lcall
data16
sti
fstpt
sub
sti
xchg
lcall
fcoml
call
xchg
int
xchg
pop
jbe
rol
mov
dec
dec
cmpsb
jecxz
sti
sub
jg
movb
sub
pop
call
daa
call
pop
mov
subl
pmaddwd
mov
imul
cltd
and
jnp
pop
inc
cmp
xlat
mov
cmp
icebp
repnz
xor
out
fisubrs
fs
xlat
rcll
mov
pop
lret
adc
lcall
add
xchg
cmpsb
nop
jb
mov
push
js
adc
divb
cmp
xchg
ret
adc
cmp
cmp
ljmp
dec
addb
sub
js
shll
add
aaa
in
push
sbb
jg
je
ds
jg
or
pop
xchg
add
mov
xor
lods
jle
sub
popa
and
outsb
das
sub
mov
movsl
sbb
decl
ljmp
pop
cltd
mov
in
test
filds
popa
mov
add
xor
lock
incl
ror
jmp
push
paddb
sub
std
sub
push
mov
shll
lods
int3
cmpsl
scas
add
mov
xor
add
rcl
mov
pop
jnp
repz
outsb
pop
shll
mov
clc
fistpll
in
iret
aam
inc
gs
ret
dec
add
inc
repz
pop
mov
test
lret
add
incl
jg
cld
ret
pop
push
pop
lea
inc
mov
dec
lods
or
lret
notb
std
cld
das
xor
jg
push
imul
sbb
dec
aas
cmp
jne
mov
enter
addr16
test
add
lcall
mov
adc
inc
jno
divl
lea
ss
add
xor
dec
jg
add
xor
add
addb
rcll
sub
cmp
sub
les
sub
call
push
xchg
test
push
ja
fs
pop
add
insb
cld
in
xchg
pop
repz
adc
imul
sbb
jg
fildll
stos
inc
test
and
inc
roll
enter
test
sbb
in
dec
fstps
sub
lea
int3
xchg
lahf
jno
cld
aaa
flds
test
or
imul
add
sbb
loope
or
xor
loopne
cwtl
cmp
pop
xchg
clc
jg
lahf
pushf
mov
lcall
jne
icebp
or
or
je
lret
icebp
mov
push
inc
cmpsl
mov
sti
adc
mov
fiaddl
inc
adc
popf
mov
rcr
and
inc
sti
jecxz
sahf
jp
in
dec
or
mov
pop
pop
jg
sbb
imul
and
push
cld
cmp
add
lcall
mov
lcall
or
scas
fldt
movsl
xchg
cmc
pop
mov
jg
aas
or
es
fmuls
dec
sub
cmc
lods
fwait
iret
adc
shlb
icebp
lock
or
jmp
adc
sbb
in
pop
add
xlat
cmp
push
lods
std
mov
pop
sub
sbb
out
and
inc
inc
movsb
inc
in
add
cmp
daa
inc
adc
add
fildl
xchg
sub
aad
sbb
mov
or
hlt
mov
xorb
cli
mov
mov
fidivrl
idivb
and
movsl
in
xchg
cli
pop
mov
mov
pop
jne
push
sbb
shll
pop
out
daa
dec
pop
inc
push
cltd
pop
outsb
or
aas
push
xchg
scas
jns
or
clc
mov
xchg
iret
adc
fs
shlb
cli
test
ljmp
ds
nop
mov
call
movsb
mov
fstps
add
jp
loope
dec
and
pushf
lods
xorl
cmp
dec
fildl
cltd
dec
int
dec
mov
pop
adc
cmc
outsl
fildl
lcall
adc
fld
xchg
ljmp
adc
shlb
je
jb
cli
adc
orb
idivb
or
add
btcl
inc
std
push
dec
mov
clc
push
push
xchg
sub
leave
insl
loope
mov
inc
aam
rorb
sbb
cmp
lcall
add
push
fdivl
imul
mov
inc
dec
test
cltd
adc
push
fdivrs
out
xor
pop
sub
data16
inc
divb
sub
rclb
push
notb
and
fs
rcr
insl
rol
xlat
xor
xchg
dec
ret
das
adc
jbe
mov
or
xlat
push
mov
xor
outsl
adc
addr16
imul
add
inc
cmp
adc
ss
lock
sub
fstl
mov
aaa
mov
inc
fsub
popa
and
mov
lds
ljmp
and
mov
xlat
cs
enter
fwait
dec
les
adc
fwait
add
loop
jmp
lods
jb
jbe
data16
sub
jbe
ss
cmpl
int
mov
out
push
and
add
aam
fildll
loopne
es
adc
pop
add
fmull
mov
es
or
out
add
add
dec
cli
out
mov
neg
mov
icebp
lods
insl
xchg
or
jecxz
aaa
jbe
aaa
ja
es
cmp
repnz
jg
inc
sub
movsl
outsb
add
xor
jb
rol
inc
fs
les
movsl
out
bnd
test
pop
jp
sub
rorb
sarb
xor
movsb
imul
jle
push
jg
aad
pop
adc
push
call
ja
pop
shll
cmpsb
xlat
mov
jae
lock
test
fbstp
push
stos
cmovp
sahf
fildl
pop
loop
aam
inc
int3
xor
adc
jecxz
jo
das
ljmp
add
stos
test
stos
movsl
movsl
mov
popa
dec
fmuls
sub
mov
mov
push
jp
fistl
or
xor
mov
frstor
add
cmp
or
mov
xchg
push
mov
ror
out
ja
sahf
or
lods
pop
bound
add
mov
pushl
adc
push
or
aas
pop
lods
ret
outsl
icebp
cld
push
xchg
insb
or
loope
jp
push
cmp
xor
mov
es
arpl
mov
pmulhuw
pop
and
mov
dec
in
lock
and
dec
js
fwait
movzbl
push
sarb
cmp
pop
js
push
xor
jae
mov
dec
mov
call
lret
fwait
enter
and
cld
or
push
fisubs
xchg
lods
ljmp
icebp
aaa
std
daa
rol
faddl
out
scas
jg
mov
mov
jl
dec
fsubrl
stc
nop
mov
sub
dec
mov
mov
loope
and
dec
iret
adc
mov
xor
push
testl
push
cmc
fs
movsl
jg
push
sbb
jl
negb
pop
add
sbb
mov
sbb
shlb
and
jne
mov
rol
adc
cmp
nop
call
mov
inc
enter
adc
push
sub
mov
cltd
insb
pop
cmpsb
push
push
cli
inc
sub
mov
inc
or
das
or
sub
and
pushf
or
push
pushf
inc
dec
cmp
pcmpeqb
insl
rclb
or
sub
sub
repz
movsb
jl
cmc
xchg
hlt
pushl
rcll
outsl
les
repnz
setl
fildll
mov
call
add
stc
jl
inc
mov
mov
sub
push
mov
cwtl
ljmp
rclb
or
dec
or
cmp
pop
mov
or
push
push
push
mov
fildl
pop
cmpsl
lods
subl
das
dec
mov
dec
mov
adc
add
fstl
xchg
dec
mov
jb
insb
mov
add
loope
andb
push
pusha
or
aam
or
lock
inc
dec
inc
clc
sbb
cmp
das
clc
int3
out
pop
cmp
pop
or
int
adc
mov
cli
mov
test
lcall
jne
xlat
sbb
loopne
cmc
sub
xchg
int
mov
lock
out
test
lock
jp
or
ja
mov
fsubs
dec
hlt
movsl
push
pop
in
dec
lock
rolb
add
mov
xchg
loop
inc
je
add
or
add
add
js
xor
enter
jge
mov
cld
or
and
add
fistpl
push
ret
jae
loop
mov
fmuls
int3
jmp
pop
cmp
jae
adcb
movsl
mov
out
mov
movsb
add
xor
testb
mov
sbb
sarl
or
stos
add
lret
int3
loopne
rcl
lock
mov
test
nop
dec
adc
sbb
add
out
or
es
mov
in
cmp
and
xchg
mov
push
lret
orb
lds
cli
scas
push
sbb
or
jbe
rcrb
rclb
test
push
cli
movsl
scas
xchg
out
xor
push
xorb
inc
clc
subl
test
js
fcompl
and
in
lret
lods
shlb
stos
sub
lods
ds
mov
popa
xchg
ret
jb
ljmp
js
cmpsb
and
add
or
xlat
adc
add
aas
sub
inc
sbb
clc
and
cwtl
dec
mov
das
icebp
dec
int
adc
aam
pop
and
xchg
mov
mov
and
fistps
cmp
cmp
data16
inc
sti
dec
mov
sarl
sub
dec
iret
movsb
adc
and
cmp
call
lds
mov
sbb
sub
and
mov
jae
cmp
pop
mov
jbe
adc
xlat
aam
push
inc
push
lret
lcall
cld
mov
push
scas
shl
add
or
mov
sbb
jle
pusha
shr
ficompl
or
xchg
mov
ficoml
cmp
lret
xchg
push
test
out
loopne
add
nop
lock
mov
mov
out
mov
aas
lea
dec
xchg
mov
or
stos
js
out
sub
dec
xchg
add
mov
xor
jne
js
insl
mov
or
mov
pusha
fs
sarb
push
ljmp
js
fwait
jo
loop
stos
outsl
push
lods
testb
push
mov
dec
adc
fstpl
lods
mov
mov
dec
test
mov
cmp
mov
out
stc
cwtl
xchg
mov
push
dec
mov
add
jo
mov
js,pt
lcall
call
andl
sbb
adc
fucomip
pop
rcll
jne
or
mov
hlt
pop
cmp
jg
shl
pop
mov
in
jecxz
jmp
sti
fistps
mov
adc
and
adc
jae
adc
int3
inc
or
lods
mov
push
jp
pop
shll
mov
lods
pop
inc
dec
push
gs
mov
out
adc
xchg
mov
mov
adc
les
icebp
or
pushf
outsl
ljmp
jo
mov
xchg
sbb
cs
test
sbb
adc
sar
mov
outsl
into
cmp
xor
mov
xchg
cli
and
inc
shll
insb
out
outsb
add
adc
imul
jbe
xchg
push
inc
lret
xchg
stc
mov
sbb
in
jne
and
or
cmp
ja
push
jnp
lds
cmp
pop
cmp
ss
dec
xor
push
lods
scas
sbb
mov
or
popa
sbb
inc
in
jo
mov
sub
mov
icebp
stos
pop
clc
cli
push
or
push
imul
std
fldt
jmp
adc
lret
inc
mov
xchg
mov
mov
adc
and
loopne
lds
mov
insl
clc
lods
xchg
sub
push
out
dec
push
call
inc
inc
sbb
sub
pop
and
jmp
or
leave
xor
lret
fsubl
cs
repz
cltd
dec
stos
cwtl
push
dec
mov
in
xor
test
lret
adcl
jg
lcall
test
es
mov
dec
mov
adc
call
xchg
xchg
ret
dec
hlt
pop
pop
push
repz
bound
push
aaa
add
and
sbbl
aaa
clc
add
jl
loope
ljmp
jnp
or
xchg
into
lea
jg
rcrl
push
cld
mov
xor
shll
xor
cmp
cli
pop
test
inc
loopne
mov
fistps
lods
daa
dec
xor
call
fisubrs
jg
loope
cs
inc
mov
inc
adc
sbb
lock
inc
and
es
inc
mov
call
add
lods
pop
sub
inc
enter
sahf
add
les
adc
pushf
les
cmp
xor
rcll
sub
pusha
ss
pop
mov
hlt
test
sub
call
stos
mov
mov
push
mov
sbb
push
cmpl
push
popf
lds
int3
negb
cmpb
mov
adc
push
jge
fdivs
xlat
add
dec
add
nop
dec
inc
shll
xor
pushf
rcll
loopne
out
jnp
aam
xor
push
mov
testb
bound
push
push
nop
mov
add
add
cmp
lahf
add
and
and
mov
and
jae
or
jns
insl
fildl
jnp
fstps
adc
or
hlt
insb
aas
push
xor
mov
sbb
addr16
mov
clc
mov
push
sbbb
dec
psrlw
fwait
cmp
int3
sub
loopne
insb
mov
ret
sarb
daa
test
xorl
sub
fnstcw
sbb
mov
aam
in
mov
mov
pusha
cmp
jnp
jnp
sbb
add
sub
xor
sarl
negl
popf
js
mov
adc
push
popa
add
and
pop
and
pop
js
add
push
out
mov
xchg
loope
sti
cmp
fcoms
std
add
outsb
jecxz
or
mov
mov
loopne
xchg
sbb
dec
scas
pusha
xchg
mov
push
cmpsl
out
es
pop
inc
pop
int3
imul
ficompl
imul
je
mov
repnz
ret
push
dec
xor
fcomip
out
or
mov
fwait
dec
insb
notl
jge
in
das
lcall
sbb
sahf
cmp
mov
es
scas
pop
ds
mov
mov
lea
cmp
loope
nop
add
push
or
addl
cmc
lea
clc
sti
add
xchg
cli
lcall
add
in
xor
ret
sbb
mov
aam
inc
mov
sar
jg
mov
or
push
fnsave
push
pop
push
jmp
jg
jp
jmp
or
arpl
mov
aad
lahf
sbb
ljmp
sbb
test
sahf
loopne
cmc
sub
pop
mov
add
adc
xor
in
fildl
hlt
push
sbb
xor
adc
push
push
pop
push
xorl
cmp
insb
jge
jge
xor
push
sub
or
dec
mov
test
push
or
sbb
adc
xlat
cmp
lods
inc
jle
fwait
les
mov
mov
cmp
adc
leave
lcall
jno
add
inc
inc
movsl
std
jg
addl
sub
push
shl
stc
mov
stc
sub
outsl
or
js
notb
jl
push
dec
xor
jno
cwtl
adc
pop
mov
ret
xchg
sti
int
inc
mov
in
mov
icebp
das
inc
jbe
and
add
dec
fwait
pop
or
out
pop
mov
aas
sbb
lcall
mov
sbb
cld
pusha
insb
cmc
mov
jg
add
bound
add
or
mov
jae
lret
sbb
cwtl
xorb
sbb
cmc
add
lock
xor
jns
mov
stos
stos
sub
mov
pop
jo
outsl
inc
jl
or
loopne
sub
imulb
xor
daa
lret
incl
push
mov
push
jmp
inc
rol
mov
add
andb
cmp
ss
ss
mov
std
mov
inc
push
mov
cli
cmp
sbb
cltd
mov
outsb
mov
and
arpl
cmp
mov
aas
shlb
sub
int3
clc
outsb
test
roll
aam
adc
mov
testl
push
or
push
sbb
call
cmc
jns
adc
int
mov
inc
pop
jbe
test
lcall
sarl
push
orl
pop
fdivs
mov
dec
jecxz
fbld
fstpt
pusha
out
mov
divb
outsb
fstps
lods
mov
dec
repnz
sbb
cmp
mov
sbbb
add
or
mov
mov
cmpsl
and
pusha
subb
shll
lcall
pop
imul
cli
loop
mov
aam
mov
push
loop
adc
faddp
dec
adc
jle
fcoms
jno
mov
jne
or
mov
mov
sbb
incl
mov
adc
cmc
inc
sarl
mov
or
sbb
or
imul
cld
loopne
cmp
or
sbb
mov
das
adc
cmp
or
cmc
rorb
xchg
sbb
js
insl
add
std
and
std
inc
mov
mov
subl
dec
cwtl
adc
sbb
xor
xor
jnp
iret
out
lds
mov
mov
lahf
sbb
loope
sub
cmp
xor
test
lock
in
aas
jecxz
xor
xchg
leave
test
jmp
les
mov
mov
daa
js
xadd
flds
dec
dec
aas
loope
insl
fldcw
daa
int3
sahf
add
mov
jne
mov
add
or
adc
jle
adc
loope
insl
sti
jecxz
loop
lds
pusha
push
sbb
adc
jne
adc
sub
imull
mov
push
nop
mov
or
int3
add
incl
js
sar
cmpsb
jp
scas
pop
mov
inc
xor
aaa
xor
aad
clc
cmp
pop
imul
je
sbb
add
adc
push
negw
add
cmp
faddl
stos
addb
mov
test
adc
mov
or
jmp
mov
xor
dec
push
je
sbb
scas
sbb
push
mov
dec
xchg
outsl
movsb
push
xor
mov
lods
pop
outsl
mov
sub
popf
add
cmp
insl
das
ss
jg
mov
mov
add
xor
inc
pop
jg
hlt
inc
or
negl
cld
das
lock
inc
js
inc
daa
adc
jge
cmp
sub
add
cltd
mov
mov
enter
es
test
cld
rorl
ret
and
loope
divb
push
aaa
leave
cmp
mov
lea
mov
decl
pop
inc
lock
fistps
jge
iret
test
pop
inc
dec
ret
pop
sub
dec
sub
std
jmp
sub
mov
inc
std
test
ljmp
sub
jge
mov
push
popa
add
and
and
push
daa
test
mov
inc
jmp
sub
pop
into
sub
mov
andl
jb
add
cli
mov
loopne
inc
and
sub
or
adc
loopne
pusha
dec
lret
and
negb
cmp
or
mov
and
call
pushl
popa
adc
mov
or
sahf
stc
xchg
clc
or
cmp
add
dec
mov
ljmp
mov
mov
add
push
ds
clc
mov
push
mov
leave
gs
ss
mov
lret
push
popa
leave
jecxz
and
push
ja
sub
sbb
mov
mov
inc
or
lock
xchg
mov
je
jg
cmp
bound
push
sub
mov
in
in
mov
arpl
jne
push
dec
jne
mov
fdivrp
add
daa
push
inc
pop
repnz
jl
lock
rorb
pop
mov
pop
insl
push
jg
es
lret
ja
mov
mov
push
mov
insl
sbb
mov
mov
test
push
mov
push
sbb
mov
lods
sub
jle
pushf
test
incb
lds
push
hlt
sbb
xchg
mov
fstl
inc
outsl
das
je
and
inc
std
dec
scas
clc
mov
rcll
mov
xchg
out
int3
xchg
aam
pop
andb
or
inc
dec
xchg
or
mov
mov
pop
loopne
dec
test
add
roll
inc
cmc
jg
movsl
jnp
ret
pop
daa
push
pop
sbb
outsl
clc
xchg
loope
into
in
pop
pusha
xor
sub
or
fmul
lock
push
mov
cmpsb
add
cmp
movsl
aam
outsb
lods
mov
aam
or
test
or
dec
sbb
ljmp
mov
cmp
loopne
mov
sub
shr
shl
add
sbb
jmp
xlat
xor
xchg
push
push
xchg
or
sub
add
pop
xor
lock
jp
mov
lods
jnp
das
xlat
adc
cmp
movb
in
mov
sub
imul
popa
mov
into
jmp
insb
mov
fldl
xlat
clc
or
fst
push
adc
cmp
daa
pusha
std
inc
mov
or
jg
hlt
inc
mov
mov
mov
bound
inc
orps
mov
popf
xor
icebp
nop
adc
push
xor
sub
add
xor
inc
mov
lods
in
jge
in
cld
push
test
mov
adc
cmc
adc
push
cmpsb
je
loopne
mov
jo
shl
pop
mov
mov
test
add
insb
adc
bound
cmp
outsl
insl
add
enter
add
scas
or
push
mov
in
mov
sbb
jp
and
je
orw
dec
fiadds
mov
lret
xor
in
and
icebp
stos
mov
adc
cmp
ror
cli
cwtl
cmp
adc
jo
jo
or
or
into
jo
xor
fdivs
mov
pop
adc
int
mov
out
clc
and
dec
cld
adc
lea
pop
pop
loopne
daa
push
and
rorl
es
daa
add
in
pop
inc
xor
in
lock
mov
or
add
push
and
cmp
sbb
adc
mov
lcall
inc
stc
jg
lahf
fidivl
add
or
add
adc
xchg
clc
inc
rcrl
or
in
neg
dec
inc
xlat
pop
push
es
out
mov
push
cmp
in
insl
xchg
and
cmp
mov
call
xor
xchg
sbb
fwait
in
mov
mov
mov
mov
sbb
sub
pop
lret
mov
mov
inc
daa
adc
inc
xchg
pop
xchg
imul
adc
rclb
jbe
add
movsl
inc
popa
xor
push
les
inc
adcb
bound
movsb
stos
aaa
push
xor
test
inc
or
test
xchg
cltd
arpl
aam
xor
push
jno
mov
ret
movsb
loopne
xchg
das
cwtl
iret
pop
scas
in
outsl
add
and
filds
adc
cmp
sbb
aas
pop
stos
sbb
add
xlat
mov
scas
test
dec
and
sbb
loopne
subl
dec
adc
bsf
xchg
int
or
inc
rorb
dec
push
add
fisubrs
inc
shlb
sti
bnd
mov
jl
xchg
lcall
int3
push
mov
sbb
jle
in
testb
mov
inc
pop
hlt
adc
in
pop
adc
or
sahf
and
clc
and
jno
push
jnp
ficoms
mov
std
ds
dec
xchg
inc
sub
xor
dec
mov
adc
femms
push
out
lods
jle
dec
sbb
mov
push
les
xor
or
and
cld
cmp
insb
jo
insl
das
stos
xlat
cld
outsl
mov
test
xchg
roll
inc
gs
cs
and
int3
sub
lds
or
scas
in
adc
mov
mov
ljmp
sbb
loop
dec
xchg
out
jb
pushf
push
jno
xchg
dec
mov
es
dec
insb
pop
and
xchg
movsb
cmp
das
jo
cs
push
and
lods
adc
push
loop
sbb
test
fistl
adc
lret
nop
adc
adc
sbb
jne
cmpsl
or
fadd
decl
dec
dec
or
dec
sbb
stos
or
mov
sub
lret
int
pop
push
incb
test
push
dec
xlat
cmpsb
cld
in
ret
pop
inc
inc
aam
adc
ss
sub
fdivrs
xchg
mov
or
out
into
fimull
das
jl
cmpsl
gs
xchg
sarl
clc
pop
mov
hlt
test
ret
dec
notl
pop
outsb
pop
sbb
pop
movsl
fcmovnbe
movsb
aaa
xor
pop
lods
mov
sub
and
lods
ja
cld
mov
mov
jo
xchg
or
cmp
mov
lock
es
in
movb
mov
mov
ret
insb
jmp
stos
loope
mov
and
inc
mov
and
dec
imul
jle
call
dec
add
rolb
dec
mov
int3
mov
icebp
jo
jo
aas
cmp
dec
push
or
clc
add
mov
mov
dec
ds
dec
inc
call
fs
leave
mov
dec
mov
rorl
test
add
mov
pop
loop
sub
mov
jg
push
mov
addr16
jg
and
or
sub
cli
subl
dec
rcrb
jnp
fldenv
pop
clc
test
sbb
push
push
mov
and
ret
or
fdivs
ljmp
mov
mov
repnz
test
pop
jle
aas
incl
lds
cwtl
and
xchg
ljmp
enter
or
or
pop
subb
pop
xchg
sbbb
jns
mov
inc
sub
pop
sbb
xor
mov
inc
outsl
xchg
outsl
imul
das
mov
arpl
push
mov
outsl
in
lds
mov
sti
or
sahf
cltd
cmp
mov
sti
sbb
in
cltd
xor
sub
xor
or
call
dec
movsl
or
push
fidivrl
cmp
movzbl
mov
xor
test
test
outsl
add
fisubl
pop
loop
jle
mov
je
hlt
sahf
xchg
repnz
cmp
jg
int
pop
imul
ffreep
push
rcrl
add
push
inc
or
test
jge
push
ret
adc
add
xchg
clc
sti
or
lock
pusha
mov
test
outsb
cmp
lcall
aad
xchg
fisubl
adc
or
add
and
cli
fdivs
out
loopne
js
test
inc
lahf
jl
in
sbb
and
mov
cmp
stc
or
cmp
or
push
jge
outsl
lahf
stos
enter
inc
jmp
ret
push
sub
add
xchg
mov
sub
pop
push
call
inc
sbb
ja
or
pop
pop
jbe
lods
popa
orl
xchg
pop
inc
sbbb
lods
sub
push
or
cmc
lods
std
inc
inc
inc
xor
jo
jbe
pop
and
in
mov
imul
mov
push
mov
out
mov
hlt
cmp
int
push
daa
arpl
icebp
pop
mov
lahf
dec
shl
and
test
cmp
mov
sub
mov
adc
aad
cmp
and
jl
jg
cmp
stos
adc
mov
mov
sbb
testl
jp
cmc
aaa
out
ljmp
dec
mov
stos
pcmpgtd
ret
call
jle
add
dec
or
xchg
pusha
sar
fcomps
jg
std
pushl
stos
mov
cmp
xchg
into
and
out
sub
mov
outsl
popa
pop
sbb
dec
fs
loopne
or
mov
dec
enter
mov
mov
push
pop
outsl
and
sbb
fdivr
lods
lea
test
add
call
ret
loope
adc
imul
dec
pop
insl
jo
sti
jg
ss
out
lock
gs
mov
xor
outsl
insb
std
aaa
push
or
pop
rcll
adc
push
movsl
and
out
call
add
mov
fdivr
divb
add
inc
push
add
sbb
ds
push
cld
std
sbbb
add
je
sub
sbb
jbe
sbb
inc
out
mov
mov
cli
cwtl
icebp
mov
mov
adc
mov
xor
mov
pop
dec
je
xor
add
xor
adc
sbb
add
or
xor
rorl
push
sub
fdivrs
xor
cwtl
mov
mov
mov
sti
add
or
mov
decl
mov
je
inc
mov
jl
clc
mov
outsb
xlat
sub
push
sti
das
sbb
std
scas
gs
loope
mov
fldt
xchg
loope
jg
out
dec
xchg
cmp
push
rolb
imul
xchg
das
cld
ja
lret
adc
or
xchg
movsl
in
bound
mov
cmpsb
sub
popf
je
adc
mov
xchg
out
mov
ret
push
hlt
hlt
jmp
in
jae
pop
xlat
xor
sahf
xor
call
mulb
nop
dec
pop
or
stos
lds
xchg
sub
mov
or
or
adc
add
das
ficoml
add
imul
dec
ds
pop
mov
or
adc
ljmp
fcmovnu
fisttps
leave
loope
outsb
lahf
call
cmc
mov
imul
fstps
test
lret
dec
je
clc
das
dec
inc
popa
add
mov
decl
dec
ljmp
aas
sbb
daa
lret
mov
fdivs
pusha
add
call
dec
lret
in
aas
sbb
pop
loopne
cltd
add
xor
inc
xor
pop
cmpsb
cmpsb
push
pop
stc
cltd
or
test
inc
mov
xchg
adc
dec
sub
jl
mov
aad
ljmp
shl
call
adc
xor
mov
add
jp
aas
dec
ja
inc
lahf
inc
mov
movl
pop
jecxz
sub
movsb
dec
or
popf
jp
jle
mov
sub
in
add
add
mov
lret
lea
stos
cld
insl
adc
adc
xchg
fwait
add
or
push
rcll
sub
aas
xchg
cmp
cwtl
mov
loope
dec
inc
lea
xor
scas
pop
push
iret
dec
cld
inc
mov
xlat
mov
dec
or
out
incl
ret
cld
push
add
call
or
adc
outsb
lcall
or
std
or
inc
pop
inc
pop
scas
mov
wrmsr
lcall
or
rsm
or
xlat
mov
mov
aaa
cmp
cld
pop
notl
or
xor
and
inc
xchg
test
add
xchg
dec
add
mov
inc
std
sub
stos
fistl
call
sti
inc
pusha
sub
sub
mov
dec
js
jnp
push
test
sti
loopne
fstpl
push
outsl
cmp
outsb
sub
dec
cmp
and
call
mov
push
jg
movd
mov
jmp
pop
out
push
scas
push
and
mov
mov
adc
push
clc
sbb
sub
or
jg
add
jmp
xlat
mov
adc
mov
add
pop
add
adc
or
rorl
jno
pop
xchg
adc
subl
push
jecxz
push
pop
lea
sub
inc
mov
stos
stos
pop
mov
pop
rcr
sbb
jo
xchg
jns
aam
dec
jne
push
shr
shr
mov
or
clc
add
or
jo
mov
or
jbe
push
loope
and
mov
xor
sub
out
flds
or
std
mov
cmp
inc
out
pop
pusha
filds
mov
out
xchg
xchg
in
call
mov
or
cmp
loopne
stos
or
adc
mov
and
mov
mov
inc
outsl
popf
cmc
lea
mov
mov
incl
popa
sub
push
mov
inc
pop
scas
fwait
stos
xor
popl
dec
inc
sbb
ret
push
or
push
add
adc
mov
push
icebp
jg
jne
and
out
or
ljmp
and
mov
xchg
icebp
aaa
stos
fisttps
add
out
dec
jge
push
mov
test
xor
xor
clc
dec
xorl
push
xchg
clc
xchg
pop
pusha
out
dec
sub
xor
fbstp
xchg
test
out
mov
rorb
and
lret
test
aam
loopne
mov
loope
mov
push
mov
mov
push
repnz
mov
sti
lods
nop
ds
inc
popf
movsb
ja
or
push
push
fildl
push
push
clc
sbb
push
insl
xchg
mov
inc
sti
testb
lea
push
test
clc
mov
dec
jp
int3
js
std
sub
insl
adc
xchg
mov
cmp
or
pushl
clc
mov
sub
inc
iret
les
sti
and
adc
dec
jg
pop
pop
xor
ss
clc
out
ljmp
test
leave
mov
dec
sub
outsl
jnp
and
decb
mov
ds
pop
rclb
jbe
or
sub
out
imul
push
jge
test
inc
dec
stos
sub
mov
adc
inc
jns
loope
lds
sbb
adc
jno
sbb
les
fsubs
or
cld
mov
mov
aam
push
xor
pop
xchg
mov
jo
leave
dec
repz
mov
mov
adc
inc
pop
or
lea
push
cmp
adc
push
or
addr16
add
repnz
cmp
fst
sbb
daa
adc
shl
int3
push
clc
jmp
negl
mov
push
mov
cmp
pushf
in
andb
fbld
fimuls
pop
xor
adc
cmovno
push
lahf
rorb
mov
mov
mov
cmp
lret
lds
or
adc
scas
std
pushl
lea
nop
cmp
rcrb
pusha
data16
ja
movsl
shll
sbb
cmp
cmc
call
mov
popa
es
and
out
sub
dec
fisttpl
scas
sahf
mov
dec
outsl
dec
daa
movsl
add
push
fwait
pop
jecxz
shl
pop
mov
out
cwtl
cmpb
mov
js
cmp
sub
andb
inc
mov
mov
dec
push
adc
in
and
les
add
ds
rol
or
sbb
movsl
cmp
mov
out
loope
movsl
sub
out
leave
fistpll
and
fisttpll
ss
cmpsl
inc
fisubs
aam
mov
push
inc
mov
movsl
repnz
mov
test
pop
add
sahf
aas
into
lock
stc
xchg
lock
clc
and
popa
mov
or
pop
inc
jl
dec
imul
or
push
dec
mov
mov
outsl
test
mov
and
push
shlb
jnp
pop
dec
adc
lea
leave
test
push
outsl
sbb
mov
stos
fcmovnu
sbb
sbb
lods
xor
lcall
xlat
inc
shl
jmp
clc
ret
cmp
fsubs
sub
add
aam
push
mov
rcrb
dec
push
inc
cmp
push
frstor
or
jmp
stos
add
push
dec
cmp
pop
ret
iret
adc
add
mov
lods
cs
and
loopew
fs
xchg
sub
and
ja
aad
adc
fwait
andl
daa
bound
xchg
or
mov
inc
cmp
and
adc
lods
outsb
adc
movsl
push
inc
int
jecxz
jnp
stos
xchg
popf
test
xor
adc
les
cwtl
fwait
out
dec
pop
outsb
cmp
sbb
xor
call
shlb
or
add
je
dec
fs
push
pop
shll
lods
add
jg
pop
sbb
test
cmpl
adc
sub
sub
push
sbb
orl
mov
nop
xchg
flds
sbb
arpl
sub
aam
mov
ret
dec
sbb
dec
xor
loopne
nop
mov
nop
pusha
push
dec
outsl
lcall
les
out
inc
pop
in
mov
lcall
fists
out
imulb
stc
ret
lds
gs
jno
or
mov
outsb
pop
inc
fistpll
imul
dec
push
adc
push
das
fdivr
jmp
xchg
xchg
cmp
xchg
inc
lods
lods
divb
mov
lods
inc
fidivrs
adc
jno
lods
fimull
vsubps
data16
into
fcomp
add
js
push
frstor
out
out
inc
push
and
fucomip
mov
test
fcmovb
mov
std
dec
pusha
inc
push
push
into
cmp
test
popf
shlb
sbb
push
test
int3
out
mov
cwtl
add
cmc
and
lods
pop
mov
sub
mov
outsb
je
aam
popf
inc
inc
in
inc
xchg
xchg
fucomip
outsl
push
lods
inc
jnp
xchg
imul
movsb
xor
pop
rolb
xchg
cli
mov
test
xor
fwait
mov
inc
mov
sbb
mov
inc
fsubs
gs
mov
and
cmc
clc
fdivs
sub
jge
mov
into
je
jl
mov
dec
fadd
xchg
cmc
sbb
int3
mov
jg
aaa
repnz
adc
xchg
aam
adc
scas
sub
leave
mov
or
sbb
mov
mov
add
movsl
in
mov
xchg
mov
lcall
mov
scas
push
jb
incl
pop
push
xchg
mov
sub
movsb
out
out
sbb
bound
addr16
xor
push
pop
call
hlt
jmp
adc
out
adc
push
repz
call
mov
lea
cltd
loop
mov
loop
loopne
lcall
mov
mov
pop
add
lods
aaa
sub
push
sub
push
loopne
mov
or
test
pop
inc
mov
ret
dec
mov
jb
decl
insl
or
clc
movsl
insl
pop
adc
jb
cltd
aam
jge
jae
sbb
xor
and
adc
jl
lea
shrl
mov
mov
es
xchg
lret
mov
mov
clc
jnp
sbb
adc
pop
xor
fisubs
push
shrl
stos
pusha
aaa
js
pop
pop
mov
fwait
imul
add
pusha
fistl
and
xor
mov
xchg
sub
rol
cmp
mov
int3
out
mov
adc
decl
cld
mov
mov
imul
aam
cmp
int
inc
fbld
les
loopne
inc
or
and
sub
and
fwait
orb
bound
mov
incl
addr16
lock
movsb
adc
inc
sub
fstpl
sbb
add
mov
cmp
fwait
mov
frstor
mov
stos
mov
es
mov
cmp
adc
xor
add
pop
mov
mov
les
lods
pop
sub
cmp
inc
sub
xchg
dec
or
mov
addr16
adc
incb
cmc
push
mov
ficoms
dec
inc
insb
rorb
sbb
xorl
inc
lock
and
mov
mov
or
sbb
add
and
mov
test
dec
rolb
dec
xor
fldl
inc
adc
insl
sbb
std
adc
and
inc
cmp
mov
je
mov
add
mov
mov
hlt
rorb
adc
sti
jle
cmpb
add
or
xor
xchg
std
pop
and
add
and
and
js
enter
pop
inc
sbb
mov
dec
push
push
loopne
js
ret
pop
hlt
inc
icebp
cmp
jbe
or
shr
cmp
jb
movsl
icebp
mov
int
lds
movsl
mov
adc
add
inc
push
jl
xor
or
mov
mov
sarb
sahf
xor
ljmp
mov
ss
or
daa
filds
faddl
xlat
sti
jl
stos
es
mov
jno
lock
fiadds
xor
jno
scas
and
jns
mov
sub
and
or
push
lea
xor
ja
popa
inc
insb
std
mov
loop
add
sar
and
ja
lret
adc
pusha
imul
push
push
int3
mov
mov
xor
xchg
ljmp
ss
adc
daa
cmpsl
call
nop
repnz
pop
aad
andb
cmp
cmp
push
hlt
fnstsw
add
push
jno
add
dec
cwtl
cld
mov
xor
aam
stos
sub
insb
outsl
sbb
inc
xchg
sub
add
sahf
mov
negb
sub
adc
dec
dec
repz
popf
ret
mov
scas
stos
sbb
test
lcall
and
mov
inc
pop
std
and
push
and
notb
xchg
xor
pop
sbb
inc
imul
and
and
lea
ljmp
lds
repnz
daa
jb
xchg
sub
or
pop
jle
mov
xor
adc
xchg
jg
mov
ret
mov
je
cld
lea
add
xchg
push
ss
jmp
in
loop
pushf
clc
xchg
aad
popf
jbe
inc
jg
push
insb
ud0
xlat
sbb
lods
fcmovnu
std
xchg
jecxz
xor
mov
lds
aas
andl
incl
inc
or
add
xchg
jle
jne
or
hlt
jnp
filds
sahf
add
mov
mov
loopne
jo
roll
andb
shll
inc
inc
inc
fsubrl
int3
test
push
pop
sbb
test
mov
loop
cld
leave
call
int
pop
test
pusha
and
push
xor
jecxz
orl
add
mov
xor
mov
cli
pop
leave
fisubs
stos
sub
add
xor
arpl
fsubrl
mov
sbb
fucomi
mov
mov
and
mov
cmpsl
pop
out
push
lock
pop
inc
out
lcall
xor
push
jge
dec
testb
addl
push
fidivs
jns
xor
and
inc
jnp
and
jae
dec
lock
jne
sub
int3
pop
loop
xchg
adc
and
ss
out
xchg
lods
sbb
jge
out
sbb
xchg
int3
push
cld
add
xor
dec
mov
sub
repz
push
push
jo
fisttpll
hlt
aam
add
pop
push
push
ljmp
loop
roll
pmullw
mov
dec
sbb
push
loope
and
sbb
addb
push
cmpsb
dec
aaa
sub
pop
dec
divl
cmp
lcall
shll
sbb
add
movsl
outsb
pop
and
scas
adc
adc
adc
frstor
xlat
leave
push
addw
or
sub
dec
movups
ficoml
inc
and
pop
test
xlat
addb
xor
and
lret
sbb
mov
push
dec
or
or
and
dec
mov
add
adc
test
sbb
mov
xchg
mov
inc
push
loop
into
inc
adc
push
stos
add
push
out
sbb
ljmp
outsl
mov
dec
push
sbb
rolb
aad
loope
add
lcall
orl
cmp
lock
int
mov
or
jne
ret
orl
pop
orb
mov
push
in
or
loope
pop
push
push
jne
inc
xor
ret
jle
ja
adc
add
or
icebp
ret
js
or
or
rsm
inc
or
mov
fildl
add
push
jle
adc
test
aaa
ja
sbb
int3
sbb
or
lock
cmp
insb
push
sarb
mov
fisubl
cmp
adc
inc
cs
xlat
pop
mov
inc
into
and
adc
jno
inc
xchg
adc
sbb
andb
dec
add
mov
stos
out
nop
data16
or
fldenv
mov
mov
xor
sbb
add
jle
out
test
push
or
clc
mov
imul
je
push
in
mov
xor
adc
arpl
cmp
jl
loop
jge
shlb
test
int
add
cmp
sbb
mov
add
add
lea
enter
pop
pop
cltd
sub
out
adc
or
pushl
lcall
out
cmp
ljmp
add
roll
mov
and
and
mov
cmp
scas
pop
and
ljmp
push
movups
aad
inc
dec
mov
inc
dec
movsb
sub
imul
test
or
dec
and
arpl
popa
push
cmpsl
iret
or
lods
push
mov
push
xor
mov
sub
cmp
push
inc
mov
inc
dec
or
push
js
and
push
adc
inc
mov
jmp
xor
dec
repnz
and
lds
stos
or
and
in
push
fisttpll
add
adc
pop
mov
add
stc
or
or
adc
shr
cmp
adc
xchg
sub
cmp
mov
lock
pop
repnz
sarb
inc
mov
rcll
outsl
fwait
repnz
jp
pusha
cmp
pop
dec
insl
cs
jo
mov
and
in
lds
adc
inc
dec
mov
adc
add
fwait
sbb
lret
dec
push
sbb
call
dec
fstps
test
xchg
adc
das
lds
or
mov
push
push
lds
push
pop
jmp
call
mov
ljmp
lret
push
jbe
movl
js
daa
popa
add
in
daa
push
inc
test
inc
push
mov
sub
mov
sub
add
pop
rcrl
inc
jmp
scas
jns
mov
or
enter
and
and
out
add
mov
jo
dec
adc
and
aaa
mov
outsb
leave
jge
cmp
mov
ror
and
push
sub
mov
incl
fisttps
cld
fldenv
je
add
dec
mov
and
cwtl
mov
push
sarb
rclb
dec
or
and
ret
cld
xchg
fisttpl
aam
mov
or
adc
add
std
das
adc
pop
add
daa
mov
cmp
pop
ret
add
out
push
or
mov
in
or
lcall
add
aas
outsl
sbb
ss
lea
mov
pushl
add
test
pop
imul
jbe
fldpi
pushf
xchg
mov
cmp
dec
in
mov
or
and
shl
sbb
push
outsl
call
dec
bound
scas
hlt
push
add
adc
mov
fwait
add
mov
subb
ret
inc
add
fdivl
sbb
mov
adc
aaa
cli
and
xor
cs
pop
sahf
cmp
xor
pop
stos
dec
shrb
or
jmp
inc
aad
inc
sub
cmp
lahf
mov
mov
add
movsb
jg
mov
inc
mov
mov
enter
adc
pop
push
insl
movsb
dec
vpaddw
jecxz
pop
sbb
or
and
and
add
pop
mov
ret
mov
movsl
arpl
addl
mov
xchg
call
inc
ja
test
mov
mov
push
mov
xor
sub
enter
daa
jb
incl
cmc
das
push
movsl
xchg
jle
or
mov
pop
clc
sti
cmp
ljmp
adc
mov
js
mov
inc
insb
cld
and
pop
or
xchg
cltd
aas
std
fwait
and
aas
bound
inc
pusha
xor
mov
sahf
inc
push
orb
adcb
fcomip
or
sub
jp
mov
outsb
dec
mov
adc
or
aaa
lret
add
push
lea
cld
sbb
cmpsb
mov
loop
rorb
dec
into
push
sub
jle
sar
push
pop
sahf
and
mov
cltd
adcb
adc
rclb
mov
out
decl
stos
mov
iret
fldenv
or
adc
xor
aaa
adc
pop
ljmp
mov
std
or
insl
adc
push
pop
and
pop
xor
lea
mov
sar
jge
xor
js
ret
adc
pop
mov
in
cwtl
jle
dec
sarl
xchg
cld
and
insl
xchg
mov
repnz
insl
cmc
sub
rorl
out
mov
scas
inc
rolb
adc
sbb
stos
rcll
inc
test
sti
push
mov
push
mov
inc
xchg
rcll
test
inc
sbb
adc
fwait
push
loopne
loop
inc
adcl
and
ret
mov
das
jb
xchg
adc
aas
std
dec
pop
cli
rorb
jb
pop
iret
add
push
mov
addr16
inc
sub
decl
adc
mov
out
sub
dec
fisttpll
mov
in
adc
jmp
hlt
pop
popf
out
xchg
stc
and
pop
aad
push
push
ja
mov
test
add
in
fnstsw
fistpl
in
ljmp
mov
sub
scas
call
outsl
push
push
int3
xor
cmpsl
push
ret
in
stc
xchg
xor
jl
clc
mov
js
andb
push
adc
push
ja
or
cld
in
mov
out
add
test
fbstp
add
inc
in
cmp
cli
cltd
cmp
pop
mov
cmpb
psllq
outsl
fimuls
add
arpl
pop
xchg
mov
xchg
push
mov
push
movsb
adc
outsl
sarb
push
sub
lea
pop
test
cmp
mov
outsl
call
inc
fldcw
add
add
out
nop
push
cs
fdivr
jno
or
or
cmc
mov
or
or
dec
inc
sbb
cwtl
or
mov
incl
jmp
dec
int
hlt
sub
or
push
fcomp
push
icebp
jp
add
nop
test
or
stos
push
mov
stos
add
push
xor
fadd
adc
or
xor
aam
rorl
dec
push
cmp
adc
add
xchg
or
popf
mov
inc
inc
inc
mov
mov
aaa
dec
enter
sbb
inc
mov
out
test
fsubrs
mov
add
push
fdiv
stos
inc
xchg
mov
cmp
mov
in
inc
fmuls
cmc
inc
bound
sub
out
into
cmp
or
pop
daa
movsb
cwtl
jo
inc
add
addr16
xchg
pop
sbb
push
mov
add
adc
test
fwait
cmp
jp
or
fcmove
js
test
jo
loop
or
pop
invd
xchg
and
aaa
dec
enter
or
ret
xor
loopne,pt
in
mov
sarl
xor
pop
std
add
ret
cwtl
sbb
push
push
aam
lret
addb
jno
les
ss
mov
mov
push
xchg
xor
dec
pop
sbb
mov
mov
mov
loopne
add
sbb
adc
lret
shll
rorb
sub
mov
xchg
fsub
pop
js
mov
pop
lock
js
mov
cmpsl
jmp
cmp
stos
enter
and
scas
sbb
sbb
xor
sbb
data16
repz
inc
inc
inc
sarb
and
jo
pop
in
xor
jno
ss
out
cmp
dec
push
sbb
inc
jg
add
inc
xor
sbb
add
out
iret
jns
fbstp
mov
dec
mov
cmpsl
rcr
loope
jo
sub
shrl
jne
sar
inc
aas
push
cli
repz
sbb
xor
andps
or
insl
fyl2x
mov
mov
cmp
and
inc
adc
ljmp
add
sub
out
sbb
shll
add
push
mull
test
incb
and
out
cmp
cmp
aam
add
clc
jg
jo
rcrb
sbb
push
fisubs
sti
insb
mov
out
cmp
add
sub
jecxz
xchg
dec
addb
stc
pop
std
xchg
nop
or
shl
xor
loopne
nop
cli
and
fstpl
or
mov
mov
cmc
imul
les
mov
xor
mov
es
and
aam
into
jne
add
push
inc
arpl
jbe
shr
pop
nop
pop
or
mov
mov
xlat
sbb
push
xchg
or
adc
push
int3
es
loop
popa
sbbb
and
pop
push
pop
repz
mov
jmp
mov
mov
push
sub
jne
mov
in
and
add
add
xchg
nop
jnp
inc
popf
sub
movsl
sbb
or
adc
pop
sub
sub
dec
jbe
aaa
ss
mov
mov
mov
mov
push
push
pop
dec
mov
icebp
and
sbb
movsl
mov
das
fwait
xor
test
mov
rolb
mov
push
hlt
or
xchg
imul
add
adc
cltd
push
push
aaa
and
mov
sahf
add
clc
sbb
nop
push
inc
jl
cltd
pop
outsl
sub
mov
sbb
inc
xchg
mov
andb
add
test
aam
adc
arpl
xor
cmpsb
jle
jge
js
mov
pop
lret
shr
push
lds
jg
decl
mov
mov
outsb
push
sbb
jg
out
mov
je
or
pop
cld
pop
je
and
pop
cmc
sub
arpl
insb
bound
add
scas
call
adc
push
cld
pusha
dec
sub
cs
pusha
xchg
sbb
mov
sbb
out
repz
mov
pop
xor
push
test
pop
jnp
test
adc
aad
mov
xor
mov
pushf
push
or
inc
pusha
ret
sub
jmp
js
loope
ds
xlat
ficompl
test
add
add
sbb
xor
cmpsb
pop
sub
shl
cmp
gs
jbe
int3
jle
aam
divb
xor
insb
sub
push
dec
xchg
mov
ljmp
dec
aam
mov
aas
push
sbb
inc
daa
rol
push
mov
lahf
xchg
lret
pusha
mov
inc
les
dec
dec
inc
dec
in
or
fstpt
adc
push
xor
push
rorb
jne
lea
in
ds
out
mov
pop
sbb
mov
mov
lds
mov
cmp
cwtl
cmp
ret
xchg
jl
adc
mov
sbb
ret
jbe
rolb
and
inc
outsl
push
mov
pop
adc
nop
mov
loop
fs
fucom
cltd
xchg
cltd
xor
js
cmc
xor
icebp
shl
pop
int
dec
fwait
ja
sbb
das
int
jns
test
add
outsl
dec
in
dec
pop
cli
out
adc
mov
das
sbb
jmp
ror
mov
sbb
cmp
dec
rol
out
addr16
sbb
mov
cwtl
cltd
aam
andl
stos
xorl
xchg
mov
mov
clc
outsl
ljmp
cmp
jns
and
icebp
lea
add
andb
arpl
das
sbb
repnz
dec
pop
popf
cld
stos
test
test
or
cmp
mov
aas
inc
xor
push
jp
repz
loope
aad
inc
je
dec
adc
int3
bound
push
je
out
jp
test
sub
cvtps2pi
sbb
mov
cmp
popa
popa
mov
adc
jle
jecxz
fiaddl
fdivs
push
adc
cmc
stos
xchg
xchg
sbb
aas
xchg
cmp
adc
jl
add
dec
call
and
sub
add
fucomp
js
sbb
movb
adc
popf
adc
icebp
push
push
pop
cmp
cmpsb
and
aaa
cmp
les
sub
dec
push
pop
adc
test
dec
movsb
test
xchg
xor
std
or
cmp
aas
into
sarl
pop
stc
pop
flds
sbbl
insl
hlt
inc
cmpsb
addr16
xchg
stc
jg
push
sub
dec
cmc
add
mov
outsb
pop
mov
mov
leave
aaa
sub
xor
loop
push
jnp
cmc
sti
push
adc
ret
sub
fbld
push
push
mov
sahf
mov
mov
inc
bound
adc
mov
addl
mov
inc
cmp
stc
xor
pop
push
add
mov
sub
rolb
mov
inc
jge
sub
loop
outsb
pop
rorb
or
push
add
lcall
xor
xor
xchg
or
aaa
xor
loop
adc
aam
or
mov
inc
call
xor
rcrl
mov
shll
nop
mov
xorl
in
inc
inc
inc
jb
and
leave
add
cld
js
xchg
dec
imul
mov
mov
fsubl
mov
inc
popf
dec
push
mov
xchg
adc
je
sbb
int
ja
call
or
sub
push
jo
sub
dec
and
xchg
xor
cmpsb
icebp
dec
and
jae
rcl
fiaddl
fsubp
enter
xchg
dec
xchg
sbb
mov
sub
push
xchg
add
mov
add
dec
loopne
cmp
mov
sbbb
add
cs
cmp
enter
decl
test
cmp
mov
gs
lods
lret
jb
add
xor
adc
sbb
inc
mov
bound
xchg
pop
sti
cmp
ljmp
pop
lods
add
push
xchg
add
inc
add
mov
out
mov
xor
out
mov
bound
inc
fadds
out
mov
jecxz
out
jne
aaa
add
and
sub
cld
jle
adc
ja
mov
jle
add
nop
sbb
cs
push
enter
add
push
int3
data16
and
pop
inc
iret
cmp
pop
push
push
call
das
roll
pcmpgtd
test
arpl
into
jecxz
adc
xor
mov
imul
loopne
and
cli
push
loopne
gs
movsb
leave
sub
aam
xchg
mov
shll
sbb
repz
or
add
dec
push
pop
push
ret
jge
ljmp
test
mov
pop
push
insl
stos
inc
sbb
pop
enter
inc
insb
adc
mov
adc
ror
push
arpl
scas
or
jno
sub
movsb
pop
add
dec
icebp
pop
imul
jo
fldcw
andl
cli
mull
dec
or
loope
sub
pop
icebp
jle
pop
les
out
pop
sbbb
ds
les
xor
imul
test
repnz
lahf
xchg
icebp
je
jb
aad
rclb
cmpsl
inc
cltd
int
les
mov
mov
sub
mov
bound
push
call
fidivrs
les
js
fcoms
mov
add
jp
out
jg
add
jnp
or
popl
jp
mov
fmuls
enter
sbb
and
pop
xor
in
dec
pop
push
sarb
mul
addb
fdivs
js
dec
cmp
mov
out
xchg
dec
hlt
out
cmc
sub
cmp
xchg
sbbl
adc
divl
outsl
pop
pop
pop
mov
sub
hlt
mov
testl
int
dec
push
mov
sub
cmp
mov
in
push
mov
xchg
jnp
ror
add
mov
ljmp
ss
cmp
negl
and
jl
call
cmp
fistps
rcrl
ja
enter
sub
sbb
or
imul
clc
aaa
ljmp
jb
dec
pop
and
popf
and
lock
fdivrl
faddp
adc
sbb
xchg
ss
stos
jg
mov
adc
xor
or
shlb
sbb
cwtl
clc
aam
adc
jp
call
daa
xor
mov
pop
adcl
jnp
xchg
adc
sub
fwait
enter
icebp
test
rolb
and
xchg
jne
aaa
xor
push
add
add
xchg
xchg
clc
mov
add
mov
pop
xchg
xchg
adc
sti
add
xchg
sub
adc
aas
add
dec
out
dec
test
dec
popa
test
lahf
and
inc
stc
das
jge
pusha
cmc
ret
push
sbb
testl
decl
mov
lret
into
test
xchg
jp
jecxz
sub
fisttpl
add
in
dec
clc
lds
pushf
xchg
fldcw
pop
or
daa
dec
out
sub
lods
push
jmp
pop
jo
xor
js
pop
and
sub
mov
addl
loop
push
gs
dec
inc
adcb
fnstsw
pop
jmp
test
jmp
mov
sahf
xchg
xchg
mov
icebp
stos
loopne
cmp
jmp
invlpg
or
pop
test
pop
aam
repz
in
insl
xlat
fdivl
sar
adc
or
cmp
xchg
cmp
testl
mov
sbb
dec
js
ljmp
repz
add
shlb
test
bound
xor
mov
dec
call
pop
add
bound
sub
pop
mov
fs
daa
dec
or
sahf
mov
inc
das
mov
insl
mov
imul
mov
fsubrl
scas
xchg
hlt
jg
jo
add
cwtl
mov
lods
outsl
sub
loope
push
cmp
sbb
mov
jg
mov
std
call
adc
mov
sbb
cld
dec
cmp
out
sbb
shrb
jne
and
push
rcrb
and
out
je
or
inc
xchg
and
jge
std
push
das
roll
xchg
xchg
xchg
call
mov
popl
or
nop
mov
xchg
sbb
sbb
daa
pop
push
loop
jnp
dec
xor
sbb
and
dec
xchg
daa
mov
sub
pop
inc
adc
xor
sub
ljmp
push
fistpl
mov
loope
lret
jmp
rol
pusha
push
xor
adc
sti
pop
pop
decb
addl
xchg
in
jb
jno
test
add
in
mov
lods
test
movsl
dec
xchg
add
hlt
dec
cmp
std
pop
xor
or
and
outsl
test
addr16
je
dec
xchg
test
and
stos
aaa
xchg
cmp
xor
pop
roll
int3
mov
cmp
sahf
addb
push
clc
fistpl
xchg
les
xor
dec
mov
mov
lret
add
aas
in
cmc
or
mov
cmp
dec
cmc
xchg
fxch
fmull
sbb
jo
or
jp
addb
mov
mov
pop
iret
hlt
rorb
es
cmp
pop
adc
fsubl
arpl
pop
or
stos
mov
push
pop
pop
hlt
push
stc
fwait
outsb
or
ljmp
pop
jae
xchg
inc
add
xchg
push
dec
mov
ret
or
cli
ficompl
in
test
test
js
mov
lahf
cli
mov
dec
cmp
rorb
andl
jecxz
adc
pop
aam
pop
iret
jnp
loope
adc
clc
jae
std
sbb
decl
cs
jb,pn
fwait
lahf
in
test
xchg
cmpsb
inc
fs
aaa
lcall
mull
inc
cld
adc
or
data16
sahf
jo
aaa
pop
xchg
xchg
jl
ret
imulb
aaa
sbb
or
cmp
aad
mov
sbb
pop
or
xchg
scas
jae
repz
mov
lcall
add
insb
fdivl
cmc
inc
sti
xchg
outsl
jg
cmc
stos
add
lret
divb
cmp
mov
inc
sbb
xchg
subb
push
in
xchg
je
add
sbbl
test
shll
push
test
pop
adc
ficoml
push
sbb
fidivs
add
xor
add
cmpb
mov
cltd
mov
fmul
decb
jmp
sub
lea
add
and
aad
and
lea
sahf
setge
in
in
ss
mov
push
jbe
pop
pop
dec
ljmp
test
mov
decl
push
pop
and
in
imul
hlt
dec
scas
movsl
jge
cmc
pop
lahf
lea
add
add
dec
iret
rcl
adc
adc
aam
add
iret
loopne
mov
mov
and
cmp
pop
test
pop
mov
out
outsl
scas
mov
or
dec
daa
jo
out
and
iret
pop
pop
clc
mov
push
cs
pop
sbb
inc
or
das
add
mov
mov
push
call
leave
iret
push
push
data16
cmpsb
push
add
or
rorl
popa
lock
and
outsl
in
mov
fwait
mov
xchg
dec
push
jns
int3
loope
push
jp
mov
sbb
dec
xor
insb
push
add
sar
pop
test
or
loopne
sub
mov
test
push
rcrb
cmp
mov
or
in
stos
lock
call
lcall
push
cmpsb
mov
push
test
pop
cld
add
daa
int3
popf
xor
and
in
and
rorb
loopne
cmpsl
cs
xlat
test
daa
stos
pop
ljmp
or
jb
int
mov
mov
aaa
and
imul
mov
xor
in
stos
pop
aad
lock
fwait
or
scas
outsl
cwtl
mov
jecxz
sub
cmp
mov
adc
out
rcll
sub
jle
add
incl
push
xchg
das
imul
lods
sub
icebp
push
ja
out
in
dec
add
iret
in
cmp
rcrb
adc
jo
lcall
or
sbb
and
nop
adc
sbb
mov
jg
pop
inc
fildl
cmp
nop
lds
aam
loope
lods
aad
mov
xor
aas
in
nop
jg
inc
sub
leave
add
pop
xor
stos
mov
mov
mov
mov
decb
inc
outsl
jmp
call
push
sbb
sub
mov
xor
imul
adc
test
mov
in
out
or
dec
push
push
xor
jle
or
dec
and
adc
fisubrs
out
int3
incb
arpl
sub
mov
xor
adc
mov
adc
or
lock
add
push
dec
stos
mov
call
dec
mov
inc
or
lret
or
inc
push
xor
fdivr
inc
pop
xchg
inc
dec
pop
mov
aad
xor
or
jne
in
pop
stc
or
add
mov
adcl
mov
call
dec
push
mov
push
hlt
gs
push
fcompl
fwait
test
adc
push
adcb
mov
fiaddl
pop
add
les
xchg
xor
mov
or
ljmp
and
insb
mov
lds
lods
inc
xchg
mov
ds
xor
into
stc
cwtl
xor
frstor
or
imul
add
xchg
loope
out
add
add
lds
push
mov
movzwl
aam
pop
xor
in
push
push
adc
adc
xlat
scas
pop
mov
and
lcall
pop
xchg
int
cmpsl
testb
in
mov
inc
lods
mov
or
or
les
push
test
add
mov
jl
shll
scas
add
jl
movl
add
test
mov
push
adc
frndint
clc
pop
sbb
cmp
outsl
mov
pop
jno
mov
mov
xor
ds
push
cmp
movsl
inc
test
icebp
adc
push
cmc
and
sub
pop
inc
mov
mov
stos
or
aas
push
ss
dec
add
sbb
rolb
adc
and
xor
pop
and
out
xchg
adc
call
push
xorl
inc
xor
or
adc
mov
jl
dec
addl
cs
sub
inc
pop
mov
daa
mov
jnp
xorb
fbld
dec
add
nop
arpl
cmp
xor
pop
cli
push
mov
xor
out
nop
jne
addb
lahf
sbb
dec
pusha
aam
mov
jb
push
jp
loope
adc
xchg
inc
or
jge
dec
xchg
dec
es
cli
pop
les
mov
aad
push
insb
into
xlat
mov
adc
mov
xchg
adc
shl
ja
out
fcompl
pop
les
jecxz
cli
and
adc
and
mov
jl
ret
lods
jae
fxch
hlt
push
pop
sbb
xor
mov
les
fstpt
xor
ffreep
xchg
add
jmp
mov
sub
jb
dec
test
jnp
cmp
add
xor
outsl
push
js
push
into
stos
loop
and
mov
inc
xor
sub
loope
scas
push
jg
fldcw
addr16
and
aad
adc
or
push
ljmp
or
adc
push
xor
mov
negb
mov
lock
sub
jmp
repz
pop
into
add
jnp
cmp
sub
mov
pop
lock
mov
pop
pop
out
pmuludq
cmp
xor
inc
jb
nop
imul
loop
iret
orb
jg
repnz
jno
cmpsl
add
sub
cs
and
arpl
fwait
mov
cmc
outsl
les
or
lds
inc
psrlq
mov
out
push
aaa
add
or
xchg
inc
and
or
sub
or
jg
call
cmpsb
add
pop
insb
pop
mov
lahf
push
mov
cli
mov
or
or
ljmp
filds
cmpsb
leave
and
xchg
xchg
sarb
lds
hlt
cmp
addr16
and
rorl
movsl
inc
testl
mov
cmp
sub
clc
inc
scas
jp
inc
adc
push
cld
outsl
push
pop
mov
stos
test
adc
mov
mov
inc
shll
dec
int
iret
cmpsb
ss
icebp
out
ljmp
sub
ss
test
iret
push
imul
add
add
xor
push
stos
push
xchg
out
and
push
push
adc
fisubrs
xor
dec
loopne
aad
mov
rcrl
cmp
adc
rcrl
mov
xchg
sbb
aaa
mov
push
pop
sub
pushf
lcall
loopne
xchg
outsl
sub
popa
lods
xor
lds
mov
mov
inc
jne
jnp
rolb
fisttpl
pop
test
xor
jle
adc
sbb
add
andl
and
or
jne
sub
xor
nop
repz
push
scas
sub
aad
aam
mov
jp
jl
mov
inc
mov
lahf
ucomiss
cmpsb
icebp
xor
inc
jle
mov
fildll
cltd
adc
aam
lret
test
lea
mov
nop
or
outsl
cmc
jle
loop
or
xchg
sub
or
ja
lods
pusha
cwtl
add
mov
inc
mov
repz
cmpsl
mov
pop
pusha
sub
sbb
xchg
sbb
sbb
imul
pop
push
jno
rorb
inc
jg
shrl
les
cmp
jne
mov
in
cwtl
xor
jl
cmp
shlb
push
outsl
cld
or
mov
outsb
mov
xlat
or
mov
mov
fs
or
mov
mov
push
pop
sub
push
add
cmp
jae
jo
andl
sub
sbb
pop
fdivs
add
sbb
xchg
outsb
dec
mov
sbb
movsb
popa
shlb
outsl
cmp
adc
mov
std
ljmp
lret
cmp
xchg
push
xlat
ret
test
pop
inc
jmp
jmp
hlt
hlt
xchg
lcall
mov
repz
inc
mov
lret
push
enter
or
mov
inc
or
xlat
cmp
xor
mov
fstps
mov
imul
sub
aaa
mov
jns
pop
jae
test
je
or
mov
cmp
jns
pushl
push
int
adc
jno
lret
mov
pop
sub
subl
or
movsl
lea
aad
inc
sub
ficoml
add
das
aam
add
stos
lods
dec
cmpsl
int
pop
loopne
mov
sti
aaa
sbb
mov
mov
dec
cmc
sarb
mov
popf
xchg
or
xchg
dec
jp
in
jecxz
sbb
outsb
xor
ret
sbb
mov
pop
push
pop
clc
pop
rcrl
mov
adc
test
push
jg
cmp
inc
lea
and
jg
insb
aas
lahf
shlb
push
jne
insl
insl
adc
sub
mov
mov
pop
inc
or
sub
mov
or
inc
jmp
or
movsl
es
inc
mov
aam
inc
scas
fwait
sbb
mov
inc
and
pop
bound
out
loopne
mov
aas
mov
test
or
jo
sbb
sub
inc
xchg
das
mov
sahf
adc
or
mov
mov
sub
insl
mov
imul
lods
sub
fimull
outsl
outsl
ficoms
shll
into
test
cmpsb
in
ljmp
lods
sub
or
adc
pushf
mov
jp
jne
adc
inc
loopne
adc
mov
adc
mov
cmp
and
dec
jb
shl
and
lods
inc
popa
adc
lret
adc
pop
out
mov
loope
jmp
sbb
add
add
or
push
push
sub
adc
xchg
ljmp
outsl
cmp
adc
inc
pop
dec
rorl
push
or
mulb
xor
stos
cltd
aaa
xchg
add
stc
add
xor
lock
dec
rolb
jmp
loopne
mov
mov
out
push
stos
adc
ret
xchg
cmp
sti
mov
fstpl
repnz
jp
iret
cwtl
or
sbb
daa
scas
andb
clc
mov
sbb
cmp
push
std
sub
fprem
jmp
jmp
pusha
pop
loop
or
aad
sub
pop
adc
fwait
inc
sbb
jmp
pop
adc
mov
pop
sub
clc
adc
cs
in
dec
cmpsb
xor
dec
sub
and
inc
sbb
pop
inc
jae
push
add
mov
dec
imul
andb
adc
adc
pop
cwtl
xor
fs
movsl
xor
movsl
into
popa
pop
inc
xchg
add
mov
test
fchs
adc
loop
sbb
int3
fdivl
aad
mov
push
lds
sbb
push
and
call
loop
or
mov
test
adc
gs
xor
into
adc
jb
js
std
das
push
mov
adc
inc
push
int
aam
nop
cmpsb
call
push
push
insb
inc
inc
mov
pop
mov
mov
jp
test
fwait
push
xchg
adc
aaa
stos
repz
cs
xor
mov
mov
add
mov
lock
mov
inc
aam
stc
test
sub
add
dec
test
xchg
sub
and
shlb
test
pusha
adc
inc
aad
push
insl
inc
jg
fisttps
addb
cltd
push
push
insl
add
cmp
ja
xchg
and
test
fs
inc
cli
push
pop
push
push
rcrb
lock
enter
push
lods
movsb
push
dec
add
test
inc
add
rclb
jns
test
andb
lcall
jecxz
lcall
and
pop
cmp
lcall
mov
add
cmp
xorl
fimull
test
pop
imul
dec
rolb
shll
add
dec
pop
cmpsb
fs
test
mov
sbb
mov
sbb
mov
cwtl
cld
andb
sahf
push
inc
xor
inc
add
faddl
cmp
mov
add
dec
or
add
push
cmc
sub
add
and
andb
and
aam
inc
icebp
pop
arpl
cmp
shlb
movsb
push
mov
pushf
dec
dec
sbb
pop
adc
add
incl
sbb
stos
in
clc
and
cmp
movsb
cmpsb
fucompp
in
adc
push
push
mov
jl
sbb
shrl
js
sahf
dec
es
ljmp
mov
mov
lret
and
cwtl
or
mov
xor
mov
imul
xchg
daa
mov
adc
es
or
mov
mov
stc
and
sahf
test
ret
inc
sbb
dec
icebp
pop
ss
sbb
nop
das
outsl
outsb
push
xor
mov
pop
and
jnp
inc
add
push
mov
add
inc
shll
mov
push
not
mov
aam
xor
inc
jge
fidivs
dec
push
pop
int
xor
ljmp
push
aad
mov
es
adc
xor
pop
addl
rolb
ss
ljmp
add
sbb
inc
sbb
xor
sub
adc
shlb
fwait
or
mov
ja
mov
fisubl
clc
data16
out
push
mov
xchg
lcall
sbb
push
cmp
jp
ljmp
sbb
fwait
lock
adc
or
push
adc
icebp
push
cmp
loope
ret
add
cmp
adc
fldcw
cli
fcoms
nop
adc
popa
add
or
dec
pop
sahf
mov
loope
adc
sbb
cs
xchg
or
or
xchg
xchg
jnp
mov
mov
sub
lods
faddl
inc
mov
and
add
out
clc
cmp
sahf
fmull
xchg
pop
data16
xchg
testb
sarl
mov
orb
push
sbb
jo
ljmp
sub
lock
xor
cmp
in
push
add
fmuls
addr16
loopne
mov
test
test
jecxz
sub
pop
inc
inc
dec
cmpsl
push
xor
imul
push
xor
sub
in
mov
add
adc
mov
bound
add
sbb
jle
xlat
popa
shll
fiaddl
hlt
mov
cmp
pusha
shl
call
testb
into
sbb
addb
inc
daa
mov
inc
insb
mov
add
mov
push
lds
sar
stos
mov
sub
push
mov
dec
and
pushf
pop
into
and
ficoml
inc
sahf
mov
movsl
movsl
and
shll
mov
xchg
and
xchg
inc
stos
div
fisttps
stos
out
fsubrl
xor
xchg
sbb
add
inc
das
aad
mov
mov
aad
push
xchg
loope
xor
sbb
std
dec
adc
mov
or
add
cmpb
aaa
push
mov
leave
xchg
inc
movsl
in
fstl
dec
je
add
imul
test
pop
clc
jbe
mov
cmp
sub
movsb
sbb
jno
sahf
sbb
jne
mov
repnz
sahf
mov
dec
adc
mov
loopne
repz
lret
and
push
xchg
lret
add
sbb
fisubs
pop
jg
aaa
jb
mov
add
adc
sub
adc
ljmp
std
cmp
xchg
mov
mov
add
adc
jmp
call
push
push
sbb
xor
loop
pop
sub
sub
adc
lahf
xchg
repz
ret
inc
in
mov
pop
xor
or
ret
xor
xchg
sahf
lret
and
cmpb
cli
aaa
add
dec
mov
jg
clc
mov
lret
xchg
fldenv
xchg
cmp
mov
outsl
pop
cmp
xor
lea
dec
mov
lahf
add
xchg
cli
jo
cmp
loope
hlt
mov
orl
add
out
fmuls
cmp
cli
test
cwtl
jge
cmp
in
outsl
aad
push
adc
push
cwtl
push
test
mov
adc
push
or
jbe
ljmp
aas
data16
mov
add
lret
dec
js
cld
lcall
stc
stos
clc
inc
inc
sbb
pop
pop
or
and
dec
rolb
and
inc
lret
pop
cmc
push
aad
push
imul
cld
mov
adc
bswap
sbbb
cmc
orps
in
ds
mov
inc
mov
push
xchg
pop
mov
add
loopne
push
inc
enter
mov
pop
lea
sbb
cwtl
inc
fiadds
push
or
xorl
pusha
mov
push
add
psubusb
push
mov
mov
ljmp
cmp
pushf
adc
int
xor
pop
jns
xchg
and
movsb
pusha
jbe
les
mov
add
mov
fcoms
orb
cmpsl
into
add
push
mov
sti
sub
inc
add
ss
dec
xor
imul
xor
call
xor
imul
fmul
sub
pop
dec
shrb
fisttpll
push
jbe
sub
sub
mov
in
adc
lea
loopne
fmull
or
adc
mov
cs
or
mov
or
mov
data16
and
popa
testb
add
dec
data16
mov
push
iret
jp
shll
pop
add
dec
addr16
add
ss
imul
sbb
adc
neg
ljmp
movb
int
jo
cs
sar
adc
popa
inc
dec
enter
pop
pop
mov
and
jbe
test
add
push
aas
sbb
cmp
or
mov
and
popa
adc
shlb
ror
fwait
popf
inc
leave
push
out
shl
rcrl
or
cld
sbb
in
add
fisubrs
cmp
data16
and
bound
cmp
outsb
pop
mov
sbb
push
mov
add
in
sub
sub
or
mov
jge
adc
dec
jle
mov
pop
call
inc
sbb
mov
rcll
lods
inc
jnp
add
out
popa
add
sahf
hlt
xor
pop
push
add
dec
int3
jno
adc
mov
inc
pushf
push
xor
pop
repnz
and
adc
push
daa
popl
dec
int
or
mov
fstpl
call
mov
arpl
addr16
sbb
int
add
stos
mov
xchg
fs
push
out
cld
int3
sub
mov
jmp
push
or
dec
push
sub
adc
loop
stos
lock
sbbl
int
insl
inc
int3
sub
push
xchg
mov
cmc
mov
xor
ss
sub
loope
mov
mov
add
out
and
cmp
xor
repnz
rclb
xor
pop
inc
iret
in
imul
xor
mov
pop
add
lret
pop
mov
or
push
cmp
pushf
add
xchg
loope
add
shlb
enter
call
adc
hlt
jmp
mov
jno
jl
lea
aas
int3
inc
jge
loop
mov
xchg
mov
sbbb
push
push
cs
outsb
cs
push
xlat
lock
test
sub
add
leave
lcall
jp
sbb
jne
dec
push
sbb
imul
xor
mov
leave
push
sbb
mov
pushf
cld
xor
test
mov
push
out
icebp
adc
mov
jae
test
outsb
arpl
call
call
add
nop
outsl
jl
fistl
push
or
test
aam
les
adcl
push
pop
cmp
add
xchg
mov
fcoml
mov
dec
hlt
fidivs
cmpsl
ss
or
push
cmp
mov
adc
adc
adc
out
inc
fnstcw
xor
add
xchg
push
repnz
addl
adc
inc
mov
and
sub
outsb
cmpsb
call
bound
xchg
movsl
jle
mov
rolb
incl
jp
mov
push
xlat
adc
cld
push
in
in
push
xlat
fadds
cs
mov
rorb
popl
imul
jb
lock
jno
mov
int3
shlb
loopne
out
mov
loop
fs
pushf
test
aad
les
and
ret
adc
test
sub
mov
add
loopne
rcrl
shll
loop
ficompl
cmp
popa
shl
rorl
jmp
fnstcw
pop
jo
adc
outsl
sub
fistps
scas
dec
dec
and
sbb
loopne
inc
movsb
and
pop
vsubss
stos
push
inc
add
jne
adc
mov
cmp
inc
and
push
adc
loopne
mov
test
lock
je
xor
cmp
sbb
outsl
sbb
xor
cli
push
lods
outsl
std
sub
fnstcw
adc
and
inc
pop
xor
sahf
sub
inc
jmp
dec
xor
test
or
mov
inc
inc
lds
bound
xchg
in
pushf
fwait
add
or
imul
shll
xlat
push
int
lret
adcl
inc
loopne
pop
mov
mov
pop
pop
ds
arpl
mov
mov
cmp
ret
pusha
js
add
cmp
mov
inc
rclb
jno
fsubr
shrl
mov
in
adc
or
xchg
sub
dec
and
jp
das
pop
roll
mov
test
pop
dec
inc
enter
jp
or
test
nop
pop
xor
ret
ficompl
cmc
ucomiss
add
xchg
sub
adc
adc
add
cmpsb
repnz
das
lahf
hlt
pop
or
cmpsl
and
push
inc
cwtl
jne
stos
push
lock
lods
mov
adc
adc
dec
push
rorl
adc
stos
jmp
das
into
mov
imul
xor
pop
jecxz
fildl
inc
test
in
cli
push
push
push
les
pop
add
add
bound
pop
cwtl
mov
cmp
out
add
add
dec
hlt
addl
fadds
bound
in
aas
sub
es
pusha
ds
sub
enter
rorl
les
push
fs
pop
in
lahf
pusha
pop
and
or
jbe
js
mov
lea
icebp
xchg
mov
xchg
adc
lahf
out
jns
jle
leave
sub
stos
mov
or
pop
dec
movsb
pop
add
lcall
repnz
clc
enter
mov
daa
or
dec
sub
add
loopne
xor
mov
push
lock
xor
lock
sub
fldenv
fbstp
popa
test
push
inc
clc
in
add
mov
and
push
ss
add
stos
subb
xchg
or
add
xchg
inc
addr16
xor
les
sbb
jle
adc
sbb
mov
fs
inc
cmp
pushf
push
mov
sbbl
cmpsl
cmp
ss
das
or
mov
and
aas
inc
popa
cmp
ja
std
fwait
mov
imul
adc
test
ja
mov
scas
leave
push
sahf
repnz
mov
and
inc
push
pop
inc
inc
gs
ret
xlat
inc
les
rcrl
daa
adc
or
clc
add
cmp
repz
xchg
fdivr
cs
inc
sub
sub
add
loopne
mov
fisttps
jns
aam
dec
jp
stos
jle
sub
adc
add
pop
mov
ds
out
add
roll
hlt
fstpt
jmp
int
jo
movb
cltd
into
add
inc
test
in
movsl
pop
icebp
and
jmp
addb
or
je
mov
pop
das
pop
cmp
push
mov
es
lock
adc
mov
fnsave
dec
sbb
jge
adc
inc
pop
cmp
mov
ljmp
add
pop
enter
pop
inc
shl
sub
add
fistl
ret
mov
sbb
or
repz
in
or
mov
movb
xor
movsb
lcall
fistps
les
xchg
stc
jo
arpl
rorl
add
repz
adc
cli
mov
shl
or
fcomps
outsb
add
insb
stc
adc
mov
ret
rcrb
push
lock
xor
out
or
pop
call
fiaddl
inc
add
xchg
andl
or
xor
orb
mov
mov
cmp
ss
pop
inc
std
subb
jnp
mov
pop
lods
adcb
test
mov
xchg
orl
fcomps
test
and
inc
inc
ljmp
adc
jp
ss
rcrb
pop
pusha
xchg
fcoms
inc
adc
adc
pop
or
pop
mov
or
xlat
outsl
inc
push
add
andl
mov
or
mulb
fbld
push
jle
daa
add
xchg
jg
sub
ror
cmpsb
pop
pusha
adc
inc
fwait
push
call
mov
mov
jb
inc
std
lock
call
sbb
popa
jge
aaa
data16
add
add
and
sub
mov
and
mov
stos
ret
push
popa
jns
lock
roll
pop
add
push
add
rorl
and
ljmp
inc
mov
adc
push
std
sbb
inc
cwtl
ret
sub
fsubrl
mov
xor
pop
les
cmp
or
out
out
and
push
adc
repnz
mov
push
mov
adc
or
sub
dec
shrb
pop
lea
xchg
adc
pop
and
rclb
jle
pop
pop
sub
inc
xchg
leave
pop
inc
icebp
and
push
mov
xchg
inc
push
popf
mov
fisttpll
dec
aas
jnp
add
loopne
mov
mov
pop
add
and
sbb
adc
dec
addr16
test
stc
xchg
test
cmp
cmp
inc
inc
cmp
rol
fimuls
cmp
adc
jl
js
call
fs
outsb
push
mov
or
rcrl
pop
or
sbbb
sub
add
fwait
insl
adc
into
je
add
or
sbb
popf
dec
add
pop
loope
adc
call
aad
dec
std
and
adc
jl
xchg
push
insb
in
sbb
or
adc
pop
sti
in
out
xor
addb
push
ljmp
subl
lods
outsb
push
and
mov
in
addb
add
add
addr16
clc
inc
icebp
push
test
leave
ret
jbe
lret
outsb
push
inc
push
or
cmc
xchg
mov
test
nop
rcrb
lea
fmul
es
sbb
dec
adc
stc
je
je
xchg
mov
add
lret
out
clc
jo
dec
adc
dec
push
sbb
adc
loop,pt
dec
adc
add
adc
add
mov
or
int3
aad
add
mov
pop
ss
ljmp
fsubs
mov
imul
movsl
adcb
adc
sub
xlat
sub
pop
and
or
add
nop
mov
std
js
mov
add
enter
iret
sub
lock
ja
call
dec
ret
out
sub
mov
out
repz
push
sbb
inc
push
pop
inc
cmp
xchg
and
adc
xlat
mov
mov
cmc
mov
or
es
dec
inc
mov
and
mov
mov
mov
pusha
push
dec
inc
ljmp
adc
and
jmp
push
jo
add
mov
mov
and
int
ret
out
incl
push
roll
pop
popa
sub
mov
push
decl
add
nop
adc
in
push
mov
incb
insl
fistpl
test
outsl
dec
subl
xchg
adc
mov
inc
test
mov
test
inc
mov
mov
mov
nop
popa
nop
stos
mov
mov
mov
mov
outsb
ja
loopne
push
cltd
xchg
push
adc
jb
mov
pop
test
sahf
loop,pt
jg
mov
fisubrs
adc
xchg
jl
pushl
push
push
fnsave
mov
add
outsl
lret
daa
clc
aaa
ljmp
movsb
cmp
and
adc
or
test
test
jg
push
mov
jae
incl
imul
jp
out
dec
push
stc
xchg
mov
push
add
inc
lret
clc
mov
pop
add
outsl
and
sti
shll
jg
xor
pop
adc
mov
mov
orb
dec
and
out
gs
nop
mov
cmp
pop
xchg
or
add
mov
lock
aas
stos
mov
jbe
mov
test
fistpll
gs
fldl
and
add
aaa
or
jns
dec
adc
lock
enter
hlt
add
sub
add
add
xchg
add
lods
mov
jnp
or
out
aam
and
enter
aam
std
testb
dec
and
or
shr
mov
sub
or
nop
add
jbe
sahf
sub
aam
gs
adc
and
or
shlb
lods
orl
sahf
lea
gs
mov
addl
sub
sbb
aam
add
outsb
adc
rol
mov
push
mov
dec
bound
and
push
std
and
pop
mov
adc
in
xchg
jecxz
es
testl
dec
add
inc
push
push
inc
pop
xchg
or
loope
in
aam
mov
inc
and
sahf
icebp
dec
push
sbb
adcb
xor
mov
push
je
dec
jge
into
push
xchg
adc
mov
decb
insb
jg
add
xor
mov
and
jecxz
cmp
xor
mov
js
cld
dec
lock
jb
sarb
push
repz
sub
adc
add
xchg
or
lods
call
sbb
add
mov
ss
add
ljmp
fucomp
mov
cmpsl
movsl
pop
and
fwait
jo
neg
push
incb
xchg
pushf
mov
popf
mov
adc
xor
pop
cmp
bound
fisttpll
mov
sub
xor
imul
push
lock
lock
push
add
mov
dec
rcrb
inc
mov
pop
or
mov
or
stos
das
sub
sbb
out
or
mov
stos
and
mov
add
xor
add
jecxz
mov
inc
dec
call
pop
push
shrb
sub
dec
and
mov
fs
add
mov
adc
movsl
iret
mov
jecxz
addl
lods
jl
adc
out
test
add
cmp
adc
sbb
lods
cs
cwtl
icebp
test
cmp
mov
xchg
cmp
cwtl
shlb
fsubs
inc
dec
fcmovbe
xor
mov
inc
inc
add
add
lret
or
or
add
sbb
inc
inc
inc
lahf
aad
loopne
cmp
nop
add
push
mov
ficoms
adc
push
jmp
icebp
mov
add
mov
ss
adc
and
mov
jl
adc
sarl
sbb
or
icebp
ret
pop
adc
loopne
jg
cmc
pop
lods
inc
and
adc
cld
dec
jo
add
and
inc
adc
push
clc
mov
add
clc
adc
or
out
inc
sub
fidivrs
out
stos
cli
dec
std
icebp
rolb
jmp
arpl
in
mov
pop
dec
subl
cmc
or
adc
mov
mov
mov
jbe
xchg
je
dec
mov
pop
lahf
cmp
jle
inc
decl
je
xlat
ljmp
push
rolb
jnp
mov
jmp
pusha
and
or
clc
push
jg
test
inc
push
cmp
mov
dec
cld
sbb
or
int3
pushl
int3
xor
lret
dec
add
out
adc
nop
jbe
inc
jecxz
mov
das
push
add
cmp
push
ss
les
pop
push
push
pop
push
stos
cmp
pusha
dec
adc
loopne
in
mov
push
cmpsl
cmp
jg
clc
add
popf
jb
inc
add
cld
mov
fildll
out
test
pop
add
mov
rcrb
jmp
and
andb
add
pop
std
sub
add
xchg
mov
daa
cmp
cld
dec
cmpsb
or
movsb
mov
add
dec
and
mull
fs
adc
idivb
mov
adc
pop
or
push
add
cmpb
add
popa
ljmp
mov
jg
sbb
pop
xor
cmp
pop
xor
add
add
add
cvttps2pi
clc
pop
sarb
cmp
mov
dec
and
rcr
sbb
xchg
je
std
and
leave
pop
mov
push
adc
mov
push
cmp
pop
ret
popl
push
push
pop
cs
mov
test
loop
inc
loop
or
jg
sbb
inc
jae
adc
cmp
clc
fwait
pop
js
inc
and
mov
es
lods
mov
fucomp
mov
hlt
and
pop
sub
sahf
sbb
mov
xchg
jg
mov
inc
testl
das
fsubrl
push
ret
xor
inc
hlt
jne
push
imul
cltd
or
loope
lock
cs
fcompl
inc
inc
inc
cwtl
je
and
sbb
sahf
repnz
cli
packuswb
fstpt
sbbb
and
pop
setbe
sbb
sbb
test
sub
test
xorl
dec
pop
sbb
ret
clc
insl
ja
and
sub
mov
xchg
dec
clc
pop
divb
lahf
add
or
jle
dec
xor
cld
jnp
mov
mov
or
jbe
imulb
call
sbb
bnd
mov
outsl
xchg
push
adc
sub
imul
mov
decb
xchg
loopne
cld
cld
adc
mov
mov
fistps
inc
icebp
dec
sub
clc
push
leave
maxps
lret
popf
pusha
and
xchg
std
add
movsl
ljmp
push
std
xor
subl
add
aaa
or
and
movq
mov
mov
outsb
cld
pushf
and
in
aas
pop
bound
mov
ss
or
testb
int3
mov
cmpsl
mov
mov
hlt
cld
mov
sbb
loop
jno
inc
jecxz
stos
lods
push
clc
dec
push
cs
cli
testb
inc
mov
ret
xorb
add
shll
mov
ds
ljmp
test
dec
mov
mov
adc
xor
enter
push
mov
inc
mov
push
shll
sbb
xorl
decl
pop
movsb
ss
inc
fildl
inc
or
cmp
ror
bound
daa
test
dec
gs
sbb
aam
jb
mov
xor
lahf
add
flds
in
addb
add
xorb
fimull
mov
xor
add
mov
adc
mov
test
pop
shl
inc
fistps
and
add
push
lret
mov
jmp
outsb
sbb
cmp
dec
or
push
mov
jbe
mov
popf
roll
nop
mov
inc
jp
out
sub
mov
xor
repz
mov
out
scas
cmc
or
jo
rorl
outsb
inc
sub
lods
xor
loope
outsb
addr16
pop
dec
mov
aaa
push
sub
sbb
mov
mov
outsl
add
into
xor
inc
adc
sbb
cmp
paddusw
out
icebp
sub
lret
mov
pop
mov
push
cld
sahf
jp
mov
pushf
adcl
aaa
jle
sbb
out
mov
ret
hlt
bound
mov
lods
push
and
les
adc
out
insl
insl
mov
lods
inc
enter
dec
add
sti
mov
mov
mov
push
in
mov
std
push
fcmove
or
ds
fnstsw
testb
add
xchg
movsb
adc
or
dec
out
jbe
cli
fisttps
fmuls
sub
flds
xor
or
jl
sub
pop
cli
mov
rcrl
and
xor
cmc
or
stos
insl
mov
movsb
push
imulb
push
sahf
mov
dec
xchg
clc
iret
leave
ffree
mov
notl
xchg
sbb
andl
add
cs
insl
pop
pusha
cmp
pop
xchg
aas
sub
outsb
mov
daa
ret
inc
je
movsl
outsl
clc
das
adc
jge
inc
mov
xchg
out
out
push
shrl
sub
lret
push
cwtl
pop
fcmovb
and
mov
jle
orl
add
mov
icebp
pop
roll
outsl
and
or
push
das
or
std
push
push
int3
add
inc
loope
ret
nop
iret
mov
push
fwait
xchg
add
adc
inc
sbb
ret
rcll
les
inc
nop
and
jo
add
and
andb
push
or
lret
test
jmp
mov
out
xchg
xor
aaa
aad
fxch
test
cmpsl
adc
fidivrl
scas
pop
lret
aas
std
mov
ljmp
or
sub
bound
fdivrl
mov
notl
shll
arpl
cli
les
xchg
sub
push
xor
loop
mov
add
insb
sub
pop
pop
sbb
push
xor
mov
cmp
scas
movsl
mov
fidivrl
push
pop
fildll
clc
xchg
es
push
sub
xor
push
cmc
or
xchg
fwait
int3
lcall
fadds
std
and
sti
outsl
aad
cmp
mov
mov
les
call
sar
mov
arpl
jle
hlt
out
or
lcall
xchg
push
mov
xchg
push
dec
mov
test
roll
sbb
jo
push
jne
es
popf
add
sub
and
ljmp
mov
push
jb
mov
fidivrs
dec
rorb
jnp
mov
mov
or
bound
sub
add
icebp
pop
xlat
bound
inc
in
push
jo
loopne
or
lods
enter
fcoml
xor
shll
mov
inc
inc
jbe
mov
jge
aam
int3
jmp
daa
fs
sbb
in
push
or
inc
add
and
mov
add
adc
add
add
push
fldt
and
add
and
add
rdtsc
mov
or
adc
mov
xor
data16
insb
sysexit
add
or
imul
scas
sti
and
inc
dec
or
sbb
adc
add
mov
insl
xor
mov
push
fmuls
addb
adc
and
sub
aaa
addb
scas
std
insb
add
adc
subb
xorb
inc
add
or
aas
dec
lahf
inc
sbb
out
mov
outsb
nop
je
and
lcall
insl
push
sbbb
aas
cmp
mov
pop
ret
pop
leave
ret
add
pop
pop
ret
nop
inc
or
dec
pop
pop
mov
adc
fisubrl
movnti
ret
sub
xor
sti
sub
cmp
and
lcall
add
inc
dec
xor
dec
add
inc
neg
xor
jmp
pop
dec
add
mov
add
movl
pop
cld
not
sub
insl
in
and
mov
adc
adc
faddl
lods
cld
mov
adc
dec
cld
mov
sub
mov
or
loopne
sub
adc
int
neg
jl
pop
xrelease
adc
mov
dec
xor
sbb
mov
shr
insl
cld
in
pushl
xor
pop
sbb
into
cmp
scas
mov
mov
mov
call
xlat
fiaddl
mov
and
mov
sbb
adc
sbb
mov
lock
sub
pop
scas
test
sti
mov
add
mov
mov
movsl
fstpt
lret
xchg
mov
inc
neg
mov
rolb
add
push
test
and
fiaddl
inc
addb
mov
lea
insb
not
mov
jne
dec
mov
mov
fidivs
ret
pop
push
push
mov
push
jle
imul
dec
or
pop
loope
outsl
lcall
std
or
push
inc
adc
pop
or
inc
push
add
aaa
add
sub
or
pop
or
mov
aam
subl
pop
int3
scas
dec
nop
ja
mov
xchg
cmp
es
mov
xor
lock
lock
daa
int3
push
dec
ljmp
insb
adc
jecxz
inc
mull
or
loope
mov
pop
lock
cld
imul
imul
inc
idivb
add
clc
mov
jecxz
neg
xor
lods
arpl
outsl
imul
and
sub
jecxz
pushl
lea
push
add
push
push
push
push
sbb
adc
lret
cmp
and
mov
jge
pop
inc
arpl
xor
fidivrs
mov
and
sbb
out
or
pop
add
not
jnp
outsb
imul
cmp
fbstp
jp
xor
or
dec
ret
arpl
push
mov
or
cs
inc
repz
adc
inc
jo
push
out
daa
inc
pop
cmp
sub
jne
push
clc
das
lods
out
rcll
rcll
push
jae
faddl
sub
sar
inc
sbb
stos
negl
jb
adc
mov
jbe
push
add
jnp
insl
incl
int3
mov
add
xchg
popa
adc
stos
add
fdivrl
stc
rorl
add
sbb
jg
fidivrs
pusha
add
xor
fisubl
jne
idiv
out
incb
dec
loope
std
jmp
jl
lret
inc
mov
rolb
ret
inc
sub
xor
xchg
ja
add
popf
faddl
notl
jno
pop
and
add
inc
sub
inc
idivb
jle
ja
pop
cmp
pop
and
push
fcoml
mov
sti
loop
xor
cmpsl
and
cmp
mov
movsl
add
xor
jb
out
bound
adc
cld
mov
cltd
push
add
adc
add
push
add
cmpb
lcall
repz
xor
sbb
and
imul
sbb
fs
mov
mov
pushf
in
cmp
dec
push
pop
les
mov
ljmp
push
dec
dec
xor
jbe
add
jg
pop
int3
rcrb
mov
jg
aam
mov
incl
or
add
pop
inc
push
loopne
dec
xorb
int3
mov
movsb
sbbl
add
add
testb
div
add
ja
pushf
sub
add
out
jbe
jmp
adc
sbb
cmp
add
cld
pop
lcall
mov
sub
pop
or
aam
mov
mov
and
insl
incl
outsb
sbb
xor
aad
in
loope
mov
cld
xor
in
add
mov
aam
push
loopne
inc
pop
in
loope
lods
add
jns
push
mov
gs
xchg
lret
incl
jae
add
std
inc
add
mov
sti
pop
idiv
xchg
dec
in
in
cmp
mov
fstl
jmp
pop
ret
sti
push
js
test
lcall
idiv
lea
mov
je
add
xchg
test
imulb
pushl
je
pop
roll
jle
dec
dec
add
and
xchg
imul
xchg
add
lock
int3
push
arpl
sbb
inc
in
outsl
mov
stc
popa
cwtl
xchg
rclb
orb
push
or
idiv
cltd
das
xchg
adc
sbb
lcall
mov
sbb
add
add
xorl
dec
insb
cmp
mov
pop
inc
jge
jne
test
or
inc
and
cmpsb
lahf
or
loope
or
es
pop
cmpsl
mov
dec
sahf
lret
inc
lods
divl
pop
loop
sarb
and
cmpsb
xchg
or
lods
jo
rcrl
fwait
jbe
mov
dec
insb
testl
or
or
sub
dec
xor
test
pop
sarl
sbb
sti
inc
test
inc
xor
mov
mov
mov
or
add
orl
stos
mov
sbb
lea
fstpt
push
mov
cmpsl
cmp
dec
pushl
mov
flds
fidivrs
or
add
push
pop
and
scas
js
add
and
or
cmp
add
movb
nop
insb
fcompl
add
push
jb
bound
add
test
cs
push
adc
inc
add
ret
mov
nop
mov
aas
sbb
or
loopne
dec
daa
ret
push
cmp
dec
test
push
xor
jbe
shlb
xchg
mov
iret
out
mov
addb
repnz
stc
push
and
imul
pushf
and
orl
fcomp
sbb
push
shlb
imul
test
jo
cmp
pop
jecxz
push
fisubl
icebp
jne
and
mov
mov
and
push
pop
test
je
nop
and
or
std
out
out
stc
fwait
mov
dec
mov
shll
jp
dec
cs
lcall
dec
aam
jns
xchg
outsb
call
dec
out
sbb
mov
mov
shlb
jnp
cmp
shll
cli
mov
mov
mov
in
mov
mov
jb
xlat
sar
das
pop
push
sub
cmp
or
adc
pushl
xor
in
push
shlb
loopne
jl
in
cmp
jnp
jl
insl
jmp
or
mov
cmp
jl
aas
or
cmp
test
inc
inc
jge
loop
lea
jb
jo
push
imul
je
sbb
das
jl
pop
loopne
in
cltd
in
push
inc
aam
insl
ret
icebp
push
sbbl
inc
pop
lret
mov
in
or
mov
adc
icebp
es
cmp
pop
adc
decl
mov
mov
fmuls
add
dec
not
jl
je
clc
dec
sarb
clc
test
loopne
and
js
out
pusha
xor
mov
ficoml
push
adc
in
push
inc
mov
ret
adc
sbb
pop
aaa
inc
xlat
or
sub
xor
je
sub
aam
jmp
xor
adc
nop
fstps
out
inc
lods
je
inc
inc
mov
std
ret
ret
cmpsl
jp
dec
es
jp
inc
jbe
bnd
jns
outsl
push
stos
mov
adc
in
pushf
xor
xor
inc
pop
lahf
jno
inc
and
cmp
out
negb
sub
ret
adc
jmp
call
mov
pop
inc
leave
repz
aas
xor
pop
mov
ja
das
insb
sbb
repz
or
fnstsw
xchg
incb
popf
mov
mov
stos
daa
addl
xor
loop
imul
std
sub
or
pushw
xor
fcomip
fucomip
xchg
push
sarl
sub
shll
out
outsl
mov
addr16
push
test
xor
mov
dec
cmp
out
pop
xor
shlb
jg
ret
jne
out
fsubrs
addr16
movsl
inc
stos
movsb
or
pop
int3
fcomp
lock
outsl
insb
xchg
push
cmpsl
js
fcomip
sbb
ret
in
loope
push
and
js
ret
inc
fs
lahf
jmp
or
inc
inc
xor
in
lea
or
sbb
mov
pop
ficomps
fsubr
loop
add
or
cmp
jecxz
mov
ret
lahf
push
xor
icebp
sbb
mov
or
ret
jg
jge
dec
loop
cld
test
adc
hlt
push
mov
repz
inc
pusha
mov
sub
das
cmp
adc
inc
pop
fs
jo
jbe
pushl
mov
ret
mov
adc
ret
xor
or
pop
outsl
mov
mov
in
rcrl
lock
pop
xor
mov
sar
mov
lcall
mov
xchg
mov
fildll
repz
fs
cmpb
in
sub
popa
jg
jg
ds
and
adc
rolb
cltd
subl
or
jle
push
mov
lods
popa
jno
into
imul
adc
inc
xchg
enter
dec
dec
push
pop
cmp
pop
sub
add
push
lcall
pop
jg
shlb
mov
aad
outsb
mov
xlat
imul
mov
decb
insb
popf
push
cmp
xchg
pop
ja
adc
add
xchg
jno
or
movb
fidivrl
mov
insl
xor
xchg
mov
pop
pop
inc
stos
push
adcb
and
inc
ja
mov
sbb
dec
jmp
rcl
add
out
and
mov
dec
fiadds
insl
and
xchg
test
mov
mov
fistps
or
aas
lods
add
hlt
sbb
sub
cmc
mov
stc
sbb
icebp
test
push
xorb
mov
add
outsl
push
das
in
add
xchg
lcall
jp
mov
adc
je
mov
cmp
sbb
test
jmp
xor
push
sahf
int
or
enter
xlat
adc
inc
addb
and
fbld
mov
test
inc
sub
les
shlb
js
mov
push
xchg
das
pop
xor
lea
push
jo
mov
sar
jg
pop
mov
test
and
cmp
icebp
mov
add
loop
dec
sbb
xor
jp
cli
pop
js
lods
sti
lret
add
addr16
jl
mov
fisubs
inc
cmp
fcmovb
sbb
movsb
adc
shl
xchg
mov
orl
addl
lods
mov
xchg
out
hlt
jbe
loopne,pt
and
jg
into
das
hlt
pop
mov
in
mov
jmp
add
xchg
and
mov
pop
ret
jnp
sbb
mov
jbe
bnd
sysenter
popf
test
or
xlat
sbb
fcmovb
cmp
les
test
push
call
fstl
pop
call
stos
add
mov
imul
daa
cmc
mov
flds
mov
lret
and
jae
orb
and
jne
lret
dec
xor
test
add
adc
inc
imulb
mov
mov
dec
or
sub
pushf
sbb
ljmp
mov
add
xchg
ret
sbb
dec
dec
sbb
or
jae
jmp
pop
jg
mov
addb
ret
fwait
xor
sbb
shll
shll
stos
mov
xlat
nop
in
ss
cmp
sti
gs
stos
xchg
scas
or
nop
out
les
daa
int3
pop
pop
sahf
adc
fstpl
jle
mov
jg
enter
push
adc
aam
and
imulb
dec
dec
cltd
orl
pop
fstp
mov
rorb
cmpsb
push
mov
mov
mov
sbb
aam
adc
mov
ss
or
mov
rorl
test
call
inc
inc
and
mov
icebp
outsb
pop
aaa
js
dec
mov
jl
mov
mov
je
loope
sub
cmp
xor
icebp
xor
cs
lret
xor
jl
inc
loope
cmp
popf
cmp
clc
jbe
mov
in
ss
cmp
xchg
mov
fwait
sbb
xor
sbb
shlb
dec
fsubr
ljmp
mov
sub
mov
sbb
mov
imul
xor
rorl
and
add
or
mov
mov
push
jns
in
pop
les
pop
dec
mov
mov
push
sub
or
xlat
insb
ror
add
pop
sub
mov
loop
xor
adc
dec
sbb
mov
int3
mov
xchg
mov
cs
push
jle
mov
xchg
aaa
adc
fcom
ror
push
push
insb
insl
lcall
paddusb
jbe
arpl
aam
add
add
push
lods
into
xchg
push
push
adc
mov
iret
add
in
xor
mov
sbb
flds
add
subb
pusha
or
lock
xchg
jne
dec
mov
adc
dec
fidivrs
cltd
fsubs
adc
mov
fimuls
add
push
gs
and
mov
call
dec
pmulhw
or
pop
push
pop
mov
pop
shl
paddusb
lcall
fcoms
and
mov
out
pop
leave
ja
inc
mov
repz
and
js
inc
and
pop
sti
push
and
push
dec
les
icebp
dec
out
call
gs
cli
pop
int3
adc
sub
and
js
shrb
adc
test
insl
adc
jle
xor
insl
testb
insl
call
push
or
push
mov
arpl
dec
daa
imul
adc
daa
add
fcomps
enter
mov
sub
push
jge
outsl
or
out
mov
aas
cmp
adc
mov
xchg
mov
movsl
or
cmpsl
dec
cmp
sbb
pop
pop
lods
and
js
int3
mov
sub
mov
nop
mov
hlt
jo
testb
xor
adc
lds
call
stos
test
add
mov
or
fadd
fmul
sahf
or
enter
mov
or
cmp
inc
or
repnz
push
es
fcoms
pusha
sbb
fsubs
ret
mov
mov
call
adcl
or
mov
or
xor
pop
fs
sbb
push
stc
not
mov
push
dec
sub
insb
std
stc
test
adc
dec
fadds
pop
outsb
mov
dec
mov
push
xchg
add
addl
and
inc
dec
xchg
cld
loope
push
mov
cmp
fdivs
into
pop
inc
mov
gs
and
call
mov
hlt
adc
mov
jmp
enter
dec
or
push
xor
enter
rcll
es
sub
mov
in
jmp
leave
pop
ljmp
fsub
and
jmp
dec
lcall
jnp
add
mov
pop
cmp
fisubl
popa
inc
nop
test
add
outsb
loop
insb
std
imul
mov
cld
add
sbb
xchg
rcr
fwait
int
in
int
sub
xchg
out
adc
jbe
adc
shrb
jo
in
xor
ljmp
popf
loopne
add
add
aam
fcmovnu
add
outsb
cmpsb
push
loopne,pt
jne
sub
inc
cmp
mov
adc
jne
cmp
dec
fdivrs
sub
adc
sbb
scas
or
add
pop
in
fsubl
or
push
xor
pop
out
fdivrs
repnz
negb
mov
lods
shrl
mov
lock
insl
push
ficompl
dec
sbb
push
mov
add
or
adc
add
inc
add
rorl
hlt
sub
aaa
mov
add
mov
lds
data16
fildl
and
out
xor
adc
dec
lea
mov
mov
xlat
push
pop
sub
mov
xor
dec
jb
fnstenv
jb
add
subl
lcall
or
sahf
insb
sbb
imul
out
fsubr
hlt
jl
pop
hlt
jge
mov
in
pusha
and
rcl
out
popf
push
sub
jmp
push
or
jg
pop
xor
cmp
inc
movsb
fcoms
mov
clc
adc
mov
or
dec
mov
lcall
or
or
call
cmp
aas
clc
orb
add
jbe
pop
mov
xchg
out
iret
pop
pop
pushf
in
fld
loope
add
xor
and
jl
fs
dec
jp
cmp
shlb
add
sbb
shrb
add
rolb
rorl
je
clc
xchg
stos
jbe
dec
xor
inc
adc
xor
adc
xor
sbb
xchg
adc
mov
ret
js
dec
mov
dec
mov
inc
adc
sub
iret
jo
or
popf
into
adc
jl
daa
stos
inc
dec
or
rcr
pushf
push
lahf
nop
fs
adc
rcrb
andl
mov
rcrl
cltd
cmp
push
lcall
lcall
or
mov
push
call
inc
test
push
imul
xchg
mov
data16
pop
ljmp
stos
repz
movsb
xor
shll
filds
std
loopne
cld
int
mov
add
push
imul
and
xor
ss
fiaddl
inc
subl
xor
adc
jl
xlat
fildll
push
sbb
lods
or
mov
pusha
fs
fisubs
insb
into
shlb
inc
loopne
rclb
or
test
adc
dec
xchg
add
shr
in
xlat
fxch
test
pop
sbb
into
add
sbb
enter
lret
inc
inc
les
imul
sbb
or
ret
jbe
or
push
repnz
idiv
push
adc
faddl
ret
mov
xor
test
adc
and
es
jo
pop
xor
movsb
int
sbb
and
mov
sbb
inc
nop
dec
fucomip
sbbl
rcl
xorl
sub
loope
test
test
or
inc
in
es
push
add
jmp
and
sbb
hlt
scas
popa
dec
js
adc
pushf
mov
and
lds
mov
adc
dec
sbb
das
sub
lea
mov
int3
xchg
mov
outsb
gs
cwtl
dec
dec
cmp
pop
push
mov
out
adc
inc
sbb
ds
adc
add
add
dec
xor
scas
sbb
fisttpl
inc
jge
test
cwtl
pop
add
xor
push
data16
pop
test
fdivs
xor
dec
mov
inc
and
mov
dec
cmp
insl
sbb
ja
and
xchg
addr16
sahf
cmp
xchg
push
sysenter
dec
int3
jb
lods
sbb
push
dec
cmp
add
iret
ds
push
pusha
fxam
mov
loope
lock
je
js
mov
fadd
imull
and
dec
and
mov
ficoml
outsl
jge
jno
inc
insl
fnstcw
lret
jae
jmp
xor
dec
add
and
adc
aam
mov
aad
in
inc
pop
loope
xor
lods
inc
dec
lock
jb
daa
mov
test
leave
stos
and
imul
scas
sahf
rcrb
shl
push
push
pop
mov
or
cli
push
out
xor
mov
imul
inc
cmp
and
outsb
loopne
or
adc
dec
jle
mov
mov
add
mov
clc
mov
jbe
sbb
repnz
or
inc
inc
addb
out
mov
and
lretw
aad
lahf
sbbb
sub
and
pop
loopne
mov
or
xlat
scas
xchg
stc
rcrb
addr16
cmp
clc
add
insb
rolb
and
pop
sbb
jno
jmp
jnp
loopne
lcall
mov
mov
movsl
cmp
xor
sarb
ret
popa
rcl
dec
rolb
data16
mov
mov
push
pop
pop
mov
clc
shlb
inc
and
aad
add
loopne
fisttps
sar
addb
and
push
inc
loop
outsl
sbb
adc
pop
sbb
dec
mov
push
jbe
clc
jo
jg
clc
ljmp
mov
inc
sbb
add
add
icebp
jns
or
inc
xchg
add
test
sbb
and
dec
es
das
mov
add
xchg
adc
insb
test
sbb
sub
mov
subb
mov
push
xor
add
mov
cmp
push
sbb
shlb
sub
push
int
dec
push
xchg
pusha
adc
sub
or
mov
out
add
loopne
add
xchg
in
dec
sahf
pop
add
cmp
mov
push
or
and
or
idiv
rorb
faddp
and
out
add
ret
lock
dec
or
je
push
rcr
or
push
cld
push
dec
popf
xchg
pusha
repz
pop
jmp
sbb
pminub
pop
sarl
sub
js
loopne
insb
push
sbb
clc
fs
and
jmp
dec
add
cltd
leave
mov
add
insb
js
int3
add
test
addb
push
mov
push
add
push
push
lcall
push
or
test
xlat
jmp
inc
popa
mov
out
stos
jns
adc
mov
out
xor
aad
loopne
icebp
and
push
xchg
cmp
fwait
jl
addl
xchg
fsubl
pushf
adc
sti
mov
inc
negl
jmp
out
add
inc
dec
mov
jge
jb
scas
push
sub
jg
loopne
mov
mov
mov
push
add
insb
imul
mov
or
pop
out
add
addb
loope
ja
mov
add
cmp
faddl
jmp
inc
leave
jmp
xlat
outsl
shr
outsl
rol
cmpsl
xor
fwait
dec
mov
xorb
and
aam
imul
sbb
repz
mov
pop
test
sub
std
cmpsb
lock
dec
imulb
into
jmp
and
sub
mov
fistpl
add
pop
daa
cmp
jge
xor
rorl
ja
stos
cmpsl
jno
add
add
push
pop
sub
notb
or
dec
enter
je
divl
inc
jge
cld
pusha
add
dec
inc
lods
pop
mov
sbb
popf
lock
out
xor
inc
lods
cld
cmpsl
sbb
movsb
out
xchg
xchg
xor
or
arpl
or
mov
dec
popf
in
mov
pop
shlb
lock
sarb
rcrl
loopne
or
or
cld
out
cmpsb
test
mov
fildl
sbb
cmp
or
in
imul
xorb
outsl
jl
and
adcl
aas
movsl
xor
mov
rcl
into
int
push
lahf
inc
dec
int3
cwtl
cmp
cmp
pushl
outsl
pop
jno
cld
xlat
fadds
fsubrs
stc
fiaddl
enter
les
sub
dec
outsb
ret
fcomps
push
repnz
jmp
inc
pop
inc
sub
or
aam
pushf
push
pop
test
add
cmpsb
pop
cmc
inc
jne
pop
xorb
or
scas
divl
testl
ret
and
push
subb
fstl
lahf
mov
add
lahf
xchg
mov
sahf
add
repz
loopne
imul
or
cmp
cwtl
orb
xorl
dec
mov
add
out
idiv
lcall
add
mov
push
rcrb
push
jg
incl
xlat
sbb
shll
in
adc
lock
fstpt
xchg
adc
mov
push
lahf
add
mov
fidivrl
incl
dec
pushf
test
shr
ljmp
stos
roll
lret
add
push
mov
jnp
mov
xchg
jmp
adc
pop
cmp
inc
pusha
add
adc
push
cld
jg
add
add
mov
aas
jl
xchg
dec
xor
adc
sahf
add
sti
incl
out
add
mov
sub
add
push
sub
add
sar
fistps
addl
addb
add
repnz
daa
sahf
and
xor
and
ljmp
out
push
pop
add
push
add
mov
lcall
sub
mov
outsl
xchg
and
test
mov
cmp
add
lcall
dec
into
add
mov
or
inc
add
loopne
test
jmp
and
jp
sbb
je
dec
sbb
or
pushl
sbb
add
fwait
add
addb
add
jg
add
sub
jbe
adc
jbe
lret
roll
enter
cld
aad
shll
cwtl
adc
sbb
inc
sub
sbb
icebp
add
leave
adc
add
adc
mov
xchg
add
inc
clc
inc
or
fwait
push
cmp
push
xor
int
sub
xchg
jne
lcall
imul
call
mov
cmp
xchg
fmuls
jmp
add
add
sub
out
dec
pop
ljmp
stos
mul
adc
and
bound
add
lds
jp
sub
adc
sub
inc
xor
cmp
shl
dec
or
dec
mov
sub
sbb
mov
mov
push
jnp
mov
sar
mov
inc
adc
inc
adc
enter
rcrb
mov
inc
jmp
loopne
sub
mov
pop
xor
pop
popl
fadd
xor
nop
out
push
clc
jge
adcb
fcmovb
sbb
int3
sbb
sbb
pusha
loope
stos
int3
fs
xor
xchg
nop
stc
xchg
add
sbb
insl
push
mov
ret
test
ss
mov
jo
or
enter
mov
sub
je
clc
push
mov
xlat
and
or
int3
cli
fsubs
inc
xor
fs
lock
lea
int3
aam
add
xchg
add
push
jle
stc
push
xorl
xor
or
daa
lock
dec
push
xchg
into
sbb
push
addl
hlt
mov
xchg
xor
sbb
test
mov
mov
sbb
xor
xchg
fsub
roll
and
pop
inc
add
or
ret
xor
add
xchg
pop
in
cmp
loopne
imul
pop
mov
sub
mov
jnp
mov
cmpsb
iret
sarb
sub
mov
imul
adc
pop
and
and
inc
outsb
movsb
push
dec
inc
and
or
sti
xor
or
test
inc
addr16
in
je
mov
mov
imul
xorb
lea
jne
mov
lods
es
xor
clc
mov
aad
xlat
mov
inc
mov
mov
in
cmp
inc
jnp
mov
int
sbb
loope
xchg
push
int3
dec
adc
add
add
add
dec
add
inc
xor
pop
cmp
add
xor
adc
xorl
or
mov
lock
outsl
ret
cmpb
stos
test
mov
cmp
pop
dec
xor
mov
xor
into
cmp
je
ficoms
fcom
inc
push
xlat
sarl
or
fsubrs
or
scas
jno
dec
sbb
outsl
mov
imul
push
dec
mov
outsb
jp
xor
add
or
adc
lds
push
jno
push
xor
jmp
inc
add
mov
or
fcoml
movsl
pop
jno
addr16
stos
mov
pop
cld
into
adc
scas
sbbb
mov
jl
clc
lds
jmp
leave
lock
mov
fs
aas
jmp
out
into
inc
sub
adc
clc
loopne
loop
push
xchg
mov
add
cli
or
aad
xlat
or
sub
aaa
and
loopne
pop
loop
pop
imull
rorb
and
cmpsl
jmp
iret
sub
fdivs
jle
jbe,pn
and
imul
jl
jne
xor
dec
cmpsl
jmp
outsl
mov
rorl
fldl
loope
sbb
aad
sbb
mov
push
ljmp
add
push
or
fidivrs
daa
cmp
ds
and
push
stos
add
adc
adc
push
push
adc
arpl
xor
jnp
push
imul
cmp
loop
pop
sub
testl
loope
sbbl
int3
pop
or
or
adc
xchg
dec
mov
push
add
xor
arpl
cmp
imull
jb
cli
dec
outsb
push
mov
xchg
lds
pop
jo
mov
or
mov
enter
lods
test
add
mov
cmp
nop
lods
add
out
les
add
call
scas
mov
sbb
jmp
cmp
fistps
inc
sti
testl
jo
push
mov
inc
loopne
imul
inc
sbb
out
push
jmp
sbb
sub
cmp
repnz
sbb
enter
inc
jo
ja
loop
add
je
scas
cwtl
ret
test
xor
add
pop
ret
adc
xchg
and
add
out
shl
loop
sub
cmp
xchg
pusha
sbb
shlb
out
sub
lcall
loopne
mov
pop
mov
push
fcomip
adc
rolb
jge
jmp
addr16
adcl
pop
int3
mov
mov
shrl
clc
mov
xor
repnz
pop
lock
dec
pushf
shrl
addb
or
aam
fidivs
in
jae
mull
sbb
push
idivl
inc
xor
addb
cli
dec
mov
and
or
jb
cmp
xor
dec
cmp
jp
inc
sub
mov
int3
push
xor
insb
clc
or
and
pop
xor
inc
insb
scas
sbb
ret
pop
icebp
and
xchg
sub
cmp
mov
or
and
jmp
sarb
mov
xor
in
xor
jnp
mov
mov
mov
inc
or
addb
jbe
cs
sub
sub
daa
int3
jo
jb
sub
pop
mov
je
jmp
movsb
add
inc
xor
add
push
mov
cmp
inc
pop
mov
push
jno
jo
adcl
insb
mov
fstpt
or
add
inc
addl
fldenv
and
adc
jo
jnp
pop
test
dec
clc
pop
outsb
js
xchg
xor
pop
mov
sbb
push
adc
aaa
cmp
pop
loopne
clc
mov
sahf
int
mov
push
adc
push
in
addl
out
mov
jmp
test
pop
jbe
mov
test
mov
dec
or
aas
ret
test
loope
aaa
push
cmc
sub
xchg
popa
cmp
repnz
or
sbb
testl
push
cmpsb
jmp
jle
cmp
jne
mov
call
repnz
mov
mov
push
jecxz
mov
jmp
cs
pushf
rorb
adc
and
cmc
sub
adc
inc
sbb
popa
addr16
shr
adc
dec
testl
lahf
push
fisubrs
pushf
hlt
pop
aaa
dec
mov
or
leave
loope
adc
sub
stc
and
out
rorb
test
mov
cmp
fcompl
pop
xor
lcall
mov
or
sub
gs
cmp
ja
push
sbb
aad
loope
xchg
cwtl
inc
fisubs
pop
adc
mov
adc
or
aam
xor
or
testl
xor
adc
fisubs
pop
xor
adc
insb
or
jg
cmp
xor
jne
loopne
xchg
and
xchg
movsl
or
inc
mov
push
dec
push
cli
ret
jecxz
movsb
lcall
cmp
mov
xor
fstps
push
push
mov
addl
mov
iret
aad
pop
loop
rclb
shll
mov
push
adc
push
jnp
pop
xchg
add
or
inc
std
out
add
movb
test
inc
out
jl
cmp
cmp
rcr
add
and
sarb
mov
or
adc
mov
and
and
pop
dec
xor
testb
and
sbb
pusha
ret
loope
sub
js
dec
sub
add
add
inc
jge
cmp
aam
xor
subb
faddl
sbb
in
daa
cmpsl
sub
jnp
push
sbb
enter
sbb
xor
mov
scas
jecxz
sbb
xor
dec
cmp
loop
cmp
add
in
dec
shl
mov
add
loopne
test
adc
ljmp
int3
jo
jbe
or
mov
shlb
adc
loope
xor
cmpsb
ds
imul
scas
das
jl
sarl
pop
xchg
outsl
pop
xor
std
sbb
call
or
insl
sti
mov
filds
js
mov
shlb
push
cld
push
and
push
sti
loopne
push
dec
or
and
je
mov
xorl
push
jbe
inc
adc
lea
aaa
icebp
cmp
cmp
dec
iret
pop
outsb
and
pop
outsb
in
pop
jbe
dec
popf
xchg
rcll
test
popf
out
out
sub
cmp
mov
sbb
xchg
rcrb
call
sub
sbb
and
xchg
adc
xor
addr16
ret
or
push
or
adc
lea
dec
cs
push
add
push
pop
sub
std
cwtl
test
das
pop
mull
fidivs
repnz
xchg
dec
movsb
add
fnstsw
jg
ret
push
flds
mov
fisubrl
out
pusha
inc
mov
nop
sub
mov
ret
pop
xor
or
pop
mov
inc
mov
xchg
clc
aad
lods
dec
bound
sbb
aaa
es
xor
addr16
mov
addl
imul
stc
testl
cltd
addr16
outsl
nop
ficompl
xor
add
add
cmpsl
inc
push
and
sbb
jle
inc
inc
fbld
enter
cli
test
movsl
mull
push
push
pusha
imul
fwait
rcrb
cwtl
adc
lret
fldl
cmp
push
outsl
aaa
jecxz
ja
iret
loop
dec
inc
outsl
scas
out
fld
push
idivl
pop
movsb
pop
leave
sbb
pop
into
test
xor
andl
aaa
pop
inc
roll
mov
jmp
notl
shll
dec
dec
sub
cmp
inc
or
stos
aaa
imul
js
adc
pop
xor
jo
sbb
pop
xchg
sti
popa
lock
sbb
pop
inc
loope
add
lods
add
inc
es
enter
jno
fbld
mov
xor
insb
xor
push
arpl
sub
pop
test
jae
xor
xor
fadds
lds
ds
jg
notb
and
pop
loop
adc
dec
xchg
push
add
mov
call
dec
popa
les
std
cmp
jbe
inc
xor
dec
pop
faddl
and
pop
andl
andl
les
testb
rcrl
jne
outsl
movlps
stos
xchg
dec
mov
mov
in
popw
cmc
and
pusha
dec
mov
stos
or
pop
xor
fcompl
add
lock
add
jno
lret
icebp
mov
adc
sbb
cmp
pusha
sbb
jbe
test
rorl
inc
std
xlat
cwtl
jmp
ja
daa
pop
cmp
enter
and
pop
xchg
enter
sbb
ljmp
call
jno
je
or
sub
mov
xchg
icebp
push
addr16
or
incl
rcll
movsl
dec
ljmp
sbb
jge
xlat
pop
xlat
fsubl
bound
shll
call
add
call
push
lds
out
sub
pop
mov
fiaddl
call
sti
cwtl
add
jb
hlt
pusha
ficoml
pop
dec
and
je
sbb
inc
mov
mov
or
ret
pop
cmp
jg
aaa
movb
inc
adc
dec
sbb
cmpsl
jp
sar
mov
int
dec
insl
mov
imulb
inc
sbb
enter
adc
dec
iret
imul
dec
adcl
lods
mov
test
rol
mov
fnstenv
negb
jne
cmpsl
inc
stos
sbb
les
add
add
ds
sbb
add
jmp
mov
jbe
cltd
pop
loopne
mov
jge
jmp
sub
inc
pop
leave
in
adc
out
mov
inc
push
mov
mov
dec
shrb
xor
or
add
mov
dec
ja
leave
add
fsub
add
jecxz
dec
xchg
js
jp
pop
shr
add
jp
pop
dec
add
pusha
gs
mov
insb
hlt
clc
daa
pop
push
pop
int
add
adc
rorb
and
mulb
pop
subb
in
ret
bound
adc
faddl
push
jl
xchg
cmpsb
push
dec
or
ret
inc
xor
pop
mov
push
or
cld
push
adc
sub
popl
add
inc
call
push
add
add
cli
call
adc
daa
push
xor
mov
ja
js
sbb
jne
or
addr16
mov
xchg
push
in
jo
sbb
mov
mov
mov
mov
rolb
mov
sub
push
icebp
stos
sbb
xchg
clc
add
dec
jb
lcall
sbb
xchg
adc
inc
dec
jle
xor
rcrb
loop
jne
pop
sub
icebp
bound
sbb
notl
jl
jp
loopne
sti
outsl
les
std
in
lahf
ja
xchg
mov
cmp
cmp
shlb
or
dec
push
add
dec
addb
mov
adc
ds
ret
enter
arpl
out
and
sahf
enter
xor
jo
sub
pop
aam
call
pmulhuw
movsl
ficoms
filds
fisubs
push
xor
or
and
sahf
or
push
adc
fadds
cmp
adc
pop
inc
out
add
inc
mov
pop
ret
scas
pop
data16
imul
cmp
mov
popf
out
sti
mov
inc
stos
add
mov
loope
xor
or
andb
fbld
pop
adc
in
cmp
inc
sbb
jp,pt
mov
aam
nop
or
push
and
dec
es
ret
jmp
stc
sahf
ret
push
mov
adcl
data16
popf
xchg
popl
adc
adc
xor
adc
cwtl
inc
add
rol
stc
jp
sti
in
addl
shr
xor
sbb
and
sub
sahf
and
test
sbb
mov
addl
cs
notl
fdivl
popf
xlat
sub
sub
mul
inc
or
mov
sbb
jp
sub
test
inc
imul
inc
xchg
rorb
ljmp
sub
xchg
test
pop
push
push
xor
fwait
testb
fdivl
pop
shr
bound
mov
data16
ljmp
push
or
or
push
pop
call
sbb
popa
out
add
leave
aam
jmp
mov
iret
dec
mov
jno
xor
test
sbb
into
pop
rcrl
gs
arpl
xor
sbb
inc
jbe
mov
push
cmp
xor
cmp
inc
and
mov
xchg
movsl
add
mov
cmp
xchg
lret
sub
mov
inc
xor
inc
push
and
imul
dec
cwtl
adc
pushf
lods
pop
and
in
ljmp
pop
pop
fbstp
dec
enter
movsb
mov
dec
movb
rcrl
add
sbb
adc
inc
mov
pop
testb
sbb
fnstsw
pop
ljmp
cmc
cmpb
sbb
adc
ret
and
pop
loop
mov
pop
popf
lds
clc
pop
sub
arpl
test
add
adc
test
inc
fwait
ja
rol
hlt
add
pop
pop
mov
jns
add
or
or
dec
adc
xchg
lea
xor
mov
ficoms
add
jae
pop
testl
mov
imul
pop
push
adc
stos
lcall
push
xor
sahf
fidivs
pop
push
aam
xor
xchg
push
or
xor
sbbl
addr16
mov
das
fiaddl
call
shlb
jo
por
js
or
in
mov
ret
mov
cs
cmp
je
push
xchg
adc
pop
mov
push
in
cld
sbb
jge
pop
sbb
cmp
je
or
lret
and
jne
fcoml
iret
les
hlt
aam
sbb
add
mov
mov
jl
dec
sarl
mov
jle
cwtl
icebp
adc
cli
dec
dec
sbb
sub
outsb
mov
jge
les
or
cli
push
lret
add
adcb
lds
iret
addr16
popf
mov
and
cmp
sub
orb
fists
orb
and
fidivrs
cmp
je
mov
adc
lcall
sbb
sbb
call
mov
mov
adc
into
sbb
jne
test
shll
or
sub
jle
test
or
xlat
adc
fbstp
inc
movsb
or
and
in
rolb
push
add
xor
test
jb
or
rolb
mov
std
mov
test
and
add
cwtl
jmp
rolb
arpl
pushf
aam
ret
ja
or
cs
vmulps
pop
std
or
push
xchg
icebp
arpl
push
fisttpll
addb
push
jp
xor
sub
push
out
and
mov
jne
inc
dec
enter
mov
loope
mov
push
xchg
and
adc
push
xchg
in
cmp
and
push
std
dec
nop
arpl
enter
xchg
add
mov
popl
cmp
adc
xchg
inc
div
out
fwait
jmp
push
out
int3
std
jo
int3
sbb
inc
out
roll
cwtl
sub
adc
sub
or
in
clc
mov
jne
jle
ret
andb
test
and
out
add
and
sbb
and
dec
addb
jne
or
add
into
sti
movsl
add
ret
add
pop
out
add
add
mov
shl
daa
scas
push
gs
scas
fisubrl
mov
mov
jmp
and
rcrl
xchg
inc
or
pop
jnp
mov
jp
int
inc
hlt
roll
in
call
dec
cli
xchg
xchg
or
adcb
rorb
mov
jmp
inc
cmp
pop
cmp
ja
adc
andb
ss
ss
sarl
push
fldt
cmp
cs
iret
sbb
pop
in
xor
or
insb
lds
xor
jge
rcl
ret
test
rclb
repz
cld
inc
mov
iret
inc
test
out
lahf
pushf
andl
call
shl
lcall
es
jmp
pop
jno
shrl
popa
das
mov
sbb
and
jg
cmp
cmc
mov
dec
cwtl
icebp
xchg
loope
mov
sbbl
sub
es
add
mov
outsb
or
ret
dec
push
pop
cmp
stos
pop
pxor
jo
addl
xor
dec
xchg
or
stos
pop
mov
ret
add
out
inc
jae
sbb
addr16
xor
sbb
or
roll
sub
fiadds
sub
push
xor
out
pop
xlat
and
push
inc
int
pop
mov
popa
mov
jo
test
cmpsb
fcoml
push
jecxz
testl
call
and
movsl
popf
in
dec
xor
test
jae
mov
jle
sbb
ret
push
mov
pop
stc
inc
cmpsl
shrl
push
xchg
add
inc
inc
xchg
sbb
shlb
ss
mov
or
leave
jecxz
or
jo
scas
pop
sbb
cltd
dec
jecxz
out
push
lods
pop
dec
push
cmp
add
sub
mov
cli
xchg
dec
jmp
ja
cmp
xchg
and
cmp
and
cltd
loope
pop
push
mov
dec
in
push
lea
jecxz
mov
test
adc
add
into
sbb
stos
mov
jl
and
icebp
adc
insl
out
adc
inc
xor
repz
jg
xchg
mov
cwtl
push
lret
xor
mov
fisubs
xor
fisttps
int
jl
cwtl
pop
push
sub
xor
mov
mov
shr
inc
mov
adc
cmp
idivl
mov
push
cld
mov
ret
pop
jmp
call
mov
add
sbb
jmp
inc
sub
jae
xor
adc
repnz
sbb
jecxz
cwtl
adc
sarb
mov
sub
pop
add
xor
cwtl
rcrb
pusha
add
dec
stc
inc
add
inc
jno
cli
daa
push
adc
mov
les
loopne
or
sbb
sbb
int3
xor
cwtl
xor
shr
in
mov
sub
mov
mov
icebp
inc
mov
inc
lret
inc
push
fmull
cli
and
add
js
outsl
fmuls
or
hlt
insl
mov
inc
cld
inc
mov
testl
fs
mov
rolb
cli
out
adc
add
sub
cli
push
dec
aad
loop
push
push
ss
es
ljmp
and
xchg
pop
sbb
movsl
mov
and
add
add
add
mov
hlt
jnp
dec
jb
in
xchg
or
adc
out
add
out
adc
cli
add
ss
add
adc
add
add
insb
cmp
addb
pop
xchg
add
hlt
cmc
or
mov
mov
sub
xor
jg
sbb
fwait
push
xor
push
add
add
clc
inc
cmpsl
dec
movl
add
adc
hlt
add
lods
mov
inc
cmp
jp
add
sbb
loop
jl
outsb
int
enter
add
fucomip
repnz
test
fwait
cmp
add
je
cmp
jno
pushl
inc
and
adc
jo
add
jl
enter
rorl
loope
fildll
adc
ret
xor
shll
in
out
fcoml
or
imul
jmp
incl
lcall
add
mov
hlt
mov
add
add
outsl
idivl
sub
aam
out
fistps
imul
jo
and
push
test
lods
int3
inc
xchg
jge
jg
hlt
daa
add
fwait
imul
push
decl
sub
sbb
fidivrs
negl
jge
ss
pop
imul
aad
add
out
cmp
bound
inc
push
jbe
add
mov
or
lods
add
or
push
or
movsl
fcmovne
inc
out
add
mov
lods
sub
ret
jo
out
enter
and
int3
add
mov
or
add
mov
mov
push
mov
push
outsb
add
adc
adcb
pinsrw
or
incb
fists
adc
add
test
mov
sbb
add
lcall
sbb
out
add
pop
sarb
int3
and
push
add
cld
mov
cli
jmp
shl
mov
mov
push
add
and
jne
mov
sbb
stc
jg
mov
scas
ficoml
xor
mov
jge
ret
lret
mov
movsl
cli
jg
cld
scas
bound
mov
xchg
add
xchg
adc
decl
das
ja
fbstp
or
in
jmp
pop
cmpsl
cs
dec
lods
stc
std
ja
add
int
adc
test
sub
xchg
fidivrl
inc
jp
add
test
mov
popa
cmp
mov
fs
mov
mov
pushf
sbb
pop
ss
xchg
adc
popl
lock
sub
xchg
xchg
sub
je
lock
ja
pushf
imul
or
adc
call
divb
and
and
outsl
push
adc
aaa
adc
in
jg
lea
xchg
inc
outsb
sub
frstor
int
dec
test
mov
add
mov
push
xor
xchg
mov
cld
iret
femms
sarl
sbb
js
jle,pt
cmpsb
scas
jmp
mov
es
inc
xchg
adc
mov
dec
cmpsl
mov
outsb
jnp
xlat
adc
jg
in
fisubs
pop
xchg
cwtl
cltd
and
adc
jp
xor
mov
mov
dec
ja
or
xchg
idivb
dec
pop
sarl
and
loope
insl
push
add
cmp
pop
or
std
add
pop
ljmp
jne
pop
dec
hlt
clc
mov
push
decb
add
shll
inc
add
lods
scas
mov
out
lahf
add
fsubp
mov
inc
adc
mov
or
adc
inc
and
sub
mov
out
or
scas
xchg
ds
sub
lods
sub
mov
in
mov
inc
jp
ja
je
push
imul
pop
popa
dec
fimuls
cli
jns
xor
push
xchg
pop
sub
mov
and
jmp
xchg
test
andb
add
lods
pop
or
adc
add
cwtl
mov
or
inc
and
jo
loopne
xchg
pop
clc
fcmovnbe
mov
xchg
sub
daa
roll
movsl
insl
mov
in
fwait
xor
fldt
in
add
adc
or
sahf
and
pop
push
xchg
hlt
sub
test
inc
stos
xchg
aad
aas
jge
ret
movsb
pop
cli
sbb
lods
cmp
clc
sub
push
lods
scas
add
sbb
ja
into
mov
outsb
and
dec
sub
mov
adc
popf
rcr
mov
shrl
pop
loop
inc
pop
and
jg
mov
aas
adc
mov
lret
add
or
adc
pop
dec
add
enter
enter
mov
js
jl
push
mov
test
or
cmc
push
insl
push
push
fiaddl
orb
inc
jecxz
push
and
lret
out
mov
inc
mov
adcl
jg
cmp
jne
xor
inc
jmp
add
ret
push
pushl
dec
mov
dec
sbb
loopw
ss
lock
inc
xor
clc
testb
mov
loop
push
aaa
lock
push
pop
and
test
or
dec
or
ficoms
les
cmp
mov
js
es
pop
push
push
xlat
lock
cmp
ret
movsl
lods
sbb
mov
call
test
imul
adc
fnstsw
sub
adc
into
mov
pop
outsb
es
jmp
rcrb
inc
jb
jo
aaa
fidivl
xor
cmc
or
stc
push
das
sub
dec
jae
les
push
rcr
mov
movsb
in
and
gs
and
push
in
jb
push
and
push
push
or
mov
inc
fcoms
cs
cld
je
or
mov
iret
arpl
sti
cwtl
cli
test
inc
arpl
in
ret
pop
pop
pop
adc
sub
pop
leave
movb
filds
xchg
inc
jg
aaa
adc
mov
insb
daa
xor
cmp
cs
jns
mov
cmpxchg
fistpl
mov
pop
les
mov
add
dec
jg
xor
ss
add
test
nop
int3
mov
aas
add
mov
cld
inc
das
inc
stos
add
jge
cmp
jo
call
xchg
pop
jns
fcmovu
inc
mov
dec
cmpsl
movsl
sbb
mov
sub
jg
fsubrs
and
int
add
test
mov
fstpt
std
pop
pop
lret
lea
sbb
sahf
stc
bound
push
sbb
mov
mov
jmp
out
outsb
fsincos
dec
push
pop
fidivrl
sub
outsb
insl
sbb
popa
aam
push
cld
mov
jo
aas
fcoms
add
xor
stos
lods
inc
xlat
test
dec
mov
outsb
in
js
addl
sbb
pop
mov
daa
loopne
sub
aaa
sbb
or
inc
jle
dec
aas
mov
mov
addl
repz
sub
sub
adc
clc
push
int
xlat
and
movsl
jb
shrl
cld
testb
jbe
jnp
mov
adc
push
adc
sbb
addr16
cmp
cmpsb
push
and
call
push
xchg
call
or
stos
sar
dec
cld
and
nop
stc
jne
out
push
mov
jecxz
daa
mov
jno
or
test
subl
sbb
mov
loop
hlt
imul
mov
aad
adc
add
pop
inc
dec
dec
mov
test
fadd
sbb
inc
cmp
xor
out
je,pn
hlt
repnz
push
add
push
lods
or
mov
incb
jnp
ds
rcrl
loopne
sub
mov
rcrb
lea
ds
mov
std
mov
inc
cmp
hlt
bound
cmpsl
or
push
mov
dec
shll
add
xor
mov
pop
jne
mov
shll
imull
sahf
pop
mov
addl
inc
pushf
loop
and
mov
xchg
cmp
enter
push
stc
dec
lock
mov
loop
adc
adc
sbb
mov
mov
sub
hlt
shll
cmpsl
sarb
sub
cmp
jo
aad
or
pop
mov
mov
and
xor
dec
dec
stc
lcall
pusha
orb
and
sub
inc
xor
cmpb
and
mov
ret
aad
mov
cs
or
inc
shl
or
hlt
neg
adc
stos
not
shrb
mov
stos
pop
dec
jl
pop
dec
add
pop
lock
pop
inc
dec
stos
or
pushf
out
xchg
xchg
mov
sub
mov
dec
imul
add
loopne
sbb
pop
lea
enter
mov
vmwrite
shlb
pop
imul
scas
push
mov
outsl
dec
jp
mov
hlt
mov
mov
or
cmp
and
sahf
stos
out
cmp
movsl
xor
out
in
cmp
cld
loop
rorl
mov
jge
add
mov
xlat
movsl
in
in
sub
int3
mov
and
jbe
loopne
gs
pushf
clc
xchg
mov
daa
sub
mov
inc
push
fnstenv
xchg
pop
out
pop
in
or
test
xchg
sbb
or
pop
xchg
mov
or
adc
add
outsb
shlb
xchg
push
push
push
mov
inc
rorl
pop
stos
and
cmp
lret
mov
cmp
scas
cli
inc
mov
adc
inc
xor
mov
adcb
lock
shrb
or
aas
sbb
sub
clc
xor
mov
push
in
adc
outsl
or
orb
mov
out
in
out
mov
mov
cwtl
mov
insl
in
xchg
add
loope
hlt
data16
lock
inc
mov
enter
daa
lock
pop
in
mov
lock
mov
mov
fimuls
nop
sub
test
jle
xchg
shll
mov
push
jno
sub
pop
jge
inc
cmc
cld
jmp
or
adc
in
jnp
sbb
nop
add
cltd
adc
mov
sar
jg
test
je
das
mov
movsl
jecxz
mov
shrb
lds
sbb
dec
push
sub
pop
cli
mov
and
cmpsl
ds
jmp
cmpsb
mov
imul
inc
mov
sbb
mov
mov
enter
dec
jo
sub
mov
adc
lgs
out
and
push
xchg
pop
add
movl
jge
add
mov
mov
xor
mov
repnz
mov
es
faddl
pop
stos
mov
loopne
push
xchg
jb
sub
jbe
inc
cmp
adc
dec
push
xor
inc
fildll
mov
push
adc
aas
pop
loop
ficompl
inc
mov
movl
adcl
pop
mov
mov
xor
cmp
lret
lods
dec
fwait
jno
lret
int
sti
add
xchg
insl
arpl
jae
mov
mov
sbb
hlt
sbb
adc
jg
rorl
xor
mov
mov
push
xchg
hlt
sahf
mov
imul
daa
insb
dec
add
mov
add
pusha
inc
and
push
pusha
out
jbe
mov
clc
mov
rcl
xor
dec
std
pop
iret
in
or
fcmovnb
in
loope
stos
cmp
dec
add
jle
cs
xor
jne
sub
and
pop
aaa
mov
inc
push
xchg
roll
mov
or
ljmp
test
lahf
jp
inc
cmp
inc
in
cmp
loopne
rcrl
mov
adc
lahf
inc
popf
test
sub
xchg
fs
pop
gs
pop
jp
jmp
and
xor
scas
in
test
sub
pop
jno
and
or
jl
mov
mov
or
mov
rclb
call
mov
sub
sbbl
je
xchg
push
loop
xor
lds
jns
rcll
xchg
clc
in
push
add
add
outsb
mov
das
mov
inc
sti
jg
cltd
dec
insl
in
push
or
pop
pop
push
hlt
inc
mov
in
mov
adc
lock
sbb
push
add
sub
add
inc
pusha
or
jbe
dec
or
or
loop
outsl
mov
icebp
mov
gs
mov
icebp
jbe
stos
sub
mov
ss
and
or
lds
sbb
test
cmp
adc
push
popf
mov
fmull
inc
pushf
adcb
mov
push
incl
push
pop
inc
jne
ds
sbb
xor
dec
sbb
jns
dec
mov
jecxz
adc
aam
addr16
cs
dec
adc
movsl
jno
mov
xor
push
adcl
loop
xlat
add
leave
dec
xlat
sbb
sub
sbb
stc
inc
es
mov
add
test
ljmp
subb
imul
jne
push
je
xchg
aad
fwait
mov
mov
xchg
adc
xor
dec
push
sbb
int3
call
lahf
xor
or
cmp
cmp
inc
cmpsl
or
mov
sbb
mov
add
subl
add
jae
pop
sub
cltd
fisttpl
xchg
xchg
mov
jmp
xor
add
movb
pop
xchg
mov
xchg
jle
lods
aas
std
dec
inc
inc
or
xchg
packuswb
cmpb
cld
or
out
outsb
aas
rorb
dec
rolb
mov
das
jle
gs
xchg
icebp
lea
lds
jecxz
mov
and
xchg
or
sbb
cmp
neg
and
push
pop
cmp
rorl
aaa
scas
shl
lret
jne
aaa
rcl
fnstsw
fdivp
jns
lods
mov
addr16
sub
sub
mov
cmp
negb
jmp
sub
and
mov
dec
loop
push
sbb
dec
ret
dec
movl
lcall
inc
mov
dec
jnp
stc
aas
push
std
jp
incl
sub
es
xchg
idiv
jns
push
or
push
xor
lock
clc
mov
les
mov
lods
dec
jle
mov
mov
clc
jp
push
add
dec
mov
or
jo
imul
dec
pop
out
dec
add
cmovne
and
pop
pop
stos
mov
leave
mov
jmp
fxch
adc
fs
adc
addl
add
bound
add
adc
mov
sub
cmp
cmp
mov
sub
inc
imul
mov
ljmp
hlt
mov
in
ljmp
mov
test
inc
mov
add
shlb
sbb
or
leave
add
inc
mov
inc
pushf
lods
dec
lods
pop
clc
and
aas
sbb
sub
push
mov
adc
inc
mov
sbb
sub
sbb
lock
inc
icebp
add
fwait
sbb
out
sbb
movsb
xor
mov
ljmp
fnstenv
sub
sbb
stc
aaa
incl
sub
adc
iret
dec
mov
adc
out
sbb
ja
xor
mov
xchg
call
outsb
sub
incl
scas
es
and
and
aam
hlt
in
mov
ret
in
mov
sbb
repz
sahf
push
movsl
sbb
xchg
cltd
daa
xor
ljmp
bound
adc
push
fwait
lret
mov
mul
xor
adc
lods
outsb
pop
das
pop
std
filds
leave
jl
loop
pop
jno
cwtl
xchg
outsl
les
adc
and
call
xchg
cmpsl
les
mov
xlat
nop/reserved
je
movsb
xchg
das
pusha
or
incl
sbb
mov
xor
sub
lods
stos
push
loopne
mov
out
pop
sub
movsl
scas
jo
scas
mov
lods
outsl
xchg
jg
or
ljmp
cld
scas
sub
add
shl
sahf
movsb
inc
js
or
out
pop
or
aaa
jmp
popa
dec
and
mov
mov
out
fmuls
mov
decl
pop
jecxz
inc
jno
lods
repnz
stc
and
mov
aad
sub
mov
std
add
mov
adc
rorb
mov
andl
dec
shrl
dec
mov
in
xorb
les
xor
mov
insl
lcall
push
push
jge
jg
shl
mov
mov
sbb
add
aaa
fldt
jns
jg
push
pop
lahf
ljmp
cmp
sub
inc
xchg
dec
pop
fmull
mov
jg
push
xchg
sub
nop
addr16
int3
in
xchg
adc
and
sbb
cltd
test
pop
pop
cwtl
push
dec
lds
ljmp
inc
xchg
shrl
pushf
ljmp
jb
inc
outsb
loopne
adc
mov
and
add
addb
adc
dec
push
xchg
inc
test
cli
incl
pop
ret
stc
lret
sahf
iret
cltd
stc
lods
push
nop
inc
daa
cmpl
adc
add
inc
je
negl
mov
andl
jmp
pop
andb
movsl
ljmp
dec
stos
push
and
popa
sbb
mov
orl
test
mov
stos
popf
add
shlb
mov
push
or
cs
dec
adc
adc
dec
xor
aaa
cld
pushl
lock
in
or
and
push
xchg
ret
cwtl
lret
hlt
decl
testb
xor
adc
addl
mov
mov
hlt
adc
jp
ret
out
xchg
mov
jo
je
or
popl
addb
jecxz
mov
movsl
das
addl
push
jge
jg
jmp
fildll
mov
mov
adc
pop
sbb
dec
icebp
cmp
sqrtps
xor
mov
mov
sub
in
pusha
and
mov
or
inc
adc
adc
inc
cmp
mov
pushl
aam
cmpl
movswl
ficompl
es
loopne
negl
fbld
repz
mov
insl
cmc
or
iret
dec
pop
mov
cmpsl
xchg
out
xchg
xlat
mov
imul
in
cs
push
cli
sbb
sahf
in
sti
cs
mov
mov
pop
mov
cwtl
mov
movsl
jg
test
adcb
lds
push
lahf
pop
icebp
push
adc
call
iret
inc
push
sub
in
inc
lahf
add
pop
int3
push
cli
mov
xchg
pushl
std
xchg
scas
mov
out
mov
repnz
cmpl
pop
or
sub
cmp
inc
adc
mov
and
aaa
xchg
das
rclb
hlt
inc
add
mov
test
sub
cmpsb
mov
jb
cmp
lods
imul
pushl
adcl
shll
pusha
out
inc
andl
shrl
jmp
aaa
add
enter
push
iret
mov
mov
scas
out
xchg
enter
pushf
das
loope
add
lcall
data16
push
fwait
sub
lock
sbb
in
jl
ds
mov
or
push
pop
mov
sarb
xor
xchg
push
ljmp
add
out
ret
adc
xor
fadd
aam
mov
mov
pop
xchg
pop
mov
mov
xor
gs
push
fists
jl
mov
add
xlat
repz
cli
sub
outsl
xchg
leave
push
fists
in
inc
push
cld
das
pop
faddl
mov
into
jbe
mov
jns
push
mov
jo
inc
in
les
pop
mov
push
fstpt
jecxz
loopne
jp
and
inc
cmp
add
xchg
and
or
bound
mov
notb
push
dec
sbb
push
xchg
in
push
cmp
mov
sbb
or
fs
clc
das
pop
sti
push
repz
movsb
dec
push
outsl
mov
enter
cwtl
pop
xor
or
push
inc
or
sar
or
rclb
jg
aam
dec
addb
xchg
fsubl
push
mov
or
xor
ficomps
aaa
cmp
int
outsl
adc
push
cwtl
mov
mov
pusha
cmpl
inc
pop
jmp
add
jle
lcall
sti
idivb
inc
sarb
xor
jmp
dec
jle
ret
inc
jne
icebp
inc
mov
rorb
xor
jbe
jb
mov
adc
insl
jmp
movsb
add
test
jg
lea
xchg
icebp
add
sahf
sbb
push
insb
mov
add
push
fwait
scas
mov
mov
or
add
pop
mov
push
sbb
push
movsl
mull
stos
aad
sub
les
faddp
fbld
pop
push
cmp
mov
push
roll
subl
add
xchg
loopne
faddp
add
sbb
xlat
jg
add
clc
adc
xchg
cltd
push
pop
xor
and
cmpl
or
js
cmp
adc
add
add
div
icebp
dec
xor
cmpsl
cmpb
imul
and
fldl
test
aas
outsl
jmp
in
adc
ret
or
inc
push
clc
dec
mov
mov
or
add
dec
xchg
fmul
fmull
adc
jmp
pop
jmp
or
dec
mov
jnp
inc
jno
lahf
or
arpl
call
mov
adc
fcoml
into
cmp
out
add
in
sbb
fstpl
xchg
les
adc
push
test
loopne
cwtl
sahf
int3
daa
or
cmp
rorl
jg
jl
or
int3
mov
or
ret
xchg
in
clc
test
xor
daa
mov
lea
in
rorl
and
lock
movsb
js
jl
add
cli
outsb
mov
subb
mov
mov
stc
push
or
das
ffree
inc
mov
add
pop
or
call
add
arpl
sbb
gs
test
les
sub
and
outsb
outsl
xor
es
add
add
leave
test
sub
scas
sub
clc
inc
dec
sbb
cltd
clc
clc
rorb
aam
les
pop
mov
cvtdq2ps
lds
jne
adc
or
fcoml
scas
xor
stos
mov
sbb
aas
nop
call
or
sub
or
cwtl
jp
inc
out
cmp
and
mov
add
insb
mov
in
sbb
movsb
and
push
imul
fldt
xchg
out
stos
cltd
loopne
pop
cmpsb
es
add
stos
add
fstpt
pusha
shrb
out
or
xchg
jb
adc
push
std
xrelease
cmc
mov
jmp
push
iret
mov
leave
dec
scas
jmp
xor
mov
js
leave
mov
shrb
sub
mov
icebp
inc
push
xor
outsb
enter
mov
or
push
and
aaa
icebp
and
lret
dec
loopne
pusha
cs
rcrb
aas
inc
pop
push
mov
fcompl
fldl
add
cmpsl
out
jp
mov
cwtl
mov
loopne
and
rcll
jb
jmp
je
lods
and
cmc
jnp
fcoml
xchg
rcrb
out
dec
loope
outsb
jmp
jnp
testb
stc
sbb
adc
inc
ljmp
mov
lock
and
sbb
jns
add
dec
out
inc
sbb
xchg
int
cpuid
add
scas
dec
sub
je
push
aas
or
sub
adc
xlat
lods
aas
pusha
mov
in
mov
pop
outsb
cwtl
adc
les
add
pushf
or
addb
push
sub
sub
adc
sub
push
xchg
adcb
inc
fnstsw
clc
add
inc
and
dec
add
sub
test
xor
lock
idiv
mov
push
lret
add
inc
jp
fwait
mov
fnsave
pop
pushf
loop
imul
ja
cmp
or
mov
ds
adc
mov
outsb
pop
adc
and
or
and
fdivs
js
adcl
cmp
sbb
sahf
test
pop
dec
pop
je
add
rclb
dec
mov
sahf
aaa
or
sub
in
xlat
or
or
cmc
sbbb
adc
out
cli
daa
sbb
data16
sbbl
jl
mov
mov
push
nop
in
inc
shll
ljmp
pop
outsb
mov
mov
mov
adc
and
xor
arpl
je
jge
or
and
js
or
aad
mov
adc
adc
push
les
push
js
sbb
xor
icebp
nop
gs
xchg
cmp
rorl
pop
cld
jle
cmpsb
push
dec
dec
mov
jb
clc
ret
aas
pop
fdivs
push
cmpl
add
loopne
cmp
rcll
pop
icebp
add
movsl
rorl
mov
lret
add
add
mov
lods
mov
out
stos
inc
inc
ds
out
and
mov
jl
push
pop
adc
es
fmul
push
insb
push
mov
and
push
and
pop
lahf
sub
and
adc
or
inc
xor
xchg
pusha
shlb
add
jae
test
mov
inc
xchg
add
xlat
and
adc
rcrl
popf
sub
daa
mov
subb
and
nop
aam
mov
adcl
movb
mov
dec
or
xchg
push
aas
mov
cwtl
and
mov
insl
dec
jnp
cmp
stos
movsl
cmp
cwtl
je
aad
std
repnz
adc
dec
cmp
ljmp
xchg
push
xchg
imul
cmp
dec
fwait
popa
cld
sar
repnz
adc
add
arpl
in
sub
sar
negb
or
mov
insl
add
ljmp
mov
aas
arpl
sub
cli
add
out
inc
sbb
lret
pop
out
inc
negl
insl
orb
push
adc
mov
arpl
mov
aaa
mov
add
leave
mov
fistpll
test
and
je
and
and
xchg
int3
nop
push
repnz
js
loop
mov
mov
push
sub
cltd
stos
fdiv
out
sbb
jle
ss
loopne
inc
lret
adc
or
mov
sbb
fidivs
jae
add
pop
jecxz
add
push
call
dec
sbb
lahf
std
sbb
pop
pushl
sub
push
and
call
xor
je
shr
fwait
bnd
sbb
adc
jnp
iret
adc
cmp
jbe
popa
jp
lock
lahf
cld
je
aad
mov
sub
xor
dec
add
mov
iret
out
cmp
lods
cwtl
arpl
sub
mov
lahf
sahf
lea
mov
jg
subl
aaa
test
in
push
mov
loopne
hlt
jb
xchg
lods
push
or
decb
repnz
scas
jge
dec
in
jbe
jbe
adc
push
jg
lods
shll
test
jns
leave
lods
insl
outsl
les
scas
into
dec
imul
jb
in
adc
out
xchg
xor
xor
jbe
mov
xor
pop
clc
in
xchg
dec
adc
inc
jp
enter
dec
repnz
repz
add
push
cli
scas
lock
lahf
iret
or
jecxz
sub
rorl
mov
outsl
inc
imul
mov
sbb
pop
sub
into
xchg
add
mov
and
pushf
sub
sar
adc
pop
and
out
mov
inc
stos
addl
shlb
data16
je
mov
add
mov
mov
inc
cltd
int
test
fcoms
pushl
icebp
jle
lock
aas
xchg
mov
mov
cmpsb
push
mov
ljmp
insb
push
mov
addl
fstpt
movmskps
and
subb
jg
sbb
ror
pop
and
or
scas
sub
and
imul
pop
inc
cwtl
fldl
aam
call
test
testb
and
push
add
fldenv
pop
popa
test
sti
pop
fldenv
adc
shrb
pop
pop
movsw
mov
mov
pop
cld
lds
xchg
adc
push
sar
pop
mov
dec
xchg
pop
inc
movsl
nop
xor
loop
mov
aaa
jmp
ret
sbb
cli
mov
mov
lcall
dec
outsb
push
or
jne
scas
ds
je
push
scas
adc
lcall
mov
lea
popf
mov
push
call
pusha
adc
or
xchg
xor
ja
popa
mov
mov
pop
cwtl
jg
jl
movsb
mul
aaa
shl
leave
xor
add
mov
jne
sub
sub
les
jg
test
imul
rcrb
cmpsl
jl
rorl
mov
loopne
cli
rorb
and
rorb
pop
xor
fisttps
sbb
rorb
xorl
repnz
mov
shll
pusha
lock
das
mov
sbb
mov
xlat
adc
xlat
adc
cmp
gs
shll
pusha
add
xchg
stos
mov
add
int
adc
sbb
push
and
pop
stos
cmpsb
addb
rcl
std
xor
pusha
sbb
shll
arpl
fiadds
mov
adc
xorl
test
loopne
insb
jne
sbb
inc
adc
and
loop
mov
mov
orl
or
mov
inc
adc
negl
sbb
scas
ret
xor
popf
movsb
sub
mov
mov
mov
inc
push
pmulhuw
loopne
or
add
push
xchg
or
ss
adcl
pop
mov
xchg
inc
sbb
lds
adc
cmp
lock
ret
jo
ja
jne
add
push
mov
adc
xchg
push
adc
jmp
test
sub
stos
pop
ret
mov
jle
cld
sub
int3
or
adc
cltd
mov
sub
lods
jp
xor
rcll
js
in
xchg
in
icebp
movb
mov
push
xor
xor
and
sbb
xchg
xor
mov
mov
imul
or
aam
rolb
cmpb
stos
mov
sbb
fimull
pop
loope
push
repz
out
jmp
aad
daa
call
aam
iret
xchg
push
cmp
clc
xor
xor
mov
cmp
lea
xor
sbb
lock
mov
xchg
mov
mov
add
or
mov
xchg
pop
sbb
test
movsb
mov
mov
pop
lock
jmp
jmp
pop
rclb
sbb
test
inc
lock
add
out
jo
aam
sub
and
push
cmp
mov
rolb
xchg
fimuls
cmp
and
imul
xchg
pop
in
imul
mov
cltd
stos
cltd
aam
adc
hlt
repz
jp
maskmovq
negl
mov
or
in
push
test
lock
add
and
andl
outsl
xlat
push
mov
lds
filds
push
test
fidivl
dec
xor
cmp
inc
xor
mov
iret
rorb
add
cmp
pop
cmc
push
pop
out
leave
ljmp
sub
cmp
mov
insl
das
sbb
mov
in
es
aaa
and
aaa
fisubrs
icebp
stc
inc
addb
jmp
sub
test
or
inc
hlt
xlat
xchg
dec
inc
or
mov
push
or
and
add
in
jnp
mov
mov
pop
sub
fwait
xor
dec
mov
inc
imul
or
cwtl
mov
inc
adc
stc
cltd
inc
rclb
add
push
mov
out
lds
mov
mov
lret
add
xlat
decb
mov
aaa
cmp
repnz
xor
cld
fisttpll
inc
ret
mov
pop
stos
dec
add
cmc
popa
adc
mov
sbb
dec
nop
add
fmull
jne
and
dec
inc
pop
int3
add
iret
push
insb
into
jmp
notb
jns
aam
mov
arpl
sti
cmpsb
cmp
add
movsb
out
shrb
aas
xlat
jne
jg
xor
pop
je
jo
in
lods
in
das
pop
add
dec
sbbl
loop
dec
jne
mov
mov
sbb
xchg
shl
ret
mov
clc
jae
sbb
push
loope
mov
push
or
andb
mov
pop
xlat
bound
insb
xchg
cmp
ret
mov
lods
push
jne
mov
or
push
int3
sub
cli
push
aam
int3
push
jns
cmpsb
inc
hlt
mov
add
sub
fbstp
int3
add
cwtl
mov
xchg
and
icebp
or
and
push
and
sub
ror
or
pop
jae
les
jle
and
jle
test
outsb
jbe
cmp
mov
aaa
add
in
adc
cmpsb
loop
aaa
and
cmp
pop
daa
repnz
sub
and
or
cli
mov
aam
inc
ret
jo
hlt
fldl2t
int3
dec
fistpll
add
inc
lods
jnp
pop
scas
xor
cmp
outsb
pushf
into
push
mov
cmp
aad
subb
out
adc
add
inc
mov
add
inc
insl
or
xor
nop
mov
adc
cltd
mov
and
dec
and
or
ficompl
mov
or
lahf
pop
xchg
mov
movsb
xchg
rclb
adc
push
xor
jmp
xchg
lea
incl
add
loope
sti
scas
out
es
dec
xchg
sarl
sub
hlt
pop
js
dec
clc
and
std
ja
pop
lahf
nop
or
mov
stos
xchg
push
mov
jge
sbb
sub
add
jge
aaa
lcall
jmp
and
pop
inc
in
clc
xchg
loop
or
and
movsb
call
mov
pushw
test
shrl
fbstp
movl
push
xor
aad
out
gs
inc
testl
dec
std
decl
add
pop
or
xor
push
adc
jbe
lock
jbe
xchg
loope
inc
mov
in
pop
add
adc
mov
pushf
imul
fwait
sbb
or
add
cs
xor
inc
and
loopne
mov
xor
add
push
std
fucomip
mov
scas
sub
jmp
push
xchg
xchg
popf
jne
cli
scas
and
shll
fiaddl
decl
push
dec
filds
pusha
fstps
lea
aam
add
dec
adc
out
mov
mov
inc
mov
in
mov
scas
or
pop
popa
mov
movsb
pop
jg
pop
mov
and
or
movsl
shr
mov
fcmovb
mov
pop
notb
fldcw
inc
jmp
repnz
sbb
lahf
ljmp
mov
push
sbb
pop
add
or
sub
push
or
fidivrs
andb
jge
mov
mov
repz
gs
inc
je
dec
mov
xor
jg
stc
push
dec
fbld
jnp
add
mov
cmc
pushl
and
or
es
out
inc
xor
into
inc
add
mov
fimuls
sub
orl
push
adc
movhps
rcrl
push
call
add
add
aas
adc
mov
cld
jns
add
cmp
xchg
sub
daa
push
mov
push
int
repnz
sub
or
aad
inc
fwait
cmp
add
push
jo
lods
mov
hlt
add
gs
mov
les
loop
sbbl
mov
sbb
lods
and
addr16
xchg
sbb
sbb
pop
sbb
mov
jmp
or
mov
cwtl
jmp
push
ja
mov
lds
fiaddl
adc
stos
add
push
adcb
pop
repnz
mov
outsb
or
adc
call
fcompl
outsl
mov
ficoml
int
mov
lock
rcl
cmc
fwait
imul
int
sub
or
add
inc
loopne
out
adc
fcmovnb
add
push
jg
sub
pop
loopne
outsl
shlb
mov
push
mov
or
dec
movsl
test
cmp
lahf
cmp
and
ljmp
jp
dec
mov
jl
and
add
loope
sbb
jae
imul
xchg
mov
fsubrl
ljmp
sti
test
jl
push
ljmp
mov
add
adcb
popa
faddl
lea
sub
mov
out
mov
mov
divb
and
sbb
sub
shlb
add
mulb
cmp
xchg
lea
jle
mov
and
push
fstpl
add
sub
int3
mov
mov
rorl
mov
inc
add
dec
adc
imul
jl
and
push
push
inc
or
and
fisttpll
imul
loope
xchg
pop
nop
xor
push
mov
in
adc
popa
js
xchg
dec
mov
and
and
fnstsw
and
dec
push
add
adcb
mov
sarb
mov
pop
dec
mov
mov
sbb
gs
in
xchg
fwait
cmp
sahf
cmp
das
pop
test
pop
add
dec
mov
imul
jmp
das
cmpsl
mov
cmp
jle
jmp
dec
pop
sbb
pop
je
or
inc
sbb
lea
popa
jp
push
fcoms
mov
rclb
xchg
push
add
or
jb
mov
icebp
add
test
and
add
loopne
pop
aam
pop
rcll
cli
cmp
and
xor
fbstp
into
add
mov
dec
add
testl
out
gs
jle
jne
nop
insb
xor
xchg
push
inc
add
out
addl
adc
cmp
lds
mov
push
mov
leave
push
push
in
mov
stos
push
inc
insb
ret
pop
sub
push
xchg
int
sub
loopne
sbb
das
xchg
cmpsb
xchg
sub
push
xchg
sbb
jmp
pop
stc
inc
mov
mov
test
lcall
push
sbb
popa
out
add
jp
js
aad
rcr
add
int3
and
or
mov
adc
add
adc
out
mov
mov
rcrl
mov
xchg
push
adc
push
adc
outsb
insl
add
xor
dec
test
or
nop
in
test
rcrl
mov
sbb
lds
push
subl
xchg
subb
mov
and
int
xchg
push
sub
out
addr16
incl
rorb
push
xchg
in
mov
js
ljmp
rol
cld
sbb
add
loopne
pop
push
nop
mov
dec
insb
push
test
xor
sbb
loopne
sub
or
lahf
test
clc
lcall
mov
mov
loopne
push
push
mov
mov
cmc
adc
jmp
mov
or
and
mov
int
push
les
mov
pop
jne
popf
out
lret
jbe
pop
cli
movsl
call
or
imul
out
pop
lea
adc
mov
fstps
dec
add
push
pop
xchg
int
cmpsl
scas
stos
inc
pop
inc
push
subb
xchg
cmp
ss
iret
mov
fildll
mov
hlt
push
mov
push
arpl
mov
pusha
cmpb
loopne
jo
add
cmpsb
pop
jne
mov
cmovp
add
shr
dec
add
or
cld
outsl
es
outsb
sub
fidivrs
int3
fistl
loop
or
or
fcomp
sub
ljmp
fbld
adc
pushl
hlt
cmpl
or
sarb
mov
mov
loope
jnp
jmp
xor
dec
push
inc
icebp
in
es
mov
aaa
and
outsb
mov
xor
add
fstl
xor
mov
in
out
add
lahf
jecxz
add
cmc
adc
add
sub
dec
fstpt
sbb
jle
sbb
ret
bsf
call
pop
pop
adc
fidivrs
and
std
movsl
sub
je
subb
add
mov
mov
dec
clc
lahf
sbb
sub
push
pusha
std
imul
xor
and
nop
rcl
fninit
push
push
out
ljmp
fistpl
adc
add
das
fldenv
das
sbb
outsb
je
mov
push
inc
faddl
or
mov
and
or
jnp
jae
inc
addb
jg
fcmovnu
jo
add
pusha
push
outsb
cmpsb
xchg
mov
jecxz
xor
mov
pop
outsl
cmp
aad
add
fiadds
cli
ffreep
not
outsl
jge
lret
lods
fimuls
jg
stos
or
test
subb
pop
test
push
popf
mov
js
dec
push
add
test
xor
and
rcrb
orl
push
dec
cmc
dec
lods
loope
and
pushl
fdivr
test
jmp
xor
push
jge
lds
cmpsl
lcall
pusha
push
leave
push
pop
jge
ljmp
adc
sub
ret
or
bound
stos
pop
fisttpll
arpl
test
mov
xor
aad
dec
pusha
ja
notl
cmp
pop
mov
mov
pusha
es
fistps
xchg
mov
adc
popa
arpl
std
pop
inc
orb
and
or
push
lret
pop
jne
xchg
dec
sub
sti
ret
lcall
dec
adc
cmp
push
divl
test
fs
push
or
out
mov
in
outsb
dec
mov
les
add
and
sbb
cmp
sbb
inc
pushl
pop
in
in
sbb
nop
inc
mov
lock
lret
xchg
mov
jae
add
adc
stos
in
bound
loopne
imul
iret
into
rol
mov
fstpl
add
fdivrs
test
dec
ficomps
sti
mov
xchg
cmp
push
leave
stos
test
decb
dec
xor
adc
popf
loope
pop
frstor
pusha
pop
jb
push
jmp
pop
jae
iret
inc
or
mov
or
pusha
subb
hlt
js
outsl
aam
loope
xchg
push
mov
xor
sbb
mov
mov
jb
imul
jmp
sub
je
testl
sub
and
mov
ja
pop
popf
and
popf
sbb
cmpsb
push
outsl
ss
sub
mov
mov
fstpt
in
fadds
sbb
stos
dec
cmp
mov
pop
dec
adc
or
fsub
sbb
dec
pop
push
sub
adc
clc
sbb
mov
pop
fwait
insl
out
jp
cmpsb
test
sbb
lcall
mov
mov
xchg
nop
in
jecxz
mov
movsb
jo
lahf
inc
fs
mov
fimuls
adcb
mov
fdivl
es
addb
gs
inc
mov
rcrb
sub
lcall
sub
adc
stos
inc
loope
adcb
adc
ljmp
jmp
adc
clc
shlb
inc
je
imul
iret
cltd
adc
test
and
andl
movsb
fistpll
loope
stc
xchg
loop
sbb
add
leave
aam
fcomps
pop
pop
sbb
and
cld
dec
and
mov
std
sbb
adc
insb
mov
cmp
and
cmp
hlt
dec
hlt
sbb
jo
mov
jne
push
and
scas
aaa
mov
or
xlat
mov
xlat
test
out
mov
pop
xchg
pop
outsl
pop
lret
pushf
fmul
mov
xchg
mov
js
sbb
mov
rcll
jne
in
hlt
testb
imull
jle
fmuls
test
lds
cmp
fucomip
sbb
push
pop
cmp
adc
dec
in
sub
adc
and
fmuls
sbb
insl
jp
push
cmc
fistl
mov
mov
fisubrl
testb
ss
sbb
fdivrp
or
pop
add
xlat
inc
mov
movsb
enter
pop
out
jg
pop
daa
stos
cs
call
das
cld
jbe
fs
and
mov
push
jp
push
xchg
push
jmp
jnp
xor
sub
cmp
push
jmp
mov
inc
push
cmp
test
xchg
das
add
mov
pop
pop
pop
enter
cli
addr16
lods
ljmp
cs
sub
insb
aam
fistpll
mov
andl
jo
push
mov
int3
fdivr
push
push
push
jle
cmpsb
ss
inc
mov
test
jbe
movsl
ja
aas
jns
ffreep
inc
pop
ficoml
test
inc
addb
or
adc
xchg
das
flds
nop
movsb
pop
sub
mov
xchg
xchg
mov
or
inc
ss
or
adc
jne
cmpsl
fwait
loop
jecxz
jns
xchg
add
mov
adc
mov
sbb
fsubrl
pop
mov
testb
int3
test
pop
or
or
xor
loop
aad
pop
out
mov
mov
mov
jae
pop
mov
and
outsl
adc
inc
mov
or
lcall
pop
orb
shll
outsl
gs
mov
or
aad
mov
add
scas
movsl
push
subb
and
pop
or
leave
or
or
mov
xor
and
lret
mov
and
das
mov
push
sbbb
mov
es
popa
and
jbe
and
into
lock
mov
loopne
hlt
jbe
test
xchg
push
mov
inc
mov
das
xor
movsl
imul
outsl
sbb
lret
sub
lds
cli
addl
ds
jno
out
js
fs
pop
in
loop
outsl
xlat
mov
push
decl
push
divb
jp
sahf
jbe
fcmovu
call
cmp
repz
cld
test
fs
sbb
sub
call
inc
loop
mov
mov
daa
addl
addr16
movsl
push
push
outsb
add
cs
dec
rcrl
cmpsl
mov
pop
sbb
cmovbe
cmc
inc
mov
adc
cwtl
mov
jmp
rolb
cmp
mov
push
les
push
xchg
xchg
adc
outsb
out
xchg
rcrl
sub
and
or
ret
mov
add
inc
jo
lock
ljmp
sbb
mov
mov
cmpsb
pushf
dec
sbb
mov
dec
testl
add
mov
sbb
test
adc
outsl
test
test
add
filds
das
std
pop
dec
fisttpl
add
enter
adc
push
sub
mov
sbb
bound
test
pop
pop
or
xchg
and
push
xchg
ljmp
inc
insb
adc
daa
shlb
adc
or
add
rol
aas
cmc
rclb
scas
push
sub
sbb
cmpsl
or
dec
mov
dec
mov
or
or
sbb
jns
loope
lods
add
mov
hlt
push
adc
mov
data16
sub
jp
lret
pop
sbb
dec
sbb
mov
les
push
jnp
mov
std
scas
push
cmc
add
adc
fdivs
stos
sbb
ja
sbb
js
ficoml
hlt
inc
cmp
push
push
aam
imul
popf
mov
mov
test
popf
ret
ret
aad
inc
ret
mov
sbb
push
jb
and
gs
hlt
jmp
pushf
lret
test
int
sbb
int3
rorb
push
sub
nop
add
mov
sti
in
sub
dec
repz
out
pop
out
cmp
das
scas
dec
mov
sbb
loope
stos
jbe
inc
mov
pop
shrl
in
push
fnsave
rcrl
stos
ret
orb
shll
cmp
add
rolb
ljmp
push
insl
push
add
out
sub
xchg
test
out
cmp
enter
cmp
mov
sbb
lock
jns
ret
decl
sbb
xor
sbb
out
ja
movsl
outsb
inc
dec
dec
idiv
pop
fdivl
popf
mov
loope
icebp
xchg
pop
sub
cmc
or
or
push
mov
mov
sbb
and
or
jns
push
mov
sub
in
ss
adc
sbb
xchg
fcoms
sub
lods
in
addr16
push
add
pop
and
fdivrp
pop
mov
rolb
dec
nop
jp
dec
dec
cld
push
sbb
jae
int3
fistpl
mov
mov
dec
es
shrl
cmpsb
outsb
mov
mov
mov
sub
ljmp
dec
xorl
or
ret
pop
add
fimuls
pop
pusha
andl
xor
push
das
aad
gs
inc
jmp
and
jo
adc
add
jl
enter
test
scas
cmpb
or
lea
or
jp
jo
addr16
xchg
push
sbb
sbb
sub
xchg
add
les
or
adcl
loopne
arpl
adc
in
jb
or
adc
cltd
push
mov
std
and
adc
push
test
lret
pushf
lret
mov
xor
xchg
in
dec
ljmp
cmp
clc
and
out
jp
sbbb
jno
fildl
inc
jo
shll
add
notl
aas
sub
movsb
and
jle
push
xor
push
sub
roll
sbb
ss
push
add
inc
sbb
jle
push
clc
repz
dec
sbb
ljmp
add
xchg
mov
mov
mov
subb
push
mov
add
sbb
and
scas
xor
push
ljmp
lret
xchg
fisttpl
push
ja
data16
repz
and
outsl
adc
loop
lret
insb
pop
mov
push
or
cmp
cld
lret
sbb
mov
loope
faddp
sbbl
std
icebp
sub
outsl
cmp
push
cmc
hlt
repz
dec
mov
cli
nop
inc
mov
mov
pop
dec
js
iret
cmc
ret
or
mov
ss
adcl
call
sbb
mov
bound
push
mov
decb
mov
mov
cmp
imul
lea
pop
mov
xchg
idiv
lcall
imul
and
hlt
repz
loop
inc
mov
pushf
xchg
jnp
mov
shll
jge
fildll
adc
mov
or
outsb
jle
in
test
cmp
shr
dec
pushf
dec
inc
push
adc
xor
fsubrs
dec
pushf
insb
push
sbb
jg
jmp
and
jnp
add
rclb
or
cmp
xchg
adc
leave
pop
adc
js
pop
mov
sub
or
push
std
test
cmp
adc
repz
jmp
inc
pop
xchg
inc
lahf
sub
aaa
mov
pop
stos
mov
sbb
data16
xor
cmp
mov
pop
pop
sbb
xor
jecxz
sbb
pop
xchg
sbb
jp
add
mov
fwait
test
adc
mov
jnp
cmpb
xchg
sbb
and
mov
cmpsb
pop
sarl
loop
add
and
push
sbb
add
in
or
rolb
gs
mov
shll
sub
sub
mov
ret
cs
xor
ret
pop
stos
and
xchg
bound
sbb
loopne
lcall
mov
ret
xchg
call
movsl
cld
push
mov
loopne
nop
imul
hlt
fstpl
gs
clc
push
sbb
push
jle
jnp
push
in
lcall
lahf
sub
push
sub
lcall
cmpsb
add
clc
mov
jg
cli
jg
in
in
outsl
popa
inc
in
adc
outsb
xchg
adc
test
insl
cmp
jle
in
mov
addr16
iret
xchg
jmp
cmp
pushf
aas
arpl
jne
xorb
test
iret
dec
mov
push
shrb
add
mov
test
sahf
mov
inc
cmc
in
pop
mov
inc
sub
test
pop
stc
dec
je
int
add
data16
xchg
jecxz
cmp
insl
test
xchg
mov
xchg
mov
sbb
fldenv
cld
inc
clflush
pushf
push
insb
cmpb
daa
stos
push
or
outsl
xchg
lret
lds
and
cli
shll
mov
add
mov
inc
cwtl
nop
pop
cli
mov
xchg
cmp
jmp
stc
add
push
test
xchg
mov
call
xchg
div
mul
xchg
in
lahf
and
mov
xchg
lret
pushf
ffree
fwait
incb
shrb
test
test
dec
outsl
mov
add
push
jle
push
lea
fiadds
daa
das
add
leave
or
sbb
pop
push
xor
jl
push
int
inc
pop
clc
testb
mov
push
mov
pop
fistpll
xor
test
leave
mov
cli
pop
mov
shrb
sbb
jo
mull
sbb
push
rcrb
inc
pop
loopne
mov
push
push
insb
xor
and
mov
pushl
inc
faddl
movsb
push
cld
mov
jne
hlt
popf
xchg
lock
xchg
lock
cli
ja
jbe
pop
dec
shrl
out
jne
aad
mov
xor
shrb
cli
or
and
xorb
adc
mov
mov
pop
mov
xor
xchg
pop
sub
mov
add
adc
pop
mov
loopne
std
jg
sbb
pop
hlt
push
xchg
loope
out
fs
push
push
or
adc
xlat
nop
movsl
mov
out
stos
jle
std
ss
cli
mov
cmpl
mov
adc
xchg
push
cli
xor
inc
jns
int
and
ret
xlat
push
add
xchg
jle
xor
add
add
sub
inc
and
addr16
adc
call
call
decb
rcrb
fiadds
lahf
adc
rcl
mov
xchg
loop
in
jno
cmc
mov
scas
jg
mov
aas
stos
xlat
out
mov
nop
movsb
add
push
jbe
sti
push
test
jae
push
loopne
or
mov
lds
add
or
pop
pushf
imul
xchg
into
std
notb
pop
jg
movsl
mov
rolb
add
mov
jle
fnstcw
fstl
sarl
sub
dec
fcoms
adc
or
adc
add
xor
cmp
cltd
cmp
in
roll
popa
loop
or
inc
push
fiaddl
push
xchg
ljmp
add
int3
pop
fisttps
push
loope
cmpsl
testb
je
jne
shrb
movsl
shlb
test
and
call
or
das
pop
in
stc
xor
adc
pop
xor
inc
std
pop
sbb
push
in
pop
inc
xchg
movsl
mov
jo
or
xor
cltd
push
sub
daa
add
pop
pop
rep
adc
rolb
popa
adc
int
add
fdivs
into
addl
jmp
pusha
aad
xchg
pop
push
loop
loope
push
dec
sbb
push
sbb
or
add
jnp
push
int
icebp
je
hlt
mov
in
in
mov
or
lods
ficompl
add
loope
and
negb
adc
add
xchg
dec
add
dec
test
or
push
mov
les
fists
add
dec
inc
ja
adc
adc
inc
sbb
dec
and
stc
mov
in
add
or
or
popf
xlat
pop
mov
or
and
fmuls
jnp
mov
scas
push
inc
ja
xor
inc
inc
shl
mov
sub
or
es
lcall
push
xchg
sbb
add
adc
jmp
cmp
loopne
sub
inc
clc
sub
push
sbb
ss
jmp
ss
lods
nop
mov
fwait
inc
add
adcb
lods
mov
punpckldq
outsl
xor
lahf
leave
mov
jg
js
cmpsb
mov
pop
or
inc
call
xchg
cli
lcall
imul
cmpsl
addr16
push
xor
out
fbld
mov
flds
cmp
je
inc
add
cltd
mov
data16
out
fstps
xchg
mov
lret
fistpll
pop
inc
sbb
add
imul
and
and
mov
sbb
js
out
pop
mov
addb
lcall
outsl
dec
xor
addr16
sub
inc
adc
push
cltd
lock
mov
ja
pop
cld
mov
ss
mov
cld
inc
lock
rcrb
cmp
cmp
cmp
cwtl
mov
push
lods
loopne
adc
nop
out
int
pusha
jb
sub
les
xor
jbe
mov
iret
add
adc
fwait
stos
sbbl
mov
pusha
or
stc
or
aaa
mov
dec
or
jb
stos
lds
pop
orl
int
xchg
mov
xchg
aaa
out
inc
adc
loopne
pop
out
inc
aam
xchg
push
fldenv
mov
mov
dec
sub
stos
mov
into
jl
mov
cli
mov
loop
mov
lahf
inc
xor
shll
rorb
test
movd
ds
orb
mov
xchg
dec
sub
shr
xor
add
lret
into
std
ret
jne
inc
out
inc
mov
dec
icebp
test
xor
out
lcall
cld
jg
scas
xor
leave
incb
add
test
push
stc
mov
cwtl
lods
add
mov
sbb
xchg
lcall
push
and
sub
hlt
inc
outsl
fcmovnb
iret
cmp
and
add
iret
and
xor
dec
mov
lea
call
subb
out
and
loopne
cmp
push
in
outsl
sbbb
add
mov
cmp
hlt
and
sahf
xchg
icebp
roll
mov
mov
testl
repz
daa
ret
shr
add
outsb
cmc
scas
mov
test
in
scas
aaa
and
insl
aam
cmpsb
inc
pushf
sbb
xlat
sarb
out
jp
dec
test
out
int
dec
rcrb
enter
call
rolb
shlb
negb
mov
cld
jmp
gs
lcall
gs
or
xchg
popf
fcmovu
das
roll
jmp
popf
xchg
mov
mov
mov
add
lcall
call
cmp
loop
or
xchg
xor
adc
mov
push
pushf
sbb
xchg
jecxz
int3
sub
movsl
inc
add
sub
inc
mov
inc
push
lock
je
andb
or
xor
cld
add
push
xor
sbb
add
shl
or
out
add
add
daa
test
inc
mov
imul
push
stos
lret
and
add
mov
xor
or
mov
mov
and
fimull
in
sub
add
rol
mov
sbbb
xchg
in
add
or
lock
add
or
out
push
stos
push
loope
add
push
add
mov
dec
sub
cmp
aas
or
cmpsl
scas
cmpsl
mov
fldpi
int3
jne
push
mov
subl
mov
stos
lar
ss
jbe
mov
icebp
les
out
pop
pop
push
bound
out
add
loopne
lahf
cmp
push
jle
call
data16
push
adc
data16
enter
stos
pusha
mov
mov
iret
cmpsb
dec
ret
or
test
and
ficoml
fcom
int3
jp
sbb
jg
or
in
jmp
test
jb
inc
shlb
add
push
int
lods
inc
insb
xor
add
adc
pop
add
inc
daa
sub
arpl
ss
adc
rclb
pop
push
aaa
inc
fcoms
in
push
stos
outsb
inc
mov
in
or
or
inc
adc
push
out
test
mov
popa
adc
sbb
sub
fmull
leave
mov
inc
add
jns
shll
cmp
mov
popa
clc
xor
push
push
sub
mov
das
popa
add
mov
loop
mov
jbe
cltd
test
mov
bnd
jge
mov
mov
daa
xchg
push
mov
adc
jl
ljmp
mov
mov
inc
mov
fisubl
pusha
adc
mov
popf
lret
inc
shl
inc
add
add
dec
or
bound
sbb
movsl
mov
addb
mov
fstpt
fildl
cld
call
fsubrp
push
xor
inc
jg
rcrb
sub
stc
xorb
add
sub
add
or
sbb
push
je
cmpsb
pop
in
lea
adc
out
scas
xor
aam
fists
data16
push
pop
mov
jp
popf
add
jno
add
add
mov
add
adc
popf
cli
scas
hlt
pop
fs
or
push
pop
cltd
xchg
jo
adc
dec
mov
nop
mov
stos
pop
addr16
xchg
mov
test
push
mov
mov
jo
fchs
xor
rorb
test
cmp
xor
call
xor
fnsave
inc
or
pop
cltd
push
or
repnz
gs
insb
fmull
js
add
mov
shlb
mov
test
ja
sbb
pusha
and
fprem1
pop
mov
mov
mov
out
or
push
insl
xchg
push
jnp
fwait
lret
dec
xor
sahf
loopne
xlat
addr16
jae
adc
inc
push
scas
mov
adc
jl
pop
ss
js
add
sub
or
jp
and
mov
es
int
add
cmp
sub
and
or
mov
es
leave
xchg
mov
add
mov
push
and
jne
fwait
loope
dec
ja
ljmp
sbb
sti
loopne
push
xor
hlt
div
bswap
mov
sub
mov
call
add
movb
inc
push
lock
inc
sbb
dec
fwait
incl
mov
dec
std
or
fstpt
stc
inc
cmc
jecxz
mov
cmp
add
sahf
imul
int3
std
inc
push
sti
cmpsl
aaa
mov
cmc
test
push
dec
popf
loopne
dec
int
adc
jp
xorb
sbb
or
push
js
mov
call
sbb
xor
xlat
inc
add
mov
stos
and
subl
lret
lods
outsb
dec
cmp
mov
and
or
mov
xor
jecxz
movsl
shll
jl
pop
loope
push
pop
sub
ffreep
movl
mov
lods
xor
or
pop
xchg
mov
data16
dec
push
test
ljmp
mov
data16
sbb
fcomi
or
aam
adc
aas
inc
cmpsb
imul
ljmp
cwtl
mov
jle
es
sbb
insb
dec
push
cltd
lcall
jle
bswap
dec
mov
add
arpl
adc
aaa
lds
xor
enter
or
loopne
mov
mov
ret
std
xor
out
add
pop
add
lods
das
addr16
rorb
cmp
lods
mov
ret
pop
sub
cmc
lds
icebp
addb
movsl
xchg
add
sub
xchg
popa
sbbl
cli
leave
and
call
adc
push
mov
ja
aaa
xchg
lock
xchg
sub
aad
addl
add
xchg
inc
mov
push
or
mov
faddl
in
in
out
jns
cwtl
dec
pop
dec
push
add
cwtl
rolb
mov
add
shr
clc
daa
adc
sub
sti
xor
inc
test
lcall
push
cmpl
adc
add
mov
repz
out
adc
cld
stos
addr16
pop
test
inc
hlt
outsl
inc
or
sbb
popf
and
fisubl
pop
cli
push
inc
test
add
ret
dec
les
jne
cltd
mov
mov
pop
call
mov
xlat
xor
in
lcall
data16
sti
fstpt
sub
sti
xchg
lcall
fcoml
call
xchg
int
xchg
pop
jbe
rol
mov
dec
dec
cmpsb
jecxz
sti
sub
jg
movb
sub
pop
call
daa
call
pop
mov
subl
pmaddwd
mov
imul
cltd
and
jnp
pop
inc
cmp
xlat
mov
cmp
icebp
repnz
xor
out
fisubrs
fs
xlat
rcll
mov
pop
lret
adc
lcall
add
xchg
cmpsb
nop
jb
mov
push
js
adc
divb
cmp
xchg
ret
adc
cmp
cmp
ljmp
dec
addb
sub
js
shll
add
aaa
in
push
sbb
jg
je
ds
jg
or
pop
xchg
add
mov
xor
lods
jle
sub
popa
and
outsb
das
sub
mov
movsl
sbb
decl
ljmp
pop
cltd
mov
in
test
filds
popa
mov
add
xor
lock
incl
ror
jmp
push
paddb
sub
std
sub
push
mov
shll
lods
int3
cmpsl
scas
add
mov
xor
add
rcl
mov
pop
jnp
repz
outsb
pop
shll
mov
clc
fistpll
in
iret
aam
inc
gs
ret
dec
add
inc
repz
pop
mov
test
lret
add
incl
jg
cld
ret
pop
push
pop
lea
inc
mov
dec
lods
or
lret
notb
std
cld
das
xor
jg
push
imul
sbb
dec
aas
cmp
jne
mov
enter
addr16
test
add
lcall
mov
adc
inc
jno
divl
lea
ss
add
xor
dec
jg
add
xor
add
addb
rcll
sub
cmp
sub
les
sub
call
push
xchg
test
push
ja
fs
pop
add
insb
cld
in
xchg
pop
repz
adc
imul
sbb
jg
fildll
stos
inc
test
and
inc
roll
enter
test
sbb
in
dec
fstps
sub
lea
int3
xchg
lahf
jno
cld
aaa
flds
test
or
imul
add
sbb
loope
or
xor
loopne
cwtl
cmp
pop
xchg
clc
jg
lahf
pushf
mov
lcall
jne
icebp
or
or
je
lret
icebp
mov
push
inc
cmpsl
mov
sti
adc
mov
fiaddl
inc
adc
popf
mov
rcr
and
inc
sti
jecxz
sahf
jp
in
dec
or
mov
pop
pop
jg
sbb
imul
and
push
cld
cmp
add
lcall
mov
lcall
or
scas
fldt
movsl
xchg
cmc
pop
mov
jg
aas
or
es
fmuls
dec
sub
cmc
lods
fwait
iret
adc
shlb
icebp
lock
or
jmp
adc
sbb
in
pop
add
xlat
cmp
push
lods
std
mov
pop
sub
sbb
out
and
inc
inc
movsb
inc
in
add
cmp
daa
inc
adc
add
fildl
xchg
sub
aad
sbb
mov
or
hlt
mov
xorb
cli
mov
mov
fidivrl
idivb
and
movsl
in
xchg
cli
pop
mov
mov
pop
jne
push
sbb
shll
pop
out
daa
dec
pop
inc
push
cltd
pop
outsb
or
aas
push
xchg
scas
jns
or
clc
mov
xchg
iret
adc
fs
shlb
cli
test
ljmp
ds
nop
mov
call
movsb
mov
fstps
add
jp
loope
dec
and
pushf
lods
xorl
cmp
dec
fildl
cltd
dec
int
dec
mov
pop
adc
cmc
outsl
fildl
lcall
adc
fld
xchg
ljmp
adc
shlb
je
jb
cli
adc
orb
idivb
or
add
btcl
inc
std
push
dec
mov
clc
push
push
xchg
sub
leave
insl
loope
mov
inc
aam
rorb
sbb
cmp
lcall
add
push
fdivl
imul
mov
inc
dec
test
cltd
adc
push
fdivrs
out
xor
pop
sub
data16
inc
divb
sub
rclb
push
notb
and
fs
rcr
insl
rol
xlat
xor
xchg
dec
ret
das
adc
jbe
mov
or
xlat
push
mov
xor
outsl
adc
addr16
imul
add
inc
cmp
adc
ss
lock
sub
fstl
mov
aaa
mov
inc
fsub
popa
and
mov
lds
ljmp
and
mov
xlat
cs
enter
fwait
dec
les
adc
fwait
add
loop
jmp
lods
jb
jbe
data16
sub
jbe
ss
cmpl
int
mov
out
push
and
add
aam
fildll
loopne
es
adc
pop
add
fmull
mov
es
or
out
add
add
dec
cli
out
mov
neg
mov
icebp
lods
insl
xchg
or
jecxz
aaa
jbe
aaa
ja
es
cmp
repnz
jg
inc
sub
movsl
outsb
add
xor
jb
rol
inc
fs
les
movsl
out
bnd
test
pop
jp
sub
rorb
sarb
xor
movsb
imul
jle
push
jg
aad
pop
adc
push
call
ja
pop
shll
cmpsb
xlat
mov
jae
lock
test
fbstp
push
stos
cmovp
sahf
fildl
pop
loop
aam
inc
int3
xor
adc
jecxz
jo
das
ljmp
add
stos
test
stos
movsl
movsl
mov
popa
dec
fmuls
sub
mov
mov
push
jp
fistl
or
xor
mov
frstor
add
cmp
or
mov
xchg
push
mov
ror
out
ja
sahf
or
lods
pop
bound
add
mov
pushl
adc
push
or
aas
pop
lods
ret
outsl
icebp
cld
push
xchg
insb
or
loope
jp
push
cmp
xor
mov
es
arpl
mov
pmulhuw
pop
and
mov
dec
in
lock
and
dec
js
fwait
movzbl
push
sarb
cmp
pop
js
push
xor
jae
mov
dec
mov
call
lret
fwait
enter
and
cld
or
push
fisubs
xchg
lods
ljmp
icebp
aaa
std
daa
rol
faddl
out
scas
jg
mov
mov
jl
dec
fsubrl
stc
nop
mov
sub
dec
mov
mov
loope
and
dec
iret
adc
mov
xor
push
testl
push
cmc
fs
movsl
jg
push
sbb
jl
negb
pop
add
sbb
mov
sbb
shlb
and
jne
mov
rol
adc
cmp
nop
call
mov
inc
enter
adc
push
sub
mov
cltd
insb
pop
cmpsb
push
push
cli
inc
sub
mov
inc
or
das
or
sub
and
pushf
or
push
pushf
inc
dec
cmp
pcmpeqb
insl
rclb
or
sub
sub
repz
movsb
jl
cmc
xchg
hlt
pushl
rcll
outsl
les
repnz
setl
fildll
mov
call
add
stc
jl
inc
mov
mov
sub
push
mov
cwtl
ljmp
rclb
or
dec
or
cmp
pop
mov
or
push
push
push
mov
fildl
pop
cmpsl
lods
subl
das
dec
mov
dec
mov
adc
add
fstl
xchg
dec
mov
jb
insb
mov
add
loope
andb
push
pusha
or
aam
or
lock
inc
dec
inc
clc
sbb
cmp
das
clc
int3
out
pop
cmp
pop
or
int
adc
mov
cli
mov
test
lcall
jne
xlat
sbb
loopne
cmc
sub
xchg
int
mov
lock
out
test
lock
jp
or
ja
mov
fsubs
dec
hlt
movsl
push
pop
in
dec
lock
rolb
add
mov
xchg
loop
inc
je
add
or
add
add
js
xor
enter
jge
mov
cld
or
and
add
fistpl
push
ret
jae
loop
mov
fmuls
int3
jmp
pop
cmp
jae
adcb
movsl
mov
out
mov
movsb
add
xor
testb
mov
sbb
sarl
or
stos
add
lret
int3
loopne
rcl
lock
mov
test
nop
dec
adc
sbb
add
out
or
es
mov
in
cmp
and
xchg
mov
push
lret
orb
lds
cli
scas
push
sbb
or
jbe
rcrb
rclb
test
push
cli
movsl
scas
xchg
out
xor
push
xorb
inc
clc
subl
test
js
fcompl
and
in
lret
lods
shlb
stos
sub
lods
ds
mov
popa
xchg
ret
jb
ljmp
js
cmpsb
and
add
or
xlat
adc
add
aas
sub
inc
sbb
clc
and
cwtl
dec
mov
das
icebp
dec
int
adc
aam
pop
and
xchg
mov
mov
and
fistps
cmp
cmp
data16
inc
sti
dec
mov
sarl
sub
dec
iret
movsb
adc
and
cmp
call
lds
mov
sbb
sub
and
mov
jae
cmp
pop
mov
jbe
adc
xlat
aam
push
inc
push
lret
lcall
cld
mov
push
scas
shl
add
or
mov
sbb
jle
pusha
shr
ficompl
or
xchg
mov
ficoml
cmp
lret
xchg
push
test
out
loopne
add
nop
lock
mov
mov
out
mov
aas
lea
dec
xchg
mov
or
stos
js
out
sub
dec
xchg
add
mov
xor
jne
js
insl
mov
or
mov
pusha
fs
sarb
push
ljmp
js
fwait
jo
loop
stos
outsl
push
lods
testb
push
mov
dec
adc
fstpl
lods
mov
mov
dec
test
mov
cmp
mov
out
stc
cwtl
xchg
mov
push
dec
mov
add
jo
mov
js,pt
lcall
call
andl
sbb
adc
fucomip
pop
rcll
jne
or
mov
hlt
pop
cmp
jg
shl
pop
mov
in
jecxz
jmp
sti
fistps
mov
adc
and
adc
jae
adc
int3
inc
or
lods
mov
push
jp
pop
shll
mov
lods
pop
inc
dec
push
gs
mov
out
adc
xchg
mov
mov
adc
les
icebp
or
pushf
outsl
ljmp
jo
mov
xchg
sbb
cs
test
sbb
adc
sar
mov
outsl
into
cmp
xor
mov
xchg
cli
and
inc
shll
insb
out
outsb
add
adc
imul
jbe
xchg
push
inc
lret
xchg
stc
mov
sbb
in
jne
and
or
cmp
ja
push
jnp
lds
cmp
pop
cmp
ss
dec
xor
push
lods
scas
sbb
mov
or
popa
sbb
inc
in
jo
mov
sub
mov
icebp
stos
pop
clc
cli
push
or
push
imul
std
fldt
jmp
adc
lret
inc
mov
xchg
mov
mov
adc
and
loopne
lds
mov
insl
clc
lods
xchg
sub
push
out
dec
push
call
inc
inc
sbb
sub
pop
and
jmp
or
leave
xor
lret
fsubl
cs
repz
cltd
dec
stos
cwtl
push
dec
mov
in
xor
test
lret
adcl
jg
lcall
test
es
mov
dec
mov
adc
call
xchg
xchg
ret
dec
hlt
pop
pop
push
repz
bound
push
aaa
add
and
sbbl
aaa
clc
add
jl
loope
ljmp
jnp
or
xchg
into
lea
jg
rcrl
push
cld
mov
xor
shll
xor
cmp
cli
pop
test
inc
loopne
mov
fistps
lods
daa
dec
xor
call
fisubrs
jg
loope
cs
inc
mov
inc
adc
sbb
lock
inc
and
es
inc
mov
call
add
lods
pop
sub
inc
enter
sahf
add
les
adc
pushf
les
cmp
xor
rcll
sub
pusha
ss
pop
mov
hlt
test
sub
call
stos
mov
mov
push
mov
sbb
push
cmpl
push
popf
lds
int3
negb
cmpb
mov
adc
push
jge
fdivs
xlat
add
dec
add
nop
dec
inc
shll
xor
pushf
rcll
loopne
out
jnp
aam
xor
push
mov
testb
bound
push
push
nop
mov
add
add
cmp
lahf
add
and
and
mov
and
jae
or
jns
insl
fildl
jnp
fstps
adc
or
hlt
insb
aas
push
xor
mov
sbb
addr16
mov
clc
mov
push
sbbb
dec
psrlw
fwait
cmp
int3
sub
loopne
insb
mov
ret
sarb
daa
test
xorl
sub
fnstcw
sbb
mov
aam
in
mov
mov
pusha
cmp
jnp
jnp
sbb
add
sub
xor
sarl
negl
popf
js
mov
adc
push
popa
add
and
pop
and
pop
js
add
push
out
mov
xchg
loope
sti
cmp
fcoms
std
add
outsb
jecxz
or
mov
mov
loopne
xchg
sbb
dec
scas
pusha
xchg
mov
push
cmpsl
out
es
pop
inc
pop
int3
imul
ficompl
imul
je
mov
repnz
ret
push
dec
xor
fcomip
out
or
mov
fwait
dec
insb
notl
jge
in
das
lcall
sbb
sahf
cmp
mov
es
scas
pop
ds
mov
mov
lea
cmp
loope
nop
add
push
or
addl
cmc
lea
clc
sti
add
xchg
cli
lcall
add
in
xor
ret
sbb
mov
aam
inc
mov
sar
jg
mov
or
push
fnsave
push
pop
push
jmp
jg
jp
jmp
or
arpl
mov
aad
lahf
sbb
ljmp
sbb
test
sahf
loopne
cmc
sub
pop
mov
add
adc
xor
in
fildl
hlt
push
sbb
xor
adc
push
push
pop
push
xorl
cmp
insb
jge
jge
xor
push
sub
or
dec
mov
test
push
or
sbb
adc
xlat
cmp
lods
inc
jle
fwait
les
mov
mov
cmp
adc
leave
lcall
jno
add
inc
inc
movsl
std
jg
addl
sub
push
shl
stc
mov
stc
sub
outsl
or
js
notb
jl
push
dec
xor
jno
cwtl
adc
pop
mov
ret
xchg
sti
int
inc
mov
in
mov
icebp
das
inc
jbe
and
add
dec
fwait
pop
or
out
pop
mov
aas
sbb
lcall
mov
sbb
cld
pusha
insb
cmc
mov
jg
add
bound
add
or
mov
jae
lret
sbb
cwtl
xorb
sbb
cmc
add
lock
xor
jns
mov
stos
stos
sub
mov
pop
jo
outsl
inc
jl
or
loopne
sub
imulb
xor
daa
lret
incl
push
mov
push
jmp
inc
rol
mov
add
andb
cmp
ss
ss
mov
std
mov
inc
push
mov
cli
cmp
sbb
cltd
mov
outsb
mov
and
arpl
cmp
mov
aas
shlb
sub
int3
clc
outsb
test
roll
aam
adc
mov
testl
push
or
push
sbb
call
cmc
jns
adc
int
mov
inc
pop
jbe
test
lcall
sarl
push
orl
pop
fdivs
mov
dec
jecxz
fbld
fstpt
pusha
out
mov
divb
outsb
fstps
lods
mov
dec
repnz
sbb
cmp
mov
sbbb
add
or
mov
mov
cmpsl
and
pusha
subb
shll
lcall
pop
imul
cli
loop
mov
aam
mov
push
loop
adc
faddp
dec
adc
jle
fcoms
jno
mov
jne
or
mov
mov
sbb
incl
mov
adc
cmc
inc
sarl
mov
or
sbb
or
imul
cld
loopne
cmp
or
sbb
mov
das
adc
cmp
or
cmc
rorb
xchg
sbb
js
insl
add
std
and
std
inc
mov
mov
subl
dec
cwtl
adc
sbb
xor
xor
jnp
iret
out
lds
mov
mov
lahf
sbb
loope
sub
cmp
xor
test
lock
in
aas
jecxz
xor
xchg
leave
test
jmp
les
mov
mov
daa
js
xadd
flds
dec
dec
aas
loope
insl
fldcw
daa
int3
sahf
add
mov
jne
mov
add
or
adc
jle
adc
loope
insl
sti
jecxz
loop
lds
pusha
push
sbb
adc
jne
adc
sub
imull
mov
push
nop
mov
or
int3
add
incl
js
sar
cmpsb
jp
scas
pop
mov
inc
xor
aaa
xor
aad
clc
cmp
pop
imul
je
sbb
add
adc
push
negw
add
cmp
faddl
stos
addb
mov
test
adc
mov
or
jmp
mov
xor
dec
push
je
sbb
scas
sbb
push
mov
dec
xchg
outsl
movsb
push
xor
mov
lods
pop
outsl
mov
sub
popf
add
cmp
insl
das
ss
jg
mov
mov
add
xor
inc
pop
jg
hlt
inc
or
negl
cld
das
lock
inc
js
inc
daa
adc
jge
cmp
sub
add
cltd
mov
mov
enter
es
test
cld
rorl
ret
and
loope
divb
push
aaa
leave
cmp
mov
lea
mov
decl
pop
inc
lock
fistps
jge
iret
test
pop
inc
dec
ret
pop
sub
dec
sub
std
jmp
sub
mov
inc
std
test
ljmp
sub
jge
mov
push
popa
add
and
and
push
daa
test
mov
inc
jmp
sub
pop
into
sub
mov
andl
jb
add
cli
mov
loopne
inc
and
sub
or
adc
loopne
pusha
dec
lret
and
negb
cmp
or
mov
and
call
pushl
popa
adc
mov
or
sahf
stc
xchg
clc
or
cmp
add
dec
mov
ljmp
mov
mov
add
push
ds
clc
mov
push
mov
leave
gs
ss
mov
lret
push
popa
leave
jecxz
and
push
ja
sub
sbb
mov
mov
inc
or
lock
xchg
mov
je
jg
cmp
bound
push
sub
mov
in
in
mov
arpl
jne
push
dec
jne
mov
fdivrp
add
daa
push
inc
pop
repnz
jl
lock
rorb
pop
mov
pop
insl
push
jg
es
lret
ja
mov
mov
push
mov
insl
sbb
mov
mov
test
push
mov
push
sbb
mov
lods
sub
jle
pushf
test
incb
lds
push
hlt
sbb
xchg
mov
fstl
inc
outsl
das
je
and
inc
std
dec
scas
clc
mov
rcll
mov
xchg
out
int3
xchg
aam
pop
andb
or
inc
dec
xchg
or
mov
mov
pop
loopne
dec
test
add
roll
inc
cmc
jg
movsl
jnp
ret
pop
daa
push
pop
sbb
outsl
clc
xchg
loope
into
in
pop
pusha
xor
sub
or
fmul
lock
push
mov
cmpsb
add
cmp
movsl
aam
outsb
lods
mov
aam
or
test
or
dec
sbb
ljmp
mov
cmp
loopne
mov
sub
shr
shl
add
sbb
jmp
xlat
xor
xchg
push
push
xchg
or
sub
add
pop
xor
lock
jp
mov
lods
jnp
das
xlat
adc
cmp
movb
in
mov
sub
imul
popa
mov
into
jmp
insb
mov
fldl
xlat
clc
or
fst
push
adc
cmp
daa
pusha
std
inc
mov
or
jg
hlt
inc
mov
mov
mov
bound
inc
orps
mov
popf
xor
icebp
nop
adc
push
xor
sub
add
xor
inc
mov
lods
in
jge
in
cld
push
test
mov
adc
cmc
adc
push
cmpsb
je
loopne
mov
jo
shl
pop
mov
mov
test
add
insb
adc
bound
cmp
outsl
insl
add
enter
add
scas
or
push
mov
in
mov
sbb
jp
and
je
orw
dec
fiadds
mov
lret
xor
in
and
icebp
stos
mov
adc
cmp
ror
cli
cwtl
cmp
adc
jo
jo
or
or
into
jo
xor
fdivs
mov
pop
adc
int
mov
out
clc
and
dec
cld
adc
lea
pop
pop
loopne
daa
push
and
rorl
es
daa
add
in
pop
inc
xor
in
lock
mov
or
add
push
and
cmp
sbb
adc
mov
lcall
inc
stc
jg
lahf
fidivl
add
or
add
adc
xchg
clc
inc
rcrl
or
in
neg
dec
inc
xlat
pop
push
es
out
mov
push
cmp
in
insl
xchg
and
cmp
mov
call
xor
xchg
sbb
fwait
in
mov
mov
mov
mov
sbb
sub
pop
lret
mov
mov
inc
daa
adc
inc
xchg
pop
xchg
imul
adc
rclb
jbe
add
movsl
inc
popa
xor
push
les
inc
adcb
bound
movsb
stos
aaa
push
xor
test
inc
or
test
xchg
cltd
arpl
aam
xor
push
jno
mov
ret
movsb
loopne
xchg
das
cwtl
iret
pop
scas
in
outsl
add
and
filds
adc
cmp
sbb
aas
pop
stos
sbb
add
xlat
mov
scas
test
dec
and
sbb
loopne
subl
dec
adc
bsf
xchg
int
or
inc
rorb
dec
push
add
fisubrs
inc
shlb
sti
bnd
mov
jl
xchg
lcall
int3
push
mov
sbb
jle
in
testb
mov
inc
pop
hlt
adc
in
pop
adc
or
sahf
and
clc
and
jno
push
jnp
ficoms
mov
std
ds
dec
xchg
inc
sub
xor
dec
mov
adc
femms
push
out
lods
jle
dec
sbb
mov
push
les
xor
or
and
cld
cmp
insb
jo
insl
das
stos
xlat
cld
outsl
mov
test
xchg
roll
inc
gs
cs
and
int3
sub
lds
or
scas
in
adc
mov
mov
ljmp
sbb
loop
dec
xchg
out
jb
pushf
push
jno
xchg
dec
mov
es
dec
insb
pop
and
xchg
movsb
cmp
das
jo
cs
push
and
lods
adc
push
loop
sbb
test
fistl
adc
lret
nop
adc
adc
sbb
jne
cmpsl
or
fadd
decl
dec
dec
or
dec
sbb
stos
or
mov
sub
lret
int
pop
push
incb
test
push
dec
xlat
cmpsb
cld
in
ret
pop
inc
inc
aam
adc
ss
sub
fdivrs
xchg
mov
or
out
into
fimull
das
jl
cmpsl
gs
xchg
sarl
clc
pop
mov
hlt
test
ret
dec
notl
pop
outsb
pop
sbb
pop
movsl
fcmovnbe
movsb
aaa
xor
pop
lods
mov
sub
and
lods
ja
cld
mov
mov
jo
xchg
or
cmp
mov
lock
es
in
movb
mov
mov
ret
insb
jmp
stos
loope
mov
and
inc
mov
and
dec
imul
jle
call
dec
add
rolb
dec
mov
int3
mov
icebp
jo
jo
aas
cmp
dec
push
or
clc
add
mov
mov
dec
ds
dec
inc
call
fs
leave
mov
dec
mov
rorl
test
add
mov
pop
loop
sub
mov
jg
push
mov
addr16
jg
and
or
sub
cli
subl
dec
rcrb
jnp
fldenv
pop
clc
test
sbb
push
push
mov
and
ret
or
fdivs
ljmp
mov
mov
repnz
test
pop
jle
aas
incl
lds
cwtl
and
xchg
ljmp
enter
or
or
pop
subb
pop
xchg
sbbb
jns
mov
inc
sub
pop
sbb
xor
mov
inc
outsl
xchg
outsl
imul
das
mov
arpl
push
mov
outsl
in
lds
mov
sti
or
sahf
cltd
cmp
mov
sti
sbb
in
cltd
xor
sub
xor
or
call
dec
movsl
or
push
fidivrl
cmp
movzbl
mov
xor
test
test
outsl
add
fisubl
pop
loop
jle
mov
je
hlt
sahf
xchg
repnz
cmp
jg
int
pop
imul
ffreep
push
rcrl
add
push
inc
or
test
jge
push
ret
adc
add
xchg
clc
sti
or
lock
pusha
mov
test
outsb
cmp
lcall
aad
xchg
fisubl
adc
or
add
and
cli
fdivs
out
loopne
js
test
inc
lahf
jl
in
sbb
and
mov
cmp
stc
or
cmp
or
push
jge
outsl
lahf
stos
enter
inc
jmp
ret
push
sub
add
xchg
mov
sub
pop
push
call
inc
sbb
ja
or
pop
pop
jbe
lods
popa
orl
xchg
pop
inc
sbbb
lods
sub
push
or
cmc
lods
std
inc
inc
inc
xor
jo
jbe
pop
and
in
mov
imul
mov
push
mov
out
mov
hlt
cmp
int
push
daa
arpl
icebp
pop
mov
lahf
dec
shl
and
test
cmp
mov
sub
mov
adc
aad
cmp
and
jl
jg
cmp
stos
adc
mov
mov
sbb
testl
jp
cmc
aaa
out
ljmp
dec
mov
stos
pcmpgtd
ret
call
jle
add
dec
or
xchg
pusha
sar
fcomps
jg
std
pushl
stos
mov
cmp
xchg
into
and
out
sub
mov
outsl
popa
pop
sbb
dec
fs
loopne
or
mov
dec
enter
mov
mov
push
pop
outsl
and
sbb
fdivr
lods
lea
test
add
call
ret
loope
adc
imul
dec
pop
insl
jo
sti
jg
ss
out
lock
gs
mov
xor
outsl
insb
std
aaa
push
or
pop
rcll
adc
push
movsl
and
out
call
add
mov
fdivr
divb
add
inc
push
add
sbb
ds
push
cld
std
sbbb
add
je
sub
sbb
jbe
sbb
inc
out
mov
mov
cli
cwtl
icebp
mov
mov
adc
mov
xor
mov
pop
dec
je
xor
add
xor
adc
sbb
add
or
xor
rorl
push
sub
fdivrs
xor
cwtl
mov
mov
mov
sti
add
or
mov
decl
mov
je
inc
mov
jl
clc
mov
outsb
xlat
sub
push
sti
das
sbb
std
scas
gs
loope
mov
fldt
xchg
loope
jg
out
dec
xchg
cmp
push
rolb
imul
xchg
das
cld
ja
lret
adc
or
xchg
movsl
in
bound
mov
cmpsb
sub
popf
je
adc
mov
xchg
out
mov
ret
push
hlt
hlt
jmp
in
jae
pop
xlat
xor
sahf
xor
call
mulb
nop
dec
pop
or
stos
lds
xchg
sub
mov
or
or
adc
add
das
ficoml
add
imul
dec
ds
pop
mov
or
adc
ljmp
fcmovnu
fisttps
leave
loope
outsb
lahf
call
cmc
mov
imul
fstps
test
lret
dec
je
clc
das
dec
inc
popa
add
mov
decl
dec
ljmp
aas
sbb
daa
lret
mov
fdivs
pusha
add
call
dec
lret
in
aas
sbb
pop
loopne
cltd
add
xor
inc
xor
pop
cmpsb
cmpsb
push
pop
stc
cltd
or
test
inc
mov
xchg
adc
dec
sub
jl
mov
aad
ljmp
shl
call
adc
xor
mov
add
jp
aas
dec
ja
inc
lahf
inc
mov
movl
pop
jecxz
sub
movsb
dec
or
popf
jp
jle
mov
sub
in
add
add
mov
lret
lea
stos
cld
insl
adc
adc
xchg
fwait
add
or
push
rcll
sub
aas
xchg
cmp
cwtl
mov
loope
dec
inc
lea
xor
scas
pop
push
iret
dec
cld
inc
mov
xlat
mov
dec
or
out
incl
ret
cld
push
add
call
or
adc
outsb
lcall
or
std
or
inc
pop
inc
pop
scas
mov
wrmsr
lcall
or
rsm
or
xlat
mov
mov
aaa
cmp
cld
pop
notl
or
xor
and
inc
xchg
test
add
xchg
dec
add
mov
inc
std
sub
stos
fistl
call
sti
inc
pusha
sub
sub
mov
dec
js
jnp
push
test
sti
loopne
fstpl
push
outsl
cmp
outsb
sub
dec
cmp
and
call
mov
push
jg
movd
mov
jmp
pop
out
push
scas
push
and
mov
mov
adc
push
clc
sbb
sub
or
jg
add
jmp
xlat
mov
adc
mov
add
pop
add
adc
or
rorl
jno
pop
xchg
adc
subl
push
jecxz
push
pop
lea
sub
inc
mov
stos
stos
pop
mov
pop
rcr
sbb
jo
xchg
jns
aam
dec
jne
push
shr
shr
mov
or
clc
add
or
jo
mov
or
jbe
push
loope
and
mov
xor
sub
out
flds
or
std
mov
cmp
inc
out
pop
pusha
filds
mov
out
xchg
xchg
in
call
mov
or
cmp
loopne
stos
or
adc
mov
and
mov
mov
inc
outsl
popf
cmc
lea
mov
mov
incl
popa
sub
push
mov
inc
pop
scas
fwait
stos
xor
popl
dec
inc
sbb
ret
push
or
push
add
adc
mov
push
icebp
jg
jne
and
out
or
ljmp
and
mov
xchg
icebp
aaa
stos
fisttps
add
out
dec
jge
push
mov
test
xor
xor
clc
dec
xorl
push
xchg
clc
xchg
pop
pusha
out
dec
sub
xor
fbstp
xchg
test
out
mov
rorb
and
lret
test
aam
loopne
mov
loope
mov
push
mov
mov
push
repnz
mov
sti
lods
nop
ds
inc
popf
movsb
ja
or
push
push
fildl
push
push
clc
sbb
push
insl
xchg
mov
inc
sti
testb
lea
push
test
clc
mov
dec
jp
int3
js
std
sub
insl
adc
xchg
mov
cmp
or
pushl
clc
mov
sub
inc
iret
les
sti
and
adc
dec
jg
pop
pop
xor
ss
clc
out
ljmp
test
leave
mov
dec
sub
outsl
jnp
and
decb
mov
ds
pop
rclb
jbe
or
sub
out
imul
push
jge
test
inc
dec
stos
sub
mov
adc
inc
jns
loope
lds
sbb
adc
jno
sbb
les
fsubs
or
cld
mov
mov
aam
push
xor
pop
xchg
mov
jo
leave
dec
repz
mov
mov
adc
inc
pop
or
lea
push
cmp
adc
push
or
addr16
add
repnz
cmp
fst
sbb
daa
adc
shl
int3
push
clc
jmp
negl
mov
push
mov
cmp
pushf
in
andb
fbld
fimuls
pop
xor
adc
cmovno
push
lahf
rorb
mov
mov
mov
cmp
lret
lds
or
adc
scas
std
pushl
lea
nop
cmp
rcrb
pusha
data16
ja
movsl
shll
sbb
cmp
cmc
call
mov
popa
es
and
out
sub
dec
fisttpl
scas
sahf
mov
dec
outsl
dec
daa
movsl
add
push
fwait
pop
jecxz
shl
pop
mov
out
cwtl
cmpb
mov
js
cmp
sub
andb
inc
mov
mov
dec
push
adc
in
and
les
add
ds
rol
or
sbb
movsl
cmp
mov
out
loope
movsl
sub
out
leave
fistpll
and
fisttpll
ss
cmpsl
inc
fisubs
aam
mov
push
inc
mov
movsl
repnz
mov
test
pop
add
sahf
aas
into
lock
stc
xchg
lock
clc
and
popa
mov
or
pop
inc
jl
dec
imul
or
push
dec
mov
mov
outsl
test
mov
and
push
shlb
jnp
pop
dec
adc
lea
leave
test
push
outsl
sbb
mov
stos
fcmovnu
sbb
sbb
lods
xor
lcall
xlat
inc
shl
jmp
clc
ret
cmp
fsubs
sub
add
aam
push
mov
rcrb
dec
push
inc
cmp
push
frstor
or
jmp
stos
add
push
dec
cmp
pop
ret
iret
adc
add
mov
lods
cs
and
loopew
fs
xchg
sub
and
ja
aad
adc
fwait
andl
daa
bound
xchg
or
mov
inc
cmp
and
adc
lods
outsb
adc
movsl
push
inc
int
jecxz
jnp
stos
xchg
popf
test
xor
adc
les
cwtl
fwait
out
dec
pop
outsb
cmp
sbb
xor
call
shlb
or
add
je
dec
fs
push
pop
shll
lods
add
jg
pop
sbb
test
cmpl
adc
sub
sub
push
sbb
orl
mov
nop
xchg
flds
sbb
arpl
sub
aam
mov
ret
dec
sbb
dec
xor
loopne
nop
mov
nop
pusha
push
dec
outsl
lcall
les
out
inc
pop
in
mov
lcall
fists
out
imulb
stc
ret
lds
gs
jno
or
mov
outsb
pop
inc
fistpll
imul
dec
push
adc
push
das
fdivr
jmp
xchg
xchg
cmp
xchg
inc
lods
lods
divb
mov
lods
inc
fidivrs
adc
jno
lods
fimull
vsubps
data16
into
fcomp
add
js
push
frstor
out
out
inc
push
and
fucomip
mov
test
fcmovb
mov
std
dec
pusha
inc
push
push
into
cmp
test
popf
shlb
sbb
push
test
int3
out
mov
cwtl
add
cmc
and
lods
pop
mov
sub
mov
outsb
je
aam
popf
inc
inc
in
inc
xchg
xchg
fucomip
outsl
push
lods
inc
jnp
xchg
imul
movsb
xor
pop
rolb
xchg
cli
mov
test
xor
fwait
mov
inc
mov
sbb
mov
inc
fsubs
gs
mov
and
cmc
clc
fdivs
sub
jge
mov
into
je
jl
mov
dec
fadd
xchg
cmc
sbb
int3
mov
jg
aaa
repnz
adc
xchg
aam
adc
scas
sub
leave
mov
or
sbb
mov
mov
add
movsl
in
mov
xchg
mov
lcall
mov
scas
push
jb
incl
pop
push
xchg
mov
sub
movsb
out
out
sbb
bound
addr16
xor
push
pop
call
hlt
jmp
adc
out
adc
push
repz
call
mov
lea
cltd
loop
mov
loop
loopne
lcall
mov
mov
pop
add
lods
aaa
sub
push
sub
push
loopne
mov
or
test
pop
inc
mov
ret
dec
mov
jb
decl
insl
or
clc
movsl
insl
pop
adc
jb
cltd
aam
jge
jae
sbb
xor
and
adc
jl
lea
shrl
mov
mov
es
xchg
lret
mov
mov
clc
jnp
sbb
adc
pop
xor
fisubs
push
shrl
stos
pusha
aaa
js
pop
pop
mov
fwait
imul
add
pusha
fistl
and
xor
mov
xchg
sub
rol
cmp
mov
int3
out
mov
adc
decl
cld
mov
mov
imul
aam
cmp
int
inc
fbld
les
loopne
inc
or
and
sub
and
fwait
orb
bound
mov
incl
addr16
lock
movsb
adc
inc
sub
fstpl
sbb
add
mov
cmp
fwait
mov
frstor
mov
stos
mov
es
mov
cmp
adc
xor
add
pop
mov
mov
les
lods
pop
sub
cmp
inc
sub
xchg
dec
or
mov
addr16
adc
incb
cmc
push
mov
ficoms
dec
inc
insb
rorb
sbb
xorl
inc
lock
and
mov
mov
or
sbb
add
and
mov
test
dec
rolb
dec
xor
fldl
inc
adc
insl
sbb
std
adc
and
inc
cmp
mov
je
mov
add
mov
mov
hlt
rorb
adc
sti
jle
cmpb
add
or
xor
xchg
std
pop
and
add
and
and
js
enter
pop
inc
sbb
mov
dec
push
push
loopne
js
ret
pop
hlt
inc
icebp
cmp
jbe
or
shr
cmp
jb
movsl
icebp
mov
int
lds
movsl
mov
adc
add
inc
push
jl
xor
or
mov
mov
sarb
sahf
xor
ljmp
mov
ss
or
daa
filds
faddl
xlat
sti
jl
stos
es
mov
jno
lock
fiadds
xor
jno
scas
and
jns
mov
sub
and
or
push
lea
xor
ja
popa
inc
insb
std
mov
loop
add
sar
and
ja
lret
adc
pusha
imul
push
push
int3
mov
mov
xor
xchg
ljmp
ss
adc
daa
cmpsl
call
nop
repnz
pop
aad
andb
cmp
cmp
push
hlt
fnstsw
add
push
jno
add
dec
cwtl
cld
mov
xor
aam
stos
sub
insb
outsl
sbb
inc
xchg
sub
add
sahf
mov
negb
sub
adc
dec
dec
repz
popf
ret
mov
scas
stos
sbb
test
lcall
and
mov
inc
pop
std
and
push
and
notb
xchg
xor
pop
sbb
inc
imul
and
and
lea
ljmp
lds
repnz
daa
jb
xchg
sub
or
pop
jle
mov
xor
adc
xchg
jg
mov
ret
mov
je
cld
lea
add
xchg
push
ss
jmp
in
loop
pushf
clc
xchg
aad
popf
jbe
inc
jg
push
insb
ud0
xlat
sbb
lods
fcmovnu
std
xchg
jecxz
xor
mov
lds
aas
andl
incl
inc
or
add
xchg
jle
jne
or
hlt
jnp
filds
sahf
add
mov
mov
loopne
jo
roll
andb
shll
inc
inc
inc
fsubrl
int3
test
push
pop
sbb
test
mov
loop
cld
leave
call
int
pop
test
pusha
and
push
xor
jecxz
orl
add
mov
xor
mov
cli
pop
leave
fisubs
stos
sub
add
xor
arpl
fsubrl
mov
sbb
fucomi
mov
mov
and
mov
cmpsl
pop
out
push
lock
pop
inc
out
lcall
xor
push
jge
dec
testb
addl
push
fidivs
jns
xor
and
inc
jnp
and
jae
dec
lock
jne
sub
int3
pop
loop
xchg
adc
and
ss
out
xchg
lods
sbb
jge
out
sbb
xchg
int3
push
cld
add
xor
dec
mov
sub
repz
push
push
jo
fisttpll
hlt
aam
add
pop
push
push
ljmp
loop
roll
pmullw
mov
dec
sbb
push
loope
and
sbb
addb
push
cmpsb
dec
aaa
sub
pop
dec
divl
cmp
lcall
shll
sbb
add
movsl
outsb
pop
and
scas
adc
adc
adc
frstor
xlat
leave
push
addw
or
sub
dec
movups
ficoml
inc
and
pop
test
xlat
addb
xor
and
lret
sbb
mov
push
dec
or
or
and
dec
mov
add
adc
test
sbb
mov
xchg
mov
inc
push
loop
into
inc
adc
push
stos
add
push
out
sbb
ljmp
outsl
mov
dec
push
sbb
rolb
aad
loope
add
lcall
orl
cmp
lock
int
mov
or
jne
ret
orl
pop
orb
mov
push
in
or
loope
pop
push
push
jne
inc
xor
ret
jle
ja
adc
add
or
icebp
ret
js
or
or
rsm
inc
or
mov
fildl
add
push
jle
adc
test
aaa
ja
sbb
int3
sbb
or
lock
cmp
insb
push
sarb
mov
fisubl
cmp
adc
inc
cs
xlat
pop
mov
inc
into
and
adc
jno
inc
xchg
adc
sbb
andb
dec
add
mov
stos
out
nop
data16
or
fldenv
mov
mov
xor
sbb
add
jle
out
test
push
or
clc
mov
imul
je
push
in
mov
xor
adc
arpl
cmp
jl
loop
jge
shlb
test
int
add
cmp
sbb
mov
add
add
lea
enter
pop
pop
cltd
sub
out
adc
or
pushl
lcall
out
cmp
ljmp
add
roll
mov
and
and
mov
cmp
scas
pop
and
ljmp
push
movups
aad
inc
dec
mov
inc
dec
movsb
sub
imul
test
or
dec
and
arpl
popa
push
cmpsl
iret
or
lods
push
mov
push
xor
mov
sub
cmp
push
inc
mov
inc
dec
or
push
js
and
push
adc
inc
mov
jmp
xor
dec
repnz
and
lds
stos
or
and
in
push
fisttpll
add
adc
pop
mov
add
stc
or
or
adc
shr
cmp
adc
xchg
sub
cmp
mov
lock
pop
repnz
sarb
inc
mov
rcll
outsl
fwait
repnz
jp
pusha
cmp
pop
dec
insl
cs
jo
mov
and
in
lds
adc
inc
dec
mov
adc
add
fwait
sbb
lret
dec
push
sbb
call
dec
fstps
test
xchg
adc
das
lds
or
mov
push
push
lds
push
pop
jmp
call
mov
ljmp
lret
push
jbe
movl
js
daa
popa
add
in
daa
push
inc
test
inc
push
mov
sub
mov
sub
add
pop
rcrl
inc
jmp
scas
jns
mov
or
enter
and
and
out
add
mov
jo
dec
adc
and
aaa
mov
outsb
leave
jge
cmp
mov
ror
and
push
sub
mov
incl
fisttps
cld
fldenv
je
add
dec
mov
and
cwtl
mov
push
sarb
rclb
dec
or
and
ret
cld
xchg
fisttpl
aam
mov
or
adc
add
std
das
adc
pop
add
daa
mov
cmp
pop
ret
add
out
push
or
mov
in
or
lcall
add
aas
outsl
sbb
ss
lea
mov
pushl
add
test
pop
imul
jbe
fldpi
pushf
xchg
mov
cmp
dec
in
mov
or
and
shl
sbb
push
outsl
call
dec
bound
scas
hlt
push
add
adc
mov
fwait
add
mov
subb
ret
inc
add
fdivl
sbb
mov
adc
aaa
cli
and
xor
cs
pop
sahf
cmp
xor
pop
stos
dec
shrb
or
jmp
inc
aad
inc
sub
cmp
lahf
mov
mov
add
movsb
jg
mov
inc
mov
mov
enter
adc
pop
push
insl
movsb
dec
vpaddw
jecxz
pop
sbb
or
and
and
add
pop
mov
ret
mov
movsl
arpl
addl
mov
xchg
call
inc
ja
test
mov
mov
push
mov
xor
sub
enter
daa
jb
incl
cmc
das
push
movsl
xchg
jle
or
mov
pop
clc
sti
cmp
ljmp
adc
mov
js
mov
inc
insb
cld
and
pop
or
xchg
cltd
aas
std
fwait
and
aas
bound
inc
pusha
xor
mov
sahf
inc
push
orb
adcb
fcomip
or
sub
jp
mov
outsb
dec
mov
adc
or
aaa
lret
add
push
lea
cld
sbb
cmpsb
mov
loop
rorb
dec
into
push
sub
jle
sar
push
pop
sahf
and
mov
cltd
adcb
adc
rclb
mov
out
decl
stos
mov
iret
fldenv
or
adc
xor
aaa
adc
pop
ljmp
mov
std
or
insl
adc
push
pop
and
pop
xor
lea
mov
sar
jge
xor
js
ret
adc
pop
mov
in
cwtl
jle
dec
sarl
xchg
cld
and
insl
xchg
mov
repnz
insl
cmc
sub
rorl
out
mov
scas
inc
rolb
adc
sbb
stos
rcll
inc
test
sti
push
mov
push
mov
inc
xchg
rcll
test
inc
sbb
adc
fwait
push
loopne
loop
inc
adcl
and
ret
mov
das
jb
xchg
adc
aas
std
dec
pop
cli
rorb
jb
pop
iret
add
push
mov
addr16
inc
sub
decl
adc
mov
out
sub
dec
fisttpll
mov
in
adc
jmp
hlt
pop
popf
out
xchg
stc
and
pop
aad
push
push
ja
mov
test
add
in
fnstsw
fistpl
in
ljmp
mov
sub
scas
call
outsl
push
push
int3
xor
cmpsl
push
ret
in
stc
xchg
xor
jl
clc
mov
js
andb
push
adc
push
ja
or
cld
in
mov
out
add
test
fbstp
add
inc
in
cmp
cli
cltd
cmp
pop
mov
cmpb
psllq
outsl
fimuls
add
arpl
pop
xchg
mov
xchg
push
mov
push
movsb
adc
outsl
sarb
push
sub
lea
pop
test
cmp
mov
outsl
call
inc
fldcw
add
add
out
nop
push
cs
fdivr
jno
or
or
cmc
mov
or
or
dec
inc
sbb
cwtl
or
mov
incl
jmp
dec
int
hlt
sub
or
push
fcomp
push
icebp
jp
add
nop
test
or
stos
push
mov
stos
add
push
xor
fadd
adc
or
xor
aam
rorl
dec
push
cmp
adc
add
xchg
or
popf
mov
inc
inc
inc
mov
mov
aaa
dec
enter
sbb
inc
mov
out
test
fsubrs
mov
add
push
fdiv
stos
inc
xchg
mov
cmp
mov
in
inc
fmuls
cmc
inc
bound
sub
out
into
cmp
or
pop
daa
movsb
cwtl
jo
inc
add
addr16
xchg
pop
sbb
push
mov
add
adc
test
fwait
cmp
jp
or
fcmove
js
test
jo
loop
or
pop
invd
xchg
and
aaa
dec
enter
or
ret
xor
loopne,pt
in
mov
sarl
xor
pop
std
add
ret
cwtl
sbb
push
push
aam
lret
addb
jno
les
ss
mov
mov
push
xchg
xor
dec
pop
sbb
mov
mov
mov
loopne
add
sbb
adc
lret
shll
rorb
sub
mov
xchg
fsub
pop
js
mov
pop
lock
js
mov
cmpsl
jmp
cmp
stos
enter
and
scas
sbb
sbb
xor
sbb
data16
repz
inc
inc
inc
sarb
and
jo
pop
in
xor
jno
ss
out
cmp
dec
push
sbb
inc
jg
add
inc
xor
sbb
add
out
iret
jns
fbstp
mov
dec
mov
cmpsl
rcr
loope
jo
sub
shrl
jne
sar
inc
aas
push
cli
repz
sbb
xor
andps
or
insl
fyl2x
mov
mov
cmp
and
inc
adc
ljmp
add
sub
out
sbb
shll
add
push
mull
test
incb
and
out
cmp
cmp
aam
add
clc
jg
jo
rcrb
sbb
push
fisubs
sti
insb
mov
out
cmp
add
sub
jecxz
xchg
dec
addb
stc
pop
std
xchg
nop
or
shl
xor
loopne
nop
cli
and
fstpl
or
mov
mov
cmc
imul
les
mov
xor
mov
es
and
aam
into
jne
add
push
inc
arpl
jbe
shr
pop
nop
pop
or
mov
mov
xlat
sbb
push
xchg
or
adc
push
int3
es
loop
popa
sbbb
and
pop
push
pop
repz
mov
jmp
mov
mov
push
sub
jne
mov
in
and
add
add
xchg
nop
jnp
inc
popf
sub
movsl
sbb
or
adc
pop
sub
sub
dec
jbe
aaa
ss
mov
mov
mov
mov
push
push
pop
dec
mov
icebp
and
sbb
movsl
mov
das
fwait
xor
test
mov
rolb
mov
push
hlt
or
xchg
imul
add
adc
cltd
push
push
aaa
and
mov
sahf
add
clc
sbb
nop
push
inc
jl
cltd
pop
outsl
sub
mov
sbb
inc
xchg
mov
andb
add
test
aam
adc
arpl
xor
cmpsb
jle
jge
js
mov
pop
lret
shr
push
lds
jg
decl
mov
mov
outsb
push
sbb
jg
out
mov
je
or
pop
cld
pop
je
and
pop
cmc
sub
arpl
insb
bound
add
scas
call
adc
push
cld
pusha
dec
sub
cs
pusha
xchg
sbb
mov
sbb
out
repz
mov
pop
xor
push
test
pop
jnp
test
adc
aad
mov
xor
mov
pushf
push
or
inc
pusha
ret
sub
jmp
js
loope
ds
xlat
ficompl
test
add
add
sbb
xor
cmpsb
pop
sub
shl
cmp
gs
jbe
int3
jle
aam
divb
xor
insb
sub
push
dec
xchg
mov
ljmp
dec
aam
mov
aas
push
sbb
inc
daa
rol
push
mov
lahf
xchg
lret
pusha
mov
inc
les
dec
dec
inc
dec
in
or
fstpt
adc
push
xor
push
rorb
jne
lea
in
ds
out
mov
pop
sbb
mov
mov
lds
mov
cmp
cwtl
cmp
ret
xchg
jl
adc
mov
sbb
ret
jbe
rolb
and
inc
outsl
push
mov
pop
adc
nop
mov
loop
fs
fucom
cltd
xchg
cltd
xor
js
cmc
xor
icebp
shl
pop
int
dec
fwait
ja
sbb
das
int
jns
test
add
outsl
dec
in
dec
pop
cli
out
adc
mov
das
sbb
jmp
ror
mov
sbb
cmp
dec
rol
out
addr16
sbb
mov
cwtl
cltd
aam
andl
stos
xorl
xchg
mov
mov
clc
outsl
ljmp
cmp
jns
and
icebp
lea
add
andb
arpl
das
sbb
repnz
dec
pop
popf
cld
stos
test
test
or
cmp
mov
aas
inc
xor
push
jp
repz
loope
aad
inc
je
dec
adc
int3
bound
push
je
out
jp
test
sub
cvtps2pi
sbb
mov
cmp
popa
popa
mov
adc
jle
jecxz
fiaddl
fdivs
push
adc
cmc
stos
xchg
xchg
sbb
aas
xchg
cmp
adc
jl
add
dec
call
and
sub
add
fucomp
js
sbb
movb
adc
popf
adc
icebp
push
push
pop
cmp
cmpsb
and
aaa
cmp
les
sub
dec
push
pop
adc
test
dec
movsb
test
xchg
xor
std
or
cmp
aas
into
sarl
pop
stc
pop
flds
sbbl
insl
hlt
inc
cmpsb
addr16
xchg
stc
jg
push
sub
dec
cmc
add
mov
outsb
pop
mov
mov
leave
aaa
sub
xor
loop
push
jnp
cmc
sti
push
adc
ret
sub
fbld
push
push
mov
sahf
mov
mov
inc
bound
adc
mov
addl
mov
inc
cmp
stc
xor
pop
push
add
mov
sub
rolb
mov
inc
jge
sub
loop
outsb
pop
rorb
or
push
add
lcall
xor
xor
xchg
or
aaa
xor
loop
adc
aam
or
mov
inc
call
xor
rcrl
mov
shll
nop
mov
xorl
in
inc
inc
inc
jb
and
leave
add
cld
js
xchg
dec
imul
mov
mov
fsubl
mov
inc
popf
dec
push
mov
xchg
adc
je
sbb
int
ja
call
or
sub
push
jo
sub
dec
and
xchg
xor
cmpsb
icebp
dec
and
jae
rcl
fiaddl
fsubp
enter
xchg
dec
xchg
sbb
mov
sub
push
xchg
add
mov
add
dec
loopne
cmp
mov
sbbb
add
cs
cmp
enter
decl
test
cmp
mov
gs
lods
lret
jb
add
xor
adc
sbb
inc
mov
bound
xchg
pop
sti
cmp
ljmp
pop
lods
add
push
xchg
add
inc
add
mov
out
mov
xor
out
mov
bound
inc
fadds
out
mov
jecxz
out
jne
aaa
add
and
sub
cld
jle
adc
ja
mov
jle
add
nop
sbb
cs
push
enter
add
push
int3
data16
and
pop
inc
iret
cmp
pop
push
push
call
das
roll
pcmpgtd
test
arpl
into
jecxz
adc
xor
mov
imul
loopne
and
cli
push
loopne
gs
movsb
leave
sub
aam
xchg
mov
shll
sbb
repz
or
add
dec
push
pop
push
ret
jge
ljmp
test
mov
pop
push
insl
stos
inc
sbb
pop
enter
inc
insb
adc
mov
adc
ror
push
arpl
scas
or
jno
sub
movsb
pop
add
dec
icebp
pop
imul
jo
fldcw
andl
cli
mull
dec
or
loope
sub
pop
icebp
jle
pop
les
out
pop
sbbb
ds
les
xor
imul
test
repnz
lahf
xchg
icebp
je
jb
aad
rclb
cmpsl
inc
cltd
int
les
mov
mov
sub
mov
bound
push
call
fidivrs
les
js
fcoms
mov
add
jp
out
jg
add
jnp
or
popl
jp
mov
fmuls
enter
sbb
and
pop
xor
in
dec
pop
push
sarb
mul
addb
fdivs
js
dec
cmp
mov
out
xchg
dec
hlt
out
cmc
sub
cmp
xchg
sbbl
adc
divl
outsl
pop
pop
pop
mov
sub
hlt
mov
testl
int
dec
push
mov
sub
cmp
mov
in
push
mov
xchg
jnp
ror
add
mov
ljmp
ss
cmp
negl
and
jl
call
cmp
fistps
rcrl
ja
enter
sub
sbb
or
imul
clc
aaa
ljmp
jb
dec
pop
and
popf
and
lock
fdivrl
faddp
adc
sbb
xchg
ss
stos
jg
mov
adc
xor
or
shlb
sbb
cwtl
clc
aam
adc
jp
call
daa
xor
mov
pop
adcl
jnp
xchg
adc
sub
fwait
enter
icebp
test
rolb
and
xchg
jne
aaa
xor
push
add
add
xchg
xchg
clc
mov
add
mov
pop
xchg
xchg
adc
sti
add
xchg
sub
adc
aas
add
dec
out
dec
test
dec
popa
test
lahf
and
inc
stc
das
jge
pusha
cmc
ret
push
sbb
testl
decl
mov
lret
into
test
xchg
jp
jecxz
sub
fisttpl
add
in
dec
clc
lds
pushf
xchg
fldcw
pop
or
daa
dec
out
sub
lods
push
jmp
pop
jo
xor
js
pop
and
sub
mov
addl
loop
push
gs
dec
inc
adcb
fnstsw
pop
jmp
test
jmp
mov
sahf
xchg
xchg
mov
icebp
stos
loopne
cmp
jmp
invlpg
or
pop
test
pop
aam
repz
in
insl
xlat
fdivl
sar
adc
or
cmp
xchg
cmp
testl
mov
sbb
dec
js
ljmp
repz
add
shlb
test
bound
xor
mov
dec
call
pop
add
bound
sub
pop
mov
fs
daa
dec
or
sahf
mov
inc
das
mov
insl
mov
imul
mov
fsubrl
scas
xchg
hlt
jg
jo
add
cwtl
mov
lods
outsl
sub
loope
push
cmp
sbb
mov
jg
mov
std
call
adc
mov
sbb
cld
dec
cmp
out
sbb
shrb
jne
and
push
rcrb
and
out
je
or
inc
xchg
and
jge
std
push
das
roll
xchg
xchg
xchg
call
mov
popl
or
nop
mov
xchg
sbb
sbb
daa
pop
push
loop
jnp
dec
xor
sbb
and
dec
xchg
daa
mov
sub
pop
inc
adc
xor
sub
ljmp
push
fistpl
mov
loope
lret
jmp
rol
pusha
push
xor
adc
sti
pop
pop
decb
addl
xchg
in
jb
jno
test
add
in
mov
lods
test
movsl
dec
xchg
add
hlt
dec
cmp
std
pop
xor
or
and
outsl
test
addr16
je
dec
xchg
test
and
stos
aaa
xchg
cmp
xor
pop
roll
int3
mov
cmp
sahf
addb
push
clc
fistpl
xchg
les
xor
dec
mov
mov
lret
add
aas
in
cmc
or
mov
cmp
dec
cmc
xchg
fxch
fmull
sbb
jo
or
jp
addb
mov
mov
pop
iret
hlt
rorb
es
cmp
pop
adc
fsubl
arpl
pop
or
stos
mov
push
pop
pop
hlt
push
stc
fwait
outsb
or
ljmp
pop
jae
xchg
inc
add
xchg
push
dec
mov
ret
or
cli
ficompl
in
test
test
js
mov
lahf
cli
mov
dec
cmp
rorb
andl
jecxz
adc
pop
aam
pop
iret
jnp
loope
adc
clc
jae
std
sbb
decl
cs
jb,pn
fwait
lahf
in
test
xchg
cmpsb
inc
fs
aaa
lcall
mull
inc
cld
adc
or
data16
sahf
jo
aaa
pop
xchg
xchg
jl
ret
imulb
aaa
sbb
or
cmp
aad
mov
sbb
pop
or
xchg
scas
jae
repz
mov
lcall
add
insb
fdivl
cmc
inc
sti
xchg
outsl
jg
cmc
stos
add
lret
divb
cmp
mov
inc
sbb
xchg
subb
push
in
xchg
je
add
sbbl
test
shll
push
test
pop
adc
ficoml
push
sbb
fidivs
add
xor
add
cmpb
mov
cltd
mov
fmul
decb
jmp
sub
lea
add
and
aad
and
lea
sahf
setge
in
in
ss
mov
push
jbe
pop
pop
dec
ljmp
test
mov
decl
push
pop
and
in
imul
hlt
dec
scas
movsl
jge
cmc
pop
lahf
lea
add
add
dec
iret
rcl
adc
adc
aam
add
iret
loopne
mov
mov
and
cmp
pop
test
pop
mov
out
outsl
scas
mov
or
dec
daa
jo
out
and
iret
pop
pop
clc
mov
push
cs
pop
sbb
inc
or
das
add
mov
mov
push
call
leave
iret
push
push
data16
cmpsb
push
add
or
rorl
popa
lock
and
outsl
in
mov
fwait
mov
xchg
dec
push
jns
int3
loope
push
jp
mov
sbb
dec
xor
insb
push
add
sar
pop
test
or
loopne
sub
mov
test
push
rcrb
cmp
mov
or
in
stos
lock
call
lcall
push
cmpsb
mov
push
test
pop
cld
add
daa
int3
popf
xor
and
in
and
rorb
loopne
cmpsl
cs
xlat
test
daa
stos
pop
ljmp
or
jb
int
mov
mov
aaa
and
imul
mov
xor
in
stos
pop
aad
lock
fwait
or
scas
outsl
cwtl
mov
jecxz
sub
cmp
mov
adc
out
rcll
sub
jle
add
incl
push
xchg
das
imul
lods
sub
icebp
push
ja
out
in
dec
add
iret
in
cmp
rcrb
adc
jo
lcall
or
sbb
and
nop
adc
sbb
mov
jg
pop
inc
fildl
cmp
nop
lds
aam
loope
lods
aad
mov
xor
aas
in
nop
jg
inc
sub
leave
add
pop
xor
stos
mov
mov
mov
mov
decb
inc
outsl
jmp
call
push
sbb
sub
mov
xor
imul
adc
test
mov
in
out
or
dec
push
push
xor
jle
or
dec
and
adc
fisubrs
out
int3
incb
arpl
sub
mov
xor
adc
mov
adc
or
lock
add
push
dec
stos
mov
call
dec
mov
inc
or
lret
or
inc
push
xor
fdivr
inc
pop
xchg
inc
dec
pop
mov
aad
xor
or
jne
in
pop
stc
or
add
mov
adcl
mov
call
dec
push
mov
push
hlt
gs
push
fcompl
fwait
test
adc
push
adcb
mov
fiaddl
pop
add
les
xchg
xor
mov
or
ljmp
and
insb
mov
lds
lods
inc
xchg
mov
ds
xor
into
stc
cwtl
xor
frstor
or
imul
add
xchg
loope
out
add
add
lds
push
mov
movzwl
aam
pop
xor
in
push
push
adc
adc
xlat
scas
pop
mov
and
lcall
pop
xchg
int
cmpsl
testb
in
mov
inc
lods
mov
or
or
les
push
test
add
mov
jl
shll
scas
add
jl
movl
add
test
mov
push
adc
frndint
clc
pop
sbb
cmp
outsl
mov
pop
jno
mov
mov
xor
ds
push
cmp
movsl
inc
test
icebp
adc
push
cmc
and
sub
pop
inc
mov
mov
stos
or
aas
push
ss
dec
add
sbb
rolb
adc
and
xor
pop
and
out
xchg
adc
call
push
xorl
inc
xor
or
adc
mov
jl
dec
addl
cs
sub
inc
pop
mov
daa
mov
jnp
xorb
fbld
dec
add
nop
arpl
cmp
xor
pop
cli
push
mov
xor
out
nop
jne
addb
lahf
sbb
dec
pusha
aam
mov
jb
push
jp
loope
adc
xchg
inc
or
jge
dec
xchg
dec
es
cli
pop
les
mov
aad
push
insb
into
xlat
mov
adc
mov
xchg
adc
shl
ja
out
fcompl
pop
les
jecxz
cli
and
adc
and
mov
jl
ret
lods
jae
fxch
hlt
push
pop
sbb
xor
mov
les
fstpt
xor
ffreep
xchg
add
jmp
mov
sub
jb
dec
test
jnp
cmp
add
xor
outsl
push
js
push
into
stos
loop
and
mov
inc
xor
sub
loope
scas
push
jg
fldcw
addr16
and
aad
adc
or
push
ljmp
or
adc
push
xor
mov
negb
mov
lock
sub
jmp
repz
pop
into
add
jnp
cmp
sub
mov
pop
lock
mov
pop
pop
out
pmuludq
cmp
xor
inc
jb
nop
imul
loop
iret
orb
jg
repnz
jno
cmpsl
add
sub
cs
and
arpl
fwait
mov
cmc
outsl
les
or
lds
inc
psrlq
mov
out
push
aaa
add
or
xchg
inc
and
or
sub
or
jg
call
cmpsb
add
pop
insb
pop
mov
lahf
push
mov
cli
mov
or
or
ljmp
filds
cmpsb
leave
and
xchg
xchg
sarb
lds
hlt
cmp
addr16
and
rorl
movsl
inc
testl
mov
cmp
sub
clc
inc
scas
jp
inc
adc
push
cld
outsl
push
pop
mov
stos
test
adc
mov
mov
inc
shll
dec
int
iret
cmpsb
ss
icebp
out
ljmp
sub
ss
test
iret
push
imul
add
add
xor
push
stos
push
xchg
out
and
push
push
adc
fisubrs
xor
dec
loopne
aad
mov
rcrl
cmp
adc
rcrl
mov
xchg
sbb
aaa
mov
push
pop
sub
pushf
lcall
loopne
xchg
outsl
sub
popa
lods
xor
lds
mov
mov
inc
jne
jnp
rolb
fisttpl
pop
test
xor
jle
adc
sbb
add
andl
and
or
jne
sub
xor
nop
repz
push
scas
sub
aad
aam
mov
jp
jl
mov
inc
mov
lahf
ucomiss
cmpsb
icebp
xor
inc
jle
mov
fildll
cltd
adc
aam
lret
test
lea
mov
nop
or
outsl
cmc
jle
loop
or
xchg
sub
or
ja
lods
pusha
cwtl
add
mov
inc
mov
repz
cmpsl
mov
pop
pusha
sub
sbb
xchg
sbb
sbb
imul
pop
push
jno
rorb
inc
jg
shrl
les
cmp
jne
mov
in
cwtl
xor
jl
cmp
shlb
push
outsl
cld
or
mov
outsb
mov
xlat
or
mov
mov
fs
or
mov
mov
push
pop
sub
push
add
cmp
jae
jo
andl
sub
sbb
pop
fdivs
add
sbb
xchg
outsb
dec
mov
sbb
movsb
popa
shlb
outsl
cmp
adc
mov
std
ljmp
lret
cmp
xchg
push
xlat
ret
test
pop
inc
jmp
jmp
hlt
hlt
xchg
lcall
mov
repz
inc
mov
lret
push
enter
or
mov
inc
or
xlat
cmp
xor
mov
fstps
mov
imul
sub
aaa
mov
jns
pop
jae
test
je
or
mov
cmp
jns
pushl
push
int
adc
jno
lret
mov
pop
sub
subl
or
movsl
lea
aad
inc
sub
ficoml
add
das
aam
add
stos
lods
dec
cmpsl
int
pop
loopne
mov
sti
aaa
sbb
mov
mov
dec
cmc
sarb
mov
popf
xchg
or
xchg
dec
jp
in
jecxz
sbb
outsb
xor
ret
sbb
mov
pop
push
pop
clc
pop
rcrl
mov
adc
test
push
jg
cmp
inc
lea
and
jg
insb
aas
lahf
shlb
push
jne
insl
insl
adc
sub
mov
mov
pop
inc
or
sub
mov
or
inc
jmp
or
movsl
es
inc
mov
aam
inc
scas
fwait
sbb
mov
inc
and
pop
bound
out
loopne
mov
aas
mov
test
or
jo
sbb
sub
inc
xchg
das
mov
sahf
adc
or
mov
mov
sub
insl
mov
imul
lods
sub
fimull
outsl
outsl
ficoms
shll
into
test
cmpsb
in
ljmp
lods
sub
or
adc
pushf
mov
jp
jne
adc
inc
loopne
adc
mov
adc
mov
cmp
and
dec
jb
shl
and
lods
inc
popa
adc
lret
adc
pop
out
mov
loope
jmp
sbb
add
add
or
push
push
sub
adc
xchg
ljmp
outsl
cmp
adc
inc
pop
dec
rorl
push
or
mulb
xor
stos
cltd
aaa
xchg
add
stc
add
xor
lock
dec
rolb
jmp
loopne
mov
mov
out
push
stos
adc
ret
xchg
cmp
sti
mov
fstpl
repnz
jp
iret
cwtl
or
sbb
daa
scas
andb
clc
mov
sbb
cmp
push
std
sub
fprem
jmp
jmp
pusha
pop
loop
or
aad
sub
pop
adc
fwait
inc
sbb
jmp
pop
adc
mov
pop
sub
clc
adc
cs
in
dec
cmpsb
xor
dec
sub
and
inc
sbb
pop
inc
jae
push
add
mov
dec
imul
andb
adc
adc
pop
cwtl
xor
fs
movsl
xor
movsl
into
popa
pop
inc
xchg
add
mov
test
fchs
adc
loop
sbb
int3
fdivl
aad
mov
push
lds
sbb
push
and
call
loop
or
mov
test
adc
gs
xor
into
adc
jb
js
std
das
push
mov
adc
inc
push
int
aam
nop
cmpsb
call
push
push
insb
inc
inc
mov
pop
mov
mov
jp
test
fwait
push
xchg
adc
aaa
stos
repz
cs
xor
mov
mov
add
mov
lock
mov
inc
aam
stc
test
sub
add
dec
test
xchg
sub
and
shlb
test
pusha
adc
inc
aad
push
insl
inc
jg
fisttps
addb
cltd
push
push
insl
add
cmp
ja
xchg
and
test
fs
inc
cli
push
pop
push
push
rcrb
lock
enter
push
lods
movsb
push
dec
add
test
inc
add
rclb
jns
test
andb
lcall
jecxz
lcall
and
pop
cmp
lcall
mov
add
cmp
xorl
fimull
test
pop
imul
dec
rolb
shll
add
dec
pop
cmpsb
fs
test
mov
sbb
mov
sbb
mov
cwtl
cld
andb
sahf
push
inc
xor
inc
add
faddl
cmp
mov
add
dec
or
add
push
cmc
sub
add
and
andb
and
aam
inc
icebp
pop
arpl
cmp
shlb
movsb
push
mov
pushf
dec
dec
sbb
pop
adc
add
incl
sbb
stos
in
clc
and
cmp
movsb
cmpsb
fucompp
in
adc
push
push
mov
jl
sbb
shrl
js
sahf
dec
es
ljmp
mov
mov
lret
and
cwtl
or
mov
xor
mov
imul
xchg
daa
mov
adc
es
or
mov
mov
stc
and
sahf
test
ret
inc
sbb
dec
icebp
pop
ss
sbb
nop
das
outsl
outsb
push
xor
mov
pop
and
jnp
inc
add
push
mov
add
inc
shll
mov
push
not
mov
aam
xor
inc
jge
fidivs
dec
push
pop
int
xor
ljmp
push
aad
mov
es
adc
xor
pop
addl
rolb
ss
ljmp
add
sbb
inc
sbb
xor
sub
adc
shlb
fwait
or
mov
ja
mov
fisubl
clc
data16
out
push
mov
xchg
lcall
sbb
push
cmp
jp
ljmp
sbb
fwait
lock
adc
or
push
adc
icebp
push
cmp
loope
ret
add
cmp
adc
fldcw
cli
fcoms
nop
adc
popa
add
or
dec
pop
sahf
mov
loope
adc
sbb
cs
xchg
or
or
xchg
xchg
jnp
mov
mov
sub
lods
faddl
inc
mov
and
add
out
clc
cmp
sahf
fmull
xchg
pop
data16
xchg
testb
sarl
mov
orb
push
sbb
jo
ljmp
sub
lock
xor
cmp
in
push
add
fmuls
addr16
loopne
mov
test
test
jecxz
sub
pop
inc
inc
dec
cmpsl
push
xor
imul
push
xor
sub
in
mov
add
adc
mov
bound
add
sbb
jle
xlat
popa
shll
fiaddl
hlt
mov
cmp
pusha
shl
call
testb
into
sbb
addb
inc
daa
mov
inc
insb
mov
add
mov
push
lds
sar
stos
mov
sub
push
mov
dec
and
pushf
pop
into
and
ficoml
inc
sahf
mov
movsl
movsl
and
shll
mov
xchg
and
xchg
inc
stos
div
fisttps
stos
out
fsubrl
xor
xchg
sbb
add
inc
das
aad
mov
mov
aad
push
xchg
loope
xor
sbb
std
dec
adc
mov
or
add
cmpb
aaa
push
mov
leave
xchg
inc
movsl
in
fstl
dec
je
add
imul
test
pop
clc
jbe
mov
cmp
sub
movsb
sbb
jno
sahf
sbb
jne
mov
repnz
sahf
mov
dec
adc
mov
loopne
repz
lret
and
push
xchg
lret
add
sbb
fisubs
pop
jg
aaa
jb
mov
add
adc
sub
adc
ljmp
std
cmp
xchg
mov
mov
add
adc
jmp
call
push
push
sbb
xor
loop
pop
sub
sub
adc
lahf
xchg
repz
ret
inc
in
mov
pop
xor
or
ret
xor
xchg
sahf
lret
and
cmpb
cli
aaa
add
dec
mov
jg
clc
mov
lret
xchg
fldenv
xchg
cmp
mov
outsl
pop
cmp
xor
lea
dec
mov
lahf
add
xchg
cli
jo
cmp
loope
hlt
mov
orl
add
out
fmuls
cmp
cli
test
cwtl
jge
cmp
in
outsl
aad
push
adc
push
cwtl
push
test
mov
adc
push
or
jbe
ljmp
aas
data16
mov
add
lret
dec
js
cld
lcall
stc
stos
clc
inc
inc
sbb
pop
pop
or
and
dec
rolb
and
inc
lret
pop
cmc
push
aad
push
imul
cld
mov
adc
bswap
sbbb
cmc
orps
in
ds
mov
inc
mov
push
xchg
pop
mov
add
loopne
push
inc
enter
mov
pop
lea
sbb
cwtl
inc
fiadds
push
or
xorl
pusha
mov
push
add
psubusb
push
mov
mov
ljmp
cmp
pushf
adc
int
xor
pop
jns
xchg
and
movsb
pusha
jbe
les
mov
add
mov
fcoms
orb
cmpsl
into
add
push
mov
sti
sub
inc
add
ss
dec
xor
imul
xor
call
xor
imul
fmul
sub
pop
dec
shrb
fisttpll
push
jbe
sub
sub
mov
in
adc
lea
loopne
fmull
or
adc
mov
cs
or
mov
or
mov
data16
and
popa
testb
add
dec
data16
mov
push
iret
jp
shll
pop
add
dec
addr16
add
ss
imul
sbb
adc
neg
ljmp
movb
int
jo
cs
sar
adc
popa
inc
dec
enter
pop
pop
mov
and
jbe
test
add
push
aas
sbb
cmp
or
mov
and
popa
adc
shlb
ror
fwait
popf
inc
leave
push
out
shl
rcrl
or
cld
sbb
in
add
fisubrs
cmp
data16
and
bound
cmp
outsb
pop
mov
sbb
push
mov
add
in
sub
sub
or
mov
jge
adc
dec
jle
mov
pop
call
inc
sbb
mov
rcll
lods
inc
jnp
add
out
popa
add
sahf
hlt
xor
pop
push
add
dec
int3
jno
adc
mov
inc
pushf
push
xor
pop
repnz
and
adc
push
daa
popl
dec
int
or
mov
fstpl
call
mov
arpl
addr16
sbb
int
add
stos
mov
xchg
fs
push
out
cld
int3
sub
mov
jmp
push
or
dec
push
sub
adc
loop
stos
lock
sbbl
int
insl
inc
int3
sub
push
xchg
mov
cmc
mov
xor
ss
sub
loope
mov
mov
add
out
and
cmp
xor
repnz
rclb
xor
pop
inc
iret
in
imul
xor
mov
pop
add
lret
pop
mov
or
push
cmp
pushf
add
xchg
loope
add
shlb
enter
call
adc
hlt
jmp
mov
jno
jl
lea
aas
int3
inc
jge
loop
mov
xchg
mov
sbbb
push
push
cs
outsb
cs
push
xlat
lock
test
sub
add
leave
lcall
jp
sbb
jne
dec
push
sbb
imul
xor
mov
leave
push
sbb
mov
pushf
cld
xor
test
mov
push
out
icebp
adc
mov
jae
test
outsb
arpl
call
call
add
nop
outsl
jl
fistl
push
or
test
aam
les
adcl
push
pop
cmp
add
xchg
mov
fcoml
mov
dec
hlt
fidivs
cmpsl
ss
or
push
cmp
mov
adc
adc
adc
out
inc
fnstcw
xor
add
xchg
push
repnz
addl
adc
inc
mov
and
sub
outsb
cmpsb
call
bound
xchg
movsl
jle
mov
rolb
incl
jp
mov
push
xlat
adc
cld
push
in
in
push
xlat
fadds
cs
mov
rorb
popl
imul
jb
lock
jno
mov
int3
shlb
loopne
out
mov
loop
fs
pushf
test
aad
les
and
ret
adc
test
sub
mov
add
loopne
rcrl
shll
loop
ficompl
cmp
popa
shl
rorl
jmp
fnstcw
pop
jo
adc
outsl
sub
fistps
scas
dec
dec
and
sbb
loopne
inc
movsb
and
pop
vsubss
stos
push
inc
add
jne
adc
mov
cmp
inc
and
push
adc
loopne
mov
test
lock
je
xor
cmp
sbb
outsl
sbb
xor
cli
push
lods
outsl
std
sub
fnstcw
adc
and
inc
pop
xor
sahf
sub
inc
jmp
dec
xor
test
or
mov
inc
inc
lds
bound
xchg
in
pushf
fwait
add
or
imul
shll
xlat
push
int
lret
adcl
inc
loopne
pop
mov
mov
pop
pop
ds
arpl
mov
mov
cmp
ret
pusha
js
add
cmp
mov
inc
rclb
jno
fsubr
shrl
mov
in
adc
or
xchg
sub
dec
and
jp
das
pop
roll
mov
test
pop
dec
inc
enter
jp
or
test
nop
pop
xor
ret
ficompl
cmc
ucomiss
add
xchg
sub
adc
adc
add
cmpsb
repnz
das
lahf
hlt
pop
or
cmpsl
and
push
inc
cwtl
jne
stos
push
lock
lods
mov
adc
adc
dec
push
rorl
adc
stos
jmp
das
into
mov
imul
xor
pop
jecxz
fildl
inc
test
in
cli
push
push
push
les
pop
add
add
bound
pop
cwtl
mov
cmp
out
add
add
dec
hlt
addl
fadds
bound
in
aas
sub
es
pusha
ds
sub
enter
rorl
les
push
fs
pop
in
lahf
pusha
pop
and
or
jbe
js
mov
lea
icebp
xchg
mov
xchg
adc
lahf
out
jns
jle
leave
sub
stos
mov
or
pop
dec
movsb
pop
add
lcall
repnz
clc
enter
mov
daa
or
dec
sub
add
loopne
xor
mov
push
lock
xor
lock
sub
fldenv
fbstp
popa
test
push
inc
clc
in
add
mov
and
push
ss
add
stos
subb
xchg
or
add
xchg
inc
addr16
xor
les
sbb
jle
adc
sbb
mov
fs
inc
cmp
pushf
push
mov
sbbl
cmpsl
cmp
ss
das
or
mov
and
aas
inc
popa
cmp
ja
std
fwait
mov
imul
adc
test
ja
mov
scas
leave
push
sahf
repnz
mov
and
inc
push
pop
inc
inc
gs
ret
xlat
inc
les
rcrl
daa
adc
or
clc
add
cmp
repz
xchg
fdivr
cs
inc
sub
sub
add
loopne
mov
fisttps
jns
aam
dec
jp
stos
jle
sub
adc
add
pop
mov
ds
out
add
roll
hlt
fstpt
jmp
int
jo
movb
cltd
into
add
inc
test
in
movsl
pop
icebp
and
jmp
addb
or
je
mov
pop
das
pop
cmp
push
mov
es
lock
adc
mov
fnsave
dec
sbb
jge
adc
inc
pop
cmp
mov
ljmp
add
pop
enter
pop
inc
shl
sub
add
fistl
ret
mov
sbb
or
repz
in
or
mov
movb
xor
movsb
lcall
fistps
les
xchg
stc
jo
arpl
rorl
add
repz
adc
cli
mov
shl
or
fcomps
outsb
add
insb
stc
adc
mov
ret
rcrb
push
lock
xor
out
or
pop
call
fiaddl
inc
add
xchg
andl
or
xor
orb
mov
mov
cmp
ss
pop
inc
std
subb
jnp
mov
pop
lods
adcb
test
mov
xchg
orl
fcomps
test
and
inc
inc
ljmp
adc
jp
ss
rcrb
pop
pusha
xchg
fcoms
inc
adc
adc
pop
or
pop
mov
or
xlat
outsl
inc
push
add
andl
mov
or
mulb
fbld
push
jle
daa
add
xchg
jg
sub
ror
cmpsb
pop
pusha
adc
inc
fwait
push
call
mov
mov
jb
inc
std
lock
call
sbb
popa
jge
aaa
data16
add
add
and
sub
mov
and
mov
stos
ret
push
popa
jns
lock
roll
pop
add
push
add
rorl
and
ljmp
inc
mov
adc
push
std
sbb
inc
cwtl
ret
sub
fsubrl
mov
xor
pop
les
cmp
or
out
out
and
push
adc
repnz
mov
push
mov
adc
or
sub
dec
shrb
pop
lea
xchg
adc
pop
and
rclb
jle
pop
pop
sub
inc
xchg
leave
pop
inc
icebp
and
push
mov
xchg
inc
push
popf
mov
fisttpll
dec
aas
jnp
add
loopne
mov
mov
pop
add
and
sbb
adc
dec
addr16
test
stc
xchg
test
cmp
cmp
inc
inc
cmp
rol
fimuls
cmp
adc
jl
js
call
fs
outsb
push
mov
or
rcrl
pop
or
sbbb
sub
add
fwait
insl
adc
into
je
add
or
sbb
popf
dec
add
pop
loope
adc
call
aad
dec
std
and
adc
jl
xchg
push
insb
in
sbb
or
adc
pop
sti
in
out
xor
addb
push
ljmp
subl
lods
outsb
push
and
mov
in
addb
add
add
addr16
clc
inc
icebp
push
test
leave
ret
jbe
lret
outsb
push
inc
push
or
cmc
xchg
mov
test
nop
rcrb
lea
fmul
es
sbb
dec
adc
stc
je
je
xchg
mov
add
lret
out
clc
jo
dec
adc
dec
push
sbb
adc
loop,pt
dec
adc
add
adc
add
mov
or
int3
aad
add
mov
pop
ss
ljmp
fsubs
mov
imul
movsl
adcb
adc
sub
xlat
sub
pop
and
or
add
nop
mov
std
js
mov
add
enter
iret
sub
lock
ja
call
dec
ret
out
sub
mov
out
repz
push
sbb
inc
push
pop
inc
cmp
xchg
and
adc
xlat
mov
mov
cmc
mov
or
es
dec
inc
mov
and
mov
mov
mov
pusha
push
dec
inc
ljmp
adc
and
jmp
push
jo
add
mov
mov
and
int
ret
out
incl
push
roll
pop
popa
sub
mov
push
decl
add
nop
adc
in
push
mov
incb
insl
fistpl
test
outsl
dec
subl
xchg
adc
mov
inc
test
mov
test
inc
mov
mov
mov
nop
popa
nop
stos
mov
mov
mov
mov
outsb
ja
loopne
push
cltd
xchg
push
adc
jb
mov
pop
test
sahf
loop,pt
jg
mov
fisubrs
adc
xchg
jl
pushl
push
push
fnsave
mov
add
outsl
lret
daa
clc
aaa
ljmp
movsb
cmp
and
adc
or
test
test
jg
push
mov
jae
incl
imul
jp
out
dec
push
stc
xchg
mov
push
add
inc
lret
clc
mov
pop
add
outsl
and
sti
shll
jg
xor
pop
adc
mov
mov
orb
dec
and
out
gs
nop
mov
cmp
pop
xchg
or
add
mov
lock
aas
stos
mov
jbe
mov
test
fistpll
gs
fldl
and
add
aaa
or
jns
dec
adc
lock
enter
hlt
add
sub
add
add
xchg
add
lods
mov
jnp
or
out
aam
and
enter
aam
std
testb
dec
and
or
shr
mov
sub
or
nop
add
jbe
sahf
sub
aam
gs
adc
and
or
shlb
lods
orl
sahf
lea
gs
mov
addl
sub
sbb
aam
add
outsb
adc
rol
mov
push
mov
dec
bound
and
push
std
and
pop
mov
adc
in
xchg
jecxz
es
testl
dec
add
inc
push
push
inc
pop
xchg
or
loope
in
aam
mov
inc
and
sahf
icebp
dec
push
sbb
adcb
xor
mov
push
je
dec
jge
into
push
xchg
adc
mov
decb
insb
jg
add
xor
mov
and
jecxz
cmp
xor
mov
js
cld
dec
lock
jb
sarb
push
repz
sub
adc
add
xchg
or
lods
call
sbb
add
mov
ss
add
ljmp
fucomp
mov
cmpsl
movsl
pop
and
fwait
jo
neg
push
incb
xchg
pushf
mov
popf
mov
adc
xor
pop
cmp
bound
fisttpll
mov
sub
xor
imul
push
lock
lock
push
add
mov
dec
rcrb
inc
mov
pop
or
mov
or
stos
das
sub
sbb
out
or
mov
stos
and
mov
add
xor
add
jecxz
mov
inc
dec
call
pop
push
shrb
sub
dec
and
mov
fs
add
mov
adc
movsl
iret
mov
jecxz
addl
lods
jl
adc
out
test
add
cmp
adc
sbb
lods
cs
cwtl
icebp
test
cmp
mov
xchg
cmp
cwtl
shlb
fsubs
inc
dec
fcmovbe
xor
mov
inc
inc
add
add
lret
or
or
add
sbb
inc
inc
inc
lahf
aad
loopne
cmp
nop
add
push
mov
ficoms
adc
push
jmp
icebp
mov
add
mov
ss
adc
and
mov
jl
adc
sarl
sbb
or
icebp
ret
pop
adc
loopne
jg
cmc
pop
lods
inc
and
adc
cld
dec
jo
add
and
inc
adc
push
clc
mov
add
clc
adc
or
out
inc
sub
fidivrs
out
stos
cli
dec
std
icebp
rolb
jmp
arpl
in
mov
pop
dec
subl
cmc
or
adc
mov
mov
mov
jbe
xchg
je
dec
mov
pop
lahf
cmp
jle
inc
decl
je
xlat
ljmp
push
rolb
jnp
mov
jmp
pusha
and
or
clc
push
jg
test
inc
push
cmp
mov
dec
cld
sbb
or
int3
pushl
int3
xor
lret
dec
add
out
adc
nop
jbe
inc
jecxz
mov
das
push
add
cmp
push
ss
les
pop
push
push
pop
push
stos
cmp
pusha
dec
adc
loopne
in
mov
push
cmpsl
cmp
jg
clc
add
popf
jb
inc
add
cld
mov
fildll
out
test
pop
add
mov
rcrb
jmp
and
andb
add
pop
std
sub
add
xchg
mov
daa
cmp
cld
dec
cmpsb
or
movsb
mov
add
dec
and
mull
fs
adc
idivb
mov
adc
pop
or
push
add
cmpb
add
popa
ljmp
mov
jg
sbb
pop
xor
cmp
pop
xor
add
add
add
cvttps2pi
clc
pop
sarb
cmp
mov
dec
and
rcr
sbb
xchg
je
std
and
leave
pop
mov
push
adc
mov
push
cmp
pop
ret
popl
push
push
pop
cs
mov
test
loop
inc
loop
or
jg
sbb
inc
jae
adc
cmp
clc
fwait
pop
js
inc
and
mov
es
lods
mov
fucomp
mov
hlt
and
pop
sub
sahf
sbb
mov
xchg
jg
mov
inc
testl
das
fsubrl
push
ret
xor
inc
hlt
jne
push
imul
cltd
or
loope
lock
cs
fcompl
inc
inc
inc
cwtl
je
and
sbb
sahf
repnz
cli
packuswb
fstpt
sbbb
and
pop
setbe
sbb
sbb
test
sub
test
xorl
dec
pop
sbb
ret
clc
insl
ja
and
sub
mov
xchg
dec
clc
pop
divb
lahf
add
or
jle
dec
xor
cld
jnp
mov
mov
or
jbe
imulb
call
sbb
bnd
mov
outsl
xchg
push
adc
sub
imul
mov
decb
xchg
loopne
cld
cld
adc
mov
mov
fistps
inc
icebp
dec
sub
clc
push
leave
maxps
lret
popf
pusha
and
xchg
std
add
movsl
ljmp
push
std
xor
subl
add
aaa
or
and
movq
mov
mov
outsb
cld
pushf
and
in
aas
pop
bound
mov
ss
or
testb
int3
mov
cmpsl
mov
mov
hlt
cld
mov
sbb
loop
jno
inc
jecxz
stos
lods
push
clc
dec
push
cs
cli
testb
inc
mov
ret
xorb
add
shll
mov
ds
ljmp
test
dec
mov
mov
adc
xor
enter
push
mov
inc
mov
push
shll
sbb
xorl
decl
pop
movsb
ss
inc
fildl
inc
or
cmp
ror
bound
daa
test
dec
gs
sbb
aam
jb
mov
xor
lahf
add
flds
in
addb
add
xorb
fimull
mov
xor
add
mov
adc
mov
test
pop
shl
inc
fistps
and
add
push
lret
mov
jmp
outsb
sbb
cmp
dec
or
push
mov
jbe
mov
popf
roll
nop
mov
inc
jp
out
sub
mov
xor
repz
mov
out
scas
cmc
or
jo
rorl
outsb
inc
sub
lods
xor
loope
outsb
addr16
pop
dec
mov
aaa
push
sub
sbb
mov
mov
outsl
add
into
xor
inc
adc
sbb
cmp
paddusw
out
icebp
sub
lret
mov
pop
mov
push
cld
sahf
jp
mov
pushf
adcl
aaa
jle
sbb
out
mov
ret
hlt
bound
mov
lods
push
and
les
adc
out
insl
insl
mov
lods
inc
enter
dec
add
sti
mov
mov
mov
push
in
mov
std
push
fcmove
or
ds
fnstsw
testb
add
xchg
movsb
adc
or
dec
out
jbe
cli
fisttps
fmuls
sub
flds
xor
or
jl
sub
pop
cli
mov
rcrl
and
xor
cmc
or
stos
insl
mov
movsb
push
imulb
push
sahf
mov
dec
xchg
clc
iret
leave
ffree
mov
notl
xchg
sbb
andl
add
cs
insl
pop
pusha
cmp
pop
xchg
aas
sub
outsb
mov
daa
ret
inc
je
movsl
outsl
clc
das
adc
jge
inc
mov
xchg
out
out
push
shrl
sub
lret
push
cwtl
pop
fcmovb
and
mov
jle
orl
add
mov
icebp
pop
roll
outsl
and
or
push
das
or
std
push
push
int3
add
inc
loope
ret
nop
iret
mov
push
fwait
xchg
add
adc
inc
sbb
ret
rcll
les
inc
nop
and
jo
add
and
andb
push
or
lret
test
jmp
mov
out
xchg
xor
aaa
aad
fxch
test
cmpsl
adc
fidivrl
scas
pop
lret
aas
std
mov
ljmp
or
sub
bound
fdivrl
mov
notl
shll
arpl
cli
les
xchg
sub
push
xor
loop
mov
add
insb
sub
pop
pop
sbb
push
xor
mov
cmp
scas
movsl
mov
fidivrl
push
pop
fildll
clc
xchg
es
push
sub
xor
push
cmc
or
xchg
fwait
int3
lcall
fadds
std
and
sti
outsl
aad
cmp
mov
mov
les
call
sar
mov
arpl
jle
hlt
out
or
lcall
xchg
push
mov
xchg
push
dec
mov
test
roll
sbb
jo
push
jne
es
popf
add
sub
and
ljmp
mov
push
jb
mov
fidivrs
dec
rorb
jnp
mov
mov
or
bound
sub
add
icebp
pop
xlat
bound
inc
in
push
jo
loopne
or
lods
enter
fcoml
xor
shll
mov
inc
inc
jbe
or
cmp
je
popa
gs
mov
daa
mul
inc
and
adc
jbe
imul
test
xor
mov
fbld
je
hlt
add
add
and
imul
xchg
mov
cmpsl
add
mov
scas
fstl
add
pop
idivb
mov
inc
movl
jo
bound
insl
inc
cmp
stos
push
outsb
in
js
clc
shrb
mov
sbb
fstl
mov
xchg
fdivr
pop
cmp
bound
fs
jo
in
pop
sbb
or
adc
add
sub
enter
repz
inc
sub
out
into
pop
push
mov
xchg
push
xchg
mov
pop
pusha
mov
movsb
add
in
mov
push
mov
repnz
add
sub
in
xor
add
shlb
push
sub
or
scas
and
and
insl
add
mov
sub
rcrb
jmp
mov
pop
push
pop
js
adc
add
rcl
leave
stos
enter
adc
jmp
inc
test
xor
sub
es
adc
inc
add
xor
mov
push
fadds
or
rorb
pop
aas
rorb
inc
aam
inc
addb
and
or
inc
lods
mov
xor
cmp
cmc
andb
and
xor
mov
roll
dec
sub
add
repnz
fldcw
adc
add
mov
push
pop
cmp
add
shrl
outsb
int3
call
mov
sbb
xor
add
pop
or
and
sbb
add
repnz
mov
or
insb
movsl
jno
fistps
js
test
jb
js
or
mov
add
add
lahf
shll
popa
adc
pop
outsb
sub
jno
add
or
loope
lcall
mov
push
imul
lds
push
xor
pusha
sbb
mov
cmp
push
push
pop
jp
adc
incl
sbb
fwait
add
and
jno
jbe
out
ja
mov
and
fsubrs
mov
adcb
pop
movsb
push
sub
stos
mov
push
mov
push
or
adc
push
adc
adc
mul
and
sub
sub
dec
fdiv
inc
xchg
arpl
std
and
cwtl
push
push
jnp
mov
loop
fcmovbe
sbb
lahf
pop
dec
add
je
imul
loope
into
adc
in
inc
add
or
std
ret
cmpsl
aam
jecxz
add
add
loop
pop
add
sarb
jb
int
loop
out
mov
jmp
inc
aaa
dec
mov
addr16
arpl
outsl
fstl
adc
xor
enter
cmp
jle
shlb
dec
aad
iret
lret
movb
aam
ljmp
sub
mov
or
roll
repz
std
xlat
jecxz
adc
sub
hlt
aam
insl
xor
or
xchg
jo
js
lods
sbb
push
fmuls
xor
loop
sarb
mulb
lcall
jp
mov
call
cli
xor
xchg
jp
mov
js
faddl
jbe
mov
mov
jmp
adc
fmul
adc
jp
call
add
fsubs
rol
int3
or
push
arpl
int
jecxz
or
or
mov
sbb
movsl
cmp
push
add
sbb
dec
add
enter
mov
or
cmp
popa
cld
aam
or
out
popf
data16
dec
data16
les
movaps
push
xor
xor
lods
or
pop
test
sbb
jge
mov
push
mov
idivb
lods
xor
jecxz
add
pop
push
xchg
lea
or
pop
jle
add
arpl
mov
lods
popa
mov
ret
xchg
lock
addr16
ljmp
call
mov
je
iret
cs
int3
push
cmp
jo
push
pop
dec
filds
mov
outsl
jecxz
or
pop
lcall
loope
outsb
pop
dec
stc
or
adc
mov
mov
mov
fs
adc
add
pop
sub
add
dec
ficoml
insl
in
aas
clc
push
inc
fdiv
sbb
js
mov
stos
or
loope
ja
and
push
call
in
push
or
pop
mov
mov
mov
add
stos
push
add
adc
sti
or
cmp
inc
aas
adc
popf
lods
cli
popa
roll
les
add
idivl
cmp
cld
inc
rcrl
cmp
inc
push
fwait
imul
and
and
stos
arpl
push
aaa
jl
cmp
jge
sbb
sbb
pop
int3
stos
aam
repz
cli
in
jg
xor
ja
xor
push
xchg
jle
popl
xor
mov
lcall
inc
fsubs
outsl
movb
in
movsl
mov
pushl
add
enter
cli
mov
out
dec
jge
test
in
ja
sti
lods
mov
dec
mov
pop
cmp
or
add
mov
mov
dec
inc
jl
mov
xorb
js
mov
outsl
adc
arpl
and
repnz
hlt
sbb
xor
cld
adc
push
mov
pop
inc
and
xchg
fsubrl
mov
test
in
pop
adc
or
or
and
fcmovnu
add
and
rcrb
sbb
test
lahf
mov
mov
fildl
jge
lahf
dec
and
or
imul
outsb
hlt
scas
cmp
inc
sub
mov
dec
or
lea
out
fs
btc
adcb
inc
sub
pop
add
pop
inc
cmpsb
push
dec
mov
movsl
outsb
je
shrl
mov
lcall
add
and
push
push
or
push
mov
or
decl
roll
pusha
subb
xchg
out
das
xor
imul
ljmp
call
add
jno
test
add
lock
shlb
aaa
dec
insb
and
mov
mov
fsub
or
imul
icebp
in
add
orb
sbb
jo
xchg
lock
aas
out
mov
repz
and
cmc
mov
das
sbb
les
stc
sub
inc
call
lock
out
inc
jecxz
xor
stos
sar
adc
adc
adc
fsts
insl
mov
pop
inc
repz
or
je
movsb
xchg
gs
xor
mov
incl
cld
into
hlt
call
orl
mov
pop
xorb
cmp
sbb
jg
mov
or
lahf
lret
decl
les
fstl
stos
div
cmpsb
mov
pop
xchg
mov
shlb
popf
int3
add
cmp
clc
mov
xor
hlt
fs
jbe
test
push
mov
pop
testl
mov
and
je
xor
fdivrp
or
adc
pop
pushf
jge
cmp
adcb
sar
mov
call
je
cmp
mov
pandn
cmp
mov
pop
add
cmc
mov
jecxz
add
in
ljmp
inc
mov
mov
fistl
arpl
mov
ljmp
int3
test
mov
mov
pushf
or
shrb
movsl
sete
addr16
cmp
inc
cltd
mov
cmc
sahf
xor
sar
pop
add
popf
mov
test
movsl
mov
ljmp
sub
in
pop
cs
rcll
sti
dec
sub
popf
lods
push
dec
filds
sbb
inc
dec
es
lock
addr16
loopne
int3
pop
or
xchg
push
scas
add
cli
lock
dec
outsb
or
adc
jnp
mov
lock
mov
dec
es
inc
jle
xchg
fisubrs
cmpsb
or
xchg
es
lret
imul
add
xlat
pop
and
addr16
push
mov
cmp
and
or
add
out
xchg
dec
or
mov
lods
mov
and
xor
ret
cs
cmpsl
push
mov
jb
sub
pop
int
inc
inc
rolb
push
pop
ret
clc
dec
pop
jl
stc
pusha
or
add
pushf
pextrw
mov
jle
and
mov
daa
hlt
sbb
incb
test
mov
sub
lahf
sbb
ror
jmp
add
call
test
outsl
mov
xor
add
jmp
ljmp
sub
mov
jmp
sub
push
jge
sub
in
pushf
push
mov
jecxz
or
andb
dec
xchg
or
imul
inc
sahf
add
fcoml
push
ja
xchg
lea
push
add
pop
add
ficomps
pop
mov
mov
push
int3
pop
std
movsb
loope
jae
ljmp
test
dec
and
ror
inc
ljmp
xchg
out
sbb
push
mov
loop
int
mov
es
in
mov
xor
adc
jmp
std
arpl
xor
add
cmp
dec
push
mov
repnz
ret
iret
or
fstl
pop
xor
xor
stos
std
dec
mov
jmp
mov
ret
pop
in
push
movsl
push
imul
aam
les
cmpsl
lcall
push
mov
jmp
inc
cs
or
test
jbe
xchg
pop
scas
pop
out
add
and
jmp
es
sahf
jae
cmp
sti
pop
ret
push
rcll
fidivs
pop
ljmp
mov
cmp
jg
inc
push
lods
arpl
jbe
and
adc
inc
cwtl
movsl
fstpl
popf
nop
cs
int
jg
and
push
pop
clc
or
mov
jg
push
cs
and
or
loope
push
test
sbb
out
fwait
es
sub
outsl
mov
or
test
and
fcmovnu
adc
bound
dec
inc
push
loopne
inc
aad
sub
mov
mov
loope
xchg
data16
clc
cmp
pop
pop
mov
or
pop
mov
push
in
insl
sarl
mov
imul
loop
mov
add
xchg
in
add
and
inc
add
mov
das
shlb
sbb
mov
push
fs
or
inc
jecxz
les
andb
jmp
iret
dec
mov
testl
pusha
repz
les
inc
dec
nop
stc
mov
xor
ret
dec
insl
in
fcomp
jb
sbb
xchg
dec
repz
jle
jle
xor
lcall
loop
sbb
lods
lcall
inc
jecxz
sti
test
and
adc
add
fsubs
jae
dec
push
jmp
addb
ljmp
cld
sarl
test
sub
fsubr
test
mov
pop
incl
push
int
dec
lahf
in
inc
test
inc
in
imulb
pusha
pop
jb
xor
dec
dec
mov
aaa
call
imul
negb
xchg
lret
lea
mov
cld
add
jns
fsubrs
dec
into
xchg
and
ja
mov
push
fstl
enter
push
cmp
insb
push
mov
sub
jbe
xlat
movsl
push
shll
dec
jne
mov
ss
xor
notl
gs
sub
fwait
scas
in
in
pop
out
jb
or
jl
jmp
inc
mov
mov
jo
movsb
cs
cmp
jnp
mov
lods
lea
out
fbld
mov
lock
insb
iret
adc
and
imul
dec
jb
in
movsl
and
mov
sbb
and
sub
cmp
incl
xchg
les
dec
lds
das
jecxz
lea
out
cmp
loope
aam
call
adc
xchg
dec
or
stos
dec
mov
or
js
push
mov
sti
cmpsl
mov
or
jg
orb
sbb
cmc
dec
mov
das
xchg
xchg
popf
dec
imul
sub
in
mov
cmp
sti
cmp
je
push
adc
aad
js
pop
sub
dec
lock
js,pt
mulb
leave
mov
or
movsl
and
sub
test
cmp
fiaddl
mov
adc
scas
pop
fmuls
popl
cmpsb
mov
push
mov
sahf
test
dec
xchg
mov
call
dec
scas
sbb
nop
icebp
das
ljmp
xchg
call
mov
or
push
outsl
lret
pop
push
js
cmpsl
imulb
push
mov
lea
mov
addl
outsl
cld
inc
pop
xor
add
data16
lcall
mov
or
mov
std
testb
and
fdivr
sahf
jl
mov
notb
lahf
dec
add
lock
movsb
jg
or
mov
fnsave
sub
sbb
cltd
mov
fsubrs
sub
in
xor
scas
mov
and
or
test
lret
dec
or
test
mov
daa
lcall
mov
popw
hlt
jg
pop
push
out
repz
cwtl
and
lahf
dec
xor
dec
lods
popa
add
push
pop
ss
xlat
push
test
sbb
mov
in
out
das
fstp
loopne
clc
inc
jle
sbbl
shll
clc
fwait
cmpb
icebp
and
sar
adc
jo
jmp
fucomi
sarl
xor
mov
ljmp
adc
lock
scas
clc
xchg
loopne
or
xchg
xor
in
scas
int3
dec
push
mov
mov
pop
leave
mov
adc
ss
stos
jg
ss
dec
mov
adc
add
push
arpl
pop
inc
mov
dec
rcll
stos
in
mov
inc
sub
das
add
mov
cmp
xor
cmovb
dec
add
ret
push
or
push
xor
add
roll
cmp
adc
int
in
xor
xchg
rorb
inc
push
cmp
fadd
xor
orb
add
jno
push
jne
gs
imull
sub
xorb
subb
adc
add
adc
stos
mov
adc
mov
sar
xor
sbbb
out
ja
in
in
jmp
push
push
xchg
or
dec
lock
cwtl
jl
adc
adc
inc
xor
push
jne
mov
and
jo
xchg
arpl
in
test
jo
adc
in
ds
push
xchg
or
jo
xchg
fiadds
xchg
xchg
add
dec
push
and
xchg
or
push
mov
cwtl
inc
shll
mov
sub
jno
aaa
xor
jp
pop
clc
xor
add
adc
and
mov
cmp
adc
or
cmpsl
dec
outsl
jns
adc
ret
div
imul
mov
adcb
pop
int3
sbb
out
push
enter
jbe
adc
and
and
xor
nop
movsb
or
and
inc
mov
int3
inc
mov
cmp
pushfw
scas
or
in
and
movsb
enter
rcrl
into
clc
dec
mov
mov
in
out
pop
rol
enter
js
fadds
and
icebp
test
pusha
add
inc
jne
xchg
nop
imul
filds
test
add
pushf
sahf
xchg
lret
pusha
push
sbb
xor
loop
or
aas
pop
adc
sub
mov
les
call
cmp
int3
inc
loope
add
push
out
enter
push
sbb
ret
and
mov
or
push
inc
push
push
sub
pop
jae
test
jbe
or
stc
add
movsb
cmp
jmp
daa
mov
fwait
add
adc
cld
pop
jo
mov
and
je
mov
rol
fadds
adc
sbb
cmc
fcompl
sub
or
cs
pop
inc
xor
mov
roll
xchg
inc
mov
add
int3
stc
stos
mov
or
push
outsl
iret
rol
sub
add
rclb
sbb
testl
je
push
add
push
sbb
push
cmc
int
shrb
sbb
pop
enter
cmp
sti
or
je
xchg
nop
xchg
imul
lods
loopne
cmc
push
aam
sbb
mov
push
in
push
push
sbb
mov
sbb
mov
add
sbb
add
lods
pop
dec
lds
cwtl
shrb
or
ret
call
sub
mov
mov
leave
add
ljmp
mov
addr16
pop
outsb
loope
mov
cmpsl
adc
scas
push
insl
pusha
test
sahf
ds
jne
jg
cmpsb
sbb
cmc
xor
mov
or
and
mov
cmc
mov
jnp
or
push
mov
fiadds
mov
call
das
sbb
jae
orl
imul
out
filds
cmc
test
xchg
mov
push
xchg
xchg
xchg
or
lods
loopne
pop
push
aaa
rcrl
shr
pop
addl
popf
les
xchg
mov
pop
and
jge
mov
mov
popa
clc
mov
loope
pop
mov
iret
sub
das
inc
xchg
pop
mov
push
add
repnz
mov
clc
inc
jnp
add
add
test
loope
sbb
inc
rcrl
call
jnp
test
pusha
icebp
or
daa
mov
sbb
lret
les
sub
dec
adc
test
mov
mulb
pop
loope
and
das
jp
les
or
fmuls
cld
jbe
push
jno
or
bound
das
jns
cmc
and
inc
or
insl
daa
dec
and
mov
cmp
or
inc
hlt
sub
lock
out
les
mov
cs
push
data16
in
ljmp
jmp
sub
jmp
and
mov
or
outsl
push
cmc
fwait
xor
mov
or
dec
mov
bound
popa
iret
xor
dec
dec
and
aaa
xor
add
mov
xchg
mov
cltd
jnp
fildll
adc
xor
in
aaa
push
add
ret
movsb
lds
mov
lock
cld
iret
fwait
sbb
std
aad
push
jle
pop
or
inc
lea
cli
xor
ret
mulb
sbb
inc
pop
mov
sbb
and
mov
adc
shlb
pop
dec
pop
pop
mov
iret
imulb
fs
or
lret
add
sbbl
arpl
outsl
divb
jl
inc
loope
or
inc
and
rcl
int
outsl
cmc
mov
or
mov
mov
sarl
cmp
push
int
mov
xchg
add
arpl
out
mov
mov
push
fistpl
das
cwtl
cli
pop
jno
adc
pop
xor
push
test
mov
aas
add
shlb
add
aad
jge
xor
fisttpl
in
sti
sub
fwait
shll
add
daa
sbb
pop
loopne
add
es
lahf
movsb
sub
lahf
dec
push
fistpl
pushf
xor
dec
fdivrl
aam
dec
dec
rorb
add
add
xor
add
insl
aam
inc
adc
sbb
push
lods
mov
xchg
pushf
popa
and
gs
cld
insb
inc
add
sar
out
cwtl
push
sbb
adc
in
dec
mov
jne
lcall
loopne
arpl
cmp
mov
add
mov
cmp
cmp
add
add
add
inc
addl
cmp
push
leave
std
inc
rcl
outsl
mov
pop
pop
add
mov
and
repnz
xchg
push
inc
inc
ja
xchg
mov
mov
adc
adc
sbb
in
xchg
je
cmc
and
iret
fdivs
pop
leave
xor
fadd
and
add
call
les
test
inc
test
ds
jne
xchg
bound
or
in
enter
in
ret
arpl
mov
and
rolb
mov
aad
and
cmp
rcr
xlat
mov
lock
jbe
push
inc
lahf
sub
pushf
test
xchg
lods
bound
inc
dec
aad
pop
cmp
xor
test
aaa
test
and
or
test
inc
and
test
out
xchg
dec
jecxz
mov
cs
xchg
or
push
push
ja
mov
repz
jge
inc
into
cmp
les
movsb
jp
sub
mov
notl
dec
mov
push
roll
inc
in
adc
or
sahf
or
les
data16
mov
sti
push
dec
push
push
in
aad
js
rorl
out
mov
add
mov
aam
loopne
inc
ret
sbb
jp
test
dec
xchg
push
rorb
shrb
lods
adc
cmp
fisttpl
xchg
or
sub
mov
sbb
jge
or
xchg
les
popa
aad
std
inc
mov
popa
int
and
xor
mov
scas
xor
ret
push
rolb
jne
rclb
cmp
xor
xchg
cwtl
pop
dec
push
rcr
mov
push
and
xor
inc
mov
xchg
and
jo
sbb
adc
or
mov
push
cmc
pop
adc
push
pop
lcall
mov
outsb
xor
test
sbb
int3
and
pop
in
sub
sbb
movl
psubusw
adc
jl
jl
xor
cwtl
sub
add
shlb
and
inc
loope
in
mov
fisttpl
add
jmp
jp
push
dec
shrb
inc
mov
lds
int
fisttpl
xor
aad
faddl
sbbb
repz
sbb
addl
inc
or
inc
add
stos
scas
pop
mov
negl
inc
jge
xchg
in
nop
cmpl
test
mov
xchg
inc
daa
pop
aad
clc
test
push
add
mov
int3
mov
shlb
dec
sub
pop
mov
pop
iret
jne
or
cmp
mov
jae
mov
adc
test
add
sbb
hlt
dec
test
loopne
mov
or
mov
test
sub
cmp
mov
adc
les
ljmp
mov
add
push
pop
add
sbbb
cmp
sbb
sbb
pop
rclb
mov
add
aaa
mov
add
test
pushf
jae
add
mov
and
insb
outsl
dec
push
pop
cmpsb
loopne
rol
or
jg
mov
movsl
inc
int
into
aad
mov
inc
movsb
vmovdqu
or
fistpll
jae
push
push
and
mov
lock
scas
outsl
jmp
hlt
xchg
sub
mov
subb
mov
add
into
mov
call
shrl
sbb
xor
dec
in
cld
decl
imulb
xlat
lock
push
add
sbbl
pushl
sub
xchg
xor
xchg
inc
mov
push
es
cmp
xorb
jmp
jmp
push
rcrb
ss
cli
add
out
adc
imul
addb
fisttpll
adc
cli
outsb
loop
add
rclb
cmp
mov
aaa
cmpsl
mov
or
lcall
cmp
shrl
push
outsl
ffreep
scas
or
ret
mov
mov
inc
es
outsl
dec
or
add
push
negb
dec
aas
bound
jns
jne
xchg
test
adc
pop
sub
popf
or
sub
adc
inc
adc
mov
sar
adc
lods
and
loopne
cmp
pop
ljmp
mov
adc
cmp
clc
outsl
fistl
cmp
xor
dec
inc
jne
movsl
and
sahf
or
sbb
mov
movsl
and
popa
dec
mov
decb
pushf
ret
inc
mov
orl
rcl
cwtl
xchg
divl
sbb
out
in
add
mov
rcrb
pop
test
pop
inc
add
insl
xor
shlb
dec
push
fsubl
mov
pop
aaa
sbb
mov
fstps
xchg
out
cmp
out
push
xor
add
mov
adcb
dec
xor
cltd
xlat
mov
adcb
adc
cli
and
fbld
mov
push
out
sbb
push
pop
or
sub
stos
fadds
jg
aaa
mov
push
inc
stc
stos
dec
loopne
push
xor
sub
insb
add
repnz
call
pop
mov
mov
ljmp
pop
rcrl
inc
mov
rol
mov
push
push
cs
adc
cmpb
or
sub
out
repnz
sbb
addr16
paddd
rcrb
rcr
ret
add
call
inc
nop
imul
loope
pop
mov
dec
shr
xchg
ljmp
dec
sub
mov
faddp
add
dec
mov
fidivrl
mov
pop
aas
je
mov
mov
orl
sub
add
loope
adc
pop
hlt
lea
cmp
mov
sbb
push
testb
jmp
lea
add
sbb
ja
jb
and
ds
orb
xor
and
adc
jo
icebp
pop
dec
shlb
icebp
lret
xor
fisttpll
push
aad
adc
pop
popa
or
sub
jge
sub
cmpsl
push
mov
add
sbb
and
movsb
dec
jp
mov
outsl
sub
sbb
xchg
mov
or
insb
js
lds
sbb
addr16
rcl
pop
xor
movb
jmp
xchg
cmp
xchg
shl
bnd
jp
cli
dec
andb
sbb
mov
push
sbb
push
and
mov
mov
loope
or
add
fildl
inc
adc
in
inc
cmc
xchg
out
bound
dec
add
test
inc
mov
jl
test
mov
or
ja
test
in
jl
and
inc
popa
nop
stc
and
sbb
fnstsw
and
xor
push
in
push
adc
je
mov
mov
lret
pop
jmp
pop
mov
or
cmpsl
and
movsb
fadd
xchg
in
add
mov
adc
jp
or
icebp
call
rol
sub
jbe
add
fidivs
xchg
mov
or
jg
cmp
push
ret
adcb
mov
in
cmp
cli
in
push
iret
push
cltd
enter
mov
xor
pop
out
rcrb
inc
push
movsl
cli
call
xchg
pop
add
pop
cmp
rcrb
add
add
pusha
clc
sub
mov
add
aaa
pop
jl
orb
mov
inc
pop
cmp
add
add
mov
sub
sbb
shll
adc
popa
jl
adc
scas
add
ljmp
xor
or
outsl
call
roll
push
add
imul
adcb
sti
push
mov
jg
pop
jnp
iret
movsl
sbbb
inc
inc
cwtl
push
jle,pt
je
push
insl
push
dec
js
inc
push
aas
ljmp
ja
inc
repz
rorb
or
pop
or
cmp
dec
outsl
jo
fists
aas
push
cmpsl
inc
mov
inc
add
loope
fbld
call
cmp
push
xchg
add
add
fistpl
fcomps
inc
or
cwtl
pushaw
jg
mov
fildl
loope
or
pop
icebp
mov
ret
mov
add
jmp
jge
add
cli
test
or
adc
dec
and
mov
or
sub
xchg
popa
jo
pushf
xchg
sub
fsts
js
into
pusha
jle
clc
pop
pop
sbb
xor
sahf
jp
ja
ret
and
sbb
aad
mov
fsts
pop
incl
mov
scas
pop
call
push
test
push
ds
push
jnp
sub
js
nop
inc
and
pop
adc
jle
jns
xchg
ffreep
insl
testl
pop
adc
ljmp
mov
add
repz
pop
dec
rolb
jle
out
ja
inc
adc
jecxz
outsl
icebp
jbe
ljmp
xor
imul
add
dec
add
mov
arpl
inc
sub
jg
decl
push
or
cld
outsl
adc
into
add
lcall
dec
ret
outsl
enter
push
and
or
mov
imull
cmp
jns
psubb
movsb
mov
push
xchg
lods
push
ljmp
in
pop
mov
and
sbb
fcoml
test
roll
xchg
aaa
incl
add
xchg
xchg
add
push
jge
sbb
cld
push
mov
out
jle
fldt
cmp
pop
mov
lcall
sahf
subb
call
pop
xlat
sbb
mov
sbb
xchg
ret
push
xlat
mov
xlat
add
xchg
sub
push
sub
or
clc
or
mov
sahf
xchg
mov
pop
xchg
sbb
inc
or
cmp
inc
mov
dec
sub
test
xor
add
das
push
pusha
test
aaa
call
pop
test
jmp
and
add
push
xchg
mov
push
fimuls
dec
mov
add
add
mov
popf
aad
adc
repnz
dec
test
pop
outsl
popf
hlt
pop
fcoms
mov
dec
lods
enter
outsb
pop
mov
sbb
movl
pop
sub
arpl
pop
fs
adc
adc
scas
push
cmp
cmp
fnstsw
dec
or
cmp
dec
xchg
sbb
jmp
lds
clc
fistl
mov
or
rorb
xor
jno
mov
xchg
inc
mov
js
cli
in
hlt
push
xlat
in
xor
inc
dec
neg
inc
add
addb
js
aam
inc
cmp
int3
adcb
sub
push
insl
mov
clc
jb
mov
jno
pop
aaa
mov
shll
mov
mov
pop
xlat
mov
ss
sarl
mov
mov
sub
push
lods
aas
mov
push
idiv
jo
cld
inc
sbb
mov
adc
adc
clc
cmp
mov
sbb
xchg
or
mov
pop
inc
xchg
dec
add
or
sti
insl
inc
pusha
inc
mov
out
mov
mov
loopne
into
shll
inc
aad
and
js
mov
into
or
scas
mov
sbb
adc
jae
fwait
subb
inc
das
mov
addb
inc
add
lock
xor
or
add
addr16
sub
inc
ds
insb
test
es
or
std
loope
mov
cmp
lods
fs
add
adc
xchg
pop
test
js
jb
add
add
adc
inc
negb
inc
adc
sbb
xchg
add
iret
push
add
xor
add
dec
cmp
dec
sbb
adcb
pusha
orb
mov
xchg
jbe
data16
loopne
aad
xchg
cmpsl
add
sub
xor
and
jnp
dec
dec
adc
dec
add
jb
into
cwtl
fbstp
popw
mul
add
inc
adc
pusha
jbe
push
add
add
or
adc
in
iret
xor
lods
or
sbb
js
repnz
and
cmp
outsl
je
dec
xor
cld
testb
push
jae
xor
pop
and
jo
adc
adc
jns
sub
mov
sub
dec
andl
lcall
adc
movsb
or
ret
xor
enter
mov
pop
adc
adc
negb
testb
mov
inc
lret
pop
add
dec
insl
mov
dec
and
pop
ret
pop
jle
shrb
mov
inc
push
xor
je
addb
push
pop
or
pop
inc
pop
hlt
or
in
mov
mov
sub
arpl
or
mov
cmc
pop
dec
inc
test
out
or
jp
andl
xor
mov
dec
lods
jle
addl
mov
adc
pop
or
fildl
jl
das
data16
sub
jp
jp
mov
call
jbe
daa
sbb
xchg
jp
jle
xchg
ret
sub
mov
es
rolb
mov
stc
fdivl
add
add
clc
int
enter
add
xchg
mov
pop
add
dec
cmp
outsl
pop
mov
ss
push
inc
cmp
leave
or
inc
pop
adc
std
xor
test
pop
pop
xor
cmovo
push
shlb
mov
add
mov
icebp
pop
xchg
pop
xchg
sbb
aas
push
sub
ffree
jnp
int3
ds
adc
lds
dec
push
add
call
movsl
mov
cmp
or
or
add
fistl
mov
pop
lods
xchg
push
mov
xor
push
sti
push
jecxz
aam
pop
adc
sbb
mov
xchg
mov
cmp
push
sbb
jg
inc
icebp
movsl
xchg
sbb
aam
lret
incl
insb
xor
lock
xchg
in
cs
push
adc
movsl
loopne
insl
stos
cmpl
and
loopne
push
or
xchg
or
insl
aas
sti
or
cwtl
add
and
push
inc
lock
punpckhdq
cltd
iret
add
inc
adc
int3
adc
sub
and
daa
or
mov
dec
add
leave
testb
sub
addr16
test
mov
mov
cmpsb
imul
adc
push
push
or
and
dec
mov
data16
lcall
lock
in
add
sbb
sbb
loop
adc
call
mov
pop
fdiv
cmp
loop
aam
addb
in
mov
jle
dec
add
sahf
lds
sbb
push
in
in
adc
cmp
outsl
push
daa
add
add
cmp
loopne,pn
in
dec
push
adc
and
push
inc
scas
jno
test
xchg
jnp
lcall
aam
call
cmpb
in
mov
xor
and
dec
jae
dec
cltd
adc
rep
iret
andb
test
pop
inc
iret
fwait
or
add
in
ficomps
add
ljmp
xchg
add
sbb
or
or
or
in
fldt
inc
popa
in
adc
and
cmp
rorb
fistl
mov
dec
aam
aaa
and
loope
neg
cld
and
cwtl
adc
or
push
mov
push
xor
mov
in
cld
cmp
mov
and
adc
mov
rolb
test
mov
das
les
in
shll
push
adc
addr16
or
dec
push
and
and
xchg
icebp
mov
leave
ret
push
inc
sbb
pop
test
mov
sbbl
leave
lds
inc
push
adc
inc
add
dec
dec
stos
bound
pop
xor
adc
ret
dec
mov
cmc
mov
inc
mov
xor
cwtl
xchg
sub
lret
std
and
jo
mov
inc
dec
das
movsl
ljmp
fisubrs
jno
shrb
add
mov
push
inc
adcb
jmp
ret
add
dec
nop
or
inc
shll
lods
inc
or
xchg
inc
add
cmp
jb
insl
fstpl
or
cli
imul
mov
add
das
cmp
outsl
std
ljmp
sbb
sbb
je
push
xor
call
fildll
add
orb
mov
sahf
sahf
notb
call
adc
mov
add
aad
mov
test
rcrb
flds
imul
lret
cmp
mov
push
sbb
pop
pop
call
mov
lock
pop
call
je
dec
xchg
sbb
push
xchg
inc
lretw
cmp
dec
mov
jnp
adc
lcall
mov
pop
cli
dec
push
or
aaa
pop
fwait
sbb
mov
lock
fsts
lahf
js
mov
aad
add
fs
jg
testb
push
xor
je
stc
xchg
sbb
nop
cmpsb
mov
add
in
xchg
cld
ficompl
les
mov
cmp
jle
lcall
xor
adc
mov
lea
sbb
mov
cli
fimull
sbb
jecxz
xchg
mov
cmp
sbb
fdivrl
jb
lret
and
jecxz
pop
clc
add
pop
add
test
mov
jo
add
mov
fstl
adc
push
add
mov
push
imul
sub
xor
lock
jg
add
je
xor
aad
addl
outsl
mov
jns
jg
fbld
add
stos
and
xchg
shrl
pusha
aaa
sbb
sbb
dec
push
xor
int3
mov
lock
and
cltd
inc
filds
dec
adc
in
clc
das
and
lret
add
sbb
adc
or
inc
mov
inc
jecxz
adc
mov
add
movsl
cmp
gs
mov
nop
push
push
pusha
fstpt
cwtl
xor
mov
pop
pop
mov
sbb
loopne
outsl
sub
aam
fwait
sahf
lds
jo
sbbb
out
inc
inc
jmp
sub
lds
sbb
xchg
mov
imul
pusha
adc
adc
fstpt
jns
scas
stc
movsl
bound
test
push
mov
jg
push
pop
icebp
sbb
mov
or
stos
push
leave
adc
jbe
or
fwait
and
outsb
clc
ss
mov
std
arpl
mov
pop
pop
or
add
jne,pn
loopne
mov
ss
jbe
jl
mov
mov
push
iret
adc
xchg
cmp
nop
stc
aam
sbb
mov
push
mov
andb
add
adc
fidivrs
dec
std
push
pop
sbb
and
rclb
fstpl
dec
mov
hlt
ljmp
jne
mov
inc
std
scas
sub
aad
popf
jnp
and
xchg
addr16
mov
test
jne
cwtl
sbbb
pusha
popa
xor
jg
mov
pop
fistps
or
jmp
lock
stos
cld
pop
mov
jae
xchg
jle
adc
mov
int3
dec
out
insl
pop
jmp
dec
and
pop
push
mov
fidivs
or
popf
jns
outsl
loope
test
insb
pop
add
push
xor
lea
jg
mov
push
sub
and
subb
jmp
je
pop
and
xor
popf
cs
jae
ficomps
decl
push
jns
aaa
rolb
fisttpl
mov
mov
fimuls
pop
fidivs
adcb
addb
je
in
ljmp
inc
inc
adc
or
mov
add
xor
sbb
mov
in
fnsave
fcomps
scas
pop
jmp
insl
dec
pop
loope
inc
add
jbe
aam
stos
xchg
cmp
int3
scas
mov
or
dec
push
jne
or
fdivrp
das
add
mov
or
loopne
add
inc
lods
push
sbb
mov
insl
std
or
dec
add
imul
incl
sbb
pop
or
loop
test
das
lock
lods
jmp
cltd
subb
loopne
xchg
rcll
enter
add
iret
mov
in
mov
push
mov
and
cld
xchg
dec
into
cltd
in
test
push
stos
shrb
adc
mov
jnp
inc
sub
mov
fs
decl
jg
pop
xchg
filds
hlt
clc
outsl
add
sub
xor
addb
add
nop
test
lock
pop
inc
sbb
inc
ss
call
mov
rcrb
jae
and
shll
cmpsb
jo
push
addl
imul
pop
cwtl
ret
insl
mov
fs
sub
jne
xchg
push
sub
stc
std
cmpsb
incl
out
lret
xchg
mov
je,pn
ja
add
or
mov
mov
pop
ds
add
mov
dec
or
test
scas
call
sahf
pop
adc
adc
adc
inc
lock
loope
lds
pop
jp
outsl
add
dec
lods
loop
jb
and
imull
outsb
xor
mov
int
adc
inc
jmp
data16
fmuls
je
je
push
push
mov
inc
out
push
bound
push
aad
subl
adc
jg
pop
jmp
sar
les
pusha
pop
aas
fsubl
push
stos
and
add
sahf
mov
xorb
jb
scas
test
je
stc
test
popa
mov
ja
movsl
xor
sbb
jno
fs
lock
out
clc
lock
incl
nop
imul
rcrl
dec
fldt
xlat
pop
mov
push
stos
xchg
cwtl
add
sbb
ja
std
mov
xchg
and
pop
outsl
outsl
fidivrl
and
inc
inc
daa
nop
sub
add
shl
div
cmp
mov
test
or
sbb
js
dec
test
mov
movsb
cmp
insl
xchg
jnp
imul
in
fildl
std
rcll
bound
mov
pop
mov
sub
mov
jne
push
pop
loope
xor
or
ljmp
rcll
aas
or
mov
lock
insl
fisttps
adc
mov
into
inc
or
inc
inc
inc
js
repnz
aaa
push
or
test
and
or
push
mov
mov
ret
notb
mov
adc
bound
cmpsb
int
adcb
pop
js
or
and
push
sbb
xchg
loopne
lea
sbb
mov
mov
mov
mov
ds
xchg
andb
fists
psubw
mov
insl
xchg
sub
arpl
pop
mov
test
xor
xchg
cwtl
rorb
dec
subl
bound
add
out
dec
push
aad
add
pusha
ljmp
test
add
and
leave
mov
pop
and
dec
adc
and
jne
shrb
ja
hlt
dec
rorb
fcomps
pcmpgtd
fcoml
sbb
test
push
mov
or
call
sub
xor
sbb
or
mov
push
fld
and
cmc
dec
sbb
test
stos
xchg
or
mov
sub
xor
mov
push
push
icebp
add
fistpll
mov
sbb
aas
int3
push
add
sub
stos
push
les
cmp
dec
pop
add
les
xlat
adc
adc
add
jne
neg
add
daa
pop
enter
jmp
sub
movsb
pusha
pop
inc
pop
cwtl
add
aad
lahf
add
ret
sbb
push
xor
lods
ljmp
adc
xorb
jb
push
sbb
movsb
push
xchg
push
inc
aas
call
call
and
fadds
pop
sbb
lahf
add
cmp
sbb
decb
xor
dec
dec
int3
popf
push
test
add
push
lea
pop
pusha
adc
mov
xor
sbb
jnp
icebp
loopne
adc
xchg
or
add
or
push
xchg
ja
xchg
add
stc
inc
cmp
pop
push
clc
les
xchg
bound
dec
and
sub
inc
sbb
cwtl
icebp
add
shlb
mov
cmp
sbb
jne
lcall
dec
test
test
add
ret
inc
lcall
push
movsb
add
fs
push
sbb
sbbl
add
xor
dec
inc
int
mov
lock
xchg
add
xchg
fsubrl
test
pop
xchg
adc
dec
sub
or
xchg
test
repz
xchg
adc
fwait
iret
pushf
inc
adc
cld
xor
icebp
add
rcll
or
add
add
scas
shrb
pusha
fstl
decl
push
push
dec
stos
inc
sbb
adc
push
dec
in
sbb
ss
adc
loope
xor
or
pop
xor
hlt
ss
adc
or
andb
mov
lahf
cmp
mov
outsb
insl
jb
cltd
xor
out
xor
and
cmc
jl
xchg
sub
clc
mov
and
pop
sub
or
shlb
addb
mov
ja
jge
pop
popf
or
add
xor
dec
xchg
xor
fnstenv
or
ja
rorb
push
inc
inc
and
or
lock
insl
scas
mov
jle
inc
push
inc
lcall
inc
dec
jg
xor
xchg
out
fwait
xor
adc
jmp
or
mov
adc
jnp
and
fs
in
cmpsb
fisttps
loop
in
fsubl
shrb
mov
fbld
mov
sub
incl
jo
jmp
rolb
dec
sbb
add
xchg
inc
or
mov
rclb
or
inc
stos
add
pop
jbe
aam
add
test
pop
imul
xchg
ja
test
sti
pushl
adc
and
dec
hlt
xlat
out
xor
pop
lds
cmc
cmc
sahf
push
ret
cltd
and
pop
add
in
xor
stc
add
cmp
jne
push
adc
roll
mov
jnp
out
fbld
xor
cli
incl
xor
and
xchg
xor
and
jnp
sbb
sub
rorb
sti
sahf
push
sub
mov
cmc
push
fdivr
jg
xor
mov
push
icebp
sbb
and
mov
roll
fldenv
repz
into
or
les
xor
mov
sbb
imul
loop
je
outsl
jmp
jbe
dec
pusha
fsubrl
mov
xor
push
xchg
aam
aas
dec
adc
subl
sbbb
pop
leave
sbb
shl
pop
or
mov
xchg
sub
es
xor
dec
xchg
loop
in
inc
js
cmp
cmp
aas
mov
int
arpl
fisubrs
xor
pop
push
cmp
xor
je
mov
add
add
insb
or
push
call
inc
xor
inc
shlb
cwtl
adc
mov
movsb
movsl
or
cld
pop
out
adc
and
mov
or
fiadds
pop
mov
hlt
xor
sahf
sbb
push
sub
inc
adc
push
mov
mov
ret
loopne
fwait
push
push
add
push
test
scas
data16
mov
mov
out
push
stos
test
in
inc
aam
xor
pop
xor
dec
and
in
or
shll
push
lock
loop
push
push
pop
adcb
cmp
mov
fiadds
dec
xchg
inc
aam
ljmp
mov
cmpsb
mov
imul
add
mov
fimuls
add
cs
mov
add
xor
cmc
insl
cmp
test
loop
push
inc
push
add
sub
int3
push
xorb
nop
cmp
or
dec
xor
in
lret
or
and
adcb
jmp
xchg
lret
sub
add
and
lods
adc
sub
or
and
and
and
or
ja
xchg
sbbb
sbb
pusha
or
or
lea
incb
xchg
pop
pop
adc
negl
jno
pop
fiadds
inc
push
cmp
ja
and
popa
lock
pop
lret
and
js
inc
adc
shr
mov
jae
incl
inc
inc
shlb
int
jno
or
js
out
mov
sub
int
lds
orb
hlt
jmp
mov
push
push
aas
ret
cltd
addb
les
add
adc
in
or
sbb
cli
nop
pop
jmp
push
push
testl
es
mov
call
shlb
add
test
add
das
int3
call
add
push
cmp
or
ret
sub
and
xor
mov
cmp
data16
in
dec
mov
movsb
pop
pop
mov
cli
or
and
rol
negl
lods
mov
lcall
in
pop
or
test
shlb
arpl
sar
push
in
inc
jl
mov
pop
pop
add
sbb
dec
inc
imul
mov
pop
adc
fcomps
mov
mov
or
pop
lods
xchg
sar
push
movsl
inc
dec
nop
jo
repz
and
pop
push
xorb
add
dec
inc
inc
and
outsl
push
xor
andb
add
sgdtl
jle
addl
notl
in
mov
mov
mov
or
mov
add
pop
xchg
and
stos
outsl
lock
mov
mov
in
sbb
cmpsb
and
cli
push
lcall
decb
loope
sub
or
add
mov
sti
and
js
jns
pushl
inc
std
cmp
mov
test
add
pop
and
adc
into
test
pop
call
or
add
push
xchg
cwtl
add
cmp
adc
add
dec
test
fdivrs
mov
pop
ficoms
pushl
add
dec
into
arpl
cmc
sbb
dec
mov
outsb
pop
and
mov
stc
jns
pop
sbb
fnstsw
in
xchg
mov
cmp
add
jno
lahf
cmp
sub
cs
test
cld
dec
in
nop
push
or
jle
sbb
movsb
and
xchg
adc
adc
call
cwtl
incl
add
cmpsl
mov
sti
push
or
cld
push
adc
xchg
aaa
addb
lahf
fwait
jl
lret
and
cmpsb
dec
jecxz
jb
out
push
mov
push
fcmovne
cmp
pop
mov
stos
adc
pop
sbb
dec
lods
outsl
in
mov
bound
push
mov
push
sbb
icebp
enter
pop
aaa
decl
pop
clc
sbb
cmpsb
pop
js
push
inc
mov
or
push
fldl
xor
test
testb
jbe
inc
lock
stos
adc
cmc
mov
mov
push
movsl
jmp
mov
or
or
jp
or
mov
test
mov
adc
dec
in
xchg
adc
and
sub
neg
sbb
nop
dec
mov
pop
incl
add
push
push
push
push
lods
add
hlt
add
mov
mov
inc
or
adc
data16
ret
jmp
fisttps
jecxz
push
xor
or
push
std
test
out
push
std
push
outsb
inc
dec
mov
mov
cli
push
je
push
push
sub
add
inc
adc
jg
icebp
and
cwtl
dec
and
and
xor
loope
lds
retw
jnp
scas
sub
out
sub
inc
shlb
loopne
add
jg
push
in
xor
and
outsb
inc
mov
add
mov
sti
out
lcall
leave
insl
mov
push
jno
push
cmpb
aad
adc
pop
push
aas
js
add
mov
outsl
push
lea
dec
dec
stc
cmp
add
enter
mov
cwtl
add
mov
xchg
in
inc
sbb
outsb
mov
ss
in
scas
ja
or
mov
icebp
incl
jle
bound
add
loopne
dec
jle
mov
aad
dec
cmpsl
add
sbb
addb
and
pop
jmp
jmp
dec
int
add
fidivrl
jmp
fucomi
dec
dec
mov
cld
push
cmc
sbb
ljmp
or
xor
inc
repz
xchg
lds
xor
xchg
dec
or
pop
adc
decl
sub
add
xor
hlt
imul
decl
or
mov
sahf
test
das
lds
fs
imul
adcl
adc
addr16
mov
cmp
stc
sub
mov
pushf
pop
scas
add
and
subb
cs
std
mov
notl
pop
popa
in
shll
mov
lods
incl
roll
pop
xor
into
xchg
lods
fisttpll
outsl
push
mov
aas
push
jo
cmp
outsl
in
fbstp
mov
test
pop
inc
and
scas
pop
lcall
fildl
push
cltd
sub
push
dec
or
xchg
add
outsb
scas
sub
dec
inc
out
inc
stos
aaa
rol
push
mov
dec
jne
in
shl
pop
push
xor
push
lods
addb
mov
out
stos
clc
and
or
lret
loope
in
addr16
xor
xchg
outsl
lea
jnp
cwtl
loop
fimuls
lds
lret
pop
push
pop
adc
rolb
pushl
lret
mov
add
repnz
dec
sbb
fmull
cli
test
test
jmp
cs
enter
xor
outsl
inc
dec
mov
rcll
mov
je
std
mov
xchg
movsb
push
iret
add
cs
mov
push
repnz
dec
stos
dec
out
jecxz
fisubrl
ret
es
gs
mov
fs
mov
push
clc
lods
inc
out
push
sub
mov
test
adc
mov
and
dec
xor
jnp
es
pop
pop
mov
lret
insb
mov
insl
int
push
add
mov
out
add
adc
pop
pop
fisubrl
push
and
jb
inc
jnp
push
aam
mov
mov
out
xlat
mov
gs
jle
sub
pop
loopne
adc
rclb
sahf
and
and
xlat
insl
inc
pop
imull
xchg
sub
xor
pop
sti
mov
mov
inc
js
mov
mov
jmp
mov
ds
out
push
lock
cld
aam
xchg
or
and
in
int
aas
adc
lods
into
push
fisubrs
xlat
cmpsb
pop
push
mov
jne
mov
stc
mov
sub
subl
mov
adc
pop
stos
adc
sbb
in
or
shlb
js
add
adc
or
add
and
aam
sbbb
xor
add
or
adc
mov
out
push
fidivl
jge
js
pop
daa
loopne
pop
aam
dec
xor
je
fistpl
dec
push
jno
xor
sbb
pop
repnz
inc
fiaddl
in
call
sub
add
call
je
add
loope
adc
push
test
add
inc
cmp
mull
and
hlt
push
cmp
add
or
xchg
mov
pop
hlt
jnp
mov
jg
bnd
add
jge
push
rolb
clc
repnz
mov
dec
xchg
and
mov
pop
adc
sub
cmp
adc
js
les
xchg
nopl
or
aam
in
sbb
pop
xchg
add
inc
or
adc
add
sub
stos
shr
mov
push
or
stc
test
sub
hlt
scas
test
mov
mov
xor
push
mov
aaa
sbb
or
repz
outsl
test
in
push
and
push
adc
bound
xchg
mov
sti
jnp
pop
xchg
mov
aad
inc
cld
inc
xor
mov
and
lret
icebp
adc
mov
add
mov
popf
mov
mov
jo
aad
aaa
add
push
iret
jo
add
push
nop
cli
outsl
mov
pop
ret
into
cmpsl
sub
or
and
cmp
or
add
mov
and
sbb
push
dec
mov
in
and
or
push
roll
shlb
subl
ret
jge
lock
pusha
lock
or
aam
or
popa
cmp
sahf
inc
push
and
adc
pop
popf
add
push
test
or
repz
addl
xor
out
bound
dec
popa
and
adc
add
fdivr
ret
pop
mov
xorb
and
sub
xor
inc
mov
filds
lds
push
sub
ret
and
and
adc
ljmp
push
jecxz
movsb
rolb
dec
or
fmulp
sbbb
mov
push
and
mov
xchg
adc
dec
movsl
stc
aam
rolb
and
loopne
cmp
out
frstor
sbb
mov
jno
lea
lds
add
cmpsl
pop
pusha
mov
popa
sbb
out
jl
es
add
jp
addl
sub
add
inc
enter
inc
mov
or
or
pop
mov
out
les
pop
inc
lcall
adc
push
negb
lods
int
or
fisttps
sbb
xchg
xchg
add
shlb
rcrb
pop
inc
call
mov
push
xchg
sahf
imul
leave
mov
incl
das
mov
xor
or
adc
jecxz
test
outsb
aam
mov
fmuls
fsts
pop
and
adc
mov
or
loop
or
sub
xorl
jo
jne
or
adc
rcrb
movsl
aam
shll
enter
outsl
call
mov
add
mov
in
mov
jne
cwtl
std
imul
daa
inc
xor
int
mov
adc
pop
or
cmp
mov
dec
xchg
sub
sbb
inc
mov
ficompl
fldt
xchg
sti
inc
mov
and
das
add
loopne
movsl
mov
in
jmp
dec
push
adc
inc
lods
jmp
cmp
jmp
stc
xchg
dec
mov
mov
cld
mov
pavgb
push
rol
call
push
add
and
fmul
call
aam
pop
ds
arpl
add
xor
rorb
mov
inc
inc
call
test
insb
addl
or
aad
pop
adc
test
mov
call
push
or
clc
dec
inc
mov
cmp
sub
fwait
clc
adc
xchg
and
inc
je
push
and
je
hlt
aam
mov
mov
insl
add
outsl
mov
sbb
mov
mov
add
fsubr
mov
je
push
test
mov
pop
stos
insl
in
subl
shlb
xor
aad
or
add
shlb
pusha
dec
add
jb
jg
xchg
test
inc
outsb
or
jae
call
mov
popf
adc
clc
xchg
dec
loop
daa
fwait
incl
sub
jo
push
add
add
dec
add
mov
cmp
cli
lods
mov
popa
popf
aam
divl
jb
push
cld
dec
and
push
rorl
adc
ror
out
fsubrl
adc
adcb
das
out
leave
dec
aam
cwtl
inc
dec
sahf
mov
dec
adc
add
mov
mov
or
or
sub
outsl
and
cs
adcl
mov
int
rclb
or
lods
in
scas
ds
sbbl
pop
add
dec
mov
mov
fst
or
test
insl
aas
push
rcrl
stos
aad
fdivrl
or
sub
insb
repnz
xchg
dec
not
test
inc
xlat
add
jmp
dec
pop
mulb
inc
inc
cmp
fcmovnb
xchg
xchg
cmp
or
sti
test
mov
rclb
mulb
add
cmp
mov
mov
movsb
jb
test
mov
dec
adc
or
fs
gs
mov
sbb
adc
mov
decb
leave
stos
mulb
sub
cmpsb
pop
mov
idivl
or
shl
mov
decb
test
sbb
fstpl
xor
mov
mov
mov
mov
bound
jp
adc
or
test
popa
jle
in
fstpt
or
add
js
xchg
decl
repnz
insb
sbb
mov
pop
add
xor
ret
lods
dec
adc
test
mov
sbb
movsb
cltd
cwtl
cli
cmp
jmp
cmpsl
mov
mov
and
jns
dec
ds
mov
int3
js
push
lods
pop
ficoml
push
pop
lods
cltd
popa
inc
sub
cwtl
or
jmp
fwait
lea
and
fisttpll
pushl
mov
sub
popf
xchg
in
add
and
rcrl
sub
dec
mov
daa
out
iret
test
mov
xor
add
cwtl
mov
das
call
outsb
insl
hlt
sbb
mov
test
or
cmc
out
sbb
mov
cwtl
pop
sbb
test
mov
mov
adc
adc
nop
push
imul
call
aas
in
jmp
movsb
icebp
adc
mov
mov
pop
sbb
cmp
adc
icebp
arpl
ljmp
into
std
data16
sub
and
cmp
ss
outsl
stc
jge
or
push
cmp
shll
dec
addr16
add
cld
mov
hlt
sub
ja
scas
jge
sub
popf
loope
inc
sbb
mov
std
cmp
xor
sar
jp
add
mov
inc
lahf
mov
bound
xor
outsl
in
lds
jo
cmp
jmp
inc
add
push
pop
stos
ret
in
lods
inc
arpl
aaa
or
sub
sti
pop
clc
or
gs
lods
adc
dec
mov
inc
sub
addl
outsl
jge
cmpsl
mov
mov
outsb
mul
leave
or
xchg
cli
test
inc
ss
ret
cmp
stc
or
ss
addr16
dec
or
inc
lods
xor
jg
lods
pop
sub
jne
repnz
sub
subl
push
inc
lahf
add
call
mov
dec
test
mov
adcb
mov
cld
in
ljmp
dec
xchg
popa
jle
shlb
ret
lods
pusha
pusha
fwait
scas
sub
pushf
jbe
std
fists
inc
ds
scas
addr16
push
pop
scas
sbb
jmp
push
xchg
pushf
or
nop
fcmovnbe
adc
and
cmp
stos
sbb
gs
gs
mov
adc
ret
add
cld
leave
scas
jp
bts
cmp
pop
adc
cvtps2pi
mov
sbb
es
fsubl
outsl
xor
xor
jo
fildl
les
mov
movsl
and
inc
outsl
aam
mov
push
aam
mov
aad
pandn
adc
xchg
or
sub
adc
jns
les
test
flds
stos
subb
jae
cltd
add
ret
inc
mov
movlps
mov
divb
adc
push
push
or
scas
mov
aad
xor
mov
jge
in
aam
push
jbe
aad
inc
test
xor
sbb
outsl
mov
les
lods
adc
enter
sub
mov
scas
pop
addr16
xchg
jae
adc
or
jbe
lret
add
adc
xor
xchg
sbb
call
xchg
cld
lods
push
fidivrs
fisubl
ljmp
jnp
push
imul
pop
push
mov
or
push
mov
lods
sub
mov
cld
push
lret
iret
pushf
ss
mov
mov
cltd
adc
rorl
jg
aaa
in
leave
mov
jb
mov
and
lods
movsl
push
fmull
lods
ds
sub
cmp
imul
sahf
lret
leave
inc
jnp
in
xchg
and
jg
fcoml
adc
jbe
sbb
out
and
imul
mov
ss
sbb
in
bound
out
inc
dec
sub
pop
scas
imul
add
mov
push
xchg
add
add
lea
fsubrs
cltd
test
pop
test
imul
das
imul
sub
inc
push
sub
mov
sbb
pusha
sub
out
jge
push
xor
stos
and
cmp
dec
cld
push
arpl
xor
stc
in
stos
xchg
icebp
mov
adc
aam
mov
jmp
sub
pop
rorl
push
mov
aad
push
rcll
std
add
or
mov
repz
test
outsb
pop
enter
sub
and
mov
icebp
pop
mov
push
adc
addr16
push
xor
jne
repnz
pop
mov
push
inc
lret
cltd
nop
lock
adc
cmp
into
lahf
dec
push
sbb
dec
rolb
mov
add
xor
js
stos
sbb
ds
fs
sbb
lods
and
ret
ljmp
push
scas
orb
add
mov
xchg
and
jnp
mov
xchg
js
jns
mov
fsubl
test
add
jne
sub
jne
mov
push
push
mov
enter
mov
cmp
pushf
add
xchg
int
sti
addb
cmpsb
inc
add
add
ljmp
mov
adcb
sbb
sbb
pop
sarb
push
leave
dec
icebp
in
adc
ljmp
xor
in
push
jg
ljmp
push
add
mov
outsb
adc
addb
add
pop
cmc
mov
xchg
or
or
dec
adc
arpl
mov
test
sub
push
ret
dec
loopne
mov
ss
sbbb
fimull
shrl
lret
or
nop
push
and
paddusw
adc
ficoms
rorl
push
pushf
lret
xor
lret
xchg
hlt
movb
popa
inc
inc
mov
es
cmp
pusha
xor
or
daa
dec
in
xchg
dec
inc
das
mov
add
push
dec
clc
inc
les
and
dec
pop
stos
sbb
add
ret
add
dec
pushf
add
inc
dec
adc
cld
filds
out
out
orb
add
or
add
add
sub
add
push
mov
dec
adc
xchg
in
sbb
sbb
bnd
ljmp
xor
sub
xchg
or
es
push
lock
push
or
jbe
out
test
cwtl
inc
pop
les
adc
lea
clc
xchg
movsl
sbb
int
cld
into
xchg
outsl
call
in
into
jne
fs
cvtps2pd
inc
mov
mov
or
push
sub
sub
mov
xchg
add
popa
push
ljmp
push
lahf
jmp
mov
pop
sbbb
mov
sbb
test
pop
pop
adc
popf
lods
icebp
das
push
sahf
movsb
out
cltd
mov
stos
xchg
mov
inc
push
mov
sub
add
rorl
sarl
push
dec
je
cmp
or
test
cmp
ja
jle
cmp
scas
ds
pop
sub
inc
bound
je
out
ss
mov
bound
mov
xor
mov
jg
add
push
sbb
jp
pop
xlat
sbb
xchg
and
ljmp
xchg
or
xchg
inc
pop
std
jmp
repz
cwtl
sub
inc
in
or
rclb
repz
test
test
test
and
push
mov
inc
std
sbb
inc
aad
add
pop
mov
push
shrb
call
mov
notb
xchg
adc
sub
add
xchg
jecxz
and
or
hlt
les
push
sbb
sub
popa
js
adc
xor
jno
xchg
test
xor
xor
jbe
mov
xchg
adc
jo
loopne
xchg
aad
and
andl
inc
xor
repnz
add
shlb
push
imul
push
dec
jb
fisttpll
sbb
dec
enter
push
icebp
subb
lods
in
stos
sbb
push
fidivl
or
ss
cmc
push
adc
sub
xchg
aad
add
add
add
shlb
push
add
adcb
int
sbb
dec
push
xor
lock
and
dec
adc
cmpsl
inc
xor
push
inc
xor
cmp
lahf
add
mov
mov
bound
sub
adc
mov
fiaddl
dec
test
or
jne
cld
cld
mov
adc
mov
and
and
cmp
loopne
xor
lds
icebp
mov
and
inc
adc
lock
add
pmuludq
and
push
je
mov
in
add
xor
jo
add
add
fs
xor
js
mov
or
push
jbe
push
mov
jl
into
pop
xchg
inc
push
ret
cmp
sub
sbb
xor
out
xorb
sub
cld
and
mull
jnp
jbe
addr16
sub
or
add
dec
gs
and
ja
dec
adc
mov
or
push
xor
sub
dec
xchg
sarb
out
stc
add
shrb
or
or
adc
adc
or
xor
sbb
aaa
ja
xchg
add
fcomps
shlb
add
or
sub
pop
inc
push
jae
sub
push
mov
inc
jmp
or
cmpsl
add
and
pop
je
rclb
cmp
rorb
rorb
jns
xchg
call
adc
lret
add
in
shl
add
push
xchg
dec
inc
sub
add
jne
jnp
out
adc
xor
cwtl
lods
cltd
lret
fadds
pop
sbb
dec
lock
out
pop
jbe
inc
pop
outsb
dec
adc
cmp
pop
adc
sub
push
cmp
xor
clc
mov
push
mov
or
out
ret
vxorps
xor
xlat
lods
push
mov
push
pop
jne
dec
addr16
frstpm(287
shlb
push
and
rcll
pop
stos
test
dec
repnz
dec
clc
je
and
mov
or
add
repz
decb
push
in
dec
mov
mov
push
push
jp
sbb
pop
aam
or
xor
add
icebp
jne
mov
rclb
pushf
stc
and
fdivrl
and
xchg
std
cld
ret
cmp
lea
cmp
adc
adc
stos
cmp
sbb
mov
add
mov
rclb
test
sub
jae
add
sbb
ljmp
push
data16
or
jmp
push
ds
jmp
popf
ret
add
mov
adc
add
and
and
sti
add
pop
lahf
adc
push
lds
out
leave
pop
sbb
gs
mov
or
add
mov
xchg
addb
xchg
icebp
fcoml
jg
push
mov
sbb
mov
fildll
xor
ret
sub
pusha
mov
call
fs
rclb
arpl
jmp
sub
add
push
popa
or
and
and
xchg
call
dec
inc
or
or
and
inc
dec
mov
add
inc
push
mov
inc
dec
inc
or
add
adc
dec
or
inc
sub
mov
mov
adc
inc
subb
imul
and
or
adc
outsb
imul
and
or
es
add
insl
inc
mov
sbbb
add
nop
adc
test
pop
imul
push
or
dec
insl
sbb
adc
inc
or
insl
ja
xchg
adcb
inc
test
and
subb
fcmovnu
and
mov
and
test
pop
imul
ja
or
and
outsb
fstpt
adc
or
and
or
xorb
inc
scas
xorl
nop
mov
xor
adc
and
fistps
xor
and
orb
mov
imul
sbb
and
jbe
inc
inc
and
and
sbb
lods
insl
xchg
or
es
add
and
pop
adc
fsubs
pop
aas
mov
dec
dec
ficomps
lods
mov
add
push
aad
pop
fcmovnu
adc
inc
cmpsb
dec
mov
fcomps
inc
adc
mov
fisttpll
adc
and
nop
inc
and
and
pop
imul
or
xchg
adc
test
push
fisubl
xchg
dec
mov
adc
cwtl
pop
test
insl
imul
ja
inc
pop
gs
sbb
or
dec
jns
and
mov
or
adc
sub
xchg
mov
or
lds
adc
push
mov
fcomps
pop
fs
add
mov
imul
cmp
mov
imul
adc
insb
push
ss
mov
lods
push
push
inc
inc
aam
mov
sarb
sbb
jle
mov
popa
fistl
arpl
mov
inc
fdivrl
xor
inc
lods
loopne
imul
mov
arpl
dec
loope
cmp
lret
or
int
or
push
mov
scas
pop
xlat
add
and
pop
imul
movsl
lds
xchg
jo
fisttps
push
cld
mov
mov
pop
in
arpl
insb
lods
adc
lcall
ljmp
loopne
pop
imul
ja
and
or
fwait
inc
sub
lcall
push
aaa
xor
fcmovne
nop
shll
push
cmp
pop
xlat
add
add
test
add
xor
pop
xchg
jo
adc
in
push
and
push
or
out
lods
push
push
test
pop
sub
add
mov
lods
xchg
pop
sbb
push
jo
mov
inc
dec
add
or
inc
cmp
dec
test
scas
popa
imul
lret
xchg
data16
cmp
out
lea
inc
push
dec
popf
or
ret
test
nop
fs
xorb
sbb
xor
loope
mov
test
sahf
inc
add
push
push
fdivrl
popf
pop
or
or
mov
fwait
addb
inc
mov
shll
icebp
fcmovbe
pop
mov
cmp
mov
jge
xor
mov
sbb
push
inc
or
dec
xchg
xchg
dec
add
adc
into
rcrl
lods
mov
loop
test
shll
adc
pushf
scas
lret
adc
out
stos
pop
jae
pop
mov
push
push
sbb
ret
out
pop
or
push
add
sbb
dec
pop
or
mov
push
jne
pop
hlt
mulb
imul
cmp
inc
inc
shlb
xchg
dec
lods
mov
into
jp
lahf
popf
xchg
and
lods
mov
ss
inc
cmp
pavgw
cmpsb
pop
add
lret
aad
in
cmp
add
loopne
rolb
add
push
sbb
nop
ret
sub
lods
push
in
xchg
mov
and
ret
lods
mov
xorl
lock
out
add
pop
imul
daa
add
adc
push
sub
faddl
movsb
xor
sub
and
mov
test
test
lret
jmp
sub
lret
stos
out
xor
cs
rolb
xchg
rcll
push
call
push
cmpb
pop
dec
aam
inc
or
mov
mov
dec
andb
dec
and
dec
aad
push
cmp
addr16
popa
mov
jmp
pop
jmp
aaa
mov
xor
pop
push
aam
adc
aad
inc
push
mov
adc
adc
fildll
out
dec
push
xchg
inc
add
add
es
or
andl
add
push
sbb
jle
aad
and
and
add
fucomip
movsb
repz
add
incb
jecxz
inc
xchg
and
adc
test
push
frstor
jge
pop
stos
loopne
cmp
push
xchg
sbb
jne
arpl
sub
in
es
aam
nop
sub
mov
push
in
mov
jecxz
xchg
lcall
mov
sbb
shrb
orb
call
cmp
mov
insl
fldt
dec
subl
sub
and
pop
fwait
jbe
jl
fbstp
xor
daa
test
das
lret
sub
incl
arpl
jns
sbb
insb
dec
mov
loop
add
jg
sub
add
movsb
add
and
cld
mov
ljmp
sbb
mov
pop
sub
add
push
add
mov
clc
sub
sub
test
cmp
xchg
lock
xchg
loopne
xchg
in
jge
mov
xlat
nop
or
call
adc
jmp
add
xchg
iret
add
adc
or
add
rol
cmp
mov
xor
incb
add
sub
cld
fsts
addr16
sar
ljmp
add
inc
xchg
in
shlb
repz
cld
aad
notl
or
add
adc
cltd
jl
dec
cmpsl
loope
lahf
mov
inc
and
mov
sbb
jg
jo
test
stc
add
mov
dec
add
add
mov
outsl
decl
or
xor
mov
mov
jecxz
inc
adc
jmp
mov
add
std
insl
neg
xchg
sbbb
aam
hlt
mov
fstl
and
aas
add
je
add
jle
push
mov
push
xor
in
rclb
push
add
dec
inc
ss
addr16
adc
jae
pop
push
push
loopne
mov
push
xor
fcmovnu
out
or
aas
and
push
dec
lcall
push
fisubs
sbb
jl
dec
mov
and
push
mov
pop
adc
popf
pop
xchg
addl
daa
out
pop
mov
test
in
in
push
sti
das
sub
adc
pop
jle
out
add
xchg
cltd
lret
and
xchg
decb
mov
inc
sti
fists
call
das
rolb
mov
or
in
pushl
daa
inc
rcll
popa
add
xchg
outsl
jne
xor
xor
inc
ret
cmpsb
jg
cli
sbb
shrb
cltd
jle
mov
adc
aad
add
add
add
jno
jbe
jmp
je
or
mov
sub
pop
jp
stos
adc
sbb
setge
pushw
cmp
push
into
outsl
mov
sbb
sbb
ss
repz
mov
int
dec
dec
push
ja
xchg
sti
inc
xor
mov
scas
pusha
mov
cmp
lea
or
sbbl
lods
sbb
mov
mov
push
cmp
add
fmull
test
mov
pushf
sbb
aad
mov
out
xor
and
leave
or
icebp
decl
pop
xor
adc
int
scas
je
or
insb
jg
sub
fisubl
or
sbb
mov
call
mov
ret
dec
das
sub
lock
neg
fbld
std
push
add
jl
pop
or
arpl
push
cli
test
movsb
scas
mov
insb
or
div
outsl
test
cmp
xchg
mov
push
and
mov
add
repz
sbb
bnd
push
add
dec
xor
sub
repz
mov
sub
negb
pop
mov
jp
adc
jne
sbbl
push
or
pop
fcoms
sarb
mov
pop
aad
test
cwtl
in
enter
jp
add
jl
xchg
push
sbb
in
mov
mov
iret
cmpsl
fiaddl
es
lods
fs
jmp
xlat
add
mul
jp
ret
clc
sub
adc
aam
add
jg
pop
inc
jnp
imul
add
and
rclb
sbb
inc
sbbb
fisttpl
push
inc
sub
adc
movsl
xchg
movsb
cmp
pop
lods
xchg
mov
stos
hlt
sub
lods
pop
add
mov
mov
idiv
incl
inc
ds
adc
dec
rol
pop
xchg
pop
inc
and
adc
add
fisttpll
loopne
add
jmp
mov
mov
enter
xchg
dec
fsub
push
outsl
push
jg
xorb
mov
adc
paddusw
add
sti
mov
fcomps
mov
inc
das
add
and
rclb
cmp
in
jbe
ja
and
fnsave
push
sub
mov
mov
es
xchg
sub
loopne
or
dec
push
push
clc
insl
shl
mov
subl
mov
je
stc
and
dec
mov
inc
sbb
scas
mov
imul
or
cmpsl
jg
lock
cmp
loopne
pop
std
sub
lret
xorl
mov
push
data16
jo
ret
adc
loop
jne
out
ds
das
or
inc
lock
inc
rcl
jp
add
xchg
aad
xchg
lods
add
addr16
fidivs
cld
pop
das
jo
and
ljmp
ljmp
filds
insl
mov
lcall
js
or
mov
jmp
adc
jge
inc
add
cli
out
lods
ficompl
enter
daa
pop
shll
data16
xchg
push
mov
sahf
add
inc
sbb
movsb
dec
jbe
cmpsl
ret
idivl
filds
sub
insb
shufps
fdivr
inc
bound
into
out
and
pop
push
mov
or
fstl
xchg
cmpsl
pop
mov
fsubrp
scas
push
arpl
sahf
fs
mov
rol
je
xlat
mov
aas
clc
inc
or
pushf
loop
cld
enter
jnp
das
shl
fcomip
mov
push
loop
loop
mov
addb
insb
push
popa
mov
jl
in
fcom
mov
push
cmpsb
xchg
test
bound
ret
mov
pop
hlt
test
ljmp
jecxz
fistps
pop
xorl
or
bound
nop
inc
inc
mov
stos
fs
data16
pop
or
dec
sbbl
orb
mov
lret
mov
or
daa
cltd
adc
aas
xchg
mov
fists
ds
sbb
sbb
fnstsw
dec
cmovns
scas
icebp
mov
hlt
xchg
xchg
cmp
pushf
push
cmp
mov
call
cli
scas
mov
test
mov
lock
mov
mov
pushaw
loope
mov
xchg
adc
adc
jmp
xor
insl
add
jo
mov
cmp
bound
mov
lock
incb
or
dec
jb
xchg
sbb
push
shlb
push
iret
pop
adc
jle
jo
outsl
mov
aaa
mov
mov
aaa
cmpsl
sub
or
lods
push
inc
shrl
rclb
mov
dec
sbb
int
jecxz
jle
cld
mov
mov
dec
and
jns
popa
rolb
jmp
inc
xchg
cmp
aad
inc
jbe
gs
nop
or
mov
das
mov
sbb
cli
jmp
jae
jmp
and
mov
hlt
insl
idivl
sarl
das
push
mov
mov
bound
jno
jno
movsl
int
je
jecxz
lret
adc
or
sbb
jb
int
aad
ds
jge
or
dec
inc
das
mov
popa
inc
xchg
gs
lcall
pop
outsl
mov
test
dec
adc
mov
not
es
aas
iret
xorl
mov
ss
inc
push
lahf
lret
inc
push
test
out
mov
movsl
iret
jnp
loopne
xchg
clc
inc
in
test
pusha
jno
sbb
inc
fnsave
add
adc
ja
fiadds
dec
aaa
fsubrs
test
or
mov
bound
cltd
sarl
popf
incl
fcomi
xchg
cmpsl
ds
jne
dec
xchg
adc
dec
das
fucom
or
fstp
es
mov
fildll
mov
inc
add
xchg
sbb
sbb
jg
or
jg
imul
adc
sub
sbb
jg
push
js
cmp
in
pop
push
outsl
xor
rorl
push
mov
cli
outsl
adc
cmp
fisubrs
mov
divl
cli
andb
pusha
adc
dec
or
addr16
xchg
clflush
push
clc
sbb
sbb
mov
add
loope
push
loopne
ret
cmp
push
push
mov
outsl
pop
clc
xchg
cmp
notl
or
sbb
add
test
repnz
shlb
mov
hlt
sbb
aad
les
ret
dec
arpl
mov
mov
adc
out
pop
mov
rorl
jnp
xlat
sbb
mov
push
jg
sub
inc
dec
pop
inc
and
inc
sub
mov
es
imul
mov
jae
mov
pop
or
insb
adc
dec
add
inc
and
les
xlat
std
idivb
dec
xchg
data16
ret
push
loope
lahf
jl
push
jg
or
xchg
cmp
test
inc
fimuls
xor
ljmp
xor
pop
fdivrs
or
ds
loop
mov
call
or
mov
scas
adc
out
sbb
lea
lret
ret
scas
sbb
inc
xchg
in
dec
loop
push
push
cmpsl
push
loope
stos
js
adc
adc
in
or
nop
pop
leave
xchg
lcall
push
push
fmull
cmp
dec
dec
ljmp
sbb
cmp
jo
adc
clc
push
push
aas
or
andb
jns
jge
push
es
icebp
fildll
sub
pop
int
adc
mov
inc
jg
and
lret
clc
lods
jmp
mov
mov
dec
jp
inc
pop
cmpsb
fnstcw
mov
aaa
insb
jb
sub
and
mov
popf
pop
ss
sbb
rorb
aas
insl
dec
insl
cmc
jg
aam
shrl
cmp
pop
dec
mov
dec
fwait
dec
dec
mov
mov
movsl
xchg
inc
pop
jecxz
jg
into
pop
mov
adc
dec
bound
bound
pop
mov
cmpsl
ret
into
loopne
jmp
cmp
jle
outsl
icebp
xor
cmp
xlat
lret
push
out
add
and
mov
push
shll
xchg
out
xchg
sar
dec
push
outsb
std
lds
lods
fcomip
aaa
mov
fcomps
push
ds
jb
mov
mov
out
ja
test
fyl2x
addl
add
xchg
shll
out
xor
lea
pop
sbb
dec
das
icebp
out
out
shrl
inc
pop
clc
movb
sbb
sub
fwait
or
sub
bound
test
outsl
frstor
daa
shlb
das
inc
ret
icebp
mov
rorl
pop
cli
xchg
int
mov
push
dec
pop
cmp
sbb
fnstsw
cmp
lret
dec
or
mov
jle
cmpl
push
jecxz
or
cmp
imul
sub
sbb
jp
orb
cli
test
add
addl
out
mov
sti
inc
xor
int3
int
movsl
cs
mov
cld
outsl
mov
pop
pop
inc
inc
call
xchg
cmp
mov
mov
or
scas
or
pusha
aad
xchg
dec
cwtl
mov
pop
or
les
movsl
or
inc
push
loope
dec
scas
imul
push
scas
dec
mov
add
push
fimull
inc
pop
xchg
add
sbb
aas
lcall
mov
ljmp
fldt
fists
insl
or
movsl
jmp
arpl
mov
inc
adc
into
mov
sub
lock
fwait
mov
jo
pop
call
xchg
fmuls
jbe
mov
inc
jmp
notb
jbe
mov
imul
sub
xor
inc
lds
add
inc
scas
jecxz
call
and
arpl
aas
and
fidivl
or
dec
popf
xor
pop
fdivrs
fiaddl
sbb
fbstp
rorl
and
mov
neg
sub
outsl
cli
add
sub
or
fcmovnb
cmp
shrl
andb
int
icebp
insl
mov
inc
jb
icebp
dec
cmp
pop
fucom
fadd
cmpsb
repz
insl
add
cwtl
jmp
add
push
sti
mov
fistpll
js
dec
shl
hlt
jecxz
inc
inc
cli
pusha
movq
fildl
adc
sub
arpl
inc
ljmp
fs
mov
mov
inc
jb
into
xchg
mov
jecxz
inc
inc
sub
les
hlt
mov
hlt
push
mov
push
rcrl
sbb
rclb
pop
outsb
jbe
std
leave
js
incb
sub
jnp
ds
jno
jmp
dec
into
popf
fwait
sub
sbb
mov
xor
js
test
xor
adc
jbe
sub
mov
insl
adc
pop
sub
mov
pushf
inc
nop
mov
sub
inc
shlb
push
pop
clc
fcmovu
leave
rcrb
or
fdivr
sbb
int
mov
mov
pusha
clc
cmp
lcall
lcall
cli
aad
es
aaa
add
push
gs
and
cmc
sbb
int
push
cmp
rcr
mov
daa
lock
ja
repnz
mov
cwtl
mov
out
add
aam
insl
xchg
push
js
or
dec
mov
aas
sbb
mov
cld
or
jae
xor
inc
je
adc
sub
cmp
jns
outsb
jle
xchg
lret
mov
xchg
xor
out
idivl
sub
push
jb
stc
inc
pushf
arpl
cmp
fists
push
push
mov
subl
test
ljmp
inc
lea
call
cmp
aad
nop
je
sbb
cld
mov
push
lods
nop
xlat
xchg
cltd
sub
cmp
cli
push
add
xor
dec
decl
nop
pop
gs
adc
jecxz
dec
mov
imulb
cmp
dec
ret
xchg
in
test
stos
inc
jecxz
outsb
aad
loope
mov
or
lret
or
out
das
mov
idivl
mov
cmp
push
mov
add
clc
inc
sub
jle
inc
inc
iret
call
xor
call
outsl
icebp
dec
mov
daa
jnp
mov
cld
das
je
push
xor
cmp
call
sub
sbb
or
loop
inc
push
jns
inc
test
clc
icebp
xchg
inc
outsl
mov
add
sub
popl
push
outsb
mov
subl
mov
jns
js
fimull
fstpl
iret
pop
mov
sbb
nop
add
pop
repz
ss
dec
push
jl
loope
adc
lcall
cmp
inc
dec
rcrl
push
jno
jl
jns
pop
addr16
sub
xchg
adcb
xchg
repz
pop
mov
filds
fmulp
mov
xor
sub
rorb
mov
xchg
sbb
andl
cld
jg
shll
icebp
aaa
data16
cmpsl
xchg
push
inc
arpl
push
dec
cmpsb
cmpsl
ja
test
stc
data16
subb
popf
in
std
scas
and
pop
mov
add
dec
or
cmp
repnz
jmp
aaa
fcoms
lret
xchg
sub
repnz
fsts
add
addb
mov
and
sahf
inc
repnz
lret
fimuls
loope
rol
divl
adc
or
adc
jg
pop
or
cmpsl
dec
mov
lcall
cmp
mov
mov
mov
roll
dec
or
incb
add
pushl
mov
cmp
in
sub
mov
inc
xchg
or
ss
sub
xchg
aad
cli
aaa
hlt
imul
mov
mov
push
sbb
inc
add
add
inc
movsl
adc
les
inc
xchg
into
out
movsl
fildll
sub
sti
mov
ss
xchg
mov
rcl
push
xor
test
jp
cli
and
insl
mov
popf
fcmovu
sub
inc
stos
sbb
adc
stos
dec
cmpsl
in
mov
cs
notl
inc
xchg
mov
stc
mov
scas
pop
add
pop
inc
out
xor
sbb
jle
loope
icebp
pop
sub
or
push
jb
push
inc
repz
adc
cmc
jmp
sub
inc
mov
loope
shll
lock
das
xor
pop
add
fstpl
std
xchg
lret
ror
mov
std
jbe
cmp
je
adc
sbb
insl
arpl
fidivrl
jo
js
push
outsl
call
cmp
or
adc
dec
mov
jmp
push
push
xor
jnp
aam
repnz
lcall
rorl
fistl
jl
lea
push
ret
xor
in
jmp
cmp
inc
add
lock
mov
mov
rcrb
incl
ljmp
mov
sub
inc
shll
dec
std
push
or
fwait
inc
mov
pop
out
xlat
imul
hlt
popa
jecxz
push
imul
pop
bound
xchg
dec
inc
or
outsb
out
push
adc
les
int3
jbe
jo
mov
inc
clc
loope
in
sub
in
sub
mov
fldenv
mov
fldl
out
outsb
insb
mov
stos
mov
adc
ja
add
out
jge
loopne
das
rcll
es
rep
out
dec
les
pop
xchg
outsb
or
jnp
int
xorl
mov
mov
inc
push
pop
fwait
aas
movsb
stos
fadd
add
daa
std
test
fsubr
mov
jne
mov
lock
inc
mov
mov
xor
das
cld
adc
fcmovb
out
sub
sub
adc
sbb
loop
dec
jg
mov
push
outsl
mov
jns
mov
out
lret
or
rcrb
cmp
movsl
mov
mov
jp
sub
pop
out
mov
shll
dec
pop
pop
sbb
fwait
sbb
roll
shl
out
decl
add
mov
arpl
cmp
dec
xchg
adc
lock
frstor
jno
jne
and
dec
cwtl
cmc
int
mov
ss
or
pushf
sbb
lods
or
pop
push
imul
adc
jg
jno
nop
repnz
xor
outsb
mov
sbb
xlat
and
or
testl
movb
mov
jge
mov
loope
push
ja
popf
pop
jno
add
adc
test
dec
clc
dec
lds
imul
popf
dec
cmp
cld
fucomi
rorb
mov
test
inc
mov
sbb
repnz
clc
xor
hlt
call
pop
fcomps
stc
sahf
pop
fnstsw
cmc
scas
dec
or
mov
aaa
call
mov
sub
pop
xchg
call
lahf
or
mov
lea
xchg
popa
inc
mov
add
sbbb
mov
adcl
lcall
xor
cmp
mov
jo
cmp
jg
inc
cmpsb
sarl
add
movsb
loopne
pop
clc
mulb
pop
sbb
leave
or
addl
call
push
daa
stos
pop
jmp
outsb
aas
ds
fucomi
fstpt
rcrl
cmp
mov
cmp
and
sub
mov
test
nop
cltd
dec
mov
xlat
pop
fistps
nop
or
jo
inc
xor
ljmp
mov
or
testl
inc
inc
ds
cld
in
push
mov
add
out
adc
xor
lret
pop
dec
adc
lea
pop
mov
push
add
cmp
jmp
cmp
push
mov
int3
inc
sbb
jmp
mov
jg
popa
jmp
lea
ffreep
fstps
ret
imul
jp
cmp
imul
add
mov
stos
faddl
rolb
insl
in
in
pop
dec
mov
repz
stc
and
adc
dec
pop
sbb
sub
dec
push
push
fsubrs
mov
sub
lcall
push
iret
mov
push
inc
mov
mov
or
push
loope
test
int
fwait
cmpsb
fdivp
mov
inc
push
lods
enter
divb
mov
cmpl
mov
inc
sti
outsl
mov
insl
jb
bound
insl
and
cmp
or
rcll
mov
jecxz
xchg
cmp
out
cwtl
adc
jns
rcr
icebp
cmp
out
pop
sub
sub
stc
icebp
sbb
aad
lahf
jg
std
cwtl
sub
lods
mov
pop
repnz
inc
enter
test
cmp
inc
sub
sub
inc
adc
sub
fs
clc
lods
jo
cmpl
xor
mov
lock
jae
pusha
inc
test
pop
adc
test
add
mov
mov
cmpsl
in
add
std
arpl
and
mull
xchg
pop
dec
push
jns
push
fildl
scas
jno
mov
pop
popf
cltd
sahf
pop
lock
pop
mov
pushf
fstpt
ljmp
push
leave
shll
sti
lods
stos
mov
incl
jecxz
repnz
mov
movsb
lea
jle
test
das
push
iret
or
fistl
fdiv
mov
push
outsl
sbb
test
and
je
es
pop
sub
and
adc
pop
add
push
xor
fmul
xchg
aas
mov
test
or
movsl
aas
iret
mov
icebp
pop
pop
cli
stos
dec
mov
outsb
divl
cmc
mov
loopne
test
pusha
mov
dec
and
je
xchg
mov
in
mov
jg
jecxz
or
fnstsw
pusha
push
out
jno
xor
adc
mov
sbb
push
aaa
jecxz
aaa
fildl
lret
cmp
in
add
inc
aas
add
fbld
mov
dec
mov
dec
lods
inc
fstpt
std
pop
inc
inc
test
sbb
push
fs
testb
cmp
mov
ret
dec
inc
les
lock
cmp
push
rcl
not
pushl
fs
ret
dec
inc
xchg
testb
lahf
and
cs
xlat
sub
ljmp
push
sub
inc
mov
lcall
insl
aad
rorb
fsubs
out
pop
aaa
mov
mov
xor
inc
xchg
daa
sub
aaa
rol
xor
adc
push
daa
pop
xchg
mov
or
push
and
push
jno
aas
decb
addr16
jbe
mov
sbb
lods
out
mov
sbb
ret
outsl
test
adc
das
jbe
mov
cli
cwtl
inc
outsb
lcall
ljmp
xchg
or
push
addb
pop
jnp
cmp
cld
pop
clc
decb
push
cmp
xor
aaa
mov
cmp
repnz
sub
lahf
stos
mov
cmpsb
out
mov
pop
sbb
mov
inc
or
or
stos
lods
inc
out
mov
mov
adcb
lods
pop
call
jb
es
dec
push
outsl
jns
outsl
fwait
filds
out
pop
lock
test
push
std
dec
lahf
and
push
xor
sbb
xchg
cmp
icebp
lret
insl
nop
adc
push
xlat
dec
xchg
std
es
mov
push
or
push
mov
arpl
mov
push
xchg
pop
adc
push
dec
test
lods
inc
sub
xor
jmp
sub
nop
cltd
sbb
pop
inc
fsubl
call
imul
mov
ret
or
loop
incl
add
test
imul
add
outsl
fstpt
mov
mov
sbb
test
ds
push
in
adc
out
mov
inc
cmpsb
add
and
inc
xor
inc
das
lods
jns
mov
inc
fucomp
ret
ret
xor
aaa
outsl
das
js
in
push
subb
ret
addl
push
shr
xchg
outsl
dec
pop
mov
pop
dec
stc
xchg
cmp
xor
repnz
adc
inc
cmp
adc
in
push
sbb
popf
mov
fs
mov
outsl
mov
test
fs
push
jp
pop
push
dec
nop
mov
adc
lahf
xor
fs
add
lock
mov
das
mov
or
ljmp
sbb
ds
outsl
jno
pop
outsb
xor
mov
test
sub
pop
sub
ffreep
mov
dec
add
inc
je
call
cli
je
insb
adc
decl
ja
lret
jl
popa
jge
xchg
in
pop
outsb
add
adc
mov
dec
in
outsb
out
cmpsl
pop
cwtl
loopne
cmp
add
dec
jbe
pushf
mov
ret
es
mov
pop
fidivl
loopne
ljmp
pop
icebp
push
in
mov
adc
mov
subl
mov
lret
jb
adc
pop
adc
dec
mov
adc
and
incl
int
dec
pop
jne
pop
xchg
fcmovnu
out
call
nop
pop
out
jge
sub
aaa
lock
adc
arpl
lods
mov
mov
adc
in
xlat
test
test
pop
shlb
sti
mov
lcall
sub
nop
push
jno
mov
test
in
jl
test
mov
movsl
fisttpl
add
ss
fiadds
mov
mov
arpl
in
cmp
mov
xor
xor
pop
fcom
pusha
loope
sbb
fwait
xor
sub
mov
lock
ret
mov
lret
scas
cli
mov
insb
adc
adc
shl
outsb
and
hlt
mov
enter
cli
call
push
ja
not
inc
std
lcall
pop
leave
or
adc
aam
jmp
fwait
pop
test
scas
lods
sub
mov
sbb
test
jp
cmpsb
js
pusha
icebp
pop
mov
xor
pop
outsb
mov
pop
hlt
mov
movb
pop
pop
sbb
inc
out
add
fcos
ret
pop
mov
push
push
inc
sarb
scas
loopne
xor
ja
push
mov
roll
aaa
repnz
call
in
dec
dec
cmc
mov
mov
jns
leave
imul
sbb
fsts
cld
sbb
push
inc
jbe
mull
out
leave
push
mov
ljmp
push
adc
sarb
xor
cmp
sahf
repz
inc
xchg
cmp
fisttps
sahf
fwait
loopne
mov
jnp
icebp
push
sub
data16
pop
sbb
push
push
rcl
cmp
jne
outsb
loop
jmp
sti
jno
sub
adc
inc
mov
push
mov
mov
sub
sub
in
jp
pop
fwait
xchg
rolb
test
mulb
or
xor
mov
std
or
jecxz
cmp
das
sub
lcall
mov
inc
push
xor
lock
inc
in
jns,pn
lahf
push
or
aad
pusha
cmp
pop
jae
jb
cli
out
sbb
adc
cmpsl
test
mov
push
xchg
xchg
push
out
dec
dec
dec
imul
lret
cmp
dec
pushl
sbb
ljmp
rcll
dec
ja
mov
dec
add
cltd
shlb
inc
push
test
and
jecxz
xor
test
adc
scas
push
fldt
push
pusha
or
or
lods
push
push
xchg
mov
nop
mov
mov
movsl
lds
aaa
add
clc
rorl
arpl
aad
mov
decb
adc
rorb
xchg
pop
cmp
inc
push
fsubs
std
pop
mov
mov
stos
mov
stos
test
gs
add
aam
jg
mov
sub
ret
outsb
mov
scas
xchg
cmp
les
lods
jmp
aam
pop
jne
add
sub
test
push
test
add
fwait
cli
push
cld
sbb
jmp
dec
sar
xchg
pop
cwtl
aaa
in
loop
cmp
mov
mov
push
pop
nop
pop
lock
xor
xor
fsubrl
pop
pop
int3
push
jae
push
xchg
mov
pusha
in
movsl
mov
jno
xchg
mov
mov
or
xchg
adc
mov
loop
and
sbbl
xchg
fbld
adc
sbb
cmpsl
gs
call
mov
insl
and
add
lahf
out
clc
in
test
lret
insl
div
aaa
sub
xchg
les
sub
insb
or
push
movzwl
inc
or
push
arpl
ja
outsl
mov
and
and
cli
cmp
enter
in
jb
mov
nop
ja
pop
aas
xchg
mov
push
mov
adc
add
outsb
roll
mov
js
dec
push
push
sub
lea
pusha
cmpsl
shrl
jo
insl
pushf
rcll
mov
xchg
mov
mov
jmp
add
scas
call
jo
xchg
aaa
adc
hlt
xor
cltd
adc
aaa
or
push
scas
jp
insb
int
sbbb
pop
mov
je
es
in
add
das
movsb
dec
leave
jns
mov
jo
fsts
js
jmp
or
ret
sbb
jp,pt
mulb
dec
xchg
inc
jmp
jno
xchg
adc
or
mov
mov
or
push
or
xchg
sahf
push
pop
addl
imul
mov
shlb
in
push
outsl
ja
inc
sbb
sbb
xchg
bound
mov
pop
adc
adc
scas
fimuls
jmp
enter
sbb
pop
cltd
push
bound
out
pop
imul
and
test
add
add
mov
xchg
mov
dec
xor
stos
inc
xor
leave
pop
cmpsl
dec
sti
mov
cmpsb
pop
test
add
outsl
cs
pusha
gs
loopne
pop
or
mov
dec
add
sahf
jbe
out
shlb
xchg
sub
pop
add
mov
mov
jle
mov
aam
fistpll
inc
sub
push
mov
push
pop
imul
roll
inc
in
pop
out
cli
jecxz
mov
test
cltd
xor
enter
loopne
ret
imul
or
adc
das
icebp
lods
adc
jnp
leave
fdivs
std
outsl
aaa
movsb
xchg
out
add
insb
pop
fcoms
jnp
in
and
aam
xchg
or
roll
mov
mov
jnp
pop
sub
add
bound
fnstcw
lahf
add
jecxz
jbe
xchg
inc
int
clc
rolb
sub
dec
adc
insl
std
push
jnp
sbb
cs
and
insl
nop
xlat
rolb
sarb
dec
lcall
enter
ret
lret
add
out
xor
adc
jne
gs
sbb
iret
sti
adc
pop
mov
cli
in
inc
push
loop
dec
cmove
in
jnp
test
push
xchg
pushf
or
movd
mov
inc
cmp
stos
sti
mov
dec
and
dec
outsb
insb
int
cmpsb
mov
lahf
insl
xlat
aaa
into
mov
or
inc
cmpsb
push
mov
inc
jecxz
test
in
pop
out
insl
call
in
in
xchg
out
add
pop
pop
mov
cmpsb
mov
cmp
fsts
cmp
int3
push
dec
cmp
in
xchg
push
mov
jo
insb
mov
ljmp
lods
in
sbb
outsb
inc
mov
rcll
aam
pop
xchg
cltd
xchg
ret
pop
rcr
bound
pushf
inc
sar
insl
imul
sub
test
jns
scas
inc
sti
test
cmp
nop
adc
iret
rol
outsl
decl
xchg
js
or
xchg
lea
mov
in
mov
and
stc
push
into
ljmp
sub
fimull
in
add
mov
xchg
mov
dec
lret
mov
daa
jg
sbb
iret
dec
add
mov
mov
ss
mov
iret
jno
shll
out
cmp
pop
jbe
jnp
test
sub
adc
dec
mov
dec
jg
sahf
and
inc
mov
dec
call
sahf
je
popa
fwait
ja
inc
lock
lahf
xchg
cmp
xlat
pop
add
jb
and
aaa
mov
cmp
mov
into
mov
adc
imul
cmp
sub
pop
cmc
imul
das
push
outsl
jl
outsb
inc
adc
call
and
pop
inc
mov
add
mov
not
stos
add
dec
xor
idivb
aaa
push
aad
dec
movsb
outsl
pop
rcrl
add
lods
movsl
popa
mov
cmp
mov
sbb
icebp
or
mov
fwait
sub
mov
imul
add
es
inc
xor
call
push
and
popa
jle
and
cmp
in
lea
sahf
rclb
test
icebp
add
aas
cs
cwtl
cmpsb
outsl
sbb
arpl
daa
add
pop
sub
loope
push
mov
ficompl
inc
mov
add
fistps
or
xchg
adc
add
jne
jl
sbb
mov
pop
out
loopne
dec
mov
loopne
stos
test
jne
mov
stos
xorl
je
adc
or
jo
xchg
pop
dec
loop
movsb
out
inc
arpl
add
mov
and
stos
and
mov
outsb
inc
jp
mov
push
fldt
sarl
mov
mov
imul
jl
cmc
sub
push
inc
mov
les
or
dec
insb
cwtl
mov
test
in
mov
mov
inc
mov
enter
push
xlat
gs
or
and
imul
pop
cmp
std
lds
or
cmpb
push
add
aaa
das
cwtl
push
movb
adc
xchg
pusha
cmp
pop
movsl
mov
jg
fmuls
push
push
adc
ror
icebp
mov
xchg
leave
pop
mov
jp
dec
movsb
or
jne
mov
inc
out
jae
cmp
inc
call
pop
dec
cmp
xor
lods
test
push
mov
std
aam
sbb
and
or
mov
push
fst
push
dec
xor
das
icebp
leave
jbe
sbb
andl
jmp
les
je
push
insl
lods
out
sub
jnp
cmp
bound
mov
das
fdivrl
sbb
sti
adc
adc
cs
inc
sub
mov
add
scas
jge
push
sbb
jecxz
mov
mov
sti
ljmp
jge
aam
pop
mov
and
mov
jae
xchg
pop
cli
jmp
sbb
lds
sub
mov
mov
or
mov
fnstsw
jmp
movsl
scas
mov
bound
cmc
adc
ret
fidivl
aas
inc
dec
xor
ret
lea
cmp
loopne
push
jno
xchg
push
jp
mov
add
or
or
clc
call
testb
mov
ljmp
cld
fistpl
ret
jne
push
pop
jp
and
fcoms
loopne
sub
rolb
mov
in
adc
mov
out
int3
adc
add
insl
cwtl
fmuls
xchg
pop
sub
ret
mov
inc
aam
pop
cli
jg
rcr
stc
and
pop
pop
push
in
push
sbb
sar
ljmp
stos
nop
fisttpll
xchg
xor
cmpsl
mov
test
push
add
fstl
in
sti
xchg
mov
push
pushf
sbb
ljmp
lods
mov
xor
sti
add
xchg
popf
sarl
data16
and
inc
xchg
mov
sbb
mov
inc
or
decl
or
add
andb
sbb
popf
sbb
loope
mov
pop
xchg
es
mov
mov
pop
jle
inc
inc
mov
xchg
imul
or
sahf
cmp
jecxz
sub
dec
mov
cmc
in
push
pusha
cmp
cwtl
stc
dec
push
pavgb
dec
iret
and
mov
sub
stc
gs
movsb
adc
mov
scas
xor
cmp
xchg
repnz
lods
ret
popa
jg
jle
inc
jmp
out
aas
shll
lea
ja
push
scas
clc
outsl
std
lcall
lret
rolb
popf
cmp
jmp
mov
sbb
stos
xor
hlt
or
jns
inc
jmp
and
fbld
xor
jle,pt
popa
sbb
adc
out
popf
das
cs
add
dec
repnz
sub
cld
fists
sub
rcrb
popf
rcl
mov
inc
mov
aam
outsb
aad
dec
fistpll
out
dec
loop
js
add
or
bnd
rclb
push
sub
js
ret
das
jo
and
fdivl
subb
call
cli
jmp
hlt
pop
and
xor
lcall
out
js
mov
inc
dec
jb
test
jg
test
decb
clc
pusha
and
xchg
jp
and
sbb
ljmp
or
and
fmul
xchg
mov
push
push
test
das
mov
adc
rolb
in
push
mov
out
mov
in
add
mov
mov
mull
and
jg
shl
mov
iret
mov
mov
fldt
outsl
cli
lea
push
orl
loope
stos
outsl
mov
clc
frstor
into
pop
imul
scas
push
loopne
fcomps
popl
inc
rclb
popa
mov
in
sbb
outsl
out
movsb
sbb
jecxz
arpl
dec
and
test
xor
notl
insb
les
mov
data16
inc
and
mov
push
dec
push
sbb
mov
shlb
jecxz
pop
ret
mov
xchg
in
inc
dec
adc
xchg
iret
pmulhuw
notl
xor
mov
xor
sahf
adc
fucomip
cmp
in
mov
lret
and
add
sub
xchg
xchg
loope
sbbl
imul
mov
add
sbb
shrb
rolb
sbb
stos
mov
in
cmpsb
pop
cs
push
or
xor
data16
push
ret
std
or
cmp
aaa
or
sahf
mov
repnz
inc
fistpll
lods
xchg
mov
mov
mov
cmp
dec
cmp
adc
cmc
or
addl
or
iret
cmp
xor
inc
add
test
lds
mov
pop
xorl
adc
xor
mov
dec
in
clc
mov
xor
mov
cmp
std
push
sti
testb
and
sti
xor
movsl
rorl
shlb
jle
gs
out
gs
ljmp
or
sbb
lret
xchg
int3
not
dec
call
lahf
fistl
xor
push
sub
pop
std
aas
or
pop
inc
xchg
mov
push
ret
jmp
mov
mov
lcall
fbstp
sbb
leave
ret
jge
cmp
movl
push
mov
stc
shrb
stos
pop
test
pop
mov
subl
das
mov
mov
data16
dec
xchg
or
sub
inc
fwait
jae
push
mov
mov
adc
mov
int
stos
pop
mov
std
pop
dec
fs
xor
cmpsb
and
add
out
sbb
xchg
lahf
ss
adc
jmp
xchg
jle
fldt
mov
mov
xor
jmp
sbb
push
sub
js
sub
push
sub
das
adc
lret
add
bound
sbb
and
ret
mov
mov
hlt
aas
cmp
lods
sub
aad
adc
cmp
mov
adcl
mov
cmpl
xor
test
negb
push
fimull
push
dec
lret
in
xchg
sub
std
dec
push
add
jp
inc
stos
sbb
push
add
xor
sub
mov
push
xchg
push
imul
cld
dec
add
cld
sbb
repnz
testb
push
or
fistpl
bound
pushf
popf
pop
pop
mov
test
cld
lods
in
and
mov
hlt
fnsave
enter
ss
mov
push
fsubs
lock
das
inc
fistpll
xorb
xchg
sbb
pop
shll
pop
push
loope
jle
test
leave
movsb
loope
loop
movb
cwtl
outsl
add
push
inc
xchg
popa
push
in
or
pop
js
cmp
lret
mov
push
and
add
and
mov
lock
shll
outsl
outsl
push
and
mov
mov
mov
sahf
pop
ret
sub
jge
cmc
mov
mov
cwtl
mov
je
mov
jp
or
js
dec
icebp
incb
repz
pop
dec
mov
jmp
fwait
aad
mov
mov
push
sbb
out
adc
arpl
xlat
ds
mov
add
mov
pop
push
dec
add
push
jge
loop
movsl
xchg
mov
xor
in
mov
inc
and
and
into
xorl
dec
sbb
mov
pop
repz
inc
xor
in
and
pop
push
xchg
pop
test
call
xchg
into
and
pop
cmp
dec
pop
dec
loope
mov
lds
pop
decl
inc
jo
xor
sbb
sarb
or
orl
inc
imul
shrb
mov
loop
mov
cmp
out
mov
loope
pop
xor
loopne
inc
sub
adc
push
aaa
icebp
cli
sbb
jb
mov
cmp
push
mov
mov
sub
add
xchg
std
cli
jne
mov
mov
add
outsb
mov
dec
icebp
jae
or
loop
loopne
testb
push
sbb
pusha
pop
xchg
pop
call
std
in
jmp
orb
xor
mov
sahf
dec
jp
mov
ljmp
out
in
enter
inc
mov
mov
inc
lock
add
xchg
xchg
addl
bound
mov
icebp
sub
push
sbb
incl
fistl
inc
bound
jecxz
cs
xchg
aam
and
gs
ret
cmp
sbb
sbb
sbb
xor
aad
mov
subl
ret
pop
jb
out
inc
cmp
add
jmp
notb
push
inc
inc
mov
jecxz
jno
clc
lcall
outsb
bound
outsb
dec
jge
cmp
xchg
push
repnz
fwait
cmpsl
add
pushl
fdivl
sbb
adc
addb
fs
fbld
xchg
repnz
daa
xchg
mov
jbe
xchg
sahf
iret
mov
jp
loopne
cmpb
adc
mov
or
lds
negb
rcrl
sub
or
adc
inc
mov
push
mov
into
or
xchg
sbb
add
pushf
fildll
pop
adc
out
mov
adc
les
cld
mov
mov
insl
imul
jmp
sti
and
shrb
ret
notb
mov
outsb
dec
ret
inc
pop
test
scas
mov
sbb
push
cmp
mov
mov
xlat
je
shll
dec
int3
popa
test
shll
mov
jns
ret
js
scas
sub
pop
mov
fbstp
mov
xlat
add
jbe
mov
mov
pop
in
mov
aad
xchg
pop
and
mov
jl
pop
fsubr
fists
sub
cmp
sub
mov
pop
sub
dec
lret
cwtl
add
outsl
sbb
cmp
mov
out
cli
adc
mov
rcll
pop
push
pop
xchg
popl
sub
stos
lahf
pop
pushf
mov
fyl2xp1
test
lds
cwtl
mov
mull
sbb
stos
xlat
xchg
sbb
rcrl
imul
pop
pop
cmp
movb
cli
lret
mov
lcall
pop
jle
xor
imul
xor
cmpl
or
lret
outsb
in
outsb
outsl
mov
push
fists
outsl
insl
movsl
fistps
push
imul
or
pop
inc
push
jae
cmc
dec
shlb
cmp
pushl
enter
icebp
arpl
aad
pop
or
sub
popf
inc
lret
testb
pop
mov
icebp
adc
out
repnz
pop
and
mov
jecxz
cwtl
sbb
dec
ja
pop
jl
sub
int3
adc
lret
ja
fistpll
inc
cmp
inc
mov
scas
sub
add
fistpll
inc
nop
movsl
mov
decl
movsb
fldcw
mov
adcl
call
pop
pop
movsl
test
and
dec
dec
test
mov
pop
std
inc
lock
in
movsb
mov
dec
rcrb
lock
jle
sbb
aaa
xchg
roll
mov
adc
lods
stos
sahf
negl
cs
insb
sbb
mov
sub
mov
ds
call
or
cmc
faddl
cli
js
push
cli
pushl
addr16
xchg
pop
jl
dec
push
fsubp
ret
pop
push
in
mov
addr16
pop
outsb
inc
push
dec
xchg
cmp
push
push
pop
mov
add
std
mov
fists
nop
pop
call
cmp
fidivl
mov
mov
lahf
push
xlat
and
adc
std
in
mov
mov
inc
decb
std
outsl
flds
rcl
mov
jno
arpl
dec
mov
arpl
test
xor
or
or
xchg
cmp
and
push
xchg
sbb
out
mov
outsb
jge
ret
test
adc
and
inc
minps
ja
ljmp
mov
pop
inc
enter
or
daa
test
dec
cmp
adc
mov
ja
mov
sbb
hlt
pop
fcomps
and
jns
aas
add
jl
ret
pop
insl
lods
mov
jb
mov
imul
jnp
pop
daa
inc
repz
test
sbb
xchg
lock
inc
mov
push
push
clc
loopne
iret
adc
xchg
lock
sbb
ss
push
fsubl
jb
mov
mov
das
cmp
mov
mov
addr16
or
mov
or
pop
cmpsl
outsb
pop
fs
popa
clc
lcall
cld
out
or
and
pusha
or
xor
xchg
mov
insb
arpl
inc
leave
sub
mov
clc
jl
sub
xor
xor
outsb
scas
out
pop
jle
dec
std
imul
or
popa
imul
fisubrs
clc
aad
hlt
xor
pop
and
mov
mov
inc
ds
roll
incl
cmp
cld
jo
les
push
xlat
shll
test
mov
mov
xchg
cltd
mov
jb
mov
xchg
stos
or
addb
mov
pop
mov
mov
bound
orl
or
fsub
sbb
mov
shll
fnsave
add
pop
cmpsb
mov
mov
inc
push
pushf
vmovddup
hlt
nop
inc
xor
cltd
fiadds
pushf
insl
stos
xchg
inc
ret
add
cwtl
dec
push
js
sub
aaa
enter
lds
mov
call
cmpsb
sbb
adc
leave
aas
ret
cmp
xlat
jp
fidivrs
iret
leave
dec
and
pop
sub
loope
shrl
mov
lahf
or
adc
cmp
inc
adc
sbb
nop
dec
js
aam
ja
shll
pop
push
push
ds
inc
int3
inc
pop
push
outsb
clc
repz
dec
sbb
inc
lock
inc
test
add
push
xor
addr16
clc
outsl
fcomi
dec
pop
mov
mov
je
sbb
aaa
js
pop
xchg
loope
clc
sar
inc
push
and
push
push
sbb
inc
stos
cli
shrd
pop
das
sub
hlt
pop
push
pushl
sti
scas
cmp
pop
test
in
mov
test
insb
or
mov
jmp
addb
jo
fwait
push
outsl
loopne
pop
rol
pop
ss
dec
fadds
push
lret
mov
xchg
inc
sub
std
adc
enter
aas
test
std
pop
mov
ret
add
xorl
jne
mov
adc
mov
pop
ljmp
out
mov
xchg
pop
or
dec
ljmp
mov
inc
jge
outsl
imul
adc
and
push
xlat
aad
in
insl
ljmp
std
cmp
outsl
mov
sahf
pop
push
loop
addr16
jge
das
fisttpll
xchg
inc
frstor
jnp
imul
xor
loopne
out
clc
mov
mov
outsl
ret
jne
daa
pop
rcl
rcrl
fdivrl
push
mov
std
sbb
lfs
and
outsl
call
xor
xchg
sarl
shrb
jecxz
push
dec
sbb
sbb
mov
mov
or
in
daa
insb
push
add
pop
adc
mov
loopne
fs
clc
inc
jg
jno
push
pushf
dec
fisttpl
adc
inc
lret
jmp
cld
ficomps
bound
lcall
adc
sbb
add
lock
test
gs
dec
in
cmp
cltd
shll
xchg
movsb
push
jle
push
lods
mov
or
movsl
ljmp
inc
push
add
jecxz
mov
mov
lods
cmp
icebp
insb
sbb
xor
cs
dec
add
stos
fs
xlat
das
mov
xor
and
sbb
popa
add
arpl
lods
in
adc
xor
jo
in
pop
xchg
push
inc
jle
mov
js
jmp
mov
sub
pusha
test
ret
orl
fsubrp
les
into
mov
hlt
inc
fisubs
mov
shl
test
jnp
and
lcall
mov
push
and
xor
add
push
xchg
imul
push
pop
rol
push
rcl
xchg
icebp
xchg
rcrb
cld
add
pushf
icebp
push
in
jbe
dec
mov
fidivrl
and
outsl
loopne
ficoms
test
jg
mov
sub
add
pushf
scas
mov
pop
sub
mov
pushf
int3
jle
add
cmpsl
fwait
mov
nop
xlat
stos
xchg
out
enter
loope
dec
xchg
shlb
xchg
int3
inc
lahf
loopne
rclb
cmpsb
xchg
mov
fistpll
cmp
inc
adc
sti
mov
out
sti
das
adc
add
por
jmp
sub
pop
mov
push
addb
pop
jl
sub
inc
xorb
into
jl
add
push
ljmp
or
or
loopne
adc
mov
movsb
int
mov
cld
cmp
loopne,pn
mov
sbb
xchg
push
inc
jne
sub
outsl
fistpl
pop
test
repz
or
dec
jb
outsl
je
mov
mov
jmp
lock
loopne
cmpxchg
imul
lea
xchg
dec
mov
xchg
scas
lret
xor
call
xchg
cs
xor
mov
mov
dec
mov
sbb
mov
decl
or
push
loop
sbb
mov
mov
pop
lcall
test
shlb
loope
orb
mov
enter
inc
ret
mov
decl
scas
into
pop
dec
movsl
sbb
orl
xor
out
pop
ret
jae
dec
ja
sbb
call
cli
insl
inc
aad
aaa
repz
rcrb
adc
daa
mov
adc
cmp
jbe
dec
imul
push
int
ret
xor
lahf
in
fwait
xchg
seto
jge
add
ljmp
lds
sub
push
jl
cmp
mov
jg
mov
incb
ret
cmpsl
jmp
and
pusha
mov
jmp
inc
jecxz
pop
push
mov
mov
mov
rolb
leave
cwtl
icebp
aaa
jo
decl
xchg
mov
sub
cmp
out
mov
xchg
scas
ss
loop
xor
inc
cmpsl
movsl
ja
fwait
dec
aaa
add
or
pop
fdivr
pushl
sub
mov
xor
pop
mov
mov
gs
cmc
aaa
sbb
mov
xchg
xchg
repnz
ljmp
xor
jne
ljmp
pop
addr16
inc
push
xchg
out
js
dec
cmova
aad
jmp
insl
ja
call
cli
mov
mov
cmp
push
ljmp
sub
mov
and
mov
enter
adc
mov
jns
test
loop
jmp
mov
clc
jmp
daa
mov
inc
shlb
test
push
push
call
add
mov
js
clc
lret
mov
stos
mov
mov
xchg
mov
hlt
jmp
adc
inc
sbb
movsl
xor
lock
mov
sbb
scas
xchg
xchg
repz
hlt
and
xchg
dec
dec
or
leave
jne
arpl
stos
pop
paddd
sbb
pop
scas
xchg
ja
jno
les
lea
xor
mov
std
ljmp
sub
sub
jecxz
je
mov
inc
xor
pop
jne
adc
decl
fwait
dec
mov
mov
push
pop
pop
dec
arpl
sar
inc
in
dec
mov
stos
shr
jne
fsubrp
push
in
stos
fistps
test
call
add
dec
dec
xchg
std
arpl
cli
push
icebp
xchg
ja
jo
daa
cli
clc
addb
xchg
or
in
xchg
mov
imul
stos
outsl
cld
call
sub
ds
lds
pop
mov
mov
test
jmp
and
fldt
fstpt
imul
decl
xorl
fsts
xor
loop
push
lahf
insl
dec
add
jmp
xor
lcallw
gs
xorb
push
jg
adc
jg
mov
xchg
xchg
xor
cli
cmp
sbb
dec
insl
sahf
rol
mov
push
bound
inc
xchg
xchg
neg
aam
add
out
sbb
ljmp
cmp
rolb
mov
out
int
mov
xchg
notb
and
shrb
inc
scas
mov
incl
imul
test
clc
inc
pop
dec
in
decl
lcall
pusha
movsl
add
int3
mov
clc
xchg
sbb
xchg
xlat
sahf
inc
push
jg
incl
adc
mov
adc
ficompl
sbb
fucomip
sti
push
cmp
ror
add
mov
cmp
decl
dec
movsb
aaa
in
sub
mov
pop
addr16
dec
fdivr
dec
fldt
jg
mov
dec
mov
test
and
outsb
and
xchg
lea
ljmp
jg
cmp
inc
xlat
mov
faddl
cmp
call
mov
in
and
dec
testb
and
fsubl
ljmp
insb
mov
inc
mov
std
jo
and
bound
hlt
movsl
push
js
inc
pop
sub
shrl
and
clc
mov
lock
fdivrl
mov
mov
xor
incl
loop
scas
sbb
xor
out
cli
popa
cmp
das
cld
jmp
lret
ds
scas
push
jmp
fdivs
xchg
or
int3
cli
mov
and
cmp
in
or
imul
movsl
mov
lock
sub
cltd
in
nop
cmp
adc
sbb
in
fnstsw
rcrb
nop
das
cld
sbb
adc
data16
aas
repnz
movsl
cmp
or
daa
jno
push
cmp
cli
inc
jg
pop
push
mov
or
fistpl
xor
dec
pop
daa
call
shll
inc
out
jb
pop
push
xchg
sub
ja
jl
jge
inc
shl
das
cmc
mov
inc
insl
aad
mov
or
xchg
arpl
lea
pop
and
out
out
jg
xchg
dec
fstl
mov
jle
add
addr16
inc
pop
rorb
lcall
lock
inc
push
inc
pop
sub
add
and
inc
into
icebp
int3
push
repnz
and
outsl
inc
jbe
push
test
push
in
loopne
hlt
and
xchg
jge
sub
imul
insb
adc
mov
and
pushl
sbb
push
popf
pop
sbb
arpl
imul
lcall
int3
fists
xor
sub
mov
nop
pop
cmp
inc
pop
mov
call
dec
or
shrl
xchg
leave
cmp
cli
inc
ss
pop
pop
sti
jg
test
dec
sbb
cmp
outsb
inc
or
les
mov
ljmp
xor
sbb
pop
in
inc
mov
push
push
movsl
subb
or
test
jmp
call
fsubrl
lea
inc
fcoms
out
inc
and
sub
test
pop
sbb
int3
inc
mov
repz
imul
cmpsb
adc
imul
call
fs
shrb
dec
repz
sti
pop
lret
in
inc
rolb
dec
or
lcall
jecxz
mov
and
inc
cmpsb
repnz
add
loope
sub
and
les
lcall
cmp
adc
adc
push
xchg
push
mov
cmc
adc
ja
sub
ljmp
daa
pop
in
nop
sub
js
sub
aas
jne
push
dec
aam
cmp
scas
cmpsb
cld
push
outsl
push
sbb
in
jecxz
push
push
icebp
sbb
pop
inc
jo
arpl
das
movsl
ss
incl
int3
scas
subb
pusha
cmpsl
mov
mov
into
in
xor
push
sub
pusha
jg
mov
aam
dec
adc
add
xchg
test
cmp
lcall
xchg
lret
sub
imulb
mov
push
stos
loop
aaa
or
xor
jg
jae
mov
jp
pusha
mov
insb
cmp
popa
inc
lods
in
inc
adc
filds
push
xchg
into
add
xchg
inc
ljmp
andb
sub
mov
xor
xchg
or
jp
jns
movsb
mov
mov
push
jno
or
jmp
out
int
sub
jge
dec
insb
mov
xor
or
dec
cmpsl
test
aas
or
mov
das
mov
ljmp
outsl
pop
inc
leave
pop
negb
popa
lcall
push
clc
decl
fwait
cmp
inc
mov
dec
mov
mov
fildl
outsl
cld
pushl
cmc
sub
dec
gs
dec
dec
xchg
dec
or
imul
lcall
std
jnp
dec
out
xchg
outsb
popa
dec
scas
lods
pop
mov
rcrb
in
xchg
clc
decl
sub
cmp
adc
pop
push
movb
push
cli
inc
or
dec
adcb
or
or
inc
adc
jecxz
mov
cld
lods
int3
std
mov
sbb
pop
out
shll
cmp
mov
push
test
loope
pop
mov
or
call
push
iret
jmp
add
stc
adc
lcall
hlt
js
insl
insl
cmp
mov
lock
iret
inc
push
xchg
pop
add
jecxz
test
jp
cli
dec
add
inc
add
imul
ljmp
jb
or
fmull
add
js
add
scas
dec
xor
nop
pusha
push
inc
inc
sub
mov
je
adc
jnp
cmpsl
stos
popa
cmp
mov
xchg
call
sahf
lret
sbb
imul
ret
push
pop
adc
in
mov
ljmp
lock
dec
mov
popf
push
push
sti
mov
lods
jno
jmp
xor
adc
int3
sub
hlt
cli
sbb
mov
inc
and
incl
add
jae
dec
mov
test
fldcw
mov
cmp
into
out
call
or
add
vminpd
sbb
mov
decl
cwtl
lods
dec
shlb
cltd
mov
stos
aam
jnp
testb
sub
jae
mov
xchg
pop
push
inc
xchg
push
adc
dec
popf
dec
adc
repz
mov
fwait
sti
enter
fadd
jmp
pushf
pushf
xchg
pop
addr16
loope
pushf
sbb
pop
ss
xchg
sbb
in
push
sub
mov
xchg
iret
push
cs
pop
push
mov
xor
sub
sahf
jb
dec
adc
ljmp
and
mov
xchg
sbbb
jno
pop
push
sbb
in
cmp
ss
mov
stc
movsb
call
jno
out
mov
dec
mov
pop
mov
sbb
push
incl
decl
dec
popf
lods
dec
mov
mov
stc
outsb
imul
out
lcall
stos
sahf
out
cltd
push
cmc
pop
shll
jnp
pop
mov
in
test
push
cli
aam
jno
add
inc
mov
push
movsl
or
stc
insb
jns
test
ljmp
xchg
jbe
stos
das
cld
mov
pop
mov
int
jne
pop
mov
adc
mov
inc
outsb
hlt
lea
ficoml
mov
and
lcall
lea
jno
jns
ds
mov
incl
call
mov
and
std
repz
or
cmc
icebp
mov
sbb
orl
ss
je
mov
jmp
push
jg
and
fisttpl
xchg
and
aad
sbb
cltd
sbb
and
rorl
xor
cld
xchg
stos
inc
or
and
testb
dec
std
lea
popf
sub
push
mov
fwait
lods
addl
xor
incl
push
xor
mov
cmpsb
mov
incl
mov
add
lcall
cmpsl
fsubr
cli
fstps
fstpt
aas
aas
xchg
in
into
lret
xor
jns
pop
xchg
fistl
cmp
and
xor
add
xlat
xor
pop
cwtl
aas
repz
stos
popa
push
fistpl
mov
shr
dec
lcall
lds
jae
out
js
test
and
ss
mov
mov
and
or
lret
ds
jns
fs
push
cmpsl
sub
ja
cmp
ss
subb
jge
arpl
in
aaa
dec
insb
dec
adc
and
jmp
test
call
jno
aam
sbb
and
pushf
out
add
aam
mov
mov
xchg
cmp
sub
push
dec
push
ret
pop
sahf
push
inc
das
cmc
fcomip
jg
cmp
xor
aaa
mov
hlt
add
das
jmp
pop
cli
ljmp
dec
pop
inc
rol
scas
lods
jecxz
cli
call
out
movsb
ljmp
mov
push
dec
inc
sbb
mov
pop
adc
fs
xchg
flds
adc
mov
les
push
das
sti
aaa
std
jg
add
int3
adc
jmp
cmp
mov
mov
pop
leave
inc
jmp
push
ljmp
imul
mov
lods
inc
dec
ffree
mov
pushf
cld
call
add
imul
out
movsb
stos
icebp
jp
cmp
popa
jae
sahf
cmpsb
pusha
or
outsl
adc
mov
fs
rclb
ljmp
push
adc
xchg
xor
xchg
push
mov
mov
idiv
int3
xchg
jb
scas
inc
dec
lret
rcrb
daa
fbld
aaa
in
mov
rcrb
pushl
in
in
cmp
jo
xchg
mov
adc
sti
movsl
pop
cmpsl
jns
jg
stos
xlat
lods
shlb
testl
mov
mov
mov
mov
sub
outsb
ret
adc
arpl
dec
movsl
shrl
cmp
pushl
push
adc
xchg
in
sarb
mov
pop
test
pop
decl
sub
inc
pop
and
rolb
pop
call
decl
cwtl
test
or
cli
adc
testl
cld
lea
pop
and
adc
push
shll
clc
mov
in
sub
popl
dec
in
push
lcall
and
and
dec
cs
xor
sub
lea
lret
lods
push
jecxz
fidivrs
and
adc
testb
es
mov
push
pop
lock
and
pop
bound
mov
mov
enter
mov
scas
and
mov
jp
out
or
dec
decl
cmp
sbb
in
adc
fucomip
xchg
xchg
out
iret
mov
rol
and
xor
jle
and
cmp
jg
incl
mov
stos
ds
jo
mov
sub
push
sti
ja
adc
mov
or
jb
test
negl
pop
test
add
cmp
xor
call
int
pushf
sbb
das
icebp
stc
and
sbb
dec
cld
or
fs
nop
add
xor
sarb
pusha
mov
outsl
cmp
iret
cmp
and
call
testl
ret
inc
je
inc
clc
call
stc
lret
push
sar
fmul
mov
fs
mov
les
jp
mov
pushf
mov
inc
int3
dec
rcl
dec
sti
shll
mov
clc
jmp
jp
cmp
pop
cmpsl
sub
mov
pushl
jb
in
xchg
nop
insb
dec
enter
mov
jae
dec
ljmp
mov
leave
pop
xor
mov
idivb
sub
ljmp
inc
jp
pusha
repz
add
iret
call
xchg
mov
loopne
mov
sahf
mov
fcomi
adc
inc
leave
ljmp
cmp
inc
movsl
mov
pop
xor
dec
ljmp
jmp
out
js
or
xchg
jecxz
inc
pusha
pop
sub
push
fistps
jo
lcall
pushl
imul
repz
sbb
enter
sub
scas
mov
cmc
pop
loopne
mov
stc
sbb
lea
mov
incl
mov
call
fisttpll
out
xchg
pop
leave
xor
clc
or
cmp
fadds
pusha
adc
mov
xchg
mov
jmp
gs
inc
mov
inc
rclb
inc
cmpb
fwait
outsl
lcall
push
cmp
fwait
daa
xor
mov
fwait
popf
xchg
scas
out
lea
lret
subb
sbb
mov
jmp
mov
jp
ret
adc
sarb
cld
ljmp
and
adc
bound
pop
imul
lds
in
aam
xor
outsl
lock
mov
push
daa
into
cmp
xlat
loopne
xchg
ficoms
test
lcall
push
xor
lds
orl
pushw
bnd
dec
cmp
jg
call
fdivrl
mov
adc
mov
and
test
xchg
push
addr16
pop
test
cmpsb
jge
pop
jnp
call
cmp
fstps
ffreep
or
int
bound
incl
pop
ja
leave
push
mov
jle
rorb
cmpb
jle
pop
mov
cmp
xchg
add
jl
xor
fucom
xlat
movsl
jmp
dec
sbb
push
pop
loop
cwtl
pop
mov
push
xor
jmp
push
test
push
aaa
adc
xchg
mov
push
and
xlat
daa
add
lea
sbb
mov
cmp
xor
jae
push
ljmp
adc
mov
jo
fwait
xor
cmp
cmp
pop
nop
icebp
ljmp
hlt
mov
rcrb
in
push
mov
push
lods
cltd
ljmp
sub
stc
cmp
dec
mov
fildl
sbb
into
mov
popf
ret
movsl
clc
call
push
fmull
xchg
or
pmaxsw
mov
repz
lock
mov
mov
push
pop
je
cmp
sub
mov
mov
pslld
out
xor
jns
aas
lods
xchg
mov
outsb
pop
or
or
inc
movsb
pop
decl
cmc
sahf
bound
jg
into
cmc
inc
and
gs
fcmovnu
mov
inc
stos
lods
add
jg
mov
sbb
xchg
stos
mov
dec
dec
cmc
jg
mov
sbb
xchg
enter
jge
andb
sbb
or
andb
jo
mov
jg
cmpsb
ficompl
test
pushl
and
inc
push
dec
push
sbb
mov
pop
sub
ljmp
dec
sub
call
rorl
imul
call
nop
sub
and
and
test
push
shll
xchg
js
add
test
sbb
scas
sbb
mov
cld
stos
subl
cmp
xchg
aaa
imul
rcr
fs
aad
or
adc
hlt
dec
mov
push
push
push
or
out
xchg
call
mov
cli
test
jns
daa
dec
dec
cmp
mov
mov
ljmp
cld
and
dec
std
lcall
pop
push
push
sti
rolb
rsqrtps
adc
test
add
jmp
mov
adc
imul
cmpsb
and
mov
decl
out
fnstenv
sbb
jmp
enter
mov
or
call
ss
ljmp
aaa
je
dec
es
popf
les
cltd
cmp
mov
jg
lcall
bswap
xor
loop
mov
add
add
pop
cli
jmp
invd
jno
dec
jge
int
sub
inc
in
lea
jge
pushl
push
mov
and
jns
mov
je
adc
mov
testl
push
int3
sahf
xchg
hlt
jo
out
ret
inc
push
incl
sbb
cltd
xchg
xor
pop
xor
jmp
rclb
ss
push
dec
cmp
jae
sbb
std
lods
pop
scas
hlt
inc
cmp
loope
cltd
insb
popa
dec
int3
cld
dec
cmc
js
fistl
es
fcmovne
or
movsl
jb
cld
dec
sbb
subb
xchg
es
ss
jle
sbb
decl
popf
aad
inc
mov
leave
push
jb
cmp
insb
cs
cmp
movsl
aaa
clc
stos
movsl
sbb
pop
mov
js
out
dec
mov
decl
xor
ret
mov
pushf
scas
and
and
dec
out
cmp
jb
daa
adc
pushf
in
or
iret
sub
fcomp
jmp
sub
ljmp
aam
adc
mov
fcmovnb
dec
nop
lret
cmp
js
insb
clc
jg
mov
pushf
and
pop
sets
sbbb
test
iret
mov
dec
std
dec
or
sub
jno
push
jp
lret
aad
lret
mov
add
gs
push
aas
push
incl
hlt
cmp
add
lods
filds
and
fmulp
xchg
scas
iret
sbb
push
dec
and
pusha
mov
mov
arpl
aas
or
insl
sbb
cmp
mov
dec
lret
and
dec
das
cmp
xor
shlb
scas
popf
pop
fildll
jle
jg
mov
and
fstps
mov
add
daa
test
mov
enter
mov
mov
out
cmp
dec
mov
xchg
pusha
into
lea
inc
outsl
hlt
jg
cwtl
mov
into
add
dec
adc
push
notl
test
rcrb
scas
ret
les
inc
xchg
cwtl
and
scas
test
jecxz
mov
int3
jl
lret
stc
and
repnz
sti
mov
or
inc
dec
mov
push
push
mov
and
pop
cli
fs
jg
and
lret
pop
loopne
int3
inc
jo
xchg
push
out
jge
das
sub
cmp
fiadds
push
xchg
test
ljmp
loopne
hlt
jl
scas
hlt
mov
iret
add
cmp
cmp
mov
addr16
js
sub
cmp
test
repnz
cli
pushl
clc
enter
push
add
gs
xchg
mov
test
push
add
call
shlb
mov
mov
jbe
hlt
cvtpi2ps
push
inc
mov
mov
jmp
xor
pop
inc
adc
dec
sub
cmpsb
mov
jg
stc
scas
sbb
jae
shl
into
addr16
push
dec
aad
lret
jo
insl
xchg
sbb
jmp
mov
aam
push
cmp
movsb
addr16
pushf
xor
incl
mov
xchg
stc
shll
cmp
aas
out
or
dec
lods
adc
push
cld
decl
adc
sub
mov
mov
mov
les
test
sub
fbstp
cmpsb
leave
or
subl
pop
gs
std
jg
xchg
jnp
out
in
push
cmp
fisubs
inc
test
ljmp
xchg
jmp
std
inc
xchg
push
push
aam
xchg
xor
repz
mov
or
mov
pop
cmp
fwait
out
mov
ljmp
lcall
mov
fisttps
cs
popf
pop
mov
push
cld
xchg
xor
addr16
pop
shrl
pop
inc
jmp
xor
lods
pop
adc
movsb
add
in
lcall
leave
and
xlat
fimull
adc
or
inc
and
mov
dec
aaa
ljmp
cwtl
push
stc
sahf
push
stc
xchg
cld
mov
adc
subl
stos
dec
adc
pushf
cmc
icebp
pop
jo
mov
scas
sbb
jg
sub
xchg
rorb
ret
in
fisubrs
decl
cmp
ljmp
mov
push
clc
add
pop
subb
adc
lea
ljmp
daa
mov
daa
add
sbb
dec
mov
sub
flds
xchg
imul
pushf
inc
jo
nop
push
or
sbb
lds
mov
std
ljmp
jmp
push
insl
mov
cmp
push
mov
cmp
sahf
mov
pop
call
icebp
dec
inc
lods
add
pop
jno
shll
cmp
lcall
sbb
aas
insb
movl
xorps
popa
insb
dec
dec
outsl
fiaddl
sub
jg
decl
lods
inc
inc
arpl
data16
sub
jbe
dec
fisubl
push
fisubrl
cld
imul
mov
sarl
xchg
popf
push
hlt
ret
call
iret
jnp
xor
push
jno
mov
mov
add
ljmp
std
mov
adc
pop
jbe
daa
sub
stos
in
dec
sub
call
ret
push
pop
pusha
fdivs
mov
mov
rcrb
std
hlt
scas
orl
clc
pushl
mov
stos
jecxz
cltd
push
xor
loopne
push
test
pop
push
push
xchg
mov
xor
mov
cmpsb
mov
push
imul
mov
push
decl
push
push
add
nop
pop
cmpl
or
std
xchg
in
inc
jge
movsl
call
pop
pop
je
pop
gs
and
fbstp
aaa
test
ljmp
add
push
xor
leave
stos
jg
and
ficompl
lcall
dec
add
cmp
movsb
sahf
jnp
scas
aaa
cmpb
mov
or
dec
lea
ljmp
and
fmull
jne,pn
mov
imul
lcall
mov
inc
in
pop
iret
push
popf
setne
jo
sub
mov
outsl
rcrl
mov
aaa
push
inc
leave
fidivrl
lea
mov
test
out
and
sbbb
xor
je
sub
into
and
or
sub
cltd
call
decl
pop
push
dec
lods
decb
sub
push
xor
mov
push
jne
adc
pushl
jno
cmp
jg
xchg
mov
test
adc
mov
mov
and
pop
fdivp
dec
clc
pop
js
or
loopne
dec
cmp
aaa
fidivrl
xchg
and
cwtl
movsl
jae
mov
pushl
ret
imul
adc
pop
popa
inc
inc
dec
and
mov
lret
ss
mov
adc
dec
inc
dec
jmp
and
and
sbb
push
mov
test
inc
mov
jge
or
xor
push
sub
icebp
mov
push
dec
push
test
incl
nop
cmpsl
sub
scas
mul
mov
data16
xchg
mov
mov
subl
mov
cmp
jns
mov
jae
lcall
std
test
movsb
xchg
sbb
repz
pop
ret
sbb
cmpl
clc
jb
sbb
cmpsl
dec
or
movsb
js
sub
stos
mov
xchg
jle
mov
jmp
sbb
mov
mov
push
hlt
xchg
push
outsl
cli
std
lret
lea
stos
xor
mov
shr
xor
je
or
xchg
or
push
push
fsubr
mov
inc
fisubl
ljmp
jg
or
dec
cmp
or
jge
movsl
cltd
das
cmc
inc
xchg
xchg
imul
or
inc
mov
push
or
jge
andb
dec
sub
jecxz
cmp
icebp
xchg
rolb
lods
jl
fistpl
rcrb
ja
xchg
movsb
pusha
aam
outsl
nop
lcall
std
adc
jle
sbb
mov
push
sbb
push
push
adc
sbb
inc
out
xchg
test
cmp
ljmp
icebp
clc
out
test
jae
xchg
mov
cli
scas
mov
adc
fidivrs
int
incl
add
movsl
fwait
in
mov
jo
sbb
sti
pop
jp
lds
sahf
adc
jg
lea
jl
fimull
addr16
shlb
jns
fists
jmp
stos
clc
pop
add
in
insb
inc
dec
clc
lcall
shl
lods
mov
xchg
movsb
shrb
cltd
gs
push
mov
clc
inc
xchg
clc
mov
pop
std
add
pusha
js
decl
cmp
mov
stc
insl
daa
dec
sbb
je
rorb
sti
pop
loopne
clc
inc
cli
lret
dec
js
imul
sbb
inc
mov
xchg
xor
insb
shll
inc
add
xor
jbe
mov
shll
xchg
pusha
daa
pop
pop
fstp
stos
mov
pop
jae,pt
popf
inc
xor
pop
sbb
sar
call
or
xchg
leave
insb
lcall
mov
mov
mov
lods
cmp
fdivrl
jno
jno
bound
push
push
incl
lcall
push
jns
jl
cltd
ss
sbb
add
or
cmc
xlat
mov
mov
xor
pop
out
sub
outsl
mov
jg
jbe
popa
mov
shlb
add
push
movsb
neg
mov
mov
sbb
mov
mov
inc
and
mov
push
inc
xchg
int3
xor
bound
inc
dec
push
mov
ja
js
es
push
sub
or
bound
cmp
mov
int3
sbb
decl
daa
fwait
enter
dec
xor
push
iret
xchg
fistl
shlb
shlb
mov
ljmp
inc
icebp
iret
mov
jb
int
roll
jle
lods
mov
adc
push
mov
call
inc
adc
loopne
repz
xor
stos
adc
fucomip
outsl
pop
adc
jmp
inc
or
and
mov
xor
or
lds
rcrb
mov
mov
dec
call
in
mov
jne
sbbl
imul
clc
jmp
test
hlt
incl
sti
jmp
and
ljmp
inc
dec
jg
das
mov
int3
rcll
jecxz
shl
mov
sarb
jbe
movsb
decl
outsl
fnstenv
xchg
es
and
mov
test
and
jmp
in
icebp
or
movsb
pop
mov
adc
pop
xor
jbe
or
ljmp
movsl
xchg
cmpsb
js
stc
jmp
jecxz
sub
sub
push
ds
clc
xchg
and
imul
shl
adc
and
incl
mov
push
lods
push
jb
les
mov
mov
dec
xchg
imul
lcall
cld
sbb
jle
xchg
mov
and
lret
jg
lcall
jae
xchg
out
mov
push
imul
aam
lahf
mov
dec
call
call
lds
push
mov
test
adcb
cmc
loop
jg
pop
lcall
testb
pop
mov
aaa
decb
pushf
mov
ljmp
mov
mov
mov
xor
inc
inc
dec
sbb
call
nop
movsb
insl
inc
and
stos
loopne
add
xchg
sbb
mov
lcall
out
jne
daa
std
push
dec
jae
outsb
sub
int
and
dec
cmpsb
shrl
mov
cld
clc
out
xor
mov
xchg
orl
aam
int3
dec
bound
inc
add
lea
and
dec
inc
loop
inc
pop
dec
pop
mov
out
int
data16
push
adc
shll
mov
roll
loopne
cmp
or
cmp
cmp
insl
pushf
ret
fwait
adc
and
mov
xor
fwait
push
add
call
cmpsb
cmp
movsl
str
add
push
sub
pusha
pop
xchg
icebp
insl
mov
push
mov
dec
jae
out
call
cmp
push
inc
clc
icebp
mov
jecxz
and
icebp
push
mov
lods
out
int
cld
fists
push
pop
add
jg
aaa
dec
repz
lret
inc
cwtl
pop
push
test
sbb
mov
pop
add
sbb
and
movd
test
mov
dec
test
ljmp
push
pop
xor
adc
sti
ljmp
movsb
xchg
xchg
into
mov
dec
loopne
call
pushf
pop
imul
mov
das
enter
xchg
cmp
xchg
loope
daa
jge
ja
fistpll
pop
or
mov
icebp
inc
xor
push
sub
xor
lahf
rcll
add
lods
dec
add
add
push
cmp
push
fs
arpl
icebp
push
pop
cld
rorl
jmp
jno
addb
loope
and
cmpsb
push
js
imul
add
rol
xchg
inc
xchg
out
xchg
fidivrs
out
cmc
out
mov
push
and
xlat
ret
clc
push
sub
push
jmp
fs
mov
cld
xchg
sahf
sub
repz
cmp
mov
cmpsb
jge
push
sbb
push
lret
xor
xchg
push
rcrl
push
mov
call
and
call
insl
jmp
sar
lcallw
lcall
lea
gs
stos
aad
fsubl
sbb
pop
cmc
mov
push
mov
pushl
or
outsl
mov
repz
jecxz
cld
pushf
mov
and
out
and
or
jg
std
frstor
cmc
jmp
loope
cmp
pop
insl
repz
mov
pop
mov
in
dec
fwait
mov
adc
pusha
lods
jmp
push
cs
sub
cmp
jmp
ja
jge
clc
jns
mov
pushf
iret
call
and
cltd
in
scas
popf
xchg
idiv
call
mov
andl
mov
and
inc
mov
jmp
lods
call
stc
sbb
fldt
scas
xchg
and
lds
hlt
xor
lret
test
pushl
and
cmp
lock
fildl
vpminub
jne
mov
xchg
loop
jg
push
sbb
pop
dec
cmp
lods
xchg
sub
cs
or
xchg
scas
jae
pop
jno
stos
outsl
cld
shrd
push
fbstp
ret
inc
push
pop
cli
out
out
dec
std
decl
fbstp
stos
sub
icebp
dec
roll
hlt
lds
das
in
jnp
and
sbb
mov
sbbb
lcall
imul
jle
lret
and
push
sub
sarb
mov
mov
mov
jmp
adc
out
pop
sub
pop
jge
adc
and
loop
mov
jge
scas
mov
inc
out
test
pop
or
push
jle
scas
dec
scas
test
fdivs
mov
ljmp
sub
int3
mov
in
shrb
call
aas
aaa
call
adc
shl
inc
mov
pop
roll
insl
aam
cld
push
mov
bound
cwtl
in
adc
out
sbb
popf
lahf
int
jbe
sbb
lcall
das
pop
inc
or
jge
cmpsl
scas
jmp
xor
xor
loopne
fbld
mov
cmp
jecxz
lea
incl
addl
or
add
jmp
jecxz
jns
or
inc
inc
aas
mov
outsb
repnz
or
lcall
dec
inc
cmp
fwait
push
inc
cltd
es
stos
incl
inc
adc
inc
jle
lret
scas
xlat
and
mov
je
std
fidivrs
ljmp
dec
fsts
nop
aam
aad
cmp
inc
scas
jno
mov
mov
call
fs
mov
sbb
jecxz
pop
inc
jp
sbbl
mov
xchg
xor
mov
rcrb
bound
out
sahf
cmp
or
lahf
ljmp
mov
mov
in
inc
lods
cmp
cs
cmpsl
jge
imul
push
inc
push
sbbb
jp
sar
lahf
or
cltd
orb
pusha
aam
adc
das
mov
jecxz
or
sar
push
data16
push
jno
sbb
call
cmpsl
arpl
cmp
jbe
mov
mov
dec
imul
mov
fadds
and
pushl
add
cli
mov
push
fdivrl
mov
in
pop
adc
adc
pop
push
push
aam
out
inc
adc
test
mov
lock
arpl
and
inc
mov
xchg
movsl
sbb
idivl
in
jp
jecxz
cli
xor
sub
scas
add
jno
rorb
sbb
xchg
lcall
jmp
shlb
xchg
jle
leave
loopne
jle
popa
mov
jbe
mov
inc
push
push
pop
pop
imul
notb
pop
aam
mov
orb
dec
and
add
mov
jns
mov
bswap
dec
xor
or
xchg
jb
inc
dec
psrad
cmp
loope
push
decl
pop
add
dec
movsl
inc
jno
leave
cmpsb
stos
iret
repz
push
xorl
mov
mov
in
xchg
stos
pop
add
pushf
add
adc
decl
dec
lret
cs
sbb
daa
mov
dec
dec
mov
mov
call
pop
or
pop
push
jge
jle
mov
pop
inc
fidivl
sbb
jnp
inc
movsl
mov
inc
lcall
and
dec
into
loope
sub
ljmp
aaa
int3
jge
aas
outsb
or
cmc
inc
mov
sahf
xor
and
pushl
or
int
and
outsb
lret
jmp
dec
mov
loop
jp
jmp
push
push
mov
xchg
push
sarl
jnp
sarl
pop
loopne
incl
dec
loope
cmc
je
push
sub
mov
xor
decl
sub
loop
int
fs
stos
popa
jl
fidivs
fwait
nop
sbb
lcall
cli
push
push
dec
out
lret
mov
sub
mov
push
xchg
cmp
mov
pushl
inc
icebp
clc
mov
ja
popf
add
imulb
mov
jle
xor
pop
loopne
or
fwait
mov
mov
xor
outsl
pop
mov
sbb
repz
xchg
dec
xchg
xor
jg
mov
cmc
je,pt
dec
lcall
gs
mov
push
cs
pushl
clc
cmp
fistl
loopne
rolb
mov
cltd
sti
xor
xor
pop
push
decl
loopne
ds
ljmp
stos
fdiv
adc
negb
pop
or
mov
xor
jg
pop
sub
xor
push
out
push
mov
int3
std
fistpl
sbb
lock
jmp
jne
mov
mov
scas
push
outsl
cwtl
push
adc
inc
rcl
xor
cmp
gs
xor
mov
jg
or
fbstp
prefetch
jg
cmc
or
das
and
daa
subl
mov
arpl
mov
cltd
pop
rcrl
mov
dec
test
lcall
add
cmp
aas
sub
sub
xchg
rcrb
les
jmp
aam
ljmp
push
decl
scas
inc
inc
jmp
lahf
neg
push
inc
sbb
mov
int
cmp
mov
cmc
add
cld
das
and
mov
bound
mov
into
inc
dec
test
jg
loopne
test
jl
and
mov
jg
loopne
inc
jecxz
and
or
lds
je
fidivl
filds
aaa
insl
push
cmp
sub
sub
jle
mov
loopne
scas
lahf
movsb
jge
cmp
incl
xor
push
js
mov
stos
xchg
xchg
outsl
mov
mov
pop
out
inc
sbb
adc
mov
pop
jbe
imul
lahf
loopne
cs
fimuls
jmp
inc
mov
cli
mov
in
imul
lret
test
xchg
repnz
mov
ljmp
xchg
loop
mov
cwtl
xor
testb
xchg
lret
pop
sbb
icebp
decl
lcall
mov
jecxz
inc
fsubp
pop
call
pop
test
add
cmovns
lock
in
inc
mov
iret
fsub
inc
mov
dec
aaa
push
leave
jg
mov
rorb
xchg
and
push
jns
jo
les
xchg
push
xor
call
or
jae
dec
stos
push
mov
hlt
js
loope
jmp
outsl
dec
das
mov
outsl
cmp
or
mov
cmp
jbe
mov
xchg
jmp
jl
sbb
das
icebp
mov
mov
out
dec
adc
cmpsl
or
dec
or
cli
incl
sbb
lods
mov
xchg
add
inc
std
inc
aas
xor
fcompl
mov
cmc
mov
jmp
mov
lods
js
pop
dec
ds
push
enter
data16
xlat
mov
push
push
lret
lret
pop
adc
subl
dec
mov
ljmp
add
std
cmp
loope
pushf
sub
push
sub
xchg
and
jne
adc
dec
cltd
incl
jne
psrld
or
stos
clc
jns
add
ljmp
jns
cs
in
bound
fnsave
pop
mov
xchg
cltd
aaa
add
xor
mov
xchg
sbb
dec
std
call
mov
rcl
mov
pop
repz
mov
mov
push
xchg
jmp
and
sub
cld
xchg
mov
cmc
pop
mov
mov
jae
stc
aam
mov
rorl
pusha
std
aas
into
sub
cld
shl
inc
fnstenv
call
cmpsb
xlat
arpl
mov
addr16
or
cld
mov
imul
js
ret
pushl
je
adc
outsb
jo
imull
sub
pop
pop
clc
enter
out
std
call
sub
mov
iret
add
cmp
lods
movsb
dec
sbb
mov
arpl
mov
out
and
test
cld
frstor
dec
rcrl
dec
xor
jecxz
in
xchg
jo
pop
cli
test
sbb
daa
mov
sar
ljmp
or
xlat
mov
out
sub
test
jl
mov
jg
lcall
pop
mov
mov
mov
sbb
or
push
cmp
mov
addr16
stos
loop
imul
lods
lea
mov
pusha
cmpsb
or
push
jp
pushl
fldl
fadds
pushf
aad
insl
cmp
shlb
add
pop
xchg
rcr
test
test
enter
xchg
add
pop
inc
test
jo
lcall
adc
insb
mov
add
inc
mov
cs
push
mov
jl
imul
fcomps
lock
mov
fwait
outsl
xchg
or
cmp
adc
mov
push
and
loop
mov
jmp
stc
add
pinsrw
xor
cmpsl
jb
aam
rorb
rcl
call
movsb
out
mov
and
adc
outsb
rclb
mov
inc
sub
jl
call
xchg
cmpsb
fbstp
stos
into
loop
mov
pushf
daa
lcall
push
xchg
clc
dec
leave
mov
outsb
in
clc
loop
das
std
mov
in
loop
or
insl
out
jmp
mov
orl
mov
enter
dec
cmp
popa
ds
lods
cld
lea
mov
and
dec
cld
das
jl
push
add
ljmp
pop
or
ret
add
or
pop
add
xchg
pushw
lock
mov
jmp
addl
int3
and
adc
jle
push
jae
xchg
xchg
cmp
push
ljmp
test
loopne
sub
cmp
dec
jl
dec
mov
lea
xchg
add
jns
mov
cmp
cmp
pop
push
pop
xchg
adc
or
sub
or
arpl
pushf
int3
hlt
cmpsb
mov
or
je
decl
mulb
mov
enter
lock
adc
sbb
sub
mov
jne
decb
cli
cltd
mov
daa
push
aas
addl
movsb
movsl
cs
xchg
popf
insb
add
sub
pop
clc
ljmp
xor
out
notl
cmpsl
inc
xchg
jno
aaa
cli
lea
fsub
sbb
cmp
adc
fists
mov
sbb
inc
xchg
and
xchg
and
xlat
in
jmp
mov
adc
sub
xchg
fwait
addb
cli
mov
les
mov
jmp
mov
mov
and
in
rcl
cmc
fnstcw
call
jecxz
cmc
shll
adc
int
repnz
shl
scas
idivb
test
lcall
mov
sub
inc
insb
lcall
mov
fs
pop
pop
adcl
cmpsb
jp
add
popf
jmp
imul
lods
outsb
movaps
mov
pushl
cwtl
pop
xor
cmp
fbstp
in
xor
popa
decl
sub
adc
lcall
push
in
xor
sub
out
dec
cmpsb
test
int3
aaa
dec
ljmp
scas
icebp
jmp
lcall
mov
pop
stos
decl
std
fdivs
ss
mov
dec
sbb
sub
mov
mov
dec
js
cmp
cld
fcom
mov
stc
or
jo
lahf
mov
std
call
daa
xor
cmp
inc
popa
xchg
mov
fcmovu
ret
fwait
push
fwait
adc
loop
mov
cmpsb
jmp
ljmp
out
cmpl
dec
pop
jns,pt
lahf
mov
int3
dec
gs
mov
sub
push
cmc
and
outsb
jne
adc
stc
jne
mov
ljmp
mov
rcr
je
push
mov
mov
scas
loopne
cmp
ljmp
fxch
mov
push
call
push
lret
lahf
mov
loop
jg
lret
xchg
sub
cmp
or
inc
or
and
cmp
cld
xchg
dec
and
loope
mov
and
pop
mov
std
les
pop
aad
fs
sbb
add
out
dec
jl
aas
stos
test
mov
sub
ja
cmp
cmp
pop
jp
pusha
cmp
lret
js
scas
xchg
aam
xor
jns
aaa
adc
ljmp
icebp
fidivs
mov
scas
push
fwait
xlat
int3
dec
pop
mov
ja
aam
pop
pop
lcall
incl
cli
inc
dec
ss
inc
xor
sbb
movsb
lahf
das
nop
loopne
lcall
cld
pushl
or
push
fistpll
jae
jns
mov
call
push
mov
jno
push
stos
ret
jb,pn
mov
incl
call
cltd
ret
les
inc
adc
out
add
dec
orb
mov
jl
mov
or
es
sarl
imul
sub
adc
and
add
inc
xchg
pop
cwtl
subl
jge
sub
adc
cmpsb
sbb
xchg
xchg
loope
insb
adc
stc
jl
cmp
sub
dec
push
incl
lock
divl
ja
xor
add
push
in
lock
pushl
sub
loopne
pop
cmp
pop
sbb
decl
cmpsl
pop
sbb
lds
jmp
cld
sub
icebp
xsaveopt
call
ljmp
cmpsl
push
or
push
cmp
lcall
insb
lods
notl
movsb
lcall
push
or
cmp
fmuls
stos
leave
sarl
inc
mov
decl
pop
fistps
sub
xlat
xchg
fs
scas
adc
jo
call
inc
push
adcb
out
mulb
testl
pop
push
mov
pushf
pushl
mov
push
inc
sub
addl
pop
shr
xchg
jne
fscale
mov
and
adc
lcall
add
lds
push
mov
mov
dec
jge
push
jl
sahf
push
test
dec
insb
mov
mov
mov
xchg
sbb
cmp
dec
das
adc
add
rcl
push
sub
test
cmc
jmp
or
xchg
inc
mov
push
dec
fwait
vaddpd
mov
push
out
push
sbb
adcl
jbe
call
pop
in
stos
or
fisubrs
sbb
rcll
xchg
mov
call
jge
imul
inc
and
xchg
decb
xor
insb
cltd
mov
std
cmpsl
sbb
aas
cmpb
xor
adc
sub
fcomps
mov
cli
out
ljmp
or
decl
mov
and
and
fwait
stos
les
jne
jp
fstl
popa
mov
incl
loopne
out
lret
pop
mov
ja
stos
insl
xor
jbe
push
dec
fisttpll
push
leave
repz
lcall
mov
fdivr
aad
outsb
daa
or
mov
mov
fdivl
cld
jmp
mov
pushf
dec
frstor
sub
sti
aas
adc
xchg
test
cmpsb
ljmp
das
int
sar
jl
xor
jb
nop
pop
cmpsb
jge
xlat
fs
jg
ljmp
pop
mov
adc
jo
or
int3
dec
xor
adc
iret
push
ljmp
fwait
inc
rorl
ja
mov
fsubp
mov
or
push
ret
sub
call
sbbb
xchg
or
xchg
adc
aaa
test
push
push
dec
sub
xchg
adc
pushl
cli
or
mov
cltd
shlb
xor
jo
adc
incl
sbb
test
pusha
add
ds
push
pop
xor
aad
push
jae
pop
sub
xlat
push
dec
lods
mov
jmp
lcall
adc
xchg
out
xacquire
out
lods
adc
mov
jp
cmpb
pushl
push
sub
push
push
rol
aaa
mov
cmpsb
jbe
lcall
ret
jg
incl
cmp
loopne
cmpsl
mov
aad
testb
arpl
pop
nopl
and
bound
imul
ss
imul
push
xchg
test
pushl
mov
cli
pop
mov
cmp
cs
enter
xor
outsb
cli
sub
adc
push
and
or
add
mov
ss
adc
gs
cmp
add
or
adc
or
add
pop
call
leave
pop
das
add
clc
and
xchg
sbb
push
pop
aam
dec
jle
test
push
je
and
inc
jno
pop
inc
sub
add
test
pushl
mov
loop
inc
xor
pop
mov
cs
lods
ljmp
mov
push
add
sahf
repnz
ficompl
aad
mov
dec
or
fucomp
mov
dec
mov
xor
and
test
xor
cltd
jnp
push
push
or
mov
adc
mov
clc
fistps
push
or
add
cmp
xlat
in
mov
and
decl
sub
test
imul
and
mov
mov
xor
xor
bound
push
das
outsb
dec
or
add
add
in
and
repnz
roll
sbb
lods
pop
add
inc
ficoms
pusha
mov
mov
std
mov
stc
fwait
iret
insb
dec
dec
test
nop
cmp
pop
xor
push
scas
dec
mov
jmp
std
mov
lock
in
test
xchg
pshufw
dec
faddl
call
or
aas
sbb
movsb
adc
loop
into
lahf
and
hlt
pop
push
push
mov
cli
pop
add
stc
lods
das
cmpb
mov
add
jp
mov
or
push
lret
adc
icebp
cwtl
adc
nop
dec
jecxz
mov
push
testl
add
push
lock
mov
arpl
test
add
xchg
push
xor
push
jle
fsubrl
xorb
add
push
roll
pop
adc
sub
and
push
inc
jb
imull
push
lock
out
stos
adc
adc
insl
cmp
adc
stos
adc
mov
sub
xor
aaa
sbb
or
push
mov
jg
pop
dec
inc
repnz
or
mov
dec
xchg
mov
sbb
adc
sub
or
imul
fisttps
ficoml
enter
mov
lds
pop
mov
std
push
xchg
mov
mov
add
pop
add
insw
popa
sti
call
mov
ja
xchg
insl
aam
idivb
mov
icebp
lods
push
xchg
std
shlb
inc
mov
or
mov
lds
sarl
in
clc
dec
aad
lahf
cmp
add
js
jmp
stos
stos
mov
adc
jno
or
xor
mov
jp
push
cmc
pop
movsb
pop
cwtl
inc
cmp
sti
xchg
cli
addb
or
decl
push
sbb
lods
xchg
sub
pusha
and
adc
ret
xchg
pop
aas
aas
daa
and
pop
or
mov
je
jle
aas
sarb
push
or
imul
xorb
jle
adc
sub
sarl
insb
or
or
lahf
jo
sub
xor
mov
imul
mov
or
xchg
mov
lret
mov
decl
ljmp
lods
popa
cmp
imul
or
dec
mov
and
inc
outsl
inc
mov
and
ja
je
insb
jg
sub
cltd
leave
fdivl
ret
pop
mov
push
push
mov
xor
ljmp
cmp
fwait
inc
or
repz
and
decl
push
scas
fdiv
insl
cs
xchg
adc
inc
adc
shlb
or
stos
jbe
movb
mov
call
cmp
into
and
les
cmpsb
in
jne
outsl
jo
in
bnd
inc
xchg
adc
jecxz
sbb
add
icebp
insl
iret
loope
jmp
addl
xlat
xchg
das
fstl
and
popa
jg
cli
mov
adc
or
and
inc
inc
push
sbb
imul
fcompl
sbb
addl
mov
scas
nop
mov
fbstp
push
push
repz
jmp
lret
add
jg
in
xchg
adc
dec
push
ret
cmpsl
add
pop
imul
ja
jns
jne
push
inc
jmp
cmpb
jo
push
sub
fsubrs
xchg
mov
sti
mov
nop
and
ljmp
std
fsts
xor
cmpsb
dec
sbb
sub
inc
je
les
loop
movsl
test
fnstsw
fistps
js
comiss
adc
enter
xchg
dec
and
scas
gs
lcall
sub
and
and
push
adc
lret
fisubl
sbb
add
std
ljmp
pop
shll
adc
ffree
cmp
in
xor
sbb
pushf
add
ss
aam
sbb
jb
out
in
gs
xchg
lcall
push
push
mov
cmc
adc
outsl
and
iret
or
arpl
pop
sub
add
inc
inc
push
or
pop
adc
mov
xchg
push
sbb
mov
aad
leave
outsl
sub
rclb
lcall
add
daa
stos
sub
jbe
in
mov
test
jo
pop
stos
je
or
pushl
call
cmp
mov
sbb
dec
fisubrl
int3
cmpsb
cmc
movsl
test
sub
cltd
sbb
xor
fcomps
cmc
in
inc
mov
mov
cmc
fnstsw
out
test
neg
fnsave
mov
cs
inc
cmp
test
out
and
hlt
inc
pushf
movsl
pusha
std
pusha
clc
ficoml
inc
pushf
and
fucomi
nop
dec
or
or
xor
xor
adc
dec
and
imull
bound
fstpt
push
mov
push
in
addr16
fbld
insl
mov
xor
je
xchg
push
add
xchg
add
pop
sub
lahf
inc
iret
fmuls
in
pop
and
push
aad
dec
lret
and
jno
ljmp
mov
aaa
ffree
lret
test
sub
sub
imul
ret
call
shll
les
pop
je
push
mov
shll
pop
aas
into
in
jge
jg
cmp
mov
jnp
cmp
pop
adc
push
cli
mov
jnp
in
mov
lahf
xchg
aas
nop
movsb
dec
sbb
add
es
mov
pusha
pop
aas
and
mov
out
icebp
movsl
lret
pop
pop
aaa
push
mov
mov
pop
fisttpl
pop
loopne
pop
sbb
cmp
push
mov
stos
loopne
mov
popf
sahf
mov
nop
xor
popa
mov
and
clc
ss
dec
adc
dec
mov
mov
std
xchg
pop
sbb
xchg
inc
cmc
shl
out
ljmp
fildl
xor
lods
int3
addr16
decl
outsb
or
xchg
jmp
xchg
and
jg
lret
cld
jge
jp
imul
sti
repz
clc
insl
int3
pushf
push
adcl
and
mov
loopne
or
mov
and
xlat
fnsave
mov
cmp
push
loope
push
fucom
add
lcall
scas
mov
sub
std
inc
xchg
or
ja
insb
mov
adc
xchg
repz
sub
idivl
jo
mov
insl
sti
test
stc
sbb
push
outsb
and
jmp
rcr
mov
add
xchg
or
xchg
xchg
or
je
mov
mov
imulb
es
out
pop
adc
mov
xchg
pop
leave
in
aad
or
pop
mov
mov
mov
dec
add
dec
adc
cs
adcb
les
sbb
pushf
pushl
xchg
movsb
aam
pop
mov
add
je
mov
inc
xchg
push
push
mov
sahf
rol
inc
and
mov
cld
decl
cltd
mov
jmp
jg
xor
jge
or
xlat
inc
test
push
dec
dec
mov
mov
and
or
lock
push
loop
and
or
or
insl
pop
inc
fsubl
out
or
inc
ljmp
je
loope
loope
and
add
outsl
call
push
nop
lahf
pusha
jns
inc
stos
mov
in
das
sub
outsb
cmpsl
insb
ret
aad
adc
xchg
js
xlat
dec
movsb
push
jns
xchg
sbb
lahf
jecxz
aam
cmp
pusha
add
mov
push
jmp
stos
sub
bound
jb
sbb
es
mov
test
shr
fnstsw
stos
and
mov
xorl
pop
mov
fwait
mov
das
mov
adc
cli
mov
rcr
push
add
lds
mov
dec
shll
xor
xor
push
cmp
call
movsl
sbb
jb
mov
movsl
pop
adc
push
add
xor
jl
ss
in
js
iret
div
cmpsb
jnp
neg
xlat
mov
in
les
sahf
mov
lods
push
inc
loop
mov
aad
call
push
xchg
push
jae
adc
adc
scas
mov
ljmp
xchg
xchg
mov
test
movsl
add
scas
ja
mov
push
add
add
call
in
stos
ret
call
sub
cmpsb
xchg
or
orb
mov
incl
or
into
addb
adc
cmp
push
je
icebp
int
push
incb
fadd
testb
shrb
out
aas
sbb
mov
inc
fistpl
inc
cmc
mov
xchg
inc
dec
add
sbb
popa
mov
lea
mov
adc
gs
jns
xor
or
cmp
mov
xchg
repz
std
subl
lock
loop
icebp
in
ljmp
xor
je
cmp
popa
and
or
aad
and
cld
mov
sbb
xor
cs
mov
ret
cmp
fstpt
stos
lock
and
lods
insl
rcr
out
dec
clc
mov
in
in
stos
jne
std
popa
sbb
movsl
mov
jmp
fbstp
push
aam
cmpsl
xchg
inc
dec
pop
das
addr16
jg
xorl
xchg
jno
adc
inc
add
fistl
imull
push
xchg
jg
mov
adc
mov
test
stc
insl
inc
xchg
xchg
mov
sub
int3
cwtl
push
mov
hlt
adc
outsl
cld
nop
daa
or
shll
mov
subl
xchg
and
sub
sub
shrl
fdivr
add
and
fcmovne
jle
lahf
shr
lea
add
cld
cmp
mov
jecxz
rep
ss
mov
xchg
sub
xor
outsb
mov
push
lret
pusha
push
nop
in
xchg
mov
dec
out
jnp
mov
jnp
bound
and
in
jo
nop
pop
and
hlt
xchg
push
into
gs
loopw
pop
add
insl
and
movsb
in
cltd
aad
out
xor
mov
call
sub
inc
sbb
cwtl
mov
lret
les
icebp
mov
in
adc
movsl
sbb
sub
dec
pop
repnz
mov
xchg
unpcklps
aas
mov
mov
mov
cld
call
incl
repz
cmpb
outsl
outsl
mov
and
ret
lods
jl
js
sub
cmpsl
mov
in
mov
push
push
sbb
bound
jmp
pop
pop
divb
inc
mov
jmp
fbstp
test
adc
push
mov
icebp
loopne
into
mov
jg
out
mov
addr16
mov
add
mov
sbb
popa
xlat
sti
inc
jmp
orb
cmpsb
or
sbb
inc
int3
adc
loop
daa
jl
mov
std
scas
in
add
xor
mov
cmc
jns
jmp
inc
mov
xchg
dec
into
adc
sub
es
fcmovb
cmp
out
or
cmp
ret
dec
mov
jno
mov
int
add
mov
rcl
outsl
faddl
xor
adc
in
push
xor
into
jno
hlt
pop
std
fs
lcall
daa
fstpl
push
sahf
rolb
out
push
add
cltd
clc
ja
loop
add
or
rcl
pop
pushf
mov
jns
mov
bound
lret
push
cmpl
aad
arpl
add
push
sti
dec
js
add
ds
outsb
cmpsl
outsb
push
sub
cmpsb
dec
cltd
push
cld
loop
add
std
gs
push
in
mov
daa
push
add
lret
jp
aaa
mov
sbbl
dec
inc
call
das
aaa
in
ret
sarl
shll
fnstcw
bound
and
leave
pop
cld
sbb
dec
loop
inc
add
dec
ret
mov
pop
clc
pop
sbb
loopne
or
aam
cmp
add
pushf
cmp
sub
and
fmuls
adc
xor
mov
pop
mov
sub
pushf
mov
outsb
cli
inc
or
loopne
mov
bnd
xchg
inc
lock
xor
xchg
mov
cmp
sbb
push
ffree
aam
or
std
add
shrl
push
sub
pusha
jae
sbb
xlat
out
jno
sbb
inc
jmp
push
mov
xor
add
inc
jge
sahf
cmpsl
mov
outsl
or
dec
pop
fldcw
adc
std
icebp
fdivrp
jg
fildll
scas
rol
jne
mov
push
xchg
cmp
enter
sbb
fsubrs
mov
dec
adc
mov
lret
enter
int3
add
push
vpsubb
fwait
cltd
leave
loopne
sbb
cld
pushf
xchg
adc
sub
loop
pop
pusha
and
mov
jae,pn
decl
xchg
dec
aaa
loop
jb
clc
mov
jne
and
mov
cmp
lds
push
test
movsl
xor
scas
or
pop
push
dec
xor
pop
adc
sti
add
mov
push
rclb
sub
adc
and
stos
and
and
pop
lcall
cld
or
inc
push
call
lret
shl
add
sti
xchg
pop
scas
out
add
movsb
add
inc
dec
stos
jg
outsl
mulb
jns
cmp
jg
stos
jecxz
aad
pop
addr16
xchg
or
notb
jl
xor
int3
cmp
leave
stos
repz
andb
adc
je
dec
dec
lahf
decl
inc
mov
imul
sbbb
outsb
sbb
jmp
ret
dec
sub
iret
mov
cmp
dec
std
in
xorb
push
add
jne
pusha
and
add
popf
push
pop
mov
xor
pop
mov
mov
or
les
out
mov
sub
and
je
add
xchg
sti
push
xor
xor
xor
sar
mov
xchg
and
pop
push
xor
mov
cmc
idiv
jbe
adcb
shlb
inc
lcall
mov
lcall
and
and
adc
ret
loopne
aaa
jne
aam
dec
aas
out
pop
inc
mov
pop
pop
jb
mov
jno
sbb
sub
mov
inc
cmp
scas
or
mov
fadds
and
cmp
cld
and
xchg
xchg
loopne
mov
aaa
fidivs
xor
push
ret
xchg
push
dec
mov
or
xorl
hlt
cmpsl
ret
cmpsb
leave
and
test
push
or
add
mov
sbb
aaa
pop
outsl
insb
scas
idivl
adc
jb
push
inc
cli
xchg
lcall
adc
jns
cmp
add
mov
leave
icebp
aam
pop
fdivl
aad
int
cmp
and
dec
ljmp
jmp
pop
scas
sar
mov
cmp
jge
addb
call
adc
scas
and
or
out
loope
xlat
cmc
shll
adc
lcall
loop
int
aad
aas
xor
rcrl
lret
pop
dec
mov
inc
loope
lods
out
aam
ret
or
adc
mov
out
out
outsb
cwtl
sub
mov
xor
adc
sub
mov
cmpsb
jb
push
dec
inc
mov
sub
adc
dec
xorb
aam
cmpsb
out
cli
testb
cmp
adc
and
adc
loop
add
jl
xor
mov
sub
add
pop
lahf
adc
vmovaps
mov
adc
pop
add
mov
jno
addl
mov
sub
cli
pop
push
fwait
jl
in
jl
cli
push
sahf
data16
add
inc
or
out
fldl2t
call
push
lods
in
add
fs
pusha
xchg
xchg
jo
sub
mov
mov
sub
aam
imul
jmp
mov
dec
call
ret
fs
xchg
xor
and
inc
mov
jmp
or
fmuls
jle
mov
and
andb
push
mov
pop
and
pop
sarb
push
add
das
incl
or
idivl
fsubrp
call
mov
dec
adcb
inc
pop
es
int
add
mov
push
in
dec
fnsave
inc
cwtl
rcrl
dec
loop
pop
pop
adc
ljmpw
xchg
xchg
push
mov
sub
dec
cmc
or
pop
inc
test
shrl
ret
pop
ret
lods
cmpsb
adc
jnp
fs
jp
push
jns
adc
orl
leave
inc
add
enter
mov
inc
and
std
es
jle
add
push
dec
fsubrl
jbe
jecxz
inc
inc
ffreep
pop
pop
and
inc
movsl
hlt
push
cmp
jecxz
dec
xor
xchg
push
mull
push
xlat
in
mov
pop
add
xor
mov
mov
aas
jne
stos
ret
and
lcall
fiaddl
and
add
popa
movsb
jbe
faddp
adc
cwtl
or
fidivrs
mov
cmp
mov
lret
pop
mov
push
sbb
xchg
lcall
dec
mov
lds
outsl
repz
sub
testl
mov
test
orb
xor
sarb
or
out
push
jns
cmp
jmp
test
xchg
pop
mov
sub
cmp
push
xor
sarl
mov
mov
mov
test
sarl
ljmp
mov
pop
adc
add
mov
hlt
inc
mov
fstl
cmp
mov
outsl
rcrb
out
cli
pushl
test
sbb
imul
and
adc
or
sbb
lret
repnz
xchg
in
imul
push
inc
rolb
or
push
sub
mov
scas
mov
mov
outsl
fucomp
jbe
arpl
cmp
lret
xchg
xorl
hlt
add
pop
inc
inc
rol
and
movmskps
and
inc
mov
repnz
sti
js
lret
xchg
test
lods
cltd
cmp
sbb
shll
xchg
cmp
movsb
sbb
adc
inc
in
ljmp
or
jg
inc
ss
dec
sub
mov
or
cwtl
cmp
push
mov
pop
mov
cmp
aas
jno
loopne
js
scas
lcall
shll
pop
sub
scas
and
or
add
cmpsb
aaa
fbld
ret
mov
daa
add
arpl
add
cmpsb
test
mov
sub
aaa
jle
or
lods
shrl
ss
dec
sbb
sbb
mov
test
cmp
aam
test
push
add
into
rcr
mov
mov
mov
push
mov
incb
mov
adc
ds
push
clc
pop
int
mov
test
mov
xor
or
int3
repnz
ficomps
dec
pusha
loope
in
enter
or
inc
out
xchg
aad
rcrl
mov
inc
je
nop
pop
subb
popa
pushf
outsl
into
shl
mov
stos
test
inc
shl
insb
xchg
bound
sub
inc
out
or
cmp
mov
ja
cmp
pusha
adc
pop
mov
jo
mov
mov
xor
inc
out
push
sbb
mov
lods
ret
inc
mov
jge
mov
dec
add
int
test
mov
adc
pop
adc
popf
lret
imul
das
icebp
pop
fnstsw
add
shrl
cmp
iret
insb
movhps
pop
inc
adc
insb
popf
rolb
and
lds
add
aaa
xchg
jno
and
imul
pop
pushf
cmp
bound
sbb
outsl
or
loope
and
mov
mov
mov
ja
in
push
bnd
test
xchg
test
sti
cmp
fs
cli
push
or
jle
lock
cmp
xchg
rolb
inc
nop
stos
inc
adcl
stos
mov
arpl
xchg
mov
xchg
dec
clc
test
dec
and
bound
inc
jl
push
adc
pop
adc
cmp
mov
sti
ret
and
jbe
xor
icebp
cld
jne
test
pop
js
call
cs
adc
ss
dec
int3
or
pop
xor
xor
sbb
out
dec
xlat
pop
in
ja
cmp
xor
in
outsb
or
incb
decl
mov
jecxz
mov
mov
lret
in
ret
mov
lret
adc
invd
sbb
leave
into
inc
loope
out
pop
orl
xchg
imul
mov
mov
daa
syscall
dec
es
into
xor
int
mov
push
add
movl
add
testb
out
jmp
inc
cmp
sub
and
push
push
cwtl
fwait
mov
std
fwait
sub
sub
pop
or
and
jp
lret
sub
mov
pop
push
aam
ret
les
mov
subl
pop
iret
in
mov
sub
mov
push
iret
loopne
cmp
out
mov
fwait
cs
addr16
dec
add
xchg
mov
add
inc
adc
mov
enter
int
mov
pop
popa
mov
fimuls
xlat
pop
sub
pop
mov
dec
stc
sbb
mov
adcb
arpl
sbb
jmp
jp
out
and
pop
clc
mov
add
stos
and
les
fists
fsub
jecxz
mov
mov
push
mov
cli
movsl
dec
inc
cmc
and
xor
mov
testb
aad
aad
lods
clc
test
xor
mov
dec
test
roll
aam
mov
adc
ds
push
or
dec
nop
mov
test
test
inc
enter
loope
sarb
pushf
cmp
xchg
int3
or
mov
imul
pop
cmpb
arpl
outsl
pop
xchg
sbb
dec
adc
icebp
push
push
scas
jp
mov
loope
lods
bound
mov
aaa
out
mov
inc
mov
fdivr
pop
lcall
cmpsb
sbb
cs
mov
add
adc
xor
jl
repnz
test
dec
mov
aaa
inc
test
insl
push
pop
clc
mov
add
lock
push
loope
jns
cmp
scas
push
sbb
fstps
je
and
test
ja
jmp
dec
pop
mov
cltd
mov
cmp
loopne
fcoms
xchg
movsl
sub
or
addb
lock
pop
daa
and
mov
inc
and
ret
scas
cmpsl
mov
pushf
in
inc
jb
scas
or
divb
pop
mov
lock
sbb
das
add
dec
pop
in
pop
lods
decl
cmpb
dec
push
mov
scas
test
xchg
cld
sti
or
jnp
push
push
mov
fistpl
movsl
push
push
xor
shrl
mov
adc
loopne
in
dec
mov
pushl
cli
mov
sub
jne
jle
inc
mov
add
adc
sbb
add
pop
xor
lock
add
ret
in
sbb
xchg
nop
mov
push
in
lock
fildll
jle
xchg
iret
or
int
in
jbe
std
and
push
subb
mov
and
dec
ret
mov
xchg
mov
xchg
scas
adc
rcrl
imul
jl
mov
jns
js
ja
rorb
lea
inc
pop
das
gs
add
lea
fcmovb
les
in
das
lcall
cli
push
xor
test
pop
sbb
repz
dec
addl
mov
ljmp
mov
adc
mov
add
xchg
mov
test
dec
cmp
mov
mov
bound
mov
mov
sbb
pop
xchg
xchg
xchg
les
lock
pop
std
add
fiaddl
push
mov
mov
jne
rcll
movb
dec
add
pop
mov
rcll
imul
push
in
ffreep
neg
pop
mov
push
std
cmpsl
dec
pop
xchg
mov
adc
push
in
in
nop
loopne
adc
test
add
ret
incl
or
stc
cmp
adc
push
mov
inc
xorb
pop
mov
nop
adc
das
cmpb
rol
fcmovnu
clc
lds
pop
inc
mov
in
sbb
clc
mov
mov
sub
add
push
fisubrs
push
shlb
cli
test
mov
in
pop
jne
xor
cmp
dec
push
lock
ljmp
fcmovb
popf
into
jno
or
jno
or
jle
sbb
cs
pop
add
arpl
cmp
or
imul
push
mov
xor
add
sahf
and
push
mov
enter
mov
clc
out
hlt
xchg
out
cmp
popa
inc
xchg
sub
pop
movsl
jl
sti
decl
in
rol
jl
pop
lret
loop
mov
push
xlat
in
cmp
outsl
sbb
roll
inc
mov
aad
cmp
pusha
inc
add
popf
cmpsb
adc
jmp
lods
es
mov
push
js
fsubrs
sbb
pop
pop
js
xchg
daa
push
mov
fists
cwtl
test
lcall
mov
lds
xchg
ret
pop
loope
cwtl
and
cmp
jnp
and
mov
lods
les
dec
jo
setae
add
xchg
std
faddl
inc
in
mov
inc
iret
sbb
mov
adc
push
jmp
sbb
rolb
aad
or
ficoml
je
sub
clc
or
insb
pop
add
hlt
in
lret
outsb
mov
mov
jno
les
inc
lea
and
rolb
fcomp
sub
aad
aaa
sub
xchg
sbb
dec
pop
or
inc
cltd
loop
orl
sahf
sub
repz
mov
enter
add
push
inc
loopne
mov
or
jnp
orb
mov
jbe
rclb
cs
sbb
jmp
xchg
orb
stos
or
addb
nop
jg
inc
movsb
jae
sti
iret
sbb
insb
out
call
sarl
cmpb
push
sub
lds
mov
out
pop
xor
dec
into
shrb
stos
mov
pop
mov
into
xor
sub
push
mov
push
dec
push
pusha
inc
mov
cmp
out
mov
pop
es
mov
push
out
scas
mov
pusha
dec
andb
movsb
daa
jg
xor
xchg
dec
push
dec
je
fcomip
jg
adc
popa
xchg
fisttpl
in
inc
push
xchg
adc
jge
lea
mov
inc
cs
dec
sub
insl
iret
jle
test
rcrb
pop
cmp
mov
adc
or
sbb
push
push
repnz
add
adc
push
jl
dec
iret
fistpll
mov
decb
cltd
add
xchg
adc
xorl
push
pop
xor
xor
mov
ljmp
leave
adc
mov
push
add
test
lret
fninit
or
mov
call
mov
lcall
adc
shlb
das
scas
aaa
out
push
jmp
or
jg
roll
cmp
xor
mov
popf
in
cltd
adc
and
sbb
mov
push
or
mov
xor
call
lcall
int3
push
dec
bound
add
lcall
aad
hlt
fstp
icebp
ljmp
fs
inc
xchg
jl
in
test
test
subl
push
add
sbb
movsb
sub
and
push
mov
ret
jg
cmp
fsub
cmp
cmp
addr16
mov
cmp
xchg
ret
sub
mov
push
jl,pn
loope
stc
mov
and
xchg
mov
outsb
loopne
aaa
pop
mov
fists
in
xchg
jnp
shrb
fdivs
jle
mov
sub
sbb
add
sbb
scas
cli
jmp
fnstsw
sbb
or
fwait
sub
fcomip
dec
push
mov
add
jo
int3
jns
add
lods
sub
push
ljmp
sub
and
and
fsubrl
adc
negb
sub
dec
lods
lods
js
ljmp
mov
fsubs
push
mov
pop
test
push
lock
pop
js
lahf
bound
into
add
aad
cmp
movsb
pushl
sbb
xchg
in
inc
test
test
mov
adc
rcrl
fcmovu
std
jns
movsb
scas
or
or
fwait
dec
stc
leave
add
inc
jge
inc
push
lods
sbb
xchg
das
in
fs
test
bound
or
pop
outsl
in
push
jb
loop
adc
ds
pop
xor
decb
xlat
test
in
pop
pop
out
dec
stos
pop
pop
clc
ljmp
out
jne
movsl
adcb
cmp
das
xor
jg
sbb
mov
and
push
sbb
cmp
leave
test
fwait
or
insb
movsl
adc
mov
int
mov
mov
movsl
sbb
es
adc
dec
mov
fwait
pop
rolb
leave
inc
test
add
and
insl
mov
gs
int3
sti
int3
push
mov
inc
inc
cmp
hlt
jge
cwtl
mov
test
jno
jl
and
lcall
mov
mov
xchg
mov
xor
inc
in
ljmp
das
hlt
and
arpl
cmp
mov
add
orb
mov
ja
push
and
movsb
pop
js
loope
das
imul
divl
and
call
pop
sub
adc
fcompl
mov
dec
push
add
rcr
lock
pop
ja
or
push
ds
mov
inc
aam
stos
sub
outsl
xchg
sti
adc
popa
stos
cs
cmpsl
adc
out
sbb
lret
pop
pop
push
aaa
sbb
sub
imul
and
jo
sahf
mov
test
dec
jmp
sub
jecxz
pop
fisubs
xor
lds
scas
stos
addl
pop
xchg
jle
dec
out
inc
push
pop
outsl
jnp
int
push
les
lret
leave
int3
xchg
mov
les
sbb
mov
icebp
mov
bound
sbb
and
push
mov
sbb
enter
sahf
and
and
push
dec
mov
xchg
mov
pop
lcall
std
push
cwtl
movsb
pop
scas
inc
out
aaa
cs
and
jbe
add
xor
sbb
cs
sbb
xchg
dec
pop
add
movsl
adc
pop
cmpsl
add
out
mov
or
dec
sbb
mov
in
mov
movsl
test
ror
cmp
cmp
in
fistpl
shlb
add
sti
cmp
jg
lock
jno
mov
cli
mov
xor
adc
movd
jmp
rorl
int3
inc
test
jecxz
pop
loopne
jb
ja
bound
lds
andb
jg
repnz
xchg
add
push
enter
mov
loopne
js
movsb
call
lea
jbe
pushf
xor
lods
cmc
lea
and
jecxz
mov
fsubrs
sbb
add
dec
in
pop
das
ret
and
and
jle
xor
ljmp
nop
frstor
cmp
stos
inc
ljmp
and
movsb
mov
popa
shr
adc
js
shll
adc
xchg
cmc
das
std
jg
ret
movsb
mov
push
inc
leave
imul
push
mov
loopne
or
inc
inc
cld
std
ret
or
ljmp
lea
xchg
fdivrs
push
dec
mov
add
addl
mov
jp
or
pushf
adc
out
mov
test
aaa
and
adcl
aam
adc
test
mov
ret
inc
sar
dec
sub
add
popf
and
add
loopne
mov
outsb
std
test
ja
ret
xchg
jle
push
cmp
daa
adcl
cmpsl
and
xchg
sub
jl
sub
mov
fndisi(8087
inc
arpl
xor
ljmp
xchg
jecxz
xchg
lahf
leave
cmp
push
ja
test
leave
push
inc
cmp
dec
shlb
xchg
push
cld
jl
jae
mov
outsl
or
in
and
add
adc
push
dec
sbb
pop
xor
rcrb
mov
and
jl
test
fwait
bound
cltd
jp
mov
lcall
sbb
dec
add
and
mov
lods
or
pop
xor
xchg
and
sarb
insl
inc
pusha
lret
add
lcall
fsts
je
push
push
mov
ret
xchg
call
push
and
out
sub
aaa
ljmp
xchg
icebp
cmp
push
fistl
jle
shll
sub
jg
jl
aaa
mov
lcall
cli
dec
sbb
loopne
scas
push
movsl
mulb
ljmp
xor
add
sub
jnp
mov
pop
insb
insl
lret
in
mov
cld
lcall
notb
inc
sbb
test
int
cli
fnstcw
cwtl
decl
sbb
aad
xor
cmpsb
push
pop
mov
adc
jns
adc
js
iret
iret
cmc
or
jo
adc
icebp
add
jns
mov
fs
pop
dec
lea
decl
scas
pop
inc
ja
push
dec
imul
fistpll
sti
inc
imul
addl
outsl
jbe
xor
mov
dec
rorl
inc
mov
icebp
inc
xchg
or
pop
or
ret
ds
inc
jae
push
or
cltd
and
dec
jg
or
stos
stc
push
pop
in
xchg
mov
test
call
cmp
push
mov
fs
push
xchg
into
sub
and
cmp
inc
add
stos
adc
adc
push
dec
add
sets
mov
out
inc
mov
push
and
or
xchg
orb
insl
or
scas
cmc
adc
add
movlps
clc
and
out
pop
fiadds
jg
scas
jbe
jnp
es
mov
and
outsl
add
mov
popf
sub
dec
mov
pop
cld
lcall
les
mov
aam
push
arpl
mov
jge
clc
and
cmp
dec
shr
std
xchg
and
push
lds
rol
jge
loopne
fbld
mov
icebp
adc
fdivl
adc
test
push
pop
adc
and
rcrl
ja
pop
sahf
pusha
movsl
lods
add
mov
inc
les
pop
loop
into
clc
xchg
stc
movsb
daa
push
add
pop
sbb
bound
outsl
fimull
jbe
jg
aad
pop
mov
sub
sbb
mov
je
sub
adc
das
int3
out
loopne
cld
push
pop
sbb
inc
sti
sbb
cmpsb
jns
fsin
outsl
or
lret
cltd
or
xchg
fidivl
pop
insb
mov
std
incl
mov
sub
jbe
fildl
push
mov
outsb
ret
inc
aam
bound
insl
and
ret
push
sub
adc
test
repz
or
pop
test
push
mov
lcall
jl
orl
fstl
mov
insb
clc
xor
lods
leave
aam
pushl
sub
sbb
je
mov
cmpb
lret
cmc
enter
imul
es
icebp
or
dec
filds
push
cmc
xchg
jb
jle
jge
aaa
xor
or
push
xchg
push
and
incl
test
mov
dec
mov
add
adc
mov
inc
fcmovbe
cltd
sub
add
je
adc
testb
int3
scas
sub
fldl
push
inc
loopne
pop
movsl
adc
pop
cwtl
aaa
sbb
lods
jne
in
mov
ljmp
cmp
sbb
ret
test
mov
add
hlt
aaa
fsub
push
pop
mov
mov
fildll
aaa
cli
sub
ret
jbe
jge
shrb
clc
insl
stos
in
inc
push
inc
pop
mov
dec
fsubr
mov
jnp
test
fidivrs
lret
pop
dec
mov
sbb
shlb
les
rolb
mulb
lahf
aas
xor
sbb
outsl
inc
test
loopne
mov
call
dec
sub
xor
dec
inc
lods
test
or
ret
sbb
pusha
cmp
fs
xor
in
lcall
divb
and
push
xor
imul
adc
push
int
data16
les
and
testb
xchg
pop
js
aad
iret
push
cld
test
xlat
fisubl
incb
loope
inc
inc
mov
xchg
cmpsb
movsb
dec
jnp
lock
sub
push
push
mov
xor
addl
add
xor
dec
mov
mov
aam
sbb
mov
adc
shlb
jno
pop
push
mov
pushf
fcoms
pop
movsl
or
push
inc
push
insb
arpl
xchg
dec
jg
cmp
cltd
xchg
jle
outsb
lcall
aam
mov
push
arpl
int
pop
loopne
ret
jae
mov
leave
dec
jbe
out
sub
clc
nop
cli
pusha
and
dec
or
push
or
pop
pop
daa
aaa
jmp
out
mov
jmp
xor
daa
ret
add
cli
dec
pushl
xchg
adc
into
repz
push
lret
dec
cmp
adc
popa
cmpsl
sub
push
mov
iret
mov
leave
xchg
fisttps
mov
push
inc
adc
pop
add
addb
ljmp
push
in
pop
gs
dec
in
fnstenv
xchg
mov
mov
rclb
mov
adc
je
jno
test
dec
sub
jle
add
rcl
mov
sub
movsb
dec
jne
fcmovbe
sub
cwtl
iret
push
hlt
dec
lds
xchg
mov
push
inc
mov
sub
fiaddl
adc
repnz
push
fcompl
mov
arpl
jae
out
push
push
les
mov
fsubrs
push
dec
push
setle
mov
push
aad
xorb
pop
inc
out
mov
pop
aas
push
xchg
in
mov
aaa
mov
or
xchg
xchg
or
sarb
mov
add
xlat
xchg
test
pop
pop
call
push
enter
dec
xchg
pop
mov
add
mov
insb
insb
push
and
jno
lock
mov
add
dec
and
cmp
icebp
xchg
mov
loope
inc
or
pop
and
fldenv
das
mov
push
movsb
out
hlt
fbstp
lret
mov
notb
mov
dec
jo
mov
data16
or
ljmp
push
rorb
gs
scas
jmp
jb
les
cmp
cmpsb
fildl
outsl
int3
cmp
mov
dec
outsl
adc
mov
jne
sbb
repnz
iret
xor
jecxz
scas
sti
aad
mov
insl
adcl
dec
mov
push
xor
mov
sub
pop
xor
cwtl
popa
inc
loop
add
jo
push
test
sbb
out
adc
aaa
mov
and
add
inc
inc
or
dec
xor
inc
mov
and
bound
pop
fbld
addl
adc
mov
push
lret
xchg
jbe
jge
mov
adc
dec
push
call
icebp
fcmovnb
dec
or
adc
cmp
push
lret
jns
push
shlb
fildll
outsb
add
inc
fs
mov
or
rcl
daa
lea
push
mov
sti
pop
sub
loop
js
adc
push
dec
cmp
or
sbb
cmp
or
mov
es
lods
add
inc
ret
nop
fucomip
jo
in
lea
xchg
push
pop
mov
xor
jecxz
lock
dec
xchg
add
out
pop
clc
in
ret
scas
dec
cmp
push
add
mov
out
adc
push
ds
nop
push
insb
nop
subb
icebp
divb
dec
adc
out
fwait
scas
add
movl
add
push
fsubl
and
std
cmp
ret
push
dec
cld
sahf
xchg
xchg
movsb
fwait
sbb
mov
dec
lea
xor
mov
cmpsl
cwtl
insb
rclb
das
sub
and
test
or
aam
adc
mov
sub
jmp
cltd
mov
push
fidivrs
imul
xlat
push
push
nop
mov
orl
lods
adc
jbe
jmp
mov
and
outsl
lds
dec
jae
cwtl
jbe
clc
sub
dec
lock
outsb
ljmp
mov
out
ljmp
das
das
cmp
fdivl
fstps
cmc
gs
push
add
push
add
mov
jle
dec
cmpsb
mov
jb
repz
hlt
les
mov
mov
sbb
mov
inc
dec
push
and
insl
jb
lods
adc
movsb
mov
aaa
and
fcmovnb
ftst
addr16
add
xchg
test
les
mov
ja
int
dec
imul
push
mov
jge
lods
or
cmp
pop
outsb
lret
cli
xchg
sbbl
and
fwait
test
sbb
lcall
fnstenv
dec
int3
ss
mov
imul
and
stos
xlat
sbb
inc
xchg
fidivrs
adc
test
mov
push
or
jle
or
xor
jnp
mov
aaa
fmulp
and
add
out
and
aam
sti
test
adc
inc
xor
bound
insl
xor
aad
das
rcr
mul
loope
cmp
mov
ds
leave
jbe
push
xchg
mov
testl
sbb
into
cmpl
adc
and
mov
orb
test
fs
pop
add
pop
nop
repz
cli
inc
ljmp
inc
jg
xchg
or
mov
orb
cmp
call
push
lahf
shl
ret
cld
int
imul
std
or
pushf
jns
mov
pop
pusha
outsl
pushf
jmp
add
sub
sub
dec
mov
mov
jbe
cmpsb
dec
push
and
pop
dec
lock
fucomp
xchg
jns
jmp
insl
jae
push
cmpl
outsl
push
xchg
mov
adc
jb
sbb
jmp
dec
and
xchg
sub
inc
adc
outsl
mov
add
fwait
mov
jge
out
rcr
inc
jge
test
mov
jle
dec
test
shlb
pop
sbb
or
push
loop
jnp
adc
cmpsb
subl
cli
movsb
arpl
or
jmp
push
jp
in
mov
test
clc
pop
jno
dec
xchg
dec
jle
imul
cmp
sbb
cmp
stos
push
clc
cmp
lods
addl
hlt
mov
or
out
xchg
shr
ljmp
rorb
cmpsb
rorb
xchg
inc
enter
xchg
adc
iret
adc
pop
jecxz
sbb
xor
cltd
add
push
push
dec
scas
test
std
push
mov
movsb
je
cmp
mov
lea
cwtl
je
fs
dec
cmp
lea
or
add
scas
jg
cmp
add
xlat
out
ret
bnd
pop
add
loop
lods
int
arpl
jo
ffreep
mov
shll
adc
pushf
outsl
sbb
push
jg
ds
add
pusha
and
pop
jge
icebp
or
inc
inc
sbb
imul
outsl
incl
cmp
adc
sbb
and
push
xor
imulb
fs
xchg
or
fsubp
adcl
mov
sarb
sub
cmp
aaa
ficomps
imul
mov
bound
std
lea
call
adc
loope
xchg
add
ret
jecxz
sub
movsl
xchg
sbbb
xchg
pusha
and
rclb
ljmp
fildll
je
mov
pop
out
pop
jle
pop
lret
sbb
xchg
lahf
popf
xchg
icebp
pop
and
adc
rclb
dec
pop
add
fdiv
fcmovb
mov
xor
fucomip
lods
and
ss
push
fsubr
icebp
ljmp
cwtl
fmuls
xchg
cwtl
out
jp
mov
std
js
mov
sbb
mov
cmp
push
lods
ret
es
cmp
icebp
mov
jb
mov
push
insl
pop
aaa
mov
pop
mov
dec
aad
shrb
test
jne
roll
fs
lret
movsl
test
iret
cli
mov
adc
loope
push
fmull
inc
orl
dec
dec
inc
fcoml
mov
insb
dec
outsl
xchg
fcmovbe
mov
test
daa
push
out
test
ljmp
xor
pop
lret
cmc
stos
fdivl
push
sub
sub
andb
gs
jge
pusha
add
push
pop
jecxz
andl
and
hlt
mov
mov
sbb
ljmp
roll
pop
and
mov
lcall
jg
call
jmp
xor
lock
xor
std
cmp
sub
loope
mov
or
fs
mov
dec
sbb
and
pop
jb
or
jg
das
adc
adc
roll
and
iret
xchg
lret
das
insl
mov
call
push
inc
sbb
jg
mov
xor
or
mov
aas
fdivs
mov
stos
ja
movsb
or
and
out
ja
add
or
xor
pop
movsl
fucomi
inc
mov
sbb
jg
fxch
lahf
sarb
jno
ja
mov
push
fstpl
rolb
mov
cmpsb
mov
rcrl
jbe
test
mov
add
call
rorl
or
pusha
xchg
icebp
fldenv
insl
pop
ja
fucomip
inc
ss
shll
nop
sbb
out
cld
mov
or
or
sbb
push
sbb
dec
cltd
jb
sbb
jecxz
stos
cltd
les
nop
cmp
add
jno
test
jno
inc
or
push
mov
xchg
push
repz
jb
and
loope
jle
sti
mov
and
push
fcoml
sti
dec
xor
mov
lock
in
add
mov
and
pop
jmp
inc
arpl
inc
jmp
stos
or
dec
shlb
fdivp
js
xchg
jecxz
mov
or
push
ret
rolb
mov
sub
jg
push
sbb
lea
mov
xchg
push
cmp
xchg
aam
scas
loop
outsb
frstor
shlb
into
ja
loopne
mov
insb
inc
pop
mov
sub
xchg
xor
jae
mov
or
or
add
push
or
push
cmpsb
push
mov
dec
xor
mov
inc
dec
aaa
jp
das
sahf
and
sbb
repnz
cmpsl
or
sti
or
cwtl
inc
aad
loopne
fstpl
ljmp
cmp
dec
xchg
xchg
mov
inc
lahf
test
lret
test
cmpsl
mov
pop
xchg
clc
jb
sub
cs
add
outsl
fwait
add
outsl
movsl
jbe
push
loope
mov
loop
lahf
xor
stos
jmp
loop
ds
inc
dec
add
pop
xor
mov
jle
mov
push
cmp
outsl
popa
js
jbe
popa
xchg
inc
mov
pushf
mov
add
ss
push
stos
movsb
aad
fbstp
dec
aad
nop
loop
repnz
popa
cmp
clc
lods
loop
dec
lods
pop
and
and
jnp
mov
pop
add
cmp
or
call
into
cli
dec
or
aad
call
push
xchg
not
lods
and
pop
out
js
mov
or
mov
lods
std
mov
push
pop
hlt
inc
adc
aaa
leave
inc
mov
xor
clc
sub
mov
pop
hlt
outsl
dec
sub
pushf
or
or
scas
cli
aad
test
dec
mov
out
mov
adc
bswap
dec
pop
mov
jne
lea
sti
inc
pop
xlat
jns
push
leave
icebp
mov
add
ja
test
add
or
inc
push
adc
adc
gs
jp
pusha
push
pop
pop
pop
xor
enter
add
aaa
decb
scas
cmpsl
push
push
mov
jmp
lea
jg
mov
andl
pop
in
push
lods
xchg
sub
lods
lds
push
pop
xor
mov
sbb
xor
sbb
cmpsl
push
ljmp
and
mov
sahf
test
test
int3
adc
in
outsl
push
push
jle
mov
pop
or
or
jg
pop
mov
inc
jae
in
movsl
cld
test
lret
push
push
out
pop
sub
xor
xor
out
xchg
pushl
jno
dec
or
gs
or
push
xor
aam
aam
adc
outsl
mov
xchg
and
push
xor
dec
addl
mov
and
das
das
sarb
pop
xorl
shll
js
cmp
into
push
stos
push
shrl
jne
add
out
pusha
mov
add
jmp
or
mov
cmc
sahf
or
xchg
add
mov
and
inc
mov
js
and
mov
jle
dec
fidivs
mov
add
xor
aad
pop
mov
unpcklps
jbe
jo
cmpsb
mov
test
fisubrs
mov
ds
outsl
in
lods
xchg
jl
cmp
cmp
adc
aad
and
lods
mov
push
std
sbbb
es
lock
mov
xchg
shll
cs
inc
out
push
lret
dec
rolb
fmul
out
das
mov
mov
es
scas
lock
test
mov
mov
pop
fisubrl
imull
pop
adc
xlat
xor
scas
or
lock
sbb
daa
fwait
pop
and
mov
dec
xchg
jg
mov
mov
lcall
call
cmp
inc
cs
xchg
nop
cmp
cli
mov
mov
inc
adc
repz
bnd
add
add
mov
movsb
out
dec
adc
mov
push
dec
mov
and
inc
js
out
mov
xor
call
mov
jns
inc
movsl
pop
mov
pushf
add
push
sbb
outsb
vmread
es
pop
adcl
mov
das
and
fdivrs
push
add
fildll
adc
jmp
sub
adc
in
cli
add
ja
push
call
out
sbb
dec
sahf
xor
add
dec
adc
test
outsb
arpl
arpl
daa
movsl
xchg
pop
sub
xlat
sbb
fcomp
jge
inc
adc
xchg
es
inc
push
es
jne
sahf
sub
pushf
jae
adc
in
mov
dec
mov
dec
push
dec
in
vmovaps
or
dec
imul
bound
inc
andb
arpl
jl
pop
cmp
pushf
fadds
test
jecxz
add
jo
rcr
sahf
int
stc
pushf
dec
iret
xlat
mov
mov
jle
inc
ret
loope
dec
add
dec
lods
pop
inc
jl
shrb
push
shll
inc
ljmp
aad
add
and
pop
andb
xadd
adc
fwait
mov
cs
insl
add
cs
mov
xor
pop
push
jae
push
dec
mov
ss
jns
push
inc
rorl
enter
and
mov
iret
mov
je
pop
inc
xchg
lahf
or
das
adc
mov
jg
cmp
xor
loope
fisttpll
rorl
mov
dec
push
pop
pop
lcall
hlt
pop
fcomps
or
aam
adc
pop
push
push
loope
jno
inc
jl
mov
mov
sbb
loopne
les
call
sub
jo
pushl
mov
mov
aam
int
inc
mov
out
sbb
hlt
aaa
call
out
mov
and
jbe
sbb
adc
pushl
xor
mov
pop
cli
sbb
and
push
pop
arpl
pop
clc
outsl
inc
nop
cmp
into
loop
shr
jmp
push
std
movsl
pushl
inc
sbb
ret
aad
sbb
mov
lock
popa
jne
sub
xor
shlb
sub
mov
loopne
xlat
pop
or
pusha
mov
pop
cld
adc
decl
cmc
xor
adc
orl
pop
fistpl
add
nop
lcall
mull
jge
cmp
pop
and
inc
jne
mov
outsb
insb
sbb
or
pop
mov
sbb
insb
aaa
mov
or
dec
lods
shll
or
push
jno
decl
jbe
das
sub
jmp
int
in
fwait
and
ret
push
pop
mov
popa
pop
js
lods
mov
adc
sub
pop
outsl
xchg
sar
int
in
push
cs
ret
jbe
into
inc
xchg
pop
fadds
shl
adc
add
subb
cmp
ret
sub
lock
inc
xchg
outsl
and
stos
out
jle
dec
xchg
lods
pop
xchg
cli
popf
and
mov
xor
rcrl
fwait
mov
or
je
ret
cmp
push
stos
add
nop
cld
enter
mov
je
sub
sub
neg
push
jecxz
pop
and
and
add
pop
and
mov
std
shr
cmc
jns
pop
mov
faddl
stos
ret
xchg
mov
movsb
ljmp
sbb
out
ret
mov
pop
and
dec
or
shll
adc
into
in
stos
inc
mov
js
cwtl
nop
lret
push
xchg
rorl
mov
sbb
enter
jmp
mov
shlb
ret
mov
je
push
and
inc
pop
and
inc
rolb
fbld
push
pop
lea
dec
or
in
add
dec
out
rcrb
or
adc
inc
sub
sbb
mov
dec
pop
jne
sbb
cld
in
lods
pop
shr
pop
outsl
hlt
je
sbb
ficompl
outsb
and
inc
push
dec
pop
std
xchg
xchg
stos
jg
negl
jg
inc
cmpsl
lcall
push
clc
xor
mov
ds
int3
mov
aad
pushf
xchg
adc
xor
push
sbb
sbb
mov
mov
not
outsb
insb
sub
cmpsl
cwtl
push
adcl
fwait
call
mov
or
jl
pop
clc
test
in
ror
jmp
aaa
jp
adc
inc
aad
xor
push
adc
mov
and
mov
cmp
or
pop
and
jbe
cmp
mov
mov
movsl
sbb
cmp
cmc
pop
fidivrs
lock
pop
pop
lds
cld
das
mov
pop
jge
call
in
pop
test
adc
jne
notb
jo
jae
push
cmp
out
push
jne
sbb
xchg
inc
cld
add
pop
enter
mov
mov
or
lcall
icebp
movsb
xor
aaa
push
loopne
rcrb
aaa
xlat
inc
sbb
xchg
call
std
cwtl
sbb
mov
cli
jo
incl
mov
pop
or
lcall
jg
dec
idivl
aaa
ja
push
xlat
sbb
pushf
push
cmc
sub
cwtl
or
dec
pop
or
cmp
pop
and
cmp
nop
pop
iret
shl
test
je
xchg
fimuls
jno
call
ret
insb
imul
inc
mov
sbb
dec
aam
icebp
pop
mov
jge
shll
cmpsb
xchg
xlat
mov
rorb
add
pop
call
inc
dec
stc
xchg
jmp
dec
outsl
mov
push
icebp
roll
pop
mov
nop
xchg
fs
sar
or
lret
or
mov
insl
jno
push
xchg
nop
dec
es
aaa
cld
mov
and
insl
jmp
push
add
add
mov
jle
icebp
and
addr16
test
lcall
loopne
adc
push
mov
adc
arpl
in
dec
addl
cmpsb
sbb
sub
mov
insl
add
jns
ljmp
data16
pop
inc
mov
stos
pop
pop
adc
mov
push
push
push
mov
mov
add
mov
sbb
fbstp
dec
cmp
inc
mov
push
std
pop
jmp
ret
xor
ljmp
popa
outsl
mov
push
jecxz
js
fisubs
push
add
stos
jle
mov
les
add
scas
fldl2t
out
add
daa
rcrl
and
add
inc
popl
mov
dec
test
dec
xchg
int
inc
gs
adc
inc
mov
and
pop
out
in
pop
mov
pop
cmp
add
inc
cld
fcoml
xor
sbb
cmp
sbb
std
push
lds
cmc
jg
ret
pop
push
jg
sbb
adc
jae
xchg
iret
popf
mov
test
inc
inc
sti
mov
fcomip
test
xorb
jae
or
dec
pop
imul
fldl
mov
and
ljmp
push
loop
shlb
mov
js
mov
paddb
mov
adc
fisubrl
bnd
and
push
sbbl
sbb
mov
mov
mov
call
dec
sbb
sub
xchg
mov
xor
jg
insl
outsb
mov
fmuls
into
fadds
cwtl
ds
xchg
or
lahf
stos
jo
jle
sub
aam
filds
mov
repnz
xor
inc
or
stc
or
pop
ficoml
sbb
ljmp
insb
mov
es
sub
mov
cs
mov
jg
sti
fbstp
mov
dec
jae
mov
push
repz
test
ja
sub
jg
xchg
fnstcw
addr16
cld
mov
ljmp
push
sub
sbb
call
pop
xchg
lcall
and
or
mov
test
aam
aaa
lods
mov
imul
or
mov
dec
inc
cmp
xchg
fdivs
inc
mov
loopne
lock
adc
and
jecxz
sbb
cmp
mov
push
jecxz
xor
mov
cmp
push
jo
mov
push
xchg
mov
out
add
push
sbb
stos
arpl
add
dec
dec
mov
in
fcoms
jle
push
inc
adc
push
clc
mov
adc
pop
call
mov
add
aam
ss
decb
fadds
mov
cmc
lcall
ret
pushf
movsl
mov
add
in
fadd
mov
inc
push
push
rolb
xchg
lahf
mov
push
frstor
cld
test
adc
out
sbb
sub
aaa
cmp
xchg
jno
mov
sbb
adc
mov
cmp
arpl
or
data16
fnsave
mov
test
aaa
dec
nop
xchg
adc
cltd
inc
and
pop
jp
cmp
sbb
xchg
test
cmpsl
subb
jae
inc
inc
movsb
add
leave
jae
inc
test
nop
push
mov
pushf
cmpsl
and
fstl
adc
int
shrl
test
dec
pop
stos
rcll
insl
inc
into
lcall
xor
cli
pop
icebp
and
and
clc
lcall
push
mov
inc
sub
int3
xchg
rolb
xor
les
ret
jg
aas
add
test
mov
and
xor
hlt
call
or
das
sbbb
add
jo
ret
adc
sbb
pop
inc
inc
idivl
pop
ret
pop
mov
add
lock
loope
pop
jp
sbb
sbb
dec
push
mov
stc
sbb
push
repnz
push
mov
das
sub
shl
xchg
in
cwtl
add
jl
loopne
negb
push
add
pop
pop
pop
adc
loop
outsb
daa
mov
push
shrw
adc
dec
pusha
xchg
xchg
or
adc
rolb
sahf
test
sahf
test
roll
repz
pop
ja
pop
mov
cmpb
cmp
std
or
mov
push
ficoml
mov
hlt
pop
mov
aaa
cli
lret
fnstenv
shll
or
mov
aas
or
xor
sbb
lahf
mov
mov
inc
sbb
insl
mov
or
or
stos
xchg
mov
jbe
push
dec
push
sub
pop
or
jl
dec
mov
mov
xchg
mov
mov
push
ret
test
outsl
in
test
aas
adc
jbe
push
pop
outsl
in
pop
pop
adc
mull
data16
or
shlb
mov
arpl
jb
cli
push
std
pop
inc
or
cmpsl
addr16
push
sbb
scas
pop
lahf
jbe
clc
push
js
or
repnz
push
jge
sti
testb
jne
into
or
nop
jmp
ret
int3
jge
insl
inc
in
sbb
arpl
in
or
sub
nop
aam
xchg
xor
in
mov
movsb
repz
movsb
xchg
adc
pop
sbb
iret
inc
fldenv
adc
in
mov
xor
lcall
sub
jecxz
enter
adc
enter
orl
sub
divb
mov
call
testb
xor
lds
pop
mov
mov
in
sub
in
mov
inc
lods
sarb
in
js
cmp
xchg
fwait
inc
adc
sub
sub
cmc
jno
add
sub
addr16
andb
into
mov
movsl
testl
or
jg
js
decl
jmp
jae
icebp
rcl
sbbl
sbb
push
mov
sub
cmp
jb
sbb
enter
or
jecxz
inc
clc
pushf
lret
pop
sub
jo
in
add
insl
mov
pop
pop
stos
lcall
xor
lea
push
adc
lock
ljmp
sub
outsb
add
call
pop
loope
jmp
das
and
mov
in
popa
adc
lret
jg
push
call
pop
in
bound
mov
xchg
xorb
in
mov
inc
adc
add
fcomi
pop
mov
xchg
add
lea
das
mov
lea
adc
mov
jp
fcompl
xchg
addr16
xor
sub
inc
dec
icebp
movsl
push
and
dec
mov
stos
inc
iret
xor
cmpsl
call
sbb
lret
hlt
hlt
divb
and
cmpsl
pop
test
mov
mov
pop
in
jmp
mov
imul
shlb
sbb
cmp
push
int3
push
roll
aam
ret
std
rcl
mov
cmp
daa
hlt
arpl
mov
lret
adc
adc
outsl
cmc
insl
mov
and
mov
data16
mov
dec
cld
add
and
xor
fimull
inc
imul
push
add
loopne
and
in
mov
add
sub
mov
push
push
inc
adc
ljmp
jne
sub
fldln2
mov
cmpsl
js
push
mov
xor
leave
adc
cmp
mov
fcomps
outsl
repz
in
pop
push
jl,pn
inc
push
flds
cmp
lock
push
add
and
add
js
imul
sarl
or
cli
data16
add
arpl
pop
pop
jno
std
insl
jns
aaa
xor
adc
rcrb
inc
sub
addb
lret
push
mov
adc
lcall
fsubr
mov
repz
pop
pop
add
jne
movsl
fsts
imul
push
mov
push
fdivs
dec
mov
adc
mov
sbb
pop
xchg
mov
push
mov
repz
or
movsl
adc
cmc
mov
ret
je
adc
sbb
sub
mov
out
cmp
mov
add
dec
call
xchg
xchg
xchg
ret
dec
and
pop
lds
add
sub
adc
sub
add
mov
push
jecxz
outsl
std
fldenv
or
push
sbb
push
cld
cmp
cmc
mov
cmp
into
adc
bnd
iret
popf
fdivr
outsl
add
pusha
je
cwtl
sub
daa
mov
ret
mov
loop
add
rorl
cmp
in
in
into
mov
adc
cmp
push
adc
int3
les
sbb
imul
and
jns
aaa
pop
sub
out
push
add
cmpb
fucomip
scas
movsb
mov
jl
push
aam
aad
push
int3
mov
xor
jnp
ret
adc
repnz
or
fidivrl
fmul
and
int3
inc
repnz
xor
mov
out
xor
in
jne
aad
fwait
xor
push
into
xlat
arpl
push
andl
loope
hlt
inc
xchg
mov
ja
pop
xor
icebp
divb
in
pop
pop
jbe
xor
cmp
inc
das
adc
dec
mov
push
sub
sbbl
es
ljmp
das
jb
andb
jbe
xchg
pushl
push
add
lock
push
inc
stos
stos
das
repnz
lret
and
push
hlt
lret
adcl
loopne
sbb
scas
cmp
pop
pop
repnz
imul
xor
iret
inc
jmp
dec
pushl
xchg
aas
repz
mov
push
popa
xor
fstl
pop
mov
jmp
inc
aam
xor
cmp
mov
jno
repnz
cmpsb
xlat
jno
cmp
mov
leave
xchg
mov
lcall
xor
cmpsb
and
pop
adc
add
mov
in
push
rclb
push
je
bound
push
test
lea
push
mov
lret
popa
test
lock
xor
flds
mov
sbb
ljmp
and
inc
test
leave
aam
aas
xor
adc
pop
dec
add
inc
and
push
dec
mov
mov
arpl
inc
sub
and
das
cmp
mov
pop
and
xor
lea
mov
cmp
aad
scas
ljmp
rcrb
cmp
inc
scas
pop
aaa
pop
idiv
fists
pop
lods
sub
mov
or
push
insb
jno
roll
xor
loopne
lahf
clc
push
lea
mov
dec
xchg
mov
andb
mov
cmp
add
xrelease
jb
adc
mov
sub
ret
inc
sahf
inc
sbb
xchg
ljmp
filds
inc
jmp
icebp
test
les
movsl
aad
pop
mov
aad
or
nop
out
push
and
dec
call
fstl
mov
sub
negl
fdivs
add
icebp
mov
jmp
fstpl
pop
ss
pop
hlt
sbb
shrb
ret
mov
cmpsb
pop
adc
adc
rcll
mov
inc
sahf
add
sub
test
mov
inc
and
mov
xchg
ds
pop
push
je
incb
dec
inc
shl
movsl
jmp
inc
shr
loope
mov
mov
mov
pushf
fadds
cmovns
jecxz
and
imul
rcrl
jno
idiv
test
dec
mov
adc
mov
add
lcall
notb
xor
and
pop
ss
adc
movl
test
hlt
lahf
xor
loopne
mov
mov
xor
push
adc
or
icebp
mov
fisubl
stos
icebp
loope
cld
mov
outsl
jno
push
pop
jg
sarb
es
lods
lcall
cli
dec
lods
outsl
lock
je
sbb
out
test
lea
mov
scas
push
fildll
rolb
or
inc
add
out
insb
inc
je
mov
enter
out
fcom
sbb
inc
and
jg
fistpll
shlb
mov
push
pushl
xorb
xorl
loopne
pop
js
imul
test
mov
mov
jmp
lock
cmc
push
xchg
aad
fwait
aas
inc
jge
orb
movsl
jg
stos
cmp
xchg
ror
icebp
lret
push
sbbb
fcmovnu
into
or
add
jbe
ljmp
fistpll
pop
lea
out
pcmpgtw
aaa
add
adc
jle
add
mov
push
push
pop
xor
jae
inc
bound
out
call
xor
in
xchg
push
data16
xlat
jbe
hlt
icebp
dec
inc
xchg
add
jno
push
call
imul
pushf
jns
adc
dec
mov
push
sarl
jl
cmp
xchg
insl
mov
popf
xchg
lret
sbb
inc
jle
jge
adc
aad
xchg
xchg
sub
adc
int3
adc
mov
imulb
cmpsb
inc
xor
mov
cmp
insb
icebp
or
fwait
test
scas
lods
mov
clc
aad
test
ret
aaa
or
inc
mov
lods
mov
out
mov
lods
push
and
jp
jg
push
pop
pop
mov
movsb
sbb
roll
sbbl
jle
mov
sbb
pusha
pusha
and
outsb
jmp
mov
dec
dec
jne
mov
shl
popf
bound
push
into
jae
sbb
mov
fwait
push
sbb
hlt
mov
or
jns
inc
dec
jo
or
inc
outsl
mov
xchg
inc
ja
push
mov
jno
hlt
les
pop
fdivr
gs
out
ret
dec
inc
lods
add
hlt
dec
adc
call
cmp
mov
es
mov
jp
cmp
ret
int
add
stos
mov
xor
jmp
pop
lahf
and
push
in
out
aad
fcmovnu
mov
pop
or
iret
xchg
inc
inc
adc
sti
or
dec
sbb
test
pop
hlt
lret
lahf
jmp
jecxz
or
ficoml
aad
out
andl
fdivs
xchg
inc
sbb
aam
push
scas
lea
cltd
je
mov
mov
mov
and
push
fldt
jno
loopne
mov
mov
data16
int
pop
mov
call
sub
hlt
xor
lcall
mov
gs
ljmp
or
push
inc
je
mov
add
insl
les
test
pop
scas
push
cs
xor
test
sbbl
in
cmp
insb
pop
xor
pop
jo
jl
jg
les
in
sub
fimull
roll
lds
xor
cmpl
push
inc
xor
shrl
jmp
in
xor
stos
aam
clc
das
push
fdivrl
push
pop
loopne
lahf
mov
mov
mov
loopne
shrb
pop
test
xchg
nop
sbb
dec
ss
loope
mov
movsl
add
xor
jne
sbb
lcall
aam
mov
inc
dec
ret
repnz
jmp
xchg
adc
pop
inc
mov
adc
fwait
in
and
push
pop
mov
rcr
inc
imul
dec
out
test
jmp
inc
js
ret
into
xor
jbe
xlat
xor
cmc
das
lock
add
mov
sbb
mov
sub
mov
add
mov
jmp
pusha
inc
push
and
cmpsl
jle
xchg
mov
sub
flds
xchg
dec
fdivrl
lret
ss
sbb
sub
cli
jbe
inc
and
sbb
sarl
imul
in
sub
popa
idivb
adc
sbb
adc
jmp
mull
push
push
jge
mul
test
jg
push
mov
mov
dec
cwtl
lahf
jb
push
mov
mov
addr16
pusha
es
mov
stos
pop
adc
lret
mov
rorb
fdivrp
pop
lahf
jb
pop
cld
iret
or
lret
xor
ret
in
std
inc
mov
bound
fwait
sbb
test
imul
cmp
xor
lcall
loope
into
mov
shrl
pop
mov
adcl
push
pop
ficoml
les
movsb
fsts
frstor
lret
or
pop
mov
das
xor
cmp
xor
imul
outsb
cli
sti
add
pop
or
adc
push
outsl
cwtl
bnd
sbb
sub
call
add
xor
inc
sub
push
scas
rclb
pop
js
push
dec
mov
inc
outsl
ljmp
fimuls
loope
jb
or
push
adc
in
cmp
pop
and
adc
pop
push
dec
inc
lods
mov
ljmp
mov
shl
divl
rorb
and
push
jmp
mov
out
loop
incl
dec
xchg
call
dec
das
cmpsb
xor
das
inc
lock
inc
fadd
loopne,pn
cmpsb
or
out
js
adc
lcall
jb
call
test
xchg
inc
push
clc
and
mov
adc
xchg
and
call
sti
lds
ret
dec
mov
mov
stos
fldl
ljmp
adc
add
sub
xor
jmp
in
pop
mov
shrb
adc
popf
andb
ret
aad
cltd
pop
pop
call
inc
xchg
push
pop
or
das
rcl
scas
pop
cmpsb
repnz
lea
psubw
out
adc
lods
xchg
pusha
loope
jle
push
movsb
scas
insb
data16
lret
push
adc
mov
mov
add
mov
out
mov
out
pop
mov
mov
xor
insb
sbb
sti
je
xchg
stc
shl
int
xchg
and
pop
mov
arpl
fildll
cmpsb
jg
jl
push
sbb
jecxz
ret
or
mov
sbb
xor
lret
vorps
jge
in
lret
and
into
sti
dec
int
addr16
lds
mov
arpl
insb
fs
int3
pop
cmpsb
enter
inc
xchg
xchg
scas
addr16
push
dec
pop
test
push
mov
pop
bound
popa
movsb
jnp
ljmp
pop
and
movsb
loope
cmpsb
dec
push
and
sbb
mov
and
fildll
and
mov
ljmp
cmp
mov
pop
add
sbb
add
jno
dec
xor
aaa
lcall
add
jne
pop
jp
adc
das
leave
subb
pop
mov
orb
inc
dec
loopne
hlt
cmpsl
pop
hlt
add
mov
push
mov
mov
pop
pop
and
aad
sarb
sbb
loopnew
imul
mov
inc
add
out
js
movsl
in
push
mov
pop
call
sbb
roll
test
mov
lcall
lahf
fisttpl
pop
fwait
sbb
mov
and
rcrl
jns
divb
mov
cwtl
cld
ds
jae
sub
sub
fwait
call
and
cmpb
std
scas
push
mov
mov
mov
push
adc
das
adc
sahf
in
push
shl
incl
shlb
jnp
adcb
popf
inc
addl
pop
mov
jno
jns
rcr
jle
sbb
and
jecxz
pushf
push
in
sbb
data16
fists
rcrb
mov
arpl
cmp
sbb
fwait
cmp
push
jmp
mov
cmc
test
out
dec
jb
or
and
gs
mov
int3
pop
pusha
fst
cmc
push
jecxz
jmp
loope
mov
mov
je
add
sbb
mov
cmp
dec
bound
mov
loope
call
shll
xor
xchg
jmp
mov
xchg
lcall
mov
imul
in
lea
hlt
inc
sahf
push
or
xchg
ss
inc
js
dec
sti
dec
lea
xchg
pop
imul
push
inc
xlat
insb
adc
mov
loop
or
or
sbb
add
inc
dec
insb
adc
ljmp
sub
jb
loopne
add
rcrb
call
xchg
xor
pop
fs
mov
sti
adc
adc
aas
pusha
scas
sub
adc
adc
adc
and
push
cmpsl
jb
mov
mov
ds
in
out
pop
outsb
mov
jb
clc
outsl
add
fsubl
out
out
lcall
mov
and
mov
jns
pop
lea
movsb
imul
shlb
jo
mov
pop
pop
inc
push
xchg
mov
cwtl
outsb
push
je
repz
mov
or
add
mov
jb
out
not
test
jge
xchg
lcall
loopne
insb
pop
in
adc
shl
ss
sbbb
jae
mov
icebp
jg
sbb
or
xor
add
and
inc
pop
clc
int3
rcll
insb
faddl
icebp
push
jo
ret
fsubl
cs
inc
ret
fcom
push
test
popa
pop
inc
pop
fnstenv
jbe
mov
dec
push
add
shll
mov
test
stos
daa
sub
scas
push
popa
es
xlat
pop
inc
xchg
loopne
dec
and
pop
jmp
imul
loop
mov
xchg
decb
cmpsl
inc
cmp
xor
pop
shll
jg
sbb
aaa
mov
xchg
dec
rorl
movsb
lret
aad
pop
out
ss
pop
mov
pop
fmuls
pop
jmp
popa
and
fbstp
test
mov
leave
sahf
outsl
andb
int3
sub
and
inc
subl
mov
imul
sahf
sarl
in
mov
jle
push
and
push
movsb
loopne
iret
popf
clc
lods
mov
lods
dec
jmp
mov
mov
mov
mov
and
lds
test
insl
mov
stc
jmp
data16
pmaxub
xor
hlt
lret
bound
add
stc
inc
mov
ret
insl
push
mov
mov
mov
mov
dec
into
pop
jecxz
adc
mov
pop
push
dec
mov
loopne
push
clc
cli
xchg
lcall
xchg
loope
mov
in
aad
pop
fldenv
pop
cwtl
mov
call
or
inc
rorb
adc
push
adc
insb
fdivs
mov
test
ret
loope
std
inc
fidivrl
aad
repnz
push
xchg
cltd
mov
pop
mov
push
xlat
and
out
lcall
mov
aaa
cmp
or
cs
dec
jle
jbe
push
loop
add
out
add
nop
outsb
call
xchg
pop
daa
mov
js
roll
xor
sbb
out
xor
pop
dec
insb
insl
lds
xor
pop
mov
addr16
lahf
mov
mov
mov
or
test
inc
adc
js
ret
imul
cmp
dec
int3
icebp
cmp
and
jno
data16
inc
push
bound
mov
leave
cmp
outsl
ja
nop
ljmp
leave
dec
add
jmp
mov
jns
or
jg
add
push
fcmovnb
fsubp
scas
push
mov
sar
pop
mov
out
mov
jo
popf
or
push
inc
aaa
xor
sbb
push
rorb
shlb
insl
xchg
mov
imul
pushf
dec
inc
add
push
stos
xchg
inc
jecxz
cmpb
lcall
sbb
jle
loope
pop
cmp
arpl
out
inc
cmp
sbb
xchg
mov
daa
test
push
sub
xchg
jbe
ds
xchg
push
jl
rolb
inc
js
std
out
call
dec
dec
std
or
addr16
mov
arpl
in
lods
pop
test
cmp
mov
jno
mov
rolb
cld
or
xchg
insl
lods
xchg
adcl
incl
popa
xchg
outsb
lcall
jae
and
push
outsl
das
cld
ljmp
cmpsl
or
lds
dec
lahf
and
js
cmc
cmpsl
ja
cs
stos
and
inc
adc
test
push
push
inc
mov
mov
add
fadds
icebp
movb
lea
xor
cwtl
fildl
das
stos
inc
pop
stc
ror
push
cld
lcall
and
lds
sub
stc
jecxz
movsb
scas
dec
shll
ret
sbb
test
iret
sub
dec
fst
mov
and
mov
test
mov
bnd
sahf
pop
inc
cmp
lds
int3
aam
clc
jo
out
fsts
or
or
je
push
sub
jmp
movsl
push
sti
sub
repnz
dec
xchg
nop
addl
jnp
jb
mov
mov
pop
mov
lea
and
cld
das
xor
sahf
lock
ds
mov
push
js
cmpsb
arpl
fldt
xchg
and
mov
add
outsl
les
mov
repnz
bound
jbe
std
lcall
call
movb
loopne
jge
nop
dec
out
out
inc
sub
jg
imul
pop
xlat
xor
insb
push
add
jnp
inc
dec
sahf
lcall
and
pop
jne
clc
mov
adc
xor
add
mov
inc
rcl
xor
aam
bound
adc
pop
fstpt
add
shrb
cs
xchg
dec
xchg
xchg
ficoml
pop
sbb
mov
das
clc
add
lret
insl
pop
call
mov
mov
loopne
jmp
jecxz
dec
push
out
rolb
sbb
sbb
fst
fstp
mov
add
out
cmp
mov
lods
inc
adc
rorl
adc
inc
bound
xchg
mov
ror
enter
in
loopne
les
adc
adc
cmp
mov
sbb
xor
dec
popf
lcall
lret
inc
inc
ficoms
xchg
xor
out
test
add
cmpsl
jno
fwait
lods
orw
out
ljmp
loopne
aaa
jo
or
jnp
lahf
in
jno
sbb
int
ljmp
xchg
les
mov
jno
icebp
or
dec
int
rorl
push
fisubs
push
push
cs
out
ficoml
cs
dec
cmp
fdivr
dec
stc
dec
or
dec
dec
mov
mov
pop
pop
adc
out
cli
adc
jo
sbb
mov
mov
sbb
jle
cmp
sbb
mov
andl
aad
pop
mov
es
adc
push
cmp
sbb
enter
or
pop
inc
imul
pushf
cmp
hlt
fwait
xor
cmpsb
pop
gs
inc
add
add
loope
mov
popf
sbb
xchg
sub
pop
cli
ja
push
lock
das
mov
test
addl
inc
mov
xor
sub
out
ss
ljmp
xor
inc
sbb
loopne
adc
fmuls
and
in
adc
rorl
push
das
pop
clts
shlb
hlt
pushf
mov
mov
ret
inc
dec
fwait
popa
lahf
mov
fistpll
dec
jecxz
leave
fwait
out
sub
sarb
adc
cmpsb
mov
mov
aam
xchg
push
fidivl
pop
add
mov
and
std
jbe
add
aam
outsl
inc
cld
daa
sbb
in
mov
jmp
inc
test
rclb
pop
jb
push
push
pop
mov
test
mov
adc
inc
shll
sbb
outsl
mov
pop
dec
jo
push
ret
insl
and
jl
and
add
hlt
xor
xor
sub
test
cmc
pop
repnz
inc
punpcklwd
fnsave
mov
mov
mov
icebp
mov
mov
loope
jnp
addb
push
dec
bts
cwtl
and
test
stc
aam
mov
adc
mov
ffree
mov
shlb
lea
std
lahf
jecxz
cld
pushl
cmp
dec
lods
ret
sub
sbb
je
lea
add
push
loope
outsb
clc
nop
sarl
fwait
pop
inc
add
pushl
pusha
call
popa
adc
lret
fildl
test
das
insb
mov
dec
aas
push
inc
outsl
mov
jb
push
nop
xchg
cltd
lret
into
mov
imul
adc
test
sub
adc
imul
cs
adc
rolb
icebp
or
insb
add
mov
enter
and
out
add
test
repz
gs
mov
and
mov
mov
or
mov
fbstp
shll
ja
add
aas
jb
push
test
in
fstpt
and
test
sbb
pop
dec
lock
fdivr
outsl
incl
adc
jo
test
jne
das
push
or
xchg
jecxz
xchg
ja
popa
mov
adc
pusha
dec
repz
pop
cli
pop
loopne
leave
inc
lcall
lcall
mov
js
test
aaa
sbb
push
adc
pop
and
mov
ja
xchg
out
rcl
pop
in
push
jle
pop
fdivs
sbb
sub
pop
mov
push
incl
lahf
pop
int3
xchg
lods
fadd
jg
call
or
test
xor
fldenv
out
sub
push
adc
mov
pop
xchg
sub
mov
mov
inc
push
loope
sbb
mov
mov
push
ljmp
shlb
lret
jmp
add
fwait
or
das
fstpl
adc
or
sbb
jbe
mov
pop
mov
push
scas
or
les
or
mov
dec
ja
and
mov
sbb
and
or
pushf
push
icebp
add
scas
mov
aaa
push
or
jb
or
incb
add
fistl
push
sub
mov
or
lcall
inc
fs
mov
cmp
lret
mov
cmp
cld
insl
jb
cmp
mov
mov
lock
pop
lock
aaa
pop
aam
xor
add
rolb
fisttpl
mov
fists
jo
jo
fistpl
lock
shrl
roll
push
mov
enter
adcb
jle
clc
test
push
imul
xor
lods
call
in
and
jno
mov
sub
hlt
pop
mov
je
nop
xchg
frstor
sub
or
ja
inc
mov
mov
push
adc
jnp
dec
scas
cli
cs
shl
das
insl
fistl
ret
and
stc
mov
xor
cmp
adc
inc
and
or
dec
std
xor
enter
jl
rolb
inc
sbb
or
mov
add
mov
mov
das
inc
pop
or
es
mov
rorl
cltd
jle
mov
repnz
icebp
jp
unpcklps
jo
arpl
fists
in
ljmp
add
data16
jb
and
cmp
sbb
mov
ja
gs
addr16
mov
and
jns
mov
addb
and
jl,pt
xor
or
pop
sbb
push
ja
not
adc
sub
mov
rolb
cmpl
pop
loope
push
jl
mov
loope
imul
push
inc
pop
mov
sbb
leave
test
jge
stos
mov
xorb
xlat
dec
add
cwtl
inc
jg
sbb
clc
ljmp
jns
or
insl
daa
mov
dec
ret
dec
aaa
mov
mov
push
pop
aam
xchg
cmp
adc
and
jecxz
ficompl
fdiv
mov
push
and
test
sbbb
in
into
and
outsl
mov
notb
je
leave
add
fwait
and
mov
or
in
lds
std
fimull
dec
cli
addb
call
sahf
sbb
xor
inc
fld
mov
mov
add
xor
xchg
mov
adc
push
das
mov
and
fadds
fldpi
fwait
test
insb
inc
popa
test
gs
pop
xor
in
sub
jmp
aam
fbld
fisubs
int3
into
out
nop
je
xor
in
jmp
add
mov
mov
jnp
out
mov
jno
jno
dec
test
repz
mov
mov
mov
dec
and
mov
push
fucomp
pmulhw
scas
or
xchg
ljmp
pop
js
dec
inc
mov
call
popf
imul
fs
jp
cld
ljmp
mov
rcl
push
shrb
in
in
mov
enter
test
notl
outsl
sub
pcmpgtd
movb
dec
cmp
mov
ja
sub
pop
dec
fnsave
les
or
mov
push
out
nop
jmp
rcll
cmc
es
push
adc
outsb
inc
lcall
jnp
in
or
in
iret
subl
push
adc
rclb
cli
mov
pop
hlt
insb
cs
in
test
subb
loopne
xchg
mov
xchg
test
push
test
pusha
fcoms
call
stos
in
xor
out
pop
rorl
les
imul
jno
test
or
cmpb
shl
jg
popa
ss
inc
xor
cwtl
std
xchg
mov
daa
xchg
or
adc
scas
insb
loopne
inc
push
cmp
sbb
mov
cmp
adc
mov
mov
dec
mov
sbb
push
test
aas
push
jg
sub
jbe
repz
loope
add
mov
call
cmp
pop
loopne
jbe
push
lds
pop
lds
mov
jl
fistps
outsl
mov
add
jg
mov
mov
adc
cmp
test
or
pop
test
ss
dec
jecxz
stos
subb
inc
add
lahf
sahf
push
fsubp
es
pop
repnz
aam
xchg
andb
mov
xchg
clc
push
outsb
xor
xor
loopne
lock
sbb
andl
fbstp
or
add
xchg
test
ficoms
and
jmp
into
shrb
mov
clc
fdivrl
or
std
inc
out
push
inc
jno
or
dec
xor
adc
mov
push
daa
aam
popf
aad
sub
mov
insb
fcmovnb
shlb
fsubl
subl
inc
or
das
dec
int
or
inc
stc
loopne
mov
jmp
sbb
mov
sub
inc
lock
mov
sub
pushl
jle
rcll
dec
lret
mov
insb
pop
or
or
xchg
clc
sbb
and
into
cmpsl
xor
pop
pop
jge
int3
dec
lds
dec
mov
pop
pop
loope
in
pop
and
inc
pop
dec
mov
std
fsubs
mov
lock
mov
push
mov
jbe
pop
add
mov
test
or
xor
and
dec
add
add
mov
pop
aam
cmp
fistps
cltd
mov
cs
push
sub
mov
cmpsl
sbb
and
xor
pop
mov
jecxz
cmpsb
jns
adc
lods
lret
in
jg
push
or
mov
in
enter
fs
loope
sbb
cmp
add
push
ror
fs
fs
call
mov
add
adc
insb
and
mov
loopne
dec
and
sub
call
sbb
or
push
pop
sbb
nop
fidivrl
sbb
pop
cld
cmpsb
repnz
addl
pop
in
push
mov
pop
test
sub
cmp
xor
lods
imul
ljmp
out
xchg
outsl
cli
popa
and
inc
mov
adc
or
mov
test
mov
xchg
mov
inc
shll
add
push
dec
jp
out
jecxz
mov
dec
mov
into
cltd
pop
addr16
insb
loop
adc
sub
jmp
jle
fcoms
enter
xorl
test
cmp
sbb
rolb
inc
inc
mov
add
mov
cmp
sub
push
jp
scas
mov
orl
data16
je
adc
add
jne
pop
popl
rorb
pop
or
dec
cmpsb
mov
xchg
nop
loopne
aaa
mov
inc
jbe
and
dec
pop
enter
cld
jbe
xchg
dec
inc
push
or
xor
jl
add
adc
in
jp
jno
out
jle
cmc
or
xor
or
sahf
repz
sbb
lds
in
jbe
jecxz
in
cmp
es
das
aam
cwtl
fbstp
cli
mov
lods
dec
out
push
sbb
adc
mov
sub
pop
push
lret
mov
loopne
lcall
pop
lahf
das
sbbb
xchg
leave
repz
loopne
dec
outsl
out
std
lock
fwait
aad
in
pop
cltd
xor
in
cli
mov
and
mov
popa
xor
jmp
adc
jnp
jno
pop
stos
xchg
fdivs
fs
sti
in
xchg
jno
inc
int
roll
out
fcomp
push
andb
xchg
icebp
pushl
mov
lds
pop
xor
enter
clc
push
mov
sub
or
dec
rcll
or
xor
xchg
lahf
scas
les
pushl
incl
mov
xchg
mov
insl
imul
loope
jbe
fwait
out
loopne
clc
in
pop
ja
aas
xor
mov
xchg
mov
incl
jl
or
inc
or
inc
push
sub
out
jmp
std
es
std
mov
jb
dec
je
xor
sar
mov
fwait
rorl
and
xor
std
mov
pushl
or
xchg
xor
lods
push
mov
sub
lcall
push
dec
jne
pop
int3
push
outsb
push
pop
clc
or
sti
repz
cmp
push
add
test
testb
push
pop
inc
addl
ds
push
into
pop
push
cmp
test
push
js
mov
or
iret
cli
inc
dec
pop
or
mov
sbb
jp
movsl
lret
sbb
mov
push
cmp
fnstenv
cwtl
ja
rcl
negb
jo
cmpb
inc
imul
xchg
pop
cmp
xor
scas
in
mov
push
mov
movsl
push
lods
nop
outsl
dec
mov
xor
repnz
inc
in
ret
pop
bound
cs
jecxz
pop
sbb
icebp
pushf
push
mov
cltd
xor
xchg
or
add
test
adc
sub
sbb
bound
repnz
das
push
das
or
jge
movsb
sti
into
adc
jnp
mov
inc
dec
add
hlt
xchg
dec
test
xchg
mov
mov
cmp
cmp
xor
adc
fbstp
mov
sub
rolb
outsl
incl
pop
sbbl
pop
out
test
mov
in
push
sub
or
add
in
push
jo
xchg
add
sub
lret
lods
imul
das
sub
xchg
pop
push
test
call
pop
cmpsb
jge
sbb
rcrl
cmp
orb
xlat
pop
or
stos
and
xchg
pop
adc
lods
ffreep
out
sbb
adc
repz
ds
mov
or
or
es
fldt
add
or
jb
ja
xchg
mov
ret
test
jne
adc
hlt
jns
lahf
inc
jmp
jb
cmp
or
mov
das
or
pop
andl
jnp
push
hlt
xchg
mov
mov
push
orb
push
push
nop
cmp
loopne
cmc
pop
leave
mov
add
adc
popa
dec
cmp
push
adc
push
xor
xchg
mov
mov
lea
call
pop
xor
mov
mov
dec
stc
push
cmp
mov
fimuls
mov
cmovb
pop
sbb
std
xchg
push
daa
jge
add
das
testb
insl
insl
rolb
aam
clc
ljmp
mov
test
les
inc
cmp
aam
out
inc
shll
and
inc
adc
mov
insl
popf
shlb
jbe
mov
rorb
stos
jmp
xor
mov
jo
fmull
or
inc
loope
or
loopne
push
or
sbbl
js
mov
push
or
adc
push
cli
add
das
sti
jp
inc
mov
out
add
mov
mov
sub
popf
cwtl
xchg
incl
pop
mov
cmp
and
ret
inc
lds
add
sub
leave
dec
repnz
scas
fstpl
mov
adc
loope
add
iret
adc
inc
aam
mov
jno
mov
stos
pop
das
mov
bound
and
inc
mov
aaa
popa
ljmp
push
loop
xchg
out
lret
lods
adc
scas
xorl
fstl
adc
sub
mov
inc
jae
lret
lds
mov
ficompl
ljmp
fsts
test
mov
mov
mov
je
mov
adc
sub
push
push
pop
and
ret
inc
rclb
subb
mov
pop
push
test
push
outsl
xor
out
xchg
rcrb
mov
insb
sbb
inc
mov
ljmp
fldcw
push
add
adc
std
add
test
and
in
jo
test
ja
insb
incl
mov
pop
loope
jecxz
in
pop
insl
lret
movsb
in
jmp
pop
mov
scas
loopne
scas
scas
je
add
push
in
out
dec
mov
fimuls
xor
pushl
aam
lahf
xor
test
test
in
push
out
leave
stc
mov
stc
push
sbb
insl
push
jg
cwtl
pop
shrb
mov
pop
lock
push
xchg
es
xor
pop
adc
fisubrs
in
fistpll
xchg
rcl
fs
mov
outsl
mov
push
inc
pop
andl
add
xchg
pop
pop
rol
inc
pop
lret
xor
fistps
adc
sub
mov
xchg
add
sub
xchg
test
pusha
and
mulb
mov
cmp
mov
mov
pop
mov
faddl
cld
les
aas
adc
inc
pop
xchg
cwtl
mov
hlt
sub
out
sbb
mov
cmp
cld
inc
mov
rclb
push
cmc
outsl
aad
int
jle
or
pop
pop
pop
xchg
sub
ret
inc
int
repz
ja
push
xchg
or
or
jb
adc
std
gs
lds
mov
mov
xor
cmp
sbb
scas
popa
add
lea
cmp
icebp
jnp
mov
push
xor
stos
aas
lret
jo
cmpsb
or
pop
je
sbb
jmp
hlt
inc
inc
fmul
arpl
les
push
sar
decl
cmc
ss
clc
and
mov
push
dec
pop
push
filds
inc
mov
ss
sbb
loop
xor
lea
scas
lret
bound
inc
mov
call
jge
sbb
mov
push
movsb
mov
mov
push
in
idiv
add
loop
xor
outsb
test
cmpsl
lock
clc
fcmovnb
cmp
xor
inc
jns
or
cmp
dec
test
fisubrl
xor
mov
movsl
scas
mov
xor
jecxz
mov
inc
cmc
dec
pop
in
push
stos
fdivrl
fiadds
movsb
sbb
or
cld
incl
cli
movsl
sub
sbb
loope
fmulp
data16
gs
push
je
pop
cmp
pop
ljmp
fcoml
leave
dec
movsb
clc
pop
dec
mov
sbb
incb
cmp
adc
push
inc
cltd
sbb
push
cld
call
outsl
mov
jne
xorb
sbb
xchg
adc
mov
mov
lea
mov
jp
mov
jmp
xor
or
js
cli
dec
cmc
mov
sbb
call
mov
sar
fistpl
hlt
push
lods
fisubs
in
ljmp
inc
and
into
cmpsb
pop
cld
push
int
dec
popa
sbb
fs
cmpsb
call
scas
dec
or
mov
hlt
rcrl
inc
mov
inc
sti
mov
jo
mov
inc
gs
rcl
xchg
sbb
jp
cmp
or
out
mov
jbe
add
cs
pop
in
mov
push
icebp
out
fnsave
rcl
arpl
push
sbb
xchg
jbe
mov
cmp
sub
ret
inc
mov
lahf
cmp
subb
jnp
or
cmp
add
pop
push
negb
add
test
or
inc
cmp
in
mov
sub
and
fisttpl
int
and
pop
xchg
sbb
pop
mov
push
xchg
adc
mov
jne
mov
and
jns
inc
shrl
add
shlb
icebp
xor
loope
mov
lds
push
add
pushf
sub
insl
arpl
push
or
add
dec
inc
aad
lcall
sbb
mov
addb
or
inc
mov
ljmp
bound
cmc
adc
xor
xchg
stc
pop
pop
arpl
lcall
mov
ret
cmpsb
xchg
jo
nop
aas
sub
popa
mov
inc
popf
test
and
in
rcll
stos
shll
fld1
or
push
sbb
cmp
xchg
jne
ja
push
outsl
fnstsw
lock
pop
test
in
add
lods
adc
jo
jb
or
sarl
or
ror
inc
lahf
ja
adc
call
repz
aaa
jp
xlat
test
orl
fdivl
sbb
int
lods
int3
mov
sbb
mov
lods
aaa
cmpsl
rolb
adc
mov
rcl
orb
mov
cmpsb
lcall
add
push
or
sub
push
aaa
cmp
int3
push
inc
fwait
lock
stos
sbb
clc
push
aaa
sbb
outsb
mov
or
push
insl
push
lcall
push
call
mov
cmpsl
mov
dec
dec
push
xor
jl
cmpsb
cmp
mov
popf
push
icebp
in
push
std
loope
inc
cmc
adc
addb
test
test
das
insb
mov
or
hlt
repnz
sbbl
fdiv
insl
jecxz
outsb
mov
and
sarb
inc
xor
arpl
jg
dec
fucom
outsl
rolb
shrl
nop
inc
jmp
outsl
lcall
daa
mov
icebp
outsl
insl
std
mov
push
pusha
and
sbb
popf
leave
daa
ficoms
cli
lea
jecxz
dec
xor
lods
adc
xchg
jmp
xchg
jno
and
jns
inc
fcmovb
xchg
rcr
or
mov
fmull
xchg
ljmp
icebp
lods
mov
fdivs
int
add
adc
ss
icebp
lret
add
sub
hlt
jl
ret
in
test
xor
in
xchg
test
lret
push
leave
aaa
mov
ret
clc
mov
sub
loop
fildl
cmc
jg
out
and
insl
fisubrs
stos
rorl
dec
and
mov
test
and
dec
imul
cltd
lea
dec
cwtl
inc
sbb
cmp
pop
outsb
dec
cltd
and
push
inc
jg
add
sub
cmp
dec
adc
loop
bound
xchg
push
shl
pop
sbb
or
out
dec
xchg
or
and
mov
lret
xchg
pop
test
xor
adc
push
outsb
sub
insb
cmp
jbe
sub
loopne
jecxz
inc
xchg
mov
push
out
rol
faddl
mov
mov
fisubrl
sbb
mov
and
pop
mov
and
psllq
add
repnz
sub
ja
mov
jnp
ffreep
add
in
sbbl
inc
dec
cld
mov
mov
lock
in
push
and
hlt
and
ds
push
out
add
mov
xchg
jge
orl
sub
mov
sub
pop
jecxz
inc
inc
fs
xor
add
sarb
aaa
inc
xchg
pop
mov
sub
icebp
or
adc
fsubs
loop
jmp
push
dec
lock
cld
add
insl
ret
adc
in
mov
dec
xchg
xchg
nop
or
cli
dec
jne
sbb
dec
sbb
pop
mov
jecxz
je
aam
xlat
push
pusha
adc
jmp
jnp
xchg
ret
and
adc
mov
insl
test
stos
lret
mov
aad
out
outsl
cmp
mov
sub
sub
in
add
and
sbb
lret
xor
sbb
clc
test
test
mov
arpl
add
test
mov
pop
lds
jl
ljmp
add
mov
test
scas
icebp
mov
mov
clts
and
or
xchg
xchg
sbb
cmp
inc
dec
mov
dec
sbb
setg
fdiv
mov
mov
and
sbb
stos
jbe
push
mov
mov
sahf
cs
fwait
mov
pop
adc
mov
mov
out
fwait
inc
loope
daa
ljmp
sbb
mov
add
pusha
add
push
push
dec
or
jmp
push
and
push
jo
inc
xchg
mov
sbb
mov
insl
call
lret
stc
sub
std
lods
rorb
mov
mov
add
or
lock
fs
dec
xchg
mov
dec
mov
cmpsl
and
sbb
push
insb
pop
mov
test
sbb
pop
das
sub
dec
in
fadds
pop
lret
fbstp
jbe
mov
iret
cmp
ds
add
add
push
jg
fwait
dec
inc
fmull
in
lods
cmp
std
xchg
mov
mov
pusha
or
fisubrl
sbb
inc
call
jl
mov
pop
imul
dec
decb
ja
nop
lock
movsl
pop
mov
fldenv
jle
test
sub
pusha
cmp
mov
imul
sub
das
add
jnp
jnp
cld
mov
add
in
nopl
cld
lcall
sub
invd
int
mov
xor
cmp
lods
push
fwait
xchg
mov
iret
adc
repz
fisttps
jae
pop
addr16
lock
das
std
mov
pop
rep
je
jecxz
xchg
xchg
xchg
je
or
cmp
mov
inc
test
fwait
call
pop
adc
dec
push
mov
mov
dec
scas
xor
push
push
mov
stos
arpl
je
or
add
sub
ret
cmpsb
sbb
std
push
test
adc
adc
cwtl
dec
pop
mov
das
insb
jmp
cwtl
pop
dec
mov
mov
cld
sbb
jns
daa
test
and
cmp
pop
aam
sbb
lock
sub
aam
movsl
sti
push
sbb
cmp
fnsave
test
xchg
call
mov
pop
fbld
pop
mov
out
and
add
xchg
call
add
cmp
mov
jae
sbbl
test
add
stos
stc
mov
in
mov
pushf
data16
ret
sti
adc
rcll
lea
fidivl
push
rcll
es
addr16
sbb
cmp
je
mov
lods
loopne
sbb
stc
mov
ret
outsb
ljmp
mov
inc
mov
sub
ficompl
cmp
jnp
mov
jno
push
int
cmc
mov
sbb
push
dec
mov
xchg
out
fidivs
mov
or
in
xorl
js
out
adc
fldcw
xchg
dec
fcomi
mov
int
pop
push
add
loope
adcb
sub
dec
jno
fs
icebp
mov
test
cwtl
repz
sbb
rcrl
loopne
stos
add
bound
lret
jg
orb
jg
test
shlb
icebp
daa
jp
dec
xchg
jbe
xchg
notb
testb
cmp
sub
xchg
subl
mov
and
loopne
push
popa
xor
out
fcmovbe
mov
xchg
sbb
mov
push
dec
int
call
sub
call
cmpsb
xchg
test
pop
sub
insl
add
cli
pop
rclb
and
outsl
pop
test
jle
cmpsb
ficomps
ret
and
dec
sbb
add
push
mov
or
movsl
jbe
insl
lods
sub
xor
outsl
jp
pop
xchg
inc
mov
dec
in
xchg
ret
lods
loope
dec
mov
and
pop
addr16
out
push
mov
add
mov
imul
pop
cmpsb
push
xchg
mov
or
xchg
loope
push
and
inc
mov
ret
add
dec
fisubrs
fldcw
fcmovne
clc
lret
and
out
jle
fucomip
into
scas
mov
inc
dec
sbb
pop
rolb
add
and
xrelease
fldl
ffreep
scas
or
jb
movsl
cltd
cmp
stos
pop
pushf
mov
call
jae
mov
arpl
sti
cmp
or
xchg
inc
cli
or
stos
std
ret
push
dec
mov
jo
fnstsw
pop
mov
mov
sbb
fidivl
mov
jecxz
fmulp
movsb
repnz
mov
or
imul
ljmp
ljmp
xchg
push
sbb
sbb
add
incl
flds
nop
xchg
fcoms
jg
inc
jge
popa
fst
aas
jo
add
jo
stos
fwait
push
rcrb
push
jno
outsl
jbe
push
mov
rcr
sbb
push
jo
aaa
pop
pop
aas
sar
jb
test
and
adc
xor
inc
icebp
mov
xor
call
outsl
cld
in
lods
sbb
outsl
cmp
mov
xbegin
mov
or
inc
leave
jp
movsl
and
sbb
mov
sbbl
xchg
inc
mov
mov
cs
jb
add
push
mov
mov
lea
popa
push
cmp
adc
pusha
push
push
pop
movsb
pop
xchg
hlt
mov
popf
push
dec
stc
cli
adc
push
or
pop
dec
clc
sub
mov
ljmp
or
stos
or
ret
ja
mov
xchg
adc
rorl
fs
mov
and
das
lret
push
aad
mov
lret
inc
mov
jp
std
mov
xor
pop
mov
adc
cmp
movsl
decb
inc
push
jne
mov
ret
and
add
pop
push
in
ficompl
int3
jge
pushf
cs
or
lret
push
roll
lods
je
fisttpll
add
pop
xchg
pop
xchg
or
cltd
cmp
into
and
xor
pop
int3
orb
pusha
les
mov
dec
fcomps
shr
loop
fildll
pop
xchg
inc
cmpb
imul
or
push
gs
cmp
mov
push
popa
mov
shlb
das
xor
dec
scas
cwtl
fwait
js
sub
xchg
cmp
mov
push
fisubrl
scas
nop
lds
testb
or
mov
or
adc
aas
insl
pop
call
enter
xchg
popf
rorb
xchg
mov
stos
incl
inc
pop
or
outsb
xchg
mov
mov
ss
test
pop
lods
pop
movsl
fistl
add
lock
push
call
pusha
and
and
add
incl
bound
pop
add
add
mov
inc
sub
lock
mov
movb
jecxz
sbbl
or
or
add
cmp
in
lods
cmp
adc
lret
xchg
rclb
dec
sbb
enter
adc
push
push
stos
cltd
push
fs
mov
jns
pop
sarb
subl
or
shrl
lahf
test
pushl
aas
aam
inc
cmp
dec
push
pop
adc
sub
jmp
mov
inc
and
pop
fadds
ja
insl
jmp
leave
out
les
add
mov
lea
in
dec
inc
imul
ds
bound
inc
xchg
and
popa
adc
mov
inc
movsb
mov
mov
test
inc
or
sbb
or
ds
or
adc
sarl
clc
mov
jle
fiaddl
or
mov
je
sahf
dec
mov
ret
dec
sbb
jo
mov
push
test
ss
mov
aas
and
jo
or
fwait
add
jo
les
je
iret
iret
jmp
jg
cmp
and
fnstcw
sbb
sbb
lods
add
aad
mov
or
loopne
push
inc
inc
inc
mov
sahf
sbb
push
cltd
adc
dec
mov
inc
dec
dec
adc
add
inc
addb
adc
push
sub
inc
adc
dec
stos
adc
and
or
push
add
sbb
mov
ss
xchg
add
stos
push
adcb
add
mov
pop
sahf
addb
jo
std
push
adc
and
add
inc
sub
dec
inc
ja
and
mov
test
adc
mov
and
and
xorb
inc
xchg
inc
adc
fiaddl
dec
mov
and
and
fwait
or
cmpsb
jo
inc
add
inc
xorb
dec
mov
adc
push
xor
add
adc
lea
insl
imul
dec
and
mov
or
insl
lods
mov
xchg
adcl
jge
add
add
fisubrl
repz
add
jbe
pop
fistpl
and
lods
mov
inc
dec
insl
or
mov
fcompl
adc
and
pop
sub
fildl
inc
pop
imul
cmp
push
mov
imul
addr16
inc
inc
fwait
mov
or
faddl
arpl
mov
pop
mov
mov
sub
push
stos
inc
test
cs
nop
pusha
shlb
subl
movsb
xchg
adc
mov
pop
mov
mov
lcall
xlat
pop
imul
xchg
push
mov
xchg
jne
inc
mov
outsb
or
dec
sub
mov
mov
pop
mov
mov
mov
push
sub
inc
int
inc
xor
jle
or
and
fwait
nop
sbb
test
orb
xor
or
cmp
lock
adc
mov
or
and
pop
mov
or
outsb
xchg
fsts
mov
dec
call
insl
adc
shlb
xor
sub
jae
jne
loope
nop
mov
mov
loope
mov
add
dec
mov
or
xchg
lds
xlat
lcall
adc
jae
outsl
or
dec
and
or
or
inc
xchg
popa
and
adc
insb
test
pushf
adc
and
call
lds
pop
addr16
jnp
xlat
pop
jae
pusha
inc
sbb
sbb
xchg
jbe
pop
adc
mov
shrl
push
inc
pop
stos
or
arpl
mov
push
adc
push
dec
pop
lock
sbb
add
dec
das
xlat
mov
mov
or
fildl
popf
inc
pop
sub
cmp
adc
add
cli
rorl
lea
rcrl
sbb
adc
scas
lcall
cmp
and
test
jle
pop
sbb
jae
fnstcw
push
adc
addr16
sbb
jo
pop
mov
sub
xor
dec
insb
scas
outsb
cmpsb
int
pop
or
or
adc
or
scas
subb
mov
mov
pop
es
ss
and
or
lods
mov
push
inc
push
addr16
or
xor
dec
mov
scas
inc
mov
adc
fisttpl
xchg
or
dec
xchg
and
inc
fwait
clc
fisttpl
rcl
popf
movsl
pushf
mov
sub
lods
adc
adc
inc
dec
sbb
or
jo
sbb
jmp
push
xor
push
pop
xor
xor
mov
int
negl
push
push
sub
jnp
pushw
pop
aad
sahf
js
inc
jae
mov
mov
imul
dec
push
pushf
mov
xchg
xor
mov
cmpsb
push
jo
cld
dec
sti
or
sahf
rol
inc
xchg
subb
pop
jb,pn
lods
mov
incb
outsb
mov
shlb
pop
inc
clc
or
sbb
xchg
push
out
or
aad
std
nop
inc
mov
xchg
inc
xorb
xchg
jmp
xor
mov
addl
pusha
ljmp
pop
imul
xor
fwait
xor
and
add
jo
add
and
jae
inc
and
ffreep
sbb
mov
and
imul
and
mov
adc
aad
jae
push
pusha
adc
or
mov
xor
push
lods
mov
sbb
inc
add
pop
imul
push
mov
cmp
scas
dec
lahf
insb
cs
add
or
lods
xor
cmp
lods
icebp
into
leave
test
cmpsl
sub
jnp
idiv
adc
rol
jecxz
and
aad
xor
fiadds
adc
cmc
adc
dec
andb
add
push
enter
fwait
mov
insb
jle
rcl
sbb
scas
ret
fistps
int
xor
js
iret
inc
fistpl
jmp
sub
sbb
add
add
cltd
pop
imul
sbb
in
fsubrs
push
fistpl
inc
jne
inc
rorb
into
cmc
aaa
push
lcall
dec
mov
push
das
xchg
cmp
inc
add
inc
sti
aam
fwait
mov
jmp
sarl
fistps
push
mov
sub
decl
push
pop
lods
nop
xor
or
aam
jb
mov
popf
inc
cmc
rolb
adcb
or
out
add
add
push
mov
jp
aad
mov
stos
xor
out
aaa
into
push
xorb
inc
mov
mov
es
pop
pop
and
mov
test
pop
and
sbb
sbb
pushf
or
mov
ss
and
dec
mov
mov
jnp
mov
jmp
adc
nop
lcall
mov
and
in
and
lcall
stc
or
inc
jnp
pushf
imul
dec
outsl
mov
pop
cmp
mov
adc
adc
xor
inc
pop
pop
push
push
rcl
ja
add
mov
push
imul
aas
sbb
es
bswap
jae
ret
insb
scas
mov
adc
cmp
mov
xor
lcall
loope
shll
add
scas
shll
icebp
insb
sub
cs
out
mov
fistl
jae
int
pop
fwait
or
mov
pop
mov
sub
enter
or
lods
aaa
bound
rcrl
or
add
into
mov
adc
push
jl
dec
lods
and
out
sbb
xchg
addr16
jl
addl
nop
shrl
mov
mov
nop
dec
arpl
xor
call
or
or
pop
adc
cmp
sub
adc
insl
cmp
lcall
fwait
imul
stos
mov
and
sbb
ret
imul
pop
pop
inc
sub
inc
jle
mov
jno
orl
lcall
or
mov
mov
xor
xchg
mov
movsb
or
nop
mov
cs
inc
add
fucom
xchg
arpl
mov
orl
outsl
xor
push
inc
pop
outsl
or
rorb
xchg
inc
inc
inc
and
mov
and
adc
jb
subb
sbb
loopne
cltd
add
mov
aam
push
insb
or
and
aad
aad
push
sub
or
sbb
push
into
mov
xchg
subl
dec
push
inc
test
push
cmpl
jmp
mov
imul
push
push
sub
jne
or
add
fadds
inc
test
or
test
stos
inc
sub
pop
jae
lea
pushf
pop
fiaddl
aad
xchg
and
sahf
and
aaa
lods
insb
lea
mov
pop
subl
pop
dec
xor
inc
mov
push
push
sub
xor
pop
imul
jnp
or
mov
pop
mov
or
mov
xchg
int3
inc
mov
lods
sub
or
fcomps
mov
stos
mov
push
or
pop
xchg
jae
xchg
stos
add
imul
mov
repnz
fildl
nop
push
dec
add
sub
mov
imul
push
out
mov
pop
sub
cmp
shrb
push
xchg
add
data16
mov
out
mov
pop
jae
mov
mov
pushf
scas
pop
mov
stos
adc
lods
pusha
test
mov
and
add
lods
and
push
mov
loopne
inc
lods
push
push
fs
or
pop
sbb
push
lods
faddl
add
testb
orl
push
mov
shll
mov
scas
or
mov
jb
rorb
rcr
or
mul
jbe
imul
sbb
or
outsb
nop
pop
lods
rorb
xchg
insb
inc
mov
or
adc
jae
xchg
inc
sbb
cmp
push
add
xor
inc
or
push
outsb
push
inc
ds
mov
aad
movb
sub
fdivrs
add
mov
pop
add
xor
sbb
xchg
imul
stos
jo
imul
sbb
fildl
add
jg
add
jbe
out
or
push
mov
xor
or
cli
and
jae
add
add
lods
xchg
mov
push
cmp
push
mov
ret
int3
aam
popl
pop
imul
adc
jo
cmp
adc
add
repnz
mov
mov
shl
cltd
jnp
jae
mov
lods
and
das
pushw
mov
jmp
lret
fs
dec
or
push
jo
cs
ret
push
jo
iret
test
xor
inc
jae
push
push
aaa
cmpsb
fdivs
lods
mov
addb
sbb
xor
cmpb
xor
mov
pushw
out
data16
inc
arpl
out
xchg
add
call
mov
pop
mov
arpl
push
push
jae
inc
push
lods
sbb
outsb
imul
test
test
push
mov
adc
pop
mov
mov
xchg
int
cmp
adc
notb
sbb
cmp
adc
adc
scas
push
aad
sub
cmp
popa
mov
dec
add
mov
es
push
or
inc
mov
sbb
in
xchg
inc
inc
or
xchg
cmp
test
dec
pop
aad
push
inc
push
rcr
mov
and
and
sub
rcl
idivb
movl
orb
or
in
inc
mov
sbb
mov
stos
cmp
test
mov
jl
add
xor
jno
orb
sbb
inc
add
mov
into
movsb
and
dec
adc
jo
sbb
cmp
sbb
xor
push
lods
pop
pop
sbb
and
or
sub
mov
cmpsl
dec
leave
repz
cmp
in
sub
mov
nop/reserved
and
lods
pop
sub
cmpsb
adc
popf
iret
and
addr16
frstor
push
push
sub
popf
add
lods
rcrb
xor
and
sbb
mov
pop
push
in
cwtl
data16
or
fstpl
scas
jae
mov
outsb
or
and
xlat
ljmpw
hlt
stos
adc
xor
and
mov
cs
pusha
cmp
and
sub
fimull
clc
add
mov
sbb
nop
push
sbb
add
sub
xlat
js
sub
lcall
dec
insb
mov
push
lret
xchg
add
dec
mov
jno
mov
sbb
jae
nop
push
adc
dec
and
mov
mov
push
in
jno
add
test
mov
dec
scas
rorb
add
mov
in
inc
js
out
scas
cmp
lcall
push
imul
mov
xor
push
scas
pop
xor
lods
fistps
fsubr
or
add
or
xlat
dec
add
stos
mov
lea
dec
sub
data16
jo
xor
and
push
push
jae
push
mov
nop
pop
add
inc
ss
add
and
pusha
jnp
push
inc
les
xlat
xor
adc
mov
cmp
cmp
or
sub
inc
or
inc
xor
adc
jbe
lods
mov
and
cmpsb
add
adc
lock
test
int
jp
inc
roll
popa
xor
rolb
cmp
bound
xor
faddp
hlt
shlb
mov
cmpsl
sbb
xor
inc
inc
aaa
outsl
inc
addl
pusha
push
ret
fmuls
addr16
ret
add
add
or
adc
pop
aas
icebp
adc
test
adc
pop
inc
inc
stos
loopne
xor
mov
jne
fisubrs
out
in
push
lods
into
inc
xor
add
jo
aad
cmp
in
ret
sub
call
lods
mov
xor
je
xor
rclb
loopne
pop
popa
inc
add
scas
int
cmpsb
inc
adc
fcoms
dec
push
cmp
cwtl
push
cs
mov
dec
inc
add
push
xorb
adc
popa
sub
xchg
jne
and
rorb
jle
adc
cwtl
sbb
ss
sbb
mov
jns,pn
aas
ja
xor
jo
fcomps
cmp
pop
or
sub
es
pusha
mov
jae
ret
or
inc
roll
cmp
rcrl
pop
cmp
xchg
and
ret
or
fistpl
das
nop
mov
push
sub
clc
or
movsb
add
outsl
or
clc
adc
adc
lds
in
mov
repz
repz
cwtl
cwtl
pushf
lret
adc
fsubs
flds
mov
or
shl
nop
or
dec
mov
aad
int
iret
mov
inc
imul
or
orb
movb
cmp
jne
and
lcall
pop
cmp
inc
inc
mulb
xchg
inc
ret
test
inc
mov
sub
nop
mov
or
int
stos
leave
xchg
outsl
or
xchg
push
adc
inc
stc
out
sub
js
inc
lods
outsb
inc
push
pop
int
push
dec
add
sub
jmp
add
add
je
jns
je
ljmp
ljmp
imul
insb
sbb
jb
popa
je
gs
popa
pop
fidivrs
addr16
sub
insl
jo
sub
popa
inc
js
mov
jb
and
imul
and
jne
movd
outsl
arpl
fs
mov
insb
mov
inc
push
popa
inc
je
imul
jae
insb
outsl
bound
inc
insb
push
arpl
jmp
je
jo
outsb
outsw
jbe
ss
xchg
stos
sti
inc
daa
or
dec
sbb
mov
jbe
popa
mov
outsl
fs
dec
popa
outsb
fs
jbe
insl
jnp
popa
mov
arpl
or
mov
in
jns
add
outsb
outsl
lea
mov
ret
aad
imul
test
or
je
inc
arpl
imul
jo
dec
stos
addr16
sbb
fbstp
fsubl
imul
imul
mov
sub
push
cmp
cmp
pop
ja
or
dec
popa
ss
outsb
movsl
imul
popa
sbb
outsb
push
gs
push
jne
add
insl
lods
inc
adc
jae
dec
gs
cmp
mov
insb
sbb
cmp
sub
sub
les
mov
mov
outsl
test
adc
adc
bound
sahf
data16
cmp
test
out
jb
imul
pop
mov
outsb
jne
adc
ss
sub
adc
sti
ret
xor
inc
jl
jne
data16
ret
mov
xlat
xor
imul
sbb
imul
test
jb
in
bound
fs
mov
mov
call
push
and
jae
adc
sbb
push
imul
pop
in
test
bound
insl
dec
sarl
fcomps
outsl
mov
aam
cld
xchg
inc
dec
add
add
pop
insb
dec
loopne
cmpxchg
add
and
adc
in
jnp
rcll
cmovo
in
dec
ja
mov
add
pusha
add
insb
rcrb
add
adc
mov
add
dec
js
and
adc
or
push
mov
push
cs
js
xlat
pop
lret
lcall
shrl
cs
xchg
popa
or
add
lods
push
scas
add
js,pn
and
cmp
push
lock
mov
sbb
add
jae
and
pop
fimuls
xor
dec
ss
adc
or
add
dec
ja
movsl
cld
mov
and
imul
or
sub
dec
push
adc
ja
and
add
add
popl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
add
add
addb
add
add
add
adc
add
push
add
add
nop
add
add
mov
add
add
add
add
rolb
addb
add
adc
add
cmp
add
pusha
add
cmpb
orb
add
fadds
add
add
add
or
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
and
add
or
add
or
add
add
xor
add
or
add
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
mov
add
add
or
add
xor
add
pop
add
andb
xor
add
test
add
rolb
add
clc
add
cmpb
add
dec
add
cmpb
add
cwtl
add
sbbb
add
call
add
add
add
add
mov
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
rorb
add
add
or
add
add
fmuls
add
add
add
add
add
mov
add
add
add
add
add
add
add
lea
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
pop
lea
add
add
add
add
add
lea
add
add
add
add
add
lea
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
sub
add
or
add
add
les
add
add
add
push
add
add
add
add
cwtl
add
cld
add
add
add
add
push
add
enter
mov
push
add
sbb
add
inc
pop
add
push
pop
add
nop
pop
add
mov
push
add
loopne
add
or
add
xor
add
pop
or
cmpb
add
add
add
rorb
add
clc
or
xor
add
and
add
dec
or
xorb
add
jo
add
cwtl
or
adc
add
rorb
andb
add
adc
add
cmp
add
pusha
or
addb
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
xorb
add
add
add
or
add
fwait
add
push
add
add
add
add
push
add
xor
add
or
add
add
add
add
pop
add
dec
fwait
add
push
add
add
add
add
pop
add
pop
fwait
add
adc
add
or
add
add
jo
add
adc
add
or
add
fwait
add
sldt
add
add
add
add
add
fwait
add
push
add
add
add
add
pop
add
mov
add
or
add
add
add
add
pop
add
les
add
or
add
or
add
fwait
add
or
add
or
add
add
in
fwait
add
or
add
or
add
add
cld
fwait
add
or
add
or
add
pushf
add
or
add
or
add
or
add
add
or
add
or
add
or
add
add
adc
add
or
add
or
add
add
add
add
add
add
or
add
add
adc
add
or
add
add
jo
add
sldt
add
add
add
add
add
pushf
add
adc
add
or
add
pushf
add
or
add
or
add
or
add
add
or
add
or
add
add
or
add
or
add
pushf
add
or
add
add
add
add
add
call
add
add
add
add
add
add
add
or
add
popf
add
sldt
add
add
add
add
add
or
add
popf
add
or
add
or
add
or
add
popf
add
or
add
add
add
add
or
add
add
add
add
add
add
add
fs
add
push
add
add
add
add
add
js
add
adc
add
or
add
popf
add
or
add
xchg
push
add
mov
add
add
add
add
or
add
add
add
sub
add
adc
mov
in
sub
add
mov
add
clc
sub
add
or
and
add
add
add
pusha
adc
adc
cwtl
and
mov
sub
add
mov
and
add
add
add
add
sub
add
inc
addb
inc
and
add
sub
add
or
adc
push
add
xor
add
or
cwtl
adc
adc
test
add
inc
sub
add
add
adcb
mov
add
add
add
add
adc
adc
pusha
sub
add
inc
inc
or
add
add
inc
mov
and
mov
add
js
add
dec
adc
and
test
inc
or
cwtl
or
adc
add
test
inc
mov
or
and
sub
add
add
add
test
and
push
inc
and
add
lods
sub
add
test
and
add
or
add
mov
or
or
add
or
sub
add
nop
inc
cwtl
and
inc
mov
adc
nop
add
loopne
add
add
dec
adc
push
pusha
orl
test
add
hlt
sub
add
and
and
orl
add
adc
cwtl
add
pusha
test
adcl
inc
adc
add
and
add
or
add
and
or
and
pusha
or
add
nop
and
cmp
andl
inc
and
mov
add
add
add
adc
add
sub
adcb
inc
adc
add
add
add
add
add
add
add
add
add
add
push
add
mov
in
testl
mov
pushl
add
insl
xchg
add
outsl
incl
sti
std
lahf
add
in
xlat
add
jg
add
std
xlat
add
pushl
add
push
add
pushl
add
insl
cmc
add
out
fldl
std
out
mov
add
jge
add
out
xlat
add
in
incl
stc
in
incl
stc
outsl
fldl
std
in
cmc
add
jge
add
jg
add
outsl
incl
std
std
incl
sti
insl
xchg
add
std
fldl
mov
insl
filds
mov
std
mov
std
jg
add
outsl
xchg
add
jg
add
jg
add
insl
cmc
add
insl
mov
add
call
add
mov
add
std
xchg
add
filds
in
mov
add
in
filds
std
in
filds
mov
call
add
std
popf
add
in
mov
add
fldl
mov
jg
add
out
filds
mov
outsl
incl
mov
std
add
jg
add
std
std
add
jg
add
jg
add
insl
aad
stc
outsl
mov
out
fldl
std
jg
add
jg
add
outsl
std
add
jge
add
insl
fldl
stc
std
filds
stc
fldl
mov
out
xchg
add
filds
mov
pushl
add
fldl
mov
jge
add
jg
add
jge
add
outsl
fldl
mov
std
std
add
jg
add
outsl
mov
stc
outsl
mov
add
insl
incl
mov
outsl
fldl
sti
insl
popf
add
fldl
stc
in
aad
mov
std
fldl
mov
out
filds
ljmp
add
insl
mov
add
insl
xlat
add
insl
lahf
add
out
incl
mov
out
incl
std
std
add
std
xchg
add
out
aad
mov
insl
aad
mov
outsl
incl
std
add
call
add
insl
mov
add
insl
lahf
add
insl
xlat
add
in
lahf
add
jge
add
out
filds
ljmp
add
out
xchg
add
std
testl
std
outsl
mov
mov
call
add
insl
mov
add
in
mov
sti
in
fldl
mov
in
filds
stc
insl
lahf
add
std
mov
add
out
fldl
std
in
aad
stc
out
mov
std
jge
add
insl
filds
mov
in
mov
add
jge
add
outsl
popf
add
std
std
add
out
cmc
add
jge
add
jge
add
jg
add
insl
xchg
add
call
add
std
lahf
add
insl
testl
mov
outsl
mov
add
in
lahf
add
insl
mov
add
pushl
add
std
popf
add
jge
add
std
incl
mov
jg
add
out
xlat
add
out
xchg
add
out
popf
add
insl
testl
mov
std
cmc
add
jg
add
pushl
add
jge
add
in
mov
stc
insl
mov
add
outsl
mov
add
in
xchg
add
out
mov
stc
in
aad
mov
in
popf
add
in
std
add
outsl
mov
add
insl
testl
mov
xchg
test
cld
movsl
ret
int3
arpl
push
mov
in
cmp
lock
test
enter
mov
mov
dec
sarl
adc
push
dec
in
xor
and
add
fnstsw
mov
daa
loope
clc
sub
scas
cli
mov
pop
je
mov
push
xor
pop
xor
inc
push
js
cmc
rcrl
aad
inc
fcoml
pop
jb
aaa
xchg
pop
pusha
icebp
sbbb
or
push
fsub
or
fsubl
mov
mov
inc
addl
mov
and
and
mov
push
int
and
loope
mov
insl
popa
xor
adc
mov
dec
inc
jp,pt
movsb
adc
lcall
imulb
incb
imulb
xchg
clc
cmc
sub
daa
mov
add
push
jp
inc
mov
xchg
pop
cmpsb
sub
jle
stc
push
xchg
and
cmp
data16
ret
in
mov
pop
int3
cmp
fidivrs
pop
sbb
xor
fwait
push
data16
dec
repnz
jno
sub
lds
mov
sub
and
sub
scas
adc
push
mov
adc
lods
mov
loop
pusha
mov
sbb
mov
out
pop
in
mov
jne
cs
nop
push
adc
push
vcvttpd2qq
jae
pushf
mov
mov
jo
leave
sub
mov
fsts
inc
xchg
dec
cmp
iret
movsb
xor
je
or
adc
push
xchg
and
jo
xlat
add
jo
jns
inc
and
sar
lret
ret
jmp
out
xchg
enter
and
mov
sub
sti
mov
dec
dec
mov
hlt
xlat
rcrb
push
cmp
mov
mov
xor
imul
imul
and
sbb
jae
adc
pop
sub
adc
jecxz
jl
add
popa
int3
adc
dec
int
lret
pop
pusha
das
addb
xor
jns
scas
mov
push
mov
mov
nop
jl
lods
rcll
lock
lret
pop
xor
bound
mov
jnp
fwait
inc
xorl
enter
and
cmp
sbbl
fwait
xchg
push
scas
xor
pop
jle
fiadds
mov
xor
shrl
xor
dec
loope
xchg
icebp
xor
daa
sahf
repnz
xchg
movd
adc
cmp
ja
pop
push
inc
and
in
cld
test
xchg
imul
lods
mov
shrl
rorl
and
dec
lods
jge
cmpsb
fs
xor
sub
test
std
insb
jge
inc
test
ret
mov
jbe
and
cmpsb
nop
mov
mov
xlat
das
push
and
adcb
inc
push
shl
mov
test
shrl
data16
jge
inc
fidivl
orb
add
add
int
enter
or
inc
pop
lret
mov
sbb
pushf
insl
icebp
loopne
enter
mov
dec
test
mov
inc
add
cmp
call
das
sbb
dec
xor
movsb
or
jmp
adcl
mov
mov
jp
push
frstor
fistl
popf
or
int
sub
mov
test
xor
dec
push
mov
sub
enter
jmp
divl
mov
ja
stos
mov
or
push
call
sub
pushf
sbb
add
xor
loope
mov
sub
mov
or
push
cmp
cs
push
mov
mov
fistpl
or
add
adc
mov
xor
xor
jecxz
cmp
ficoml
out
sub
push
sub
gs
fdivrs
andb
es
fcmovne
lcall
cmp
jmp
popa
ret
lods
xor
sub
xchg
jmp
icebp
and
dec
adc
aaa
xor
out
mov
lock
negb
dec
cld
mov
add
xchg
mov
mov
daa
hlt
dec
pop
sbb
mov
mov
cmpb
jecxz
scas
sub
and
mov
mov
enter
or
mov
sbb
les
loop
jge
xor
loop
dec
or
xorl
fwait
lods
inc
in
xor
sbb
jp
xchg
popa
mov
in
cmpl
test
xchg
jno
hlt
jl
scas
call
xchg
or
or
icebp
and
outsl
jecxz
mov
fdivr
inc
lea
bound
mov
pop
xlat
add
cltd
mov
js
xchg
adc
mov
std
jecxz
dec
sbb
cs
les
lcall
fstpt
sub
pop
push
pushf
adc
push
pop
xchg
xchg
out
or
cmp
jbe
mov
sarl
jg
jo
mov
insl
push
and
fcmovnu
inc
aam
add
mov
loopne
xlat
cmp
das
loopne
cmp
xor
fsubrs
sub
js
in
jmp
loope
adc
mov
mov
mov
ds
mov
sub
test
cmpsl
inc
inc
mov
mov
roll
mov
add
cld
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
add
add
popa
add
and
dec
add
je
add
add
add
popa
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
adc
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
add
add
add
jb
and
inc
add
add
add
add
outsl
add
add
add
add
pop
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
insb
add
add
add
push
add
add
insl
add
jae
and
inc
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
imul
add
js
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
outsl
add
add
je
jne
insl
add
and
inc
add
add
imul
add
imul
jae
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
cmp
add
or
addl
inc
sub
add
sarb
add
inc
and
inc
add
inc
adc
add
sarb
add
pusha
dec
push
inc
adc
and
inc
inc
inc
inc
dec
sub
add
cmp
add
and
cwtl
nop
mov
add
add
add
adc
add
pusha
push
orl
and
add
add
dec
adc
adc
or
adc
adc
add
inc
and
adc
addl
adc
add
and
add
push
inc
adc
or
dec
adc
inc
add
add
add
add
adc
mov
adc
or
push
or
add
inc
inc
inc
or
add
adc
cmp
add
mov
adc
adc
or
pusha
cmp
add
add
and
adc
adc
add
add
push
mov
add
add
or
pusha
inc
pusha
inc
push
adc
adc
add
mov
mov
add
or
inc
cwtl
cmp
add
nop
add
adcl
test
add
adcb
inc
and
sub
mov
add
inc
and
and
and
nop
sub
int3
cmp
add
orb
dec
inc
inc
mov
add
cwtl
test
add
add
push
nop
adc
inc
push
and
push
adc
add
inc
mov
add
pusha
inc
clc
cmp
add
sub
and
dec
inc
inc
push
adc
push
nop
push
push
or
add
add
and
add
add
add
cwtl
adc
mov
adc
adcb
inc
addl
add
or
adc
adcb
inc
addb
add
add
add
mov
mov
sub
and
andb
adc
add
add
add
and
and
and
add
add
add
dec
cwtl
adc
mov
add
add
add
and
cwtl
adc
pusha
add
and
dec
adc
add
cmpb
and
add
adc
inc
add
add
nop
cmp
add
inc
add
or
test
orl
add
inc
nop
add
and
mov
add
push
dec
inc
inc
and
add
inc
push
dec
and
push
add
fs
cwtl
inc
add
adc
orb
add
adc
push
adcl
dec
nop
push
adc
or
nop
adc
mov
push
nop
adc
test
andb
sbbb
inc
mov
addb
or
inc
add
inc
adc
adc
pusha
mov
nop
add
adc
inc
inc
addb
or
dec
or
cwtl
add
test
nop
inc
add
and
mov
sub
inc
and
add
and
adc
add
inc
addb
inc
inc
and
inc
pusha
pusha
and
dec
sub
add
adc
inc
pusha
adc
pusha
addb
inc
inc
test
and
addl
inc
inc
dec
dec
inc
sbbl
add
and
inc
adc
and
or
or
and
sub
and
and
inc
dec
mov
mov
inc
adc
nop
inc
addb
inc
inc
and
add
add
and
inc
and
inc
sub
mov
adc
nop
and
add
and
and
add
add
push
pusha
nop
cwtl
push
add
add
adc
inc
adc
pusha
push
add
adc
cwtl
or
adc
adc
push
sub
sbbb
adc
add
adc
adc
add
or
dec
cwtl
and
sub
adc
and
mov
addl
and
dec
or
dec
cwtl
and
add
mov
adc
adc
and
cwtl
or
add
add
adc
adc
add
push
adc
inc
add
cwtl
adc
add
and
addl
sub
inc
or
adc
inc
adc
add
cwtl
mov
or
push
pusha
mov
push
adc
push
or
adc
mov
mov
adc
test
adc
and
inc
pusha
inc
add
mov
add
inc
orb
orl
and
adc
pusha
add
add
add
test
nop
inc
inc
or
add
and
cwtl
sub
inc
dec
and
inc
inc
sub
add
adc
add
pusha
inc
mov
test
nop
add
or
adc
inc
sub
sub
mov
and
adc
adc
or
add
inc
push
adc
add
inc
nop
cwtl
inc
addb
adc
push
cwtl
inc
or
add
and
sub
mov
mov
pusha
adcb
inc
add
inc
nop
addl
add
add
adc
adc
push
pusha
or
dec
adc
cwtl
adc
adc
and
sub
cwtl
inc
inc
mov
test
add
inc
sub
add
add
add
test
mov
add
mov
add
test
add
shlb
add
mov
add
fsubs
add
mulb
add
adc
add
and
add
xor
add
mov
add
dec
mov
add
pop
mov
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
imul
insb
add
je
jo
xor
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
inc
gs
gs
dec
bound
arpl
dec
gs
push
fs
add
fs
insl
popa
addr16
