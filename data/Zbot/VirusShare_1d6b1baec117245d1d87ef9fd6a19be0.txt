add
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
or
xor
cmp
je
sub
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
call
add
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
call
add
add
add
shlb
pop
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
mov
mov
push
pop
sub
lods
mov
mov
shl
lea
mov
push
popl
mov
push
pop
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
ja
mov
sub
jne
mov
jge
popf
pushl
pop
dec
push
mov
call
int3
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
add
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
call
add
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
call
add
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
call
in
add
add
add
inc
and
add
add
push
and
add
and
add
and
add
add
in
and
add
and
add
and
add
add
and
add
repnz
add
and
add
and
add
add
add
and
add
add
xor
add
inc
and
add
add
je
add
enter
sbb
add
bound
add
or
add
add
add
sub
add
push
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
and
add
add
push
and
add
and
add
and
add
and
add
add
in
and
add
and
add
and
add
add
and
add
repnz
add
and
add
and
add
add
add
and
add
add
xor
add
inc
and
add
add
je
add
enter
sbb
add
bound
add
or
add
add
add
sub
add
push
and
add
and
add
and
add
add
add
add
je
jb
jbe
push
jns
gs
add
add
imul
jb
je
arpl
add
je
jb
jbe
je
push
jb
imul
push
add
inc
gs
je
imul
push
add
aad
inc
gs
gs
inc
imul
jb
popa
je
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
dec
add
je
jb
arpl
jae
gs
jo
add
gs
popa
jae
inc
jb
outsl
jb
add
push
gs
insl
gs
push
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
enter
jae
gs
popa
insb
jne
add
jo
outsb
fs
push
add
add
fs
imul
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
popa
jo
jb
add
add
outsb
fs
je
insl
inc
add
add
je
jne
jb
outsb
je
push
add
push
add
je
jb
arpl
jae
gs
imul
jb
popa
je
dec
popa
imul
test
inc
jb
popa
je
inc
jbe
outsb
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
inc
inc
inc
push
push
cs
insb
add
add
insl
jo
insb
fs
jb
add
add
addr16
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
insl
jo
insb
fs
jb
add
add
addr16
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
xor
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
roll
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jle
add
jnp
stos
lods
lods
add
cmpsl
cmpsl
push
mov
mov
mov
ret
les
into
int3
int
rcl
shr
rcl
shl
iret
iret
iret
hlt
int3
int3
int3
hlt
enter
leave
enter
vpmulhuw
mov
mov
lods
lods
lea
cltd
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
leave
leave
not
rcl
cld
fcom
std
xlat
fdivr
fcomp
fdivr
aam
aad
rcl
sar
int
into
aam
aam
ror
iret
inc
ret
std
mov
mov
scas
iret
movsl
mov
mov
das
xor
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
leave
lret
call
iret
iret
aam
aad
xlat
fcomp
fcom
fdivr
aam
dec
int
dec
int3
into
call
aad
dec
int
inc
rol
mov
mov
scas
std
test
test
xchg
xchg
xchg
mov
pop
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
or
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
rcl
call
xlat
fdivr
call
aad
dec
int3
int3
dec
leave
lret
dec
into
int3
inc
sarl
pushl
test
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
imul
fs
aas
inc
sbb
push
push
sub
sbb
ss
cmp
cmp
and
and
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
ror
call
aam
aad
dec
ror
dec
enter
ret
ret
mov
mov
ljmp
mov
popf
cwtl
cwtl
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jg
jl
jg
jg
jb
jb
popa
popa
bound
cmp
inc
inc
mov
jo
jo
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
movsl
movsb
add
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
leave
lret
enter
ret
mov
mov
lods
lods
lods
jmp
cltd
cltd
call
xchg
xchg
xchg
xchg
fwait
lcall
cmp
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsl
add
pop
or
jp
xchg
mov
incb
jnp
idivb
jnp
outsl
jo
out
addr16
push
ret
jg
jns
js
fs
inc
cmp
pop
sbb
movups
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
cmpsl
lcall
incl
addb
xchg
xchg
xchg
lahf
lahf
mov
ficoms
xchg
xchg
jle
jp
pop
cs
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
sahf
fwait
lahf
in
mov
mov
addb
decb
xchg
loope
jno
enter
mov
addl
addr16
cmp
and
es
jge
jge
lcall
shrb
lods
lods
sti
stos
lods
lods
lods
stos
lods
test
stos
std
movsl
movsb
movsb
std
cltd
lcall
mov
jg
jp
jp
jnp
jnp
mov
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
test
mov
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
push
push
push
or
inc
inc
dec
imul
test
xchg
leave
cltd
lcall
lcall
std
mov
incl
mov
lcall
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jl
or
add
add
pop
pop
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
popf
popf
pushf
std
movsl
movsb
movsl
stc
mov
xchg
xchg
in
nop
in
xchg
push
jne
push
push
dec
add
add
or
or
es
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
mov
call
sahf
mov
ljmp
lods
pushl
mov
test
std
les
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
pushf
cltd
lcall
mov
call
xchg
xchg
xchg
xchg
popf
sahf
pushf
movsl
movsb
movsl
test
movsl
mov
fstpt
jp
push
push
push
outsl
dec
dec
dec
pop
popa
bound
jae
mov
lahf
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
aaa
jge
mov
jbe
mov
movsb
mov
mov
mov
mov
movsl
movsb
add
pop
pop
adc
mov
lcall
mov
call
xchg
xchg
call
cwtl
fwait
fwait
fwait
lcall
movsb
movsl
movsb
std
mov
cltd
fwait
out
nop
xchg
mov
cwtl
aad
cwtl
lcall
mov
stc
xchg
test
std
xchg
jb
lcall
jmp
inc
jnp
mov
jns
mov
je
mov
outsb
ljmp
adc
lods
or
ljmp
jge
mov
mov
stos
pushf
movsb
movsb
mov
add
mov
add
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
pushf
jmp
sahf
pushf
lcall
xchg
xchg
call
xchg
nop
call
xchg
fwait
cld
cltd
cwtl
popf
stc
sahf
fwait
sahf
stc
sahf
xchg
sahf
cld
popf
mov
xchg
imul
xchg
dec
js
cltd
cmp
fwait
sub
push
imul
movsb
push
ljmp
ljmp
pcmpgtw
lods
packuswb
scas
adc
mov
imul
mov
imul
aas
jg
rcrl
imull
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
pushf
lcall
movsl
movsl
jmp
mov
xchg
decl
mov
decl
mov
cltd
jb
lcall
call
sub
decl
adc
nop
or
call
add
cltd
add
lahf
push
pop
jmp
sbb
pushl
pop
jo
mov
jo
mov
and
mov
pop
je
rolb
ret
xchg
lods
mov
scas
scas
mov
mov
mov
add
add
add
mov
scas
add
pop
adc
lods
mov
mov
cltd
sahf
lcall
movsl
movsb
jmp
cmpsl
test
test
cmpsl
cmpsb
lcall
jg
decl
inc
jno
mov
imul
mov
incl
or
incl
add
mov
push
decl
add
xchg
add
fwait
add
mov
or
mov
outsb
pushl
sub
mov
sub
sub
les
jle
enter
enter
leave
inc
mov
mov
cld
scas
mov
lret
movsb
dec
mov
mov
add
add
add
stos
movsb
stos
add
push
adc
cmpsl
scas
ljmp
popf
jmp
test
ljmp
lods
lods
pushl
scas
scas
jmp
jb
decl
or
push
incl
add
incl
add
test
push
decl
add
add
xchg
add
lcall
jmp
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
cmpsb
ljmp
popf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
incl
or
xchg
push
incl
add
mov
push
decl
add
sahf
add
mov
add
stos
add
mov
jo
ret
dec
inc
mov
int
call
inc
call
dec
call
dec
xchg
fmuls
fimull
fmull
ficoml
call
test
std
mov
mov
movsb
mov
mov
add
dec
inc
adc
jp
movsl
sahf
mov
jmp
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsl
mov
decl
popa
call
push
pop
decl
push
decl
add
xchg
add
popf
add
add
cmpsl
add
test
pop
fs
and
dec
dec
mov
aam
cwtl
call
push
cltd
fistl
fcompl
jmp
pop
popf
fistps
jmp
pop
mov
jmp
pop
lahf
call
test
mov
mov
cmpsl
test
jne
lahf
lahf
or
xchg
xchg
cwtl
add
inc
adc
jns
sahf
lcall
sahf
fwait
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
callw
sbb
or
xchg
add
xchg
add
fwait
add
mov
add
stos
add
mov
data16
mov
xor
call
pop
fwait
fstps
jmp
bound
jmp
cmpsw
jmp
cmpsb
call
imul
fildl
ret
mov
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
aas
adc
jae
cltd
xchg
cwtl
call
mov
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
cltd
xor
cltd
outsb
call
pop
callw
add
fwait
add
mov
add
lods
add
mov
pushl
movq
roll
fsubrl
jmp
outsl
lods
jmp
outsl
stos
jmp
jno
call
jne
jmp
mov
out
jbe
out
je
out
jb
jmp
mov
mov
cmpsl
test
mov
mov
add
add
add
jl
jle
cmp
cmp
js
mov
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
xor
lahf
cmp
lahf
cmp
xor
cltd
sbb
pop
call
add
add
test
popa
pushl
add
add
enter
ficoml
jmp
jbe
jmp
jge
in
xorl
push
test
repz
ljmp
mov
test
popf
daa
lahf
lahf
sahf
add
add
add
popa
add
aaa
cmp
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
pushl
outsb
mov
lcall
jmp
cmp
cltd
pop
call
add
add
test
add
mov
gs
mov
add
dec
daa
cmp
movsb
call
mov
icebp
pop
push
nop
ret
push
nop
ret
nop
xchg
xchg
push
mov
in
mov
inc
ret
ret
clc
stos
lods
stos
mov
popf
popf
xor
sahf
add
add
add
inc
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
ret
ret
ret
ret
mov
ljmp
inc
jp
cmpsb
dec
cmp
dec
cmp
xor
lcall
add
mov
add
stos
add
mov
mov
add
leave
add
call
xor
mov
out
xchg
lcall
repnz
lcall
negl
cli
sahf
int
cld
cltd
lret
xchg
sar
mov
inc
mov
rcrb
xchg
add
add
add
cmp
add
cs
cmp
dec
jecxz
pusha
call
mov
mov
mov
sar
ret
ret
inc
inc
enter
sar
mov
ljmp
dec
mov
mov
push
pop
lcall
add
lods
add
mov
mov
add
enter
rorb
jbe
filds
in
mov
push
movsl
int3
push
movsb
int3
stc
cmpsb
iret
cli
test
into
sti
test
iret
std
stos
sar
cld
test
push
sahf
jmp
mov
dec
lret
mov
mov
lahf
lahf
sahf
dec
xchg
xchg
xchg
add
fwait
cltd
add
add
add
xor
sub
inc
inc
inc
bound
pop
xlat
je
jo
mov
mov
ret
sarb
ret
dec
mov
pushl
push
test
lods
push
mov
scas
dec
xchg
lahf
sbb
sahf
add
mov
add
mov
fs
mov
add
int
insl
fadds
jae
fists
jge
out
pop
cmpsl
push
sahf
lret
sti
lods
sar
cld
scas
aad
sti
scas
aam
sti
mov
std
mov
std
mov
std
mov
cld
mov
std
mov
std
mov
push
movsl
jmp
mov
dec
leave
lret
mov
mov
sahf
sahf
mov
or
add
add
sbb
dec
dec
dec
ss
outsb
mov
fcom
fcom
jmp
fcomp
not
rcl
std
int3
into
int
lret
dec
lret
lret
lret
mov
mov
lods
jmp
push
mov
stos
jge,pt
lahf
or
pop
ljmp
fs
mov
add
iret
add
add
add
and
sti
lods
aam
std
mov
cld
mov
fdivr
mov
fdivr
mov
fdivr
inc
fcos
mov
int
out
enter
int
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
movb
loop
out
jmp
test
in
leave
fsubp
fcmovu
fcomp
fsqrt
aam
fdivr
into
rcl
mov
push
ljmp
sub
mov
add
mov
mov
add
leave
add
add
fildl
jbe
jecxz
jbe
in
xor
cli
mov
loopne
std
ret
inc
loope
inc
loopne
inc
loopne
std
leave
loopne
dec
std
enter
enter
leave
loope
sti
mov
leave
call
leave
iret
mov
mov
xchg
adc
add
add
std
std
add
std
std
add
incb
repz
testb
out
in
pop
jmp
in
sub
in
out
dec
call
call
call
aad
fcmovnu
jmp
mov
xchg
cmpsb
cmp
movsb
adc
jmp
add
mov
arpl
mov
add
into
add
fadds
jae
loopne
js
call
inc
fwait
cli
mov
loop
cld
lret
in
std
into
in
dec
jecxz
dec
loop
std
int
dec
loop
std
iret
loop
shl
std
shl
call
in
sti
in
mov
xlat
inc
ret
ret
out
test
cmpsb
mov
xchg
cwtl
add
add
add
std
std
add
incb
idiv
testb
repz
add
repnz
out
lock
pop
in
icebp
icebp
cmp
out
out
pop
fsubp
loope
lds
xchg
sti
mov
pop
pop
jmp
pop
pushl
add
enter
rolb
jo
flds
je
in
jnp
in
adc
negb
sti
mov
cld
shl
std
shl
shl
shl
std
shl
call
call
fsubr
std
fldl2t
std
fucompp
std
fucomi
shl
push
ret
in
lret
repz
xchg
xchg
and
xchg
xchg
add
cld
add
testl
repz
or
aam
mov
jae
negb
add
cmpsl
add
scas
add
mov
add
leave
add
rolb
jo
fildl
ja
out
ja
in
sbb
stc
jne
cli
ret
fdivrp
fsubr
std
std
fucomi
std
fucomi
fucomi
fucomp
std
loopne
fsubrp
fsubrp
std
aam
push
ret
call
rcl
clc
stos
stos
lods
lods
xchg
xchg
xchg
outsl
outsb
outsb
add
add
add
loopne
add
mov
xchg
lods
jnp
repnz
and
lahf
add
add
mov
arpl
mov
add
into
add
add
loopne
jae
jmp
sub
shl
fucomip
std
fucomi
std
fldl2t
fldl2t
std
xlat
call
std
shl
cld
shl
cld
shl
clc
int
push
int
push
ret
in
mov
fcomp
fdivr
mov
mov
lcall
add
add
add
aad
mov
sarb
popf
sub
mov
add
mov
fs
mov
add
roll
outsb
fadds
jae
loop
js
jmp
aaa
xchg
sti
cwtl
enter
cli
int3
loope
sti
idivl
sar
repnz
iret
push
mov
int3
call
mov
sar
jmp
shl
jmp
loopne
in
mov
mov
xchg
add
add
add
int3
add
mov
cmpsb
loopne
ss
mov
add
mov
data16
mov
add
int
jno
rorl
jne
ficoml
js
loope
cmp
jmp
mov
jmp
scas
enter
cld
loopne
cli
fnstsw
lock
int
into
into
aad
loop
fcmovb
call
in
test
in
out
popf
ljmp
push
lods
lods
lods
adc
cmpsb
cmpsl
test
mov
ret
roll
ret
ret
pop
mov
stos
aam
dec
cmp
sbb
cmpsb
sbb
lods
and
js
mov
inc
xchg
ret
stc
leave
gs
test
mov
out
mov
mov
lret
lret
rcl
int
aam
shlb
rcl
jg
fcmovu
jb
fsubp
gs
jecxz
call
in
in
xor
div
cmc
and
icebp
repnz
or
mov
int3
add
add
add
mov
inc
mov
test
lock
sbbb
mov
test
mov
stos
mov
ret
mov
cmpsl
leave
mov
mov
leave
lret
jp
int3
shlb
rcl
push
rcl
rorb
fcom
inc
rcr
xor
daa
fistpl
fstl
fsubp
loop
loopne
in
call
lock
add
cli
testl
std
incl
incl
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
les
mov
daa
lret
ror
and
aam
sbb
aad
adc
rorl
rcr
aam
aam
fadds
add
jecxz
add
in
jmp
lret
add
std
incl
mov
mov
add
rol
ret
mov
mov
mov
mov
push
rol
or
leave
movb
enter
lret
add
roll
rcl
aam
rcr
aad
aad
aad
fadds
fcmovu
loope
xlat
fildl
loopne
loop
filds
in
out
repnz
incl
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
mov
mov
mov
ja
test
dec
cmpsl
test
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
ror
jmp
rcl
cmc
aam
sar
iret
into
iret
cli
int
int3
stc
lret
int3
int3
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
aas
ds
add
sbb
add
adc
add
push
add
add
jg
jg
aas
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
iret
ror
aad
call
xlat
xlat
call
rcl
dec
int
dec
int3
int3
mov
mov
cld
stos
stos
lods
icebp
cltd
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
jne
jae
fs
dec
dec
dec
cmp
sub
sub
aaa
xor
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
dec
lret
rcl
sar
aam
sar
lret
int3
int3
inc
mov
pushl
stos
popf
sahf
lahf
xchg
xchg
cwtl
jmp
jno
xchg
adc
add
xor
add
add
add
add
jg
jg
jnp
jl
test
jns
imul
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jno
outsl
adc
mov
fstpt
mov
sar
mov
mov
mov
jmp
pushf
lcall
xchg
xchg
cltd
fwait
cltd
out
test
dec
adc
adc
add
add
add
add
add
pop
fwait
lcall
fwait
xchg
lcall
addb
jge
jnp
jp
jp
jns
jnp
jp
jnp
jae
jb
push
push
push
cmp
jne
popf
pushf
popf
mov
scas
lods
repz
lods
scas
sti
scas
lods
lods
std
test
cmpsl
std
popf
sahf
sahf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsl
movsl
cltd
jae
je
adc
adc
add
add
add
add
outsb
outsl
outsl
pop
nop
mov
mov
test
std
nop
nop
mov
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsl
outsb
orl
cltd
lcall
lea
xchg
xchg
xchg
lcall
movsb
test
mov
scas
std
mov
scas
mov
mov
mov
movsl
movsb
movsl
pop
addb
add
add
add
pusha
or
lods
mov
cmpsb
lahf
mov
decl
call
lahf
lahf
sti
lahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
imul
jg
subb
xchg
lock
nop
lcall
fwait
pushl
outsb
xchg
mov
dec
mov
mov
mov
out
lods
lods
insl
test
add
add
add
add
popa
or
mov
in
mov
nop
call
xchg
xchg
lcall
lcall
pushf
popf
popf
cli
xchg
xchg
cltd
jmp
xchg
mov
jecxz
orb
xchg
insb
xchg
xchg
pop
jle
popf
dec
jl
movsb
inc
jns
lods
aaa
js
scas
sub
sbb
insb
pushl
pop
mov
mov
scas
scas
jle
mov
add
add
add
pusha
popa
popa
or
mov
lcall
popf
lahf
jmp
mov
cwtl
decl
addb
xchg
jae
cld
xchg
pop
cmp
dec
js
nop
cmp
xchg
daa
call
lcall
or
imul
mov
insl
pushl
push
jno
mov
pop
nop
mov
scas
scas
xchg
popf
lahf
lahf
adc
add
add
popa
pusha
pop
or
stos
mov
test
mov
test
stos
test
cmpsl
lcall
pop
jp
mov
imul
mov
pop
incl
or
mov
call
add
or
pushl
jp,pn
shrb
inc
das
jge
enter
lret
dec
pop
xchg
inc
test
mov
test
cmpsl
sbb
add
add
pop
pusha
pusha
or
movsb
test
cmpsl
mov
test
scas
scas
scas
pushl
mov
jmp
jno
mov
pop
decl
or
xchg
push
decl
add
lahf
add
movsl
add
mov
insl
inc
aaa
cmp
inc
mov
into
inc
mov
aam
mov
xlat
inc
xchg
fadds
call
bound
stc
mov
mov
mov
std
add
add
add
pop
or
lahf
mov
ljmp
mov
pushl
mov
stos
lcall
push
arpl
xchg
sbb
decl
or
nop
add
xchg
add
sahf
add
test
pop
ljmp
and
rorb
fcomps
fcompl
ficomps
jmp
pop
mov
fildll
dec
cmpsl
mov
ret
movsl
xor
add
add
dec
pop
jle
jl
fwait
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
lcall
sub
lcall
and
xchg
cvtdq2ps
xchg
add
popf
add
test
pop
pushl
pop
imul
jmp
outsb
test
ljmp
out
jae
jmp
js
call
test
mov
inc
jg
jg
add
add
dec
dec
dec
pop
outsb
outsb
push
mov
cwtl
pushl
mov
mov
mov
jne
lcall
jne
pushf
sub
cwtl
or
pushf
add
movsl
add
lods
add
mov
gs
or
aad
xchg
jmp
jp
jmp
cmpl
xrelease
push
mov
mov
cmpsb
cmpsb
push
lcall
add
sub
push
push
dec
pop
pushw
mov
mov
mov
sarb
mov
mov
test
sub
fwait
or
mov
add
mov
fs
mov
push
jne
loope
mov
push
xchg
xchg
cwtl
enter
enter
leave
clc
cwtl
jmp
stos
inc
mov
stos
popa
lahf
mov
add
xor
xor
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
pushl
pop
xchg
lods
dec
cmp
and
lahf
add
pusha
pushl
push
fsubs
cmp
mulb
cli
test
sar
cld
lods
sar
cld
lods
sar
stc
cmpsl
int
call
mov
stos
jne
pushf
sahf
or
add
add
dec
dec
push
aaa
je
jae
test
into
int
lret
cmc
lret
int3
int3
sti
lret
std
enter
mov
ljmp
adc
test
pusha
pushl
add
iret
add
fiaddl
je
jmp
xchg
mov
cld
mov
xlat
cld
mov
xlat
std
mov
sar
jmp
rol
scas
scas
lods
mov
add
add
add
add
or
rcl
dec
loopne
jecxz
fsubp
fistps
fsubr
mov
addr16
test
jae
movsb
push
popa
ljmp
add
leave
add
xlat
add
in
jl
icebp
dec
mov
std
ret
loopne
inc
loopne
inc
std
leave
dec
fdivrp
dec
cld
out
mov
lret
divb
popf
sahf
sbb
add
add
incb
std
incl
ljmp
jmp
in
xor
loope
jecxz
les
mov
mov
add
mov
inc
add
int
outsb
fldl
je
ljmp
sti
ret
sti
iret
out
call
out
std
shl
std
shl
std
xlat
out
call
out
std
shl
push
enter
int
stc
mov
mov
add
incl
std
incl
std
incb
aam
push
mov
pop
xchg
popf
or
pusha
pushl
add
rolb
jo
loopne
jne
out
pop
mov
clc
mov
std
shl
fsubr
cld
fld1
cld
xlat
out
sti
fsubr
cld
xlat
out
cld
aad
push
enter
iret
xlat
sti
mov
popf
lahf
das
add
add
int3
int
or
fs
mov
add
mov
add
add
loope
jns
in
xor
sti
lret
loope
stc
lret
fdivrp
cmc
repnz
aad
icebp
rcl
out
ret
sar
in
sar
in
ljmp
ljmp
stos
das
incl
aam
push
mov
jae
or
mov
insl
inc
sbb
lret
and
cs
fists
clc
jecxz
mov
out
jecxz
lret
mov
lret
ffree
int3
leave
loopne
iret
mov
jecxz
fcompl
out
jmp
rorl
mov
add
stos
lods
stos
add
xchg
movsb
les
pop
xchg
mov
xchg
fidivrl
jg
rol
stos
mov
mov
les
aam
int3
insl
aad
iret
pop
ror
rorl
cmp
das
in
fsubl
loop
icebp
adc
in
jmp
fiaddl
std
std
add
add
add
std
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
enter
rcl
pop
rol
adc
rcl
or
or
into
into
add
std
add
incb
lcall
pinsrw
or
int3
into
into
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
enter
enter
mov
sarl
scas
scas
insb
lods
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aad
std
rcl
sar
int
int
mov
mov
cmpsl
cmpsl
test
gs
pop
sbb
add
add
add
add
add
add
add
add
jno
jb
addr16
inc
das
das
sub
inc
and
add
add
mov
mov
cmpl
ret
into
into
call
rcl
dec
int
inc
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
je
jae
xchg
aad
jo
ret
arpl
outsl
outsb
outsl
jb
popa
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jno
es
es
add
add
add
add
je
je
popf
xchg
lcall
xchg
clc
xchg
or
addb
push
push
dec
inc
mov
popf
into
movsb
movsb
mov
sti
xchg
xchg
xchg
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
jg
adcl
test
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
pushf
pushf
sahf
cmc
lcall
mov
push
push
imul
jg
lea
xchg
notl
mov
mov
fwait
mov
jb
mov
mov
stos
scas
lods
push
lods
lods
stos
add
add
add
test
test
xchg
xchg
xchg
lcall
lcall
xchg
lcall
xchg
mov
loope
je
out
nop
fs
fwait
inc
jbe
movsl
aaa
jbe
scas
sub
mov
jo
mov
insb
pushl
sahf
lods
lock
mov
imul
int3
add
xchg
pop
scas
movsb
stos
test
popf
pushf
lahf
jmp
movsl
cmpsb
call
push
decl
je
mov
imul
nop
adc
xchg
or
or
scas
sbb
je
mov
sub
lds
mov
mov
subl
jae
push
mov
mov
cmpsl
pushl
mov
jmp
sub
decl
or
xchg
decl
pop
jmp
adc
shll
dec
ds
iret
inc
mov
aam
call
push
xchg
dec
cwtl
mov
mov
mov
mov
add
add
push
test
mov
lods
pushl
mov
mov
call
push
pop
decl
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pusha
movsl
jmp
data16
call
fwait
mov
mov
mov
cmpsl
cmpsl
cmpsl
pop
add
add
arpl
adc
sahf
fwait
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
cwtl
and
call
add
stos
add
mov
xor
out
mov
in
jp
out
jle
out
jge
fistpl
mov
and
add
add
dec
adc
imul
mov
mov
mov
rol
mov
bound
jmp
add
add
mov
gs
or
fimull
in
mov
hlt
xchg
xchg
leave
stc
xchg
jmp
cmpsb
inc
mov
movsl
sub
inc
inc
inc
adc
push
xchg
xchg
cld
ret
inc
sarl
ljmp
pop
push
pushl
imul
ljmp
stc
stos
sar
cli
lods
sar
sti
lods
sar
std
scas
sar
ljmp
fldenv
std
add
xor
scas
mov
mov
aad
mov
aam
fnop
rcl
out
leave
lret
mov
mov
jmp
add
ret
call
add
out
xchg
testl
fdivr
inc
std
rcr
std
rcr
lock
ret
cmpsl
test
addb
add
in
in
or
jmp
out
outsb
fcmovu
movsb
and
pusha
mov
add
faddl
jbe
out
cmp
std
iret
in
dec
in
call
in
call
in
aam
push
enter
enter
scas
scas
popa
addl
add
std
add
std
push
int3
lret
shrl
sahf
sbb
lods
add
mov
add
loope
jp
cmc
push
cmpsb
std
loope
cld
out
aam
aad
std
aad
cli
aam
push
fsin
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
scas
mov
cld
scas
add
insb
dec
or
cmp
out
mov
shl
jmp
rcl
jmp
lret
call
fcmovu
scas
vsqrtsd
add
add
pushf
lods
xchg
dec
and
push
mov
ret
int3
lret
mov
mov
lret
int3
outsl
fmul
rcrb
rcl
dec
in
fistpll
out
out
out
in
in
sbb
mov
mov
cmp
movsb
lods
arpl
lods
mov
les
lds
ret
ror
fstp
fisttpll
int
into
or
aad
push
std
std
add
std
incb
stos
std
std
add
mov
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
fcomp
test
jb
stc
pop
imulb
fyl2xp1
nop
or
jle
pop
scas
pop
lahf
fwait
xor
jle
int3
scas
repnz
ljmp
jno
push
cltd
cmc
mov
jbe
es
adc
cld
cmp
int3
arpl
das
mov
ljmp
les
lahf
cmc
xor
gs
daa
mov
mov
fldenv
cli
in
sub
pop
pop
or
jecxz
mov
mov
cwtl
add
mov
pop
fnsave
cmp
xchg
mov
pop
repnz
lods
sbb
dec
pushl
into
xor
das
mov
shll
aad
aad
inc
notb
mov
mov
int
into
or
jmp
and
in
inc
or
in
daa
mov
aaa
out
fcoml
pop
test
cli
imul
jl
ficomps
lcall
and
mov
aas
sub
stc
nop
or
hlt
jnp
inc
fisubs
push
out
dec
push
mov
xchg
or
rolb
jl
movsl
cmp
sahf
xchg
cmpsb
add
fcmove
push
ret
pop
mov
popa
clc
sub
test
jge
add
rcll
mov
jb
pop
movsb
mov
loope
div
pop
out
adc
es
push
cltd
xchg
sub
mov
ret
adc
jno
aas
loopne
outsb
lret
cld
nop
cmpsb
cmp
dec
jecxz
pop
adc
ss
push
mov
xchg
mov
mov
and
inc
jnp
fsubrs
pop
idiv
mov
jle
push
or
cmp
in
sbbl
stc
cmp
mov
loop
sub
cmp
inc
fstpl
pop
sub
mov
fs
jo
inc
xchg
sbbb
jmp
lret
fdivrs
ficomps
sbb
cld
fsubs
mov
mov
inc
fcomps
mov
scas
sub
push
sbb
pop
popf
xor
add
push
out
cmpsl
addl
jno
movsb
lds
clc
iret
mov
mov
add
daa
cli
fwait
rcrl
scas
inc
or
sub
arpl
xchg
xchg
jg
xorl
or
cmp
std
push
pop
fwait
xor
scas
mov
cmp
add
outsl
xor
pop
dec
push
testb
cmpsl
adc
fadd
std
xchg
hlt
stc
xor
sub
sbb
inc
dec
push
out
push
outsb
add
jmp
mov
and
stos
inc
jne
xchg
sub
xchg
enter
mov
in
out
sbb
shrb
cmp
fwait
insl
pop
lock
push
movsl
fsubp
inc
xlat
adc
sub
cmc
arpl
loop
test
movsb
imul
or
xchg
sub
mov
cmp
jle
insl
mov
ret
pop
rcl
hlt
mov
repnz
and
adc
ja
xor
test
sbb
in
ljmp
dec
cmp
lock
outsl
mov
mov
ret
hlt
loope
sub
push
enter
mov
imul
xchg
push
in
xchg
and
pop
popa
inc
fcoms
mov
mul
rorl
add
jle
cmp
addr16
push
pop
pushf
xor
lods
mov
cmp
fsubrs
sbb
pop
dec
push
testb
movsl
adc
ret
hlt
divl
leave
sub
sbb
out
push
outsb
add
jmp
mov
and
stos
inc
jae
xchg
sub
mov
dec
jmp
or
dec
cmp
mov
mov
mov
stos
loope
ds
add
mov
xchg
hlt
mov
fsubrs
cs
outsl
jnp
xchg
sub
sarb
mov
pop
dec
sahf
xor
mov
loop
fcomp
rclb
mov
jg
push
hlt
mov
test
xchg
fst
shlb
fdivl
es
jmp
jnp
lock
ret
pop
out
clc
ljmp
push
xor
es
sbb
psrlq
mov
and
push
ja
out
test
pop
cmc
lods
rorb
add
and
pop
sbb
imul
outsb
push
ljmp
test
call
dec
jne
push
test
fidivs
jb
loopne
and
lret
xchg
sub
jne
dec
test
into
gs
jb
mov
jl
loopne
sbb
inc
push
push
scas
lcall
dec
mov
popa
adc
add
scas
dec
pop
std
xchg
xchg
shlb
mov
mov
and
xlat
add
push
mov
data16
xchg
rcrb
scas
add
push
call
dec
push
out
or
in
dec
addr16
xor
rol
push
add
lds
xchg
sub
rorl
add
loop
dec
data16
xchg
fcomps
mov
mov
lcall
cmp
xchg
loopne
adc
or
insl
cmp
or
xchg
sbb
xor
nop
xchg
out
mov
push
mov
mov
push
shlb
sbbl
aaa
insl
jg
mov
jg
mov
je
inc
test
jbe
mov
cmp
in
aam
jno
push
ss
dec
stos
jmp
mov
cmpsl
add
out
stos
in
adc
jbe
add
jg
jp
lret
jl
and
test
jae
cld
mov
jnp
out
cli
pop
icebp
sub
push
mov
ja
adc
stc
push
jmp
jae
clc
mov
js
js
call
mov
mov
testl
adc
int3
arpl
addr16
hlt
xchg
lock
and
hlt
lock
jno
call
xor
in
loopne
jae
push
mov
jne
subb
push
ljmp
inc
ficomps
cmpsl
ds
insl
arpl
lahf
sti
jle
sub
ret
jge
mov
jecxz
adc
nop
daa
ss
jno
mov
in
sbbl
rcrl
sbb
js
in
int
and
das
and
add
cmp
lods
sub
fnstenv
push
movsl
cli
dec
loopne
sarl
mov
mov
push
movl
gs
cmp
lcall
push
in
cmpsl
leave
jae
ljmp
lock
pop
and
scas
jae
int
lret
mov
add
push
popf
sti
es
push
and
push
js
ljmp
leave
jl
dec
mov
pop
push
sbb
lea
out
xchg
daa
mov
adc
dec
push
std
xchg
dec
insb
add
cmpsb
mov
pop
div
adc
jle
adc
pop
inc
outsb
and
xchg
mov
push
out
or
add
arpl
mov
xchg
xchg
cmp
aas
mov
call
xor
aaa
into
pop
out
fwait
xor
or
fnstenv
out
out
out
xor
push
or
cmp
ja
xor
cmpsl
ds
out
mov
pop
or
mov
add
test
nop
movsb
in
adc
pop
out
in
repz
ds
lds
imul
xchg
mov
out
loop
lahf
pop
test
and
lcall
mov
out
xchg
add
insb
ss
xor
mov
stos
mov
vcvtps2dq
out
and
cmpl
lds
lock
mov
mov
fmull
seto
mov
pop
mov
xor
jp
or
inc
lea
adc
fnstsw
dec
scas
sbb
xor
aam
add
flds
movsb
xor
jbe
mov
sub
outsb
add
adcl
cwtl
scas
xchg
cli
mov
jge
dec
inc
pop
jle
repnz
fbstp
push
and
xchg
stc
nop
adc
aas
insb
clc
js
mov
cmpsb
mov
imul
mov
std
fidivs
mov
daa
jae
rcrl
fidivs
sbb
jmp
dec
pop
icebp
jle
add
fst
push
mov
std
lds
and
push
dec
data16
jp
jle
test
nop
daa
iret
add
cld
icebp
in
daa
sbb
ss
inc
pop
je
mov
scas
dec
mov
sub
jae
inc
inc
rolb
pop
sar
popa
mov
cmpsb
das
fcoml
aad
popf
jae
je
push
mov
cli
jb
stc
test
jae
sbb
cmpsl
into
sbbl
mov
sarb
mov
stc
inc
adc
aad
out
pop
dec
subb
mov
lahf
in
pop
or
rol
xchg
mov
pop
add
mov
xchg
sahf
pop
mov
dec
cmp
loopne
aad
hlt
subb
loop
imul
mov
cmp
inc
test
push
ret
ljmp
and
cli
lahf
dec
push
fisubrs
sub
dec
aam
add
adc
push
mov
inc
stc
cmp
lret
mov
mov
jl
mov
movsl
lea
add
notb
arpl
and
or
and
inc
mov
jnp
dec
es
repnz
pop
sub
push
inc
movsb
pop
lahf
cmp
cmpsb
dec
sub
sub
daa
int
pop
aas
dec
pop
add
mov
or
dec
ret
hlt
push
mov
je
push
xor
and
or
pop
leave
jne
dec
sub
fstl
sbb
or
and
jp
lcall
mov
nop
mov
cltd
push
int3
pop
in
cltd
xor
mov
dec
cmp
mov
jmp
ss
sub
and
stos
stos
push
fucomp
or
lock
fbld
mov
dec
pop
les
xlat
push
les
out
lds
adc
inc
out
dec
movsb
mov
pusha
cmp
es
das
cs
adc
inc
sbb
jbe
jge
hlt
repz
pop
loop
stos
push
mov
xorb
xchg
insl
dec
cld
mov
ret
sbb
inc
sbb
cld
cmpsl
sub
cmpsl
sahf
jecxz
cli
cld
mov
adc
imul
sub
imul
mov
fnsave
or
jno
pop
xor
fldenv
adc
sub
andb
int
cltd
mov
adc
ret
add
scas
pusha
mov
pop
or
not
sub
pop
xor
inc
xchg
xlat
aas
or
cmp
movsl
sbb
mov
les
or
mov
pop
mov
sub
ret
cmp
cmp
xchg
rorb
mov
aad
xchg
jg
mov
shll
mov
and
stos
mul
cmp
ljmp
jno
call
mov
sub
jecxz
xchg
cmc
and
loop
xor
xor
dec
loope
xlat
icebp
mov
dec
fsubrs
out
stos
sub
shrl
xor
shlb
loope
jno
movsb
testb
icebp
hlt
mov
pop
mov
lea
sub
mov
insl
add
mov
mov
fsubrl
shl
cmp
pop
repz
inc
lret
bound
jbe
lds
orb
aaa
and
mov
dec
mov
into
aad
fdivl
repz
les
sbbl
xchg
mov
cwtl
mov
into
ret
push
mov
push
in
sbb
int
mov
xlat
jmp
jns
xchg
sub
sbb
fnstenv
ss
repnz
adc
ds
dec
mov
or
push
mov
mov
or
fdivrl
lret
bound
jmp
or
es
xchg
sub
ret
add
gs
mov
shlb
filds
test
leave
or
mov
fsubrs
roll
int
les
dec
fbld
jmp
cmpsl
data16
or
test
dec
or
add
cmp
lret
rclb
data16
pop
xor
jne
js
sbb
mov
xchg
testl
mov
cmpxchg
cmp
movsl
test
cmp
jecxz
pop
cld
xchg
pusha
aaa
push
aaa
mov
mov
pop
mov
xchg
cmpsb
cmp
pop
out
les
inc
arpl
hlt
cmp
jns
sbb
add
dec
sbb
mov
bound
aam
push
fsubrs
arpl
mov
shll
mov
pop
stc
inc
fstpt
mov
mov
stc
dec
imul
adcb
in
repnz
in
and
push
or
outsb
add
popa
xchg
mov
rorl
stos
inc
mov
enter
sub
out
inc
fidivs
push
nop
jae
add
inc
fsts
xchg
sub
jp
testl
jle
jns
cmpsl
pushf
xor
pusha
repnz
mov
cmpsl
push
je
jo
das
cs
testl
push
popa
or
outsl
mov
mov
enter
pusha
loope
sbb
mov
jns
mov
pop
xor
push
test
xor
loope
mov
xchg
jge
xchg
sbb
push
ljmp
sbb
out
movsl
ds
js
jne
sub
xchg
sub
lods
mov
mov
jge
sub
iret
sbb
xor
xor
mov
mov
lods
pop
sub
xor
in
negb
test
lock
mov
movsl
stos
push
xchg
sub
test
dec
mov
xlat
shlb
mov
out
test
mov
mov
int
sub
dec
out
js
dec
loopne
lret
jmp
add
test
dec
das
inc
fnstenv
movsb
cmp
pusha
notl
ret
cmpb
jecxz
ja
pop
pushf
xor
or
xchg
cmp
stos
inc
fsts
js
enter
sub
sub
icebp
mov
fbld
mov
sbbl
pop
aas
rorb
cmp
pop
hlt
test
ret
jnp
push
xor
je
jno
and
xchg
lret
jne
ds
xor
into
sti
xchg
iret
data16
push
in
xor
je
mov
int
sub
dec
aaa
into
notl
mov
mov
push
in
pop
cmpsl
iret
data16
test
test
in
test
mov
loop
adc
dec
xchg
pusha
imul
mov
std
xchg
rorl
cmpsb
cmp
orl
rcrb
jns
jne
out
int3
stc
add
in
push
mov
or
cmp
add
mov
int
pop
icebp
inc
out
imul
cpuid
mov
xchg
adc
xchg
sub
mov
mov
fdivrl
test
pop
icebp
test
icebp
mov
sbb
fwait
dec
ss
mov
rcr
mov
sub
push
out
testl
inc
rcll
sub
lods
mov
fdivrp
iret
data16
not
addr16
add
xchg
je
mov
push
or
rcrb
xchg
sub
loopne
dec
loope
or
bound
push
or
out
sbb
fldt
movsb
cmp
mov
scas
jl
pop
data16
shlb
nop
loopne
nop
xchg
imul
xchg
sub
inc
pop
sahf
sahf
adc
xchg
mov
mov
movsb
fiadds
add
jl
shrl
lcall
mov
dec
stos
popf
xor
nop
insl
stos
dec
mov
fwait
ret
jo
jmp
mov
rol
lret
ljmp
ljmp
jg
js
push
call
pop
test
push
jae
push
xor
mov
aad
lods
inc
int
out
shl
lret
std
add
xchg
sahf
test
sbb
adc
aaa
into
adc
popa
clc
mov
push
in
dec
movsb
jg
xor
or
rclb
push
fildll
pusha
mov
int3
out
mov
icebp
mov
sbb
mov
sub
cmp
imul
test
bound
gs
dec
mov
xor
sbb
xchg
sub
je
cmp
int3
mov
js
es
xor
dec
repnz
mov
cmpsl
jp
fnstenv
sahf
cmp
mov
inc
pop
repnz
sub
adc
jbe
lret
cwtl
das
mov
mov
pop
dec
cmc
addr16
sub
mov
fs
mov
test
popa
mov
jg
adc
neg
push
popf
or
jge
lods
and
popf
lds
mov
jo
adc
xor
testl
lods
lahf
xchg
sub
movb
or
out
pop
iret
data16
lea
pusha
in
test
mov
test
inc
loop
sub
flds
fnstenv
repnz
fistps
testl
cmp
sbb
lret
or
rclb
outsb
add
xchg
cmc
mov
scas
mov
stos
inc
insl
dec
sbb
adc
testb
mov
sub
stos
inc
inc
fnstcw
loopne
out
sub
push
fildll
cmpsb
pop
fidivs
iret
mov
jl
cld
xchg
pop
xchg
test
mov
leave
xlat
outsb
cltd
cmp
mov
cmc
mov
ret
lock
sbb
aad
aas
xchg
sub
dec
out
jae
inc
nop
lds
mov
into
gs
add
test
test
xlat
outsb
and
sub
pop
dec
cmc
mov
inc
pop
repz
call
jp
shl
fistl
cwtl
das
adc
call
push
outsl
outsl
push
cli
jns
imul
mov
rclb
cmpsl
push
pop
fidivl
das
lds
clc
decb
and
push
mov
mov
mov
lret
adc
outsl
push
into
cmp
pop
out
and
mov
jp
mov
inc
jb
add
repz
mov
sbb
dec
into
jle
das
imul
dec
dec
pushf
xor
fnstcw
out
and
outsl
cmp
outsb
add
xchg
adc
sub
inc
movb
jl
fsubrs
xchg
push
out
or
mov
shrl
loop
and
ljmpw
stos
inc
mov
xlat
leave
pusha
sub
imul
jge
xchg
xchg
add
cmp
and
mov
loope
xor
xchg
add
push
out
loop
pop
mov
or
jnp
cs
into
repz
xor
incb
pop
jne
xchg
xchg
xor
arpl
xchg
lods
inc
sbb
dec
in
aas
fidivl
mov
ret
push
jmp
sub
outsb
and
mov
das
out
scas
fnstenv
push
jle
push
stc
out
xchg
jne
dec
cmpsb
and
mov
idivl
out
adc
scas
inc
or
mov
xchg
outsl
cmp
cltd
mov
repz
pusha
div
add
sbb
xor
stos
ret
pop
fnsave
loope
sub
push
dec
daa
insb
mov
sub
cmp
dec
stc
and
int3
or
mov
dec
cmp
mov
mov
dec
dec
jno
ja
pusha
rep
loope
inc
mov
sbb
mov
cmpsb
xor
fstpt
es
mov
adc
sbb
mov
mov
push
in
xchg
mov
dec
inc
call
sub
mov
ret
mov
inc
bound
imul
dec
sub
mov
push
pop
jg
shlb
xor
or
cmp
in
push
pop
pop
adc
or
inc
xor
test
sub
mov
ret
int
mov
jmp
ds
or
fldenv
sbb
sub
in
adc
dec
and
jb
mov
push
jns
rcll
fidivrs
jne
cmp
push
pop
ljmp
and
add
adc
mov
hlt
and
int
and
icebp
push
sbb
pop
jge
cmp
fmull
jl
scas
inc
ror
push
adc
std
mov
jno
repnz
jo
pop
inc
ljmp
and
fdiv
push
stc
std
lahf
daa
in
jecxz
pop
loope
fimull
out
imul
jne
cwtl
hlt
js
dec
ret
out
sub
subb
or
dec
outsl
pop
cld
or
xchg
lret
mov
leave
movsl
mov
lods
lea
add
push
pop
xor
or
bound
inc
dec
mov
lock
into
sti
lret
fstpl
add
mov
and
jo
cmpsb
lods
cli
mov
xchg
mov
mov
adc
arpl
mov
dec
xchg
rolb
pop
pushf
out
dec
std
jmp
movsl
test
xchg
scas
mov
dec
cmp
fdivrl
idiv
das
test
jl,pt
int3
fdivrs
and
lock
int3
les
shlb
xchg
jp
pop
and
mov
xchg
out
outsb
and
dec
mov
lea
insb
cmp
xchg
lods
les
xor
jmp
lods
es
mov
mov
arpl
adcb
fnstsw
pop
dec
push
or
push
scas
insb
fs
or
jo
daa
jge
and
mov
fistps
sbb
in
stc
pop
jge
mov
and
out
xor
dec
adc
pop
out
mov
orl
sbb
rcrb
adc
mov
adc
jmp
stos
cmp
sbb
or
sub
sbb
pop
cs
sub
and
sar
sub
fdivl
insl
scas
mov
sub
bound
aam
jne
and
push
fdivs
mov
ss
mov
mov
or
hlt
mov
jbe
pop
fists
call
repz
xor
dec
and
or
stos
jnp
mov
scas
pop
pop
push
movsl
fstps
cmp
push
bound
inc
push
bound
in
and
and
lods
mov
iret
inc
idivb
xchg
cmp
xlat
xor
ss
adcl
gs
xlat
adc
pop
mov
scas
mov
pushaw
fimull
xor
sbb
aam
lea
lcall
or
inc
cmc
push
jg
hlt
rorb
subl
pop
addb
mov
call
ljmp
mov
sbb
mov
dec
pop
mov
push
push
test
xchg
mov
daa
adc
addr16
mov
cmp
mov
jl
cmp
outsb
and
dec
cs
decl
mov
xor
sti
daa
mov
in
cmpl
mov
sbb
addr16
pop
xlat
arpl
pop
rclb
pop
or
mov
aam
jl
mov
lock
add
in
bswap
jne
cmp
cli
jae
jp
mov
idiv
add
jmp
ret
cmp
or
mov
jbe
adc
push
clc
sub
pop
adc
addr16
xchg
repz
sbb
ss
leave
mov
aam
lret
dec
jg
stos
lret
or
mov
fisubs
push
fldt
popa
fstpt
jno
mov
and
mov
or
dec
test
inc
fld
imul
cmp
xor
xchg
fsubrs
in
gs
enter
call
mov
jbe
xor
mov
js
movsl
test
push
clc
push
mov
mov
test
push
sub
sbb
xorl
push
jmp
mov
mov
arpl
fwait
lret
mov
ds
mov
sbb
jmp
cmpsb
jmp
cmpsb
inc
incb
divl
mov
xlat
jmp
ja
sub
xor
cs
dec
pop
repz
adc
xorl
test
shrb
aaa
adc
dec
cmpsb
sbb
and
or
out
dec
insb
fisubl
or
jg
not
outsb
pop
inc
shll
inc
int3
and
mov
or
mov
jae
icebp
sti
dec
dec
cmp
mov
dec
pop
and
jns
not
xchg
movsl
mov
insl
bound
int
in
out
jle
mov
mov
jge
mov
cmc
ds
in
mov
lret
mov
out
xor
sbbl
inc
and
and
pop
inc
cmp
sub
dec
mov
jae
sahf
push
punpckldq
push
inc
pop
mov
subb
add
pop
ds
mov
ljmp
ret
push
add
xor
js
ret
je
ds
or
iret
pushf
jb
inc
sub
pop
mov
xor
lret
cmp
sbb
stos
insb
inc
inc
out
fidivl
xchg
jb
loopne
test
cmpsl
cs
xlat
popl
inc
int
adc
sub
stos
mov
je
pop
cs
adc
mov
jmp
xchg
cmp
cmp
ret
xor
jae
es
pop
enter
mov
movsl
push
xor
lods
add
xor
fsubr
lahf
inc
popf
jbe
cmp
inc
add
adc
jmp
jne
faddl
or
jmp
xchg
repz
sbb
jno
ret
inc
mov
mov
dec
xchg
jno
xchg
rcll
aad
lea
dec
outsl
frstor
icebp
cs
sub
out
sub
clc
sbb
addl
repz
cmpxchg
das
mov
sub
xchg
leave
daa
stos
inc
mov
imul
inc
fs
pop
repnz
das
rcrl
pop
idivl
pop
in
mov
lock
cmc
ss
test
inc
adc
sbb
lods
test
mov
iret
mov
in
outsl
pusha
push
mov
jnp
adc
cmp
jno
mov
aam
and
out
loop
add
bound
jno
das
in
rolb
jle
pop
push
xchg
lds
xor
ljmp
xchg
sub
dec
add
pusha
je
fdivs
std
inc
fsubl
and
pusha
cmp
xchg
adc
dec
fsubrl
adc
out
sub
in
and
sub
cmpsb
xchg
std
js
adc
and
loopne
movsb
sbb
nop
pop
jle
ficomps
in
jno
or
movsl
mov
mov
sub
lods
dec
push
jnp
icebp
add
sarb
sbb
cmpsl
enter
pushf
jnp
and
insl
movsb
xor
dec
ljmp
mov
scas
inc
mov
ss
js
dec
adc
iret
mov
dec
cltd
orb
inc
cli
dec
andb
in
pop
cmp
xchg
rclb
shl
xchg
push
xor
cmp
inc
add
andb
stos
out
pushf
inc
xchg
mov
xchg
jbe
fs
cmc
mov
jb
sbb
stos
inc
arpl
pop
or
mov
sbb
jge
sbb
xchg
ret
mov
aam
mov
xchg
dec
sbb
loope
mov
fmuls
xor
xlat
pop
sbb
fsubrs
pop
jo
mov
pushf
lahf
lea
add
xor
ljmp
pop
jl
outsl
test
pushf
xchg
lahf
idivb
pop
xchg
adc
add
shlb
jno
add
daa
xor
mov
dec
mov
inc
bts
mov
insb
ret
lds
push
push
mov
mov
lods
push
test
lock
or
push
sahf
or
mov
ret
sbb
out
dec
scas
push
jno
fistpl
xchg
xchg
mov
movsl
hlt
cmp
jg
or
out
pop
xchg
or
cwtl
push
mov
dec
ljmp
repnz
pop
xchg
repz
mov
aas
jae
or
out
loopne
jns
push
add
cld
add
aad
js
adc
sbb
daa
cmp
lds
popa
and
push
pop
cmp
sub
arpl
imulb
insl
aad
push
aas
inc
out
lret
stos
jmp
ret
addr16
dec
lahf
push
add
clc
mov
mov
mov
jne
out
cmpsb
out
mov
push
insl
cmp
mov
dec
ljmp
or
mov
lret
mov
out
shrl
cmp
cltd
inc
repz
and
aam
popf
in
lds
adc
leave
movsb
ret
cmp
fwait
adc
bound
xor
dec
rorl
inc
xchg
lcall
add
lahf
sbb
imul
xchg
push
lcall
sahf
dec
jo
and
mov
in
inc
aas
push
xor
and
xchg
sbb
loop
xor
xchg
push
pop
dec
std
int3
out
jle
fs
int
ss
cmc
mov
es
jae
imul
push
outsb
cli
or
aas
jmp
xchg
jecxz
test
pop
lret
cwtl
cmpsl
ds
xchg
scas
ss
lret
push
pop
cwtl
scas
js
mov
or
add
cmp
push
add
adc
enter
mov
xor
cmpsb
pushf
pop
sbb
scas
je
repnz
loope
push
fcoml
pop
cmpb
lock
mov
cmp
pop
jge
dec
andl
cmpsl
roll
jbe
or
repnz
inc
or
lcall
cwtl
jmp
or
rclb
inc
stc
aam
mov
roll
inc
int
inc
xchg
cwtl
dec
dec
mov
rolb
lret
lahf
ret
addr16
js
insb
pushl
dec
mov
mov
not
loope
std
sbb
lcall
sbb
mov
cmp
push
ficompl
mov
or
jge
and
lock
sti
sar
in
pop
or
int
sahf
adcb
cwtl
pop
pusha
sub
inc
outsl
flds
push
test
and
mov
stc
mov
push
hlt
mov
aas
push
loopne
cs
push
dec
bnd
mov
sti
cwtl
xor
adc
sub
insb
dec
xor
and
lahf
cltd
test
dec
mov
outsl
jmp
push
jmp
mov
lods
call
int3
lds
lea
loopne
pop
rcrb
cmpsb
sub
add
jns
mov
fsts
fistpll
inc
jmp
fisttpl
cmpsb
aam
movsb
mov
xchg
adc
mov
nop
push
mov
sti
fsubrl
out
fistps
xor
or
mov
fisubrl
scas
or
lock
mov
fstl
and
cmpsb
pop
inc
push
or
pop
call
or
dec
repz
push
cwtl
test
jge
gs
dec
cmc
cmp
push
shll
jmp
cmp
aad
lods
clc
lods
dec
es
xor
mov
ja
cmp
and
popa
icebp
xor
sbb
es
roll
push
jge
add
shll
cmp
lds
mov
mov
push
inc
lods
cli
mov
fimuls
xchg
insl
mov
sub
xchg
pop
and
add
or
insl
cli
mov
pop
dec
lods
in
push
mov
sbb
ret
jnp
divb
mov
imul
or
lock
inc
and
lret
cmp
addr16
cwtl
cmc
mov
add
mov
xchg
dec
rolb
cmp
adc
lock
fldl2e
mov
xchg
icebp
in
mov
sbb
jno
push
or
mov
or
enter
xchg
aad
icebp
adc
in
add
push
cli
lahf
jle
mov
fsubs
aaa
cltd
mov
inc
mov
rcrl
hlt
test
ljmp
sub
stos
mov
sub
pushf
push
jno
mov
adc
in
aam
push
aam
mov
or
xorb
jne
mov
gs
jo
mov
aad
mov
or
push
popf
sub
aaa
aas
inc
pop
inc
imul
or
sub
inc
ss
rolb
repnz
jbe
cmp
jge
je
xchg
lods
mov
out
test
rolb
das
inc
mov
mov
jo
push
and
ja
adc
mov
lret
sti
aas
or
jg
cmpsl
incb
dec
cmp
dec
out
jp
inc
jns
xor
jecxz
std
dec
popa
or
mov
mov
xchg
enter
cltd
scas
mov
mov
add
idivl
outsl
mov
addb
adc
jmp
dec
and
adc
xchg
loop
setb
lods
rclb
ljmp
push
adc
and
mov
leave
pop
push
mov
sti
clc
mov
gs
cli
cmc
mov
inc
xorb
cmp
add
test
mov
adc
pop
lea
mov
mov
cmp
enter
pop
or
in
out
lods
dec
or
inc
fwait
imul
imul
das
xor
or
add
fstl
orb
mov
fcomi
cli
sbb
cmp
mov
cltd
pop
inc
pop
sbb
lahf
cmp
repnz
or
loope
adc
mov
sub
addb
out
push
js
jne
lcall
cwtl
outsb
jne
xor
sub
dec
mull
movsb
mov
mov
jae
cmp
sub
dec
ret
mov
call
sarb
inc
out
or
das
dec
pushl
xor
fst
push
sti
push
mov
sbb
cli
lahf
leave
pop
cmp
inc
inc
mov
sub
cmpsl
jne
loope
sbb
imul
cmpsb
stc
pop
mov
cld
push
cld
xorl
jnp
cs
fldt
mov
lret
pop
int3
adc
lods
shrl
inc
loope
cmp
mov
es
movsb
and
sub
cli
scas
fimull
xchg
aas
adc
and
cmpb
xchg
cmp
arpl
test
and
clc
scas
iret
lds
shll
mov
sub
dec
sub
insb
insl
data16
mov
sbb
rcrb
pop
cmc
lret
out
push
iret
fstps
xchg
xchg
fs
dec
dec
aaa
jg
mov
mov
jae
cltd
inc
cmp
dec
push
aaa
ret
movsb
xchg
aam
and
dec
mov
scas
fidivs
lods
xchg
rcrb
addb
sbb
insb
sbb
loopne
mov
sbb
inc
push
mov
ds
or
and
sbbb
loope
mov
out
mov
cmpsb
sbb
jmp
sub
sbb
dec
ror
cmp
loope
aam
mov
int3
mov
mov
movsl
xor
jns
jl
push
jecxz
and
push
cmpsl
aam
add
in
je
lds
sub
idivl
adc
pop
dec
ja
loopne
dec
or
pop
xor
push
cmp
int
push
sbb
loopne
jge
xchg
mov
cmp
popf
sub
dec
or
fcmovb
add
loopne
test
push
mov
sti
mov
jg
xor
call
jb
fwait
into
adc
loopne
adc
jno
and
adc
push
testb
data16
ret
fidivl
mov
jae
jb
sbb
hlt
pop
shll
movsb
jmp
jmp
das
sbbl
repz
in
int3
dec
test
cmp
stos
push
shrd
adc
andb
push
lods
dec
mov
jb
scas
test
popa
jbe
pusha
icebp
jo
decl
xlat
dec
loop
push
test
push
fwait
pushf
movsl
lds
arpl
sub
cmpb
cmpsb
leave
inc
lock
rcll
xor
cltd
dec
inc
push
aaa
inc
or
int
push
decl
into
inc
mov
mov
mov
je
add
fdiv
icebp
dec
dec
sub
test
test
data16
clc
stc
scas
rcr
int3
lret
outsl
hlt
jecxz
push
mov
fidivrs
xchg
adc
cwtl
idivb
adc
xchg
adc
inc
mov
mov
xor
xchg
pop
sub
mov
xchg
or
sbb
mov
aaa
mov
cli
enter
nop
fwait
inc
inc
xchg
inc
mov
out
andb
jns,pn
mov
xchg
push
push
leave
sbb
mov
nop
mov
out
pop
pop
push
mov
fisttpll
xchg
sahf
push
ror
lahf
xorb
popf
pop
test
repnz
sub
imul
mov
and
cld
push
mov
in
cs
loopne
nop
cmp
dec
xor
ret
push
pop
loope
test
sbb
sarl
fcoms
mov
loopne
add
push
subl
lahf
jge
fsubrl
dec
mov
in
add
jecxz
jae
int
mov
out
test
mov
xchg
jg
mov
stos
mov
push
stc
mov
cmp
imul
ss
mov
mov
aaa
addr16
or
ss
iret
pop
xor
fisubrs
lock
mov
aaa
jae
adc
popa
pop
mov
ffreep
ds
int
and
aad
pusha
icebp
cltd
xchg
xchg
mov
fidivl
test
popa
sub
test
or
dec
gs
mov
lods
scas
ss
es
cli
xor
jp
pop
jp
mov
xor
jb
xchg
mov
in
inc
pushf
pop
ljmp
push
data16
xor
mov
mov
rcrb
jne
xlat
add
popa
inc
es
lods
lods
or
jnp
mov
xchg
pop
loopne
jo
fsubl
jmp
scas
cmp
inc
aam
fs
cmp
jno
movsl
mov
out
sbb
xorb
or
imul
je
lods
mov
popa
cmc
mov
shll
stc
cmp
mov
cmp
jae
xchg
leave
in
xchg
push
mov
lock
int
push
xchg
lods
push
or
and
sahf
and
and
mov
mov
inc
int3
enter
dec
sti
dec
push
jns
stos
scas
in
lea
loope
sbb
xchg
ja
imul
xor
aas
scas
mov
sub
stos
push
scas
imul
sbb
mov
mov
dec
fsubrl
arpl
jno
je
jno
aam
cmc
and
mov
loope
add
aad
inc
adc
xchg
xor
xchg
js
pop
fnstsw
cmp
xor
sub
mov
les
sub
loope
aas
das
cmp
or
xor
dec
daa
enter
add
jbe
sahf
add
jne
out
cld
out
popf
jno
and
mov
mov
subb
sub
lods
mov
sbb
mov
sahf
aad
fwait
imul
sbb
jp
sarl
mov
push
in
rcll
lahf
stc
xor
inc
add
adc
dec
ret
sub
push
jge
xchg
ja
in
add
inc
inc
lret
jmp
test
jne
push
stc
call
cmp
mov
push
pop
jb
sub
sbb
into
outsb
sub
inc
ljmp
pop
je
inc
fnsave
enter
scas
jle
fdivs
mov
sti
jecxz
popa
mov
cmp
aad
add
xor
add
or
inc
insl
ret
icebp
inc
inc
lds
lret
out
mov
in
or
iret
mov
push
cltd
movb
fcompl
xor
sub
insl
test
data16
sbb
popa
pop
jno
addl
mov
xchg
daa
add
sahf
jge
mov
jl
je
pop
cli
mov
dec
jo
jnp
scas
adc
jb
lock
out
arpl
jno
jo
inc
sbb
jge
cmc
pusha
jo
push
xchg
add
mov
dec
jmp
lods
sbb
sub
mov
add
mov
inc
dec
xchg
enter
int3
dec
shll
or
push
sbb
sub
dec
rorb
mov
sahf
adc
cmp
jle
shlb
loop
fwait
shlb
mov
rorb
jns
pop
push
jno
addr16
inc
mov
jns
xchg
inc
lahf
cmp
jl
inc
outsl
push
mov
test
mov
sbb
and
or
xchg
push
inc
outsl
push
or
dec
movsl
jg
pop
sbb
mov
es
out
adc
push
repz
fbld
test
mov
mov
fidivrl
mov
jg
sbb
decb
inc
into
mov
mov
sub
sbb
add
lret
cmp
xchg
jge
mov
repz
mov
clc
nop
dec
jle
and
pop
in
inc
mov
xchg
out
sub
lock
ss
call
leave
aad
out
or
call
push
shll
aam
jg
adc
xchg
outsb
cltd
in
lcall
insb
adc
cltd
dec
jmp
mov
orl
push
pop
lods
jg
mov
fdivs
jecxz
insl
outsb
das
ficoml
mov
in
xchg
lea
stos
jbe
push
fidivs
pop
test
movsb
aaa
out
xorl
ret
icebp
shrb
mov
call
pop
adc
jmp
loope
xchg
sbb
das
loope
adc
arpl
xchg
shrl
mov
dec
sbb
out
jp
push
mov
or
sbb
mulb
push
pop
lahf
adc
xchg
lds
daa
sbb
testl
add
mov
cwtl
pop
sti
mov
data16
jb
jecxz
inc
movsb
jg
dec
mov
mov
mov
rclb
sti
push
icebp
fstl
adc
mov
cmp
fildl
mov
out
add
sub
or
mov
mov
and
mov
pop
dec
frstor
adc
popf
scas
cmc
push
push
in
test
movsl
cmc
lahf
mov
fs
fistps
cld
es
imul
pop
lock
xor
repz
loope
in
sbb
fsubs
adcb
push
mov
and
movsl
popa
jl
scas
jl
add
cmpsb
mov
add
or
jmp
adc
inc
dec
inc
cmp
ja
lea
ds
iret
int
clc
mov
push
in
fdiv
scas
xor
ret
inc
sbb
sbb
jnp
jmp
nop
ret
mov
jb
xor
mov
imul
push
jns
lods
shlb
sbb
aam
clc
or
jmp
or
lods
xchg
push
jno
pusha
int
xchg
arpl
fisttps
jae
mov
sbb
aam
shrb
adc
int3
test
jg
insl
neg
out
ja
pop
inc
adc
mov
inc
call
bnd
push
lret
jg
ljmp
dec
ds
nop
cmp
or
gs
cmpl
push
out
outsl
push
mov
roll
pop
mov
pop
fsubl
fsubrl
sub
sub
dec
jbe
sub
arpl
jl
outsl
stos
mov
mov
inc
push
and
add
xchg
push
jno
lock
dec
mov
hlt
sahf
enter
xchg
lock
mov
pop
fmul
ret
into
pop
or
sti
or
aaa
shlb
into
call
adc
cltd
sbb
in
iret
add
or
or
shr
cmc
mov
iret
lods
sbb
xor
cltd
xor
xchg
mov
sbb
and
loop
pop
cmpsl
xchg
xor
xchg
lcall
pop
inc
in
fwait
or
arpl
cltd
movsl
sar
dec
jo
inc
fiaddl
ds
push
xchg
lret
and
out
in
dec
dec
fsubs
and
fwait
insl
jb
jnp
fldl
jbe
dec
sbb
dec
push
in
and
in
dec
pushf
insl
or
insl
es
sub
mov
bound
push
xchg
push
out
push
jo
test
in
mov
inc
pop
jae
cmp
sub
push
imul
pop
adc
mov
xchg
in
adc
hlt
xor
outsl
gs
and
xorb
aas
cmp
dec
and
xchg
iret
ja
jnp
xchg
or
movsb
add
or
push
lahf
das
push
inc
adc
sub
pop
pop
pushf
xchg
das
std
loop
lods
xor
lea
das
out
sbb
xchg
out
or
or
or
int3
sbb
ljmp
dec
mov
xor
sbb
cmp
sub
stos
add
divl
ja
aaa
or
xor
xchg
add
in
jbe
or
inc
cmpsb
and
xchg
push
leave
dec
xchg
call
inc
cmc
jnp
jbe
jne
dec
xor
jl
adc
push
notb
iret
inc
mov
or
in
pop
dec
pop
cltd
mov
sub
in
hlt
std
mov
icebp
popf
cmpsb
loope
test
loopne
pop
shld
pop
sbb
lods
std
fs
inc
dec
mov
cmp
test
ljmp
lods
cmp
js
push
aam
daa
adc
adc
ds
adc
pop
into
lahf
mov
mov
xchg
mov
lahf
dec
movsl
sbb
arpl
sbb
andl
jb
test
test
push
mov
push
push
pushf
and
or
arpl
dec
pop
xchg
test
in
mov
and
cli
pop
inc
inc
pop
subl
sbb
mov
aaa
cld
insl
out
pop
jbe
and
lret
and
or
in
mov
nop
add
xchg
cmp
outsl
fsubs
fidivs
push
cmpsb
adc
mov
in
jmp
jmp
or
or
nop
fwait
pop
pop
dec
subl
bound
push
add
mov
sbb
gs
add
sub
loop
mov
pop
orb
jnp
arpl
push
hlt
adc
jo
jo
fcmovu
loop
mov
sbb
push
insl
or
out
sbb
insb
stc
push
scas
xor
mov
jle
jmp
or
data16
mov
ljmp
movsb
jne
iret
jge
in
movsl
lea
scas
xchg
or
hlt
mov
out
rclb
mov
mov
push
fs
sbb
mov
rcll
es
das
mov
into
jne
push
lds
xchg
or
rol
je
int
xchg
dec
sarb
mov
push
dec
ret
ljmp
fadds
push
hlt
jle
outsb
movsl
out
push
pop
movsl
sbb
aad
xchg
dec
sub
lret
je
or
mov
ds
lods
jo
jne
addl
mov
adc
sbb
je
test
rorb
adc
fsub
cli
mov
mov
ljmp
int3
xor
jp
add
testl
les
mov
xchg
cmp
sbb
ds
std
cwtl
jnp
inc
mov
cli
pushf
sbb
stos
cmc
clc
cld
xor
inc
dec
xchg
mov
fimull
repz
or
mov
daa
mov
add
es
push
or
js
mov
pop
adcb
lret
sti
mov
xor
sbb
out
dec
add
or
rcll
fistl
inc
inc
cld
sub
dec
sub
jg
in
sub
dec
loop
push
or
sbb
cwtl
inc
mov
fsubp
lahf
mov
std
repnz
pop
test
mov
nop
ja
mov
scas
leave
inc
pop
xor
xor
sbb
loop
test
add
vphaddbw
and
and
lods
inc
push
mov
bound
mov
inc
mov
lahf
popa
xchg
mov
mov
call
aas
push
cmp
xchg
outsb
daa
popa
clc
pop
and
adc
int
xor
xor
and
push
mov
xlat
outsb
movsl
fcomps
mov
sub
stos
dec
jle
jo
insb
xor
popf
shl
mov
mov
adc
push
inc
jbe
int3
cmpsl
mov
xchg
enter
mov
inc
icebp
sbb
inc
adc
dec
gs
data16
insb
cmpsl
ds
rcl
cli
mov
mov
sbb
dec
data16
pop
mov
rorl
lock
inc
inc
adc
push
lds
insb
sbb
jl
mov
push
lock
push
mov
push
sahf
xor
in
mov
cmc
out
or
out
xchg
add
xchg
mov
inc
fsubrp
cld
cmp
and
inc
pop
idivb
dec
fists
mov
xor
cli
ja
and
and
jg
fnstenv
mov
jno
icebp
cli
jae
and
pop
icebp
dec
inc
mov
jg
shrb
mov
sbb
and
inc
mov
scas
xchg
es
jnp
es
inc
fisubrs
dec
iret
data16
sti
xchg
int
aaa
into
ret
ret
call
bound
out
imul
cmp
push
inc
fimuls
sub
mov
sti
xchg
lods
mov
jle
into
adc
nopl
xor
dec
sahf
mov
sahf
mov
mov
jle
or
jno
xor
dec
nop
mov
mov
testb
or
pop
mov
pop
mov
inc
mov
lock
aad
mov
cmp
and
sub
jb
push
out
mov
push
call
pmaxsw
mov
imul
mov
mov
mov
fs
mov
pop
xor
imul
ja
mov
insb
lods
xlat
and
stc
xor
pop
imul
push
inc
mov
mov
xchg
cs
ret
pop
adc
xchg
sub
xor
imul
push
mov
add
mov
sti
xor
xchg
imul
inc
mov
mov
adc
ss
xor
popa
imul
lahf
inc
mov
lret
cmp
sahf
out
test
rolb
out
xchg
dec
in
mov
popf
xlat
imul
mov
inc
cld
xchg
xor
cmpsl
ds
pop
sahf
xlat
mov
adc
pop
imulb
xchg
and
int3
arpl
adc
movsb
cmp
fs
adc
mov
ficompl
fdivl
xchg
popa
fcos
xchg
add
movsb
cmp
add
and
int3
arpl
jge
mov
enter
jb
ljmp
or
cwtl
push
cld
xchg
push
mov
lods
push
insb
add
les
popa
pop
mov
pop
mov
push
mov
dec
loop
add
out
ds
hlt
pusha
pop
repnz
addr16
xchg
cs
pop
movsb
cmp
pop
repz
inc
ficomps
pusha
imul
pop
sbb
xor
push
dec
out
repz
repnz
pop
repz
lahf
and
sbb
pop
mov
pop
bnd
mov
and
es
sbb
fidivl
insb
add
mov
mov
mov
xchg
iret
iretw
and
jb
out
pop
out
pop
jg
and
leave
pop
repnz
adc
outsb
add
and
test
jge
into
movsl
add
repnz
sti
xchg
mov
jb
jnp
mov
les
scas
push
pop
repnz
enter
je
aam
pop
movsb
cmc
sbb
decl
or
or
les
pop
mov
ret
call
jb
push
dec
fisttps
xchg
sub
pop
repnz
jns
push
mov
jl
loope
jl
movsb
mov
aad
shrl
test
and
xchg
jne,pn
das
and
gs
ja
ret
pop
push
cltd
dec
loop
aaa
test
add
test
jg,pt
int
add
mov
push
stc
add
mov
and
or
rcrl
mov
sbb
ret
sbbl
fistpl
nop
daa
dec
cld
out
sub
pop
cmpsl
dec
add
lcall
add
es
cmpsb
scas
inc
dec
loop
iret
inc
xchg
imul
sbb
jmp
in
sub
insb
jl
fwait
xor
dec
arpl
pop
mov
rcrl
loop
add
imul
std
xchg
loopne
sbb
xor
push
inc
fildl
push
out
jo
add
sub
dec
mov
jne
mov
dec
sahf
cltd
daa
leave
popa
loope
lcall
ljmp
pushf
cmp
adc
test
inc
loope
mov
mov
push
or
lret
xor
pop
dec
flds
lods
pop
out
sbb
and
shlb
dec
lahf
sub
add
lret
aad
call
pop
jmp
push
xchg
mov
push
jp
cmp
inc
loope
push
mov
mov
jbe
pop
movsl
sahf
daa
fnsave
sbb
sub
lcall
adc
mov
cmpb
sbb
leave
pop
xor
pop
out
imul
mov
xlat
js
or
stc
lea
mov
pop
outsb
or
lods
mov
test
std
push
sub
pop
cmp
andb
lahf
scas
dec
mov
pop
shl
arpl
adc
aam
sub
lcall
lcall
int
mov
paddb
cmpsb
adc
cs
hlt
insb
aad
cmpsb
mov
add
sub
push
aas
push
xor
jle
shlb
test
shll
xchg
and
jmp
shll
cs
jbe
out
mov
lea
jmp
dec
ljmp
js
data16
mov
mov
cs
adc
cwtl
sbb
push
loop
cmp
xor
int
inc
add
mov
cs
loope
push
loopne
xorl
mov
push
pop
sub
jbe
jp
jo
pop
fmul
lea
ret
in
sbb
cltd
sbb
js
jo
lea
fwait
mov
lds
cwtl
sbb
adc
addb
sub
jle
rclb
push
loop
lret
or
xchg
cmp
fcomps
mov
jb
jecxz
lods
cwtl
lret
add
xlat
jb
or
insb
jnp
lods
movsl
test
sahf
ljmp
subl
sub
lcall
btr
stos
sti
jg
hlt
daa
lret
repz
es
jl
xchg
mov
jl
add
jl
cmp
test
icebp
jle
xchg
sbb
std
lds
mov
or
scas
dec
xor
aas
mov
scas
movsl
cs
xlat
test
sbb
xor
mov
push
dec
dec
ljmp
jns
aad
shrd
out
push
mov
jp
daa
aad
test
loope
clc
mov
cld
insl
sub
push
mov
xlat
fs
fwait
sbb
roll
sub
xor
dec
insl
mov
test
gs
add
jae
adc
out
mov
fsts
scas
or
ss
or
push
in
scas
pop
aas
nop
iret
jo
add
xchg
push
add
add
cmpsl
push
nop
daa
mov
ret
pop
cli
stos
mov
insl
dec
std
aam
das
outsl
clc
mov
ret
repz
test
idivb
push
dec
mov
cmp
pushf
pop
icebp
int
and
and
jne
inc
insl
jae
cld
xchg
out
hlt
mov
pop
sbb
sbb
rorb
lods
pop
hlt
fisttpll
jg
xor
jle
adc
sub
xor
xlat
test
js
fdivrs
iret
or
jge
push
in
pop
popf
fnsave
je
stos
in
sti
xchg
pop
rcll
mov
sub
inc
pop
xorl
mov
mov
jae
pop
mov
mov
or
sarl
mov
xor
in
push
leave
pusha
xchg
mov
testb
stc
sbb
cmp
test
add
in
arpl
inc
out
aam
pop
push
adc
xor
aam
imul
cltd
lret
xchg
or
fidivrl
iret
stc
dec
cmp
mov
gs
cmp
jbe
orl
mov
sbb
repz
xchg
sub
adc
and
mov
dec
imul
push
or
sti
xchg
jl
pop
testb
xor
jle
lahf
insl
mov
daa
out
mov
pop
call
jmp
mov
xor
lret
inc
mov
ret
fsubrs
dec
and
stos
ss
mov
lods
rorb
stc
dec
icebp
cmp
sbb
mov
ret
adc
fwait
xor
sbb
out
cld
jae
mov
xor
decb
sbb
mov
icebp
push
sbb
mov
add
or
xchg
loop
insl
add
add
mov
and
pushl
pop
adcb
or
fistpll
cmp
cmp
adc
inc
jo
popf
mov
mov
shl
ss
icebp
popf
xor
jge
and
adc
sti
pop
xor
icebp
lods
or
xor
and
insl
pop
ljmp
imul
mov
ret
pop
flds
cmp
decb
cmp
icebp
lods
js
xor
cmp
dec
sbb
data16
jle
cmp
inc
mov
cmpsl
ds
dec
mov
jle
lds
out
sub
in
add
leave
aam
mov
shl
mov
cmpsb
mov
xor
or
sbbb
loope
cmp
ret
fdivr
xchg
push
add
cli
js
js
jge
test
pushf
stc
nop
push
sub
pop
dec
and
dec
push
cmp
inc
or
sahf
cmp
test
clc
jns
ljmp
cmp
mov
mov
loope
jg
and
mov
jnp
repnz
and
jmp
xor
sub
testl
push
mov
xor
inc
pop
movsl
cmp
push
addr16
cmp
jno
icebp
or
jp
jp
popa
lods
out
jmp
in
test
mov
mov
sbb
mov
xor
inc
pop
dec
loop
jne
cmc
data16
loope
jno
push
push
scas
inc
or
add
pop
sahf
xor
xor
aas
xorl
ds
and
scas
repnz
pop
cmpsl
ds
imul
adc
xchg
cmp
jno
fwait
xor
clc
jbe
sub
lahf
ss
scas
mov
cmp
push
sahf
xor
xchg
sbb
test
dec
sbb
sub
inc
fnstcw
lea
add
xor
push
jmp
mov
inc
outsb
mov
mov
daa
mov
pushf
in
and
gs
out
xor
loopne
stc
nop
inc
adc
test
arpl
inc
mov
inc
sub
cmp
cmp
add
dec
mov
mov
insb
outsl
jns
mov
sub
jns
and
push
dec
cmpsb
add
pop
add
les
stos
sbbl
lcall
rolb
inc
dec
loop
pop
jmp
adc
mov
sti
movsb
xchg
xlat
cli
sub
jmp
xchg
sub
ljmp
mov
outsb
add
gs
lret
in
xchg
pop
add
or
imul
jmp
in
popf
push
call
arpl
sarl
mov
stos
scas
loopne
dec
adc
in
or
out
xchg
xlat
scas
inc
leave
sbb
jle
sub
movsb
jge
subl
hlt
push
outsb
pop
out
pop
push
push
fimull
adc
inc
dec
adc
cmp
mov
mov
repz
pop
and
sub
andl
pushf
lret
mov
or
jnp
sub
insb
ret
xor
rep
push
movsl
pusha
jbe
sti
test
adcb
das
jbe
pusha
cwtl
shrl
call
mov
inc
adc
sub
fcomp
jae
xor
movsb
into
out
test
test
and
leave
sbb
dec
addb
mov
jmp
dec
pop
icebp
in
sbb
out
nop
daa
add
les
pop
mov
arpl
and
xchg
push
mov
or
movsl
push
cmp
cmp
dec
in
pop
test
xsha1
cmpsb
mov
push
ljmp
inc
hlt
mov
out
loopne
xor
rcrl
repz
cld
mov
out
popa
and
xchg
mov
lds
dec
pop
out
jge
shrb
cld
sbbb
mov
sub
mov
pop
iret
sub
shlb
scas
lret
ss
push
loope
pop
adc
data16
jb
cltd
cwtl
das
or
rclb
fidivl
jae
cmp
cs
popa
push
fdivl
call
xchg
sub
movsb
xor
adc
inc
shlb
pop
jo
andb
add
int
sahf
mov
lods
mov
jne
dec
inc
fstpt
fucomip
jg
sub
repnz
int3
sbbl
int
mov
push
lret
or
push
aas
into
pusha
testl
lret
or
testl
sbb
dec
xor
cmp
fsubrs
xor
arpl
mov
adc
sub
mov
test
xor
bound
pop
hlt
and
adc
out
test
mov
das
sub
mov
fcomps
aad
shll
shrb
adc
sbb
or
aad
rclb
inc
xlat
lds
push
jmp
test
mov
testl
xchg
mov
mov
mov
jb
loop
stc
sub
or
fnsave
leave
into
xor
lock
xor
adc
inc
jno
pop
icebp
add
les
jbe
js
jb
movsl
imul
rcrl
in
pusha
pop
fwait
xor
arpl
add
add
xor
adc
cmp
pusha
imull
stos
in
sbb
pusha
push
out
push
pop
jp
mov
lea
clc
push
jmp
stc
mov
sub
int3
arpl
lods
loope
ficomps
push
jmp
cltd
repz
into
loop
rorb
out
cmp
outsb
ja
jae
jmp
inc
ficomps
imul
sahf
icebp
mov
xlat
popf
xor
push
les
iret
cmpsl
add
mov
clc
sti
inc
jg
jp
push
ljmp
mov
mov
sbb
or
loopne
push
adc
cmp
lods
into
or
clc
popl
and
mov
leave
je
lret
cmpsb
or
int3
jge
data16
push
adcb
dec
icebp
jb
jecxz
movsb
cmp
push
jmp
cmp
mov
test
adc
leave
js
subb
sbb
imul
adc
pop
out
add
mov
mov
mov
xchg
sub
xor
mov
push
jecxz
addr16
aam
xchg
push
xchg
mov
rorl
cld
leave
pusha
out
jne
aad
in
ss
and
push
lock
cmp
sbb
dec
loope
or
push
das
movb
stc
addl
icebp
aaa
ret
mov
insb
add
mov
mov
xchg
sub
lea
loopne
jns
inc
mov
jbe
ss
icebp
in
and
pushf
xor
jno
sub
pop
lock
subl
mov
mov
shlb
pop
repz
out
outsb
add
mov
cwtl
das
fdivs
ret
sub
popf
xchg
aam
leave
loopne
inc
rclb
sub
cmpsl
mov
lods
inc
mov
cmp
data16
lds
loop
jecxz
and
adc
lret
pop
hlt
or
sub
les
push
cs
adc
outsb
inc
lahf
dec
in
add
cltd
ss
xchg
sub
loope
dec
in
push
es
pop
push
out
in
push
jmp
jg
es
cli
mov
sub
lods
mov
xor
enter
fmuls
cwtl
das
lea
arpl
sarl
xorb
sub
daa
jbe
mulb
daa
mov
pop
xchg
xor
ret
fwait
jo
or
push
xchg
subl
pop
repz
in
test
or
sbb
mov
test
and
scas
push
add
push
jbe
inc
flds
jo
cli
or
mov
sbb
iret
mov
inc
mov
ror
repz
je
sub
mov
lahf
cltd
addr16
cltd
mov
fnsave
inc
fdivrl
push
in
addl
sbb
jecxz
sub
and
mov
fistpll
mov
cld
int3
stos
fldcw
out
test
and
cmc
mov
inc
mov
cmpsl
adcl
fdivl
dec
fbld
std
xchg
outsl
inc
gs
js
sbb
lret
fnstcw
aaa
daa
sub
out
pop
inc
mov
or
xchg
fdivs
leave
nop
sub
loop
xchg
sbb
sbb
push
shrl
xor
mov
fsts
push
pop
adc
popa
jno
lds
ret
dec
jecxz
aad
inc
pop
push
imul
sub
arpl
mov
fwait
jnp
subl
shufps
daa
mov
xchg
jb
fsubl
mov
adc
xchg
push
sbbb
push
inc
fldl
inc
push
out
cld
rcrl
jp
sub
jecxz
loopne
mov
fcomip
push
popf
out
mov
mov
mov
cmp
pop
icebp
fwait
jmp
jg
int
push
lods
adc
movsb
cmp
ret
mov
mov
dec
loope
mov
jl
cmpsl
inc
hlt
mov
and
mov
inc
inc
xor
ss
mov
inc
xor
mov
pop
pop
mov
pushf
xor
shrb
mov
fwait
pusha
add
lods
sbb
jp
filds
adc
pop
xlat
dec
loope
jno
mov
add
rcll
and
add
jae
xor
loop
imul
hlt
mov
lods
mov
mov
cmp
dec
sti
xchg
aas
xchg
mov
adc
inc
xor
adcl
hlt
in
xor
jmp
in
or
negl
in
movsb
int
mov
push
lods
push
movsl
sbb
sub
inc
fidivs
mov
movsb
and
adc
xchg
fmuls
mov
xchg
stos
jge
mov
lahf
icebp
hlt
leave
pusha
es
cmp
out
sti
xchg
shl
sbbl
xchg
or
push
mov
add
push
out
outsb
add
pop
test
das
fistl
inc
dec
sahf
ret
mov
mov
cwtl
aam
lret
fnstenv
push
popf
mov
cmp
cmpsl
push
ret
pop
pop
out
daa
mov
pop
fidivl
enter
rcll
int3
arpl
push
outsl
push
inc
jns
or
test
pop
imull
call
inc
dec
jmp
popa
fisttpll
fnsave
in
jnp
call
arpl
mov
in
jg
or
add
cmp
bound
lahf
mov
aam
xchg
shll
add
pop
out
ljmp
lret
mov
mov
push
lods
cs
jl
pusha
jb
push
out
out
xchg
gs
push
cmpsl
sbb
pop
lahf
sub
shrb
sub
pop
hlt
enter
pop
addr16
insl
push
call
mov
inc
mov
lods
add
mov
sub
fbstp
xlat
aad
leave
push
ret
pop
jmp
sbb
lea
les
call
das
pusha
dec
jecxz
stos
sbbl
push
fwait
xchg
sub
fs
sahf
push
mov
pop
mov
cmp
imul
pop
out
stc
nop
and
mov
cmpsl
or
pop
lahf
cmp
outsb
pop
xchg
inc
fmulp
outsl
mov
call
add
testl
ljmp
ljmp
into
mov
sti
xchg
inc
ss
jns
movsb
test
xor
into
popa
sub
clc
sbb
xchg
popf
mov
lds
ret
repz
sub
mov
mov
daa
sub
xchg
ss
sbb
mov
repnz
cs
ds
xor
lock
add
pop
popf
xor
pop
and
jle,pt
pop
icebp
push
mov
sbb
lahf
pop
xchg
lcall
xor
pushf
inc
pop
js
jg
jbe
cmc
stc
mov
xchg
ljmp
add
jns
aam
sbb
xchg
mov
pop
or
add
dec
rcrl
add
nop
js
or
pop
inc
fdivrl
std
xchg
pop
ljmp
and
dec
loopne
push
clc
popl
fs
scas
cmpl
push
cmc
mov
out
pusha
imull
call
push
out
or
mov
mov
mov
pop
enter
add
xchg
sub
pop
out
xchg
lds
mov
sti
inc
iret
data16
sub
jmp
stc
nop
sub
int3
arpl
mov
mov
xchg
gs
test
xchg
test
jae
push
call
arpl
sbbl
arpl
jbe
scas
xchg
sub
cwtl
sbbl
lcall
pusha
mov
les
dec
sti
xchg
jp
pop
repnz
or
sbbb
cwtl
das
and
inc
fildl
jae
leave
jne
addr16
movsl
cmp
xchg
jns
or
or
stos
aas
fnstenv
fdivrl
sub
dec
jecxz
lods
sbb
cltd
cmc
cltd
daa
mov
ja
xor
xor
xor
push
mov
cld
push
dec
push
call
or
xchg
aas
into
cltd
xor
push
xchg
sub
stos
inc
stc
je
shlb
fstl
xor
mov
test
jle
or
inc
cli
push
addr16
pop
shll
push
sbbb
test
lods
inc
pusha
das
test
add
aaa
sub
test
in
test
lods
icebp
mov
fcoms
scas
or
aas
aas
rolb
add
mov
enter
jno
arpl
and
push
out
mov
mov
fwait
xor
popf
std
xchg
iret
repz
mov
adc
ljmp
ret
ficoms
lsl
mov
cld
ja
sub
mov
lods
insb
and
pop
sub
push
pop
mov
into
in
dec
sbb
inc
sub
mov
cmp
and
mov
stos
xchg
sbb
enter
sub
cmp
shrb
das
add
mov
mov
inc
sub
push
lods
adc
sbbl
aad
fadds
lds
cmc
inc
rclb
test
cmpsb
sub
mov
and
mov
pop
rcrl
shrl
paddq
xchg
xor
add
pop
popf
cmp
sub
adc
lahf
insb
inc
fstpl
pop
push
out
sbb
jp
jle
or
sub
repz
mov
fs
fcomps
clc
xor
jmp
sbb
pop
xchg
insl
je
pop
repz
movsl
test
mov
inc
xchg
cmp
les
dec
in
sti
fdivl
xor
gs
cmp
adc
nop
adc
or
sahf
sarb
inc
rol
inc
fdivp
adc
mov
cmpsb
call
sbb
sub
sub
xor
pop
inc
mov
aam
cmp
sti
inc
mov
mov
cmpsl
test
pop
imul
das
cmp
jno
fwait
xor
clc
mov
sbb
pop
lock
fisubs
xor
xlat
scas
inc
or
pop
idivb
fnstenv
jge
outsl
imull
out
jb
mov
mov
mov
xor
and
push
jmp
jo
adc
pop
mov
pop
daa
dec
out
pop
xchg
sub
es
pop
dec
cs
out
push
shrl
scas
sahf
xor
cmp
loop
mov
jecxz
je
data16
xchg
cwtl
fs
or
xchg
xchg
sub
jae
pop
test
enter
xchg
loopne
xchg
jae
sbbl
xorl
mov
push
ja
mov
or
test
adc
xchg
loop
jae
add
movsb
xchg
xor
movsb
push
aaa
into
test
popa
clc
jne
jge
lods
std
popa
clc
cs
fwait
xor
push
jg
pop
pop
mov
cmc
xchg
mov
scas
pop
aas
xchg
mov
in
cvtdq2ps
fcomps
les
insb
cwtl
mov
mov
fiadds
dec
fs
sti
inc
pop
adc
scas
lret
add
or
xor
stc
cmp
insl
sti
daa
movsb
cld
test
loop
dec
gs
fisubrl
popa
push
mov
aaa
jge
movsb
fsts
ret
mov
mov
pop
xchg
dec
fstpt
in
aas
xlat
jne
mov
sub
bound
push
jge
in
movsb
xor
mov
add
scas
movsl
jmp
cltd
xchg
dec
mov
add
cmp
rorb
in
test
mov
das
cmpsl
nop
mov
popf
xor
sub
ds
mov
mov
mov
inc
sub
repz
insb
sub
xchg
add
int3
mov
aam
push
es
out
push
and
ja
sbb
pusha
inc
mov
adc
mov
outsl
xchg
cmp
cmpsl
call
in
cmp
stos
xchg
sub
sub
inc
sbb
in
cmc
push
lock
movsl
hlt
ljmp
dec
test
sub
repz
lods
xor
push
xchg
jle
xchg
in
sbb
arpl
cmp
cmp
cmpsb
add
nop
test
fiaddl
dec
adc
jbe
fadds
cmp
or
push
cmp
popa
mov
mov
insl
test
mov
dec
repz
mov
mov
mov
stos
lcall
cld
jmp
movsb
imul
std
pop
or
add
fbld
mov
enter
cmpsb
lock
stc
cld
xor
rorb
or
xchg
and
lea
mov
sub
lds
flds
bound
dec
movsl
push
cwtl
xor
push
enter
cmp
mov
out
add
xchg
js
test
mov
stos
hlt
pop
jmp
std
add
repnz
negl
jmp
push
imull
inc
enter
inc
adc
adc
push
int3
icebp
loope
adc
dec
mov
imul
cmc
repz
cmp
popa
inc
shlb
mov
std
sbb
ret
sarb
mov
jo
xlat
add
push
add
int3
cltd
xor
cs
stos
xchg
cmp
andl
xlat
leave
push
lds
cmpsl
adc
dec
in
pop
ret
push
test
pop
mov
cmpsl
out
mov
jne
sbb
jmp
ja
sbb
fs
pop
inc
mov
fstp
sarl
adc
repnz
add
mov
aad
or
push
test
xchg
adc
into
or
cmp
ljmp
pop
ds
sub
cmpsb
lahf
xor
subl
pop
fwait
icebp
bound
mov
xchg
das
sub
jbe
roll
push
call
or
aam
push
fstpt
imul
insb
push
out
cwtl
xor
aaa
movsb
lods
das
sti
push
pop
mov
jnp
xchg
jo
pxor
pmulhuw
ja
jl
rcll
xor
aaa
test
popa
icebp
mov
mov
jbe
notl
adc
mov
dec
out
push
add
mov
stos
dec
lds
jmp
xchg
jmp
not
test
add
lods
out
clc
int3
ja
sub
inc
cmp
inc
fists
push
and
push
pushf
test
jg
into
mov
sub
test
icebp
add
or
push
push
sbb
jb
push
mov
and
fwait
les
loop
mov
cmp
adcb
sarb
pop
pop
or
cs
sub
roll
xor
pop
sti
inc
cli
push
std
aaa
dec
sub
inc
divb
add
sti
xchg
lcall
sti
test
stc
cmp
stos
fsubs
push
cmpsl
insl
xchg
dec
cli
and
imul
xor
rolb
lock
fcoml
in
ljmp
pop
lahf
dec
je
push
pop
jecxz
push
jnp
and
sub
xchg
lods
push
and
jbe
or
mov
sbb
jmp
mov
and
add
leave
jne
mov
out
dec
cmp
out
mov
push
adc
ss
jbe
popf
xchg
in
dec
test
push
je
mov
ds
hlt
insb
std
int3
mov
pop
sub
sub
mov
xchg
mov
xor
adc
aam
inc
jae
in
ss
xchg
jge
cmp
in
loop
mov
popa
xor
inc
les
pop
sub
shlb
test
cmpsl
push
std
ljmp
test
adc
cmpb
dec
xor
mov
and
int
fs
mov
mov
out
jg
fiaddl
sbb
repnz
sbb
adc
cmp
and
add
loop
daa
cmc
or
clc
out
dec
cmp
xor
or
xlat
cmp
cmp
inc
out
and
sub
out
notl
mov
inc
mov
jbe
lret
jns
lcall
test
xchg
xchg
fidivl
cmp
enter
push
in
addl
or
mov
ret
repz
inc
fdivl
cmp
inc
cwtl
arpl
iret
arpl
lcall
daa
mov
cmp
pop
stos
pop
lods
mov
ret
add
xor
ljmp
pop
cld
sbb
mov
sub
test
push
jmp
mov
fwait
pop
pop
int3
pop
fistps
cmp
fstpt
jmp
jl
or
hlt
cs
mov
mov
testb
jge
out
stc
or
cmp
fcmovne
mov
dec
daa
aaa
fcmovu
pop
xchg
stos
pushf
add
mov
sbb
jp
mov
mov
sub
jmp
push
mov
mov
leave
jmp
inc
mov
enter
pop
aas
test
pop
pusha
jmp
push
cmp
cmp
rcrb
lret
or
imul
test
subb
push
cli
mov
add
mov
or
xchg
addl
lods
pop
clc
jae
or
cmpl
pop
fstpl
and
int
ss
add
jl
sub
and
cmp
cmp
dec
add
and
inc
std
mov
pop
sbb
xor
inc
popf
add
stos
inc
imul
insl
aad
sub
or
mov
push
in
pusha
jle
sbbl
cmp
sub
ja
mov
push
cli
ja
outsl
pop
jge
ds
lds
pop
into
dec
or
popf
cmp
pop
mov
fnstcw
add
mov
cltd
or
fsubl
inc
sbb
mov
cltd
dec
jmp
loopne
inc
cmp
jns
dec
leave
xor
xchg
negl
dec
loope
ljmp
sbb
jae
jmp
stc
nop
sahf
cmp
xchg
outsb
mov
sbb
int
loope
rclb
fs
jmp
xor
std
mov
or
push
pop
scas
dec
or
xchg
cmp
int3
mov
ret
repz
cmp
fists
or
ds
es
js
test
xchg
sub
push
cli
mov
sub
jmp
insb
in
add
mov
or
cmp
test
mov
pusha
neg
cld
dec
in
jle
xor
mov
xchg
push
js
mov
fstps
shll
in
cld
adc
and
or
cs
sub
arpl
in
subl
push
ret
cld
jb
xor
das
mov
ret
dec
in
cmpsl
dec
loopne
add
stc
addr16
cmp
adcl
call
jae
push
push
fstpl
mov
scas
inc
mov
adcl
insb
aas
pop
sahf
popa
sahf
jge
mov
add
in
add
mov
int
int3
arpl
out
cli
xchg
and
sbb
ret
int
jecxz
cmp
sbb
inc
fldt
jb
push
stc
mov
faddl
inc
adc
sahf
xor
cmpl
cmp
lock
pop
pop
mov
cmp
push
push
mov
mov
cmc
fstpt
repnz
jecxz
inc
mov
add
cmpsb
lcall
fs
mov
out
xchg
imul
or
push
repz
gs
fstl
mov
sti
call
or
sbb
pop
mov
cmp
mov
push
mov
fidivs
rcr
jne
push
cld
xchg
mov
xchg
push
stos
sbb
test
cmp
sub
dec
push
in
jg
push
out
dec
mov
jne
mov
ret
hlt
inc
mov
js
mov
inc
cltd
into
gs
push
in
sbbl
out
test
aas
or
inc
xchg
sub
mov
lds
divb
js
dec
xchg
mov
fcmovb
pop
or
shrl
sub
loope
cs
test
xchg
hlt
cmc
mov
call
pop
mov
sti
jge
in
in
mov
addb
stc
adc
sbb
mov
mov
popa
pop
fidivl
lret
inc
mov
jg
jb
fisubs
push
mov
dec
fs
dec
test
jle
sbb
pop
movsb
or
jbe
pushf
xor
leave
dec
loope
xor
imul
push
out
jmp
dec
jnp
xor
jb
shrb
xchg
push
lods
add
call
xchg
xchg
push
sti
xchg
inc
mov
or
cmp
sbb
dec
pop
shrb
push
sbb
arpl
sbbl
divb
iret
data16
jae
mov
cltd
xor
jmp
sbb
aaa
into
je
pop
hlt
scas
xor
fs
xor
adc
shrl
adc
out
xchg
sub
sub
movsb
bound
out
push
xor
int3
push
mov
dec
push
push
out
test
inc
fdivrs
push
jmp
push
jne
cwtl
push
test
xchg
pop
stc
sbb
add
pop
out
push
push
xchg
inc
pop
lock
in
mov
incb
leavew
pusha
pop
jl
mov
imul
in
mov
mov
push
cmpsb
cmp
inc
mov
jp
pop
push
out
inc
push
popf
xor
push
movsb
cmp
popa
clc
subl
pop
dec
jl
popf
insl
push
push
lods
lea
aad
dec
and
cltd
xchg
push
pop
sahf
dec
mov
int
push
in
test
sbb
inc
push
fbstp
pop
and
pop
and
gs
xor
pop
adc
mov
inc
fstl
mov
int
push
xchg
sub
repnz
adc
nop
daa
dec
mov
mov
insb
xchg
sub
fdivl
jg
push
jno
or
add
cmp
xchg
mov
fidivl
mov
stos
inc
cmp
ss
pop
loopne
dec
pushf
and
call
mov
fwait
xchg
pop
inc
fmull
test
sbb
lods
icebp
call
mov
loopne
inc
rol
pop
sahf
std
repz
das
in
or
js
and
jl
mov
sub
cmpsl
popf
cmc
pop
imulb
mov
or
pop
inc
cli
stos
inc
xor
mov
lahf
js
and
add
xchg
mov
pop
std
imul
sbb
mov
and
pusha
daa
mov
xor
push
add
xchg
lods
imul
test
jl
in
insl
jle
lcall
and
xchg
sbb
iret
inc
mov
insb
es
std
push
dec
jbe
cmp
mov
cmc
mov
pusha
dec
jecxz
orl
std
test
dec
in
cmpsb
sbb
sbb
push
jmp
mov
pushf
xor
jne
push
lea
icebp
stc
loop
aaa
into
inc
add
xorb
mov
xchg
sub
or
repz
sub
xor
testl
inc
insl
sbb
andnps
and
push
mov
xchg
sti
in
add
sbb
insl
jmp
mov
push
lret
inc
sbbb
imul
inc
sub
pop
push
addr16
jmp
hlt
jp
and
push
in
imul
icebp
mov
lcall
iret
xchg
insb
je
lcall
std
inc
rclb
test
bound
das
pop
imul
outsb
mov
dec
filds
mov
mov
pop
jg
jnp
stc
and
inc
or
add
inc
dec
mov
and
pop
sbbb
outsl
push
push
mov
pop
repz
sbb
dec
repnz
lea
xchg
enter
es
xchg
dec
dec
and
insb
add
jnp
dec
cmpb
sti
adc
lds
or
stos
aas
lahf
ss
int3
call
adc
rcl
fs
div
add
int
mov
jbe
xor
xchg
xchg
cmp
push
pop
sub
lcall
stc
sub
dec
outsl
push
inc
push
mov
insl
push
sub
inc
push
je
shlb
jecxz
xchg
sar
cli
xchg
add
sub
mov
xchg
sub
mov
mov
pop
dec
jecxz
shll
pop
in
cli
aad
and
call
or
xchg
jl
hlt
mov
popf
jmp
cltd
mov
pusha
call
sub
ds
popf
pop
mov
mov
ljmp
sar
cmp
in
js
adc
sub
gs
movsb
cmp
xor
cwtl
movsb
sahf
and
mov
mov
push
xlat
imul
or
movsl
cmp
stos
cwtl
das
mov
pop
repnz
push
mov
and
outsb
mov
lahf
ss
xor
cmp
outsb
mov
fisttpl
mov
xchg
sbbb
and
mov
and
gs
xchg
push
movsl
add
xchg
sub
and
loop
sub
mov
push
dec
push
ljmp
ret
cmp
out
mov
jne
and
cmc
push
in
addl
es
sbb
and
scas
lret
repnz
xchg
sub
fwait
push
imul
xchg
hlt
imul
cmp
cmpsl
addr16
movsl
cmp
adc
dec
lcall
and
fnsave
mov
repz
pushf
pop
lock
push
jecxz
mov
xchg
sub
daa
inc
fsubrs
jnp
in
add
jle
data16
negb
mov
loopne
pushf
xor
les
mov
fsubrs
js
enter
outsb
jmp
lds
rcrl
xchg
add
mov
subl
ja
lods
xor
adc
inc
in
test
sbbl
xchg
int3
in
rclb
out
es
icebp
add
in
xchg
int
push
adc
or
mov
mov
pop
mov
adc
lds
fnstcw
ror
xchg
notb
movsb
sbb
push
inc
in
push
cltd
push
in
or
or
pop
sar
dec
xchg
pop
sbb
dec
cmp
mov
inc
lds
push
push
std
mov
loopne
fldcw
pmaddwd
clc
push
in
ljmp
dec
leave
jg
fstps
popa
clc
cmp
cmp
xlat
mov
call
test
pop
movsb
push
mov
adc
jecxz
dec
xchg
insl
fildl
and
js
xlat
les
ret
xchg
sbb
cmpsl
aaa
daa
add
cmp
out
fcomip
xchg
adc
xlat
outsb
push
push
inc
xchg
std
and
dec
inc
pop
inc
ret
inc
fstpt
popf
daa
mov
fucomip
insl
push
in
jmp
add
or
fidivrs
and
sub
insl
pop
mov
shlb
mov
andb
push
cmp
or
add
roll
inc
aaa
dec
int
mov
shrl
outsl
movsb
adc
pushf
lret
aaa
imul
imul
fwait
movl
test
mov
xlat
js
lcall
mulb
dec
mov
cmp
cmpsb
andb
cmpsb
pop
stc
sbb
in
hlt
pop
shl
xchg
gs
pop
mov
cmp
and
push
addr16
mov
sarb
loopne
out
adc
or
add
jne
gs
xchg
sub
fnstenv
fdivrs
fistps
and
fldl
xor
sub
push
int3
sbb
inc
cmp
scas
push
dec
insb
ds
pop
scas
jo
pop
pop
scas
push
inc
addr16
jae
in
inc
dec
mov
push
push
outsl
xchg
outsb
pop
add
mov
push
add
jb
jb
scas
xchg
insl
add
iret
nop
daa
add
mov
sbb
scas
inc
push
cmp
arpl
leave
ljmp
sbb
add
mov
roll
xlat
aas
or
sti
inc
sub
pop
data16
jnp
adc
into
cltd
xor
or
mov
push
pusha
fnsave
aad
cmpsb
mov
xchg
in
repz
push
sbb
dec
pop
cmp
mov
popf
stos
push
inc
xchg
inc
push
cwtl
jae
out
mov
pusha
test
ja
jo
push
popl
fisubs
or
jg
out
push
push
nop
fdivl
outsl
daa
add
mov
scas
inc
push
popf
ja
mov
decl
add
sbb
cwtl
or
mov
xchg
add
rcrl
adc
xor
mov
cmpsb
fmulp
lret
push
jp
inc
mov
mov
arpl
and
jo
sub
sbbl
or
stc
shll
mov
dec
and
insl
push
jmp
cmpsb
mov
adcb
adc
ss
lods
inc
xchg
insl
mov
ljmp
cmpl
data16
loope
ss
add
xor
push
in
cmp
test
mov
xchg
sub
stc
lahf
sub
mov
testb
repnz
ds
into
push
pusha
jge
xchg
aaa
push
in
push
mov
mov
ficoml
test
pop
xsha1
cmpsb
mov
xor
int
fdivrs
xor
stc
popa
clc
sub
pop
repnz
jge
aam
mov
aad
mov
loopne
and
jae
or
jo
sub
pop
fwait
ja
int
push
ljmp
xchg
sub
inc
push
in
jno
mov
fstpt
fnstcw
mov
sbb
mov
mov
pushf
leave
dec
in
sub
mov
push
outsl
and
or
jecxz
inc
pop
push
jge
icebp
sbb
push
inc
pcmpeqw
pop
inc
mov
sub
stc
popa
add
lods
mov
add
sub
arpl
push
popa
add
sbb
lea
or
and
loop
dec
xchg
dec
mov
shlb
orl
mov
jb
mov
mov
mov
aaa
loop
iret
sub
push
xor
lcall
loope
lea
add
sbb
and
push
stc
cs
mov
sub
lcall
pop
and
cli
push
xor
mov
xor
pop
adc
ret
aam
es
add
jge
imul
jge
loop
push
inc
out
inc
push
call
cmp
in
cmp
test
shrb
pop
cs
cli
in
rcr
xor
stos
inc
addr16
fs
test
test
orb
or
jg
sub
into
roll
in
add
push
and
lods
mov
mov
fcompl
nopl
adc
stos
mov
mov
lret
fnstenv
inc
push
ljmp
jb
enter
call
xor
dec
cmp
push
outsb
insl
pop
negb
mov
cli
xchg
adc
sahf
xor
data16
cwtl
xchg
clc
dec
sub
cmp
imul
outsl
push
or
outsb
jle
movsb
cmp
mov
mov
adc
jge
pop
dec
jge
or
cmp
ljmp
pushf
insb
add
test
scas
int3
dec
add
mov
popf
into
pop
add
dec
add
dec
jnp
lret
cmp
test
xchg
jb
rcrb
push
pop
rcll
pushf
sub
int3
inc
mov
sbbl
mov
test
lret
xchg
sbb
xchg
lea
push
inc
push
cltd
xor
lock
rorl
or
pop
scas
inc
push
adc
test
mov
dec
fnsave
xchg
sub
pop
push
jmp
mov
jecxz
or
ja
cmc
push
out
ret
ja
in
mov
xchg
xchg
in
out
shrb
xchg
decl
push
cmp
insl
das
data16
cmp
adc
mov
int3
stos
fisubl
inc
inc
aad
in
ljmp
out
sub
gs
xor
lcall
orb
xor
push
outsb
cltd
jne
ds
aaa
jge
xchg
repnz
mov
das
pmullw
xor
shlb
int3
aaa
cmpl
xor
pop
inc
pop
xor
push
inc
add
rcll
lds
dec
loope
jno
lds
call
jmp
pop
out
and
xor
dec
inc
or
roll
jle
inc
fnstsw
pop
jns
stc
nop
xchg
lcall
or
pop
imul
sub
fstpt
push
movsl
inc
fwait
aas
or
insl
add
and
mov
sbb
stos
inc
aas
xor
loope
shrb
ljmp
js
mov
testl
pop
iret
gs
rcl
das
enter
sbb
jb
pop
jnp
mov
jl
mov
andl
push
dec
sbb
sub
mov
adc
push
loopne
lret
sub
sub
test
mov
imulb
sbb
data16
sub
cmp
mov
into
pop
and
iret
pop
pusha
mull
sti
xchg
movl
data16
lahf
fsubrs
ljmp
int3
fwait
add
aas
add
pop
hlt
test
jns
xchg
leave
pop
sahf
fdivs
adcb
inc
test
pop
stc
nop
xor
xchg
pop
and
jge
sub
xchg
jle
iret
data16
imul
fwait
dec
rcrl
mov
pop
mov
pop
jp
mov
inc
sub
inc
sub
dec
jge
inc
pop
or
dec
pop
xchg
cs
pop
lds
mov
sahf
mov
jp
push
adc
into
call
push
adc
xor
and
xchg
sub
rol
mov
mov
decl
lods
addr16
rcrb
data16
les
scas
lret
jb
ror
dec
lret
fs
loope
or
jmp
sbbb
or
insl
stos
rcl
das
call
scas
enter
test
mov
cli
jecxz
les
sub
iret
push
sbb
dec
or
lahf
mov
rorl
mov
cmp
ljmp
sbb
enter
pushf
pop
jb
adc
push
in
push
mov
shl
pop
out
addb
xor
lods
rclb
js
mov
xchg
enter
lahf
ss
aad
cltd
adc
test
xchg
cmp
push
fbstp
mov
cld
jl
iret
outsb
dec
jmp
cmp
prefetch
in
ljmp
sub
jns
jbe
aam
aaa
pop
xchg
ljmp
cmc
xchg
movsl
sub
or
jge
cwtl
mov
outsb
insb
pop
outsb
add
inc
xor
and
cli
xchg
popf
fdivl
loope
jge
test
sarl
lea
mov
jns
lock
jo
pop
inc
push
cmpsb
insl
fadd
sub
push
mov
and
xchg
sub
or
imul
inc
icebp
and
mov
test
or
inc
testb
add
jae
inc
xchg
lds
sub
jmp
adc
inc
sbb
aas
aaa
pop
stos
push
pop
xchg
mov
cmpsb
mov
dec
out
mov
cmpsl
add
inc
xchg
pop
shlb
in
fnstenv
hlt
inc
loopne
fwait
fwait
and
dec
jl
addb
xchg
lods
xchg
sub
pop
sbb
inc
mov
outsb
and
cmp
popa
dec
stc
add
mov
divl
repz
push
xchg
or
repnz
sub
cmp
pop
xchg
xchg
call
push
mov
dec
push
sbb
xchg
mov
cmpsl
sub
mov
lcall
dec
loope
push
cmp
pop
repz
ret
and
ret
sahf
push
sbb
repnz
jnp
xor
mov
mov
ret
movsb
dec
cli
les
out
xchg
in
jns
jmp
or
mov
xor
push
inc
push
add
push
insl
popa
fnstsw
js
push
inc
cltd
loop
stos
jle
fmuls
or
pop
stos
neg
jbe
mov
xchg
stos
repnz
mov
out
in
xchg
loope
mov
leave
xchg
push
and
js
stc
insb
ja
mov
mov
idivl
in
xchg
push
fildll
cmp
stos
push
in
xchg
xor
or
pusha
cmp
fisubrs
stos
rcrl
add
divl
fisttps
in
adc
dec
jecxz
adc
das
mov
repz
jb
pop
jle
sbb
gs
icebp
push
inc
aam
inc
cmp
mov
or
xchg
cltd
nop
mov
xchg
or
and
jmp
cmp
in
cmp
out
inc
pop
pop
mov
jle
cmc
pop
std
test
pop
pop
mov
fimull
xchg
fistpl
xchg
fsubrs
pop
mov
xchg
daa
pop
repnz
mov
jg
fs
ja
fiaddl
xchg
sub
cmp
dec
and
mov
nop
shlb
pop
fs
hlt
adc
outsl
pop
imul
xor
pop
hlt
xchg
sbbb
dec
lcall
sub
fsubrl
in
addr16
inc
pop
lret
pop
adc
lcall
inc
lret
aam
dec
xchg
pop
imul
pop
ds
out
and
mov
mov
push
sbb
leave
pop
sub
fsubl
push
outsl
adc
add
mov
das
aas
push
xor
das
xlat
cmpsb
xor
mov
mov
xchg
pop
jne
cmpsl
jg
mov
clc
and
dec
dec
mov
out
pop
dec
loope
psubusw
stos
bound
loop
shll
stos
sub
testb
mov
pushf
jge
loope
shl
mov
or
test
jecxz
scas
push
sbbl
imul
addr16
mov
xor
popf
jo
iret
pop
or
shlb
xlat
inc
aad
int
mov
mov
push
and
into
mov
xor
lods
pop
test
scas
jne
movsb
mov
sbbl
mov
bound
push
leave
data16
cli
push
push
jnp
addr16
jg
js
or
sbb
mov
aas
rclb
mov
lcall
pop
jp
xchg
cmp
imul
ficompl
pop
ficomps
stos
in
int3
arpl
adc
jne
jmp
fmul
or
add
mov
mov
or
outsb
xchg
pop
scas
mov
in
out
cmpsb
push
xor
enter
cmp
lds
sub
dec
lcall
lods
mov
mov
cli
sub
test
mov
sbb
inc
mov
enter
and
scas
shr
xor
fdivr
xchg
xchg
bound
sbb
es
jle
inc
in
mov
ljmp
fimuls
sub
movsl
cmp
andl
aad
and
cmp
rclb
pusha
adc
and
test
cmp
push
cmp
pop
pop
cmp
inc
add
xor
das
mov
dec
loope
add
out
xchg
mov
mov
and
lcall
in
gs
in
push
ret
mov
pusha
out
add
jns
cld
pop
sbb
clc
sti
xchg
sub
sub
in
movsb
jb
loopne
jno
xlat
pushl
push
out
add
scas
or
adc
jg
dec
or
and
out
xchg
cmpsb
dec
jl
add
adcl
sub
cld
cmpsb
lea
mov
xor
stc
jno
xor
or
stos
xchg
sub
jg
jp
cmp
dec
scas
adc
js
or
cmp
mov
jg
cmpl
adc
icebp
xchg
fcmove
sbb
mov
in
out
mov
mov
fisttps
inc
fstpt
loope
add
xchg
adc
into
repnz
das
adc
outsb
loopne
mov
rol
imul
ss
xchg
push
push
mov
and
enter
data16
popf
mov
dec
push
shlb
mov
mov
fiaddl
arpl
clc
mov
pop
lahf
add
aam
mulb
in
push
leave
les
ds
xchg
shr
ror
xor
lret
test
dec
icebp
mov
lds
pushf
lahf
out
pop
xchg
enter
cltd
inc
loopne
jae
leave
and
pop
ret
pop
mov
in
call
in
xlat
or
das
sahf
sarl
mul
stc
mov
ficoms
mov
adc
cltd
lds
js
or
cwtl
and
xor
xor
xchg
mov
mov
fimuls
fdivl
outsl
push
xor
mov
je,pn
in
das
leave
daa
enter
lret
bound
mov
and
out
int3
loopne
adc
xchg
add
ss
js
icebp
out
dec
pop
push
xchg
enter
data16
fwait
stos
std
ret
in
cwtl
lods
shlb
fdivr
stc
jmp
fisttpl
divb
sbb
popf
hlt
push
cli
adc
sub
lahf
icebp
mov
call
fs
sub
jmp
test
loope
aas
dec
or
out
lods
shlb
adc
js
stos
inc
inc
cltd
test
imul
mov
add
sarb
mov
add
adc
mov
dec
mov
adc
insb
scas
sbb
mov
push
out
clc
jno
sub
outsl
pop
sahf
aas
and
mov
mov
push
imul
dec
mov
push
pop
ret
imul
adc
adc
fwait
adc
dec
dec
mov
scas
inc
inc
imul
arpl
stos
in
test
or
out
mov
nop
testl
adc
fdivr
les
lds
mov
pop
sub
mov
inc
xor
mov
jbe
jb
dec
jne
loope
inc
pushf
jecxz
cmpsl
xor
jle
mov
leave
jne
mov
ljmp
cmp
inc
frstor
test
mov
inc
rorb
inc
mov
add
dec
stos
jno
jb
xor
mov
xchg
xor
call
sbb
inc
test
add
stos
insb
jb
subl
push
sbb
xlat
adc
movsl
sarb
mov
fiadds
or
cmpsb
mov
mov
cwtl
loope
xchg
ja
int
or
push
in
adc
stos
adc
test
cmp
test
stc
jb
int3
mov
pop
sub
mov
icebp
inc
push
jmp
cmpb
fstpt
xchg
imul
fadd
pop
ret
sub
jp
into
xlat
stos
aaa
out
pop
bound
push
subb
jo
sbb
cmp
sahf
out
mov
xchg
shrb
or
in
push
pop
sbb
gs
xchg
and
push
lods
push
inc
sbb
sahf
lahf
aas
icebp
fxch
cmpl
inc
inc
ret
sub
subl
push
inc
mov
and
addl
loopne
sbb
push
push
push
xchg
lret
lgs
das
pop
mov
mov
jae
xor
sbb
push
jb
data16
push
xchg
fidivl
jg
lods
outsb
fmull
es
shlb
daa
pop
ds
negl
lcall
mov
test
add
pop
sti
cmpb
dec
jb
lcall
push
paddusw
gs
mov
jo
xchg
dec
push
mov
in
xchg
pop
movsl
es
loop
addb
test
sar
clc
jae
jge
cmp
std
xchg
test
add
xchg
inc
call
and
mov
lods
xor
ffreep
repnz
rclb
sub
in
mov
sub
bound
cmpb
or
fsubrs
push
mov
fstpt
lods
cld
and
into
aad
in
push
hlt
sub
xchg
daa
loop
cwtl
das
jne
scas
mov
inc
fdivrl
xlat
add
test
mov
scas
jmp
std
sbb
lods
sub
mov
es
in
inc
jle
arpl
inc
dec
jbe
xlat
pop
pop
jnp
push
loope
dec
jae
test
add
fcmovnb
add
ret
insb
xchg
lock
sbb
repz
xor
les
test
pusha
repnz
in
enter
jecxz
jle
stc
and
push
jle
push
ficoms
loopne
pop
mov
xchg
je
pushf
and
mov
loopne
movsb
fistl
inc
dec
add
jnp
leave
cmp
inc
ficomps
test
outsb
jecxz
shrl
cld
cmp
cmp
lea
rorl
mov
fsubrs
in
out
cli
mov
inc
iret
adc
jge
xor
das
fbld
push
in
xchg
dec
in
adc
mov
cmp
jne
push
lret
subl
lods
test
cld
and
testb
out
lahf
mov
xor
add
push
push
call
push
ljmp
push
and
ret
std
pop
add
jmp
dec
push
sub
inc
cmp
imul
std
in
push
aas
pop
sub
cli
mov
rclb
sbb
mov
sub
ds
xchg
sarb
cwtl
mov
cmpsb
inc
xchg
pop
test
sub
adc
mov
xchg
xor
add
aad
pop
jg
arpl
outsl
loop
xchg
dec
or
ja
fimuls
fiaddl
adc
sarl
xchg
xor
push
sbb
fsubp
hlt
cmp
leave
or
mov
es
sbb
ret
test
lods
mov
xor
test
mov
mov
enter
fcomip
test
adc
es
xor
mov
or
mov
daa
mov
fdivl
sub
xor
popf
cmc
lcall
and
push
inc
scas
repnz
test
popf
add
and
xchg
pop
mov
in
insl
jne
cmc
xchg
cltd
and
mov
outsb
mov
cwtl
rclb
pop
xor
xor
fstl
sub
mov
popf
pop
fbld
jnp
jecxz
mov
mov
sub
dec
xchg
xchg
pop
stc
xor
lock
xchg
movsl
fwait
setg
lahf
sbb
sbb
cli
lods
mov
xchg
xchg
add
sub
or
adc
es
mov
jno
mov
push
cmpsb
rolb
inc
ss
and
fisttpl
scas
loopne
divb
shll
jge
inc
divl
out
cmc
mov
mov
push
cmp
iret
mov
sarl
cmpsl
pop
scas
push
add
dec
adc
lods
sbb
fldl
pop
dec
icebp
jle
sti
xchg
cmc
lahf
js
leave
adc
mov
sbb
pop
sub
sub
mov
cmpsl
lods
mov
cmp
mov
fbstp
push
cmp
add
nop
and
repnz
add
mov
cmc
mov
push
inc
push
fwait
dec
repz
sub
hlt
dec
clc
rorb
inc
pop
or
sbb
xor
mov
out
lret
ss
adc
aas
stos
mov
or
shrb
push
inc
jecxz
xor
push
mov
leave
into
lret
mov
push
popf
adc
mov
adcb
out
pop
test
pop
mov
xlat
lock
je
dec
int3
adc
cmp
sub
xchg
in
push
loope
je
mov
jb
pushf
aad
stc
cmp
fiadds
inc
lahf
dec
inc
fcoms
dec
jp
jecxz
mov
pop
jns
hlt
stos
cmp
fiaddl
push
fisubrs
sub
insb
mov
pusha
rcrl
dec
pop
sub
ret
enter
insb
sbb
out
add
sbb
hlt
or
addl
fs
jbe
cmp
repz
jecxz
sbb
xor
hlt
fwait
jecxz
sbb
push
dec
xchg
mov
fisttpl
scas
inc
and
mov
jne
andl
xchg
xor
xlat
stos
inc
adc
popf
gs
or
les
pop
pop
aad
xchg
sbb
stc
jb
sbb
aad
sbb
ret
and
aad
pushl
add
mov
shrb
dec
mov
xor
mov
sbb
popf
jmp
fcoml
fisubs
ljmp
sbb
out
xchg
sub
sub
hlt
push
cli
in
imul
or
int
add
loop
jmp
or
dec
fists
mov
mov
outsb
adc
arpl
imul
es
mov
mov
mov
mov
leave
ret
cmp
in
into
jmp
nop
fmull
mov
dec
xacquire
in
push
movsl
mov
push
je
mov
mov
mov
pop
aam
clc
inc
loope
iret
das
repnz
inc
pop
add
mov
dec
out
mov
cwtl
jg
jnp
fadds
adc
repnz
or
mov
aam
push
lret
push
pop
fcoms
andb
mov
mov
sbb
pop
repz
mov
xchg
and
std
or
cmp
syscall
pushf
jl
leave
pop
adc
sub
xlat
push
xchg
cmp
mov
inc
js
push
jmp
ljmp
int
push
out
in
ds
jg
in
sti
pop
out
ljmp
ret
mov
push
adc
add
out
jp
clc
or
cmpsb
dec
xchg
sub
adc
cmc
repz
clc
out
inc
push
in
incl
xchg
out
into
ret
pop
sarb
imul
jo
sbb
in
addl
jl
hlt
movsb
xor
repnz
push
call
ds
pop
stc
push
gs
negb
and
inc
lock
mov
xchg
inc
aad
fwait
in
sbbl
popf
xchg
in
sub
pushf
xor
push
xor
dec
enter
dec
jecxz
jl
dec
inc
into
sbb
imul
mov
divl
fmuls
sbb
inc
mov
adc
insb
lods
leave
pusha
and
mov
mov
stos
and
ret
jb
je
mov
cmp
call
jl
lods
dec
push
mov
inc
push
rclb
hlt
lods
dec
or
pop
int
mov
jl
repz
decb
std
addr16
fidivs
push
out
mov
les
xor
ret
pop
xchg
add
in
xor
push
je
mov
add
sbb
inc
fcoml
mov
mov
add
xchg
sub
inc
fsubrs
mul
jge
jl
cmp
lods
bound
insb
sbb
mov
rcrl
push
inc
nop
daa
ja
mov
call
stos
mov
xchg
sti
cmp
xchg
lods
imul
filds
dec
loopne
jbe
add
fbstp
clc
dec
in
sub
fwait
orl
add
call
add
aaa
fcompl
xchg
fsubrs
mov
cmp
shlb
fs
inc
fdivs
jl
loop
popa
add
dec
add
data16
add
xlat
stos
sub
pop
stos
je
fnstsw
sub
es
or
push
adc
mov
and
arpl
fmuls
pop
hlt
mov
inc
inc
pop
xor
mov
dec
push
lods
ds
insb
add
and
sbb
pop
push
in
inc
rclb
lods
xchg
jo
push
testb
insl
cmpsl
and
cmpsl
adc
and
in
out
ds
xchg
sub
clc
push
popf
sub
sahf
pop
mov
fsubp
inc
iret
sbb
iret
dec
lock
sbb
and
mov
cmpb
outsb
mov
loop
inc
js
in
arpl
sub
cmp
jp
add
or
push
call
pop
ljmp
xchg
jg
cmpsl
mov
arpl
jnp
push
jmp
or
xor
cltd
xor
xchg
call
or
mov
pop
test
cli
jp
sub
xor
xchg
and
jg
in
test
mov
pop
mov
add
gs
xchg
ficoms
in
mov
fbstp
cmc
loop
push
shll
mov
inc
aam
mov
mov
push
iret
in
and
pushf
jle
jecxz
adc
scas
jg
lods
mov
push
mov
pusha
test
int
or
lret
lret
sti
in
and
mov
stc
or
cld
or
sbb
rorb
pop
lock
jmp
mov
mov
dec
int
aas
xchg
enter
add
xlat
cltd
lock
mov
xor
cmp
xor
and
and
movsl
xlat
aas
cmp
and
stos
add
xchg
or
inc
aad
aaa
push
push
push
mov
js
mov
leave
pop
cli
jp
mov
aas
stc
fbld
dec
pushf
repz
insb
outsl
nop
movl
and
dec
and
fadds
mov
pop
bound
mov
or
cmp
movsl
mov
jne
sub
cmp
fidivs
pop
add
dec
xchg
shlb
sbbb
sbb
xor
mov
jnp
push
movsl
aam
dec
jecxz
inc
pop
out
cmp
push
add
inc
ret
icebp
xor
mov
loop
rorb
dec
cmp
leave
pusha
xor
mov
imul
popf
adc
cli
xchg
movsl
xor
fs
sbb
mov
push
in
xor
or
lret
ss
loopne
pop
mov
imull
imul
add
and
dec
jnp
repnz
shrl
push
jecxz
cmpsl
sub
lahf
aas
testl
cmpsl
sub
pop
cltd
xor
push
jne
ljmp
clc
xlat
mov
xlat
mov
dec
xor
pop
outsl
shlb
sahf
inc
sahf
push
xlat
mov
sti
mov
loop
inc
mov
rcrb
aas
popl
xor
outsl
popf
lods
jne
ss
call
fbstp
ljmp
aad
mov
sbb
mov
sti
call
or
mov
adc
lret
xor
push
das
mov
sub
push
cmp
push
xor
shlb
cmp
shll
cwtl
adc
flds
aaa
into
std
xchg
cmp
ret
jmp
das
dec
xchg
das
fstl
dec
cmp
jle
xor
sub
inc
fldt
fidivs
pop
jmp
fsubrs
or
jno
push
sub
es
das
scas
mov
inc
add
int
push
and
inc
jl
mov
sub
mov
jns
out
inc
ds
push
jg
enter
stos
inc
jno
lods
je
lea
ss
xchg
je
movsb
cmp
test
mov
dec
mov
mov
icebp
inc
lods
jmp
leave
push
mov
jecxz
cmpsb
mov
inc
fstp
sub
jmp
mov
testb
sbb
xor
cmp
stos
push
mov
mov
sbb
pop
cmc
or
sub
and
hlt
or
adc
pop
leave
inc
test
mov
pusha
lods
lahf
xchg
sub
into
xchg
and
push
and
lods
pop
icebp
fnstenv
call
cmpsb
push
mov
add
mov
push
xchg
jo
dec
in
xchg
dec
jecxz
and
test
sahf
push
out
mov
jmp
sbb
jg
inc
adc
jmp
addr16
or
popa
clc
aas
pushf
xor
jb,pn
loopne
push
or
xchg
cmpsb
es
push
cmp
sbb
rcl
imul
lock
roll
xor
lahf
repnz
mov
fstps
call
or
mov
fmuls
mov
shr
adc
loop
or
lock
mov
icebp
xchg
sub
loope
ljmp
inc
xchg
aaa
jle
nop
mov
inc
add
daa
xchg
sub
cmp
clc
pop
stc
data16
sarb
inc
icebp
sbb
xor
addr16
mov
shll
mov
push
loope
in
lret
add
mov
fsubl
lret
fnsave
sub
das
mov
fndisi(8087
js
pop
pop
lock
mov
mov
divb
lock
cli
xchg
mov
sbb
adc
xor
out
xchg
jge
sub
or
xchg
push
arpl
cwtl
inc
js
pop
stos
addr16
mov
lret
cld
xchg
rcrb
imulb
test
inc
icebp
mov
pop
idivb
push
adc
fldenv
mov
jle
dec
fildll
dec
cmp
push
adc
lods
ja
adc
and
sahf
push
inc
fldenv
xor
shrl
cli
xchg
jle
sub
and
inc
sub
arpl
testb
mov
daa
mov
int
push
jmp
shrb
mov
loope
jg
stos
data16
clc
xlat
lcall
add
jns
fstps
sub
jmp
fs
loope
shll
xor
pop
mov
aaa
into
sbbb
cmc
lret
testl
movsb
mov
nop
add
stc
nop
aad
insb
add
inc
fadd
cltd
add
mov
ficomps
mov
pop
test
addr16
adc
ss
test
xchg
data16
sbb
ds
mov
je
cmpsb
inc
pop
adc
mov
shlb
and
ds
testl
ds
cmp
imul
cld
mov
fildl
mov
xchg
cld
stc
sub
sub
mov
cmp
fnstenv
rolb
add
ret
pop
outsb
fwait
pop
sahf
int3
cltd
xor
in
and
dec
adc
ss
push
mov
mov
fstl
test
cmp
pusha
mov
in
fcompp
jo
aam
add
and
and
cmpsl
ds
add
or
fldcw
fbstp
push
push
add
stc
jne
sbb
add
jns
fwait
cmp
jne
jl
dec
push
lret
mov
jbe
pop
jp
test
cs
mov
cmp
sub
fnstcw
add
adc
movsl
stos
leave
jbe
push
lret
or
cmp
loope
dec
dec
mov
inc
push
sahf
das
pushf
arpl
out
daa
mov
and
stc
or
pop
mov
fstpl
xor
push
rorb
jp
push
cmpsl
ljmp
iret
cmpsb
jbe
jle
movsl
pop
adc
lahf
sub
xchg
incl
leave
adc
push
fsts
push
call
insb
in
repnz
subb
scas
pop
ds
xlat
out
outsb
push
aas
sub
cmpsl
cld
cmc
mov
push
pop
out
inc
pushf
sbb
jmp
sub
sub
shlb
and
pop
xlat
aas
enter
loope
push
out
xchg
or
lea
push
lods
aam
ljmp
inc
mov
dec
lds
cld
sahf
into
gs
fwait
clc
dec
inc
in
fwait
push
and
cmp
into
pop
out
inc
fstpt
mov
push
adcl
push
or
and
out
xchg
mov
sti
movaps
fsubl
test
std
mov
das
mov
jo
sub
in
push
lea
add
in
mov
jno
jmp
lea
jo
out
sbbb
jp
xor
popa
cmp
ss
in
lds
pop
sbb
iret
push
inc
aaa
loopne
movsb
push
cmc
or
inc
cmp
loop
adc
cmpsl
cmc
xchg
cmp
adc
insl
pop
sbb
or
xor
xchg
and
jp
inc
pop
out
mov
stos
xlat
mov
jbe
pop
push
test
add
orw
lods
and
add
imul
out
into
fadds
pusha
cmpl
scas
ret
pop
loope
fsubrp
lds
push
insb
xchg
push
adc
in
or
into
xor
push
arpl
sub
repz
loop
push
push
and
sub
in
subl
andl
add
fsubr
sahf
mov
mov
jecxz
add
adcb
cmpb
xlat
rolb
mov
push
into
in
add
add
scas
js
fbld
inc
lods
inc
cld
mov
int3
data16
inc
lods
dec
mov
pop
fsts
ret
adc
jb
adc
les
clc
xchg
mov
rcll
and
icebp
outsl
lret
jge
push
add
sahf
ds
les
inc
out
push
sub
cmc
or
adc
cmp
ret
aam
sub
repnz
mov
fucom
cli
je
pusha
stos
mov
push
adc
xchg
sbb
xchg
mov
fadd
repnz
mov
push
xchg
sub
repz
das
mov
fnstenv
fsubrp
mov
xor
mov
inc
loope
add
xor
dec
iret
xchg
sub
push
inc
mov
sub
xlat
enter
xchg
sub
inc
mov
cmp
inc
icebp
pop
pop
iret
or
cs
clc
cli
inc
dec
or
fs
pop
jge
xor
xchg
loopne
mov
imul
push
rcl
pop
lock
ja
mov
fildl
pop
dec
lds
lods
xor
lahf
ss
cmpsb
inc
mov
and
stos
fisubrl
fldl
stos
jp
lret
ljmp
mov
pusha
push
pop
dec
mov
iret
or
icebp
ljmp
ja
cltd
dec
lea
insb
and
or
jl
addr16
cwtl
pop
test
mov
rcrb
mov
jle
fnsave
push
cli
adc
push
fimuls
mov
mov
test
jnp
mov
js
cltd
decb
mov
inc
movsb
dec
xchg
out
cmpsl
sti
std
inc
sbb
push
sti
pop
ja
int3
push
rorb
sbb
test
and
aas
es
mov
test
mov
add
je
add
test
cmp
sti
xchg
orb
xchg
std
stc
mov
adc
xor
cmpsb
mov
sub
jle
sti
dec
cmp
add
xor
ficoml
cs
dec
push
cs
fwait
xor
and
fs
movsl
jmp
shlb
sub
nop
jno
adc
lret
xlat
shll
enter
pop
sbb
jl
sub
lcall
adc
adc
mov
into
adc
pop
cmp
lea
into
mov
outsl
int3
fs
out
sbb
dec
ret
inc
mov
jo
inc
dec
jecxz
lods
data16
daa
push
enter
pop
in
pop
cmpsl
out
out
lahf
jnp
sahf
lods
rolb
cmpl
mov
and
jle
adc
add
push
fwait
xlat
jp
pusha
mov
adc
cmp
xchg
dec
dec
or
pop
mov
scas
add
arpl
adc
jns
movsl
sub
push
loope
cmp
xlat
add
imul
movsb
jmp
test
fdivs
subl
mov
sbb
int
std
pop
xor
sub
add
sub
cmpsb
lea
mov
pushf
popf
mov
lea
mov
pop
repnz
jge
mov
mov
imul
in
pop
sbb
jae
and
sub
pop
inc
nop
loope,pn
shl
cs
rcrb
mov
notb
cmp
inc
xor
mov
push
jo
cmp
or
aad
or
repnz
xchg
jp
ret
jno
ss
push
ret
ds
out
pusha
js
xchg
lahf
xchg
ja
aaa
xchg
lret
out
cld
rcl
jbe
mov
imul
icebp
add
pop
cmp
sbb
push
mov
jmp
ljmp
scas
pop
mul
ss
movsl
test
cmpsl
aam
cltd
repz
xor
aaa
mov
jg
fisttpl
fsubl
jns
mov
mov
pop
arpl
adc
and
mov
cmp
sbb
dec
xchg
insb
les
dec
cmp
add
dec
push
dec
ret
aam
nop
pop
push
idivb
add
dec
pop
inc
push
lods
jb
icebp
mov
xchg
sbb
mov
mov
hlt
push
inc
mov
push
lret
mov
dec
mov
adc
cmp
pop
stc
pop
mov
cmp
fsubr
ret
xor
push
xor
inc
or
add
lods
lahf
mov
cmp
xor
sbb
test
repnz
notb
jae
push
sahf
jnp
inc
mov
outsl
int
cltd
arpl
xchg
jecxz,pn
inc
sbb
mov
ljmp
test
inc
in
cmp
push
push
pop
testb
jge
testl
std
pop
adc
cmc
adc
mov
fidivl
mov
add
scas
mov
loopne
out
je
sub
inc
and
cmp
xchg
pusha
fcmovb
popa
hlt
inc
leave
sub
push
xchg
loop
lcallw
pop
adc
decl
ror
mov
xchg
xor
rcll
int
pop
mov
push
adc
xchg
inc
daa
sub
push
dec
lret
out
fimuls
cmp
xchg
xlat
inc
jno
pop
pop
mov
out
push
imul
pushf
js
fwait
cmovno
mov
pop
sti
inc
inc
mov
fwait
das
call
cmp
xchg
and
rorl
jno
xor
add
xor
fldcw
xor
test
pop
mov
scas
lret
ss
add
cmpsl
push
movsb
adcl
or
mov
mov
push
mov
and
mov
enter
add
fildll
xor
negl
xor
cld
jg
xor
xor
mov
inc
push
or
ret
pop
orl
dec
pop
or
mov
stc
cmp
xchg
and
push
cmpsl
dec
arpl
sbbl
shl
and
mov
inc
out
xor
xor
arpl
cli
push
arpl
iret
ljmp
push
test
pop
lods
icebp
cmp
dec
cmp
and
push
sahf
pushl
das
or
jmp
test
xor
int
sbb
sarl
cs
lret
dec
pop
cld
pusha
lods
cmc
fwait
aaa
daa
iret
push
jl
dec
jo
or
xor
inc
cmp
and
inc
cwtl
or
ljmp
push
out
sub
outsb
jle
pop
pusha
notl
lret
sti
xchg
fnstenv
xchg
sub
stc
mov
jg
mov
outsb
mov
jle
cmp
cmpsl
mov
inc
popf
sbb
adc
pushf
xchg
cmpsb
xor
pop
enter
xchg
sub
fxch
sub
rcrl
inc
fimuls
repnz
movsl
imul
stc
int
testb
push
adc
in
orb
xlat
ret
adc
pop
ds
out
xchg
rcll
stos
mov
or
cmp
sub
les
dec
gs
sti
add
adc
vprotw
adc
out
pushf
xor
push
test
sbb
xchg
mov
mov
lret
out
pop
add
in
mov
movsb
and
sbb
leave
loopne
repnz
popa
add
ret
ret
pop
je
aam
jmp
xchg
bnd
and
jo
scas
and
xchg
test
ss
fnstsw
dec
and
mov
sbb
inc
sub
mov
mov
add
jo
ficompl
in
add
ja
ljmp
jbe
xchg
sub
xchg
lods
in
cs
jecxz
or
add
mov
or
xchg
adc
cmpsl
lds
and
pushf
cmpb
jmp
fdivl
sbb
ds
push
sub
repnz
add
aad
insl
cmp
xchg
jp
clc
cmp
add
ss
pop
push
sbb
cmpsl
ret
daa
push
add
push
and
xchg
sahf
xor
sar
rcr
repnz
mov
jmp
insb
adc
pusha
ja
sbb
pop
cmpsb
ret
inc
fnstenv
cltd
in
push
push
popf
pop
and
jecxz
sub
test
lret
mov
out
push
popf
lahf
lods
test
jb
jmp
enter
fyl2x
mov
xchg
shrl
cmpsb
mov
mov
ret
orl
aad
insl
stc
pop
xor
cmp
jp
movsb
fwait
cltd
adc
jne
mov
cmpb
ret
inc
jecxz
or
je
test
mov
and
dec
fistpl
push
flds
pop
jge
inc
shrb
jecxz
pop
shrb
mov
mov
cmp
rcrb
loopne
repz
imul
xor
testl
and
in
mov
dec
jbe
push
xchg
sahf
push
dec
gs
into
sbb
decb
cmp
pushf
and
repz
inc
stos
xchg
inc
test
movsl
lods
fistl
xor
jmp
sahf
lods
xor
lods
outsl
es
movl
mov
mov
dec
divb
insl
sub
and
cmp
fwait
xchg
pop
inc
inc
xor
sub
xor
mov
add
mov
and
call
dec
icebp
mov
lahf
xor
mov
xor
inc
pop
sti
mov
add
pop
rclb
inc
cmovae
insb
push
or
sub
xor
and
dec
xchg
fucomp
addl
ja
sub
das
cmpsb
push
notb
mov
test
and
or
data16
int
xor
dec
rcll
shld
add
adc
aas
cmp
sbb
xorb
adc
repnz
ds
mov
sbb
lods
lcall
andl
xor
mov
fs
xlat
shrl
mov
cmp
lea
mov
lods
stos
mov
into
cmpsl
cwtl
jle
int3
arpl
mov
jmp
cmp
pop
je
cs
cld
pop
push
sti
rorl
and
jae
in
pop
insb
popf
std
cli
cmp
mov
subb
cmpsb
mov
ror
mov
shrb
push
mov
in
push
data16
push
xchg
aad
sbbb
mov
pop
pop
adc
adc
xor
pop
pushf
ljmp
pop
jnp
aaa
pop
imul
xchg
test
data16
inc
xlat
xchg
xchg
mov
loop
xchg
ds
inc
repnz
mov
sbb
subb
outsb
adc
iret
sbb
push
leave
lock
stos
xlat
cld
imul
add
jl
leave
fidivl
insb
pop
loop
bound
mov
cmp
xchg
repz
xchg
xor
aad
scas
add
xchg
xor
cmp
aas
jb
lods
fstpt
sub
add
xchg
xchg
js
fidivs
mov
push
jmp
test
push
push
mov
fnstenv
jg
or
cmpsl
and
cwtl
lods
fbstp
jecxz
jne
inc
inc
sbb
negb
in
fwait
pusha
repz
mov
xchg
js
pop
mov
fadd
and
sub
aas
cmp
stc
cmpsl
lock
and
pusha
mov
jmp
inc
loop
dec
dec
lds
xor
orl
add
lock
mov
cmp
mov
mov
jae
push
mov
stos
inc
in
sbb
jb
jge
jne
sbb
adc
orl
dec
jnp
repz
jno
cmpsb
testb
jmp
andl
enter
std
fs
fsts
xchg
sti
add
scas
xor
push
lock
add
bound
xchg
adc
xlat
adc
jns
xor
imul
cs
cmp
stos
repnz
jo
jp
mov
push
fwait
dec
roll
lods
push
mov
xor
imul
cmp
sub
mov
dec
push
outsl
pusha
daa
movsl
sti
hlt
jnp
je
ret
sbb
out
push
mov
jbe
sbb
in
nop
fwait
xchg
adc
ljmp
cwtl
sahf
arpl
int3
jbe
std
lods
popf
add
ret
lcall
dec
mov
cmc
cmpsb
aas
pop
jae
stc
sub
inc
fiaddl
sub
sbb
adc
adc
les
std
lahf
outsb
lret
push
andl
mov
jo
movsl
sub
test
ss
pop
xchg
inc
jg
push
popa
pop
loop
xchg
jo
push
enter
shlb
mov
sbb
xor
add
mov
jb
sarb
lret
adc
aam
push
stos
rorl
jbe
push
nop
and
dec
cmpsb
fmull
add
xchg
or
push
loope
rclb
shrb
std
or
in
xor
sahf
xchg
push
mov
xor
clc
cmp
aaa
xor
xlat
repz
jno
xor
out
mov
dec
fsubrl
out
push
ja
cmp
aaa
push
xorl
js
test
inc
push
cs
mov
dec
dec
test
push
mov
cli
fwait
movsb
mov
dec
cmp
sbb
sbb
dec
push
xchg
jnp
popf
nop
stc
push
in
sub
sahf
xor
dec
dec
mov
pusha
add
pop
dec
std
mov
stc
cmp
aad
push
flds
in
std
das
mov
xchg
xor
rorl
mov
adc
mov
stos
sahf
xor
mov
fsubl
out
adc
mov
bound
add
cmpsl
pop
out
xchg
mov
ds
xchg
addr16
outsl
jmp
ret
jle
mov
pop
imul
mov
mov
ret
movsb
xor
daa
les
xchg
addl
mov
ja
jg
push
inc
movsl
inc
mov
jo
cwtl
add
ss
aad
shll
pavgw
sti
xchg
jnp
std
and
cmpsb
das
fdivr
pop
addr16
lret
dec
loope
add
arpl
push
jle
dec
loope
test
push
sub
mov
dec
dec
pop
or
pop
mov
rcrb
pop
in
mov
add
and
mov
cs
int3
test
dec
cmc
jmp
mov
cmpsl
aas
and
ds
push
cmp
pop
mov
jns
adc
dec
pop
and
std
ret
inc
into
out
push
clc
dec
or
in
cmp
push
movsl
xor
ret
test
pusha
neg
dec
test
xor
in
outsb
adc
ljmp
adc
xchg
sbb
xchg
jg
xor
jle
outsb
mov
xchg
sbb
add
and
mov
mov
inc
or
idivb
cmp
add
fsubp
or
cmp
ret
sbb
jmp
orb
push
out
outsl
pop
daa
push
packssdw
inc
xor
pop
ret
or
mov
mov
adc
and
test
dec
imul
movsb
xchg
enter
test
in
or
dec
pushl
cmp
pop
mov
pop
bound
movl
out
repz
fiadds
insb
xor
push
push
jbe,pt
dec
das
fyl2x
into
mov
scas
jmp
repz
xchg
in
or
adc
or
scas
push
sub
pop
jp
frstor
testb
jne
mov
push
inc
adc
popa
ja
jnp
das
dec
adc
mov
outsb
outsl
and
xchg
ret
cmp
sbb
lret
jae
cli
pushf
xlat
adc
and
decb
adc
mov
daa
or
hlt
cld
push
cmp
pop
and
push
xchg
mov
cltd
std
mov
inc
mov
jbe
pop
movl
mov
pop
testb
xor
lods
pop
enter
scas
inc
add
jno
inc
fs
xor
push
stos
insb
int3
loopne
gs
xor
dec
cwtl
ja
add
sub
ss
test
lahf
sub
clc
push
nop
or
fidivrl
mov
push
loop
pop
push
sub
and
js
mov
and
jg
aam
inc
jmp
ja
jg
insb
mov
or
hlt
cmpsl
and
cmp
ljmp
lea
movsb
dec
aaa
into
aas
xlat
jg
add
cmc
popf
out
mov
xor
pop
jbe
mov
arpl
mov
pop
ja
rorl
and
and
cmpsb
xlat
out
push
imul
cs
sub
sbb
xor
mov
pop
enter
clc
mov
nop
and
add
pushf
dec
insb
int3
cmpsb
mov
dec
arpl
or
bound
sub
xor
lahf
inc
pop
lds
pop
mov
das
movsb
cmp
bound
cmp
add
sub
repz
push
and
shll
sbb
test
xchg
pop
or
notl
pop
sbb
loope
mov
jne
pop
mov
xor
and
fisttpll
dec
dec
xchg
movsl
iret
push
bndmk
jp
insl
pop
sarb
shl
clc
or
cmp
loopne
pop
fnsave
sarl
or
push
popf
sahf
rolb
lret
in
lret
xor
test
rcll
in
cld
mov
iret
sub
sbb
mov
add
mov
test
and
cld
cmpsl
mov
jnp
sti
and
pop
aas
data16
popa
fbld
sbbl
ret
mov
in
fistpl
push
arpl
mov
pop
push
shll
mov
add
rclb
jg
movsb
sti
push
aad
adc
imul
sbb
xor
jmp
cwtl
bnd
bound
shll
ja
xchg
test
mov
jl
adc
out
push
jl
push
rcll
xor
repz
inc
mov
cmpb
sub
rolb
xor
jp
js
clc
loope,pt
cmpsb
jle
clc
jp
sbb
fmulp
das
lock
jmp
jg
xor
jns
adc
imul
clc
mov
out
mov
mov
mov
test
jg
adc
clc
jns
stos
sbb
sub
ds
and
pop
dec
push
xlat
aad
inc
xchg
xchg
sti
mov
mov
sbb
iret
mov
sub
push
fisubs
shrl
inc
push
mov
mov
xlat
push
cmpsb
test
xlat
jno
cmc
xchg
adc
fcoml
xor
push
out
cmp
insb
or
dec
arpl
cli
mov
cmp
repz
arpl
xchg
pop
test
jmp
sbb
xchg
addr16
lds
cmpsb
dec
insb
inc
into
pop
mov
mov
leave
jns
pop
scas
rorb
mov
insl
movsb
aas
rorl
xlat
iret
sub
popf
loopne
pop
cmp
sbb
jno
adc
pop
xchg
inc
in
adc
pop
enter
scas
xchg
movsl
push
fidivs
shll
mov
mov
push
adc
push
cmpsl
jb
mov
xchg
iret
subl
xchg
fdivs
ret
adc
jns
mov
and
fldcw
enter
rorl
aam
cmp
pop
push
into
pop
sbb
nop
lahf
ss
jmp
inc
je
and
mov
test
xlat
mov
sub
call
push
jp
xchg
lods
sub
mov
arpl
sbb
inc
push
adcb
add
push
xchg
and
push
push
dec
mov
or
orb
add
dec
and
sbb
sbb
adc
and
inc
jecxz
imul
and
out
das
lods
cmp
div
ss
ret
pop
jno
andb
stos
hlt
mov
add
test
lods
in
lcall
std
nop
in
test
lcall
mov
int3
xor
dec
and
inc
inc
xchg
test
scas
mov
pop
sub
fucomp
shrl
cmp
aaa
loope
pop
cld
ret
es
in
mov
adc
sub
int
into
cmp
push
inc
loop
das
shl
aaa
insl
rcrb
mov
cmpsl
ret
ret
and
fcomip
mov
push
test
push
sub
sti
fsubrp
fucomip
stos
mov
push
add
test
xsha1
cmpsb
push
stc
mov
sbb
and
mov
shrl
mov
inc
push
cwtl
test
jno
mov
ljmp
popf
and
rcrb
inc
xor
adc
ss
out
add
lods
jo
insl
mov
inc
or
pop
push
pop
sub
mov
fidivrl
mov
popa
sub
mov
xchg
shrl
xchg
std
test
inc
daa
lahf
fbstp
cmp
cli
inc
in
dec
fcmovnb
inc
arpl
sti
cs
ds
sbb
ljmp
lret
jge
lock
or
pop
cmc
fists
mov
push
imul
ret
cmp
pop
dec
xlat
inc
and
push
jl
adc
add
pusha
mov
xchg
mov
clc
inc
fldcw
sbb
js
jae
cmp
pusha
test
aad
add
pop
inc
and
int
cli
js
dec
xor
imul
das
mov
xor
pushf
sti
xchg
into
cmc
mov
rorl
dec
fdivl
in
push
dec
dec
fstpt
dec
ja
cmp
stos
push
in
xchg
iret
sub
and
mov
add
ds
shrl
and
dec
clc
test
cmp
lds
cmc
imul
add
shlb
cmp
add
ret
pop
dec
das
cwtl
test
cmpsl
or
inc
int
adc
push
mov
test
pop
jmp
fwait
test
sbb
mov
mov
xchg
pop
cmp
shlb
filds
je
lea
xchg
mov
into
jg
rcrb
insb
rorl
insl
xlat
insb
push
testb
repnz
add
aaa
imull
sub
dec
mov
xor
or
sbb
xlat
and
pop
pop
lret
pop
icebp
and
jb
addr16
or
mov
dec
jecxz
aam
repnz
mov
cmp
jns
jo
inc
or
mov
mov
ljmp
daa
cmp
xchg
imul
pop
les
mov
lahf
in
je
shlb
mov
sub
jecxz
pop
aam
dec
add
in
or
dec
repz
adc
and
std
mov
in
xor
cmpsb
rolb
push
xor
cmpsl
mov
mov
jns
pop
xor
inc
mov
adc
rcll
cwtl
js
clc
or
pop
lcall
lock
dec
hlt
xchg
insb
mov
pop
shr
push
xchg
in
jmp
pop
or
je
sub
xor
loope
mov
jg
cltd
jns
ret
xlat
and
mov
cmp
fildll
shll
insb
sti
outsl
das
push
sbb
scas
inc
dec
push
enter
sahf
stos
adc
inc
cltd
pop
mov
inc
in
sbb
xor
pop
out
ljmp
sbb
sbb
xchg
inc
cmpsb
dec
push
sbb
int3
call
push
lcall
pusha
add
inc
cmp
add
pop
xor
out
cmp
movsb
dec
addr16
xorl
pop
or
call
mov
push
in
incb
enter
xchg
mov
cli
xchg
int3
and
cmp
out
or
stos
daa
into
popa
xor
lcall
add
lock
loop
enter
ljmp
jno
lock
int
outsb
sbb
fsubrs
sub
pop
xor
xor
add
inc
dec
or
lock
push
mov
and
rcll
mov
fistpll
loop
insl
add
add
jb
mov
insl
add
fiaddl
xchg
mov
push
adc
lcall
and
add
fmull
es
sub
outsb
jl
mov
aas
data16
cmp
popf
popa
push
jbe
shr
es
orb
out
shlb
xchg
repz
pop
cli
out
outsl
daa
push
test
fiaddl
mov
jnp
out
loope
jp
in
xor
dec
jecxz
lahf
pop
mov
push
or
mov
jnp
shr
jg
filds
xchg
mov
mov
jae
fidivl
fdivs
inc
push
mov
fs
mov
and
sbb
in
stos
mov
gs
insb
outsl
mov
rorl
test
cmp
imul
push
sbb
dec
setnp
fadds
mov
adc
or
mov
imul
mov
shlb
test
scas
or
inc
adc
hlt
lret
pop
out
out
jmp
jp
pusha
and
xchg
dec
or
mov
jo
int3
xor
fcomp
repz
mov
int
sarb
js
ja
mov
cld
push
adc
movsb
cmp
mov
xor
insl
mov
push
add
pop
adc
xchg
lods
and
push
mov
xchg
or
xor
mov
test
aaa
stos
das
and
inc
mov
idivl
lock
mov
int3
xlat
fldl
push
mov
adc
dec
jnp
mov
push
adc
push
pop
repnz
or
mov
ffree
pop
jmp
mov
cld
jmp
out
lret
sarb
cmp
jo
mov
lret
arpl
shll
loopne
stos
xchg
adc
jmp
movsl
aas
sub
pop
inc
pop
dec
sub
cmp
pop
aad
mov
in
aam
jne
fcomip
sub
js
imulb
loope
in
iret
cli
xchg
lret
and
add
xchg
xchg
out
es
jae
cmp
loope
sub
sahf
push
leave
movsl
loopne
scas
mov
push
mov
test
loope
push
mov
mov
test
sbb
arpl
xchg
sub
pop
jle
adc
jns
mov
lcallw
and
sbb
inc
inc
fisttps
pop
add
jne
pop
xchg
and
sub
inc
int
notb
fwait
xor
inc
inc
std
fildll
mov
xchg
sbb
call
push
fsubrp
lods
push
push
sub
fisubrl
xchg
nop
push
fwait
and
fs
popf
sbb
pop
jo
mov
es
dec
sti
call
or
jae
in
jbe
cmp
gs
cmpsl
fwait
test
and
out
mov
icebp
push
push
cwtl
mov
mov
rclb
syscall
sub
in
sbb
jecxz
pop
imul
dec
cmp
lcall
pop
jp
xlat
outsb
outsl
outsl
jmp
jl
mov
pop
cwtl
jg
or
dec
xchg
mov
push
push
cmp
cmp
lcall
and
pop
dec
call
mov
ret
add
call
adc
int3
frstor
sbb
call
sbb
push
xchg
jnp
enter
inc
fs
xor
jp
xlat
cmp
push
mov
mov
push
mov
or
fs
ljmp
jne
test
mov
adcl
adc
sub
in
sbb
xor
xor
cmp
aas
xchg
push
imul
push
lahf
inc
xor
or
repz
std
add
cmpsl
or
pop
ret
jne
mov
fidivrs
cmpsb
mov
fistl
push
xchg
inc
cs
mov
pop
jecxz
addb
mov
xor
enter
xlat
push
inc
inc
fildl
xchg
ja
out
fistpl
add
ret
movsl
sbb
pop
shrl
mov
add
jb
jl
lcall
les
sbb
push
cld
and
adc
jns
shrl
xchg
and
mov
outsl
add
loopne
xorb
xchg
cli
or
cmpsl
sbb
add
movsb
aaa
in
je
lock
into
enter
add
std
lahf
rclb
aam
xchg
xor
fdivrp
xchg
adc
lret
push
sbb
fwait
test
popf
xor
or
adc
add
xlat
push
and
incl
into
inc
lahf
call
mov
mov
xorl
push
movsb
pop
cmp
sti
dec
mov
pop
push
stos
cltd
xor
pop
cmp
mov
sti
clc
and
dec
dec
fcoml
lock
enter
sbb
xchg
insl
add
mov
mov
cli
in
stos
jmp
mov
fwait
jmp
in
push
mov
faddl
dec
loop
mov
dec
or
imul
dec
pop
sahf
scas
punpckhbw
int3
popa
mov
add
arpl
jl
mov
sub
dec
adc
fsubl
or
outsb
sub
mov
mov
outsb
mov
into
nop
loop
je
cmpsl
push
notb
dec
lock
mov
insb
fidivrs
push
cmc
jl
add
adc
mov
sarl
test
fldl
mov
sbb
jecxz
aaa
hlt
insl
sbb
movsb
bound
mov
push
fdivrs
cld
mov
adc
data16
ljmp
les
mov
cmp
mov
bound
orb
in
pushf
cs
cs
leave
bound
fucompp
jg
pop
push
cli
leave
sbb
cmpsb
lea
hlt
int
cmpsb
sub
xchg
outsb
mov
outsb
sar
clc
jnp
subb
sbb
cmp
push
imul
sub
jg
jo
stc
xchg
push
cltd
push
je
aaa
addr16
bound
pop
cmpl
jnp
repz
cld
and
push
jno
dec
inc
fdivrs
pop
sbb
jl
push
out
test
outsb
sub
mov
fs
add
leave
repz
and
cld
loop
mov
adc
insb
addb
pop
icebp
repz
cmp
dec
mov
lea
inc
scas
mov
mov
jbe
lods
hlt
out
test
loope
pop
adc
jbe
inc
mov
pop
leave
inc
std
sar
loop
cmpsl
adc
imul
jo
cwtl
in
add
in
or
stos
or
call
aaa
jo
icebp
and
cmc
mov
push
sbbb
mov
mov
xchg
clc
pop
adc
adc
int3
sbb
xor
lret
loope
sbb
sarb
rol
jle
ljmp
xor
loopne
cld
gs
push
sbbl
push
stc
test
mov
clc
or
fwait
sub
push
push
lahf
ljmp
cmovne
movsl
inc
movsl
ret
xor
jmp
in
enter
jno
jns
fwait
sub
push
jb
jne
aam
mov
pop
in
jb
pop
ljmp
in
fcoms
fwait
mov
and
icebp
adc
xchg
dec
inc
mov
lods
in
mov
divb
outsb
shrb
sbb
movsb
ss
int
cmp
push
and
or
cmpsl
jle
loope
lret
add
xorl
add
add
or
andl
shrb
xor
add
ds
scas
mov
arpl
jl
rorl
push
shlb
jb
outsb
test
sbb
xor
imul
inc
das
push
repnz
shl
enter
in
fadds
leave
and
andb
out
lds
xor
xor
push
jp
lea
xor
addr16
nop
test
movsb
arpl
out
sahf
and
lret
inc
xor
lods
sub
stc
js
mov
rcl
push
mov
inc
repnz
shrb
mov
sti
xchg
and
inc
pop
sbb
jo
add
push
popf
lods
leave
push
jmp
lea
aaa
cwtl
inc
and
cmp
mov
aad
xchg
scas
jge
push
and
or
pusha
mov
adc
jmp
cmp
jbe
inc
incl
sarl
push
sub
cs
mov
cmp
push
mov
pop
ja
call
or
lret
int3
pop
outsl
add
xor
cmp
or
mov
ret
mov
in
movsb
pop
clc
jmp
mov
jns
xor
cli
inc
xlat
push
push
bound
lahf
jbe
jb
rclb
sti
cmpsb
jle
adc
test
cmpb
xor
and
repz
cmpsl
mov
add
bound
xchg
mov
inc
lret
in
setb
ja
xlat
jo
cli
shll
add
mov
jbe
inc
fldenv
inc
pusha
fstpt
mov
dec
and
mov
cmpsl
ds
sahf
mov
mov
aad
adc
sub
adc
mov
pop
and
ljmp
jns
loopne
xchg
jmp
add
lcall
pushl
ret
hlt
aas
mov
and
pop
and
movsl
lret
push
jp
pop
push
popf
arpl
nop
popf
xor
or
push
mov
movsl
or
or
mov
leave
fnstenv
nop
cmp
and
mov
push
scas
jae
loopne
add
stos
in
jmp
iret
loop
in
dec
xor
flds
jbe
test
insl
dec
rcl
repz
sahf
mov
cmp
jne
das
loope
stos
pusha
cld
pushf
sbb
add
mov
fdivs
or
adc
add
sti
pushw
mov
dec
inc
adc
js
mov
dec
fnstsw
mov
addb
loop
cmp
stos
push
jns
mov
fcompl
or
add
mov
inc
es
mov
cmpsb
mov
and
mov
jmp
mov
in
or
in
sahf
je
adc
mov
pop
lds
lods
jecxz
jne
dec
pop
test
scas
push
jnp
pop
pushf
or
mov
imul
ljmp
pop
mov
inc
fcomps
xchg
cs
mov
popa
inc
add
divl
stc
sbbl
loopne
cltd
sub
and
inc
loopne
js
dec
add
dec
push
xchg
push
ljmp
mov
cli
je
cmp
or
push
das
mov
jne
inc
sbb
xchg
fwait
test
xor
outsb
jecxz
ret
clc
cmp
add
icebp
and
dec
dec
sub
daa
aaa
ret
nop
loopne
add
jp
or
xchg
inc
adc
jo
mov
bound
and
dec
adc
aas
cmp
and
mov
jbe
or
test
dec
xorb
xchg
push
shll
hlt
pop
scas
and
push
and
push
push
push
and
dec
in
inc
sbb
cwtl
leave
repz
mov
pushf
add
shl
cld
pop
push
xchg
fwait
fs
sub
insl
xlat
jbe
or
out
call
or
add
xchg
daa
and
cs
and
jecxz
inc
test
arpl
mov
xor
shl
xor
loop
xchg
std
rcll
push
jb
rcr
outsl
add
testb
cltd
adc
loop
cmpsl
popa
faddl
cmp
mov
imul
xchg
pop
mov
and
push
fiaddl
dec
push
cmp
fisubrl
jg
cs
jge,pt
xor
je
cwtl
push
push
lods
cs
bound
adc
xor
xchg
adc
in
mov
daa
lock
inc
shrl
daa
mov
js
ret
lret
and
and
add
jne
leave
cmpsb
inc
jnp
dec
adc
xchg
push
xor
cmp
mov
sub
cmp
mov
int
je
shll
jbe
xchg
mov
arpl
mov
adc
and
or
sbb
mov
adc
ds
es
gs
pop
std
push
sub
cmp
pop
outsl
dec
cld
dec
movsl
shl
nop
loopne
repnz
call
lret
call
dec
cli
test
and
aam
or
or
pushf
xchg
or
test
lock
in
add
ja
adc
jge
xor
lret
sub
and
inc
popa
mov
out
push
test
clc
mov
lock
lcall
stos
push
or
jbe
les
jae
cld
xchg
out
xchg
pop
and
jbe
mov
rcll
inc
fprem1
sub
dec
sbb
or
pop
scas
xor
push
xor
out
lahf
cs
xor
out
iret
in
mov
aas
repz
push
je
das
addps
mov
lcall
inc
mov
lret
inc
inc
jb
add
lcall
in
clc
mov
test
sbb
push
push
nop
jns
pop
outsl
lcall
push
jmp
out
lahf
sub
scas
adc
das
lds
dec
dec
mov
sbb
inc
adc
inc
jle
loope
pop
repnz
mov
mov
jns
movsb
push
mov
lret
add
nop
sbbb
cmc
rcrl
clc
insl
sub
xchg
lahf
mov
jnp
lods
in
mov
sbb
mov
push
push
jno
inc
ds
xor
jno
ljmp
adcb
xlat
shlb
je
js
mov
lods
out
xchg
scas
push
in
cmp
js
leave
sub
dec
adc
loope
les
adc
pop
imul
jge
sahf
stos
loop
call
pop
lcall
sub
dec
xlat
repz
fdivl
push
lods
ds
sbb
pop
mov
and
lds
adc
ss
xor
and
jb
mov
mov
mov
sbbl
or
data16
mov
dec
test
addr16
xchg
push
mov
sub
arpl
mov
sbbl
leave
repnz
cmc
sbb
insl
mov
jle
cmpsl
sbb
mov
pop
imul
or
inc
test
and
lcall
jmp
dec
je
pop
cmpsb
inc
in
ja
ret
je
or
adc
jp
xchg
ljmp
insb
mov
mulb
xchg
mov
fstps
in
gs
jb
dec
lahf
pop
xchg
xor
hlt
push
jl
xchg
cs
in
movsb
movsl
cld
push
les
ret
jp
movsl
xchg
dec
aam
fiadds
shll
in
inc
imull
add
insb
lds
mov
scas
sub
cmc
stos
add
dec
lea
lcall
xor
add
or
lds
stos
sti
push
jl
xchg
shll
sbb
outsl
fiaddl
mov
inc
ficoml
aam
xor
sbb
out
scas
push
clc
cmp
sub
imul
out
leave
imul
shll
and
inc
sub
enter
jae
add
xchg
mov
mov
loop
sbb
in
xchg
fs
push
xchg
mov
jne
cmpsb
cmp
inc
and
jmp
adc
test
mov
xor
mov
add
or
push
fwait
push
in
cmp
adc
xchg
jmp
outsb
repz
push
dec
push
cmp
aam
in
pop
push
pop
mov
mov
aas
jno
test
lret
inc
lahf
push
fs
in
loopne
jge
cmp
dec
jecxz
les
je
sbb
popf
test
iret
push
xor
mov
mov
pop
fbld
mov
add
sbb
fsubp
push
pop
inc
fucomip
inc
gs
push
cmpsb
xor
sbb
dec
movsl
mov
mov
bnd
out
leave
xchg
cmpb
or
sub
cmp
cld
sub
cmpsb
push
ja
pusha
push
xor
jg
xor
int3
fcompl
mov
push
mov
fcomi
xlat
js
cld
lods
push
out
push
fisubrl
or
add
mov
into
subl
data16
out
xchg
jo
scas
aam
adc
mov
xor
pop
daa
test
xchg
lahf
and
popf
and
daa
sar
dec
aam
jmp
outsl
push
leave
std
loopne
or
in
lcall
and
lock
adc
pop
cltd
xrelease
scas
and
or
add
lods
fst
fs
jp
add
xchg
xchg
test
shl
push
inc
adc
adc
mov
xor
pusha
pop
fstpt
mov
mov
jb
jae
and
or
xor
jle
sub
pop
sub
mov
jno
jbe
addr16
jae
push
fmulp
inc
fdivl
push
push
cmp
xlat
aaa
nop
jmp
in
fwait
sub
shrl
sbb
mov
sbb
iret
mov
imul
aas
movsl
add
jb
sbb
shlb
imul
dec
jnp
out
xchg
divb
loop
dec
lcall
inc
fsubrs
pop
jmp
xchg
jmp
pop
sbb
cmp
icebp
mov
mov
push
rcrl
subl
gs
xor
xchg
test
push
aaa
jns
mov
sub
test
jb
into
xor
ret
lods
stc
adc
nopl
dec
xor
nop
cmp
icebp
insb
outsb
pop
jo
sbb
out
pop
outsl
cmp
fsubrs
xchg
jl
adc
lea
pushf
mov
mov
andl
or
hlt
dec
mov
cwtl
stos
mov
inc
in
fists
jns
adc
in
repnz
pop
addr16
int3
mov
push
pop
imul
sti
xor
inc
in
push
loope
adc
jl
lds
lcall
scas
arpl
jecxz
sbb
shll
jp
fcom
sbb
push
shrb
jecxz
imul
subl
push
pop
jne
lret
das
jl
test
push
fmulp
int3
int3
mov
mov
and
aaa
jns
push
push
int3
loopne
xor
dec
popf
sbb
mov
dec
aam
pop
sbb
or
aam
pop
jg
in
dec
xchg
xchg
mov
das
cmc
mov
cmp
call
lods
push
adc
jmp
mov
sub
lcall
xchg
sub
pop
add
nop
sbb
mov
xchg
push
fbstp
jb
outsl
sar
sbb
out
mov
fbld
arpl
inc
mov
lds
movd
xchg
pushf
jmp
mov
xchg
xor
shl
push
aaa
into
xchg
pushw
stos
andl
popf
repz
arpl
sbb
repnz
je
ds
mov
pop
xchg
shrl
mov
lcall
out
push
jle
daa
mov
jmp
and
jbe
ss
aad
mov
xchg
xor
pop
inc
push
jmp
and
push
cmp
out
sub
fidivs
loopne
push
sub
push
test
and
cmp
mov
loope
xchg
out
out
rcl
inc
into
jbe
jae
loop
push
insl
mov
dec
pop
pop
loop
pop
out
imul
mov
cwtl
inc
cwtl
inc
icebp
insb
sti
int3
aaa
jmp
ljmp
cmp
adc
es
es
cli
repz
shll
mov
ja
ret
subb
std
pop
orl
cmpsb
cmp
mov
push
dec
negb
ja
pop
testl
inc
aad
mov
pop
mov
and
popa
dec
sbb
xlat
xchg
loop
push
ror
out
scas
and
or
xor
cwtl
lds
or
lea
mov
push
cmpsl
loop
xor
outsb
enter
mov
dec
in
dec
mov
mov
mov
rcl
jnp
jnp
push
jl
jmp
xor
jnp
mov
sti
xor
js
and
icebp
js
arpl
data16
rcrb
lcall
test
and
inc
or
fsubrs
and
xchg
movsb
divl
mov
sbb
dec
or
dec
push
nop
jnp
in
dec
mov
mov
es
ret
xchg
cld
adcl
mov
lret
xor
idiv
out
fwait
xlat
adc
std
sbbb
clc
adc
mov
out
mov
mov
xor
and
sarl
sti
mov
lcall
stos
pop
aad
cli
dec
lahf
jno
sbb
jp,pt
adc
imul
out
imul
adc
mov
lahf
mov
mov
std
outsl
pop
inc
in
jnp
hlt
mov
push
xor
pop
cs
xlat
mov
cmp
jmp
inc
ljmp
cmc
jb
outsb
pcmpgtd
jg
mov
or
cmp
push
outsb
sbb
mov
imul
popa
mov
jb
jle
adc
jmp
nop
add
rcrb
out
adc
inc
pop
nop
movsl
fisttps
pusha
add
and
imull
add
insl
xchg
cmpsl
or
js
bnd
sbb
in
fwait
ret
lds
or
cltd
adc
popf
sub
mov
pop
inc
dec
jmp
orb
push
jnp
ljmp
jo
sbb
jno
clc
inc
push
jbe
pop
xchg
iret
fwait
scas
add
aam
bound
mov
mov
enter
popa
sub
mov
out
in
out
mov
fbstp
mov
mov
xor
pop
iret
push
mov
xor
xor
and
mov
ret
jle
cmp
in
popf
sub
mov
insl
movsb
adcb
dec
dec
aad
out
pop
andb
jne
cmc
into
xchg
xor
mov
or
or
push
mov
es
push
sbb
or
or
leave
jge
outsb
rcll
addr16
shl
add
jp
cmp
clc
push
jns
adc
mov
adc
inc
push
pop
popf
test
adc
scas
inc
leave
xor
xchg
fsub
push
ret
notb
jecxz
xor
shll
mov
xorl
add
cmp
cwtl
push
fwait
xor
jmp
add
add
popf
xor
jge
popa
ret
push
test
fldpi
xchg
xchg
push
sahf
mov
in
fldl
loop
movsb
dec
and
xchg
mov
out
in
and
repz
jmp
sub
adc
xor
or
xchg
loopne
xchg
div
lcall
adc
fiadds
insl
add
gs
sti
shlb
xchg
decl
repz
testl
lods
cs
mov
sbb
out
mov
notl
stos
jne
test
pop
mov
fwait
repz
jmp
cmp
jge
pop
pop
push
out
test
mov
jb
mov
ficoms
in
fmuls
js
jl
add
mov
out
adc
sub
shlb
icebp
mov
cmp
hlt
jb
push
mov
dec
cmp
filds
shrb
movsb
push
ss
inc
cmp
daa
lret
push
imul
test
iret
push
in
popa
pop
push
ja
je
jp
or
fwait
xchg
sub
and
adc
das
cmp
cmp
sbb
dec
and
arpl
add
fnsave
ret
add
popa
nop
xchg
mov
adcb
repz
add
fisubrs
stos
xor
aam
dec
mov
cmp
add
inc
dec
shrl
repnz
mov
mov
outsl
dec
data16
mov
mov
cs
mov
inc
insl
push
loop
xchg
jg
sbb
jns
loopne
fcompl
mov
dec
pop
sbb
jb
push
int
xlat
sub
pop
mov
mov
pop
outsl
push
mov
add
inc
rorb
add
stos
movsb
push
in
jbe
push
xor
pop
xchg
call
cwtl
mov
adc
test
ja
push
test
sbb
jg
jmp
ret
aas
push
cmpsl
neg
add
out
jg
in
iret
data16
mov
int3
mov
lahf
pop
push
insb
sub
addr16
scas
fcoms
out
dec
negl
sub
dec
push
std
xor
cmpsl
jno
nop
push
xor
fwait
xlat
sub
xchg
daa
lcall
or
out
mov
xchg
cmp
loopne
lcall
sbb
sahf
js
ja
xchg
adc
aad
sbbb
aad
or
mov
cwtl
clc
mov
pop
adc
and
ret
fs
sub
mov
lods
mov
xor
push
push
outsb
add
adcl
sbb
scas
call
rcrl
push
mov
cwtl
das
or
pusha
stc
fiadds
bound
stc
pop
lods
jae
xor
pop
pop
mov
dec
jp
xchg
cs
lods
cmp
movsl
xchg
add
movsb
fcoms
pop
mov
sbb
cmp
inc
out
xor
push
xchg
dec
test
push
dec
out
pop
or
repz
xchg
lods
push
dec
adc
sarb
fisubrs
mov
mov
jb
sahf
in
add
outsl
in
mov
out
pop
pop
in
mov
testl
xchg
cmpsb
cmpsl
mov
ja
insl
sub
or
movsl
mov
adc
mov
rorl
fidivl
push
sahf
pusha
xor
xchg
rcrb
sub
fnstenv
fwait
dec
and
repz
pop
push
lahf
or
add
aad
test
mov
test
lret
adc
loop
xor
push
inc
pusha
pop
pushf
fwait
xor
ljmp
lods
push
call
test
test
popf
flds
and
and
and
jp
ret
add
stc
iret
aas
mov
xchg
mov
idivb
dec
mov
in
rclb
rol
fsts
fnstenv
xor
cli
loope
movsl
xchg
stos
jne
testb
repz
mov
sbbl
mov
pusha
and
adc
gs
cs
adc
fdivr
in
cltd
xor
mov
xchg
pop
mov
mov
mov
pop
test
aas
cmpsb
inc
and
push
sbb
sbb
mov
xchg
lods
push
fprem
or
stos
mov
xor
xchg
push
data16
xchg
fisubrs
pop
insb
test
fldcw
sub
rcrb
cli
ss
cmpsl
cmp
push
rcrb
sbb
ficoms
loop
int
push
sub
sub
adc
add
jle
stos
inc
mov
in
dec
inc
pop
notl
jno
aam
mov
push
add
mov
fdivrp
repnz
and
ficomps
imul
mov
lock
inc
pop
or
pop
fsub
xchg
mov
and
notl
popf
mov
add
fmull
lahf
cmc
lea
sub
sub
loope
rcrb
xchg
popa
fisubrl
mull
dec
or
mov
pop
cmp
pop
in
test
push
pusha
mov
jae
dec
mov
and
lock
xor
lds
xchg
je
cli
test
fsubrs
pop
xchg
inc
jno
sub
adc
test
in
xor
fwait
sbb
loopne
scas
pushaw
fbstp
test
xor
xchg
sbb
xor
cmp
lock
fldl2t
leave
inc
push
shrl
shl
repz
int
push
fisubrl
mov
jle
pop
mov
inc
ss
push
aam
sbb
and
add
int3
xor
stos
xor
dec
inc
mov
pop
pop
and
leave
rcll
mov
xor
iret
fidivl
cmp
mov
movsl
outsl
les
dec
out
pop
out
out
xchg
test
icebp
in
pop
out
roll
fidivrl
fs
push
les
xchg
xor
jno
sahf
scas
inc
or
iret
arpl
cmp
xchg
add
inc
dec
inc
jo
int3
jg
cmp
jnp
mov
fisttpl
imul
jle
mov
movsb
int
pop
insl
inc
imull
sub
ja
mov
repz
add
jae
mov
pop
push
dec
fld1
outsl
outsb
push
or
jge
mov
nop
xor
mov
cmp
pop
jmp
adc
loop
pop
in
push
jmp
sbb
icebp
insb
mov
sti
push
test
stc
pop
mov
inc
push
cmpb
call
and
sub
lods
sub
jmp
cmpsb
mov
out
xor
dec
pop
and
rcrb
xchg
or
jnp
inc
in
mov
inc
xchg
dec
loopne
lea
push
icebp
lret
xlat
jnp
enter
sbb
fnsave
lcall
int3
movsb
jb
inc
in
add
mov
mov
mov
mov
fnclex
mov
and
adc
xchg
repz
js
outsl
dec
loop
sub
loopne
scas
imul
repnz
pushf
xor
fisubl
into
das
mov
sarl
or
js
ja
or
mov
jo
jb
pop
and
aad
push
xor
xor
pop
mov
xchg
or
sarl
cmpsl
push
dec
pop
xchg
adc
sub
rolb
lea
pop
aad
adc
ret
sbb
cs
movsb
movb
or
jle
ljmp
push
or
mov
xchg
xor
push
aas
dec
mov
dec
mov
test
pop
dec
adc
std
cmovs
leave
push
push
out
xchg
jbe
mov
roll
addr16
push
stos
xor
lret
movsl
mov
xchg
xchg
mov
lcall
repnz
fnsave
shrl
js
dec
push
daa
mov
mov
lret
push
sub
xor
clc
outsl
jecxz
xchg
lds
test
add
push
int
imul
jne
test
leave
push
lret
jbe
push
and
inc
aad
cmpsb
mulb
mov
inc
jns
cmc
aam
test
pop
xchg
addl
dec
aam
sbbl
or
clc
outsb
popf
sub
add
daa
enter
lret
repnz
jmp
in
xor
movsb
cmp
cmp
outsb
test
or
pop
rclb
xchg
ficoms
je
push
lahf
jmp
movsl
mov
or
xchg
or
fs
and
cmp
ret
imulb
into
leave
jmp
push
enter
fsincos
cmp
lods
jmp
mov
int
imul
dec
imul
vshuff32x4
call
xchg
cmp
cmp
mov
or
xor
xor
pop
sub
sbbl
push
inc
mov
pop
cld
mov
cmp
add
pop
fnsave
pop
mov
out
mov
mov
sub
pop
cmp
dec
cwtl
test
stc
shl
lock
ljmp
clc
pusha
in
xchg
sbb
xchg
test
pop
cmp
push
pop
sub
jmp
mov
ret
shrl
push
cmpsl
dec
push
cwtl
fwait
into
gs
fstpl
mov
fsubr
pop
or
mov
dec
add
shll
mov
pushf
popf
mov
ds
shrl
icebp
cmp
sub
das
add
inc
mov
jne
or
push
sub
cmp
mov
leave
in
lods
pop
fwait
popa
mov
xchg
mov
xor
pop
out
mov
push
jbe
test
sub
ret
orb
jl
addr16
push
shrb
pop
idivb
cmp
jg
call
andl
pushf
mov
push
inc
ret
enter
mov
outsb
shll
insb
mov
loop
nop
dec
and
popf
push
xor
es
and
mov
test
inc
fsincos
lret
xor
and
in
ret
sti
mov
push
mov
adc
loop
or
ss
outsb
ficoms
jg
imul
test
jmp
sub
popf
sti
je
inc
shrb
daa
test
mov
and
rorl
add
movsl
mov
lcall
and
cmp
mov
daa
pop
cmc
lds
adc
mov
loopne
popf
adc
and
sarl
xor
or
push
es
sarl
inc
mov
fwait
outsb
not
xchg
inc
mov
shll
pop
out
dec
orb
mov
xchg
mov
sub
adc
fsubs
jmp
loopne
dec
adc
cmp
mov
fidivrs
fwait
loope
pop
adc
push
cli
jmp
fsts
push
mov
stos
rcrl
or
mov
adc
gs
outsl
jnp
in
iret
sti
test
push
mov
push
jbe
cmpsl
fdivl
jns
push
dec
sti
out
jns
sahf
test
inc
and
push
lahf
jno
ficompl
sub
sub
push
sbb
jo
xlat
or
fwait
jmp
mov
add
out
xchg
push
pushf
das
adc
rorl
lods
add
adc
lods
mov
lcall
mov
es
push
popa
jl
dec
add
jl
fbld
push
pop
and
xor
fwait
fs
inc
xlat
mov
aad
and
aaa
cwtl
mov
leave
pop
pop
mov
push
flds
push
cmp
xchg
pop
xor
popf
sbb
stos
mov
jg
push
clc
xchg
inc
mov
xchg
mov
fsub
sub
out
je
xchg
lods
xor
push
outsl
int
push
mov
stos
mov
mov
scas
and
xor
xlat
fwait
cld
or
mov
enter
xchg
out
jecxz
imul
mov
mov
dec
fsts
or
out
pop
in
cmp
sbb
cmpsb
and
sub
stos
inc
daa
pop
int
ss
pop
nop
sub
jbe
dec
das
je
jo
lds
pop
out
mov
pop
popa
mov
fldcw
fimuls
dec
jnp
mov
adc
fwait
cmpsb
js
insb
test
pop
addr16
push
jge
sub
or
sub
dec
push
sbb
sbbl
pop
adc
pop
mov
push
cs
lret
dec
xlat
outsb
andl
outsb
mov
push
mov
jno
xor
jbe
push
xchg
add
adc
fdivrl
mov
dec
cmpsb
les
mov
ret
cmp
lea
testb
repz
mov
mov
fwait
add
xchg
push
add
push
mull
mov
cmpsb
sub
stos
ret
inc
fcmovnbe
pop
jg
or
es
push
movsl
adcl
sub
aam
adc
scas
jns
or
dec
mov
dec
sbb
inc
lods
dec
xchg
mov
stc
dec
mov
mov
push
icebp
les
inc
mov
xor
add
add
lret
fucom
or
push
call
fdivrs
in
sub
lea
dec
in
dec
packssdw
adc
dec
push
lea
sbb
das
xchg
dec
sarb
test
mov
in
daa
ljmp
jl
cltd
mov
lock
pop
ljmp
lods
push
cld
js
xchg
mov
push
mov
lcall
fisubl
sub
mov
xchg
mov
test
loopne
xor
mov
xor
mov
jae
lds
int3
sub
data16
addr16
and
mov
jo
xchg
or
out
int3
insb
jns,pt
mov
aas
push
aas
imul
int3
adc
and
stos
xchg
out
out
aaa
sahf
icebp
xchg
jecxz
and
aam
rcll
adc
jbe
or
enter
dec
aam
cmc
dec
lock
xchg
rcr
jb
lds
and
xchg
iret
gs
ss
popa
lcall
mov
mov
mov
mov
and
daa
inc
sarb
lahf
je
mov
icebp
adc
out
das
jnp
jo,pn
and
or
clc
xor
cmp
fwait
jns
push
xchg
outsb
pop
jl
out
stos
popf
mov
jnp
pop
jno
leave
pusha
idivb
ja
jb
lds
lods
in
inc
pop
mov
stos
or
pop
dec
mov
insb
mov
adcl
cmp
jno
jb
mov
shll
jo
adc
push
pop
jg
push
jge
lds
int3
sbb
or
fsubrp
into
int
loop
repz
dec
daa
lock
outsb
and
sbb
jne
cmp
aas
or
roll
out
pop
sahf
add
roll
add
xor
cli
pop
mov
pop
insb
push
pop
jecxz
push
jb
sbb
jp
lods
stos
dec
rcll
jno
sbb
mov
cmp
es
mov
scas
and
aas
cmp
in
jb
lret
mov
sahf
xor
lcall
loope
arpl
mov
jg
hlt
jp
mov
orb
dec
outsl
stos
sub
negb
notb
test
lods
cmp
stos
inc
sbb
mov
cmpl
insl
cmpsl
xor
pop
shrl
repz
jae
int3
out
push
stc
jno
sbb
fsubs
in
inc
add
ret
inc
pop
sbb
add
xor
cwtl
inc
pop
xor
push
testl
sbb
push
xor
cld
pop
mov
addr16
push
fcomp
popf
and
push
incb
push
mov
push
loopne
in
mov
ror
fidivrs
mov
loop
loop
lret
scas
pop
pop
test
inc
inc
pushf
scas
adcb
aaa
dec
es
movsb
cmp
cmp
xchg
ret
pop
leave
mov
mov
jo
imul
shr
jbe
jecxz
hlt
adc
push
daa
pop
out
push
in
pop
push
mov
inc
jae
dec
xor
lret
stos
cmp
aaa
pop
cmp
inc
push
mov
mov
push
sbb
push
fldl
gs
add
mov
loop
jno,pn
dec
je
into
jno
pop
xchg
add
cmp
aas
xor
andb
fidivl
inc
xchg
mov
repz
test
or
adc
repnz
out
add
cltd
xor
cwtl
in
lock
push
hlt
cltd
inc
dec
fmul
mov
fildll
fdivrs
aaa
insl
enter
or
repnz
fdivrl
shl
fdivr
mov
pop
cmp
jg
out
pop
mov
pop
pop
mov
add
add
and
xor
sbbl
dec
stos
cmp
inc
stos
inc
mov
enter
xor
mov
lret
xchg
movsl
mov
inc
popa
xor
jno
std
cmp
dec
ds
data16
ret
test
lret
jg
in
stc
adc
je
nop
and
enter
sub
mov
cli
subl
xor
xchg
push
dec
jecxz
sub
int3
sub
repnz
gs
inc
cs
xor
test
ret
add
pusha
jo
add
cmp
lds
out
inc
imul
out
jle
rcrb
icebp
mov
jle
loop
mov
inc
sbb
mulb
pop
out
sub
ret
sub
xor
dec
lds
leave
enter
jecxz
ds
ljmp
cmp
xchg
sub
mov
mov
shll
push
sbb
dec
and
je
sahf
arpl
shlb
xchg
mov
mov
sbb
xchg
stos
cmp
or
aad
filds
adc
lock
xchg
inc
incl
lods
jp
mov
cmp
jmp
adc
push
out
outsb
sub
sahf
bound
push
xchg
mov
fidivl
dec
in
mov
ret
outsb
add
imul
inc
sti
fwait
out
insb
xchg
xor
daa
outsl
pop
movsb
sub
inc
jb
mov
loope
scas
ja
inc
push
or
jecxz
or
into
add
ja
pop
test
mov
dec
xor
push
in
call
insl
stc
xor
jg
and
cmp
xchg
sub
xchg
cmp
gs
fidivrl
aad
pop
sbb
mov
push
jno
popa
roll
mov
enter
lcall
sbb
mov
mov
xchg
std
xchg
push
push
xchg
out
cmp
jne
cmpb
push
inc
gs
movb
into
movsl
mov
jns
jnp
add
xor
push
test
pop
in
jl
loopne
mov
lds
jno
lea
push
mov
pop
or
cmp
sbb
sete
push
sbb
or
test
outsb
addr16
xor
mov
cld
xchg
imul
push
fsubr
lods
popa
pop
xor
shrl
rcrb
jp
mov
popf
jnp
jg
iret
icebp
mov
or
pop
jbe
bndstx
inc
leave
mov
scas
cmp
jo
dec
mov
repnz
testl
popa
cmc
xchg
cmpsl
in
pop
adc
push
push
mov
ds
xor
shl
out
dec
and
jns
shrb
mov
out
rcrb
xor
sub
pop
push
jmp
and
push
cltd
bound
lahf
sarl
mov
push
dec
das
rcrb
xor
mov
cmpsl
les
pusha
fstpt
cmpsb
dec
in
nop
pop
add
push
int
push
mov
mov
jp
sbb
pushf
pop
out
mov
lods
cmp
lds
pop
push
ljmp
jne
incb
add
or
insb
inc
movzbl
sbb
pop
sahf
or
outsl
jo
push
mov
jno
adc
pop
divb
jne
arpl
dec
sub
xchg
and
xchg
orb
jb
cs
xchg
mov
shl
ror
and
push
sub
ret
cmp
add
push
mov
push
popa
push
sbb
adcb
jo
push
and
lds
add
lea
jo
js
into
ss
fnstenv
pop
adc
loopne
lret
xlat
rol
inc
jmp
scas
ret
call
cmp
fstpt
or
les
mov
inc
add
std
mov
sbbl
test
in
sub
in
fistpl
int
xchg
sub
cwtl
and
and
jg
xor
mov
pop
push
sbb
dec
stos
inc
mov
in
enter
fisubrs
jmp
gs
sbbb
mov
cwtl
jno
daa
dec
mov
lods
mov
fstpt
dec
push
out
je
push
cmp
mov
aaa
push
ljmp
sbb
dec
and
mov
shll
adc
mov
cmp
mov
inc
ret
cwtl
shll
iret
lcall
std
mov
repnz
push
adcl
push
jae
insb
mov
dec
jae
push
jmp
inc
out
push
lcall
push
lret
jno
stos
sub
push
lods
xchg
mov
pop
aad
xchg
divl
ss
hlt
dec
adc
dec
addr16
sub
jno
pop
fldt
mov
xor
add
popf
lods
roll
cltd
je
sbb
xlat
outsb
jle
cwtl
mov
pop
mov
rorl
call
in
add
fistpl
jae
rcr
lods
xchg
add
sti
push
jg
shlb
xchg
pop
pop
inc
std
nop
es
imul
mov
mov
cmpsb
and
xor
mov
out
les
movsl
pop
adc
cmpl
bound
shr
daa
imul
cli
lea
xor
dec
sbb
into
dec
ret
cmc
fsubrs
push
in
outsb
push
cmpl
mov
or
cmp
cwtl
and
pop
cmpsl
pop
inc
xchg
das
adc
jbe
and
mov
loop
pop
cmp
pop
lret
xlat
pop
movsl
cmp
ret
push
rcr
xor
pop
add
push
cmp
fidivrs
test
testl
pop
into
mov
imul
inc
fstp
jnp
mov
rcr
cmp
shll
in
and
cmp
outsb
lds
jg
bound
mov
or
in
fs
pop
pop
repnz
dec
test
testb
mov
mov
xchg
add
xor
popa
stc
rcrl
fisubrl
into
ss
or
test
popf
mov
push
pushf
outsb
ja
xchg
jmp
xor
test
dec
mov
ficomps
fdivrs
jmp
lahf
or
pop
push
inc
fisttpl
and
sbb
xchg
dec
lods
pushf
add
cmpsb
test
insb
mov
sahf
cmc
add
daa
and
arpl
xor
insl
adc
and
inc
bound
jmp
and
shll
mov
and
mov
fidivl
mov
nop
pop
push
nop
mov
fmuls
jae
lea
cmpsb
cli
data16
test
incl
push
jb
ret
push
loopne
idivl
stc
subb
stc
mov
mov
fcomip
or
cltd
pop
sub
inc
pop
gs
pop
mov
adc
adc
cmp
testb
lcall
pusha
push
or
xlat
scas
or
jecxz
es
mov
mov
jns
dec
daa
mov
cltd
test
fwait
imul
inc
mov
mov
jno
in
inc
lods
arpl
insb
mov
fwait
out
jl
sbb
pop
xchg
aam
xchg
sub
xlat
je
imul
sub
mov
loop
dec
test
orb
aas
ljmp
jns
das
dec
fcompl
add
xor
jno
scas
cmpsb
ficoml
lods
jbe
ljmp
icebp
insb
inc
add
js
sti
jbe
adc
enter
push
ljmp
andb
jo
fs
mov
xchg
pop
and
les
inc
dec
fisubrs
scas
push
jnp
dec
fsubs
jmp
cmpsb
inc
push
xchg
mov
sub
out
or
and
aaa
push
pop
daa
fimull
xor
ds
dec
pop
jmp
loopne
mov
cmp
subl
lods
dec
add
pop
cli
xchg
inc
fcmovnb
gs
int
and
loope
dec
xchg
cmp
cmpb
loopne
sub
mov
gs
dec
adc
cmp
sbb
insl
arpl
call
rcl
xor
sub
mov
scas
rorb
jb
and
mov
aas
out
imul
lret
sar
lahf
pop
imul
pop
push
fimull
faddl
mov
push
mov
mov
xchg
das
inc
pushf
or
sarb
fistpl
int3
jecxz
lock
in
jl
xlat
into
pop
mov
fildl
mov
xlat
ja
or
hlt
data16
xchg
cmp
sahf
sub
popf
enter
xor
testb
cmp
adc
roll
test
mov
mov
test
jns
or
mov
nop
or
dec
or
aad
divb
imull
repz
dec
dec
push
movsb
jle
shlb
ret
mov
shr
pop
sbb
and
cmp
add
js
and
sbb
scas
inc
jne
and
imulb
shl
andl
enter
jae
repz
mov
shrl
cmpsb
mov
add
and
pop
aaa
aad
and
lret
and
fst
push
adc
movsb
xchg
dec
mov
add
in
xchg
jg
push
sub
mov
scas
mov
xchg
mov
cmp
xor
aad
fadds
orl
sub
leave
push
out
add
shrb
jno
stc
jns
mov
dec
shrb
dec
push
pop
aaa
push
or
cmp
cld
push
cltd
xor
pop
subl
repnz
movsb
adc
jmp
fs
roll
nop
pop
xchg
cmp
jle
repnz
add
mov
lret
aam
cmp
xchg
cmp
and
pop
push
cld
leave
inc
arpl
jmp
lret
xor
iret
shr
rorb
aam
sbb
mov
pop
jo
lds
pcmpgtb
fmuls
cltd
mov
jg
cmpsb
xchg
add
mov
and
lock
xchg
fcmovb
sti
cmp
aaa
jo
std
push
push
mov
sti
in
fwait
jl
adc
sub
notb
insl
jg
add
and
push
insb
addb
clc
cltd
xor
sbb
cmpsb
dec
jno
jbe
in
or
pop
mov
ds
lds
xchg
cltd
xchg
aam
xor
or
enter
sbb
nop
cmpps
insb
inc
dec
jle
cmpb
rcrl
cltd
pop
pop
mov
call
ror
mov
rcll
enter
or
clc
insb
fists
push
jl
cmp
bound
dec
lods
dec
push
xor
testl
xchg
add
jl
xor
mov
icebp
mov
sub
clc
repnz
pop
das
dec
outsl
push
jl
adc
push
inc
shr
jnp
push
decl
mov
and
test
inc
das
ret
dec
fisubrs
jmp
popf
inc
jo
adcb
xor
enter
mov
dec
roll
lods
adc
stos
jl
or
mov
and
mov
nop
ja
ret
mov
jge
rcrl
lods
cmp
das
mov
fldl2e
pop
rcl
mov
adcl
pop
jp
push
movsb
jae
pusha
das
xchg
mov
imul
pop
mov
cli
pop
inc
sub
repz
lret
lcall
jp
decl
sub
mull
int
imul
popf
jmp
xchg
dec
icebp
enter
shl
mov
xchg
in
inc
or
mov
xchg
outsb
jg
sbb
cmp
lods
sbb
jecxz
jle
dec
mov
cwtl
mov
rolb
imul
sbbb
orb
pop
mov
lret
sbb
inc
fbstp
jb
fbstp
sub
add
xchg
ljmp
ja
xchg
cmpsb
popf
stos
not
and
xor
sub
xchg
lea
out
rorl
xor
dec
hlt
dec
sbb
in
loop
sbbb
je
or
jb
stc
push
ljmp
pop
out
sarb
ja
gs
xchg
pop
or
cmp
sub
movsb
hlt
ja
in
xor
ret
mov
push
fcmove
fs
popa
add
scas
add
pushf
out
add
daa
ret
sahf
push
hlt
inc
fstpt
fucomp
dec
adc
dec
cmp
dec
sub
aas
pop
sahf
jo
dec
mov
jb
scas
mov
cmc
mov
jae
pop
test
jecxz
xchg
hlt
push
lret
push
inc
pop
fldcw
or
repz
sub
in
shlb
pop
mov
dec
jg
xor
mov
push
fstps
adc
mov
test
call
or
in
push
sub
fstl
inc
leave
add
xor
push
push
fists
push
je
imul
sub
outsb
popf
sbb
or
repnz
fstps
mov
ss
xchg
mov
adc
and
repz
outsb
es
cmpsb
cld
mov
rol
repnz
das
repz
and
into
sub
enter
lret
pop
mov
xlat
je
or
and
aas
sbb
lods
cmpsb
stos
xchg
dec
and
sub
shl
push
mov
ds
in
test
push
addr16
cmp
iret
xor
lea
cmp
scas
mov
dec
fidivrs
xlat
je
sbb
pop
out
push
pop
rcrl
or
mov
mov
pop
add
addr16
inc
push
lcall
or
pop
sahf
out
xchg
inc
aam
xor
aad
imul
leave
fisubrl
mov
aaa
mov
sub
lds
add
sbb
repnz
jg
movl
in
loopne
movsb
adc
cmpl
add
roll
fidivs
gs
test
subl
outsb
imul
imul
mov
push
jp
cmp
insl
mov
lea
xchg
hlt
or
lret
pop
out
cld
jmp
jmp
ret
mov
inc
subb
into
jmp
mov
shrl
negb
movsl
jns
loope
not
out
fnstenv
jns
mov
in
lods
mov
mov
js
aad
shll
out
adc
add
or
cwtl
jb
mov
shrb
sub
dec
push
in
getsec
loope
out
xor
cmp
cltd
jmp
mov
outsl
daa
sbb
scas
jb
add
mov
push
ljmp
mov
jb
add
in
lahf
sub
push
push
inc
ljmp
cmc
mov
sbb
adc
aaa
xchg
pop
in
pop
jno
cmp
xchg
cmp
icebp
add
cmp
xor
adc
add
enter
dec
or
stc
rorl
xchg
pop
lret
hlt
int3
add
ret
mov
cmc
sbb
or
pop
cli
stc
js
sub
cmpsb
mov
mov
stc
fwait
out
inc
push
enter
and
adc
fidivl
mov
jp
lret
lret
pop
movsl
pop
lahf
fcmovb
iret
imul
rcl
out
shr
add
jae
or
pop
cli
das
jno
and
jne
in
pop
out
insw
sbb
aas
push
popa
adc
adc
fisubrl
cmp
rcl
jns
fsubs
or
dec
outsb
cli
out
mov
inc
es
or
push
addr16
mov
cmp
inc
cmc
dec
or
xchg
addr16
mov
fwait
out
test
mov
daa
outsl
and
mull
mov
add
sahf
mov
shlb
roll
pop
clc
pop
xlat
movsb
jne
jbe
jae
cmp
into
stc
push
arpl
dec
call
jns
or
leave
data16
cmp
pop
pop
xchg
add
lahf
iret
pop
pop
clc
orb
cmp
xchg
decl
ljmp
sbbb
xlat
mov
push
jo
add
dec
jecxz
push
iret
inc
add
sbb
add
jp
sbb
pop
out
xchg
add
sbb
orl
mov
sbb
mov
xchg
jns
das
imul
iret
pop
lods
lret
add
sbb
xor
jecxz
pop
push
push
icebp
rorb
popa
sub
push
inc
push
daa
sbb
fmulp
inc
mov
bound
sarb
nop
lods
incl
aas
pop
rolb
push
sahf
adcl
fwait
sbb
stc
lahf
xchg
pop
shrl
xchg
mov
aam
mov
push
ja
cmp
fdivl
pop
xchg
mov
sahf
mov
shrl
shrb
rorl
mov
icebp
xchg
jp
jle
push
movsl
test
sbb
xchg
and
sti
roll
mov
test
stos
mov
cmpb
cwtl
sbbb
mov
xor
sbb
pop
pushf
xor
movsb
push
jnp
push
mov
pop
js
fnstenv
lcall
iret
push
jge
push
push
test
sti
inc
mov
mov
insb
andl
xchg
cwtl
mov
inc
pop
shll
add
repz
and
stos
mov
inc
lcall
popf
test
iret
jbe
jl
out
clc
in
sarb
inc
sub
adc
loope
pushf
jns
pop
pushf
and
jns
adc
xchg
ja
cmp
mov
ret
pop
cmc
push
in
adc
sbb
jns
mov
push
fcompl
movsl
mov
fildl
xor
testl
lret
jmp
jmp
leave
sbb
push
and
push
sub
movsl
fs
in
sub
adc
fiadds
pop
adc
mov
cli
loop
shlb
and
pushl
movsb
rcrl
add
stc
enter
fdivrs
sahf
lret
fbld
jae
sbb
iret
in
in
dec
push
rclb
out
pop
shrb
daa
push
test
loopne
sti
jmp
aad
ret
add
jmp
jae
ljmp
pushf
inc
rcr
jno
imul
sub
lahf
rorl
shll
out
icebp
jg
fidivl
inc
pop
push
adc
clc
out
or
or
add
lock
in
mov
lret
sti
or
and
out
lods
test
in
aaa
pop
imul
lds
jo
xor
xor
jl
aas
daa
stos
push
and
out
dec
xlat
mov
aam
dec
in
inc
lahf
inc
out
jns
int
jno
hlt
mov
mov
into
xchg
aam
in
pushf
adc
cmp
cmp
cmpsb
pop
shl
imull
dec
out
dec
sarb
les
adc
loop
push
fcomi
jb
jl
lcall
mov
push
dec
sbb
dec
outsl
cmp
mov
jb
loope
cmp
ss
bnd
jge
enter
adc
shl
loopne
popf
test
mov
dec
and
gs
pop
and
sbb
outsl
loop
scas
mov
push
repnz
ss
arpl
daa
xchg
add
insl
loopne
fisubs
lock
lock
xchg
pop
dec
push
or
adc
add
imul
insl
adc
fcoms
ja
aaa
test
hlt
sbb
cmpsb
mov
cmp
testb
cmp
jno
pop
mov
mov
data16
fldt
cmp
add
lret
xor
jns
cmpsb
mov
jb
dec
cltd
xor
mov
mov
mov
popa
clc
sqrtps
push
adc
mov
aad
and
clc
sahf
jp
sub
imul
push
je
into
add
jb
push
sub
xchg
scas
jge
jne
push
sahf
arpl
xor
mov
repnz
ror
adcb
scas
nop
lods
cmp
hlt
fnsave
inc
gs
sti
pop
add
test
cmp
cmp
andl
sub
lahf
das
arpl
imul
sub
inc
mov
jmp
xchg
call
pop
jbe
testb
mov
lods
dec
aaa
xor
xchg
jns
and
test
dec
ret
pop
push
jge
les
data16
inc
push
pop
pushf
mov
ljmp
mov
jno
ja
daa
test
fcoms
adc
mov
adc
addb
add
or
pop
scas
push
gs
out
jb
lods
sbb
push
pop
fsubr
mov
jle
mov
adc
cmp
fistpll
insl
test
add
or
mov
shrl
add
inc
sahf
test
push
lahf
ret
mov
push
insl
sub
movsl
and
pusha
dec
leave
test
rcrl
dec
pop
lcall
and
push
mov
and
sbb
add
sbb
ds
stc
outsl
cmp
mov
mov
mov
addr16
jle
push
fldenv
add
pop
mov
fisttps
pop
jns
jge
and
mov
xchg
xchg
mov
push
mov
gs
popa
cwtl
cli
jno
inc
dec
in
mov
add
mov
jp
dec
add
xchg
mov
popa
jae
or
or
pusha
jg
sbb
mov
pop
jp
jno
pusha
inc
mov
out
xor
sub
imul
cmc
pushf
xchg
add
test
or
sbb
fstl
imul
sub
leave
mov
jae
cmp
mov
je
or
pop
mov
mov
fidivrl
and
and
jo
pop
inc
scas
push
into
push
addb
xor
cmpsb
jmp
push
jmp
nop
addr16
adc
adc
stos
mov
enter
add
iret
mov
mov
jge
cmp
outsl
jmp
pop
imul
fdivl
or
inc
inc
arpl
xchg
test
ret
xor
xchg
fldenv
lock
mov
lea
push
call
push
or
dec
push
out
cwtl
das
in
xchg
lcall
inc
popf
sub
cmpb
push
pop
mov
sbb
hlt
nop
rorb
add
or
cmc
lods
mov
call
insb
cli
add
jae
std
gs
sub
jle
add
sbbl
and
sahf
xchg
loop
cmc
ds
or
cmp
sub
sbb
in
cwtl
ret
ljmp
dec
cmp
pop
mov
fisttpll
or
jns
addb
sub
push
pop
hlt
xchg
mov
push
ss
and
test
and
and
jnp
in
pop
jbe
loope
fwait
vunpckhps
das
pop
scas
roll
iret
fildl
mov
jmp
fldt
xorl
inc
fs
mov
shr
lds
cli
leave
insb
out
push
or
dec
mov
inc
cmp
mov
dec
sti
xor
hlt
xchg
and
lock
mov
xchg
push
sbb
orl
data16
push
xchg
sbbl
rclb
stos
sub
fdivrl
repnz
bnd
mov
enter
into
jmp
xor
int
lds
cmp
addl
add
add
dec
decl
ja
fisubl
loope
sti
or
stos
add
test
decl
mov
sbb
pop
negb
mov
sub
xchg
out
pop
cmp
sbb
clc
mov
add
dec
pop
mov
mov
pop
xor
jo
jl
xlat
mov
shll
dec
pinsrw
push
push
cli
fldl
das
or
push
mov
stos
push
sbbl
std
in
enter
jmp
test
addb
xor
push
push
div
fidivrl
and
je
xchg
xchg
mov
sub
jnp
sbb
dec
movsl
mov
xlat
outsb
adc
jnp
aas
push
mov
insb
add
mov
push
lea
mov
inc
xor
movsl
std
fildll
or
clc
cmp
add
inc
fistpll
xchg
sub
pop
shl
adcb
xor
dec
adc
popa
pop
mov
mov
jmp
add
push
and
fisubrl
push
arpl
xchg
mov
iret
fwait
xor
and
es
lods
scas
stc
inc
dec
loop
adc
mov
stc
fcoms
inc
lahf
push
jns
mov
xchg
in
in
push
nop
sbb
lods
push
cmp
jne
jmp
jle
push
data16
aaa
or
mov
cmp
cmp
mov
lods
outsb
push
or
and
test
sti
fwait
add
andb
mov
outsb
push
das
cmp
xchg
cmp
dec
pop
cltd
cmp
popa
jno
dec
add
popa
inc
pushf
testl
sahf
call
cmpb
xchg
xor
lea
xor
pop
dec
cmpsb
lea
pusha
adc
js
add
jno
sub
xchg
call
sbb
jecxz
imul
and
mov
mov
fpatan
lds
mov
pop
push
sti
add
rorb
mov
xchg
or
mov
rol
or
sti
cmp
xor
mov
mov
test
cmp
cwtl
dec
push
and
std
xchg
adc
aaa
sbb
in
or
push
orl
sbb
xlat
xlat
cmc
hlt
cmp
pop
inc
icebp
cmp
faddp
inc
push
xorb
cltd
fisttpl
arpl
inc
lcall
inc
dec
or
pusha
inc
dec
pop
cwtl
add
cltd
or
adc
hlt
bound
sub
mov
cmp
mov
hlt
mov
mov
sbb
and
ss
jb
cmp
cmp
ret
push
mov
sub
bound
rcll
pop
jg
jl
mov
fdivs
jmp
jecxz
lret
fwait
mov
sahf
push
call
shll
push
jle
inc
mov
lock
pushf
int
jns
mov
ja
cli
mov
mov
add
std
xchg
pop
jle
cld
sbb
dec
push
mov
jecxz
sub
sub
bound
mov
push
insl
cmpsb
xor
gs
sbb
mov
aaa
iret
dec
aam
ja
mov
fcmove
cmp
popa
clc
xlat
jmp
mov
and
movups
imul
out
pop
xchg
out
push
movsb
or
daa
mov
adc
mov
mov
cmp
pop
into
sub
scas
out
cmp
es
sbb
push
pop
mov
push
jne
xchg
sub
sahf
dec
out
test
pop
arpl
sub
mov
ja
lcall
in
stos
rcrl
ljmp
pop
fsubr
add
sbb
cli
xchg
movsb
repnz
mov
xor
inc
mov
fidivs
sub
dec
int3
scas
cld
xchg
and
mov
repz
push
hlt
xlat
fsubp
leave
pusha
adc
jge
mov
add
sub
ja
popf
negl
xchg
cmp
and
cmp
pop
mov
lods
jmp
cs
popf
mov
repnz
and
sbb
test
or
push
ja
sub
fs
jp
out
std
nop
xlat
outsb
add
sbb
dec
sub
mov
es
mov
fimull
ss
sti
mov
sub
pop
ja
cmp
stos
imul
push
or
mov
sbb
mov
mov
jnp
into
hlt
mov
pop
sti
out
mov
dec
mov
roll
cmp
cwtl
fcoms
or
stc
fmuls
push
jle
push
leave
jle
mov
xchg
and
mov
lret
sub
jo
clc
int
fldt
sbb
adc
stos
jmp
sub
mov
dec
psrad
jmp
dec
or
outsl
xchg
rcrl
pop
or
pusha
xor
scas
mov
jae
das
scas
mov
adc
xchg
xchg
mov
jno
in
push
mov
imul
xchg
pop
imul
dec
aam
ss
sti
mov
push
out
push
inc
push
mov
cmpb
bound
aad
jno
dec
dec
jb
dec
mov
jno
gs
and
sub
imull
add
sbb
jp
mov
mov
mov
stos
cwtl
mov
push
cmpb
xor
ss
cmpsb
push
mov
xchg
mov
and
imul
or
or
stc
lods
inc
push
inc
leave
iret
sbbb
push
jg
mov
lahf
pop
hlt
and
push
adc
hlt
pop
rorl
xor
pop
out
cltd
cmp
cmpsl
out
sub
test
jp,pt
jo
sahf
sarl
xchg
pop
adc
dec
aas
add
ljmp
add
cmp
jno
icebp
inc
in
ss
sti
nop
push
icebp
jns
sub
fyl2x
and
pushf
icebp
dec
mov
decb
xchg
pop
sahf
lahf
popa
aam
stos
decl
xchg
retw
into
gs
push
in
mov
cs
add
shrl
xor
inc
add
sub
mov
pop
push
mov
push
loope
test
push
pop
sub
fldenv
jo
frstor
ret
mov
sub
sub
jne
xchg
mov
frstor
fmuls
imul
cmpsb
jnp
pusha
sbbl
aad
or
es
ss
adc
test
cmp
xchg
sub
lods
push
jmp
inc
in
mov
mov
ret
jno
fsts
or
sbb
jnp
inc
jecxz
xchg
aad
cmpsb
cmp
sahf
adc
sbbb
jl
out
xlat
outsb
loopne
cmp
cmp
adc
jns
fidivs
mov
xchg
sub
jmp
stos
inc
xchg
pop
call
or
rcrl
adc
cmp
adc
mov
jno
fdiv
xchg
push
mov
inc
inc
jb
xor
lret
sar
add
dec
shlb
sub
pop
lcall
xor
sub
sti
jne
dec
fcomip
out
xchg
nop
xchg
add
and
mov
outsl
testb
iret
icebp
mov
lea
mov
and
xchg
sub
std
mov
push
xchg
cli
std
xchg
in
mov
sbb
pop
stos
inc
xchg
xchg
mov
add
push
pop
and
test
stos
je
aad
ret
out
cmp
les
std
das
std
test
mov
fcomps
adc
stos
aas
mov
cmp
xchg
or
mov
and
jg
ss
ror
ds
sahf
movsl
pop
xchg
pop
add
mov
xchg
test
jl
les
cmp
in
movsl
loopne
jmp
int3
in
mov
mov
mov
adc
insb
xor
lret
movsl
mov
iret
pop
sbb
mov
sbb
hlt
dec
and
xor
popf
xor
ljmp
push
push
mov
or
inc
mov
xor
out
ljmp
pop
icebp
cmp
aas
dec
ljmp
mov
ja
add
imul
xor
and
sub
testl
inc
pop
push
movsl
push
fldcw
jnp
push
lret
addr16
xchg
pop
xchg
rol
cmp
fdivrs
call
ds
inc
inc
fnstenv
in
aam
fistpll
fwait
xor
imul
scas
test
pop
fistl
dec
add
fcom
adc
mov
pop
ljmp
push
js
ljmp
lods
push
je
or
xor
adc
cmp
mov
pop
sub
push
mov
out
inc
fcompl
xchg
ja
pop
push
imul
js
mov
fnstsw
iret
out
fidivs
outsl
xor
je
push
shl
pop
imul
jg
mov
push
shll
cmc
push
jns
popa
add
mov
dec
test
dec
call
js
cmp
in
dec
adcl
adc
test
jb
stos
movsl
add
subb
nop
pop
mov
addr16
movsl
ljmp
test
mov
loopne
pop
inc
sbb
mov
ja
mov
sub
xor
inc
sub
inc
adc
enter
shrl
pop
sub
sbb
jns
gs
mov
adc
ss
in
movsb
outsl
adc
scas
outsb
mov
sbb
push
js
inc
cmp
lret
xchg
insb
push
vphaddbd
mov
cmc
adc
icebp
sub
cmp
adc
addl
fdivp
or
mov
cs
push
pushf
fmull
xorb
xor
cmp
scas
stc
add
jo
lcall
mov
shll
mov
adc
ret
mov
mov
jno
es
push
mov
inc
leave
lahf
cmp
cltd
adc
xchg
mov
repnz
dec
dec
clc
adc
lods
mov
ficomps
cmpsb
clc
xchg
clc
or
sub
outsb
int3
and
add
aad
dec
mov
sub
outsb
xchg
xor
xchg
xchg
cs
push
lods
xor
stos
rcll
add
test
vsubss
adc
mov
jmp
les
sbb
and
sbb
pop
inc
movsl
lds
cld
xchg
shl
mov
add
lcall
fwait
mov
push
dec
in
xor
push
jg
adc
fidivl
frstpm(287
add
mov
mov
roll
stc
adc
out
fsts
xlat
mov
nopl
leave
insl
inc
ficomps
dec
gs
call
movsl
ja
sbb
in
pushf
push
or
shll
xchg
psubq
popf
repz
sbb
pop
pop
dec
iret
dec
cmp
insb
xchg
dec
outsl
adc
cmp
mov
ja
aad
sbb
or
loop
inc
mov
add
jl
notb
xchg
xchg
dec
add
push
inc
clc
mov
int3
movsb
or
jecxz
push
cmp
add
sub
cmc
in
movsl
cmp
mov
int
jae
adc
mov
dec
dec
pop
jnp
jb
push
andb
ja
add
movsb
es
mov
into
jl
push
adc
add
or
cmp
xor
notl
mov
pusha
mov
inc
lds
loop
call
inc
imul
mov
fwait
mov
pminsw
mov
js
push
in
jl
xor
lret
popf
jae
ljmp
push
xchg
mov
fdivrs
cmp
ret
pop
adc
int
xor
daa
aad
mov
jge
mov
xchg
imul
aas
aam
sbb
pop
icebp
cmp
js
adc
push
xchg
xor
mov
mov
clc
mov
testl
mov
mov
bound
lock
push
or
xor
push
dec
xor
mov
adc
add
in
pop
dec
mov
cmp
icebp
icebp
scas
ret
mov
cmp
std
in
sub
in
mov
sub
mov
fadd
dec
mov
push
jmp
or
mov
push
sub
inc
shll
push
das
and
cmp
pusha
stc
out
mov
jmp
mov
outsl
out
mov
roll
mov
xchg
es
out
cli
ljmp
dec
insb
cwtl
lods
popf
outsb
test
cmp
subl
pop
and
leave
cmp
mov
imul
xchg
mov
sbb
pop
adc
sarl
inc
cmp
cmp
adc
not
sub
mov
xlat
sahf
push
xchg
sub
test
jns
mov
sbb
cmc
mov
adc
mov
ret
cmp
fildl
mov
mov
dec
sbb
pop
mov
ds
and
add
in
pusha
aaa
enter
fnstsw
adc
cmc
std
addb
add
pop
cli
fwait
outsb
xor
ljmp
sub
repnz
popf
notl
fsubrs
dec
jmp
xchg
sub
xor
mov
and
test
test
popa
jle
adc
xchg
sub
dec
arpl
jg
inc
fdivl
out
orl
hlt
sub
adc
shrb
inc
jnp
inc
pop
shl
lods
test
cmp
ror
pop
loop
push
pop
xchg
adc
adc
xlat
mov
dec
loop
and
lahf
leave
imul
fldcw
out
adc
sub
dec
and
mov
push
dec
jo
hlt
xlat
outsb
daa
mov
cmc
mov
loop
xor
repnz
out
aaa
sub
cmp
inc
mov
loopne
bound
movsb
and
pop
push
out
insl
push
inc
push
lods
mov
addb
pop
popl
gs
loope
sub
daa
jge
cmp
xchg
push
add
popf
cmp
test
dec
and
inc
aam
lods
sbb
mov
sbb
inc
inc
mov
shlb
lods
leave
jl
mov
stc
and
stos
faddl
jp
ja
lcall
mov
push
imul
cmp
add
aad
pop
xlat
aas
dec
or
scas
pop
dec
xchg
pop
dec
jnp
xchg
and
pop
lock
sbb
ja
mov
fmull
add
xchg
pop
sub
imul
aam
add
inc
cmp
outsl
sub
cmpsb
jns
dec
mulb
scas
and
or
cs
aaa
add
lret
push
sarb
mov
mov
bound
adc
rorl
lret
xlat
scas
mov
add
or
jge
loope
rorl
mov
adc
mov
push
cmp
mov
adc
mov
dec
or
pop
and
cmp
xor
mov
cmp
dec
mov
lcall
sub
xchg
cs
lea
scas
aaa
xor
pop
scas
or
sarl
xor
or
nop
aaa
sub
pushf
xor
mov
jmp
jo
insl
cmpsl
fcoms
fists
push
in
cltd
je
jo
sbb
or
popa
cli
sbb
adc
inc
imul
daa
je
notb
sbb
iret
std
sbb
mov
int3
sbb
mov
movsl
push
xchg
jge
jl
inc
adc
fwait
xor
xor
sbb
xchg
add
adc
sti
cwtl
stos
fbld
jbe
jle
outsb
sarb
out
sub
cmc
ja
lcall
ja
push
movsl
lcall
ret
in
fsubrs
and
ljmp
shll
xchg
push
cmp
xchg
mov
cmp
and
jbe
dec
rol
jg
cmp
insb
pop
mov
fnsave
rol
and
pop
jp
jecxz
xor
fisubs
outsb
ja
xor
mov
idiv
in
inc
xlat
sub
xlat
mov
pop
cmc
rep
ds
ret
es
insb
sbb
int3
push
jbe
jmp
mov
add
cmp
mov
fidivs
data16
cs
jg
dec
adc
xor
test
push
xor
subl
ds
outsb
out
add
jl
mov
or
je
jnp
rcrl
andl
sets
push
call
hlt
jae
push
movsl
and
cmp
aaa
test
jno
sbb
pop
andl
push
dec
popa
inc
or
jg
sub
popf
pushf
jae
mov
outsb
sub
lods
sub
pop
jg
mov
jno
out
rcl
xchg
in
xor
push
cli
jb
adc
dec
jle
pop
mov
push
mov
or
icebp
mov
in
or
ret
in
das
outsb
lods
pop
lahf
addl
push
jno
rcr
pop
lock
repz
movsb
rclb
sub
les
cmp
dec
or
shl
stos
adc
xchg
sub
cmp
dec
orb
int3
mov
or
pop
pop
repnz
inc
mov
xlat
bound
and
push
sub
add
sahf
mov
adc
adc
sti
mov
rolb
rclb
imul
arpl
leave
and
and
out
fisttps
add
inc
xor
das
xchg
jecxz
es
lds
testb
adc
pop
mov
mov
mov
divl
hlt
push
cwtl
pop
movsl
sbb
outsb
loope
call
jl
cmp
loope
jo
push
in
sub
jnp
addr16
push
xlat
jb
divb
scas
movsl
and
jne
adc
mov
je
mov
dec
pop
out
mov
sahf
or
dec
mov
jnp
pusha
jge
or
xchg
pop
pop
mov
sub
cmpsl
pushf
or
or
xor
cmp
jle
inc
rcrl
pusha
das
and
dec
adc
out
stos
mov
jnp
fstpt
add
xchg
icebp
ja
std
add
lea
outsl
call
cmp
and
cmc
mov
jbe
sbb
mov
mov
imul
adc
addr16
lcall
and
inc
movsl
cmp
adc
call
sahf
xchg
es
ss
jg
push
and
inc
ftst
push
mov
test
rorb
test
rep
fdivl
outsl
sbb
cli
push
jne
rcl
std
lds
mov
dec
lods
inc
jle
push
inc
push
inc
mov
mov
sti
add
fbstp
std
dec
jae
mov
add
xor
fcomps
dec
xchg
shrl
out
cmc
push
pop
add
sbb
imul
insb
push
or
mov
or
imul
pop
rorl
cmpsl
daa
or
dec
mov
or
mov
adc
ljmp
mov
popa
fcomps
dec
dec
mov
sbb
xchg
sbb
push
jno
push
loop
lock
and
ljmp
into
inc
popa
lds
push
test
add
push
xchg
or
repz
inc
out
test
pop
notb
jp
sub
dec
mov
add
mov
jge
aaa
adc
xor
test
xchg
add
aaa
fnstenv
or
int3
fnsave
inc
sbb
jp
fsubrs
out
enter
mov
jns
stc
pop
lds
into
enter
lea
fs
mov
fistpl
mov
je
ss
xchg
push
push
mov
rol
stos
lret
test
sbb
sbb
jno
xor
xchg
cwtl
shlb
xchg
fcompl
inc
dec
pushf
testl
add
dec
mov
xchg
lock
testb
call
test
stc
nop
jb
das
les
mov
push
add
sti
cmp
jmp
popf
pop
ret
pop
push
mov
inc
into
xor
fnsave
push
sbb
mov
push
pop
xor
pop
out
jecxz
clc
mov
xorb
nop
lea
cmpsb
pop
dec
in
aad
movsb
sbb
mul
test
or
jne
dec
movsl
ret
adc
lock
iret
mov
mov
out
and
mov
push
lret
and
movsb
das
fldl
jg
aam
jp
ja
fists
js
jae
cwtl
aas
mov
mov
xchg
sub
sbb
std
mov
jmp
jnp
popa
and
stc
xorl
xchg
insl
mov
mov
mov
test
jp
fdivs
xchg
mov
pop
and
repnz
pop
add
test
lock
mov
sti
xchg
addb
sbb
std
dec
jp
movsl
add
aaa
lcall
or
aaa
arpl
leave
sbb
push
xchg
mov
ja
outsw
add
jl
mov
sbb
icebp
ret
xchg
jae
cwtl
das
pushf
xchg
notl
cmp
fucomp
pop
jno
pop
jns
lods
icebp
mov
pop
repz
xlat
mov
add
test
mulb
test
in
jno
dec
and
and
and
dec
lods
inc
insb
cmp
dec
mov
and
mov
lock
pop
adc
rclb
xor
jecxz
sahf
fldenv
enter
xor
es
xchg
mov
pop
insb
mov
clc
mov
or
jg
dec
jecxz
loopne
and
divb
add
pop
int
clc
arpl
cmp
jb
xor
xorl
add
jns
fistl
adc
clc
push
sbb
add
mov
push
insl
inc
stos
outsl
xchg
es
dec
cmpsb
cmpsl
ret
and
mov
fs
insb
das
lea
push
mov
pop
inc
xchg
and
insl
adc
mov
push
out
inc
xchg
xor
lods
and
loopne
ficomps
fisubrs
or
dec
push
ret
call
loopne
popl
pop
mov
sbb
or
test
mov
dec
movsl
pop
sub
ss
jb
xchg
scas
mov
nop
or
and
int
lret
repnz
mov
adc
sub
add
stos
mov
ja
xchg
icebp
adc
push
push
inc
pop
cmp
loopne
jo
mov
inc
mov
iret
mov
push
xchg
out
sahf
lods
sbb
xchg
std
add
pop
ljmp
fadd
rol
lret
mov
clc
loop
movsl
fistpll
lret
jl
cmp
sbb
jb
mov
addb
cltd
jno
mov
xchg
adc
xchg
pop
shlb
out
aad
mov
xor
cmp
mov
fprem1
fiaddl
cmp
sti
jl
mov
or
push
enter
movq
pop
sbb
sub
cmp
mov
push
pushf
pop
or
adc
add
add
sub
inc
xchg
mov
lock
pmaxsw
xlat
mov
movsb
scas
cmc
xor
lahf
imul
xchg
ja
enter
outsb
mov
cmpsl
adcb
or
sub
sub
js
dec
push
jno
add
cwtl
mov
cmpsb
enter
adc
mov
pop
mov
sub
mov
les
nop
xor
sarl
adc
dec
xor
jns
ljmp
mov
pusha
outsb
nop
add
dec
or
mov
or
sti
imul
or
xor
shr
jb
mov
test
adc
mov
repnz
inc
adc
fwait
push
les
imul
jne
adc
xor
jno
mov
cltd
je
or
lret
shrb
inc
adc
dec
xchg
push
les
mov
xchg
stos
push
cmp
std
aam
ja
shll
jb
adc
ret
adc
pop
push
and
les
xorl
outsb
xchg
push
mov
cli
ret
hlt
pop
movsl
mov
inc
adc
sbb
sub
mov
dec
push
roll
inc
mov
imul
push
insl
ja
and
inc
out
shl
sub
adc
jae
sti
mov
daa
vmovmskpd
iret
mov
pop
and
scas
pop
lock
sub
mov
enter
add
in
or
mov
add
mov
adc
popa
push
xor
stos
mov
out
sub
int
sub
xor
pop
ljmp
outsb
dec
in
push
pop
xchg
fiaddl
xchg
pop
jl
negl
push
popa
lods
inc
dec
mulb
push
mov
lock
inc
sub
gs
jg
ret
movsb
add
rcrl
roll
xchg
mov
popf
and
mov
sbb
sub
and
inc
or
xor
cmpl
stos
je
mov
or
sbb
inc
mov
dec
push
cs
into
je
adc
push
sub
inc
stos
xchg
mov
test
stos
jae
mov
daa
inc
cmp
ja
mov
arpl
rcll
mov
xchg
rcrb
mov
sahf
les
mov
add
and
sbb
add
mov
push
jae
lcall
out
lcall
inc
aaa
fs
divl
mov
jecxz
or
xchg
jl
jmp
mov
cmpsb
sub
push
rcrb
cmpsb
xchg
mov
das
and
adc
ds
mov
xor
inc
xchg
out
repz
xor
in
push
xorl
sbb
test
addr16
movsl
mov
mov
xlat
mov
rol
fdivrl
push
and
cmpsl
dec
adc
sub
and
mov
arpl
loope
jl
call
outsl
incl
push
mov
inc
in
test
out
test
mov
aaa
stc
or
sub
jl
dec
xchg
pop
addb
sbbl
repnz
sbb
scas
jns
mov
enter
insb
mov
push
imul
fs
daa
add
pop
insb
dec
pushf
sbb
aas
pop
pop
cli
inc
int3
pop
cli
push
or
repz
or
mov
or
dec
add
cmc
sahf
out
cltd
xor
ljmp
repz
popa
or
invd
scas
pop
sub
rorl
xor
jmp
jg
jg
addr16
ret
popf
jne
mov
pop
push
out
adc
int3
popw
shll
mov
add
sahf
sbb
cmpl
imul
ds
mov
xor
outsb
mov
inc
pop
inc
pop
mov
pop
jbe
add
mov
or
or
jnp
jns
pop
pusha
test
mov
inc
or
imul
push
rorb
jnp
sub
or
icebp
or
sub
fwait
jl
into
jle
adc
mov
in
mov
dec
jmp
jp
pslld
sub
mov
ficoml
movsb
pop
movb
push
jmp
sub
jno
cmp
mov
mov
mov
push
adc
mov
pushf
popa
xchg
or
popl
fdivrl
mov
scas
repz
out
rcll
mov
pop
mov
fistps
lcallw
cmp
mov
dec
jecxz
xchg
sub
out
repnz
lret
mov
icebp
dec
movsl
and
add
out
xchg
in
test
ss
pop
jne
insl
cmc
push
xor
jb
pusha
lock
push
or
jne
jl
stc
and
push
or
out
mov
aas
mov
sbb
mov
insb
filds
cmpsl
and
cld
jle
and
sub
fsubrs
pop
mov
adc
jb
cmp
add
loope
loop
adc
roll
and
in
rorl
add
dec
dec
notb
mov
jns
imulb
sub
imul
rclb
cwtl
es
outsl
loopne
sbb
andb
add
cmp
or
mov
mov
lock
je
and
mov
adc
lock
jg
movsb
mov
add
push
nop
notb
fcomps
inc
divb
inc
cmp
cmp
mov
aas
jno
jge
arpl
jne
psadbw
repz
aaa
or
jmp
sbbl
rol
or
pop
js
pop
and
push
flds
data16
mov
int
std
rolb
mov
sub
pop
pusha
testl
pop
push
jb
mov
push
jns
lret
jp
adc
inc
cs
pop
push
fcompl
int
xor
popf
ljmp
pushf
or
adc
rcrl
add
and
ret
push
ja
or
cmp
pop
int3
je
xchg
xor
mov
push
or
lcall
ds
loop
mov
flds
in
ret
xor
pop
mov
test
push
mov
imul
hlt
scas
xchg
add
add
xchg
xchg
sbb
je
cmp
add
pop
cmp
inc
push
idivl
leave
das
dec
xchg
sbb
in
jmp
mov
inc
rclb
enter
sub
lahf
testb
andb
push
aam
inc
jmp
cmp
fnstenv
pusha
test
mov
stos
loop
dec
cmp
mov
lods
jns
outsb
jl
aaa
lods
fldt
add
push
jne
push
and
push
mov
mov
and
call
dec
push
jbe
fcomp
mov
orl
and
aad
xor
inc
jnp
incb
dec
or
arpl
test
movsl
aas
aam
push
fyl2x
mov
addr16
or
mov
mov
arpl
into
and
imul
mov
call
repnz
lret
bound
outsl
dec
stos
lcall
xor
adcl
in
inc
out
cmp
dec
sub
xor
arpl
imul
imul
dec
aam
push
push
adc
movsl
pushf
xchg
test
pop
out
sbb
dec
subl
ja
sub
mov
scas
notl
lret
or
in
outsl
daa
inc
repnz
out
pop
shll
mov
pop
adc
ljmp
mov
lret
fidivrl
add
cld
shrb
movsl
rclb
ja
aaa
daa
data16
dec
sbb
sub
push
jbe
push
and
pop
das
jno
cmp
sbb
pop
loop
int
rcl
dec
mov
aaa
mov
mov
jo
xchg
xchg
gs
lea
fcmovbe
push
mov
xchg
push
and
pop
push
jbe
aam
insb
ficompl
or
repnz
jecxz
or
imul
outsb
enter
push
loopne
jnp
adc
int3
push
jbe
mov
and
push
push
andb
or
ss
inc
int3
cmovs
mov
sbb
es
dec
sub
dec
push
in
dec
mov
mov
pop
mov
jmp
hlt
fdivrs
pop
sub
xchg
pop
shll
sub
mov
loopne
dec
rclb
sbb
popf
fldl
sti
adc
mov
aas
dec
loopne
jnp
pop
push
dec
mov
outsb
fisttps
testb
and
out
cmp
jecxz
cltd
hlt
push
add
push
jb
jg
enter
cld
mov
nop
daa
iret
test
and
sub
bound
jmp
test
mov
fisttps
dec
sbb
fbstp
pusha
push
add
hlt
es
pop
mov
sub
adc
mov
push
dec
and
mov
sahf
cld
push
add
fisubrs
popf
data16
mov
scas
inc
call
xor
or
xchg
jb
insl
nop
pop
mov
jg
mov
add
jbe
repz
mul
in
push
xchg
sub
xlat
ss
inc
push
mov
add
sbb
mov
out
test
fidivl
mov
xor
add
mov
movsl
jne
sub
inc
flds
mov
popa
cli
insb
pushl
push
pop
sbb
adc
inc
add
pop
enter
sbb
std
leave
pop
add
mov
fwait
in
push
aam
mov
cli
mov
repz
dec
mov
dec
add
or
push
cld
rorl
sbb
mov
daa
dec
adc
xchg
mov
dec
pop
mov
outsl
gs
ret
mov
xchg
mov
dec
test
mov
pushf
ds
loope
insl
jecxz
arpl
or
cs
sub
inc
popf
test
pop
sahf
inc
push
push
jo
test
repnz
fisttpll
ja
vmulss
hlt
iret
sub
repnz
cs
jb
and
pusha
into
dec
inc
xor
sbbl
inc
loopne
dec
movsl
sahf
mov
sub
mov
int
push
fs
adc
inc
mov
jl
push
lods
addr16
xor
add
push
pop
into
loop
fsubrs
xlat
mov
loope
xor
addb
repz
into
insl
xor
lcall
pushf
int
test
mov
into
xor
add
test
fiadds
scas
mov
jb
shrl
jae
xchg
cwtl
inc
mov
stc
or
or
cmc
jb
insl
sub
push
movsl
push
mov
and
jno
mov
xchg
xor
push
inc
jle
cmp
cs
cmp
xchg
mov
or
js
cltd
rcll
std
or
mov
push
sbb
jne
mov
imul
add
sbb
and
sbbl
notb
jnp
mov
pop
jnp
in
xchg
test
into
pop
cmc
sbb
xor
dec
cld
inc
jnp
decb
dec
lcall
in
mov
xor
stc
nop
xorl
es
call
std
xchg
fisubrs
mov
sbb
xor
mov
in
inc
fldt
jecxz
les
popa
enter
fisubl
push
cmp
add
stos
mov
shll
pop
cmp
jge
mov
call
dec
mov
mov
add
fisubl
cmc
jbe
dec
test
xor
pop
mov
mov
xor
jge
pop
push
inc
sahf
or
sbb
xchg
dec
inc
fdivrs
aam
cld
sub
mov
leave
enter
fistps
test
fadd
mov
dec
push
call
rcrb
in
ret
and
push
stos
data16
mov
pop
jge
nop
or
cmp
pop
lock
test
out
fbld
xchg
aad
lahf
stos
jns
sbb
push
mov
ja
mov
mov
dec
mov
pop
jl
lea
mov
push
cmp
jae
jne
sarl
push
gs
dec
xor
lds
loope
rcl
mov
jb
mov
fdiv
sub
lcall
lret
loope
cld
ror
mov
lret
dec
repnz
mov
cmp
mov
mov
shl
xchg
mov
mov
push
call
add
outsl
sahf
andl
xchg
movsb
shll
mov
in
cmc
pop
jo
jle
cmp
fadds
sub
ret
xorl
xchg
add
sub
adc
jne
jge
dec
shl
repz
sbb
mov
fildl
or
cmpl
mov
xchg
lea
sbb
adc
adc
pop
negb
push
and
mov
fistpll
in
sarl
jns
inc
lret
test
scas
popf
jne
jmp
and
add
popa
clc
fimuls
das
je
aas
lret
mov
or
push
lret
bound
subb
aas
inc
inc
mov
fxch
pusha
jecxz
fdivl
add
xor
or
cmp
adc
in
inc
xor
cmp
xor
push
inc
sbb
ljmp
mov
lods
jns
or
movsb
out
mov
jbe
or
pop
sub
ljmp
aad
sbb
jg
addr16
roll
xchg
pop
movl
xchg
in
sti
scas
push
sbb
and
sub
jecxz
and
jg
mov
icebp
cmp
mov
test
test
sbb
mov
jne
loope
int3
stos
shl
fcmovb
ret
xor
inc
dec
repnz
ja
lret
gs
sbb
clc
cmpb
xor
rcrl
ds
in
mov
cld
or
xor
icebp
cwtl
gs
xchg
leave
aaa
mov
dec
sbb
in
shlb
je
xchg
adc
xor
incb
xor
into
into
mov
push
xorb
and
and
add
loope
jns
ljmp
stos
mov
push
test
ljmp
pop
mov
ret
out
sub
cmc
lcall
jbe
stos
xor
int3
jmp
push
mov
or
rcrl
inc
into
mov
loope
dec
pushf
js
maxps
push
jo
add
ret
push
scas
mov
rcrb
int3
arpl
stos
fnstenv
nop
lods
pop
xchg
pop
add
dec
repz
xchg
loope
enter
loopne
pop
and
mov
pushf
mov
out
dec
dec
paddb
movsb
lcall
imul
mov
push
in
cmp
xchg
cmp
jmp
xchg
jmp
adc
pop
aas
pop
sub
cmp
aad
inc
cmc
lods
inc
mov
sub
lahf
adc
xchg
test
rclb
mov
loop
clc
mov
adc
sub
pop
mov
imul
pop
adc
fdivp
add
cmp
mov
mov
mov
xchg
adc
mov
ucomiss
dec
or
sub
add
dec
pushf
test
sti
xchg
and
mov
int
inc
sub
xlat
add
inc
or
aaa
es
xchg
jb
popa
movsb
mov
lds
pusha
andb
and
mov
cld
mov
cmp
mov
mov
ss
cmp
insb
push
in
dec
mov
add
repz
dec
aad
add
stos
pop
filds
dec
popa
fdivl
stc
xchg
fscale
sbb
cli
sbb
test
mov
or
aad
cmp
mov
lahf
push
imul
imulb
inc
mov
out
lea
or
aaa
adc
push
mov
mov
addb
lods
mov
cs
roll
in
add
jp
test
in
sti
jecxz
jp
mov
or
and
push
push
add
add
ss
outsl
sti
mov
imul
and
sub
ret
jl
xchg
pop
iret
insl
outsl
mov
fcoms
sub
scas
mov
mov
leave
inc
lahf
jne
mov
insl
jle
pusha
nop
push
mov
cltd
sbb
cmp
mov
repnz
cmc
outsb
in
jl
xchg
cmc
jp
xchg
sub
movsl
push
mov
mov
ljmp
mov
mov
or
cltd
or
inc
mov
dec
and
int
fsubs
adc
shlb
inc
jecxz
iret
pushf
jle
out
shrl
add
pop
xchg
insb
sub
cmp
mov
mov
rcll
into
mov
negl
arpl
data16
pop
dec
adc
adcl
insb
xchg
inc
and
gs
push
shr
push
push
out
jnp
push
sar
lods
and
jnp
xchg
pusha
jle
sub
movb
popa
cmp
fcompl
mov
xchg
loopne
sub
inc
dec
movsb
cmp
jae
mov
and
cmc
int3
or
xor
add
fiadds
out
ljmp
jb
sub
inc
sbb
xchg
inc
push
lret
mov
push
xchg
das
adc
es
or
and
mov
push
add
je
stc
mov
mov
mov
or
jge
jg
mov
or
cmp
dec
stos
int
pop
mov
je
sahf
xor
pop
dec
jnp
hlt
push
lock
or
andl
xor
data16
or
and
pop
pop
pop
stos
or
push
mov
aas
mov
icebp
fucomi
push
ljmp
outsb
loope
xor
movsl
pop
or
pop
stos
shlb
leave
cmp
movsb
dec
cmpsb
add
rorl
fidivl
xor
call
adc
test
push
mov
pop
pop
xor
jb
cmp
popa
sbb
xchg
or
pop
es
nop
jnp
mov
mov
test
xchg
inc
jb
jp
outsb
test
mov
fs
pop
repnz
je
stos
pop
mov
ret
pop
rolb
cld
and
imul
pusha
sub
insl
out
pop
out
jge
gs
cmp
test
mov
adc
pop
dec
mov
sti
dec
inc
add
adc
mov
mov
or
push
js
rcrb
dec
repz
subl
xlat
and
sbb
lcall
sbb
and
ss
sbb
jae
ss
inc
lods
and
mov
mov
aam
out
ljmp
pop
pop
cmp
aaa
lahf
push
jbe
xchg
sbb
mov
cmp
xor
aas
push
xchg
sbb
sbb
cmpb
inc
in
xor
test
cmp
inc
gs
dec
repnz
xchg
mov
inc
int
adcb
ret
add
add
dec
sbb
mov
bound
mov
xorb
pushl
mov
int
xchg
pop
xorb
mov
or
mov
js
shl
adc
enter
insb
popf
decl
xor
push
lods
cltd
js
mov
sbb
test
or
aad
pop
fcom
push
push
hlt
push
cmp
test
add
jno
jp
or
xchg
xor
pop
add
repz
pop
test
lcall
sub
test
pop
imul
enter
xor
cld
mov
mov
stos
out
into
pop
adc
int3
mov
lcall
mov
sub
js
adc
and
or
and
push
jmp
jecxz
inc
jno
arpl
ss
sub
or
lahf
add
insl
xor
mov
or
pusha
sub
xor
xchg
aad
dec
nop
mov
and
stos
sub
xor
adc
imul
adc
xor
nop
std
sbb
int
push
mov
pop
mov
jnp
ret
imul
or
mov
lret
jb
js
push
jns
hlt
test
cwtl
stos
sbb
loope
sub
jnp
xor
ja
fildll
mov
das
and
sub
xor
sub
lahf
scas
enter
push
fwait
movl
out
cld
jo
scas
jb
pop
xchg
incl
fistpl
pop
adc
sub
add
cmc
adc
xchg
mov
aaa
mov
push
ljmp
call
inc
xor
cmpsb
arpl
sti
jle
xlat
cwtl
in
xchg
sub
outsl
shlb
ret
dec
xor
dec
das
jb
dec
icebp
aad
insb
adc
mov
out
jl
arpl
sbb
dec
aad
sahf
pop
dec
cmpb
je
in
mov
sbb
cmp
sub
leave
pusha
mov
cltd
into
loop
mov
push
jecxz
push
call
or
pusha
push
mov
sti
ss
call
inc
iret
inc
pop
mov
adc
int
mov
mov
pop
pop
bound
sub
push
aad
scas
loope
lahf
call
loope
out
std
les
insl
jg
cmpsb
std
gs
loop
mov
mov
inc
jmp
push
lds
fwait
movsb
inc
or
dec
pop
or
repnz
imul
jecxz
mov
stc
fbstp
repz
sbb
enter
adc
adc
push
insb
mov
scas
dec
mov
test
mov
les
inc
dec
mov
les
mov
iret
mov
shl
sub
mov
sarl
push
jno
cmpsb
dec
leave
int
je
jge
lods
cmp
enter
jbe
sub
or
jnp
out
maxps
mov
xor
xchg
cwtl
std
cltd
stc
loope
or
call
mov
sti
repz
pop
cmpsl
cltd
pop
lahf
inc
lea
mov
mov
scas
js
mov
fistl
cmpl
sbb
jns
repz
test
into
xchg
scas
sti
pusha
xor
sbb
imul
outsb
xor
inc
mov
pop
adc
sub
shrl
sub
dec
xor
mov
cwtl
xchg
adc
out
jmp
and
rorb
sbb
jae
insb
xor
leave
xor
aad
mov
sub
inc
pop
testb
imul
mov
inc
mov
push
mov
out
lret
fdivr
bts
lock
push
cmp
sti
mov
push
add
push
mov
in
enter
add
cmpsl
add
mov
adc
hlt
sbb
xchg
cmp
lcall
add
push
aaa
push
je
out
test
inc
movsl
cmp
insb
xchg
sub
inc
fsubr
insb
daa
sbb
sbb
subb
imul
fnstenv
in
xlat
sar
aas
add
cs
jne
adc
hlt
dec
pop
cli
in
movsl
and
cmpsl
out
xor
sbb
or
xchg
mov
pop
pop
push
inc
mov
lcall
sarb
leave
cmp
pop
shll
out
aas
mov
lods
mov
fucom
sahf
push
int3
lea
callw
xchg
push
or
test
andl
insl
leave
lcall
and
and
sahf
and
ljmp
jne
sbb
cmc
aam
or
cmpsb
jo
push
push
mov
xor
xorb
and
sub
lahf
pop
lods
fstpt
in
jmp
enter
std
push
push
inc
sbb
ss
and
pushf
push
int3
mov
movsb
xchg
out
xorb
rclb
jge
sbb
pop
jb
in
fs
mov
pop
sbbl
mov
inc
in
shll
cwtl
sti
sub
jbe
loopne
mov
mov
lret
notl
aam
pop
shl
popa
mov
mov
xor
int3
adc
scas
or
cmp
mov
into
sbb
dec
mov
and
inc
out
mov
mov
cmp
fcomps
movsb
sbbb
lds
scas
fisubl
xchg
pop
js
popa
pop
xor
out
mov
push
adc
cmpl
pusha
mov
jg
cld
mov
repnz
andb
daa
insl
call
xor
mov
jbe
stos
mov
decw
mov
test
repnz
push
mov
dec
int
jp
rclb
in
imul
fstp
andb
in
jo
faddp
test
dec
or
pop
adc
popa
jmp
pusha
push
mov
sub
cmc
pop
orl
or
xchg
cmp
enter
sbb
push
lds
jp
stos
xor
dec
mov
leave
xchg
sub
stos
mov
sbb
icebp
movsl
shrb
sbb
and
cmp
fwait
jg
lret
inc
or
popa
and
sub
push
mov
jl
negb
movsl
popf
das
cld
sbb
fwait
mov
test
mov
test
push
mov
ljmp
cmpsb
arpl
adc
int3
jbe
iret
jbe
push
push
fstps
dec
pop
movsb
dec
sbb
outsl
das
mov
xchg
add
lret
sahf
cli
sbb
push
mov
push
add
jmp
punpckhdq
dec
sub
scas
lods
pop
push
stos
lret
mov
dec
vmovntpd
cmp
into
dec
outsb
in
jl
into
insl
mov
je
insb
je
ret
clc
pop
cli
inc
addr16
push
out
jle
lock
or
dec
mov
jp
int3
loop
dec
filds
hlt
dec
mov
decb
loopne
mov
das
and
out
rcrl
or
jbe
pushf
cs
inc
cmp
adc
adc
hlt
pop
xor
and
jns
jnp
dec
loopne
fwait
cmp
lds
mov
dec
pop
xchg
adc
adc
jmp
push
cmp
pop
sub
push
lahf
jbe
into
add
cmp
sub
faddp
push
in
mov
repz
lcall
jge
add
and
ljmp
jno
fimull
std
push
dec
inc
mov
repz
cmc
adc
or
inc
cmpb
dec
sub
push
into
xor
adc
jbe
call
roll
iret
pop
shrl
add
and
mov
ret
and
mov
call
or
orl
je
xchg
xchg
and
out
in
inc
pop
inc
sbb
iret
bswap
popa
subl
movsl
call
inc
xor
lahf
mov
mov
inc
fld
mov
pop
mov
xor
lcall
cs
inc
ss
jg
mov
pop
xchg
fsubs
movsl
cld
test
scas
inc
dec
and
pop
insl
int3
pop
sbb
pop
sbb
mov
mov
mov
jns
shrb
das
or
insl
sahf
shll
insb
adc
aaa
rcrl
xchg
movsl
or
stc
mov
stc
add
push
jo
sub
repnz
and
xchg
sub
push
mov
jne
test
inc
in
icebp
cmp
jns
mov
lcall
sub
test
mov
jbe
imul
xchg
nop
mov
ficompl
add
fadds
cs
daa
pop
rcll
lds
or
jecxz
aad
jns
add
or
aas
es
xor
faddl
scas
aaa
or
insb
xchg
inc
popf
and
insb
xor
aam
mov
push
sub
add
rcrl
lahf
out
bound
add
lods
dec
test
xchg
xchg
in
rorl
adc
sub
out
inc
in
lea
shll
rcll
cmp
loopne
rolb
mov
test
loope
sahf
sbb
shl
repz
sbb
cmp
sbb
pop
xor
cmp
lea
cmp
pop
jg
dec
imul
fnstsw
fidivs
jb
inc
sub
cld
or
cmc
in
sub
outsl
fsts
push
sahf
in
pop
and
rcrb
xchg
ret
fmull
sbb
and
inc
in
je
in
fdiv
mov
movsl
std
jbe
cmpsl
mov
inc
int3
rcl
insb
dec
adc
add
xlat
pop
push
dec
adc
jge
pusha
mov
jecxz
sub
dec
pop
mov
fcmovu
pop
add
sbbb
ja
push
xorl
mov
fwait
inc
loope
pop
and
sbb
cwtl
jae
shll
push
testb
push
push
mov
xchg
push
mov
dec
jmp
inc
out
push
das
orb
cmp
xchg
jmp
out
xor
cmpsb
mov
mov
pop
mov
lock
outsl
lock
sub
or
stos
add
in
int3
dec
or
jge
ldmxcsr
scas
inc
nop
cld
lods
fcmovnu
mov
fs
std
mov
inc
addr16
fdivl
add
pop
cs
in
std
out
cmpsl
cwtl
in
rcll
sub
adc
imul
test
popf
stos
jnp
shrl
icebp
push
pop
mov
xchg
lcall
insb
push
imull
sub
inc
data16
sbb
and
xor
js
into
faddl
dec
mov
dec
sub
lds
jecxz
or
push
jle
and
mov
sbbl
fdiv
repnz
aaa
sbb
es
pop
add
scas
mov
mov
aam
mov
mov
xchg
push
rcrb
inc
pop
pushf
cli
sub
sub
sbb
iret
xchg
ss
out
in
sub
lret
jmp
or
mov
cld
or
stc
mov
mov
test
or
hlt
xchg
sub
les
das
cmp
pop
outsb
and
pop
jns
js
adcb
incl
or
pop
dec
daa
adc
dec
mov
push
mov
shrb
or
or
sub
xchg
addb
cld
repnz
loopne
pop
into
int
cmp
ret
mov
hlt
or
cmp
cmpb
fcompl
cmp
pop
pop
rclb
das
std
dec
mov
clc
adc
and
dec
loopne
aad
insb
mov
sbb
das
movb
rol
mov
dec
lcall
outsl
add
ret
mov
or
out
repnz
leave
jns
cli
mov
add
dec
pop
adcb
sub
cmp
mov
faddl
ret
jmp
bound
sbb
inc
stos
add
push
leave
call
shlb
jo
or
add
cmp
lahf
pop
fistpl
sub
ljmp
sbb
mov
movsb
sti
rcl
outsl
push
or
sub
scas
dec
sub
pop
aaa
into
dec
fildl
mov
sarb
inc
rolb
jo
repz
rolb
add
mov
mov
dec
in
mov
jns
div
or
mov
int3
jle
inc
pusha
jmp
fstps
push
xor
xor
in
push
push
hlt
mov
inc
xchg
stc
fdivs
pop
xor
add
dec
pusha
xor
xchg
inc
sbb
ds
outsb
lahf
popa
outsl
add
mov
rdpmc
std
sub
inc
fdiv
dec
rcrl
push
pushf
cli
mov
movsl
xchg
xor
fwait
mov
fwait
out
mov
mov
inc
nop
inc
push
push
stos
adc
jns
jno
inc
dec
dec
movsb
ja
pop
jno
ds
dec
mov
aaa
mov
and
mov
js
dec
test
aaa
into
cltd
mov
and
jl
les
sbb
jbe
jecxz
cmp
pop
lock
push
imul
loope
xchg
xchg
adc
test
enter
into
test
stc
ljmp
fcomps
sahf
test
mulb
mov
pmulhw
cmp
lock
aam
mulb
pop
or
fnstcw
mov
out
pushf
jle
scas
mov
popf
jp
aaa
xor
mov
mov
xchg
add
or
popf
jmp
or
pop
aad
lods
in
mov
daa
stos
inc
push
xchg
lret
xor
xor
gs
sbb
mov
lret
or
push
add
adc
jmp
mov
inc
sbb
jae
mov
xor
ret
cmpl
jmp
andl
sub
imul
dec
jmp
inc
daa
cmp
push
stc
stc
inc
push
fisubrl
stos
pop
fldenv
xchg
imul
daa
out
mov
mov
add
jl
int3
rcrl
outsb
stos
or
orl
mov
test
xor
imul
jmp
xchg
clc
mov
mov
jle
mov
lcall
dec
lahf
or
in
sbb
pop
stc
push
int3
cmp
out
pop
mov
mov
lods
flds
cmp
push
fisttpl
xor
out
and
enter
xor
data16
les
add
cwtl
jmp
xor
clc
add
mov
jge
arpl
inc
loopne
subb
sbb
arpl
cmp
rol
pop
adc
push
xchg
hlt
js
cmpsl
pop
sbb
xor
aad
xchg
push
inc
aas
pusha
stc
pop
mov
cmpsl
iret
or
lock
lahf
inc
rcll
inc
bound
es
outsl
pusha
mov
xchg
es
inc
sbb
mov
insb
ljmp
push
xchg
push
jb
ja
sub
xor
stos
flds
loope
hlt
adc
sbb
iret
sbb
mov
js
inc
pusha
push
xor
xchg
cmpb
sub
loopne
lods
int
mov
push
inc
inc
push
jmp
jecxz
jo
cltd
mov
dec
lds
fisttps
imul
icebp
cli
adc
xchg
mov
pop
or
scas
movsl
push
xchg
push
cmp
out
aaa
lea
adc
loop
or
jne
fcom
or
push
test
xchg
pop
mov
adc
add
xchg
pop
pop
pop
cmc
mov
sbb
mov
xchg
in
sub
xor
stc
in
adc
add
das
mov
in
mov
popa
loop
dec
loope
cmpsl
arpl
add
and
pop
out
ds
xchg
and
orl
xor
in
xchg
push
xor
mov
and
cmp
jbe
mov
rcrl
jbe
cwtl
jno
mov
ljmp
lods
scas
call
xor
and
xchg
jo
or
sub
mov
rcll
push
in
jl
scas
lods
push
jo
or
jne
sbb
add
mov
add
sub
adc
sbbb
icebp
jnp
adc
sahf
and
inc
stc
call
push
outsl
outsl
fstpt
addr16
add
jmp
xor
adc
xchg
in
stos
outsb
das
jb
or
fs
divl
fcomps
mov
sbb
or
test
jbe
mov
gs
imul
sub
xor
clc
cmpsl
pop
inc
mov
jns
dec
loopne
fistl
xor
jbe
ljmp
ds
jne
das
cmpsl
cmp
jle
mov
or
ret
jnp
int
in
xor
push
hlt
lods
jg
push
repnz
xchg
xchg
clc
xlat
xorl
aaa
jl
in
sbb
sahf
pop
cltd
rcrb
jnp
nop
loopne
pushf
subl
mov
out
add
lret
sbb
out
std
sbbb
ret
testb
or
sub
cmpl
ja
jnp
add
add
cmpsl
jb
mov
sub
ds
loopne
ret
add
mov
and
inc
jmp
stc
xchg
sbb
mov
adc
loopne
jae
sbb
jb
sub
mov
adc
inc
add
leave
adc
fists
test
popa
std
jecxz
stos
or
push
std
dec
loope
mov
mov
dec
xchg
dec
cmp
les
loopne
lret
sub
stc
xor
mov
dec
mov
repnz
jg
inc
and
adc
int
out
pop
in
das
mov
out
mov
dec
pop
lcall
int
mov
out
xchg
add
push
pop
push
fwait
pop
int
int
stc
arpl
jo
enter
movsb
mov
lock
add
popa
or
inc
push
data16
push
rorl
lds
sub
pop
loope
fsubrp
std
add
lods
pop
ss
cmp
cmp
popf
xor
pop
cmp
ret
xchg
xor
add
and
push
mov
or
add
movsb
repnz
std
xchg
jns
mov
fstpl
mov
iret
loopne
imul
ret
or
mov
loope
pop
push
test
int
in
dec
pop
sbb
pusha
pop
cmpsl
jmp
jge
es
jne
out
imul
mov
ja
inc
popa
sbb
imul
jbe
push
cli
lds
dec
out
inc
stos
stc
or
aas
adc
in
jno
outsb
jp
cmpsl
lock
das
in
pusha
xchg
in
push
dec
ss
dec
adc
test
add
stc
jmp
add
movsb
es
call
test
jns
aam
imul
pop
sahf
mov
push
xor
pop
cmpb
or
inc
cmp
or
push
stos
cmp
push
sub
cmp
pop
js
dec
loopne
jge
and
adc
add
mov
int3
mov
es
xchg
and
push
lea
rolb
mov
lods
inc
lahf
jb
pop
scas
mov
pcmpeqd
outsl
push
adc
fcoms
or
or
or
cmp
lea
mov
or
add
xor
fnstsw
in
clc
negl
testl
dec
ror
addb
arpl
mov
subl
lds
je
dec
repnz
scas
mov
jns
dec
shlb
mov
xorl
jp
scas
cld
pop
jns
loope
pop
lcall
js
jl
mov
adc
dec
and
scas
dec
sub
jb
push
mov
pusha
or
cmp
inc
rcrb
pop
sbb
aas
sub
dec
jnp
enter
icebp
ret
in
rcr
stc
lock
lods
jl
in
jae
xor
out
sahf
mov
loopne
ds
sahf
movsl
and
ds
push
add
imul
fbld
or
mov
jmp
pusha
repnz
mov
jge
sbb
dec
sti
xor
pop
xchg
push
movsl
sbb
mov
xor
daa
pop
out
push
add
mov
sub
aas
ret
repz
call
fiadds
xchg
adc
xor
dec
loopne
ss
pop
orl
ds
inc
pop
cmp
inc
outsb
push
pop
repz
cmp
in
inc
lret
clc
and
cmc
daa
push
or
or
leave
loopne
mov
test
fstps
int
xor
mov
pushf
stc
dec
loop
mov
nopl
sbb
cmp
iret
sbb
imul
popa
mov
jno
cli
cmp
das
in
aad
xchg
sbb
scas
mov
sbb
dec
fs
mov
lods
pop
xor
push
and
pop
sub
inc
aas
mov
mov
dec
scas
pop
in
nop
add
xor
jmp
and
shrb
in
repz
mov
xor
inc
nop
sub
dec
mov
mov
stos
fs
dec
int
insb
inc
loop
std
and
add
push
movd
fwait
jmp
mov
icebp
pop
out
mov
push
xchg
roll
das
mov
aam
and
xchg
pop
les
dec
loopne
daa
das
mov
dec
iret
fwait
sbb
sahf
test
mov
push
insl
jg
jp
mov
aam
pop
dec
ds
pop
cmp
loop
cmpsb
rclb
sahf
ret
aam
rorb
pop
imul
lock
ljmp
rol
js
and
or
lds
nop
sub
loop
ja
add
cli
or
iret
cmpsb
pushf
xchg
daa
inc
mov
stos
in
sbb
js
pusha
pop
ja
je
daa
into
mov
scas
mov
xor
add
cmpb
xchg
nop
stos
enter
dec
fdivp
cmp
enter
jl
mov
negl
or
outsb
push
cmp
lret
inc
jmp
inc
out
adc
mov
fcmovnbe
aam
in
jecxz
pop
fisttps
fildl
xchg
outsl
cmp
enter
testb
cmp
pop
jmp
loope
cli
fwait
jmp
shlb
or
push
jle
movsb
les
adc
mov
pusha
lea
and
lods
mov
sbb
repz
fsubs
int
arpl
pusha
sti
jl
or
cltd
adc
inc
cltd
adc
adc
jbe
call
adcb
out
push
mov
dec
call
add
testb
cltd
pop
jo
cmc
mov
addb
scas
jae
lods
sub
inc
mov
into
dec
imulb
push
cmp
in
loopne
enter
xor
es
fldz
cltd
and
mov
cmc
aas
loope
dec
push
xchg
mov
pusha
push
sahf
inc
pushf
pop
cmp
push
call
pop
jmp
pop
push
dec
shl
in
nop
lock
aad
data16
or
and
ret
cld
mov
ret
pop
scas
pop
xor
push
add
nop
popf
adc
cmp
fadd
sbb
xchg
jbe
mov
xchg
xorb
xlat
popa
xchg
xchg
cwtl
ficoms
cmp
movsl
in
pop
cwtl
xlat
push
and
adc
sti
jno
dec
push
lret
scas
mov
loope
lcall
mov
add
es
jg
iret
mov
ds
pop
adc
lret
imul
inc
stc
lock
xchg
add
movsl
mov
sbb
cltd
ret
and
loope
out
pop
outsb
xor
xor
cmp
mov
mul
fsubr
mov
les
fsubl
ljmp
pushf
cli
into
int3
cmp
flds
lret
imul
jecxz
in
push
xchg
mov
add
xchg
or
pop
ds
jecxz
inc
fdivl
jle
shl
mov
push
ljmp
xchg
fs
sbb
stos
cld
shr
mov
call
fxch
bound
test
dec
lock
jae,pn
and
pop
xchg
mov
inc
popa
cmc
adc
das
lods
aas
mov
dec
icebp
aam
cld
jge
jns
adc
push
popa
mov
xchg
icebp
mov
inc
test
push
push
inc
inc
int
add
rol
rcl
ja
mov
mov
push
cmpsl
int
jb
fdecstp
and
cmp
or
mov
je
stos
jecxz
lods
lea
mov
mov
fstpt
push
adc
push
sub
ret
outsl
adc
or
sub
scas
mov
loopne
rorb
js
adc
xor
pop
xor
stos
mov
inc
xchg
pop
sti
movsb
mov
mov
fpatan
jno
sahf
stos
mov
movsl
mov
or
sub
xchg
sub
ss
adc
push
test
insb
je
test
dec
add
cli
xor
pop
sub
mov
nop
pusha
mov
bound
fwait
xor
iret
add
sti
cmp
sub
pop
push
in
ret
cmp
push
insl
mov
adc
scas
push
and
mov
or
lret
xor
and
ja
leave
lea
lcall
lahf
stos
push
push
dec
fcoml
gs
in
and
dec
or
push
xchg
bound
aam
and
lock
adc
in
ret
push
ja
jl
cmp
mov
inc
jo
push
jbe
xchg
jnp
mov
cwtl
out
xchg
xor
repnz
hlt
mov
dec
shll
sbb
mov
push
and
movsl
dec
pop
jecxz
out
add
cltd
je
dec
int
repnz
xchg
les
lea
fsubrp
test
andb
notl
scas
cs
cs
jmpw
xchg
icebp
in
push
fdivr
imul
dec
jo
movsl
xorb
repz
pusha
cwtl
das
push
dec
xor
popf
stc
and
stos
push
pop
jp
dec
gs
mov
fcompl
mov
test
jo
dec
aaa
inc
repnz
dec
out
out
cmp
out
adc
test
mov
lret
shrl
jnp
gs
ds
cmpsb
mov
lods
fldt
sbb
bndstx
arpl
fxam
xor
push
decl
fisubl
sbb
push
in
insl
pop
negb
mov
pop
cmpsb
dec
pop
decb
cmp
mov
shlb
movsl
mov
push
sub
ror
jle
sub
inc
push
into
into
push
or
outsl
lret
sub
xchg
push
repnz
lods
js
or
daa
jp
lods
jecxz
mov
leave
xor
and
push
adc
dec
hlt
into
lods
cmp
sbb
sti
fisubl
xchg
add
dec
jp
and
mov
in
jbe
push
loopne
xlat
inc
lcall
sbb
xchg
mov
jge
jne
xor
mov
insb
shlb
or
repz
outsl
and
jl
mov
xor
pop
scas
xor
add
pop
mov
aaa
lcall
pop
push
mov
jle
xor
leave
pop
mov
test
clc
and
dec
popa
jg
jno
mov
pushf
vcvttpd2dq
or
pop
and
sbb
cmp
mov
mov
cmpsb
mov
inc
fisubs
outsb
add
pop
or
mov
dec
push
sub
lods
in
clc
psubq
pop
adc
xchg
bound
xchg
jmp
cmp
aaa
stc
pushf
inc
das
stc
xchg
stc
subb
pop
hlt
ror
push
push
adc
sbb
and
pop
mov
inc
mov
adc
sbb
inc
testl
or
jp
into
sub
and
xchg
mov
mov
mov
jbe
jbe
das
xchg
cmp
dec
pop
cmp
leave
jle
out
sbb
rcrl
mov
fbstp
push
inc
sub
iret
icebp
std
lret
testb
xchg
adc
loop
sub
icebp
pop
fsubrl
and
lret
loopne
je
dec
adc
cwtl
lods
sbb
lahf
mov
stos
clc
cwtl
and
jp
or
or
or
faddp
in
dec
pop
push
adc
aas
and
icebp
mov
jge
rcrl
add
inc
repnz
xlat
icebp
shl
mov
sub
xchg
test
ret
fisttps
push
mov
mov
add
adcb
sub
sub
loope
jmp
mov
sbb
les
and
stos
fwait
mov
imul
xchg
lods
push
loope
insl
int3
movsb
cmp
out
cmp
mov
lahf
stc
sbb
cwtl
out
fwait
add
and
neg
mov
dec
jb
out
fstl
ss
daa
outsl
test
dec
dec
mov
pop
xor
mov
add
sbb
les
xchg
push
test
xor
and
shl
lea
out
imul
ret
xor
pop
and
mov
xor
mov
pop
cs
enter
mov
enter
in
mov
and
push
cmp
or
cmpsb
filds
mov
pop
push
ds
pop
stc
push
in
sub
pop
hlt
mul
je
rcrb
lods
xorb
lret
pop
xchg
and
faddl
jb
enter
cmp
nop
dec
adc
dec
jecxz
ss
inc
insl
cmc
mov
jmp
maskmovq
mull
xor
lods
fnstenv
xchg
test
xchg
cmp
pop
scas
loop
andb
repz
lods
sarb
pop
outsl
ss
push
mov
shlb
lds
xor
dec
lea
sub
mov
push
mov
xchg
cmpsb
lahf
xor
nop
mov
dec
pop
jecxz
nop
daa
push
call
scas
inc
aas
cli
ss
pop
aad
mov
into
pop
and
scas
arpl
dec
xchg
iret
mov
cmpsl
sahf
sbb
push
subl
jnp
sbb
lods
sbb
inc
fidivrl
sbb
xor
xchg
fidivl
adc
stos
xchg
inc
xor
pusha
test
add
dec
stc
cwtl
xor
mov
adc
xor
data16
arpl
testb
push
rorb
es
push
inc
jnp
add
test
std
repz
and
mov
aam
hlt
cmp
fsubl
inc
mov
mov
jle
mov
mov
ss
push
mov
add
ja
movb
dec
cmp
jnp
dec
lods
mov
dec
out
inc
ja
stc
pop
pxor
pop
cmpsb
in
mov
push
push
mov
andb
enter
dec
mov
jnp
shrl
fsubl
add
fildll
xchg
push
cwtl
gs
and
push
test
or
pop
jae
pop
cmp
outsl
jbe
in
dec
lret
xchg
or
fstpt
pop
jecxz
negb
lcall
xor
outsb
rcrb
dec
adc
mov
add
aam
mov
loope
aad
test
xor
inc
outsb
out
cmp
pop
cltd
cmpsl
jnp
imul
mov
or
xlat
add
mov
jnp
inc
mov
add
scas
mov
leave
mov
add
shlb
insb
scas
std
sbb
cmp
cwtl
lcall
repz
arpl
lahf
xchg
cmpsl
out
scas
push
test
adc
add
mov
out
adc
rclb
dec
sub
popf
loope
fsubs
xchg
fistl
in
subl
mov
sbbb
adc
jns
jmp
mov
push
mov
js
push
aam
test
pop
dec
mov
or
pop
cli
adc
hlt
and
or
pop
pusha
inc
int3
shll
bound
daa
insl
dec
mov
es
sub
imul
pop
pop
test
mov
mov
push
dec
in
xchg
jp
insb
add
push
stos
fucomp
repnz
popa
or
push
and
daa
ljmp
jbe
stos
sti
ljmp
fistpl
or
incb
das
ret
mov
ret
filds
and
xchg
add
lds
cs
pop
clc
push
or
adc
sbb
sbb
aad
fs
cld
stc
mov
daa
les
testb
jns
and
add
arpl
jbe
popa
pop
pop
xlat
push
jo
jle
mov
stos
push
dec
cmpsb
mov
js
mov
push
jl
fiadds
dec
mov
adc
out
cs
xchg
or
lea
cmp
jns
sbbl
lods
sbb
lds
cmpsb
imul
push
mov
lcall
add
and
mov
sub
jmp
jno
dec
cmp
push
jl
or
pop
or
add
xor
pop
jecxz
push
scas
xchg
mov
jns
into
mov
inc
hlt
popf
scas
mov
aaa
sbb
xor
mov
push
es
sti
mov
adc
jne
pushf
cmpsb
data16
insl
out
fidivl
cmp
cwtl
outsl
xlat
mov
outsl
out
notb
das
sub
mov
sbb
std
aas
xchg
push
sarb
cmpsl
lret
push
push
and
inc
stc
add
testl
das
in
sub
sarl
sbb
sahf
cmp
sub
add
mov
popa
in
jae
je
xchg
push
das
mov
call
or
mov
mov
filds
das
jge
adc
or
pop
aaa
leave
dec
lock
and
loopne
test
insl
std
stos
add
fnsave
ficompl
dec
sub
insb
inc
jns
cmpsl
jp
jle
pop
pusha
jmp
pop
out
fdivl
cmp
sub
mov
xchg
movsb
pop
adc
xchg
jecxz
mov
push
add
aaa
adc
mov
les
sarl
add
imul
mov
lea
mov
fwait
add
xchg
mov
dec
loop
mov
out
push
mov
rcl
dec
loope
in
or
jns
mov
lds
test
and
sbb
jmp
outsb
inc
sbb
shr
mov
inc
imul
mov
mov
sbb
lahf
es
ss
mov
test
cmp
lret
add
les
pusha
jmp
dec
mov
ljmp
jns
in
stc
inc
call
or
jo
xor
push
push
and
mov
push
lods
inc
mov
dec
ss
rorb
and
mov
lret
pop
push
mov
and
fcomps
or
mov
dec
gs
lcall
mov
fxch
jbe
mov
stc
ja
aaa
rcll
dec
jo
pop
addr16
xchg
xchg
jge
xchg
push
mov
push
adc
xchg
in
nop
xchg
imul
out
pop
sbb
fiadds
dec
bound
cwtl
sub
stos
je
push
cmp
and
es
jg
sub
sbb
jp
and
dec
mov
jno
popa
es
nop
push
push
pushf
shll
sbb
call
popl
stc
adc
and
or
inc
stos
out
mov
mov
xchg
rorb
cmp
movsl
mov
test
test
add
inc
and
hlt
dec
push
sbb
cmp
std
jecxz
add
lcall
dec
jmp
roll
push
xor
push
and
xchg
jp
dec
sti
xchg
push
repnz
int3
jbe
pop
test
adc
orl
mov
sbb
pop
pop
jbe
push
ret
pop
fdivrs
ret
in
test
stc
push
mov
das
add
lods
popa
clc
fidivrs
test
sar
mov
outsb
rol
cwtl
test
push
mov
jmp
jno
popf
jg
inc
push
mov
add
sbb
and
fstpt
ret
shl
test
or
dec
cmp
imul
pop
outsl
hlt
mov
cmpsb
mov
hlt
pop
jl
mov
mov
fistpl
mov
mov
push
or
push
pop
lret
hlt
jnp
sahf
push
mov
ljmp
int
pusha
cltd
out
sbb
pop
pop
bound
cwtl
test
or
icebp
mov
out
idivl
mov
xchg
lea
testl
stos
repnz
or
sbb
sub
insl
ds
pushf
dec
jne
hlt
mov
testl
mov
in
pop
sub
jae
adc
fs
into
mov
repz
push
xlat
xchg
outsb
jp
cmp
or
fwait
bound
dec
lret
stos
and
fnstsw
mov
cs
xor
push
pop
ds
popa
into
cmp
ljmp
aaa
sub
rcrl
es
push
dec
outsl
push
jg
add
dec
adc
cltd
lcall
es
mov
lods
fmul
rol
repz
insb
pop
sub
adc
gs
mov
cmp
sub
int
jmp
lods
fsubrl
mov
ret
mov
outsb
lcall
out
scas
lds
push
inc
and
daa
bound
in
aad
mov
mov
insb
mov
testl
aas
cltd
sarb
mov
dec
out
jg
adc
sbb
scas
mov
push
gs
add
mov
ret
movsl
lds
cs
fnstcw
cs
inc
inc
nop
dec
ss
or
aam
addb
xor
push
cmp
cmp
sbbl
andb
ficompl
clc
push
xor
inc
pop
xchg
outsb
pop
sbb
lods
add
cmc
mov
adc
mov
out
mov
dec
mov
insl
jge
mov
loopne
xor
aam
xchg
pusha
aaa
inc
fisubrs
xchg
jl
fiaddl
xchg
adc
addb
mov
test
mov
mov
mov
pop
xchg
aas
test
cmp
in
add
negl
fldt
jp
add
adc
jp
out
adc
cld
push
loope
fbstp
fnstcw
or
xlat
add
loope
cmpsb
dec
fcom
fldt
push
rorl
sub
or
mov
ret
jle
mov
sbb
jge
test
jo
cwtl
jnp
jne
inc
cmpsl
dec
jnp
inc
movsb
lahf
push
sub
add
or
dec
fwait
inc
stos
movsl
mov
and
adc
fwait
loop
into
imul
mov
inc
pushf
repz
cmp
fwait
imul
adc
mov
popf
lcall
in
dec
aad
shll
imul
iret
mov
add
xor
inc
dec
mov
mov
mov
pop
fmul
fnsave
loope
stos
neg
sahf
ss
jnp
push
in
insb
mov
test
in
or
dec
loope
xchg
adcb
mov
sub
clc
and
or
or
pop
aaa
cltd
ss
push
fisubrs
loop
cmp
dec
add
sahf
sub
lahf
test
fidivl
cs
xlat
movsl
dec
mov
pushf
push
das
pop
enter
and
push
jae
adc
jmp
push
xchg
mov
inc
pop
jecxz
int
xchg
add
and
movsl
hlt
mov
lods
inc
lahf
das
dec
call
dec
sub
lds
dec
hlt
ret
push
push
in
xchg
add
mov
les
insb
inc
inc
fdivs
scas
and
les
mov
add
mov
rorl
cmp
adc
sub
xlat
lods
jmp
cs
sbb
lods
pop
ss
inc
xchg
jns
clc
lods
lock
mov
fcompl
or
mov
mov
fdivl
or
cltd
or
sbb
jb
jno
outsb
loope
sbb
adc
inc
jg
cmp
scas
jp
jg
lcall
bound
hlt
ret
repz
int3
div
shl
sbb
das
lock
push
jno
adc
push
in
shlb
call
out
imul
es
jmp
out
shr
cltd
cmp
cmp
dec
dec
icebp
clc
dec
fidivrs
cli
in
rolb
jle
icebp
negb
out
add
pop
pop
or
in
dec
mov
icebp
imul
jae
iret
jg
add
and
and
test
dec
inc
bound
pop
mov
int3
sub
mov
iret
push
ficoms
das
mov
push
gs
push
sbb
xor
jecxz
and
rcll
adc
xchg
sbb
ja
and
int
xchg
insb
sbb
push
cmpsl
movsb
adc
sbb
mov
mov
push
notb
mov
xor
push
in
clc
jae
inc
movsl
cmp
iret
out
in
les
lock
lret
enter
dec
pop
stos
test
adc
lahf
mov
popa
pop
xlat
addr16
inc
stos
xor
test
mov
mov
dec
add
push
stos
or
jecxz
sbb
xchg
xchg
push
cmp
andb
dec
push
mov
cmp
test
mov
jmp
jmp
mov
add
jnp
das
xor
callw
dec
or
fwait
inc
mov
repz
enter
pop
ficoml
fistpl
mov
cltd
addr16
sti
cmp
repz
add
mov
outsb
xchg
cli
push
sub
mov
pop
test
out
pusha
add
jne
scas
pusha
ljmp
jae
jno
out
mov
mov
neg
fsubs
dec
cmpb
in
jmp
insb
fistps
push
popa
fdivl
jp
xchg
and
and
cmp
call
ljmp
push
xor
sub
rorl
dec
sub
mov
cld
je
or
iret
mov
pop
inc
cmpsl
dec
aaa
sub
sbb
mov
cmp
out
pop
shrb
jo
jne
pushf
sbbl
jmp
cmp
xchg
imul
aam
jnp
leave
xor
push
sub
push
mov
sti
jbe
add
adc
xor
sbbb
mov
xor
xchg
pop
repnz
xchg
outsb
pop
into
pop
outsb
shrb
inc
push
cmpsl
push
mov
cmp
adc
decl
ja
fadd
pushl
xor
insb
push
mov
jnp
cs
lahf
mov
jno,pt
jns
jecxz
arpl
out
out
sahf
xor
iret
adc
add
lret
je
decb
pop
int
cs
pushf
pop
adc
jle
mov
cmpb
fsubl
leave
lock
xor
dec
dec
sbb
testb
add
jge
pop
insb
or
int
mov
int
icebp
cmp
xchg
and
xchg
add
jnp
scas
nop
push
add
loope
jo
cmp
sbbl
sub
and
jne
andl
scas
stos
mov
sub
mov
xchg
imulb
lds
or
cs
cmp
nop
incl
sub
mov
jg
mov
xor
aam
mov
lds
sub
pushf
inc
mov
stos
pop
mov
int
incb
test
cmp
lea
and
add
mov
lds
jmp
mov
out
push
add
mov
and
lret
sti
jbe
std
daa
jmp
scas
xchg
xchg
mov
fdivs
lret
cmp
or
test
and
repnz
movlps
and
jbe
lcall
mov
pushf
dec
push
cmpsb
mov
pop
jge
xorb
pop
call
xchg
outsl
adc
out
test
lahf
pushf
xor
jnp
leave
mov
jecxz
dec
xchg
push
push
xor
flds
test
xchg
dec
sub
mov
addb
int3
xchg
sub
pop
out
cmp
xor
pushf
jmp
push
adc
into
and
out
xchg
push
out
bound
push
sarb
push
cwtl
pop
push
ret
push
xchg
notb
daa
test
jp
jae
addr16
jge
fcmovnbe
lret
enter
xor
ljmp
mov
and
sbb
call
jns
adc
jne
mov
nop
imul
repnz
mov
sub
cmpsb
lods
aam
jbe
repnz
stos
ja
push
jb
aaa
fnstsw
jnp
int
cmp
mov
leave
jecxz
les
sbb
scas
popf
jo
mov
jp
nop
xlat
mov
push
inc
add
shrl
hlt
fcoml
addl
stos
push
nop
or
mov
mov
lret
stc
sbb
or
inc
mov
add
push
sub
cmp
xchg
frstor
hlt
push
nop
xchg
outsb
mov
negl
repz
or
aad
pop
mov
icebp
pushf
in
stc
adc
cmp
mov
mov
sbb
cmp
add
mov
call
sbb
mov
jae
xor
push
lea
cli
mov
test
arpl
jecxz
lods
dec
je
jp
mov
adc
xchg
sub
pushf
xchg
notl
out
push
pop
mov
ja
stos
loopne
xchg
mov
pop
and
push
cmp
movsl
push
xchg
popf
add
add
stc
adc
mov
sbb
leave
js
xor
inc
mov
dec
sub
out
pop
clc
jge
repnz
add
xchg
mov
fwait
push
jo
xchg
int
jno
hlt
sub
mov
lret
mov
testl
outsb
xor
call
mov
fists
in
add
push
imul
push
cmp
xchg
ja
enter
mov
bound
dec
dec
rcr
jb
xor
jne
xor
paddb
jge
pop
jmp
fwait
xor
dec
mov
inc
icebp
clc
fldl2e
imul
cltd
shl
out
cld
push
pop
dec
pop
dec
xchg
aas
adc
test
jb
and
or
movsl
cli
mov
imul
cmpsb
dec
cmc
adc
xor
lea
test
scas
push
pusha
mov
int3
arpl
aaa
hlt
inc
in
ljmp
cmp
add
es
rcrl
pop
cmpsl
dec
aam
pop
outsb
cmp
push
insl
insb
shl
push
add
dec
xlat
inc
add
outsb
sbb
scas
and
mov
int
inc
jns
cmp
mov
scas
hlt
xchg
add
fs
scas
xchg
out
bound
leave
pusha
fstps
pusha
fisttpl
lods
inc
xchg
lods
adc
aas
icebp
lea
popa
inc
aad
cmp
stos
rolb
pop
add
lods
inc
movsb
sub
mov
lret
cmp
xchg
test
stc
hlt
jnp
cmp
mov
call
out
cli
push
or
incb
push
js
or
jmp
add
mov
push
sbb
shlb
fld
lock
test
testb
rcrl
or
push
mov
jo
in
leave
or
or
pop
lret
xchg
mov
sub
fwait
test
test
mov
push
sub
lods
and
fwait
stc
push
bound
sub
push
stos
mov
aas
cltd
mov
lahf
sub
stos
fbstp
jle
mov
fs
aaa
loopne
mov
scas
mov
pop
daa
inc
cmp
add
sbb
add
adc
mov
mov
xor
jbe
inc
jns
movsl
ret
mov
pop
dec
xchg
test
jge
das
pusha
sbb
add
push
bound
inc
push
in
je
mov
negl
add
insb
lods
sub
cmp
scas
add
or
enter
jg
jnp
leave
xchg
sarl
mov
sub
lahf
sub
sub
sbb
psadbw
ja
mov
mov
lret
mov
cmpsb
push
xor
arpl
shl
jnp
sbb
iret
cs
aad
lretw
bound
jle
test
les
jno
dec
loope
lea
mov
cmp
adc
out
jnp
adc
test
mov
idivl
fidivrs
push
or
mov
bound
mov
mov
shll
lahf
and
call
dec
or
cmp
in
adc
sbb
xor
pop
outsb
ss
adc
jne
cmpsb
xor
lea
sub
inc
pusha
cmp
mov
mov
loopne
mov
add
repz
ss
mov
int3
fsubrs
cltd
call
mov
and
out
mov
xor
pop
mov
jb
out
cmp
dec
lods
nop
jnp
jnp
call
test
cmpsb
adc
inc
ljmp
nop
stc
jl
cmp
fbstp
dec
and
outsb
jle
inc
mov
int3
fs
std
push
push
cwtl
pusha
sbbb
in
jb
fwait
push
mov
movsb
xor
scas
decb
pop
and
and
pop
and
inc
push
mov
jecxz
mov
or
faddl
dec
inc
push
mov
ret
sbb
cmpsl
mov
dec
add
incl
mov
push
pop
js
adc
mov
sbb
mov
mov
ret
call
mov
sub
sub
mov
inc
jge
int
dec
add
bound
push
stc
mov
add
fsubl
testl
xor
in
push
dec
lahf
jno
cld
loope
je
cwtl
jnp
lret
mov
shlb
out
and
jne
inc
push
cmpsb
jge
inc
arpl
dec
lods
loope
pop
aad
dec
ror
mov
sbb
add
mov
and
pop
mov
fwait
daa
clc
cmp
sub
iret
sbb
jb
sub
mov
out
dec
sbb
out
mov
jle
or
inc
sbb
imulb
jmp
outsl
imul
cld
fnstcw
pop
and
dec
nop
ret
pop
ret
outsb
or
or
fcoml
rcrl
xor
jle
mov
add
jge
cmp
orb
scas
push
fcoms
dec
cli
or
leave
and
stos
and
inc
xchg
cmpsl
xchg
xchg
dec
cmovl
popf
mov
std
sbb
out
std
pop
mov
ret
frstor
cmc
test
test
rclb
test
and
sbb
mov
mov
fiadds
iret
jmp
out
adc
and
dec
inc
fcomps
mov
sbb
movb
fadds
inc
push
cmp
sbb
mov
icebp
mov
addb
xorb
or
sbb
xchg
int3
arpl
mov
js
jne
shrb
lcall
dec
out
aaa
inc
inc
out
jecxz
test
inc
test
push
lock
pop
rorl
icebp
dec
jnp
jns
shll
pop
or
rcr
repnz
pop
in
and
notl
ret
cmp
fists
fnstenv
or
movsl
jno
or
inc
pop
cmc
jno
adc
nopl
push
push
fldenvs
push
fcoml
leave
ja
bound
repz
push
in
jecxz
sub
push
lahf
nop
dec
xorb
and
dec
pop
add
cmpsb
cmp
cmp
les
flds
pop
dec
jbe
ljmp
adc
jmp
sbb
sbb
pop
add
xchg
jbe
imul
push
rcrl
adc
pop
insb
add
add
sub
stos
adc
jne
xchg
sub
imul
jg
int
jne
scas
addr16
xchg
mov
rorl
push
jo
daa
xchg
movsb
loop
and
xchg
sbb
xchg
leave
sub
pmullw
daa
dec
cmc
or
outsb
enter
push
mov
lcall
pop
xlat
sbb
out
add
inc
insb
add
imul
in
and
sbb
ss
addr16
mov
push
sub
or
push
xchg
push
pop
pop
and
bnd
or
std
or
dec
cmpsl
xchg
sbb
ss
ret
subl
rolb
frstor
push
pop
adc
mov
cmp
inc
jnp
bound
mov
enter
mov
ficompl
adc
test
sbb
adc
lcall
inc
test
pop
and
loopne
lret
orl
out
pop
fwait
sbb
outsl
imul
nopl
inc
shlb
ja
adc
and
cmpsl
jecxz
mov
cmp
adcl
hlt
add
sub
jp
int3
pop
imul
icebp
sbb
out
js
cmpsb
push
repz
fs
and
adc
adc
daa
adc
or
std
cs
cltd
out
jg
inc
lods
lds
shlb
and
adc
mov
les
push
bound
stos
hlt
es
jo
or
xchg
push
je
pop
shll
cli
stos
lods
push
insb
adc
or
repz
and
xchg
lds
leave
ss
pop
cmpl
mov
dec
int3
data16
shrb
shll
push
mov
adc
pop
fwait
adc
ja
adc
mov
inc
or
add
outsl
pop
out
and
xorb
inc
mov
dec
call
cld
out
cmp
addr16
and
test
or
insl
enter
aad
xchg
lods
push
push
addl
sbb
movsb
stc
popf
xor
call
std
imul
add
das
fldl
nop
cmpsl
loopne
cmp
addr16
dec
gs
imul
cltd
loope
ja
es
cld
push
dec
call
ret
mov
adc
push
call
mov
mov
popa
xchg
inc
mov
cmp
xor
je
clc
adc
icebp
xchg
lret
sbb
loope
lds
push
dec
loop
ret
aad
imul
lahf
clc
inc
fldl2t
scas
outsb
add
sbb
mov
pop
enter
jge
out
cmpsb
fistl
call
mov
xlat
sbb
mov
cmp
and
jns
in
movsb
sbb
sbb
iret
jmp
inc
pop
cmp
push
inc
inc
lds
pop
xchg
cwtl
out
jno
fsubrs
or
dec
pop
stc
jle
add
xchg
sub
mov
inc
or
stos
mov
push
fs
cwtl
xchg
sbb
push
insb
sub
popf
stc
gs
jmp
out
push
xor
fisttpll
add
cmp
loope
pop
pop
push
mov
sub
testb
fists
idivb
imul
lahf
mov
mov
adc
sahf
inc
test
leave
inc
cmp
sbb
dec
mov
icebp
insl
sti
stos
cmp
repnz
mov
or
jmp
mov
jmp
fcmovnb
pop
or
adc
cld
inc
in
jl
push
ret
filds
int
pop
dec
in
pop
xor
pop
imul
dec
jae
movsl
hlt
cld
lods
sub
addr16
adc
cmp
xlat
mov
and
jbe
testl
and
pop
push
shl
xor
cmp
sub
fistpl
pop
fs
mov
jl
lock
xor
sarl
test
mov
inc
rcll
popa
enter
out
xor
xchg
movsb
outsb
add
out
loop
hlt
sub
scas
enter
mov
jnp
xchg
xchg
insb
mov
cmc
nop
mov
test
cmp
xchg
lock
add
inc
dec
lret
sbb
scas
hlt
push
jne
movsb
mov
sbb
cmc
mov
out
push
adc
jbe
adc
lcall
push
dec
fucomi
jns
fisubs
iret
cmpsb
daa
cmp
and
dec
fwait
jl
add
outsb
xchg
xor
shr
and
fs
xchg
or
mov
push
dec
or
sbb
xchg
icebp
jp
mov
dec
jecxz
and
add
roll
cmpsl
fsubs
pop
rol
stos
cmp
divb
xchg
sbb
js
faddl
or
jns
cmpsl
test
push
das
mov
push
push
adc
jle
push
jo
inc
jmp
outsb
bound
and
push
test
jl
std
icebp
inc
mov
movsb
bound
or
pop
add
es
mov
adc
xor
clc
mov
mov
out
and
pop
test
push
in
jae
and
push
mov
adc
loopne
int3
pop
stc
or
ret
sahf
mov
mov
hlt
add
pop
arpl
loop
dec
add
xor
xchg
mov
insb
in
push
jp
jnp
mov
adc
sub
movl
andb
cmpsb
icebp
int
push
lret
or
rorb
loope
mov
mov
dec
cmp
xchg
subb
arpl
jg
or
cwtl
mov
xchg
je
mov
push
jno
xlat
in
lret
push
clc
rolb
in
mov
sahf
nop
xorl
jae
add
cli
mov
popf
push
jno
popa
lock
data16
and
fs
jmp
jle
jge
inc
inc
ja
jns
arpl
dec
dec
push
test
cmpsb
mov
lret
outsl
or
fcom
insl
lds
sbb
leave
hlt
mov
scas
lock
lods
ljmp
sub
insl
loopne
mov
inc
lcall
inc
mov
xchg
cli
dec
std
loope
dec
jmp
mov
sbb
les
mov
mov
rcr
ljmp
mov
xchg
sub
iret
or
bound
lcall
loope
mov
pop
jle
mov
sbb
dec
rcll
and
xchg
jecxz
add
xor
scas
mov
and
push
mov
mov
jns
cmpsb
ds
adc
out
stos
inc
mov
dec
mov
rcrl
jnp
jne
mov
sub
sarl
loopne
jmp
mov
push
call
lods
or
mov
cli
inc
icebp
xchg
jecxz,pn
jns
xor
add
jmp
and
sub
or
adc
ljmp
decl
jo
dec
mov
jbe
jno
out
test
xchg
mov
push
or
ficompl
mov
data16
ret
mov
add
cmpb
ret
adc
pop
hlt
adc
mov
add
xorb
or
notl
xchg
icebp
adc
lret
sbb
lods
mov
push
retw
sub
into
inc
xor
push
int3
pop
adc
pop
fildll
mov
mov
push
pop
pop
fs
loop
adc
pop
mov
xor
es
sbb
sbb
in
or
jnp
cmp
mov
test
pop
stos
mov
fisttpll
daa
inc
push
or
xchg
mov
push
shrb
add
out
imul
test
test
dec
out
push
cltd
jl
lret
sbb
js
adc
or
xchg
outsb
or
insl
ja
dec
pop
lahf
cltd
scas
mov
sbb
jle
add
add
sarb
notl
stos
arpl
out
movsb
out
xchg
push
sahf
or
mov
mov
sbb
or
add
pop
jl
xchg
jmp
enter
in
imul
xlat
mov
jge
cmp
ficompl
outsl
pushf
add
loope
lret
int
mov
js
clc
push
andl
fildll
jl
and
hlt
dec
inc
fidivrs
add
add
mov
push
inc
mov
pop
testb
sub
sbb
fildl
rcrl
ljmp
xchg
arpl
iret
push
daa
arpl
push
scas
jg
adc
outsb
pusha
adc
pop
imul
sbb
pop
popa
push
cld
push
jbe
iret
push
in
adc
xchg
orb
sarb
insb
jle
sahf
shl
psubusb
sbb
es
loop
xor
or
test
fstpt
push
loop
mov
xchg
or
adc
jns
setg
xchg
sbb
mov
enter
mov
xchg
cltd
sbb
cmc
inc
inc
out
inc
daa
mov
jp
sbb
sahf
outsb
std
jle
pusha
fwait
std
jo
or
fbld
lock
mov
and
ud0
cmp
clc
mov
sub
lret
mov
sub
cmp
icebp
sbb
fs
outsl
lcall
inc
fstpt
in
popf
bound
xor
xchg
pop
rorl
jae
cmpsb
stos
inc
fcoms
push
sarb
inc
xor
xchg
cmpsl
sub
mov
test
push
lds
inc
cwtl
xchg
js
xor
daa
mov
cli
xchg
roll
sub
lret
xchg
sub
add
mov
je
jge
push
push
rolb
and
ss
mov
mov
jle
enter
mov
push
and
xchg
inc
pop
jecxz
xor
daa
inc
cmp
cmpsb
adc
or
call
nop
xchg
andl
clc
push
cmpsl
fsubrs
fldt
je
sub
sahf
jbe
adc
in
mov
pop
out
jno
mov
mov
rcll
xor
jns
popa
scas
xchg
sub
iret
sub
xor
jno
xor
xor
and
std
cmp
dec
stos
jl
mov
rclb
bound
pop
lret
dec
mov
xor
lret
adc
arpl
cmp
and
scas
and
pop
add
loop
imul
adc
jecxz
fwait
mov
mov
ret
inc
cld
mov
sub
push
in
sbb
inc
mov
and
insl
mov
shlb
jno
out
dec
sahf
out
lret
and
cwtl
shll
ret
inc
jmp
fisttpll
decb
outsb
sbb
sti
jno
xchg
sub
fdivl
xor
jg,pt
sti
fbstp
stos
loope
mov
inc
ss
push
in
daa
lods
out
pop
xchg
jge
js
xchg
xchg
add
lret
loopne
out
sub
mov
imul
mov
fstps
jae
fbld
mov
fisubrl
shl
jl
rolb
sbb
clc
push
cld
cmpsl
mov
dec
fwait
aas
mov
repnz
lcall
repz
sbb
jmp
cmp
shll
int
push
dec
es
adc
out
mov
or
xchg
bound
mov
mov
inc
ljmp
inc
cld
fldt
sbb
push
int
mov
stos
test
jbe
jmp
dec
jecxz
xor
je
cmp
push
xchg
pop
aad
cmp
jp
scas
stos
cmpl
stos
inc
push
ret
fnstenv
xchg
mov
lods
and
fimuls
inc
bound
test
mov
push
test
adc
cltd
add
gs
add
lret
das
stc
push
out
lods
push
pop
mov
int3
jae
add
jmp
js
xlat
iret
fidivs
es
js
pop
and
insl
insb
insl
les
add
pop
scas
pop
ret
xor
loope
jae
jbe
nop
push
push
je
in
and
fistpl
in
pusha
negl
push
sub
cmp
loop
and
add
xchg
adc
out
sub
scas
sub
icebp
popa
xchg
cs
in
incl
fincstp
mov
mov
mov
jg
pushf
dec
or
shrl
subb
sbb
mov
imul
pop
add
bound
fcoml
popf
mov
mov
lock
pusha
divl
cmc
xchg
mov
pop
jle
xor
sbbb
jp
pop
mov
and
jecxz
mov
out
pop
jmp
out
popf
xor
lcall
xor
clts
incb
adc
ret
es
inc
mov
sbb
jp
push
nop
dec
push
lods
xchg
outsl
loop
ret
xor
hlt
es
repnz
push
test
sbb
mov
add
inc
mov
aaa
shlb
enter
mov
or
hlt
addr16
ds
js
movsl
push
mov
rorb
pusha
mov
push
in
sub
icebp
add
scas
sub
shll
push
icebp
ret
or
cmp
cmp
jg
and
dec
push
dec
adc
es
sbb
add
arpl
and
lahf
into
orl
mov
movsb
adc
pop
icebp
push
repz
mov
popf
repz
xchg
lds
sarb
std
jnp
call
jge
adc
dec
add
push
stos
ja
cmp
cwtl
mov
sbb
aam
add
push
add
mov
fdiv
mov
loopne
leave
and
push
movb
push
lret
pusha
inc
jp
rorl
dec
jbe
les
inc
or
push
addl
addl
xor
push
xchg
sub
inc
movsb
sbb
test
inc
sbb
cwtl
mov
repz
mov
adc
mov
xchg
bound
cmpsb
ret
hlt
mov
pop
adc
insl
xchg
in
sub
xor
adc
in
test
sub
sbb
es
fiaddl
mov
xlat
inc
mov
out
cmp
les
push
jo
mov
dec
pop
pop
and
test
test
psadbw
xchg
xchg
push
nop
ss
sbb
movsl
mov
mov
jg
inc
std
or
ljmp
xchg
and
cld
add
cli
mov
adc
test
sub
push
addl
fwait
or
repnz
fidivrs
cwtl
mov
push
xor
jecxz
daa
pushf
in
push
or
push
adc
popa
adc
mov
jbe
fdivrp
inc
mov
cmp
mov
insb
insl
ja
decb
fildll
mov
inc
in
cmpsb
je
and
inc
mov
mov
add
inc
cmpsl
int3
pop
adc
dec
pop
loop
pop
dec
cmp
in
mov
sbb
push
in
lds
fldcw
test
loop
addr16
xchg
pop
in
add
rcrb
push
aam
stos
push
and
dec
arpl
sub
inc
loop
in
imul
xor
scas
addr16
mov
or
and
pop
sub
or
mov
mov
sbb
je
sub
sbb
sahf
push
leave
mov
js
pop
sti
pop
xchg
outsb
ficompl
daa
dec
repz
outsb
in
ds
outsb
adc
xor
mov
notb
add
add
cmp
and
jl
mov
xor
mov
inc
dec
in
mov
xorl
out
sub
testb
out
xchg
jmp
loope
and
xchg
hlt
call
and
fstpt
jae
xchg
xlat
xchg
pop
jge
sahf
js
or
arpl
xchg
hlt
push
or
sub
ja
je
lcall
mov
shlb
fisubrs
stos
lret
cld
lods
sbbl
in
mov
xor
es
fcmovb
repnz
test
enter
xor
test
imul
dec
clc
sahf
dec
inc
std
push
mov
ror
data16
mov
lods
cmp
xchg
popa
out
pop
cwtl
insl
fcmovb
pop
add
mov
push
loopne
ret
or
xorb
dec
adc
rclb
cmova
jnp
mov
stos
xor
inc
pop
dec
adc
in
scas
and
das
fisttpl
adc
iret
sbb
push
ja
cli
mov
sub
mov
orb
pop
jo
jle
and
cmpl
mov
cmp
adc
cmpsl
js
jecxz
xchg
fs
les
subl
daa
mov
pop
test
mov
jmp
enter
adc
lahf
inc
xor
sti
or
sub
call
adc
sub
out
jae
into
pop
loopne
inc
push
or
cmpsb
sub
cmpsl
ds
adc
push
pop
scas
sbbl
mov
dec
popa
clc
inc
cltd
push
jae
xchg
mov
je
popf
xor
add
ficomps
outsl
je
add
jle
imulb
jae
dec
dec
push
fsubl
outsl
scas
lods
mov
mov
mov
sbb
adc
cmp
movsb
jle
jl
sbb
lea
test
cmp
and
cmc
mov
sub
push
imul
push
sarb
fwait
and
or
xor
xor
mov
aam
push
xor
sbb
add
cmp
mov
mov
fstpt
xor
andb
aaa
test
jbe
lret
cmpsl
out
mov
subb
adc
inc
dec
xor
dec
not
daa
add
xchg
cmp
cs
rcrb
popa
jb
insl
jg
sbb
stc
xor
mov
js
inc
scas
inc
aaa
xor
loop
fildll
ja
mov
mov
mov
lret
xchg
aam
xchg
fcmovnbe
outsb
negl
fstpl
fwait
repnz
jns
jp
stc
mov
popa
cli
and
insb
mov
repnz
and
cmp
mov
jbe
icebp
pop
dec
mov
test
xchg
mov
adc
and
sti
aam
jnp
pop
jge
invd
scas
inc
cmp
shr
pusha
inc
push
cmpsb
xor
ljmp
xor
ds
stc
pop
imul
mov
cmpsb
xor
and
pop
dec
push
mov
out
int3
pop
in
mov
push
dec
je
ja
mov
xor
into
inc
ficoms
cmp
cs
add
pop
mov
les
add
out
popf
inc
imul
lea
arpl
ljmp
iret
adc
adc
pop
mov
pop
lret
cmp
dec
push
fsubr
mov
xor
push
js
jno
push
fldl2e
jbe
aas
aad
je
fdivrs
cmpl
sub
lods
inc
and
dec
pop
sub
and
outsl
in
das
xor
rolb
adc
lret
sti
pop
dec
pop
fstl
pop
lahf
xor
cmpl
add
hlt
rol
and
and
push
dec
mov
shl
fildl
push
ss
in
dec
aas
cmp
cmpsb
dec
sbb
insb
jp
popl
xor
mov
jle
push
add
mov
jg
cmp
add
sbb
jg
or
xchg
push
movsb
jl
addl
xor
pop
cmc
xchg
das
push
cmc
cmp
mov
mov
mov
fadds
and
mov
andb
fwait
arpl
mov
xor
push
clc
popf
jne
dec
std
push
lods
jmp
les
adc
inc
push
push
ss
mov
ljmp
mov
push
in
xchg
inc
pop
int3
mov
and
adc
std
aam
xchg
movsl
adcb
pop
cmpsb
mov
jl
pop
pop
repz
sbb
xchg
and
add
inc
adc
lods
adc
mov
cld
cmpsl
mov
xchg
xchg
mov
mov
nop
ljmp
pusha
mov
pop
or
pop
addr16
nop
std
nop
add
mov
in
fnstenv
in
inc
in
cli
or
and
mov
in
jae
or
and
and
ds
jb
lret
cmp
iret
mov
cmpsl
dec
cmpsl
ret
pop
cltd
stos
mov
xchg
mov
jg
movsl
scas
xor
mov
jnp
pop
out
and
pop
mov
inc
push
addr16
dec
pusha
xchg
push
imull
lahf
cmp
xchg
sub
pop
xchg
pop
fiaddl
add
fbstp
jmp
jns
adc
and
shrb
pop
hlt
gs
xorl
or
jg
add
cmp
insb
rol
in
and
adc
sub
ficoms
and
test
push
fcoml
sti
dec
pushf
sbbb
out
loop
xor
sbb
mov
adc
je
add
adc
sbb
bnd
lock
test
sbb
push
ljmp
idivb
test
dec
rcr
test
int3
jl
mov
sahf
aaa
inc
fsubs
sub
and
add
int3
fisubrs
pop
rcr
mov
int3
add
push
xor
lods
push
outsl
out
jge
pop
lahf
jmp
dec
fbstp
lret
fnstenv
dec
loopne
popf
push
cmp
andb
or
iret
fcomps
mov
insl
bound
scas
inc
into
pop
jmp
dec
loop
jae
add
push
sub
adc
mov
adc
dec
stos
xor
in
insl
test
cmp
cmp
das
or
pushf
ss
movsb
and
daa
data16
inc
mov
mov
ds
pop
aas
and
outsb
mov
ja
jle
cwtl
sbbl
inc
sbb
fisttps
mov
mov
jmp
jo
cmp
sbb
pop
mov
js
loop
jecxz
mov
mov
les
dec
fcoms
jns
ds
out
sub
push
mov
lods
fidivl
enter
scas
stc
dec
mov
dec
dec
ljmp
mov
add
jmp
and
sarl
pop
mov
roll
sub
dec
mov
ret
hlt
mov
dec
mov
test
cmp
sarl
push
hlt
fnsave
stc
lea
xchg
sub
push
mov
mov
inc
pop
popa
sbb
imul
inc
adc
ficompl
iret
cmp
outsb
jno
js
rclb
push
push
push
xor
add
jg
mov
mov
fs
in
adc
cmp
popf
mov
mov
rep
adc
insb
pop
jbe
bound
adc
int3
es
xchg
fucomp
fnsave
cmpsb
cmp
jmp
lcall
pop
repnz
mov
and
inc
push
sti
pusha
fneni(8087
dec
jg
mov
xor
dec
add
cmc
pop
add
mov
inc
fiaddl
dec
ds
pop
jno
dec
in
jmp
insb
add
arpl
imul
and
mov
cmp
xor
jmp
mov
or
test
inc
shll
test
dec
insb
shll
mov
pop
push
in
movsb
fs
mov
fidivs
testl
jae
xlat
movsb
mov
xchg
lds
loop
mov
dec
loope
fsubs
lds
cmp
std
lea
in
in
fcmovne
jecxz
insb
add
out
mov
sbb
bswap
add
xchg
xchg
xchg
mov
dec
aam
arpl
les
ds
mov
and
xor
ds
ds
xlat
repz
or
dec
or
xchg
add
jo
or
sarb
clc
into
or
push
movsl
cmpsl
push
add
inc
js
push
jge
sbb
xor
sahf
add
cli
cmp
jg
push
pop
arpl
jnp
xor
pop
inc
ja
push
xor
cltd
sub
xchg
add
iret
gs
add
iret
bound
std
ljmp
cli
pop
sub
and
inc
inc
scas
dec
arpl
adc
mov
push
adc
xor
mov
xchg
into
out
pop
fidivs
ret
out
push
inc
lahf
sbb
shlb
add
pop
push
aam
xor
je
cmp
ja
dec
test
xchg
loop
jl
jmp
push
imul
ss
cwtl
pop
lock
sbb
inc
fldenv
ljmp
jle
aad
push
jne
cltd
stos
aaa
rorb
mov
or
add
fcompl
jo
stos
mov
ljmp
jg
pushf
dec
imul
cmpsb
push
or
pop
bound
in
mov
sbb
enter
xor
mov
push
fisubrl
pop
pusha
popf
xor
mov
in
mov
lret
ficoml
nop
and
mov
pop
mov
lds
jg
hlt
cmp
add
in
cmp
orb
mov
in
or
fimull
adc
mov
sbb
pop
repnz
stc
bound
ds
mov
xor
fldl
sbb
fbstp
sub
ret
std
xchg
mov
outsb
aaa
cld
jle
pop
mov
popf
je
out
and
pop
leave
sti
xchg
mov
lret
hlt
inc
cmpsl
imul
jb
call
jmp
adc
sbb
aam
push
test
jns
pop
in
shrl
imul
fcoml
cs
pop
push
jg
ret
mov
mov
jmp
or
bound
adc
stos
jg
mov
push
mov
ljmp
outsb
ret
add
add
push
arpl
mov
mov
xor
stc
scas
nop
sub
enter
inc
arpl
jge
sub
cmpl
popa
fstps
and
jge
jo
jnp
into
mov
mov
lds
in
sbb
adc
push
pop
adc
arpl
and
add
scas
sub
xor
mov
popf
dec
orb
mov
inc
jmp
and
popa
orb
lds
add
jae
or
xchg
push
pop
jl
test
scas
int3
daa
sub
mov
flds
or
ret
arpl
sbb
test
sbb
adc
push
ja
pushf
mov
repz
enter
mov
jge
inc
stc
push
lods
push
aad
jae
jmp
fbld
cltd
mov
pop
stos
jns
dec
loop
sahf
xchg
mov
sbb
sbb
imul
mov
xlat
inc
pop
or
aam
testl
push
push
sub
xchg
xor
sub
pop
pop
mov
hlt
mov
dec
sub
push
mov
mov
adc
pop
add
mov
daa
or
loopew
and
nop
mov
inc
sahf
clc
jmp
xlat
mov
mov
push
pop
lods
mov
pop
cmp
cs
sub
add
in
andl
cmpsb
or
xor
notb
fidivrl
pop
icebp
lcall
dec
push
cwtl
call
push
jbe
rorl
xor
mov
aas
inc
xchg
jo
ret
data16
and
mov
sub
jns
sub
out
movsl
xchg
or
push
popf
lods
pop
sub
dec
jecxz
lret
dec
negb
test
xchg
xor
xchg
mov
jle
cmpsb
scas
lock
inc
push
or
sahf
lret
js
and
test
andl
popf
push
xor
hlt
inc
fadds
push
test
fnstenv
andb
cmc
xchg
cs
fidivrs
push
out
and
out
xchg
outsl
daa
movsb
repz
inc
imul
mov
lods
outsl
xor
out
pop
cmp
test
sti
cmp
inc
xor
int
outsl
adcl
pop
clc
jmp
xor
or
inc
mov
ret
js
add
push
gs
and
sub
jecxz
push
mov
fldcw
gs
arpl
adc
or
cmc
pop
in
cmc
push
mov
cmp
aam
xor
leave
xchg
mov
sub
push
data16
js
dec
arpl
mov
mov
loop
loopne
test
jmp
testb
jno
sub
iret
push
aad
inc
or
mov
sbb
lock
in
shl
mov
adc
xlat
sub
cmpb
or
cmp
mov
stc
cmp
out
repnz
mov
mov
xchg
push
cmp
nop
push
pop
sub
pop
mov
xchg
out
int3
pusha
test
lret
jno
stos
je
pop
xor
pop
in
xchg
jb
scas
lret
sti
iret
jne
add
xor
mov
mov
scas
push
pop
push
cwtl
inc
mov
icebp
and
jle
cmp
adc
jbe
inc
sti
es
pop
xor
icebp
fs
jmp
xchg
adc
cmp
lcall
mov
aas
sbb
push
rorl
sbb
pop
std
fldl
mov
inc
push
mov
hlt
push
les
sbb
mov
jns
inc
or
ds
add
cmpsl
and
add
shrb
and
and
sub
jno
fistpl
and
in
test
ret
cmp
push
imul
inc
movsb
ja
loope
adc
add
and
add
sbb
cmp
popl
call
rcrl
jo
mov
jb
pop
ljmp
inc
mov
mov
cmp
ljmp
cmpsl
aaa
gs
jae
aad
xor
sub
xchg
push
xor
push
mov
sahf
popa
or
mov
or
movsb
iret
sub
adc
shr
stc
xchg
mov
sbb
pushf
xchg
xor
stos
xchg
inc
xor
jle
test
mov
arpl
pop
push
dec
shll
xchg
inc
push
hlt
cmp
rcrl
mov
jb
cmp
sbb
stc
inc
cmp
jp
mov
out
xchg
mov
shll
or
sub
push
add
cmpsb
dec
xor
sub
xor
fildl
xorl
dec
sub
inc
aam
std
fwait
loope
fdivp
fcoml
xchg
jp
loopne
push
call
out
outsl
push
add
iret
sbb
ds
imul
adc
int
xor
sub
pop
loope
in
and
mov
ret
shl
mov
dec
mov
into
sbb
add
jl
ss
stos
cmp
lahf
mov
rorl
inc
push
cmp
aam
mov
xlat
andl
sub
movsb
insl
add
and
mov
mov
dec
les
lds
call
out
test
outsl
add
jl
pop
pop
data16
stos
lds
pop
jne
xchg
mov
dec
imul
mov
jmp
std
fmulp
dec
or
out
cmp
fucomi
loopne
cli
loope
ja
sbb
cltd
xor
subl
lret
bound
int
inc
js
lahf
shlb
fcmovnb
imul
enter
enter
dec
or
mov
rcll
jge
test
or
jne
mulb
imul
lcall
ss
sub
add
push
sub
mov
rorl
test
cmp
pop
lahf
mov
xchg
sub
dec
mov
jg
adc
push
stos
into
loope
ja
or
aas
mov
popa
pushf
ss
push
jmp
inc
xor
sbb
jmp
xor
div
inc
push
ljmp
jno
cmpsb
stc
test
sub
pop
jne
mov
jle
lea
inc
pushf
or
je
or
inc
mov
lods
adc
cmc
inc
into
daa
into
sbb
pushl
mov
xor
push
push
sbb
mov
adc
xor
push
rcrb
adc
cwtl
jnp
xchg
cld
mov
loope
movb
pop
mov
out
out
adc
or
inc
mov
rcpps
lds
pop
addr16
push
inc
cmpsb
mov
mov
and
pop
adcb
test
fstps
call
ljmp
mov
testb
scas
mov
loopne
imul
push
or
mov
jbe
adc
imul
hlt
scas
inc
lcall
inc
cmpsb
inc
dec
inc
dec
xlat
mov
dec
and
insl
jge
jmp
divb
rolb
aaa
cmp
test
cmp
or
push
jo
push
fstpt
fs
fwait
test
lea
cmc
sbb
mov
xchg
scas
aad
aam
int3
jb
jnp
or
lcall
and
mov
lods
inc
pop
sarb
jp
out
out
nop
sahf
pusha
mov
and
mov
push
add
and
push
push
adc
and
xor
sub
leave
iret
ret
push
or
adc
rorb
mov
cmp
sub
insl
lahf
loopne
mov
fsts
aaa
loop
push
mov
mov
les
mov
sahf
push
cmp
inc
popf
repz
or
cmp
jecxz
aas
adc
mov
in
pop
mov
or
add
jg
push
xor
sub
and
inc
push
das
inc
inc
pop
cli
sub
inc
pop
addr16
mov
mov
or
leave
cmp
jb
movsb
and
aaa
adc
xchg
das
adc
mov
shlb
jp
xchg
dec
inc
mov
add
sub
inc
in
cmp
sbb
sbb
mov
or
out
insb
call
jno
sti
scas
add
pop
sub
lds
jecxz
push
fwait
jbe
inc
mov
dec
test
fbld
mov
testb
and
dec
push
ljmp
lock
movsl
dec
in
ja
xor
in
lcall
ja
sbb
jl
xor
sbbl
outsb
out
jl
push
adc
inc
add
loop
popa
push
inc
popa
adcb
push
seta
fiaddl
or
xor
loopne
cmp
inc
add
xor
xlat
xchg
jl
ret
clc
dec
jmp
fistpl
dec
mov
outsb
mov
lahf
daa
sub
mov
test
and
mov
rorl
sbb
outsb
and
out
dec
movsl
inc
aas
adc
mov
int3
dec
mov
or
imul
mov
dec
lea
pop
icebp
add
or
or
outsb
in
dec
mov
std
mov
pop
js
inc
dec
rolb
hlt
add
loop
sub
les
jb
and
push
and
mov
mov
xchg
enter
dec
jmp
sub
out
xchg
sbb
dec
data16
pop
sahf
imul
push
or
bound
or
sbb
clc
rcll
gs
lcall
out
ficoms
jae
lret
mov
xchg
scas
add
cwtl
jle
push
popf
dec
cwtl
xor
xchg
inc
push
sbb
fs
mov
mov
pop
ljmp
in
inc
mov
push
testl
fdivs
sub
jmp
les
sub
rorw
insl
jnp
dec
lea
cli
cmp
lcall
mov
adc
stos
pop
incb
xor
cmpl
ljmp
push
pop
int3
mov
cmp
les
add
cltd
xchg
push
out
jae
rorl
mov
mov
xchg
int
sarb
pop
notb
jge
cmpsb
add
inc
mov
out
shll
pushf
insb
mov
pop
icebp
aas
push
ljmp
sub
mov
inc
cwtl
push
sub
aaa
test
icebp
fcomi
pop
push
ret
mov
and
xchg
or
in
je
mov
pop
icebp
mov
pop
jecxz
add
in
push
cld
xchg
inc
fiadds
sbb
cli
or
xchg
mov
dec
test
popa
mov
push
cli
adc
adc
mov
lret
push
outsl
jnp
adc
lock
lahf
jb
subb
and
xchg
push
push
jbe
loopne
ss
cmp
cltd
insb
dec
pusha
sbb
mov
fisubl
mov
mov
mov
push
or
mov
aad
push
add
aad
mov
out
lcall
jmp
adc
aam
ljmp
push
insl
jp
repnz
mov
sbb
movsl
add
sub
push
fadds
stc
jb
cwtl
and
subl
cmpsb
scas
das
push
mov
push
clc
add
sub
mov
mov
inc
mov
imul
neg
pop
add
hlt
pop
out
dec
fisubl
outsb
insl
jge
lcall
adc
jge
jbe
fsubr
ss
pop
loop
jae
dec
out
inc
aad
push
or
jge
add
movsb
fdivp
in
js
add
ljmp
stc
pop
inc
xchg
pop
mov
int
addl
push
orb
xchg
push
lds
fists
insl
cmp
inc
jmp
sbbl
adc
lret
int
cli
and
es
popf
fidivs
inc
mov
testl
push
dec
xchg
leave
in
mov
mov
mov
and
aam
imul
out
cmpsl
hlt
ljmp
cmp
xor
int3
fs
inc
xchg
lcall
ss
mov
or
mov
dec
cmpsb
jle
cs
call
or
fnstsw
outsl
negl
aad
push
pushf
sahf
outsl
inc
add
mov
insl
sbb
mov
fdivrl
jl
inc
popf
divb
fs
or
fstpl
xlat
int3
mov
scas
add
jbe
sub
out
call
lods
jne
ljmp
test
int
imul
das
es
sub
stos
ljmp
jae
xor
incl
bound
inc
push
or
mov
in
andb
cmp
xchg
xchg
and
int
and
shlb
push
xchg
or
jne
pop
or
mov
js
or
mov
push
push
sbb
fldl2t
lods
mov
xor
rcll
mov
sbb
pop
aas
xchg
sub
insb
mov
sbb
xchg
and
in
add
cmpsl
cs
dec
repz
adc
rcrb
push
push
mov
bound
inc
ficomps
jge
dec
fwait
mov
add
test
jmp
push
add
sbb
stos
mov
inc
jno
jle
xchg
xchg
xchg
stc
fprem
jmp
xchg
lcall
push
pop
and
daa
aas
xchg
mov
scas
mov
jb
stc
sub
pop
aas
fs
in
es
adc
jecxz
mov
decb
pop
out
mov
pop
outsb
sub
pop
inc
nop
push
adcl
iret
mov
add
mov
cwtl
dec
push
pop
xor
mov
adc
pop
and
movsl
cmp
out
lea
sahf
mov
in
lea
cs
repnz
or
add
pop
cmp
dec
push
adc
pop
lcall
and
es
fisttpll
xchg
mov
sub
pop
cltd
ljmp
push
sub
andb
pop
inc
popa
sahf
in
mov
jnp
daa
pmaxub
jge
test
mov
cmp
insl
es
pop
pop
xchg
dec
stos
nop
shrl
xchg
out
push
mov
loopne
sub
outsl
notb
add
cmp
stos
sti
xchg
insl
push
adc
mov
inc
orl
mov
mov
mov
sbb
cmp
outsb
jo
shll
jbe
sub
shrb
add
out
sti
pop
inc
add
filds
adc
das
filds
sub
nopl
std
xchg
shrl
mov
pushf
dec
shrb
ret
cmp
frstor
sub
test
pop
dec
dec
pusha
mov
aam
nop
into
jl
pop
shlb
daa
jne
bound
cltd
adc
cwtl
fwait
rorl
dec
push
nop
inc
lock
stos
mov
xor
in
lds
jle
outsl
ret
or
subb
fildll
nop
jl
jg
push
stos
lods
push
shrb
cmp
adc
leave
dec
mov
cwtl
jmp
pop
notl
out
movsb
lods
jecxz
cld
fsubrl
jno
cmp
loop
push
aas
jg
push
push
and
mov
xchg
xchg
out
inc
mov
xchg
cltd
addr16
stos
sub
and
push
jge
lahf
xor
mov
cld
outsb
and
jae
and
ljmp
mov
dec
lods
in
cld
cmp
mov
popa
call
subb
daa
jne
cwtl
das
clc
mov
js
jae
jns
xor
xor
fs
je
cmpw
mov
pop
out
inc
pushf
les
bound
sbb
jl
add
and
das
ret
pop
popa
cmp
std
mov
imul
fmuls
lahf
out
mov
adc
imul
dec
mov
rclb
adc
loop
cmp
and
cmc
adc
push
sub
or
push
scas
call
mov
adc
xchg
inc
xorb
cmp
xlat
scas
dec
and
test
clc
loop
jno
loope
inc
cli
hlt
mov
cli
mov
ss
pop
xor
sub
mov
fidivrl
or
lahf
push
push
jmp
push
imul
jb
dec
test
lods
sub
inc
xchg
cmp
cli
mov
mov
jmp
lds
jae
cltd
dec
or
addl
xchg
pop
and
aam
adc
fmuls
test
lahf
rol
sbb
ret
lock
lock
aam
jae
jl
mov
lcall
mov
aad
cltd
or
push
out
negb
clc
int
mov
jge
les
mov
ret
or
in
aam
insl
addl
mov
hlt
mov
je
and
pop
jb
lea
mov
js
movsb
shrb
outsl
data16
sti
pop
xor
daa
adc
inc
xor
push
push
xchg
shlb
call
les
mov
in
iret
adc
sbb
lock
add
or
ljmp
ds
je
pop
xor
cmpb
sbb
mov
sbb
xchg
inc
or
hlt
das
lds
daa
addl
mov
adc
fistps
rcl
out
sub
sbb
ret
dec
cmp
cmp
cmpsb
aaa
repnz
cld
add
inc
popa
int
push
add
das
add
lcall
push
push
lods
fdivs
push
cmp
push
or
hlt
cmp
mov
fcomip
jae
inc
inc
vmovd
cli
nop
sahf
pop
jb
xor
cli
jne
pop
or
mov
or
add
pop
mov
mov
cmp
add
pop
and
sar
jp
aas
mov
pop
cmp
cs
pop
loopne
add
inc
rcll
lods
test
sbb
xor
jge
cmp
sahf
push
out
mov
cmp
outsl
cmp
lods
outsl
shlb
push
xchg
stos
nop
ja,pt
jo
mov
jle
mov
dec
mov
mov
pop
adc
aad
xor
push
mov
das
iret
out
or
fidivrl
pop
insl
sahf
or
xchg
out
xchg
mov
dec
push
push
push
sbbl
inc
in
sbb
adc
cmp
xchg
sbb
inc
in
cmp
lods
sub
aaa
fsts
addr16
sbb
and
mov
add
and
add
inc
scas
cmp
popl
sarb
mov
js
outsb
daa
test
mov
shl
lds
jle
cltd
add
loop
test
enter
outsb
outsb
in
pop
adc
scas
inc
cmp
dec
loop
mov
mov
ja
push
movsb
clc
out
cmpsb
sbb
xchg
test
aaa
pop
aam
or
fistps
scas
sub
push
inc
sar
mov
adcb
sbb
xchg
jno
mov
out
sahf
dec
add
dec
outsb
xorb
ds
xchg
pop
in
xor
enter
addr16
mov
aam
lods
inc
in
push
scas
sbb
adc
mov
xchg
out
decl
mov
add
mov
and
jae
lret
cmpsl
ret
push
call
cmc
push
outsl
push
sub
jo
xchg
mov
jmp
xor
lret
iret
rcrb
push
insb
push
repz
in
push
fildll
test
dec
dec
hlt
jecxz
jg
inc
pop
pop
repnz
test
sub
inc
mov
inc
mov
xor
nop
dec
rcr
mov
loop
test
arpl
adc
pop
fwait
adc
out
movsl
enter
cmp
cld
insb
aas
ret
imul
mov
dec
imul
xchg
xchg
push
scas
mov
arpl
iret
mov
aad
sahf
fstl
fists
out
inc
insl
cmp
repnz
sub
xchg
call
imul
cmpsb
jmp
and
jo
or
dec
xchg
cmpsb
repz
jbe
sbbl
andl
push
jmp
adc
leave
xchg
jbe
xchg
iret
mov
test
aam
sbb
ficoms
xor
cld
xchg
cwtl
das
lea
imul
mov
mov
arpl
aam
leave
pop
pusha
movsl
or
mov
loopne
mov
pop
pop
sub
push
pop
jle
daa
daa
fcoms
dec
scas
inc
jmp
test
sub
stos
rorb
mov
inc
mov
fs
dec
add
or
imul
xchg
add
sub
push
dec
dec
xor
nop
push
mov
es
insb
in
xchg
cmp
jmp
jmp
insl
test
inc
cmp
jmp
mov
ds
insb
addb
mov
fwait
adc
lds
or
pushf
xorl
das
cmpsb
pop
jge
pop
mov
pop
repz
or
repz
pop
adc
rorl
adcb
in
cmpsb
shr
stos
inc
aaa
test
inc
pop
test
inc
mov
test
fidivl
or
lods
pop
mov
dec
loopne
jae
jp
or
inc
mov
dec
dec
sub
add
lret
xchg
stos
mov
jmp
imul
push
mov
int3
adc
mov
out
xchg
sbb
insb
adc
mov
je
shlb
add
rcrl
xchg
ss
fs
jo
shll
add
pop
xchg
jl
nop
and
xchg
xor
rclb
mul
daa
cmp
aas
fmull
pop
outsl
in
test
inc
aaa
fisttpl
pop
arpl
inc
out
jl
cmp
fisubrs
movl
in
stos
mov
pop
add
pop
and
imul
addr16
mov
mov
outsl
stc
xchg
fsub
testb
push
movsl
outsl
push
mov
les
fimull
sti
arpl
js
fadds
pusha
mov
mov
pop
pop
into
outsb
inc
and
js
xchg
dec
shrl
enter
shlb
adc
mov
in
adc
sub
bound
out
pop
movsb
jecxz
idivl
or
pop
cmp
loope
leave
jnp
sahf
and
xchg
pushl
insb
sbb
xchg
sub
adc
sbb
cwtl
in
insb
insb
sub
pop
pop
cmp
add
into
xlat
dec
jecxz
pop
cmp
out
out
std
pop
lret
jb
cmp
into
mov
mov
cmpl
adc
hlt
cmp
sbb
fdivl
pop
out
dec
roll
pop
daa
cltd
imul
aam
add
and
ss
add
lret
xchg
pushf
aaa
sub
jnp
pop
stos
xchg
sbb
adcl
pusha
and
sti
insb
sarb
push
add
shrb
cmp
aam
or
in
pop
cli
cltd
negl
mov
or
stos
mov
xchg
lret
lock
lret
cmp
add
xor
inc
jbe
aad
mov
jns
xor
iret
out
mov
ret
cmp
movsl
loope
repz
pop
ret
inc
mov
es
pop
in
idivl
cltd
aad
call
popf
pop
inc
push
fnstcw
xor
js
ss
adc
call
push
add
sub
mov
addb
pop
sahf
rorb
test
sub
int
stc
aam
adc
mov
in
das
add
adc
cltd
stos
jmp
pop
rcrb
orb
pop
mov
push
lcall
inc
mov
or
xlat
push
jno
enter
pop
mov
sbb
aas
sarb
inc
dec
push
cmpsb
push
jae
es
gs
in
pop
sbb
outsl
and
and
mov
jns
ljmp
ret
mov
inc
or
lea
clc
mov
push
adc
sbb
addr16
scas
gs
mov
push
push
jg
adc
pop
push
addr16
jmp
shl
fisttpll
loope
push
std
lods
lds
fistps
ja
sar
cmp
out
movsb
cmp
cmpsb
fwait
test
pop
adc
aaa
pop
mov
xchg
mov
mov
js
movsb
bound
insl
xchg
sub
lods
xchg
add
cwtl
decl
xchg
pop
dec
and
fnstcw
lahf
addr16
lods
and
dec
mov
imul
jnp
imul
call
arpl
add
mov
jp
rsqrtps
inc
pop
sahf
push
out
cmp
data16
stos
test
subl
sub
lahf
rclb
jae
in
shlb
push
jp
in
sar
js
gs
push
or
mov
frstor
sbb
loop
daa
pop
dec
pop
push
iret
shr
hlt
aas
adc
push
mov
icebp
cmovb
test
addr16
pop
xchg
jecxz
jmp
ljmp
add
hlt
mov
test
cmp
test
scas
dec
mov
loopne
cli
lret
jg
mov
inc
mov
or
or
ficomps
dec
fistps
inc
jae
sbb
or
or
lock
jl
xchg
jle
pop
outsl
sahf
sub
pop
cmpsl
popf
sbb
xchg
adc
fcoml
aam
int
xchg
movsl
nop
xor
cmc
rcll
lahf
repz
fbstp
mov
and
push
bound
pop
xchg
jns
pushf
lea
es
mov
cmp
xchg
or
mov
cmp
mov
add
pop
mov
mov
xlat
nop/reserved
xchg
loop
sbb
mov
enter
arpl
add
jp
scas
mov
scas
push
sarb
in
daa
ret
adc
mov
cmpb
icebp
cwtl
jne
out
fisubrs
cmp
les
mov
mov
dec
popf
stos
jns
xor
xchg
insb
rol
iret
dec
cwtl
jne
loope
or
mov
mov
push
sarb
xchg
mov
mov
push
iret
jbe
insl
adcl
iret
rcrb
enter
std
nop
dec
ljmp
in
lds
xchg
or
or
stos
fimull
testb
cmp
hlt
pushf
pop
push
push
shll
xlat
cwtl
hlt
fidivs
mov
dec
mov
inc
inc
hlt
mov
and
sbb
jl
insb
roll
jle
mov
int
mov
push
daa
lahf
pop
jge
push
mov
add
lods
popa
aad
adcb
mov
adc
xchg
pop
subb
fcompl
clc
outsb
mov
popa
aas
jne
ret
cmp
xchg
jns
shll
add
int
sbb
addr16
loop
jae
dec
cltd
aaa
cmpsb
pop
xchg
mov
or
into
adc
int
fs
iret
stc
les
test
aad
fucomip
inc
mov
xchg
outsb
es
imul
adc
inc
xor
iret
test
sbb
iret
dec
mov
je
insb
or
sahf
leave
jle
cli
mov
sub
iret
outsb
clc
mov
sti
add
fwait
mov
rorl
dec
push
lcall
ja
in
jo
fnsave
lock
push
adc
push
les
flds
push
in
out
into
mov
dec
in
cmpsb
sti
stos
into
pop
push
sub
jnp
in
roll
xchg
js
lds
stos
lahf
repnz
ror
gs
cmpsl
stos
xchg
flds
and
jg
in
fildl
pop
lret
xchg
popa
mov
xchg
roll
enter
fsub
popa
mov
dec
faddl
adc
ss
fwait
push
es
pop
sub
xchg
jp
aam
lret
stc
push
fsubs
mov
cmpsb
nop
xchg
xor
mov
push
xor
push
addb
jns
cli
rorb
loop
adc
mov
add
jae
inc
movsl
das
inc
inc
fisubrs
aaa
popa
je
push
push
and
sub
or
mov
imulb
sbb
mov
cltd
mov
dec
out
daa
outsl
jl
adc
inc
jns
sbb
fucom
xchg
add
inc
lret
and
xchg
test
jg
pushf
xchg
sub
out
sbb
inc
mov
outsb
mov
movsl
sub
frstor
lods
xchg
aam
add
outsb
mov
mov
lret
cs
ds
outsl
jnp
dec
pop
cli
out
cwtl
sbb
mov
call
cmp
nop
push
sbb
pop
cwtl
jo
test
loope,pt
je
pop
stos
and
iret
push
push
xor
cmp
or
mov
fcomip
push
mov
je
cmp
jecxz
mov
popf
mov
js
mov
push
imul
rcrl
fs
int3
xorl
ds
cli
mov
inc
jns
test
lock
rorl
jbe
cmp
push
mov
outsb
aad
loope
jg
or
pop
adc
lahf
cmp
andl
aaa
ret
mov
sbb
lahf
lcall
jo
mov
scas
xchg
xor
mov
push
fnstenv
in
cmp
imul
push
mov
mov
xor
jmp
fidivs
inc
jb
pusha
mov
popa
repz
bound
push
loop
fcmovb
mov
mov
push
out
pop
cs
adc
test
push
fistpl
mov
mov
daa
or
xchg
xchg
decb
in
push
in
push
es
cs
and
movl
dec
and
push
inc
popl
inc
repz
mov
dec
aam
repz
in
roll
dec
jge,pt
push
mov
sub
push
push
xor
sti
jg
cmp
adc
sub
add
outsl
das
dec
lods
inc
ds
insb
sub
jp
popf
dec
out
fistpll
jmp
inc
push
mov
adc
cltd
xchg
lods
dec
mov
sub
push
repnz
jbe
push
test
std
int3
mov
sbb
mov
xor
rclb
dec
pop
stc
add
je
mov
lret
sarb
fs
or
jmp
inc
scas
xor
into
pop
mov
and
pop
jno
or
cs
add
jge
or
dec
repz
sub
cmp
in
es
pusha
lahf
ljmp
xor
inc
mov
lods
flds
das
jae
popa
mov
popf
fstl
test
out
insb
adc
fidivs
jne
lea
aam
jns
and
adc
push
jne
popa
out
push
loop
mov
pop
pop
lret
cmp
mov
push
out
pop
push
arpl
aas
movsb
lahf
stos
sub
push
fdivr
xchg
aad
dec
lret
arpl
cld
out
pop
out
lret
sbbl
xchg
arpl
mov
push
push
cmc
aaa
ss
sub
popf
xor
xchg
add
test
or
xor
leave
cmpsb
push
mov
fmuls
inc
cmp
fmull
ret
mov
mov
xchg
mov
iret
jb
inc
xchg
not
xchg
cmpsb
pop
xchg
bound
icebp
xchg
xchg
cltd
int
and
pop
jmp
jp
popf
ret
in
cs
stos
pop
pop
sahf
cmc
ret
xorb
or
out
inc
inc
dec
dec
inc
xor
loopne
sub
stos
jne
stc
lret
data16
fdivr
mov
pop
dec
inc
inc
mov
ja
aam
sub
arpl
mov
cld
movsl
jae
aaa
pop
sbb
lds
jp
lds
jg
sahf
stos
push
inc
ss
mov
push
cli
mov
stc
xchg
push
xor
sub
mov
mov
xor
push
pop
inc
jne
mov
imul
ret
aam
mov
and
inc
in
xor
popa
push
popf
xchg
aas
testb
jle
loopne
adc
addr16
push
std
dec
enter
pop
out
lahf
out
adc
adc
sbbb
shll
mov
mov
popf
dec
int3
lds
cmp
inc
aas
mov
mov
imul
jae
pop
lahf
jmp
mov
loopne
into
and
mov
pop
push
xchg
jle
dec
jns
fildll
jl
mov
pushf
and
mov
xor
jb
jecxz
addr16
cli
push
mov
inc
pop
jecxz
sbbl
sbb
mov
adc
test
mov
cld
clc
rorl
aam
scas
pop
test
out
test
arpl
inc
xchg
cmp
push
ret
jnp
mov
jb
lds
jecxz
xor
fildll
shl
std
xchg
je
shll
loop
imul
cmpsl
mov
addl
fs
daa
pop
dec
repz
test
loop
mov
sub
rcll
in
pop
scas
mov
outsl
jge
movsb
dec
pop
dec
mov
mov
and
movsb
arpl
cmovo
std
or
enter
sub
cltd
scas
inc
cmpsl
mov
daa
outsl
loop
das
push
push
test
sbb
mov
js
dec
and
cltd
add
mov
imul
ljmpw
push
sbb
push
sbb
mov
mov
fs
cwtl
or
out
mov
mov
or
andb
fistpl
data16
loope
xorl
ss
ss
push
push
mov
dec
mov
inc
aad
js
or
xor
sbb
mov
sub
in
jp
lds
stc
lret
sti
sbb
cmp
mov
lahf
mov
inc
out
and
mov
mov
xor
cmc
inc
loop
add
mov
fimull
movsl
and
jle
jno
aad
mov
test
mov
loopne
ss
lds
scas
add
push
xor
xor
or
jno
lds
jg
stc
bound
jge
pop
scas
inc
sbb
lock
je
or
subb
pop
jecxz
imul
inc
fnstenv
push
mov
popf
inc
ljmp
outsb
inc
cmpsb
inc
or
into
in
xchg
add
loop
hlt
xor
fdiv
cmp
pop
push
test
adc
add
faddp
gs
xor
mov
pop
mov
pushf
je
push
or
sti
mov
sub
sbb
ds
mov
add
mov
push
sub
hlt
sbb
pop
jge
pushf
add
push
xchg
movsl
ret
jb
push
rcr
jo
rclb
pop
mov
inc
outsb
adc
sub
lcall
jmp
ret
pop
and
ss
dec
add
pusha
jecxz
mov
xchg
inc
imul
add
push
xchg
push
push
lods
das
mov
xor
xlat
leave
iret
dec
in
lods
fldenv
xrelease
and
xchg
and
dec
xor
loope
insl
sahf
testl
cmpsb
lock
imul
cwtl
xchg
addr16
arpl
pop
xchg
daa
shrb
pop
in
xlat
cs
arpl
call
dec
jp
push
jns
mov
mov
pop
ret
es
jg
nop
insb
push
push
lea
and
add
mov
out
jnp
lcall
iret
icebp
mov
lock
out
adc
je
and
in
pop
push
sub
hlt
mov
add
cmp
xorb
fdivl
cmc
fnstenv
xor
cmp
jge
pop
daa
dec
in
mov
mov
pop
mov
jg
pop
icebp
ficoms
mov
mov
jge
lret
rol
clc
mov
xchg
push
ret
adc
popl
dec
test
cmpsb
mov
hlt
icebp
fsts
xor
or
clc
sahf
push
aaa
movd
addr16
test
fsubr
inc
stos
xchg
jle
out
jbe
inc
aad
int
jmp
into
sbb
push
mov
mov
bound
jmp
es
mov
cmc
adc
mov
int
mov
dec
mov
pop
bound
sahf
add
shrb
clc
adc
out
in
test
mov
imul
mov
enter
cmpsl
fwait
push
dec
mov
push
jns
iret
and
fisubl
call
xor
rorl
mov
xchg
jnp
mov
sbb
enter
loopne
xchg
aaa
call
mov
and
ljmp
sbb
pushf
dec
push
pop
out
aas
imul
insb
cwtl
das
rorb
lret
xchg
mov
push
ds
movsb
nop
pop
xorl
pop
mov
popa
aam
arpl
xor
imul
lea
mov
inc
sub
xchg
dec
int3
dec
or
mov
outsl
lcall
inc
test
fcom
xchg
mov
jmp
push
jmp
mov
xchg
int
sbb
adc
or
or
sub
jbe
pushl
push
xor
xchg
pop
fiadds
xchg
pop
lds
dec
push
test
push
mov
add
clc
or
lds
push
or
fs
pop
mov
or
cmp
rcrb
push
mov
push
push
cmp
cmpsl
leave
test
adc
jbe
and
mov
outsl
jecxz
aad
mov
mov
inc
inc
dec
xchg
in
test
jns
or
xchg
sub
sbb
fdivrs
cmpsb
jne
pop
insb
jle
cmp
jle
cmp
fidivl
cmp
mov
scas
dec
dec
sub
hlt
push
xor
mov
fmul
xchg
movsl
push
jae
rcl
sub
or
inc
arpl
mov
fsubs
sahf
pop
push
sbb
jl
xor
dec
les
lock
daa
xor
lods
cmp
shlb
adc
mov
pop
mov
repz
add
js
mov
mov
pop
pop
sbb
dec
in
adc
lcall
jne
adc
hlt
shrl
pop
cltd
test
lcall
lds
xor
movsb
sbb
sahf
adc
das
mov
fdivrl
ret
mov
jns
and
jle
and
mov
addr16
popa
ss
popa
cmp
bnd
xchg
mov
insb
xor
dec
imul
scas
pop
iret
dec
shll
mov
cmc
ja
jp
repnz
movsb
addr16
cwtl
push
pop
pop
ljmp
dec
lds
sbb
mov
gs
xor
xor
imul
inc
push
in
xchg
xchg
push
inc
inc
ret
push
push
shlb
mov
jge
sbb
push
insl
icebp
pop
sbb
cmp
test
xor
jae
inc
add
in
ljmp
cli
and
jmp
outsl
sbb
loope
push
fstpt
jg
mov
push
hlt
pop
cwtl
jb
or
test
push
mov
pop
and
inc
addb
in
sahf
dec
push
xlat
int3
nop
sub
xor
xchg
adc
insb
inc
mov
lods
shrb
lea
xor
pop
and
xchg
nop
std
xchg
pop
add
pop
orl
icebp
inc
daa
addb
movsb
cmp
mov
ror
xor
pop
add
mov
xor
push
in
insb
lret
out
cltd
testb
push
xchg
pushf
lods
loop
out
out
test
mov
adc
es
inc
xlat
std
pusha
int3
cs
lret
ja
and
rorl
mov
int3
adc
jbe
sti
shlb
shrl
repnz
push
lds
jne
push
mov
clc
jge
and
daa
lahf
jg
shll
popf
xor
enter
ljmp
jmp
and
jno
adc
mov
andb
das
inc
cmp
push
jp
cmp
mov
sub
jne
push
in
mov
or
xchg
add
jmp
rcr
jbe
insb
mov
push
mov
shrl
stos
xchg
fnsave
xchg
mov
lcall
and
mov
les
pushf
adc
mov
xchg
fistps
push
test
cmpl
inc
sti
add
scas
xchg
xor
or
ret
iret
orb
out
sub
jns
psllq
loopne
test
sbb
adc
scas
fsubrs
xchg
mov
or
ja
or
insb
add
sbbb
xchg
out
pop
scas
in
add
add
stos
inc
xchg
pop
sahf
pop
jnp
popf
scas
mov
out
idivb
pop
fidivrs
pusha
jecxz
xlat
push
push
mov
pop
icebp
sbb
rcrl
mov
cmpsl
ljmp
lds
outsb
outsl
xor
jns
cld
pushf
jg
test
xchg
pop
pop
add
sub
jns
sub
jecxz
clc
loopne
jno
pop
mov
xchg
clc
or
pop
pop
loop
fstpl
lock
out
push
mov
enter
popa
xor
shr
sbb
sub
sbb
stos
mov
aaa
addr16
cmp
stc
or
sbb
icebp
iret
cmpsb
fldt
popa
scas
inc
pusha
loopne
push
mov
cmc
dec
pop
jp
sub
pop
and
loope
sbb
add
inc
push
xor
into
cmp
pop
inc
arpl
mov
pop
jb
fwait
adc
lret
inc
mov
or
dec
in
into
shlb
test
add
mov
movsl
sbb
pop
out
int3
fdivp
push
or
cmp
lods
pusha
add
xlat
cld
mov
jmp
test
call
push
mov
jae
cmp
imul
fldl
adc
jno
mov
xor
test
sub
xor
repnz
enter
ret
shrl
mov
xchg
mov
or
lds
rcll
add
lahf
out
mov
mov
add
sbb
sbb
and
outsl
aas
or
repnz
dec
rorb
adc
mull
push
out
inc
or
add
test
push
scas
lock
mov
adc
rcrb
jo
aam
jb
xlat
and
or
mov
xchg
pop
and
pop
sbb
int
jecxz
outsl
cmp
lahf
mov
dec
mov
cli
jecxz
ret
add
adc
ss
hlt
adc
loopne
sbb
sbb
and
push
cmpsb
jns
cmc
mov
mov
in
dec
and
inc
xor
in
mov
jl
add
test
fisttpl
cmpl
fdivp
lcall
in
test
jne
mov
push
and
push
movsl
fwait
cmpl
or
mov
mov
sub
xchg
sahf
stos
mov
xchg
or
jne
sub
pop
insb
dec
inc
sbb
inc
scas
and
push
mov
xchg
mov
call
and
dec
lea
mov
loop
xor
scas
call
lret
orl
jle
ljmp
imul
inc
movsb
pop
imul
ret
fists
int
jbe
mov
mov
mov
cmp
fldl
or
addr16
add
cmp
pop
add
or
adc
xor
adc
es
test
aaa
mov
out
lret
adc
ss
jo
lcall
in
mov
call
adc
xorb
xor
lret
xchg
pop
sbb
ret
xor
xchg
hlt
pop
sub
adc
clc
addr16
and
push
inc
sub
ja
add
push
inc
dec
xor
es
sti
xor
fnsave
lcall
repz
out
outsl
or
mov
push
testb
fsubrl
push
cmp
sti
adc
mov
pop
repz
push
stc
inc
xor
jnp
jl
mov
test
iret
out
mov
adc
fidivrs
fwait
test
push
xchg
jnp
xor
aam
jmp
fld
jge
scas
fiaddl
pop
mov
ss
or
xor
andl
jb
fildll
cmp
insb
cld
add
mov
cmpsl
dec
popa
mov
mov
sub
lock
cmc
sub
pop
pop
pop
addb
inc
xor
xchg
mov
bound
es
es
or
jo
cmc
jbe
adc
jno
sahf
pusha
es
adc
dec
es
push
mov
inc
push
sbb
loopne
into
iret
mov
test
out
inc
cld
push
lret
int
pop
mov
ret
pop
ss
xchg
adc
gs
int
movsl
pop
adc
jle
aam
fistpl
mul
jl
out
pop
and
mov
outsb
test
adc
mov
insb
movsb
std
lods
fnstsw
or
adc
mov
pop
mov
push
aas
jnp
dec
pop
cld
imul
push
xchg
jge
mov
add
add
call
test
ds
jno
cmp
inc
xchg
mov
push
pushf
scas
mov
pusha
in
jae
xchg
xchg
dec
xchg
jbe
mov
pop
cmc
mov
popa
cli
pop
mov
subb
mov
push
stos
insb
inc
ljmp
repz
cmp
test
xlat
dec
or
scas
call
mov
pusha
add
pop
xor
mov
inc
lcall
add
xchg
pop
je
aaa
push
cltd
sbbb
shll
out
xor
nop
sarl
mov
lcall
fwait
dec
adc
testb
imul
pushf
or
scas
inc
cld
in
jae
nop
in
pop
scas
mov
push
xor
int
scas
dec
mov
daa
rorb
aad
adc
sbb
adc
or
shrl
lds
add
or
les
out
decb
movsl
inc
out
lods
cmp
dec
cs
xchg
and
jo
xchg
lcall
or
shlb
jo
xor
push
cs
mov
lock
fsubrp
stos
push
repnz
pop
xor
in
loop
cpuid
mov
cltd
rclb
mov
sahf
xor
cltd
mov
dec
flds
pop
repnz
ja
aaa
inc
pop
mov
mov
es
je
dec
jmp
and
cmp
and
adc
popa
mov
pop
testb
std
adc
fbld
adc
pushf
or
dec
pop
in
call
jae
jg
sbb
fdivrp
cmpsl
sub
pop
inc
adc
inc
xor
lods
add
test
popf
add
mull
in
xlat
in
and
jge
push
dec
aad
cli
shrl
orl
mov
mov
arpl
fwait
out
push
int3
dec
xchg
loop
mov
lock
negb
pop
cltd
and
cmc
jo
out
aas
xchg
fdivl
jle
out
inc
cli
test
mov
orb
cpuid
arpl
pop
fstl
cmp
jp
cmp
adc
dec
in
mov
or
cmp
push
ja
rol
les
jmp
insb
sbb
or
subb
sbb
and
sub
mov
lret
test
add
xchg
xchg
pop
leave
mov
pop
stc
mov
pusha
pop
inc
inc
fnstenv
mov
sbbb
cmpsb
test
fcomip
out
or
cmp
lock
add
cwtl
cmp
outsl
pop
leave
popf
xorb
jo
sbb
adc
popf
lcall
adc
add
jae
jb
arpl
repz
push
mov
out
dec
daa
lods
add
aad
mov
add
dec
inc
aaa
sub
push
add
mov
popa
ljmp
jae
push
imul
push
or
xor
loop
pop
repnz
popaw
cmp
cwtl
pop
lock
cltd
je
out
ja
icebp
pop
xlat
pop
xlat
push
hlt
mov
imul
popf
rol
mov
or
push
lcall
push
mov
add
inc
add
aas
pop
pop
pop
rcll
fdivrl
mov
stos
mov
ss
dec
and
fstl
jb
push
cs
xchg
in
aaa
test
push
mov
mov
push
shlb
add
in
fcmovbe
rcrl
ja
cmp
pop
xor
daa
sbb
push
xor
cmp
insb
cmp
sbb
popf
andb
scas
pusha
mov
jge
es
pop
sahf
inc
push
dec
mov
cmp
mov
lahf
push
xor
jle
or
fnstcw
jle
sbb
and
jmp
xlat
mov
mov
fsubrl
sahf
daa
iret
jp
ror
icebp
and
or
xchg
xchg
mov
mov
fstp
imul
rcrb
and
stc
fisubrs
mov
sbb
shll
daa
fdivrs
in
cmp
int
sbb
aad
sbb
xchg
push
mov
xlat
cmp
mov
sbb
addr16
test
hlt
pop
adc
js
sahf
ds
in
cwtl
inc
cs
incl
lods
mov
cli
mov
test
mov
mov
adc
mov
dec
inc
lret
sbb
aas
popa
clc
lods
aaa
or
push
mov
and
sbb
jne
pop
stos
jg
xchg
sub
mov
mov
stos
mov
adc
and
mov
cs
cmp
test
leave
lcall
mov
inc
fadd
mov
mov
push
imul
int3
xor
mov
mov
sbb
or
aad
mov
fldenv
rcll
cs
pusha
je
out
mov
into
testb
loop
movb
fcomp
fistps
maskmovq
negl
mov
add
aaa
cltd
fs
in
xchg
sub
cmc
push
mov
iret
cli
test
cld
rorb
inc
pop
ror
mov
loope
in
insl
push
lods
jg
mov
adc
push
cmc
or
xor
fbstp
xchg
mov
push
in
je
stc
into
jb
cmpsb
stos
inc
sbb
shl
shr
xor
ljmp
lcall
lcall
push
out
movl
pop
out
push
lcall
jbe
pop
lcall
sbb
pop
mov
out
movsl
jns
cmpl
inc
xchg
nop
ja
mov
mov
movsb
ret
das
pop
stos
jmp
stc
in
dec
mov
es
push
push
pushf
sub
pop
pop
mov
pop
cmc
mov
push
movsl
dec
add
xorb
cmp
xchg
insb
scas
inc
sahf
jp
addr16
cli
dec
push
sub
xchg
mov
jp
push
lods
inc
sub
lret
or
or
lea
or
pop
imul
sub
aaa
dec
out
test
jmp
outsb
addr16
int3
mov
outsb
rclb
inc
cmp
loop
cmp
jmp
ds
or
sbb
mov
push
test
inc
inc
xor
add
sarb
or
test
mov
push
out
iret
data16
or
std
leave
in
sub
cs
rolb
jg
jecxz
shrb
outsl
sbb
fisubs
mov
addb
cmc
scas
adc
push
in
test
testb
mov
push
sub
xor
out
push
inc
or
jbe
or
aam
cmp
pop
pop
mov
pop
sbbl
into
fcmovnu
outsl
jge
cmp
hlt
sahf
testb
mov
adcl
fsubrs
inc
xor
sbb
imul
test
int
and
mov
je
popf
mov
push
out
rcl
sbb
pusha
les
in
mov
je
enter
loop
push
imull
mov
hlt
inc
push
cmp
movsb
mov
xor
imul
fldenv
lds
add
mov
bound
data16
inc
outsl
push
xor
pop
adc
and
or
inc
clc
mov
test
pop
sbb
mov
sarl
adc
jecxz
sbb
je
repnz
mov
pop
or
push
ds
mov
cmp
mov
sub
mov
mov
sbb
mov
sbb
jb
mov
add
cmp
push
add
sbb
insb
jne
mov
push
xor
iret
xor
and
aad
xchg
aaa
ret
pop
imul
outsb
or
cmpsb
mov
cmp
repz
int3
xchg
add
push
popf
pop
jg
push
jne
mov
mov
jnp
repz
mov
dec
mov
jae
bound
add
or
js
lret
data16
lods
imul
mov
push
fwait
leave
and
ljmp
inc
mov
dec
push
sub
xchg
mov
rcrl
in
sbb
je
mov
xchg
shl
popf
cmp
cs
or
inc
lret
sbb
push
sub
std
das
inc
add
pop
dec
pop
xchg
and
pop
mul
jnp
sbb
ja
imul
jp
xchg
sub
add
jmp
pop
imul
dec
in
cmp
mov
or
jg
dec
jl
xchg
outsb
jl
je
iret
xchg
cmp
movsl
cmp
xchg
je
add
and
mov
les
fisttps
xchg
mov
rol
jnp
push
cmpsl
incb
cmp
pop
ret
insl
je
ds
int
daa
hlt
scas
cmc
pop
filds
adc
sbb
xchg
mov
mov
cmp
fnstenv
dec
ret
pop
pop
subb
sub
mov
rcrl
scas
cmc
jno
mov
add
leave
push
data16
adc
scas
cld
lret
adc
lods
test
adc
mov
test
cmpl
fwait
lret
cs
jmp
into
sbb
xchg
sbb
scas
loop
mov
ljmp
dec
xor
push
leave
mov
xor
fsubr
ror
add
pop
stos
add
pop
testl
loop
pushf
lea
xchg
xor
sbb
mov
out
ss
loopne
mov
scas
punpckldq
mov
mov
add
iret
mov
popf
test
xchg
adc
sbb
push
dec
cmp
icebp
adc
ljmp
adc
cmp
sbb
mov
jnp
or
cwtl
lods
inc
sub
jo
pop
movsb
loopne
int
ds
fcmovb
into
shrb
fwait
dec
push
repnz
mov
lea
pop
lahf
fs
clc
lahf
pop
inc
xchg
repnz
adc
pop
popa
ret
lods
mov
sahf
shl
jo
pop
imul
ret
pop
repnz
sahf
gs
pop
cmp
and
std
xchg
shlb
adc
xchg
mov
dec
mov
mov
lret
movsl
xor
out
and
mov
mov
xor
sbb
dec
mov
mov
sarb
dec
dec
in
dec
sahf
imul
js
dec
in
xor
mov
and
daa
gs
int
dec
xor
cmp
enter
daa
mov
mov
mov
imul
aaa
clc
icebp
pop
lret
lret
aad
xchg
dec
cs
mov
fdivp
pop
movsl
sub
sub
inc
adc
cltd
or
js
add
insb
dec
or
pop
rcl
add
movsl
jnp
aas
jno
or
les
movsl
js
popf
out
jno
lods
incl
in
in
loopne
repnz
xchg
cmp
jno
mov
sub
addr16
dec
push
cmp
incb
fdivr
add
das
cli
stos
xchg
and
iret
sub
test
call
push
daa
mov
repz
ss
push
outsl
mov
dec
jne
jl
cvtdq2ps
mov
cmc
cmpb
movl
jno
scas
imulb
push
sbb
and
pop
jmp
or
pop
pusha
out
ja
adc
jne
sub
movsb
arpl
sbb
mov
pushfw
jmp
test
pushf
sub
adc
sbb
insl
icebp
inc
fs
movsl
xchg
movsb
cmp
clc
xchg
cld
scas
dec
mov
and
dec
daa
pop
push
arpl
cld
fstp
scas
mov
in
loopne
stc
ficomps
rclb
sbb
and
lcall
push
adc
fistps
dec
cmp
repz
subb
popl
mov
pop
jg
sub
jno
sbb
lea
movsb
mov
xchg
gs
fdivrp
movsb
xchg
inc
push
inc
aas
shll
sub
xor
inc
pop
dec
out
mov
loope
clc
dec
popf
cmp
mov
inc
test
loopne
test
mov
sbb
into
xor
lahf
in
les
out
xor
into
movsl
xor
pop
testl
in
std
in
xor
inc
clc
dec
xor
icebp
dec
inc
and
mov
imul
mov
pop
jp
test
push
fsts
xchg
lret
lods
inc
xor
popa
inc
pop
jmp
mov
and
and
std
push
rcpps
or
je
pop
sub
sbb
pushf
sahf
ja
repz
in
sbbl
xchg
pusha
mov
push
cmc
cmc
in
mov
mov
xchg
cmp
dec
pop
loope
jae
popf
xchg
test
in
add
nop
xor
jge
test
repz
scas
adcl
scas
cwtl
fbld
inc
and
jb
insb
enter
subb
jg
andb
pop
jmp
cmp
and
pop
gs
call
dec
mov
stos
aas
popa
or
mov
incl
repz
add
adc
mov
cmp
pop
dec
cld
sarb
cmpsb
xlat
lcall
or
sahf
lods
xchg
ret
or
daa
xchg
in
scas
mov
stos
pusha
lcall
xchg
mov
mov
test
pusha
jle
in
mov
test
push
cltd
xor
sub
jp
and
stc
std
push
jg
aaa
aad
gs
jle
and
sbb
in
pushf
pop
mov
sub
sbb
lret
push
dec
cmp
sub
js
mov
adc
cbtw
test
and
cli
fcompl
mov
aam
in
mulb
pop
sti
out
sub
out
pop
xchg
dec
jg
clc
xor
into
jecxz
sahf
inc
mov
xchg
shrb
es
mov
push
jp
or
inc
or
decb
cli
mov
lods
orb
fsubrl
push
mov
jns
lods
cmp
repnz
jns
mov
fstpl
or
lods
in
or
adc
or
in
add
imul
and
rcll
inc
add
xor
mov
movsl
clc
lock
mov
ret
dec
gs
push
fsub
lea
testl
cmc
adc
call
xchg
rcrl
rorb
ret
mov
cmp
test
push
push
xchg
or
mov
mov
inc
mov
dec
ds
mov
leave
stc
jno
frstor
mov
insl
pop
or
cmp
divb
cltd
sti
jbe
shrb
lds
dec
fstpt
cmpsl
out
push
dec
pop
icebp
jp
rcrl
stc
dec
sub
fdivrs
int
dec
dec
adc
dec
jecxz
ret
cmp
sbb
pop
pop
lret
add
pusha
andb
ja
jno
add
stos
xchg
std
push
xchg
inc
xchg
sub
ss
in
cli
popf
push
xlat
loope
or
mov
pop
sub
jg
xor
jns
ret
cmp
pop
lcall
stc
pop
pop
jns
jb
mov
aam
xchg
jp
mov
inc
mov
cmp
into
insl
push
lret
xor
scas
mov
jo
test
push
test
mov
jmp
and
repnz
cmp
cltd
test
pop
inc
mov
mull
mov
xlat
or
add
bnd
cmp
push
outsl
sub
dec
outsb
jp
sahf
int3
popa
xor
jge
pusha
push
call
mov
mov
fildll
sub
dec
cld
insb
fcom
adc
pop
cli
rep
and
jo
js
pop
lret
lds
adc
push
faddl
mov
jle
hlt
mov
mov
push
lahf
adc
pop
cmpsl
andb
and
repnz
lods
mov
jp
sbb
mov
imul
mov
jns
and
imul
lods
sbb
push
dec
das
call
fs
add
imul
add
in
dec
jns
sub
jge
mov
cmpsl
fsts
cmp
xchg
push
andb
lds
subl
xchg
mov
push
sbb
mov
fistpll
push
repz
xlat
bnd
sub
lea
jg
ror
xor
js
in
push
mov
in
in
sbb
insb
adc
mov
pop
xchg
sub
inc
out
adc
pop
or
popa
mov
mov
mov
xchg
sub
xchg
or
outsb
in
test
fimuls
in
push
push
cltd
shl
call
lret
fsts
mov
std
xor
xchg
sbb
push
test
jg
xlat
mov
jl
jae
mov
inc
fnsave
xchg
rol
sub
dec
xor
mov
cmp
mov
and
sub
jl
insb
sbb
add
dec
push
pop
test
fisubl
adc
cwtl
add
insl
es
xchg
inc
ret
sbb
hlt
dec
gs
pop
ret
xchg
popa
pop
mov
cltd
in
aas
pop
daa
pop
je
dec
jae
adc
jg
jb
fstl
cmp
mov
sbbb
jnp
out
hlt
xchg
mov
xor
popf
or
sub
cld
scas
xchg
sub
lods
in
ljmp
push
mov
out
mov
mov
imul
mov
int
sbb
cwtl
int
mov
mov
insl
lods
fcmovnbe
iret
cmp
add
xchg
adc
or
xor
insl
push
ljmp
fsubs
or
and
sbb
jne,pn
outsb
mov
push
dec
mov
add
jnp
and
fisubl
addl
push
bound
sub
or
call
push
or
rcll
rclb
pop
jo
fmuls
out
xchg
out
lahf
xor
sbb
enter
xor
cmpsb
add
shlb
mov
imul
repnz
pop
out
shl
pop
xlat
xor
insl
ja
aad
outsl
test
pop
push
popf
jecxz
mov
cmpsb
adc
or
jp
cmp
push
jb
out
cmpsl
repz
mov
xor
bound
pop
jnp
fistpll
test
rcrl
int
and
or
mov
shrb
pushl
xchg
int
add
add
loope
mov
inc
stos
movsb
or
jle
push
insl
mov
rcrl
sub
loop
test
jle
dec
cmp
fistpll
pop
out
test
pop
fisubrl
jno
pop
dec
add
repz
pop
dec
fcoml
adc
outsb
mov
dec
imul
push
fidivl
mov
sbb
std
mov
mov
inc
pop
xchg
jle
loop
adc
es
js
inc
push
jo
in
cmpsl
es
xor
lds
popf
xor
cli
pop
rcl
sbb
adc
and
cmpsb
sbb
std
or
inc
cmp
scas
addr16
les
aad
repnz
inc
pop
lret
aam
mov
mov
fcomps
push
pop
jne
adc
iret
xchg
outsl
jb
fisubl
bswap
jp
jno
int3
xchg
mov
pop
sbb
pop
out
mov
xchg
or
jo
ss
jne
js
mov
notl
repnz
fiadds
pop
cmp
scas
dec
pop
cltd
mov
xor
cld
stos
clc
jae
cli
mov
sbb
or
dec
lea
sub
jb
arpl
mov
ficomps
movsb
xchg
icebp
in
mov
ja
cmp
lods
mov
in
jmp
jle
push
movsb
neg
fsubrl
sbb
xchg
pop
inc
jns
int3
aaa
loop
jle
pop
push
mov
or
ficomps
andb
test
push
ljmp
vmaxps
and
mov
clc
lcall
mov
mov
cld
cmp
push
sbb
sbb
out
inc
pop
dec
loope
leave
jae
call
loopne
outsl
jmp
mov
sbb
pextrw
cwtl
out
mov
test
sub
dec
shll
stc
adc
mov
mov
ljmp
pop
adc
cwtl
sub
ljmp
sub
xchg
scas
in
adc
xchg
out
repz
iret
sbb
into
dec
fildll
int3
test
fistl
fcomi
scas
gs
fisttps
sbbl
aaa
pop
mov
mov
adc
mov
push
mov
xor
loope
fs
roll
adc
ss
test
clc
dec
ret
xchg
dec
mov
push
add
movsl
or
mov
dec
xor
pushf
out
iret
sarl
enter
jnp
xor
dec
clc
xchg
pop
sarb
dec
fistpll
psllq
dec
lock
fidivl
sahf
lret
outsb
cli
push
push
insl
mov
add
mov
dec
in
pop
lods
sbb
adc
sbb
lods
mov
fnstenv
add
call
jp
inc
push
xchg
adcb
add
push
out
mov
sub
movsb
or
sub
dec
loopne
mov
lock
sbbb
push
mov
shrb
cmpsl
fmull
pop
cltd
sub
push
clc
inc
fcoml
inc
stos
cwtl
rep
sbb
rol
sti
shlb
add
pop
and
roll
or
jmp
push
mov
cmpsb
daa
clc
dec
fsubl
mov
cmp
mov
or
sub
add
pusha
mov
gs
pop
int3
mov
sti
jmp
xor
filds
and
or
clc
mov
mov
sub
xchg
scas
sbb
ja
cmp
push
mov
pop
outsl
aaa
cmp
add
pushf
jo
push
gs
inc
imul
mov
xlat
lock
mov
in
lds
jo
adc
jbe
push
dec
push
push
in
mov
insb
sub
test
xchg
into
mov
pusha
daa
cmp
and
push
cmp
fwait
repnz
out
pop
mov
ret
mov
inc
jbe
dec
xchg
jo
leave
loopne
lea
mov
mov
ret
mov
das
popa
ret
outsl
mov
ret
gs
das
push
jmp
xchg
inc
fs
xchg
out
mov
dec
negl
test
push
shrl
push
repnz
sbb
mov
movsb
sti
push
imul
lods
or
xor
push
mov
in
cmp
jecxz
inc
test
fs
in
test
jmp
fstpl
orb
xor
imul
lods
push
xor
or
in
sub
push
arpl
xlat
outsb
cld
push
pop
inc
push
int3
xor
icebp
imul
fbld
aam
and
mov
enter
push
stc
sbb
aaa
dec
fsubs
movsl
xchg
sub
nop
call
mov
dec
mov
mov
rclb
or
lret
je
shr
push
add
inc
sarb
test
add
popf
add
add
arpl
rcll
cwtl
sub
and
je
pop
out
lahf
inc
mov
into
fistps
push
enter
stc
rol
cmp
mov
ds
jl
insb
add
jle
add
xlat
out
jmp
adc
jle
push
cmp
push
jae
jp
mov
into
out
push
adc
daa
inc
js
ja
loope
loop
mov
je
jle
sub
lret
jge
and
enter
lahf
popf
add
pop
xor
out
or
jl
femms
mov
push
nop
daa
js
mov
or
mov
je
pop
jmp
lea
and
hlt
mov
jo
aas
mov
sbb
xchg
mov
add
movsb
xor
bound
push
scas
dec
dec
shrb
and
xor
out
fsubr
add
test
pushf
push
jmp
push
and
adc
cmp
mov
mov
dec
mov
push
loop
loope
lcall
mov
mov
add
push
and
xchg
ret
ret
xor
dec
outsl
into
insb
push
ja
stos
mov
xchg
das
mov
test
or
mov
out
dec
and
mov
daa
cmp
push
stos
and
mov
stos
mov
subl
xor
mov
push
pop
cld
test
pop
jo
cmp
dec
dec
sarb
arpl
and
loopne
inc
aad
jecxz
stos
add
mov
out
dec
popa
jmp
inc
test
inc
pushf
bound
es
cli
stos
mov
add
and
sub
adc
inc
clc
or
xor
jecxz
cmp
lds
pop
les
push
cmp
sub
lret
sbb
xor
stc
out
mov
je
in
bound
iret
dec
es
lods
mov
pop
insl
inc
inc
jg
mov
xchg
test
jg
shr
lcall
add
fcomip
jne
and
mov
mov
inc
xor
dec
pushf
xor
mov
out
pop
mov
lock
cmp
andl
je
dec
xchg
push
ljmp
popa
jnp
mov
inc
push
stos
push
arpl
push
mov
cltd
push
inc
pop
dec
stos
loope
lahf
push
jle
adc
jo
xor
dec
stos
cltd
mov
lock
pushf
scas
call
sbb
rcll
cld
out
popa
sarb
mov
in
js
cmp
pop
pop
jnp
aas
mov
lock
ja
lea
shlb
out
insl
inc
call
pop
and
pop
into
fidivrs
cld
rcrl
pop
sbb
jl
decb
sbb
pop
out
dec
pop
jns
cs
in
icebp
pop
lock
cmpsb
mov
inc
mov
xchg
in
pop
int
cmp
mov
sbb
mov
xlat
fs
test
dec
cli
pop
sbb
repz
cmp
pop
cwtl
cld
push
jge
jno
and
inc
pushf
inc
nop
loopne
add
and
xlat
inc
jecxz
xchg
les
repnz
nop
daa
das
pop
xor
inc
xor
add
pop
push
sahf
mov
aas
dec
mov
cmc
ss
shrl
fcomps
shlb
ss
and
xor
push
sahf
addps
inc
pop
popf
add
test
push
fisubrl
mov
pop
and
push
jb
jmp
jge
pop
mov
outsb
cmpsl
push
cmp
cmovb
add
vcvtqq2ps
mov
cmp
outsb
mov
xor
popa
pop
mov
dec
and
inc
push
sbb
jecxz
xchg
xchg
jle
mov
pushf
mov
dec
add
xchg
dec
sahf
fldenv
lds
aam
inc
cmp
int
lret
sbb
js
std
pop
loop
xchg
mov
xor
mov
sub
push
mov
jge
loopew
push
in
fldt
cmp
div
pop
insl
jge
movsl
jnp
jle
inc
scas
lock
out
pop
cs
les
pop
outsl
loopne
repnz
aas
ja
addr16
jge
inc
push
movntps
fildl
mov
imul
pop
mov
rcl
jne
sbb
mov
test
inc
mov
cmove
or
cmc
fxch
scas
je
sbb
jno
dec
sub
shrl
leave
int3
dec
jl
out
add
popf
lret
iret
ljmp
cmp
mov
push
push
das
stc
or
add
orl
popa
les
fsubrl
in
aas
fnstenv
iret
jmp
or
mov
and
and
fidivs
addl
xor
idiv
popf
ret
aaa
or
add
cli
in
insb
fisubrs
push
or
lret
adc
jae
into
xor
cmpsl
out
out
sbb
and
mov
push
movsb
cmp
in
aaa
into
sbb
jno
arpl
test
pop
js
mov
ss
out
mov
cli
es
iret
add
push
or
add
add
pop
cmpsl
andl
push
fwait
popa
or
paddq
dec
aam
cmp
jp
lcall
adc
xor
sbb
pop
andl
mov
shl
ja
mov
out
pop
adcb
clc
dec
in
mov
insl
sub
cmp
push
in
inc
dec
aam
add
mov
push
in
push
lea
mov
aad
jo
js
mov
imul
and
add
xor
inc
arpl
xchg
sub
cmpsl
mov
pop
push
subl
lock
cmpsl
xchg
movsl
push
cmp
or
jno
aas
jo
lahf
bound
sub
cltd
int
enter
in
loope
lods
push
pop
pop
sbb
bound
fbld
xor
jmp
inc
push
jae
or
adc
add
or
in
js
push
xchg
loopne
loop
aas
in
dec
call
add
pusha
xor
lods
add
push
lret
bound
jb
xchg
jmp
pop
and
mov
jnp
lcall
push
jmp
or
popa
std
rcrl
pop
lahf
cmc
xchg
cld
fildll
test
or
xchg
repz
lea
push
fxch
ret
xchg
aaa
test
dec
fsubrs
jmp
notb
jb
repnz
hlt
xchg
ss
popf
lods
cmp
xchg
aaa
iret
pop
mov
cmpsb
jl
mov
push
fisttps
push
jns
xor
pop
or
popa
pop
xor
inc
mov
je
mov
or
jecxz
mov
mov
sbb
ja
sub
arpl
mov
xchg
aaa
hlt
jmp
aaa
jae
ss
cmpsb
sub
mov
xor
ret
hlt
into
cs
rolb
xchg
outsb
add
pop
or
mov
movsl
cmp
out
sub
mov
hlt
inc
dec
in
pop
xor
xor
fists
les
pop
je
jno
dec
repnz
cld
loop
cmp
mov
scas
enterw
add
push
xchg
outsb
insb
pop
pop
or
sub
js
enter
test
in
pop
pop
std
inc
push
adc
stc
pop
mov
fidivrs
loopne
fadds
jae
push
daa
cmp
jb
sub
pushf
add
xchg
int
inc
fcoms
xchg
loop
and
pop
ret
adc
call
loop
in
ffreep
sbb
je
stos
xchg
sub
mov
hlt
scas
xlat
dec
sti
xchg
jle
inc
stc
mov
dec
out
scas
push
push
arpl
sbb
sub
sub
fwait
pusha
aad
inc
cli
dec
mov
popa
movsl
xchg
cwtl
das
ret
xchg
in
sub
fldl
sbb
adc
inc
xor
cltd
lahf
push
out
enter
cmpsb
outsb
mov
jb
and
lret
xchg
aam
pop
mov
js
xchg
jecxz
movb
fnstcw
test
insb
add
addr16
in
movups
data16
adc
mov
lahf
imul
rcrb
pop
aas
das
push
test
cmp
je
or
leave
adc
lods
inc
repz
jecxz
push
adc
aaa
loopne
fs
xchg
or
sub
icebp
push
jb
dec
notrack
call
shll
out
cmpsl
shrb
rorl
sub
mov
and
int3
lret
repz
call
movsl
xchg
jae
leave
lds
movsl
fcompl
adc
dec
xlat
jl
mov
fwait
loopne
dec
mov
fistpll
stc
jge
sbb
cld
mov
shll
sub
jecxz
push
jle
jns
ss
arpl
cwtl
xchg
in
cld
inc
lock
shl
sahf
xchg
inc
lret
mov
sub
mov
insl
in
cld
das
mov
adc
inc
lods
inc
xor
andl
and
std
xchg
push
std
pop
sub
push
shll
or
sub
jge
popa
imul
loop
inc
clc
xchg
xchg
sub
push
loope
sbb
ljmp
test
sub
inc
test
lret
mov
movsb
mov
and
enter
pop
push
lea
fidivs
jbe
push
pop
dec
cmpl
sbb
ret
jge
mov
push
and
xor
dec
lcall
test
cmp
and
lods
xchg
dec
rorl
mov
or
out
push
xchg
stc
shlb
movsb
sbb
sbb
das
data16
jmp
mov
or
push
add
dec
sub
add
cmp
in
jp
call
subb
xchg
xor
daa
xchg
cmc
sub
mov
in
adc
or
cmpsl
mov
push
rorl
loopne
push
pop
lock
xor
cmp
inc
cs
adc
adc
mov
gs
into
push
sbb
mov
adc
xor
mov
in
add
stc
jb
mov
fisubrl
dec
andl
fmul
enter
aaa
lods
pop
mov
call
cmp
jne
or
lods
push
sahf
xor
ljmp
pop
mov
in
pushf
jg
adc
xchg
cltd
mov
data16
nop
insl
add
push
jo
es
cmc
dec
pop
aad
imul
pop
loopne
jle
roll
mov
mov
shll
repz
mov
sbb
popf
pop
setno
mov
and
xchg
dec
scas
mov
jl
loopne
rcrl
pop
mov
fwait
sti
mov
outsl
jne
loopne
mov
js
mov
jne
lahf
add
push
lret
and
gs
mov
push
push
outsl
cwtl
test
adcl
pop
cld
icebp
push
hlt
rcrl
sub
adc
xor
fstpl
iret
xor
pop
insl
sbb
fwait
mov
pusha
cwtl
stos
jmp
pop
cmp
movsb
in
fdivs
mov
dec
or
shlb
adc
sbb
fucomi
test
push
push
push
and
inc
inc
loopne
daa
popf
addr16
jne
xor
xchg
rorl
jmp
mov
repz
in
fwait
inc
or
fbld
jnp
stos
inc
mov
xor
pop
jmp
pop
and
push
jg
or
fs
add
addb
push
clc
sbb
nop
test
sbb
xchg
adc
cltd
test
inc
divl
fldt
sbb
in
mov
add
or
push
ds
xor
mov
and
mov
popf
push
test
lret
outsb
clc
sbb
sti
inc
lods
cmc
adc
cmp
ret
sub
dec
aad
jge
mov
imul
sbb
mov
fnstcw
xchg
sbb
jmp
jmp
inc
xchg
push
popa
movsl
jb
xchg
jae
sbb
enter
mov
adcb
shll
pop
lock
enter
mov
pop
push
pop
xlat
sbb
or
sub
sbb
jmp
dec
pop
mov
iret
movsl
fstpt
insl
xchg
leave
and
pop
cmpsl
mov
pop
incl
popf
jns
jecxz
push
mov
mov
or
cmp
xchg
test
xchg
cmp
cmp
push
insl
cmc
movsb
sbb
outsl
xor
loope
mov
mov
hlt
rorb
push
sti
subl
adc
xchg
sbb
cwtl
and
mov
scas
subb
out
adc
push
jecxz
push
aad
xor
movsb
gs
cmpsl
sbb
es
jb
and
insl
push
shlb
sub
xor
add
add
inc
fidivrs
imul
std
add
cmpsb
shl
aaa
inc
dec
ds
mov
sub
sbb
inc
mov
rorb
out
jne
dec
xchg
push
ljmp
push
add
mov
out
xor
jl
push
mov
popa
sarb
inc
inc
fdivs
adc
adc
xor
lods
or
stc
movsl
stos
mov
or
add
jno
push
mov
and
data16
leave
mov
pop
jecxz
mov
pop
xor
mov
mov
sbb
dec
sbb
sub
mov
xchg
int3
lret
pop
rol
adc
jmp
jmp
outsl
jnp
mov
or
xchg
out
rol
daa
mov
addr16
movsb
jmp
stos
cs
popl
adc
jecxz
test
data16
push
negb
ljmp
out
jo
push
je
jle
loop
xor
mov
and
pop
rorl
repnz
out
leave
stos
xchg
rcr
gs
dec
mov
push
and
or
or
icebp
jns
cmp
sub
outsl
imul
cli
cmp
in
pop
div
jle
xchg
mov
add
xchg
push
ret
cmp
mov
inc
icebp
sahf
fisubrs
enter
mov
pop
add
pop
out
arpl
push
mov
mul
pop
mov
fstl
xorb
out
sub
cwtl
loope
and
mov
and
loop
mov
cli
xchg
enter
in
sbb
pop
xlat
insb
addr16
daa
xor
mov
pusha
adc
cltd
mov
inc
fsubs
or
pop
push
js
daa
lock
push
outsb
leave
pop
mov
fdivr
arpl
test
mov
and
out
pop
pop
and
xchg
sub
lds
pop
std
fwait
jns
lea
fsubr
shl
sbb
rcll
mov
mov
imul
out
cli
pop
int3
ljmp
sahf
xor
sub
sub
push
arpl
dec
out
fcomp
mov
loopne
fmul
sbb
fs
inc
dec
pop
xor
push
jmp
or
push
jl
jne
test
idiv
xchg
cmp
xchg
mov
ret
movsl
cmp
inc
jmp
pop
xor
mov
and
jl
and
add
cmp
fcmovbe
cmpl
pushf
aad
push
rorl
lcall
lcall
mov
jle
adc
clc
je
loope
mov
leave
data16
adc
dec
add
jnp
add
mov
mov
in
push
insb
data16
push
pop
xor
clc
clc
sub
mov
mov
in
or
in
int
push
adc
fisubl
movsl
fstpl
loope
pop
mov
and
jp
sub
sbb
cld
and
jnp
inc
or
aas
aad
subb
ljmp
in
int3
cld
pusha
ljmp
mov
iret
pushf
dec
pop
mov
and
lret
jp
lea
dec
insb
aas
lret
imul
in
dec
or
rcl
aas
mov
stos
inc
xchg
cmp
leave
mov
inc
std
ss
sub
pop
add
jp
fwait
stos
and
jnp
in
xchg
movsl
dec
pop
xlat
repz
hlt
mov
ja
scas
sarl
sub
ds
xchg
add
rep
fwait
in
leave
and
in
leave
je
sbb
cmp
and
leave
popf
xor
mov
into
adc
loope
pop
pushf
aas
leave
movsb
cmpsl
cmc
dec
inc
pop
xor
fcoms
fldl
inc
cmp
sbbb
ss
ljmp
add
mov
iret
sbbb
inc
pop
xchg
mov
adc
inc
shl
jno
xchg
sub
mov
mov
pop
fwait
xchg
int
mov
fcmovb
push
lods
test
ret
decb
das
in
sub
ret
jmp
cmc
mov
pop
imul
and
xchg
cwtl
outsl
fiaddl
fisttpl
leave
xchg
add
in
andl
sbb
repnz
pusha
int
mov
out
sub
fcmovnb
test
test
mov
jge
popf
stc
xchg
xchg
outsb
add
pop
add
je
jl
and
xor
in
xchg
data16
sbb
pop
in
mov
stc
subl
push
movsl
out
pop
push
xchg
inc
lods
mov
mov
adcb
repnz
xor
jl
xor
repnz
push
fs
adc
mov
dec
pusha
cmpb
loope
jp
decb
jle
subb
inc
pop
add
sub
jg
cmpsl
ret
cmp
inc
arpl
pop
add
jmp
sbb
movsl
or
push
mov
mov
fdivrp
fwait
inc
scas
jecxz
ja
jmp
cmp
mov
repz
jmp
adc
imul
push
cmpsb
imul
xchg
mov
movsb
pop
inc
xchg
mov
fimull
shrl
push
pop
bound
inc
lea
mov
shl
mov
or
push
rcll
inc
xorb
and
jb
lods
and
cltd
pop
xlat
or
notb
sub
jecxz
outsl
movsb
bound
mov
test
iret
pop
sbb
stos
xchg
sbb
dec
js
sbb
adc
jne
add
hlt
jo
mov
filds
mov
or
adc
jmp
mov
adc
pop
aas
push
cmp
adc
xor
out
mov
dec
repz
mov
cmp
hlt
mov
je
jmp
add
cwtl
mov
repnz
clc
or
xchg
test
sti
sbb
std
mov
lock
mov
stc
ret
xchg
mov
stc
adc
stos
rcrb
in
addr16
lock
pop
out
mov
cwtl
mov
lret
sbb
addr16
sub
adc
repz
cmp
cmp
mov
cli
mov
mov
enter
aad
jmp
rcrl
clc
dec
xor
in
mov
sub
xor
aad
xor
xchg
insb
pop
inc
mov
inc
jecxz
loope
aad
mov
pusha
cmp
xchg
negb
xchg
add
movsb
bnd
sbb
movsb
push
outsl
roll
push
jp
pushl
mov
jmp
pop
adc
inc
int
mov
fldcw
aam
pop
push
loopne
dec
push
repz
mov
or
js
jl
jp
jg
jns
inc
adc
fisubl
cmp
inc
shl
jne
es
jnp
loop
push
scas
js
sbb
popa
jno
clc
bound
inc
sti
lea
sbb
cmp
bound
sbb
test
hlt
out
insl
flds
or
leave
mov
test
outsb
stos
cmp
pop
std
inc
mov
lods
jmp
dec
mov
adc
sar
or
xchg
cmp
mov
add
repz
sahf
mov
fisubl
push
mov
mov
stos
pop
sahf
dec
sbb
es
and
add
inc
fidivs
mov
cmc
or
mov
leave
iret
push
pop
mov
inc
je,pn
push
pop
je
jno
test
stos
pop
mov
xor
icebp
stos
cld
inc
lcall
push
aas
adc
push
inc
pop
outsl
add
push
jmp
xchg
sub
lods
out
adc
jno
repnz
jecxz
leave
pop
loop
inc
sbb
xorb
testl
sub
mov
jb
adc
cld
mov
subb
add
js
popa
sbb
notl
cmp
jno
pusha
outsl
xor
sbb
leave
dec
out
push
rcll
shll
sbb
pop
xchg
jmp
pop
mov
sti
jnp
xchg
pop
imul
sub
jecxz
pop
test
lds
xor
aad
jnp
mov
pop
and
pop
das
out
jp
mov
add
pop
out
push
sahf
pop
test
stc
lods
jecxz
sbb
sub
insl
adc
xchg
pop
and
fistpll
fs
in
test
push
mov
fsts
outsb
repz
lock
into
testl
cld
cli
cmp
cli
rcl
pop
es
fs
pusha
xchg
xchg
popa
roll
pop
bound
out
lea
ja
out
sub
push
outsb
rol
paddq
push
xor
and
stos
in
or
adc
cmp
jo
push
mov
mov
mov
aam
jnp
in
mov
jmp
cwtl
pop
mov
std
add
xor
xchg
sub
xchg
scas
stos
es
cmc
int3
sbb
mov
loop
pop
repz
sub
lcall
or
sub
cmc
mov
add
imul
les
pop
lcall
add
mov
add
dec
jle
pop
pusha
jbe
fmuls
shlb
bound
pop
cs
lods
cmc
mov
sub
xchg
inc
mov
cmpsl
sbb
xor
mov
popa
gs
inc
xchg
add
dec
arpl
imul
inc
inc
lret
test
mov
mov
mov
sub
cld
cs
sbb
rcr
sub
mov
lret
call
in
push
sar
mov
cld
cltd
stos
ret
mov
mov
add
push
xchg
xor
mov
fidivl
push
cli
pushf
xor
push
add
sbb
jnp
subb
mov
add
aaa
push
repnz
sub
pushf
or
inc
test
push
pop
lret
pop
mov
jp
mov
xchg
cmc
xor
cmp
data16
sub
icebp
mov
lds
mov
loope
daa
fadd
jge
lock
pop
icebp
dec
adc
xchg
in
addl
sbb
cmpsb
mov
out
and
fimull
lret
jmp
data16
popa
clc
mov
lahf
sub
and
xchg
mov
pop
cmpsl
adc
fmuls
mov
shrb
and
mov
ret
call
xor
mov
aaa
in
stc
fnstenv
orb
add
fwait
inc
push
xchg
jmp
mov
lods
push
add
repz
and
loop
fcoms
test
add
das
rcr
mov
push
icebp
add
js
js
int3
xchg
sbb
dec
mov
sarl
add
sbb
imul
mov
ficompl
mov
mov
lret
in
lock
mov
jecxz
mov
or
dec
push
or
pop
jp
divb
cwtl
repnz
fnstsw
mov
out
cmp
xor
arpl
mov
xchg
mov
mov
shl
mov
stos
loope
xlat
add
push
clc
insl
dec
cmpsb
xchg
outsb
and
in
mov
dec
inc
and
loop
icebp
adc
add
icebp
outsb
mov
jno
in
inc
pop
stos
pushf
das
icebp
enter
rol
shll
xor
iret
and
sti
dec
pop
sub
out
push
inc
ret
fdivr
insl
fbstp
icebp
dec
lds
sbb
loopne
enter
jae
rcrl
push
shrb
jb
jns
sub
push
adc
clc
or
push
shl
xchg
inc
xchg
ds
cmp
ljmp
xor
fs
push
ret
push
mov
lcall
stos
xor
gs
scas
in
sbbb
insb
arpl
xor
inc
movsb
in
out
xor
shl
test
rcr
loope
test
call
cli
cmp
jae
es
mov
das
jg
add
xchg
push
and
inc
adc
and
inc
pop
push
shl
xor
or
push
pop
push
adc
stos
add
add
push
jne
xlat
dec
pusha
and
dec
es
jge
lods
push
xchg
pop
adc
cs
icebp
fsub
sbb
js
mov
icebp
dec
xchg
iret
sbb
mov
fcoml
push
sahf
mov
jge
xchg
mov
jp
imul
dec
pusha
push
lcall
jae
xchg
dec
int
cmp
xor
ret
sub
orl
jns
xlat
push
sub
std
rclb
jbe
hlt
daa
dec
dec
inc
fldl2t
js
rcll
xchg
jge
dec
jg
mov
mov
in
lea
mov
jo
ds
fcoms
push
sub
scas
xor
sbbb
jnp
test
lock
jne
test
popf
push
push
les
in
stos
dec
xchg
xor
fcoml
clc
adc
mov
aad
or
sti
cltd
bnd
sbb
mov
lods
dec
aad
dec
outsl
jp
mov
in
lods
adc
xor
std
jo
cmp
fldl
xor
xorl
in
testb
sbb
test
and
add
fs
push
andl
ss
scas
test
orb
and
cmpsl
cwtl
sub
test
mov
jbe
inc
lods
jge
jg
pop
mov
xchg
lcall
cmp
sarl
add
push
mov
jne
jbe
jl
cmpb
repz
call
aaa
hlt
out
popf
shll
lret
movsl
jp
mov
dec
sub
sahf
out
cmp
add
pop
jno
dec
scas
dec
arpl
pushw
int
les
inc
sahf
adc
jbe
clc
test
mov
mov
cmp
xorl
mov
outsb
leave
addr16
push
int
xor
ds
shll
addr16
sbb
cltd
push
push
out
dec
and
sbb
jl
stc
lcall
mov
dec
cmp
stos
mov
and
fnsave
push
sahf
fsts
or
ja
xor
inc
xchg
and
xchg
in
pop
mov
fbstp
rcr
and
add
std
jg
adc
subl
push
adc
cmp
adc
negb
dec
out
pusha
and
push
cmp
pop
fwait
and
dec
out
stos
pop
dec
push
fcomps
sarl
outsl
cmp
ja
inc
dec
pop
push
or
and
pop
icebp
lds
adc
test
dec
loop
daa
jo
xchg
mov
imul
fisubs
jnp
mov
add
inc
not
lods
js
fdivp
pop
dec
stos
and
push
mov
jle
daa
mov
push
xchg
inc
fsubrs
pop
mov
je
or
push
loopne
mov
push
cmp
pop
xor
mov
xlat
in
sti
or
stc
adc
sti
pop
in
inc
jp
push
mov
sbb
bound
adc
loopne
sbb
dec
sti
out
add
ja
cmpw
test
or
xchg
daa
add
es
call
push
xchg
and
mov
adc
dec
sti
mov
or
pop
fsubrl
jnp
adc
fs
ljmp
std
arpl
adc
cmp
lcall
lds
push
inc
fs
add
dec
inc
fsubr
dec
xlat
pop
mov
cmpsb
dec
pop
and
mov
mov
push
in
mov
fbld
cmpsb
inc
inc
push
dec
icebp
lods
lods
outsl
pop
enter
push
inc
sbb
scas
dec
cmp
fcompl
lods
push
or
sub
popf
pop
les
push
push
dec
jl
testl
scas
dec
lods
and
enter
mov
cmp
adc
adc
push
jne
xchg
inc
dec
inc
push
inc
leave
push
cmp
mov
pusha
inc
sarb
repnz
loopne
out
pushf
lock
out
mov
cld
iret
and
push
mov
push
or
xchg
das
imul
jl
sub
mov
stos
out
mull
in
inc
mov
pop
ljmp
push
mov
pop
adc
repz
mov
adc
jnp
mov
xchg
mov
daa
or
jle
jnp
xchg
pop
call
aas
push
pop
mov
icebp
sti
rcrl
adc
pop
xor
or
call
push
nop
outsl
lret
jno
xchg
xchg
stc
mov
push
add
movsl
mov
shl
or
nop
shlb
ss
hlt
aaa
or
mov
dec
and
xor
dec
push
shrl
jle
sbb
adc
cmp
mov
or
ficoms
lcall
popa
mov
sub
sub
enter
mov
shlb
mov
push
adc
cmp
and
xchg
xchg
stos
fidivrl
sbb
test
lods
rorl
or
repnz
movsl
jno
movsl
mov
dec
jp
ds
mov
inc
call
sub
mov
adc
jle
leave
test
lret
cwtl
or
mov
pop
pushw
pop
adc
pop
add
jecxz
sub
insb
rcll
stc
or
das
jnp
or
mov
mov
loope
lret
add
xchg
cmpsl
push
out
or
outsb
test
sub
andb
sarb
test
jo
sub
fstps
arpl
repz
out
and
fdivrl
push
je
pop
xchg
and
iret
mov
mov
add
scas
call
pusha
inc
and
dec
mov
stos
push
pop
and
scas
cmp
pop
cmp
inc
test
clc
sbb
aad
push
xor
push
test
mov
xor
fst
mov
pop
mov
fcomps
clc
mov
or
fcmovnbe
add
mov
mov
push
movsb
ja
xchg
data16
adcl
in
jae
cmpsb
hlt
mov
mov
jbe
subb
nop
bts
bound
test
mov
lahf
lea
cwtl
js
lret
dec
out
test
fsubs
lock
inc
cwtl
mov
dec
js
jmp
outsl
sbb
fucomp
mov
xchg
inc
and
mov
jmp
mov
xchg
xchg
repnz
dec
mov
fwait
sub
lcall
fsubr
push
cmc
sbb
fidivl
or
iret
stos
sbb
arpl
pop
or
cmp
dec
arpl
into
test
jbe
test
out
xchg
fwait
stc
or
inc
loopne
mov
gs
add
enter
test
shll
or
cmp
js
cld
mov
add
jae
test
sarb
mov
mov
dec
iret
adc
lret
sub
jae
jns
adc
mov
fsubrl
mov
jae
cltd
adc
stc
lret
and
jmp
cmc
mov
mov
pop
adc
pop
push
ror
xchg
cmpsb
xor
xor
jno
or
lds
adc
cmpsb
movsb
outsb
push
loopne
mov
in
insb
jmp
imul
daa
sahf
xor
push
test
push
outsb
cmp
sbb
mov
inc
mov
lahf
movl
mov
sbb
cmp
xchg
mov
xchg
mov
test
xor
dec
sbb
pcmpgtd
je
adc
dec
imul
xorb
inc
adc
sub
repz
dec
aas
inc
mov
iret
pusha
gs
out
hlt
shrb
lods
cmp
xor
xlat
mov
xchg
loop
xchg
add
arpl
xchg
add
gs
jb
lcall
jnp
inc
imul
mov
sbb
mov
insl
mov
xchg
fucomi
mov
mov
push
fsubs
push
mov
lret
dec
stc
inc
dec
push
shr
push
cmp
adcb
shll
out
pop
xchg
mov
std
dec
pushf
cmpsl
in
repnz
pop
out
pop
out
pop
fnstcw
and
jno
popf
cwtl
or
mov
imulw
rcl
leave
add
jle
add
xchg
cmpsl
adc
mov
adc
jo
test
jnp
aad
scas
push
icebp
xlat
stos
mov
dec
sub
pop
pushf
lahf
inc
stc
in
icebp
ficoml
pop
mov
shrl
mov
outsb
sarl
sbbl
sub
push
ds
repz
cwtl
out
bound
in
jmp
xor
daa
or
mov
mov
cmp
lods
rcl
inc
fdivs
mov
addl
daa
sub
dec
jbe
xchg
shr
push
icebp
mov
cli
lret
pop
jo
add
bound
fst
mov
sbb
addb
adc
fsubs
xor
and
lea
xchg
push
pushf
dec
sub
sub
les
data16
mov
stos
jno
pusha
stos
push
cmp
jb
and
fdivl
dec
in
subb
xchg
inc
ret
sti
push
or
mov
clc
lds
aad
testb
jns
xor
test
mov
dec
popa
jle
lcall
or
jg
pop
out
push
add
push
adc
sar
cmp
cli
stos
lds
popf
dec
pop
dec
repz
push
out
add
xchg
pop
push
repz
and
dec
jg
mov
aam
mov
stos
dec
pop
jno
mov
inc
aad
cmp
mov
push
fdivl
inc
jp
je
ja
iret
les
mov
mov
ret
jg
jns
jle
or
cmpsl
lret
adc
dec
mov
xor
adc
lahf
and
aad
outsl
and
fstl
fsubrs
sbb
stc
lahf
enter
jnp
mov
leave
inc
in
fs
enter
and
inc
xchg
adc
push
cmp
test
xchg
mov
test
in
cmp
mov
fsubrp
pop
rclb
mov
lea
xlat
fisttpl
xor
push
enter
enter
fs
cmpsl
push
adc
pop
fldcw
loopne
pusha
add
push
inc
cmp
in
insb
fbstp
pop
cmp
dec
out
xchg
imul
ja,pt
jmp
js
movsb
fbstp
jnp
test
stos
clc
inc
shlb
jae
dec
push
dec
adc
pop
cmp
xor
int3
inc
cmp
mov
insl
cmp
xor
notb
xor
hlt
dec
or
cltd
sbb
in
jno
xchg
jbe
push
mov
rcll
test
dec
pop
loopne
int
into
in
mov
or
lock
xchg
addl
push
jo
into
dec
les
dec
pop
add
sbbb
sub
lahf
mov
fisttpl
outsb
clc
cmpsl
popl
xor
cmpsb
sbb
mov
inc
outsl
inc
xchg
aad
mov
mov
push
jge
push
sub
inc
rcll
roll
mov
dec
sbb
mov
arpl
mov
mov
shrb
push
sahf
mov
ret
insl
or
xor
mov
fadds
sub
aaa
scas
loopne
je
clc
test
stos
push
outsb
sbbl
jne
loopne
jnp
scas
inc
insb
sbb
sbb
rorl
cmp
out
stos
mov
enter
mov
pusha
mov
mov
mov
test
sub
inc
push
or
loop
push
leave
rorb
jb
lahf
mov
fisttpl
cmpsb
insb
add
stos
mov
test
sbb
fistl
xchg
xor
nop
cmp
clc
jb
mov
stc
imul
inc
cld
push
inc
jo
mov
neg
rcll
mov
jne
xlat
mov
popf
pop
adc
fisubrl
stos
mov
jle
push
daa
movsl
mov
sub
dec
out
jg
hlt
mov
adc
push
mov
fistpl
jmp
cld
test
mov
pusha
gs
jo
inc
or
jne
sti
pop
lret
add
inc
push
outsl
fistps
xchg
inc
ret
arpl
xchg
inc
icebp
mov
sub
xor
inc
in
push
jo
xchg
xchg
sub
sub
and
dec
adc
ss
in
xchg
cltd
push
mov
fldl
xchg
mov
push
mov
ret
dec
xchg
pop
push
and
fbld
mov
xor
xchg
scas
das
mov
lcall
jb
push
sub
cmc
adc
inc
js
jae
int
xor
push
adc
jno
xor
cld
cmpsb
sahf
clc
and
and
shlb
cmp
rcll
push
rorl
repz
rorl
hlt
pop
fmulp
shll
out
mov
pop
xchg
ds
push
mov
push
push
aas
loop
daa
aam
std
lret
dec
lock
mov
cs
fdecstp
pop
lret
sub
arpl
xchg
dec
loop
lcall
sub
test
pop
cmp
sub
shl
dec
mov
fidivrl
pop
int3
sbb
inc
loope
sub
jle
outsl
cmp
lea
aad
pop
pop
out
add
mov
push
fsts
mov
push
pop
cmp
cmp
xlat
jne
pop
aaa
inc
hlt
jae
sub
add
iret
loop
jb
je
push
test
cltd
sbb
out
test
jle
sub
in
out
dec
std
or
loope
dec
mov
aam
sub
sub
mov
jae
ja
out
sub
dec
cli
pushf
rcll
sub
in
notl
add
shrl
pop
jo
lock
inc
jge
dec
sub
dec
fisttpll
jmp
movsl
xlat
cmp
sub
test
dec
out
sbb
outsb
adc
jge
add
xor
lds
fadds
test
cld
cwtl
test
shlb
pop
mov
out
push
popf
popa
imul
push
mov
cmp
pop
jecxz
cmp
into
in
inc
mov
fs
dec
and
movsl
stc
imul
push
xchg
fwait
push
sub
xor
daa
inc
push
test
jle
push
lock
outsl
rcrb
enter
lcall
mov
or
int
lea
xchg
nop
pop
push
into
cmp
xchg
shl
roll
fs
std
lret
jbe
jne
call
cmpsl
sub
fcoms
pop
outsl
adc
adc
je
call
mov
jnp
jns
inc
mov
sub
cmpsl
mov
sbb
fcompl
cld
cmp
pushf
inc
test
mov
add
fwait
lock
lret
out
shlb
loop
and
mov
es
enter
insl
insb
das
fsubrl
ljmp
ja
cmp
arpl
xor
arpl
mov
cmp
daa
push
pop
dec
jnp
out
test
fwait
cmp
in
push
stc
adc
mov
or
bound
nop
push
cs
popf
pop
std
pop
stc
movsb
inc
xchg
cs
push
and
mov
pop
jecxz
std
cvtps2pd
subb
or
xchg
pop
and
sub
xchg
popf
xchg
andl
push
sub
mov
fwait
mov
mov
ret
imul
sub
pop
inc
pop
pop
scas
jge
cmp
sbb
mov
popa
sub
faddl
dec
cmpb
repz
lods
loope
mov
sti
leave
push
int3
xor
adcl
push
rorb
fsubl
pop
std
jnp
mov
push
lahf
daa
dec
inc
js
sub
push
lds
dec
sub
rorb
rcrl
pop
pop
and
fisubs
sub
bound
movsl
xchg
adc
pop
xor
test
stc
and
test
sahf
mov
xor
enterw
add
mov
adc
lea
xor
in
jmp
out
mov
mov
or
movsb
add
add
leave
lahf
xchg
inc
loope
call
or
and
inc
mov
loope
pushf
adc
xchg
es
ljmp
mov
mov
cmpsb
out
es
not
inc
pop
pusha
xor
or
jae
nop
adc
lret
pop
scas
sbb
pop
icebp
filds
rcll
push
fistpl
add
loope
sbb
mov
sbb
into
jae
aad
outsb
mov
mov
pop
xor
xor
fs
sbb
mov
pop
and
adc
or
xchg
inc
pop
adc
loope
mov
dec
pop
or
add
loop
popf
hlt
hlt
add
jecxz
lret
xor
cmp
clc
lods
nop
push
outsb
into
bound
call
popf
out
stos
lds
pop
xor
rcl
mov
cwtl
sbb
inc
pushf
mov
pushf
lods
repnz
jmp
ror
pop
xlat
add
adc
pop
fidivl
aad
pop
push
fsubrs
adc
das
addr16
lods
jb
fstpl
dec
add
mov
and
int
enter
push
sub
and
lcall
pop
imul
jecxz
xor
mov
ret
mov
cmc
pop
jl
mov
fwait
xor
cmp
leave
scas
clc
push
jno
adc
xchg
push
pop
lods
and
pop
mov
bound
or
jbe
pop
mov
andl
push
mov
mov
add
gs
jge
bound
xchg
push
rcrb
aas
sbb
mov
js
mov
ret
fsubr
jmp
and
orl
fnop
mov
aaa
into
jle
andb
sbb
and
add
cmp
lahf
xor
xor
inc
or
outsb
xchg
cmp
out
mov
stc
enter
sbb
aad
daa
xchg
incl
stos
ret
jmp
cmp
push
xchg
ficoml
nop
or
fidivl
sub
leave
sub
xchg
jns
adc
or
es
sbb
pop
mov
shrb
test
push
mov
lea
mov
jne
xchg
daa
mov
lock
push
pop
pop
add
pop
mov
aaa
faddl
adc
pop
bound
or
inc
push
and
js
into
pop
loopne
and
sbb
push
jnp
xchg
mov
xlat
jbe
imul
push
mov
clc
jno
imul
mov
cs
or
sti
pushf
addr16
popa
mov
outsb
xchg
push
scas
lea
in
subl
bound
mov
je
pop
cmpsl
push
adc
jnp
inc
push
cltd
enter
cmp
mov
out
movups
outsb
add
loopne
cltd
pop
fsubrs
aaa
mov
pop
cmp
push
sbbl
jg
sub
loope
lret
cld
pop
jmp
push
int
jns
fwait
nop
fmuls
push
fidivl
sub
lds
enter
fisubrs
outsb
or
sbb
outsl
scas
ja
movsb
and
jno
das
movsl
cmc
shrl
pop
ret
jne
cltd
fimuls
mov
fimull
mov
mov
cmp
mov
pop
mov
jno
loope
mov
idivl
nop
cmpsb
sbb
outsb
loopne
cmp
repnz
ds
pop
push
rcrl
sbb
adc
cmp
or
aam
test
cmc
daa
lahf
sbb
movsl
mov
xorb
out
pop
fnstsw
shll
in
aaa
jae
lahf
xor
lcall
cwtl
test
or
sub
repnz
xor
popa
xor
xor
add
xlat
cmp
mov
push
hlt
push
aad
mov
loopne
imul
xchg
add
inc
popf
out
cli
cmp
mov
aas
add
rcll
mov
xor
test
cmpsb
enter
cli
fnsave
popf
push
jl
test
add
dec
xchg
les
roll
in
fidivrl
inc
popf
push
dec
xor
and
sub
hlt
or
aad
imull
dec
fucomip
ficoml
xchg
xchg
sub
pop
lods
shrl
pop
sbb
cmp
xchg
push
or
subl
lret
and
xchg
iret
fsubrs
lret
sub
mov
stc
push
out
rorl
mov
clc
xchg
andl
into
loopne
mov
push
sub
sbb
add
jge
or
es
xchg
cli
push
inc
aaa
out
das
push
mov
and
inc
test
jp
lods
pop
push
fisttpll
test
ret
dec
mov
fst
insb
jmp
or
add
dec
insl
ja
cmpsb
adc
mov
mov
loope
je
leave
xchg
sub
loope
loopne
jmp
enter
call
std
xor
call
inc
dec
and
dec
in
dec
fs
cmp
movsb
lods
and
std
loopne
push
jae
sub
cs
andb
add
xor
das
mov
pop
mov
mov
or
mov
xor
repz
inc
cs
hlt
loopne
pop
test
nop
jg
pop
jge
xchg
xchg
repnz
xor
movsl
icebp
leave
inc
imul
sbb
sub
dec
pop
inc
pop
repnz
mov
push
adc
scas
pop
out
dec
inc
sub
jl
xchg
clc
sbb
mov
or
fstpt
in
outsl
push
fidivs
adc
pop
js
loopne
inc
inc
fidivl
fwait
add
mov
idivl
mov
cmp
xchg
call
mov
pop
hlt
cli
xorl
ljmp
mov
xor
das
bound
cmpsl
ret
jb
idivl
cmp
sahf
dec
sbb
xchg
addr16
sub
jne
cmp
push
out
mov
nop
das
std
scas
mov
xchg
cmp
jno
lds
cmc
jg
sub
pop
andl
movsl
push
enter
pop
inc
mov
jne
pushf
stos
mov
jl
sti
adc
mov
enter
sbb
ds
out
jns
inc
cmc
mov
sub
mov
fidivrl
btr
xchg
pop
mov
sub
dec
pop
push
cmp
shlb
out
cltd
mov
fadds
gs
mov
or
out
arpl
int3
popa
push
mov
iret
inc
fbstp
rcrl
xchg
mov
orb
call
icebp
iret
sbb
clc
jg
andl
push
push
jmp
sarb
iret
xlat
pop
mov
cmp
inc
inc
fcomps
insb
and
mov
add
adc
icebp
pop
test
inc
pop
decl
dec
and
fwait
std
imull
dec
jo
bound
inc
icebp
or
fisttpll
roll
or
push
fcomi
adc
push
push
xor
push
out
mov
jl
rorb
and
out
jb
cld
inc
jge
ja
std
pop
fdivl
inc
clc
hlt
lods
jl
scas
xchg
sbb
cmp
sbb
add
sahf
stos
mov
hlt
mov
clc
mov
push
sub
lcall
dec
ja
out
andl
pushf
or
test
cmp
cmp
lret
loop
imul
fisubl
je
popf
inc
fcmove
cmp
pop
fisubl
or
lahf
xor
mov
cmpsl
jp
insl
test
sahf
add
sub
jbe
das
mov
mov
adc
outsl
sbb
or
mov
mov
jno
mov
dec
xlat
cmp
outsl
adc
movsb
mov
and
outsb
test
mov
mov
and
fadds
bound
sub
data16
pop
ja
lea
enter
enter
mov
int
fs
xchg
outsb
push
mov
jecxz
subb
cmpl
mov
jnp
sub
out
cmp
data16
repz
jae
mov
shrb
cmp
orb
icebp
je
and
pop
sbb
fiadds
scas
push
sahf
mov
inc
push
lods
iret
enter
repz
mov
ljmp
call
fs
notl
mov
bound
and
in
das
push
ret
cmp
mov
addr16
mov
mov
data16
or
xchg
pop
imul
ficompl
arpl
cmp
cs
in
mov
add
cwtl
in
fwait
xchg
ret
loopne
mov
in
enter
into
mov
es
fldenv
lods
bound
les
pop
dec
iret
adc
addr16
addr16
xor
sbb
pop
xor
pushw
fstps
in
xchg
cmp
movsb
arpl
movd
leave
pusha
test
outsl
push
dec
push
fisubl
out
sahf
sbb
aad
loopne
iret
addl
fcmovnbe
cmp
out
loop
push
fistpll
lcall
cmpsb
cmp
mov
inc
push
jmp
and
sub
aad
rcl
hlt
mov
stos
movsl
inc
xor
adc
xor
cmc
cmp
test
jb
loopne
hlt
leave
or
ja
loop
jnp
dec
mov
cmp
ret
lock
push
pop
icebp
inc
popf
sub
mov
ficoms
push
mov
mov
arpl
xchg
sub
mov
adc
dec
adc
adc
pusha
testl
adc
stos
mov
aam
mov
repnz
inc
push
ret
movsb
or
hlt
mov
cli
add
js
push
outsl
lea
mov
jb
add
std
xor
jnp
or
cmp
outsl
adc
pop
xor
fcomps
lock
jno
lcall
mov
sahf
cmc
int3
fmulp
push
jnp
sbb
push
js
sub
enter
popa
aas
rep
push
jg
sbb
mov
test
mov
pop
aad
mov
outsb
out
push
inc
jge
mov
cmp
jns
lahf
adc
nop
sbb
sbb
mov
lock
and
ror
loop
ss
fs
mov
sub
mov
jno
aam
lahf
sahf
sbb
ljmp
mov
mov
add
sarl
popa
frstor
call
pop
jnp
and
jp
or
test
lods
sub
gs
mov
jnp
out
ret
cmp
push
mov
jae
cwtl
jecxz
cli
and
paddd
mov
inc
cwtl
and
mov
mov
inc
lods
mov
stos
in
sub
lret
push
sbbl
imul
xchg
jp
and
shll
cwtl
fistl
lret
fs
push
push
cmc
mov
leave
jno
sbb
jb
mov
subb
fstl
bound
or
into
push
cwtl
je
cwtl
ja
adc
adc
fidivs
jp
mov
rorl
or
sahf
mull
enter
pop
mov
mov
push
pop
xor
enter
push
inc
pop
mov
cwtl
je
and
rcrb
xchg
lods
cmp
push
cmp
fistps
fsubl
out
sub
out
mov
pop
fstps
mov
mov
mov
fwait
adcl
inc
cmpsb
jne
or
ss
pop
mov
std
mov
push
or
cmpsb
inc
xchg
mov
mov
rcrb
push
cmpsl
outsl
aam
xor
pushf
push
decb
and
xor
stos
and
int3
xor
inc
adcb
imul
cmpsl
idivb
add
mov
sbb
mov
insb
cmpb
inc
std
dec
call
ds
lock
jae
mov
insl
aad
fnstenv
icebp
xchg
xchg
mov
dec
hlt
int3
scas
mov
bound
daa
and
std
std
pop
fisubl
cli
adc
imul
mov
pushf
andl
xor
setg
xchg
mov
fsubs
xchg
inc
stos
dec
in
fistps
ds
mov
push
pushf
mov
and
mov
xor
sbb
daa
or
push
xchg
nop
pop
mov
push
xchg
sbb
mov
push
and
dec
shrb
test
sub
or
fimuls
and
push
rol
notb
inc
dec
inc
push
jmp
arpl
call
into
sbb
scas
push
adc
out
out
test
or
xor
fdiv
inc
fsub
js
data16
adc
lret
ss
sbb
call
lods
mov
out
aam
pop
insb
data16
sbb
aas
mov
dec
jnp
adc
pushf
mov
mov
xor
fisubrl
stc
nop
jno
push
mov
lahf
stos
xor
mov
int
xor
loopne
movsl
pop
dec
mov
shl
mov
ljmp
mov
or
mov
push
in
xchg
pop
sub
and
mov
imul
shrb
xchg
jb
sub
enter
lret
jmp
jae
inc
cld
xor
mov
pop
xlat
pusha
xor
jbe
sbb
and
push
popa
jg
sbb
and
shlb
mov
push
cmp
mov
dec
mov
and
mov
add
roll
push
loop
mov
push
call
es
mov
push
mov
stos
sub
push
insl
rcrl
pop
jg
inc
fucomip
inc
xchg
sbb
int3
xchg
push
add
mov
cltd
add
iret
cmp
insl
add
pop
popf
push
xchg
rcll
inc
sarl
push
jg
cld
pop
xor
push
in
frstor
and
adc
push
in
cmp
enter
je
xchg
xor
adc
sub
mov
sahf
jecxz
mov
push
sti
jno
stc
sub
mov
in
pop
das
addr16
ret
xor
fwait
aas
mov
inc
and
bound
jb
cmpsl
or
adc
dec
mov
ret
jecxz
rcrb
rcrb
jmp
aad
cld
rorb
adcb
xchg
stos
mov
loope
mov
mov
mov
pop
cwtl
test
push
aaa
jl
daa
inc
gs
rorl
shlb
push
fdivs
das
popf
sbb
test
bound
iret
ret
xor
mov
in
mov
ret
mov
fcmovne
fsubrs
jns
cmp
push
xor
call
inc
lahf
stc
push
or
cltd
fwait
xor
leave
aad
mov
popa
pop
lret
xlat
outsl
cmp
popa
clc
mov
jae
xor
jg
push
sub
leave
inc
push
cmp
movsb
gs
push
jmp
mov
scas
out
out
imul
fnstcw
nop
xchg
cmp
push
inc
mov
stc
aad
jle
in
mov
jns
push
and
js
jge
subb
call
cwtl
adc
cmpsb
push
flds
inc
cli
adc
cmp
mov
popa
lods
iret
xchg
xchg
sub
cwtl
push
call
fstpl
sub
sub
mov
jns
es
xor
dec
in
mov
cmc
xlat
cmp
sbb
addr16
jo
sbb
imul
das
lret
or
js
inc
int
jge
in
jbe
les
nop
dec
or
push
iret
mov
xor
repnz
insl
lods
mov
pop
sahf
shlb
and
jnp
push
rclb
mov
lds
jmp
imul
cmp
and
data16
adc
and
or
mov
lahf
mov
shrl
adc
in
out
out
bound
cmp
mov
mov
lret
mov
sub
ret
add
arpl
cs
mov
pop
mov
ret
ss
sbb
imul
popa
test
mov
sub
popf
dec
mov
aas
mov
jbe
clc
xor
cmpsb
pushf
fnstenv
mov
fcmovnb
pop
test
jo
insb
and
pop
nop
or
and
loope
test
fsubrl
lock
xor
and
push
xchg
decl
jge
jmp
adcl
pushf
es
dec
sbb
push
sahf
insl
sbb
cmpsb
fildl
cmpsl
in
mov
lods
mov
mov
jl
out
cli
jns
dec
stos
xchg
cmpsl
jecxz
mov
cmp
cmp
adc
loop
adc
lcall
sbb
sahf
lcall
mov
and
scas
sbb
sub
insl
cmpsb
push
push
pop
cmp
lods
test
and
test
ja
and
jns
dec
mov
dec
fstpt
sbb
xchg
cmpsb
stos
push
mov
inc
xor
inc
and
xchg
ss
cld
inc
jb
mov
mov
pop
adc
test
sbb
inc
and
int
loopne
pushf
cli
mov
xorl
jnp
pushf
pop
roll
sbb
mov
int3
jae
push
xchg
popa
inc
jge
in
lret
jb
pushf
lea
or
xchg
pop
loopne
jge
inc
pop
cmp
mov
mov
sahf
adc
test
fnstsw
imul
and
movsb
pop
mov
xchg
xor
mov
js
out
and
jne
cltd
repz
cmc
and
es
xlat
ret
push
sub
lret
and
sbb
mov
push
lock
es
filds
aaa
push
incl
adc
push
cltd
xor
insb
js
xchg
mov
pop
repz
jmp
ret
xor
jne
inc
in
inc
int3
pop
cwtl
xchg
notb
sub
dec
ja
dec
xchg
push
rcrl
mov
xor
jecxz
jae
jae
leave
pusha
mov
push
pop
sbb
test
inc
pusha
pop
xchg
add
or
sar
jg
and
movsb
mov
cmp
int
out
inc
push
mov
lret
xchg
je
adc
jp
pushf
xor
sbb
fwait
push
lock
cmpsl
lret
jb
in
dec
sub
divl
dec
dec
mov
fstpt
test
das
subl
incl
dec
and
sbbb
cmp
pop
lahf
lret
pop
cwtl
fistpll
inc
jnp
mov
movsl
dec
push
add
mov
mov
push
inc
mov
lret
add
jbe
xor
jo
repnz
xchg
nop
cmp
shlb
pop
mov
shlb
mov
inc
scas
call
aaa
xchg
jns
xor
or
sbb
pop
jns
mov
adc
shll
jo
xchg
jle
adc
hlt
adc
dec
js
clc
sti
icebp
scas
insb
jmp
mov
fdivrl
mov
inc
pop
fnstsw
int3
and
push
pop
hlt
pop
mov
lods
out
loopne
cmp
mov
cmp
inc
insb
add
pushf
mov
pop
mov
leave
add
mov
sub
cmp
repz
das
add
and
pop
xchg
loop
roll
jle
xchg
pop
push
lcall
scas
xchg
xchg
fcomps
adc
aaa
xor
adc
jle
das
mov
pop
jmp
movsl
inc
add
and
lods
xchg
aas
adc
sbb
jo
sub
xor
gs
cltd
add
mov
ljmp
icebp
xchg
neg
push
fwait
test
outsb
iret
bound
data16
rorb
adc
jl
pop
bswap
jp
cmp
subb
adc
xchg
mov
pushf
lds
pop
cmp
lret
pop
or
rcll
jbe
clc
jecxz
sub
cmc
mov
scas
push
imul
test
or
inc
mov
jo
insb
insb
test
push
out
cmpsb
dec
popa
popf
orb
fisubs
sbb
repnz
xorb
out
movsb
cmp
mov
in
add
divb
cmp
or
pop
fs
cmpb
add
or
and
add
mov
sbb
inc
mov
out
push
or
jg
dec
movsl
push
insl
or
leave
das
cmp
arpl
xchg
jmp
movsb
addl
xchg
cld
out
insl
adc
je
dec
dec
stc
inc
cld
lcall
jbe
jns
ret
out
pop
xor
pop
mov
ds
movsl
mov
xlat
ljmp
insl
stos
add
pop
mov
push
fsub
mulb
aam
fiaddl
jle
pushf
adc
cmp
ja
cmpsb
test
cmp
inc
sub
shrl
shll
push
mov
inc
inc
js
inc
xor
out
xor
cmpsb
call
or
movsl
pop
loop
ljmp
out
aad
cmpsl
sbb
jge
sub
fwait
lea
or
fs
xor
push
cmp
inc
adc
in
sti
lcall
ret
sbb
arpl
call
int
inc
fs
ss
xchg
insb
adc
aas
js
rcrb
rol
notl
sub
mov
adc
jnp
push
sbb
adcb
or
out
loop
cmpsl
movl
ficompl
lcall
dec
or
nop
cmp
mov
hlt
sbb
cmp
insl
mov
cmp
movsl
int3
pop
jmp
popl
int3
or
cmp
mov
pop
or
das
jge
popa
daa
mov
aas
xlat
and
jnp
out
imull
je
or
lret
sbb
adcb
xor
sti
gs
aad
sbb
mov
mov
push
bnd
imulb
push
std
fstl
mov
rcl
cwtl
ret
repz
insl
cs
fsubrl
mov
mov
adc
add
mov
jp
adc
or
mov
dec
mov
test
dec
popl
cld
imul
inc
jo
std
adcl
lods
cli
es
insl
dec
imul
dec
push
sahf
negl
inc
push
inc
push
sub
or
outsb
add
subb
adc
ret
adc
mov
inc
das
outsb
sub
push
icebp
push
and
pushf
aas
pop
outsb
repnz
hlt
shl
rcll
mov
movsl
outsl
lret
pop
dec
ficomps
cmp
xor
inc
pop
sar
mov
mov
sbb
outsb
loope
mov
insb
xorb
mov
sub
enter
imul
mov
pop
mov
xor
pop
pop
xchg
sbb
sbb
in
mov
and
cmp
add
cmpsl
push
dec
in
push
add
and
pop
stos
out
mov
add
sbb
out
incb
and
mov
lret
rol
cli
pushf
subl
jo
rol
sub
mov
repnz
jnp
jae
pop
xchg
and
or
xor
mov
cli
xchg
mov
cltd
es
test
lds
sahf
out
pop
ljmp
pop
ret
fisubrs
fldenv
insb
movsl
lea
xor
and
jbe
leave
cmp
cli
sbb
jnp
je
push
xor
mov
je
rcll
mov
mov
pop
sub
inc
push
sbb
xlat
jne
test
mov
mov
insb
mov
mov
sub
jnp
cmp
sub
sbb
adc
das
fsubrl
mov
arpl
xchg
pop
rolb
or
push
cmp
gs
or
mov
sarl
sti
and
mov
popf
cld
sbb
jnp
rorb
add
jb
test
shll
les
arpl
into
dec
fs
xchg
fcmovu
mov
insb
xchg
or
or
repz
xor
lahf
stos
push
mov
dec
mov
jo
lock
mov
adc
imul
insl
arpl
ret
xchg
pusha
shlb
out
add
loopne
mov
mov
popf
js
cmc
pop
fsubs
int
mov
xchg
mov
cmp
or
cmc
test
pushf
cli
sahf
ss
pop
inc
jbe
mov
sbbb
pop
sbb
inc
jl
push
xchg
movsl
cmpsl
fwait
xor
lds
adc
ds
pushf
sbb
shl
je
fists
xchg
les
lcall
dec
in
pop
arpl
es
les
scas
dec
cmp
fsubrp
test
add
aam
or
pop
repnz
movsb
cmp
fwait
clc
adc
ret
imul
ret
mov
mov
hlt
and
shlb
je
out
adc
fstpl
xor
add
or
out
sbb
cmpsl
jecxz
pusha
enter
pusha
add
and
cmp
mov
add
roll
jae
testb
cmp
lahf
pop
cmc
insl
cld
sarb
jmp
dec
fnstsw
push
scas
jp
mov
xor
and
mov
xchg
les
sbb
out
shlb
outsl
test
aad
loopne
and
imul
pop
mov
add
xchg
inc
test
mov
mov
dec
pusha
mov
add
inc
mov
cld
and
int
shlb
mov
mov
mov
sub
push
jo
mov
js
add
mov
and
jp
insb
jl
cmp
jae
imul
aam
ja
ja
xchg
out
lds
lock
icebp
aas
xchg
movsb
gs
ret
and
pop
nop
push
sbb
lret
ds
adc
cli
pop
push
aas
push
inc
jne
in
jb
mov
pop
inc
rcll
movsl
in
pop
adc
mov
arpl
mov
fadd
pop
push
test
sbb
sbb
arpl
jge
fisubrl
insl
pop
gs
ja
hlt
or
and
sbb
xchg
adc
jmp
movsb
mov
lods
scas
lea
js
ret
jp
jp
cld
mov
pop
mov
in
cmp
cld
mov
or
aaa
pop
notl
or
adc
lods
fidivrl
shlb
sbb
loop
jo
fsubrl
imul
int
shrb
out
es
leave
repnz
and
adc
inc
add
scas
out
testl
popf
xor
subl
jae
mov
fistps
xchg
cmc
mov
in
aam
loop
call
mov
repnz
xor
pop
sbb
cwtl
pop
adc
cmp
mov
dec
gs
cmpsl
fldenv
imul
std
inc
test
icebp
xor
test
mov
mov
adc
ds
xor
mov
jne
cmp
adc
mov
mov
mov
rcrl
imul
test
jo
push
dec
dec
sbb
lret
cmp
push
sub
stos
in
dec
inc
arpl
mov
mov
cmp
add
add
mov
push
cltd
sti
dec
push
mov
sarb
popa
ficoml
mov
sub
mov
sbb
pop
xchg
and
loop
aaa
cwtl
das
xor
mulb
sbb
adc
or
jns
sub
lcall
std
addr16
cwtl
inc
js
adc
jae
movsb
jl
loope
pop
pop
sbb
and
push
cmp
or
cli
loope
sub
xchg
frstor
lahf
mov
jo
sti
jmp
aaa
test
and
mov
addl
jnp
mov
mov
cmp
fcom
push
in
inc
pop
xchg
and
std
gs
aad
sub
push
push
imul
rep
movsb
shl
aad
jns
cli
dec
bnd
xor
nop
aad
sbb
inc
mov
movb
xor
sub
or
push
jbe
aad
pop
and
lret
add
dec
jno
dec
sub
mov
pop
dec
or
ret
les
mov
loop
xchg
mov
loopne
push
push
xor
mov
movsb
adc
pop
inc
lds
mov
mov
imul
in
mov
insb
push
xchg
bt
jbe
cld
inc
mov
cmpsl
and
int
mov
push
scas
cmpsb
xchg
iret
gs
inc
lods
ret
in
cmp
data16
les
cmc
movsl
popf
or
int
insb
js
adc
outsl
jbe
mov
adc
jl
shlb
pop
sub
xchg
hlt
pop
jg
dec
repz
push
cmp
out
and
mov
or
cli
xchg
cmp
out
mov
mov
lahf
loopne
ret
ret
es
out
lds
mov
arpl
push
mov
jmp
mov
adc
pop
enterw
mov
xchg
lret
scas
mov
add
adc
mov
les
popf
jbe
mov
cwtl
inc
ror
jno
jno
lds
cmp
jge
add
mov
jmp
popa
xlat
add
int3
arpl
fnsave
enter
loop
sub
in
ja
pushl
lret
dec
cmpsl
shlb
sbbl
inc
in
imulb
mov
mov
dec
jle
jnp
je
fcoml
fcmovnb
ds
aam
cmc
cmp
and
fs
adc
cmc
sub
xchg
push
push
test
fmul
fnsave
jl
add
cli
push
test
inc
fsubrs
jmp
xor
or
insb
cmc
scas
add
push
cld
inc
xor
xchg
sub
pop
es
pushl
cmpsb
and
cmp
jp
fisttpll
cmp
mov
popa
xchg
in
scas
sub
and
adc
lock
add
pop
xor
cmp
stc
lret
daa
cmp
add
jo
jl
ret
mov
mov
pop
shlb
xchg
push
out
outsl
xchg
in
aad
adc
dec
pop
cs
pop
movsb
push
xchg
xchg
pop
rclb
inc
or
sub
or
jns
js
lods
test
jp
andb
pop
mov
jbe
in
icebp
stos
xchg
aam
pop
xchg
jle
adc
mov
aaa
pushf
push
and
std
clc
enter
xchg
mov
addr16
mov
out
inc
push
push
fistpl
dec
jo
insb
pop
das
sbb
fisttpll
mov
ret
mov
fstl
cmpsl
xchg
dec
in
cltd
jl
dec
jbe
addr16
aaa
lods
dec
mov
push
in
das
rorl
dec
cmp
sub
movsl
nop
mov
adc
push
popf
dec
adc
or
insl
push
jae
or
adc
mov
cmpb
and
or
inc
repnz
aam
or
cltd
xor
repnz
icebp
pop
ret
loopne
or
or
push
mov
les
loope
jae
and
sbb
movl
mov
mov
jp
imul
push
push
jo
mov
lods
add
jmp
movsl
std
xchg
dec
test
les
adc
jne
push
es
sbb
sbb
dec
cmp
andb
add
pushf
ds
mov
in
mov
ret
call
imul
out
push
and
push
cmpsl
stos
inc
lds
cmp
movsb
mov
mov
cwtl
pop
mov
cmp
jne
inc
push
imul
in
out
movsl
or
outsb
ret
aas
adc
pop
sbbl
loop
testl
jne
add
sahf
xchg
xchg
pop
leave
mov
pop
repz
inc
xchg
dec
loopne
push
sbb
add
pop
cmc
sbb
loop
push
jle
hlt
lods
inc
outsl
jmp
and
sbb
outsl
outsl
das
cmp
dec
inc
rcr
sbb
cld
sub
jle
ret
cmpsl
push
mov
aad
sub
and
xor
or
mov
pusha
mov
and
out
hlt
pop
jne
jmp
push
adc
cltd
sub
aad
and
inc
sbb
in
mov
cmp
jge
xor
shld
adc
stos
xchg
push
pushf
sti
fwait
subl
lods
push
lods
push
or
and
cmpsl
jp
sub
popf
lods
sbb
cmp
outsb
out
adcl
push
or
xchg
sub
nop
aam
jns
repnz
jg
ljmp
dec
push
cs
sbb
pop
sbbb
ret
xor
in
mov
popa
pop
adc
or
scas
cmp
pop
stos
inc
xchg
pop
push
sub
jg
and
or
sbb
and
in
adc
or
mov
cmp
xchg
repnz
xorl
jp
jne
push
shr
rcl
loop
rcrl
adc
roll
test
fdivs
xchg
in
xchg
jns
leave
stc
cmc
dec
or
out
mov
cmp
adc
pop
pop
hlt
pop
insl
inc
call
shrl
int3
sbb
ret
jno
push
inc
filds
add
push
sahf
jno
popf
xchg
in
int
fdivl
loop
jb
mov
mov
mov
mov
push
pop
lahf
fdivrl
cld
loopne
push
jbe
mov
ret
ret
mov
out
jbe
hlt
mov
in
add
loop
mov
or
dec
mov
leave
cmp
data16
sub
and
add
icebp
xchg
push
movsb
addr16
inc
repnz
xor
inc
movsb
push
loopne
sbb
inc
add
fdivrl
push
cmc
inc
push
in
xor
jge
cld
sbb
fisubs
mov
adc
push
hlt
push
lcall
inc
arpl
and
fidivrs
mov
jbe
bound
test
or
insb
mov
in
jp
das
pop
pusha
dec
test
dec
push
out
cld
adc
add
adc
in
dec
rol
lcall
imul
addr16
dec
sbb
test
andb
or
addr16
ret
les
jl
out
cmp
outsb
mov
imul
pop
or
add
sub
pop
dec
jecxz
repz
iret
loop
clc
xchg
sub
sbb
sbb
xor
sbb
sub
mov
pop
xchg
out
xchg
test
repnz
mov
xor
fiadds
adc
mov
mov
sahf
adc
and
out
or
lock
mov
in
repnz
scas
jb
mov
lods
dec
sahf
pushf
inc
cli
icebp
ss
pop
cli
fwait
gs
sub
imul
pop
ret
cwtl
dec
jg
mov
ljmp
cmp
fnclex
dec
fcomip
ds
xchg
push
push
mov
push
je
loope
ljmp
inc
pop
aad
sarl
fisubs
jmp
push
jmp
cltd
insb
dec
dec
and
icebp
add
sub
cmpsb
mov
push
pusha
dec
jns
adc
sbb
insb
sbb
jb
notl
sahf
dec
popa
push
add
push
das
cmp
xchg
mov
outsl
inc
cmp
push
cwtl
push
shlb
shll
aad
loop
arpl
pop
add
cmc
mov
xor
fwait
mov
icebp
sub
sahf
addb
adc
cmpsl
mov
scas
rorl
sub
dec
fwait
call
and
mov
ds
mov
push
stc
jmp
test
and
push
mov
push
imul
in
les
jle
or
xchg
in
push
xor
xor
add
ret
fiadds
dec
mov
or
int3
push
pop
xor
adc
sub
pushf
int
mov
inc
push
lcall
jnp,pn
loop
arpl
push
dec
adc
pusha
ljmp
sbb
in
or
pushf
sbb
data16
scas
sbb
xchg
dec
ss
mov
fwait
test
sti
mov
cmp
jns
mov
out
add
xor
adc
cld
stos
mov
int3
stc
fs
inc
sub
push
sub
xchg
lret
aad
cmp
call
jbe
mov
xor
out
cmpsl
rcrl
jmp
push
pop
jo
or
lcall
and
inc
scas
mov
das
test
and
cwtl
gs
jp
fnstcw
inc
mov
inc
fucomp
ret
call
mov
cmp
mov
or
int3
push
pop
push
js
pop
imul
xchg
loopne
xchg
in
aam
and
movsb
lcall
mov
fistpll
out
mov
add
pop
mov
mov
adc
lods
icebp
sbb
push
push
xchg
xor
call
push
jb
inc
dec
sbb
loope
or
jmp
outsb
mov
insb
cld
pushf
xchg
jno
sub
inc
mov
xchg
call
pushf
jne
sbb
xchg
mov
add
test
scas
dec
add
shrb
outsb
outsl
or
push
ja
cmpsl
out
sub
aaa
jb
lods
adcl
sub
lret
stc
les
adc
rorl
mov
jg
mov
std
out
jb
mov
inc
pop
arpl
lret
shll
fildll
cmp
xchg
jge
out
push
fxch
aad
mov
and
inc
lods
push
xchg
aaa
dec
add
cmp
imul
and
leave
dec
add
inc
test
ret
fimull
push
in
inc
xor
aaa
dec
lock
aaa
into
je
icebp
out
inc
push
fcoms
inc
mov
mov
xor
mov
das
adc
or
xor
mov
cmp
aaa
test
xlat
dec
movsl
mov
xlat
push
mov
lret
jnp
jp
ja
dec
xchg
mov
adc
xchg
mov
movsb
xor
out
cmp
or
sbb
inc
push
test
inc
cmp
or
xor
sbb
shl
cmp
mov
mov
dec
mov
repnz
mov
inc
dec
test
jl
sbbl
sub
lahf
daa
and
adc
test
and
test
insb
jp
subb
pop
stc
cmpsl
hlt
scas
shll
mov
stc
jns
gs
sbb
push
in
data16
scas
mov
fistpl
mov
cmp
idivl
shlb
andl
mov
push
jnp
adc
jge
jae
mov
aaa
or
imul
sbbl
sub
test
xchg
pop
les
xor
and
inc
ret
cmp
dec
das
or
push
xlat
in
je
dec
or
mov
dec
je
jno
shrb
lods
aas
mov
pop
sahf
repz
call
cltd
sub
movsl
icebp
divl
mov
sub
and
sub
mov
mov
js
int3
adc
xchg
scas
adc
cltd
mov
mul
sub
es
jg
les
mov
mov
push
addr16
jl
lock
inc
pop
subb
mov
pop
dec
sbb
inc
and
push
jne
je
aas
pop
into
cmpsb
cld
jne
add
cwtl
sahf
pop
idivl
fs
sub
lret
les
inc
popf
popl
xchg
fsubrs
nop
insb
dec
insl
xor
out
daa
sbbb
jecxz
add
jae
in
insl
mov
adc
lea
adc
in
test
jp
fdivl
inc
int
sbb
and
pushf
adc
ss
mulb
outsl
jne
stos
jge
pusha
inc
adc
push
jecxz
dec
jecxz
mov
xor
xchg
xchg
dec
push
cmpsl
or
aad
sub
sub
add
push
inc
subb
sbb
pop
in
push
inc
sub
xor
adcl
test
or
ret
xchg
sbb
shl
add
lods
inc
sbb
pop
subb
lret
mov
push
xor
mov
out
jl
and
add
push
xor
and
sahf
or
jo
mov
pop
scas
adc
xor
mov
push
repnz
adc
in
sbb
mov
imull
in
sbb
shr
mov
jg
inc
mov
mov
xchg
push
aad
lret
or
sbb
nop
sub
xchg
pop
or
xchg
sub
test
insl
or
inc
mov
sbb
andb
inc
bound
jl
into
jne
mov
adc
sub
cmp
inc
cwtl
jp
push
fisubl
lock
jp
inc
popa
clc
jns
in
add
fwait
mov
pop
loope
inc
test
adc
inc
xor
jl
mov
jno
mov
fnsave
mulb
and
or
add
stos
addr16
mov
int3
test
shl
js
mov
stc
fidivrl
rcll
add
adc
sarl
ret
jo
arpl
mov
sub
push
lea
xor
gs
xor
int3
fists
mov
mov
pop
orb
cltd
ljmp
jne
pop
repnz
js
jle
inc
daa
push
cmc
jo
rcrl
out
aam
xor
xor
mov
es
adc
xchg
mov
jle
and
dec
xchg
ret
mov
mov
rcrl
loope
adc
or
stos
das
test
pop
inc
ret
fidivl
fs
xchg
loop
scas
ret
lock
insl
loopne
mov
movsl
loope
mov
add
xor
out
popa
cli
mov
lock
lods
sahf
clc
mov
and
cld
fsub
push
push
out
aaa
loop
add
fildl
loop
movsl
mov
clc
and
sti
sbb
popf
dec
xor
sahf
stos
ret
jle
mov
inc
icebp
sbbb
or
addl
xchg
push
xlat
push
sub
mov
cmp
mov
mov
lods
adc
dec
mov
mov
incl
popa
mov
shl
shr
xorl
push
or
dec
jmp
sti
xchg
and
jnp
xor
dec
ret
xchg
mov
inc
loop
mov
inc
outsb
push
imul
mov
nop
pop
out
xchg
xor
xchg
push
in
fildll
adcl
iret
sbb
xlat
jp
mov
out
sbb
flds
hlt
mov
jno
ficoml
adc
imul
push
mov
test
dec
lahf
or
sarb
repnz
jbe
pop
cs
push
cmp
popl
clc
popl
mov
add
out
sahf
repz
xchg
sarb
pop
in
movsl
sbb
pop
jo
jecxz
mov
gs
test
insl
sbb
in
mov
dec
adc
pop
fisubs
pop
nop
pop
scas
nop
fidivl
mov
jae
clc
hlt
cmp
inc
fs
orl
arpl
mov
jmp
sbb
or
adc
sahf
cmc
xor
adc
lahf
jl
sub
pop
dec
adc
sbb
repnz
pop
mov
aad
imul
aam
mov
and
xchg
movsl
mov
adc
icebp
js
mov
mov
adc
fs
add
lods
mov
pop
nop
sbb
dec
pushf
sbb
dec
mov
test
lods
dec
sbb
xor
stos
inc
push
and
bound
pop
push
pop
idiv
shlb
shrb
mov
or
loope
popf
sub
cwtl
and
insl
fsubrs
shrl
sbbb
adc
je
dec
lret
bound
and
cmc
jmp
fcomi
xchg
jge
pop
sub
add
mov
das
and
roll
ret
insl
fisubl
sbb
and
mov
jbe
adc
push
subl
in
mov
in
in
stos
pop
aad
lret
mov
xor
in
js
xlat
jns
jae
test
inc
loopne
shlb
add
sub
out
in
add
xchg
out
ficompl
cmp
push
call
aaa
xor
jle
xchg
sub
mov
mov
or
cmp
sbb
rorl
test
fsubl
mov
in
insl
testb
push
out
in
addr16
sub
hlt
cmp
push
mov
test
lea
cld
popf
lret
repz
pop
fcmovnu
jmp
pop
mov
jmp
add
es
jo
cmp
daa
jecxz
fmull
scas
or
jle
add
int
lock
jns
jns
push
insl
outsl
push
movsl
xor
or
lea
jp
push
mov
adc
stos
mov
jbe
arpl
daa
dec
ret
sbb
mov
jne
jne
dec
inc
fnstsw
pop
lods
int
test
in
ret
add
das
shlb
xor
inc
jo
cmp
sbb
adc
xor
stos
jle
inc
push
outsl
jge
std
and
lcall
xor
popf
lock
dec
mov
stos
mov
bnd
lds
mov
push
bound
loope
lret
push
push
push
inc
push
into
arpl
out
sub
sub
adc
and
lods
or
cld
cmp
sarl
shr
inc
fisubs
adc
arpl
mov
add
jnp
hlt
rcrl
fwait
and
lea
jae
mov
stc
dec
mov
mov
mov
fwait
into
pop
ss
sbb
test
push
or
sub
mov
jmp
outsl
push
rolb
das
dec
cs
xchg
dec
push
pushf
in
mov
pop
mov
or
jb
pushf
cmp
es
jb
into
mov
and
testb
mov
dec
shll
dec
xor
imul
in
mov
fistpl
mov
adc
aam
xor
push
xor
xor
les
into
inc
cmc
mov
stos
outsb
inc
push
ret
sbb
ja
js
clc
jo
movzbl
push
clc
jg
cmpsb
ret
adc
bound
lds
inc
jo
fcmovb
push
idiv
mov
rcrb
fadd
pop
inc
jecxz
push
pop
sub
test
mov
lea
jle
cmp
cld
inc
jp
je
mov
aas
inc
leave
mov
pop
bound
dec
outsb
mov
xchg
mov
into
inc
test
cmp
mov
test
jmp
ret
rcll
cs
jne
push
sbb
pop
or
jns
or
movsb
jecxz
rorb
aaa
add
sti
xchg
or
loop
or
add
daa
repz
pop
and
fnstcw
outsl
push
pop
movsb
movsl
repz
icebp
push
daa
cmp
stc
nop
inc
pop
scas
loopne
inc
insb
sub
pop
cmpsl
mov
out
gs
rcr
int
in
movsb
jge
es
push
fldl
pop
sbb
mov
xor
push
data16
dec
xor
fisubrl
stos
adc
in
inc
xlat
ror
movsl
mov
in
cld
fsts
stc
or
jne
outsb
movsb
test
lea
pop
xchg
imul
mov
je
ficomps
rcll
int3
add
orb
adc
jp
pop
sbb
jg
pop
sub
dec
in
testl
mov
maxps
imul
jne
insl
mov
lret
cmp
xchg
sbb
fidivs
fildl
out
addb
adc
add
aaa
movsl
jns
lods
adc
push
mov
mov
mov
sub
in
inc
mov
aas
and
cmp
dec
insb
adc
mov
test
or
mov
fsts
adc
push
cld
inc
lock
mov
pop
push
jb
cmp
add
push
mov
inc
sub
repnz
sbb
push
jle
cmp
pop
jg
data16
sub
jb
in
push
fwait
inc
repz
jecxz
add
add
and
lahf
pop
aam
fwait
push
enter
jo
stc
nop
bound
pop
cmp
iret
movsl
sbb
pop
mov
xor
inc
cmp
mul
add
movsb
lods
mov
xchg
mov
xchg
fisttpll
or
pop
pop
sub
subl
fs
or
cmp
sbbb
jnp
dec
xor
push
cmp
cmp
lcall
andl
mov
outsl
xchg
dec
call
ja
imulb
pop
lea
push
adc
iret
mov
dec
lds
inc
repnz
push
ficompl
cmp
sti
hlt
mull
xchg
sub
push
mov
test
aad
cmp
pop
iret
loop
loope
bound
movsb
add
fisttpll
ja
fadds
dec
dec
dec
rolb
ds
cmpb
mov
mov
leave
movsl
adc
test
dec
mov
loop
xchg
insl
sub
sbb
mov
push
popf
in
out
imul
xchg
cmp
insl
adc
test
push
pop
sub
and
stos
xchg
fistps
std
loopne
cmpsb
dec
lds
mov
out
jnp
fs
xchg
push
out
arpl
into
pop
push
popf
pop
outsb
aad
jnp
nop
inc
outsl
xlat
jno
xchg
mov
mov
sub
in
test
clc
movsb
cmp
mov
fwait
ret
lcall
sbb
jbe
jp
std
xchg
xchg
xor
dec
movsl
sbb
inc
ja
rolb
jle
out
pop
and
repnz
cmp
lea
repz
push
jmp
fcmove
das
mov
lret
push
int
leave
shll
mov
ja
into
fbstp
sbb
push
shll
in
inc
cmpsl
xchg
insb
sub
movsl
jmp
pop
mov
movsl
adc
jmp
inc
push
adc
call
pop
and
das
mov
push
sbb
xor
push
test
inc
bound
mov
and
in
pop
adc
sbb
add
dec
mov
mov
fdivs
or
mov
fdivrl
adc
xchg
pusha
testl
jle
or
bnd
outsb
pop
out
lahf
and
pop
cmp
sti
insl
pop
in
jle
inc
stc
pop
adc
test
xor
xchg
or
les
mov
cmp
loop
pop
cmp
aas
lods
nop
in
mov
aam
iret
loop
or
mov
and
inc
pop
dec
stc
or
stos
jns
pushf
pop
loopne
stos
inc
test
mov
pop
int3
stos
mov
push
pop
aaa
ret
rcr
movsb
mov
and
sub
aad
jl
popl
popa
les
push
aaa
popf
jae
adcl
pushf
lods
stos
mov
mov
mov
inc
adc
adc
cli
outsl
xor
jnp
fnstenv
std
ja
stos
xlat
xlat
outsb
pop
shlb
jbe
fldcw
push
mov
adc
lea
sti
stos
mov
inc
xlat
notb
mov
pop
pop
shrl
cmp
mov
add
ja
out
icebp
inc
inc
xlat
pop
or
push
mov
push
cld
mov
push
dec
pusha
adc
ret
stos
mov
fbstp
into
les
mov
das
or
pushf
mov
mov
pop
or
aaa
repnz
xor
insl
sbb
push
mov
mov
ljmp
es
dec
test
call
das
mov
loopne
ja
push
add
push
dec
xchg
sub
sbb
sub
in
test
cld
xor
dec
jne
jp
add
subl
inc
incb
lret
adc
inc
push
dec
pop
push
push
xchg
cmp
dec
xchg
mov
cmp
or
inc
fisubrs
into
pop
call
pop
add
in
mov
and
jp
stc
fcoms
xchg
or
xchg
add
fisubrs
add
or
sub
xor
rcrl
push
adc
and
dec
inc
sbb
ds
gs
adc
mov
je
cmp
cmp
xchg
jne
sarb
mov
mov
sahf
and
dec
loope
cmp
scas
call
mov
push
jle
jnp
ss
xor
fnstsw
mov
fs
daa
ret
xor
jns
xchg
es
adc
jle
push
jae
push
nop
lods
push
imul
and
negb
sub
dec
mov
xchg
es
sahf
nop
out
dec
push
fistl
sbb
xor
fstpl
mov
lret
push
ljmp
cmp
dec
je
outsb
and
mov
dec
movsb
adc
aad
or
mov
insl
ja
repz
inc
fldl
stos
jmp
mov
xorb
imull
sub
xchg
cmp
cmp
or
out
ret
jmp
cmp
xchg
or
sbb
pop
or
popa
cmp
push
rcll
mov
cbtw
andl
shrl
adc
out
xor
or
cmp
clc
cmpsb
ret
sub
test
mov
ret
call
or
mov
inc
fxch
rolb
ss
add
fstl
stos
cmp
jp
divl
clc
jle
iret
jnp
int
or
mov
out
dec
in
fstpt
mov
frstor
repz
xor
sbb
xchg
jo
mov
out
jge
std
aas
dec
loop
pop
hlt
jg
add
mov
sbbl
ds
jle
js
lods
jmp
mov
popf
xor
pop
lret
dec
mov
in
rcrb
into
cmp
fildll
jge,pt
mov
pop
push
sahf
jl
jp
rcrl
stos
dec
loop
pop
adc
pop
mov
push
xorl
insb
pop
mov
inc
push
clc
jae
jmp
sti
das
movsl
into
loop
nop
jbe
dec
cli
test
inc
jnp
push
jo
adcb
lods
lret
mov
gs
add
out
dec
mov
scas
test
xor
inc
push
jne
inc
bound
int3
jge
jns
mov
pop
pop
adc
nop
cmp
gs
pop
and
push
sub
adc
outsl
mov
fxam
inc
insb
shlb
scas
or
fbld
mov
mov
mov
ds
sbb
cmp
out
cli
add
cmp
push
movsl
cmpsl
push
cmp
imul
inc
push
dec
pop
mov
xchg
shll
sbb
or
add
bts
jge
loop
jnp
fnstenv
or
or
push
stos
mov
lea
repnz
stc
and
xchg
mov
sbbb
aas
mov
outsb
jl
ret
movsl
mov
lock
rorl
call
xor
xchg
nop
ljmp
mov
lahf
push
out
and
fmull
dec
rcll
jge
adcl
cs
cmpsl
insb
into
lea
test
mov
add
fwait
icebp
cmp
or
pop
ret
lock
sub
daa
or
cmp
loope
dec
pop
out
daa
repz
adc
xchg
inc
ja
pop
xor
movsb
jmp
ret
pop
or
inc
mov
mull
je
jne
jle
jne
push
push
fwait
pop
sti
int
pop
mov
mov
pop
jne
or
mov
out
fs
mov
iret
std
add
mov
push
leave
fdivs
and
rcr
cmp
in
fwait
sti
pop
repnz
lock
xchg
leave
jns
jno
push
mov
push
cmpxchg
repnz
mov
jmp
jg
inc
mov
add
jl
fstps
and
sub
cltd
push
push
movsl
sarl
jl
out
sub
outsb
test
js
xchg
hlt
fwait
sbb
into
aad
cs
push
int
xchg
lods
and
sbbb
or
mov
stos
jns
inc
dec
repz
repnz
adc
repz
ds
sub
xlat
out
cmc
xchg
pop
data16
movsl
adc
mov
mov
sub
lret
adc
mov
jle
clc
out
scas
cmp
les
leave
or
mov
adc
add
notb
scas
push
int3
jg
inc
xor
mov
out
test
test
sbb
iret
mov
insb
out
inc
push
stos
std
adc
inc
lret
into
inc
bound
data16
or
inc
popf
xor
push
mov
mov
aas
popf
cmpsb
imul
xor
mov
pop
mov
xchg
outsb
in
pop
add
pop
das
mov
mov
fdivs
in
mov
inc
dec
inc
sbb
aaa
or
pop
xchg
xchg
cmp
mov
stos
jg
in
out
cli
adc
out
xor
mov
add
fmuls
lret
cli
movd
dec
adcb
mov
mov
daa
mov
sbb
jmp
fsubl
lock
mov
sbb
mov
sbb
cmp
inc
testl
fisttps
push
push
hlt
add
push
cwtl
loope
enter
inc
jmp
mov
es
cmp
mov
pusha
dec
adc
cltd
inc
std
push
xchg
out
repz
andb
push
jecxz
jnp
mov
loopne
iret
scas
and
inc
out
popf
adc
mov
fsub
jbe
push
cli
and
setl
je
cmp
sub
mov
xor
cmp
cmp
and
or
cs
sub
adc
stos
pop
lret
mov
pushl
lea
out
sarl
push
jmp
cmp
inc
dec
adc
arpl
fwait
pushf
aaa
icebp
arpl
js
mov
in
jb
mov
and
inc
outsb
and
ret
mov
loope
insb
add
mov
dec
fs
xchg
imul
in
clc
jnp
sub
sarl
popa
cli
loop
int3
mov
cmp
and
ljmp
mov
mov
shl
mov
pop
sarl
pop
cmp
daa
lcall
or
lret
pop
lods
aaa
or
adc
rcpps
lea
ss
inc
mov
mov
xor
add
fs
cmp
orb
inc
or
xor
push
xchg
mov
lods
fiadds
dec
jne
mov
inc
movsb
in
shrl
xchg
jno
cwtl
negl
xchg
push
cmp
dec
pusha
mov
stc
dec
cli
fsts
ret
out
sti
inc
mov
and
pop
adcb
adc
mov
shrb
clc
inc
nop
mov
adc
jmp
mov
movsl
adc
pusha
sub
sbb
xchg
shll
xchg
pop
fwait
push
inc
aas
push
push
sbb
leave
int
int
adc
int
mov
lret
pop
ja
mov
jmp
call
sub
jmp
dec
inc
push
out
cmpsl
or
dec
xchg
sbb
sbb
and
mov
cwtl
and
hlt
push
scas
and
iret
inc
push
push
gs
lret
push
cmc
pop
xchg
dec
sub
cld
lcall
clc
loop
and
push
jl
push
jbe
pop
mov
and
fwait
jge
in
mov
add
ljmp
pop
shrl
mov
fwait
add
jl
add
cli
cltd
push
mov
add
add
gs
pop
ljmp
insl
imul
data16
push
fdivl
dec
mov
xor
pop
dec
adc
cmp
mov
xchg
sbb
cltd
out
dec
movsl
xchg
push
and
cmp
sahf
xchg
shrb
sahf
fidivrs
fwait
add
dec
inc
test
aas
or
lcall
mov
iret
movsb
xchg
push
cmpl
scas
and
mov
sub
xor
orl
les
xor
sbb
sub
xor
xchg
imul
test
inc
fimull
pop
jb
out
push
movsb
cmp
imul
or
mov
jl
js
imul
jne
fldt
cmp
aaa
xchg
and
mov
dec
xlat
outsl
rcl
clc
das
cmp
pop
cmp
mov
rcll
sub
dec
sbb
lcall
out
ficomps
mov
mov
lcall
mov
xlat
or
leave
jo
in
scas
sbb
pop
stos
jae
fdivrl
popf
and
jne
rcr
and
sbb
test
or
int
mov
hlt
sarb
jae
scas
bound
push
inc
or
jnp
cwtl
mov
jbe
lret
fs
imull
std
jp
int
repz
xor
fcom
sbb
sub
lcall
test
fwait
and
cwtl
es
scas
lds
and
jbe
in
jne
inc
sbb
nop
repnz
push
add
imul
jge
sbb
jmp
push
nop
cmc
outsb
pop
cmp
sbb
cmpsb
or
and
inc
in
push
stos
sahf
scas
push
lds
jb
inc
sub
das
out
mov
mov
fwait
jl
jl
mov
xchg
jle
pushf
inc
call
cs
sbb
mov
dec
icebp
adc
mov
mov
mov
ficomps
ret
jg
dec
fdiv
call
cmp
inc
into
and
jo
xchg
sub
adc
jmp
rolb
xchg
icebp
xchg
and
mov
adc
mov
mov
mov
push
mov
lods
out
nop
ss
cld
cli
jmp
sub
loop
push
adc
into
enter
push
push
stos
shlb
rcll
sub
rorb
jbe
imull
sbb
shlb
cwtl
cmpsb
sbb
fistpl
leave
into
les
xchg
inc
adc
leave
xchg
int3
push
mov
xor
jecxz
in
sarl
mov
leave
sahf
ds
popf
insb
std
xchg
leave
fistpll
pop
push
iret
push
jbe
pop
cmp
xor
in
dec
and
fsubl
ret
shll
pop
test
dec
in
bound
and
mov
mov
push
nop
jbe
outsl
pushf
mov
adc
push
push
xor
adc
ss
jp
cli
lods
and
pop
std
sahf
jp
pop
lahf
add
cmpb
push
push
adc
insb
fcomip
pop
inc
xlat
outsb
jb
xchg
mov
test
ret
movswl
loop
adc
xor
lock
ss
test
lret
fs
mov
in
pop
int3
fs
push
or
sub
sahf
and
popf
stos
aaa
or
ret
jb
xchg
xor
xchg
sub
jno
pop
rcrb
out
insl
setg
dec
testb
insl
push
push
pop
sub
push
lods
dec
test
xor
repnz
adc
xchg
scas
inc
or
jnp
cmpsl
dec
mov
jg
cmp
push
pop
mov
nop
sti
add
mov
jecxz
cltd
or
test
mov
sbbl
pop
pop
ret
mov
add
jg
or
add
sbb
cli
inc
xor
insb
jns
gs
dec
outsb
pusha
mov
faddp
cltd
setns
dec
ss
cmp
scas
xchg
ror
adc
dec
popl
jge
or
push
lods
ds
xchg
daa
jne
int
lea
leave
adc
jge
push
push
ror
out
mov
adc
stos
in
or
or
lret
mov
jo
out
je
adc
or
push
cmpsb
frstpm(287
sub
iret
push
and
lds
test
les
xor
mov
shrb
outsb
test
or
fwait
inc
jbe
cld
add
add
push
lcall
cmp
mov
lret
inc
pop
cmp
sbbb
mov
cwtl
cmpsl
push
mov
pop
mov
xchg
mov
mov
pop
repz
add
or
sub
mov
lods
dec
ret
and
push
fwait
pop
cmp
std
loop,pt
dec
and
cld
jno
stos
pop
adc
cmp
ret
ret
fidivrl
jl
push
leave
add
cmp
xor
stos
jmp
push
daa
cmc
xor
add
mov
inc
push
leave
pusha
inc
push
sbb
imul
cwtl
push
cli
cwtl
test
cmpsb
jbe
adc
adc
in
pop
adc
xor
jg
mov
mov
xlat
xlat
test
or
ds
aas
xchg
dec
clc
mov
pushf
leave
mov
int3
or
pop
lea
push
ja
insb
mov
lahf
testl
inc
or
aaa
shrl
pushl
jae
push
lock
out
xchg
pop
pop
mov
xlat
mov
dec
mov
add
imul
xchg
jecxz
es
mov
test
test
jg
imul
stos
xchg
pop
pop
sub
fst
lcall
sbb
mov
and
mov
or
push
sbb
stos
movb
negl
pop
jo
push
das
inc
lret
push
divl
repnz
xlat
jne
inc
adc
xchg
sbb
sbb
jnp
cmp
stc
or
sub
jne
int3
test
movsl
inc
ds
jbe
leave
fildl
xor
loopne
inc
es
fcomi
adc
dec
jecxz
jle
popf
out
sahf
cwtl
jo
cld
jmp
add
out
out
mov
mov
aas
add
dec
dec
mov
jno
push
jp
rcrb
jmp
cmp
dec
out
aas
dec
shr
lock
push
jnp
mov
pop
adc
add
mov
frstor
insl
mov
lahf
mov
std
imul
stc
pop
mov
pushf
call
mov
addr16
jmp
mov
dec
push
insb
push
or
pop
fists
xor
mov
loop
cmp
push
ja
sub
xlat
and
sub
test
andb
icebp
int
movsb
push
ret
out
arpl
jl
dec
cmp
popa
adc
dec
cmp
xchg
fdivrs
lcall
repnz
mov
add
jnp
fwait
test
lret
cmp
nop
mov
jae
dec
mov
mov
cmp
inc
out
add
mov
xchg
js
xchg
popfw
ja
xchg
call
in
and
das
icebp
and
fs
dec
adc
push
push
cmp
dec
mov
loopne
mov
bnd
jno
dec
cmpsb
dec
push
cli
add
loopne
pop
push
ror
cmp
xlat
repz
ja
push
jmp
push
data16
mov
cmp
mov
push
outsl
leave
mov
pop
out
clc
rcll
cmp
imul
add
mov
stos
cmp
cltd
jo
cltd
mov
psubusb
rolb
in
js
mov
call
stos
sbb
inc
dec
out
sub
test
into
sbb
arpl
pop
xor
les
inc
pusha
cwtl
xchg
push
sub
into
imul
mov
pop
dec
jnp
sub
cli
or
daa
je
cltd
mov
lock
test
push
outsb
push
lcall
xchg
sub
add
adc
lcall
cmp
stos
hlt
movsb
ja
aad
pop
jb
idivb
mov
mov
xchg
dec
faddl
clc
arpl
std
xchg
jnp
out
ficomps
ljmp
mov
inc
sbb
fsubrl
xchg
cmc
push
cltd
out
sbb
jmp
fwait
xor
leave
jns
inc
test
xchg
sub
add
nop
sbb
mov
mov
divl
fldt
mov
jbe
cmp
iret
fisttpl
movsb
add
pop
cltd
rcr
jb
cmp
inc
mov
sbb
ds
aam
fnsave
iret
inc
mov
adc
lret
add
ss
cmc
sahf
push
pop
cmc
mov
cli
ret
mov
pop
push
xlat
jae
ds
ja
sbb
pop
in
mov
aad
rcrb
dec
sbb
jne
icebp
in
pop
pop
fucom
xchg
and
mov
add
les
mov
roll
sub
pop
jbe
mov
loope
mov
jne
mov
and
fbstp
sub
push
scas
shlb
xchg
mov
push
insl
push
xor
cmc
popa
sbb
xchg
mov
iret
movsb
fwait
mov
lock
aas
mov
mov
mov
jbe
and
lret
out
ds
mov
movsl
xor
mov
and
orb
movsl
mov
iret
adc
cli
push
test
fildll
cmp
dec
inc
call
cmp
sub
push
sbb
jl
and
inc
mov
testb
add
dec
xchg
sbb
imul
sub
pop
push
repnz
sti
add
jmp
fidivl
aad
lods
and
add
add
faddl
nop
fisubs
aam
shrl
negl
data16
aad
dec
nop
addl
sbb
jo
xchg
mov
popa
notl
and
cmc
adc
jle
push
movsb
sbb
jne
sbbl
cld
sbb
in
dec
dec
test
in
ret
cmp
sbb
in
punpckhbw
je
fs
jno
xchg
rolb
mov
pop
adc
cmp
pop
pop
cmp
mov
cmp
jb
mov
push
stos
jne
pop
sbb
push
mov
dec
pop
add
daa
xchg
out
sbb
mov
les
int3
outsl
das
test
mov
das
adc
dec
pop
fstpt
mov
cli
lds
testl
push
imul
rorb
cmpsl
mov
daa
cli
aam
jo
ds
jnp
push
jbe
test
inc
shlb
and
fstl
test
and
jne
mov
inc
pop
lret
cmp
in
lahf
neg
adc
or
pusha
adc
jne
adc
mov
js
sub
sti
xor
mov
in
in
and
inc
inc
pusha
sub
add
pop
push
sbb
jmp
daa
cs
push
cmp
mov
aas
clc
pop
into
mov
jle
lds
outsl
sub
aad
inc
xchg
adc
insb
filds
mov
cmpl
mov
jae
cltd
mov
lahf
in
fld
push
jmp
lds
bound
mov
fsubrp
fwait
pop
test
mov
popf
push
xchg
scas
jp
test
jnp
pop
mov
shlb
jmp
dec
bound
xchg
outsb
push
imul
xor
mov
leave
mov
daa
in
sbb
xor
arpl
lcall
dec
adc
testb
adc
or
cmp
xor
mov
push
xchg
sub
leave
xor
or
inc
or
scas
sti
push
inc
imul
dec
js
jnp
pop
jle
jl
xor
fldt
ljmp
mov
push
stos
mov
mov
rol
cmp
arpl
mov
push
fidivrl
das
mov
mov
mov
jb
test
incl
xor
test
mov
rep
fcom
loop
adc
mov
jb
inc
ss
adc
movsb
xchg
or
and
pop
rclb
ljmp
and
jl
lea
and
adc
mov
fwait
cmpsl
sarb
pushf
stos
int
lcall
sti
sub
mulb
cmp
loop
pop
outsl
fdivrs
mov
lock
idivb
nop
push
or
dec
pop
sub
movsl
sti
inc
mov
xor
je
mov
xlat
dec
popf
mov
mov
xchg
dec
repz
and
add
xchg
mov
pop
or
sub
repz
xchg
icebp
movsb
mov
lea
rorb
cwtl
aas
bound
push
das
cmp
sub
and
lods
fisttpl
adc
sti
lret
lods
shll
add
dec
push
cmp
lock
pop
xchg
jmp
inc
jbe
inc
jecxz
adc
and
int3
lret
fwait
jb
shlb
outsl
stc
popf
ret
cld
mov
popf
xor
pop
out
test
xchg
arpl
or
fucomip
sub
rol
dec
xor
jge
xor
arpl
aam
call
adc
push
je
insl
out
cltd
push
push
xor
addr16
andb
movsl
popa
gs
inc
sbb
ljmp
insl
in
outsb
lea
adcb
leave
jecxz
pusha
push
jne
sarl
cld
test
mov
movsb
adc
mov
and
add
lods
lock
loope
pop
in
push
pop
les
aam
rol
arpl
dec
mov
icebp
add
inc
xchg
mov
xchg
adc
push
fstps
or
loop
std
shrb
or
cmp
fisttpll
lahf
decb
xchg
icebp
xchg
push
fstl
adc
dec
jbe
sbb
iret
imul
or
call
imul
ror
leave
push
mov
insl
pop
jbe
sub
das
fidivrs
mov
adcb
push
sahf
negl
test
adc
icebp
and
jbe
sarb
push
add
adc
add
push
fisttpl
cli
aaa
std
fs
add
popf
mov
imul
scas
and
lock
inc
jo
subb
sbb
daa
or
aaa
fisttpl
xchg
lock
xor
xchg
sbb
repnz
in
push
adc
inc
push
cmove
mov
adc
lds
push
ret
push
std
pop
loope
leave
aam
inc
sahf
and
aam
in
fwait
pushf
mov
inc
es
mov
add
imul
dec
xor
out
mov
gs
in
test
in
push
into
adcb
mov
leave
inc
jno
ret
xchg
ds
cmc
mov
je
dec
mov
xchg
add
and
subl
sub
pusha
adc
and
push
pop
cmp
repz
cmp
add
mov
jmp
les
dec
push
and
add
out
scas
pusha
call
out
adc
es
jmp
mov
jo
and
sbb
or
add
cli
inc
push
inc
in
mov
inc
fisubrl
or
cmp
xor
insl
add
and
clc
stc
stos
mov
xchg
or
mov
pop
lock
and
lret
dec
mov
cld
sbb
jl
sbb
pop
sub
adc
push
cmp
push
roll
movsl
push
xchg
scas
mov
jno
scas
xchg
xchg
mov
pop
push
pop
sti
cmc
inc
movsb
mov
fidivs
clc
lahf
test
lds
sub
mov
pushf
rol
repz
mov
in
aam
js
jp
mov
in
hlt
pop
xchg
jge
sub
int
push
adc
mov
sub
fadd
es
pop
adc
jns
outsb
aas
xlat
ret
xlat
test
in
sbb
movsl
aas
test
pop
fwait
lock
out
test
push
dec
gs
adcb
callw
incb
in
cli
pushf
inc
rcrb
sbbb
sub
sbb
jle
cmp
pop
fwait
pop
dec
dec
inc
jl
movsb
mov
sub
sbb
add
sbb
jp
loop
test
clc
add
sbb
xchg
add
mov
inc
push
inc
mov
add
xchg
ss
dec
nop
das
mov
or
iret
in
sbb
roll
movsb
mov
outsb
or
push
mov
or
xchg
lcall
mov
mov
fisttpll
jae
add
adc
gs
xchg
shr
out
stc
clc
xor
adcb
jle
loop
jmp
sbbl
dec
scas
fwait
xor
and
xchg
sbb
xchg
clc
dec
in
aas
xchg
in
xor
jle
adc
popf
test
les
lret
insb
cmp
stos
mov
fucomp
cmpsl
enter
leave
mov
add
pusha
adc
mov
fs
js
nop
test
mov
hlt
inc
push
pop
sbb
mov
push
sub
mov
out
ds
or
cs
add
movsl
xlat
mov
sub
dec
shr
loope
dec
mov
or
jns
dec
ja
xchg
inc
lods
ljmp
call
mov
inc
aad
jmp
and
push
mov
dec
mov
int
sarl
outsl
fbstp
insl
xchg
insb
sbb
std
pop
mov
test
in
xor
mov
or
dec
shr
push
jo
and
pop
fiaddl
out
inc
inc
inc
dec
mov
stos
mov
xor
out
popa
mov
rcl
test
mov
scas
xor
das
cmp
mov
ficomps
aaa
push
rcrb
sbb
out
xchg
subl
pop
sub
inc
cmp
rorl
stos
xchg
cmpsb
sarl
mov
or
jp
out
pushf
xchg
addr16
jl
hlt
scas
jbe
push
jnp
nop
gs
loop
add
jae
push
push
mov
enter
xor
cmc
arpl
jno
dec
push
lret
sarb
xor
lds
mov
divl
out
or
fs
xchg
xor
cmpb
xchg
mov
add
push
imul
in
pop
sahf
stc
in
add
scas
es
pop
inc
sarb
push
sub
pop
ret
push
lods
push
mov
test
adc
sbb
sbb
mov
and
movq
jl
push
sub
push
leave
cmpl
iret
jmp
andl
lods
int3
inc
mov
jbe,pt
mov
rsqrtps
lods
in
das
inc
lea
or
xchg
add
rcrl
repz
and
mov
xchg
incb
xlat
aam
push
pop
push
mov
nop
jp
repnz
lock
ljmp
add
outsb
mov
iret
sbb
inc
cmp
sbb
mov
mov
fwait
movsb
mov
sbb
icebp
cld
lock
sub
dec
setle
adc
cld
fsubl
sbbl
rorb
pop
rcl
repnz
jp
inc
ret
aaa
xor
dec
dec
push
bound
movsl
push
add
call
into
xor
sub
mov
mov
push
pop
add
adc
mov
es
test
mov
int3
push
popf
mov
ljmp
lock
fs
loopne
cwtl
pusha
ret
mov
mov
test
cmp
negl
sub
mov
push
mov
stos
fs
aam
mov
sub
jmp
testl
sti
addb
mov
insl
ret
mov
push
jmp
mov
shl
ret
lods
into
movsb
mov
mov
in
push
test
push
and
dec
cmpl
fists
lret
aam
or
or
dec
repnz
sbbl
rcl
out
es
out
mov
fwait
adc
js
mov
mov
add
or
jnp
cmp
mov
gs
push
gs
pop
mov
popa
call
or
add
mov
or
cs
xchg
nop
divl
sub
outsl
std
push
and
lods
pop
out
jmp
lea
jg
mov
mov
lock
fcomps
push
ljmp
pushf
inc
ret
fwait
xchg
jle
in
jnp
push
sub
insb
out
xchg
sbb
arpl
xor
inc
out
leave
movsb
cmp
lock
insl
lret
mov
mov
in
pop
les
add
and
repz
and
mov
shr
bound
and
test
mov
into
pop
sub
push
gs
pop
int3
adc
arpl
mov
inc
scas
push
mov
mov
lret
icebp
rcrl
inc
popf
das
int3
cmpsb
pop
or
push
xor
pop
and
push
jns
mov
inc
mov
movsb
in
fsubs
push
mov
mov
sub
decb
and
push
fs
mov
insl
inc
lret
bound
ljmp
sub
cmpsb
clc
mov
xchg
jne
in
push
dec
notrack
bound
ret
outsl
dec
inc
out
scas
ljmp
pushf
out
call
xchg
and
stos
jmp
jae
fs
roll
mov
shlb
add
cmpsl
pop
rcr
out
out
mov
fldt
xchg
loope
cwtl
repz
inc
xchg
aam
popa
mov
sub
aas
lret
mov
xchg
mov
mov
cmp
lea
mov
out
pop
sbb
cmp
lock
cmp
mov
mov
lods
dec
std
or
std
adc
sbb
jbe
sub
and
arpl
lcall
push
dec
jno
pop
jb
push
filds
mov
mov
pop
adcl
stc
nop
fidivl
mov
push
mov
push
fwait
mov
ret
inc
sub
ret
pop
cli
iret
scas
scas
inc
loope
push
in
adc
mov
hlt
xchg
xchg
loopne
or
pop
mov
lea
sub
mov
xor
sub
cltd
shr
push
adc
or
cmp
stos
hlt
call
and
dec
xchg
pop
dec
int3
cld
push
les
aam
iret
jle
mov
cmp
fwait
push
cltd
and
push
inc
gs
jns
dec
ficoms
mov
mov
fucomi
fwait
mov
es
test
xchg
imul
pop
push
sub
loop
fldt
add
xor
sub
int
cmp
sbb
lret
idivb
pop
xchg
jns
icebp
cwtl
push
xlat
movsl
icebp
pop
lret
idivl
sub
cmp
jle
xchg
jge
sub
out
lcall
push
call
xchg
ljmp
je
out
cltd
sbb
xor
subb
push
outsb
or
inc
or
sub
lret
mov
xor
das
icebp
push
nop
pop
cmp
sbb
sub
inc
jg
jle
cmp
xor
rcrl
movsl
mov
movsb
nop
dec
sbb
inc
push
aaa
into
aaa
andl
clc
fildll
push
lret
js
push
xor
leave
mov
cs
pusha
stc
dec
sbb
ret
cs
test
mov
or
bound
add
fwait
ss
sbb
testb
popl
out
fisttpl
arpl
jbe
jmp
int3
out
mov
in
call
cmp
pop
test
xchg
ljmp
push
mov
dec
stc
popf
dec
mov
outsl
jp
nop
sub
ret
mov
subb
jo
mov
out
mov
sub
jmp
sbb
sub
lahf
notl
mov
jl
sub
inc
adc
out
adc
sub
jno
ficoml
mov
xchg
adc
xor
addr16
inc
xchg
mov
inc
push
bound
cmpsl
sti
into
jb
adc
add
push
xlat
cmpsb
xor
fisubs
cld
inc
dec
or
call
sbb
lock
xorl
mov
add
ja
aam
bound
les
or
add
pop
adc
insb
test
xchg
test
jo
mov
push
stos
in
imul
andb
sbb
add
cmp
mov
int
xchg
dec
sbb
in
cmp
push
dec
lods
fs
jne
and
icebp
inc
test
imul
bound
test
jmp
int
inc
shlb
into
sub
or
out
jae
insl
sub
call
and
inc
cmpsl
adc
int3
jbe
shlb
rol
xor
pop
aaa
lret
in
dec
pop
ffreep
sbb
add
es
cmp
leave
pop
imull
pop
pushf
cmpsl
sub
in
insl
out
inc
mov
and
cwtl
loopne
scas
mov
mov
inc
lret
or
lahf
mov
and
xchg
fwait
bound
cs
adc
dec
adc
mov
lcall
cltd
mov
mov
scas
and
ret
push
aam
clc
sarb
aaa
in
dec
repz
out
push
in
xor
rcrl
sub
mov
push
dec
sub
call
add
push
push
ja
mov
hlt
adcb
outsb
test
jnp
lcall
push
je
outsl
mov
rorb
idivb
push
lret
xchg
stc
loopne
popa
bound
call
sub
notb
add
mov
lea
loopne
sub
sub
jl
mov
push
push
xor
mov
add
mov
dec
add
dec
sub
ficoms
fwait
sti
roll
cmovp
ja
sub
jo
dec
gs
hlt
adc
adc
jbe
mov
adcl
dec
push
jecxz
popa
and
cmp
in
jmp
pop
xchg
mov
jle
aam
push
add
xchg
ret
in
jmp
stos
jmp
ljmp
dec
dec
sbb
mov
vmovmskpd
loope,pn
shll
aam
or
xchg
das
rcrb
movsl
aaa
outsl
fs
or
inc
sbb
je
insl
push
xor
icebp
shl
mov
mov
cmpsb
adc
mov
test
sbb
dec
ss
push
fbld
inc
in
scas
and
in
jle
pop
fdivrs
push
daa
mov
loop
push
xchg
dec
mov
sbb
in
mov
jge
je
add
movsb
dec
fmuls
pushf
dec
mov
mov
xchg
inc
scas
inc
insl
aaa
pop
ss
les
ja
add
cmpsb
lea
xor
fstpt
jae
gs
push
and
mov
mov
cs
sbb
aas
pop
mov
mov
cmp
arpl
sahf
dec
add
xlat
out
xchg
hlt
repnz
and
or
and
test
cmp
jae
gs
es
dec
push
jecxz
jnp
lea
sbb
andb
std
popa
addb
mov
cmpsb
repz
dec
pop
mov
pop
xchg
xlat
cmp
aam
pop
imul
push
jge
rcr
cltd
push
int3
jge
pushf
mov
rcrl
clc
xchg
iret
repnz
inc
cwtl
fwait
or
shll
dec
dec
push
mov
in
mov
mov
jge
or
jo
loope
ret
lods
push
sbb
jmp
leave
sbbb
stos
outsb
cmc
and
fisttpl
call
mov
pop
lret
jl
pusha
outsb
cld
push
mov
jb
loope
lret
pop
push
andb
jle
adc
dec
jne
inc
lock
sub
push
sub
jne
or
imul
ss
daa
mov
sbbb
jb
cmp
fwait
scas
sbb
aam
fbstp
div
mov
dec
shl
int3
mov
xchg
daa
or
cmc
cmpsb
mov
out
pop
mov
movsl
mov
aad
or
mov
clc
arpl
xchg
scas
mov
mov
mov
mov
adc
ss
jge
dec
add
xor
adcl
fcmovbe
xor
xor
aad
jl
shll
imul
xor
mov
addb
mov
push
cld
mov
pop
cmpsl
push
cmp
mov
push
jns
int3
lret
sbb
mov
dec
out
add
das
push
out
mov
xlat
mov
mov
mov
cmp
into
pop
sbb
sbb
scas
mov
inc
add
xchg
lcall
pop
xor
or
fbstp
arpl
sub
mov
jl
jno
rorl
mov
lea
lcall
lcall
std
mov
fwait
pushf
cld
call
stos
pop
call
xor
xchg
es
push
and
or
sbb
adc
test
scas
cmp
call
in
cmpsl
mov
shrb
dec
sarb
pop
ss
xchg
dec
jns
inc
aas
sbb
pop
fistpl
or
pushf
xor
jl
jp
les
dec
cmc
jbe
mov
ret
loopne
fmull
mov
rclb
sub
sti
int3
aad
cmp
mov
addl
dec
jecxz
sbb
jnp
js
xchg
leave
push
lods
rcr
jge
or
sub
cmp
aad
jno
ja
push
in
mov
stos
jl
aad
pop
lock
jl
xor
leave
subb
popf
out
or
cwtl
adc
cmp
sub
out
xchg
ss
testl
and
orl
xchg
insl
xchg
xor
mov
imul
xchg
int3
adc
std
mov
mov
inc
push
fiadds
jmp
rcrl
lds
imul
xchg
sub
fwait
int
push
pop
vpcmpgtb
inc
decb
lcall
push
pop
mov
sub
decb
or
adc
cltd
cmp
inc
jo
sub
sbb
in
hlt
addr16
repz
outsb
inc
or
jns
xor
inc
and
cmp
dec
jnp
jnp
sub
jae
inc
inc
xchg
and
sub
cmpsb
in
jne
movsl
bound
outsl
add
test
aad
jo
inc
icebp
jns
rep
in
push
ret
xchg
std
mov
sbb
cmp
test
je
mov
sti
mov
cwtl
mov
add
repnz
adc
clc
mov
fbld
jnp
sub
cltd
pop
push
pop
loopne
pop
das
pushl
hlt
gs
out
in
push
in
cmp
xor
clc
cmp
jg
sub
xor
subl
filds
pop
nop
data16
es
cwtl
mov
fldenv
fldenv
sub
clc
inc
jno
mov
jns
mov
insb
jge
jns
les
and
or
add
data16
sub
dec
fpatan
jl
lds
mov
xchg
jmp
jbe
and
mov
pop
cmp
and
mov
jne
sbb
and
adc
jl
pop
cli
dec
sbb
mov
jge
adc
cmc
mov
and
clc
xchg
xor
sbb
cmp
sub
mov
xchg
jae
ljmp
pop
div
adc
adc
daa
mov
call
mov
xchg
lods
mov
sti
clc
pop
jmp
mov
popf
cmc
fsubs
mov
cmp
inc
stos
jmp
int3
sarl
fistps
pusha
stos
jecxz
jmp
mov
sbb
rorl
gs
add
int3
pop
cs
lock
cmpsl
out
and
xchg
xchg
or
xor
xor
lods
mov
lret
sbb
sti
dec
mov
lcall
in
subl
jns
pop
add
inc
xchg
pusha
mov
in
sahf
jne
adc
and
inc
cld
sub
stc
lock
and
test
dec
adc
in
jg
jmp
mov
xor
aad
test
push
lahf
aas
or
mov
leave
cmp
in
aas
xchg
mov
pop
add
es
dec
mov
pop
fs
fildll
ja
or
dec
dec
sbb
sub
repz
adc
mov
nop
adc
leave
inc
mov
fnstcw
rcrl
mov
lods
inc
andb
int
lret
and
setno
pop
test
xchg
fldcw
jb
pusha
inc
pop
cmp
lret
cwtl
fwait
pop
cmp
mov
dec
cmp
repnz
pop
stc
mov
lods
out
fwait
sbb
cs
aas
adc
popl
pop
xchg
lea
lods
orl
or
xor
push
ret
and
push
test
xchg
mov
mov
mov
popa
pop
add
dec
out
xlat
dec
call
adc
xor
sub
aad
dec
loope
xor
sbb
int
pop
lahf
test
out
sbb
mov
es
and
push
mov
loopne
fwait
ja
cmpsl
ds
cwtl
and
and
stos
inc
lods
mov
leave
fs
jge
jmp
xchg
xchg
pushf
mov
cs
lods
aam
sbb
gs
cld
lcall
repz
cmpsl
cmpsb
dec
fmul
incb
into
sub
inc
xor
push
lods
cltd
or
inc
movsb
int3
mov
sbb
sbb
mov
jno
lods
sub
and
adc
imul
or
dec
xor
out
repz
lret
lret
sbbb
rcl
mov
fisubrs
xchg
adc
add
push
pop
ret
flds
sar
adc
fsubrl
pop
insb
hlt
xchg
out
mov
jo
inc
rcrb
out
std
push
sbb
or
and
mov
insb
sub
lea
inc
xchg
mov
jne
sub
pop
stos
jmp
fcoml
xorb
rcrl
or
mov
fcom
cmp
pusha
jmp
jae
cmc
cwtl
ret
mov
xchg
lea
jg
jle
imul
dec
stc
shl
in
sti
and
cmp
sbb
movsb
int
aaa
mov
out
mov
rclb
out
stos
pop
in
fsts
orl
xchg
dec
xchg
add
sbb
adc
mov
add
mov
pop
cld
leave
in
fnsave
lcall
lret
nop
push
dec
cs
lcall
ds
lods
push
pop
repz
sub
cli
cmpsl
mov
dec
fisttps
inc
fwait
pusha
sub
inc
loopne
mov
xchg
pushf
faddl
insb
push
outsl
or
pop
add
outsl
repz
jns
sub
jb
ffree
xchg
mov
pop
sub
push
xor
dec
xchg
xchg
push
pop
xor
push
push
inc
pusha
add
loop
fsubs
loopne
lods
adc
outsb
mov
mov
mov
incb
and
cltd
xor
out
jns
cmp
push
push
popf
mov
insb
push
lahf
push
cmp
jmp
push
inc
mov
popf
push
sbb
or
jne
mov
fiaddl
mov
fs
cld
mov
push
jnp
fwait
push
cltd
push
dec
xor
jae
add
xor
cmp
xchg
test
jge
orl
hlt
or
mov
stc
push
pop
fdivs
xchg
gs
xchg
dec
out
insl
loopne
iret
fnstcw
mov
arpl
out
dec
add
js
mov
jnp
test
fistpl
xchg
shrb
movsl
pop
cmc
jg
push
mov
xchg
add
cmpsl
cwtl
adc
and
cwtl
push
jae
pop
jo
dec
lret
and
push
mov
mov
inc
add
sti
shll
pop
std
scas
pop
or
sahf
mov
gs
adc
and
pop
jnp
std
nop
ss
in
xor
cmpsl
imulb
mov
fisubrs
sbbl
mov
or
sub
push
lock
fisubl
je
push
dec
cmp
mov
mov
pop
cmp
movsb
jno
cmpsl
mov
and
lret
negb
into
mov
imul
decl
cmpsl
negb
cmp
jge
lcall
xchg
sbb
pop
movsl
sub
sub
mov
leave
sbb
lods
pop
adc
into
das
outsb
jg
pop
add
sub
dec
mov
jns
in
mov
ret
daa
adc
inc
and
push
dec
add
dec
adc
scas
lahf
fsubrs
mov
sbb
cmp
push
lods
pop
and
xchg
repnz
out
sbb
pushl
mov
ds
lcall
in
inc
mov
stc
and
cmpsb
sbb
and
outsl
jnp
lahf
mov
dec
mov
jle
and
pop
jl
data16
xchg
repnz
push
lock
dec
or
popa
movsb
std
jns
ljmp
imul
call
in
push
push
mov
jae
and
jl
pop
popl
ret
adcb
jmp
sub
es
add
jnp
imul
mov
int
les
sbbb
fstl
mov
fstl
test
leave
fucomp
cli
pop
xor
ljmp
mov
jle
mov
data16
xchg
dec
sbb
sub
mov
dec
sub
jnp
inc
lods
clc
aam
cmp
sahf
clc
repz
imull
mov
enter
daa
sbb
add
cmpsl
ds
mov
or
push
cwtl
mov
test
je
mov
push
movsb
cmp
loop
mov
ret
ljmp
jmp
xor
mov
xor
xchg
lock
stos
ds
movsb
js
jle
pop
lahf
aam
xchg
cmpsb
in
cmp
jmp
mov
dec
into
andb
xchg
push
mov
dec
sub
xchg
not
dec
mov
fdiv
scas
fstpt
and
bound
push
xor
jecxz
call
mov
mov
push
xchg
xchg
lods
and
jl
xchg
or
pushf
or
adcb
xor
jp
pushf
fisubrs
xchg
pop
mov
xlat
inc
sarb
aaa
or
jmp
mov
jbe
sub
push
das
sbb
pushf
mov
push
in
imul
pop
shr
mov
cmpsb
push
repnz
imul
repnz
out
sahf
adc
sub
cmpb
or
and
cmp
cmp
sbb
shl
fwait
rcrl
push
or
jp
sub
out
push
pop
shrl
xchg
lahf
jns
icebp
mov
add
cld
xlat
mov
xorb
mov
mov
daa
outsl
enter
xchg
or
sub
dec
sub
stos
fst
iret
cmpsb
adc
mov
test
lret
lcall
or
pop
rol
bound
xchg
push
jmp
xor
cmp
cs
pusha
fldl
xor
xor
sub
test
sub
cmp
sbb
inc
fwait
rcl
dec
dec
movsb
jmp
sub
sbb
xchg
sub
cwtl
dec
js
dec
lock
jno
or
xor
push
inc
iret
cmc
jno
in
sbb
lahf
jae
or
dec
inc
arpl
xchg
pop
mov
scas
xor
add
xchg
std
lods
testl
add
mov
call
xchg
add
push
mov
inc
outsl
add
sbb
pop
cmpl
jnp
ljmp
xchg
inc
das
ss
xor
bound
out
inc
fadds
fs
mov
lods
add
imul
std
xchg
into
packssdw
fcompl
mov
push
test
mov
pop
dec
andb
inc
sub
cli
push
add
dec
lods
jg
ret
jp
loop
es
lret
push
cli
mov
push
sub
push
repz
mov
xchg
les
pushf
sti
pop
icebp
cmp
outsl
cmp
cmp
pusha
fstl
addr16
cmp
fs
xchg
scas
adc
insb
and
push
shll
sti
inc
test
mov
mov
sbb
or
cmp
stos
mov
and
jne
pop
xor
sub
and
jle
repnz
push
pop
repz
ja
fiaddl
ficoml
jp
or
cmp
add
sbb
pushf
mov
gs
sbb
mov
gs
rcl
mov
or
pusha
push
jl
mov
dec
pop
pushf
sub
lret
mov
mov
push
pop
andl
dec
popa
aam
jl
pop
daa
or
mov
push
push
or
leave
sbb
inc
std
lds
sarb
cmpsl
mov
push
mov
mov
addl
inc
xchg
push
stc
push
popf
fcmovu
aad
inc
jb
inc
mov
in
dec
stos
add
dec
adc
mov
outsb
insb
mov
adc
xor
xor
xor
into
fidivl
subl
and
nop
pop
cmp
inc
cltd
sub
xchg
leave
pop
lahf
iret
call
fwait
test
out
sbb
mov
out
cs
dec
rcr
lret
aad
shll
jp
pop
test
test
dec
push
or
fdivs
mov
hlt
mov
lret
mov
mov
sbb
rep
fcomps
mov
adc
ljmp
pop
dec
mov
pusha
call
inc
jb
sti
sub
cmp
jo
adc
xor
and
sbbb
idivb
mov
adc
mov
int
cwtl
stos
int3
jg
mov
xchg
loope
mov
mov
jb
mov
fdiv
or
sbb
jmp
popa
inc
out
loope
push
sub
sub
cmp
cmp
mov
mov
scas
fiaddl
aad
stos
push
jo
leave
js
push
aaa
mov
mov
shlb
in
xchg
jge
stos
fstps
aas
mov
daa
inc
repnz
xchg
or
or
lock
xor
xor
push
and
ljmp
jno
sub
sbb
lods
lahf
push
or
dec
push
cld
cmp
fdivr
inc
push
push
xchg
movb
adc
mov
enter
or
cmp
scas
inc
add
mov
arpl
jnp
fcompl
mov
sub
sub
sahf
or
dec
iret
mov
add
das
mov
in
push
fs
pop
jg
icebp
dec
int3
or
iret
push
test
mov
adc
mov
das
test
or
xchg
pop
outsb
mov
aad
or
pop
add
testl
sub
jle
cmp
jp
out
push
mov
xchg
out
sub
mov
dec
fcomps
in
adc
ljmp
mov
cmpsb
xchg
jns
mov
cmp
das
test
add
bnd
push
call
adc
xor
test
outsl
ljmp
in
jg
out
ret
add
lahf
add
pop
adc
push
scas
add
bound
xor
in
xor
sarb
ret
cmp
mov
xchg
int
mov
addr16
movsb
imull
xchg
popf
aam
pop
stos
push
adc
pop
cmp
xchg
sub
fstpl
mov
jb
pop
sbbl
add
sbb
fimuls
insb
sub
out
add
dec
inc
push
jnp
daa
inc
into
fmul
mov
or
add
push
gs
add
lock
cmp
push
in
sub
mov
jge
inc
pop
int
dec
orb
shr
push
add
sub
lods
js
xor
cmpsb
sub
or
xchg
fdiv
das
jle
dec
hlt
nop
sahf
jnp
or
mov
ficoms
pusha
jmp
fisubs
shlb
and
inc
adc
inc
ret
xor
arpl
xchg
pop
push
aas
mov
clc
ret
jle
cltd
fildl
add
dec
mov
mov
lret
int
lea
call
cmp
dec
ret
jns
push
pop
inc
xchg
dec
fucom
dec
pop
sbb
data16
inc
dec
mov
sahf
cmp
out
stc
lods
mov
jg
imull
mov
notb
sar
sbb
or
xor
adc
pop
popf
pop
sbb
popf
fisubl
imul
ljmp
rolb
repnz
sbb
fucomi
pusha
ss
fiadds
pop
lret
push
fxch
sarb
mov
dec
test
movsl
leave
jns
sti
shlb
jae
add
movsl
inc
icebp
mov
adc
add
movsl
cmp
cmp
inc
adc
push
into
test
xchg
sub
clc
inc
inc
cmp
movsl
dec
push
inc
std
mov
dec
xor
jge
mov
inc
enter
push
lcall
or
cmp
scas
jae
sbb
ljmp
xor
inc
test
aaa
dec
and
jl
mov
sub
mov
dec
sbb
cwtl
in
mov
ja
inc
test
test
shrl
sahf
lock
test
push
ficompl
mov
jns
test
push
test
cwtl
pop
arpl
addr16
add
jl
loop
push
sbb
cltd
cmp
cmpsl
shrl
push
pop
push
mov
shr
inc
jbe
fiaddl
pop
js
sub
aam
rcrl
jbe
dec
inc
cwtl
mov
inc
pushf
out
enter
inc
sti
jno
ficompl
sbb
rolb
daa
or
xor
jle
inc
inc
mov
hlt
loope
pushfw
dec
in
adc
ret
rcll
stos
sub
lock
pop
int3
pop
fildll
pop
sub
dec
out
xor
or
adc
cwtl
xchg
mov
aas
and
movsb
test
orb
bnd
add
dec
jo
push
icebp
pop
int
inc
mov
push
aas
mov
addr16
jnp
fndisi(8087
cmp
xor
loope
nop
daa
in
add
dec
shll
jno
add
ficoml
and
lock
pop
sbbb
or
pop
andw
imul
lods
mov
jb
clc
iret
mov
ret
pause
repz
dec
gs
mov
adc
out
mov
in
or
aas
leave
rclb
scas
mov
adc
pop
mov
adc
push
stos
lea
cs
in
push
int3
dec
mov
and
lds
mov
arpl
shl
mov
lock
jle
cmc
mov
idiv
scas
jno
in
xor
push
fsubrs
cmp
jno
mov
in
data16
push
sbb
daa
roll
mov
dec
in
sub
dec
add
call
mov
ds
shrl
into
xchg
lds
ret
sbb
loope
aam
mov
insb
orb
repnz
outsb
add
lret
push
lea
or
mov
fwait
nop
out
jge
je
sub
mov
lock
sbb
pop
pop
fstps
cmc
pop
jo
xor
ret
xchg
xchg
dec
adc
xor
cmp
sub
mov
jge
xchg
push
adc
repz
sub
outsb
dec
cmp
test
mov
push
pop
insl
sbb
mov
orb
mov
xchg
rep
add
ret
xor
cmp
sti
ret
sub
cmp
sub
scas
and
lcall
push
xchg
mov
popa
push
xor
xor
mov
ficoml
push
mov
mov
cmp
mov
ret
or
xchg
mov
fnsave
pushf
lea
sub
adc
and
and
stos
ret
je
ret
shrl
mov
cmpsb
xchg
fidivrl
push
mov
inc
loop
sub
mov
testl
mov
negb
lds
adc
and
icebp
push
add
add
fbstp
movsl
pop
lret
jg
xchg
bound
enter
sarb
mov
das
xchg
shlb
sub
mov
imul
jo
out
imul
into
sub
pushf
jg
add
mov
addr16
outsl
movsl
mov
scas
fisubl
lods
cmp
stc
leave
fld
jbe
mov
mov
fldl
mov
es
lods
jge
fcomip
lods
pop
ljmp
add
mov
inc
repz
out
arpl
adc
hlt
imul
pop
out
loopw
adc
adc
adc
dec
sahf
mov
fxch
mul
adc
xchg
add
add
sbb
mov
sub
out
jle
loop
mov
push
lds
popl
pop
mov
out
in
mov
daa
and
bound
add
xor
xor
mov
xchg
lods
cmp
mov
push
out
fistps
dec
mov
and
or
mov
repnz
sbb
rcrl
mov
lahf
sbb
adc
sbb
std
fidivrs
imul
fwait
push
leave
dec
xchg
and
mov
push
out
inc
add
enter
pmuludq
dec
inc
pop
mov
pop
dec
add
jnp
pop
pushf
out
pop
roll
push
mov
inc
or
sub
psrlq
jp
sti
ret
daa
and
pop
mov
add
in
jno
xlat
sbb
es
insb
in
fsubrs
test
xlat
mov
add
mov
outsb
hlt
addl
fistpl
inc
mov
mov
std
je
sbb
jnp
and
idiv
andb
xchg
pop
mov
or
into
test
sub
mov
out
movsl
icebp
pop
in
or
aaa
or
outsb
or
jle
imul
push
roll
mov
add
sub
hlt
mov
lds
sbbb
push
ret
lods
addr16
lahf
enter
fucom
dec
decl
shl
mov
sub
jmp
mov
cwtl
mov
inc
pushf
inc
jnp
std
in
cltd
xor
or
jne
adc
adc
imul
push
pushf
lea
dec
aaa
into
sbb
dec
pop
call
cmpsl
pop
mov
clc
jecxz
adc
enter
in
pushf
scas
mov
jne
mov
dec
sbb
fwait
sub
cmp
test
test
adcl
aaa
add
out
out
dec
inc
je
sub
loope
mov
cmp
push
mov
xchg
jge
sbb
ficomps
adc
cmp
in
in
out
xor
popa
xor
repnz
bound
das
and
pop
jl
arpl
mov
or
xlat
jmp
movsb
sahf
bound
mov
sub
ja
popf
mov
pop
or
mov
aad
xor
mov
or
jnp
xchg
in
lods
ret
add
mov
rcrb
testb
ljmp
push
loopne
cli
and
out
sbb
jb
xor
push
push
jno
in
insb
jbe
icebp
xor
call
push
shlb
or
jg
je
dec
arpl
imul
imul
shlb
mov
fnsave
mov
cmp
loope
lret
outsl
jns
out
loope
push
les
mov
pop
in
rcl
dec
pop
sbb
aam
mov
xchg
add
adc
adcl
fldcw
dec
pop
mov
cmp
dec
add
rcl
jae
pop
push
pusha
xchg
lods
pop
sar
ja
hlt
xor
cs
sti
ds
out
pushfw
lea
or
adc
aaa
fstpt
loopne
testb
cli
aad
or
inc
insw
mov
and
stos
stos
adcl
push
repnz
cmp
js
sbb
popa
mov
dec
mov
pop
shr
mov
add
sub
xchg
sub
adc
mov
out
add
mov
push
push
push
and
je
fcoml
orl
xlat
ljmp
into
xor
addr16
push
dec
popa
and
xchg
sub
sarl
pop
cmpsl
xor
dec
mov
repz
and
test
mov
hlt
stos
jbe
pusha
mov
lret
and
jnp
mov
pusha
and
mov
sub
outsb
iret
mov
fs
fwait
cld
stos
inc
xchg
push
and
stos
movsb
sub
or
jae
ja
push
sbb
and
sbb
std
fimuls
sarl
shlb
loopne
add
xchg
add
bound
pop
loop
xchg
dec
add
faddp
cmp
imul
jne
lods
cmp
sbb
mov
loope
mov
push
jo
outsb
dec
pop
sahf
push
pop
lahf
sarl
hlt
mov
jno
sbb
mov
dec
xor
ret
andl
fwait
les
and
push
cmpsl
inc
loop
bnd
sbb
push
cmc
in
jmp
mov
jne
sahf
and
sbb
and
pmulhuw
mov
push
mov
cmc
aam
cmpsl
and
sahf
dec
dec
lahf
imul
int
movsb
es
ret
mov
lods
movsl
rcr
jnp
dec
daa
cld
imul
sbb
jns
mov
lcall
das
cmp
xchg
inc
shlb
addr16
cmp
mov
add
out
add
shlb
jns
mov
ss
sti
dec
cmp
dec
mov
outsb
pop
stos
sbb
xchg
jge
mov
adc
sti
lcall
flds
cli
lods
cmp
cli
cmpsl
jl
add
int
lock
mov
mov
xchg
adc
inc
mov
or
cmpb
pushf
sub
add
lods
test
jmp
or
repnz
aaa
mov
dec
ret
lods
push
fbld
cld
xchg
and
or
pop
pop
fcompl
inc
push
mov
mov
orb
and
sub
mov
dec
mov
leave
inc
rclb
mov
call
inc
arpl
and
lret
ficomps
arpl
frstor
outsl
lret
enter
or
sbb
cmpsb
jnp
pop
ds
gs
loop
ficoml
in
sub
push
pushf
dec
dec
sarl
dec
imul
push
outsl
stos
adc
popa
ss
sti
gs
clc
push
mov
pop
cli
into
out
mov
int
inc
fld
mov
imul
sti
rcrb
stc
shlb
xchg
sub
cs
lret
mov
sub
xor
push
sarl
loopne
sub
mov
mov
pop
cmp
pop
outsl
mov
jno
cmp
ljmp
jno
add
jg
or
push
shrb
push
je
add
and
notl
divl
popa
loopne
mov
cs
cmpsb
mov
sub
jmp
xor
mov
ret
lahf
or
xchg
add
jge
sub
pop
dec
cwtl
pop
xor
lods
pop
insb
sub
mov
mov
inc
xchg
jl
dec
cmp
mul
ds
test
xchg
xor
sub
push
fisubrs
repz
ds
pop
cmp
push
ret
inc
lods
loope
sbb
les
add
cmpsl
testb
cli
cmp
aad
mov
into
fwait
sub
push
cmp
pop
xchg
cmp
push
das
xor
lock
or
sbb
test
daa
cwtl
sbb
aaa
push
test
jmp
pop
xchg
dec
and
jp
add
or
sub
pop
jne
dec
push
nop
scas
fdivl
mov
jnp
push
int
xor
and
dec
mov
ret
in
xor
jae
cli
or
xchg
incb
pop
mov
test
imul
ss
cld
inc
dec
xchg
popf
mov
cmp
jmp
out
sub
int
das
sub
pusha
push
sub
jp
xor
cld
pop
mov
push
cwtl
push
mov
mov
mov
jmp
pop
movsl
test
addr16
shll
mov
jne
ret
push
fidivl
sub
inc
mov
and
cwtl
in
cmp
add
add
jne
add
into
rorb
add
jns
and
cmp
repnz
cld
aam
cmp
rcl
jbe
call
cli
jp
fldl
addr16
push
mov
pusha
xlat
out
lcall
movsl
jmp
notb
xchg
xchg
negl
mov
icebp
jne
stos
mov
bswap
test
and
jp
add
stc
xor
xchg
adc
mov
aaa
movsl
xor
into
hlt
mov
icebp
jg
adc
sub
outsb
and
or
dec
je
scas
out
and
paddusb
add
cmp
mul
mov
nop
addr16
fdivrs
jno
jg
test
fsts
cmpl
jp
mov
xor
sbb
xor
aaa
loop
movsl
icebp
dec
add
push
inc
popa
imul
push
and
mov
ret
add
fildl
mov
in
xchg
repnz
mov
shrl
sub
xchg
pop
add
jecxz
dec
sbb
push
push
push
hlt
addl
jl
jnp
jmp
imul
add
out
lret
rcll
int
mov
rol
sub
add
aaa
or
push
std
aam
stos
inc
out
out
cld
loop
cmpsl
adc
insl
add
xor
add
adc
daa
imul
cli
icebp
mov
or
jl
mov
repnz
mov
mov
push
inc
jmp
jnp
xor
pushf
sub
dec
xchg
adc
ret
push
adcb
cmp
mov
dec
fcmove
mov
push
out
pop
scas
xchg
mov
adc
xor
push
inc
mov
jo
pop
fadds
fbstp
push
fs
outsb
std
xchg
mov
rcrl
sub
dec
mov
fs
mov
into
jmp
into
nop
daa
add
push
mov
movsl
mov
inc
out
add
test
xor
push
mov
xchg
scas
jno
sbb
arpl
jno
xchg
mov
or
fisttps
loope
lea
aad
mul
jl
sbb
pop
and
pop
sub
sub
outsb
lods
or
jl
ficoml
adc
sub
jg
xor
push
fistl
int
lock
mov
into
cmpsb
aaa
mov
icebp
movsl
inc
aaa
mov
icebp
mov
jns
inc
popa
mov
add
or
sbb
stc
int
and
mov
fsubrs
mov
or
clc
mov
cli
rcrl
mov
out
insl
or
cmpsl
or
aas
and
jnp
scas
sbb
mov
and
and
clc
sahf
or
sahf
pop
clc
test
mov
bswap
adc
das
out
in
pop
xchg
mov
inc
aam
ljmp
out
dec
sub
repnz
jno
cs
inc
sbb
fnstenv
sub
shrl
or
int
mov
shrl
jmp
add
mov
js
add
in
cmp
mov
and
je
sbb
jp
sub
jle
repnz
sbb
shrl
cmpsl
in
jge
mov
popf
mov
mov
dec
scas
shl
ds
aas
sub
push
pop
testl
cmp
fcoml
adc
jbe
hlt
iret
rcll
push
lds
daa
iret
fldcw
icebp
shll
sarb
push
mov
cli
gs
add
clc
fnstcw
shll
mov
addr16
testl
cli
ljmp
sbb
push
inc
mov
add
mov
insl
push
notb
cs
fisubrs
cmpsb
cmp
idiv
inc
cld
adc
stos
adc
incb
shll
mov
sub
pop
xchg
mov
push
inc
bound
rcrb
inc
pop
xor
dec
test
xor
adc
lahf
cmp
clc
imul
push
mov
sub
call
cmp
jnp
out
sbb
inc
push
push
mov
mov
add
mov
shlb
lcall
sbb
aas
inc
xlat
repz
mov
aam
mov
xor
ficoms
xchg
cmp
xchg
outsb
loopne
mov
xorl
mov
push
in
mov
icebp
test
loope
cmp
mov
imul
cmp
shlb
cmpsb
add
pop
test
clc
inc
xor
je
jle
or
and
xor
lea
or
and
xor
push
test
shlb
mov
cmp
inc
fwait
in
mov
xchg
sbb
and
jo
jb
call
adcb
adc
sbb
dec
addr16
xor
jmp
mov
cmp
test
loopne
sub
hlt
mov
pop
and
lock
mov
pop
aaa
push
mov
sub
jecxz
and
jmp
inc
lods
nop
inc
mov
sbb
lock
mov
fcmovbe
pop
xor
rcl
add
push
push
mov
inc
pop
fs
inc
mov
pop
enter
fistpl
pop
lcall
xor
fs
dec
loop
sbb
mov
and
inc
sub
les
ja
enter
cwtl
lfence
in
aas
popf
cli
stos
cmp
cmp
push
push
aas
mov
or
dec
aas
mov
mov
and
mov
into
rcl
lock
pop
add
sub
sub
mov
in
sahf
in
mov
push
sti
xchg
adc
xlat
xor
lcall
sbb
rcl
cli
jge
in
es
mov
imul
jno
or
fdivrl
shrb
stc
ljmp
adc
sbb
in
sbb
cmpsb
jns
mov
popf
xor
adc
xor
lock
iret
por
leave
pop
push
inc
aam
push
pop
in
ljmp
test
xchg
push
cmp
or
cwtl
dec
out
jb
jno
negb
mov
sbb
xor
aam
lcall
push
jmp
xor
nop
lock
testb
xor
lods
adc
xchg
icebp
mov
pop
cld
addr16
or
and
pop
in
rorl
xor
xlat
push
mov
push
push
out
stos
or
push
sbb
and
inc
aas
adc
sbb
jbe
lcall
insb
add
popf
fwait
mov
popa
insb
jno
push
mov
dec
fldl
andb
pop
test
mov
aam
sub
fnstenv
mov
or
sub
cmp
push
subb
addr16
jl
in
add
pusha
andb
push
fwait
mov
mov
cmp
popa
cmpl
or
addr16
mov
arpl
ret
rorb
subl
ret
mov
js
mov
xor
movsl
cltd
sub
jne
cmpsl
scas
nop
vpandn
shl
mov
xchg
sub
sub
out
pop
cmp
adc
xchg
lcall
imul
ret
mov
ljmp
cwtl
aaa
rorl
test
bound
jb
inc
and
fisttps
add
xor
xlat
add
fmull
mov
jbe
xchg
lret
jbe
mov
adc
lret
and
or
mov
imul
into
bound
aad
or
int
movsb
sub
insb
adc
xor
dec
js
sub
jbe
call
xor
push
xchg
fs
sahf
int3
mov
and
test
mov
enter
std
xchg
pusha
fbld
les
push
bound
aas
sbb
pop
xor
pop
sti
lret
int3
mov
adc
sub
es
data16
int3
lret
jge
mov
pushf
xor
or
dec
scas
in
xchg
movsl
loop
or
adc
cmp
rcll
bnd
aam
loopne
sarb
jnp
sbb
pop
inc
fimuls
in
mov
jnp
lret
sbb
mov
sbb
outsb
stos
jmp
pop
push
fwait
in
fwait
jle
pusha
xor
xchg
inc
loope
cmp
pop
or
iret
sub
jge
xor
adc
in
lea
sbb
xchg
jge
xor
shll
js
cmp
loope
lods
call
sbb
xchg
out
xor
insb
mov
push
xchg
or
adc
cmp
aad
and
in
filds
xlat
out
pop
cmp
in
jnp
mov
add
xor
cltd
sti
jmp
mov
arpl
xchg
aaa
mov
mov
xor
outsb
aam
sub
mov
push
sub
pop
push
mov
scas
call
popf
cwtl
xor
dec
jae,pt
fsub
sbbl
add
add
sub
stc
loopne
pop
xor
sti
subl
cmp
mov
aad
enter
mov
scas
and
in
test
jno
xor
push
das
cmpsl
cmp
stc
out
jae
inc
cmp
fsubs
test
loop
dec
add
shll
mov
pop
jnp
movsb
stos
filds
jo
das
gs
push
jmp
pop
loope
jmp
jbe
rcl
pop
stos
cmpb
outsl
mov
jae
scas
shlb
mov
add
loop
fnstenv
jne
out
imul
mov
cmp
jecxz
inc
push
adc
pop
cmp
add
cmp
xchg
in
rcrb
or
and
add
pop
lock
int
add
add
mov
inc
add
cltd
and
jne
jno
add
enter
add
push
in
pop
ss
out
jb
adc
out
and
mov
lahf
xor
xchg
sbb
push
push
and
mov
insl
push
mov
sbb
cmpsb
lea
out
movsb
fldl
stos
lcall
jmp
push
sbb
arpl
cmp
dec
jns
push
push
addr16
xchg
sub
scas
icebp
push
xchg
mov
cmp
pop
mov
enter
imul
mov
push
rorl
xchg
leave
dec
enter
fldenv
ud2
jno
inc
loop
push
out
adc
adc
leave
repnz
clc
shl
jle
das
adc
xchg
hlt
xor
cmp
clc
jmp
ret
imul
pushf
xchg
and
shrl
cmp
gs
repz
cwtl
cmp
dec
out
pop
cld
pusha
ljmp
into
push
popf
leave
loopne
dec
into
mov
lret
push
cwtl
pop
xchg
rcrl
lds
sub
xchg
mov
mov
out
and
ret
jmp
fcoml
mov
loopne
cmovo
orl
out
ficompl
sub
jb
inc
movsb
mov
int
out
xor
mov
push
daa
in
rorl
js
sbb
ljmp
jl
mov
xor
test
mov
fucom
xor
imul
xor
imul
adc
sti
and
movsb
pop
test
or
jmp
jb
out
cmc
jg
pop
test
mov
or
les
int
mov
aad
addr16
out
or
scas
sub
cmp
iret
test
hlt
mov
and
dec
dec
jp
pop
inc
push
adc
push
and
jmp
mov
mov
ljmp
test
test
leave
xor
hlt
inc
xchg
lahf
push
mov
cmp
call
outsl
aas
dec
and
mov
mov
xor
rcll
inc
lods
scas
push
xor
mov
arpl
aas
inc
cmp
loop
push
inc
fiadds
mov
mov
call
movsl
pushf
xchg
out
inc
jne
arpl
and
sbb
setnp
or
xor
dec
repnz
lock
adc
push
lcall
pop
bound
insl
stos
aas
or
mov
add
loop
push
mov
lret
add
shrb
addr16
sub
jns
adc
mov
jbe
cmp
scas
imul
mov
and
jge
push
jno
jge
jp
je
filds
push
dec
lret
pusha
nop
daa
push
push
mov
aaa
stos
push
cltd
cltd
adc
or
push
mov
jg
das
cmp
popa
xor
mov
mov
mov
pushf
jnp
sti
daa
pop
cmpsb
add
ljmp
and
out
sub
repz
lods
cmp
js
scas
sahf
jl
sbb
ret
fs
cwtl
dec
ds
ja
and
or
mov
mov
outsl
jno
shrl
es
mov
pop
loop
inc
std
xchg
mov
sub
ret
rcrb
rol
outsl
inc
xchg
adc
and
add
mov
adc
jne
sahf
xor
pushf
push
push
or
jne
pop
mov
push
das
mov
sarl
lods
rcr
adc
add
stos
inc
or
push
push
xchg
mov
sub
fwait
mov
int
push
repz
daa
inc
pop
pop
insb
andl
inc
lahf
inc
push
sti
data16
cmpsl
sbb
sub
sbb
xor
sahf
xor
and
xor
movsl
sbb
pop
adc
and
movl
cmp
and
cmp
lcall
in
mov
xor
mov
stc
mov
push
push
lods
and
xor
inc
aam
std
loop
inc
leave
and
add
push
fwait
mov
xchg
pop
or
ret
add
shl
es
dec
es
shrl
cmc
mov
aam
dec
mov
mov
pop
sahf
scas
in
leave
nop
inc
sbb
leave
cmpsl
jb
int
leave
adc
jae
inc
pop
aas
nop
push
mov
and
sbb
and
dec
fsts
lea
leave
fistps
add
nop
pop
add
or
push
jmp
fbld
dec
neg
stc
push
jl
and
imul
iret
mov
mov
rorl
push
push
sub
fsubl
test
addr16
cmpsb
arpl
inc
mov
add
gs
jne
or
es
jl
outsl
mov
stos
mov
stc
mov
sub
adc
adc
cmp
jnp
mov
mov
cs
fldenv
jno
dec
sbb
movsl
sbb
mov
xchg
mov
mov
fldl
mov
or
cmc
jge
out
xor
pop
insl
pop
cmc
xchg
mov
aas
insl
jge
idivb
fisubs
pop
sahf
push
ret
pop
scas
leave
fdivp
push
inc
xchg
push
inc
mov
cs
pushf
fs
call
dec
lds
or
pop
inc
pop
sbb
push
cmp
mov
repz
data16
addr16
sbb
add
aad
mov
push
fldl
std
mov
cmp
xchg
jnp
mov
push
lahf
push
pop
sub
adc
sbb
inc
fildl
jnp
fs
jae
ret
adc
mov
pop
cmp
push
adc
dec
dec
jmp
out
les
sub
jp
repnz
lret
mov
push
jp
movsb
cltd
mov
lret
rcl
rolb
inc
adc
in
rcl
push
jo
dec
rcrl
repnz
fstpt
push
mov
lods
ljmp
xchg
sbb
stos
mov
sub
sti
subl
sbb
sub
fdivr
adc
cmp
add
pop
insl
in
into
mov
jb
cmp
cmpsl
xchg
push
sti
mov
add
sbb
shll
or
mov
hlt
mov
xlat
jnp
dec
lret
mov
jp
push
movsl
pop
mov
cmp
and
fsubrs
inc
dec
aam
xchg
mov
mov
int3
cmp
sbb
pop
stos
ljmp
mov
mov
add
jg
ds
pop
jno
imul
push
cmp
loopne
push
and
popf
shrb
stos
mov
out
fstpt
lods
mov
adc
adc
adc
lahf
jecxz
out
or
sbb
pop
pop
stos
into
sub
rcrl
or
loop
je
xchg
insb
aad
or
adc
pop
xor
outsb
push
add
enter
inc
mov
cmp
mov
adc
movsl
jle
les
fisubrl
jl
xor
push
cld
cmpsb
xchg
rol
xor
mov
popf
push
and
je
sbb
mov
scas
out
mov
shlb
int3
sub
cmp
imul
sahf
fldpi
incb
sub
jnp
and
adc
addl
fwait
test
mov
shlb
out
fnstenv
and
mov
pop
das
pop
push
push
addr16
xchg
mov
mov
jp
gs
or
jl
out
repz
mov
lcall
cltd
sbb
jmp
push
cmp
and
sbbl
add
sub
mov
xlat
push
aas
lea
dec
popf
mov
popf
push
dec
iret
jnp
xor
repz
aam
xor
cmc
pop
imulb
push
xchg
pop
jge
xchg
out
push
cs
inc
push
add
xor
data16
sub
aad
shll
dec
loope
ret
fbstp
dec
push
sti
mov
popa
sahf
jp
xchg
or
cwtl
mov
in
add
adc
subb
cwtl
jae
mov
dec
fs
aas
sarl
mov
xor
adc
xchg
push
jmp
es
and
in
xor
mov
pop
jge
pop
icebp
out
ficomps
mov
dec
dec
stos
inc
mov
add
cld
push
cmp
rolb
ja
dec
jne
sbb
dec
mov
xor
jb
sti
add
inc
lods
pop
decl
jge
loopne
out
call
cmc
rcrb
add
xor
xchg
sub
shll
sub
inc
cli
dec
mov
adc
aad
pop
xor
add
cmp
xchg
pop
and
mov
and
pushf
les
push
or
dec
mov
push
dec
movsl
sub
pop
outsl
cmp
mov
out
fdivl
aaa
mov
mov
outsl
shrb
jmp
stos
in
ror
inc
jae
and
mov
popa
lods
xchg
cmp
fwait
cmpsb
cmp
jmp
aas
pusha
lahf
lock
out
lods
cmp
scas
pop
or
test
unpcklps
xor
into
sbb
jecxz
pusha
xlat
popf
and
rcrb
mov
dec
cmp
or
cld
ret
xchg
call
mov
sbb
push
out
shr
rol
inc
scas
loop
or
loopne
sti
insl
aam
fs
shlb
adc
movl
mov
in
loopne
in
inc
imul
and
js
stc
mov
ficompl
mov
insl
jp
ret
fists
std
inc
jne
xor
aam
cmpl
stos
adc
or
jb
mov
mov
push
cltd
dec
mov
mov
xor
xor
or
out
cmp
sbb
cmpl
scas
fst
rcrb
hlt
push
out
add
sahf
lahf
xchg
jne
cwtl
xlat
test
call
jge
mov
dec
loope
push
sub
cmpb
and
inc
inc
arpl
js
mov
jl
outsl
dec
cmp
mov
pop
xchg
mov
jbe
imul
and
mov
push
fstl
neg
cmpsb
push
inc
cwtl
adc
fisubrs
ds
lods
in
xor
or
leave
adc
pop
mov
test
xlat
cmp
xlat
movsl
lds
jno
mov
adc
cmc
xchg
add
jg
mov
pop
mov
incl
mov
test
xchg
push
cmc
sub
outsl
rclb
sbbl
cmp
orl
ss
enter
decl
fcmove
inc
stos
lahf
frstor
out
cmp
sahf
cmp
dec
arpl
and
xchg
daa
mov
push
out
push
sbb
movsl
xchg
lea
testl
sbb
pop
jns
push
std
hlt
mov
or
int3
xor
xchg
push
mov
cmp
std
cmpl
or
cli
pushf
pop
cmpl
push
push
sbb
xchg
in
std
xchg
icebp
cmpsb
mov
addr16
arpl
sbb
or
xchg
ja
pop
ja
dec
sbb
addr16
mov
mov
daa
addr16
addr16
cmp
cmp
ds
repz
call
mov
enter
and
test
inc
or
xorb
idivl
mov
cld
ja
sub
out
adc
jecxz
xor
outsl
insl
mov
scas
loopne
and
mov
xor
rcrl
int
and
mov
in
cld
cmp
sbb
test
xlat
pop
cld
leave
push
popf
mov
or
mov
fnstenv
ficompl
push
iret
bound
fwait
pop
push
add
push
cwtl
xchg
imul
or
mov
and
dec
adc
je
imul
or
dec
fldenv
cli
adc
aaa
add
jl
jnp
cli
rcrl
jp
or
test
mov
repz
aas
dec
xchg
sub
cmpsl
cmp
enter
xor
mov
dec
int
iret
mov
cmpsb
jge
rcrl
inc
movsl
add
jg
jecxz
fsub
ss
jmp
xorl
inc
sbb
xchg
mov
fwait
ljmp
xchg
int
test
out
inc
pop
test
mov
jae
negl
fwait
sbb
cmp
sbb
addb
hlt
int
pop
dec
lahf
push
xchg
pop
loopne
hlt
cmp
add
xchg
ja
cmc
addr16
or
xor
fwait
scas
les
xchg
mov
test
sbb
cwtl
adc
xchg
pop
ljmp
cmp
movsl
sbb
push
mov
lret
aaa
push
pop
rcrl
hlt
add
sbb
cmp
mov
jae
sub
stos
pop
push
adc
aaa
mov
cmp
inc
jmp
dec
sbb
out
push
mov
sub
sub
push
jae
xchg
pushf
jno
rcrl
and
and
adc
sti
inc
rcrl
and
cmp
xchg
jnp
and
pop
adc
loop
ret
pop
push
fdivr
and
stc
je
mov
push
ds
stc
repnz
sbb
fwait
sub
fucom
mov
jecxz
pop
mov
adc
sub
mov
mov
fucomi
lods
std
cwtl
sub
mov
fimuls
push
inc
push
leave
and
incb
fs
cltd
adc
pop
loopne
inc
mov
fidivs
test
push
mov
sub
lock
or
es
lods
inc
push
dec
mulb
out
cwtl
mov
rcrl
cli
mov
cmpsb
mov
jne
cmp
sbb
fdivrs
jmp
insb
jo
aas
aaa
push
hlt
mov
lret
push
and
adc
insb
inc
push
insb
subl
push
scas
xor
aas
pop
aaa
repz
test
stos
enter
lret
xchg
xor
lret
xlat
push
xchg
loopne
lds
add
or
scas
int
daa
sbb
cmp
sbb
je
in
mov
dec
push
jmp
ljmp
xchg
insb
jle
ret
aad
dec
in
sbb
imul
popa
sub
xchg
arpl
xchg
sub
jo
adc
sub
iret
out
pop
cmc
and
les
xchg
test
lret
dec
jecxz
mov
mov
xor
insl
int3
and
outsl
stos
mov
decb
mov
and
push
or
aad
or
mov
sbbl
repnz
insb
cmp
jle
sbb
and
dec
mov
aad
leave
dec
cld
jnp
sbb
jecxz
stc
mov
jge
clc
incb
inc
pop
icebp
and
jmp
nop
push
ret
lock
xlat
test
adc
add
lods
movsl
lock
push
ljmp
jno
sub
imul
dec
lret
lret
in
add
es
out
inc
cmp
jp
sub
xchg
push
sub
jg
shlb
out
hlt
pop
es
xor
hlt
mov
ret
xchg
ljmp
add
fwait
push
add
add
sbb
mov
aas
fs
leave
aad
mov
sti
into
ror
bound
jbe
fs
jmp
iret
mov
xchg
jg
xchg
inc
popf
into
jo
xchg
outsb
ficomps
bound
aad
mull
sub
pop
adc
ret
xorl
fdivrs
rcl
pop
ret
add
adc
jae
ss
mov
mov
mov
in
subl
sub
mov
mov
xchg
sub
jns
xor
xchg
divl
and
dec
xor
jl
cmc
aaa
add
inc
mov
daa
js
fcoml
psubq
frstor
dec
pop
scas
shlb
dec
mov
frstor
jle
aaa
repnz
or
mov
xlat
and
test
in
pusha
sahf
jp
movl
stos
dec
fwait
mov
dec
sbb
add
inc
mov
jg
in
test
pop
and
sub
in
or
jnp
lock
inc
xchg
cmp
xlat
aad
adc
sub
ret
imul
dec
pop
roll
mov
adc
jmp
mov
popf
mov
popf
jae
mov
daa
push
inc
jne
test
mov
fimull
aaa
into
push
test
aam
xor
addr16
and
adcl
dec
pop
repz
cmp
aam
jae
shlb
pop
sbb
dec
leave
gs
push
fisttpl
mov
ret
xchg
inc
out
bnd
call
mov
push
mov
dec
xchg
push
inc
rcrl
cmpsb
andb
mov
cmpsl
or
sti
push
push
or
loope
jb
adc
push
mov
or
adc
daa
push
loope
dec
fwait
test
xor
inc
frstor
cmc
mov
jmp
add
jo
repnz
mov
sub
push
add
mov
sbb
leave
fwait
sub
push
adc
mov
pop
rclb
mov
adc
push
js
cmpsl
aam
pop
test
mov
js
mov
vunpckhpd
je
das
mov
dec
lods
sbb
lea
fsub
int3
sub
jge
mov
pushf
stc
adc
jnp
ret
pushf
cli
adc
mov
ret
pop
bnd
xchg
call
dec
lret
rcr
test
mov
test
mov
xor
xchg
rorl
dec
lahf
push
arpl
fdivl
orb
inc
out
cmpl
mov
sti
xchg
inc
sbb
jp
mov
add
mov
xor
aam
mov
scas
in
xorl
or
nop
cmp
jb
or
imul
dec
pop
jg
push
cs
cmp
icebp
push
and
les
or
mov
aad
sbb
cmp
outsl
incl
cmpsl
clc
dec
pop
sub
repnz
das
xchg
insl
cld
int
test
or
sahf
cmp
testb
ss
jo
push
call
pop
popf
outsl
push
out
inc
adc
popf
mov
and
pop
adc
or
cmp
aad
sbb
jl
js
lea
out
out
jne
or
sub
push
xorb
sbb
sub
dec
sbb
xor
sub
rorl
adc
or
ja
and
inc
dec
outsl
decb
aas
nop
daa
dec
mov
scas
test
cmc
sbb
push
pop
or
lret
push
out
cmpsb
cli
shlb
loope
mov
mov
adc
xchg
mov
mov
sub
jge
xchg
jae
movsb
dec
dec
leave
xchg
mov
mov
pop
adc
stos
mov
mov
iret
xchg
jl
ret
lock
dec
int3
arpl
ja
lods
mov
int
int
sarl
add
mov
mov
cmp
iret
test
aam
out
mov
and
mov
sbb
loop
xchg
bound
adc
out
add
shrb
mov
cmp
jp
sbb
push
pop
mov
add
or
push
arpl
movsl
bound
aad
lret
shll
jecxz
scas
insl
xor
mov
push
jmp
loope
shr
data16
cwtl
push
cltd
or
jmp
dec
jmp
enter
into
ss
mov
inc
mov
cmpsl
cmp
fsubrs
adc
pop
movsb
push
loopne
add
dec
pop
lcall
fbld
call
xchg
bound
jp
ljmp
fwait
into
and
bnd
jo
test
loop
xor
push
inc
lods
jp
cmp
sbb
or
jl
mov
aam
rolb
orb
jg
sbb
pop
ljmp
cmp
out
cld
fcomi
or
stos
mov
dec
aas
add
push
addl
cmp
or
xchg
push
or
repz
inc
pop
mov
nop
sub
aam
dec
sbb
aaa
hlt
xor
iret
cld
lds
pop
dec
imul
iret
out
mov
jmp
dec
sbb
arpl
popa
push
test
add
ja
inc
xchg
call
imul
sbb
nop
jno
jne
lret
ficoml
imul
pop
adc
xor
adc
inc
pop
stos
les
sahf
lcall
sub
mov
cli
popa
or
gs
pop
je
inc
adc
pop
jl
jns
pop
and
mov
xchg
ja
fdiv
push
into
loope
daa
jmp
mov
jmp
sarb
mov
mov
mov
in
lret
sets
lods
leave
xor
inc
push
popa
enter
out
jbe
mov
pushf
add
hlt
leave
mov
movsl
push
mov
rol
push
mov
jbe
pop
ds
test
scas
mov
mov
pushl
jns
ds
inc
lock
outsb
push
cmp
or
mov
test
mov
clc
in
mov
fildll
into
data16
cmp
mov
insl
mov
or
mov
jnp
xchg
cmc
scas
inc
pop
ja
or
cs
dec
movsb
xor
mov
cs
in
pop
ud1
mov
popf
xchg
outsl
sbb
cmp
xchg
les
jecxz
cltd
push
loopne
movsl
dec
cmovno
lock
loop
xchg
daa
mov
iret
in
mov
pop
and
in
jmp
test
shrb
sbb
sub
in
jg
sub
and
mov
inc
fadds
mov
stos
pushf
fsubr
xor
mov
ret
mov
pop
or
push
mov
in
mov
pop
adc
inc
std
std
mov
pop
repz
add
and
lods
mov
and
adcb
nop
imul
xor
xchg
inc
xchg
dec
cwtl
stos
lds
jg
ss
jne
and
xchg
outsb
fs
sbb
out
ss
fsubl
mov
push
mov
adc
insb
insb
and
add
outsb
jl
fwait
into
fdivrp
mov
and
sbb
dec
add
lcall
pop
sub
arpl
push
outsl
std
push
leave
out
sti
loopne
std
xchg
mov
dec
sbb
cli
jne
or
sysenter
popf
mov
fwait
add
add
sahf
inc
inc
lods
ja
icebp
sti
enter
cltd
push
scas
shll
or
mov
sbb
sbb
dec
add
in
pushf
aad
aad
mov
js
or
fadds
fistl
xchg
inc
mov
leave
cmpsb
adc
inc
ret
mov
fisttps
test
xlat
mov
mov
dec
jle
jl
pushf
dec
push
lret
popf
into
pop
fidivs
cs
fidivrs
push
mov
repnz
cmp
cwtl
stc
addb
lods
out
xchg
and
dec
fstl
mov
fstl
test
pop
jo
iret
push
sub
imul
ret
pop
or
insb
cs
adc
arpl
lret
sbb
mov
adc
and
or
mov
push
mov
inc
ficoms
add
sub
mov
add
jle
in
loop
inc
or
jo
lahf
repnz
xchg
add
push
cmp
decl
and
add
lods
jo
push
lahf
cs
std
mov
iret
ljmp
cmp
mov
dec
push
dec
jg
cli
mov
ficompl
adc
push
mov
pop
dec
and
fbld
ljmp
orb
sbb
xor
sbb
inc
cmp
insb
jmp
push
or
add
incb
inc
fildl
jae
sbb
out
loop
push
inc
decb
sahf
pop
jno
inc
lcall
es
movsb
or
int3
xor
into
and
test
inc
popf
je
cmpsb
inc
fists
int
cwtl
mov
cmpsl
hlt
repz
sbb
insb
daa
xor
das
and
cmp
lods
cli
cmp
xchg
movb
dec
cmp
push
fisubrl
imul
aaa
movups
pop
pop
push
movsb
sbb
lret
mov
sbb
cmpsl
or
in
jns
cmp
mov
fstps
cld
andl
xchg
add
or
or
test
imulb
scas
xchg
adc
inc
pusha
ljmp
sahf
lods
dec
adc
fldl
lcall
shrl
or
in
mov
mov
fldl
jle
dec
jae
dec
xlat
movsb
or
enter
sub
mov
mov
push
xchg
fstpt
sti
xchg
inc
or
jmp
lock
popa
roll
hlt
mov
pushf
cld
nop
shrb
adc
loop
mov
or
shll
insb
cmp
xchg
std
mov
cmp
inc
call
xor
mov
sbb
es
fs
fisttps
sarl
aas
jecxz
dec
mov
sub
dec
mov
shrb
lret
nop
addr16
or
xor
frstor
fldl
xchg
stos
test
pop
dec
loop
ja
cmpsl
ljmp
xchg
cmpsb
add
stos
test
and
mov
sahf
inc
test
adc
mov
mov
adc
xchg
cmp
pusha
test
cld
xchg
mov
sbb
cltd
shlb
enter
dec
mov
int
adc
lcall
in
pop
ror
cmp
and
dec
dec
cmp
adc
ret
sub
ja
lods
cld
jnp
mov
jg
xlat
inc
std
mov
leave
xor
inc
data16
mov
jb
test
cmp
mov
jmp
xrelease
lret
push
jb
fbstp
sbb
sarb
mov
jne
push
out
aas
add
movsb
pop
outsl
std
xor
mov
or
imul
incl
loope
mov
pop
stc
lahf
push
mov
and
pop
mov
add
aam
insb
inc
popa
outsl
xor
jmp
divb
and
add
cmp
sbb
pop
jmp
test
aam
xor
add
or
outsb
inc
arpl
sbb
mov
test
xor
cld
pop
push
stos
lock
sbb
mov
push
cmc
mov
stos
pop
repnz
push
cld
lock
adc
clc
pop
add
xor
out
inc
fs
fnstsw
mov
pop
iret
lahf
sbb
adc
mov
xor
push
popf
rcl
xchg
mov
jno
pop
pop
ja
mov
iret
call
xchg
and
xor
sbb
mov
pushw
in
mov
pusha
pushf
popa
cmp
cmp
add
pop
inc
dec
out
lods
mov
mov
push
sti
lcall
mov
sbb
nop
mov
push
pop
cmpsb
mov
push
dec
adc
sub
fidivs
mov
jb
js
mov
lahf
out
inc
popa
in
pusha
fwait
test
les
insb
or
mov
push
jg
arpl
xchg
xchg
jb
into
sbb
js
cld
enter
mov
js
rcll
fcomp
pop
dec
jl
cli
mov
int
or
out
mov
into
xchg
bnd
sbb
push
loop
xchg
mov
loopne
xor
lock
in
mov
xchg
insb
and
ljmp
push
mov
test
mov
in
aad
mov
stos
adc
push
insb
xor
iret
fisttpl
and
fsub
shlb
inc
push
push
lahf
adc
inc
jno
jmp
outsl
xchg
insb
jle
aad
dec
pusha
xchg
push
cs
mov
je
xor
push
mov
imul
push
mov
pop
add
in
adc
or
jl
sub
sbb
rorl
test
pop
pop
out
xchg
mov
call
in
ja
xor
shll
dec
icebp
xchg
out
adc
xchg
fsub
aas
cmp
pusha
std
inc
mov
jnp
sub
dec
fwait
inc
jno
ret
jnp
clc
std
push
or
sub
js
jo
sub
xlat
pop
in
mov
clc
adc
sbb
cs
jnp
xchg
push
test
loope
mov
mov
push
jae
or
cmpsl
leave
clc
sahf
shl
xor
cli
pop
jb
jbe
mov
pop
add
jle
gs
nop
das
lock
aaa
inc
inc
repnz
lret
cmpsl
sub
dec
aad
cmc
pop
xchg
rclb
mov
ret
pop
mov
hlt
or
xor
clc
cmp
xor
dec
lret
xor
scas
inc
xlat
loop
popa
aad
mov
add
cltd
lds
push
dec
mov
inc
rorl
xor
inc
sti
jge
and
adc
jae
or
cs
lret
dec
in
fadds
shr
sbb
xlat
xor
jecxz
xorb
mov
adc
sbb
sub
fmull
mov
notl
add
xchg
rolb
or
inc
mov
lcall
sub
and
dec
push
ljmp
jno
fmuls
mov
mov
mov
pop
mov
lds
mov
fnstenv
js
inc
fisttpl
sti
adc
sub
or
rcrb
pop
dec
mov
xor
push
jb
xor
pusha
sbb
jle
push
inc
fistpl
int3
lret
push
cmp
mov
xor
adcl
ret
xchg
out
and
cld
inc
mov
or
push
lods
jle
arpl
mov
mov
xchg
jno
and
hlt
cmp
and
adc
mov
rolb
pop
mov
into
pop
insb
add
movsb
daa
js
mov
cmp
cltd
std
mov
push
pop
mov
in
or
and
lods
shlb
dec
leave
mov
mov
cmp
pop
mov
add
mov
out
jno
lret
fidivs
jecxz
inc
fildll
pop
add
movsl
gs
mov
test
dec
cwtl
scas
ss
imul
xor
xor
rcrb
test
out
popf
or
pop
mov
sahf
test
push
dec
xlat
cmpsb
leave
js
cmp
psllq
push
call
ret
mov
sbb
push
jno
stc
and
inc
xchg
or
mov
pop
jno
test
aas
push
outsl
je
pop
and
mov
int3
xor
pop
push
repz
push
pusha
mov
insb
into
iret
dec
sub
jnp
xchg
pop
dec
mov
add
inc
mov
cltd
sub
push
lods
fwait
xor
pop
or
addr16
mov
or
loop
cmpsl
push
inc
sub
mov
mov
push
sarl
or
jle
and
addb
xchg
aam
pop
cmp
sub
ljmp
mov
jbe
cmpsl
subl
sub
movsb
cs
xor
lret
push
dec
out
lret
xchg
iret
idivl
dec
sub
repz
jle
fidivl
outsl
scas
std
push
pop
nop
jecxz
dec
repnz
and
mov
sub
arpl
xor
arpl
jmp
xchg
pop
divl
mov
and
fwait
pop
push
loope
stc
xchg
ss
sbb
cli
divl
into
call
loope
js
xchg
dec
mov
pop
psllq
pop
les
xchg
jmp
addr16
lea
mov
mov
sub
cwtl
mov
jne
test
mov
sub
rclb
dec
or
sub
and
lds
es
in
inc
lods
xor
fsubrs
inc
dec
xchg
outsl
cli
jle
ret
mov
fdivl
add
xor
sbb
cmpsl
ds
les
pop
in
arpl
fcmovne
fcoml
sub
pop
subl
icebp
dec
push
repnz
pop
or
andl
insl
in
sahf
xchg
add
stos
mov
frstor
negl
dec
push
and
imul
mov
aad
xchg
mov
cmc
mov
mov
adc
inc
cltd
fidivl
push
jnp
xchg
orb
pushf
or
inc
sub
and
mov
fidivs
push
mov
lea
popa
cmp
lret
in
repz
rolb
xchg
pop
add
into
rcr
push
je
hlt
push
lcall
jne
arpl
mov
mov
int
cld
bound
push
xchg
mov
push
mov
pop
mov
outsl
jmp
into
xor
and
mov
add
mov
leave
jecxz
cmp
xor
or
mov
mov
jo
in
inc
ret
cmpsl
jnp
fstps
xchg
out
cld
fdivs
je
out
and
push
dec
addl
das
clc
fists
and
jg
stos
int3
gs
xchg
dec
push
push
enter
mov
test
xor
shll
push
inc
fs
adc
aam
or
mov
je
cmp
mov
sub
mov
sbb
sub
out
pop
or
cltd
sub
adc
mov
rorl
dec
inc
data16
ficompl
fidivrl
add
jecxz
push
pop
nop
push
xchg
mov
fdivs
test
cmp
mov
jmp
or
bound
repnz
lea
mov
lods
xor
push
mov
neg
sbb
xchg
mov
push
je
arpl
mov
icebp
sbbb
int
mov
push
sbbl
adc
xor
mov
out
sub
inc
pop
lcall
and
push
lock
fistps
and
stos
push
cs
insb
iret
mov
and
repz
lret
or
sbb
popa
jae
ds
call
sbb
push
jmp
shl
mov
scas
mov
jno
bound
movsb
jl
inc
sahf
sub
mull
stc
fldcw
fdivp
dec
into
arpl
jmp
xchg
js
xor
cld
jl
mov
add
lahf
aas
xchg
cmp
in
and
mov
es
mov
or
popf
push
inc
aam
out
leave
jmp
push
mov
pop
sub
test
sbb
mov
or
mov
mov
ljmp
add
mov
les
fmul
in
rcr
repnz
xchg
insb
fdiv
xor
sbb
mov
mov
out
add
dec
lods
shll
mov
dec
mov
clc
loopne
std
push
cmp
sub
outsl
sbb
int3
sbb
xchg
fsub
jmp
push
jns
xor
jge
rcrl
xchg
push
incb
lods
ja
jns
fstps
sti
push
jp
aaa
pop
push
movsl
push
test
iret
data16
mov
inc
or
cli
cwtl
jae
cmc
lds
mov
sub
popf
or
cmp
inc
push
cwtl
das
inc
pop
movsb
cmp
push
jg
inc
push
pop
icebp
inc
adc
pop
repnz
lods
mov
mov
and
add
aaa
dec
subl
fcmovu
sub
rcll
xchg
xchg
jecxz
pop
cmp
mov
cmpsl
pop
in
xchg
movsb
cmp
pause
jnp
add
fdivrl
in
aas
jp
dec
xchg
jp
push
xorl
test
lret
lcall
xchg
mov
fnstsw
push
push
add
mov
pop
sti
mov
iret
fcompl
jg
mov
xchg
jl
adc
cmpsl
push
lret
inc
xchg
push
insl
ret
lret
sub
sti
push
jg
lcall
xchg
clc
cmp
loop
or
fbld
ret
jbe
mov
lret
fmull
sub
push
fcmovnu
out
les
bound
fdivrl
push
mov
sbb
in
and
outsl
pop
ret
mov
loopne
add
mov
mov
dec
sbb
dec
cli
or
movsl
jg
and
ret
cli
and
mov
pop
fists
add
scas
cmpsb
daa
loop
pop
jle
dec
scas
jno
inc
aas
dec
aam
mov
mov
rcl
add
xchg
ret
or
rorb
shll
adc
adc
in
cmp
sub
shll
incb
fwait
fs
int3
and
aaa
mov
push
scas
jne
or
mov
pop
xor
ja
xor
push
and
sub
insb
sbbb
mov
mov
sub
pop
mov
xor
jnp
jge
mov
pop
pushl
cs
cmp
mov
dec
mov
mov
pop
popa
add
repnz
pop
push
lret
xchg
ja
call
enter
xchg
pop
je
cmp
scas
push
cmp
xchg
rcrl
pop
xor
movsb
xor
mov
jnp
cmc
and
mov
sub
test
rolb
int
and
es
into
loopne
pushf
jg
sbb
loop
and
shlb
fiaddl
xorb
pop
jno
adc
call
mov
inc
and
dec
push
and
daa
addb
pop
sbb
add
aam
sti
les
and
inc
mov
sbb
adc
mov
adc
gs
es
cmp
jno
mov
pop
or
icebp
mov
push
dec
and
out
enter
jp
mov
jle
xchg
scas
lea
jecxz
dec
sbb
dec
rolb
push
xor
shl
es
es
jle
push
xchg
inc
push
add
out
fcmovu
xor
mov
test
pop
bound
dec
jne
arpl
add
arpl
xchg
sub
cmp
cmp
enter
ret
lret
lods
int
lea
cmp
push
inc
xchg
dec
out
sub
inc
int
je
stos
adc
and
jge
lods
xor
mov
int3
pusha
lret
and
call
mov
fwait
push
cmp
into
negb
imulb
fistpl
nop
repnz
stos
fcmovnu
inc
xor
in
push
cmp
adc
add
cs
push
adc
daa
mov
stc
adc
shll
es
dec
stc
adc
push
adc
dec
pop
bound
push
mov
mov
push
mov
sbb
enter
inc
mov
out
loope
ret
cld
jne
pop
call
jno
push
jecxz
ljmp
mov
sahf
cltd
sub
jp
sbb
out
out
rcll
add
fcmovne
add
jl
adc
cmp
adc
and
mov
mov
push
clc
stc
popf
cmp
rcrb
loop
xchg
pop
rorl
rol
std
lds
xor
ret
or
push
aaa
mov
and
sub
push
inc
fcoms
mov
cmp
sbb
aam
jae
shlb
fdivrs
loope
enter
ds
in
sub
ljmp
insl
inc
test
xchg
insl
lret
data16
cld
pop
jg
nop
cltd
orl
inc
cwtl
das
jg
sti
pop
pop
and
je
popf
fmuls
insb
add
mov
pop
loop
loop
jbe
or
pop
jo
dec
test
orb
jl
push
test
adc
cmp
jno
bound
or
dec
mov
enter
sarb
bound
jb
sbb
js
js
decb
adc
jl
lock
fmull
movups
xchg
add
sbb
add
test
xlat
int3
lret
test
add
cmp
dec
dec
ret
in
gs
fwait
in
shl
inc
test
les
and
rcl
inc
loopne
vdivss
es
cwtl
rcll
jle
shrb
xchg
inc
stc
push
pop
mov
int3
mov
add
push
jae
data16
add
push
nop
mov
repnz
ja
push
cs
sahf
out
pop
std
push
fsts
add
int3
das
jle
mov
cwtl
enter
push
pop
bnd
xchg
xor
mov
data16
pop
jmp
insl
mov
jns
mov
xchg
xor
push
dec
pop
ficompl
movsl
inc
outsb
in
push
pop
dec
dec
dec
mov
fsubrs
push
and
xchg
jno
add
scas
pusha
test
push
inc
sub
cmp
inc
movsb
adc
das
sbb
sub
or
mov
sbb
test
sbb
loopne
xchg
pop
loopne
or
inc
pop
repnz
add
xor
xlat
daa
aas
cltd
jbe
inc
pop
pop
loopne
adc
hlt
cmc
mov
sbb
sub
repz
scas
sub
repnz
inc
enter
sub
mov
mov
dec
bound
add
sti
push
loop
push
dec
shlb
mov
cmovbe
push
xor
jns
aad
xlat
ret
lods
dec
push
inc
sbb
and
pop
pop
adc
icebp
xchg
sbb
loope
cmp
ljmp
mov
rcr
xor
pushf
notb
daa
mov
dec
stc
or
mov
push
cld
cmp
mov
mov
push
out
mov
ljmp
pushf
xor
mov
in
cmp
fidivs
pop
add
ds
push
daa
and
cmp
inc
enter
nop
jne
push
cmp
out
in
outsb
mov
shrb
xor
inc
stc
popf
out
stc
and
stc
jp
inc
mov
mov
cmp
stos
or
mov
push
xor
jmp
dec
adc
xor
fs
add
rclb
xchg
out
test
mov
jb
inc
add
fstpt
pop
add
inc
push
mov
fdivr
imul
mov
ds
adc
lds
add
add
mov
add
sub
fcompl
and
bswap
andl
bound
nop
ret
adc
jp
push
icebp
dec
jg
pop
fmul
adcl
cmpsb
push
pop
data16
movsl
ds
dec
mov
jns
xchg
lods
lret
les
repnz
cmpb
sub
faddp
iret
push
bound
cmpsl
lret
jecxz
add
inc
icebp
jne
mov
adc
sbb
mov
jle
fisubrl
push
mov
add
mov
je
insl
push
fdivrl
cmp
shrl
dec
movsl
jecxz
pusha
test
fisubrs
test
cmp
in
pop
dec
popa
cli
js
push
inc
cmp
push
fcoml
xor
jle
das
test
sub
subl
jg
cmc
fisubl
mov
mov
test
test
mov
sub
adc
flds
jmp
fwait
sub
and
adc
xor
dec
and
jl
cmp
xchg
pop
add
bound
scas
dec
orl
pop
sti
sub
inc
push
xlat
insl
cmp
or
ficoms
xor
mov
add
and
cmp
push
jae
inc
inc
sti
mov
insl
sub
sbb
popf
pushf
push
int3
lods
jmp
lock
pop
or
pushf
cmp
aad
add
cmp
mov
jge
mov
pop
lret
xor
push
xor
jmp
stos
imull
mov
cmp
mov
pop
les
xor
and
push
pop
mov
pop
lahf
fsubp
jge
cmp
add
outsl
mov
push
enter
fmull
stos
arpl
pusha
insb
mov
mov
and
xor
incl
shll
cmp
lret
das
mov
aad
bound
xchg
and
out
push
sub
mov
sbb
icebp
mov
xchg
cmp
rcll
jge
pushf
mov
mov
xchg
xor
jg
je
cmp
xor
or
test
cwtl
xor
xchg
jge
aas
jl
aam
popa
xchg
xchg
adc
ss
mov
std
mov
ljmp
inc
mov
adc
inc
add
xchg
pop
pop
jmp
and
jo
pop
pop
jg
mov
shrb
sub
mov
test
dec
add
ds
cmpsl
push
pop
inc
sbb
fsubp
jns
sub
fwait
mov
int
xor
aas
rclb
add
or
push
jns
mov
popa
insb
mov
dec
or
in
mov
inc
xchg
lahf
or
in
repz
lods
or
cmp
mov
mov
scas
aad
lea
fcoml
rcr
repnz
pop
aaa
arpl
or
andb
lret
rcl
jb
stos
rcl
push
test
lret
andl
and
das
cmp
jb
add
xor
out
js
mov
imul
shll
popf
es
xor
std
inc
pusha
stos
mov
mov
adc
ret
lahf
lods
aad
rol
xchg
jecxz
in
cmp
test
adc
inc
or
and
data16
aam
into
enter
push
mov
pop
in
adc
test
jno
outsb
loopne
and
cmp
lods
pusha
es
add
es
sbb
movsl
lret
clc
out
jmp
pop
sti
cmovbe
movsb
inc
mov
push
out
sub
or
sbb
dec
dec
push
mov
pushf
fs
lds
and
jnp
mov
push
mov
aad
lcall
sbb
lock
jge
mov
sub
cmp
lcall
in
andb
or
mov
rol
nop
pop
hlt
pop
mov
rcr
push
add
push
or
fsubp
ljmpw
lods
sub
sbb
xchg
sbb
add
out
es
daa
outsl
aad
xlat
outsl
sub
cmp
sti
push
data16
es
sub
out
dec
pop
popa
fwait
xor
push
or
xchg
mov
inc
stos
inc
xor
xchg
test
push
dec
in
push
mov
mov
jb
adc
mov
and
sbbb
and
jns
mov
push
fnsave
add
sub
movsl
inc
push
popf
jne
in
xchg
lods
and
hlt
adc
sub
int
std
shll
mov
inc
pop
shrb
outsb
push
das
ret
roll
sarb
xchg
sbb
cmpsb
arpl
cld
icebp
jl
sahf
lahf
shlb
out
fisubl
jne
daa
mov
sbb
push
cs
insb
jns
movsl
fwait
mov
jns
mov
sub
push
inc
mov
push
sbb
test
jbe
pop
jecxz
es
mov
lods
cmp
add
daa
pop
inc
push
rorl
bound
stos
lds
mov
sti
dec
cltd
push
idivb
dec
cli
popl
es
leave
or
push
add
mov
fs
movsb
mov
mov
push
sarl
mov
leave
lret
rorl
jmp
jo
sub
fxch
lds
das
clc
scas
scas
jmp
sbb
adc
jno
adc
push
push
fwait
and
xchg
ss
lea
push
mov
xchg
push
aad
out
mov
pushf
mov
and
mov
jo
imul
push
inc
fimuls
andl
pusha
addr16
lods
jge
cld
xchg
aam
push
inc
jne
and
sub
inc
int3
test
mov
inc
mov
lds
mov
in
enter
lea
mov
bound
push
aas
mov
jge
mov
in
lcall
mov
sbb
pop
into
push
mov
push
inc
mov
icebp
rcl
adc
jp
push
mov
addr16
lods
pop
pop
js
aas
lock
fs
inc
scas
mov
rorl
adc
aad
fidivs
or
sti
sahf
dec
dec
pushf
jecxz
mov
cmp
sub
and
adc
pop
mov
jbe
incl
pop
inc
stos
mov
fsubl
out
jnp
fcmovb
inc
ljmp
lods
fwait
sbb
sahf
sbb
jle
pop
in
int
xor
xor
les
xchg
adc
add
pop
adc
shlb
and
sti
in
in
push
ret
les
push
pop
jae
sbb
jp
jne
mov
and
fstps
mov
adc
jp
xor
xchg
xor
out
xchg
call
dec
cmp
test
decl
jns
das
out
push
outsl
leave
push
aaa
mov
repz
add
dec
push
int
push
mov
or
outsl
and
std
jbe
in
mov
add
jae
fstl
cli
notb
xor
lahf
idivl
fs
xchg
cwtl
cmpsb
fwait
je
mov
std
test
mov
insb
sub
aaa
dec
cmp
xor
lret
add
push
sub
pop
cmp
data16
into
sti
mov
and
add
mov
mov
in
sbb
dec
xor
loopne
xchg
jp
push
xor
cltd
popa
add
fcompl
jne
lock
cmp
jo
mov
lods
bound
xchg
mov
mov
pushf
pop
fistpll
sti
popl
ds
push
mov
fistpll
xchg
daa
ljmp
push
int3
fisttps
xchg
mov
daa
or
stos
pop
aaa
xchg
sahf
sbb
mov
pop
and
mov
pop
cmpsb
jae
lds
xchg
stc
jns
pop
test
mov
pop
lret
ret
icebp
cmp
leave
es
and
or
dec
jl
mov
mov
pusha
jle
xlat
sbb
and
push
lock
fsubr
mov
ljmp
lret
fsubp
imul
je
xchg
bound
inc
lret
mov
nop
bnd
shrb
mov
mov
or
pop
test
jmp
std
and
or
jns
pushf
mov
sub
mov
push
dec
aaa
mov
dec
xchg
test
fs
jno
mov
pusha
mov
xor
js
push
lods
cmpsl
xchg
sbb
loop
xor
scas
popa
inc
stos
jmp
enter
mov
cld
jmp
ja
sahf
sub
fcomip
add
les
test
popa
rorl
imul
mov
pop
into
pop
dec
rclb
popa
jno
sbb
clc
jae
mov
add
out
xor
xchg
scas
sub
mov
sub
out
test
push
fidivs
popa
cltd
jl
stos
cld
rcr
sub
addr16
push
js
daa
push
scas
jmp
rclb
in
rolb
std
lcall
dec
std
adc
mov
addr16
jecxz
cmc
and
push
inc
cmp
imull
fadds
in
lahf
add
jg
jp
inc
inc
dec
or
call
test
xchg
loope
scas
push
test
sbb
xchg
xchg
cmp
pop
lods
cmp
les
pop
loopne
add
xor
xchg
add
negb
jle
jo
rcrb
add
pop
test
jl
mov
mov
cltd
xchg
xor
dec
and
cltd
cmpsl
cwtl
adc
mov
push
lret
aam
pusha
inc
and
adcb
ss
add
insl
adc
and
arpl
jne
sub
sub
dec
dec
and
out
mov
mov
cmc
sti
jne
mov
mov
sahf
or
pop
add
inc
lock
test
mov
mov
dec
mov
lret
rol
je
mov
sub
pop
push
in
dec
mov
sti
adc
sbb
push
push
shlb
or
mov
mov
mov
scas
inc
mov
outsl
and
xchg
data16
push
dec
rclb
pop
mov
cmpsl
xor
mov
mov
daa
jns
xchg
loopne
mov
cmp
push
popf
sbb
stos
push
mov
mov
mov
sbb
inc
das
aaa
push
or
sbb
push
out
les
mov
and
mov
inc
iret
xor
pop
icebp
subl
pop
dec
add
jg
loop
inc
shlb
mov
mov
mov
js
aam
std
pop
inc
mov
and
fdivl
add
push
stos
call
xchg
sub
cmp
repz
pushf
xor
loop
mov
mov
test
ret
std
fidivs
fildl
cltd
lret
inc
inc
sub
sub
addl
cli
in
mov
lds
popa
shll
cmc
cmp
pop
rcr
mov
shrb
sbb
mov
fdivs
loop
adc
stos
hlt
negl
fisubs
clc
mov
stos
stc
adc
dec
adc
lret
cmp
mov
arpl
mov
orb
push
or
cmp
push
inc
shl
jne
cmp
sbb
sbb
mov
xchg
mov
in
xor
add
or
adc
inc
xchg
pop
das
addr16
push
mov
pusha
sbb
push
cmc
or
jo
jl
and
xorl
jnp
mov
mov
sub
xchg
mov
mov
or
jo
mov
xchg
jge
jecxz
sbb
nop
lea
cmpsb
sub
add
repnz
daa
cmp
jne
pop
ljmp
icebp
mov
inc
cmp
je
por
mov
jle
xchg
popl
cmp
jg
mov
in
push
int
ja
and
adc
ret
es
fsubr
rolb
push
shrb
arpl
pop
sti
cmp
clc
adc
xor
les
fadd
rorl
sbb
addr16
outsb
mull
nop
xchg
repnz
lods
mov
xchg
mov
cltd
das
js
pop
push
insl
adc
xchg
cld
cld
lret
add
jo
inc
insl
inc
dec
lods
mov
xchg
and
push
inc
fdivrl
shrb
aad
cli
enter
mov
mov
xchg
fs
inc
pop
jge
pop
jno
jmp
push
lock
data16
adc
nop
les
in
fwait
adc
sub
push
je
dec
ja
inc
icebp
fbstp
xor
iret
pop
fidivl
sbbl
xor
dec
add
xchg
ficoms
lock
int3
and
je
jmp
les
xor
mov
lret
icebp
mov
pop
add
xor
add
test
rcrl
add
push
push
mov
pushf
in
inc
ficoml
out
sbb
dec
xchg
mov
sub
inc
div
movsb
pop
in
dec
les
xchg
ret
clc
test
lods
adc
cmp
imul
es
negb
inc
pushf
sbb
mov
hlt
ret
cli
xchg
pop
fnsave
xchg
scas
sub
cmp
mov
add
sbbl
fwait
rorb
in
dec
mov
pop
dec
jno
clc
sub
push
pushf
pop
lods
ljmp
ja
xor
pop
xor
ljmp
ja
push
sub
mov
aad
jmp
pop
dec
xchg
outsb
mov
loopne
frstor
insb
cmp
inc
push
adc
stc
mov
add
les
call
ret
jg
cld
and
jl
movsl
mov
scas
dec
jo
mov
sub
inc
pusha
sub
outsl
jmp
cmp
andb
ss
movsb
inc
incl
pop
nop
syscall
mov
imul
push
je
push
mov
and
cs
mov
push
std
nop
andb
pop
mov
call
gs
mov
pop
xchg
lahf
in
sub
pop
or
fists
lret
cmpsb
into
cs
mov
incl
das
imul
popf
lds
xchg
add
in
sahf
push
sub
cmp
lea
jne
add
adc
les
push
mov
cli
test
ljmp
jbe
mov
sbb
mov
daa
mov
push
lea
jno
pop
aas
or
outsb
inc
inc
loopne
arpl
xchg
sti
mov
or
dec
mov
or
push
mov
les
cmp
cmp
loop
in
mov
scas
test
sbb
inc
xchg
rcrb
sub
loope
xchg
std
cmp
leave
stos
jecxz
xchg
mov
fcoms
push
sub
cld
xchg
dec
lcall
mov
repnz
imul
gs
mov
fistl
addb
jne
sub
das
and
jge
aaa
into
xchg
cmp
jb
sahf
push
sub
fsts
in
loopne
pop
jge,pn
aam
decl
pop
in
adc
aad
outsb
not
push
xor
sahf
cmc
mov
cmp
call
cmc
pop
xor
stos
negl
push
jns
xchg
icebp
inc
sub
repz
out
push
mov
test
rclb
push
fnstenv
ficoms
adc
dec
push
cmp
mov
mov
sbb
dec
or
test
add
push
pushf
cli
push
fldt
dec
sti
lea
das
cld
or
mov
or
sub
aad
pop
lcall
inc
or
xchg
push
push
in
mov
cmp
rorl
in
iret
daa
and
int
sub
ret
sti
xchg
jp
lods
dec
lds
mov
mov
jge,pt
or
mov
mov
jg
pop
pusha
cmp
popa
cld
ljmp
push
lods
mov
lcall
jge
adc
cmp
and
and
pop
push
inc
jp
mov
outsb
cmpsb
inc
dec
push
out
je
aam
sahf
lods
jg
fdivrp
jmp
push
jl
icebp
test
js
popf
pop
jp
push
popf
jmp
mov
in
xlat
outsb
fidivs
mov
ds
aas
icebp
and
push
push
out
sti
inc
jb
popa
test
inc
mov
sub
std
sub
adc
fisubs
jp
jbe
pop
xor
je
mov
mov
cli
add
movsb
int
aad
cmp
imull
andb
mov
sub
fwait
or
xchg
test
lahf
ss
push
call
repz
dec
cli
ret
cmpsb
sub
sbb
ret
dec
ret
pop
push
popf
pop
sbb
pop
in
call
aad
into
nop
mov
loopne
cmp
sqrtps
test
movl
imul
xchg
sbb
sarb
pusha
mov
mov
adcb
lahf
pop
movsl
pop
xor
inc
push
lock
xor
add
jg
adcl
pusha
sub
daa
ja
idivb
out
mov
push
daa
in
movsb
lock
add
xchg
out
pushf
dec
repz
negl
addl
mov
inc
popa
andl
xchg
mov
hlt
or
pop
jae
push
mov
int
mov
div
or
aaa
pop
loopne
outsl
push
outsl
xchg
inc
cmpsb
lock
das
jnp
or
je
mov
pop
mov
test
xchg
data16
lcall
test
sub
pop
xor
xor
movsb
loop
xorps
enter
ds
mov
ffreep
cmp
scas
mov
sbb
inc
push
fisubs
mov
and
loope
xor
push
add
mulb
push
mov
sbb
fmull
mov
or
cmpsl
ds
mov
cmp
inc
cmp
aas
test
insl
jge
pop
mov
ljmp
jge
cli
mov
addr16
retw
test
in
je
cmp
push
push
mov
mov
popa
loope
test
outsb
jl
mov
inc
lcall
iret
aaa
jne
xchg
push
mov
out
insl
jnp
sub
leave
dec
roll
push
add
pop
int
mov
bound
cmp
mov
call
or
push
rolb
cld
sarl
aas
lods
test
aaa
ss
sub
fisubrs
imul
das
sarb
sbbl
pop
pusha
loopne
push
pop
mov
add
dec
dec
pushf
and
movsb
cmp
js
mov
mov
cli
mov
fwait
sub
push
iret
lret
jno
cwtl
pop
or
mov
lds
subb
xor
ret
addb
outsl
pop
adc
addr16
out
adc
jno
dec
xchg
cwtl
sub
cltd
out
mov
xor
loope
xchg
sti
inc
fwait
ljmp
decl
mov
stos
pop
fdivrs
pop
je
adc
mov
sub
pop
jb
lahf
rol
rorl
xchg
frstor
clc
jle
je
push
insb
and
xor
bound
arpl
mov
fwait
mov
roll
ss
cli
aad
inc
nop
mov
xor
pop
out
subl
mov
dec
loop
xor
pop
loopne
test
sbb
popa
daa
imul
pop
out
mov
push
push
loopne
push
stc
adc
add
nop
ljmp
jmp
stc
pop
call
jg
xchg
push
pop
icebp
inc
lcall
aad
sub
adc
adc
aad
mov
push
insb
dec
out
cmc
fsubr
sbb
sarb
dec
mov
cli
mov
add
xchg
jmp
and
fstpl
shll
inc
hlt
or
push
in
hlt
dec
or
adc
out
and
or
push
mov
sbb
push
mov
test
jg
neg
test
outsb
dec
lret
fimuls
jae
leave
movsl
xor
adc
add
leave
dec
in
add
and
sahf
stc
scas
mov
and
mov
push
in
xor
popf
inc
mov
mov
testb
ffree
push
jae
jl
mov
add
aaa
cmpsb
aam
popa
call
aas
xchg
pusha
iret
and
popa
cwtl
imul
loop
dec
hlt
adc
and
std
mov
movsb
mov
adc
and
mov
sub
jae
nop
pop
xor
pushf
es
out
dec
xchg
je
mov
mov
cmp
cmp
std
dec
pop
jae
and
cmc
rorl
cmp
bnd
xor
in
pop
sbb
dec
dec
cmp
mov
in
icebp
scas
pop
add
imul
stos
xchg
mov
test
lods
lods
cmp
shrl
dec
out
enter
enter
sbb
outsb
inc
int
dec
jp,pt
int
or
push
xchg
adc
add
xor
adc
pop
mov
hlt
addr16
sub
jecxz
sarb
addr16
pop
jb
cmp
adc
ljmp
stos
sbbb
xchg
add
clc
mov
push
das
cmp
mov
sbb
test
lds
mov
cmp
popa
mov
jmp
sbb
or
xchg
xchg
gs
xchg
hlt
cmp
add
pop
inc
repnz
and
pop
mov
pusha
aad
fsubs
cmpsl
in
mov
push
adc
mov
mov
out
or
fidivl
add
in
daa
ret
ja
jp
cmc
mov
jg
loope
dec
sbb
testl
ss
xor
loopne
sub
cmp
addr16
stc
push
pop
sub
movsb
xchg
lock
out
int3
lret
push
mov
inc
into
enter
inc
push
mov
frstor
jno
scas
jno
mov
rorl
push
pop
es
fistl
xor
or
nop
adc
push
inc
mov
mov
jne
daa
inc
std
xlat
adc
insb
popf
ss
iret
lea
pop
mov
imul
and
add
out
adc
mov
add
ror
bnd
loope
pop
mov
inc
imul
mov
mov
arpl
push
push
adc
mov
ljmp
push
in
das
and
test
jp
shrl
sub
icebp
insl
sub
adcb
xchg
cwtl
inc
pop
fsubrs
out
pop
aam
imulb
push
xchg
scas
scas
jp
lods
fstpl
mov
orb
cmp
out
xor
mov
xchg
decb
cmpsl
mov
xchg
mov
inc
jmp
cmp
psrad
imul
es
bound
mov
add
xor
push
add
sub
nop
push
movsb
and
je
daa
cmp
arpl
das
add
arpl
xchg
imul
pusha
aam
arpl
inc
test
xchg
les
jne
mov
mov
ficomps
mov
cwtl
sbb
and
sbb
xor
ja
push
push
and
cmp
ret
add
hlt
push
hlt
and
xchg
insb
xchg
xchg
mov
cmp
in
push
dec
dec
push
cmp
jbe
ret
test
jns
add
push
loopne
loop
mov
dec
mov
repnz
add
xor
out
adcb
loope
inc
jg
stc
insb
xor
shl
and
jnp
sub
movsl
jae
cmp
js
xchg
int
lock
in
icebp
dec
xchg
dec
les
jecxz
or
inc
jle
hlt
rcrb
add
or
je
push
jnp
adc
cmp
mov
cmp
xor
pusha
loopne
outsl
mov
xchg
or
in
push
shrl
call
or
fdivrl
cmp
pop
xor
into
int
adc
aaa
shll
inc
out
cmpsl
out
pop
mov
xchg
add
pop
testl
pop
sub
sbb
ss
cmp
or
fdivrs
add
add
fs
cmp
xchg
push
push
jge
push
out
sbb
daa
mov
lods
push
push
pop
mov
ret
pop
movsb
pop
nopl
imul
imul
call
psadbw
arpl
subl
roll
jae
and
xor
popa
leave
mov
xor
xor
ja
cld
and
lahf
sbb
bound
inc
push
faddl
pop
cmc
les
add
cld
or
adc
sub
inc
test
jae
push
xlat
ljmp
push
js
or
inc
inc
jge
dec
mov
int
sub
mov
sahf
jecxz
in
pop
mov
cwtl
outsl
pushf
fcmove
enter
ljmp
push
in
add
xchg
stos
and
fmull
and
jb
cltd
add
dec
cli
std
mov
inc
pop
pop
mov
adc
inc
rclb
das
hlt
xor
ljmp
lret
jns
and
xchg
jbe
adc
ja
adc
jbe
mov
xchg
sub
pop
mov
or
in
test
out
push
sbb
lea
sub
sbb
arpl
jb
sub
sahf
sub
js
shrb
repnz
dec
in
addb
cmp
test
bound
adc
xchg
xchg
stos
fdivrs
popa
test
sbb
adc
inc
mov
cli
loopne
je
or
add
scas
sub
dec
mov
and
out
dec
inc
adc
xchg
fstpt
pusha
ljmp
mov
data16
sub
cld
jb
mov
push
dec
in
imul
pop
push
mov
mov
mov
lahf
not
rcrl
outsl
mov
sub
scas
dec
pop
dec
icebp
mov
stos
dec
inc
add
dec
fs
fwait
ret
sub
cli
sbb
dec
jge
xchg
imul
adc
and
cwtl
stos
push
insb
pushf
gs
jno
sahf
mov
adc
testl
mov
sbb
mov
fnstsw
jle
adc
in
mov
mov
mov
xor
xor
fisttps
push
mov
rclb
aas
dec
sub
test
inc
mov
test
or
dec
push
outsb
jp
jecxz
mov
rol
xor
sub
sbb
rcll
xor
arpl
data16
stos
cmp
js
into
popf
lods
lcall
mov
and
sbb
cmp
out
lods
xchg
cli
sarl
adc
adc
int3
xor
dec
bound
rcll
aad
sub
adc
mov
mov
stos
add
xor
mov
popf
sarl
shrl
in
dec
mov
lcall
movsl
fsubs
popl
sub
mov
in
xchg
sub
mov
hlt
stos
mulb
jecxz
xchg
jge
insb
dec
add
enter
mov
dec
add
roll
push
mov
outsl
std
xchg
shll
jno
jecxz
push
and
cli
adcb
inc
sbb
jo
jle
xchg
add
outsb
andl
dec
or
xlat
in
ds
ret
add
incb
out
push
and
test
dec
repnz
and
pop
add
or
pop
test
in
adc
pop
cmp
xor
inc
std
ret
mov
jo
shrl
ja
and
jne
jns
in
inc
bnd
cltd
xor
inc
fsubrp
adcb
push
das
xchg
bound
pop
adc
cmpb
push
push
shlb
and
add
jmp
lods
mov
pop
je
shrl
add
jne
and
data16
loope
lds
push
or
mov
pop
and
push
mov
fldenv
fsub
cmpxchg
aad
xor
mov
xlat
jnp
xchg
lea
jl
stos
stos
mov
outsl
jl
add
int3
ret
pop
xor
loope
testb
clc
pop
add
iret
push
xor
lock
imul
sbb
inc
push
test
mov
aam
jo
dec
sbb
out
sbb
pop
shl
das
xor
ds
adc
out
ja
sti
aad
lahf
ss
inc
mov
inc
or
mov
stc
jp
jle
xor
mov
adc
shrl
pushf
hlt
jmp
scas
cltd
sahf
addl
sub
sub
mov
mov
dec
mov
xor
nop
rolb
or
mov
pop
gs
jp
mov
nop
nop
dec
lds
dec
ljmp
loopne
loopne
imul
shrd
inc
cmpb
scas
and
loopne
dec
test
notb
jae
inc
push
loopne
dec
outsb
scas
mov
sti
cwtl
int3
ja
std
stc
aad
add
shrl
inc
mov
mov
mov
jle
fidivl
popa
ja
mov
lcall
bound
pusha
adc
in
rep
cmp
inc
aad
add
jb
inc
cmp
xchg
dec
loope
out
push
fucomp
jo
mov
outsb
mov
or
cmp
pop
cmp
hlt
mov
dec
insl
ss
hlt
mov
inc
scas
mov
or
pop
jbe
mov
adc
cld
test
ljmp
lcall
and
xchg
in
rcrb
insb
scas
and
sbb
adc
mov
cli
sarl
or
ret
out
lcall
out
ja
jecxz
jns
cmp
hlt
pop
mov
ljmp
fildl
out
stc
or
mov
sub
push
push
push
jmp
fmull
mov
jb
arpl
mov
jno
stos
sub
ds
mov
pop
out
push
loopne
mov
fnsave
push
out
les
icebp
arpl
and
insl
adcb
sub
in
push
stc
nop
inc
or
pusha
push
mov
jbe
stos
inc
mov
jns
or
rcll
ret
add
push
dec
dec
mov
aaa
sbbb
push
sbb
sbb
aam
push
rolb
arpl
mov
sbb
jl
jecxz
push
push
mov
cli
cmp
inc
pop
sbb
fnstsw
adc
xor
pop
xchg
lods
iret
inc
js
imull
and
popa
jl
dec
cmp
jp
ljmp
jmp
xchg
test
pop
mov
outsb
cmp
insb
notl
sarb
inc
adc
and
sub
jl
cmp
push
inc
push
push
shrb
push
or
pop
enter
dec
jmp
sub
hlt
leave
icebp
icebp
cmp
mov
mov
mov
xchg
xor
std
stos
push
jno
out
sti
fld
fldcw
aas
add
jb
jecxz
shlb
sub
aam
push
sbb
movsb
xor
pop
loopne
and
cmc
stos
gs
cmp
cmpsb
out
mov
mov
sub
adc
mov
lds
lret
lret
outsb
jl
pop
dec
gs
loop
xchg
xchg
iret
adc
movsb
inc
leave
jmp
inc
mov
inc
aam
std
adc
jmp
aaa
clc
sbb
mov
dec
push
xchg
sub
sbb
fsts
cs
lea
pusha
mov
inc
xchg
ret
jle
in
pop
mov
in
insl
push
scas
stos
push
push
add
xchg
outsb
sub
fists
aad
xor
loope
sub
jnp
daa
aam
mov
cmc
mov
leave
xor
sbb
cmpsl
push
mov
sub
idiv
movl
inc
push
int
jmp
and
and
jmp
fsubs
pop
je
xchg
sbb
pop
or
aam
mov
adc
ret
decl
sub
push
xor
xor
pushl
pushf
bndstx
sub
push
jo
loop
adc
xlat
push
shrb
add
pop
cmp
pop
push
dec
stc
jle
shrl
pusha
ret
mov
shl
ja
pop
sub
pop
ds
repnz
call
xchg
cmpl
int3
lret
sub
insl
shrb
jb
inc
sbb
fimull
orl
adc
xchg
repnz
fdivrs
pop
imul
test
dec
cli
mov
pop
into
sbb
outsb
push
in
pop
or
adc
dec
cmp
pop
lcall
mov
push
jo
or
sbb
cmp
pop
out
ss
and
add
or
aad
push
ret
cli
pop
jecxz
jbe
les
xchg
mov
mov
adcl
mov
inc
push
aam
sbb
mov
insl
aam
mov
adc
xor
test
mov
mov
xor
and
fnstenv
cltd
shr
inc
mov
push
and
loopne
enter
pop
jge
add
fs
scas
xchg
jmp
xor
dec
lcall
jb
pop
sbb
js
cmp
or
adc
inc
inc
mov
xor
xor
mov
dec
dec
cmp
xor
incb
lcall
push
push
sbbb
outsb
pop
jge
inc
add
adc
xchg
lods
mov
or
add
test
testl
mov
lds
jp
adc
dec
add
push
in
ja
mov
and
or
pop
insl
jns
insl
sti
into
in
add
mov
mov
mov
movsb
cmp
scas
xlat
push
loope
ret
fstpl
push
movsb
cmpsb
dec
pop
in
or
sbb
jbe
push
mov
rcll
cmpsb
xchg
cs
or
xlat
push
jmp
mov
movsl
out
pop
jo
adc
aaa
push
cs
call
push
cli
cmp
jg
shll
pop
scas
das
cmp
scas
mov
push
enter
ror
dec
push
mov
loopne
test
jb
mov
lds
outsb
orb
lret
xor
pop
mov
mov
stos
sbb
jno,pt
out
push
rep
das
movsb
movb
dec
rclb
sbb
mov
xchg
cmpsl
subb
and
sub
add
ja
sbb
adc
imul
xor
jmp
inc
push
mov
outsl
ss
imull
xor
aam
mov
std
dec
dec
xor
nop
dec
adc
cmp
outsb
das
cmp
lods
push
fnsave
xchg
in
fsts
incl
clc
cli
or
sbb
out
xor
ret
sub
shrb
cs
out
pop
xchg
xor
hlt
cltd
inc
push
ret
mov
xchg
pop
lahf
xor
mov
std
jp
cmpsb
push
sbb
js
js
mov
pusha
inc
es
jecxz
xlat
dec
inc
int
xor
mov
push
xor
subb
leave
add
cld
push
stos
inc
test
push
fidivl
jb
cwtl
mov
popa
insl
out
xchg
mov
pop
push
popf
loopne
adc
mov
addb
adc
loope
jae
arpl
into
push
or
pop
pmaddwd
dec
mov
cli
in
jp
addr16
xchg
jle
mov
popf
jbe
mov
test
repz
in
test
or
xor
in
dec
pop
out
xchg
insb
or
xlat
push
add
shrl
stos
sbb
in
sbb
ja
cld
mulb
jge
js
pop
sbb
les
pop
push
mov
mov
inc
jge
or
add
pop
push
mov
pop
cmp
sub
add
in
enter
mov
push
mov
outsl
ljmp
xchg
js
fwait
sti
stc
cmpsl
bound
les
cmp
pop
aaa
pop
dec
mov
inc
dec
out
test
jmp
fnsave
and
movsl
lea
mov
ss
aam
add
xchg
loop
push
stos
insb
jnp
mov
ja
daa
sub
nop
inc
cli
cwtl
clc
je
mov
sbb
filds
cli
xchg
jcxz
clc
inc
dec
or
pop
jnp
iret
and
xlat
scas
enter
js
sub
pop
test
fwait
sti
fbstp
xor
fnstenv
cld
lret
dec
dec
imul
mov
add
dec
push
mov
fidivl
es
xchg
mov
subb
out
mov
pusha
cmp
add
rol
hlt
xchg
rcr
into
shrb
mov
or
int
ret
adc
arpl
sbb
mov
jle
out
cmp
test
push
xchg
lea
loopne
xchg
scas
mov
push
lods
jmp
push
cmp
js
sahf
dec
in
lcall
test
imul
into
negb
sub
and
xchg
mov
dec
push
sarl
mov
je
mov
aam
hlt
mov
sbb
mov
fidivrl
dec
mov
sub
jns
dec
enter
jmp
inc
cli
mov
popa
mov
out
adc
jl
xor
fadds
icebp
popa
ret
sub
sbb
arpl
cmp
mov
repz
aad
sub
dec
movsb
pop
insl
add
out
sub
add
loopne
cmp
or
imul
xchg
aas
push
push
inc
aam
mov
add
aam
incb
sbb
mov
loope
popa
or
pushf
ljmp
xor
nop
bound
xor
dec
out
jp
jo
jne
aad
js
testb
fsubr
jp
mov
xchg
repnz
insb
fs
sbb
jge
mov
cmp
stos
dec
cmp
arpl
push
out
pop
addl
divb
jmp
jle
pusha
fisubs
test
dec
push
cmpsb
pop
f2xm1
push
iret
sub
jne
fs
in
enter
mov
push
nop
push
ficoms
pop
and
andl
int3
sub
test
mov
aaa
fmulp
in
lret
push
dec
bswap
ss
push
aad
jmp
outsl
pop
xorb
subb
mov
mov
inc
xor
xor
arpl
cmpsl
fildll
popa
jl
inc
sahf
ja
mov
mov
adcl
xchg
filds
fistl
daa
or
movsl
pop
mov
lret
ret
cmc
scas
mov
negl
fstpl
inc
imul
int3
movsb
or
mov
push
daa
mov
jne
repz
cmc
and
sub
mov
xchg
test
aas
loop
lcall
push
popf
out
xor
lret
out
rcll
sbbb
mov
pusha
ret
loop
cmpsl
rcrl
fwait
xor
in
ss
xchg
mov
push
gs
rcrb
xchg
aas
clc
dec
cmp
popa
jl
sarb
and
dec
cmpsl
ds
pop
ds
mov
lret
fs
inc
xchg
sbb
cmc
bound
mov
lret
mov
mov
and
mov
sbb
jp
dec
mov
pop
out
add
psllw
test
dec
sub
mov
or
dec
nop
fwait
mov
dec
push
mov
popf
outsl
out
out
dec
repz
or
in
cmp
fsub
mov
out
adc
inc
shr
les
xor
or
call
push
mov
das
or
xchg
adc
xchg
outsb
mov
in
cmp
rcll
notl
jmp
icebp
in
fistpl
iret
int3
sbb
and
jbe
cwtl
mov
and
push
xchg
jbe
and
ret
outsb
dec
ljmp
jb
xor
aad
adc
stos
mov
mul
subl
aad
or
lret
mov
cld
shll
push
and
shrl
inc
add
sbb
xor
je
in
stos
movsb
push
sub
shlb
cmp
int3
mov
mov
js
iret
pop
into
arpl
push
sbb
inc
jo
ljmp
loope
xchg
lret
jne
or
arpl
leave
std
push
pop
adc
fcom
push
imul
fsubs
sbb
adc
cmpsb
push
ss
stos
std
js
fiaddl
dec
je
mov
jnp
mov
mov
insl
int
xchg
jbe
xchg
imul
ds
pop
vpsubd
xor
sbb
pop
lea
ret
push
mov
dec
movsl
cmp
jb
arpl
ret
nop
into
dec
inc
mov
daa
call
aaa
mov
jge
insl
sarl
push
out
mov
xlat
add
inc
iret
fs
mov
jecxz
lods
fiadds
dec
scas
mov
push
fdivrs
fisubrs
iret
mov
int3
pop
push
adc
sbb
repz
cmc
pop
sbb
inc
popf
sbb
outsb
sub
repnz
pop
cmp
xchg
mov
and
ljmp
cmp
dec
mov
mov
push
xchg
loope
cmp
and
int3
mov
add
jne
loopne
push
fnsave
mov
loopne
in
push
movsb
pushl
sbb
leave
push
mov
jbe
rorl
and
arpl
sub
pop
cwtl
xor
fwait
call
int
stos
xor
push
or
add
mov
pop
popa
int3
mov
pop
sub
hlt
jo
lods
shrb
icebp
push
mov
mov
stos
outsb
mov
fdivs
push
pop
imul
pop
cmp
pop
pop
xor
sub
xlat
leave
xchg
and
pop
cmpsl
dec
imul
push
cmp
adc
sub
and
adcl
in
imul
pop
cmp
lea
std
and
and
and
inc
jb
ljmp
cmp
test
addr16
sbb
mov
adc
push
das
arpl
inc
xchg
push
fisttpll
dec
mov
movsl
hlt
or
rcrb
imul
dec
rcl
addr16
in
rorb
cmp
add
sbb
dec
fwait
dec
fdivr
outsb
repz
adc
inc
xchg
loopne
cli
inc
dec
cmp
sbb
dec
adc
sbb
push
fmuls
and
mov
jge
int
and
ret
xor
ret
adcb
ja
ss
lret
xchg
icebp
icebp
arpl
mov
add
inc
outsb
cs
inc
outsl
in
push
jne
cmp
mov
adc
fmuls
addr16
xchg
inc
add
and
mov
xchg
out
jns
xor
cmpsb
jbe
test
add
push
mov
pop
cmpsb
mov
push
and
lret
cmp
or
loop
adc
and
lods
test
jbe
in
sbbb
mov
mov
inc
push
or
mov
mov
xor
imulb
test
les
lods
idivl
loope
in
adc
push
jae
dec
pop
inc
pop
sahf
lods
xchg
aas
or
mov
out
shll
int3
jmp
jo
jmp
iret
cmp
pop
jle
jmp
enter
aam
xchg
loopne
adc
rolb
push
cmp
fnstenv
orl
pop
mov
mov
leave
js
clc
or
push
fs
inc
inc
or
xor
lret
stc
test
repnz
cld
in
sub
sub
pop
shrb
insb
test
xchg
imull
mov
stos
xchg
push
push
lret
xor
cmpsl
imul
mov
rcll
and
cwtl
enter
out
dec
out
pop
and
dec
xchg
xchg
adc
jge
gs
stos
sbb
mov
push
cmp
dec
and
leave
cmp
into
out
sbb
ljmp
scas
cmp
cmp
mov
mov
xchg
outsb
mov
cli
outsl
pushf
fdivp
cmp
push
ljmp
jb
sbb
push
add
sub
push
imulb
es
popa
shrb
lcall
dec
bound
repz
mov
dec
pushf
push
fstpt
rclb
xor
pop
inc
and
cmp
shll
daa
jno
popa
fcoml
negl
faddl
rcrb
add
mov
xchg
fnsave
sub
jle
sbb
or
sahf
xor
xchg
sbbb
dec
jo
lds
dec
sarb
jecxz
notl
ja
hlt
inc
fldenv
inc
pusha
mov
pop
ds
out
ret
dec
pop
sbb
and
hlt
and
cmp
push
push
add
and
xchg
mov
adc
popa
test
xlat
fwait
pop
adc
and
stc
rcrb
mov
pop
sarb
pop
movsl
cmp
cmp
outsl
imul
iret
int3
mov
mov
mov
scas
sub
iret
std
mov
cmp
fstl
add
jp
shl
int3
pop
lods
inc
ss
push
in
lret
fists
data16
sbb
jecxz
popf
adc
bnd
xor
incl
scas
xor
stos
aam
out
jnp
and
cmp
mov
cltd
mov
mov
xchg
mov
fidivl
imul
jge
imul
out
xchg
add
fdiv
jecxz
loopne
adc
mov
ret
decb
test
sub
sarl
and
mov
daa
jbe
popa
push
xlat
ret
pop
adc
xchg
lods
and
mov
mov
test
sbb
or
movsb
icebp
fcmove
pop
les
adcb
aam
aam
sbb
or
js
popa
lods
nop
out
es
pusha
neg
sbb
or
scas
outsb
jo
mov
or
mov
in
arpl
fidivl
push
pop
sti
inc
cmpsl
imul
sbb
xor
or
jl
in
lcall
dec
out
fmull
add
es
rorb
out
cmp
lock
jg
ss
pop
add
sub
lcall
dec
sahf
imul
cmp
into
jno
add
pop
into
leave
cwtl
pop
fbld
movsl
in
cmp
xor
mov
rcll
xlat
scas
out
mov
cwtl
stos
push
inc
ja
mov
xsha256
cmpsb
adc
jp
jno
fs
fsubr
test
mov
mov
jb
aas
xchg
cmc
scas
lea
xchg
and
daa
xchg
cmp
lods
ja
pop
bound
jae
and
pushf
fidivrs
adc
outsl
pop
mov
pop
stc
outsb
inc
and
or
loope
add
and
xchg
mov
scas
mov
imul
sbb
adc
dec
int3
loopne
sub
fpatan
inc
orb
negb
ljmp
stc
or
xchg
xchg
and
cs
push
hlt
test
mov
xchg
sti
cmpsl
lahf
repnz
inc
xor
dec
dec
ljmp
mov
push
jg
aam
mov
das
jle
div
leave
cmp
mov
fwait
add
push
mov
mov
jmp
or
sbb
lods
aaa
adcl
loope
xchg
daa
dec
adc
fs
and
mov
push
lahf
cs
in
imul
sub
dec
mov
dec
pop
lret
sarl
xlat
mov
push
sahf
pop
leave
inc
sbb
rorb
jns
repz
fcomps
icebp
mov
addr16
leave
notl
xor
loopne
cld
mov
test
nop
lock
jp
xchg
outsl
xorps
adc
inc
in
push
cltd
add
push
push
repz
adc
push
mov
popa
daa
pop
notl
mov
data16
push
frstor
mov
xchg
outsl
mov
push
mov
ret
fcomi
insl
mov
sbb
sbb
ja
lcall
push
adc
jmp
mov
cli
adc
lock
jno
pop
aaa
sahf
dec
adc
mov
jne
data16
ja
mov
aaa
add
add
sbb
pop
cmp
xchg
mov
xorb
gs
jns
test
push
shll
dec
dec
lcall
add
adc
mov
jge
sub
push
mov
xchg
mov
lods
fucomi
lahf
lcall
mov
testb
rorl
fdivl
out
xchg
lcall
jge
xchg
call
jno
jnp
push
das
add
pop
leave
clc
loop
push
sub
movsl
aas
push
inc
mov
jnp
and
call
mov
inc
loopne
push
imul
adc
xor
sub
imull
mov
leave
test
leave
sbb
pop
ljmp
inc
mov
jnp
ror
cmpl
mov
inc
and
std
inc
push
pop
cmp
mov
outsl
ja
loopne
fmul
je
sub
and
cmp
in
lret
mov
mulps
inc
sub
ret
outsb
pop
scas
imul
cmc
lcall
inc
add
imul
cmp
andb
pop
adc
sbbl
jle
lcall
lods
das
test
mov
mov
mov
lret
adc
subl
or
xchg
mov
mov
mov
rcrl
sbb
jmp
mov
scas
sbb
or
lods
out
mov
pop
fdivs
stos
out
sbbl
jne
jns
xchg
cmpsl
and
aas
push
xor
jne
subl
cmp
repz
repnz
jg
xchg
fnstcw
xchg
push
mov
aaa
cmpsb
lods
pop
adc
jecxz
sub
out
inc
ja
gs
sbb
push
cwtl
jmp
ror
rcll
and
inc
test
cltd
cmpsl
mov
aad
cld
andl
fcmovb
lahf
int3
aam
jno
inc
xchg
divl
or
mov
xchg
test
fisubs
ret
pop
xor
pop
jl
push
sbb
jp
addr16
and
in
pop
sbb
loop
jo
ljmp
or
xor
xchg
jge
fwait
loop
and
pop
mov
fldl2t
outsl
mov
call
sahf
cld
adc
sub
push
push
cmp
shld
sub
cli
and
fstpt
andb
jge
cmc
cmpsl
and
mov
fiadds
dec
test
add
xchg
fstps
sub
mov
xchg
dec
and
int3
dec
mov
rclb
leave
jns
or
jp
adc
cltd
pop
cmpsl
je
and
mov
pusha
adc
sbb
push
fwait
divl
add
push
lcall
pop
ss
je
xchg
sbb
xor
sub
and
add
mov
xchg
dec
shll
pusha
sti
fildl
dec
or
mov
cmp
gs
push
cmpsl
mov
stos
sub
push
mov
jb
and
pop
mov
xor
and
jge
push
cmp
xchg
mov
push
mov
stos
mov
popa
cmp
sti
mov
cli
aaa
aam
out
push
xchg
mov
xchg
mov
adcb
inc
push
xor
add
push
ret
cmc
jl
sub
js
push
jno
jp
pusha
xor
popa
sub
sti
mov
xor
addr16
shl
mov
sub
iret
inc
push
bound
pop
mov
mov
sbb
add
call
add
scas
and
mov
xor
ret
sub
xchg
jne
jecxz
cs
ret
and
loope
sbb
clc
test
mov
pop
xchg
inc
push
loop
cmp
roll
insl
test
mov
xchg
add
aas
aaa
mov
lods
xchg
mov
adc
jb
pop
iret
inc
xchg
push
out
shlb
mov
pop
pop
xchg
jae
ret
push
adc
jne
pop
sub
lcall
mov
mov
les
das
ret
dec
cmp
push
pop
push
icebp
movsb
mov
push
cmp
xchg
sbb
inc
and
orb
nop
jnp
out
pop
sub
cmpsl
js
nop
ss
ret
xchg
mov
xchg
push
push
push
and
mov
adc
push
jno
xchg
mov
add
pop
mov
shrl
xchg
hlt
enter
es
add
test
repz
bound
fidivs
stos
pop
insb
jle
scas
inc
std
sbb
push
mov
push
jno
les
sti
xchg
fbld
sbb
sbb
xlat
cld
sub
stos
dec
loopne
stos
int
call
js
xchg
lods
and
in
xor
int3
mov
jmp
push
out
rclb
call
inc
mov
push
cmp
mov
mov
pop
xlat
cltd
mov
shll
mov
or
outsl
and
test
push
pop
mov
dec
clc
in
lods
insb
scas
and
inc
loop
arpl
dec
mov
inc
mov
icebp
insb
mov
loopne
popa
divb
sbb
iret
pushf
mov
idivl
xor
fidivs
cmpsb
xchg
xlat
arpl
adc
mov
dec
cmp
sbb
jmp
sub
rcrl
xlat
ljmp
cmpsl
dec
jecxz
jle
iret
cmp
or
js
lahf
push
sub
jbe
push
jbe
out
lret
cmpsb
bound
xchg
or
mov
cmp
xor
add
pusha
jo
mov
fcmovnu
in
aas
xchg
lods
cmp
add
pop
adc
push
iret
xor
add
aam
lods
cmpsb
outsl
and
pop
push
imul
ds
xlat
pushl
cmp
inc
pop
mov
cmp
cmpl
dec
add
jg
sbb
dec
mov
cmp
in
mov
rcl
adc
jge
shl
in
add
jae
jl
pop
xor
movsl
add
dec
pusha
rolb
lea
fisubs
stos
push
inc
lock
in
cmp
add
sbb
xchg
out
shl
insb
fisttps
leave
xor
cmc
dec
adc
es
mov
sub
pushf
popa
mov
jno
shrl
pop
adc
mov
pop
shrl
repz
mov
dec
adc
push
adc
cltd
lock
add
mov
out
inc
stos
push
imul
sub
cmc
push
sub
add
movsb
out
aaa
mov
in
gs
popa
lods
movsl
xor
psrad
mov
movsl
and
js
adc
jno
dec
ficomps
repnz
pextrw
inc
mov
int
pop
jae
add
adc
ss
push
into
pop
test
inc
xchg
cs
mov
das
imul
or
pop
push
sub
sub
sbb
in
insb
mov
mov
jg
mov
adc
hlt
or
add
call
cmp
jno
stc
repnz
cwtl
stos
daa
add
scas
ret
test
hlt
lret
pop
jno
call
push
push
xor
sub
lods
push
fcmovnu
jae
ret
sub
and
push
inc
out
test
hlt
rol
push
aad
ds
int3
repnz
ror
xchg
pop
iret
xor
hlt
gs
sub
mov
sarb
out
into
cwtl
gs
pop
or
fmul
jg
outsl
jle
xor
jle
xchg
daa
mov
scas
and
pop
or
adc
inc
lcall
push
xchg
lret
mov
add
sbb
addr16
pop
mov
cwtl
add
mov
fs
icebp
xchg
fnstenv
sub
inc
and
push
cmp
push
cmpsl
negl
mov
dec
stos
test
mov
dec
add
scas
movsl
cmp
cwtl
stos
fiaddl
inc
js
fiaddl
or
jp
incl
pop
loop
shrl
imul
dec
cmpsb
push
fidivl
dec
sarl
pop
fisttps
in
xchg
arpl
lock
dec
mov
mov
jl
adcl
stc
xchg
shr
clc
pop
cmp
dec
and
add
pop
arpl
push
sub
test
in
xchg
add
mov
cmp
bts
rol
insb
ljmp
pop
mov
data16
fcom
out
imul
mov
pop
and
out
push
push
outsb
pop
call
mov
inc
pop
je
push
and
icebp
xchg
lods
stc
imul
mov
fs
aam
lods
pop
cld
rorl
jne
inc
hlt
scas
arpl
idivl
data16
sbb
xchg
jnp
pop
movsl
imul
or
jp
fdivrl
stc
pop
imul
lahf
jo
jno
cmp
mov
aaa
ss
add
cmp
xchg
cmp
dec
aam
xchg
sbb
pop
bound
stos
or
insl
popl
les
or
push
xchg
scas
sub
cmp
mov
pop
int
movsb
cmp
mov
rcl
lock
cmp
mov
daa
mov
insb
sbb
push
mov
xor
pop
test
je
adc
inc
lods
outsl
rcrb
fs
pop
and
repz
cmp
test
ja
and
lea
test
or
scas
imul
ret
pop
and
and
leave
mov
add
rorb
aam
shrl
and
adc
cltd
mov
xchg
add
cmpsb
in
out
stos
loop
push
add
jo
je
adc
js
je
cmp
rclb
fimuls
jp
xchg
out
add
cmp
mov
add
insl
rcr
jo
jbe
or
pop
push
xor
das
inc
out
push
inc
xchg
ja
jno
lahf
sub
fidivl
pop
inc
fwait
add
mov
jne
jns
cmp
jnp
test
andb
aad
test
cltd
pop
ret
add
add
fwait
push
fwait
sti
aaa
sarb
mov
push
call
xorb
dec
lret
lock
mov
mov
pushf
daa
add
loopne
icebp
stos
enter
cmpsb
fisubl
and
stc
xor
fisubrl
mov
lds
xchg
push
lods
sbb
inc
ret
mov
test
dec
lret
hlt
pop
sbb
mov
inc
stos
lret
ror
int
arpl
sar
loopne
jg
sbb
jp
mov
iret
or
aas
fldl
xchg
jl
ljmp
ljmp
pusha
into
jmp
cmp
ss
push
sti
xlat
and
xor
bound
ja
xor
sarb
ja
and
dec
or
jg
inc
dec
jmp
sbb
sub
cmp
loopne
or
sbb
movsl
mov
pop
adc
inc
cmp
mov
pushf
jg
pop
push
jno
inc
mov
sti
movsl
icebp
lahf
iret
xor
or
imul
mov
cmp
scas
add
test
ja
xor
loop
ror
sti
cmp
mov
shrl
addr16
xchg
outsb
cwtl
mov
cmc
fldenv
xchg
call
std
push
ljmp
adc
aas
add
xlat
or
imul
pop
lods
sti
movsl
add
es
dec
jecxz
cltd
insl
std
sbb
pusha
out
jge
xor
pop
push
mov
xlat
and
dec
and
mov
fdivrs
or
push
add
insb
lahf
jg
pop
lds
xchg
pop
and
add
xor
icebp
jl
xor
adc
push
fisubs
jno
adc
leave
es
add
jbe
fstpl
mov
mov
pop
mov
mov
pusha
mov
jge
shll
loopne
shl
mov
xor
insl
ret
loop
nop
mov
mov
push
jns
loopne
sahf
adc
into
enter
loopne
stc
ljmp
addr16
iret
add
shlb
bound
pop
cld
mov
cmp
mov
add
pop
out
sub
jge
loop
sbb
push
cmp
inc
mov
xor
mov
xchg
lods
aaa
or
adc
mov
cwtl
pop
test
std
pop
incl
push
push
jns
out
je,pt
inc
push
sub
sarb
cmp
insb
sbb
stos
jecxz
sbb
insw
mov
xchg
incb
sub
adc
fimull
and
out
es
sbb
dec
leave
ror
fidivrs
movsl
popa
mov
ja
cld
sbb
clc
daa
mov
cmc
mov
xlat
and
repnz
pop
sbb
sahf
mov
cmp
jmp
and
out
push
cmp
shrl
xor
cmc
or
sub
outsb
loope
or
js
inc
mov
aaa
daa
shll
enter
lods
xor
jg
ljmp
pop
inc
call
int
xchg
xchg
mov
inc
jp
xor
test
xor
out
cmpsl
sbb
mov
in
adc
fldl
add
dec
xchg
ret
adc
mov
mov
xlat
ret
or
ljmp
mov
lret
mov
rorl
jno
and
in
out
repnz
cmp
xchg
lea
cmpsb
dec
sarb
xor
ja
mov
dec
stos
pushf
pusha
xchg
xchg
xchg
mov
mov
test
ja
xor
aad
xor
inc
call
sub
xchg
sbb
jp
xchg
inc
pop
stos
xchg
dec
gs
loope
jle
loop
imul
pusha
sahf
lea
es
add
clc
inc
test
pop
call
aas
jle
fistps
test
in
push
cmp
out
jb
outsl
mov
push
mov
dec
mov
pop
out
mov
push
mov
mov
std
inc
mov
pop
push
cs
adc
out
outsb
stos
inc
jle
ss
cmc
mov
cmc
dec
or
test
js
cmpsl
ja
dec
adc
call
test
xchg
xchg
mov
fistl
xchg
test
inc
xlat
out
push
jnp
pop
out
fucomi
and
and
adc
loop
test
ja
dec
out
pop
mov
mov
scas
jbe
les
enter
pop
insb
hlt
loope
xor
aas
cmp
cli
and
push
mov
pop
cmpsl
cmc
dec
in
dec
pop
cld
push
xchg
insb
jle
add
or
pop
int3
popf
cmpsb
jae
test
adc
sbb
adc
lret
decb
adc
inc
sub
pop
push
andb
jl
loope
jp
ret
into
imul
out
loopne
bound
lahf
test
mov
jne
xchg
add
lods
inc
mov
sar
xlat
xchg
sub
sbb
and
ljmp
iret
or
xor
cli
cld
lret
daa
imul
or
loope
fistps
daa
dec
gs
jo
inc
sbb
fs
sub
cmp
sub
fidivl
push
fistpl
fs
xchg
pusha
in
in
mov
mov
and
cmp
mov
jo
ds
pop
jmp
mov
enter
gs
sbb
pop
and
ds
stos
xchg
fnsave
mov
addr16
icebp
enter
or
mov
push
or
test
stos
movsl
mov
pop
mov
jae
lds
sbb
jmp
xchg
stos
out
cmp
mov
fwait
sub
imul
jae
movsl
mov
fsts
test
add
std
xchg
push
push
cmpsb
cltd
insb
pop
or
mov
daa
iret
mov
ds
sub
stos
xchg
icebp
and
orl
mov
adc
insl
arpl
mov
enter
icebp
adc
jle
jmp
add
mov
jmp
sbb
btc
scas
lods
ljmp
and
or
or
mov
pop
jecxz
cmp
mov
rclb
sub
mov
fstpt
shl
popf
xchg
cltd
or
scas
jp
adc
scas
hlt
adc
je
push
ljmp
pop
repnz
sub
pop
stc
dec
insl
shrb
adc
addb
adc
push
cs
je
fistpll
loop
in
jbe
adc
mov
jge
fcoms
or
fnstsw
out
cmp
daa
sahf
xlat
lret
stc
add
sbb
or
fdivl
adc
scas
les
call
ljmp
cmp
rol
ss
dec
in
lock
stc
dec
into
repnz
lret
jbe
scas
and
pop
lret
and
insl
mov
pop
xor
sub
cs
stos
mov
inc
adc
mov
adc
lahf
mov
dec
loope
pop
push
in
movsb
pop
sar
mov
or
cmc
xor
dec
or
mov
enter
push
jmp
imul
addr16
fsts
adc
jno
data16
sarl
ds
pop
pop
test
stos
sarl
test
mov
js
jo
inc
das
sbb
jl
xor
jbe
add
adc
or
xchg
stos
decl
cmp
xchg
dec
leave
or
dec
pop
mov
push
jo
aas
mov
sbbb
fsubr
enter
js
rolb
test
jecxz
lret
cmpsb
sub
push
lds
mov
mov
xor
cld
imul
in
cmp
nop
scas
aam
push
xchg
jb
dec
xor
cld
or
xor
cmp
pusha
and
das
and
push
gs
sub
xor
into
fidivl
popa
dec
mov
ss
fstpl
or
bound
xlat
or
fmul
cmp
cwtl
call
push
push
jne
mov
inc
or
add
out
fisubrs
enter
cmpb
ja
xor
or
cmp
loop
jb
xor
arpl
pop
mov
lods
mov
out
cmpsl
pop
lods
lret
pop
sahf
cld
fbstp
push
sub
std
or
movsl
stc
iret
and
push
xchg
jno
xchg
loopne
and
into
loop
or
or
add
xchg
jno
sbb
icebp
mov
out
pop
mov
or
daa
bound
and
jb
shr
xchg
out
aad
cmp
mov
or
xchg
adc
dec
or
in
enter
xchg
hlt
xor
jno
mov
sub
jmp
lods
pop
add
or
inc
out
lahf
addb
mov
int
mov
daa
and
xchg
subb
jg
pop
jl
pop
and
adc
nop
lcall
inc
mov
add
jg
cli
mov
stos
fidivrl
loopne
jmp
aam
jp
lret
pop
cmp
jo
cmp
dec
mov
push
mov
daa
lods
mov
aam
add
cmp
adc
xchg
pop
lahf
arpl
sar
and
repnz
or
sub
pop
push
pusha
pop
cmp
vstmxcsr
loope
testb
jno
movsl
mov
inc
xchg
ltr
fnstsw
dec
xchg
mov
sarb
xchg
mov
jp
sub
and
xchg
ds
jg
enter
fwait
add
lds
in
out
cmp
mov
mov
movsb
push
inc
mov
adc
or
xor
fs
pop
mov
aas
popa
jmp
movsb
push
movsb
aaa
dec
dec
leave
fs
test
jbe
push
lock
lret
jp
mov
addr16
cmp
mov
test
dec
das
pop
sbb
jp
adc
pop
out
xorb
xor
adc
rcrl
sub
insb
shlb
cmp
mov
ret
xchg
data16
push
pop
jecxz
cld
inc
xor
push
aas
repnz
sahf
ja
xchg
mov
aas
and
and
negl
insl
add
inc
shld
gs
sub
pop
int3
or
sub
xor
dec
nop
ss
js
xchg
lds
adc
xor
in
loopne
xor
jnp
xchg
lods
xchg
push
fs
pmullw
and
les
or
mov
dec
ljmp
adc
mov
std
jecxz
jmp
shl
aaa
mov
icebp
jle
cwtl
xor
out
cld
shll
gs
pop
mov
inc
mov
jns
in
pop
fs
add
imul
push
push
vxorps
jo
cli
mov
and
scas
sbb
sub
add
cmpsb
and
fstpt
fdivs
jo
xchg
test
xchg
in
jb
pop
cmp
pop
dec
pop
push
xchg
mov
aad
mov
in
lret
inc
fsts
push
call
dec
movsl
mov
popl
in
inc
cli
cmp
or
mov
in
inc
xor
mov
fbstp
cmpsl
dec
add
sub
ud1
testb
cmpb
xor
lds
in
cmpl
jp
sbb
mov
daa
mov
js
icebp
add
or
mov
repnz
push
jle
mov
adc
jecxz
icebp
xor
sub
dec
outsb
add
loopne
mov
lock
mov
mov
iret
out
sbb
cmp
ds
adc
outsl
mov
pop
iret
sahf
orl
push
lods
push
or
pop
mov
fistpl
pop
cmp
jecxz
gs
sbb
xchg
cmp
add
les
repnz
lcall
add
jbe
sub
fldt
into
mov
pusha
fildll
je
lret
inc
iret
mov
arpl
pop
mov
in
adc
rorb
jge
sarb
fcomps
mov
jp
add
cmp
stos
movsl
cmp
inc
cmp
or
mov
xchg
insb
out
sbb
push
js
jecxz
cli
dec
lcall
pushf
and
scas
sbb
mov
add
push
outsl
xchg
mov
cmp
bnd
loop
mov
sbb
getsec
call
pushf
les
mov
add
or
push
leave
sahf
cmp
inc
aaa
push
mov
mov
ror
lret
xor
and
adc
fs
int3
sbb
add
xlat
mov
lret
data16
popa
mov
xor
and
dec
sub
and
pop
push
xlat
or
sub
adc
dec
movsl
divb
sti
in
inc
jge
inc
fimull
and
fcompl
push
mov
push
mov
mov
sbbl
ret
and
mov
and
lds
adc
pop
ljmp
sub
adc
inc
sarl
sbb
cmp
xchg
mov
dec
dec
push
ds
sbb
scas
sbb
jl
in
pusha
push
test
aas
sbb
sahf
cmp
xchg
mov
or
jl
sbb
enter
add
fs
mov
dec
add
stos
lea
repnz
mov
out
aad
xchg
bound
fs
pop
sti
push
add
sbb
xor
sarb
inc
pop
stos
pop
push
dec
xor
jg
in
push
lds
jge
fisubs
push
jbe
inc
xchg
push
mov
cmpb
pop
mov
addr16
ficompl
mov
adc
jle
enter
fnstsw
pop
xchg
or
jl
push
int
fnstcw
cmp
xor
mov
sub
inc
add
rcl
fsts
lods
or
leave
mov
cld
pop
xlat
jmp
les
mov
mov
xchg
sbb
int
loope
roll
addl
scas
ds
jl
stos
push
fsts
pop
imul
mov
inc
hlt
shl
xor
push
jne
mov
mov
and
test
test
js
lret
es
pop
out
mov
data16
sti
lcall
in
and
je
and
jb
jmp
adc
xor
cltd
add
loop
mov
adc
jmp
or
mov
mov
pop
fistpl
sub
mov
mov
mov
ret
stos
cmp
and
lret
movsb
inc
int3
subl
xchg
pop
cmp
pop
add
fdivs
add
stos
lods
jb
jmp
jmp
repz
xchg
dec
mov
ljmp
mov
ja
scas
stos
push
int3
mov
push
inc
pop
adc
std
lods
xchg
fs
jmp
mov
es
pushf
decb
xchg
mov
int
mov
or
addb
out
outsb
pop
add
dec
push
mov
aad
call
ffreep
lret
test
cmp
inc
sbb
je
fs
out
out
js
adc
cmc
dec
xor
xchg
pop
lret
adc
hlt
add
and
lock
pop
sub
jns
jp
fidivrs
mov
mov
scas
or
xor
or
push
addr16
mov
inc
adc
dec
add
jnp
lahf
jbe
adcl
adc
sub
xor
bound
dec
sub
dec
jmp
fstps
js
push
mov
lds
mov
rclb
shrb
iret
mov
jae
lock
xchg
xchg
add
mov
nop
cmpsb
jae
sbb
lret
lock
jecxz
adc
xor
cs
lea
or
and
jp
push
popf
pushf
fdivs
and
cmp
and
inc
fcoml
enter
push
addr16
mov
lret
movsb
mov
idivl
jmp
pop
ret
xchg
insb
xor
in
jecxz
sbb
cmpsb
imul
mov
loop
cld
xchg
add
lods
sbb
fcomip
nop
dec
movsl
jae
sub
je
add
jp
cmp
dec
rcrb
out
xchg
mov
rcr
ljmp
mov
push
insb
add
sub
fwait
xlat
fdivrl
jb
pop
pushl
sbb
push
repz
imul
and
test
push
ret
dec
cmp
xor
push
popf
jmp
sbb
cmp
lods
xchg
sub
pop
mov
dec
xor
mov
movsb
test
mov
sbb
loope
in
dec
inc
pusha
xor
ljmp
push
xchg
je
test
xchg
mov
push
test
pushf
hlt
push
xchg
cmpsl
jne
or
and
push
rorl
sub
aaa
rorl
test
hlt
sbb
aad
into
aam
lret
push
icebp
shlb
fidivrs
fwait
stos
imull
mov
mov
rcr
mov
fbstp
and
lahf
push
jae
jo
add
movsl
mov
dec
cmp
andl
xchg
fistpll
xchg
dec
jns
icebp
mov
sbb
add
add
inc
addb
cmc
jbe
loop
add
cmp
jl
cmpsb
mov
movsl
jne
repnz
mov
decb
and
cmp
cltd
cmp
ret
pop
lods
jne
mov
xor
adc
leave
xor
or
jp
pop
or
lock
popl
pop
ja
int
fcom
or
sub
pop
sub
ds
notb
out
cmp
aad
mov
mov
or
mov
push
out
shlb
movsb
cmp
mov
hlt
loop
jg
test
pop
addr16
dec
xchg
sbb
push
mov
dec
icebp
ss
jnp
cmp
inc
pushf
xchg
orb
and
subl
adc
sahf
and
dec
mov
pop
inc
mov
fwait
cmp
testl
lea
push
push
insl
adc
mov
ficoml
lahf
in
lret
jns
bound
cmc
sbb
inc
scas
fs
adc
lods
pop
lcall
arpl
jl
xchg
cmpsl
mov
rcr
mov
pop
cltd
dec
mul
fidivs
rcl
int3
pop
dec
cmpl
fwait
test
adc
imul
fldenv
loopne
stos
lcall
mov
pop
jg
fimuls
test
into
stos
jbe
call
dec
adc
stos
xchg
xor
loope
je
movl
fwait
mov
out
data16
dec
je
in
movb
call
dec
push
cwtl
test
scas
outsl
call
inc
cmp
mov
and
mov
xchg
insl
xchg
std
push
xchg
pop
xchg
pop
fwait
push
lods
stc
pop
adc
or
jl
ja
fbld
lcall
cltd
adc
test
mov
ljmp
dec
add
scas
pop
daa
into
subb
dec
jae
push
sub
loope
dec
xchg
and
movl
test
xor
add
movsl
sub
inc
xor
adc
insb
jle
gs
dec
call
sbb
cmp
scas
inc
fcmovnbe
push
jbe
std
lret
or
fidivrl
insl
outsl
stc
loop
outsb
jne
scas
mov
pop
aas
xchg
and
mov
sub
adc
push
mov
sub
inc
mov
mov
movsb
push
xor
mov
shll
xchg
int3
pusha
add
xorl
mov
push
test
xor
mov
filds
lret
clc
ss
dec
in
push
outsb
add
imul
fcmovu
xchg
add
or
out
sbb
cmp
lea
outsb
push
xor
movsl
sbb
dec
sub
icebp
inc
mov
push
repnz
ret
jnp
cmp
mov
aam
imulb
cli
jne
adc
xchg
cltd
popl
sub
or
mov
pop
mov
inc
aas
fildll
dec
mov
pop
add
pop
cli
adc
cmp
jmp
mov
aam
enter
sbb
and
dec
std
pop
xchg
mulb
and
mov
jecxz
stc
movsb
mov
push
sbbl
jp
mov
pop
and
jg
sti
dec
adc
xchg
adc
mov
aam
sbb
sbb
out
sub
int3
push
lcall
push
mov
test
addr16
test
js
daa
mov
mov
test
inc
ljmp
or
fsubrs
shl
xchg
xlat
test
lock
bound
mov
fisubl
cld
and
dec
jg
dec
jle
ss
mov
jae
xchg
mov
jle
jns
mov
in
mov
mov
int
xchg
cmpsb
fsubr
inc
mov
das
cmp
or
aas
les
loope
sbb
lahf
and
in
imul
cli
mov
ja
es
sbb
aas
mov
pop
xlat
cmc
mov
sbb
or
or
inc
or
fisubl
mov
lock
mov
nop
pop
dec
adc
test
jl
xor
jl
sbb
dec
pop
jno
repz
push
push
mov
xor
daa
dec
sub
cmpb
js
or
movsb
mov
fistl
push
loope
out
sub
and
cld
scas
out
push
repz
adcl
jne
add
dec
xchg
push
popa
lods
cmp
divl
xor
adcl
pop
std
aas
add
jg
push
test
push
pop
add
enter
in
mov
inc
lods
and
jp
jmp
sub
sbb
add
and
dec
xchg
add
jb
push
jno
or
sbb
or
adc
sub
bnd
cmp
cs
fmuls
call
test
lock
sbb
pop
nop
dec
lea
mov
mov
lret
push
dec
movsb
xchg
add
lret
cli
sbb
sbb
fcmovb
movsl
mov
rol
rcrl
cmovbe
test
out
out
xchg
dec
in
mov
arpl
flds
addl
rolb
push
jmp
inc
mov
jl
pop
fcmovnb
push
rorb
stos
and
xchg
sbb
fistpll
adc
dec
in
xchg
jmp
pop
enter
lods
test
xchg
loopne
push
add
push
push
sbb
push
jge
cmpsl
lods
test
and
fdivs
aad
cmp
mov
or
xor
cmpsl
in
aaa
aam
insb
fstp
mov
adc
in
rorb
jecxz
mov
gs
out
loope
or
mov
push
ret
call
dec
cli
loop
mov
fbstp
fbld
test
mov
or
imul
das
jecxz
cmc
pop
outsl
call
fsts
inc
push
mov
mov
sbb
hlt
push
scas
jle
jmp
sub
add
jg
jp
or
push
test
xor
or
add
sub
or
cld
imulb
shll
jbe
mov
adc
pop
push
fwait
inc
lret
xchg
xor
mov
popa
movsb
leave
movsb
pop
addb
mov
ret
lret
jmp
xchg
sbb
or
inc
mov
insb
lock
jle
or
repz
push
mov
jns
sub
mov
fdivp
cmp
addr16
dec
add
jmp
xchg
push
jb
out
sub
mov
or
jp
xor
jne
out
mov
push
mov
hlt
mov
jl
jae
loope
test
cmp
dec
int
push
idivl
leave
popf
loope
xor
push
xchg
cwtl
jle
mov
in
das
xchg
jg
mov
jbe
mov
hlt
jecxz
adc
iret
mov
pop
cmp
push
or
fiadds
enter
xorl
mov
dec
push
adc
dec
daa
sbb
icebp
leave
stc
cmp
movsb
mov
adc
sbb
xchg
mov
xlat
jle
jno
push
mov
gs
mov
in
pop
jb
adc
jae
das
xchg
divb
sub
pushf
add
cvtpi2ps
pop
rep
or
mov
shrb
rcrb
xor
hlt
cmp
xor
daa
pop
loop
repz
sub
repnz
push
ffree
add
inc
inc
adc
lock
inc
inc
jne
inc
outsb
dec
pop
fsts
sub
or
shll
jle
movsb
test
push
and
cmpsb
sub
cmp
popa
push
aaa
push
pop
je
fldl2e
icebp
adc
mov
dec
into
rorb
mov
mov
aam
push
push
mov
stc
popf
in
fnstenv
cmp
test
jge
jp
aam
pop
xchg
pop
add
in
loop
adc
popf
xor
mov
mov
ss
jb
ljmp
push
gs
jbe
fs
sub
cmp
in
push
pop
inc
dec
push
movsb
test
mov
dec
ffree
outsb
aaa
into
mov
dec
push
inc
xchg
sub
sbb
inc
fsubl
stos
inc
ss
cld
xchg
orb
cs
daa
mov
inc
ja
cmp
adc
cmp
and
fs
bound
lea
add
mov
ret
andb
xchg
fsts
rolb
inc
jl,pn
pop
jmp
test
inc
cli
xchg
pop
bound
mov
xor
xor
xchg
xchg
inc
jnp
sub
std
cmpsb
daa
scas
mov
mov
or
int
out
test
cld
es
bound
into
out
or
fisttpl
movsb
pop
pop
shlb
bound
or
out
mov
sub
hlt
and
dec
out
adc
stos
mov
stos
ljmp
arpl
stos
pushf
xor
push
sahf
mov
add
data16
test
push
mov
adc
jnp
jns
or
push
cmc
pop
in
mov
mov
hlt
pop
xor
push
push
jl
fbstp
dec
push
sti
xor
mov
lods
mov
std
lods
ljmp
stos
ljmp
cmpsb
mov
dec
push
adc
pop
cmp
fistps
cmp
pop
or
push
imul
push
rcl
adc
or
and
icebp
jno
lcall
into
jp
mov
aam
and
cwtl
out
cltd
std
lret
adc
outsl
mov
rcr
arpl
cmp
aaa
outsl
bound
ret
mov
test
mov
mov
lahf
es
or
xlat
sbb
or
and
rorb
js
dec
ret
ret
cmp
shll
dec
sbb
cmp
cltd
lret
inc
lods
cld
mov
scas
inc
arpl
push
popf
lea
push
mov
push
inc
or
adc
dec
pop
nop
xor
rorb
lcall
loope
push
mov
or
clc
adc
dec
fstl
jne
bound
repz
fucom
cmp
and
cmc
andb
mov
jne
sub
popf
mov
mov
mov
add
jp
lea
mov
out
xor
mov
sub
sub
popa
push
xor
add
or
and
cmpsb
addr16
dec
mov
cmp
es
or
jae
cmp
jg,pn
aad
dec
dec
lock
loopne
cmp
not
cmp
push
mov
shlb
xor
dec
popa
cmp
push
adc
xor
xor
test
clc
pop
lds
arpl
mulb
dec
daa
dec
popa
mov
ja
xor
fnsave
dec
dec
and
lret
iret
jo
addr16
lret
in
sub
xchg
call
stc
cmc
jae
in
xchg
xchg
lcall
popl
psubd
adc
lcall
inc
xchg
jp
out
xlat
pop
mov
sahf
pusha
and
daa
cmp
cli
jb
sub
dec
push
inc
orb
mov
xchg
xor
push
xor
mov
std
int3
sbbb
sbb
loopne
xchg
adc
rcrl
or
scas
orb
xor
jae
nop
adc
lds
push
cmpsl
shlb
mov
std
loope
sub
ret
dec
cmp
fidivl
loopne
aas
cmp
pop
cmp
xchg
pop
fistl
in
and
movsb
add
int3
ds
xor
sub
inc
pusha
mov
clc
sub
pop
rcll
add
push
movsl
xchg
icebp
pop
js
push
les
sbb
js
inc
pop
decb
adc
cmpsl
dec
jge
sbb
arpl
add
and
pop
mov
xor
and
ret
and
pop
pop
shrb
mov
in
jl
sahf
je
cmp
ljmp
push
pop
push
adc
lods
mov
add
or
pop
data16
outsl
push
sbb
fldenv
in
fildll
fwait
add
lods
mov
mov
icebp
inc
jbe
inc
shrl
mov
or
or
push
mov
push
sub
pop
add
dec
gs
movb
inc
pop
adc
mov
je
mov
pop
dec
leave
xchg
mov
or
pop
sahf
sbb
push
mov
lret
into
popa
sbb
jle
xchg
aaa
in
sub
orl
xchg
daa
mov
adc
and
mov
fnstsw
add
and
movsb
pop
or
pop
cmp
xor
mov
pop
mov
sahf
push
lea
mov
add
or
and
sub
cwtl
lods
xlat
arpl
mov
jbe
inc
mull
dec
dec
sbb
in
cmpsb
popa
shl
xchg
je
mov
jmp
rclb
fcomps
hlt
or
sti
or
lcall
inc
adc
or
push
mov
roll
mov
divl
rep
movsl
fwait
cmpsl
jp
push
sub
in
jmp
mov
dec
or
xchg
pop
sub
cs
ficoms
inc
ja
jns
je
fmull
and
jno
pop
add
fs
sbb
mov
push
push
pop
test
cmp
and
adc
or
mov
int
jae
sub
or
jge
mov
xchg
sahf
mov
bound
mov
jge
jp
dec
mov
jle
lods
push
jo
add
mov
imul
decl
or
pop
movsb
enter
push
mov
mov
in
pop
xlat
mov
inc
jbe
and
add
sarl
repz
fs
sub
pop
xor
xor
rclb
ljmp
hlt
xor
add
jne
rcll
sahf
and
sbb
faddp
stos
jbe
push
pop
cmp
xlat
fisttpl
xchg
fisubs
sbb
repz
cmp
adc
sbb
lcall
aad
jecxz
mov
or
cmpsl
daa
inc
adc
repnz
xor
fnsave
mov
cmpsw
jecxz
sbb
dec
int3
imul
mov
dec
xlat
and
jae
dec
sbbl
popf
imul
cmp
aad
and
or
sahf
bound
mov
lds
adc
mov
nopl
xor
mov
fsubrl
push
push
hlt
mov
mov
fcmovbe
ret
nop
push
mov
test
cwtl
das
addr16
jl
mov
mov
adc
sahf
xchg
ss
aas
adc
sub
cmp
mov
les
fidivl
std
enter
clc
cmp
mov
pop
loopne
adc
into
cmc
mov
dec
xor
mov
inc
xlat
fcomps
or
jl
lret
pop
sbb
inc
xlat
es
push
pop
mov
out
out
fiaddl
adcl
jo
mov
lahf
enter
mov
cltd
test
test
lock
stos
jae
push
dec
int
clc
imul
jnp
fwait
inc
cs
mov
inc
nop
scas
mov
and
leave
add
mov
mov
lds
xchg
insl
adc
push
test
mov
dec
fcoml
cmpb
add
jmp
and
add
mov
jmp
push
cmc
adc
sub
or
mulb
es
add
outsb
push
add
jmp
mov
lret
or
pop
dec
dec
and
mov
push
rcll
cmpsb
in
stos
daa
arpl
xor
movsb
inc
lret
mov
out
push
movsb
aaa
mov
scas
fisttpl
pushf
leave
pop
into
repnz
dec
pop
inc
shll
xchg
cmpsb
popf
ret
loope
add
shlb
test
cltd
fld
lods
outsl
repz
pop
call
or
adc
dec
add
cs
mov
jnp
xchg
pop
push
test
push
idivb
mov
or
roll
mov
inc
or
movsl
mov
loope
add
aaa
mov
repz
jp
cmp
sbb
cmpsb
ret
jle
into
cmp
mov
pop
aam
enter
xchg
fs
jecxz
shufps
popa
jg
jns
xchg
les
shlb
lahf
mov
outsl
imul
pop
mov
mov
subl
push
out
cli
daa
inc
adc
notb
mov
mov
rcr
sbb
pop
sub
andl
adc
imul
cmp
in
cmp
lds
mov
pusha
xor
popf
adc
test
and
or
stos
es
adcl
lods
les
loope
jbe
int
pusha
cmp
xchg
cwtl
or
lds
adcl
push
mov
pop
jne
pop
cmpsb
repz
push
jecxz
out
popa
in
sarb
mov
cmp
adc
jecxz
sub
push
mov
push
or
mov
xchg
sarb
xchg
mov
fistps
mov
insb
lock
movsb
movb
xchg
ret
enter
test
push
mov
add
push
jns
pop
push
aad
adc
inc
pop
xor
adc
imul
add
mov
cli
lds
cmc
push
sbb
scas
lcall
push
add
jbe
jg
push
fdiv
adc
and
sbb
mov
push
ror
lret
xorb
add
add
inc
popa
icebp
stc
jmp
scas
je
loopne
adc
testl
xor
push
outsb
jns
jns
insl
fwait
push
jae
subl
mov
mov
xchg
pop
cld
in
popf
pop
mov
cmp
sti
shll
inc
fldt
pop
icebp
ds
out
push
pop
js
pop
into
jae
sbb
xchg
push
mov
ffree
loop
push
jne
mov
pop
mov
cmpsb
or
xchg
aaa
mov
push
hlt
pop
pop
and
ret
fildll
jbe
push
xor
cltd
push
jbe
add
dec
ret
test
pop
stos
xchg
pop
rcrl
pop
inc
mov
inc
or
pop
adc
push
mov
cwtl
test
inc
pop
shlb
into
das
push
sbb
dec
and
xor
or
xor
jo
shl
ja
sbb
push
jle
arpl
xor
inc
filds
out
fstpt
dec
xor
xchg
adc
mov
ret
push
jb
or
loopne
fs
sbb
cwtl
adc
mov
cmp
adc
mov
movsb
imul
into
popa
loop
xlat
push
out
ljmp
fcompl
in
cmp
mov
xor
repz
sbb
jno
dec
imul
dec
pop
and
loop
pop
xor
std
dec
filds
lcall
xor
notb
sub
push
popa
cld
add
std
btl
mov
push
test
movsb
inc
enter
jg
hlt
cmpsb
sub
subl
in
xchg
jle
jne
mov
scas
imul
lcall
jmp
push
jl
loopne
out
jns
inc
pop
imul
shr
cltd
je
in
mov
jne
push
jmp
mov
jmp
imul
or
adc
pop
xchg
or
cli
insb
pop
jmp
ds
pop
stc
rcrb
lock
stos
jmp
pop
dec
je
test
adc
xor
or
fadds
xchg
jle
subps
ds
aam
pop
js
pop
es
add
mov
dec
add
nop
imul
pop
mov
loope
sub
fists
adc
out
cmpsl
mov
jmp
data16
pop
jmp
cmp
clc
push
mov
mov
dec
pop
aas
jae
call
xchg
jne
mov
cmp
stos
incl
imul
mov
or
out
popa
dec
outsb
inc
ljmp
inc
fldcw
mov
cmp
mov
test
in
dec
pop
mov
dec
es
pop
xchg
lea
mov
sub
pop
sahf
adc
sub
jae
dec
imul
enter
mov
xlat
xchg
jno
jmp
dec
aad
mov
orl
push
das
push
test
cld
popl
xor
lcall
mov
fstpt
pop
or
add
pop
lahf
sub
xorb
pop
sub
inc
cmpsb
fstpt
lds
or
and
ja
jbe
orb
call
out
jae
call
cmc
cmpsl
lods
int3
lcall
stc
or
dec
and
mov
les
mov
inc
xor
loopne
sub
lret
negb
scas
mov
test
into
rcl
cmp
cmpxchg
insb
inc
mov
pushf
fiadds
xor
jmp
and
lock
decb
dec
mov
inc
xor
mov
fidivl
pop
push
dec
fcoms
dec
repz
ja
in
xor
cli
test
push
and
pop
std
or
pop
jnp
loopne
xor
jmp
test
repnz
push
pop
ja
inc
mov
sbb
ret
mov
and
xor
rcrl
jb
xchg
sub
dec
cld
subb
fistpl
fcmovb
sub
pop
push
pusha
push
mov
mov
cmpsl
cmp
cmp
out
incl
leave
xor
push
push
push
repnz
jg
popa
out
xchg
dec
xor
lock
jo
xor
add
cltd
jle
push
mov
xorb
test
ja
lds
bound
xchg
dec
in
fwait
push
jb
in
in
and
sahf
out
push
call
loope
fcoml
cmp
lret
or
insl
sub
sbb
push
cmpsl
pop
fistpll
icebp
cmpsb
popf
add
loopne
ja
out
mov
sbbl
jbe
dec
mov
ljmp
and
pop
and
fsubrs
clc
sub
je
xor
mov
roll
jb
mov
jg
call
loop
push
cmpsb
dec
xchg
push
jl
xchg
scas
jne
lods
fbld
adc
xor
or
fisubrs
mov
cld
insl
rcr
jl
sbbl
and
mov
inc
out
cld
jnp
sbbb
fadds
pop
hlt
mov
mov
dec
rcll
or
dec
xlat
fsubl
in
daa
push
sbb
movsb
jo
add
enter
pop
scas
jno
adc
add
add
and
pop
dec
and
sarb
or
mov
iret
subl
add
mov
in
test
cld
mov
jp
shll
adc
xor
mul
sub
cli
hlt
and
push
mov
sbb
mov
push
fwait
pop
call
out
in
repnz
std
std
adc
lahf
dec
cli
or
push
xor
push
ss
je
dec
xor
cmp
xchg
push
repnz
es
add
stos
rorb
rcrl
inc
lret
jg
je
jne
mov
add
adc
cmpl
mov
mov
pop
in
loope
lret
cmp
popa
loopne
xchg
xor
xchg
loope
imul
jno
pop
imul
xchg
dec
mov
inc
adc
cmp
lret
popf
ret
dec
mov
repnz
vmovntps
mov
call
mov
ds
xor
icebp
xor
in
gs
dec
loop
xchg
aam
out
add
mov
jne
das
dec
cltd
fcoms
inc
ror
pop
cmpsl
push
or
or
ljmp
jmp
cmc
and
jo
and
fildll
push
test
popf
aas
xchg
sbb
jecxz
jmp
sbb
mov
push
pop
std
cltd
aam
cltd
push
popl
add
xor
out
jp
stc
xchg
lea
sbb
push
out
push
stos
cwtl
push
jae
ljmp
sbb
push
and
cwtl
inc
enter
shlb
add
filds
cmp
jno
jecxz
mov
push
dec
imul
fbstp
xchg
pop
iret
subb
add
ret
jge
lods
inc
push
pop
ds
ss
mov
cwtl
loope
inc
fisttps
ret
icebp
add
sub
outsb
addr16
push
or
in
cmp
shrl
push
leave
mov
pusha
testl
test
outsb
push
mov
inc
dec
inc
sbb
insb
xchg
mov
sub
cld
xor
push
outsb
addb
ljmp
sbb
push
adc
add
and
dec
scas
add
insl
mov
lahf
ss
xchg
add
mov
cmp
add
adc
es
enter
clc
xor
and
filds
in
insl
scas
and
orl
lcall
cmp
mov
es
or
xchg
cmp
or
rol
bnd
subl
cmc
mov
imul
stos
aam
test
or
inc
sbb
lods
lcall
lret
int
inc
dec
aas
in
cmpsl
dec
cli
insb
dec
mov
test
arpl
mov
fwait
out
shrb
jno
cwtl
add
loope
int3
arpl
aaa
cld
and
jmp
mov
cmp
xor
lret
xchg
ljmp
cmp
sub
iret
cmp
mov
dec
les
inc
sbb
mov
and
or
sarb
lea
scas
out
pop
mov
pop
cltd
sub
adc
and
cmp
dec
pop
daa
inc
xlat
fnstsw
ret
mov
mov
cmpsb
xchg
xor
mov
push
shrb
lea
xor
pop
fs
mov
mov
fsubrp
pop
jns
or
cmpsl
outsl
push
pop
movsb
mov
cli
clc
shr
ss
xchg
mov
fs
test
insl
sbb
ret
or
jns
mov
mov
insb
pop
xor
inc
xchg
mov
push
pop
daa
cmp
je
add
daa
sub
pop
jp
dec
inc
and
cmc
mov
mov
fsin
popl
sub
aam
andl
mov
sub
sub
dec
mov
adc
cmpsb
gs
insl
lock
je
push
mov
push
jge
shll
push
cwtl
mov
arpl
sbb
aaa
loop
push
or
mov
dec
and
and
cmpb
out
mov
lahf
sti
stos
inc
je
pusha
mov
pop
ss
icebp
dec
or
pop
loopne
jmp
xchg
scas
ficomps
sub
pop
add
aam
sbb
xor
jbe
popf
add
mov
fistps
push
or
xchg
add
je
and
mov
push
xchg
mov
adc
sbb
mov
aaa
out
push
sti
pushf
cs
test
push
push
mov
mov
dec
les
xlat
repnz
cmpsb
push
add
sbb
jo
push
adc
fimuls
push
mov
mov
sarb
fbstp
cld
jle
sub
stos
inc
or
fstpl
cmp
insl
jnp
push
mov
lret
jne
movb
push
push
pop
sub
mov
cmp
mov
mov
inc
pop
pop
ror
filds
push
les
dec
sub
repnz
mov
add
mov
jne
mov
mov
call
insl
or
insl
add
sub
add
inc
cwtl
sbb
inc
lock
pop
andb
clc
mov
jnp
lret
adcb
pop
shrb
imul
mov
cwtl
insb
arpl
pop
pop
dec
divb
sbb
push
jne
mov
jmp
xor
push
mov
or
sub
cmp
mov
mov
jnp
fnsave
mov
std
or
jle
mov
loop
push
dec
pop
icebp
push
jle
imul
inc
cmp
pop
sub
pusha
push
adc
subl
jecxz
mov
mov
loop
into
cmp
fildll
add
xchg
test
sub
inc
and
shlb
xor
sub
mov
scas
aad
pop
fwait
add
xor
lcall
and
sti
adc
mov
cltd
cli
fnop
les
jg
sbb
cmp
fs
xorl
mov
lahf
ret
and
push
insl
outsl
mov
inc
cld
sbb
fsts
xor
or
jg
int3
fwait
sub
sub
iret
mov
adc
leave
nop
pusha
btr
inc
inc
or
push
insl
mov
pop
sub
jnp
clc
and
fistpll
cltd
inc
pop
shlb
in
int3
jl
add
adc
dec
or
jns
cmpsb
repnz
sbb
adc
aad
sbb
rorb
lods
fwait
mov
add
cmpsl
cmpsl
repz
xor
scas
icebp
daa
lcall
adc
lea
mov
push
jnp
and
adc
adc
neg
or
lods
inc
jb
dec
cltd
aad
push
lea
insb
cli
xchg
lahf
cs
scas
and
ret
pop
push
and
loope
call
stc
mov
scas
ss
sbb
push
xor
sub
mov
push
mov
xchg
inc
fistl
ja
push
sbb
imul
push
xchg
mov
mov
lret
movl
sub
inc
inc
or
repz
out
xorl
inc
ficompl
inc
sahf
es
fucom
fisubrs
inc
test
fdivr
subb
outsl
inc
sub
cmp
nop
sarb
inc
xchg
dec
dec
pusha
cmp
pop
imul
lcall
fcomps
cmc
aaa
pop
sbb
daa
stos
addr16
push
lods
mov
mov
add
cmc
mov
lea
sbb
or
imul
jnp
xlat
pop
mov
popf
sub
sub
xor
cltd
clc
push
dec
sub
fbstp
pushf
lods
iret
and
andl
in
jo
inc
loope
repz
and
adcb
or
fldenvs
jo
inc
add
stos
inc
mov
scas
test
sbb
dec
test
fwait
push
popf
push
lcall
js
mov
sbb
or
bound
call
test
in
popf
fisubrs
and
push
jno
sbb
jp
pusha
hlt
scas
sbb
inc
mov
int
pusha
ss
push
pushl
push
outsb
push
sub
push
data16
pushl
jp
push
sti
es
sub
test
jbe
mov
pop
xor
addb
mov
in
dec
ret
or
gs
aam
xor
push
inc
dec
fbld
mov
pop
hlt
or
and
iret
cmpsl
ds
int3
pop
call
rorb
outsl
sbb
stos
out
sub
cmpsl
add
fsubr
cwtl
and
lea
loopne
inc
push
lds
decl
xor
add
mov
mov
lods
mov
outsb
aad
cmp
mov
scas
mov
sbbl
enter
push
mov
push
jl
add
imul
into
xchg
mov
lods
adc
cmpsb
cmc
aas
ret
call
cmp
mov
cmp
xor
pop
push
imul
ret
cmp
dec
cmp
inc
xchg
sub
mov
dec
sub
or
cmp
imulb
and
mov
xchg
cmpsl
out
movsb
sbb
or
xchg
add
mov
adc
sub
inc
ss
inc
push
xor
test
adc
out
pop
mov
adc
push
jecxz
fstl
jle
and
lea
repz
mov
mov
pop
and
jecxz
ret
lret
es
xor
and
add
dec
and
xchg
aam
movsl
push
fsubl
fwait
leave
pusha
sub
adc
aaa
dec
inc
cli
pushf
rcl
and
pop
out
pusha
ss
int
fsts
cwtl
jno
jmp
in
jbe
inc
imul
pusha
jp
jg
mov
pop
inc
ds
sbbb
sbb
push
or
mov
aaa
jbe
bound
js
xchg
adc
adc
js
jne
and
jg
jg
inc
test
insb
scas
and
orl
adc
pop
imulb
dec
shl
fdivrs
filds
cmc
push
in
call
ljmp
fs
jo
pop
xchg
jns
xchg
outsl
outsl
stc
jl
and
xchg
inc
addr16
sbb
dec
mov
add
iret
xor
pop
js
add
les
lret
lods
xchg
xlat
push
aam
add
adc
jb
call
into
adc
jmp
data16
jp
xor
stos
loopne
push
roll
sbb
dec
in
in
lcall
mov
imul
mov
mov
push
mov
fstp
push
xor
mov
sbb
push
pushf
cli
xor
lock
jp
mov
push
sbb
nop
jg
in
lods
jl
dec
test
add
pushf
aaa
fsts
pop
push
stos
sub
fcomi
sahf
sub
pop
mov
xor
mov
xchg
mov
mov
dec
scas
mov
inc
jp
dec
and
scas
cmpsb
and
fsubrs
mov
notb
addr16
dec
dec
sub
inc
sub
pop
fimull
sub
sub
frstor
cmp
out
jl
sbb
mov
mov
xchg
mov
cmpsl
pop
imul
sbb
mov
outsb
pop
test
and
adc
es
cmc
movb
mov
fimuls
or
cwtl
jle
ret
xor
aam
lock
add
test
lods
mov
mov
fisubrs
cmp
stos
dec
pop
ret
sub
xchg
dec
bound
push
adc
lahf
test
or
pop
inc
out
icebp
movsl
repz
je
cld
and
jno
bound
orb
cmp
jmp
mov
div
jns
jp
sub
mov
js
mov
mov
fisttpll
fdivs
mov
inc
sti
shrb
xchg
push
or
sarb
shr
hlt
dec
pop
fptan
jle
cs
mov
xchg
jl
xor
mov
lret
push
sub
ret
out
hlt
inc
aaa
jbe
lcall
pushf
inc
lds
inc
imul
mov
ret
pushf
scas
push
cwtl
mov
roll
jns
lea
cmp
or
jmp
pushf
scas
mov
test
fs
push
adc
or
scas
xchg
push
sub
jae
mov
xchg
sbb
out
cld
pop
loope
jns
push
pop
push
iret
int3
xor
pushl
mov
and
fistl
mov
pusha
sbb
mov
pop
jmp
cmp
lods
das
iret
mov
xor
rcrl
dec
mov
sbb
mov
mov
mov
inc
cmpsl
dec
cmp
inc
testl
mov
cmc
or
push
ret
mov
push
xor
pop
mov
fcompl
jno
repz
das
cmc
add
jmp
nop
jne
xor
mov
shlb
addl
sub
jns
dec
push
adc
test
push
pop
popf
shll
cmc
pop
das
fwait
mov
sahf
loope
movsb
xlat
hlt
xor
dec
idivb
outsl
mov
stos
test
push
add
jbe
mov
dec
push
lods
and
lcall
dec
push
ljmp
pushf
xor
dec
inc
pop
loop
lds
mov
aad
and
rcl
in
stos
jbe
fwait
mov
rclb
out
dec
sbb
xor
fsubl
outsb
adc
push
inc
jmp
pop
adc
mov
xor
xor
cld
jno
aaa
cs
sbb
cltd
pop
and
je
inc
mov
lahf
adc
ja
int
daa
rorl
cli
mov
ja
mov
mov
into
clc
aam
mov
inc
pop
sahf
xchg
lret
pop
rcrl
cmp
xor
dec
out
cwtl
and
insl
dec
ret
stc
shrl
cmpsb
cld
jns
xor
adc
loop
pop
dec
lods
nop
por
daa
jmp
xor
cmp
pop
loopne
scas
push
out
fmuls
shlb
cmpsl
sti
cmp
sub
pop
or
lds
mov
scas
inc
mov
or
mov
test
cltd
insl
daa
jmp
pusha
in
stos
rcr
sbb
mov
push
nop
mov
call
jp
xor
jns
fstps
mov
mov
sbb
lds
mov
mov
outsb
jl
mov
sbb
stos
mov
test
cmp
test
pop
xor
push
sbb
or
or
adc
push
push
daa
cltd
xor
fcompl
cmp
mov
movsb
stos
gs
cmp
and
pushf
jae
stos
call
mov
cmp
andl
or
xchg
pop
or
dec
cld
psubsw
sbb
andl
mov
xor
pop
fists
test
sub
xlat
jne
pusha
fildll
pop
mov
fdivl
xchg
push
push
shl
addl
popa
or
arpl
hlt
clc
jns
andb
loopne
aaa
inc
sbb
add
inc
mov
sub
inc
and
push
pusha
dec
xor
cs
test
mov
loopne
push
xchg
dec
mov
rorb
jb
push
call
pop
jge
addb
push
adc
dec
mov
adc
pop
in
aad
sbb
dec
and
cmpsl
jo
pop
into
inc
push
int3
js
pushf
jmp
xchg
mov
xor
xor
push
push
fmuls
orl
pop
pusha
arpl
jp
lahf
mov
aam
cli
pop
ret
or
aad
lahf
jbe
mov
out
jg
std
cmp
cmp
adcb
jae
or
andb
push
out
push
push
pop
cmp
fdivrs
sbb
sbb
iret
add
movsl
loop
adc
inc
imulb
cmp
xlat
pop
push
icebp
and
push
cmpsb
push
stos
ljmp
repnz
rcl
jnp
jp
or
aam
ja
xsha1
cmpsb
leave
gs
leave
fwait
aad
lea
pop
mov
dec
loope
cmp
jle
stos
pop
shr
shll
into
add
inc
xor
ljmp
sub
rcl
arpl
mov
icebp
xchg
lret
sub
and
sub
sbb
jecxz
mov
ja
fiaddl
adc
unpcklps
in
cmp
mov
jno
lods
push
loopne
push
xorb
or
lods
mov
pop
xor
inc
scas
mov
mov
fstps
push
or
idivl
pop
cmp
mov
les
mov
jl
add
loopne
pop
add
popa
repnz
in
out
push
test
and
add
pop
jns
adc
push
jae
add
sbbl
into
mov
mov
sub
fistl
cmp
imul
xor
movsl
call
cmp
lods
in
loopne,pt
jo
xor
push
jne
mov
popf
lret
call
jae
sarb
stc
xchg
jl,pn
xchg
cmp
inc
cmc
pushf
xchg
nop
xlat
pop
sahf
and
int
orl
sahf
adc
int
and
mov
lret
data16
bound
fiadds
sbb
out
add
and
adc
jl
add
push
push
fsubrs
jle
xorl
fs
push
jb
jecxz
inc
sub
shl
cmp
jae
jnp
add
pop
xorl
lahf
push
in
inc
or
aad
jp
mov
in
cltd
arpl
nop
push
loopne
mov
xchg
push
rcrb
add
dec
or
pushf
stc
aaa
and
sub
dec
add
jg
mov
add
fidivrs
xor
cmp
xchg
xor
ljmp
daa
stc
mov
sub
test
jnp
test
out
orl
out
popa
pop
push
ljmp
sub
cltd
and
fistpll
inc
pop
dec
fwait
stos
mov
mov
popf
cs
or
rcl
es
sbbb
add
cmp
dec
add
arpl
scas
and
or
jbe
mov
push
insl
pop
pop
hlt
fmull
jecxz
xchg
std
jnp
mov
popf
xor
lcall
cli
mov
loop
faddl
mov
test
jne
clc
in
ret
xor
popa
jo
int3
mov
mov
jge
adc
sub
lods
adc
cmp
imul
inc
sbb
inc
fmulp
clc
popf
fidivs
xchg
xchg
add
loop
sbb
cs
cmp
jl
inc
pop
pop
mov
in
dec
aam
jno
jmp
adc
rcr
jmp
cmp
dec
pushf
imul
js
sbb
insl
sbbb
fcoms
mov
je
es
rolb
daa
mov
lcall
lahf
xchg
hlt
arpl
xor
je
add
cld
xchg
pop
mov
mov
je
icebp
shlb
add
fnstcw
bound
xor
vmwrite
lea
and
shl
xor
mov
aas
fisubl
mov
subb
mov
inc
in
jg
mov
lods
fadds
or
xchg
xor
addb
cmp
cmc
mov
in
test
inc
push
fsubrp
arpl
jo
push
lods
shrl
push
push
std
or
jne
xor
pop
popf
and
pop
faddl
pop
lcall
dec
loop
aam
sti
imul
stos
std
cmp
mov
adc
xchg
std
and
stos
ljmp
dec
aam
in
loopne
mov
int
cmc
mov
dec
cli
in
inc
mov
daa
jnp
xor
subl
cwtl
or
std
pop
cmova
jns
movb
dec
dec
cmpsl
xor
pop
idivb
lea
or
mov
inc
jle
sarl
mov
xchg
mov
pop
repz
adcb
or
and
out
pop
loope
mov
pushf
cli
repz
sub
cmp
mov
mov
push
xchg
xor
bound
jle
clc
fdivrs
into
fwait
test
inc
leave
nopl
push
in
fcos
sbb
adc
stos
or
jbe
nop
inc
data16
mov
inc
cmpsl
and
mov
push
lds
dec
xor
dec
cmp
xchg
cmp
inc
pop
xor
and
mov
sbb
sub
cmp
or
jp
inc
jnp
jge
ss
mov
movsl
push
mov
cli
enter
mov
lods
in
into
ss
xlat
test
fs
jl
movsb
push
pop
push
push
or
test
pop
repnz
fwait
outsb
push
out
outsl
test
mov
add
cmp
nop
inc
push
mov
adc
inc
jecxz
movsl
and
cwtl
aam
fdivs
cwtl
repz
popa
xor
jmp
lds
sbb
pop
sbb
repz
add
xor
addr16
sbb
adc
popa
jnp
stos
inc
out
sbb
adc
enter
int3
fldl
adc
jnp
lea
push
cmp
pop
int
mov
les
pop
sti
xchg
into
lcall
les
cmpsl
ret
inc
shr
popf
push
in
fwait
xor
jle
popa
sub
inc
cmpsb
neg
jl
ds
sub
jecxz
push
push
ret
icebp
cmp
and
test
inc
leave
je,pn
cs
mov
mov
inc
jo
fists
aam
mov
fs
inc
xchg
inc
out
out
lret
push
in
orl
or
pop
cmp
rcrl
push
out
mov
inc
jge
jg
in
pusha
and
xor
cld
ret
loopne
out
sbb
in
hlt
add
aam
out
je
push
push
pop
mov
and
insl
data16
cmp
out
in
mov
mov
mov
push
out
cmp
lds
and
add
cmp
and
xor
inc
out
sub
dec
test
and
jns
mov
mov
stos
loope
push
icebp
enter
hlt
xor
push
nop
mov
cmp
out
push
sahf
lock
pop
fsubrs
xor
mov
jo
mov
pop
xor
xor
mov
adc
cmp
mov
movsb
pop
adc
addl
or
loopne
push
mov
xlat
push
xor
jns
lds
imul
mov
lret
loopne
add
insl
add
jne
push
mov
dec
mov
int
cmc
mov
xchg
or
repz
mov
insl
movsb
movsb
scas
ljmp
call
lock
push
sbb
aaa
ja
adc
filds
testb
lret
sti
shrb
icebp
imul
push
xchg
inc
jae
mov
ret
xchg
cmp
notl
xor
sub
pop
jb
xchg
sub
mov
out
inc
xchg
adc
jnp
ret
sbb
jns
aad
jp
push
test
lock
mov
or
mov
sbb
push
push
inc
pop
iret
mov
insl
mov
fimuls
fdiv
cmp
mov
outsb
mov
xor
inc
cmp
pop
cmp
popa
pop
xor
icebp
stos
mov
or
dec
jmp
fsubrl
mov
sahf
or
out
aam
jle
jno
cmpsl
jecxz,pt
insb
mov
sbb
add
adc
fwait
je
lock
int
lcall
scas
sub
push
fdivl
lret
xor
sbbb
dec
test
lret
sub
ss
and
bound
and
fstps
ret
cmp
or
pop
in
not
jl
mov
push
arpl
pop
cltd
dec
pop
jp
cmp
xorl
pop
int
ljmp
pop
adc
xchg
sub
fdivp
mov
scas
data16
xor
ficomps
frstor
push
cmovno
lcall
inc
cli
jae
xor
pop
clc
and
push
test
arpl
leave
fsts
or
jmp
bound
push
in
jb
das
lret
out
popa
dec
mov
ljmp
xchg
mov
popl
pusha
rcrb
icebp
enter
mov
ljmp
push
cmp
sbb
pop
sbb
sbb
jg
lods
ljmp
cmc
push
repz
push
movsb
or
adc
xchg
pop
lret
daa
cmp
jl
pop
addl
adc
js
add
xchg
loope
call
add
dec
stos
cmp
shll
test
cmpsb
imul
and
and
out
and
jle
pop
cmc
dec
jnp
mov
pop
fdivrl
js
in
jno
dec
test
mov
adc
sub
orl
stos
mov
pop
xor
mov
test
shrb
aas
xor
fiaddl
mov
inc
cmp
sbb
and
push
xchg
jmp
popa
hlt
int
fldenv
stc
xchg
pop
movsb
xchg
stos
add
mov
dec
hlt
push
cs
mov
jmp
pop
push
jle
shlb
std
std
mov
cltd
pop
andb
jae
movsl
mov
adc
and
call
js
pop
test
and
push
pop
cmpl
in
dec
pop
sub
popa
fldt
nop
mov
push
hlt
sub
add
cmp
gs
movsbl
cld
and
or
gs
jns
mov
or
mov
test
pop
or
sbb
das
xchg
mov
mov
or
adc
mov
popa
and
scas
cmp
jae
jg
mov
or
push
loopne
xchg
ret
stos
inc
mov
pop
xor
icebp
jo
outsl
daa
inc
enter
jne
ss
out
test
cs
and
cmc
jbe
xlat
out
xchg
sbb
mov
mov
push
or
mov
jmp
jo
sahf
dec
mov
in
outsb
sub
loop
fsubs
movsl
les
xchg
xor
out
daa
in
repz
in
xchg
jne
mov
fldenv
adc
push
xlat
sub
pop
lock
repz
mov
xor
xchg
daa
cmp
retw
js
hlt
jnp
adc
jg
dec
ja
shr
fcomps
or
xor
xchg
add
mov
repnz
test
or
dec
inc
jns
loope
into
rolb
lahf
jo
mov
sub
add
addr16
jo
shll
je
test
popa
push
cli
ret
jae
dec
jecxz
mov
popf
add
xor
jb
push
push
pop
stc
div
push
xor
push
in
popa
or
pushl
jo
sbb
mov
cmp
popa
cmp
out
scas
lcall
into
lret
aam
push
or
popf
jo
mov
mov
dec
push
fiaddl
in
out
pop
jmp
insb
pop
push
mov
jp
sub
addb
scas
pop
inc
mov
sub
lret
int3
icebp
xor
xchg
addr16
hlt
and
fidivs
scas
sbb
fidivs
sahf
push
inc
push
mov
or
add
out
push
popf
aas
mov
aas
sbb
jnp
insl
adcl
lahf
push
xor
fstps
sub
js
push
fcoms
sahf
xor
inc
in
aaa
pop
push
jecxz
ret
lahf
adc
outsb
pop
test
xorb
fwait
jbe
fistpl
fs
sbb
repz
popa
sub
and
jge
or
and
mov
mulb
iret
sub
outsb
fbld
ds
shlb
or
xchg
jle
add
loope
ss
jns
jecxz
insl
lcall
ljmp
lret
sbb
lea
repz
mov
cmpsl
mov
pop
cs
std
and
lea
out
xchg
mov
jae
test
ret
xchg
js
js
enter
leave
ret
adc
dec
out
aas
add
shll
out
and
adc
insb
enter
int
add
inc
ljmp
mov
fldcw
jg
cmp
into
loope
idivb
push
testb
jbe
pushf
dec
shll
jp
call
inc
mov
orl
mov
dec
mov
cltd
std
or
and
mov
adc
lds
hlt
popa
cmc
loopne
sub
clc
sahf
icebp
call
test
shll
daa
and
std
inc
shl
std
mov
xor
mov
cmp
inc
cmp
or
mov
adc
add
scas
xchg
add
add
mov
pop
pop
into
mov
clc
aad
mov
mov
mov
mov
mov
insl
aad
stos
jno
pusha
mov
fidivrl
bound
popa
and
iret
call
dec
jno
fwait
jmp
inc
rol
mov
push
shl
and
mov
mov
dec
fisubl
lods
ss
jecxz
or
pop
loopne,pt
dec
fcmovnb
test
mov
out
mov
adc
lds
push
int
push
cmp
mov
sbb
ret
pop
push
cmp
data16
fimull
push
mov
js
xchg
fdiv
enter
push
pop
orb
lret
sti
xchg
mov
inc
adc
pop
repz
jge
jmp
xor
int3
sbb
ret
dec
sbb
push
inc
and
mov
pop
xchg
or
cmp
mov
mov
lds
cli
es
cmp
xchg
inc
je
sub
or
cmp
or
xchg
xor
xchg
and
inc
loope
dec
jecxz
sbb
cmp
xor
jge
jbe
jne
fcoms
pusha
add
mov
test
mov
xchg
sti
mov
les
ret
scas
push
pop
xchg
mov
test
nop
pushaw
fadds
ds
xor
in
push
inc
ss
or
lods
mov
push
jle
jnp
jp
pop
push
sbb
push
mov
scas
out
jo
fs
outsb
mov
or
lcall
lcall
or
mov
pop
int3
outsl
ror
and
mov
leave
or
or
sub
fsubrl
sub
push
rcrb
or
mov
mull
mov
int
inc
add
push
sbbb
xlat
xor
es
js
cli
cmpsb
xchg
lods
inc
leave
add
xchg
subb
jno
cmp
cld
dec
fisubs
lret
je
mov
call
dec
xor
insb
lock
cmp
pop
adc
xchg
bound
jle
addl
push
add
xor
cltd
inc
xor
ss
cli
lcall
test
lcall
movsl
adc
push
mov
insb
mov
cwtl
das
jbe
xor
jle
add
lahf
mov
fwait
dec
setbe
xchg
sub
adc
hlt
ret
or
neg
jg
push
mov
scas
pop
aaa
pop
shlb
mov
rcl
mov
mov
ss
push
adc
shll
dec
and
daa
std
xchg
push
arpl
sbb
sbb
xor
push
jbe
fidivrl
pop
xchg
xchg
push
dec
mov
jp
mov
sbb
dec
pop
std
cltd
aam
xchg
xchg
cmpsl
in
stos
pop
mov
cltd
mov
inc
and
push
jo
pop
cmpsl
testb
daa
mov
add
push
jae
pop
testb
lods
outsl
pop
ja
jb
ss
pop
daa
stos
cmpsl
push
xor
mov
mov
lahf
jp
leave
mov
std
inc
jnp
frstor
xor
pop
xchg
stc
fnsave
outsb
lds
push
dec
pop
int
pop
cmp
dec
out
std
cmc
jge
push
sub
jbe
pop
lods
jmp
jbe
jmp
sbb
stos
push
shr
ret
test
shl
jns
out
scas
jmp
loope
or
mov
iret
jb
pop
lock
mov
lahf
push
jmp
xchg
mov
dec
mov
or
push
mov
sbb
ficoml
imul
sbb
mov
jns
push
cmp
pop
shlb
cmp
arpl
cmp
pushf
mov
stc
cmpsl
movsl
das
out
lret
adc
inc
in
stos
fcoms
jle
sbb
scas
out
dec
push
sub
and
popa
mov
dec
jno
daa
cmp
mov
lods
loopne
xorl
inc
cmp
add
addl
cmp
ret
adc
cltd
ljmp
lcall
in
mov
push
pop
cmp
fs
fsts
jbe
das
cld
dec
jecxz
dec
xor
dec
push
xchg
pop
call
mov
sahf
in
and
aaa
mov
pop
decl
or
xchg
cmpsl
adc
mov
or
ljmp
inc
cmpsl
aas
clc
sbb
pop
sub
out
dec
jnp
lods
and
push
into
push
xchg
pop
pusha
pop
aas
xchg
pop
sub
in
flds
inc
push
lods
push
fnstsw
ljmp
call
cmpsb
sbb
sbb
xchg
xor
mov
add
arpl
pop
sti
test
test
inc
lods
movsl
mov
mov
cmp
or
fidivrl
ss
pop
lods
imul
shlb
repnz
and
or
daa
mov
js
and
xchg
dec
jge
dec
pop
shrb
nop
pop
ror
ret
xor
mov
mov
and
mov
jl
cmp
mov
and
cmp
add
scas
push
int
push
out
push
xor
daa
inc
repz
lock
icebp
mov
repnz
sub
jae
pop
dec
dec
sahf
test
sub
daa
in
jne
icebp
outsl
cmp
push
jae
icebp
add
arpl
sbb
test
adc
or
leave
fwait
leave
outsl
jecxz
in
icebp
dec
add
icebp
repz
push
push
lds
fs
adc
push
inc
idivb
push
push
mov
daa
clc
adc
test
out
or
pop
repnz
jbe
add
xchg
shll
hlt
mov
lea
xchg
mov
movsl
bound
pop
jno
popf
jg
out
cmp
loop
mov
in
in
push
xchg
hlt
imul
mov
mov
aam
dec
int
jb
shlb
sbb
and
insl
leave
inc
inc
pusha
shlb
xchg
mov
inc
sub
xchg
repz
icebp
mov
stos
inc
sub
jne
mov
mov
mov
lret
repnz
insl
xchg
sub
mov
xchg
ljmp
mov
loope
dec
shr
xchg
xor
sahf
in
stos
dec
insl
pop
xor
popf
fsubr
stc
add
jmp
push
decl
xor
sub
loope
lock
aad
data16
sbb
dec
pusha
adc
mov
addr16
push
jl
cmc
pop
adc
push
cmp
in
mov
bound
mov
gs
sahf
xor
imul
fnstenv
ja
xchg
pop
sub
scas
mov
cmp
lea
pop
lods
inc
daa
or
adc
mov
push
xor
sbb
lods
xlat
mov
aad
lahf
push
fs
into
mov
stos
shrl
test
sub
sub
mov
out
pop
and
lods
pextrw
jecxz
sub
or
adc
or
outsl
xchg
dec
testb
jbe
or
xchg
shll
notl
cmpl
dec
stos
lahf
mov
je
sub
popa
jp
jg
outsb
addl
sbb
inc
sti
jg
sub
clc
inc
xchg
dec
addr16
lret
pop
and
sub
adc
pop
dec
jbe
adc
push
orb
cld
adc
mov
fsubl
push
pop
jmp
pop
ret
imul
out
dec
out
inc
mov
pop
hlt
and
jnp
cmp
xchg
je
gs
mov
popa
enter
cmp
cs
movntps
repnz
dec
addr16
iret
mov
js
fistps
jmp
sar
ss
ror
mov
push
in
jbe
jae
ljmp
adc
pop
jg
ds
mov
xchg
cltd
jp
cwtl
mov
enter
repz
out
lret
jne
in
inc
pusha
or
in
add
add
xor
aas
adc
repnz
inc
idiv
jg
jne
sub
stos
out
mov
adc
test
fisttpl
and
push
inc
mov
sub
popf
xor
int
das
mov
xchg
repz
mov
leave
push
cmp
mov
push
and
fisttpl
shrl
ljmp
cs
lock
xchg
and
cmp
fadds
cmp
cmp
dec
cld
push
mov
sarl
pop
and
ja
sub
scas
cmp
push
xchg
mov
ja
sbb
rcrl
mov
and
jnp
adc
shl
icebp
ret
mov
pushf
xchg
push
loopne
fcoml
inc
jbe
faddl
push
lock
inc
push
dec
cmpsl
dec
xchg
in
jne
cmp
popa
sub
addl
add
push
out
and
jae
imul
pop
divl
xchg
xchg
lods
and
movsl
imul
pop
cmpsb
lock
xchg
stc
push
mov
insb
pusha
xlat
mov
dec
add
xor
mov
mov
lock
cmp
stos
add
fs
icebp
mov
loop
leave
or
fs
fisttpll
jmp
inc
and
pusha
fcomi
cld
pop
xor
imul
clc
sbb
pop
aam
fsubrl
mov
pop
mov
testl
mov
cmpsl
xor
insb
jle
adc
addr16
ffreep
add
sub
pop
jp
adc
fcomps
jnp
pop
cmp
mov
rcrl
adc
push
icebp
stos
cli
xrelease
movsl
fisttps
or
out
pop
or
clc
adc
sub
xchg
cmc
dec
add
js
andl
pop
jecxz
lds
cmpsl
repnz
or
ja
and
mov
shrb
out
fucomip
mov
pop
add
dec
add
and
xchg
ja
mov
push
or
hlt
inc
sbb
ret
sahf
bound
iret
xorb
repz
dec
xchg
sub
dec
add
cs
mov
dec
cwtl
push
xchg
jge
jae
xor
or
push
popa
imul
bound
aaa
into
mov
and
and
sbb
jb
cmp
repz
jg
ret
sti
jb
daa
and
loop
ds
lock
fidivrs
or
stc
fisttpll
xchg
xchg
sub
pop
mov
addr16
jl
push
arpl
inc
into
pop
fistps
shll
out
xor
rclb
pop
clc
ja
jg
clc
jo
es
loop
popl
mov
jg
jmp
add
ja
and
jmp
fbstp
pop
leave
mov
stc
nop
fidivrs
jg
aam
mov
repz
jae
xchg
mov
adcl
fildl
cmpsb
xchg
int3
mov
or
xor
sub
aam
push
je
xor
jmp
adc
rcll
mov
and
mov
xchg
sbbl
mov
pop
out
nop
pusha
pop
pop
sahf
sbb
cmp
faddl
jno
inc
addr16
clc
and
mov
das
lock
and
mov
inc
out
cmp
fwait
mov
testb
shlb
lock
fwait
xor
fldpi
btr
mov
insl
ret
inc
inc
xor
aad
mov
sbb
icebp
or
sub
rol
sarb
out
xor
pop
mov
movsb
push
sub
nop
out
negb
sub
jbe
cmp
push
and
pop
dec
pop
mov
arpl
push
scas
fwait
addr16
scas
jl
fdivl
shrb
test
sbb
push
xchg
push
mov
mov
test
cmp
stos
or
popf
int3
adc
sbb
mov
jne
and
popf
adc
es
push
mov
faddp
idivl
push
pop
gs
mov
add
or
push
adc
dec
cmp
arpl
mov
in
xor
add
cli
mov
int
sete
xchg
pop
cwtl
out
mov
outsb
sub
xor
pop
ret
mov
pushf
jmp
jge
outsl
mov
inc
jecxz
sbb
or
aad
sbb
pusha
xchg
jecxz
mov
popa
stos
leave
vmovmskps
mov
fsubrs
xchg
fcmovnbe
mov
mov
iret
xor
jg
ficoms
loopne
lea
gs
jmp
inc
or
out
into
push
cmpsb
rcl
and
std
pop
adcb
xor
pop
scas
cmpsl
mov
lcall
sub
test
xchg
outsl
daa
fwait
adc
mov
xor
call
call
imul
sbb
xchg
cmp
jo
int
jbe
sbb
mov
repz
mov
lret
lea
inc
push
lods
scas
push
test
push
jae
jbe
jno
xor
lahf
ljmp
fwait
sti
and
push
cmp
fiadds
imull
push
push
ficomps
mov
shll
mov
cmp
shr
xor
push
adc
sti
loop
add
cwtl
std
sub
xrelease
mov
jns
add
sbb
addr16
sub
mov
push
cmc
and
mov
mov
outsl
mov
test
add
mov
xchg
xor
rol
ficompl
sbb
stos
adc
mov
mov
or
xchg
cltd
mov
push
and
adc
dec
sbbl
cs
lret
loope
mov
mov
xchg
pop
movsl
leave
xor
and
call
pop
adc
lds
push
mov
lret
mov
pop
movsl
push
inc
fistpll
fsubrl
xlat
repz
mov
mov
call
mov
jnp
rclb
cs
lock
xor
push
inc
pushf
xorb
ja
mov
popa
aad
push
shll
pop
jo
fisubs
outsb
fdivrl
mov
fs
stos
aad
sub
sbb
fists
mov
mov
stos
xchg
popa
jnp
lret
jp
std
in
inc
shrl
and
pop
push
mov
lds
jne
outsl
es
pop
nop
mov
or
arpl
mov
outsl
sub
sbb
pop
jge
jmp
ss
fbld
inc
pop
outsb
push
loop
es
rcl
jmp
outsl
mov
mov
out
data16
mov
sbb
lds
and
mov
ret
push
mov
push
adc
adcb
shl
jno
imul
or
lods
lret
dec
in
inc
push
jne
push
mov
lret
bound
out
push
lahf
loope
adc
addl
fdivrs
pop
ds
aad
add
xor
pop
loope
inc
cwtl
jg
adc
rolb
xchg
addr16
xlat
dec
xchg
andl
daa
dec
out
pusha
in
ret
sbb
adc
xor
cmp
inc
loope
sti
fisubl
daa
adc
mov
jne
mov
fidivrl
inc
fyl2x
jp
lret
xor
pushf
inc
dec
mov
sub
bound
xor
cmp
enter
in
lods
aad
xchg
push
or
xlat
repz
jae
outsl
jecxz
popf
lods
test
idivb
stc
lods
pusha
ss
cmc
adc
mov
pusha
sbbb
sub
repz
xor
subb
mov
mov
lahf
fistpl
sbb
enter
dec
dec
dec
inc
pop
sbbl
outsl
lds
pop
add
or
shll
ljmp
mov
les
idivb
jb
inc
sbb
push
pop
dec
iret
fwait
scas
out
push
push
out
xchg
mov
jg
out
xor
dec
dec
add
xor
scas
pop
dec
xchg
call
pop
fs
sub
sbbb
mov
mov
std
mov
cmp
rcl
pop
pop
hlt
inc
mov
arpl
outsb
and
mov
pop
insl
mov
dec
and
call
sbb
push
jae
push
sub
or
mov
and
cmp
xchg
js
test
out
and
stc
xchg
sub
clc
pusha
mov
sbb
pop
arpl
pop
outsl
mov
clc
adc
xchg
mov
cmp
test
dec
insb
jg
aas
popa
and
inc
push
jle
aam
aaa
fucomip
rorb
push
xchg
das
lods
xor
push
js
or
jae
dec
xor
leave
xor
mov
outsb
aad
dec
add
xor
xchg
mov
adc
icebp
es
mov
enter
stc
stc
pusha
inc
repnz
js
ficomps
movsb
out
int3
lret
shll
sarb
jnp
xchg
outsb
pop
sbb
ret
les
mov
jp
inc
cmp
dec
inc
lret
out
push
bound
daa
int
xor
add
in
gs
or
js
icebp
inc
adc
leave
loopne
in
xchg
decb
loope
loopne
insl
add
jo
ret
mov
xor
push
add
jge
jg
jge
sbb
pop
add
outsb
jo
loopne
add
mov
sub
ja
in
les
in
pop
push
push
rorb
subb
mov
js
dec
fcos
lock
cltd
jmp
push
jne
xor
mov
imul
or
ret
imul
ds
test
xchg
aam
xchg
je
dec
lock
push
in
xlat
push
mov
dec
fildl
and
ljmp
inc
movsl
xor
jne
cmp
scas
fidivrs
std
cltd
fwait
loop
test
sub
sbb
mov
pop
cs
push
clc
or
push
outsb
iret
ret
xor
leave
cmpb
push
inc
loope
cmp
jle
std
xor
sbb
insb
sbb
mov
add
cwtl
lcall
xor
cmp
push
lods
inc
sub
arpl
mov
sub
push
fwait
adc
dec
mull
imul
xor
imul
xchg
add
sti
iret
movsl
pop
mov
inc
cmp
pop
aad
push
mov
aas
cld
insb
loop
mov
pop
insb
adc
test
and
mov
or
jae
mov
lock
pop
ret
cmp
pop
call
mov
ret
pop
cli
mov
add
pop
hlt
mov
sahf
pop
and
xchg
les
and
lahf
pop
push
ret
mov
push
cwtl
fwait
daa
mov
add
ror
test
pop
push
aad
lods
ljmp
jmp
push
lock
pop
int
call
jmp
adc
adc
pop
repnz
inc
imul
lret
jnp
jp
call
mov
xchg
or
push
inc
xchg
aad
dec
cmp
ljmp
mov
xchg
xlat
add
andl
into
xor
push
xchg
jecxz
stc
dec
cmp
push
movb
out
mov
pusha
loop
in
mov
test
bound
out
cmp
sahf
xchg
xor
jg
mulb
in
pop
call
in
fildl
jns
test
imul
pop
insb
inc
data16
stc
aas
fwait
mov
xchg
lea
cmpsb
in
xchg
pop
ds
jle
dec
lods
jl
dec
imul
push
xchg
add
push
test
out
adc
fimuls
and
addr16
adc
xchg
ds
loope
sbb
xor
ret
xor
add
inc
pop
mov
js
clc
fyl2x
mov
addr16
mov
xchg
and
sub
xor
or
adc
mov
add
notb
adc
sbb
dec
insl
or
fcompl
iret
stos
mov
faddl
lahf
xlat
js
push
outsl
jge
jp
push
xchg
sub
cmp
jno
pop
pop
and
xlat
mov
jmp
fistpl
add
jmp
mov
inc
pop
inc
mov
cld
adc
push
stos
aas
shl
and
lock
jge
dec
shr
sahf
sub
ficoms
std
xchg
stos
sbb
repnz
orl
adc
fstps
mov
cmpsb
pop
push
mov
shll
popa
add
sahf
or
int
movsl
jmp
test
stc
jne
push
lds
stos
sbbb
icebp
in
arpl
int
pop
jno
mov
cmpsl
lea
mov
outsb
sbb
push
jbe
push
test
pop
gs
fs
jmp
xor
push
ja
add
in
push
arpl
bound
popf
ror
inc
sub
in
jecxz
dec
loop
dec
jmp
lds
or
pushf
push
push
pop
mov
je
aam
xchg
xchg
pop
pop
repnz
mov
jge
sbb
cmc
dec
lcall
mov
mov
jmp
outsb
sbb
push
xor
inc
into
fisttps
sbb
lods
push
cltd
push
fsubs
push
ds
shr
out
leave
popf
stc
xor
stos
idivb
inc
ljmp
cmpl
insb
icebp
movsl
jmp
sub
movq
dec
mov
sahf
sub
insb
stos
cmp
enter
or
dec
pop
adc
adc
clc
adc
adc
pop
jno
xchg
sbb
xchg
mov
mov
pop
fidivl
mov
mov
outsb
jno
ljmp
mov
mov
push
adc
jnp
ss
std
lds
sbb
mov
mulb
daa
leave
clc
adc
add
pop
decl
divl
sub
sbb
push
jb
scas
in
sbb
out
mov
jle
and
ja
pop
repz
jle
sub
aaa
xchg
das
and
subl
fs
outsb
rcrl
repnz
pop
ljmp
add
xor
and
ljmp
and
xlat
in
jmp
or
das
xlat
in
ret
adc
fbstp
scas
cmp
jle
fs
xchg
push
popf
stos
mov
pushf
movsb
out
dec
outsl
jns
mov
dec
push
push
iret
leave
movsl
add
out
cmc
xchg
sub
pop
mov
adc
in
popf
lods
bound
add
jno
xor
adc
test
mov
lret
in
xchg
adc
adc
lods
orb
adc
sub
pop
cmpsb
xchg
push
out
rcr
in
test
inc
jno
enter
or
in
jle
lret
aam
lods
or
lcall
aam
and
stc
lds
mov
adc
dec
push
neg
ret
leave
jne
xchg
xor
lret
loope
hlt
mov
and
in
ss
cmc
mov
rcl
push
xchg
cwtl
imul
or
mov
mov
pop
and
jae
dec
jecxz
repnz
add
pusha
cmp
mov
icebp
dec
outsl
jb
sbb
int3
enter
xchg
int
mov
add
out
mov
jecxz
xchg
mov
das
cmp
xchg
or
movsl
adcl
xchg
pop
jne
imul
pushf
inc
add
pop
in
xlat
imul
jecxz
gs
push
in
pop
pop
aam
cmp
push
cltd
inc
push
mov
or
cltd
std
mov
mov
mov
call
push
cmpsb
mov
push
jp
int
arpl
xchg
cmpsl
or
cmp
ret
aaa
into
sub
add
jbe
negb
test
push
stc
popf
loopne
mov
call
les
xorb
adc
adc
add
out
mov
sub
jl
inc
adc
cs
data16
mov
je
jl
xchg
popa
mov
mov
dec
cmp
mov
in
insb
inc
movsl
xchg
sub
jo
lfs
ss
out
ljmp
je
test
inc
cmp
inc
test
sarb
dec
push
dec
or
xlat
imul
cmp
js
pop
add
mov
pushf
out
loop
andb
adc
push
rol
sub
pop
push
aam
sti
dec
pop
and
stos
mov
fisubl
negb
test
sub
repz
xor
sti
rolb
sub
sub
mov
pop
jp
add
ja
fsubr
fcompl
push
xor
xor
inc
pop
jmp
cmp
std
xchg
adc
sbb
sbbb
and
out
mov
repz
std
cmp
sbb
sbb
movsb
repz
popa
aad
gs
add
cmc
pop
mov
pop
xor
clc
popa
push
lea
sarb
adcb
imul
pusha
jl
ljmp
movb
repnz
out
lock
jae
popf
inc
push
xchg
adc
pop
jo
push
in
inc
push
jge
jne
movsb
clc
cmpsl
fwait
repnz
call
mov
repz
dec
out
fistpl
ljmp
fwait
in
pop
xchg
int3
or
jns
adcb
or
int3
add
jo
int
shl
dec
daa
adc
cmpsl
out
addl
mov
xchg
sub
insl
das
stc
adc
mov
arpl
decb
jno
adc
jp
dec
mov
inc
jg
push
sub
in
mov
cwtl
shl
lfence
in
aaa
aas
stc
adc
jmp
pop
sub
sub
lahf
or
fwait
scas
dec
lea
cmp
rcrb
pop
lock
dec
mov
jnp
cmp
add
sbb
xchg
cmp
lods
ljmp
addb
mov
inc
push
into
movsl
push
addr16
adc
mov
cli
sbb
test
lods
push
jne
mov
fsubrs
ret
adc
or
xor
dec
sahf
add
dec
jo
jno
jo
loope
leave
adc
daa
sbb
mov
das
mov
fsubp
mov
jge
scas
fcmovb
and
and
dec
fs
sbb
fmuls
pusha
jl
sub
call
push
sub
push
subl
mov
pusha
out
fildl
mov
lret
jne
add
loope
test
add
lods
data16
push
ret
jp
out
add
bound
je
test
rcrb
dec
int
je
rdmsr
gs
mov
jge
mov
test
push
cli
cmp
sbb
rolb
inc
adc
mov
push
mov
push
std
or
mov
push
dec
arpl
aas
out
cmp
sbb
dec
cmp
aaa
push
ret
jo
adc
nopl
popa
fnstcw
imul
nop
scas
inc
ret
sub
xchg
lahf
or
push
xor
lahf
cli
rcr
cld
inc
or
ljmp
mov
push
xor
pop
mov
fidivrs
xor
sbb
dec
cmc
lods
std
dec
mov
pextrw
imul
adc
cmp
das
adc
cltd
adc
xor
addr16
lea
cli
loopne
addr16
and
xchg
cmpsl
fs
xor
ss
mov
adc
fldcw
cmp
push
adc
sbb
popa
xor
insb
inc
mov
push
imul
push
mov
mov
mov
mov
xchg
fidivs
lret
pushf
bound
adc
push
cmc
ud1
mov
movsb
dec
cmp
lret
loopne
dec
adc
lods
add
dec
sbb
push
rol
mov
cmp
in
test
pop
xchg
mov
movzbl
cmp
lock
fsubrs
and
and
xor
aas
push
test
push
mov
inc
std
jecxz
adc
dec
cs
paddq
cmp
repnz
adc
neg
ficompl
ja
sbb
add
jbe
lods
out
jle
mov
push
adc
adcb
push
inc
push
filds
test
inc
je
pop
iret
aad
gs
and
and
jp
xchg
clc
js
dec
pop
fs
cli
push
pcmpeqd
sbb
das
scas
imul
xlat
push
mov
pop
or
jp
mov
add
cmp
xor
jbe
std
xor
popf
cmp
mov
in
dec
jle
inc
dec
mov
sarl
xchg
cmpsb
les
lods
or
add
subb
insl
push
mov
push
fwait
ja
cwtl
mov
pop
out
test
pop
push
imul
jecxz
loop
cmpsl
pop
stos
pop
lea
fdivrs
cmc
pop
insl
daa
add
mov
stos
push
out
cli
ss
shlb
xlat
add
out
rol
pop
repz
jp
les
out
fsubrs
orl
sub
loop
push
out
mov
or
icebp
cld
hlt
iret
popa
pop
out
in
and
xor
popa
dec
test
enter
ror
adc
loopne
sub
sbb
adc
mov
fdivr
jmp
int3
inc
sub
ja
push
jecxz
xchg
jns
repz
enter
jbe
fdivs
gs
mov
loope
mov
loopne
scas
adc
jae
xor
push
data16
xchg
fs
dec
mov
movsl
into
inc
mov
lds
clc
mov
mov
mov
fisubrl
cmp
jo
jb
dec
mov
inc
mov
fnstsw
cmp
int
out
fsubp
and
cwtl
cli
mov
shrb
mov
jno
or
push
repnz
inc
data16
lcall
fwait
loope
mov
mov
cmpsl
mov
cltd
insb
test
mov
enter
rclb
jnp
dec
lcall
mov
test
fwait
test
jg
clc
cmp
push
negb
cmpsb
xchg
clc
push
adc
into
fisubrs
jmp
and
xchg
data16
repz
aaa
leave
bound
dec
inc
sbb
aas
cmpsb
and
push
mov
or
pop
fadds
div
cld
mov
in
lcall
pop
jnp
jo
les
jae
cmp
or
sti
inc
or
mov
dec
pop
fnstenv
push
sub
cmp
hlt
push
cmp
mov
les
jle
lcall
xor
push
adc
in
pop
pop
xor
arpl
in
xor
fwait
add
mov
pop
sti
aas
fstps
cmc
mov
xchg
add
add
add
cmpsb
jmp
ss
push
sub
mov
pop
cmp
imul
dec
mov
jne
pop
sub
dec
sar
into
in
xor
loope
repz
mov
stc
lret
push
in
test
je
insb
mov
xchg
jle
in
and
jno
xor
jb
out
call
shlb
mov
cmp
xchg
push
add
imul
shl
add
xor
xchg
sub
jns
rcrl
fsubrp
jmp
sbb
rol
arpl
cli
push
push
mov
stos
add
mov
jo
pop
or
inc
jl
imul
int
or
fwait
jl
mov
and
xor
pushf
mov
pop
pusha
sti
into
cmp
add
out
das
out
sbb
jge
adc
insb
inc
sahf
and
mov
imul
movsl
add
loopne
shrl
in
mov
cltd
sarb
sbb
cld
loopne
test
mov
arpl
imul
pop
mov
test
shld
gs
and
cmpsl
in
cmp
mov
cs
test
cltd
mov
pop
xor
ret
les
dec
inc
inc
cmp
xor
cmp
sbb
cli
or
inc
pop
out
push
jne
test
loope
dec
adc
movsb
inc
jmp
out
push
sub
xchg
or
adc
loope
loopne
mov
in
push
xor
dec
out
lahf
les
xchg
in
pop
les
adc
cmp
pushf
ss
jbe
negl
incl
daa
ja
aad
push
xor
mov
push
std
adc
cmp
gs
or
xchg
sub
sub
sbb
dec
in
mov
movsb
jae
pusha
lods
mov
mov
pop
testl
sub
adc
je
cmpsb
pop
fbstp
lret
inc
hlt
std
cvtps2pi
idiv
cld
xchg
xor
fidivl
xlat
lahf
gs
stc
nop
into
pop
jne
inc
out
pop
push
mov
pop
cmpsl
movb
clc
shlb
xchg
pop
negb
mov
pop
imul
stos
jbe
xlat
cmp
push
in
ror
xor
or
dec
xchg
sub
popa
jno
in
rcrl
and
ljmp
loop
cs
call
and
flds
ja
clc
jge
in
xor
xor
out
movsl
sahf
push
fs
into
inc
inc
in
add
outsl
pop
fs
pop
dec
test
ds
push
pushf
jo
push
test
dec
in
adc
imul
push
pop
cmc
xchg
jl
clc
xchg
aaa
and
mov
dec
sbb
shll
cmp
sub
fdiv
xlat
jmp
aaa
cmp
cmp
int
mov
push
je
sbb
cmp
sbb
lds
pop
and
daa
fisubl
loopne
jno
sbb
popf
or
lds
cmpl
and
ja
cmp
jl
inc
jp
dec
loop
mov
fs
push
mov
pop
fidivs
add
dec
mov
popf
sub
xor
mov
loope
cmp
mov
cmpsl
dec
pop
cmp
mov
pop
cmc
cmp
cmp
mov
xchg
arpl
mov
pop
inc
adc
jecxz
xchg
jno
cmp
mov
jnp
inc
stc
filds
fwait
inc
mov
or
push
inc
jo
pop
data16
pop
test
add
cwtl
xor
in
testl
cmp
sahf
js
jmp
inc
add
mov
pop
push
or
mov
mov
pop
lods
cli
or
shrl
sahf
jne
xchg
jmp
and
dec
loope
aad
cmp
mov
mov
mov
fldcw
pop
repnz
pop
js
incl
sub
xor
fs
or
jbe
jg
mov
jnp
jmp
push
movsl
mov
lret
mov
in
mov
mov
mov
xlat
call
data16
pop
sbb
cmp
cmp
pop
ss
insl
add
jb
jmp
lahf
add
lret
rolb
mov
sbb
mov
cmp
adc
loop
xor
xchg
movsb
rcrb
sbb
sahf
nop
rcl
scas
xchg
or
inc
jno
pop
jecxz
loop
pusha
and
xchg
inc
dec
push
cld
lea
insb
add
sbb
ret
in
fmull
inc
ja
stos
cmc
mov
adcl
and
inc
xor
and
and
dec
add
dec
fistpll
and
adc
and
jge
mov
or
jp
bound
into
sti
jle
dec
inc
pop
xor
aad
rolb
ficoml
ss
in
sub
pop
add
test
cmp
xchg
out
pusha
pop
jae
call
aas
push
cmpsb
mov
pop
cmpsb
adc
xor
dec
adc
and
mov
std
sbb
cmc
mov
ja
in
cli
pop
xchg
add
adc
sbbl
sub
test
jno
cltd
std
cltd
scas
xor
notl
mov
and
and
or
outsb
mov
pop
icebp
movsl
ret
jb
daa
push
scas
mov
popa
insl
vmovups
push
dec
and
mov
and
push
jecxz
ss
imul
ret
roll
out
and
sarl
in
data16
mov
popa
sti
fwait
iret
mov
xchg
xor
and
jle
mov
mulb
or
sub
cli
push
mov
push
add
dec
and
orb
xor
push
js
fcomp
sub
negl
cmp
pop
icebp
or
gs
xchg
sti
pop
inc
insl
add
nop
or
cwtl
pop
cmpsb
dec
cmp
xor
mov
in
push
lods
xchg
call
fbstp
stos
in
jg
jbe
sbb
loopne
inc
xchg
mov
inc
fs
bound
xor
xor
mov
mov
jae
inc
pusha
xor
ljmp
xor
jmp
pop
inc
mov
xchg
sub
mov
adc
cli
rcrl
insb
pop
in
outsb
or
jb
mov
mov
xor
bound
insb
adc
mov
add
lock
pop
jg
adc
and
aaa
lahf
std
adc
sub
shll
and
mov
sub
clc
pop
ret
sbb
sbb
aad
sbb
out
fdivrl
mov
pushf
jmp
cmpb
pop
test
sub
pop
pop
or
jnp
pop
xchg
dec
jp
shlb
out
mov
push
ja
pop
adc
cmp
mov
push
roll
mov
or
out
cmpsl
xchg
scas
icebp
rclb
fcomip
iret
mov
and
push
cmpsl
mov
and
aaa
ret
mov
in
xchg
xor
fsubl
push
out
repz
lods
or
adc
jne
inc
pop
push
pop
addr16
orl
mov
jp
movl
fwait
inc
xlat
int3
iret
test
iret
out
inc
push
inc
adc
test
insl
add
outsb
repnz
popa
mov
sbb
out
pop
push
shl
aaa
cmp
xchg
xor
mov
aam
pushf
xor
sarl
out
sub
xchg
mov
ja
out
xlat
dec
dec
cmovae
cmc
mov
jno
call
in
ret
pop
shl
out
adcb
subb
imul
inc
lcall
in
test
enter
or
in
decl
rcl
lds
jne
adc
jmp
push
into
int3
mov
cmp
cmc
outsb
in
fcoml
mov
stos
int
jecxz
xchg
jge
mov
and
jno
mov
push
dec
arpl
fs
and
ss
xchg
into
jg
mov
mov
inc
or
pop
in
sub
pusha
ljmp
mov
stc
xor
int
dec
push
add
push
sub
lods
sarb
das
inc
testb
or
hlt
mov
add
mov
andb
pop
stos
in
into
sbb
ret
shrl
lods
jo
dec
dec
in
sarb
std
pop
testl
divb
jns
mov
pop
adcl
iret
pushf
push
dec
dec
sub
mov
xchg
cmp
or
ret
inc
sub
mov
xor
xor
aas
mov
loopne
int
pop
fdivp
stc
cmp
pop
and
push
jg
xor
ret
sbb
dec
mov
cs
cli
cmp
fwait
mov
sub
aaa
cmp
imul
cli
pop
jle
pushl
leave
dec
test
test
lret
dec
imul
sarb
jp
ljmp
mov
shrl
sub
mov
bound
push
dec
loop
divl
mov
lock
adc
sub
push
rcll
fsubl
ljmp
sub
mov
mov
nop
fnstenv
not
out
in
testl
inc
mov
addr16
xchg
das
cmp
mov
push
mov
xchg
and
cmp
and
xchg
sahf
jl
les
movsb
cmp
xor
ret
ret
pop
mov
xchg
pushf
stos
mov
or
enter
popa
aad
dec
das
or
mov
js
insb
out
test
aaa
xchg
jne
xchg
push
sbb
pushf
xchg
mov
pop
mov
add
fsubrs
les
js
arpl
push
ja
mov
jne
fimuls
cmpsl
pop
jo
mov
pop
adc
outsb
arpl
xor
dec
inc
or
adc
pop
push
mov
inc
cmp
adc
sbb
mov
mov
lcall
pop
inc
fnsave
ds
and
fwait
xor
jg
pushf
and
add
xor
in
lods
test
mov
and
sub
daa
into
cmpxchg
mov
popa
inc
ret
ret
inc
xor
pop
cs
addr16
xchg
add
sub
inc
sahf
push
dec
lock
jmp
and
push
pop
xor
addr16
jmp
mov
jmp
adcl
mov
push
pop
pop
das
movb
pop
push
aam
dec
loop
lods
xlat
outsb
filds
inc
jb
jne
ja
lret
jbe
dec
xchg
sub
and
ljmp
jno
aad
and
and
inc
cld
mov
jns
ljmp
icebp
or
scas
add
add
ds
sbb
pop
int
dec
cltd
sbb
inc
aad
scas
add
mov
lcall
xor
sbb
push
mov
in
sbb
mov
insb
stos
mov
xor
out
cltd
cld
scas
popf
cmpsl
sub
adc
repz
inc
inc
mov
mov
cmp
jns
shl
cwtl
rorl
mov
sub
cmp
clc
lahf
mov
or
or
lock
mov
in
decb
js
jae
fidivl
dec
inc
inc
and
movsl
sbbl
lcall
push
loop
rcrb
mov
or
rcl
and
lods
sub
fidivrl
in
sbb
imul
add
fs
push
outsl
jae
out
mov
mov
cld
jne
aas
add
fwait
inc
fidivl
jl
call
push
pusha
subb
insb
mov
int3
mov
or
icebp
movsl
lods
mov
aaa
test
jge
push
addb
xchg
imul
dec
xor
das
mov
add
dec
xor
xlat
mov
pop
mov
cmc
sbb
scas
nop
loopne
mov
repz
test
fnsave
lods
loop
sbb
mov
lret
leave
push
les
movsl
ret
negl
xor
or
out
mov
inc
push
pop
je
cmc
sbb
shlb
lret
pop
jae
pop
mov
inc
push
mov
outsl
pop
cmpsl
adc
mov
leave
das
add
mov
je
jmp
enter
lods
adc
adc
popf
pop
mov
rol
dec
pusha
repz
loope
ror
bnd
dec
sub
xchg
ds
sti
fcom
mov
pop
shrb
mov
sbb
clc
imul
pop
inc
fisttpll
cmpsl
cmp
jne
jmp
cs
pop
fldl
pop
dec
push
out
sti
adc
xchg
hlt
xchg
inc
cmp
sub
rolb
js
and
movsl
add
bndstx
out
fdivl
inc
in
ss
cli
xor
inc
sbb
pop
roll
jecxz
cmp
mov
ja
inc
imul
mov
aad
add
lods
pop
mov
push
jnp
shr
add
aad
inc
pop
sub
rcll
push
pushf
add
push
add
cld
sahf
lods
mov
aam
iret
add
fsubs
scas
inc
sbb
lods
mov
push
cmc
jo
dec
sbb
mov
ror
jae
cmp
mov
fmul
shll
js
std
rclb
fstpt
sbb
jecxz
mov
xor
andl
stos
fiaddl
mov
mov
and
push
push
mov
mov
movsb
fnstsw
pop
xchg
int
jge
test
outsb
push
fadds
pop
dec
inc
mov
jnp
out
leave
push
sbb
ja
add
xchg
mov
xchg
xchg
xor
push
pop
outsl
xchg
cmc
mov
xor
mov
xchg
lds
pop
loope
jl
sbbb
cmp
xchg
sub
loope
dec
setp
mov
mov
mov
mov
movsl
adc
mov
mov
inc
cmpsb
jnp
pop
not
nop
pop
insb
lret
imulb
cld
mov
test
cmp
clc
movl
mov
sbb
jno
daa
jp
ret
and
xchg
js
incb
loope
xchg
fidivrl
mov
cmp
lret
xor
push
xchg
cmp
cmp
pop
pop
cmp
test
dec
pop
or
jp,pt
mov
cs
and
lea
xchg
lea
jle
mov
scas
push
cmp
leave
lahf
jle
inc
loop
mov
int3
xor
sub
mov
jp
lea
mov
ja
adc
push
pop
addr16
das
addr16
pop
cmp
movsb
mov
add
stc
pop
cmpsb
outsb
icebp
pop
cmp
shlb
insb
mov
sahf
fucomp
mov
addr16
add
mov
mov
mov
mov
out
call
xchg
mov
mov
lods
xchg
push
pop
mov
dec
pop
cwtl
add
sahf
sub
mov
cwtl
or
cwtl
pop
sahf
jns
in
stos
icebp
push
and
sub
aaa
pusha
mov
fst
sarl
lods
xor
int
xor
js
jnp
in
fildll
mov
in
mov
loop
mov
stc
inc
roll
adc
inc
mov
and
dec
mov
xor
and
push
aas
scas
cmp
dec
scas
ret
imul
mov
inc
fisubs
push
sub
add
ret
or
dec
mov
xor
mov
or
xchg
in
jge
inc
xchg
push
jo
add
adc
cmc
sbb
dec
sbb
hlt
and
negb
cli
push
add
icebp
aam
data16
mov
pop
clc
fwait
ss
and
loope
fdivrp
pop
in
pop
jb
xor
pop
and
dec
push
pusha
dec
adc
imul
hlt
cmp
inc
cmp
inc
mov
cmp
mov
add
insl
movsb
shrl
sbb
dec
jp
jns
jbe
xchg
push
shll
xlat
jnp
ds
cld
mov
in
pop
mov
xor
out
fisubs
mov
imul
fdivs
lret
sbb
rorl
gs
iret
data16
in
std
or
mov
dec
cvtps2pi
jecxz
pushf
xchg
mov
scas
jge
pop
xor
vpxor
push
sbb
repnz
out
pop
mov
pop
pushl
insl
sbbl
popf
shrb
lock
mov
pop
fwait
add
and
popf
lods
mov
inc
and
dec
add
icebp
xchg
pop
movsb
inc
cmp
xchg
cmp
rcl
mov
insb
lret
test
xor
jno
jl
aaa
sbb
movsl
cmp
dec
xchg
sub
mov
fwait
push
push
jmp
mov
cmc
mov
mov
adc
imul
mov
fwait
sbb
jl
push
sub
add
and
sbbb
add
jecxz
and
push
out
or
std
icebp
cmp
ss
sub
insl
dec
mov
dec
aam
adc
test
lcall
mov
movsb
hlt
inc
adc
and
hlt
pushf
pusha
mov
jno
in
dec
lahf
push
dec
fmull
or
ljmp
int
add
popa
mov
mov
xor
sub
enter
in
cmc
mov
mov
push
hlt
push
push
bnd
jae
add
push
pop
push
test
pop
aad
out
movsb
pop
mov
iret
outsb
leave
mov
pop
imul
pop
sub
fidivs
ret
sub
inc
bound
add
aas
stos
xchg
out
lahf
or
push
xor
add
dec
jl
fxch
xchg
mov
sti
in
imul
mov
jnp
jg
xorb
cmc
adc
and
loop
in
int3
and
nop
xor
loop
fdiv
jo
mov
push
rcrb
jp
inc
pop
xchg
lahf
insl
arpl
sahf
mov
in
and
inc
xchg
push
mov
seto
mov
cmp
push
pop
add
push
sub
movl
das
xor
scas
stos
mov
addr16
ret
adc
test
icebp
xchg
pop
push
ss
mov
xor
scas
in
pop
jge
jle
mov
rolb
jbe
dec
xchg
inc
sar
xchg
icebp
mov
icebp
add
inc
mov
push
mov
pop
push
mov
mov
ds
insb
xorb
push
icebp
xor
int
adcl
nop
int
clc
fadd
rcll
inc
pop
lods
std
mov
das
fisubrs
hlt
or
lcall
movsl
push
xor
js
loopne
sbb
imul
shll
and
push
pop
push
dec
jg
jge
jg
xor
ja
lret
jae
in
cs
sbb
rclb
pop
sub
sbb
sub
test
sub
loope
fs
loopne
or
xchg
fnsave
rep
cmp
adc
in
push
inc
bsr
adc
inc
leave
nop
dec
xlat
sub
pop
in
stos
jp
fcoml
aam
mov
movsb
popa
jnp
test
stos
cs
sbb
xchg
es
movsl
pop
mov
sub
add
sub
xchg
mov
in
dec
jb
push
movsb
outsb
pop
lret
mov
mov
sahf
lea
gs
addr16
std
adc
in
adc
mov
or
test
test
fistpl
sbb
popf
pushf
or
ds
jns
jb
jp
pop
lods
notb
sub
imul
jo
sbb
dec
shr
sub
pop
repz
lahf
das
dec
xchg
in
lods
inc
and
jp
out
jmp
and
cli
xchg
and
clc
push
xor
dec
out
xor
or
or
les
mov
outsb
xchg
stos
sbb
dec
shlb
cmp
enter
sbb
ret
hlt
cld
loope
fsubl
ss
popa
arpl
push
nop
mov
xchg
pop
mov
add
xor
test
dec
inc
mov
ficomps
push
inc
adc
cltd
daa
push
fwait
aas
dec
xchg
cmp
daa
test
mov
cmp
xor
test
push
add
in
cltd
inc
iret
fwait
mov
cmpl
xchg
rorl
repnz
jno
test
dec
adc
dec
pop
pop
cmpb
test
sub
iret
xor
push
fsubrp
les
add
fwait
int
push
push
out
and
and
ja
cmp
ds
shlb
into
pop
mov
lds
or
pop
add
in
imul
pop
push
inc
stos
xor
push
in
and
cmp
lret
jae
jp
ds
arpl
mov
mov
jo
ret
jno
jl
testb
inc
into
lods
mov
or
cld
xchg
std
sub
push
sbb
and
or
repnz
rcr
icebp
mov
repnz
cmp
stc
rcrb
and
sbb
mulps
push
cmp
hlt
repz
cltd
inc
push
and
xor
aad
xchg
enter
lahf
int3
bound
aas
hlt
mov
js
fisubrl
jecxz
arpl
xchg
cmp
add
adc
gs
and
jmp
in
rcrl
adc
arpl
gs
and
xor
xchg
xor
inc
out
leave
mov
cli
cmpl
cmp
aad
mov
cltd
test
mov
push
jecxz
pushf
in
and
inc
mov
mul
test
cli
int
xchg
cmp
adc
sbbl
addr16
lods
cmp
push
dec
std
sub
inc
aam
fdiv
das
loope
ds
jbe
inc
icebp
ds
fidivs
leave
daa
add
ficomps
neg
and
ret
mov
or
test
in
adc
mov
jns
sub
out
pop
mov
dec
cmpsl
mov
sub
xchg
or
mov
adc
call
pop
add
sbbb
cwtl
hlt
mov
sub
outsb
cmc
arpl
dec
test
xor
test
sub
inc
jns
add
out
call
xor
loope
jp
icebp
dec
mov
js
dec
orl
xor
push
je
inc
das
movb
dec
int3
sahf
xchg
je
mov
loope
dec
xchg
clc
or
pusha
les
xchg
and
sub
inc
push
ror
add
or
inc
and
adcb
jg
add
mov
sti
aas
aas
rcr
mov
lock
ja
adc
test
xchg
mov
movsl
out
mov
add
loop
imul
orb
fcmovbe
sbb
sub
xchg
mov
mov
and
mov
jae
rcl
outsl
xchg
or
push
adc
fiaddl
insl
dec
push
lds
dec
lcall
sbb
cmp
push
xlat
and
adc
mov
outsl
mulb
mov
repnz
jmp
mov
mov
sub
or
test
xchg
push
in
cmp
into
aas
sub
and
test
jne
pop
dec
fisttps
jge
or
sbbb
mov
xchg
or
xor
jle
mov
in
cmp
lods
ret
repnz
int3
dec
mov
addr16
rorb
fwait
fwait
icebp
mov
std
lcall
pop
arpl
pop
out
or
mov
shrb
add
adc
and
mov
add
lods
call
andb
sbb
xchg
lret
test
cltd
xor
pop
aaa
int
hlt
aas
adc
shl
dec
loop
cmc
jge
xchg
int
adc
mov
sahf
roll
mov
pop
insl
inc
and
jge
in
aas
jecxz
das
inc
arpl
cmp
mov
fnstcw
in
icebp
push
test
or
je
pop
mov
sarl
xor
cmpsl
iret
or
push
enter
leave
nop
jne
es
stos
add
ret
ds
mov
imul
lret
mov
push
mov
lds
test
pop
mov
mov
xchg
sub
push
lret
mov
xchg
push
xchg
xchg
xchg
cmp
pop
outsb
shrl
lds
sbb
mov
dec
mov
pop
sbb
cli
ret
adc
test
xchg
mov
lcall
aas
inc
adc
pop
dec
and
out
mov
fisttps
push
cmp
push
and
add
sbb
inc
arpl
add
shl
or
mov
mov
flds
es
xchg
fidivs
xchg
sarb
fs
mov
iret
mov
xlat
sub
out
lods
ss
push
addr16
popf
sbb
mov
aad
fsts
test
mov
xor
push
dec
mov
mov
lds
shlb
psadbw
arpl
repz
mov
inc
pusha
pop
fdivl
or
pop
inc
inc
mov
add
ret
push
inc
roll
push
andb
fs
leave
jecxz
test
xor
mov
dec
xchg
aam
push
fsubr
mov
hlt
xor
xchg
lret
imul
mov
cmc
xchg
xchg
jae
sahf
std
lret
sbbl
mov
mov
jns
cltd
pop
je
rclb
sbb
cmp
les
scas
int
xlat
cmp
cmpsb
add
mov
out
push
pushf
mov
pop
out
push
jge
push
sub
xchg
dec
movups
fcoml
mov
das
pop
shll
negl
mov
cmpsl
adc
mov
mov
cli
mov
sub
dec
push
popa
jnp
icebp
shll
inc
push
loope
dec
sar
into
add
lods
rcrl
push
pop
mov
or
cld
mov
cli
sub
gs
orl
add
es
cltd
lahf
les
sbb
sbb
mov
inc
jecxz
adc
sub
ret
pusha
popf
hlt
hlt
mov
mov
les
add
out
inc
test
dec
hlt
cmp
pop
jnp
nop
testb
rcrb
stos
stos
lock
push
and
loop
mov
repz
or
ret
icebp
dec
mov
or
pop
pop
in
jnp
imul
xchg
lea
xchg
aas
mov
inc
lea
repnz
clc
adc
int
arpl
test
cmpsb
and
push
arpl
sbb
out
sbb
sub
bound
pop
iret
stos
inc
sahf
push
lock
mov
movsb
adc
mov
xchg
mov
pop
and
insl
lock
pusha
shrl
xlat
cmp
and
dec
pop
stos
bnd
repz
xlat
dec
mov
daa
sbb
test
pop
sub
and
rcr
jl
sbb
stos
fucom
or
pop
insb
inc
movb
pop
fdiv
pusha
repnz
out
rcrb
add
dec
lret
mov
addl
jbe
hlt
cmp
cmp
stos
mov
jae
mov
push
jmp
idivl
pop
xorb
out
mov
fcomps
xor
mov
int
xor
inc
leave
sub
push
mov
inc
push
jb
jecxz
cmc
cltd
cmp
sub
sub
xor
repz
push
dec
test
jbe
aad
xor
mov
popf
mov
mov
xchg
jb
jno
lock
and
idivl
int
jo
sahf
nop
sbb
imul
ss
repnz
pop
adc
sub
inc
test
dec
add
jg
xchg
aas
data16
in
pop
mov
jns
pop
cli
inc
mov
mov
sbbl
jb
sti
sub
call
xchg
mov
sti
mov
int3
inc
pop
cmp
dec
jne
jle
les
cmpsl
push
loope
mov
jmp
ljmp
sub
dec
outsl
push
xchg
mov
jo
in
and
outsl
jno
mov
add
fisubrl
sti
shr
sbb
shlb
inc
jb
repnz
popa
iret
jo
clc
and
adc
lahf
das
aad
inc
fisttpll
xchg
mov
cmpsl
cmpsl
jae
fnstcw
or
sub
je
pushf
mov
add
mov
in
test
push
std
pop
or
jecxz
pushf
vmovdqu16
pop
mov
cltd
mov
negl
pop
in
pop
xchg
dec
dec
mov
mov
loopne
lahf
cltd
cwtl
jmp
je
pop
lret
iret
mov
dec
in
push
sbb
jp
lahf
ss
xchg
shr
rcr
inc
pop
or
xchg
sub
cli
xchg
pusha
ja
shll
rcrl
jecxz
iret
adc
xchg
cs
shrl
mov
pop
push
fdiv
mov
xchg
sub
shll
or
lods
loope
decb
xchg
mov
sti
sbb
out
mov
testb
bound
push
in
mov
sub
ja
sub
cmp
dec
jecxz
pop
dec
fbld
adc
dec
mov
cmp
and
add
das
sub
imul
adc
and
cmpsl
gs
push
dec
pop
xchg
shll
mov
cmpsl
mov
cmp
fistpl
pop
in
push
loopne
sbb
imul
jl
jmp
inc
xorb
cld
repnz
xor
das
cmp
scas
hlt
inc
loope
cmp
mov
out
mov
lret
add
mov
and
pop
sar
cmpsl
cmp
je
mov
push
pop
sbb
loope,pt
call
or
adc
test
ret
xchg
sub
fcomp
jbe
es
cmpsl
mov
int
repz
jb
add
push
mov
out
sti
push
aad
jmp
pop
mov
add
mov
cmp
mov
shlb
push
mov
adc
xchg
xor
mov
mov
cmp
dec
sbb
dec
jns
pop
fwait
fs
xchg
and
push
cltd
cmp
lock
mov
outsb
pop
dec
loope
mov
insb
mul
movsb
fisubs
pop
outsl
testl
sbb
and
jae
rcll
push
dec
jnp
jnp
xlat
pop
out
push
add
rcr
scas
imul
pop
fdivs
ljmp
icebp
xor
ret
or
aas
not
xor
inc
ret
pop
mov
ret
mov
sub
add
sbb
mov
xor
stos
adc
fs
adc
add
insb
mov
js
inc
in
jl
jnp
push
inc
sti
pop
mov
hlt
push
cmpb
into
dec
loop
rol
neg
lods
fmull
sbb
dec
es
insl
sbb
and
mov
mov
sub
into
gs
mov
cmpl
sub
push
cmp
addl
add
push
or
bound
je
out
clc
lock
cwtl
nop
das
or
dec
sbb
mov
push
out
lret
xchg
js
dec
sub
iret
or
pop
mov
notl
cwtl
sbbl
sbb
dec
call
movsl
xchg
out
xchg
and
sub
call
cmp
out
inc
push
sbb
btc
mov
cld
mov
shrl
gs
out
incb
jne
iret
sub
jno
cli
push
push
cld
push
pop
das
inc
cmp
xor
dec
and
das
fbstp
out
cmp
repz
lods
repnz
outsb
in
add
paddusw
and
push
adc
xor
aas
mov
hlt
cmp
in
inc
sbb
mov
mov
ds
jo
aas
adc
xchg
pop
wbinvd
sbb
lds
sub
dec
ror
sbb
mulb
inc
pop
fucomip
cmp
xor
xchg
mov
xor
jmp
les
in
or
repz
int3
addr16
jle
adc
stc
push
lret
mov
movsb
mov
mov
mov
push
out
xor
jne
add
dec
aas
sub
dec
aad
jo
dec
in
push
sti
xchg
push
sub
sbb
and
inc
cmp
in
in
sar
adc
dec
fldt
in
xchg
sub
push
jae
push
dec
lcall
sbb
jge
and
sub
pop
cmpsb
loope
pop
jnp
cmp
arpl
pop
faddp
jmp
pop
iret
pop
fcmovne
jle
mov
icebp
addb
xlat
dec
pop
ud1
fsubrs
adc
lods
cmpsb
fdivs
in
stos
sbb
out
data16
fsubs
dec
lock
mov
mov
bound
pop
xor
mov
aam
adc
std
cmp
out
pop
movsl
shl
cmp
pusha
popf
sbb
add
jnp
movsb
data16
imul
xchg
sub
adc
push
fs
jge
add
js
push
int
orb
pop
or
lcall
mov
dec
mov
mov
cmp
adc
xchg
dec
xchg
loop
popw
add
jo
mov
stc
repz
sti
pmulhw
stc
and
jmp
adc
aaa
mov
jae
scas
out
add
js
lahf
cmp
dec
fiaddl
ds
xchg
push
add
outsb
inc
test
pop
loope
sti
mov
mov
stos
imul
cmp
mov
scas
je
sarl
dec
or
jo
rorl
cltd
dec
mov
aam
xlat
cmp
decb
ljmp
outsb
mov
out
sub
pop
inc
es
jl
dec
in
adc
xor
cmc
or
mov
je
mov
dec
and
jno
repz
pushf
sti
jp
inc
mov
das
xchg
imul
out
or
add
jnp
sbb
lods
inc
sub
push
mov
pop
xchg
jae
or
bound
or
jg
stos
mov
xchg
movsl
cmp
jle
sub
daa
jge
cmpsl
aam
add
add
jg
or
sbb
push
sub
sbb
outsb
adc
pop
mulb
jno
scas
xchg
add
cmp
js
fcoml
pop
or
cmpsl
add
xor
inc
out
rclb
adcb
inc
std
repz
jns
into
mov
xor
adc
mov
into
movsb
jp
cmp
xchg
pop
out
ret
mov
or
sub
lea
xchg
gs
push
pop
xor
cmp
cld
enter
shlb
cmp
sub
dec
flds
mov
or
int
adc
add
push
cltd
sub
mov
cmc
jnp
mov
xchg
jmp
jecxz
out
push
loopne
adc
ret
mov
lds
ret
das
ja
repz
shl
lahf
pop
dec
adc
inc
shlb
xor
pop
icebp
insb
test
js
mov
ds
mov
test
inc
cld
fistps
aad
sub
add
gs
and
lods
cmpb
std
mov
cmp
clc
je
aam
or
or
xchg
lds
fstps
test
sbb
test
jae
push
sub
xchg
cld
push
or
pop
mov
aad
xchg
pop
mov
subl
fsubl
shr
push
call
inc
jle
adc
outsb
xor
push
int
and
data16
setnp
outsb
xor
jmp
inc
insl
adc
mov
cmpsb
add
imul
fwait
insl
sub
fwait
dec
out
lods
push
out
lock
inc
outsb
mov
mov
mov
scas
aas
dec
cmp
push
shrl
xchg
add
xchg
xlat
sarb
mov
imul
shll
js
sub
cltd
push
adc
xor
mov
aad
adc
jae
push
mov
mov
cli
lcall
jbe
hlt
mov
mov
lds
push
call
jmp
lock
pushf
daa
fcompl
pop
idiv
call
jle
push
sbb
sbb
fistl
fnstcw
adc
cmc
pop
sahf
es
std
xor
and
psubb
lahf
bound
jle
inc
test
mov
fs
aam
mov
bound
adc
adc
push
xor
stos
scas
lea
ret
inc
loopne
jae
pop
add
fstpt
sbbl
xchg
xchg
fdivl
jae
xlat
mov
xchg
scas
ror
test
int3
sbb
xchg
push
or
leave
cmc
test
mov
push
xor
sbb
mov
xchg
mov
fstpl
xor
repz
mov
outsl
outsb
xchg
out
aad
jbe
dec
cmp
aad
andb
mov
inc
lods
iret
push
inc
rcrb
leave
mov
out
mov
out
push
cmc
push
fsubr
std
sub
mov
jp
xchg
or
in
lea
scas
dec
jmp
jns
cwtl
cld
xor
dec
push
pop
movsl
cmp
jne
fbld
ret
fistps
push
jb
lcall
dec
cwtl
xor
in
and
adc
jecxz
daa
xlat
and
pop
mov
jae
jns
xchg
jle
pop
orb
jl
add
test
pop
mov
and
sub
stc
mov
adc
arpl
mov
jnp
clc
pop
jns
aaa
imul
mov
jle
push
push
lock
jo
add
fs
jbe
pop
cmp
lods
cmc
cmpsl
pop
outsl
dec
jecxz
mov
aas
dec
cmp
xor
and
jae
mov
popa
imul
push
push
jle
aam
jge
outsb
in
test
pop
sub
jle
ret
sub
push
add
arpl
fstl
mov
sbb
sub
cpuid
and
jbe
pop
xor
push
add
fld1
jg
mov
xchg
loopne
insl
fidivl
cmp
stos
push
int3
dec
out
or
xchg
lods
pop
dec
mov
leave
fnstsw
push
pop
outsb
cmp
mov
jl
cld
dec
ret
adc
and
sbb
hlt
adc
imul
sub
lret
mov
jge
fdiv
xchg
gs
popf
sub
mov
icebp
das
inc
fdivs
ja
mov
jp
data16
xchg
pop
inc
out
iret
rcl
stos
aas
gs
pop
pop
xlat
imul
dec
mov
in
inc
fcmovb
sbb
out
aaa
cmp
daa
pop
lret
xor
dec
mov
movsb
addr16
jecxz
dec
lcall
adc
rcrl
sbb
lret
and
mov
sub
mov
ds
dec
add
lods
push
das
xchg
xchg
ss
lods
cmp
leave
fstpl
xor
repz
sbb
mov
ret
adc
fmuls
inc
add
mov
cmc
scas
sbb
and
xor
decl
outsb
insl
icebp
jo
push
jp
sti
pop
scas
inc
data16
mov
mov
loope
sbb
cltd
cld
push
fs
ror
sbb
fstl
std
dec
fcmovne
mov
sti
fwait
ja
push
and
rcll
dec
sub
lods
or
pop
das
push
xchg
lock
sti
inc
shll
mov
sub
psubq
hlt
gs
pop
aad
out
push
cmp
jmp
out
jo
xlat
pmulhuw
xor
bound
lods
xchg
push
xor
dec
jecxz
daa
xor
adc
jge
iret
jl
pop
scas
lock
lods
outsl
psadbw
subl
mov
xchg
dec
idivl
jno
sbb
add
mov
add
and
jnp
xchg
and
cwtl
aas
es
push
pop
cmpl
adc
or
lret
sti
and
stc
cmpsl
lret
mov
std
mov
fcmove
fdivl
push
xchg
movsl
jp
stc
test
es
fwait
xchg
das
xor
push
hlt
aaa
xchg
iret
cwtl
jl
and
or
iret
cmp
mov
stos
out
pop
fsubrl
mov
into
orl
sti
mov
fneni(8087
sbb
xor
dec
adc
push
out
fisubs
sbb
pop
jmp
cmpsb
pop
sbbl
sub
repz
cmc
cmp
mov
stos
xchg
stos
addl
test
sbbb
shlb
fldl2t
add
scas
lods
push
inc
cmp
cmp
fsubrl
mov
adc
jo
add
cmp
xor
mov
mov
cmp
inc
adc
cli
dec
and
mov
stos
ds
dec
cmp
cmp
call
fst
andb
push
pop
loopne
shl
adc
and
cmp
in
je
jecxz
leave
in
cli
push
and
mov
or
popa
xorl
dec
loope
xor
xchg
je
lock
jge
xchg
xchg
xchg
xchg
test
imul
insb
aam
push
addr16
dec
test
cmp
cmp
mov
iret
call
push
mov
push
cwtl
das
jno
in
test
int3
arpl
pop
ljmp
sbbl
dec
lods
mov
stos
repz
popf
nop
sub
jl
ja
and
inc
push
loopne
add
xor
add
movsl
mov
jb
je
pop
ds
lods
sbbb
mov
movsl
inc
gs
imull
ds
inc
lock
mov
ja
ret
mov
xor
rcrb
xchg
mov
dec
sub
push
lods
sbb
or
jg
loop
insl
sbb
sub
shlb
or
mov
and
icebp
inc
mov
and
push
ja
pop
push
cli
test
and
and
xor
lds
ret
adc
mov
lret
xchg
dec
out
cld
out
mov
adc
xchg
data16
std
lahf
push
cltd
inc
push
jns
leave
int
lods
jg
xchg
pop
es
add
mov
mov
notb
loope
orl
mov
and
pop
sub
push
enter
xchg
inc
fwait
or
xlat
push
push
jo
dec
arpl
jne
adc
insb
and
push
std
into
imul
pop
loop
pop
stc
nop
dec
leave
imul
aam
xchg
mov
pop
xchg
in
and
out
insl
int3
mov
cmpsl
pop
dec
aad
cmp
out
testl
call
and
rclb
icebp
nop
and
cmp
cmpsl
dec
and
push
adc
mov
or
dec
out
pop
xchg
mov
push
xor
bnd
in
jne
push
add
push
pop
mov
andl
jbe
sbb
cmc
daa
outsb
sbb
cli
dec
xchg
mov
fdivl
lods
jecxz
xchg
sub
repnz
mov
pushl
fiadds
jecxz
xor
divl
fiadds
sbb
cmpsl
dec
fwait
jecxz
inc
sti
adc
jp
das
cmpsb
dec
adc
sbb
sbbb
jl
loop
adc
addb
or
hlt
js
pop
pop
or
jle
lahf
loop
into
sub
sbb
cmp
dec
mov
or
ret
mov
fldenv
shlb
pop
shlb
stc
popa
scas
shl
xlat
enter
push
sub
jno
jp
xchg
sbb
or
pop
push
fdivl
inc
add
nop
adc
cmpsl
push
sahf
push
and
lea
add
inc
testb
xor
fnsave
xor
mov
shlb
pop
xor
xlat
xchg
enter
push
xor
out
push
push
lea
test
mov
movsl
lds
mov
adc
movups
jns
adc
push
andb
sbb
lret
jb
aaa
add
adc
sbbb
sahf
dec
cmpsb
add
inc
arpl
mov
movsb
fidivl
mov
sub
add
ret
push
or
push
dec
loopne
repz
imul
adc
lds
xchg
ficomps
push
out
sbb
push
scas
sbb
leave
das
mov
aad
loopne
dec
out
pop
outsb
nop
rorl
xchg
dec
in
cld
push
enter
aas
call
es
jp
adc
mov
inc
out
lcall
push
rclb
iret
lret
fiadds
push
push
shrl
sub
mov
push
in
lahf
dec
xor
aaa
aaa
push
fnsave
fcoms
rcll
xor
push
imul
adc
add
pop
inc
xchg
mov
scas
jge
push
lods
in
cwtl
das
fisttpll
xor
mov
pop
subb
shr
dec
mov
iret
sub
pop
hlt
outsl
js
ret
ss
dec
fiadds
cmpsl
gs
sar
rolb
out
ds
cmp
pop
repz
sarb
pop
sahf
inc
out
iret
cmp
add
and
push
mov
dec
sub
test
xchg
sbb
aaa
ret
in
adc
adc
xor
mov
mulb
and
dec
or
das
mov
fwait
in
icebp
ret
pop
stos
test
push
jne
out
mov
jnp
test
mov
mov
ja
ljmp
loope
and
ret
pop
lods
dec
pop
fidivrs
jle
dec
xchg
idivl
into
in
test
sbb
or
mov
lock
lret
repz
xchg
add
xchg
sub
pop
lock
push
and
jecxz
inc
fwait
and
out
gs
xchg
in
outsl
pop
mov
mov
mov
mov
inc
mov
popf
clc
adc
adc
clc
out
call
hlt
mov
sub
lret
push
pop
cmp
mov
mov
jo
loope
or
mov
clc
inc
ret
shll
adc
mov
adc
fisttps
xchg
cmp
cltd
imul
ljmp
stc
inc
fldcw
mov
ss
inc
mov
jmp
mov
notl
popa
xor
xchg
cmp
arpl
dec
sbb
mov
push
fwait
mov
loopne
lret
ret
pmaxub
jbe
xchg
mov
fstps
test
adc
movsl
jg
aaa
or
or
out
das
mov
jno
shlb
or
pusha
xchg
sahf
js
subl
xchg
fwait
in
sbbb
mov
cli
or
test
test
in
cwtl
sti
and
xor
pusha
add
dec
mov
and
xchg
mov
in
daa
mov
into
ja
ffree
outsb
mov
sub
xchg
test
lods
stos
mov
fcmovne
or
movsl
or
jo
jns
insb
addr16
clc
or
add
imul
dec
sbb
sahf
xor
mov
int
pop
test
lods
jns
cli
sub
xor
add
testl
popf
xor
dec
vmread
pop
mov
pop
lock
ret
cmp
adc
dec
shll
sti
cmc
mov
test
ss
sub
pop
ret
fwait
lea
and
inc
jb
test
scas
icebp
and
lret
test
cmpsl
mov
sub
int
ret
pop
call
pop
and
scas
push
les
fcomip
lds
push
mov
nop
push
and
loopne
aam
shr
in
push
popf
pop
push
push
mov
comiss
xchg
xchg
add
insl
inc
das
xchg
sbb
pusha
xor
jns
sbb
and
and
mov
mul
mov
stc
lea
adc
jge
and
cmp
int3
call
dec
andl
pop
inc
add
sbb
out
pusha
pop
inc
sub
jge
imul
pop
dec
push
and
inc
lods
mov
jae
pop
sub
mov
loope
sbb
sbb
jle
insl
leave
and
jmp
lret
jp
add
pop
push
push
fwait
cmp
shlb
cld
pop
push
popa
adc
xor
jg
aam
into
outsl
cmp
sub
xchg
push
mov
jmp
clc
xchg
sub
adc
jg
sbb
aam
test
adc
mov
xor
inc
ds
mov
dec
pop
or
xchg
std
add
iret
xor
andl
dec
insb
scas
js
inc
ret
mov
test
inc
sbb
addr16
fldcw
xchg
cmc
dec
lahf
mov
jb
cmp
andb
xor
cmc
adc
popf
mov
ss
pop
sub
xor
push
out
aad
mov
lods
add
and
gs
ret
add
mov
es
cltd
push
lahf
int3
test
inc
fldt
lret
shl
arpl
sub
mov
je
sbb
pushf
ret
and
call
xor
out
xlat
insb
ret
aas
repnz
cmp
call
sahf
adc
in
cli
sub
inc
mov
xor
mov
xor
push
lret
or
push
bound
mov
xchg
and
fmull
mov
fisttpl
xlat
sbb
and
inc
add
lock
xchg
fdivrl
fsubs
xchg
lahf
stc
dec
loop
mov
je
push
test
mov
mov
je
mov
mov
test
dec
push
test
mov
movsb
cmpb
fildll
rcr
jne
movsb
sub
insb
test
sub
pop
ss
orl
sbb
mov
or
jp
insl
cld
pusha
jne
pop
out
jp
incb
and
out
fnstenv
jo
jge
or
push
inc
das
adcb
push
push
pmulhuw
aas
iret
arpl
out
ret
inc
bound
jo
nop
sub
inc
jg
lcall
mov
add
je
pop
push
cmp
lock
loop
mov
sub
jae
leave
xchg
test
and
test
mov
lods
xor
popf
in
insl
mov
mov
lret
lret
ret
enter
shrb
add
shlb
cltd
lcall
or
gs
iret
pop
sbb
push
sub
xor
or
pusha
xor
into
adc
dec
and
sub
cmpsb
push
nop
das
ret
xchg
cmp
jne
xchg
pusha
cmp
inc
sahf
int
pushf
jne
or
pop
cwtl
mov
ret
dec
out
popa
mov
dec
sbb
mov
cmp
jo
or
xchg
xchg
pop
fcoms
mov
fidivl
and
lahf
pop
stos
iret
or
bound
and
js
in
sbb
dec
rolb
inc
pop
cs
ds
nop
push
ljmp
outsb
add
cli
std
xchg
lods
mov
lds
gs
cmp
mov
in
out
popf
xor
adc
push
sbb
scas
inc
and
int
dec
out
in
out
data16
lret
insl
cmp
sbb
rcl
and
repz
pop
xor
mov
aaa
mov
out
and
and
aad
fdivl
pop
mov
push
jge
cmp
popf
add
repnz
pop
cmpsl
out
lds
leave
xchg
sub
lds
xor
mov
inc
push
sbbb
testb
pushf
adc
dec
scas
jne,pn
in
stos
sbb
outsb
jle
das
xor
aad
mov
loope
xchg
sar
pop
xlat
clc
fidivs
sbb
leave
nop
mov
push
out
loope
sub
lcall
sbb
stos
inc
pop
aad
and
jmp
or
push
adc
sarb
cli
stos
or
mov
aad
mov
in
shlb
cmp
mov
sbb
je
fsubl
adc
scas
mov
sti
or
hlt
rol
mov
mov
pop
popa
pop
loope
addl
mov
shll
xor
scas
mov
in
jl
and
xor
and
and
and
xor
xor
push
cmp
adc
push
jbe
xor
pop
andps
mov
pop
lods
sbb
iret
fldl
xor
arpl
fstl
ret
jo
add
mov
mov
je
stc
xchg
je
mov
and
lret
pop
hlt
add
rcll
int3
jae
dec
movsl
in
inc
fiaddl
push
out
or
pop
sbbl
mov
insl
sub
sbb
int3
inc
cmp
cs
cmpsb
jne
fdiv
xchg
pop
mov
add
mov
adc
pop
inc
xchg
sbb
xchg
mov
inc
cmp
sti
icebp
cmp
dec
pop
imul
pop
dec
lret
adc
adc
xor
lret
loopne
push
cmp
out
sbb
cs
bound
adc
or
hlt
mov
lock
aam
std
adc
pop
dec
lea
push
out
mov
loopne
sub
pusha
xchg
xchg
pop
scas
jp
insl
add
xchg
push
rorl
popf
jmp
push
inc
loop
cmp
jp
psllw
sub
dec
out
sbbb
push
cli
xor
aas
sub
mov
jno
cmpb
sbb
ret
push
ss
inc
imul
xchg
fs
inc
pop
mov
fisubs
push
fildll
xchg
pop
xchg
jo
outsl
jecxz
mov
roll
mov
faddl
and
xchg
xchg
sub
xchg
jle
movl
pop
imul
movsl
std
mov
adc
push
lcall
insl
cmp
pop
roll
gs
add
imul
insl
add
hlt
mov
pop
das
sub
adc
mov
cmc
mov
adc
pop
out
adc
xlat
or
add
jge
adc
pop
pop
jne
add
ret
or
mov
lock
push
mov
mov
add
jnp
das
jle
xchg
xchg
mov
pop
enter
ljmp
stos
ret
mov
icebp
mov
lods
js
cmp
push
stos
jnp
shll
in
push
and
jns
icebp
imul
jbe
jns,pt
push
sub
adc
or
fld
push
mov
nop
js
ret
cmpsb
add
in
lods
xor
jns
mov
icebp
leave
stos
sbb
or
mov
fstpl
mov
mov
mov
dec
pushf
mov
sbb
mov
mov
mov
fisubrl
inc
test
test
aaa
mov
mov
jg
dec
leave
pop
jo
pop
xor
ret
pop
hlt
sbbl
dec
fdivp
mov
cmp
movsb
fwait
push
mov
xchg
shll
xor
ljmp
push
xchg
add
cs
add
inc
pop
in
jae
mov
xchg
loop
mov
sub
jmp
push
je
mov
sbb
dec
cmp
sti
xorb
mov
sbb
push
subl
stc
aam
add
pop
and
mov
out
call
clc
rolb
aam
fsubp
test
lcall
mov
and
cmp
out
and
push
mov
loope
in
xlat
repz
inc
pop
scas
xor
js
subl
mov
xchg
mov
ret
mov
rcrl
mov
insb
decl
outsb
jl
jnp
cmp
stos
inc
mov
sub
dec
cli
lret
add
inc
mov
jno
scas
imul
test
adc
hlt
adc
and
jp
mov
outsl
cli
sbb
ja
jp
xor
in
mov
or
cmp
pop
popf
imul
scas
mov
nop
aam
sub
sbb
lret
pop
cltd
sti
loope
mov
in
lock
sbb
jae
xchg
dec
insb
add
or
mov
out
daa
jb
cmp
jo
cmp
jae
sbb
outsb
int3
pop
sub
scas
xor
xchg
inc
jbe
xor
push
xor
adc
je
mov
push
pop
mov
xchg
nop
fcmovnu
jno
lods
add
adc
clc
or
scas
test
pushf
pop
adc
shl
push
mov
fimull
jecxz
inc
jb
mov
fcmovnb
pusha
mov
push
test
sahf
sbb
and
jb
mov
mov
fdivrp
xor
lds
ret
movsl
cmp
or
cmpsl
xchg
ret
in
leave
in
push
sti
gs
or
cwtl
cmp
fistps
stc
std
push
push
loope
push
jns
mov
and
out
mov
inc
dec
pop
lret
cmpsb
add
hlt
inc
andb
jmp
push
loope
jecxz
xchg
jg
push
mov
lea
outsl
daa
lods
mov
cmp
jl
mov
push
pop
imul
lods
mov
inc
loopne
out
dec
pop
loop
or
push
mov
mov
sub
mov
ss
cli
xchg
push
push
pop
cmp
je
call
add
lods
push
es
mov
mov
dec
inc
test
adc
out
inc
xlat
mov
mov
xor
jb
dec
mov
inc
jmp
repz
scas
mov
bound
jg
mov
inc
fst
out
jb
test
adc
push
push
movsb
js
sub
clc
sbb
xchg
push
pop
jae
xor
ljmp
push
push
into
push
nop
push
adc
mov
push
int3
cmpsb
rcrl
xchg
mov
icebp
lods
shll
adc
dec
scas
js
mov
sbb
xor
popf
ja
mov
shlb
or
inc
test
sbb
out
arpl
mulb
xor
cld
cmpsb
sbb
jmp
cltd
test
daa
pop
mov
hlt
mov
mov
enter
jle
mov
sarb
mov
aaa
jno
cmp
arpl
mov
cmc
mov
cli
push
sub
movsl
add
lret
jl
js
mov
jnp
rcll
addr16
and
cmpsl
or
data16
jo
gs
shlb
sbb
cmp
das
inc
fcomps
pop
xor
dec
int3
inc
fadd
or
daa
mov
cmp
popa
mov
out
test
scas
xor
push
lahf
mov
push
faddl
lcall
nop
daa
pop
mov
out
les
out
nop
push
stos
fmulp
rclb
aas
or
adc
dec
mov
cwtl
das
movsl
cmp
imul
pop
sub
dec
mov
icebp
sar
lret
dec
pop
mov
in
and
mov
mov
cmp
push
scas
cmpsl
cs
xor
push
sarb
mov
popl
add
sti
in
sbb
cli
fmulp
jecxz
es
or
pop
scas
inc
mov
pop
es
arpl
push
mov
jg
jns
mov
pop
fbstp
aam
xor
push
or
xchg
sbb
std
pop
xor
inc
outsl
inc
push
out
sarl
push
xchg
rcr
add
imul
or
pop
mov
mov
adc
addr16
cltd
fsubr
inc
and
fsubr
push
std
push
cmpsl
daa
sub
sbb
inc
mov
mov
jo
mov
dec
jl
xchg
lods
cmp
lahf
repz
pop
mov
lss
fmull
push
clc
mov
imul
je
mov
or
mov
cmp
cmpl
popf
push
subl
mov
ljmp
std
shlb
shll
scas
test
pop
pop
jno
sbb
leave
loope
hlt
aad
mov
jecxz,pt
mov
addl
lea
xchg
enter
push
mov
int3
sub
mov
and
iret
add
repnz
mov
pop
leave
iret
test
int3
dec
mov
pop
xchg
xor
jg
ds
jno
xlat
mov
push
out
adc
xor
sub
push
and
popf
xor
jle
adc
jle
sub
dec
lahf
fdivp
and
push
imul
and
lret
lret
outsb
inc
in
jne
push
push
jno
add
push
xchg
fnsave
push
mov
add
das
mov
roll
hlt
or
repnz
and
jbe
and
into
gs
sub
jg
dec
js
cmp
push
out
daa
sti
adc
int3
xchg
push
arpl
push
push
cmp
mov
repnz
lret
bound
scas
jmp
imul
bound
inc
sbb
inc
xchg
mov
add
aas
cmpsl
mov
sbb
ds
xchg
push
mov
sbbl
insl
ret
xchg
mov
mov
repz
inc
push
and
push
loopne
loop
daa
test
jno
stos
and
mov
subb
cmp
or
sub
sbb
ret
mov
jg
stos
push
and
xchg
sahf
dec
scas
cmp
xor
iret
xchg
cmp
lds
aaa
fwait
pop
jecxz
xlat
test
push
jbe
pop
push
inc
mov
and
adcb
inc
pop
out
ljmp
push
bound
aad
mov
jmp
jmp
popa
cld
shrb
jne
lock
mov
in
mov
adc
mov
mov
adc
sub
mov
lea
scas
dec
notl
leave
test
jno
movsb
lcall
pop
aas
adc
sbb
out
add
xchg
pop
or
call
movsl
cs
pop
shr
popa
xchg
std
das
mov
fs
xchg
xor
mov
orl
loop
mov
pop
inc
cwtl
rclb
adc
sahf
clc
rcrb
mov
fidivrl
adcb
lods
add
or
xchg
push
fwait
cmpsl
test
dec
fisttpl
push
popf
lret
je
in
and
idivb
adcb
sub
mov
dec
out
mov
dec
mov
insl
les
mov
sub
pop
ljmp
stos
movsl
icebp
jns
std
rol
lcall
cli
mov
xchg
ds
cmp
adc
in
sub
sub
subb
mov
or
mov
or
into
cmp
ds
loopne
imul
icebp
mov
insl
inc
fstp
xor
jl
int3
sbb
mov
cmp
aad
mov
push
mov
and
fwait
xor
ja
sbb
xchg
mov
xchg
inc
adc
and
bound
and
sub
cld
add
sub
fsubrs
out
mov
and
in
lea
jae
push
ljmp
sar
inc
jo
pop
jecxz
add
sbb
js
sbb
decb
and
push
pop
push
gs
cmpl
daa
fmuls
lahf
add
outsl
jle
mov
mov
mov
cmp
mov
in
pop
in
sub
fst
pop
insl
add
test
mov
push
pushf
mov
push
js
outsb
push
cmpsl
in
dec
pop
ja
js
jb
mov
push
mov
sbb
cmp
icebp
cmc
les
movsb
int
cmc
add
ret
lea
sub
out
xchg
mov
sub
pop
pop
in
sti
sarl
jbe
adc
mov
outsb
loop
and
push
idivb
add
arpl
dec
loopne
mov
mov
cmp
imul
xchg
out
xchg
ds
es
stos
std
in
jb
pop
xchg
das
adc
sbb
jne
das
xor
cmp
mov
mulb
mov
stos
mov
add
push
add
dec
sbbl
xchg
sbb
sub
mov
out
xlat
addl
sub
push
cmp
scas
mov
mov
cs
loope
cwtl
das
inc
fisubs
dec
xchg
mov
aaa
and
inc
dec
add
lods
nop
mov
fmuls
mov
cmp
and
jle
inc
push
out
jns
jge
cli
adc
inc
call
xchg
add
or
rep
out
mov
lds
lea
and
jbe
roll
cmp
inc
rcll
adc
rolb
dec
push
adc
fcom
xchg
popa
add
outsb
ret
mov
out
daa
enter
or
dec
rolb
scas
dec
fisubs
rclb
dec
dec
mov
hlt
xlat
push
dec
dec
dec
inc
cmp
rorl
out
in
mov
cli
lods
stos
repz
jae
cltd
insb
leave
ss
lea
mov
rcll
mov
insl
fbstp
add
jl
repz
out
dec
out
jl
enter
lret
sti
and
push
loop
test
dec
or
lods
ja
in
jb
mov
push
sbb
test
fisttpl
fsubr
push
loope
dec
xchg
mov
cmpsl
icebp
xchg
sub
dec
sbb
into
push
stos
faddl
pusha
mov
inc
lods
pop
mov
sub
mov
dec
out
mov
popa
sbb
xor
jne
sbbb
fmul
call
inc
rcrl
std
sub
mov
test
mov
loopne
std
push
push
jo
mov
sbb
mov
xchg
xor
adc
sub
push
sbb
jbe
fimull
inc
push
sub
clc
xor
xor
mov
or
fnstsw
femms
or
mov
cmp
xlat
jns
jae
pop
movsl
fdivs
inc
loope
imul
cmpsb
aaa
xor
jae
sub
mov
sbb
insb
push
push
inc
sub
mov
insl
add
sub
mov
lahf
cmpb
leave
in
jg
test
pop
ljmp
cli
aas
pop
stos
sub
addr16
sbb
enter
add
bound
pop
stos
pop
out
shld
fidivs
jb
jae
es
lcall
bound
scas
mov
ss
or
movsl
lods
bound
inc
subb
sarl
pop
lds
xchg
pop
cli
jp
daa
shlb
popf
out
mov
pop
cltd
fisubrs
hlt
xchg
loopne
dec
push
repnz
fucomip
xchg
push
mov
xlat
jo
or
jae
les
roll
push
imul
jno
bound
mov
sub
xor
dec
out
sub
repz
popf
add
sub
pop
push
rclb
add
mov
xor
test
ljmp
jp
imul
dec
xchg
cld
in
push
mov
mov
adc
inc
mov
add
or
push
mov
inc
je
xchg
lds
mov
es
adc
loope
popa
pop
adcb
pop
out
aam
xchg
push
je
int3
sub
leave
xlat
mov
jge
pop
xor
mov
add
shll
mov
add
mov
mov
loop
mov
mov
out
mov
sahf
dec
inc
fdivs
pop
mov
movsb
adc
and
int
addr16
sub
jbe
shlb
mov
cmp
mov
add
pop
mov
inc
jae
jg
lret
lahf
cs
and
cmp
das
rcr
lret
push
sahf
jno
push
xchg
into
pop
jmp
or
cmp
xlat
test
jg
mov
pop
ds
je
cmp
sbb
mov
push
xchg
jb
jl
test
adc
sti
pop
es
jo
ret
adc
lret
sti
cld
cwtl
cmpsl
test
xchg
sub
cwtl
xchg
push
bound
inc
xchg
xchg
or
dec
push
es
cmp
pop
insl
cmpsl
and
addr16
push
mov
mov
test
lahf
push
testb
pop
and
cmpsl
or
data16
sub
sub
push
cld
ret
arpl
lods
insb
leave
andl
pop
sbb
adc
test
inc
xor
mov
add
pop
les
push
mov
adc
out
pop
sub
iret
cmpsl
xchg
out
xchg
or
mov
xchg
adc
pop
cmp
mov
shl
inc
and
or
aad
adc
pop
leave
pop
inc
aaa
inc
mov
int3
mov
add
insb
imul
add
jl
ss
mov
and
xchg
popf
adc
ljmp
add
out
add
pop
cli
mov
push
popl
pop
pusha
nop
push
mov
insb
in
je
sbb
mov
mov
mov
es
pop
jmp
adc
in
lock
rcrl
fidivs
fsubp
xchg
xlat
outsb
and
lods
bound
mov
and
cmp
cmpsl
dec
pushf
scas
jg
xchg
stos
jae
test
xchg
fimull
dec
je
addr16
fistl
lcall
and
int
stc
sbb
push
fucomp
inc
jle
sahf
sbb
push
sub
ja
repnz
lods
add
cmp
push
test
mov
nop
cmpsb
std
pop
mov
jle
and
lea
push
mov
popa
mov
data16
cwtl
push
xor
add
loopne
mov
xor
test
mov
data16
mov
dec
mov
inc
and
ror
xor
fsubrp
cmc
lea
cmp
sbb
xor
jns
pushf
mov
mov
jg
xchg
movb
leave
test
add
or
push
sahf
sub
ret
lahf
test
adc
rorl
xchg
mov
cltd
adc
lret
mov
sarb
mov
dec
je
test
out
mov
pop
scas
arpl
sub
pop
enter
inc
cmpsl
iret
inc
fiadds
shll
stc
jno
jae
bound
xchg
or
inc
iret
movsl
cmp
bound
sub
lods
add
lds
lods
sub
fisubrs
cltd
pop
push
int3
jge
adc
dec
fldenv
cmp
sbb
adc
mov
fidivs
mov
xor
sbb
xor
and
jno
cmp
jecxz
stc
adc
add
jne
jmp
push
call
gs
insb
or
mov
dec
jbe
mov
jmp
movsl
sub
subl
dec
enter
sub
negl
outsl
inc
popf
dec
pop
les
add
push
cmp
xlat
xchg
dec
and
outsl
push
out
pop
iret
and
int
test
xor
inc
js
and
imull
cmpsb
adc
fldl
xchg
pop
sub
stc
addr16
sub
aad
push
nop
rol
jbe
sbb
and
sbb
push
aaa
pushf
add
lods
cli
ja
sub
loop
std
std
push
addr16
sar
incl
enter
lods
or
xchg
adc
das
cmp
ds
stc
sahf
clc
sub
repz
stos
mov
jmp
out
repnz
pop
in
push
das
inc
fldcw
add
in
sub
xchg
sbb
xor
sti
lock
jbe
xchg
test
inc
mov
roll
shll
repz
lds
xorb
loope
pop
xchg
pop
jo,pn
movsl
rcrl
xchg
push
or
das
out
in
jle
repnz
mov
mov
sbb
pop
std
lods
adc
jmp
pop
ljmp
add
in
scas
inc
test
and
arpl
ljmp
and
fnsave
push
sub
mov
rol
daa
xor
cmpsl
stos
push
push
dec
mov
fnstenv
push
les
ficomps
arpl
mov
lcall
ja
sbb
inc
dec
xchg
push
push
add
pop
cmpsl
push
lcall
popf
cmp
cmpsl
orl
mov
cmpsb
ds
mov
mov
out
idivb
jl
push
or
dec
cld
mov
jb
adc
xorb
shr
ss
int
stos
add
push
arpl
aaa
arpl
xchg
movsb
scas
scas
mov
ret
and
dec
fcmovu
jbe
jo
fs
mov
in
jp
dec
mov
jnp
mov
xchg
add
xor
mov
xchg
repnz
pop
shlb
loop
fwait
xor
jno
jns
fsubr
dec
hlt
fdivs
lods
scas
push
daa
push
fnsave
enter
jg
aas
add
lret
mov
lock
les
push
fisttpll
shll
lret
js
mov
pop
lock
jp
adc
sbb
popf
mov
loop
xor
hlt
leave
cmp
and
fwait
push
mov
jb
popf
ss
xchg
pop
adc
mov
daa
sbb
loop
mov
fwait
dec
sbb
cmp
iret
lret
and
push
inc
fisubl
in
rcrl
popa
clc
xchg
jge
jae
cld
cli
xchg
sbb
push
sub
out
neg
mov
in
int
ja
pop
xchg
push
int
jl
mov
add
jmp
cli
mov
add
sbb
cmc
xchg
and
cmpl
inc
xor
jle
in
inc
mov
dec
inc
adc
push
inc
fs
push
je
mov
or
icebp
push
sbb
out
in
xchg
pop
inc
lret
je
or
sub
mov
les
push
ret
adc
fs
in
xor
pop
cmpsb
inc
in
and
inc
pop
jb
adc
push
das
sub
sub
test
cwtl
mov
and
int
xchg
mov
je
add
mov
sti
mov
mov
jno
or
nop
cmp
fdivrs
test
dec
jecxz
inc
into
or
cs
fcmovbe
jecxz
or
dec
push
addb
lea
loopne
pop
in
mov
addr16
nop
mov
movsl
ret
jp
mov
stos
imul
inc
in
arpl
imul
aas
fmulp
push
adc
addr16
insb
cmp
popf
clc
ljmp
dec
xor
scas
addb
add
cmpsl
xor
mov
mov
push
movsl
movb
gs
insb
imul
push
pusha
xor
or
cmp
mov
jmp
adcl
fucomip
inc
push
pop
sti
aas
pop
repz
outsl
outsb
enter
dec
jmp
sbb
je
pop
cmp
leave
mov
xchg
mov
sub
lcall
cwtl
stos
cwtl
xor
mov
fdivrl
into
enter
addr16
or
aas
stos
clc
sub
push
in
rcrb
sub
orl
daa
or
popf
inc
fwait
jb
lds
movsl
and
test
dec
pop
push
cmp
and
cmp
loopne
cmc
inc
jmp
dec
push
les
mov
test
pop
dec
subb
pop
lret
sbb
dec
or
adc
popa
lea
jl
in
add
cmovle
shl
jbe
out
mov
loope
adc
in
test
jl
lea
mov
jge
pop
sarb
into
rdtsc
aaa
mov
add
addl
adc
aas
mov
or
inc
shll
jnp
mov
notb
mov
inc
in
and
add
add
movsb
adc
stos
jl
jnp
or
movsb
xchg
mov
adc
and
xchg
cmpsl
dec
pop
inc
dec
ljmp
call
repnz
paddsw
fwait
xor
push
push
orb
push
jl
icebp
or
xor
std
daa
pop
jecxz
imul
mov
aam
lahf
ficompl
inc
mov
push
in
pusha
pop
jmp
xchg
sbb
adc
mov
pop
mov
int3
stos
or
loopne
mov
push
pusha
loopne
repnz
sahf
adc
jl
xor
push
leave
pop
int
std
cmpsb
out
sub
cwtl
mov
dec
addr16
lret
mov
bound
leave
sub
fidivs
mov
push
lods
in
xlat
popf
inc
imul
and
cli
jne
push
lds
jae
sub
sbb
pop
sahf
push
scas
test
sbb
and
in
imul
adc
pusha
insl
mov
movsl
cmp
leave
insl
lock
cld
ret
push
je
sbb
mov
or
loopne
or
decb
add
and
and
push
imul
wrmsr
jecxz
idiv
addr16
xchg
sub
xchg
sarb
adc
shlb
inc
dec
push
aad
dec
lods
aam
popf
outsb
stc
mov
icebp
mov
test
ret
test
xchg
push
fcomip
jo
sbb
das
adcb
in
insb
pop
lods
sbb
stos
push
cmp
xor
push
outsl
xchg
jae
jae
fists
test
imul
pop
iret
and
push
lock
or
cli
fs
pusha
dec
adc
dec
cmp
jecxz
add
gs
fcomps
mov
mov
scas
shrl
add
lods
xchg
data16
fcmovbe
xor
ja
cmp
inc
testb
push
in
xor
incb
fsts
sarl
pop
fwait
pushf
popf
and
adc
data16
add
dec
loope
ss
in
xchg
jo
sbb
insb
jp
incl
mov
arpl
sahf
lods
scas
lods
cmpsl
pop
inc
and
mov
aad
sub
into
cltd
mov
imul
pop
push
outsl
mov
and
jge
lock
bound
ljmp
call
or
jno
or
pushf
hlt
mov
iret
sbb
fnsave
mov
push
fdivrl
loopne
and
mov
into
repnz
or
movsl
adc
inc
pop
jmp
vprotd
jnp
jbe
mov
in
lea
cmp
jns
cmp
test
rorb
popf
mov
ficoml
insl
insl
movsl
mov
xlat
xchg
mov
jle
push
jg
adc
xor
fnstsw
cs
aas
pop
out
cmp
pusha
outsb
sbbl
cmp
mov
cmp
aas
push
popf
and
pusha
dec
pop
cmp
out
or
movsl
add
mov
sub
adc
leave
repz
cmc
icebp
dec
int3
arpl
aad
clc
jbe
clc
inc
insb
xchg
adc
cmp
xor
xchg
add
xchg
pop
ljmp
dec
nop
pop
sub
xchg
lret
dec
jae
ja
outsb
jl
inc
cmpsb
push
xor
push
and
inc
mov
jb
xchg
push
popa
addr16
mov
jmp
add
pop
push
mov
idivl
jo
outsl
sub
sbb
jl
je
jmp
or
fsubrp
pop
sahf
aas
push
pop
loop
xchg
icebp
loopne
add
test
inc
jne
jle
jmp
ret
icebp
xchg
popf
stos
int
push
mov
push
in
outsb
sbb
vpmacssdqh
aaa
jg
xchg
add
gs
xlat
pop
inc
add
and
sub
cmp
inc
push
es
xor
mov
jnp
imul
popf
int3
add
stos
push
fldenv
popf
data16
inc
pusha
testl
lods
dec
arpl
ret
push
fld
leave
jp
cld
in
xor
xchg
mov
iret
mov
push
insl
in
and
mov
rcr
add
insb
fildl
pop
xchg
mul
xor
mov
std
ret
data16
fnstcw
mov
add
ret
rcl
push
jae
icebp
dec
loope
cmc
jl
pushf
shrl
mov
lds
inc
dec
pop
sti
or
cmp
shrb
scas
mov
idivl
scas
sub
pop
mov
fcmovnu
jbe
xorps
push
jmp
lods
xor
sbb
fidivl
lret
into
loopne
mov
or
pop
jnp
adc
ds
and
jle
push
inc
mov
sbb
je
mov
aad
rorb
bound
sbb
mov
jae
push
ljmp
jno
jp
xchg
ja
mov
bound
xchg
sub
push
nop
pop
fisubrl
clc
arpl
lahf
lea
mov
pop
les
push
std
popf
dec
dec
mov
dec
cmp
cmpsb
out
test
dec
test
cmp
dec
add
and
push
adc
rclb
sub
out
shlb
sub
sbb
xchg
pop
adc
sarl
jg
lcall
arpl
dec
aaa
xchg
push
les
addr16
push
sbb
dec
jne
das
sub
dec
lods
mov
inc
aas
push
xor
stos
and
xor
jge
xchg
cmp
mov
pop
stc
push
push
test
jge
daa
fwait
les
pushw
lcall
int
out
jbe
out
or
sbb
jl
roll
push
xor
jne
cltd
fstpl
pop
sub
addb
shlb
icebp
pop
outsb
push
xchg
faddp
imul
enter
jbe
les
enter
stc
or
mov
pop
dec
stc
jg
jne
xchg
cmpsl
add
and
push
jo
pop
fcmovnbe
mov
push
jecxz
loopne
jb
add
adc
inc
fisttpll
mov
les
scas
fsubr
inc
pop
iret
xor
sub
mov
adc
lds
stos
imul
mov
pop
sub
jnp
jg
sub
loope
xchg
adc
mov
imul
xlat
push
mov
test
push
out
movsl
dec
retw
rcr
pop
jne
lock
sub
and
adc
js
lods
incl
incl
add
leave
mov
aaa
inc
push
outsl
fcmovu
int
mov
mov
cmp
adc
lcall
lods
inc
mov
int3
fs
fimuls
push
in
xchg
lock
into
into
mov
loope
repz
mov
or
sub
push
push
hlt
push
ljmp
jno
jecxz
mov
aad
dec
repz
xor
ss
repnz
mov
aas
xor
scas
stos
sbb
js
sbb
lcall
cwtl
loope
in
sub
add
mov
leave
test
into
jb
jne
iret
or
out
lock
jl
xor
rcll
movsl
inc
dec
xor
rcll
in
or
mov
sahf
pusha
addl
push
movsl
nop
mov
sub
cmp
and
and
push
pop
jge
adc
mov
or
cwtl
push
jns
lret
sub
pop
bound
mov
inc
sbb
iret
pop
cmp
movsb
fs
mov
and
mov
mov
jb
lods
sub
or
out
repz
addr16
lea
rcrb
in
mov
xchg
xor
sbb
jns
sub
dec
or
or
jle
sub
lahf
shrb
sbb
out
pusha
inc
stc
xchg
loope
cmp
lret
mov
popf
push
cltd
mov
push
shl
dec
mov
push
jge
add
loop
pusha
cli
adc
cmp
dec
gs
push
ret
stos
inc
cmc
fcmovnb
outsb
cltd
pushf
push
les
cmc
mov
out
rcrb
xchg
call
mov
adc
test
leave
mov
mov
add
scas
xor
adc
sbb
dec
icebp
and
das
mov
shl
mov
out
shll
mov
xor
and
les
aam
sbb
mov
dec
cmp
pop
dec
jmp
jnp
sub
test
pushf
jns
dec
call
mov
adc
sub
pop
lods
les
imul
pop
les
aam
lret
sbbb
pop
sub
lea
lret
cmp
inc
stos
stc
nop
fsubr
mov
xchg
js
xor
outsl
pop
or
sub
inc
das
xchg
into
outsl
fcmovbe
sti
push
xchg
push
in
mov
push
jae
ja
jp
stc
test
add
test
popa
jo
sbb
fisttpll
push
push
pushf
rcrl
add
in
dec
push
and
lock
cmpsl
pop
cmp
mov
adc
sub
imul
pop
loop
lock
inc
add
enter
jnp
mov
xor
pop
test
adc
jp
stc
mov
add
ds
fs
mov
sarb
mov
aam
cmp
popa
xor
in
cwtl
sbb
mov
in
add
popf
mov
lods
dec
loop
or
in
inc
pop
push
sbb
mov
inc
mov
sbb
ja
loop
bound
sub
testb
out
mov
mov
pop
call
xchg
mov
mov
pop
adc
and
dec
xor
out
popa
ja
mov
out
out
cmp
in
and
ret
shlb
popa
ja
add
push
mov
push
jnp
pop
sahf
movsb
ficoml
sarb
xor
mov
repnz
loopne
dec
cmp
pop
loope
xchg
dec
dec
loope
push
jge
xor
mov
xlat
xor
mov
std
lahf
pop
es
cmp
pop
cmc
cmp
pop
out
fnstcw
daa
shl
aad
jecxz
xchg
xchg
cmp
movsl
sbb
inc
idivb
inc
push
data16
mov
mov
pop
mov
frstor
push
leave
std
xchg
bound
jp
mov
jl
adc
cmp
sbb
cmpsb
cmp
xchg
pushf
mov
lret
mov
negl
pop
out
fldcw
je
push
jecxz
test
shr
rcll
movsl
ret
inc
mov
xor
fs
fdivrl
push
push
jl
or
repz
loopne
adc
mov
subl
lcall
xlat
imul
sub
sub
popf
push
nop
push
mov
and
sbb
leave
xchg
jo
lcall
fildl
mov
xor
sub
xchg
jg
mov
iret
pusha
cli
addr16
or
mov
subb
or
or
lret
xor
into
shrb
out
shrb
stos
stos
xchg
dec
sar
push
and
mov
loopne
mov
adc
sub
out
call
mov
mov
inc
add
xor
add
movl
dec
data16
push
push
nop
sub
sbb
mov
jno
xor
mov
sbbb
sbb
movsl
rclb
jmp
clc
data16
jp
adc
inc
or
std
xchg
je
fadd
add
sarl
sub
jnp
int
icebp
in
aas
lods
inc
inc
xlat
cmp
xchg
je
cwtl
pop
xlat
and
and
adc
mov
loop
lock
shl
scas
sahf
adc
jbe
sbb
test
add
adc
or
aad
sbb
movlps
test
je
clc
jae
push
adc
popf
inc
repnz
sbb
xor
add
mov
sarb
nop
hlt
mov
sub
je
das
or
sub
fstpl
and
push
xor
push
push
mov
push
adcb
fmul
sbb
mov
test
mov
xor
iret
rcpps
in
adc
ss
cli
xchg
cmp
leave
push
stc
add
mov
std
nop
mov
mov
mov
es
ret
cmp
mov
orb
fiadds
inc
add
cmp
push
insl
pop
scas
add
ja
mov
sahf
sbb
mov
cmpsl
divb
inc
stos
sbb
dec
dec
lcall
ljmp
sub
lea
lcall
lods
aas
lret
jae
pop
loopne
mov
dec
scas
lea
sbb
mov
push
xor
fbstp
popa
imul
insw
sub
or
cmp
pop
sub
icebp
stc
out
repnz
mov
clc
jp
sub
inc
mov
repnz
subb
jnp
movsb
pop
xorb
shrb
jl
jmp
sti
adc
mov
popf
mov
fidivl
cmc
inc
frstor
adc
xchg
inc
inc
popa
clc
js
and
add
call
or
jge
cmp
or
mov
out
test
out
or
fiaddl
out
xor
test
or
add
out
test
jns
cwtl
mov
call
test
xor
cwtl
std
pop
add
dec
loop
call
cmp
test
add
test
pop
mov
daa
lods
and
das
decl
pop
pop
jae
or
hlt
aaa
fdivrl
lret
jmp
mov
jbe
sub
xor
cld
xchg
push
push
and
xadd
adc
mov
xchg
xor
push
inc
fsubl
es
adc
dec
push
das
cmp
test
shl
leave
dec
add
and
pop
mov
mov
jno
adc
and
add
xor
sub
or
cmpsb
pusha
into
sub
cmc
dec
test
lds
jb
sub
sahf
shrl
cmp
xor
inc
fdivrl
sub
adc
push
mov
test
cwtl
out
divl
in
jl
leave
mov
repz
loop
cmp
das
icebp
cmpsb
dec
in
add
adc
outsb
ficompl
cld
add
movsl
pop
divb
dec
repnz
inc
jmp
pop
or
testb
push
clc
dec
sbb
xchg
pop
pop
sbb
mov
ret
xor
xlat
cltd
addl
nop
daa
pop
adc
scas
add
iret
test
mov
outsl
jno
test
mov
out
sbb
pop
popa
lods
adc
loopne
js
movsl
jmp
test
jb
adcb
inc
mov
mov
sbb
jp
and
mov
movsb
aaa
xchg
das
mov
dec
mov
adc
jge
lcall
and
test
lret
idiv
dec
aam
in
jns
xor
je
dec
jmp
sub
mov
ret
xor
lods
cltd
or
orb
or
cwtl
stc
nop
fldenv
lcall
shll
in
jge
push
pop
adc
jno
les
insl
sub
add
push
loop
sub
add
dec
xchg
hlt
adc
repz
fwait
add
fildll
in
cltd
push
lods
sbb
mov
ljmp
push
cwtl
inc
test
mov
lcall
cltd
add
lret
fdivs
movsb
or
aad
gs
out
gs
pop
pop
inc
jnp
bnd
mov
and
aad
dec
dec
dec
jecxz
dec
rclb
cmp
jns
hlt
push
sub
andb
pop
inc
fisttpll
stos
mov
loopne
test
mov
push
js
adc
or
xchg
loop
push
clc
loop
sub
sbb
sbb
movsl
cmpsb
rclb
leave
movsb
sbbl
inc
and
daa
ret
push
push
inc
xor
fmulp
and
aam
dec
and
mov
stc
add
xchg
xor
decl
in
cmc
andl
out
dec
push
popa
lds
mov
mov
mov
sarb
in
xor
and
dec
or
stc
into
int
or
push
nop
inc
push
xor
jnp
inc
or
adc
push
repz
xchg
push
mov
addb
rclb
cmpsl
sbb
fldl
xor
xchg
jns
add
xor
fbstp
lds
mov
cmc
out
daa
mov
sbb
dec
fidivrs
pusha
push
nop
mov
dec
loopne
jl
xor
rorl
lret
ret
sbb
sbb
sarb
mov
adc
cmp
lea
mov
lds
mov
movd
and
rorl
and
mov
jmp
rcrb
push
ret
fiadds
js
ret
arpl
dec
sahf
inc
adc
mov
subl
sti
cmp
inc
fsubrl
mov
jl
xchg
jp
mov
out
add
mov
mov
or
xchg
xor
sub
mov
iret
mov
or
xor
dec
sbb
sti
inc
jge
sti
scas
fiadds
outsl
call
in
mov
sub
nop
inc
out
mov
and
mov
lret
aas
das
hlt
cmp
mov
inc
lcall
and
ud0
push
dec
inc
sub
imul
imul
sbb
mov
inc
pop
into
push
mov
and
ret
cmp
jp
in
lods
mov
daa
outsb
into
lret
pop
lods
cmc
xor
push
repnz
mov
cmp
xlat
jmp
cli
push
mov
arpl
and
xchg
sub
push
push
dec
dec
movsb
push
sti
fwait
jl
push
movsl
cmpsl
mov
and
pop
pop
mov
mov
push
popf
mov
stc
mov
bound
subb
push
fnstenv
jmp
push
dec
and
data16
adc
xchg
pusha
mov
test
push
mov
adc
iret
out
roll
cmc
stc
imul
and
imul
inc
imull
mov
add
mov
mov
mov
insb
lcall
mov
int3
jle
push
imul
call
jmp
icebp
xchg
stos
out
jae
ret
jg
sbb
mov
xlat
adc
aam
lcall
sbb
aam
dec
pop
jns
mov
and
pushf
ljmp
mov
aam
cmp
je
neg
jo
cmp
and
sbb
gs
cmp
jae
push
xchg
and
daa
daa
into
cwtl
in
cs
mov
ja
pop
ja
mov
mov
dec
cmp
adc
and
xchg
inc
xchg
out
jg
les
sbb
clc
enter
mov
aaa
jo
andl
int3
cmpsl
cmp
movsl
lret
jnp
xchg
jge
push
out
mov
mov
ja
jns
xchg
inc
mov
mov
push
out
repnz
nop
in
in
and
ret
loopne
push
jnp
xlat
nop
sub
mov
inc
and
pop
movsl
inc
int
test
pop
inc
pop
shll
int
mov
aas
jmp
sbb
sub
cmc
rclb
andb
jge
adc
mov
fstps
dec
pop
mov
imul
and
bnd
jmp
int
inc
xor
cmc
nop
jmp
cwtl
sbb
pop
pushf
sahf
or
jns
xor
and
sbbb
add
sbb
bnd
push
sti
or
mov
repnz
pop
sbb
sti
sbbl
or
xchg
sarb
mov
lcall
in
arpl
stc
inc
fsubr
pop
lods
ja
or
jle
lods
out
xchg
pop
pop
add
cmp
jno
mov
push
orl
cmc
xchg
daa
xchg
aam
cmpl
pusha
cmp
add
xchg
clc
cmp
cld
push
jmp
pop
dec
sbb
dec
jb
popf
lret
sbb
lock
lea
xor
jb
or
sub
or
pop
sbbl
pusha
jp
sub
sbb
sub
mov
les
add
sub
and
in
push
mov
mov
mov
repnz
div
jne
xor
inc
cli
push
scas
rcr
imul
fldt
push
arpl
shll
pop
jl
inc
sub
push
sti
cmc
inc
arpl
sub
or
or
shlb
pop
mov
and
sahf
imul
or
mov
dec
inc
mov
lods
xor
call
iret
repnz
arpl
shlw
insb
cmpsl
repz
aas
stos
lret
push
imul
cmpsb
xor
sbb
inc
xchg
add
adc
adc
inc
in
je
and
pop
add
xchg
dec
outsb
push
ret
fiaddl
out
lods
sbb
sub
mov
rcrl
inc
mov
mov
ljmp
call
out
jbe
push
sub
jmp
push
cmc
xchg
jnp
fistpl
inc
icebp
jns
pop
jmp
pop
add
pop
jo
add
and
xchg
fbstp
aad
mov
dec
cltd
out
movsb
mov
or
mov
mov
dec
adc
mov
pop
lret
mov
sub
mov
testl
daa
add
fcompl
mov
std
mov
je
push
pop
fimuls
and
inc
popa
fcoml
and
push
xor
jmp
xor
sbb
mov
insb
sub
xor
dec
fistpll
data16
mov
pushl
pop
or
xchg
adc
push
insl
shll
xchg
inc
std
mov
mov
or
and
mov
mov
pop
push
pushf
add
out
stos
sbb
in
push
js
fldcw
pop
insl
mov
fldcw
add
fildll
xchg
push
inc
daa
or
ljmp
aaa
xor
int3
loopne
adc
fdivp
pop
mov
or
outsl
adc
jno
sub
ja
std
aas
test
hlt
mov
outsb
sub
xchg
xchg
mov
sbbl
jle
clc
inc
xchg
and
mov
stos
inc
mov
lcall
xchg
dec
and
add
push
out
insb
adc
jp
add
pusha
mov
or
daa
mov
ja
pop
mov
and
adc
pop
sub
mov
mov
loop
aaa
add
inc
xlat
test
or
fidivs
insl
mov
jb
add
dec
dec
mov
neg
daa
cmp
xchg
pusha
xor
lods
lahf
mov
mov
add
repnz
pop
xor
imul
out
sbb
fsubs
inc
or
or
lea
jnp
mov
pop
movsl
insb
sub
or
aam
insb
int3
sub
gs
fildll
add
or
mov
dec
xchg
cld
dec
cmp
and
sahf
ljmp
and
push
jg
mov
cmp
shrb
inc
inc
ret
xor
mov
jo
xchg
bound
jns
push
shl
ret
dec
jecxz
bound
xchg
sbb
sub
dec
aas
jg
shl
add
mov
jmp
or
in
mov
test
ja
adc
cmovae
shl
inc
pop
cs
xor
push
fwait
jle
pusha
das
enter
outsb
push
fwait
lods
nop
inc
pop
and
pop
xlat
out
shlb
jl
fistl
mov
or
inc
rclb
xchg
add
xchg
xor
or
sar
mov
aas
or
js
inc
bound
dec
es
movsl
sbb
in
out
repnz
mov
bound
cmc
jb
push
sahf
push
sbb
jno
je
rorl
xchg
hlt
stc
scas
fs
lahf
lds
dec
ljmp
sbb
stc
nop
sub
jge
and
jne
aad
ret
or
fadd
shrl
cs
mov
sbb
sbb
shlb
call
xchg
mov
shl
xor
fdiv
dec
bound
xchg
pusha
lea
call
leave
lret
idivb
daa
mov
aas
in
xor
push
iret
sub
popa
sub
aam
int3
cwtl
adc
cmc
pusha
or
jo
jmp
pop
xchg
mov
sahf
daa
xchg
mov
mov
mov
iret
pop
ss
mov
dec
jne
les
lret
in
jnp
mov
mov
jne
xor
xchg
push
sbb
or
cs
sahf
or
imul
ds
dec
sbb
loope
hlt
lret
cmpl
sub
or
mov
push
nop
sub
mov
in
cmpsl
dec
and
gs
adc
push
aad
bound
push
xorb
pop
nop
inc
jg
mov
pop
lods
xchg
es
icebp
jae
lock
roll
and
stc
cmp
push
popf
lods
jno
dec
mov
mov
adc
jns
negb
mov
inc
fdivs
adc
pop
xor
push
mov
sub
insl
dec
out
imul
repz
pop
push
test
lods
push
xor
stos
mov
jmp
or
or
int
add
add
jno
push
idivb
stc
popf
lds
cli
stos
hlt
outsl
jmp
icebp
insl
fnsave
and
enter
push
sub
and
in
and
lods
ficomps
stos
inc
sub
xchg
js
lahf
je
dec
popf
mov
or
into
movsl
adc
push
cmp
mov
popa
and
jnp
out
loope
mov
arpl
mov
js
fwait
push
shll
paddb
push
push
dec
dec
pop
std
adc
pop
push
dec
mov
sub
jg
jae
int3
sbb
test
and
daa
push
lret
push
imul
loopne
ljmp
outsl
jb
outsl
mov
scas
pop
jp
loope
cmp
pop
andl
fbld
std
cmc
int3
xor
dec
push
inc
cmc
mov
mov
xor
adc
sbb
fs
icebp
cltd
pop
insb
inc
cld
sbb
xchg
fcomps
arpl
dec
stc
sbb
int
mov
pop
scas
cltd
or
xchg
or
aad
push
loop
out
jnp
inc
mov
inc
mov
lret
rep
pop
loopne
add
ljmp
cltd
fwait
jne
repnz
mov
inc
bound
leave
loop
sub
in
and
and
sbbb
test
andb
pop
out
ds
and
fs
xchg
lods
mov
xorb
cli
test
stos
xchg
sbb
xchg
imul
sahf
adc
cmpsb
push
add
jle
lods
fcoml
bt
dec
xor
xchg
push
test
mov
xchg
push
mov
dec
dec
bound
in
test
pop
mov
mov
jecxz
cmp
push
add
push
mov
outsl
rep
aad
push
mov
arpl
hlt
push
or
mov
sub
mov
dec
jle
in
shrl
test
xchg
data16
decb
movsb
push
xor
scas
inc
mov
push
hlt
mov
xchg
dec
dec
leave
cld
adc
lahf
or
adc
fwait
shlb
cmp
jne
xchg
sahf
cltd
daa
cltd
xor
mov
mov
imul
add
cltd
mov
lahf
mov
xor
insb
jp,pn
outsl
inc
das
jbe
adc
mov
aad
dec
jo
inc
cmpsb
popa
xchg
nop
inc
mov
jl
xchg
xor
push
dec
jmp
sar
jecxz
push
in
inc
es
fistl
sbb
outsl
push
aam
push
add
cmp
lea
mov
test
fistps
adc
das
in
add
mov
jle
insl
xor
push
or
sub
add
mov
in
rcr
lretw
sub
js
pop
repz
std
out
jb
pop
jp
push
stc
push
ja
aaa
push
pop
fistl
lahf
cwtl
das
rcr
mov
mov
stos
shlb
iret
inc
adc
mov
int
int
xor
or
lods
mov
cmp
inc
scas
lods
mov
popl
xchg
sub
shlb
push
push
mov
leave
mov
and
popa
push
xchg
add
add
test
mov
xor
pop
adc
subb
inc
pushf
mov
in
shlb
aaa
leave
fbld
adc
stos
jmp
cmp
and
punpckldq
mov
in
xor
cmc
cmp
push
jmp
mov
mov
sub
inc
sbbb
gs
sbb
adc
loope
fs
inc
arpl
pop
mov
testl
rorb
xor
sbb
adc
and
and
popa
int
cwtl
inc
fldenv
subl
cwtl
mov
es
ljmp
sbb
das
aaa
mov
mov
les
inc
loopne
lock
mov
sbb
mov
push
xor
sbb
or
inc
out
fs
push
cwtl
roll
push
mov
addr16
enter
subb
hlt
sbb
push
xor
dec
mov
js
xchg
jb
or
dec
lahf
inc
out
out
jmp
xor
pop
inc
cmp
add
lea
fmull
test
xor
and
cwtl
jns
jae
decb
mov
fistps
shlb
pop
and
adc
movsl
test
hlt
mov
lret
in
test
jne
pop
push
mov
or
inc
les
jns
std
or
pop
jne,pn
jbe
inc
and
and
adc
mov
test
popf
aad
mov
jge
inc
lods
pop
push
andb
jae
mull
push
insb
mov
fisubl
jle
or
dec
pop
imul
mov
int
add
jne
mov
fldt
sbb
mov
mov
in
push
lock
fisubrs
in
ror
outsl
leave
xchg
adc
fsubp
sub
mov
scas
cmp
or
mov
pop
loope
or
rcrl
scas
popf
sub
xchg
jb
stos
lock
mov
ljmp
cmc
xchg
push
pop
sub
dec
dec
shlb
cmp
aam
cmp
int3
loop
int
or
mov
movb
out
sbb
xchg
adc
iret
push
test
sub
mov
and
jae
and
mov
cs
movsl
imul
icebp
rcr
xchg
enter
bound
adc
push
dec
add
imulb
movsb
ljmp
mov
ret
aad
movsb
mov
test
xor
pushf
jmp
les
decb
fstp
rcrb
mov
or
adc
pop
leave
push
xor
push
pop
and
add
ss
dec
lods
loop
test
pop
pop
out
stos
in
int
aam
adc
pop
xchg
nop
pusha
pop
ljmp
popf
and
pop
mov
or
orl
xchg
inc
lcall
xchg
mov
push
das
and
insb
sbb
jle
mov
dec
cli
xor
int
pusha
addl
sub
and
mov
push
dec
cmpsl
cmp
mov
and
cwtl
js
fisubrl
xor
lods
sbbb
test
add
pop
test
xchg
test
clc
std
push
push
insl
xlat
push
jmp
add
ljmp
ljmp
mov
jns
ljmp
test
lret
mov
xlat
loop
hlt
hlt
add
and
push
pushf
test
cmpsl
add
and
jl
mov
inc
cmpsl
mov
bound
dec
hlt
addr16
stc
movsl
inc
xor
adc
in
fcmovnb
adc
mov
stos
mov
cmpsl
stos
es
push
clc
stos
mov
mov
xchg
adcb
mov
dec
das
call
inc
cmp
dec
push
mov
sub
fwait
add
mov
push
addr16
popa
push
scas
mov
pop
ljmp
outsl
scas
push
cld
xchg
inc
and
and
sarb
into
lods
mov
jnp
fstl
cwtl
xlat
mov
hlt
push
or
out
mov
lds
inc
and
cmp
das
divl
andnps
inc
inc
js
xchg
das
in
pop
decb
stc
test
into
xor
je
hlt
mov
cmp
jge
adc
fmull
inc
pop
push
rcr
insl
into
cmp
movsb
pop
hlt
into
rcrl
adc
pop
fstpl
mov
mov
push
mov
fisubs
fsubp
stos
xchg
hlt
xchg
dec
movsb
pushl
mov
xchg
lods
xchg
stos
aas
fldl
jle
xlat
fsubr
jae
enter
push
sbb
dec
and
ja
int3
xchg
out
jg
and
lret
mov
adc
sbb
fbstp
sbb
jle
push
movsl
stos
lahf
adc
and
or
fwait
nop
lock
jge
outsl
cmpsl
je
xor
sbb
sub
jp
ret
sbb
jle
int3
inc
mov
stos
mov
jbe
pop
das
test
cmp
sarl
sbb
ror
push
jne
outsl
sub
js
mov
lock
into
not
inc
jmp
mov
push
scas
movsl
mov
addb
sub
je
fidivl
pop
test
fidivrs
sub
push
insb
and
xchg
adc
std
pop
and
out
xchg
test
push
insl
rep
rcl
scas
lahf
es
or
push
sub
stos
jmp
jno
mov
jnp
enter
push
xor
cmp
mov
mov
lods
pusha
fnsave
std
cmp
sti
aaa
rorb
push
inc
push
inc
lods
sbb
inc
push
lods
push
push
fstpl
sbb
adc
pop
aas
dec
in
outsb
fidivrs
mulb
or
add
xor
dec
lcall
imul
lods
jl
fidivrs
iret
jbe
les
adc
subb
popa
xor
or
sub
add
cmp
sbb
push
dec
loop
aaa
mov
ja
notl
sub
add
scas
xchg
xor
jbe
lret
sahf
fcmovne
popf
dec
sub
xor
aas
push
sub
loop
jb
lahf
loopne
inc
mov
cmpsb
mov
cmpsb
adc
jne
and
andb
nop
loop
nop
pop
stos
xlat
mov
xchg
repnz
sbb
cmp
sarl
fdivrs
mov
xchg
dec
aas
xchg
sbb
push
ljmp
call
or
es
mov
add
les
repnz
sub
aad
ret
cmp
pop
adc
in
out
bound
popa
xor
lock
cwtl
sbb
aas
lcall
data16
shr
jecxz
pop
mov
cld
dec
sub
push
mov
mov
xor
mov
xchg
data16
inc
fadds
or
adc
pop
mov
mov
insl
out
mov
cmc
mov
mov
rclb
add
inc
int3
sbb
mov
push
push
fstpt
mov
test
add
in
scas
aad
ss
divb
pusha
cmp
aas
scas
sub
faddl
push
lock
shrl
addr16
push
mov
test
mov
sub
inc
fcmovu
mov
lods
inc
aaa
out
push
fsubs
fidivrs
cmp
adc
sti
aas
fdivl
outsl
push
mov
xchg
mov
std
xchg
mov
xor
bound
and
enter
dec
jmp
shrb
ret
arpl
mov
mov
jp
adcl
out
jmp
popa
sub
push
popf
movsb
sbb
jae
xchg
sub
enter
sbbb
dec
je
add
scas
inc
lock
fsubs
nop
daa
add
xor
pusha
testl
nop
out
cmpsl
mov
test
cmc
sbb
mov
outsl
or
cmp
imul
push
test
mov
fnsave
pop
icebp
mov
fnstcw
or
add
outsl
sbb
jle
nop
mov
ret
pushf
pushf
jecxz
inc
adc
sbb
mov
outsb
inc
fcompl
lods
arpl
loopne
ss
add
jmp
pop
fsubrs
das
push
lods
pop
cltd
out
lret
jle
lret
scas
in
add
sbb
int3
arpl
sub
pop
sub
je
lods
jg
adc
fists
or
jo,pn
pusha
jge
test
fbstp
push
jns
jnp
das
mov
stc
xchg
cmp
jno
pop
call
in
cmpsl
pop
hlt
fcomps
xchg
sub
stos
mov
dec
lahf
stos
xor
fbstp
cmp
js
inc
stc
nop
js
call
lret
cli
push
gs
mov
adcb
test
fidivs
in
loope
and
call
or
or
imul
sarl
lock
push
call
dec
inc
outsl
push
jns
inc
fsubl
aad
incb
push
imul
sub
and
jb
mov
dec
les
cmc
imul
cmc
inc
mov
jl
sahf
cmovg
cmp
clc
in
pusha
pop
lock
adc
add
addr16
out
or
mov
and
pop
dec
fisttps
test
test
xchg
mov
imul
ljmp
mov
out
mov
dec
loope
mov
sahf
out
mov
jnp
mov
int
pusha
les
repnz
mov
mov
or
cmp
pop
inc
fimuls
lods
mov
mov
sub
xor
jg
xchg
sub
sarb
mov
outsb
sti
insl
add
mov
imul
lds
es
push
or
pop
jge,pt
xor
leave
pushf
xor
stos
out
test
sbb
pop
dec
or
lcall
lret
bound
lods
xor
ficoms
and
daa
addr16
add
xor
cwtl
das
mov
imul
test
mov
arpl
xchg
stc
pop
cmc
sub
ss
gs
fstl
nop
lret
mulb
es
sub
mov
mov
xor
in
cmp
pop
pop
loopne
mov
push
pop
in
xor
pop
pop
rclb
cmp
ss
data16
in
lret
bound
pop
out
sti
popa
clc
sub
cmpsl
sub
pop
xchg
hlt
dec
out
xchg
loopne
hlt
dec
loop
popa
loopne
xchg
hlt
daa
mov
hlt
pop
repnz
fists
mov
xchg
mov
fidivl
cli
sub
sub
popa
clc
and
cli
dec
loopne
cmpb
testl
movsb
cli
fnsave
mov
cli
sub
jl
lods
icebp
lahf
ss
jo
mov
sbbb
push
cmp
mov
xchg
mov
bound
xchg
add
pop
cmp
outsb
add
xchg
push
jae
aaa
pop
out
mov
gs
out
push
xchg
sub
mov
data16
cmp
xor
adc
or
and
push
jmp
or
imul
fimull
mov
lea
or
xlat
call
arpl
xchg
xor
xchg
sub
push
lock
xchg
test
aad
flds
push
aam
sbbl
dec
enter
std
pusha
hlt
mov
adcl
mov
pop
idiv
push
shrl
mov
lcall
jmp
pop
fwait
adc
leave
into
push
call
xchg
sub
pop
test
hlt
insl
cmp
lahf
sub
cmp
mov
or
jo
mov
ds
fisubrl
mov
movsl
and
sbb
mov
ja
lahf
movsl
sub
mov
mov
js
ja
sub
enter
iret
hlt
jae
xor
ret
xor
push
mov
push
jmp
fucomi
test
es
push
call
out
jne
rolb
icebp
cmp
adc
pop
mov
dec
bound
movsl
cmp
sti
push
sub
dec
ljmp
lcall
mov
fidivs
pop
jbe
or
cmp
and
mov
fucomip
orb
inc
ficompl
sub
jnp
xor
xlat
test
and
push
mov
movsl
mov
jae
iret
sbb
pop
and
popf
push
jg
dec
lods
ja
dec
test
int
stos
cli
sbb
dec
and
pop
popf
ja
outsb
movsl
mov
pop
sahf
test
ja
jb
mov
arpl
scas
adc
test
add
ss
sbb
and
int
inc
iret
inc
ficoml
jmp
adc
stc
cld
fcomps
leave
push
adc
jb
js
out
jo
loop
enter
rol
pop
add
shrl
sub
fs
jge
mov
ret
xlat
outsb
stc
into
add
inc
adc
pop
dec
jo
cltd
movsl
popa
test
xchg
int
sbb
mov
lods
inc
dec
add
lret
bound
enter
test
test
xor
xor
push
ret
fiaddl
je
rcrl
movsb
cmp
imul
push
cmpl
loop
inc
decl
and
sahf
push
and
jmp
cmp
or
push
sub
sbb
mov
pop
in
and
cmp
addr16
sbb
jo
cmp
sbb
shr
out
mov
mov
fldl
pop
jl
mov
shrl
lods
sbb
mov
fstps
mov
dec
push
jmp
push
xchg
dec
in
jns
cmpsb
scas
out
lds
jno
cmc
xor
mov
pop
lock
data16
mov
faddl
mov
imul
jbe
xlat
cmpsl
mov
js
ret
clc
add
dec
push
lret
imul
fnstsw
xor
sub
jb
cmp
push
mov
pop
jno
cltd
inc
push
sahf
mov
addl
xchg
push
fsts
pop
int3
pop
push
cmp
xor
mov
repnz
enter
call
pop
scas
cmpl
in
or
pop
les
fidivrl
cmpsl
out
mov
and
jl
inc
xorb
sbb
sbb
and
dec
jecxz
inc
add
push
jo
out
push
adc
mov
xchg
mov
dec
and
in
imul
push
aam
hlt
rclb
sub
sbb
aam
je
insl
mov
cmp
stos
orb
lds
ja
and
jg
mov
in
mov
mov
adc
mov
xor
repz
mov
xchg
cmp
lcall
lret
test
loope
or
repnz
lds
shlb
push
xchg
cmp
sbb
xor
pushf
cli
stos
in
inc
or
test
testb
test
fs
enter
mov
imull
add
fisttpl
out
mov
push
loop,pn
outsl
sarb
aas
cs
inc
push
lods
xchg
xchg
adc
jbe
cmpl
inc
aam
movsl
push
pop
mov
inc
cmpsl
push
cwtl
cli
inc
addr16
jne
and
mov
in
cmc
cmp
fadd
daa
faddp
daa
std
aad
fcoml
shlb
mov
ret
stos
pop
mov
push
test
mov
mov
lock
mov
ret
call
cmpsb
cmc
xor
fwait
mov
and
cmpsb
insb
sub
sbbb
pushf
aad
outsb
call
lret
fsubrs
xor
jne
dec
push
sub
pop
mov
stc
mov
and
mov
xchg
xor
pop
popa
mov
and
ds
jle
iret
pop
pop
xchg
jge
jle
cmp
jle
aad
push
cmpsb
cmp
aas
imulb
gs
dec
adc
inc
test
pop
mov
or
mov
loopne
dec
cmc
lcall
lret
cld
mov
push
push
inc
fcom
inc
push
stos
shll
xor
nop
cmpsb
or
and
xor
cwtl
insb
cli
xchg
insl
push
or
mov
xor
jecxz
jae
pop
xchg
imul
jne
dec
movsl
fs
lods
mov
das
popw
in
lahf
das
add
dec
sbb
and
inc
or
mov
scas
jb
cli
sbb
jle
test
jae
jae
push
faddl
cmp
and
dec
sahf
stc
xor
jo
lret
cmp
xchg
mov
das
or
jp
stc
xor
rcll
ss
lods
data16
mov
int3
adc
inc
lret
js
push
inc
leave
mov
fsts
pop
push
cli
loopne
mov
cmc
aam
iret
pop
mov
push
lret
adc
ffreep
inc
ljmp
mov
and
cmpsb
xchg
rcll
stos
pop
cwtl
sbb
push
or
xchg
jmp
mov
mov
mov
pusha
jg
inc
xchg
cmpb
cld
mov
hlt
xor
lret
pop
add
mov
jecxz
cmpsb
rorb
repnz
imul
movsb
jle
cmp
das
arpl
mov
and
iret
push
popa
push
inc
pop
daa
mov
lods
xchg
mov
fs
aam
jnp
lods
pop
sub
lods
jmp
xor
scas
pushfw
icebp
push
adc
test
dec
mov
and
push
leave
and
adc
outsb
xchg
jle
sub
js
popf
xchg
subb
cwtl
jne
imul
out
aaa
jmp
adc
push
add
or
cmp
or
insl
mov
outsb
mov
add
repnz
pop
iret
cmpsl
test
lock
jae
sbb
mov
sarb
fnstsw
ret
sahf
jle
xchg
aad
mov
add
daa
cmpsb
or
scas
out
mov
fld
popf
xor
into
mov
lahf
pop
jns
mov
push
pop
lock
cmp
loopne
shrl
mov
loope
sub
stc
fs
adc
js
aaa
jmp
daa
cltd
and
sub
push
cmp
mov
pop
mov
cltd
ja
and
dec
adcl
xchg
mov
cmc
xor
inc
xchg
leave
inc
insl
lahf
aaa
in
adc
movb
clc
aad
das
std
es
sbb
fildll
hlt
inc
fucomip
xchg
popa
jnp
inc
cmpsb
dec
ret
sub
cmp
pop
mov
cmp
jg
jp
repz
xchg
mov
inc
mov
jle
push
lods
mov
clc
dec
mov
push
clc
xchg
dec
out
cmp
int3
pop
subb
or
inc
insb
mov
push
lods
push
mov
inc
pushf
jnp
scas
dec
loope
push
add
push
mov
and
arpl
or
mov
xchg
jo
mov
je
pop
mov
sub
jle
dec
ret
sub
lock
and
xor
std
dec
aam
sbb
pop
flds
mov
mov
jl
sbb
dec
sub
bound
push
xlat
xor
jae
hlt
sub
lret
std
mov
into
xor
ljmp
dec
mov
adc
xorb
divl
rorb
movsl
push
lret
repnz
dec
jns
sub
dec
adc
pop
je
cmp
dec
and
outsl
outsb
loope
mov
lds
lods
stos
icebp
nop
xchg
jmp
mov
mov
sarl
fimull
in
xchg
cmpb
mov
dec
hlt
jbe
into
xor
mov
das
loope
int
in
mov
sti
pop
stc
in
cmp
or
jg
mov
in
sbb
std
dec
shl
fists
mov
fcoms
adc
add
mov
and
sbb
jns
xchg
clc
shlb
xchg
data16
sbb
pushf
xchg
out
xor
imulb
ret
jnp
jecxz
rol
mov
xchg
into
xor
lods
mov
cmp
jmp
iret
push
adc
cli
sub
sbb
iret
das
aad
mov
data16
mov
test
cmpsl
fwait
xchg
cmc
mov
mov
out
lea
aad
ja
pop
scas
rcl
mov
loopne
jecxz
add
sub
xchg
in
pop
pand
add
mov
dec
scas
push
jmp
ss
or
loope
iret
push
mov
mov
add
mov
mov
test
sbb
dec
lahf
stc
xchg
aad
inc
leave
inc
rorl
aaa
icebp
jbe
cmp
jmp
cmpsl
cmp
push
cmp
popl
movsl
out
jge
mov
fimull
out
or
dec
or
pop
sbb
in
sbbb
popa
adc
orl
pusha
dec
jl
inc
shrl
bound
aaa
rorl
adc
jle
stos
and
push
sbb
test
repz
dec
int3
and
inc
lds
xchg
add
aaa
fidivrl
leave
inc
hlt
sub
test
test
and
arpl
mov
xchg
xchg
dec
outsb
enter
js
mov
or
aas
jge
loop
cmp
in
dec
add
dec
mov
out
test
push
inc
add
jbe
add
gs
pop
mov
mov
xor
jnp
inc
stc
xchg
inc
mov
pusha
pushf
pop
cltd
inc
jle
ljmp
xor
xor
xchg
push
and
icebp
mov
inc
fldl
dec
mov
jo
pop
rorb
maskmovq
notl
aas
sub
mov
cmp
mov
out
out
jmp
cmp
cwtl
rcrl
out
or
lods
mov
or
int3
ss
test
push
adc
jnp
push
inc
ror
dec
mov
rolb
jno
jl
xchg
insb
stc
lods
pop
fildll
adcb
fstpt
sbbl
arpl
ds
insb
movsb
xor
shll
jns
in
inc
push
pop
lods
push
inc
xor
push
push
dec
ret
outsl
pop
sub
pop
nop
dec
adc
lcall
xchg
je
xor
stos
insl
mov
insl
mov
cli
lea
pop
mov
lods
adcl
repz
notl
out
mov
or
mov
mov
pop
lock
pop
jmp
xchg
pop
push
ss
and
jmp
mov
cltd
jnp
das
push
loop,pn
pop
mov
out
add
jae
xchg
sub
enter
inc
in
fldl
inc
imul
popa
mov
aad
test
aas
cmp
imul
in
mov
iret
mov
lea
incb
int3
rol
inc
mov
in
scas
pop
lret
xor
mov
push
mov
cmp
jg
pop
int3
imulb
adc
imulb
xlat
cmp
sbb
dec
and
jge
imul
cmp
push
mov
jle,pt
repz
cwtl
mov
in
cmp
jnp
jne
ret
add
push
xor
xchg
pop
sbb
out
orb
mov
push
jecxz
test
leave
cmp
inc
popa
stc
popl
add
mov
adc
mov
or
xchg
lcall
xchg
ja
adc
xchg
adc
jg
out
xchg
mov
dec
les
jb
fiaddl
ss
popa
arpl
dec
and
sub
pop
adc
loopne
push
sub
lods
xlat
adc
add
jecxz
ss
sbb
inc
mov
loop
jae
nop
aam
ret
xchg
shl
push
ret
iret
jns
fcmovnu
mov
int3
cli
fstps
jns
cmpb
fadds
mov
cmc
daa
call
lret
mov
ljmp
jmp
add
lret
xor
icebp
sbb
mov
call
cmpsl
dec
iret
add
xorl
push
xchg
or
pop
pop
cmpsl
inc
xchg
cli
and
dec
sbb
dec
xor
jnp
cli
and
jl
stc
push
mov
jg
stos
mov
xor
insl
inc
je
aaa
pop
popa
pop
inc
pop
imull
jo
lds
mov
into
xchg
lret
sbb
fmul
enter
iret
and
fldenv
movsl
ljmp
test
test
popa
imull
aaa
fldl2e
es
test
inc
ret
push
out
mov
in
popa
ja
pushw
cmp
lds
mov
mov
add
xchg
lea
imul
sub
inc
cmp
cmp
or
and
enter
outsb
cmpsb
jmp
lods
pop
sar
mov
fnstcw
add
jg
mov
xor
sbb
push
stc
inc
xchg
test
scas
inc
ss
pop
and
jle
lcall
pop
insl
add
mov
call
repz
pop
cmc
daa
fisubs
negl
mov
and
cmp
sbb
ja
repz
push
mov
push
lods
jle
lods
xchg
sub
push
mov
movsl
xor
jecxz
xor
sub
and
cmpsl
jnp
cmp
add
repz
inc
iret
bound
inc
fld
add
sbb
pop
adc
fdiv
fsubrl
leave
aaa
out
js
cmp
pop
sub
pop
or
push
dec
decl
imul
jle
cmp
aaa
out
adc
aas
pop
in
lcall
test
dec
adc
stos
pop
mov
pop
out
iret
mov
lahf
cmpb
leave
mov
orb
daa
test
loop
outsb
enter
jge
xchg
insl
out
aad
jnp
ja
sub
push
jg
mov
push
pop
std
es
xchg
xor
cmp
sub
inc
dec
fsts
xor
les
or
add
bnd
xlat
jae
and
lret
xor
inc
lods
iret
pop
repz
shll
lcall
inc
ja
insl
xor
jno
imul
sbb
jo
in
inc
int3
and
push
out
inc
lret
xor
outsl
xor
sarb
adc
dec
cmp
push
sti
adc
cmp
dec
add
mov
xchg
adc
mov
mov
call
mov
loop
rorl
lods
insb
fwait
daa
jmp
rorl
mov
lds
imul
xchg
fldenv
dec
mov
frstor
mov
adc
test
std
sbb
fadds
fnstenv
shrl
xchg
adc
jmp
loopne
mov
sbb
cmp
pop
fdivl
ds
ret
popf
mov
sub
call
or
sahf
test
xor
or
fnsave
lcall
aaa
jnp
std
dec
arpl
mov
notl
add
sbb
xchg
ss
adc
xor
testb
pop
mov
stc
or
push
int3
popa
sbbb
sub
push
mov
inc
lea
or
icebp
imul
mov
into
cmp
cmpsl
cmc
jg
test
pop
das
ficoms
adc
mov
into
inc
or
lds
jne
cmovge
rorb
dec
out
jle
popa
cmp
cmp
push
pop
es
cmp
jg
adc
xchg
jo
inc
lret
enter
aas
popf
fs
dec
imul
jb
push
mov
jbe
dec
sbb
jnp
or
ja
pop
fdivrs
repz
dec
clc
and
xchg
sub
pop
ret
and
jb
int
cmp
inc
jnp
es
sub
dec
fdivs
mov
sub
aam
aas
popf
jae
inc
pusha
mov
pop
popa
inc
mov
or
mov
dec
xor
jle
insb
add
dec
sbb
aas
pop
jmp
clc
dec
in
out
jbe
push
mov
jle
pusha
pop
les
movsb
cmp
cmp
hlt
sub
fcoms
push
jno
cmp
iret
es
mov
xlat
lock
mov
in
int3
or
push
mov
pushf
xchg
xchg
daa
sub
scas
bound
inc
iret
and
lock
arpl
je
mov
jb
jns
inc
inc
dec
mov
inc
push
ljmp
inc
mov
inc
pop
addb
pop
outsl
movsl
inc
cmpsl
stos
bound
pop
mov
cmc
push
pop
lock
push
jmp
or
or
jo
pop
enter
mov
pop
sub
cmp
scas
popa
insb
sbb
test
mov
loopne
jle
add
icebp
mov
sbb
fwait
sub
lods
mov
xchg
aam
cmp
or
arpl
jmp
das
sbb
ds
xchg
repnz
jo
mov
mov
sub
stc
sub
cmp
mov
cmp
pop
push
push
adc
mov
sub
inc
adc
ret
cmp
xchg
cltd
mov
lock
clc
mov
mov
loopne
push
dec
pop
aam
mov
pop
ror
sub
rcr
inc
mov
hlt
loopne
stos
mov
insb
fnstenv
incb
push
ja
movsb
mov
pusha
movsl
mov
adc
mov
fisubrs
in
rorb
insl
lcall
jp
jnp
cmp
in
aas
insb
lods
jl
sbb
hlt
or
and
adc
mov
dec
or
out
sarb
pop
lret
adc
or
sbb
sbb
dec
mov
mov
in
lahf
arpl
lock
ss
insb
pushf
fwait
and
xor
mov
loop
pop
lock
sti
in
push
xlat
add
mov
or
cs
sbb
and
test
mov
sub
inc
loopne
push
push
pusha
pushf
imul
loope
add
enter
cmp
dec
mov
aaa
add
xchg
pop
shl
adc
inc
xlat
fmulp
or
and
shr
and
stos
popa
xchg
ja
fwait
fs
popf
xor
xchg
and
das
ss
mov
imul
mov
inc
fstpl
adc
mov
mov
addb
lahf
jbe
sbb
pop
in
lcall
dec
inc
test
pop
push
mov
imul
in
inc
std
cmp
out
test
stos
popa
clc
sti
adc
test
in
or
mov
mov
mov
outsl
push
mov
les
or
rorb
fdivr
xchg
adc
arpl
push
mov
jg
jl
jmp
lret
cmp
xorb
popf
outsl
push
cld
popf
hlt
ds
sbb
push
or
out
test
icebp
test
adc
push
int3
dec
mov
add
mov
and
lds
push
sarl
xchg
pop
sbb
mov
jecxz
add
sub
sti
pop
dec
sbbl
pop
sbb
dec
fwait
pop
mov
inc
lods
push
mov
ja
push
cmc
sub
cli
and
dec
test
rcll
or
jl
in
cmpsl
ds
mov
sub
and
into
pop
enter
inc
mov
gs
fwait
enter
inc
xlat
mov
lret
push
xor
adc
ja
call
mov
xlat
rcll
push
pop
int3
push
movsl
lds
inc
mov
clc
lea
test
lods
insb
inc
lret
xor
xchg
clc
xchg
xchg
out
lods
sbb
stc
mov
sbb
add
scas
in
in
das
mov
je
stc
clc
int
iret
scas
push
mov
fdivrs
iret
outsl
stc
cmpsb
push
cmp
mov
repz
cwtl
mov
dec
mov
add
pop
repz
sub
and
xchg
ja
andl
sub
mov
mov
ljmp
scas
sti
pop
lock
in
test
mov
adc
dec
neg
push
lret
bound
sbb
push
fdivrp
xor
mov
and
xchg
and
stos
jb
js
cs
fldt
jne
xchg
xchg
sarb
cmp
addr16
mov
dec
cmp
js
sub
pop
or
and
icebp
es
cmp
adc
scas
inc
repz
in
test
dec
lods
mov
and
jmp
jp
stos
fsubrs
mov
scas
out
push
out
cmp
cli
ss
jbe
icebp
inc
fxch
push
loop
sub
push
jmp
mov
or
xor
mov
add
push
dec
mov
push
enter
pop
icebp
stos
inc
mov
fnstsw
or
stos
jg
mov
lock
mov
pop
hlt
adc
push
das
fistps
jmp
montmul
cmpsb
inc
or
or
pop
in
or
pop
popa
cmpsb
push
icebp
mov
ret
rclb
sbb
jnp
mov
movsb
je
adcb
push
push
scas
dec
mov
adcb
push
rorl
aaa
pushf
addl
shrl
imul
pop
lahf
pop
and
mov
ret
stos
imul
or
mov
fprem1
sub
mov
xor
loopne
push
lods
rolb
cmp
mov
sarb
xchg
mov
pop
imul
or
test
sti
xor
mov
fsubl
insb
imul
mov
cmp
add
jmp
mov
loope
xchg
loopne
shl
imul
mov
lret
in
pop
mov
mov
popa
lahf
fldt
ja
mov
sub
cli
icebp
push
pushf
aam
push
fistpll
out
and
sub
mov
mov
stc
cmpsb
movsl
jo
stc
ret
xchg
jle
mov
push
or
out
mov
lcall
mov
cmp
inc
fdivs
loope
and
or
clc
in
xor
dec
popa
xchg
sarl
pop
cmp
sbb
pop
cltd
or
sub
nop
rorb
xor
push
iret
fistpll
pop
insb
fiaddl
fimull
inc
int3
out
cmp
jl,pt
inc
repz
mov
jle
sub
mull
imul
push
arpl
adc
pop
int3
dec
bound
fwait
mov
enter
loope
pop
mov
inc
int
or
sbb
ret
mov
add
scas
xchg
nop
jae
jp
dec
inc
mov
inc
pop
pop
mov
push
addl
dec
cmpsl
bound
out
and
xor
cmp
mulb
jp
jp
pop
aad
pusha
pushf
push
cmc
lea
mov
push
in
pop
push
jb
cmpl
scas
movsb
nop
daa
rclb
inc
sub
inc
push
dec
int3
arpl
into
gs
lret
cld
icebp
or
dec
inc
es
mov
ret
repz
stc
sbb
adcb
test
cltd
mov
cmp
fistpll
inc
xor
jno
popa
fbstp
test
mov
std
xchg
out
push
lods
or
sbb
cmp
xor
pop
pop
cmp
mov
lods
lods
pop
out
jo
add
jbe
xor
mov
test
inc
cmpsl
movsl
mov
xlat
enter
clc
shlb
sbb
orb
test
pop
sahf
mov
shll
and
fildl
dec
fbstp
stc
xchg
xchg
data16
lds
test
sbb
ss
push
xchg
mov
push
mov
jne
push
cli
xchg
cmp
cld
xchg
fs
sbb
mov
ss
xlat
cmp
or
push
jmp
sub
pop
push
jb
cmpb
mov
xchg
sub
imull
inc
push
dec
int3
arpl
gs
ljmp
lock
dec
inc
es
mov
roll
out
stc
pop
adc
std
inc
cmp
sbb
mov
mov
pop
aas
xor
jno
pusha
fbstp
test
mov
std
xchg
in
push
lods
or
sbb
cmp
xor
pop
pop
cmp
mov
jmp
fmul
jo
std
jbe
das
and
sub
mov
lret
stc
not
sub
ljmp
outsb
or
int
es
pop
adc
inc
inc
dec
fbstp
arpl
push
push
data16
inc
cmp
push
cwtl
mov
xchg
mov
sbb
mov
fnstsw
jge
xor
jae
xchg
push
jmp
ret
cli
xchg
cmc
jmp
push
mov
cmp
xor
imul
faddl
sub
adc
dec
cwtl
das
addb
and
mov
test
rcll
push
hlt
stc
and
inc
inc
xlat
ja
pop
sahf
daa
cltd
fidivrs
sub
mov
mov
rcrl
fisttpl
push
stc
addl
push
int
adc
fidivs
xor
inc
insb
clc
cld
xchg
sub
sbb
js
cmpsl
ds
cltd
js
lret
rol
sbb
sub
jge
xor
shll
add
sbb
or
xchg
fists
jnp
repz
mov
push
xchg
icebp
dec
add
hlt
jmp
sub
xor
mov
xor
call
sbb
in
jg
jbe
cmp
mov
dec
pop
push
push
fs
movsl
dec
mov
xor
out
fsts
fucomi
and
xlat
mov
dec
hlt
cmp
popa
sub
and
dec
cmp
enter
mov
xchg
insb
dec
pop
and
jnp
lret
mov
cmp
mov
add
fldt
sub
xor
jnp
push
sahf
jg
int
inc
lods
ja
add
jnp
fwait
mov
rorb
rolb
and
jle
test
int3
push
data16
xlat
xchg
hlt
sub
jl
push
sub
jo
adc
or
sub
add
push
les
push
aam
divb
pop
in
pop
sub
mov
pop
notl
dec
cmpsl
das
jmp
scas
cld
sub
lret
or
cmp
jge
stos
sub
jp
jne
lds
les
test
jnp
dec
jo
sarl
shrl
mov
pop
pusha
or
jge
std
data16
xor
enter
jno
icebp
mov
fmull
or
cmp
andl
cltd
and
enter
mov
pop
fninit
sahf
cld
pop
cmp
icebp
stos
mov
daa
popf
cmp
sti
fistpll
ficoml
adcl
mov
and
inc
adc
iret
mov
call
cmpsb
js
xchg
or
fadds
jge
fisubrl
adcl
pop
dec
mov
pop
daa
mov
loope
lret
xchg
dec
ficoms
dec
dec
push
jl
cwtl
jno
sbb
mov
std
pop
sbb
hlt
mov
test
pop
adc
xchg
xchg
add
imul
cmp
mov
push
push
repz
xchg
clc
fstpt
movsl
mov
mov
pop
lss
mov
and
loop
popf
mov
call
les
popa
lds
daa
dec
or
or
cltd
push
jbe
fwait
cmpsl
jbe
mov
enter
cmp
xchg
dec
in
adc
push
pop
sub
xor
xor
aam
pop
scas
add
bound
mov
loopne
into
sbbl
push
outsb
pop
outsb
sub
pop
repnz
sub
fwait
xor
mov
sti
lods
popa
clc
push
cwtl
lahf
or
lds
mov
pop
sub
xchg
inc
enter
ljmp
inc
insb
aaa
into
pop
imul
test
out
shrl
lcall
add
inc
fsubrs
mov
mov
loope
pop
rcr
scas
inc
lret
sbb
jnp
add
cmp
sbb
pop
lock
movsl
cmp
mov
inc
cmp
roll
jns
fistpll
bound
mov
inc
add
aas
insl
pop
rcll
sbb
in
push
movsb
or
xor
sub
imul
adc
clc
xor
mov
out
es
push
in
imul
mov
int3
mov
mov
ss
dec
push
in
imul
pop
insb
jmp
ret
xor
mov
pop
jae
cld
aaa
int3
mov
pop
in
push
popf
imul
in
imul
int3
mov
mov
or
cmp
push
xchg
insb
ljmp
std
pop
mov
int3
mov
stos
insb
ljmp
mov
orl
or
out
sub
jmp
adcl
in
inc
incl
pop
xor
mov
lods
and
popa
loopne
lods
push
icebp
jl
mov
test
jp
fcoms
lea
adc
pop
repz
push
aas
divb
divl
lret
mov
mov
jle
dec
int
sbb
scas
ss
stos
xor
cmpsl
imul
and
daa
xchg
xor
pop
push
std
in
mov
cmp
test
js
fiadds
sbb
pop
call
lea
bound
mov
test
pop
add
data16
pushf
cmp
sub
aas
jp
movsb
lcall
lahf
add
push
jb
or
movsb
pop
pusha
shll
nop
xchg
out
dec
adc
mov
xchg
rcr
sbbl
dec
cld
mov
rol
jmp
jge
pop
in
imul
pextrw
mov
ret
sbbb
in
stos
cmpsl
popa
dec
mov
sub
ja
fldl
lret
gs
and
lret
insl
out
clc
fs
jns
fidivl
xlat
jns
fs
pop
cltd
jge
push
xor
ljmp
addr16
jo
into
jo
sub
lds
pop
xor
in
jb
daa
in
inc
mov
imul
push
lods
xor
xor
push
push
repnz
movsl
icebp
pop
inc
sbb
push
jae
sub
ret
std
out
sub
imul
inc
sub
fimull
push
setae
clc
pop
sub
insl
loope
cmpsb
jbe
or
in
or
lret
arpl
bound
data16
jecxz
xor
pop
cmp
rolb
push
jb
je
or
out
push
push
das
lods
popa
lea
xchg
sub
or
xor
or
mov
cmpsl
in
insb
xchg
icebp
icebp
pop
push
int
mov
test
jno
mov
push
aam
add
mov
movsl
adcb
add
pop
dec
movsb
xor
and
sub
push
fbstp
test
push
jmp
in
adcl
pop
and
sub
clc
loope
cs
pop
std
cmp
add
inc
and
inc
cltd
adcl
push
movsb
ss
sub
das
sbb
mov
cmpsl
out
inc
sbb
add
push
and
jnp
lret
bound
lret
cmp
outsb
jmp
push
lret
fisttps
repz
push
push
mov
push
shrl
adc
inc
aaa
in
mov
out
push
stos
pop
std
scas
int
test
mov
sub
lret
lea
test
insl
out
movsb
addr16
adc
adc
mov
aaa
jo
repnz
dec
cmc
pop
das
test
push
sbb
mov
sbb
jnp
mov
movsb
push
add
lods
mov
sbb
out
push
mov
jp
pop
and
inc
adc
inc
fcmovu
mov
popa
clc
push
divl
push
adc
mov
in
fwait
aas
popf
pop
ljmp
nop
sbb
mov
mov
inc
adc
add
mov
add
in
dec
xchg
fstpt
xchg
cwtl
cmp
xor
adc
js
cmp
loope
in
push
cld
fstpt
mov
mov
mov
xor
addr16
mov
push
jle
xlat
inc
mov
test
cmp
ret
arpl
cmp
out
jecxz
push
std
lret
xchg
adc
popf
cltd
cli
pop
mov
roll
xorb
std
shl
into
loop
fdivrs
movsb
xor
push
xchg
movsl
subw
jnp
imul
add
ret
lods
sub
pop
pop
lcall
out
imulb
lods
jmp
icebp
arpl
idivl
int3
std
mov
adc
jmp
inc
icebp
jp
jbe
in
js
push
out
fwait
imul
sarb
pop
cli
lock
mov
lock
push
add
dec
in
lcall
test
ss
adc
stos
pop
cli
addr16
nop
jp
jb
iret
add
xor
cmp
dec
stc
jae
rol
call
pop
clc
outsb
dec
lea
jb
repz
add
mov
ds
outsb
stos
or
push
inc
call
pop
clc
insl
lret
xchg
jae
jae
lret
aaa
pop
ds
mov
lea
lods
add
sub
pop
repnz
cmp
in
jp
cmp
rorl
push
push
add
std
test
insb
repz
enter
jge
dec
lret
sub
scas
or
add
xchg
dec
mov
in
std
std
lret
push
pushf
sbb
stos
xor
into
movb
imul
arpl
ss
mov
lods
mov
jmp
int3
xchg
iret
mov
or
fucom
push
xor
mov
scas
xchg
jmp
repnz
and
mov
add
pop
xor
lods
xlat
sub
loopne
inc
adc
cli
mov
sub
and
dec
fisubrs
xchg
out
outsb
mov
dec
popf
test
inc
adc
fadd
pop
push
out
pushf
xor
mov
ja
inc
out
xchg
stc
add
dec
dec
pop
and
jle
sarl
into
mov
shlb
push
add
sbb
mov
loop
xchg
scas
mov
mov
or
mov
cwtl
rclb
sub
aaa
pop
roll
fdivrl
pusha
ret
jp
jmp
sbb
mov
lods
jb
sub
push
mov
inc
je
fldenv
mov
jl
sub
cmp
lret
adc
push
rcrl
pop
mov
mov
test
lret
lea
sub
pop
jbe
movsb
ja
or
out
imul
pop
hlt
js
in
orb
repnz
rcr
and
mov
mov
iret
mov
add
rcll
popw
cmp
inc
mov
mov
shr
jmp
and
xchg
inc
push
cld
dec
mov
scas
and
ss
adc
loope
or
fidivrl
mov
sub
cmp
sub
aad
inc
dec
adc
ret
adc
sbb
sbb
fcmovnb
inc
mov
add
push
outsb
addr16
nop
mov
dec
mov
mov
mov
dec
inc
or
out
jb
mov
jae
sub
das
scas
sub
cli
pop
mov
pop
std
lods
adc
push
out
out
pop
xchg
mov
xchg
aas
mov
push
lret
das
lret
mov
adcl
sub
jbe
stos
je
jno
aas
cwtl
pop
jno
cli
stc
dec
adcb
movsb
xor
mov
xlat
outsb
inc
adc
lea
orl
adc
pop
aam
pop
add
push
clc
dec
insb
jp
pop
lahf
pop
mov
mov
scas
xor
mov
gs
and
or
and
pop
add
push
mov
dec
add
sbb
pop
in
xchg
dec
outsl
in
jne
mull
adcl
add
pop
out
push
mov
inc
mul
jb
mov
sbb
in
pop
sti
ret
cli
jne
gs
add
lods
mov
mov
lret
repz
xchg
sbb
ret
mov
sub
repnz
xlat
jge
and
rcl
mov
pop
add
bound
sbb
sbb
adc
jp
jae
arpl
bound
adc
repnz
xchg
xchg
pushf
rorl
leave
mov
xor
pop
out
icebp
inc
jle
sbb
ja
test
fs
ffree
xchg
notb
and
pop
in
inc
adc
test
arpl
sarl
or
cmp
repnz
jmp
sbb
xchg
inc
addb
mov
rolb
repz
cmp
in
push
and
cmpsl
das
sti
rcl
push
out
ljmp
jns
add
adc
sbb
dec
mov
jle
aam
mov
stos
push
xchg
js
stos
mov
jo
out
push
add
ror
inc
inc
xor
jae
jns
pop
bound
cmpsl
scas
mov
out
imul
pop
inc
pop
scas
daa
mov
shrb
repz
and
faddl
cwtl
adc
xchg
lret
push
xor
jo
test
scas
out
rcrl
sarl
dec
pop
add
in
jae
and
ss
adc
and
and
add
push
hlt
pop
aaa
stc
jmp
shll
push
jns
mov
popf
imul
orl
mov
xor
sarl
adc
xchg
rcrl
dec
adc
xor
inc
jns
mov
lods
lcall
mov
stos
nop
sbb
xchg
insl
dec
cmp
das
jbe
out
das
aas
gs
loopne
ljmp
or
aam
cmc
pop
cltd
pop
aam
icebp
int3
jno
cmp
xor
in
xchg
dec
rcl
mov
fwait
and
int
negb
mov
js
sbbl
push
les
sbb
pusha
arpl
jmp
jno
ja
mov
jb
aad
hlt
pop
xchg
rolb
sub
xchg
test
test
loop
mov
adc
mov
xchg
inc
push
lods
dec
or
cmpsl
les
scas
xor
mov
or
xchg
stos
test
inc
std
in
pop
pop
pop
cmp
mov
fs
lahf
cmpsb
pop
add
int
mov
es
mov
call
icebp
pop
pop
xor
jbe
iret
nop
dec
mov
fldl
push
sbb
in
inc
gs
push
test
in
pop
mov
sub
adcl
dec
fidivrl
sbb
aad
sahf
lds
pop
inc
insb
in
adc
sub
dec
in
push
addr16
dec
and
ret
xor
fwait
test
outsl
int3
out
aaa
mov
les
adc
push
lea
mov
cmpsl
adc
inc
push
cmpsl
testb
shll
pop
std
addr16
dec
or
out
in
push
stc
jno
adc
mov
push
pop
clc
xor
push
daa
scas
jbe
sub
cmc
inc
mov
jmp
mov
or
mov
mov
mov
iret
sbb
rcr
pop
push
movl
std
bound
pop
add
shrb
stos
imul
sbb
addr16
pop
jecxz
and
and
cmp
mov
fnstcw
lods
lret
nop
dec
adc
lea
xlat
iret
xchg
je
sbb
jns
shlb
xchg
ror
xchg
icebp
adc
mov
lods
inc
adc
into
adc
pop
in
mov
push
mov
mov
xchg
lahf
mov
mov
int
sub
nop
pop
add
mov
sbb
or
ds
jbe
dec
cs
into
fwait
aam
je
mov
popa
fadds
subb
fwait
loop
mov
stos
iret
gs
cmp
mov
push
int
sarl
sahf
sub
popa
repnz
pop
pop
stc
pop
xchg
xchg
inc
addl
stos
lcall
sbb
push
mov
and
mov
mov
jle
outsl
or
mov
sub
cmpsb
popf
sbb
sub
orl
inc
or
sub
lds
js
xor
rcl
mov
add
mov
rcl
data16
xchg
or
mov
int
jg
out
out
insl
sub
xor
cmp
imul
lods
sub
out
ret
lcall
xor
call
mov
loop
repz
or
xchg
cmp
movsb
and
or
enter
enter
mov
gs
ret
jp
sub
push
rolb
inc
lock
and
out
jp
mov
out
jo
mov
mov
or
out
iret
mov
pop
sbb
popf
or
test
xchg
outsl
and
out
test
std
xchg
inc
shrb
orl
sub
mov
mov
pop
popf
dec
lcall
ja
lea
addr16
pop
aad
mov
mov
pop
lods
fdivrs
andb
roll
push
or
cltd
mov
pop
lret
testb
in
xchg
add
addr16
pop
dec
adc
fidivs
sbb
lods
cmp
mov
mov
js
sub
push
testl
loopne
and
lds
fisubrl
roll
jns
in
pop
and
pop
mov
ret
push
add
in
push
hlt
data16
es
mov
cs
mov
sub
xchg
cmp
cmp
das
das
add
add
lock
pop
jmp
mov
add
fistps
ret
sbb
mov
jl
and
dec
gs
adc
push
rcr
cmp
movb
scas
dec
insl
and
inc
scas
iret
xchg
popf
xchg
and
fcmovb
xchg
and
cmp
icebp
bound
mov
inc
setg
and
xchg
clc
pop
xor
ret
sub
xor
sbb
dec
andb
mov
stos
xor
shrb
into
xchg
xchg
adc
or
mov
pop
nop
cmp
dec
mov
and
push
stc
xchg
adc
je
push
clc
xor
cld
shll
sbb
xchg
mov
jge
enter
test
sub
ss
orl
repnz
inc
insl
sarb
xchg
in
jb
popf
rorl
mov
call
jno
mov
stos
sub
scas
rolb
lock
adc
mov
cmp
cmp
mov
gs
clc
fdivrl
push
mov
mov
lcall
orl
fldl
lock
xor
push
jp
push
cli
mov
pop
adc
inc
push
stc
rolb
pop
xor
push
in
dec
sbb
pop
cli
cmp
aad
aam
fcmovbe
orb
xchg
inc
scas
fsts
mov
xchg
jmp
jne
lock
pop
jo
xchg
xor
push
sti
rolb
add
rorb
out
insb
add
in
pusha
icebp
repz
xchg
and
sub
stos
mov
gs
lea
int3
mov
jp
sub
aaa
mov
mov
out
xchg
push
lock
push
leave
jle
mov
xchg
stc
xchg
xor
push
out
xchg
pop
mov
jge
imul
cltd
jecxz
fdivrl
jmp
gs
mov
xchg
js
or
xor
cmc
and
cmp
arpl
stc
or
jnp
push
add
addr16
aad
inc
adc
or
out
addr16
jno
jmp
cmc
cltd
ds
mov
sbb
inc
mov
int
inc
adc
lret
inc
aad
scas
sub
or
mov
popl
lea
notl
je
out
nop
inc
into
and
push
inc
rolb
outsb
fsubs
mov
or
jb
pmullw
repz
push
jl
dec
and
scas
xor
aaa
adc
ficoms
addr16
xor
addl
add
negl
cmp
cmp
lret
test
shrb
inc
mov
pushf
popf
cmp
or
imul
aam
aas
dec
mov
je
xchg
pop
sti
cmp
out
and
cs
push
fs
ss
cmp
mov
lahf
jg
mov
cli
inc
push
mull
cltd
add
fs
in
push
andl
mov
mov
pop
sub
push
loopne
push
sbb
cltd
inc
cmp
roll
hlt
test
xlat
push
and
lds
cmpsl
pop
or
loope
mov
jae
pop
add
mov
dec
pop
psrld
pop
mov
mov
and
jmp
push
loop
inc
adc
cld
fistpll
dec
pop
stc
insl
lahf
mov
pop
adc
dec
pop
pop
jp
push
repz
cmp
dec
sti
add
das
xchg
adcl
test
daa
mov
adcb
cmp
loopne
add
push
stos
stos
xor
jg
rolb
sbb
fiaddl
inc
fdivrl
pop
lea
hlt
jnp
es
sbb
sbb
call
sbb
dec
dec
adc
sarb
js
dec
enter
jno
icebp
pop
cltd
arpl
mov
xchg
push
push
std
gs
inc
cmp
aad
outsb
icebp
pusha
add
test
or
les
adc
pop
dec
aas
ret
lcall
dec
pop
push
std
mov
mov
inc
icebp
mov
cwtl
mov
icebp
pusha
mov
push
add
lahf
ds
es
add
iret
repz
mov
mov
pop
in
adc
call
repz
adc
iret
adc
dec
sbb
sub
ret
adc
jge
mov
in
insl
pop
scas
or
push
andl
jo
sbb
push
adcb
sahf
cmp
ds
add
xchg
inc
dec
jae
xchg
inc
xchg
cmpsl
xor
mov
push
test
mov
addb
or
mov
cmpsl
cmc
mov
push
daa
mov
pop
xlat
cmp
push
cmp
xchg
mov
dec
pandn
aad
fdivrl
roll
dec
icebp
pop
gs
mov
cmp
iret
mov
mov
loopne
xor
pop
repz
mov
mov
in
xchg
lods
enter
arpl
cmc
mov
push
pushl
mov
mov
insl
or
inc
adc
inc
gs
call
pop
lds
cmp
ret
add
iret
jp
jg
jo
xchg
sub
call
iret
push
cmc
xor
scas
outsl
adc
shll
mov
sahf
inc
negb
loopne
aad
testl
pusha
out
and
mov
stos
roll
sahf
in
jbe
xor
rolb
shll
stos
dec
es
pushf
cltd
aaa
cltd
push
lret
enter
lret
pop
cmp
into
enter
pop
inc
adc
xlat
push
aad
repnz
popa
jne
xchg
mov
cmpsl
sbb
rorb
xchg
or
mov
jle
mov
rcl
cs
lods
or
cmpb
or
stos
data16
cmp
mov
xor
mov
fsubs
int
pop
rolb
scas
cli
lcall
adc
fiaddl
bound
mov
popa
or
mov
pop
flds
xor
stos
das
pop
and
std
lea
out
gs
movsl
testb
or
test
xchg
add
mov
mov
xchg
insb
mov
push
dec
jg
sbb
or
les
pop
push
sti
lods
aas
pop
add
mov
inc
adc
mov
mov
sti
sahf
add
and
repnz
les
pop
sub
dec
or
xor
pop
mul
pop
xchg
inc
mov
mov
test
adc
addb
xchg
cmp
pop
orl
ret
mov
out
xchg
lea
jmp
mov
adc
les
mov
out
mov
dec
stc
sbb
pusha
dec
dec
adc
jno
and
jmp
xchg
inc
push
cmpl
and
clc
bound
dec
push
jg
ss
lods
insb
mov
mov
jge
imul
xor
inc
dec
xchg
rcrl
xchg
fnstsw
jns
aas
xchg
lcall
leave
movsl
xor
lcall
and
add
fnstcw
cs
cli
sbb
push
std
xchg
mov
cmc
add
push
out
add
xor
push
in
push
cmc
std
gs
mov
push
scas
inc
flds
pushf
xchg
cmpl
mulb
mov
ja,pt
xor
in
lcall
jne
or
jns
mov
xor
cmp
stos
lea
jb
xchg
mov
mov
mov
ja
mov
xchg
inc
ret
fildl
rcrl
inc
call
cmc
fnstcw
lds
ficoml
mov
pop
pop
cmp
loop
sbb
xchg
pop
inc
mov
xchg
pop
mov
aad
cmc
fsubs
lret
out
xchg
popf
sbb
or
inc
leave
xchg
imul
ja
enter
jae
dec
imul
test
movsb
and
inc
jg
or
scas
xor
pop
push
lret
mov
in
mov
push
test
nop
fs
dec
je
rorb
sti
push
cld
and
xor
jmp
enter
data16
imul
rcrb
mov
jg
pop
adc
sbb
test
inc
push
sbb
pushf
inc
cmp
mov
fiaddl
dec
outsb
out
cmpl
mov
xlat
xchg
rcrl
dec
jbe
sub
mov
jg
adc
dec
cmc
bound
ret
test
xchg
inc
inc
adc
xor
jl
ret
hlt
adcl
out
pop
jp
or
and
out
pushf
inc
add
rorb
inc
cmp
sub
inc
jnp
xchg
movsb
pop
ret
cmpsb
sub
mov
into
arpl
xchg
cmp
test
xchg
cs
bound
mov
xor
mov
and
jge
movsl
xor
xchg
rcll
test
mov
inc
popa
push
mov
jg
or
cmp
mov
cs
dec
pop
pop
in
scas
sub
jnp
push
es
cmp
pop
stc
mov
ret
scas
movsl
cmp
mov
mov
add
pop
mov
or
mov
mov
mov
pop
and
add
lods
call
and
push
ljmpw
leave
iret
adc
xchg
int
imul
jo
loopne
mov
cwtl
cmpsb
mov
push
cmp
push
stc
je
push
int
fs
movsb
jns
or
push
or
push
stc
pop
push
sub
fcoml
inc
push
pop
mov
xchg
addl
cmpsl
iret
mov
mov
pop
ret
ret
push
jnp
sbb
jmp
repz
rcrl
jnp
xchg
andb
push
in
icebp
mov
jae
movsb
pmullw
fiaddl
mov
stos
pop
push
or
pop
add
int
aas
movsb
cld
sbb
jbe
test
mov
je
pop
add
cmc
jp
mov
sti
pop
and
jnp
mov
mov
ret
in
xchg
adc
dec
popa
clc
jp
push
movsl
sbb
inc
or
dec
cmpsb
sub
push
push
adc
aam
pusha
dec
popa
jmp
push
push
cld
cs
add
sbb
push
cld
mov
cmpsb
push
ljmp
jno
push
jmp
jnp
jecxz,pt
jle
hlt
inc
or
pop
push
mov
or
pop
popf
inc
repnz
aas
mov
jp
push
ret
insl
int
add
jo
add
flds
mov
mov
lods
test
cmpsl
cmp
int3
xchg
push
sub
lock
mov
push
enter
and
mulb
scas
add
callw
or
incl
jo
mov
inc
or
shll
fistpll
aaa
and
mov
lods
fistpll
pop
icebp
pop
mov
xchg
movsb
pop
add
pop
test
mov
jmp
push
inc
adc
enter
cmc
movsl
xor
jns
mov
mov
loop
lahf
cmp
std
fidivrs
adc
xchg
sub
into
cmpsb
cmp
inc
pop
in
cmp
xchg
cmp
js
xor
or
mov
lods
filds
insb
daa
mov
enter
sub
jp
cwtl
test
mov
test
enter
call
cmp
mov
cld
aam
xor
sub
in
jge
and
lea
mov
add
mov
pop
mov
scas
push
clc
testl
shl
aad
inc
jecxz
in
xchg
mov
inc
xor
pop
jne
cmp
mov
arpl
pop
stos
sub
ja
popl
xchg
cs
sahf
lds
mov
push
lock
pop
cmpsb
sub
shll
and
hlt
movsb
into
leave
xchg
call
std
cltd
inc
sbb
dec
mov
add
movsl
adcb
movsl
xor
mov
fwait
cmp
lahf
std
sub
repz
jmp
inc
cmp
jae
cwtl
cmc
pop
div
fiaddl
inc
rol
mov
outsl
hlt
iret
mov
gs
pop
sbb
xchg
jb
inc
or
pop
push
repz
andb
ret
xchg
mov
mov
cmpsb
ss
mov
cs
lods
push
push
mov
jnp
popa
dec
push
jne
icebp
cmpsl
dec
push
shll
fistps
inc
adc
xchg
pop
and
fidivrs
cmp
add
pop
ds
bound
mov
scas
enter
rorb
int3
add
and
loop
out
stc
test
stos
adc
push
std
pop
shl
mov
iret
adc
mov
adc
into
jbe
sbb
lret
lahf
pusha
ds
shlb
lods
ret
ds
adc
sbb
ret
mov
push
stc
dec
jae
cmovno
adc
push
jl
movsl
push
adc
push
cli
pop
push
ljmpw
jmp
or
test
mov
adc
divb
lahf
out
xlat
mov
push
cltd
or
mov
lret
cld
pop
addb
push
mov
mov
sbb
dec
jg
lods
add
mov
pusha
hlt
push
pop
ret
dec
push
sbb
mov
outsl
icebp
adcl
in
jb
sti
push
xchg
cmp
pop
jle
jecxz
sbb
cmpsl
cmc
inc
xchg
inc
mov
mov
fidivl
xor
insb
stos
inc
adc
imul
cwtl
jge
adc
push
pop
aas
mov
push
out
push
out
xchg
lcall
loope
mov
imul
add
inc
or
cmpb
lahf
cltd
fs
inc
xchg
xor
adcl
jge
imul
push
ss
mov
fisubrs
sub
xchg
stc
fldt
mov
mov
into
mov
addr16
and
pusha
testl
push
ret
mov
dec
dec
pop
cli
xchg
xchg
xchg
into
push
push
les
push
pop
sbb
pop
pop
mov
cmpsl
pop
sub
jecxz
mov
cmp
xor
fwait
cmp
das
out
push
int
or
movsl
adc
sbb
sbb
adc
xor
adc
test
xchg
pop
add
inc
inc
push
xor
mov
push
ljmp
lahf
sbb
xor
mov
mov
cmc
fwait
aaa
mov
pusha
stc
jecxz
sub
out
add
push
sbb
in
jo
dec
and
call
xor
mov
adc
jb,pn
xchg
cmp
data16
xor
xchg
cmp
in
jno
lcall
cwtl
insb
mov
shrb
sub
mov
movl
add
mov
mov
mov
or
inc
hlt
mov
fwait
mov
add
pop
fdivs
jmp
xchg
inc
dec
mov
outsb
in
andl
test
pop
xor
test
xchg
lds
push
lds
testl
pop
xor
push
hlt
in
pop
lea
fwait
hlt
inc
mov
fistl
mov
int3
sbb
dec
roll
out
mov
cld
cmp
arpl
call
cmp
pop
and
adcl
movsb
fnsave
fs
movsb
pop
mov
shl
dec
addr16
jle
push
out
in
cmp
int
and
sbb
mov
inc
jbe
lret
icebp
icebp
bound
jg
addl
inc
xlat
jno
mov
or
fnsave
loop
insl
ljmp
jl
inc
jecxz
jbe
lcall
cmp
pop
out
jne
into
fs
outsb
fildl
cmpsl
add
je
rcrb
ret
hlt
inc
clc
jne
adc
and
jecxz
int
roll
xchg
ret
adc
hlt
leave
xlat
outsb
cld
jne
leave
cmpsb
sbb
mov
jecxz
mov
sub
xchg
sub
push
movsb
mov
ljmp
fldenv
lcall
cmp
shlb
xor
pop
add
xor
aad
cld
arpl
push
fiaddl
cmp
or
mov
jnp
push
lea
cwtl
push
fidivrs
jg
sub
or
push
jle
push
addr16
pop
sub
pop
incl
inc
or
rclb
out
xchg
aaa
dec
idiv
popa
add
push
stos
imul
xchg
roll
xchg
cmp
xchg
enter
push
out
int3
cmp
add
outsb
add
pop
inc
cs
popl
push
lock
inc
or
in
mov
adc
xchg
or
cmpsl
fnstsw
mov
mov
mov
and
cmpsl
ss
xor
fnstsw
jg
or
dec
in
outsb
cmc
or
outsb
scas
jmp
je
pop
mov
xchg
xorl
sarl
pop
and
pop
stos
inc
daa
test
mov
jecxz
stc
outsl
mov
out
xor
pop
jge
xchg
mov
test
push
add
adc
aad
inc
scas
lods
mov
or
push
cmp
decb
ret
xchg
dec
hlt
xchg
inc
mov
movsb
sti
rol
xchg
cs
sub
out
cmp
adc
movsb
add
pop
mov
sbb
ss
imul
cmp
bound
hlt
popf
cmp
pop
sbb
data16
xor
jae
sbb
std
fs
ljmp
and
push
stos
arpl
fistps
out
adc
clc
cmp
cmp
and
sbb
add
iret
jp
negb
loop
cld
popa
inc
or
lock
divl
cs
arpl
nop
aad
push
dec
pop
faddl
stos
pop
flds
test
in
jbe
fdivrs
aad
xchg
or
pop
out
mov
scas
cmp
imul
arpl
mov
fldl
imul
repnz
cmpl
dec
jo
mov
ret
repz
scas
lods
adc
add
xor
and
mov
jb
movsb
or
nop
daa
mull
jl
sbb
lcall
and
lock
inc
xlat
mov
or
fisubl
mov
sub
dec
lcall
mov
sbbl
hlt
insl
es
mov
mov
rclb
adc
xchg
xor
sbb
ds
in
sti
sbb
ret
dec
cmp
jle
mov
push
mov
test
imul
pop
mov
fsubp
jnp
cltd
mov
lret
xor
cltd
in
into
gs
test
mov
aas
in
xorl
aad
xchg
or
pop
in
mov
lods
aaa
inc
cwtl
das
add
mov
push
faddl
imul
repnz
cmpb
dec
aad
jae
outsb
das
lahf
sub
xchg
pop
rorb
jnp
scas
lods
adc
int
int
mov
xchg
pop
push
in
push
mov
jae
mov
les
jl
pop
mov
dec
mov
lcall
and
out
push
inc
xlat
xchg
or
fsubs
rclb
inc
fsubp
dec
lcall
lahf
mov
sbb
lods
mov
mov
rcrl
adc
test
xor
sbb
dec
in
cli
sbb
rorl
loop
and
push
out
shlb
jne
and
xchg
sub
in
push
cwtl
mov
lret
cltd
pusha
jmp
sbb
mov
ds
test
ds
xchg
or
push
in
rclb
inc
fisubs
cwtl
das
decb
mov
push
fiaddl
insb
movsl
sub
repz
cmpb
dec
rcr
je
insb
xor
popf
es
xchg
pop
mov
sbb
inc
lret
aaa
into
cld
arpl
in
dec
mov
inc
call
or
pop
cmp
xchg
sub
pop
out
mov
add
loopne
iret
lcallw
mov
inc
fadds
pop
not
pusha
sub
xchg
idivl
sub
fwait
xor
ss
mov
sbb
lock
outsb
and
cmc
mov
rcrl
adc
sub
enter
xchg
xlat
cmp
insb
clc
sbb
rorb
jnp
mov
adc
test
or
mov
pop
mov
frstpm(287
jl
xchg
mov
enter
pop
jmp
and
outsb
sarl
add
or
push
loop
rclb
jnp
stos
xor
fisubs
cltd
xor
xchg
mov
mov
sbb
jb
insl
movsb
sub
mov
jle
push
mov
adc
add
enter
xchg
push
mov
sbb
inc
leave
aaa
into
cli
bound
dec
mov
inc
out
je
lahf
or
pusha
cmp
xchg
sub
pop
out
lea
mov
inc
scas
add
cbtw
add
xor
inc
flds
movsb
pusha
not
pop
sub
idivb
sub
pushf
xor
addr16
xor
mov
sbb
out
fsubrs
test
testb
xchg
adc
dec
fbstp
call
std
xchg
aad
push
out
negb
mov
lea
mov
loopne
and
fwait
push
out
int3
xor
or
xchg
pop
mov
jge
xchg
mov
sub
iret
sbb
in
test
xlat
add
pop
cmc
push
loopne
rclb
jl
test
lret
cld
test
mov
mov
sbb
jno
outsb
mov
cmc
mov
jl
push
scas
pop
adc
dec
iret
fnsave
xor
fwait
and
xchg
push
mov
sbb
inc
aaa
into
clc
popa
lea
sbb
dec
mov
inc
out
je
popf
pop
lret
mov
call
dec
inc
lods
push
popf
fisubs
xchg
jmp
xor
inc
flds
mov
sub
mov
jle
daa
mov
dec
pushf
xor
addr16
xor
test
out
fsubrs
test
cmp
inc
testb
xchg
adc
dec
fbstp
out
leave
sbb
push
out
cmc
sbb
mov
fisttps
lret
xor
or
xchg
pop
mov
jge
xchg
mov
lds
fwait
pop
out
data16
mov
imul
xlat
add
pop
cmc
push
fildll
rclb
jl
test
inc
fisubs
lcall
sbb
push
dec
aad
sbb
jo
outsb
mov
ret
cmc
mov
jnp
push
lods
push
adc
inc
into
fnsave
xor
lcall
out
je
mov
or
aaa
into
mull
and
sbb
dec
mov
inc
in
je
pushf
push
lret
mov
call
dec
inc
lods
push
popf
frstor
xchg
and
das
mov
test
push
inc
flds
mov
sub
hlt
jle
es
dec
fnstsw
inc
pushf
xor
addr16
xor
test
cmpsl
mov
lea
rcrl
adc
lds
jbe
out
leave
pop
mov
push
out
hlt
sbb
mov
fimuls
lret
inc
arpl
jne
sbb
ds
sub
out
or
add
pop
in
popw
jle
mov
push
inc
xlat
add
cmc
push
fisubrs
rorb
jl
cmpsl
xor
popa
enter
andb
sbb
sbb
outsl
xlat
outsb
mov
ret
hlt
jp
push
lods
adc
fnsave
xor
cwtl
and
xchg
push
mov
sbb
cmp
pop
lea
pop
push
out
dec
mov
inc
jecxz
jne
fwait
add
popa
ss
call
dec
inc
stos
push
popf
addr16
cld
and
sub
dec
inc
fnstcw
or
not
pop
sub
mov
jle
and
dec
loopne
inc
pushf
xor
push
push
lret
sbb
sbb
testb
xchg
adc
ret
dec
loopne
jle
xor
adc
ss
out
repz
and
outsb
add
jbe
mov
push
cwtl
pop
out
leave
das
stos
inc
popa
ljmp
mov
xchg
sub
out
or
add
pop
in
addr16
jl
mov
imul
or
mov
fsubrl
rorl
dec
fistps
fwait
xor
andb
sbb
sbb
mov
bnd
push
stos
adc
jne
gs
xchg
push
std
xchg
push
mov
call
mov
ret
cmp
hlt
pop
mov
inc
scas
lods
inc
loope
jbe
cltd
add
bound
xchg
sub
push
jmp
dec
aas
test
sahf
fldenv
push
sub
fidivrl
push
movsl
cmp
sub
mov
jg
and
xor
push
push
leave
push
xchg
sbb
movsb
cmp
cmp
ret
xchg
adc
ja
jecxz
lret
xchg
shlb
sbb
and
cmp
je
lea
cs
inc
pusha
call
leave
pusha
mov
xchg
sub
out
pop
mov
shrl
pushf
pop
loop
addr16
and
addr16
fdivr
mov
mov
fisubrl
rorl
jle
movsb
sub
fistps
pushf
xor
jle
std
scas
sbb
sbb
insb
fnstenv
and
mov
jbe
push
test
push
lods
inc
leave
fidivs
fs
xchg
sbb
xchg
dec
mov
jmp
mov
sarl
repnz
lea
pop
out
inc
scas
lods
inc
loopne
jbe
xchg
add
arpl
mov
ljmp
cmpsl
or
nop
stc
es
in
inc
fstpt
movsl
ss
stc
into
push
sub
mov
adcb
stos
dec
loope
inc
sahf
xor
sub
dec
xchg
sbb
clc
outsb
cmc
ret
nop
push
lods
rorl
jp
xor
adc
jmp
and
cmp
jb
mov
lds
jbe
sbb
xchg
sub
call
dec
mov
loopne
adc
mov
gs
inc
fscale
xchg
mov
popa
clc
dec
fsubrs
rorl
jg
mov
les
std
lods
pop
mov
sbb
imul
popf
and
lock
push
cmpsb
adc
scas
inc
fidivs
arpl
xchg
dec
mov
ljmp
jb
cmp
nop
daa
mov
pop
out
inc
lods
scas
inc
fbld
or
xor
jmp
test
mov
cmp
shrl
clc
daa
mov
loop
inc
fdivrl
push
movsl
xor
arpl
int
sub
xchg
sbbl
flds
ss
push
push
dec
xchg
sbb
stc
nop
insl
repz
pop
scas
rolb
js
xor
xchg
int3
xor
fs
sbb
push
xchg
mov
out
ret
sub
inc
pop
in
or
mov
xchg
sub
jmp
dec
mov
adc
mov
arpl
inc
test
mov
stc
dec
sub
pop
jo
pop
mov
ret
sahf
xor
stos
push
mov
sbb
imul
cmp
stc
nop
out
jb
pop
movsb
nop/reserved
mull
int
sbb
xchg
dec
mov
jmp
imul
add
cmp
out
pop
xchg
sub
stos
scas
inc
frstor
push
xchg
dec
xor
jmp
orl
dec
cmp
imul
dec
inc
fdivrl
xor
sub
sbb
cmpsl
dec
loop
aas
lahf
ss
imul
lds
jle
mov
stc
nop
imul
pop
and
inc
loope
js
xor
xchg
int3
xor
in
sbb
or
xlat
or
lods
inc
pop
in
push
push
jle
bound
shr
addb
mov
mov
push
test
out
xchg
inc
test
stc
dec
sub
pop
outsb
adcb
sub
pop
rcrl
stos
adc
push
inc
int3
test
pop
movsb
cmp
stc
nop
in
jb
pop
movsb
or
loopne
negl
int
sbb
xchg
dec
mov
jmp
imul
xor
push
xchg
sub
test
js
xchg
cld
int
cs
sub
orl
or
hlt
daa
mov
loope
inc
fdivl
adc
leave
push
lds
cmpsl
dec
jecxz
cmp
push
sub
mov
jle
mov
stc
nop
imul
pop
scas
mov
fnsave
xchg
lret
das
push
ljmp
jno
mov
cmp
outsl
aad
es
xchg
pop
icebp
ret
inc
pop
jecxz
unpckhps
scas
ss
sub
add
pop
sahf
push
fst
imul
xor
xchg
inc
orl
mov
stc
dec
aad
ret
push
insb
adcb
daa
dec
loope
mov
push
push
inc
lret
xchg
xchg
push
movsl
cmp
mov
ret
pop
mov
pop
ss
pop
add
loopne
push
mov
add
xor
xchg
sub
cmpsl
scas
inc
fstps
adc
mov
cs
jmp
jg
mov
cmp
aam
mov
daa
mov
filds
jne
adc
push
das
movb
dec
in
cmp
add
mov
and
jb
sahf
cmpsl
shlb
lds
pop
scas
mov
cwtl
leave
sub
pop
mov
xorb
cmp
aam
rorl
repnz
inc
pop
loope
adc
jp
bound
jmp
dec
mov
fcmovbe
push
jae
mov
pop
lds
orb
mov
arpl
dec
shrb
sbb
lahf
ss
jbe
add
leave
xchg
sti
arpl
jae
sbb
cmp
call
or
mov
ret
hlt
pop
aaa
into
mov
push
in
fisubs
mov
pushl
xor
xchg
sub
scas
inc
xlat
pop
jp
nop
clc
int
sub
jmp
jge
mov
aaa
sahf
or
mov
daa
mov
fiadds
fdivl
adc
push
das
movb
dec
in
cmp
add
mov
and
popf
cmpsl
ds
xor
nop
lock
pop
scas
mov
fidivl
cwtl
enter
pop
jmp
jno
mov
cmp
es
pop
repnz
loopne
adc
jns
bound
int3
jmp
dec
mov
push
jb
mov
pop
les
jg
cmpsb
mov
arpl
inc
shrl
sbb
mov
imul
inc
enter
fdivl
sbb
xchg
out
les
or
mov
shl
repz
aaa
into
mov
cwtl
inc
lods
push
in
frstor
mov
jae
xor
xchg
sub
movsb
scas
inc
pop
jp
test
das
jecxz
jmp
jl
mov
ss
or
mov
daa
mov
fldl
fdivl
adc
lds
movb
dec
in
cmp
add
lea
and
pushf
cmpsl
ds
xor
nop
gs
lds
pop
scas
mov
fnstenv
cwtl
sub
pop
call
jno
mov
cmp
add
lods
inc
push
fistpll
adc
bound
lret
jmp
dec
mov
or
or
mov
pop
ret
inc
fcomi
jle
cmpsb
scas
adc
sub
sbb
mov
imul
inc
movl
cmp
out
les
pop
sbb
repnz
aaa
into
mov
add
fsubl
mov
std
jae
das
mov
xchg
sub
mov
jp
mov
int
sub
jmp
jnp
mov
xor
push
aad
mov
daa
mov
faddl
fdivl
adc
les
movb
dec
in
cmp
add
mov
and
fwait
cmpsl
ds
stc
nop
fs
lds
pop
scas
mov
jecxz
jae
xor
cwtl
sub
pop
out
mov
jge
or
rorb
repnz
fidivrs
adc
bound
lret
cld
test
lahf
dec
xlat
shrl
jo
mov
pop
ret
repz
cmpsb
scas
adc
cli
inc
iret
sub
sbb
mov
imul
aas
movb
xchg
sbb
xchg
in
les
push
sbb
icebp
pop
aaa
into
mov
add
xchg
cld
jae
cs
aam
dec
xchg
sub
mov
jp
cmc
int
daa
scas
cwtl
das
loope
jmp
jp
mov
xor
or
xchg
daa
mov
fstpt
inc
fdivl
adc
ret
dec
das
jg
sbbl
shlb
lahf
ss
mov
and
lcall
arpl
lds
pop
scas
mov
jecxz
jb
xor
cwtl
lds
push
ljmp
jno
scas
cmp
add
lods
inc
push
fnstsw
pcmpeqd
bound
leave
jmp
dec
mov
or
or
mov
pop
roll
lods
adc
inc
into
sub
sbb
mov
push
movsb
or
pop
negl
jae
sbb
xchg
jecxz
lds
sbb
lock
aaa
into
xchg
add
fldenv
mov
cli
jae
sub
ds
dec
xchg
sub
pop
hlt
cmp
jnp
mov
int
and
inc
jmp
js
mov
mov
xchg
daa
mov
fidivrl
adc
rorl
jle
sbbl
shll
insb
add
mov
and
cltd
test
lret
das
stc
nop
popa
in
pop
push
adcl
mov
in
jno
xor
cltd
les
push
ljmp
jno
lods
aaa
ds
int
decl
scas
inc
push
fstpt
or
cs
das
pusha
ljmp
sbb
mov
push
insl
daa
mov
pop
mov
adc
inc
int3
vpacksswb
in
mov
aaa
call
or
and
pop
fnsave
test
dec
scas
sti
xchg
loope
pop
fwait
add
mov
mov
cmp
test
add
xlat
popa
and
sub
sub
pop
cmc
aaa
sahf
mov
rcrb
adc
lods
lcall
mov
mov
test
sub
fdivrs
adc
rorb
jl
sbbb
sahf
dec
in
xor
aaa
data16
add
mov
and
fdivl
xchg
test
leave
cs
xchg
pusha
ljmp
mov
in
outsl
aam
int
xchg
add
push
jecxz
mov
jns
or
int3
nop
daa
incb
scas
inc
push
fnstcw
or
movsl
sub
das
pop
jmp
clc
jg
dec
mov
or
add
sub
push
mov
adc
inc
lret
sti
bound
in
mov
cmp
outsb
imul
or
push
cmp
mov
repz
fidivs
adc
aas
inc
scas
cld
xchg
loopne
pop
cltd
add
mov
mov
cmp
sub
sub
mov
fadds
inc
mov
aad
or
pop
cwtl
inc
inc
mov
fcmove
sar
stos
fnstcw
les
xor
mov
out
subl
push
sbb
sbb
and
push
ljmp
push
aaa
dec
les
cmp
out
adc
mov
jne
jp
ret
and
adc
add
icebp
inc
out
inc
sub
js
int
lds
loop
push
push
pop
cwtl
cmpsb
cmpsl
dec
mov
xchg
rol
jo
out
movsl
or
shll
stos
xor
and
push
std
out
roll
cs
cmc
jl
rorl
pop
addr16
clc
int
mov
or
jle
lock
je
out
lea
ret
test
out
or
push
mov
jno
adc
bound
mov
inc
ffree
das
insl
dec
outsl
push
shl
out
aam
movsb
jb
sub
inc
mov
mov
fnsave
mov
adc
mov
and
jmp
mov
stos
and
cmc
jo
cmp
clc
popf
push
xor
push
xor
add
jle
push
out
sbb
mov
mov
hlt
sbb
sub
sbb
sub
add
adc
faddp
add
aaa
je
cmpsb
pop
xchg
ret
inc
clc
loop
sbb
xor
pop
mov
out
or
in
rcr
test
notb
mov
outsl
adc
pop
adc
inc
dec
dec
subb
testb
arpl
add
in
cltd
adc
mov
sub
in
push
loopne
ja
adcb
ja
pop
jns
jmp
sub
mov
imul
mov
inc
imulb
mov
test
fwait
inc
dec
cmp
incl
ret
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
jmp
shr
call
mov
cld
iret
repz
xor
lret
testl
mov
fwait
lret
mov
fdivrp
sbb
and
xchg
ret
jp
outsl
test
nop
jno
mov
pop
jbe
mov
mov
mov
push
lods
test
cld
ds
xchg
ret
shll
push
push
jbe
pop
mov
das
std
or
or
sti
int3
jnp
push
movb
sarb
xchg
insb
mov
clc
jno
jp
outsb
out
xor
mov
and
cmp
xorl
jnp
mov
shll
popf
test
bound
mov
or
cld
in
jl
daa
add
jmp
fs
ljmp
mov
dec
cmp
or
mov
int3
mov
xorl
or
test
sub
imul
push
push
jle
xchg
or
in
add
mov
scas
cmp
popa
cmp
mov
iret
lock
push
orw
and
jg
stc
fdivrs
sub
in
clc
pusha
xor
mov
out
push
adc
lcall
stos
cwtl
sub
hlt
mov
xor
cli
sub
mov
xchg
dec
lret
pop
xor
mov
pop
jge
xchg
mov
mov
popf
xor
jno
test
addl
sbb
daa
adc
mov
bound
jne
mov
inc
jb
sub
in
cmp
clc
ret
cli
xchg
cmc
inc
add
cmc
pop
hlt
bound
out
ja
cmp
out
push
xor
pop
add
push
popa
mov
mov
adc
cmp
test
sbb
cmp
shl
pop
inc
in
pop
push
popf
aaa
sbb
mov
in
adc
cmpsb
dec
xor
mov
scas
dec
push
mov
or
icebp
and
adc
cmpb
inc
cld
aad
inc
and
imul
fwait
icebp
adc
dec
xor
mov
xor
mov
xor
or
xchg
iret
cltd
mov
sbb
jae
push
sbb
jecxz
sub
outsb
aad
push
fisubrs
fcompl
xor
jle
rcr
jle
dec
xchg
jne
xchg
mov
call
mov
xor
and
sti
xor
sub
cltd
xchg
cmpsl
stos
shlb
lock
negb
pusha
aad
mov
mov
mov
jne
dec
test
out
adc
icebp
adc
loope
xchg
or
pop
add
dec
mov
pop
cmp
mov
mov
aam
pop
inc
xor
sbb
mov
mov
xor
js
xchg
movsl
stc
jmp
pop
test
jmp
lret
scas
cwtl
insl
mov
popf
adc
push
movsl
cwtl
cmp
addr16
fwait
jb
dec
mov
jb
push
or
fdiv
push
and
adc
insl
clc
or
jo
repnz
nop
xchg
leave
aaa
js
rolb
stos
inc
lret
call
or
jp
inc
mov
std
in
inc
or
xor
cmp
in
hlt
fs
daa
jmp
call
and
outsb
call
pushf
pop
sbb
js
add
fistpl
das
aad
mov
clc
inc
adc
out
mov
cmp
sub
jle
sub
mov
insb
add
mov
pop
int
push
push
pop
mov
notl
mov
push
mov
aad
cmp
bnd
lea
inc
lret
shrl
mov
icebp
scas
sbb
fnstcw
pop
mov
pop
cltd
scas
or
jnp
pop
push
hlt
or
push
bound
lods
push
repz
pop
ja
gs
hlt
sub
sub
inc
xchg
xchg
pop
es
sbb
daa
and
dec
mov
pop
std
js
push
sbb
scas
inc
iret
cmpsb
lret
or
loop
xor
aam
ret
pop
movsb
cmp
jae
aam
sbb
inc
mov
fstpl
add
mov
inc
je
arpl
int
ret
nop
xchg
test
aas
xchg
fwait
mov
out
dec
inc
adc
fsub
adc
movsl
pop
add
aaa
push
adc
enter
add
cmp
adc
out
shlb
cmpsl
dec
push
pop
sarb
lock
cld
nop
mov
pusha
outsl
xchg
lahf
lock
daa
jno
into
mov
scas
fisubl
push
lahf
outsl
xchg
pusha
scas
or
mov
lcall
pusha
cmc
sub
and
jle
test
iret
cmpsl
mov
add
push
in
add
pushf
insl
mov
pop
mov
stos
lods
jbe
repz
imul
sarl
adc
lahf
bound
in
mov
pop
jecxz
insl
in
sub
fdivs
cs
push
push
scas
stc
pusha
sub
mov
dec
push
pop
adc
aaa
or
xchg
test
lret
lcall
js
inc
push
push
pop
push
push
add
or
addr16
or
sti
lahf
dec
addl
loopne
add
mov
fcoml
enter
int3
ss
sbb
clc
testl
push
dec
mov
fidivrl
enter
push
imul
rolb
mov
dec
pop
fcompl
xchg
pop
jns
mov
movsl
push
loopne
sub
mov
sahf
rolb
mov
dec
mov
dec
pop
xor
jg
repz
or
daa
jp
pop
test
idivb
ss
pop
mov
test
in
mov
paddusw
cmp
dec
and
jle
ljmp
jmp
push
push
fisttpll
in
daa
pop
cmpsb
ret
leave
dec
jb
cmp
pop
mov
gs
daa
lcall
loopne
into
mov
pop
mov
daa
in
dec
adc
or
mov
mov
inc
daa
lret
pop
pop
xor
std
sub
pop
lcall
popa
cmp
hlt
imul
in
or
hlt
lret
and
cmp
jle
test
adc
nop
xchg
jo
sub
cmp
mov
mov
jge
fidivrl
shrb
repnz
sar
aaa
repnz
in
xchg
sub
or
add
cmpsb
xorb
test
mov
mov
jge
stos
xorb
lods
test
push
sub
inc
bound
popa
fsubp
cmpsl
out
ja
push
repz
sbb
or
notl
icebp
sbb
dec
jp
repnz
out
cmp
mov
call
popf
mov
and
push
push
and
pop
out
sbb
push
loopne
cmc
add
cmp
mov
sub
jg
rcl
cs
xchg
pop
inc
and
mov
xor
mov
loopne
aam
mov
movsl
mov
jle
js
inc
fldcw
xchg
xor
cmpl
push
lods
or
mov
test
xor
insl
jnp
xchg
decl
add
sub
pop
loopne
or
push
adc
pop
fcoms
sbb
call
xchg
movsb
lods
sbb
call
adc
jo
sub
dec
mov
fcoml
aas
idivb
xchg
push
xorl
dec
addb
cltd
insb
or
or
and
adc
into
cmpsl
cmpsb
mov
in
adc
and
out
mov
mov
loope
pop
shlb
pop
push
inc
mov
pop
imul
loope
das
cmp
push
push
or
gs
jmp
and
mov
pop
iret
mov
cli
inc
dec
fdivrs
push
mov
mov
and
gs
call
inc
outsb
jle
jge
aas
outsl
ljmp
xor
jnp
adc
divb
or
mov
add
add
lods
lock
jle
push
subl
incl
lock
inc
fnstcw
mov
mov
test
inc
mov
jne
cltd
ret
ficoms
aaa
push
lods
pop
pop
jnp
fsubrl
ds
loop
push
stos
out
daa
xchg
ficompl
testb
fwait
call
popf
popf
cmpsl
in
sub
add
testb
add
xlat
cs
push
push
cwtl
dec
mov
or
push
xor
