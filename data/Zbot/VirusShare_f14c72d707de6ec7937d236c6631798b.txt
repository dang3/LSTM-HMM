call
lret
jg
mov
int
imul
out
in
shl
add
js
popa
scas
lcall
faddl
xor
cwtl
inc
adc
xchg
into
test
je
push
cs
insl
pop
scas
mov
js
cmp
popa
jns
rorl
ror
out
jnp
rorb
xorb
fst
mov
sar
aam
decl
pop
and
stos
insb
in
lcall
or
xchg
inc
push
sahf
dec
push
or
call
out
adc
add
mov
inc
or
mov
leave
xchg
mov
clc
jg
cmpsl
cmp
ror
dec
sbb
ljmp
movsb
in
rol
adc
fimull
inc
pushf
mov
adc
xchg
cmp
stos
movsb
and
loopne
push
lret
sub
mov
test
jb
ljmp
xchg
sub
mov
mov
in
pop
pushl
fadds
adc
dec
and
pop
int
clc
push
fwait
mov
xchg
imul
call
lea
mov
xchg
inc
pop
shr
sbb
les
adc
xor
incl
cwtl
and
ds
bound
mov
wrmsr
push
and
fsubrl
or
loopne
in
xor
pushl
adc
sbb
inc
push
movaps
outsb
pop
aam
mov
test
ds
gs
decl
popa
push
jmp
ds
inc
pop
sub
inc
rorl
daa
subb
jmp
imul
cmp
mov
in
add
lods
les
push
adc
pop
push
loop
pop
sub
out
push
fidivrl
jg
xor
push
icebp
and
aad
xlat
sbb
std
add
mov
ret
jmp
cmp
popa
scas
lret
mov
cltd
fcmovnbe
mov
jmp
les
loope
daa
pop
arpl
jle
cld
jae
ret
cwtl
outsl
cmp
cs
call
cld
jbe
rol
lea
push
push
fucom
jmp
movsb
addl
aad
xor
and
call
movsl
jb
rorl
mov
pop
push
push
xchg
idivl
sub
stos
xchg
dec
mov
aas
inc
inc
ljmp
xchg
sbb
daa
and
push
dec
inc
insl
hlt
icebp
or
push
jl
hlt
fstpl
xor
mov
mov
mov
movsb
out
cli
repz
sti
dec
fsubs
and
sub
mov
lcall
sub
lods
cs
xor
dec
leave
outsb
daa
call
jl
add
pushl
movb
stos
mov
dec
fidivrl
jae
in
ret
lret
and
or
fisttpll
pop
test
lods
cltd
add
fcmovu
sub
rol
jmp
inc
sub
sbb
mov
decl
call
cwtl
icebp
outsl
and
sub
clc
pop
jnp
xchg
scas
pushf
mov
imul
cltd
push
fs
incl
leave
and
fstpt
divb
mov
dec
jg
pop
xor
cmc
xchg
xor
test
sbb
mov
push
pop
cli
shrb
fdivrl
jle
xchg
mov
push
ffree
fwait
hlt
adc
dec
add
cmp
lret
daa
and
lea
andl
stos
adc
cli
out
inc
mov
stos
sub
ljmp
or
das
in
rcr
loop
sar
cmp
jo
adc
shl
xor
gs
jle
call
gs
pop
pushl
notb
add
mov
push
ret
arpl
pop
std
cmc
push
mov
lods
dec
lods
andl
clc
push
pop
shrb
dec
inc
push
bound
fs
cmp
arpl
push
cli
push
imul
js
and
in
loope
gs
cmpsl
sbb
xchg
sahf
pushf
pusha
add
dec
std
in
push
fildll
and
scas
jae
ret
ljmp
push
mov
imulb
lcall
adc
sub
push
out
in
cmp
mov
fwait
pop
xor
jmp
push
jmp
mov
icebp
push
daa
shrd
sti
fiadds
sub
ljmp
enter
push
dec
push
shr
orb
sub
mov
incl
addr16
insb
pushf
stos
or
inc
inc
aam
push
rolb
sbb
adc
decl
subl
pop
sub
pop
mov
lahf
lcall
aad
lcall
decb
sbb
mov
mov
mov
test
sti
lods
and
incb
jns
repnz
xor
in
fnstsw
in
add
cmc
ss
mov
mov
adc
test
fistpll
or
and
or
lcall
and
push
enter
vmaxps
mov
mov
cmpsb
popf
test
mov
jmp
pop
rcl
mov
or
jo
scas
xor
shrl
out
addr16
mov
jmp
mov
data16
out
orl
pop
mov
dec
cli
sbb
mov
mov
xchg
outsb
sub
adc
shll
mov
pop
mov
adc
addb
jle
out
rorb
aam
sar
lcall
insb
mov
or
xorb
push
dec
outsb
lret
pop
jae
jg
fistpll
sub
aaa
mov
iret
rcll
mov
push
mov
jge
ja
mov
add
mov
cld
inc
or
and
filds
mov
mov
adc
pusha
cmp
mov
arpl
insl
outsb
incb
mov
ljmp
jecxz
jbe
mov
jmp
fs
jmp
call
mov
pop
mov
pop
ret
ja
rcrl
or
orb
enter
inc
dec
pushl
xchg
mov
jb
inc
enter
cmp
jg
mov
fcoml
mov
dec
adc
fsub
loop
into
mov
jno
xchg
cltd
inc
outsl
fstpl
or
adc
push
push
lods
dec
das
mov
mov
mov
adc
loop
cli
subb
insl
cmpsb
ja
incl
sbb
xchg
jmp
lock
push
mov
out
mov
pushl
or
xchg
testl
pop
and
mov
sub
mov
gs
ljmp
push
cmpsb
insb
pop
outsl
dec
cwtl
adc
js
mov
mov
push
call
out
and
and
jmp
gs
div
out
imul
push
orl
push
bound
jmp
fwait
ss
adc
lds
add
bnd
les
pop
rclb
cmpsl
test
movsb
push
loope
nop
xor
sbb
sbb
shlb
jg
and
lret
insl
cwtl
lret
outsl
add
mov
and
mov
data16
jmp
pop
cwtl
jnp
jo
dec
adc
xor
mov
and
mov
push
and
incl
out
pop
mov
ljmp
jno
ret
ljmp
pushl
fs
xor
insl
lret
sti
dec
movups
sub
push
lret
pushf
mov
fsubrl
dec
xor
sbb
das
push
shrl
movsl
sub
js
out
dec
loope
cmc
lea
out
pop
push
cmp
sti
pop
adc
das
pushl
push
push
lahf
dec
int3
shll
data16
cmp
outsl
push
or
pop
pop
pop
mov
in
adc
sub
dec
sbb
loope
xchg
mov
cli
das
pop
adc
mov
jl
call
in
jnp
push
push
xor
loop
add
je
popf
mov
lds
jmp
push
iret
mov
inc
mov
sbb
ret
insb
rorl
enter
scas
mov
adc
mov
testb
mov
push
cltd
int
cmp
push
test
adc
jg
lcall
push
lahf
push
lea
cmp
das
lock
inc
leave
dec
pushf
faddl
cmc
jnp
stos
adc
out
add
adc
push
pop
xor
rol
std
jmp
sbb
imul
out
jmp
mov
mov
jbe
mov
jo
pop
movsb
xchg
cmp
cmp
ficomps
stos
mov
adc
add
jge
jle
loope
ret
mov
push
or
out
mov
test
stc
jbe
outsl
xchg
xor
fistps
xchg
adc
pop
into
add
movsl
mov
ror
add
inc
push
aad
and
lcall
jmp
add
pop
mov
sbb
sbb
jmp
in
decl
push
dec
gs
test
sti
xlat
pop
mov
push
push
repnz
pushl
addr16
out
pop
test
stos
pop
shr
jbe
mulb
dec
aad
shrd
int3
mov
inc
add
fldt
ret
mov
mov
ljmp
mov
idivl
call
mov
sbb
adc
jmp
ljmp
repnz
mov
xor
mov
pop
mov
dec
mov
aas
mov
mov
adc
mov
push
cs
out
test
sbb
fwait
popf
popf
in
iret
test
cmp
lods
imul
cmp
mov
out
in
ja
lret
mov
scas
jo
push
cmp
data16
in
adcb
mov
outsl
aas
xor
out
jo
aaa
imul
or
addr16
xor
inc
inc
xor
int
imull
jne
gs
pusha
mov
mov
loopne
ret
push
push
mov
xchg
ja
add
jno
and
jmp
mov
add
or
sbb
push
adc
push
sub
fcoms
add
jg
jmp
nop
inc
sbb
mov
add
xchg
cmp
cmp
xor
roll
adc
adc
jbe
adc
xchg
in
cli
out
jbe
mov
rclb
movl
insl
sub
inc
push
mov
mov
adc
dec
add
cmp
and
push
mov
std
push
andl
orb
adc
adc
nop
inc
add
add
xchg
sub
call
mov
shlb
xchg
and
sbb
les
hlt
movl
out
inc
push
mov
imul
jl
add
xchg
lods
xchg
sbbb
xor
ljmp
adc
out
repz
repz
jmp
daa
outsb
js
test
inc
shll
mov
mov
add
cwtl
mov
adc
stos
es
cs
incl
aaa
or
mov
mov
mov
je
repz
push
icebp
pop
jmp
insb
inc
filds
out
inc
fldenv
fiaddl
bound
mov
je
mov
adc
xor
les
jmp
pop
jecxz
jmp
sti
inc
daa
arpl
inc
fabs
repz
fcmove
jge
js
testb
inc
cmp
jb
sub
xchg
sub
pop
cmp
sub
dec
loop
and
popa
add
imull
fs
inc
or
push
fisttpll
or
mov
cmp
std
das
mov
sbb
mov
jb
sub
mov
in
or
adc
std
pop
sub
shll
adc
or
fnstcw
aaa
mov
cmpxchg
adc
fisttpl
insl
adc
adc
fiaddl
or
mov
or
fs
mov
mov
adc
mov
add
mov
pop
dec
pop
pop
inc
cmp
fsubs
mov
rolb
aaa
test
es
add
mov
jmp
push
jmp
jmp
lds
add
push
jns
icebp
aas
inc
pop
in
sbb
cwtl
subb
pop
dec
test
or
add
test
std
fdivl
testb
mov
es
push
lret
psrlw
inc
adcl
hlt
in
push
ret
push
pop
pop
mov
rcrb
mov
in
popa
xchg
incl
icebp
or
mov
fs
jo
pop
arpl
ret
ret
imul
incl
dec
test
inc
aaa
add
push
imul
mov
pusha
cwtl
call
sti
shrl
mov
int3
aad
out
lret
je
pop
rorl
fldl
cli
jle
scas
push
inc
jg
jns
addb
insl
inc
xor
bound
aad
sahf
outsl
movsb
in
loope
mov
jmp
shr
mov
pushf
mov
int3
xor
jl
jl
cs
jecxz
mov
push
pushl
out
lods
adc
jnp
dec
int3
xor
in
xchg
push
aas
mov
push
push
out
xor
inc
adc
xor
mov
jae
mov
out
mov
addb
out
call
leavew
mov
dec
repz
lcall
std
lahf
icebp
scas
pop
test
call
sbb
add
xor
ret
ss
mov
jmp
jo
es
je
sbb
jmp
cmp
inc
mov
adc
add
mov
or
imul
xor
loopne,pt
fstl
mov
jmp
mov
das
sbb
test
push
stos
push
xor
cmc
lds
xchg
in
push
inc
mov
jns
pop
push
mov
xor
xchg
frstor
adc
pop
out
cmp
cltd
rcr
out
jmp
pop
adc
loope
out
in
mov
es
or
lods
test
push
notl
mov
sub
add
add
add
inc
add
dec
push
adc
xchg
pushf
mov
add
add
loope
stos
inc
dec
add
stos
in
push
xor
add
push
lods
or
xor
mov
dec
push
inc
adc
adc
sub
adc
inc
or
add
or
inc
add
nop
inc
add
inc
push
add
add
xchg
and
add
sub
sub
addb
inc
push
add
subl
inc
add
andl
inc
mov
stos
pushf
xchg
enter
out
shll
fcmovbe
lret
sarl
pop
and
xchg
out
lcall
lret
mov
adcb
push
lahf
out
sahf
mov
and
push
pop
sbb
xor
pop
ss
xchg
fiaddl
insb
and
sar
decl
fcmovbe
std
mov
rorb
dec
sbb
sub
fidivl
test
dec
lahf
fbstp
jl
sar
in
jmp
in
mov
mov
rcll
jnp
pop
or
lock
jmp
mov
call
mov
lahf
ret
mov
jnp
out
jg
push
test
mov
adc
test
cld
scas
inc
mov
push
ljmp
mov
sbb
mov
es
mov
bound
mov
add
fmull
fiadds
mov
mov
push
mov
add
xor
lea
jle
incl
xlat
lret
mov
scas
mov
or
test
mov
mov
ror
xor
pop
dec
cwtl
aad
cld
push
sti
das
clc
sbb
mov
and
mov
push
xchg
cmpsb
stc
cmp
pop
xchg
lret
lret
idivl
ss
out
ds
ret
inc
ss
sar
ret
cs
inc
scas
scas
lcall
or
mov
mov
cmpl
rorl
xor
leave
cmp
mov
dec
test
ss
scas
mov
mov
jge
jbe
scas
subb
out
sub
cmp
sbb
sub
sub
cmp
icebp
xor
aad
push
stc
mov
push
cmpsb
dec
mov
stc
adc
mov
xor
inc
icebp
int
into
mov
mov
shl
xor
addr16
xor
push
jg
xor
mov
mov
mov
mov
inc
and
mov
clc
pop
stos
xor
pop
leave
cmovbe
pushw
cld
out
xchg
sahf
pop
sbbb
testl
outsb
iret
enter
lret
mov
movsbl
push
mov
scas
push
mov
push
push
mov
cmp
out
or
push
cmpsb
fildll
push
push
fsubl
lret
mov
sbbb
or
lret
shll
xchg
repnz
call
std
dec
fstps
lock
inc
in
fldcw
mov
fstl
call
fdivr
incl
lds
sbb
and
or
inc
push
ret
rcrb
in
push
or
or
sbb
adc
add
push
and
mov
pop
sbb
mov
jle
sbb
loopne
pop
pop
push
cmp
adc
sbb
adc
outsl
cmpsb
inc
or
dec
jg
and
push
sbb
sti
mov
cli
add
or
lret
clc
adc
lods
push
mov
sbb
call
pop
dec
xor
fldt
fs
jg
hlt
outsb
jge
cmp
movsl
imulb
pop
lock
ja
push
xchg
ss
xchg
subl
imul
cltd
roll
ds
es
push
fdivl
sub
inc
mov
fmull
fcomi
call
sahf
or
xor
cmpsb
and
jae
scas
hlt
fnstcw
cmp
push
incl
idivb
nop
xchg
adc
sarb
fsts
nop
gs
ljmp
mov
xchg
pop
jl
inc
dec
push
sbb
int
inc
rcl
rcrb
xchg
ret
inc
repz
mov
call
add
push
xchg
mov
ds
sbb
xchg
mov
mov
jg
inc
lods
cltd
lret
pop
push
nop
into
sbb
cmpsl
mov
push
test
cltd
outsb
aam
sbb
adc
cwtl
push
pushl
cmc
pop
xor
addl
leave
cmp
lods
inc
cmp
mov
mov
cmp
rcr
int
xor
mov
sahf
ds
arpl
shrl
mov
jle
pop
scas
jbe
lods
rolb
rcrl
lea
or
pop
lcall
xchg
decb
popa
jle
pop
jb
into
pop
fcomip
aaa
cld
andb
cli
xchg
inc
cs
dec
cld
xchg
repz
icebp
jmp
jecxz
ja
shll
mov
stos
lods
mov
jmp
lcall
daa
leave
sarb
loop
pop
inc
popa
pop
sbb
imul
and
in
pushf
ret
xor
ss
adc
das
sbb
in
mov
lock
loopne
sbb
pop
pop
cmpsl
ret
mov
pop
sub
ljmp
inc
adc
pop
lret
fistpl
into
mov
xor
inc
lcall
jecxz
push
fnstenv
push
mov
fadds
lahf
ljmp
aaa
or
outsb
cwtl
daa
fldl
dec
mov
inc
dec
cld
fcomip
outsl
push
inc
sahf
fisubrl
fsts
xor
test
or
gs
xor
aad
add
incl
imul
mov
xor
lds
jg
pusha
jg
mov
pop
jg
push
xor
rep
lcall
icebp
lods
jne
rorb
mov
outsb
mov
fistpll
push
xchg
xor
cmp
mov
pop
xorb
push
decl
mov
pushf
daa
inc
outsl
sub
adc
and
xchg
jbe
into
fwait
mov
sub
mov
sbb
pushl
sbb
inc
push
flds
push
fnstenv
int
das
dec
mov
xlat
mov
jmp
xor
xchg
and
sbb
dec
pop
inc
jns
xor
inc
jns
arpl
js
incl
cmp
jo
ss
imul
xor
dec
jns
push
gs
dec
insl
push
insl
inc
mov
dec
cmp
inc
jp
js
push
and
outsl
add
jo
jg
inc
inc
pop
xor
jb
dec
outsb
js
inc
push
jbe
pop
push
pop
push
cmp
dec
js
dec
jo
jo
in
xor
push
bound
jb
xor
jbe
imul
dec
jo
fs
pop
pushl
xor
dec
outsb
xor
jp
inc
jae
bound
data16
push
jae
fs
push
pushl
je
push
xor
dec
pop
aaa
popa
push
fs
inc
ja
xor
imul
dec
jb
push
xor
pushl
arpl
fs
imul
outsl
popa
push
js
outsb
imul
dec
jae
cmp
pushl
push
xor
insl
ss
aaa
jne
data16
jo
outsb
jp
imul
jae
je
jg
bound
jbe
mov
push
jo
xor
dec
push
dec
aaa
push
fs
mov
jae
push
cmp
push
ja
jl
ja
dec
imul
inc
jne
inc
bound
sti
or
gs
push
addr16
inc
scas
xor
js
xor
dec
stos
inc
push
push
incl
inc
dec
push
jo
ss
inc
push
inc
insb
js
arpl
inc
dec
inc
dec
inc
outsl
or
outsl
dec
push
ss
inc
je
insl
dec
je
or
add
push
inc
decl
fs
push
xor
inc
jne
dec
jo
inc
gs
aaa
fs
xor
imul
mov
addr16
inc
inc
push
jo
add
mull
popl
movsl
add
dec
xchg
fsubrp
add
pop
push
cmp
cwtl
out
and
sbb
dec
mov
add
repz
daa
shl
mov
or
push
fdiv
mov
ljmp
sub
adc
jmp
fstps
lock
in
sahf
inc
jecxz
int
jns
jo
out
js
push
jae
pushf
add
inc
cmp
mov
cmp
push
inc
sub
outsb
sbb
jbe
push
or
push
insb
ss
mov
pop
aaa
inc
push
adc
mov
add
push
or
cli
sbb
jbe
dec
lahf
xor
sti
xor
mov
lods
aad
rorb
int
cwtl
xor
loop
loopne
inc
xorb
idiv
divl
jbe
xchg
dec
dec
mov
push
mov
sti
pop
subl
cmpsb
xchg
push
xchg
adc
decl
jbe
fucomi
jbe
std
out
idivb
daa
out
dec
test
fcmovu
in
jbe
dec
push
popf
inc
test
pop
jnp,pt
js
rolb
fsubs
shl
sti
jbe
adc
sbb
adc
push
sub
sarl
push
inc
jb
push
aaa
fisttpll
inc
push
sbb
adc
addr16
repz
dec
jo
jmp
cmp
ret
jbe
shll
jbe
xchg
loop
xlat
inc
aas
inc
enter
mull
ret
ss
pop
jbe
pop
iret
test
outsl
outsb
push
cmp
ret
popa
outsl
and
inc
adc
es
or
adc
xor
cmp
mov
loopne
aas
leave
mov
sub
mov
cmpsl
push
fadds
out
icebp
rcrl
add
mov
nop
mov
int
ss
jmp
pushl
jns
test
psubq
pop
push
insb
ss
fiaddl
das
jge
insb
les
out
jmp
out
dec
ljmp
jl
daa
fisttpl
arpl
out
pop
inc
icebp
dec
push
scas
ds
out
xor
inc
mov
lds
in
mov
shrl
out
imul
gs
xor
cs
outsl
inc
sbb
gs
jb
je
arpl
push
arpl
outsl
outsb
ficoml
add
gs
jbe
add
pop
jb
fucomi
aad
dec
outsb
and
imul
imulb
je
and
gs
outsl
arpl
imul
or
pop
xor
imul
call
jns
push
outsw
scas
int
std
jb
popa
outsb
arpl
sbb
push
adc
rcr
jg
inc
jne
mov
popa
fs
fs
lods
mov
add
cs
rcrl
das
dec
lock
ja
jmp
loop
popa
jb
outsl
dec
jne
xor
cmp
inc
jns
sub
sub
out
sub
movsb
mov
pop
arpl
sbb
jbe
add
push
jns
js
iret
push
and
push
dec
cmc
and
popa
jbe
and
jo
rolb
push
jb
fdivrs
mov
outsl
fs
gs
mov
or
inc
imul
add
cltd
and
inc
loope
sbb
mov
insl
or
shll
test
fs
jb
scas
cmp
ret
inc
bound
mov
jle
xor
xor
call
push
outsb
push
cmp
jo
xor
imul
fwait
push
outsl
xchg
and
mov
mov
pop
dec
data16
push
je
xorb
cmp
sbb
out
mov
popa
pop
adc
pop
push
sbb
sbb
inc
shlb
or
jne
pop
icebp
xchg
cmpsb
jb
push
gs
pop
jb
jae
or
bound
mov
mov
popa
addr16
outsl
mov
dec
gs
popl
fistpl
jo
jae
jg
lods
xor
push
add
es
movsb
outsb
lock
push
adc
add
mov
je
push
jns
sbb
data16
lret
pop
pop
aas
and
push
mov
daa
lret
push
or
pop
pop
rorb
inc
add
mov
jo
adcb
inc
xchg
inc
xor
cmp
push
insb
adc
dec
bound
repz
jl
jg
jo
cmpsb
sub
mov
ret
into
scas
mov
jbe
xlat
jbe
arpl
push
out
mov
into
mov
inc
imul
adc
pop
and
add
xchg
arpl
test
shll
fnstsw
repz
sti
lods
inc
inc
insb
push
stos
push
lods
stos
sbb
adc
mov
imul
pop
mov
scas
mov
add
outsb
stos
daa
push
mull
inc
sbb
ret
test
mov
frstor
pusha
shll
sub
xor
sub
ja
das
les
inc
jo
inc
dec
mov
push
and
adcb
sub
jecxz
lock
sbb
add
hlt
es
add
pop
pop
ss
xor
sub
add
lods
pop
loope
in
jnp
push
pop
xor
sbb
xor
pop
adc
mov
insb
loopne
insb
js
stos
rcrb
and
insb
fisubl
pop
mov
mov
imul
insl
xorl
mov
ret
gs
js
jo
dec
pop
inc
loop
lock
jecxz
sub
or
inc
pop
add
cmpsl
push
xchg
adc
mov
sub
daa
sub
je
std
xor
dec
incl
jne
push
push
repz
push
or
iret
je
jmp
in
fildl
sbb
fsubs
aaa
or
sbb
mov
ret
xchg
pop
inc
lret
lods
mov
add
gs
inc
add
mov
adc
call
test
xchg
add
mov
sub
incl
push
and
add
subl
inc
add
fs
add
nop
push
add
orb
or
adc
nop
inc
add
add
subl
mov
adc
push
and
test
adc
andb
push
add
add
xorl
and
inc
add
test
mov
add
adc
adc
nop
inc
inc
gs
mov
dec
and
adc
mov
inc
inc
addl
orb
inc
add
nop
push
add
add
addl
or
add
add
or
inc
adc
nop
inc
add
add
push
add
dec
mov
inc
push
and
add
sub
mov
add
push
dec
mov
sub
mov
test
push
add
subl
inc
add
fs
and
andb
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
inc
daa
pushf
xchg
inc
repnz
cmp
js
jne
and
xchg
pop
push
cmp
dec
pop
repz
repz
jl
lcall
into
fsubr
clc
or
repz
es
dec
mov
push
sahf
out
fiadds
cmp
out
out
or
sbb
repz
repz
pop
jo
sahf
iret
repz
mov
aam
cli
adc
cmp
mov
dec
pop
insb
iret
repz
sbbb
out
ds
adc
inc
push
jns
out
insb
jl
pushf
mov
jl
out
loop
or
push
iret
repz
xor
pop
jo
cwtl
ds
repz
mov
jns
out
push
es
out
sahf
out
sbbb
sahf
fdivp
or
cmp
iret
repz
jp
mov
repz
cli
adc
mov
jo
repz
pause
cmpsb
mov
in
jns
iret
cld
or
and
push
sahf
out
sahf
push
xchg
stos
mov
jns
repnz
into
push
and
inc
push
bound
jns
out
xchg
mov
cmp
out
add
push
cs
repz
push
push
xchg
lods
ret
repz
ljmp
out
sub
push
out
mov
sbb
ja
sbb
push
cs
pop
out
sahf
out
mov
jl
fdivp
or
and
inc
cmp
repz
bound
lcall
out
add
out
sahf
cmpsl
adc
cmp
pop
sahf
out
sahf
je
movsb
mov
repz
adc
cmp
repz
insb
adcb
mov
jns
out
push
push
es
pop
out
sahf
out
test
sahf
add
sbb
cmp
repz
data16
lods
stc
cmp
repz
and
jns
cmpsl
sbb
inc
pop
outsb
sahf
out
sahf
jle
sahf
mov
fsub
jns
jge
and
push
xor
out
sahf
push
push
xor
rolb
iret
repz
adc
xor
pusha
cmp
repz
mov
loop
and
cmp
repz
jo
cwtl
scas
stc
cmp
repz
out
push
and
jns
cmpsl
es
data16
out
sahf
xchg
movsb
mov
iret
sarl
sbb
dec
pop
repz
repz
nop
cmpsb
mov
into
fsubrp
add
pushw
sub
cmp
repz
jb
iret
repz
lcall
out
ds
daa
es
push
jns
out
outsb
jle
cmpsb
mov
shl
cli
or
and
repz
cmp
push
repz
mov
in
jns
mov
sub
xor
jns
out
jo
nop
mov
mov
fdiv
or
sbb
repz
cmp
push
js
test
aam
iret
mov
pushw
cs
repz
repz
stos
mov
lret
sub
sub
cs
repz
push
outsb
jle
iret
repz
sahf
scas
mov
out
ds
sub
jns
out
insb
adcb
jns
out
sub
jns
out
ds
fs
out
sahf
out
mov
shl
iret
repz
clc
or
push
xor
pop
cmp
repz
test
repz
dec
push
adc
xor
data16
sahf
out
mov
popf
out
lock
push
ss
pop
jns
out
jb
mov
sahf
out
out
decb
xor
iret
repz
cs
pop
outsb
jle
iret
repz
movsb
mov
out
repz
or
push
xor
cmp
repz
js
cwtl
test
ds
repz
clc
xor
xor
iret
repz
jp
repz
repz
out
sahf
out
xor
sahf
out
sahf
jo
xchg
lods
aam
dec
repz
add
adc
inc
repz
repz
outsb
test
iret
mov
aaa
sahf
out
sahf
sbb
dec
pop
je
jns
out
xchg
movsb
mov
aam
cmp
out
add
sbb
inc
iret
repz
pop
jo
xchg
cmpsb
mov
iret
repz
in
cld
adc
jns
out
and
dec
bound
jns
out
cwtl
mov
fmul
sarl
decb
cmp
ds
cmp
repz
je
mov
repz
push
cmp
jns
out
inc
pop
je
sahf
out
sahf
xchg
movsb
mov
fdiv
cmp
sarl
adc
cmp
cmp
repz
mov
iret
rcr
add
sahf
xor
jo
xchg
jns
out
scas
mov
cmp
repz
sub
dec
iret
repz
js
test
shl
sahf
cmpsl
stc
cmp
or
and
push
jns
out
bound
lcall
shr
cli
or
repz
and
dec
pop
jo
cmp
repz
test
into
out
sahf
out
testb
sbb
inc
out
sahf
out
fs
movsb
int
jns
mov
fsubr
add
adc
iret
repz
xor
push
fs
repz
lcall
shr
decb
inc
push
sahf
out
sahf
ss
push
outsb
test
mov
sahf
out
push
push
cs
push
insb
out
sahf
out
lcall
sahf
loopne
adc
ss
cmp
repz
jl
pushf
mov
cmp
repz
cli
or
jns
cmpsl
sbb
inc
push
pusha
sahf
out
sahf
jbe
sahf
scas
cmp
out
out
push
inc
and
repz
repz
push
cwtl
test
clc
cmp
rcr
incb
dec
sahf
out
fiadds
cmp
insb
sbbb
rcr
add
cmp
rcll
es
iretw
repz
jle
stos
ret
sahf
out
or
cs
push
jns
out
push
cwtl
test
fidivrs
out
fsubr
push
dec
movb
jns
out
ds
insb
jl
out
sahf
out
ret
clc
iret
repz
or
dec
bound
iret
repz
cwtl
test
enter
repz
or
and
out
sahf
out
bound
cmpsb
fucom
jns
mov
in
or
out
sahf
out
cmp
jp
sahf
out
sahf
mov
cmp
sarl
and
dec
js
cwtl
test
mov
out
dec
push
push
xor
cmp
repz
bound
xchg
iret
repz
mov
or
sbb
ds
data16
out
jle
sahf
scas
repz
out
out
push
push
sbb
iret
repz
dec
pop
push
cwtl
test
iret
repz
into
fdivp
push
push
iret
repz
push
xor
pop
insb
jl
iret
repz
mov
sahf
out
lock
ds
sahf
out
insb
adcb
mov
loopne
add
cmp
repz
cmp
jle
cmp
repz
movsb
mov
lcall
cmp
pusha
js
cwtl
mov
sahf
out
rcl
decb
push
repz
shll
cmp
pop
je
repz
test
cmpsl
stc
cmp
add
cs
jns
out
pop
je
xchg
movsb
repz
out
int3
loop
add
repz
sbb
inc
pop
push
cmp
repz
mov
shr
jns
out
clc
push
pop
and
dec
out
sahf
out
jp
cmpsb
mov
out
sahf
into
fsubrp
adc
sub
repz
push
push
iret
repz
scas
out
out
lcall
pop
sahf
out
sahf
push
sarb
or
xor
cmp
repz
pop
push
cmp
mov
sahf
out
ds
pop
cs
fs
out
jl
movsb
mov
repz
out
lock
sub
repz
cmp
outsb
test
mov
sahf
cmpsl
stc
or
xor
pop
out
sahf
out
adcb
sahf
enter
or
cmp
repz
push
data16
repz
repz
out
lcall
dec
sahf
out
sahf
fs
pushf
lods
mov
aam
hlt
add
adc
cmp
repz
push
iret
mov
sahf
out
or
inc
push
jns
out
fs
test
sarl
shl
lock
iret
repz
es
pop
insb
test
repz
lods
mov
out
repnz
cmp
jns
out
adcb
sahf
int3
fsubr
add
xor
repz
push
push
iret
repz
mov
in
out
lcall
push
sahf
out
sahf
pusha
jo
nop
test
xor
out
enter
imul
cs
pop
push
iret
repz
nop
mov
iret
repz
inc
push
sbb
cmp
iret
repz
jo
sahf
mov
cmp
repz
fsubrp
push
imul
sahf
cmpsl
es
pop
outsb
sahf
out
sahf
test
dec
repz
add
inc
repz
repz
insb
test
mov
insl
data16
repz
sub
data16
repz
xchg
lods
ret
jns
cmpsl
or
push
push
es
out
sahf
out
jb
mov
sahf
enter
push
outsl
push
cmp
repz
inc
push
fs
cmp
repz
lcall
inc
sahf
out
sahf
push
data16
stos
ret
out
shl
repnz
repz
repz
pusha
jo
repz
adcb
out
cmp
cld
or
and
jns
out
dec
pop
push
nop
out
sahf
out
mov
fdivp
iret
repz
push
jae
cs
push
outsb
cmp
repz
xchg
lods
ret
sahf
out
repnz
dec
out
sahf
out
jl
pushf
lods
dec
repz
mov
push
es
jnp
add
inc
push
push
push
bound
fdivp
cmp
xchg
mov
jns
push
jbe
adc
jo
out
sahf
subb
cmp
repz
and
pop
jle
cmp
rep
mov
out
ja
aaa
add
jo
mov
cmp
repz
into
fsubr
jns
cmpsl
stc
add
push
and
dec
out
sahf
out
push
repz
rcr
push
jp
and
repz
inc
pop
jb
repz
xrelease
jns
iret
lock
cmp
jne
xlat
mov
mov
adc
push
push
addl
pop
lcall
add
fists
xchg
lea
decl
nop
jmp
imul
pop
mov
mov
mov
or
xchg
jge
or
shrb
ljmp
testb
dec
cmp
jl
mov
nop
in
negb
jg
rcr
sub
cmp
or
sbb
xor
xchg
sub
xor
hlt
out
test
sub
cmpsb
mov
sub
pop
ljmp
hlt
ffree
imul
sub
imul
sub
mov
lret
mov
incl
out
pop
jp
mov
daa
mov
fidivs
mov
mov
and
push
push
je
ljmp
sbb
test
shlb
push
push
rorl
movsb
call
and
subb
sub
es
mov
mov
mov
cmp
jne
fs
sub
out
mov
insl
mov
rclb
jmp
xchg
and
stos
rcll
inc
fidivrl
std
icebp
push
and
ja
out
jmp
mov
mov
popf
in
daa
add
and
xchg
inc
es
addl
push
nop
xor
pushf
xchg
inc
pop
arpl
push
pop
arpl
outsb
mov
ja
pop
lea
fsubrs
sbb
pop
pushf
jno
shl
loopne
sub
aad
std
mov
ds
repz
int
rsqrtps
jo
pop
xchg
pop
iret
xchg
aam
cld
push
or
mov
data16
cmp
decl
inc
dec
or
xchg
or
sbb
add
sub
daa
std
xchg
aad
adcl
nop
iret
pop
lods
std
jmp
mov
xchg
jmp
lcall
in
mov
mov
or
jmp
jmp
sub
mov
adc
jo
stos
push
iret
add
mov
inc
and
incl
add
push
and
xor
js
dec
enter
sbb
flds
jp
outsb
decl
insb
ret
sub
and
or
xchg
xor
test
or
mov
jmp
imul
xchg
or
lods
and
add
jmp
push
fadd
in
fnsave
inc
in
xchg
or
loope
inc
jns
inc
fldenv
mul
cmpsb
mov
and
fadds
mov
xchg
std
repz
mov
xorb
push
cmp
pushl
xor
rolb
xchg
push
loop
data16
jns
sbb
and
dec
ss
loopne
xchg
gs
or
or
sub
mov
pop
leave
or
lods
je
jl
mov
inc
dec
mov
lcall
sarb
fs
pop
inc
out
pop
adc
test
pushl
pop
insl
in
dec
call
jb
xlat
cli
sub
leave
test
aas
jl
imul
fistpl
and
push
in
sbb
mov
sbb
pop
sbb
pop
push
outsl
jae
fadds
fidivrl
ljmp
jge
mov
jno
xor
mov
loopne
test
sub
shll
push
stos
sbbb
add
adc
mov
clc
fcoms
ja
loope
sti
fwait
pop
push
ror
fcompl
pushf
pop
out
pushf
or
push
cmp
loopne
test
outsb
pushl
sub
and
xor
or
addl
lret
xor
in
insb
sbb
orl
lock
xor
fwait
cmp
push
imul
push
xchg
repz
cmp
popf
xchg
mov
pushf
jmp
sub
sub
out
insb
jb
xor
ljmp
add
mov
mov
sub
fisttpl
dec
mov
fstpt
mov
ja
in
or
decl
repz
rclb
lcall
jecxz
sbb
inc
int3
icebp
pusha
mov
call
mov
xchg
pushf
hlt
daa
iret
aas
sti
mov
xchg
in
decl
mov
pop
push
addr16
faddl
push
lds
mov
es
mov
xchg
jne
dec
ljmp
scas
in
les
movsb
mov
mov
pop
sub
aaa
sub
ljmp
popf
in
ja
decl
shr
inc
jnp
leave
popf
hlt
add
mov
xor
pop
jb
movsb
push
testb
and
ljmp
push
loopne
in
test
imul
sbb
pop
adc
push
sbb
jae
mov
test
jle
sar
cmpsb
cs
lret
jmp
ljmp
call
and
mov
ret
pop
xor
int
dec
push
jp
sbb
jg
jmp
ds
scas
and
fwait
nop
inc
imul
sbb
xchg
sbb
call
adc
cli
lcall
iret
in
cmpsl
or
add
push
cmp
idiv
push
xorb
jnp
decl
sub
scas
inc
xchg
out
pop
and
add
cmp
dec
jg
pop
mov
out
mov
jg
fldl
mov
les
imul
jo
test
jg
push
adc
dec
int
cmp
push
ficomps
fsubs
in
mov
sbb
mov
push
addr16
cmp
ljmp
mov
aam
pop
xor
mov
push
inc
in
mov
lcall
mov
scas
lods
lcall
adc
int3
push
xor
sbb
fsubr
jmp
cmpsl
jmp
gs
inc
and
mov
repnz
inc
sbb
cltd
movsb
ds
add
roll
pop
jp
cld
es
enter
dec
push
pop
mov
maskmovq
testl
idiv
push
pop
outsb
or
cmpsl
outsl
push
inc
iret
jmp
jns
imul
xor
or
xor
ja
add
ljmp
cltd
rcrb
xor
xchg
iret
pop
inc
cmp
lret
jnp
and
jle
incl
cmp
jnp
or
daa
cmp
mov
fstp
mov
outsl
dec
cmp
mov
call
xor
loope
xor
pop
sbb
dec
sub
scas
jno
lret
xor
leave
xor
xor
insb
or
ret
xchg
cltd
pop
scas
aad
push
mov
fwait
push
loopne
and
push
sbb
xchg
mov
in
xchg
jp
incl
xor
js
pop
xchg
jle
mov
mov
mov
inc
ror
scas
or
flds
ret
jno
push
xlat
faddl
dec
and
pushl
jns
push
orl
or
push
mov
mov
fistl
decl
imul
jle
dec
mov
frstor
dec
je
cmp
ds
xchg
aaa
stos
sbb
cmp
loopne
call
xchg
jne
sysenter
dec
jo
aas
mov
loop
inc
mov
mov
pushf
ret
scas
shll
dec
mov
push
enter
leave
pop
stos
mov
out
rorl
pop
call
cld
jmp
jne
sub
inc
xor
or
in
xchg
sub
enter
jmp
aad
mov
xlat
add
int3
dec
fistl
std
enter
call
push
mov
push
sahf
sub
sub
push
test
je
push
insl
xor
scas
ud0
stc
push
cmp
cmp
flds
mov
add
sbb
fwait
pop
jge
or
ljmp
inc
and
sbb
divb
cmp
stos
adc
iret
loop
fwait
add
ficompl
push
jmp
add
add
sti
sub
xor
sti
js
dec
add
cltd
in
jo
call
mov
xchg
inc
in
ljmp
mov
jg
sbb
enter
neg
mov
xor
jl
mov
cmpsl
dec
mov
test
test
push
aam
jge
adc
dec
dec
mov
jmp
mov
call
xchg
loope
outsb
mov
xchg
sub
int
xor
and
lods
cltd
inc
push
adc
jb
std
sbb
imulb
sbb
dec
ret
sbb
rclb
es
push
fistl
cli
dec
mov
xchg
dec
fisubs
mov
mov
lea
decl
xor
or
push
test
or
cld
ds
mov
in
mov
and
xor
sub
cli
aad
in
ds
loope
outsl
cli
decl
lea
shrl
jmp
sub
addr16
inc
out
mov
pushl
pop
cmp
fildll
mov
out
adc
push
cltd
cld
incl
fpatan
push
sbb
mov
mov
aam
jnp
ss
les
sar
pop
ss
lea
jb
dec
mov
add
push
mov
jg
mov
popa
and
out
and
hlt
icebp
push
xchg
outsb
sub
inc
ljmp
aad
pop
arpl
mov
mov
call
dec
cwtl
imul
adc
sub
ret
or
mov
cmp
jns
cmp
mov
and
addr16
cs
jb
push
mov
movsb
movsb
push
cwtl
fwait
scas
push
mov
dec
aad
pop
mov
jl
push
push
rcll
pushl
xchg
sub
pop
mov
rcrl
lcall
decb
mov
ds
jg
pushl
loop
into
ds
mov
cmp
or
arpl
jl
popa
in
ret
inc
dec
jle
iret
cmp
push
mov
roll
aad
dec
mov
xchg
pop
iret
push
or
cli
in
add
cmp
dec
stos
std
mov
daa
jbe
int3
lods
out
leave
jbe
movq
ds
cmp
test
inc
aam
dec
imul
xchg
mov
outsb
pop
ds
cld
pushl
ss
dec
add
push
sbb
ss
xchg
lock
push
call
xor
xlat
pop
subb
sbb
dec
dec
pushf
xchg
lds
insl
flds
mov
mov
ret
sub
cmpb
pusha
test
incl
mov
insl
xchg
xchg
pop
fisttpll
or
push
push
cmp
clc
xchg
mov
cld
call
out
js
pop
jb
fnstcw
mov
mov
and
es
jle
jle
push
incl
sub
push
adc
xchg
mov
mov
insb
jg
xchg
push
jg
inc
dec
jge
lret
adc
mov
pop
lret
fmuls
jnp
pop
cmp
xchg
cmpsl
add
fnstcw
fisubl
test
loope
leave
xchg
in
inc
jmp
mov
sbb
xor
pop
lret
ret
outsl
jl
jbe
in
bnd
rorb
xor
push
lahf
fs
js
iret
add
jno
scas
in
int3
loopne
push
repz
ret
sbb
repz
rorl
aam
pop
shl
jg
xchg
repz
mov
jmp
imul
and
xor
pop
ss
add
lds
loopne
push
incl
pop
arpl
cld
daa
das
sbbb
les
sahf
stc
in
mov
mov
xlat
cmpsl
adc
inc
nop
jns
xchg
add
in
sbb
adc
mov
mov
jecxz
sbb
into
scas
push
shrl
mov
jmp
sub
sbb
or
jecxz
es
sub
push
pop
xchg
movsb
or
jb
je
xor
and
sub
lea
mov
pop
aaa
mov
addr16
out
lods
ja
sub
mov
xor
sub
in
push
lds
lcall
je
lcall
int
icebp
push
push
cmp
leave
lods
push
es
out
push
aas
stos
pop
jecxz
pop
or
ret
dec
out
mov
inc
xchg
xchg
stc
test
sub
pushl
cmpsb
fs
pushl
push
out
mov
iret
inc
pop
push
dec
inc
sub
inc
cltd
adcb
sbb
ljmp
arpl
and
inc
mov
push
scas
fsubrl
mov
dec
dec
hlt
aaa
or
push
cld
roll
in
jle
mov
and
pop
aam
push
pop
push
inc
cs
call
arpl
xchg
or
pop
call
adc
lea
jb
popa
mov
push
mov
flds
loope
push
fmuls
ljmp
mov
jle
xor
mov
jnp
push
mov
xchg
ljmp
xor
daa
mov
jae
pushl
mull
dec
dec
bound
mov
fsub
call
adcl
push
mov
lock
ss
add
js
inc
insl
loope
push
jmp
push
lret
clc
sbb
incl
xchg
shlb
fadds
scas
mov
inc
shr
pop
mov
jmp
pushl
jns
sub
push
lret
add
gs
add
in
mov
jo
inc
jl
call
or
jg
jge
mov
xchg
test
sub
and
gs
cmp
loop
call
mov
cmpsb
or
dec
and
aas
xchg
sub
pop
fsubrl
mov
pushl
dec
icebp
add
mov
fmull
mov
pop
xchg
inc
insb
lcall
cmp
insl
incl
das
mov
xor
inc
insb
movsb
push
sbb
fwait
xchg
stos
mov
ljmp
mov
pop
mov
cli
icebp
adc
out
xor
xor
mov
cmp
decl
ds
sub
movsb
push
xlat
pop
sub
pop
xor
dec
js
mov
sub
fcoml
push
idivb
andb
adc
push
out
notl
fdivs
incl
int3
sub
insl
das
adc
cmp
sbb
ret
stc
pop
push
add
aas
out
mov
rcll
pushl
push
les
mov
pop
push
mov
push
cmpsl
ret
rcl
pusha
mov
jmp
sub
mov
adc
or
inc
cmp
jae
lret
mov
sbb
es
hlt
daa
inc
or
fstpt
cmpl
dec
incl
cli
ret
outsb
sub
loope
cmp
fnstcw
or
test
iret
lret
sub
out
stos
lcall
movsl
call
sub
sub
xlat
enter
pmullw
xor
out
cli
decb
xchg
ja
add
push
stos
sub
inc
out
out
sub
das
imul
incl
adc
movsl
and
loope
add
add
dec
sub
mov
leave
gs
cmp
sub
out
push
jne
mov
sbb
call
xor
das
repnz
jmp
mov
jle
cmp
aaa
std
xchg
adc
jl
test
loope
xchg
in
aas
sub
sbb
jg
cmp
test
mov
xchg
jge
shlb
stc
mov
mov
jmp
cli
orb
mov
aas
cs
outsl
iret
bound
dec
sbb
sub
mov
insb
ss
inc
jp
push
sub
mov
loope
ss
lods
mov
stos
mov
nop
popa
pop
inc
mov
add
pushl
jb
popa
jecxz
jo
push
adc
mov
shll
andl
pop
incl
lds
pop
cmp
aas
mov
xchg
mov
inc
or
fcoms
stc
lds
stc
inc
cld
mov
rolb
sbb
fimuls
xor
iret
divb
jbe
push
cmp
lcall
or
cmp
jbe
dec
ret
inc
inc
or
sub
sahf
idiv
inc
lret
mov
iret
inc
mov
ja
inc
push
imul
pushf
imul
rolb
mov
sbb
mov
add
insb
loop
sbb
jg
orb
cmpsl
or
leave
loop
subb
push
add
adc
jne
add
cmp
xor
jl
inc
add
or
negb
outsb
in
nop
fs
lcall
jbe
scas
into
jge
pop
mov
push
dec
sub
push
push
repz
in
enter
jmp
inc
sub
or
lret
pop
cli
cs
movsb
int3
int
push
mov
clc
ret
lea
inc
outsl
and
nop
mov
push
cmpsb
cmpb
mov
xchg
das
xor
xlat
or
je
jmp
cmp
xor
and
rol
mov
or
push
dec
pop
cld
pop
popa
jle
push
incl
imul
lds
sahf
cs
xor
mov
roll
dec
outsl
or
ficomps
cmp
stos
or
cmpsl
in
adc
push
add
ds
rcl
aam
push
mov
test
int3
xchg
xchg
push
and
jb
or
push
mov
dec
insb
cli
out
jle
push
push
mov
mov
sbb
mov
ss
subl
cmp
lcall
enter
mov
les
sub
and
les
out
lods
pop
insb
mov
aam
fdivrs
mov
sub
mov
dec
in
adc
inc
int3
ficoml
or
negb
cmp
call
jnp
scas
mov
jmp
shl
dec
pop
pop
jp
mov
pusha
push
stos
arpl
mov
mov
mov
or
pop
out
cli
pop
loopne
or
mov
fstps
pop
or
cmpsb
xchg
xchg
les
addr16
sub
cmc
mov
push
clc
xchg
dec
pop
sbb
jb
mov
das
push
idiv
ljmpw
inc
jb
cmp
jecxz,pn
sbb
mov
add
stos
xor
mov
stos
pushl
dec
or
push
add
cmc
mov
sub
mov
dec
lods
or
loopne
xor
fistl
pop
sub
in
dec
pop
xor
pop
sbb
fcomp
or
cli
ljmp
dec
push
lcall
inc
arpl
mov
xchg
fisttpl
ja
inc
pop
vpaddq
call
sbb
jo
jmp
or
push
jo
test
mov
mov
jg
out
decl
loopne
ljmp
push
test
fucomip
push
mov
or
arpl
mov
enter
cli
insl
mov
xor
fs
into
aad
push
out
lahf
aaa
xchg
ljmp
loope
aas
sbb
mov
sbb
inc
cld
loop
push
push
inc
mov
xlat
clc
rorb
mov
xor
hlt
data16
enter
xor
jp
pop
pushf
iret
sbb
in
arpl
jae
mov
rcrb
push
es
jmp
sub
and
scas
pop
lret
pop
fs
pop
sub
and
das
mov
jge
dec
sbb
dec
sub
dec
arpl
stos
fmul
cmc
cmp
repnz
push
js
pop
lahf
adc
dec
jmp
lcall
cmp
dec
push
js
incl
pop
sbb
and
outsl
ret
pop
mov
icebp
lcall
jmp
pop
pop
imul
stc
add
dec
negl
pushf
jbe
daa
cmp
mov
pop
mov
loop
sbb
dec
jae
and
cmp
pop
fldcw
lret
jne
pop
movsl
jg
push
movsb
push
jno
int
es
pushf
cmp
enter
xor
das
decl
push
insb
in
nop
addr16
iret
outsl
lret
test
jmp
data16
cmc
imul
sbb
jg
sub
lret
and
sahf
mov
xor
enter
hlt
sar
ljmp
cmp
adc
jno
adc
aad
xchg
sub
cwtl
dec
pusha
push
int
mov
jecxz
fnsave
out
inc
int
pop
out
jbe
imul
push
dec
add
cld
jae
mov
incl
jne
fnstsw
gs
lods
mov
rorb
aas
add
nop
add
mov
cmp
xchg
mov
scas
push
mov
lcall
jmp
jle
jne
pop
sub
lods
mov
sti
xor
out
xor
orl
jp
mov
es
mov
adc
mov
into
ret
fldcw
xchg
or
ljmp
in
inc
sub
add
mov
stos
xchg
adc
jno
shlb
push
sub
negb
jmp
inc
pop
enter
loop
inc
mov
ret
mov
push
popa
pop
dec
and
mov
pop
incl
cwtl
adcl
aam
cmp
xor
sbb
or
call
xchg
and
jns
in
dec
loop
cmpsl
lcall
stc
les
xor
fiaddl
cmp
mov
shlb
test
inc
mov
push
nop
ret
popa
pop
push
out
clc
mov
insb
mov
lds
loopne
cmp
cmp
loopne
adc
inc
jecxz
decl
sbb
aas
mov
aam
or
call
xchg
call
aas
xchg
lret
std
cli
pushl
int3
sahf
imul
sub
xor
inc
jecxz
ficomps
dec
popf
ss
ljmp
pushf
and
jl
mov
out
mov
hlt
jmp
cmp
adc
dec
mov
rolb
mov
test
inc
sbb
sub
xchg
rcr
sub
adc
ljmp
cmpsl
pop
push
lods
push
push
sub
push
sub
xchg
lods
jl
pop
mov
xchg
call
xchg
push
aad
inc
es
push
pusha
xlat
xchg
sub
and
mov
clc
out
enter
loop
lcall
sbb
insl
lods
sub
and
dec
imul
arpl
mov
arpl
lret
sar
ja
add
int
mov
insb
sub
popa
ret
int
add
push
jg
xchg
bound
popa
push
loopne
dec
out
fldcw
or
in
cmp
scas
insb
push
add
shrl
inc
push
int3
in
or
sub
pop
mov
xchg
icebp
pop
dec
call
ljmp
cmp
xchg
jne
mov
shrb
call
leave
and
cli
mov
sbb
mov
mov
add
fldcw
cwtl
jecxz
fidivrs
cmp
pop
leave
sub
ret
mov
jae
test
xor
push
cltd
cltd
loop
and
dec
cltd
and
jne
pop
jmp
loope
mov
loop
int3
cmc
rolb
fdivr
lock
pop
sti
mov
orb
inc
sbb
icebp
call
iret
xor
lahf
xchg
aam
arpl
pop
out
pushl
sbb
xchg
pop
in
loop
mov
call
js
pop
stos
cli
test
sub
incl
icebp
inc
or
and
out
mov
jmp
pop
fiadds
ja
out
xor
subb
decl
mov
test
subb
add
fadds
xchg
es
rclb
sub
in
push
das
push
mov
mov
ljmp
loop
mov
mov
jecxz
and
add
and
ljmp
ret
pop
gs
and
scas
push
mov
pop
push
xor
addr16
les
ljmp
push
in
sub
inc
xchg
xchg
mov
jl
fcomp
jecxz
push
int
into
inc
add
cmp
out
mov
je
cmp
data16
pushl
mov
xchg
adc
negb
or
or
ss
fneni(8087
out
sbbl
mov
jnp
fcomip
cmc
add
push
pop
xchg
outsl
mov
ficomps
push
jmp
dec
ffreep
js
xchg
dec
sbb
sarb
test
int
stc
pop
stc
orb
jg
jp
add
dec
mov
shll
push
jns
fistpl
inc
xor
lcall
ret
sbb
outsl
sub
xchg
cwtl
lret
in
jp
jg
sub
cmp
jp
lods
add
mov
pop
stos
in
or
mov
push
dec
lahf
imul
ljmp
jb
sti
cltd
push
mov
dec
jbe
jg
and
mov
ja
stos
fdivrs
mov
lcall
mov
sub
lds
cmp
repz
add
movsl
inc
fimuls
call
or
call
sahf
test
in
fistps
mov
push
add
or
push
mov
xlat
dec
repz
push
pop
mov
or
sar
cmc
pop
loop
jno
movsl
mov
decl
insl
in
xor
pop
popl
add
and
adc
cmc
push
rcll
test
mov
mov
decl
fs
dec
shl
aaa
loope
or
push
push
and
mulb
mov
les
pushf
lods
mov
sub
adc
jle
sub
idivl
out
inc
jmp
dec
out
loop
pcmpgtb
ret
dec
sub
pop
adc
jg
mov
jnp
push
mov
add
push
mov
test
or
pop
xor
xchg
mov
outsl
in
mov
xchg
js
popa
addb
loop
loop
xchg
nop
fucomip
pop
inc
inc
cli
xor
call
mov
jl
loop
int3
test
fwait
ja
lock
xor
pop
hlt
jbe
mov
call
test
cmp
adc
mov
mov
gs
mov
pushl
es
cmp
movsb
cmp
push
and
stos
mov
push
xor
in
pop
or
out
push
sub
mov
lret
push
xchg
pop
sbb
xor
popa
xlat
sub
outsb
jb
pop
std
out
clc
and
jl
pop
shlb
nop
mov
outsb
xor
ljmp
dec
pop
addr16
scas
dec
mov
jno
mov
repnz
mov
and
push
push
incl
pop
inc
xchg
add
shll
pop
ret
and
lea
mov
decl
adc
push
rorb
inc
add
xchg
sub
or
lcall
add
cwtl
test
mov
sub
inc
in
xchg
dec
shll
addr16
call
jmp
push
mov
mov
add
jo
push
xorl
lcall
fwait
lcall
or
inc
in
xlat
mov
cmp
popf
jns
insb
jnp
out
clc
jge
mov
fwait
movsb
lahf
add
hlt
and
add
ljmp
inc
loope
xchg
out
or
add
js
loope
sbb
sbb
pushl
jo
sti
lods
fisubs
and
pop
add
clc
out
es
es
addb
pop
xor
mov
adc
pop
popf
cli
decl
add
mov
jo
inc
mov
sbb
xor
popa
mov
dec
mov
adc
dec
outsb
hlt
pop
pusha
out
dec
rclb
push
cltd
popa
pop
dec
out
push
add
push
outsb
fstl
inc
das
mov
fdivr
pushl
jo
or
add
push
aaa
leave
inc
cvttps2pi
or
mov
push
inc
test
pushl
in
add
cmpsb
xor
test
hlt
movsl
mov
push
and
lds
dec
cmp
insb
jo
adc
daa
test
sbb
sub
jmp
outsb
adc
mov
mov
pop
pop
jle
aaa
mov
xorb
jo
inc
fisubrl
jle
jbe
xchg
and
inc
cwtl
in
push
popl
ret
push
push
push
lcall
jmp
jae
in
divl
das
cli
push
pushl
stos
movsl
and
or
mov
xchg
incl
mov
orl
and
loop
subb
adc
lret
add
lcall
sbb
aaa
push
nop
mov
xrelease
xchg
jns
hlt
cmpsl
inc
test
je
sbb
cs
in
sahf
mov
fildll
loop
fs
icebp
xor
sti
inc
enter
and
subb
jns
jne
pop
in
xchg
in
adc
loope
out
jae
or
repnz
mov
xor
lcall
mov
fmull
int3
cwtl
pop
pop
out
sahf
xor
ljmp
or
nop
rclb
push
sub
dec
xchg
jg
fwait
mov
and
xchg
and
decl
cmp
in
hlt
sub
bound
mov
xor
call
push
dec
cmc
out
out
and
ljmp
push
into
nop
xchg
push
stos
push
fisttps
cmpsl
cmp
jns
dec
mov
jmp
ljmp
sarb
mov
js
icebp
in
enter
adc
lcall
imul
or
mov
pop
mov
mov
sbb
sub
mov
jg
test
and
lods
mov
adc
push
mov
loope
fiadds
xchg
popf
dec
mov
decl
xor
out
xchg
cmove
int
pop
ret
daa
push
mov
push
es
push
add
ljmp
stos
das
add
jb
mov
fstl
loopne
das
fisubs
mov
push
push
push
fwait
call
add
sbb
mov
push
inc
mov
cmp
pop
mov
mov
sub
ds
test
test
ljmp
ss
lock
ljmp
cmp
movsb
shll
leave
enter
sbb
dec
add
call
repnz
pop
sbb
popa
mov
and
loopne
aaa
out
or
ljmp
out
push
ficoml
and
mov
jno
je
loop
push
ljmp
pop
lcall
mov
in
xor
in
adc
pop
inc
cmc
arpl
mov
loop
mov
sub
lahf
shlb
add
mov
cmp
push
inc
pushf
dec
lds
pop
cld
cmp
jge
rep
add
sbb
mov
out
orb
inc
xor
incl
dec
cmp
adc
adc
out
mov
or
mov
add
jmp
mov
leave
fcos
out
jo
xor
shr
lea
imul
cmp
gs
stos
call
rcrb
ret
sbb
repnz
push
inc
fstp
rclb
push
and
jge
or
mov
into
jmp
xchg
ss
shll
mov
mov
jbe
mov
jl
incl
out
setg
test
iret
outsb
dec
cmp
adc
ds
jo
mov
pop
xorb
cmp
pop
mov
mov
xchg
sbb
push
fisttpll
subl
jo
jnp
fnstsw
push
sbb
add
dec
xor
ret
and
aam
clc
jns
call
bound
ret
inc
subb
in
dec
fadd
sbb
lods
test
int
pushl
arpl
jno
fcmovbe
mov
xchg
jns
sbbl
std
mov
cmp
scas
sub
movsb
sbb
sbb
jmp
mov
lcall
xor
lahf
dec
sarl
inc
xor
idivl
test
adc
pop
loop
add
clc
or
push
pop
enter
push
cmp
mov
fisttpl
push
mul
or
add
cli
mov
adc
pop
ljmp
push
nop
orb
mov
mov
nop
pop
mov
cli
mov
int3
add
jge
add
xchg
shlb
incl
mov
pop
scas
outsl
mov
clc
mov
test
jno
ds
fprem1
call
dec
je
lret
cld
inc
sub
fs
xlat
lds
movsb
push
pop
sti
std
mov
in
int3
jo
jmp
hlt
cli
xchg
fisttps
or
cwtl
daa
pushl
mov
sbb
into
xor
push
or
daa
jecxz
sbb
or
pop
inc
aas
lcall
movsb
daa
jp
mov
in
sti
xor
lcall
add
bound
mov
fstpt
shll
out
fdivrl
cli
cmpsb
and
sub
vunpcklps
push
push
filds
xor
xor
cwtl
cmp
jmp
mov
xor
loop
mov
ljmp
testb
jb
sub
pushl
lea
mov
hlt
cltd
xor
or
xor
sbb
jae
call
xor
ret
enter
mov
add
sub
in
fimull
pop
bound
cmp
mov
xchg
and
pop
shlb
ficomps
push
outsl
fildll
jg
and
sahf
loope
jg
js
sub
int3
mov
lea
arpl
hlt
fimull
enter
mov
mov
xchg
inc
pop
push
aam
dec
adc
out
ret
pop
sahf
cmp
sahf
mov
and
and
lret
leave
ja
inc
push
mull
loop
jo
pop
jmp
mov
or
adc
insl
mov
enter
fdivrl
into
pop
xor
lahf
cs
push
incl
xor
je
out
rclb
mov
psrlq
dec
jp
das
sahf
cli
out
mov
push
decl
add
mov
clc
or
xchg
or
aad
push
cmc
ret
add
pop
cs
ds
out
pushl
data16
test
ljmp
sbb
or
mov
jp
out
dec
cmp
jae
xor
cmp
cmp
push
or
test
push
mov
ljmp
call
les
fldcw
xor
fcmovbe
jnp
fwait
lods
jecxz
jge
inc
sbb
addr16
pushl
push
lcall
or
pop
lods
lret
lds
push
push
bnd
in
ljmp
mov
sbb
dec
lods
sti
mov
jmp
mov
cmp
test
xchg
sub
jns
imul
aam
or
scas
loop
mov
jns
in
and
lret
jp
cmp
adc
cli
xor
inc
imul
fwait
addl
dec
pusha
ds
add
push
movsl
mov
mov
andl
andl
incl
sub
loopne
aam
sub
scas
fdivr
jmp
sub
pop
sub
mov
jae
jae
inc
mov
or
inc
mov
incl
push
mov
mov
push
js
clc
xchg
adc
testl
insb
mov
fimull
data16
popf
xlat
mov
and
cwtl
iret
jge
lret
ljmp
mov
push
push
out
or
cmp
sbb
rolb
add
pusha
std
scas
ret
mov
mov
fldl
cwtl
jmp
in
ret
adc
ljmp
jmp
xor
inc
out
pop
out
lods
pop
icebp
lret
rcl
push
mov
call
lcall
xor
cs
mov
hlt
pop
sub
rolb
imul
cmpsb
push
xchg
pushl
shlb
inc
mov
test
mov
xchg
mov
sbbl
ljmp
outsl
daa
faddp
push
pop
or
loope
sbb
stc
xor
cli
and
mov
jge
or
icebp
icebp
out
mov
ss
test
shl
inc
rcl
add
mov
imul
lods
fsubs
ja
jb
cmp
mov
lods
mov
or
push
icebp
add
inc
std
inc
in
push
dec
mov
ljmp
nop
mov
jge
xlat
ficompl
lret
into
imul
cmpb
lcall
je
sti
in
mov
push
jmp
test
negl
mov
mov
jnp
inc
loopne
sub
pop
push
loop
cmp
je
mov
mov
sub
call
lods
scas
pop
and
scas
je
mov
jle
mov
and
pop
push
pop
push
js
jg
jmp
in
jne
push
inc
xchg
dec
xchg
jge
dec
cmp
fldt
sbb
pop
sub
pushl
aad
mov
xchg
in
loop
ss
xchg
outsl
xor
in
imul
jg
pushf
popf
aas
mov
out
dec
jo
sbb
aas
xchg
out
cmp
inc
adc
lahf
xor
call
dec
leave
jp
into
test
cmp
sarb
dec
lock
cmp
xor
imul
scas
jmp
push
lcall
stos
int3
lock
add
cli
xchg
or
fistpll
adc
push
fists
mov
mov
jne
outsl
sbb
ljmp
sub
push
fiaddl
int3
or
dec
ljmp
dec
insl
cmpsb
sarl
adc
add
popf
in
int
jge
std
pop
fsubs
call
cmpsl
loop
jle
icebp
mov
mov
xlat
pop
sub
jmp
push
push
dec
push
mov
shll
jg
in
jae,pt
add
pop
idivl
out
xchg
dec
testl
adc
dec
jae
push
movsl
pop
cli
jmp
aas
sbb
push
jno
mov
xchg
pop
in
add
les
rorb
ljmp
cwtl
lock
jno
dec
add
call
clc
movsb
jp
pop
xor
dec
in
jne
ljmp
dec
dec
or
or
in
pusha
in
mov
jge
sbb
fwait
sahf
mov
in
jo
inc
mov
mov
mov
imul
fisubrl
push
push
stos
decl
or
mov
lods
sbb
inc
ret
outsb
insb
mov
lcall
in
xor
mov
xlat
push
ds
jmp
lcall
arpl
sbb
jle
jg
pushl
lret
mov
push
fsub
and
jecxz
push
test
jg
or
lretw
call
mov
notb
orl
ja
xchg
test
jb
ss
xor
incl
test
and
daa
inc
shlb
jb
mov
imul
incl
pop
pop
xor
sbb
mov
dec
sub
sbb
cld
mov
xchg
in
loopne,pn
ja
out
mov
push
lahf
insb
ja
pop
or
int
gs
pop
xchg
aas
and
ljmp
mov
inc
lcall
int3
adc
pop
mov
pushf
jl
pushl
pop
mov
enter
sub
movsb
add
mov
and
decl
int
subb
mov
into
adc
mov
mov
fisubs
sti
xor
pushl
mov
pop
clc
out
ret
cmpsl
lods
add
adc
ss
xchg
adc
adc
dec
mov
or
call
mov
jae
sbb
loope
mov
hlt
lret
jmp
push
in
clc
jg
push
iret
in
or
ljmp
decl
jg
xor
xor
lock
ss
mov
je
fldt
mov
cmp
lea
in
addb
jo
xlat
aaa
inc
lods
repz
mov
jl
fldenv
mov
test
cmp
adc
add
jo
pop
cli
rcl
je
jno
pop
add
movsb
fcomip
in
orb
pop
bound
test
dec
mov
out
pop
ret
xchg
xchg
rorl
cmp
aad
dec
test
repnz
jae
xchg
jg
and
popf
out
cmpsb
movb
decl
fcomps
push
imul
jmp
ljmp
scas
cld
sub
arpl
imul
jge
or
mov
loope
std
xchg
or
or
fidivrs
lahf
call
popf
push
hlt
loope
dec
insl
mov
shl
ljmp
xchg
into
and
mov
fs
stc
mov
mov
push
xchg
mov
pushl
mov
sbb
dec
pop
aas
xor
sti
pushf
pusha
imul
xor
cld
adc
lcall
movsb
jae
add
int
lock
mov
stos
les
push
inc
iret
lock
cli
decl
imul
jmp
push
iret
popf
jmp
lcall
cltd
out
dec
rclb
stos
cs
jmp
xchg
add
das
repnz
mov
and
sub
fistps
adc
jmp
je
es
int3
push
pusha
sbb
shlb
mov
lcall
push
pushf
mov
mov
mulb
shrb
pushf
fisubs
cld
out
cmpsl
sub
sbb
adc
repz
test
mov
push
decl
mov
rclb
mov
movsb
dec
fisubrs
fistl
jmp
push
xchg
in
jb
idiv
incl
jne
stos
xlat
pop
and
roll
mov
lock
scas
xchg
mov
inc
fidivrl
imull
call
pop
sahf
ds
outsb
push
xchg
xchg
ljmp
or
and
jle
jge
cmc
fsubs
test
cmp
mov
mov
jo
std
mov
inc
mov
sbb
ljmp
adc
mov
jmp
dec
cli
or
xor
iret
int3
inc
das
dec
jp
ficomps
gs
sbb
pushl
test
mov
sbb
lret
cltd
nop
mov
add
jl
fwait
call
cli
add
lret
test
dec
arpl
repz
xchg
sub
mov
ljmp
push
dec
jle
pushf
and
cmp
inc
scas
xor
cs
push
icebp
cs
sub
iret
sub
idivb
clc
fsubs
call
incl
and
sahf
iret
push
jg
inc
push
sti
xchg
mov
sarb
and
mov
call
mov
ja
jbe
in
push
negl
xor
std
sub
jno
dec
jl
call
xchg
out
jecxz
or
jmp
mov
scas
jmp
sarb
cmpsl
nop
popf
call
mov
adc
mov
mov
sbb
mov
incl
cli
inc
xor
mov
adc
popl
jge
add
in
fs
inc
stos
fcomip
dec
mov
lahf
jno
mov
daa
out
jecxz
in
fbstp
mulb
xchg
cmpsl
xor
incl
in
fstpt
mov
mov
xchg
mov
jle
xor
mov
in
xchg
loop
out
clc
dec
mov
jle
xchg
in
adc
pop
aaa
gs
insb
cld
jns
lea
add
adc
lods
lret
pop
lcall
fcomip
test
stos
push
mov
stc
ss
inc
shll
mov
jg
popa
jmp
iret
out
sub
in
inc
or
movsl
xlat
jnp
sub
les
push
scas
mov
cmp
test
pop
insl
jmp
or
inc
into
cmp
push
dec
outsl
repz
lahf
mov
cld
mov
into
notl
push
out
mov
stos
sbb
ds
or
and
adc
xchg
dec
jnp
notb
jb
cmp
out
add
xchg
jmp
pop
js
int3
into
push
gs
xchg
stos
cmpb
fsts
adc
pop
mov
decl
cmpb
fwait
jg
ds
dec
pop
pop
jbe
shlb
call
imul
psubd
mov
loop
ret
ret
int
outsb
mov
in
decl
sbb
flds
test
mov
jg
jno
push
lahf
out
jbe
shl
je
sbb
mov
sbb
aam
add
mov
push
rclb
dec
stc
add
jo
dec
jae
mov
mov
push
mov
call
jg
adc
dec
outsb
push
testb
ss
imul
jecxz
repz
jg
xor
popf
sub
sub
lret
mov
daa
mov
gs
and
in
jnp
sub
lret
mov
cwtl
push
int3
cmp
mov
lcall
push
push
fidivrs
fcmovnbe
adc
mov
inc
push
dec
adc
mov
mov
arpl
inc
hlt
decl
ljmp
ja
loopne
jbe
jne
repnz
icebp
icebp
cltd
pop
ror
cmp
flds
mov
xchg
sub
aaa
mov
mov
jp
loopne
lcall
movsb
push
mov
cwtl
mov
xchg
sarl
fwait
scas
cmpsb
xchg
lahf
jge
fmull
xchg
pop
jg
jle
stc
xchg
mov
stc
je
loope
push
push
jns
pop
fidivrl
jmp
std
jmp
sahf
jno
mov
daa
enter
fcmovu
add
aam
decl
loopne
pushf
pop
add
lret
in
dec
jb
pushf
adc
cmp
add
clc
pushl
std
adc
fadds
es
adc
insl
sarb
mov
stos
push
std
stos
or
scas
jmp
jg
daa
adc
repnz
mov
lcall
jmp
addl
xor
pushf
sub
mov
push
sub
call
sub
inc
lahf
xor
mov
gs
jns
sbb
mov
push
add
popf
sbb
mov
mov
nop
in
iret
xchg
dec
mov
jmp
mov
in
mov
cli
addl
cwtl
mov
jmp
cltd
lahf
addr16
cld
mov
mov
xlat
loope
xor
lcall
dec
sub
mov
push
or
push
dec
scas
inc
add
sub
pushl
xchg
ljmp
pop
and
or
add
or
mov
mov
mov
lret
mov
fsubrs
stc
sbb
icebp
push
add
jg
ja
cmpsl
imull
cwtl
in
adc
push
loope
push
sub
mov
test
mov
pop
push
push
xor
jmp
dec
mov
dec
xchg
loop
pushf
pop
andb
add
sub
jmp
or
sub
xlat
pop
out
jmp
xchg
hlt
test
sbb
jae
lcall
pop
out
or
cmp
stos
fsubl
ret
pop
ss
sub
clc
xchg
lcall
push
inc
dec
cmp
or
adc
xchg
mov
xor
dec
jl
pushl
imul
mov
stos
jp
inc
and
fs
call
leave
into
fidivl
pusha
in
js
rcl
fnstenv
repnz
add
pop
rcll
ljmp
aaa
cld
clc
in
addr16
iret
pusha
call
cli
push
xchg
mov
dec
cmc
fidivrl
cmp
jl
out
addr16
sti
jnp
mov
push
cmp
jbe
push
mov
stc
imul
mov
int
insb
mov
js
imul
repnz
std
mov
loop
adc
and
inc
inc
dec
push
jbe
sbbl
mov
sar
incl
mov
push
fisubl
ret
and
daa
push
add
mov
pop
sub
inc
mov
aam
mov
out
inc
outsb
test
sahf
pusha
mov
mov
adc
sub
mov
sub
jae
or
hlt
cmpsb
in
and
dec
stos
mov
lahf
or
push
fsub
cmp
cmp
cs
or
mov
sti
pop
fs
sub
mov
in
insl
fwait
pop
xchg
jo
mov
mov
pop
outsb
pop
scas
or
lcall
mov
subb
mov
pop
into
or
lock
movsl
jle
ret
out
lahf
dec
aam
sahf
cmp
mov
stos
pop
out
dec
mov
decl
or
aam
mov
sbb
mov
shrl
push
ds
incl
inc
lock
push
lods
add
loopne
pusha
inc
lods
mov
adc
data16
movsl
push
rcll
iret
xlat
dec
subl
aas
les
frstor
add
lcall
movsl
and
lcall
lret
xlat
sub
cltd
inc
fdivs
jne
gs
sbb
jae
fisubrl
incl
push
sub
add
push
enter
repnz
fnstsw
pop
das
hlt
jne
test
pushl
rol
call
sbb
lods
mov
cmpxchg
out
out
xor
sti
xorb
mov
cmp
push
loopne
xchg
pop
jnp
imul
data16
mov
fistpl
imull
ret
dec
mov
pop
lock
and
ds
xchg
fnstcw
out
test
test
cltd
jns
push
imul
xchg
ret
pop
scas
lods
hlt
fmulp
loope
xor
adc
push
lcall
xchg
sbb
ret
xchg
jne
xchg
mov
push
push
in
ljmp
push
sbb
ds
icebp
data16
pop
arpl
ljmp
fcomi
jno
cld
out
test
in
in
and
sbb
call
pop
cmp
fisubrl
stc
mul
sbb
lods
cmp
adc
into
insl
nop
sub
cmp
fdivr
call
ret
in
cmp
addr16
adc
adc
mov
xchg
push
jbe
add
mov
decl
stc
out
jg
ljmp
mov
cwtl
adc
pop
jp
xchg
cwtl
sbb
lcall
xchg
test
lcall
push
mov
or
dec
fidivrs
xchg
shr
sub
mov
imul
inc
cmp
popf
pusha
or
pop
or
arpl
pushl
mov
sub
push
and
dec
int
rclb
aad
inc
adc
imul
jno
sub
inc
add
push
outsb
sbb
pop
mov
xor
push
add
fcompl
loopne
fistl
cmpl
fbstp
cmpsb
and
pop
push
ret
push
jae
inc
jp
fildl
lods
incl
cmp
sub
aad
push
pop
repz
int
shll
cmc
lock
stos
add
decl
lods
push
aaa
ss
cmp
aaa
lret
push
mov
xor
and
imul
push
cmp
mov
out
fwait
stc
mov
aas
outsl
sub
imul
push
rcrb
xchg
jae
sahf
out
inc
ss
adc
jae
ss
jno
bnd
push
ret
inc
push
push
mov
aaa
inc
test
call
dec
jae
jns
rcll
mov
ret
push
stc
pop
dec
pop
aaa
jl
xor
int
dec
std
test
call
sbbb
orl
pop
fcomi
jbe
mov
incl
loopne
stos
jecxz
pop
inc
ljmp
adc
mov
xchg
jecxz
repz
inc
inc
pushf
and
arpl
xor
int
sti
lock
cwtl
mov
cmp
xchg
mov
fisubl
and
sar
push
push
jns
popf
push
xchg
insb
xchg
int3
adc
push
jmp
xchg
call
clc
sbb
xor
jne
icebp
dec
cmpsl
mov
pop
sub
sbb
jg
mov
cli
pop
lret
mov
dec
mov
jp
shlb
xor
mov
call
ficoml
mov
and
mov
stos
imul
mov
arpl
nop
xchg
push
rolb
xlat
ret
sub
ds
inc
add
arpl
push
pop
xchg
les
lea
loop
jnp
stos
mov
sbb
pop
cltd
dec
sub
in
and
mov
shrl
add
scas
cmp
cmp
subb
leave
mov
ficoml
fbstp
call
lods
push
xchg
repz
mov
loop
jl
xor
jmp
decl
pop
lods
xchg
fbld
lret
push
out
lds
fdiv
jno
ljmp
mov
jae
imul
aam
push
push
int
cmc
add
out
dec
mov
cmc
repnz
mov
repz
add
out
test
stc
sbb
inc
dec
sub
aad
stos
cmc
cld
call
call
mov
int3
out
call
into
cltd
cs
ja
pop
cmpsb
push
and
jp
jno
xor
mov
inc
inc
or
in
cmpsb
ljmp
test
clc
outsb
mov
or
push
test
fcompl
fwait
lea
add
push
dec
mov
stos
dec
fs
mov
push
jg
push
push
mov
sbb
les
and
movsb
push
ljmp
push
dec
sub
jb
jb
sub
pop
in
iret
pusha
imul
in
mov
adc
pop
ss
clc
fcomip
sub
imul
stos
sbb
push
inc
cld
pop
cld
mov
sbb
jmp
in
repz
mov
test
aad
inc
incl
add
xlat
mov
out
push
cmp
adc
mov
inc
sub
sub
leave
pop
jo
mov
cmp
dec
fs
lahf
hlt
out
mov
jg
inc
pop
xchg
in
adc
mov
xchg
adc
decl
mov
cmp
aas
enter
jp
pop
dec
dec
jmp
clc
xorb
ffreep
inc
scas
test
jmp
scas
jp
jle
aam
test
divb
xchg
mov
stos
sbb
adc
jg
xchg
jecxz
fwait
je
fldenv
sbb
cwtl
dec
xchg
add
call
in
sbb
insl
stc
dec
js
les
cltd
ja
scas
jl
push
icebp
pop
mov
icebp
lret
xchg
jmp
jge
cmp
sbb
inc
lds
inc
pop
lcall
and
cli
in
pop
lock
jnp
jl
pop
adc
negb
gs
incl
push
jge
push
insl
scas
add
std
loopne
sub
xorl
jg
int
xchg
loop
and
outsl
jg
cmp
pushl
divl
aaa
mov
mov
hlt
sbb
inc
jl
addl
pop
xchg
pop
mov
adc
jmp
add
xchg
xchg
pop
das
xor
mul
sub
cmp
std
repz
pusha
roll
ret
fwait
incl
jb
fwait
or
sti
shr
ret
cmp
enter
ljmp
lahf
mov
and
mov
int
rep
mov
lcall
imulb
pop
lea
jns
and
ja
incl
cld
stc
insb
sub
mov
jb
scas
xor
jp
add
pop
mov
out
incl
pop
lock
pop
in
fnstenv
sub
daa
or
bound
scas
mov
mov
jne
cmc
dec
notl
xchg
xor
nop
lea
inc
ljmp
shlb
leave
into
add
xchg
lock
xchg
xchg
int
xor
sar
mov
dec
or
icebp
call
rorl
inc
inc
rcrl
sub
sbb
dec
lret
sahf
mov
stc
cmc
fstpl
fcomip
pop
stc
stc
fadds
mov
icebp
jae
xlat
mov
in
idivl
cmpsl
je
stos
loop
lcall
add
loop
cmp
call
clc
fcmovne
popa
out
sub
mov
call
insb
jne
decl
das
or
and
jmp
shll
lahf
mov
out
out
push
or
sub
sbb
fucom
mov
aad
mov
ss
mov
xchg
push
or
mov
jle
andb
jne
sub
jne
fldenv
iret
popa
loope
add
int3
fdivrs
das
std
add
jmp
sbb
in
pusha
scas
sub
cltd
subl
cmp
xorl
or
dec
mov
out
push
popa
lahf
stos
add
call
call
cli
insb
out
mov
push
add
daa
cmp
clc
push
dec
mov
mov
ljmp
cmp
jge
push
xlat
xchg
mov
jns
jl
in
and
xor
call
pop
cmp
push
pop
iret
xor
into
fmulp
jae
jne
dec
jne
adc
fiadds
add
cld
xchg
aam
mov
scas
insl
pop
pop
push
mov
or
stos
decb
adc
cld
jno
cld
ds
adc
cmpsb
mov
enter
sbb
in
arpl
adc
cmp
pop
mov
add
cmp
push
cmpl
insl
inc
fisttpll
leave
je
lret
fdivr
incl
xchg
test
jae
rolb
inc
test
add
divb
insb
stc
pop
arpl
dec
ljmp
loope
fnstenv
insl
int
icebp
jl
popa
imul
div
imul
fsubl
dec
adc
push
sbb
adcb
dec
ret
pushf
test
and
cmpsl
jb
das
fnstenv
cld
jmp
enter
fsubr
fdivl
mov
je
gs
incl
subl
pop
xchg
lock
ds
jge
sub
call
fadds
sbb
jne
icebp
lea
cmp
sbb
xor
jmp
sub
xchg
inc
rcll
insl
jae
loopne
add
std
jmp
dec
xor
lea
lds
adc
icebp
xchg
movsl
or
jmp
jle
jnp
jne
ljmp
mov
decl
orb
lcall
ret
int
inc
rcrb
dec
cmp
js
repnz
aad
add
lcall
sub
dec
cmp
out
shrb
dec
mov
call
orb
pop
mov
adc
sbb
or
sbb
popf
sbb
fcomip
lods
and
test
loop
adc
inc
sti
shlb
leave
push
mov
scas
repz
mov
pop
cmc
cld
cmpsl
push
inc
fmul
nop
shll
out
sbb
stc
pusha
dec
mov
mov
jo
lret
mov
incl
xchg
push
push
mov
sti
xlat
fisubrl
sub
pop
in
clc
push
mov
fcoml
sub
in
jge
pop
bound
leave
pop
mov
movsb
push
xchg
call
cmp
mov
adc
popl
and
cmpsl
mov
xor
shrl
jmp
adc
xor
or
insb
sbb
jmp
cltd
mov
in
add
call
xchg
dec
aam
aad
lret
nop
rolb
daa
aad
inc
sub
cmp
loopne
add
repnz
pushf
cld
andl
mov
fcoms
pop
ljmp
dec
insb
loop
cmc
movsb
lods
es
lock
push
and
and
pushl
inc
lahf
or
mov
jmp
xor
cmc
btr
mov
xchg
xchg
pushl
aad
dec
sub
fisubrs
cmp
leave
cld
mov
sbb
ds
shlb
aas
sub
pop
cli
jl
xchg
jno
cmc
std
incl
mov
cltd
dec
push
dec
jecxz
cmpsb
jl
pop
lret
lcall
lret
es
push
jp
jecxz
scas
lcall
push
inc
xor
cld
push
call
xchg
dec
mov
jle
sbb
add
add
push
rolb
aaa
cld
incl
push
jl
sub
fcompl
addr16
dec
stos
test
and
adc
inc
test
jmp
loop
pop
out
ljmp
sahf
mov
cmp
sbb
sbb
fnstsw
or
or
repz
ljmp
and
mov
and
clc
in
sub
or
dec
sbb
call
fdecstp
mov
fwait
pop
clc
sub
push
cli
sub
sub
bound
in
sub
cld
jg
addr16
int
je
out
adc
scas
add
ds
aas
jge
mov
cmp
pusha
or
jb
mov
pmaxsw
loopne
mov
pushl
or
ds
call
and
ja
mov
imul
incl
cmpsl
repz
aad
jecxz
rcr
in
jle
push
or
or
xor
out
test
mov
decl
popa
cld
mov
xchg
lret
insb
repnz
cmp
dec
in
imul
stos
inc
push
mov
loopne
lods
sbb
xchg
addl
jle
lret
dec
std
in
jo
out
pop
mov
adc
sbb
inc
pop
imul
aaa
xor
push
std
dec
xchg
iret
in
shlb
cmp
or
add
orl
bound
pop
fidivl
ja
sarb
or
push
dec
mov
cwtl
and
mov
lcall
idivl
popa
sbb
mov
jbe
ret
mov
clc
out
stos
and
ret
xor
inc
xlat
fisubrs
pop
cmc
fstpt
mov
clc
arpl
jnp
xchg
sbb
popa
xor
js
sarb
mov
subb
and
mov
shlb
aas
sub
ss
sub
jl
push
popf
lahf
jp
or
shrb
mov
call
cmp
cmp
cmp
push
fcomip
pop
xor
xor
enter
dec
flds
jg
lock
sub
inc
sub
jp
cmpsb
aad
test
pop
mov
incl
adc
int
cwtl
xlat
jmp
xchg
pop
repnz
int3
insb
fsubp
xchg
aas
xchg
or
pushf
out
out
movsl
dec
repnz
fmulp
mov
inc
out
fildll
fimull
jg
ljmp
cmpsl
sub
xchg
mov
cmp
add
xchg
jl
imul
out
cli
ljmp
inc
into
push
jbe
and
mov
inc
inc
out
xchg
sahf
pusha
loope
mov
popf
pushl
ret
jne,pt
fs
js
lret
nop
inc
fildll
fistpll
mov
xlat
ljmp
addr16
or
lods
adc
into
inc
outsl
pop
cmp
push
adc
jg
sbb
sbb
movsb
ja
clc
shlb
aam
xor
sub
push
dec
sbb
jne
and
addl
arpl
and
lahf
loop,pn
pop
xchg
or
cmp
idiv
mov
pop
mov
pop
ljmp
xor
adc
or
out
mov
rclb
push
mov
adc
mov
and
movsb
mov
ljmp
dec
test
pop
and
and
ja
or
and
pop
das
cld
leave
jmp
decl
test
mov
xor
mov
loope
cli
fstpt
and
xchg
cli
cmp
pushl
addl
rorb
adc
jns
jp
and
mov
gs
jg
addr16
mov
jge
pop
pop
dec
rcr
push
pop
jo
sbb
pop
jbe
mov
push
je
mov
and
out
adc
pusha
jmp
or
lret
mov
add
mov
jno
fs
mov
fldenv
pop
cld
pop
add
lods
in
mov
cmpsb
mov
in
adc
jne
leave
pusha
or
push
jne
rcrb
dec
push
sarl
ljmp
mov
out
dec
xchg
dec
in
iret
out
testb
xlat
lret
aas
push
mov
jg
incl
sbb
or
mov
push
pop
mov
mov
xchg
ret
aas
inc
mov
leave
mov
stc
push
jge
adc
jae
add
mov
ret
shl
fimull
movsl
into
dec
mov
cmpsl
mov
ja
jmp
shl
dec
push
and
mov
repz
js
incb
or
dec
gs
mov
dec
loope
arpl
dec
cmp
std
sbb
jno
mov
pushl
aad
xchg
inc
cwtl
roll
gs
aam
stos
mov
pop
fistl
int3
dec
cmp
mov
iret
rorl
lods
iret
repz
mov
das
into
ret
enter
arpl
cmp
incl
loopne
cltd
xchg
fsts
mov
pop
call
sub
call
clc
jg
mov
shrl
jp
add
pushf
sub
cmp
and
pushl
pop
pop
in
push
fdiv
mov
sbb
xor
icebp
inc
ljmp
out
mov
lret
cmp
fidivrs
test
call
divb
sbb
mov
aad
push
sub
into
repnz
mov
outsl
aaa
cld
and
pop
in
div
mov
mov
xor
dec
push
incl
pusha
push
lea
ret
cmp
pop
inc
mov
lcall
xor
call
imul
xchg
inc
xor
xchg
and
mov
lds
mov
scas
sub
cli
jne
je
bound
and
jmp
mov
mov
pop
sub
sbbl
in
push
jnp
ljmp
int3
cld
pop
jne
into
jne
mov
sub
fnstcw
stc
mov
nop
cmp
incl
sbb
iret
inc
roll
jbe
cmc
xchg
push
es
je
ficoml
sahf
call
pushl
pop
xor
pop
and
xlat
xchg
sbbb
shlb
inc
imul
sub
ljmp
ds
stc
cmpsl
repz
rorl
in
mov
out
daa
xorl
mov
subl
push
cs
jae
xchg
pop
and
aas
fsubrs
or
sub
jg
sub
outsl
nop
das
repz
dec
fimull
add
and
testl
xor
insb
stos
shrl
xorb
mov
pcmpgtw
jg
insl
loope
loop
and
add
call
incl
cmp
stc
adc
cmp
popf
mov
loop
mov
lcall
pushl
rcrb
push
push
outsb
or
lock
movb
lcall
mov
mov
pop
jbe
shlb
or
int
push
loope
lcall
xor
or
mov
test
push
clc
out
out
jo
add
lcall
mov
loop
fcomi
push
popa
into
lcall
fsts
xchg
cs
jmp
pop
mov
mov
sar
call
mov
inc
imul
mov
in
push
jae
push
pop
lock
push
inc
hlt
test
dec
scas
cmp
jno
jge
popa
scas
popa
push
ljmp
fs
or
in
push
jmp
roll
insb
sbb
fsubl
sub
cmp
incl
xor
stos
scas
push
mov
addb
xchg
in
xchg
add
and
lcall
or
pop
jmp
or
sub
jns
inc
jge
out
pop
jl
sub
clc
nop
jecxz
decl
add
sbb
fcomps
imul
repz
fucom
inc
cmp
inc
or
jmp
xchg
icebp
imul
in
cli
push
xchg
out
sub
enter
shll
jmp
or
pop
lahf
ljmp
mov
jmp
inc
mov
cli
xor
shll
call
pushf
jae
test
sbb
xchg
scas
push
adc
in
jl
outsl
jl
jmp
cli
daa
into
mov
push
sub
dec
xchg
ljmp
pop
sti
xchg
cmc
mov
mov
jg
aaa
and
andl
movsb
stos
inc
mov
and
xchg
inc
sbb
out
fcomps
mov
cmp
xchg
fsubr
aam
pop
or
outsb
mov
clc
sub
enter
xchg
roll
jb
out
xchg
iret
rclb
decl
mov
imul
test
dec
ja
out
sarl
mov
sbb
mov
add
fidivrl
xlat
lods
xchg
stc
fld
sub
rcl
cltd
popa
pop
add
mov
cmp
dec
fistps
mov
scas
mov
add
imul
incb
xlat
mov
sbbl
out
cmp
stos
mov
test
mov
gs
popf
movsb
orb
sahf
fisttpll
pop
mov
incl
adc
loop
lea
out
test
mov
xlat
jns
sti
xchg
sbb
ljmp
adc
neg
jmp
sbb
sub
outsb
mov
ljmp
ljmp
mov
jae
mov
sub
pop
scas
lea
mov
mov
and
jne
outsl
push
faddp
ljmp
int
sbb
shrb
outsb
add
or
test
cltd
xor
hlt
mov
clc
mov
mov
push
inc
stos
dec
and
fdivl
mov
fsts
mov
dec
pop
mov
or
test
or
fwait
out
or
add
adc
mov
mov
sahf
fistpll
inc
dec
test
and
pop
cmp
stc
lret
push
lods
fiaddl
sub
adcb
inc
push
stc
mov
lret
sbb
cld
sbb
push
movsb
popl
inc
sbb
cmpb
fsts
ss
mov
mov
roll
pop
pop
inc
adc
in
xor
shlb
call
cmp
cmpl
pop
scas
fs
xlat
loop
jl
incl
inc
adc
add
inc
xchg
daa
clc
addr16
add
ret
jge
jecxz
in
jl
loop
and
decl
jno
pop
jle
inc
in
sub
pop
rorl
jbe
mov
lods
push
sub
cmp
push
cmp
shrb
arpl
add
sahf
xor
ss
mov
arpl
test
outsb
imul
inc
test
pop
and
call
icebp
push
out
xor
push
mov
popf
aaa
stos
popf
jge
andb
imul
dec
mov
ja
pop
out
into
mov
sahf
push
adc
cli
insl
push
ljmp
cmp
cli
mov
shl
gs
xchg
pop
lods
dec
pusha
mov
inc
popf
pop
sbb
and
lcall
std
or
cltd
fisubrl
cld
mov
or
cli
dec
aaa
cld
call
push
push
or
movsb
push
ljmp
dec
pop
les
cmp
incl
inc
cltd
pop
ret
fistpl
mov
clc
loop
and
test
inc
push
sbb
xchg
mov
cmpsb
gs
pop
repz
pop
cmp
jns
aaa
rol
scas
pop
sub
ljmp
bndldx
aad
sbb
push
clc
add
xlat
xchg
jg
jle
mov
dec
daa
std
cwtl
cmpsb
and
rcl
pop
mov
sti
ret
mov
xchg
lahf
or
ficompl
dec
mov
js
sbb
pop
xchg
out
xchg
fcmovnu
dec
adc
jo,pn
inc
mov
sbb
pop
mov
xchg
jb
incl
push
fimull
lods
mov
cmp
ss
jbe
cmp
cwtd
mov
xchg
mov
or
addb
jle
andb
fwait
push
mov
mov
je
loope
aaa
addr16
shlb
lods
jmp
scas
push
incl
adc
push
push
dec
and
sbb
inc
jg
lds
sub
repnz
in
lcall
rorl
sbb
xor
xchg
lods
in
popf
mov
sub
jne
push
into
push
addr16
sar
daa
repz
mov
stos
inc
test
xchg
sbb
push
jae
fiadds
scas
cmp
adc
je
xor
mov
ret
or
stos
lcall
add
test
testl
pop
je
outsl
or
call
gs
ret
popf
sbb
fucomi
mov
pusha
sarb
jle
xlat
jmp
orl
push
jne
sahf
mov
out
xor
pop
mul
sub
jg
stos
decb
lods
das
iret
es
pop
in
jnp
in
mov
xlat
std
outsl
pop
and
mov
stc
mov
je
xor
out
add
or
lea
lcall
shl
jno
push
inc
test
outsl
mov
pushf
push
dec
outsb
xchg
inc
push
push
fisubrs
jno
fdivr
decl
movl
int3
mov
fildll
cwtl
sar
ljmp
pop
sahf
int3
nop
out
mov
out
fidivl
mov
jne
dec
xor
decl
pop
ljmp
cmp
mov
aaa
cmp
ja
xchg
mov
mov
mov
jae
cmpb
insl
and
push
mov
mov
inc
xchg
adc
push
popf
jnp
or
aad
xor
xor
pop
movsl
movsb
cmpsb
or
push
repz
mov
shll
mov
sbb
repz
out
sahf
gs
inc
sbb
pop
scas
push
ret
clc
jge
shl
mov
rorb
scas
xchg
cmc
adc
cli
lea
ds
call
and
out
rorl
out
cmpsl
inc
psrlw
mov
mov
imul
lock
inc
cld
roll
and
aaa
lea
mov
lcall
jmp
fbld
mov
in
cli
iret
stos
dec
pop
or
mov
inc
xor
inc
xchg
push
xchg
pop
mov
incl
lcall
jnp
imul
call
push
fsts
cmp
addb
icebp
dec
sbb
push
cmp
decl
or
adc
stos
in
fisttpll
dec
xchg
mov
mov
add
dec
xor
mov
jge
sub
aam
mov
inc
inc
in
imul
clc
incl
push
pop
inc
adc
jge
movsb
dec
jno
mov
insb
lahf
lods
outsl
call
insb
xchg
sbb
xchg
bound
stos
in
xor
mov
inc
sbb
fwait
mov
jle
ljmp
rorb
idivl
addr16
out
pop
jle
scas
subl
sbb
jg
xor
mov
mov
sbb
push
ljmp
cli
cs
or
jmp
nop
push
jle
les
jnp
in
cmpsb
lds
adc
inc
aaa
cmp
xor
cmp
int3
push
mov
add
lcall
mov
ret
aas
push
push
add
hlt
inc
stc
adcb
or
out
push
cmp
lods
sbb
outsl
aaa
add
push
add
or
adcl
repz
or
dec
push
jge
std
mov
outsl
cmp
in
sbb
ficompl
jg
insb
cmpsb
stos
pop
sbb
xchg
mov
mov
or
jle
aad
mov
jmp
push
test
mov
mov
push
jge
dec
pop
iret
pop
repnz
fwait
xchg
sub
mov
add
pop
cld
or
insb
push
cltd
dec
ljmp
jp
mov
inc
movsl
es
push
push
sub
stos
lret
or
movsb
dec
lds
mov
xchg
sbb
pop
xchg
xorl
or
jmp
jl
fidivrl
mov
sti
cli
pushl
lods
lods
daa
icebp
cld
xor
push
mov
fwait
add
mov
mov
std
lcall
push
pop
shr
int3
repz
fldt
test
sub
int3
decl
adc
vmaxpd
shlb
mov
mov
xor
sub
jl
dec
testb
push
push
hlt
pop
flds
insl
jle
pop
mov
sub
cli
or
sbb
incl
cwtl
sub
jo
pop
lcall
ret
xchg
inc
xor
inc
pop
jg
push
pop
loopne
or
ficomps
arpl
xor
int
je
push
or
sarb
mov
cltd
dec
jb
inc
sub
aaa
in
push
ret
ret
mov
call
sub
sbb
jmp
inc
push
jle
xor
adc
loop
sub
ret
sti
jne
std
in
stos
sub
push
repnz
test
mov
cmp
incl
mov
imul
stc
xchg
adc
lods
stos
aam
clc
pop
hlt
clc
jg
sahf
mov
push
cld
inc
add
xor
ror
pushf
out
xchg
and
std
ljmp
lock
out
repnz
xchg
xor
addr16
sar
call
stos
lods
ret
insb
popa
sub
add
sbb
in
add
xchg
jg
cmpsl
pop
fstpt
mov
sbb
jg
outsb
mov
loopne
xor
das
popa
sbbb
ljmp
sbb
repnz
addr16
and
mov
fsubs
ljmp
adc
call
xor
inc
cli
inc
inc
xchg
push
pop
jg
js
inc
sub
inc
pop
ljmp
mov
sub
pop
sbb
cmpsl
lods
cltd
adc
cmp
xor
and
fdivs
xor
jg
or
enter
and
rclb
enter
jmp
inc
cmp
push
fnstsw
ds
sub
mov
xchg
dec
push
push
xor
mov
lcall
jle
xchg
lds
fadds
inc
add
or
mov
push
shl
sbb
aam
cli
incl
jp
daa
movsl
xchg
call
xlat
outsl
or
jg
adc
sbb
jmp
lahf
mov
es
pusha
adc
push
stc
xchg
adcl
test
sub
pop
popf
jl
outsl
add
pop
sbb
arpl
rcrb
stos
fdiv
mov
jmp
idivl
xor
stos
rorl
push
jle
inc
cmpsl
fwait
adc
outsb
sbb
jmp
jmp
shrb
imul
push
sbb
shrb
es
das
in
adc
mov
aas
dec
xchg
in
pop
adc
jg
push
pop
repnz
gs
adc
push
pushl
iret
pop
filds
adc
push
xchg
pop
sbb
insl
xchg
leave
jb
dec
incl
lcall
or
push
popf
cmp
or
push
insb
nop
arpl
mov
push
xchg
push
pop
mov
jmp
jge
negl
push
ja
jle
test
nop
xchg
int
jg
dec
shll
cmp
shll
or
ss
mov
je
ss
xor
mov
inc
sti
cmp
mov
shrb
push
scas
push
push
test
fisubrl
test
adc
int
jmp
adcl
dec
lock
mov
rcrl
and
stc
mov
pop
mov
decl
ja
inc
addl
or
mov
scas
fcomps
mov
loopne
dec
xor
xchg
pop
movsb
pop
inc
cmpsl
or
jge
mov
inc
out
test
mov
adc
les
icebp
in
outsb
dec
into
mov
pop
loopne
sti
mov
adc
mov
stc
fbld
mov
dec
bound
push
test
mov
xchg
stos
popf
push
ret
adc
jb
jae
dec
out
lret
loopne
mov
ljmp
pop
add
popf
outsl
sbb
xchg
cltd
loop
dec
aam
cli
cmp
dec
repz
movsb
stc
cmp
decl
movsl
sti
popf
fdivrl
in
cwtl
inc
pop
and
adc
pop
fsubrs
pop
decl
mov
push
clc
adc
xor
outsl
cli
fisubl
lcall
popf
mov
mov
lret
fsubr
push
pop
movsb
or
pmuludq
cmc
insb
mov
imul
incl
cltd
dec
fcmovnu
fs
mov
or
sub
imulb
rorl
movhlps
das
sar
jecxz
arpl
push
out
shr
ljmp
pop
add
incl
icebp
sbb
mov
mov
clc
out
std
test
push
and
cmpsl
movsl
pop
dec
mov
dec
cltd
push
je
adc
test
jmp
rol
xchg
subb
sti
mov
mov
into
pushl
call
inc
inc
andl
test
daa
mov
xchg
mov
mov
icebp
jp
mov
cli
cltd
and
cmpb
popa
jne
cmpsl
sbb
pushl
subl
dec
out
push
mov
mov
push
aas
cmc
adc
mov
sbb
mov
push
insl
out
push
aas
test
std
mov
out
cli
cmp
and
les
fdivrl
cmp
push
aam
mov
out
sub
xor
and
lds
mov
stc
pop
cmp
scas
cli
mov
xchg
jno
loop
sar
decl
fsubs
cmp
shl
mov
mov
jo
mov
decl
mov
cmp
divb
popf
or
lret
push
add
xor
ljmp
cmp
pusha
rorb
mov
xchg
leave
lret
mov
inc
int3
scas
jb
je
jmp
jne
mov
mov
popa
loopne
int
sbb
mov
loop
cmc
xchg
mov
lods
dec
clc
mov
push
dec
lret
fistl
rorl
call
addr16
push
mov
push
out
mov
fldcw
test
pushf
ljmp
pop
loopne
lock
jbe
jnp
pop
ss
mov
jne
hlt
stos
ljmp
outsl
lret
inc
jb
jp
inc
mov
xor
cmp
mov
js
sbb
fistl
xchg
xor
lock
jl
js
les
sar
enter
add
jecxz
outsl
cmpsb
stos
or
bound
sbb
and
pop
add
call
jno
fiaddl
mov
add
mov
mov
int
test
mov
or
std
decl
push
ret
lds
imul
adc
jb
xor
xchg
xchg
hlt
clc
incl
xor
daa
in
je
call
repnz
sbb
pop
and
outsb
stos
and
js
pop
sub
jmp
loope
lcall
fs
mov
lahf
xchg
lret
arpl
out
mov
leave
aam
adcl
fildl
dec
movsl
xchg
mov
lods
mov
lahf
sbb
das
push
push
clc
jmp
cld
xchg
push
sbb
and
mov
or
mov
das
sub
dec
insl
test
xor
xor
push
mov
adc
incl
xchg
mov
enter
inc
mov
xchg
loopne
repnz
push
mov
les
jne
fsub
or
lcall
mulb
fdivs
das
or
jle
xor
por
cmp
test
int3
imul
or
adc
cltd
ljmp
fldcw
sbb
fstpt
incl
adc
iret
adc
sarl
fcoml
gs
loope
cmp
nop
roll
fbld
shll
xor
fs
aas
mov
in
push
aas
bound
jmp
mov
pop
fldenv
xor
decl
jmp
lret
nop
subb
dec
mov
push
call
xchg
inc
dec
insb
fistl
out
lods
and
scas
xchg
test
mov
insl
add
jmp
bsf
into
int3
push
rorb
jmp
lds
stos
incb
mov
incl
movsl
push
and
adc
arpl
xchg
mov
inc
adc
call
decl
pusha
adc
inc
jmp
fdivr
addr16
cltd
aaa
pop
fists
jge
pushf
add
cld
mov
mov
xorb
jmp
in
inc
sbb
or
fcomip
mov
sub
std
stc
subb
arpl
inc
jno
pop
out
add
ljmp
dec
or
mov
push
mov
sbb
out
push
aas
daa
xchg
xchg
fmul
incl
data16
xor
pop
mov
ss
ds
inc
jge
jmp
mov
adc
scas
shlb
xchg
add
lahf
inc
jmp
cmpsl
loopne
dec
adc
clc
inc
jb
hlt
dec
push
orb
sub
push
divl
xor
lcall
test
xor
popf
stos
cwtl
xchg
roll
movsl
and
decl
test
dec
outsb
mov
inc
incl
pop
mov
cmp
pop
shll
push
aad
xor
sbb
jnp
mov
add
data16
xor
xor
xchg
mov
lea
outsb
lods
lea
jae
test
push
jge
add
imul
cmc
ljmp
jno
mov
out
xor
mov
orl
inc
jg
sahf
pusha
dec
in
jp
fs
push
repnz
mov
enter
push
push
ds
xchg
dec
lods
add
imull
xor
add
cs
cmp
jl
adc
dec
or
mov
cs
mov
mov
fsubl
push
ror
xchg
pop
insb
dec
lcall
fsubrl
dec
aam
rorb
cmpb
inc
pushf
adc
jns
movsb
sub
cmp
incl
sbb
lods
sbb
pop
outsl
and
sahf
or
int3
xchg
mov
aaa
mov
decl
mov
or
pop
xchg
xchg
add
and
cmp
bnd
or
call
inc
jns
xor
imul
hlt
pop
add
lcall
in
adc
arpl
mov
or
rclb
push
sub
lcall
dec
or
mov
push
je
shrb
mov
dec
bound
push
data16
fcom
arpl
fmuls
lock
dec
cmp
inc
int3
jle
pop
push
sahf
outsl
std
sbb
pop
or
jg
out
sbb
jns
cmp
push
daa
shll
repnz
insl
xor
inc
mov
das
test
pushl
mov
xor
adc
xor
sub
aas
jg
hlt
outsb
rcrb
movsb
mov
and
je
dec
xchg
lret
jno
cmp
mov
sarb
incl
xchg
das
in
mov
push
pop
imul
ret
mov
add
icebp
xor
cld
pop
mov
xor
add
ds
and
ljmp
fwait
insb
inc
push
out
xchg
dec
imull
aas
xchg
cmc
inc
xor
push
mov
xchg
mov
adc
push
and
fwait
es
call
ja
rcll
or
mov
mov
orb
push
inc
frstor
inc
mov
mov
mov
subl
or
loopne
jg
pushl
mov
imul
adc
mov
enter
ljmp
pusha
test
pop
or
jbe
pop
rorb
sbb
push
inc
cmpl
daa
das
fiadds
call
fisttpl
jbe
xlat
mov
or
lret
rorl
cmpsl
xchg
xor
lcall
addr16
xchg
mov
cmp
test
or
ja
mov
aad
aaa
cld
or
test
out
inc
movsb
cmp
mov
faddl
insl
mov
loope
or
jg
cmp
xchg
in
bound
pop
idivl
data16
dec
push
inc
jecxz
adc
xor
ljmp
subl
push
dec
fisubrl
lock
sub
adc
loop
leave
out
xchg
inc
and
scas
decl
adc
sahf
jbe
and
nop
sbb
gs
push
xor
adc
ja
mov
cwtl
testl
mov
ljmp
mov
in
test
imul
scas
scas
cs
add
imul
adc
cmp
rcl
sub
xchg
xchg
push
das
stc
test
dec
xchg
test
and
lcall
cmp
in
hlt
mov
out
ljmp
push
inc
jge
inc
mov
incl
cld
pop
sub
add
jg
inc
jge
aaa
call
and
decl
mov
shr
jo
stos
mov
xlat
pop
add
and
lahf
mov
pushl
lcall
stos
ja
repz
pop
pop
mov
xchg
inc
imul
nop
lcall
pop
or
and
inc
jbe
popf
jbe
pop
mov
sub
mov
inc
into
fs
in
jns
push
sbb
xchg
imul
ljmp
jo
shr
jmp
or
adc
mov
mov
test
inc
jnp
jmp
bound
cwtl
shlb
sbb
stc
push
xchg
xchg
lcall
or
les
push
enter
cmpsl
or
lds
movl
int
pop
call
call
xchg
xchg
adc
clc
repz
cmc
add
push
imull
sbb
and
push
xorl
ja
lods
adc
lods
mov
add
cld
push
cmpsb
scas
dec
add
in
mov
pop
push
cmpsl
rolb
sahf
or
clc
je
ljmp
xchg
sub
out
lret
inc
sbbb
sbb
jnp
pop
pop
movsl
call
inc
pushl
mov
ret
lock
outsl
push
repz
mov
call
or
xchg
fmul
sbb
push
cmpsb
sbb
cmp
decl
inc
mov
cmp
mov
mov
mov
fiadds
gs
repnz
pop
lcall
mov
xchg
mov
or
stos
popa
insb
dec
mov
pushl
cld
fistpl
in
nop
or
outsb
mov
aad
mov
decl
addr16
sbb
push
sub
and
hlt
or
shl
out
popf
sbb
mov
adc
mov
ret
insb
repnz
sub
pop
les
je
lds
adc
scas
push
jns
mov
inc
jns
push
cmp
push
xchg
je
addl
xor
adc
ljmp
push
test
mov
jmp
mov
and
xchg
pushf
sbb
pop
ja
lcall
pop
or
inc
out
jg
jo
adc
fdivl
aaa
std
jmp
movsb
ss
xchg
dec
push
dec
mov
pop
cld
fisttps
rol
cmp
jnp
nop
in
push
adc
add
in
nop
lcall
or
sub
lcall
mov
adc
or
arpl
decl
and
ds
sub
mov
fldenv
scas
mov
pop
push
cmp
loopne
ljmp
pop
mov
lods
jne
bound
clc
cmp
dec
mov
mov
pop
movsb
sarb
stos
popf
shrb
fs
xor
shrb
mov
call
jns
pushf
mov
inc
push
test
cmpl
sub
dec
lea
and
jmp
leave
sti
pop
push
lea
les
cmp
stos
das
jae
fldl
shlb
incl
loop
dec
ja
inc
or
xor
xor
jmp
jcxz
inc
fisubrs
cmp
aam
jmp
push
pop
popf
or
sbb
aam
sbb
mov
mov
mov
cmpl
push
xchg
xchg
cli
mov
dec
jmp
sbb
xor
add
into
or
adc
jnp
test
jp
mov
pop
call
cmp
subb
mov
xor
lcall
les
inc
mov
mov
sub
stos
out
mov
negl
and
add
sti
cmp
call
pop
idivl
test
dec
xchg
add
es
insl
add
idivb
decl
sarb
pop
adc
push
dec
and
mov
xchg
dec
stc
push
mov
iret
push
sbb
push
dec
or
mov
loope
cmp
ficoml
pop
aad
dec
pop
pop
sub
jo
mov
pop
cmpb
cmp
or
ret
lahf
sti
scas
jae
sbb
aam
jnp
push
inc
jb
iret
xor
mov
aas
xchg
push
outsl
cltd
cmp
pop
cmpsl
movsl
mov
pop
push
adc
xor
sti
std
incl
mov
sub
xor
decl
clc
movsb
aaa
repz
sub
dec
in
cmpsb
mov
or
inc
test
iret
add
or
push
adc
sub
cmc
mov
inc
jecxz
cmpsl
push
mov
imull
adc
lods
subb
inc
cmc
roll
cmp
hlt
push
dec
addr16
cwtl
and
or
adc
add
fidivrs
cmpsb
mov
gs
sahf
jae
dec
sub
xor
pop
test
ljmp
test
cmp
decl
and
jmp
shlb
test
sub
adc
inc
enter
dec
cld
mov
push
insb
stos
aam
dec
aam
icebp
leave
in
mov
cmp
rol
xadd
push
out
mov
push
xor
shll
fwait
es
call
jge
or
punpckhwd
gs
mov
push
popa
je
mov
fildll
cs
inc
jns
std
or
shll
enter
push
mov
push
xchg
shrl
jae
jle
test
sbb
mov
sti
xor
pop
out
mov
push
mov
out
cmpb
ljmp
push
adc
xor
pop
scas
orb
push
bound
sbb
jmp
or
xlat
xchg
ficoms
enter
and
testb
rorb
adc
sub
dec
jg
loope
and
repz
sti
adcl
jnp
test
and
pop
pop
scas
push
mov
int
mov
mov
iret
movsb
dec
das
and
pop
xor
in
dec
cmpsl
pop
test
jmp
lock
cli
adc
or
movsl
cmpsb
js
jle
mov
mov
pop
sbb
adc
xchg
fcmovnb
and
mov
das
mov
mov
inc
xchg
sbb
pop
pop
xor
ljmp
mov
sbb
mov
jbe
sarb
call
test
arpl
int3
test
nop
xchg
add
pushl
cmpsl
mov
insb
aad
lret
addr16
add
sbb
pop
mov
mov
sbb
pop
jmp
jae
add
jnp
dec
or
cmp
lret
or
fcomip
decl
dec
sbb
sti
cmpsl
dec
sbb
mov
pop
xor
cld
jns
jmp
sarb
cli
das
jb
out
imul
sbb
xlat
je
jnp
inc
push
mov
push
mov
lahf
call
bnd
rdpmc
fbld
cmpl
cmpsl
xlat
sub
popa
sahf
imul
and
call
xor
xor
cmp
or
out
sub
ds
jmp
lahf
jmp
jo
mov
das
cmp
fwait
lock
les
or
push
xchg
ljmp
pusha
fmull
rorb
mov
and
outsl
mov
dec
mov
in
ljmp
mov
mov
sbb
fsubrs
std
xor
inc
pop
pop
cld
hlt
call
cmp
lods
std
pop
mov
cmp
mov
pop
xchg
mov
pop
pop
shl
mov
outsb
cltd
pop
outsl
jg
sahf
jo
jle
jl
notl
out
fwait
data16
ja
pushl
cmp
daa
mov
mov
inc
or
push
or
xor
enter
jmp
jge
pop
sbb
jnp
adcl
lcall
sub
pop
xchg
out
xchg
movsb
les
incl
mov
push
add
aas
dec
lock
jb
cmc
jle
scas
insb
xchg
mov
decl
xor
idivb
xor
push
xor
aaa
inc
sbb
dec
xor
mov
ss
push
loope
pushl
inc
cmp
hlt
aaa
pusha
cli
incl
sbb
cmp
push
movsb
adc
or
lcall
loopne
popf
push
scas
pop
fstl
imul
push
push
mov
sbb
int
jmp
cmp
sbb
les
xor
shll
mov
hlt
pop
inc
lahf
fwait
jg
in
mov
cs
fstpt
dec
int
loop
les
mov
push
sub
dec
dec
daa
mov
mov
inc
ja
jno
mov
insb
insl
cmp
lds
lcall
push
and
mov
inc
movsl
xchg
jmp
fdivrs
jmp
push
psubsw
jg
xlat
pushl
inc
adc
pop
lret
sbb
mov
out
pop
decl
push
jg
std
add
and
call
jnp
mov
mov
mov
shlb
cmp
or
jns
aam
ljmp
inc
sbb
and
ljmp
scas
out
or
inc
call
adcb
outsl
mov
push
or
dec
andb
lea
stos
decl
and
pop
sub
loopne
js
xor
ret
call
sub
xchg
in
sub
push
cli
cltd
xor
jbe
fildll
mov
jl
loopne
pop
push
jae
das
mov
outsl
clc
sbb
test
lcall
hlt
cmc
push
inc
jle
data16
incl
daa
in
sahf
daa
rcrl
test
shll
push
icebp
divl
jne
pushf
and
incl
and
mov
pop
loopne
sub
fimuls
stos
repnz
test
mov
mov
les
jmp
mov
cmp
inc
mov
or
cmp
int3
mov
popl
jmp
inc
push
daa
gs
sbb
add
mov
insl
ret
or
jg
incl
or
mov
push
adc
mov
cli
mov
cwtl
adc
scas
data16
decl
jecxz
sub
xor
add
ret
sbb
or
mul
inc
fcmovne
out
ljmp
decl
push
cmpsl
sti
push
xchg
jmp
jbe
int3
pop
jg
daa
loopne
in
faddl
decl
cs
inc
fnstsw
jb
adc
mov
loopne
jns
add
push
cmp
jmp
xchg
call
jo
sbb
das
pop
lea
pop
cmp
ljmp
lods
in
int
call
dec
cmpsl
mov
leave
pop
jnp
repz
decl
sbb
ds
mov
pop
dec
vcvtpd2dqx
cmp
sbbl
rorb
leave
ja
inc
adcb
fisttps
xchg
sub
pop
loopne
rcl
repz
jmp
test
out
sub
dec
push
add
sbb
pop
sbb
adc
jge
mov
xlat
ljmp
shr
mov
xchg
pop
dec
dec
push
in
jno
mov
jmp
xchg
xchg
cmc
mov
adc
dec
push
mov
sbb
lret
mov
sub
lcall
push
inc
cmp
filds
jnp,pt
jo
je
pop
ror
mov
mov
jle
fcomip
lahf
inc
scas
arpl
clc
in
stos
lods
mov
arpl
into
shrb
cmpsl
outsl
outsl
test
mov
pop
and
mov
mov
lcall
ret
mov
js
sub
pop
mov
push
outsl
jae
data16
aam
fidivrl
fcoml
iret
sub
dec
and
test
inc
pop
and
incl
cld
ljmp
mov
sbb
mov
mov
lcall
mov
sub
mov
inc
pop
in
sbb
xchg
inc
pop
fimuls
cmpb
pushl
xor
loope
popa
dec
inc
push
mov
push
movsb
insl
mov
or
incb
mov
add
push
mov
mov
test
sbb
inc
adc
pop
pop
add
into
fs
rclw
cmp
insb
das
repz
inc
int3
outsl
clc
call
cmp
xchg
mov
out
push
xor
ss
mov
hlt
inc
and
mov
jp
xlat
sub
pusha
sub
pop
pop
jmp
mov
dec
jnp
jbe
pop
sub
jns
xchg
pop
gs
jns
mov
dec
xchg
mov
ja
or
xor
or
cmpsb
mov
mov
cmp
cld
cmp
jl
cmp
and
jg
mov
int3
xchg
aas
shrb
inc
out
adc
or
mov
lcall
mov
dec
push
sub
lahf
xchg
adc
shlb
sarb
lret
daa
add
daa
bound
iret
mov
lods
jne
lea
pop
adc
sub
sbb
call
xchg
mov
scas
dec
sbb
pushf
xchg
scas
xchg
lock
int3
fistpl
gs
pop
and
dec
lods
std
pushl
dec
adc
scas
pop
xor
adc
cli
aas
cld
cmp
xor
mov
xchg
jg
or
mov
adc
sbb
leave
je
jp
or
fs
clc
decl
mov
mov
add
scas
sub
xor
repnz
movsb
jb
lret
sub
xchg
dec
xor
out
mov
mov
and
out
scas
push
fstps
xchg
push
shlb
out
pushl
cmp
add
mov
mov
mov
adcb
les
imul
adc
ljmp
pop
xchg
adc
mov
insb
mov
cmp
xor
add
xchg
push
out
decl
cmp
cmpsb
ret
es
aam
outsb
js
jle
mov
outsb
ret
mov
jmp
push
hlt
mov
mov
repnz
fmuls
sbb
jo
call
xchg
xlat
fildll
lcall
out
mov
cmp
mov
lcall
ret
daa
xchg
stos
adc
adc
jg
div
fcmovnu
adc
fucom
add
idiv
mov
cs
aam
jae
andl
lcall
out
push
cmp
cwtl
dec
les
mov
mov
imul
rcrb
in
xlat
call
test
insl
lods
xor
repz
sbb
mov
push
adc
and
add
jbe
lcall
jnp
mov
outsl
hlt
in
out
popl
fs
inc
push
pop
daa
push
popf
rcrb
xchg
cli
sbb
jge
aam
sbb
call
adc
or
in
rclb
push
sarb
mov
clc
rorl
loopne
ljmp
dec
sub
arpl
xor
xor
lods
add
outsb
fiadds
lods
xchg
incl
cltd
xor
dec
mov
inc
lods
stos
push
cli
pop
add
inc
leave
mov
rcll
aam
mov
jmp
daa
sar
cmpsb
ja
stos
cmpsb
les
pop
cwtl
aad
mull
aas
xor
lcall
call
dec
xchg
mov
cld
adc
xchg
aam
fdiv
popa
test
incl
repz
out
hlt
add
mov
jne
insl
jne
enter
ror
xorb
fwait
scas
stos
js
fdivr
inc
sbb
jg
cmp
ds
daa
js
out
push
mov
es
pop
cmpsl
lret
das
in
movsl
scas
out
aad
ljmp
xor
pushl
aam
cli
xor
push
imul
sbb
mov
sahf
syscall
mov
std
cltd
jo
and
push
stc
inc
incl
add
cltd
xor
jno
in
loopne
in
ss
and
imul
je
lea
pushl
insb
jl
pop
and
add
sahf
xchg
jno
add
mov
pushl
fildl
sub
add
pop
xchg
sbb
out
fldl
ljmp
decl
std
mov
cmpsb
mov
lahf
insl
lahf
xchg
inc
jl
dec
rolb
mov
jmp
pop
add
sbb
xchg
and
pop
out
jae
clc
js
mov
pop
ficomps
xchg
pop
pop
xchg
or
int3
mov
fcomip
incl
cmpsl
mov
push
mov
andl
cs
inc
andl
jnp
fdivp
jl
movsl
adc
loope
xlat
push
fdivrp
insl
ficoml
lods
xor
jmp
pop
push
or
lret
aam
jno
mov
mov
hlt
loopne
adc
sub
js
push
lcall
pushf
fbld
cltd
scas
sbb
sub
repz
dec
ljmp
mov
xchg
out
lahf
dec
mov
cmp
push
cmp
jle
mov
jns
xchg
cld
sub
jb
leave
test
cmp
cmpsb
lds
loopne
jb
pop
cltd
movsl
cmp
jp
cmc
jg
fbld
nop
mov
aam
jnp
data16
mov
ljmp
outsb
add
jp
ret
test
sub
xchg
jmp
out
adc
insb
or
push
push
mov
cmp
mov
mov
pop
jmp
push
sub
xchg
aas
cmpsl
pop
jle
sbb
popa
cwtl
sar
mov
jge
pushl
add
test
icebp
push
fistpll
jmp
sbb
or
sbb
xor
or
imul
cli
mov
push
cmp
cmp
cli
xchg
xchg
cli
jmp
cmp
unpcklps
ljmp
stos
push
and
jo
xlat
and
pop
int3
test
inc
stos
call
mov
call
adc
gs
cmp
xor
pop
sub
std
or
jns
clc
push
lods
addr16
in
ljmp
sbb
lock
adc
addr16
int
out
push
in
stos
into
cmp
ljmp
mov
push
pop
inc
xchg
jnp
mov
dec
fistpll
popa
mov
fcmovnu
ljmp
js
mov
les
push
fs
cmp
sbb
lods
mov
adc
fidivl
add
mov
inc
xlat
xchg
cmpsl
hlt
lods
mov
and
mov
mov
pop
incl
sub
shrb
outsb
ret
push
inc
popf
inc
rcrb
jb
mov
or
jg
lcall
in
cmp
mov
mov
call
and
fiadds
xor
das
jbe
sub
rcrb
mov
scas
sti
dec
stos
sti
dec
push
sub
push
stos
cmp
ljmp
ljmp
push
data16
lcall
jecxz
add
out
ret
or
push
xchg
pushl
push
sub
sub
inc
je
jg
shrl
inc
push
pop
inc
pop
sub
cltd
xor
jns
or
loopne
data16
jnp
cmp
mov
fs
pop
cld
push
lret
pushl
lret
test
ds
pop
add
pop
jecxz
lock
sarb
mov
scas
fsts
push
std
cmp
cmp
xchg
mov
leave
pop
in
daa
lret
pop
outsl
pushl
adc
ds
fldl
mov
repnz
mov
fiadds
add
test
das
popa
jecxz
pop
sbb
ret
ret
scas
stc
push
xchg
lcall
dec
sbb
and
lods
les
testb
jge
mov
lcall
mov
dec
lock
push
xchg
out
std
pop
mov
sarl
outsb
stos
stos
adc
in
incl
mov
fs
jmp
xchg
mov
push
daa
stc
enter
xor
decl
testb
dec
xchg
xchg
xorb
cmp
pop
add
xor
or
call
clc
lock
or
dec
repnz
fdiv
out
call
cmp
inc
test
xor
gs
mov
aaa
jo
in
jns
jb
cwtl
jbe
sbb
ljmp
shrl
test
add
cld
ja
int
sub
sub
mov
xchg
sub
pop
mov
decl
decl
fwait
add
add
sub
xor
sbb
gs
sub
int
repnz
ljmp
movsb
xchg
hlt
hlt
arpl
ss
mov
in
pop
sub
cltd
and
call
xchg
xchg
imull
pop
int3
mov
dec
push
call
sbb
enter
jmp
cs
test
sahf
inc
or
aam
lea
mov
cmp
mov
push
push
decl
mov
adc
xchg
jbe
inc
fsubrl
arpl
mov
test
decl
dec
sbb
fnstsw
insl
xchg
cmp
or
mov
jmp
pop
cmp
mov
xor
mov
shlb
rcll
xchg
bound
in
decl
shlb
push
rcrl
xchg
ja
je
push
mov
repnz
jmp
mov
xor
mov
xchg
mov
stos
scas
scas
fisubrl
incl
inc
mov
imul
loope
pop
sbb
dec
enter
push
push
pop
es
jmp
std
mov
loopne
sub
push
scas
fisttpll
mov
hlt
je
or
lcall
jmp
pusha
mov
nop
dec
pop
sbbl
inc
rorl
dec
ja
xchg
aaa
cld
dec
ja
mov
out
push
jp
jl
xchg
test
push
push
jns
cmp
xor
mov
cmp
mov
jbe
mov
sti
mov
push
mov
push
leave
scas
mov
lcall
pop
push
leave
aad
outsb
sahf
push
loopne
jb
lods
in
mov
lahf
outsl
inc
sbb
inc
pushl
scas
outsb
mov
xchg
iret
daa
lret
cmpsl
gs
cli
test
inc
dec
int3
gs
inc
aas
mov
dec
xor
adc
xor
xor
rcll
xor
or
call
push
cmp
rcr
aam
dec
hlt
sub
inc
inc
and
ljmp
sub
pop
xlat
rcll
outsb
inc
jnp
mov
imul
cld
sub
push
fstpl
dec
sbb
jecxz
sub
xor
negl
cmp
daa
push
incl
jo
xor
xlat
cmpsb
shrb
aad
xchg
or
decl
and
jbe
aas
mov
int3
jno
adcl
ljmp
ficoml
xchg
scas
xor
loop
lock
cli
das
dec
jp
push
aaa
inc
iret
mull
lcall
loopne
insl
addb
inc
aas
mov
lahf
js
fwait
das
xchg
xchg
dec
mov
sub
inc
pop
mov
mov
add
daa
push
ja
ficompl
push
lods
repnz
mov
cmp
and
in
int3
cmpsl
pop
cli
std
mov
inc
cmp
fdivl
lods
cmp
jge
repz
mov
lret
rorl
int3
fnstsw
jl
incl
popf
mov
cmp
sub
xchg
adc
and
mov
inc
mov
call
test
xchg
mov
xor
clc
scas
jnp
sbb
dec
pop
push
xchg
insb
aas
inc
pop
cmc
sub
and
jl
lcall
push
lock
adc
jecxz
and
es
or
das
lods
jecxz
iret
jle
mov
std
sti
aas
dec
xchg
xchg
sub
ret
movl
or
call
or
mov
sbb
aad
cld
scas
aad
jle
fildll
outsl
jmp
xor
aad
fdivs
mov
mov
mov
das
mov
imul
sar
fstpl
std
dec
mov
pop
jmp
push
inc
into
mov
inc
inc
add
ficoml
repnz
bound
and
test
test
xor
in
push
xorb
and
mov
ret
jg
mov
inc
mov
sub
popf
or
pop
adc
jg
sahf
or
mov
data16
ret
push
sub
sbb
lret
icebp
enter
xchg
jl
loope
popf
incl
repz
adc
movsb
lret
mov
mov
jns
in
inc
dec
out
iret
jbe
jg
ficoms
lret
pop
mov
mov
movsb
std
das
ljmp
pushl
sbb
cmp
pop
call
cmpsb
movl
sub
addr16
cli
stc
decl
out
fisttpl
jle
stos
notl
clc
aas
xor
js
ret
mov
ljmp
xor
scas
loopne
cwtl
adc
or
sti
pop
jbe
aas
push
adc
and
incl
ja
mov
in
push
jnp
rorb
mov
js
cmp
jne
pushl
dec
pop
lcall
shrl
add
out
out
xchg
ret
jnp
jge
pop
sarl
push
cli
xor
mov
or
loope
push
aas
jno
jnp
and
lahf
sbb
decl
aaa
pavgb
stos
cmp
rcll
xor
dec
mov
lock
mov
push
incl
test
mov
mov
cwtl
insl
jbe
bound
fwait
icebp
icebp
jge
out
inc
mov
lods
jne
jmp
jnp
movsl
xor
int
jnp
xor
inc
lock
movsl
movsl
loope
fldt
pop
adc
je
xor
cli
iret
nop
inc
inc
xor
pop
and
rcll
call
insl
or
cmc
dec
sbb
and
mov
mov
ret
imul
pushl
xchg
shlb
lods
mov
jo
or
lahf
xchg
or
dec
call
and
int
mov
dec
scas
int
imull
xchg
push
adc
cmc
push
mov
xchg
scas
add
aam
lcall
jecxz
and
subl
inc
ja
lea
adc
mov
call
call
and
inc
fadd
jecxz
xor
out
sti
inc
mov
mov
xor
dec
nop
adc
xchg
cmc
sub
loope
and
sub
dec
loop
fs
ljmp
lcall
push
jns
mov
cmp
mov
sbb
jbe
xor
jmp
lret
add
es
outsl
xchg
out
jp
push
jmp
iret
add
inc
test
hlt
out
jo
cmpsb
fsubl
ljmp
clc
call
mov
mov
subb
movsl
fisubl
sub
mov
sub
mov
jbe
fldl
cmp
outsb
pop
inc
jbe
push
xchg
adc
or
mov
sbb
pushl
outsb
or
cltd
mov
sbb
lds
inc
xor
cmp
inc
das
and
push
dec
data16
mov
cmp
idivb
out
mov
inc
lcall
lahf
clc
add
ljmp
push
movsl
in
add
ret
int3
mov
repnz
push
xchg
xchg
mov
je
pop
ud0
cmp
fists
mov
popl
jo
pop
movb
cmpsl
jns
decl
add
loop
loop
jno
jb
cwtl
mov
sti
sbb
repz
lcall
pushl
inc
jnp
push
push
scas
pop
add
test
inc
pop
punpcklwd
fwait
mov
sub
jmp
dec
in
mov
pop
or
push
jns
cli
sub
aam
sub
adc
ljmp
inc
out
rorb
nop
data16
roll
push
sarl
das
fsubl
jg,pt
lcall
scas
into
and
dec
shl
mov
xchg
cld
out
add
dec
test
push
int3
jnp
xor
sub
or
loop
push
outsb
mov
xor
push
add
xor
stos
sbb
inc
rclb
mov
aaa
adc
popa
adc
mov
push
cli
mov
scas
add
ljmp
xchg
mov
cmp
popf
lods
or
pop
xchg
push
mov
or
scas
xchg
pop
jmp
incl
fxch
xchg
loopne
mov
cmpsb
mov
push
cmp
pop
cmp
mov
jecxz
jmp
jmp
cwtl
movsl
mov
pop
ficompl
out
inc
pop
icebp
jmp
mov
add
jnp
loopne
cmp
in
test
fsts
fildl
mov
ljmp
cmp
add
inc
xorl
leave
sub
lods
pop
xor
test
inc
cli
pop
dec
into
sar
aaa
std
cs
incb
cmc
movsl
int3
mov
and
fwait
js
int3
xchg
mov
dec
stc
idiv
call
test
stos
movsb
mov
inc
xor
jns
mov
cmpsb
xchg
fisubrs
fldl
ret
push
sbb
inc
mov
daa
lahf
flds
lods
sub
jg
pop
imul
decl
cs
mov
sarl
sbb
subb
adc
pushl
ret
and
enter
out
jns
push
in
adc
mov
ret
stc
mov
pop
call
sahf
mov
ss
notl
cmp
out
and
sbb
jmp
xchg
push
loop
sub
iret
xor
js
sbb
loope
cmp
add
data16
decl
shr
add
xchg
stc
dec
jmp
scas
ds
cltd
xchg
sbb
jmp
jne
ljmp
jo
xchg
test
lret
loop
jne
fcmovbe
aam
dec
add
fcomip
ljmp
pop
add
jmp
pop
fbld
inc
push
push
stos
ja
dec
fld
mov
inc
popf
adc
sub
adc
aam
add
fstpl
fcomps
fnsave
fs
push
sub
pop
jg
pop
mov
push
in
mov
push
jp
cmp
sahf
lea
lcall
xchg
xchg
imul
cs
daa
fcoms
outsl
fcomip
pushl
int3
xchg
fidivs
shrl
mov
jp
push
dec
jmp
incl
adc
pusha
xchg
xor
pop
sahf
push
mov
nop
cmp
add
pop
pop
pop
and
clc
fidivrl
mov
mov
je
cli
pop
adc
adcb
mov
xchg
fadd
jge
push
cmp
dec
add
imul
call
inc
push
and
out
jb
loop
fimuls
movsb
pushf
mov
pop
test
add
or
mov
jmp
loop
pop
pop
cmpsb
addr16
sub
sub
and
sub
mov
sub
xchg
pop
add
movsl
jmp
in
fcoml
or
mov
int
pushl
mov
pop
scas
cwtl
aaa
test
aas
sarl
stos
into
mov
data16
aaa
cmp
ljmp
sub
mov
filds
sbb
mov
movsl
ss
cmc
sub
pop
lcall
adc
cmp
inc
in
fwait
sbb
ja
rcrb
les
xchg
xor
imul
call
mov
mov
fidivrs
cmp
decl
mov
sub
push
xchg
test
add
ja
add
push
loope
sti
push
cltd
ret
loop
ficoms
pop
pop
mov
arpl
imul
pop
ljmp
sbbl
pop
jae
mov
push
xor
cmpsl
fs
dec
mov
ljmp
adc
in
ret
scas
shlb
xor
addr16
fildl
ja
sbb
sub
out
js
jle
rorb
popf
adc
hlt
cmpsb
lcall
pushl
mov
adc
sub
push
cld
shll
iret
idivb
decl
test
sub
stc
nop
insl
movsl
or
add
or
sti
mov
xchg
jle
call
mov
sub
mov
add
fsubrp
mov
sti
cmp
push
shll
out
out
jp
shr
jmp
loope
mov
fdivrp
mov
insb
or
aaa
rclb
cltd
push
lcall
mov
loope
cwtl
mov
ficoms
sub
xchg
lods
call
xlat
cs
jle
mov
cld
popf
mov
add
int3
es
fs
cmp
js
sub
incl
xor
adc
bound
xchg
mov
loope
lcall
pushl
jns
xor
inc
pusha
sub
dec
add
sbb
pushl
cwtl
rcl
xchg
aaa
ljmp
mov
mov
push
jae
aas
sti
dec
cmp
test
arpl
push
jg
mov
sbb
ss
mov
cmp
pop
xchg
jnp
into
into
xor
xor
adc
lret
ljmp
xchg
and
push
dec
push
cli
mov
sar
in
push
imul
and
into
cmp
pop
add
lret
push
test
fldl
insl
pop
add
jmp
cmpsl
pushf
arpl
cmp
sti
addl
mov
inc
inc
je
and
add
or
lock
push
test
jmp
ljmp
clc
decl
mov
pusha
imul
dec
in
cmp
fstl
into
lods
call
adc
jge
pushf
push
mov
cmp
jmp
cwtl
test
decl
xchg
mov
ficompl
mov
idivl
xchg
test
mov
xchg
ds
rolb
xlat
inc
cwtl
sbb
or
mov
ljmp
jae
ljmp
dec
sub
pop
cmc
cmp
sbb
and
es
mov
cmp
and
xor
add
mov
and
inc
cmp
cmp
rep
jno
in
add
jmp
mov
pop
mov
cmp
fwait
mov
std
jg
test
sahf
popa
stos
pop
add
adc
shl
mov
add
mov
fldenv
dec
xchg
in
sub
sbb
mov
stc
sahf
or
and
inc
ja
jg
xor
cltd
pop
inc
jb
dec
add
jmp
xor
pop
cmpsb
cmpsl
shrl
add
shl
incl
ljmp
add
jecxz
mov
repz
decl
clc
fs
push
cli
inc
pop
mov
adc
xor
scas
xor
xor
jp
xchg
and
and
mov
adc
sarl
arpl
ja
xor
stc
sub
hlt
mov
ds
mov
popa
je
sar
mov
mov
lods
mov
adc
xchg
xchg
inc
mov
aad
mov
inc
std
dec
outsb
push
mov
xchg
pop
lahf
js
push
jo
cmp
mov
testb
mov
test
loop
lcall
sbb
pop
sbb
and
fmuls
lcall
cmp
ss
and
ds
sbb
and
shrd
es
jmp
shrl
mov
lea
mov
loope
addr16
dec
pop
jl
add
lcall
fs
push
inc
dec
mov
push
out
inc
testl
in
sbb
xchg
lds
lahf
call
or
and
gs
sub
xor
adc
fisttps
incl
mov
js
pop
jnp
adc
mov
std
and
in
outsb
daa
cs
xchg
or
pushl
movsb
outsl
mov
test
lods
inc
inc
test
jns
in
push
xor
or
clc
test
aad
jno
fsubs
xchg
inc
enter
sarb
rol
xchg
jl
clc
decl
in
jno
cmp
ret
popa
inc
dec
das
int3
mov
or
cmp
movsl
daa
and
pushf
test
mov
xor
cmp
fstps
call
sbb
sub
mov
mov
js
and
test
les
xor
dec
pop
mov
pushl
adc
sysenter
test
cmc
ljmp
imul
xor
test
addl
in
jecxz
adc
scas
xor
push
lret
inc
cmpsb
sub
jmp
aad
jp
rcl
insl
cs
sbb
scas
or
and
decl
jge
jns
icebp
dec
sbb
jae
mull
in
adc
jg
in
push
lock
popf
mov
mov
js
jmp
sar
and
pop
andl
pop
icebp
push
out
dec
xor
add
mov
cwtl
or
fcomps
rclb
insl
imul
cwtl
lods
pusha
jp
ljmp
mov
sbb
mov
cmpsb
mov
ljmp
mov
arpl
cwtl
sub
cs
dec
ljmp
addr16
xor
jmp
add
jns
lret
pop
pop
jl
call
mov
insl
mov
enter
cmp
mov
mov
mov
jl
jl
or
and
call
leave
test
cmp
xchg
sti
lahf
dec
xchg
sub
lock
out
gs
sbb
ljmp
rcrl
add
pop
pcmpgtw
aaa
jmp
test
cltd
imull
inc
or
call
ss
movsb
test
jb
dec
gs
adc
ret
mov
push
das
clc
ljmp
pop
inc
out
and
add
clc
xor
jns
nop
cmpsl
stos
lcall
test
das
xor
xchg
pop
fisttpl
scas
fdivl
mov
fcompl
test
mov
aas
rcl
outsl
insl
add
adc
cld
dec
fldl
call
push
out
dec
addr16
cmpsb
adc
cmp
mov
jne
jp
cmp
scas
xor
dec
jmp
pop
or
imul
sbb
rorl
je
in
dec
insb
push
dec
push
popf
dec
jg
lcall
pusha
xor
addr16
cmp
sahf
dec
lcall
push
fwait
loopne
mov
adc
not
mov
icebp
mov
stos
mov
push
jl
or
cs
call
push
dec
mov
push
add
push
mov
es
test
push
fwait
jmp
repz
mov
adc
js
jle
sbb
lret
subl
in
pushl
fisttpll
xchg
pop
inc
inc
lret
sbb
jmp
sbb
jge
lret
and
enter
mov
imul
xchg
mov
cli
in
cmp
subb
adc
push
decb
pop
ljmp
jne
dec
sub
sbb
push
ss
sbb
das
lods
fstpt
xchg
inc
idiv
jg
jmp
mov
sbb
in
lret
cmp
lret
add
and
aam
lcall
call
aam
xchg
repnz
jno
subl
scas
iret
mov
imul
push
enter
mov
inc
gs
mov
mov
mov
insl
push
test
push
add
stos
pop
stos
sarl
dec
adc
cmc
inc
call
cmp
push
sub
ret
adc
add
sbb
pop
insb
dec
loopne
mov
hlt
ljmp
lret
orb
dec
lods
cmp
incl
push
testl
dec
pop
leave
pushf
inc
mov
call
jno
js
xchg
leave
jmp
xchg
jne
aad
jns
cmp
sub
adc
decl
sub
adc
push
pushf
movsb
js
lret
shll
in
stc
mov
nop
and
jp
jp
das
sbb
cmp
dec
enter
sbb
pusha
xor
push
jmp
int3
loope
pop
mov
lcall
cli
mov
subps
pushf
mov
or
sbb
push
lods
inc
popf
loope
xchg
dec
push
testb
or
push
mov
push
push
push
sbb
test
fcomip
sbb
insb
stc
mov
loopne
in
jno
xchg
lods
or
mov
mov
cmpsb
sar
ljmp
mov
pusha
xchg
pop
push
movl
push
rclb
adc
inc
jb
repz
mov
jo
xor
mov
sbbb
sti
dec
xlat
xor
inc
dec
ss
pop
dec
inc
pop
aaa
mov
lods
repz
ljmp
roll
loope
imul
mov
roll
mov
stos
dec
aaa
cld
call
push
or
sarb
cmp
cld
pushl
xorl
xchg
pop
push
jmp
adc
test
mov
jl
jmp
cmc
and
ret
repnz
inc
test
scas
push
std
lcall
xchg
xchg
sbb
and
es
mov
ljmp
push
xchg
out
xor
jns
sub
ds
fs
loope
in
xchg
mov
cmp
fildl
jb
jmp
cmp
scas
hlt
mov
out
cltd
pusha
add
icebp
jmp
or
dec
push
add
mov
sbb
push
sahf
mov
jg
push
sbb
mov
xchg
pop
jge
pushf
shrl
jle
movsl
fwait
push
rorl
xor
push
lds
es
push
adc
and
fadd
inc
fcmovbe
daa
inc
xchg
adc
mov
out
xchg
test
sub
mov
pop
sub
cmc
inc
and
pop
add
pop
call
cmp
jmp
ss
movsb
bound
mov
loope
bound
pop
adc
cld
ljmp
test
outsb
push
inc
mov
gs
frstor
ja
out
cmc
mov
push
inc
mov
imul
sti
or
xor
push
in
cmp
stc
lds
sbb
rclb
sbb
adc
sub
popa
or
call
cld
cld
cmp
lock
call
aas
aam
mov
movsl
ljmp
cmp
sbb
lea
decl
sbb
ds
sub
jmp
lahf
mov
and
push
cld
inc
xor
cmp
decl
pop
inc
cmpsb
jbe
aad
pop
adc
jae
loop
cmp
sub
es
jmp
stc
call
sub
inc
pusha
pop
ss
insl
fistpl
pop
popf
arpl
test
jmp
mov
pop
push
cld
mov
xchg
dec
out
push
repz
aaa
inc
push
insb
adc
fcomip
std
push
push
pop
and
cmp
fsubp
popf
mov
and
sbb
incl
loopne
mov
push
loope
mov
jbe
pushf
sub
sub
bound
lock
ljmp
cltd
mov
xchg
scas
dec
pop
xor
aaa
jae
jl
sbb
fisubrs
outsl
mov
outsl
mov
adc
imul
clc
push
pop
sub
nop
sbb
ja
incl
insb
aam
cmp
add
fimuls
sub
inc
je
lcall
or
lods
repz
and
arpl
push
pop
mov
rcrb
sbb
decl
lock
sub
mov
mov
decl
ret
adc
xchg
int3
movsl
xor
dec
arpl
sub
loop
cwtl
jl
sbb
xchg
pop
hlt
lcall
jmp
dec
jmp
dec
dec
pop
fdiv
out
stc
dec
mov
push
in
pushl
ror
shlb
mov
cmp
in
out
add
sti
mov
gs
cli
dec
out
nop
in
push
or
xlat
inc
dec
pop
popa
ret
and
fsubs
lret
aaa
dec
jp
mov
outsl
clc
movsl
add
loop
inc
ja
or
adcb
sub
push
inc
in
call
cmc
jne
push
ds
dec
push
lcall
or
sahf
push
mov
or
xor
cmc
js
es
mov
frstor
sbb
and
push
test
aas
push
decl
outsb
gs
fldl2t
adc
pop
ds
cwtl
xchg
lret
hlt
sbb
and
mov
push
ja
add
decl
xchg
sahf
inc
push
stos
pop
mov
ja
mov
sub
jp
int
inc
out
xor
clc
sahf
mov
in
xlat
push
fstl
inc
xor
sbb
int3
jge
mov
decl
mov
addr16
cwtl
subb
jae
es
rcrl
mov
pushl
xchg
mov
sbb
mov
mov
xor
fldl
sbb
and
iret
jmp
inc
stos
mov
fnsave
dec
xchg
push
or
cmp
pushf
xor
mov
or
push
std
call
sbb
mov
xchg
mov
xlat
push
fdivrs
mov
push
stos
fdivr
inc
aas
sbb
lds
dec
adc
dec
pop
neg
ja
jp
mov
cmp
lcall
stos
fucomip
pushf
xor
stos
repz
push
fwait
orb
mov
out
jmp
fidivrs
push
dec
sub
hlt
mov
sahf
sbb
pop
jne
pushl
sbb
cmc
cmp
stc
xor
insl
pop
cld
mov
push
jl
jo
scas
inc
fwait
jmp
out
adc
push
test
aad
aaa
fs
xor
mov
and
cmp
call
pop
mov
push
sbb
push
sahf
dec
xchg
or
ss
cmp
pop
add
dec
cli
cmp
xor
cmp
cmp
dec
jo
std
pop
mov
pushl
neg
repnz
movsb
jecxz
and
sbb
insl
xor
inc
out
sub
shl
emms
push
stos
call
in
push
or
je
je
stos
push
loope
js
out
push
pop
popfw
lcall
cmpsl
imul
or
push
fildl
add
mov
lcall
add
fmulp
ret
cwtl
stc
aaa
xchg
add
jnp
jno
pushf
lcall
cmc
js
fildl
xor
enter
jecxz
arpl
push
jge
ljmp
and
inc
cmp
rolb
lahf
mov
xlat
xchg
out
outsl
pop
lcall
cmp
test
shlb
imul
sbb
sub
call
push
sbb
lret
andb
or
mov
lods
lea
add
jno
or
mov
aam
dec
ljmp
ret
loope
gs
xor
or
ja
jge
in
cld
jns
and
dec
pop
jno
mov
imul
call
and
xchg
cmpsl
icebp
adc
in
and
in
insl
scas
dec
xor
in
pop
loope
ja
stc
xor
adc
mov
nop
mov
adc
jmp
int3
xor
gs
and
sbb
push
sbb
lods
inc
sub
lahf
mov
inc
insb
repnz
fwait
dec
stc
mov
movl
out
add
jmp
cmp
xchg
xchg
andl
icebp
addl
sahf
push
xor
cld
add
gs
mov
inc
mov
arpl
dec
jmp
cmp
aam
fdivrl
push
mov
bound
mov
dec
xor
jle
cmp
sub
clc
pop
jmp
mov
leave
mov
stos
mov
cmp
mov
sar
call
mov
lds
lds
cmp
mov
fimuls
xchg
int
cli
jb
ljmp
mov
rcrb
xor
and
iret
adcb
addr16
scas
lock
pushl
sbbl
std
mov
pusha
test
pusha
sbb
cltd
mov
clc
call
add
adc
call
cmpsb
scas
outsl
dec
ljmp
test
fisttpll
fs
leave
popf
xchg
xor
sub
mov
std
xor
push
or
dec
pop
mov
cli
xchg
incl
lock
jmp
test
cmpsl
fdivrl
ds
movsl
ljmp
push
sbb
fadds
insl
jb
pop
jp
xor
mov
lds
add
incl
adc
js
int
out
in
pop
xor
decl
lods
add
ss
lret
rcl
bound
mov
inc
cwtl
fistl
mov
dec
jno
loopne
enter
test
cmp
xchg
jmp
cmp
stos
jne
int3
pop
and
cmp
and
std
idiv
ljmp
out
inc
es
jns
in
xchg
test
push
test
inc
sub
xchg
mov
cld
incl
inc
cmc
sbb
sub
mov
out
stos
mov
push
jp
hlt
decl
sahf
sub
inc
daa
out
cmp
sbb
sbb
push
jl
rcl
mov
insb
xor
mov
dec
fs
xor
fucom
sahf
popf
dec
fld
sub
call
dec
rorb
mov
jg
jmp
in
sub
pop
scas
lea
dec
out
rcll
popa
test
ja
cmp
incl
fldl
xchg
arpl
popa
fisubrs
mov
xor
dec
hlt
adc
enter
int3
je
push
gs
insl
push
aaa
push
addl
cltd
mov
add
loopne
jmp
and
push
or
xlat
sbb
call
xor
cmp
lcall
mov
inc
jo
pop
insl
movsl
add
mov
movsl
adcl
adc
call
rcr
std
fisttpll
aam
fisubs
dec
mov
pop
push
aaa
jb
pop
mov
ljmp
movsl
add
jo
cmpsl
xchg
aam
fistps
loope
repnz
dec
ficoml
cmp
call
pop
adc
imul
jl
mov
inc
add
xchg
xchg
or
push
ja
test
test
in
call
cld
cld
cli
arpl
inc
pushf
test
mov
mov
lock
jl
fcomip
jmp
insb
in
scas
adc
sbb
sub
mov
mov
mov
xchg
xor
iret
adc
mov
mov
mov
adc
test
daa
adcb
decl
ret
fsubl
pmaxsw
iret
ja
popa
mov
adc
push
push
fcmove
push
fldl
fcomip
incl
mov
jno
cmp
outsb
popa
aad
mov
insb
lcall
jecxz
lock
jle
push
lcall
rcll
ljmp
mov
pusha
cli
pop
out
add
fisttpll
loope
out
decl
and
pop
pop
lret
jg
fs
inc
inc
jecxz
aad
jbe
fcomp
mov
mov
jo
decl
out
les
add
cmp
push
inc
push
push
jge
decl
pop
aam
cs
xor
or
ficoml
mov
cld
push
ret
int
scas
and
dec
push
pop
pop
sbbl
pop
test
cmpsl
dec
add
decl
and
or
ss
pushf
mov
out
mov
cmp
jmp
lods
cmp
mov
loop,pt
test
and
repz
jmp
jg
aam
push
dec
in
mov
inc
loopne
sub
inc
pushf
hlt
and
or
pop
inc
mov
inc
ret
scas
sub
xchg
in
or
int
xor
jmp
jle
and
arpl
jmp
in
fsts
jl
dec
loopne
mov
jle
outsl
cmc
adc
pusha
push
mov
aaa
sub
fstp
sahf
mov
movsl
imul
ljmp
lds
cmp
mov
pop
cmp
repnz
ret
push
mov
movl
sub
mov
jg
xor
cmc
enter
lds
sbb
loope
pop
cli
pop
mov
imul
mov
outsb
xchg
xor
arpl
push
ret
sub
out
mov
lcall
sbb
nop
xchg
add
mov
jle
adc
inc
addl
out
xor
dec
fldcw
lcall
imul
lret
mov
loope
xor
rolb
push
sbb
xchg
mov
decl
sub
push
or
push
aaa
adc
xchg
lds
lea
scas
jmp
add
lcall
dec
rorb
xor
mov
mov
cmp
cli
ljmp
fmull
mov
jp
lods
mov
sbb
incl
xlat
xchg
sbb
in
sub
jo
jle
movsb
gs
test
sahf
mov
aas
xor
xchg
popf
enter
mov
test
scas
nop
popl
decl
mov
decl
mov
shlb
lahf
lret
fldenv
mov
fmuls
xchg
push
sub
inc
iret
xchg
int3
and
fcoms
jns
or
decl
cmp
popa
scas
push
aas
dec
movsl
xchg
adc
int
jp
sub
loopne
sub
shrl
shll
test
lret
fistps
incl
mov
lret
sti
push
imul
fcomi
popa
mov
fs
xor
pushl
jecxz
push
or
vmwrite
cwtl
mov
fdivl
outsb
jecxz
js
std
icebp
xchg
mov
nop
xchg
sbb
pop
faddl
mov
cltd
leave
add
iret
outsb
mov
xlat
or
mov
test
neg
inc
mov
xchg
scas
xor
lods
incl
cmpsl
sahf
mov
fldt
add
mov
push
sbb
xor
enter
jg
call
shll
xor
jnp
and
jmp
ljmp
xchg
inc
push
in
and
movsb
or
and
jnp
mov
decl
loop
cmp
popf
cmpsl
subb
sub
pop
lds
fwait
mov
out
jns
cmp
fs
inc
xor
push
std
dec
add
jb
jp
shl
loopne
lea
or
leave
push
xor
inc
xor
jg
incl
push
xchg
pop
int
cmp
imul
shlb
into
pop
enter
inc
xor
xchg
call
push
stos
call
lods
mov
jbe
jl
rclb
mov
mov
ljmp
cli
mov
dec
push
cmp
data16
xchg
cmpsb
push
lods
iret
mov
sbb
pushl
das
dec
adcl
fidivl
lea
mov
add
jmp
lahf
scas
pusha
into
test
test
mov
out
insb
pop
sub
xor
pop
sti
imul
popa
inc
jbe
jmp
sub
dec
add
repnz
leave
dec
scas
mov
add
cmp
mov
xlat
sbb
lcall
jp
or
lods
push
lds
and
jp
test
dec
decl
mov
dec
mov
test
shlb
test
fucomp
mov
lock
jo
dec
or
jmp
jp
cltd
imul
pop
lods
and
inc
out
mov
outsl
ja
out
mov
jno
dec
clc
push
push
pop
fs
sbb
pop
ret
call
push
or
sub
dec
cmp
ss
xor
neg
imul
sti
mov
scas
iret
cmp
add
jge
daa
andb
notb
int
cld
incl
fwait
mov
pop
cmp
adc
mov
mov
sub
sbb
call
dec
popf
add
movsl
stos
cmp
and
mov
sub
inc
out
mov
inc
clc
incl
inc
mov
jnp
adc
nop
pop
cs
pop
mov
cli
inc
mov
lahf
pop
sbb
jmp
fsubrl
push
add
cmpsl
sbb
xchg
icebp
in
jno
ss
and
loope
imul
fnstsw
inc
sub
aam
lcall
push
out
sbb
jle
dec
xchg
fs
int
pushf
imul
xor
cld
sbb
cwtl
sub
ret
ffree
dec
arpl
mov
xor
mov
cmp
mov
decl
dec
mov
rclb
mov
adc
arpl
add
jmp
leave
jge
sar
push
mov
ds
cmp
dec
adc
add
dec
sub
out
int
inc
mov
decl
xor
nop
cmc
stos
jne
cs
sub
scas
add
adc
decl
or
je
loopne
xor
xchg
jno
jecxz
jo
jb
aam
jmp
sub
iret
adc
gs
cmp
fiadds
loopne
les
push
cmp
cmp
jo
imul
fdiv
repz
mov
push
shlb
dec
bound
mov
pop
je
push
lcall
sti
lods
mov
dec
dec
loopne
add
shrb
incl
js
stc
or
or
cmp
andb
jnp
jmp
icebp
mov
push
ja
ljmp
pop
js
jg
ds
jp
clc
aad
ja
dec
enter
dec
xchg
call
mov
or
mov
stos
mov
mov
decl
arpl
dec
xchg
fisttpl
imul
stos
rclb
mov
lods
sbb
pusha
xor
clc
std
loopne
ja
test
mov
jns
cltd
js
pop
sbb
push
sbb
fstl
inc
mov
mov
out
lcall
lea
scas
test
mov
aaa
movsb
cld
and
jp
add
mov
jl
aam
test
mov
enter
jb
test
int
lcall
mov
divb
xor
nop
adc
or
adc
mov
pushl
ja
pop
test
add
cmp
mov
gs
out
stc
stc
imul
call
sbb
rorl
sub
cmp
lds
mov
xorl
pushl
int3
and
ficoms
cmp
cwtl
add
jle
shlb
lds
push
pop
sar
ja
cmp
data16
mov
aad
adc
icebp
int3
cwtl
cmp
ds
sar
ljmp
jp
pop
aad
das
jnp
nop
sbb
nop
into
pop
push
adc
fildll
push
pushl
cld
jg
jle
mov
jl
mov
mov
arpl
push
incl
daa
xchg
fnstenv
mov
hlt
sti
mov
dec
es
dec
iret
and
lea
decb
decl
ficomps
leave
jns
push
xchg
pop
sbb
xchg
xchg
pop
sbb
aas
inc
push
mov
dec
pop
pop
mov
mov
cld
inc
outsb
inc
xor
test
addr16
or
inc
push
cmp
push
jno
and
mov
jg
mov
ficomps
add
sub
fsubr
or
cmp
jb
adc
incl
inc
dec
push
pop
pushf
repz
repz
in
rcl
ljmp
addr16
fdivrp
cmp
xchg
cmp
dec
lods
adc
cmp
test
pop
dec
idivl
call
je
cld
push
xchg
fisttpll
scas
jne
jle
dec
push
movsb
inc
push
hlt
ljmp
mov
adc
frstor
insl
test
mov
incl
sub
xchg
mov
int3
lea
sbb
pop
pop
adc
call
xorl
sub
pop
inc
mov
daa
or
and
sbb
cld
fdivrs
mov
in
test
mov
daa
sub
stc
arpl
out
xor
mov
and
nop
push
call
cmp
mov
ljmp
mov
sub
fs
mov
js
rcr
dec
push
mov
mov
lcall
mov
mov
dec
push
and
mov
or
call
adc
mov
push
and
clc
inc
push
sbb
xor
scas
in
mov
xor
dec
incl
pop
pop
call
pop
jb
jl
nop
cmp
add
arpl
cmp
lock
dec
cmc
dec
in
ja
stos
push
mov
fsubrs
out
jecxz
pop
ljmp
pop
adc
in
push
testb
inc
sar
incl
sbb
sarb
cld
jns
cmp
xchg
scas
cmp
dec
aad
std
lods
popa
pop
shlb
cmp
int
fidivrl
push
sti
lods
pop
xchg
movb
add
mov
das
test
fisubrs
iret
pop
lock
mov
fcomip
fisttps
xor
jo
pop
xchg
fisttpl
jle
enter
cmp
loop
dec
mov
dec
clc
sti
fs
mov
and
push
sbb
in
pop
pop
imul
jmp
es
mov
movsl
mov
inc
dec
push
outsb
pusha
shr
inc
test
xlat
lcall
push
dec
jae
test
aas
dec
sbb
lret
or
jg
pop
lods
sahf
repnz
bound
gs
outsl
jl
insl
inc
xor
xchg
ret
cld
scas
jbe
divb
pop
push
jg
push
or
subl
jns
faddl
push
xchg
shlb
fwait
inc
xor
shlb
incl
out
std
xchg
rclb
sar
mov
out
xlat
push
bound
fidivrl
cmpsb
rcrb
xor
sub
or
and
xor
ljmp
mov
adc
aam
ljmp
push
inc
outsb
cmpl
push
in
mov
pushl
cli
into
mov
xchg
psubusw
cmp
inc
sub
movsb
lcall
mov
mov
lods
cltd
jne
xor
or
and
outsb
pop
mov
sar
pop
xchg
mov
mov
loope
mov
out
lcall
ds
out
mov
pop
dec
mov
in
insl
adc
pop
xchg
dec
popa
and
jge
mov
push
iret
jo
sbbb
loopne
inc
mov
data16
call
ret
pop
sahf
popl
and
jp
enter
sub
movsb
sub
xor
mov
pushl
push
popf
outsl
xchg
je
mov
push
stos
push
push
adc
mov
and
mov
xchg
aas
mov
cmpb
or
cwtl
out
pop
dec
pop
mov
mov
int3
daa
sbb
and
jae
scas
jnp
sub
sub
inc
push
gs
pusha
loop
xor
pop
adc
jmp
leave
add
decl
xchg
sub
shlb
jno
add
bound
dec
lret
data16
lock
ret
out
repz
sbb
decl
rorb
out
andl
setae
movsb
loop
sbb
enter
lcall
mov
and
in
ret
xor
sbb
push
sub
dec
mov
lcall
jae
push
inc
mov
mov
jp
cmp
int
ljmp
stc
decb
inc
ja
insl
mov
mov
mov
mov
call
jp
ljmp
xor
inc
lret
xchg
andb
daa
sub
pop
mov
scas
xchg
mov
mov
or
ret
jg
sbb
pop
mov
repnz
mov
pop
adc
cld
icebp
inc
flds
adc
ret
xor
test
insl
hlt
pop
in
xchg
or
clc
ljmp
test
push
xor
ljmp
inc
andl
test
lret
pusha
ljmp
xchg
les
or
fcmovne
popf
push
das
fwait
icebp
dec
neg
sub
push
outsl
push
pop
std
cmp
imul
sbb
call
sti
pop
pop
cmpsb
dec
xor
cmp
jmp
sbb
jle
adc
cmpsl
fdivr
inc
mov
call
rcrb
mov
cmc
mov
fcompl
mov
xchg
inc
addl
loope
xchg
lret
cmpb
cmp
incl
cs
sub
mov
out
sbb
insl
ja
mov
jecxz
push
pop
jg
call
jge
xchg
call
pop
push
dec
or
cmp
shll
cmp
jmp
test
mov
clc
test
push
cs
jne
arpl
dec
cmp
and
ljmp
scas
xchg
or
cmp
cld
xor
and
movsl
insb
dec
push
int3
inc
ja
push
enter
mov
out
cmp
call
mov
mov
lods
inc
mov
fisubs
pop
mov
sarb
loope
add
jmp
add
shl
imul
lds
ror
call
push
mov
pop
stos
jnp
jbe
loopne
mov
or
mov
sub
inc
loop
shll
stc
cs
dec
fs
lcall
mov
sub
lahf
cmp
or
jno
push
cld
xor
std
xchg
sahf
jg
jmp
arpl
jns
push
sarl
test
bnd
inc
pushf
test
pushl
call
sti
imul
xchg
loope
pop
push
dec
push
fdivr
push
mov
in
lcall
jae
lcall
stc
stos
dec
popf
aad
inc
mov
push
inc
loop
stos
cwtl
aaa
leave
ja
pushl
push
push
aam
dec
jns
cmp
daa
sbb
xchg
sub
jle
add
push
jmp
sub
add
stos
repz
aaa
dec
movsb
lds
out
xchg
jecxz
jg
pushl
hlt
mov
lahf
xchg
sbb
cmpb
sbb
insb
sub
dec
and
test
movsl
fcoms
call
ret
dec
dec
or
imul
das
sarb
xchg
sub
out
out
std
push
mov
mov
lcall
in
mov
nop
popa
xor
movsb
stos
jmp
sti
ucomiss
les
fldenv
mov
lcall
mov
adc
jmp
cltd
shlb
adc
lock
sahf
sbb
aas
jbe
decl
mov
xlat
xchg
mov
mov
pop
dec
pop
lcall
cmpl
adc
in
das
adc
jecxz
fwait
pop
loopne
imul
pop
lock
push
mov
ljmp
dec
int
add
es
mov
inc
adc
imul
in
decl
mov
pcmpeqd
and
lods
inc
jmp
hlt
xor
scas
inc
rcrl
inc
loope
pushl
std
ljmp
popa
in
pop
lock
outsl
cmp
add
mov
mov
cs
ja
addr16
jl
hlt
or
lcall
lcall
rcrl
add
pop
cltd
adc
and
dec
std
jecxz
pusha
and
std
sub
incl
movsl
int3
and
repz
dec
and
aam
and
test
jecxz
mov
sti
incl
xor
clc
inc
pop
nop
push
adc
push
xchg
repnz
sub
mov
sub
call
inc
pop
pop
aad
xchg
outsl
adc
in
push
and
inc
cld
mov
push
out
inc
jmp
decl
leave
cmp
dec
clc
xor
lock
push
fisubrs
por
bound
mov
cmpb
inc
dec
xchg
cmc
push
repz
ljmp
mov
dec
jne
and
lahf
stc
icebp
lea
xchg
dec
popf
inc
or
sbb
cmp
and
stc
ljmp
enter
rorb
movsl
push
repnz
pushl
add
lods
xchg
filds
stos
pop
fnsave
pop
gs
sub
lcall
xlat
sub
out
push
and
dec
jp
inc
mov
inc
andl
xor
jnp
out
clc
js
cmp
xor
add
test
xchg
inc
inc
popa
jecxz
popf
push
mov
add
incl
addl
in
ret
cmp
insb
inc
jge
test
les
out
mov
fcmovu
jo
insl
xchg
mov
xor
inc
dec
imul
ljmp
sar
push
sub
adc
adc
sub
mov
mov
test
jmp
sarl
ret
fwait
cmp
fcompl
popa
ss
lock
lcall
cltd
cmp
cli
call
and
test
push
cmp
mov
decb
add
sahf
dec
cmp
or
cs
sbb
je
outsb
leave
ficomps
mov
outsb
xchg
decl
or
xlat
shrl
scas
jecxz
jge
call
ja
jg
call
dec
pop
fildl
mov
push
pop
cmp
repnz
lcall
or
mov
test
jnp
out
adc
ss
sub
add
es
cs
dec
sbb
or
push
sub
sbb
jg
inc
adc
sub
dec
rcll
mov
test
adc
cmp
jns
arpl
ljmp
inc
pop
test
in
test
and
add
call
mov
inc
and
lcall
xor
mov
incl
push
add
mov
data16
pop
popf
dec
push
jmp
jno
mov
ret
jbe
dec
sbb
pop
inc
push
mov
xchg
inc
adc
sbb
ljmp
lea
cmp
jg
mov
xor
leave
idiv
shll
fildll
jae
mov
push
movsl
pop
hlt
cld
add
add
pushl
shl
fmull
imul
adc
sbb
jg
imul
xor
sub
orb
sub
test
outsb
shll
es
inc
popa
xor
jnp
dec
pop
lret
sub
nop
aas
leave
dec
xchg
dec
add
aad
pop
loopne,pt
inc
lcall
pop
and
or
inc
fiaddl
daa
ja
hlt
loopne
or
push
fldt
ds
jmp
inc
mov
lods
mov
shr
push
jecxz
push
xor
xchg
or
fdivrs
or
lock
clc
jg
outsb
clc
mov
push
lret
jne
test
inc
inc
mov
rcrl
push
adc
jge
cmpsb
scas
cmp
call
dec
xor
pop
sbb
dec
mov
xchg
mov
rcl
mov
jnp
mov
arpl
subl
in
sbb
push
push
sub
hlt
lret
notl
aad
add
mov
push
add
push
lock
pop
jo
mov
adc
leave
jg
xchg
jns
push
popf
stos
aaa
pop
pop
shll
inc
pop
sbb
cmp
dec
push
aaa
push
out
int3
or
gs
clc
jmp
daa
xchg
test
mov
lods
adc
sahf
iret
sub
movaps
jp
nop
jg
lcall
stos
lock
jno
jle
ljmp
es
in
mov
push
ret
roll
fdivs
pop
shr
jns
xor
dec
xor
mov
xlat
mov
js
call
int
jmp
aam
arpl
adc
in
mov
jnp
lret
mov
xchg
lea
sub
test
rclb
out
and
ljmp
jmp
dec
jno
or
mov
popa
fisubs
nop
sub
cmp
xor
xchg
jno
pop
cmpsb
insl
mov
lds
scas
fcmovnbe
out
pushf
cmp
repz
fucomi
popf
mov
rorb
in
pop
stos
aaa
ljmp
out
fwait
jl
aad
jne
decl
adc
loope
mov
lret
cltd
orl
add
jne
adc
ljmp
test
inc
popf
popa
jle
jge
jne
push
mov
scas
dec
adc
push
ud0
lcall
scas
hlt
mov
aad
fsubs
mov
cmp
call
daa
inc
add
call
adc
mov
inc
roll
mov
sbb
sbb
leave
test
movlps
add
rcrb
mov
and
gs
loope
js
lcall
push
in
iret
in
xchg
fadds
ja
and
mov
jmp
frstor
xor
insl
add
cmpb
cld
aad
shl
fcmovb
lret
lock
lcall
sub
fwait
loopne
fcompl
adc
out
mov
fs
sbb
inc
les
repnz
call
mov
test
cmp
mov
add
xchg
aaa
sub
ja
ljmp
pand
cmp
cmpb
stc
cli
sub
out
pop
push
mov
mov
nop
je
outsb
and
repz
icebp
jg
xchg
push
push
arpl
push
lcall
mov
je
mov
jmp
outsb
sub
cmovno
mov
jl
lret
cmp
movsb
cmp
sbb
outsl
loope
dec
inc
cmp
jecxz
loopne
jnp
pushf
dec
or
repz
sbb
inc
mov
in
and
ljmp
mov
fs
pop
andb
fmull
stos
sbb
cmp
inc
ss
leave
gs
dec
mov
push
rcll
je
leave
cmp
jp
mov
push
dec
addr16
jmp
shrl
fcoms
jno
adc
adc
xchg
divb
and
call
std
inc
out
and
sub
lcall
mov
imul
sub
cmp
nop
jecxz
fldt
lcall
sbb
loopne
mulb
outsb
push
mov
dec
lds
shll
mov
aas
out
rorl
decl
sub
cmp
xchg
sub
out
popa
mov
jmp
outsl
rorl
fnstenvs
and
sbb
and
pop
rclb
in
push
pop
dec
or
push
adc
nop
cltd
ja
arpl
jno
sbb
jecxz
xlat
cld
incl
lods
push
inc
xlat
shrl
jb
out
xchg
sbb
scas
adc
cmp
pop
testb
aaa
sub
adc
sub
push
jmp
ss
dec
stos
mov
fists
stos
mov
lcall
subb
fwait
addr16
mov
call
out
xor
sub
je
dec
test
adcl
adc
dec
lock
cs
lcall
xchg
jns
mov
cltd
leave
out
sbb
or
push
sub
jmp
int
ss
jae
pusha
addl
adc
sbb
pop
outsl
sbb
cmp
lahf
xorl
push
cld
pop
aas
in
lret
xchg
add
jae
dec
and
mov
mov
lock
jmp
addl
cmc
jle
mov
test
xchg
call
cmc
jge
hlt
mov
and
iret
hlt
and
outsl
stos
cmp
scas
repnz
adc
arpl
ljmp
ja
mov
dec
mov
stos
mov
icebp
mov
pop
test
push
cmp
call
jae
fadds
pop
or
inc
shlb
pop
inc
lcall
sbb
mov
test
int3
in
sbb
push
sarl
pop
scas
arpl
xchg
incl
push
and
dec
movsb
shrl
sbb
inc
sub
out
out
call
cmpb
outsl
roll
push
mov
jge
xor
arpl
mov
les
cld
lds
cmpsl
icebp
daa
pop
mov
or
adc
rorb
jmp
push
sbb
pushl
lock
fucom
xor
push
lea
pop
lahf
pop
mov
push
jl
mov
inc
mov
ljmp
call
sbb
add
xchg
or
mov
cld
int
jl
lods
scas
xorl
jmp
inc
insl
push
adc
subb
pop
xchg
push
outsl
lods
sub
idiv
jg
ud2
aas
jmp
mov
jns
xchg
psubw
sbb
test
mov
jmp
pop
jmp
xlat
mov
fidivl
mov
push
push
js
lret
test
mov
sbb
insl
int3
lock
daa
jle
fidivl
mov
call
daa
sbb
dec
leave
rcll
fmul
mov
dec
pusha
in
and
inc
dec
test
pusha
lds
gs
ljmp
cwtl
aad
xlat
push
aaa
xchg
jno
cmpsl
dec
jno
add
mov
xchg
int
cmpsl
lcall
mov
lods
pop
push
mov
scas
sbb
movsl
cmc
call
sub
pop
cmp
repz
adc
sub
sub
push
dec
mov
ret
jo
xchg
rolb
mov
je
mov
outsl
mov
insb
xchg
loope
pushf
push
js
rorl
test
jmp
or
test
hlt
dec
and
adc
sub
push
cmp
mov
pushl
loope
fwait
and
mov
ljmp
cmpsl
daa
xchg
idiv
incl
adc
scas
xchg
pop
sub
xchg
nop
mov
jecxz
lret
aam
and
jno
out
cld
scas
push
push
loopne
mov
arpl
fstpl
mov
sarl
jne
imul
mov
pop
mov
bound
dec
pop
call
cmp
add
mov
jmp
fmull
cmp
pop
jle
fisttpl
sarl
xchg
nop
idiv
ljmp
inc
dec
adc
mov
adcb
imul
call
pushl
ss
push
or
test
inc
jecxz
pop
xchg
ror
pop
mov
call
sub
aam
fnstcw
push
leave
adc
nop
pop
push
xchg
xchg
add
xchg
mov
cmc
rcrb
cltd
stos
or
cmp
popf
call
scas
call
inc
stos
int3
sbb
nop
xor
sar
in
jp
adc
fnsave
push
std
mov
jmp
lock
jbe
sub
sbb
loopne
movsb
cmovnp
fcmovnbe
out
lahf
repnz
aad
push
imul
cmp
pop
xor
scas
or
and
sub
scas
fsubs
cmc
sbb
ret
pop
imul
fxam
lret
cmp
jne
dec
cmp
jo
repz
cmp
addr16
decl
hlt
pop
dec
push
bound
pushf
ret
push
pop
mov
in
js
dec
das
fwait
pop
cmp
int3
xlat
add
in
aas
jmp
scas
jbe
jmp
sbb
out
shrb
jl
sbb
cmc
js
lock
std
or
cmp
cmp
das
dec
jle
sbb
push
popf
pushl
dec
cwtl
mov
sbbb
push
aam
sub
mov
or
jmp
xchg
ja
out
jo
stos
sbb
int3
aas
lret
aam
rep
in
addr16
in
aas
jmp
out
nop
sbb
mov
mov
xchg
pop
lret
or
cmp
xorl
mov
popf
fisttpl
inc
push
push
xchg
mov
or
mov
icebp
cli
xchg
insl
pop
gs
xor
incl
ret
jl
sub
pusha
mov
sub
dec
pop
or
inc
imul
lock
jg
loope
jle
cmp
adc
dec
mov
adc
ljmp
dec
or
popa
sti
sahf
cmp
jmp
cmp
frstor
mov
mov
inc
out
xchg
test
imul
jl
xchg
repnz
je
in
cltd
leave
sub
shrb
xor
pop
imul
adc
into
push
add
leave
fcomip
ds
sbb
subb
jp
adc
add
in
mov
adc
sar
call
sub
pop
daa
idiv
or
adc
popa
insl
out
sbb
mov
les
xchg
mov
aaa
xor
add
mov
dec
xchg
lret
ds
lea
or
jle
daa
xchg
shrb
xor
mov
imul
rcrb
and
movsl
mov
ljmp
shrb
push
mov
pusha
mov
or
push
push
push
push
jbe
decl
data16
je
dec
leave
push
inc
sti
lds
pop
pop
adc
mov
call
dec
mov
mov
sub
jl
dec
clc
loope
lock
call
fwait
ret
lret
call
mov
jb
ljmp
cmpsl
adc
jecxz
mov
lods
fcomps
sar
pushl
push
fdivrl
lret
xlat
mov
jbe
add
cmp
rcrl
mov
ljmp
scas
sysenter
push
stos
insl
fs
or
sti
jecxz
push
hlt
test
xor
mov
lods
xor
rcll
lcall
icebp
inc
mov
out
xchg
ja
push
mov
mov
fildl
pop
mov
or
dec
sub
in
scas
xorb
leave
or
or
cmp
pop
pop
stos
push
movb
inc
mov
xor
adc
mov
and
mov
loop
inc
ja
push
outsb
lds
inc
in
stos
fsubrs
jg
mov
lret
pop
test
insl
and
sbb
sub
jb
incl
jge
lret
xor
mov
mov
mov
out
jno
add
fisttpll
mov
test
add
dec
std
rcrb
pop
push
push
push
add
sbb
mov
call
jmp
movsb
jg
dec
and
insb
stos
divb
aas
neg
int3
lods
push
push
inc
dec
ljmp
jo
xor
jle
lea
sbb
int3
cmp
mov
pop
jno
push
or
shll
jmp
loop
xchg
cmc
xchg
test
mov
inc
mov
mov
mov
mov
adc
shll
jg
ljmp
add
in
adc
xchg
cmpsb
loop
lock
ljmp
sbb
add
xor
jnp
out
pop
inc
xchg
out
popa
test
call
cltd
jle
sti
das
and
scas
clc
push
xchg
jecxz
adc
mov
push
pusha
out
sub
shl
xor
out
subb
pusha
stos
push
add
imul
cmp
sbb
xchg
lea
sbb
add
and
scas
adc
jmp
xor
xor
push
int
mov
xor
emms
imul
shlb
fsubrs
dec
scas
sbb
sarb
incb
xlat
pop
xchg
push
test
scas
nop
cmpsb
adc
sub
jg
hlt
sbb
mov
inc
sbb
lret
cmpsb
xor
adc
stos
jg
gs
sti
pop
jl
js
imul
xchg
xchg
sbb
sbb
enter
pushl
push
clc
push
mov
repnz
and
lds
aaa
mov
mov
adc
incl
mov
repnz
loopne
rcll
out
out
aaa
repnz
add
xchg
iret
jp
jge
and
mull
push
out
mov
or
adcl
jne
ljmp
fs
fcomi
adc
xor
imul
in
add
loope
ljmp
cmp
mov
mov
or
test
dec
mov
clc
into
pop
adc
fcomip
shl
lcall
call
movl
push
scas
jmp
jno
mov
daa
setge
or
out
bound
loop
decl
lods
push
mov
mov
nop
cmp
rolb
ret
pop
push
in
fucom
inc
mov
and
xchg
pusha
loop
fwait
cli
pop
scas
std
mov
jmp
insb
dec
mov
rcll
inc
mov
mov
in
insb
fcmovu
aam
xor
inc
mov
subl
pop
add
ret
cwtl
add
fimuls
adc
lcall
rcll
adcb
pop
bound
push
fwait
jo
mov
in
test
push
cmp
pusha
lret
cli
mov
nop
loop
pop
and
xchg
xchg
adc
adc
lahf
mov
adc
pop
fstpt
and
out
xor
or
lret
jge
mov
cmpsl
inc
fstp
push
jno
sub
in
jg
pop
cmp
mov
lahf
icebp
pushf
movsl
clc
cmp
call
int
call
xchg
sub
jp
sarl
out
addr16
push
xlat
fisubl
mov
jo
and
mov
ficoml
jne
imul
call
test
sub
cmp
adc
lret
sarb
mov
pop
movsl
cmp
mov
sahf
incl
add
loop
jno
fdivr
sti
mov
fadds
xchg
mov
enter
jmp
sti
aam
sub
jnp
xor
jb
hlt
push
inc
mov
mov
cs
call
popa
out
pop
jecxz
dec
add
das
push
stc
xchg
pop
or
push
out
xchg
jmp
cmp
arpl
das
imul
mov
adc
dec
adc
add
mov
sti
inc
push
mov
stos
stos
pusha
or
dec
outsb
idiv
call
lahf
jae
rcll
daa
bound
enter
add
mov
push
pop
scas
xchg
dec
add
jmp
data16
and
jne
loop
xchg
dec
sbb
stc
add
sub
decl
cmp
sahf
adc
cvtps2pd
add
test
mov
call
add
cli
adc
incl
xchg
push
xor
lea
hlt
flds
icebp
fcom
mov
addr16
das
pop
cmp
out
call
mov
pop
icebp
lcall
sti
or
aas
mov
pop
mov
aad
add
movsl
sub
jno
pushl
loopne
lds
xchg
roll
fbld
sub
aad
scas
insl
xchg
cmp
mov
decl
mov
addr16
lods
dec
mov
jge
xor
shrl
call
or
cld
push
in
xchg
iret
mov
inc
and
push
xor
jmp
into
in
popf
ret
mov
add
fmulp
mov
loope
jg
les
fwait
outsl
rol
xor
inc
lods
in
ljmp
ljmp
ret
pop
imul
mov
jle
pusha
ljmp
movsb
or
pop
pop
mov
std
push
mov
repnz
cmp
adc
decl
repnz
push
jo
outsb
pop
gs
out
mov
imul
call
out
adc
inc
pop
push
or
lret
xor
mov
jecxz
pop
mov
mov
mov
jmp
push
jecxz
pop
xchg
pop
sbb
addl
imul
out
repnz
xor
jmp
pop
mov
push
jle
adc
dec
jge
in
or
aas
xchg
insb
bound
lock
call
mov
pop
adc
jne
pop
mov
xchg
jp
clc
enter
loop
dec
add
icebp
outsb
lds
cmp
lcall
and
inc
mov
fcom
fdivs
pop
mov
out
sub
push
mov
test
mov
pop
hlt
jmp
dec
in
add
push
cli
outsb
and
jb
mov
call
cmp
jmp
mov
enter
int3
in
adc
or
inc
call
into
pop
mov
adc
mov
pop
dec
rcll
shrb
stos
mov
ljmp
push
iret
mov
dec
repz
and
insb
and
test
movsb
cmpl
dec
add
movsl
mov
xor
and
mov
pusha
call
dec
mov
or
insl
cmpsb
sub
push
lods
mov
cmp
adc
fsubl
mov
mov
call
aad
sarl
mov
loop
addr16
loope
pop
scas
mov
xlat
sub
out
stos
adc
aas
cs
int3
or
fists
mov
sub
sbb
stc
call
cmp
dec
pop
mov
mov
mov
push
imull
adc
adc
in
pusha
sbb
lcall
dec
ret
mov
sub
movsb
insb
xchg
jge
jnp
push
lcall
cli
iret
loopne
out
mov
jecxz
ret
lret
mov
mov
call
movsb
cmp
jl
jmp
mov
push
aaa
mov
arpl
jbe
incl
icebp
es
out
and
and
dec
lods
stos
xchg
lcall
cmp
orb
out
decl
cli
decl
push
pop
incl
ja
sbb
mov
pop
mov
jb
mov
insl
fucomi
fwait
push
pop
xchg
jle,pt
mov
and
stc
xchg
mov
outsb
cmpsb
xchg
and
dec
mov
mov
cmp
in
clc
dec
jge
push
dec
outsb
ffreep
stc
shrb
jmp
insl
sarl
xlat
adc
push
pop
xor
test
inc
lcall
outsb
jg
mov
mov
cld
push
jecxz
mov
das
xor
pop
incl
fucomip
mov
je
mov
jle
and
sbb
push
add
lcall
cli
lock
call
repz
lret
xchg
out
xor
add
dec
add
push
cld
pop
xor
pop
or
sub
add
into
cmp
std
mov
inc
pop
das
xchg
push
leave
cmp
incb
cmovb
jl
je
hlt
imul
adc
jle
inc
cld
ficompl
aam
lea
add
pop
std
ret
dec
jmp
jmp
out
mov
or
mov
into
aas
lds
add
xor
sub
lock
adc
inc
out
negl
cmp
incl
outsb
push
arpl
jnp
cmpsl
add
bound
cld
int
mov
jmp
daa
dec
test
adc
push
out
jg
xchg
jle
insl
sub
mov
out
cli
js
test
push
xchg
aad
xor
ja
clc
mov
mov
mov
ds
pop
adc
cwtl
pop
lods
or
xor
sub
lods
add
scas
gs
decl
cmp
insl
lcall
inc
insl
fisubrs
push
sbb
ljmp
xor
xor
cld
jbe
aas
daa
repnz
popf
out
mov
repnz
inc
or
idivb
inc
loope
lret
jmp
je
mov
ljmp
mov
jno
sbb
sbb
ja
cmp
js
ds
push
cmpsb
addr16
push
test
inc
dec
cmp
cmc
adc
mov
dec
push
xchg
adc
cwtl
addr16
scas
movsb
pop
hlt
mov
std
fildll
pop
orl
arpl
in
xchg
fsubr
test
dec
scas
aaa
vmwrite
lcall
xchg
or
jae
and
shrl
mov
cs
ret
les
jb
lcall
lret
xchg
out
xchg
arpl
cs
cmp
add
jnp
sub
jbe
incl
adc
cs
adc
test
adc
pushl
cli
push
lock
push
test
adc
imul
jp
aaa
sub
inc
adcb
lcall
lods
int3
pop
cmp
push
pop
js
icebp
adc
mov
cmp
pusha
mov
lcall
je
imul
sub
mov
scas
mov
call
mov
mov
lret
rcl
xor
mov
leave
pusha
push
jl
mov
jae
je
mov
out
push
jmp
pop
outsl
jecxz
loopne
mov
lahf
loopne
rorl
dec
inc
std
movsb
lret
bound
inc
xor
shld
aas
xchg
jo
jecxz
xchg
xchg
and
jmp
mov
pmovmskb
lcall
inc
lret
or
cmc
loop
or
add
popf
push
dec
sbb
jg
mov
adcl
mov
sub
shrl
dec
xchg
fcmove
fs
xor
aam
cld
jg
jecxz
fdivrl
xchg
aaa
pop
enter
jg
scas
lret
pushl
stc
and
test
lock
aaa
out
inc
add
jbe
call
push
pop
dec
xchg
cmp
sbb
iret
add
mov
test
hlt
or
jmp
xor
lcall
gs
push
push
stc
adc
mov
lret
inc
mov
push
cmp
and
lahf
aas
jg
fistl
xlat
mov
hlt
lock
out
or
push
or
pop
jae
xor
jg
lret
fcmovnbe
insb
shlb
mov
daa
shrb
call
movsb
scas
xor
bound
xchg
xlat
das
sbb
jnp
pop
fmull
stos
mov
ds
xor
add
fisubrs
pop
test
push
data16
cmp
mov
push
ja
lods
dec
cld
in
inc
pop
fbld
jle
xchg
fadd
pushl
popa
push
dec
fbld
dec
repnz
fwait
pop
out
arpl
out
pop
dec
fidivrl
jl
outsl
or
mov
call
mov
loopne
jae
pop
mov
fsubr
or
push
lret
cmpsl
xchg
lea
ljmp
cmp
add
pop
int
mov
pop
lcall
pop
mov
inc
les
lods
cs
sbbl
xor
iret
das
mov
fsubs
adc
hlt
cmpsb
ret
decl
mov
sbb
dec
cmp
inc
xlat
sbb
imul
mov
mov
add
add
scas
pushl
aas
fs
sbb
sbb
push
insb
pop
in
shl
sar
lcall
lret
rorb
in
adc
cmp
imul
lods
ljmp
jmp
jg
sub
or
ss
das
mov
pop
jno
xchg
popa
pop
xchg
out
decl
and
sub
xchg
ljmp
out
xchg
hlt
mov
dec
fdivrl
decl
dec
sbb
shrb
adcb
push
icebp
dec
add
cld
das
out
push
mov
xor
pop
xor
jbe
icebp
cmpsl
push
mov
or
xchg
mov
cmp
cmp
push
and
adc
incl
imul
enter
sti
xor
popf
bound
jl
std
or
enter
and
lcall
mov
push
dec
andl
mov
es
dec
f2xm1
lcall
cs
pop
out
shlb
std
dec
shr
jnp
addb
mov
cltd
cwtl
push
adc
sbb
imul
loopne
push
jbe
dec
push
mov
inc
xor
mov
imul
cmp
incl
out
or
adc
mov
aas
adc
gs
aam
or
inc
aad
jmp
icebp
or
pop
dec
jns
rcr
adc
and
in
add
and
push
jnp
in
pushl
mov
pushf
adc
sub
frstor
jmp
roll
add
sar
call
cmp
sub
dec
aad
arpl
jle
ret
push
adc
pop
clc
push
int3
add
jmp
jno
lret
in
test
das
lahf
aam
repz
add
xchg
and
or
ljmp
ljmp
daa
mov
add
push
mov
jno
test
mov
faddl
jno
clc
notl
or
rcr
adc
nop
icebp
leave
dec
dec
xchg
pop
dec
cmp
ret
sub
out
popa
ss
pop
mov
lret
mov
mov
mov
inc
mov
lock
sar
incl
in
mov
dec
out
jge
push
mov
inc
inc
les
call
jg
xchg
inc
mov
jg
fstps
mov
cmpsb
in
in
push
lcall
stc
dec
mov
les
sahf
fdivrl
pop
shll
sqrtps
enter
push
call
xor
adc
mov
pop
xchg
dec
push
fdivrl
lock
pushl
inc
sti
add
mov
sbb
aaa
jg
out
add
xchg
stos
call
std
das
jnp
pop
add
test
pop
push
insb
ljmp
mov
mov
xchg
cld
pop
and
jmp
inc
cmpl
sub
sarb
aam
outsb
fidivs
fbld
clc
es
or
out
div
dec
add
std
xchg
popf
push
cmp
into
repz
pop
fwait
xchg
cmp
lock
ljmp
repnz
add
lahf
mov
and
dec
sbb
orl
ljmp
int3
stos
mov
je
shrb
xor
out
enter
mov
pop
add
enter
mov
outsb
arpl
fs
test
rcll
jge
sbb
fldenv
movsb
stos
push
nop
xchg
sub
jl
jle
test
xor
ljmp
stc
jb
xchg
in
dec
xchg
scas
ljmp
dec
lcall
fildl
addb
mov
lock
pop
inc
ret
xchg
xchg
mov
ret
or
into
daa
scas
cwtl
and
cmp
mov
xchg
idivl
xor
pushl
push
or
jns
mov
inc
jmp
test
scas
ficomps
dec
xor
jnp
sbb
jae
std
outsl
adc
sbbb
fcomps
inc
outsl
pop
call
ret
outsl
clc
and
testb
xchg
mov
jae
enter
adc
adc
xor
ljmp
push
pop
mov
call
push
pushf
sub
das
and
inc
sub
aas
mov
sub
dec
test
popa
jnp
jle
mov
xchg
mov
xchg
mov
cld
lcall
xor
pop
push
aam
add
dec
or
adc
pushl
outsb
cmp
int
dec
loopne
pop
lods
fisttpl
push
ljmp
inc
fcoms
pushl
push
mov
pushf
pop
dec
and
adc
dec
inc
mov
xlat
pop
imul
cmp
outsb
mov
xorl
cmpb
dec
sbb
mov
mov
jg
dec
dec
setge
insb
inc
fcoms
mov
enter
jmp
lahf
jns
insw
mov
mov
movsl
or
lret
call
or
icebp
jne
sbb
mov
xchg
mov
cmpl
fcmovb
decl
in
scas
lahf
mov
and
cmp
adc
ss
cmp
and
jmp
sarb
stc
push
sbb
cmpb
sbb
cltd
pop
jl
push
cli
xchg
sbb
sahf
clc
adc
xchg
lahf
fmuls
mov
arpl
xor
and
hlt
outsl
shlb
call
das
push
xor
jge
leave
mov
mov
das
inc
data16
dec
mov
xor
inc
mov
jecxz
xor
push
adc
mov
add
mov
mov
sub
out
adc
xor
jmp
sub
pop
push
mov
rorb
xor
push
adc
call
pop
call
stc
cmp
shll
xor
jmp
les
call
sub
call
mov
mul
shrb
pushl
mov
popf
dec
sub
shrb
outsl
or
adc
sub
call
cmc
mov
mov
add
mov
jmp
lock
mov
sub
xor
call
decl
enterw
loope
scas
add
pop
xor
mov
test
mov
dec
mov
pop
dec
jbe
xchg
cmp
mov
sbb
add
pop
dec
xor
cmp
rolb
or
adc
sbb
sbb
scas
cli
ja
aam
xor
pop
sub
in
jae
or
mov
mov
dec
add
outsl
xchg
mov
ljmp
jbe
std
xchg
cli
push
jle
stos
mov
shrl
push
cmp
lods
enter
lods
mov
mov
out
jl
mov
in
cmpsl
mov
push
push
rclb
and
sub
andb
sbb
sbbb
push
and
adc
mov
jmp
and
mov
js
cmp
jl
pop
scas
fsubr
int
adc
jg
mov
and
pop
lock
jp
sahf
inc
mov
xlat
mov
dec
adc
call
incl
sbb
pop
dec
cmp
xor
push
add
lahf
adc
in
pusha
call
fstpl
andl
xor
cld
or
xchg
mov
fisubl
sbb
or
lcall
insl
xchg
lods
ret
push
dec
mov
push
mov
mov
aad
outsb
int
aam
imul
xor
clc
dec
mov
cli
call
jnp
aam
popl
dec
push
jnp
lock
xchg
push
ljmp
mov
aad
popa
icebp
popa
push
push
aam
jp
enter
pop
stos
movsb
fisttpl
std
scas
clc
jmp
xchg
out
inc
cli
inc
fidivs
push
mov
inc
cmpsb
push
xchg
mov
aaa
mov
loope
dec
stos
sbb
fwait
lock
mov
sbb
sub
jmp
jmp
nop
adc
mov
jmp
jne
xor
jne
je
daa
mov
je
mov
in
pop
mov
push
pop
jp
or
andl
mov
lcall
inc
push
loopne
dec
jnp
or
rorb
mov
mov
pop
mov
cmp
push
push
push
imul
add
je
insb
mov
out
push
push
dec
mov
sbb
jl
repnz
int3
pop
xchg
sbb
jno
leave
push
pop
mov
insb
push
test
call
or
enter
and
cmp
and
repz
mov
icebp
out
xchg
adc
incl
cld
ljmp
es
imul
in
inc
push
xchg
cmp
decl
in
jmp
lcall
sbbl
inc
jnp
xchg
nop
sub
push
mov
fisttpl
bound
mov
lods
sub
add
cld
dec
out
pop
mov
jmp
das
pusha
jo
mov
mov
inc
arpl
repnz
inc
inc
jae
xchg
ljmp
pop
test
pop
inc
fldcw
popa
pop
ficompl
ljmp
mov
adc
jg
in
xchg
jg
pop
das
xchg
pop
loop
push
mov
mov
decl
add
sub
add
iret
bound
mov
outsl
subb
addr16
ljmp
lcall
dec
pop
mov
addb
mov
mov
outsl
clc
in
ficoml
inc
mov
dec
sti
aam
in
outsb
or
enter
ljmp
cli
call
mov
imul
or
scas
jl
int3
clc
cmp
cld
push
push
stos
fistpl
sub
repz
les
call
mov
fildll
add
loop
sbb
cld
and
mov
repnz
ljmp
inc
in
or
aam
int
push
sbbb
inc
add
mov
dec
ficoms
in
in
das
nop
cmp
inc
mov
gs
push
xchg
inc
fucomp
popa
mov
pop
int
movsb
call
sbb
pop
int3
sub
and
mov
loop
mov
jmp
repz
push
sub
inc
loopne
push
ds
adc
mov
hlt
pushf
insb
aas
pusha
push
inc
out
pop
xorl
jle
cmp
push
jle
or
jle
xchg
cltd
jge
nop
loopne
leave
in
cltd
mov
sbb
mov
dec
jecxz
mov
cld
xchg
mov
push
add
mov
xor
add
push
sub
mov
jae
or
repnz
pop
bound
inc
adc
dec
xchg
testl
loopne
jl
les
fs
push
pop
bound
mov
call
xlat
mov
jmp
add
cmpb
out
aaa
mov
out
add
adc
inc
adc
push
xchg
icebp
repz
aas
or
mov
out
push
arpl
or
cwtl
cs
mov
cmpsl
loopne
pop
inc
and
incl
imul
movsb
out
test
sbb
inc
mov
ret
pop
dec
stc
jno
call
pusha
sub
sbb
cmp
leave
addr16
aaa
iret
sub
xchg
sub
mov
repz
jg
pop
dec
aad
leave
rclb
pusha
decl
hlt
dec
decb
popa
sbbb
inc
cmp
dec
add
inc
mov
cmp
addr16
gs
test
daa
dec
mov
in
sbb
pushfw
bound
loop
ljmp
test
cmp
mov
pop
leave
stos
aas
cmp
adc
sbb
call
xchg
and
rcrl
stc
jne
std
xor
ds
cmp
xchg
dec
sbb
int
add
pushl
pop
mov
xchg
fildl
jo
cmp
pusha
lock
push
pop
sbb
push
xor
scas
push
cld
incl
add
mov
pop
test
fst
or
pop
jg
cmp
mov
clc
outsb
test
sbbb
and
push
push
adc
insl
lcall
in
ret
push
pop
rolb
push
sub
mov
call
xchg
or
mov
dec
inc
add
mov
outsb
lret
adc
add
paddusb
arpl
das
jo
insl
inc
add
ret
insl
vpsllvw
idivl
ljmp
mov
inc
shl
sbb
js
daa
out
jmp
adc
lods
push
arpl
pusha
mov
mov
outsl
cmp
mul
and
fistps
ljmp
xchg
mov
std
pop
mov
or
mov
js
inc
scas
sub
lock
cmp
ja
mov
hlt
and
jg
call
xlat
pop
into
push
xchg
fdecstp
add
pop
rolb
aas
scas
pop
mov
pop
iret
lock
dec
mov
cmp
jmp
sbb
cltd
sbb
mov
adc
scas
es
dec
pushf
loop
dec
dec
pop
xchg
jge
pop
movsl
ljmp
mov
sahf
dec
mov
mov
call
aad
insl
std
shl
mov
bound
fcmovb
jmp
daa
aas
imull
push
xor
mov
stc
inc
jno
divl
mov
pop
outsl
mov
sub
add
lcall
mov
js
jns
test
cmc
test
lcall
pop
xchg
fwait
xchg
fcompl
jmp
inc
xchg
inc
faddl
addr16
aad
adc
adc
addr16
aam
lahf
test
ljmp
inc
loope
mov
movsl
aas
jl
out
fisttps
cmp
cli
or
pushl
xor
xor
push
mov
enter
mov
jecxz
cmpsl
ret
lcall
ljmp
aad
sbb
gs
xchg
aad
xchg
dec
jno
arpl
push
lods
xchg
add
pop
cld
pushl
jnp
mov
push
pop
sub
sarl
push
fcomip
outsl
fisubs
inc
in
cmovge
out
aaa
lahf
cltd
mov
adc
cmp
icebp
xor
mov
popa
mov
jp
xor
dec
jnp
inc
push
inc
dec
push
cltd
dec
add
mov
push
jl
lock
in
mov
jl
push
loope
jg
lods
xchg
dec
inc
inc
pop
sbbl
aad
es
out
mov
adc
jb
lock
xchg
ret
lcall
dec
mov
fnstcw
cmp
mov
stos
mov
sbb
cmp
stos
jae
leave
push
mov
adc
cmp
call
vmovsldup
lea
jae
inc
cwtl
shlb
cmp
mov
and
mov
fcmove
cmp
mov
fstps
cmp
pop
jecxz
sbb
xchg
ljmp
loope
iret
js
insl
lret
and
fisubrl
std
mov
xor
fwait
mov
call
cmp
aam
in
fs
aas
lret
icebp
and
sub
or
or
sbb
mov
sahf
popf
push
mov
mov
push
mov
xor
cmp
inc
mov
mov
pushl
fdivrs
dec
sbb
loopne
movsl
sbb
jne
es
jecxz
je
cmc
cmp
jmp
outsb
sub
mov
sub
iret
vpsubb
dec
pop
movb
jmp
pop
nop
test
push
mov
xchg
cltd
call
sub
aad
sahf
repz
dec
fldt
data16
pop
fwait
pop
mov
daa
fmul
inc
jne
gs
shrl
jo
cmp
cmp
ljmp
loopne
fdivr
add
sbbl
call
adc
je
sbb
jae
add
call
fnstsw
sub
icebp
cmp
xchg
push
mov
xchg
push
loope
or
jb
jae
cwtl
xchg
adc
or
icebp
cwtl
mov
fchs
xchg
arpl
sub
call
pushl
outsb
insl
push
loopne
in
inc
xchg
es
insl
fcmove
mov
lock
mov
jo
inc
mov
clc
ljmp
in
shrl
sbb
mov
je
xor
decl
clc
adc
dec
nop
jg
push
inc
and
xchg
int3
lock
sub
mov
aas
jbe
popf
xor
jg
xor
mov
inc
cmpsb
inc
pop
scas
mov
into
mov
pushl
push
or
leave
inc
add
mov
and
lcall
jo
dec
lcall
decl
test
inc
jbe
xchg
stos
dec
sti
jb
push
mov
inc
mov
rcrb
decl
pop
add
cmp
movsb
add
sub
xchg
cmp
lcall
pushf
cmp
inc
pop
lahf
loope
sbb
pushf
push
add
jecxz
mov
and
cld
cs
dec
outsl
mov
mov
pop
jb
sub
inc
adc
rolb
flds
popa
push
pop
sbbl
push
ror
jl
test
sar
ljmp
push
cld
or
popf
addr16
mov
push
push
addb
dec
xchg
pop
decl
rclb
repnz
cmp
stc
sahf
mov
and
cltd
pusha
xchg
decl
dec
int
jle
pop
rorl
in
mov
stos
push
jno
loop
leave
lds
mov
mov
sub
push
rolb
repz
lahf
sahf
jmp
push
mov
nop
icebp
sub
sbbb
or
sti
insb
sub
mov
sbb
sbb
jmp
xor
pop
adc
out
in
inc
cltd
push
mov
testb
dec
ja
mov
rcl
fildl
dec
xor
pop
push
test
imul
test
mov
push
and
dec
sbb
sbb
fstpt
jo
cli
adc
or
insb
dec
movsb
or
inc
cmc
incl
add
inc
outsl
mov
insb
mov
leave
dec
jnp
ss
xchg
es
sub
jp
decl
add
push
rorb
adc
jne
lret
mov
data16
push
xlat
jmp
pop
pushl
std
cmp
xor
add
and
popa
pop
das
shl
mov
fidivs
lcall
pushl
in
xchg
jns
add
sbb
mov
push
sbb
imul
ds
out
or
mov
inc
lods
pop
mov
mov
xlat
ret
xlat
add
cld
mov
cmp
pop
cli
aam
outsl
addr16
jl
cld
jbe
jg
inc
sbb
cmp
adc
pushf
jb
call
outsb
sub
pusha
cmp
cmp
adcl
push
mov
ds
or
rorb
push
cmp
insb
add
pop
fimuls
mov
pop
sti
into
pop
jg
pop
sub
decl
rorb
cmpsb
or
dec
rcrl
fildll
pop
and
and
das
cli
sub
ljmp
inc
mov
hlt
adc
ds
or
jg
push
out
mov
fcomp
fdivr
xor
es
and
lret
and
enter
add
cltd
lods
loope
inc
and
add
int3
movsb
fcomp
int3
iret
xchg
mov
mov
mov
mov
mov
jl
fbld
outsb
pop
insb
cmp
mov
jne
std
jmp
ficoml
inc
data16
mov
cmp
jns
push
and
dec
inc
addb
out
pop
mov
nop
jae
inc
xlat
xchg
jae
dec
sub
jg
mov
paddq
lcall
popf
push
icebp
jle
pop
adc
push
jmp
push
popa
cmp
lcall
call
fstpl
stc
cmp
mov
cmpsl
mov
dec
or
testl
aaa
cltd
es
pop
decl
sbb
shlb
sahf
addr16
fwait
or
push
cs
data16
add
jmp
sub
dec
js
scas
jmp
jge
cltd
sbb
cmp
pushl
sbb
lcall
cmp
xchg
call
ffree
in
inc
inc
mov
mov
rclb
fdivrs
test
pop
les
and
shlb
cmpl
mov
xchg
sub
mov
int3
jb
fadds
jb
pop
add
add
icebp
pop
aam
pop
dec
jo
push
mov
lods
jge
and
jmp
ja
jbe
cmp
ja
nop
cmp
aam
and
xchg
mov
mov
inc
cmp
test
push
cmp
rcrb
lret
inc
add
sub
mov
dec
loopne
cmp
mov
test
decl
and
lret
test
addr16
adc
sbb
xchg
cmp
fcom
cld
incl
int
pop
enter
pop
push
sbb
bound
xor
int3
mov
inc
jnp
out
lcall
jmp
out
push
inc
or
dec
in
mov
sbb
mov
out
sbb
in
jb
mov
repnz
icebp
or
dec
mov
sbb
popf
or
or
cmpsb
push
jmp
call
pop
push
jg
push
inc
aad
pop
dec
bndldx
mov
cs
ljmp
inc
decl
cmp
lret
lret
mov
movsl
icebp
into
popa
sbb
jmp
push
insb
xchg
jg
decl
xchg
cmp
ret
mov
test
mov
or
std
and
in
mov
ljmp
mov
cmpsl
jmp
ret
mov
and
and
repnz
or
sbbl
fnstenv
dec
lea
aas
js
add
aaa
cmp
cmpsl
sbb
ficoml
push
out
idiv
incl
inc
movsb
adc
stc
mov
cmp
xchg
cmp
fcmovu
mov
mov
imull
scas
cli
incl
cwtl
lret
xor
int3
and
mov
add
pop
decl
icebp
call
mov
or
jp
jmp
xchg
adc
idivl
shrb
mov
arpl
pusha
mov
and
or
outsl
inc
addl
ja
je
add
incl
and
xor
mov
mul
dec
mov
ljmp
pushl
xor
add
jmp
sub
push
mov
jnp
cmc
push
push
sub
sbbb
jp
pop
mov
orb
ds
fs
cmp
cmp
push
std
sub
sar
repz
lcall
loop
outsb
and
jmp
inc
fildl
outsb
mov
mov
adcb
andb
pop
incl
fidivrs
pop
xchg
shlb
es
mov
push
rorl
decl
pop
mov
push
xorl
xlat
call
lret
cs
pusha
iret
rcll
inc
jb
aas
popa
push
or
jmp
or
jns,pt
mov
pop
mov
jo
mov
cli
sar
push
inc
pop
push
jle
sub
outsb
xchg
mov
mov
stc
ljmp
cmpsl
repz
xchg
repz
xchg
add
dec
mov
jg
es
fdivrl
das
xor
xchg
stos
or
or
cmpb
outsb
popa
js
movsl
hlt
call
repz
not
or
arpl
cmp
pop
mov
imul
fistps
xchg
sti
ss
mov
loop
cmpsb
sarl
dec
clc
add
sbb
mov
loope
decl
xor
decb
sub
js
cli
lcall
into
pusha
sub
nop
out
gs
cltd
lret
inc
repnz
push
test
mov
sub
incl
push
pop
adc
sbb
or
push
sub
in
popf
push
data16
jecxz
pushl
call
test
xchg
shlb
cwtl
mov
sbb
or
shll
mov
movsb
xor
cmp
pushl
jmp
es
sbb
ret
cs
in
out
adc
ljmp
xchg
jmp
cmpsb
lock
in
xchg
mov
xlat
jmp
cmc
push
insb
in
ds
xchg
jne
push
or
push
loopne
lahf
mov
dec
jns
lret
jne
das
lcall
xchg
sti
xor
adc
push
or
test
stos
in
lcall
jle
mov
xchg
movsb
push
jns
push
adc
and
dec
jb
push
ficomps
sbb
scas
push
in
test
ret
or
popf
sar
pop
xlat
pop
or
aad
pop
fidivs
aaa
iret
rcll
clc
pusha
data16
pop
adc
mov
fidivrl
movsl
mov
out
loopne
decl
mov
xchg
out
adc
add
push
and
inc
ja
and
xor
call
mov
jbe
add
cmp
push
mov
sahf
incl
rcll
icebp
push
jle
cwtl
mov
push
lcall
arpl
xor
sbb
or
mov
aad
mov
xchg
clc
lcall
aad
mov
leave
mov
cmp
jecxz
incl
add
adc
push
add
aas
scas
push
mov
lea
push
and
mov
inc
sbb
decl
movsl
adc
movsl
gs
repz
jb
js
push
cs
adc
adc
ljmp
pop
cmp
ljmp
shrb
sub
push
loop
cmpb
mov
mov
jmp
sub
dec
mov
xchg
or
sub
pop
adc
lea
add
pushl
out
movsb
outsl
icebp
or
int
sub
leave
dec
add
in
jae
inc
adc
mov
shrb
mov
scas
ljmp
cmc
dec
jo
push
mov
rorb
fisubrs
clc
lcall
dec
xchg
jge
gs
aad
sahf
shll
mov
xchg
cmp
decl
lock
or
sub
cmp
mov
adc
cmc
fwait
out
out
xchg
icebp
in
ffree
mov
jo
in
mov
imul
jmp
lret
adc
aam
shl
fisttpl
jge
mov
or
xchg
jmp
movsl
cli
out
cltd
mov
mov
adc
dec
pop
push
ljmp
jmp
dec
or
xlat
sahf
sub
inc
inc
sub
fcmovnb
pushf
or
sarb
fdivrp
idiv
jmp
in
fsubrl
lahf
sub
iret
mov
mov
in
dec
xor
push
jmp
call
inc
imul
adc
jnp
pop
aas
push
scas
mov
sub
xchg
xchg
jnp
sbb
das
jne
mov
in
lods
cmp
cmp
out
jmp
push
movsb
sbb
fwait
movsl
cmp
push
and
add
mov
add
jnp
ljmp
sar
mov
mov
ret
sub
shrb
scas
test
out
cli
inc
sbb
xor
cmpsb
mov
jne
in
nop
pop
jg
popa
lea
lds
decl
gs
fpatan
scas
daa
popa
xor
in
and
xor
sbb
inc
test
ror
pop
lret
insl
cmc
push
nop
push
xor
aaa
xchg
cmp
pusha
add
repnz
pushl
dec
inc
sbb
push
cwtl
fwait
scas
and
add
dec
mov
jle
roll
adc
jle
cmpsb
xor
decl
cmp
lock
sub
mov
inc
mov
jmp
das
or
out
incl
shr
outsl
jo
mov
mov
repnz
jp
or
adc
and
inc
decl
jmp
jno
cwtl
mov
pop
push
out
mov
push
adcl
pushl
cmp
pop
or
scas
xor
pop
add
pop
out
fs
xchg
fsubp
cmp
clc
cmpsl
std
add
shl
adc
cmpsb
inc
sbb
insb
sbb
push
jge
mov
decl
outsb
enter
sbb
xor
adcl
lea
ds
rol
decl
arpl
cltd
cs
stos
ljmp
or
lretw
testb
lahf
repz
call
jae
insl
insl
mov
lods
mov
mov
ja
push
xor
addr16
dec
ljmp
cmp
push
dec
jmp
mov
pop
enter
pop
das
cmc
sbb
aam
test
inc
int3
xchg
mov
and
repnz
repz
test
je
jne
scas
mov
lcall
sub
int
andl
rcrl
push
mov
call
jp
or
jmp
into
shl
sub
mov
rolb
fsubs
sub
test
xchg
int
aaa
call
jbe
ljmp
push
das
xor
and
lcall
es
mov
out
int
xchg
adc
inc
out
mov
jg
cmc
push
or
push
jmp
sbb
sub
jle
mov
into
out
xchg
sub
mov
and
xchg
or
rol
cmp
or
push
pop
mov
push
xlat
movsb
mov
mov
mov
je
sub
in
xchg
jnp
arpl
fwait
inc
cmp
test
dec
cmp
jbe
xchg
in
getsec
loope
ja
jle
aam
jp
out
mov
xchg
div
ljmp
arpl
std
and
xlat
cmp
or
push
fidivs
fistpl
incl
cmp
stos
push
sbb
daa
add
push
outsb
fs
push
ljmp
dec
hlt
sub
mov
xchg
ds
es
pop
aas
test
xchg
sbb
shlb
popa
sub
int3
jns
add
add
inc
mov
cmp
mov
fsubl
ret
jmp
xchg
jne
int
dec
inc
cmc
or
std
call
repnz
jle,pt
pop
mov
fimuls
pop
je
sbb
cld
sbb
lcall
data16
jg
addr16
lret
mov
mov
mov
jle
inc
cmp
sub
fxch
daa
fxch
sub
popf
ficoml
push
jns
cmpsb
jmp
pushf
shll
lahf
pop
andl
mov
sti
out
mov
push
loope
arpl
push
es
cltd
mov
roll
dec
pop
stos
sbb
mov
fidivs
ljmp
mov
xchg
xorb
xor
dec
les
sub
mov
mov
decl
div
sbb
lahf
push
addb
sahf
jnp
push
mov
xor
decl
int3
mov
popa
mov
jecxz
mov
lea
mov
pop
ret
push
test
jb
xor
jnp
dec
aaa
fdivr
mov
jnp
or
inc
jmp
mov
fadd
data16
push
lahf
call
jbe
insb
test
and
jno
fistl
data16
cld
xchg
aam
ss
in
pop
lock
jns
or
lods
outsl
sbb
ret
dec
in
adc
push
inc
out
adc
pusha
movsl
push
jg
call
jge
sbb
hlt
jecxz
sbb
ror
adc
pop
or
xor
add
mov
in
push
mov
inc
in
pop
mov
cmp
push
int
cmc
xchg
gs
xchg
jmp
fidivl
adc
call
mov
mov
adc
inc
sbb
push
enter
pop
sbb
addr16
std
aas
adc
decl
xchg
mov
cmp
dec
nop
sbb
nop
xchg
ljmp
call
dec
sub
fmulp
clc
xchg
dec
and
adc
push
mov
scas
jno
ljmp
pop
out
push
xchg
push
rclb
jecxz
out
es
popf
repz
mov
or
gs
push
pop
push
hlt
ljmp
xchg
inc
cmp
cmp
cmpsl
mov
imul
dec
in
jbe
loop
int3
xor
mov
mov
xchg
xchg
lds
lahf
stos
test
pop
lret
jns
pop
fldt
lock
cld
in
adc
subb
cmc
test
or
mov
ss
incl
cmpsb
push
mov
push
jle
out
bound
nop
repz
jg
and
lcall
dec
fwait
or
or
mov
push
ja,pn
mov
cmpsb
adc
mov
push
pop
pushl
jle
mov
mov
shll
filds
call
mov
xchg
xor
ficoml
enter
ljmp
push
call
xor
mov
into
xchg
in
rcl
inc
cmc
mov
push
lahf
aaa
cld
decl
loopne
pop
mov
sahf
jmp
ljmp
push
ja
adc
in
rcll
mov
pop
test
jmp
in
popf
and
aaa
data16
int
push
mov
std
sahf
movsb
xorl
or
push
fsubr
pop
movsb
adc
cmp
call
int3
jge
lea
leave
call
lcall
inc
jnp
das
mov
push
hlt
jae
xor
nop
adc
andl
movsl
imul
cmp
mov
push
aad
pop
push
fcmovnu
xchg
inc
das
inc
out
mov
push
and
pop
hlt
pushl
popa
repnz
lcall
loop
add
sahf
sbb
fadds
dec
cmpsb
sar
add
into
mov
xor
rorb
and
inc
dec
fcmovnb
int3
cmpsl
and
repnz
fcomip
push
lcall
js
fs
mov
and
jp
jecxz
mov
pop
cs
outsl
xor
pushl
hlt
pop
imul
je
jns
jecxz
pop
lock
jnp
add
loope
or
sub
fstl
adc
adc
fcmovnu
aas
arpl
sbb
shr
outsb
inc
cmp
fcoml
ss
pop
mov
cltd
jle
add
hlt
fwait
jmp
add
icebp
xchg
ret
sub
lcall
imul
inc
jge
hlt
sub
mov
insb
subl
add
fldl
enter
cld
or
push
and
push
lock
jno
addb
enter
ret
loopne
int3
xor
mov
decl
pop
lret
mov
ss
mov
xchg
fistpll
inc
mov
mov
test
hlt
push
fistpll
in
out
fs
mov
insb
jmp
mov
dec
lea
js
lock
xor
int
je
or
cmp
jae
test
int3
jo
jno
outsb
cli
jbe
test
mov
sahf
cwtl
icebp
lcall
push
mov
daa
xchg
sub
jl
out
inc
sbb
pop
inc
jge
xchg
sub
mov
add
pushl
in
mov
inc
dec
jb
sbb
stos
rorb
ljmp
add
lret
js
int3
xchg
sbb
fidivrs
sbb
repz
xor
fidivs
aas
inc
mov
sahf
dec
jne
push
aam
jbe
dec
inc
inc
pop
sbb
movsl
filds
fidivrs
test
lcall
ja
dec
jge
aas
jnp
testl
clc
xor
mov
testb
inc
xchg
mov
nop
pop
repz
jns
fwait
mov
call
and
add
or
dec
jmp
movsl
adc
jns
pop
std
lret
popf
xor
movsl
pop
mov
cmp
xor
lcall
je
push
loopne
pop
ja
je
mov
xlat
cli
stc
xchg
icebp
int
cmpsb
mov
decl
test
mov
in
pop
add
pop
xlat
out
daa
out
cltd
aaa
stos
std
in
jmp
mov
les
xchg
push
leave
xchg
adc
jmp
lds
or
push
test
test
iret
pop
jb
gs
les
iret
cmp
insl
mov
mov
icebp
sub
cld
cwtl
insb
push
call
outsl
aas
mov
cvttps2pi
fldz
leave
xchg
sbb
arpl
roll
ret
std
stc
push
stos
jb
ljmp
xchg
js
pop
mov
jmp
movsb
repnz
inc
test
rclb
imul
call
push
test
sub
addr16
pop
sub
incl
mov
jecxz
push
sub
jae
jb
dec
insl
mov
hlt
pop
repz
lock
hlt
call
cs
std
test
mov
out
loopne
ljmp
mov
mov
fs
pop
mov
movd
jmp
xchg
push
xor
xor
xor
push
pop
or
pop
stos
pop
xchg
divl
out
arpl
jg
ljmp
jg
pop
sub
xchg
sub
sbb
push
or
mov
ret
outsb
movsb
adc
lret
sub
mov
ficompl
out
jl
lcall
dec
sub
xchg
test
daa
mov
xchg
mov
push
sbb
push
imul
lret
xor
push
gs
add
cmp
jnp
xlat
xor
ss
pop
daa
rorb
ud0
lcall
je
mov
repz
cmp
dec
xor
cmpsl
dec
mov
push
sub
sub
push
mov
xlat
mov
sub
jb
decl
sbb
movsl
mov
pusha
rclb
xor
je
xchg
inc
mov
in
sbb
cmpsb
leave
mov
jle
mov
xor
fisubrs
daa
jb
repz
je
jmpw
decl
out
aad
clc
loopne
add
pushf
add
xor
imul
dec
in
xchg
sbb
push
ljmp
push
outsb
pop
cmc
jg
jge
xchg
mov
and
or
mov
je
int
jmp
add
insb
popf
roll
mov
jae
stos
sub
mov
jg
scas
fcmovnb
andb
test
cli
xor
stos
arpl
ret
dec
test
shrl
cmp
or
or
lds
jl
inc
sbb
imul
push
xor
mov
ljmp
outsl
sahf
sahf
js
mov
mov
scas
int3
ret
xchg
mov
mov
call
xorl
cmpsb
inc
pop
ljmp
inc
das
dec
push
loope
inc
sbb
imul
pop
cmp
pop
jmp
fistl
movsb
jmp
adc
fstl
decb
fistpll
and
int3
adc
lcall
xlat
daa
movsl
lret
xchg
mov
dec
sbb
cld
push
mov
negl
jg
mov
dec
mov
pop
mov
int3
sbb
xchg
je
mov
and
cmp
loopne
std
mov
or
lea
test
lret
popa
pop
push
cmpsl
shll
jmp
dec
xchg
mov
mov
dec
jb
cs
xlat
in
das
stos
xchg
cmp
mov
and
pop
lods
adc
lcall
push
repz
bound
sub
iret
mov
test
sub
loope
loope,pn
xchg
js
cmp
push
add
add
push
xchg
daa
adc
mov
pop
orl
incl
sbb
inc
call
mov
cmp
sub
rcll
inc
xor
pusha
faddl
cmp
sub
das
mov
push
and
roll
std
mov
fwait
push
pushl
adc
and
sub
ja
push
jb
cmp
sbb
and
dec
jp
aaa
push
hlt
cmp
clc
ficompl
mov
push
cwtl
pop
pop
lods
xor
or
lds
rorb
call
ss
mov
scas
sub
je
jmp
sbb
cld
xor
mov
xchg
out
test
mov
ja
lcall
mov
sub
iret
and
lea
outsl
cwtl
jmp
enter
decl
loopne
iret
and
mov
mov
dec
mov
repnz
xor
lock
push
loope
cmpsl
adc
notl
mov
fdivl
fwait
inc
sar
ljmp
outsb
push
cmc
scas
add
out
out
aam
mov
cli
xchg
jns
jno
test
adc
ljmp
icebp
loope
outsb
adc
pop
cmp
sbb
jbe
clc
repnz
arpl
mov
subb
xchg
and
jae
mov
cld
test
cli
adc
mov
mov
int3
cmc
imul
sub
incl
push
sar
mov
call
fmull
mov
mov
mov
jg
lock
popa
mov
push
or
push
enter
arpl
push
mov
dec
push
mov
rcr
mov
mov
cmpl
ds
or
and
les
stos
jecxz
mov
xchg
jbe
pusha
cmp
call
cld
push
mov
push
mov
mov
hlt
outsb
jbe
lcall
fldl
fistpl
rcrl
cwtl
mov
decb
mov
stos
je
pop
lcall
pushl
pop
imul
or
jae
sbb
push
dec
jge
fwait
out
push
push
cmp
imul
ljmp
or
xchg
test
mov
data16
negb
icebp
mov
or
popa
jo
xchg
shll
pop
mov
rcrl
xor
call
outsb
jecxz
cs
jle
xchg
in
popa
mov
shll
lock
jnp
cs
mov
incl
or
divl
dec
jg
pop
or
add
lcall
aam
mov
hlt
mov
mov
jg
outsl
in
nop
rcll
adc
xchg
loope
fists
loopne
push
popf
and
testb
pop
push
das
xchg
pop
lcall
decl
aad
lods
shl
pop
in
mov
inc
aam
dec
jmp
scas
clc
jg
jmp
loope
in
cmp
int
out
pop
push
outsb
pop
addb
lcall
push
in
mov
pusha
sbb
jp
sub
fists
cli
mov
push
sbb
lods
lds
xor
mov
fsubr
fbstp
jbe
dec
imul
sbb
mov
inc
faddp
dec
lret
imul
mov
mov
iret
loop
inc
call
add
sbb
cltd
sub
sti
dec
jno
inc
mov
lcall
jmp
lret
sbbb
out
mov
fsubrs
popa
jecxz
sti
std
scas
inc
dec
jo
outsl
mov
bound
cld
jno
iret
stc
arpl
loopne
cld
mov
pop
out
lahf
inc
aad
decb
push
pop
fisubl
out
inc
mov
arpl
mov
jle
jmp
aam
out
dec
popa
cld
test
insb
cmp
mov
jae
or
sbb
fldl
stos
mov
das
dec
rcl
add
andl
inc
decl
hlt
ret
push
push
jp
push
bound
push
mov
pushl
jo
pop
rol
pop
roll
ret
gs
insl
inc
pop
stc
decl
mov
ljmp
sbb
dec
fisubrs
sti
out
jle
ljmp
inc
shlb
in
sub
addr16
cmp
inc
movsb
and
je
addr16
incl
lods
lahf
bound
andl
jp
out
adc
sbb
mov
loop
int3
sbb
or
lcall
jno
fsub
call
add
sub
jecxz
loop
in
test
cs
call
mov
jl
lds
sahf
cmp
xchg
push
jns
std
xchg
or
or
lock
mov
inc
fldl
dec
test
fstpt
incl
jae
mov
adc
inc
imul
icebp
jne
dec
push
incl
es
mov
stos
cld
dec
data16
xorb
addb
fnstsw
jmp
movsb
mov
and
scas
lock
enter
add
xchg
test
rcrb
call
mov
fcmovne
ret
xchg
xchg
jnp
mov
int3
insb
daa
loope
fs
sti
in
mov
outsb
add
xchg
data16
pop
push
aad
fadds
movsl
out
cli
mov
insb
out
mov
sub
sub
cmp
pop
or
push
rcll
ljmp
clc
inc
push
pop
not
mov
scas
imul
xor
testl
stc
pop
mov
adc
leave
sbb
hlt
push
cmp
in
out
xchg
push
push
lcall
xor
dec
xchg
or
sarb
scas
pop
cltd
jno
xchg
sub
pop
ret
lods
sub
sbb
jecxz
push
mov
add
sub
test
push
out
jle
sub
and
cmpl
jmp
fists
pop
cmp
jl
or
dec
jg
xlat
or
push
mov
stc
push
leave
sub
sub
fs
sar
call
lret
push
sbb
inc
out
inc
das
sub
andb
push
mov
test
jg
shlb
shll
sar
jmp
scas
es
icebp
enter
iret
pop
mov
mov
rolb
xchg
cmpsb
add
jg
shrl
lods
ljmp
sbb
xchg
mov
mov
ja
stos
stc
jne
or
call
and
pop
adc
movsb
das
dec
inc
xchg
xor
push
push
inc
nop
sbb
push
jns
jmp
mov
gs
xchg
sbb
pop
xchg
test
movsb
int
into
fcomps
mov
ss
pop
ret
inc
or
and
push
jo
cld
jmp
mov
out
mov
es
imul
pop
pop
xchg
fidivl
incl
out
or
lcall
and
fisttpl
adcl
mov
and
flds
ljmp
shrb
cmp
subl
enter
sub
outsb
jle
xlat
push
aaa
push
fcomip
call
repnz
sub
fbld
push
and
ljmp
es
jle
stos
imul
dec
sub
in
push
cmp
add
or
mov
pop
dec
sub
jae
out
lock
lcall
enter
sub
cld
aaa
cmp
jg
or
sbb
mov
sub
outsl
or
push
cmc
and
jo
cwtl
add
or
ja
mov
jge
pop
push
mov
int3
shll
and
mov
cld
pop
cld
pushl
mov
xor
in
add
sbb
sbb
fidivl
pop
mov
push
test
shrl
out
decl
inc
mov
scas
dec
push
xchg
or
push
popa
add
aaa
cld
ljmp
mov
js
push
test
push
or
jne
sbb
mov
push
mov
mov
and
add
arpl
dec
pop
mov
jb
xor
cwtl
dec
push
cli
ljmp
push
dec
xchg
add
popa
inc
dec
xchg
in
dec
jge
inc
lcall
ljmp
cmpb
ja
mov
and
mov
pop
iret
clc
fstps
shlb
cmpsl
or
shll
mov
rolb
push
push
xchg
dec
test
cmp
add
sbb
jp
incl
inc
cld
dec
mov
cmp
test
mov
fs
sbbb
sbb
out
cmp
pop
or
xlat
inc
int3
dec
add
sbb
mov
pop
mov
dec
data16
xchg
dec
stos
jne
outsl
jecxz
je
mov
cld
jg
pop
outsl
add
sbb
js
dec
mov
mov
fsincos
js
mov
iret
push
push
in
test
xchg
cmp
test
lods
ljmp
cli
mov
jg
and
jle
sahf
add
pushf
pop
movsb
lock
call
faddl
mov
cld
inc
push
es
add
and
xchg
mov
inc
dec
je
jnp
xchg
push
fstpl
pusha
stc
push
cmp
fwait
and
fwait
aas
fcomip
mov
pop
and
jnp
mov
dec
push
cmpsb
inc
adc
in
jp
cmp
dec
frstor
outsl
sub
jnp
rorl
pop
clc
out
or
mov
and
lret
mov
mov
mov
and
arpl
out
idivb
pop
movsb
ret
sbb
repz
in
sub
mov
inc
ljmp
pop
xor
sahf
add
cwtl
xchg
push
pop
xor
pop
std
pop
lods
subl
sub
fdivs
data16
cwtl
decl
xor
ljmp
imul
lock
or
pop
xchg
xchg
lret
sar
fbld
in
push
jmp
pop
xor
pop
xchg
idivl
xor
decl
test
jp
daa
adc
jle
mov
fsubs
push
adc
or
inc
jg
push
std
inc
mov
std
into
and
imul
loope
data16
outsl
cli
ljmp
add
cmp
and
xorl
cmp
mov
lods
xchg
das
xor
imulb
inc
xorl
insl
imul
dec
lea
mov
clc
pop
in
fsubrl
loopne
cs
lcall
pop
jg
jp
inc
cmpsb
xor
cltd
pop
dec
and
ljmp
pop
dec
jp
dec
jo
insb
call
aam
push
cmp
pop
jg
sub
push
dec
jmp
mov
imull
jmp
pushl
andl
ss
mov
jae
inc
out
xchg
or
jl
xchg
in
inc
clc
das
cli
jmp
out
stos
test
dec
adc
push
xchg
or
lods
adcl
jo
xchg
mov
call
loopne
mov
sbb
jo
sarl
dec
jp
dec
mov
ret
pop
shll
incl
mov
addr16
shl
sub
xchg
ljmp
mov
popa
xor
adc
js
popa
sti
adcl
or
leave
xchg
xchg
jbe
jmp
sub
int
sbbl
loop
sbbb
jl
inc
or
adc
dec
sbb
decl
xchg
inc
cltd
fstl
mov
js
in
gs
fldt
pop
jmp
stos
inc
push
inc
mov
push
outsb
mull
fwait
dec
inc
std
sbb
cmp
call
sub
mov
inc
fimuls
outsb
scas
cmp
inc
adc
cltd
jl
jg
mov
push
gs
xor
lret
lahf
pop
movsb
xchg
and
or
mov
cmp
shll
push
mov
popa
mov
cltd
sahf
jae
push
insl
mov
pushl
pusha
imul
xor
xchg
fsts
scas
mov
mov
fdivr
push
cli
cmp
fidivrl
dec
and
add
jno
mov
mov
js
jmp
movsl
cld
xlat
inc
jecxz
lcall
lahf
sbb
dec
sarl
inc
mov
jno
push
jo
pop
js
push
clc
rorb
std
mov
pushl
out
mov
fcoms
push
out
shl
adc
cs
in
adc
sbb
js
pushl
int3
mov
push
jg
mov
push
mov
mov
stc
pop
dec
dec
getsec
adc
clc
pushl
pushf
clc
pop
dec
cmpsl
dec
aaa
loopne
inc
lcall
and
add
ja
bound
sub
jne
jbe
inc
push
jno
sbb
pop
lahf
jne
mov
arpl
out
add
jns
scas
clc
roll
idivl
rorl
and
xchg
and
scas
insb
jl
shlb
push
push
sbb
das
incl
cmp
push
imull
xchg
in
outsw
or
dec
gs
jp
mov
xchg
ljmp
jo
stos
cmc
cli
sub
es
sub
mov
mov
push
bswap
add
incl
dec
cmp
mov
mov
sub
cmp
push
xor
inc
in
loope
mov
ja
cmp
sub
gs
call
ret
xchg
pop
lock
call
fs
fwait
roll
loop
xor
add
push
scas
sbb
pushl
mov
inc
and
rorl
sbb
sbb
push
cmp
fisubrl
fdivrp
pushl
stos
sub
jmp
inc
stos
add
sub
push
cmp
add
xor
clc
call
push
adc
sub
or
push
scas
cli
push
mov
lock
adc
push
hlt
cli
aad
cld
aam
lahf
aad
stos
scas
cli
fistps
repz
adc
sarb
ljmp
decl
cmp
pop
dec
cmp
add
or
mov
jno
dec
push
stos
in
inc
decl
stos
mov
xchg
into
lea
push
dec
xorb
lcall
sti
sbb
add
lcall
repz
fstp
arpl
jmp
loopne
stos
hlt
dec
sti
jp
es
mov
aaa
inc
int3
subl
jmp
stos
jmp
pop
cmp
popa
and
xor
in
push
mov
jg
hlt
jmp
inc
sbb
push
push
inc
adc
out
ja
pushl
cwtl
mov
sbb
rep
sub
aam
push
cli
jl
sbb
jmp
adc
divb
jg
insb
jb
mov
push
out
and
adc
ljmp
imul
add
push
jg
and
adc
xchg
pop
jmp
dec
sarb
loope
cltd
mov
and
das
push
icebp
mov
outsb
and
fwait
push
in
lret
lea
or
add
shlb
and
les
inc
cltd
test
lret
dec
lods
dec
ds
xchg
push
dec
sub
pop
es
std
pop
ss
lcall
minps
xchg
aaa
fcomps
pop
testb
mov
call
adc
insl
int3
mov
pop
mov
addr16
lret
adc
adc
inc
imul
push
test
fdivl
fdivrl
xchg
jne
push
mov
lcall
out
fimuls
mov
popa
jmp
lcall
xchg
cwtl
dec
enter
call
sbb
jbe
xlat
jmp
cmp
add
or
fimuls
test
repnz
mov
clc
mov
fwait
jne
dec
add
fstps
dec
mov
inc
cmp
jae
push
imul
fdivp
out
pop
int
xchg
pop
call
sbb
jmp
aaa
mov
movsb
lret
insb
int
rcpps
mov
repnz
or
push
push
out
iret
ljmp
sub
in
cmp
or
pop
mov
paddb
inc
repz
push
jl
mov
and
sub
mov
mov
sub
decl
addr16
arpl
xchg
jne
push
subl
cmp
je
clc
lahf
sti
lahf
cmpb
iret
push
cs
lods
push
inc
xchg
out
push
loop
cmpsb
cmp
pushl
icebp
call
adc
pop
sahf
out
cmp
and
cld
mov
incl
jo
lahf
or
inc
les
lret
aaa
lahf
in
in
xchg
fstpt
shlb
add
mov
mov
pop
sbb
repz
in
popa
imul
push
shll
ljmp
inc
fdiv
mov
mov
or
jno
divl
incl
sub
mov
xchg
jae
movsl
leave
xchg
lods
in
sbb
or
outsl
add
cmpsl
mov
pop
mov
insb
push
mov
aam
or
cmp
scas
arpl
stos
dec
pushl
gs
dec
inc
fstps
stc
rcrb
stos
adc
sub
sbb
ret
mov
cmpsb
fnclex
decl
es
inc
scas
xor
sbb
rclb
shlb
es
clc
stc
xlat
cli
jmp
jo
sbb
pop
loop
cmpsb
pop
or
xlat
lea
cmp
fbld
dec
adc
cmp
lcall
test
jecxz
ja
lret
aam
lea
inc
pushf
decl
inc
adc
xlat
sub
cmc
mov
adc
adc
mov
pop
jb
bound
fcomi
pushf
and
xor
adc
cmpsl
call
push
in
clc
in
cmp
cmp
ss
jmp
imul
rorl
inc
int
lcall
fisubs
and
insb
add
pop
jmp
sahf
push
ds
pop
adcb
incl
ret
xor
dec
inc
xchg
subps
es
cli
and
outsl
call
jmp
outsb
sub
xor
pop
jae
dec
adc
mov
add
mov
test
xor
or
jg
push
cmp
addl
dec
dec
pop
jbe
mov
ja
xchg
mov
pushl
js
push
jmp
icebp
loop
mov
push
jno
mov
sub
jbe
subl
push
fmull
shrl
sarb
movsb
xchg
push
std
das
loope
or
inc
sub
adc
sbb
pop
sbb
movb
shr
call
cwtl
jp
cmp
out
mov
xor
adc
icebp
aad
aas
outsl
cli
ljmp
push
decb
out
xor
sub
sub
pop
jmp
je
push
loop
sub
mov
and
in
add
rcll
imul
sub
pushl
jmp
push
jecxz
rolb
inc
pop
xlat
dec
mov
gs
pop
mov
and
xor
sub
leave
jmp
push
mov
scas
clc
ljmp
xchg
stos
or
je
push
lret
test
aad
mov
dec
cli
fdivr
jne,pt
aad
into
push
pop
fsubs
pop
test
call
leave
mov
popa
or
cmp
cld
arpl
nop
dec
jnp
aam
jg
fiadds
pop
lods
add
jo,pn
adc
loopne
pop
imul
ljmp
cli
ret
push
adc
xor
add
lds
adc
xchg
push
stc
outsl
cmpsb
out
push
jecxz
adc
lds
jae
dec
cvtpi2ps
clc
pop
repz
andb
adc
ljmp
jb
into
lods
xor
sbb
sbb
cmpsb
xchg
xchg
std
push
js
std
aad
jae
pop
fsubp
push
bound
shll
mov
sbb
add
inc
push
push
sub
inc
xchg
insb
jns
lcall
xchg
mov
adc
into
fbstp
idivl
dec
aaa
pushl
cmp
mov
and
xor
dec
jge
fwait
dec
pop
xchg
mov
mov
jmp
jl
fmulp
xchg
sbb
add
push
xlat
push
mov
push
inc
sbb
push
fdivrs
cmp
popf
imul
add
decl
shrl
pop
jae
and
pusha
cmp
rol
mov
jne
pushf
sub
clc
push
mov
pop
adc
popa
and
inc
adc
sbb
jmp
adc
jne
mov
into
cmp
pop
pop
cmc
ss
jge
add
sub
lock
ljmp
pop
std
push
les
dec
jno
dec
ret
pop
sbb
add
aas
pop
pop
cmc
sbb
mov
pop
pop
jne
pop
or
push
cmp
and
xchg
ljmp
testl
push
filds
adc
lcall
sbb
xchg
in
orb
and
repnz
mov
data16
pushl
inc
fsubl
fwait
lret
push
and
aaa
fs
bnd
mov
mov
mov
test
sub
ss
lahf
call
ss
xchg
lds
incl
lods
fstl
les
and
out
mov
sub
and
nop
ficomps
mov
out
sahf
mov
decl
shl
insb
or
mov
shlb
je
mov
push
scas
cli
inc
mov
sub
jmp
inc
adc
xchg
xlat
pusha
lods
xchg
sub
popf
mov
ds
mov
mov
outsl
movsb
js
movsl
sbb
jmp
adc
fisubl
out
cwtl
mov
stos
hlt
cmp
sbb
sbbl
and
ljmp
mov
xchg
aad
pop
inc
and
dec
fidivrs
data16
dec
in
pop
loopne
call
decl
out
fimuls
xchg
fmulp
xor
inc
ret
hlt
push
cmpsb
xchg
lods
sbb
call
lcall
jnp
shlb
push
fwait
mov
jecxz
mov
mov
xchg
jg
data16
out
loop
out
adc
mov
and
inc
lret
mov
sub
adc
incl
jle
mov
cmp
or
sbb
insl
pop
push
into
push
mov
pop
cwtl
push
lds
ljmp
pop
mov
in
pop
cli
insb
xchg
fdivrs
pushl
push
sbb
cmp
jge
jb
xor
out
push
call
mov
cmp
xor
mov
test
testl
insb
insb
cmp
jb
int
fs
or
lcall
jl
sub
inc
in
adc
cmp
clc
in
fcoml
call
pop
add
adc
pop
inc
subl
shr
push
or
mov
xor
jecxz
pop
jo
pop
cs
out
call
clc
jbe
mov
outsl
pop
mov
pop
rcl
cmpsb
mov
inc
cmp
xchg
cmpsb
or
mov
adc
pushf
mov
test
cmp
ljmp
adc
loope
dec
mov
mov
dec
int
incl
test
and
shll
dec
adc
scas
and
sahf
leave
scas
push
enter
scas
js
fs
push
mov
ss
js
lock
stos
inc
andb
fcomip
lock
or
jne
ljmp
dec
mov
push
inc
sub
cmp
sti
pushl
mov
mov
cltd
and
xchg
divb
mov
and
incl
cmpsb
and
test
and
jno
scas
xchg
xchg
sub
in
das
dec
cmp
clc
test
test
stos
sub
dec
adc
outsl
cltd
call
cmpsl
movsl
rorb
jbe
jnp
jbe
adc
jno
inc
add
xor
clc
enter
mov
jge
pushf
in
andb
mov
inc
or
jae
fstpl
daa
decl
jo
pop
push
in
clc
adc
adc
ret
cltd
imul
js
pushl
xchg
stc
iret
sti
or
iret
fstpl
iret
fadds
ds
adc
adc
decl
xor
in
or
ds
add
mov
imul
negl
stc
xchg
xchg
jp
cmp
pop
fldt
das
cltd
lcall
push
pushl
jle
popa
lds
inc
gs
ret
cs
test
cmp
ret
sub
std
call
int3
lret
or
sbb
mov
adc
adc
aaa
jo
dec
hlt
loopne
sbb
imul
sbb
shrb
add
addr16
cmp
sar
pushl
addb
imul
frstor
xchg
cmp
js
xchg
mov
aad
cmp
xor
decl
mov
int
adc
push
adc
cmp
jno
or
jmp
hlt
gs
mov
lock
mov
pop
sub
aas
mov
xchg
or
decl
out
fwait
das
xorb
xor
popa
and
sarb
shl
fdivs
rol
adcb
pop
ja
push
testb
inc
in
mov
movsl
xchg
fnstsw
dec
sbb
lret
lahf
cs
lods
pushf
lds
xorb
ja,pn
ljmp
fdivr
test
jno
fwait
sbb
jg
in
icebp
inc
dec
lds
dec
sbb
popf
or
clc
push
pusha
sbb
xor
push
add
pop
sti
sub
jbe
mov
sti
jecxz
call
imul
and
ss
mov
scas
je
fdivrl
cmc
jnp
nop
pushl
mov
dec
adc
imul
pop
dec
sarl
xor
iret
mov
incl
mov
loope
scas
jp
mov
movb
outsb
orb
ret
iret
clc
cwtl
mov
inc
pop
inc
sar
decl
push
jno
shlb
mov
shl
ljmp
adc
inc
fildll
mov
push
clc
add
scas
xor
jmp
in
push
aas
mov
dec
jp
scas
push
pusha
out
and
aam
push
mov
xchg
icebp
fcmovbe
adc
and
inc
fsts
nop
sbb
sub
fldcw
pop
xor
bound
sbb
add
call
mov
out
insl
jmp
xchg
cmp
in
cld
inc
inc
movsl
or
fs
sar
pushl
in
fadds
jbe
and
push
cmpsb
in
cld
jl
cmc
ret
and
movsb
xor
jmp
pop
dec
push
jl
jl
mov
nop
jnp
les
dec
or
aaa
sub
call
adc
add
and
enter
mov
les
dec
cmp
mov
out
cmpsb
mov
mov
bound
pop
call
test
add
cmp
imul
sub
cmp
imul
mov
jle
add
sub
add
pop
mov
sub
sbb
fcomip
dec
pop
jbe
mov
pop
sbb
push
dec
push
pop
or
add
sub
dec
inc
out
add
fucom
in
aam
inc
push
push
sub
fcomps
imul
incl
ljmp
cs
jmp
add
imulb
incl
lods
in
pop
sti
inc
outsb
stos
aad
dec
mov
push
inc
mov
adc
dec
push
xlat
int
aas
pushf
loope
lods
mov
out
pop
vpmullw
sbb
cmc
inc
fisubl
shrb
mov
mov
in
pop
daa
out
inc
jnp
dec
adc
cmpsb
push
pop
or
rol
incl
popf
scas
jne
sti
leave
scas
lds
ret
test
xchg
jns
pop
cli
mov
mov
fistps
rolb
sbb
incl
mov
loop
std
sbb
icebp
push
jne
sbb
xchg
sbb
fists
mov
and
lock
inc
jns
mov
sub
outsl
jmp
xchg
fadds
mov
mov
add
push
sbb
roll
cli
mov
add
jns
sbb
cmp
xchg
lahf
addr16
adc
insb
cmp
loop
incl
push
inc
add
and
adc
push
mov
sbb
pop
cld
adc
or
jmp
cli
fsubl
mov
push
shlb
sti
mov
das
ficoml
mov
incl
jp
pop
jnp
fsub
mov
sub
popf
lods
push
arpl
lret
out
imul
loope
test
loop
mov
fcomip
call
adc
jl
cmp
mov
cs
shrb
mov
dec
and
jl
sub
cmp
in
dec
inc
nop
pop
or
scas
push
repz
xchg
lcall
xor
lods
mov
cltd
mov
stos
mov
loopne
mov
call
ret
sub
jnp
sub
sbb
iret
repz
jg
sbb
or
push
dec
fwait
call
addr16
loopne
js
cmp
or
aam
mov
jmp
mov
dec
or
pop
stos
repz
dec
lea
std
ret
call
sbb
push
in
pop
aad
cmpl
imul
jl
daa
mov
cmpl
mov
pop
pop
incl
incl
cmp
ja
test
jp
pop
outsl
ja
loope
pushl
sahf
out
cmp
xchg
test
xchg
dec
mov
js
test
testl
dec
and
aaa
jg
call
jb
sub
sub
hlt
gs
jecxz
je
das
mov
dec
mov
pusha
hlt
jl
pop
mov
inc
movsb
loop
push
mov
enter
adc
insb
or
stos
add
add
push
cmp
mov
pop
add
out
add
rcll
jmp
int
jo
jmp
cmc
fcomps
jmp
das
xorb
mov
aaa
fistpl
decl
in
adc
cli
xchg
and
test
fisttpl
notl
add
jmp
mov
fdivl
cmp
pushl
lods
jp
push
decb
std
stc
jge
sbb
ja
pushl
es
and
inc
enter
add
loop
mov
adc
mov
ljmp
add
rcrl
sar
xchg
lret
mov
adc
pop
imul
lcall
in
cmpl
mov
in
in
push
daa
add
inc
xchg
sbb
stc
push
cmp
xorl
or
out
dec
mov
cmp
fidivrs
mov
cmp
or
shl
dec
icebp
dec
movsb
fidivl
xchg
jmp
popf
nop
xlat
cmpsl
push
movsl
pushf
or
popa
js
imul
cmpsb
loopne
inc
dec
ja
clc
in
and
cmp
lcall
ret
lock
call
pop
aaa
push
pushf
push
sti
out
lcall
mulb
dec
fdivr
lcall
cld
idivb
movl
pop
lret
call
jle
cs
add
data16
jmp
or
cmc
xchg
leave
mov
jle
pop
int
pop
aam
mov
pusha
das
shl
scas
lcall
cli
ret
mov
hlt
decb
xchg
inc
lock
out
sti
mov
xchg
cmp
lcall
loopne
ficompl
ljmp
flds
add
jb
xor
sub
daa
pusha
pop
cli
rclb
fnstenv
test
dec
mov
xchg
xor
dec
or
dec
jmp
push
mov
movsb
loope
insl
push
xchg
sahf
jl
jae
loope
dec
sbb
lcall
mov
aaa
inc
cmp
mov
mov
lret
cmp
dec
xchg
dec
jge
into
sub
cltd
ljmp
js
and
lahf
adc
hlt
icebp
ret
push
dec
xchg
lods
mov
mov
fsts
rcll
jge
decl
out
cli
decl
mov
xchg
jp
fnsave
stos
fisttpll
push
popf
hlt
dec
push
imul
jbe
lahf
cmp
out
add
lret
mov
inc
lret
mov
push
pop
mov
fists
aam
pxor
or
ja
lods
leave
mov
adc
call
fimull
call
sub
jmp
jno
movsl
adc
and
lock
cmp
sub
arpl
stc
fsub
leave
inc
and
loope
rolb
add
cmp
out
add
jae
cs
jp
mov
ljmp
hlt
std
dec
mov
push
sub
mov
pop
je
dec
lea
in
les
iret
imul
incl
ltr
les
add
push
outsl
ds
lods
cmpsb
xchg
mov
add
call
hlt
xchg
pushl
std
lcall
call
xchg
clc
cmp
cmp
stos
nop
imul
jl
mov
jecxz
cmp
aad
lahf
imull
test
jl
out
jl
inc
dec
fisubrs
icebp
inc
xchg
imul
and
jle
sub
sbb
inc
loopne
sub
cli
call
xchg
popa
or
mov
lcall
test
inc
fistl
shrb
lcall
in
push
mov
pop
stc
fs
pop
call
xor
ja
xchg
push
cli
cli
jle
dec
leave
jge
xor
rol
mov
xchg
pop
adc
push
pushf
sbb
loop
jmp
js
sbb
lret
push
scas
cld
es
xor
repz
sub
orl
mov
mov
mov
mov
mov
jmp
add
pop
call
push
xchg
adc
dec
fs
stos
ja
sbb
mov
jl
xor
hlt
int3
dec
push
icebp
fwait
dec
outsl
pop
faddp
sahf
lret
fistpll
inc
test
in
lret
insl
pushf
xchg
xlat
xor
decl
pop
mov
push
adc
and
ljmp
loop
jecxz
xchg
out
xchg
adc
xor
and
jmp
inc
mull
mov
mov
clc
sahf
cmp
cmpsb
nop
je
aaa
sbb
jg
push
lahf
pop
test
clc
mov
mov
call
sarb
and
shrb
cld
movb
out
fiadds
xchg
xlat
ret
incb
fisttps
inc
pushf
mov
les
je
mov
mov
imul
rcrb
cmp
add
in
fs
mov
sti
xor
mov
dec
negb
jo
mov
insb
pop
xor
push
sub
or
cwtl
sub
jg
iret
lds
xchg
loope
cltd
inc
ljmp
sbb
dec
mov
cld
push
pop
jmp
stc
pusha
pop
lea
stc
inc
mov
addr16
call
add
out
and
and
xor
mov
aaa
subl
mov
pusha
cld
loop
mov
pop
inc
decl
rclb
lds
popa
push
loope
and
add
mov
pop
jmp
jle
lret
data16
iret
lods
jge
loope
mov
pop
mov
jmp
lock
pop
scas
sar
in
mov
shl
dec
out
je
lahf
push
push
and
dec
fidivrl
dec
add
jl
shl
push
sbb
test
push
nop
sub
jmp
sti
je
cmp
lret
in
mov
jmp
add
mull
add
xchg
lock
mov
cmp
jmp
lds
push
lods
sub
das
js
aaa
add
adc
dec
mov
pop
lds
lcall
inc
pop
cmp
dec
mov
cmp
adc
mov
mov
pushl
subl
push
fs
frstor
sbb
cmp
sub
mov
mov
addr16
pop
jo
inc
dec
mov
loop
adc
mov
xchg
sbb
rorl
or
and
popf
les
nop
adc
fnstsw
inc
imul
loop
pop
incl
enter
sbb
and
dec
mov
fwait
mov
mov
inc
test
call
sub
fiaddl
imull
in
sar
push
and
imul
in
insl
adc
ds
xor
pushl
rol
jmp
sbb
mov
mul
out
int3
push
lea
inc
adc
mov
jg
mov
mov
jge
mov
sbb
mov
repnz
clc
jmp
dec
jmp
lea
inc
addr16
mov
repnz
clc
cmpsb
incl
repz
and
mov
das
lret
aaa
int3
movsl
cli
lahf
and
iret
arpl
inc
daa
mov
iret
ret
pushl
rolb
cmp
mov
xlat
dec
shl
add
enter
incl
fsts
fcoml
mov
mov
mov
pushl
inc
mov
mov
repnz
nop
js
enter
jp
jmp
sub
add
stos
xchg
mov
mov
sub
mov
enter
cmp
pushw
dec
mov
outsb
jo
pop
adc
or
call
cmp
and
pop
rep
xchg
mov
stos
mov
jbe
jns
loopne
and
decl
aaa
pcmpgtw
jecxz,pt
sbb
mov
leave
addr16
pop
push
adc
loop
ljmp
mov
mov
and
lcall
sub
flds
dec
xchg
sbb
mov
call
or
jmp
sub
je
hlt
es
jb
test
xlat
pop
add
das
out
xchg
lcall
or
inc
pusha
dec
cmpsb
pop
add
jnp
push
lret
push
xor
dec
push
movsb
mov
lds
inc
fstpl
lea
mov
aas
leave
decl
xorl
jp
or
xor
imul
jno
sub
fistpll
mov
ret
hlt
addb
lret
js
call
inc
pop
sub
fcos
lcall
dec
and
cmp
ret
adc
sbb
add
call
loop
xor
push
gs
push
mov
xor
decl
push
jmp
fistps
scas
jp
out
stc
lds
sbb
fdiv
adc
daa
pushl
add
xchg
popf
scas
bswap
daa
and
mov
jno
leave
faddl
push
je
dec
cli
dec
jp
dec
ret
sub
rcll
inc
outsl
std
push
push
out
ds
push
inc
sbb
ret
call
loopne
pop
mov
test
jmp
ja
daa
stos
das
sub
xor
aaa
xlat
lahf
xor
and
clc
in
sar
inc
adc
sub
clc
scas
ds
je
mov
pop
adcl
out
cwtl
xchg
and
pop
sbb
xor
fcoml
mov
lcall
pushf
fcmovu
sbb
sub
fdivl
pop
and
fnstsw
icebp
jmp
jo
mov
jle
fs
outsb
int3
jnp
xor
push
ds
imul
stc
bound
out
mov
decl
insb
imul
jne
push
mov
insl
xchg
jo
push
jg
xchg
test
xor
lods
dec
test
pushl
xor
je
xor
cmc
inc
in
inc
sub
sub
loop
jns
call
icebp
dec
dec
lock
cmpb
lahf
mov
aam
adc
xor
incl
out
cli
loop
cmc
hlt
leave
adc
xchg
dec
je
cld
add
mov
sub
in
inc
leave
stos
lcall
mov
xchg
mov
jbe
or
cmp
mov
jle
ljmp
inc
jns
inc
pop
ret
and
push
pop
push
insb
stc
in
or
decl
push
cmp
jecxz
inc
movsl
sbb
clc
popa
lahf
outsl
mov
loopne
ja
pop
ja
insb
sub
pushf
or
cmp
popa
dec
xor
leave
jns
faddl
into
ja
fbld
mov
outsl
adc
mov
cmp
ss
lcall
mov
fwait
daa
push
repnz
and
fiadds
cld
sub
dec
mov
push
sbb
cmp
movsl
xchg
xchg
fisttpl
and
sub
incl
mov
mov
xchg
xchg
arpl
push
es
std
fsubs
pop
dec
aas
data16
dec
loop
pusha
mov
lods
lock
shl
or
out
decl
idivl
fldl
nop
pop
push
mov
imul
gs
mov
pop
or
jmp
pop
pop
aas
pop
in
adc
sub
pop
push
lahf
mov
leave
push
xchg
movb
stos
mov
mull
addb
sti
dec
popf
xor
or
frstor
incb
insl
bnd
jae
aam
adc
decl
in
cmc
cmp
sbb
inc
add
or
jmp
jecxz
test
cwtl
int3
popa
sbb
daa
into
xchg
dec
xor
mov
and
ljmp
call
or
cmp
sub
pop
arpl
cmpsl
cld
cmp
jmp
mov
jp
mov
mov
mov
cmp
mov
sbbb
inc
mov
xlat
jne
jno
ljmp
rcrl
roll
cli
in
xchg
jp
shlb
jns
dec
bound
lcall
push
icebp
inc
fisubl
jmp
sbb
xlat
fisubrl
jg
mov
mov
and
jg
sbb
fcmovb
mov
mov
daa
ret
les
mov
decl
add
pop
dec
ret
push
ds
icebp
int
jecxz
data16
jl
ljmp
add
jle
lock
add
insb
dec
call
in
inc
mov
mov
or
add
pushl
push
mov
sbb
xlat
lds
jae
cmp
lea
push
adc
test
pop
jb
loope
inc
popa
scas
and
push
je
movsb
lahf
cmp
repnz
xchg
shl
inc
lret
stos
cmp
fists
cli
mov
cld
mov
cmp
xor
jnp
push
push
call
pop
lods
mov
stc
fbld
es
push
sbb
sti
daa
test
push
jl
jg
je
dec
dec
or
adc
xor
out
jmp
daa
jno
mov
lock
call
jnp
dec
test
mov
inc
pop
lock
jno
inc
and
mov
mov
ljmp
inc
push
pop
inc
xchg
in
icebp
pop
mov
sub
decl
jge
les
lock
dec
test
popf
std
add
cmp
inc
add
pushl
cmp
enter
loopne
and
xchg
mov
mov
push
jg
incl
rol
mov
pop
std
inc
fmuls
cmp
adc
jp
mov
js
hlt
push
jge
decl
inc
repnz
sbb
mov
dec
cmpsb
sbbl
add
adc
sbb
out
jmp
pop
xchg
jecxz
cmp
mov
shlb
in
repz
inc
pop
mov
and
out
dec
movsb
add
sbb
xor
movsb
ljmp
adcb
icebp
cmovg
fstpl
rcrb
sub
fsubl
rcrl
test
enter
call
fsubrl
sbb
cmc
dec
jmp
mov
mov
dec
dec
insb
xchg
mov
incl
jmp
mov
pop
jns
sbb
loopne
shll
inc
mov
pop
sahf
sbb
mov
lcall
push
pop
aad
mov
mov
sbb
stc
test
aam
adc
adc
xor
mov
testl
push
jne
decl
fisubrs
dec
mov
aaa
mov
or
mov
inc
scas
mov
xchg
xchg
outsl
mov
incl
pushf
lcall
jns
jle
adcl
inc
jb
jno
imul
jmp
xor
testb
sub
pushf
mov
insb
sub
mov
out
mov
incl
loop
or
pop
lahf
faddl
pop
lods
insl
mov
pusha
pushf
dec
jbe
decl
pop
add
jb
jmp
mov
push
movsl
cmc
sbb
xchg
mov
mov
sarb
mov
in
and
ljmp
ror
dec
mull
fidivrl
and
decl
jp
stos
movsl
fs
fdiv
aaa
sub
call
repz
jmp
adc
out
aad
push
xchg
mov
into
pop
push
push
push
pop
inc
je
push
xor
jb
stc
lods
test
lods
into
jne
popl
mov
inc
ret
xor
les
addr16
push
jno
or
fidivl
dec
mov
fdivr
insl
inc
xchg
dec
cmp
scas
cld
mov
cmp
pop
stos
decl
aam
mov
or
and
push
mov
adc
nop
sub
test
push
push
mov
jp
scas
push
and
ljmp
jmp
test
ret
jmp
add
lods
xchg
loope
cwtl
and
lcall
sbb
mov
adcb
lahf
ret
out
fsubl
inc
adc
stos
mov
fwait
mov
call
push
pushf
insl
push
xchg
inc
aas
cmp
inc
pop
pop
into
pop
push
pop
cltd
enter
in
cld
inc
jecxz
push
popf
cld
pushl
js
adc
mov
data16
daa
add
add
sti
test
incl
cld
dec
push
aam
sbb
mov
xor
iret
or
stos
icebp
shlb
ljmp
or
inc
xor
inc
sub
out
scas
pop
andl
or
jb
pop
lods
mov
incl
sub
cmp
push
scas
sbb
lret
xor
jbe
push
adc
adc
out
adc
inc
xchg
xor
mov
adc
pop
out
sub
add
jo
jne
mov
jnp
jnp
mov
mov
jmp
test
dec
push
inc
mov
lock
xlat
fdiv
shlb
ljmp
std
cwtl
lods
jbe
adc
inc
or
dec
add
movsb
hlt
lock
xor
push
lcall
popf
add
lret
addr16
sub
loopne
and
les
or
incl
les
rcrb
decl
adc
fcoml
cld
push
movsl
ss
lahf
or
cmp
dec
cli
xlat
and
ljmp
test
pop
fisubrl
xlat
clc
cmp
push
enter
shl
mov
jae
lods
test
js
xchg
inc
push
mov
das
dec
sbb
das
ja
jl
inc
ja
icebp
push
pushf
adc
sbb
mov
sahf
mov
loopne
push
dec
push
shlb
and
test
mov
ljmp
std
fs
ret
jae
out
sbb
and
add
mov
sbb
xchg
gs
ljmp
iret
fisubrs
movsl
mov
decb
or
cmp
rcrl
aad
jp
stc
add
pop
aas
mov
in
hlt
das
sbb
mov
xlat
push
fs
outsb
mov
mov
enter
stos
inc
les
lret
rcll
jne
dec
inc
jbe
mov
cltd
sbb
scas
sbb
xchg
push
and
scas
mov
jecxz
stc
fldenv
in
call
cmp
fiaddl
push
or
leave
sti
popa
test
dec
push
cld
leave
insl
aaa
inc
rcll
sbb
jmp
sbb
insl
cmc
int
stc
sbb
movsl
pop
mov
clc
out
dec
addr16
js
sub
push
pushl
data16
fnsave
push
xchg
dec
loopne
pop
dec
adc
pop
push
jae
cmp
decl
pop
adc
pop
xchg
cli
sub
sar
lret
in
jmp
inc
add
jns
dec
sar
jmp
je
cmpsb
xchg
shlb
das
inc
mov
sbb
ss
jle
subb
jg
dec
mov
push
ja
push
jmp
sbb
aad
outsb
adc
stc
add
andb
dec
stc
push
jg
call
test
cli
aas
pop
sti
cli
test
sbb
fs
cs
xchg
imul
jmp
lcall
sbb
inc
jecxz
pop
sub
enter
int
push
decl
fldt
push
push
sub
mul
xor
dec
loop
mov
aam
mov
cmp
out
jmp
xchg
or
adc
add
stos
push
bnd
push
jg
outsl
clc
jle
inc
or
loopne
int3
in
rorl
and
fdivr
movsl
dec
mov
outsl
sbbl
test
or
fdivp
fildl
insb
sbb
mov
adc
stos
out
ljmp
mov
nop
andl
imul
jae
push
movsl
cwtl
dec
adc
outsb
stc
mov
fcomps
fistpl
in
incb
push
lret
cmp
lock
jle
pushl
hlt
mov
das
lds
push
pop
aas
stc
pop
xchg
test
insb
cmc
pop
bound
jmp
shlb
jae
jns
cmpsl
sarl
sbb
xchg
cmp
decl
mov
loopne
jp
xchg
pop
jecxz
push
leave
pop
cmp
out
jle
insb
mov
clc
add
test
call
adc
mov
pop
xor
rcr
jmp
sbb
sbb
xor
lcall
jg
add
fstpl
add
mov
in
std
cmp
xchg
orb
aaa
adc
lcall
mov
xchg
xor
mov
jb
nop
ljmp
shlb
xor
cmp
loop
mov
sti
mov
cmp
adc
sbb
call
dec
add
mov
fs
roll
inc
nop
mov
js
jb,pt
sbbb
push
add
repnz
cmp
mov
pop
jae
aaa
scas
push
cli
cmp
int3
push
bound
ret
ja
hlt
pop
mov
das
jle
lcall
inc
mov
imul
jae
jbe
repnz
add
dec
jne
jp
sub
lcall
inc
pop
inc
rcl
enter
aad
jmp
push
outsb
pop
imulb
xchg
push
pushl
mov
cmc
shll
fsts
or
out
lock
inc
or
add
loopne
pushl
mov
sarb
aas
push
das
push
je
cmp
xchg
jmp
leave
in
imul
rcr
sbb
push
cld
mov
pushf
mov
lcall
incl
jae
clc
enter
fincstp
ret
sbb
in
stc
or
decl
iret
dec
loop
xor
adc
addr16
jnp
pop
rcll
push
dec
lcall
jno
pop
insl
lret
sarl
js
xlat
in
rcrl
mov
bnd
sub
push
cld
mov
movsb
lcall
inc
adc
fwait
xchg
inc
push
shll
incl
outsb
bound
negb
or
stos
dec
dec
lret
pop
lods
scas
jno
das
ljmp
lret
jbe
popa
ja
movsl
insl
daa
mov
cmp
scas
dec
cmpsb
sub
jb
dec
in
mov
std
lcall
out
in
ret
popf
cmpl
movsl
hlt
out
add
mov
daa
jmp
mov
incl
mov
jne
xchg
inc
int
sub
aaa
iret
scas
cmp
mov
sar
pop
in
hlt
cmc
xchg
lea
pusha
stos
push
xor
jb
shlb
mov
fildll
enter
lock
aad
add
or
xor
mov
test
mov
jmp
pop
inc
xchg
jno
pop
jecxz
mov
dec
lock
or
inc
mov
inc
aas
lcall
pop
call
fldl
mov
xor
fs
mov
out
sar
pushl
decb
in
aad
lds
jbe
nop
lds
iret
fbld
ja
cli
je
lods
cli
jmp
sub
add
gs
add
insl
loopne
je
scas
cli
outsl
clc
or
xor
fwait
ds
inc
cwtl
out
mov
and
or
mov
ficomps
inc
fcoml
cs
and
inc
jg
ljmp
lods
and
inc
sub
fistl
sub
mov
mov
int3
cld
cmp
nop
scas
movsb
jle
lds
dec
jge
fdivrs
or
jecxz
enter
fucom
jle
jnp
movl
icebp
imul
push
adc
outsl
fwait
movsb
jns
ja
cmc
push
lcall
fbstp
flds
mov
ret
insl
loope
inc
shlb
jmp
decl
fbld
or
arpl
xor
repz
jp
dec
jmp
hlt
dec
sub
rclb
push
cld
pushl
fidivl
inc
xor
push
addr16
cmpb
ss
sub
mov
xchg
inc
dec
aas
loopne
cltd
sbb
fstl
imul
lods
ss
pushl
xor
cmp
mov
cmp
add
daa
popa
das
fdivrl
push
jns
fcom
decl
mov
sub
dec
loop
testb
scas
or
loopne
repnz
xchg
lods
push
loopne
cs
enter
jmp
cmpb
inc
js
push
pop
addb
repnz
aas
adc
cmp
call
test
aam
pop
xchg
xchg
mov
bound
mov
and
repnz
pushl
sbb
mov
pop
or
inc
sahf
out
mov
addr16
lods
shll
mov
adc
mull
pusha
popa
and
popa
test
xor
cmp
push
jp
enter
cli
mov
lcall
or
movsb
mov
xor
jg
inc
movsb
cmp
insl
adc
xchg
adc
jg
ror
xlat
nop
cmpl
bnd
or
negb
push
jns
sar
mov
add
cltd
mov
push
push
xchg
fs
in
imul
push
mov
call
movsb
jecxz
add
lds
call
dec
das
stc
jecxz
dec
dec
pop
cmc
fdivs
mov
sahf
lock
lcall
xchg
mov
jle
and
pop
cltd
mov
mov
mov
adcb
push
mov
adc
xchg
nop
xchg
inc
jmp
pop
fcompp
xor
dec
fistl
pusha
mov
xor
orb
fwait
movsl
dec
push
imul
push
push
jg
and
mov
add
add
decl
andb
inc
lods
imul
pop
or
mov
insb
fs
xchg
mov
sbb
push
sbb
insb
sbb
movsl
cmc
testl
mov
cs
jl
inc
leave
mov
push
mov
or
mov
and
jmp
aam
imulb
scas
testb
mov
in
jle
pop
cmc
jg
mov
or
test
pushf
xchg
shll
mov
mov
shrb
decl
pushf
dec
mov
push
stos
pop
sbb
dec
mov
insb
fsubp
loope
or
jmp
loop
jae
mov
jmp
out
cltd
sub
xor
std
cmpb
cmp
mov
pop
stc
xor
addr16
jnp
clc
and
xchg
enter
lcall
jl
scas
shlb
lahf
mov
jae
push
jae
shrb
sti
scas
sbbb
sub
incl
jp
and
cmpsb
out
dec
xchg
mov
sbb
js
jecxz
mov
jo
adc
or
ror
xchg
dec
sbb
orl
cmp
mov
iret
push
xchg
cli
lcall
inc
xchg
insl
xor
call
fdivrl
jo
rcll
gs
test
punpckldq
lock
adc
lcall
call
add
clc
and
and
pop
daa
cmp
ljmp
push
aas
or
shlb
xor
jecxz
lcall
or
push
mov
clc
sbb
inc
in
mov
movsl
shl
andb
test
incl
das
cmpsl
stc
sub
adc
add
test
push
ds
call
lds
mov
lret
push
mov
and
lret
push
enter
inc
hlt
jmp
xchg
or
pushf
sub
dec
sbb
jmp
sbb
dec
mov
sbb
daa
lahf
add
lock
dec
cld
xlat
cmp
ljmp
lock
bound
testb
shrl
imull
decl
rorb
sbb
movsb
inc
out
cmp
out
mov
mov
rorl
lcall
adc
mov
iret
inc
into
dec
enter
lahf
gs
loopne
jle
out
xchg
fsubp
and
mov
inc
jmp
mov
cmpsl
fistl
loop
sar
pushl
xor
or
mov
std
pop
jle
mov
jno
int
sbb
and
inc
cs
or
jge
or
adc
loope
sbb
mov
inc
flds
sbb
mov
sub
adc
out
inc
pop
dec
imul
adc
jae
mov
dec
xchg
ret
pop
ret
lods
adcl
and
and
mov
das
push
cmp
int
loopne
mov
cmp
mov
xor
das
sar
adc
loopne
and
test
push
hlt
jg
push
push
and
pushl
cmp
mov
xchg
hlt
lea
pop
loope
mov
adc
lods
cmpsw
aaa
inc
inc
mov
rclb
jmp
cltd
mov
add
ljmp
outsb
xlat
dec
inc
cmp
pushf
xor
addr16
cmp
pop
pop
pop
ljmp
shlb
push
pop
and
data16
test
outsb
testb
jg
incl
ret
and
fcomip
dec
or
add
add
xlat
inc
je
gs
or
ret
fsubl
popf
leave
fwait
cmp
loop
repz
jo
rcrl
xchg
pop
aam
push
shrl
fsubrs
pop
xchg
mov
mov
sub
sbb
clc
sar
call
lods
movsb
pop
ljmp
jns
mov
sbb
jns
inc
and
fnsave
incl
mov
cmp
outsl
aas
jbe
inc
push
les
int
adc
rcr
mov
xchg
cmp
decl
pop
fistpll
fsubr
daa
pop
jnp
loope
pusha
nop
fxtract
stc
xchg
es
push
add
jg
les
xchg
and
mov
imul
movsb
push
cmp
push
sysenter
and
call
and
xchg
pushf
movsl
and
xor
jnp
inc
xchg
std
inc
jne
mov
aaa
pop
cltd
sahf
sbb
es
ljmp
stc
es
sub
lret
mov
cld
scas
and
aad
test
cmp
cmp
test
ss
ljmp
aam
mov
imul
mov
jnp
filds
push
hlt
add
mov
in
lahf
and
ficoml
push
in
jp
out
push
test
jno
imul
jnp
mov
xchg
call
inc
subl
cltd
mov
mov
xor
incl
xchg
aad
adc
in
roll
popa
imul
dec
pop
pop
cld
mov
xchg
inc
das
and
inc
call
mov
sub
lock
incl
adc
mov
inc
sub
insb
daa
test
fcos
lcall
inc
mov
cmp
mov
cld
xchg
push
xchg
ss
dec
cmpsl
aas
rol
pop
ja
lock
ljmp
xor
and
ss
stc
sub
fs
push
and
mov
imul
dec
lcall
pop
push
dec
pop
decb
xchg
movsl
cwtl
cwtl
les
mov
pop
loop
jbe
jno
and
incl
in
xor
test
xchg
add
mov
adc
xchg
mov
dec
adc
loop
dec
cmp
roll
push
push
mov
add
dec
dec
fwait
inc
add
out
mov
xchg
jo
cmp
jo
mov
and
call
mov
call
stc
fadd
mov
sbb
push
mov
push
mov
js
scas
and
push
sahf
fiaddl
adc
sub
lods
jb
dec
push
call
outsl
enter
cs
pop
bnd
jnp
sbb
dec
add
ss
decl
jp
aam
out
in
rcrl
jl
call
mov
cld
mov
pushf
mov
lret
insl
jmp
std
daa
sti
mov
mov
pop
pop
nop
test
fs
xacquire
sub
mov
mov
scas
lcall
sbb
fdivrl
and
mov
mov
mov
sbb
adc
jmp
cltd
std
fnstenv
mov
pop
mov
add
add
cmp
push
int3
lds
cli
pushl
sub
call
mov
dec
push
pushl
sbb
jo
dec
nop
pop
jmp
sub
addl
fsubl
fwait
sub
lds
std
lcall
repnz
bound
sar
lods
mov
or
mov
and
imul
push
dec
jg
mov
aad
sbb
insb
in
cmp
pushl
xor
push
cmpl
cmc
mov
push
xor
xchg
out
pop
add
mov
loopne
cmp
out
lds
std
mov
lds
mov
sarl
call
cli
decl
lods
push
enter
mov
int3
mov
pop
out
push
jecxz
cs
pop
hlt
mov
addr16
sbb
inc
pop
add
out
push
mov
test
call
cmpsl
mov
add
push
popf
push
adc
shlb
sub
decl
cmp
in
xchg
pop
dec
andl
repz
mov
ret
push
mov
cli
pushf
jg
negl
mov
fbld
addb
cmpsb
imul
decl
je
mov
inc
jge
mov
xchg
ljmp
sub
or
pushl
add
dec
sub
in
xor
decb
mov
and
in
out
scas
cmp
add
cmpsb
add
xchg
dec
xchg
xchg
js
and
adc
loope
push
mov
decl
in
xor
xor
aad
shl
mov
or
test
lcall
hlt
pop
push
sub
les
out
fmulp
lret
loope
jnp
es
insb
mov
lods
mov
and
pushf
rorb
sbb
mov
inc
jo
push
dec
mov
xchg
loopne
sbb
cmp
add
imul
pop
in
mov
mov
jno
jg
push
fdivrl
addr16
xor
add
notl
cmp
in
pushl
cmp
mov
sbbb
adc
imul
testl
divb
incl
aam
sbb
mul
mov
lret
sub
xchg
sar
jmp
and
adc
nop
add
sbb
out
bound
scas
add
jae
mov
lcall
incl
aas
lds
mov
add
pop
xchg
sub
jo
aad
ds
cmp
dec
cmpl
mov
lods
lods
and
dec
inc
test
loop
pop
and
incl
sub
mov
cltd
cli
ljmp
pop
data16
leave
mov
test
adc
jns
xchg
frstor
jmp
adc
nop
lret
jmp
xchg
mov
add
sbb
pop
scas
sbb
ficompl
mov
insb
push
push
test
lcall
cmp
inc
pusha
mov
mov
call
push
sub
into
aad
mov
test
fcomip
lcall
mov
int3
push
xor
pop
push
dec
jecxz
mov
push
outsb
pushl
ret
jl
es
call
sub
decl
icebp
into
mov
jae
sbb
call
xchg
popf
mov
sub
cli
xor
adc
jmp
incl
and
pop
and
out
pop
in
push
mov
jg
pop
jp
movsl
or
fstpl
jmp
fldenv
mov
adc
daa
call
fs
sub
aas
popf
ret
and
imul
clc
outsl
add
fcmovu
into
adc
push
dec
push
ret
adc
cmp
pop
cmp
inc
and
push
dec
leave
mov
jnp
xchg
out
or
movsl
out
into
push
jnp
xchg
enter
sbb
dec
je
or
jmp
xor
adc
xrelease
lock
idiv
out
jle
fnstsw
mov
lret
lds
cmpsb
jg
decl
icebp
insb
mov
sub
xchg
sbb
call
aad
inc
inc
xlat
dec
dec
inc
pop
imul
popa
xchg
pop
out
inc
inc
dec
jl
decl
out
shrb
mov
push
ss
inc
scas
aad
outsl
mov
and
dec
adc
sub
orb
xor
jmp
stos
stos
mov
outsl
insl
cwtl
mov
adc
loopne,pt
cmpl
bound
sarb
pop
xchg
cmpsb
add
sbb
sub
jmp
in
loopne
push
xchg
and
push
leave
jo
jae
pop
and
push
xlat
ret
clc
push
jl
sbb
call
call
dec
pushf
sbb
pop
popa
jns
shrl
shlb
cli
aaa
std
pushf
gs
jl
xor
cmp
jo
mov
out
and
mov
xchg
mov
call
test
jne
sub
fstpt
xchg
jae
shlb
jmp
lret
jbe
iret
mov
push
gs
sti
xchg
lcall
shrb
arpl
loop
fiaddl
loopne
dec
or
pushf
sub
loope
mov
sahf
loopne
mov
jae
jns
push
roll
enter
push
adc
enter
push
loope
cltd
push
sub
pop
mov
jne
and
inc
cmpsb
mov
idivl
int3
push
cmp
mov
dec
pop
add
dec
gs
push
iret
icebp
push
or
pop
js
jge
pushl
cmp
or
test
cmp
test
or
rorb
negl
insl
outsl
xchg
icebp
repnz
xlat
sti
dec
jnp
incl
sti
xor
lods
cmpsl
adc
fldenv
mov
xor
sub
mov
cmp
inc
fs
xchg
ljmp
cld
sahf
cs
mov
call
or
inc
loop
outsl
sbbb
icebp
sbb
cmp
lcall
jecxz
out
adc
lea
mov
push
xchg
sbb
outsb
stc
mov
pop
or
js
push
mov
fsubrs
insl
inc
pop
pop
xlat
inc
cwtl
ljmp
adc
das
lret
inc
fcomps
or
dec
jp
jl
test
xlat
sub
lcall
mov
les
sbb
cmp
xchg
divl
leave
add
mov
push
roll
incl
subb
xor
push
xchg
jp
fdivl
jl
mov
pushl
leave
shrb
cmp
push
xor
mov
xchg
mov
mov
enter
sub
inc
pushf
pop
loop
and
xor
sbb
incl
jmp
adc
adc
xchg
and
xor
repz
call
pushl
mov
les
mov
xchg
aaa
std
les
xorl
ljmp
inc
ss
mov
and
push
push
mov
mov
in
andl
mov
int3
aaa
aam
repnz
xchg
add
inc
mov
inc
orl
loopne
incl
pop
jge
lea
in
cmp
sbb
stc
in
add
ljmp
movsl
mov
and
jmp
dec
out
push
push
ljmp
jmp
lret
in
jb
in
stos
xchg
insb
cwtl
cmp
cmp
daa
int3
das
mov
cmp
or
xchg
es
and
fimull
pushl
xor
les
call
dec
and
call
test
aaa
mov
and
arpl
xlat
xor
jg
arpl
rcl
cld
inc
ds
dec
aas
mov
inc
test
pushf
xchg
sti
lret
sarb
jg
sbb
jns
mov
sub
scas
cmp
sbb
dec
pop
lods
cmp
incl
pop
sub
cwtl
jns
cltd
mov
lret
cltd
mov
push
popf
mov
stc
adc
idiv
jg
jmp
push
cltd
sub
sub
push
jge
adc
cmp
stc
pop
test
cmp
outsb
cmp
into
sbb
cld
pop
jnp
adc
data16
sub
xchg
sub
xchg
mov
adc
std
dec
push
test
fcoms
mov
sub
and
cmp
scas
movsl
jae
jno
insb
ds
in
jo
inc
cmpsl
push
shrl
imul
inc
sbb
outsb
jl
mov
out
cmpsl
insl
hlt
mov
call
jne
sbb
jbe
shrb
lgs
push
addr16
cmc
sbb
push
sub
sub
test
dec
loop
cld
out
aaa
mov
loopne
cltd
pusha
cmp
decl
lret
xchg
add
and
repnz
dec
mov
testl
stos
mov
jl
mov
js
xchg
imul
ja
stos
cmc
dec
xchg
out
xor
mov
ds
push
pop
out
stos
cmpsb
ret
nop
call
popf
sti
sti
inc
cli
fcmovb
jmp
cmp
ljmp
pop
mov
xor
inc
and
iret
wbinvd
xchg
add
inc
sub
data16
or
dec
out
push
or
stc
test
mov
lret
std
shll
adc
xor
dec
xchg
ret
fs
cli
popa
or
and
fbstp
out
ds
mov
lods
pop
out
sub
jmp
js
aad
in
jo
inc
dec
adc
sub
and
mov
cmp
repnz
jne
int
mov
jns
jno
jb
xchg
push
dec
fwait
dec
and
movsl
std
jge
lcall
mov
fsubr
ljmp
jo
insb
mov
stos
scas
xchg
mov
push
test
outsl
clc
or
lcall
movsb
dec
lods
fdivrl
fadds
lcall
fs
push
xor
incl
or
out
xor
decl
sar
push
xchg
bnd
pusha
imul
xor
pop
out
mov
xor
ljmp
sti
mov
cmp
repz
fistps
inc
in
ljmp
dec
sub
ss
fidivs
cli
stos
arpl
test
insb
jo
sub
int3
sbb
push
add
cmp
mov
mull
mov
ljmp
movb
out
push
cmp
jae
cmp
xchg
loop
sbb
arpl
add
add
fldl
das
testb
pop
das
fimuls
lods
cmc
scas
idivl
mov
stos
les
call
fwait
xor
inc
jae
clc
push
jecxz
sbb
mov
push
xor
test
cltd
or
rclb
les
dec
sub
out
pop
xorb
pop
mov
mov
xchg
ljmp
jmp
outsb
sbb
inc
xchg
and
in
push
jo
dec
inc
jmp
sbb
cltd
jg
add
scas
or
adc
pop
iret
mov
rcll
sar
lcall
xor
or
dec
mov
add
add
jl
test
sub
incl
mov
and
dec
or
bound
iret
arpl
ret
mov
fwait
mov
mov
or
mov
in
lcall
pop
jle
xor
lcall
lea
and
lock
pushl
inc
movsl
mov
add
pop
push
ljmp
rcl
out
jbe
sub
xchg
push
and
dec
add
incl
dec
mov
sub
cmp
adc
push
jo
pushl
mov
push
sti
std
fisttpll
andb
inc
lock
push
cmpb
decl
mov
fistpll
lods
stc
add
iret
or
jle
enter
pushl
adc
scas
nop
dec
xor
insb
lods
adc
scas
mov
clc
ljmp
adc
xor
adc
mov
cmc
xchg
xchg
call
data16
mov
lds
bound
cmpb
sub
call
dec
push
mov
mov
imulb
mov
mov
jg
es
xor
sbb
push
add
ljmp
shlb
or
pop
popl
mov
cmpsb
in
mov
pushl
mov
lcall
inc
test
sbb
lahf
sub
sti
push
push
xchg
lcall
and
add
bound
add
decl
test
ja
mov
sub
push
mov
aas
dec
jg
js,pn
aaa
ljmp
decl
inc
dec
mov
and
repnz
mov
nop
popa
popa
hlt
sub
jmp
mov
mov
inc
fnstcw
cmp
push
push
in
aas
in
xchg
loopne
jmp
mov
data16
and
movsb
dec
pop
sahf
or
test
int3
insb
dec
sub
ss
xchg
inc
xchg
mov
les
push
fcomp
cmc
lcall
mov
jge
xchg
mov
std
inc
in
ja
push
mov
pop
ljmp
push
sub
jnp
lock
xor
add
js
call
add
dec
lods
xchg
aad
fldt
sbb
out
mov
dec
fwait
rcrb
mov
das
mov
or
cmp
xor
dec
shrl
xchg
lock
jle
xor
and
or
or
test
and
out
xchg
and
xor
repz
add
lds
xor
cld
orl
fisubl
sub
dec
mov
es
jo
mul
lds
les
dec
icebp
cs
aas
cmp
mov
mov
add
out
mov
clc
incl
das
xlat
xor
rclb
mov
push
lcall
mov
ds
dec
push
xchg
jecxz
adc
pop
hlt
ljmp
aaa
cmp
push
sahf
enter
or
es
ret
dec
mov
ljmp
pop
jno
leave
mov
and
hlt
test
std
mov
rorb
decl
adc
stos
les
repnz
dec
fstp
sbb
dec
cli
loopne
lock
mov
push
rcr
sub
dec
stc
mov
cmp
decl
sub
in
cmp
cmp
inc
fldenv
in
push
adcb
pushl
xchg
mov
cmp
shll
or
inc
and
movsl
adc
pushl
xchg
push
mov
dec
paddw
adc
jno
test
sar
pushl
cmpsb
jp
mov
push
sbb
cmpl
outsb
cmc
xchg
test
mov
scas
lret
push
ret
sub
dec
xchg
or
decl
mov
lcall
insb
pop
daa
or
mov
inc
int3
in
mov
out
in
inc
add
incl
scas
imul
js
fadd
ja
xchg
into
stc
test
popl
adc
inc
jbe
insl
xor
dec
sub
cwtl
in
pop
subb
and
jnp
mov
decl
cmpsb
pop
xor
fnstcw
xor
jo
cmc
int3
mov
lahf
repnz
insl
dec
popa
sbb
jg
dec
adc
pop
stc
dec
out
fadds
mov
xchg
fcompl
ja
loop
decl
xchg
jmp
or
xor
dec
orb
or
mov
loope
iret
sbb
inc
cwtl
mov
test
and
int3
cmp
call
cld
int3
popa
mov
outsl
xchg
adc
jecxz
sbb
movsb
nop
inc
cmp
fnstsw
popf
xor
adc
incl
fnstenv
loope
mov
mov
xchg
inc
sub
pushf
dec
push
clc
adc
inc
int3
loopne
out
pop
out
clc
mov
js
ffree
into
xchg
out
imul
scas
insl
das
imul
push
inc
mov
ja
cmp
pop
jo
enter
cmp
aam
dec
lcall
pushl
int
das
sub
xlat
js
jg
stos
ds
dec
lcall
insl
out
scas
push
call
scas
outsl
cltd
fisttpll
mov
ret
jbe
jb
stos
jge
xchg
ss
or
push
xor
loope
decl
or
subl
cmpsl
sbb
or
stos
ja
outsb
push
sahf
xor
outsb
rclb
mov
ljmp
nop
mov
sbb
es
xchg
add
jg
mov
repnz
jl
inc
jbe
lods
stos
sti
or
mov
mov
jnp
cwtl
mov
aad
sub
xchg
mov
test
or
ror
mov
mov
xlat
jbe
pop
insl
call
mov
and
lods
cmpb
dec
mov
fsts
push
test
xor
mov
mov
addr16
outsl
inc
cmp
push
pop
jne
xchg
dec
mov
stos
cmp
xchg
cmp
inc
mov
jg
incl
xor
add
mov
gs
shll
xchg
ljmp
and
call
xlat
out
sbb
pop
sbb
shl
icebp
mov
enter
xchg
imul
incl
aas
stc
adc
mov
jl
xchg
lea
loope
mov
es
pushl
jle
shll
cmp
pop
ljmp
lcall
inc
out
rolb
sti
hlt
jns
scas
inc
or
mov
and
les
xchg
lahf
push
sub
cld
out
mov
mov
ret
dec
lcall
outsb
pop
jecxz
sub
push
hlt
dec
jge
enter
ljmp
mov
decl
xchg
mov
popf
xor
xorl
jl
push
adc
fstpl
dec
and
mov
ljmp
loop
sub
scas
sub
add
loop
fmull
rolb
lds
int3
mov
push
xchg
push
sub
aaa
ds
sbb
mov
mov
out
decl
loop
pop
aam
mov
mov
pop
cmp
cs
ljmp
inc
iret
aaa
mov
pop
cltd
imul
adc
loop
fsubrp
cmpsl
loop
pushl
jbe
test
inc
sub
xor
cmpsb
fdivl
pushf
rorl
adc
cli
push
mov
lods
jns
jmp
jnp
sbb
lock
lds
scas
mov
ljmp
data16
mov
pop
lcall
push
loopne
xchg
gs
mov
cmp
jmp
cmpsb
loope
push
push
pusha
mov
mov
cmp
shlb
js
dec
xchg
stos
dec
movsb
push
jno
loope
decl
jno
flds
mov
cmpsb
out
cmpsl
in
fsubrl
pop
in
xchg
cli
ljmp
in
xchg
lahf
push
loope
std
jmp
aas
jns
adc
call
adc
push
movsb
lds
dec
add
or
test
sub
pushl
movmskps
sub
xor
dec
fsubrs
mov
or
insl
sub
incl
int3
mov
mov
aam
mov
push
push
dec
or
adc
push
dec
sbb
dec
test
imul
out
push
fwait
jmp
in
jg
pop
mov
xchg
adc
aaa
lret
sbb
jmp
aad
iret
push
or
pop
pop
shlb
outsl
iret
daa
test
xor
sarl
mov
in
inc
mov
inc
jns
push
xor
fisubl
incl
mov
inc
and
mov
es
icebp
out
lret
xchg
das
inc
pop
mov
add
clc
sub
cmp
push
cld
ja
xchg
cmc
lret
sub
popf
push
in
sub
inc
pop
inc
mov
xor
jg
clc
mov
call
jo
js
outsb
subb
or
mov
add
imul
push
add
or
push
push
in
gs
or
pushl
lds
psubsw
cmp
adcb
adc
xor
jno
jmp
out
pop
dec
dec
push
leave
sub
scas
pop
pop
mov
adc
add
cmp
sti
cmp
sub
call
test
lcall
xchg
sub
int
subl
mov
lcall
sbb
loope
inc
rep
dec
sub
mov
addb
stc
imul
rcr
iret
dec
fnstenv
out
js,pn
jnp
lret
mov
in
mov
push
dec
inc
insl
fdivrp
ljmp
jg
cs
in
xchg
inc
mov
adc
imul
cmpl
fdivr
lcall
xchg
cmp
add
mov
psubusb
enter
andl
leave
out
std
in
pop
jg
pop
jbe
insb
add
pop
or
fadds
sbb
stos
xchg
sbb
xor
cmpsb
dec
mov
arpl
decl
push
jl
sub
mov
jmp
rorl
js
sub
decl
dec
stos
xor
hlt
fildl
in
movsb
sbb
mov
popa
daa
cmp
adc
imul
xor
mov
fldz
nop
loope
cli
decl
mov
imul
jno
daa
mov
mov
ljmp
add
hlt
in
jnp
dec
mov
loope
fnstenv
decl
call
jo
mov
mov
andb
inc
lret
decl
xor
cmp
add
pop
ds
inc
dec
and
cmpsl
push
nop
loopne
decb
dec
cmp
call
mov
xchg
jecxz
aaa
push
push
jge
push
inc
pop
xor
xor
jge
fimuls
jnp
mov
js
rcrl
sub
and
pushf
sbb
decl
nop
lcall
cmpsb
outsb
push
mov
pop
push
in
lods
mov
fdivrs
cmc
push
lcall
push
mov
lcall
or
fimull
push
xor
push
or
jle
fsubrs
push
insb
rolb
hlt
or
jns
enter
jmp
xchg
fcoml
cmp
xor
mov
and
aam
enter
rcrb
insb
xor
js
inc
out
adc
cs
push
adc
pop
repz
add
sub
dec
loope
xor
ss
lret
ds
cwtl
jns
mov
lahf
pop
or
maxps
scas
clc
mov
xor
gs
in
jg
sbb
push
sub
jmp
enter
or
xchg
shll
sbb
or
daa
call
pop
lcall
daa
outsb
jbe
jmp
xor
sbb
stos
scas
sbb
and
jb
mov
sbb
add
sbb
imul
call
mov
jns
test
mov
stos
xchg
inc
int
negb
push
movsl
mov
decl
std
int3
lods
aad
imul
daa
jg
orl
lcall
aaa
sub
pushf
fcomp
shlb
fbstp
cli
cli
aaa
cmp
mov
jo
mov
fs
decl
push
mov
mov
scas
inc
mov
dec
adc
ret
shrb
ljmp
jnp
push
jns
mov
in
orb
out
arpl
stc
clc
sub
sbb
dec
adc
jmp
adc
enter
jp
inc
int3
shl
jne
mov
mov
rcl
cmpsb
mov
inc
pop
sub
fdivl
sbb
mov
adc
addr16
xor
std
dec
dec
push
dec
xlat
ljmp
decb
mov
addr16
loopne
adc
sub
das
mov
decl
mov
add
and
andb
add
fadd
lret
sarb
decl
std
jns
rclb
rcll
push
popf
orl
decl
xchg
jmp
cltd
mov
cs
aaa
roll
inc
std
mov
xchg
mov
mov
mov
or
test
jnp
push
add
push
lcall
call
cld
jmp
das
add
inc
aaa
dec
les
inc
aas
push
les
shrd
mov
jbe
call
je
or
push
in
jle
ds
std
iret
pop
sbb
inc
inc
sarl
insb
jae
mov
pop
xlat
jmp
xor
or
or
vpcmpgtb
sti
into
in
daa
inc
or
mov
call
ja
inc
cmpsl
fwait
mov
jecxz
mov
out
sti
xor
inc
fiadds
inc
es
jae
repnz
loope
gs
mov
add
pop
jge
jg
ljmp
adc
cltd
xor
lcall
sub
std
lcall
call
sub
loope
fstl
dec
jmp
and
dec
push
lods
orl
pushl
fwait
jp
push
fwait
jno
mov
in
push
mov
jne
pushf
mov
mov
xor
cmp
incl
cld
inc
and
mov
fistpll
fnstcw
stos
ret
into
mov
pop
sbb
sbb
sti
pop
call
xchg
sbb
push
lods
addr16
dec
cmp
push
cli
pop
jne
pusha
lcall
ljmp
sub
cwtl
xor
fwait
push
lock
mov
mov
ljmp
push
int
shl
dec
fxch
pop
cmc
add
cmp
lahf
cmp
dec
dec
call
hlt
mov
sub
pushf
lcall
xor
ret
push
fsubs
mov
mov
cltd
sub
ljmp
lret
movsb
sub
in
pop
inc
pop
lret
test
add
jl
fdivr
cwtl
test
fwait
xor
and
mov
and
decl
sbb
jo
xor
pushf
cmp
leave
push
xor
sub
add
and
jg
ljmp
loop
lret
and
dec
inc
jmp
push
in
pusha
sbb
pop
daa
iret
stos
test
cmp
das
push
mov
jae
sbb
aam
jb
xor
mov
nop
mov
mov
mov
test
adc
dec
ret
dec
jle
xlat
mov
ljmp
sub
cmpsb
dec
sbb
cmpsb
lret
pop
stos
imul
adc
ret
insb
sbb
inc
add
call
insb
test
pop
mov
mov
mov
movb
dec
sub
push
fsts
push
ds
xorl
push
dec
call
cmp
cmp
adcl
popf
jbe
xchg
cld
mov
xchg
mov
pop
mov
cmp
adcb
decl
push
xor
stos
loop
ljmp
mov
in
add
fs
fwait
hlt
das
in
mov
into
push
stc
lods
lock
dec
sahf
xchg
inc
push
dec
frndint
lret
mov
push
js
cmp
jbe
cwtl
and
roll
push
je
mov
xchg
aad
shlb
aas
sar
mov
sti
shrl
imul
loope
sbb
outsl
dec
push
cmp
lock
incl
pop
mov
mov
outsl
fmulp
mov
pop
xchg
dec
add
jo
pushf
cld
lcall
xchg
or
stos
dec
sti
pop
adc
jle
enter
cwtl
cltd
mov
fnstenv
fcos
incl
and
lret
in
dec
jns
adc
add
fcoml
scas
inc
xchg
incl
cld
ds
push
mov
scas
adc
mov
aad
lods
or
aaa
or
lcall
dec
les
dec
lret
fsts
cmp
repz
daa
pusha
in
lahf
pop
loopne
cli
xor
adc
fisttpll
sub
std
outsl
cli
pushl
or
adc
inc
mov
or
jno
mov
push
not
call
les
aaa
or
ffreep
lret
nop
dec
jno
push
data16
mov
pushl
cld
cmpl
pop
push
mov
insl
push
xchg
sub
dec
push
cmpsb
loopne
cmp
gs
jg
pushl
mov
movsl
les
xchg
xor
push
mov
out
sub
xor
mov
sbb
jle
mov
dec
and
mov
stc
pusha
add
cmp
rolb
aas
movsb
inc
leave
cmc
sbb
mov
pop
pop
pop
ds
out
aaa
push
cli
decl
adc
call
push
mov
sbb
iret
push
lock
in
or
scas
popa
movsb
scas
hlt
push
add
dec
sub
pushl
jo
dec
fwait
sti
inc
pop
xchg
jle
cmp
jp
mov
jnp
mov
jge
repnz
push
lods
lcall
inc
into
cltd
aaa
cld
ljmp
insl
data16
inc
loopne
sbb
lret
push
adc
testl
push
sbb
mov
adc
jno
pop
cld
out
xor
andl
jg
loop
out
sar
stos
inc
into
mov
cmpsb
jb
sbb
js
in
imul
call
and
dec
push
popf
lea
push
movsb
call
sbb
jle
mov
pop
push
outsb
push
movsb
or
test
je
ljmp
pop
cmpsb
movsl
cmp
xchg
dec
mov
cmp
push
sub
dec
pop
and
pushl
jle
cmpsl
cmp
out
pop
mov
mov
inc
push
mov
loop
xor
int3
add
fmull
xor
insb
nop
xor
push
push
lcall
inc
ss
stos
inc
test
sarb
sbb
inc
inc
add
adc
aam
fcomip
pushf
sub
or
pop
jb
fwait
out
sub
in
push
cmp
push
sbb
call
std
scas
sti
push
jmp
sar
push
adc
out
sub
push
mov
and
pushl
xlat
inc
js
mov
inc
inc
sub
pop
push
xor
aaa
int3
dec
mov
mov
repnz
incl
fucomp
aas
lret
inc
shl
roll
jne
sub
cmpsb
out
add
sti
jmp
cmp
enter
mov
cli
cmpsl
and
aam
push
ljmp
xor
out
fsubrp
mov
push
adc
test
negl
adc
inc
jmp
cmp
cmp
stc
popa
shl
lahf
test
add
and
push
es
inc
xor
int3
inc
xchg
clc
lcall
test
je
fwait
scas
divb
lret
mov
xchg
stc
mov
ror
mov
or
lods
mov
std
xor
xor
push
lds
xchg
call
sub
sub
push
or
or
insb
pop
ficoms
hlt
jnp
push
call
pop
cmpsl
fwait
mov
jmp
lds
pop
int3
jl
sahf
add
in
pop
stos
mov
cmp
das
sar
pusha
mov
push
mov
push
aad
sub
mov
fwait
aam
mov
repnz
cmp
cltd
je
dec
lods
pop
popa
xor
pop
xorl
mov
std
lcall
cli
loope
mov
mov
mov
inc
sbb
lods
xor
outsl
ljmp
mov
outsl
out
aam
push
shrb
mov
call
push
push
ret
cltd
pop
test
movsl
jae
shrb
lock
sbb
faddl
mov
int3
scas
xchg
in
push
push
test
pop
jne
add
push
pop
std
scas
jmp
in
push
push
sbb
pushf
mov
clc
aam
decl
or
into
xor
inc
aam
sbb
dec
aaa
sub
mov
xor
icebp
vpaddb
lock
call
ljmp
jl
cmp
and
pop
in
stos
sarb
mov
ljmp
loope
adc
jbe
pop
dec
sti
jl
fstl
mov
lcall
cltd
outsl
inc
inc
fmul
and
ljmp
or
ds
loope
cwtl
lret
xor
jmp
jp
fstpt
scas
xchg
fdivrs
gs
mov
inc
sub
mov
imul
adc
inc
push
dec
pop
std
xchg
jo
xor
icebp
roll
inc
mov
push
and
and
push
sbb
das
shrb
insb
cmp
pop
xlat
int
addr16
mov
shrb
inc
cmp
and
scas
pop
jl
xchg
lcall
cmp
sahf
mov
cmp
cli
in
cmc
xchg
sbb
scas
inc
adc
xor
bound
inc
testb
fwait
shll
push
dec
dec
add
decl
sbb
mov
push
dec
test
aas
adc
pop
mov
fisttpll
ljmp
enter
mov
cltd
jno
mov
fstpt
call
fwait
lock
aas
lods
jp
push
nop
sub
jo
popa
imul
imul
ljmp
orl
out
aam
push
or
pusha
cmp
popf
inc
sub
lock
jmp
mov
xor
sahf
mov
shll
sti
mov
fistpl
aaa
xor
inc
mov
mov
scas
test
xchg
outsb
or
jg
hlt
pop
or
pop
push
aam
sbb
mov
add
push
mov
sub
mov
lods
sub
or
jne
mov
jmp
push
rorl
or
fcmovnb
add
push
mov
jle
xor
stos
ret
movsl
into
ret
jmp
dec
add
in
push
pop
cltd
mov
ret
ja
lds
mov
adc
loopne
orb
mov
xchg
mov
iret
push
daa
mov
push
push
lret
pushw
out
cli
stos
cmpsl
push
in
es
pop
mov
inc
adc
mov
cld
push
dec
incl
outsb
sub
mov
insb
cmp
jg
cld
leave
cli
sub
sub
push
inc
sbb
add
cwtl
sbb
aad
pop
lock
pop
test
xor
pushl
sbb
jg
cmpsb
mov
sub
test
adcl
scas
adcb
aam
insb
hlt
jp
mov
pop
mov
daa
mulb
mov
inc
mov
sbb
movsl
mov
inc
or
js
mov
xchg
pop
sbb
push
mov
jmp
mov
ljmp
pushl
cmpb
xchg
ljmp
mul
orl
mov
movsl
pop
incl
and
xchg
push
mov
add
adc
xor
je
lret
hlt
mov
or
lcall
mov
push
jb
pop
adc
cld
loop
imull
add
clc
push
stc
push
rcrb
or
dec
inc
test
in
sahf
testb
incl
add
fnstsw
mov
lods
xchg
cmp
or
call
xorl
mov
leave
insb
or
inc
inc
pusha
test
addb
icebp
lret
pusha
jle
pushf
movsl
dec
js
int
arpl
into
and
pop
jecxz
popa
sarb
xlat
jp
sbb
lcall
dec
inc
sarb
cmp
xchg
or
jmp
loopne
pushl
cmp
lret
inc
jbe
gs
andb
lcall
or
jmp
iret
xchg
fs
ret
daa
dec
xchg
or
rcrl
je
push
nop
call
cmp
andb
popf
pop
lret
cmp
and
std
sbb
push
sti
es
add
push
cld
mov
sahf
dec
mov
lock
pop
aam
mul
push
pop
cmc
xor
incl
mov
pop
mov
xchg
movsb
imul
pop
mov
lcall
in
and
scas
hlt
xor
pop
shll
push
xchg
test
jnp
cmpsl
ret
pop
adc
lcall
adc
fbld
call
test
andl
pushf
or
jno
stos
pop
adc
add
incl
xchg
mov
push
in
cmpsl
mov
mov
jnp
adc
xor
jg
mov
dec
jge
int
cmc
in
in
rcrl
cmpsb
rcrb
jle
lds
mov
mov
or
pop
pop
rcl
mov
xor
lret
cwtl
lea
mov
incl
loop
inc
dec
push
mov
ds
aad
idivb
inc
popf
dec
cmc
sbb
stos
jbe
incl
ja
cli
sbb
stos
mov
and
push
pushf
add
xor
mov
jle
test
cmp
ds
mov
mov
aaa
gs
cmp
push
shl
push
testl
mov
ficoms
mov
insb
pusha
addr16
cmp
out
sub
shlb
or
decl
ret
cmp
mov
mov
fldcw
sbb
push
jno
stos
imul
call
cmpsl
mov
sub
or
bound
add
jmp
inc
mov
fsubrs
adc
jo
or
xchg
imul
inc
mov
lock
ficoms
jg
pop
test
push
mov
sub
jg
lcall
mov
ror
sub
aad
jg
idivl
aam
jnp
xchg
mov
lcall
insb
pop
imul
jo
test
or
scas
dec
sub
movsb
and
jmp
cli
xor
push
test
push
or
fimuls
popf
loope
sarb
outsl
clc
fldt
jge
sub
add
insb
icebp
inc
clc
mov
add
push
mov
sarl
ret
scas
lcall
cmpsl
mov
outsl
mov
sub
mov
inc
add
cli
data16
mov
fmull
stos
xor
ds
sbb
cmp
dec
movsb
jbe
filds
jl
push
test
scas
mov
or
stos
popf
shlb
pop
mov
cmp
inc
add
ljmp
dec
inc
sahf
test
setg
xor
sarl
mov
push
cltd
xor
jne
lods
inc
dec
imul
push
sahf
xchg
insb
push
mov
cmp
mov
imul
pop
jle
jb
mov
sub
push
fwait
loope
xor
movsl
aad
std
add
inc
or
cmp
jmp
cmp
bnd
adc
repnz
paddq
mov
dec
and
call
stos
and
push
mov
adc
jae
out
lret
mov
out
imul
cmp
incl
fidivrs
dec
jge,pn
cmpsb
add
data16
push
sbb
lcall
jmp
das
and
sbb
enter
aad
dec
cld
cmp
add
lea
sbb
mov
loop
ljmp
ja
add
dec
add
dec
sbb
mov
mov
jns
jmp
adc
mulb
mov
jecxz
or
mov
lcall
jnp
fidivrs
aaa
inc
scas
clc
jns
sbb
outsb
inc
test
jmp
scas
fcomip
lcall
fcomps
sbb
add
mov
pusha
xor
stos
mov
pushl
loope
ficoml
cmp
pop
push
cmp
aas
movsb
in
lcall
pop
fs
push
popa
in
fninit
xchg
pop
jmp
and
sahf
adc
adc
decl
outsb
xor
sti
fisubrl
or
aaa
xor
movsb
arpl
mov
call
dec
or
out
adc
fdivr
ret
adc
xor
or
aad
aas
int
scas
movsl
jmp
lods
call
loopne
pop
cwtl
push
cmpsb
ljmp
scas
cmp
pop
out
add
mov
outsl
mov
jg
test
subb
cs
stos
inc
mov
dec
imul
pop
js
adc
pop
ds
loop
inc
cmp
pushl
cld
push
adc
pop
ret
in
xchg
lret
stos
or
stc
cmp
pop
mov
sbb
jg
push
les
cmc
jg
dec
test
fs
cmpsb
mov
lahf
jb
sub
cmpsl
aad
insb
int
pushl
sbb
sub
mov
std
scas
je
movntps
push
inc
repz
inc
cmp
cs
cmp
dec
dec
sbb
lahf
decl
in
jg
xor
add
cltd
sbb
movsb
jle
xor
incl
push
sbb
roll
pop
push
loop
gs
cmpb
mov
jecxz
xchg
outsb
mov
mov
mov
lds
xlat
pushl
mov
fsts
adc
push
sbb
imul
sub
ljmp
stos
cmp
movsb
ret
out
and
jnp
inc
xchg
push
js
inc
lret
loop
in
mov
jmp
out
and
call
jo
dec
fstpt
mov
sub
call
cmpb
add
imul
mov
push
jbe
scas
lods
xchg
inc
dec
fucompp
cli
imulb
adcl
cmpb
jnp
and
adc
incl
rclb
dec
and
int
mov
loop
sub
sbb
sarb
pop
dec
jge
pop
sbb
add
add
int3
test
imul
enter
addr16
xchg
call
lea
adc
scas
mov
fbld
inc
test
push
dec
add
add
mov
jp
shrb
loope
js
sub
cli
push
data16
addl
in
ds
dec
cmp
cltd
mov
inc
dec
or
sub
call
adc
sbb
adc
jae
jnp
and
adc
xorl
lahf
rorl
mov
pusha
fildl
sbb
dec
adc
mov
mov
mov
test
jno
xor
sbbl
ds
idiv
lcall
jg
fs
xchg
mov
jnp
call
adc
sbb
push
int3
jbe
loopne
push
sbb
cmpsl
fstps
ss
dec
repnz
push
int3
cmp
push
xor
xchg
js
pop
push
add
clc
inc
jnp
or
das
adc
ret
mov
push
jecxz
mov
das
in
arpl
test
and
push
mov
xorb
push
lret
cmpsl
fcomip
ret
mov
and
cmpsl
jb
es
fsubrs
mov
das
lods
mov
enter
inc
fcompl
jno
cwtl
loopne
ds
imul
in
push
cs
subb
sti
lcall
sub
jb
inc
dec
out
es
in
imul
imul
popa
sub
rcr
lcall
sbb
mov
push
mov
cwtl
aas
cli
cmp
pop
icebp
inc
ss
jb
fcompl
dec
push
and
inc
ret
sbb
ljmp
jg
out
mov
popf
sbb
mov
push
pop
add
pushf
fimull
push
movswl
xchg
sub
stos
callw
sbb
fisttpll
cltd
inc
popa
lcall
mov
jmp
inc
test
or
sbb
or
pop
ss
cld
fsts
add
adc
or
out
cmp
push
adc
leave
xor
dec
pushl
xchg
lea
cmp
dec
inc
xchg
popa
cmp
ss
xchg
ss
sub
push
lcall
jle
sbb
test
mov
cmc
mov
lea
std
push
xchg
push
out
or
jge
das
mov
int
test
lahf
hlt
and
cmpsb
imul
jo
mov
scas
xor
sbb
aas
std
adc
hlt
scas
pushl
daa
pop
fistps
xor
lock
imulb
cmp
jns
repnz
jecxz
das
cs
jmp
mov
lahf
push
dec
arpl
test
push
mov
sahf
ljmp
imul
addb
cmp
cli
mov
xchg
cs
icebp
push
lods
xchg
pop
repnz
not
push
pushl
dec
bnd
pop
and
and
outsl
xchg
inc
mov
popf
jg
jae
icebp
sbb
xchg
add
in
dec
cmp
loop
jno
repnz
push
js
xlat
inc
icebp
dec
decl
int
sti
mov
xlat
test
xchg
popa
pop
xor
lods
pop
fidivs
std
cmp
cs
loop
sar
pop
fdivrs
mov
dec
roll
insb
xor
roll
pop
shr
adc
call
push
xchg
or
cld
add
cmpsb
sbb
cli
pop
stos
fwait
mov
ljmp
divb
mov
sbb
clc
std
stos
lret
aaa
nop
in
aaa
push
cmp
and
pushl
and
mov
cli
leave
das
call
rclb
lret
jmp
sbb
sbb
nop
xor
incb
inc
add
pop
sbb
ljmp
jg
add
mov
xor
cmp
js
jle
arpl
scas
pushl
jp
mov
mov
pop
shrb
adc
ret
sub
inc
cmp
cmp
lods
jmp
les
jmp
lods
mov
pop
pop
push
xor
dec
test
sbb
fcomip
lcall
jp
aaa
out
je
pop
pop
rcrl
cld
sbb
mov
inc
call
call
aas
and
fsubrl
cmp
into
sbb
imul
gs
les
cli
ss
jmp
jle
loop
pop
dec
iret
roll
xor
fidivl
inc
xchg
inc
fldt
in
loopne
push
das
stos
mov
popf
dec
das
sbb
call
sbb
movsb
xor
dec
test
mov
add
jle
xor
cli
lcall
or
add
mov
mov
inc
sbb
loop
stc
shll
mov
cld
mov
ja
pop
lods
jae
lret
pop
mov
cmpsl
inc
ja
push
mov
pushl
pop
bound
addl
insl
outsb
mov
push
inc
daa
pop
in
xor
dec
push
pusha
lcall
jge
or
xchg
or
or
in
push
jns
jmp
call
jle
inc
cwtl
push
xor
xor
loop
jae
pop
test
sbb
pop
and
lcall
rcrb
out
lods
mov
test
adc
pop
jp
cmp
push
imul
sbb
pop
mov
sti
push
mov
push
jg
jge
lcall
jle
cmpsl
lahf
adc
test
inc
sub
ficoml
jmp
jae
push
xchg
xchg
adc
jge
insb
cmp
mov
nop
jle
imul
sub
fbld
pop
xchg
rolb
mov
mov
bound
inc
stos
and
jg
incl
mov
mov
hlt
das
shll
push
ljmp
lock
xor
xor
ss
inc
aaa
dec
inc
mov
ljmp
jmp
cld
addr16
outsb
inc
xor
pop
insb
jnp
pop
inc
rcrb
or
jmp
mov
jecxz
pusha
sbb
xor
aas
out
out
xorb
call
cmp
mov
jp
dec
push
sbb
sbb
adc
rcrb
decl
mov
adc
std
jge
dec
xor
insb
hlt
adc
pop
or
ret
push
cld
jmp
mov
xor
push
mov
jecxz
loop
stos
push
pop
fcos
inc
decl
push
aad
loopne
into
je
cmpsb
or
lret
frstor
int3
mov
add
decl
xchg
cmp
test
adcb
push
push
sti
out
enter
add
jmp
inc
dec
aam
call
push
aad
sahf
mov
andl
or
mov
mov
shr
stos
in
sub
gs
fildl
adc
inc
rorl
decl
sbb
fisttpll
cmp
xlat
add
hlt
cmp
stos
pushl
pushf
mov
lods
xchg
test
nop
or
mov
inc
or
aaa
clc
pop
icebp
stos
decb
fdivrl
mov
add
and
jmp
xor
dec
mov
mov
ret
mov
into
jg
lahf
ret
jl
int3
pop
fidivrl
jecxz
lcall
mov
pop
sti
jo
imul
push
subb
sbb
lods
sub
xor
sub
stos
adc
push
call
nop
jno
call
loopne
inc
ret
cmpsl
pminsw
test
loopne
test
cmp
add
inc
dec
jmp
add
pop
cld
lcall
inc
push
add
mov
fwait
push
ljmp
test
imul
adc
cwtl
sbb
and
xor
orb
xchg
add
push
and
mov
ret
out
jns
inc
aad
jle
sbb
mov
scas
cli
lcall
pop
leave
xor
mov
dec
jb
leave
and
inc
xchg
fcomi
call
into
cmp
mov
popf
aad
and
les
lcall
mov
pop
push
out
rolb
xor
add
mov
int
inc
sbb
push
jge
dec
test
mov
insb
add
mov
icebp
mov
pop
addr16
jo
inc
add
jne
cmpl
je
cmp
scas
and
and
and
sbb
and
sti
push
test
call
lret
cmp
mov
scas
adc
je
and
push
out
cli
ljmp
adc
insb
loope
inc
xchg
insl
pusha
scas
dec
lahf
neg
lcall
xor
mov
jp
pop
std
dec
dec
adc
outsl
fnstsw
push
cltd
in
lods
push
int3
scas
jp
sbb
jg
dec
pop
jb
pusha
pop
outsb
inc
daa
adc
mov
imulb
jbe
jmp
dec
mov
cmpsb
lret
bound
ds
movsl
or
clc
add
or
xchg
cmp
jae
inc
cmpsb
addr16
imul
ret
mov
pop
adc
push
push
loope
pop
bound
aam
xchg
scas
ljmp
pop
or
ljmp
mov
inc
mov
daa
stos
pusha
mov
daa
lods
pop
push
sbb
ds
sar
ljmp
lds
xchg
call
xchg
pop
jno,pt
lea
xchg
pop
das
enter
decl
fsubr
mov
push
aam
stos
jns
cmc
jns
popf
test
sub
jmp
dec
dec
test
bound
xchg
push
repz
fwait
mov
imul
lods
and
outsl
outsl
clc
call
jl
ficoml
rorl
shrb
fsub
or
xchg
gs
incl
push
lea
dec
popa
ret
jnp
dec
pop
inc
sbb
xchg
push
jo
jle
icebp
push
pop
xchg
pop
das
je
jg
xchg
dec
cs
xchg
cmp
int
leave
jns
mov
xchg
or
lock
lods
pop
jmp
cmp
jns
xor
outsb
out
fldz
jnp
bound
push
fucomp
out
push
in
sbb
lods
data16
mov
mov
mov
lret
ljmp
lods
adc
fstpl
pushf
jno
dec
mov
sbb
mov
pusha
sahf
jb
in
jmp
add
jecxz
sbb
mov
jp
and
jnp
dec
shl
loope
das
pop
out
push
and
das
mov
or
inc
int
cltd
or
stc
lret
push
jecxz
popf
xchg
sti
pushf
out
push
icebp
inc
popl
add
mov
loopne
sbb
int3
lea
jmp
dec
sbb
repnz
push
test
dec
aam
cmp
add
adc
cmp
sub
dec
clc
push
jo
imul
push
or
cltd
cmp
xor
loope
push
pushf
imul
push
lds
fwait
fnstcw
jp
mov
cwtl
aam
mov
es
lret
pop
out
sahf
test
dec
mov
jns
dec
aad
andl
jns
push
aad
push
dec
outsb
mov
push
sub
pop
jns
push
and
jno
imull
cld
add
push
mov
mov
mov
push
mov
loope
dec
push
std
cmpsb
adc
test
mov
gs
mov
adc
lock
push
cld
pop
mov
xor
jecxz
mov
ja
repnz
decl
insb
fdivrl
adc
fisubrl
clc
fs
incl
sub
dec
lods
mov
jmp
ljmp
test
pop
mov
mov
ja
lds
pop
push
loope
push
shll
push
int3
les
lcall
loopne
xchg
stos
mov
call
scas
xor
dec
incl
mov
test
mov
decl
orb
popa
adc
or
or
add
cmc
inc
inc
js
pop
mov
mov
fistps
mov
xchg
int
jnp
push
addr16
sub
cmp
leave
cmpsb
popa
dec
test
mov
xchg
mov
dec
ret
push
xor
jne
in
xor
add
call
mov
push
sub
push
jg
inc
mov
cli
cmc
cmpsb
cltd
jbe
call
pushf
idiv
out
clc
jbe
test
xchg
cmp
push
pop
shlb
mov
orb
fdivr
ljmp
test
sub
mov
leave
je
adc
mov
lcall
pusha
push
jmp
push
fldl
std
add
inc
fisubrl
arpl
incl
stos
scas
inc
cmp
add
aad
sub
mov
sar
cmpsl
scas
iret
cmp
aaa
in
fsub
idiv
cmpsl
or
lcall
adcb
fnstenv
cmc
or
pop
loope
cmp
mov
mov
xlat
fcmovbe
popf
cmc
cmpsl
push
pop
inc
or
sbb
lds
cmpsb
jmp
lret
orb
daa
push
cmp
jb
das
pop
mov
les
ljmp
push
in
stc
xchg
sar
jo
fsubs
test
in
into
enter
or
call
aam
enter
mov
mov
mov
xor
mov
push
decb
or
pop
imul
fimull
test
in
mov
ljmp
fldpi
repz
fcomip
call
ret
push
add
ror
push
lahf
dec
or
mov
lods
adc
jae
push
iret
mov
push
imulb
mov
sbb
ds
call
scas
and
dec
out
ss
ds
hlt
lods
hlt
mov
in
scas
inc
xchg
push
add
inc
aas
cmpsb
mov
dec
or
call
popa
test
ret
mov
pop
mov
cmp
ljmp
mov
movsl
int
scas
outsb
pop
out
mov
sbb
loop
inc
mov
jnp
imul
mov
idiv
mov
mov
je
popf
idiv
pushl
pop
inc
xchg
dec
xchg
gs
add
insb
daa
loopne
sahf
mov
nop
xchg
aas
or
fcomip
decl
xchg
popa
pop
mov
xchg
popa
sub
lods
sub
jp
xchg
jb
int
incl
mov
push
dec
pop
out
xchg
mov
imul
insl
fstpt
pushl
xor
pop
mov
imul
inc
ficompl
mov
fsubrl
add
mov
imul
jle
sub
leave
sub
jmp
mov
je
mov
test
pushf
test
jb
scas
add
dec
xchg
jg
lcall
jnp
jg
fdivr
fbstp
popf
pop
mov
fistl
cmp
jl
hlt
inc
cmpl
push
pop
jl
out
inc
fimull
lret
shrb
call
push
ffreep
int3
jg
mov
xchg
add
in
ds
and
mov
lods
sbb
test
inc
jno
out
lds
jge
cmp
or
mov
jb
xchg
pop
dec
mov
nop
pushf
mov
stos
aas
in
add
fcompl
push
push
or
sbb
dec
in
repnz
jae
mov
lcall
out
scas
out
pop
adc
lcall
mov
push
dec
jl
mov
xor
adc
mov
ret
sti
cmp
incl
sub
je
mov
pop
sahf
out
xchg
mov
add
nop
loop
jnp
repz
inc
stos
incl
push
push
sub
sbb
adcl
add
push
add
incl
xchg
sbb
mov
dec
jo
push
je
je
in
cmp
daa
ret
dec
sbb
movsl
cmp
cmpsb
scas
xchg
adc
pop
cmpb
shll
ljmp
push
cwtl
stc
test
imul
nop
int3
idivb
test
sbb
pop
imul
decl
add
iret
xor
mov
and
xchg
sub
mov
dec
rcrl
into
and
mov
mov
push
push
fcoms
mov
push
cs
and
hlt
call
pop
pop
mov
pop
push
pop
push
lret
add
js
imul
clc
adc
jge
lock
mov
jp
xchg
in
fdivs
mov
rcr
push
or
pushl
pop
xchg
jne
pop
mov
adc
and
movb
decl
sub
stos
ret
jle
pusha
mov
ret
stc
movsb
mov
and
pop
cmp
out
cs
cmp
push
xor
push
arpl
mov
sahf
sub
xchg
inc
jns
sbb
jb
gs
test
push
rclb
mov
fxtract
jae
int3
sub
incl
jb
push
repz
lods
add
into
fldl
in
call
mov
sahf
lahf
or
pop
sbb
pop
imul
mov
pushl
mov
mov
dec
xor
mov
decl
xchg
bsr
popa
cmp
inc
stc
jge
add
jns
push
popf
inc
pop
and
cmp
addw
mov
jl
aas
cmp
pop
ljmp
bound
fcmovu
xor
outsb
adc
mov
inc
fnstenv
mov
incl
sahf
dec
cld
cmp
movsb
add
mov
xor
cmp
pop
pop
rorl
hlt
push
inc
push
pushl
jge
jmp
mov
mov
adc
testl
stos
ljmp
jle
push
enter
push
mov
stos
xor
lcall
shlb
xchg
nop
jo
out
pusha
loope
insl
xchg
fwait
mov
sub
pushl
dec
dec
test
dec
jne
adc
xchg
add
jmp
ret
adc
clc
fstps
xchg
sub
mov
sbb
jmp
xor
lret
ds
jne
jo
ds
xor
pop
xchg
or
cli
loope
ss
mov
lcall
fs
inc
in
sti
data16
sbbl
jae
shr
movsl
cld
fsubl
dec
dec
mov
loope
push
mov
push
cmpsb
adc
cmp
clc
mov
add
lcall
jmp
cmp
mov
test
and
jns
inc
insb
mov
ljmp
adc
outsb
leave
jmp
inc
sub
cmp
mov
ljmp
pop
mov
test
jle
sub
push
push
test
sti
daa
adc
idiv
cli
repz
mov
bound
aas
and
je
addb
sti
dec
mov
mov
cli
mov
xorl
insb
ret
shrb
les
movsb
inc
jb
pushl
inc
into
mov
jle
data16
cmp
and
es
pusha
dec
decl
call
rcl
pop
pop
push
push
cld
std
fdivl
add
and
add
adc
ljmp
decl
dec
mov
into
pop
push
dec
fimuls
leave
rorl
shrb
add
xchg
mov
mov
or
push
sbb
sub
rolb
shrb
xor
mov
jmp
add
jecxz
in
lahf
daa
insl
cmp
xlat
cmp
enter
sbb
or
jge
lods
mov
dec
aaa
into
cs
popf
icebp
mov
inc
mov
outsb
mov
call
imul
in
ret
xchg
mov
ljmp
jnp
aam
push
rol
mov
ljmp
cld
in
and
das
adcl
into
data16
mov
cld
incl
cld
mov
xor
jnp
xchg
xchg
inc
out
and
push
dec
push
jmp
mov
js
ret
mov
decl
hlt
fmul
cmp
cld
je
cld
dec
jle
lcall
sbb
mov
xorb
jo
jecxz
andb
jo
sub
fstpt
mov
push
sub
inc
fimull
sub
jl
jmp
jnp
out
pop
bound
outsb
cmc
add
xchg
sbb
fdivr
push
fdivl
mov
jo
inc
stc
dec
into
les
pop
movsb
mov
mov
out
fcomip
nop
jmp
add
pop
mov
hlt
inc
cwtl
push
clc
or
into
pop
sub
add
lcall
and
add
fistps
push
dec
jle
sbb
incl
pushf
loope
lea
xchg
mov
arpl
and
mov
push
or
pusha
nop
mov
decl
add
loopne
mov
sbb
lahf
adc
fstl
cs
scas
pop
ret
sti
add
aam
xchg
mov
xor
sbb
scas
mov
std
sbb
stos
adc
jg
fnstsw
lods
loope
sbb
mul
repnz
cli
loopne
dec
frstor
jecxz
xchg
gs
ljmp
ljmp
add
leave
xchg
mov
mov
testb
incl
dec
addb
std
leave
jnp
push
cltd
out
ljmp
push
xchg
cmp
fldt
mov
mov
add
pop
mov
aas
add
lahf
jbe
test
inc
pushl
inc
cmc
mov
xchg
arpl
inc
shrb
lcall
lds
jge
cmpsl
adc
negl
sbb
lea
out
clc
mov
xor
loopne
fisttps
cmp
lods
push
dec
fldcw
push
rol
mov
mov
push
cmp
hlt
mov
fcomps
pop
adcb
jmp
iret
daa
scas
add
lret
pushf
adc
and
sub
push
pop
mov
xchg
incl
movsb
int
lods
cmp
pop
adc
push
mulb
insl
fbld
das
lret
pop
mov
pop
xor
nop
dec
cs
pop
stc
loop
es
cmp
lcall
pop
inc
inc
jge
sub
jno
add
push
dec
ljmp
es
inc
jnp
jle
stos
outsb
rcrb
rcrl
sti
sar
jmp
jg
mov
or
sbb
test
into
je
sub
into
cmp
incl
dec
pop
das
sub
dec
bound
push
push
push
add
lcall
mov
pop
enter
cmp
out
stc
and
stos
inc
call
rcrb
adc
push
imul
sub
adc
cli
adc
clc
mov
or
mov
sbb
test
stos
cmp
push
lock
cmp
and
pop
aaa
int3
add
mov
imul
or
decl
cmpsb
xor
cmp
pop
pop
add
sub
mov
mov
push
outsl
lret
sub
std
decl
pusha
adc
pop
into
mov
outsl
dec
pop
xchg
mov
inc
jno
mov
je
xor
mov
xor
sub
sub
shl
out
push
fdivr
ss
mov
ljmp
aaa
sbb
dec
into
outsb
outsl
inc
lret
adc
and
jo
sub
jmp
xor
decb
add
ror
or
xchg
outsb
inc
movsb
xchg
sub
mov
jns
mov
ret
cmp
shlb
and
dec
xchg
cs
icebp
sbb
into
mov
mov
aam
in
jnp
or
mov
pop
adc
out
adc
jb
aad
sub
incl
push
jg
jp
cmp
mov
das
jbe
push
sub
popf
sbb
popf
mov
incl
cmp
lret
xchg
push
popf
movsb
inc
dec
std
pop
xchg
out
fsubl
negl
jmp
jg
fdivrs
cmp
xor
fsub
xor
add
insb
xchg
xchg
lret
dec
pop
sub
ret
mov
int3
cmpsl
or
idivb
adc
sti
imul
outsb
outsb
loopne
cmpsb
mov
jg
or
jne
loop
dec
lcall
lods
movsl
and
push
sarl
cwtl
adc
mov
add
fs
jecxz
repnz
mov
cmp
aad
stc
fldcw
call
mov
fisubl
cmp
loopne
cltd
aas
and
inc
in
or
aaa
std
or
test
test
fisubrl
ljmp
movsl
gs
incl
loop
sbb
lahf
dec
enter
push
adc
lahf
cmp
call
fisttpl
test
mov
imul
lahf
mov
jp
jge
dec
leave
pop
inc
inc
fadds
andl
and
test
lret
outsl
mov
xchg
jo
push
movsb
popa
dec
xor
or
inc
lds
lods
xor
stos
es
movsl
lcall
sub
imul
adc
test
in
and
sbb
lahf
pusha
xchg
cs
push
xor
push
scas
inc
mov
lea
dec
push
stc
aas
lret
and
ret
repz
aaa
pusha
ljmp
pop
jmp
testl
xchg
push
mov
cltd
pushf
pop
pop
fcom
popf
pop
dec
pushl
fsubs
out
mov
stc
jp
pop
je
lahf
daa
push
mov
aam
fists
sbb
movsl
add
call
add
cmp
es
inc
cltd
aam
adc
cmp
decl
rclb
iret
sahf
jp
sbb
test
cmpsl
movsb
add
cltd
out
push
cmpsb
jmp
mov
mov
mov
in
fsubrp
push
adc
mov
push
add
lcall
jno
cmp
mov
pusha
inc
jmp
inc
repnz
pop
mov
mov
jge
lcall
stos
cli
std
daa
nop
xor
lock
xchg
jl
add
fwait
push
outsb
rorl
call
cltd
dec
addb
cmpsb
inc
mov
adc
ljmp
pop
popf
mov
pop
xchg
push
pop
jne
lea
xor
sbb
fisubrl
rcr
xchg
jns
scas
pop
sub
mov
push
dec
cmp
jg
pop
jns
stos
xor
xchg
push
cmp
jg
into
les
cmp
sbb
das
decl
xchg
add
push
repz
stos
shr
ljmp
imul
pop
testl
mov
nop
push
in
xchg
outsb
cmpsl
out
ficompl
pushl
adc
fwait
jns
insb
xor
sub
cmp
mov
mov
arpl
push
sub
nop
push
xor
xor
outsb
enter
adc
pop
insl
mov
cmc
pushl
xchg
sahf
fcmovne
int3
bound
sub
clc
lcall
loopne
inc
cld
dec
sarl
call
in
add
mov
popf
into
in
jl
js
push
jno
push
sub
pushl
rolb
sarl
cmp
pop
add
mov
bound
repnz
scas
cli
ljmp
cmp
sub
ret
lret
repnz
cmpb
inc
sar
push
inc
or
mov
push
push
xor
and
add
daa
pop
xorb
inc
mov
sub
and
sub
jns
sub
data16
sbb
incl
mov
ss
and
nop
cltd
notl
push
fildll
mov
lret
loop
xor
inc
and
add
lods
mov
out
iret
dec
shlb
cltd
cli
push
xchg
cmp
rol
call
cld
pop
lcall
outsl
push
jns
pop
or
cli
jle
sti
fs
mov
out
ljmp
gs
adc
sub
mov
repz
push
inc
lods
mov
in
or
adc
fistpll
scas
xchg
in
cmp
cld
dec
pop
push
add
negl
mov
je
dec
mov
nop
ljmp
nop
push
in
jg
test
es
stc
jb
mov
data16
add
stos
inc
std
xchg
xor
and
add
das
das
jns
test
scas
mov
loopne
sbb
push
scas
and
sub
mov
mov
jmp
lcall
xchg
ss
imul
lahf
ja
push
pop
lods
jge
jbe
jl
sbb
incl
sub
inc
mov
sbb
mov
aas
cmpb
sbb
shl
cmp
jae
push
jmp
ret
shll
xor
push
cmp
xchg
jmp
ss
jae
ljmp
rol
ss
jne
add
mov
mov
ljmp
push
daa
in
lcall
icebp
mov
mov
push
dec
xlat
cwtl
ficompl
pushl
pop
adc
sub
insl
pop
loop
insb
mov
mov
addr16
gs
push
cmp
xor
jmp
jecxz
fdivl
out
xlat
cs
cmpsl
fwait
imul
ja
sbb
in
popf
xor
incl
repz
and
ljmp
or
and
adc
fs
incl
cli
inc
jae
cmp
cltd
inc
fnsave
add
jnp
data16
outsl
nop
ljmpw
sub
fsubs
adc
sub
jb
or
rcr
imul
ljmp
lret
out
fildl
mov
popf
or
cs
pop
test
pop
int
and
lahf
xchg
mov
jbe
lea
or
xlat
hlt
pop
lret
decl
sub
push
lock
cld
aaa
inc
cmpsl
fdivrl
les
orb
pushf
sahf
pop
loop
popa
mov
decl
and
lret
sub
int3
insb
sbb
xchg
scas
sbb
mov
push
or
fidivl
dec
mov
std
or
ljmp
fbstp
mov
sub
mov
xor
enter
xchg
in
mov
incl
inc
mov
es
adc
js
sub
sbb
cmpl
js
je
xor
or
xchg
incl
negl
movsl
clc
dec
cmp
mov
stos
enter
jl
pop
lock
dec
addr16
hlt
scas
incl
cmp
cmp
lcall
push
imul
lcall
push
jns
sbb
add
lock
rolb
aam
xchg
mov
mov
data16
ret
pop
push
fstps
lcall
adc
fdivrs
stos
inc
scas
mov
fsubrl
inc
cld
mov
out
cli
push
pop
or
sti
imul
cmp
stc
into
shrl
pop
loop
jmp
ficoms
repz
movsb
mov
daa
fmuls
repnz
mov
out
clc
fisttps
enter
mov
mov
xchg
clc
pop
rcl
incl
ficoms
inc
repnz
adc
test
je
bound
lea
mov
call
lret
and
inc
icebp
and
cli
repz
lods
cmp
cmp
jns
cwtl
jecxz
jno
add
cmp
sub
das
adc
adc
pop
mov
js
xorb
cmpb
mov
cwtl
adc
aas
hlt
scas
aad
jae
aaa
movsb
adcl
lret
ljmp
jmp
cmp
add
adc
xorl
mov
push
mov
dec
loope
shlb
jmp
cmc
cmp
xor
jne
lret
lcall
dec
lret
mov
and
push
inc
dec
inc
push
inc
cmp
test
inc
orl
movsb
into
scas
clc
xchg
aaa
ret
push
pop
out
sbb
into
mulb
int3
xor
enter
mov
clc
mov
mov
lock
jmp
ret
les
jle
dec
int
cmp
js
mov
sar
faddl
orl
inc
jne
sbb
mov
xchg
inc
mov
mov
and
scas
mov
mov
nop
dec
inc
xchg
push
notb
out
pop
pop
ficoml
incl
add
xchg
in
ja
cmp
xor
pop
mov
rclb
cli
lcall
pop
pop
inc
inc
call
sub
cmpsl
adc
test
sub
jg
shlb
cmc
out
pop
sub
mov
push
ja
xor
xor
nop
mov
fwait
adc
ret
stos
rorl
cld
xor
xchg
add
loope
mov
shl
test
lds
data16
jmp
mov
cwtl
lods
and
xor
xor
js
int3
jecxz
pop
push
and
test
mov
ljmp
sbb
push
mov
pop
popa
sbb
scas
cmp
jle
pop
jb
inc
sub
xor
repnz
fistl
fadds
roll
and
dec
adc
mulb
int
xlat
fcmovnu
outsb
aaa
sbb
out
adc
dec
jb
pop
mov
repz
incl
mov
or
xchg
hlt
mov
fsubp
sub
xchg
cld
or
jmp
int
je
pop
repnz
dec
aas
dec
or
xor
shll
sar
fndisi(8087
clc
aaa
in
cli
pop
aaa
push
xchg
push
add
ljmp
scas
push
mov
xor
inc
stos
xchg
stos
jno
mov
mov
dec
jp
mov
jmp
ror
jb
mov
xor
icebp
insl
ret
fsubrp
dec
mov
xchg
dec
xchg
movsl
inc
ljmp
dec
xor
out
lods
les
mov
cmp
pop
xchg
push
jg,pn
jmp
cli
mov
push
jo
cmpsb
test
pop
xlat
dec
out
jmp
jmp
jp
mov
and
out
rorb
enter
jmp
enter
incb
jecxz
and
jecxz
mov
cmpsb
addl
xor
popa
mov
decl
jecxz
cmp
out
xor
xor
mov
gs
mov
subb
in
cmp
scas
cwtl
fldcw
cmp
rorb
pop
and
lcall
in
xchg
adc
add
pop
shr
push
loop
arpl
fnstsw
sti
mov
inc
out
or
pop
cli
pop
push
test
jae
and
push
cli
orl
ljmp
das
lret
arpl
inc
aad
ja
push
mov
dec
imul
ds
aad
aaa
dec
jmp
cmpl
mov
push
mov
sub
add
add
stc
nop
xchg
mov
call
jne
pop
cmp
pop
cli
popf
call
xchg
out
nop
stos
in
fists
mov
add
rcl
dec
push
imul
out
arpl
pop
jo
outsl
stos
and
xor
dec
or
mov
incl
mov
mov
add
gs
and
or
fcompl
fs
std
cmp
rol
sub
inc
pop
mov
popa
ljmp
inc
cmp
inc
adc
orb
ds
mov
ss
pop
jp
push
into
or
jo
incl
xor
mov
dec
js
out
and
adc
jb
sahf
jg
mov
mov
mov
inc
cld
inc
pop
lock
cmp
sub
add
mov
pop
inc
xor
movsl
cmpsl
rcrl
test
or
adc
imul
aaa
mov
outsl
xor
xchg
sbb
pop
je
mov
enter
insl
sub
mov
push
popf
adc
and
jae
pop
add
std
call
cmp
adc
push
icebp
push
push
xor
sub
add
push
outsl
dec
sub
daa
inc
mov
outsl
pushl
je
add
mov
outsb
stc
push
aad
sbb
xor
cmc
jle
xor
dec
adc
push
jl
mov
aad
mov
jge
mov
jbe,pt
push
push
test
mov
pop
mov
jecxz
sbb
loop
push
test
xor
ljmp
inc
arpl
daa
xor
jle
lea
fdivrl
jle
pushl
add
aaa
mov
xchg
pushf
pop
scas
out
pop
rorl
sbb
add
push
cmp
mov
inc
imul
jge
ljmp
fwait
lahf
add
jecxz
icebp
mov
pop
ss
clc
push
add
es
mov
push
push
or
ljmp
add
jge
mov
ds
in
sbb
mov
jns
mov
cmp
mov
roll
ja
dec
add
mov
mov
mov
pushl
mov
pop
mov
adc
xchg
data16
mov
mov
jmp
int
lahf
mov
mov
insl
xor
push
dec
pop
mov
rorb
push
sub
xchg
push
or
cltd
int3
xchg
xchg
jo
int
mov
mov
cmpsl
xchg
sarl
test
push
or
jmp
rolb
in
push
dec
dec
cmp
dec
lds
clc
pop
xchg
jl
scas
call
int
push
popf
xchg
inc
or
insb
es
loop
push
mov
in
or
loopne
push
cmp
lea
std
push
xchg
imul
xchg
fisubrl
add
cmp
scas
push
insl
mov
nop
inc
push
std
inc
cmp
gs
push
mov
dec
out
dec
jmp
popf
sbb
imulb
test
lock
jg
ja
fstpl
mov
pop
icebp
cmp
nop
inc
and
ss
add
dec
push
stc
jmp
lcall
cmp
add
or
adc
xchg
gs
jb
fdiv
std
lret
ljmp
pop
pop
nop
or
iret
sbb
mov
cmp
sbb
and
push
add
mov
mov
iret
mov
push
jmp
mov
fcomip
lret
and
repnz
loop
jmp
xchg
shrb
pop
sub
mov
ret
jno
dec
lret
lds
ljmp
loope
xchg
push
cmp
sahf
push
dec
dec
lods
cmp
push
aad
out
dec
cltd
xchg
pop
adc
mov
into
or
test
push
mov
xor
xchg
flds
ljmp
iret
jecxz
aam
fidivl
insb
jg
inc
mov
dec
jmp
insb
imul
aaa
or
decl
and
cmp
or
lea
rcrl
fidivs
loopne
dec
cmp
sbb
add
ljmp
ljmp
pop
pop
or
fadd
xchg
sbb
jnp
mov
ljmp
test
out
mov
shrl
stos
push
xchg
imul
mov
sahf
cmp
leave
or
inc
jb
nop
mov
pop
xor
lret
cltd
jmp
cmp
decl
sub
lret
push
fwait
or
pop
adc
ss
pusha
xor
or
jmp
jmp
lods
lahf
sarb
inc
out
cmp
jle
mov
jno
daa
inc
ss
sub
cmp
incl
cli
mov
xor
jp
popa
and
xor
orl
add
out
adc
push
notb
sub
cmp
call
sub
shlb
push
lods
inc
sbb
cli
cwtl
cmp
incl
fistpl
and
es
push
and
aad
lcall
test
xchg
pop
lods
pop
sbb
in
jle
loop
andl
pop
xchg
jae
pusha
mov
mov
aas
nop
sahf
sub
mov
jnp
incl
je
lret
sbb
fldenv
and
jo
mov
mov
pusha
mov
fsts
sub
call
inc
add
in
sbb
aad
jbe
data16
lahf
xlat
fdivs
xor
pop
imul
iret
mov
call
adc
push
repz
pushl
or
and
and
inc
pop
add
rclb
cwtl
cld
xchg
pop
adc
pop
in
and
outsl
clc
ljmp
leave
jge
clc
sahf
fs
sub
jnp
sub
setb
adc
or
jmp
mov
jge
jge
or
sub
inc
aas
jnp
mov
sti
sub
jle
add
out
call
mov
addb
xchg
lock
cmc
outsl
sub
cli
out
cld
jg
clc
cmp
lds
push
sub
scas
je
roll
in
pop
push
popa
jmp
push
ljmp
push
or
jg
pop
or
lret
mov
mov
icebp
jmp
imul
out
loopne
push
mov
push
or
sbb
mov
lds
das
sar
arpl
lea
and
aaa
ja
push
pop
insb
sub
test
cwtl
lods
mov
adc
adc
cld
in
sbb
into
or
xor
fsubr
inc
stos
jge
shll
push
pop
cld
cld
fcompl
mov
stc
scas
mov
xchg
decl
pushf
mov
sbb
loope
mov
cmpsl
inc
cwtl
cmp
sub
mov
ret
test
call
test
mov
or
ret
or
rol
jl
lea
call
je
ds
subl
xchg
and
pop
and
add
cmp
mov
cmp
rorl
jl
fwait
jp
jnp
xlat
dec
fldt
xorb
lcall
fadds
cmp
xabort
icebp
sahf
and
icebp
mov
push
pop
sar
mov
jg
mov
cltd
push
mov
aad
test
xor
jmp
jle
push
push
in
pop
xor
add
sub
fucomip
inc
sub
push
mov
sub
mov
loope
adc
into
jmp
shl
pop
dec
scas
dec
mov
std
loopne
jge
clc
lcall
and
push
fsub
adc
daa
imul
loop
data16
incl
lea
in
test
and
mov
cmp
sbb
nop
lock
repnz
mov
stos
incl
mov
test
arpl
xchg
repz
mov
sub
mov
incl
es
inc
adc
aas
or
and
ret
push
repz
shll
scas
ljmp
mov
sub
sub
test
push
sarl
ljmp
sbb
mov
mov
stc
jae
push
dec
xor
icebp
nop
xchg
push
fwait
inc
sub
inc
mull
dec
idivl
jns
xchg
or
sub
dec
adc
mov
je
jp
cmc
mov
jle
sbb
dec
cs
jg
mov
pop
rorl
or
aaa
ret
dec
dec
fstpl
data16
add
mov
xchg
mov
pop
lret
pusha
xor
loop
std
stos
inc
cs
add
into
jnp
addr16
call
int3
pushf
pop
test
dec
xchg
pop
call
adc
daa
sbb
fsub
js
lret
lods
xchg
in
or
mov
or
imul
test
mov
insl
popa
dec
arpl
pop
mov
inc
sahf
in
incl
data16
push
xor
inc
pop
or
data16
stos
cmp
jns
ds
stc
mov
decl
lds
xor
push
or
mov
ss
bound
leave
cmp
lcall
and
and
into
xchg
pusha
adc
add
push
pop
loopne
mov
dec
xlat
cmp
add
es
aas
ror
xor
clc
mov
ljmp
and
add
ljmp
jge
mov
stc
adc
push
out
mov
push
xchg
push
fdivrs
ret
mov
xlat
gs
mov
loopne
rcrb
decl
adc
mov
sub
mov
lods
mov
lds
incl
mov
lret
jbe
sbb
jmp
xor
jo
cmp
push
sub
push
scas
fnstsw
xor
out
fiadds
movlps
outsl
mov
adc
and
leave
rolb
sbb
jg
sbb
iret
cwtl
or
fs
aam
inc
call
fistl
push
call
outsb
or
adc
clc
js
sbb
push
adc
xor
cltd
mov
inc
cli
mov
mov
sti
xor
dec
in
mov
mov
sbb
outsl
cli
jg
movd
fstps
sub
scas
xchg
pop
rclb
dec
ficompl
ja
lcall
and
mov
in
push
sub
cmpsl
xchg
das
xchg
xchg
fwait
leave
xchg
ljmp
mov
aam
aad
clc
mov
std
nop
adc
mov
call
jbe
pop
dec
fnstcw
xchg
pop
js
out
shlb
test
rsm
xchg
repz
int
add
jmp
movsb
or
dec
jle
sar
stos
sub
cmpsl
stos
mov
lahf
lds
or
call
div
adc
sbb
pop
mov
mov
arpl
add
inc
fwait
pop
mov
bound
call
hlt
push
dec
ljmp
xor
fyl2x
cltd
out
pop
dec
dec
jne
sub
push
sbb
hlt
dec
lods
sbb
jle
mov
es
add
lcall
jg
cmp
stos
daa
ds
movsb
cmc
mov
or
adc
int3
cmc
je
cmp
sbb
dec
jb
dec
cmp
fs
adc
cpuid
pop
lea
add
insb
popa
stos
jmp
fistl
fldt
rcrb
sbb
add
or
jmp
in
xor
xor
fildl
sbb
xchg
or
es
das
jg
add
lcall
xchg
xlat
add
mov
push
mov
or
outsb
cltd
inc
cwtl
test
mov
push
pop
shll
shlb
kmovb
dec
or
das
sub
call
cmp
mov
lds
mov
jbe
cmp
mov
pop
aas
pop
fildll
dec
mov
jns
inc
sub
mov
into
lea
xor
insb
in
jg
jmp
std
xor
inc
insl
jmp
inc
sbb
jo
pop
and
sub
sbb
mov
add
jno
pop
aad
sahf
int3
ficoml
inc
mov
imul
jge
icebp
add
je
xchg
cmp
out
clc
sub
sub
add
fcomps
int3
ja
pop
jo
ds
jmp
fbstp
or
xchg
sbb
imul
fs
cmpsl
xchg
ss
lcall
dec
cmc
adc
add
add
shll
out
rcl
inc
enter
pop
and
aam
sub
incl
mov
xor
push
fprem
xor
test
cwtl
cld
pusha
in
mov
and
push
test
daa
jbe
call
mov
add
test
dec
mov
inc
xchg
jne
lcall
in
or
add
cmp
mov
mov
jb
es
push
jmp
jae
stc
daa
mov
es
arpl
in
xor
mov
cwtl
lret
dec
adc
add
out
cli
sub
add
cwtl
sub
sahf
sub
lods
push
mov
xor
jmp
outsb
jl
or
cli
divb
fwait
xchg
repz
leave
fcompl
notb
mov
lret
shl
aaa
std
add
jns
mov
jae
add
push
popf
arpl
call
mov
xchg
cmpsw
push
sbb
clc
stos
xlat
mov
and
jmp
pop
or
mov
jmp
add
mov
sbb
rcrb
mov
xor
jne
xchg
in
or
xor
fildll
repnz
sub
add
decl
insb
ficomps
inc
jae
ljmp
movsb
or
loopne
cmp
into
iret
ss
push
repz
cmp
mov
dec
or
mov
cwtl
sbb
mov
notl
cltd
aam
out
roll
add
mov
dec
call
rcll
push
repnz
fldt
pop
mov
cwtl
mov
outsb
and
jg
int
and
rorl
ljmp
sub
bound
in
ret
jmp
push
push
dec
mov
test
sub
cmpsl
andl
pushl
xchg
adc
out
mov
sahf
sbb
les
mov
stc
or
or
push
stos
lret
ret
pushl
and
jmp
nop
cwtl
adc
lcall
lahf
jbe
add
lock
xchg
jecxz
incl
xor
pop
cmp
mov
mov
ss
sarl
outsb
lcall
jmp
xchg
mov
jbe
pop
sub
push
ljmp
jg
dec
add
jge
push
into
out
adc
dec
adc
jl
cmp
sarl
jae
push
mov
mov
lods
stc
in
dec
or
mov
mov
dec
mov
lret
ja
ss
call
add
in
mov
adc
fsubrs
sub
add
pop
es
jmp
lcall
sbb
jb
pop
mov
pop
xor
decl
dec
xchg
insl
mov
roll
cwtl
inc
ret
lcall
idiv
lcall
pop
loopne,pt
cmpb
int3
dec
adc
gs
and
decl
shlb
jge
dec
inc
das
pop
cmpsl
push
adc
shll
xor
decl
mov
mov
mov
sbbl
jge
mov
adc
mov
daa
pop
notl
pmuludq
inc
jp
stos
out
and
dec
push
mov
push
pop
mov
mov
divb
dec
incl
ss
movsl
mov
testl
push
jnp
sub
scas
cs
dec
in
inc
and
mov
inc
adc
mov
les
pusha
aad
xchg
orl
dec
mov
shlb
call
nop
not
lret
imul
not
push
jne
sahf
ja
push
scas
std
lods
enter
pop
ss
add
jg
push
push
mulb
dec
lods
aas
inc
add
ret
dec
push
pop
lcall
decl
hlt
mov
shll
add
jns
outsb
insb
mov
or
inc
mov
loopne
pop
dec
outsl
lahf
or
sbbl
ljmp
hlt
decl
sub
rol
push
inc
sahf
das
repz
repz
mov
xchg
adc
jl
adc
scas
fwait
inc
and
in
hlt
ret
nop
mov
call
xor
jbe
sub
loopne
mov
imul
ljmp
rol
icebp
arpl
insb
push
or
mov
mov
add
pop
fimuls
mov
dec
jmp
push
inc
lods
clc
xor
push
lret
into
pop
push
sbb
cltd
hlt
ljmp
in
fdiv
cmp
push
or
cmp
cmp
popa
dec
fwait
push
lcall
push
cmpsl
inc
incl
rcll
push
xor
pushl
insl
push
push
xor
dec
data16
fiadds
xor
cltd
pop
inc
loopne
pop
insb
jo
jmp
xlat
cmp
xchg
rcrl
xor
mov
dec
and
lahf
jge
cmc
cmpsl
mov
sub
jmp
cli
ja
testb
xchg
into
pop
xor
mov
lcall
fnstsw
jo
mov
mov
stc
lods
movsb
cmpsb
jmp
mov
insb
xor
pop
lcall
inc
aad
pop
add
loopne
dec
add
dec
xchg
push
cmp
mov
push
fsts
aas
ljmp
das
push
ds
sarb
inc
or
dec
xor
or
lcall
sarb
stos
pushl
or
scas
push
mov
inc
mov
fistpll
jg
mov
pushf
sub
jnp
cmp
leave
xor
aas
lret
ljmp
push
loope
sbb
dec
jb
xor
pop
rcl
shr
scas
mov
jg
into
out
push
mov
stc
movsb
fnstsw
call
ss
decl
and
fs
fisttpl
inc
sub
in
mov
jb
std
div
pop
sbb
dec
add
pop
and
out
mov
cs
fists
cmp
shl
decl
test
mov
jo
jg
aad
adc
bound
ret
and
cs
fstpl
out
clc
pushl
repz
cmp
sahf
adc
jle
xor
cmp
lea
sub
mov
test
and
lret
out
test
push
loopne
dec
rcrb
fistpll
push
out
adc
outsl
pop
jo
cmp
imul
lret
or
push
clc
jge
loopne
lcall
sbb
pop
das
mov
lods
cmp
je
pop
xor
mov
pop
jl
test
test
jb
pop
lods
iret
insb
pusha
je
bound
and
pop
cld
lcall
stc
jbe
stos
aam
add
pop
lret
and
enter
popa
cmp
pop
insb
jne
insl
pushl
in
js
dec
push
xor
ss
and
adc
sbb
mov
sbbb
fisubs
ja
out
leave
scas
sbb
loop
xchg
aam
pop
data16
cmovo
pushl
fwait
lcall
mov
inc
sub
or
add
ret
movd
incl
push
jle
lock
fnstcw
and
mov
jp
cli
imul
pushl
cvtps2pi
in
xchg
pop
sub
repz
push
push
adc
mov
je
dec
insb
loope
ret
call
cmpsl
or
sti
inc
fsubr
loop
mov
cmpsl
add
jmp
add
xchg
add
xchg
out
sub
js
repnz
push
adc
cmpsl
pushf
or
lcall
decl
push
call
addr16
popa
pop
cltd
dec
sbb
push
xchg
in
jg
sar
add
fimull
movsb
or
or
pushl
cli
sub
jl
js
mov
xor
inc
mov
push
cmp
lock
mov
add
fcmovu
jl
mov
inc
mov
jb
and
push
jno
push
adc
decl
test
push
mov
xor
mov
mov
vrcpps
pop
ret
dec
js
js
ficomps
add
fildll
jno
lock
dec
dec
leave
inc
out
pop
xor
cmc
sarl
mov
add
in
push
dec
out
pop
out
mov
ret
sub
lret
adc
fists
cmpsl
inc
jnp
inc
dec
push
jbe
push
out
xchg
mov
sbbb
movsl
xchg
jmp
inc
jb
addr16
jo
cmp
xchg
add
pusha
mulb
test
jb
addl
out
cli
xor
into
push
fs
inc
imul
ja
sbb
mov
jg
mov
mov
int3
inc
mov
cmp
test
cs
lahf
das
sar
clc
stc
test
mov
repz
cltd
enter
mov
subb
cs
push
xchg
mov
icebp
push
sbb
jmp
das
mov
push
xlat
out
lock
pop
xchg
or
loopne
xor
mov
stos
out
mov
out
sub
inc
sbb
push
test
jecxz
push
and
mov
cmp
dec
xor
lahf
mov
scas
and
jae
or
jg
imul
xchg
loope
roll
enter
jmp
or
cmp
movsb
push
adc
and
hlt
testl
push
stos
pusha
decl
mov
ret
add
jecxz
aaa
cmp
jge
push
test
fdivr
mov
pop
push
clc
or
and
dec
and
push
or
jl
jmp
jo
mov
jge
cmp
loopne
inc
shr
mov
imul
and
xor
push
cmp
lcall
das
sub
idivb
movzbl
enter
lods
push
aaa
xchg
hlt
fdivr
adc
out
mov
fst
mov
subb
pop
int3
orb
rorl
lcall
xchg
xor
jnp
ljmp
pop
and
leave
add
xchg
arpl
rorb
add
sahf
jns
or
sti
jmp
jno
mov
loop
cld
xor
popa
pushf
mov
movsl
fsubr
push
ljmp
pop
xor
cmpsb
adc
adc
xchg
cmp
popa
or
leave
decb
jnp
cwtl
mov
jmp
push
inc
adc
out
jle
jb
mov
jp
cmp
movsb
xor
or
decl
pop
mov
add
inc
jbe
scas
lea
movsl
jb
inc
jae
mov
jns
decl
lcall
loope,pt
push
dec
xchg
nop
add
sbb
scas
xchg
ja
enter
jmp
fsubrl
rcrl
pop
sti
sti
les
pop
bound
in
push
and
push
repz
pop
stos
call
xor
stos
push
fwait
pop
ds
mov
repnz
add
push
cmp
mov
negl
pushl
and
add
arpl
add
cmp
arpl
ds
jmp
pop
testl
lcall
mov
inc
popa
lret
shll
push
enter
pop
jno
push
decl
lock
mov
push
push
xchg
in
push
sbb
out
mov
mov
ljmp
lea
sahf
repz
repnz
mov
sub
inc
fidivs
ljmp
add
xchg
mov
pop
or
jnp
cmpsl
pop
pop
jae
fst
adc
cld
mov
test
xchg
cld
dec
adc
je
ss
mov
sub
adc
cmp
dec
in
ficompl
imul
dec
test
nop
xlat
mov
leave
fists
jge
add
inc
jmp
and
pop
mov
fsts
ljmp
or
dec
inc
mov
xchg
cmp
inc
or
sbb
decl
cmp
orb
incl
cld
pushl
enter
sub
movsb
mov
pop
mov
xor
call
data16
ficompl
cmpsb
adc
mov
fsubs
mov
cs
repnz
push
inc
jns
test
mov
sub
add
je
add
stos
outsl
jg
pop
insl
dec
mov
lahf
jb
imul
mov
sbb
in
push
xor
aaa
pusha
adc
dec
push
arpl
mov
adc
sub
adc
ljmp
pop
ds
cmp
dec
mov
jg
sbb
sub
aaa
add
iret
in
push
push
incb
fdivs
out
rcrl
decl
mov
shrb
idivb
pop
pop
jl
bound
lahf
cmp
popa
js
cli
ja
call
cld
mov
fdivrs
sbb
xor
rcrb
test
mov
shll
pop
push
rcll
ss
stos
inc
outsb
push
sbb
in
dec
cli
call
pop
and
fistpl
sbb
or
cmpsl
lock
pushl
jae
lahf
jno
fdivrs
xor
push
push
pushl
bound
movsl
xor
lcall
out
push
ljmp
xchg
mov
xor
leave
xor
mov
add
sbb
decl
ss
push
in
pop
test
dec
inc
scas
jb
inc
xor
or
push
mov
mov
jge
mov
pushf
arpl
out
jecxz
xlat
cmp
scas
push
fcomip
jmp
mov
lret
pusha
and
fmull
insl
cwtl
mov
jecxz
es
sti
mov
jmp
sbb
xchg
fsubrs
add
add
push
inc
push
cmp
xchg
xor
lahf
incl
pushf
push
mov
lret
push
in
int3
in
loop
arpl
stc
pop
fiaddl
call
cwtl
hlt
pop
jns
stc
xorb
aaa
cmpsb
notl
lock
in
jg
mov
add
xor
cld
decl
mov
lods
xor
cmp
aam
fcomi
pop
lret
sbb
pushl
fsts
mov
pop
mov
out
test
jge
lods
lcall
mov
fildl
lock
mov
or
imull
push
call
sti
insl
dec
int
aad
ss
mov
shll
sbb
xchg
mov
iret
fsubl
cmc
mov
call
push
pop
outsb
pop
movups
imul
xchg
lcall
outsl
sub
fnsave
or
cmc
data16
mov
fdivrs
mov
pushl
cmp
test
mov
adc
scas
inc
and
mov
push
sub
lret
mov
sub
mov
cmp
push
xchg
mov
dec
cli
ret
fldl
jge
ror
mov
shll
mov
pop
mov
insb
ja
stos
xor
ljmp
and
push
adc
mov
xchg
les
mov
sbb
mov
dec
lods
mov
jg
mov
mov
loop
jl
adc
stos
arpl
jnp
adc
sub
add
dec
sbb
leave
push
jl
incl
and
cmp
call
mov
les
jnp
xchg
dec
mov
push
pop
sbb
call
outsb
in
push
lea
and
jle
inc
inc
mov
cmp
or
mov
jmp
jnp
pushl
faddp
sbb
bound
and
pushl
push
repz
jo
fcomip
lods
xchg
adc
jo
jp
mov
lods
push
push
jl
and
mov
inc
enter
jp
jno
stc
fwait
int3
dec
and
dec
jle
inc
cmc
xchg
lea
push
test
mov
inc
or
lcall
pop
cmp
and
xorb
and
inc
adc
leave
mov
pop
push
cli
mov
pushf
cli
les
jb
sbb
lahf
cmp
lcall
in
aaa
mov
inc
push
xchg
pop
mov
inc
fildll
stc
call
or
and
mov
out
int
loop
aas
cmp
pop
lahf
sti
imul
jne
stos
cwtl
jl
jg
sub
out
andl
cwtl
mov
lods
xor
or
ljmp
bound
lock
jl
xor
push
fwait
lock
add
fcomip
pop
cmpsl
loop
lock
shll
sub
test
scas
xor
cs
call
jg
mov
jl
fdivl
aam
xchg
ds
and
dec
mov
pop
hlt
dec
cs
mov
mov
adc
xor
sarl
pop
mov
fcmove
test
adc
test
call
loopne
mov
push
fabs
jge
pop
testl
sbb
fistps
mov
incl
push
sbb
lret
sub
inc
mov
icebp
pop
test
jg
and
out
fidivrs
out
out
inc
push
adc
mov
imul
jecxz
decl
push
loopne
and
dec
and
std
sbb
out
mov
fmull
xor
jno
lret
fnsave
fwait
push
jo
push
pop
popa
loop
mov
decl
or
sub
arpl
js
sbb
push
mov
xchg
inc
iret
or
push
or
pop
add
aam
ret
and
dec
inc
imul
adc
es
push
or
xchg
sub
mov
pushf
adc
fimull
adc
xor
xchg
and
cli
or
incl
pop
dec
lds
dec
lret
mov
jp
xchg
call
loopne
pop
adc
enter
insl
mov
aam
sahf
test
mov
fldt
incl
dec
imul
inc
out
jo,pn
dec
push
dec
mov
pop
fldt
aad
sbb
fcomps
hlt
daa
ja
or
and
cwtl
or
addb
insb
and
pop
mov
negb
lret
pop
sbb
sbb
ljmp
stos
lahf
mov
or
sub
adc
inc
pop
imul
cld
sbb
mov
pushl
jnp
cmp
push
jae
jp
dec
push
pop
cmc
push
decl
adc
cmp
cmp
call
pop
pushl
std
mov
dec
jns
testl
imul
cltd
pop
loopne
decl
jmp
popl
or
push
pusha
ja
shlb
fcmovnb
dec
pop
incl
clc
jno
shrb
push
push
es
mov
loope
ret
pop
push
mov
sbb
xor
inc
jmp
ss
rcrl
inc
sub
icebp
call
pop
lahf
xchg
lcall
lock
incl
test
sbb
and
mov
cmp
out
je
inc
inc
and
mov
decl
mov
jecxz
out
xchg
in
in
in
lods
xchg
or
test
popa
xor
mov
or
jg
stos
ret
je
inc
jl
mov
cmpsl
out
sub
push
and
movsl
push
or
call
imul
sti
dec
cmpb
shrb
cmovnp
insb
clc
xor
jnp
jmp
dec
imul
ret
bound
xchg
inc
mov
push
add
mov
jmp
xchg
mov
test
cmp
cmp
sbb
sarl
loope
sub
dec
dec
fdivr
call
decb
mov
sub
dec
fdivp
fadd
push
push
call
inc
pop
dec
icebp
repnz
dec
fucomi
jno
decl
repz
mov
mov
sarl
ror
out
decl
mov
or
cmp
cmp
adc
mov
nop
dec
leave
jg
push
lret
shll
mov
sbb
loopne
xor
push
dec
jmp
xchg
sbb
mov
inc
xchg
test
lods
cmc
insl
dec
std
pop
inc
ss
test
ljmp
loop
sub
imul
outsb
lahf
ror
stc
xor
jmp
xlat
dec
add
decl
test
clc
and
int3
aaa
or
xchg
add
test
nop
jns
in
scas
push
in
push
add
negb
icebp
mov
jl
adc
pushl
loope
out
pop
decl
xorb
dec
push
pop
in
pop
out
aad
lods
add
fbstp
adc
in
lods
loopne
cli
aad
aaa
imul
pusha
xor
data16
mov
ja
outsb
xlat
es
dec
sbb
inc
xor
pop
mov
call
sub
cmc
sbb
pop
xor
sub
pop
push
mov
insl
subl
add
fs
mov
jle
decl
and
jmp
and
cmpsb
inc
les
and
push
insl
push
push
sub
aaa
jo
data16
int3
mov
add
add
sbb
push
std
jmp
xchg
add
decl
xlat
xchg
xor
pop
sbb
mov
xchg
push
jno
pushl
mov
lock
loope
push
pop
xor
inc
push
mov
or
gs
aas
pop
sbb
ljmp
cli
xor
loop
adc
lret
pop
enter
xor
push
cmp
fists
mov
movaps
jmp
mov
ss
arpl
mov
sbb
and
jmp
sti
sarl
and
addr16
cld
shrl
pop
loopne
inc
push
cmp
insl
adc
lcall
add
cld
bound
push
pop
jp
mov
or
sbb
adc
mov
or
pop
sar
add
mov
cwtl
nop
in
add
adcb
incl
add
test
jg
lods
adc
pop
mov
pop
xchg
mov
lods
push
fldl
out
mov
pop
cmpsb
mov
lock
call
icebp
inc
enter
add
mov
scas
dec
dec
mov
xor
jge
push
jns
repz
loope
mov
fs
test
or
sub
int3
jecxz
push
scas
adc
inc
jns
xchg
add
roll
mov
xor
inc
jns
push
add
cmp
pushw
test
sbb
incl
xchg
shr
fs
xchg
xchg
mov
fnsave
jecxz
dec
and
repnz
push
jbe
xchg
mov
inc
push
push
xchg
testb
decl
fsubs
mov
sub
mov
sahf
lods
cld
and
scas
sub
sbb
js
jge
std
mov
sti
pop
push
and
xchg
sbb
push
dec
inc
dec
xlat
sub
jge
loope
incl
in
push
pop
push
test
loope
ljmp
decl
fucom
inc
icebp
fsubrs
ss
cld
jg
cmpsl
lret
test
lahf
adc
xchg
stc
push
jg
lock
sub
lods
stos
dec
out
aad
sbb
data16
mov
jmp
mov
pop
outsb
cmc
bound
push
jp
hlt
xchg
out
test
cltd
cmpsb
icebp
ljmp
pop
sub
mov
mov
cli
mov
jmp
test
lcall
dec
les
sub
dec
rcl
pop
scas
negl
pop
das
fstps
push
pop
sbb
xchg
lret
jge
xor
sub
sub
xchg
or
push
aam
adcb
or
pop
cwtl
sub
cmp
jmp
test
loope
ret
lcall
mov
ljmp
pusha
pop
mov
or
loop
lods
leave
sub
jns
add
incl
test
dec
imul
in
aas
data16
push
aaa
cld
decl
shlb
fnstcw
lea
inc
nop
aad
aaa
cmpsb
iret
imul
clc
es
stos
dec
aam
jg
add
push
scas
out
push
pop
loopne
cmp
popf
insb
or
cli
fwait
int3
mov
out
call
imul
add
ljmp
test
sbb
jb
sbb
dec
das
pushl
cvtpi2ps
mov
xchg
dec
imul
or
adc
es
pop
decl
mov
frstor
mov
insb
cld
mov
pop
and
adc
int
sti
mov
push
and
ds
jnp
jg
lcall
mov
xchg
mov
das
lret
xchg
sub
jns
outsl
jg
jmp
xchg
pop
aaa
sbb
xchg
cld
adc
and
les
lods
bound
push
cmp
jg
inc
cs
xchg
in
mov
orl
push
push
aam
enter
and
repz
push
outsl
pop
sbb
cmc
jb
mov
pop
pop
hlt
cli
jns
decl
sub
add
xchg
dec
mov
testl
les
std
mov
lods
sahf
sub
fstpt
bnd
btc
pop
lods
in
lret
or
push
sbb
popf
push
pop
pop
mov
je
fstpl
lret
pop
mov
das
add
xchg
or
mov
fisttps
sbb
call
das
lret
lcall
mov
lret
stos
and
dec
dec
sub
decl
lds
adc
jne
jle
and
inc
add
mov
lcall
int
xchg
mov
jbe
xor
lret
repnz
in
jmp
push
imul
adc
jmp
loope
inc
cwtl
mov
aaa
inc
sbb
mov
jo
int3
pop
lahf
push
xor
mov
or
stc
push
pop
rorl
adc
sbb
mov
sub
pushl
xchg
int
sub
sarl
mov
in
rclb
jo
fsub
xor
lcall
cmp
jae
icebp
xor
lods
sub
mov
test
adcl
xor
add
lock
int3
aad
inc
cmp
or
scas
jno
ret
cs
rcrb
xchg
test
push
mov
xchg
fcomip
ljmp
pop
add
add
mov
inc
mov
mov
ja
and
mov
or
xchg
cmp
or
xchg
jl
into
call
mov
popf
int3
mov
testl
cmc
push
mov
movsb
in
icebp
xor
rorb
cli
call
shlb
push
popf
popf
test
repz
jbe
push
sar
decl
in
repz
les
mov
and
movsl
lcall
jg
cmp
sbb
out
cmp
xlat
sbb
xor
and
jge
jp
fidivrl
vpcmov
mov
dec
data16
pop
inc
movsb
shl
testb
in
popa
dec
xor
sub
sti
adc
pop
cld
jg
inc
lock
jbe
push
clc
inc
lea
insl
andb
fildll
decl
push
mov
fstl
mov
rcrb
push
negl
sub
je
jecxz
jo
pop
call
data16
push
xchg
fisubs
push
insl
and
arpl
adcb
sbb
mov
and
stos
out
sbb
mov
mov
pop
lahf
pop
xor
lcall
jmp
rcr
popa
outsb
mov
cmp
int
movsl
sub
pop
mov
inc
xor
aaa
cld
out
ret
mov
outsb
jb
add
leave
aam
push
xor
and
adc
pushl
cld
xchg
cmpsb
out
into
les
ret
cmp
cld
add
xchg
lahf
jge
mov
inc
popa
cmp
pop
mov
je
cwtl
lods
adc
in
test
xor
sub
push
repnz
xlat
and
jg
jp
rcll
push
faddl
xor
mov
pop
add
cmp
mov
jl
jecxz
xlat
xor
cmp
add
sahf
rorb
lock
xorl
mov
ljmp
cmp
les
mov
mov
pop
dec
aas
jne
inc
add
div
jp
add
ljmp
loope
nop
xchg
or
jnp
loope
call
shll
cli
dec
push
xor
cmp
add
sub
rorl
rol
imulb
xor
ljmp
add
aad
jae
dec
xchg
pop
aas
cmp
outsb
fs
jbe
mov
stos
mov
push
mov
mov
mov
pop
and
push
ljmp
call
es
jle
mov
mov
add
xor
sub
pop
cmp
aas
inc
mov
insb
incl
adc
pop
pop
pusha
jl
xchg
xchg
in
mov
test
sbb
mov
out
inc
sbb
jg
sbbb
xchg
push
roll
in
js
repnz
adc
push
push
repz
in
mov
cmp
incl
xor
pop
add
mov
cmp
aas
cmp
lret
cmpsl
push
es
cmc
div
inc
fwait
clc
popa
push
fiadds
jl
jb
insb
mov
out
push
and
aas
or
adcl
leave
pushf
mov
mov
outsb
sbb
decl
cmp
pusha
mov
stc
push
xor
jle
sub
add
aaa
std
call
pushf
inc
ffreep
dec
and
push
call
jp
popf
in
add
jb
loope
cmp
jmp
shll
stc
inc
mov
sti
aam
orb
fcomip
pop
inc
dec
lock
xchg
mov
add
push
push
sbb
jl
jg
incl
pushf
and
add
or
jl
leave
and
repnz
sub
mov
inc
das
or
pushl
xchg
addr16
orb
popf
push
fsubrs
cltd
sub
jg
shll
dec
mov
xchg
cld
inc
or
push
xor
imul
cmp
imul
jle
data16
testb
fwait
xor
xchg
ljmp
mov
sti
pop
xor
mov
aam
mov
ds
cmpsb
scas
movsb
or
pop
mov
loop
dec
fcmovu
stos
mov
js
xor
cmp
in
jns
push
cs
shrb
hlt
call
pop
jno
mov
xchg
lock
inc
mov
xor
arpl
adc
xchg
jg
cmp
in
xor
lock
mov
mov
rcrb
mov
shlb
cld
subl
inc
mov
push
arpl
lea
ret
es
push
mov
enter
push
dec
mov
leave
stos
fdivrl
or
sub
mov
stos
jg
enter
sub
fcomip
inc
subb
cmc
fwait
ds
lods
push
icebp
lea
mov
xlat
outsl
lds
ss
in
fcmovnbe
mov
mov
mov
dec
mov
mov
mov
test
fsubl
ret
pop
mov
repz
out
mov
sub
lahf
in
sub
jle
lods
push
pop
xchg
sub
adc
lcall
pushl
sahf
mov
loop
sbb
push
sub
mov
mov
pop
pop
push
mov
es
fs
test
add
icebp
fs
ja
pushl
xchg
sub
ljmp
pop
cwtl
subl
mov
in
mov
inc
or
pop
pop
repz
sbb
mov
mov
push
fcomps
mov
repnz
cs
out
ljmp
or
xor
lods
outsb
pop
lods
xorb
dec
fs
dec
jb
ret
pop
pushl
rorb
inc
inc
cmp
pop
ja
dec
stc
jno
mov
adcl
xor
push
clc
inc
push
bnd
cld
in
xchg
call
add
nop
and
dec
mov
incl
xchg
aam
jns
dec
and
sub
loope
out
insl
xor
xor
decb
or
fucom
or
mov
mov
or
fcmovb
out
adc
mov
stos
jmp
jb
jl
mov
inc
imull
cmc
adc
pop
aad
imul
mov
sub
xchg
leave
push
lcall
sti
into
inc
fwait
lods
icebp
pop
sub
call
es
adc
gs
call
push
aam
or
int
inc
jle
call
sti
sbb
inc
test
adc
fsubrs
into
jle
cmp
mov
push
inc
adc
out
mov
or
mov
leave
add
popa
inc
setno
sar
fptan
sti
push
mov
xlat
imul
loope
cld
and
or
inc
xlat
decl
sahf
icebp
in
fstpl
iret
xor
gs
mov
dec
adc
lock
push
push
jmp
call
jb
fsubs
popf
dec
lds
push
addb
adc
or
mov
mov
iret
xchg
mov
loopne
das
cmpsb
cmc
incl
mov
or
dec
adc
inc
lods
sbb
pusha
mov
into
std
inc
enter
pop
fs
dec
xchg
shlb
cmp
insl
sti
mov
orl
ljmp
and
xchg
push
or
std
rcll
push
sub
mov
xor
call
sarb
or
dec
daa
sub
bound
addl
and
pushl
pop
mov
or
js
inc
xor
lret
lcall
fbld
jno
mov
cld
cmp
outsb
cmp
jecxz
inc
push
stc
sub
fdiv
jnp
ret
jae
dec
inc
loopne
inc
xchg
xchg
or
sub
mov
mov
mov
mov
and
xlat
in
stos
jle
ja
decl
add
push
into
jmp
jns
aad
lahf
aaa
aaa
incl
adc
int
nop
int
sub
inc
push
jno
ret
lods
repz
ret
lcall
and
aaa
mov
jb
enter
popf
aas
or
xchg
add
jnp
test
cld
stos
cmpl
repnz
add
push
and
mov
push
mov
aas
pop
test
sbb
push
mov
mov
adc
decl
xchg
cwtl
test
addr16
jmp
out
mov
rolb
add
cmpsb
in
cmp
xchg
adc
jmp
pop
movsb
jns
test
rorl
stos
or
mov
inc
push
push
andl
or
xor
jnp
in
sbb
sbb
call
xor
push
bound
sbbb
pop
ficomps
fstpt
sub
xchg
sarl
bound
mov
fadds
xor
dec
call
imul
stos
cli
pushl
sbb
movb
sbb
insl
aas
sbb
or
mov
ret
add
int
cmp
cld
mov
pop
imulb
jp
mov
push
rorl
call
imul
sub
push
clc
imul
and
ljmp
fs
scas
adc
sahf
or
outsb
pop
leave
pop
ds
adc
clc
cltd
xorl
xchg
int3
cmpsb
push
std
mov
mov
xor
dec
mov
pop
call
hlt
sub
cmp
out
daa
enter
jp
inc
rclb
ficoml
xchg
incl
xor
cld
idivb
mov
pushl
sub
mov
and
scas
pop
xchg
jae
out
and
movsl
cli
jg
hlt
popf
sub
cmp
dec
jne
cltd
and
ret
mov
call
hlt
aad
mov
lea
incb
int
pop
push
add
mov
mov
fcmovne
pop
stos
jno
jg
mov
add
inc
arpl
das
pop
pop
dec
add
aaa
or
sbb
inc
inc
jle
jecxz
or
adc
out
mull
call
add
inc
ja
shr
fsts
mov
adc
in
into
adc
pop
outsb
jae
push
pop
test
incl
sbb
jo
sbb
jno
mov
xchg
inc
stc
or
cmp
adc
or
lcall
bnd
fst
and
rcr
pop
or
push
clc
lock
lret
inc
pop
mov
jnp
sbbl
mov
scas
push
out
pop
clc
ja
sbb
pop
mov
je
leave
jmp
hlt
mov
jp
rorl
test
out
stos
lret
vmread
test
ljmp
into
lcall
dec
and
jl
shl
jns
adc
stos
dec
xlat
loope
repz
xor
jb
pop
jne
inc
rorl
xchg
cmpsb
mov
inc
addl
out
decl
cld
std
mov
fcmovb
jmp
xchg
jbe
addb
iret
cmp
lcall
les
data16
mov
inc
mov
stos
push
daa
jle
or
aas
adc
sbb
lahf
test
out
je
mov
arpl
lods
push
xchg
cmp
orb
clc
add
das
inc
stc
add
fistpll
jg
adc
sbb
push
xchg
mov
sbb
int3
sub
xor
mov
or
xlat
add
mov
icebp
jnp
scas
or
mov
aad
cmp
mov
push
sub
sub
pop
add
inc
jmp
mov
out
jb
adc
or
insl
stos
pop
insb
rorb
ss
lcall
and
sub
addr16
or
push
cmp
jae
sub
orb
call
loop
inc
lret
xor
roll
mov
outsl
in
push
movsl
test
cmp
sub
mov
xchg
insl
lcall
dec
cld
mov
std
flds
dec
fwait
sahf
and
pop
dec
lds
aas
outsb
scas
cmc
mov
cmp
jne
int
fwait
out
das
ficoms
mov
pop
pop
test
xchg
xchg
stos
fisubrl
ss
mov
adc
imul
in
cmp
ljmp
sarb
fadd
gs
lea
mov
mov
mov
pop
adcl
xchg
lahf
int3
dec
add
sarl
xor
push
popf
cwtl
inc
sbb
xchg
push
test
imul
add
nop
push
int
xor
mov
mov
addb
std
or
shlb
ret
incl
jae
movsb
xor
mov
ja
repz
rcrl
decl
fistps
je
jno
jecxz
shl
aam
nop
mov
scas
add
pop
cmp
stc
cmp
out
sti
sub
icebp
iret
pop
shrl
cmpl
scas
mov
and
repz
and
mov
mov
ljmp
xchg
lcall
jb
pop
adc
cmpsl
mov
fadds
leave
add
adc
dec
cmp
decl
cmp
in
push
and
mov
mov
fidivl
loop
stos
into
jno
cmp
call
xchg
rcrl
inc
mov
dec
scas
cmp
sub
stos
icebp
lret
push
inc
jae
mov
push
dec
inc
xchg
gs
fdivs
cmp
hlt
cmp
and
fcomip
add
push
lods
ret
aad
out
sub
stos
pop
jl
dec
xchg
pop
xchg
mov
loopne
ljmp
jbe
push
loopne
fucomp
push
adc
das
dec
shr
js
repnz
adc
and
leave
hlt
and
mov
mov
jns
jg
inc
hlt
inc
pop
negl
movsb
iret
push
call
dec
test
sub
and
pop
call
inc
aaa
clc
fsts
test
lahf
fildl
sbb
cmc
icebp
aaa
inc
js
xchg
or
pushf
cld
bound
decl
dec
and
mov
enter
or
mov
bound
or
dec
inc
out
shll
push
test
cmc
lcall
xchg
jns
cmp
sbb
pusha
insb
cmpsl
andl
jmp
sarb
cmc
sub
test
mov
arpl
mov
jmp
call
je
sbb
daa
sbb
xlat
loop
dec
sub
cmp
mov
sub
mov
out
fdivr
shlb
xorl
pushf
jle
mov
sbbb
cmp
das
mov
xchg
add
pusha
movsb
push
ret
hlt
int
mov
sahf
xor
aam
sbb
xor
and
jmp
dec
ficomps
cs
test
pop
cli
repnz
jl
adc
test
and
lods
imul
xchg
decl
out
or
inc
mov
iret
dec
clc
imull
jmp
ja
and
jmp
and
push
rcrb
mov
test
push
adc
sti
sub
mov
lds
push
mov
jg
mov
iret
mov
push
add
pop
jno
push
hlt
cli
in
cmp
mov
sahf
popf
popf
in
mov
push
lahf
push
mov
pushl
fwait
sbb
test
insb
sbb
sbb
in
rclb
cwtl
dec
ret
ljmp
mov
fs
cli
int3
outsb
test
jp
int3
and
outsb
sbb
jle
sti
xor
push
sub
pop
mov
pop
cmp
jnp
mov
out
xadd
jmp
test
lcall
mov
xor
inc
cli
sub
rcl
xchg
nop
pop
jge
fnstsw
sbb
sub
or
push
xor
aaa
mov
fiadds
pushf
inc
cltd
outsb
mov
pop
mov
pop
pop
ror
imull
arpl
pushl
sub
pop
cld
xchg
mov
int
aaa
hlt
jg
pop
loopne
add
call
adcl
lcall
xchg
add
lods
mov
lea
sbb
sbb
insb
ja
inc
jbe
call
xchg
sub
adc
repnz
insl
inc
test
insb
mov
push
xor
lahf
inc
add
mov
xchg
mov
lea
dec
stos
in
imul
push
call
out
stc
sub
and
sti
pmaxub
push
xorl
mov
push
mov
incl
mov
mov
stos
aam
sbb
rclb
out
add
dec
push
adc
mov
dec
and
stc
popf
lods
jmp
pop
or
pop
fwait
xchg
xor
js
push
cli
inc
emms
loop
mov
jg
mov
aam
imul
int
mov
pop
pop
mov
cmpsl
cli
lock
fcmovbe
decl
in
es
cmp
push
jmp
jmp
cmc
xchg
jnp
movsb
test
sarb
popa
xchg
pop
ljmp
sub
rol
ljmp
xchg
loopne
mov
clc
imulb
xorl
out
repnz
and
fimuls
xor
lods
mov
lret
faddp
sti
ficomps
in
cwtl
xchg
iret
mov
pmullw
pushl
pop
and
mov
aad
push
sbb
cltd
jg
pop
mov
outsl
mov
sbb
mov
and
cld
pushl
sbbb
repz
sub
inc
mov
sbb
dec
sti
call
cld
fbstp
icebp
lods
loopne
mov
cld
shlb
or
sub
cmpsl
adc
jg
or
jp
fistl
push
inc
std
mov
mov
sbb
std
mov
lock
incl
bound
ret
rclb
xchg
out
xor
lods
cmp
fcomp
lea
lock
stos
aaa
mov
jg
out
xchg
hlt
mov
clc
popf
scas
mov
repz
jmp
cmp
xlat
in
cmp
pushl
fstl
insl
dec
mov
xorb
push
jns
mov
pop
incl
shrb
lret
push
add
and
loope
fildll
sbb
daa
sub
fdivrp
pop
nop
enter
cs
and
sbb
push
and
xchg
call
xchg
iret
fnsave
movsl
mov
pop
inc
ljmp
xchg
jmp
fstl
or
sbb
cmc
adc
repnz
pop
jo
mov
movsb
int
sbb
fldt
jg
inc
popa
jg
stos
lret
jns
scas
incl
inc
incl
jno
and
pop
imul
jmp
lods
ds
cmp
shl
repnz
xchg
sbb
sbb
xor
enter
inc
mov
pushl
lods
pop
push
or
loopne
dec
out
push
add
pop
sti
push
ret
ljmp
rclb
sbbb
and
sbb
cld
mov
adc
add
jmp
incl
jbe
cmp
push
and
adc
fdivrp
push
jmp
outsl
dec
addr16
and
fidivrl
imul
pushl
cmpsb
insb
and
movsl
sbb
push
jbe
sbb
movsb
adc
cltd
cwtl
out
jnp
aaa
jb
in
jmp
je
test
sbb
dec
and
rcr
push
out
jle
and
lcall
ljmp
jbe
jo
sub
adc
or
jb
xor
call
pop
shll
cmp
jmp
pusha
iret
xchg
mov
mov
push
clc
push
nop
jge
push
jae
cmp
ljmp
cmp
and
std
cld
mov
rol
xor
in
mov
xchg
lcall
hlt
stos
and
or
mov
iret
or
push
jae
inc
cmp
lds
cltd
mov
mov
clc
loopne
xor
push
mov
jb
lock
push
dec
ljmp
xchg
adc
ffree
jae
popf
mov
cmp
lahf
in
imul
add
inc
adc
int3
inc
xor
dec
or
int3
push
push
ret
lcall
cmc
gs
dec
sti
arpl
decl
jbe
mov
dec
lahf
test
scas
stos
jnp
and
adc
call
jmp
test
mov
aas
fdivs
pushf
in
mov
loopne
popf
and
mov
add
dec
cmp
sbb
sbb
arpl
arpl
mov
imul
jg
cwtl
sub
jle
jno
adc
add
scas
jae
mov
leave
push
sub
fcomip
mov
pop
add
mov
xchg
dec
cmp
filds
stos
or
adc
mov
xor
push
push
mov
rcrl
add
aad
cmp
push
aas
vpshaq
jmp
bnd
pop
or
jg
mov
xchg
jo
sbb
loopne
dec
pop
repz
mov
inc
mov
cld
rorl
ja
or
xor
nop
lcall
test
loope
dec
or
lahf
jmp
aaa
fistps
inc
aaa
testl
mov
stc
adc
mov
pop
mov
mov
cld
jg
loopne
leave
or
lods
and
rorb
push
mov
daa
push
pop
mov
mov
jg
add
add
pop
jl
push
or
pop
mov
dec
lods
push
mov
dec
sub
mov
and
ljmp
jmp
cltd
adc
rcr
sub
sbb
sbb
cs
popa
push
add
jmp
int
insl
jecxz
mov
das
scas
adc
fnsave
pushl
std
mov
mov
push
enter
divl
shl
mov
fyl2xp1
fcomip
pushl
enter
mov
dec
jno
xor
fimuls
jg
cmp
adc
dec
int3
dec
xchg
insb
repz
and
cmp
inc
dec
es
loope
mov
jl
dec
pop
test
stos
xchg
sbb
add
sub
lcall
shr
mull
xorl
inc
xchg
push
mov
iret
repnz
adc
jg
call
sbb
hlt
cwtl
daa
adc
arpl
cmp
mov
call
cltd
push
gs
inc
pop
and
inc
pop
imul
jno
sti
out
push
std
mov
jmp
ror
add
push
jnp
pop
aad
jmp
stc
cmc
sbb
lds
sbb
sbb
cmp
pop
loope
std
adc
jg
aas
jg
mov
fdivs
sub
xor
call
inc
lock
ljmp
subb
and
insb
clc
sub
arpl
std
adc
out
sarl
xchg
popa
jmp
es
cli
pop
cmp
imul
rolb
xchg
fs
call
jle
bound
aas
jno
push
lcall
notl
pop
fmuls
lcall
pop
push
xchg
xchg
aam
mov
lahf
add
push
mov
cmp
clc
aad
cmpsl
repz
mov
lods
cmp
out
icebp
mov
insl
jmp
in
adc
popw
xchg
jle
repz
test
push
ljmp
mov
mov
lcall
mov
or
arpl
push
xor
inc
out
push
test
mov
pop
add
cld
mov
popf
nop
dec
fnstenv
rolb
outsl
in
cltd
int
cltd
fildl
adc
decb
cli
inc
sbb
adc
mov
pushl
mov
sbb
jge
imulb
xor
mov
popa
addb
ret
mov
fsubr
add
dec
cmp
fcomip
sub
popa
mov
sbb
clc
iret
jge
loopne
int3
mov
dec
xchg
jp
ret
cli
in
inc
dec
xor
stos
std
cmpsl
ret
and
push
sti
les
cld
lcall
and
enter
push
jb
or
xor
add
cltd
cmp
iret
ret
jmp
loope
test
decl
or
pop
ja
js
jp
and
stc
sub
add
cld
jmp
test
call
jnp
mov
or
ror
pop
inc
imul
stos
cmp
pusha
lock
jle
push
push
repz
mov
mov
push
hlt
dec
jmp
sti
cmp
mov
in
cld
repnz
cli
js
fwait
jmp
fdivrs
fwait
les
stc
pop
loopne
xchg
popa
std
sub
jbe
mov
flds
sahf
push
push
push
adc
jmp
popf
sbbl
push
and
loopne
pusha
mov
aas
fdiv
lods
xchg
call
mov
ds
sub
and
incl
test
gs
es
adc
jg
jb
es
mov
fldenv
enter
cmpsb
add
lcall
adc
aam
js
adc
or
pop
subb
mov
aas
pop
rorl
adcb
ret
sbbb
jmp
and
fs
filds
lods
dec
adc
cmp
pusha
mov
or
faddl
inc
mov
leave
test
sar
jno
jne
cmc
adc
add
cltd
int3
test
xchg
mov
pop
jmp
xor
and
mov
ret
out
les
out
pop
idiv
ljmp
inc
int
jge
into
pusha
gs
mov
mov
push
pushl
sub
pop
and
adc
call
sub
add
ljmp
xchg
cs
mov
pop
cmpl
fwait
jbe
icebp
ja
movsl
movsl
adc
insl
push
popa
jns
outsl
jne
lcall
cmpsl
cmp
sbb
cwtl
arpl
sti
addr16
cmc
dec
jno
jmp
ss
dec
ljmp
iret
xchg
dec
test
jmp
aam
rcrl
incl
lahf
ja
mov
out
dec
ss
fs
stos
icebp
jp
mov
in
pop
push
sbb
mov
iret
xchg
mov
testb
xchg
in
sub
rcll
pop
je
jmp
mov
jp
or
ficoms
out
mov
jle
mov
cmp
push
fadd
dec
or
mov
or
sbb
xor
adc
shlb
js
fsub
sti
mov
dec
enter
xchg
in
ljmp
jb
data16
loop
pop
outsl
test
ds
ljmp
push
cmpsb
enter
add
add
test
dec
mov
fdivr
call
mov
das
pusha
push
or
arpl
pop
pop
test
icebp
jbe
mov
cmp
decl
insb
pop
sub
mov
cwtl
mov
lcall
data16
aas
filds
and
ret
mulb
ljmp
sar
decl
sub
xchg
stos
or
mov
jo
inc
sbb
pop
test
xchg
popf
mov
jl
data16
daa
ficomps
fmull
inc
outsb
adc
push
or
in
add
mov
xor
and
ret
shr
jbe
mov
cmc
test
roll
sub
aas
shlb
cmp
mov
dec
cmp
test
sarb
lods
sarb
dec
inc
mov
imul
dec
lcall
nop
and
inc
cmp
pushf
fwait
cmpsl
loopne
loope
outsb
daa
stc
and
jge
and
ds
iret
in
je
add
popa
xchg
nop
mov
pop
fcomi
sbb
cs
jbe
cltd
inc
orl
or
xlat
cli
cmp
dec
aas
bound
clc
jmp
loopne
sub
lret
jg
dec
pop
sbb
idiv
bound
lcall
push
jecxz
lods
outsb
adc
mov
es
xor
lcall
sbb
std
lods
mov
push
mov
cmp
in
jns
sarb
xor
gs
pop
xchg
mov
xchg
das
pop
loope
js
shlb
into
fimull
push
xchg
test
inc
es
lock
icebp
mov
xchg
jne
incl
pop
adc
add
xchg
push
add
lahf
test
fadds
shl
ljmp
xchg
data16
out
lods
push
pop
adc
mov
adc
cmpsl
insb
sbb
pop
outsb
xchg
outsb
sub
jecxz
push
outsl
fistps
pushl
ret
mov
iret
aam
repz
out
and
sti
cmc
das
insb
jecxz
mov
lods
popa
sti
lods
je
ss
imul
sbb
lea
cs
add
test
xchg
adc
pusha
scas
rol
fdivs
mov
pop
js
jmp
or
mov
pusha
jl
pop
push
cwtl
push
xor
mov
jecxz
ret
icebp
push
dec
cvtpi2ps
fdivrp
icebp
lods
pop
and
cld
xchg
ret
imul
imul
adc
add
stos
mov
push
sub
clc
mov
xor
sbb
mov
cmc
imul
pushl
es
ds
jb
push
in
mov
test
xchg
jb
call
bswap
mov
addb
outsb
push
sub
mov
test
mov
movsb
loope
ljmp
xchg
xor
shr
and
lock
mov
lods
pop
mov
dec
out
movsb
mov
lahf
fcomip
incl
dec
or
jns
dec
ljmp
pusha
adc
or
nop
lcall
sub
mov
lahf
or
fdivrs
das
loope
push
add
sbb
call
mov
add
icebp
cltd
xchg
and
sub
cmpsl
xorb
das
outsl
pushl
jle
inc
ljmp
pop
repz
insb
jo
imul
lock
dec
push
imul
stc
jo
pop
repz
inc
shrl
jle
mov
add
dec
out
dec
sub
shlb
cmp
mov
pop
lea
or
mov
xchg
pop
in
outsb
cmpb
mov
cmp
dec
ds
jecxz
or
ss
sbb
inc
pop
and
pop
sarb
adc
dec
mov
cmpb
dec
xor
mov
xor
test
push
sahf
jae
push
ljmp
iret
or
fwait
sar
js
scas
jecxz
filds
push
incl
add
push
or
call
pusha
insl
scas
or
lods
lock
jmp
rdpmc
dec
xchg
xchg
leave
pop
mov
adcl
outsb
add
movsb
dec
dec
jmp
jnp
push
aad
add
divb
pop
jno
test
inc
shll
arpl
and
xchg
push
jg
sub
adc
sbb
mov
jge
add
aaa
mov
sti
and
mov
xchg
pushf
xchg
add
or
mov
mov
cmpsl
jo
xor
dec
xchg
incl
out
lret
jmp
pop
retw
pop
insb
out
jbe
inc
arpl
sub
jecxz
scas
adc
and
ret
shll
mov
adc
push
rcll
fs
cmp
jne
cmp
movsb
push
shll
jl
add
dec
es
adc
push
push
adc
shll
jl
jp
or
vpaddb
repz
lock
jmp
push
pusha
adc
or
imul
sub
or
pop
fstpl
lret
lcall
inc
jnp
pop
es
xor
pop
out
mov
inc
pop
xor
mov
cmpsb
sti
aam
pop
nop
imul
mov
pop
jne
inc
in
in
xor
inc
xor
dec
dec
aaa
mov
cmpsl
mov
pop
lahf
pushl
push
in
lcall
mov
out
fs
popa
jns
or
push
mov
int3
mov
cmpsb
nop
in
sti
cmp
roll
adc
mov
mov
jge
xor
out
mov
sbb
xor
inc
mov
icebp
cmp
lea
inc
adc
jnp
in
pushl
leave
jne
sahf
dec
or
outsl
jg
mov
dec
inc
cltd
icebp
adc
sbb
pushl
adc
dec
push
and
mov
and
push
int
jecxz
or
scas
js
test
outsl
sbb
arpl
mov
lcall
in
daa
out
ror
test
mov
js
pop
loope
push
inc
popf
sub
push
fnstenv
mov
scas
sbb
and
leave
adc
sbb
and
jb
sahf
aas
out
xchg
pop
scas
jl
popf
xchg
add
fs
xor
xchg
and
sbb
mov
jmp
jg
pushl
xchg
out
iret
je
fnstsw
mov
mov
xor
repz
call
movsb
decl
mov
sahf
hlt
jle
js
cmpsl
movsb
int3
pop
cld
imul
imul
sbb
in
xchg
dec
int3
pop
cmc
call
fidivrl
outsb
lock
enter
std
adc
loopne
push
cld
decl
dec
pop
aas
aam
cltd
lods
idivb
cli
xor
mov
or
ljmp
jns
lods
aam
addr16
and
cmpsb
pop
adc
xchg
add
addb
mov
hlt
loop
cmc
or
xchg
push
sub
ja
outsl
fsubrs
imul
sbb
cmp
cltd
loopne
push
aas
mov
xchg
shlb
dec
adc
jg
aaa
aaa
jp
xor
pop
xchg
sub
jg
or
push
xchg
jmp
fdivrl
and
lock
mov
cmp
sarl
xchg
sub
mov
js
push
and
cmp
out
mov
or
subl
mov
add
movsb
sti
xchg
decl
add
push
ret
adc
xchg
ss
scas
mov
push
ja
cld
stc
inc
push
and
mov
divb
scas
cld
mulb
inc
sbb
inc
inc
ljmp
pop
push
mov
adc
add
pushl
fidivrs
push
adc
scas
push
incb
test
decl
daa
cltd
test
mov
or
test
add
push
pop
mov
ss
ds
insb
pop
cmovge
jmp
xchg
mov
nop
movsl
add
aas
cs
pop
insl
popf
adc
push
cli
mov
jo
mov
les
add
lds
pop
jb
std
adc
lcall
dec
pop
adcl
xchg
xchg
jne
loop
shrl
subl
inc
mov
mov
pop
sti
cmpsl
ffree
fidivrl
pop
insb
enter
cmp
and
xchg
shll
sub
test
out
or
and
stos
jle
movsb
add
cmc
mov
sub
jnp
leave
bound
mov
fldt
push
into
jmp
mov
sub
add
pextrw
pop
call
pop
pushf
push
imul
push
es
loope
call
movups
stc
es
faddl
das
gs
mov
std
sbb
aam
and
fs
fiadds
jbe
xor
ljmp
xor
ss
push
cwtl
jl
cmc
movb
push
scas
mov
into
xchg
lcall
imul
inc
aad
inc
sahf
lds
xor
pop
ljmp
and
cli
ljmp
push
sbbb
cmp
xor
ljmp
cmpsl
sbb
adc
lcall
out
ret
in
bound
add
jns
iret
mov
add
lcall
cld
mov
incl
aaa
push
out
rorl
fwait
neg
out
add
pushl
adc
mov
sub
add
jg
sti
cwtl
xor
and
ss
xchg
inc
xchg
mov
nop
addr16
mov
jbe
push
shrb
lock
add
cmpl
lahf
jmp
mov
and
adc
dec
add
cwtl
sub
sti
negb
pop
out
xchg
movsl
mov
lods
out
xchg
hlt
cwtl
xchg
or
dec
mov
adc
cli
jg
clc
sub
orl
fnstsw
adc
fsub
xchg
loopne
test
es
lods
test
imul
sti
jmp
mov
shl
stos
inc
push
sbb
dec
push
cld
out
fidivrs
jns
pushl
fistpl
fucom
insl
aam
rorb
fs
jmp
popa
and
cmp
clc
pushl
insl
data16
ds
scas
xor
nop
push
mov
icebp
jle
cmp
ljmp
xchg
add
test
movsl
xor
and
sub
rolb
sbb
test
jmp
or
push
mov
movsl
sbb
mov
inc
test
out
mov
mov
and
les
mov
or
aaa
ret
xchg
ds
jnp
sbb
lcall
pop
jnp
add
mov
lahf
out
idivl
das
cld
fnstcw
loopne
dec
jne
jg
mov
ljmp
dec
into
jmp
add
and
out
mov
pop
arpl
jns
mov
mov
gs
inc
inc
or
das
mov
add
in
xchg
les
push
cwtl
cmp
mov
inc
shll
adc
lods
call
inc
lret
xor
inc
mov
dec
push
popa
jae
mov
addb
in
lea
cmpsb
je
lret
jmp
sahf
mov
mov
mov
lahf
cs
sub
out
adc
mov
push
cmp
ret
xchg
cmpsb
cmp
incl
jle
mov
flds
jno
cli
js
jb
and
push
jb
decl
cltd
scas
or
dec
xchg
fdivl
aad
xor
and
das
out
lcall
hlt
adc
inc
xchg
iret
inc
pop
ret
pop
and
stc
das
mov
shll
clc
push
mov
push
lea
mov
xlat
in
cmp
pop
push
ljmp
lcall
xor
mull
adc
in
push
jle
inc
lods
std
lcall
mov
add
adc
gs
data16
icebp
xchg
mov
aaa
std
mov
lock
into
shlb
test
pop
sbb
mov
in
xchg
repnz
xor
nop
adc
dec
xchg
xor
push
cmp
jp
mov
or
out
jge
scas
push
inc
sub
sbb
push
std
in
cmc
cmp
das
pop
dec
jg
ljmp
out
add
mov
or
jecxz
test
mov
fbstp
mov
arpl
lds
push
jmp
faddl
or
shl
js
add
mov
xor
pop
orl
mov
push
int3
insl
xor
insl
ds
push
fsubrl
mov
sub
mov
lock
call
aas
fimuls
inc
pop
mov
mov
aad
cmp
sbb
jmp
imul
loopne
pop
push
and
out
rcll
push
dec
jns
fildll
rcrb
or
inc
test
push
int3
mov
sbb
and
ljmp
sbb
mov
mov
jecxz
xchg
lret
jo
repnz
dec
lcall
lcall
int3
or
out
lret
xchg
jecxz
in
mov
imul
dec
in
sar
cmp
xor
mov
push
adc
inc
stos
dec
cmp
or
lea
minps
mov
or
rclb
or
mov
or
push
add
inc
out
sub
decl
xlat
outsl
add
sahf
scas
pop
xor
stos
xchg
fs
add
jmp
int3
out
mov
push
hlt
push
notb
daa
test
in
test
sbb
pop
js
mov
and
rcl
jmp
jl
in
sbb
notb
lods
xor
pop
mov
pop
icebp
mov
or
fimull
aas
sub
mov
sbb
lret
cwtl
add
mov
lcall
dec
dec
sbb
ktestb
mov
pushf
push
imul
mov
aad
cmpsb
testb
mov
cmp
push
rcll
xchg
dec
movsl
lods
cmp
ficoms
xor
dec
mull
insb
adc
pop
pop
add
lcall
movsb
sub
inc
mov
dec
xor
std
daa
js
pop
mov
inc
mov
push
mov
mov
push
cmp
push
push
jl
mov
or
icebp
fcomip
pushl
jg
mov
cmpsb
int3
out
out
cmp
inc
enter
aas
cmpsl
sar
inc
cwtl
stc
dec
arpl
divl
lcall
mov
fs
jg
and
inc
push
decl
dec
sub
call
aas
mov
mov
popa
lcall
pop
shrb
popf
ror
bnd
add
cmc
and
jns
xchg
xor
lcall
lcall
out
sbb
cmp
or
or
popa
fdivr
ljmp
sbb
xor
mov
pop
loopne
push
sub
test
out
out
std
jnp
mov
out
jg
push
jbe
repz
cli
xlat
dec
xchg
in
popf
jns
test
ljmp
pop
test
pop
dec
or
jmp
pop
ja
adc
mov
es
mov
ret
push
out
jl
int
push
sbb
scas
or
in
sbb
iret
inc
lds
fcos
mov
ret
fsubl
sub
repnz
scas
cs
daa
adc
cwtl
and
decl
lds
outsb
mov
ret
ja
pushf
push
jle
inc
stc
pop
push
aaa
fildl
mov
mov
andb
clc
jmp
divb
dec
outsl
push
lods
aad
mov
std
ds
les
call
std
decl
inc
lods
jecxz
mov
orb
sub
add
sbb
or
mov
in
cs
out
insb
adc
pusha
xchg
pushf
int
in
notb
pop
imul
decl
jne
fsubrs
js
mov
push
int3
repz
in
jae
xchg
daa
fldt
xchg
addr16
dec
stc
shl
jmp
insb
lea
movsl
mov
adc
fstpt
fdivrp
mov
ljmp
push
outsb
inc
jle
cmpsb
dec
inc
iret
test
and
mov
xlat
add
outsb
and
xlat
mov
jg
cli
pop
and
or
jle
cmp
or
jnp
rcll
push
sub
jg
push
popf
mov
popf
cmpsl
jne
out
fabs
or
and
lret
lock
pushl
push
inc
outsb
pop
jbe
push
or
andb
lret
xchg
in
or
clc
call
sub
test
mov
lods
mov
mov
fdivrs
lock
ret
or
ljmp
mov
cmp
inc
sub
loopne
rcr
inc
in
rcrl
cmpsb
dec
andl
jmp
in
xchg
sbb
add
mov
scas
sbb
jo
inc
sbb
subl
inc
mov
pop
ljmp
push
shll
xchg
dec
mov
jg
and
mov
dec
pop
push
sbb
pop
dec
call
frstor
mov
cmpsb
push
xor
push
lds
stos
jmp
shrb
in
push
aam
pop
js
cmp
or
mov
push
incl
xchg
or
push
or
dec
lock
lahf
in
fs
adc
inc
dec
test
fldcw
cld
xor
repnz
inc
mov
repnz
inc
shrb
insb
jge
and
jbe
sbb
mov
adc
fcomip
cmp
add
dec
arpl
aas
fists
test
pusha
in
mov
jmp
mov
and
aad
and
out
lods
jb
int
adc
jl
or
stos
add
in
repz
inc
std
fdivl
les
sub
dec
pushf
sbb
push
mov
decl
cmpb
test
mov
lods
jmp
dec
flds
mov
mov
lret
pop
in
xor
jbe
fdivr
idiv
push
in
sar
aad
call
test
xlat
xor
adc
test
ljmp
sub
sahf
sub
aaa
ficompl
inc
xchg
jo
jecxz
addr16
setg
sbb
jmp
push
sub
mov
sub
cmc
jo
lahf
cwtl
jno
aaa
sbb
jb
test
pop
call
push
pop
outsl
and
adc
das
inc
stc
pop
mov
dec
aaa
cld
jmp
arpl
iret
rorb
leave
push
jmp
test
in
rolb
call
xor
sub
into
roll
decl
cltd
out
jle
sbb
icebp
bswap
cmp
jb
push
and
addr16
xor
push
rcr
mov
xchg
cs
push
test
notl
scas
pop
jbe
ret
push
xor
pushl
ret
xor
xchg
fisttps
lret
xor
lock
popa
sub
outsb
lcall
pop
flds
fistl
mov
in
outsl
nop
sbb
inc
stos
into
in
addr16
push
push
call
rcll
inc
jle
lahf
jne
inc
shlb
add
cmpsl
mov
mov
pop
icebp
and
mov
into
std
pop
dec
lahf
stc
sbb
xor
decl
cmp
or
sti
pop
insl
or
and
cld
cmp
push
dec
test
mov
sbb
stc
dec
dec
mov
js
sub
cmpsl
add
lcall
lds
orl
push
pop
inc
decl
inc
subl
arpl
push
in
pop
xchg
call
imul
filds
fst
out
int3
add
pushf
mov
out
cmp
call
es
xlat
push
adc
or
jb
cmp
fdivrl
mov
cli
out
sbb
push
arpl
dec
leave
jo
dec
lds
in
arpl
je
pop
ljmp
fs
dec
hlt
and
out
xchg
shrl
adc
xor
lcall
rcrl
std
pop
and
or
inc
mov
incl
sbb
jno
fwait
mov
mov
addb
aad
dec
sub
call
bound
or
lock
lahf
add
xchg
enter
gs
push
test
dec
inc
popf
das
clc
ljmp
outsb
xchg
repnz
int3
mov
jmpw
fwait
pop
in
scas
mov
pushl
aad
jmp
inc
push
fcoms
sbb
xchg
lcall
jb
push
call
mov
int
fcmove
lcall
xchg
lcall
dec
inc
inc
syscall
pop
popa
ret
mov
pop
adc
or
mov
std
jae
call
mulps
mov
dec
in
jle
ficoms
call
lret
ret
cmpsb
push
popf
out
sbb
mov
pop
sti
sbb
push
es
pushf
xchg
lcall
movsl
push
fwait
push
bound
ss
fpatan
mov
shll
cmp
decl
pop
mov
aaa
pop
pop
adc
or
aaa
cld
sti
dec
or
ret
xchg
fs
fldenv
repnz
decl
push
push
mov
xchg
rclb
jmp
or
pop
lret
mov
out
bound
xchg
arpl
adc
push
rorb
xchg
inc
push
jle
je
cmpsl
xchg
add
cltd
xorb
cmp
fst
mov
call
scas
xor
roll
lods
mov
jne
mov
sbb
loope
push
adc
jne
and
ljmp
mov
test
inc
adc
insb
sub
adc
icebp
sbb
imul
out
lods
out
sub
int3
ljmp
loope
outsl
pop
ret
xchg
jne
jae
cmp
xchg
pop
jae
sub
push
icebp
outsl
cli
call
flds
xchg
dec
mov
packuswb
jns
cmp
fisubl
call
icebp
shll
xor
scas
add
fcmovne
in
data16
cmp
lret
js
insl
mov
sub
cld
jg
push
movb
dec
mov
push
cmp
xchg
cltd
lods
imul
push
insl
js
and
out
jae
negl
bnd
testb
mov
and
stc
or
cwtl
rcll
add
out
icebp
test
xor
loopne
xchg
mov
mov
and
xchg
aaa
leave
shrb
sbb
and
cmc
mov
shlb
cmp
pcmpeqd
xchg
xchg
ret
or
andl
jmp
fadds
pop
xor
in
xchg
in
mov
out
jmp
je
mov
decl
push
pushf
mov
jno
in
test
cltd
adc
add
call
jg
pop
ljmp
lds
mov
mov
push
movsl
sbb
push
xor
xor
ret
adc
jp
jo
and
rcrl
lock
fnsave
adc
push
cmp
loope
incl
add
add
test
rcrl
or
out
dec
xchg
mov
cmpsb
int3
fistps
sbb
cmp
ja
ror
js
repz
cmpsb
jnp
sbb
push
ljmp
mov
loope
sbb
nop
jmp
fucom
sub
cmpsb
push
cwtl
addr16
sar
jbe
xor
incl
mov
inc
pusha
daa
cs
xchg
pop
dec
mov
pushl
cmpsl
pop
shrl
cmp
adc
inc
les
mov
fadds
das
jb
jge
mov
dec
aas
xor
jmp
pop
inc
shll
shrl
mov
inc
rclb
dec
xchg
enter
call
sbb
jns
dec
push
mov
sub
imul
scas
cmpsb
xor
leave
std
cmp
call
sbb
mov
in
xor
lahf
lods
icebp
pop
mov
mov
jg
data16
mov
idivl
push
pop
cmp
test
jmp
lret
enter
pop
lods
andb
decl
rol
inc
fidivrs
test
es
cld
decl
sub
inc
ret
jae
inc
xchg
xchg
pop
mov
popf
andb
sti
sub
cmpsl
das
rorl
in
pusha
pop
pop
lods
gs
insb
pop
clc
leave
pop
ds
rcrl
jae
jmp
test
cmc
jl
lods
loop
sti
sbb
pop
dec
fsubrl
clc
adc
pop
insl
fcomip
cmp
dec
or
jg
cmp
xor
mov
cmp
call
and
push
daa
addr16
ret
pop
rcrb
mov
call
in
shlb
push
pop
jmp
fbstp
or
shl
int
mov
cwtl
call
cld
lcall
cmp
inc
sbb
cwtl
inc
lahf
out
stos
xor
loop
mov
decl
dec
and
enter
pop
xchg
cmc
jge
cmp
pop
push
adcb
test
lcall
mov
stos
cmpsb
repnz
imul
orl
push
jg
jo
add
cmpl
cmp
push
iret
push
dec
and
rorl
decl
subb
sbb
xchg
je
adc
out
jmp
cwtl
sbb
test
dec
xor
jecxz
jo
lock
test
mov
or
jg
mov
dec
cli
nop
dec
stc
je
sub
or
push
add
popa
add
sub
movsb
adc
xor
pop
xorl
mov
lcall
inc
dec
mov
pop
stos
add
fnstenv
push
ljmp
rol
cmp
or
xor
xlat
ret
cmp
fisubrs
sbb
cld
out
fwait
das
in
std
xchg
add
mov
inc
lcall
pop
pop
xor
pushf
insb
adc
fsubs
js
mov
ljmp
xor
sbb
mov
hlt
push
sarl
repz
cmp
pushl
mov
jae
or
inc
cmp
lahf
mov
pop
sub
xchg
pop
test
inc
cwtl
dec
sar
dec
adc
jno
mov
jg
repnz
loope
or
pop
andb
mov
aad
sub
ret
shlb
in
ljmp
mov
xchg
mov
in
pusha
lock
stc
fists
and
js
dec
clc
inc
stc
and
lods
aam
cmp
cmp
incl
mov
push
ret
xchg
scas
daa
mov
into
lods
and
scas
movsb
cmpsb
add
dec
ljmp
cmp
cmp
push
adc
pop
push
add
push
out
nop
mov
fsubl
jl
jmp
pop
aam
mov
leave
mul
test
or
ret
cs
push
mov
pushl
xor
shrl
cmp
sarl
pop
das
mov
sti
xchg
and
and
adc
or
call
ja
add
divb
jnp
pop
lock
xchg
jl
hlt
inc
adc
mov
inc
sbb
jl
cmp
push
ss
push
or
es
push
push
cmp
lcall
add
sahf
xor
mov
fwait
sub
in
push
pusha
rorl
lret
mov
jmp
mov
fdivrs
inc
test
or
jl
sbb
call
call
rclb
aaa
test
jl
and
movsb
jnp
jne
or
mov
and
mov
adc
add
or
sbb
cmp
or
jmp
leave
xchg
pop
subl
cmpsl
inc
icebp
orb
sbb
mov
scas
xchg
rcl
add
xor
and
dec
mov
dec
sub
lcall
nop
adc
or
fwait
push
out
dec
cmp
jmp
jle
shlb
jbe
jbe
in
mov
pop
push
xor
mov
pop
mov
insb
pushf
pop
lcall
and
jns
outsl
repz
loop
adc
outsb
je
pushf
xor
pop
xchg
xor
mov
cld
out
mov
sarl
mov
lea
call
ljmp
jb
mov
inc
inc
mov
xchg
inc
mov
pop
push
dec
mov
in
das
jp
in
movsb
xchg
jecxz
loopne
mov
popaw
sub
xchg
cs
ljmp
mov
or
sti
cmp
mov
push
cmp
inc
leave
fists
and
cli
mov
push
mov
pushfw
dec
sub
sbb
jae
add
popf
mov
cli
call
ret
xchg
leave
ss
movsb
cmp
pop
mov
std
mov
sar
adc
dec
jmp
call
dec
cli
out
xchg
pop
mov
scas
jl
sbb
nop
jbe
mov
jg
jmp
pop
adc
xor
test
or
mov
aad
repnz
dec
sub
sbb
xor
jge
mov
add
push
in
mov
notl
mov
cmp
ret
jae
mov
cltd
cli
jle
or
dec
popa
add
incl
pop
sbb
jae
je
enter
cltd
rorb
pop
cwtl
mov
add
mov
or
sbbl
leave
lods
push
rorl
pop
in
dec
cmp
xchg
out
js
mov
pop
mov
nop
sahf
jmp
fnsave
sahf
cmpsl
imul
lcall
popa
in
fisubl
mov
add
sbb
and
mov
icebp
cmp
jle
adc
outsb
imul
lods
inc
pushl
push
mov
mov
cmp
push
push
jae
xor
ljmp
movsb
lods
sub
add
add
push
dec
jecxz
scas
fdivrs
dec
call
scas
pop
ret
xor
push
add
cmp
cli
mov
jnp
das
sbb
jmp
incl
loopne
jge
cmp
sub
mov
andl
lods
lods
imul
sub
cld
in
out
jmp
loopne
rcl
cwtl
cmp
insl
and
lcall
dec
sarb
neg
fmuls
insb
mov
repnz
push
imul
aas
sbb
aam
scas
mov
in
out
adc
jns
pop
pop
cld
mov
sbb
repnz
xchg
arpl
ss
loopne
cwtl
cmpsl
imul
jg
call
or
dec
mov
outsb
jnp
and
mov
or
testb
xchg
cmp
sti
fdivrl
mov
int
js
xchg
pop
jnp
inc
daa
andb
sbb
pop
xor
jg
daa
lret
mov
es
mov
cmp
dec
jae
fldenv
popf
lds
hlt
std
shl
leave
loop
jae
cs
push
mov
mov
int
mov
lcall
cli
mov
cwtl
fwait
xchg
jg
mov
mov
call
cld
les
stos
lret
cld
popf
imul
pop
cmp
popa
add
xchg
pushl
icebp
pusha
in
fdivrs
icebp
andb
shl
xchg
imul
sub
popa
jmp
call
mov
imul
xchg
stos
mov
movsb
push
hlt
adc
sarl
mov
stos
pop
inc
or
mov
sbb
mov
push
adc
add
mov
inc
scas
dec
pushl
mov
lret
jae
cld
mov
aaa
sbb
xrelease
int
mov
mull
outsl
lcall
lahf
loopne
pop
fildl
mov
sbb
inc
dec
xor
mov
dec
cli
ljmp
clc
scas
sbb
insb
xor
movsl
out
xchg
inc
push
inc
xchg
cmpsb
ljmp
add
jb
add
popa
jecxz
aad
or
out
pusha
push
jo
jae
or
sub
incl
push
push
sbb
push
rcl
bound
les
mov
sub
pusha
repnz
xor
pop
dec
adc
addr16
outsb
out
jl
pusha
inc
xor
iret
xchg
call
adc
popa
push
inc
dec
mov
mov
les
add
cmp
test
ljmp
idiv
mov
pop
pop
adc
xor
in
outsl
mov
loop
lcall
pop
dec
add
jns
repz
inc
fists
cmp
sahf
loope
sub
mov
inc
jmp
add
call
scas
imul
mov
icebp
divl
inc
push
notl
js
fst
in
clc
lcall
jl
pop
incl
test
mov
xchg
int3
xor
cmc
cmp
ljmp
cltd
repz
add
psrlw
dec
dec
or
cmpl
insl
incl
xchg
or
mov
xchg
cmp
stos
pop
dec
mov
fsubs
jbe
pusha
stos
loope
push
mov
das
jbe
call
dec
pushl
cld
dec
and
sbb
adc
scas
jge
stos
inc
jg
mov
ja
cwtl
pop
sar
cmp
repz
lahf
fildll
mov
dec
test
pop
pop
jmp
mov
and
in
sbb
sub
or
popa
add
int3
jmp
lock
aam
push
test
xor
xchg
ret
adc
inc
sub
sub
mov
inc
push
or
sub
je
daa
pop
pusha
aas
inc
call
push
loope
ljmp
sbb
incl
mov
jmp
lcall
jns
aaa
and
sub
out
inc
jp
sar
pushl
push
and
add
scas
dec
repnz
sbb
adc
das
jg
test
pushl
push
inc
push
cld
adc
xchg
mov
sbb
popf
popf
out
mov
xor
cmp
pop
adc
call
pop
sbb
fldenv
imul
lret
fildll
aas
mov
lret
pop
adc
lock
adc
jmp
push
adc
test
je
mov
xor
ret
std
lods
movl
mov
push
call
rorl
pushf
aaa
jmp
sbb
scas
rolb
jecxz
jb
jg
mov
cmpsl
pop
add
jb
std
adcb
lcall
lea
adc
pop
cwtl
divl
inc
xchg
fcomps
push
jns
sbb
call
sub
cmp
insb
in
xchg
push
push
xchg
arpl
cmp
movsl
inc
xor
loopne
lods
aaa
insl
sbb
dec
call
jmp
jp
dec
cli
sub
and
sbb
mov
test
add
ljmp
inc
jg
sub
ficoms
inc
ss
loope
aam
add
pushl
adc
xchg
sub
dec
mov
xor
and
aam
inc
adc
js
fbld
decl
pop
push
mov
sahf
mov
push
fldt
mov
out
inc
nop
inc
nop
xchg
sti
push
movsl
pusha
and
push
insl
xor
push
pop
pop
cwtl
xchg
loope
cli
decl
mov
dec
jl
xchg
push
pop
dec
imul
ljmp
add
jnp
sbb
shll
incb
dec
je
xchg
andl
call
and
fwait
jnp
add
pop
dec
push
mov
and
jmp
mov
arpl
popf
xchg
fildl
cs
hlt
mov
stos
pop
sbb
push
mov
inc
fucomip
cmpb
push
dec
dec
enter
jns
aaa
jl
push
or
xor
sbb
xchg
cmp
cmpsl
push
inc
popf
call
imul
scas
aaa
add
pop
fwait
decl
push
add
or
shlb
cmp
popa
pop
xor
sbb
popf
or
push
ljmp
fs
inc
inc
xor
scas
in
jnp
dec
or
cmc
inc
or
das
lods
je
jmp
or
jns
inc
sahf
lods
repz
test
popa
adc
and
in
sub
cmpsb
push
mov
movsl
popf
in
pop
movsb
in
or
jns
inc
jl
sbb
inc
ljmp
or
arpl
repz
ljmp
repnz
ljmp
xchg
adc
dec
clc
shlb
lods
shl
ja
stos
out
add
enter
idiv
pop
or
jbe
repnz
sbb
arpl
jg
mov
sbb
sub
mov
lock
add
dec
jno
push
add
jbe
incb
pop
sarl
push
push
push
dec
in
adc
cmpsl
jp
mov
incl
das
jmp
xchg
out
jb
or
mov
or
mov
or
pop
daa
and
adc
outsl
xor
jg
outsb
mov
arpl
and
cmp
popa
les
and
mov
sbb
das
mov
mov
fs
adc
insb
and
out
lcall
incb
xor
and
in
sub
loopne
jge
cmp
add
out
add
repnz
gs
jmp
iret
std
sbb
inc
mov
pop
mov
adc
dec
imul
ljmp
incb
scas
jno
mov
and
jl
cltd
ds
pop
mov
fcmove
test
cmpl
jecxz
jmp
pop
push
popf
pop
push
pushf
mov
movsb
into
inc
enter
sub
shlb
xorb
mov
push
into
ljmp
mov
push
idivb
mov
sbb
mov
mov
mov
out
fsub
xlat
das
in
stos
or
jnp
aad
insb
add
jl
jl
jo
in
cmp
scas
cmp
call
cmp
and
mov
adc
iret
xchg
inc
sbb
std
or
lods
movsb
cmp
or
mov
xchg
daa
and
mov
rcl
movsl
gs
orb
lcall
aas
stos
mov
pop
loopne
pusha
adc
pop
stos
fld
jge
repnz
incl
mov
ja
aad
jcxz
push
lret
cmp
ds
add
pop
hlt
incl
das
shrl
icebp
sbb
out
mov
jne
call
cmp
mov
nop
or
bound
repz
loope
add
xor
xchg
lcall
outsl
xchg
mov
dec
das
push
adc
fld
cli
pop
test
xlat
lcall
std
fnsave
xchg
repz
push
rcrl
subb
add
adc
aas
pcmpeqd
mov
jbe
cmp
ja
xchg
sub
lcall
cmp
pushf
fwait
outsl
outsb
and
and
lock
push
fdivrs
jbe
pop
mov
mov
mov
dec
test
mov
jns
movsl
cmp
add
fcmovnbe
stos
push
sahf
and
sub
sub
pop
push
fcoml
imul
hlt
xor
repnz
lret
ljmp
add
pop
mov
cmp
mov
or
outsb
leave
pop
js
in
mov
ret
sti
fsubl
idivb
leave
pop
or
pop
addb
popf
out
pop
mov
add
jg
push
inc
cmpxchg
ds
add
fwait
rolb
jae
xor
sar
cmp
imul
jmp
jae
mull
jo
xor
sarb
movsb
out
aad
idivb
ja
sub
out
sbb
xor
xor
pusha
int
movsl
iret
sub
sbb
psllw
cmp
lret
mov
mov
dec
call
into
fwait
into
cmp
aam
aad
jg
and
and
xor
push
test
push
cmp
cmp
aam
mov
xor
and
loope,pn
ljmp
add
loope
or
mull
mov
push
cmp
mov
ds
ss
jmp
lret
mov
fldenv
adc
or
pop
adc
leave
sub
test
ljmp
xchg
cmp
lods
pop
pop
or
ret
cmp
mov
sbb
lock
adc
and
pop
and
movsl
xchg
dec
aas
dec
xor
in
mov
jno
and
push
jno
sti
adc
inc
adc
add
rcr
fnstenv
jle
mov
call
cwtl
adc
mov
cmpl
xchg
pop
and
sbb
out
adc
push
or
xchg
mov
add
mov
fcoml
aad
decl
clc
pop
out
fiadds
sub
pusha
xor
insb
sbb
push
pop
in
mov
xchg
push
xchg
mov
decl
dec
mov
pop
int3
jno,pt
test
cmp
aaa
sahf
ja
pop
xchg
add
pop
imul
and
lea
push
outsb
fcoms
lret
cmpb
jg
aaa
inc
enter
cmp
popl
mov
jmp
mov
dec
loope
sti
lods
daa
fcomi
ss
pop
xchg
xor
add
data16
cmp
adc
lods
lcall
jae
out
jo
adcl
test
and
pop
adc
ja
je
inc
cltd
jg
jg
out
mov
sub
push
xchg
mov
dec
ret
pop
popa
or
incl
mov
std
pop
pusha
outsb
mov
push
jp
ds
pop
popl
js
stos
jno
xchg
add
add
filds
jne
movsb
lock
xor
mov
cltd
cwtl
mov
mov
fldt
inc
adc
cld
movb
add
lcall
cs
test
mov
cmp
cmp
mov
dec
jmp
idiv
decl
repnz
aad
movsl
repz
leave
test
movsb
push
pop
jecxz
nop
xor
stos
push
jg
decl
or
dec
aaa
mov
pop
mov
test
pushl
inc
sbb
xchg
xchg
mov
mov
jbe
notl
and
lretw
gs
call
push
xor
ss
dec
js
movsb
les
lret
xchg
xchg
mov
outsb
movsb
loope
lds
sbb
sbb
pop
mov
scas
cltd
fidivl
pop
or
lods
mov
pop
vucomiss
jnp
fidivl
jecxz
ljmp
repz
and
add
aas
pop
leave
scas
rcrl
adc
sbb
incl
in
aad
dec
in
xor
mov
sbb
add
mov
scas
clc
pop
pop
call
leave
sbb
add
xor
scas
mov
int
cmp
mov
pop
dec
jo
mov
fcom
xchg
repnz
in
mov
mov
fildll
out
cltd
in
xchg
pop
mov
jge
cmp
cmc
rolb
ljmp
movsl
out
neg
inc
mov
insb
decb
std
ljmp
jge
mov
mov
xchg
js
or
out
dec
ds
mov
xor
adc
insl
sub
nop
push
xor
aam
mov
push
dec
out
call
out
pop
aas
in
push
adc
lea
ds
push
mov
xchg
lret
sub
mov
jl
sbb
hlt
incl
mov
movsb
fdivl
sbb
bound
add
and
push
jl
lcall
cli
pop
sbb
stos
pop
outsb
scas
lret
stc
jae
sbb
pop
stos
test
sub
jns
std
mov
dec
pop
jo
and
adc
pusha
stos
int3
popf
xchg
mov
mov
jb
sar
cmp
negl
cmpsb
push
and
les
xor
movd
lret
mov
imul
jmp
pop
mov
inc
push
enter
mov
inc
loopne
inc
std
add
call
inc
mov
in
rol
es
xchg
push
pop
rcrl
fstl
movsl
jg
inc
jp
mov
leave
scas
xor
and
mov
sub
xchg
ljmp
xor
xchg
push
aam
nop
add
clc
sbb
push
push
fsubs
xchg
call
jg
out
ja
mov
imul
insb
dec
jne
rcrb
sar
jmp
aam
movsl
push
imul
mov
fdivr
call
pop
mov
fs
scas
fcmovnu
cmp
pop
and
mov
pop
push
and
push
or
xor
int
rclb
push
daa
lea
mov
pop
mov
adc
cmp
call
mov
ret
and
xor
lahf
or
in
gs
cbtw
ljmp
push
movsl
into
sub
adc
sub
stos
cli
dec
sti
jle
mov
push
cltd
mov
scas
fdivr
push
int
inc
xchg
xchg
sub
addr16
cmp
inc
sub
ss
das
pushf
jbe
pop
xchg
xchg
jg
movsl
fcomip
stos
imul
add
xorb
repnz
push
insb
shlb
lcall
je
sbb
popa
jg
jnp
enter
data16
xor
jecxz
cs
decl
stc
mov
adc
xor
inc
jne
inc
mov
sarb
sarl
das
mov
cmpsb
hlt
pushf
aas
sub
fcmovbe
addb
mov
inc
call
adc
mov
add
outsl
jg
pushf
jbe
mov
jge
mov
or
in
jecxz
dec
nop
cmp
out
sbb
sub
jmp
add
popf
jmp
push
pop
in
into
dec
leave
inc
push
xchg
xchg
mov
xchg
std
mov
dec
js
mov
push
fstpt
in
adc
rcrb
push
pushl
std
dec
popa
pop
into
inc
data16
addr16
pop
imul
jb
sbb
dec
inc
outsl
hlt
fwait
mov
mov
pop
cmp
shrb
call
out
nop
stos
out
lret
ja
cmp
pop
sub
mov
dec
in
cld
inc
pop
pop
rorb
push
rorb
jge
and
in
aaa
lahf
jae
jo
fcompl
addr16
or
decl
ljmp
push
inc
ud1
icebp
fbld
pusha
movsb
js
push
jp
pop
gs
mov
ss
call
lock
incl
jle
addr16
fistps
insl
movsb
sbb
adc
hlt
pop
jl
mov
fwait
stc
or
and
adc
mov
decl
aam
jo
jl
in
les
mov
movsb
pop
adc
lods
lods
lods
push
incl
or
mov
xor
xchg
and
incl
xor
push
cmp
pop
out
pusha
xchg
pop
sarl
xchg
sub
or
nop
popl
daa
cmp
sbb
orb
rcrl
cld
cld
in
mov
fdivrl
js
push
fucomi
lods
pop
adc
cmp
mov
int
adc
and
mov
decl
cmp
xchg
pop
cwtl
mov
dec
and
leave
ja
loopne
mov
imul
sti
sub
xchg
pop
pushl
loopne
in
in
cmpb
in
test
mov
push
stos
xor
cli
mov
jne
out
cmp
into
pop
pop
push
inc
mov
fs
div
int
push
rcrl
lcall
leave
icebp
daa
xchg
add
outsb
cmpsb
insb
shll
jg
lea
sti
inc
clc
and
dec
adc
call
push
flds
pop
adc
ds
jecxz
xor
bound
and
push
pop
iret
jnp
sbb
mov
xor
and
call
loopne
sub
inc
nop
inc
cwtl
xor
push
lods
cltd
leave
aaa
adc
scas
subb
xlat
negb
mov
cmp
mov
mov
inc
and
sti
mov
ja
push
xchg
outsl
xor
sbb
fldcw
lcall
sbb
movswl
pop
sbb
xorb
mov
mov
mov
stos
sbb
inc
mov
call
lds
or
xchg
xor
test
rcrb
push
arpl
aas
pop
hlt
movzwl
add
cwtl
clc
jp
ds
xor
rclb
cwtl
dec
mov
adc
sbb
ret
aaa
jl
ljmp
xor
clc
or
std
jns
jmp
sti
icebp
or
cmc
popa
pop
ret
sbb
adc
pop
lds
push
or
lods
int
inc
mov
ljmp
nop
inc
mov
clc
xor
int3
xchg
lods
jp
cld
push
push
mov
in
call
arpl
cli
dec
cmpb
repz
mov
sub
pop
dec
pop
inc
cwtl
fs
call
inc
out
outsl
jae
test
and
inc
and
pop
mov
je
cmp
mov
cmp
mov
add
and
lods
inc
sub
jne
pop
xor
test
sbb
unpckhps
dec
xor
dec
push
mov
dec
es
cmp
es
mov
pop
cli
rcrb
lcall
pop
cmp
je
xchg
push
scas
lds
or
jecxz
shl
cmpsl
data16
jl
lods
cmp
into
lret
decl
in
push
popf
xor
ss
mov
stos
and
adc
push
sub
incl
or
inc
dec
stos
add
and
scas
and
push
fmulp
mov
add
and
popf
add
scas
push
jbe
lcall
jne
mov
mov
mov
fwait
stos
mov
xor
gs
mov
mov
incl
int
jo
pop
clc
leave
dec
imul
dec
out
adc
or
pop
sahf
out
pushl
test
pop
jb
inc
dec
and
push
sub
mov
incb
loop
jmp
out
adc
divl
notb
dec
pop
cmp
or
xor
pushl
jg
pop
std
call
mov
subb
xor
fcomip
stos
jp
adc
hlt
push
enter
lea
mov
inc
div
mov
sub
inc
lock
jg
add
sti
xor
add
pop
push
jnp
loopne
int3
sbb
cmp
mov
pop
sbb
int
dec
adc
loopne
push
sub
adc
jmp
mov
push
adc
data16
fwait
cltd
xlat
int
nop
mov
push
add
sbb
out
jnp
mov
dec
in
jno
imul
inc
xor
pop
xor
out
aaa
xchg
inc
and
mov
lret
xor
loopne
aas
cmp
out
xor
xor
pop
sbb
cmp
inc
push
sbb
xorl
and
out
jl
sub
test
decl
test
ficoml
add
and
sbb
pop
in
ret
pop
mov
gs
call
dec
mov
lahf
outsb
add
orb
pushl
mov
loop
xchg
es
jo
sub
rcrl
sti
mov
cwtl
pushl
pusha
ja
push
leave
mov
imul
mov
fists
push
imul
inc
mov
call
pop
push
jo
cmp
nop
ret
xchg
and
pop
or
xchg
sti
and
in
call
xchg
cli
push
xchg
popa
in
rolb
jae
je
sub
mov
stc
sbb
lcall
adcb
push
xor
outsb
int3
fdivrp
inc
push
inc
out
in
stc
cmpb
jmp
mov
push
loopne
cld
iret
mov
pop
out
mov
add
or
mov
pop
sbb
jnp
inc
and
mov
and
jmp
adc
mov
cmp
lds
mov
xor
jecxz
pop
fnstsw
cmp
xor
cld
das
adc
pushf
outsb
pop
bound
mov
iret
das
xor
mov
lcall
adc
add
jge
arpl
inc
pop
dec
mov
cmc
imul
xor
or
fdivs
popa
int3
insl
xchg
loop
dec
inc
sar
jmp
imul
orl
xor
outsb
lcall
sub
cmpsl
mov
shlb
inc
mov
push
add
mov
pop
jne
jae
dec
loop
mull
and
sbb
xchg
adc
fcoms
jg
inc
cli
xchg
aaa
dec
and
xchg
enter
fistpl
jmp
mov
dec
jecxz
jno
insl
roll
add
push
into
sti
mov
cmp
cmp
lret
stos
fsubrs
push
cmp
in
inc
cmp
mov
pop
inc
repnz
lcall
pop
add
in
xor
fildll
jo
mov
jb
movsb
or
mov
adc
lcall
or
mov
mov
lcall
inc
inc
push
push
aad
hlt
cmpsl
adc
idivb
jecxz
inc
inc
and
addr16
ljmp
call
addr16
loope
lods
dec
sub
fs
dec
dec
test
sbb
and
repz
decl
sbb
ret
dec
test
inc
sub
stos
mov
movsl
jmp
rcrb
mov
adc
fucomi
dec
fcmovu
or
sub
out
cli
repnz
jle
stos
maskmovq
pop
scas
mov
mov
mov
gs
sub
push
adc
leave
jg
push
cmpb
and
dec
and
mov
and
int
mov
outsl
cmpsb
mov
or
and
adc
outsb
cli
fstpt
mov
sub
jnp
push
xor
inc
adc
imul
andb
mov
rcrb
int3
pushf
aaa
popa
ja
jns
test
ljmp
jns
jno
jecxz
adc
xlat
xor
dec
int
jle
sbb
xchg
sub
mov
cwtl
test
fstpt
lcall
bound
mov
mov
xchg
jg
outsb
sub
and
pop
add
sahf
jne
enter
les
dec
rcrl
lcall
adc
jb
mov
cmc
xchg
inc
pop
cmp
outsb
adc
decl
and
lahf
neg
xchg
test
nop
call
sar
lcall
popa
insl
cs
pushf
jecxz
or
mov
push
dec
xor
in
imul
pop
adc
loopne
mov
and
jge
jmp
inc
jmp
imul
cs
mov
jmp
adc
dec
out
subl
lcall
sub
jns
mov
sti
call
xchg
hlt
or
rorl
stos
lock
ljmp
fcomip
incl
leave
push
mov
add
dec
lret
pop
or
add
stc
ljmp
xchg
stc
out
test
fsubs
adc
pop
add
loope
std
inc
and
outsl
lcall
int
icebp
pop
cmp
sbb
jl
iret
sub
xchg
mov
dec
xor
xor
jle
jb
push
shrb
clc
call
inc
pop
popa
push
dec
fdiv
jnp
mov
adc
dec
lahf
popa
lods
shl
cld
push
mov
das
es
cmp
ljmp
sub
aam
xlat
sub
mov
sbb
outsl
jno
add
scas
and
jne
hlt
jne
lcall
insl
dec
sbb
mov
aaa
test
add
rcll
enter
das
adc
out
lcall
and
fnstenv
loope
add
sub
out
add
add
popa
xorb
push
inc
lcall
xchg
mov
xlat
aam
dec
stos
addb
xorb
xchg
lods
loop
and
sub
pop
imul
call
cmpsb
jecxz
ss
sub
rolb
mov
in
pop
jb
pushl
pop
sbb
cmp
fldl
shl
out
jnp
xchg
inc
push
std
call
pushl
addr16
subl
inc
mov
imul
ret
mov
xor
test
lcall
inc
ljmp
xor
cltd
cli
shr
gs
enter
ds
cmc
outsb
jl
fwait
push
lock
jmp
ljmp
mov
mov
out
popa
loope
push
leave
ret
ret
repnz
cld
jns
dec
adc
loopne
jl
daa
dec
rorb
enter
ljmp
lock
push
pop
imul
sbb
nop
cmp
jnp
jo
xor
mov
add
iret
les
call
repnz
aad
cmp
int
mov
dec
xchg
mov
mov
testb
xor
jg
jl
es
and
icebp
adc
int
idivb
and
and
decl
add
cmp
push
dec
divl
jmp
push
inc
into
fcoml
mov
xor
push
sbb
dec
dec
scas
mull
push
mov
cmp
jge
mov
es
pop
repnz
outsb
ja
adc
inc
push
mov
push
shl
std
sub
daa
repz
test
clc
je
or
push
ficompl
fsts
pushl
in
outsl
inc
mov
movsb
pop
dec
js
inc
cmp
mov
sbb
stc
setge
push
cld
inc
movsl
je
cmc
jecxz
cwtl
adc
ljmp
adc
sub
cmc
outsl
out
add
mov
jle,pt
dec
jl
jmp
xchg
vmovlps
dec
outsl
pop
mov
push
and
vpand
cld
lcall
xchg
xchg
push
inc
jno
adc
sub
into
gs
int3
lcall
lock
ja
jmp
ret
jo
es
in
push
fwait
jb
cwtl
push
sahf
mov
decl
push
xorl
or
mov
std
jge
mov
test
mov
push
mov
mov
scas
repnz
push
movsl
ljmp
lock
incl
dec
jle
inc
jp
hlt
movsb
push
outsl
fcoml
ljmp
insl
fcmovb
and
dec
sub
mov
cmp
mov
sub
mov
fldl
cld
hlt
sahf
add
incl
jnp
sub
cmpsl
push
push
out
rcll
lods
mov
cmp
es
lods
mov
aas
arpl
fcomip
ljmp
or
stos
rolb
les
cmpb
or
fldl
sti
jnp
or
jae
repz
daa
fnstsw
sbb
lods
hlt
cmp
inc
das
push
mov
loop
nop
jp
cmp
and
xchg
mov
ljmp
pop
mov
lods
stc
pop
fimuls
testb
inc
das
adc
jmp
aad
jle
call
popa
int3
push
sbb
cmpsl
negb
pushf
add
adc
icebp
pushl
inc
scas
fldcw
inc
jo
stos
insb
push
push
rcl
fstpl
add
fildl
mov
adc
sub
ds
lods
xchg
lret
mov
mov
xor
adc
pop
inc
sub
fadd
out
in
fsubrs
fcomip
bound
hlt
inc
inc
push
movsl
push
mov
or
rcll
out
inc
mov
push
insl
adc
mov
mov
jb
and
cmp
sub
cltd
jmp
lock
sub
push
mov
repz
push
loope
push
jns
adc
stc
pop
mov
je
lds
stos
lcall
mov
test
mov
adc
repnz
int
fdivrs
shrl
int
jg
push
pop
mov
jnp
ljmp
pop
xor
out
xor
pop
pop
jo
test
sub
andl
imul
clc
dec
icebp
add
into
movsl
add
decl
lock
mov
aaa
inc
mov
dec
jp
in
and
pop
ud0
incl
mov
mov
mov
icebp
or
jno
iret
js
lahf
arpl
call
call
xchg
xchg
xlat
shl
adc
jl
out
mov
andl
dec
inc
loopne
jle
push
add
call
data16
or
lds
ret
rcll
sub
inc
les
cmp
pop
and
pop
cmp
push
outsb
jmp
rcl
lret
das
ss
push
lret
fdivrl
clc
ja
leave
lcall
aas
cmc
push
push
sbb
xor
arpl
leave
mov
add
repnz
jge
ss
inc
pop
test
pushl
push
push
mov
rcl
pop
push
sub
xor
pop
dec
scas
sahf
cmp
decl
fnstenv
jbe
pop
pop
jecxz
mov
cmp
dec
lods
xchg
int
dec
pop
push
std
pop
popf
es
lcall
pushl
sub
call
leave
adc
pushl
cmpsl
inc
nop
pusha
and
xorl
and
xor
je
mov
lds
xor
out
push
dec
repnz
lcall
mov
enter
mov
xor
das
pop
imull
mov
js
fdivs
lahf
jae
dec
add
and
xchg
aad
xor
inc
push
fcoml
dec
jg
xchg
pop
insl
lods
call
pop
out
inc
push
loope
loope
sar
xor
int
jle
pop
bound
jecxz
loopne
fldcw
ds
jg
call
push
scas
add
push
not
and
lds
outsl
push
mov
pop
gs
jl
test
inc
leave
push
out
decl
xchg
adc
mov
add
sti
mov
xchg
push
inc
sbbb
loop
push
ret
jmp
ret
push
sub
ficomps
dec
xor
sbb
mov
movsl
fnstenv
lods
push
sbb
jo
shll
leave
clc
aas
add
lods
call
jne
rorl
nop
inc
sub
call
cli
dec
insl
call
loop
stc
jecxz
mov
dec
adc
lcall
jl
pop
adc
inc
popa
lods
scas
sbb
loop
cli
xchg
outsb
sbb
aas
xlat
jg
out
loop
int3
in
add
jmp
addr16
nop
fsts
jmp
es
pop
push
dec
jge
pop
jg
les
aad
xor
mov
nop
adc
sbb
adc
cmp
into
xchg
loop
ficompl
decb
xor
cmpsl
or
mov
enter
add
jns
nop
int
lock
and
out
ror
pop
sub
insb
imul
addr16
aam
pop
hlt
fdivr
or
rcrl
ret
fildl
decl
repz
or
mov
lds
int
out
jmp
mov
movsl
push
aam
inc
inc
mov
into
jae
pop
test
or
jge
xor
inc
xchg
cmp
lcall
sbb
pop
lahf
js
lods
mov
and
pop
xchg
xor
int3
inc
je
pavgw
icebp
fnsave
out
pop
lods
jnp
pop
pop
xchg
xor
inc
loopne
out
decl
pop
pushf
or
sbb
fwait
das
into
scas
or
push
loope
push
ss
in
inc
test
decl
pop
clc
jmp
aad
bnd
or
cmc
outsl
int3
sub
xor
lcall
jl
sbb
sahf
mov
adc
sbbl
repz
daa
add
mov
sub
add
repnz
mov
ret
jg
push
nop
xchg
sbb
adcl
dec
jb
mov
fs
lcall
sbb
ja
rcl
sbb
pop
popa
or
imul
xor
pop
push
fcomip
decl
inc
jecxz
push
loope
ds
gs
push
pop
or
ret
push
xor
mov
pop
xchg
or
push
hlt
mov
mov
and
ret
mov
add
lcall
mov
mov
pop
ja
lcall
jg
and
dec
pop
maxps
stos
insb
scas
clc
mov
mov
call
es
pop
xor
nop
xlat
adc
sbb
decl
cli
inc
jmp
jmp
ret
outsl
dec
fstpt
sbb
adc
outsl
push
sbb
rolb
bound
inc
dec
sub
pop
outsb
xor
ljmp
jle
ret
loope
test
cli
and
jp
mov
cld
data16
adcb
aam
outsl
mov
cli
add
fwait
mov
pop
sub
inc
lock
sub
data16
pushf
out
ss
push
movsl
inc
lock
ljmp
jge
xchg
sbbb
mov
push
mov
pop
enter
lods
push
and
and
mov
lcall
pop
test
xchg
sub
pusha
sbb
mov
shl
lds
push
push
ljmp
sub
imul
out
daa
jl
lcall
stos
mov
add
cmp
xchg
imulb
pop
xlat
adc
int
push
ljmp
lcall
in
orl
inc
pop
ja
mov
xor
jmp
iret
xchg
in
std
and
imul
cmc
dec
jnp,pn
mov
fcomip
jg
push
inc
cmp
pop
fcmovne
dec
mov
mov
cmpsl
pop
xor
mov
ljmp
push
adc
cld
scas
jne
xor
test
push
out
lods
mov
add
mov
cmp
std
mov
ss
fstpt
loop
add
xchg
xchg
stos
cmp
adc
add
iret
imul
mov
shrd
dec
into
push
scas
sbb
cmpsb
or
popa
xchg
jmp
jbe
sbb
sahf
dec
or
dec
jmp
mov
insb
sahf
xchg
or
mov
test
cmp
dec
js
or
push
gs
std
adc
and
mov
push
inc
fadd
popf
pop
imul
decl
ja
xor
push
mov
pop
push
dec
cmp
cld
sub
fdivl
cmp
mov
ljmp
fnstsw
int
cmp
add
shll
fdivr
decl
jle
xchg
lock
out
out
mov
cmc
mov
lods
mov
fadds
fwait
xor
icebp
leave
and
sbb
jl
push
cmp
add
jmp
mov
incl
adc
and
mov
jns
xchg
or
pop
stos
call
push
cmpsb
fidivrs
aas
sti
push
in
pusha
outsl
test
sbb
dec
cmc
jmp
out
pop
cmp
sub
loope
daa
jae
arpl
xchg
out
test
cmc
ljmp
lcall
jne
shlb
std
add
lcall
idivb
cmc
cs
and
das
imul
dec
int
repz
mov
inc
xchg
ljmp
orl
loop
jno
adc
out
inc
addr16
jb
sbb
incl
mov
fwait
xchg
imulb
stos
sbb
scas
call
xor
sub
filds
inc
sub
mov
xchg
mull
pop
push
mov
jmp
and
ret
pushf
push
cltd
push
mov
insb
leave
mov
and
aam
rol
bound
lock
jp
mov
cs
sub
sbb
push
in
ja
jecxz
test
sbb
xor
roll
mov
out
push
mov
push
inc
clc
loopne
aas
fisubrl
repz
iret
fidivrs
pop
cmp
dec
je
sbb
call
xchg
or
push
insl
pop
inc
push
push
dec
push
in
cmpsb
xchg
sub
cmp
hlt
jmp
lcall
lcall
shll
dec
aam
adc
je
ret
test
pop
ljmp
mov
pop
mov
orb
testb
lds
aad
movaps
adcl
add
in
imul
js
popa
push
and
outsl
lret
dec
xchg
and
and
mov
lock
pushl
js
pop
scas
xchg
xlat
mov
sub
xchg
cmp
push
cmp
push
aam
mov
mov
push
or
adc
lods
into
incl
cmp
ja
jge
jbe
mov
dec
inc
add
mov
sti
cmc
pop
dec
jmp
mov
mov
mov
sub
mov
clc
xor
decl
jno
mov
mov
movsb
add
inc
xor
and
jmp
mov
incl
pop
mov
sti
push
adc
daa
out
test
cmp
mov
pushl
add
ljmp
xchg
fsubrs
aaa
repz
rclb
dec
push
inc
pop
cli
repz
or
lods
sub
add
fcoml
sub
pop
or
add
stos
mov
enter
lea
bound
loop
xchg
dec
mov
jmp
shlb
movsb
test
xor
adc
lret
into
sbb
cmp
or
ljmp
subb
out
fnstsw
pop
gs
pop
and
hlt
incl
adc
mov
ds
mov
inc
xchg
cmpsl
cmp
mov
testb
pop
lcall
mov
ret
jbe
lods
push
xchg
lods
fildl
sahf
cwtl
push
mulb
push
dec
cwtl
test
mov
call
cld
loop
sbb
add
push
int3
mov
cltd
imul
mov
xor
inc
pop
shlb
icebp
jb
aas
xor
sarl
add
xchg
sar
dec
mov
mov
nopl
push
gs
push
insb
ljmp
imul
mov
and
lret
push
xor
ja
pusha
push
fidivl
rcll
call
adc
adc
adc
sbb
cmp
xor
packuswb
xchg
adc
jp
stos
and
push
inc
mov
sub
inc
or
mov
fidivrl
cmp
jp
xchg
mov
push
pop
fnstenv
and
ljmp
mov
adcl
push
lcall
bound
test
cmp
adc
sbbb
inc
mov
xor
push
inc
call
or
in
mov
jmp
mov
adc
mov
cmp
outsl
adc
cmc
push
dec
insl
mov
insl
xchg
push
out
stos
cmpsb
jne
fistpl
jmp
mov
lret
jno
pop
xor
mov
push
sahf
sbb
push
xchg
push
lret
jns
ficompl
orb
in
stos
cmp
dec
mov
mov
lcall
push
dec
fmul
insl
lret
movsb
pop
cmpsb
push
or
mov
dec
xor
jno
jle
pop
fimuls
lcall
jns
call
cltd
movsl
add
les
adc
pop
repnz
cmp
sarl
stc
ljmp
call
dec
mov
jae
pop
call
sahf
stos
cmp
aas
jp
jg
call
pushf
cltd
in
or
push
xor
adc
test
ret
cmp
pushl
jg
push
pop
jne
sbb
xchg
add
mov
dec
jecxz
aas
iret
cmp
addr16
jmp
ds
fwait
sbb
int3
and
aaa
shll
cmp
fxch
fldcw
daa
cmp
lcall
ss
gs
mov
cwtd
das
pop
mov
lds
fdivrs
outsb
inc
std
scas
out
xchg
mov
inc
shlb
bound
jnp
add
int
enter
jg
sbb
and
fldl
xor
push
stc
inc
addr16
fwait
mov
ss
adc
call
int3
push
jns
pop
jmp
outsl
push
dec
adc
mov
sub
fisttpll
mov
pop
jp
test
mov
repnz
mov
es
sbb
repz
pop
aam
incl
pop
repnz
divl
inc
and
decl
ss
insl
movsb
fcoms
cli
sbb
out
movsl
outsb
nop
rep
mov
mov
sub
hlt
lcall
xchg
daa
mov
lcall
add
repz
sar
fsubl
dec
pop
dec
jmp
pushl
js
jecxz
xor
inc
popl
jg
ljmp
call
fsubs
mov
xchg
sub
imul
aam
popw
incl
insb
aaa
popa
sbb
pop
call
clc
das
and
xor
test
out
in
pop
enter
decl
ljmp
xor
push
lock
out
dec
or
jno
mov
push
imull
lcall
movsb
cmp
pop
in
dec
xlat
adc
decl
daa
call
stos
mov
pop
cmp
pop
adc
repnz
add
adc
scas
call
push
and
rolb
sbb
insb
mov
inc
mov
neg
dec
cld
in
cmpsl
jmp
pushf
adc
fwait
dec
arpl
jge
icebp
pusha
int3
into
mov
xor
mov
repnz
inc
lds
and
xchg
in
data16
jp
dec
mov
movsl
sbb
mov
push
cltd
lds
lcall
fdivs
andl
add
or
divb
call
jmp
jp
pop
nop
test
jmp
enter
sbb
movsb
sar
sbb
pop
aam
xor
incl
repnz
add
jl
xor
pop
fisttpll
filds
loop
and
mov
arpl
jns
outsl
call
xchg
sub
push
ret
jne
xchg
sti
pusha
sub
jno
into
mov
jp
out
fidivrs
jp
fstp
shl
pop
cmp
ret
mov
popa
decl
pushl
in
aas
mov
jae
aad
xchg
aaa
and
scas
faddl
arpl
adc
inc
ss
lcall
lea
movsb
sarl
lret
lea
jns
clc
jecxz
cwtl
movsb
add
inc
decl
sbb
xor
xchg
cmp
mov
sbb
mov
jno
call
mov
jle
sbb
mov
jge
dec
jecxz
push
les
inc
mov
xlat
int
push
dec
in
gs
aad
pop
cli
cs
outsb
jbe
repz
data16
cli
out
pop
sbb
nop
shrl
decl
out
mov
sbb
push
std
shl
mov
aaa
xlat
stos
mov
mov
imul
aam
stc
sbb
call
push
jp
mov
xchg
push
ljmp
xcrypt-ofb
cmpsl
sub
mov
das
push
add
pop
dec
add
jle
jg
and
pop
imul
sbb
xchg
std
dec
jnp
lcall
lea
in
cmp
mov
icebp
lcall
sbb
sahf
idivl
andb
jmp
pusha
jmp
push
push
and
test
inc
jae
shlb
dec
xchg
mov
inc
mov
enter
nop
inc
xchg
ljmp
insb
idivl
int3
xor
jmp
or
ret
xchg
pop
in
cmp
in
cli
or
cmp
test
in
out
insb
dec
inc
cmp
xchg
imul
loopne
inc
in
in
aad
mov
std
inc
loop
inc
adc
aas
xor
out
xchg
jge
xor
jnp
repz
mov
dec
mov
sbb
test
das
into
push
mov
dec
mov
dec
and
cmp
mov
scas
cmc
xchg
stc
xlat
xor
cmp
mov
scas
repnz
call
mov
mov
fiadds
subb
jae
sarl
pop
lahf
sbb
pop
jne
mov
pushl
fwait
call
test
out
movsb
mov
movsl
loopne
mov
jg
js
inc
stc
sbb
repz
fs
mov
ret
sbb
shll
test
out
mov
push
aaa
int3
push
movsl
adc
jg
roll
inc
data16
fdivrp
gs
inc
pop
leave
scas
test
ljmp
xchg
xor
aam
mov
nop
adc
adc
cs
or
daa
int3
xchg
in
mov
cmp
inc
push
pop
icebp
and
mov
sbb
add
aaa
outsl
aas
dec
test
inc
pop
sub
rorl
clc
mov
pop
push
add
and
pushf
sbb
sahf
inc
shlb
jg
roll
pushl
ret
loope
mov
jo
mov
push
flds
call
xchg
les
pop
cmpsb
and
adc
jae
dec
sbb
xchg
mov
call
mov
ret
scas
aam
jns
lds
daa
test
push
push
fwait
jp
jbe
mov
lcall
pop
pop
pop
mov
jns
jmp
inc
adc
mov
fbstp
orps
lcall
fmulp
mov
add
adc
mov
push
jmp
les
mov
sbb
sub
xor
ljmp
call
inc
jecxz
cld
mov
dec
xor
mov
adc
xchg
mov
mov
div
inc
mov
lcall
mov
adc
iret
loopne
jmp
sbb
test
adc
add
icebp
sar
sbb
iret
adc
mov
xchg
mov
stos
pop
jp
stos
enter
fcomip
rorl
pavgw
inc
int
sti
aam
fcmovne
outsl
lahf
push
jns
leave
sbb
call
mov
pop
les
mov
incl
ret
mov
dec
lret
sarl
xchg
lock
inc
jmp
fildll
sub
sub
lods
mov
call
cs
sub
inc
test
cmp
push
ja
push
lcall
imul
sti
aaa
lods
jp
stos
sub
push
push
imull
scas
xor
pop
mov
or
mov
lock
incl
sub
add
mov
cmpb
and
addl
aaa
push
decl
fwait
mov
cld
test
clc
cltd
in
jmp
mov
push
sbbl
mov
xchg
push
and
jg
jb
clc
stos
inc
pop
sahf
jg
push
cmpsl
pop
gs
idivl
adc
es
in
pop
adc
and
das
cwtl
cmp
or
fmuls
fimuls
jbe
dec
incl
or
push
jmp
outsl
xchg
inc
cld
mov
push
mov
fistpl
push
jbe
pop
arpl
fdivl
xchg
test
xor
aad
fdivrl
int3
cmpsb
jb,pt
das
sar
into
adc
push
mov
inc
jl
jne
arpl
sub
or
pop
call
mov
sub
out
cmp
and
call
gs
insb
mov
cmp
and
lcall
dec
gs
pop
adcb
dec
jno
stc
adc
inc
gs
xor
decl
xor
inc
pusha
jge,pn
xchg
push
add
mov
mov
jg
mov
clc
sti
push
mov
int3
inc
lret
sbb
xchg
mov
fisttpl
cld
jmp
loop
fldt
loopne
aad
xor
ret
popf
pop
ja
pop
push
ss
jg
scas
decb
scas
out
addl
mov
ljmp
jne
dec
add
pop
sbb
lret
mov
ljmp
push
jge
test
push
scas
jb
xchg
out
test
icebp
outsl
cmpsl
mov
mov
jle
stos
xchg
inc
push
jle
dec
jmp
daa
lcall
test
jmp
int
lret
mov
mov
pop
add
jg
fbld
cli
jmp
add
shrb
and
xchg
sub
and
sub
fisttpl
popf
test
mov
xchg
pushf
sub
test
lods
sbb
pop
int
lock
jle
pop
or
xchg
decl
pop
jbe
and
es
pop
stc
add
pop
and
ret
mov
push
mov
sar
mov
pop
movsl
les
xchg
cmp
cs
jmp
mov
push
pop
clc
aas
mov
imul
cmp
dec
jmp
icebp
mov
push
inc
repnz
lods
sarb
into
push
js
ljmp
stos
dec
jl
dec
sbb
xchg
mov
add
add
cmp
loope
je
fistpll
ljmp
sbb
icebp
xchg
dec
pop
or
dec
jne
clc
add
cs
or
jae
sbb
cmp
sahf
dec
mov
push
push
sbb
and
fidivs
push
daa
call
push
sub
repnz
and
pop
jmp
dec
stc
xor
or
pop
mov
jg
push
cmc
sbb
inc
jb
pushw
inc
decl
jo
add
sti
cmp
mov
xchg
xchg
ret
push
scas
stos
pop
clc
mov
inc
fstps
xchg
or
sub
outsl
sub
jae
cmp
jg
dec
loop
mov
pop
push
xor
loop
dec
sub
call
inc
xor
push
test
pushl
test
sbb
or
xorb
scas
lret
lods
push
stc
push
dec
jle
in
or
inc
cmpsl
inc
pop
stos
fistpll
lds
into
addr16
ljmp
mov
push
jle
neg
push
fdivl
mov
inc
xor
sahf
mov
stc
pop
sbb
mov
sahf
pop
pop
push
or
xor
adc
inc
insl
stos
fstpl
das
outsl
pop
mov
mov
xchg
adc
jl
mov
enter
out
lret
hlt
jp
mov
jg
cmpsl
sub
jp
jg
adc
addr16
pop
mov
decl
addr16
shlb
mov
push
int
lods
je
jmp
mov
repz
movsb
shrl
pop
das
add
fcomip
rorl
sub
sbb
scas
repnz
stc
iret
cld
mov
mov
add
inc
mov
scas
lea
inc
sahf
sub
add
ja
adc
sahf
dec
hlt
jnp
call
mull
push
xchg
inc
sub
jg
lock
jmp
mov
dec
das
cmp
std
pop
fcomip
ret
test
shl
cltd
mov
lock
push
xor
and
mov
cmp
lds
cld
filds
push
hlt
inc
testb
adcb
push
sub
dec
sahf
jmp
faddp
in
test
jmp
dec
ret
or
test
jecxz
and
ja
and
stos
pop
pop
xor
jmp
jmp
test
or
int3
fldt
xchg
outsl
inc
cmp
aas
dec
ret
sbb
in
das
decl
inc
divb
xchg
mov
in
sbb
xor
rcl
or
ljmp
inc
stc
mov
inc
adc
mov
inc
and
pop
ljmp
sub
and
mov
popa
pop
mov
bound
sar
jmp
testl
pop
pop
std
push
addr16
xor
xor
leave
xor
jg
mov
pop
mov
std
fstpl
push
cmp
sbb
mov
pop
add
sub
and
jae
out
push
jp
push
pusha
xor
lods
cmp
iret
clc
sbb
mov
mov
jl
clc
fmull
sub
movsb
cmpsl
dec
xchg
cmpsb
push
mov
lret
decl
add
sbb
jp
lea
lods
pop
push
aas
andl
arpl
adc
decl
in
popf
pop
inc
push
inc
sbb
test
mov
inc
popw
pop
sub
inc
xor
outsl
mov
into
xor
adcl
inc
roll
push
xor
cmp
incl
lret
mov
ret
pop
aam
inc
repz
test
dec
jne
or
fcomip
jmp
jl
jns
ret
adc
cmpsl
loope
pop
pop
cmp
std
lcall
pop
cwtl
movd
int
push
jmp
loope
add
subb
mov
pushl
in
and
adc
pop
repz
mov
dec
ja
dec
int3
dec
test
rolb
hlt
jecxz
jne
or
push
xchg
xor
mov
loop
lahf
outsb
adc
and
cmpsb
jbe
jle
cmp
pop
sarl
stos
enter
out
push
xchg
movb
lcall
enter
rcrb
jmp
cli
adc
mov
int
mov
mov
sbb
push
xor
data16
mov
pushf
or
repz
inc
pop
arpl
xor
push
push
xor
clc
sub
mov
stos
jl
adc
push
js
sbb
mov
scas
pushaw
popf
das
mov
test
cli
pushl
sbb
addr16
lcall
sbb
mov
fildl
sub
loopne
mov
sbb
scas
loop
test
dec
out
sub
mov
push
test
push
test
push
int3
les
add
cmp
js
push
scas
and
cmp
jge
push
dec
sub
cmp
dec
int3
mov
sub
pop
popf
sub
lcall
decb
cmp
mov
push
test
dec
arpl
mov
bound
jnp
add
dec
sarb
jmp
pop
loope
jg
gs
jb
mov
decl
fucomp
enter
scas
lret
and
pop
xchg
pop
jne
dec
sti
lods
mov
fcomip
cmp
sbb
rcll
out
mov
loopne
test
fwait
int
pop
adc
adc
stos
adc
adc
idivl
push
pop
adc
shl
xlat
fnstsw
mov
sub
outsl
ss
inc
sub
push
ss
rcrb
fidivl
cld
ljmp
jbe
dec
sbb
enter
into
shrb
pop
cld
sbb
insb
mov
and
movb
jns
mov
xor
mov
push
cmp
clc
mov
add
call
arpl
or
pushf
sbb
push
add
imull
addr16
mov
lret
or
jg
push
cmp
jnp
pop
rorb
hlt
mov
jb
mov
sub
lea
mov
ljmp
adc
leave
rcrb
jl
push
adc
ljmp
add
cvtps2pi
adc
int3
scas
lods
sahf
xchg
xchg
or
mov
sahf
xchg
repnz
sarl
lret
xchg
adc
and
std
mov
adc
mov
push
aaa
cld
or
cmpsb
mov
lcall
xchg
xor
insl
mov
add
sub
adc
jg
pop
push
popf
push
mov
mov
pop
in
out
dec
xchg
jecxz
fistpl
adc
clc
scas
subb
ds
sub
sbb
fwait
mov
push
icebp
jg
pop
in
sahf
inc
iret
mov
pushf
dec
mov
lret
ljmp
inc
mov
outsl
dec
xchg
and
jecxz
xor
inc
xor
out
jmp
mov
ljmp
jl
xchg
mov
xchg
adc
ja
aas
cmpl
icebp
loope
dec
dec
aas
mov
lcall
ljmp
adc
pusha
pop
std
mov
mov
or
xor
mov
ljmp
jno
frstor
aam
ljmp
jo
push
xchg
push
call
ret
data16
outsb
adc
incl
cli
pop
fcompl
xorb
add
pop
stc
fst
xchg
dec
in
insb
clc
js
lock
cmpsl
pop
aam
jb
or
pop
mov
xchg
or
outsl
cli
ljmp
je
repz
ja
mov
mov
jge
bound
call
push
icebp
pushf
faddl
mov
out
xor
and
mov
jbe
adc
lcall
push
cmp
lret
xchg
jbe
stos
fbld
call
inc
sbb
out
cmp
mov
xlat
jae
mov
fisttps
or
mov
adc
add
jbe
adcb
pop
loopne
ss
repnz
jmp
repz
in
pushf
xor
rcrb
adc
adc
loope
lcall
pop
lret
dec
test
push
pop
sbb
cmove
lcall
mov
loop
pop
adc
mov
scas
jmp
decl
push
mov
je
cmp
ficompl
test
dec
xchg
mov
inc
imul
rorb
xchg
mov
pop
cmp
mov
data16
jg
test
filds
loop
scas
cmpb
jbe
jb
mov
mov
pushl
verw
daa
sahf
jp
iret
adc
jmp
push
or
lea
sub
into
incl
mov
rclb
ret
and
pop
icebp
dec
in
mov
cld
and
jmp
or
sti
pop
push
arpl
out
imul
add
jmp
pushl
jl
lcall
mov
jnp
xchg
and
cli
sbb
and
fstps
xchg
pusha
pusha
ret
add
decl
xor
mov
aad
inc
mov
lcall
or
int
insb
jg
and
ljmp
sub
xchg
jns
mov
fs
pop
daa
cli
xor
shl
dec
mov
push
dec
fnsave
roll
das
jns
mov
adc
or
mov
lret
or
mov
push
jge
add
jns
incl
roll
lret
sub
inc
or
rcrl
inc
in
sub
aaa
out
cli
lcall
mov
jb
outsl
xchg
lea
mov
adc
lcall
add
mov
add
in
lret
sub
int
in
jae
mov
mov
xchg
pop
out
and
mov
inc
pop
fcompl
ljmp
ljmp
push
mov
outsl
cmp
mov
jae
inc
and
out
xlat
leave
sub
push
xor
call
or
fadd
cmp
icebp
xor
in
mov
add
decl
hlt
mov
sbb
cmp
adc
mov
nop
pop
imul
adc
inc
dec
incl
loopne
cmpsl
aad
push
push
adc
inc
inc
mov
repz
adc
test
decl
xchg
pop
pop
push
sti
cmc
jbe
les
or
das
out
inc
push
scas
cs
add
xchg
dec
mov
fwait
call
push
sbb
inc
dec
or
in
jge
sub
rorb
leave
popf
loopne
sbb
decl
sub
clc
inc
ret
push
sbb
cmc
pop
fimuls
nop
in
mov
call
fldenv
cld
push
and
mov
aas
pop
add
jl
loope
mov
cmp
adc
insl
mov
les
loop
pop
jle
stos
inc
decl
loopne
in
jecxz
mov
test
in
cmc
pop
clc
leave
and
ljmp
sub
and
cld
mov
dec
dec
inc
mov
test
jno
inc
std
jecxz
or
stc
out
sbb
push
insb
mov
jne,pt
jp
push
sti
xor
or
int
sti
testb
sbb
mov
cmp
incl
sub
clc
orb
test
addr16
into
out
popa
jl
mov
les
ljmp
or
fyl2x
out
fdivl
jmp
or
rorb
arpl
outsl
clc
sbb
test
xor
cmp
and
xchg
notb
push
or
mov
call
cmp
cwtl
stc
sbb
xchg
mov
xorb
notw
cmp
xor
fisubs
insl
push
pop
cmc
sbb
dec
or
adcl
loopne
in
xchg
stc
xchg
decb
dec
cmp
scas
adc
nop
inc
cli
idiv
call
in
in
adc
xor
inc
arpl
cmp
stc
jge
decb
jmp
pop
leave
gs
in
popf
push
inc
xchg
lret
inc
xchg
jmp
cs
push
scas
mov
ja
xor
sub
mov
out
sahf
adc
xchg
or
sub
cmp
push
cmc
int3
push
fwait
pop
gs
sbb
jl
push
or
mov
ret
decl
adc
sub
out
pop
call
call
jbe
ret
rolb
hlt
ljmp
jo
scas
popf
adc
add
dec
sbb
push
test
push
clc
mov
sub
std
mov
add
pop
mov
clc
call
sub
jl
ret
pop
stos
xor
sti
fidivrs
xchg
scas
mov
pushl
repnz
int3
add
mov
jne
movsb
push
mov
sbb
pushl
inc
jns
je
mov
rclb
cmpb
sub
mov
xchg
imul
in
pushl
xor
dec
lock
fs
loope
in
jle
insb
xchg
sarl
pushl
xor
cmpsb
mov
cmp
adc
aam
xor
jp
push
adc
mov
out
mov
or
xor
lcall
push
aam
into
dec
jle
adc
jg
cmp
iret
pushf
fisttpll
mov
negb
mov
pop
repnz
sbb
fcompl
inc
push
sub
cli
lcall
test
push
pop
dec
rolb
and
test
mov
push
lcall
in
rolb
or
inc
lcall
pop
lahf
aad
jl
pop
dec
add
icebp
fdivs
pop
push
loop
test
and
ljmp
adc
add
xor
jbe
test
call
ss
add
cld
pop
iret
je
fidivrl
lahf
icebp
xor
leave
sar
or
sarl
cmp
mov
fwait
pop
push
fsubrs
or
jo
jmp
mov
movsb
or
add
xor
dec
fldcw
jbe
in
dec
mov
mov
adc
adc
inc
jg
inc
push
jl
movsb
fsubl
cli
mov
insb
inc
stos
shlb
dec
xchg
cmp
jmp
insb
enter
xchg
sbb
jge
mov
daa
test
stos
push
imul
clc
inc
ss
mov
pop
cmp
lods
outsl
pop
xchg
pop
sbb
enter
subb
in
aam
add
xlat
xchg
dec
movsb
xchg
sub
mov
mov
push
fwait
or
sbb
mov
sar
pushl
dec
shl
push
mov
mov
xor
gs
mov
das
sar
mov
inc
cs
imul
jmp
out
rorb
cld
push
jl
cmp
mov
push
sbb
sub
pop
orb
ds
jno
cmc
mov
mov
adc
icebp
shrl
stos
inc
mov
inc
xor
popa
in
out
rol
pop
shl
add
dec
daa
add
dec
mov
mov
and
sbbl
leave
mov
jg
inc
fucom
lahf
push
or
adc
xchg
das
scas
xor
fistpll
mov
lods
push
or
mov
pop
sub
fstl
loope
insb
jge,pt
test
pop
jg
mov
push
addr16
inc
adc
adc
inc
inc
push
sbbb
dec
test
icebp
in
mov
mov
or
pushf
lock
iret
in
xchg
sti
pop
fwait
mov
jmp
sbb
dec
lods
push
add
mov
mov
jns
sbb
in
scas
incl
mov
jae
in
loopne
inc
nop
push
test
shrb
testb
sbb
vdivss
mov
pop
rcrl
xor
popf
andb
dec
mov
pushl
adc
mov
sbb
addr16
xlat
fucomi
jecxz
pop
or
daa
imul
ljmp
mov
loop
xlat
mov
adc
cmpsl
jne
jge
or
cmp
insb
les
pushl
in
fnsave
inc
mov
inc
mov
daa
mov
popa
push
push
gs
lods
and
incl
ret
into
sub
pop
pop
ja
out
cwtl
jo
mov
subl
icebp
int3
dec
imul
pop
mov
nop
push
add
pusha
mov
fstpt
int3
jb
sbb
mov
lods
and
lahf
cmpsl
add
cmpsb
into
std
xor
pop
call
xchg
cmp
fwait
out
sub
xor
dec
sub
nop
cmpsl
cmpsb
add
decl
clc
xchg
cmpsb
sub
icebp
icebp
clc
cmpsl
lahf
dec
repz
xchg
mov
sti
sub
push
fcomip
mov
in
orb
sub
xchg
lcall
sahf
jmp
push
sub
fisttps
sbb
iret
mov
cmpsb
push
fldcw
hlt
decl
lock
test
push
or
cltd
data16
nop
pop
fdivr
mov
mov
test
mov
mov
jne
xor
ret
pop
and
xchg
cld
fstpl
stc
dec
insl
mov
lods
jp
mov
mov
rorb
lcall
lock
mov
ljmp
jecxz
dec
call
jg
push
pushf
lahf
jle
shl
xchg
jmp
xchg
mov
jno
stos
push
xchg
pop
pusha
mov
imul
jno
add
dec
daa
jns
int3
movsl
dec
in
dec
xor
enter
gs
jmp
pop
lods
int
idiv
dec
aaa
mov
jl
neg
jns
sbb
fiaddl
dec
je
push
mov
mov
sbb
push
pushf
outsb
dec
lods
lcall
jo
fildll
lea
jae
cli
sahf
fxam
ja
mov
fxch
xor
faddp
adc
and
fstl
popf
int3
jns
lods
push
call
jno
add
pusha
xor
cmc
pushl
xor
andl
adc
subb
xchg
pop
pop
insl
ficompl
testl
inc
pop
in
shll
cld
push
pop
fcomip
mov
movsl
idiv
ljmp
adc
adc
lcall
hlt
int
sbb
mov
mov
nop
xchg
jle
popf
jbe
call
fwait
push
jg
imul
lret
je
add
dec
popa
push
jp
mov
sti
fcomip
push
data16
push
xchg
push
adc
lods
sbbl
adc
pop
pusha
popf
movsl
adc
add
xlat
outsl
lcall
mov
mov
jp
jo
cmp
xor
andb
dec
jae
mov
inc
pop
das
inc
xor
repz
push
fwait
push
aaa
std
pushl
stc
sahf
das
ds
mov
cmpsb
stos
fwait
adc
call
cmpsb
arpl
lea
adc
push
sub
lcall
cmpsl
and
inc
lahf
and
iret
out
sbb
enter
push
pop
loopne
lret
in
pop
sub
add
mov
and
pop
push
xchg
icebp
lret
mov
cwtl
sahf
sbb
or
lock
jmp
js
mov
add
xchg
mov
repnz
sub
push
incl
clc
call
adc
lcall
pop
gs
insl
ret
mul
pop
out
shlb
decl
push
xchg
leave
mov
push
sub
clc
jp
jle
sahf
jmp
cs
arpl
fwait
dec
mov
sub
std
outsl
je
test
sahf
push
cmp
jg
std
push
gs
and
push
jbe
in
xchg
ficoml
dec
inc
mov
test
mov
xor
push
fbld
movsb
inc
cld
push
scas
out
int3
decl
mov
and
inc
outsl
mov
stc
mov
pop
mov
leave
inc
out
or
test
cmp
or
push
push
stos
mov
sar
pop
out
mulb
sbb
sti
xchg
testb
pop
bound
call
jl
loope
pop
out
and
cld
faddl
sbb
fs
in
inc
fbstp
jge
fcmovbe
cmpsb
cmpsb
out
and
or
rol
mov
andl
sbb
inc
in
mov
lcall
sbbl
cmpsb
js
fildll
pop
sbb
pop
repnz
sbb
and
mov
pushl
pop
and
fists
push
in
mov
pusha
xchg
dec
or
lcall
stos
mov
fildll
ret
cltd
pushl
movsl
jnp
mov
jle
jns
jne
push
mov
je
mov
cltd
outsb
mov
mov
push
push
cltd
outsl
lcall
int
nop
sti
push
inc
pminub
and
cmp
lret
insl
push
sti
mov
pop
mov
adc
mov
mov
dec
out
xchg
mov
inc
adc
mov
das
jle
add
ja
call
imull
int
push
aad
cmp
xchg
cs
lahf
cmc
std
jp
bnd
icebp
jg
std
popa
lea
xor
fcoms
dec
mov
xor
dec
jmp
out
or
adc
sub
or
push
int
lret
push
dec
aas
xchg
daa
push
push
jmp
adc
jo
and
and
pop
stc
cmpsb
aaa
into
or
ja
movsl
xor
ljmp
sahf
imul
push
cmc
push
cmpsw
dec
inc
push
insl
xlat
aas
or
push
clc
and
lcall
out
aam
jg
nop
adcb
lods
sub
xchg
push
jle
add
or
push
jb
in
cli
jmp
xlat
add
and
fs
out
ljmp
xor
icebp
add
shrb
cli
push
mov
add
incl
cmpsb
into
inc
mov
or
mov
rorl
ljmp
jmp
dec
add
mov
cs
pop
jbe
jg
lcall
popa
adcl
loope
pop
insb
mov
pop
shll
xor
jns
outsl
cli
pushl
xor
push
mov
ret
adc
sbb
outsb
dec
jmp
call
incb
out
mov
push
test
sub
fisttpll
fildll
pop
push
std
mov
negb
out
adc
inc
stos
or
pop
mov
pushl
sub
jp
pop
adc
test
enter
jmp
jnp
push
push
dec
pop
jg
notl
pop
aas
sbb
pop
and
in
pop
pop
jmp
sub
call
fdivl
dec
cmp
dec
dec
push
dec
push
ds
jns
mov
sbb
fldenv
jg
lods
push
mov
in
xlat
add
shrb
mul
dec
stc
push
scas
icebp
xchg
sbb
mov
inc
imul
repnz
sub
fidivrs
xor
in
mov
in
cld
les
add
mov
test
mov
xor
stc
cwtl
mov
pushl
lcall
mov
xchg
xlat
mov
ljmp
cmp
xchg
fiaddl
or
decl
test
pop
test
rol
aas
mov
dec
out
dec
jae
lock
cmc
jp
pusha
dec
mov
xlat
insl
loopne
jp
jne
inc
in
lods
imul
jmp
sub
pop
addl
jl
lret
test
outsl
fwait
sbb
or
pop
addr16
lds
call
cmc
jmp
sbb
inc
test
mov
fucomp
sbb
sar
icebp
jae
je
sar
inc
jae
into
cmp
ret
cs
call
inc
mov
mov
test
mov
clc
imul
or
daa
adc
push
mov
test
mov
lods
jns
iret
enter
push
das
add
jo
fistps
dec
jl
jmp
es
in
push
or
call
mov
fmul
and
rcrl
mov
xor
cmp
dec
inc
add
decl
push
sub
xorb
cmp
xor
in
or
dec
sub
lcall
shlb
ss
dec
ja
daa
in
in
dec
and
into
hlt
push
dec
dec
loop
push
mov
pop
pop
jnp
loop
xor
cltd
jg
jmp
in
pop
pop
mov
out
popa
lds
inc
pop
push
outsb
pop
out
pop
roll
aaa
push
mov
repz
jae
call
in
jp
je
xchg
scas
rorl
leave
addr16
enter
push
repnz
sub
push
cwtl
fdivs
mov
jmp
push
mov
pop
and
ja
dec
mov
popa
ja
jmp
sub
xchg
in
fs
test
es
std
adc
lcall
frstor
in
mov
mov
pushl
mov
repz
daa
sub
and
xchg
popf
lcall
pop
test
idivb
mov
jo
push
lret
ljmp
subl
bound
outsl
out
out
aam
daa
mov
cmpsb
or
jg
jl
daa
mov
out
ljmp
sti
ds
movsl
pop
rcl
popa
test
call
push
mov
aaa
clc
adc
pop
sbb
stos
fiaddl
call
mov
jbe
cmovbe
testl
jge
jle
mov
loope
inc
fwait
fwait
je
cmp
call
in
jl
or
arpl
fsts
xor
push
and
lcall
add
lcall
xor
gs
stc
mov
inc
push
xchg
inc
inc
mov
inc
inc
xor
movsl
xchg
movsb
sub
inc
test
loopne
out
dec
ss
call
notb
push
dec
jo
mov
add
inc
out
xor
xchg
outsl
fldt
gs
ja
add
or
push
dec
lahf
sub
aad
cwtl
stos
xchg
jl
ss
cli
inc
test
xor
adc
add
jg
mov
sar
push
cmp
sbbl
int
and
bound
sub
das
out
cmp
ficomps
sub
dec
sbb
pop
je
scas
cmpsb
inc
xchg
adc
fisttpll
pop
fcoms
and
lret
add
adc
imul
xchg
add
mov
loope
xor
jg
psubusb
call
xchg
xchg
ficoml
push
mov
jae
pop
testb
mov
mov
pop
lcall
sub
mov
arpl
rcl
xchg
rol
push
cld
sbb
lcall
rclb
sub
leave
dec
add
jb
popa
int3
into
sub
cs
incl
pop
ljmp
in
pusha
and
jle
xchg
imul
insl
or
or
mov
imul
xchg
lock
data16
imul
fwait
sub
or
mov
call
imul
fstl
or
pop
adcb
lret
incl
cld
add
xchg
sub
inc
sbbl
scas
or
push
pusha
jo
fildll
lcall
ljmp
ret
filds
mov
mov
andl
repz
xchg
xlat
cltd
jns
mov
lcall
fxch
push
or
pop
sub
sti
pop
mov
mov
loop
cltd
ljmp
outsl
sub
addr16
pop
adc
out
ja
sti
and
daa
imull
imul
or
adcl
sbbb
and
pop
in
add
xchg
dec
jle
push
popf
movsb
pop
ret
loopne
inc
jae
cli
call
lcall
xlat
push
jp
cmc
mov
xor
les
adc
sbb
jno
call
adc
and
fcomi
mov
push
adc
push
and
shll
mov
mov
cld
cld
and
rcrl
cwtl
mov
sarb
mov
fsubl
fidivrl
mov
jb
sbb
or
fnsave
mov
and
jge
inc
lcall
jge
popa
push
je
bound
push
das
inc
inc
loopne
pusha
repz
jae
call
sub
jbe
out
out
dec
fcos
les
cmp
xor
pusha
add
repz
subl
ret
sahf
xchg
mov
add
es
add
in
loop
dec
rorl
inc
dec
xor
mov
jmp
out
in
xchg
sbb
xor
movsb
dec
ja
movsb
mov
stc
repnz
ja
call
in
clc
ret
or
fisttps
pushf
cs
pop
daa
repnz
mov
cmp
in
inc
sbb
mov
sti
push
mov
insl
popf
stc
xchg
or
cmp
mov
jae
dec
cs
xchg
std
fisubs
mov
movsl
jecxz
out
or
lcall
push
add
pushf
xor
jno
jmp
sarl
xchg
add
aad
ljmp
les
sbb
push
mov
adc
leave
mov
and
incl
sbb
jo
fstl
aam
out
std
push
mov
js
inc
ljmp
jno
jb
push
xor
rclb
mov
dec
mov
stc
out
incl
push
jecxz
cs
fs
lret
pusha
addl
dec
pop
jle
pop
push
lcall
stos
mov
xchg
pushl
dec
push
stos
jg
ret
or
dec
xor
in
call
xchg
decb
fmull
inc
mov
push
mov
lcall
popa
mov
lcall
push
xor
and
jae
aam
call
sub
jne
jns
in
push
mov
mov
xchg
addr16
loope
or
add
stos
test
jecxz
call
cmp
sub
pushf
mov
push
adc
out
dec
dec
lea
pop
sahf
cld
mov
lds
adc
xchg
mov
push
scas
jnp
mov
stos
cmp
cli
mov
dec
add
es
in
out
int
je
push
ret
rclb
sar
mov
sbb
lcall
cld
int3
cwtl
fidivrs
inc
shlb
xorb
ljmp
and
divl
daa
cmc
orb
movsb
arpl
push
or
idiv
add
cwtl
mov
pusha
hlt
or
push
pop
xchg
fdivrp
popa
push
mov
push
sbb
or
xchg
cmp
jns
rcrl
loope
shlb
or
push
ljmp
ret
out
dec
dec
les
mov
add
movsb
sub
xor
dec
ds
jecxz
jmp
mov
jmp
call
fidivs
mov
pop
sbb
filds
xchg
inc
mov
sub
jne
xor
das
mov
decl
push
into
pop
call
mov
js
loop
popf
movb
pop
xchg
call
push
popa
cmp
cmp
xor
cli
dec
inc
mov
addr16
inc
cld
jns
pusha
insl
cmpsb
orb
and
jne
movsb
push
stc
pop
dec
push
clc
js
jae
xchg
incl
je
xlat
or
cltd
in
dec
sbb
ficompl
jno
mov
pop
jnp
mov
call
sbb
cmp
sbb
es
jns
stos
xor
xlat
jecxz
roll
cli
push
fdivrp
cld
sbbb
xor
jle
dec
shrb
fs
inc
fsubrs
jle
jg
dec
cld
stc
movsl
mov
mov
int
jo
ljmp
pop
jb
sbb
aad
mov
dec
ljmp
xchg
ja
lcall
or
add
mov
ret
jg
cmp
test
adc
push
out
test
mov
add
jg
cmpsl
push
cmp
lods
outsb
lret
hlt
pop
dec
jnp
das
cmp
jle
push
mov
daa
pushf
xor
lcall
xchg
pop
and
mov
mov
jo
jge
outsb
jmp
out
dec
xchg
mov
ret
ret
jg
add
sub
mov
mov
sbb
outsl
int
lds
jle
jns
fcompl
mov
add
add
cmp
repnz
push
lret
int
sbb
jge
leave
inc
sub
mov
movb
icebp
dec
lods
pop
dec
jns
xchg
mov
iret
pop
pop
in
lods
add
mov
fucomi
rolb
rolb
push
pop
popf
inc
aad
icebp
jbe
ljmp
pop
iret
jp
rol
jl
inc
inc
sub
jbe
pop
xor
lcall
repnz
inc
mov
mull
icebp
xchg
adc
jle
or
xor
lahf
daa
mull
incl
mov
jl
add
xchg
test
call
lret
imul
fistl
scas
and
in
dec
push
mov
mov
mov
sub
decl
cs
idiv
test
push
imul
adc
jecxz
cmpsl
jmp
or
daa
mov
push
push
pushf
sub
imull
aam
imul
jmp
scas
pop
mov
mov
jb
add
inc
xchg
mov
hlt
xchg
ret
scas
ret
pop
decl
dec
push
jg
cltd
in
rol
out
sbb
in
pop
dec
in
mov
adc
mov
ljmp
loop
dec
or
test
inc
lahf
dec
jb
fnstcw
lcall
mov
iret
ret
lods
jmp
fbstp
repnz
add
gs
inc
mov
jmp
sbb
popf
addl
adc
ret
push
imul
imul
push
jg
fildll
pop
cmc
jnp
loope
jb
cmc
xlat
and
rorl
jecxz
or
js
mov
pop
adc
cmpsl
in
adc
clc
push
je
aam
in
das
xor
incl
mov
arpl
sbb
hlt
cmp
add
in
dec
push
cmpsl
mov
adc
mov
pop
and
xlat
push
cmp
lret
cli
jg
call
lret
pushl
cmp
add
push
and
es
insb
pushl
add
ret
cli
cmp
or
xchg
filds
jp
inc
cmpsb
popf
repnz
sbb
dec
imul
dec
ds
imul
call
mov
ds
mov
xchg
fildl
xchg
pop
js
scas
shrl
fldcw
pop
mov
adc
inc
fs
cwtl
xadd
sar
mov
jl
sbb
pop
std
mov
dec
pop
inc
out
ljmp
decb
jecxz
mov
jmp
ret
sar
pushl
es
movsl
or
repz
inc
pusha
jns
or
stc
adc
cmp
push
adc
lahf
adc
cmp
ljmp
jne
xor
aam
fwait
lods
fildl
decl
aas
fistpl
lock
push
sbb
mov
sub
in
cmp
fstps
push
sarb
call
adc
clc
jmp
xchg
jbe
or
hlt
neg
subl
lods
jl
out
fcmovb
mov
shl
dec
data16
gs
fildll
decl
xchg
mov
daa
sbb
push
sbb
mov
cvtps2pd
add
ljmp
push
movsl
xor
xorb
in
mov
loope
xchg
pop
pop
ss
push
add
aad
mov
pushl
frstor
movsb
cmpsb
bound
dec
pop
mov
shl
cwtl
xchg
xchg
stc
push
sti
push
cmp
sub
inc
pop
push
or
movsb
cmp
jne
inc
popa
sub
fadd
scas
sbb
scas
adc
pop
loope
aaa
jge
sub
and
cmp
fisttpll
push
inc
push
push
imulb
lods
and
repz
pushl
mov
fsubrs
xor
fwait
outsl
cmp
repnz
dec
cmp
ds
test
inc
scas
xor
dec
scas
sbb
aam
cmp
fdivs
fists
aad
sub
add
pop
add
out
scas
movsl
sarb
jp
scas
fwait
out
push
ret
lcall
or
mov
lea
sub
push
or
call
jo
jg
repz
ja
shll
movsb
pop
xchg
fnsave
fwait
sti
insb
xor
leave
push
jb
push
mov
mov
xchg
call
xchg
mov
popl
add
sar
pushl
xor
push
cmp
pop
sbb
inc
adc
out
decl
sbb
fisubl
dec
jo
pop
addb
adc
mov
incl
sti
inc
inc
push
mov
outsl
lods
sub
sbb
jmp
and
incl
rclb
sub
test
sub
mov
negb
dec
cmpsl
sub
jg
je
aas
sbb
mov
jnp
iret
xor
pusha
dec
jbe
repz
in
sbb
jg
inc
into
ds
xor
pop
es
or
in
dec
lods
jo
jne
sub
int
jg
lcall
xor
out
dec
push
les
clc
pushl
mov
pop
arpl
leave
mov
mov
add
xor
decl
lock
sbb
aaa
push
push
mov
inc
add
mov
mov
dec
mov
xchg
rclb
push
cs
xchg
jmp
lods
push
inc
sar
call
inc
adc
add
inc
fcmovnbe
cwtl
sbb
push
xchg
popa
push
inc
decl
push
add
xor
push
mov
jg
into
mov
out
cmp
incl
in
clc
jmp
loope
add
aad
pop
mov
fcoml
mov
pushl
inc
adc
faddl
mov
dec
mov
call
pop
mov
inc
outsl
xchg
mov
decl
jmp
lahf
imul
xor
in
mov
imul
inc
add
lcall
cmc
nop
lea
lcall
mov
or
mov
out
adc
fsubs
xchg
lret
push
sbb
lcall
pop
loop
mov
add
sbb
mov
sar
incl
lahf
xor
into
mov
push
jg
jp
or
cmc
es
incl
mov
addr16
mov
jmp
jl
push
bound
ror
mov
iret
adcb
xor
lods
fistps
or
pop
add
or
jg
js
dec
in
jno
xor
xchg
pop
mov
xor
pop
cmp
decl
daa
xchg
add
iret
hlt
xor
cltd
lahf
fildll
pop
icebp
mov
pushf
xor
sub
push
test
cli
data16
mov
xchg
movsl
andl
mov
sub
lea
outsb
les
pop
aad
ljmp
adc
pop
daa
jae
push
lret
lret
dec
imul
inc
in
rolb
ljmp
call
jbe
js
cmp
jp
sbb
or
lcall
adc
enter
aad
cmp
sub
cmpsb
and
xlat
fisttps
call
pop
seta
push
jns
call
std
and
sub
jne
xchg
imul
sub
adc
std
out
add
incl
insb
add
push
in
addb
stos
test
and
sbb
out
clc
adc
fs
rorl
fs
aam
or
in
pop
incl
outsb
test
sbb
xor
cmp
push
or
ljmp
rorb
xchg
mov
pop
push
in
or
mov
sbb
ljmp
mov
mov
fstpl
xchg
dec
insb
lahf
fcmovb
cmp
cmc
andb
dec
iret
add
pushl
jmp
and
jg
lods
rorb
xor
ja
mov
stos
mov
jbe
cli
mov
fistps
out
mov
push
xchg
in
pop
or
sbb
je
stc
mov
dec
sub
shrb
inc
dec
imul
and
insb
mov
cmp
popf
cld
fsubrs
push
sub
xor
js
push
call
scas
xor
jle
test
hlt
je
cmp
push
jmp
ss
mov
inc
jb
aad
or
mov
inc
or
enter
and
and
scas
jl
lret
andps
and
lods
arpl
ss
xchg
xor
int3
mov
sbb
iret
jp
fsubl
ljmp
out
adc
mov
rclb
dec
into
or
lds
das
lods
ljmp
out
out
dec
insl
pop
lsl
push
cmc
sbb
ss
aas
cmpsb
mov
jl
pushf
in
incl
daa
loope
adc
and
jecxz
mov
sahf
jno
mov
sar
adc
or
push
cmpsl
sbb
jae
mov
add
jo
stc
ds
sub
incl
call
add
mov
out
cld
push
push
imul
xchg
pop
lret
sub
ljmp
imul
fnstsw
insb
fadds
pop
dec
mov
bound
dec
out
loop
inc
inc
fcomip
idiv
jp
jne
test
adc
adc
loopne
sbb
xlat
jne
jle
mov
sub
push
test
aaa
aad
mov
int
repz
hlt
inc
mov
daa
call
xor
dec
add
in
jge
scas
pop
adc
shl
mov
mov
sbb
pop
lods
lret
in
adc
cmp
mov
test
adc
cmp
lds
mov
mov
mov
aam
or
fstps
xor
sbb
jo
jns
xchg
lret
cmp
ljmp
and
mov
mov
mov
in
clc
add
jp
enter
pop
mov
lcall
es
sbb
sahf
mov
inc
add
adcl
jno
jp
pop
repnz
xchg
jmp
out
out
sbb
pop
push
je
push
into
push
repnz
sti
and
call
dec
iret
add
gs
jl
xchg
pop
add
popf
jno
adc
push
jp
pushl
push
clc
fadd
in
inc
stc
fisubs
jecxz
js
mov
jl
mov
mov
inc
push
jp
inc
fwait
lret
push
cwtl
mov
cmp
cs
fcomp
mov
jne
and
icebp
cli
fisubl
ljmp
mov
icebp
cs
sbb
scas
pop
push
jle
xor
mov
movsb
das
cs
xor
pop
push
outsl
loope
std
lcall
pop
outsb
negl
lds
pop
mov
into
rol
mov
ljmp
insl
pop
rolb
sub
jo
pop
xchg
movsb
push
jno
add
int
inc
ret
cli
cld
hlt
imul
xlat
inc
movsb
pop
xlat
test
mov
fcmovne
push
push
lds
aaa
add
movsl
mov
call
inc
cmpsl
sbb
mov
scas
and
dec
lods
bound
gs
test
push
stc
xchg
mov
cld
xchg
xchg
dec
mov
mov
pop
jg
scas
mov
movsl
inc
add
lcall
loope
inc
cmpsb
or
jnp
mov
out
stc
sub
gs
inc
jecxz
cmpsl
mov
dec
xor
jmp
mov
xchg
xorb
inc
xchg
pop
insb
inc
jae
stos
add
add
rcrb
lcall
je
adc
sbb
adc
cmp
dec
mov
jmp
sub
and
jno
pusha
test
in
jns
addr16
cmp
dec
pop
lea
push
call
sub
inc
jo
mov
imul
or
xor
clc
inc
aad
mov
outsl
fldcw
gs
jo
add
xchg
lock
in
xchg
mov
loop
sahf
push
sbb
bnd
ljmp
ret
cmp
out
lret
lahf
gs
mov
inc
fidivs
sbb
std
jg
mov
icebp
mov
mov
sbb
or
pop
test
pusha
std
cmp
lock
repz
aad
mov
loopne
imul
mov
push
inc
lock
scas
daa
cmp
cmc
mov
scas
sub
lret
xchg
lcall
andl
mov
iret
arpl
xor
lss
mov
cmp
fisubl
aas
cmp
fsubrs
in
sub
push
sub
aaa
or
imul
popa
inc
in
jmp
call
jl
repz
shll
adc
mov
incl
ds
mov
pop
xor
dec
hlt
stos
aad
sub
xchg
std
push
and
sub
mov
xchg
scas
and
pushf
fists
pusha
jo
incb
arpl
jno
pop
jno
adc
add
ja
cmp
cli
jg
int3
mov
mov
push
or
sahf
push
inc
dec
out
call
push
insl
int3
shlb
jecxz
push
test
cwtl
mov
push
lea
popa
cmp
test
outsb
sub
fmuls
in
cmp
lods
in
push
sbb
jmp
inc
jmp
dec
sbb
mov
mov
sarb
jmp
cmpsb
push
cmp
mov
clc
jmp
cld
lcall
pop
mov
lea
enter
out
insl
cmp
in
mov
or
jp
add
enter
icebp
adc
mov
and
mov
cld
jmp
stos
roll
je
cmp
rolb
pop
aas
and
lahf
jp
mov
pushl
test
dec
cmp
sbb
jle
jmp
out
out
daa
ficomps
call
adc
fcoml
sbb
pop
inc
add
scas
inc
out
aaa
ret
lds
pop
mov
ljmp
and
sbb
dec
test
rcll
rorl
xor
cmovae
sub
loope
add
adc
adc
ds
aas
mov
into
pop
adc
mov
aaa
in
ljmp
nop
test
jmp
and
or
mov
and
div
fistl
shl
pop
fisubrl
or
decl
out
fdivrl
inc
mov
stos
outsl
enterw
fisubl
and
jge
call
inc
lret
movsb
add
jle
xlat
mov
xchg
add
adc
cmp
jmp
cmpsb
rcll
sub
mov
adcl
cs
cld
dec
jb
addl
inc
lcall
test
inc
and
jg
js
pop
js
addr16
or
mov
ljmp
mov
mov
sbb
push
rorl
sub
or
add
inc
jl
outsb
or
int
cli
dec
xor
mov
stos
xor
jmp
cmp
ja
jg
in
push
cmpsb
pop
fldenv
sbbl
mov
cmpb
xchg
lahf
sub
pushl
inc
mov
cld
or
sbb
mov
das
mov
add
incl
adc
clc
incl
cltd
mov
sbb
inc
mov
cmp
cmpsl
sub
test
inc
shr
dec
xchg
pop
into
int3
das
cli
pop
jmp
aad
scas
lcall
push
les
inc
iret
movsb
das
jp
hlt
fiadds
ds
js
test
pushl
mov
aam
pop
or
andl
mov
int
mov
jmp
fistl
lods
cli
imul
or
das
popf
popf
in
or
adc
fwait
test
dec
in
mov
pop
test
decl
mov
dec
shll
dec
cmp
mov
nop
dec
or
adc
shrl
fstps
xchg
jb
xchg
cmp
add
icebp
inc
setnp
idivb
call
mov
sbbl
in
dec
mov
sub
and
mov
pop
mov
pslld
ss
fstpl
push
sbb
aad
lock
dec
imul
add
fdivrs
arpl
adc
test
nop
sbb
or
push
out
hlt
jbe
insb
inc
inc
inc
fisttps
cmp
movsl
pushf
cmpl
pop
daa
test
mov
repz
jmp
sbb
pop
inc
cld
ljmp
bound
loop
nop
jmp
or
leave
ja
and
into
jb
fdivr
call
or
data16
pusha
pop
cmp
jle
fdivrl
movsl
enter
or
mov
call
into
fisubl
int
cmc
fimull
loopne
add
pop
aaa
adcl
cmp
nop
jns
pop
mov
scas
rcrb
inc
adc
aaa
addr16
jo
notb
jns
fistpll
inc
xchg
ss
xchg
aaa
js
and
inc
jmp
adc
jb
or
or
ss
sbb
xchg
pusha
jno,pt
sar
scas
out
lret
mov
pop
arpl
xor
pushl
and
xchg
push
pop
xor
jg
loopne
and
push
das
push
std
mov
inc
jge
xchg
in
pop
je
loopne
cmp
inc
cmp
fstp
and
fistpl
fdivr
mov
inc
add
mov
pusha
out
inc
adc
mov
ret
imul
xor
sub
xor
sarb
jg
or
or
movsl
lahf
filds
mov
dec
sbb
jmp
xlat
rorb
push
push
pop
arpl
xor
pushl
cmp
cli
stos
mov
jl
stos
daa
ret
movsl
sbb
test
ret
decl
fstpt
sti
mov
inc
hlt
leave
jmp
in
in
jg
leave
pop
out
and
sbb
pop
shll
test
jnp
adc
mov
push
add
cld
or
jl
cmpsb
xor
xor
add
pop
idivb
aam
mov
jnp
cmpsl
test
lcall
scas
push
inc
fdivrs
pusha
push
mov
imul
mov
fidivl
add
out
push
rolb
aaa
call
cmc
xchg
adc
pushf
fidivl
in
repnz
rcll
xor
push
notb
loopne
fdivl
lret
scas
in
cli
push
outsb
sahf
gs
mulb
nop
mov
repz
sbb
adc
aam
in
jge
xor
mov
inc
fsubl
mov
das
sbbb
mov
repnz
fsts
xchg
sub
jl
imul
xor
lcall
negl
pop
outsb
dec
jl
sbbl
mov
mov
sub
hlt
jge
sbb
or
fidivl
das
xchg
sbb
cld
cmp
aaa
lret
or
cmpsl
in
lcall
push
inc
into
lods
pop
arpl
jno
add
or
insl
repnz
sub
push
aas
popa
pushl
call
sbb
fwait
mov
dec
imul
xchg
aaa
mov
mov
outsl
flds
fdivl
cmpsb
cs
jl
mov
mov
adcb
std
jle
clc
pop
or
mov
lret
lock
xor
cmp
xchg
add
sub
lcall
sbb
xor
adc
mov
pop
or
inc
inc
sbb
mov
decl
lock
add
jmp
cmpl
std
xchg
inc
fsts
into
or
ljmp
xchg
adc
jne
sbb
out
mov
imul
lods
add
movl
pop
pushl
pushf
insb
lahf
mov
xlat
iret
push
call
je
sbb
sub
test
push
push
out
data16
inc
mov
lahf
push
xchg
push
mov
das
sub
cmp
out
jnp
popa
mov
sarb
lcall
fildl
insb
popf
fwait
adcl
pop
and
je
xchg
shl
xchg
clc
lea
cld
mov
shl
dec
inc
outsb
shrl
lret
jmp
pop
fdivs
test
pop
xlat
stc
pusha
xor
test
repz
gs
incl
ja
gs
les
loope
subl
fs
fnsave
mov
or
lcall
test
add
loop
repz
inc
push
es
inc
xor
into
pop
hlt
ja
addr16
icebp
repz
out
jecxz
call
fsubs
clc
enter
sbb
cmp
adc
dec
cmp
push
xor
dec
cmpsb
mov
jbe
xchg
ja
das
int
ja
xor
fists
iret
sahf
testl
shl
ljmp
xchg
out
stos
insl
xchg
arpl
lods
sbb
push
stc
inc
lea
and
incl
call
fcoms
sbb
cltd
inc
xor
push
decl
into
jbe
lock
in
ss
pop
lahf
fmuls
add
sbb
mov
push
lahf
sbb
jmp
and
fcoms
pop
clc
mov
xchg
xchg
mov
xchg
xchg
dec
add
test
pushl
pop
push
adc
dec
out
arpl
push
mov
clc
decl
pusha
push
adc
addr16
and
out
fbstp
push
iret
cmp
incl
andb
dec
in
pop
inc
fstpl
shll
pushf
add
loop
ljmp
aas
ret
pop
and
inc
out
mov
xor
xchg
cmp
cmp
mov
mov
and
xor
add
pushf
enter
mov
call
pop
xchg
mov
sbb
dec
dec
jns
pushf
mov
aaa
adc
rorl
cs
inc
mov
and
sbb
adc
and
pushl
cld
cltd
jmp
es
cmp
inc
loopne
addr16
mov
sub
xchg
add
fwait
inc
cld
jmp
pop
cmpsl
loope
adc
xchg
push
out
lock
hlt
imul
xor
incl
lods
mov
cs
imul
fidivl
cld
jg
cld
jge
dec
enter
loope
aas
lea
dec
jl
and
mov
push
rep
push
inc
mov
push
addb
jb
xchg
sti
push
push
lahf
dec
out
add
lcall
push
lcall
sbb
adc
or
pop
inc
call
scas
das
push
and
ljmp
mov
roll
push
cmp
pop
fiaddl
adc
mov
ljmp
mov
pop
lret
or
pusha
es
mov
mov
ja
fcomps
xlat
lcall
add
dec
fs
inc
add
mov
ja
mov
jg
cld
dec
jo
aaa
xchg
push
or
or
sub
jnp
xchg
imul
lcall
inc
inc
mov
cmp
xor
mov
outsl
sti
divl
fstpl
dec
mov
push
sub
sub
es
adc
sub
aaa
fcomip
jle
mov
xor
dec
scas
std
pop
push
shll
movsb
or
pop
ud0
mov
inc
mov
cmp
inc
mov
add
jo
popa
mov
popa
push
mov
adc
ja
arpl
mov
out
sbb
xor
int
mov
movsl
sub
loopne
push
cltd
adc
push
pop
jmp
insl
adc
std
jecxz
mov
fistpll
test
sub
test
inc
or
sti
test
ljmp
sbbb
mov
adc
rcl
lret
out
and
pop
stc
xchg
sahf
and
sbb
sub
mov
dec
aas
xor
xor
mov
pop
fistpll
xchg
or
adc
pop
jae
push
fistps
imul
ljmp
and
insl
xchg
loopne
arpl
in
add
sub
shlb
call
cmp
xor
dec
inc
dec
scas
insb
addl
and
dec
jmp
incl
cwtl
movsl
jl
mov
mov
negb
dec
int3
lea
call
cs
cmp
pop
fisubrl
decl
rcrl
insb
dec
mov
aas
fistpll
fsubrl
je
lahf
mov
cmp
and
int
arpl
add
pushl
pusha
inc
jne
jo
decb
pop
pop
jno
cmp
xor
dec
imul
add
fstpl
sub
mov
sub
clc
in
xchg
add
mov
jl
jnp
int3
inc
xor
xchg
int
fstpt
xchg
xchg
xchg
push
lds
int3
mov
incl
mov
das
push
jp
adc
inc
cmp
adc
je
insb
xor
call
add
sti
and
pop
adcl
xor
push
add
push
cmp
mov
cli
lahf
movsb
fbstp
dec
sbb
call
rorb
push
jns
jne
sub
jg
scas
mov
or
imul
cmpl
in
cmp
call
mov
nop
lods
sbb
and
hlt
pop
mov
lods
xchg
int3
sub
mov
fldenv
sub
or
push
adc
mov
lret
pop
cmp
ret
cli
stos
decl
rol
pusha
xchg
mov
adc
mov
and
decl
fadd
cmp
xchg
adc
push
lahf
adc
icebp
dec
lret
stos
sahf
add
mov
ret
xor
push
adc
out
stc
dec
add
sbb
cmp
fstpl
push
pop
fldt
mov
into
scas
and
adc
test
sub
ljmp
inc
pop
repnz
sub
jl
push
les
dec
rcl
faddl
pop
enter
jmp
jno
jae
mov
fsubrl
or
std
lahf
aaa
imul
pushf
fisubs
adc
mov
cmpsb
mov
xchg
xlat
imul
insb
cld
push
arpl
pop
in
cmp
fnstsw
outsb
dec
fcompl
pop
sub
jl
mov
les
and
sbb
call
pop
fsubrl
push
xchg
js
fwait
cli
jne
xchg
in
xchg
jl
jmp
sbb
or
daa
fldl
enter
dec
mov
idiv
lcall
in
les
inc
jp
mov
jl
test
sbb
push
and
jmp
inc
lret
or
cmpb
mov
jp
inc
int
dec
pop
adc
add
lret
sbbb
decl
jne
fldl
pop
ret
in
fildll
lret
aaa
push
jp
scas
jnp
push
and
incl
pop
fisubrl
push
out
dec
xchg
fistl
ret
lahf
xchg
jno
outsb
mov
incl
xchg
rorb
imul
aam
mov
int
movsb
mov
mov
test
test
enter
mov
mov
mov
fldcw
jge
out
lods
inc
cli
adc
ret
or
adc
sub
lret
push
aad
out
mov
out
imul
popf
add
pop
cmc
push
lcall
adc
test
jg
inc
jbe
fadds
xchg
mov
imul
mov
and
decl
lock
popa
mov
js
loop
mov
pop
jne
xor
decl
lcall
mov
jnp
push
addr16
mov
notb
and
push
cmp
incl
jp
dec
dec
dec
cmc
sub
inc
cmpsl
aad
push
test
dec
xor
stos
mov
or
xor
jmp
popf
jno
shlb
jmp
lcall
add
jae
add
rcll
jnp
sbb
in
inc
push
roll
mov
scas
push
incl
int
test
adc
jbe
fistl
mov
adc
jp
cwtl
inc
pop
and
pop
push
call
xorl
push
adc
roll
int3
cmpsl
xor
adc
jg
sar
mov
add
clc
mov
cmpsb
inc
add
lahf
outsb
mov
ljmp
pushl
push
or
shl
add
insb
scas
mov
fimull
jle
or
lock
decl
jne
cld
aad
push
mov
jae
jmp
dec
mov
in
adc
dec
lea
les
test
popf
movsl
cmpsb
fcomi
mov
incl
or
insl
bound
js
jne
test
testl
in
repz
xchg
jecxz
shrb
js
jmp
outsb
mov
sbb
xor
pushf
pop
push
mov
inc
mov
stos
push
daa
sbb
or
into
pushl
insl
in
add
dec
inc
imulb
inc
lret
or
sub
mov
jmp
imul
or
in
add
add
fistpl
fwait
incb
or
add
jle
cmp
lea
mov
jne
movsb
decb
add
cld
or
negb
popa
xor
ljmp
stc
std
push
cmp
jno
movb
dec
gs
ja
lcall
flds
xchg
pop
imul
ljmp
push
xchg
jnp
jno
and
ljmp
jle
push
xchg
cld
mov
and
add
xor
push
int
lds
ljmp
push
and
xchg
stos
adc
inc
iret
jnp
mov
pop
loope
sub
pushl
call
loop
lock
push
loope
dec
sbb
addr16
adc
add
jge
cwtl
addl
pop
fmull
sub
arpl
mov
inc
icebp
repz
xchg
pop
mov
jns
decl
je
cmpsl
inc
pop
leave
xchg
add
inc
fldl
fisubs
jp
cld
int3
subb
xchg
push
ljmp
or
loope
and
mov
mov
xchg
call
clc
sub
femms
test
call
adc
sbb
jecxz
fwait
and
cmp
lods
add
add
loop
test
in
jns
shll
je
adc
pusha
pushl
cmpsb
leave
and
notb
insb
ljmp
nop
fsub
cmp
das
jb
fdivl
and
dec
loope
mov
ret
subl
ljmp
insl
rolb
ficompl
out
inc
fisttps
dec
jmp
jne
test
cmp
sbb
out
clc
decl
add
es
scas
repnz
xor
pop
push
sti
icebp
pushl
mov
aad
adc
pop
test
sbb
aas
ljmp
shl
or
insb
xor
xchg
mov
mov
lcall
test
enter
ffreep
inc
loope
add
repz
sbb
aaa
cld
ja
test
mov
outsl
push
pop
add
incl
xchg
insl
inc
int3
sti
xor
int
ljmp
lcall
pop
jp
in
inc
out
fidivrl
loop
les
jmp
jns
or
lock
xchg
mov
mov
mov
dec
mov
xchg
call
pop
call
sbb
inc
mov
sub
fsubrs
decl
push
leave
adc
jmp
jb
pop
xlat
out
jp
and
sbb
lock
sti
stc
sbb
dec
aad
test
dec
mov
jmp
push
push
std
call
shl
in
pcmpeqd
or
cmpsb
ret
pop
jmp
popf
and
aad
pop
sbb
cld
cmpb
ljmp
in
pop
cmp
fisubl
jl
dec
cmp
imul
lret
xchg
aam
cmc
out
xchg
outsb
and
inc
popa
cmp
mov
and
push
lret
add
adc
jle
jg
fcompl
and
in
hlt
popa
pop
and
popl
ljmp
inc
pop
mov
lret
lret
push
push
gs
sbbb
testb
outsl
add
jb
out
lret
jp
rcr
adc
imul
jmp
pusha
call
mov
frstor
push
xchg
or
push
pop
scas
jecxz
pop
sahf
shr
cli
dec
xor
mov
push
or
pop
xchg
rorl
mov
sbb
rcll
add
fwait
dec
mov
lds
inc
movsb
mov
std
pop
jle
jbe
push
sub
sub
jg
cmpsl
and
clc
jae
mov
mov
push
arpl
imulb
xor
sub
inc
cmpsb
inc
imul
mov
divl
jg
add
mov
pushf
push
sub
xor
fisubs
orl
lcall
hlt
test
dec
rorl
test
mov
mov
aas
pop
xchg
ret
shll
mov
jno
ljmp
clc
pop
lcall
sbb
lods
jle
jge
xchg
xchg
rcl
movsb
xchg
or
decl
add
orb
xchg
mov
jnp
lret
loopne
out
jbe
fcomps
imul
xorl
push
inc
dec
shlb
scas
test
lret
adc
adc
es
push
cmp
mov
xchg
push
jo
out
div
jno
push
sub
adc
lcall
cmc
in
pop
xlat
lock
pusha
ljmp
lcall
jne
in
and
dec
addb
or
pushf
inc
arpl
call
pop
push
shll
cmp
dec
sub
test
xchg
inc
inc
push
dec
push
pushl
aas
cmp
scas
push
sbb
cltd
in
dec
dec
cs
mov
stos
loopne
add
sar
pop
icebp
jmp
or
lods
xchg
dec
lcall
or
rcl
pop
imul
pushl
cs
dec
sbb
repz
sahf
movsl
fildl
mov
test
fldl
call
test
inc
stos
xlat
pop
push
jbe
mov
xchg
lret
fs
lods
add
ljmp
ljmp
push
sub
push
sub
cmp
stc
adc
adc
fbstp
sbb
jmp
xor
cmc
ja
mov
je
shlb
test
out
js
push
push
out
dec
incl
add
or
stos
imul
mov
lcall
ds
adc
sbb
add
rcrl
stos
or
mov
call
inc
and
pop
xchg
sub
lea
mov
call
fucomip
repz
popa
jp
dec
dec
xchg
in
lock
ds
ss
cltd
ret
ljmp
lret
mov
cs
and
push
dec
jns
xchg
ss
push
es
imul
mov
mov
pop
or
mov
push
out
lret
lret
dec
filds
mov
cmc
mov
incl
mov
mov
xor
loope
cmp
popa
mov
jnp
sahf
xchg
and
out
mov
jg
dec
cs
and
mov
int
pushf
arpl
cmp
shlb
push
lcall
mov
or
int
jb
ljmp
inc
jo
mov
inc
fbstp
push
cmp
movsl
inc
adc
repz
inc
and
fs
sbb
sub
aam
inc
jp
loopne
pusha
mov
popa
xchg
hlt
pop
pushl
pop
mov
inc
sti
adc
mov
and
inc
ror
imul
inc
add
call
cmc
fidivs
ss
gs
jno
pop
mov
mov
ljmp
mov
sub
xor
pop
inc
or
adcl
xlat
call
hlt
sub
std
pusha
add
into
add
push
and
xchg
or
sbb
and
ss
push
mov
mov
rclb
jb
xor
andl
pop
ljmp
inc
cmp
pop
mov
sti
jle
or
cmp
dec
stc
jbe
int3
ljmp
lea
add
aad
add
add
pop
fdivl
xor
ljmp
ljmp
sbb
add
xor
mov
xor
cmp
aas
pusha
add
decl
push
jecxz
and
xchg
cmp
pushf
cli
jg
mov
mov
loope
nop
pop
dec
mov
adc
in
aaa
xor
sbb
aad
push
push
rcrl
pop
inc
sti
sub
mov
out
lcall
fscale
jl
fwait
adc
adc
out
sbb
out
mov
push
sbb
addr16
and
lcall
sub
mov
mov
movsl
pop
cwtl
cmpsl
sbbb
mov
sti
push
fildl
xor
push
loope
negl
push
mov
clc
test
sub
or
call
mov
mov
mov
lods
mov
call
and
out
lahf
in
enter
rclb
lret
incl
pop
adc
dec
lea
push
sub
ja
xchg
repnz
sub
gs
frstor
in
mov
adc
push
pushl
adc
fucomip
add
jo
mov
dec
inc
hlt
and
cmp
hlt
ljmp
cli
pop
pop
out
sbbb
shll
mov
mov
cli
daa
pop
gs
test
lods
dec
sub
dec
imul
sub
inc
cmpsb
sbb
movb
divb
add
push
sbb
lea
ja
add
ljmp
push
mov
lods
pop
inc
ds
push
in
mov
andb
mov
decl
shrb
dec
outsb
subb
stc
sbb
ja
bound
cmpsl
lock
jmp
dec
fcomi
mov
dec
adc
fstpl
out
inc
xchg
sub
aam
sti
rcrl
jo
mov
xor
and
add
es
shlb
mov
xor
dec
into
sbb
xchg
lret
cs
movsl
fidivrs
repnz
decl
mov
lea
sti
mov
sahf
aam
lods
cmp
insb
mov
sub
add
das
cli
and
add
gs
and
mov
cmp
movsb
fisubrl
push
dec
scas
fs
bound
leave
jmp
sbb
test
push
sbbl
clc
test
push
jmp
or
je
lock
and
push
xor
scas
fldcw
add
xchg
cmp
ds
es
cmc
sbb
loope
pushl
aas
ljmp
xorb
fiadds
movsb
jmp
imul
inc
ljmp
mov
or
lret
and
aaa
arpl
andl
call
icebp
movsl
inc
pusha
sub
leave
and
push
lock
push
and
mov
push
imul
iret
outsb
push
adc
scas
pop
test
jmp
popa
mov
ret
dec
or
push
mov
aaa
sbb
mov
stos
andl
jge
or
add
fldenv
jl
push
mov
in
mov
add
jecxz
stos
xchg
movsb
dec
fs
lea
ss
hlt
incl
rcrl
xor
add
inc
mov
test
pop
push
sahf
xchg
inc
cmp
es
jno
imulb
sub
pusha
arpl
or
jnp
insb
test
cmpsl
in
fmull
pop
push
pushf
pop
push
inc
sbb
push
xor
adc
inc
ret
stc
sub
pushf
jg
cmp
xorl
loop
enter
mov
icebp
mov
loop
cld
or
je
inc
xchg
shrl
cli
in
mov
and
xor
sbb
xor
or
jge
arpl
adc
xchg
sbb
fsubp
loope
cli
fldl
cwtl
imul
clc
not
or
jno
lret
aam
cld
aam
aas
mov
stos
loop
loopne
pop
or
or
movsb
and
int3
inc
addb
lds
subb
cwtl
test
pushl
mov
mov
and
xor
int
push
inc
leave
pop
sbb
mov
jg
sub
mov
adc
sub
data16
cmp
lcall
decl
mov
rorl
and
xor
sub
push
iret
and
gs
cmpsb
lcall
decl
movsl
ror
insl
ficoml
clc
sbb
adcl
jno
sar
incl
xchg
sbb
ja
sbb
aam
notl
loope
inc
mov
sahf
sbb
or
inc
mov
add
incl
or
filds
mov
sub
test
mov
jp
jns
decl
adc
aad
stc
xor
mov
scas
adc
or
cmp
mov
lock
pushl
loopne,pt
jle
dec
test
mov
inc
sahf
fidivl
sbb
outsb
or
cwtl
xor
imul
pop
test
shlb
inc
das
out
jg
insb
jmp
pop
leave
shr
add
ljmp
adc
adc
push
leave
xchg
mov
pop
out
sbb
or
mov
cwtl
push
mov
add
jge
mov
dec
jnp
scas
int
les
decl
fwait
outsb
push
inc
cltd
add
xor
jge
gs
and
incl
pop
push
mov
ss
sub
loopne
cmp
jg
incl
outsl
ljmp
std
sbb
push
daa
ret
js
cmp
stos
jp
cmpsb
adc
lcall
add
push
xor
cmp
ret
jmp
call
pop
push
fnstenv
add
enter
call
call
aad
mov
nop
ljmp
lcall
add
push
addps
ljmp
shrl
fwait
repnz
mov
xchg
das
adc
jg
mov
imul
inc
mov
data16
shlb
dec
dec
lcall
repnz
std
dec
sub
push
lret
js
cmp
mov
dec
sub
add
es
iret
call
shl
jp
fildll
cmc
es
mov
lahf
adc
cmp
mov
cmp
cmpb
icebp
xor
iret
std
movsl
dec
lock
out
mov
insl
sbb
frstor
mov
dec
in
push
xorl
cld
sub
sub
cmp
iret
out
scas
ljmp
push
lods
pop
in
in
mov
inc
cmpl
popa
insb
adc
sub
psubb
mov
stos
flds
mov
cmp
and
subb
mov
push
push
jle
test
je
cwtl
push
mov
inc
mov
jg
pushf
in
lret
jnp
stc
inc
out
and
popa
sub
cmp
mov
mov
pusha
or
ret
repnz
std
vpsubb
nop
sub
push
cld
in
lcall
fisubs
mov
ret
int
dec
mov
dec
fstpt
jp
lock
push
rcl
mov
xchg
add
or
jb
mov
add
ljmp
adc
push
bound
sbb
movsb
cmp
jg
div
inc
xor
rcrl
mov
xorl
gs
cmp
outsb
push
fcoms
ret
aaa
mov
mov
xlat
jnp
dec
add
adc
inc
jb
cs
int
mov
pop
shlb
xor
cwtl
push
int3
pop
push
scas
wrmsr
add
cwtl
das
insl
mov
mov
daa
push
cmp
jnp
jns
cmc
jp
xor
fmul
popf
pop
je
aas
fwait
cld
and
cltd
hlt
das
xchg
decl
fwait
cmp
push
xor
mov
xchg
xchg
fwait
sbb
pushf
xchg
pop
sbbb
pushf
fnstenv
mov
mov
mov
out
dec
movsb
pop
inc
jmp
xor
and
lock
add
lock
xor
cmp
xchg
mov
lcall
mov
xchg
inc
jp
push
mov
dec
mov
jg
out
xor
fxch
mov
jle
adc
jne
sbbb
sub
pop
in
pop
int3
cmpsb
mov
inc
mov
cmp
int3
scas
push
inc
pop
popa
jno
jmp
sbb
in
mov
in
dec
xor
clc
cld
pushl
mov
faddl
mov
test
dec
fwait
add
mov
neg
aaa
inc
in
gs
fldcw
sar
call
mov
adc
lods
or
repnz
cltd
cmp
xchg
sub
push
std
jns
push
hlt
das
mov
cmp
movsl
push
xchg
lcall
pop
ret
pop
std
test
cmp
mov
leave
dec
xchg
arpl
ljmp
aam
ret
cmp
push
addr16
adc
daa
sub
les
and
mov
inc
or
or
xchg
fwait
les
icebp
insb
stos
pop
inc
mov
and
shll
lcall
scas
lret
jbe
js,pt
out
loopne
or
aad
mov
incl
mov
fcmovnb
xor
adc
in
xor
lcall
out
imul
mov
leave
mov
addb
mov
out
mov
push
lcall
ljmp
mov
mov
in
lods
faddl
cmp
incl
cwtl
adc
int3
in
jbe
cmp
mov
push
xlat
push
test
mov
negl
aam
rcll
sbb
or
call
mov
mov
je
pop
scas
into
testl
out
mov
aaa
cmc
fsubl
lahf
out
jge
push
adc
movsl
xchg
inc
push
outsl
cmpsl
jmp
cmpl
out
stc
scas
fdivrl
lcall
cltd
push
imul
sbb
mov
cwtl
push
addr16
cmp
or
push
insl
aad
ficoml
sub
cmp
ljmp
and
push
scas
jo
jmp
mov
jmp
aam
arpl
push
out
xchg
bound
jg
test
jle,pt
and
mov
test
dec
sub
pusha
mov
stos
mov
adc
mov
xchg
mov
mov
and
sub
flds
mov
pop
data16
cmpsb
jg
xchg
mov
add
in
cs
shll
incl
or
fldenv
je
adc
in
lds
push
sub
xchg
adc
repz
test
test
orb
or
lcall
sbb
mov
call
add
and
fs
mov
fs
or
jb
ljmp
dec
or
jae
cmp
add
mov
lahf
inc
add
incl
sbb
outsl
aas
ds
mov
bound
pop
jmp
enter
dec
dec
cli
ret
xor
in
mov
pop
int
pop
xchg
ss
std
in
xchg
cmp
mov
js
jg
mov
out
sbb
mov
lea
pop
lahf
pop
incl
fcompl
iret
lock
xor
xor
lods
pushl
rcl
roll
test
out
lock
cli
lcall
ja
into
inc
data16
loop
sub
add
enter
incl
popf
jnp
push
sbb
scas
pop
jo
mov
decl
fsubrl
les
out
xchg
test
es
fcoms
decl
inc
addr16
aad
xor
les
jne
scas
jmp
inc
mov
pop
loopne
mov
dec
fwait
int3
movsl
pop
dec
push
fdivrp
std
mov
inc
pop
in
xor
cmp
mov
fs
aas
cmp
cmp
dec
push
hlt
jg
fwait
jecxz
test
lods
add
jmp
es
pop
cld
add
filds
xchg
push
xchg
dec
aam
jns
mov
lahf
inc
inc
into
das
orb
mov
inc
xor
inc
jnp
jl
or
push
mov
and
in
incl
psubusw
xchg
add
daa
sbb
push
out
in
negl
push
dec
cltd
aad
out
jo
idiv
mov
push
jecxz
sub
pushf
fildll
push
addr16
jnp
enter
mov
xchg
js
in
push
sbb
or
and
mov
pusha
arpl
out
xchg
fildl
or
push
jae
pushf
test
cmp
enter
push
dec
lock
lock
fdivr
das
cli
outsl
int3
jle
loope
shlb
adc
addr16
push
mov
outsl
loope
mov
movsb
mov
mov
lods
jne
sbb
adc
sub
decl
adc
sub
leave
jp
scas
lds
mov
decl
sbb
dec
adc
sarl
pop
sbb
jno
aad
scas
mov
call
rcrl
xchg
cmpsl
cmpsl
inc
adc
out
insb
shlb
sbb
fldcw
lods
sbb
clc
jmp
les
add
push
fstl
mov
mov
cli
jmp
mov
dec
mov
clc
lret
repz
das
mov
fcomip
lcall
add
es
in
mov
out
mov
lock
aas
insb
jp,pt
add
lcall
mov
lods
hlt
push
lcall
jmp
push
ret
lret
push
mov
fldl
pop
je
dec
cmpsb
jne
call
jge
add
sub
fs
arpl
adc
cmp
movsb
jmp
cli
cmp
jmp
test
ljmp
test
add
and
dec
lock
fisttps
mov
ret
test
cmp
mov
dec
sbb
cmp
push
sbb
lcall
xorl
cld
in
mov
mov
stc
push
or
sub
loopne
loopne
push
jae
pop
add
je
lcall
inc
les
mov
mov
jp
fwait
mov
sarb
fildl
dec
mov
cltd
loop
mov
sti
push
je
fwait
shll
in
push
push
jg
mov
mov
std
fsub
lock
cmpsb
loop
push
repnz
jae
jle
xchg
lock
lcall
pushl
or
cmp
adcl
cmp
decl
sbb
imulb
mov
pushf
data16
mov
add
lcall
jno
imul
or
lcall
push
jno,pt
out
pop
and
incl
cmp
mov
and
inc
mov
daa
sar
dec
nop
ss
cmp
loope
fistpl
lock
call
lcall
push
out
test
push
add
sub
setl
clc
fbld
lret
sar
out
push
pushf
aad
fs
jnp
mov
jb
inc
inc
ja
imul
aam
xchg
shl
incl
adc
xchg
pop
dec
pop
ret
mov
enter
jmp
subb
sti
sbb
lea
movsl
xchg
xchg
and
outsl
cmpsb
ja
outsl
jne
push
mov
mov
inc
xor
mov
sbb
adc
jl
ljmp
mov
xchg
push
loope
addl
jns
call
decl
dec
xchg
hlt
push
and
outsb
jne
fadds
aas
mov
into
flds
push
arpl
cld
xchg
call
or
ret
add
mov
dec
pop
and
hlt
dec
std
mov
pushl
das
and
mov
dec
jns
testb
popf
mov
jg
cwtl
cli
jbe
pushl
loopne
jmp
pop
addr16
test
aas
int
lret
test
xchg
push
lahf
cmp
sub
lret
adc
ljmp
jne
jecxz
popf
ss
cmp
mov
mov
cli
inc
push
cmp
xchg
push
mov
jp
lret
sub
incl
xchg
sbb
adcl
cli
je
pop
cli
out
and
bound
sbb
xor
ficoml
rcrl
adcl
push
inc
and
and
loop
test
pushl
pop
xchg
imull
sbb
mov
mov
fdivs
rcrl
jmp
and
repz
movsb
pop
jmp
sub
xchg
jno
inc
clc
xchg
inc
sub
xchg
punpckhdq
inc
fnstenv
lret
mov
nop
clc
decb
push
xchg
mov
lods
push
cmc
lock
sar
call
outsb
iret
loopne
dec
mov
jl
and
in
sbb
scas
int3
sti
push
add
mov
shl
pop
inc
iret
sbb
or
push
fwait
pop
int3
add
xor
stos
decl
fs
pop
pop
mov
xor
push
pop
orb
fs
jg
jnp
mov
xchg
sbb
es
xor
xorb
in
mov
cmp
lcall
lcall
xlat
cwtl
push
loope
sbb
out
sbb
sub
dec
aaa
test
call
or
test
jno
dec
mov
or
hlt
subb
adc
fyl2x
imul
inc
outsl
cmp
push
mov
fisubrs
adc
cmp
push
jg
mov
mov
mov
movsb
push
repnz
or
movsl
jg
cmc
outsl
mov
mov
mov
das
aaa
lahf
or
aaa
mov
cltd
jnp
sti
add
or
add
jg
das
jge
cld
or
sbb
cs
std
or
fnstenv
sub
lcall
fwait
sbb
aam
movsb
sti
cwtl
cmp
xchg
repnz
xor
and
test
rcrb
outsl
xor
mov
xor
push
ljmp
mov
dec
jmp
lods
and
sub
adc
push
arpl
cmpl
fstpt
mov
popf
mov
sarl
push
pop
aam
mov
pushl
add
aad
pop
mov
shrb
sub
push
sub
pop
int3
mov
lods
jmp
dec
or
xor
inc
push
scas
mov
pop
pushl
pushl
addr16
inc
mov
pop
fldpi
loopne
pop
cmp
sbb
test
call
xchg
xor
sahf
sub
jbe
fidivrs
dec
sbb
sarl
jge
mov
dec
aad
jbe
adc
inc
mov
call
cmp
push
std
popf
inc
mov
add
icebp
rcl
das
cmp
pop
stos
xchg
mov
jecxz
jecxz
iret
fidivrs
adc
ljmp
adc
enter
push
adc
adc
ss
mov
jg
adc
pop
mov
iret
inc
mov
jae
xor
adc
mov
dec
daa
loopne
push
cmp
sub
sub
mov
cmp
ljmp
cmp
pop
lock
xchg
mov
mov
push
leave
cli
call
mov
mull
stos
jno
cmpsl
push
push
sub
mov
lahf
sub
sbb
jne
mov
popa
cld
inc
scas
cwtl
stos
sub
fsubs
sarl
inc
gs
stos
sahf
cmp
jp
mov
push
fiaddl
mov
ljmp
nop
arpl
push
adc
or
or
cld
push
and
scas
mov
mov
out
cs
push
jmp
cmc
mov
call
aaa
inc
lea
mulb
cli
movsl
in
add
adc
movsb
fcmovnb
push
xor
test
adc
imul
imul
loop
push
push
iret
decl
out
into
jecxz
cwtl
push
jge
or
cmp
xor
cmp
adc
decl
test
ret
jl
add
stos
pop
negl
ljmp
dec
les
js
mov
loopne
loope
out
cmp
clc
jae
ret
adc
or
loope
jg
addr16
xchg
push
inc
subb
mov
pop
ret
xor
adc
sti
xor
cmp
jl
jecxz
into
xchg
imul
pusha
loopne
int3
jmp
aam
fcom
shll
mov
leave
bound
std
js
pop
push
mov
fsts
sbb
inc
pop
mov
sub
in
lcall
adc
out
jbe
fstps
inc
jo
mov
jnp
pop
movsl
int3
mov
jmp
cmp
leave
sbb
sub
das
dec
mov
inc
and
icebp
aas
pop
js
lods
cmp
pop
jmp
adc
mov
dec
inc
or
push
sub
jae
sahf
cwtl
into
decl
scas
pop
lods
add
push
mov
mov
pushl
push
scas
sti
inc
ja
icebp
sahf
pop
ja
bound
push
or
pop
push
gs
fs
cwtl
test
push
sbbl
fisttpl
xchg
jno
xor
fisttps
incl
lea
decb
xchg
adc
push
fidivs
ss
xchg
test
lcall
lcall
inc
sub
iret
or
bt
adc
mov
fwait
cmp
push
mov
ljmp
mov
sti
jp
inc
and
int3
jmp
in
jo
and
mov
frstor
and
test
fs
out
xor
sub
mov
sar
cmp
sbbb
xor
faddl
dec
ds
inc
enter
jns
sahf
push
mov
mov
sub
push
jno
repnz
xchg
xchg
outsl
in
jecxz
rolb
inc
and
icebp
jmp
inc
jp
add
test
mov
mov
jnp
xor
jmp
incl
add
mov
push
inc
ds
cmp
jne
decl
pop
out
adc
sub
inc
clc
lretw
iret
aaa
fisttps
xlat
stc
xor
xchg
clc
xchg
mov
mov
mov
sub
push
inc
push
lret
push
adc
jp
jecxz
dec
loopne
mov
push
aad
popf
aaa
adc
decl
jl,pn
aad
imul
pop
into
enter
mov
cld
js
ja
call
clc
jbe
inc
mov
mov
cltd
and
xor
mov
call
lcall
mov
outsb
je
jnp
cmp
lcall
xchg
enter
ja
cli
dec
adc
push
cmpsl
enter
lods
daa
insl
cld
stc
data16
jns
test
jg
mov
push
jmp
sti
clc
orb
clc
and
inc
mov
cmpsl
xor
or
and
adc
aad
sub
shll
jbe
xchg
push
ljmp
cmp
jbe
cmp
add
jb
push
jp
jno
or
pushf
xchg
arpl
popa
fdivrs
cmp
fwait
insl
subl
aad
ljmp
sub
sbb
fisttpl
jp
rcr
sarl
pushl
sub
and
mov
push
cmpsb
arpl
mov
or
add
call
add
clc
movsb
ljmp
pop
pop
scas
xchg
cwtl
mov
aaa
sbb
nop
mov
pushl
scas
js
jne
sbb
sarl
jno
stc
jb
xchg
inc
or
xchg
aam
gs
pushl
adc
gs
mov
cmp
out
sub
or
jne
cmpsb
dec
paddsb
dec
mov
in
cmp
pushf
push
xchg
out
repnz
jo
cld
icebp
in
mov
stos
jle
xchg
inc
inc
cmp
imul
test
pop
lcall
sbb
cmp
stos
jecxz
addr16
cmp
adc
mov
push
aaa
mov
cld
inc
pop
mov
int
cmc
inc
icebp
cmp
inc
dec
pushf
lret
jbe
jmp
ljmp
dec
xchg
jl
mov
sahf
ja
clc
bound
ss
lds
test
call
mov
sbbb
lcall
or
mov
inc
mov
mov
mov
inc
shll
mov
lcall
mov
in
mov
pop
mov
lock
sub
out
cmp
dec
cmc
lcall
clc
adc
js
add
fwait
push
adc
in
rorl
sub
repz
jnp
mov
add
imul
fnstcw
std
xchg
adc
mov
fstpl
pop
and
and
mov
push
mov
enter
dec
int3
popf
mov
ds
dec
shrl
ret
jo
mov
jl
sub
ljmp
mov
testl
pop
cmpb
int3
into
xchg
cmc
sarl
lods
pop
jecxz
xchg
jmp
or
mov
into
imul
push
nop
std
test
decl
testl
out
pop
addr16
push
pop
mov
adc
call
push
sub
aas
add
in
inc
daa
int
repnz
dec
xchg
mov
call
pop
in
pop
pop
pop
outsb
ficomps
rcll
sub
xchg
xchg
lret
ret
pusha
shrl
jbe
pushl
mov
xchg
add
jecxz
cltd
lods
add
stos
dec
adc
mov
sbb
lods
aad
mov
mov
add
or
xor
sub
push
inc
idiv
out
clc
xor
hlt
jmp
fsubs
mov
std
lret
mov
or
sahf
hlt
pop
adc
ljmp
out
and
mov
jle
push
pushf
cmp
in
mov
add
cmp
mov
jmp
or
push
iret
shll
xor
lods
add
mov
leave
scas
and
fmul
mov
dec
xchg
mov
jmp
xchg
sub
sub
loopne
stos
das
and
jg
xlat
inc
pop
rcll
mov
and
sarl
sar
xchg
or
sahf
ret
rcr
adc
fdivs
sbb
jmp
dec
sarb
cmp
inc
mov
adc
out
cmp
daa
mov
negb
lcall
popf
stos
int3
pop
cmpb
jp
inc
andb
mov
jg
sahf
sbb
gs
sub
lret
adc
rorb
mov
lcall
cmp
outsb
cld
sub
mov
lahf
pop
pusha
fisttps
mov
mov
jne
out
flds
lods
pop
mov
scas
out
mov
adc
mov
movsb
pop
jg
pushl
repz
mov
cmp
leave
add
sbb
loop
scas
or
mov
ljmp
or
fldlg2
sbb
inc
enter
lods
lret
mov
sar
mov
xchg
scas
in
sbb
push
ljmp
call
mov
ljmp
mov
lcall
dec
and
dec
mov
shll
and
pushl
iret
out
jno
sub
xor
sbb
add
xchg
movsb
mov
daa
into
mov
jb
fwait
call
ret
stc
cmp
clc
inc
fstps
test
loopne
scas
cli
out
and
shlb
sarl
or
stos
jo
ja
mov
lcall
xchg
daa
pop
cmpsb
stos
mov
inc
pop
fmull
add
jae
push
or
and
pop
popa
cli
imul
dec
push
aam
popf
fwait
pop
or
mov
or
scas
clc
dec
loope
jg
in
xchg
cltd
shll
ja
mov
xchg
push
lret
xlat
mov
pop
lret
icebp
decl
dec
daa
loopne
shrb
mov
mov
jge
mov
inc
pop
leave
jbe
jnp
imul
stos
or
gs
dec
icebp
jne
xchg
ljmp
loope
jge
andl
lock
mov
xchg
das
imul
call
mov
test
jno
dec
insb
in
enter
dec
clc
scas
mov
incl
aaa
cmpsb
aam
cltd
in
mov
sbb
mov
or
sub
lods
decl
pop
pop
push
and
xor
test
sub
mov
xor
pop
test
incl
sub
loop
pop
sbb
pop
imul
in
mov
cmp
out
push
loope
cmp
sub
test
stos
push
ljmp
add
push
sarb
sub
jbe
sub
std
call
fsubr
xchg
add
movsl
out
clc
xchg
imul
into
movsl
xchg
cld
test
inc
psubusw
in
ss
ret
sbb
ret
push
std
clc
in
mov
xlat
lret
or
lret
mov
cmp
in
cmp
pop
inc
mov
aad
mov
mov
pop
push
sbb
sub
daa
add
cmc
ljmp
subb
int3
mov
jp
shr
push
stc
add
jp
std
int3
xor
repnz
dec
inc
xor
xlat
outsl
mov
test
std
scas
out
xor
adc
jbe
or
push
mov
cltd
fdivl
decl
lcall
mov
xchg
mov
mov
jmp
pop
cmp
les
and
decl
pop
incl
inc
ret
test
ljmp
pushf
fwait
dec
adc
test
dec
jb
imul
aas
push
jmp
dec
clc
jb
into
test
jle
cmp
adc
fadd
push
or
push
jg
pop
stos
pop
jg
mov
push
push
xor
stos
ret
scas
push
sbb
push
cmp
pop
cmpsb
cmp
adc
adc
adc
pop
sub
pop
push
out
or
push
add
push
movsb
or
scas
xor
setno
mov
xlat
push
cmp
std
inc
jb
adc
out
sbb
loopne
gs
imul
call
xchg
fwait
js
or
dec
lock
xlat
mov
sbb
push
sbb
mov
nop
ret
in
mov
jg
jmp
mov
in
aaa
xchg
push
xor
pop
sti
mov
mov
dec
sbb
call
jl
rcl
mov
mov
or
int
adc
std
stos
cltd
adc
lahf
sbb
jl
lds
je
mov
std
ljmp
lea
scas
ret
mov
nop
fnstsw
dec
lods
lock
jns
and
cmpl
xor
loopne
aaa
or
lcall
fld
shll
sbb
mov
ss
add
fidivrl
mov
int3
xchg
pop
lock
decl
insb
xchg
ret
ret
add
aaa
push
jns
jmp
ljmp
inc
push
inc
das
dec
testb
scas
mov
arpl
jg
or
fisttpl
aad
scas
nop
and
add
inc
lret
mov
cmpsl
fcompl
xchg
call
fwait
fdivr
aaa
nop
out
dec
xor
jge,pn
xchg
mov
leave
sar
call
push
mov
and
outsb
fs
das
mov
insl
xor
movsl
pop
xor
sbb
or
dec
sbb
pop
cltd
adc
notl
adc
adc
or
xlat
div
push
cltd
insl
sub
mov
add
lahf
pop
ljmp
pushf
push
lcall
mov
test
in
incl
lods
cmp
xor
pushf
and
stos
mov
push
and
push
lcall
cmp
es
add
in
push
jp
add
jl
jge
loopne
rorl
and
shll
push
inc
mov
pop
pop
mov
cmp
int3
adc
xchg
push
cmc
rcl
aaa
repnz
ljmp
cli
insl
imul
dec
mov
ss
movsl
pop
and
loopne
data16
popf
adcb
ficoms
nop
ja
shlb
loopne
push
int3
pop
leave
int3
popa
fadd
xchg
sbb
mov
push
pop
lock
mov
hlt
repnz
xor
repz
filds
or
shlb
loope
hlt
out
inc
xor
push
stos
push
inc
jl
mov
lcall
mov
pushf
fisubl
cmp
xor
pop
fsubs
sbb
out
xchg
fcomip
mov
shll
dec
fsub
ss
jmp
xchg
imul
sti
jmp
dec
add
adc
icebp
loop
jge
je
in
pop
test
pop
mov
bnd
ss
mov
stc
cli
aas
xchg
jmp
iret
or
jne
bound
mov
aaa
aad
fs
adc
add
incl
jne
adc
in
sub
jg
scas
sbb
pop
add
mov
insl
aam
mov
loopne
loope,pn
imul
pop
xor
xchg
ss
lret
cmp
mov
pop
nop
xor
repz
jg
inc
dec
or
inc
jge
jo
test
fwait
and
cmp
add
sub
dec
mov
xchg
fldl
mov
push
icebp
lcall
cld
adcb
stos
mov
divb
inc
inc
mov
popf
ss
mov
popa
sahf
and
mov
lcall
sti
nop
inc
outsb
ret
jle
imul
popa
fstp
fnsave
lahf
repz
out
clc
dec
data16
test
and
mov
fiadds
jg
or
es
push
cmpsb
out
cwtl
incb
in
jnp
push
rcrl
lea
cs
push
orb
cmp
mov
cwtl
imul
push
inc
cld
adc
es
mov
push
sub
incl
cltd
push
icebp
mov
sahf
push
iret
dec
icebp
push
leave
ja
pop
cltd
inc
scas
clc
call
push
leave
and
out
xchg
out
test
cli
add
jmp
jg
push
mov
mov
stc
jecxz
popa
add
mov
call
xor
fdivrp
mov
decl
int3
pop
mov
es
scas
imul
rorl
testl
outsl
out
jecxz
js
rolb
call
jns
xchg
stos
fnstsw
fisubl
mov
pop
call
icebp
mov
addr16
sbb
decl
pop
movsl
out
scas
sarb
outsl
xchg
std
lcall
insb
pop
stos
shlb
lods
and
pop
lods
lahf
call
lds
cwtl
cld
xchg
repnz
jbe
or
inc
mov
inc
inc
xor
cmp
lss
sub
pop
mov
or
sub
jns
xchg
or
sbb
call
dec
imul
jae
insb
cmp
out
pop
mov
mov
cmp
ljmp
vpsubusb
cmpsb
aaa
pop
push
imul
into
push
sub
mov
xor
and
hlt
icebp
dec
cli
lret
scas
mov
clc
mov
and
dec
pop
lret
clc
decl
call
test
pop
mov
decl
sbb
aad
insl
jbe
push
cmp
cmp
lods
mov
mov
mov
lcall
int3
push
fdivl
ret
dec
and
jmp
jge
push
mov
outsb
rorl
js
xlat
mov
or
out
and
add
ret
out
mov
sahf
ror
les
iret
cs
jg
mov
test
xchg
jl
dec
jae
xchg
jmp
xchg
jae
add
fwait
lret
jmp
clc
fcmovnu
jmp
loopne
pop
pop
dec
aad
lcall
jmp
push
rcrl
xor
mov
xchg
sub
and
std
ljmp
mov
outsb
xchg
fstp
xchg
aas
cli
mov
int3
dec
pop
pop
push
and
insl
mov
out
jae
push
inc
adc
out
pop
add
dec
lods
cli
call
js
sub
jge
in
mov
ljmp
mov
xchg
shl
data16
mov
in
movsl
pop
xchg
js
mov
outsl
cmp
cmp
lds
xor
mov
mov
dec
pop
loopne
mov
jmp
aas
sub
mov
out
and
gs
cmp
xchg
push
cmpsl
stos
insl
aas
repz
or
fcomip
sbb
pop
lock
lcall
outsb
shll
add
insl
mov
lcall
addr16
lahf
mov
xchg
dec
das
lds
xchg
inc
lahf
lods
int
adc
sub
sbb
ljmp
fisttpll
push
add
loopne
jne
mov
std
test
inc
shlb
pop
mov
call
mov
ret
mov
das
push
mov
or
xor
add
xor
fs
out
adc
cmpsl
or
clc
outsb
sbb
test
pop
mov
pushl
dec
push
jae
stos
js
sbb
call
mov
sarl
arpl
out
adc
outsb
out
stc
xchg
fbstp
jl
shrb
jp
repnz
dec
fildll
cld
stos
aas
mov
mov
push
xor
fwait
sub
dec
test
movsl
mov
lcall
in
inc
or
push
and
dec
jl
inc
scas
clc
xchg
xchg
iret
fnstsw
inc
std
push
mov
ljmp
add
jns
shlb
lahf
icebp
pop
movsb
or
xchg
leave
push
inc
test
mov
lods
lea
sbb
mov
jp
cld
mov
in
fadd
cmp
adc
dec
cmp
or
test
or
and
jmp
pop
mov
popa
dec
mov
lahf
pop
dec
adc
or
mov
sub
add
inc
adc
pop
cmc
incl
popa
adc
mov
jg
jne
notl
or
stc
into
testb
addr16
into
aad
sub
and
mov
mov
mov
mov
pop
push
movsl
es
fmuls
js
dec
push
mov
lcall
repnz
dec
lods
pop
pop
pop
stc
shlb
push
adc
call
mov
sub
xor
imul
stos
jge
pop
xorb
push
cmpsl
push
mov
jmp
add
and
lret
jae
dec
jmp
xchg
int
pop
xchg
adc
jle
addr16
jmp
jb
ja
xchg
fs
xor
shl
push
fwait
or
mov
out
lcall
xor
test
mov
mov
xchg
inc
rclb
ljmp
adc
aam
mov
ds
aas
in
orb
mov
cmpsl
mov
repnz
gs
loope
std
mov
aaa
and
aad
incl
fldl
into
xlat
mov
and
jp
jne
into
sbb
es
sti
stos
test
stc
mov
cmc
xorl
test
faddp
cmc
idiv
pop
push
sti
sbb
adc
clc
xchg
cmp
jge
jnp
pop
mov
out
jp
adcb
out
jp
mov
jg
sbb
imul
mov
or
jae
sar
dec
test
lahf
shr
and
aam
push
xchg
jg
jnp
jb
out
jnp
jae
mov
lock
cmpsb
adc
jle
filds
cmp
lcall
push
cmc
loope
jo
jle
jecxz
std
shlb
xor
adcb
imulb
sar
or
lock
adc
xor
push
ljmp
xchg
repnz
push
ja
out
iret
jo
mov
cwtl
add
pop
decl
rclb
or
call
les
mov
pop
push
negb
mov
lcall
jp
incl
add
and
mov
mov
mov
push
pop
aaa
push
xchg
cmp
jo
ret
push
cltd
inc
sti
push
xchg
movsl
pop
dec
mov
mov
pop
data16
mov
out
cmpsb
int
dec
cld
xchg
cltd
cltd
mov
call
sub
xchg
push
adc
inc
rdtsc
push
pop
xor
stc
daa
leave
in
insl
frstor
jne
push
pop
sub
add
js
pushl
out
gs
sti
mov
dec
daa
mov
mov
mov
iret
adc
call
outsl
mov
jmp
push
pop
adc
ss
loopne
call
setne
xor
repnz
cmp
mov
cld
lods
cltd
ficoms
xlat
jge
pop
xchg
or
out
dec
pop
iret
sbb
sbb
decl
mov
sbbb
roll
mov
out
fisttps
mov
das
stos
pop
add
mov
fs
mov
clc
les
cwtl
pop
mov
sbb
cld
jg
cmpsb
pop
cli
xchg
jno
cmp
psrlw
inc
loope
inc
pop
mov
lret
push
stos
inc
lcall
add
fsubp
jnp
push
call
cltd
xchg
adc
push
scas
repz
je
mov
mov
push
push
xor
xchg
adc
fnstsw
cmpsb
sub
pop
inc
dec
je
cmp
cmpsl
xor
mov
add
in
movsl
ljmp
das
xor
dec
mov
push
scas
and
or
lahf
jmp
xchg
jmp
out
add
and
cmp
xchg
in
inc
adcb
lahf
sar
mov
ljmp
fdivl
ficoml
int
and
dec
lods
xor
pushf
decl
xor
or
rcr
push
shll
mov
cmp
sbb
jae
imul
gs
add
cmp
in
enter
adc
mov
fmull
pop
fdivs
xchg
xlat
incl
adc
mov
les
es
data16
inc
cs
xor
jg
and
movsb
adc
incl
cld
inc
arpl
add
stos
enter
fcoml
stos
xor
xchg
sub
pushl
enter
ljmp
xchg
mov
incl
push
mov
xchg
fmuls
adc
jae
mov
pop
cmc
call
xor
mov
cmp
ljmp
xor
incl
mov
and
sub
dec
outsb
push
pop
out
jl
lea
sbb
dec
loopne
in
adc
cmp
adc
sbb
sub
repz
incl
xchg
fisttps
jb
rclb
pop
and
sub
sub
mov
sar
mov
int
movsl
adc
adcl
push
xchg
test
fnstenv
rcll
ret
ljmp
repz
in
mov
push
push
xor
imul
sbb
dec
ljmp
jl
int3
loop
lea
iret
repz
mov
xchg
adc
insl
scas
fstpt
js
ljmp
sar
pop
jae
cmp
jbe
popf
lock
scas
shl
and
fcompl
xor
push
dec
les
sbb
and
xchg
push
push
lcall
rolb
cmp
and
pop
cmpsb
out
or
sbb
int3
gs
lcall
mov
jge
pop
dec
inc
fcomps
push
adc
xchg
lcall
cmp
fnsave
fldz
divl
jmp
sub
sti
aam
not
in
test
sub
sbb
pop
ljmp
ret
cmp
or
hlt
cwtl
ds
jecxz
ljmp
xchg
mov
push
decl
sbb
add
cmp
lret
adc
push
lods
cmpsl
push
push
add
fs
out
sub
sarb
sub
push
cmp
sub
cmpsb
stos
inc
arpl
arpl
push
mov
pmovmskb
incl
mov
ficoms
mov
and
cmp
jmp
out
xchg
hlt
jg
mov
fwait
inc
hlt
popa
scas
inc
adc
push
cmp
cmpsb
sbb
jae
mov
inc
pop
push
xchg
fisubl
xchg
inc
mov
popa
push
pop
into
mov
add
fucomi
std
addl
sbb
and
sbb
adc
cmp
mov
cmpsb
mov
inc
xchg
adc
mov
pop
adc
decl
mov
mov
lods
pop
in
fists
xchg
fcomi
cmp
test
inc
je
lcall
xchg
in
leave
mov
dec
jmp
hlt
xchg
cmp
out
jne
inc
ss
pushl
pop
xlat
push
cmpsb
pop
xchg
int
or
outsl
sub
clc
outsl
lock
sahf
das
call
push
in
jmp
xchg
cmp
outsl
mov
add
jbe
fs
lret
mov
mov
addr16
and
push
push
jmp
fidivrl
xor
mov
pop
sbb
mov
sbb
enter
inc
pop
and
dec
jl
pop
inc
decl
push
adcb
xor
mov
incl
push
cltd
inc
shll
mov
pop
mov
inc
js
int3
and
mov
lcall
pusha
popf
pop
inc
mov
inc
pop
cld
jnp
pop
fnstsw
pop
ss
inc
aam
jle
xchg
xlat
push
mov
xchg
outsb
mov
loopne
pop
jb
outsl
pop
scas
mov
imul
icebp
imul
or
lock
repnz
imul
dec
rorb
fdivr
incl
xchg
jl
mov
int
jl
popf
arpl
jnp
mov
vmwrite
insb
lcall
mov
stos
xor
xchg
add
mov
sub
clc
pop
dec
std
mov
jg
push
xor
lcall
inc
rclb
push
or
push
insl
mov
mov
sbb
cmp
negl
xchg
add
sub
movsb
pop
mov
stc
mov
and
jmp
xor
cmp
mov
insl
and
popa
push
dec
dec
ret
jl
loope
call
nop
sahf
cmp
xchg
icebp
adc
int
xchg
push
adc
aad
adc
xchg
inc
sarb
adc
mov
push
std
out
jle
ficompl
xchg
inc
jne
out
loopne
pop
call
cmp
idiv
lcall
test
dec
and
pop
cmp
xchg
lds
dec
movsl
js
lcall
mov
mov
push
daa
aas
std
enter
jmp
movsb
push
and
mov
sub
ljmp
loopne
cmp
pop
lods
mov
test
iret
ret
mov
arpl
sub
aaa
push
aas
cld
push
mov
pop
xchg
aaa
push
and
data16
pop
inc
push
adc
sbb
sub
jmp
gs
mov
xor
pop
out
int3
push
cltd
mov
mov
idivb
mov
xor
inc
push
or
cld
pushl
xor
xor
test
sub
iret
jne
push
jmp
lcall
fistl
mov
pushf
dec
jg
lret
push
jl
cmp
repnz
pop
or
incl
call
sbb
imul
ret
sub
call
cmp
lods
mov
push
mov
inc
mov
add
leave
insl
mov
jp
int3
imul
ljmp
sahf
out
les
push
mov
mov
in
popa
pop
hlt
cmp
cli
mov
in
mov
dec
jl
xchg
jo
inc
add
pop
push
pmaddwd
xor
mov
fisubs
mov
lods
js
ljmp
scas
sub
lods
dec
dec
pushf
sub
add
add
imul
scas
sub
mov
ljmp
call
or
insb
or
pushf
cmp
inc
repz
mov
xchg
jg
frstor
pop
xchg
pop
int
dec
inc
sbb
into
test
mov
push
cli
mov
xor
pushl
jmp
pop
sub
inc
dec
sub
mov
inc
sbb
push
fwait
and
push
out
pop
mov
cltd
pop
mov
or
into
push
hlt
xchg
ja
bound
loope
jmp
pop
or
lret
xchg
and
shl
mov
jae
mov
xor
aas
ret
xchg
xchg
and
call
pop
lret
loop
jb
pop
inc
mov
dec
ljmp
test
pop
jg
es
mov
imul
imul
sub
xor
push
xchg
icebp
js
cld
adc
jg
xchg
mov
mov
and
in
test
pushl
ret
pushf
sarb
arpl
movsb
pop
jbe
mov
xchg
mov
imul
call
lea
rorb
mov
movsl
out
movsb
xor
into
cmc
sbb
sahf
lcall
add
dec
je
sub
fsubrs
sub
lcall
iret
cld
pusha
icebp
sub
ljmp
mov
push
sbb
inc
call
ja
pop
dec
std
pusha
inc
xor
pop
fidivs
or
inc
cwtl
mov
inc
jo
je
lcall
popa
leave
cli
xchg
ljmp
push
adc
stc
pop
pop
movsl
cmpsl
psubd
stos
lds
jmp
push
decl
punpckhwd
pop
jle
push
sub
jge
mov
divl
lods
mov
or
add
sbb
incl
fdiv
or
gs
pop
add
jb
jo
repz
mov
fisttps
cmp
dec
loop
sbb
cld
jg
and
inc
loope
lcall
jge
lcall
imul
and
and
test
test
or
nop
push
jg
xchg
call
insl
call
push
testl
cmpsl
insl
pop
insl
sbbb
mov
test
and
aam
nop
cld
adc
dec
adc
lcall
or
mov
jbe
fmuls
mov
xor
mov
push
iret
pop
out
sti
jge
fildl
mov
mov
and
mov
or
jle
push
cmp
mov
mov
mov
cltd
leave
inc
mov
sub
orb
mov
push
aad
xchg
in
cmp
lcall
inc
fnsave
decb
test
sbb
popa
fldt
mov
sbbl
mov
jmp
mov
lods
mov
je
je
mov
ljmp
mov
stos
mov
and
out
rorb
cmp
inc
or
pop
insl
ja
das
inc
inc
popf
movsl
push
shl
mov
test
xchg
stos
outsl
std
adc
in
or
adc
jmp
adc
ret
push
jl
mov
je
into
xchg
outsl
clc
fisttps
or
lea
xchg
xchg
sub
shlb
lcall
pop
cli
cltd
bound
pxor
out
std
out
sbb
movntq
inc
mov
repz
jmp
mov
scas
jo
mov
and
scas
mov
add
lock
cmc
pusha
mov
mov
jecxz
sti
mov
dec
add
lock
iret
inc
nop
imul
xchg
sub
ljmp
mov
das
add
jge
js
movsb
in
stc
xchg
aad
or
shll
pop
dec
clc
subl
mov
mov
incl
aaa
xchg
lods
es
xchg
rcrb
sbb
clc
decl
and
test
clc
mov
rcrb
ljmp
xchg
and
xor
ret
jne
out
mov
aam
mov
mov
cli
aaa
push
jge
sub
enter
sbb
add
mov
or
lock
aaa
bound
sbb
push
xchg
mov
shl
pop
mov
xchg
jg
scas
push
xor
ficompl
jmp
add
pop
adc
inc
mov
or
ljmp
xchg
xchg
fsubs
les
xchg
mov
imul
dec
jns
fimuls
rorl
dec
inc
movsb
out
insb
push
push
or
les
int
fsubl
or
pop
es
inc
xchg
fwait
mov
inc
ret
pop
sti
xchg
lahf
insl
sub
xor
dec
sbb
add
jg
ret
fcmovne
or
inc
out
fimuls
sbb
add
cmp
push
xor
sub
or
incl
repz
test
pop
sar
pushl
sbb
add
stos
sub
cmp
xor
shlb
lcall
stos
imul
sbb
inc
sbb
mov
in
cld
pop
cli
pop
mov
ja
mov
push
outsb
dec
dec
and
outsb
in
push
push
ret
cmp
call
jecxz
stc
or
sub
xor
shl
adc
or
pop
inc
lret
ljmp
xchg
stos
mov
jecxz
scas
xchg
stc
or
mov
jmp
movsl
gs
sahf
xchg
pusha
lds
dec
loop
test
loope
xor
and
add
jg
pop
mov
push
in
xchg
push
test
das
loop
sbb
add
fcmovb
sar
aad
ret
add
adc
loope
or
jge
mov
fucomp
mull
cmp
jg
in
mov
stc
leave
pop
decb
mov
call
xchg
roll
pop
pop
pop
js
cwtl
clc
hlt
clc
mov
rolb
xor
dec
incl
sub
adc
nop
int
sbb
out
and
jmp
adc
cltd
mov
cld
jnp
inc
xor
clc
push
fwait
insb
adc
fmuls
aam
es
cmc
pop
mov
jbe
jne
mov
mov
adc
fdivr
pop
cmp
cltd
pop
scas
xchg
xchg
dec
and
push
pushaw
add
inc
clc
lret
pusha
sbb
pop
adc
xchg
mov
or
movsb
sbb
out
ljmp
xlat
ja
pop
mov
jbe
shlb
mov
pop
adc
xor
pop
sbb
call
dec
push
in
gs
adcl
fadds
pop
decb
mov
pushl
fsubs
pop
xor
cmpsb
xchg
call
jg
jmp
jbe
cmp
imul
in
xor
ljmp
lock
mov
imull
pop
push
call
stos
push
jne
push
cli
arpl
sub
push
repnz
call
xor
mov
mov
testl
sar
pushl
pop
jns
in
ret
pop
fwait
cmpsb
aam
outsb
aam
sub
lds
scas
cli
std
ljmp
nop
sbb
xor
loope
mov
gs
sub
dec
ljmp
insb
clc
in
lds
xchg
add
push
cwtl
std
rorb
mov
rcrl
fidivs
dec
sub
cmpsb
idivl
ljmp
aam
and
dec
subb
mov
pop
fisttpll
sub
sbb
jg
jmp
jecxz
cli
jl
add
add
int
jno
loope
dec
out
ljmp
cmc
add
fmuls
mov
dec
shlb
jp
fbld
inc
pop
ja
outsl
pop
arpl
or
or
and
pusha
popf
out
das
or
fcoml
in
pop
insl
and
mov
xchg
jae
lds
adc
je
lock
gs
mov
jbe
cwtl
push
add
loopne
sub
inc
aaa
inc
sbb
jnp
lods
call
and
and
push
adc
fwait
inc
adc
icebp
cmp
decl
outsl
testl
iret
push
inc
add
adc
dec
inc
nop
add
push
aas
or
cmpsb
xor
mov
mov
repnz
inc
push
nop
pop
test
insl
mov
clc
gs
xor
jo
mov
rcll
cli
and
decl
mov
cmp
jne
sbb
clc
mov
ja
in
jne
out
add
fcoml
decl
lock
mov
stc
out
or
test
pushf
push
inc
stos
add
ljmp
fimull
or
loop
sub
shlb
scas
sub
call
xchg
or
mov
add
mov
inc
int3
inc
lret
cltd
out
jae
jmp
mov
cvttps2pi
hlt
ja
sbb
subb
push
in
xor
clc
outsl
sub
jmp
push
or
inc
aaa
stos
insb
push
sub
imul
push
shlb
rorb
push
dec
loopne
rep
dec
pop
inc
movsl
push
leave
js
jbe
jle
sub
lret
arpl
out
test
fwait
jle
fnstsw
add
lcall
pop
mov
add
imul
repnz
rolb
xor
mov
pop
pop
aas
mov
jnp
fwait
mov
sti
enter
stos
sahf
cmc
es
aaa
jle
cwtl
jne
push
mov
mov
add
shl
or
fs
es
imul
incl
or
nop
and
cmp
pop
daa
mov
sbb
xorb
btc
inc
jmp
cltd
or
push
mov
or
enter
cmp
es
add
imul
mov
cmp
jg
xlat
push
inc
lcall
cmp
call
test
in
scas
es
out
hlt
sub
outsl
movsb
shr
rcll
pop
mov
mov
arpl
cmpsb
test
in
out
test
pop
and
fcompp
mov
call
mov
icebp
int3
sbb
xchg
scas
lods
jne
fwait
jecxz
mov
andb
repnz
mov
or
call
in
adc
jmp
fisubs
lcall
xor
jecxz
and
scas
mov
insb
adc
das
out
cmp
pop
xchg
push
insl
jb
aas
dec
addr16
lcall
or
sbb
clc
cli
mov
xchg
mov
data16
xchg
push
push
out
pushl
mov
addr16
aas
rorl
fsubl
loopne
adc
push
and
ljmp
icebp
inc
hlt
jmp
adc
jmp
xlat
mov
decl
dec
dec
les
shl
mov
push
in
dec
xchg
lcall
and
adc
jmp
insb
arpl
jbe
jae
mov
adc
stos
inc
cmpsl
push
out
icebp
mov
or
inc
insl
pop
mov
ljmp
hlt
or
push
jb
cmp
pop
bound
mov
and
mov
xor
xchg
scas
in
adc
xchg
dec
data16
in
pop
mov
cmp
pop
jbe
lods
and
shll
cmp
cmc
stc
sub
or
lcall
mov
and
shrl
jbe
mov
sbb
imul
push
xor
repnz
lcall
imul
jns
fnstsw
or
rcrl
pop
adc
xchg
repz
mov
jmp
pop
jp
in
cmpsb
lret
std
xchg
sbb
aaa
insb
pusha
inc
push
add
ljmp
in
test
xchg
jbe
or
loopne
pop
inc
imul
cld
pop
sbb
or
dec
mull
sbb
add
inc
xor
pop
inc
sub
inc
sbbb
dec
decl
clc
mov
xchg
xchg
sub
sub
sub
je
mov
mov
pop
add
pushl
fisubrs
cmp
mov
lock
cli
decl
popf
out
in
fidivs
xor
mov
jg
daa
sbb
xchg
mov
test
dec
test
insl
push
stos
mov
adc
mov
gs
and
pop
add
push
jl
inc
xor
rcll
lea
adc
out
push
test
jge
hlt
sub
out
inc
jns
push
adc
push
clc
out
and
outsb
jno
imul
adc
push
je
scas
xor
pop
cltd
pop
sbb
sar
decl
and
test
ss
and
mov
jb
outsl
clc
jg
sub
leave
adc
outsl
in
lahf
mov
and
ljmp
lcall
add
cmpsb
cltd
xor
cs
and
push
sub
imul
fcomps
mov
cltd
push
rcrl
loope
xor
adc
ds
pushl
stos
in
mov
or
jge
push
pushf
pop
mov
int3
mov
pop
testb
mov
pop
fs
cmp
shlb
sub
psubsw
push
cmp
decl
ljmp
pop
ss
mov
dec
sub
or
idiv
mov
or
inc
jg
aas
fs
scas
mov
xor
lcall
mov
mov
bound
cli
out
sarl
cmp
cmp
jg
outsb
xchg
mov
adc
data16
adc
jmp
mov
mov
cwtl
cmpsl
inc
je
std
into
xchg
fsubr
jnp
clc
in
gs
and
rcl
sub
stos
pushl
xchg
pop
xorb
hlt
push
setno
sub
adc
or
fcomp
add
sbb
jmp
inc
jmp
loopne
popa
sahf
lahf
pop
loope
xchg
mov
in
pop
cmp
decl
mov
ficomps
fsts
cs
jo
mov
nop
std
mov
ljmp
cmp
sbb
lea
push
mov
xchg
mov
inc
inc
ror
outsb
adc
jle
jnp
scas
mov
loop
push
mov
add
push
stos
aam
push
hlt
adc
jo
mov
decl
sub
adc
enter
stc
jbe
gs
outsl
leave
aas
add
insl
jnp,pt
inc
sar
call
cmp
ret
ds
ds
stc
xor
adc
sub
das
or
out
call
cmp
aas
jae
outsb
aad
mov
sub
clc
jns
cs
je
insb
je
mov
ficoms
xchg
push
lret
aaa
mov
mov
add
scas
xchg
xchg
dec
in
push
lea
sbb
dec
inc
adc
js
lcall
out
sub
imul
rcrl
cmpb
add
mov
imulb
sub
loop
clc
popa
mov
int3
mov
stos
push
mov
adc
xor
in
insl
pop
and
insl
dec
mov
jg
lcall
fwait
icebp
fdivr
dec
mov
jp
mov
test
jg
inc
push
test
sti
outsl
sbb
sbb
pop
enter
add
sar
decl
mov
out
mov
add
arpl
imul
repnz
out
and
xor
movsb
aad
pop
mov
mov
jmp
mov
pop
sub
push
leave
fsts
jnp
rcrl
mov
call
adc
scas
ljmp
and
pop
mov
fisubl
jae,pt
and
xor
xor
xor
test
xlat
jns
sbb
sbb
pushl
pop
incb
push
cmp
inc
inc
jg
cmp
add
or
mov
jg
mov
pop
fwait
pusha
dec
sahf
ret
insl
pop
popa
mov
cmp
pop
lods
xchg
clc
push
int3
cltd
lds
lea
mov
ljmp
clc
mov
jo
xchg
shrb
xor
add
mov
cmp
das
icebp
jg
xchg
lahf
inc
sbb
cld
aad
jo
sti
mov
mov
out
mov
fdivrl
push
push
fcomip
add
into
jg
sub
dec
mov
xor
decb
add
dec
call
xchg
cmp
enter
xchg
adc
cmp
shl
call
jne
notb
adcl
jmp
dec
add
add
mov
mov
sub
sub
call
inc
aam
inc
xor
mov
xor
jne
sbb
mov
inc
jmp
xchg
data16
bound
xchg
mov
repnz
inc
hlt
add
fidivs
push
or
pushf
adc
xchg
push
es
mov
cmpsb
addb
adc
and
stos
ljmp
scas
mov
xchg
or
into
fucomip
push
mov
cmpsb
lock
dec
mov
sbb
xor
cmp
push
das
cli
jg
jg
rep
cmp
cmc
mov
add
outsb
cmc
es
jmp
sbb
sub
in
test
mov
decl
mov
mov
scas
mov
lret
mov
mov
div
out
call
lahf
in
out
lods
push
dec
out
mov
push
ds
rcll
bound
into
fwait
cmc
sub
ljmp
testl
jae
fsubrl
test
mov
mov
cmp
lcall
mov
enter
pop
inc
mov
fisttps
mov
or
cmp
mov
push
data16
inc
jmp
cmp
mov
hlt
add
int3
dec
sahf
jp
and
pop
cs
cmp
add
add
xchg
dec
lods
sahf
int
push
push
push
aad
cld
ja
inc
lahf
rol
jmp
xor
iret
inc
mov
pop
cltd
push
mull
xor
xchg
mov
das
aam
fdivr
fcomip
inc
imul
ffree
fisubl
xchg
add
bound
xchg
stos
and
mov
jmp
mov
int
aaa
adc
out
pop
cwtl
int
outsl
movb
stos
cmp
fldt
addr16
cmpsb
test
cld
fwait
jmp
cmp
int3
push
divl
pusha
jbe
and
lahf
repz
pushl
rcr
or
clc
xor
mov
iret
push
popf
stc
fdiv
add
adcl
mov
xchg
adc
std
cmp
cmpl
nop
mov
jg
decl
sbb
mov
lcall
rcll
call
xchg
adc
test
rcl
push
clc
pop
pop
lds
outsb
xor
lods
xchg
cltd
adc
pop
pushf
aad
jmp
adc
push
jge
adc
mov
sub
pop
andb
push
jge
and
mov
fildl
nop
or
mov
sti
xor
pop
mov
xor
ja
dec
faddl
push
out
mov
in
dec
cmp
shlb
mov
stos
cmp
lea
xchg
loopne
fnstcw
dec
jae
add
ljmp
repz
jmp
jmp
mov
jnp
dec
push
outsb
sbb
divb
add
xchg
mov
inc
mov
xor
andb
or
mov
mov
dec
or
fdivrl
lods
pop
cld
lcall
xor
call
ret
and
sub
pop
mov
mov
enter
int3
cmp
int
out
fstl
in
call
jge
push
sub
sub
and
test
lahf
jl
mov
roll
test
dec
pop
aas
fnstsw
pop
and
jne
icebp
push
push
inc
pop
cwtl
xchg
decl
cmp
push
scas
call
push
aaa
xchg
inc
dec
stc
iret
inc
adc
or
sti
loopne
xchg
out
add
call
jno
in
dec
push
int
mov
cmp
push
xlat
into
jbe
mov
adc
cmp
ja
jmp
or
aas
adc
sub
sbb
cwtl
lret
pushl
cld
cmc
bound
or
and
mov
fdiv
mov
mov
in
je
cmpsl
mov
stos
movsb
push
and
sub
decl
ljmp
cli
and
js
adc
xchg
xchg
pop
jns
or
push
push
mov
xchg
inc
lret
daa
sub
mov
mov
clc
call
add
jle
mov
out
and
pusha
push
pushf
insl
dec
mov
dec
in
test
mov
clc
hlt
cs
inc
scas
fstpt
mov
lock
das
mov
and
ljmp
add
cmp
stc
jnp
arpl
nop
call
orb
pavgw
mov
in
xor
add
push
and
decl
adc
mov
mov
mov
ficoml
sbb
out
popa
lahf
cmp
in
je
fistl
ret
test
pop
xor
and
lods
mov
orb
jnp
test
add
fstps
ljmp
stos
stos
inc
mov
adc
addr16
cmp
jge
clc
stos
mov
cmp
es
mov
decl
dec
pop
lock
or
pushf
lods
adc
or
and
pushl
or
cld
mov
mov
cs
shll
dec
sti
mov
mov
jl
and
popf
pop
fisubs
inc
sti
adc
cmp
ljmp
pop
cmp
lea
popf
repz
dec
pop
jmp
xchg
mov
lods
pop
lock
pop
ret
lcall
xchg
jg
or
into
mov
xor
subb
push
inc
or
mov
mov
jns
sbb
mov
adc
pop
test
and
cmp
test
popf
sbb
out
ds
nop
cmp
popf
or
jg
ss
cmp
or
pop
pop
scas
inc
inc
repnz
js
incl
fisubl
std
loope
dec
push
push
cltd
push
bound
jmp
js
xor
shll
push
mov
fsts
frstor
imul
in
aad
jmp
sub
mov
mov
mov
popa
and
push
sar
and
jne
outsl
sub
cwtl
addb
or
lret
in
cmpl
push
mov
jno
and
cmp
xchg
push
adc
push
nop
jp
xor
xchg
adc
shrl
dec
mov
add
or
lahf
jns
dec
xchg
ljmp
inc
pop
inc
cli
push
mov
aad
or
inc
xchg
leave
sub
xor
mov
imul
sub
fidivrs
arpl
or
mov
mov
ljmp
cmpsb
or
mov
mov
push
push
and
adc
sahf
add
jle
jle
jp
xchg
cmpsb
sahf
dec
lods
mov
xchg
pop
dec
mov
fwait
jne
ret
divb
lcall
jp
mov
jecxz
icebp
jb
xlat
xorl
inc
shrl
dec
jge
js
fisttpll
in
imul
movsl
jp
outsb
fidivrl
xor
jno
das
sti
int3
test
xchg
push
pop
mov
js
xor
pushl
lock
flds
dec
cmc
add
and
inc
in
ret
repnz
pushl
mov
adc
sub
int3
mov
stos
popf
inc
aas
ss
nop
lret
rcll
jb
lcall
mov
in
cmp
cmpsl
idivl
mov
decb
jmp
dec
les
mull
add
lock
sub
jns
push
repnz
xor
stos
cmc
incl
loop
sbb
or
fisubrs
repz
mov
lock
and
outsl
andb
inc
clc
lret
xlat
sbb
loope
lcall
and
jecxz
push
jne
mov
inc
popa
add
mov
mov
sub
pop
sbb
mov
pop
mov
mov
fsub
mov
andl
mov
pop
in
and
clc
add
jns
mov
inc
cmp
cmpsb
xchg
cli
push
inc
mov
mov
idiv
sub
push
and
or
add
cmpl
and
call
mov
cmp
cltd
jno
mov
cld
int3
in
in
mov
dec
push
mov
decl
mov
loope
adc
jne
sbb
movsl
mov
repz
dec
push
cwtl
inc
es
ljmp
sub
das
sbb
jae
push
outsb
mov
in
jns
out
sbb
aaa
addr16
mov
idiv
dec
ss
gs
sub
cmpsb
cmpsl
sub
dec
jae
sub
jg
inc
scas
je
xor
daa
pop
scas
out
cmp
pop
andb
mov
dec
and
daa
call
push
test
jbe
and
les
cmc
jmp
xorb
stos
push
xor
outsb
fbstp
mov
or
cmp
adc
or
test
lcall
jmp
pop
lcall
jl
sub
mov
in
xor
lock
xchg
fistpl
mov
and
mov
sub
test
jp,pn
mov
dec
adc
inc
adc
push
cmpsl
mov
sti
pop
pop
lret
cmp
fs
mov
dec
cmp
aad
mov
imul
call
pop
imul
add
push
xchg
pop
idivl
dec
inc
or
fcomip
ljmp
pop
lods
cmc
push
sub
sarl
sbb
shl
pushf
xchg
mov
push
jno
jmp
movsl
pop
in
mov
imul
iret
mov
arpl
jg
orb
jmp
pop
movsb
int
cmp
adc
jp
daa
loop
ljmp
pop
mov
cmp
cmp
mov
jo
xor
sub
xor
std
lcall
and
sub
dec
or
cld
xor
fs
lock
mov
imulb
jg
xor
clc
push
fcompl
movsb
insb
aas
into
scas
inc
push
xor
adc
lcall
pop
ficompl
mov
js
push
cwtl
xor
ds
loopne
out
test
ljmp
dec
fisttpll
mov
leave
lods
dec
pop
and
jg
push
cli
xchg
inc
adc
addr16
incl
sbb
adc
fwait
mov
aas
addr16
and
leave
jae
cmc
mov
loope
ljmp
xchg
push
jno
xchg
repz
xor
pop
test
inc
cmp
jmp
adc
dec
dec
mov
stc
aaa
andb
call
mov
mov
insb
xchg
inc
movsb
lcall
clc
out
push
or
movsl
xor
mov
sub
dec
sub
lret
scas
hlt
scas
clc
ljmp
lcall
push
fidivs
xorb
loopne
fcoml
add
and
ljmp
mov
fwait
xchg
inc
pop
push
or
inc
push
ljmp
ljmp
pop
xor
sub
sub
pop
mov
push
cmp
repnz
aam
decl
ljmp
andb
xchg
ss
test
mov
in
cmp
sub
lock
add
leave
sub
shl
ja
test
incl
inc
dec
sarl
mov
sub
fcmovnb
fsubs
push
and
inc
movsb
jne
test
add
out
push
xchg
jne
sbb
or
aam
or
scas
cwtl
dec
mov
jmp
or
and
mov
jl,pt
testb
cld
incl
push
jge
clc
mov
dec
mov
xchg
xchg
xchg
jp
add
dec
inc
or
decl
cmp
iret
subsd
pop
mov
nop
lods
mov
cmp
ljmp
add
and
xchg
mov
add
xchg
mov
or
call
imul
and
pop
cwtl
repz
mov
pop
stos
sub
mov
aas
xchg
in
mov
ss
bound
lret
jno
das
jg
adc
out
and
xor
jnp
sbb
out
xor
imul
sbb
sbb
jae
bound
jle
fidivrl
in
lods
mov
inc
inc
out
js
shll
ja
jg
hlt
push
cwtl
out
jge
inc
jb
imul
pop
pop
add
out
mov
sar
shlb
arpl
aad
or
or
ljmp
jmp
lret
stc
ret
cmp
lds
int3
xchg
pop
mov
notb
add
mov
fcoml
jae
stc
or
push
push
inc
jecxz
mov
xchg
subb
lret
mov
incl
cmpsl
test
jnp
cmp
das
push
xchg
jp
push
pusha
sub
out
inc
aad
call
dec
scas
dec
xor
cmpsl
xor
add
dec
push
push
add
fdivl
sbb
mov
mov
jmp
leave
cs
sahf
inc
decl
repnz
xchg
pop
enter
pop
popa
add
sahf
into
ljmp
inc
fnstcw
icebp
push
inc
testb
mov
sbb
mov
mov
push
dec
test
dec
ljmp
cli
ret
pop
xor
mul
jo
sahf
lahf
inc
les
pop
push
xor
and
clc
jmp
xchg
adc
insb
clc
imul
call
cmpl
mov
gs
je
jg
lret
sahf
andb
cmp
push
cli
cltd
ljmp
call
push
lcall
fldl
inc
jl
jne
pusha
jno
std
stc
jecxz
call
sbb
sub
sub
push
dec
mov
dec
into
aad
fisttps
and
lret
jg
movsb
ret
mov
add
filds
or
fidivrs
adc
inc
jge
setns
xchg
repnz
mov
out
cli
lcall
outsb
adc
cmpsb
pop
fisubrs
sbb
add
cmp
sti
insb
and
jmp
cwtl
insb
std
movsl
scas
pop
mov
and
call
pop
int3
lock
adcb
stos
and
dec
push
fs
in
popf
out
push
and
xchg
adc
movsb
sbb
ffreep
mov
insl
pop
dec
dec
xor
inc
jecxz
xor
mov
ds
in
mov
and
sub
rsqrtps
xchg
nop
add
fwait
sub
and
sar
or
movb
pop
fstl
inc
lcall
ljmp
xchg
ljmp
out
clc
adc
mov
cmp
in
stos
movzwl
ret
jg
or
mov
add
daa
in
in
cld
dec
std
push
mov
jp
mov
jb
add
jg
in
push
mov
cmc
aaa
push
lock
dec
loope
mov
jo
sbb
mov
push
repz
push
icebp
or
aad
test
cmp
pushl
mov
and
into
leave
add
sti
lcall
dec
cwtl
jge
rcrl
daa
sub
call
xor
pop
mov
ds
in
loopne
inc
xchg
out
pop
adc
xchg
sub
inc
in
jg
or
clc
out
push
call
sar
xorl
movsb
jo
lcall
push
jbe
adc
lea
inc
and
inc
scas
mov
xor
push
repz
lcall
mov
push
hlt
mov
xchg
jo
lods
fisubs
mov
cld
out
test
cmpsb
lcall
incl
jmp
sbb
mov
mov
subb
sbb
sar
incl
repz
rol
outsl
popa
mov
mov
add
pushl
jbe
sbb
mov
mov
adc
cmpsl
arpl
or
fwait
cmp
jo
in
ds
inc
movsb
xor
call
cmp
mov
add
jge
ret
xchg
mov
push
push
jno
ja
xor
sti
ljmp
fnstsw
cmp
adc
inc
shll
addb
lods
aad
hlt
adc
ljmp
mov
decl
add
stos
inc
or
dec
dec
mov
out
xchg
jo
lea
sub
xchg
lods
pop
jecxz
pop
bound
arpl
lcall
nop
scas
jo
gs
mov
mov
and
sbb
mov
or
and
call
movsb
div
ss
outsl
es
test
out
xor
pop
clc
cs
mov
decl
and
std
mov
or
lds
aas
jp
xor
aam
push
sahf
rorb
cmc
movsb
mov
movsb
push
ljmp
xchg
push
movsl
cmpsl
roll
ljmp
cmp
jmp
mov
lcall
cmc
test
or
cmp
sub
mov
addr16
dec
sbb
jp
xchg
cmp
cmpsb
cmc
int
mull
insl
dec
cmp
lds
gs
test
out
sti
inc
rolb
outsl
mov
jl
xchg
sbb
mov
test
push
mov
pusha
sbb
in
xchg
mov
movsb
scas
into
insl
mov
pushf
or
or
cld
sbb
pop
rorl
cmp
or
mov
fcoms
popf
mov
loop
test
cmp
jno
sbb
cmp
test
mov
call
push
ljmp
or
sti
ret
xchg
or
push
push
xor
pop
jae
inc
lret
insl
in
cli
incl
mov
or
bound
add
les
jge
fsub
and
lcall
inc
push
pop
jnp
lds
cmp
adc
fisubrl
sub
sbb
aam
out
lods
lods
sahf
sub
in
in
incl
insb
dec
adc
aas
neg
mov
add
icebp
mov
pop
popa
adc
ds
call
lock
outsl
fiaddl
sbb
dec
insl
sub
sbb
push
xor
scas
test
xchg
arpl
dec
leave
decl
cmp
es
pop
stos
test
call
shll
in
idiv
das
int3
shlb
orb
repnz
imul
cwtl
xchg
fwait
leave
push
enter
arpl
out
xchg
xor
adc
sbb
and
and
mov
add
addr16
or
insb
add
add
xchg
inc
insl
popa
repz
in
rol
incl
cmc
iret
or
dec
jp
cwtl
imul
lods
rcll
dec
aas
pushl
cmp
test
sahf
aas
sahf
and
cli
xor
pushf
ret
cmc
test
xor
mov
or
add
decl
fcoms
and
push
test
cmp
mov
sub
popa
in
addr16
inc
push
xchg
or
pop
mov
sar
iret
shlb
fnstsw
or
leave
fmuls
aas
pop
loope
xchg
push
nop
sub
fcomip
mov
imul
mov
andl
xor
pop
adc
pop
mov
cmp
or
cmp
pop
add
test
hlt
sub
inc
mov
and
call
pop
mov
push
ljmp
movsl
call
shll
ljmp
adc
sbb
mov
int
push
mov
jg
inc
mov
je
inc
je
ja
popa
ficompl
dec
das
aad
iret
jbe
inc
in
fcomps
cld
mov
dec
dec
sub
push
push
sub
jne
bnd
push
pop
sub
daa
popa
or
loope
pushf
cs
pop
test
fsubrs
mov
pusha
sub
call
or
scas
js
cltd
aam
sbb
and
popa
adcl
push
sub
or
sub
lcall
pop
jo
fadd
xor
mov
movsb
mov
push
cld
or
lcall
shrl
or
icebp
lods
push
pop
cltd
mov
sub
incl
push
fbstp
ds
fisttps
aaa
insb
test
imul
in
push
jmp
or
jl
xchg
inc
test
stos
aad
inc
jo
fisttpll
mov
xchg
adc
mov
pushl
mov
and
jmp
rolb
mov
cwtl
dec
repz
loop
mov
sbb
pop
mov
push
mov
outsl
dec
sbb
mov
or
push
and
xor
dec
rcrl
out
lahf
jnp
dec
dec
aam
sbb
inc
xor
xor
or
dec
push
gs
lcall
push
and
push
or
notb
lret
cmp
leave
xor
out
clc
mov
scas
mov
daa
daa
jle
inc
xor
jg
push
xor
jmp
fidivl
notb
andl
test
push
sbb
in
xchg
loope
mov
jb
rorb
dec
push
push
clc
jmp
cltd
js
sti
imul
xor
sub
adcb
mov
mov
xor
incl
sbb
xor
leave
fists
push
das
mov
sub
xchg
mov
std
insl
sbb
xchg
inc
andl
cmp
sub
loopne
add
jl
fdivrs
jns
in
add
pop
repnz
lock
ljmp
xor
mov
fs
jle
xlat
mov
jno
aam
mov
jl
dec
push
add
notb
mov
add
cli
mov
mov
xchg
lea
push
test
std
in
dec
shrb
lcall
test
cmp
inc
mov
test
js
popf
es
imul
or
inc
and
incl
out
lret
xchg
rorl
push
iret
clc
push
mov
fcompl
stos
outsl
bound
dec
stos
add
lods
xchg
mov
nop
out
iret
sbb
push
jbe
cmp
js
or
ret
clc
call
mov
lods
mov
cmpsb
jnp
in
xor
xchg
adc
and
sub
cld
mov
or
mov
mov
xchg
shlb
mulb
mov
pop
or
enter
cmp
movsb
jne
mov
out
xor
mov
inc
adc
push
xor
lcall
lret
negb
pop
test
movsb
out
mov
incl
mov
xor
inc
loopne
enter
rorb
mov
hlt
movsb
cmp
ljmp
sub
int
xor
lcall
add
cmp
dec
push
push
call
call
pop
pop
pop
or
fmul
xlat
repnz
jne
mov
pusha
xchg
js
daa
mov
xchg
cwtl
repz
cmp
jecxz
mov
pop
mov
call
or
push
push
ja
push
int
jnp
mov
xchg
test
and
ljmp
in
xchg
outsl
lods
fwait
sub
lock
and
mov
xor
std
mov
jno
ljmp
shlb
inc
xchg
add
push
xchg
xor
xlat
cvtps2pi
insb
mov
sbb
mov
sub
aas
popf
sbb
mov
mov
or
xor
decl
jno
in
dec
jl
mov
add
adc
fbstp
rcll
jl
pop
std
and
arpl
dec
push
adc
push
xchg
mov
dec
pushf
repnz
pusha
mov
pushf
not
xlat
sub
outsl
push
scas
ret
xor
dec
jp
mov
dec
inc
bound
sbb
ljmp
pop
inc
hlt
lahf
lds
jg
mov
mov
imul
pop
into
inc
jge
popl
testw
xor
cli
pushl
insl
roll
sub
movsl
push
jne
mov
jl
addb
add
jae
push
pop
jp
in
hlt
mov
pop
and
push
mov
movsb
fildll
mov
cwtl
out
xchg
inc
pop
dec
into
out
jmp
pop
jns
xor
daa
out
sarb
adc
aad
pusha
jp
sarb
cmc
ss
push
std
fisubrl
or
call
add
cmp
and
xchg
testb
jmp
pop
dec
dec
adc
stos
aam
clc
ljmp
insb
mov
out
adc
xchg
jnp
push
cld
cltd
sahf
loope
dec
decl
lock
pop
mov
cmc
sbb
pop
dec
lock
xlat
sti
xchg
jns
mov
shl
push
out
idivb
leave
pop
fcmovne
ret
cld
cmp
inc
hlt
pop
sub
int3
sar
ret
into
out
js
ja
push
sarb
test
cmp
ljmp
adc
jecxz
mov
sub
shlb
lahf
aaa
adc
dec
jne
jg
push
stos
shl
cld
sbb
and
sbb
add
es
ds
sar
jmp
ljmp
in
cs
and
roll
in
sub
mov
lahf
in
mov
clc
cmc
les
js
nop
mov
fildl
jecxz
stos
push
fwait
cli
xchg
clc
jg
loop
mov
stos
xor
mov
jecxz
icebp
push
out
stos
das
out
inc
jns
test
adc
xchg
decl
mov
lcall
sbb
cmpsb
xchg
pusha
ret
scas
or
jae
jae
xor
lods
mov
std
sar
call
sarb
xor
or
push
cltd
sarl
inc
or
mov
out
sti
mov
call
rorb
sbbb
fbld
das
mov
imul
lods
cmp
pushw
popa
adc
decl
incb
fmul
mulb
pop
scas
hlt
sahf
and
mov
lcall
ss
int
add
adc
out
rcr
push
xchg
nop
outsl
jbe
aaa
test
loopne
sub
test
cld
mov
fwait
jbe
bnd
ljmp
add
mov
cmp
xor
fists
stos
cmpl
call
ret
sub
mov
sbb
mov
inc
repnz
add
incl
movsl
call
jo
sbb
dec
out
jg
mov
test
ss
cmp
push
incl
xor
inc
adc
lock
cmc
dec
inc
xor
mov
aam
sti
and
add
icebp
dec
inc
xchg
mov
adc
js
jge
lea
fidivs
lcall
pushf
and
notl
add
mov
cmp
or
pushf
shll
mov
daa
push
test
ret
divl
jl
in
lcall
call
dec
loopne
mov
push
pop
pushf
jecxz
push
cmp
xchg
pop
aad
jmp
scas
lods
in
lea
mov
jne
cmp
rcl
pop
iret
imul
jg
lea
mov
cld
mov
jecxz
xor
push
subl
fcomps
movsl
mov
and
repnz
test
les
arpl
push
push
mov
scas
jmp
jecxz
js
xchg
jle
push
aam
mov
cmpsl
loop,pn
popf
mov
jle
arpl
jbe
decl
or
lea
xchg
pop
and
aad
nop
xor
hlt
call
sarl
fisubs
sbb
add
in
pop
fstps
push
mov
mov
popa
inc
mov
dec
cltd
add
add
pop
addr16
mov
cld
call
pop
cmp
shlb
call
xchg
push
cli
jmp
jp
cmpsl
mov
adc
xor
clc
cwtl
jae
data16
ja
dec
or
dec
push
cmpsl
fwait
dec
popf
aam
incl
add
fucompp
add
sbb
mov
jmp
cmpsl
std
lods
inc
fpatan
cmp
sbb
xchg
mov
add
jecxz
pop
xchg
es
scas
rorl
mov
or
pushl
cmp
fsts
sub
loope
call
cmpsb
cmp
scas
das
or
decl
add
sbb
daa
mov
fucom
data16
push
pushf
dec
add
into
inc
sub
out
ljmp
and
out
inc
fsts
pminsw
shr
mov
aas
fdivl
jno
pushl
ret
hlt
cmp
xor
push
push
cmpsb
adc
xchg
or
test
cmp
push
mov
out
leave
mov
das
cli
ja
loope
addr16
xchg
lods
dec
jo
inc
mov
loopne
aam
jae
icebp
jmp
cmpsb
jp
nop
enter
mov
xor
push
add
xchg
inc
push
pushl
xlat
fnstcw
arpl
test
mov
or
mov
mull
mov
xchg
inc
lret
add
sbb
sbb
adc
lret
mov
and
xchg
and
pusha
sbbl
imul
mov
push
lcall
cmp
insb
faddl
ret
arpl
fsubp
adc
cld
or
cmp
out
pop
les
lret
outsl
add
dec
push
xchg
lea
jg
clc
icebp
sbb
push
cmp
cmp
int
mov
cld
incl
popl
inc
sti
jnp
shrb
outsl
ret
cli
cmp
std
cmpsb
js
push
push
call
cmpsb
push
add
shrl
push
pop
sti
out
sbb
icebp
add
pop
sbb
incl
scas
jecxz
and
out
data16
push
es
inc
adc
dec
movsl
int3
pop
or
loopne
mov
daa
adc
pop
pop
pop
outsl
mov
adc
rcrl
mov
xor
sub
jb
in
es
pusha
call
fcmovb
inc
mov
xor
mov
ljmp
cmp
rcrb
lock
dec
aaa
sbb
call
in
int3
sbb
aaa
push
mov
incl
jnp
lcall
js
mov
cmpsl
ds
dec
dec
loope
pop
cwtl
sbb
incl
xlat
popa
lea
addr16
das
enter
pusha
xlat
out
les
mov
or
jo
adcb
sti
mov
add
xchg
push
sbb
pushl
cld
mov
jnp
sti
inc
and
pop
add
stos
imul
inc
dec
sbb
sbb
jp
shll
scas
pop
movb
movsb
xlat
lcall
inc
sbb
cmp
rcl
call
add
inc
stos
movsl
mov
mov
cmc
test
lret
cmp
mov
mov
add
jno
js
fwait
xchg
cmp
add
dec
lds
decl
fwait
inc
fcompl
adc
into
adc
mov
fistpl
push
jp
lcall
insl
pop
ljmp
rcrb
popf
or
push
pop
and
inc
pop
pop
mov
aaa
lock
mov
mov
jo
out
mov
mov
in
push
xchg
mov
pop
jecxz
mov
lods
imul
popf
jecxz
mov
mov
jb
fcmovbe
cmp
decl
jae
sahf
popa
and
jns
movsl
arpl
mov
sub
xchg
xor
jmp
xlat
fdiv
inc
lahf
sbb
stc
xchg
cmp
fildll
cmp
and
roll
in
jne
push
dec
mov
popf
std
test
je
xor
fs
sti
push
repz
dec
xor
adc
int
cmpsb
fdivr
jmp
popa
ret
jmp
mov
add
jb
mull
mov
lcall
add
jp
iret
imul
rclb
push
or
outsb
fdivr
pop
dec
lcall
jg
sti
les
mov
xchg
mov
int
push
and
dec
cmp
push
pushl
mov
xlat
dec
mov
scas
push
sarb
insl
movsb
xchg
jp
pslld
sbb
and
addr16
call
or
adc
in
mov
jle
insb
push
xor
sbb
decl
or
mov
cltd
or
nop
repz
sbb
subl
jmp
cmp
test
icebp
dec
push
call
dec
push
dec
movsb
mov
lock
mov
sub
push
mov
testl
in
jle
out
sub
mov
bound
sub
out
icebp
movsb
mov
bound
mov
shlb
shl
cld
xlat
sahf
std
test
sub
mov
das
faddl
or
divl
lret
xchg
inc
enter
lods
pop
std
adc
jnp
push
loope
nop
jecxz
mov
pushl
inc
stc
mov
mov
mov
into
in
fld
scas
ljmp
imull
adc
ret
inc
pushl
dec
inc
xlat
pmuludq
jns
mov
add
and
js
inc
lcall
enter
enter
push
ljmp
rcl
dec
mov
mov
testl
stc
lcall
test
aad
dec
popa
cmp
es
push
das
jge
dec
idivb
decl
and
stc
mov
movsl
test
mov
data16
sbb
inc
and
call
push
sti
jo
jg
mov
incl
out
lods
or
pushf
shrl
sbb
mov
and
xor
inc
jne
mov
jle
in
ficomps
cli
gs
test
aam
sub
pushf
cmp
sbb
pushl
test
negb
lahf
es
mov
imul
sar
xchg
xor
inc
xchg
push
sahf
add
mov
dec
sarb
idiv
decl
mov
mov
in
xor
sub
dec
cli
adc
mov
in
cli
pushl
xor
mov
rorb
cmpsl
fwait
stos
iret
dec
or
cmc
lds
push
mov
push
js
outsb
sub
mov
jmp
fs
fmull
mov
sub
push
xchg
div
hlt
rorl
xchg
nop
inc
incl
ret
push
test
pop
cmpl
sub
cmp
lock
call
sysenter
lret
adc
imul
mov
data16
and
adc
push
add
in
fsubrp
xchg
add
jns
adc
add
je
sbb
pushl
fiaddl
jns
cmp
fsubrs
fsubrl
sbb
cmp
add
adc
cltd
sub
sbb
push
and
out
jg
imul
adc
out
test
out
push
stc
shlb
dec
jne
dec
or
lock
ds
jmp
and
sub
ljmp
sbb
and
into
inc
inc
mov
jne
rcr
jl
adc
in
and
mov
jae
in
sbb
and
cmp
cwtl
mov
jae
jns
mov
sahf
mov
mov
mov
aam
aaa
push
clc
add
and
shrl
jg
mov
push
aas
mov
stc
jmp
xchg
push
mov
cld
ljmp
stc
push
fs
fs
fs
leave
mov
decl
cmpsb
sub
ret
popa
and
and
imul
into
mov
lcall
sahf
push
mov
es
inc
mov
pop
jp
ds
jmp
cmp
std
lret
fdivrp
leave
pop
fisubl
ret
out
inc
push
push
or
imul
mov
lcall
xor
insl
in
cmp
pop
jne
adc
aaa
ljmp
or
test
adc
or
dec
outsl
adc
decl
shl
lods
lret
mov
dec
arpl
add
fistps
outsb
outsl
cmpsb
stos
xor
enter
jg
cmpl
fs
add
test
mov
pop
insl
jge
jo
jl
fisubrl
fildll
mov
ret
enter
pop
hlt
mov
out
out
jnp
call
pop
cmc
fs
or
xlat
and
adc
nop
inc
jnp
or
mov
stos
mov
cmp
or
movsl
ss
mov
pop
rorb
mov
push
shll
xchg
lret
pop
cltd
adc
cwtl
mov
jp
in
jns
insb
call
mov
lock
mov
cld
insb
arpl
push
mov
cli
int3
xor
ficoms
iret
decl
hlt
mov
mov
push
mov
xchg
loop
js
adc
fistps
pop
dec
push
sub
mov
mov
xchg
jnp
scas
push
mov
push
xchg
jbe
cmp
pop
aad
dec
dec
stos
cmp
fmuls
out
fnstcw
dec
fdivrl
pop
mov
cmp
fs
stos
adc
in
ja
adc
icebp
mov
jnp
es
xor
es
sbb
sbb
inc
adc
mov
xchg
sbb
stc
jb
daa
xchg
mov
mul
push
out
in
push
jp
decl
mov
out
cmpl
movsl
sti
add
inc
mov
or
pop
fbld
cmp
sarb
inc
mov
jae
cli
ljmp
mov
and
shlb
pop
cli
push
lcall
jnp
nop
pop
cs
js
jnp
mov
fnstenv
push
lock
adc
imul
mov
lcall
cmc
roll
lock
pop
pop
inc
imul
in
adc
ret
lret
mov
fcmovu
jnp
arpl
add
cld
pop
ljmp
jne
pop
fists
pushl
loop
sbb
mov
bound
fst
dec
in
insl
mov
in
xor
pop
sub
dec
sub
xchg
decl
call
sub
aas
and
stos
mov
mov
es
jmp
jmp
mov
and
dec
mov
mov
mov
ja
stos
pusha
push
xor
jle
imul
push
pusha
ds
jge
push
jmp
icebp
leave
cmp
sbb
mul
stos
in
push
lret
mov
or
jp
push
cmpsb
shl
cli
adc
cmp
rolb
mov
loop
adc
mov
cmp
imul
and
rcl
mov
imul
mov
gs
jg
and
pop
out
sub
sarb
inc
xlat
push
icebp
mov
call
dec
xorl
cmp
lcall
int
cltd
int
inc
fldcw
decl
cmp
push
faddp
push
nop
or
shrb
out
mov
xchg
minps
lcall
movsb
cmpl
cmp
sub
loop
xor
fsubrl
dec
sahf
hlt
or
adc
pushl
gs
cmpsb
sub
testb
inc
es
push
sub
outsb
lcall
mov
call
ds
pop
icebp
sbb
inc
mov
sbb
xor
jl
push
in
cli
xlat
mov
jmp
sub
sbb
xor
outsb
bound
sub
ljmp
call
adc
ja
inc
fsub
aaa
scas
fwait
movsl
imul
or
add
inc
adc
lds
ret
sub
arpl
dec
pop
mov
sbb
fldt
cmp
ljmp
xchg
sub
pop
sub
push
stos
jno
sbb
mull
je
test
dec
sbb
in
call
test
fcmovnu
stos
cmp
push
or
mov
xchg
adc
jl
mov
mov
lcall
pop
mov
enter
mov
mov
sub
addr16
mov
xchg
sub
lcall
dec
bound
push
jecxz
aaa
aad
or
push
andl
jle
jbe
test
incl
outsl
jb
xor
xchg
mov
test
pop
scas
inc
incl
int3
addb
pop
mov
add
adc
cmp
push
push
cmp
xor
ds
jno
das
or
mov
decb
pop
imull
out
shr
subb
sti
lahf
xchg
mov
pop
jp
mov
inc
into
gs
call
jmp
add
xor
pop
pushaw
movsl
fst
pop
mov
mov
sbb
lcall
decl
out
xchg
jge
cmpsb
or
xor
add
mov
ljmp
jbe
nop
inc
push
jl
push
jnp
inc
pop
xchg
xchg
insl
xchg
dec
lcall
inc
mov
pushf
inc
loope
fstpl
mov
mov
insl
fdivrp
decl
cwtl
jo
and
les
dec
cmp
ljmp
mov
pop
or
fbstp
je
add
push
leave
sub
add
lods
test
aas
jmp
lcall
add
push
bound
mov
cmpsl
popf
shrl
mov
lock
dec
hlt
orb
pusha
out
mov
inc
xchg
loope
xchg
stos
push
repnz
or
adc
test
stc
fwait
and
xchg
stos
fwait
inc
mov
sub
out
and
inc
subl
call
aad
iret
shll
decl
lods
xchg
repz
std
xor
push
jge
ret
nop
pop
rol
jnp
cmpsb
push
shr
and
stos
inc
push
ret
inc
arpl
out
cmc
loopne
movsl
jne
add
pop
lcall
adc
repz
lret
es
jne
pushl
add
mov
mulb
fcmovbe
jb
into
cli
andl
popf
out
aam
incl
inc
mov
jge
loope
insl
xchg
in
in
dec
jnp
inc
dec
inc
rclb
das
mov
mov
ljmp
test
test
cmp
xorb
adc
pop
adc
add
adc
andb
pop
test
mov
dec
sbb
sub
mov
repnz
outsb
orb
push
mov
out
test
pop
inc
mov
inc
in
lock
das
adc
scas
sub
push
cmp
cmp
std
jmp
cmc
pop
cltd
repz
xor
mov
dec
mov
fwait
inc
fcompl
int3
call
jb
push
in
pop
out
ficoms
rcrb
call
cmp
stc
or
xchg
icebp
push
xorb
int
or
test
cs
pop
out
decl
add
push
cltd
xchg
sbb
pop
ja
pop
inc
fcomps
adc
les
add
jno
jg
int3
lcall
or
insb
adc
cwtl
je,pn
pop
pusha
mov
decl
pop
xor
lods
or
cmp
cmc
test
sub
es
jne
ror
inc
pushf
jns
pushl
outsb
add
rcrl
jle
stos
dec
out
daa
scas
jno
sbbl
mov
dec
xchg
cli
lods
pop
pop
xlat
or
lcall
cmp
adc
push
hlt
es
mov
jae
jbe
adcl
cmp
decb
shl
arpl
push
iret
outsl
push
hlt
jmp
das
dec
ds
lds
test
sub
jge
decl
imul
pop
xchg
dec
pop
test
in
lods
aaa
inc
inc
inc
clc
pop
fistl
push
mov
mov
xchg
jl,pt
pop
fildl
inc
xchg
aam
pushl
sbb
push
lret
pushf
scas
or
push
and
xchg
adc
jl
pusha
jg
mov
jl
push
push
loop
sarb
in
mov
cmpsb
lahf
xor
les
ds
mov
xor
dec
or
mov
sarb
hlt
mov
sub
adc
jl
inc
mov
jle
imul
fldcw
mov
pusha
dec
lock
daa
ds
jo
jne
aad
push
jmp
inc
insl
fmull
mov
cmp
and
add
jbe
jl
push
popf
dec
pop
insb
call
xor
sub
sub
mov
outsb
pop
push
xchg
incl
pop
divb
mov
mov
fwait
into
push
mov
xor
mov
and
stos
push
nop
je
je
cmpsb
push
cld
jp
ss
mov
ret
mov
dec
cmp
cmp
mov
call
push
inc
es
mov
cwtl
mov
incl
add
ror
push
push
add
jl
sarl
inc
in
inc
jl
adcb
jmp
mov
jecxz
inc
pop
out
pop
scas
jo
ds
aas
sub
out
inc
clc
jno
out
stc
xor
jg
lds
cld
rorb
in
negb
pop
subb
sbb
decl
out
pushf
icebp
loop
push
xchg
outsb
lods
push
xchg
popa
xor
jmp
jmp
lods
pop
imul
daa
ret
xlat
repz
mov
repz
adc
cs
lidtl
pop
xchg
aad
xchg
ja
push
je
into
pusha
adc
xchg
pop
xor
imul
or
jg
aam
jecxz
adc
add
imul
pushl
jns
push
mov
out
xchg
push
ret
das
into
loopne
dec
inc
xor
pop
inc
xchg
pushl
stc
mov
cmpsl
add
scas
push
hlt
ficompl
xor
test
incl
daa
dec
jnp
rcll
push
xor
sub
aam
sbb
push
pop
lods
and
or
cmp
or
dec
mov
jle
fnstsw
sbb
ss
cmp
std
adc
outsb
mov
mov
lret
cwtl
popa
lea
ljmp
jnp
xor
xchg
mov
xchg
cli
dec
addl
sbb
mov
adc
add
inc
jecxz
xor
sar
lcall
and
cli
imul
loope
xchg
xchg
jnp
out
push
adc
jmp
add
xchg
cmc
inc
lcall
hlt
imul
jae
pop
das
out
mov
orb
lret
mov
in
push
pop
incl
add
or
ret
cmp
cli
fwait
orl
pop
mov
movsb
mov
mov
fidivl
mov
push
lahf
pop
dec
jg
int3
fs
mov
cmp
out
fwait
jp
out
mov
xor
cld
dec
mov
adc
xor
adc
sbb
push
add
decb
mov
xchg
call
xor
add
or
sub
outsb
imul
daa
test
add
jmp
pop
movsb
imul
test
or
in
clc
adc
lcall
movsb
and
rolb
inc
jbe
cwtl
or
call
fwait
xchg
mov
test
adc
loope
in
cltd
loope
scas
ret
in
rolb
inc
or
inc
xor
pop
sti
es
pop
xor
push
aad
std
push
sar
inc
sahf
or
or
pop
movsb
cmp
pushl
mov
repnz
push
mov
enter
xor
adcl
mov
xor
mov
jae
popf
cli
jg
and
aas
mov
dec
push
push
cmc
xchg
jne
or
lret
push
icebp
mov
scas
nop
pop
in
mov
sarl
pusha
rorb
dec
test
orb
xchg
test
insb
pushf
ja
lcall
popa
divl
sbb
mov
arpl
xor
icebp
lods
mov
lcall
lods
sub
or
adc
cmp
and
rcrb
les
mov
aam
shrb
cli
jg
ja
xchg
mov
mov
scas
xchg
jno
dec
je
add
cmp
and
dec
loopne
decl
pop
xlat
fisubl
jg
mov
pusha
pop
les
and
push
dec
ficoms
xchg
es
decl
push
mov
mov
pop
xlat
incl
notb
inc
pop
movsb
icebp
mov
mov
fldl
pushf
and
and
es
inc
dec
and
fs
or
call
or
dec
ret
fcmovbe
mov
jmp
mov
mov
pop
nop
mov
jp
pop
repz
shlb
std
hlt
cmp
sbb
xchg
shrb
ret
or
es
sbb
gs
dec
cmp
incl
enter
xor
fwait
adc
dec
jo
les
add
adc
sbb
cs
nop
add
test
push
mov
cmp
or
daa
sub
fbld
add
sbb
in
inc
repnz
jbe
movl
dec
shlb
scas
jmp
add
cmp
bound
pop
add
push
mov
pop
in
push
incl
rol
push
mov
and
jmp
inc
call
rolb
out
pushf
into
call
inc
cmp
inc
andb
outsl
aaa
jb
stos
into
pop
ret
jmp
jl
cltd
mov
aaa
lea
fcomip
or
sbb
inc
and
fnstcw
outsl
add
lcall
cmpsb
enter
outsl
lret
int
jl
jmp
push
repz
mov
cld
mov
loopne
mov
ss
and
mov
push
dec
or
mov
cmpsl
enter
mov
aad
xchg
dec
xchg
sbb
xor
xchg
add
incl
ja
lcall
nop
jg
out
xchg
push
inc
mov
das
pusha
cs
je
push
test
shll
mov
lret
es
orl
lahf
out
pop
lea
test
mov
andl
lods
mov
outsb
pop
xchg
inc
std
cmpsl
in
mov
dec
push
outsb
fdivs
incl
xlat
roll
cmc
movsb
in
pop
icebp
mov
lahf
push
dec
call
call
adc
dec
insb
scas
ljmp
lods
test
mov
jmp
mov
int3
ljmp
xor
outsb
jbe
imul
jns
xor
pushf
mov
decl
and
divl
cmp
mov
pop
rorl
adc
out
mov
lds
sbb
dec
xchg
lcall
mov
mov
push
mov
pop
add
pop
popa
adc
decl
loop
pop
mov
xchg
dec
ds
fnsave
mov
clc
cmp
mov
xlat
push
or
adcb
pushl
mov
call
mov
inc
movb
nop
cld
xlat
pop
sarl
pushl
inc
loop
or
xor
lock
jmp
pop
addr16
loope
mov
js
loope
call
mov
xchg
mov
jne
je
gs
mov
lcall
or
sbb
mov
cltd
inc
lods
dec
aas
rcr
incl
je
stos
xchg
stos
cmp
pop
inc
adc
movsb
cmp
xchg
loope
lret
and
sub
ljmp
mov
xchg
mov
fs
ljmp
sbb
add
jg
aaa
sbb
push
jge
std
mov
push
mov
sahf
inc
push
adc
lcall
in
es
mov
incl
enter
push
and
out
xchg
popf
adcl
hlt
pushl
cs
xchg
shll
jno
sub
dec
cs
jnp
adc
jge
ret
imul
mov
lcall
gs
add
gs
stos
insl
push
mov
or
test
jmp
repz
add
cmc
jb
mulb
push
ljmp
jnp
popa
clc
decl
push
popa
pop
fstps
mov
outsb
rolb
sub
cmpb
adc
shlb
stos
cli
jbe
out
mov
cmp
sbb
push
into
out
xchg
pop
out
insl
loop
testl
movsl
pop
pop
dec
push
test
xor
jo
mov
xchg
mov
aad
call
mov
push
sub
in
outsl
sub
mov
in
bound
mov
mov
in
mov
adc
dec
movsl
cmpsb
cmp
rorb
or
pop
in
pop
dec
add
je
and
js
xor
xor
fdivrp
pushl
jp
push
cmpsl
add
call
stos
je
shlb
mov
ds
loop
mov
cmp
jge
sub
or
subb
adc
out
loopne
dec
xor
xchg
mov
dec
pop
dec
mov
decl
xor
push
inc
jae
push
in
stc
inc
add
clc
repnz
scas
pop
inc
sbb
sbb
sar
pushl
cmpsb
xor
cmpsb
subl
aam
cltd
dec
hlt
iret
enter
clc
jg
bound
jecxz
and
int
icebp
lock
cs
and
in
inc
pop
fldenv
jbe
pop
jnp
sbb
add
push
mov
ss
or
in
mov
pop
rclb
jns
adc
sahf
loop
addb
outsl
mov
sub
aam
outsb
and
jbe
jb
lea
adc
fdivr
call
in
adcb
lret
icebp
xchg
jb
sbb
test
scas
jle
push
jecxz
ja
outsb
cs
or
push
test
xchg
aaa
std
mov
enter
shlb
jg
inc
cmpsl
and
inc
sbb
enter
in
jg
or
mov
push
inc
bnd
inc
pop
fstpt
mov
push
dec
icebp
sub
push
imul
sub
push
xor
or
and
in
imul
data16
les
iret
xchg
rorb
fsubrl
ja
mov
mov
iret
xor
inc
fildl
in
sub
push
lods
sbb
ficompl
mov
out
cwtl
enter
xchg
adc
jge
out
and
jnp
int3
into
ret
stos
sub
jmp
aam
add
lcall
mov
inc
push
lahf
jns
inc
imul
sbb
mov
imul
cli
xorb
out
push
in
xor
xchg
and
movsl
dec
push
lret
fstpt
loop
xor
mov
incl
mov
test
adc
xor
mov
stos
lahf
sub
push
test
mov
call
adcl
pop
xor
pushf
mov
mov
stos
xor
rcrl
decl
ds
mov
divl
rcl
addl
pop
icebp
push
jecxz
add
cli
decl
jmp
mov
je
pop
call
fdiv
jae
add
fs
cmc
jmp
cmp
sub
into
dec
ror
xchg
notl
out
mov
clc
ljmp
add
xor
pop
sbb
adc
je
iret
adc
pushl
cmc
push
pop
pusha
push
outsb
push
and
insb
inc
lock
in
fwait
sub
jg
nop
push
loopne
xor
add
mov
ds
loopne
jb
add
cld
lcall
lods
dec
push
sbb
insl
sbb
push
dec
aaa
dec
loope
adc
pushl
outsl
pop
pusha
clc
imul
mov
sub
lahf
and
addl
out
jmp
ljmp
loopne
cld
pushf
movsl
ss
inc
xor
xor
imul
jmp
fsubrp
mov
jmp
lods
push
jg
mov
xlat
lahf
xchg
mov
sahf
cmpsl
xchg
sub
leave
and
mov
negl
fs
inc
lcall
or
mov
lahf
aam
mov
cs
mov
scas
pop
mov
jb
pop
lcall
incl
pop
sbb
add
add
jo
or
addr16
cs
ja
add
jmp
sub
aam
stos
xchg
pop
inc
mov
add
push
test
inc
inc
cmp
jns
and
mov
ds
and
adc
fwait
xor
mov
fimull
push
out
push
sub
cli
loop
int
daa
jg
cltd
and
cmp
sub
call
ja
stc
into
js,pt
and
fdivrs
adc
nop
push
add
xor
push
add
adc
loopne
ljmp
notl
mov
adc
and
fildll
and
fcomps
ljmp
andl
sub
adc
mov
fcom
pop
pop
or
das
adc
inc
dec
stos
loope
push
fcomip
jns
imul
ss
xor
js
andb
dec
mov
aaa
xor
mov
test
push
push
scas
cld
push
aas
or
or
ljmp
add
or
pop
lcall
xchg
incl
aam
xchg
addr16
pop
inc
pop
push
in
fidivrl
push
movsl
or
testl
pop
jp
jmp
scas
call
les
cmpsb
daa
shll
mov
lods
sub
popa
sti
ljmp
rclb
xchg
mov
jecxz
imul
push
mov
jmp
cld
lcall
in
mov
sahf
sbb
mov
inc
aaa
push
pop
gs
jmp
int
pop
in
mov
mov
jg
and
shll
outsb
jg
lods
ljmp
mov
outsb
add
fs
lcall
mov
lcall
out
lea
fnstcw
sub
add
mov
jmp
adc
test
add
and
ljmp
std
jl
mov
adc
push
add
or
xor
call
sbb
cmc
or
nop
inc
sub
mov
das
repnz
scas
pushl
xlat
lcall
mov
xor
fnstenv
mov
pushf
add
jmp
stos
imul
insl
sbb
dec
xor
fldt
mov
mov
aam
addr16
jp
mov
popf
and
lret
xchg
out
pop
jo
xor
push
insb
aam
in
inc
mov
sub
adc
pushl
fs
inc
push
cld
or
inc
pop
sahf
das
sub
add
mov
push
out
ds
lds
xor
add
or
xor
out
and
cmpsb
stos
ja
jno
pop
fldenv
pop
mov
dec
cld
jg
or
ds
push
push
cmpl
jg
mov
sub
leave
pop
mov
ljmp
pushf
rorb
test
and
cmp
out
ljmp
nop
hlt
ja
std
incl
hlt
mov
push
out
xchg
push
cmc
and
es
decl
aaa
lock
add
sbb
negl
jb
jl
in
or
ja
les
repnz
adc
stc
mov
decl
lock
in
mov
jae
lea
mov
mov
mov
das
adc
sti
push
cmp
hlt
add
mov
incb
cmp
call
mov
inc
aam
pop
adc
ljmp
iret
rcrl
sbb
bound
mov
mov
out
scas
insl
loopne
decl
and
xchg
lret
add
decl
xor
cli
sbb
cmpsl
xor
lods
jmp
inc
ja
shlb
jecxz
out
adc
data16
ret
pop
dec
decl
test
cmp
xchg
xchg
iret
outsl
pop
dec
inc
xchg
insb
fidivs
mov
call
jbe
into
and
xor
mov
jae
ret
push
sub
jbe
loopne
mov
adc
decl
sub
mov
mov
mov
cld
sbb
sub
mov
add
jg
ljmp
jbe
sbbb
jnp
mov
lds
mov
int3
stos
add
xchg
jge
nop
mov
cli
push
ss
inc
lock
cmc
call
or
repz
inc
loopne
loop
jmp
push
jl
lahf
mov
jbe
sbb
inc
jnp
dec
sbb
ljmp
cwtl
lea
xor
cmc
dec
or
pusha
cmp
stc
loop
jmp
add
adc
rorb
or
add
cmp
pushf
pop
push
lds
lds
les
cmp
or
test
fnstcw
pop
add
outsb
pop
lea
fidivs
mov
clc
mov
sbbb
push
cmpsl
push
ljmp
fdivrl
in
xorl
mov
mov
mov
jb
push
push
test
jmp
out
ret
mov
push
adc
cltd
push
fistps
cmp
ret
sub
decl
je
mov
jmp
scas
fnstcw
cmp
jns
and
push
insl
les
push
fstpt
mov
dec
push
cld
xchg
sbb
insb
js
mov
out
fdivrs
push
repnz
stos
mov
sub
cs
lods
push
aas
pop
adc
adc
push
std
push
push
bound
xor
sbb
mov
loopne
jmp
jbe
pop
push
xlat
dec
mov
in
cmp
mov
inc
ljmp
xchg
add
inc
cltd
sub
push
andb
sbb
ljmp
aad
aas
loope
fxam
arpl
jle
push
popl
cmp
aam
cmpsl
imul
inc
mov
mov
loopne
rolb
popf
and
fistps
mov
mov
in
inc
or
inc
ja
push
jle
stos
mov
mov
jge
inc
or
bnd
stos
or
lcall
mov
add
add
loopne
dec
jg
jns
dec
add
jp
jl
es
jg
cli
movsb
xchg
cmp
dec
jecxz
xor
movsb
test
mov
lea
or
mov
cmpsl
add
call
mov
sbb
sub
lods
mov
push
push
xor
js
pop
inc
jle
dec
cmpsl
mov
xor
mov
call
mov
mov
lahf
xchg
mov
xchg
cli
mov
cmp
dec
push
in
and
repz
push
mov
mov
loopne
sub
decl
pop
int3
xchg
fistps
std
in
push
enter
sub
jb
and
incl
jo
paddusb
fsubrl
pop
lret
mov
cli
mov
int
cli
shrb
cli
push
cli
inc
lret
mov
loopne
mov
dec
call
inc
cli
mov
mov
dec
jge
xchg
loopne
mov
mov
scas
dec
adc
mov
aam
xchg
pop
jg
push
aad
subb
jecxz
stos
bound
jmp
int3
xchg
mov
mov
loop
jbe
gs
push
sub
fs
lds
ud0
lcall
push
sbb
xor
jp
pop
dec
or
mov
and
push
pop
notl
inc
lcall
sbb
mov
rorl
adc
jge
insl
fs
or
call
add
push
cmpl
dec
or
dec
popa
lock
cmpsl
push
xchg
push
into
es
ljmp
and
xlat
jge
in
stos
pop
sbb
subl
push
push
jg
into
movsl
int
jmp
inc
out
out
mov
hlt
int3
xchg
ljmp
add
cli
mov
pop
adc
jbe
sti
arpl
sub
push
cmpsb
mov
xchg
sub
insl
test
mov
adc
inc
adc
jg
test
jb
or
xor
mov
lcall
mov
jl
jno
test
lahf
lea
lret
repz
pushl
mov
mov
xchg
lahf
cmp
iret
sbb
push
xor
sub
es
stc
xchg
pop
cmpsl
sar
jg
out
pusha
je
nop
push
mov
mov
sub
adc
push
test
sahf
shrb
pushl
mov
mov
insl
mov
mov
mov
hlt
cs
shlb
dec
dec
xchg
lock
cmp
dec
idiv
ljmp
dec
rcll
push
mov
es
sbb
inc
sbb
and
adc
lods
or
dec
jb
cmp
dec
clc
jmp
fidivrl
inc
add
xchg
lret
ret
pusha
rcrl
jle
jmp
lock
or
push
push
inc
stos
cmc
push
and
mov
sub
jle
loop
jo
xchg
aas
out
add
cmp
cwtl
stos
in
push
pop
adc
xchg
pop
fwait
jl
popa
shll
inc
pop
lods
stos
add
push
push
mov
call
or
les
insl
pop
xor
test
decl
push
pop
rorl
xchg
and
inc
out
xor
pop
pop
fimuls
push
imul
adc
or
out
and
addb
nop
xchg
call
movsb
xor
push
jmp
jge
mov
xchg
xor
mov
add
pop
das
adc
loop
fmul
lret
cmc
mov
popa
daa
adc
mov
jp
addr16
jp
out
mov
jmp
and
push
add
xor
frstor
data16
inc
stc
adc
pop
mov
fisubrl
shrl
xchg
imul
mov
daa
cli
lcall
inc
jl
sbbl
xor
pop
fisubs
adc
add
pop
push
movsl
cmpsl
sbb
dec
jp
das
idiv
jl
clc
iret
loope
popf
sub
jp
jp
jecxz
adc
jnp
push
imul
shrl
cld
lret
cmpsb
or
cmpsl
xor
mov
add
cmp
nop
lcall
sar
ljmp
sbb
movl
add
dec
mov
cmpsb
scas
pop
scas
iret
icebp
insb
out
pop
dec
jecxz
push
cmp
lock
and
jnp
pop
jecxz
cs
mov
ds
xor
loope
test
xchg
scas
jne
mov
arpl
and
cs
adc
js
hlt
xchg
pusha
sbb
adc
inc
fucomp
sbb
push
aad
mov
mov
shl
shll
jnp
incl
fwait
aam
jl
dec
cmpsb
hlt
xor
orb
int
adc
push
dec
lret
jns
jmp
adc
cmp
dec
pop
les
insl
inc
pop
or
push
push
push
data16
testl
shr
xchg
mov
mov
jbe
inc
mov
cs
xlat
dec
rclb
int3
dec
movsb
hlt
ja
das
or
lcall
lahf
aas
lcall
imul
mov
xchg
mov
iret
gs
movsb
fidivl
lret
lcall
test
jg
push
fcoms
jo
fs
pop
out
mov
lret
insb
icebp
repnz
aaa
sar
push
dec
jbe
xchg
ss
jns
ds
sahf
loop
cs
ljmp
xchg
cmp
jb
xchg
lea
mov
push
inc
and
sarb
pop
and
sub
mov
fistl
in
adc
jg
pushl
push
mov
or
jmp
xor
faddp
stos
sub
frstor
mov
daa
lea
adc
push
mov
dec
jb
gs
pop
ss
lcall
aam
ss
xchg
xchg
repz
cmpsl
insl
enter
mov
dec
cmp
mov
ljmp
ret
test
and
pop
cltd
jl
outsb
adcb
push
sbb
jno
jge
cld
dec
ljmp
pop
lds
pop
lret
jle
cmp
mov
call
repnz
jnp
pop
push
out
pop
fmuls
cmp
mov
mov
pop
lcall
mov
jl
stos
mov
mov
shlb
cli
out
xor
jecxz
lock
sub
dec
int
insb
inc
incl
xor
js
leave
addr16
rorb
int3
test
or
inc
test
call
and
mov
xor
lds
add
xor
jecxz
in
pop
xlat
adc
dec
loop
jmp
iret
je
ljmp
mov
cmpsb
sti
cmp
jp
scas
jp
sub
movsl
rcrb
sbb
xlat
pop
jg
lcall
cs
adc
inc
jmp
adc
vaddpd
fsts
mov
call
incl
cmp
inc
cmpsl
add
addl
mov
jp
cmp
inc
cwtl
loopne
sti
imul
push
push
stos
sti
pminub
aam
int
adc
pushf
dec
test
xchg
test
and
mov
aaa
popf
mov
pushf
outsb
mov
mov
out
clc
sbb
int
test
add
ffree
mov
push
in
pushf
xor
arpl
std
incl
rolb
mov
mov
lcall
pop
clc
sbb
ror
movsl
xor
rcrl
mov
fisttpl
out
jmp
daa
mov
mov
test
jne
enter
mov
jg
movsl
outsb
decl
stos
pop
out
shll
xor
js
xor
jg
pop
and
test
mov
sub
mov
insb
mov
cld
je
sub
loope
dec
insl
push
push
clc
fwait
divb
xor
incl
lcall
adc
jl
add
sub
xchg
insb
ss
insl
fs
or
jb,pn
pop
std
jmp
fwait
inc
push
fisttpll
inc
fwait
das
fcomi
or
arpl
dec
cmp
call
mov
leave
push
pushf
mov
in
and
data16
and
push
pushl
lcall
pushl
loopne
pop
sub
cmp
xchg
pop
mov
decl
fsubrs
jp
push
sub
mov
inc
in
xchg
sub
mov
inc
repz
push
incl
jnp
pop
xchg
shll
cmc
insb
outsl
cs
push
xor
pop
mov
incl
pop
push
pop
push
cwtl
jbe
sub
and
cwtl
cmc
or
mov
mov
imul
incl
mov
xor
and
loope
icebp
fnstenv
dec
jo,pt
mov
in
sub
decl
mov
movsb
jbe
cmp
mov
lahf
push
hlt
lahf
adc
jg
push
rol
mov
sar
jl
sbb
cltd
jp
push
mov
aas
iret
imul
call
out
jecxz
das
xor
scas
test
push
testl
outsb
mov
and
lcall
xor
mov
sbb
jle
or
xor
adc
imul
cltd
clc
sbb
scas
jmp
lea
stos
pop
iret
push
xorl
xchg
jl
loope
lcall
js
stos
inc
sarl
mov
popa
hlt
push
mov
jmp
and
ljmp
or
add
sub
fldcw
js
jle
mov
mov
hlt
arpl
mov
xor
inc
and
push
dec
add
fimull
lcall
push
lods
enter
mov
ret
out
pop
push
aad
enter
inc
ret
cli
jmp
dec
mov
in
pop
adc
or
add
insb
adc
mov
push
jg
ljmp
xor
shll
push
addl
pop
repnz
jns
and
lcall
int
adc
fiaddl
adc
ljmp
fiaddl
sub
sub
lahf
adc
lcall
mov
decl
into
and
push
ficoms
out
out
pushl
pop
stos
sbb
mov
fildll
loope
fcmovbe
dec
cmc
or
loopne
jl
pusha
xchg
and
movsb
and
into
add
popa
filds
jg
jmp
jg
enter
pop
mov
pop
jns
push
sub
jo
mov
fs
incl
cvtps2pi
mov
sarb
and
xchg
inc
setno
in
or
add
jecxz
lret
pop
orb
jbe
or
data16
push
or
xchg
es
cmp
or
cli
xor
jo
or
and
xor
cmp
stc
push
jg
call
ret
int3
push
inc
and
push
adc
lea
xchg
xlat
jne
and
stos
fsubrs
add
lcall
cmpsl
jnp
adc
loopne
dec
pusha
xor
in
inc
and
fbld
movsl
ja
out
push
sbb
or
mov
sub
repz
cmp
mov
aam
shlb
popa
enter
xchg
pop
xchg
cmc
inc
aaa
dec
dec
imul
sub
fcos
lcall
xor
xor
ret
mov
mov
test
andl
outsl
negl
mov
fstp
nop
cli
test
pusha
push
push
mov
pushl
sbb
xchg
adc
and
jg
xchg
xchg
out
jae
or
cmp
xchg
pop
and
xor
xchg
and
test
cmc
lods
mov
xchg
jnp
insl
leave
loopne
mov
inc
ljmp
lea
clc
xor
xor
push
testl
gs
loop
sar
test
cmp
hlt
loope
jl
idivb
push
ss
pop
jae
loop
int
inc
mov
fwait
out
cld
xchg
mov
incl
cmp
fcoml
subl
jp
loope
jne
push
sbb
int
inc
inc
js
ljmp
fs
out
gs
mov
push
xlat
sbb
cli
inc
pop
lret
ds
mov
xchg
mov
out
push
movsl
inc
jl
test
sti
mov
push
add
pop
hlt
add
insb
fwait
rolb
or
test
fs
mov
mov
insl
sbb
jmp
xor
pop
dec
mov
cmp
hlt
stos
jae
xor
sti
mov
push
pushl
push
int
mov
mov
sbb
das
jl
mov
ljmp
mov
mov
or
in
bound
push
mov
inc
aaa
out
pushl
ret
sbbl
mov
loope
leave
mov
push
int
inc
mov
jmp
jmp
and
mov
inc
lods
jp
popf
ds
xor
cs
sbb
mov
leave
push
faddl
int3
jmp
sub
outsl
dec
addr16
dec
xlat
inc
inc
icebp
adc
or
movsl
dec
push
fsubrl
dec
ss
jbe
gs
sarl
popf
lcall
sub
adc
insl
adc
xor
pop
loopne
popf
out
sbb
rolb
outsb
int3
mov
addb
sbb
adc
shlb
loop
fwait
testb
push
dec
dec
xchg
je
call
push
jmp
cmc
popf
fldt
stc
arpl
sbb
and
push
mov
xor
test
dec
decl
pop
outsl
inc
fidivrl
arpl
repnz
orl
adc
or
or
popf
dec
pop
mov
mov
inc
mov
rcr
sbb
xor
sbb
xchg
or
loope
mov
xchg
mov
jge
inc
outsb
jb
out
in
adc
and
ljmp
sbb
aas
xchg
out
adc
cmp
xor
fidivs
xchg
enter
dec
mov
lea
xor
sbb
pop
add
pop
dec
loop
sbb
clc
ja
ret
je
jns
pop
mov
mov
shll
shlb
xchg
addl
ds
movsl
xchg
lcall
rcl
or
jl
cmp
sub
sbb
aad
pop
daa
test
mov
sbb
addl
cmpsb
fidivl
mov
lock
mov
mov
mov
fisttpl
inc
iret
or
ljmp
xchg
sbb
adc
mov
negb
rorl
ficoml
daa
and
fldl
aam
jg
mov
jns
jl
jle
mov
ror
shr
mov
sub
inc
mov
lcall
jmp
popf
sbb
popf
mull
sub
add
dec
fwait
inc
mov
icebp
mov
in
and
jmp
gs
inc
sbb
das
in
adcl
push
hlt
inc
or
dec
jp
scas
dec
dec
cmp
cwtl
jae
dec
mov
fnclex
mov
mov
add
xor
decl
mov
enter
rolb
fidivrl
or
jge
sub
xchg
incl
add
xchg
jbe
jge
sti
movb
stc
dec
lret
pop
daa
sti
dec
das
ret
pop
or
xchg
insb
outsl
add
adc
in
or
mov
sub
cld
jmp
mov
rcll
mov
or
pop
cmp
jecxz
mov
fs
pushf
loopne
mov
sub
in
daa
dec
mov
movsb
arpl
popa
andl
jae
aad
sahf
pop
ss
jae
xchg
cmpl
or
incl
xor
push
lahf
sbb
inc
enter
test
dec
mov
or
jno
es
xor
les
mov
rclb
pop
rclb
or
out
ds
int
ss
and
mov
aam
mov
ljmp
fildll
dec
std
mov
incl
icebp
add
scas
or
clc
inc
fs
push
jno
lods
jecxz
decl
mov
jbe
adc
xchg
mov
call
mov
mov
xlat
jnp
out
adc
dec
sbb
das
or
xlat
pop
call
divb
insb
push
push
popa
or
bound
dec
add
movsb
pop
idiv
jmp
stc
add
hlt
jecxz
sub
adc
cmp
in
dec
ret
xchg
sti
outsl
xlat
fcom
insb
sub
pop
lock
fsubr
shll
add
and
out
jo
mov
pop
lds
decl
stos
inc
mov
xor
add
jmp
mov
sbb
arpl
dec
es
mov
scas
in
pusha
push
adc
add
sbb
pushf
xor
pop
mov
xor
inc
mov
bound
ficoml
or
mov
subl
jecxz
sarb
clc
jmp
pop
das
scas
pop
out
out
out
adc
popa
pop
stc
mov
jge
mov
je
jl
xchg
mov
cltd
jae
addl
adc
mov
sbb
jmp
popf
ret
movsb
nop
push
shlb
xchg
pop
lods
mov
stos
adc
mov
jecxz
mov
fisubrl
rcrb
push
lahf
xchg
aas
xor
out
jle
lret
jmp
add
push
mov
nop
xor
adc
dec
xchg
leave
sbb
fsubr
in
add
incl
pop
fwait
sahf
loopne
iret
xor
xor
pop
mov
dec
push
outsb
cld
daa
mov
lods
pop
inc
fxch
aad
repz
cmp
cmpsb
cltd
in
add
lahf
inc
and
adc
repnz
aad
xchg
push
push
decl
jns
ds
mov
outsl
mov
jp
cli
nop
imul
mov
adc
call
sti
mov
xor
lret
decl
loopne
pop
das
iret
inc
mov
xchg
and
add
jb
in
lcall
div
mov
call
fnstsw
pop
pop
add
stos
mov
dec
or
xchg
fsubs
or
mov
add
scas
lea
call
sbb
js
mov
not
or
adc
adc
mov
outsb
adc
outsb
xor
pop
movb
dec
xchg
aam
adc
xchg
mov
sub
dec
or
sbb
pop
mov
call
lahf
pusha
aaa
fsts
iret
cmp
add
pop
imull
xor
adc
ljmp
imul
popa
sub
in
dec
lock
adc
jecxz
loop
fs
xchg
das
xchg
out
and
divl
mov
clc
pop
fdivs
ja
vxorpd
push
cld
testl
adcl
cld
sbb
inc
loopne
or
lcall
mov
xchg
push
push
idivb
inc
add
or
xchg
cwtl
push
xchg
mov
jle
xlat
lcall
call
dec
fsubrl
je
xchg
inc
and
pop
pop
in
fisttpll
std
pop
adc
loopne
lods
shl
aad
scas
dec
popa
ret
xor
andb
xchg
filds
sbb
sahf
int3
pop
and
lcall
outsl
mov
scas
ficompl
mov
mov
add
notb
sahf
push
ror
cli
ss
decl
fstp
cmc
ds
inc
mov
cmpsb
sub
adc
inc
rorl
lods
mov
jno
ljmp
pop
or
xor
xlat
sbb
mov
pop
daa
push
js
sbb
in
dec
pop
ret
addb
aaa
mov
ud0
ljmp
jecxz
mov
rclb
jg
clc
bswap
fwait
push
pushl
shl
pop
push
dec
mov
shr
sbbb
or
mov
call
pop
ficomps
shlw
ljmp
aam
jae
sub
cmpsl
mov
mov
pop
ljmp
xchg
pop
enter
jmp
cwtl
mov
mov
sar
fucomip
jbe
lret
stc
jg
movw
repnz
mov
inc
lds
adc
pop
int
pushl
mov
cmp
dec
push
stos
imulb
or
and
fildll
adc
nop
outsb
mov
sti
push
sti
jmp
incl
xchg
adc
aam
lock
sbb
mov
call
std
into
out
mov
test
adc
push
mov
daa
and
cmp
sub
dec
add
jo
jp
or
lcall
rorb
repz
mov
jp
xor
cld
rolb
std
jmp
sub
leave
and
and
push
adc
inc
insb
mov
lcall
add
frstor
sbb
lahf
mov
or
cmp
pop
mov
mov
push
mov
fwait
aam
sbb
inc
repz
inc
mov
jmp
mov
lods
xor
fsubs
cli
xor
xor
push
or
or
call
sub
cmp
cs
addr16
add
rcrb
push
in
enter
int3
loope
nop
imul
test
popf
mov
incl
aaa
sub
lcall
inc
aam
stc
shrl
lahf
rolb
dec
scas
rcr
lock
jle
push
pop
sub
inc
dec
lock
dec
jg
jge
xchg
mov
cwtl
rorl
cmp
outsl
push
push
pop
pop
je
les
jbe
jmp
sub
scas
push
dec
clc
call
cld
inc
jb
fdivs
jnp
add
daa
jb
mov
sub
into
fildl
adcb
or
stc
dec
inc
rclb
jmp
lcall
das
jmp
xor
adc
flds
push
mov
jmp
xchg
in
cs
aaa
mov
pop
repz
pop
and
jns
loop
mov
daa
out
and
repz
inc
mov
popf
sbb
pushl
pop
shlb
aaa
sbb
sti
daa
aam
and
sbb
cmc
jo
xchg
jmp
incl
out
sbb
sbb
fwait
or
in
jl
lods
roll
xchg
sbb
icebp
pop
rolb
dec
mov
push
insl
hlt
or
mov
je
test
xchg
mov
pop
or
popf
lret
adc
xchg
cmpsb
repz
call
int3
push
xchg
imul
jl
fiadds
insl
add
mov
jmp
adc
adc
add
mov
call
jge
mov
mov
repz
lods
das
cltd
mov
inc
test
fistl
pop
dec
dec
bound
ds
jnp
push
rcrb
movsl
jp
shrb
xchg
jmp
mov
mov
add
out
push
jl
cmpsl
and
cmp
cli
adc
loop
loop
xor
mov
data16
xchg
incl
mov
inc
jae
push
outsb
push
cmp
mov
mov
sbb
sub
cmpsl
sub
dec
dec
addr16
ret
add
loope
sti
xchg
fwait
mov
add
lea
mov
or
xchg
jno
dec
xor
rcl
call
into
inc
popf
adc
sub
in
inc
jo
out
sbb
push
cmpsl
jg
mov
pop
aam
movsb
rep
cwtl
pop
pop
xor
gs
mov
loop
repz
dec
ljmp
shrb
insb
cs
cli
repnz
inc
xor
jge
ret
filds
cld
jns
cmp
popa
mov
mov
notb
push
mov
pusha
gs
push
les
call
movsb
cli
ljmp
xor
mov
or
dec
mov
dec
xchg
pop
pop
jb
cmpsl
js
cs
lock
ljmp
addr16
mov
xchg
fidivrl
sarl
movzbl
jns
test
ja
add
int
leave
mov
shrl
hlt
pop
ljmp
xchg
test
es
or
sar
test
lcall
and
roll
icebp
jl
xorl
call
pushf
mov
sub
gs
mov
rcll
into
daa
nop
rcll
mov
test
test
call
inc
xchg
adc
add
lcall
jl
jmp
xor
mov
mov
aam
fiadds
inc
enter
xor
lds
hlt
std
push
incl
mov
inc
sbb
sub
ja
mov
pop
push
sub
pop
mov
cmp
mov
gs
ljmp
aaa
les
adc
fldenv
adc
shrl
in
stos
popf
xchg
les
sub
std
mov
xor
inc
push
and
jle
lock
addr16
mov
adc
jmp
mov
lods
orl
push
popl
ja
incl
xor
sub
mov
outsb
jle
sbb
popa
mov
cmp
ljmp
dec
daa
inc
jmp
and
inc
stos
js
pop
lea
jb
dec
xchg
rcll
call
push
and
je
push
xchg
sahf
pushf
sti
les
mov
mov
call
std
mov
and
cmp
mov
clc
push
lea
add
jo
pushl
stc
push
inc
push
dec
sbb
sbb
addb
scas
xchg
or
pop
popa
mov
in
ret
fdivrl
icebp
push
loop
in
cmp
fadd
ljmp
mov
xchg
stc
outsl
es
xor
and
sbb
mov
sub
pushl
imul
mov
add
lea
and
push
dec
mov
out
je
arpl
loopne
mov
lds
jnp
mov
sbb
out
mov
add
cld
or
adc
or
mov
pushl
mov
jae
or
lea
and
mov
mov
subl
cld
or
std
push
sub
dec
jo
pushf
popf
mov
pop
stos
xchg
mov
add
mov
add
clc
popf
cs
loop
mov
rolb
xchg
jns,pt
stos
gs
decl
lds
dec
xor
inc
aaa
push
xlat
ret
cs
sub
sub
clc
addr16
mov
cmpb
xor
ljmp
pop
lret
in
jno
sbb
and
sbb
ret
imul
jmp
ret
and
int3
ja
popa
int3
das
mov
jp
ljmp
test
sub
call
add
stos
mov
faddp
clc
sub
pop
in
iret
cs
pop
je
inc
cmp
call
popa
testb
cmp
das
fs
ljmp
fwait
insl
push
mov
and
mov
std
call
addr16
mov
dec
clc
cld
ret
jo
call
xor
into
cmp
push
adc
loop
not
add
decl
sti
push
andb
lock
stos
mov
rcll
mov
mov
scas
adc
hlt
jmp
mov
sbb
or
mov
xor
dec
mov
je
sbb
bound
test
and
sbb
cmp
leave
shll
inc
xlat
xlat
mov
or
hlt
jl
add
in
mov
sub
inc
aaa
mov
cs
push
mov
iret
add
adc
push
incl
test
xor
pop
popf
jae
pushl
inc
or
ret
iret
cmp
dec
cmp
push
push
lods
add
mov
mov
aad
and
dec
sarb
aad
mov
or
cmpb
inc
jg
add
sbb
cwtl
adc
icebp
xchg
sbb
outsl
outsb
cltd
pushl
les
cmp
push
add
std
lcall
cs
add
call
aam
inc
push
scas
outsl
clc
ret
sbb
pushl
xchg
out
inc
adc
stos
cld
std
das
xchg
cmc
sqrtps
mov
fwait
mov
push
inc
inc
ljmp
push
mov
dec
rcl
outsl
jle
mov
sub
xlat
and
add
fsubs
jmp
cmp
stc
sub
mov
push
push
aam
add
stos
xchg
jmp
out
and
xchg
and
push
mov
mov
jmp
movsb
mov
dec
pop
pushl
insb
repz
push
lea
lcall
rcrl
push
xchg
out
mov
or
push
mov
aas
sti
pop
xchg
jmp
or
cmp
mov
rcrl
pop
test
jo
xchg
mov
cld
push
dec
jno
and
sti
ret
adc
cmpsl
inc
jmp
pop
loopne
pop
or
sbb
dec
mov
mov
ficompl
adc
inc
imul
and
add
jg
jp
push
pop
inc
ja
mov
pinsrw
push
or
decl
int3
mov
adc
pop
mov
pop
ret
mov
push
push
cmp
ds
mov
fstpt
jle
or
mov
sub
insl
out
sti
push
out
push
cld
jl
and
mov
mov
adc
xcrypt-cfb
cmpsl
mov
mov
mov
aad
inc
xchg
inc
adc
inc
xlat
jmp
int3
mov
sahf
push
xchg
in
mov
lcall
jecxz
rolb
loopne
push
ret
xchg
out
aas
arpl
insb
test
jne
ds
dec
jns
fs
mov
adc
out
nop
cs
mov
or
xor
jg
mov
mov
das
in
nop
ds
pop
lock
pop
sbb
xor
movsb
stc
and
sbb
call
data16
mov
outsl
outsl
loopne
xor
mov
push
pop
loop
lahf
xor
cld
sbbb
ficomps
dec
decl
jg
dec
jo
push
mov
cmp
in
sahf
pop
bound
adc
mov
dec
cmp
xor
lret
scas
shlb
jl
into
cmc
and
and
lret
mov
lahf
ljmp
clc
ljmp
int
cs
or
pusha
dec
or
scas
pop
shr
cli
loop
hlt
mov
cmp
notl
push
jle
ljmp
jp
jns
negb
shll
cs
cwtl
mov
sbb
sti
jae
imul
fldenv
cmp
jnp
in
call
xchg
in
jge
xor
jg
inc
inc
mov
jmp
pusha
cmp
fimuls
test
inc
addr16
jns
std
inc
aad
mov
pushl
xor
dec
jb
rcl
lcall
xchg
imul
pop
xor
jle
adc
push
popa
insb
leave
adc
or
sub
jne
jns
rcl
pop
imul
addr16
ljmp
cmp
pminsw
jl
mov
jmp
inc
aas
ja
lds
lcall
loopne
decl
cmp
fs
sub
lods
push
imul
out
stos
lahf
es
inc
mov
mov
jns
sbb
push
call
sbb
cmp
lods
xor
imul
mov
decl
and
lods
sub
pop
pop
fildll
stos
sub
sti
sub
add
cmpsl
insb
mov
test
les
sar
or
pop
dec
lds
sbb
cmc
call
clc
popf
or
ret
fs
jle
cs
and
jmp
iret
add
jg
outsb
jecxz
adc
outsb
add
lds
or
cwtl
pop
mov
dec
decl
push
cli
std
jnp
sub
shl
push
sbb
jp
ljmp
negl
xlat
adc
pop
inc
xchg
addr16
jmp
inc
xchg
jno
cmp
push
xor
xor
adc
jns
dec
inc
push
pop
jg
inc
jo
inc
push
and
loope
pop
int3
scas
jle
pusha
jno
xor
clc
cmpsl
add
sub
in
jg
add
repnz
sbb
jmp
adc
jb
ljmp
decl
loope
aas
jns
dec
in
inc
mov
lock
cld
fildll
mov
loopne
adc
arpl
adc
sbb
xor
dec
test
nop
loope
cmp
imul
jecxz
aas
inc
inc
fbld
clc
and
cwtl
inc
fcoml
pop
mov
mov
iret
test
cmp
insl
add
cmp
cmp
or
mov
mov
arpl
nop
outsl
call
jno
orb
mov
or
ret
and
cld
gs
mov
iret
or
pop
pushl
mov
das
lcall
mov
xchg
je
fstps
cltd
cmp
cli
cmp
je
rcrl
scas
and
adc
push
dec
mov
fistl
jg
fisubrl
cmp
xchg
pop
or
add
xlat
icebp
shrb
in
mov
movsb
adc
sbb
iret
and
jge
das
xchg
sub
jmp
das
gs
movsl
mov
add
mov
ret
mov
or
das
or
lock
out
mov
mov
or
stc
lcall
inc
aam
test
push
or
mov
clc
dec
xchg
add
in
dec
jnp
movsl
mov
fisubrs
orb
xor
push
adc
sub
xchg
xor
dec
arpl
es
rorb
sahf
cld
lcall
xor
fisttpll
iret
sbb
int
lret
int
andl
add
bound
xchg
jle
ds
cmc
cmc
xor
push
xor
jg
sbb
push
mov
jne
testl
cli
push
adc
int
lock
jg
and
ret
mov
out
add
pop
repz
popa
sub
sbb
jg
decl
shl
sarb
xchg
sbb
mov
xchg
pop
clc
dec
repnz
mov
mov
nop
mov
in
test
xlat
imul
incl
shlb
add
mov
push
add
xor
mov
mov
insb
push
inc
es
xchg
pop
iret
setl
js
loope
cmpb
sar
jmp
insb
dec
xchg
int
mov
and
and
loopne
sbb
mov
and
loope
jle
ljmp
sbb
mov
pop
dec
xor
dec
movsb
adc
mov
add
shlb
lcall
loop
xchg
sub
stos
out
lret
shlb
cwtl
xchg
add
jbe
dec
into
sub
push
lcall
pop
jle
mov
fmulp
popl
lods
subl
dec
int3
xchg
imul
cli
dec
cmp
pop
mov
outsb
pop
cld
or
stos
sub
cmpsb
icebp
incl
int
scas
sbb
addr16
outsl
dec
aad
jnp
xchg
aam
lds
aaa
std
jns
out
or
mov
leave
or
aaa
cs
mov
stos
pop
loope
jmp
imulb
iret
in
jb
stos
mov
fistpl
xchg
jle
pushl
inc
adc
jns
xchg
fcmovbe
push
test
or
test
jg
cmp
incl
push
sub
push
cmp
lods
push
nop
addr16
and
daa
xchg
sbb
jl
mov
or
pop
mov
imul
cmp
mov
test
jo
xchg
outsb
in
mov
dec
loop
fidivrs
mov
add
mov
jns
mov
push
mov
out
nop
scas
imul
xlat
orl
jnp
mov
lods
mov
jnp
xor
xchg
in
les
call
icebp
mov
mulb
fisttpll
sti
shr
sub
pinsrw
pop
pop
ljmp
pusha
add
jg
dec
out
push
sbb
and
mov
and
pop
lret
mov
mov
ljmp
jo
xchg
push
icebp
inc
insl
je
xor
xchg
push
fs
inc
js
mov
negl
sbb
xor
ret
pop
outsb
popa
adc
mov
test
pop
or
pop
pop
les
fildl
icebp
stos
cmp
add
insb
cmp
in
jmp
decl
cmp
test
insl
inc
aam
sahf
enter
stos
push
adc
fdivrl
cld
xchg
jmp
lock
sub
lds
std
mov
pop
hlt
adc
pop
imul
loop
xchg
pusha
lcall
test
pushl
into
pop
pop
push
add
fsubrl
xor
mov
inc
mov
push
scas
and
arpl
ja
mov
push
les
jno
arpl
xor
pushl
enter
jg
cmp
cmp
rclb
pop
ja
into
test
mov
call
or
add
cld
adc
sub
outsb
lret
adc
pushl
test
aaa
leave
loope
pop
aas
sub
xchg
loope
mov
stos
ds
fsub
add
adcl
mov
jg
xor
mov
sti
fisubl
sub
in
cs
sub
ljmp
enter
stos
sbb
and
push
sbb
xor
pop
idiv
push
ret
inc
decl
jmp
pop
dec
inc
mov
into
inc
test
adc
pop
shlb
dec
aaa
and
fucomp
xor
inc
ret
ss
mov
add
sbb
mov
jmp
dec
xor
aam
fbld
jne
sahf
mov
inc
idivl
gs
jbe
cmp
call
mov
push
std
jmp
dec
mov
mov
out
jp
jmp
or
inc
cmp
outsl
inc
or
adc
fldt
clc
arpl
cmp
jo
lret
pop
mov
ficomps
pop
cmpsb
das
pop
push
jne
in
jae
lea
xchg
ja
insb
scas
push
test
sbb
or
arpl
cwtl
pushl
clc
rcrl
call
or
cs
add
cli
jge
bnd
inc
movsb
push
pop
hlt
call
popf
jns
sbb
je
cs
dec
jo
cmp
cwtl
sar
ljmp
mov
jp
stc
sti
sti
and
jns
imul
sahf
ljmp
inc
xchg
call
or
stos
sub
ret
loopne
ljmp
sar
jbe
pop
add
or
and
adc
in
and
sub
incl
mov
mul
js
bound
or
dec
lock
dec
mov
fwait
xchg
xor
repz
cmpsl
sbb
pop
cmp
cltd
int
rolb
jecxz
lock
sbb
mov
sahf
mov
pop
push
mov
aad
hlt
push
mov
test
leave
shll
call
cli
xchg
xchg
aaa
inc
mov
repnz
clc
jmp
xchg
jmp
popa
pop
jne
bound
std
pop
pop
jno
ljmp
loop
daa
xchg
add
mov
fiaddl
pusha
xchg
ret
mov
mov
fsubrs
outsb
mov
divl
movsl
or
test
jmp
lret
xchg
call
jmp
sub
shrb
les
fisttpll
xchg
push
push
sub
cld
lret
mov
cmp
test
incl
pop
push
adcb
jle
pop
mov
or
mov
shll
or
ret
sbbb
stos
pop
aas
fsts
jmp
ljmp
dec
fwait
testb
mov
pop
fistpll
repz
outsb
scas
add
jg
or
pusha
cmp
lods
sbb
xor
decl
mov
bound
out
mov
xor
push
xchg
jns
push
sahf
cmpsl
mov
ds
decl
mov
add
lock
push
incl
push
adc
mov
adc
mov
arpl
rolb
ds
jg
jmp
add
sub
outsb
imul
mov
insb
pop
adc
mov
loopne
cwtl
cwtl
mov
sbbb
fdivrp
and
xchg
add
jle
adc
pop
inc
add
loope
xchg
push
mov
or
mov
xor
xchg
jo
lret
add
clc
call
mov
dec
jecxz
stc
cmp
push
dec
push
call
push
xchg
sbb
add
inc
loope
jmp
enter
mov
inc
xchg
and
jne
jle
mov
sub
enter
jo
mov
xchg
mov
lock
inc
lock
out
sbb
sub
out
xchg
mov
aad
push
push
xchg
fstpl
jg
xchg
fisttps
pop
mov
ss
cmpsb
lods
ud0
push
std
shll
mov
jmp
jns
iret
xchg
aad
ds
xor
pop
stc
call
scas
mov
xchg
je
and
daa
popf
push
insl
pop
mov
mov
sub
mov
jp
mov
mov
es
mov
test
lock
dec
adc
and
fbstp
js
sbb
dec
pop
inc
mov
mov
add
jb
andb
lret
stos
fs
sbb
mov
jmp
mov
cltd
mov
lret
push
insb
xchg
xchg
sub
fstpt
out
xchg
lock
clc
fisubrl
mov
add
das
xchg
movsl
mov
fs
mov
or
subl
dec
lcall
out
dec
scas
cmp
outsl
clc
pushl
fwait
sub
fs
dec
sub
aad
jmp
iret
frstor
insl
lret
jmp
in
loop
out
mov
jge
pop
xlat
xlat
in
mov
out
mov
xor
aaa
fadd
decl
les
dec
into
and
mov
cmp
pushl
push
and
lret
and
sbb
scas
push
push
lods
out
sub
mov
jecxz
lock
push
dec
outsb
inc
dec
and
sbb
roll
iret
lea
jae
mov
int
fistps
leave
test
pop
mov
inc
popf
pop
pop
out
movsl
sbb
lret
mov
decl
pushf
sbb
je
lods
cli
or
sahf
adc
dec
lods
icebp
pop
mov
movb
jp
push
nop
ss
push
adc
lcall
add
repnz
inc
enter
decl
lea
subl
sub
cs
jge
sub
mov
pushl
add
adc
shll
test
std
or
mov
cmp
jge
roll
sub
cmp
add
imul
decl
daa
push
aas
cs
jmp
dec
stos
in
leave
ret
inc
pop
add
clc
inc
ss
pop
lds
dec
mov
dec
and
inc
adc
nop
cmp
cli
decl
dec
loop
mov
push
push
and
mov
xchg
mov
out
testb
push
jl
mov
scas
lods
stc
rep
mov
arpl
push
lcall
jl
out
adc
ficompl
push
gs
sbb
loop
filds
shr
ljmp
std
jne
cmpsl
and
xor
cmp
and
pop
pop
pop
mov
sti
xchg
mov
scas
test
jp
test
pushl
xchg
rorl
pop
clc
mov
mov
aaa
lret
out
sbb
mov
pop
cltd
icebp
lcall
adc
pop
jae
ret
dec
jle
adc
mov
out
cwtl
push
repnz
adc
xor
ret
sbb
mov
decl
jae
sahf
or
xlat
mov
sub
jbe
addb
lods
add
std
call
fmulp
dec
add
dec
mov
adc
add
push
mov
lahf
rorl
add
cmpl
loopne
inc
pop
ja
pusha
adc
testl
push
ljmp
pop
jnp
mov
loope
adc
int
pop
add
cwtl
mov
or
cmp
xlat
jmp
into
jb
jno
mov
cli
mov
mov
jnp
repz
lea
leave
lret
jmp
jns
in
add
mov
insl
sbb
testb
ljmp
rcll
jae
inc
adc
pop
xchg
ds
push
filds
jae
jo
nop
test
fisttps
cmp
cli
cmpsb
jns
jle
inc
ret
int
push
out
add
negl
in
cs
ljmp
and
add
jle
lret
pusha
pop
inc
inc
mov
mov
out
mov
test
cltd
pop
xlat
inc
sbb
imul
loopne
mov
adc
jl
fldcw
push
testl
mov
and
test
movsl
js
sbb
add
lahf
popa
cli
fstpt
mov
push
jg
aaa
dec
cmp
mov
mov
mov
push
movsl
fildl
pushf
imul
xchg
and
xchg
and
lds
out
fidivl
emms
cmp
in
jmp
mov
pop
xchg
daa
call
and
loop
inc
jno
adc
scas
dec
es
adc
pusha
xchg
loope
ret
lcall
pop
call
arpl
dec
push
fildll
stos
lret
fbld
adc
and
jb
lcall
xor
jmp
mov
inc
lea
lret
jb
mov
pop
shr
fst
iret
nop
jmp
stos
psubusw
rcll
jp
and
adcl
jp
js
jb
pusha
in
std
ja
ret
dec
jnp
std
lahf
mov
cli
pushl
hlt
in
dec
jmp
gs
mov
std
icebp
in
outsb
dec
rcrl
addr16
sar
ljmp
test
mov
jecxz
js
inc
add
clc
filds
and
cmp
int
loopne
scas
sub
out
jns
aaa
dec
je
sub
movsl
jb
js
xchg
push
ret
or
mov
jg
aas
or
sub
mov
sbb
add
scas
xchg
std
int
dec
pop
out
test
xor
add
ja
mov
push
rcrb
test
out
jg
js
jmp
out
cmpsl
mov
inc
insb
mov
cmp
pushl
or
int3
call
pmulhuw
fimuls
pop
cmpb
cli
mov
incl
jnp
sti
push
and
push
and
jbe
inc
addr16
daa
mov
dec
add
mov
ljmp
loop
andl
sbbl
mov
decl
mov
or
jno
mov
jl
mov
icebp
xor
rorl
ljmp
icebp
inc
loope
or
gs
mov
push
sbb
jmp
nop
xchg
xor
pop
notb
pop
cli
lods
bound
test
sbb
jno
fsubrl
jb
sub
cmp
push
push
outsb
inc
popa
cmp
push
jns
aad
add
dec
sub
adc
pushf
mov
xor
jmp
push
int3
add
mov
aad
mov
shl
mov
cmp
ror
adc
incl
push
pop
add
cmp
jb
stos
sbb
and
pop
stos
pop
call
shl
sar
out
cli
ljmp
add
and
int3
push
jecxz
lds
das
adc
fst
or
decl
mov
cmp
jb
mov
fnop
cmp
ficoms
enter
aam
pop
aam
shr
es
leave
sbb
pop
int
mov
add
rcrl
jo
roll
mov
mov
push
pop
xchg
lret
lret
add
out
je
jbe
adc
fidivrs
and
lret
insl
xchg
pushf
xchg
out
clc
inc
adc
and
clc
xor
int
std
ret
push
mov
cmp
xchg
test
ljmp
lret
incb
jge
sahf
cmp
jg
inc
stc
mov
mov
arpl
ljmp
push
test
icebp
xchg
push
aad
lcall
pop
es
mov
sbb
xchg
jns
mov
dec
pop
xchg
xchg
test
adc
sub
cld
incl
jns
js
orb
sub
icebp
outsl
sub
es
pop
add
jp
push
movsl
pop
push
jno
xor
or
call
and
push
pusha
or
dec
sbb
push
test
cmp
xor
mov
add
cmp
in
lods
popa
scas
push
adc
jmp
aas
jg
loope
and
xor
call
inc
mov
aad
lods
ss
fs
push
xchg
and
es
adc
or
data16
mov
jae
outsl
xchg
out
push
movb
add
adcl
ret
xor
xlat
movsl
data16
inc
and
sub
xchg
cmp
sbb
dec
push
xor
out
les
xchg
xor
idivl
and
clc
out
sar
rorl
ljmp
add
loopne
int
fnstenv
bound
xchg
andb
adc
stos
fisttpl
push
push
decl
cmp
mov
dec
cmp
jb
fbld
push
jnp
jnp
ds
dec
jg
ljmp
xchg
pushf
jl
scas
pusha
lds
cld
cld
imul
out
pop
cmp
adc
mov
sbb
sbbb
outsb
xlat
add
cmovp
in
decl
jns
fstp
out
mov
pop
ja
mov
push
loope
fildl
mov
subl
mov
ljmp
cmp
enter
sbb
sub
mov
dec
in
push
and
sub
jg
jmp
mov
add
outsb
push
dec
dec
inc
jl
mov
adc
ret
jmp
inc
mov
filds
popf
mov
mov
adc
ljmp
cwtl
add
pop
pusha
push
jns
out
jge
arpl
jmp
pop
inc
add
xchg
lcall
ljmp
push
adc
fsubrs
test
xchg
mov
call
mov
cmpl
std
pushf
mov
popf
enter
push
inc
xchg
mov
sbb
mov
fwait
xor
insb
xor
pop
push
lds
sbb
decl
xor
mov
mov
jns
dec
inc
imul
add
mov
mov
push
movsb
jae
adc
pop
jecxz
mov
aam
mov
jb
clc
aad
pop
mov
loopne
mov
hlt
push
in
test
cmp
ljmp
fldcw
mov
cwtl
pop
mov
pop
loopne
jae
push
push
inc
cmp
fisubs
mov
out
lods
es
js
mov
loop
clc
jg
sub
cld
ret
cmp
cmp
cmp
sbb
jmp
fcmovu
jne
mov
mov
sub
sahf
cmp
cmp
std
and
and
call
cld
ljmp
lods
mov
sahf
aaa
xor
cmp
jbe
jmp
lds
lods
inc
fs
pop
addb
dec
pushf
cmpsl
shrb
clc
jmp
test
pop
fsubl
popa
cmpsl
ljmp
clc
lret
push
loop
or
das
gs
mov
call
jmp
adc
sti
popf
cli
push
push
fdivp
pusha
or
mov
sbb
sarl
clc
imul
je
mov
pop
cmc
repnz
nop
and
notl
out
aas
and
dec
outsb
xor
dec
int3
lret
push
or
dec
xchg
mov
push
mov
xchg
lds
test
imulb
cli
inc
xchg
jg
dec
cmpsl
scas
call
adc
aad
add
fmuls
push
push
out
shl
repz
jno
or
xchg
mov
sti
sub
pop
insl
rolb
jbe
dec
aad
add
mov
fdivr
in
out
scas
inc
call
sarl
add
stos
imul
pop
mov
xlat
in
jg
sbbb
fcomps
sbb
cltd
test
jle
in
jns
dec
pushl
jg
jmp
js
push
das
jo
mov
js
pop
inc
aam
or
sbb
or
call
xchg
cld
sub
sub
inc
aad
loope
inc
push
sub
mov
inc
ljmp
mov
cli
ljmp
lds
push
cmp
test
dec
adc
imul
mov
ljmp
cmp
out
fdivrp
and
xorb
cli
push
sub
aam
mov
ljmp
shr
pushf
sub
dec
xor
lods
inc
lods
push
jo
inc
movsb
incl
enter
and
loop
lods
ret
pop
mov
mov
or
test
mov
mov
push
adc
jbe
xor
repnz
in
cmc
inc
dec
sub
cmp
adc
pusha
es
cmp
mov
mov
mov
dec
mov
shlb
mov
fsubs
clc
mov
sbb
mov
push
dec
gs
idiv
fidivrs
sti
push
mov
mov
adc
cs
sbb
pop
dec
int3
call
fsubrs
xchg
and
shll
or
xor
cli
outsl
iret
ret
pushl
in
cmpsb
fldt
xchg
fnclex
push
arpl
mov
je
jle
out
jecxz
cmc
aaa
jns
sbb
xchg
push
in
sahf
inc
out
and
xor
lea
lods
adc
sub
mov
sub
pushl
int3
ret
push
or
sbb
push
data16
xchg
lahf
jg
dec
ret
mov
mov
mov
xchg
pop
ficompl
es
shl
inc
mov
jo
inc
sbb
cmpsl
add
and
add
scas
jns
ret
lcall
iret
and
in
jmp
sub
mov
shrb
clc
pop
mov
ljmp
test
sbb
loop
push
ja
xchg
sbb
jge
loopne
dec
mov
sbb
sbb
adc
call
movsl
and
das
ljmp
out
aad
popl
push
mov
ret
and
lds
decl
out
ss
roll
rcr
push
mov
outsl
mov
enter
and
pop
stos
fistl
fsts
pusha
adc
outsb
sbb
cmp
lods
lret
cmp
sub
scas
std
out
loopne
pushl
nop
pop
push
mov
jnp
mov
ljmp
pushf
or
push
in
lret
sub
mov
dec
push
jb
mov
cmp
inc
cmp
fadds
inc
in
mov
inc
repnz
addr16
xchg
sbb
pop
daa
jo
mov
sbb
jmp
jmp
sbb
out
lea
sub
clc
mov
call
sub
int
xchg
or
insb
mov
repnz
jle
les
cwtl
sbb
dec
loope
mov
jae
or
xor
addr16
sbb
rcrl
ljmp
sbb
or
popf
mov
neg
or
sub
push
mov
mov
lcall
mov
lods
or
outsl
push
popa
movl
dec
mov
das
and
mov
dec
addr16
lret
xlat
dec
ja
cli
mov
cli
or
jb
pop
adc
out
pop
in
dec
dec
and
in
insb
push
clc
fdivl
rorb
mov
mov
outsb
imul
lock
push
in
push
out
pop
enter
or
pop
shlb
sbb
ret
sub
and
inc
pusha
xor
ret
xchg
mov
or
jmp
push
xlat
push
shrb
sbb
cmc
insb
push
or
iret
push
mov
enter
pextrw
and
ret
pop
sarb
mov
or
sub
arpl
pop
mov
call
rcl
jns
lret
xchg
imull
fnsave
push
cmp
mov
and
adc
call
pop
aaa
mov
pop
push
mov
jge
add
lcall
add
add
out
dec
xor
lret
or
sub
inc
push
loopne
xor
cld
fadd
xchg
pushl
ror
lret
pandn
push
test
repnz
divl
xor
ljmp
ret
cmp
sub
pop
push
lret
dec
cmp
or
jne
pop
cld
jg
test
mov
jp
pop
add
push
xchg
icebp
push
ret
leave
dec
ljmp
mov
sbb
dec
sbb
add
sub
add
call
lahf
mov
repnz
push
jno
mov
adc
mov
int3
adc
repz
jle
mov
test
add
das
adc
out
addl
adc
cmp
sub
pop
mov
fsubr
in
lret
push
add
push
dec
lock
das
std
mov
mov
xor
dec
sub
pop
push
fisubrl
sub
sbbb
decl
stos
sti
jg
test
sub
shlb
in
pop
mov
ret
mov
ljmp
insl
mov
pop
icebp
adcl
xchg
daa
mov
and
cli
dec
lcall
xor
push
mov
jl
pop
repnz
cmpsb
pop
fnstenv
ljmp
movsb
mov
lods
pusha
pop
fcmovnu
outsb
movsb
icebp
adc
ds
jmp
lahf
mov
ljmp
seto
lea
jmp
popf
xor
iret
xchg
sahf
ljmp
adc
out
imul
repnz
push
lods
addl
jecxz
call
xlat
lea
loopne
lcall
lods
jl
loope
das
and
ljmp
test
jo
cmp
add
add
test
cld
lods
sbb
popa
xchg
mov
push
cwtl
lcall
mov
iret
pop
cmp
jmp
addl
rcl
std
subb
jmp
cmpsb
inc
es
std
icebp
repz
xor
mov
mov
fstl
stos
mov
jge
out
xor
clc
inc
lods
cli
xchg
jbe
adc
insl
xchg
punpckhdq
or
add
jp
push
adc
cmp
or
adc
test
mov
addr16
lods
xor
ljmp
out
jnp
mov
addr16
inc
jnp
add
push
jae
loop
or
adc
push
pop
adc
fcmovnu
xchg
shlb
jg
lea
xor
incl
rcll
repnz
push
push
cmpsl
stos
sbb
daa
sub
pop
jns
nop
in
test
incl
and
sub
nop
and
inc
or
sub
sub
loopne
add
std
in
sbbl
and
fwait
in
lcall
ljmp
call
fidivs
fisubl
dec
mull
mov
test
mov
add
aas
sub
call
mov
mov
cmp
or
pop
es
jnp
and
or
aaa
enter
pop
mov
pusha
out
pop
int3
test
sbb
stc
das
dec
push
cmpsb
lcall
xor
or
push
cmp
hlt
in
and
cli
mov
jge
jle
xchg
lret
sub
dec
pop
pop
mov
loope
push
outsb
inc
in
mov
decl
data16
push
xchg
stos
mov
inc
pop
insl
inc
fisubl
pop
inc
call
insl
push
fs
pushl
orl
leave
mov
push
into
inc
pop
es
jle
dec
inc
sbb
mov
cmpsl
popf
ja
pop
mov
in
fwait
sub
call
push
call
pop
je
mov
jmp
inc
xchg
subb
xor
ja
mov
dec
sub
std
out
jmp
jnp
push
inc
aam
pop
int
outsb
call
and
add
mov
cltd
xor
pushl
cmp
pop
outsl
jle
loope
and
into
pop
cmp
mov
lcall
dec
fiaddl
jle
or
popa
pushf
lret
ret
sti
mov
cmpsb
mov
push
in
pushl
inc
xchg
add
fldenv
xchg
dec
fsubrp
movsl
pop
xor
js
call
add
sub
cltd
imul
mov
mov
subb
aaa
outsl
ljmp
pushf
inc
movsl
int
pop
xchg
xchg
hlt
out
xor
lea
jb
cli
notb
add
movsb
xchg
xor
push
rcrl
mov
xchg
es
mov
dec
push
pop
data16
outsb
pop
aas
stos
dec
adc
rcll
movsb
add
cmpb
or
mov
cwtl
cld
filds
push
inc
rol
repnz
insl
mov
jg
dec
jmp
stos
ljmp
loopne
cmp
dec
jg
dec
lahf
adc
jecxz
mov
into
rcrl
cmp
xchg
push
and
cmp
mov
push
dec
clc
sarb
repz
add
scas
xchg
sub
call
pop
mov
call
sahf
test
mov
adcb
clc
in
sub
cli
mov
int
data16
jo
clc
dec
sahf
sub
pushl
mov
movswl
cmpsb
xor
cld
out
mov
cmp
fildll
mov
pop
xor
stc
pusha
ja
cmc
test
sar
fildll
sti
in
mov
inc
stc
ret
inc
push
in
pop
or
dec
sti
fldenv
add
sub
in
mov
jb
movsl
lods
sub
jnp,pn
fldt
test
pop
sub
repnz
icebp
push
ljmp
mov
nop
cmp
or
aam
insw
mov
inc
or
jmp
jmp
add
andl
fmuls
sbb
jmp
pop
pop
mov
ljmp
repz
insl
loope
mov
outsl
add
std
lcall
mov
lahf
pop
mov
in
cltd
fwait
sbb
jnp
pop
jnp
pop
xchg
push
mov
call
decl
iret
pop
shlb
or
fsubl
pop
decl
divl
std
sbb
cmp
stos
push
mov
push
and
ja
push
xor
test
jns
jg
mov
pushf
aas
mov
js
sbb
and
pushw
xor
aam
xor
call
insb
push
aaa
adc
push
pop
sbb
pop
lcall
cmp
mov
add
pushf
mov
lret
aad
rcrb
imul
mov
lcall
insb
loopne
jns
adc
inc
cs
sub
xchg
mov
inc
xchg
sub
jo
jnp
call
leave
mov
hlt
insl
jb
and
push
mov
stc
xchg
jl
sbbl
fcomip
cmp
inc
push
xchg
xlat
cmpsl
faddl
je
mov
in
cmc
inc
mov
xor
cld
jae
sarl
mov
cli
push
js
movsb
xchg
ljmp
das
push
cmp
ret
pusha
add
jl
fsub
cwtl
dec
cld
cmpsb
push
dec
daa
mov
cmp
leave
jb
pusha
or
cld
dec
push
and
bound
outsl
jno
dec
mov
or
pop
mov
insb
cltd
push
jg
arpl
cmp
fisttpll
jne
cltd
ljmp
and
scas
jl
mov
sub
pop
jae
repz
test
add
jg
rcrl
xchg
sbb
cli
push
jbe
adc
test
push
pop
hlt
loop
mov
fsubs
jl
jge
add
mov
imul
insl
js
addr16
shlb
insl
lods
sbb
jmp
in
ds
mov
mov
adcl
pushf
mov
incl
jb
dec
ror
pushf
xchg
and
fsubr
and
arpl
ja
hlt
sub
js
mov
lret
xor
popf
jg
lods
int
push
outsb
test
incl
ljmp
add
mov
enter
mov
push
mov
lea
stos
jmp
mov
popa
mov
xor
mov
cmpsb
arpl
mov
mov
shl
push
enter
mov
jb
icebp
mov
fwait
fucomp
fmull
sar
incl
cmpsb
mov
inc
ret
popa
repz
adc
sub
ds
cmp
jecxz
dec
mov
inc
leave
inc
call
mov
jle
pushl
dec
inc
or
mov
xor
cmp
adc
jmp
idiv
call
in
iret
and
and
push
ja
push
jb
jo
cmc
fmull
mov
out
adc
stc
pop
into
into
dec
cmpsb
inc
nop
in
sbbl
push
lsl
add
lcall
pop
mov
stos
dec
jnp
loop
pop
dec
jmp
mov
or
sub
pop
xchg
sub
dec
jns
and
mov
stos
ret
jecxz
and
cmpl
ljmp
inc
in
inc
imul
aad
out
mov
popf
sti
xor
dec
or
cli
mov
push
dec
lret
and
pushf
inc
pop
les
mov
dec
xbegin
loop
mov
mov
jecxz
jge
adc
and
xor
incl
stc
fsubs
jecxz
movsb
push
movsb
sbb
in
pop
sub
ficompl
out
cmpsb
sar
decl
out
repz
in
pop
xor
cmp
xchg
push
mov
pushf
xlat
out
mov
or
mov
mov
dec
cmp
js,pt
popf
jmp
dec
dec
jecxz
pop
push
jnp
in
in
bswap
data16
xchg
mov
xor
fcomip
cmc
sbb
xchg
pop
scas
addr16
xor
push
cmpsb
xchg
mov
push
adc
jge
dec
lret
sbb
push
push
mov
out
lds
divl
ds
dec
dec
fnstcw
leave
dec
pop
out
sbb
lcall
add
test
mov
xchg
jo
sbb
test
out
add
ja
mov
ljmp
and
das
xor
sub
push
ljmp
arpl
jecxz
test
and
clc
jp
sarl
jmp
add
and
mov
aam
push
int3
xor
adc
xor
add
push
lret
lea
pop
pop
dec
and
scas
push
pop
or
into
xchg
decl
lahf
jge
pop
mov
stc
call
call
dec
aaa
in
dec
jbe
ds
xor
push
decl
outsl
in
dec
mov
addr16
inc
and
add
sti
es
mov
cltd
mov
fdivrs
cmp
sbbl
mov
add
pop
movsb
mov
xchg
hlt
xchg
xor
cli
mov
dec
cmp
adc
add
notl
stos
paddq
cwtl
lods
call
push
pop
lret
outsb
inc
test
push
int
std
bound
enter
and
js
test
arpl
addr16
pushl
aam
sahf
cmp
mov
lret
call
cmp
push
subl
mov
scas
clc
sbb
out
rol
push
add
jnp
fsubrl
sub
in
jb
push
lds
fcomip
pushl
and
inc
iret
sub
cli
pop
out
aad
lods
test
dec
incl
sbb
mov
sub
stos
push
ret
and
mov
mov
ficomps
std
stos
daa
mov
shll
mov
ljmp
cli
adcb
lods
mov
mov
nop
dec
pushf
lret
mov
arpl
fimuls
enter
out
aam
mul
jmp
loopne
stos
loopne
lcall
xchg
lods
pop
repz
cmp
xchg
outsb
sbb
adc
ret
loopne
sbbl
xor
add
mov
mov
movsl
and
pop
cmp
jnp
ss
fimull
cwtl
ljmp
repnz
cmp
ja
cs
cwtl
xlat
stos
push
push
push
outsl
ljmp
ja
hlt
sbb
mov
stos
cmp
lahf
xor
jo
sbb
test
sbb
push
rclb
fiadds
sub
shlb
stc
inc
xchg
push
pop
movsl
ja
addl
stc
and
and
mov
cmp
push
adc
cmc
inc
test
sti
jne
fs
call
repnz
mov
std
pop
or
sub
jo
push
cli
sub
cmpsl
or
cmp
lods
mov
out
add
cmpsl
in
decl
mov
push
or
iret
jmp
add
xchg
xchg
push
mov
push
or
push
cmc
fadds
out
jnp
jl
cmp
shll
mov
push
and
jae
adc
jmp
fs
jno
sbb
bnd
cmp
ja
cmpsb
jo
or
mov
push
push
sahf
repz
incl
test
cmpsl
inc
sbb
mov
stos
in
inc
xchg
orl
mov
push
or
mov
or
inc
jae
cmp
sub
mov
pushl
pushf
outsl
sbb
lods
jmp
inc
dec
aaa
test
lods
ljmp
mov
incl
push
push
cmp
mov
dec
xor
pop
rcrl
testl
incl
shrl
sub
adc
test
push
mov
aas
mov
inc
fld
push
cmp
movsb
jmp
mov
mov
cmpsb
sahf
scas
dec
or
jl
repz
sbb
fs
cmpsb
ss
js
in
and
jns
stc
adc
jl
sarb
aas
aam
dec
dec
jg
dec
lods
dec
add
punpckhwd
sub
jmp
enter
push
and
mov
jmp
mov
cmp
repz
sub
jb
filds
xchg
add
add
mov
incl
cld
stos
mov
fsub
push
xchg
sub
je
jp
pop
jae
add
pop
or
jge
xchg
adc
mov
mov
ljmp
jle
jno
insl
cmp
cwtl
adc
cld
xchg
repz
xchg
push
cmc
pusha
hlt
sahf
xor
outsl
sub
insb
test
lahf
clc
jmp
add
sub
std
lock
addr16
jg
nop
jg
repz
aam
mov
loope
out
bound
test
adcl
jge
pop
pop
dec
sub
lcall
adc
cs
inc
mov
xchg
sub
in
cmpsb
aad
jmp
out
leave
roll
out
sub
mov
into
js
lret
pop
mov
cmpsb
sub
mov
cs
inc
sbb
mov
push
sub
xchg
sbb
and
jne
call
pop
cmp
pop
and
fistl
dec
arpl
add
push
call
sbb
lods
cmp
pop
jg
adc
xlat
jbe
xchg
les
and
decl
sarb
mov
int
inc
shl
sub
pop
adc
mov
and
jnp
adc
pop
mov
push
mov
mov
pop
mov
sub
popf
sub
mov
scas
jb
lcall
push
xchg
test
xchg
or
int3
out
cmp
jnp
fcomi
sub
repz
pushl
iret
sub
test
cs
fdivl
cmpsl
add
mov
jl
dec
push
or
dec
push
out
cmp
test
mov
in
dec
mov
add
pusha
mov
mov
repz
rcr
push
push
push
push
aas
hlt
and
mov
or
jbe
iret
pop
incl
rorb
pop
mov
pop
xor
arpl
ljmp
or
incl
pop
aam
mov
shrl
inc
push
mov
jmp
adc
test
cld
jge
std
jbe
mov
push
bound
dec
mov
je
std
loopne
and
mov
adc
push
std
cmpsb
add
push
push
adc
adc
add
sbb
mov
imul
add
push
pushl
fs
push
sbb
jecxz
cmp
and
mov
push
cltd
sbb
mov
mov
je
in
xchg
mov
xchg
mov
lret
cmp
lcall
xchg
test
aaa
mov
movsl
add
into
lret
fdivrl
adc
scas
or
stos
pop
xlat
cmpsb
xor
inc
push
cs
pushl
cmpl
in
mov
inc
into
xchg
stos
fwait
adc
stc
mov
mov
jnp
push
mov
rol
imul
outsl
aad
dec
xchg
dec
mov
sti
ja
imul
insl
ljmp
fwait
xchg
lds
movsl
pusha
decl
mov
xor
xlat
adc
mov
jge
mov
cs
out
xlat
int3
hlt
fadd
jg
sub
inc
outsb
adc
xchg
pop
cmp
mov
dec
push
pop
hlt
fidivrs
sub
ja,pn
inc
push
loope
hlt
sti
mov
sbb
loop
dec
sbb
xchg
js
and
jmp
mov
mov
fildll
pop
repnz
cwtl
lahf
sub
in
cmp
insl
lods
and
mov
mov
out
jg
cmp
cmp
cmp
out
nop
fcmovu
mov
lret
orb
movsb
std
lcall
aaa
outsb
add
ja
into
sbb
pop
lods
adcl
add
jp
cmp
sbb
mov
mov
aas
and
sarl
popf
cli
scas
loop
xorb
ljmp
fdivl
lret
mov
out
sub
test
jle
arpl
les
rcr
outsb
fistpl
clc
mov
inc
loop
iret
jmp
stos
sbb
enter
decl
push
in
je
jnp
call
fs
sub
cli
imul
jno
jl
pop
push
adc
and
incl
loope
add
push
jo
fcoml
mov
xchg
inc
push
movsb
cmpl
call
fs
test
mov
movsb
mov
or
cmpsl
or
xorl
mov
clc
jns
fbstp
sub
shll
outsb
stos
pushf
mov
xor
ljmp
mov
scas
int
mov
mov
outsl
mov
pop
mov
mov
xchg
and
cmpsl
jo
incl
push
das
mov
test
mov
or
sub
or
cmp
inc
fdivrl
sti
punpckldq
lods
or
sub
add
mov
bound
jecxz
push
shlb
cmp
insl
inc
xchg
xchg
rorb
in
xorb
jecxz
cli
gs
mov
cmp
es
pop
fcompl
movsb
popf
test
mov
mov
jg
lret
jle
pop
je
and
es
mov
xchg
cs
insl
cmp
int3
decl
mov
lods
aam
es
inc
cld
and
repz
cmp
cmpsl
bound
pop
scas
decl
arpl
add
sarl
adc
jns
cmp
lds
test
jge
adc
push
push
mov
mov
rcr
adc
ret
sub
decl
shl
loop
fstpt
ss
cmpsl
xor
movsb
xor
icebp
push
rcrl
xchg
repz
inc
pop
jle
adc
fsubr
leave
test
mov
ljmp
lds
push
in
ljmp
and
cwtl
jnp
notl
cmc
lahf
fnstsw
mov
inc
into
fmull
cmp
inc
dec
pushl
lret
push
jle
or
out
and
insb
addl
inc
std
decl
sub
pop
imul
cmp
fs
lcall
cmp
dec
push
fldcw
mov
ror
pop
jle
push
fdivrl
je
mov
mov
mov
or
imul
lret
pop
notb
sub
cmp
add
jmp
fcmovnu
xor
push
add
daa
jmp
jne
mov
lret
pop
jmp
mov
inc
in
mov
sub
mov
cmpsl
mov
or
lock
incl
jnp
jg
lds
jae
dec
iret
inc
mov
idivl
mov
lcall
mov
push
out
outsl
mov
sub
dec
fnstsw
orb
jns
into
dec
mov
aas
cmp
call
sbb
xlat
jl
stc
pop
jae
ret
dec
repz
lock
imul
call
sub
fxch
clc
adc
mov
decl
inc
push
js
mov
mov
scas
add
sub
adc
jmp
sbb
mov
in
mov
xlat
movsl
outsb
fists
mov
decl
sbb
push
sti
rcll
mov
sub
sbb
add
mov
and
pop
idiv
decl
dec
imul
repnz
mov
ss
xor
push
lcall
lret
popa
or
js
mov
iret
repnz
cmp
loopne
mov
cltd
jmp
cmp
repz
xchg
sub
test
cmp
stos
sbb
cmovo
inc
inc
jle
ljmp
mov
out
clc
out
lcall
pop
jb
cwtl
and
div
repnz
cli
sub
sub
inc
fisttpll
add
aaa
push
incl
call
mov
cli
stc
aaa
pusha
fldenv
f2xm1
xor
dec
iret
lds
and
or
mov
stc
adc
shl
dec
fwait
sarl
mov
js
push
jl
xchg
lods
mov
movsb
jae
fst
jns
je
push
dec
clc
int
call
dec
jne
decl
push
jo
jge
or
inc
repz
jl
roll
scas
push
sbb
lcall
pop
jl
fs
clc
push
testl
or
xchg
mov
pop
ss
into
mov
lcall
pop
inc
mov
xchg
andb
adc
outsb
lahf
cld
adc
stc
jo
inc
out
and
add
mov
dec
in
and
push
aam
mov
decb
jns
outsb
mov
cld
xchg
sbb
dec
subb
dec
xchg
dec
scas
movsb
add
fmul
stos
push
jp
sahf
jns
xlat
in
sub
call
jmp
das
mov
fmull
sub
insb
jle
mulb
or
adc
mov
jecxz
mov
repnz
test
clc
mov
rol
and
fstps
mov
aaa
adc
push
or
inc
lods
pushf
popf
cmp
xchg
ds
jp
call
incl
push
repz
in
jb
icebp
adc
lahf
ja
mov
cmpsl
inc
inc
in
pop
fmuls
rcll
dec
cmp
xor
iret
lock
dec
pop
int3
push
stos
jmp
or
ret
and
jb
inc
cld
movsl
adc
int
inc
mov
negb
out
fdecstp
xorl
sub
lahf
mov
inc
and
push
push
lods
lds
cmpsb
cli
mov
or
fcmovnb
call
loopne
stos
bound
xor
hlt
sbb
jp
mov
insb
mov
nop
cwtl
push
add
loope
nop
xchg
inc
lcall
fnstenv
sub
fsubl
inc
sti
push
sbb
sbb
pop
jnp
test
fdivr
xor
xchg
adc
push
mov
mov
jo
cmp
pop
mov
cld
mov
outsl
cmpsl
xor
and
adc
push
movsl
into
mov
mov
lea
add
iret
scas
mov
ja
packuswb
adc
mov
dec
call
ret
fiaddl
nop
arpl
cmp
lock
int3
sbb
sbb
inc
movsl
out
add
call
dec
push
mov
mov
lcall
aaa
sbb
aaa
adc
js
jno
adc
fimull
and
jg
mov
inc
dec
push
adc
iret
jo
jae
call
or
jg
jmp
inc
mov
inc
addb
leave
data16
lods
mov
ja
mov
movsl
mov
movsb
adc
aam
push
xchg
ficomps
xor
scas
cmp
pop
std
dec
jecxz
es
mov
xor
jl
or
sbb
cmpsb
add
pushl
jb
cmp
push
xor
daa
enter
testl
and
into
push
jmp
pop
shlb
mov
xchg
mov
inc
mov
test
loop
aaa
add
xor
or
rorl
push
mov
insb
int3
pop
fsub
inc
push
stos
mov
negl
cmp
ljmp
ljmp
call
mov
xlat
andl
cmp
mov
pop
hlt
sbb
pop
dec
mov
incl
mov
test
and
pop
inc
clc
sub
sahf
jmp
cmp
jge
test
sub
inc
les
roll
lock
fwait
pop
incl
fwait
aam
cwtl
push
dec
cwtl
int3
icebp
adc
or
aas
mov
and
and
dec
cmp
dec
repz
pop
xchg
push
bnd
daa
shl
pop
das
js
and
rorl
addl
pushl
jns
fisubrl
loopne
mov
jmp
sub
mov
inc
orl
sbb
iret
call
std
mov
enter
sub
outsb
dec
call
out
stos
jmp
incl
call
fisttps
outsb
mov
movsb
mov
ja
mov
into
mov
int
push
inc
jmp
test
je
movsl
xlat
dec
in
cmp
xor
in
and
ljmp
mov
dec
adc
jns
pop
ss
push
iret
or
sar
mov
mov
stos
adc
xchg
sub
and
out
add
push
cmp
faddl
subb
jle
fsubr
xchg
repz
pop
std
jmp
xorb
movsb
mov
mov
lods
dec
shll
sub
push
and
pop
inc
bound
cmp
mov
scas
fists
arpl
cwtl
dec
icebp
addr16
lahf
and
jg
inc
mov
icebp
push
push
out
pushl
shll
jmp
cs
les
in
sbbb
loopne
pop
lcall
pop
imulb
jmp
and
mov
mov
enter
jae
out
imul
cwtl
lahf
inc
jp
cmp
adc
ds
test
sub
lret
movsl
incb
cmp
inc
pop
cmpsl
xchg
stos
sub
popa
jmp
add
or
adc
add
inc
and
pop
shrd
out
fwait
mov
test
xchg
ljmp
test
push
sub
xchg
fwait
out
add
mov
fcomip
ljmp
mov
and
movsb
push
mov
test
mov
pushl
push
and
cmp
scas
pop
xor
aaa
mov
fwait
or
nop
stos
pop
mov
cld
testb
sub
mov
adc
sub
jg
ljmp
in
mov
ss
mov
sub
mov
fwait
rcl
cmp
adc
incl
out
push
mov
jge
sbb
inc
ret
xchg
imul
dec
mov
cmpsl
adc
faddl
mov
sbb
repnz
ficoms
mov
decl
sahf
ret
mov
notb
adc
adcl
mov
xchg
push
jg
xor
jl
int3
ret
leave
stc
cld
sbb
sub
lods
or
xchg
clc
arpl
lcall
inc
xchg
jo
or
je
enter
mov
mov
cmp
sub
dec
xchg
bound
mulb
dec
scas
std
into
or
lcall
out
inc
mov
out
popa
mov
adc
sti
shlb
dec
dec
xlat
jmp
pop
mov
adc
mov
outsb
mov
enter
arpl
adc
jg
bound
lock
ss
iret
inc
int
int
mov
mov
sarb
data16
sbb
xchg
sbbb
fistpl
xchg
push
adc
shr
inc
out
addl
decl
push
js
push
bound
add
push
push
jmp
cwtl
pushl
das
ds
cwtl
push
or
push
loope
push
mov
lcall
or
into
mov
int3
jo
sbb
fistpl
fwait
cld
jle
ss
xchg
js
ja
inc
mov
inc
mov
sbb
jmp
aas
sub
mov
pushl
stos
inc
enter
mov
pop
xor
jmp
dec
sub
inc
xchg
out
sub
ud0
loopne
mov
test
mov
mov
addr16
mov
jp
xchg
pop
xchg
out
cli
lcall
sbb
push
sub
ficompl
or
dec
test
inc
sahf
clc
pop
xor
inc
call
mov
mov
shlb
daa
test
sub
out
mov
push
mov
dec
push
int
mov
mov
xor
or
push
jl
pop
xchg
sub
jns
push
in
lcall
repnz
mov
fisubl
movsb
pop
out
ret
rcll
cmpsl
mov
or
and
jmp
rolb
out
xchg
mov
pusha
cmpb
jecxz
xchg
scas
fistpll
pop
scas
rol
ljmp
andb
outsb
pop
sbb
sbb
lret
jne
cmc
icebp
lds
out
cmp
mov
or
and
out
pop
jp
xor
pushl
repz
mov
sub
push
mov
xor
fmul
outsb
mov
sbb
pushl
jb
push
or
sbb
mov
push
and
pop
scas
mov
std
das
xchg
loopne
lcall
mov
sarb
mov
add
sub
cli
mov
push
jecxz
test
dec
dec
mov
xor
jb
mov
scas
lock
pop
jo
add
jae
arpl
mov
dec
cmpsl
jmp
mov
add
jge
aas
movsb
xor
mov
cmp
xchg
bound
lods
push
dec
cs
adc
in
bound
shl
call
jmp
fdivr
ss
insb
out
imul
rol
incl
cwtl
movsl
mov
adc
gs
sbb
sub
mov
mov
xchg
push
mov
sbb
push
les
cld
aas
out
jg
mov
bound
sub
xor
xchg
sti
fcmovnb
mov
adc
jp
mov
lock
lret
aaa
js
xor
add
out
sub
sub
lcall
pusha
arpl
andl
mov
inc
jbe
fwait
xchg
xchg
repz
push
cmp
lcall
add
sub
cld
scas
out
cmc
cmp
das
in
test
ljmp
xchg
and
test
shlb
fildl
dec
cmp
insb
insl
stos
mov
cld
out
jp
xchg
or
bound
or
and
test
fldln2
popa
int3
xor
int3
arpl
outsl
mov
sub
movsb
cwtl
inc
mov
incl
pop
pusha
mov
enter
imul
push
pop
fsts
decl
jae
or
ret
push
mov
jp
inc
sub
cmp
mov
lcall
mov
dec
test
push
movsl
dec
lcall
fwait
push
out
push
pusha
into
push
inc
shrb
out
inc
out
xchg
pop
ljmp
cmp
hlt
adc
cmp
xchg
inc
jbe
or
add
inc
add
out
jnp
and
jg
mov
into
add
mov
mov
push
pop
jmp
inc
push
fnstcw
and
push
jge
imul
sbb
jecxz
and
icebp
jo
mov
lods
ljmp
mov
pop
cli
xor
mov
and
scas
cltd
adcl
into
mov
andb
shll
or
adc
in
repnz
adc
dec
mov
dec
cli
lcall
and
and
mov
cmp
mov
pop
push
addb
lock
lock
test
mov
scas
adc
das
das
mov
jg
push
fstl
fcompl
test
ffree
push
mov
decl
xchg
subl
cmp
stos
adc
jg
sbb
jg
mov
dec
or
sarb
mov
xchg
or
cli
push
sbb
adc
push
cmp
adc
ljmp
xor
nop
ss
popl
jo
xor
test
ljmp
lcall
cmp
and
dec
push
jmp
test
xchg
mov
in
clc
dec
and
inc
sbb
movsl
outsl
fs
mov
out
sub
mov
xchg
or
push
dec
xchg
xor
inc
cwtl
cmp
adc
cmp
pop
mul
out
or
pop
decl
xlat
adc
sbb
fstpl
cmp
pop
test
fadds
jb
cltd
sub
or
xchg
ss
sub
imul
lret
mov
sti
mov
dec
mov
inc
arpl
xchg
mov
inc
mov
xchg
fs
aas
sti
add
add
and
adc
fcmove
dec
cmc
decl
and
push
sbb
sub
mov
pop
fbstp
repz
aad
xor
mov
ret
add
aaa
pop
fs
ljmp
dec
fwait
das
dec
jge
ret
inc
dec
jl
out
sti
adc
jb
ja
inc
es
pushl
sub
cmp
add
sti
in
cmpsb
or
movsl
mov
mov
fcomip
and
jo
push
sbb
jbe
addl
ret
lea
and
xchg
movsb
push
mov
add
outsl
xor
xor
pushl
pop
push
hlt
int3
push
pop
xchg
push
fisubrl
addl
and
shrb
call
or
inc
pusha
or
or
pushw
sbb
push
dec
jns
pop
into
push
outsl
cli
xchg
stc
int3
pusha
fimuls
or
ljmp
push
addr16
or
dec
das
popf
aad
orb
pop
xchg
call
add
dec
loope
xor
sub
xor
icebp
or
xor
inc
mov
std
loop
cltd
and
mov
xchg
cmp
pop
in
fsubp
add
xchg
inc
in
mov
ljmp
pusha
cmc
loop
xor
push
jg
xchg
push
sub
xchg
stos
iret
push
decl
cmp
push
shlb
xlat
push
int3
sbb
jp
xchg
jmp
movl
add
jne
sbb
bound
loope
add
call
hlt
xorl
inc
call
mov
out
dec
test
cmp
mov
add
lea
ja
test
jle
cmpsb
test
fmuls
pop
jb
fcomip
dec
mov
divb
lea
mov
scas
js
push
aas
sbb
sbb
sbb
cmp
pop
fnsetpm(287
cmp
mov
loope
mov
in
js
mov
sub
data16
adc
jmp
cmp
das
mov
loop
push
stos
test
outsl
push
test
dec
sub
insb
fistps
loope
ljmp
mov
mov
mov
lea
mov
inc
sub
stos
sub
loop
mov
jbe
mov
fwait
cwtl
mov
push
mov
inc
pop
xor
test
pop
lea
jb
or
sbb
orb
inc
sub
sub
cmp
pop
cmp
ds
or
decl
js
push
push
mov
pop
in
sub
mov
sub
pusha
movsb
jbe
xor
clc
decl
sbb
loope
fsubrl
add
call
int3
mov
scas
leave
push
ja
in
jbe
loopne
div
push
cmp
cld
lcall
jbe
jne
in
shll
mov
mov
push
ljmp
faddp
cmpsl
cmp
ret
lcall
movsb
mov
scas
lret
xchg
flds
jl
cmc
dec
jmp
scas
clc
incl
repz
cmpsb
xlat
lret
pop
dec
dec
add
iret
or
cwtl
cmp
cmc
daa
subb
mov
jb
dec
cmp
or
adc
mov
call
or
lahf
ljmp
out
sub
add
iret
push
addr16
jo
decl
shlb
pop
loope
lret
scas
outsb
jb
pushl
cmp
enter
shlb
incl
or
mov
and
iret
and
push
push
xchg
push
adc
loop
movsl
and
cmp
adc
cmp
fdivrl
rcrb
pop
and
push
mov
popf
and
movsl
bound
ljmp
and
cmp
test
outsl
adc
clc
loope
scas
mov
out
insb
fwait
sbb
push
out
scas
mov
cwtl
xchg
xchg
andb
inc
cmpsl
movsl
jns
dec
xchg
outsl
sub
cmp
dec
cmp
and
sbb
fst
jbe
cmc
test
add
mov
sarb
lcall
mov
lods
mov
or
stos
dec
ret
and
movsl
adc
out
jecxz
or
lcall
mov
and
jmp
and
add
minps
mov
inc
into
mov
sub
sbb
xchg
cmp
loop
fisubs
push
out
sub
int
adc
in
inc
cmp
scas
push
mov
adc
pop
mov
in
sahf
add
xor
ds
insb
decl
add
inc
stos
lock
sbb
or
out
cmp
xchg
call
stos
jge
xchg
dec
push
jmp
pusha
adc
mov
jl
or
pusha
fcomp
xlat
sub
jmp
mov
inc
ds
or
jg
rcrb
jp
dec
pusha
ficoms
mov
insb
cmp
stos
add
push
insl
fnsave
ret
adc
ljmp
jmp
xlat
stos
pop
and
jne
add
lods
jp
jge
sub
repnz
scas
cli
ljmp
out
xor
and
sbb
leave
inc
sub
fldl
dec
out
pop
push
stos
ljmp
fcomip
in
ljmp
je
arpl
mov
or
xchg
jmp
jmp
cmp
flds
cmovp
mov
ja
not
rolb
fisttps
imul
ljmp
adc
lret
sub
std
ljmp
sbb
sarl
push
jmp
push
adc
in
ljmp
jecxz
pushf
bound
adc
test
arpl
add
cs
push
add
mov
push
sbb
jecxz
mov
inc
mov
inc
imulb
cmp
mov
push
and
addps
in
inc
imul
dec
nop
jmp
adc
incl
jo
mov
inc
push
and
and
cmc
into
test
pushl
roll
jl
js
cltd
xchg
mov
stc
adc
and
lcall
movsb
push
arpl
mov
cmc
clc
and
inc
es
add
jge
pop
sub
inc
ljmp
and
cmpsb
fsubp
push
lcall
stos
decl
cmc
mov
inc
jecxz
pop
dec
scas
jae
out
xor
push
leave
push
pop
fidivrs
mov
mov
push
movb
mov
test
stc
lds
mov
pusha
into
popl
sysexit
cmc
or
pop
push
std
pop
pop
lock
xor
add
cmp
sub
mov
add
lods
sarl
in
jno
cld
jg
mov
sbb
fidivs
mov
jl
jp
lcall
pop
jo
out
dec
push
lock
pop
push
pushf
jg
pushl
mov
mov
inc
je
mov
mov
xor
jp
out
fnstcw
out
adcl
lcall
aam
movsl
aaa
cld
pop
mov
push
xor
and
mov
cld
adc
sar
outsl
sub
xchg
mov
fstl
xchg
mov
out
add
out
mov
stos
push
push
hlt
mov
pusha
xor
mov
inc
adc
sti
int3
add
inc
lds
pop
stos
cmp
inc
jns
fidivrl
incl
fdivrp
stos
fldenv
mov
and
pop
fwait
xor
decl
in
adcb
sbb
adc
mov
push
inc
je
mov
jl
mov
cld
aam
lds
xlat
cld
lcall
mov
test
sub
inc
jge
stos
cmp
mov
inc
int3
sbb
pop
sbb
fwait
out
push
ret
lods
sti
sub
ljmp
mov
jge
push
aam
sub
mov
movsb
jne
pop
mov
std
cmp
mov
push
jecxz
jmp
std
ret
mov
popa
xorl
in
add
pop
hlt
lock
jmp
pushl
mov
loopne
mov
out
pushf
pop
adc
cld
jns
das
jecxz
sti
pusha
jl
jg
decl
ret
sub
sub
jo
hlt
pop
mov
std
int3
lcall
ljmp
int
sbb
fcmovbe
stc
stos
out
inc
das
adcb
rcrl
imul
jne
dec
pop
imul
bound
testb
jge
pop
mov
xor
push
or
jmp
push
mov
dec
mov
fistps
pop
and
mov
scas
loop
and
or
sub
jg
test
push
bound
lock
pop
repz
mov
pushl
jg
cltd
les
stos
faddp
sbb
imul
xor
test
icebp
imul
xchg
out
ds
dec
js
ror
call
inc
dec
out
push
sub
lods
push
sub
sbb
add
mov
scas
in
imul
in
mov
iret
ret
repz
decl
mov
sub
aad
lods
out
dec
inc
popf
or
mov
push
dec
orb
or
lcall
or
xchg
xor
imul
rcr
ds
cmp
fs
cmp
sub
bound
stos
cmp
ljmp
lds
dec
jno
data16
push
adc
cmp
mov
cld
cmp
mov
imul
push
mov
in
rcr
push
xchg
negb
mov
pop
mov
cmpsb
lods
sub
fmull
lock
dec
iret
popa
inc
gs
sti
xchg
incl
gs
push
or
adc
lock
je
lcall
jnp
or
fs
fisubs
ror
scas
scas
jbe
push
ds
push
pop
cmc
inc
pop
mov
in
cmp
or
fldenv
jno
cmp
inc
sbb
and
ljmp
popa
inc
jle
test
or
jo
test
imul
mov
sbb
frstor
cmp
movb
loope
cld
cmpsb
jg
or
fisttpl
in
cs
push
fistl
xchg
notl
jno
jg
decl
movsl
pop
dec
push
inc
sbb
stc
xchg
lds
jle
cmp
out
dec
add
loop
lods
movsl
loop
inc
incb
pusha
mov
xor
add
ja
rcl
mov
daa
jae
out
out
lds
out
decl
subl
xchg
decb
sub
lods
mov
or
stc
or
sbb
lcall
insl
repz
fstpl
clc
mov
xor
dec
test
les
mov
decl
mov
mov
sub
loope
push
or
pop
fnstcw
lret
aas
and
xchg
xchg
jmp
repnz
lahf
cmc
push
loopne
arpl
dec
test
js
or
inc
aad
xorb
incl
sub
sub
inc
ljmp
leave
sub
jge
jecxz
test
mov
out
call
xor
push
fadd
cmp
roll
cmp
sub
mov
mov
pushl
jo
cs
and
repz
stc
jns
xor
imul
iret
inc
js
cmpsl
cmp
mov
add
cmp
aad
insl
xchg
sub
cmp
lcall
mov
in
dec
sbb
lea
push
imul
sbb
aad
aam
add
cld
sbb
loopne
sub
jmp
incl
add
lea
in
mov
fistps
pop
stos
cmp
pushl
sti
popa
je
cmc
movsb
fdivs
rep
ret
ffree
popa
inc
mov
decl
in
test
sbb
frndint
loop
pop
xchg
lds
xchg
flds
out
mull
pop
icebp
ljmp
in
out
inc
jno
xchg
jae
and
push
fsts
data16
fwait
dec
jl
push
xchg
and
sbb
popa
adc
inc
cld
fcmovbe
mov
xchg
and
test
lret
sar
incl
xor
mov
shlb
loop
pop
fdivs
hlt
pop
loopne
inc
pop
js
clc
dec
addr16
adc
mov
lods
cmp
sbb
gs
cmp
mov
movsb
xchg
add
and
mov
imull
mov
jmp
cmc
pop
inc
pop
stos
mov
xchg
mov
sub
sbb
dec
mov
stc
imul
out
xor
sti
mov
lcall
testb
cmp
jne
mov
add
cmpsb
call
xchg
int3
shlb
js
fxch
lcall
cs
add
and
mov
push
out
pop
lock
sub
push
add
gs
jl
repnz
jne
ljmp
push
lods
mov
dec
insb
sbb
cmp
nop
inc
iret
mov
cld
loopne
test
push
or
xchg
add
rcll
pop
xor
dec
adc
mov
pop
aam
jno
into
xor
jge
sub
jno
mov
int
dec
mov
xchg
jp
sub
shlb
mov
clc
stos
clc
lcall
jb
mov
and
lds
lds
jmp
les
je
or
in
ljmp
in
xchg
bound
xchg
mov
sbb
movsb
xchg
rorl
xor
sub
adc
and
push
jg
or
ss
and
cmp
insl
out
add
fbld
rclb
mov
in
and
mov
mov
sbb
decl
cmp
or
xchg
lods
jecxz
sub
push
xor
cwtl
in
jmp
pop
pop
push
mov
inc
xor
pop
xchg
inc
adc
sbb
add
xchg
call
imul
mov
dec
dec
mov
dec
orl
sarl
dec
sbb
icebp
push
jge
jl
ffree
or
cld
lcall
adcb
sbb
lods
out
sub
push
pop
sbb
jno
cli
cli
ljmp
jnp
sarl
mov
jl
iret
pop
lods
movsb
pmullw
inc
mov
decl
sub
pop
mov
dec
roll
shll
scas
push
or
adc
repz
inc
lds
ljmp
sarl
inc
sbb
jno
mov
pop
nop
repz
jmp
mov
aas
lahf
bound
je
movsb
js
neg
sub
cwtl
arpl
sahf
jg
test
jns
cmp
mov
dec
sub
call
das
cmp
loopne
sbb
ret
fisttpl
fcoms
mov
shl
std
cwtl
xchg
xchg
ljmp
mov
jb
mov
xor
jp
ficoms
aad
outsb
testb
daa
test
or
push
adc
xor
mov
push
repz
decl
dec
imul
jg
test
popa
xchg
dec
mov
cli
pushl
sbb
cmp
out
lret
sub
push
test
fisttps
push
in
lret
insb
xchg
lahf
sub
xorl
decl
pusha
lds
sbb
rorb
mov
cmp
mov
or
cmp
cli
mov
mov
lahf
adc
push
dec
dec
dec
hlt
std
lcall
insb
pop
out
sub
sub
add
arpl
jl,pn
je
lock
inc
mov
add
ss
lahf
int
sbb
ja
lahf
xlat
mov
cmp
mov
sub
pushl
xor
ja
fucomip
sub
pop
inc
pop
icebp
mov
fwait
test
decb
mov
add
jmp
cmpsb
adc
stos
mov
adc
push
xchg
mov
pop
lock
faddl
sub
arpl
lahf
sahf
sti
jg
pusha
xor
jo
aam
in
xor
incl
inc
dec
divl
xchg
aad
frstor
dec
or
jnp
shlb
call
lods
insb
mov
cmp
je
sub
push
cmc
iret
xlat
mov
cmc
out
lahf
mov
lcall
jns
lahf
in
xchg
bswap
mov
scas
fldenv
shl
jp
mov
ljmp
add
xlat
mov
lcall
dec
add
add
sub
loopne
and
lcall
loop
int3
and
mov
iret
lea
cmp
loope
mov
push
movsl
sub
sub
mov
insl
sbb
xchg
fldenv
test
sti
add
cmpsl
repnz
loope
call
test
pop
outsb
repz
cltd
mov
and
cld
cld
lcall
filds
test
push
xchg
jmp
inc
adc
xor
lcall
sub
insl
xchg
rcll
daa
cld
lret
jo
decl
js
mov
inc
stc
dec
mov
popf
lods
cltd
mov
incl
cmp
fst
lret
es
push
and
inc
sub
cli
outsb
aad
xor
mov
push
ljmp
mov
rorl
in
cmp
jno
xor
out
mov
add
pop
icebp
mov
and
dec
adc
jmp
mov
leave
jbe
sbb
subb
jg
sahf
jbe
mov
dec
pop
arpl
jl
jns
pop
mov
pop
or
jmp
mov
adc
xor
mov
push
das
push
add
push
sub
pushl
inc
push
pop
out
das
cmc
roll
mov
push
divb
fwait
sub
sub
andl
pop
mov
test
ret
xchg
cwtl
test
push
lods
xor
jg
insb
loopne
stos
push
cmpsb
aad
outsb
sar
adc
clc
call
mov
jns
inc
test
aam
sbb
lahf
mov
cli
or
jmp
dec
add
in
out
dec
xchg
mov
cmp
loop
xchg
loope
lds
sbbl
jmp
mov
enter
call
ret
decl
jg
loope
adc
movsl
dec
xlat
jl
ja
je
lahf
mov
mov
xor
mov
mov
ljmp
pusha
jecxz
nop
ljmp
jae
int3
push
stc
cld
nop
mov
loope
sbb
xor
std
cmp
ret
mov
hlt
movsl
out
push
xchg
loope
daa
mov
jl
decl
and
lods
pop
lret
and
loope
je
popa
in
int3
incl
insb
subb
cld
adc
xchg
push
std
fcomip
mov
mov
push
in
cli
cmp
in
sub
frstor
push
sar
outsl
cli
aaa
sub
jecxz
sbb
stos
xchg
aam
movq
outsl
cmp
lcall
jmp
mov
imul
push
loope
ss
pop
cmp
mulb
add
call
cmp
rol
jae
pop
sbb
jle
cbtw
mov
aas
jmp
jbe
clc
incl
push
pop
pop
xlat
loopne
pop
jns
sbbb
sub
jg
dec
lahf
inc
add
sub
out
jle
cmp
mov
xchg
push
ljmp
jns
sub
sti
in
scas
pop
sub
sbb
dec
or
mov
add
jl
lcall
jae
incl
adc
leave
pushf
cmpsb
mov
xchg
dec
daa
xchg
dec
movsl
gs
mov
icebp
incl
jne
inc
dec
sub
int3
sub
cmpl
and
inc
mov
mov
jp
popf
jmp
push
arpl
add
in
adc
decb
pop
jmp
shlb
push
mov
ljmp
push
cmp
push
jne
ret
out
xchg
outsb
xchg
mov
sub
aaa
sub
orb
ljmp
inc
int
std
sub
cli
xor
movsb
faddp
rcl
xchg
test
mov
xor
shrb
jo
stos
stos
xchg
ret
jo
pusha
lods
lcall
mov
ret
pop
mov
das
sub
fadd
call
mov
pushf
jg
stc
sbb
ja
je
jl
mov
xorl
ja
outsb
mov
jmp
movsb
dec
xchg
ja
or
enter
out
pop
jb
mov
adc
pushl
ss
add
and
rcrb
stos
ficoml
fs
mov
jb
ja
jecxz
lcall
addr16
popf
cmp
pop
orl
add
sbb
out
push
lods
push
iret
jne
xchg
cmp
es
lret
mov
cmp
insb
rcl
gs
sbb
les
fwait
push
pop
xchg
clc
ret
push
cltd
in
sahf
and
xor
jg
decl
notl
lock
insl
les
jmp
jmp
jo
adc
inc
dec
imul
adcl
add
frstor
lock
clc
je
sarl
jl
lcall
shufps
mov
jmp
stos
cmpsb
loopne
jmp
push
mov
lcall
add
pop
dec
cmp
xchg
cmpb
stos
stos
jmp
sbb
aam
aas
out
push
hlt
incl
mov
out
nop
adc
daa
bound
sub
jae
mov
imul
add
dec
cmpl
adc
out
add
not
mov
cli
pushf
adc
outsb
jo
mov
outsb
cli
sub
out
inc
xchg
xor
adc
jg
lods
popa
loop
popa
lcall
lods
incl
into
pop
push
fisubl
inc
sub
sahf
dec
push
call
push
pop
push
sti
jnp
ljmp
dec
and
dec
jnp
in
inc
mov
popf
or
mov
ss
out
inc
clc
pushl
or
outsb
mov
jb
movsb
rcrb
fcomps
lahf
mov
insb
imul
push
pop
pushf
movsl
call
adc
and
test
es
cltd
pop
pop
or
mov
sub
js
mov
adc
mov
and
mov
dec
xchg
and
mov
fnstsw
insb
leave
inc
out
imul
inc
mov
push
nop
jnp
loope
in
xchg
xlat
lcall
mov
das
gs
push
cs
mov
popa
cmp
cmpsb
pop
inc
inc
ljmp
fadds
push
fistpl
rcll
in
fidivrs
ja
cld
jns
adc
mulb
fcmovnb
test
add
stos
sub
hlt
mov
and
out
and
mov
sar
ret
cmp
sahf
jge
adc
test
cmp
fwait
inc
xor
push
inc
cs
and
ds
push
clc
idivl
cmp
sbb
and
fadds
in
pop
fstpl
push
cltd
sti
mov
call
lds
pop
loope
or
mov
and
push
jmp
scas
enter
push
mov
cmp
mov
lds
movsb
ljmp
dec
mov
icebp
sbb
mov
cwtl
jecxz
movsl
add
jecxz
jge
movl
push
popa
dec
lret
popl
xchg
push
mov
leave
ja
cli
repnz
xchg
xchg
add
push
das
clc
fcomip
mov
ret
pop
sub
sub
jg
push
icebp
ret
inc
push
fcoms
xor
push
xchg
pop
jg
or
cmp
rolb
scas
movsb
loopne
rclb
push
pushf
jecxz
pop
sbb
ret
push
adc
xchg
jne
lret
sar
incl
push
fnstenv
mov
mov
test
mov
movb
movsb
out
cmp
sbb
fwait
clc
jg
push
pop
cltd
repz
xor
out
out
popa
ja
adcb
add
add
aas
test
dec
mov
and
jg
out
sub
inc
mov
pushf
mov
lahf
and
adc
shrl
dec
enter
mov
mov
xchg
mov
mov
sub
xchg
dec
fists
add
mov
sbb
and
mov
jb
jns
mov
cmp
cltd
les
cmp
arpl
xor
pop
push
cmp
mov
xor
movsl
or
mov
lods
pop
push
pushf
jnp
loope
push
or
inc
cmp
ljmp
pop
fwait
sbb
mov
ja
rclb
push
jmp
aam
jo
stc
sti
dec
cmp
daa
lods
mov
dec
cs
mov
fldenv
idiv
pushl
out
cmpsb
sub
mov
adc
clc
popa
mov
outsl
ljmp
movsb
inc
mov
ds
fsubrs
adc
cwtl
mov
call
ret
clc
jns
hlt
imulb
pop
mov
pop
in
dec
mov
mov
imul
cmp
fwait
pop
adc
push
repnz
jl
and
cwtl
push
js
cmp
dec
xor
frstor
gs
xor
and
cmp
scas
mov
call
sbb
sti
out
fstl
scas
pop
insb
lcall
cmp
hlt
hlt
out
mov
sub
inc
push
movsl
push
inc
hlt
pop
mov
loope
lods
dec
sar
incl
xor
fldl
inc
int
test
es
call
or
mov
shlb
icebp
fsts
js
int3
pusha
jp
clc
or
or
pusha
cld
add
addr16
ljmp
jbe
std
incl
decl
or
jecxz
dec
pushw
int
push
sub
lcall
dec
pop
sahf
pop
fwait
inc
push
pop
out
mov
out
sub
subps
mov
jmp
fwait
pop
sbb
sbb
nop
inc
add
inc
xor
pop
jo
outsb
dec
dec
out
sbb
imul
add
adc
mov
inc
mov
mov
ss
jno
jecxz
fistpll
stos
push
cmpsl
xchg
call
popa
ficoml
sbb
jo
out
outsb
addr16
std
loope
lcall
mov
es
sbb
sub
mov
lret
in
lcall
div
push
in
decl
jo
mov
xorb
dec
push
ret
mov
and
jp
inc
adc
cli
insl
dec
mov
sti
or
outsl
scas
scas
addr16
movsl
mov
inc
or
inc
les
dec
dec
movsb
mov
imul
insb
popf
adc
sub
dec
loope
out
adcl
call
std
aad
fimuls
cli
aam
sti
dec
fwait
xchg
inc
in
xchg
popf
cmpsl
fnstsw
sarl
push
adc
mov
jae
mov
push
out
jb
mov
push
or
out
add
dec
or
pop
inc
dec
cmpsl
ret
nop
push
sahf
cltd
js
ret
adc
mov
lahf
aad
inc
sbb
call
mov
dec
mov
rorb
jp
into
dec
jmp
js
mov
inc
outsb
pop
sbb
nop
and
xor
ljmp
cltd
or
sti
pusha
ffreep
icebp
adc
adc
push
rorb
mov
inc
and
mov
inc
jl
icebp
sbb
lcall
call
loop
outsb
imulb
stc
insl
fimull
push
test
or
pushl
insl
or
inc
mov
leave
inc
cmp
mov
add
mov
xor
xor
dec
adc
lcall
outsl
out
gs
shl
lea
lahf
subl
shr
push
and
les
fcomip
jle
or
sub
jecxz
loopne
xchg
inc
ss
sub
pop
xor
pushl
xor
push
sub
popa
add
dec
mov
xor
or
rol
mull
push
or
js
push
jmp
in
aas
gs
in
cmpl
inc
mov
insb
mov
lcall
pop
mov
sbb
clc
pusha
jecxz
jg
pop
xchg
jmp
aam
push
testl
cs
daa
aam
cmp
mov
add
shr
sbb
int3
xor
sbb
loopne
mov
mov
aad
sti
push
sahf
and
cmp
fwait
push
cmp
mov
mov
push
mov
in
mov
in
pop
hlt
insb
inc
push
mov
pop
pop
cwtl
ret
ror
sbb
jmp
cmc
mov
pop
adc
test
xchg
mov
xor
xchg
mov
cmp
xchg
jbe
inc
dec
jmp
mov
cmpsl
cmpsl
pop
into
aam
jb
iret
cltd
xlat
xorb
arpl
dec
or
fdivrs
fadds
ljmp
out
ret
pop
gs
push
test
xchg
fnstcw
out
fs
outsb
fidivrl
sub
sub
pusha
sub
pop
iret
gs
push
fs
sub
orl
pusha
orl
in
imul
notb
mov
nop
adc
and
xchg
sbb
lcall
cmp
xlat
cs
incl
pop
add
out
cld
cltd
imul
pusha
rorb
daa
sbb
sub
dec
imul
add
stos
enter
push
dec
jo
or
call
lock
fwait
jmp
roll
xlat
adc
cs
and
mov
jmp
sbb
ret
decb
jns
enter
inc
decl
das
fdiv
jo
cmp
adc
pop
dec
or
sbb
mov
repz
pop
sub
jmp
daa
test
int3
imul
clc
aas
xchg
adc
adc
jg
imul
cmp
jmp
sbb
pop
xchg
sti
cmp
cmpsb
jl
cwtl
sub
ss
ret
fcos
mov
test
ljmp
sub
loopne
test
pop
aaa
dec
or
or
jecxz
jmp
lcall
pop
incl
clc
inc
sub
jl
xchg
les
and
ljmp
mov
push
inc
mov
jne
dec
mov
adc
hlt
dec
test
lds
pop
pop
shlb
add
bound
or
push
push
test
ljmp
stc
mov
aad
movsl
imul
ss
jmp
jle
xor
iret
fadd
fcomip
jmp
scas
stos
cld
and
adc
stos
shll
pusha
sbb
fildll
enter
sti
fnsave
push
pop
into
mov
adc
int
mov
cmp
dec
add
call
sbb
and
inc
int3
out
cwtl
inc
shlb
aam
mov
decl
pop
hlt
sub
jnp
xor
scas
test
mov
pop
std
stos
dec
frstor
mov
loop
or
call
push
loope
hlt
movsb
pop
jns
stos
dec
cld
inc
cmp
add
jne
jecxz
mov
add
cmp
or
je
call
jmp
outsb
add
mov
clc
out
je
mov
or
push
cmp
in
lea
jns
sub
aaa
ret
cli
decl
mov
jae
cmc
adc
add
cmp
lock
push
dec
rolb
add
jmp
jmp
mov
mov
dec
ds
push
xchg
repz
add
repz
add
call
xchg
addl
and
adc
push
cmp
movsl
out
mov
sub
in
ljmp
sbb
xchg
fidivl
pop
jg
mov
in
adc
out
xor
mov
jp
pop
add
and
push
js
loop
inc
mov
mov
add
adc
int
js
out
cwtl
scas
sahf
pop
icebp
dec
ljmp
cli
pop
sbb
xlat
adc
add
jbe
leave
lcall
std
xor
sub
aam
mov
or
mov
jge
adc
int
push
jmp
dec
push
mov
roll
int3
dec
fimull
pusha
jecxz
lods
ret
pop
cmc
jg
inc
pusha
push
popa
jnp
mov
pop
ret
in
ljmp
rclb
outsl
mov
dec
mov
mov
push
lods
or
iret
popf
mov
inc
ret
mov
outsb
xchg
jge
aam
pop
cld
fistl
pushf
in
sub
cmp
pop
lret
test
mov
and
and
cmp
incl
fs
cmp
adc
pop
or
pop
mov
call
stos
pop
cmp
cmp
or
lahf
jne
add
mov
int
sub
mov
ljmp
push
jmp
mov
or
jo
mov
sbb
loope
and
loopne
dec
aam
int
setnp
or
mov
add
add
ljmp
in
xchg
and
fmulp
out
dec
jbe
pop
fld
cltd
pop
fldcw
push
pop
incl
aad
add
adcl
sar
testb
stos
hlt
jl
hlt
shlb
decl
dec
add
mov
ja
mull
mov
fstpt
cmp
insb
cmp
mov
data16
push
pop
movsb
mov
call
lcall
fmulp
sahf
stc
daa
push
cwtl
rorl
ljmp
mov
mov
outsl
es
divl
dec
mov
push
lret
stos
iret
mov
pop
cli
lcall
enter
movsb
sahf
sub
outsl
add
xchg
dec
in
test
push
call
sbb
or
fwait
mov
or
inc
movsb
test
sti
sbb
jmp
inc
mov
negl
xor
dec
int
xor
aas
fstpl
dec
mov
incl
rcrb
xchg
mov
xchg
into
xlat
pop
xlat
cs
notb
test
cmp
int
lret
dec
dec
mov
ljmp
in
mov
lea
repnz
add
or
pop
loop
incl
icebp
in
lcall
or
adc
incl
cmp
aad
or
out
mov
jb
adc
cmpsl
fsubrp
xchg
lcall
loop
out
cmp
mov
insb
sbb
in
movsb
jmp
push
cmovb
pop
or
leave
stc
in
or
cs
mov
icebp
sub
fdiv
mov
xchg
jne
in
push
test
fs
dec
ljmp
pushl
fwait
loope
jmp
push
dec
mov
movsb
cmp
fdivrl
clc
pushl
and
push
mov
daa
push
out
mov
imul
mov
pop
push
ljmp
or
stos
sub
xchg
out
pop
inc
stc
fldenv
incl
mov
jnp
mov
mov
sub
mov
fstpt
xchg
mov
jmp
adc
dec
outsl
cmp
add
das
jg
fnstenv
test
insl
pushl
jo
aaa
iret
jae
ret
call
mov
mov
xchg
es
lret
push
mov
cmp
std
pop
data16
popf
arpl
pop
and
clc
mov
push
jns
in
sub
mov
outsb
in
or
mov
adc
hlt
aam
stos
js
cmp
call
aaa
sahf
xchg
int3
push
imul
iret
shlb
push
add
aaa
into
mov
and
add
pushl
pop
sbb
aaa
stos
test
stc
inc
xor
or
inc
loop
dec
xor
sar
das
cli
jmp
jae
test
jle
adc
ss
ljmp
add
mov
in
fistpl
outsb
xchg
pop
sub
mov
xchg
dec
xchg
jmp
xlat
mov
ljmp
push
stc
xchg
dec
fadd
sbb
popf
sti
mov
movsl
fistpl
inc
cmp
sbb
ljmp
std
daa
mov
xor
aad
js
mov
pop
scas
pushf
pop
push
jae
rorb
decl
insb
xor
pop
out
fwait
sbb
scas
add
push
add
xchg
pushf
xchg
mov
bound
enter
add
out
mov
pop
jl
mov
sbbl
lcall
mov
loopne
and
in
aas
add
xchg
and
jnp
cmp
sbb
jle
call
cld
mov
mov
xchg
lcall
lahf
les
aas
push
or
sbb
mov
inc
test
mov
push
sub
jmp
cwtl
sub
and
pop
mov
subb
pop
and
mov
lea
cmp
out
loopne
cmp
sbb
in
cmp
cwtl
lods
mov
jmp
xor
std
or
mov
and
push
insl
std
shrl
in
mov
rcr
ret
sbb
mov
imul
and
push
daa
xor
call
pop
lods
jb
mov
mov
sbb
ljmp
mov
cld
rorb
cmpsl
adc
adc
xor
cmp
decl
dec
lea
stc
mov
shll
add
mov
sub
mov
pop
mov
jl
inc
pusha
and
fsts
mov
outsb
jo
mov
push
mov
mov
fmuls
pushf
leave
pop
mov
inc
cmp
stos
sub
fucomi
in
xlat
incl
sbb
clc
xchg
je
adc
stc
rorl
and
push
lods
or
fcomi
add
sar
fdiv
stc
inc
pop
xchg
mov
in
clc
ficoml
and
fisubrs
stc
mov
fwait
pusha
or
mov
stc
or
fcomip
pop
inc
or
cwtl
gs
test
sub
imul
push
push
mov
mov
cmp
lcall
mov
incl
ljmp
mov
iret
or
jmp
filds
cld
mov
add
arpl
mov
or
fiaddl
inc
jb
or
ss
and
mov
xchg
sub
cmc
les
movsb
sbb
int
mov
and
test
fisubl
pop
testl
cli
decl
xor
iret
mov
xor
popf
add
ljmp
mov
shlb
aaa
icebp
sbb
icebp
pop
jg
pop
push
and
sbb
lret
movsl
pushl
in
xchg
or
je
cmp
xor
sbb
jle
dec
jecxz
jg
int3
scas
pushf
shrb
xor
mov
xlat
push
mov
stos
les
sub
in
int3
cli
adc
cli
jo
aas
sub
dec
xor
mov
int3
scas
inc
outsl
add
adc
pop
dec
lods
inc
das
rclb
rol
xchg
inc
out
and
mov
push
in
lret
cli
mov
push
aas
fsubrs
jae
dec
enter
lcall
in
mov
jns
cs
mov
and
inc
out
push
movsb
pop
mov
push
aaa
mov
dec
sub
dec
push
jo
dec
inc
mov
imul
cli
lcall
inc
push
imul
stos
out
push
xchg
dec
out
and
clc
or
shrb
ljmp
repnz
arpl
mulb
insl
ja
inc
jmp
enter
mov
lcall
fstpl
add
adc
push
mov
mov
call
mov
rcr
add
xlat
in
aad
movsb
fbld
push
pop
enter
cmpsl
push
int3
lahf
jg
ljmp
arpl
xchg
cld
es
aad
out
lret
pop
fisttps
leave
and
xor
lods
mov
xlat
out
mov
mov
aaa
cld
arpl
mov
mov
fcompl
and
xor
push
sbb
shrb
or
jp
cmp
push
pop
popf
jg
pushl
fs
inc
inc
test
xchg
rcl
dec
mov
jae
push
push
ret
push
stos
incl
add
js
pop
decb
or
pop
mov
xchg
les
jmp
outsl
out
mov
scas
adc
popf
adc
sub
in
sbbb
out
and
stc
xchg
dec
and
xchg
decl
add
out
mov
xchg
repz
xchg
sbb
fildll
xor
fcoms
jge
pop
popf
cmp
dec
mov
es
iret
ljmp
bound
incl
and
stos
push
aaa
cmp
dec
pop
test
mov
pop
fldt
lcall
or
pop
lret
out
and
mov
sbb
adc
jge
jnp
push
sub
sub
jmp
popa
adc
xchg
dec
push
outsb
dec
leave
jns
mov
jmp
neg
pop
je
pop
xchg
sub
push
ret
inc
mulb
pop
and
pushl
mov
aaa
mov
add
aam
jmp
push
push
gs
mov
mov
xor
dec
mov
clc
fcomp
rol
cmp
xor
dec
xchg
jecxz
mov
fcomip
push
mov
sub
cmp
and
int3
aaa
stc
in
movsb
out
pop
xor
or
add
stos
add
push
pop
mov
jmp
gs
daa
lret
cmp
ds
gs
mov
xor
add
iret
mov
and
sbb
and
lcall
jle
mov
enter
pop
push
fsubr
stc
andl
pop
fnsave
decl
dec
cmc
cs
iret
ds
addr16
or
gs
jbe
rcr
loopne
lret
adc
ljmp
fsincos
jb
enter
sbb
test
fucomip
push
mov
clc
sar
ljmp
aaa
mov
sub
xchg
pop
or
mov
adc
mov
call
sbb
adc
inc
lahf
in
js
jbe
cld
int
outsb
insb
imul
push
sbb
sti
push
mov
incl
shll
xor
fists
pop
fsubrp
xor
orb
das
cld
xor
inc
ss
ljmp
movsb
inc
repnz
xchg
loope
and
mov
adc
adc
loop
idivl
xor
mov
lret
push
inc
cmp
arpl
jae
int3
imul
cmp
jbe
sahf
jmp
mov
decl
test
test
stos
outsl
mov
in
insb
xchg
jmp
push
cmp
sub
movsb
loope
fidivl
xchg
ret
pop
push
test
fsubr
adc
std
decl
adc
cltd
ja
fisttpl
push
mov
inc
aaa
add
dec
add
std
dec
mov
and
mov
pop
clc
push
jmp
cwtl
pop
dec
enter
cmc
outsl
clc
jmp
sahf
shll
push
pop
jl
mov
adc
aad
ljmp
outsb
jle
fildll
imulb
aam
cs
inc
mov
lcall
in
sbb
fdivp
arpl
mov
dec
push
adc
mov
call
test
mov
pop
dec
xor
pop
repz
sbb
jg
xor
arpl
cmpsb
roll
ret
pushl
dec
sbbb
adcl
cmp
testl
incl
mov
cs
loope
mov
jecxz
not
mov
shrl
int
push
jnp
int3
ljmp
ljmp
stos
add
sbb
inc
xor
lahf
xchg
es
call
dec
or
xorl
dec
cmpsb
inc
push
fwait
lods
cmp
or
cmp
and
out
cmp
jg
xchg
loopne
push
int3
mov
pop
imul
nop
and
call
pushl
sahf
inc
xchg
mov
cmp
dec
inc
jmp
movsl
cwtl
sbb
arpl
decl
inc
cmpsl
mov
fdivr
out
xor
jmp
mov
ja
clc
push
lods
ljmp
mov
push
jp
icebp
or
outsl
cli
jg
fs
sbb
icebp
pop
test
sub
ss
mov
jg
movsb
sbb
jmp
xor
pop
addr16
or
ljmp
adc
nop
psrlq
jmp
stos
mov
jg
fmulp
cwtl
push
mov
jmp
dec
loop
mov
push
out
mov
fcompl
lret
dec
in
rcrb
out
in
arpl
push
pusha
mov
dec
lock
lds
lcall
insb
jg
xchg
stos
sub
or
adc
lcall
fsts
push
mov
cs
dec
lcall
inc
aad
jmp
jae
jg
dec
push
or
stc
mov
xchg
mov
call
and
int3
subps
xor
mov
sbb
out
adc
sbb
sub
sbb
cltd
or
movsl
lock
in
cwtl
mov
fisttps
mov
lcall
repz
je
fadds
loope
jne
mov
loopne
popa
into
mov
pop
jnp
icebp
test
or
ss
adc
ror
adc
dec
mov
lcall
cwtl
cmpsl
add
jge
pop
cmp
roll
xchg
xor
or
inc
bound
mov
xchg
pushf
add
loop
mov
pop
jns
rcl
lahf
cs
lods
jbe
test
mov
dec
shrd
add
adc
js
stos
cli
sub
call
and
inc
cmp
insb
insl
push
repnz
push
push
rcr
push
xor
ret
pushl
sahf
iret
dec
rol
das
cmc
or
shll
jb
mov
inc
arpl
inc
hlt
mov
ds
test
shr
lods
movsl
mov
sti
mov
push
rcr
incl
cwtl
jle
sub
push
mov
jge
outsl
clc
push
movsb
std
clc
mov
test
xchg
ljmp
lcall
mov
inc
in
lret
mov
iret
sbb
push
call
xor
cmp
ds
xor
jp
cmp
inc
shrb
and
rdtsc
daa
and
add
cld
cmpsb
mov
ret
rolb
inc
popf
mov
cli
xchg
imul
push
xchg
enter
lret
fsubrl
andl
clc
push
mov
adc
cmp
orb
movsb
int3
sub
pop
movsb
insl
adc
mov
loop
push
jmp
fs
adc
sub
sarb
pop
movsb
sahf
mov
rcrl
repnz
push
xorl
add
pusha
xor
jnp
enter
add
jb
incl
test
cmp
cmp
in
adc
sub
ja
inc
clc
dec
imul
decl
subb
faddl
lret
sub
data16
sti
mov
jg
mov
lcall
jb
adc
cs
aam
ret
dec
cmp
cli
idiv
ljmp
insb
dec
sarl
sti
xlat
mov
adc
andl
mov
push
cmp
cmpsl
or
adc
fcompl
ljmp
cmc
cmp
lea
dec
jae
aam
jb
push
enter
shl
mov
decl
fiadds
xchg
pop
rcll
xchg
inc
add
inc
dec
pop
sbbb
std
incl
or
pop
icebp
xor
repnz
cmp
xlat
ret
jg
mov
mov
xor
cmp
fidivrl
dec
xor
dec
mov
cmp
pushf
sbb
std
jns
jnp
test
andl
jnp
fldenv
inc
es
lds
and
jne
inc
jp
enter
ljmp
cmpsb
mov
add
cmpb
pop
push
leave
cs
daa
fistps
lds
dec
jp
pusha
loopne
fcmovne
mov
sub
ret
push
dec
sbb
xor
test
scas
clc
sbb
int
xchg
movl
cmpsl
pcmpeqd
mov
pop
in
cli
int
icebp
xchg
add
cld
enter
adc
gs
loop
ljmp
clc
pmaddwd
and
scas
pop
ja
add
or
mov
jmp
adc
cmpl
mov
in
xor
cmp
jb
and
nop
jae
mov
or
push
or
aaa
fiaddl
lcall
xchg
sbb
cmp
sub
lcall
int3
mov
add
mov
fisubs
xchg
dec
cwtl
in
mov
sahf
pushf
loop
push
push
fldl
cmp
lcall
push
imul
ss
jg
adc
ljmp
cmp
clc
cmp
aaa
idiv
ja
cld
jle
ja
mov
sub
cwtl
mov
repnz
mov
dec
inc
mov
mov
inc
cmpsl
push
lcall
sub
aad
cmp
inc
mov
cltd
mov
cmp
xchg
dec
pop
push
lods
adc
decl
ret
arpl
mov
or
and
xchg
xchg
or
fidivrl
fsubrs
sub
pop
outsb
dec
push
pop
cmp
dec
repnz
add
and
call
push
mov
dec
mov
xchg
leave
in
add
icebp
fisubs
xchg
test
std
cmpsl
sbb
in
mov
stos
xchg
orb
or
fstpl
mov
dec
pusha
and
mov
pop
cmpsb
mov
cmp
hlt
sti
push
ljmp
or
rol
mov
ja
jbe
jge
loopne
ljmp
pop
lds
fiaddl
mov
fidivrl
stos
mov
inc
mov
mov
or
push
jp
flds
call
aam
xchg
test
cmpsb
push
cli
incl
jae
adc
lret
fs
shrb
movsb
out
jge
mov
shlb
sub
arpl
xchg
cmp
mov
in
jge
inc
nop
iret
pop
aas
push
lods
in
lcall
jno
mov
mov
mov
rol
fistpl
out
mov
addr16
decl
cld
cmp
ds
mov
int
mov
daa
add
lcall
jle
sub
lods
outsb
xchg
shlb
sahf
insl
std
sbb
pop
jo
cmp
sub
push
dec
add
cmpsb
cmpsb
pop
sahf
jecxz
xor
xor
adc
mov
jmp
pushl
inc
inc
fistl
test
cmp
cs
mov
add
xor
std
push
cmp
mov
enter
xor
hlt
sti
adc
dec
gs
or
xchg
xchg
rolb
decl
dec
push
sbb
jg
or
xchg
lret
int3
incl
jo
sti
aas
test
xchg
inc
test
mov
cwtl
call
test
call
adc
mov
cld
shl
pop
jmp
xchg
cs
pop
fiadds
push
pop
movsb
and
mov
ljmp
ljmp
or
xchg
shlb
add
std
add
fwait
add
mov
pop
int
pop
and
xlat
gs
call
rorb
cmp
arpl
add
rcrb
mov
jmp
sbb
pusha
xchg
push
pop
cmp
jecxz
mov
hlt
sub
cbtw
push
stos
call
jl
or
je
and
out
mov
out
pop
or
movsl
cwtl
jg
jg
sbb
push
ret
adc
rcrb
cmpsl
cld
bsf
adc
cmp
cld
lcall
stos
pop
shlw
jbe
stc
lcall
in
imul
aam
or
mov
and
push
inc
fwait
xor
push
cli
xor
aam
bound
dec
push
dec
xchg
lods
or
and
pop
int3
out
cld
decl
xor
pop
stos
mov
add
aad
ret
add
call
mov
fldt
cmpsl
mov
dec
add
scas
pop
enter
xchg
push
xchg
dec
sbb
mov
stos
xor
pop
sbb
ljmp
sahf
dec
orl
in
push
add
ljmp
lret
leave
xor
mov
and
mov
aam
out
xor
fsubp
mov
or
xchg
lea
mov
add
mov
pop
pop
decl
or
mov
dec
nop
ret
jmp
rol
enter
imul
jmp
scas
jp
cld
sti
sbb
mov
test
inc
sbb
cltd
stc
sub
or
push
mov
and
xor
sbb
cli
or
dec
push
dec
mov
lcall
outsl
push
cmp
test
bound
jecxz
fstpl
and
dec
adcb
stos
push
aad
pushl
orb
repz
out
cmc
incb
shlb
mov
lret
fs
lods
arpl
push
xchg
or
pop
push
les
mov
shll
or
das
and
call
inc
pusha
pop
pop
jp
or
pop
inc
add
add
push
cltd
cld
call
test
ljmp
insb
jp
sub
jno
stos
mov
jg
sub
xchg
sub
mov
fs
scas
movsb
je
js
test
fstps
jae
add
jl
or
call
cmp
scas
sbb
xchg
test
jnp
ficompl
outsl
mov
and
incl
pop
stc
xlat
scas
xchg
dec
adc
sti
add
push
mov
andb
incl
shl
pop
sbb
push
inc
icebp
cmp
push
adc
lea
mov
mov
or
test
fidivrs
imul
shlb
fsubr
xchg
jbe
inc
adc
xor
ffree
mov
loop
decl
or
lods
adc
mov
popf
andb
sub
add
jnp
pop
jo
mov
jnp
xchg
in
sti
mov
in
mov
dec
or
xor
popa
xchg
mov
adcl
fldl
jae
sbb
in
xor
cmp
decl
outsl
or
mov
mov
adc
int3
add
std
into
mov
sub
add
fcomip
loopne
dec
dec
je
xor
shl
xor
paddsw
push
pushl
xor
and
jbe
int
xor
js
push
mov
jge
mov
jmp
std
iret
adc
mov
cmp
adc
decl
pop
dec
das
mov
or
scas
repz
in
xor
aaa
jmp
pop
cld
jb
xchg
aas
add
jmp
dec
jo
and
adc
stos
fstpl
pop
xchg
adc
mov
xchg
or
jne
in
lock
repz
pop
ror
sarl
out
in
lahf
test
incl
cwtl
mov
lret
push
cs
in
in
jno
hlt
ret
jbe
filds
xchg
popf
jge
lds
repnz
dec
out
out
mov
mov
mov
or
iret
add
mov
fsubl
xchg
jb
xchg
xchg
push
repz
mov
jae
decl
les
jo
adc
jno
jns
xchg
test
mov
mov
jb
mov
mov
nop
cld
loopne
dec
fwait
pop
insb
loopne
call
je
push
push
adc
xor
sbb
pusha
aad
mov
and
cli
jle
mov
aaa
mov
call
adc
push
repz
push
mov
cmp
das
sar
fcomps
fcmovnu
andl
xchg
add
insl
mov
call
sub
xabort
test
pusha
mov
dec
aam
scas
out
movsb
repz
mov
ret
int
adc
dec
xor
add
xchg
aad
cmpsb
lods
data16
flds
xchg
jb
xchg
sar
out
cld
test
arpl
shlb
aaa
insl
ds
and
jns
adc
inc
je
fs
mov
adc
jge
xchg
pop
insb
call
loopne
jb
repnz
add
lea
sahf
in
insb
cmpsl
movl
test
pop
aas
inc
rolb
lret
andl
lcall
mov
gs
sbb
adc
dec
clc
pop
xor
mov
scas
into
inc
lret
sub
clc
cmp
add
sti
add
adc
stc
fdivr
fwait
dec
loopne
imul
imul
ss
jmp
push
sbb
insl
nop
mov
mov
stc
jecxz
lea
push
loope
push
mov
addb
in
sub
dec
or
sbb
std
lcall
aad
or
pop
mov
imul
hlt
mov
iret
or
sbb
lock
call
cmp
movsb
lcall
dec
push
mov
das
ss
xchg
fildll
pop
xchg
ficoml
sahf
out
out
lock
imul
lahf
std
push
and
lea
inc
mov
adc
xor
idiv
lcall
mov
pop
mov
out
push
jae
adc
pop
push
call
decl
stos
dec
xchg
popf
in
mov
sbb
fcom
ljmp
sti
js
push
pop
inc
push
push
mov
test
dec
addb
leave
mov
jle
mov
lcall
andl
cmpsl
inc
sti
sahf
xor
add
fbstp
iret
popf
mov
xlat
xor
jne
and
ret
es
and
cmpsl
ret
push
fildll
cmp
pop
jno
mov
mov
sarb
insb
pushf
mov
mov
enter
jg
pusha
dec
or
push
mov
cmp
jae
lock
mov
jg
call
mov
fisubs
stos
add
mov
inc
push
adc
jmp
push
dec
pushf
popa
dec
test
mov
sub
hlt
mov
enter
jne
daa
popf
jbe
call
xor
cmp
lcall
loopne
jb
cwtl
adc
call
pop
or
jecxz
movsl
pop
ljmp
ljmp
xchg
fwait
push
dec
test
sbb
std
mov
imul
icebp
mov
mov
mov
loop
test
xchg
push
dec
shll
out
push
push
arpl
flds
call
insb
dec
adc
adcb
and
shll
add
sub
fldl
ror
inc
cli
pushl
mov
inc
add
add
lret
mov
dec
push
shrb
outsl
fcomps
lret
or
leave
ret
jge
lcall
mov
loop
mov
mov
ds
lock
mov
bound
and
subb
call
xchg
int3
rcl
repz
lods
aad
cmp
cmp
xchg
xor
pushl
cmpsl
in
icebp
loop
add
out
mov
xor
ror
pop
xchg
sbb
filds
ljmp
pop
mov
jns
xchg
call
out
ss
jle
test
iret
mov
and
shl
dec
dec
sbb
les
in
leavew
iret
add
jb
lret
mov
arpl
fbld
mov
out
push
cwtl
add
ret
js
repnz
leave
ret
xor
dec
add
push
jae
popf
fbld
stc
or
fistpll
icebp
imull
vmovdqu
aam
or
mov
pop
jge
outsb
xchg
adc
cltd
mov
cmp
test
cli
pushl
in
pop
cmp
add
pop
push
aas
or
jmp
neg
cmp
pushl
jns
add
hlt
data16
xchg
add
xorl
shrl
or
jmp
cmpb
aam
mov
sti
test
decl
stos
add
push
lds
test
and
movsb
les
daa
jne
int
and
sti
fisttps
add
mov
data16
pop
jmp
jns
clc
cmp
mov
das
divl
cmp
add
jp
idivb
test
mov
xchg
push
jne
loopne
and
subl
lods
ret
imul
push
jns
aad
mov
imul
hlt
adc
or
ror
pop
mov
pop
mov
adc
add
int3
jge
xchg
lds
xor
bound
lcall
cltd
mov
pop
fimuls
mov
cwtl
inc
push
es
and
out
jle
push
lcall
in
rorl
js
daa
or
and
hlt
lcall
dec
rcll
icebp
movsb
jbe
lds
gs
mov
jle
or
mov
mov
pop
cmpsb
in
jecxz
cmp
sub
cmp
dec
xor
fidivrl
imul
adc
cwtl
scas
outsb
fisttpl
pop
xorb
push
and
jge
leave
add
mov
cwtl
cld
cs
repnz
sbb
dec
sbb
jle
fcos
incl
xchg
sbb
xor
shlb
jbe
jns
mov
jmp
push
mov
out
test
mov
fnstcw
mov
mov
std
scas
in
push
mov
jne
scas
scas
mov
sbb
dec
pop
popa
inc
push
jo
cmp
out
pop
insb
inc
fdivs
sub
xor
sub
in
push
daa
sahf
jl
adc
jp
push
sub
pop
ljmp
inc
cli
sbb
push
aad
aam
xorps
out
xor
mov
inc
mov
mov
xor
add
lods
in
enter
mov
orb
movsb
decl
xchg
roll
inc
outsb
scas
jmp
cli
cmp
sbb
and
mov
decl
xor
mov
into
mov
inc
mov
pop
pop
xchg
add
enter
out
and
mov
ret
int3
ficoms
cltd
jbe
add
mov
push
mov
sbb
data16
decl
into
loope
int
pop
dec
or
add
mulb
arpl
sub
test
cmp
aad
ljmp
ss
push
inc
stos
popa
push
sbb
fldt
decl
adc
sub
lea
loop
push
add
scas
outsl
addr16
pop
and
lcall
mov
iret
movsb
mov
scas
repnz
push
xor
shll
inc
inc
mov
mov
inc
jno
fdivs
movsl
mov
ds
in
pushl
out
scas
les
cmc
mov
pop
mov
inc
mov
mov
dec
adc
inc
cltd
xor
dec
or
add
jp
push
in
add
push
xchg
nop
dec
inc
lcall
push
jp
or
adc
in
cmp
out
xor
cmpsl
add
dec
jnp
mov
jl
jge
and
xchg
orb
push
adc
jmp
sub
hlt
xchg
stos
arpl
mov
pop
cmp
mov
inc
xchg
rep
cmp
push
popa
lods
push
or
pop
fcompl
or
push
jmp
faddl
adc
xchg
cs
aas
out
movsb
loop
xor
and
cltd
call
add
lcall
xchg
inc
adc
addr16
pop
jl
jns
jmp
push
fs
shrl
dec
incl
cld
sub
clc
push
icebp
or
es
and
sub
inc
sbb
mov
rcl
jg
je
or
lcall
dec
roll
lods
push
and
in
inc
jo
pop
shrl
scas
jg
push
ljmp
dec
shlb
test
cmpsb
dec
scas
mov
stos
movsb
pop
enter
inc
test
inc
jne
cmp
cmpsl
mov
inc
mov
mov
fdivr
mov
cmp
jmp
ret
bound
scas
mov
pushl
push
stos
mov
lods
jns
sbb
inc
nop
mov
xlat
movsl
or
inc
jp
add
jg
call
mov
mov
mov
into
jg
push
cmp
imul
push
sub
mov
pop
jg
insl
dec
dec
pushf
shll
daa
stos
jo,pt
add
mov
loop
lea
mulb
decl
pop
xor
dec
or
scas
popa
sbb
dec
xchg
cmc
sub
mov
jg
push
xchg
sbb
cs
outsl
das
in
jg
popa
cmp
mov
out
daa
pop
imul
cmp
mov
lods
daa
sbb
jnp
xor
movsb
sbb
jmp
insl
inc
test
jge
sbb
lcall
or
cmc
xor
stos
adc
out
clc
mov
sub
jl
push
mov
inc
xchg
lcall
in
ficoms
mov
movsl
inc
jbe
aam
xchg
int
cmp
arpl
pop
test
pushl
mov
cmp
fs
mov
out
dec
mov
pushf
jno
xlat
pop
adc
pop
idiv
ljmp
xlat
loop
or
lods
jge
pushf
scas
loope
insb
ret
out
loopne
inc
inc
cs
fisubrl
cld
stc
inc
xor
enter
mov
bound
pop
fdivrl
jl
inc
cmp
aam
mov
cld
mov
push
repnz
fdivs
mov
and
xchg
push
cmpsb
lcall
sar
incl
ljmp
sbb
pop
in
js
inc
xor
fwait
ja
mov
popa
push
ljmp
jle
sub
inc
cmc
inc
lret
popf
mov
fistl
xchg
ds
adc
jmp
in
mov
fistps
mov
in
jecxz
loopne
cwtl
sbb
lea
aam
mov
sub
insl
xchg
dec
pop
rorb
jbe
and
add
movl
jl
jle
lea
push
jne
and
decl
or
jb
push
jno
lea
pop
or
mov
xor
incl
mov
imul
add
pop
das
mov
cld
incl
push
sub
xchg
ja
and
push
and
mov
out
movsl
repnz
dec
testb
inc
lcall
jns
dec
mov
popf
push
in
mov
pop
or
bound
pushl
lahf
aam
add
or
aad
test
sub
push
or
leave
popf
test
pushf
fstl
cmp
add
dec
sbb
jo
sahf
cmpl
popa
jecxz
arpl
or
pushl
push
xchg
rcl
or
push
testb
inc
push
cmpsb
jg
ljmp
andb
push
push
int
xchg
loop
push
fwait
pop
ret
jne
lcall
inc
mov
lret
imul
xor
mov
mov
jno
sbb
mov
xchg
scas
mov
fdivrl
pop
sti
rclb
icebp
jmp
cmpsl
movsb
push
lahf
and
clc
scas
dec
shll
inc
fcmovnbe
insl
jne
cmp
jl
aam
into
pop
dec
imul
pop
mov
xchg
in
xor
je
xor
in
rcl
lcall
push
mov
add
repnz
sbb
leave
mov
popf
xlat
jb
out
push
mov
jl
cmc
push
mov
cmp
sar
sbb
inc
in
rorb
xchg
in
les
adc
in
or
fsubrs
xchg
xchg
adc
pop
cld
decl
push
ret
xorl
pop
mov
in
bnd
or
push
inc
scas
mov
test
dec
jge
daa
add
aam
sbb
inc
es
inc
outsl
incl
loop
js
jp
pop
subb
xchg
xchg
inc
in
jmp
lcall
xlat
stos
pop
push
mov
notl
or
subb
int3
and
clc
call
pushf
fisubs
shl
push
nop
jns
pushl
ja
xor
out
or
cli
jne
aaa
sahf
xor
push
bound
pop
jmp
or
movsl
incb
sbb
pusha
cli
sbb
into
push
aad
mov
idiv
decl
dec
mov
outsb
scas
in
bound
inc
popf
mov
adc
cmp
mov
jmp
mov
jae
sbb
add
dec
push
out
scas
push
ljmp
sbb
int3
mov
lret
jno
icebp
dec
dec
cmp
aad
lcall
xchg
dec
cmp
cltd
iret
adc
imul
stc
outsl
pop
pop
jo
ficoms
aaa
xor
scas
add
call
jno
movsb
pop
push
test
adc
jle
ljmp
lods
lds
jg
xchg
inc
or
or
loope
repnz
mov
in
data16
lock
push
xchg
repnz
idivl
out
add
adc
filds
mov
clc
ret
mov
push
and
imul
adc
ja
ljmp
pop
inc
cld
dec
sub
cmpsl
ds
push
xchg
pop
mov
adc
inc
scas
cmp
in
pop
mov
xchg
call
dec
test
pop
sub
jmp
xor
dec
loopne
jge
inc
cwtl
dec
imul
lcall
cmp
aam
or
inc
add
fdivs
pop
pop
daa
xor
jmp
and
clc
aaa
mov
xor
inc
jae
dec
ror
movsl
into
push
out
imull
lret
aaa
cmpsl
mov
decl
xor
ljmp
mov
cmc
ljmp
inc
cwtl
gs
imul
ljmp
mov
pop
sbb
xor
test
pop
push
push
je
xlat
xor
jge
andl
dec
test
outsl
outsl
lret
and
orl
mov
fcoml
push
push
push
push
lock
fdivp
sub
decl
xor
repz
nop
iret
int
sti
dec
pop
mov
enter
in
js
fcos
jmp
scas
dec
sbb
leave
int
mov
mov
mov
aam
data16
push
jne
scas
push
cld
outsl
xchg
test
iret
cmp
xlat
test
jns
inc
loope
loop
cmp
jb
cmpb
inc
pop
jl
decl
and
lret
int3
push
mov
add
pushl
cmp
jle
nop
mulb
icebp
push
fwait
or
lcall
jge
xor
fs
fwait
add
pushl
xchg
jge
shll
add
pop
cli
jecxz
lods
test
or
dec
je
je
dec
sbb
jg
pushl
xor
mov
jbe
imul
ret
loopne
cmp
mov
lea
xchg
mov
incl
mov
cmpsb
xor
fbstp
push
jle
or
push
outsb
cmp
movsl
lods
xchg
ljmp
fstl
das
jg
scas
mov
insl
mov
xchg
popa
cwtl
and
push
jmp
arpl
rcrb
add
and
js
add
cmp
fadds
dec
inc
cmp
add
adc
mov
and
shll
lret
adc
and
pop
xor
ljmp
mov
imul
jo
mov
mov
jmp
bound
test
sub
test
push
lods
fistpl
lods
subb
jmp
hlt
mov
mov
jle
out
sbb
repz
mov
mov
lcall
call
mov
sahf
mov
shrb
ret
ljmp
cmp
mov
xchg
or
rolb
ljmp
dec
movsl
and
inc
add
ret
dec
fstpl
jnp
xor
xchg
cld
or
fidivs
xor
lret
jle
shlb
dec
pop
stos
es
jmp
ror
mov
add
popa
pop
adc
xchg
and
cmp
aaa
jnp
repz
call
or
decl
xchg
dec
int3
sbb
rorb
ljmp
add
adc
pushl
int3
scas
scas
mov
cwtl
popa
mov
in
jmp
jae
daa
push
inc
jae
aaa
incl
pop
not
or
loope
adc
fdivs
mov
jle
pushl
cld
or
dec
int
out
jbe
add
cmp
stos
sbb
xchg
jb
std
cmpb
imul
mov
adc
mov
in
push
adc
push
lret
addr16
jg
jmp
pusha
out
arpl
jp
mov
add
test
mov
insl
mov
decl
aaa
les
subb
les
clc
xor
ljmp
rolb
sete
in
or
mov
or
mov
add
shll
test
sbb
lcall
push
cltd
rcll
mov
js
pop
sub
iret
and
repz
push
repnz
add
mov
das
jg
ljmp
pop
ja
stos
loopne
loope
adc
cmp
sub
inc
pop
insl
mov
dec
mov
loope
sahf
lock
xor
or
pop
jp
stos
mov
cli
lcall
xchg
lods
sub
ljmp
and
adc
mov
test
lods
adc
outsb
rorb
dec
lds
xorl
hlt
or
add
cmp
dec
mov
dec
push
inc
call
push
bound
insl
repnz
jmp
and
pushl
stos
ret
jp
sbb
mov
insl
xchg
add
imul
fldcw
add
mov
loope
mov
iret
cmpl
jmp
jb
cwtl
incl
hlt
pop
dec
andl
fistpl
popa
std
lcall
push
loope
js
sbb
sbb
jno
pop
adc
pop
ljmp
fcompl
jecxz
je
insb
repz
out
imul
push
jo
cwtl
jmp
cmp
test
test
data16
sbb
fld
je
push
jns
call
add
lcall
jo
iret
stc
hlt
jmp
sub
dec
sub
mov
dec
or
and
jg
mov
sti
jne
orl
lock
test
xchg
dec
mov
add
stc
mov
mov
xchg
mov
cmp
fdivr
jg
incb
xor
xchg
jle
cltd
dec
sbb
mov
test
decl
inc
lahf
jbe
jmp
mov
ret
xlat
sub
cmp
decl
scas
gs
cmp
bound
jp
outsb
pop
or
sbb
pop
std
xchg
cmc
adc
cwtl
rolb
pop
add
and
pop
pop
out
sbb
lret
shll
mov
mov
sahf
ljmp
sub
cmp
clc
aam
cs
pop
inc
adc
and
adc
imul
and
xchg
aad
mov
mov
push
push
cmp
cmpsl
sarl
sbb
mov
inc
mov
popa
ret
xlat
out
ljmp
cmp
push
cwtl
icebp
mov
fidivl
nop
mov
dec
dec
cmpsb
rorb
xor
sbb
inc
repz
call
iret
mov
in
or
push
dec
sub
dec
sarb
jmp
aam
insb
repnz
leave
arpl
cmp
pop
jmp
lret
rclb
out
loopne
gs
cwtl
adc
sub
scas
loope
jg
dec
cmpsb
lret
call
pop
test
out
enter
add
inc
ret
lock
jmp
xchg
imul
and
adc
jge
push
dec
fdivl
bound
or
scas
jmp
lods
push
mov
push
jae
push
jp
in
push
pop
sbbl
cld
inc
inc
or
xchg
test
popa
adc
inc
in
js
mov
loop
xchg
sbb
lcall
mov
lods
loope
ret
fistps
jns
adc
orl
inc
pop
cld
xchg
inc
adc
negb
daa
sub
xchg
outsb
push
jmp
insl
jecxz
jmp
test
sar
or
icebp
adc
jl
dec
inc
xor
iret
ficompl
and
mov
mov
scas
loop
and
push
mov
mov
pop
imul
shlb
call
inc
lock
push
imul
mov
int
fisubs
sub
mov
mov
cmp
inc
clc
test
scas
xor
inc
es
ret
mov
fdivr
and
xchg
cmp
repz
negb
mov
shrl
xor
lret
push
add
and
dec
in
mov
xor
ljmp
aas
mov
or
sbb
push
xchg
fs
push
rol
dec
jecxz
mov
repz
cmp
and
xchg
outsl
xchg
incl
in
mov
pop
xchg
adcl
xor
outsb
call
xor
bound
int
mov
jp
sub
jl
rolb
push
fwait
adc
pop
dec
and
ret
inc
xchg
int3
cltd
into
stos
adcb
push
ss
in
ret
pusha
insb
jmp
mov
mov
xor
xlat
test
add
mov
and
stc
or
push
mov
cmp
movsl
rclb
lahf
sar
call
imul
and
pusha
cmp
sbb
out
jbe
cmp
pushl
std
hlt
repz
xor
out
or
jnp
jmp
xchg
jb
rcl
rorb
mov
jo
pop
fidivl
mov
lcall
jnp
add
decl
ds
out
mov
push
cmp
pop
enter
sahf
movsb
cmp
sti
jmp
push
test
pushl
inc
enter
or
adc
mov
ljmp
mov
jle
int
cmp
loop
pop
loope
shlb
jnp
testl
fcmovnb
push
das
bound
mov
push
push
out
stc
sbb
or
pushl
dec
loopne
fxch
adc
add
push
hlt
aas
xchg
aas
sar
xchg
push
jp
mov
aam
xor
loope
lahf
icebp
shrl
ljmp
pop
in
xchg
push
push
xor
out
and
lret
adc
xchg
mov
push
imul
or
mov
bndldx
out
rcll
das
rcl
call
xchg
sub
mov
movsl
cmp
loopne
mov
aad
adc
movsb
cmp
outsb
lcall
jecxz
inc
jge
hlt
movsb
clc
insl
pop
pushw
lods
loop
xchg
xchg
js
fwait
je
ret
icebp
insl
mov
push
pop
dec
push
jmp
insb
cmp
push
in
dec
int
sbb
jmp
adc
movsl
dec
sub
mov
je
inc
ljmp
push
out
push
add
cmp
or
sbb
sbb
out
test
xchg
jbe
inc
sub
and
mov
dec
sbb
popa
decl
call
sahf
xchg
pop
pop
lahf
dec
adc
add
insl
sub
pushl
pusha
inc
push
test
pusha
xor
pop
repz
jns
adc
cltd
shlb
mov
dec
fdivp
push
icebp
jl
in
or
jne
stc
test
je
jo
decl
lock
mov
int3
adc
imul
xchg
push
es
dec
imul
pop
jb
pop
push
sub
fs
pop
stc
out
cmp
jp
call
imul
dec
adc
into
inc
mov
fistpl
in
sub
out
aam
mov
jnp
mov
mov
push
enter
ljmp
jmp
ja
enter
push
mov
adc
iret
xchg
xchg
xlat
fdivl
imul
jp
push
and
mov
or
ds
inc
ss
and
and
loop
incl
mov
rorb
call
andl
sar
mov
leave
xchg
imul
int3
rorb
mov
sbb
and
in
mov
fbld
jb
xchg
dec
adc
push
mov
jnp
pop
leave
add
ja
jg
repz
jmp
mov
mov
ret
push
movsl
lods
sub
pop
sarl
popa
pushf
dec
adc
icebp
hlt
push
mov
sarl
sub
ljmp
add
shl
add
inc
in
fwait
or
mov
add
or
dec
ss
xchg
fiaddl
fwait
pop
mov
fstl
jae
movsb
xchg
mov
xchg
incl
sub
div
push
insl
pushf
sbb
mov
mov
adc
loop
jecxz
das
adc
mov
push
stc
out
bound
mov
lea
xor
jne
test
aas
lods
sbb
push
std
in
lret
adc
scas
mov
lds
sub
mov
mov
decb
inc
inc
lods
shll
adc
mov
jmp
dec
outsl
xchg
sub
in
in
movsl
es
xchg
imul
rcll
outsl
jne
shl
push
lds
lds
outsb
call
push
insl
sub
stos
jp
sub
add
adc
jo
aam
lret
leave
pop
rcr
call
lcall
clc
push
pop
testl
jmp
xchg
jmp
movsl
push
out
out
mov
leave
xchg
ljmp
pusha
push
je
outsb
stos
mov
xor
int
lcall
inc
repnz
insb
cmc
mov
mov
lcall
xchg
add
xchg
lcall
jb
jno
and
pop
xchg
add
and
outsl
push
inc
jbe
bound
mov
nop
and
mov
test
jbe
cmp
clc
pop
or
out
insl
push
fidivrl
jecxz
ljmp
pop
dec
jae
ret
xchg
bound
push
and
add
mov
xor
sub
fdivrp
jmp
adc
xchg
push
xorb
ljmp
pop
cld
xchg
lods
mov
push
std
jmp
roll
int
xchg
seto
sub
or
mov
push
jmp
sub
fstpl
popa
stos
pusha
insb
or
mov
dec
and
stc
or
ret
push
icebp
aam
lahf
and
cmp
inc
hlt
out
les
imul
cmp
ja
cmc
mov
ljmp
mov
mov
stc
aam
pop
adc
inc
push
sbb
ljmp
jp
or
scas
cmp
xchg
jo
mov
inc
or
pusha
cltd
and
mov
cli
andb
inc
aas
adc
ret
mov
adc
jg
cmp
std
call
test
in
dec
add
in
arpl
xchg
or
mov
stc
sbb
aaa
xchg
les
or
sbb
ljmp
lret
and
push
xchg
pop
lods
sub
and
cmp
decl
pop
sti
jns
cwtl
shr
xchg
lock
add
pop
add
sbb
orl
sbb
xchg
push
pushl
jne
jb
mov
stos
cs
mov
test
and
pushf
inc
mov
fistpl
jb
adc
mov
push
jp
fsubl
mov
push
test
pop
and
and
stos
cmp
mov
lcall
pop
cmpsl
lods
dec
lcall
mov
nop
mov
cwtl
sbb
imul
mov
stos
call
imul
leave
stc
xchg
jae
and
or
in
decl
mov
out
xlat
int3
shlb
fnsave
mov
out
movb
jg
enter
xchg
ds
std
scas
stos
or
jg
push
fmull
iret
pop
je
scas
daa
popa
cld
ljmp
add
nop
dec
mov
push
loop
fbld
jg
mov
test
clc
out
icebp
cli
call
cli
int
aas
lcall
test
repz
dec
add
pop
pop
loope
sub
incl
mov
lods
imul
push
js
pop
mov
and
mov
mov
inc
jo
jmp
xor
cmpsb
les
pushf
xor
lcall
adc
test
pop
pop
daa
xor
leave
sbb
mov
jmp
in
movsb
sub
sbb
xchg
and
popf
jnp
xchg
pushf
xchg
aad
sub
lcall
in
xor
inc
jns
js
or
rorl
pop
arpl
js
xor
inc
jmp
in
fwait
stc
pusha
sbb
gs
push
pop
jg
lcall
pop
or
push
fildl
adc
shll
loopne
bound
add
das
cli
pushl
xchg
cmc
inc
inc
inc
cltd
sarb
inc
mov
mov
mov
loopne
incl
pop
outsl
fld
loopne
test
les
out
frstor
push
push
push
add
xor
incl
sub
push
push
std
in
and
repz
orb
pop
sub
call
cmpsl
mov
inc
or
loopne
rol
ret
das
inc
pusha
fidivl
mov
cs
daa
pusha
mov
dec
push
jae
outsb
cwtl
leave
pop
push
nop
dec
loope
call
test
pop
decl
fistpl
insl
arpl
pop
into
pop
push
xchg
xor
pop
inc
cld
jns
loopne
nop
or
stos
pushl
sub
xor
mov
sahf
xchg
or
xor
push
clc
les
jg
xor
push
mov
sbb
ret
sbb
push
ror
push
adc
dec
lcall
outsl
push
jmp
ret
scas
ficompl
shrb
call
inc
stos
mov
inc
cmpb
pop
sahf
pusha
ljmp
or
cli
push
xor
outsl
push
gs
outsb
ss
mov
sbb
scas
pusha
dec
sbb
lea
sar
call
cmpsl
fisubl
dec
cmp
cmp
jle
scas
or
gs
pop
out
mov
data16
je
out
and
cld
lds
sub
inc
pushf
ret
adc
xor
outsb
orb
xor
lds
mov
pusha
dec
push
lcall
sbb
negb
or
aas
outsl
ss
dec
movsl
or
pop
xchg
pop
sub
mov
or
sbb
ss
ljmp
popf
shll
cmpsl
jb
inc
enter
dec
pushf
mov
ljmp
hlt
fcoml
movsl
jecxz
push
shlb
lahf
jns
rcrl
add
jnp
cltd
xchg
sbb
inc
cld
jo
stos
adc
mov
ss
bound
cmp
shll
or
and
std
push
call
xchg
decb
cld
int
ret
mov
adc
sbbb
pop
pop
out
cmp
sub
inc
test
movb
push
mov
in
shlb
mov
pop
dec
data16
and
movsl
push
aaa
jb
inc
mov
xchg
jo
rcrl
xchg
mov
mov
or
out
lds
lcall
call
cmp
lcall
xlat
std
dec
cmp
cmp
xor
adc
mov
pop
sub
and
int
adc
lds
pop
loopne
jo
and
jnp
movsl
dec
fwait
stos
aas
test
lahf
jbe
inc
call
rclb
imul
pop
pop
sub
clc
fcomi
add
mov
std
incl
mov
scas
out
cwtl
out
insl
insb
or
iret
push
notl
mov
call
mov
repz
out
cmpsb
push
inc
adc
cmp
decl
inc
gs
stos
fbld
in
pop
mov
shlb
shl
nop
rorl
jno
gs
decl
in
cmp
mov
xchg
enter
aas
fsub
lds
stos
jle
cmpb
dec
mov
cmp
in
rolb
mov
mov
pop
pop
adc
cli
data16
add
pop
cli
push
jbe
xchg
cld
push
push
push
xor
push
jae
cmp
mov
or
inc
inc
hlt
ficoms
sti
ffree
enter
dec
test
aas
insl
and
sbb
aaa
inc
pop
pop
sti
lret
incl
cld
lock
shrl
jmp
lods
or
ret
jg
lahf
daa
sbb
ljmp
mov
aas
test
or
lods
add
cld
fnstcw
mov
push
lahf
test
mov
jmp
mov
cmp
jecxz
insl
xor
sub
mov
mov
add
mov
mov
mov
enter
rorb
xor
sub
jge
rorl
inc
mov
push
sahf
adc
insb
pusha
sub
mov
sub
push
push
cld
sub
sub
xor
out
sarl
cs
jge
popa
mov
mov
fcomps
test
sub
sahf
dec
cltd
adc
inc
dec
nop
decl
adc
add
repnz
repz
ret
fcoms
dec
sub
stc
jo
mov
sbb
incl
test
or
push
test
jg
mov
decl
popf
add
xor
sbb
sbb
cltd
inc
aam
fs
xor
in
ljmp
or
faddl
cmpsb
into
iret
mov
iret
xchg
pushl
mov
adc
loopne
or
and
loope
movsb
xor
dec
fcomip
pushl
jo
add
mov
aad
push
xor
jg
aad
inc
lock
jl
es
cmp
sub
test
ja
movsb
cltd
add
pop
outsl
ficoml
ljmp
push
xor
cmp
jle
xor
lcall
lcall
sub
addb
inc
sbb
jo
lret
out
rcll
ds
test
jmp
jns
fwait
jl
pop
lret
pop
lcall
lcall
scas
pop
lock
and
mov
dec
inc
xor
popf
cmpsb
out
repz
js
jl
mov
loopne
jge
imul
test
xchg
cmpb
inc
push
jge
mov
dec
cld
xor
rol
xchg
xchg
icebp
or
inc
xchg
outsb
xchg
outsl
std
lcall
fs
jge
pop
adc
scas
mov
xor
jg
mov
and
mov
jle
pop
fmull
in
jno
sti
jae
orl
add
fisubrl
aad
or
inc
pop
xor
sti
sub
pop
mov
mov
push
xchg
or
icebp
test
sbb
decl
xchg
add
jne
hlt
mov
jmp
and
dec
cwtl
push
push
pop
repz
ljmp
ret
pop
icebp
xchg
cmpl
mov
inc
mov
into
jg
aas
fnstenv
shll
call
adc
inc
inc
sub
mov
popa
mov
movsb
push
enter
or
adc
enter
push
cmp
cmp
fcomps
aaa
enter
mov
decl
cli
pop
icebp
adc
imul
mov
filds
push
shrl
mov
mov
mov
xchg
enter
add
inc
xor
sbb
sub
lcall
push
movsl
repz
hlt
lock
jecxz
adc
frstor
xor
push
xchg
push
loop
pop
iret
fcoms
mov
call
push
rorl
mov
loop
fdivrs
movsl
outsb
imull
push
jg
pop
lock
fcoml
adc
into
add
push
imul
or
mov
push
jecxz
imul
decl
js
push
lea
sbb
cmpsb
mov
loopne
mov
call
jg
lcall
movsb
adc
int3
in
push
loope
into
jns
outsb
xor
daa
adc
clc
jmp
or
xorb
adc
cmp
or
pop
cmp
jbe
adc
ss
fldt
lahf
or
movsl
mov
mov
dec
int3
aam
mov
sbb
aam
cmp
adc
incl
pop
or
or
push
jns
xchg
adc
fnstsw
adc
insb
jb
lcall
push
leave
and
cmp
sub
adc
cwtl
lret
pop
stos
adc
lret
pop
adc
int3
jg
sahf
fstl
jge
mov
adc
pushf
jmp
mov
xor
leave
jae
mov
xor
inc
inc
sbb
roll
cmp
es
scas
pop
jno
aam
xlat
inc
fstpt
adc
mov
dec
cltd
test
incl
xor
dec
dec
xor
ljmp
rorb
xchg
repz
dec
in
leave
dec
out
pop
aad
sub
loopne
decl
cmc
xchg
lahf
hlt
fnstenv
pop
orb
loop
div
mov
mov
cmp
mov
das
ret
add
push
push
xor
jg
int
movsl
mov
pop
mov
xchg
add
lock
mov
insb
pop
sahf
loope
cmp
lcall
sbb
or
push
cmpsl
test
push
cmp
rcrl
xchg
lds
bound
jg
pop
popa
xchg
cwtl
popa
pop
mov
incl
adc
mov
add
out
dec
push
pop
cmp
xorb
incl
push
ret
jno
cs
jp
in
cmp
and
mov
sub
sbb
jge
fwait
mov
fdivl
int3
das
outsl
lods
mov
bnd
ljmp
lret
pop
dec
cli
scas
mov
outsb
stos
pop
xchg
jb
scas
xor
lds
faddl
out
imul
ljmp
pop
flds
xor
pop
pop
sub
int3
ljmp
dec
in
cltd
mov
inc
sarl
call
sub
jno
push
sbb
mov
or
push
out
shl
rcl
outsl
clc
push
stc
adc
dec
pusha
into
out
fimull
dec
dec
leave
cs
mov
into
repnz
adc
push
lods
cltd
out
and
fisubrs
fcoms
push
testb
or
loop
mov
push
stos
hlt
clc
adc
inc
dec
sahf
pop
arpl
das
ss
mov
in
out
pop
test
mov
imull
mov
lret
jno
and
shlb
call
jb
cmpl
jb
cmp
inc
sti
inc
dec
xchg
add
sar
pushl
add
push
pop
or
and
jae
or
repnz
jg
clc
stc
fdivrs
cltd
xlat
jecxz
lea
lods
push
pop
movsl
pop
xorb
pop
push
sar
lcall
mov
xchg
xchg
xchg
clc
mov
rcr
inc
out
sub
push
pushl
jp
sbb
push
push
cmc
lcall
cmp
jge
inc
daa
mov
cmp
pop
imul
sahf
incl
aaa
pop
cmp
inc
push
pusha
mov
jns
clc
xchg
gs
mov
and
sar
lcall
ffreep
out
nop
jl
or
ret
out
cmp
pop
orb
repz
cmovge
jmp
outsl
in
add
movsl
cld
sub
sti
and
cmp
ljmp
lea
fsub
xchg
sub
or
add
jle
jg
sub
mov
jnp
in
cmp
fwait
add
sub
sbb
inc
xchg
clc
pushl
insb
jno
pop
ja
stc
lds
vcmpsd
add
mov
mov
jmp
sub
fs
call
inc
stc
out
adc
pop
shr
mov
cld
jns
adc
aad
sti
adc
jp
outsb
inc
out
addr16
add
adc
xchg
sar
jmp
loopne
xchg
lods
or
fwait
into
ljmp
dec
xchg
mov
mov
jg
bound
xor
mov
ljmp
nop
sub
dec
loopne
aaa
ret
lods
punpckhwd
jmp
out
add
idivl
imul
flds
insb
mov
clc
pop
cmp
es
ja
mov
ds
dec
in
adc
rol
xor
sub
dec
fwait
popa
mov
mov
test
shrb
incl
imul
jp
or
jo
jg
ret
aaa
and
push
loop
fcmovb
fcmovne
push
mov
ud0
jmp
lods
aad
repz
icebp
mov
push
je
inc
shl
iret
cmc
aas
xchg
inc
lcall
arpl
dec
xchg
int
stc
cmp
divb
das
adc
mov
push
mov
cmpsl
and
adc
pop
repnz
add
js
inc
mov
cltd
mov
inc
mov
pop
lds
fwait
ror
divl
sti
dec
test
dec
aam
mov
int
call
xchg
imul
cmpsb
std
scas
or
popf
lods
mov
sub
push
mov
test
sti
adc
mov
xor
decl
pop
inc
adc
xchg
movsl
dec
inc
movsl
push
push
mov
ljmp
add
call
sub
scas
inc
and
adc
call
mov
lods
sarl
out
icebp
es
call
scas
cli
mov
fdivrs
push
mov
push
int
lods
data16
scas
int
add
jg
cmp
movsb
scas
pop
es
add
in
pop
inc
xorb
rcrb
call
stos
add
out
imul
xchg
test
jp
popf
ja
lcall
jb
movsb
jmp
mov
mov
xchg
into
and
test
xchg
mov
stc
mov
mov
sub
pushl
rol
fldl
mov
scas
inc
je
stos
mov
and
test
fldt
jns
cld
jb
bnd
mov
jae
xor
pop
inc
jp
test
aas
rcll
dec
movsl
sub
jge
rol
jo
pushf
ret
pop
jo
les
add
fisubrl
lods
subb
rcrb
jg
test
mov
mov
xchg
mov
mov
jnp
or
or
xor
mov
jne
ja
mov
push
push
cltd
pop
dec
adc
incl
dec
mov
cwtl
outsl
push
cwtl
dec
imul
arpl
cmp
mov
rolb
mov
push
test
das
push
mov
push
jge
sbb
icebp
popa
adc
mov
pop
or
jno
mov
cmp
addb
scas
jmp
mov
cwtl
lret
jbe
xlat
push
mov
subb
xchg
jle
inc
jno
dec
mov
aas
sbb
push
push
je
xchg
mov
inc
shlb
mov
shrl
push
and
cld
jg
xchg
mov
push
outsb
sbb
and
xchg
data16
xchg
jmp
mov
lcall
sub
mov
inc
test
sub
cld
fst
dec
loop
sbb
fdivrp
call
pop
pop
pop
roll
roll
sub
sbb
sbb
shl
inc
cmp
jge
push
fcmovbe
imul
inc
push
jmp
push
aaa
jns
jne
loop
adc
lcall
js
insl
incl
mov
jo
and
mov
add
mov
xchg
das
add
jge
mov
lods
jl
sbb
or
jbe
inc
add
shrb
cmc
sub
mov
jl
pusha
fsub
insb
jge
fimull
push
inc
mov
and
adcl
mov
mov
xchg
sub
inc
pop
sub
out
pop
ljmp
in
in
or
xor
fadds
or
jno
mov
incl
jnp
dec
in
sbb
sub
xor
les
dec
sbb
xor
mov
pushl
pop
lcall
test
xchg
xorl
dec
test
cli
icebp
decl
lock
lea
enter
les
outsb
shll
jg
hlt
repz
jno
mov
pusha
and
mov
jae
xchg
movsl
mulb
mov
ljmp
sbb
sbb
loopne
and
jae
xchg
movsb
sahf
xchg
lcall
push
push
ss
xchg
mov
push
push
mov
add
sbb
cmp
push
pop
pop
ret
test
lods
inc
cld
dec
iret
sbb
xchg
sahf
or
ja
sub
xor
adc
jbe
popl
push
out
pop
rcrl
inc
pop
hlt
fidivs
je
mov
xor
adc
sbb
mov
test
lret
cmc
jb
mov
decl
inc
into
or
pushf
sub
cltd
test
ljmp
fisubrl
mov
cld
cmp
shl
insl
data16
xor
test
nop
loop
sub
decl
nop
mov
outsl
rcrl
push
xor
push
mov
mov
cmp
jg
jmp
xor
stos
es
das
clc
std
sub
ljmp
data16
repnz
lret
ret
in
imul
cmp
fcomps
pusha
lock
call
xchg
divb
movb
dec
fwait
jae
cli
pop
dec
out
sbb
popf
mov
inc
xchg
sar
jmp
enter
outsb
ss
lret
mov
movsl
mov
notl
push
ljmp
in
push
mov
cmp
xchg
stc
add
sti
and
or
negb
pushf
jnp
mov
mov
dec
lret
int3
xchg
test
xchg
mov
stc
mov
fyl2x
pop
dec
std
jns
cmc
adc
in
or
aaa
lods
cli
jmp
popf
fisubl
xchg
gs
inc
inc
xor
call
xchg
rcrl
dec
fcoms
sub
or
sbbl
pop
cmp
ds
call
dec
adc
xor
insl
ret
pushf
lret
dec
popa
psllw
jns
lods
push
lock
pop
mov
add
pop
xor
cmpb
pop
icebp
clc
cmpsb
xchg
test
iret
push
xor
ficoms
fcoml
test
and
test
mov
sbb
xchg
adc
push
mov
jl
fisubrs
sbb
decl
lahf
xchg
por
cld
cmp
push
jno
sub
inc
test
lea
incl
lods
push
fidivrs
adc
and
int3
lods
xor
jo
xchg
mov
dec
outsb
shll
mov
and
dec
repnz
push
leave
lock
and
ja
incl
xchg
shrd
cmpsb
xor
pop
ss
and
adc
sti
repnz
mov
stos
jmp
arpl
xchg
shll
loopne
out
out
fdivp
fidivl
add
cs
push
sub
adc
out
xchg
nop
push
into
addr16
rcrb
insl
leave
inc
push
sbb
xchg
cmp
lahf
and
push
xchg
aaa
or
dec
rcll
jg
cmp
jg
or
cmp
daa
test
arpl
lods
std
cmp
inc
cmp
push
mov
cs
mov
cmp
add
xchg
data16
call
fisubl
jns
stc
xrelease
sar
jmp
je
adc
push
test
and
dec
aaa
xor
lods
xor
sbb
jmp
hlt
pop
mov
cmp
addl
jle
jg
imul
inc
mov
addl
jge
test
xor
pop
pop
icebp
inc
pop
sbb
mov
int3
ja
incl
sbb
mov
xor
push
bound
push
mov
test
xchg
and
test
mov
adc
int
sbb
add
xchg
pop
cmpsl
jno
and
push
lea
scas
mov
scas
cli
jmp
adc
mov
mov
out
push
test
orb
rorl
addr16
push
out
push
push
rorb
shrb
adcb
iret
mov
jb
mov
push
shll
add
adc
push
ret
pushl
push
adc
and
js
sub
lock
mov
mov
dec
xchg
mov
xor
incl
fwait
lea
rorl
add
out
fdivrp
jg
and
outsb
jl
add
jb
xchg
pop
decb
push
push
rorb
mov
in
mov
fbld
push
les
cmp
push
leave
mov
pop
cwtl
ljmp
dec
nop
fadds
cmp
data16
fisttpll
mov
fimull
push
aaa
out
fmulp
lcall
jbe
ds
mov
ss
call
lea
les
mov
hlt
jle
lcall
xlat
sub
loope
fiaddl
mov
cld
outsl
dec
lock
push
xchg
mov
jg
mov
and
sbb
sub
aam
inc
ja
inc
sbb
out
lcall
cld
lcall
sub
dec
add
adc
xor
je
mov
fisubl
inc
mov
dec
and
mov
aad
pop
add
or
movsb
cmc
call
stos
aad
pop
mov
jmp
incb
jne
and
loope
outsb
push
or
pop
scas
sub
sub
or
les
repz
fwait
fs
int3
pusha
lods
mov
or
pop
sub
int3
je
cmp
mov
pop
jnp
jp
jg
aaa
test
push
push
mov
mov
dec
insb
mov
out
hlt
mov
dec
inc
sub
push
nop
sub
pop
in
daa
push
jg
les
gs
jmp
lahf
popa
adc
push
js
pop
or
loopne
cli
push
ficoms
mov
rorl
add
lret
jg
hlt
mov
sti
pop
iret
sbb
fidivl
pop
jo
xchg
ret
cmp
call
jae
out
or
push
xor
movsl
fisubrl
add
vunpckhpd
xchg
ljmp
jae
shrl
mov
das
dec
popf
jl
dec
mov
inc
shrb
sbb
jno
cli
mov
rorl
in
aam
repnz
lods
sub
sbb
or
mov
test
sub
jge
sahf
sub
sbb
dec
sbbl
std
cmp
sub
jl
inc
imul
outsl
inc
fimull
adc
mov
sub
insl
loope
xchg
push
inc
jge
insl
test
pop
decl
outsl
into
ret
jp
jmp
lahf
cmc
insb
aaa
fistl
and
ljmp
dec
jg
mov
enter
mov
sbb
mov
mov
pushl
cld
push
sbb
mov
ret
mov
lret
adc
mov
addr16
testl
sub
out
dec
mov
ret
fmull
cmpsl
pop
mov
sub
std
xchg
jecxz
stc
push
and
out
imul
stos
jnp
cld
xchg
dec
sbb
andb
xor
pop
mov
jmp
gs
cmpsb
daa
popf
aam
mov
dec
clc
jg
xlat
mov
pop
add
fstl
mov
stos
xchg
ljmp
leave
ret
sbb
jg
jle
leave
mov
sub
or
test
aad
pop
mov
ljmp
xchg
movsb
sbbl
inc
stc
rolb
sub
test
or
or
ds
mov
inc
aaa
call
adc
push
lahf
dec
mov
out
push
add
stc
mov
push
cmpsl
cmp
jge
mov
loopne
sbb
cmp
sub
jg
jle
fldl
out
or
or
outsb
push
mov
dec
push
shlb
dec
inc
nop
lods
cmpsl
stc
popa
adc
mov
mov
push
insl
inc
inc
cmp
jp
push
xlat
push
aad
dec
insl
aaa
lcall
sub
out
fisubrs
sub
imul
mov
or
inc
cmp
fisubl
jmp
mov
bnd
inc
sbb
dec
ss
dec
mov
mov
pop
ds
sub
stos
int3
in
stos
pop
fildl
mov
pop
inc
leave
push
int
call
fstps
stos
add
lret
dec
push
inc
iret
popf
cmp
and
stos
mov
or
jl
scas
arpl
enter
hlt
lcall
cmp
les
cmp
mov
add
mov
add
dec
aas
out
pushl
xchg
push
gs
xchg
mov
imul
fld
sbb
inc
jge
pop
es
add
cmp
push
pop
ror
cli
cmpsl
insl
pop
bound
inc
stos
lcall
movsb
push
cmp
ljmp
fbld
mov
iret
or
cmpsb
inc
mov
test
test
mov
test
jge
gs
dec
pushf
mov
sbb
out
and
arpl
insl
std
outsb
lea
jmp
inc
inc
in
mov
pop
jmp
nop
dec
dec
or
ljmp
test
jg
and
ljmp
pop
add
push
add
and
out
sbb
outsb
je
jp
outsl
xor
xor
das
adc
incl
lods
faddl
sub
sbb
leave
pop
scas
cmp
loopne
jo
dec
data16
push
inc
test
jb
xchg
mov
xlat
jae
into
cmp
pop
mov
out
sbb
pushl
orl
sub
cmp
mov
inc
add
jnp
mov
xlat
in
adc
lock
jg
cmp
lcall
or
dec
jo
inc
dec
ret
fcoms
jno
jb
jmp
paddusw
mov
and
sub
ror
mov
stos
repnz
sahf
leave
or
mov
lcall
xchg
push
xor
fcomps
dec
lcall
or
or
test
xchg
xchg
sarb
jb
cmpsb
test
push
sar
aas
lret
hlt
add
pop
jge
or
pushl
rorb
testb
push
stos
mov
incb
pop
lret
outsb
into
push
mov
mov
jno
cmc
jmp
mov
in
sti
sub
imul
and
jne
ljmp
pop
inc
mov
add
inc
hlt
or
inc
das
test
mov
dec
fcomip
ljmp
aas
cwtl
cli
xlat
imul
fs
jle
dec
outsl
xchg
fnstsw
decl
or
sub
iret
inc
loop
jb
mov
fwait
fs
cmp
push
and
mov
insb
sar
cmpsb
or
subl
sti
into
mov
in
ja
ret
fcompl
sti
clc
jae
pop
pop
popa
jg
inc
cld
mov
push
cmp
lock
outsb
cmp
or
push
adc
scas
dec
adc
jae
and
mov
or
inc
cmp
push
xlat
jmp
pushf
mov
or
out
adc
mov
inc
cmp
cli
jge
ljmp
jnp
ja
mov
imul
in
push
adc
shr
mov
or
decl
dec
add
push
lds
rolb
cmp
mov
ljmp
loopne
cmp
mov
imul
lret
mov
and
push
inc
js
mov
test
ficompl
push
iret
ljmp
xor
outsl
push
pop
jne
xchg
int3
test
push
dec
xchg
mov
hlt
fwait
clc
jg
call
fucom
stos
jb
push
sbb
bound
lret
scas
mov
ljmp
mov
loope
cmp
fists
pop
mov
insb
fwait
or
test
or
ljmp
call
jecxz
stos
push
pop
rcll
push
cmp
shr
mov
pushl
or
out
std
push
addr16
xchg
xchg
sti
push
adc
mov
mov
jl
int
stos
and
inc
cmc
outsb
inc
mov
mov
fists
int
insl
cli
jae
push
adc
pop
adc
imul
add
pushl
in
adc
mov
test
jno
scas
mov
into
add
idivb
xchg
aam
pushw
repnz
lcall
jmp
pop
xchg
xor
xchg
push
xchg
mov
cmpl
cli
sub
pop
add
sub
into
inc
scas
insl
jp
pop
cmp
rcrl
int3
xchg
jle
cmp
xchg
mov
orl
leave
and
or
lcall
sub
cmp
dec
addr16
sub
inc
ret
pop
inc
xorl
scas
jo
or
lock
ljmp
frstor
lea
je
cld
pop
pop
sbb
nop
sbbl
iret
sbb
xor
decl
stc
mov
mov
scas
int3
sub
ljmp
and
data16
push
pushl
add
fdivs
xchg
jns
arpl
jp
stos
push
sub
in
inc
cld
ljmp
mov
cltd
and
cmpb
shlb
test
mov
or
shlb
roll
and
mov
adc
test
decl
call
mov
rclb
adc
stos
stos
jge
negl
mov
dec
ret
neg
jo
fcmovb
lods
sub
xor
popf
cmp
add
icebp
push
stos
jp
and
mov
incl
xor
stos
negl
ret
shll
outsl
aad
imulb
rorb
add
push
pushf
lahf
mov
add
cwtl
out
aam
and
jmp
pop
mov
lods
fsub
mov
scas
xchg
cmp
rolw
fwait
push
cmp
sbb
ljmp
mov
push
insb
push
lock
lret
sub
sbbl
cli
push
int3
aas
add
adcl
xchg
fwait
or
and
lret
test
jno
pop
pop
or
js
pushf
addr16
clc
fildl
es
jne
popa
loope
test
jg
dec
insl
inc
mov
out
or
xchg
rolb
pusha
push
scas
or
imull
xor
call
mov
jb
and
idivl
in
rclb
fdivr
jl
cltd
ljmp
sbb
jmp
xor
push
pop
add
movb
push
mov
adc
jp
sub
adc
ret
call
icebp
mov
adc
push
icebp
fimuls
popl
es
mov
pushl
lods
pop
mov
repz
aad
and
popf
dec
inc
adc
add
xchg
pop
lahf
loop
and
cmp
leave
fucomi
lock
out
xchg
dec
push
and
adc
pusha
pop
cltd
xchg
or
les
repnz
inc
aaa
push
mov
sbb
leave
cli
pushl
addr16
rcrb
inc
and
rcrl
addr16
jmp
cmp
mov
pop
sbb
jmp
cld
sub
jg
lds
and
jg
push
ss
and
mov
cmp
and
pushl
out
or
nop
mov
cs
jge
adc
jl
es
mov
imul
dec
inc
cmp
jmp
or
arpl
call
or
gs
pop
filds
push
pop
mov
mov
test
xor
or
mov
mov
mov
outsb
iret
inc
mov
pop
outsl
jns
pop
pop
pop
jno
sar
jmp
insb
adc
mov
dec
push
sub
jmp
mov
ja
or
mov
xchg
cmp
idivb
mov
jmp
jb
pop
outsl
cwtl
jle
fldenv
gs
std
mov
stos
fists
xor
xor
fwait
arpl
mov
and
incl
mov
push
and
adc
pop
fbstp
mov
das
adc
incb
or
xor
out
daa
shlb
jno
sbb
inc
out
stos
cwtl
idiv
push
sub
jne
lret
jl
test
jmp
sbb
push
sbb
lods
sub
mov
xchg
mov
adc
sub
cli
and
ljmp
xor
cmpsb
xor
cmp
lret
jns
xor
mov
pop
repz
jg
pop
mov
push
sub
insl
push
divl
jg
das
adc
jnp
mov
repnz
push
sub
std
insb
leave
fdivrl
adc
pop
mov
jp
add
clc
push
add
inc
enter
mov
pushl
or
out
jbe
hlt
repz
and
aas
lock
mov
in
in
or
jmp
or
gs
lcall
push
inc
mov
cmp
lret
adc
pushf
add
data16
mov
ss
xor
incl
xor
xchg
cmp
jnp
pop
mov
pop
xlat
ljmp
fstpl
insl
cmc
rcll
mov
mov
cmpsb
sub
fs
push
cmp
aad
movsb
sbbl
or
lea
cltd
clc
frstor
push
jp
dec
negb
and
es
push
inc
mov
data16
cmp
xchg
fcomi
mov
loopne
ljmp
sarl
imul
sbb
jnp
lods
lret
mov
jo
cmp
arpl
mov
in
test
jo
sti
sbb
dec
adc
mov
push
ret
cli
call
cmp
sbb
mov
clc
cld
ljmp
jg
mov
and
sbb
mov
or
jb
ja
jbe
pop
clc
idivl
cli
call
mov
enter
dec
in
das
pusha
out
sti
incl
sbb
jmp
xchg
jg
rcl
jp
fbld
add
hlt
aaa
rol
pushl
jne
jnp
pop
sub
sub
add
xor
nop
jle
jmp
jmp
adc
sbb
mov
test
rcl
cli
jg
pushl
mov
sub
or
adc
jle
add
das
xchg
xor
lcall
je
xorl
icebp
cmp
ds
sti
jp
pop
icebp
xor
pop
push
popf
xchg
inc
sbb
lret
lcall
aam
bound
stos
ljmp
aaa
cmpsb
mov
data16
lret
jl
rol
inc
inc
push
fs
cld
imul
jp
push
lcall
negl
mov
jae
jbe
or
cwtl
js
add
mov
push
roll
and
pushl
add
scas
sub
fbld
xor
add
filds
jp
and
outsb
mov
and
dec
cs
mov
incl
jns
push
adc
out
arpl
sub
mov
movsb
ret
pop
insl
aad
sti
jg
stos
fsub
and
xor
mov
out
iret
push
add
cmp
jg
mov
xor
inc
dec
fs
cltd
push
or
adc
push
enter
lret
xor
call
int
int
pop
cmp
xor
jno
dec
jg
ljmp
xchg
data16
int3
iret
dec
xlat
pop
sbb
test
in
loopne
and
lcall
inc
scas
fstl
sarb
cmp
pop
cli
aas
jg
flds
inc
int
data16
add
or
aaa
adc
std
pop
mov
dec
mov
cld
call
jae
fsub
pop
sbb
divl
sub
inc
jo
outsb
outsb
inc
clc
jge
mov
jecxz
dec
hlt
outsb
divb
hlt
cmp
mov
add
push
inc
jnp
test
sub
decl
test
into
pop
sub
xorb
stos
nop
adc
adc
ljmp
dec
sbb
push
jo
sub
fadds
test
cmp
insl
add
out
pop
jmp
loopne
mov
cmpsb
gs
decl
rolb
mov
ficoml
jp
rcll
xor
cmp
sbb
lcall
dec
frstor
fstp
popa
mov
jns
xlat
lcall
cmc
inc
jecxz
push
das
fildl
push
mov
pop
jecxz
push
sarb
jg
mov
shlb
aam
shll
or
pop
in
daa
cmpsl
lahf
decl
scas
inc
or
sub
push
jbe
cli
es
mull
sbb
jo
les
or
aas
hlt
mov
rorb
xchg
imul
xchg
sti
icebp
sbb
call
cmpsb
outsl
add
subb
cmp
ss
movb
movsb
filds
incl
xorl
mov
rorl
add
jb
mov
cmpsl
inc
jb
in
ljmp
cli
enter
mov
and
pop
data16
adc
fidivrl
icebp
fimuls
rcl
stos
popa
mov
scas
push
mov
cmp
push
idiv
adc
imul
mov
cmc
jmp
in
pop
mov
sub
xchg
or
or
scas
dec
mov
movsl
scas
scas
add
adc
out
jle
fstp
jnp
ljmp
fldl
rolb
mov
xor
and
pop
jle
popf
sub
or
call
arpl
xor
and
loope
push
mov
xor
aam
incl
mov
cmpl
dec
and
cmp
neg
cwtl
jl
push
out
xor
jmp
mov
outsb
push
test
ror
mov
xor
loop
ror
push
mov
out
or
fwait
dec
jbe
mov
mov
ljmp
xchg
or
push
stos
inc
repz
cmp
pop
inc
jae
fmuls
mov
sub
jmp
jno
mov
cmp
sbb
ljmp
xchg
outsb
int3
cmp
ret
addr16
and
mov
shlb
push
test
or
lods
insb
push
jo
or
addr16
and
mov
mov
mov
pop
imul
movsl
sub
adc
and
sub
lds
mov
lcall
outsb
je
outsl
mov
inc
or
shl
or
mov
testb
add
ss
bound
sbb
pop
jbe
sub
lcall
push
jno
push
cmp
pop
add
pop
lcall
call
clc
sbb
inc
fbld
adc
sub
sahf
outsb
mov
mov
jp
repz
inc
sub
in
ljmp
push
fst
out
jmp
lcall
loop
mov
test
pop
leave
test
imull
rcl
popf
sahf
call
dec
es
int3
sbb
ret
lahf
cmp
aad
mov
mov
inc
mov
mov
in
pop
movsb
push
jnp
jb
mov
pop
xor
ljmp
ljmp
scas
inc
xchg
mov
inc
in
je
dec
test
cmp
movsb
std
or
ret
sbb
std
push
inc
icebp
jmp
aaa
pop
and
imulb
cmp
jb
lods
jecxz
inc
dec
pop
scas
add
ja
fldcw
stc
pop
scas
and
js
pop
add
and
inc
adc
stos
mov
sti
subb
xor
dec
add
test
xchg
pushl
cld
jge
icebp
js
push
and
clc
mov
ss
adc
arpl
mov
imul
addb
shrl
aad
push
ljmp
adcl
xchg
cmp
cmp
push
inc
cmpsl
leave
and
pop
es
cmp
cmp
cmp
pop
push
xchg
test
jne
inc
packsswb
fimuls
cli
call
or
pop
pusha
adc
mov
pushl
and
shll
push
out
lods
add
mov
pop
cmpsl
mov
pop
pop
fxam
jmp
add
outsb
sbb
inc
hlt
lret
pop
outsl
mov
scas
fimull
sub
push
popa
add
lcall
mov
les
sbb
arpl
ds
cmp
mov
push
inc
lods
mov
cli
movsl
ret
sbbb
sbb
das
call
out
ds
jle
mov
pop
cmp
cmp
fwait
clc
sbb
lods
loop
pop
test
push
xorl
pop
insl
sbb
add
outsl
nop
push
mov
daa
sahf
pushf
mov
xchg
push
jo,pt
ror
scas
fptan
movsb
fucomi
insb
dec
cli
js
mov
pushl
inc
add
ret
xchg
push
mov
push
push
xchg
mov
subl
icebp
call
push
jmp
push
or
jmp
cmp
pop
inc
cld
lcall
inc
mov
add
mov
or
jg
subb
xlat
dec
ja
sub
mov
xor
decl
xor
add
and
ficomps
mov
xchg
loopne
cmc
mov
fcomip
je
shll
std
mov
lret
outsb
push
mov
push
push
xor
subb
ljmp
sbb
cmpsb
cwtl
ds
jbe
add
fwait
testb
in
dec
lcall
test
jb
in
push
repnz
cmp
add
aas
sub
mov
mov
sahf
adc
push
xlat
mov
push
cmp
stc
dec
xor
int3
cmpsb
add
in
int
inc
mov
jb
jle
inc
sbb
punpckhwd
filds
adc
jo
test
sbb
dec
adc
jle
mov
test
mov
mov
sarl
dec
clc
jge
push
and
inc
mov
es
pop
call
mov
cmp
jmp
xchg
stc
and
xor
jg
fwait
es
sbb
mul
sti
lahf
in
add
jns
mov
incl
roll
sub
std
add
inc
jmp
mov
lea
xor
daa
mov
add
adc
xchg
ret
pop
push
es
pushl
inc
test
fldt
fadds
jl
push
ret
mov
sub
inc
cmp
and
dec
add
xchg
add
shl
push
cmpsl
sub
and
shrb
icebp
pop
jmp
lcall
xchg
xchg
add
adcl
mov
adc
cmp
xor
jmp
sub
dec
aam
bound
jno
sub
or
xchg
cmp
aad
sarb
cmpl
movsl
fwait
shrb
pushl
repz
loope
inc
les
mov
dec
sti
jae
loope
jle
mov
pushl
in
xchg
test
add
jmp
pop
sbb
mov
mov
dec
lock
pop
pusha
pop
repnz
inc
das
dec
cmp
sbbl
aas
cmp
incb
in
in
cmp
jmp
push
fisttpll
into
stos
ss
cmpsl
xorb
mov
or
shrl
sbb
lcall
mov
ret
lea
cmp
sub
js
inc
xchg
call
pop
push
scas
mov
cwtl
fcmove
imul
lods
mov
cmp
and
or
das
imul
idiv
in
lret
cwtl
dec
or
inc
imul
mov
adc
stc
bound
jbe
arpl
pop
jg
decl
xchg
xchg
outsl
xor
jns
sbb
clc
addr16
adc
jecxz
call
mov
divl
movsb
sub
mov
call
addr16
or
cmpsl
inc
cld
cmp
scas
and
jg
jb
les
rcl
mov
jl
and
jns
and
xchg
ljmp
sub
loopne
cmpl
dec
sahf
je
cmp
mov
cmpsl
dec
push
pop
cmp
shl
insl
mov
adc
clc
jno
enterw
dec
or
clc
lcall
in
ss
imul
adc
sar
decl
testb
or
in
jnp
cmp
inc
lods
fs
or
fwait
out
test
clc
ljmp
lret
repz
xor
cwtl
add
dec
les
hlt
dec
xchg
mov
pushl
sahf
scas
jge
mov
or
movsb
cmpsb
in
dec
das
mul
mov
lods
xor
mov
fcomip
xchg
or
inc
pop
mov
jmp
pop
push
add
mov
int3
jg
incl
fstps
aad
enter
fcoml
mov
loop
sbb
adc
xchg
es
xchg
insl
notl
cmp
inc
and
jae
dec
insl
push
scas
pop
icebp
push
xchg
bound
int
js
adc
pop
or
push
test
int
pop
mov
inc
out
push
movsl
or
xchg
pop
add
outsb
mov
insb
pop
inc
ja
ljmp
ror
mov
movsb
cli
mov
ja
push
jecxz
push
dec
cmp
jmp
decl
pop
rolb
int3
add
sub
pop
pop
push
xchg
sbb
jp
lods
insb
fs
decl
test
sbb
sub
xchg
std
pushf
test
sbb
xlat
stos
je
push
bound
mov
das
ljmp
inc
test
fdivp
inc
lea
pop
dec
sar
mov
mov
cmpsb
pop
clc
add
out
adc
push
xchg
mov
ds
lcall
shll
sbb
jno
loopne
dec
cmc
mov
stc
mov
sub
pop
and
test
mov
cwtl
pop
lret
mov
mov
call
push
push
xchg
pop
mov
inc
sub
lods
popf
popa
rcl
loope
jp
out
inc
fcompl
pushl
sahf
call
push
scas
in
push
cld
dec
xchg
andb
jae
lcall
ljmp
add
ja
inc
mov
repz
sub
shrl
enter
cld
fsts
sub
dec
lahf
jge
or
ja
ret
add
jg
push
repz
gs
mov
push
data16
xlat
jo
repnz
mov
xchg
ljmp
mov
sub
pop
dec
add
ret
ret
in
lods
sub
movsb
jecxz
fisttps
repnz
xchg
test
pop
lock
jg
xorb
mov
stos
jno
mov
push
pop
xor
cmc
lock
jae
inc
dec
repnz
shlb
cltd
cmp
inc
ss
inc
or
dec
test
mov
outsb
ljmp
mov
jmp
leave
xchg
out
inc
enter
xchg
pop
notl
lret
push
dec
cmc
outsl
fldt
sbb
int
xor
sahf
idivl
sbbb
loope
subb
sbb
enter
cli
outsl
push
mov
sti
cwtl
scas
mov
addr16
ljmp
test
movsb
jmp
push
xchg
rolb
mov
outsb
ss
pushl
icebp
cmp
je
jno
enter
icebp
js
stc
pop
sbb
mov
adc
fwait
inc
ret
xchg
inc
popf
rcll
push
das
test
mov
dec
add
mov
addr16
adc
jmp
iret
mov
lock
mulb
shl
adc
shll
clc
jg
decl
mov
in
sub
mov
iret
aaa
aam
adc
decb
adc
icebp
add
enter
add
mov
sarl
pop
mov
dec
mov
push
movsl
dec
sbb
nop
cmpsl
push
sbb
imul
jg
mov
sub
repz
inc
mov
sbb
fimull
movsl
sbb
push
push
mov
loopne
rcrl
sbb
lcall
in
xor
pop
dec
pop
test
fsubs
sub
xchg
ds
imul
sbb
pop
stos
sbb
aad
loopne,pt
or
adc
xchg
iret
jle
push
cmp
and
out
add
pop
pop
shrb
push
push
das
adcb
repnz
lcall
xlat
mov
pushw
xor
push
jg
dec
cmp
sbbb
ret
lock
scas
js
in
js
mov
jmp
mov
dec
dec
aad
adc
loop
shrl
call
lea
mov
or
pop
pop
std
decl
repnz
call
in
jg
sbb
fadds
inc
sar
incl
cld
dec
aaa
jno
cmp
push
jecxz
mov
xchg
mov
sbb
mov
repnz
ja
repnz
jne
push
mov
std
mov
ffreep
inc
movsb
sbb
lret
test
or
or
jbe
fmull
decb
adc
inc
xor
push
pop
mov
jb
daa
push
mov
lock
mov
cld
orb
inc
ljmp
iret
xor
fwait
or
shl
fcmovu
nop
dec
shrb
mov
cs
pushl
mov
addb
sar
outsl
add
arpl
cmp
popa
push
ret
shufps
fs
jg
jmp
outsb
outsl
mov
stc
fstpt
jmp
out
fwait
jl
fidivs
jns
and
lcall
inc
jmp
xchg
insl
jns
lret
out
mov
lock
mov
cmpsl
dec
jnp
cmp
or
pushf
pusha
sar
call
repz
jno
adc
sbb
sarb
cmp
jg
rorl
fidivl
pop
imul
ss
sti
mov
mov
mov
ss
xchg
decl
mov
jbe
lret
shl
adc
lcall
xchg
popf
jno
or
out
sti
mov
and
in
pop
cmp
xchg
lcall
incl
jnp
ror
push
arpl
ret
xchg
xor
jae
xor
push
mov
mov
lcall
lcall
stos
fnstenv
jne
xchg
shrl
lea
addr16
mov
movsl
add
cmp
stos
insb
sbb
dec
jg
mov
jg
fucomi
xor
dec
adc
xlat
stos
test
push
adc
mov
leave
jmp
popa
add
fimull
mov
ret
push
cmp
jle
lea
nop
xlat
push
push
cld
pop
cld
jmp
hlt
mov
dec
xor
xchg
iret
xchg
jmp
fisubl
jbe
inc
cltd
pop
add
sbb
sub
stos
movsl
sub
jnp
push
mov
jmp
out
nop
sbb
aaa
mov
and
sarl
stos
mov
pop
sbb
call
mov
repnz
stc
cld
push
stos
stc
push
add
mov
je
lahf
cmp
sarb
and
rorb
js
cmp
adc
dec
jbe
xor
mov
arpl
decl
sbb
aad
jge
testb
inc
out
daa
pop
dec
loopne
or
xor
pop
out
sbb
pusha
mov
and
mov
int
push
ret
push
add
aaa
xchg
dec
mov
cmp
sub
inc
loopne
call
je
cmpsl
arpl
xchg
into
inc
hlt
decl
movsl
cmp
adc
jae
mov
icebp
movsl
enter
sbb
mov
inc
into
cltd
mov
xchg
shlb
popa
adc
pop
cli
mov
inc
ljmp
loope
and
iret
stc
mov
sbb
push
sbb
pushf
sub
and
push
call
iret
mov
in
mov
testl
dec
add
mov
decl
into
aam
or
sub
fwait
data16
lods
xchg
xor
call
mov
mov
ja
and
aad
decl
cmp
mov
push
xchg
push
push
decl
mov
in
push
cmpb
push
sub
pop
stos
mov
add
hlt
cmp
gs
xor
mov
subb
int
in
inc
dec
das
das
inc
push
push
xor
out
cmp
stos
leave
adc
push
jbe
xlat
lret
xchg
inc
mov
clc
das
xchg
cmpb
inc
sub
mov
mov
mov
push
fs
rorb
fbstp
std
inc
mov
push
mov
nop
negl
inc
dec
xor
sub
mov
jbe
sbb
mov
mov
movsl
aas
pop
inc
lahf
cmp
jecxz
mov
and
cli
pushl
cmp
jp
sbb
ret
mov
int3
add
ljmp
mov
jecxz
gs
xchg
pop
sub
call
adc
jg
pop
les
cmpsb
sub
mov
sub
dec
mov
push
decl
sahf
sub
ds
mov
mov
lcall
lcall
repnz
test
inc
int
outsl
cli
cmpsl
sahf
cmp
out
add
lahf
adc
ljmp
pushf
mov
pop
xchg
imul
je
fstps
cli
jb
out
pop
adc
pop
mov
js
call
adc
fwait
shr
xchg
xorb
xor
cmp
bound
dec
sub
das
add
cmp
out
jo
mov
iret
pusha
inc
pop
test
lret
imul
out
ljmp
mov
mov
and
pavgb
decl
mov
push
das
pop
inc
pusha
ljmp
inc
or
popf
bound
push
rcl
xchg
arpl
fimull
add
fsubr
int3
mov
push
xor
ljmp
mov
jbe
xor
shrb
cmpsb
bound
lret
xor
push
ret
clc
out
popf
push
jg
xor
loopne
bswap
dec
jg
jg
jmp
dec
mov
mov
mov
pop
pop
inc
mov
call
mov
push
push
push
pop
fidivs
aas
movl
mov
lds
mov
jae
insl
cli
in
out
mov
dec
mov
cli
pop
mov
lock
pop
loopne
inc
jnp
test
orb
pop
xchg
mov
sbb
dec
adc
mov
mov
cmpsb
add
repz
lret
lea
and
stos
jmp
stos
inc
inc
push
dec
in
mov
in
stos
stc
adc
cmp
in
cld
dec
xor
in
loopne
fisttps
loopne
dec
loope
loop
inc
push
mov
and
pusha
scas
push
dec
into
es
popa
push
mov
cmpsl
xchg
adc
mov
cld
incl
pop
xor
inc
sbb
xchg
loope
mov
cmpsl
xor
decl
clc
fsts
sub
or
dec
call
fdiv
lcall
xorb
push
aad
in
mov
xchg
adc
pop
add
adc
dec
ljmp
cmp
mov
fmull
pop
es
cli
jnp
addr16
fdivrl
sub
push
mov
lcall
xor
and
enter
sbb
shl
pop
ret
popf
movsl
pushf
lods
or
das
and
mov
leave
mov
ja
pop
fidivs
scas
sub
fdivr
lods
icebp
stos
dec
cld
ljmp
loope
mov
jns
in
jecxz
push
jecxz
pusha
bound
lods
stc
gs
or
mov
out
lret
fldcw
decl
sbb
stc
mov
jnp
ret
push
fdivp
lret
mov
sbb
adcl
js
push
clc
jmp
push
add
scas
rol
sub
ss
fcoml
fidivl
add
and
call
ljmp
lock
or
and
mov
ljmp
js
jb
xlat
cwtl
jns
mov
je
lcall
stc
nop
mov
fs
pop
int3
cmp
mov
je
repz
test
out
xchg
sub
dec
pushl
cld
sub
sub
data16
mov
sbb
sahf
sub
add
loopne
jge
sahf
xchg
lods
pop
stc
pop
fdivrl
call
push
inc
xor
outsl
jge
ja
es
lods
lock
jb
jbe
mov
push
adc
into
incl
xor
inc
pop
mov
push
jbe
push
mov
sbb
mov
xor
int3
lcall
cmp
js
mov
arpl
and
jl
stos
xor
ss
out
mov
imul
loop
lret
fbstp
jne
and
inc
sub
jnp
push
test
outsl
pop
push
pop
dec
xchg
sbb
sarl
inc
push
cmp
hlt
cli
inc
ja
fisttps
hlt
lds
int
cwtl
repz
pop
das
add
mov
pop
pop
inc
xchg
lcall
clc
cmp
dec
cli
pop
repz
mov
xchg
sub
sub
inc
cli
decl
pop
ret
mov
jmp
add
test
jecxz
sbb
aad
std
xor
loopne
and
sub
mov
jns
add
incl
sbb
cld
je,pt
ss
std
fstpl
jae
cwtl
cmpsl
insl
lods
cltd
cmp
xchg
mov
xchg
bswap
sbb
xchg
outsl
ljmp
ja
scas
sub
cmp
add
fsubrl
push
aad
decl
push
xchg
in
repz
inc
mov
mov
in
decl
sub
cmpsl
dec
sub
rolb
out
jge
iret
rolb
mov
jbe
inc
call
lret
popa
fisttps
adc
icebp
push
jp
push
pop
movq
stos
shl
pop
aam
xchg
jmp
scas
ds
fsub
xchg
adc
cmp
fadd
rcll
fisubs
push
js
pop
call
cli
pop
and
rolb
mov
cli
mov
jmp
jno
fldpi
pop
int
imul
cmp
cmp
mov
and
sub
clc
clc
xlat
xlat
fldl
loope
add
adc
lcall
jne
in
mov
cmpsl
mov
sbb
addl
test
out
imul
cld
pop
or
lods
mov
xchg
jns
pop
ja
in
mov
adc
pushl
loope
jae
sbb
pop
fiadds
pusha
in
dec
cmp
jg
mov
arpl
call
inc
int3
fiaddl
mov
int3
movl
xchg
adc
fdivrp
ds
push
xchg
aas
add
into
int3
scas
data16
mov
daa
cld
nop
and
pop
mov
sbb
out
xchg
mov
lods
jg
dec
scas
decb
inc
das
test
icebp
jns
jmp
lds
jle
sbb
int
stos
mov
jmp
es
mov
fcmovb
ja
mov
ja
dec
in
fdivr
incl
in
push
int3
leave
cmp
or
mov
scas
movsb
xchg
sbb
ljmp
adc
shll
pop
mov
mov
xor
mov
andb
push
jmp
pop
mov
add
fisttpll
or
fs
push
clc
pop
clc
push
cmc
jle
dec
cltd
sbb
and
lcall
cmpl
pop
scas
jns
lods
dec
xor
es
and
les
xchg
call
in
in
fsub
daa
test
je
xchg
mov
std
repnz
ret
out
clc
pop
and
sbb
shrl
test
adc
shlb
mov
out
ss
jo
call
push
push
xor
xchg
dec
mov
or
lock
aad
add
jge
shl
pushl
inc
mov
stc
das
sbb
push
fs
es
iret
fs
pop
mov
call
jo
fwait
repnz
dec
mov
outsl
ret
mul
jp
xor
pop
pop
data16
cli
lcall
mov
cltd
stos
das
mov
mov
out
push
fnsave
dec
mov
sbb
cmpb
or
inc
decl
popf
push
and
xorl
pop
lods
xchg
mov
and
push
mov
jp
add
jb
leave
mov
xor
mov
push
or
or
incl
cld
dec
fcoms
pop
mov
test
out
leave
sbb
sub
sbb
or
ljmp
mov
inc
inc
fsubr
out
inc
mov
mov
cmp
pushl
xorb
xor
sbb
fnstsw
adc
loop
adc
std
adc
das
test
xorb
mov
and
fnstcw
nop
fwait
adc
jmp
lahf
jns
mov
inc
cltd
int
js
sbb
cmp
sub
mov
push
out
out
repnz
decl
inc
mov
mov
pusha
int
test
xchg
fiaddl
and
dec
fcomip
decl
loopne
clc
rorb
insl
rcrl
rclb
cmp
mov
jae
xor
ds
xor
lock
ds
lock
jg
add
add
sub
nop
sbb
pop
sbb
aaa
jne
setnp
lds
scas
arpl
jl
arpl
out
xchg
in
mov
pop
mov
in
sbbb
ss
aam
or
addr16
mov
mov
das
cli
mov
jecxz
push
sbb
mov
xchg
andb
inc
in
call
xor
popf
sub
call
jl
js
nop
stos
or
std
sbb
decl
adc
cmpsl
pop
popf
mov
sbbb
out
push
call
pop
cli
sub
dec
push
jae
cs
sub
lcall
sbb
push
je
in
mov
pop
faddl
ljmp
push
push
mov
mov
xchg
pop
push
adc
jle
popf
inc
mov
sbb
push
mov
mov
scas
testl
out
sbb
decl
dec
cltd
and
dec
lret
jecxz
jle
mov
push
lods
pusha
orb
decb
cld
sub
mov
mov
cmpsl
int3
inc
lahf
push
ds
sbb
mov
call
sub
sbb
mov
iret
adc
call
push
in
fldl2e
jno
aam
push
push
jg
cmp
xor
sub
adc
call
ror
push
xor
shl
mov
stos
lea
push
adc
sub
add
aaa
inc
popa
fsubr
inc
mov
sub
fwait
lret
movsl
xchg
sub
mov
ja
cmp
call
sahf
or
sarl
inc
repz
or
loop
push
push
sbb
jns
push
or
push
incl
js
scas
mov
cli
sub
add
fistpl
test
and
mov
out
ljmp
ret
push
sbb
adc
lcall
les
in
repnz
divb
call
aad
lds
add
cltd
aad
and
in
lret
xchg
gs
call
jo
mov
movsl
xchg
mov
sub
insl
lret
clc
inc
shlb
xchg
popa
lods
cli
push
scas
data16
mov
adc
rol
sbb
mov
mov
push
fs
jg
sub
adc
xlat
pop
aaa
push
mov
inc
fucomp
mov
daa
and
push
rcll
pop
adc
sbb
adc
mov
scas
and
shll
push
std
pushl
inc
int
int
sti
fisubl
adc
stos
mov
push
ljmp
rcrb
sbb
cmp
push
scas
cwtl
sub
jmp
rolb
xchg
mov
pop
shll
fnstcw
xchg
xchg
pop
add
sar
push
insb
aam
mov
fwait
jge
and
icebp
data16
fsub
cwtl
add
nop
repnz
sbb
adc
cld
aas
lcall
int3
cmp
cltd
and
mov
xchg
xchg
cmp
fstl
or
popa
mov
nop
mov
pushl
fcmovnu
push
or
xchg
and
insl
rorb
fidivrl
and
mov
push
mov
hlt
incl
cli
cltd
in
push
or
sub
adcb
stos
in
fildll
adc
scas
test
mov
adc
daa
push
test
cmp
decl
sahf
faddl
into
xor
sti
imul
sbbl
jecxz
arpl
adc
das
js
mov
inc
push
lret
add
fbstp
dec
sbb
in
mov
pop
add
outsl
pop
push
int
push
xchg
xchg
jmp
je
mov
movsb
addr16
and
mov
pop
xchg
test
out
cmpsb
in
add
xchg
push
dec
incl
cld
xor
jno
mov
addr16
popa
fwait
out
push
cmpsl
aad
inc
fwait
mov
adc
loop
imul
jns
jns
pop
fucomi
outsb
je
pop
call
aas
pushl
es
cmp
push
sbb
shl
cmp
icebp
add
incl
mov
xlat
fmull
mov
pop
adcl
test
cmp
call
popf
xchg
repz
adc
jl
lret
hlt
inc
xor
loop
dec
push
clc
push
inc
les
ret
dec
mov
inc
movsl
dec
and
jmp
adc
ds
jmp
icebp
push
stos
or
mov
jg
inc
inc
jmp
pop
repz
and
sti
xor
push
fst
pop
lods
mov
icebp
incl
loop
cmpsl
sbb
stos
jp
insl
jl
jnp
push
jg
mov
xchg
mov
fisttpll
dec
es
mov
jg
sbb
pop
cmp
jno
add
jns
cmc
rorl
mov
push
and
adc
dec
stos
test
dec
sbb
repz
mov
iret
arpl
idivl
jmp
jnp
mov
dec
and
mov
dec
mov
mov
mov
mov
pop
dec
rolb
scas
es
ret
leave
leave
imul
jo
or
ljmp
mov
repz
cmpsl
scas
fcos
incl
sub
aaa
push
outsl
std
mov
jnp
or
shll
movsl
test
pop
dec
test
push
sub
ljmp
sbb
push
xor
sarb
push
xor
aaa
js
push
mov
scas
mov
lcall
mov
repnz
pusha
and
inc
movsl
lret
rolb
dec
call
stos
scas
xchg
dec
mov
pop
insb
adc
loopne
push
stos
inc
sub
ja
inc
dec
inc
loop
rcl
js
int
sbb
dec
bound
jmp
ljmp
mov
js
clc
sahf
in
push
leave
cs
sbb
sub
in
lea
out
xchg
pop
lcall
pushl
mov
xchg
mov
cwtl
in
mov
insb
or
sub
inc
inc
ret
int3
inc
jcxz
pop
mov
in
shrb
mov
sbb
xlat
sarb
push
shl
fsubrs
lds
mov
ret
test
shl
push
es
jmp
adc
mov
pop
out
and
push
jae
mov
ret
loopw
icebp
xchg
xchg
adc
enter
ljmp
aas
sarl
bound
and
add
dec
notb
decl
stos
mov
push
xor
add
stos
pop
jg
shrb
js
sbb
mov
ljmp
cmpl
movhps
in
subb
enter
xor
ljmp
decl
lret
fwait
ds
xchg
imul
mov
je
decl
lock
lahf
cmpsb
mov
jp
test
or
jo
xchg
fs
clc
jmp
gs
pop
adc
pusha
in
jecxz
out
es
ljmp
pop
stos
xchg
mov
mov
or
clc
push
dec
push
imul
pop
inc
ret
mov
sbb
dec
add
pop
pushl
loopne
cwtl
sub
xchg
jbe
cmp
insb
ret
mov
in
mov
adc
test
daa
imul
fbstp
stos
jmp
jmp
jo
je
jb
pop
pop
repz
jle
outsb
mov
lods
iret
xchg
and
mov
enter
push
outsb
sub
pushl
rorb
sahf
and
orl
sub
xor
call
jmp
cmc
jne
js
std
incb
pusha
cmpsb
adc
clc
mov
add
addr16
push
fldenv
insl
aam
icebp
test
in
cmpl
aas
xor
adc
fsubrs
adc
jmp
xor
xorb
mov
enter
iret
cltd
inc
dec
ljmp
aad
mov
mov
movsl
add
mov
sahf
mov
push
adc
pop
inc
inc
sub
cwtl
out
call
out
add
push
popa
imul
insb
gs
bound
arpl
in
push
gs
outsl
jbe
push
push
xor
inc
js
gs
imul
pop
mov
lods
dec
jb
dec
gs
jo
jp
jge
fimull
fs
popa
insb
inc
jbe
inc
fistpll
push
jb
mov
dec
mov
jns
inc
gs
push
ds
fs
and
inc
mov
mov
cmp
or
push
aaa
fnstsw
je
jb
jb
popf
inc
fs
aaa
mov
dec
imul
inc
add
inc
insb
insb
sbb
add
pop
pusha
fcoms
lods
push
jns
jle
adc
sbb
cmp
in
cmp
cs
and
push
outsb
jae
xor
jle
addr16
clc
outsl
ja
and
fnstenv
movsb
pop
pop
push
mov
xchg
push
inc
adc
jae
sarl
stos
inc
adc
and
dec
pop
sub
add
scas
lahf
repnz
add
xor
dec
xor
dec
aam
push
imul
and
mov
pop
lar
dec
inc
mov
js
cli
jne
imul
push
jae
fmuls
es
xchg
inc
and
add
adc
out
sbb
inc
jnp
popa
adc
dec
adc
jo
and
out
sar
aas
inc
popa
jb
inc
jae
popa
bound
push
fdivrs
sub
xor
arpl
mov
in
inc
push
xor
adcl
inc
mov
inc
arpl
adc
pop
pop
mov
adc
dec
push
nop
sti
sbb
push
mov
mov
jg
adc
xor
mov
jle
inc
xor
cmp
std
sbb
test
or
movsl
mov
add
test
adc
subl
insb
arpl
xchg
pop
add
sub
inc
jo
sub
arpl
inc
or
lahf
cmc
popa
add
push
cmpsl
aad
adc
aaa
dec
sbb
push
mov
jne
lea
mov
inc
ret
or
out
mov
and
jg
mov
aas
sbb
stc
outsl
stos
inc
inc
mov
or
lcall
adc
aaa
test
test
sbb
adcb
add
cmp
inc
or
sub
xorb
repz
stos
dec
mov
and
inc
ret
add
inc
movsl
push
push
addb
and
popl
sub
ja
movsl
sub
pop
incl
je
adc
std
jg
push
and
sbb
inc
mov
sbb
mov
xchg
push
jge
add
xchg
ss
fistl
inc
pop
jae
lds
push
int
std
inc
add
sub
xchg
adcb
mov
scas
xchg
push
or
fistl
dec
add
sysexit
and
push
ja
mov
dec
lods
call
pusha
mov
add
xchg
orb
out
lds
aad
cmpsl
inc
rorb
inc
insb
popa
add
addl
add
dec
cwtl
adc
sub
add
push
mov
addl
add
jge
push
mov
add
sub
stos
mov
je
mov
xchg
imul
jns
cmp
movsb
adcb
lods
pop
ret
lret
shll
adcl
inc
roll
iret
pop
aam
and
les
popa
push
mov
addb
mov
or
push
adc
rorb
jne
sub
pop
andl
push
pop
inc
mov
lods
mov
movsl
test
test
mov
adc
out
inc
sub
xorl
je
pop
les
stos
push
mov
jg
adcl
add
and
int
adc
jne
pop
adc
inc
sbb
or
add
adc
xor
add
add
popa
push
aaa
adc
imull
rcll
sbb
test
adc
movsl
adcb
or
sbb
lods
push
out
test
or
mov
and
push
mov
push
mov
dec
mov
pop
add
push
inc
add
sub
sub
je
orl
mov
pop
inc
add
rorb
push
int
pop
push
adc
and
jge
push
xchg
pop
pop
stos
pusha
dec
rolb
inc
lahf
fildl
pusha
push
idivl
movups
sub
ret
sbbb
inc
aam
icebp
add
mov
and
roll
subb
in
nop
push
add
ret
and
shlb
push
xor
sub
inc
adc
adc
je
mov
adc
inc
scas
adc
inc
inc
add
adc
daa
push
inc
and
popf
mov
ja
adc
push
test
popa
inc
and
xor
cmpsl
addl
or
inc
xorl
imul
mov
outsl
popf
movsl
adcb
jnp
xor
or
push
push
sbb
add
sub
xor
sbb
mov
and
mov
test
push
and
mov
aam
pop
dec
aam
add
add
and
adc
push
adc
pop
pop
add
xlat
push
sbb
bound
push
adc
inc
popf
les
fldt
addb
test
or
bound
or
adc
inc
mov
movsb
push
pop
push
sbb
stos
stos
popf
adc
add
popa
mov
in
mov
push
add
cmp
xchg
sub
addb
sub
test
add
inc
popa
push
xchg
sub
add
les
and
sti
mov
push
or
jae
push
dec
adc
mov
movsb
orb
inc
push
inc
add
mov
or
pop
mov
lods
or
arpl
add
int
xor
dec
inc
lar
add
andl
jno
cltd
movsb
adcb
add
inc
subl
xor
mov
or
add
inc
rcrl
add
inc
xor
repz
sbb
add
stos
adc
insl
testl
sub
rcrl
insb
pop
or
and
adc
push
cmpxchg
push
cmpsl
pusha
mov
add
mov
lret
add
xchg
dec
adc
inc
mov
test
das
adc
jo
dec
stos
sbb
xchg
ret
popf
adc
push
sub
and
sbbb
arpl
fsubrs
mov
inc
or
sub
sbbl
dec
add
add
daa
add
and
mov
and
adc
add
push
inc
push
dec
add
add
int3
adc
fwait
je
loopne
popl
mov
insl
push
inc
add
adc
insb
fcmovnbe
int3
pop
add
prefetcht1
fwait
cmp
lea
ss
cmp
inc
fwait
outsb
adc
add
adc
clc
lods
movsl
jnp,pn
rolb
mov
lcall
lock
repnz
mov
fs
je
jnp
loope
pop
push
outsb
or
add
jae
fistl
shrb
push
mov
rorb
gs
repnz
cmp
ret
cmpl
dec
ja
pop
cld
jnp
jns
cmp
inc
add
xchg
and
add
test
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
in
add
add
add
pop
addb
popa
dec
mov
xchg
in
pop
mov
icebp
rolb
scas
test
add
inc
sbb
movsl
jb
ss
pusha
pop
test
stos
mov
imulb
sarb
push
lcall
push
pushf
rol
in
or
in
push
std
sbb
inc
inc
push
mov
push
dec
cmp
cs
or
movsl
jge
jns
cmp
stos
xchg
add
test
cmp
int3
lahf
cmp
inc
cld
sub
inc
js
inc
cs
inc
loopne
dec
sub
xor
jl
jae
popa
stc
sarb
imul
fsubrp
daa
add
sub
push
cmpsl
jo
pop
daa
add
xchg
push
ret
lahf
test
into
inc
ljmp
fisubrl
shlb
pushf
cmpsb
or
ss
je
xor
xlat
xchg
mov
in
or
hlt
sub
scas
mov
nop
fisubs
or
mov
xor
mov
imul
pop
lcall
loopne
inc
rorb
jmp
push
xlat
push
jno
loop
and
in
dec
mov
rorb
jb
xchg
repnz
outsb
mov
cmp
cltd
dec
mov
dec
shr
add
pop
pushf
into
je
and
inc
enter
cli
add
sbb
sbb
push
in
into
icebp
mov
pop
push
dec
leave
call
mov
cmp
call
lds
test
nop
and
jge
fdivr
pop
inc
cmpsb
jno
pusha
inc
mov
notl
sbb
leave
test
das
shll
add
test
jae
xor
lock
or
xor
shl
mov
add
inc
jo
inc
add
add
jge
inc
add
inc
add
inc
add
inc
add
sub
inc
add
sub
inc
add
sub
add
lock
add
cli
sub
add
or
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
ja
outsb
push
ja
outsb
jae
popa
jb
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
imul
jb
arpl
jb
add
add
jb
push
inc
popa
jb
push
xor
imul
