push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
movl
mov
add
movzbl
cmp
je
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
push
mov
push
movl
push
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
add
mov
add
mov
movl
mov
add
mov
mov
mov
movl
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jge
movl
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
push
mov
sub
pusha
mov
movl
lea
push
push
push
push
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
call
xor
jmp
jmp
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
lea
push
call
call
mov
push
call
add
mov
mov
push
lea
push
call
lea
push
call
push
push
push
push
mov
push
mov
push
lea
push
call
mov
cmpl
je
cmpl
jne
xor
jmp
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
pushl
ret
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
outsl
xchg
and
lock
cmpsb
jno
mov
sbb
cmp
leave
push
mov
mov
inc
push
aaa
popf
lds
push
mov
test
insb
fistl
jno
icebp
xor
loope
fucomip
leave
xchg
sbb
adc
lods
and
xchg
cmpsl
stc
out
repnz
and
xor
inc
xchg
out
jo
out
fidivrl
movsl
or
sbb
out
aad
jnp
mov
gs
mov
test
hlt
dec
mov
fistl
popa
std
jmp
mov
fdivrs
sub
sub
push
hlt
iret
add
fnstcw
cmp
cwtl
test
and
pushf
sub
mov
in
aad
add
pushf
mov
push
stc
pop
xchg
jmp
sbb
adc
fwait
push
dec
enter
cmpsl
push
jnp
jecxz
mov
mov
andb
rcrl
mov
jno
test
int
pop
jecxz
mov
lods
xor
push
aad
sbb
daa
jnp
and
or
or
push
out
inc
jg
or
in
iret
mov
jecxz
insb
add
push
loop
in
jl
das
jge
into
icebp
adc
inc
notl
or
dec
mov
mov
mov
dec
sub
sbb
pop
adc
orb
js
inc
enter
pop
movsl
sub
test
dec
adc
inc
lret
mov
xchg
test
push
or
cmpsb
iret
mov
mov
push
dec
mov
fsubs
xor
mov
test
scas
dec
xor
pop
inc
mov
mov
jo
dec
insb
jp
std
test
or
scas
push
outsb
aas
lret
and
push
icebp
mov
outsb
mov
dec
adc
adc
dec
dec
add
loop
stc
lock
scas
push
mov
fadds
jns
mov
xor
jecxz
out
add
fldl
js
jne
inc
pop
bound
push
jae
and
add
repz
pusha
fs
arpl
inc
js
pcmpeqw
add
pop
pusha
fs
arpl
inc
js
out
bound
add
push
jne
enter
fidivrl
outsb
rcll
inc
aaa
xor
add
inc
fs
stos
push
inc
imul
push
jne
aaa
xor
add
jne
add
mov
outsl
addb
gs
bound
js
aaa
xor
add
jne
pusha
push
je
push
jl
outsb
pop
pop
fs
aaa
xor
add
aaa
inc
add
inc
add
inc
add
inc
add
ss
add
ss
add
aaa
inc
add
ss
add
push
jne
in
bound
dec
jae
in
add
add
fs
pop
arpl
inc
js
add
mov
dec
jae
xchg
pop
xor
push
push
insl
insb
aaa
xor
add
inc
das
fs
pop
add
mov
jae
inc
add
pop
inc
ja
gs
das
fs
pop
add
bound
arpl
add
imul
inc
and
arpl
xor
add
pop
jae
and
inc
and
arpl
xor
add
pop
insb
popa
pop
bound
add
call
push
add
pop
jae
loop
insl
push
lds
gs
add
out
dec
pusha
jo
push
insl
outsl
xchg
xor
add
xor
dec
push
insl
insb
aaa
xor
add
jne
test
test
gs
inc
add
aaa
xor
add
nop
pop
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
jmp
xor
add
xor
add
xor
add
cmp
add
loopne
dec
jmp
xor
add
xor
add
xor
xor
jmp
xor
add
sub
add
and
add
les
add
xor
add
inc
xor
jmp
xor
add
add
xor
add
xor
add
xor
add
and
add
xor
jmp
xor
sub
and
jmp
push
xor
add
and
add
xor
add
xor
add
xor
add
xor
add
inc
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
roll
add
sub
add
add
xor
add
xor
add
add
dec
xor
add
add
pop
xor
add
add
dec
xor
add
add
push
xor
add
and
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
pop
lahf
add
aaa
movsl
xchg
add
fistl
add
fistpl
mov
fildl
add
fildl
add
cmp
popa
or
aaa
daa
push
add
add
fistl
add
fildl
add
fildl
add
sbb
shll
pop
add
int
add
xor
sub
xor
popf
xor
call
add
xor
add
xor
add
add
jbe
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
fidivs
add
into
xor
add
fidivs
add
into
xor
add
sahf
xor
add
add
mov
add
sahf
xor
add
mov
add
pop
xor
add
dec
xor
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
aaa
lret
add
add
aaa
lret
add
aaa
or
add
daa
cltd
add
int
add
fists
add
adc
add
insl
xchg
add
addr16
add
dec
xchg
add
mov
add
inc
xchg
add
cmpsl
xchg
add
xor
nop
xor
in
xor
lock
xor
ret
xor
nop
xor
cs
xor
push
xchg
xor
lock
xor
jo
xor
adcb
xchg
xor
es
xor
dec
xchg
xor
inc
xchg
xor
cli
xchg
xor
sahf
xchg
xor
xchg
xchg
xor
pushf
xchg
xor
js
xor
dec
xchg
xor
dec
xor
call
cmpsb
xor
lods
cmpsb
xor
push
cmpsl
xor
in
cmpsb
xor
fsubl
xor
test
xor
add
xor
add
fwait
xor
and
fwait
xor
sbb
add
xor
mov
xor
stos
add
xor
dec
add
add
add
shlb
add
lcall
pop
les
add
xor
push
movsb
xor
cmp
add
mov
xor
ret
ret
xor
mov
xor
xor
xor
inc
movsb
xor
inc
movsb
xor
add
movsb
xor
add
mov
add
out
add
shlb
add
test
add
add
add
pop
cmpsb
add
dec
cmpsb
add
sub
add
cld
cmpsl
add
pushf
cmpsb
add
mov
add
mov
add
and
add
nop
mov
add
cmpsl
add
cli
test
add
add
test
add
test
add
test
add
test
add
test
add
mov
add
xchg
xchg
add
popf
xchg
add
jecxz
add
lret
xchg
add
jecxz
add
out
xchg
add
fsts
add
pop
cltd
add
sub
add
insl
xchg
add
add
add
imul
aaa
xor
add
add
ret
test
add
jnp
add
notl
add
out
add
jge
add
jmp
add
iret
xchg
add
ret
jle
aaa
xor
jg
xor
jg
xor
jg
xor
jg
xor
jg
xor
jg
xor
jg
xor
jg
xor
jg
xor
jle
xor
jle
xor
jle
xor
jle
xor
jle
add
pushf
jle
xor
jle
xor
jle
xor
jle
xor
jle
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
xorl
add
mov
add
mov
add
mov
add
aaa
add
aaa
add
aaa
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
test
add
cwtl
aaa
add
mov
add
xorb
lret
js
add
push
add
aaa
add
push
aaa
add
cmpsb
ss
xor
add
push
add
testb
add
add
add
xchg
add
pop
add
cld
popl
add
nop
add
dec
xchg
add
pop
add
dec
xchg
add
push
xchg
add
test
add
enter
lret
add
cmpsl
add
cmpsl
add
cmpsb
cmpsl
add
jle
add
ljmp
add
test
add
add
add
add
add
aaa
and
popl
aaa
adc
add
decl
add
dec
mov
add
arpl
add
and
add
rorl
aaa
mov
xchg
add
fwait
xchg
add
xchg
add
fwait
xchg
add
lea
add
mov
aaa
mov
add
push
xchg
add
loope
add
jecxz
add
test
mov
aaa
daa
mov
aaa
xor
mov
je
xor
decb
xor
mov
lcall
xor
mov
push
xor
jp
xor
mov
xor
lods
lea
mov
lea
sub
xor
adc
add
xor
cmp
xor
mov
mov
fimuls
xor
bound
xor
jbe
xor
inc
mov
and
xor
sub
xor
add
test
xor
sti
cmpsl
xor
lds
xor
stos
xor
cltd
xor
popf
xor
xchg
lds
add
movsb
xor
adc
movsl
xor
jecxz
xor
jmp
xor
mov
xor
leave
xor
popf
cmpsb
xor
cmpsb
xor
push
cmpsb
xor
jno
xor
pop
xor
pop
lds
add
xor
or
xor
sbb
movsl
xor
shld
add
xor
jg
xor
add
test
add
shrb
add
test
add
test
add
add
movsb
add
out
mov
add
pop
movsb
add
int3
cmpsb
add
jp
add
pop
cmpsb
add
push
movsb
add
push
movsb
add
repnz
add
dec
xor
add
add
hlt
xchg
add
bound
add
sub
add
stos
xchg
add
enter
into
xchg
add
je
add
mov
add
repz
add
jns
add
add
mov
add
xlat
sahf
add
lret
sahf
add
and
aaa
inc
movsb
add
jno
add
insl
movsb
add
lret
add
aaa
ja
add
faddl
add
int3
add
mov
add
mov
add
mov
add
mov
cmpsl
add
stos
movsb
add
pop
movsb
add
movl
add
sbb
add
pop
cmpsl
add
add
fldl
add
mov
ljmp
mov
add
mov
add
mov
cmpsb
xor
loop
xor
fsubs
aaa
mov
add
mov
add
mov
add
mov
add
mov
add
xor
sahf
xor
cli
popf
xor
in
popf
xor
out
popf
xor
clc
popf
xor
repnz
xor
push
sahf
xor
adc
xor
negb
sub
xor
cmp
xor
or
xor
push
sahf
xor
data16
xor
add
aaa
add
aaa
add
cltd
aaa
add
leave
aaa
add
shll
pop
mov
aaa
add
xor
add
fwait
aaa
add
xchg
aaa
add
add
aaa
add
aaa
add
shll
add
add
xor
add
xor
add
sub
or
adc
mov
addr16
int
adc
mov
push
mov
cmp
cmp
adc
xor
xchg
xor
dec
loopne
jb
dec
addb
mull
mov
push
in
xor
mov
push
jae
sbb
adc
mov
dec
dec
lds
mov
cmc
mov
flds
pop
mov
aam
pop
push
lods
pop
jns
inc
sbb
or
and
jo
sti
call
mov
jno
pop
out
fs
enter
lcall
pop
or
sub
and
dec
bound
mov
je
lods
and
scas
jno
fwait
jnp
outsl
push
pop
and
mov
mov
pushw
popa
je
repnz
cs
sti
lods
inc
aaa
stos
stos
inc
aaa
xor
insb
aaa
mov
add
aaa
jae
jne
sbb
aaa
fwait
add
aaa
mov
addb
sbb
scas
incl
push
test
stos
xor
aas
fwait
sbb
pushl
cmp
add
fcoms
mov
rolb
aaa
xor
fs
sbb
pop
das
cmp
imul
loopne
aaa
cmp
sti
loopne
lock
xor
add
xor
add
xor
add
xor
or
add
xor
add
xor
or
xor
add
xor
add
xor
or
xor
add
xor
add
xor
incl
add
xor
add
xor
add
sub
hlt
xor
add
xor
or
push
add
xor
inc
add
mov
sub
push
add
xor
sub
mov
jmp
xor
test
cmp
add
xor
test
bound
hlt
xor
add
cmp
add
jmp
cmp
add
add
cmp
and
jmp
inc
je
fnstcw
adc
jmp
inc
aam
jmp
sub
add
dec
cmp
pop
inc
loope
outsb
cmp
add
pop
add
sbb
push
inc
xchg
add
cmp
push
cmp
add
inc
roll
out
cmp
add
cmp
push
cmp
add
aas
mov
fidivrs
or
add
into
cmp
add
aas
icebp
add
cmp
add
cmp
add
cmp
mov
xor
add
or
mov
add
cmp
add
popf
or
popf
or
aaa
lea
or
popf
or
or
fwait
or
aaa
fwait
or
aaa
fwait
or
fwait
or
aaa
mov
pop
aaa
fwait
or
or
fwait
or
aaa
fwait
or
fwait
or
aaa
mov
add
fwait
or
fwait
or
aaa
test
mov
aaa
fwait
or
fwait
or
aaa
fwait
or
aaa
mov
or
fwait
or
xor
or
xor
or
xor
or
add
xor
or
fmuls
cmp
or
xor
or
call
or
or
xor
or
xor
or
call
or
xor
or
xor
or
call
or
xor
or
call
or
xor
or
or
xor
or
call
xor
fsubrs
cmp
add
cmp
add
cmp
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
cmp
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
cmp
add
cmp
cmp
jmp
cmp
add
cmp
add
cmp
jmp
sahf
aas
xor
sahf
cmp
add
or
mov
pusha
add
and
pop
cmp
add
addb
aas
inc
add
jecxz
pop
xor
add
pop
add
aas
sbb
push
cmp
add
aas
js
push
aas
cmp
push
cmp
add
xor
add
add
aas
push
add
aaa
mov
into
or
into
mov
fidivrs
dec
add
aaa
repz
xor
add
add
aaa
scas
pop
sub
popf
or
popf
or
aaa
mov
or
aaa
popf
or
aaa
popf
or
aaa
popf
or
popf
or
aaa
lea
pop
add
aaa
fwait
or
aaa
cmpsl
add
jge
fwait
or
aaa
lea
insl
aaa
fwait
or
aaa
fwait
or
aaa
fwait
or
fwait
or
aaa
mov
push
aaa
xor
or
or
add
xor
or
call
or
flds
xor
or
xor
or
add
call
or
call
or
xor
or
fadds
xor
or
call
add
xor
or
call
add
xor
or
or
call
or
call
or
or
xor
fnstenv
das
add
cmp
add
cmp
add
add
xor
jmp
cmp
add
sub
cmp
jmp
cmp
add
xor
add
sub
add
cmp
add
cmp
add
xor
add
cmp
add
cmp
add
xor
add
xor
daa
add
cmp
add
xor
add
cmp
add
cmp
add
xor
add
add
sub
add
cmp
add
fidivrs
dec
add
cmp
add
xor
add
cmp
add
xor
add
cmp
add
xor
add
popa
add
and
dec
cmp
add
addl
dec
cmp
add
pop
add
cmp
push
cmp
add
cmp
add
add
cmp
push
cmp
add
cmp
add
xor
add
cmp
fidivrs
sub
into
aaa
mov
aaa
popf
or
aaa
popf
or
aaa
popf
or
add
popf
or
or
mov
add
aaa
popf
or
or
popf
or
or
aaa
popf
or
popf
or
aaa
popf
or
inc
aaa
popf
or
aaa
lea
or
fwait
or
or
fwait
or
aaa
fwait
or
or
fwait
or
aaa
mov
pop
aaa
fwait
or
call
or
xor
or
xor
or
xor
or
xor
or
xor
add
or
add
call
add
call
or
xor
or
xor
or
xor
or
fadds
cmp
or
xor
or
xor
add
or
xor
or
xor
inc
add
cmp
add
sub
add
sub
cmp
jmp
sub
add
add
sub
das
add
cmp
add
sub
add
aaa
popa
add
cmp
add
sub
add
sub
xor
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
cmp
add
sub
add
sub
add
adc
add
cmp
add
push
xor
add
xor
add
add
sbb
fisubrs
outsl
add
das
das
add
xor
fisubrs
popl
into
das
dec
add
xor
add
lcall
das
adc
mov
mov
jo
mov
xor
mov
ret
mov
pusha
add
and
dec
xor
add
addb
das
inc
add
loop
push
mov
push
das
pop
add
das
sbb
push
xor
cmp
lea
jns
lea
cmp
lea
adc
lea
imul
lea
or
lea
mov
lea
dec
aaa
lea
add
lea
push
aaa
lea
adc
ss
ljmp
aaa
lea
jne
lea
xor
aaa
jl
or
lea
add
aaa
lea
and
aaa
lea
add
aaa
lea
inc
aaa
lea
jmp
jnp
pop
aaa
mov
pop
aaa
xor
or
xor
or
call
or
xor
or
call
or
xor
or
call
or
call
cld
xor
xor
or
add
or
cld
push
xor
or
call
or
frndint
cmp
xor
or
call
or
call
or
xor
or
xor
fldcw
cmp
jmp
sub
add
cmp
testb
sub
add
sub
add
cmp
inc
add
sub
add
sub
add
add
cmp
sub
add
sub
add
cmp
aaa
add
sub
add
sub
add
mov
jmp
sub
add
cmp
xor
jmp
pop
pop
add
push
roll
jmp
cmp
add
dec
pushf
inc
add
mov
or
push
pushf
pop
add
pushf
pop
add
mov
or
bound
push
pushf
jg
push
pushf
aas
add
mov
sbb
into
fwait
outsl
add
fwait
das
add
mov
str
fwait
popl
into
fwait
dec
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
aaa
fwait
or
add
aaa
mov
or
aaa
jge
add
xchg
xorl
xor
add
pushf
or
aaa
movsb
or
xor
or
push
jge
add
test
add
or
aaa
mov
or
sub
shll
or
aaa
jge
adc
jnp
add
movsl
add
aaa
movsb
add
aaa
xchg
add
add
aaa
test
add
aaa
xchg
add
aaa
jle
add
xor
add
xor
adc
daa
add
xor
loope
mov
and
cmpsb
xchg
mov
jnp
cs
mov
sbb
xchg
pusha
stos
in
sarl
test
push
out
push
lahf
xchg
pop
out
cltd
int3
xrelease
pop
and
or
inc
jns
lds
push
call
mov
mov
pushf
sbb
xchg
lret
cld
mov
ss
and
adc
mov
sub
mov
inc
or
int
adc
pop
in
mov
es
aaa
dec
mov
roll
sub
fwait
loop
mov
in
fildll
hlt
add
sbb
cmpsb
loope
fstl
sub
daa
and
jle
imul
out
or
push
push
sub
into
fidivrs
icebp
or
pop
pop
int
mov
loope
insl
das
pop
imul
cmp
fdivl
pop
fiaddl
stos
push
rcrl
cmpsl
lods
mov
or
mov
mov
call
loop
add
cwtl
mov
psraw
imul
insb
or
dec
out
popa
push
cld
adc
push
inc
test
sbb
add
dec
jl
add
push
cmc
pusha
leave
mov
into
js
adc
aaa
lea
jae
lock
jecxz
fimull
dec
roll
add
cmc
arpl
std
clc
add
xchg
outsl
adc
jge
jns
lock
in
fsubrl
mov
jge
lret
pusha
or
mov
add
inc
or
push
push
add
sbb
and
daa
cwtl
push
push
xchg
mov
fsubrp
in
add
xorl
jg
pop
dec
lret
jecxz
fwait
mov
adc
mov
lcall
orl
ss
out
add
push
add
xor
in
and
or
daa
inc
sub
repz
cs
aaa
cmp
pop
lods
jo
add
movsb
cmp
cmp
cmp
movsl
xor
mov
add
cmp
decl
push
test
sbb
add
loope
adc
jecxz
rcll
andb
add
fst
inc
push
cmpsl
xchg
xor
and
out
ret
das
daa
fldcw
scas
lahf
ds
inc
stos
or
adc
adc
lock
jne
adc
add
or
xchg
or
or
or
mov
xchg
dec
add
adc
lds
mov
sub
mov
stc
addr16
ret
shll
xorl
fwait
cmp
ret
jne
pop
insb
add
xor
pushf
and
jmp
adc
jb
bound
add
or
mov
jnp
xchg
shrl
fnstsw
fimull
or
rolb
aaa
add
xchg
dec
pusha
repz
mov
fiadds
das
daa
das
or
push
push
push
add
fxch
incl
inc
imul
cwtl
bound
lret
iret
mov
or
pop
xchg
lret
xchg
add
and
pop
pop
push
inc
imul
pop
rcl
fsubrs
fisubs
fidivs
psubusb
cmp
mov
js
lret
mov
xor
sbb
lds
sbb
add
dec
in
adc
push
outsb
bound
dec
sbb
pusha
cmp
fdivr
jae
fmuls
mov
dec
jns
jae
stos
cmp
pop
fidivl
xor
adc
stos
xor
xchg
adc
mov
jbe
out
jge
insb
xor
loopne
mov
cmp
add
filds
sub
fistpll
dec
stc
adc
cmp
mov
pusha
pushf
out
das
aad
fbstp
push
sarb
or
addl
xor
xor
pop
test
sbb
push
ds
dec
sti
lret
mov
mov
lret
lea
jne
cmpsb
dec
xchg
mov
movb
in
jmp
inc
mov
negb
out
inc
shrl
ja
mov
das
cmp
cltd
pop
or
sub
fistps
jno
dec
cmc
imul
and
mov
adc
nop
push
lods
sahf
pop
adc
test
lret
xchg
cmp
ljmp
add
lret
xchg
inc
lcall
lock
jmp
rcrb
xchg
dec
mov
and
or
cmp
mov
xchg
cmp
test
int3
jnp
adc
jp
arpl
pop
xlat
xor
dec
shrl
mov
aam
push
lea
lods
push
jns
popf
int3
js
lret
loope
add
jns
bound
dec
nop
push
mull
orl
xchg
and
adc
inc
and
ret
sarb
out
inc
cld
lret
or
jno
xchg
xchg
ss
mov
cmp
cmpsl
inc
std
mov
push
loope
mov
enter
mov
xchg
cs
xchg
lock
add
pop
dec
clc
bound
ljmp
cmp
jmp
mov
adc
rclb
xchg
xchg
je
push
add
cmpsl
lods
jo
mov
mov
cwtl
insb
mov
repnz
pusha
mov
or
in
push
or
add
je
sub
add
repz
or
mov
out
pop
lods
mov
sub
outsl
ret
push
xor
and
arpl
sahf
cli
dec
or
or
xchg
cmp
xor
mov
jns
loope
cmp
xchg
fistps
mov
out
adc
push
shlb
add
inc
popf
add
pop
test
add
imul
jno
pop
clc
add
inc
loope
fbld
nop
lds
inc
jmp
dec
stos
arpl
sbb
add
sahf
sub
sbb
std
inc
int3
repnz
test
iret
mov
cmpsl
adcb
cltd
orb
stos
fidivs
sbb
xor
sub
mov
xchg
jno
dec
lds
mov
pop
arpl
insl
sti
lret
and
loopne
aaa
fnstcw
push
icebp
mov
pop
inc
pop
xchg
loopne
out
rcl
mov
mov
pusha
and
cmp
add
cvtdq2ps
push
dec
fnstsw
bound
enter
mov
iret
or
add
in
fwait
adc
lcall
bound
push
jns
mov
inc
inc
cli
pop
adc
fmull
int3
aad
mov
add
lods
mov
xor
mov
out
mov
xchg
testl
test
sar
es
xchg
or
push
inc
pop
pop
cmp
sub
and
inc
dec
stos
mov
in
add
scas
rorb
nop
out
or
ret
mov
insb
movsl
movsb
repz
pop
rcl
inc
pop
xchg
dec
and
jl
repz
cltd
icebp
mov
jp
pop
fisubrl
pop
jmp
sahf
xchg
sti
lock
jno
int3
clc
mov
jo
mov
push
xchg
jmp
pop
jb
inc
mov
add
push
shl
jns
jnp
mov
add
and
outsb
ljmp
mov
sub
sbb
scas
or
push
sbb
negl
push
add
adc
xchg
inc
pop
sbb
lahf
sbb
xchg
fstps
xor
sbb
xor
test
dec
dec
les
js
add
add
cmp
add
jge
cld
adc
mov
jnp
cli
dec
cmp
pushf
cmp
enter
ret
add
mov
cmp
cmp
aaa
add
xor
bound
xor
adc
cs
push
mov
test
or
sub
lret
and
sahf
and
add
out
arpl
and
sub
mov
cld
push
lods
or
pop
pop
jno
pop
cmp
or
aaa
pusha
fstl
pop
cmpsb
mov
push
movsb
add
fildl
es
push
mov
pop
adcl
push
loope
imul
or
push
stc
cmp
aas
xlat
gs
add
lods
out
mov
adc
cmp
hlt
xchg
cli
and
mov
scas
ja
lahf
push
xor
cmp
fidivs
lock
push
fistps
rclb
mov
adc
sbb
xchg
adc
sbb
adc
pop
adc
lret
add
mulb
and
cmp
cli
mov
and
pop
jbe
clc
test
add
iret
clc
jg
repz
dec
mov
repz
dec
ja
test
mov
sub
sti
hlt
cli
pop
xor
shll
divb
add
andb
loopne
enter
out
imul
lret
imul
cmpsl
adc
mov
sahf
pop
ljmp
pop
jl
fstps
add
dec
aas
loopne
fs
mov
add
out
fmull
in
inc
push
in
jle
out
out
aam
out
aas
mov
adc
lea
xchg
call
sub
sbb
pop
sub
std
ja
mov
std
add
and
cli
xchg
dec
fsincos
int3
jno
stc
stos
pop
pop
clc
cmpsb
fiadds
repz
shll
dec
loopne
icebp
ljmp
cmc
inc
mov
dec
idivb
js
imul
fisubl
sarl
test
fistps
xor
xlat
mov
test
js
out
aam
add
jge
mov
roll
and
lds
lods
popf
les
add
popa
call
sbb
push
push
jne
std
xchg
je
adc
fildll
dec
insb
or
insl
pop
cmp
jg
adc
jle
add
xchg
rol
add
jnp
stc
pop
xchg
scas
fidivrs
sub
adc
movsl
test
lret
scas
and
rolb
mov
mov
add
jns
mov
push
ja
push
jle
int3
cwtl
aad
int
sbb
scas
mov
mov
inc
mov
mov
push
cltd
mov
and
cmp
jo
mov
mov
je
mov
fisubrs
pushf
movsb
mov
popa
out
mov
dec
scas
fnsave
adc
fsubl
sub
add
fiaddl
xor
dec
xlat
fisubl
flds
test
into
iret
scas
and
push
push
dec
shrb
sti
adc
jnp
std
aam
inc
out
pop
mov
cmp
mov
cmp
mov
adc
mov
cmc
popa
js
add
aaa
mov
cmp
mov
mov
out
xchg
mov
cmp
mov
adc
sahf
mov
inc
push
enter
cmp
mov
cmpsb
adc
xchg
mov
and
jmp
pushf
xchg
rol
les
cmp
or
mov
add
xlat
dec
fwait
push
fsubp
inc
and
mov
andb
outsl
leave
lods
inc
inc
jo
filds
add
cmp
xor
int
dec
lods
xchg
arpl
adc
fcomps
xchg
into
sbb
les
pop
sbb
mov
mov
cmp
into
xor
das
or
in
xchg
cld
rcrb
movsb
in
lahf
mov
gs
fnsave
inc
dec
clc
jne
xor
adc
int
xor
add
xor
lahf
mov
cltd
xchg
pushl
cmc
and
movsl
push
sahf
xchg
inc
sub
jmp
popa
inc
andb
sarb
and
push
sbb
sbb
inc
xor
mov
adc
cmc
cmc
cmpsl
push
mov
scas
mov
and
jle
add
xor
xor
loop
rdpmc
lcall
sub
insb
lahf
cmc
mov
incl
dec
sub
pop
sub
sub
pop
add
mov
clc
push
mov
xorb
jle
mov
lahf
xor
inc
cmp
cmpsl
xchg
dec
mov
and
jae
mov
into
cwtl
cmp
hlt
push
add
xchg
cmpsl
jmp
push
aas
inc
xchg
lods
mov
negb
mov
and
enter
das
add
stc
test
jo
push
inc
push
cmp
in
inc
insb
test
cltd
out
mov
sar
test
push
shll
rcr
scas
js
mov
in
add
pop
test
ret
mov
lcall
cltd
dec
pop
adc
mov
insb
popa
inc
mov
test
out
inc
stc
xchg
mov
movsb
loopne
and
xchg
push
cltd
inc
in
mov
nop
incb
bound
xchg
stc
int
enter
jo
stos
in
sub
push
nop
add
in
in
push
cmp
mov
xchg
jbe
or
stos
aad
mov
std
add
aam
repz
cmp
and
sub
movsl
outsb
cmc
js
pop
dec
rcrb
cld
sar
and
push
out
divl
mov
pop
sbb
and
or
push
jle
cmc
aaa
sbb
bound
jbe
ficomps
xchg
cmc
mov
add
jecxz
pop
movsl
repz
add
sub
adc
negl
cmp
ret
add
shlb
sbb
inc
jb
loop
int
jnp
jnp
mov
adc
mov
adc
pop
cs
movsl
mov
sbb
outsl
jp
jp
sub
add
mov
mov
mov
sbb
cli
lods
and
push
adc
out
mov
push
outsl
gs
lcall
sbb
cmc
xchg
jne
jecxz
fidivrl
ret
insb
gs
or
sbb
inc
push
int3
inc
mov
mov
cmpsb
sbb
jmp
pop
rcrb
scas
xlat
sbb
int
cmp
and
or
push
xchg
sti
mov
dec
in
outsl
repnz
jecxz
leave
or
push
push
jp
jg
jp
cmp
jb
lcall
lds
and
arpl
loopne
inc
sub
push
xor
pop
ss
stos
xor
out
std
ljmp
int3
popf
test
sahf
aaa
incl
and
sub
aas
add
or
cmp
add
mov
mov
mov
fs
int3
sti
or
call
add
loope
int3
mov
or
popw
sub
add
popa
sub
xchg
clc
xor
xchg
mov
cs
cmc
notl
xor
enter
pop
fs
push
inc
data16
add
test
jge
mov
sub
incb
sbb
cmp
adc
and
fisttpll
jo
adc
inc
ficoms
jge
outsb
in
and
int
test
dec
sbb
test
stc
mov
pop
add
or
add
or
and
dec
sbb
popa
shlb
adc
add
push
inc
or
add
js
incl
pusha
ja
int
ja
push
ret
loope
outsb
stc
idivl
rcrb
fmuls
out
sub
xor
mov
fsts
lods
shlb
sub
hlt
mov
push
insb
xchg
mov
xor
add
scas
sub
lcall
pop
cld
pop
push
xlat
and
and
cmp
sub
pop
shlb
jmp
rclb
mov
jne
lods
out
stos
sbb
rcl
shrb
pop
out
add
stos
mov
enter
cmp
pop
sub
mov
rcrl
out
cld
pop
push
push
insl
sub
pop
and
ljmp
lcall
xor
add
push
mov
pop
sti
leave
mov
leave
mov
jge
pop
sbb
aam
dec
dec
gs
icebp
bnd
adc
into
mov
inc
jecxz
clc
rolb
in
mov
insb
lcall
imul
pop
std
inc
adc
sub
xor
out
pop
mov
clc
mov
cmp
xchg
jge
adc
jo
xchg
leave
push
mov
sbb
xor
lahf
jo
clc
push
addr16
cltd
and
test
pop
lock
pop
add
cmp
insl
lods
jecxz
andb
pop
mov
or
add
inc
cmp
insb
daa
adc
mov
add
cmp
push
pop
test
jp
or
jl
popf
xchg
xor
lahf
mov
jbe
inc
sbb
shlb
addl
ret
and
or
insb
fs
ss
mov
fstps
leave
add
sub
enter
iret
dec
sti
xor
nop
or
push
pop
jne
je
jb
loop
aam
shrd
add
jns
int
sti
sbb
repnz
push
push
xorb
push
jae
jl
ljmp
fucomp
negl
imul
test
shlb
out
je
and
add
mov
les
or
sbb
xor
jmp
xor
add
mov
sub
outsb
sub
ret
ja
add
xor
aam
shlb
lret
xchg
int
sbb
daa
add
cwtl
ljmp
int
cli
and
cmp
pop
mov
add
jge
insl
mov
insb
cmp
fdivl
cmp
mov
test
fldcw
add
js
mov
jns
and
aad
addr16
inc
sarl
out
add
jp
outsl
push
lret
mov
jno
fucom
push
cmp
jno
ss
clc
xor
pop
jbe
xchg
incb
push
push
xlat
and
mov
xchg
jns
jmp
aaa
mov
adc
ret
ret
mov
push
mulb
xor
dec
out
cs
fsts
or
out
fsubrl
jl
addr16
jl
icebp
add
add
imul
add
int
into
add
jmp
inc
or
mov
add
cmpsb
mov
aaa
add
mov
push
sub
push
jnp
adc
mov
hlt
sbb
xchg
bound
aaa
dec
jge
mov
lret
das
out
lea
xor
add
daa
xor
andb
pop
push
ret
jb
les
add
inc
cmc
inc
xor
movsl
xchg
icebp
xchg
movl
mov
mov
insb
fildll
sub
jle
fldl
sbb
rol
out
lret
and
scas
jo
insb
cltd
inc
lds
outsl
out
pop
mov
test
mov
test
or
repnz
xor
jbe
insb
add
xor
inc
aas
call
idivl
aad
mov
pop
movsl
pop
ja
mov
mov
fmul
enter
mov
inc
mov
and
rorb
push
xor
or
repnz
test
add
dec
fiaddl
aas
pop
inc
inc
inc
andl
xor
add
inc
sbb
jl
bnd
popa
pop
add
cmpsb
push
add
js
jg
scas
int
or
lret
jne
sub
xchg
fwait
jg
test
leave
dec
xor
sub
jno
test
push
inc
jp
adc
hlt
add
rorl
enter
jecxz
fwait
mov
pop
lret
fbstp
and
and
mov
add
fildl
lret
mov
fcmovnu
adc
xor
js
inc
xchg
daa
push
popf
adc
outsb
shll
mov
arpl
test
imul
sbb
sbb
fisubrl
fisubs
lods
cmp
pop
or
mov
int
int
xor
sti
pusha
add
arpl
into
out
and
sub
out
and
ljmp
jbe
and
testb
mov
outsl
sbb
sub
lods
mov
outsb
sbb
xor
shl
push
pushf
ret
mov
inc
scas
mov
cli
xchg
enter
fsts
adc
mov
dec
add
cmp
test
aaa
push
outsl
cli
out
imul
xchg
pop
sbbb
insb
cmp
leave
aas
repnz
ret
push
stos
into
dec
adc
les
xor
mov
out
clc
loopne
in
add
test
orl
sahf
sub
fnstcw
xlat
dec
xor
jge
inc
or
pop
aam
add
jg
add
test
push
in
insl
push
push
sbb
hlt
pusha
cmp
cmpsl
stos
push
xchg
cld
lods
pop
xchg
pop
mov
frstor
sbb
fwait
xor
mov
sbb
enter
push
imul
pushf
or
sbb
adc
ljmp
xchg
mov
test
sbb
stos
pop
ds
add
pop
fwait
pop
in
addr16
fsubrl
jp
xor
pop
pop
movsb
aad
inc
gs
jp
out
mov
test
add
mov
mov
jbe
roll
push
rolb
stos
int
pushf
mov
dec
ja
adc
push
pop
in
gs
cmc
xchg
cltd
adc
mov
add
roll
inc
test
in
inc
incl
add
push
sbb
xchg
js
adcl
pushf
sbbl
dec
sysenter
sbb
sbb
xchg
pop
sbb
fnstenv
lret
xchg
frstor
xchg
mov
dec
aad
jmp
mov
ret
push
jmp
rcl
sarb
repnz
adc
nop
outsb
andl
das
add
xor
xor
cmp
push
push
push
push
sub
fidivl
sbb
dec
movsl
repnz
data16
sub
or
mov
mov
cmpsl
pushf
out
and
loopne
pop
fnop
cld
xor
mov
mov
adc
mov
jp
sbb
mov
adc
aaa
xor
dec
cmp
add
cld
repz
pop
shl
lret
inc
or
cld
gs
add
aaa
pop
les
pop
xchg
dec
pop
dec
mov
jmp
int
int3
pop
jl
pop
push
push
mov
pop
mov
mov
jns
orl
mov
sub
xor
jmp
out
cmpsb
leave
clc
gs
pop
and
fwait
push
scas
popa
add
pushf
subl
test
mov
xor
es
cwtl
mov
xchg
clc
adc
ret
fstp
outsb
dec
aam
inc
adc
pop
test
pop
dec
jno
and
lds
pop
dec
fldcw
decb
std
add
add
inc
or
jg
fstp
mov
fbstp
mov
jbe
mov
or
mov
sub
mov
cmpxchg
outsb
push
out
in
jp
es
decl
fs
add
lret
pop
addr16
dec
mov
push
sarb
jo
and
loop
mov
xchg
lods
pop
insl
mov
negb
or
pop
mull
cwtl
ds
adc
cmp
add
out
iret
inc
daa
mov
mov
pop
or
mov
movsb
add
dec
xchg
repz
aad
sbb
jl
fistpll
gs
insb
fs
in
pop
jbe
push
add
lds
xor
lods
and
scas
pop
stos
mov
push
mov
adc
mov
add
mov
mov
dec
adc
jae
add
or
adc
mov
push
call
fwait
cwtl
pop
xor
scas
dec
lock
negb
and
inc
dec
cmp
dec
stc
out
sbb
mov
add
stos
sbb
into
lcall
int3
push
adc
int
jle
jbe
cmp
add
ja
push
clc
movsb
and
mov
nop
stos
xchg
dec
in
cli
xor
das
inc
lea
sbb
jge
iret
loope
adc
arpl
outsl
sbb
pop
mov
arpl
push
ret
in
loope
les
ss
xor
icebp
test
pop
mov
add
leave
dec
aaa
xor
inc
mov
sti
cmc
das
inc
sbb
cld
sbb
mov
pop
mov
sbb
inc
cld
or
cmc
enter
mov
insl
testb
sbb
add
fst
sub
push
cwtl
mov
mov
std
dec
mov
push
pop
mov
mov
cwtl
and
das
cltd
arpl
add
push
dec
pop
sub
push
and
mov
dec
sub
add
sub
daa
cli
sub
mov
sub
xchg
test
and
jmp
and
inc
lock
mov
inc
es
sbbl
lods
sub
dec
mov
jbe
loopne
jp,pn
add
es
push
pop
add
push
shll
jg
cltd
into
jne
inc
xchg
insb
test
add
add
add
mov
xor
lret
pop
fdivrs
pop
jmp
scas
pushf
in
vpmaddwd
xchg
xor
adcb
mov
scas
out
lods
fcmovnbe
add
xchg
push
xchg
and
cmp
jae
nop
shll
mov
add
stc
test
jns
test
sbb
and
lock
das
aaa
stc
adc
lock
aas
idiv
cltd
sub
fildl
stc
adc
xchg
ret
jae
rolb
pop
movb
mov
enter
sub
or
xchg
jmp
gs
mov
shl
inc
jo
aaa
divb
add
pushf
inc
out
mov
ret
sub
fbstp
jp
rcrb
add
xchg
pop
addr16
mov
enter
scas
rcr
es
pusha
pop
mov
pop
mov
scas
cmp
xor
push
dec
push
sbb
push
xchg
shlb
mov
lods
jp
add
popl
adc
add
push
pop
pop
push
hlt
test
jecxz
sbb
fcoms
sbb
nop
push
jge
cwtl
in
repnz
xlat
pop
shrb
lock
prefetchw
shl
ret
loopne
js
mov
mov
loop
push
lahf
lcall
ficoml
adc
add
insl
fs
sarl
jb
mov
mov
or
xchg
cwtl
inc
xchg
xor
loope
nop
mov
and
pop
mov
mov
adc
dec
mov
aam
shrl
je
jl
enter
lahf
test
sbb
adc
mov
jmp
adc
fnstcw
add
and
cmp
arpl
pop
sbb
mov
pusha
pop
imul
fidivl
into
push
outsb
test
loope
jbe
test
xlat
jo
mov
sarl
cmp
jbe
test
and
lea
dec
imul
imul
pop
add
cmc
jb
nop
jo
push
jle
pushf
sbb
add
add
dec
push
or
adc
mov
testl
xchg
jge
push
hlt
adc
fstl
ds
xor
lret
pusha
or
pop
mov
cmpb
fbld
and
sbb
fisubrs
pop
xchg
dec
lods
mov
popf
andb
inc
out
xchg
lahf
add
mov
add
or
sub
aaa
cld
mov
pushl
stos
cwtl
push
or
out
and
inc
out
shll
lcall
js
mov
mov
xor
cmp
add
xor
movsb
iret
test
xchg
push
shlb
rorb
mov
cmpsb
mov
js
add
mov
sarb
inc
push
dec
test
mov
rcr
pop
in
jbe
xor
inc
push
cwtl
in
mov
decl
adc
jmp
gs
inc
lret
loop
pop
insl
mov
dec
fsts
cmp
xchg
xchg
ljmp
inc
scas
jmp
imul
add
arpl
xor
cmp
fwait
loope
into
add
push
orl
cmp
dec
ss
cmp
xlat
cltd
add
mov
fsts
mov
rcrb
jae
ret
or
flds
ss
sub
and
or
sahf
pop
mov
jne
and
int3
adc
inc
inc
imul
jae
cs
jmp
add
daa
insl
lcall
pop
xchg
inc
jmp
aaa
test
jo
out
push
cwtl
leave
mov
in
lea
inc
call
pop
out
xor
dec
mov
jne
mov
test
lahf
mov
repz
jp
dec
mov
add
xchg
xor
inc
sbb
cltd
enter
fisubl
adc
cltd
pop
ja
add
jns
into
psraw
or
mov
and
push
notl
aaa
xchg
popf
pop
cli
cmp
ds
enter
dec
shll
movd
into
fisubrl
pxor
bound
sbb
mov
lock
insb
gs
lcall
mov
mov
push
lds
les
fstps
add
sahf
bound
sub
in
push
loope
daa
push
nop
ds
jno
cmp
fimuls
jmp
push
andl
stos
add
adcb
xor
mov
in
and
pop
scas
add
sub
xchg
xor
sahf
cmp
lea
push
or
arpl
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
in
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
in
add
add
das
sub
jecxz
sub
out
xor
xor
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
adc
aaa
add
loop
add
shlb
add
shll
add
repz
add
fidivs
add
into
aaa
add
into
aaa
add
sahf
aaa
add
sahf
aaa
add
mov
add
mov
add
sahf
aaa
add
sahf
aaa
add
mov
add
mov
add
pop
aaa
add
pop
aaa
add
dec
aaa
add
dec
aaa
add
pop
aaa
add
add
pop
aaa
add
dec
aaa
add
aaa
dec
add
aaa
dec
add
aaa
popa
add
aaa
leave
add
aaa
xchg
add
aaa
cmp
or
jmp
add
aaa
pop
add
aaa
push
add
aaa
stc
add
aaa
roll
aaa
sub
or
mov
add
or
dec
add
aaa
iret
add
aaa
syscall
or
popl
or
outsl
add
add
aaa
out
add
aaa
das
add
or
jg
or
incl
or
aas
add
or
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
pop
cmp
xchg
xor
pop
cmp
xchg
xor
fbstp
add
sub
divl
add
sub
cmpsl
xor
add
xor
xlat
xor
add
sub
xchg
add
add
xor
add
xor
add
sub
xchg
xor
add
xor
daa
cmp
lahf
xor
add
sub
iret
xor
add
xor
add
sub
sub
sub
test
sub
enter
dec
xor
add
cmp
mov
add
jg
or
pushl
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
or
out
or
xor
add
xor
add
xor
add
or
cmpsl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
or
shll
or
jae
or
repz
or
aaa
sub
or
add
js
or
add
or
rolb
aaa
rolb
aaa
add
or
enter
nop
add
aaa
cmp
or
call
add
aaa
pop
add
aaa
push
add
aaa
clc
add
aaa
rolb
aaa
sub
or
mov
add
or
jp
or
add
jp
or
cli
add
aaa
cli
add
aaa
xor
add
xor
add
ds
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
push
xor
add
sub
inc
xor
add
sub
mov
sub
mov
sub
ret
add
xor
sub
xor
add
xor
add
xor
sub
push
xor
add
xor
add
xor
add
sub
data16
add
xor
sub
es
add
xor
add
xor
sub
inc
xor
add
sub
inc
xor
add
xor
add
xor
xor
add
or
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
or
or
or
mov
or
mov
or
and
or
and
or
xchg
aaa
or
popa
or
shll
add
aaa
or
inc
or
add
or
add
or
jno
or
add
or
popa
cmp
add
cmp
add
jp
or
xchg
add
aaa
pop
add
aaa
jb
or
ljmp
add
aaa
cli
add
aaa
adc
aaa
mov
or
jp
or
xchg
add
or
and
aaa
pop
add
aaa
jb
or
ljmp
aaa
pop
add
aaa
popf
add
aaa
cmp
add
aaa
dec
add
aaa
lea
pop
aaa
insl
add
aaa
lods
add
aaa
inc
add
aaa
test
pop
aaa
jne
pop
aaa
mov
pop
aaa
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
jecxz
aaa
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
cmp
adc
pop
out
cmp
loope
cmp
loope
cmp
lock
cmp
lock
cmp
jecxz
cmp
jecxz
cmp
add
dec
or
les
or
dec
or
aad
or
movsl
dec
or
movsl
dec
or
lcall
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
or
pop
dec
or
or
sbb
or
clc
dec
or
or
push
sbb
push
sbb
push
fmuls
push
call
dec
or
aaa
push
hlt
or
inc
inc
hlt
or
xor
or
inc
inc
adc
cmp
push
xor
movaps
sldt
inc
inc
adc
cmp
wrmsr
push
adc
sub
cmovo
adc
xor
movaps
cmovo
adc
xor
movaps
cmovo
adc
xor
adc
adc
and
push
adc
push
sbb
and
push
dec
xor
sbb
negl
dec
daa
lock
sub
sbb
sub
sbb
add
sub
sbb
sub
sbb
sub
add
ds
repnz
sub
sub
sbb
dec
sub
push
dec
sub
push
cmp
sub
push
sub
jecxz
sub
jecxz
sbb
rcrl
sbb
rcrl
dec
sub
pop
dec
sub
pop
cmp
hlt
pop
cmp
in
pop
xor
in
sub
fcompl
add
and
add
sbb
sbb
add
inc
xor
in
xor
sbb
frstor
xor
int
xor
std
inc
xor
in
xor
sbb
sub
sbb
and
sbb
sbb
sbb
push
das
sbb
dec
das
sbb
inc
das
sbb
cmp
sbb
xor
sbb
sub
sbb
and
sbb
add
sbb
sbb
push
das
sbb
dec
das
sbb
inc
das
sbb
xor
ss
add
cmp
or
or
adc
or
loopne
femms
shll
push
pmaxub
adc
into
and
adc
and
adc
and
adc
adc
mov
adc
lods
daa
adc
popf
daa
adc
lcall
adc
and
adc
and
adc
and
mov
adc
imul
push
dec
sub
push
push
sub
push
pop
sub
pop
or
push
pop
sub
sbb
das
inc
sbb
das
push
sbb
pop
push
sbb
pop
sbb
dec
sbb
dec
xor
sbb
sbb
inc
sbb
cs
sbb
push
push
sbb
push
sbb
dec
sbb
add
dec
xor
sbb
xor
sbb
inc
sbb
sub
push
sbb
sbb
sbb
dec
sbb
dec
aaa
sbb
cmp
inc
sbb
sub
sbb
sub
sbb
sbb
sbb
sbb
sbb
dec
sbb
dec
xor
sbb
add
cmp
call
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
leave
xor
add
xor
add
xor
add
xor
sub
add
xor
xor
jmp
aaa
xor
jmp
xor
jmp
cmp
jmp
cmp
add
add
adc
add
add
add
dec
jne
decl
decl
dec
add
dec
add
dec
add
add
add
dec
ds
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
add
add
das
jb
or
xor
add
add
add
pop
xor
add
adc
aaa
dec
add
aaa
dec
add
aaa
insb
add
aaa
insb
add
aaa
imul
aaa
imul
aaa
dec
add
aaa
dec
add
aaa
dec
add
inc
add
push
add
aaa
sbb
add
pop
add
aaa
pop
add
pop
add
aaa
push
add
add
aaa
jl
xor
pushf
add
faddl
shll
add
add
incb
xor
xor
pop
pop
and
daa
pop
ret
pop
add
aaa
xor
add
clc
add
xor
add
xor
add
xor
add
fldl
inc
xor
add
incl
inc
xor
add
xor
add
xor
add
add
faddl
push
xor
add
test
ja
and
xor
xchg
ja
adc
xor
xchg
ja
dec
add
xor
xchg
divl
int3
add
xor
xchg
divl
pop
add
xor
xchg
divl
pushf
add
xor
xchg
divl
fadds
and
xchg
divl
add
cmp
add
xor
add
repz
xor
add
repz
xor
inc
add
hlt
add
and
pop
hlt
add
cmpsb
hlt
add
cmpsb
hlt
add
add
xor
add
hlt
add
xor
add
xor
add
xor
add
xor
add
hlt
add
cmpsb
hlt
add
xor
add
cmpsb
hlt
add
les
or
jbe
inc
add
add
adc
jp
inc
add
xor
add
xor
add
das
and
mov
xor
cs
add
xor
add
mov
add
xor
add
xor
add
mov
add
inc
add
or
sub
add
mov
add
movsb
inc
add
add
movsb
inc
add
adc
mov
inc
add
mov
adc
mov
inc
aaa
ljmp
aaa
pop
add
inc
aaa
sbb
inc
aaa
popf
add
and
pop
aaa
cmp
add
aaa
imul
aaa
mov
or
xchg
mov
aaa
add
inc
aaa
out
adc
add
aaa
add
or
inc
mov
insb
add
aaa
cmp
add
aaa
inc
xchg
inc
aaa
sub
or
cmp
mov
xor
xchg
divl
cmpsl
add
xor
xchg
divl
pop
add
xor
xchg
divl
ja
cmp
xchg
divl
push
add
xor
xchg
divl
cmpsb
add
xor
xchg
divl
xchg
add
xor
xchg
ja
flds
cmp
xchg
ja
outsl
add
add
test
ja
das
add
xor
xchg
ja
add
xor
xchg
ja
and
xor
add
pushf
xchg
ja
xchg
add
xor
xchg
ja
xchg
add
xor
xchg
divl
add
xor
add
cmp
add
mov
clc
add
movsb
repz
cmp
add
cmp
add
xor
add
add
cmp
add
repz
cmp
add
hlt
add
aaa
add
hlt
add
xor
add
hlt
add
xor
add
movsb
hlt
add
xor
add
hlt
add
xor
add
xor
add
xor
add
movsb
hlt
add
shll
add
movsl
inc
add
aaa
adc
xchg
mov
add
add
mov
add
mov
add
mov
add
mov
add
cmp
add
mov
add
xor
add
mov
add
aaa
adc
add
cmp
add
mov
add
xor
inc
add
xor
add
mov
add
inc
add
cmp
add
adc
aas
test
std
add
aaa
adc
push
aaa
adc
or
xchg
test
lods
add
aaa
mov
inc
aaa
roll
push
aaa
xlat
addl
add
aaa
sbb
or
pop
xchg
sub
test
sub
test
lcall
aaa
cmpsb
add
pop
test
daa
add
inc
add
aaa
js
add
or
add
add
add
xor
xchg
lods
add
xor
xor
xchg
xor
inc
xor
xchg
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorl
xor
xorl
sbb
ja
aaa
add
xor
xorl
cld
xorb
add
xor
xorl
add
mov
add
sub
icebp
mov
add
sub
or
xor
add
and
add
add
adc
add
sub
leave
add
add
xor
add
xor
add
add
repz
sub
test
repz
shl
mov
add
hlt
add
and
add
sub
std
nop
hlt
add
xor
add
xor
add
mov
mov
add
add
mov
add
mov
add
jb
inc
add
add
sbb
outsb
mov
push
add
cmp
add
xor
add
xor
xchg
mov
or
scas
mov
add
add
xor
add
add
add
mov
add
aaa
cmpsl
jl
aaa
mov
or
mov
add
add
aaa
sarl
aaa
mov
jge
aaa
mov
jge
aaa
imul
aaa
fwait
jge
aaa
cmc
add
aaa
xchg
jge
aaa
dec
add
aaa
pop
jl
aaa
and
or
sbb
mov
sub
push
jge
aaa
fiaddl
or
cmpl
add
aaa
scas
jl
aaa
stos
add
aaa
lods
jl
aaa
add
inc
aaa
inc
add
aaa
cltd
jl
add
aaa
xor
add
sub
xor
add
xor
jge
xor
add
xor
jge
xor
add
xor
jge
xor
add
xor
add
pusha
jge
xor
add
xor
jge
xor
jge
xor
add
xor
jp
xor
cmp
jp
xor
jp
xor
add
xor
add
add
xor
jns
xor
jns
xor
add
xor
jns
xor
divl
add
mov
add
cmp
add
jle
add
xor
in
hlt
add
cmp
inc
pop
hlt
add
dec
hlt
add
cmp
add
xor
add
xor
add
hlt
add
cmp
orl
sub
inc
add
cli
repz
cmp
add
ljmp
stc
fcomi
add
lret
mov
mov
sub
add
sub
or
push
mov
or
mov
or
jb
inc
add
or
and
pop
add
inc
add
adc
mov
inc
add
inc
add
add
mov
adc
and
or
add
mov
add
mov
adc
bound
adc
ds
ds
add
inc
aaa
nop
add
inc
aaa
mov
test
adc
inc
aaa
pop
add
add
aaa
fwait
test
in
adc
aaa
push
add
inc
aaa
fadds
aaa
mov
add
aaa
jg
inc
aaa
cld
add
aaa
jae
inc
aaa
and
inc
aaa
or
test
addl
inc
aaa
test
add
xchg
aaa
popl
xor
test
jl
dec
xor
test
add
push
add
xor
test
jns
cmp
xor
add
and
sbb
test
push
add
xor
test
cli
add
xor
xchg
lods
add
add
divl
mov
xchg
xor
add
xor
xchg
xor
add
xor
xor
xor
xor
add
xor
divl
add
mov
add
sub
xor
xor
add
mov
add
das
add
mov
add
mov
add
mov
add
mov
add
repz
xor
add
xor
add
mov
add
and
pop
mov
add
add
mov
add
mov
add
sub
imul
pop
add
repz
movsb
xor
add
mov
add
xor
add
mov
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
adc
and
adc
daa
into
xor
sub
sbb
add
add
add
xor
add
aaa
or
add
push
pusha
arpl
pop
push
outsl
push
inc
jo
or
push
dec
js
pop
xor
aaa
jmp
popa
aam
frstor
loop
imul
cli
icebp
jno
in
jne
adc
jns
pop
add
add
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
dec
add
aaa
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
push
sbb
push
or
push
clc
xor
lock
call
xor
fdivs
inc
push
enter
xor
cmp
cli
mov
pop
push
sub
xor
push
mov
add
sbb
out
adc
out
add
xor
xor
pop
ds
fdivs
mov
fdivs
scas
shlb
cmpsb
cwtl
xor
sahf
nop
xor
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
sahf
add
sahf
add
mov
add
mov
add
pop
add
pop
add
dec
add
dec
add
pop
add
pop
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
fidivs
add
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
adc
push
mov
fcmovu
sbb
pop
adc
cli
or
xchg
ds
in
cmp
fidivrl
movsl
aaa
repnz
and
outsl
loopne
ja
lock
loopne
out
add
xchg
xchg
push
push
dec
int3
xor
push
insl
mov
aaa
pop
jp
sbb
adc
inc
and
and
dec
pop
aam
mov
jl
sub
dec
or
cmp
popl
jp
xchg
std
ljmp
jbe
int3
rcrb
fiaddl
loope
push
adc
mov
mov
fucomp
jae
out
dec
xor
mov
stos
dec
sbb
call
xor
push
mov
push
xor
inc
icebp
sti
jae
mov
dec
shll
int
test
shrl
mov
or
cmp
push
fistl
mov
jno
mov
xor
or
jl
and
out
scas
or
cmpb
pusha
andb
pop
mov
daa
or
les
jg
add
dec
add
sbb
in
filds
and
test
and
call
mov
push
jp
jmp
jo
mov
mov
mov
add
pop
pop
jp
sbb
or
repnz
rcl
popf
into
pop
mov
nop
movsb
cmp
add
or
xchg
inc
aad
add
xor
mov
movsl
xchg
inc
lcall
lcall
xlat
pop
add
sbb
es
jmp
sbb
adc
xchg
js
pop
cli
lret
xchg
call
aas
sub
add
add
cmp
fsts
mov
adc
dec
mov
pushf
dec
mov
add
add
mov
test
cmp
enter
sbb
xor
fimuls
das
mov
mov
es
icebp
pop
aam
and
push
je
testl
dec
jmp
or
jl
sub
push
or
and
dec
mov
jnp
or
inc
test
jns
xchg
pop
scas
gs
dec
xor
cmc
inc
push
dec
js
mov
mov
inc
jmp
dec
ds
scas
sarl
movsl
dec
pop
push
dec
add
push
cmp
cmp
xor
in
and
movsb
xor
cltd
aad
or
push
sahf
loope
mov
xchg
popa
out
mov
scas
xor
xor
dec
popf
xor
dec
lods
xor
dec
mov
add
lret
test
lods
fldenv
inc
jmp
inc
inc
popa
js
ds
lds
dec
int
pop
dec
add
ss
inc
cmpsb
xchg
leave
mov
cltd
inc
xchg
fstps
push
lret
stc
jmp
cwtl
insl
shlb
mov
dec
dec
cmp
dec
xchg
cmp
push
cmp
dec
cmp
dec
ret
repnz
fdivrl
add
aaa
dec
dec
icebp
sub
popf
jge
mov
push
mov
pop
pop
shrb
mov
mov
add
shlb
mov
in
or
cmp
fstl
lods
into
mov
arpl
popa
dec
sbb
dec
js
xor
xor
mov
out
adc
push
or
sbb
jmp
add
adc
lds
fsin
call
sbb
xor
sbb
push
and
cmpsb
inc
lods
in
stos
out
jecxz
leave
mov
pop
xchg
push
lret
ss
and
addr16
and
addr16
pop
loope
pop
push
pop
push
cmp
rol
jge
jb
jmp
aaa
mov
aas
call
xchg
adc
test
add
adc
jns
in
inc
arpl
mov
scas
mov
add
and
xor
enter
add
inc
inc
xor
inc
xchg
pop
inc
jmp
xor
cmc
stc
shrl
arpl
int
adc
push
pop
mov
add
add
nop
cmp
sbb
cmp
add
repz
sub
inc
or
xor
mov
inc
cmc
sbb
push
les
or
ds
xor
les
or
cli
sub
add
inc
das
push
incb
mov
xor
test
inc
and
sub
jbe,pn
add
mov
inc
inc
add
pop
rcr
mov
mov
adc
pop
cmp
inc
outsl
cmp
dec
and
rorl
call
test
cmp
es
adc
cmp
dec
stos
aas
dec
bound
add
das
add
pop
inc
dec
xor
jne
js,pn
insl
xchg
fidivrs
cmpsl
jle
sbb
jne
add
push
out
andl
xor
test
inc
inc
adc
gs
jecxz
lea
imul
ss
shll
mov
in
sbb
jae
pusha
push
sbb
aaa
aas
add
aaa
add
insl
pop
int3
pop
pop
mulb
pop
cli
dec
stos
or
add
lretw
es
push
add
push
jmp
popa
imul
bound
jmp
repz
mov
sti
aam
gs
ds
popa
das
adc
mov
jno
mov
pusha
cwtl
mov
adc
mov
xchg
xlat
inc
js
and
out
mov
orl
negl
add
adc
cs
jno
outsb
cmp
push
test
and
out
pop
mov
add
inc
push
mov
xor
add
xor
add
xor
add
xor
ss
sbb
push
icebp
cmp
xor
stc
add
dec
push
loope
cmp
push
leave
adc
pop
adc
add
sub
and
xor
dec
pop
cmp
inc
bound
test
jns
xchg
popf
lea
xchg
xchg
outsb
cltd
movsl
jb
imul
pop
pop
scas
push
pusha
arpl
adc
cli
or
outsl
fimuls
jo
loop
je
jbe
js
push
jnp
mov
xchg
add
lcall
xchg
andb
fwait
mov
mov
cmpsl
cmpsb
shrb
scas
sahf
enter
les
mov
dec
jns
ret
push
jne
movl
iret
iret
aaa
pop
xor
fs
cmp
mov
fiadds
cmp
pop
add
ljmp
push
cld
push
repnz
or
sub
pop
cli
sub
pop
and
push
cmp
or
push
xor
cmc
adc
icebp
adc
dec
clc
sbb
adc
and
sbb
sub
sub
adc
adc
add
adc
push
pop
sbb
pusha
lret
in
adc
loopne
sbb
in
push
lea
add
push
movsl
xchg
shr
test
fsubr
jl
mov
divb
cli
js
lret
insb
sub
bnd
mov
test
mov
cmp
mov
mov
jg
mov
imul
les
leave
enter
mov
inc
mov
cltd
fmuls
cmpsl
xchg
rclb
popl
add
call
jnp
loope
add
hlt
cmc
shll
in
leave
sub
inc
push
shlb
sub
fstps
aam
loop
lock
rcr
or
out
fxam
and
test
sbb
mov
inc
xor
call
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sahf
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
dec
xor
add
add
push
cmp
dec
xor
add
add
push
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
incb
aaa
or
add
aaa
or
add
aaa
or
push
decl
cmp
add
aaa
or
add
aaa
or
aaa
or
push
decl
push
incl
push
mov
or
add
or
add
or
add
or
add
int
add
or
add
jg
add
aaa
or
add
or
add
or
add
cmpsb
push
call
or
add
xor
add
xor
add
mov
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
test
xor
out
dec
inc
in
out
dec
inc
in
and
out
cs
in
cs
cli
cmc
es
cli
cmc
es
cli
cmc
inc
inc
cli
cmc
inc
inc
inc
mov
add
inc
add
loop
sbb
add
fidivrl
adc
lret
sti
ret
sti
stos
inc
adc
mov
inc
subl
xor
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
into
aaa
add
into
aaa
add
fidivs
add
fidivs
add
into
aaa
add
into
aaa
add
sahf
aaa
add
sahf
aaa
add
mov
add
mov
add
dec
mov
inc
inc
lock
jae
movsb
inc
inc
push
pushf
inc
inc
sbb
out
aam
test
xor
aam
mov
lret
add
adc
lcall
adc
or
dec
sahf
mov
push
mov
icebp
aad
add
insl
cmc
sbb
mov
sub
cwtl
outsb
and
pusha
outsl
sbb
jp
mov
cmp
loop
mov
add
or
aad
lret
jp
cltd
pop
pop
cmp
cmp
sbb
add
pop
or
ss
jb
imul
and
out
sahf
imul
arpl
adc
fidivrs
pop
sbb
ljmp
nop
lods
cs
fadds
xorl
xchg
dec
or
ljmp
dec
cld
out
dec
in
lret
push
pushf
add
daa
sti
call
aad
mov
cmp
clc
mov
add
in
push
test
fs
or
add
xor
add
xor
add
xor
add
xor
std
cmp
add
add
xor
std
and
or
add
xor
imul
xor
imul
add
xor
imul
xor
mov
sbb
or
xor
add
xor
add
push
jae
jmp
sbb
jae
or
lock
add
xor
add
insb
pop
add
xor
add
jl
add
xor
add
xor
gs
push
add
xor
add
xor
add
add
pop
jmp
add
xor
add
xor
add
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushf
xor
add
add
xor
add
add
xor
add
dec
das
add
dec
xor
add
add
and
pop
xor
push
dec
xor
add
add
sbb
or
add
xor
add
add
pop
add
or
add
in
add
and
aaa
roll
aaa
and
aaa
loop
add
testl
aaa
xchg
aaa
pusha
add
inc
aaa
dec
add
inc
aaa
pop
add
inc
add
aaa
cmp
dec
inc
aaa
pop
add
inc
aaa
pop
add
inc
aaa
cmp
inc
aaa
cmp
inc
aaa
xor
add
xor
dec
ja
mov
add
lahf
add
xor
add
nop
add
xor
add
roll
xor
add
mov
aaa
xor
add
xor
add
xor
add
xor
add
add
xor
add
aaa
xor
add
xor
add
xor
add
xor
add
xor
add
aaa
xor
add
cmp
dec
add
xor
divb
inc
add
xor
in
xor
xlat
xor
inc
cmp
inc
xor
add
xor
add
xor
add
jb
jl
push
add
add
add
in
add
xchg
add
jne
push
xor
add
lcall
xor
add
xor
add
xor
add
xor
add
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
test
add
xor
pop
xor
and
xor
add
ss
add
add
repz
lock
add
ss
in
sbb
cli
sbb
mov
adc
iret
ss
add
push
add
outsb
add
jo
dec
bound
sbb
fadds
mov
cmp
add
cmp
add
cmp
xlat
cmp
add
add
cmp
add
imul
sub
ss
add
ss
add
add
add
or
call
add
ss
add
mov
add
js
sub
addl
ss
adc
data16
addl
push
ss
add
ss
cmp
xlat
add
add
cmpsb
add
roll
ss
add
pop
add
ss
add
ss
add
das
add
xor
add
xor
and
lds
add
xor
add
les
inc
xor
add
mov
add
mov
xor
add
add
add
push
dec
pushl
inc
dec
cmp
dec
pushl
inc
dec
pushl
inc
inc
ljmp
inc
xchg
xlat
inc
cmp
inc
cmp
roll
iret
inc
add
jo
xor
sbb
dec
pusha
divb
pop
pop
or
xor
dec
aad
cmp
xor
xor
xor
aaa
fbstp
xchg
aaa
loope
nop
add
aaa
ret
xor
aaa
xor
leave
xor
xor
int
pop
aaa
iret
xor
aaa
repz
aaa
cli
xor
aaa
xor
aaa
std
xor
aaa
add
and
pushl
and
add
add
xor
shll
push
xor
xor
fnstenv
and
xor
xor
xor
xor
xor
xor
xor
add
loopne
sbb
xor
xor
out
call
psubsw
out
call
xor
pminsw
aad
in
xor
psllq
lock
mov
push
or
gs
sbb
jno
pop
push
push
and
mov
and
fisttpll
and
pop
push
and
pop
push
and
and
xor
daa
add
cmp
xor
sub
push
ljmp
xor
sub
pusha
ljmp
push
ljmp
xor
pushl
xor
pushl
cmp
pushl
xor
pop
xor
enter
iret
pop
ss
pop
aaa
xor
pop
cmp
aam
cmp
mov
pop
inc
xor
inc
xor
pop
inc
xor
pop
inc
cmp
xor
pop
dec
xor
or
xor
inc
or
xor
push
or
xor
inc
or
cmp
pop
sbb
push
sbb
add
aaa
dec
or
aaa
dec
or
aaa
inc
or
aaa
dec
or
cmp
or
orl
insl
cmp
or
test
add
cmp
mov
push
or
push
pop
or
cmp
or
cmp
xor
add
aaa
add
sahf
cs
add
xchg
cmp
jge
inc
add
outsl
ds
sub
jle
sub
inc
add
sub
jbe
and
ds
add
js
scas
sub
ja
mov
cmp
dec
add
movsb
cmp
dec
add
mov
cmp
je
add
cmp
sarl
inc
add
cmp
add
cmp
add
cmp
inc
cmp
inc
cmp
add
cmp
sbb
dec
add
cmp
cmp
inc
add
add
cmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
ds
add
ds
idivl
sbb
cmp
sbb
add
cmp
push
add
lods
pop
das
xor
or
xor
or
xor
or
add
xor
or
xor
pop
cmp
sub
dec
or
xor
daa
cmp
sub
jl
xchg
or
xor
or
xor
or
movsb
add
xor
add
adc
xor
push
lods
xor
push
scas
xor
push
scas
xor
pop
pop
in
ss
pop
add
cmpsl
ss
pop
sti
ss
pop
repnz
pop
in
ss
pop
out
xor
jns
test
pop
lds
sub
movsb
ss
mov
ss
mov
and
iret
and
mov
xor
lods
ss
stos
ss
pop
cltd
ss
pop
shlb
sbb
xor
mov
shlb
lahf
push
shlb
add
cmp
add
cmp
add
cmp
add
xor
add
xor
add
int
inc
xor
add
movl
dec
cmp
add
xor
add
cmp
add
xor
add
cmp
add
add
cmp
add
xor
add
cmp
add
xor
add
cmp
add
inc
cmp
cmp
test
push
and
stos
aaa
and
mov
aaa
mov
and
cmp
and
cmp
add
mov
and
lods
and
aaa
and
aaa
and
add
xor
and
pop
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
dec
cmp
and
and
andb
cmp
and
cmp
and
mov
or
push
fimuls
add
ret
push
xchg
push
rorb
xchg
push
cmpsl
or
sbb
or
or
push
mov
or
pop
or
je
or
or
push
bound
adc
jns
or
jo
adc
inc
or
push
or
adc
or
sbb
or
add
sbb
or
and
incl
xor
xor
or
xor
push
mov
xor
push
test
add
xor
cmp
das
push
dec
push
ds
push
push
cmp
push
inc
push
and
push
push
push
push
dec
push
push
push
inc
push
pop
push
cmp
add
cltd
push
jmp
lcall
push
xchg
push
loopne
jge
andnps
push
push
jg
std
push
jo
xor
push
and
push
push
push
adc
push
or
push
and
mov
sub
add
and
sub
mov
push
and
xor
and
stc
and
xor
cwtl
sub
and
cmp
and
sub
sahf
inc
inc
and
xor
and
inc
mov
and
xor
and
push
and
inc
fldenv
dec
cmp
and
shll
add
sub
and
cs
pop
cmp
push
xor
and
sub
and
inc
aaa
mov
es
cmp
jmp
addr16
xor
and
fbstp
and
lods
xor
push
daa
mov
xor
inc
cmpsb
xor
mov
adc
mov
push
and
cmp
or
sbb
add
sbb
pop
and
ss
add
ss
aaa
scas
add
movsb
and
aaa
or
adc
pop
add
push
or
adc
dec
or
push
push
or
pop
push
or
push
sub
push
cmc
or
push
testl
push
icebp
or
adc
in
add
shll
out
add
roll
add
mov
add
cmp
add
fnstenv
mov
fidivrl
pushw
jno
fdivrl
js
fnsave
inc
push
fidivrs
push
fbstp
cmp
push
loope
aas
push
loop
xor
pop
push
cmp
pop
cmp
pop
sbb
incl
adc
add
icebp
push
push
cmp
push
sbb
xor
xor
or
xor
or
xor
or
xor
xor
sub
xor
inc
xor
cmp
dec
or
xor
sub
cmp
daa
xor
or
xor
inc
xor
dec
xor
jle
sub
jno
sbb
pusha
ds
rsqrtps
add
pop
cmovge
and
inc
ds
and
ss
sub
push
push
aas
push
bts
push
rsm
das
push
shld
pop
shrd
xcrypt-ofb
cmpsl
das
pop
xrstor
pop
pop
aas
dec
cmpxchg
dec
btr
dec
cpuid
das
dec
setge
push
lfs
dec
imul
push
das
push
setns
inc
inc
das
inc
inc
sysexit
add
aas
dec
str
xor
dec
sub
push
cmp
push
es
push
imull
cmp
hlt
sub
push
add
push
popa
sub
push
ds
push
das
sub
push
sub
inc
push
cmp
cmp
sti
cmp
cmp
stc
cmp
push
cmp
pop
cmp
hlt
cmp
cmc
cmp
mov
cmp
cmp
iret
cmp
add
sub
push
push
sbb
cmp
or
push
push
call
cmp
aaa
arpl
pop
inc
fs
pop
cmp
xor
scas
push
xor
mov
xor
jo
xor
push
jb
aaa
data16
cmp
pop
cmp
pop
cmp
pop
cmp
pop
cmp
test
cmp
inc
mov
aas
es
add
jl
inc
add
es
inc
es
inc
push
mov
push
pusha
add
push
addr16
push
pop
add
data16
data16
dec
data16
dec
inc
add
inc
push
add
inc
xor
add
jmp
inc
sub
push
inc
sub
in
and
jecxz
sub
add
mov
add
jle
xor
and
imul
bound
add
cmpsl
add
inc
cltd
add
lcall
inc
xchg
add
and
add
and
add
and
add
and
add
and
xchg
xor
les
inc
xor
ret
xor
enter
leave
cmovnp
add
mov
sysret
xor
mov
movups
mov
paddw
hlt
paddq
repz
repnz
ss
xor
xorl
ss
mov
ss
mov
mov
das
xchg
ss
das
sahf
ss
das
xchg
or
add
xor
adc
xor
and
push
add
es
mov
adc
and
adc
and
adc
jbe
cmpsb
and
adc
and
stos
and
inc
add
push
xor
add
inc
add
xlat
xor
add
inc
add
lret
add
inc
add
jmp
add
add
mov
xor
add
add
add
add
add
mov
add
in
add
aaa
sbb
add
testl
add
cmp
add
mov
add
aaa
lcall
aaa
lahf
xor
aaa
xor
add
shlb
aaa
in
add
aaa
mov
add
aaa
lcall
aaa
lods
xor
aaa
hlt
add
aaa
insb
xor
add
aaa
sub
add
ss
add
sub
add
ja
add
cli
add
aaa
xor
xor
xor
add
xor
xor
xor
add
xor
xor
xor
add
xor
xor
xor
add
xor
xor
xor
add
xor
xor
xor
add
xor
xor
xor
add
xor
xor
xor
add
xor
xor
xor
add
add
xor
xor
xor
add
xor
xor
xor
add
xor
xor
xor
add
xor
das
aaa
xor
add
xor
das
aaa
xor
add
xor
das
aaa
xor
add
xor
push
sbb
or
xor
test
xor
in
xor
add
xor
mov
dec
xor
iret
xor
add
xor
add
xor
xchg
dec
xor
shlb
add
add
or
int3
xor
add
xor
add
xor
mov
xor
pop
pop
xor
mov
add
dec
xor
mov
add
pop
xor
mov
add
cmp
popf
sbb
inc
cmp
add
add
jnp
add
dec
dec
add
js
add
pop
dec
add
cmp
add
push
dec
add
add
xor
add
dec
add
daa
xor
add
add
jle
add
rorl
add
dec
add
jl
add
cmovp
add
dec
add
mov
add
lret
xor
add
add
enter
dec
dec
add
mov
add
xchg
add
push
xor
add
shrl
add
gs
les
add
jbe
add
aad
add
inc
add
add
sbb
add
sub
add
cli
add
aaa
shrl
add
mov
add
mov
add
lea
add
mov
add
popl
add
nop
add
add
popl
add
add
mov
add
insl
add
sub
xor
add
xor
sub
xor
add
xor
sub
xor
add
xor
sub
xor
add
xor
sub
xor
add
xor
sub
xor
add
xor
sub
xor
add
xor
sub
aaa
xor
add
xor
jmp
aaa
xor
add
xor
add
xor
mov
add
in
add
xor
mov
imul
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
xor
out
xor
mov
push
je
pop
push
je
add
dec
add
mov
jmp
mulb
and
bound
stos
dec
xor
xor
add
fcoms
dec
or
cmp
add
xor
add
jp
std
stos
int
outsl
les
cmp
stos
rolb
mov
mov
dec
gs
fiaddl
jb
ljmp
add
xor
add
das
add
add
xor
sub
xor
daa
xor
add
data16
imul
jo
add
mov
jne
aas
shrl
inc
std
decl
inc
add
push
inc
add
xor
add
xor
add
les
adc
ja,pn
ret
ja
cs
lcall
lds
inc
fisubrl
ja
ret
leave
cltd
data16
mov
bound
mov
lcall
imull
aas
aaa
fwait
add
scas
add
mov
bound
add
fs
push
aaa
inc
add
add
dec
movl
push
mov
dec
pop
cmp
push
add
push
incl
pusha
adc
es
push
adc
mov
add
aad
js
sbb
xor
out
xor
and
add
aaa
or
add
mov
mov
stos
xor
mov
add
sbb
fists
fists
test
jbe
movsb
mov
outsb
jg
mov
cmpl
xchg
or
adc
add
push
xchg
push
leave
pusha
push
dec
movsl
push
pop
inc
mov
sbb
push
cltd
adc
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
int3
xor
add
xor
add
out
repnz
repnz
call
push
add
aad
push
test
pop
add
hlt
jnp
pop
xchg
push
jne
xor
daa
hlt
jnp
dec
xchg
js
dec
xchg
repnz
das
hlt
jnp
cmp
rclb
add
add
je
inc
add
data16
std
mov
xor
add
je
sbb
das
sbb
or
xor
add
lods
mov
and
add
dec
add
push
add
push
add
push
add
xor
add
mov
add
jmp
jb
sti
xor
jns
xor
and
jge
add
add
cmp
jb
cmp
xor
cmp
into
xor
add
mov
inc
add
xchg
push
cs
imul
xor
outsl
je
movsl
std
lcall
movsb
jb
aaa
repz
popf
push
scas
mov
pusha
cmpsl
mov
mov
dec
aaa
lcall
pushf
jb
ret
outsb
mov
add
aaa
and
jae
js
pop
sbb
jno
dec
lcall
sbb
jae
aas
mov
bound
aaa
sahf
jno
fildl
add
sbb
jne
adc
iret
roll
add
xor
and
dec
mov
add
adc
inc
fisubl
lds
mov
jg
mov
shll
lahf
shlb
add
xor
xchg
mov
scas
lock
jge
fs
add
xor
add
xor
add
xor
add
xor
stc
xor
call
idivb
inc
loop
aaa
xor
stos
mov
out
and
add
xor
add
xor
add
add
xor
mov
xor
add
xor
add
xor
add
pop
and
stos
push
fs
cmp
add
xor
add
xor
add
xor
add
xor
je
push
jae
lret
test
pop
add
leave
push
pusha
push
mov
pop
mov
push
outsl
cmp
mov
std
sub
jne
in
inc
pop
mov
pop
fs
scas
je
rcrl
add
or
popf
imul
mov
cs
jne
jge
sbb
and
jno
cs
std
ljmp
add
xor
add
pushf
bound
shrl
mov
or
mov
sbb
and
fidivs
add
add
test
cmp
add
cmp
cmp
add
sbb
cmp
aaa
fs
aaa
add
dec
cmpsb
pop
dec
ds
imul
outsl
aaa
cmp
add
dec
mov
hlt
ds
fcmovu
add
aaa
dec
mov
pop
push
scas
imul
mov
in
movsb
arpl
stos
mov
call
fiaddl
add
cmp
add
add
sti
add
aaa
clc
add
clc
add
add
jae
fildl
add
cmc
add
aaa
fildl
add
inc
stos
insl
push
js
sub
enter
aaa
fildl
add
and
add
in
add
and
xor
add
xor
jecxz
in
movl
divl
jp
divb
mov
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
xor
add
xor
add
xor
add
popf
add
xchg
add
dec
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
inc
xor
inc
cmp
add
add
xor
std
xor
add
xor
add
xor
add
xor
add
xor
jmp
xor
add
xor
add
xor
add
xor
add
in
orb
add
jbe
scas
shll
fwait
push
inc
shlb
lret
ljmp
lea
lds
jmp
add
scas
jne
inc
lcall
lcall
inc
jb
nop
jno
pop
fs
outsb
arpl
jb
and
push
jne
js
inc
xchg
outsb
jb
xchg
jno
popa
cwtl
dec
jb
xchg
fs
add
mov
imul
les
cmpsb
jno
in
sar
ret
dec
rcll
call
xchg
outsl
inc
add
mov
std
pusha
outsb
mov
cwtl
popa
add
xor
dec
add
xor
aaa
sub
inc
aaa
syscall
dec
aaa
test
outsl
aaa
cs
je
daa
add
outsb
aaa
das
add
jae
sti
add
inc
add
jne
or
add
pop
add
lock
add
scas
add
cli
add
mov
add
mov
add
popl
imul
popl
and
aaa
lret
add
push
data16
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
xchg
bound
xchg
dec
dec
sti
inc
addr16
addr16
ds
adc
push
call
iret
rclb
iret
rorl
mov
stos
ret
cmpsl
xor
mov
sub
mov
xchg
sbb
jmp
add
xor
or
cmp
or
gs
push
xchg
bound
xor
sub
std
enter
clc
add
cmpsl
testl
push
pop
mov
gs
cmovb
xor
cmp
sti
addr16
testl
push
sbb
les
testl
sahf
cld
mov
addr16
testb
out
mov
push
xchg
out
incl
adc
xor
sahf
pop
test
add
rclb
add
push
pop
add
mov
xor
add
xor
xor
add
xor
inc
xor
inc
xor
add
xor
ja
add
cmp
xor
xor
xor
bound
js
mov
jae
xor
ja
insl
add
data16
xor
add
xor
add
xor
add
xor
fnstenv
dec
add
add
dec
aaa
test
add
xchg
add
aaa
mov
add
inc
add
inc
aaa
xor
add
jl
pop
and
insl
adc
stos
pop
adc
xchg
outsb
add
inc
xchg
jno
aaa
add
inc
adc
dec
stc
adc
movsb
jno
das
xchg
pop
add
fimuls
loop
call
add
xchg
mov
nop
lret
les
mov
jno
cli
lea
mov
adc
xchg
test
push
jle
pop
push
xchg
cmpsl
push
push
call
mov
test
mov
in
stos
push
push
pop
stos
inc
dec
pop
lahf
adc
cmp
lahf
adc
pop
ds
sbb
mov
sbb
aaa
xor
mov
test
lret
sub
hlt
test
lret
sbb
divl
mov
jb
mov
ret
stos
xchg
adc
test
addr16
xchg
push
jae
ficomps
mov
js
mov
mov
in
ja
stos
pushl
popf
cmc
jno
jmp
mov
jge
push
and
push
jae
add
lcall
or
pop
je
fiaddl
push
rcrl
mov
jecxz
xor
js
xor
inc
and
orl
and
imul
pushf
push
jae
fistl
outsl
or
push
outsl
add
shrl
mov
mov
and
shll
enter
cmpsb
inc
pop
add
xlat
in
push
inc
shr
inc
pop
popf
jmp
push
fwait
in
push
pop
xchg
mov
std
jmp
jae
jb
popa
and
pusha
jb
xchg
jno
insb
fsubrs
cs
fs
ljmp
pop
inc
cli
push
inc
push
icebp
inc
pop
push
cmc
inc
inc
sbb
inc
dec
dec
add
adc
outsl
popa
jge
fs
xchg
jne
aaa
lock
testl
inc
orb
inc
je
rolb
mov
arpl
pusha
pop
pusha
mov
add
mov
ret
push
jbe
int3
inc
push
adc
dec
arpl
add
aaa
je
jne
xchg
and
sbb
add
aaa
and
push
idivb
int3
inc
add
or
inc
add
cmp
add
aaa
xor
movsl
lret
lods
aam
fsubs
xor
mov
xorl
les
add
xor
movsl
adcb
push
adc
cmpsb
pushw
aaa
xor
mov
andl
lds
call
cmpsb
sub
stos
adc
push
movsl
add
and
xor
mov
andb
loop
xor
hlt
xorb
in
call
cmpsb
loop
adc
aam
adc
and
xchg
insl
je
mov
insb
add
fisubrl
mov
rolb
jne
fistl
mov
cli
mov
in
jae
movsb
mov
dec
sahf
test
std
nop
lcall
push
and
cmpsl
arpl
mov
and
push
fs
jecxz
pop
xor
inc
sub
je
adc
adc
imul
cmpsl
adcl
pop
jae
pop
mov
dec
xor
add
test
pop
pop
notb
mov
inc
pop
sbbb
add
xchg
jno
cs
xrelease
add
add
pusha
retw
and
mov
bound
cltd
arpl
outsb
outsb
hlt
shlb
mov
mov
add
test
pop
pop
hlt
dec
push
push
in
pop
inc
imul
dec
dec
pop
cmp
add
outsb
and
cltd
imul
fs
aaa
xor
jae
fabs
jb
aaa
mov
add
lds
mov
fs
mull
add
xchg
mov
andb
pop
cmpb
push
aaa
mov
mov
fs
jmp
jae
lods
lahf
pop
bound
cmpsb
jae
mov
jae
mov
inc
adc
push
idivb
mov
inc
clc
cmp
add
daa
popf
add
push
xor
mov
in
pop
or
mov
rcll
or
aad
enter
aam
aam
mov
jnp
stos
lds
push
iret
test
push
iret
mov
xchg
xor
fwait
fwait
adc
mov
outsl
adc
movsb
pop
push
mov
dec
mov
jae
stos
lds
push
test
add
xor
pushf
sbb
mov
adc
cmp
and
dec
scas
push
and
dec
insl
or
push
push
sahf
push
push
and
jge
add
push
fs
mov
dec
insl
int3
mov
push
and
jp
aad
fs
test
dec
insl
lret
aad
push
into
push
push
push
add
cli
jp
mov
popa
pusha
test
push
and
jp
inc
aam
fs
out
push
add
xchg
imul
pusha
imul
inc
pop
sbb
xchg
popa
gs
arpl
xchg
popa
add
and
xchg
pop
data16
insw
imul
insb
add
cld
xchg
bound
mov
add
inc
pop
pop
mov
insl
stos
xchg
jno
lret
and
mov
imul
xchg
push
incl
mov
pop
jne
jg
jmp
sbbb
push
inc
xchg
jae
je
push
movsb
imul
movsb
fsubr
mov
fsubrs
inc
lock
test
mov
add
push
repnz
pop
cmpsl
in
xchg
addr16
out
movsb
imul
cmpsl
pusha
mov
mov
nop
mov
addr16
mov
fwait
pop
bound
test
push
mov
push
pop
dec
dec
mov
sbb
mov
call
mov
js
ret
inc
xchg
add
push
add
add
xor
cltd
aad
or
mov
js
mov
in
mov
aaa
xor
mov
jne
mov
mov
jg
lods
add
xor
mov
lock
jne
call
enter
jno
add
xor
stos
jl
inc
mov
xor
add
jae
cmp
int3
fdivr
sbb
dec
sbb
fdivr
sbb
insb
dec
sub
imul
cmp
cmp
inc
jmp
cmpb
xor
add
xor
movsl
jecxz
dec
jmp
shll
jmp
add
xor
add
stos
addb
mov
addl
scas
sahf
push
add
xor
add
out
std
std
mov
jno
pop
mov
decl
outsb
js
mulb
clc
mov
arpl
outsb
outsb
pop
xor
add
mov
sub
push
mov
pusha
outsb
add
cmp
mov
or
add
add
data16
mov
mov
popa
add
lea
xchg
imul
mov
jae
test
add
lcall
aaa
stos
add
pop
add
pop
add
addl
add
xlat
add
jne
gs
int
add
push
add
push
add
insb
aaa
sbb
outsl
aaa
sub
pop
aaa
int
add
xchg
ss
aaa
jno
lods
fisubrl
add
aaa
xchg
nop
cmp
xchg
cwtl
xchg
dec
sahf
repz
dec
xchg
in
lahf
imul
dec
lahf
nop
mov
call
xor
std
aas
xor
in
and
mov
std
and
rolb
add
fcomps
sbb
xor
out
sub
fstpl
or
pop
and
add
xor
adc
repz
out
ds
xchg
aaa
xor
popa
xchg
mov
jl
andb
add
cmp
aaa
xor
movsb
xor
adc
xchg
xor
mov
imul
mov
dec
mov
add
inc
or
add
sub
lock
adc
fdivrp
outsl
std
fisubrs
sarl
push
in
int3
lret
cmp
xor
into
dec
cld
leave
cmpsb
dec
in
faddp
inc
cmc
aam
sbb
xor
xchg
cmp
in
inc
rolb
mov
inc
and
data16
inc
dec
rep
lahf
jle
mov
in
xchg
cmpsb
scas
xchg
pop
mov
pop
nop
sbbl
add
imul
mov
xchg
mov
cltd
xchg
cmp
inc
scas
mull
mov
js
cmp
inc
inc
daa
mov
cmp
xchg
pop
outsb
pop
test
dec
movsl
inc
push
push
hlt
inc
inc
mov
add
cmp
fs
cwtl
jno
pop
fs
aaa
add
add
jl
das
and
xor
out
add
cmpsb
lods
imulb
mov
cmp
sub
js
sub
cmp
pop
inc
fsubs
and
sub
mov
test
aas
sbb
add
lahf
mov
cmp
lods
inc
aaa
dec
push
mov
jnp
insb
mov
jmp
mov
push
cwtl
add
mov
insb
jp
lahf
inc
jge
mov
addb
add
lret
jo
fadds
jnp
inc
mov
insl
and
movsb
sbb
xor
xchg
mov
stc
jae
scas
cld
insl
insb
call
std
mov
sti
cmpl
add
adc
shll
adcl
aaa
xor
imul
xor
inc
je
test
jne
or
xchg
int
sbb
cmc
test
jns
jae
jns
mov
mov
imul
fcmovbe
es
adc
dec
mov
adcl
bound
mov
pushf
insb
mov
xchg
lahf
mov
add
add
push
sbb
or
push
xor
pop
xor
or
lds
cmp
mov
pop
xor
cmc
ja
mov
decl
scas
mov
out
mov
rcr
xchg
movsb
mov
xchg
mov
aam
test
mov
repz
repnz
xchg
adc
xlat
add
lahf
je
mov
xor
add
jl
movsl
jle
mov
xorl
les
sbb
rolb
adc
ret
lret
or
movl
jle
nop
popf
dec
pop
sbbb
lea
pop
cwtl
mov
inc
orl
pop
xor
add
add
adc
add
fimuls
and
loope
adc
xor
push
in
ret
sub
inc
test
add
movsl
push
mov
leave
push
arpl
mov
movsl
push
mov
mov
push
add
js
mov
push
dec
mov
adc
mov
mov
ja
add
cld
add
push
out
iret
ss
and
xor
aaa
dec
xchg
test
xchg
mov
sbb
ds
adc
xor
or
and
add
aaa
xor
jno
add
repz
add
xor
mov
stos
jne
mov
ja
pop
pusha
je
push
xchg
add
xor
and
add
adc
cmp
push
fiaddl
sbb
or
add
xor
outsl
je
jg
sbb
inc
jbe
aaa
xor
fwait
loope
outsb
sahf
mov
insb
mov
shl
shlb
mov
icebp
std
ret
ljmp
test
inc
xchg
xchg
cmpsl
push
jbe
lods
aas
filds
std
jns
add
dec
mov
xor
add
ret
xorl
dec
jp
gs
je
xor
add
dec
push
data16
xor
and
mov
enter
add
fmuls
mov
rolb
cltd
sahf
xlat
xchg
pushf
add
adc
andb
add
jne
add
pop
pop
inc
push
dec
pop
sbb
add
add
and
cmp
add
test
jg
push
cmp
add
mov
add
cmpsl
inc
jo
nop
pop
add
lahf
imul
insl
inc
push
cwtl
pop
je
mov
push
bound
push
imul
daa
cmp
jns
push
push
add
aaa
sbb
add
out
faddl
add
rcll
add
loop
adc
sbb
cs
inc
fcoml
add
aam
push
xor
pop
push
pop
ret
and
push
xchg
sub
sub
pop
pushl
xchg
cmp
inc
rcll
push
and
and
pop
rcll
add
sub
inc
loope
sbb
out
pop
aaa
pop
mov
xchg
jle
movsb
test
add
add
aaa
inc
shrl
push
mov
aaa
adcl
cs
add
xor
and
and
or
and
xor
aam
movsb
pop
add
xor
and
xor
push
aaa
xor
es
xor
pop
dec
daa
call
mov
aaa
xor
sub
inc
bndstx
sub
or
add
adc
dec
xor
pop
xor
adc
into
or
xor
lcall
dec
lods
xchg
xchg
pop
add
xor
in
xchg
std
test
lret
cli
add
leave
std
in
nop
mov
rcrb
popl
leave
std
popf
ret
pop
or
into
mov
incb
push
nop
sahf
mov
mov
fcoml
sub
scas
dec
or
and
xor
add
mov
pusha
mov
jg
xor
add
out
hlt
inc
in
out
fmul
std
and
in
rol
jmp
ret
add
jmp
rorl
xchg
inc
out
ret
jmp
repz
rcl
loopne
xchg
rcr
call
add
jge
add
sub
sbb
imul
sub
jb
pop
pop
ja
dec
xor
add
aam
fistps
xor
add
inc
push
push
jl
inc
push
xor
add
in
push
xor
add
in
lret
enter
repz
in
push
fucom
loopne
in
in
aaa
sub
out
into
sub
out
aaa
call
call
add
cmp
or
push
sub
cmp
ss
dec
sub
aaa
fsubrs
sub
rdpmc
add
mov
pop
popf
mov
lret
fldl
add
lds
pop
fldl
add
lret
dec
push
sbb
add
aam
inc
jno
add
aaa
sub
js
clc
je
aaa
aaa
sub
icebp
add
add
aaa
out
pop
insl
dec
xor
data16
xor
daa
add
xlat
and
sbb
loop
inc
scas
in
or
mov
into
xlat
jg
scas
shrl
mov
les
xor
add
mov
sarb
out
aaa
xor
mov
xchg
out
aaa
xor
daa
push
adc
and
aaa
xor
call
add
lret
cli
or
lock
add
sub
pushf
les
mov
cld
fmulp
ds
call
lds
xor
sub
mov
mov
cmpsl
mov
xchg
jb
jnp
fisubs
jl
std
pop
lods
mov
pop
mov
cmpl
xchg
fwait
mov
push
in
mov
mov
jmp
movsb
mov
push
mov
jmp
and
add
fidivs
add
jnp
stc
cli
into
xor
add
cli
into
leave
je
fadds
js
test
push
mov
cld
mov
iret
lahf
iret
in
pushf
aad
add
fs
inc
add
mov
add
lods
jmp
shr
imulb
jne
push
cmp
push
es
add
mov
lds
xchg
icebp
cld
cs
push
cmp
add
push
push
push
cmp
add
je
pop
aaa
int
add
stc
jne
aaa
push
sbbl
dec
orl
fdivrs
or
add
add
aaa
jb
mov
in
add
bound
clc
adc
xchg
sbb
dec
sub
add
jo
cmp
aas
in
int3
add
aaa
out
mov
push
mov
mov
cmp
mov
hlt
clc
ja
xchg
out
xor
xchg
ret
inc
xor
imul
cmp
add
aaa
xor
aad
mov
loopne
divb
aaa
xor
xor
jno
add
xor
jne
push
call
cmpsb
ret
jl
sub
xchg
out
and
je
and
in
add
xor
movsl
stos
mov
mov
sub
in
or
sub
add
xor
adc
or
add
inc
or
xor
add
xor
addl
fcoml
jb
aaa
xor
jp
iret
fstl
mov
loope
movsl
aam
and
test
xchg
sahf
xchg
lods
xchg
mov
xorb
xchg
sub
loopne
add
popf
fdivrp
push
movsl
into
out
add
test
iret
mov
cmpsb
fidivrs
add
push
in
les
jge
enter
std
hlt
sbb
and
sbb
adc
jmp
inc
cmp
push
or
pop
add
jae
fcmovnbe
ja
xchg
nop
jecxz
fcompl
sub
mov
out
imul
add
lahf
nop
sahf
xor
add
icebp
in
mov
add
add
inc
push
insb
mov
inc
jns
jmp
pusha
jle
cld
dec
pusha
jl
cmp
outsl
fs
dec
and
pop
push
push
dec
xor
add
and
dec
mov
dec
pop
insl
cmp
ja
dec
push
jg
inc
data16
sub
mov
adc
push
pop
aaa
mov
cmpsl
xchg
movsl
mov
in
mov
lcall
add
test
push
push
dec
dec
cmp
push
pop
aaa
fldt
sub
sub
or
mov
and
adc
sbb
add
mov
mov
mov
sahf
lods
popf
mov
xchg
xor
jo
inc
sbb
cmp
jo
push
pop
jp
cmp
popa
add
push
push
arpl
mov
dec
push
and
dec
mov
cmp
push
xor
xor
or
inc
aaa
xor
sbb
sub
add
push
out
push
cs
call
lods
leave
jp
mov
add
daa
inc
sbb
daa
cmp
icebp
or
stc
add
or
sti
xor
and
jne
add
lods
test
test
push
mov
lcall
lahf
cltd
jmp
fstpt
add
les
in
mov
push
jno
jnp
arpl
jae
dec
enter
clc
je
jb
inc
push
add
pop
fs
loope
sub
inc
mov
xor
in
pop
cmp
add
aas
adc
dec
cmp
push
and
ss
imul
imul
add
and
jne
adc
add
dec
dec
pop
pop
sbb
or
and
add
dec
inc
push
xor
add
dec
bound
add
fidivs
add
imul
movsb
jl
movsb
scas
mov
mov
addb
mov
add
add
scas
sbbb
mov
lock
xchg
mov
cmpsb
jmp
scas
mov
aaa
loopne
mov
aaa
mov
aaa
sbb
ficoml
pop
das
lret
add
aaa
add
mov
adc
cmpsl
xor
lahf
and
jne
push
mov
imul
jp
pop
jle
pop
dec
add
orl
add
or
adc
sbb
pop
or
std
sbb
adc
and
xor
adc
cmp
pop
sub
sbb
sbb
or
or
pop
xor
scas
mov
cltd
mov
xor
and
add
pushl
addr16
push
adcb
outsl
pop
sbb
push
mov
imul
arpl
add
xor
mov
sbbl
rorl
pop
cmpsl
lods
xchg
inc
mov
popl
movsl
jg
mov
adc
lds
add
not
pop
xchg
sahf
cltd
jnp
mov
test
ficompl
jecxz
inc
lock
jmp
dec
loopne
xchg
xorb
add
and
mov
sbb
cmc
insl
push
mov
icebp
push
loop
sti
dec
hlt
call
shlb
pushf
imul
cmp
leave
lcall
ror
movsl
rcrb
push
nop
fwait
movsb
dec
mov
dec
xorl
push
mov
fistps
test
pushf
xlat
cmp
xchg
shlb
popf
cmpsl
mov
jae
sbb
inc
inc
imul
dec
addr16
pop
sbb
outsb
xchg
pop
push
mov
push
nop
outsl
push
push
mov
add
je
push
xchg
insl
pop
push
mov
pushw
dec
aaa
repnz
cmp
sbb
insl
pop
in
cmp
popa
pop
f2xm1
and
adc
sbb
or
push
adc
adc
add
cld
push
xor
in
add
clc
push
dec
je
pop
inc
cmpsl
push
je
mov
mov
adc
repnz
push
fninit
movsl
imul
iret
icebp
pop
mov
add
adc
fstl
movsb
adc
loopne
mov
nop
mov
jb
cmp
add
xor
mov
jns
push
mov
add
xor
enter
ret
gs
out
aaa
xor
mov
out
xor
sub
into
sub
pop
std
mov
adc
jp
add
xor
cmc
jmp
pop
sub
pop
int3
mov
sarb
lods
jge
add
cmpsb
sti
ja
xchg
mov
xor
mov
leave
stc
cs
mov
std
js
cmp
add
push
inc
hlt
pop
add
lods
test
mov
faddp
pusha
in
mov
loopne
lock
add
pop
push
add
push
adc
lret
bound
jl
xor
add
and
cmp
xor
fwait
mov
cwtl
jno
cltd
mov
push
cmp
add
mov
cmp
mov
add
mov
sub
jp
outsl
xchg
add
sub
daa
sbb
mov
pop
pop
dec
sub
sbb
add
jle
loope
cmpb
mov
jp
mov
lods
mov
add
cmc
add
sti
inc
dec
xor
or
xor
add
sub
push
imul
add
dec
imul
adc
add
aam
inc
out
add
mov
add
jno
jecxz
sbb
lock
sub
ret
mov
or
xor
add
testb
inc
cmp
dec
pop
out
aaa
push
cli
std
cs
outsb
pop
arpl
pop
jns
popf
add
aaa
nop
and
add
push
insb
adc
cmp
or
xor
decb
lahf
stc
or
add
dec
aaa
xor
ja
mov
jg
jl
jl
adc
cmp
loop
in
xchg
xchg
int
pop
mov
lret
xor
gs
sub
xchg
test
je
mov
mov
lret
popf
jbe
into
pop
mov
add
xor
mov
shl
add
xor
add
cmp
adc
out
cld
xor
in
das
or
sbb
sbb
jl
adc
sub
xor
int
pop
dec
cmpsl
jo
adc
clc
dec
loopne
dec
inc
or
add
xchg
mov
mov
mov
test
add
aaa
push
in
adcl
popa
push
lahf
out
sti
pop
rolb
inc
es
xor
outsb
sub
sub
cli
aam
sub
inc
mov
and
lret
cmp
inc
sbb
add
rcrb
hlt
pop
aas
and
gs
mov
into
xor
xchg
mov
mov
add
cmpsl
idivb
imul
ljmp
fisubrl
inc
pop
outsl
pop
mov
add
les
ljmp
aam
jl
xchg
jmp
out
out
loop
sarl
lock
push
fs
std
aaa
add
add
imul
rep
int
mov
ret
add
aaa
outsb
push
push
jns
inc
sub
add
aaa
adc
in
daa
xchg
mov
xchg
hlt
pop
mov
mov
xlat
add
aaa
aad
jae
mov
into
gs
xchg
push
test
addl
es
lcall
out
shl
jl
movsb
aaa
or
add
mov
subl
mov
outsl
xchg
lods
mov
test
ja
mov
mov
loope
mov
mov
xchg
stos
cwtl
in
lock
loope
mov
aam
inc
add
xor
add
xor
add
aaa
xor
xor
pop
enter
or
divb
inc
in
divb
popf
js
add
or
dec
loopne
divl
gs
add
ds
add
push
inc
inc
sub
clc
add
xor
shll
inc
in
xor
test
mov
ret
pop
mov
popa
xor
and
push
scas
push
sbb
jge
jmp
jae
mov
iret
mov
not
mov
xor
push
cmpsl
or
jmp
add
xor
rorl
or
mov
mov
clc
jmp
add
inc
xor
inc
repnz
xor
push
addr16
adc
xor
inc
jg
mov
nop
jp
int3
mov
inc
add
push
add
mov
adc
pop
cwtl
mov
jl
in
push
jnp
hlt
mov
inc
add
enter
mov
mov
mov
jns
cmpsb
mov
jno
inc
sti
in
and
les
cmp
add
xor
ss
sti
in
sahf
xor
decl
mov
inc
into
xchg
jae
push
lods
sbb
shlb
add
fwait
add
lret
sub
jbe
mov
adc
sub
add
mov
pop
sbb
add
pop
fwait
add
fwait
push
rclb
add
sahf
fwait
add
dec
mov
jmp
testl
xchg
dec
mov
add
mov
mov
adc
mov
cli
inc
add
cmp
push
faddl
into
loop
daa
sbb
je
xor
test
ficoms
add
mov
inc
arpl
int
push
loope
pusha
mov
dec
je
les
movsb
negb
aaa
xor
sbb
dec
and
add
mov
mov
push
call
add
mov
fucomi
out
out
sbb
or
mov
cs
leave
cmc
loopne
stos
insb
jg
stos
push
loope
add
xor
xchg
and
xor
xor
sub
inc
jmp
aaa
pop
cmc
pop
jmp
xor
mov
std
mov
xor
test
mov
adc
test
or
lock
mov
xor
and
mov
mov
mov
xlat
cmp
jb
mov
cltd
dec
mov
pushf
mov
sbbb
add
ss
dec
pop
mov
cmp
dec
repz
imul
cld
in
dec
ss
push
sbb
arpl
lea
in
aas
add
push
data16
ds
or
call
add
pop
addr16
call
mov
std
dec
inc
jno
lea
jmp
mov
jae
mov
push
jb
pop
or
sti
in
xorl
loope
mov
aad
mov
jmp
add
sbb
mov
ret
or
insb
or
mov
aaa
rorl
arpl
test
ds
bswap
pop
sbb
mov
fildl
es
enter
mov
adc
jae
mov
inc
add
xchg
sbb
xchg
inc
jne
sbb
ss
xor
inc
xor
add
mov
iret
cwtl
idivl
add
or
add
lcall
add
loope
jge
add
xchg
ss
ds
inc
fildll
xor
cmp
hlt
add
mov
or
lods
mov
cmp
out
xor
jne
aaa
adc
add
push
or
call
scas
icebp
jnp
sub
and
aaa
mov
aas
mov
das
add
lock
add
test
stc
cmp
and
adc
jnp
test
clc
test
scas
icebp
cmpsb
add
stos
lock
test
xor
sub
mov
out
mov
aaa
mov
inc
cld
je
jl
sbb
mov
push
popa
inc
mov
das
fwait
push
movzbl
inc
jmp
xor
add
std
scas
divb
aaa
mov
sarb
add
xor
test
or
fisttpl
adc
js
add
jne
jle
ljmp
daa
pop
xor
fstpl
std
decl
call
inc
out
cmp
call
sub
add
mov
jae
mov
cld
icebp
add
mov
inc
daa
fidivs
jge
mov
or
cmp
ljmp
jne
pop
test
push
or
fcom
add
pop
inc
std
xchg
rcr
jg
dec
pop
lgs
pop
std
xor
mov
ret
fisubs
add
xor
or
add
or
pop
jo
or
out
cwtl
add
mov
jae
and
dec
or
mov
mov
imul
fildll
fisttpll
orl
mov
xor
ss
fiaddl
push
lock
add
push
mov
out
xchg
iret
xor
mov
insl
ret
xor
aaa
xor
inc
dec
xor
jg
xor
add
stos
out
js
movsb
fidivrl
out
lret
fldenv
mov
inc
aaa
mov
xor
xor
and
inc
cmpxchg
mov
sub
fs
add
mov
out
cwtl
sub
mov
stc
jo
or
xlat
les
mov
testl
cmc
aaa
push
fs
cmp
pop
test
stc
loop
loope
clc
std
shl
ss
jg
clc
jb
pushf
cmp
and
mov
xor
inc
loope
jecxz
repnz
mov
add
test
popa
or
mov
mov
popa
add
xor
inc
add
mov
add
ret
lcall
gs
fcomps
lock
sbb
rorb
icebp
or
mov
roll
mov
test
mov
or
xor
push
repz
ja
lods
pop
add
insl
ret
inc
sarl
or
jo
jbe
insl
lods
add
jae
scas
sbb
pop
cmp
pop
cmp
pop
xor
inc
in
xlat
test
xor
call
adc
dec
fwait
mov
pop
call
sub
add
adc
pop
scas
fldenv
addb
push
mov
sbb
inc
scas
mov
das
repz
aaa
push
shll
rcrl
push
add
scas
rorl
out
aaa
push
scas
stc
xor
mov
sbb
test
adc
jl
lock
jecxz
xchg
add
xor
jge
xor
add
jmp
jb
lods
cmp
aaa
call
repnz
push
loopne
and
mov
sahf
add
sahf
roll
xor
fwait
xor
or
pushf
inc
aaa
scas
mov
andb
jmp
in
add
mov
xor
xor
ret
je
add
sub
mov
gs
mov
add
aaa
jae
psubd
add
repz
inc
or
scas
push
mov
push
add
mov
pop
add
pop
fs
and
sbb
add
dec
leave
scas
pop
add
aaa
mov
xor
dec
rcrl
push
jmp
mov
test
scas
mov
mov
clc
std
jmp
dec
xchg
test
arpl
push
jb
xchg
imul
js
mov
addr16
imul
cs
insl
push
push
xor
push
mov
arpl
adc
push
pusha
push
mov
stos
sbb
sbb
mov
cmp
add
xchg
mov
adc
xor
push
and
stos
inc
or
mov
push
sbb
sbb
jge
mov
movl
test
aad
sahf
xor
not
in
clc
cmp
add
pop
ja
movsl
cmc
push
lea
xchg
mov
sbb
mov
jle
daa
or
adc
push
int3
pop
adc
lret
or
notl
dec
dec
add
mov
adc
mov
outsl
jmp
aaa
and
mov
adc
mov
xor
add
mov
lods
push
fstpl
sar
loop
rclb
cltd
inc
add
arpl
add
sarb
lahf
and
fsubrl
call
push
daa
mov
pop
xor
fdivrl
push
fadds
lods
cld
jecxz
jae
out
inc
scas
and
rolb
pop
add
scas
not
rorb
jae
aas
mov
aaa
xor
scas
cmp
push
scas
xor
add
mov
fwait
roll
es
or
pop
and
mov
add
arpl
test
push
shlb
add
xor
pop
shlb
xor
or
dec
fisttpll
fstl
xor
jmp
arpl
pop
cmovp
add
add
push
add
add
push
scas
jnp
push
orl
cmp
sub
lods
jl
pop
pop
xchg
std
aam
scas
cmp
mov
shll
inc
cmp
mov
andb
hlt
jecxz
jo
add
mov
sahf
lahf
mov
cli
add
dec
test
cmp
subl
dec
or
filds
filds
add
sub
decb
cmpsl
jo
add
sbb
sbbl
push
inc
xchg
sbb
jne
sbbl
call
adc
pop
cmp
call
lret
jbe
imulb
pushf
add
aaa
mov
mov
aaa
sar
add
push
enter
mov
dec
push
sbb
movsb
lahf
arpl
jb
push
lds
stos
jns
aas
and
push
stc
dec
lret
push
int3
add
cwtl
rcll
ja
mov
iret
cmp
aaa
es
rorl
lea
xor
jp
add
mov
dec
aas
lods
arpl
pop
mov
jg
cmc
add
add
or
pop
or
add
pop
xor
fsubrs
jo
cmp
add
sbb
jnp
pushf
adc
into
xor
add
sub
sbb
mov
inc
and
lods
movsl
fldt
call
bnd
mov
ret
inc
xor
adc
daa
add
add
subl
out
xor
out
nop
ds
dec
xor
push
jl
add
mov
std
jmp
popa
mov
pop
imul
adc
inc
pop
add
mov
or
cwtl
call
push
stos
lock
jmp
xor
insb
jo
call
xor
popa
js
call
jo
xor
call
xor
inc
test
inc
xor
popa
clc
lcall
adc
call
jnp
leave
add
push
cltd
add
lahf
fsts
sahf
xor
pop
daa
jb
add
pop
push
lea
out
std
add
out
lock
add
lret
cmovo
inc
rorl
cltd
mov
push
xor
mov
mov
xor
or
cmp
add
pop
jae
mov
add
test
or
lret
xchg
mov
dec
jmp
xor
adc
testl
sub
nop
lahf
icebp
adc
jg
or
std
add
add
push
push
subl
inc
add
inc
mov
or
add
mov
fists
mov
add
push
lret
pop
aad
dec
ret
idivb
aaa
ret
aaa
and
mov
mov
xchg
mov
inc
sbb
lods
dec
std
mov
xor
aaa
xor
pop
add
xor
add
leave
xor
jg
and
sar
call
dec
cmp
out
cli
das
cs
jo
arpl
cmpsl
mov
dec
and
movsb
lret
mov
adc
dec
out
jle
fwait
push
inc
pop
mov
xchg
and
out
stos
movsb
fdivp
cld
inc
sub
push
iret
add
mov
inc
lock
or
pop
aaa
xchg
push
jnp
add
xchg
out
sub
lahf
out
sbbb
mov
movsb
jmp
cs
std
jmp
xor
add
jne
shll
arpl
adc
ret
mov
into
add
xor
cld
pusha
ds
jmp
je
and
jmp
cld
add
add
xor
cli
sbb
add
push
xchg
leave
xchg
ret
xlat
add
xor
push
sti
hlt
sahf
arpl
inc
mov
in
rorl
xchg
pop
mov
add
movsl
add
aaa
push
xchg
icebp
adc
mov
daa
cmpsl
add
xchg
inc
sahf
mov
pop
ret
mov
ret
ret
adc
xorl
sub
xor
add
add
inc
add
lds
adc
fwait
in
push
ss
and
push
adc
lea
aaa
push
jmp
add
fdivp
add
daa
rorl
mov
pushf
fldenv
sbb
pop
xor
and
add
xchg
pop
add
and
and
adc
rcrl
loopne
adc
fcomps
and
fcomps
xor
xchg
inc
add
xchg
adc
mov
sbb
aad
pop
imulb
lock
incl
pop
rorl
push
mov
inc
jl
push
pop
fucomp
jle
add
iret
xor
add
pushf
pop
jl
xor
adcb
add
mov
stos
clc
ret
repz
xor
mov
cwtl
xchg
out
mov
push
push
cmp
sub
xor
or
mov
aaa
mov
adc
and
insb
inc
sbb
inc
divl
call
jp
pushf
rol
xor
jg
or
clc
sti
xor
adc
hlt
mov
hlt
out
add
xor
add
xor
jne
jmp
jae
clc
and
and
adc
add
nop
dec
mov
xor
negb
pop
add
xor
inc
mov
jl
fsubrl
jns
add
mov
mov
cmp
movsl
shll
sub
cmp
clc
push
or
in
add
xchg
add
stos
repz
popl
xchg
aas
orl
push
pop
inc
and
dec
jbe
js
decl
rclb
into
push
mov
fiadds
jno
notl
and
js
ret
orl
mov
out
scas
add
or
jl
imul
pop
xor
add
add
mov
negb
inc
cmp
or
jne
add
add
mov
xor
add
int3
call
add
sarb
jbe
iret
fwait
add
xchg
jbe
inc
pushf
add
xchg
js
or
dec
adc
into
mov
mov
fldt
add
in
les
jmp
dec
rsm
pop
or
sub
std
jo
lds
cltd
js
dec
cmp
test
pop
lcall
inc
cmp
fstps
cltd
add
aaa
lock
aaa
xor
add
in
fidivrl
xor
pusha
push
add
lock
call
cld
xor
fmuls
int3
dec
add
shlb
dec
adc
lret
call
push
mov
insb
mov
add
pushf
shr
lea
in
mov
loope
bound
pop
loope
mov
mov
inc
xor
imulb
mov
mov
push
sbb
es
mov
add
xor
pop
je
inc
rcl
int
pop
add
jae
sub
cmp
jmp
jge
push
mov
aas
or
sub
mov
icebp
cmc
call
adc
loope
add
loope
mov
aas
cld
cmp
ss
mov
inc
in
jno
lock
xor
add
lods
fldz
ret
out
jb
xchg
and
xor
mov
das
hlt
add
push
mov
addl
adc
std
xlat
lea
mov
mov
je
call
inc
add
jecxz
in
pop
les
push
push
repz
addl
push
inc
mov
je
mov
push
movsl
add
cmp
addl
sahf
pop
add
or
je
aaa
jmp
je
push
in
push
push
pop
xor
jne
loopne
jbe
je
je
mov
scas
rorl
test
addl
or
push
or
ljmp
in
inc
aaa
jne
mov
popf
mov
pusha
inc
add
add
mov
popf
test
mov
add
sub
sar
fiaddl
aaa
pushf
add
nop
xchg
mov
aaa
popf
add
cli
test
inc
repnz
cmpl
sar
pushf
mov
jecxz
push
jnp
test
scas
lock
inc
mov
stos
and
test
addr16
adc
hlt
out
jnp
imul
sbb
cmp
jne
add
xor
mov
xchg
sub
out
out
push
mov
cli
push
mov
jg
mov
cmp
xlat
mov
in
add
and
mov
inc
mov
or
lcall
cmp
out
inc
in
adc
jmp
inc
aaa
mov
mov
xchg
xor
add
pop
imul
xor
xchg
cmp
adc
add
jecxz
je
scas
enter
or
out
inc
sarl
in
stos
and
bound
loope
mov
inc
incl
jmp
or
imul
loop
hlt
dec
and
mov
or
testl
inc
jmp
pop
cmp
push
and
add
dec
adc
add
jnp
cmovo
add
pop
xor
sti
cld
push
aad
or
insl
or
dec
adc
push
mov
inc
cld
fwait
jo
cmp
out
clc
mov
cmp
inc
test
cmp
enter
add
scas
mov
cld
inc
add
in
ljmp
mov
or
dec
cmp
nop
add
sub
xor
call
aaa
adc
out
into
add
and
push
ret
or
enter
cmp
push
loopne
fcoms
sbb
call
pushf
sub
aaa
popf
inc
decl
mov
mov
pop
add
incb
lahf
call
insl
add
xorl
inc
add
ret
xchg
shlb
pop
clc
aas
adc
je
scas
push
in
inc
pop
add
add
and
mov
cmp
xor
xchg
aas
inc
hlt
out
mov
xor
les
inc
dec
mov
mov
rcrb
cwtl
mov
push
and
inc
adc
insl
ret
test
arpl
dec
sub
rcl
punpcklbw
out
jae
call
ja
xor
push
rcrb
mov
cld
arpl
jecxz
fadd
out
mov
jp
or
filds
fbstp
push
inc
cmp
cmp
and
das
imul
cwtl
add
lea
or
add
push
mov
pushf
fmuls
sub
push
lcall
lds
mov
test
lods
in
shr
add
popf
push
shl
out
add
ret
punpckhbw
cmc
xor
mov
addr16
add
dec
xor
jne
ja
push
and
je
xor
fxch
adc
add
insb
lock
xchg
pop
add
or
test
adc
call
xchg
push
ror
dec
push
js
push
add
push
add
xchg
ja
push
test
cmp
sub
push
add
ss
call
cmp
mov
jns
mov
aaa
push
push
cld
add
aaa
dec
mov
pusha
inc
add
adc
cld
out
add
or
jae
inc
incl
pop
inc
aaa
push
mov
inc
push
int
xor
cmp
test
test
push
push
popf
outsl
mov
sbbb
adc
decl
lods
fldcw
aaa
hlt
mov
lret
lea
jecxz
test
dec
mov
xor
push
ja
aaa
xchg
jg
cs
adcl
or
mov
push
cmp
outsl
push
shll
loope
and
jmp
inc
aaa
xor
mov
mov
sbbb
mov
add
sub
add
out
inc
je
pop
jbe
add
rcll
mov
mov
call
js
inc
aaa
xorl
es
add
mov
movsl
arpl
std
jmp
xor
pop
jle
rclb
sub
mov
repz
jecxz
lods
sarb
out
xor
mov
xor
mov
add
push
ss
xor
es
test
mov
pop
stc
mov
pop
or
jmp
and
jne
lods
dec
in
cmp
daa
jl
or
fnsave
adc
jecxz
in
dec
push
clc
lods
xor
stos
hlt
add
xor
lea
dec
lea
dec
push
leave
je
add
pop
fdivr
ljmp
hlt
add
xor
inc
hlt
add
cld
push
jecxz
hlt
push
and
fwait
sub
pop
adc
sar
fwait
sub
inc
push
add
std
je
out
pop
addr16
add
into
inc
or
xor
pusha
pop
xor
rolb
add
mov
out
jg
dec
add
clc
sbb
add
sub
decl
movsl
or
sbbl
mov
pop
cmc
mov
mov
fdivs
arpl
repnz
push
pusha
push
mov
mov
add
adc
adc
enter
add
ljmp
add
not
pop
leave
cmc
nop
add
mov
xor
add
jne
nop
jg
mov
jnp
sub
cmc
stos
scas
jle
mov
xor
add
or
cld
xor
inc
jno
jbe
popl
daa
insl
mov
popa
add
xchg
xor
jne
jo
cs
push
je
arpl
mov
lret
inc
aaa
fisubrs
dec
mov
stos
das
lock
lods
pop
add
inc
cmpsl
daa
dec
push
xor
add
stos
movsb
mov
je
insl
clc
cmp
xor
dec
out
cmc
cmp
xchg
inc
fiaddl
pop
or
jmp
clc
stos
into
roll
stc
inc
xor
std
cld
pop
sub
mov
mov
shrl
inc
fxch
cmp
imull
and
or
add
shl
sub
in
and
add
into
xor
fldl
hlt
add
jnp
or
cmp
pop
add
enter
jne
mov
or
add
cmp
add
sahf
or
xor
add
add
push
jmp
inc
adc
sbb
mov
or
inc
sub
fadd
incl
add
jno
sbb
xorl
add
fnstcw
std
push
xchg
add
dec
popf
shlb
loop
leave
sbb
std
push
lds
add
cmp
push
pop
mov
sbb
xchg
cmp
inc
add
xchg
lea
or
add
int
call
out
mov
push
popf
int3
mov
popf
lods
call
mov
je
or
lahf
test
add
push
jmp
jne
out
out
jno
add
mov
or
adc
adcb
lret
inc
aaa
lea
pop
dec
mov
lds
xor
out
jb
add
jb
mov
mul
add
add
fmul
es
out
mov
addb
out
inc
xor
inc
aaa
scas
xlat
xchg
push
sbb
cmp
cli
mov
add
add
pop
test
mov
divl
fcmovnb
cli
mov
aaa
inc
scas
xor
xor
call
jl
mov
jne
add
scas
dec
test
out
dec
jno
add
loop
add
add
xlat
enter
lahf
xchg
je
and
xor
adc
push
mov
push
cmc
daa
jnp
add
xor
out
pop
adc
cmp
add
mov
icebp
shr
add
dec
lock
movsb
jns
jmp
xor
mov
xor
add
bound
das
adc
add
shrb
add
dec
and
faddl
pop
nop
and
and
out
push
dec
ljmp
xchg
aam
in
scas
jmp
push
fsub
mov
popf
push
mov
xor
push
ljmp
mov
cs
cmp
add
andb
lea
mov
push
fs
imul
das
add
add
dec
sbb
push
mov
and
inc
mov
inc
and
in
inc
jp
push
lea
and
dec
and
add
add
sti
sbb
mov
mov
fmull
mov
in
clc
shl
pop
xor
dec
icebp
clc
jle
and
add
mov
decb
add
or
out
lea
push
mov
xlat
out
mov
adc
inc
add
out
pusha
add
mov
jns
mov
or
add
mov
mov
xor
js
dec
clc
cwtl
sub
call
jbe
ja
ret
xchg
js
fldcw
cld
add
sub
jb
xchg
insb
inc
sbb
addl
or
jl
xor
in
and
cmp
xor
js
mov
push
iret
hlt
adc
dec
jb
jns
mov
repz
call
inc
aaa
xor
out
fmuls
jbe
js
lods
cwtl
sbb
add
test
push
out
jo
push
add
xchg
ja
pop
fldcw
push
pop
shll
xchg
mov
add
xor
in
jg
rcrl
jmp
xchg
xor
add
add
std
testb
xor
pushl
pop
jno
push
je
pop
cld
fimuls
or
pop
cld
mov
mov
das
mov
movsb
int3
jbe
xchg
add
adc
add
mov
std
mov
test
add
inc
stc
lea
or
push
dec
sbb
mov
pusha
das
add
and
cltd
jae
dec
xor
into
cwtl
imul
pop
leave
pop
xor
push
xchg
pushf
push
push
mov
cld
push
movsb
cs
mov
mov
je
cmc
inc
cld
das
je
add
cwtl
test
bound
cmp
stc
leave
jle
mov
fildll
inc
cmc
lret
call
lds
xor
aaa
and
push
cmp
mov
add
and
mov
jmp
out
test
add
mov
cmp
js
push
lea
test
lret
mov
add
pop
push
lea
adc
mov
cmc
mov
cmc
pop
add
dec
jge
fsub
inc
and
testl
ja
test
sub
mov
mov
jmp
xor
add
pop
ss
mov
xor
mov
add
xor
prefetch
or
mov
add
add
mov
hlt
out
add
dec
aaa
inc
test
jecxz
inc
aaa
xor
inc
fdivl
xor
jbe
stos
sbb
adc
or
aas
cmpsl
add
ret
lods
cmpsl
jmp
mov
insl
jle
jb
test
rcll
sub
add
call
push
xor
inc
add
adc
mov
add
out
insb
xor
push
pop
add
add
sub
add
jae
lods
subb
inc
dec
jb
insb
mov
sti
filds
jmp
jae
jno
dec
xor
add
int
std
in
enter
fildl
shl
pop
inc
xor
push
aaa
shll
call
fwait
add
icebp
out
pushf
mov
add
cltd
push
adc
shrb
fcomps
jge
mov
mov
std
mov
dec
call
push
jmp
mov
jo
cmc
add
popa
out
adc
icebp
cwtl
mov
negb
mov
dec
in
inc
nop
into
dec
add
gs
decb
push
flds
mov
add
mov
add
add
pop
loopne
call
cmp
push
shlb
dec
lods
xor
mov
sahf
inc
pop
pop
xchg
ret
xchg
add
cltd
and
add
sbb
outsl
cli
mov
jp
mov
fwait
lcall
push
sub
int
dec
push
add
xor
push
adc
add
test
add
xor
mov
add
int
push
sub
cld
lds
pop
cltd
insb
cld
cmpsl
mov
loope
jae
loop
cld
pop
pop
pop
add
call
movsl
inc
ss
subb
add
adc
pushf
mov
fdivl
cmp
push
jmp
xor
shl
xor
sub
jae
jle
ret
add
add
jnp
add
mov
push
movsl
inc
shll
xor
add
xor
movsl
dec
add
inc
aaa
mov
and
rcrl
pop
add
pop
in
add
xor
aas
out
add
xorl
in
or
lret
fldt
jb
mov
pop
ret
rcrb
jno
divl
add
mov
outsb
std
jmp
in
shrl
int
outsb
std
pop
cmp
std
jmp
popa
insb
std
outsb
loope
je
fwait
insl
push
insb
in
xor
movsb
fdivrl
pop
xor
subb
jl
jmp
jb
push
fidivrl
leave
mov
mov
leave
cmp
mov
call
fidivs
mov
and
daa
mov
cld
jmp
sub
add
dec
push
lea
pushf
cld
mov
cmp
jmp
aad
clc
mov
jne
les
sub
dec
or
lar
mov
clc
je
es
lea
add
inc
xor
add
xor
mov
mov
add
adc
or
aaa
fneni(8087
outsl
mov
add
mov
or
ja
xchg
call
iret
mov
js
dec
mov
push
mov
stc
pop
fisttpll
inc
mov
add
add
pop
add
ja
mov
sub
ficompl
pop
lods
mov
mov
insb
mov
ret
adcb
icebp
pop
sub
call
mov
call
lret
enter
dec
aaa
aaa
lods
popa
daa
mov
jbe
fsubrp
inc
lods
jb
add
jne
lcall
call
sbb
xor
aaa
loope
mov
add
imul
mov
jnp
popa
add
lds
mov
dec
pop
fiaddl
bound
mov
lahf
sub
stos
stos
fwait
add
xor
cmp
imul
fs
push
mov
faddl
inc
jb
jmp
arpl
xor
jg
add
mov
in
xchg
imul
add
mov
jge
in
xor
mov
xor
sbb
xor
xorb
stos
out
xor
add
sti
outsb
xchg
push
or
cli
push
stc
call
lcall
repnz
inc
push
push
add
push
mov
adc
push
lods
neg
aam
sti
ret
add
inc
sar
dec
mov
push
inc
or
sti
loope
in
sbb
add
xchg
add
xor
jbe
sbb
pop
movsl
and
leave
or
outsb
add
mov
shr
pop
std
call
mov
dec
cmc
add
sar
clc
push
aaa
rolb
dec
mov
in
fildl
add
and
add
nop
test
inc
sahf
incb
pop
lods
cmp
imul
clc
mov
sub
call
mov
pop
pop
push
nop
pop
mov
mov
imul
aam
pop
adc
int3
shll
and
pop
pop
dec
jecxz
sarb
rclb
xor
shr
je
mov
inc
xor
call
xor
lahf
push
mov
mov
mov
stc
addr16
mov
add
xor
dec
das
pop
inc
sahf
fldenv
push
aas
add
iret
ss
cmp
xchg
or
call
or
pop
ja
nop
addr16
xchg
add
inc
addr16
mov
ret
jb
jg
mov
arpl
inc
push
out
hlt
mov
call
subl
sbb
push
pop
call
insl
sti
xor
add
aam
xor
jbe
out
out
xor
mov
in
add
push
insb
jo
call
fs
rolb
add
out
shll
or
dec
fs
sti
fbstp
repz
mov
add
mov
int3
pushf
fwait
gs
pop
icebp
fwait
push
add
and
pop
rol
decb
arpl
inc
cmpsb
and
lret
push
jns
dec
adc
xor
fistpl
ljmp
add
enter
insl
stc
cmp
mov
lods
shr
test
into
xor
fs
mov
lret
sub
test
inc
and
or
add
hlt
cmp
add
cmp
inc
pop
push
aaa
mov
xor
pop
mov
ret
jno
aaa
pop
cmpl
cltd
cmp
mov
add
and
sbbb
xchg
divb
pop
mov
sbb
xlat
push
pop
add
test
pop
xchg
ss
xor
enter
lods
out
xchg
mov
jb
xor
pop
mov
mov
cmpsb
lcall
xchg
xor
push
xor
add
pop
pusha
cltd
jno
sbb
add
adc
stos
inc
pop
call
stos
ficomps
lcall
sub
xor
arpl
aaa
xor
xor
fs
mov
arpl
scas
jne
jmp
scas
and
stos
ljmp
xor
jmp
rcrb
arpl
xchg
xchg
aaa
sub
add
mov
call
fdiv
inc
inc
jmp
stos
jns
ret
roll
jbe
daa
sbb
in
mov
mov
lods
pop
mov
mov
aam
mov
dec
fstpt
mov
scas
inc
inc
dec
arpl
fistpl
cs
lods
lock
pop
push
jb
mov
in
pusha
xor
add
test
lods
in
xor
sub
inc
push
add
add
loop
mov
fcmove
popa
jmp
add
cmp
push
jecxz
call
pop
add
ficompl
add
dec
and
push
sub
in
fwait
add
dec
jmp
decl
add
jae
sti
pop
stc
push
lea
add
push
jge
sti
add
push
add
xor
inc
add
inc
push
xor
xor
pushl
jae
cmpsl
aaa
dec
mov
xchg
je
out
dec
lahf
mov
incb
jbe
push
ret
dec
fisttps
inc
aaa
xor
aaa
lret
xchg
adc
jle
add
add
xchg
ret
mov
fmuls
and
xchg
out
pop
add
mov
repnz
cli
aaa
and
add
arpl
push
pop
dec
push
inc
aaa
xor
xor
sbb
xchg
and
lods
bound
stos
cwtl
xchg
pusha
pop
lods
inc
mov
add
add
mov
xchg
jno
sahf
adc
shlb
xorb
mov
cmp
test
xor
xor
lds
call
sahf
pop
mov
cmpsl
add
movsb
or
insb
push
cld
pop
xor
push
push
in
pop
push
stos
add
insb
lea
jne
leave
pop
add
sti
out
add
mov
pop
std
rol
popa
std
mov
mov
std
xor
dec
pop
mov
pop
push
iret
mov
add
push
mov
test
inc
jmp
sahf
faddl
xchg
xchg
mov
rorb
lods
cmp
push
ret
inc
cmp
dec
scas
pop
or
pop
add
fcomps
xchg
movsb
stos
inc
sbb
add
xor
rcrb
out
add
pop
adc
into
xor
inc
jp
and
mov
mov
adc
je
ss
in
jne
je
jbe
das
add
sbb
ret
cmpl
sub
std
decl
xor
out
lods
jmp
push
stos
push
stc
push
add
push
sar
decl
mov
pusha
push
incb
xchg
scas
jno
xchg
idiv
push
test
mov
sub
notl
je
aaa
fdiv
xor
daa
adc
call
xor
and
enter
sbb
mov
in
cmp
inc
pushl
inc
popf
mov
dec
add
or
movb
sub
add
mov
call
jl
dec
ss
cmp
hlt
add
dec
mov
sub
cld
add
dec
cmp
mov
dec
add
cmp
call
mov
adc
je
add
ds
dec
cmp
adc
mov
dec
mov
dec
addl
imul
rcl
cmpsl
pop
fiadds
add
cltd
add
insb
pop
xchg
nop
cmp
add
test
push
loope
pop
push
add
sub
add
dec
sbb
pop
xor
test
xor
xor
lds
in
add
sub
add
ss
mov
add
inc
test
std
mov
nop
pop
std
push
mov
add
lock
scas
loopne
insb
scas
push
sti
mulb
pop
std
rcrb
std
fisubs
xchg
jae
adc
mov
sbb
xor
sub
dec
imul
push
repnz
sbbl
mov
jmp
popa
into
pop
std
arpl
mov
push
jmp
jae
das
ljmp
xor
add
add
lods
idiv
inc
lds
jbe
movsb
add
flds
ds
add
ss
mov
mov
and
add
add
add
dec
xor
movb
cmpsl
mov
mov
and
enter
push
mov
and
cld
push
ss
pop
mov
mov
add
fstpt
mov
dec
mov
test
aaa
js
cmp
mov
ljmp
add
divl
leave
cmc
dec
add
das
xor
clc
inc
cld
lds
call
lods
adc
inc
stos
add
xchg
cmc
mov
pop
push
dec
add
or
add
add
and
cs
jne
add
xor
hlt
dec
cltd
add
jbe
jae
int
or
xor
shl
stos
movsb
cmpsl
pop
out
fists
pop
sbb
sti
cmpl
cmp
xor
lret
fbstp
mov
loope
testl
jne
sub
mov
pop
and
jmp
das
call
call
imull
adc
add
sbb
aas
add
pop
sub
xor
testl
dec
xor
inc
aas
jbe
add
icebp
jp
sub
pusha
insb
sub
mov
daa
add
adc
stc
jno
jle
inc
jo
sub
fadds
add
aas
jo
sub
sub
xlat
cmp
sub
add
jne
das
fdivrl
inc
jmp
xor
xor
sub
rdpmc
loope
je
xor
push
or
jmp
dec
adc
aas
adc
cmp
xor
add
sub
push
xor
lret
jmp
add
xor
xor
sbb
cmp
adc
repz
rcr
inc
add
push
ret
add
xor
inc
rcr
inc
add
push
ret
add
xor
inc
mov
je
add
jmp
add
jo
popa
inc
test
in
mov
fnstenv
shlb
ljmp
adc
aaa
sarb
mov
add
ret
add
cmp
ljmp
pop
inc
add
add
ret
xor
cld
sub
pushf
sub
dec
andb
push
cltd
pop
and
mov
test
ret
ss
int3
popf
aaa
cmp
subl
add
push
cli
subl
add
add
add
mov
lcall
aaa
lret
mov
adc
hlt
xor
add
sub
ret
pop
pop
out
aaa
cmpsl
push
test
push
xchg
out
cmp
dec
in
sbb
sbbl
inc
pushf
pop
or
add
adc
ret
dec
xor
fwait
in
call
sahf
dec
je
hlt
out
mov
out
fbstp
mov
push
aaa
jg
test
ret
rorl
aaa
dec
add
js
jb
mov
cmpsl
orl
or
xchg
mov
stos
pop
icebp
lods
fisttps
insb
ja
push
push
arpl
add
aaa
add
rolb
arpl
add
notl
mov
jno
jno
add
mov
std
lods
shlb
xchg
xchg
add
aas
clc
mov
sbb
mov
fs
lds
lock
lock
add
xor
imul
movsl
ficompl
xchg
mov
cld
call
aaa
add
xchg
jp
add
shr
addl
add
mov
push
push
xchg
rorb
push
aaa
add
fwait
mov
add
cmc
mov
or
jl
std
call
stc
test
inc
push
xor
scas
add
cmpl
adc
mov
ss
inc
mov
aaa
pop
add
mov
test
add
fimull
loope
add
pop
add
mov
out
dec
and
add
mov
lods
dec
xor
add
ljmp
adc
xor
add
sahf
daa
aaa
pop
jl
out
mov
in
sub
aaa
pop
cmp
add
add
sbb
imul
mov
sub
ret
xchg
jl
add
sbb
mov
testl
mov
add
das
in
orl
bound
pop
in
mov
aaa
mov
idivb
pop
test
xor
pushf
addr16
outsb
xchg
cmp
adc
mov
mov
aaa
nop
stos
add
add
add
mov
sbb
in
pop
sbb
call
xchg
jecxz
es
xor
jns
cmp
add
pop
mov
pop
cmc
add
xorl
std
int3
or
jne
fcoml
scas
add
sbb
out
add
lock
add
cmp
imul
add
imul
push
add
push
out
pop
xor
xor
xchg
insl
pop
jg
cld
xor
jmp
add
ds
cmp
fs
test
repz
add
mov
add
dec
in
and
rolb
xor
add
cmp
ret
add
push
das
std
incl
add
mov
stos
mov
std
fisttpl
mov
lcall
int3
ret
push
mov
out
mov
jne
movl
xor
push
xor
inc
fmulp
aad
inc
int
sbb
inc
es
mov
aaa
pop
add
mov
jbe
mov
decb
shll
repnz
lahf
mov
test
jo
add
jecxz
pop
pop
and
std
push
ret
add
rol
aaa
add
sub
push
stos
sbb
xor
fsubs
pushf
jmp
test
lods
mov
sti
sbb
mov
fldcw
jecxz
push
test
xor
arpl
dec
adc
add
rorl
pop
dec
pusha
push
aas
dec
jl
mov
in
add
icebp
out
mov
div
loop,pt
pop
or
pop
mov
push
dec
mov
movsb
pop
dec
popa
loope
dec
sbb
push
xchg
rolb
aaa
pop
and
sti
ret
mov
xor
mov
jle
mov
mov
mov
call
jmp
xor
add
add
inc
cmpl
add
dec
gs
add
test
pop
mov
sub
jmp
jmp
xchg
jmp
push
jb
mov
adc
xor
push
cmp
cmp
mov
test
xor
push
or
std
adc
pop
shlb
and
add
push
rcll
or
stc
dec
add
cmp
dec
std
jmp
mov
call
call
mov
fidivrs
in
and
mov
fnsave
imul
jnp
adc
mov
ret
sbb
sti
ret
jbe
sahf
add
mov
add
pop
aaa
mov
ds
call
lds
mov
bnd
lahf
mov
push
aaa
ja
xor
pop
jmp
add
adcl
lcall
inc
imul
push
add
xor
mov
arpl
divb
mov
iret
pusha
sti
mov
cmp
dec
add
lods
adc
push
pop
add
and
xchg
subb
sbb
ljmp
mov
incb
pop
pop
or
push
out
add
fbstp
pop
add
das
dec
pop
push
punpcklbw
add
rolb
dec
pop
xor
jno
sub
inc
push
add
pop
mov
and
adc
add
fdivs
mov
dec
cmpb
punpckhbw
mov
ret
add
idivb
out
sub
adc
ret
adc
add
mov
sbb
and
mov
pop
call
stos
out
mov
jp
or
fbld
mov
popl
aaa
mov
or
in
pop
add
call
cmc
call
mov
add
xor
std
adc
dec
jae
dec
push
and
or
xor
rcll
xor
jmp
je
add
xor
jmp
sbb
pushf
jmp
push
in
inc
lods
outsb
push
shrl
std
into
mov
hlt
and
test
add
dec
gs
andl
lea
incb
int
pop
sahf
push
xor
mov
xchg
psubsw
push
xor
lea
xor
out
xor
mov
mov
add
pop
std
into
xor
movsb
xor
in
enter
push
xchg
dec
pop
lcall
repnz
in
xor
sldt
mov
xor
lea
sbb
push
jmp
and
xor
mov
sbb
pop
jb
push
mov
pop
add
dec
ror
jg
insl
xchg
mov
add
pop
jnp
lods
jo
adc
push
and
and
mov
add
aad
and
frstor
add
and
and
aaa
call
imul
js
incl
jno
call
mov
test
mov
pushl
or
insl
jl
jecxz
fucom
or
add
mov
xor
call
dec
dec
xchg
jl
lock
pop
xchg
out
jne
adc
aaa
xor
jl
clc
fcmovb
add
and
in
inc
shlb
insl
add
mov
jb
jae
jmp
bound
in
add
fidivs
sarb
push
test
mov
jmp
adc
testb
aaa
rorb
jns
or
aaa
arpl
test
add
mov
cmp
cmp
pop
sbb
cmp
cltd
stos
enter
rorb
add
jmp
imulb
cmc
ds
jae
mov
jl
jmp
idivb
push
sarl
jmp
pop
mov
shlb
cmp
fucom
call
sti
lds
mov
xor
mov
decb
xor
jmp
std
inc
push
jb
cmp
sub
mov
fstpl
add
dec
mov
mov
int3
test
or
jge
push
xor
mov
rcrb
and
push
adc
stc
add
fadds
push
lods
test
xchg
mov
adc
push
je
orl
push
push
in
mov
lods
jp
cmpsb
mov
or
cmp
inc
cld
loope
enter
jbe
add
aaa
imul
aaa
push
ljmp
pop
inc
mov
mov
aaa
into
pusha
divl
dec
aam
repnz
mov
and
mov
stc
mov
add
adc
roll
jl
add
mov
lock
dec
sbb
jae
dec
js
adc
add
arpl
adc
cmp
add
bound
test
dec
mov
inc
jge
xor
cmpsb
lcall
enter
rcrb
js
jae
jo
outsl
add
xor
les
int3
pop
out
pop
inc
jb
pop
push
add
mov
jbe
adc
xor
ds
adc
icebp
clc
lret
adc
sbb
jmp
xor
out
add
push
sub
push
or
add
push
test
fidivrs
clc
add
icebp
clc
or
xor
call
add
lods
out
mov
jmp
out
or
pop
int3
imul
add
inc
je
sbb
inc
or
fistpl
add
xor
je
aas
dec
sahf
insl
cmp
roll
imul
jecxz
jne
add
dec
dec
cmp
push
xchg
cmp
cmp
fsubrl
pop
out
std
fdivrl
dec
and
xor
mov
les
mov
pop
ljmp
inc
or
add
add
cmpl
push
push
add
mov
les
mov
aam
dec
imul
mov
rolb
iret
les
dec
xor
jle
add
push
cmpsb
pop
icebp
jmp
fmull
inc
push
aaa
mov
push
insb
jno
inc
inc
pop
adc
mov
lds
mov
je
gs
call
push
repz
aaa
es
xchg
push
stos
inc
hlt
jne
add
stos
add
add
jecxz
jb
dec
inc
cmc
call
cwtl
flds
pop
ss
or
ja
mov
out
pop
pop
arpl
push
jo
push
pop
dec
adc
testl
call
or
jo
ss
andb
cli
sub
adcb
in
repz
out
mov
xchg
shl
popf
cld
loopne
xchg
cs
popa
in
and
dec
xchg
cmp
mov
daa
mov
mov
add
out
jl
out
imul
je
iret
imul
out
je
testb
imul
arpl
xor
into
out
cmp
push
jg
sub
lock
sbb
mov
add
imul
je
mov
lods
enter
fildll
xor
sub
xchg
mov
vmovaps
stc
add
xor
out
xchg
aaa
fs
es
adc
stc
sub
add
sub
ljmp
ret
out
std
xchg
or
rolb
add
je
mov
xor
insb
dec
and
or
mov
mov
shlb
shr
adc
in
sub
in
in
call
jo
inc
mov
call
es
add
cmc
add
add
jne
mov
cld
mov
jne
xor
add
fcomps
sahf
xor
shlb
add
xor
xor
inc
xchg
test
cli
or
clc
lds
push
sub
xor
push
mov
pop
addr16
mov
or
mov
in
out
aaa
add
xchg
icebp
add
scas
pusha
push
mov
adc
push
aaa
jp
test
add
pusha
dec
adc
jle
cmp
pop
and
inc
pop
insl
add
and
add
and
inc
jae
cmpsb
add
pop
pop
adc
dec
xor
ss
add
pop
dec
jecxz
adc
inc
aaa
movl
fimuls
add
push
stc
adc
and
inc
dec
adc
xor
add
or
outsl
xor
ja
test
loopne
out
push
adc
add
jb
daa
and
clc
push
adc
jo
lods
stos
daa
addr16
addr16
xor
repnz
test
lahf
jnp
sti
push
pop
and
sub
xor
add
ljmp
jmp
inc
inc
add
push
sub
imulb
ja
cmp
out
scas
lock
daa
mov
xor
shll
jle
sub
andb
lds
shll
push
dec
and
test
pop
xor
mov
cld
or
call
sub
push
cmpl
cmp
icebp
xor
xchg
cld
add
ss
sub
mov
add
fmulp
fsubrp
test
adc
call
adc
dec
xorl
lods
and
add
cmp
loop
std
add
cmp
add
inc
add
or
ret
add
pop
sbb
add
aam
mov
bound
gs
je
add
pop
cmp
jmp
mov
je
insl
mov
ret
enter
movl
pop
sub
add
les
add
ret
jns
add
call
repz
pop
jne
mov
mov
lret
imul
sub
add
dec
add
loopne
std
imul
cmp
jl
dec
jmp
cld
adc
inc
xor
jl
stc
outsl
aas
or
cmpb
rorl
loopne
push
or
je
ss
mov
inc
xor
pop
loopne
mov
decb
ja
mov
or
mov
add
add
xor
je
add
aaa
sbb
mov
dec
cld
insb
stc
ss
fnsave
mov
iret
imulb
call
shrb
push
divl
stos
dec
jns
fmull
mov
out
scas
lock
aaa
xor
inc
mov
add
xor
mov
sbb
add
shr
add
cmp
pop
cld
mov
fcoml
lock
std
bnd
mov
fimull
xchg
sbb
lds
jmp
pop
mov
sub
je
loopne
lock
jo
test
jae
call
xor
add
or
sbb
xor
rcrb
xor
and
std
xlat
adc
fidivl
sub
cmpsb
mov
scas
aaa
sub
sarb
mov
jl
ret
fimuls
add
or
pop
imul
js
repz
repnz
mov
push
or
add
filds
pop
out
sub
mov
push
mov
push
andl
or
add
and
and
ror
jno
xchg
in
xor
add
inc
push
mov
out
add
or
leave
jno
pop
leave
adc
mov
dec
push
inc
and
sbb
jg
pop
xor
add
inc
add
cmp
jnp
inc
add
cs
ljmp
push
adc
das
sar
cwtl
sub
mov
add
or
add
mov
pop
inc
xor
add
popa
cmpsb
jo
cmp
inc
ljmp
push
adc
das
sar
dec
jns
ss
inc
jae
inc
pushf
sbb
sbb
sar
jmp
hlt
dec
dec
xor
push
aaa
xor
inc
xor
aaa
shrb
mov
jo
fisttpll
and
ss
sbb
jo
or
push
lods
or
cmp
sbb
or
fs
pop
add
test
shlb
mov
fsubr
out
add
in
pop
ss
or
scas
pop
xor
shr
mov
sarl
clc
ret
js
ljmp
cmp
out
add
adc
add
pop
mov
aad
fdivrl
jge
xor
test
or
jbe
inc
xor
sbb
xchg
cmp
ds
mov
hlt
lods
inc
inc
jmp
and
xor
sub
mov
in
cld
or
cmp
cs
xchg
orb
add
or
ret
add
orb
es
mov
lret
leave
nop
cmp
es
xchg
addb
xor
out
jns
leave
pusha
shll
mov
jle
lods
or
clts
push
call
sbb
out
mov
mov
sub
popf
sahf
or
sub
imul
add
cmpsl
cwtl
cld
pushl
add
cmp
and
add
push
jge
pop
aaa
inc
xor
add
xor
mov
jne
adc
add
mov
jmp
or
rorb
mov
incl
test
add
pop
sbb
mov
add
icebp
inc
lcall
inc
lcall
add
cmp
jg
or
js
andl
lds
out
or
xor
inc
sbb
repnz
movsb
roll
sbb
mov
adc
sti
ljmp
push
hlt
mov
xor
add
sbb
or
xor
inc
sub
insl
data16
xchg
jp
sbb
push
dec
mov
aas
mov
jecxz
stos
xor
add
jns
add
mov
out
mov
ljmp
dec
scas
adc
gs
jb
mov
and
inc
pusha
clc
and
pop
aas
mov
add
test
std
sub
pop
pop
bnd
rcrl
sub
and
add
mov
push
sahf
js
inc
nop
or
jg
mov
jg
jle
lahf
cld
mov
add
loope
ja
adc
or
sub
std
scas
js
push
stc
mov
stos
inc
xor
and
mov
add
mov
cld
sbbb
jge
sbb
push
add
icebp
mov
mov
int3
xchg
push
pslld
add
jne
std
jmp
notl
or
lcall
loope
cmp
ret
aaa
ret
pushf
add
xchg
jecxz
add
into
fwait
and
stos
jge
gs
xchg
into
mov
push
mov
or
adc
inc
xor
jno
fdiv
pop
cmp
sub
sti
jmp
clc
inc
addb
push
in
jo
push
stc
aaa
cli
fcoml
dec
push
mov
xchg
adcl
aaa
sbbl
and
mov
or
adc
pop
stos
fnstcw
aaa
fldt
js
pop
mov
sti
push
pop
mov
mov
inc
dec
mov
loope
lods
xor
pop
mov
add
imul
pop
mov
lret
sbb
sbb
mov
mov
lahf
insb
or
mov
mov
add
jp
lea
pop
inc
xor
jecxz
cmp
addr16
das
cmpsb
jmp
lahf
cmp
mov
daa
loopne
push
adc
inc
sub
fistpl
add
mov
xlat
xor
pop
xor
test
xchg
adc
rorl
movsl
xor
xor
out
pop
xchg
pusha
inc
pop
or
xor
addr16
sub
push
pop
mov
mov
je
jne
mov
jmp
bound
add
negb
inc
mov
stc
insb
add
inc
mov
shlb
sbb
adc
xor
rcll
roll
jmp
subl
clc
out
xlat
mov
mov
lds
inc
sarl
xor
rcrb
scas
mov
mov
jmp
push
sub
sbb
leave
ret
inc
mov
addl
mov
push
pop
hlt
inc
ljmp
mov
add
and
cmp
or
rcll
lret
addl
sbb
cmp
cmp
fnsave
lmsw
arpl
push
outsl
inc
lcall
jecxz
adc
stos
inc
cmp
push
mov
xchg
in
push
xor
jg
aaa
ret
add
pop
dec
sti
mov
inc
mov
pop
incl
and
lea
cmp
xchg
adc
xor
dec
clc
cwtl
imul
aaa
fisttps
push
repz
xor
ret
xor
lea
in
cmp
imull
or
ljmp
pop
add
fsub
inc
pop
aaa
or
repz
pop
hlt
ljmp
dec
inc
ljmp
dec
adc
or
xor
ljmp
sub
jp
out
mov
fiadds
shlb
mov
je
jae
daa
jmp
ja
jb
aaa
xor
mov
lock
mov
loopnew
add
xchg
and
aaa
dec
xor
mull
les
pop
movsb
xor
and
sbb
mov
push
or
add
clc
cmp
adc
mov
sbb
fsubl
insb
and
arpl
lret
hlt
das
jne
test
add
push
xor
xchg
mov
loop
mov
sub
mov
sub
jb
adcb
dec
loope
push
xchg
cmpb
push
sbb
out
xor
xchg
jmp
lea
push
mov
test
decl
cmpb
jne
loope
add
add
mov
lock
hlt
daa
iret
sub
ret
add
rolb
or
in
jmp
loop
rcll
mov
or
std
or
xchg
mov
or
sbb
and
test
sarb
cmp
dec
decl
orl
add
icebp
aaa
ret
out
aaa
xor
add
out
dec
push
mov
sar
mov
add
inc
pop
pop
jo
pop
aaa
ret
std
inc
or
adc
bound
adc
hlt
mov
data16
rcl
adc
jecxz
jle
push
gs
sub
add
push
mov
adc
jle
lcall
and
mov
dec
jmp
incl
add
ret
and
push
adc
or
incl
jo
pop
mov
xor
mov
cmpsl
push
lcall
lods
or
mov
in
xchg
mov
sub
add
js
pop
xchg
mov
dec
pop
idiv
xor
jb
jmp
mov
and
aas
inc
je
mov
out
aaa
jg
mov
push
fidivs
jo
movb
popf
ljmp
test
mov
and
test
pop
repz
sub
push
sbb
cld
xor
and
into
inc
add
push
bound
mov
and
bound
notb
pop
test
and
xorb
outsb
call
sbb
push
and
jecxz
cmpsl
std
push
inc
add
sbb
mov
xor
mov
push
push
push
push
add
lea
jne
mov
cmc
decl
in
test
decl
incl
ss
push
mov
cld
test
add
pop
mov
pop
add
xlat
ja
add
inc
jmp
push
jecxz
push
jecxz
add
and
jne
dec
icebp
and
dec
adc
clc
and
or
and
adc
xor
call
pop
xor
mov
and
adc
out
add
aaa
or
add
or
rorl
loop
add
aas
cli
int3
or
sbb
test
jg
push
arpl
mov
cmpsb
push
data16
or
shll
push
data16
ror
and
fisttpl
sbb
push
or
adc
cmp
inc
shll
inc
inc
jae
xorb
mov
or
mov
or
or
divb
jno
jne
ljmp
test
cmp
pushf
mov
add
add
pop
push
pop
jle
int
stos
sub
xor
jno
fsubrl
pop
enter
fs
fwait
push
loope
stos
shrb
ja
aad
mov
jno
sub
sub
mov
add
cmp
inc
gs
bound
dec
jbe
push
mov
xor
and
dec
sbb
jp
xchg
sub
sbb
mov
mov
rorl
jle
out
mov
pop
jnp
add
mov
aas
stos
adc
popa
enter
aas
test
lahf
je
jne
add
mov
cmp
ljmp
addl
mov
sub
pop
aad
pop
add
cs
ljmp
adc
stos
inc
call
fsubrp
mov
call
jne
fidivrs
jp
cli
or
inc
cmp
adc
xchg
cmp
add
xchg
mov
inc
icebp
fdivp
jmp
mov
pop
jmp
cmp
mov
test
dec
cmp
mov
xor
push
iret
xor
fimuls
inc
clc
aaa
lret
push
inc
mov
orps
js
inc
cmc
stc
out
decl
sbb
lock
ret
dec
addr16
push
mov
and
add
loope
jb
jecxz
add
and
hlt
cltd
std
adc
fistpl
popa
test
iret
add
aaa
or
inc
or
xlat
mov
mov
jle
repz
nop
orb
repz
mov
ret
xor
jge
cmp
sub
movsb
push
add
or
sarb
jns
inc
jae
sbb
mov
push
add
icebp
mov
add
pusha
out
pushf
mov
enter
cld
jle
sub
mov
mov
rcrb
pop
ss
xchg
sbb
xor
pop
inc
scas
sub
fsubr
jg
or
xor
mov
sbb
dec
add
notl
mov
and
mov
sbbb
fnstsw
lods
sbb
js
xor
add
xchg
inc
ljmp
jle
add
adc
cld
cwtl
inc
inc
jmp
stc
sub
subl
xchg
sub
cmpsb
lock
xor
mov
lods
pop
mov
js
add
add
test
xor
add
push
push
xchg
xor
push
add
idiv
xchg
jbe
inc
sahf
xchg
hlt
mov
mov
add
jp
inc
mov
or
idivb
fisttps
dec
cld
jle
ss
incl
cmovo
inc
hlt
jne
jo
add
fldcw
and
cld
test
add
lea
dec
incl
mov
inc
push
mov
jne
lahf
pop
hlt
push
inc
mov
or
adc
in
mov
mov
shr
scas
dec
imul
or
fwait
out
jae
cmpsb
adc
inc
lret
add
clc
dec
popa
xchg
ret
fstpt
aam
movntps
push
add
push
cmp
sub
aas
aaa
nop
inc
jae
rep
repz
ljmp
mov
idiv
inc
in
inc
lret
push
inc
dec
ljmpw
js
ja
dec
je
nop
rcl
call
xor
lods
sbb
dec
inc
clc
mov
enter
inc
or
inc
sub
sahf
jb
add
dec
clc
cli
ret
cwtl
sbbl
dec
ja
fsubs
mov
cmp
flds
ljmp
sti
sbb
sahf
ds
and
clc
ret
inc
lods
lods
pop
fnstcw
cmp
xor
adc
rorl
nop
jne
sub
stos
cli
jp
idivb
xchg
lods
jecxz
xor
xor
test
add
jb
add
mov
aam
inc
cmc
pop
ds
ss
out
movl
sbb
cld
pop
add
mov
jb
cli
xor
and
inc
xor
jb
add
push
xor
in
cmpsl
iret
mov
je
repnz
jmp
xchg
fildl
mov
xor
stos
add
mov
insl
jmp
xor
sbb
ret
aas
add
xor
push
ret
xor
fwait
hlt
subl
mov
fiadds
je
push
stc
mov
roll
cwtl
dec
xor
and
xor
xor
ret
xor
roll
mov
add
mov
jge
adc
popf
xor
add
ret
add
xchg
mov
fsubl
cld
mov
in
cmp
mov
cmp
aas
fistpll
cmp
fdivp
aas
fistpll
sbb
mov
int3
pop
adc
inc
push
mov
imul
cmpsb
repz
dec
add
incb
repnz
aaa
nop
inc
je
mov
andl
ret
testl
js
dec
je
mov
adc
stc
sar
mov
fdivrs
add
in
jmp
and
mov
add
pop
lock
je
mov
add
or
in
daa
add
lahf
lock
movsb
adc
dec
mov
ds
stc
cs
inc
jne
and
movsb
add
in
daa
add
jle
aaa
mov
lods
mov
add
cwtl
test
jge
dec
test
jbe
inc
pop
jo
add
xadd
ret
lods
and
incl
dec
sti
pop
stos
cmp
pusha
sbb
test
pop
repz
repnz
add
sub
push
sub
jmp
insl
adc
in
jp
pop
push
and
int
mov
imul
rorl
cmpsb
push
and
xchg
insl
adc
std
movsb
cli
inc
int3
xchg
cmc
ja
sub
mov
inc
dec
mov
inc
jmp
push
out
mov
pop
or
jmp
aam
mov
xor
ljmp
add
aaa
add
inc
in
cmpsb
jecxz
add
shr
mov
fdivs
in
mov
shr
test
clc
cld
xorb
sbbb
cld
jae
mov
clc
iret
in
call
and
add
inc
leave
jne
dec
or
push
pop
popw
xor
mov
jp
pushf
pop
ss
xchg
push
sbb
xchg
xlat
jne
fs
or
jecxz
call
aaa
mov
xor
push
lock
movsl
notl
pop
inc
sbb
inc
gs
adc
pop
test
xchg
xchg
mov
jmp
pop
stc
mov
and
shlb
cli
xchg
mull
cli
xor
pop
mov
add
data16
das
add
adc
pop
xor
out
std
mov
out
loop
repz
jecxz
push
inc
das
adc
adc
dec
push
xor
add
cmp
inc
xor
loope
cmp
sub
mov
mov
cmc
inc
sbb
mov
das
mov
shrb
mov
pop
inc
pop
mov
and
cmp
cmp
roll
cmp
mov
jae
in
scas
aas
sbb
and
or
sarb
cmp
js
popa
cld
mov
aas
ljmp
xchg
add
das
xor
mov
dec
adc
jb
outsl
mov
add
xor
push
lahf
fnstcw
or
mov
std
jmp
add
xor
or
jle
std
jmp
sbb
xor
push
es
adc
push
jmp
call
mov
cld
jle
push
jbe
xor
mov
cmp
js
or
je
mov
ja
leave
add
add
dec
or
test
mov
in
data16
xor
add
dec
push
les
roll
and
test
sbb
decl
xchg
stc
adc
sub
or
into
adc
mov
fcomps
xchg
jno
add
adc
push
cmp
or
add
dec
jns
sbb
adc
insb
sahf
xor
imul
incl
add
dec
add
repz
loop
je
dec
lods
inc
mov
stc
mov
mov
into
lods
mov
lret
shrd
pop
cmp
jmp
sub
in
ljmp
in
gs
or
xor
jae
push
sbb
mov
jae
outsl
mov
inc
aam
fcmovnu
sub
add
dec
or
aam
add
fsubrp
push
mov
sbb
pop
in
xor
dec
hlt
push
out
loope
pop
cmp
cld
ret
push
pop
repnz
mov
ljmp
ss
push
mov
mov
add
lcall
aaa
mov
cli
sub
inc
jmp
or
jmp
or
push
mov
aas
or
mov
aaa
xor
or
outsl
push
mov
insl
test
aaa
outsl
xor
outsl
cmp
add
roll
lcall
xor
add
in
add
lods
ja
push
inc
imul
ret
xor
xchg
sub
xor
sub
inc
push
mov
xor
xor
das
je
xchg
mov
push
sbb
cmp
sbb
inc
jmp
insl
jbe
pop
je
hlt
or
jmp
pop
iret
inc
jmp
jne
add
push
in
pop
xor
add
in
sti
adc
xlat
adc
mov
mov
dec
lea
aad
mov
jmp
lea
out
dec
pop
jbe
test
pop
shll
jge
xor
xor
cld
in
call
cmp
push
mov
add
push
ss
sbb
and
inc
into
in
sti
adc
aaa
in
call
inc
fildl
fistpl
incl
add
jns
hlt
sbb
jne
sbb
sbb
push
jp
sub
hlt
sbb
push
pusha
out
adc
sbb
movsbl
mov
fdivr
fstps
jnp
xor
add
enter
aaa
aad
rcrl
mov
mov
mull
mov
mov
sbb
inc
loopne
cmp
inc
fwait
adc
sahf
cmp
add
inc
in
inc
shlb
mov
gs
mov
or
sbb
ljmp
xor
pushf
sbb
addb
xor
xor
mov
lods
add
jns
jg
test
mov
mov
jns
dec
lds
mov
popf
ss
xor
xor
jmp
inc
add
inc
sbb
pop
divb
mov
adc
imul
or
jmp
cli
pop
and
xor
adc
jmp
hlt
dec
inc
lds
xchg
test
hlt
mov
jl
fstpl
jmp
loop
jbe
mov
or
adc
jbe
icebp
xor
jmp
add
mov
or
push
jnp
mov
xor
loope
or
leave
xor
jnp
mov
xor
std
jns
add
xor
call
add
sbb
packssdw
jmp
outsl
add
into
xor
jmp
add
and
roll
inc
inc
or
pop
movsl
xor
rcrb
xor
repz
in
xchg
add
fstl
push
test
fs
push
and
out
mov
xor
or
je
mov
mov
push
xor
mov
adc
add
mov
sti
nop
out
add
test
or
aaa
sbb
int3
sti
xchg
adc
daa
cwtl
inc
je
push
adc
inc
pop
add
inc
mov
jmp
lret
mov
orb
mov
mov
aaa
int
inc
fdivr
pushl
add
mov
adc
pop
lods
pop
fcmove
je
mov
mov
in
add
sub
das
ds
nop
pop
jae
nop
adc
and
sub
cmp
mov
add
int3
push
adc
sub
outsl
into
xchg
mov
cmp
xchg
adc
dec
add
xchg
nop
xor
add
mov
aaa
cmpl
mov
btc
push
test
pop
xor
xor
inc
paddusb
mov
out
add
sub
mov
add
push
xor
or
add
pop
cld
cltd
sub
inc
in
repnz
jb
fs
ds
mov
xor
jmp
mov
mov
jne
shlb
std
popa
mov
mov
inc
xchg
jbe
mov
push
or
add
mov
cmp
fsubp
loop
xor
add
pop
stc
push
xor
or
jno
jnp
lods
cmp
ret
mov
scas
dec
push
stos
mov
add
add
test
out
stc
dec
jno
incl
dec
daa
lock
xor
mov
adc
xor
and
fiadds
dec
and
les
xor
testl
int3
das
add
pop
xchg
add
mov
aad
pop
aaa
push
lea
out
stc
je
ret
inc
stc
mov
fdivrl
pop
aaa
jae
aam
or
jmp
sti
inc
dec
scas
adc
aaa
push
inc
add
int3
lret
or
jbe
cltd
dec
mov
incl
int3
clc
mov
push
mov
lret
and
test
or
xchg
addl
clc
or
mov
adc
loope
cmp
xor
mov
lea
ja
mov
cmp
jmp
xchg
xchg
and
add
xor
faddl
je
sbb
rcll
popf
cs
cmp
jmp
test
jo
addr16
cmp
and
jmp
lret
xor
jg
add
add
leave
add
pop
dec
sub
add
lods
xchg
test
jmp
pop
mov
xor
addb
roll
mov
leave
es
dec
jmp
push
sub
pusha
or
ss
ss
add
jb
loop
add
lret
mov
or
lret
mov
int
jae
out
mov
sti
and
stc
cmp
stos
testl
cld
sbb
adc
subb
out
or
mov
adc
test
lods
outsl
mull
cld
xchg
jg
rorl
testb
add
fs
movsb
pop
mov
jbe
mov
dec
inc
hlt
movb
leave
jnp
inc
cmp
cmp
jg
inc
inc
sti
pop
xchg
cmc
lock
sub
jb
add
lods
add
arpl
add
ljmp
xor
inc
test
push
icebp
jne
and
push
sub
and
in
popa
add
lea
add
mov
or
inc
vcmpss
add
pop
xor
je
xor
adc
aaa
mov
mov
test
jmp
cltd
out
enter
dec
sub
mov
aaa
or
add
aaa
or
sahf
cmp
jp
mov
xchg
cmp
mov
add
ds
or
std
or
std
cmp
std
lods
loopne
std
jb
lea
loope
ss
adc
cli
sbb
fcmove
jne
add
in
jae
xor
sub
repnz
inc
mov
incb
and
mov
mov
test
push
aaa
and
wbinvd
mov
out
int
add
incb
je
icebp
gs
inc
cmc
test
pop
clc
outsl
mov
fs
push
sub
icebp
rcrb
std
mov
pusha
mov
sub
mov
int
test
xchg
xor
std
sbb
out
xorl
or
lods
sub
cld
xorb
shr
stos
shll
adc
push
or
mov
add
imull
or
orl
ljmp
hlt
sbb
incl
xor
inc
jmp
add
push
add
add
popa
add
mov
add
cld
insb
jnp
or
push
adc
lcall
test
jmp
pop
pop
stos
mov
xchg
add
xchg
dec
je
mov
add
das
rorb
in
call
inc
insb
or
cmp
mov
pop
cld
pop
inc
out
lea
push
movsl
jbe
cwtl
and
jae
testb
add
aaa
xor
xchg
ret
es
sbbb
je
mov
mov
inc
out
add
fs
add
xor
jp
call
int
insb
or
xchg
inc
incb
adc
shrb
js
add
int
mov
xchg
das
lods
push
inc
push
mov
aam
mov
push
rorl
sbb
aaa
or
das
jae
xchg
and
xchg
mov
das
mov
mov
lods
shl
mov
mov
add
mov
adc
out
or
add
add
or
jp
mov
div
mov
mov
push
xor
inc
and
cld
xchg
inc
push
dec
cmc
xor
add
sub
sahf
cmp
mov
xor
clc
ret
pop
scas
sub
mov
mov
out
xor
pushl
inc
inc
mov
ljmp
xor
mov
subl
xor
sub
clc
cli
aad
inc
je
sbb
addb
aas
cmpsb
dec
jne
fistl
push
sub
hlt
push
or
xor
jne
add
mov
add
fmull
out
inc
jmp
je
mov
jmp
push
and
std
push
xor
daa
inc
mov
hlt
pushf
and
repnz
push
push
add
mov
xor
mov
cld
loopne
inc
jmp
mov
xchg
enter
shll
sbb
cli
cld
fs
xor
cmp
cld
fisubs
push
sarb
arpl
add
or
repz
xor
test
add
mov
and
adc
sub
mov
imul
pop
xor
ljmp
or
xchg
inc
aas
test
push
cld
je
xor
je
xor
decl
and
inc
push
mov
or
outsb
pop
ret
mov
enter
push
sbb
sarb
ss
dec
ljmp
or
sbb
push
push
xor
xor
aaa
pop
add
xlat
push
fs
jnp
adc
out
lods
add
mov
adc
je
inc
lds
add
cld
jno
mov
add
cmp
push
push
test
pop
sub
add
in
inc
add
push
testl
ljmp
in
movsb
loop
mov
dec
rclb
add
cltd
in
add
adc
ja
add
cmp
inc
sarl
fimull
cmp
into
add
xor
aad
mov
add
xor
in
mov
sub
mov
stos
sub
or
fwait
mov
test
mov
cli
subl
pushl
popa
mov
negl
mov
mov
aaa
xor
mov
add
pop
rolb
js
lret
sbb
push
add
test
out
push
mov
test
xor
cld
leave
cs
mov
ret
roll
idiv
cmp
add
jnp
pop
mov
sub
cmp
or
jmp
pop
mov
call
sarb
stc
pop
aas
inc
rcll
divb
add
stc
popa
pop
sbb
sti
jle
mov
ret
add
and
imul
sub
addr16
jp
mov
or
push
hlt
cld
push
sub
xchg
ds
jbe
add
jmp
pushl
dec
jnp
call
scas
cs
pop
xchg
add
jne
cmpl
sahf
fstl
pop
inc
cld
add
jnp
add
dec
sti
mov
jbe
hlt
outsl
jae
or
xor
jmp
lea
out
cli
jmp
ret
or
lcall
add
jne
jnp
hlt
push
shrl
sub
sti
aaa
mov
add
mov
add
cmpsb
test
mov
cmc
flds
mov
divb
push
lods
mov
jmp
rorw
data16
lods
push
pop
xor
push
test
out
aam
insb
push
shl
arpl
add
push
fsubs
je
bound
fs
or
xor
mov
jne
ljmp
add
lods
rclb
adc
stc
std
jp
and
xor
lods
sub
jae
mov
jae
lcall
repz
rorl
push
ja
fldt
mov
shr
xor
test
cwtl
xchg
mov
testb
xor
jge
inc
pop
mov
push
inc
out
inc
mov
mov
lods
jl
inc
push
cmp
inc
mov
aas
popa
jg
icebp
dec
sub
mov
sub
repnz
repz
dec
xor
jmp
pop
repnz
in
xor
add
out
cld
push
std
cld
mov
or
mov
or
pop
test
pop
cmc
mov
rcl
xor
xor
jo
jb
mov
sbb
sbb
jmp
repnz
insl
hlt
fs
jb
mov
mov
jae
fdivr
inc
icebp
jbe
jecxz
mov
mov
popw
repnz
ja
out
cmp
add
xor
or
pop
lods
adc
dec
cld
pop
pop
push
push
pop
ret
push
mov
mov
cld
jne
imul
sti
xor
dec
mov
rorb
cld
jne
sbb
loope
or
pop
lock
loope
sti
mov
jbe
mov
cld
leave
ret
xchg
imul
add
lahf
adc
adc
mov
inc
mov
aaa
push
cmp
adc
notl
lods
clc
add
jecxz
pop
sbb
hlt
or
and
cmp
bound
add
insl
in
dec
sbb
lods
or
sub
add
mov
mov
fwait
hlt
incl
bound
lods
pop
stc
push
add
jae
pop
inc
add
sti
cli
or
imull
dec
int
icebp
loopne
lea
or
clc
out
arpl
mov
push
add
loop
jg
inc
and
jp
inc
xor
popa
shrl
aaa
xchg
fcoms
adc
jmp
cmp
loope
jne
in
jp
jbe
enter
cli
jmp
xor
jg
out
test
ret
scas
cmp
out
cltd
out
pop
mov
mov
repnz
jmp
sysexit
int
addr16
mov
jnp
adc
add
adc
mov
push
xchg
fstl
cmp
push
push
out
cld
jb
mov
fdivrs
lea
mov
cli
mov
add
xor
rep
call
mov
mov
xor
xor
adc
cld
bound
push
add
shrl
cmp
push
stos
jmp
jae
cld
sahf
inc
out
mov
aaa
adc
pusha
test
dec
sbb
jo
inc
add
sub
dec
dec
sahf
or
mov
cld
lcall
xor
popf
sar
mov
push
pop
sbb
and
in
repz
or
shr
jg
fimuls
addl
lock
add
xor
fisubrs
mov
adc
xchg
or
jns
mov
adc
adc
mov
add
aaa
fistl
xor
fildl
mov
into
pop
mov
push
into
sbb
popa
push
ljmp
mov
jae
testl
sub
mov
test
call
outsb
hlt
mov
fiadds
aas
push
rolb
mov
in
inc
das
iretw
or
aam
enter
mov
or
xorb
and
addr16
sub
and
shlb
mov
andl
in
and
add
ret
pop
and
ljmp
hlt
cmp
mov
sbb
inc
test
xchg
sub
push
xchg
and
gs
loop
add
aaa
xor
mov
pop
jecxz
loope
testl
mov
rcll
mov
loopne
and
add
aam
sub
adc
outsl
mov
or
adc
stc
xchg
rcrl
lret
ljmp
push
ljmp
xor
rep
cmp
pop
or
loopne
ret
stos
xor
push
mov
cmp
mov
inc
fldl
cld
jmp
enter
add
and
ljmp
push
shrl
xor
add
mov
addl
lods
xchg
or
or
sti
int3
cmp
popa
mov
mov
mov
add
icebp
or
lods
dec
call
xchg
sub
xchg
add
xor
jne
inc
ret
mov
push
sbb
test
lret
xlat
push
inc
in
fmuls
pop
sbb
add
into
mov
je
mov
test
aaa
add
cwtl
rclb
xchg
lcall
sbb
adc
and
fildl
stos
sbb
mov
and
idivl
aaa
pop
dec
or
add
jg
test
add
adcl
add
mov
or
cmpb
add
call
xchg
mov
cmc
in
push
mov
pop
xor
lods
enter
xor
int3
inc
xorl
cmp
add
hlt
cmp
clc
mov
cmp
mov
pop
loop
push
add
imul
insl
cmp
inc
add
xor
adc
popa
ret
in
mov
jno
inc
mov
popa
ret
in
mov
addr16
test
push
test
ret
lock
addr16
sub
mov
pop
and
sub
fidivl
les
jmp
cmp
pop
add
xchg
in
pop
fnstenv
cld
cmp
faddl
ljmp
cs
and
cli
sahf
dec
xor
scas
mov
xor
fdiv
subl
mov
loopne
aaa
lea
jmp
fs
add
sbb
sarl
sub
cli
je
pop
ret
pop
sub
xor
bound
test
add
mov
xor
push
dec
xor
xor
fidivs
xor
test
xor
add
xor
sbb
mov
cld
lcall
jne
leave
and
add
push
push
sub
mov
cld
xlat
mov
xor
add
insl
or
add
push
dec
jbe
test
and
into
xor
pop
gs
mov
ss
fnstenv
xchg
xchg
mov
xchg
or
loopne
das
push
mov
pop
push
jae
mov
int3
pop
mov
add
scas
stc
pop
scas
jbe
test
cmp
inc
sarb
decb
fs
cmp
mov
scas
xchg
pop
add
dec
fucomip
dec
or
dec
sbb
ret
push
xchg
add
adc
nop
hlt
or
ficomps
or
adc
xor
ret
call
subb
mov
test
add
hlt
rorl
pop
lock
mov
into
test
sbb
xchg
add
cmp
sub
js
adc
mov
sbbb
adc
ljmp
sub
loope
jnp
mov
sbb
jecxz
fimuls
addr16
or
jno
jge
loop
call
or
jmp
bound
cmpb
xor
shrl
add
loop
push
hlt
ret
sub
ss
sti
mov
test
in
rcrb
add
mov
insl
xor
sbb
imul
mov
loop
cmp
inc
lds
andb
loop
fbstp
stos
inc
add
flds
xor
loop
add
jo
pop
and
sub
xor
and
add
add
cvtps2pd
add
fdivrp
pop
or
sti
je
int
je
add
push
jbe
add
aam
mov
sub
push
je
call
fdivl
sti
popa
popa
adc
dec
xor
lea
sti
je
add
or
add
cmpl
adc
add
pop
mov
testb
dec
cmp
adc
lods
cmc
dec
inc
mov
push
divl
les
dec
fs
mov
lret
negl
data16
cltd
rorb
mov
add
aaa
mov
add
mov
clc
inc
xchg
insb
mov
js
inc
push
jecxz
sub
fistpll
add
test
mov
sub
leave
and
shll
xor
rclb
aaa
xor
cld
lock
enter
jl
ficoms
inc
xchg
shrb
pop
loope
scas
fists
pop
pop
jl
loop
mov
imulb
mov
push
sbb
mov
add
mov
dec
out
dec
js
cld
xor
push
adc
ljmp
int3
sbb
fbld
pop
xor
cmp
into
negl
ja
cmp
jmp
data16
and
jecxz
push
sub
add
out
inc
sub
jne
jecxz
repnz
pop
mov
cmpb
add
mov
stc
bound
imul
cmpsb
sub
or
sti
testb
mov
testb
hlt
mov
in
sub
dec
mov
hlt
test
push
adc
add
testb
cmpsb
std
mov
mov
rcl
cld
movsbl
rolb
fisubrs
xchg
or
add
xor
inc
stos
stc
mov
dec
jg
iret
cmp
mov
cmp
push
into
dec
adc
adcb
add
imul
push
fidivrs
pop
add
pop
xor
lcall
adc
popa
aaa
lret
add
add
stos
sub
adc
add
test
adc
pushf
out
xchg
incl
dec
inc
jae
fiaddl
lock
and
jmp
mov
dec
fists
inc
jae
ss
fndisi(8087
mov
mov
inc
cmpsl
mov
adc
xchg
dec
cmpsl
mov
aam
jmp
add
xorb
fsubrl
sbb
iret
xor
add
xor
mov
xchg
adc
fcoml
or
and
clc
xor
shll
xor
movsb
leave
and
and
jnp
pop
sbb
mov
adc
and
mov
xchg
sub
fistpl
sbb
jns
pop
or
test
add
add
add
jecxz
sti
ficoml
in
aaa
mov
sbb
ljmp
outsl
cld
pop
inc
or
xchg
jp
mov
xor
mov
icebp
dec
add
cmp
andl
testb
leave
subl
xor
fadds
mov
stc
insb
add
inc
addr16
stc
hlt
ficoml
xor
adc
hlt
fiaddl
test
adc
push
pusha
in
into
movsl
add
cmpb
add
mov
push
mov
sti
decl
mov
sti
decl
adc
add
ss
push
dec
pop
mov
add
xchg
inc
sti
mov
sub
add
pop
les
dec
pop
mov
inc
xchg
push
jbe
arpl
into
mov
mov
mov
mov
sub
jbe
pop
aas
add
mov
add
fmull
dec
adc
xor
push
aaa
add
out
adc
test
adc
pop
repz
pop
add
aaa
lret
mov
in
mov
test
aas
sbb
push
loope
xchg
and
ret
test
lds
sbb
inc
jae
xorl
mov
in
push
mov
and
sub
jmp
or
sahf
mov
out
insl
add
mov
lret
ja
call
add
jmp
sbb
xchg
ljmp
into
sbb
sbb
jmp
aaa
movsb
jmp
add
movsb
jmp
inc
cmc
xor
movsb
das
xchg
mov
cmc
mov
xchg
cs
shrb
aaa
xor
inc
bnd
pop
xor
popa
stos
add
or
inc
jne
ret
xor
xor
add
addr16
jmp
mov
inc
jb
jo
mov
jge
dec
add
xor
addr16
inc
inc
cmc
je
pop
stos
mov
call
imul
ljmp
aam
xor
test
xor
mov
das
and
pop
cli
xor
je
inc
insl
sbb
jbe
jl
add
add
xor
add
xor
mov
cmp
cld
inc
xchg
into
add
cmp
xlat
cld
push
sub
jmp
in
out
push
add
lahf
add
sahf
mov
mov
jmp
sti
incl
mov
fs
xor
add
jo
pop
repnz
jmp
clc
push
sub
add
ss
add
shrb
sub
daa
dec
incl
outsb
adc
mov
sti
dec
mov
cld
ss
repnz
jns
mov
jmp
mov
push
leave
sbb
add
adc
in
aaa
mov
jns
inc
cmc
sar
mov
clc
mov
push
mov
fs
inc
or
sbb
addb
add
ret
mov
xchg
adc
cmp
out
push
add
aaa
mov
add
lret
jnp
jmp
sbb
xor
repnz
jne
mov
lret
add
push
in
add
aaa
dec
mov
out
jae
lods
fadds
cmc
jle
int3
adc
xchg
aam
sbb
xor
add
add
subl
xor
mov
ficomps
or
jecxz
mov
fistpll
pushf
mov
imul
fldt
sub
outsl
mov
xlat
data16
lods
inc
loop
ss
mov
out
lods
cli
bound
mov
sub
les
sub
sub
lods
fs
xor
cmp
add
inc
sub
test
mov
jbe
dec
js
jo
cli
inc
loop
fistpll
bound
inc
mov
push
aaa
loopne
dec
daa
and
cli
sub
pop
sbb
loop
cli
push
repz
jecxz
mov
mov
fnsave
sub
and
ret
loope
leave
outsl
outsb
mov
or
add
jbe
and
andl
mov
stc
inc
xchg
cld
dec
mov
jbe
inc
aas
jne
xchg
call
and
push
call
movsb
ficoms
hlt
lock
fildl
dec
call
daa
hlt
hlt
test
and
cmp
adcb
inc
mov
jmp
jmp
std
jmp
mov
add
xchg
add
repnz
mov
test
sub
lea
mov
idiv
addr16
add
into
xor
sbb
inc
call
mov
sar
fmuls
mov
mov
dec
and
je
push
xor
js
or
mov
add
or
ret
jge
add
and
xor
or
sub
imul
mov
push
mov
pop
lcall
stos
and
dec
ret
sti
sub
ja
mov
icebp
push
decb
xor
adc
mov
push
icebp
sarb
add
add
or
mov
xchg
jbe
mov
fwait
add
rorb
aaa
mov
jle
or
push
sbb
shlb
aam
jmp
clc
xchg
sbb
sbb
pop
xchg
push
fcmovnu
pop
popa
shlb
jecxz
gs
pop
fnclex
pop
dec
shlb
inc
shr
sbb
mov
inc
pop
sub
cmpsl
subb
xor
add
fildl
jmp
add
and
cld
mov
lret
cld
fmull
jmp
mov
or
divb
mov
jmp
icebp
mov
pop
jne
mov
in
subb
or
pop
pop
mov
rcl
jge
jne
out
jbe
add
or
pop
push
cmp
pop
xor
dec
pushl
mov
jmp
jg
add
sub
add
add
aas
mov
sub
ss
mov
jne
dec
ret
call
push
mov
mov
cmp
je
dec
inc
clc
push
mov
shlb
add
cmp
sti
inc
add
mov
jge
cmp
rorl
add
pop
xor
add
add
mov
sti
and
roll
sti
cmp
inc
or
xchg
mov
add
fildl
add
dec
jp
or
les
inc
pop
pop
decl
fdivrl
das
std
aaa
sub
push
aas
aaa
inc
mov
lods
add
lret
push
add
mov
or
lods
jae
cli
mov
jl
aaa
fildl
cmp
add
xlat
add
sbb
add
and
loop
fstpt
mov
and
sar
fwait
mov
clc
pop
add
sbb
push
testb
pop
sub
repz
js
cmp
mov
aaa
mov
lods
jbe
js
cmp
mov
aaa
mov
pop
fsubrl
fdivrs
inc
add
push
addr16
xor
mov
lods
mov
lods
or
mov
add
int3
sti
jno
cli
and
lret
outsl
subl
inc
hlt
ret
and
cli
test
aaa
add
mov
mov
fistps
aaa
mov
add
xchg
test
movsl
adc
xor
inc
lds
add
sar
je
mov
xor
jb
cmp
add
repnz
jmp
lock
push
xor
mov
dec
and
gs
jmp
pop
and
xchg
cmp
addr16
add
add
cld
idivb
mov
jmp
xchg
into
cld
mov
and
add
push
mov
add
dec
adc
mov
adc
fprem
add
fbstp
lret
xchg
fwait
ss
jne
add
push
fimull
lea
adc
jne
ss
bswap
out
push
call
orl
call
divb
cld
dec
mov
add
out
mov
jmp
mov
adc
add
jae
and
add
ljmp
dec
mov
mov
mov
xchg
mov
push
data16
cmp
and
movaps
fnstsw
add
movaps
or
aas
add
mov
in
mov
pop
add
sbb
lds
add
neg
addl
add
test
jg
std
add
add
push
mov
push
call
gs
std
cwtl
xor
das
and
shl
pop
mov
xor
lea
xor
mov
call
pop
test
jecxz
in
ret
sub
adc
inc
and
outsb
ja
je
sbb
aaa
xor
ret
add
inc
mov
add
xor
inc
pop
gs
mov
inc
enter
add
xor
inc
mov
repz
cmp
loop
mov
mov
or
fiaddl
daa
add
or
pop
fidivs
aas
sbb
adc
je
or
testb
xor
aas
or
cmp
in
imul
sahf
add
jle
cld
and
inc
lods
fsubp
cmc
ret
in
inc
push
mov
pop
add
stc
cmc
or
cld
xor
or
cmp
jmp
frstor
movsb
cmp
push
cli
out
hlt
ss
loop
icebp
jns
bound
lods
jae
inc
xor
or
popa
xor
push
add
lea
iret
pop
xchg
mov
movb
add
inc
data16
repz
inc
xor
xchg
xor
add
ljmp
xor
ret
shrb
xor
xchg
repnz
pop
hlt
add
cmpl
jmp
decl
mov
pop
into
xor
mov
jl
push
or
adc
mov
add
add
jnp
add
mov
or
loopne
or
sub
adc
ljmp
add
pushl
pusha
cmp
mov
add
aaa
xchg
mov
hlt
mov
or
pop
sub
mov
mov
inc
lret
call
mov
add
je
dec
inc
clc
mov
clc
call
xchg
sub
pop
add
jno
mov
jmp
xor
or
push
cs
divb
sbb
pop
and
daa
cmp
adc
xor
ss
cmpsl
add
pop
adc
xor
inc
sub
ljmp
jl
or
cld
stos
ljmp
ljmp
xor
inc
push
das
inc
add
add
xor
mov
add
xor
and
mov
pop
aaa
xor
ret
bound
and
jmp
ds
xor
jmp
xor
add
and
jmp
sub
addr16
add
or
ds
testl
shrl
pop
add
xor
jmp
xor
xor
add
push
jge
je
bound
mov
cmpsb
cmpsl
daa
addr16
or
cld
xchg
sbb
icebp
xor
rcll
sub
jmp
pop
jle
aaa
call
push
shr
add
cld
add
mov
mov
or
add
push
and
cmp
add
data16
mov
mov
mov
inc
incl
add
mov
jl
inc
xor
add
inc
pop
mov
call
lret
divb
lahf
divb
add
aaa
mov
data16
into
xchg
mov
cmp
mov
into
shl
popa
mov
push
push
aaa
dec
ret
jge
mov
ja
std
mov
imul
jmp
add
xchg
pushl
inc
ret
test
add
pop
shlb
inc
std
aaa
inc
inc
std
fsubrs
push
mov
inc
or
int
orl
std
out
cmp
dec
sbb
std
cmp
je
xchg
insb
or
push
std
sti
and
cli
std
decb
push
lods
scas
mov
dec
std
std
imul
rolb
arpl
test
outsl
cmp
xchg
clc
inc
and
outsl
xor
mov
adc
and
outsl
aas
das
pop
daa
test
mov
in
push
mov
shll
lret
imul
push
int
push
add
dec
out
jmp
ljmpw
ds
fs
or
dec
out
inc
jl
inc
add
aaa
mov
outsl
xor
sub
lret
or
lds
negb
das
mov
ja
inc
sbb
adc
data16
hlt
in
and
jmp
lahf
int3
movsb
ds
repz
bound
sbb
push
mov
jne
ret
ja
stc
mov
add
insb
jne
in
inc
daa
cmpl
call
shlb
add
push
into
fnstenv
jmp
gs
pop
mov
cmp
dec
test
inc
hlt
mov
sahf
xor
dec
loope
rorb
add
add
imul
pop
movl
decl
xor
rclb
enter
push
and
xor
shrb
push
add
jno
add
jb
add
push
adc
jae
test
mov
jmp
test
dec
xor
pop
xor
test
movsl
stc
std
or
mov
mov
test
std
call
filds
andb
shlb
testb
icebp
xchg
add
xchg
pop
add
xor
mov
mov
hlt
std
jmp
xchg
jae
mov
insb
or
idiv
push
sarb
imul
std
enter
neg
inc
add
sbb
push
mov
sub
aas
and
and
aas
add
mov
aad
inc
je
mov
inc
dec
mov
sbb
xchg
or
add
xor
or
ljmp
aas
ss
aas
adc
mov
pop
aas
mov
lret
mov
inc
mov
jle
xor
add
das
pop
inc
aaa
mov
ljmp
hlt
repz
add
test
inc
jmp
xor
pushf
sbb
xor
add
testl
pop
je
outsb
adc
ret
stos
xor
xor
ja
cld
aas
pop
je
test
jp
add
mov
jb
pop
stc
sub
divl
jne
dec
stc
xor
divl
jne
cmp
add
xor
das
divl
repz
add
pop
mov
movaps
xchg
lds
mov
adc
sub
movb
adc
addr16
or
inc
push
mov
pop
int
or
jae
jne
xor
cltd
jae
decl
mov
inc
into
xor
sbb
dec
pop
cmovo
repnz
xor
adc
jno
test
add
xchg
mov
add
mov
std
xor
xor
mov
fstpt
add
add
push
xor
int
test
test
mov
sbb
add
inc
add
rorb
push
xchg
aaa
int
std
lock
jns
addl
xor
mov
mov
xor
add
aaa
pushf
fsubrs
xchg
add
push
cmc
call
mov
add
out
or
subb
push
aas
aaa
movsl
das
push
test
icebp
xor
inc
aaa
dec
push
ds
ljmp
mov
inc
aaa
dec
cmp
popa
xor
dec
add
xor
push
xor
icebp
and
stos
inc
aaa
mov
cmp
xor
fisubrs
imul
into
fs
rcrb
leave
push
mov
or
lods
std
mov
ljmp
mov
and
xor
inc
std
sub
lods
cltd
ljmp
loop
inc
arpl
add
xor
cmpsl
add
add
xor
jbe
lret
je
fs
lret
jmp
insl
hlt
aas
ja
cwtl
les
test
xor
insl
hlt
aas
adc
adc
andl
cmp
cmp
sub
lods
enter
xor
inc
push
idiv
dec
pop
mov
add
mov
leave
or
in
mov
test
xor
sub
stos
xor
lds
jle
rorl
jb
andb
jne
adc
ret
fildll
mov
xlat
mov
imul
pop
leave
fdivrl
jl
push
add
dec
mov
sub
popf
stc
std
test
fsub
push
fidivs
test
loop
push
mov
mov
sbb
imul
push
enter
pusha
jmp
test
add
shrb
pop
mov
push
ret
push
mov
mov
adc
ja
inc
js
fcomp
jb
in
xor
dec
lock
jns
add
push
mov
jge
aas
and
jbe
outsl
cmpb
je
or
pop
or
popf
push
push
enter
add
int
aaa
bound
pop
lods
pop
cmc
push
pop
pop
ds
jg
xor
mov
lds
les
shlb
std
ss
dec
lock
mov
std
aaa
jb
ljmp
mov
das
insb
mov
jns
mov
mov
sub
and
pop
pop
js
stos
adc
js
add
stos
clc
sub
mov
in
movsb
and
xor
repnz
stc
test
lar
add
repnz
call
ret
pop
jl
daa
add
pop
pop
in
push
hlt
gs
ja
cmpsl
add
inc
in
inc
and
add
pushf
mov
bnd
icebp
adc
dec
shl
mov
ljmp
imul
add
xchg
je
stos
xor
mov
mov
test
out
inc
jmp
xor
cld
in
js
inc
jmp
ja
jne
jo
cmc
lea
mov
xor
pop
cmpsb
ja
push
jb
mov
cmc
jne
push
sub
jb
bound
cld
insb
inc
and
adcb
inc
or
pop
fimull
or
add
or
je
cmp
imul
mov
call
out
pop
lea
pop
pop
or
mov
sbb
call
js
add
add
mov
add
push
mov
add
cmp
lcall
mov
lret
incb
jmp
in
add
pusha
lahf
incb
fidivs
add
fwait
inc
cld
push
aaa
repnz
push
ret
add
popf
jns
cmp
jns
cmp
mov
xor
add
aas
lret
jne
aaa
lahf
add
push
enter
lcall
cmp
into
add
add
popf
sub
xchg
inc
decl
mov
push
call
out
cmp
add
dec
std
add
insb
fstpl
ret
ss
fistl
pop
test
or
clc
dec
push
call
ret
add
mov
add
repnz
inc
mov
inc
aaa
pop
and
arpl
add
adc
add
mov
movl
fiaddl
add
je
pop
dec
test
add
inc
xchg
jp
cmp
add
pushf
mov
mov
cmp
add
push
jmp
add
mov
outsl
in
cmpsl
push
mov
mov
ud0
add
xor
int
mov
int3
fildll
and
pop
into
mov
fldl
pop
mov
cld
inc
mov
cld
aam
inc
inc
jmp
xor
fwait
in
add
xor
repz
mov
xor
cld
fsubrl
jmp
insb
sub
out
pop
mov
push
shl
scas
cld
mov
sbb
jmp
or
cld
rorl
push
mov
jge
es
cmp
add
inc
das
in
push
pop
and
jne
fwait
jo
pop
inc
std
adc
mov
and
add
je
push
cld
push
dec
and
push
pop
pushf
decb
outsb
xor
mov
mov
add
jne
das
js
dec
push
sbb
jmp
inc
push
jmp
scas
std
adc
xchg
cmc
sbb
into
and
cmp
call
pop
push
xor
mov
je
add
je
pop
inc
dec
and
pop
jb
jb
adc
and
jecxz
pop
push
jno
xor
jb
lahf
mov
pop
jae
lock
pop
lods
fadds
aaa
enter
push
jb
js
adc
ljmp
hlt
dec
fldl
mov
jmp
sbb
jl
lret
cmp
jae
jne
incb
add
jle
push
lea
jecxz
aas
jne
sti
or
ja
popa
xor
ret
xor
jnp
dec
xor
fs
outsl
push
shrb
rorb
sub
dec
ret
out
mov
lods
pop
mov
aad
mov
mov
add
mov
hlt
xor
sbb
jmp
cld
pop
decl
add
jbe
add
scas
jge
dec
daa
or
inc
sub
fildl
frstpm(287
jbe
pop
and
test
outsl
cmp
add
push
and
xor
adc
jo
jne
shll
or
pop
icebp
sbb
jns
pop
stos
aas
xor
and
ja
or
push
xchg
jae
aad
cmp
roll
outsb
scas
cld
sub
outsl
loopew
popa
mov
cld
or
inc
jmp
stos
hlt
and
repz
pusha
cmc
xor
test
xor
mov
mov
incb
cmpsl
cmp
sub
call
jmp
scas
dec
call
rcrl
sub
xchg
incb
fidivl
ret
test
hlt
add
fidivs
push
mov
xchg
call
mov
sbb
imul
call
test
sub
fldt
or
inc
outsb
sub
aad
push
mov
outsb
stc
add
add
inc
add
aaa
push
fucomp
cs
mov
adc
jae
add
jbe
std
add
mov
pop
repz
inc
popf
cmp
cmp
mov
adc
cmp
mov
or
dec
aaa
popf
jmp
or
lea
popf
test
or
add
in
jp
loopne
cmpsb
incl
sti
pusha
cmp
aas
aaa
sbb
lcall
shlb
xor
nop
mov
sub
add
jno
xchg
mov
vmovsldup
clc
js
sub
jae
add
scas
fwait
loop
add
add
mov
stos
sbb
pop
cld
jmp
loop
cmp
jmp
bnd
ljmp
stc
pop
xor
aas
or
push
xor
loop
xchg
fadds
add
stos
daa
in
add
incl
jne
add
mov
add
add
add
jmp
repz
push
cmp
fcoml
adc
cmp
xor
cmpsl
jbe
jecxz
sti
sahf
mov
jmp
xchg
jns
jle
push
cmpsl
jbe
shrl
icebp
je
add
lahf
jmp
insb
jge
sub
fisubrs
or
xor
ss
pushf
add
push
push
cmpsl
cld
arpl
in
inc
outsb
pop
pop
movsl
jle
or
bound
cmp
push
push
popa
sbb
call
or
cmp
call
xchg
pushl
add
rolb
xor
or
add
imul
xor
add
mov
test
sbb
fs
mov
mov
push
and
inc
xchg
jne
outsb
push
test
xor
add
ljmp
cmp
inc
and
lret
loope
scas
push
and
scas
push
and
xor
mov
add
stos
stos
call
xor
dec
cmp
jo
ret
paddw
pop
sub
sbb
aaa
popf
jg
sbb
inc
and
ljmp
sbb
xchg
inc
xchg
and
mov
or
lahf
inc
popa
and
jle
jb
xor
push
fidivrs
jg
cmp
js
add
add
cmpsl
xchg
daa
aas
cmpsl
fsubr
add
fs
jmp
jbe
xor
sbb
xor
cmpsb
daa
push
add
adc
mov
inc
push
repnz
xor
ret
test
mov
cli
stos
push
sbb
adc
iret
jmp
add
mov
push
mov
cmpsb
mov
and
fadds
mov
push
mov
mov
mov
xor
xchg
add
outsb
pop
mov
add
mov
or
mov
test
jb
mov
push
add
push
push
dec
pop
xor
xor
dec
outsb
pop
xor
call
jb
jae
jb
mov
or
add
inc
aaa
test
and
sub
push
mov
xchg
cli
aaa
test
xor
adc
add
cmpsl
xor
mov
xor
jmp
jnp
xor
add
cltd
and
pop
pop
in
addl
ja
mov
arpl
imul
adc
or
jae
cmovo
lds
in
clc
push
test
ss
add
dec
cmpb
jo
add
sbb
xchg
mov
mov
test
inc
xor
cmpsb
std
add
sbb
jne
xchg
and
jmp
decl
adc
test
ficoms
mov
in
push
in
out
std
sub
addl
add
ja
cmp
jne
add
ds
add
in
fnsave
pop
cmove
aaa
sbb
add
aaa
jae
or
pop
and
cwtl
pop
or
add
mov
push
cmc
xchg
lock
lea
add
jb
aaa
rolb
add
jae
aaa
push
push
pop
xor
adc
mov
adc
pop
clc
jmp
pop
sbb
inc
add
add
aam
add
fisubrl
sub
popf
xchg
out
mov
mov
lea
fisttpl
push
mov
jae
cs
testl
add
out
mov
ret
inc
inc
outsl
inc
sbb
dec
das
scas
add
add
aas
lea
mov
jge
shll
aaa
add
mov
aad
stc
or
cmc
das
push
fisubl
mov
push
cmp
xor
mov
xor
inc
int
push
mov
push
mov
add
dec
lahf
jae
out
sub
and
xor
test
ja
adc
add
push
xor
push
xchg
and
popa
add
push
js
dec
dec
cld
and
mov
push
adc
or
add
adc
xor
push
rolb
push
je
xchg
dec
incl
cmc
add
mov
cmp
cmp
ret
inc
repnz
cld
push
sbb
and
add
stc
lock
jmp
cmp
mov
or
sbbb
insl
or
push
test
lock
xor
xorl
jecxz
xor
leave
xchg
sub
inc
aaa
dec
xor
mov
add
or
push
push
test
push
leave
fsts
cmp
add
xchg
push
shlb
add
mov
movb
sbb
in
aas
mov
flds
aaa
lea
cmpb
std
and
out
aas
aaa
or
add
jp
into
aam
divl
push
mov
mov
jbe
ljmp
xor
fadds
lcall
jbe
pop
aam
div
dec
out
daa
std
mov
aaa
insl
les
add
aaa
mov
inc
aaa
stos
hlt
subb
imul
inc
stos
add
jb
mov
mov
mov
in
mov
ret
add
dec
xor
out
testl
pop
adc
cmc
loope
mulb
testb
mov
imul
cld
ljmp
cld
sbb
mov
sub
sub
mov
hlt
mov
sbb
jne
cld
hlt
cmp
cld
hlt
mov
test
bnd
out
lods
xor
cmp
sub
pop
dec
sub
cld
jmp
sub
add
jmp
xchg
out
popf
pop
inc
pop
jne
icebp
xor
mov
inc
stos
push
loope
ljmp
jne
pop
mov
je
jmp
adc
xor
jmp
loopne
cld
into
xor
add
add
mov
cmpsl
push
adc
cld
push
dec
or
dec
adc
cmp
out
cmp
jne
jge
ljmp
aaa
not
xlat
sahf
lods
add
ret
mov
lea
xchg
incl
add
out
or
cmp
jne
test
jmp
std
mov
mov
add
jb
loopne
ss
icebp
mov
fisttpl
in
mov
push
add
cmp
xchg
lahf
lock
push
xor
or
add
cmp
adc
gs
add
dec
popl
push
jl
add
pop
test
cmp
addl
call
xor
pushf
fistpl
fwait
pop
clc
scas
icebp
loope
cli
and
rolb
inc
aaa
mov
add
fisubl
fistpl
mov
ret
jle
pushl
jg
mov
inc
add
test
scas
add
cmp
or
xor
pop
xorl
call
fildl
and
jle
fwait
xchg
sti
clc
lcall
push
jo
aaa
xor
les
scas
jle
dec
mov
and
jmp
pop
dec
mov
test
jmp
jbe
sbbl
push
mov
lahf
in
mov
mov
or
addr16
bound
mov
xor
scas
jle
and
ret
dec
fisubs
mov
test
or
pop
add
jmp
inc
stos
inc
in
xor
xchg
cmp
add
sarb
sub
add
add
cmp
std
dec
xor
inc
fimull
gs
and
fs
sub
sub
out
fidivl
sarl
or
push
fs
sub
sti
adc
mov
add
pop
cmp
add
xor
mov
div
adc
jne
jmp
aas
rcrl
mov
pop
push
jbe
add
add
ret
adc
add
xchg
or
stos
movsl
sbb
imul
shl
cmp
mov
xchg
or
adcb
cmp
pop
sub
sub
mov
cmp
aas
cmp
pop
sar
mov
dec
jle
pushf
nop
cmpb
xchg
add
push
push
testb
mov
add
jge
pop
movsl
jle
sub
pop
add
movsl
aad
inc
xor
push
jae
lret
cmp
in
jl
dec
and
xor
jae
jl
mov
pop
xchg
pop
sarl
icebp
loope
sub
ret
xchg
ret
jnp
mov
pop
inc
xchg
sub
hlt
dec
xlat
ret
push
ds
add
mov
add
lods
std
iret
out
insb
ljmp
and
imul
pop
lods
iret
add
mov
iret
aaa
push
fstpt
daa
add
xchg
sub
mov
xor
jnp
cld
push
scas
je
loop
repz
jle
cmp
sub
ss
jmp
cld
lods
rcl
loop
pop
mov
add
stos
jbe
sbb
fdivs
lods
pushl
cmp
inc
scas
xor
std
cmp
lods
ret
sbb
imul
mov
sbb
jno
jbe
pop
xchg
lret
dec
subl
inc
es
jmp
push
mov
mov
pop
test
xor
add
add
add
int
jne
jae
lods
push
xor
out
add
add
bnd
add
xor
xchg
fidivs
add
cli
push
shll
wrmsr
mov
dec
jle
ret
jle
lock
aaa
mov
add
mov
inc
adc
testl
push
cmp
inc
adc
add
mov
jg
fimull
popf
int
repz
or
mov
or
imul
std
mov
sbb
sbb
inc
mov
xor
enter
and
mov
sbb
push
inc
or
mov
inc
or
ret
cmp
fadds
mov
incl
je
int3
jmp
lret
pop
jle
jo
push
xor
add
push
test
add
push
test
add
push
test
add
test
add
push
test
add
push
test
add
push
test
add
test
dec
in
aaa
out
xor
rorb
fs
pop
sub
add
xchg
insb
xor
in
mov
popa
inc
scas
mov
cmc
imul
mov
inc
jmp
scas
insb
clc
pop
insb
hlt
xchg
xchg
stos
inc
jmp
insl
daa
sbb
iret
push
loope
insb
and
call
xor
inc
adc
or
das
and
nop
push
add
add
add
pop
xacquire
xor
pop
xchg
jbe
outsl
mul
sbb
int3
jmp
push
aas
andb
xor
fs
cli
mov
xchg
rorl
cwtl
fdivs
stc
add
adc
test
aaa
add
sbb
add
je
push
push
xchg
add
push
or
rolb
jle
push
sbb
ss
int
jne
jg
lods
sub
add
sbb
orl
cli
mov
dec
mov
dec
push
incl
mov
shll
or
js,pt
and
mov
inc
adc
aaa
dec
lret
insl
inc
add
jb
sbb
and
push
adc
add
add
repnz
clc
pop
sbb
or
leave
std
pop
test
in
mov
je
aaa
fwait
xor
aam
xor
call
fs
je
sti
xor
std
ja
mov
mov
pop
xor
aas
aaa
push
inc
cmpsb
pop
xchg
jae
add
loopne
fwait
add
lea
shlb
jle
addr16
lock
mov
and
enter
ljmp
repz
add
sbb
mov
arpl
call
jae
jg
xor
add
lcall
jecxz
out
adc
stos
add
stc
add
jg
xor
cs
adc
xrelease
nop
fcmovnu
cmp
jmp
je
jg
xor
add
adc
pop
xor
push
sbb
jmp
jg
cld
sahf
imul
pusha
testb
insl
cmp
sbb
aaa
jmp
jbe
push
inc
mov
imul
clc
loop
ss
outsb
icebp
mov
add
xchg
xor
scas
iret
cmc
icebp
orl
cld
push
lods
insb
cmp
xchg
pop
add
jbe
push
lahf
gs
jbe
stc
and
je
xchg
or
mov
add
push
mov
mov
sbb
aad
repz
call
push
hlt
or
mov
stc
add
jecxz
ljmp
mov
sti
mov
or
sbb
cli
incl
inc
jmp
cmp
mov
testl
data16
adc
cmp
test
call
in
cmp
cmovo
or
push
ss
cmp
push
or
and
lret
pushl
jne
ljmp
jo
inc
aaa
fwait
add
negl
pop
out
flds
add
pushf
dec
adc
pushl
push
mov
or
sbb
add
add
pop
pop
enter
mov
js
sbb
add
out
add
enter
lods
cmc
mov
xorb
call
enter
inc
je
inc
imulb
out
mov
divb
fcomp
hlt
or
and
repnz
mov
mov
mov
stos
or
cmp
imul
ljmp
ds
mov
testb
imul
xor
push
scas
neg
js
cmp
shl
mov
les
and
div
hlt
stos
hlt
sbb
hlt
aas
pop
xor
repz
outsl
xor
mov
xor
inc
pop
xlat
js
and
rcrb
jo
mov
test
int
pop
movb
daa
outsl
ds
aaa
add
add
fbstp
xchg
jl
inc
sub
arpl
cwtl
daa
cmp
and
xor
adc
dec
inc
repnz
repz
add
inc
mov
mov
gs
mov
xor
jb
mov
mov
bound
scas
imul
push
pop
mov
fsubs
cmp
xor
out
mov
adc
mov
call
lret
fimull
adc
cs
test
xor
add
std
adc
cld
dec
ss
xor
mov
hlt
mov
int3
mov
mov
cmp
mov
test
adc
mov
cmp
std
cmp
dec
out
dec
vpshufhw
add
repz
jge
repz
ss
xor
lock
add
roll
test
jl
push
inc
in
shrb
jbe
lea
pop
pop
lock
mov
out
xor
fmuls
dec
orl
int3
xchg
lea
add
loopne
add
push
add
call
adc
cmp
xchg
mov
fwait
add
cli
repnz
fwait
lea
push
mov
fimull
add
push
lea
adc
xor
or
insl
push
and
and
adc
push
mov
pop
out
daa
aas
jbe
cmp
add
add
mov
lods
mov
sbb
and
xor
mov
outsl
ss
mov
bound
gs
dec
imul
mov
and
mov
and
cld
std
arpl
shrl
popa
mov
and
dec
pop
cmp
push
mov
data16
inc
hlt
dec
inc
aad
mov
mov
add
push
xor
sub
mov
stos
cwtl
cmp
mov
sbb
mov
adc
lea
add
les
ret
and
xor
xor
scas
jle
mov
call
push
cmp
sarb
sub
popf
add
and
push
insb
ja
insb
movl
fs
add
push
call
dec
fsubl
std
hlt
mov
jbe
rol
test
mov
inc
call
xchg
cmc
or
dec
cmc
decl
decb
mov
cmc
mov
and
inc
mov
pusha
loopne
mov
push
add
dec
mov
inc
jo
lcall
add
jo
cld
mov
js
pop
dec
add
aaa
adc
cmp
cmc
cmp
dec
xlat
movsb
jmp
aaa
enter
push
add
dec
mov
xchg
ss
fdivs
inc
fdivs
add
enter
add
rcl
add
xor
lods
pop
mov
push
mov
add
test
fwait
mov
aas
add
repnz
cmp
mov
add
xchg
pushf
mov
push
test
fwait
or
add
xor
add
sub
push
add
fcomip
aaa
xor
popf
mov
scas
sub
movsl
mov
jns
repnz
mov
test
or
test
add
cli
adc
mov
jecxz
fildl
out
stos
or
xor
or
faddp
mov
jmp
jmp
scas
push
repnz
xchg
xchg
fwait
outsb
mov
xor
jp
xchg
add
stos
xchg
pop
mov
in
stc
scas
lock
push
adc
lock
jne
test
ds
call
imul
push
jo
loop
mov
cld
push
outsl
loope
daa
push
mov
or
mov
das
sbb
addb
push
int
out
pusha
pushaw
mov
push
xor
and
mov
lock
and
out
add
jmp
mov
jo
dec
das
mov
add
push
push
cmp
das
test
add
jmp
std
xchg
mov
mov
and
mov
lock
in
clc
mov
pop
mov
push
xor
jmp
lret
cmc
jmp
jge
mov
clc
mov
sbb
ss
cmp
jge
sbb
js
inc
cmp
cmp
ret
js
pop
cmp
sbbl
jle
add
cmp
jmp
xchg
andl
mov
mov
jmp
inc
cmp
pusha
xor
mov
call
aad
cmc
adc
mov
clc
mov
and
inc
xchg
xchg
fidivrl
push
pop
call
xor
pop
fsubrs
pop
add
mov
jnp
lods
add
addb
testl
add
mov
xor
mov
dec
jmp
inc
mov
sub
scas
sub
mov
sub
lock
mov
call
aas
aas
stos
movsl
iret
je
ds
and
mov
xchg
jno
add
sbb
call
mov
add
fistpl
pop
das
dec
lods
lea
arpl
in
std
jge
push
mov
je
jmp
mov
pusha
jb
and
stos
dec
stc
popf
in
cld
out
mov
inc
iret
call
xor
cmc
adc
mov
sti
outsb
lahf
stos
inc
cmc
stos
in
fdivl
stos
les
leave
sub
xor
mov
cltd
mov
and
lods
jmp
jb
sub
ljmp
inc
pushl
mov
cmp
nop
cmp
xor
sub
xchg
add
and
push
lea
cmp
add
test
lret
add
adc
dec
clc
out
fdivrs
lahf
cmp
mov
jnp
jge
mov
fcom
pop
in
in
ud1
lock
sub
jmp
jne
shl
clc
push
push
scas
sarl
inc
hlt
lea
add
push
jmp
add
jge
mov
test
rorl
add
ss
inc
adc
or
cmp
aaa
dec
sti
or
jl
push
jae
imul
bound
or
sbb
ds
cli
add
cli
in
xor
cli
pop
mov
arpl
rolb
ror
mov
repnz
lds
add
adc
aam
shlb
mov
xlat
xchg
imul
cmp
aaa
xor
dec
repz
sbb
sbb
cmp
add
fs
push
mov
lods
cmp
orl
add
mov
or
xor
push
jecxz
int3
mov
pop
clc
in
fsubrp
xor
mov
sub
jb
mov
add
sub
ja
mov
lods
mov
mov
call
mov
cmp
sarl
shr
pop
cld
pop
xchg
jecxz
push
xchg
add
cmp
ljmp
mov
jl
jbe
cmp
stos
jbe
lret
bound
mov
stos
inc
xchg
inc
in
add
pop
push
outsb
or
inc
sub
lock
scas
lock
push
or
jp
cld
cs
in
stc
mov
insb
adc
inc
les
cmp
pop
mov
loope
ret
push
mov
sti
in
sub
ficoms
mov
test
stc
dec
hlt
daa
fstp
mov
xor
xorb
stos
add
aaa
add
mov
inc
loopne
cmc
adc
imul
push
loopne
sar
mov
mov
pop
mov
add
test
mov
call
call
mov
aas
adc
out
dec
jbe
ja
aaa
fs
or
add
xor
lods
iret
test
sub
push
add
js
xor
dec
pop
aas
cmp
xlat
push
xchg
pop
jge
stos
xor
jge
stos
or
std
cmp
popf
sub
cmc
movsl
add
sbb
dec
add
sub
adc
lea
mov
add
fcmovne
test
push
push
adc
lods
mov
stos
int
scas
mov
jmp
xchg
xor
jle
add
inc
jle
popa
pop
fbstp
add
xor
cmp
in
out
sub
aaa
xor
mov
push
push
dec
xor
aaa
xor
into
jl
jnp
add
xor
add
out
jl
inc
out
jb
jo
arpl
sub
scas
mov
dec
imul
add
cmp
out
mov
jo
jp
mov
pusha
jo
mov
stos
push
adc
mov
xor
in
orb
inc
mov
icebp
xchg
adc
popa
mov
loope
imul
jb
and
sub
js
rcll
clc
loop
pusha
jge
hlt
cld
bound
add
and
sbb
lea
jbe
mov
jne
jmp
adc
insl
out
cld
push
mov
pop
mov
es
lds
call
xor
jne
push
mov
mov
push
test
or
push
ss
mov
fimuls
push
xor
xor
insb
inc
fidivs
dec
clc
inc
mov
inc
rorl
shll
sub
pop
cmc
enter
dec
or
in
rorb
mov
add
sub
out
int3
jmp
cli
aas
int3
xor
push
mov
mov
mov
hlt
aaa
adc
insb
dec
xor
mov
cmc
sti
mov
cmc
stos
jae
push
jae
sbb
lock
xchg
clc
out
sbb
add
cwtl
mov
pop
push
add
sbbl
add
sbb
add
mov
mov
movb
mov
or
cmpb
cmp
lods
mov
adc
cmp
aam
add
movsl
jmp
aaa
addb
repnz
add
push
fstl
lock
scas
jl
roll
cmp
and
aaa
test
or
mov
test
and
xor
movsl
movl
out
scas
fs
push
test
lcall
jae
or
loopne
add
out
fwait
add
and
cld
mov
ljmp
add
testb
cmp
jge
cmp
push
and
mov
sbb
lods
sub
jb
mov
icebp
pushf
lock
mov
inc
and
sbb
push
jmp
push
add
jo
add
das
call
lods
mov
add
je
push
cld
push
out
jbe
shl
add
cmp
add
rcrl
cld
mov
add
dec
cmp
xor
es
mov
mov
icebp
bound
mov
mov
clc
aas
in
std
call
shr
push
call
test
or
pop
jmp
add
inc
in
out
in
aas
in
popf
push
int
adc
xor
decl
inc
call
dec
push
leave
adc
cli
mov
pop
push
incl
add
decl
or
add
in
adc
dec
push
xchg
aaa
add
cmp
cmp
lea
and
aaa
mov
jo
mov
mov
sbb
inc
aas
pop
jb
pop
pop
enter
ss
lcall
jbe
inc
or
push
jl
mov
add
jno
xlat
or
popf
inc
cmp
into
mov
pop
icebp
fs
jle
scas
push
inc
aas
or
xor
fmull
idivl
lds
pop
inc
testb
test
sbb
xchg
pop
jmp
daa
xchg
xorb
stos
dec
and
jmp
push
scas
pop
outsl
cmp
inc
xor
xchg
out
mov
ljmp
xchg
jg
xor
flds
cltd
sub
out
aaa
inc
jnp
or
sbb
lret
xchg
out
fisubrl
ss
sarl
test
jno
sti
mov
es
mov
repz
fimuls
mov
fs
mov
inc
jae
mov
sub
jle
jl
xor
arpl
add
fs
call
aas
mov
mov
inc
lods
stos
int3
hlt
call
jo
xchg
sub
cmc
ds
cmp
push
and
cmc
inc
xor
cmc
hlt
xchg
in
out
sbb
call
mov
or
cmp
cmpsl
push
cmc
mov
cmpsl
lret
out
daa
in
add
lock
cld
fdivrp
mov
shll
jbe
mov
mov
inc
clc
stc
clc
psraw
dec
scas
imul
xchg
push
xchg
in
aas
mov
pop
xor
dec
jle
hlt
add
mov
push
jns
xchg
xor
add
lret
add
sbb
pusha
mov
adc
stos
add
fs
cld
cmp
insb
jg
add
into
xor
inc
cmc
shll
jbe
test
sti
dec
mov
add
stc
mov
aaa
inc
rorb
loop
sbb
sarb
jne
or
xor
jle
ja
xor
lock
in
fld
add
das
jmp
dec
stc
cmp
out
pop
add
mov
add
add
aaa
loop
cmp
pop
jnp
ss
add
cvtps2pd
add
push
ret
shrb
adc
dec
add
scas
out
mov
xor
mov
les
xor
clc
outsl
jnp
aam
ljmpw
ds
addb
in
sub
shrl
jp
outsl
pop
aas
pop
and
add
push
mov
jbe
repz
js
push
inc
in
insl
pop
jg
cmp
ljmp
outsb
push
pop
xlat
sub
das
pusha
adc
jae
sti
push
mov
mov
push
jae
sti
pop
mov
add
xlat
mov
mov
push
cmp
or
add
pop
pop
inc
jne
fndisi(8087
call
loope
sbb
pop
dec
mul
testb
sub
sbb
pop
mov
test
pop
dec
jle
mov
jno
lock
inc
add
xor
insb
mov
data16
cs
inc
cld
pushf
cld
mov
clc
bound
test
mov
xchg
test
in
shlb
jmp
in
leave
sub
or
inc
xorb
in
es
scas
lret
xchg
decb
mov
xchg
sbb
insl
push
sub
xor
mov
inc
dec
dec
add
incl
rorw
in
dec
xor
test
push
incl
jne
nop
jo
mov
shlb
testb
xor
dec
sbb
call
fcom
mov
pop
imul
iret
call
and
mov
sub
aas
in
ret
cmp
in
cmp
inc
or
inc
aaa
pushf
mov
cli
ja
sbb
xchg
or
aaa
fisubs
or
add
in
gs
push
lgs
lret
pop
sub
je
add
sub
dec
or
inc
adc
and
sub
xor
icebp
nop
jns
lcall
dec
test
stos
pop
call
hlt
mov
fildl
mov
repnz
ret
sub
add
and
pop
ja
inc
les
loopne
xchg
addr16
cmp
fistl
mov
adc
push
xor
xchg
je
dec
push
sub
call
jge
andb
out
outsl
cmp
xchg
xor
les
outsl
inc
cmc
ss
jmp
xchg
out
scas
lock
jmp
les
xor
jmp
xor
jmp
test
and
ret
xchg
scas
push
sahf
mov
daa
cmp
cmc
clc
xchg
jg
cld
jle
repnz
test
sub
ret
push
push
inc
push
fs
sbb
outsb
lods
cld
add
inc
xor
incb
decb
cwtl
cmp
push
dec
add
add
repz
call
sbb
dec
gs
shll
fidivs
inc
lcall
decl
xchg
incb
pop
xchg
jae
shll
push
xor
xchg
jge
mov
and
pop
leave
pushf
xor
decl
shll
push
xor
jbe
xchg
adc
cs
add
or
add
lds
cmp
push
out
std
add
mov
mov
push
lds
cmp
push
fmul
or
sub
idivb
aaa
loop
and
pop
mov
out
push
mov
add
pushf
lahf
adc
call
sub
mov
repz
loop
test
es
add
inc
cmc
push
add
dec
push
test
push
pop
add
xor
add
mov
cmp
xor
add
popf
punpcklwd
pop
and
fcmovu
sub
pop
fst
fsubs
les
or
aaa
xor
inc
dec
dec
ljmp
pop
adc
data16
ret
xor
inc
or
add
jg
subl
jmp
sahf
mov
fisttpl
scas
lock
mov
andb
mov
jmp
aaa
mov
add
xor
mov
iret
aaa
mov
mov
into
pop
sub
lahf
shr
push
add
xor
aaa
sub
scas
out
xor
mov
mov
call
movsb
pushf
out
push
je
push
mov
mov
in
mov
mov
or
xor
jmp
jmp
adc
test
inc
or
xchg
movsl
ljmp
loope
loop
lods
dec
mov
xor
dec
mov
mov
add
lods
sbb
push
xor
mov
sbb
adc
cmp
and
mov
xor
test
aaa
test
shll
add
aad
nop
ret
or
xor
mov
mov
mov
push
loopne
and
movlps
jo
fucomi
mov
and
fisttpl
rolb
pop
add
ret
adc
inc
add
sbb
and
push
es
idivb
inc
mov
mov
adcb
jae
loopne
jnp
mov
mov
sbb
mov
or
adc
mov
imulb
mov
outsb
mov
in
or
or
or
jbe
inc
mov
pop
mov
sbb
lods
cli
ret
data16
popa
or
mov
aas
repz
push
sbb
add
arpl
add
mov
in
add
mov
jae
pop
arpl
or
adc
mov
in
add
scas
or
pop
cli
ljmp
scas
and
pop
lods
lods
mov
shlb
add
movsl
mov
loopne
adc
pushw
cmpl
add
pop
popa
adc
xor
xor
sub
xor
pop
imull
push
fidivl
fdivs
adcb
xor
xchg
push
sub
sbb
or
mov
add
mov
adc
inc
sub
lods
in
dec
pop
dec
pop
xor
inc
in
shrl
in
jle
mov
pop
jne
add
mov
pop
or
push
mov
mov
in
xor
inc
xchg
clc
push
fiadds
mov
sahf
mov
add
test
pop
xor
test
pop
xor
jo
lds
adc
and
jne
mov
add
loope
jo
mov
mov
xchg
and
jp
mov
mov
call
lods
loop
jge
xor
call
xor
inc
fimuls
mov
or
ja
xor
add
and
push
ss
sub
mov
rorb
jbe
add
dec
or
aaa
push
sbb
dec
add
pop
jl
xor
iret
loop
aaa
dec
dec
or
add
aaa
adc
test
jnp
xor
push
mov
inc
cmpsl
popf
test
pop
dec
add
dec
add
cmpsb
std
lcall
addl
test
or
test
dec
jl
xor
mov
lea
aaa
loop
mov
lods
cmp
loop
xor
movsl
aaa
pop
ljmp
jne
or
add
jb
inc
jnp
ljmp
fidivl
pop
stos
lcall
xor
sub
out
add
jmp
into
add
mov
out
aaa
stos
lods
pop
mov
push
push
xor
push
inc
sbb
pop
inc
lods
and
cmp
ja
into
add
jne
movl
ljmp
xor
sbb
clc
or
jne
lods
lds
addr16
test
jmp
xchg
push
sub
mov
inc
lods
repnz
out
cmova
xchg
aad
sub
out
pop
xor
arpl
arpl
imul
push
test
in
ljmp
subb
dec
or
add
xor
ret
jge
push
cmp
sbb
mov
in
mov
add
add
jo
adc
jo
dec
jge
xchg
rcl
fdivr
sbb
test
cmp
or
loope
mov
adc
xchg
mov
aaa
enter
rcl
push
xchg
mov
and
and
xor
add
xor
jl
push
sub
add
scas
inc
lock
sub
lret
add
xor
pop
add
xchg
sub
test
jno
repnz
mov
mov
aaa
cmp
mov
mov
mov
inc
out
cli
mov
mov
jne
dec
sub
and
js
mov
add
lret
adc
add
in
push
mov
loope
mov
aaa
dec
xchg
add
mov
imulb
ljmp
lahf
or
pop
or
out
pop
std
addr16
cmpsl
mov
repnz
mov
sub
xchg
push
clc
cmp
addr16
add
xor
jg
sub
xor
icebp
xor
adc
les
shrb
ds
add
xchg
orl
add
bound
sbb
outsl
dec
push
mov
or
sbb
xchg
les
or
xor
lock
mov
loope
mov
flds
mov
sub
sbb
dec
sub
or
les
mov
add
cmp
lds
repz
sahf
mov
push
sub
imul
int3
xor
jmp
mov
lods
jle
sub
jae
xor
imul
push
rorl
jmp
cvtdq2ps
jmp
mov
dec
jmp
xor
add
cmp
ret
repz
movsbl
mov
add
xor
ss
jo
int3
push
add
jnp
cld
push
mov
or
inc
pop
cld
add
cmp
push
fcomp
ja
jbe
daa
add
mov
cvtps2pd
cld
dec
mov
adc
movb
mov
pop
mov
jno
inc
adc
xchg
decl
adc
mov
mov
cli
or
jbe
or
dec
ret
mov
add
cmp
pop
negl
jne
fimuls
mov
sbb
push
pop
dec
jb
mov
mov
aaa
inc
dec
mov
out
and
push
ret
or
mov
mov
or
cmp
jae
into
or
or
add
or
mov
add
jo
or
testl
or
push
jae
add
dec
xchg
jno
ret
in
cmp
test
dec
xchg
xlat
sub
pop
in
decl
mov
daa
aaa
xor
xchg
daa
data16
ljmp
cmp
sbb
xchg
rclb
ret
inc
lret
mov
cmp
pop
repz
push
add
jecxz
jge
mov
xor
and
mov
hlt
fwait
loop
enter
sbb
push
das
mov
push
aaa
lret
lds
test
test
and
pop
inc
push
jo
xorl
repnz
mov
aad
mov
inc
cld
aam
inc
inc
jmp
pushf
mov
push
shrb
add
mov
in
push
inc
mov
lods
aas
mov
stos
ljmp
push
dec
cld
pushf
lods
dec
jo
mov
outsl
mov
stc
mov
test
push
xor
xor
sub
out
xchg
xchg
adc
mov
cmp
dec
mov
ret
lock
mov
xor
cmp
out
add
fidivrs
rcrb
add
mov
cwtl
jb
or
jb
rcll
ljmp
or
inc
mov
add
pop
nop
adc
aas
jo
or
or
pop
jb
mov
pop
in
pop
cmpsl
cmp
add
xor
xchg
decl
push
mov
add
pop
push
daa
fcomi
repz
cmpsb
cmc
std
pushl
mov
inc
add
and
out
aad
std
mov
adc
mov
or
mov
dec
add
adc
cli
into
pop
in
or
fidivrs
adc
mov
stc
into
push
in
adc
cmp
mov
push
mov
sbb
xor
add
cmp
cmp
fwait
mov
mov
rcl
xor
push
lods
mov
mov
push
push
stc
into
fnstenv
jno
and
mov
mov
push
repnz
jmp
inc
cmp
sub
cmp
repnz
add
pusha
xor
inc
mov
sub
call
add
mov
fdivrl
in
pop
nop
cmpsb
cltd
outsl
clc
nop
jae
mov
cmp
cmp
jp
jno
cmp
int3
mov
sub
scas
leave
icebp
sub
out
mov
xchg
mov
test
adc
push
or
mov
jmp
idiv
sbb
push
push
data16
es
les
enter
stos
push
test
les
add
xor
push
or
adc
adc
fnstcw
pop
push
cld
push
cmp
es
cwtl
mov
cld
cltd
maskmovq
cltd
jbe
or
pushf
mov
fidivrs
in
sti
into
lods
jecxz
add
xchg
push
call
jne
arpl
xchg
inc
outsl
mov
add
test
mov
aas
loopne
jbe
bndldx
add
push
call
movsl
push
call
jne
push
arpl
loopne
lods
test
add
or
mov
fstpt
ljmp
hlt
cld
push
sahf
xor
test
das
add
lea
pushf
push
movb
aaa
and
add
idiv
push
pop
std
push
cmp
mov
add
sbb
out
jns
add
shlb
mov
adc
sub
mov
xchg
add
pop
xor
push
mov
outsb
or
pop
aad
and
xchg
testb
pop
pop
jae
int3
stos
jge
scas
scas
mov
add
pop
add
add
pop
mov
push
add
bound
mov
mov
js
cmp
jae
jg
ss
cmp
pop
xchg
ss
pushl
data16
stos
dec
je
add
dec
mov
dec
ljmp
mov
pop
ds
mov
add
ss
lahf
inc
and
add
push
data16
movsb
push
and
xor
lods
mov
cld
inc
adc
ja
add
dec
cld
jmp
imul
jo
cltd
repz
cmpsb
testb
fistpll
mov
cmpsb
jbe
adc
xor
or
jbe
dec
jb
add
push
sub
mov
xchg
or
dec
mov
decb
mov
add
xor
jle
and
das
cld
ds
call
gs
test
xchg
fmull
push
xchg
roll
pop
cmc
fdivrs
pop
inc
cmp
xor
push
pop
arpl
fistl
decl
mov
ja
add
sub
mov
cld
jmp
cmp
add
sbb
add
push
inc
mov
addb
lea
add
and
cmp
test
inc
and
xor
xadd
repnz
adc
inc
push
add
pop
mov
sti
pop
mov
mov
mov
adc
aaa
fdivrs
cmc
xor
pop
rcl
lods
cwtl
mov
or
cmpl
xor
jecxz
notl
rol
add
cmp
cmc
cmp
cwtl
adc
cltd
sbb
cmc
cld
xchg
add
int
xchg
lret
push
mov
fistl
int3
adc
push
js
aas
aam
add
add
sbb
lahf
dec
push
add
iret
aad
pushl
sti
out
push
cmp
iret
fdivl
add
or
jbe
mov
aad
xor
jbe
xchg
xor
cmp
into
icebp
xor
xor
ja
sarl
sar
movsb
insb
and
dec
mov
shr
and
lock
add
icebp
outsb
add
jmp
mov
in
add
shrb
idivl
movsb
add
lods
mov
xor
add
cld
cmp
mov
xor
movsb
mov
ljmp
xor
jmp
inc
cwtl
mov
dec
cld
out
loopne
hlt
aam
inc
jmp
repz
add
cmpsl
imull
mov
push
push
mov
cltd
cld
add
hlt
dec
test
xor
arpl
pop
cld
xchg
cld
jbe
or
xchg
out
sti
data16
sahf
sbb
cld
dec
mov
mov
cmp
add
add
test
popf
ss
inc
ds
xor
inc
sub
mov
jne
outsl
or
cmc
add
push
add
pop
mov
loopne
add
dec
add
orl
pushl
stc
add
xor
mov
mov
in
shll
call
aam
pop
mov
mov
add
add
push
mov
jmp
aaa
cli
clc
pop
mov
or
push
pop
add
adc
aaa
cmpb
add
and
hlt
sub
xchg
lret
xor
add
add
xchg
orl
std
jo
jne
aaa
pop
add
mov
fwait
adc
adc
stos
fdivs
std
xor
addb
add
xchg
sub
add
sarl
adc
mov
push
or
aaa
xor
mov
rcl
adc
xor
int3
test
scas
add
addr16
adc
and
or
dec
repz
sets
xchg
insl
sub
xor
call
and
add
adc
xlat
andb
addb
addr16
jnp
adc
add
dec
arpl
mov
jbe
lods
stos
lods
push
mov
mov
cld
inc
mov
lock
push
imul
sbb
es
push
push
inc
sub
test
xor
test
xor
ret
mov
xor
sbb
cmp
inc
and
bound
add
fsts
fs
xor
mov
in
and
sub
jmp
mov
add
xlat
in
push
xor
rsqrtps
dec
xor
add
fbstp
add
ja
push
dec
movsl
xchg
cld
imul
call
add
push
dec
int3
lahf
bound
add
testb
into
lds
nop
arpl
test
xor
xor
cmp
add
push
mov
mov
dec
add
and
jne
cmpsl
jle
mov
add
movsb
jnp
aaa
pop
xchg
sub
dec
out
out
pop
mov
sub
fsub
iret
out
mov
std
push
fcmovb
sub
out
jp
inc
push
lea
jp
mov
push
jnp
imul
call
pop
fidivrl
xor
ljmp
push
jle
int
mov
or
out
out
daa
pop
add
dec
mov
pop
xchg
rorb
sbb
mov
lea
mov
mov
fsubrl
aaa
xor
xchg
jae
add
pop
xor
jge
sub
ret
fmul
outsb
xchg
inc
push
jge
mov
inc
or
inc
mov
sbb
adc
push
xor
mov
push
addr16
xor
rolb
mov
pop
dec
xor
or
mov
lock
arpl
fbld
or
scas
jl
inc
add
pop
mov
add
cld
scas
add
mov
into
add
ja
in
sub
sti
adc
inc
push
lea
hlt
add
dec
cld
out
addb
xor
jbe
test
inc
jmp
gs
test
test
in
fs
inc
cld
test
mov
xor
ret
mov
sti
in
decb
push
test
xor
mov
add
cmovno
ficoms
out
fcompl
lret
xor
xorl
push
xchg
iret
mov
sti
rcrl
add
push
or
addl
jno
or
rsqrtps
lea
pushl
xchg
addr16
mov
stos
mov
jno
std
push
adc
mov
mov
cmp
std
push
mov
mov
in
sahf
ss
or
adcl
xchg
aaa
mov
std
mov
push
xchg
addr16
sub
enter
pop
sbb
mov
stos
ja
decb
std
xchg
js
or
mov
xlat
jbe
mov
add
sub
add
popa
cmp
addb
cli
or
clc
or
push
cwtl
sbb
add
dec
inc
inc
mov
aaa
dec
add
ja
cmpl
mov
inc
xor
xor
ret
sarl
stos
sub
scas
jp
lods
push
xor
mov
stos
cmp
or
inc
adc
insb
add
pop
dec
mov
cmp
lock
xchg
xchg
insb
xchg
ljmp
stos
aad
iret
leave
or
mov
jns
cmpsl
xchg
imul
add
xor
xchg
or
lods
adc
jb
adc
add
aam
je
add
mov
cld
out
into
add
mov
lock
xor
and
xor
jb
mov
sahf
sbb
ret
sub
xor
xlat
out
mov
hlt
push
in
jbe
aaa
jmp
push
aas
jne
mov
in
jmp
sub
jbe
div
repz
sbb
xor
cld
xchg
in
dec
loop
incl
movsb
sti
incl
add
add
mov
imul
push
test
mov
fdivr
jecxz
ljmpw
add
pop
sar
jmp
rorb
mov
mov
and
sti
repnz
add
xchg
addr16
jne
std
aas
cld
xor
add
xor
inc
add
je
dec
lock
jmp
pavgb
add
stos
inc
call
adc
mov
clc
sahf
add
data16
aam
cmc
lods
xchg
adc
mov
mov
add
adc
test
rolb
inc
adc
and
jmp
dec
iret
mov
into
push
mov
das
movl
outsb
push
pop
dec
mov
sbb
sbb
movq
add
or
ss
add
dec
ret
sbb
fwait
push
test
popf
imul
sub
aaa
xor
add
sub
mov
or
pop
xor
inc
jo
out
push
mov
push
sub
inc
out
jne
insl
inc
add
xor
jl
xor
add
add
negb
mov
xor
jg
jae
je
jb
and
jl
loop
stos
lock
push
add
push
cli
ret
cmp
xchg
xor
outsl
cmp
mov
dec
cld
aam
and
or
inc
icebp
repz
add
push
xor
je
stos
jae
pop
inc
jbe
add
fbld
mov
sub
add
hlt
aaa
push
fs
push
shll
cld
mov
dec
push
sub
std
repz
out
jno
mov
xor
scas
inc
cltd
fidivrs
dec
jle
sbb
sub
mov
fstp
xor
shr
xchg
mul
mov
xor
dec
add
cs
inc
imul
call
xor
mov
scas
jo
or
shrb
pop
push
push
inc
push
sti
jmp
stc
andl
push
ret
insb
add
shrl
jbe
sbb
push
mov
cmpl
test
jmp
cmp
mov
movb
jecxz
push
aaa
add
outsl
add
fidivrs
add
xchg
xor
and
push
call
add
inc
enter
dec
stc
pop
mov
pusha
call
lods
jg
call
mov
jo
mov
outsl
std
or
incl
dec
inc
insb
dec
jle
insb
xchg
rcrb
push
or
rcl
leave
loop
ror
sarl
jge
arpl
aaa
dec
jnp
mov
outsl
or
sbb
pop
sarl
dec
add
sbbb
jo
add
mov
stc
pop
andl
outsb
jae
xchg
leave
hlt
insb
xor
pop
stc
out
pop
add
ds
add
mov
outsb
test
sbbl
test
mov
adc
jl
sbb
pop
mov
jle
mov
imul
pop
add
xor
pop
sbb
addl
cmp
or
pop
mov
daa
or
sub
test
jbe
ljmp
hlt
jmp
push
ja
push
xlat
jno
add
mov
add
mov
cmc
and
repz
in
add
cmp
xor
push
inc
dec
pop
pop
xor
xchg
pop
mov
in
xor
inc
icebp
cli
out
and
in
icebp
or
add
jne
jmp
xlat
mov
ds
repnz
pop
lds
sahf
and
inc
jmp
inc
hlt
add
push
ret
sub
xor
shrl
scas
xchg
push
test
add
add
push
ret
add
push
fstl
push
xor
test
std
jle
add
sahf
xor
stc
xor
incl
add
cmp
mov
std
adc
adc
je
shll
push
arpl
adc
int
or
or
cli
lcall
pop
je
mov
in
std
adc
pushf
sar
or
xchg
jmp
add
call
xorl
add
jb
jge
lods
xchg
ret
xor
sarb
ljmp
jns
mov
add
inc
push
test
push
mov
mulb
mov
push
lret
dec
add
in
sar
and
inc
aaa
pop
cmp
push
xor
inc
shll
jle
push
xchg
shlb
and
mov
mov
imul
pusha
sar
add
add
cmpsl
outsb
xorl
sub
into
in
and
mov
outsb
dec
and
add
aad
and
jmp
imul
cmp
sub
das
in
sbb
pop
stos
add
fildll
clc
inc
mov
enter
mov
int3
in
aaa
xor
outsb
add
dec
xor
outsb
les
stos
cmp
call
cmpsl
inc
hlt
jmp
js
pop
mov
aad
xor
ret
shll
jae
sbb
daa
je
adc
mov
and
and
push
je
cltd
xor
es
pushf
in
je
fadd
stc
hlt
jb
aad
jae
flds
add
pop
xor
dec
xchg
jo
jmp
sub
leave
sbb
test
xchg
cld
ss
out
lret
sub
sub
xor
icebp
dec
je
add
movsb
push
decl
std
rorl
adc
xor
cmp
decl
add
xor
lds
in
inc
ret
lret
mov
mov
xor
or
ljmp
lcall
ja
xor
frstor
jne
popa
call
jo
mov
pop
jmp
les
pop
mov
dec
xchg
sbb
ljmp
fisttps
inc
aaa
sbb
jl
aaa
adc
call
lret
push
sbb
sub
subl
mov
add
shll
leave
adc
sub
dec
out
pop
or
push
push
adc
addr16
mov
ret
sub
add
cmp
dec
std
add
adc
pop
enter
inc
or
sarl
add
test
sbb
or
pop
jp
cmp
bound
mov
pop
push
mov
mov
inc
xorl
ss
add
sbb
xchg
adc
test
sbb
arpl
test
imul
fisttpll
je
xor
add
sahf
push
xor
mov
ja
out
mov
fsubrl
xor
ret
js
and
das
sbb
xor
fwait
add
inc
je
xor
in
or
jmp
dec
mov
cld
push
xor
fdivrs
xchg
adc
mov
lcall
adc
jmp
cmp
fistps
cld
push
and
jo
sub
subb
test
cmp
jo
stos
cld
pop
push
mov
je
add
push
das
jmp
rep
ss
test
xor
jbe
fbstp
pop
sub
xchg
xor
jae
popa
jae
clc
outsb
push
add
dec
icebp
out
mov
sbbb
mov
shlb
add
in
ljmp
jmp
xor
stos
inc
and
pushf
adc
mov
rclb
push
and
sti
push
xor
jmp
cmp
or
adc
pushf
decb
pop
nop
dec
xor
bnd
adc
pop
inc
lods
std
decl
shll
dec
or
pop
in
ret
dec
or
negl
cld
and
adc
inc
sbb
dec
call
imul
sub
inc
pop
nop
jb
rolb
into
push
adcb
jmp
cmpsb
sub
and
inc
jle
sbb
lahf
jno
je
jle
add
cmp
add
and
das
add
ds
js
fldenv
loope
aaa
xor
inc
les
shlb
add
or
icebp
sbb
ljmp
mov
icebp
push
xor
data16
fadd
or
or
and
jnp
subl
rcrl
push
out
dec
stos
js
xor
inc
addr16
add
inc
pop
xor
inc
jle
divl
and
xor
jp
mov
pop
out
add
mov
in
sub
mov
xor
jmp
in
ds
sub
mov
je
test
push
aaa
add
dec
or
push
daa
imul
xor
inc
jmp
xor
cs
sbb
mov
lcall
imul
aad
enter
jg
adc
scas
cmp
pop
adc
icebp
or
add
data16
out
adc
adc
hlt
sbb
add
xchg
push
inc
and
or
je
inc
je
cmp
xor
in
mov
xor
fstpl
mov
in
int
or
push
imul
jbe
lods
fcos
or
add
aad
in
fidivs
add
mov
loopw
test
cwtl
sti
rol
rorb
mov
push
decl
inc
inc
add
xchg
dec
subl
add
jns
dec
imul
ds
mov
rorb
leave
pop
add
jo
arpl
xor
add
sub
jae
fcmove
sti
add
jae
add
std
mov
pop
ss
mov
mov
or
popf
loop
aaa
popa
push
std
pop
sar
xchg
inc
pop
ficoms
add
jno
rcrl
adc
addr16
xchg
dec
aas
dec
mov
sbb
pop
mov
jnp
mov
jmp
leave
addb
aaa
rep
pop
mov
inc
push
stc
add
sbb
cmp
hlt
test
mov
xor
sub
js
in
bound
std
xor
ljmp
mul
add
idivl
mov
and
repnz
adcl
clc
loopne
sub
mov
xor
jmp
or
cld
insl
hlt
lahf
adc
das
adc
stos
add
xor
push
test
mov
add
je
mov
add
cld
jb
xor
test
in
adcb
adc
xchg
add
pop
cmp
das
mov
fs
hlt
hlt
sub
cmp
xchg
jp
mov
xchg
mov
or
rorl
ret
sub
add
movsl
add
lds
ljmp
out
fadd
int
jo
push
iret
cmc
jmp
jnp
in
out
sti
daa
lahf
cmc
sti
lds
ret
inc
pop
xor
cmovo
aas
or
mov
lcall
hlt
sti
mov
mov
xor
cwtl
jns
inc
int3
cmovo
in
push
push
imul
push
add
sbb
loope
mov
inc
loopne
pop
out
push
cld
mov
mov
add
ja
sbb
adc
ret
sti
insb
fcmovbe
sub
movsb
ret
pop
dec
pop
aam
in
mov
int
jae
rolw
add
mov
mov
rolb
push
cmpsb
popa
std
mov
xor
adc
add
add
mov
ret
cmp
test
pop
xlat
mov
push
rorl
aaa
aas
pop
adc
or
ljmp
pusha
je
ljmp
es
mov
lahf
stc
inc
xor
lods
ret
mov
lock
arpl
ljmp
je
mov
mov
rolb
jb
ds
add
xor
imul
pop
pop
daa
popf
or
pop
stc
adc
or
ljmp
inc
stos
add
incb
out
mov
das
xor
mov
mov
mov
xor
add
sbb
jbe
and
add
addl
test
xor
mov
arpl
pop
cmpb
jmp
inc
loope
je
jo
std
xchg
mov
adc
call
mov
mov
xor
jmp
mov
jbe
xor
addr16
fldenv
add
and
push
test
xor
or
aas
and
mov
mov
add
push
cmp
fidivs
add
mov
addr16
out
adc
add
mov
aas
lods
dec
xchg
and
adc
or
test
das
add
call
add
je
mov
add
dec
mov
jne
lds
mov
loop
jne
xchg
cwtl
xchg
test
test
fisttpl
nop
sub
jne
lods
dec
lock
xchg
lret
jmp
cmc
sbb
clc
cli
add
cltd
js
aaa
or
lock
fcomp
shr
rorb
pop
adc
and
ljmp
cmp
incl
add
jmp
std
push
inc
jecxz
fstps
rolb
ja
test
xor
out
mov
jo
imul
rorl
add
jg
inc
pushl
fcomi
mov
mov
mov
test
xor
add
ss
pop
add
lret
inc
je
and
xor
jmp
in
pop
xor
mov
cmp
xor
xchg
push
out
je
jmp
ja
and
sbb
ljmp
test
pop
add
and
cld
ret
subb
push
mov
add
push
lock
mov
stos
pop
mov
cmpsl
loope
addr16
sub
mov
icebp
xchg
out
jge
rcrb
rorb
test
cmc
test
pop
jne
out
cld
fsub
inc
inc
jmp
out
xor
pop
stos
add
sub
push
pop
rclb
push
xor
test
hlt
mov
in
push
sbb
cld
nop
inc
inc
jmp
sbb
cld
jmp
mov
cld
cs
cs
cmp
mov
lahf
cmp
cld
add
jle
jne
aas
mov
jne
jb
fs
add
mov
mov
add
jmp
sub
test
fldenv
lahf
fs
sti
ljmp
incb
and
xor
mov
outsl
inc
add
adc
jmp
and
int
add
test
xor
inc
int
pusha
lcall
jnp
jne
cmp
pop
std
ret
add
add
inc
sub
sbb
lret
push
dec
test
cld
or
lret
adc
enter
call
call
push
inc
add
cmp
sbb
std
jge
pushl
adc
xchg
jp
mov
aaa
dec
inc
aaa
out
mov
negl
or
cmpsb
push
cs
xor
decl
push
xor
pop
and
clc
ret
inc
cltd
pop
jle
push
or
rorl
add
push
mov
xchg
roll
dec
iret
push
fildl
xchg
xchg
out
jb
mov
scas
ret
call
jb
adc
mov
fdivr
repnz
test
mov
sbb
fdivrp
divb
sbb
inc
cld
xlat
ret
add
mov
jb
add
push
fimuls
cmpsl
stc
ds
and
jo
movsb
les
in
jp
add
xor
inc
jmp
je
mov
stos
xor
jbe
fchs
adc
hlt
sbb
pop
xor
cmp
jmp
bound
cld
gs
adc
cmp
add
xor
add
call
pop
add
xchg
cwtl
enter
add
in
aas
jmp
rclb
mov
in
jb
iret
stos
jbe
sub
sti
ljmp
pop
inc
add
icebp
sti
jg
xor
inc
dec
xor
ss
shll
add
repnz
aaa
add
shl
lds
xor
inc
push
xor
sti
fs
out
push
dec
stos
in
push
cmp
push
jbe
add
fimuls
add
xor
into
xor
dec
xor
adc
and
add
cmp
jne
push
in
je
jecxz
inc
aaa
sbb
jae
mov
mov
add
and
aas
aaa
mov
les
push
jae
xor
mov
hlt
mov
sub
scas
mov
lods
and
or
push
call
int
adc
or
rorb
push
adc
dec
or
test
dec
pop
dec
pop
mov
add
jmp
pop
into
adc
jb
sbb
out
mov
maskmovq
xor
ljmp
inc
repnz
std
push
popf
rorl
jl
jo
je
sbb
icebp
push
xor
inc
cmpl
leave
cmp
or
push
add
mov
xlat
ret
fsubrs
mov
add
sbbl
loop
jo
mov
xor
fnstsw
inc
je
adc
stc
sub
pop
or
out
scas
repz
pop
sbb
mov
mov
je
xchg
cmp
inc
inc
jmp
adc
test
and
aad
inc
adc
hlt
sbb
stos
add
push
jb
mov
in
add
sbb
mov
rcrl
movsl
or
xor
inc
xchg
cmp
mov
test
int3
xor
push
and
in
repz
sbb
add
xorl
je
lcall
push
mov
jmp
outsb
imul
inc
adcl
and
add
xchg
je
hlt
sti
test
nop
rcrb
xchg
jns
in
xor
add
cmp
stc
fbld
into
xor
incl
fstl
inc
ss
fidivs
ja
aas
repz
sbb
mov
lea
pop
xor
testl
add
add
xchg
pop
or
jns
cmpl
or
add
ljmp
stc
push
popa
pop
mov
or
test
pop
push
ret
jg
aaa
or
fdivrp
cwtl
or
rorl
adc
xchg
adc
test
add
inc
mov
aaa
add
or
mov
jl
inc
or
cmp
mov
out
push
outsl
pop
cmp
cli
pop
aaa
xor
mov
sahf
pop
xorl
add
pop
fnstsw
cmp
lahf
mov
imul
fstpt
iret
mov
push
add
xor
mov
sbb
push
dec
mov
pushl
pop
jge
scas
out
insb
outsb
pop
sbb
dec
pop
cmp
add
mov
fsubrs
mov
dec
fs
stc
cmp
sub
repz
jb
mov
movl
adc
repnz
movsb
push
out
mov
mov
mov
fs
mov
jbe
lcall
cltd
cmp
cs
test
sti
jge
and
add
xor
push
ret
xor
push
add
xor
jne
push
pop
push
push
and
mov
call
add
cld
jne
cmp
pop
dec
cmp
fsubrp
xor
sub
mov
aaa
loopne
mov
adc
xor
popf
lret
into
fmull
add
dec
push
inc
adc
jb
call
test
test
xor
shll
add
mov
add
sub
inc
outsb
push
or
add
and
incl
add
xor
cmp
add
addr16
sti
add
mov
xchg
cwtl
push
mov
add
xor
decl
mov
jmp
in
std
aaa
decb
mov
pop
xor
dec
mov
mov
addr16
test
ret
push
addr16
repz
dec
add
mov
cwtl
lods
dec
test
add
insb
xchg
inc
dec
mov
add
jne
cld
inc
mov
aas
aaa
nop
inc
jae
mov
inc
pop
jmp
or
addr16
sbb
mov
cmp
dec
je
stc
dec
adc
out
mov
clc
xor
jmp
addr16
adc
cmp
inc
or
ret
fdivrs
cmpsb
dec
and
xlat
ret
shlb
pop
div
add
add
imul
add
mov
ret
nop
mov
call
add
ds
sbb
cmp
xchg
js
inc
sub
and
fadd
inc
mov
dec
les
add
ljmp
mov
in
adc
xchg
mov
incb
test
insl
xchg
add
cmpsl
mov
adc
ss
subl
bound
int3
mov
jnp
in
xor
insl
sti
xchg
mov
adc
xor
push
insb
ja
or
pop
mov
mov
add
cld
in
inc
cld
mov
mov
mov
mov
je
call
xor
test
add
pop
xor
gs
and
lcall
adc
dec
and
outsb
mov
or
or
pop
or
jo
cld
or
test
or
add
lds
jecxz
cmovo
mov
jne
ret
cld
adc
inc
mov
cld
adc
sub
cmc
sti
test
fisttpl
jnp
push
mov
mov
gs
add
push
push
mov
test
aaa
add
sahf
xchg
aam
ret
add
sub
pushl
sbb
xchg
jmp
inc
push
adc
add
sbb
aas
aaa
test
and
dec
std
sub
jge
xlat
in
mov
jae
inc
in
push
mov
in
cld
inc
mov
add
addb
data16
add
mov
std
js
inc
or
aaa
xchg
and
sahf
gs
sbb
inc
sbb
int3
inc
dec
fcomip
add
and
jae
xor
or
dec
pop
ja
pop
mov
hlt
dec
xor
inc
test
or
cmp
pop
fisubrs
jecxz
inc
shll
test
inc
dec
mov
add
sub
inc
mov
dec
loop
and
push
mov
sub
jg
pushf
call
mov
orb
jg
mov
iret
xor
out
into
cmp
mov
aam
xor
jmp
add
cld
pushf
and
jbe
outsl
orl
dec
push
cld
push
mov
loope
pcmpeqw
add
adc
push
roll
add
xchg
jno
cld
fiadds
push
adc
out
movaps
jno
and
stos
iret
push
push
bound
in
fnsave
jae
insb
xrelease
mov
mov
cmp
cld
dec
cltd
outsb
and
jbe
in
add
fdivrl
pusha
jbe
xchg
test
in
test
in
mov
add
and
dec
js
fwait
js
adc
mov
mov
push
insl
add
add
hlt
mov
lea
sbb
or
sbb
leave
ss
cld
packssdw
enter
iret
arpl
mov
cmp
je
ret
push
push
mov
mov
shll
xorb
add
push
pop
sub
cwtl
xor
jne
imul
pop
icebp
push
inc
add
jecxz
incl
fadds
xor
out
adc
xor
push
shll
pop
mov
sbb
test
sbb
push
and
scas
push
call
sbb
inc
xchg
mov
mov
mov
or
inc
mov
sbb
mov
add
add
pop
mov
mov
dec
cwtl
mov
jnp
mov
daa
mov
sub
add
sub
xchg
mov
arpl
daa
pop
iret
xor
ljmp
cltd
cmp
daa
xor
cmp
jb
sub
mov
cld
sbb
adc
and
iret
cmp
ljmp
sahf
jmp
test
add
sahf
jmp
rorl
fisttpl
cmc
repz
xor
inc
divl
jno
ljmp
mov
cmp
or
pop
add
or
jl
repz
frstpm(287
add
xor
ret
mov
notb
jmp
mov
shr
xor
push
ret
xor
cld
cld
or
inc
jmp
or
inc
mov
add
addr16
imul
insb
mov
inc
jmp
out
push
dec
push
aaa
outsb
jmp
bound
sahf
adc
add
xor
mov
xor
jmp
es
decl
add
mov
push
jmp
mov
sbb
add
addl
add
sahf
mov
add
mov
pushl
lcall
jge
push
out
mov
das
add
movsb
xor
xchg
imul
mov
add
roll
adcb
mov
hlt
cs
jbe
jns
fldenv
mov
iret
push
adc
add
ss
dec
call
sub
or
jle
xchg
xchg
xchg
xchg
inc
je
pop
cmp
scas
pushl
jecxz
sub
pop
push
ja
add
pop
add
push
sub
sbb
add
scas
mov
popa
xchg
or
sti
cmp
loopne
or
add
lds
jae
add
jno
cmpl
sub
push
or
sub
mov
xchg
mov
ljmp
and
scas
jo
cld
push
mov
push
ficompl
call
outsl
or
add
sbb
test
or
push
daa
addr16
in
and
int
add
xor
pop
mov
ljmp
add
mov
in
inc
loop
aas
mov
and
or
repz
shll
ljmp
xor
pop
sub
cmpsb
negl
or
testl
jne
mov
or
idivb
icebp
or
mov
dec
sbb
add
outsb
pusha
mov
xor
lds
add
mov
ja
jmp
adc
jmp
xor
mov
adc
or
cmc
add
add
dec
pop
insb
in
xchg
jle
mov
pop
int3
cmp
lods
jb
lea
add
xor
mov
cli
incl
or
test
inc
and
das
add
movsl
test
dec
xor
push
icebp
pop
imul
int
add
dec
loop
xchg
add
into
inc
roll
rdmsr
add
push
loop
mov
das
add
movsb
xor
push
iret
xor
lea
cld
fsubp
xchg
aaa
jno
sub
cmp
sbb
add
add
sbb
mov
mov
add
xor
cmc
adc
add
aaa
xchg
cmp
sbb
pop
pop
xchg
add
cmpb
xorl
jecxz
stos
adc
test
jns
add
sbb
clc
bound
add
aaa
movsl
out
cmc
mov
test
sbb
mov
add
and
mov
add
add
iret
xor
add
or
cmp
ds
pop
iret
mov
pop
insl
xchg
pop
mov
cmp
mov
jno
bound
pop
jnp
stos
add
pop
push
mov
add
fnsave
inc
je
clc
repnz
jne
jmp
sldt
xchg
mov
inc
inc
mov
or
hlt
stos
dec
cmc
xor
icebp
mov
repz
mov
or
mov
dec
in
sahf
add
ss
add
insl
hlt
xchg
push
das
add
cmc
or
xchg
out
fiadds
sti
sbb
xor
std
pop
xor
aam
daa
inc
jmp
sub
or
add
xor
out
mov
dec
dec
and
adc
push
jne
es
bound
xor
orb
mov
cmc
in
push
push
and
shlb
incl
aas
adc
mov
incl
pop
ret
add
push
data16
ja
rdtsc
pusha
xor
sbb
add
out
jne
scas
ja
pop
mov
cmovo
add
mov
add
pop
in
jne
push
sub
pop
ret
or
pusha
es
jbe
dec
in
test
test
push
adc
imul
jmp
mov
cmp
sti
hlt
andb
jae
cmp
call
jp
or
je,pt
xchg
mov
call
add
lods
fisttpl
je
mov
std
sub
mov
pop
nop
fidivl
mov
jmp
std
js
mov
pop
adc
pop
add
dec
ret
rclb
pop
mov
in
push
mov
sar
cmp
xor
lock
xor
and
mov
pop
imul
add
mov
mov
mov
shl
es
adc
gs
dec
sbb
getsec
sub
add
lods
sarl
and
hlt
ret
mov
ret
pandn
sub
icebp
mov
scas
stc
or
scas
adc
adc
xor
shl
lods
int3
push
inc
je
hlt
bound
outsb
roll
imul
pop
outsl
mov
iret
add
hlt
aam
mov
add
add
push
cwtl
add
xor
mov
sti
push
in
cld
cld
dec
and
mov
pushl
push
jo
insb
xchg
cld
sti
out
in
jbe
push
and
hlt
hlt
pushl
sub
cmpb
icebp
cmp
inc
pop
add
cmp
imul
or
test
test
add
xor
add
mov
outsb
vmfunc
push
decl
insb
cwtl
add
push
pop
popa
andb
mov
mov
in
or
xor
push
xchg
out
push
test
inc
adc
inc
jae
jge
je
pop
sarb
flds
pop
leave
shr
fnsave
add
loop
call
mov
jno
push
mov
inc
sti
incl
add
dec
out
loope
xor
and
decl
les
fstpt
sti
pushl
inc
xor
in
repz
adc
add
cwtl
xor
outsl
xor
popf
or
adc
jmp
mov
lahf
lahf
or
test
lret
incl
decb
add
sub
addl
lret
or
cmp
rclb
ss
sub
mov
cmpsl
rorb
inc
lret
test
inc
loope
std
js
cmp
jmp
mov
sbb
push
aad
or
call
ljmp
std
fstl
popf
xor
and
adc
daa
stos
add
sub
std
add
arpl
sbb
xor
stos
add
xchg
repnz
sub
or
mov
add
pandn
sub
repz
or
std
fdivrl
inc
je
subb
cmp
cwtl
or
add
xor
rclb
cmp
cltd
mov
orb
test
add
cltd
cmp
insb
add
sti
xchg
jb
fs
mov
xor
lret
inc
add
jmp
mov
loope
addb
cwtl
add
mov
xor
stc
fcomip
sti
jecxz
leave
sti
sti
bound
mov
jne
lods
add
incl
insb
icebp
call
push
sbb
jb
incl
loope
addr16
sbb
push
add
add
mov
stc
jmp
cmp
cld
add
sub
or
mov
jne
repz
mov
mov
in
out
stos
inc
or
das
mov
in
ljmp
cli
andb
mov
outsb
ret
outsb
adc
into
jecxz
mov
jmp
mov
js
je
je
xor
adc
inc
add
std
mov
inc
fdivrp
push
lods
shlb
mov
jb
mov
aas
fdivrp
push
aaa
in
shl
das
je
fnstcw
add
das
mov
adc
aas
mov
mov
cld
xchg
repz
mov
xor
or
jo
inc
or
mov
lret
ret
lock
mov
add
nop
aaa
je
mov
mov
mov
sti
aam
mov
push
or
cmp
xor
xchg
sti
mov
in
or
arpl
jg
lods
jmp
imul
scas
addb
hlt
mov
les
imul
stc
outsb
sub
repz
scas
outsb
repnz
adc
cmp
adc
out
fisttps
jle
popa
mov
xchg
mov
sub
dec
sub
repz
scas
es
arpl
inc
daa
xor
jge
bound
aad
lods
adc
inc
je
fwait
nop
subl
mov
mov
fdivrp
mov
xchg
stc
jmp
lahf
push
xchg
add
fs
ljmp
in
mov
sti
fcompl
adc
xor
cld
mov
inc
fiadds
and
add
fs
loopne
push
test
mov
stc
xor
lock
jmp
pushf
inc
je
cmp
xor
clc
rolb
addb
inc
mov
add
lea
fimuls
or
sti
lcall
outsl
lock
scas
add
cmp
popa
scas
push
add
mov
loop
inc
shl
xorb
jo
cmpsl
mov
rorb
xor
decl
js
hlt
xor
xor
add
mov
add
ficomps
scas
jg
inc
mov
add
xor
add
add
shl
stos
inc
add
or
jne
mov
cmc
cld
push
xlat
lahf
adc
or
rolb
movb
sbb
dec
lock
xlat
pop
movsl
dec
jge
jne
arpl
out
cmc
in
ja
cmp
mov
jp
aad
sbb
rclb
loope
push
ja
mov
add
mov
mov
push
out
jb
xchg
out
inc
mov
je
or
mov
sub
sbb
xor
xor
enter
cmpxchg
aas
mov
sbb
mov
sub
mov
outsl
mov
arpl
cs
sbb
scas
test
cli
scas
sub
das
add
call
or
jp
pop
mov
push
test
and
movsb
sub
xor
inc
bound
cmp
sub
cs
cs
or
xchg
scas
cs
jno
jbe
add
ljmp
mov
and
and
lods
dec
lds
imul
lds
fsubs
add
js
pop
shr
jo
adcl
or
imul
sub
sub
mov
lock
xor
stc
jmp
popl
sub
sub
stc
loopne
jmp
push
pop
adc
call
push
sbb
add
push
cmp
cmc
sahf
aaa
add
add
push
sub
xchg
add
adc
xor
test
aaa
add
shll
mov
test
mov
test
aaa
add
mov
mov
iret
adc
add
je
cltd
cli
jmp
shl
inc
je
scas
outsl
cmp
popf
dec
add
or
inc
sub
out
jle
fidivs
add
add
aaa
push
movb
movl
adc
mov
mov
inc
push
mov
xor
push
mov
inc
das
pop
inc
jae
mov
add
jb
flds
hlt
leave
inc
add
jae
push
les
mov
pop
sub
sti
cmp
jmp
xor
out
push
inc
or
dec
xchg
or
add
pop
daa
std
mov
mov
pushl
xor
mov
cli
movsb
sub
mov
out
mov
idivl
mov
sub
icebp
imul
cwtl
addr16
loopne
xor
jno
fldl
inc
hlt
into
xor
mov
in
add
test
mov
jae
inc
in
fadds
fs
add
aaa
pop
ljmp
xor
shrl
mov
sub
xor
loope
je
repnz
ljmp
loopne
loope
call
add
xor
dec
add
mov
ljmp
mov
mov
pop
add
mov
mov
fsubl
xlat
dec
out
test
add
xor
cld
xor
mov
add
dec
repnz
cmpsb
mov
or
xor
in
in
call
xor
idivb
test
xor
cld
faddl
rcl
and
inc
push
jmp
dec
mov
or
lcall
or
jmp
ja
sar
out
stos
cld
lcall
push
test
mul
mov
add
jo
dec
sbb
lcall
out
adcb
add
scas
cli
decl
jb
add
or
jp
add
int
or
lcall
mov
add
xchg
outsl
shll
mov
jne
xlat
cli
push
aaa
pusha
sub
mov
xor
add
add
fnstsw
in
fsubrl
sti
loopne
sbb
out
sub
push
cmp
rclb
jns
pop
into
movsl
aad
mov
std
cmp
mov
clc
dec
mov
das
popa
xor
mov
sarb
jl
pusha
fdivrl
sti
lds
std
add
jbe
or
and
mov
add
mov
mov
mov
and
addr16
lret
jl
rcrl
shrl
xor
jmp
test
fiaddl
adc
gs
inc
xorl
test
call
xor
orl
in
push
and
xor
add
outsl
shlb
jp
into
es
nop
fcmovb
add
push
dec
stos
xor
jg
xor
add
leave
es
mov
add
dec
xor
jmp
imul
add
adc
add
inc
or
pop
out
sti
ss
jno
ficomps
add
add
jae
dec
mov
add
insb
cld
push
cmp
mov
out
popf
add
xor
pop
roll
cmpsb
lods
mov
fistl
out
dec
cmp
aaa
in
je
mov
add
inc
fisttpl
insb
je
mov
mov
cmc
add
cmp
out
rcll
cld
jmp
adc
cmpsl
stos
mov
js
cld
call
sub
mov
outsl
dec
enter
jne
add
ficoms
mov
cmp
mov
dec
pop
bswap
aaa
ljmp
insb
dec
cmp
int
sbb
cwtl
xor
call
ja
gs
int3
mov
mov
imul
push
dec
pop
jp
ret
xor
mov
mov
add
out
sbb
or
call
mov
inc
jp
dec
jne
push
aaa
fstpl
push
mov
cmpsl
and
scas
cltd
out
hlt
sar
js
sbb
mov
loop
dec
shll
jmp
xchg
push
aaa
frstor
mov
shlb
sbb
cld
or
pop
xor
cmp
fadds
xor
mov
in
test
aaa
mov
scas
jb
mov
cmp
ss
xchg
sub
add
pop
ljmp
xor
mov
xchg
sub
imul
mov
push
add
in
leave
add
and
outsl
push
lea
push
jo
cli
xchg
outsb
pop
xor
scas
fistl
dec
xor
or
push
add
out
jecxz
and
jmp
push
and
mov
call
sub
fldenv
jno
jle
je
insb
je
test
xor
mov
adc
inc
inc
jmp
push
add
je
push
fucomip
sti
ss
jne
je
adc
cld
push
rorl
xor
xor
xchg
add
into
pop
ljmp
fcoms
into
adc
cmpsb
mov
push
push
out
and
mov
es
call
xor
sub
sub
xchg
rcr
and
filds
pop
xor
and
aad
shll
push
hlt
mov
jmp
mov
aas
xor
xchg
cmpsl
jecxz
fstpt
push
test
add
out
fwait
adc
xchg
add
gs
cmpb
push
test
xor
add
mov
cmpsb
scas
ret
bndldx
add
scas
ret
je
cld
mov
inc
test
inc
adcb
ja
ret
fldt
adc
jbe
push
lret
xlat
mov
jle
pop
fstl
cmp
dec
aam
repnz
mov
dec
cmpsl
les
loope
add
mov
xchg
cmc
aas
aaa
pusha
lret
cmpsl
mov
leave
xchg
or
fists
cld
call
sbb
cmp
cmp
jb
xchg
stos
mov
xchg
adc
cmp
jmp
std
imul
ret
nop
mov
sbb
add
rclb
ljmp
sub
add
xlat
outsb
leave
pop
sub
push
inc
out
mov
movsb
loopne
jae
in
sub
mov
pop
mov
push
or
lea
jno
sbb
movsb
sbb
mov
adc
pop
and
mov
in
fwait
dec
in
test
jmp
xor
out
movsb
add
cmp
outsb
je
sub
shll
mov
stos
xor
jb
gs
jmp
fldl
sbb
jb
cmpsl
jg
sti
xchg
aas
std
push
sub
lds
mov
cli
aas
jmp
cmp
call
popa
cmp
adc
aam
jmp
outsb
add
pushf
cmp
outsl
in
insl
or
add
test
test
push
mov
lret
jno
add
xor
lds
incb
mov
push
test
xor
add
xor
add
lock
dec
xor
sti
and
add
add
gs
dec
mov
jp
fcomps
scas
dec
fcoml
cli
cld
jmp
add
aaa
add
ja
add
push
mov
or
inc
call
hlt
xor
enter
sti
sbb
call
aaa
push
inc
push
iret
lods
sub
mov
jmp
in
out
dec
inc
or
mov
inc
call
mov
or
jo
shl
mov
pop
mov
mov
lds
fsts
out
out
std
mov
push
ret
jmp
aaa
or
adc
sbb
dec
ss
or
adc
sbb
push
arpl
fldt
dec
xor
fisttps
push
out
rcr
into
ficoml
iret
out
push
xor
iret
out
cwtl
jns
xchg
cmp
pop
or
dec
scas
testb
cmp
xlat
mov
mov
pop
jmp
cmp
xchg
push
cld
lock
inc
loop
lret
sub
xor
mov
jb
icebp
ja
add
cmp
lods
sbb
lods
push
xor
cld
jmp
mov
sub
ljmp
lock
dec
arpl
xchg
xor
movsb
stos
cmp
xor
jle
xchg
inc
outsl
or
jmp
jb
cmp
xchg
sub
scas
inc
enter
in
mov
insb
stc
fnstcw
mov
or
xor
jmp
add
jmp
adc
pop
arpl
add
xchg
xor
shll
add
xor
sbb
in
and
pop
call
inc
lret
pop
jb,pt
mov
or
pop
mov
or
addr16
mov
sti
dec
jno
adc
push
cmp
fsubl
push
mov
cmpsl
imul
inc
fs
jbe
jne
test
add
iret
push
adc
pop
sub
incb
inc
push
and
call
and
std
xchg
jae
int
fmul
push
sbb
jp
add
std
mov
popa
mov
imul
into
sbb
pop
mov
xor
scas
out
adc
add
add
sbb
push
mov
jg
sbb
mov
jge
inc
aaa
call
daa
push
mov
adcl
adc
jae
jb
subl
inc
mov
sti
fldenv
test
ljmp
push
xchg
adc
fcomi
adc
fcomi
or
add
stos
cmpsb
jmp
js
add
gs
cmpb
fnsave
mov
push
decl
mov
fmuls
into
sub
js
xor
fsubrp
shl
sbb
in
mov
int
aad
stos
push
imul
xor
inc
inc
mov
add
xor
jmp
sbb
loope
aam
ja
add
xor
xchg
cmp
xchg
stos
jge
repz
jge
xor
cs
or
sub
icebp
jmp
xor
orb
and
dec
inc
je
mov
jmp
jp
or
insb
subl
jns
push
add
sbb
cltd
mov
je
xor
inc
add
add
mov
je
mov
jo
add
pop
data16
sqrtps
cmp
popf
xor
add
in
sbb
xlat
adc
xor
jae
test
jmp
mov
push
add
mov
jg
mov
push
mov
cmp
int
or
lcall
ret
add
jecxz
cld
pushl
ret
aas
stos
jmp
dec
or
mov
incb
std
pop
test
imul
test
pop
fildll
test
out
shlb
jl
jp
popl
mov
inc
xchg
jae
test
inc
lahf
int3
mov
ret
std
add
lods
push
out
scas
mov
add
sarb
pusha
repnz
imul
dec
inc
or
hlt
mov
aaa
xor
xorb
mov
cmpsb
fisttpl
in
cmpsb
fstpt
test
addl
mov
sbb
fcmovu
sub
fcomp
adc
loope
sbb
pop
stc
mov
mov
sub
xor
pusha
cmc
addb
cs
mov
scas
cmpsb
sub
adc
push
sarb
lret
add
leave
pusha
jp
scas
jns
add
xor
mov
pop
inc
push
aaa
mov
mov
lods
add
mov
add
xor
cmp
xor
xor
mov
xor
adc
xor
adcl
out
xor
jb
inc
mov
loope
lea
jmp
jbe
jns
cmp
int
repnz
daa
xchg
xor
imul
out
mov
std
cmp
ret
xor
std
rcr
add
sub
push
loop
add
pop
ljmp
dec
xor
add
xchg
fisttpll
add
add
push
push
cmpsb
scas
imul
pop
inc
clc
fwait
inc
jne
mov
test
pop
fld1
lret
dec
add
gs
pop
mov
pop
arpl
adc
push
mov
adc
cli
jmp
jecxz
test
push
jo
adc
cli
out
cld
decl
jo
insl
in
mov
aaa
into
xchg
out
mov
add
repnz
repz
ret
push
mov
repnz
cld
cmp
out
jne
bound
mov
aam
or
adc
fs
xchg
mull
hlt
movaps
adc
test
inc
inc
push
int
jb
jl
ret
cld
mov
loop
or
mov
add
mov
aad
mov
adc
inc
mov
add
mov
sbb
ljmp
jge
sub
mov
scas
sbb
or
out
stos
push
xor
pop
stos
adc
push
mull
and
roll
xor
negl
jle
mulb
sub
out
in
mull
outsw
aaa
xor
adc
lret
es
fs
mov
add
xor
mov
xor
cmp
in
adc
hlt
iret
mov
adc
lahf
movsb
sbb
stos
add
les
stc
bound
fsubrp
bound
shrl
push
stc
jmp
cmpsb
fisubs
stos
mov
adc
cmp
push
xchg
push
push
adc
xor
stc
insb
xchg
push
sbb
inc
adc
add
hlt
aad
lods
cmp
dec
icebp
insl
sub
add
idivl
cld
call
in
fdivr
cs
jmp
jae
fcomps
int
mov
add
mov
adc
mov
xorb
mov
mov
jmp
outsb
hlt
adc
mov
loopne
test
sub
adc
mov
loopne
dec
hlt
dec
comiss
mov
cld
decl
mov
push
test
sub
shr
cld
add
cmp
rolb
cmp
mov
test
cmp
test
mov
add
aas
hlt
out
mov
clc
out
cmp
sbb
mov
or
cmpl
clc
mov
divb
mov
in
or
sub
add
dec
xchg
mov
xor
cmp
js
sub
movsl
andb
add
jne
fisttpll
pop
mov
fldl
lock
negl
or
aaa
les
inc
pop
and
jns
pop
fld
or
add
jno
out
movsb
inc
inc
add
aaa
xor
js
fadd
popf
xchg
shll
cmp
jmp
or
and
or
pusha
mov
addr16
inc
sarl
dec
dec
ret
sub
cmc
clc
xor
xor
cs
pop
cld
inc
xor
mov
cmp
out
add
sbb
lock
jmp
cli
sbb
add
sub
lret
xor
lods
mov
add
xor
and
cmp
adc
sub
add
in
inc
jg
rorl
jne
mov
sbb
movsb
jmp
call
mov
mov
scas
iret
sti
gs
inc
push
bound
inc
stc
cmp
rcrl
add
clc
add
or
ret
stc
cmpl
sahf
insb
lret
rcll
mov
or
test
in
repz
or
insl
aaa
add
daa
repz
mov
ljmp
xchg
scas
add
fs
popa
push
rorl
pop
cld
decl
jae
aad
pop
push
xchg
sahf
add
pusha
incb
xor
sbb
xlat
push
hlt
movsl
fwait
or
sbb
adc
or
mov
add
xor
inc
push
into
test
aaa
mov
add
sbb
jae
pop
and
cmc
fsubp
cmp
xchg
jb
mov
scas
lahf
pop
sbbl
les
dec
in
mov
loopne
jne
jo
testl
icebp
test
ss
ljmp
dec
inc
sub
jae
push
ds
xor
or
dec
and
push
std
jp
or
jbe
xorb
pop
xchg
mov
mov
jl
push
xor
pop
ss
xchg
ss
push
iret
dec
or
push
cmp
add
scas
ja
fwait
cltd
shr
add
mov
icebp
or
or
sbb
jmp
int
iret
xchg
sbb
pop
jecxz
bound
sbb
pop
rorl
dec
ss
add
pop
dec
cmp
or
sub
push
xchg
or
mov
loop
je
or
inc
adc
mov
testl
or
jne
add
aam
inc
push
inc
jae
and
mov
add
insb
mov
ret
iret
sti
gs
inc
and
imul
ljmp
push
mulb
adc
idivl
add
fdivr
aas
jmp
xor
inc
lds
jg
das
inc
jo
rcrl
sub
add
iret
adc
sahf
not
xchg
mov
jge
or
xorl
sahf
stc
ds
fnstcw
leave
or
add
sub
jbe
sub
jns
jbe
sub
imul
jbe
sub
sub
push
imul
jbe
sub
imul
bnd
add
xor
adc
cmp
ss
ret
jns
jmp
inc
stos
cld
jmp
stos
cld
fnstcw
cld
pushl
lcall
sub
call
sbb
pop
into
loopne
add
push
xchg
cld
enter
mov
or
jae
incl
js
add
push
out
shlb
jnp
ss
xor
inc
sbb
mov
fistl
dec
mov
cld
pop
inc
adc
adc
mov
mov
out
push
adc
push
shll
xor
pop
lret
lcall
mov
pop
lcall
sbb
imul
add
add
sarb
cmc
mov
jmp
sti
mov
xor
ljmp
xor
cmp
rep
mov
xor
add
cld
jmp
mov
inc
repnz
add
sub
inc
push
mov
add
aam
inc
je
jmp
out
repz
lret
scas
and
jae
cmpl
jno
hlt
lret
xor
mov
mov
cmp
data16
and
lret
mov
sub
cmp
fcoms
dec
mov
rolb
cmp
jg
xorb
jmp
xor
and
or
sti
pop
pop
adc
lea
add
enter
dec
and
jmp
mov
popf
sub
xor
push
lea
dec
push
xor
jmp
mov
mov
sbb
xor
add
dec
and
adc
negb
jmp
jl
jo
fnsave
push
xor
sub
scas
adc
enter
add
pop
jne
xorl
jo
int
aas
and
mov
push
push
aaa
or
inc
sbb
or
aaa
fisttpl
mov
aas
add
jl
sub
dec
push
add
arpl
ja
jae
out
adc
aas
add
mov
arpl
ja
add
jg
sbb
add
cld
add
mov
je
addr16
addr16
jae
out
in
sub
pop
jmp
das
popa
ret
jae
mov
rcr
roll
jmp
xor
outsb
xor
push
pop
add
sbb
xor
push
push
jmp
and
addr16
xor
adc
lea
pop
pop
outsl
and
dec
push
adc
cltd
pop
jp
add
je
test
cmc
cmp
push
lds
outsl
dec
adc
ja
stc
add
inc
aaa
fs
dec
pop
sub
cmp
fdivrl
xchg
outsb
dec
push
sub
cld
psrad
out
sti
add
mov
clc
rdtsc
cmp
fldt
ss
xchg
sti
int3
jne
sbb
arpl
ja
pop
lods
das
xor
mov
xor
sbb
fsubl
cmp
aaa
and
and
mov
jmp
bound
mov
add
push
inc
pop
lcall
add
sub
pushl
cmp
or
mov
mov
aad
imul
ror
outsl
and
and
lret
sbb
clc
outsl
adc
pop
xor
bound
inc
or
or
fnstsw
add
pop
or
add
push
sub
ret
mov
add
loop
inc
add
or
outsb
push
xrelease
mov
outsl
jo
leave
push
xor
add
pop
aad
hlt
xchg
fldcw
inc
mov
enter
or
jl
add
xchg
add
mov
inc
aaa
pop
and
jecxz
push
push
fildll
std
mov
pop
inc
sbb
add
add
out
jmp
sbb
push
ret
xchg
add
jge
xor
sub
sub
and
mov
fwait
jle
addr16
test
push
hlt
flds
jns
adc
jae
int3
and
test
arpl
cmpsb
adc
xor
add
popa
inc
daa
inc
loope
ja
jno
xor
loop
scas
sti
adc
push
jae
pop
stos
push
mov
adc
cmp
pop
shrl
ds
jbe
lret
imul
xor
rclb
les
daa
imul
lret
fbstp
mov
or
jp
loope
xorl
xor
mov
out
orl
icebp
and
shrb
sti
push
loope
jmp
mul
daa
jmp
out
adc
and
add
ret
or
arpl
adc
rcrb
push
jb
pop
cld
jno
xor
ljmp
out
xchg
mov
int3
and
jbe
mov
arpl
mov
add
push
cld
dec
fnstsw
add
dec
or
jmp
inc
sbbl
pop
jle
call
fldl
add
in
inc
add
mov
mov
leave
aaa
add
shrl
cld
xorl
jo
iret
addl
ss
jne
add
je
mov
jne
push
cld
and
out
inc
adc
into
xor
inc
add
pop
jmp
ss
push
inc
add
xchg
pop
pop
add
je
mov
mov
test
push
pusha
mov
mov
clc
push
pop
push
js
andb
clc
dec
and
push
push
int
dec
std
inc
jnp
inc
aaa
pop
lds
or
add
decb
cld
xchg
mov
outsb
cld
cld
and
jns
sbb
xor
cmp
xchg
pop
push
pop
sbbl
add
testl
lods
mov
cld
mov
cld
testl
mov
sarb
and
mov
add
dec
loopne
add
popa
jmp
jo
pop
adc
ljmp
mov
lock
and
call
inc
scas
in
push
pop
addr16
add
sbb
data16
shr
mov
mov
stc
lods
jns
push
mov
xor
inc
aaa
stos
addl
xor
test
mov
cmp
jmp
mov
push
insb
pop
les
push
loopne
cs
adc
fisubrs
sti
xchg
shlb
cmp
add
loope
addr16
in
push
mov
mov
add
mov
stos
test
mov
insb
mov
rorb
or
fstps
push
stos
lea
lds
lea
cld
call
or
out
add
push
rep
or
mov
stc
pop
pop
pop
addr16
pushl
add
add
mov
push
mov
in
test
jecxz
fwait
xor
shrl
mov
ss
mov
lcall
add
push
jbe
sti
decl
dec
call
aaa
imul
xchg
movsb
idiv
fldcw
adc
aaa
push
inc
cld
mov
repz
inc
add
cmp
or
xor
add
arpl
pop
ss
dec
mov
push
inc
aaa
pusha
inc
clc
pop
mov
lcall
addr16
mov
lret
xorb
aaa
repnz
mov
jmp
in
bnd
mov
ljmp
push
std
mov
rorb
cmp
cld
stos
out
aad
mov
pop
js
jb
cmp
cld
orb
inc
add
aaa
mov
mov
cmp
testb
arpl
push
xchg
mov
out
iret
roll
xor
push
mov
dec
push
outsb
divl
and
jg
stos
add
ljmp
mov
add
cmp
aaa
scas
in
jle
xor
add
add
mov
cmp
sbb
add
add
jg
add
test
ljmp
or
mov
addr16
fstpt
jne
scas
lock
insb
jo
push
inc
xchg
outsb
cld
dec
mov
or
jae
pushf
sub
mov
mov
mov
cld
push
push
jne
add
pop
pop
pop
push
push
add
dec
mov
mov
aad
gs
data16
pushl
bound
sbb
add
xor
adc
test
or
push
cli
or
outsb
in
inc
add
adc
push
cli
adc
mov
inc
add
sbb
xchg
xchg
lret
fnsave
mov
add
pop
test
out
pop
add
stos
cs
jbe
ljmp
dec
xor
add
pop
inc
clc
pop
add
les
or
in
mov
lea
pusha
cmc
push
dec
lcall
inc
enter
xchg
enter
aad
mov
add
call
lods
xchg
push
std
add
and
inc
aaa
cmp
mov
out
enter
sbb
scas
enter
adc
xchg
enter
or
fwait
enter
cmp
mov
pop
mov
pop
jle
sbb
or
orb
push
fisttpll
out
cld
int
cmpb
inc
fsubr
pop
jmp
jo
pop
ret
xor
jle
add
cmpsl
sub
jo
call
lock
mov
aaa
xor
cld
push
data16
push
repnz
fimull
mov
xor
aaa
stos
lods
xlat
mov
ljmp
ss
mov
add
pop
arpl
leave
shll
jl
out
ret
add
cmp
add
lret
add
mov
stos
inc
pop
push
rcr
sahf
add
lea
insb
sti
sub
push
les
out
mov
call
orl
outsb
int3
andb
mov
mov
fidivs
mov
push
xor
adc
add
adc
cltd
or
push
lahf
add
xchg
inc
fstpl
je
mov
stc
jmp
xor
addb
lret
or
shll
decl
mov
outsl
movsb
push
int3
inc
decl
ss
xchg
fucom
inc
sbb
add
pop
xor
mov
xor
xor
fbstp
add
adc
add
lods
aad
fidivs
mov
jmp
add
xor
mov
add
sbb
pop
popa
outsb
loope
sahf
xor
pop
adc
jge
faddp
push
cwtl
inc
jo
pop
pop
outsb
fldl
jge
ja
jbe
push
pop
pop
xor
pop
lods
or
icebp
xorb
imul
int
call
or
or
aad
lds
mov
pop
dec
dec
std
add
or
add
ljmp
notl
lret
jbe
movl
fdivs
xlat
rorl
in
cmc
into
jbe
orl
mov
inc
push
or
cvtps2pi
sti
mov
xor
push
clc
test
pushl
imul
out
push
xor
jp
sub
add
pop
jg
add
push
aas
test
rorb
mov
mov
cmp
lret
repz
fidivl
pop
mov
clc
sbb
mov
in
jmp
mov
dec
out
xchg
mov
and
add
jb
sbb
push
or
movsb
nop
pop
jmp
mov
fs
mov
cld
jl
mov
in
pop
jns
jmp
dec
mov
je
test
cld
into
mov
sbb
xchg
movswl
mov
sti
scas
repnz
lock
dec
jo
pop
mov
cmp
sub
pop
xchg
xor
jmp
js,pt
outsb
sub
test
jo
cmp
pop
add
mov
je
mov
stc
add
addr16
int
push
ljmp
mov
add
mov
clc
mov
addb
pop
and
addb
aas
or
mov
cld
pop
pusha
out
rorl
mov
lea
mov
xor
push
dec
lods
jecxz
and
cmc
jne
add
arpl
jmp
sub
es
ret
adcb
pop
cld
jmp
cli
cld
push
and
or
lahf
stc
xchg
decl
pop
je
or
int3
in
jb
pop
adc
xorb
inc
arpl
in
adc
aas
add
push
std
stos
xchg
push
call
xchg
cmp
xchg
stc
xor
out
pop
add
or
cmp
lds
fdivs
in
push
xchg
add
xchg
pop
fmul
jns
shrl
add
dec
push
iret
mov
mov
dec
fisttpll
addr16
or
add
cmovae
scas
not
jl
mov
out
inc
adc
dec
js
stc
add
addr16
mov
jne
add
mov
mov
lret
push
jmp
jo
hlt
and
daa
call
decl
or
outsl
pop
cmp
adc
jl
add
stos
adc
sbb
xor
and
add
test
scas
out
hlt
add
push
scas
adc
mov
lea
cld
cld
js
inc
jmp
jns
push
jb
add
pop
or
and
xor
xchg
or
push
cmp
pop
pushf
push
fs
test
mov
jl
jmp
inc
hlt
add
out
mov
sti
cmp
push
mov
mov
nop
push
sub
adc
cli
or
ss
daa
jne
pop
sub
rcrl
xor
jo
data16
add
lcall
je
dec
jmp
add
mov
pusha
dec
je
xor
jne
jbe
enter
push
fcompl
jmp
mov
jl
add
jmp
xorl
outsl
sbb
cmp
adc
push
clc
pop
jmp
bound
stc
or
adc
add
cmp
lds
stos
sti
mov
sub
aaa
mov
sti
mov
lea
sub
push
test
jl
out
pop
jb
pop
cld
jmp
aam
xchg
add
jmp
pushf
jmp
jl
aas
adc
add
jbe
sbb
ljmp
loopne
sbb
pop
xchg
adcb
icebp
js
sub
pop
sbb
add
jg
sub
fwait
js
pop
aas
push
mov
adc
addr16
xor
inc
and
mov
xor
nop
fsubrs
ljmp
cmp
cmp
mov
into
xor
mov
insl
inc
pop
dec
mov
out
je
jg
xor
add
push
gs
jle
jmp
jne
out
lods
fcmovnu
ffreep
jmp
mov
xor
movsl
pop
fwait
add
outsl
push
push
sub
ja
pop
pop
mov
shlb
outsl
icebp
and
mov
cld
xlat
in
cmp
adc
push
add
aam
inc
inc
jmp
jl
push
xchg
mov
out
add
adc
xor
inc
add
in
das
and
neg
jnp
ljmp
inc
addl
jl
in
jmp
insb
jo
popa
cltd
scas
mull
jge
pop
insb
push
sub
inc
test
pop
test
push
adc
or
cmpsb
pop
pop
incl
add
sub
fisttpll
jb
dec
cmp
xchg
jg
push
mov
popf
test
je
mov
jmp
mov
add
dec
sub
jmp
aaa
cmp
data16
push
pop
xor
and
mov
repz
pushl
sbbb
add
das
pop
clc
jno
fstpl
dec
mov
aaa
mov
jmp
mov
imul
stc
jmp
jp
aaa
popf
decl
mov
in
pop
push
jmp
add
scas
xlat
out
pop
out
xor
xchg
push
xlat
lret
push
dec
je
call
sbb
repnz
incl
add
and
push
pop
inc
xchg
jmp
pop
mov
xchg
in
out
jmp
loopne
out
int
test
insl
ljmp
test
fstl
es
pop
popa
or
or
xor
mov
gs
ja
pop
dec
xchg
add
es
jg
push
scas
loop
mov
adc
mov
mov
fildll
or
jecxz
je
push
lcall
out
add
sbb
sti
loop
jae
jge
mov
clc
jb
test
ret
adc
and
cmp
pop
inc
pop
mov
cmp
je
add
in
test
jmp
inc
cmpsl
sti
xchg
dec
cmp
jmp
xchg
cmpsl
xchg
or
cmpsl
sti
outsb
std
or
sbb
adc
xor
aas
out
inc
cmpsl
jb
xchg
inc
jge
hlt
xor
repnz
cmpsl
sti
push
aaa
add
sbb
sahf
hlt
xor
cmp
mov
out
ljmp
mov
add
push
xchg
outsb
or
andl
adc
call
pop
pop
mov
incl
add
scas
repnz
stos
push
or
add
test
cmp
stos
dec
call
out
or
jecxz
ret
add
aaa
incb
mov
sbb
stc
out
or
xchg
cmp
js
mov
je
adc
jl
aaa
popf
cmp
cmc
movsb
decl
stos
jns
mov
add
test
xlat
sbb
fcom
pop
fildl
add
mov
mov
adc
push
dec
loope
out
lea
subb
pushl
inc
sbb
sbb
inc
dec
adc
xchg
cwtl
inc
daa
in
mov
out
negl
lret
out
cld
mov
or
ja
out
mov
add
lock
loopne
scas
sub
mov
loopne
imul
ret
add
sub
je
jmp
or
fbstp
out
mov
pop
fistpll
add
in
js
xchg
fbstp
and
push
jnp
or
add
mov
das
outsl
ljmp
mov
testb
je
dec
sbb
push
divl
add
inc
jmp
mov
insl
sti
add
mov
sbb
ja
adc
cmpsl
sti
gs
and
sbb
push
pop
inc
cmc
xor
bound
adcb
jne
mov
or
add
fsubr
push
sahf
add
loope
pop
insb
hlt
and
push
cmpsl
out
inc
je
in
aaa
mov
lahf
mov
enter
arpl
leave
push
jo
mov
fidivrl
mov
add
in
adc
push
push
cwtl
sub
rorb
jo
push
cmp
leave
xor
call
lcall
add
add
mov
cmpb
push
mov
add
push
or
push
cmpsb
div
jmp
push
fmuls
inc
add
xchg
cld
incl
sti
cld
adcl
or
aaa
aaa
add
aaa
je
xchg
incl
cmp
pop
je
call
pushl
inc
push
adc
rorb
add
ljmp
add
es
in
pop
push
out
cld
or
lock
int
xchg
mov
adc
mov
push
push
push
rclb
fdivr
rcrb
or
cmc
add
aaa
push
inc
in
pushf
pop
mov
and
incl
ljmp
xor
imul
add
cmp
inc
dec
dec
push
xchg
jmp
mov
pushf
hlt
xor
imul
test
mov
aaa
clc
mov
add
dec
add
in
loop
ret
fldt
loop
iret
ja
adc
and
mov
out
and
insl
es
add
mov
xchg
cmp
push
jmp
xor
les
push
mov
inc
jl
test
xor
push
mov
stos
xor
pop
jb
sbb
popa
cmp
ljmp
mov
mov
jmp
sti
mov
ret
pusha
ja
dec
into
xchg
mov
inc
or
dec
add
jae
jmp
cli
out
clc
jo
pushf
loopne
test
pop
shr
aaa
mov
cmp
popa
inc
add
mov
in
adc
xor
lret
or
jnp
pop
xor
cmp
test
mov
xor
add
outsl
outsl
adc
mov
add
xor
adc
push
rolb
push
lcall
mov
in
add
xchg
in
or
sbb
mov
std
push
or
inc
stos
xor
xor
mov
movb
cmp
sbb
jae
aaa
or
daa
lahf
jnp
std
mov
jle
pushl
adc
mov
outsl
push
jae
mov
cmp
jnp
aaa
pushl
fldenv
ret
call
lods
fmul
mov
mov
adc
jo
iret
iret
mov
mov
adc
je
xlat
jecxz
xchg
aas
jl
adc
sub
or
push
aad
inc
xor
rcrb
das
arpl
cmc
mov
loope
lcall
out
nop
xor
flds
add
dec
addr16
inc
add
iret
add
dec
ljmp
dec
rcll
out
imul
pop
sub
aam
cmp
nop
push
xorb
or
inc
in
inc
aaa
sti
mov
dec
dec
jbe
inc
dec
and
dec
cmp
sub
repz
mov
pop
inc
adc
xor
pusha
arpl
and
ja
and
dec
lea
jge
mov
or
bnd
dec
mov
fs
adc
mov
call
sarl
fstp
hlt
xor
jge
hlt
add
inc
jns
test
movsb
xchg
sti
push
add
and
mov
adc
fadd
inc
inc
jmp
addr16
push
add
inc
lahf
adc
push
sub
pop
pusha
push
sub
jo
dec
mov
mov
push
add
dec
hlt
ljmp
dec
push
mov
movsb
xchg
lret
dec
cmp
adc
outsl
pop
stos
test
fcomps
call
fnstsw
jne
or
push
inc
fdivr
adc
add
out
ljmp
cmp
add
pop
xchg
pop
lea
ss
jbe
pushl
andb
jne
push
fdivs
push
ss
gs
jg
adc
je
adc
lahf
aas
add
pop
xor
je
mov
mov
es
push
dec
dec
mov
add
pop
push
mov
hlt
mov
adc
aas
add
mov
loopne
in
fildl
decl
xor
rclb
sbb
mov
mov
decl
cmp
fs
cmp
inc
jl
inc
aaa
mov
rcrl
xlat
imul
lcall
divl
xor
mov
add
add
mov
ljmp
xor
cmp
add
pop
inc
stos
add
cli
outsb
rorb
loope
add
cmp
out
xor
add
cvtpd2pi
pop
int
outsl
imul
add
out
add
mov
pop
aaa
xor
ret
sub
shll
sub
insl
mov
adc
mov
add
xor
jne
push
mov
add
test
jle
xor
mov
push
in
fsincos
hlt
xor
mov
cwtl
sti
bound
mov
xchg
imulb
or
shll
and
or
das
sub
dec
test
fcmovne
in
adc
fisubs
mov
fs
cld
xchg
sti
push
or
sti
pushf
and
pop
lds
jne
or
es
or
inc
and
mov
call
mov
adc
test
mov
test
enter
test
mov
or
push
cwtl
cld
adc
or
dec
mov
pop
jno
inc
xchg
cmp
dec
dec
movhlps
lcall
aas
and
fs
mov
add
lea
add
cld
jmp
hlt
add
into
jecxz
aaa
ds
adc
push
inc
add
add
inc
cltd
xchg
out
pop
jno
cmpsl
xor
decl
fsubs
xlat
mov
pushl
incb
jbe
test
jl
pop
or
dec
add
sahf
addl
push
sti
jo
call
push
incl
mov
xlat
dec
pop
pop
sarb
xor
incl
outsb
std
sub
popf
daa
arpl
jmp
repz
pop
adc
inc
mov
sub
dec
sbb
shrb
mov
add
xor
inc
adc
shll
insl
inc
pop
inc
add
pop
cmp
das
outsb
out
ss
dec
pop
outsb
sub
mov
adcl
lcall
mov
daa
aas
mov
push
aas
xchg
xchg
daa
mov
ljmp
xchg
add
pop
imul
pop
jmp
xor
je
fs
inc
lds
mov
cld
lods
test
mov
sti
jmp
add
mov
xor
negb
adc
cmp
jmp
dec
call
addr16
sub
xchg
cmp
xor
ret
cmp
xchg
jne
andl
xchg
xor
pop
lret
stos
jl
pop
std
call
jb
in
push
decl
inc
shrl
and
push
mov
and
dec
jmp
mov
push
incl
add
dec
and
mov
cld
call
in
and
sbb
push
mov
sti
or
fidivrs
mov
dec
adc
push
icebp
cld
and
inc
jb
je
cld
push
call
sar
and
daa
in
and
mov
dec
inc
mov
and
xor
jne
or
and
pop
pop
and
jns
cmp
add
xlat
std
add
lret
es
addb
mov
es
cld
mov
mov
push
mov
xrelease
jbe
daa
pop
inc
insb
aaa
adc
pop
mov
cwtl
int
mov
sub
es
rclb
dec
and
push
cmp
xor
ja
dec
jecxz
insb
aaa
je
sti
test
xor
insb
pop
add
adc
pop
outsl
inc
adc
fldl
or
mov
faddl
aaa
mov
sahf
mov
pusha
es
add
adc
dec
cmc
mov
push
mov
cltd
sbb
mov
adc
sbb
jmp
inc
aaa
mov
push
aaa
or
push
sub
ror
mov
push
pop
add
shll
push
sbb
decb
adc
jle
add
sub
icebp
pusha
xor
push
inc
xchg
sbb
out
hlt
cmpsl
jg
jmp
cs
add
xor
add
jae
arpl
mov
bound
in
xchg
inc
jae
mov
mov
std
pop
jbe
jle
pop
adc
mov
ret
inc
mov
mov
flds
add
repz
iret
leave
pop
addb
popa
cmp
insl
xchg
add
mov
lahf
cmp
stos
mov
jmp
add
cmp
add
pop
testb
jns
mov
outsl
adc
pop
xor
cli
jae
inc
jmp
mov
pop
mov
icebp
add
and
inc
push
mov
je
mov
cld
adc
popf
dec
add
inc
adc
add
ss
iret
aaa
xorl
cmp
pop
stc
and
into
add
pushl
mov
incl
call
add
hlt
cld
push
aaa
stos
push
or
pushf
cmp
aaa
and
adc
add
fiaddl
lods
ffreep
xorb
xor
movb
enter
mov
inc
das
stos
pop
or
shl
xor
pop
icebp
pop
inc
xor
or
mov
decl
push
sbb
aaa
adc
mov
cs
xchg
dec
or
mov
jmp
daa
pop
add
push
iret
or
std
mov
sar
add
and
clc
inc
aaa
mov
loope
in
jge
mov
sbb
inc
adc
fsubl
cmp
jmp
leave
pop
test
push
mov
jbe
fistps
ljmp
xor
lock
cmp
add
movsb
filds
and
jl
bound
jmp
mov
ljmp
jecxz
ds
jecxz
lods
sbb
leave
and
in
mov
adc
cmp
inc
mov
jle
adc
insb
je
add
sub
les
in
lods
js
add
xor
adc
fs
add
lcall
dec
add
imul
fucomp
and
sub
add
out
shlb
sub
mov
add
pop
mov
lea
or
std
xor
jne
sbb
add
sahf
xor
push
adc
cmp
push
inc
lahf
cld
jne
je
test
movsl
adc
add
repz
out
mov
cmp
je
pop
jmp
mov
bnd
or
cld
fidivs
cld
enter
stos
js
xlat
fwait
js
cmp
ds
adc
movsl
jno
cs
cmp
ret
js
push
mov
dec
push
pushl
sub
aas
add
mov
fwait
pushl
or
das
aaa
fwait
jmp
fsin
push
sahf
ss
js
les
or
add
je
jbe
out
popa
cld
aaa
jae
je
lcall
mov
std
dec
inc
aaa
lods
ret
aas
add
rol
dec
lea
ret
iret
mov
push
add
pop
mov
pushl
loopne
hlt
xor
jns
mov
sub
inc
mov
adc
mov
push
es
fistpl
xor
and
in
pop
xor
sarb
pushf
hlt
xor
add
rorb
out
std
cmp
push
out
mov
jmp
loope
xor
mov
sti
sub
jmp
or
pop
aas
or
and
pushf
dec
cmp
mov
repz
sbb
add
xlat
inc
aaa
mov
lds
add
xchg
mov
xor
xor
xchg
adc
pop
stc
aaa
cmp
add
imul
jnp
in
outsl
es
sbb
xchg
faddl
call
push
cmp
cmpsl
repnz
fcompl
cmc
jae
adc
aaa
jmp
inc
add
cmpl
dec
ss
mov
adc
popa
mov
push
adc
add
cmpl
push
dec
cmc
cmp
cmpb
xor
cs
cmc
add
dec
inc
add
aad
scas
dec
inc
add
dec
cmc
mov
jne
mov
cmp
cltd
mov
add
mov
add
push
incl
add
mov
filds
test
dec
add
mov
ds
stos
sti
cwtl
push
into
jne
sbb
cmc
add
or
mov
add
dec
push
mov
push
mov
push
push
loopne
sbb
sbb
pushl
xchg
dec
push
pusha
inc
push
push
mov
or
inc
add
aaa
sbb
jae
fidivrl
loopne
addr16
adc
lcall
popa
adc
mov
ljmp
cld
add
mov
mov
fcoml
movb
add
addb
enter
xor
add
xor
sub
ss
fimull
incb
ret
xchg
mov
mov
xchg
ljmp
xchg
xor
pop
mov
sub
je
adc
xchg
lret
inc
hlt
jmp
push
inc
je
cmp
xor
xor
xor
pop
or
jp
bound
loop
inc
xchg
aad
aaa
mov
pop
push
out
mov
xor
mov
add
add
cmp
jp
mov
nop
adc
inc
xor
jmp
fs
jmp
leave
sub
xor
jb
add
add
pop
mov
sti
sbb
jns
cmp
test
xor
mov
sti
xchg
in
test
xchg
sbb
loope
hlt
xor
outsb
in
jne
add
mov
or
jmp
testb
clc
popa
and
stos
push
xor
push
popa
or
and
call
dec
cmp
jmp
scas
fmuls
dec
mov
jle
rol
cld
push
data16
jae
into
or
add
lret
xchg
push
add
jge
es
incl
add
ss
inc
pop
push
add
icebp
add
xor
lcall
inc
push
cmp
fwait
add
sbb
dec
xor
out
mov
adcb
mov
mov
sbb
dec
clc
iret
jnp
aaa
fwait
inc
jp
push
add
fwait
cmpsl
pop
rclb
popa
or
cmpsb
sar
dec
lods
inc
loope
mov
jne
call
jle
daa
aad
ss
jae
dec
push
push
ret
xchg
push
xchg
dec
mov
ja
and
call
insl
movsb
mov
xor
nop
jne
cltd
sub
aam
popf
subl
jmp
stos
add
addr16
out
out
cmp
ljmp
ja
insl
ret
inc
cmp
lret
inc
mov
push
hlt
push
sbb
and
mov
inc
xchg
xor
lds
xorl
mov
pop
fisubrs
xor
jle
mov
xor
shl
xor
push
jmp
xor
xor
sub
divb
jbe
mov
add
subb
mov
loope
mov
mul
xchg
dec
xor
inc
push
jp
sbb
sbb
movsb
cmp
shl
ljmp
mov
xor
mov
xchg
xchg
pop
hlt
push
sbb
push
cld
mov
cmp
dec
jo
jg
lcall
ret
loopne
add
add
test
jbe
into
std
dec
pop
ss
sub
mov
cld
adcl
inc
or
jecxz
xor
pop
dec
or
dec
int3
or
cmp
cld
xor
loopne
pop
daa
jae
add
roll
mov
shll
testl
rorb
movb
add
aas
add
sbb
dec
cmp
add
out
mov
hlt
mov
dec
add
add
scas
adc
je
fs
inc
lret
jmp
jbe
inc
aaa
scas
hlt
mov
mov
lret
jmp
xchg
into
adc
out
push
mov
mov
lret
jmp
inc
add
scas
das
mov
mov
dec
add
add
inc
adc
scas
mov
mov
dec
add
inc
aaa
shll
jae
hlt
jmp
add
jae
inc
aaa
sarl
divl
inc
roll
es
add
xchg
pushf
inc
aaa
aad
adc
xchg
lods
sub
xor
inc
aaa
aad
emms
xor
adc
sub
inc
aaa
aad
emms
xor
repz
movsb
sub
add
hlt
xchg
inc
aaa
aad
adc
xor
bound
sub
adc
jg
xor
dec
inc
aas
jmp
xor
adcb
mov
dec
stos
leave
aas
jmp
add
cmp
mov
std
inc
hlt
add
xchg
pop
push
test
jp
mov
mov
enter
ret
adc
xor
loopne
jb
mov
dec
mov
lahf
adc
xor
add
jp
mov
mov
jmp
cmp
and
sbb
add
mov
adc
adc
add
mov
mov
in
loop
inc
dec
adc
pusha
or
add
lods
inc
mov
push
adc
leave
clc
add
mov
adc
pop
clc
add
jge
mov
into
adc
adc
or
add
insl
popa
mov
into
sbb
adc
add
mov
add
ret
cmovo
stos
mov
hlt
mov
dec
add
add
ret
adc
ljmp
dec
dec
add
add
ljmp
daa
lret
ljmp
arpl
mov
mov
jmp
xor
mov
hlt
cltd
dec
mov
push
inc
aaa
jae
ja
mov
or
ja
dec
mov
fcomps
push
xchg
stos
ja
aaa
mov
bound
xchg
out
lock
cmp
xor
arpl
mov
aas
add
in
inc
aaa
sarl
divl
xchg
je
jl
mov
jge
fwait
mov
jmp
mov
cld
mov
sub
imul
mov
add
xchg
inc
aaa
mov
mov
fbld
mov
gs
test
mov
inc
aaa
mov
jmp
scas
jecxz
cwtl
add
push
shlb
xor
ja
add
jnp
xorl
sub
mov
pushf
xor
xor
lods
loopne
dec
nop
data16
loopne
sub
jmp
xor
jns
lds
lods
xor
mov
add
shl
pop
add
xor
lcall
jecxz
jne
jmp
loope
jbe
addr16
ljmp
jmp
mov
jmp
ret
ja
insb
stos
test
push
stos
mov
sbb
ja
loope
xor
add
out
dec
sbb
add
mov
std
ret
mov
cld
jmp
pop
cmc
ljmp
ds
add
cli
sub
leave
mov
cld
pushl
mov
cltd
mov
lock
mov
dec
mov
cs
mov
cld
call
add
fldenv
or
push
lods
aam
ret
imul
cld
decl
dec
or
shrb
add
push
ja
add
lcall
scas
cld
subb
mov
mov
cld
mov
push
lds
je
sub
mov
mov
inc
lret
pushf
dec
ret
mov
sarl
pop
mov
mov
push
add
jno
dec
mov
out
and
jns
cmp
sbb
mov
decl
js
push
ja
add
or
jae
add
xor
add
pop
mov
sub
les
xor
sbb
xor
add
mov
mov
mov
jne
cltd
mov
push
flds
in
sbb
sub
pop
push
shrb
mov
add
xor
cmp
jle
lds
dec
inc
push
filds
lcall
jae
sbb
xchg
fidivl
ljmp
jle
pop
insb
ret
movsl
sub
out
movsl
pusha
aad
sysenter
popa
dec
repz
sbb
stc
add
daa
pop
sti
popf
sub
xor
fucompp
in
cmpl
push
push
addps
aam
es
jmp
jns
pop
jno
xchg
mov
loopne
call
and
sub
mov
in
std
ror
js
xchg
add
repnz
ret
xor
cmpsb
inc
rcl
ja
pop
jae
inc
mov
je
add
mov
gs
jne
out
sub
aam
js
add
inc
add
mov
lcall
add
cwtl
shl
sub
dec
inc
test
pop
int3
imul
pop
pop
mov
lods
xchg
add
jb
into
shlb
ja
bound
pop
xchg
in
jbe
sbb
std
dec
pop
xorb
adc
leave
aas
call
dec
pushf
add
iret
xlat
es
out
lods
inc
pop
jge
fisubrs
pop
test
and
adc
mov
lods
mov
push
mov
mov
sti
fldcw
fadd
push
add
pop
cli
loop
add
sub
push
fbstp
stos
inc
sub
faddl
adc
hlt
push
push
loopne
push
mov
cmpsb
and
cld
inc
jae
inc
mov
shll
sub
jbe
or
repz
lock
addl
stos
sar
fnsetpm(287
ret
xor
outsb
lods
pop
xor
or
sbb
add
movsb
and
inc
stos
xchg
pop
cmpsb
dec
sub
sub
pop
mov
xor
add
cmpsl
lods
lret
pop
hlt
aaa
inc
aaa
inc
pop
outsb
shlb
stos
xchg
stos
mov
and
inc
aaa
mov
incl
fidivs
sbb
xor
sti
mov
jne
dec
xchg
xor
add
jne
repz
jmp
mov
add
jmp
fldl
add
out
add
jne
shlb
jo
pop
mov
hlt
inc
adc
dec
push
mov
cmpsl
insl
jnp
icebp
xor
clc
mov
xor
mov
out
popa
enter
test
imul
cmp
sti
popf
or
mul
mov
fnstsw
hlt
das
ret
xchg
cmp
pop
xor
add
xor
xor
dec
pop
cmpsl
push
aas
test
call
cmc
nop
cmp
add
dec
cmp
mov
add
sub
arpl
aas
add
aaa
adc
xchg
js
setnp
cmc
call
test
js
mov
xchg
or
cltd
adc
sub
pushl
inc
inc
add
add
cld
je
jecxz
xor
inc
add
lahf
aad
test
xor
subl
push
push
insl
jbe
divb
inc
lcall
cmpsl
cmp
pop
jmp
dec
adc
lds
cmc
stos
pop
call
out
lods
test
out
popf
lods
cld
mov
or
add
sbb
mov
ljmp
cmpb
arpl
sub
inc
rorb
xlat
mov
xor
mov
cmpsl
cli
mov
icebp
aas
add
cld
lcall
xlat
les
xor
subl
int
cmpsl
xorl
subb
notb
cwtl
add
orl
shrb
mov
sub
int
stos
and
pop
jle
inc
mov
outsb
jnp
cld
add
outsl
cwtl
imul
loop
mov
xor
sbb
das
dec
stos
add
xor
aas
mov
popa
inc
cmp
das
das
mov
xor
scas
jne
divl
test
push
fiadds
faddl
add
pop
push
out
xor
aaa
hlt
fnstsw
into
pop
cmp
sbb
add
in
jmp
xchg
add
push
jmp
jb
cmp
hlt
and
inc
jmp
xor
fldcw
mov
xor
push
pop
mov
add
xor
cld
cmp
add
xor
andl
xor
cltd
aas
mov
push
testb
cmp
push
inc
mov
bound
xchg
mov
or
outsb
pop
in
outsl
inc
dec
push
or
mov
xchg
pop
xor
loopne
add
dec
lock
out
ret
out
shll
loope
je
xor
ror
dec
or
cli
jmp
fiadds
add
add
or
inc
adc
xor
xor
push
mov
or
add
xor
mov
xchg
add
aaa
pop
outsl
fstl
mov
or
outsl
sub
push
and
test
pop
dec
push
or
ds
xor
mov
inc
jae
inc
add
lret
push
or
pop
jle
clc
add
ds
add
fldcw
out
out
fisttps
in
pop
xor
xor
jae
out
popf
or
je
gs
sti
je
pop
mov
dec
dec
push
xor
pushf
les
test
ss
pop
je
push
cld
mov
pusha
mov
aaa
xor
cmpl
pop
push
mov
insl
jmp
mov
add
jge
jmp
loopne
pop
gs
insl
outsb
mov
fldenv
mov
cmpsl
arpl
inc
scas
sbb
inc
push
ja
insl
cltd
sbb
mov
push
cld
cmpsb
lret
push
adc
lahf
inc
stos
add
xchg
adc
hlt
jmp
jmp
shrl
mov
mov
in
test
flds
add
xor
jmp
sub
sbb
ret
xor
mov
nop
inc
cmp
hlt
xor
push
rcll
jmp
insb
jmp
lea
xor
sub
push
jb
cli
push
mov
add
sti
ds
pop
aaa
cmp
mov
jmp
mov
or
rol
mov
add
hlt
cmp
or
ret
and
jmp
mov
call
outsl
imul
sbb
lea
xor
subb
cli
mov
adc
lods
dec
push
cmpsb
xchg
cmp
test
int
push
mov
or
jmp
adc
add
ds
test
std
sbbl
push
ljmp
add
add
outsb
clc
fnstcw
sti
mov
arpl
clc
aaa
xlat
int3
out
xchg
test
inc
pop
lods
sbb
call
cmpb
pop
pushl
inc
cli
test
fsubl
dec
call
mov
push
icebp
mov
aaa
xchg
cmp
ss
ss
dec
mov
cmpsl
mov
lods
adc
jb
dec
or
and
fists
cld
call
lret
xchg
icebp
cmpsl
sbb
cmp
ljmp
ret
mov
xlat
jbe
jae
sbb
ljmp
imul
sbb
bound
xor
mov
pushf
clc
fcmovnbe
ljmp
jae
mov
push
imul
mov
das
xor
xchg
xor
add
xor
add
xor
mov
pop
mov
add
aad
mov
push
add
aas
inc
mov
addr16
ljmp
xor
jecxz
faddl
aam
rclb
add
cmc
clc
cltd
pop
inc
and
xor
xor
shrl
stos
addb
xor
xor
mov
shlb
cmp
cmpsb
xchg
fcmovnb
movsl
adc
mov
mov
pop
into
xor
cld
mov
lahf
cmp
aad
fsubs
cmp
pop
pushl
add
jg
lea
fwait
lret
dec
push
and
loop
cld
mov
fmuls
pop
sti
dec
int
or
xchg
jecxz
sti
xchg
cld
push
mov
push
mov
and
sahf
xchg
xor
in
cld
call
jg
xchg
scas
roll
pop
xor
adc
push
or
push
mov
clc
push
es
dec
xchg
xor
pop
push
cld
jmp
test
inc
push
arpl
add
pushf
xor
add
das
cld
pushl
pop
mov
xchg
out
aas
aaa
aam
clc
mov
and
xchg
cmp
mov
and
out
cld
nop
sarb
sbbb
and
xor
cld
pop
add
std
inc
add
aas
aaa
sarl
clc
add
mov
xchg
sub
sub
mov
and
pop
xor
outsl
mov
ljmp
add
sbb
xor
jmp
dec
push
ret
stc
mov
aaa
add
cwtl
jg
mov
dec
gs
or
xor
mov
lods
imul
xor
mov
xor
xor
rcll
hlt
sahf
push
xchg
dec
sbb
jp
fcomp
add
xlat
hlt
push
pop
loopne
and
shlb
sub
addr16
icebp
clc
cltd
or
and
xor
xor
sub
es
movsb
je
in
out
add
pop
xor
dec
mov
jl
mov
sti
add
out
pop
xor
jmp
lcall
cmp
inc
adc
hlt
xor
in
pop
je
pushf
repnz
cmpsb
mov
scas
push
call
clc
add
add
ja
test
sar
cs
cld
incl
dec
add
add
loop
decl
add
add
aaa
push
call
fnsave
pop
js
jmp
mov
cmp
inc
xchg
daa
jmp
mov
cmc
je
mov
call
push
decl
sar
pusha
scas
or
xor
test
and
xor
inc
ja
lods
pop
cmp
add
or
cld
adc
lea
popf
xchg
sahf
push
mov
out
push
lods
jp
xor
in
xor
hlt
scas
cmp
adc
je
les
mov
test
sub
inc
aaa
into
sbb
mul
repnz
pop
mov
add
cld
mov
cli
hlt
jmp
cmp
out
add
mov
push
std
inc
xor
les
xlat
ret
pop
inc
pop
adc
mov
pop
xor
mov
and
xor
les
xor
add
sti
data16
popa
push
les
add
int3
mov
fwait
pop
push
add
xor
sbbb
sub
sub
xor
jbe
sbb
dec
xor
aaa
xor
inc
add
pop
inc
insl
ret
add
or
ret
inc
popa
fimull
mov
xor
mov
hlt
pop
add
mov
xor
je
adc
ljmp
and
xor
sub
jp
mov
loopne
jmp
sarl
popa
sti
jmp
cmp
cltd
scas
mov
cltd
cmp
cltd
add
lods
inc
adc
je
or
xor
pop
add
jne
and
sahf
pusha
sti
jmp
fnstenv
les
xor
les
xor
mov
mov
add
aas
and
mov
and
xadd
xor
push
xchg
pop
and
push
or
and
adc
add
mov
push
test
call
test
sub
adc
push
test
cmp
add
add
mov
rcrl
pop
ret
sarb
and
add
bnd
repz
mov
aas
and
or
int
sbb
adc
out
lock
xchg
inc
add
add
sahf
ffree
inc
ftst
sub
loopne
or
mov
les
adc
addr16
add
dec
jg
push
in
mov
decl
mov
mov
lcall
adc
add
fistpl
and
cld
inc
fld
decl
pop
js
ljmp
loopne
das
addr16
pusha
pop
jmp
xchg
pop
sub
pop
fsubl
and
out
sub
mov
out
jg
ljmp
lods
jmp
xchg
xor
pop
cld
xlat
inc
hlt
jmp
xor
ljmp
adc
rcl
fistpl
mov
int
mov
call
sbb
stos
mov
or
mov
in
mov
in
call
insl
jnp
inc
in
sarl
mov
je
mov
pop
sti
bound
sub
and
mov
je
rorl
add
sti
ss
mov
imul
daa
pop
mov
mov
rcrb
add
jl
jbe
xor
cld
cld
mov
in
jmp
xor
divb
lret
rcrb
test
cmpsb
jecxz
xor
add
popl
fildl
jbe
inc
jb
call
mov
cmovo
mov
mov
add
pop
and
mov
movsl
jle
inc
es
push
ret
cs
add
mov
jmp
subb
push
lcall
fnsave
add
mov
add
pop
sti
mov
mov
iret
aaa
add
add
jecxz
cmpsb
xor
test
adc
mov
adc
or
inc
jmp
fldenv
test
pop
pop
mov
push
cs
incl
add
dec
jp
cmp
incw
orb
xchg
jne
inc
add
jnp
cld
and
mov
mov
dec
ljmp
lds
aaa
dec
ss
clc
pop
xchg
mov
cltd
xchg
adc
pop
aas
add
divl
dec
sub
outsl
add
cs
hlt
sub
mov
and
gs
adc
or
int
xchg
add
pop
ljmp
push
outsb
inc
pop
int
xchg
loop
ret
pop
ret
mov
bndstx
xor
fsubl
lcall
scas
sbb
mov
pop
adc
mov
pop
hlt
fsubrs
sbb
cmp
shll
mov
fdivl
add
add
fs
cltd
mov
cmp
sti
insl
je
pop
fiadds
cmc
and
mov
xor
lods
pop
cmp
mov
inc
stc
inc
pop
push
aas
adc
sbb
mov
add
inc
mov
add
add
and
test
xor
mov
add
sti
sbb
cmc
in
push
data16
dec
push
test
mov
add
xor
inc
add
push
cmp
mov
jmp
push
testb
mov
mov
mov
jne
outsl
pop
movsb
xor
xor
cmp
mov
mov
shlb
jmp
sbb
cmp
cld
xor
jno
push
add
xchg
pop
and
adc
ret
adc
int
adc
sub
pop
dec
and
mov
cld
mov
arpl
repz
mov
shl
cmp
into
pop
mov
mov
jecxz
xor
xor
and
mov
popa
pushf
dec
cwtl
ds
sti
jo
mov
mov
mov
push
xchg
cld
add
mov
pop
mov
ret
add
and
mov
int3
sbb
add
int
jp
pop
repz
sub
adc
sub
inc
in
cmpsb
repz
or
xchg
xchg
xchg
mov
clc
inc
in
xor
imul
inc
stos
add
das
ljmp
mov
test
push
jmp
cmovg
jecxz
add
pavgw
psubd
mov
jmp
jle
pmaxub
mov
xacquire
ljmp
das
pop
inc
aas
add
out
xor
cmp
notb
mov
jmp
in
sbb
std
sbb
ljmp
push
gs
sub
add
loop
roll
add
adc
jmp
cmpsb
pop
test
aaa
mov
jmp
movsb
loope
cs
inc
imul
mov
mov
fidivs
lret
movsb
xchg
jmp
pop
sbb
push
cmp
roll
dec
jmp
test
sti
jge
dec
add
xor
loopne
je
jmp
bound
add
test
dec
lea
xor
inc
mov
cmp
add
push
dec
psubsb
cmp
adc
and
divb
lcall
sbbl
pop
jecxz
mov
dec
adc
or
je
movsl
xor
lret
jmp
mov
mov
pop
pop
add
add
pop
sti
push
lds
push
inc
cs
mov
dec
push
std
sahf
cld
push
aaa
insl
mov
lret
js
call
push
inc
sub
sub
dec
clc
sbb
adc
iret
or
cld
rcl
xchg
int3
imul
clc
data16
clc
or
mov
clc
add
sbb
in
add
jmp
add
orl
jle
add
or
mov
bound
xor
sbb
dec
inc
adc
mov
nop
xor
jle
mov
mov
lea
xor
pop
sbb
adc
sbb
adc
scas
imul
bswap
into
mov
push
out
fdiv
fcmovne
in
mov
inc
add
push
dec
jp
pop
mov
add
mov
xor
and
add
pop
out
aaa
out
xor
dec
pop
xchg
add
aaa
xor
inc
push
jmp
clc
and
aad
aaa
xor
test
mov
sbb
aaa
faddl
or
mov
add
hlt
inc
es
jmp
xorl
aad
sti
jbe
xchg
je
mov
or
std
pop
ret
pop
xchg
cmpsl
mov
std
callw
call
fs
inc
adc
rclb
push
sti
fs
jno
push
jne
mov
inc
push
xorl
inc
in
push
xchg
into
cmc
lock
mov
mov
call
cld
call
push
mov
lret
push
push
add
add
xor
decl
fsts
inc
into
sarb
cld
pop
js
sub
repnz
js
or
or
mov
addr16
adc
or
mov
mov
add
cmpsl
and
ret
or
out
aaa
jg
jle
out
add
cs
push
fs
pop
sub
sbb
loope
sbb
emms
pop
jl
push
dec
lret
fnstcw
clc
pop
jp
iret
insl
aas
add
lret
dec
das
std
dec
cmp
inc
enter
dec
jmp
roll
add
inc
pop
pushl
add
and
add
les
and
aam
and
xor
sbb
mov
in
out
aas
aaa
lods
js
adc
xor
enter
data16
les
mov
outsl
inc
pop
sub
les
cmp
or
dec
mov
int
outsb
les
dec
jmp
inc
sbb
sbb
sbb
xor
mov
les
add
jge
aaa
xor
xlat
dec
hlt
jmp
adc
push
lcall
sub
push
test
mov
hlt
jmp
dec
jp
ljmp
xor
gs
movb
xor
fistpll
sbb
cmp
xchg
decb
jbe
sbb
sbb
xor
cmp
add
ja
add
in
lea
ds
xor
xchg
fildll
mov
out
push
je
mov
sbb
test
cmp
and
and
xor
sbb
add
sbb
push
inc
dec
je
sbbb
or
add
or
pop
sbb
sbbl
push
fldt
and
stos
out
add
push
pushl
mov
mov
js
mov
test
lock
sbb
incl
push
xor
inc
sub
add
push
inc
jle
fidivs
add
into
xor
sbbl
push
xchg
add
dec
ss
add
xor
test
jg
mov
add
lret
ds
into
mov
clc
aaa
dec
aas
add
add
pop
lcall
loope
pusha
xlat
adc
adc
cwtl
and
pop
js
mov
les
inc
jnp
hlt
mov
adc
push
mov
adc
jp
mov
pop
ds
or
lock
loopne
mov
imul
add
sbb
xor
add
sarl
js
add
sbb
lds
insb
inc
ja
adc
mov
cmp
js
lock
dec
cmp
mov
mov
icebp
sub
jo
shrl
ret
mov
fs
testl
add
adc
out
sti
dec
sub
mov
add
aaa
ljmp
mov
xchg
in
daa
xor
fs
outsl
cmp
jmp
nop
fldl
fbld
neg
cltd
or
das
cld
push
jnp
xchg
cmp
add
mov
loope
jne
push
cmc
cld
add
rclb
cmp
cs
sti
hlt
fsubl
inc
jmp
add
popa
push
xchg
adc
xor
mov
je
or
cli
icebp
dec
adc
cmp
xor
cmp
mov
sub
inc
dec
aas
hlt
adc
mov
mov
clc
je
xchg
push
add
add
jecxz
pop
add
pop
arpl
mov
add
popa
xlat
pusha
mov
fsubs
icebp
add
ds
lret
out
outsl
sub
xor
jae
mov
or
sub
and
add
pusha
cld
jne
mov
mov
xor
add
xor
into
mov
pop
inc
imul
mov
out
push
aaa
mov
out
cltd
lcall
fidivrs
fnstsw
pop
out
xor
mov
mov
dec
jns
xchg
stc
push
jne
add
mov
adc
inc
xor
filds
aaa
pop
mov
clc
cmp
xor
test
sbb
cmp
add
pop
divb
or
cld
call
mov
cld
xchg
inc
pop
ret
out
add
xor
add
sub
fs
rcl
mov
sub
nop
out
sbb
mov
pop
pop
jge
inc
xor
fs
rorb
push
mov
pop
pop
adc
in
xor
inc
pop
pop
mov
pop
sbb
pop
cmp
jne
lock
imul
add
add
inc
add
xor
xor
js
inc
jmp
mov
jae
subb
test
adc
lahf
sti
xor
xor
xor
dec
mov
or
mov
cmovns
inc
rolb
hlt
dec
stc
call
cmp
add
mov
mov
add
fstl
xor
jne
mov
call
inc
sti
rorb
call
inc
mov
sbb
jge
fidivrl
xor
cltd
mov
adc
bound
jne
outsl
pop
pop
add
mov
and
cli
push
orl
push
and
add
call
mov
xor
pop
mov
fsubs
dec
jmp
mov
bound
add
pop
xor
ret
test
fadds
inc
inc
add
push
lret
mov
push
push
xchg
imul
jnp
cld
adc
sbb
mov
jge
mov
call
aaa
mov
inc
aas
or
jecxz
iret
out
call
inc
jb
fidivrl
inc
cmp
xchg
dec
cmpsl
repnz
pop
pushw
mov
out
xchg
jb
repnz
aaa
pop
xchg
mov
pop
mov
pop
xchg
ret
pop
imul
fxch
out
shrl
dec
sti
lcall
jp
and
sbb
jp
xchg
enter
orl
cmp
adc
mov
add
inc
iret
dec
dec
repnz
add
fisubl
xor
fisttpll
dec
xor
jo
stos
inc
push
add
cltd
int
nop
sti
cmp
jle
inc
add
fidivl
dec
mov
jg
mov
xor
add
sar
mull
repz
pop
je
pop
mov
int3
inc
mov
je
pop
mov
popl
add
and
jae
push
or
call
mov
sub
cltd
iret
pop
inc
jmp
lock
add
adc
inc
xor
aam
pop
jns
sbb
sub
cmp
cmpb
adc
aas
sti
pop
fcmovne
sub
push
out
in
scas
xor
sub
add
add
cmp
je
push
or
jle
inc
sti
gs
test
pop
xor
adc
add
push
inc
ljmp
dec
shr
les
mov
decb
test
add
mov
add
cmp
and
gs
or
cld
test
dec
data16
sbb
dec
or
popa
test
cmpb
jne
dec
or
mov
jne
dec
rcl
mov
fdivs
std
shlb
add
not
inc
jae
and
mov
mov
aaa
dec
jmp
popa
and
add
add
mov
mov
out
je
add
add
xchg
add
aaa
movb
out
add
aaa
leave
pop
or
das
sbb
add
cld
mov
or
push
mov
dec
iret
mov
outsb
adc
inc
movlhps
dec
add
movsl
and
inc
dec
fisttpll
mov
inc
jmp
jp
rorb
mov
faddl
mov
fidivl
sti
mov
xor
lock
or
out
push
or
flds
imul
cli
stos
out
and
xor
add
dec
cmc
jp
sub
cmp
sti
push
jb
push
es
out
or
lock
popf
pop
daa
dec
in
hlt
pop
add
cmp
lds
outsl
icebp
add
scas
ret
dec
aas
cli
loopne
les
jne
jmp
movlps
mov
lods
pop
in
repnz
cmpsb
outsb
lods
xor
pop
xorl
inc
push
xchg
mov
loopne
test
subl
ret
xor
ret
gs
data16
adc
jb
mov
xchg
add
inc
lods
jnp
mov
inc
inc
add
mov
icebp
push
dec
sub
jl
sbb
cli
lcall
inc
das
push
lret
jmp
ret
outsl
daa
test
push
arpl
fwait
jb
mov
stos
pop
add
inc
jmp
xor
add
mov
jecxz
repnz
xor
xor
ljmp
idivb
pop
leave
pop
cmp
sub
push
mov
out
idivl
sbb
nop
imul
dec
js
fisttpll
inc
dec
mov
into
call
test
roll
cli
iret
out
xor
add
insb
leave
and
xor
ret
mov
aaa
dec
push
mov
push
incl
add
js
cld
mov
cmp
cmp
jmp
lods
and
lahf
ds
dec
fldl
lods
mov
cmp
mov
je,pn
cmp
mov
cmc
mov
decl
xor
arpl
loope
repnz
ss
add
sarl
jbe
add
rclb
rolb
add
pop
adc
shlb
ja
lods
cmp
mov
cmp
mov
outsl
rorb
jne
mov
out
cmp
call
pop
clc
scas
movsb
pop
or
xor
pop
xor
xor
mov
xor
popa
inc
xor
sbb
ljmp
mov
imul
mov
int
mov
lods
lret
add
mov
in
mov
jmp
aaa
in
sub
mov
out
xor
shll
inc
push
cmp
push
cli
imul
mov
movsb
jmp
mov
add
mov
lods
dec
dec
scas
leave
adc
ljmp
jle
xchg
add
into
add
enter
mov
jge
mov
sbb
mov
add
xlat
je
lds
psubw
add
jecxz
add
data16
shrb
mov
hlt
jae
repz
test
test
dec
inc
sbb
outsb
in
movb
mov
dec
and
inc
in
add
dec
sar
jmp
lods
ds
and
lods
ds
ret
push
scas
jmp
pop
jmp
mov
pushl
ja
pop
insb
je
and
arpl
dec
mov
cltd
int3
mov
pushl
lcall
pop
xor
jae
into
icebp
sti
aaa
fistps
jg
outsl
add
push
dec
mulb
add
ret
cld
mov
xor
aad
pop
push
outsl
cld
mov
mov
push
mov
xor
or
cmp
das
ljmp
stos
push
mov
dec
push
jg
cmp
js
jmp
fistpl
mov
ret
mov
jae
jae
cwtl
mov
add
lods
or
cld
mov
add
jle
add
stos
mov
pop
repz
jmp
or
dec
push
fidivrs
test
orl
fdivs
add
mov
clc
cmp
mov
add
add
jg
in
rorl
add
je
xchg
jae
insb
xor
push
fs
add
ret
inc
jmp
in
cmpsl
jmp
jge
mov
sarl
sub
loope
je
jo
add
and
ret
sub
mov
cmp
add
xchg
xor
stc
xor
xor
jb
dec
xchg
loope
xor
sti
out
stos
clc
add
jecxz
xor
pop
mov
xor
xor
jle
add
xorb
cmp
or
xchg
inc
jmp
cld
data16
jo
pop
or
sti
push
in
and
mov
test
add
add
ficompl
into
sbb
push
mov
or
and
inc
inc
dec
cmp
inc
add
inc
dec
orb
mov
jne
mov
je
roll
aaa
stos
mull
xchg
jp
sbb
xchg
or
jge
dec
out
mov
cld
scas
and
add
jmp
loop
test
jl
ret
mov
dec
dec
imul
daa
bound
mov
add
js
ss
psubsb
jo
lods
dec
jne
aaa
fisttps
xor
add
dec
cmp
mov
icebp
or
xchg
xor
aaa
xor
inc
sub
pop
add
jge
rorb
and
and
push
and
mov
xor
add
xor
add
out
add
pop
mov
sub
jae
movzwl
loope
push
outsb
xchg
outsb
add
inc
dec
hlt
cmpl
pop
inc
mov
outsb
sbb
outsb
sbb
ret
xor
flds
xor
ljmp
je
shl
dec
add
cmp
sti
jmp
add
mov
xor
je
push
xchg
jmp
mov
add
mov
xor
jmp
push
xor
jmp
add
xor
test
jno
xor
xor
cli
aam
inc
inc
jmp
js
or
std
push
lds
test
xor
insb
sub
xor
sti
jmp
xor
test
in
dec
inc
pop
test
add
data16
mov
jle
push
add
push
lods
les
fidivs
jmp
test
add
push
xor
mov
and
or
fwait
adc
mov
or
mov
add
lcall
dec
mov
or
or
and
add
sub
sbb
dec
in
adc
xor
mov
aaa
or
mov
or
and
xor
add
xchg
addr16
fdivs
add
sbb
adc
add
ret
pop
sbb
and
aaa
sbb
cld
jmp
push
cwtl
sbb
pop
dec
jp
push
dec
aad
or
adc
repz
ds
repz
repz
push
aas
repz
mov
das
repz
mov
les
into
testb
das
les
or
inc
cmp
add
jb
imul
jmp
add
xor
adc
cmp
lock
nop
movsb
scas
xor
stos
int
imul
or
hlt
movq
xchg
adc
or
aaa
xor
shrl
and
lock
lods
movsb
add
sub
add
mov
insl
and
xchg
pop
sarb
imul
add
mov
xor
test
out
mov
mov
xor
cli
cld
js
aas
jmp
hlt
das
ds
xor
nop
sbb
sti
jmp
dec
xor
into
mov
xchg
loop
jl
xor
xor
pop
mov
std
data16
sbb
mov
push
fcoml
or
mov
inc
lock
jne
call
mov
or
hlt
daa
fiaddl
repz
push
mov
jecxz,pn
xor
and
mov
pushf
loop
push
lcall
jmp
popf
std
subb
push
bound
ficoms
sti
imul
imul
incl
add
in
sar
dec
scas
ja
inc
push
add
icebp
mov
outsb
sbb
ja
xchg
sbb
lock
jmp
out
cmp
add
testb
dec
push
jno
loopne
out
dec
aaa
aad
or
aam
push
stc
loopne
sbb
sub
jb
nop
mov
decl
cmp
add
das
push
sub
icebp
pop
add
inc
aaa
mov
push
mov
fdivr
push
or
jbe
xlat
mov
jae
inc
xor
inc
out
aaa
sbb
and
push
out
daa
push
mov
push
inc
lahf
mov
jb
jae
xchg
pop
pop
jle
push
xor
out
xor
call
imul
jbe
in
adc
es
push
es
aam
sti
jmp
mov
jmp
lret
stc
icebp
in
add
pop
into
sbbl
pop
jl
jmp
adcb
insl
cmp
push
add
test
fnstenv
mov
in
addr16
sub
jns
dec
mov
ret
add
jo
fwait
js
daa
jo
pop
cmp
mov
xchg
jp
je
and
sub
and
jne
scas
jbe
push
sub
cmc
add
and
xchg
mov
stc
mov
sbb
mov
add
xor
ret
sub
test
inc
xor
sub
mov
icebp
mov
or
sub
jmp
je
ds
xor
add
lahf
sub
adc
int3
mov
sbb
sub
pop
andl
gs
decb
scas
repnz
sbb
xor
inc
dec
or
dec
fldcw
dec
decl
add
hlt
cmpsl
add
inc
ljmp
or
adc
push
jmp
jge
add
into
sbb
dec
adc
or
push
push
xor
or
mov
rol
nop
jg
stos
sub
call
and
add
dec
cmpsl
cli
lcall
pop
pop
aaa
out
sarl
int3
mov
popa
divl
fadds
fistpll
or
inc
ret
sbb
jl
stos
adc
decl
add
or
incl
pop
add
add
sbb
fidivrs
pushl
cmpsb
mov
inc
nop
lret
repz
leave
shlb
sbb
xor
adc
aaa
sbb
adcb
push
add
repz
add
call
xorl
out
out
sub
fs
lock
ret
pop
mov
and
add
xchg
pop
sub
js
pop
add
test
subl
xchg
mov
cmpl
push
das
jnp
xor
clc
mov
cs
sti
xor
insb
aas
fs
add
data16
outsl
cmp
enter
ja
jns
movsb
mov
sahf
les
push
enter
call
fldt
hlt
pop
lods
xchg
int
sbb
jno
add
lea
ljmp
fstp
mov
inc
add
addr16
sti
fs
test
aad
sti
insb
outsl
push
sbb
xchg
mov
inc
jb
push
sbb
cmp
mov
or
cmpsb
jae
add
daa
dec
shll
or
or
iret
aaa
adc
add
cmp
and
mov
dec
dec
jne
fsubp
adc
std
push
sbb
int
cld
adc
cmp
cli
decl
test
xchg
std
call
cmp
pop
jae
pop
jne
fistps
das
add
xchg
sub
sbb
push
lea
mov
call
add
lea
repz
notb
pop
loop
stc
mov
jle
adc
xor
push
cwtl
sti
lock
xchg
mov
aaa
nop
shl
lahf
les
std
mov
push
inc
sarl
mov
cltd
loop
aaa
cwtl
push
jae
cwtl
fdivl
mov
adc
pop
popl
and
lea
and
icebp
lret
mov
sbb
cmp
add
rorl
cmp
test
mov
lret
in
cmp
sti
stos
push
or
xchg
iretw
aas
out
popa
xor
xrelease
adc
jb
xor
test
es
mov
xor
xor
mov
xchg
and
imul
push
in
and
outsb
pop
add
cmp
outsb
stc
mov
mov
jmp
and
mov
adc
inc
outsb
mov
movsb
das
push
in
xor
sub
mov
cmp
lcall
in
cli
dec
adc
mov
test
cs
pop
xor
loopne
fidivl
lfs
push
jbe
sub
mov
inc
gs
in
xor
lfs
inc
push
movsl
mov
xor
pop
cmpsl
cmc
arpl
sarl
mov
mov
push
jae
mov
xchg
add
imul
mov
shr
and
and
sub
data16
mov
repz
mov
inc
mov
xor
add
loope
hlt
inc
inc
sub
loope
xchg
or
addl
add
pushl
xor
int
push
pop
int
hlt
je
scas
pop
xor
idiv
xor
lods
ret
je
scas
cvttps2pi
idiv
cmp
inc
fnsave
syscall
out
addl
rcll
data16
mov
std
pop
push
mov
ds
mov
pop
xor
idiv
xor
jmp
mov
aaa
xchg
dec
cmp
inc
mov
sub
call
roll
mov
xor
cs
aaa
lds
adc
dec
mov
inc
mov
hlt
or
hlt
faddl
das
inc
aaa
loope
push
in
mov
add
sbb
xor
testl
inc
aas
xchg
mov
xchg
xchg
movsb
mov
mov
mov
pop
pop
xor
pop
aaa
mov
pop
sub
add
mov
aad
mov
add
inc
mov
aad
or
cmc
mov
pushf
aad
lods
sub
cwtl
push
aas
pop
fwait
and
sti
cwtl
inc
rcrb
cli
daa
add
mov
cmc
add
jb
mov
xchg
mov
sub
cmc
lods
addr16
mov
and
lods
jo
cmp
mov
sub
sbb
xchg
cmpsl
repnz
pop
pop
or
mov
add
jmp
loopne
sub
dec
sbb
cmp
add
add
repz
bound
push
pop
add
fwait
js
sub
pop
shlb
sub
mov
xchg
test
xor
xchg
mov
mov
jne
das
push
xchg
jne
mov
stos
dec
fnstsw
xchg
or
scas
jne
cltd
scas
jne
mov
pushf
in
push
jmp
in
jmp
jmp
and
inc
push
jecxz
adc
cmp
push
xor
decl
dec
fadds
inc
sub
rcrb
inc
pop
or
out
push
call
or
mov
jge
push
test
cmp
fisubrs
or
and
jne
jnp
adc
add
incl
jnp
leave
sbb
sti
push
lods
in
fnstcw
xor
rolb
incl
add
or
iret
aaa
lret
inc
gs
aas
aaa
dec
mov
sub
cmp
mov
pop
or
add
ljmp
ffree
decl
or
ljmp
push
shrb
mov
or
sbb
std
jp
aaa
or
shr
jmp
or
das
inc
aaa
test
adc
add
cmpl
addr16
decb
aaa
xchg
or
xor
add
mov
ljmp
add
add
or
jno
pop
ljmp
in
aas
xchg
push
aas
add
add
push
pusha
push
pop
daa
pusha
es
inc
sub
pop
dec
add
xchg
add
in
jmp
jbe
sub
add
sub
add
int3
hlt
jns
enter
out
add
mov
pusha
push
push
or
jno
pop
gs
add
lock
xor
or
or
out
xchg
icebp
cs
sbb
cld
pusha
inc
inc
jmp
sarl
shrl
dec
xchg
ret
popa
popa
cld
hlt
sbb
push
aaa
stos
fnstenv
scas
jno
cmp
add
sbb
sti
lahf
mov
jne
mov
mov
sti
xchg
mov
jne
mov
jno
sbb
sbb
xchg
mov
jne
mov
stc
jmp
cld
or
add
ss
pop
xchg
outsl
rcll
pop
mov
cmp
movsl
inc
in
into
aaa
push
xor
add
fnsave
mov
xchg
cmpb
dec
push
iret
or
pop
adc
or
adc
ret
pop
iret
inc
sahf
xor
add
pop
outsb
aaa
sub
addr16
add
pop
cmpsb
mov
cmp
call
popf
orb
aaa
pop
mov
add
mov
mov
scas
dec
lods
dec
scas
out
jne
lcall
hlt
xchg
or
imul
ss
push
pop
fistps
mov
mov
xchg
mov
les
pushl
or
mov
pushl
lea
lcall
mov
outsl
aaa
inc
add
add
xor
addb
insl
inc
pop
xor
add
lahf
fisttpll
jbe
iret
fs
imull
mov
pop
sub
jbe
movsb
test
xchg
mov
push
and
mov
iret
cmp
lahf
pop
insb
add
jmp
inc
mov
push
icebp
mov
outsl
xchg
mov
icebp
rcr
add
mov
and
xchg
cmp
sbb
mov
jmp
enter
das
sbb
rcrl
adc
scas
mov
rolb
xor
inc
icebp
mov
mov
mov
jge
rorl
cli
jl
lods
inc
inc
les
add
sbb
aaa
xchg
sti
inc
mov
lcall
je
jb
orl
loopne
jmp
add
sti
rep
sbb
mov
add
lods
inc
add
loopne
add
mov
add
test
push
mov
call
add
sti
ret
jmp
sti
lcall
push
rcll
jnp
sbb
incl
add
fnsave
fcmovnu
subb
std
fimuls
mov
xor
push
mov
xchg
in
jne
xchg
aas
call
stc
xchg
ljmp
jnp
jg
addb
xor
push
inc
sbb
shlb
xchg
dec
push
cmpb
js
fldl
and
pop
or
pusha
add
je
out
adc
add
jge
das
xor
mov
pushl
xchg
roll
iret
push
mov
jge
daa
nop
pop
or
test
pushl
lea
add
mov
jnp
or
xlat
dec
or
lods
add
add
js
enter
scas
and
fsubrs
xchg
jl
mov
jg
aaa
testb
mov
fwait
mov
add
stos
lahf
pop
add
cld
adc
mov
push
push
fs
push
jge
push
push
jl
test
aad
scas
in
jle
pop
push
push
sub
xor
call
and
iret
clc
jge
jle
cld
mov
add
adc
out
push
hlt
test
sub
jecxz
ljmp
push
add
lret
inc
inc
cmp
xor
outsl
cmp
stc
fidivrs
or
sahf
imul
sti
push
sbb
jb
sbb
sub
bound
pop
ret
add
push
xor
mov
sbbl
jmp
insl
je
gs
lcall
add
xorl
sti
imulb
or
xor
mov
push
add
sub
mov
lahf
add
repz
sti
adc
pop
outsl
or
fmull
mov
outsl
or
pop
lds
add
dec
call
scas
cs
leave
or
add
add
xchg
and
sbb
add
lret
mov
outsl
add
pop
cmp
adc
pop
adc
and
push
push
test
mov
sub
xor
or
adc
mov
mov
hlt
xor
push
call
dec
mov
xchg
pop
add
incb
add
sub
sub
pop
sub
cmp
bswap
addl
inc
pop
inc
mov
dec
xor
out
xorb
push
lea
fsin
ret
enter
push
push
shll
add
ret
xchg
rorl
sbb
adc
jns
and
add
das
jns
jo
add
imul
add
add
pushf
arpl
movsb
arpl
add
inc
scas
or
ud0
mov
dec
loopne
aaa
sahf
pop
jg
pop
rcrl
jmp
sub
xor
lods
mov
sub
dec
mov
cld
mov
cwtl
ljmp
cmc
mov
or
adc
xchg
add
add
xor
stc
lock
jle
cmp
cli
sbb
idivl
jmp
je
mov
dec
xchg
sti
hlt
sbb
adc
unpckhps
sbb
je
std
addr16
xor
push
add
std
jle
dec
mov
or
xor
jl
xor
push
insb
icebp
adc
lahf
jae
cmc
add
add
cli
cld
add
inc
jmp
or
inc
sbb
cmp
add
xchg
or
add
outsl
sbb
add
in
xor
jne
mov
or
jo
in
xor
mov
fcmovnu
test
jecxz
pushl
mov
insb
xor
test
fadd
inc
mov
cld
jne
outsl
nop
or
in
outsb
or
add
repnz
jo,pn
or
in
pop
pop
addr16
add
mov
xorl
in
and
push
mov
pop
adc
sbb
das
inc
aaa
orb
orl
jne
dec
cld
mov
dec
or
sbb
stc
sub
pop
add
xor
or
ss
call
pushl
jl
add
daa
adc
add
adc
xchg
jmp
xchg
mov
adc
sbb
andb
decl
xor
adc
push
mov
lock
ja
dec
jb
xor
mov
and
adc
push
pop
pop
mov
fisttps
pusha
mov
mov
push
fdivrl
add
mov
dec
sub
push
clc
mov
jmp
sbb
dec
aam
divl
insl
rclb
repnz
call
inc
push
outsb
mov
hlt
push
les
jmp
dec
inc
mov
mov
or
jbe
adc
mov
cmp
or
and
adc
xchg
out
mov
jmp
outsl
dec
jmp
jb
dec
notb
xchg
cmp
call
dec
cli
cmp
jae
cli
mov
adc
sti
sbb
push
pop
dec
andl
jo
loope
repz
mov
or
xor
inc
lds
aam
decl
xchg
or
shlb
add
in
cli
add
sub
sbb
cli
decl
jl
cmp
lock
test
sbb
lcall
ljmp
xor
push
ss
jmp
fsub
leave
lds
ljmp
sbb
mov
incl
mov
outsb
and
jo
or
je
inc
jp
addb
ds
popl
int
addl
mov
outsb
push
test
sbb
arpl
sti
je
call
mov
add
dec
dec
std
sub
repnz
shl
xchg
adc
mov
push
addr16
pop
filds
lds
lods
shr
xor
add
and
pushl
gs
iret
je
inc
adc
pop
and
add
sub
adc
popf
ret
sbb
and
std
idiv
jo
inc
cld
jecxz
movsl
sub
cmc
cmp
cmp
incl
inc
xchg
inc
adc
js
test
push
rcrb
xchg
inc
arpl
or
jne
and
stc
or
add
jg
dec
divl
push
in
int
mov
fcmovne
xchg
into
es
lods
lods
jbe
fidivl
inc
iret
inc
mov
or
cli
aaa
rcrb
mov
orb
mov
cmp
in
mov
push
add
jmp
inc
jp
dec
mov
jmp
cmp
dec
clc
xor
mov
sti
xchg
popf
outsl
adc
rorb
push
xchg
sub
jne
cmp
loopne
xor
push
fmuls
stc
call
js
or
sbb
out
mov
fnstsw
and
xor
cmpl
lret
sub
mov
sti
xchg
imul
fsubr
jge
add
dec
outsb
push
out
push
mov
sub
add
fyl2xp1
add
decl
inc
pop
jg
adc
addl
push
add
jne
insl
mov
rol
arpl
xchg
mov
cli
add
sahf
dec
cld
jmp
or
mov
mov
lock
std
orl
add
adc
jns
inc
sbb
je
call
add
cmp
je
scas
aaa
sarl
cld
mov
push
dec
shrl
fimull
mov
rorl
imul
das
mov
add
cmp
mov
roll
xchg
dec
ds
mov
push
test
mov
or
scas
shl
or
push
aad
daa
imul
scas
pop
jmp
sbb
adc
gs
ljmp
pop
add
add
mov
or
aaa
xor
cmpsl
adc
call
adc
jmp
mov
shlb
nop
hlt
dec
test
lods
push
or
lock
mov
mov
hlt
sbbb
or
sub
push
pop
adc
xor
sbb
add
fs
fadds
cld
test
mov
movsb
out
mov
mov
mov
dec
test
jmp
and
stos
enter
sub
lcall
cwtl
push
add
xor
and
int3
push
sti
jmp
addl
loope
loopne
enter
leave
insb
push
add
xor
xor
mov
or
jne
add
ja
or
adc
or
dec
ret
ja
ret
orb
pop
mov
push
mov
shrl
jl
inc
jmp
xor
test
xor
bound
or
and
addl
into
testl
lock
fdiv
sub
mov
sub
xor
rolb
add
sub
adc
jb
inc
add
int3
add
dec
xchg
es
xor
mov
cmpsl
in
sbb
adc
inc
push
mov
inc
push
xchg
rcrb
les
sub
lock
mov
cmp
and
mov
add
aaa
repz
jnp
add
jae
mov
ret
adc
cmovo
mov
mov
pop
xor
aam
sti
out
mov
lods
dec
jmp
push
mov
add
call
dec
dec
mov
out
add
rolb
dec
inc
aaa
mov
daa
loopne
add
iret
aad
std
add
rolb
adc
into
incb
or
negb
je
nop
hlt
push
sub
js
sbb
popa
jnp
aaa
imul
aaa
mov
xlat
xor
xor
add
xor
lds
arpl
sub
sbb
ja
popa
mov
mov
add
add
shr
add
cmp
call
insb
not
add
add
xor
rcrl
xlat
lods
test
pop
inc
dec
je
loopne
imul
shlb
cmp
add
cmp
jno
je
mov
mov
sbb
test
adc
icebp
inc
stc
jmp
cli
movzbl
sti
fdivrl
pop
cli
add
es
jmp
add
jg
pop
push
sti
gs
je
sub
or
hlt
add
add
sbb
mov
or
xor
jne
in
jge
inc
std
cmp
or
je
std
outsb
and
leave
sbb
mov
leave
leave
push
sbb
lret
arpl
adc
scas
outsb
and
scas
outsb
and
mov
and
in
inc
jb
dec
push
cltd
lret
addr16
imul
imul
add
sbb
lret
ret
sub
jne
in
jne
aas
aaa
add
pop
cmc
fdivrp
push
mov
lea
sub
sub
jnp
and
cmc
or
jb
inc
adc
rcll
sub
xorl
out
push
pop
or
ret
push
rep
and
pop
lret
out
push
je
xor
jae
xor
cmp
outsb
adc
int
xchg
xor
mov
in
ret
filds
add
mov
gs
dec
shl
shll
insl
rclb
push
scas
jns
cmp
call
pop
lcall
lcall
xchg
popa
cmpsb
getsec
arpl
popl
jae
or
divl
outsl
pop
pop
lds
aaa
mov
inc
packuswb
rolb
nop
adc
sbb
call
add
add
mov
dec
adc
and
inc
pop
repnz
xor
xchg
xor
rcll
sub
shll
jg
inc
inc
aad
es
cltd
std
adcl
in
dec
insl
repnz
pop
mov
into
loopne
pop
push
pop
mov
mov
xor
xchg
mov
dec
mov
adc
leave
in
fistpll
mov
cmc
inc
pushl
decb
or
repnz
dec
mov
add
or
lret
sub
std
jne
cmp
inc
jmp
cli
pop
mov
mov
call
pop
js
sbb
into
push
lea
into
push
push
iret
cli
out
inc
std
decl
add
sub
or
sbb
sti
fidivl
inc
sub
mov
push
shrl
adc
cmp
in
sarl
clc
mov
or
add
aaa
mov
mov
test
or
xchg
sar
inc
ja
inc
aaa
mov
jle
ja
daa
or
add
or
xor
pop
mov
push
call
test
stc
adc
or
hlt
dec
or
xorl
mov
cs
cld
js
leave
adc
or
mov
mov
sbb
mov
sub
or
lret
add
in
xor
loopne
ja
mov
sbb
mov
xor
mov
add
mov
mov
je
rcr
incl
aaa
mov
mov
addr16
dec
add
test
addr16
fnstsw
add
mov
aaa
aaa
fdivs
jbe
xor
shl
outsb
xor
sarb
xchg
dec
divl
stos
dec
das
repz
add
rcll
scas
add
inc
test
jbe
call
daa
add
nop
xor
jmp
inc
sub
test
fsubrs
inc
jmp
fadds
push
dec
push
add
stos
jne
insb
je
add
xor
push
xchg
xor
test
or
cli
mov
or
xchg
shlb
mov
sti
cli
out
pop
jmp
leave
insb
and
dec
inc
rol
cmp
rorl
cmp
add
mov
mov
sub
lods
ret
es
sti
je
mov
adc
add
test
leave
xchg
mov
xchg
testl
or
cli
mov
popf
inc
das
fsubl
repz
push
mov
cmp
cmp
gs
decl
cmp
std
push
movsb
xchg
add
into
mov
pushf
pop
dec
fimull
pop
aam
sahf
inc
aam
ror
aad
mov
pop
cli
cmp
mov
jmp
stos
out
aaa
ds
push
mov
or
fsub
sbb
add
int3
or
call
jecxz
in
jbe
rolb
call
cmp
add
sub
add
and
mov
shrb
jle
cmp
pushl
sahf
int3
push
dec
or
pop
mov
pop
push
adc
jle
or
mov
subl
or
out
cmc
add
jo
jg
mov
das
cld
pusha
xor
xor
push
and
divl
gs
lds
cmp
call
ret
sub
jmp
test
popa
mov
clc
cmc
xlat
xor
mov
inc
xor
jmp
pop
mov
fdiv
clts
add
or
sti
in
mov
inc
sub
adc
inc
fdivs
cmp
and
clc
xor
stos
shlb
xor
add
stc
cmp
mov
add
aas
fmull
sub
stc
xor
add
in
add
mov
idiv
mov
hlt
out
jmp
hlt
imul
xchg
add
xor
adc
and
insl
sbb
icebp
idiv
or
xor
fcoml
xor
jmp
insl
je
imul
sub
jno
xchg
out
es
and
mov
add
or
add
sbb
xchg
loop
je
sub
mov
jnp
inc
jle
cli
ljmp
std
mov
js
cmp
cli
mov
add
inc
ror
xor
je
sub
lods
fiadds
push
and
imul
adc
add
call
dec
cmpl
fnsave
push
decl
xchg
push
pop
jno
shlb
dec
add
inc
aaa
jecxz
pushl
cmc
mov
jmp
xor
add
cmpb
cmp
xor
fisttps
aaa
scas
adc
inc
dec
add
push
lods
jbe
jecxz
mov
jae
or
push
popa
mov
jp
nop
xor
add
arpl
daa
aaa
or
fmuls
jle
cmp
incl
aaa
or
addl
inc
aaa
notb
inc
lret
gs
ljmp
scas
insl
add
xor
das
xorl
movsl
jns
add
divl
insl
mov
pusha
hlt
call
add
add
pushl
add
fucomp
add
fdivl
mov
or
call
add
mov
cmp
inc
mov
and
inc
or
push
dec
or
sbb
aaa
xor
add
fsincos
out
sbb
notl
jb
sub
in
cli
bound
mov
sbb
jl
add
int3
ja
sub
icebp
adc
inc
je
xchg
mov
add
xor
je
mov
or
adcb
pop
imul
cld
push
sub
mov
cmc
lcall
adc
mov
mov
jmp
stc
inc
and
xor
add
aas
add
test
xlat
mov
call
mov
into
cmp
ss
out
orl
or
in
inc
xor
lock
inc
inc
jle
ds
push
jecxz
jnp
std
push
test
cmp
insl
fistps
cmp
push
lds
push
mov
lock
push
test
cmp
call
xchg
js
pop
test
lea
add
push
add
pop
and
je
mov
pop
add
mov
dec
push
adc
pusha
dec
jae
push
inc
inc
sub
and
loope
pop
lods
out
adc
test
cmpb
pop
pusha
or
mov
notb
ficompl
in
mov
das
fidivrl
ljmp
push
push
shrl
cld
xor
sub
push
and
dec
adc
jmp
loope
out
xchg
sub
add
idiv
and
jns
aas
ror
pop
cmc
fdivrp
push
lods
out
adc
call
mov
dec
call
scas
xchg
mov
xor
xchg
fistps
jmp
mov
fidivrl
lret
call
and
aam
push
mov
sub
aas
pop
ss
data16
les
int3
jl
add
pop
add
and
mov
insb
jg
lock
js
sbb
rcll
imul
mov
sub
cmp
aam
xor
jg
out
call
sub
add
add
jb
adc
push
lock
xor
mov
stc
mov
shll
stos
push
sub
cmp
jmp
push
inc
inc
test
mov
bound
mov
push
inc
jmp
adc
lock
sub
fsts
pop
call
jne
cmp
rolb
cmp
mov
sub
out
push
bound
in
jbe
out
mov
out
jnp
aaa
mov
add
mov
movsb
pop
addl
es
je
mov
pop
jmp
out
jl
rclb
loop
cli
decl
lds
cmc
pop
fcmovbe
sub
adc
jg
and
xor
push
dec
mov
lcall
add
dec
xor
add
cli
add
loop
dec
sbb
test
ds
in
jle
aaa
incl
add
dec
popf
leave
cmp
decb
xchg
ficompl
iret
ss
rclb
jae
push
mov
sub
and
xor
daa
aaa
fcmovnbe
inc
push
shr
lds
lret
jge
push
add
hlt
xchg
dec
jb
arpl
jne
push
mov
cld
in
push
mov
ja
add
repz
cmpl
stos
and
or
mov
inc
pop
movhps
in
sub
mull
repz
fdiv
sub
dec
sub
call
sub
jb
pop
push
insl
icebp
mov
outsl
xor
aam
or
jp
xlat
jno
mov
and
in
sti
jno
sub
xchg
jo
call
push
add
mov
out
mov
call
clc
mov
jno
add
pop
mov
mov
xor
sub
cmp
pop
jnp
inc
xor
jg
icebp
mov
push
pushf
mov
call
push
xor
call
cli
je
mov
push
adc
inc
add
add
das
cmpsb
insl
push
pop
call
fldpi
cli
cmpl
ret
pop
into
fucomi
dec
je
cli
push
push
cli
and
data16
adc
add
fbstp
dec
sbb
inc
sbb
je
jg
dec
pop
add
push
divl
xchg
aaa
fdivl
mov
ds
call
cltd
movsb
ljmp
dec
cld
cli
js
xor
xchg
add
outsl
faddl
add
out
addr16
mov
fwait
dec
sti
vmovsd
jl
insl
aas
hlt
inc
ss
addr16
rclb
movsb
loop
add
or
add
inc
sbbb
outsl
int3
aaa
fwait
lret
push
add
pop
imul
aad
out
cmp
shrb
test
jmp
mov
xchg
movsb
stos
jmp
add
add
int3
dec
lock
add
sub
mov
xor
jmp
xor
mov
cwtl
es
jp
pushl
lock
cwtl
fcomi
cmpb
mov
out
push
cmpl
xorl
push
mov
into
cld
sub
or
or
add
sub
jp
or
les
test
add
and
aaa
scas
test
mov
jmp
sub
call
jmp
mov
call
jle
xor
add
data16
sub
adc
fdivl
mov
sub
cmp
mov
call
les
add
mov
mov
test
stc
sub
add
out
add
lcall
cmp
sub
lahf
push
pop
add
aaa
mov
add
xor
jno
iret
xchg
jmp
scas
or
insl
dec
out
jmp
xor
xor
sti
inc
stos
jb
push
out
in
in
sub
out
mov
add
jl
bound
test
mov
xor
jns
iret
insb
fidivs
or
sti
mov
pop
xchg
pop
sub
sub
fdivrs
mov
cmp
mov
call
xor
push
mov
lea
loop
dec
xor
sbb
std
dec
xchg
fisttpl
pushw
add
std
mov
dec
inc
cmp
pop
mov
mov
jl
test
into
call
mov
shlb
push
ret
adc
test
add
xchg
push
loopne
xchg
cmp
mov
outsl
or
out
std
add
pop
pop
jae
notb
call
inc
jbe
sahf
xchg
fildll
pop
cld
mov
adc
sub
cmp
aam
sbb
sub
inc
sti
mov
mov
cli
dec
and
push
sub
mov
lret
rclb
addr16
xor
decl
scas
dec
mov
inc
xchg
push
xchg
jno
push
cwtl
cmp
decl
pop
and
sub
shrl
and
pop
shl
out
mov
shlb
in
adc
and
and
sbb
cmp
lds
inc
xor
sbb
jle
lea
in
xchg
call
mov
fsub
call
mul
inc
test
iret
aaa
mov
adc
aam
fistpl
sbb
in
inc
add
add
jl
test
sbb
inc
in
fs
xor
imul
je
test
mov
inc
jmp
pop
test
xor
icebp
sarb
addr16
das
xor
bound
lcall
pop
push
daa
call
push
jmp
or
inc
xor
mov
add
jae
mov
xchg
pop
and
repz
outsl
pop
and
xor
add
ja
decb
sbb
decl
scas
inc
add
jecxz
decb
pop
cli
decl
sbb
sbb
adc
das
idiv
call
jbe
cmpsb
sti
push
push
sahf
ret
push
push
push
leave
adc
xchg
add
es
add
add
cmpsl
std
adc
arpl
cmp
decb
xor
push
rorb
inc
jg
xchg
loop
sti
inc
std
test
sbb
rcr
adc
aaa
leave
loop
xor
jg
mov
xchg
adc
and
int3
jle
sbb
add
inc
mov
cmpsb
aas
aaa
int
and
std
aaa
jno
jmp
and
add
in
cmp
ret
lods
sub
push
sub
xor
add
jnp
cmc
incb
fstpl
loop
or
dec
mov
jae
lret
mov
dec
sbb
negl
test
cld
and
aas
aaa
xor
push
inc
fldl
dec
mov
test
shlb
jecxz
sub
add
fsubp
sbb
hlt
push
or
mov
add
lret
cmp
push
loope
divb
or
cmp
shr
loop
mov
pop
xchg
sbb
xor
call
imul
inc
sub
js
mov
call
xchg
dec
xor
sbb
shl
ret
fdivs
inc
sbb
int3
in
mov
add
ja
cli
aam
inc
inc
jmp
pop
ret
pop
sub
sub
xchg
fnstenv
adc
add
addr16
jl
lods
aas
lods
aaa
testb
jnp
mov
jae
arpl
push
push
xor
add
fs
bound
in
ret
sahf
mov
sub
mov
adc
cmpsb
sarl
pop
loopne
scas
dec
sub
test
sbb
dec
pop
add
cmp
roll
add
jns
adc
out
pop
inc
into
or
addr16
xor
mov
sub
push
xorb
add
xor
mov
sub
sbbb
fidivl
push
or
and
add
ja
push
adc
sub
add
scas
push
adc
add
mov
add
mov
or
icebp
xchg
sub
mov
loop
gs
mov
jno
aam
dec
push
mov
mov
mov
mov
pop
or
int
adc
fistl
mov
cli
cmp
or
lods
repnz
scas
mov
mov
pop
cmp
bound
add
repnz
ja
inc
mov
add
dec
cmp
mov
add
or
mov
inc
sbb
daa
cmp
ret
pop
xor
add
test
out
push
ja
push
push
adc
outsl
cmp
outsl
push
pop
scas
add
push
frstor
cmp
sbb
shl
mov
lahf
sub
push
lods
sub
sub
call
ret
mov
call
sbb
mov
je
mov
addr16
cld
faddl
bound
popf
inc
sub
fdivr
sbb
mov
in
add
xor
sbb
jl
ds
xor
clc
push
fadds
jb
sbb
sub
fs
jge
mov
in
push
ljmp
add
stos
inc
in
xor
xor
and
mov
cmp
add
and
mov
lds
js
pop
fsqrt
jmp
or
add
std
jne
inc
dec
or
jo
and
fimuls
pop
cmc
fiadds
push
movsl
orl
pop
xor
rorl
inc
xor
ss
sahf
jne
add
cli
out
xchg
sti
ljmp
test
cld
in
ss
addl
add
cli
incl
add
lret
je
mov
or
adc
push
rolb
mov
arpl
fldt
fdecstp
mov
in
push
sub
jp
add
mov
icebp
add
fs
es
sub
adc
adc
inc
das
int
inc
sub
jae
mov
repz
mov
xor
cli
adc
mov
ljmp
stos
sbb
mov
dec
inc
jae
cmp
jnp
clc
ret
sbb
sbb
arpl
test
aaa
xor
nop
adc
jae
jmp
sub
and
std
push
hlt
aas
add
xor
scas
scas
enter
je
cmp
xlat
in
add
aaa
xor
inc
and
mov
mov
adc
cwtl
adc
sbb
ret
jo
sub
xor
jmp
cmc
fistl
inc
mov
imulb
scas
mov
add
cmpsb
inc
sbb
adc
fidivrl
mov
xlat
cli
jb
mov
cld
call
lods
inc
pop
add
inc
lods
lret
and
fs
loop
sub
test
sub
cld
in
ret
xor
add
stos
sub
mov
pusha
add
test
sub
pop
and
leave
sti
out
scas
repz
inc
cmpsb
repnz
push
loope
mov
adc
add
push
ja
lcall
or
mov
lea
add
adc
xor
add
inc
push
lods
mov
and
xor
pop
dec
les
and
mov
sbb
add
pop
jo
dec
jno
push
and
jbe
add
mov
loop
xor
test
and
fwait
rolb
sub
and
inc
add
add
scas
xor
add
add
push
rcrl
dec
dec
cmp
mov
dec
movsl
hlt
aas
aaa
sahf
cltd
and
and
cld
mov
push
push
jb
mov
std
cld
and
stos
mov
aas
inc
pop
aaa
inc
jp
mov
cmp
aaa
int
cld
inc
cmp
cltd
sub
xor
jb
push
cltd
sbb
jb
ss
or
cmp
gs
xchg
add
ljmp
sbb
int3
incl
aaa
mov
add
mov
add
daa
insb
inc
xor
call
add
xor
add
and
add
hlt
fildl
xchg
scas
cli
call
scas
test
mov
call
jl
dec
call
add
add
test
sbb
call
cmp
test
scas
push
hlt
jle
and
flds
out
inc
in
xor
xchg
sti
adc
xor
call
gs
inc
jb
leave
cld
daa
sbb
adc
or
add
bound
enter
push
cmpsb
xchg
mov
pushf
daa
fcoms
fildll
cli
scas
add
mov
xor
call
in
add
psrlw
add
mov
xlat
cs
test
xlat
je
inc
inc
leave
adc
ret
sub
add
mov
and
mov
popf
push
jmp
fildll
imul
std
jne
add
dec
bnd
cld
jne
inc
sha256msg1
cli
mov
mov
fnstcw
mov
cmp
loop
cmpl
test
inc
fimuls
cmp
pusha
cmp
cli
je
mov
ja
aaa
cld
adc
adc
or
inc
std
jmp
mov
mov
xchg
iret
hlt
faddl
lock
neg
stos
pop
mov
int
push
call
push
push
xor
aam
cld
adc
mov
mov
sbb
adc
push
xor
mov
imul
push
iret
cmc
xchg
cld
fcomps
jb
xchg
push
add
divl
xchg
into
jb
fnsave
out
add
hlt
or
mov
inc
jne
cmp
inc
pop
aaa
imul
fnstsw
call
jp
fistps
fidivrs
inc
cmpsb
mov
sub
testl
fsubl
or
shll
sbb
rcrl
or
dec
pop
gs
fs
imul
sti
shlb
or
mov
sub
lahf
testl
mov
add
mov
xor
mov
cli
push
stos
shlb
es
je
xchg
mov
jnp
shrb
xchg
jnp
xchg
push
inc
jmp
cmp
push
jb
fxch
sahf
sub
test
add
or
lahf
mov
jo
xor
add
pop
pop
mov
out
mov
or
xor
push
sarl
cli
jmp
add
std
decl
dec
inc
add
cmp
mov
add
push
lea
pop
addb
aas
test
hlt
cli
mov
add
add
add
xchg
mov
xor
inc
lcall
rorb
push
sti
pop
adc
push
inc
or
jne
lods
inc
cmp
and
mov
cli
call
jle
aaa
scas
cld
dec
aas
aaa
inc
ret
pop
xchg
mov
lods
xchg
and
xchg
out
leave
incl
add
hlt
jne
xor
pushf
add
cmpsl
pop
adc
in
mov
lds
popa
mov
push
loope
add
enter
lds
pop
mov
sbb
decb
fnsave
inc
cld
faddl
adc
pop
adc
stc
fnstsw
ss
mov
add
into
sti
jo
xlat
fbstp
add
enter
iret
adc
pop
cwtl
mov
dec
xor
testl
test
negb
notl
cwtl
js
ret
cwtl
or
movl
sbb
lds
shr
cld
sub
add
inc
in
mov
jmp
adc
mov
nop
add
ret
pop
ja
popa
lds
add
out
cmp
add
test
in
addr16
jl
xor
aas
test
xor
je
clc
repnz
xor
stc
pushf
inc
aad
xor
ds
aad
std
rorb
cmp
pusha
idivb
mov
add
jns
cmpsl
test
inc
dec
shrb
xor
add
jge
sub
jl
inc
das
iret
cli
adc
inc
les
pop
and
cli
add
jle
popf
cmp
push
push
inc
add
cli
adc
xor
add
or
inc
cmp
test
lock
mov
divb
std
adc
pop
mov
cmp
ret
add
xor
add
subl
inc
pop
dec
sbbl
sbb
pusha
dec
add
cmp
adc
cmpsl
mov
add
cmp
push
xor
inc
lds
push
push
fld
adc
xor
pop
lahf
add
test
ret
inc
sbb
jbe
sub
cmpb
inc
mov
adc
faddl
cld
addb
add
mov
add
lods
add
mov
mov
xorb
dec
push
pop
inc
jae
lods
add
and
mov
mov
pusha
pop
andb
fisttpll
and
cmpl
aaa
lcall
scas
mov
add
fs
cmp
pop
mov
call
mov
add
and
pop
xor
faddl
pop
lret
xor
mov
add
mov
push
pop
call
icebp
inc
xor
add
call
cltd
push
mov
aad
daa
je
test
jmp
arpl
lret
imul
add
xor
add
dec
add
add
nop
hlt
push
cmpsl
cmp
cmc
loop
push
int
inc
push
lds
cmp
imul
jmp
and
add
xor
add
jno
mov
fldt
add
cli
jmp
push
leave
cli
jmp
dec
xor
adc
dec
cmp
jl
mov
dec
cmp
pop
add
aaa
add
shlb
mov
cs
pop
xor
jne
popf
or
jne
lea
outsb
add
incb
dec
or
dec
mov
and
add
xor
ljmp
test
adc
or
and
pop
lea
xor
add
imul
inc
pop
dec
mov
and
jle
inc
movsb
xor
inc
jp
dec
push
data16
add
pop
dec
lea
sbb
or
sub
je
jno
cli
adc
jne
sub
add
sti
mov
rolb
into
je
add
and
std
enter
fidivrl
ret
sbb
incb
add
sub
push
cmp
out
mov
push
test
mov
pop
pop
icebp
pop
lods
sbb
dec
mov
xchg
push
adc
lea
xor
xchg
fldt
shll
sbb
add
ja
dec
add
and
cmpl
xchg
jp
cmp
daa
fistl
repnz
les
daa
cmp
ss
mov
gs
addr16
fcoml
ret
and
inc
ja
cmp
test
mov
paddsb
xor
xchg
daa
sub
inc
lret
lds
xor
sub
xor
bound
in
ret
push
sub
jle
stc
int3
add
inc
mov
call
ja
add
mov
adc
je
aaa
push
adc
je
xchg
jo
add
mov
and
aam
xor
mov
cmp
fs
and
aam
pop
inc
jmp
fidivs
call
xor
and
add
add
mov
inc
dec
xor
add
xor
dec
xor
add
insb
divb
xor
adc
jno
mov
scas
repnz
lods
stc
add
xor
and
adc
add
sub
cld
in
jo
push
sbb
xor
lock
jo
orl
add
mov
inc
and
das
push
test
add
and
push
mov
adc
jo
mov
sub
add
fisttpl
dec
call
fisttps
adc
int
sarb
mov
aaa
int
add
imul
push
popa
xchg
sbb
dec
or
dec
and
int
add
sub
das
mull
sbb
add
or
jns
sbb
jge
adc
int
cli
and
sti
adc
pushf
rorb
addr16
adc
xor
sbb
lods
lods
daa
pmaddwd
adc
cmp
inc
aaa
mov
daa
sbb
pushf
daa
addr16
in
mov
xor
nopl
pusha
rcrl
lret
sbb
sub
or
xor
sbb
add
sub
xlat
ret
subb
pop
mov
addr16
pop
lret
stc
jbe
pop
dec
adc
xchg
or
lahf
pop
dec
gs
fs
call
dec
mov
mov
adc
dec
je
adc
mov
or
fsubrl
orl
xor
pop
cmp
imul
xor
test
jnp
add
aad
xor
bound
movl
cmpb
mov
sti
dec
sbb
add
jbe
and
sbb
mov
cld
pop
mov
sub
aam
data16
add
sub
inc
add
push
in
add
dec
cmp
rorb
dec
or
push
pop
xor
xor
stos
and
dec
adc
dec
or
jno
idiv
cmc
and
jne
mov
je
shrl
adc
cmp
pushf
and
push
gs
add
fisubl
jne
dec
and
pop
xor
add
jne
in
adc
add
add
mov
cwtl
adc
or
out
mov
out
add
js
push
push
jo
push
sti
inc
aas
adc
sbbl
arpl
add
gs
incb
jmp
jmp
incl
incb
push
aad
aaa
pusha
adc
dec
and
jo
por
sti
clc
repnz
jne
push
jne
sahf
adc
add
inc
or
adc
repnz
aam
aaa
rcll
sub
push
lahf
xor
or
xor
les
sbb
xor
and
jno
stos
lods
sbb
jmp
shrb
push
and
jno
mov
popf
pop
dec
dec
loopne
and
fldl
pop
popf
lds
xor
mov
in
stc
jb
incl
adc
inc
xor
jg
inc
loopne
dec
mov
inc
aaa
dec
fdivr
push
pop
dec
dec
mov
pushf
cli
fmul
idiv
dec
sbb
jo
xorw
cmc
or
add
push
jle
jmp
aaa
sub
stos
xor
push
bound
xor
xchg
push
or
xor
sarl
incb
pushf
inc
mov
adc
loop
add
cli
adc
je
cmp
dec
or
cmp
adc
stos
inc
xor
bound
ret
add
loop
add
data16
in
mov
jmp
gs
sbb
adc
xchg
pusha
and
sbb
mov
sti
cmp
adc
incl
sub
mov
in
add
inc
mov
add
je
rclb
rol
xor
mov
mov
sbb
dec
or
pushl
mov
je
jmp
sbb
push
pop
pop
ret
push
mov
ret
int3
ja
add
scas
je
inc
adc
push
aaa
xlat
pushl
jg
rolb
add
adc
loop
jne
arpl
negl
fists
sti
add
push
sti
or
stc
jne
decb
sbb
mov
pop
or
or
sbb
or
cmc
or
add
ret
jne
mov
ja
jno
fcomip
or
aaa
mov
add
or
and
add
inc
syscall
mov
shll
in
xor
inc
aaa
xor
mov
adc
iret
ljmp
pop
mov
jo
scas
and
cwtl
arpl
pushf
mov
jo
dec
add
imul
idivb
xlat
ret
push
push
xor
std
inc
aaa
pop
xor
cmp
sub
lock
xor
dec
mov
add
imul
mov
adc
sbb
cld
mov
dec
sub
test
jmp
jo
fmuls
jp
adc
daa
je
daa
ljmp
push
add
in
ljmp
cmp
cs
pop
xor
jmp
mov
jne
mov
xor
add
es
mov
xchg
daa
push
xor
dec
and
inc
and
xor
out
xor
enter
push
bound
cmp
sbb
xor
add
je
sub
jmp
test
inc
pop
and
je
push
cli
or
gs
sbb
jne
xor
dec
lea
push
call
idiv
pop
stc
fmuls
notb
ljmp
add
add
push
mov
scas
aas
or
stc
adc
jle
aas
add
xor
idivb
xor
mov
sub
adc
popf
jns
mov
mov
push
lods
getsec
lret
icebp
jnp
or
call
lods
mov
add
lret
mov
mov
sti
or
dec
mov
push
test
or
cltd
push
mov
add
or
loopne
data16
in
gs
cli
inc
pop
adc
push
cmp
mov
imul
fnstsw
inc
sub
sub
int
shl
lods
dec
dec
dec
mov
push
lods
xor
xchg
adc
mov
pop
les
push
call
in
int3
mov
in
mov
dec
jecxz
and
jnp
je
mov
inc
in
jp
mov
mov
sub
jno
pop
inc
int3
mov
aaa
xor
xor
mov
mov
sbb
test
lods
out
sub
repnz
mov
js
dec
in
repnz
cmp
adc
cmp
ja
faddl
cmp
inc
add
andb
jmp
sub
test
fldenv
fstpl
adc
dec
je
push
sbb
in
pop
inc
xchg
jbe
ss
jmp
fidivrs
cwtl
inc
movsl
xor
jmp
cmpsb
jne
xlat
jl
into
test
mov
mov
prefetch
add
adc
ljmp
pop
out
das
sti
sub
lods
push
call
inc
aas
and
xlat
popf
in
or
decl
les
out
sub
movb
not
in
or
add
cmp
cmp
das
out
xor
or
and
add
das
aas
and
sbb
ret
divb
cli
into
or
jns
jmp
lock
fisttpll
push
sbb
ror
mov
and
jno
lea
push
mov
or
pop
in
loop
aaa
js
in
or
or
je
push
push
mov
lret
pop
xor
push
push
mov
icebp
jne
jno
sti
or
je
add
jno
lea
dec
dec
rclb
std
cli
and
push
inc
aaa
dec
mov
out
and
push
add
pop
sti
sub
icebp
jne
inc
fsubrs
ja
push
push
ljmp
lods
mov
jge
cmp
adc
js
mov
add
and
xchg
xor
and
fldl
xchg
clc
subl
cltd
mov
jne
insb
adc
loopne
pushf
out
cld
mov
and
clc
out
imull
jecxz
negl
mov
aas
xor
clc
inc
aaa
or
rcl
push
xchg
inc
aaa
mov
call
in
lahf
test
mov
out
cmove
inc
aaa
pushf
sub
insb
mov
add
add
jmp
insl
jae
add
je
mov
xor
push
pop
scas
mov
add
adc
out
in
cli
mov
ds
lahf
xor
jmp
je
imul
enter
pop
hlt
add
cmp
sub
or
jbe
xor
add
cmpb
add
mov
hlt
add
pop
iret
stos
xor
xor
cmc
xor
add
jne
mov
divb
mov
mov
inc
add
insb
and
cmp
decl
cmp
cmp
imul
add
cmp
sub
cmp
sbb
mov
add
movsl
ss
add
push
leave
mov
push
adc
sub
call
or
pop
sbb
xor
dec
shlb
fdivrp
mov
pop
mov
add
shlb
pop
mov
pop
dec
mov
iret
ret
aaa
xor
aaa
fwait
cmpsl
insl
mov
cmp
sub
in
sti
aad
fnstcw
add
aaa
pop
mov
inc
lock
xchg
push
aas
aaa
and
jne
lahf
add
or
push
hlt
inc
or
sti
lahf
sahf
sti
test
stc
int
lcall
inc
and
dec
daa
xor
add
aam
sarl
xor
incl
icebp
and
add
fwait
imul
mov
add
je
ret
addb
filds
add
xor
inc
aas
xor
add
sbb
cwtl
pop
aaa
sbb
pop
and
call
inc
aaa
mov
test
jne
jne
fbstp
inc
adc
jmp
sbb
inc
aaa
push
fwait
adc
sub
xor
sbbl
dec
cmp
je
mov
pop
loop
aas
sub
add
test
nop
sbb
stos
xor
xchg
sub
mov
push
xor
inc
icebp
xor
push
mov
xor
add
xor
sbbl
add
xchg
mov
icebp
xchg
hlt
add
test
ficompl
int3
mov
mov
pop
rcrl
stos
mov
pop
hlt
add
int3
dec
xor
hlt
xor
mov
adc
add
mov
jmp
test
or
push
adc
inc
pop
sub
popa
adc
stos
testl
cltd
push
jb
lea
mov
test
orl
stos
int3
inc
push
xor
movsl
add
sbb
xor
add
pop
xor
mov
push
push
mov
add
cs
mov
outsb
pop
inc
xchg
sti
test
mov
push
shll
mov
cmp
popa
scas
mov
pusha
mov
aas
aad
aaa
mov
jmp
add
jb
sbb
mov
inc
jl
es
and
sti
or
stos
push
add
call
sarb
ds
mov
dec
call
outsb
ja
outsl
rolb
std
inc
cmp
out
repnz
xorl
incb
pop
xor
add
negb
ss
call
aaa
mov
mov
add
in
lods
out
lods
mov
mov
sbb
cmp
mov
adc
stos
xor
sbb
fnstsw
jp
addr16
cld
and
fwait
ss
xor
test
xor
adc
jb
mov
insb
ret
test
leave
cmpsb
sarb
cli
cmpl
mov
add
add
ret
scas
into
push
add
jb
xor
adc
dec
hlt
add
cltd
and
jb
pushf
clc
pop
push
scas
out
push
je
sub
ss
mov
pushf
mov
pop
cmpsl
in
push
xor
add
push
xor
push
ss
sub
sbb
sub
call
mov
daa
sbb
lods
cmc
add
add
or
testb
dec
add
or
sub
testb
push
jmp
je
adc
sahf
ss
jge
inc
pop
inc
pop
jge
inc
dec
das
arpl
out
mov
sbb
popf
xorb
inc
mov
push
add
adc
inc
cmp
push
aaa
adc
je
pop
add
inc
aaa
push
cmp
iret
xchg
loop
mov
xchg
jmp
xor
hlt
lcall
mov
hlt
lcall
sub
hlt
orl
in
dec
sti
pop
pop
lds
mov
bound
dec
push
jmp
or
add
inc
or
mov
ss
mov
fwait
arpl
xor
in
jne
jg
test
in
rcrl
xor
lret
in
out
rcrb
ja
dec
mov
aaa
xor
in
mov
call
fbstp
xor
push
pushf
pop
push
xor
jnp
hlt
out
jg
add
inc
ja
mov
add
xor
outsb
das
pushf
popa
out
test
ret
cmp
sub
dec
test
ret
inc
out
filds
scas
inc
in
jo
andb
das
add
adc
jmp
pop
hlt
or
jg
pop
stos
aas
xor
jb
daa
in
mov
xor
push
cmpsb
call
add
push
cmpsl
cli
jmp
mov
scas
andl
int
cmpsb
cli
jmp
cmpsl
clc
and
or
aad
xor
push
cmp
xor
das
sub
lods
sbb
shll
sbb
sbb
xor
aam
aaa
inc
jmp
popl
cld
shlb
add
push
xor
xchg
adc
fdiv
add
add
add
pushf
add
xchg
jp
add
push
mov
in
xor
push
pop
pop
and
dec
xchg
je
and
pop
dec
push
leave
dec
adc
inc
xchg
jns
pop
xor
fstpl
pushf
pop
ret
push
mov
lods
in
push
sti
sti
cwtl
push
stc
or
call
cwtl
push
je
imul
xor
inc
aaa
fwait
mov
mov
push
pop
add
popf
cs
and
hlt
aas
aaa
sbb
add
fwait
push
or
pop
add
mov
xor
sub
aas
aaa
push
call
fs
inc
lahf
add
cmp
mov
decl
push
or
or
icebp
xor
incb
add
gs
mov
mov
clc
or
hlt
cmp
xor
fwait
das
andb
dec
xor
pop
add
out
mov
cltd
xor
out
jp
aaa
pushf
cmp
in
or
or
out
scas
mov
sbb
movsl
mov
add
bound
movsb
mov
add
jg
jg
test
loope
movsb
pop
push
push
jge
add
movsl
mov
fdivrs
add
push
jns,pn
cmp
pop
sub
xor
add
arpl
adc
add
lahf
cli
imulb
or
pop
xor
adc
xchg
jmp
je
repnz
hlt
or
cmpb
mov
add
arpl
add
imul
test
pop
fdiv
jmp
stos
xor
bound
cmp
test
mov
add
dec
data16
shrl
push
push
ljmp
inc
xor
xchg
mov
xor
cmp
mov
or
add
ret
test
xor
add
mov
sub
dec
jnp
sti
ret
mov
call
adc
inc
mov
mov
roll
sahf
lods
mov
push
inc
xor
mov
add
jmp
lea
adcb
dec
mov
lcall
scas
add
adc
out
add
inc
add
mov
scas
lea
adc
push
ja
mov
mov
inc
mov
lea
in
fcoms
push
int
mov
fdivl
ret
jb
cmp
jne
sbb
sbb
mov
sti
mov
loope
sti
mov
sub
add
mov
xor
mov
dec
mov
add
pop
xor
xor
aas
repnz
inc
push
scas
movsl
aas
out
out
mov
nop
jmp
cmp
fstpl
mov
xchg
mov
test
cltd
pusha
lahf
mov
mov
in
mov
jno
pop
std
data16
pop
ficomps
filds
movb
pop
aaa
or
xor
xor
add
aaa
or
add
mov
push
sbb
je
ss
inc
add
arpl
fsubrl
mov
push
sub
cli
jmp
xchg
test
adc
add
test
fwait
jmp
push
and
test
or
cli
jb
pop
add
jb
shrl
rcrb
mov
pop
dec
icebp
sub
xor
xor
lods
dec
cltd
mov
xor
enter
mov
scas
add
inc
popw
xor
mov
call
shlb
test
add
jmp
mov
outsb
jmp
jp
cmpl
je
jmp
xor
mov
orb
imul
add
std
call
adc
cmp
clc
add
mov
mov
scas
push
hlt
out
icebp
mov
add
jge
or
sbb
dec
cwtl
mov
push
add
into
aaa
add
cli
movsb
pop
mov
pop
xlat
sti
ret
lea
push
xlat
test
enter
inc
xor
ljmp
sti
clc
and
pop
mov
cli
cmp
dec
add
push
dec
sub
xor
decb
imul
test
les
xor
xchg
mov
lea
sub
adcl
imul
pop
xor
popf
push
lods
bound
in
gs
cmp
sbb
out
idiv
and
xor
or
xor
xor
xchg
in
add
or
xor
jne
fistps
mov
or
sub
flds
add
jne
mov
cwtl
push
sahf
add
xchg
test
hlt
xchg
mov
fs
push
jb
mov
and
add
xor
fwait
imul
test
add
lods
cld
mov
sbb
out
lahf
cs
sub
stc
mov
sti
testb
add
jge
loope
lcall
repz
test
roll
jp
ljmp
ds
mov
lcall
jo
inc
adc
xor
test
clc
fldt
xor
subl
jnp
mov
xchg
add
addb
inc
scas
mov
call
add
lcall
mov
xor
stos
jle
or
jmp
ljmp
insb
idiv
rorl
push
shll
jp
aaa
xchg
xor
cmc
mov
push
mov
xchg
decl
inc
addr16
movsb
scas
cli
nop
movsbl
into
call
mov
mov
aaa
or
incl
add
lods
push
into
hlt
mov
or
incb
aaa
mov
lahf
sti
stc
jmp
hlt
into
sbb
rorb
aas
add
roll
loope
stc
int
mov
sub
lds
lock
xor
push
cmp
ret
in
mov
das
loopne
pusha
xor
add
xor
out
add
mov
xor
add
xor
pop
fs
aaa
mov
lods
aaa
xor
cmp
in
jmp
mov
loopne
add
push
xor
push
aas
xor
and
xor
ljmp
cmpsl
add
sub
call
sbb
popf
pop
in
flds
cmp
add
push
add
pop
lds
sarl
pushf
jle
push
add
xchg
pop
sahf
cli
xchg
icebp
xchg
jmp
push
sub
sub
inc
imul
stos
pop
imul
cmc
hlt
xor
inc
or
sti
inc
push
mov
bound
mov
fnsave
xor
je
sub
push
jns
ret
lods
add
jmp
cli
hlt
inc
inc
inc
add
push
shll
jmp
mov
iret
xor
push
pop
vpaddw
sub
stos
xor
push
lods
sarl
imul
shll
add
mov
jne
or
push
mov
adc
xor
arpl
adc
dec
repz
push
idivb
add
push
xchg
ljmp
or
add
or
bound
jecxz
enter
push
mov
xor
call
mov
pop
adc
adc
test
call
xchg
jnp
pop
lret
mov
iret
test
daa
data16
fdivrp
testl
add
adc
cmp
push
cli
mov
je
and
add
mov
mov
dec
cmp
mov
dec
or
push
cmp
dec
cwtl
xchg
adc
aaa
xchg
rcr
mov
out
outsl
xor
pop
push
add
mov
pop
sbb
jmp
rolb
xchg
insl
inc
lahf
add
lock
xor
xchg
out
roll
add
mov
pop
adc
adc
cwtl
pushf
cmp
int3
mov
mov
js
aaa
cmp
cmpl
pop
add
and
dec
sbb
call
sarl
lock
sub
or
mov
out
add
out
xchg
clc
and
xor
in
jge
and
leave
or
cmp
add
pop
lea
push
xor
cs
xor
call
insl
je
test
xor
inc
xor
inc
add
test
xchg
stc
out
and
and
add
repz
hlt
xor
cs
mov
ljmp
inc
jmp
push
cmp
jmp
adc
add
ret
aaa
mov
cmp
pop
test
cmp
add
adc
and
or
cmp
add
jae
and
call
dec
js
sbb
movsb
and
call
adc
call
pop
sub
clc
aaa
add
pop
int3
inc
pop
xchg
inc
cmp
add
in
adc
add
imul
inc
pop
in
decl
jne
dec
je
fnsave
jnp
adc
sti
sub
repz
aaa
push
aad
or
push
ja
xor
inc
inc
out
aas
aaa
cmpsl
add
sti
rorb
and
icebp
pusha
sub
ss
and
lahf
pushl
mov
popf
gs
add
mov
mov
sub
js
cmpb
popf
decb
pushf
cs
lock
test
cmpsl
and
add
xor
ret
stos
pop
and
inc
jmp
add
daa
mov
cmp
lret
ss
mov
pop
jbe
add
cltd
jmp
xorb
xor
add
push
push
push
pushf
dec
xlat
lods
xchg
pop
dec
push
inc
sbb
xor
call
lea
xor
add
jmp
lret
and
xchg
mov
ja
jmp
jecxz
jmp
jecxz
add
outsl
xor
jmp
hlt
xor
xor
sbb
add
repnz
xchg
xchg
and
jmp
xor
push
cmp
add
mov
pushf
in
mov
add
mov
iret
stos
xor
test
push
shlb
xchg
mov
add
xor
add
mov
push
push
push
inc
or
mov
jne
mov
push
arpl
adc
or
add
cld
push
pushl
inc
jp
xor
push
add
mov
or
sbb
imul
cs
dec
xacquire
add
shrl
xor
inc
imul
imul
and
mov
notl
jne
jmp
test
mov
decl
divl
add
cmp
aaa
mov
pop
inc
mov
pusha
negl
pushf
jns
sbb
add
call
add
jl
pop
cwtl
jle
push
jo
or
and
push
lods
xor
lock
jmp
call
sarb
inc
and
jne
and
or
sbb
add
sbb
aaa
imul
xor
dec
pop
add
add
pop
mov
aaa
into
icebp
shll
cmp
repz
pinsrw
mov
loop
xor
dec
mov
ljmp
sbb
lret
testb
adc
or
pop
clc
dec
xor
lea
lret
or
in
sub
std
or
out
pop
dec
add
mov
divl
pop
out
lret
and
push
inc
aaa
pushf
sarb
xchg
and
mov
add
or
out
movsl
cld
mov
loope
adc
fistpl
test
xor
push
add
mov
jmp
hlt
xor
jle
and
dec
pop
push
test
std
pop
push
adc
jnp
fwait
cmp
pop
inc
iret
mov
sub
xor
mov
xor
jle
jmp
and
cld
xor
sbb
out
mov
add
pop
cld
stc
hlt
inc
and
pop
lods
in
sti
xor
add
aaa
jp
xchg
repnz
hlt
stos
push
rcrl
push
negb
fdivr
mov
ss
pop
xor
add
cmp
pop
push
fnstenv
add
jbe
loope
jno
pop
mov
jmp
add
cmpsb
rol
xor
sub
inc
jmp
mov
or
je
gs
sub
add
dec
andl
ficoml
push
xor
out
sub
aaa
sbb
sti
inc
sbb
aas
aaa
fnstenv
xchg
add
mov
inc
imul
xor
xchg
jp
lret
js
repz
popa
js
mov
push
and
add
cmp
cld
cmp
push
sbb
inc
xchg
sarl
orb
mov
xlat
ret
pushf
jle
sbb
mov
addb
and
ja
add
ss
xchg
push
mov
rol
mov
mov
mov
mov
jp
aaa
popa
add
jno
add
je
sub
loopne
or
pop
das
flds
das
sbb
inc
jnp
pop
and
inc
aaa
inc
sub
jo
jl
insb
popa
inc
and
xor
xor
mov
shl
add
xor
ret
bound
ret
into
call
sub
int3
mov
jl
mov
adc
jl
out
mov
loope
test
dec
sub
mov
out
lock
xorb
out
cld
jb
orb
inc
mov
xchg
push
xchg
pop
mov
lea
hlt
cmp
jb
pop
add
push
sar
fdiv
repz
aam
in
jge
cli
js,pt
xchg
repnz
clc
je
cmp
mov
cli
mov
in
xor
add
add
inc
ret
inc
out
inc
jp
xchg
or
insl
cli
jae
dec
jne
push
dec
pop
jmp
aas
push
mov
push
addb
pop
dec
push
leave
pushf
mov
push
add
aad
jp
pop
push
dec
call
lea
and
call
shlb
movsl
inc
cmc
mov
jnp
add
xor
inc
orb
stc
cmp
hlt
ret
cmp
div
adc
jne
or
test
jae
lods
or
sarl
mov
dec
es
popf
decb
aaa
jecxz
data16
inc
mov
mov
add
in
std
aaa
popf
or
jne
cmpsb
jno
mov
add
mov
leave
push
scas
mov
leave
inc
decb
mov
daa
sbb
dec
sbbb
add
mov
sti
sub
lds
xor
or
dec
enter
loope
add
cmp
cmp
dec
mov
cmp
jmp
popa
jmp
xchg
scas
inc
inc
mov
push
cmpl
mov
mov
push
aas
aaa
push
aaa
xor
pop
pop
xor
int3
push
stc
xchg
aaa
cmp
add
ret
adcl
imul
mov
xor
add
subb
add
add
xor
bound
cmp
ss
sti
jmp
sub
pop
sub
xor
imul
xor
jmp
xor
add
push
pushf
aaa
fidivs
test
xor
ret
sub
xor
jnp
xor
inc
sub
and
sub
add
scas
je
loopne
out
cli
call
add
xor
inc
jbe
cmp
mov
and
test
test
lock
fisubrl
add
imul
pop
jo
or
in
cmc
add
or
punpckhbw
cmc
mov
jb
into
xlat
inc
cmp
inc
testl
or
cmp
cli
out
cmp
ljmp
inc
xchg
sub
imul
rcrl
rorb
inc
mov
inc
lock
jp
sbb
rorb
mov
mov
clc
cmpsb
cmp
pushl
shlb
mov
xchg
test
stc
dec
rcrl
mov
lock
addb
ret
lock
je
and
xchg
mov
add
mov
mov
sbbb
out
es
cli
test
inc
ds
cmpb
add
push
or
jle
push
sub
lea
lock
cmp
or
mov
aaa
jb
push
aam
sbb
xor
mov
sbb
mov
hlt
or
mov
std
insl
push
hlt
add
divb
fsubr
loop
jo
daa
xor
addr16
leave
out
xor
add
int3
pop
cmp
outsl
mov
jne
loop
std
jne
add
je
inc
in
fsubrl
mov
and
aaa
sbb
fwait
aaa
adc
cmp
orb
and
or
jmp
in
fnsave
add
cli
aam
jge
sub
jg
out
mov
std
jmp
xchg
dec
xchg
dec
or
sub
xor
fnstcw
repnz
clc
adc
sar
idivb
xchg
sahf
loopne
push
inc
cmp
out
jge
and
jne
mov
adc
inc
repz
scas
and
cli
hlt
add
cld
xor
mov
idiv
add
xor
cmp
sbbb
fdivs
cmpl
push
xor
je
xchg
stc
clc
mov
sub
lock
push
mov
scas
pop
adcb
outsb
or
or
clc
or
int3
inc
add
inc
sarb
jb
mov
add
push
jp
add
mov
add
jp
pop
xor
loope
inc
jne
sbbb
inc
clc
or
push
mov
mov
stos
mov
test
fidivs
pop
push
jl
and
jnp
lret
mov
add
xchg
in
sti
lock
push
xchg
pushf
dec
push
mov
adc
mov
push
ja
mov
add
adc
clc
lods
rorb
sti
xchg
stc
repnz
push
xchg
les
adcl
sub
inc
aaa
or
or
pop
mov
mov
shrb
or
ljmp
out
mov
in
orl
jg
out
xor
fsubl
cmp
out
jo
bound
inc
jg
pop
inc
hlt
out
testl
addl
mov
aaa
dec
lea
mov
das
out
inc
mov
mov
iret
mov
stos
lahf
mov
fwait
pop
jle
in
add
aaa
push
pushf
or
mov
testb
mov
or
inc
jnp
xchg
mov
xor
pusha
testl
mov
inc
ret
out
sahf
add
xor
dec
je
add
xchg
hlt
stos
jp
pusha
ja
test
xor
xchg
les
fisttps
dec
dec
inc
and
fcompl
jmp
mov
ss
adc
cmpsb
loope
jne
mov
mov
jge
mov
cmp
icebp
addr16
push
pop
xor
mov
sbb
xchg
or
ljmp
idiv
add
fldl
sub
divb
jb
pop
outsb
mov
add
les
scas
inc
or
inc
stc
add
roll
push
pop
hlt
and
mov
inc
or
ffreep
ret
push
mov
loope
push
lea
ljmp
dec
or
mov
push
test
add
push
mov
sub
jno
shlb
push
scas
push
or
cld
ret
std
mov
sub
dec
ret
vaddss
test
xchg
xchg
push
push
in
push
les
mov
cmp
sar
sahf
repz
and
lds
nop
les
jns
pushf
mov
faddl
shr
add
mov
sti
js
pop
leave
cmc
test
push
mov
mov
jmp
cmp
scas
pop
jno
mov
or
xor
sub
jmp
add
push
nop
lret
jp
xorl
pop
add
sbb
sbb
testb
mov
test
mov
xorl
jae
mov
add
xor
stos
mov
mov
pop
fildl
push
xor
popf
mov
dec
dec
mov
scas
popf
pop
je
jo
add
or
dec
jmp
lods
add
fstpt
mov
shl
fstl
jbe
add
push
or
pop
lods
jmp
add
mov
test
cmp
pop
aaa
xor
hlt
ss
stos
xchg
inc
popa
mov
enter
or
call
cmp
cmp
mov
lret
stc
std
add
mov
scas
testb
in
add
mov
or
aaa
sbb
sub
adc
add
add
jmp
or
sbbl
add
dec
xor
dec
xor
jp
push
dec
adc
call
dec
mov
add
stc
clc
mov
push
xor
testb
xor
addr16
icebp
call
push
cmp
cmp
dec
add
mov
add
xchg
xor
dec
xchg
push
aaa
mov
jecxz
jp
test
adc
mov
je
dec
jle
pop
mov
ljmp
xor
pop
test
bnd
pushl
mov
test
out
xchg
sahf
add
xor
cs
mov
aam
push
pop
sbb
clc
pop
hlt
jle
mov
pop
add
add
ljmp
xor
lods
push
daa
xlat
cld
mov
inc
xor
fdivs
xor
xchg
add
divb
jg
add
mov
js
shlb
repz
test
fdivl
xlat
cmp
jb
add
xor
sbb
xor
sbb
aaa
daa
pop
dec
daa
mov
add
ret
sbb
jne
call
dec
xor
jb
das
push
popa
dec
ds
jmp
cmc
adc
daa
addr16
incb
dec
sub
add
loop
nop
xchg
push
sub
call
in
cmc
je
inc
xor
idivb
and
test
mov
or
add
je
add
jmp
jns
arpl
lods
lods
dec
shlb
stc
adcb
jns
xchg
and
pop
jl
inc
insl
fs
jns
jns
popa
xor
insb
sbb
lea
gs
mov
gs
jmp
scas
testl
imul
out
je
mov
or
in
clc
mov
add
lds
mov
js
dec
jb
cmc
jne
push
add
cltd
jb
mov
xor
mov
or
or
fisubrl
add
in
or
cmpsb
jg
add
jnp
shll
into
shl
dec
pop
push
pop
and
fiadds
push
aaa
mov
jbe
adc
lea
in
add
mov
add
xchg
jb
popf
jle
adc
cmc
outsb
cmp
out
or
out
adc
mov
lea
xchg
hlt
jmp
gs
shll
call
mov
mov
ret
inc
movsbl
mov
inc
or
add
bound
xor
jl
add
aas
loop
out
xor
mov
movsb
jmp
lds
xor
jl
mov
fwait
aaa
xor
push
test
gs
fildl
outsb
mov
mov
popf
or
add
cli
outsb
call
ss
inc
bound
mov
sbb
iret
add
dec
in
and
adc
test
inc
mov
nop
fsubp
dec
aad
and
aaa
jne
inc
add
dec
addr16
sbb
sub
js
cmpb
add
push
xor
cmpsb
ss
outsl
aaa
fiaddl
test
xor
sarl
or
scas
cmp
ret
and
jo
movsb
addr16
mov
mov
fcomip
xor
aaa
roll
clc
mov
add
mov
ds
inc
mov
add
xor
xor
cli
mov
add
lfs
xchg
pop
insb
jle
outsb
test
xor
cli
add
outsb
adc
scas
jmp
cmp
jae
cmp
ss
mov
jne
test
cmp
add
in
xor
add
rorl
sub
cmp
add
jb
repz
xor
push
xchg
mov
add
notb
or
sub
inc
fistpll
add
xor
es
les
add
cwtl
cli
or
pop
dec
neg
aaa
pop
pushl
mov
push
lods
pop
mov
pushl
pop
inc
hlt
mov
movl
add
ret
leave
stos
sti
fcompl
mov
lahf
lcall
sub
iret
stos
ja
movl
inc
mov
je
call
inc
mov
hlt
xor
subb
negl
les
mov
ret
jl
lcall
popf
outsb
push
jne
push
aaa
xor
ss
sub
mov
add
pop
fisubs
add
insl
jge
xor
shrl
dec
add
fs
imul
fistpll
cmp
int3
jmp
sub
lock
push
imul
pusha
stc
add
adc
repnz
mov
jle
cmp
stos
out
pop
mov
ret
gs
insb
mov
ljmp
sub
out
repz
jmp
mul
add
hlt
inc
inc
inc
jmp
sti
out
cs
call
or
loopne
es
icebp
xor
or
pop
xchg
pop
sbbb
cli
mov
pop
jo
popf
push
mov
pop
les
loope
cli
pushf
jo
pop
dec
int
xchg
mov
out
in
push
add
in
jl
icebp
xor
jmp
jecxz
in
xor
pop
pop
jb
in
pop
xor
mov
jp
mov
and
lea
push
mov
notb
lea
xor
add
repz
jp
loope
adc
lcall
sbb
rcrb
mov
cmp
popf
imul
xor
lock
fs
pop
out
ss
popf
cmp
aaa
fadd
or
loop
hlt
xor
mov
cmpsb
scas
das
ja
jmp
pop
jno
mov
xor
xchg
inc
int3
xlat
ss
incb
add
jbe
pop
xor
sub
mov
cltd
popa
lods
mov
cld
popa
cmp
pop
mov
jno
adc
cli
dec
ret
out
mov
stc
sbb
lcall
lahf
push
leave
cltd
in
popa
lods
xor
jmp
jb
sti
cmp
jbe
sbb
out
and
adc
add
negb
sti
cmp
add
mov
push
ret
xchg
fildll
mov
xor
lahf
cs
stos
dec
imul
loopne
test
pop
outsl
dec
inc
fdiv
cs
xor
push
adc
test
je
inc
mov
pop
ljmp
out
jbe
dec
xchg
test
mov
fcomi
xor
add
mov
or
xor
nop
inc
adc
movsl
pop
mov
cmp
rcll
stc
outsb
adc
xor
add
cmp
inc
mov
sub
mov
sbb
shlb
hlt
insb
aaa
cmp
jg,pt
shrl
push
xor
add
pop
mov
pop
xor
popf
daa
add
out
mov
fsincos
hlt
xor
mov
or
mov
adc
pusha
testb
push
insb
push
jmp
or
jmp
rolb
xchg
je
jbe
mov
jns
inc
sti
sub
push
leave
mov
push
aad
jp
xor
cmpl
mov
fs
push
pop
arpl
and
add
addr16
in
mov
add
ss
clc
jbe
add
into
jmp
inc
hlt
inc
lahf
jmp
lcall
mov
xchg
clc
jmp
lcall
dec
sbb
cmp
cmp
cmp
stos
movl
dec
pusha
push
add
cmp
cmp
lods
xchg
popf
pop
xor
cli
orb
xchg
add
add
pop
adc
jl
mov
hlt
mov
jmp
pop
or
cs
stos
or
movsl
inc
leave
hlt
mov
popf
in
xor
xor
add
call
aaa
scas
sub
xor
ret
xor
les
das
mov
testl
daa
dec
mov
add
arpl
inc
mov
add
xor
fwait
jle
shll
cmp
mov
stos
sbb
mov
and
stos
cmp
jecxz
out
pop
out
dec
pop
inc
movsl
cld
mov
scas
movsl
imul
sbb
pop
dec
push
movsbl
jno
mov
mov
aas
or
out
sub
push
push
mov
add
push
cs
xlat
add
lods
jle
pop
roll
out
pushl
loope
pop
int3
xor
or
js
xchg
and
push
sbb
cmp
das
ljmp
mov
dec
addr16
jae
cmp
loopne
mov
inc
adc
xor
in
scas
jae
ljmp
cmp
jne
jge
mov
cld
mov
jge
in
add
and
mov
adc
ja
and
lods
jns
mov
mov
je
subl
les
xchg
inc
cld
or
repnz
lea
enter
dec
push
aad
mov
mov
push
adc
inc
scas
stc
add
jnp
cli
sub
fwait
mov
testb
add
jno
add
outsb
addb
dec
aaa
aaa
adc
xor
les
push
mov
mov
ret
data16
ret
mov
cmp
xor
lds
pop
add
sbb
dec
sbb
xchg
ss
or
fidivrl
add
fistpl
add
inc
adc
add
inc
ret
les
cmpsb
test
inc
and
or
aas
or
leave
dec
ret
mov
add
mov
sub
jno
aaa
pop
lea
xor
aam
mov
pop
fldt
lret
push
inc
lods
shll
cld
xor
fisttpl
mov
dec
cwtl
sub
testl
fs
es
out
jae
insl
les
add
pop
jmp
imul
arpl
insb
pop
rcrl
ret
mov
and
aas
les
ljmp
bnd
sub
aaa
mov
paddb
jae
jp
add
push
ss
cmp
mov
cmp
in
pop
ss
xchg
pop
mov
add
pop
xor
cmp
stc
pop
test
add
dec
fwait
addr16
xor
out
mov
and
xor
push
jb
mov
jl
xchg
pop
mov
clc
pusha
cli
fisubrs
mov
add
or
cmp
mov
jae
mov
cli
fcmovb
loope
sarl
push
pusha
jns
cli
add
data16
mov
or
cmp
pushf
sub
push
add
movsb
jp
mov
mov
nop
lea
fidivs
orb
add
imul
add
lods
stc
mov
nop
pop
pop
sub
mov
lods
mov
call
js
adc
enter
or
push
and
adc
pusha
testb
mov
and
mov
xor
es
add
inc
and
pop
sub
in
cmc
add
aas
cmp
add
sbb
push
add
loop
adc
add
shrb
xchg
cmpsb
cmp
or
popf
test
dec
or
jle
add
lcall
cwtl
push
jg
cmp
dec
sti
ss
inc
push
mov
or
cmp
test
pop
cltd
inc
sti
add
ss
jg
add
pop
int
mov
sarb
and
cmp
mov
lods
adc
lods
sbb
popf
cld
mov
add
test
mul
mov
lock
inc
jne
adc
idivl
dec
test
inc
js
lds
jmp
and
sub
out
and
add
repnz
jmp
cmp
lock
jae
xor
mov
jmp
les
xor
fimuls
imulb
add
hlt
mov
dec
in
scas
ljmp
pusha
pop
cli
das
testb
xchg
scas
icebp
or
or
push
mov
xor
jmp
cmp
sub
bound
add
mov
loopne
cltd
jmp
mov
in
mov
mov
adc
and
xchg
jle
mov
pop
in
dec
imul
sti
push
mov
cmp
jb
push
repz
push
adc
aaa
jnp
sub
adc
push
roll
adc
fs
push
pop
cmp
adc
movl
add
fwait
jp
popa
sbb
fidivl
add
ret
sub
pop
sub
push
cs
jmp
sub
push
push
rcll
push
jns
push
cwtl
sub
push
rcll
mov
lods
jmp
mov
sub
adcl
or
aaa
add
xchg
inc
or
add
cmpsb
aad
xchg
xchg
mov
shlb
in
pop
xchg
sti
add
icebp
mov
lea
cs
inc
jg
aas
aaa
lret
out
or
add
mov
add
movsl
das
lea
add
mov
nop
rolb
push
subb
testl
and
add
cwtl
push
lods
adc
loop
mov
aaa
mov
testl
pop
jmp
lcall
stos
lods
pop
push
lcall
jne
push
push
pop
addl
add
push
ss
sbb
sub
out
int3
inc
lock
add
rep
mov
lcall
fdiv
add
pusha
xor
sarb
lods
lahf
xchg
lcall
or
dec
cwtl
insb
and
cmp
push
stc
daa
repnz
pop
addb
stc
ja
add
sahf
inc
fsincos
hlt
xor
jmp
push
pop
cli
scas
cwtl
je
idivl
xor
scas
add
xor
movaps
mov
stos
add
or
pushf
scas
pop
cli
mov
lahf
inc
adc
sub
je
mov
int3
movsb
inc
inc
jmp
mov
divb
orl
mov
sub
xlat
dec
mov
mov
arpl
js
sbb
sub
sbb
not
add
and
incl
pop
adc
add
cmp
or
test
cld
jae
cmp
outsl
add
stos
sbb
lods
aas
and
ror
inc
sbb
adcl
loop
hlt
lea
and
adc
mov
or
jbe
popw
sbb
mov
jo
adc
dec
sub
mov
push
mov
dec
cli
adc
pop
sub
jae
sbb
shrb
js
lea
cs
or
lea
sub
addr16
scas
bound
sbb
jno
sbb
jo
gs
pop
in
mov
lea
cs
ljmp
or
push
add
sub
cmp
sbb
into
mov
bound
xor
sub
add
in
sbb
aaa
lods
stos
repz
fsubr
and
mov
and
cmp
lock
sub
pop
mov
jne
repnz
addr16
cld
and
fisttpl
das
adc
nop
out
mov
std
rep
icebp
fbstp
ret
xor
test
mov
jecxz
insl
xor
sarb
out
ret
stos
iret
add
rcll
jmp
mov
test
iret
scas
cmc
fldl
out
std
mov
or
daa
arpl
jne
xchg
sbb
call
inc
pop
arpl
pop
outsb
push
mov
pop
jmp
push
mov
hlt
push
pop
jmp
gs
loopne
cmpsb
cmp
fs
pop
cli
xchg
mov
add
add
cld
cmp
xchg
push
popa
pop
cli
push
mov
cli
sub
push
push
bound
dec
cmc
add
or
scas
stos
jne
mov
test
xchg
xlat
pushf
add
jmp
mov
stos
pop
and
test
loop
mov
ss
or
xchg
adc
add
cmpl
imul
xchg
decl
mov
loop
fidivs
add
pop
outsl
add
add
xor
push
mov
divb
or
inc
clc
sbb
add
popf
and
jle
mov
je
enter
xor
popf
cmpsb
and
jle
add
dec
adc
aaa
jmp
stc
jae
sbb
lea
sbb
mov
cmc
dec
jg
cmp
aaa
popa
push
sar
mov
ss
mov
mov
mov
xor
sbb
inc
call
lahf
inc
hlt
out
ja
out
cmp
add
out
mov
and
dec
xor
xor
ljmp
clc
inc
fdivs
add
cmpsl
jge
decl
pop
aaa
xor
inc
xchg
sbb
adc
add
je
testb
or
sbb
and
ret
insl
stc
mov
push
mov
aaa
std
xor
sbb
aaa
test
xor
xchg
cmpsb
je
adc
xor
insb
repz
cli
dec
lret
ret
scas
shll
out
cld
cltd
or
jmp
mov
xchg
push
bound
xor
insb
mov
cld
mulb
pop
test
lods
push
cli
int3
lret
push
into
jge
sbb
pusha
jle
or
push
bound
cmp
out
add
dec
popf
addl
or
mov
incl
pop
lock
pop
push
test
aaa
add
jg
dec
or
scas
jb
sahf
movsb
jo
shlb
out
add
adc
rclb
mov
pop
notb
shll
ja
cli
cld
cmp
mov
push
jl
cmp
mov
scas
or
bound
push
mov
push
jbe
fxch
clc
test
sbb
push
mov
mov
or
mov
mov
sbb
mov
xor
jnp
pop
ds
or
or
mov
sbb
push
lahf
mov
xor
add
stos
xchg
sub
mov
push
sbb
bound
out
mov
movb
ss
or
fwait
sti
adcl
sti
sbb
std
xchg
xor
adc
xor
rolb
shlb
jnp
shrb
xor
push
ja
sub
je
out
add
add
sbb
push
roll
lock
cwtl
jmp
je
lock
fstpt
inc
xchg
mov
inc
outsl
mov
negl
mov
idivl
in
xor
mov
fbstp
dec
in
mov
movsl
ret
add
repnz
mov
imul
add
inc
jmp
cmp
add
mov
inc
or
xor
jmp
dec
ss
add
sub
test
sub
clc
mov
bound
aad
jae
cltd
sub
jbe
xor
enter
jmp
bound
mov
test
dec
cli
cltd
leave
divb
jb
mov
inc
jmp
add
mov
add
pop
add
push
lods
out
std
rol
pop
sub
push
or
add
push
int3
push
mov
or
inc
pop
idiv
inc
ds
cmp
sub
add
xor
rcrb
shlb
shl
icebp
push
pop
push
leave
dec
push
sub
scas
jge
sahf
xor
test
xor
jecxz
cld
incl
divb
int3
lock
add
notb
mov
je
mov
or
lods
adc
call
or
aaa
fidivrl
sbb
aas
or
push
xor
add
jne
jbe
test
xor
mov
fwait
rsm
filds
push
mov
xchg
lcall
xchg
mov
mov
test
push
decb
sbb
divb
add
mov
filds
push
mov
xchg
repnz
add
iret
in
push
push
lods
out
test
stc
jle
pusha
incb
das
in
adc
shlb
inc
mov
rdpmc
mov
mov
fiaddl
cmpb
add
in
mov
mov
outsl
arpl
out
int3
mov
jae
insl
mov
clc
xchg
xchg
dec
call
js
pop
or
xor
cli
repz
jle
adc
xor
xor
jl
fistpll
mov
mov
hlt
out
jg
and
shlb
mov
aas
add
jge
sti
out
scas
sbb
negb
rolb
jnp
in
out
int
pop
test
add
xor
dec
pop
inc
fdivrl
push
cmp
add
pop
inc
mov
mov
xor
bound
mov
inc
insb
jnp
test
xor
add
mov
or
jae
test
xor
add
shlb
add
jecxz
cld
bound
push
add
push
ljmp
int
add
add
cmp
dec
jle
pop
cmp
mov
orb
aaa
add
push
push
mov
sbb
icebp
add
inc
dec
ljmp
inc
test
inc
dec
mov
test
lea
idiv
mov
mov
testb
enter
fiaddl
push
scas
mov
jne
jge
loop
fcmovne
cmp
add
mov
imul
aaa
and
test
mov
pop
movsl
aaa
pop
inc
xchg
ret
pushf
incb
xor
insl
jbe
pop
es
jnp
out
addl
and
add
test
push
loopne
pushw
ja
ja
ret
call
mov
cmc
cli
inc
int
lock
les
add
test
xchg
jle
loop
jg
stc
mov
mov
orl
mov
pusha
aaa
xor
inc
pop
jecxz
lea
negb
inc
ss
repnz
gs
add
lcall
jp
in
inc
and
mov
rolb
xor
xchg
fisubrl
in
mov
js
dec
cmp
add
out
sub
xchg
add
and
xlat
sbb
xor
sbb
inc
push
imull
aas
loopne
dec
fidivrs
stos
nop
call
xor
ljmp
adc
std
cmp
mov
insb
and
inc
cmc
popf
jns
out
mov
bound
cmp
add
pop
xchg
sbb
push
fnstsw
or
dec
cli
cmpsb
outsb
out
in
jb
clc
stc
cmp
mov
aaa
mov
dec
imul
mov
loope
sub
in
push
xor
push
add
pop
sahf
add
mov
xchg
mov
ss
inc
sbb
and
rcrl
or
push
adc
xchg
add
xor
sarb
jne
stos
push
movsb
lock
add
jae
pop
and
push
sub
lahf
lds
into
xor
sbb
jnp
or
lock
and
pop
call
sbb
arpl
push
in
pop
push
mov
incl
sbb
aaa
jno
inc
xchg
mov
test
bound
mov
hlt
and
sti
add
mov
sti
push
push
cmp
and
aas
push
imul
and
inc
ror
add
pop
lea
pop
add
cmp
xlat
out
pop
imul
scas
pop
jns
xchg
stc
and
pop
cmc
insb
dec
xchg
pop
cli
dec
lods
mov
and
push
add
mov
sahf
call
push
and
inc
xchg
xor
popl
das
orl
pop
inc
scas
and
loope
mov
stos
cmc
mov
imul
xor
clc
xlat
lods
iret
inc
dec
jno
push
pop
in
inc
fwait
loop
scas
out
mov
fadd
sub
pop
mov
cmp
add
sub
xlat
in
mov
aaa
aam
pop
inc
adc
addr16
mov
outsl
enter
cwtl
rorl
scas
jns
lods
sub
insl
inc
hlt
add
popa
jmp
rorl
dec
cli
xchg
fcompl
jo
pop
jge
adc
fcomip
bound
sbb
test
add
jno
or
pop
inc
xchg
in
stc
push
xchg
mov
add
add
cmp
in
divl
jno
movsl
ret
push
sub
adc
pop
cwtl
add
idiv
ret
aam
push
inc
mov
jmp
mov
incl
mov
jmp
call
inc
enter
mov
mov
add
stc
mov
in
ffreep
mov
lea
std
ljmp
push
fnstenv
sahf
sbb
setb
lcall
mov
dec
sti
mov
push
out
lahf
mov
les
add
aaa
addb
jb
push
aaa
add
mov
dec
mov
loopne
repz
add
fdivrs
pushl
mov
pop
mov
mov
xlat
sahf
add
lret
adc
pop
dec
xchg
cli
push
sub
repz
push
xchg
fldl
cli
hlt
pop
adcb
gs
push
jp
mov
gs
fs
dec
incb
stos
daa
popa
dec
mov
fistpl
mov
add
enter
pusha
cmpb
inc
popl
scas
shlb
mov
xchg
cmovl
leave
pushf
scas
lock
ljmp
jle
cmpsl
call
stc
inc
scas
mov
jle
lods
lods
ja
ss
dec
int
nop
and
jg
fisttpl
adcl
repnz
sub
fdivrs
add
in
push
or
cmp
out
test
xor
cmp
enter
sbb
sub
out
cmp
mov
sahf
push
cmp
push
orl
adc
jns
outsb
pop
outsb
and
pop
pop
adc
shll
je
mov
inc
lret
xchg
add
idiv
mov
add
mov
cmp
cli
gs
divb
push
pop
popa
pop
rorl
mov
clc
cmp
mov
cld
add
scas
std
pushl
mov
je
jbe
dec
mov
cmpsb
addr16
mov
iret
pop
cld
xor
test
adc
mov
sub
enter
mov
add
mov
outsb
cmpsb
xor
addl
or
add
push
pop
stos
add
imul
shl
add
cmpsl
rcll
mov
aaa
data16
mov
fcom
std
lcall
mov
and
xor
mov
xor
std
mov
add
aaa
dec
jle
repnz
test
inc
call
fs
cmp
inc
fldcw
clc
sbbb
aaa
dec
gs
repnz
aam
jmp
fistpl
out
call
shl
cli
inc
cs
dec
scas
cwtl
jbe
mov
jbe
sbbl
mov
xor
inc
addr16
jl
outsl
dec
add
add
outsl
add
lock
jnp
clc
mov
fistpll
xor
shl
aaa
jnp
sbb
ret
shlb
icebp
in
cmp
add
clc
pop
mov
dec
mov
add
cmp
mov
fistpll
insb
dec
lret
ds
stc
dec
add
cmp
sub
or
dec
add
flds
add
xor
bound
xor
cmp
loop
cmp
push
fwait
jmp
xor
cs
or
jns
dec
cmp
sbbl
sub
call
and
call
or
cmp
mov
jmp
outsl
jno
inc
add
jge
add
test
insl
cli
hlt
pushf
cs
jmp
jmp
dec
fcmovnb
dec
fcmovnbe
dec
ds
bt
inc
loopne
xor
stos
gs
mov
cmc
push
jb
rorb
cmp
add
scas
inc
loopne
xor
mov
adc
jae
sub
push
sub
test
add
sub
imul
movlps
add
mov
mov
bound
dec
adc
push
or
test
sub
aaa
nop
xchg
loopne
movl
enter
dec
lea
movl
push
clc
cld
enter
jnp
aaa
dec
incb
out
push
or
add
shl
lods
adc
inc
dec
cli
mov
mov
adcb
mov
mov
or
sbb
in
xchg
inc
in
aas
std
aad
call
mov
loop
dec
cmp
movsl
jnp
sbb
and
orb
repz
inc
movups
or
test
add
dec
jecxz
add
insb
shrl
lret
cmp
arpl
adc
loopne
sarb
outsb
pop
fs
inc
mov
inc
and
inc
pop
sbb
les
dec
movsb
jle
cmp
test
dec
adc
bnd
stc
leave
dec
ja
push
pop
mov
aaa
cmp
cmp
push
ror
lock
pop
xchg
or
mov
stc
push
mov
and
mov
push
xchg
in
push
icebp
lods
out
aam
sub
stc
cmp
inc
lds
fdivs
in
sbb
mov
leave
mov
xor
cmp
or
inc
imul
and
cli
outsb
xchg
cld
shrb
jmp
add
cmc
fiadds
add
add
push
or
cli
sub
mov
scas
stc
mov
mov
arpl
inc
lret
inc
xchg
add
dec
push
lea
pop
call
xchg
aaa
jnp
or
or
mov
sarb
notl
mov
add
fisubrs
dec
push
mov
add
test
lahf
xor
push
mov
test
mov
popf
add
sub
aaa
jl
jmp
mov
cli
int
mov
add
arpl
mov
enter
mov
adc
into
cli
inc
enter
add
cli
ss
lods
inc
or
addl
ret
stc
add
call
ja
pop
jle
cmp
pushl
ret
dec
xor
mov
rorb
rolb
aaa
ret
scas
and
aas
sbb
insl
inc
or
roll
xor
jle
aaa
inc
je
sbb
lods
stos
sub
je
into
data16
mov
jmp
das
into
insb
dec
stos
inc
addb
add
gs
mov
aaa
jmp
addr16
jae
call
shlb
jae
adc
je
or
hlt
out
stos
call
stos
jae
sub
dec
shl
mov
lock
aaa
repz
ss
mov
add
sub
outsb
bound
xchg
adc
inc
dec
clc
sub
mov
xchg
in
add
repz
inc
xor
sub
gs
cli
imul
icebp
mov
xchg
xor
xchg
in
dec
repz
test
pop
stc
insb
mov
fiadds
into
add
push
ds
jl
sti
mov
iret
inc
cli
scas
insb
pop
mulb
inc
cmp
or
testl
stos
jns
add
add
pop
dec
push
addr16
push
cmp
mov
cwtl
insb
jno
test
cmp
xchg
mov
mov
push
outsb
mov
jmp
add
inc
inc
xchg
add
pop
not
addr16
mov
sbbl
inc
dec
lea
idiv
stc
mov
call
push
lock
sbb
xor
add
pop
je
and
sub
aaa
rol
repz
aas
cmpsl
cli
cwtl
mov
xchg
inc
add
mov
cmp
jne
mov
inc
testb
rol
or
push
rcrb
or
xchg
pusha
dec
mov
int
and
jnp
add
push
hlt
scas
sbb
mov
push
cltd
aaa
sbb
ret
fildll
loope
inc
iret
xchg
dec
mov
xor
addr16
aam
test
add
jbe
fnstsw
sahf
out
sub
jo
cld
movsl
sti
mov
pusha
orb
mov
xchg
sbb
pop
add
sub
hlt
xacquire
add
call
testl
lret
jg
xor
rcrl
lcall
aaa
xor
cmp
sub
ss
outsb
sub
test
jnp
add
popf
xor
jmp
cmp
cmp
xchg
test
adc
and
cld
incb
fldl
add
mov
push
xor
insl
repz
cmp
rcll
jmp
mov
cmp
lods
push
dec
sub
mov
call
cmp
pusha
call
in
xor
jmp
aas
cs
xor
jns
clc
push
and
arpl
push
cmp
nop
fstps
arpl
push
inc
jbe
int
sahf
xor
adc
push
dec
xchg
rcrl
sub
pop
es
mov
mov
add
pop
xor
add
mov
mov
and
push
dec
push
adc
mov
scas
add
xor
add
push
add
sbb
adc
xchg
sbb
pushl
sbb
or
add
test
and
sbb
jmp
insb
je
cmp
adc
dec
or
adc
inc
pop
add
mov
sbb
push
mov
and
mov
sub
ljmp
aaa
mov
shll
inc
cmpsb
inc
call
mov
jmp
int
jp
adc
add
sub
and
lods
shll
add
sbb
sar
addl
mov
sbb
jmp
sarb
mov
dec
insl
inc
pop
inc
pop
divb
xchg
fbld
cmpsl
test
or
push
pop
nop
inc
push
xor
js
imul
mov
hlt
daa
and
lea
mov
push
pop
insl
test
and
jb
pop
mov
add
repnz
jecxz
loop
inc
adcb
add
cmpl
mov
das
cmc
or
call
out
mov
push
outsb
push
xor
outsb
test
xchg
jmp
xor
push
je
push
insb
idivb
sti
scas
dec
in
call
cmpsl
cs
push
sub
dec
out
jb
mov
add
sbb
cli
sbb
repz
outsb
mov
test
cmpl
mov
fsubrl
inc
xchg
addr16
test
xchg
faddl
jmp
notb
ret
inc
add
push
xor
add
mov
hlt
mov
pushf
idiv
cs
call
adc
cmp
add
sbb
adc
push
pop
cmp
inc
aaa
mov
lods
mov
mov
call
testb
insl
cmp
and
pop
cltd
imul
mov
loope
hlt
cltd
imul
inc
lcall
or
push
pop
pop
jbe
mov
in
add
xor
push
aaa
out
adc
mov
xchg
dec
push
incl
add
mov
imul
das
pushf
addr16
mov
lock
mov
add
notl
sub
cmp
xor
mov
adc
pushf
or
test
fucomp
testb
add
mov
pop
cli
jo
fisttps
jns
pop
das
ja
jbe
enter
xor
pop
lret
cltd
pop
and
add
in
addr16
xor
inc
xor
jl
xor
sub
inc
aas
jno
shrl
push
inc
xchg
pop
clc
mov
andl
pop
std
jecxz
mov
sbb
stc
mov
cmp
into
mov
xor
add
sbbl
in
out
mov
push
cld
jge
xor
cmp
push
mov
add
das
jmp
mov
call
jnp
adc
push
icebp
xchg
lcall
dec
jb
mov
jmp
dec
ds
insl
je
test
add
add
adc
cli
sbb
cmc
cmp
sub
arpl
jmp
xor
mov
xor
call
sbb
sti
call
mov
mov
add
xor
ss
cmp
cld
cmp
jle
xor
jmp
insb
pushw
mov
inc
sbb
add
pop
stos
je
mov
add
dec
mov
jne
fadds
pop
fwait
xor
jmp
test
adc
xor
dec
decl
rorb
aam
add
lods
inc
les
add
stc
not
pop
jne
test
add
andl
add
je
and
int
pop
stc
notb
sbb
jp
and
lea
dec
jnp
dec
push
dec
xchg
adc
outsb
cmc
stc
test
sbb
aaa
or
mov
xchg
int3
cli
ret
dec
call
test
fidivs
clc
and
test
sarb
mov
or
arpl
mov
add
and
sti
mov
pop
js
out
test
xor
out
nop
arpl
mov
adc
imull
xchg
int
xor
add
push
gs
xor
dec
cli
mov
incb
mov
fs
jo
ljmp
sub
js
loopne
lret
jmp
inc
xor
xor
js
mov
insb
mov
lock
xor
int
and
push
cmp
mov
pmullw
fs
mov
lock
push
loop
mov
cmp
fsubl
int3
fs
sbb
fs
cmp
pop
mov
in
enter
inc
cmp
idivl
xor
shl
jle
cld
add
mov
sbb
ja
jbe
dec
adc
xor
or
sub
inc
xchg
mov
jmp
mov
rorb
xor
dec
jb
test
in
mov
inc
xor
test
xor
stc
out
pop
test
mov
test
and
add
add
push
pop
mov
test
adc
sub
fs
test
add
or
cmp
push
test
add
jmp
mov
add
pop
mov
pop
ret
mov
stc
xchg
idivb
jbe
mov
push
lds
xchg
mov
add
lcall
push
mov
in
mov
mov
add
mov
xchg
gs
inc
out
daa
cli
fidivrs
in
xor
add
xor
mov
xorb
test
cmp
mov
mov
push
maskmovq
negl
mov
add
cmp
sub
dec
mov
cwtl
cld
pop
xchg
sti
add
call
sti
cmp
ds
xchg
nop
inc
add
das
lret
in
mov
std
gs
das
xchg
lea
cmp
minps
sti
clc
int
sti
cmp
pushl
xchg
push
fadds
fistpll
add
mov
add
lea
sbb
mov
fwait
popa
mov
mov
xor
add
and
pop
insb
lahf
ret
xchg
add
pop
mov
scas
pop
pop
dec
and
mov
imul
inc
test
shll
insl
sub
sub
or
pop
sbb
fisttps
xor
adc
stc
xor
add
or
data16
and
or
test
fldenv
subb
mov
in
stos
test
add
xor
into
pop
xor
xchg
add
mov
cs
imul
fsubl
jns
push
jmp
pop
cli
in
loope
jmp
rcrb
cmpb
test
or
mov
sub
into
inc
pop
cli
insl
je
test
cmp
ljmp
inc
jne
push
test
popf
jmp
mov
cli
fiadds
add
add
xor
xor
bound
add
add
sahf
or
ljmp
or
cmp
xor
lea
dec
cltd
add
addb
dec
out
push
repz
adc
mov
and
scas
jl
ds
pop
and
mov
push
ss
add
imul
add
push
xorl
cmc
stc
sbb
mov
add
sub
add
xor
add
ljmp
stc
add
aaa
movsb
ret
cwtl
shlb
add
data16
cmpsl
or
mov
out
lods
mov
or
decl
nop
shlb
repz
aaa
or
or
mov
and
add
dec
lods
insl
add
test
and
outsl
add
or
or
call
ret
pop
loopw
adc
mov
or
mov
or
dec
cltd
xor
add
xor
pop
inc
pop
hlt
mov
sub
push
inc
sub
repz
fbstp
call
jnp
xor
mov
inc
gs
mov
add
call
enter
pop
pop
and
add
jne
aaa
xor
mov
mov
mov
ret
push
or
js
xor
sbb
test
mov
fwait
xlat
ret
mov
call
daa
pop
mov
daa
ja
cwtl
mov
dec
add
in
add
push
out
push
adc
rol
sub
mov
jo
add
mov
and
cld
mov
xor
jne
push
mov
int
sbb
mov
sbb
push
cli
jmp
movsb
pop
xchg
imul
mov
jae
xorl
dec
mov
je
xchg
jb
cli
outsl
mov
or
xor
xchg
das
daa
or
cli
push
arpl
xchg
add
cmpb
add
repnz
je
jmp
insb
xchg
push
mov
fldl
add
scas
in
orl
das
sub
sti
hlt
icebp
push
dec
jnp
sbb
sub
pop
xor
cmp
aaa
add
dec
xor
call
test
add
dec
in
inc
push
call
mov
add
cmpsb
aaa
add
mov
jp
sub
and
cmpb
push
push
mov
ret
repz
aaa
add
addr16
js
push
push
iret
push
push
sti
mov
orl
aaa
or
test
into
shl
or
js
imul
cli
lcall
imul
lea
add
call
and
std
test
fcomip
dec
test
in
jle
std
gs
xchg
mov
adc
cld
or
add
sbb
xchg
xor
push
jg
rolb
pop
pop
jmp
jno
aaa
xor
loopne
sbb
insl
aas
sbb
push
pop
pushf
jl
mov
add
mov
cmove
aaa
xor
mov
and
xchg
push
push
add
xor
ret
pop
cmp
fistps
mov
or
es
pop
xorb
call
jmp
notl
fidivl
mov
push
and
fidivl
addr16
xor
add
ss
out
add
call
mov
jmp
push
pop
xchg
lods
cwtl
and
mov
mov
add
xor
mov
out
mov
and
sbb
xor
insb
hlt
test
xor
bound
adc
test
dec
push
popa
out
test
test
pop
aaa
add
add
mov
add
ss
loop
or
push
gs
push
loope
xchg
add
ss
imul
je
dec
jmp
mov
adc
and
mov
mov
sahf
ss
inc
lods
add
adc
daa
mov
dec
mov
in
jmp
shlb
je
push
mov
adcl
das
stc
out
mov
and
mov
xchg
xchg
aaa
or
out
mov
sbb
adc
xchg
mov
add
jne
xchg
shll
adc
mov
fmul
or
and
out
pushl
add
inc
pop
testl
dec
out
je
add
aaa
or
test
or
adc
incb
xor
mov
dec
hlt
adc
sub
mov
xchg
add
mov
add
xor
xor
aaa
xor
sbb
mov
mov
das
popa
xchg
shlb
outsl
sti
shrb
imul
xor
mov
add
mov
sub
rolb
push
cmp
add
xor
shrl
filds
xorb
call
add
sbb
dec
lods
mov
lods
icebp
subl
pusha
add
jecxz
jnp
loop
lds
shl
hlt
scas
sahf
or
push
and
or
mov
pop
pop
sti
scas
adc
jne
push
or
jnp
sbb
xchg
sbb
leave
mov
cli
push
pop
push
sbb
jo
cmpsl
movups
jno
out
jo
in
scas
sub
in
xchg
mov
addr16
sbb
rcr
pop
sti
cmpsb
jmp
jl
sub
or
add
dec
sub
push
xor
mov
mov
in
iret
mov
add
xor
mov
leave
mov
add
xchg
mov
hlt
inc
push
leave
dec
mov
xor
dec
push
inc
lock
xor
add
or
push
push
xor
lret
lea
pop
cld
jns
dec
push
jns
mov
xor
stc
test
cld
pop
push
inc
fimull
aaa
pusha
ret
fimuls
faddl
mov
pop
lea
add
xchg
test
jle
or
ret
decl
dec
xchg
shl
lahf
push
add
add
or
lock
dec
out
inc
fdiv
pinsrw
scas
enter
in
mov
incb
aaa
or
cli
aaa
or
push
ret
sti
enter
mov
mov
lea
out
sti
lods
js
sti
cwtl
adc
mov
lods
xchg
add
les
rorb
xor
mov
insb
adc
mov
scas
inc
sub
imulb
xorl
insl
xor
test
test
dec
out
aaa
xorl
push
dec
fsubrs
or
aad
xor
jmp
jl
adc
dec
cmp
rolb
adc
out
aaa
or
jge
add
xor
xchg
xlat
adc
out
aaa
or
jle
xor
xchg
mov
movsl
or
data16
outsb
shll
dec
cmp
aas
sbb
je
jg
aaa
cmpsl
jae
stos
rolb
jmp
xor
hlt
mov
xor
adc
aam
mov
xor
push
or
test
xor
jmp
add
xor
sbbl
lock
xor
add
and
xor
out
mov
inc
in
mov
dec
cmpb
add
fs
outsb
idiv
test
xor
push
aaa
add
leave
dec
lea
adcb
pop
std
pushl
enter
aaa
add
ret
add
dec
lea
add
sahf
push
lea
movl
inc
inc
mov
add
aaa
xor
loope
into
add
cmpb
mov
mov
scas
popl
rcrb
into
popl
xor
aaa
and
mov
repnz
mov
inc
xor
arpl
sbb
dec
sti
add
cmp
pop
mov
aaa
sbb
rcl
ss
stos
xchg
dec
mov
in
aas
aaa
mov
dec
jne
cltd
enter
xorb
dec
arpl
sbb
mov
dec
mov
jle
fmuls
mov
out
and
divl
push
sbb
rorl
add
sbb
jnp
xor
fcoms
sarb
pop
mov
and
mov
repz
mov
testb
cmpsl
xlat
inc
adc
mov
gs
enter
mov
cmovnp
adc
inc
jb
in
add
xor
clc
pusha
and
add
adc
dec
faddl
inc
jo
ret
rclb
movsl
push
dec
popl
std
aaa
cmp
cli
out
adc
movsl
sub
cli
adc
lock
pop
fstl
xor
jmp
xor
dec
ljmp
xchg
xchg
mov
push
mov
mov
add
xor
dec
pop
mov
add
or
jmp
add
xor
mov
cli
ss
call
insl
jnp
jge
je
repnz
loope
mov
xor
cli
add
les
cmp
in
mov
idiv
leave
mov
call
push
test
sbb
loop
or
push
mov
mov
adc
lea
es
leave
xorb
inc
and
inc
inc
ljmp
add
or
idiv
leave
jg
push
dec
into
add
sti
or
mov
and
test
or
xchg
dec
inc
xor
dec
pop
mov
mul
add
jne
add
sarb
mov
jmp
rcrb
push
pusha
mov
ret
jecxz
lods
dec
adc
mov
clc
addr16
sbb
decl
faddp
decl
add
sbb
inc
xchg
inc
or
sbb
aaa
sbb
dec
add
sbb
dec
add
sbb
nop
lock
clc
loopne
add
sbb
jp
add
aaa
fwait
pop
sbb
outsl
lea
fistpll
arpl
mov
or
or
aaa
mov
jg
out
aaa
sbb
xorl
int3
jge
aaa
xor
fs
call
sarb
jmp
or
xchg
dec
jmp
lahf
dec
inc
push
cmpsl
cli
mov
jmp
mov
mov
insb
pop
sub
inc
mov
inc
jmp
push
or
dec
mov
xor
jmp
add
push
adc
push
movsb
mov
adc
xor
inc
sbb
inc
stc
add
xor
mov
jmp
in
inc
mov
mov
cli
sbb
ja
shll
cwtl
add
std
jbe
push
or
insl
xchg
xor
jmp
iret
xor
jmp
shlb
enter
out
or
lock
add
or
jo
add
outsb
cmpb
js
test
leave
add
pop
push
call
pop
jo
imul
push
lea
std
incl
addb
xchg
cmp
jge
jb
mov
call
jmp
mov
push
push
dec
cmp
jge
jl
fsub
je
jne
add
aaa
push
call
fisttpll
test
rcr
push
in
idiv
lcall
xor
inc
mov
fs
jb
shrd
cmovns
addr16
lret
jmp
mov
cli
add
sbb
mov
sub
dec
sti
sarb
and
mov
xor
cwtl
loope
jne
hlt
test
popl
xchg
clc
fadd
aaa
sbb
decl
sub
pop
mov
cli
lret
xchg
mov
push
cmp
test
push
loop
cltd
inc
test
xor
cmc
sbb
outsl
inc
stos
jl
or
adcb
xor
mov
sbb
pushl
call
scas
mov
ret
imul
call
pop
mov
out
sbb
inc
mov
mov
add
xor
std
cmp
sub
adc
test
adc
sbb
push
fcomp
iret
xchg
es
incb
mov
call
inc
dec
push
addr16
xor
add
insb
sar
dec
add
jno
shl
jae
call
push
xor
movsl
dec
push
push
es
dec
jb
push
push
add
sti
push
dec
jo
leave
mov
cli
out
cmp
call
xor
addr16
sti
ds
cld
jl
inc
jmp
or
add
xor
sbb
xor
and
xor
orl
and
mov
jmp
lea
sub
mov
gs
push
cmp
xor
jle
sysenter
add
mov
and
push
cltd
add
into
insb
sti
xor
jge
testb
leave
xchg
into
xor
add
int3
sbb
mov
inc
add
inc
xor
push
mov
and
add
cmpb
sub
sbb
and
jo
mov
repz
sti
clc
push
and
xor
test
add
inc
xchg
push
leave
and
jp
ss
in
or
xor
mov
lcall
adc
addl
push
inc
shrl
out
add
cmp
xor
and
icebp
mov
cmp
jle
push
mov
in
sti
jo
aaa
je
xchg
pop
test
sbb
sbb
adc
inc
jg
call
dec
fmuls
aaa
xor
adc
mov
dec
mov
push
das
xor
ret
out
xor
adc
add
add
sub
adc
cmc
add
xor
enter
cld
rolb
subl
scas
mov
fs
sub
sbb
or
push
fcoml
incl
add
testl
sbb
lahf
add
cmpsb
andb
xor
cli
std
push
xor
cli
std
adc
or
jne
movsbl
ljmp
sti
dec
mov
mov
jb
sub
bound
or
cmpsl
cmp
inc
int
lods
inc
inc
int
cmp
testb
mul
push
and
out
outsl
and
cmc
pop
fimuls
add
lock
test
addb
aad
pop
ret
dec
xor
mov
inc
pop
xor
push
or
add
push
push
cmp
xor
mov
or
fstpt
dec
push
pop
sti
loope
push
cmp
lret
push
adc
fidivs
mov
dec
je
sbb
idiv
sbbb
sub
push
mov
push
push
cwtl
je
mov
out
sub
sbb
push
pop
fimuls
add
pop
inc
push
push
aaa
ja
data16
repz
std
push
roll
mov
add
jnp
mov
roll
jge
xor
jbe
aaa
or
inc
sti
or
inc
jne
or
decb
xchg
mov
les
stos
stos
pop
and
mov
popf
int
inc
xor
inc
or
add
or
aaa
mov
sti
add
aas
aaa
add
inc
int
mov
or
mov
ss
or
js
or
call
or
call
xchg
mov
mov
or
xor
nop
ret
js
xor
sub
out
mov
mov
add
dec
imul
add
or
test
xor
mov
aaa
xor
adc
jp
mov
mov
or
addr16
add
mov
sbb
and
test
scas
dec
add
xor
dec
cmp
shll
sub
cld
stc
sbb
pop
icebp
sbb
xor
jmp
sbb
adc
add
bound
subl
add
cld
stc
sbb
add
mov
stc
push
std
or
xor
jmp
xorb
lods
jle
lahf
jbe
cltd
mov
xor
std
push
out
cld
call
jo
or
add
add
jne
push
xchg
xor
aad
sti
jmp
push
or
push
mov
jmp
mov
add
inc
jp
test
leave
addr16
mov
cltd
adc
cmp
xchg
out
test
inc
idiv
dec
lods
inc
cld
insl
push
add
lods
clc
orl
idiv
push
xor
add
es
push
scas
jae
xchg
dec
sbb
jmp
inc
je
inc
jbe
jne
jge
add
or
mov
mov
dec
adc
add
cwtl
lret
xchg
cmpsb
stc
nop
xchg
je,pt
faddp
jmp
ret
in
mov
sbb
cmp
pop
mov
pop
dec
inc
ret
cli
aam
add
or
mov
test
mov
sti
sub
cmp
dec
sub
repz
add
mov
mov
cmc
dec
add
or
out
add
sbb
jne
xor
and
std
sbb
pop
pop
and
mov
out
mov
das
ss
aad
push
or
aaa
xchg
popa
mov
adc
aaa
xor
cli
mov
mov
mov
loope
add
lods
sub
lahf
fcmovu
add
xchg
jno
mov
xor
repnz
dec
xchg
xchg
mov
ja
call
stos
and
iret
test
add
xchg
jno
movsb
mov
ret
cmpsb
jg
push
xor
mov
pop
sub
jmp
stos
mov
arpl
cltd
mov
mov
addr16
lods
inc
dec
adc
mov
and
mov
arpl
sarl
inc
mov
mov
jmp
inc
push
int3
movaps
xor
mov
mov
arpl
enter
xor
rsm
jbe
xor
add
stos
inc
cltd
jl
fwait
jmp
push
and
scas
xor
data16
lods
mov
clc
scas
inc
mov
stos
jmp
into
rorb
out
sahf
xor
fstpt
mov
xor
popw
hlt
mov
pop
arpl
add
add
test
mov
mov
mov
jg
xchg
pop
mov
jbe
fisubrs
mov
add
cmp
xor
push
mov
js
push
dec
push
adc
mov
add
aaa
jmp
inc
add
mov
jnp
or
push
mov
add
pop
test
add
mov
inc
xorl
mov
and
flds
popa
mov
cmp
mov
add
imul
aaa
or
jne
fmuls
popa
scas
push
and
cltd
xchg
mov
jmp
xor
scas
aaa
or
push
jnp
mov
xchg
lods
lods
sub
aaa
xchg
jno
int3
mov
leave
mov
jo
push
call
jnp
xor
add
stos
nop
add
xchg
jno
movsb
mov
orl
scas
jo
jl
push
call
cmp
xchg
popa
rorl
dec
cli
or
popa
xor
popf
add
mov
mul
add
lods
add
xor
pusha
divb
add
stos
outsl
add
lret
icebp
pop
and
xor
mov
xor
jo
sub
add
mov
lods
inc
fstps
mov
movsb
es
arpl
and
add
add
xor
jmp
int3
aaa
or
xor
mov
xor
pusha
negl
in
cmpsl
xor
add
cmpsl
inc
push
jbe
lock
scas
enter
sbb
lock
dec
and
cli
cmp
ficoms
rolb
into
xor
mov
xor
inc
in
and
shlb
add
add
ja
mov
xor
mov
xor
popw
icebp
sub
lock
inc
cmp
fistl
dec
dec
jl
lock
xor
mov
add
mov
sub
xchg
daa
xchg
je
outsb
aaa
or
xchg
aad
ja
or
cmpsl
jb
out
xchg
mov
scas
add
aaa
or
jne
xchg
or
mov
std
lcall
xchg
mov
add
cmpsl
xchg
je
ret
pushf
mov
pushf
jne
orb
mov
call
xchg
mov
lcall
xchg
test
mov
cli
xor
cli
aad
add
pop
mov
aaa
mov
jl
addl
mov
xor
scas
jo
jnp
add
add
movsb
mov
aaa
mov
push
mov
rorl
xor
popf
mov
aas
call
test
aaa
mov
sbb
aaa
push
aaa
xor
jge
test
test
inc
cld
out
aad
and
mov
xor
pusha
outsb
andb
inc
ret
rcl
bound
setp
jle
pushf
push
sub
fwait
jge
cmp
imul
stc
test
cmp
sarb
jns
je
outsl
mov
fs
bound
cli
or
xchg
rorb
xchg
push
sbb
inc
push
lods
mov
shrb
add
xor
sub
push
loopne
in
dec
mov
leave
popf
faddl
andl
je
sub
cmp
push
add
fdivrp
mov
push
hlt
sub
sbb
sub
ss
pop
mov
insl
push
mov
add
mov
mov
xor
push
call
loope
pushl
mov
sub
jne
call
sbb
test
add
mov
adc
jl
das
pop
jp
pop
in
das
call
pop
add
add
push
jp
out
das
sti
xchg
divl
lret
jnp
fs
add
push
or
push
add
jb
into
dec
clc
insl
jns
add
aaa
fldl
add
fnstsw
data16
mov
rorl
int3
or
ss
mov
pop
insl
mov
out
std
decl
pop
cmp
in
jecxz
test
xrelease
imul
aaa
mov
gs
pusha
xchg
jmp
xor
add
add
push
xorb
js
sbb
mov
mov
add
sahf
loopne
aaa
mov
pop
add
cmp
mov
push
sbb
mov
mov
cmp
xor
add
xor
movsb
dec
mov
dec
jb
adcb
add
movl
cmp
mov
ja
adc
je
int
pop
xor
sub
ja
jb
rcll
mov
push
xor
insb
jnp
or
scas
or
stc
pusha
out
jmp
stc
jb
loope
shlb
loopne
test
xor
shl
addr16
add
mov
jne
mov
jl
add
insl
stc
mov
test
fcomps
inc
hlt
jbe
sti
decl
jl
frstor
add
mov
add
lret
adc
popf
pushf
in
add
mov
and
jmp
sarl
dec
incl
and
icebp
push
push
mov
hlt
scas
dec
or
and
out
sarb
je
add
jns
in
mov
dec
daa
bound
and
inc
mov
push
ja
aaa
dec
sub
xor
jne
inc
xor
stos
sub
jo
sub
sti
lods
daa
pop
sti
loop
sbb
push
cli
sub
out
int
lods
fst
cli
xchg
int3
pop
out
enter
std
push
lods
jno
in
push
loopne
incl
add
gs
pop
ret
cli
dec
xor
dec
or
rorb
jle
mov
sub
std
pushl
push
insl
shll
call
add
rcrl
faddl
mov
out
insb
mov
lods
and
xor
xor
jle
or
sub
mov
pop
sub
push
shll
add
mov
stos
sub
call
add
xor
sub
lret
sub
out
sti
notb
call
jp
xor
sbb
fneni(8087
mov
rorl
shrl
cmp
mov
dec
pop
mov
dec
jmp
add
out
stc
push
mov
add
leave
ljmp
add
ret
insb
sub
xor
mov
rcll
cli
cmp
fdivl
pop
push
push
leave
or
in
loope
fs
push
jmp
cli
xchg
pop
fidivrs
fmul
mov
push
sahf
fyl2xp1
pop
inc
lret
or
int
sbb
call
jmp
idiv
add
xor
add
mov
dec
inc
sbb
add
cmp
ret
adc
mov
mov
outsb
inc
or
insl
push
or
insl
jno
sarl
pop
and
insb
adc
push
xchg
test
imul
cmp
movsb
iret
or
mov
out
ret
xor
popa
cmp
cmc
stc
out
dec
add
mov
fstpt
add
out
ja
addr16
xor
sbb
fildl
pop
dec
cmp
mov
push
in
inc
xor
fsubr
inc
das
fimuls
sti
pushf
ljmp
je
mov
sti
and
mov
pop
pop
push
je
push
jno
rcrb
je
pop
sub
mov
filds
add
pop
jbe
add
cmp
cli
adc
inc
call
pusha
sahf
andl
aaa
std
push
nop
sahf
into
loope,pn
pop
push
imul
xor
cmp
pop
inc
dec
in
adc
cmp
lret
roll
sub
aad
inc
push
sub
cmc
pushf
cmpsb
jecxz,pt
jle
xchg
stc
js
and
test
ja
aad
and
ss
add
add
add
cmp
jnp
mov
jle
mov
scas
lcall
sbbl
adc
orl
adc
mov
pop
scas
ss
in
mov
mov
pop
std
cli
andb
push
out
dec
std
std
pop
dec
pusha
lock
adc
xchg
or
jmp
pop
fsub
adc
push
jle
loop
sahf
add
mov
mov
popf
adc
addl
xor
pop
stos
mov
add
cmpb
sub
call
dec
je
fs
js
insl
jns
adc
test
cld
mov
inc
jmp
es
add
cmp
inc
ficoms
adc
fdivp
stc
test
movsb
cmp
add
xchg
sbb
push
incl
adc
mov
stc
test
or
jne
adc
adc
pop
cmc
stc
test
or
repz
adc
int
cmc
call
out
add
mov
push
cmc
jmp
out
pop
xlat
jne
mov
mov
adc
cmp
das
in
mov
sub
add
mov
mov
int
xor
adc
mov
stos
cmp
xchg
sub
and
xchg
sub
mov
pop
and
mov
mov
xchg
nop
and
xor
push
ja
add
pusha
out
push
neg
ja
in
xchg
ds
and
out
js
add
ud2
mov
sti
xchg
data16
xor
add
lock
mov
scas
inc
out
push
xor
ljmp
aam
jno
jg
pusha
rcrb
push
and
dec
dec
gs
mov
popa
lock
mov
mov
mov
adc
rolb
call
sar
push
add
add
repz
sbb
sub
cli
jmp
int
jno
rcr
xor
scas
xor
xchg
jle
pusha
add
scas
jno
fs
es
out
lds
ja
push
scas
clc
fs
pusha
push
je
cs
jle
ficoms
xor
add
aaa
pop
sti
push
jmp
enter
dec
xchg
pop
pusha
and
std
call
jb
mov
xchg
outsl
test
popf
push
jmp
jb
mov
jne
adcb
push
pop
xor
rcrb
aaa
and
jmp
add
repz
outsb
or
loope
sbb
adc
xor
gs
lcall
int3
sbb
adc
xor
add
push
outsb
add
addl
dec
jmp
mov
mov
adc
pop
in
xor
mov
fstps
adc
mov
stc
mov
dec
xor
sti
jmp
mov
adc
xor
pminub
add
fistpl
adc
cmp
sbb
jp
sahf
push
test
add
aaa
xchg
mov
add
and
pop
or
add
push
test
stc
pop
and
adc
lret
add
push
jne
push
stc
jmp
fwait
std
xchg
inc
stc
ja
fwait
std
dec
sbb
adc
fidivl
sti
push
mov
std
ret
add
push
lods
cmp
mov
pop
or
lret
add
in
add
call
divps
sbb
pop
out
and
sbb
cld
dec
xchg
clc
cmp
in
sbbl
push
jmp
test
and
arpl
faddl
add
sub
add
scas
mov
cmp
call
mov
pop
hlt
mov
add
scas
test
hlt
aaa
xor
and
inc
sti
notb
add
les
jmp
adcl
cmp
xchg
sub
push
dec
jne
hlt
loop
out
dec
popa
std
hlt
loop
cmpsb
mull
in
push
inc
dec
pop
scas
mov
jb
mov
test
dec
in
sti
hlt
loop
cmpsl
les
xor
mov
call
mov
js
mov
mov
adc
fnsave
push
dec
push
cmc
je
test
push
inc
test
pop
add
shl
jecxz
xorb
mov
pop
add
enter
dec
aaa
jl
pop
cmc
in
imul
loop
inc
pop
jmp
adc
jbe
and
inc
dec
and
inc
dec
add
and
jp
loopne
pop
dec
loop
inc
jne
push
and
pop
adc
je
in
insl
push
xchg
leave
add
fimuls
lock
scas
jnp
cmc
sub
pop
xor
mov
aaa
nop
inc
fwait
sbb
mov
cwtl
dec
int
sbb
sar
mov
or
aas
lret
loop
std
stos
sbb
and
sti
inc
inc
stc
aas
aaa
cmp
adc
lret
xchg
push
leave
jmp
xlat
sahf
clc
sbb
out
bound
data16
push
cltd
sti
rcr
test
pop
pop
adc
push
lods
push
mov
cli
out
mov
or
out
or
lock
inc
jmp
iret
inc
add
cmp
dec
add
xor
enter
add
es
and
in
sub
out
aaa
lret
int
jp
addb
mov
data16
xor
sub
sub
cwtl
xor
add
inc
sub
fcompl
xor
call
lods
aaa
xor
fsubrs
aad
mov
xor
mov
add
xor
mov
mov
pushf
cmp
mov
je
mov
sub
mov
xor
jmp
xor
xchg
xlat
adc
sbb
lods
mov
xor
jo
pop
add
xor
cmpb
sub
insb
sahf
or
shll
jb
inc
xchg
ljmp
mov
add
xor
jne
mov
add
xor
je
fsubp
cli
add
sub
adc
adc
xor
add
loop
inc
and
mov
adc
push
push
mov
divb
aas
adc
dec
repnz
test
cmp
push
lcall
cld
sbb
test
rdmsr
add
add
push
sub
xchg
sti
insl
adc
cmp
loopne
das
mov
mov
arpl
popa
ret
add
or
je
aaa
icebp
std
sub
loopne
push
sti
mov
or
jne
inc
mov
call
jo
cmc
cli
loop
and
mov
add
adc
add
lret
std
or
dec
sbb
inc
push
push
add
lret
xor
daa
mov
rorb
jg
int3
mov
insb
pushl
aas
in
xchg
lret
arpl
std
jae
test
add
lret
mov
or
lahf
iret
jl
add
test
into
add
xor
sbb
ret
nop
insb
inc
mov
add
cli
cmp
jl
pushf
jecxz
lret
xchg
sbb
fs
xor
nop
das
dec
call
or
and
mov
dec
call
xlat
leave
xor
add
xor
fistl
test
divb
xor
sbb
jp
dec
test
xor
add
add
push
xor
jmp
add
xor
sbb
push
xor
jmp
xor
lret
shlb
call
xor
cli
cld
adc
inc
jmp
ds
xor
mov
test
subl
stc
jmp
pusha
fwait
xchg
adc
add
push
mov
ret
cmp
mov
pop
idiv
sahf
mov
or
push
add
or
stc
add
ss
test
cmp
incl
mov
add
or
cmp
sahf
add
adc
aaa
lcall
mov
cmp
mov
cmpsl
inc
and
add
pop
sub
and
push
sbb
add
dec
xor
lock
ss
mov
or
mov
add
sub
add
mov
setb
idiv
fnstcw
in
aaa
ret
jmp
jne
inc
xchg
call
push
sub
daa
scas
push
lods
jnp
inc
daa
mov
or
ret
hlt
add
lret
mov
or
xchg
push
enter
sub
jg
rclb
repnz
jae
add
lds
add
adc
pop
in
xchg
scas
adc
aaa
clc
ja
mov
fnstsw
xchg
mov
shl
xor
hlt
mov
in
mov
xor
add
inc
jno
cmp
call
jg
ss
sbbb
in
xor
jmp
incl
add
xchg
push
lods
and
pop
lods
sub
scas
jbe
adcb
xor
jmp
ret
in
fwait
push
xor
repnz
fcmove
out
xor
jmp
hlt
movsb
sub
push
and
mov
fldenv
movsb
add
xor
mov
add
jb
scas
inc
addl
pusha
mov
bound
hlt
or
inc
jmp
je
and
jmp
outsb
add
or
popa
adc
je
test
xor
sub
sahf
sbb
jge
sub
aad
aas
addr16
daa
pop
add
test
arpl
lods
aad
add
pusha
cmp
fsts
add
sbb
jne
sbb
repnz
test
cmpsl
add
mov
push
mov
jae
test
icebp
add
or
adc
xor
je
arpl
movsb
xor
fildl
clc
incl
testb
out
add
dec
lods
inc
test
xchg
incl
add
adc
cmp
stc
test
xor
pushl
mov
enter
hlt
push
out
dec
nop
divl
and
push
psubd
jae
push
or
inc
push
enter
inc
or
repnz
hlt
or
lret
aas
dec
nop
out
aaa
decl
add
aaa
lret
xchg
add
sbb
xor
arpl
aaa
lret
xchg
std
ss
std
cli
loop
addb
push
jne
push
inc
call
mov
and
pusha
ljmp
xor
or
aad
push
inc
fisubs
dec
pusha
aad
gs
addb
xor
cld
repnz
adc
fs
cwtl
fsubrl
jp
dec
push
addb
es
mov
add
aaa
dec
in
aaa
xor
cmc
cmpsb
outsb
loopne
and
xchg
mov
aaa
dec
in
add
andb
cmpxchg
decl
aam
sbb
sub
xchg
xor
add
xor
add
xor
cli
pop
inc
roll
into
jae
mov
iret
stc
mov
xor
jne
mov
call
out
add
popl
dec
test
and
mov
pop
pop
jmp
xor
cld
xor
adc
rclb
out
enter
repz
pushf
add
jmp
pop
lods
stc
ds
inc
mov
jb
or
cmp
jmp
cmp
adc
inc
jbe
pushl
adc
dec
sub
stc
add
and
test
add
stos
mov
std
test
stos
sbb
push
push
mov
getsec
add
scas
idiv
mov
add
into
dec
dec
add
jbe
ret
sub
mov
mulb
adc
or
fnsave
add
cwtl
jmp
fldenv
mov
mov
aaa
add
pop
dec
inc
and
dec
or
aaa
or
scas
pop
add
aaa
fst
mov
inc
incl
neg
pop
add
xor
mov
stos
and
test
psrlw
or
sub
sub
js
pop
add
sti
js
cmpsb
mov
dec
in
mov
clc
mov
fcmovb
mull
fdivs
das
ja
xor
add
xchg
or
mov
cmc
int
fiaddl
je
xor
jo
rcrl
mov
rorb
inc
dec
stc
ret
push
mov
call
add
inc
shll
js
pop
sub
dec
mov
adc
insl
je
inc
cltd
aaa
mov
jo
sub
hlt
cmpsb
push
adc
cmc
ret
loopne
in
sti
ljmp
sbb
add
jp
mov
es
jo
outsl
add
mov
add
xor
in
sub
aaa
xor
adc
sub
jno
je
test
iret
daa
dec
mov
ljmp
cmp
push
mov
repnz
mov
std
hlt
iret
jle
sysenter
add
dec
jge
aas
lret
je
mov
je
add
sub
or
fcom
fidivrl
lret
test
and
add
xor
jmp
push
mov
and
xor
jo
daa
mov
fstl
adc
add
stos
sbb
sbb
repz
mov
mov
pushf
inc
inc
testb
xor
lret
push
inc
cmpsl
sbb
cmpsl
sbb
sbb
adc
sbb
mov
je
inc
testb
xor
mov
jne
inc
je
shll
dec
jb
inc
fimuls
push
cmpsb
mov
incl
mov
adc
test
or
mov
mov
mov
and
aaa
push
push
push
pop
xor
inc
pop
stc
xchg
adc
xchg
adc
mov
cmp
lock
xchg
or
jp
sub
pop
in
and
fdivl
jp
push
lds
sbb
cmc
mov
dec
adc
inc
jmp
sbb
sbb
negl
stos
pop
pop
cltd
cld
mov
add
xor
add
push
inc
nop
xlat
pushf
jle
mov
lock
xor
mov
mov
sbb
ljmp
mov
ljmp
pop
rorl
sbb
mov
mov
shrb
xchg
loopne
cli
cmpsb
repnz
shr
lahf
xchg
add
sub
int3
loop
cmpsl
xchg
cmp
enter
aas
sahf
and
cmp
mov
xor
loopne
mov
jge
lods
mov
xor
push
enter
xor
insl
mov
add
insl
addb
jns
jo
test
scas
dec
mov
imul
mov
mov
lods
jb
adc
out
add
xchg
test
cmp
sbb
aas
mov
xor
jg
pusha
mov
or
rorb
testl
add
addb
mov
add
mov
mov
jae
adc
adc
or
stc
decl
aaa
jp
push
inc
dec
add
add
add
mov
jge
dec
aaa
add
ds
add
lea
gs
mov
gs
jp
jbe
or
jo
into
add
fnstsw
call
mov
aam
push
aaa
aaa
gs
mov
scas
cli
inc
in
or
inc
mov
lahf
insb
or
mov
push
pusha
sbb
fnstsw
add
add
ret
jno
or
fldl
pushl
ret
xor
dec
push
cmp
or
add
jl
inc
mov
mov
addl
push
jle
and
jle
lcall
xchg
jle
and
xor
mov
in
mov
xor
xchg
cmp
cmp
cmp
add
orb
mov
leave
sub
mov
aam
repnz
push
mov
cli
pop
movsbl
cmp
aaa
xor
jp
xlat
jo
pusha
or
pop
rcll
fildll
ss
inc
inc
jns
icebp
add
test
mov
inc
mov
cmp
add
lret
lret
inc
stc
add
mov
in
xorb
add
loope
ljmp
ss
repz
mov
neg
stc
and
mov
adc
push
sub
in
push
leave
mov
jbe
pusha
ja
jge
ss
mov
popa
or
nop
fwait
scas
shlb
in
add
sub
push
sub
inc
or
add
ljmp
pop
cltd
xor
cmc
jmp
enter
sbb
add
add
jns
add
xor
add
mov
push
roll
add
xor
int
jnp
cmp
xor
mov
cmp
xor
into
ljmp
dec
ljmp
or
mov
ljmp
add
xor
jmp
in
xchg
add
test
push
inc
and
xor
push
mov
movl
loopne
int3
rorb
xor
setp
add
aaa
cmp
ss
jle
cmp
or
inc
mov
pushl
nopl
mov
lods
add
cmc
push
add
insl
xorl
adc
leave
dec
push
icebp
and
pop
into
jb
pusha
adc
ja
inc
sarl
inc
inc
icebp
mov
jg
fldcw
shlb
cli
inc
aaa
imul
aas
or
daa
xor
lds
repnz
lcall
adc
cli
call
outsl
pushf
jns
or
sub
mov
mov
outsl
js
sti
pop
scas
dec
push
xor
pop
repz
les
outsl
cmp
cmc
dec
addr16
push
pop
lds
divl
rcrl
mov
ja
adc
jb
adc
cmp
sub
sub
xchg
jmp
sub
rcr
hlt
add
and
aas
adc
jg
xchg
std
inc
or
leave
stc
scas
jg
call
pop
fldt
xor
xor
aaa
add
sub
mov
xor
adc
pop
jge
insl
jb
call
movsl
xor
jmp
push
mov
add
in
std
stos
lods
inc
cmc
stos
and
add
adc
xchg
jae
add
insb
icebp
cmp
push
sahf
aaa
add
clc
sti
mov
call
mov
stc
dec
or
cmp
cmp
cmp
sub
test
and
add
and
cmp
mov
xor
sub
add
sub
adc
jp
adcl
mov
into
xor
or
mov
mov
and
cmp
mov
dec
data16
cmpsl
std
cli
stos
in
push
xor
add
inc
int
adc
jne
cmc
cmc
clc
icebp
test
add
cmp
imul
mov
rcrl
and
aaa
fidivl
loop
dec
xor
mov
mov
push
je
mov
xchg
faddl
push
xor
sbb
int
inc
pop
int3
adc
xor
add
dec
push
ja
or
xor
out
rolb
ja
scas
popa
xorl
out
cmc
xor
push
std
sbb
je
push
dec
call
push
clc
addr16
jns
add
scas
jmp
mov
stc
ffree
data16
aaa
xor
xor
inc
push
rclb
aaa
xor
pop
stos
sarl
dec
lcall
push
decl
dec
filds
rorb
mov
daa
aaa
xor
mov
xor
out
outsb
jmp
pop
cmp
sub
sbb
inc
xchg
add
sub
mov
add
ss
sub
std
push
jne
ret
inc
or
sub
add
shr
repz
add
stos
insl
jmp
sbb
sub
add
pop
cmp
mov
pop
jns
addb
mov
add
sub
or
adc
stc
cli
das
mov
fildl
add
and
mov
lds
sub
mov
je
ret
xchg
aas
idiv
xor
scas
inc
or
xchg
orl
iret
xor
nop
adc
add
stos
inc
xchg
push
ja
cltd
xor
ja
mov
stc
dec
stos
inc
mov
xor
add
leave
mov
jmp
roll
sahf
xor
cld
aaa
aas
add
sar
pushl
inc
cld
sbb
cmp
dec
push
xchg
pop
lock
nop
and
mov
cli
mov
mov
push
sti
mov
cld
je
jb
jne
testb
cmp
sbb
jge
or
add
fidivs
dec
xor
mov
clc
mov
push
je
mov
xchg
add
cmp
xor
xchg
sbb
add
stos
add
lcall
xor
sbb
xchg
mov
stos
mov
or
fwait
or
sub
mov
fs
adc
mov
add
mov
test
sub
jo
iret
psadbw
add
mov
sbb
sub
call
insl
aaa
mov
lock
lods
inc
fdivr
sub
jnp
das
int3
add
mov
test
pop
xor
jb
daa
call
fisubs
push
daa
push
xor
sub
inc
in
adc
add
mov
and
jmp
add
jae
test
and
je
mov
icebp
fdivrp
mov
out
negb
jmp
cmp
mov
xor
loopne
inc
repz
mov
stc
push
sbb
mov
sub
add
ss
sub
xor
orb
push
push
add
pusha
cli
incb
mov
or
jno
mov
test
xor
jmp
shrl
scas
inc
comiss
or
push
je
iret
jnp
fnstcw
push
mov
xor
loope
sub
mov
push
mov
inc
adc
shrb
aaa
clc
hlt
mov
enter
sub
ljmp
sarl
sub
std
jg
hlt
or
fs
or
dec
notb
push
mov
clc
ljmp
jg
jp
or
inc
add
inc
xor
scas
aas
cmp
pop
cmp
adcb
inc
inc
hlt
scas
dec
jp
lock
cmp
add
inc
imul
pushl
int
sub
push
adc
cmp
mov
push
cmp
jno
mov
outsl
inc
mov
fdivrs
mov
add
lahf
out
aaa
mov
outsl
push
std
lods
jmp
ljmp
mov
xor
add
xor
adc
mov
inc
je
mov
outsl
js
stos
lods
adc
sub
pop
lret
out
in
mov
or
rorb
jmp
pop
mov
pop
mov
sarb
push
mov
cmp
stos
jo
out
mov
adc
xor
inc
addr16
add
adc
mov
popa
inc
or
sar
mov
or
add
sti
outsb
and
mov
push
jmp
adc
adc
xor
jnp
xor
or
jp
add
or
jmp
push
xchg
pop
add
push
jle
pop
add
xor
mov
sbb
shll
sbb
pusha
mov
lods
mov
incl
add
cmc
push
test
or
cmp
xor
imul
mov
dec
sub
mov
pop
pop
xor
clc
dec
dec
or
inc
add
test
sub
inc
aaa
mov
push
push
xchg
xor
add
int
mov
sub
jecxz
xlat
cmp
xor
popa
cmp
inc
xor
das
dec
lds
jae
push
stos
negl
xchg
push
test
nopl
outsl
repnz
or
push
or
icebp
js
test
mov
pushl
inc
add
jns
int3
call
add
dec
pop
adc
int
jns
int3
push
mov
cltd
jle
jns
jp
mov
dec
inc
adc
int
add
add
dec
sbb
xor
hlt
mov
loop
and
call
cmp
out
imul
xor
mov
cli
xor
cmp
std
or
xor
sti
aaa
inc
fmull
bound
or
call
cmp
insl
mov
push
data16
inc
xor
ljmp
int3
cmp
insb
add
add
negb
insl
ret
movsb
pandn
cltd
and
xchg
outsl
mov
jge
aas
add
inc
hlt
test
xor
shlb
jmp
fwait
xlat
fsubrl
je
mov
scas
cmp
adc
scas
inc
add
insb
inc
enter
stc
jle
pop
imul
daa
std
pop
loope
add
xor
xor
push
testb
jle
cmp
pop
mov
mov
std
pop
loope
sub
cmp
push
add
add
stc
decl
inc
jmp
xor
xadd
shl
jp
iret
cmova
add
std
lret
xor
rclb
add
xor
test
mov
shl
add
push
test
andb
add
in
loope
cmpsb
ret
push
xor
xor
xor
roll
or
sub
aaa
mov
divl
xchg
addl
je
sub
lcall
hlt
pop
sub
pop
mov
loop
out
xchg
cmpb
repnz
lcall
jle
jbe
or
out
cli
cwtl
aaa
stc
push
sahf
loop
cli
mov
insb
add
pushl
hlt
adc
or
add
stc
pusha
or
lret
lea
dec
add
testl
popf
arpl
cli
push
xor
out
sub
daa
dec
add
add
ss
inc
dec
idiv
pop
aas
xor
repnz
and
cmp
push
jmp
pusha
cmp
cmp
int
ljmp
test
insl
icebp
lods
mov
push
adc
dec
pushf
mov
add
outsl
inc
inc
divl
das
inc
jg
mov
cld
sub
inc
addr16
insb
mov
add
cmp
das
mov
lock
mov
push
jae,pt
mov
outsl
test
xor
jne
dec
push
and
xor
sub
scas
stc
mov
aaa
mov
in
loopne
sub
out
scas
movsb
sti
enter
loopne
xor
mov
mov
scas
stc
sub
push
add
mov
add
or
xor
ds
es
mov
xor
lock
mov
push
dec
scas
jge
sbb
idiv
inc
aad
decl
jge
arpl
add
inc
test
incl
add
push
xor
idiv
ret
stos
sbb
push
mov
jp
mov
add
sarl
cmp
cmp
cvtps2pd
cld
incl
add
xor
mov
lock
subl
call
cmp
add
shlb
jge
add
push
test
movsb
idiv
int
sbb
aaa
pop
or
push
add
mov
mov
cmpsl
jge
aaa
popf
fmull
push
jmp
aaa
jge
ljmp
sbb
cld
adc
xor
push
popf
std
or
add
call
cli
sbb
jmp
and
add
xchg
sbb
aaa
lods
std
dec
xchg
cli
mov
sbb
cld
test
sti
mov
pop
xor
xchg
jg
mov
cld
xorl
add
mov
xor
in
and
add
aas
push
dec
scas
dec
das
push
push
call
lock
add
scas
sub
lea
repz
sbb
sub
lods
mov
sub
scas
lods
xchg
scas
out
mov
fucomip
fnsave
and
xor
test
ret
pop
or
aas
imul
stos
stos
mov
add
and
jbe
ja
test
jne
jno
xchg
sub
xor
bound
add
inc
mov
mov
or
add
aaa
cmp
sbb
mov
lds
arpl
mov
or
lods
stc
jmp
pop
decl
outsb
ret
jmp
daa
jnp
pushf
jmp
inc
jmp
sarl
or
ror
ss
testb
push
stos
xor
std
pusha
imulb
int3
stos
stc
sahf
or
inc
xchg
adc
cmc
push
cmp
add
scas
rorb
mov
mov
test
mov
add
jns
mov
add
push
mov
test
jbe
rcrl
sub
cmp
push
adc
out
jne
cmp
sbb
out
sub
arpl
fstps
leave
sub
adc
loop
inc
adc
hlt
adc
adc
mov
xor
test
cltd
jp
aaa
mov
or
and
scas
push
adc
bnd
jmp
pop
xchg
je
adc
xchg
jmp
insl
cmpl
sub
ljmp
ss
mov
test
jno
outsb
mov
cmp
loope
jae
mov
cmp
scas
inc
xor
dec
mov
rcl
cld
movl
cld
push
jne
jno
fwait
mov
push
jmp
sti
stos
shlw
mov
cmpsb
je
cmp
mov
add
mov
jecxz
add
enter
aaa
repz
cmp
mov
jmp
out
hlt
outsb
ret
mov
lods
aad
mov
jnp
sub
test
imul
push
push
xchg
ljmp
je
add
das
lock
mov
add
scas
lods
inc
std
sbb
cld
loopne
inc
jnp
or
clc
rolb
add
stc
push
xchg
add
inc
or
inc
add
fucomi
and
int
and
insl
mov
inc
aad
jge
sub
shl
popa
adc
xor
std
test
xchg
notl
pop
popf
jb
imul
sar
hlt
xor
aam
xor
lahf
inc
mov
sbb
jecxz
call
adc
add
add
xchg
mov
das
push
mov
ss
scas
rorb
mov
pop
mov
push
mov
das
push
mov
ss
loop
shl
scas
mov
es
mov
loop
int
std
add
xrelease
xor
sub
into
daa
inc
lock
repz
jmp
mov
cld
push
rolw
lock
and
add
mov
add
in
movups
sbbl
sub
aaa
fwait
cmp
mov
mov
cli
test
jl
lahf
mov
sbb
and
hlt
cmp
sbbb
or
iret
mov
es
arpl
inc
push
mov
and
ljmp
fsubl
pop
rorl
std
or
mov
add
mov
fisubrl
push
inc
jecxz
jb
jbe
add
daa
enter
in
call
popf
repnz
cld
add
mov
push
sub
sbb
or
js
arpl
lods
sub
icebp
mov
icebp
repz
aas
adc
cltd
dec
pop
ds
mov
jo
imul
add
idivl
je
lods
pop
in
sub
sub
or
cmp
aaa
data16
and
test
jae
and
mov
pushf
pop
mov
incb
outsl
inc
cmpsl
je
in
and
loope
js
out
shr
subl
xor
xor
adc
stc
das
clc
cld
cmpsb
imul
mov
add
pop
or
lods
stc
xchg
mov
add
div
gs
jle
test
cld
mov
inc
jnp
pop
jl
mov
in
jmp
mov
or
xor
dec
or
daa
cmp
pushf
and
movsb
sub
add
push
jecxz
aam
inc
jl
jno
adc
add
ds
pop
cmp
xchg
testb
or
jmp
scas
into
neg
xchg
addb
xchg
xchg
je
adc
or
sbb
je
leave
or
or
nop
testb
push
test
stc
pushl
xchg
xchg
imull
xor
inc
jp
push
xchg
testb
add
cmp
aaa
fdiv
add
sahf
xchg
push
and
or
push
test
fdivrp
fimuls
cli
rorb
std
insl
fsubr
in
sbb
dec
ja
add
cld
mov
add
mov
std
inc
add
aaa
mov
loope
ja
add
jg
dec
push
xchg
jne
cmp
add
dec
pusha
andl
inc
daa
std
pushl
push
fs
mov
lea
pmullw
je
mov
mov
dec
xor
push
loope
mov
fdivs
hlt
stc
xlat
add
xor
or
insl
jo
data16
lods
xor
cmp
hlt
out
fnsave
mov
lahf
jo
jg
cmpsl
push
add
das
fmull
inc
outsl
xor
stc
cmc
test
adc
cmp
xor
push
pop
xor
mov
divb
dec
pop
add
xchg
push
out
sub
loop
adc
push
inc
add
daa
out
bound
cmp
shlb
insl
push
cmpsb
stc
out
xlat
notl
jns
aaa
sub
sbb
adc
sub
mov
nop
add
inc
or
add
mov
pop
cmp
testb
repz
out
bound
or
cmp
cmp
es
push
notl
stc
inc
jge
pop
dec
xchg
inc
imul
testb
xchg
add
jmp
jl
push
inc
test
ret
addl
incl
add
and
addr16
and
pop
pop
adc
xor
ret
mov
divb
xorb
jecxz
loope
mov
add
add
idiv
adc
pushf
add
pop
xor
and
inc
and
adcl
inc
pop
add
getsec
cmpxchg
xor
flds
push
cld
add
pop
shl
jns
movsl
lds
mov
push
pusha
in
aaa
and
adc
adc
adc
mov
and
jle
mov
in
hlt
inc
xor
sti
jp
sbb
and
out
dec
push
inc
jl
lret
pop
inc
or
inc
mov
test
fidivrl
mov
in
cli
push
or
pop
sub
inc
adc
pop
sbb
fdivr
mov
push
inc
pop
inc
lahf
mov
sbb
loopne
mov
je
mov
pop
mov
popa
mov
or
lahf
add
movsl
out
call
xlat
sub
lret
mov
stos
inc
shll
sub
xor
ljmp
sub
sub
sbb
add
jbe
fisttps
jno
xor
push
insl
ret
clc
pop
sub
ja
stos
add
fwait
add
xor
add
daa
je
movsb
pop
repnz
inc
je
pusha
jo
in
inc
insl
aas
cli
hlt
stos
dec
cmp
or
xor
rorb
dec
shll
movsb
call
into
scas
mov
add
shll
mov
sub
jmp
imul
cld
jo
fwait
andl
cltd
jns
icebp
fwait
or
icebp
xchg
mov
fidivrs
xor
mov
mulss
mulb
lcall
inc
jb
mov
xor
add
inc
lret
inc
xchg
out
insb
cmp
xor
add
or
add
ljmp
push
fisubrl
jmp
push
test
insl
idiv
inc
repz
jmp
lods
dec
sbb
outsb
xor
add
jne
mov
add
jns
dec
aas
inc
sub
aaa
aad
cli
ret
cli
jle
inc
inc
popf
jbe
jno
std
mov
push
mov
dec
sar
xor
std
clc
iret
jmp
jle
mov
mov
mov
cmp
popa
or
push
je
fildl
mov
cli
mov
add
or
or
sub
inc
adc
test
cmpb
push
test
dec
icebp
cmp
xchg
mov
sbb
cmp
add
and
in
and
jmp
sub
out
fisttpll
jmp
jo
push
fidivrl
sahf
lock
mov
rcl
std
fwait
push
add
in
in
fwait
or
pop
lods
out
pop
imul
ret
jmp
fdivl
sub
fwait
out
add
or
cmpsl
ret
loop
inc
adc
jle
pop
and
jmp
sbbl
aam
pop
xor
jmp
xor
add
xor
insl
jmp
add
dec
insb
fidivrs
sub
mul
pusha
inc
jle
cmp
mov
stc
push
xor
test
add
sahf
stc
push
sbb
movsb
loopne
rolb
dec
xor
jmp
xor
add
xor
gs
add
inc
insb
add
jnp
mov
out
jns
xchg
sub
adcl
add
push
test
xor
rcrl
cmp
movsb
ja
mov
add
dec
aas
lret
inc
cmpsl
dec
adc
dec
add
add
or
pop
insl
setge
add
sub
xor
cmpb
push
test
jg
pushl
pop
adc
fnstenv
sahf
add
into
inc
lret
inc
inc
arpl
push
aaa
mov
decl
xor
jmp
aaa
mov
mov
push
sub
lods
add
mov
sar
pusha
stos
aas
adc
dec
icebp
jns
add
mov
dec
mov
into
cmc
adc
adc
dec
add
mov
into
jne
xor
mov
aaa
mov
mov
push
sub
sub
mov
inc
inc
adc
shr
jns
inc
movsb
call
mov
into
jne
xor
dec
add
out
jns
push
adc
addr16
xor
push
lds
sub
jecxz
inc
mov
add
mov
aad
cwtl
lcall
jp
imul
and
ror
jg
adc
repz
fimuls
inc
repz
daa
and
cwtl
xor
jnp
icebp
inc
and
inc
ljmp
cld
sbb
bound
inc
or
mov
dec
pusha
add
add
xor
or
sub
sub
sub
mov
into
sbbb
aas
int3
scas
dec
mov
jne
adc
in
jmp
xor
xchg
push
mov
push
sub
outsb
fsubrl
add
arpl
rol
add
inc
sub
pop
fnstcw
xor
pop
ret
xor
jb
add
scas
outsb
mov
and
cli
push
pusha
xlat
jae
scas
out
add
dec
mov
mov
cmp
sub
das
jp
lahf
out
mov
xor
out
inc
jns
adc
mov
dec
and
adc
dec
lret
call
aas
jl
jb
adc
or
inc
enter
pop
cmp
add
cmp
xchg
jae
ljmp
pop
cld
or
inc
xor
xchg
jg
and
enter
out
mov
push
aad
aas
fst
je
cs
or
and
call
insb
adc
pushl
push
xor
and
mov
outsl
adcb
add
movsl
outsb
mov
add
or
in
test
cmp
or
add
xlat
mov
mov
cli
jae
or
or
mov
incl
pop
sti
or
sti
jp
or
and
and
in
pop
mov
rcr
xchg
ficompl
cmp
xchg
data16
sbb
loop
mov
add
and
lret
pop
test
sarl
out
xor
and
mov
int
and
xchg
adc
mov
inc
add
xor
mov
xchg
jb
stc
repz
les
pop
push
jge
jecxz
add
xchg
aas
jmp
setae
ss
mul
xor
jge
loopne
test
add
push
stc
push
inc
or
stc
mov
sub
xor
gs
stc
out
repz
sahf
test
or
stc
mov
imul
add
in
or
or
jmp
gs
sub
dec
shr
fwait
andb
xchg
or
dec
add
out
pop
add
xor
inc
testb
cmp
pminub
test
testb
adc
mov
jne
daa
div
inc
or
push
frstor
push
inc
insl
prefetchwt1
incl
dec
xor
push
sbb
idiv
shl
inc
mov
call
mov
mov
shll
incb
add
xor
testb
cmp
sysexit
test
aaa
call
inc
adc
enter
in
cld
clc
dec
ja
dec
xchg
cli
loopne
das
insb
sub
mov
rolb
mov
push
cmp
xchg
in
add
pop
enter
cmp
dec
dec
out
stos
call
mov
mov
ror
ss
stc
jle
loopne
cli
cmp
std
xchg
roll
inc
mov
test
mov
stc
jnp
mov
cld
xor
jl
inc
xor
lds
xchg
push
mov
xchg
inc
inc
xor
ss
mov
repz
inc
fs
ljmp
or
sub
int
cmp
inc
xor
add
xor
cld
cmp
push
xor
iret
sub
lret
jbe
ja
rolb
movsb
lret
into
insl
inc
jb
push
jae
sti
xor
inc
dec
xor
or
daa
repz
xor
add
xchg
stc
jmp
push
add
mov
add
push
cmp
out
add
mov
cli
pushf
int3
mov
mov
or
bound
or
adc
iret
je
inc
sub
out
jp
test
ret
in
cli
cmpsl
xchg
aaa
push
test
mov
ja
xor
jg
mov
leave
imul
imul
jl
xor
test
xor
add
decb
add
cli
testl
push
and
cli
incb
lahf
divb
dec
divb
xorb
or
jbe
idiv
arpl
test
mov
jmp
and
add
inc
adc
jne
or
incl
dec
pushl
xor
mov
or
mov
mov
add
sahf
mov
add
cmp
inc
bound
push
fdivl
incl
add
mov
pushl
xor
call
lods
inc
sub
andl
cli
stos
aaa
jbe
sub
push
sbb
sub
mov
pop
popa
inc
aaa
inc
push
or
add
iret
cmpsl
fadds
movb
test
cli
dec
or
je
mov
aaa
dec
pop
push
sbb
jo
add
xchg
std
pushl
std
je
add
mov
fwait
jp
dec
xor
std
pop
lea
sbb
aaa
lret
ret
push
fistl
sub
hlt
out
mov
fdiv
mov
pop
push
inc
fdivr
adc
dec
lret
std
mov
sti
mov
out
add
int3
int
in
mov
xor
add
push
enter
or
cmp
test
lods
push
rolb
test
ljmp
inc
fistl
pushf
stos
stos
lea
cld
js
jg
insb
mov
mov
out
in
insl
mov
int
ret
hlt
jecxz
sbb
cmp
mulb
xor
cld
sbb
ret
add
ljmp
stc
faddl
add
jg
in
mov
lock
mov
push
mov
jmp
xor
inc
lds
jl
aas
mov
jge
sbb
mov
xor
pop
mov
adc
mov
outsl
add
add
pushl
cmp
add
pop
jo
fwait
cmc
pushl
jge
inc
add
jp
scas
push
dec
notl
sub
mov
jl
sbb
movsl
jns
in
testb
jmp
cli
enter
or
or
ljmp
jge
test
lea
sbb
mov
mov
call
mov
sub
mov
xor
scas
nop
fimuls
inc
add
bound
xor
das
sti
add
add
jo
stc
cli
loop
aad
sbb
jp
aas
popf
std
mov
mov
cmp
xor
ja
enter
popl
sbb
or
sbb
je
sahf
rclb
in
incb
dec
dec
or
push
leave
je
repz
fcmovu
push
jnp
inc
adc
aaa
fwait
test
ret
cmp
call
add
mov
popf
jl
ss
adc
xor
add
mov
negl
bnd
xor
cmp
cmp
popa
andb
jl
fwait
outsb
mov
lret
xchg
mov
aaa
xor
add
out
ret
inc
scas
out
or
mov
lea
ret
pop
hlt
out
imul
scas
add
in
dec
jp
loope
push
inc
mov
data16
mov
sub
lods
cmp
xor
clc
call
jmp
xor
jge
std
mov
int3
mov
in
notl
out
addl
int
in
pusha
clc
and
xor
scas
push
in
lods
or
pusha
add
cmp
stc
fstl
scas
inc
in
mov
cs
mov
jmp
jae
stc
mov
icebp
add
mov
pushf
int3
xchg
mov
add
add
outsb
je
ss
fdivr
mov
mov
lcall
jno
pop
xchg
negb
cmp
inc
je
aaa
ds
je
or
mov
add
add
and
aaa
inc
inc
notl
xchg
das
add
movsl
inc
or
sbb
sbbb
out
fdivs
jno
mov
testb
xchg
in
jb
jmp
stc
mov
dec
add
shll
std
push
cmc
cltd
mov
shll
andb
movaps
cmp
cmpsl
cmp
push
outsl
adc
aam
push
push
jo
jbe
xchg
cmp
scas
push
push
pop
pushf
js
daa
sbb
mov
mov
clc
mov
or
cli
sub
js
idivb
ds
add
fdivrl
loope
test
fwait
std
xchg
mov
jno
push
dec
xor
repz
es
out
jnp
pop
adc
jns
mov
negl
les
jmp
sti
dec
fstpt
pop
xor
ja
adc
out
add
jmp
pop
iret
pop
dec
pop
dec
push
ret
fwait
cmp
pushf
lret
fistpll
mov
add
aaa
xor
sbb
test
mov
scas
daa
cmp
add
repnz
ret
lea
mov
loopne
mov
hlt
add
test
inc
ret
inc
ret
jnp
or
push
shlb
xchg
mov
or
fistpll
test
mov
jmp
xor
mov
add
cli
scas
jne
leave
divb
mov
dec
add
mov
xchg
stc
xchg
xchg
cli
jbe
dec
leave
cmc
jg,pt
lea
call
bound
test
mov
aaa
add
push
lods
jmp
enter
adc
fnsave
jmp
and
sub
mov
and
jne
iret
cmp
inc
jle
jg
add
pop
aaa
add
sub
addb
inc
adc
mov
out
jne
jne
mov
hlt
rorl
fdivs
idiv
mov
test
add
sbb
sub
jne
xor
add
sbb
xor
lods
inc
push
sti
bound
je
push
xor
fildll
rclb
jae
xor
add
stos
add
pop
inc
cmp
call
je
add
and
js
cmpb
jns
adc
push
sbb
repnz
fcompl
dec
lret
vmptrld
xchg
pop
insb
lds
pop
aas
sub
das
testl
or
pop
cld
cmp
notl
sbbb
pop
test
jnp
dec
adc
aaa
xorl
daa
sbbl
mov
cmp
add
repz
sti
jg
aad
jle
rorb
ljmp
loop
psubsw
sbb
test
or
nop
rcll
mov
rorb
xor
sbb
jle
add
mov
loop
enter
lods
js
cmp
test
xor
stos
mov
or
xchg
stc
cs
adc
push
addr16
mov
icebp
mov
and
je
jge
loope
outsb
xlat
out
leave
mov
pop
sbb
xor
dec
leave
dec
add
push
and
or
mov
add
out
jo
jb
xchg
loope
outsl
je
jne
inc
add
stos
inc
adc
in
clc
jl
lret
push
hlt
add
and
pop
push
dec
pop
xor
clc
xchg
jp
punpckhwd
fdivrp
sbb
cld
fnstenv
addb
xchg
mov
arpl
cmp
sbb
mov
or
sub
dec
ja
testb
xor
dec
inc
jae
lret
cltd
roll
rcrb
lcall
mov
mov
cli
lods
dec
inc
test
lea
ss
or
leave
lock
aaa
cmc
repz
call
int
dec
inc
add
and
bnd
jb
testb
xchg
adc
mov
xchg
mov
inc
cmp
mov
js
sbb
ljmp
xchg
rcll
pop
mov
or
push
fstpt
ret
sub
mov
sub
pop
test
rorl
inc
dec
mov
mov
cmpsl
in
jge
jne
repnz
sub
xor
or
mov
lods
pop
lock
or
inc
jge
setl
lock
out
repnz
out
add
test
sub
clc
mov
mov
jnp
inc
inc
sub
add
mov
sub
ljmp
and
hlt
negb
jns
pop
and
add
dec
mov
mov
es
mov
mov
sub
into
out
cmp
jb
pop
inc
jo
push
push
add
notl
scas
std
int
pop
test
jns
lahf
xor
test
nop
jns
into
mull
cli
add
xchg
arpl
xchg
inc
sbb
sbb
insl
dec
lcall
sub
jne
mov
iret
pushl
enter
cmp
mov
add
push
stos
inc
cld
xchg
adc
fwait
pop
cmp
out
xor
add
clc
cmp
shl
call
insb
cmp
jp
cmp
add
stos
aas
sbb
ja
pop
movsb
aaa
push
lea
jbe
xchg
sti
mov
pushl
bound
daa
outsl
ss
jb
pop
or
stc
xor
adc
mov
mov
add
loop
mov
push
inc
hlt
inc
inc
add
testb
jg
pop
or
lock
jle
xchg
or
incl
gs
inc
test
xor
or
pop
jb
add
xchg
jae
pusha
inc
adc
stos
aaa
std
fnstenv
push
or
out
aaa
mov
push
sub
insl
add
xor
stos
movsb
xor
add
jnp
or
mov
jecxz
mov
cmpsb
sub
jp
lods
mov
add
add
mulb
scas
sbb
in
jns
pop
push
mov
push
sub
or
int
cld
jle
jns
lods
outsl
mov
or
lods
jns
mov
mov
push
dec
dec
and
xor
xor
jns
add
adc
lret
addl
cmp
icebp
aas
repz
sub
out
lods
jmp
lahf
aaa
sub
out
test
fists
loope
and
cmp
fnstsw
mov
pop
sar
data16
aam
mov
aas
test
subl
mov
inc
mov
ljmp
sub
js
rol
ss
mov
add
mov
add
lret
movsb
cmp
ficompl
scas
lahf
cmp
or
cmp
mov
lahf
cmp
mov
lahf
cmp
lods
lahf
cmp
dec
mov
cmp
push
mov
cmp
mov
cmp
lret
add
test
cmp
out
scas
cmp
mov
cmp
loope
cmp
or
cmp
push
test
cmp
and
cmp
repnz
cmp
add
mov
cmp
jg
cmp
aaa
dec
xchg
cmp
aaa
sub
cmp
aaa
adcl
aaa
xchg
cmp
aaa
xchg
cwtl
cmp
aaa
in
xchg
cmp
aaa
ss
cmp
aaa
adc
cmp
aaa
xor
cmp
aaa
pop
xchg
add
aaa
xchg
mov
aaa
lcall
aaa
jo
cmp
aaa
inc
pusha
cmp
aaa
xor
pusha
push
out
bound
pop
pop
xor
pop
push
xor
pop
dec
xor
pop
inc
xor
xchg
cmp
mov
xor
xchg
xor
data16
add
in
cmp
jmp
ds
pop
xor
and
sub
and
sldt
inc
push
repz
sbb
sbb
out
sbb
sbb
adc
push
push
leave
loop
push
fistps
dec
or
adc
sbb
ljmp
mov
jle
mov
or
add
mov
inc
xor
pushf
cmp
rcrb
ljmp
hlt
repnz
cmp
inc
jmp
aaa
add
add
aaa
add
lds
add
add
movsl
aaa
add
add
add
xchg
aaa
add
cmpsl
add
cmpsl
add
cmpsb
add
add
push
aaa
add
add
pop
aaa
add
cmp
push
cmp
mov
mov
cmp
push
adc
add
add
cmp
je
cmp
stc
add
adc
gs
add
add
cmp
pop
adc
adc
cmp
adc
dec
adc
or
cmp
pop
cmp
pop
cmp
rclb
cmp
rclb
cmp
cmp
cmp
pusha
aam
add
aam
add
aam
add
imul
aaa
pop
orb
add
dec
repz
pop
push
push
das
test
jp
mov
cmp
pop
fdivrl
inc
jge
addr16
ss
andl
lea
sbb
pop
std
cmp
insl
xor
push
sub
or
xor
adc
popa
sbb
push
pop
or
aaa
push
inc
aas
pop
enter
mov
adc
sub
addl
and
mov
xor
jp
pop
push
mov
mov
inc
jge
adc
push
idivl
or
je
hlt
out
pop
stc
mov
out
sarl
add
stos
mov
xchg
jl
pop
pop
xchg
pop
jb
mov
imul
xor
hlt
add
jb
and
mov
test
inc
jae
pop
test
call
inc
add
dec
sub
xor
negb
test
xor
pusha
jno
cli
outsb
cmpsl
ds
xor
inc
icebp
dec
adc
xor
cmp
cmp
adc
and
test
je
insb
pop
insl
stc
push
or
or
pushf
cmp
sub
add
mul
pusha
mov
mov
sbb
jb
sbbl
stc
cmp
shll
push
shlb
stc
mov
mov
pop
cmpsb
shrb
sub
add
aam
mov
mov
idiv
xchg
jne
imul
test
stos
out
test
testb
psubd
add
push
aaa
jne
pop
rorb
and
inc
mov
mov
in
aas
or
add
dec
sti
pop
add
cmp
pop
inc
add
stc
ljmp
cmp
cmp
add
pop
sub
add
cmp
dec
add
je
dec
call
add
icebp
xchg
inc
aaa
stos
cli
dec
mov
out
xchg
pushf
lods
pop
mov
add
fidivs
mov
stos
cli
scas
fcomps
rolb
xchg
and
push
inc
out
addl
mov
es
out
aam
aas
mov
in
inc
nop
inc
stos
xchg
loop
or
jl
pop
pop
stos
cli
lods
sahf
test
hlt
mov
inc
into
inc
push
sbb
and
outsl
loop
gs
dec
repz
mov
add
push
xor
sub
fistpl
mov
enter
loopne
pop
clc
in
outsb
jb
add
loop
jmp
xor
inc
xlat
xor
add
pop
fidivrs
inc
jno
add
cmp
insb
int
add
data16
lea
addr16
fldt
outsl
dec
outsl
add
insl
outsb
loop
testb
aaa
xor
add
dec
sub
cs
mov
sub
lahf
sbb
mov
mov
mov
in
jbe
stc
mov
cli
push
xor
mov
bound
jbe
lock
sub
repz
fsubrs
push
shlb
jg
xchg
insl
stc
jmp
aam
mov
aas
xchg
stc
push
add
xchg
mov
hlt
pop
cli
aas
add
cmpsl
dec
mov
sub
xor
stc
jmp
testb
gs
insl
add
dec
xor
int3
xchg
repz
dec
pushf
mov
mov
je
in
inc
in
xchg
insb
jp
and
sub
cs
idivl
popa
in
bnd
jl
into
sbb
mov
xchg
add
in
hlt
jns
mov
sbb
jmp
orb
mov
push
cltd
testb
in
mov
call
and
jmp
in
inc
xchg
jne
cmp
clc
stc
cmp
pushl
xchg
inc
cmp
add
adcb
cmpsb
jae
sbb
jl
dec
popa
mov
add
adc
enter
adc
mov
cmpsb
cli
fsubs
add
push
inc
hlt
cmp
mov
rcrb
ljmp
pop
std
pushl
jecxz
aaa
repnz
testl
cmp
icebp
insl
mov
jo
in
test
bound
lcall
call
cmpl
add
push
test
add
push
sbb
ret
jge
push
je
or
xchg
test
std
pop
icebp
out
out
push
dec
jmp
cmpsl
das
pop
pop
mov
test
leave
jno
aam
dec
pop
ja
imul
jne
shll
adc
imul
inc
mov
sbb
lock
cli
inc
mov
hlt
xor
jge
cmp
add
mov
insl
lcall
mov
jmp
ds
flds
imul
mov
clc
cli
fnstsw
adc
sub
push
xchg
cmp
cld
sbbl
mov
pusha
or
mov
movsl
cmp
ret
in
call
add
hlt
and
dec
ss
loopne
sbb
ja
ljmp
add
jmp
data16
xor
sbb
cmp
pop
ljmp
mov
add
mov
in
jl
aad
lea
fdivrp
push
push
jmp
nop
mov
dec
dec
sti
dec
inc
in
mov
mov
test
mov
sahf
idiv
add
popf
cmpsl
sbb
sub
call
scas
out
call
stc
nop
push
test
das
add
setge
cld
dec
xchg
insl
pop
push
cmp
ljmp
pop
shll
repnz
std
pushl
imul
test
std
mov
jbe
pop
imul
xchg
jbe
pushf
ja
mov
inc
lret
sub
add
mov
or
mov
cli
clc
mov
das
icebp
scas
cmpb
pop
xchg
aaa
push
pop
test
loop
cwtl
fadd
jbe
stos
xor
mov
cmpsb
in
mov
gs
je
fisubrl
nop
xor
cmpsb
aaa
loopne
jns
add
cmpsb
jge
pushf
cmpsl
sub
call
cmpsl
pop
or
xor
sub
add
lds
push
aad
jmp
or
stos
adc
add
sbb
mov
inc
or
lcall
mov
jmp
mov
jo
xchg
push
filds
aas
cltd
daa
and
icebp
mov
or
test
and
add
push
add
add
shrl
push
xor
hlt
mov
jge
repnz
jle
out
movsl
out
xor
bound
pop
xorl
xor
stc
jmp
jns
mov
lahf
clc
clc
add
mov
aaa
pop
jle
xor
jle
fisttpl
bound
cmp
loope
push
xor
imul
stc
sbb
xor
xchg
push
sub
add
shl
imul
add
or
pop
into
pop
call
orb
movsl
mov
mov
adc
add
pushf
lahf
icebp
andl
add
jo
sbb
loopne
dec
mov
mov
mov
push
outsb
mov
add
sub
jbe
push
pop
add
xlat
insl
or
sub
divb
jge
push
ss
add
call
or
mov
cmp
inc
lcall
pop
movsl
mov
cmpsl
popa
xchg
jae
xor
sbb
cltd
std
dec
in
or
push
cltd
std
dec
add
ss
inc
sti
repz
aaa
in
or
sbb
fisttps
sahf
adc
push
or
xchg
repz
aaa
xchg
dec
sti
xchg
push
fs
ss
and
repz
aaa
sub
add
push
int3
mov
lret
into
mov
dec
xor
ss
xor
inc
push
xor
mov
aam
sbb
fdivrs
sbb
sub
sub
add
loopne
push
pop
or
add
mov
jmp
out
add
push
sbb
inc
adc
push
aaa
xor
notl
jmp
call
mov
out
aaa
pop
fstl
jecxz
out
mov
daa
test
insb
sbb
sbb
sbb
inc
sbb
add
ljmp
push
pop
std
stc
push
mov
jne
insl
add
or
jmp
dec
int3
add
xor
cli
cld
test
jmp
inc
mov
mov
mov
in
xchg
add
icebp
xchg
jno
out
ljmp
sub
cmp
xlat
dec
dec
fnstenv
in
add
cmp
testb
jae
xchg
pushf
cmpb
xchg
mov
orl
pop
cmp
add
mov
and
lea
rclb
addb
dec
xor
inc
pop
testb
inc
jb
mov
xchg
insl
and
lea
cmp
inc
jb
add
test
pop
test
jmp
dec
sbb
jge
cmp
je
xor
adc
xchg
js
test
add
shl
fnstcw
and
jl
pusha
push
test
clc
lcall
ret
jno
fabs
xchg
pop
cmp
cmpsl
pop
hlt
add
xor
cmpsb
adc
pushf
sub
movsl
jno
and
add
lret
cmp
cmp
cli
loop
mov
jmp
xchg
int
xchg
push
jp
ret
call
add
xchg
lds
or
out
mov
testl
jae
aad
inc
je
xor
lcall
xor
xor
call
mov
call
or
cmpl
mov
xor
mov
outsl
and
xor
add
les
and
aad
clc
xorb
inc
in
call
je
rorb
je
jmp
aaa
aaa
push
add
out
mov
sub
jle
mov
cmp
sbb
lock
hlt
mov
sbb
mov
notb
cmp
test
out
dec
jae
add
rcl
test
aaa
out
inc
cmp
xor
scas
jg
xor
addl
ss
popa
cltd
pop
stc
sahf
pushf
add
push
lret
sub
pop
add
out
xchg
add
mov
cld
jmp
and
hlt
mov
mov
pusha
stc
add
jae
divb
call
add
pushf
sub
push
push
lea
add
sbb
stos
icebp
invd
clc
cmp
rcl
xadd
pop
inc
std
mov
mov
xor
add
pop
jns
xchg
xor
mov
mov
mov
sub
or
push
cmc
psllw
xor
adc
movsb
icebp
cmp
add
dec
adc
lods
pop
or
clc
ret
out
rorl
xor
imul
insl
in
jp
stos
sbb
pop
popf
clc
mov
bound
mov
aaa
jbe
and
add
xor
insl
push
test
xchg
bound
jo
or
out
jle
dec
cmpb
dec
adc
xor
xchg
ss
push
movsl
cli
ds
xor
xor
xor
add
sub
sbb
ret
mov
loopne
push
aaa
dec
ret
push
aaa
xor
mov
xor
nop
ret
add
inc
aam
fbstp
fmull
pop
pop
dec
add
add
mov
or
aam
lcall
les
or
pop
jae
and
xlat
push
pop
out
and
add
hlt
xor
fsubrl
xor
xor
mov
fs
scas
pop
push
insb
dec
jo
mov
scas
rcr
cltd
mov
and
adc
mov
push
test
add
xor
test
out
lock
mov
add
je
add
je
inc
inc
mov
hlt
push
pop
mov
mov
jmp
lods
testl
push
sub
rolb
jecxz
push
xchg
xchg
pop
xor
sub
mov
mov
jl
xor
test
mov
add
js
jge
dec
rorb
or
cmp
mov
or
push
mov
notb
push
mov
cmp
sbb
inc
mov
mov
mov
add
dec
sub
and
mov
divb
notb
aaa
aam
rcrb
or
xor
mov
call
xchg
cli
jno
pushf
add
iret
adc
aaa
dec
xchg
aas
mov
jb
mov
aas
mov
shld
jp
mov
pushl
aam
mov
vmwrite
xchg
adc
je
mov
aaa
lods
mov
dec
jge
lods
dec
xchg
push
cmp
inc
jnp
mov
xchg
adc
jbe
add
add
xor
icebp
jo
test
scas
out
sbb
sti
inc
xchg
add
div
add
jl
out
aam
inc
hlt
out
jae
aaa
mov
mov
xor
pop
out
mov
pusha
cmp
mov
xor
xor
add
loope
xchg
sub
inc
aaa
stos
and
pop
xor
adcb
adc
inc
test
mov
testb
pop
add
xor
cmp
clc
or
in
stos
lock
and
pusha
negl
movsb
inc
jecxz
lcall
push
out
and
sub
scas
inc
icebp
addr16
cld
into
stos
in
push
pop
pop
jae
stos
cmp
shl
push
push
jo
add
pushf
stc
hlt
clc
es
jmp
cmp
stc
cld
test
jae
adc
ret
push
add
data16
or
sub
adc
jae
pop
xor
inc
cli
decl
inc
or
inc
data16
lea
shl
inc
addr16
popf
xor
adc
xor
push
insl
pop
push
sbb
sbb
lock
dec
ljmp
divb
pop
notb
sbb
cwtl
loope
xchg
shl
rolb
imul
sub
adc
and
mov
lods
mov
call
rcll
fsts
aaa
mov
push
nop
pusha
mov
testl
push
outsb
or
add
mov
jecxz
pop
push
sar
add
cli
cmp
or
and
mov
maskmovq
testl
ret
mov
and
aaa
sti
mov
pop
cmp
mov
iret
xchg
pop
or
loop
and
sbb
icebp
jae
mov
pop
enter
dec
adc
xor
mov
std
dec
inc
hlt
out
mov
pop
sbb
inc
in
rcl
jle
pop
dec
aas
stos
loop
divb
jno
cmp
testl
cmpsb
and
xchg
mov
xor
sti
test
ljmp
repnz
xor
or
data16
ljmp
adc
adc
inc
push
fmull
pop
clc
out
inc
mov
inc
aaa
mov
xor
clc
pop
dec
cmp
loop
and
outsb
dec
adc
jb
add
cmpl
dec
xor
lds
xor
dec
mov
test
sahf
sbb
cmp
notl
sub
cli
pop
aaa
dec
adc
jge
ret
out
pop
or
add
sub
xor
out
fdivr
es
jmp
aaa
xor
in
cmpb
fistpll
jne
lock
ret
movsl
jge
mov
divb
sbb
adc
ss
jb
xor
sub
mov
push
sub
adc
ss
ret
out
add
bound
je
dec
insl
es
incl
add
mov
xor
dec
testl
inc
push
mov
imul
sarl
or
cmp
call
scas
or
add
or
jl
adc
pop
iret
or
jae
lret
xchg
add
aas
aaa
fdivrs
or
pop
aam
mul
cld
push
js
loope
add
jo
mov
mov
dec
sub
or
std
add
aad
or
into
and
sub
sbb
bound
mov
shlb
adc
dec
cmp
icebp
addl
pop
cmp
cmp
pop
std
jae
cmc
hlt
mov
sub
xor
push
lret
mov
hlt
enter
mov
jl
inc
aaa
fsubp
mov
add
cmp
mov
sub
inc
aaa
dec
das
jmp
call
jo
sbb
mov
sbb
ss
hlt
mov
and
sbb
adc
xchg
daa
test
fucomp
movsb
shrl
jp
inc
in
sti
cli
repz
jo
inc
cld
xchg
push
pushf
test
rorb
cld
or
xor
clc
test
add
xor
lret
loop
cmp
lds
xchg
and
cli
pop
lret
dec
jb
test
mov
sub
iret
jnp
xor
sub
ja
test
sub
inc
push
sub
outsl
out
adc
xor
fcom
je
stc
lahf
pop
js
and
push
dec
ret
out
xor
in
rol
testb
out
sub
sub
add
ljmp
mov
push
xor
add
mov
mov
dec
mov
je
sub
in
push
cmp
fbstp
add
pop
stc
dec
int
jl
xor
call
add
arpl
adc
loope
mov
iret
mov
xor
nop
movsl
xor
add
stos
imul
int
inc
add
xor
notb
int
aaa
ja
adc
xor
arpl
mov
pop
push
decl
pop
cmovo
mov
or
and
lea
loopne
sti
add
je
les
lock
jp
out
jp
or
xchg
das
inc
add
mov
mov
mov
fwait
cwtl
xor
mov
adc
add
loope
enter
adc
cli
in
mov
imul
cli
sub
out
aas
aaa
xor
movl
fisubl
push
xorb
or
in
hlt
dec
xor
mov
clc
clc
inc
aaa
dec
cld
jg
icebp
out
sub
aaa
dec
xchg
jg
push
testb
and
mov
ss
add
into
xor
xchg
faddl
push
dec
rcr
sub
cld
add
xor
or
out
and
mov
pusha
mov
xor
test
call
mov
xor
mov
xor
rorl
pop
sub
mov
mov
cmpsl
mov
or
sarb
push
pop
stos
inc
mov
push
add
xor
push
mov
mov
ds
push
lock
push
xor
test
cmp
pop
ja
push
xchg
cli
aam
cmp
mov
je
cmp
stos
inc
in
aam
mov
cmp
inc
mov
dec
stc
fs
stc
lods
sti
call
jno
dec
in
jbe
stc
jmp
add
push
lret
maskmovq
testl
hlt
and
ljmp
not
sbb
ds
in
or
dec
scas
cmovle
inc
shlb
adc
jne
ljmp
mov
add
inc
mov
in
dec
xor
sahf
ss
test
pop
mov
inc
arpl
rorl
add
add
push
call
or
or
or
mov
xor
push
ja
jp
stos
adcl
test
mov
dec
cmp
adc
pushl
pop
or
lods
sbb
lea
iret
cli
sub
call
inc
cmp
cmp
pop
std
aas
and
sub
sti
sub
decl
lahf
pushl
add
cmp
std
gs
xor
std
mov
test
out
jo
test
out
lcall
mov
cbtw
sub
xor
mov
out
lock
out
data16
sbb
xchg
add
roll
scas
cmpsl
divl
sub
mov
ret
mov
call
js
das
jg
mov
addr16
push
inc
sub
xor
cmovno
out
lock
xor
dec
add
mov
or
rcrb
adc
mov
jmp
sub
test
aaa
in
movsl
add
lock
fnstenv
in
out
test
out
add
lods
dec
out
mov
ret
and
inc
repz
cmp
adc
xchg
mov
std
popf
testl
pop
pop
ljmp
jne
inc
add
notb
pop
jae
push
xlat
or
dec
add
sbb
push
idivb
add
adc
jbe
adc
cld
repnz
jo
out
adc
add
decl
push
lds
push
xor
lea
dec
push
push
mov
mov
notb
fstpl
push
push
in
popf
cmp
test
dec
mov
cmp
jl
add
arpl
add
loope
mov
aaa
dec
xchg
or
mov
push
shll
negl
xor
loopne
aaa
and
xchg
in
or
lcall
scas
gs
idivb
jle
dec
xchg
xchg
test
loopne
clc
dec
mov
push
mov
cs
stos
push
stc
push
addr16
clc
enter
ja
rcl
add
std
cld
or
je
or
iret
jp
cwtl
pop
js
ret
mov
xor
incl
dec
aas
pop
inc
dec
jg
rcl
fldcw
cmp
inc
inc
mov
xor
icebp
add
xchg
add
shrl
xor
je
xchg
inc
cltd
sbb
out
sarb
ret
add
lock
xor
loopne
mov
add
xor
stc
int3
jb
push
iret
push
iret
cmpl
cmp
mov
loop
popf
push
add
xor
popa
mov
je
pop
arpl
ffree
sub
push
lcall
push
sahf
cmpsl
lret
mov
stc
scas
sub
stc
hlt
fdivs
inc
jmp
add
push
das
add
data16
xor
sbb
push
add
sbb
jb
aaa
fimuls
xor
push
into
dec
fs
sub
mov
ret
sub
push
outsl
xchg
pop
cmp
sub
mov
stc
daa
inc
out
hlt
or
inc
add
push
pop
pop
daa
sti
push
mov
mov
cmpb
mov
add
add
pop
divb
push
add
jae
adc
cld
int
add
inc
cld
jmp
aaa
jp
xor
jne
mov
or
mov
fidivs
mov
notb
push
sbb
add
push
and
into
test
mov
and
mov
and
jbe
repz
or
dec
xorb
jmp
sbb
sldt
aaa
ret
es
or
cmpb
or
pop
dec
xor
jne
std
push
lods
call
leave
sti
out
gs
adc
pop
scas
jns
cmp
emms
dec
cmpb
dec
cmp
pop
addr16
repnz
dec
std
ljmp
cmpb
icebp
imul
je
into
cli
pop
add
incl
jg
push
add
xor
pop
inc
cmp
inc
push
stos
ljmp
inc
or
xchg
out
jle
idiv
and
add
stos
jmp
mov
std
test
sub
notb
dec
mov
inc
xor
inc
pushf
adc
jmp
test
mov
xchg
add
insl
add
adc
orl
sbbb
inc
sub
xor
adcl
nop
jae
sbb
aaa
into
out
dec
sub
pusha
decb
scas
push
call
rclb
in
idiv
cmp
testl
insb
mov
shlb
add
or
jle
clc
sar
outsl
aaa
cmp
cmp
jb
cmp
sub
push
in
movsb
add
sub
stc
pushf
and
leave
push
mov
or
xor
jae
mov
xor
xchg
add
jnp
subl
xchg
xor
test
xchg
bound
fsubl
push
xchg
cmp
mov
outsb
mov
cld
rcrl
dec
cmp
xchg
mov
or
cmp
incl
add
notb
fcomi
je
mov
mov
stc
mov
xor
mov
or
fs
in
push
inc
add
mov
mov
divb
shrb
test
mov
inc
jecxz
inc
je
fincstp
fdivrl
inc
jae
je
and
add
fmul
sti
push
std
jnp
sub
jl
aas
mov
inc
je
rol
shrd
sti
mov
out
icebp
repz
je
cli
push
std
xor
and
shl
jno
mov
idivl
dec
xchg
stc
and
ss
sub
xor
fdivl
inc
in
daa
cmp
add
ja
pop
inc
mov
add
sub
test
xor
add
out
scas
or
mov
xorps
or
xor
cmc
and
xor
xchg
call
test
jecxz
test
add
pop
fiadds
push
out
subb
inc
cmp
adc
add
mov
and
mov
clc
cmp
xor
imul
stc
jmp
mov
lods
add
xor
adc
jle
testl
xor
addr16
and
mov
and
outsb
in
inc
jbe
xchg
jo
mov
jne
mov
sub
push
mov
adcb
sbb
pop
imul
es
push
and
scas
jecxz
imul
lret
pushf
push
loopne
or
dec
inc
push
cmp
mov
adc
flds
dec
inc
fidivs
jne
fs
dec
mov
jne
push
mov
roll
stc
push
add
jns
add
fisubs
add
cs
rorl
jns
push
sahf
aaa
add
sbb
popa
mov
sbb
clc
aas
sub
in
pop
test
add
dec
inc
push
aaa
je
sahf
mov
push
stos
xchg
std
mov
sti
mov
and
mov
sub
mov
add
add
mov
push
add
mov
add
sti
push
add
push
lods
js
jecxz
int
das
mov
push
xor
scas
adc
adc
or
or
adc
sbb
adc
dec
mov
jo
pop
loopne
mov
add
ja
daa
adc
dec
jp
lret
dec
roll
pusha
xor
jnp
rclb
pop
xor
in
mov
cmp
sbb
sub
sbb
mov
out
icebp
scas
and
sbb
repnz
lea
outsl
pop
xor
imul
call
aaa
pop
mov
hlt
aaa
push
mov
fdivl
cs
sub
aaa
and
lret
aaa
inc
sar
dec
shl
dec
shl
inc
rcr
and
out
aaa
sub
jecxz
and
lods
in
and
mov
adc
jo
adc
shrb
dec
ds
imul
adc
arpl
andb
inc
call
xor
sbb
mov
xor
jge
add
add
jne
jns
cs
add
das
or
sub
jmp
jno
cli
push
add
cli
jae
mov
mov
xor
and
add
scas
repnz
push
xor
sti
and
test
enter
jg
repnz
push
xor
sti
adc
test
xor
sbb
sub
sub
or
repnz
cs
outsl
sbb
adc
addr16
incl
add
mov
je
lods
aas
pop
push
add
mov
and
setno
cmp
jmp
aaa
int
pop
inc
shl
push
aaa
dec
jge
cs
jns
sub
std
sarl
jmp
mov
or
mov
pushl
sar
mov
xor
iret
push
aaa
dec
cmp
jp
punpckldq
jns
add
jmp
incb
inc
pop
inc
sbb
inc
and
mov
adc
jle
iret
mov
add
sub
push
std
pushl
ret
push
test
push
add
jl
bound
stos
mov
pop
pop
add
add
stos
lods
pop
sbb
add
in
add
push
mov
lods
stos
pop
dec
test
pusha
gs
adc
or
or
add
or
mov
add
mov
clc
mov
mov
cmovb
call
fisttps
hlt
and
mov
sub
inc
mov
push
jmp
aaa
outsb
add
xor
aaa
and
mov
repnz
add
hlt
shrb
jo
adc
outsl
adc
jb
adc
test
scas
lret
mov
popf
cs
inc
idivb
stos
or
mov
and
out
xor
jge
dec
sbb
shrb
stc
fisubrs
jmp
xor
mov
xor
xchg
scas
xchg
dec
adc
negb
repz
test
sub
add
imul
dec
mov
push
xorl
push
inc
ret
add
dec
into
les
je
add
mov
adc
push
testl
aaa
push
add
add
testb
mov
out
or
es
jle
add
adc
call
sti
decl
push
mov
add
sahf
jge
add
aaa
cmp
or
arpl
add
popf
addr16
cmp
dec
inc
ss
add
test
sbb
or
stos
idiv
sub
cld
dec
xchg
and
das
xchg
xchg
lret
loop
add
idiv
lock
sub
dec
inc
ss
xchg
sub
add
and
sbb
mov
jl
inc
sbb
pop
dec
lcall
aaa
xor
sub
xor
jge
dec
movb
xor
jle
add
sti
lds
leave
add
arpl
jp
inc
and
add
aaa
inc
inc
xor
xor
subl
xchg
cli
idivb
pop
gs
aaa
mov
xor
imull
aas
mov
ljmp
in
sub
hlt
inc
test
fs
jnp
inc
ret
mov
test
add
mov
out
in
and
xor
cld
leave
aaa
mov
mov
dec
pop
mov
add
aaa
sbb
xor
xchg
push
xchg
mov
inc
xchg
or
push
mov
stc
fstl
mov
paddw
inc
or
stc
imul
mov
leave
loope
mov
jle
xor
imul
stc
arpl
sti
movsb
xor
xchg
xor
movb
pop
aaa
sub
cmp
stc
lcall
popf
jae
lods
inc
pop
jp
or
cmpsl
mov
out
or
dec
xor
sti
xor
cmpb
js
push
mov
jle
and
adc
xor
or
xor
mov
push
jp
add
mov
dec
jno
je
pop
nop
aaa
je
jmp
sub
add
divl
lock
aaa
lcall
mov
cld
pushl
repnz
fidivrs
shl
out
mov
sar
or
neg
mov
jg
out
sub
call
or
es
test
and
or
aas
inc
inc
push
pop
adc
add
push
adc
sub
pop
add
fstpl
aas
inc
inc
pop
aas
inc
or
fidivl
fildll
or
xchg
test
cld
xchg
jae
mov
scas
mov
sub
mov
adc
add
cmp
subl
out
outsl
imul
add
xor
push
test
dec
xor
std
shrb
imulb
imulb
add
xor
imul
pop
pop
xor
orl
out
icebp
cmp
add
jbe
sti
movntq
out
add
mov
cli
arpl
imul
pop
int3
repz
test
xor
shlb
js
lock
mov
jmp
mov
andl
adc
lods
cli
jmp
mov
xorl
sub
adc
lods
cli
call
aaa
cmpsl
push
imul
jnp
xor
test
cs
inc
std
adc
lods
cld
test
mov
mov
jmp
mov
add
cmp
aad
outsb
push
nop
icebp
adc
cmc
cmp
sub
cmpsl
xor
xorb
add
stc
decl
popf
dec
mov
or
sahf
jb
push
fwait
lods
jne
test
orb
pop
or
cmp
push
xor
cmp
lods
inc
and
scas
inc
and
roll
das
xchg
sarb
sub
pop
lahf
addb
add
aaa
cwtl
sbb
aaa
sbb
dec
stc
lea
inc
inc
cmpsb
or
sbb
pop
jg
and
in
push
and
jg
pop
jmp
jae
popf
addr16
sub
push
pop
inc
fucom
mov
sub
or
pushf
addr16
xchg
ret
mov
movsl
ret
dec
and
sub
js
xor
jae
xchg
enter
mov
inc
inc
aaa
push
add
mov
pop
call
and
xor
pushl
inc
ljmp
stos
outsb
in
sub
push
ljmp
cs
mov
filds
aaa
mov
mov
mov
test
xchg
jg
jle
sub
and
mov
sarb
sub
push
or
dec
sub
imul
jmp
add
mov
sbb
sbb
sub
das
cmc
xor
inc
popa
xor
enter
andb
cs
xchg
jmp
mov
xor
cmc
xor
add
add
mov
sub
inc
lods
cld
dec
repz
call
xor
xchg
or
out
add
xchg
or
xchg
test
and
aas
call
xor
addl
add
add
mov
or
rolb
push
lahf
addb
daa
or
int
sti
call
adc
shrb
pop
repz
aaa
lret
add
fisubrs
mov
fs
push
mov
pop
add
fidivs
push
cmp
or
and
push
in
and
xchg
into
mov
inc
lea
inc
popl
sub
mov
add
inc
dec
ud2
repnz
pop
inc
add
pop
push
dec
xor
inc
dec
sub
pop
pop
xor
cwtl
xor
call
aaa
pop
mov
aaa
je
add
sbb
jge
sbb
test
push
jns
add
ss
add
inc
cld
or
and
fcmovbe
add
push
xchg
mov
iret
add
aaa
pushl
xchg
ja
cmp
xor
scas
std
cwtl
sbb
iret
jae
adc
or
pop
push
cmp
sbb
call
pop
push
add
add
test
cmp
add
ljmp
enter
ss
and
jmp
pop
cmp
ljmp
loopne
add
es
sub
out
jle
xor
add
sbb
push
fsubrl
enter
shlb
cmpl
jmp
xor
cs
xor
out
cmc
or
fwait
push
xor
pop
repnz
xor
cmp
fbstp
ljmp
xor
imul
in
and
mov
or
add
bound
bnd
call
mov
imul
test
dec
xor
fs
jae
call
ret
in
add
xor
mov
out
mov
pop
outsb
and
add
pop
sbbb
xor
mov
jae
ret
adc
jb
orb
lret
lret
cmpsb
mov
pop
xor
adc
cmpsb
in
wbinvd
cmpsb
dec
clc
dec
nop
ja
xor
jmp
mov
add
add
sub
and
add
xor
inc
jge
shlb
add
adc
in
and
arpl
addb
inc
xor
inc
push
ret
inc
lea
cmp
ror
lret
add
sbb
push
adc
adc
dec
adc
jne
sub
xorl
es
faddl
mov
sub
mov
xor
sti
and
leave
and
mov
loopne
fs
icebp
lock
out
add
aaa
lea
inc
sbb
ss
push
std
mov
hlt
add
and
push
cmp
ljmp
and
pop
or
insl
inc
pop
in
adc
add
movb
fldl
aaa
xor
jge
jns
mov
and
pop
nop
test
loopne
lret
ss
and
daa
cmp
test
fmulp
jmp
aaa
cli
test
or
loopne
jle
fs
sub
imul
test
xlat
decb
adc
mov
or
add
add
xor
and
dec
divb
sbb
or
gs
and
jmp
cmp
xor
add
lcall
cmp
xchg
adc
xor
cmpsl
sub
mov
mov
xor
pop
stc
jmp
in
jns
cs
stc
out
add
imul
jmp
push
push
xor
add
sub
add
stos
and
jmp
xchg
adc
filds
and
xchg
sti
leavew
jmp
sub
icebp
add
sti
inc
dec
scas
dec
add
jge
push
fldenv
inc
inc
mov
test
or
pop
cmp
sahf
jle
setnp
decl
imul
roll
xor
or
jle
push
pop
xlat
cmc
incl
mov
add
call
test
sti
lcall
or
pop
lahf
idiv
into
jbe
add
or
test
pop
cli
inc
test
in
sar
sub
call
mov
or
push
inc
and
xor
pop
pop
add
xor
or
jmp
lods
aas
gs
xor
repz
xor
leave
dec
push
xlat
sbb
test
in
cmp
shlb
add
andl
out
cmp
pop
lods
pop
jne
inc
pop
fs
or
imul
pop
jae
pop
mov
testb
out
out
mov
add
ljmp
or
stos
cmp
pop
cmp
out
sub
sub
cmp
pop
test
dec
pop
aaa
xor
inc
movsb
mov
jo
adc
cmpsl
pop
mov
xchg
or
jne
push
fsubp
jmp
add
jae
fcoms
add
call
pop
ljmp
add
push
sahf
in
xor
jle
sub
xor
pop
sti
jbe
leave
sub
clc
sahf
or
pop
cmpsl
or
push
adc
push
sbb
push
sbb
fxch
jnp
jmp
mov
sbb
enter
or
mov
dec
fnsave
add
pop
push
cld
in
add
sub
ljmp
mov
dec
js
inc
into
cmp
out
cmp
sub
xchg
mov
add
pusha
xor
jmp
adc
inc
or
movsb
xor
dec
or
mov
add
xor
push
pop
mov
add
cmp
push
xor
jmp
mov
or
mov
testb
imul
add
push
mov
and
repz
ja
add
mov
xchg
sub
mov
or
shrd
cltd
cld
push
aad
xor
sbb
and
mov
push
and
and
movsb
fldenv
pop
xchg
fiaddl
dec
ret
clc
lds
div
mov
or
div
xchg
add
or
int3
ret
add
mov
jg
and
stc
lret
std
xor
sbb
mov
xchg
ss
jae
xchg
mov
pop
xchg
leave
and
rorl
scas
sub
mov
shlb
scas
mov
or
jb
lea
fidivl
mov
push
lods
sbb
cmp
outsb
sub
push
add
lea
jb
xor
sub
inc
scas
and
push
and
sub
sbb
dec
fiadds
ret
dec
jae
cmp
push
and
scas
pop
inc
dec
xor
mov
repz
or
mov
loopne
jbe
add
testb
mov
repz
jne
test
cmpsl
and
push
or
push
adc
push
mov
or
xor
in
lods
aas
mul
je
inc
ds
mov
push
push
add
jmp
xchg
stc
and
push
jb
sbb
or
inc
sbb
scas
daa
and
idiv
jle,pn
test
stc
push
push
sbb
push
ljmp
add
mov
sbb
lret
lret
cltd
mov
pop
cli
scas
or
inc
notb
testb
icebp
call
xlat
jg
arpl
add
adc
xor
add
adc
xor
jmp
in
adc
xor
add
repnz
xor
jmp
cmpsl
inc
pop
add
cli
pushf
or
test
lcall
shl
and
add
bound
add
add
or
imul
add
push
or
testl
inc
aas
mov
xor
out
cwtl
add
mov
fstl
lods
push
call
mov
add
add
rcll
stc
and
xchg
sub
call
xchg
add
or
xor
push
mov
stc
lods
add
lods
add
lods
add
add
add
add
lods
add
add
add
add
lods
add
lods
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
inc
into
sub
gs
stos
xor
into
stos
xor
into
stos
xor
into
stos
xor
into
stos
xor
into
stos
xor
into
stos
xor
into
stos
xor
iret
stos
xor
stos
add
xor
iret
stos
xor
fldcw
xor
enter
fldt
xor
fsubrl
cmp
fsubrl
xor
fsubrl
cmp
enter
fldt
cmp
xor
aad
xor
fsubrl
xor
sub
stos
iret
sub
aam
add
mov
or
int3
pop
xor
pop
xor
xlat
int3
xor
xlat
int3
xor
add
fdivl
xlat
fdivl
xlat
int3
xor
xlat
pushf
xor
pop
push
sub
cmc
je
add
fs
fcomip
decl
add
inc
push
inc
mov
fs
je
stos
mov
jbe
test
add
js
pop
xor
push
js
xor
jge
cmp
aaa
or
rolb
call
mov
getsec
sbb
repz
testl
aas
negl
gs
cli
or
mov
and
imul
das
mov
and
or
adc
cs
shlb
xor
xchg
jne
test
xor
fnstcw
xor
lods
add
sbb
add
add
mov
jge
lock
or
mov
push
sub
xor
ja
adc
fdivl
rclb
push
stos
sbb
repnz
mov
inc
ss
out
adc
sub
and
jmp
scas
jns
lods
add
pop
xchg
ftst
sbb
pop
fstl
xchg
or
adc
mov
mov
fldl
add
jno
mov
addr16
and
fwait
cmpb
xlat
clc
cmp
sub
hlt
dec
in
jno
xlat
sub
pop
pop
jae
add
add
push
outsl
in
mov
in
in
push
cmp
dec
or
xor
shl
aas
scas
sub
subb
xor
pop
dec
cltd
add
jnp
inc
cmp
adc
fcoml
stc
jmp
add
test
lods
fcomi
adc
test
leave
sti
hlt
adc
sub
adc
sub
dec
jb
sarb
in
outsl
fldl
xchg
out
add
into
add
jg
jno
aaa
ljmp
or
aaa
mov
cmp
cmp
ljmp
or
jne
xchg
cmp
inc
dec
loopne
mov
sti
addl
fidivl
rclb
cld
jne
int3
loopne
pop
data16
jmp
loope
arpl
pop
cltd
insl
jb
xor
jne
fs
pop
repz
add
adc
lea
xor
stc
call
sbb
cmp
test
movb
dec
mov
add
sbb
add
add
jbe
out
iret
sti
dec
shll
mov
xor
pop
xchg
sti
ljmp
xchg
dec
dec
and
dec
cli
add
mov
sbb
add
iret
sti
clc
test
lock
dec
cli
add
pop
xchg
add
shr
dec
stos
add
add
pop
push
cli
mov
cmp
negl
jl
xchg
popf
dec
cli
add
and
fnstenv
fs
pop
fwait
adc
dec
stos
jbe
mov
jbe
mov
xor
mov
in
inc
in
fldt
ja
and
jp
cmp
movsb
cmp
xor
jp
dec
sbb
fnstcw
into
sti
js
inc
cmpsb
decb
dec
ret
jns
out
or
mov
dec
mov
psadbw
ljmp
xor
jbe
loop
addr16
add
and
ljmp
outsb
bnd
xchg
dec
pop
inc
xchg
mov
jmp
outsb
push
pusha
inc
mov
jge
ds
cwtl
push
push
fsubr
sbb
push
mov
pop
cld
and
add
into
mov
xchg
push
iret
push
in
mov
fildll
outsb
add
xor
lea
push
mov
test
dec
repz
jp
xor
xchg
xchg
jne
into
mov
sbb
push
or
add
leave
xchg
fiadds
std
aas
adc
sbbb
pop
ds
faddl
push
dec
fmul
pop
xor
add
push
fdivl
lahf
out
scas
mov
mov
push
cmpl
rorl
xor
scas
cmpb
aad
out
and
notb
and
mov
mov
sbb
push
out
mov
push
or
xor
es
out
outsb
mov
add
leave
jle
add
out
jae
loop
shrl
movsl
add
push
mov
insb
pop
psubsw
ss
pop
andb
mov
popa
lods
pop
cs
pop
add
movsl
ret
mov
jecxz
add
aaa
stos
scas
push
dec
sub
iret
pop
pop
xor
aaa
or
divb
es
add
clc
jle
add
push
add
and
stos
mov
dec
lea
int3
fs
pop
mov
rorb
repz
cmc
mov
mov
dec
adc
rsm
add
lods
add
mov
cwtl
pop
ja
pop
and
mov
dec
sub
xor
inc
push
je
or
cld
adc
std
or
fmuls
in
mov
add
jns
inc
push
jae
hlt
or
shlb
loope
mov
lods
jecxz
rcll
xchg
or
out
mov
std
cmp
shll
adc
in
fnstenv
push
adc
insb
add
aad
sub
fs
dec
std
mov
sbb
in
xor
push
push
rorl
fldl
add
int3
test
xchg
pop
xor
pusha
popa
lea
loope
movsl
pusha
int
dec
and
iret
push
inc
mov
arpl
in
push
call
dec
fildll
aas
mov
push
ret
aas
and
xchg
push
out
and
div
out
add
push
sub
ljmp
call
xor
sub
out
insl
pop
and
xor
push
imul
xlat
testb
bound
or
lock
xchg
out
mov
jg
or
jg
insl
or
in
fld
icebp
or
pop
aaa
cmpb
jo
lret
jle
lea
test
pop
aaa
enter
aaa
roll
aaa
sbb
add
stos
outsl
je
xchg
shl
add
adc
cli
sub
hlt
aas
aaa
cs
mov
fiadds
jmp
jo
mov
idiv
dec
xchg
inc
and
and
aas
aaa
out
jae
subb
sbb
inc
cli
out
imul
lret
stos
push
dec
in
arpl
add
aad
test
into
adc
je
jle
jle
jbe
add
arpl
out
mov
mov
bound
fwait
jbe
shr
inc
lea
in
hlt
and
add
repz
out
outsb
sarb
outsb
jb
insl
or
cmpl
xchg
rorb
pop
pop
mov
inc
aaa
inc
nop
inc
ret
decl
add
mov
stos
das
mov
call
jo
mov
add
pop
lret
repz
xchg
ja
lods
test
ds
jo
cltd
out
or
dec
cmp
das
adc
xor
ds
aas
push
add
xor
jle
xor
mov
decl
gs
pop
stc
jmp
xorl
mov
nop
adc
stc
pop
adc
je
jle
dec
mov
jmp
mov
mov
fisubrs
xor
ljmp
outsl
push
lcall
mov
mov
push
mov
popf
scas
jnp
pushl
jl
sbb
mov
es
mov
push
sub
mov
pop
add
insb
add
mov
clc
mov
add
jg
jns
pop
add
mov
je
jge
nop
xchg
push
lcall
add
inc
aaa
sahf
add
bound
dec
cli
inc
pop
repnz
aaa
push
or
out
dec
add
ds
or
jmp
popa
std
pushl
push
jns
sarl
mov
lret
fiaddl
dec
es
mov
add
add
mov
call
push
ds
mov
insb
idivb
mov
pop
jns
add
popl
and
cmp
push
push
aad
xorl
add
xchg
add
imul
add
pop
pop
ja
jecxz
inc
std
sbb
incb
xchg
hlt
arpl
imul
je
js
arpl
sub
cmp
inc
jo
pop
xor
add
lcall
jo
xorb
mov
sbb
sub
adc
inc
in
push
inc
add
inc
jmp
hlt
mov
test
xchg
mov
mov
mov
jg
add
cwtl
sar
clc
add
mov
mov
cmpsl
mov
pop
je
jmp
bound
call
cs
adc
xor
cs
pop
je
je
sti
cld
push
hlt
jb
insb
repz
push
mov
iret
je
fcomi
cmc
jb
insb
or
iret
je
sarl
shl
stc
jmp
jo
sti
push
add
jecxz
sar
jbe
fisttpl
test
outsb
mov
push
jno
add
push
movsb
lods
inc
mov
call
lea
test
add
push
jne
xorl
rolb
jne
or
ss
adc
arpl
call
loope
add
jp
mov
in
or
test
mov
frstors
jmp
sub
pushl
cmp
dec
out
cmc
cmp
push
inc
or
test
iret
inc
cli
dec
popf
sar
cwtl
cmp
adc
daa
or
je
adcb
and
std
test
pop
adc
cmp
adc
std
pushl
fidivrl
push
mov
loop
decb
add
add
xchg
jle
sti
int
mov
or
add
shl
popf
cmpsb
add
popf
int
or
lea
push
add
xor
inc
xchg
arpl
cld
and
add
pop
repnz
xor
ss
aaa
inc
or
or
sbb
and
cmp
or
cld
outsl
pop
mov
add
xchg
add
mov
inc
jnp
imul
aaa
and
int
das
mov
add
loopne
jbe
loope
jmp
or
addr16
scas
push
mov
das
push
push
hlt
enter
sbb
stc
out
data16
push
pop
jo
ret
xor
je
jle
sahf
xchg
mov
je
inc
jmp
add
push
scas
loope
ss
add
add
jbe
clc
cmp
popa
incl
jbe
cli
push
imul
aaa
insb
mov
outsl
clc
aaa
lea
xchg
stc
ss
shlb
mov
mov
loopne
roll
in
mov
push
into
xor
add
test
test
mov
decl
fidivrs
adc
jne
add
stos
in
cmpl
push
push
inc
sub
jne
stos
xor
sti
dec
jmp
mov
shll
daa
leave
dec
js
push
shrl
xor
cmp
int
inc
addl
addr16
cld
jne
mov
aaa
daa
aaa
cli
push
add
nop
mov
xor
cmp
aaa
cli
sub
adc
mov
mov
fimuls
mov
aaa
jae
pop
out
xchg
jecxz
sub
in
stos
pop
sub
adc
pop
pop
aam
getsec
fisubrs
ret
ja
lret
add
add
add
add
popf
mov
push
outsb
lock
fcomip
sub
mov
cmp
or
je
inc
xor
ljmp
divl
cmp
dec
and
dec
stc
lock
icebp
arpl
cmp
mov
cmp
inc
mov
or
jae
xor
ljmp
aas
and
add
out
pop
and
out
xchg
popa
pcmpeqw
or
or
out
xchg
or
sub
cmp
cmc
xchg
lret
cmc
scas
mov
icebp
fidivs
xchg
cli
clc
sar
xchg
jno
imul
xchg
xchg
dec
out
sub
rcrb
fnstsw
icebp
lcall
mov
testb
fldl
xchg
xor
aas
decl
loope
je
inc
add
pop
shlb
ljmp
js
leave
cld
pop
push
or
xor
xchg
xor
cmc
loope
cmp
in
add
jg
inc
cmc
or
jb
clc
lcall
scas
xchg
inc
mov
cld
mov
out
jnp
test
pop
pop
repz
add
add
mov
loopne
lea
sti
push
lods
sub
out
pop
ds
or
sbbb
add
lock
pop
add
dec
xor
inc
cli
imul
push
jbe
cmp
dec
add
das
insl
adc
test
or
pushl
bound
cmp
decl
xor
dec
jmp
cli
pop
xchg
roll
sbb
sbb
sbb
add
jnp
mov
mov
cmp
js
pushf
adc
or
mov
xchg
or
add
mov
lock
pop
jle
sub
das
ja
mov
mov
out
sar
pushl
mov
addb
mov
imul
cmpl
pop
cmp
fs
push
jae
sub
and
fimull
aaa
scas
sub
mov
lods
sub
jg
loop
loop
push
test
pop
mov
mov
shlb
stc
xlat
mov
pop
pop
into
inc
push
mov
out
sub
cmp
and
add
jne
pop
sbb
ljmp
imul
jae
adc
jle
cltd
xor
out
ljmp
mov
jmp
mov
or
dec
cld
arpl
ret
sti
cmp
call
xor
push
pop
add
adc
add
xor
fldcw
outsl
or
jmp
add
cmpsl
push
adc
push
mov
std
clc
call
fldt
insl
loope
push
or
clc
jmp
fwait
idiv
jmp
inc
call
or
cmpsl
mov
rsqrtps
insl
adc
jmp
inc
add
adc
xchg
mov
jmp
aas
sti
test
jge
sahf
xor
push
lret
je
into
xor
insl
pop
jge,pt
add
sti
ja
stos
inc
push
imul
jg
dec
dec
cs
jb
ja
inc
xor
inc
cs
sbb
aaa
inc
mov
mov
imul
out
xor
test
dec
or
aas
jne
lock
xor
mov
mov
sub
test
cmp
add
iret
insb
aaa
loop
push
sbb
push
repz
or
inc
getsec
add
js
popf
add
or
push
lods
repz
xchg
mov
mov
clc
jae
xor
cmp
addl
mov
add
push
mov
cmc
pop
inc
imul
dec
in
or
test
jbe
fiadds
aaa
xor
inc
fdiv
inc
icebp
adcb
imul
mov
cmp
lock
mov
in
in
aam
push
ret
cmp
dec
xchg
stos
in
stos
add
outsb
lcall
hlt
push
fldpi
xlat
sub
stos
push
movsb
push
daa
inc
add
add
xchg
shrb
sbbl
lahf
dec
add
bnd
loope
aaa
icebp
pop
daa
fidivs
jb
mov
incb
jnp
cmp
cld
jg
ret
mov
cmpsl
test
lds
jle
shrl
test
arpl
sbb
rclb
xor
clc
xchg
pusha
sub
popa
jmp
decb
sti
test
aas
xor
bound
jbe
cmc
imul
icebp
fwait
daa
je
je
imul
mov
aas
sti
call
aaa
jge
phaddw
or
ja
iret
aaa
add
ljmp
sarl
push
push
xchg
add
cmp
push
push
dec
lret
sub
mov
add
ss
sar
jae
test
push
mov
mov
pop
mov
push
hlt
in
mov
or
dec
aad
out
cli
fs
jne
das
pusha
inc
or
push
test
or
sbb
idivb
inc
or
add
push
leave
repz
hlt
or
scas
sbb
sbb
subl
add
mov
sti
push
mov
fldl
ja
sbb
mov
negl
lods
sbb
aaa
cmp
xchg
sbb
aaa
fnsave
je
push
leave
sti
dec
xor
pop
push
bnd
inc
xchg
sbb
jge
out
push
inc
cmp
stos
mov
add
sbb
mov
cwtl
rclb
mov
mov
mov
add
cli
xchg
outsb
jmp
in
popa
lret
movsl
das
mov
in
lret
jp
mov
addr16
out
jp
adc
push
mov
ss
divl
aas
jb
mov
mov
push
cmp
fnsave
mov
add
adc
add
pop
xchg
sub
out
clc
inc
add
arpl
sub
mov
cmp
inc
test
sub
sub
mov
std
dec
mov
jns
xor
jmp
daa
dec
leave
sti
hlt
lock
fsubrl
outsb
or
imul
ficomps
cmp
xor
add
or
cs
outsb
repnz
mov
loopne
inc
lock
xorl
fiaddl
jmp
inc
dec
ljmp
daa
rorb
loopne
imul
sti
std
imul
in
xchg
std
add
push
add
cmpsb
sub
decl
mov
jo
repz
add
cmpsl
test
mov
je
dec
mov
les
add
xor
mov
ljmp
push
jbe
mov
mov
add
imul
aaa
xor
jge
out
pushl
addr16
mov
xor
addl
add
jno
adc
mov
aam
aaa
imul
xchg
sub
and
add
popa
and
mov
jecxz
into
dec
andb
mov
fadds
dec
or
push
scas
fdivl
push
mov
insb
mov
cs
test
mov
add
and
aas
loop
sbb
aad
cmp
cmc
cmp
mov
out
and
jmp
add
cmp
mov
jno
cmp
iret
add
adc
addr16
or
adc
cmp
cmc
sub
inc
xchg
adc
cmp
sarb
cvtps2pi
adc
ret
enter
imul
arpl
xor
fcmovbe
add
out
add
mov
inc
jmp
mov
movsb
inc
ljmp
add
mov
and
loope
lods
std
pop
js
mov
aas
adc
cmp
jmp
inc
inc
jmp
je
inc
cli
sbb
sub
insl
jbe
xor
add
pusha
lods
xor
jb
mov
std
fdivs
sti
jno
xor
jmp
pop
pusha
pushf
sub
add
lcall
dec
mov
cmpl
add
fistpl
jg
es
or
imulb
rcrl
insl
lock
inc
aad
sahf
xor
push
clc
dec
leave
mov
clc
push
aad
ja
push
mov
adc
xor
add
imul
imul
lret
sbb
adc
xor
adc
inc
add
fwait
or
dec
xor
add
pop
mov
mov
int3
pop
rolb
and
fsubs
cld
cmpl
dec
lods
aam
jo
sub
lods
xor
shll
push
sub
cmp
pop
add
sub
leave
push
inc
add
aaa
pop
sub
dec
adc
test
aas
add
mov
ltr
out
sub
loope
cmp
gs
jne
cli
cmp
xor
or
mov
ljmp
jnp
add
cs
fwait
ljmp
out
mov
jae
push
cmp
or
test
sub
pusha
test
leave
add
cmp
sub
imul
sub
ljmp
and
push
adc
repnz
je
sub
sub
ds
jmp
loopne
jne
cmc
sub
int
sub
decl
in
pop
jmp
add
xor
dec
jo
loope
movsb
dec
jmp
mov
add
sub
es
mov
out
clc
cmc
add
xor
ds
push
mov
push
out
in
mov
in
out
jmp
pop
inc
dec
adc
test
lret
xor
xor
in
mov
insl
pop
mov
mov
adc
push
add
mov
push
push
xor
ljmp
dec
mov
xchg
jg
adc
add
orl
dec
in
test
xchg
mov
dec
xor
sbb
push
or
aam
cmp
shl
js
data16
push
aad
add
in
add
std
push
lds
loopne
jle
sti
test
movsl
cmp
insl
cmp
call
imul
incl
add
inc
and
pop
xlat
cli
loopne
repz
aas
fstpl
dec
lods
xchg
out
jle
or
outsb
and
and
mov
mov
push
cli
add
aam
dec
mov
int
pusha
jnp,pn
jo
std
cli
push
fidivrs
fcompl
aaa
pop
rcr
add
clc
pop
cli
mov
dec
out
dec
pop
cli
mov
push
adc
aaa
xor
iret
in
inc
adc
arpl
mov
ja
mov
xorb
popa
ljmp
push
push
es
int
push
hlt
push
dec
cwtl
out
jp
out
sti
mov
cmpsb
xor
pop
js
jecxz
and
add
test
or
jmp
jae
fistpl
fisttpll
arpl
or
jne
xor
add
out
jbe
in
jns
in
add
out
sbb
int
jmp
ljmp
cmpsl
xchg
lock
and
popa
ljmp
xor
imul
dec
aas
clc
push
push
push
aad
add
aaa
push
shll
call
adc
insb
cmp
out
icebp
mov
dec
int3
stc
push
sbb
adc
jo
call
dec
int
jecxz
ljmp
pop
pusha
icebp
add
fsubr
std
shrl
decl
jg
push
insb
cmp
sar
shl
mov
punpckhdq
pop
add
cmpsl
jb
add
jmp
push
arpl
or
les
loop
jmp
mov
cmc
daa
in
test
das
lds
inc
orb
flds
lret
movsl
pop
add
push
pop
call
cmp
cmp
sbb
insl
sbb
testl
addr16
int3
pop
stos
cli
adc
or
mov
hlt
aad
sub
mov
cli
inc
sub
sub
stos
ss
jmp
in
xchg
sti
aad
dec
add
gs
jp
out
dec
sub
sub
sar
je
data16
ja
cmpsb
sysret
push
stc
adc
add
lea
jnp
mov
mov
repnz
mov
sbb
shll
sbb
jg
pop
aaa
mov
bnd
cmpsl
push
aaa
iret
lcall
cmpsl
or
jmp
test
sub
dec
addr16
ja
adc
push
push
and
cmc
out
ljmp
and
add
inc
sti
jge,pt
add
insl
push
pop
cwtl
xor
ljmp
addr16
pop
jge
pop
or
insb
std
jne
cmp
sbb
hlt
loope
lods
daa
pop
add
or
mov
loop
sahf
cmp
shrd
out
cmp
cmp
out
gs
add
scas
aas
adc
clc
cld
lods
inc
inc
jmp
lahf
mov
insl
test
jg
sub
and
push
cmp
cmc
push
adc
adc
scas
mov
mov
add
adc
mov
insb
pop
aad
pop
pop
ja
mov
push
stos
jg
pop
movsl
or
divb
outsb
or
adc
or
add
lods
dec
clc
addr16
push
leave
leave
adc
inc
call
cld
jne
adc
dec
lret
shlb
add
or
jecxz
in
cmp
cmpsl
scas
mov
std
push
and
xchg
pop
je
outsl
repz
sbb
hlt
je
in
inc
xor
ja,pn
mov
xchg
test
stos
mov
mov
add
mov
cltd
push
mov
jmp
aaa
int
call
lods
popf
mov
cmp
xor
sbb
notl
std
popa
scas
pop
lcall
dec
decb
cli
mov
cmp
outsl
cwtl
pop
cmp
bound
daa
fiaddl
roll
xor
mov
adc
add
aaa
xor
fidivl
iret
fidivrl
mov
add
das
aaa
adc
in
gs
sbb
xchg
cmp
test
popa
jecxz
add
cmpsb
stos
test
sti
fisubs
push
lods
and
enter
push
jae
add
notb
inc
sbb
jno
and
aaa
inc
push
fidivs
cmp
int
add
aaa
stos
in
es
xchg
ds
ficompl
or
fs
push
cs
pop
add
cmc
cmp
pop
jns
push
push
add
push
clc
je
or
out
adc
shll
sbb
mov
xor
jg
inc
mov
ljmp
sahf
scas
bound
add
mov
testl
lcall
clc
cld
mov
mov
and
inc
imul
sub
pop
loopne
add
mov
incb
add
pop
xor
lret
ja
scas
jge
inc
aas
sti
call
lds
jecxz
inc
sti
push
aad
ja
add
sbb
pop
or
push
je
daa
incl
out
adc
add
jle
dec
fadds
add
lds
negl
inc
add
into
xor
cmc
sbb
enter
inc
cmp
and
in
addl
push
xor
lods
mov
aaa
add
cli
mov
testb
and
add
pop
mov
gs
lcall
test
aaa
decl
stos
push
add
mov
xor
mov
mov
push
fisttpl
gs
repnz
es
js
aaa
int
push
ret
push
mov
into
adc
or
mov
loope
cmpb
add
xor
inc
pop
jno
add
xor
add
fcmovu
xchg
daa
test
push
stos
add
sysenter
ljmp
jg
inc
sbb
mov
xor
cmp
insl
shll
sub
cmpsb
rolb
sub
fcmovnbe
xor
jo
out
leave
mov
add
jo
sub
jo
xor
xchg
mov
dec
ljmp
xchg
mov
aaa
add
add
loop
pop
ja
push
data16
fisubrs
loope
clc
push
xchg
adc
mov
mov
pushf
ror
cmp
fcmovnu
test
xor
mov
fs
clc
push
mov
aad
push
fimuls
out
mov
fimuls
mov
ficomps
nop
loope
mov
pop
fdivr
scas
add
xchg
lods
xchg
mov
fdivrp
pop
scas
mov
xchg
ficomps
push
cmp
imul
pop
mov
and
or
jmp
pop
sub
stc
cmp
add
inc
sti
call
out
cld
push
out
in
sub
sti
adc
xor
or
add
xor
dec
mov
add
mov
sti
int3
and
xor
int3
xor
jmp
push
cmp
mov
bnd
lahf
jg
aaa
push
sti
test
push
cld
dec
scas
sti
les
pusha
xchg
or
ds
jnp
inc
lret
jae
inc
lret
imul
lret
adcl
mov
loop
xchg
pop
jno
push
mov
dec
scas
xchg
push
add
dec
int
dec
aaa
push
xchg
mov
call
add
aaa
push
mov
cli
mov
add
push
cmp
incb
out
dec
sub
pop
mov
cmpsb
xchg
sbb
stos
mov
std
les
inc
jmp
mov
je
push
sub
arpl
cmp
or
sbb
add
stos
inc
mov
insb
call
es
jl
arpl
add
jmp
mov
cmp
xor
adc
int
inc
je
test
and
test
adc
ljmp
lock
mov
stos
mov
es
mov
test
insl
les
inc
add
push
mov
push
mov
push
jno
push
jmp
dec
push
inc
push
mov
cmc
push
clc
jmp
loop
notb
fldl
xor
jmp
lahf
fimull
jmp
or
fiaddl
loop
test
xor
or
jb
int
fildll
fiaddl
add
xor
mov
sbb
shr
loope
ret
stos
call
push
fidivl
or
test
mov
ds
jmp
mov
les
jo
or
test
mov
mov
aas
sti
incl
mov
les
outsl
jp
in
or
jb
sti
jmp
jb
add
dec
sahf
or
push
ret
adc
lret
fcoms
mov
adc
jmp
sbb
or
ss
repz
pmaddwd
cmp
push
dec
dec
cmp
mov
mov
fmul
jg
aaa
repnz
paddb
push
or
push
inc
dec
cmp
mov
outsb
test
mov
mul
xchg
inc
scas
mov
or
add
sar
mov
push
call
push
mov
mov
lret
repnz
cli
xor
sub
dec
or
subps
xchg
pop
fucomip
cmpb
xchg
xor
enter
and
adc
mov
xchg
xchg
sub
xor
nop
xor
clc
idivb
add
mov
add
jns
jg
lret
arpl
mov
les
adc
fldcw
arpl
fs
pop
adc
rorl
lds
inc
sarl
jae
cmp
push
inc
into
cmp
test
mov
clc
into
jnp
xchg
inc
into
clc
sub
in
repnz
insl
bound
bound
mov
notl
cmp
push
xor
and
ds
inc
into
clc
bound
mov
mov
shl
push
and
ja
jb
mov
clc
ss
dec
bound
orb
cmp
jns
insl
in
jae
add
add
int3
cmp
push
xor
dec
push
add
mov
and
lcall
and
dec
ja
pop
push
stos
iret
jmp
int3
sti
jne
and
or
xor
adc
xor
mov
andl
or
pop
cmp
add
add
push
in
ror
dec
jmp
sti
jne
and
or
mov
les
lret
js
int3
mov
add
fsts
aaa
xchg
loopne
loop
mov
xchg
mov
add
jl
scas
je
int
mov
push
clc
fiaddl
jnp
int
pop
jne
sbb
into
sbb
nop
ss
movsb
adc
out
jno
dec
shlb
cs
shrd
inc
sub
add
lock
add
faddl
lods
popf
cld
out
lret
add
scas
fildl
aaa
inc
mov
lcall
push
arpl
xor
add
xor
test
mov
hlt
arpl
xor
ljmp
xor
aam
js
cld
mov
repnz
fmull
std
iret
sub
xchg
cmp
cmp
fldl
push
iret
cmpsl
sqrtps
out
mov
js
sti
add
mov
xor
aaa
xor
inc
add
rorl
xor
sub
nop
sub
jge
es
icebp
fiadds
or
mov
inc
adc
add
es
out
cli
inc
lret
cltd
insl
push
sub
imul
jbe
jmp
dec
push
lret
push
clc
out
pop
push
push
push
cmp
inc
add
pop
roll
stos
mov
xor
pop
mov
sbb
pop
sbb
sbb
xor
clc
push
cmp
lods
into
int3
mov
sti
lds
sub
jge
ficompl
jb
ss
jb
and
movsl
ss
test
lcall
cld
sti
add
cld
hlt
add
add
adc
clc
into
pop
into
xor
add
jmp
jg
and
or
ds
or
cld
or
pop
cmp
setnp
add
push
dec
inc
call
adc
dec
cmp
addl
xchg
push
int3
dec
mov
adc
pop
inc
or
pop
cmc
lock
lods
adc
dec
xor
jmp
ds
data16
ja
enter
hlt
inc
shl
adc
jg
sbb
jle
sub
add
add
clc
aaa
sub
jns
das
fidivl
push
cmp
repz
or
inc
ret
add
aaa
fistpl
int3
lods
pop
in
sbbb
xchg
insb
xlat
pop
fdivrl
or
ds
fistl
ds
mov
getsec
fildl
pop
inc
jae
push
mov
sbb
xor
xor
xor
inc
xor
dec
or
mov
out
inc
mov
arpl
mov
adc
int3
pop
js
daa
arpl
mov
imul
inc
repz
xor
cmp
cmp
mov
stc
cli
sbb
sub
sub
jg
cmp
xor
add
jle
or
mov
mov
cmp
mov
cmp
mov
call
sbb
cmp
push
flds
and
test
or
bound
mov
fildll
ljmp
add
out
mov
inc
ljmp
stos
xor
sbb
add
mov
push
test
cmp
inc
jmp
imul
dec
outsl
sub
nop
icebp
lret
aaa
lock
or
mov
mov
add
xor
push
jns
mov
stos
fldl
div
clc
mov
cwtl
call
push
enter
icebp
clc
mov
pop
cld
decl
jbe
das
icebp
clc
add
add
mov
add
std
icebp
clc
or
rol
sub
add
push
clc
scas
int
mov
jg
test
push
dec
jge
fidivrl
sti
push
cmp
loopne
cmc
clc
addr16
cmp
cltd
ftst
adc
xor
shlb
adc
test
adc
aaa
xchg
ds
jae
cmp
imul
inc
push
fcomip
mov
jbe
push
lret
jne
sbb
int
pusha
insb
jbe
lods
xchg
fadds
pusha
or
out
mov
jmp
lods
sbb
arpl
lret
std
rcrb
jne
mov
cmpsb
fmuls
lods
mov
pop
out
xor
out
xor
sub
xchg
add
jne
call
xchg
jne
sbb
adc
xor
mov
or
loope
inc
rorl
loopne
add
inc
icebp
mov
inc
pusha
mov
mov
push
cmp
test
imul
mov
sub
divl
stos
ss
sti
push
inc
push
or
das
mov
mov
xor
push
lock
clc
out
hlt
mov
add
insl
mov
add
sub
ss
arpl
mov
jns
jns
cmp
mov
int
add
lret
mov
add
cmp
lods
clc
cmp
fucomi
es
pop
push
pop
sbb
mov
mov
insl
mov
jp
and
loope
stc
jmp
stos
mov
clc
mov
lret
pop
pop
add
adc
mov
data16
push
add
xor
loope
dec
int
int
les
pusha
mov
cmp
and
scas
loope,pt
jo
sbb
push
add
or
sbb
je
pop
lods
adc
mov
sbb
mov
fsubl
fdiv
aad
xchg
ret
push
sub
dec
inc
add
sub
js
clc
mov
dec
push
lret
daa
movsb
stc
mov
jle
fistpl
xchg
fmull
cmp
lcall
clc
push
fisttps
fcoms
xchg
sbb
and
adcl
push
mov
adc
out
clc
pop
aaa
push
add
mul
mull
idiv
pusha
push
mov
add
sahf
out
movsl
stc
jle
jp
add
jle
out
incl
add
sbb
jp,pn
mov
je
push
jp
sub
sub
insb
loopne
cmp
lret
xchg
sbb
out
orl
sbb
inc
jg
jg
push
test
stc
test
fdivrp
dec
out
aas
aaa
mov
mov
fs
adc
das
xor
hlt
clc
xor
xor
jae
sarl
mov
adc
aad
add
es
enter
xchg
or
hlt
es
xchg
mov
popa
aaa
sbb
movl
ret
mov
stos
scas
cmp
xchg
add
adc
xor
das
outsl
cli
xchg
push
repz
ss
mov
popa
xchg
sbb
daa
add
out
out
add
xor
ret
sub
sbb
fs
mov
add
dec
rolb
xor
mov
xor
pop
push
sbb
push
push
fidivrs
clc
sbb
rolb
jmp
xor
mov
and
jno
xor
data16
cld
mov
lods
jl
mov
clc
outsb
stos
xchg
xchg
arpl
lds
mov
clc
ds
add
mov
clc
es
sbb
mov
clc
push
pop
imulb
pushl
add
pop
push
push
push
cmp
add
ss
adcl
inc
or
ss
jecxz
or
fscale
mov
sti
jmp
jl
std
leave
xor
sti
incl
movsb
ljmp
mov
mov
ss
fdivrp
decl
mov
mov
cli
int3
add
pop
mov
sub
je
ja
and
xorl
fiadds
aaa
faddp
test
or
cli
adc
adcb
loop
add
xor
xchg
dec
cmc
or
dec
imul
insl
ss
add
mov
cmpl
mov
in
test
add
cwtl
push
mov
xchg
mov
clc
stc
adcb
push
add
push
push
call
inc
mov
jns
mov
jae
dec
in
stos
xor
dec
jg
in
test
xor
ljmp
shl
add
add
cli
out
shl
add
in
ljmp
shr
fldcw
ljmp
shrb
xor
fdivrl
xor
test
adc
mov
imul
std
cmpsl
mov
gs
insb
rclb
and
aaa
mov
repz
sarb
inc
sahf
es
rolb
xchg
sub
jmp
aaa
mov
xor
or
mov
mov
add
int3
imul
lock
jp
xor
and
xor
in
repnz
mov
mov
mov
add
mov
jmp
sub
add
mov
mov
mov
cmpsb
js
cltd
ret
fs
xor
imul
sahf
mov
imul
jb
sbb
add
add
lahf
movsl
icebp
std
inc
mov
loopne
push
xor
xor
je
int
mov
add
add
xor
icebp
std
add
add
pop
movsb
icebp
std
cmpl
xor
jnp
push
je
dec
jae
lea
add
mov
add
and
add
inc
lea
idiv
push
in
idiv
pop
movsb
pushl
shll
lods
pushl
iret
or
fbld
mov
pushl
out
jns
mov
pushl
jg
or
pop
or
inc
mov
testb
mov
add
addb
inc
and
std
push
mov
dec
mov
orl
aad
mov
testb
push
idiv
mov
sub
aaa
test
inc
mov
insl
fdivrl
daa
std
adc
pop
ret
lcall
add
sub
add
fisttps
mov
imul
dec
cli
dec
jg
xor
repnz
outsl
sub
ljmp
mov
ljmp
mov
jg
idiv
sub
jl
add
mov
insb
imul
pop
pushf
xor
jmp
dec
mov
add
add
xor
jle
xor
add
enter
and
xor
xor
or
add
mov
icebp
hlt
in
mov
ljmp
not
int3
add
jmp
scas
idivb
xor
xchg
scas
mov
outsb
in
mov
shl
mov
add
aaa
add
cld
fldcw
stc
mov
clc
jmp
and
inc
dec
test
in
mov
cld
lcall
test
cmp
add
in
mov
pop
setb
dec
je
or
stc
outsb
dec
packsswb
fidivs
icebp
std
jns
adc
sahf
cmpb
incl
or
aaa
int
pushl
pop
xor
stos
dec
in
jo
push
call
mov
adc
ja
sbb
mov
lret
add
aaa
jbe
mov
lock
in
and
std
pushl
lret
mov
mov
xor
call
cmp
add
or
sti
add
loopne
ss
xchg
push
cli
xor
mov
bound
outsl
int
jle
enter
push
in
sti
mov
xor
or
repz
sub
arpl
xchg
sub
xor
ljmp
sub
xor
ljmp
jecxz
mov
push
aaa
xor
mov
mov
stc
mov
add
mov
ljmp
scas
push
idiv
mov
loop
mov
insl
cli
sbb
rcll
ljmp
xor
add
mov
add
xor
sti
adc
add
mov
jmp
scas
xor
stc
add
or
jp
clc
push
dec
or
clc
jmp
pop
mov
rcl
notb
sub
jmp
mov
idivb
das
xor
adc
mulb
pop
jne
fs
clc
push
cmp
jmp
mov
add
push
mov
jb
xor
xor
outsb
clc
mov
pusha
add
push
ret
mov
add
jne
xor
xor
mov
cli
jmp
xchg
add
mov
fwait
call
movsb
stos
mov
sarl
clc
lcall
cli
adc
xchg
cli
mov
mov
je
test
in
mov
cld
jmp
lret
or
xor
add
loope
test
sarl
js
lcall
add
add
push
idiv
orb
in
jge
stc
ljmp
or
popf
mov
push
sbbl
jo
stc
pusha
push
sbbl
dec
pop
out
call
mov
sbb
jno
jb
mov
hlt
sti
and
add
sbb
out
sbbl
out
stc
mov
daa
mov
add
inc
or
mov
dec
out
stc
loopne
sub
aas
xor
add
mov
and
int3
cmp
scas
insb
and
sahf
mov
add
scas
push
add
xor
jg
mov
cmc
push
xor
add
jp
outsb
mov
mov
pop
and
add
and
dec
mov
cltd
mov
xor
jg
mov
cmc
imulb
in
add
xor
test
mov
stos
aaa
and
add
scas
pusha
imul
mov
push
das
test
movsb
call
jae
out
cmp
int
das
or
mov
inc
bound
insl
ljmp
mov
cmpl
insl
loop
loop
add
loopne
cmp
out
lock
mov
add
xor
pop
inc
mov
add
ret
testb
xchg
jmp
sbb
add
pushl
mov
or
shrb
push
xor
pushf
jae
jmp
aaa
add
arpl
add
jmp
sub
cld
incl
add
mov
repz
cmpsl
cli
lea
js
push
adc
push
jle
mov
or
inc
nop
repz
fldenv
lock
les
clc
movsl
cmpb
mov
std
imul
push
shrb
hlt
stc
aaa
lahf
add
mov
mov
mov
cmpsl
repz
add
arpl
lret
sub
in
xor
stc
test
std
das
divl
inc
adc
xor
mov
jmp
in
jbe
jae
cld
adc
push
pop
repz
mov
adc
add
sbb
add
xchg
inc
xor
mov
lock
and
repz
add
xor
lock
mov
add
pop
repz
mov
lcall
ljmp
scas
fcomip
sbb
add
mov
icebp
scas
pop
sar
shlb
adc
xchg
out
sahf
mov
leave
mov
popf
icebp
mov
ljmp
mov
sbb
outsb
pop
push
aam
mov
cli
mov
gs
dec
inc
aad
add
dec
out
out
ds
xchg
inc
icebp
sbbb
cmpsl
aaa
icebp
mov
in
sub
stos
mov
clc
push
xorb
pop
shrd
push
or
in
out
jle
leave
stos
clc
loope
sub
mov
neg
aaa
outsb
sti
pop
ljmp
xor
jmp
push
aas
test
clc
cmpsb
xor
jb
add
rcll
ja
repnz
test
mov
lods
clc
jbe
mov
insb
inc
stos
or
push
stos
clc
mov
sub
cld
jmp
push
inc
jbe
hlt
jmp
mov
sub
mov
std
and
std
xor
call
in
call
pop
in
std
loope
add
add
fisubs
sbb
lahf
cli
jmp
sahf
mov
jecxz
cli
mov
fwait
cld
call
mov
fsubs
mov
mov
add
repz
movsb
cli
lcall
pop
push
lea
cld
pushl
push
aad
and
out
repz
mov
aaa
icebp
adc
lret
stc
or
cmp
fldl
add
lock
inc
test
cld
icebp
stc
loopne
mov
fisubl
add
mov
icebp
stc
rcrb
je
adc
test
clc
adc
pushf
mov
add
push
out
dec
out
out
js
clc
adc
pushf
dec
push
add
out
daa
out
push
jo
sti
push
sbb
popf
ret
cmp
push
push
cs
arpl
aas
out
mov
popa
sbb
out
push
jl
xchg
and
stos
add
stos
add
stos
add
cmp
add
stos
add
stos
add
sub
lods
sub
and
mov
mov
call
lcall
insl
add
inc
sub
xor
add
xor
ret
add
pop
add
push
pop
pushf
add
insl
stos
clc
push
dec
test
push
xchg
imul
push
mov
mov
mov
outsb
inc
mov
loope
jo
inc
jmp
ljmp
shrl
cmp
arpl
decb
cmp
daa
push
and
and
jno
xchg
push
jno
jns
das
stc
loopne
xor
add
push
sbb
add
xor
pop
push
stos
insl
in
out
in
ljmp
lret
in
add
jmp
add
ss
sbb
mov
xor
push
pop
pop
movsl
jne
lcall
mov
dec
jmp
int3
dec
jmp
int3
push
cwtl
push
mov
and
push
add
adc
add
add
sarb
mov
add
fsin
add
cmp
xchg
fsubrl
mov
fucomp
in
in
push
in
push
mov
es
mov
mov
cmp
add
push
mov
movsb
or
sub
ja
xor
out
cs
or
sub
add
test
daa
rolb
jecxz
pop
hlt
mov
addr16
mov
cld
pushl
push
cld
aaa
pop
std
pushl
push
call
push
sbb
je
push
inc
or
push
or
stc
nop
inc
inc
xorl
test
xor
les
xchg
jmp
ljmp
test
mov
fldl
add
aaa
je
js
sub
mov
test
ljmp
ljmp
inc
stos
add
js
mov
js
mov
jns
aas
adc
aaa
sbb
mov
mov
aas
adc
out
jecxz
inc
ljmp
lock
cpuid
xorl
xchg
xchg
adc
add
inc
inc
jmp
cs
testl
je
dec
adc
push
testl
cmp
add
jo
pushf
clc
fcompl
ds
div
hlt
inc
push
stos
clc
jo
lods
xchg
xor
sub
lock
add
xor
pop
scas
outsl
push
pop
jb
or
sub
dec
out
stos
outsb
aad
and
out
cmp
push
add
mov
mov
jmp
xchg
call
scas
mov
ljmp
daa
in
cmp
je
sub
add
std
test
dec
cmp
adc
cltd
xor
add
jbe
and
orl
stc
adc
pop
xor
add
xor
loop
pusha
into
test
pop
pop
mov
add
adc
loope
inc
lods
jg
shrb
inc
or
xchg
ljmp
sub
aaa
adc
cld
into
mov
pushl
push
inc
add
popa
clc
jl
pop
sub
ljmp
jo
pop
std
push
mov
jb
push
xor
negl
shll
add
aaa
add
add
add
mov
push
mov
pushl
sbb
in
pop
aaa
or
pushf
add
mov
test
jnp
mov
std
xchg
and
sbb
das
add
mov
mov
inc
inc
push
divl
imul
lock
inc
mov
out
dec
imul
pop
sarb
adc
inc
aaa
mov
add
sbb
add
add
je
xor
push
push
divl
js
cmp
shll
mov
out
sbb
inc
aaa
push
sub
repz
imul
and
jnp
cmp
cmp
mov
pop
xchg
xchg
neg
aas
jbe
ja
imul
daa
add
push
sub
test
push
xor
cs
or
stos
add
iret
stos
push
and
hlt
add
mov
inc
stc
add
outsl
jmp
pushf
jle
out
mov
sub
push
sbbl
adc
lcall
std
cmp
dec
sub
inc
scas
outsl
fnsave
inc
add
add
mov
pop
cwtl
dec
bound
jle
rcrb
fidivs
add
fldenv
add
xor
pushl
and
daa
sbb
mov
pop
inc
sub
sbb
fisttps
insl
or
fdivr
mov
movsb
clc
mov
test
rolb
dec
inc
or
inc
or
rorl
cmp
loop
shll
and
add
cwtl
enter
jge
ljmp
je
push
cs
es
sarb
xchg
jns
sbb
inc
cmp
push
sub
push
and
les
cmp
pop
and
push
js
add
jle
jge
cmp
xchg
ja
int3
inc
cmp
inc
jge
and
cmp
cmp
in
xchg
dec
or
sti
push
ror
repz
push
mov
popl
add
pop
hlt
xor
lret
fisttpll
aas
mov
add
mov
mov
aas
sbb
out
inc
mov
add
mov
add
ljmp
clc
loope
jmp
add
lahf
add
mov
punpcklbw
loop
jbe
and
iret
jnp
cmpsb
iret
jae
sbb
cmpsb
pusha
adc
lods
lahf
outsl
mov
sub
adc
inc
jbe
ds
lods
add
mov
sbb
pop
pop
cltd
and
fs
xor
sahf
add
inc
out
mov
add
std
adc
add
jae
pop
pusha
xor
ljmp
xor
lahf
popa
imull
mov
sub
push
mov
mov
jmp
xor
insl
xor
jmp
outsl
adc
add
call
add
in
insb
mov
mov
jge
ret
cmp
add
pop
vmread
addb
loope
or
clc
xor
push
inc
push
push
jmp
andl
jns
mov
adcl
dec
cmp
jne
addr16
fs
aas
ret
jae
dec
lret
mov
xor
jbe
mov
jle
xchg
int
cmp
adc
add
addr16
xchg
sarl
add
mov
int
icebp
mov
add
or
out
incb
mov
data16
mov
fdivrs
addl
add
bnd
int3
imul
jmp
and
rcr
add
or
pop
mov
lea
aaa
adc
add
mov
jo
lds
ret
bsr
mov
xor
inc
xchg
stos
cmpsl
aas
mov
mov
add
xor
or
ficomps
out
icebp
sub
lods
push
mov
lea
xchg
fidivl
add
pusha
ljmp
pushl
and
jmp
lahf
iret
fidivrs
add
xor
inc
mov
packsswb
dec
cltd
xor
test
mov
adc
mov
mov
adc
ljmp
addr16
mov
pop
mov
inc
jge
clc
dec
mov
sahf
pop
imul
mov
mov
jns
mov
add
xchg
add
xchg
cmp
push
jbe
mov
daa
push
sarb
arpl
jmp
divl
jmp
bound
dec
shl
inc
outsb
out
mov
std
in
jae
das
sti
push
loope
dec
pop
mov
mov
pop
pop
lea
clc
pop
dec
test
int3
dec
test
int3
shrl
jle
push
mov
push
xor
push
imull
xor
add
jg
mov
cmp
data16
or
js
test
add
or
stos
inc
dec
adc
and
ja
jecxz
mov
inc
or
push
inc
push
in
cmp
aaa
mov
cmp
aas
shll
add
add
mov
mov
inc
dec
mov
subb
cltd
dec
xor
cmc
test
lds
mov
add
xchg
lret
add
cmpl
mov
sbb
dec
insb
adc
jo
sbb
inc
pop
es
movsb
and
arpl
mov
aaa
scas
dec
movsb
and
mov
adc
cmp
cmp
sub
das
ljmp
xor
test
lcall
aaa
xor
push
jmp
or
adc
inc
aaa
fisttpll
xchg
xchg
test
cmpl
mov
lcall
xlat
inc
ljmp
je
inc
jmp
add
mov
add
xor
push
push
cwtl
jb
sti
mov
or
std
fs
or
mov
lock
loope
mov
je
mov
sub
orb
sub
scas
dec
mov
add
push
insl
adc
call
lds
add
xor
gs
sti
mov
jmp
mov
or
sub
call
mov
cmp
dec
test
mov
mov
adc
push
inc
repz
inc
aas
mov
add
test
cwtl
or
negl
loope
shll
adcb
adc
fidivs
add
fstp
push
lret
imull
or
cmp
add
bndcl
aaa
addb
xor
inc
cmp
in
and
hlt
cld
and
pop
sub
add
add
push
inc
insb
scas
push
cmp
pop
cs
sub
or
jge
or
xlat
cmp
lods
mov
sub
add
fmull
jge
xor
xor
cs
push
lea
pop
mov
xor
fisttps
dec
inc
push
pop
add
add
pop
ss
push
imul
xlat
outsl
ja
aas
cmp
xor
das
mov
repnz
arpl
mov
sbb
fcmovu
push
xchg
arpl
mov
stc
xchg
ljmp
daa
data16
ljmp
xchg
ljmp
in
bound
add
outsl
stos
scas
cmp
pusha
add
fwait
mov
mov
loop
clc
ss
ret
add
dec
hlt
mov
add
mov
repz
cmp
and
pop
push
dec
lock
repz
and
xchg
lods
sub
bound
mov
xor
add
sbb
mov
lods
jo
mov
insl
mov
add
xor
je
mov
dec
sub
mov
jmp
xor
cmp
jns
push
mov
xor
mov
pusha
sbb
cmp
je
mov
add
mov
push
jo
jp
adc
jae
out
pusha
mov
clc
jne
dec
xor
pop
xor
cmp
adc
xchg
xor
add
stos
push
insb
inc
dec
push
add
movsl
push
mov
arpl
mov
xor
loop
cld
mov
clc
or
adc
add
sub
mov
stos
xchg
cwtl
shlb
add
mov
add
mov
inc
mov
jmp
mov
lods
adc
jg
test
clc
js
ret
stc
jo
add
aaa
mov
add
fldenv
test
inc
cmc
andb
std
in
mov
or
pop
fs
ja
push
mov
popf
mov
pop
pop
adc
and
outsl
mov
mov
mov
jge
arpl
inc
aas
lahf
jmp
js
jmp
addr16
ja
mov
mov
out
jmp
xor
add
or
sti
and
push
rclb
mov
push
jge
sti
out
lcall
sub
cmp
xchg
or
cmp
sbb
icebp
into
jmp
inc
scas
or
add
das
xor
dec
mov
xor
add
cli
leave
add
mov
mov
add
add
cmp
jmp
jnp
jmp
std
fwait
sub
xor
mov
outsl
and
mull
mov
mov
adc
xor
mov
dec
je
and
adc
cmp
add
pop
mov
cmp
nop
dec
ds
clc
bound
pop
out
pop
mov
lods
psubsw
mov
clc
jno
cmp
jbe
es
xor
cmp
add
xchg
xchg
fidivs
adc
into
xor
add
popa
test
mov
jle
out
mov
mov
pop
add
jo
xor
add
jbe
jle
out
cmc
mov
inc
incl
add
in
das
jno
outsb
push
inc
clc
pop
inc
arpl
cmpsl
inc
imul
popf
jecxz
add
cli
jge
repnz
aaa
adc
andb
mov
fmuls
test
add
add
cmp
add
dec
mov
xchg
aaa
fwait
add
mov
jo
aaa
fwait
jnp
add
movhps
mov
popa
add
sub
adc
jge
xor
cmp
cs
mov
jne
xchg
add
pop
lods
sahf
jge
daa
mov
repz
sub
cmp
add
je
xor
lock
out
mov
add
jl
add
jge
mov
sbb
cmp
push
in
mov
cmc
jl
cmp
pop
ja
adc
cmp
cmp
mov
or
pop
popa
cmp
mov
loope
out
dec
pop
jl
cmp
add
repz
mov
ljmp
in
and
subl
xor
add
mov
add
rcrl
clc
cs
into
std
call
idivl
mov
lods
jecxz
xor
pop
mov
pop
add
out
aas
jle
repz
popa
imul
shlb
push
test
inc
or
push
cmp
mov
dec
or
imul
mov
cs
or
add
push
or
xchg
jno
sbb
out
je
inc
jle
or
mov
mov
jbe
xor
xor
add
out
call
clc
pop
pop
pop
or
clc
mov
jle
flds
mov
kaddw
or
mov
addl
adc
add
pop
mov
xor
xor
add
cmpb
test
aaa
add
and
je
push
fs
clc
or
aaa
inc
sub
aas
je
and
dec
and
sub
jne
jae
push
aas
and
ret
inc
add
cs
pop
pushf
xor
out
lds
xchg
cmc
inc
lahf
and
stc
test
daa
mov
sub
xor
fdivrp
adcb
adc
pop
adc
push
pusha
stos
add
aaa
fwait
add
call
xor
leave
mov
add
js
mov
add
inc
jnp
rolb
jae
aaa
xor
add
hlt
mov
les
in
aaa
xor
mov
add
frstpm(287
js
sub
add
js
add
js
dec
arpl
push
int3
jmp
jecxz
inc
pop
mov
cwtl
int3
jno
cmpsb
clc
mov
or
sub
ljmp
or
add
out
mov
pop
ret
xor
aam
mov
xor
pop
mov
inc
push
jl
cltd
imulb
ret
sub
cmp
sub
inc
cli
call
bound
test
or
aas
stc
xor
add
and
out
ret
shlb
mov
mov
or
mov
out
cltd
sub
fwait
pop
lret
fsub
insl
mov
fnstsw
lcall
stc
aaa
mov
and
sub
call
inc
sub
jg
push
pop
adcb
rcrl
pop
ret
movsl
repz
pusha
and
inc
into
in
pop
and
add
ss
inc
cmp
jae
xor
mov
pop
jle
mov
or
mov
inc
test
mov
xor
cli
push
jns
sahf
mov
push
xor
add
idiv
pushl
xchg
ja
inc
fwait
add
sbb
lock
jne
xor
in
xchg
mov
cmp
cmp
stos
jbe
imul
int
push
jl
pop
pop
cmp
aaa
fwait
add
mov
ljmp
icebp
and
mov
mov
add
aaa
and
sldt
aaa
fwait
jge
inc
scas
push
jge
das
std
or
xchg
xchg
incb
xor
sti
mov
roll
mov
repz
inc
aas
ss
mov
jl
xor
adc
xor
cltd
xor
sub
ljmp
stc
lea
jmp
sbb
paddd
add
mov
jno
dec
inc
pop
rolb
ss
pop
repnz
cmpsl
repz
add
fxch
scas
xchg
shl
cmp
clc
mov
ljmp
xchg
add
add
add
sbb
xor
fdivs
js
lret
dec
pop
sti
icebp
clc
xor
dec
mov
hlt
sbb
hlt
add
popf
cmc
sbb
add
cld
das
mov
loope
test
cs
dec
or
xor
add
aad
add
xor
push
fucomp
add
inc
loope
jecxz
sub
cmp
cmp
mov
sbb
repz
lds
cmp
in
or
or
test
jle
add
jbe
rclb
xor
pop
loope
orl
add
mov
jg
add
dec
cmc
mov
or
lea
jb
or
pop
jp
rcpps
adc
into
jbe
add
add
inc
or
icebp
sbb
mov
and
aaa
push
mov
mov
add
fwait
add
aaa
pop
fiadds
aas
loope
mov
ja
pop
push
adc
sbb
fwait
add
loop
jl
pop
mov
std
xor
mov
jnp
fwait
in
andl
add
jb
jns
in
inc
jge
cmpb
cltd
lods
jge
cmp
lods
int
xor
add
add
daa
fwait
add
aaa
mov
push
jns
mov
sub
inc
jae
in
sbb
insl
aas
fwait
mov
jnp
xchg
arpl
jmp
jp
sub
test
dec
test
add
imul
add
lods
sub
mov
cli
add
xor
push
repnz
mov
jp
jp
jl
stos
add
jp
ficoml
mov
and
imul
mov
push
jae
orb
jae
add
xor
insl
lcall
in
jg
imul
out
jno
mov
jg
add
out
out
jo
sbb
push
xor
jmp
xor
xor
add
test
add
xor
insl
aad
add
inc
movb
xchg
inc
push
sub
push
and
shl
jo
hlt
jge
pop
orl
add
dec
sbb
push
testl
call
add
xchg
mov
xor
xchg
add
sub
outsb
add
dec
insl
add
sbb
add
or
in
inc
mov
addb
mov
sbb
test
icebp
mov
jle
out
lods
shlb
adc
int3
test
dec
sub
dec
aaa
jg
dec
ja
dec
sbb
ss
jb
ss
in
dec
xchg
mov
mov
lods
dec
insb
xor
test
jle
push
jg
rorb
adc
xor
push
push
hlt
lods
pop
mov
call
jb
adc
mov
sbb
dec
pop
push
cmp
jns
mov
subl
cmp
shll
add
aaa
or
aaa
xor
add
xor
add
aaa
xor
test
adc
inc
sub
inc
and
mov
xchg
push
stos
movsl
cmpsl
mov
xchg
loop
jmp
mov
addr16
or
jae
idivl
jecxz
xor
subl
shl
bound
mov
test
or
mov
xchg
inc
cmp
ljmp
icebp
lea
add
in
push
pop
ljmp
mov
add
ret
repz
shlb
cmp
jecxz
out
addl
xor
pop
jb
push
jle
add
add
xor
inc
test
outsl
xor
lock
and
adc
xor
jge
xor
add
addb
mov
push
jmp
addps
out
das
adc
add
mov
push
mov
mov
cmp
mov
pop
adc
hlt
cmp
and
or
push
mov
mov
clc
sbb
add
inc
hlt
adc
movb
xor
add
stos
push
clc
adc
loop
movsl
mov
mov
inc
hlt
ja
hlt
add
add
mov
in
scas
push
clc
pop
stos
inc
or
in
and
push
mov
lcall
ret
xor
add
xor
je
mov
adc
xor
add
or
aaa
pop
orb
mov
rorl
int
dec
test
das
add
clc
xor
cmp
pop
or
xchg
ds
mov
test
sub
dec
inc
dec
mov
mov
std
xchg
mov
inc
xor
mov
fisttpll
lods
add
add
ljmp
sbb
addb
fs
or
mov
jl
xor
add
mov
fbstp
jle
sarb
mov
out
add
mov
in
pop
jae
mov
sub
xor
add
test
ret
iret
sub
mov
aaa
xor
ret
icebp
ret
jmp
mov
inc
fcmovnu
push
xchg
add
repnz
fldl
ds
push
add
xor
out
filds
aaa
test
loope
stc
inc
jae
das
je
out
add
aas
xor
jmp
sub
test
or
sub
jmp
sub
mov
push
repnz
add
xor
fwait
loop
xor
dec
aaa
or
push
xor
add
js
fidivrs
sub
hlt
bound
loope
mov
or
jnp
and
mov
sbb
add
jnp
leave
cmp
add
in
sbb
inc
push
jo
add
ss
push
aaa
jbe
or
aaa
jle
mov
repnz
jbe
adc
add
outsl
fiadds
dec
into
imul
shrl
add
pop
lret
test
into
mov
add
lcall
lock
add
mov
add
sahf
outsl
fiadds
sbb
sub
add
mov
shll
nop
jne
push
or
xchg
jb
inc
pop
mov
ds
or
add
xlat
mov
in
stc
push
movl
divb
adc
or
mov
bound
xchg
ret
add
add
add
cmp
mov
aaa
mov
add
mov
mov
ss
aaa
mov
jb
push
mov
dec
xchg
jb
push
mov
shlb
mov
mov
jg
dec
dec
lods
and
lods
punpcklwd
add
aas
and
mov
lock
lea
rolb
cmp
inc
sbb
add
mov
or
and
xor
aaa
jecxz
xlat
jg
cs
js
lret
lods
test
sub
scas
xor
test
insb
imul
jae
add
xor
lds
jae,pn
repnz
xlat
test
mov
test
ds
ja
sub
add
xlat
pop
outsb
sub
mov
mov
cli
scas
fbstp
adc
xor
jmp
xor
mov
dec
inc
dec
and
mov
add
jns
lret
mov
hlt
jmp
xor
or
stos
push
dec
cli
clc
mov
ljmp
mov
dec
test
test
add
aad
pop
add
out
inc
jo
aaa
imul
adc
clc
add
inc
testb
and
add
sub
lock
repnz
int3
adc
cli
inc
ss
push
scas
xor
add
fs
cmpsl
inc
dec
dec
cmpsl
icebp
add
xor
xchg
out
push
adc
add
add
sahf
xor
sbb
jno
je
jmp
mov
mov
inc
fdivs
or
add
add
push
aaa
lea
pusha
push
inc
and
add
adc
push
jg
add
aaa
lcall
hlt
adc
jle
sarl
mov
adc
add
mov
add
xchg
loope
mov
test
addl
jg
add
aaa
cmp
scas
ret
jecxz
lods
xchg
outsl
dec
movsl
or
pop
int3
mov
or
mov
add
bnd
xor
test
fildll
cmp
xor
mov
xchg
xor
aaa
cmp
jg
sub
add
mov
insb
js
ljmp
dec
rdtsc
ret
sbb
jmp
cltd
xor
and
adc
fimull
push
mov
outsl
push
mov
in
shrl
push
test
inc
adc
or
insl
jae
add
mov
jmp
inc
js
fdivp
in
jmp
stos
call
jno
loope
clc
push
inc
push
sub
mov
jnp
fldenv
mov
pop
sub
out
movsl
add
xor
mov
dec
fimuls
push
jno
xorb
inc
lea
jb
inc
xor
add
mov
adc
pop
orb
jne
cmp
and
add
aaa
add
or
add
xlat
pop
sahf
aaa
or
adc
stc
aam
fnsave
cmp
xlat
add
cmp
rcl
gs
outsb
aas
jbe
dec
lock
hlt
divb
add
call
cld
push
ss
sbb
add
pop
cmp
dec
ret
sarl
mov
mov
out
push
clc
add
adc
sarb
aaa
ficomps
repnz
stc
cwtl
sub
mov
andl
in
pop
add
lods
cltd
sbb
js
dec
fs
and
outsl
popa
mov
xor
push
dec
in
pop
addl
push
mov
jo
sbb
jae
xlat
dec
fs
sbb
inc
add
fcmove
mov
mov
adc
mov
or
aaa
cmp
add
xchg
orb
mov
pop
inc
and
insb
lcall
xchg
and
ljmp
stc
cltd
push
fnstenv
add
push
xor
xchg
jno
jg
sub
mov
in
mov
mov
inc
jnp
add
add
daa
ss
add
xchg
jns
or
xor
jl
fdivrs
jg
add
push
xchg
ss
xor
test
dec
jno
pushl
add
push
in
enter
mov
cli
xor
add
mov
jae
fnsave
add
jo
mov
xor
jmp
jl
inc
add
add
add
pusha
sub
mov
mov
mov
in
push
in
in
pop
and
add
stos
repz
inc
mov
inc
mov
xor
popa
pop
mov
xor
imul
mov
cltd
insl
add
add
hlt
rcpps
add
fidivrs
in
add
pop
movsb
cli
jmp
adc
add
xchg
ret
inc
add
sahf
xor
add
pop
mov
inc
lock
dec
add
jb
or
cmpsl
cs
loopne
jge
fstpl
mov
mov
sahf
dec
cld
xchg
scas
loopne
das
dec
inc
lea
add
fcomip
lcall
xor
loopne
das
inc
mov
dec
and
ljmp
ficoms
add
out
jecxz
hlt
sbb
xor
negl
or
cmpb
add
inc
aam
out
mov
ljmp
in
xchg
enter
add
fs
dec
pop
xchg
jecxz
test
dec
imul
adc
jl
mov
aad
mov
mov
inc
inc
fwait
pushf
or
std
testl
mov
add
xor
aaa
mov
add
cmpsb
in
jp
orl
lret
cmpsb
popf
jl
pop
fbstp
xor
add
push
jae
fwait
mov
sti
mov
push
cmp
sbb
xchg
je
ds
mov
adc
jne
xor
pop
cmpsb
lods
shlb
add
stc
jnp
js
add
mov
out
clc
xor
inc
xor
rcrb
sbb
mov
sti
inc
gs
loopne
scas
xor
jmp
xor
test
outsb
out
inc
add
mov
xor
xor
ljmp
out
lock
test
xor
or
xor
or
add
out
loope
std
cli
dec
xor
jmp
mov
insl
cmpsb
dec
pop
je
fsts
add
jo
fidivrs
cmp
ljmp
add
pop
jno
dec
jp
dec
push
fdiv
decl
cmp
loopne
cmpsl
dec
and
int3
clc
mov
sub
push
scas
push
add
add
jo
push
into
aaa
add
sahf
aaa
add
out
cs
ret
and
in
cld
xchg
push
in
cmp
and
fstpl
cmc
add
aaa
or
aad
loopne
daa
pop
inc
int
or
not
idiv
aaa
pop
add
pop
cmp
inc
movsl
dec
push
sahf
js
mov
mov
push
push
sti
mov
add
jecxz
hlt
sub
xor
lahf
int3
cld
andb
mov
aam
sub
mov
pop
cmp
mov
pop
add
test
ja
xchg
movsb
fistpll
sbb
enter
test
in
mov
sub
imul
or
sub
jb
cld
aaa
mov
xor
ljmp
jle
test
jle
mov
cmp
imul
lret
mov
fbstp
xor
ljmp
mov
sti
mov
jne
fwait
mov
arpl
addr16
push
les
xor
iret
pop
mov
sub
add
jo
add
mov
out
add
jo
pop
mov
push
sbb
push
inc
ret
cmp
idivl
shrb
push
pop
jmp
xor
mov
mov
mov
and
ss
add
xor
inc
xor
insl
sub
pop
je
mov
mov
jmp
xor
aaa
xor
jne
jle
mov
mov
ljmp
push
mov
xor
aam
push
dec
or
aas
movsl
arpl
jbe
ds
ja
sbb
xor
test
sub
dec
loopne
and
mov
sub
shll
jb
fadd
sbb
xor
setae
idiv
push
jmp
jae
add
xor
push
es
sub
add
fs
mov
movsb
orb
dec
inc
daa
push
aad
pop
and
or
add
ja
inc
sub
inc
hlt
adc
and
inc
hlt
aaa
jb
xchg
dec
jne
jae
mov
dec
not
cs
enter
test
jns
aaa
sarb
aam
mov
test
add
jne
ja
cmp
scas
pop
xchg
jae
ficompl
inc
aaa
pop
cmpl
cmp
add
mov
rcrb
pop
out
subl
xchg
xchg
popf
jl
testl
add
aaa
add
decl
pop
out
add
add
mov
and
fisttpl
imul
xor
jg
xor
ds
in
cmpsb
in
arpl
lods
xor
jno
das
xor
sbbb
leave
fidivl
jae
aas
xor
adc
out
int
je
pop
ret
imul
cmp
mov
mov
push
and
ljmp
gs
mov
sbb
hlt
arpl
xchg
mov
and
add
shll
bound
movsl
mov
jnp
or
xor
jmp
xor
dec
sbb
jae
inc
shll
mov
je
add
filds
mov
arpl
out
aas
xor
jmp
add
test
inc
xor
gs
add
mov
and
aad
jne
xor
jge
cmp
out
add
negl
scas
cmp
and
dec
push
mov
xor
jmp
or
sbb
pop
sub
add
ds
cli
incl
dec
pop
aad
pop
ret
jle
fisttpll
cmpsl
pop
add
adc
dec
adcb
jno
and
pop
cmp
add
idiv
fidivs
pop
mov
fs
test
add
aaa
add
sbb
dec
aaa
fiadds
fldenv
fscale
adc
jge
aaa
cmc
jp
inc
cs
in
adc
xor
xchg
push
jnp
and
adc
sbb
sub
jmp
test
sub
pop
aas
xor
sub
shrb
add
jno
push
cld
or
pop
lods
ja
mov
aas
dec
rcrb
or
inc
dec
dec
or
adc
imul
inc
out
int
mov
jl
xor
add
out
mov
ss
jbe
aaa
xor
adc
cmp
iret
clc
add
pusha
ljmp
scas
filds
jbe
icebp
add
xor
xchg
xor
div
icebp
add
ljmp
imul
mov
xchg
sub
sbb
xorl
ljmp
fistpll
sbb
mov
pop
xor
out
rol
cmc
fsubs
jle
pop
clc
mov
cld
push
aad
pop
ret
mov
and
push
pop
bound
pushf
mull
xchg
pop
pop
jb
std
ret
mov
jle
and
push
dec
and
mov
sbb
and
mov
and
xor
and
add
and
clc
adc
add
and
jl
pop
add
out
add
add
pop
add
fcomps
add
lea
add
xor
add
xchg
add
mov
add
jp
add
xor
add
jnp
add
xor
add
xor
add
mov
push
xchg
inc
or
push
xor
shlb
dec
add
xor
inc
xor
jae
or
inc
sub
enter
jle
fidivl
dec
and
sbb
shll
add
dec
int
or
mov
stc
cwtl
incb
jne
add
jnp
enter
enter
enter
test
mov
js
push
lods
adc
jmp
dec
dec
add
add
cmp
cvtps2pi
std
lds
dec
adc
mov
mov
aaa
dec
add
mov
mov
aaa
dec
adc
mov
mov
aaa
dec
mov
imulb
sub
test
add
adc
or
adc
inc
xor
fwait
inc
jecxz
mov
pop
ljmp
xor
inc
sbbb
add
test
adc
xor
pop
enter
inc
push
sub
push
aaa
rol
cmp
les
inc
test
xor
lcall
mov
outsb
fmul
pop
xchg
fidivl
or
push
mov
xor
mov
insb
sbb
add
bound
mov
xor
add
dec
jmp
gs
xor
add
inc
mov
add
xor
add
inc
mov
add
xor
add
inc
mov
add
xor
add
inc
mov
add
xor
add
inc
mov
add
xor
lock
shlb
lock
lock
inc
cvtdq2ps
pushl
mov
loope
mov
imul
add
popa
or
jle
mov
call
mov
enter
jbe
dec
das
ja
dec
xor
mov
or
add
add
add
add
push
sysexit
lock
sub
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
pusha
add
xor
add
divl
add
divl
and
stc
jl
or
pop
pop
mov
xor
pop
xor
in
cmp
dec
xlat
sub
sub
lcall
out
push
test
or
pop
ja
mov
push
fidivrl
xor
cmp
add
daa
ljmp
bound
addl
xor
lds
rorb
movsl
inc
aaa
xor
lods
das
daa
fidivs
adc
insb
movsl
jp
add
adc
imul
clc
jmp
aaa
scas
clc
sbb
scas
shrl
sti
dec
or
pop
add
xor
loop
xor
add
sbb
add
je
xor
aas
cmp
sub
scas
fldcw
das
cmp
sub
adc
xor
mov
es
mov
ret
push
clc
jmp
mov
push
test
mov
or
xor
add
cltd
in
add
addb
cli
add
xor
sub
xorb
add
xchg
mov
fld
add
das
add
dec
xchg
cli
add
xor
adc
pop
and
jg
popf
dec
cmp
push
cwtl
mov
popf
xchg
push
cmp
jae
add
mov
test
push
cmp
sub
jne
adc
mov
std
test
cmp
aad
mov
lcall
add
push
loope
sub
mov
cmpsb
sbb
sbb
add
adc
lcall
inc
or
test
mov
in
int3
popf
stc
aaa
dec
add
dec
clc
sti
and
sbb
dec
add
add
outsl
sbb
or
movsl
sbb
sbb
std
and
xorl
out
test
js
add
add
mov
lea
mov
cwtl
add
xor
aam
mov
arpl
xor
loop
push
xor
add
dec
sti
pop
hlt
jmp
inc
pushl
arpl
sub
fidivs
ljmp
hlt
jmp
add
and
js
or
test
and
js
adc
ljmp
or
mov
push
ljmp
adc
test
pushf
sub
jmp
dec
push
add
xchg
in
loope
xor
push
xor
std
jnp
or
jns
jle
lahf
pop
clc
push
xor
mov
add
scas
clc
cli
xor
shl
pop
ret
fistps
loopne
sbb
hlt
xor
aad
add
xor
xor
jmp
jl
xor
jmp
pop
xor
cmp
pop
sub
mov
add
stos
ret
sbb
seto
pop
xor
xlat
lcall
xor
roll
add
add
pop
inc
push
lock
jne
cmpsb
rcrl
imul
cmp
test
sub
rolb
add
adc
xchg
mov
add
sti
push
push
push
sbb
push
xor
dec
cmp
repnz
add
push
jae
inc
sub
add
push
jp
fsubrs
cli
cld
incl
add
sarb
je
repz
lods
repnz
mov
aam
and
sub
ljmp
sbb
xchg
icebp
test
loopne
ss
add
add
scas
and
sbb
std
mov
les
and
pop
inc
pop
outsl
ret
push
dec
mov
mov
inc
aaa
jle
or
add
xor
inc
dec
and
add
pop
ljmp
xor
add
mov
push
insb
mov
dec
cmp
cmpsb
filds
push
mov
jae
pop
cmp
push
adc
xchg
mov
dec
loopne
inc
xchg
int3
xor
sbb
jmp
push
sti
pop
and
aad
jnp
je
out
add
ss
cld
inc
pop
adcl
push
ljmp
jae
orl
mov
add
cmp
jmp
pop
or
and
mov
hlt
mov
or
push
les
cmp
jns
xchg
jbe
mov
sbb
cmp
add
sahf
and
bound
hlt
mov
rcrb
mov
dec
mov
iret
sub
mov
dec
mov
lds
add
jge
mov
shlb
pop
jns
mov
test
insw
push
xorb
xorl
pop
jae
jno
outsl
mov
pusha
insl
ja
fs
sbb
mov
push
insb
add
push
push
outsl
mov
and
push
insb
and
es
popa
mov
sub
pop
jno
addr16
gs
daa
cmp
or
lea
int3
mov
int3
pop
mov
mov
iret
xor
push
dec
sbb
add
outsb
lcall
add
rep
fdivl
pop
dec
sbb
pop
add
mov
or
out
ja
add
jmp
add
sahf
insl
add
aaa
loopne
and
dec
lcall
test
repz
add
aaa
mov
add
fs
add
mov
pop
jnp
dec
add
scas
aaa
pop
xor
xrelease
int3
add
jbe
data16
sub
add
jb
aas
mov
ljmp
jp
dec
ret
mov
aaa
xor
mov
xor
jl
mov
xlat
pop
dec
xchg
pop
cmp
rclb
das
mov
ljmp
xor
int
xor
ja
pop
mov
ljmp
daa
ja
das
sub
inc
and
jecxz
pop
add
add
ljmp
sub
jmp
mov
cmp
jmp
xor
mov
ja
hlt
mov
lret
divl
shlb
sbb
mov
or
dec
dec
clc
xchg
int
push
sub
scas
mov
cmp
mov
mov
add
testl
testl
push
in
inc
mov
jb
cmp
cmp
mov
pusha
pop
jo
add
cmp
mov
cwtl
jle
push
jle
fisubs
mov
fwait
or
mov
leave
xor
mov
orb
leave
cmp
mov
orb
enter
xor
jmp
enter
xor
dec
clc
call
enter
xor
cmpsb
sbb
mov
add
xor
neg
iret
pop
fcoms
sarb
xor
add
push
ja
ss
add
ret
ret
aaa
pop
jnp
ret
rol
rcrb
xor
jl
mov
shll
hlt
lods
dec
cmc
mov
jmp
jp
testl
scas
outsl
mov
sahf
jno
sub
roll
in
cmc
mov
inc
add
add
lret
push
jns
or
jp
pop
fdivs
xor
imulb
sub
test
add
insl
cmc
mov
xor
add
popa
out
push
ss
inc
xor
js
dec
jae
iret
mov
cwtl
xor
mov
add
cs
add
xor
dec
das
or
add
mov
push
incl
repz
xor
ja
pop
jecxz
aaa
sar
fwait
adc
add
xor
cltd
popa
cld
mov
xchg
aad
pop
cmp
lea
mov
xor
add
sti
aad
sub
mov
or
xorl
mov
sbb
fisttps
add
jb
in
fs
inc
xchg
xor
pushf
jmp
std
inc
clc
sbb
enter
loopne
outsl
pop
js
popf
xorl
mov
sti
cmc
fwait
scas
fcmovnb
int
cld
bound
or
mov
dec
clc
jbe
enter
lods
mov
cs
test
cmp
mov
mov
fisttps
add
vcvtps2pd
cmp
inc
push
xor
out
mov
dec
mov
int3
mov
mov
addb
ds
pop
pop
std
test
xor
divb
xor
cmp
mov
lds
add
jnp
in
or
add
dec
mov
mov
sub
ret
adcb
mov
add
xor
ret
je
inc
clc
mov
stc
mov
incl
mov
idiv
lock
pop
pop
bound
in
stc
mov
add
jl
mov
aam
add
pop
outsl
outsb
xor
repz
add
mov
pop
add
mov
add
add
pop
outsl
outsl
jb
aaa
cld
xor
das
hlt
ljmp
pop
je
mov
int3
jae
jne
mov
jmp
xchg
jg,pt
add
and
xchg
push
dec
decl
jns
daa
aas
pushl
ljmp
lea
xor
fbstp
ljmp
clc
mov
fldl
aaa
mov
add
sub
dec
test
ljmp
aaa
dec
enter
add
mov
jne
in
mov
in
cmp
xchg
ds
jmp
adc
pop
aaa
push
pop
aaa
xor
jbe
adc
add
xor
out
xchg
jb
mov
jmp
xor
sub
add
movsb
add
je
add
push
mov
xchg
aam
jns
and
jmp
loope
clc
jb
and
ffree
test
jb
and
sbb
xor
fscale
inc
clc
jmp
pop
jo
lcall
mov
ffree
faddl
aam
add
fbstp
add
arpl
in
and
clc
lcall
mov
and
or
xor
fidivs
jne,pn
aas
test
mov
xor
mov
and
lret
mov
add
loope
imul
xchg
xor
mov
arpl
mov
hlt
fsubl
add
xor
push
cmpb
push
in
test
out
cld
push
and
or
cmp
cmpsl
in
xor
out
mov
pop
jnp
or
dec
fcmovb
xchg
sub
push
sub
pop
add
mov
xchg
inc
adc
pop
cltd
pop
pop
rorb
dec
inc
add
pop
stos
xchg
test
add
inc
add
xor
test
nop
jno
xchg
scas
out
mov
add
js
in
pushl
fdecstp
mov
mov
adc
cmpsl
xchg
add
mov
dec
jns
sub
aas
adc
lock
sub
add
jl
add
lods
out
mov
sub
dec
scas
mov
movsb
mov
out
das
scas
jp
and
push
jmp
fptan
ficompl
jbe
cs
scas
xor
dec
and
fidivl
mov
roll
push
inc
clc
ljmp
add
iret
stos
mov
xor
test
mov
stc
out
loopne
xchg
rcl
or
add
pop
pop
loopne
jl
jmp
jle
mov
in
in
ds
jecxz
mov
and
or
sub
add
test
es
pop
jp
mov
stos
mov
pop
pusha
lret
jnp
add
add
fldenv
push
adcb
dec
mov
pop
add
lcall
adc
pop
ss
inc
and
add
mov
mov
push
ss
stc
cmpsl
arpl
mov
add
jle
es
dec
xor
add
fidivrl
mov
in
das
xchg
mov
push
sbb
andb
or
xchg
mov
adc
insl
add
mov
aaa
xchg
mov
add
adc
jge
push
jmp
or
xchg
lahf
sbb
aaa
fdivr
rcl
mov
in
jns
mov
xchg
push
imul
mov
add
xor
jl
scas
negb
add
mov
dec
jle
xor
loopne
subb
aad
les
add
mov
dec
aad
mov
cmp
mov
push
jmp
sbb
xor
int3
xor
sbb
xor
decl
pop
mov
adc
aad
aas
test
sub
add
stos
cmpb
ljmp
movsb
bound
aaa
xor
inc
or
add
add
xor
mov
aaa
or
mov
mov
outsl
pop
jmp
xor
mov
push
fldcw
add
sahf
ss
jno
xor
jb
and
jmp
jns
add
pop
mov
or
xchg
jmp
stos
movsb
mov
xor
mov
fdivrs
push
cmc
test
xor
add
call
popf
cmp
loopne
add
stos
loop
xchg
xor
leave
push
mov
add
test
add
into
xor
add
out
mov
and
jmp
fdivs
add
xchg
inc
dec
mov
or
insl
in
xchg
mov
jle
pop
lods
cmpl
jle
mov
aas
adc
into
adcb
pop
test
or
push
stos
jl
pop
pop
adc
decb
mov
ret
xchg
mov
xchg
cmpb
mov
mov
jbe
leave
mov
mov
aaa
sbb
in
clc
jmp
test
or
roll
add
aaa
mov
divl
add
mov
mov
aaa
dec
add
cli
mov
imul
add
aaa
mov
idivl
dec
add
mov
je
push
subb
jp
inc
mov
push
lods
lock
add
dec
int3
sti
lahf
mov
xchg
enter
mov
aaa
dec
roll
or
cld
pushl
dec
xor
mov
fmulp
add
aad
lds
scas
xor
mov
gs
xchg
ljmp
sub
and
cmc
mov
sub
mov
inc
push
aaa
xor
fldl
sub
lcall
jg
add
jo
and
rclb
lock
and
add
js
add
add
scas
movsl
btsl
orb
mov
xchg
scas
sbb
add
into
inc
lods
add
es
mov
jl
jmp
xor
orl
xor
ja
scas
out
or
aas
mov
inc
mov
pop
and
call
dec
jb
lcall
mov
xor
pop
pusha
mov
psubsw
add
adc
out
pop
loopne
jl
jmp
mov
xor
lods
inc
mov
insl
inc
xor
push
cmp
scas
arpl
xchg
mov
add
scas
inc
cld
mov
xchg
mov
shrb
xchg
xor
add
and
xchg
cmpsl
and
adc
pop
sub
ljmp
push
sahf
ss
pop
add
cmpb
aam
repnz
mov
jl
add
jg
es
mov
arpl
push
incl
int
cld
mov
jnp
add
add
cmp
and
add
xchg
scas
mov
push
ss
sbb
getsec
fsts
or
dec
add
lods
sbb
int3
aad
lret
inc
xchg
mov
add
mov
mov
push
aas
ret
push
adc
or
loope
adc
dec
xchg
roll
mov
fists
add
fcoml
es
push
call
aaa
dec
ficoml
mov
outsl
bound
dec
test
dec
sub
mov
xchg
mov
jno
ficomps
and
add
add
xor
out
cmpl
loope
mov
xor
inc
iret
out
jns
lods
adc
mov
xor
mov
out
jnp
cmp
fnstsw
cmpsb
dec
jae
xor
adc
lods
sbb
shrl
movsb
dec
adc
xor
jg
xor
gs
xor
iret
inc
lods
bound
ljmp
pushf
add
xor
or
push
inc
jo
cmp
mov
mov
xor
mov
xor
out
cmpsl
loopne
jmp
and
jmp
stc
aas
cmp
mov
mov
push
rcl
lret
mov
cmp
les
xor
push
std
mov
xor
cmc
and
in
or
add
jg
jmp
stos
fcomi
popa
inc
sub
add
mov
push
lret
mov
add
mov
jg
mov
test
add
lcall
mov
out
mov
leave
aaa
dec
idiv
fisubrs
mov
jle
cmp
roll
clc
inc
pop
add
sahf
or
mov
add
jge
xchg
stc
mov
xchg
adc
std
decl
jecxz
mov
sub
push
js
add
mov
es
aad
adc
xor
cli
inc
dec
sub
pop
add
rol
adc
mov
mov
aaa
lods
adc
xlat
int3
or
leave
test
fstpt
xchg
add
xor
mov
dec
add
in
push
mov
leave
imull
dec
mov
arpl
sti
scas
clc
insb
sbbl
sub
jecxz
testl
add
jb
xor
test
arpl
cmp
loopne
out
sbb
bound
add
and
inc
xor
cmpb
arpl
inc
lods
fiadds
mov
xor
ret
fisubrl
repnz
mov
xchg
fcmovu
mov
xor
or
test
aaa
xor
dec
mov
pop
push
aaa
xor
mov
aaa
imul
sub
lods
xchg
rcrl
les
add
mov
add
scas
cwtl
pop
in
inc
jmp
jecxz
mov
mov
xor
fnstenv
add
push
jne
dec
stc
jbe
scas
xchg
mov
mov
xchg
inc
sub
out
int3
mov
cmp
mov
or
xchg
int3
jmp
jmp
lods
push
adc
lock
jmp
add
lds
pop
add
bound
xchg
ljmp
inc
mov
add
aaa
mov
adc
add
push
push
aaa
test
mov
jle
adc
inc
push
mov
or
inc
mov
movsb
div
mov
adc
fsubrp
adc
fidivs
push
notl
add
out
in
popf
jle
xchg
sbb
scas
mov
add
mov
cwtl
mov
dec
dec
mov
movsl
inc
adc
in
cwtl
mov
mov
and
sbb
cmpsb
test
or
int3
dec
cli
je
out
xor
mov
fdivr
xchg
scas
sbb
aaa
jbe
in
jmp
cmpsl
xchg
sbb
aaa
push
inc
xchg
add
xchg
ret
mov
add
sub
cmp
xor
add
scas
iret
sbb
aaa
leave
adc
aaa
sbb
out
scas
push
cmc
xor
jno
or
scas
add
aaa
sbb
test
or
mov
lcall
xor
roll
stos
and
inc
addr16
and
loope
mov
bnd
ljmp
movsb
jae
inc
out
jle
out
iret
add
xor
ds
add
xlat
cmp
xchg
stos
dec
ljmp
xor
add
xor
sarl
xor
jge
mov
pop
aaa
xor
push
xchg
nop
inc
sti
loopne
add
xor
add
cld
mov
or
xor
xor
mov
add
mov
sbb
inc
xor
idivl
hlt
test
xor
jmp
jno
je
push
mov
jmp
je
rolb
sub
scas
bound
add
xor
sub
jmp
cmp
add
xor
and
sbb
jmp
xor
xchg
dec
mov
add
test
add
iret
aaa
cmp
lahf
xor
jl
push
add
mov
int3
mov
jae
mov
jge
shll
and
shll
outsl
outsl
stos
mov
push
xor
ja
jp
and
cwtl
mov
sahf
inc
jle
push
stos
adc
mov
xor
add
add
dec
jle
scas
push
adc
sarb
aaa
sub
inc
dec
dec
bound
sbb
add
inc
int3
imul
int3
and
int3
jnp
jl
add
jl
lods
stos
push
mov
push
shll
add
aaa
pop
ret
das
jnp
das
xchg
adc
sbb
jne
add
cmc
xchg
cs
dec
mov
sti
test
inc
dec
mov
push
addr16
sub
sti
test
es
mov
inc
inc
xlat
ret
inc
lea
sub
mov
sti
mov
bound
xor
test
or
inc
jae
xchg
aas
imul
aas
addl
aas
jnp
adc
mov
and
mov
mov
sbb
mov
jmp
xchg
xor
inc
std
mov
ret
jae
out
aam
sbb
cmpsl
xchg
add
add
hlt
xchg
mov
sbb
clc
dec
sbb
mov
dec
pop
ja
xorl
test
cmp
loope
jae
bound
hlt
idivl
int3
js
scas
mov
xor
jmp
inc
xor
adc
xor
test
sub
dec
clc
outsl
jmp
add
jg
push
std
xor
mov
mov
xor
cmp
add
lods
leave
jmp
fs
push
or
add
add
inc
clc
or
mov
mov
inc
xorl
add
mov
adc
adc
pop
lods
xchg
push
bound
add
dec
aaa
scas
add
add
inc
add
xor
dec
aaa
add
test
adc
push
mov
je
sub
xchg
fsts
push
aaa
idivl
scas
dec
cld
add
mov
add
aaa
movsb
sbb
mov
add
js
iret
test
mov
add
sahf
push
inc
lahf
xchg
ret
sbb
push
sbb
adcl
add
ret
lcall
xlat
adc
adcl
add
cmpsb
inc
xchg
mov
ljmp
add
add
mov
insb
inc
filds
add
cmpsb
jnp
and
add
mov
sbb
xchg
mov
add
mov
ljmp
sub
push
sub
bound
mov
inc
ljmp
xor
xchg
add
loop,pt
testb
mov
mov
jne
add
add
loope
loope
add
mov
jcxz
xor
shlb
arpl
jbe
pop
stc
pop
push
push
lock
fldl
out
js
sub
push
mov
add
jg
jmp
loope
clc
bound
xchg
xor
mov
idivb
cmc
pop
addr16
xor
mov
push
sub
sbb
dec
clc
les
aas
clc
les
cli
and
loope
mov
xor
dec
sbbl
xor
outsl
ret
xor
jmp
sahf
sub
add
add
push
mov
adc
push
xor
jmp
lahf
inc
add
out
mov
fmull
add
test
ficoms
dec
xor
in
mov
mull
iret
mov
xor
add
pusha
or
mov
lcall
je
fisttpll
jl
rcr
aaa
adc
test
ret
push
lahf
inc
inc
pop
xor
pop
pop
mov
add
sbb
test
sbb
pop
std
add
mov
ret
push
ss
pushf
adc
sbb
xor
repz
xor
jmp
je
mov
jo
add
lcall
mov
out
int3
xchg
mov
xchg
mov
rcll
and
test
mull
jnp
inc
xchg
int
mov
jo
add
cmpsb
mov
or
cltd
lret
jp
cli
and
jno
fstpt
ljmp
in
push
aaa
xor
lret
inc
cmp
and
mov
andnps
or
nop
xor
mov
ljmp
les
push
aaa
xor
sarl
jmp
data16
in
sar
xchg
aaa
jnp
lods
aaa
jae
movsl
aaa
imul
jnp
add
sbb
inc
cmp
cmp
mov
ljmp
xor
add
cmpsb
sbb
mov
testb
loope
mov
aas
or
xor
push
inc
leave
sub
inc
jg
sbb
xor
push
inc
sbb
out
or
sbb
pop
push
sub
dec
mov
test
mov
or
or
mov
pop
lret
push
lcall
mov
cmc
mov
jle
addr16
mov
adcl
ret
sub
xor
test
clc
cmpsl
add
dec
and
test
add
in
or
stos
mov
push
cmp
add
or
pushf
add
add
arpl
add
push
rclb
add
sub
add
incl
loop
mov
xor
add
and
mov
push
inc
test
and
arpl
fs
repz
mov
arpl
dec
jl
data16
fisubs
ds
lods
adc
or
outsb
mov
jb
jns
dec
es
add
lods
stos
add
jbe
rorl
jno
clc
jbe
ds
mov
aaa
or
sbb
les
xor
add
or
add
mov
push
xor
lods
fsubr
int3
xchg
xchg
rcll
adc
mov
roll
push
aas
xchg
add
pusha
xor
clc
das
ljmp
ljmp
lods
mov
xor
lret
fldcw
lcall
add
lcall
adc
xlat
lcall
ljmp
mov
lret
sub
je
mov
or
pop
scas
and
aas
lods
lds
bound
rcrl
add
jl
push
xor
sbb
adc
arpl
adc
aaa
push
stos
lock
les
xor
sbb
jl
std
mov
cmp
js
les
push
lock
xor
jmp
js
jmp
cmpsl
js
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
dec
cmp
add
add
mov
add
mov
sub
add
xor
add
adc
pushl
xchg
clc
jmp
xchg
add
xchg
xchg
or
jno
sbb
popa
xchg
cmp
jno
jp
add
jno
cli
add
xchg
cli
add
xchg
cli
add
xchg
cli
pop
adc
cli
pop
and
cli
jg
xchg
cli
dec
fstl
add
insb
and
mov
sbb
fldl
mov
paddw
mov
add
repz
xchg
cmp
test
xor
test
cld
test
add
jb
gs
or
add
or
fcomi
pop
xchg
add
icebp
repz
xchg
movsb
shlb
movsb
enter
add
aaa
or
fs
mov
or
mov
inc
sbb
test
xchg
shrl
lods
in
xchg
ja
add
sbb
pop
xor
fcoms
rclb
dec
push
push
imul
mov
inc
xor
add
add
cmc
pop
loopne
inc
mov
inc
leave
fcoms
popa
fcoms
cmp
cmc
ljmp
hlt
arpl
jne
mov
cmp
insb
mov
push
and
xor
push
mov
movsl
ret
mov
sbbl
pop
ljmp
popa
cmp
je
sub
shll
add
jg
xor
mov
and
mov
pop
push
mov
notb
adc
push
xor
add
add
mov
outsb
jmp
das
shr
rolb
ss
jmp
adc
inc
jmp
fiadds
nop
imul
pop
jl
testb
pop
mov
or
add
adc
mov
rorl
out
in
je
sbb
dec
inc
stos
add
and
cltd
mov
add
xor
je
and
les
add
sahf
stos
rol
je
jle
mov
or
nop
or
shlb
stos
fbstp
sahf
adc
mov
jge
out
insb
mov
sarl
jb
in
or
add
js
sbb
or
dec
adc
adc
out
fsubl
add
add
or
arpl
dec
lods
rol
and
jle
aaa
divl
int
xchg
inc
test
and
adcb
rorb
mov
test
lds
push
insb
xchg
or
cmp
jb
data16
add
xchg
add
lock
test
mov
or
cmpsb
enter
dec
and
mov
rolb
xchg
add
mov
or
pop
sub
cld
push
stc
shlb
imul
push
sbb
ret
push
iret
push
cmp
add
or
les
repz
rorl
pop
add
jle
add
mov
push
aaa
xor
add
push
imul
pop
hlt
bound
leave
or
pop
sbb
das
mov
push
aaa
xor
add
pop
insl
lret
inc
sbb
bound
mov
add
sbb
mov
decb
out
jb
adc
add
mov
pop
xor
ljmp
outsb
lds
flds
sbb
add
fldcw
pop
fpatan
inc
mov
sub
or
sub
loope
mov
push
or
and
in
outsb
adc
cmp
mov
pop
cmp
test
dec
sub
jmp
pop
mov
push
cmp
mov
mov
or
aad
and
pop
mov
fldcw
dec
fpatan
test
add
and
sub
enter
insb
and
xchg
and
inc
add
fisttpll
mov
sbb
outsb
ret
push
and
push
and
mov
popl
dec
jb
xchg
or
wrmsr
jbe,pt
pop
sub
dec
pop
and
jne
or
jle
jnp
inc
sti
fisttpl
xchg
sub
cmc
mov
add
sub
mov
dec
das
jl
and
xchg
xor
add
and
jmp
or
mov
mov
mov
dec
add
int
push
ljmp
ljmp
xor
mov
and
or
imul
cmp
jl
push
push
sarl
or
add
add
jns
xchg
clc
jl
lahf
inc
test
adc
or
jne
or
mov
ds
testb
and
mov
rol
xor
mov
testb
sub
pop
int
add
stos
and
xor
cs
ljmp
add
iret
iret
push
dec
jae
push
sub
sub
iret
mov
xor
push
dec
adc
mov
dec
mov
scas
es
divb
imul
and
push
repnz
aaa
adc
add
sub
xor
push
sub
cmp
ja
adc
jle
stos
pop
add
outsb
scas
cld
jno
call
push
sub
push
cmp
push
sub
cmp
sub
push
sub
jecxz
add
push
add
pusha
sbb
divl
scas
cmp
inc
and
bound
cmp
hlt
sub
ljmp
outsb
leave
or
in
xor
inc
mov
mov
mov
sbbl
test
leave
jbe
xor
inc
xor
sub
dec
leave
cmp
out
sub
sbbb
mov
cmp
out
sub
popf
mov
out
jle
icebp
sub
dec
enter
icebp
sub
mov
and
stos
push
and
mov
add
repz
jne
test
sub
add
add
aaa
mov
mov
push
ret
pop
add
aaa
mov
test
hlt
sar
aaa
std
pushl
jbe
test
mov
out
roll
xchg
mov
xchg
in
in
sahf
adc
fiadds
incb
mov
mov
push
mov
pop
insb
std
dec
or
fbstp
cmp
inc
xchg
add
fstpt
stc
adc
jb
ss
test
test
test
and
and
xor
adc
out
enter
xchg
bound
into
xor
inc
ds
movsl
add
push
orl
sub
ss
push
loop
jg
push
or
pop
das
xor
inc
cmp
adc
jecxz
inc
inc
shll
add
imul
add
xor
mov
mov
xor
add
mov
sub
jo
mov
pushl
pop
mov
sarb
inc
outsl
cmp
hlt
add
mov
popf
jo
pop
mov
leave
mov
mov
dec
fs
mov
push
sub
xor
out
add
inc
inc
movl
dec
ret
mov
inc
mov
xor
mov
ds
cmp
add
mov
outsb
in
jne
jb
mov
push
push
mov
std
jmp
push
add
dec
xor
incl
xlat
push
jne
dec
jle
add
xor
dec
mov
add
cmp
add
inc
ret
sbb
adc
add
sub
or
cs
or
mov
jle
arpl
and
shrl
repz
std
adc
jg
jbe
xchg
push
or
imul
inc
insl
add
xchg
lds
push
dec
mov
mov
sahf
sbb
test
pusha
sbb
test
add
xchg
jmp
in
pop
mov
xchg
cmpb
into
out
dec
in
test
aam
es
lcall
test
mov
sbbl
push
sub
leave
push
mov
mov
pop
ja
inc
outsb
mov
mov
mov
add
js
daa
clc
cld
faddl
sar
add
jp
pop
rcll
scas
mov
les
in
add
insb
int3
cmpl
adc
add
sbb
jp
adc
cld
mulb
inc
xor
add
mov
inc
jl
adc
xor
inc
xor
or
scas
fdivrl
jg
popa
into
lock
test
push
in
mov
fs
add
aas
add
adc
jmp
jb
fwait
jmp
xchg
mov
mov
mov
mov
roll
sti
dec
and
repnz
pop
or
mov
popf
jns
ljmp
aad
add
mov
xor
in
repz
adc
inc
hlt
pop
pusha
out
aas
mov
mov
inc
lods
or
loop
insb
jmp
jb
sbb
sub
xor
add
sarb
sub
sub
jne
mov
lret
dec
xor
add
mov
aas
add
add
jp
rclb
js
push
lock
imul
call
push
xor
push
lret
mov
sbb
dec
add
into
mov
movsl
pop
mov
sarb
mov
cmp
jge
jmp
jne,pn
jae
fcom
inc
lahf
repz
mov
jnp
jnp
mov
pop
xor
dec
addr16
mov
call
add
and
xor
cld
das
pop
insl
sbb
push
fildl
lea
pop
sarb
mov
roll
std
shl
scas
repz
mov
lods
push
cmc
mov
add
add
scas
loopne
xchg
enter
mov
cli
jl
pop
iret
or
add
jmp
jns
and
mov
insb
jns
mov
imul
pop
pop
test
push
xchg
popa
mov
dec
or
adc
sbb
jo
and
xchg
mov
push
mov
sbbb
je
lret
jno
xlat
sub
idivb
inc
inc
jp
add
sub
es
mov
add
jb
jno
xor
jmp
mov
xchg
cmp
mov
xchg
mov
jge
mov
add
fmuls
std
out
aaa
mov
xor
add
pop
scas
cmp
es
mov
cli
hlt
pusha
mov
mov
push
movnti
clc
jmp
into
enter
add
adc
cmp
les
nop
adc
stos
add
xor
push
jb
push
adc
push
adc
adc
pop
ja
add
adc
push
push
repz
call
addb
inc
lock
rolb
add
gs
mov
fcomps
lds
ret
push
push
inc
push
push
xor
int3
sbb
add
sbb
mov
cmp
shr
pop
jle
movsl
leave
and
pop
jle
mov
jl
xchg
shll
adc
fldenv
adc
addr16
enter
je
mov
lock
push
and
xchg
cmp
jae
icebp
lock
test
inc
ret
xor
mov
dec
fs
ja
icebp
lds
xor
sbbb
add
and
jo
add
aaa
adc
pusha
lock
shl
aaa
sbb
aaa
repnz
stc
inc
movsb
test
aaa
mov
ds
sbb
dec
stc
and
cmp
aaa
sbb
dec
stc
add
dec
aas
aaa
sbb
pop
dec
fiadds
fisttpl
xor
dec
adc
add
xor
dec
add
mov
xor
jo
ljmp
pop
mov
inc
push
xor
add
xor
dec
jle
push
divl
inc
divl
ljmp
pop
lods
inc
sbb
inc
adc
add
xor
dec
ds
daa
xchg
clc
xor
xchg
jo
ljmp
pop
mov
xchg
push
xor
add
xor
dec
incb
sti
iret
add
cmp
incb
dec
add
xor
add
xor
add
xor
add
ja
lahf
pop
mov
jmp
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
sbb
xor
adc
add
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
push
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
xor
adc
mov
adc
adcl
xor
adc
mov
adc
xor
adc
xor
fsubl
sbb
sbb
daa
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
daa
sbb
daa
sbb
sbb
daa
sbb
inc
sbb
inc
sbb
add
inc
sbb
inc
sbb
sbb
daa
sbb
daa
sbb
daa
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
daa
sbb
daa
sbb
daa
sbb
daa
sbb
inc
or
add
inc
xor
add
ljmp
and
add
and
add
and
add
ljmp
and
add
add
and
add
and
add
xor
add
xor
add
xor
add
xor
add
and
add
and
add
sub
add
ljmp
xor
add
and
add
ljmp
xor
add
xor
jmp
xor
pop
jmp
add
xor
pop
jmp
xor
pop
jmp
xor
pop
jmp
xor
pop
jmp
xor
pop
jmp
xor
or
xor
or
xor
pop
jmp
xor
adc
xor
pop
jmp
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
add
xor
or
xor
or
dec
ss
adc
xor
push
ss
femms
ss
nopl
adc
femms
ss
pmaxub
mov
into
xor
add
fidivs
stc
push
into
xor
cmp
adc
xor
loope
sahf
xor
mov
int
pop
xor
add
push
dec
xor
rorl
or
xor
add
sub
add
inc
or
cmp
add
xor
add
sub
add
inc
or
cmp
add
xor
add
sub
add
inc
or
cmp
add
xor
add
sub
add
inc
or
cmp
add
xor
add
add
sub
add
inc
or
xor
add
sub
add
inc
or
cmp
add
xor
add
sub
add
inc
or
cmp
add
xor
add
sub
add
xor
add
xor
add
xor
add
xor
add
ljmp
cs
cs
das
ljmp
add
ljmp
daa
ljmp
sbb
add
sbb
ljmp
sbb
add
xor
add
xor
add
xor
add
ljmp
cs
xor
pop
jmp
xor
add
jmp
xor
add
jmp
pop
jmp
xor
push
jmp
xor
add
jmp
xor
adc
xor
add
jmp
xor
add
jmp
xor
adc
xor
adc
xor
adc
xor
adc
xor
push
jmp
xor
pop
jmp
xor
push
add
dec
or
add
dec
xor
dec
xor
or
dec
xor
or
push
xor
or
push
xor
or
push
xor
or
push
xor
or
fidivs
test
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
push
mov
sbb
xor
push
sahf
xor
getsec
or
sub
add
inc
or
cmp
add
xor
add
sub
add
inc
or
cmp
add
xor
add
sub
add
inc
or
cmp
add
xor
add
sub
add
inc
or
cmp
add
xor
add
sub
add
inc
or
cmp
add
dec
or
sub
add
add
sub
add
cmp
add
xor
add
sub
add
inc
or
cmp
add
xor
add
sub
add
inc
xor
add
das
ljmp
das
ljmp
das
ljmp
xor
add
xor
add
xor
add
xor
add
xor
add
ljmp
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
das
ljmp
das
ljmp
das
ljmp
das
ljmp
fmuls
jmp
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
add
xor
or
xor
or
xor
or
xor
or
xor
or
xor
adc
xor
adc
xor
adc
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
push
jmp
xor
or
xor
or
xor
or
sahf
ss
or
movsl
or
test
ss
add
mov
jl
pop
ss
or
lea
dec
ss
or
test
pop
mov
pop
ss
dec
orl
push
ss
push
ss
or
and
push
ss
or
ss
or
ss
or
xor
add
into
xor
stc
or
xor
icebp
or
or
add
cmp
or
sub
or
cmp
or
sub
or
cmp
or
xor
add
sub
or
cmp
or
cmp
or
sub
or
cmp
or
sub
or
cmp
add
or
sub
or
cmp
add
ljmp
cs
cs
sub
ljmp
sub
ljmp
sub
add
cs
sub
ljmp
sub
add
ljmp
add
ljmp
sub
add
sub
add
sub
add
ljmp
sub
add
sub
jmp
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
add
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
into
xor
into
xor
or
xor
into
xor
into
xor
sahf
xor
sahf
xor
mov
or
add
xor
mov
dec
or
xor
pop
xor
dec
xor
or
xor
or
sub
or
xor
or
xor
or
xor
push
xor
or
xor
or
or
or
sub
add
or
cmp
add
add
cmp
add
sub
add
sub
add
aas
or
aas
or
das
or
sub
add
aas
or
aas
or
das
or
das
or
aas
or
aas
or
sub
add
sub
add
aas
or
aas
or
das
or
das
or
cmp
add
cmp
add
sub
add
sub
add
aas
or
aas
or
add
das
xor
add
sub
add
sub
add
sub
add
ljmp
sub
add
ljmp
sub
add
ljmp
sub
add
ljmp
sub
add
sub
add
sub
add
sub
add
add
ds
ds
ds
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
add
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
push
aaa
pop
or
aaa
or
push
aaa
decl
push
aaa
add
push
aaa
testl
fidivs
out
or
ss
ss
fidivs
jmp
fidivs
fisttps
into
ss
into
xlat
or
add
rorl
mov
or
ss
or
ss
or
mov
dec
cmpsl
or
stos
or
lahf
or
mov
or
ss
or
fildl
xchg
fildl
xchg
fildl
mov
fildl
mov
fildl
xchg
fildl
subb
add
fildl
jp
fildl
jbe
add
fildl
jb
fildl
outsb
fildl
push
fildl
data16
bound
fildl
pop
fildl
pop
fildl
push
fildl
push
fildl
dec
fildl
dec
fildl
inc
fildl
inc
fildl
ds
cmp
fildl
ss
xor
fildl
cs
sub
fildl
es
and
xor
add
ljmp
cmp
add
add
ljmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
ljmp
cmp
add
cmp
add
add
cmp
jmp
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
add
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
pop
xor
or
sub
dec
xor
or
and
push
xor
or
xor
or
xor
or
xor
or
xor
or
xor
pop
push
xor
pop
push
xor
or
xor
pop
fidivs
sti
pop
into
xor
pop
into
xor
pop
fidivs
out
fidivs
jmp
add
into
xor
pop
into
xor
pop
sahf
xor
pop
sahf
xor
pop
mov
iret
pop
mov
roll
sahf
xor
pop
sahf
xor
pop
mov
mov
pop
pop
xor
pop
aaa
fldl
mov
fldl
mov
fldl
scas
xor
add
fldl
popa
xor
add
fildl
pop
xor
add
fildl
push
xor
add
fildl
and
fildl
mov
fildl
xchg
add
fildl
cmpb
add
fildl
xor
xor
add
xor
add
fildl
data16
add
fildl
pop
xor
add
fildl
push
xor
add
fildl
dec
xor
add
xor
add
cmp
add
xor
ljmp
xor
ljmp
xor
push
xor
ljmp
xor
ljmp
xor
ljmp
xor
ljmp
xor
ljmp
xor
ljmp
xor
ljmp
xor
add
xor
cld
call
add
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
xor
call
call
xor
lcall
aaa
incb
mov
add
aaa
testb
aaa
cli
add
cmp
dec
aaa
das
push
pop
aaa
xor
pop
aaa
daa
push
dec
aaa
sub
dec
aaa
pop
push
push
aaa
and
push
aaa
pop
push
push
aaa
sbb
push
aaa
clts
push
aaa
adc
push
aaa
pop
push
push
aaa
or
push
aaa
incl
fidivs
testl
out
add
fidivs
out
into
ss
into
filds
sahf
xlat
add
aaa
fldl
cmp
add
xor
add
cmp
add
xor
add
cmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
cmp
add
cmp
add
fildl
jbe
fildl
jb
fildl
outsb
cmp
add
fildl
data16
add
xor
add
das
ljmp
cs
cs
cs
das
ljmp
das
ljmp
add
das
ljmp
das
ljmp
das
ljmp
das
ljmp
das
ljmp
das
ljmp
das
ljmp
das
ljmp
das
ljmp
sar
call
xor
std
call
xor
std
call
add
xor
cld
call
xor
cld
call
xor
cld
call
xor
cld
call
xor
cld
call
xor
cld
call
xor
cld
call
xor
cld
call
xor
cld
call
xor
cld
call
xor
std
call
xor
std
call
into
xor
add
into
xor
sahf
xor
sahf
xor
mov
push
add
xor
sahf
xor
sahf
xor
mov
inc
add
xor
pop
xor
add
xor
dec
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
fldl
divb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
fldl
sbb
fldl
pop
fldl
adc
fldl
push
fldl
xor
fldl
cmp
fldl
add
fldl
pushl
fildl
sti
add
aaa
fildl
divl
fildl
repz
fildl
out
aaa
fildl
jmp
fildl
out
fildl
jecxz
fildl
fbstp
fildl
fildl
xlat
aaa
xor
add
ljmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
outsl
or
add
hlt
adc
ds
xor
add
xor
shll
ljmp
pop
fistpll
je
stos
add
xor
roll
sti
lods
das
push
decl
add
sub
pop
call
rcrl
add
cli
addr16
jmp
xor
add
inc
or
in
scas
xor
add
in
jmp
and
push
add
in
jo
call
andb
js
dec
out
sti
sar
out
xor
fnstenv
xchg
out
push
das
clc
cmp
scas
cmp
call
dec
loope
lods
cmp
and
popa
add
cmp
jmp
aam
incl
inc
add
aam
jnp
into
xchg
add
add
pop
fwait
add
and
inc
xor
pop
jne
mov
sbb
cli
mov
sub
inc
and
jbe
sub
xor
aad
adc
mov
mov
jnp
dec
xchg
out
sbb
pushl
mov
idiv
push
je
jge
divb
push
aam
lcall
je
inc
add
aaa
cs
jge
iret
jecxz
xor
sbb
mov
jge
iret
ret
jb
dec
mov
mov
add
mov
xor
sbb
cli
in
inc
jge
ds
std
dec
int
add
sub
clc
mov
push
shl
jecxz
push
int3
inc
stc
repnz
inc
jge
add
std
ret
jb
cmp
jg
in
in
jb
xor
sbb
or
lds
xchg
cmp
out
imulb
out
pop
int3
adc
mov
mov
sub
or
cmp
loop
in
push
pusha
hlt
sub
ja
or
int3
inc
and
add
push
push
sub
ss
mov
xchg
adc
inc
lret
pop
xorb
mov
pop
call
jp
mul
jns
sbb
push
fildl
out
mov
adc
xor
stos
mov
pop
jbe
hlt
gs
imul
je
in
pop
jbe
add
movsb
gs
imul
dec
mov
xor
or
mov
add
lahf
xor
iret
push
fcomi
sub
add
xor
subb
negl
adc
loope
out
insb
testl
stos
cmp
jne
or
decb
push
mov
ret
add
mov
add
xchg
add
popf
mov
movl
ret
dec
notl
fsub
jae
mov
cli
ljmp
notb
push
flds
ret
mov
cli
decl
mov
sbb
fadds
ret
or
sub
add
fnstsw
jbe
sub
fadds
ret
es
pushl
inc
jle
and
mov
pop
stc
sub
and
int
mov
mov
jl
push
fdivrs
xor
sbb
mov
lret
int
jae
cmc
jp
rclb
add
hlt
test
stc
mov
lcall
mov
push
and
mov
fdivr
jne
xchg
std
and
push
call
mov
faddl
je
mov
inc
add
adc
cmp
xchg
xor
and
jmp
fisubrs
es
or
ja
add
movb
test
test
push
fisubrs
enter
jecxz
repnz
ljmp
pop
fmulp
mov
mov
mov
adc
push
ss
subl
cwtl
ss
std
push
sahf
cmp
enter
loop
repnz
mov
iret
loopne
pop
ljmp
bound
add
lahf
sbbl
clc
push
push
lahf
mov
jo
jmp
int3
and
xor
call
push
inc
add
int3
sbb
push
fcmovnb
jb
inc
add
pop
or
fcomi
push
add
int3
cmc
xchg
sbb
ret
addl
call
xchg
faddp
adcl
pop
and
ljmp
pop
incl
add
jno
inc
push
aaa
inc
and
jmp
add
ds
andl
jnp
sbb
cmp
andl
add
push
adc
cmp
je
mov
or
sub
and
clc
push
jo
add
fimuls
ja
mov
loop
je
mov
or
aaa
add
xor
cli
fnsave
or
aaa
cmpsl
sub
push
mov
ljmp
inc
pop
xchg
adc
jnp
rorb
add
stc
xor
cmpb
mov
mov
or
mov
lret
mov
out
add
into
mov
mov
sarb
cmpb
or
rclb
add
xchg
adc
lods
psubq
jae
addb
inc
call
sahf
sbb
cwtl
dec
xchg
adc
enter
xor
jle
jb
and
repz
add
ficoml
arpl
cs
ljmp
fisubrl
cmpb
push
fisubrl
sbbb
push
push
fisubrl
orb
sbb
fldcw
nop
ss
push
sbb
fldcw
cltd
ss
popa
sbb
fldcw
rcrb
and
mov
sbbl
xchg
ljmp
fcomi
stos
mov
psubsb
fcomi
sub
sub
mov
fcomi
push
das
add
mov
dec
sub
fcmovnb
push
inc
add
ss
xor
push
inc
std
jnp
shrl
add
xorl
mov
sbb
outsb
out
sbb
test
xchg
addl
xor
or
sti
mov
push
jbe
xor
xchg
cmp
negl
dec
fcmovnb
bound
add
push
shll
xor
lcall
xor
loope
cmp
adc
xorl
aad
cmp
adc
xchg
ret
cli
sbbl
mov
cmpl
cmpsl
cld
add
sbb
mov
mov
add
or
jge
xor
negb
stc
jno
jge
xlat
jb
push
scas
hlt
decl
xor
out
lcall
lret
lahf
inc
sbb
mov
push
sbb
repz
cmp
aam
sbb
mov
bnd
into
sub
outsb
sbb
add
lret
sub
push
sbb
ret
fildll
xor
sbb
sar
or
inc
ljmp
cld
jb
dec
std
sub
sbb
mov
pop
std
fs
push
fistl
psubw
mov
xor
mov
int3
jmp
test
fisttpll
sahf
stos
test
call
int3
mov
jle
push
xor
into
ljmp
push
inc
das
mov
fistpl
repz
dec
test
sub
sub
loope
push
sbb
test
lret
test
inc
pop
lret
mov
out
clc
pusha
in
sub
fmul
pop
push
in
cs
mov
xor
xchg
aad
mov
push
jbe
add
cmp
xchg
lahf
sahf
mov
or
xor
jmp
stos
mov
por
fcomi
push
das
add
mov
add
xor
pop
push
dec
fcmovnb
push
inc
add
dec
int
xor
fildl
mov
dec
xchg
adcl
cld
push
inc
xchg
cmpl
fcomps
out
sub
repz
xor
fcomip
jne
jbe
loop
adc
push
sub
jnp
ffree
push
call
lea
add
lret
and
fcomip
mov
cli
ret
add
shll
xor
fnstsw
or
cli
xorl
je
or
cli
add
mov
xchg
divb
scas
testl
jge
aaa
je
ss
xor
jge
xor
bnd
mov
or
cs
pushl
sahf
cmpl
dec
push
stc
rcrb
add
scas
xchg
divb
movb
push
pop
mov
inc
push
lcall
sbbl
jb
gs
cmc
add
push
cmp
add
xor
sub
cmp
inc
stc
jp
or
sbb
bound
push
stc
hlt
inc
rolb
xor
sub
or
test
mov
in
mov
adc
pop
mov
and
sub
mov
das
mov
xlat
aam
xlat
inc
call
xlat
iret
inc
loopne
das
dec
in
sub
cli
pushf
add
movsb
loopne
mov
xchg
ret
shl
fstl
stc
movsb
add
mull
mov
mov
int3
add
cmp
pop
sub
push
inc
mov
lret
add
xor
jae
adc
mov
dec
cmp
pop
dec
xor
orl
dec
pop
add
push
dec
pop
cmc
push
dec
sbb
push
dec
pmulhw
inc
adc
xlat
inc
pop
aad
inc
or
aad
inc
xor
idivb
lret
or
add
mov
cld
push
sub
cmp
lods
pop
lret
cmp
out
xor
mov
mov
and
mov
insl
mov
std
call
add
popf
js
jns,pn
inc
in
and
mov
jmp
ret
push
cld
adc
ror
test
or
fidivrs
add
lea
adc
jne
sub
clc
test
mov
mov
mov
xor
shlb
ret
adc
or
mov
aaa
cmp
add
pop
xor
jg
sub
testb
jbe
xor
jnp
inc
stc
pushl
es
call
mov
cli
jle
push
fstpt
shll
add
fnsave
ficomps
sub
aaa
fstl
stc
enter
adc
adc
jge
test
cmp
add
pop
jl
jbe
or
add
mov
clc
jb
pop
or
jmp
sbb
outsb
adc
and
dec
ficomps
dec
dec
push
adc
xor
divl
xor
inc
stos
int
xchg
ss
or
iret
sub
pop
add
push
cs
loopne
adc
fildl
pop
fmulp
movb
in
jns
push
mov
sbb
ror
add
add
jae
into
out
xor
add
and
xchg
fdivrl
jle
stos
into
mov
sbb
test
fnstsw
mov
add
leave
xlat
xchg
cmp
push
inc
inc
into
add
repz
sti
fmulp
xor
sub
cmp
in
push
inc
mov
repz
xor
sub
sbb
xor
add
add
xor
lahf
repz
xor
cmp
push
enter
inc
lret
addl
out
mov
pxor
xor
jmp
or
imull
xor
sub
in
lea
and
xor
jae
mov
add
dec
aad
add
cmp
or
mov
or
ss
cmp
hlt
incl
inc
sbb
cld
adc
fcmovnbe
cmc
ret
or
mov
aaa
cmp
into
xor
jg
sub
add
jbe
call
int
incl
xor
jl
dec
mov
les
rorl
je
cmpsb
and
incl
jb
out
cmp
testb
and
add
inc
aaa
roll
aaa
fstpt
adc
dec
inc
rolb
aaa
fildl
stc
sub
adc
mov
js
ss
ret
stc
hlt
mov
aaa
fldl
out
inc
inc
jge
fiaddl
jl
aad
push
fildll
stc
rcrb
out
addl
mov
add
adc
std
jne
mov
add
add
test
ljmp
dec
or
int
push
mov
lret
ss
cld
repz
jp
hlt
adc
mov
mov
incl
inc
call
or
fcmovnb
adc
lret
inc
xor
or
lcall
lret
mov
or
xchg
into
jg
ljmp
lret
sbb
fisttps
mov
stos
into
enter
add
inc
mov
mov
cmc
leave
xor
dec
inc
int
sub
fmul
cmp
int
push
outsb
fnstenv
dec
cli
icebp
mov
jmp
sub
add
dec
cli
icebp
mov
jmp
sub
out
cmp
cmp
push
sub
stos
psubb
and
xor
add
xor
add
mov
imul
xor
add
xor
add
testl
push
mov
lcall
add
pop
xor
idiv
dec
fiaddl
lcall
add
add
dec
xor
idiv
sub
idiv
fimull
push
xor
add
cmpsb
push
idiv
lret
ljmp
dec
idiv
push
xor
add
adcb
mov
dec
idiv
fidivs
add
xor
add
dec
idiv
jbe
idiv
mov
xor
add
dec
idiv
aaa
addr16
decl
fiaddl
add
add
fildl
add
or
push
jp
std
pop
fiaddl
add
fildl
add
addr16
std
inc
push
cmp
std
xor
add
aaa
fldl
add
inc
popa
std
sbb
lock
mov
std
or
add
aaa
fldl
add
push
popa
std
lock
call
fldl
add
fldl
add
adcl
aad
inc
adc
mov
add
fldl
add
cmp
mov
jmp
add
xor
add
xor
add
xor
add
xor
insl
push
lea
dec
insl
pop
jmp
push
cmc
addr16
movl
push
xor
lret
addr16
lods
addr16
outsl
push
adc
dec
push
add
or
data16
shll
add
mov
loop
sbb
addr16
das
addr16
addr16
mov
data16
add
sbb
testl
push
leave
negl
or
leave
idiv
fmulp
negl
enter
enter
enter
xor
mov
enter
enter
enter
idivl
add
lcall
xchg
fwait
imul
xor
add
xchg
testl
push
testl
pop
testl
push
dec
idiv
and
decl
idiv
fmull
ljmp
idiv
xchg
push
idiv
sahf
xor
add
aas
idiv
in
aas
idiv
sub
dec
inc
idiv
mov
idiv
add
dec
inc
idiv
dec
inc
idiv
xor
idiv
es
idiv
xchg
call
aas
idiv
idivb
idiv
lcall
js
idiv
data16
idiv
and
idiv
cs
idiv
out
aas
idiv
fadds
in
inc
idiv
cmp
lcall
inc
idiv
aaa
pop
jae
sarb
mov
pop
jb
test
jb
mov
push
jb
add
nop
xchg
jno
mov
insl
std
js
jb
jo
jb
push
test
pop
push
je
push
xchg
jb
dec
cli
jb
inc
loop
std
cmp
xor
std
sub
std
sbb
std
adc
jae
or
addr16
add
addr16
clc
icebp
addr16
lock
std
call
test
dec
jo
ret
imul
lret
jo
ret
xchg
jo
ret
lods
jo
ret
leave
jo
ret
and
pop
lcall
pop
mov
fwait
pop
add
je
ret
sbb
je
ret
lods
jae
ret
mov
pop
ret
or
in
dec
ret
push
jne
ret
inc
jne
ret
sbb
ret
pop
jne
ret
jg
and
inc
jne
ret
outsl
jne
ret
imul
cltd
je
add
ret
mov
mov
bnd
ljmp
in
shl
dec
shl
inc
shl
dec
shl
inc
shl
sub
notl
shl
sub
divl
and
notl
or
testl
shl
add
idivl
loop
neg
ljmp
push
leave
shl
rol
das
leave
shl
add
rol
lea
mov
imull
mov
imull
cmpl
idiv
cld
dec
idiv
rorb
call
movsb
hlt
movsb
hlt
call
movsb
hlt
lcall
movsb
hlt
call
movsb
hlt
ljmp
hlt
in
mov
hlt
lcall
hlt
pushl
hlt
pushl
add
mov
fsubrl
add
or
hlt
pushl
xor
add
pop
xor
add
mov
cltd
mov
cld
lock
aaa
loope
cld
loopne
mov
cld
shr
mov
cld
sarb
mov
mov
cld
add
test
mov
cld
cwtl
push
movsb
cld
nop
and
adcb
js
mov
cld
push
inc
mov
cld
push
jb
cld
dec
add
cld
inc
cmpsb
mov
add
pop
movsb
cld
and
add
aaa
test
fwait
or
scas
fwait
add
mov
fwait
repz
fistpl
in
cltd
fstpt
mov
cltd
ret
mov
cltd
mov
xchg
cltd
stos
mov
arpl
xchg
mov
inc
pushf
cmpl
pushf
jae
jnp
imul
lcall
pop
fwait
dec
mov
lds
xor
pop
fwait
and
mov
mov
testl
mov
notl
ret
mov
imull
stos
mov
idiv
fwait
mov
test
mov
mov
test
mov
mov
neg
sarl
mov
add
test
idivl
test
mov
testl
inc
fwait
hlt
incl
hlt
lcall
hlt
ljmp
fwait
hlt
call
hlt
pushl
hlt
incl
fwait
hlt
pushl
hlt
call
hlt
lcall
ljmp
hlt
call
hlt
pushl
cmpsb
hlt
pushl
cmpsb
hlt
decl
fwait
hlt
call
lcall
hlt
call
lcall
and
hlt
pushl
hlt
incl
fwait
hlt
inc
lcall
aaa
fwait
cltd
cld
xor
lcall
ja
cld
sbb
cltd
cld
adc
cld
or
cld
add
add
aaa
cltd
test
call
jle
cld
fdiv
test
rcr
test
enter
add
rolb
mov
lahf
cld
test
mov
cld
cwtl
jb
cld
nop
sbb
cld
sub
cld
js
lahf
cld
jo
lahf
cld
push
movsb
mov
cld
push
jo
cld
dec
xor
add
xor
mov
aaa
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
dec
mov
jmp
in
aaa
mov
mov
aaa
mov
mov
ret
mov
hlt
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
jnp
stc
mov
aaa
mov
add
mov
add
mov
push
cmp
xor
sub
nop
mov
fdivs
imul
fidivl
not
fidivl
not
fidivl
imull
xchg
mov
fwait
lcall
mov
mov
addr16
mov
addr16
mov
jnp
mov
jae
mov
fidivl
divl
mov
mov
fidivl
testl
add
fcoml
hlt
lcall
xchg
hlt
ljmp
hlt
lcall
add
mov
inc
fs
ret
gs
inc
imul
push
add
mov
inc
shlb
insl
mov
push
mov
imul
insb
popa
push
dec
push
fidivs
insl
push
push
inc
insl
gs
arpl
repz
lret
add
add
jo
call
inc
pusha
je
push
pop
insb
cmp
dec
imul
movsb
add
xor
sarb
arpl
sub
add
jle
je
loopne
push
lret
add
xor
in
insb
mov
pusha
cmp
xchg
in
pop
dec
lcall
scas
cmp
arpl
add
xor
pusha
pop
add
popa
mov
outsb
pop
aaa
gs
push
aaa
dec
arpl
imul
imul
outsb
push
mull
push
addr16
arpl
imul
xor
jbe
push
push
popa
hlt
inc
add
add
pop
sarb
and
data16
addr16
dec
cli
addr16
int3
insl
aam
into
jbe
xor
add
mov
stos
push
stos
jne
inc
shll
add
fwait
pusha
push
shrl
mov
jbe
insb
mov
dec
jge
insb
xor
pusha
pop
jne
add
jbe
dec
inc
dec
je
inc
sub
xor
push
imul
dec
jbe
xor
out
add
push
aas
inc
rcpps
jbe
stc
jb
aam
pop
das
faddl
cmp
das
iret
inc
je
cmc
dec
gs
add
inc
pop
pop
loopne
je
xor
add
mov
dec
jae
xor
add
lahf
pop
inc
lds
pop
lcall
push
mov
jae
jne
add
inc
pop
jno
jne
add
mov
pop
pop
hlt
xor
pop
mov
ds
add
push
imul
push
and
je
outsb
jo
cmp
bound
and
je
outsb
jo
cmp
aaa
push
fs
push
addr16
xor
std
push
gs
cld
push
add
aas
jo
sti
aas
arpl
dec
pop
outsb
lods
push
outsl
lret
dec
insl
gs
xor
push
push
pop
inc
roll
fidivs
mov
lea
fs
add
pop
push
dec
push
aaa
lret
add
xor
sbb
and
pop
aaa
xchg
add
insb
insl
aas
or
pusha
pop
aaa
xchg
dec
shrb
insl
inc
in
bound
aaa
add
inc
fidivrl
bound
adc
lret
xor
xchg
stos
fstps
aaa
add
dec
lcall
je
lret
add
xor
outsb
add
imul
je
stos
add
mov
insb
inc
aas
jb
pop
cmp
aaa
xchg
insb
inc
xor
jb
push
dec
dec
aaa
xor
add
cmp
or
dec
cmp
sbb
popa
jb,pn
inc
pop
jae
xor
add
dec
pusha
or
pusha
add
loopw
or
pop
add
xor
testb
xchg
and
cmp
lds
and
add
sbb
pop
add
xchg
dec
push
and
dec
aaa
xor
add
sbb
test
and
movsl
pop
adc
cli
sbb
pop
sbb
xor
aas
inc
movhps
icebp
sbb
dec
adc
push
sbb
and
pop
adc
jmp
add
add
imul
cmp
aas
add
push
inc
cmc
enter
mov
xor
mov
pop
push
pop
mov
imulb
imul
mov
sub
nop
push
pop
push
jmp
dec
push
pop
add
ss
add
adc
pusha
pop
gs
cmp
add
add
out
and
dec
push
and
js
ss
add
insl
dec
out
sbb
inc
ljmp
cmp
insb
popa
inc
pop
push
dec
ss
add
cmp
ss
adc
insl
dec
jmp
pusha
jbe
add
jae
adc
punpckhdq
ret
gs
jb
push
push
shrl
inc
gs
insb
aaa
rclb
xor
add
inc
loopne
add
sbb
cmp
push
xlat
push
sbb
js
and
ja
push
push
or
dec
outsb
adc
cld
cmp
je
repz
arpl
inc
bound
int3
std
inc
fimull
addr16
aaa
push
addr16
dec
js
les
push
into
lods
outsl
jae
scas
cmp
mov
sahf
decl
js
jb
xlat
push
outsb
lcall
je
add
insl
incb
out
arpl
test
pop
jge
add
pop
mov
sbb
pop
jb
jbe
push
and
sub
pop
pop
or
dec
imul
ss
imul
and
pusha
adc
ljmp
add
pop
imull
pop
add
bound
add
or
add
xor
fcompl
into
push
nop
and
add
xor
add
jle
jae
push
sbb
pusha
add
orl
test
add
jno
mov
pop
cltd
dec
sbb
push
jmp
adc
inc
push
sub
pop
inc
pop
or
sbb
pop
jmp
or
sbb
add
sbb
add
fmuls
pop
fisubl
repnz
xor
push
or
push
jae
xor
sub
cltd
minps
popa
cli
pop
rorl
aaa
ss
adc
lcall
jo
imul
mov
add
pop
xor
dec
clc
imul
or
add
leave
xor
arpl
jno
pop
pop
jb
call
aaa
roll
adc
or
cmp
bound
adc
xor
jb
adc
or
gs
jno
daa
adc
dec
xor
add
daa
jno
aaa
pop
pop
je
imul
aaa
stos
decl
mov
xchg
iret
pop
outsb
lcall
inc
pop
out
imul
arpl
push
arpl
push
arpl
add
push
pop
outsb
jae
imul
pop
push
or
adc
push
jecxz
jae
push
testl
arpl
insb
xor
je
cmp
dec
jae
lds
push
fisubl
jns
aaa
pop
add
xor
popa
add
andb
pop
jp
ljmp
adc
pop
fs
pop
pop
sbb
add
xor
push
push
adc
arpl
ljmp
sub
push
idivb
push
divl
cltd
aaa
nop
pop
sbb
push
gs
inc
pusha
push
adc
or
and
adc
cmp
ficoml
cmp
push
xor
add
add
pop
add
adc
inc
ficomps
ljmp
and
movsl
pop
int
sbb
insl
jmp
lahf
and
popa
or
test
pop
jmp
popw
bound
dec
sub
jmp
pop
and
sbb
inc
add
pop
or
adc
lods
das
add
hlt
pop
gs
add
push
xor
cmpsl
aas
add
stc
sbb
xor
sub
adc
in
fs
sbb
inc
das
stc
pop
sbb
add
adc
add
ss
gs
imul
push
add
xorl
pop
insb
repz
insb
je
or
inc
cmpsb
incl
add
xor
mov
inc
jbe
or
add
fidivs
mov
inc
inc
and
push
jb
adc
jae
outsb
pop
add
xor
in
or
ljmp
fs
out
fs
repnz
mov
popa
and
inc
gs
or
and
addr16
cmp
add
and
push
lds
arpl
lods
xor
jns
jae
mov
jmp
imul
dec
add
add
add
inc
mov
pop
outsb
arpl
gs
outsl
cmp
int
imul
add
add
mov
pusha
gs
scas
aas
arpl
jo
aaa
push
add
outsb
pop
and
push
aas
aaa
rolb
push
adc
arpl
inc
pop
insb
ljmp
insl
add
add
jno
xor
pop
fcomps
or
add
add
pop
xchg
psubq
xor
push
outsb
and
pop
insb
pop
into
pusha
popl
ljmp
icebp
les
adc
stos
pop
pop
and
test
sbb
add
add
cmp
pop
test
es
pop
adc
dec
popa
in
sbb
or
pop
sbb
xor
popa
add
inc
pop
add
jmp
add
adc
inc
jmp
lcall
rclb
push
adc
sbb
lret
xor
stos
cmp
pop
or
adc
adc
mov
add
push
push
nop
and
fs
push
lods
pop
xor
mov
and
iret
jo
gs
pop
sbb
push
sbb
adc
add
xor
add
and
out
lock
push
out
add
cmp
add
sbb
addr16
pop
xor
add
pop
insl
inc
cmp
outsw
sub
push
pop
xor
add
pop
insl
dec
sub
adc
fldcw
cmp
arpl
or
inc
js
push
push
imul
gs
mov
inc
gs
ljmp
add
stos
add
imul
push
addl
bound
pop
fs
or
jae
repnz
aaa
es
sbb
inc
outsb
push
add
in
pop
push
aaa
inc
add
fisubl
arpl
dec
fs
fisubrl
aaa
and
fisubrl
push
addr16
cmp
xchg
add
aaa
pop
fs
add
mov
pop
push
jbe
push
test
push
aaa
cwtl
add
pop
jne
imul
add
jmp
arpl
dec
pop
inc
lret
aaa
mov
dec
sbb
cmp
daa
pop
outsb
adc
add
mull
pop
adc
push
adc
jmp
popa
aad
xor
arpl
add
xor
add
sbb
jo
sbb
popa
lret
push
cmpsl
xor
add
invd
cmp
sub
push
mov
xor
add
xadd
push
push
data16
push
mov
jmp
pusha
dec
jns
add
xor
pusha
dec
and
add
add
imull
add
xor
add
clc
pop
pop
add
pusha
inc
call
repz
xor
aad
bound
xlat
out
popa
sbb
negl
hlt
and
loopne
push
push
movsb
xor
sub
repnz
push
adcb
add
popa
gs
loope
xor
push
or
bound
gs
les
into
push
xor
loope
cmc
pop
popf
jne
jno
inc
adc
add
xor
add
fnsave
addb
adc
push
push
add
mov
fs
aaa
or
pop
add
clc
pop
pop
imul
ss
jo
or
push
adc
repz
je
sub
add
aaa
cmp
popa
cmp
push
jb
adc
cmp
addr16
shll
addl
out
es
jne
add
add
add
pop
outsb
repnz
jb
lea
inc
add
fs
into
dec
pop
inc
mov
add
ficoml
repnz
jo
push
mov
add
or
sbb
jo
in
dec
add
push
add
shrb
arpl
pop
fs
rorb
push
dec
fs
pop
push
mov
sub
dec
push
pop
add
movsl
addr16
jno
popf
inc
add
push
add
dec
addr16
mov
aaa
int
inc
lcall
pop
outsl
push
je
out
add
sbb
inc
push
out
addr16
xor
push
inc
xor
add
sbbb
fwait
jo
sbb
push
and
xchg
add
fwait
pop
or
push
jb
adc
push
adc
aaa
xor
add
add
rclb
jae,pt
out
jb,pt
or
add
xor
pop
pop
cmc
and
add
xor
add
js
or
or
add
push
or
mov
ljmp
add
add
insl
xor
dec
xor
pop
xchg
std
sbb
inc
and
or
push
pcmpeqb
cmp
dec
out
addr16
cmp
add
push
push
pop
sbb
push
je
fcoml
jmp
into
daa
dec
cmp
adc
fsts
adc
loope
bound
xor
add
xchg
adc
jmp
ljmp
insb
int3
xchg
and
add
fisubl
imul
mov
or
add
xor
cltd
or
dec
mov
or
inc
mov
push
sahf
xor
push
sbb
insl
gs
xor
add
insl
inc
repnz
push
adc
cmp
add
gs
push
push
popa
sbb
insb
or
addr16
and
or
repnz
add
push
sub
dec
xor
inc
js
xor
add
insl
dec
sti
and
dec
ljmp
je
rolb
inc
push
loope
arpl
add
xor
aam
arpl
dec
imul
add
xor
rcrl
or
jno
add
pop
je
lcall
sbb
dec
add
pop
decb
inc
arpl
ljmp
pusha
pusha
add
cmp
add
rolb
arpl
inc
dec
je
aaa
dec
inc
aaa
or
inc
xchg
lahf
das
push
jae
dec
mov
lret
add
mov
lds
or
push
and
push
sbb
xchg
push
push
push
mov
dec
sbb
push
sbb
inc
add
mov
bound
clc
jl
adc
dec
push
add
aaa
xor
add
adc
push
aam
cmp
shlb
dec
push
aaa
xor
add
loope
dec
imul
pop
pop
push
ljmp
add
adc
push
lahf
or
outsl
std
insb
rclb
ljmp
and
push
mov
sub
bound
xorl
push
pcmpeqb
add
insb
mov
adc
add
pop
clc
pop
pop
or
push
mov
fdivrp
insb
sub
and
xor
push
inc
fsts
push
pandn
add
lcall
add
xor
pusha
outsb
xor
jb
jmp
xor
add
adc
push
repz
insl
outsl
pushf
aaa
adc
xchg
or
inc
cli
adc
stos
or
xorl
insl
push
mov
pop
outsl
shr
leavew
aaa
pop
add
or
push
mov
aaa
xchg
add
insl
push
out
pop
outsl
adc
arpl
xor
add
push
pusha
outsb
and
outsb
add
jb
lea
inc
jno
pop
gs
xor
add
add
cltd
inc
pusha
outsb
movsb
sub
test
bound
cld
inc
test
inc
fwait
push
add
add
inc
pop
jno
dec
push
outsb
dec
add
ret
dec
ficoms
dec
outsb
imul
push
pop
pop
test
add
cltd
add
stos
sub
push
sarl
and
push
insb
sbb
popa
data16
xor
cmp
jo
aaa
call
roll
pop
addr16
pusha
pusha
dec
into
pop
pop
arpl
cmp
push
insl
or
add
adc
add
outsl
adc
imul
bound
loope
xor
push
fs
data16
mov
xor
xor
add
es
inc
push
mov
data16
or
add
xor
push
sub
inc
add
or
mov
in
mov
xor
add
popa
push
add
cmp
jmp
aas
pop
call
pop
insb
aaa
xor
add
es
push
lret
jmp
dec
loopne
cmp
sahf
xor
jo
popf
add
push
nop
adc
insb
or
xor
push
cmp
pop
std
inc
adc
data16
inc
fsubrl
push
jmp
test
pop
enter
add
push
push
add
add
pop
mov
clc
or
adc
jp
or
add
scas
pop
and
adc
push
inc
fmull
jae
jmp
insl
gs
sti
add
std
bound
sbb
add
test
pop
je
pop
pop
jbe
or
cmp
insb
add
or
cmp
data16
or
lock
or
gs
xor
jb
add
sti
add
xchg
pop
pusha
rclb
jne
adc
add
ss
add
mov
arpl
scas
or
add
xor
jb
ljmp
lock
imul
mov
mov
dec
dec
ja
pop
inc
arpl
add
pusha
dec
imul
push
pop
insb
xchg
push
imul
cs
lea
xor
inc
pop
je
xor
addl
insb
aaa
lret
imul
push
pusha
mov
pusha
dec
dec
jno
add
lods
std
dec
sbb
inc
arpl
rcrb
aaa
fdivrp
dec
sbb
inc
arpl
iret
pop
push
add
aaa
xor
push
add
aas
inc
fildl
pop
pop
cli
adc
out
xor
pop
push
arpl
or
pop
repnz
leave
or
pop
jnp
sbb
or
push
mov
ljmp
add
test
add
lock
push
pop
and
push
imul
add
out
push
adc
push
sbb
add
add
xor
push
sub
mov
push
xchg
adc
adc
add
adc
or
pop
fadds
fs
add
adc
or
xor
xor
add
pop
push
or
and
xchg
jb
andl
sti
inc
cmc
arpl
xchg
and
and
sbbb
divl
test
push
aad
pop
add
push
cmc
insb
les
jp
or
add
imul
fwait
sti
add
stos
add
inc
add
or
inc
gs
fs
pcmpgtw
bnd
dec
xor
add
pushl
ljmp
inc
and
push
dec
cmp
sbb
add
jb
add
cmp
jo
aaa
sbb
xor
push
add
imul
pop
outsb
add
aaa
add
and
mov
aaa
inc
add
and
nop
and
cwtl
sbb
aaa
jle
out
sbb
aaa
iret
pusha
imul
pusha
inc
push
test
bound
cmpsb
add
or
pusha
insb
outsb
sar
push
imul
add
push
std
dec
push
gs
fsub
dec
dec
sar
push
push
aaa
add
dec
xchg
xor
cltd
sub
imul
popf
add
sub
fs
xor
and
aaa
aas
add
imul
addr16
add
jp
push
push
leave
imul
inc
arpl
pop
sbb
sub
xor
add
adc
js
add
sbb
sbb
gs
adc
imul
dec
gs
sub
add
pop
push
aaa
xor
add
add
cmp
add
add
sbb
mov
dec
pop
xor
add
push
xor
xor
add
cld
xor
mov
aaa
xor
add
movsl
pop
dec
pop
into
pop
gs
dec
add
push
jmp
add
adc
pop
mov
or
xor
add
in
dec
sahf
xor
add
fcoms
inc
mov
push
je
rcrb
imul
rolb
imul
out
adc
cmp
sbb
xor
dec
sbb
push
sbb
cmp
add
jnp
gs
jg
pop
or
pop
push
add
cmp
add
cmp
pop
cmc
jle
gs
and
mov
jmp
push
sbb
pop
dec
out
fs
icebp
mull
call
dec
inc
dec
shrb
daa
cs
lock
dec
data16
repnz
insl
stos
sti
js
pop
xor
gs
ljmp
repnz
addl
ljmp
cld
sbb
add
adc
dec
inc
jb
push
popa
inc
cmp
add
ss
sbb
push
adc
aas
adc
push
xor
add
push
outsb
aaa
adc
pop
sbb
aam
add
aaa
es
cmp
aam
addr16
fs
insb
dec
jae
inc
aas
popf
add
aaa
fidivl
dec
loopne
outsb
adc
je,pn
mov
popa
aaa
movsb
cld
dec
add
push
push
xlat
dec
imul
add
lret
or
insb
aaa
ss
cmp
mull
rcrb
imul
pop
addr16
pop
ds
dec
pop
pop
cmpsl
popf
add
aaa
pop
dec
arpl
nop
push
pop
andl
lcall
dec
pop
xchg
pop
pop
arpl
gs
sbb
push
aaa
xor
add
sbb
gs
sbb
push
aaa
xor
add
mov
sbb
add
sbb
fs
mov
xor
add
sbb
jmp
sahf
inc
aaa
xor
add
sbb
ljmp
divl
inc
fadds
cmp
xor
push
xchg
adc
addr16
sub
mov
ljmp
or
push
xchg
clc
sub
xor
sbb
and
add
cmp
pop
aad
adc
adc
xor
add
popa
pop
imul
adc
dec
nop
sbb
jno
add
dec
fwait
pop
icebp
js
xor
cmp
sub
test
pop
add
and
addr16
cmp
add
and
push
dec
aam
add
adc
into
in
pop
inc
in
addr16
nop
xor
pusha
xor
pop
sbb
add
jp
pop
push
cmp
inc
dec
inc
add
sbb
xor
jb
cmp
add
hlt
xor
sti
jb
call
sbb
fidivs
and
mov
jmp
dec
and
outsl
in
jmp
insb
jae
xor
add
inc
cmp
adc
gs
loope
outsl
popf
in
imul
dec
push
add
add
add
push
push
pop
icebp
outsl
std
sbb
in
insb
add
daa
pop
sub
adc
add
xor
aaa
inc
imul
push
je
adcl
aaa
pop
push
imul
insb
push
popa
push
addr16
je
pop
dec
js
outsb
dec
js
je
iret
push
cmp
daa
mov
dec
push
scas
dec
arpl
add
into
dec
imul
push
push
cmp
add
push
outsb
rcrb
outsb
ret
dec
push
jae
pop
pusha
outsb
ret
jecxz
addr16
cld
pop
arpl
rsqrtps
sbb
jae
sbb
pop
or
idiv
push
imul
data16
rclb
or
add
icebp
rcll
add
mov
push
push
scas
xor
sbb
mov
stos
push
and
ss
adc
bound
xor
xor
in
adc
pop
jle
shll
inc
add
decl
add
inc
push
sar
data16
hlt
jmp
pop
stos
invlpg
mov
addr16
add
xor
add
imul
insl
sbb
add
jae
xor
jmp
jp
pop
insl
mov
pop
sbb
xor
add
or
dec
cltd
add
push
mov
in
jo
pop
js
adc
add
add
inc
or
insl
and
call
gs
add
push
xor
insb
jo
adc
pop
adc
cmp
insb
inc
push
xor
insb
gs
ljmp
pop
xor
pop
out
insb
gs
ljmp
sti
dec
pop
outsb
cli
loopne
add
inc
outsb
ljmp
jne
fisubrs
mov
out
add
cli
das
inc
outsb
stos
adc
stos
clc
inc
gs
out
inc
dec
xor
add
out
insb
gs
in
arpl
dec
pop
aam
xor
pop
std
pop
aaa
inc
push
je
sub
fwait
sub
mov
push
add
inc
std
inc
mov
dec
dec
xchg
pop
popa
dec
pop
mov
mov
mov
pop
je
imul
lret
fs
pop
je
lret
and
pop
adc
cmp
add
aaa
loop
inc
or
inc
dec
add
inc
pop
testb
jcxz
pop
insb
rcrb
je
xor
cmp
movaps
adc
add
add
push
jp
inc
pusha
jno
cmp
add
xor
xor
add
push
push
pop
xchg
push
std
dec
push
divb
adc
or
adc
add
push
fucomip
add
lahf
pop
inc
loope
push
add
iret
dec
and
xchg
add
xor
pop
sbb
jl
add
fwait
dec
out
adc
xor
xor
cmp
cld
add
add
add
psllq
pop
pop
xor
xlat
pop
gs
nop
add
mov
inc
dec
xchg
inc
jle
add
add
cli
pop
adc
jo
pop
add
bnd
nop
xor
jl
cli
pop
std
adc
pop
sti
sbb
outsb
aam
cli
cmp
sbb
pop
pop
mov
xor
sbb
xor
cld
mov
std
xor
adc
sbb
xor
cld
dec
out
jae
cmc
add
or
pop
jne
hlt
imul
add
loopne
jb
adc
cli
das
jb
jg
data16
xor
jmp
jbe
xor
je
sgdtl
aaa
xor
ja
fstpl
xor
adc
into
xor
arpl
loopne
add
loope
arpl
hlt
sub
add
shlb
jb
adc
add
jae
adc
mov
xor
add
add
mov
add
xor
push
push
or
jmp
add
xor
sti
cld
imul
out
bound
aaa
aad
push
jmp
add
xchg
stc
push
imul
sbb
push
imul
and
arpl
std
inc
xor
jo
add
std
inc
cmp
inc
outsb
add
dec
imul
push
mov
add
pop
xor
dec
repz
adc
jg
aaa
xor
cli
pop
xchg
int
adcl
sbb
les
cmp
push
cmp
add
ds
xchg
stc
xor
add
pop
sahf
adc
pop
xchg
or
add
add
or
push
pop
adc
pop
inc
or
push
pop
cli
rclb
sbb
add
cmpsl
pop
das
pop
lds
jecxz
bound
adc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sahf
xor
add
mov
add
sahf
xor
add
rcrb
mov
pop
xor
dec
xor
aaa
add
aaa
add
sub
add
add
push
xor
add
xadd
lcall
xor
add
pop
cmp
add
cmp
add
clc
call
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
jo
add
aaa
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
lret
xchg
or
mov
add
mov
add
fwait
mov
add
mov
add
aaa
mov
add
lea
add
lea
add
lea
add
adcb
lea
add
mov
ja
add
xchg
test
leave
cmp
into
dec
ja
mov
add
mov
cmpsl
lcall
pusha
mov
out
lock
sub
mov
adc
add
hlt
xor
xor
dec
incl
push
add
hlt
xchg
js
add
nop
cmc
popf
xchg
call
pop
movsb
lods
repnz
mov
mov
outsb
imul
xchg
mov
add
adcw
adc
lret
inc
xchg
pushf
enter
imul
add
test
jae
testl
ds
and
insl
mov
repnz
lahf
pop
mov
jno
mov
setb
jno
cmp
mov
push
or
lock
pop
mov
bound
nop
mov
bound
push
jo
add
pop
xchg
mov
lahf
enter
xor
push
dec
call
jmp
lock
lods
call
mov
sbb
aaa
rolb
insl
inc
cmp
rcrl
aas
and
fildll
lods
nop
outsb
mov
push
dec
pop
shll
ds
test
and
arpl
aas
fimuls
mov
stos
add
mov
fdivrl
lea
inc
rclb
mov
push
ja
adc
aas
sub
dec
loope
insb
mov
aas
lods
insb
inc
cmp
lret
adc
lcall
pop
in
stos
push
pop
insl
xchg
aas
repnz
shl
out
xor
sub
jne
sub
push
idivb
push
pop
jp
or
jne
mov
mov
das
clc
mov
lea
and
fwait
push
sub
loop
inc
stos
cmp
imul
mov
mov
cld
mov
and
mov
test
wbinvd
inc
xchg
jg
rcl
mov
insb
out
adc
cld
pop
lret
jg
jne
insl
xchg
mov
sub
sub
in
lret
fimull
xor
add
mov
popa
movsl
inc
mov
mov
lock
dec
add
clc
jmp
jg
adc
pop
cmp
sub
inc
stos
jbe
push
cmpsb
mov
mov
sbb
dec
aam
or
xchg
frstor
lock
daa
sarl
or
add
xor
add
xor
add
xor
inc
ja
repnz
add
ja
jmp
add
xor
out
xor
sarl
dec
je
add
xor
add
xor
add
xor
add
xor
add
jbe
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
cmp
stc
dec
hlt
add
cmp
shrl
hlt
add
cmp
imul
jns
cmp
xorl
cmp
cmp
cmp
adc
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
aaa
add
aaa
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
aaa
add
mov
add
mov
add
mov
jl
aaa
aas
aaa
repz
aaa
out
aas
aaa
jg
aas
aaa
das
jge
aaa
scas
cmp
mov
cmp
out
inc
aaa
add
add
aaa
ja
inc
aaa
sub
aaa
mov
cmp
sbb
aaa
sub
aaa
jg
inc
aaa
aaa
cmp
repz
and
inc
aaa
inc
aaa
out
cmp
inc
aaa
mov
cmp
fwait
cmp
mov
inc
aaa
arpl
inc
aaa
xor
cmp
mov
cmp
jp
ja
inc
cmp
dec
cmp
cmp
add
cmp
cli
cmp
lcall
xor
aaa
ja
cmpsb
aaa
ja
push
aaa
ja
ljmp
xor
add
xor
add
xor
add
xor
add
aaa
xor
add
xor
add
xor
lods
cmp
add
xor
add
xor
add
xor
scas
sbb
add
xor
add
xor
jmp
add
mov
add
xor
add
xor
add
xor
add
shlb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
xor
add
xor
add
xor
add
mov
add
pop
xor
add
add
imul
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
cmp
fidivs
add
fidivs
add
into
xor
add
xor
add
xor
add
xor
add
and
add
add
xor
add
xor
add
xor
add
and
add
add
pop
xor
add
mov
add
dec
push
ds
mov
add
mov
add
mov
add
pop
add
aaa
mov
add
mov
add
mov
add
jbe
ds
mov
add
mov
add
mov
add
inc
or
aaa
mov
add
mov
add
add
mov
add
loop
ds
mov
add
mov
add
mov
add
mov
cmp
aaa
mov
add
mov
add
into
cmp
aaa
mov
add
mov
add
fisttpl
ds
xor
add
xor
add
xor
add
xor
or
xor
add
xor
add
xor
add
xor
or
ljmp
xor
add
add
xor
or
ljmp
xor
add
xor
or
xor
add
xor
add
xor
add
xor
add
aaa
xor
add
xor
add
xor
add
aaa
xor
add
xor
add
xor
add
aaa
xor
add
xor
jmp
cmp
add
xor
add
xor
add
xor
add
add
je
add
xor
add
xor
add
xor
add
xor
jmp
xor
add
xor
add
sti
xor
jmp
xor
add
xor
add
cmc
xor
jmp
xor
add
xor
add
hlt
xor
jmp
xor
add
xor
add
je
add
xor
add
xor
add
xor
add
xor
add
add
add
mov
add
adc
add
add
dec
add
dec
add
mov
add
dec
add
dec
add
mov
add
add
push
add
push
add
mov
add
add
push
add
push
add
or
add
xor
add
shll
add
add
into
xor
add
popa
mov
add
xor
add
aaa
mov
add
aaa
pop
add
aaa
pop
add
aaa
flds
add
pop
add
aaa
pop
add
aaa
xor
add
pop
add
aaa
pop
add
aaa
inc
cmpl
aaa
pop
add
aaa
lods
lods
ds
pop
add
aaa
pop
add
add
aaa
pop
add
aaa
data16
ds
pop
add
aaa
pop
add
aaa
pop
add
aaa
leavew
ds
pop
add
aaa
pop
add
aaa
pop
add
aaa
cli
cwtl
ds
xor
add
xor
add
xor
add
xor
cwtl
dec
xor
add
xor
add
xor
add
xor
sub
add
xor
add
xor
add
xor
mov
xor
add
xor
add
xor
add
add
xor
xchg
imul
add
xor
movsb
push
xor
movsb
dec
xor
add
xor
jae
int
das
ja
cmp
ja
push
das
ja
adc
ja
push
das
ja
or
ja
push
das
ja
and
ja
add
pop
hlt
add
dec
hlt
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
into
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
dec
xor
add
add
pop
xor
add
add
dec
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
add
aaa
pop
adc
aaa
jnp
add
xbegin
add
jmp
outsl
jae
xor
in
pop
repz
add
dec
pop
inc
add
pop
cld
pushl
dec
in
push
cmp
in
pop
sub
jmp
sub
jmp
sbb
sbb
sub
lock
pop
lock
das
lock
das
dec
lock
ss
sahf
lock
xchg
xchg
das
dec
lock
das
push
lock
fdivp
and
out
push
das
push
icebp
inc
das
div
hlt
cs
lock
xchg
aam
mov
in
xchg
lock
pop
icebp
add
movsb
cs
xchg
cs
icebp
test
ss
hlt
sub
icebp
add
push
icebp
adc
into
lock
lock
fsubrp
and
out
push
sub
out
inc
sub
in
je
add
rcl
ss
loope
ss
ss
rclb
ss
lcall
push
mov
pop
mov
inc
cmp
add
xchg
pop
cmp
popa
divl
movsl
pop
pop
cmp
dec
out
popf
popa
mov
gs
aaa
insl
push
xchg
aaa
push
dec
cmpsl
aaa
cmp
sbb
aaa
aad
addr16
frstor
imul
fs
adc
add
or
xor
sbb
cmp
xor
cmp
or
xor
pusha
pop
xor
pusha
imul
pusha
jnp
add
dec
pusha
mov
or
xor
pop
stos
xor
mov
xor
cli
pop
jmp
ljmp
xor
sub
push
cmp
mov
xor
imul
gs
lret
xor
gs
xor
mov
xor
data16
aaa
ja
jmp
jg
sti
inc
push
icebp
or
add
aaa
repz
pop
repz
add
aaa
repz
icebp
mov
icebp
fwait
gs
stos
gs
repnz
inc
pop
repnz
icebp
jmp
push
sti
inc
push
lock
lock
repnz
lock
lock
add
lock
add
lock
jnp
xlat
lock
fwait
add
fs
stos
fs
icebp
mov
cld
and
imul
and
testl
into
out
dec
and
lock
out
out
sbb
es
cs
and
lock
and
lock
lock
lock
pop
inc
lock
pop
cs
push
mov
notb
mov
call
and
testl
negl
cmpsb
out
cld
pop
scas
out
in
pop
xchg
int3
pop
mov
mov
and
int3
and
dec
daa
pushf
sub
daa
lods
sub
and
sbb
aad
push
add
xor
rcl
dec
sub
mov
jnp
mov
lahf
cs
mov
lret
xor
les
and
add
xor
jno
mov
das
add
mov
cmp
popa
add
jno
insb
cmp
pop
test
dec
push
dec
ss
in
pop
pop
jg
mov
dec
fs
pop
inc
aas
lods
pop
jge
push
aas
sub
lcall
shl
mov
arpl
xor
pop
fbstp
ficompl
xor
push
xor
add
push
push
xor
test
bound
aaa
mov
cmp
pop
mov
pop
pop
leave
cmp
pop
pop
cmp
pop
pop
cmp
cmp
xchg
cmp
pop
into
cmp
pop
add
cmp
cmp
push
ret
push
or
aaa
cwtl
in
cld
adc
loop
pop
fistps
imul
rcrl
jmp
sub
loopne
inc
ret
cmp
jmp
xor
jmp
cmp
adc
dec
out
add
dec
repz
das
in
imul
stc
addr16
repnz
hlt
push
cmp
addr16
push
bnd
in
mov
repnz
inc
mov
mov
es
mulb
push
in
or
add
and
add
cmp
mov
out
fwait
pop
sbb
inc
push
fwait
icebp
pushf
push
addr16
std
sbb
pop
out
rcrl
in
xchg
sub
in
fisubrs
shr
sub
lods
sub
ljmp
mov
out
sub
call
push
and
ljmp
xor
repz
hlt
add
dec
and
hlt
mov
and
repnz
and
movsb
xor
inc
sbb
cmp
sub
inc
inc
imul
dec
das
xchg
int3
cs
and
das
push
sbb
clc
or
cmp
ljmp
fcmovne
cmp
into
inc
cmp
fisttpll
adc
mov
cmp
add
cwtl
xorl
mov
cmp
cltd
aaa
jmp
xor
add
test
xor
test
clc
imul
add
push
add
inc
gs
xor
or
mov
sahf
xor
xor
push
mov
arpl
fs
aaa
xchg
push
cmpb
dec
call
cmp
dec
sarl
add
dec
lds
jae
idiv
ficoms
add
xchg
divb
mov
addr16
xor
xorb
addr16
addr16
divw
daa
dec
xor
fs
xor
jne
outsb
and
xlat
repnz
or
repnz
sub
std
add
test
cmp
lock
fs
lock
fs
jg
add
mov
roll
inc
mov
in
inc
push
lock
inc
push
out
sub
sub
pop
out
sub
lret
out
or
pop
add
call
mov
sub
in
pusha
out
lret
in
pop
pop
jmp
dec
repz
dec
xor
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
jmp
sbb
ljmp
add
ljmp
insb
ljmp
add
push
sbb
push
call
inc
pop
out
pop
dec
loope
pop
lret
pusha
jmp
add
xor
aad
and
aad
and
mov
and
jg
scas
aad
and
aad
and
nop
fadds
add
add
insb
adc
xor
arpl
cmp
xor
nop
cmp
orb
mov
sub
fists
ss
in
ss
push
pusha
imul
xor
imull
xor
repz
xor
xorb
jmp
xor
jecxz
xor
ljmp
sub
add
xor
leave
xor
add
cs
add
out
or
pop
fildll
adc
shrl
lea
cli
cmp
addl
cmp
or
xchg
cmp
jge
cmp
push
dec
cmp
jle
cmp
jg
cmp
leave
push
mov
adc
sarb
xor
push
mov
rcll
jl
cmpsb
aas
adcb
push
push
mov
aas
and
push
ljmp
aas
push
arpl
incl
cmp
add
cmp
fadds
and
lret
addb
mov
jne
push
xor
xorl
addr16
push
rcrb
inc
insb
shlb
inc
jb
das
inc
adc
shl
es
shr
es
std
es
mov
cmp
xlat
add
jp
push
add
int3
pop
add
add
int
fs
int
fs
iret
fs
add
dec
pop
iret
cmc
inc
pop
into
cmp
and
push
leave
into
xchg
into
ret
and
and
fisubrl
fiaddl
or
fcomi
sbb
fildl
mov
dec
sbb
outsl
sbb
fdivrl
sbb
fdivl
sbb
hlt
push
jecxz
add
mov
pop
out
loope
push
push
loop
push
mul
adc
mov
loope
push
cmp
loopne
pop
jmp
add
xor
roll
and
out
adc
fisubs
int3
rcll
and
rcr
and
shl
and
rcr
and
xlat
ss
xlat
sub
fneni(8087
xlat
sub
fistps
rcr
sbb
es
sub
sbb
pop
mov
cs
xor
add
cmpsl
cs
mov
cmp
xorb
mov
insb
shll
push
push
xor
push
mov
mull
add
sub
add
cs
cs
fldcw
int3
fsubl
imul
sbb
xlat
or
cmp
add
incb
add
jnp
cmp
jp
or
aas
cmpb
sahf
daa
clc
incl
sbbb
pop
addl
sub
pop
xor
jg
xor
xorb
sbb
lea
mov
mov
xor
test
xor
mov
push
xchg
xor
xorb
add
and
pop
jl
xor
add
daa
ss
sbb
popa
sub
int3
sbb
cmp
jns
add
fisttpl
data16
jmp
mov
cli
aam
outsl
xchg
aam
pop
scas
aam
pop
ret
dec
outsb
fidivrl
ds
fsubl
xchg
outsb
cs
fiaddl
push
fstps
sbb
add
xchg
ret
fnstcw
fimull
insb
xchg
fdivrs
pop
jns
pop
push
sbb
fimuls
xor
pop
cmp
pop
fiadds
int3
fmulp
pop
rcr
xor
fnsave
sbb
fstpl
sbb
fisubrs
or
pop
sbb
fisubs
sbb
stos
sbb
ficompl
dec
fldl
add
sbb
ffree
sbb
fstl
pop
frstor
dec
sbb
faddl
or
pop
sbb
fmull
sbb
and
pop
pop
add
xor
rcrl
stos
shll
xchg
test
rcr
and
adc
pop
xor
in
xor
out
xor
mov
mov
add
xor
mov
xor
add
call
mov
scas
mov
pushf
andb
cmp
je
mov
fs
ucomiss
sub
mov
dec
cs
test
push
test
cmp
adc
stos
push
cmp
popa
insl
cmp
xor
jae
jns
ljmp
ss
jl
cmp
mov
insl
add
and
or
ds
jnp
aas
push
jp
fiadds
pushl
add
roll
and
test
jge
and
mov
xor
sub
xor
sti
xor
test
cmp
js
cmp
jns
cmp
jns
cmp
sbb
jl,pt
cmp
out
jnp
add
test
mov
ds
cmp
stc
pop
jne
inc
push
orb
incb
in
add
aaa
mov
sarl
and
int
and
int
or
lods
add
in
or
add
imul
push
push
shrl
dec
into
aam
aas
mov
enter
fs
fsubr
add
cs
adc
sbb
std
xchg
or
push
iret
adc
iret
push
jae
mov
fdivs
cwtl
pop
push
mov
mov
push
or
add
hlt
fldcw
adc
nop
fsubs
sahf
fadds
test
fcoms
jmp
add
xor
roll
add
pop
and
roll
add
and
aam
and
aam
and
aam
and
rorb
and
iret
stos
and
iret
push
and
into
inc
pop
out
and
mov
into
nop
pop
add
imul
cmp
cld
cmp
repz
enter
repz
call
loop
inc
or
dec
add
ss
or
ss
add
cmpsb
ss
sahf
lods
loope
ss
ss
and
inc
mov
aaa
sbb
mov
push
subb
push
push
divl
and
sbb
arpl
ljmp
xor
shlb
add
andb
sbb
iret
xor
test
iret
xorl
fs
adc
fs
xor
xchg
gs
xor
ss
xor
cmp
orb
incl
lock
andb
xchg
outsl
sbb
push
sub
xchg
outsl
stos
cmp
outsb
int
mov
adc
cmp
jno
cmp
insl
inc
cmp
xchg
fstps
jmp
or
add
fmull
xchg
ficompl
fcmovb
insb
insb
iret
adc
cmp
and
iret
das
pop
jo
xor
dec
test
dec
inc
scas
iret
push
cmp
iret
imul
fdivs
fdivrs
loopne
test
repnz
add
fsubrs
imul
pop
nop
fcom
push
mov
fsubr
add
inc
into
fdiv
cmp
fdivr
xor
or
xor
inc
adc
xlat
cmp
add
add
add
adc
orb
mov
mov
xchg
setae
mov
xchg
mov
xchg
mov
jno
scas
cvtdq2ps
mov
xlat
pushf
setns
cmpsb
bt
cwtl
shld
cli
seta
in
mov
add
rorb
mov
lods
psubsw
ss
aad
adc
aad
adc
aad
adc
aad
adc
mov
getsec
es
ss
push
ss
shlb
jae
shll
bound
ss
mov
xor
xorb
add
or
inc
ss
es
jmp
cmp
add
test
push
xor
add
add
xor
int3
xor
cmpsb
xor
jmp
xor
loop
xor
mov
xchg
adcb
cs
xor
test
mov
popa
push
xor
push
imul
xor
imul
aas
imul
push
ss
cmp
mov
ss
insl
sahf
ss
subb
add
ljmp
cmp
xorb
jg
cmp
or
lods
fs
das
gs
cmp
mov
gs
mov
aas
jae
idiv
into
jae
decl
cmp
add
xor
dec
xor
gs
test
dec
insl
fcomps
inc
fdivrs
mov
fnstcw
add
pop
fiaddl
and
test
cld
imul
sti
mov
lea
shlb
push
flds
add
cmp
testb
scas
inc
sub
es
xchg
into
lea
mov
xor
in
and
int
and
iret
or
or
iret
mov
add
fidivrl
nop
imul
push
jo
fwait
push
pop
int3
bound
mov
imul
into
sub
lret
or
int
or
int3
in
mov
mov
xor
iret
sub
adc
mov
adc
shrb
adc
into
das
str
cmp
fxch
dec
into
xchg
setp
xchg
insb
iret
mov
fs
xchg
cvtps2pi
or
test
pavgw
out
roll
add
push
rcrl
push
xchg
sarl
dec
idivl
xor
add
push
xor
lea
mov
inc
xor
pusha
daa
sub
push
adcb
mov
mov
cs
outsb
mov
xchg
cld
insl
lret
cmp
cmp
std
jl
adc
push
cmp
add
cli
jmp
repnz
cmp
add
xchg
sti
mov
sub
dec
cmp
pop
shll
out
xor
out
ss
bound
cmp
jle
jg,pt
dec
ds
jle
adc
fidivrs
sarl
aas
mov
pop
aas
xor
jl
aas
repz
lcall
idiv
mov
add
add
mov
xor
cwtl
xor
pusha
mov
mov
pusha
shlb
sub
fbstp
inc
pusha
icebp
xor
popa
sbb
shlb
cltd
pusha
push
xor
insb
xor
mov
mov
xor
pusha
pushl
aaa
push
rcll
add
push
shll
mov
shl
gs
shrb
fs
jne
out
shlb
inc
mov
repnz
inc
jb
outsl
sub
iret
xchg
and
into
pop
sub
push
sti
les
pusha
lret
push
lret
fsubrs
add
data16
popa
pop
mov
ret
roll
add
lock
pushl
pop
roll
rcl
test
xor
aam
add
rcll
pop
shll
faddl
rcll
push
std
shll
xor
rclb
push
sbb
mov
push
arpl
roll
cmpsl
rcrl
xlat
xlat
sub
sub
aam
outsb
fcoms
call
and
aam
push
add
cmp
add
mov
add
sub
add
aam
or
lret
add
or
inc
repz
cmp
cld
into
cmp
cmp
in
inc
cmp
jle
cmp
jge
cmp
test
cmp
jb
mov
outsl
adc
jle
cmp
xchg
cmp
outsl
xor
lods
js
xor
jo
xor
push
inc
xor
stc
adc
repz
icebp
in
xor
dec
add
xor
out
cmp
add
ja
ds
jbe
movsl
jbe
ds
ja
ds
jge
aas
xor
aas
pop
jge
aas
mov
aad
out
sahf
inc
cmc
out
add
cmpsl
fs
xor
pop
xorb
pop
mov
xor
bound
dec
bound
bound
popa
stos
xor
popa
shll
xor
fnstenv
jge
fnsave
outsb
pop
repnz
cmc
xor
pop
or
adc
xor
pop
sub
aaa
xchg
pop
inc
mov
iret
xchg
and
iret
mov
and
rcr
add
into
adc
sub
rorl
rolb
arpl
fisubrs
movl
add
dec
das
shlb
sbb
dec
dec
pop
rcrb
xor
data16
rolb
sub
roll
adc
arpl
pusha
shll
imul
shl
imul
or
not
push
inc
shlb
mov
shlb
data16
and
in
sbb
enter
add
data16
int3
inc
or
int3
scas
or
lods
or
lret
test
or
lret
or
insb
lret
mov
dec
lret
fmuls
lret
jo
test
xchg
or
int
or
int
or
lods
or
int3
mov
sub
jo
sub
or
pop
cli
dec
pop
cmc
mov
inc
lret
and
std
cmp
add
out
repnz
mov
dec
aaa
xor
pusha
aaa
jmp
xor
in
sbb
xor
xor
test
mov
xor
and
xor
stos
xor
bound
ss
xor
subl
addl
sub
addr16
sub
jo
sub
add
push
xor
add
jne
xor
lods
jne
xor
add
bound
ss
shlb
inc
arpl
outsb
jns
cmp
jns
cmp
jp
cmp
jns
cmp
js
cmp
jl
cmp
jl
cmp
jp
shrb
js
cmp
jmp
idiv
sahf
pusha
cmc
ljmp
xor
add
pop
xor
add
pop
xor
xor
pusha
cmp
arpl
xor
arpl
ss
jbe
ss
lds
xchg
lret
mov
les
dec
out
leave
dec
sbb
sub
scas
lret
addr16
adc
lods
enter
leave
fwait
sbb
leave
cmpsb
adc
lret
xchg
iret
add
repnz
pop
mov
xchg
add
imul
cwtl
sbb
rol
inc
mov
fiadds
shl
inc
inc
int3
fisubs
or
xor
shrb
dec
rol
and
xor
xchg
rorb
add
ror
cld
sub
leave
out
pop
add
ja
adc
pop
add
lds
inc
addl
or
aam
add
mov
rol
add
shll
pop
cwtl
shlb
or
int
or
into
jp
into
lret
stc
sti
pushf
int3
xchg
pop
lret
jnp
mov
lret
ljmp
sarb
pop
jle
cmp
outsl
mov
dec
outsl
push
xor
clc
inc
imul
push
inc
divl
add
add
xor
in
xor
cld
xor
aad
pop
in
xor
pop
and
sub
fldl2e
xchg
rolb
and
pop
cli
les
jns
mov
cmp
jle
cmp
jle
cmp
inc
inc
imull
xor
pop
arpl
inc
push
xor
push
add
cmp
add
xorb
outsl
mov
outsl
shlb
int
std
ss
outsl
sbb
xchg
jo
aaa
sub
xor
aam
js
jl
xchg
cmp
insl
in
dec
insl
add
loope
push
cmp
insl
dec
cmp
outsb
mov
and
cmp
push
cmp
imul
xchg
imul
add
cmp
hlt
jmp
aas
stc
hlt
pushf
aas
shl
add
mov
add
add
dec
xor
pop
xor
pop
xchg
aaa
clc
sub
cmpsb
sub
adc
sub
gs
les
cltd
gs
cs
or
aam
adc
in
gs
adc
inc
inc
lahf
cs
inc
mov
ret
inc
sbb
cmp
and
cmp
pop
mov
push
push
sbb
pop
or
inc
add
add
dec
xchg
std
mov
add
cmp
fistpll
fwait
popa
xor
xor
call
ss
inc
xor
mov
aaa
xor
xor
sub
or
cmp
add
popa
cmp
cmp
sti
xor
and
lahf
inc
lahf
mov
mov
gs
mov
std
jne
add
lahf
std
jne
xchg
std
inc
inc
lahf
std
xor
inc
lahf
std
xor
inc
std
adc
inc
mov
xchg
std
lds
std
mov
cmpsl
std
mov
lahf
std
mov
aaa
incl
in
imull
cmp
mull
cmp
negl
cmp
notl
cmp
testl
cmp
div
aaa
sub
mul
aaa
mov
add
ja
aaa
int
int3
aaa
mov
ja
aaa
mov
jbe
aaa
pop
jbe
aaa
jge
pushf
aaa
jge
xor
jmp
cmp
loope
and
leave
add
xor
add
xor
add
xor
imul
and
xor
imul
add
push
xor
pop
pop
xor
pop
xor
or
push
or
fiadds
jge
add
add
xor
add
xor
add
xor
add
xor
int
testl
call
cmp
clc
jp
xchg
lea
jp
mov
cmp
sbb
fwait
stc
outsl
cmp
popf
cmp
cli
lods
cmp
push
cmp
push
cmp
stc
fwait
cmp
inc
aaa
or
add
inc
int3
pop
cwtl
inc
loope
jg
push
dec
adc
push
inc
cs
imul
xchg
fisubrl
dec
adc
jo
push
sbb
adcb
aaa
lods
or
aaa
add
dec
inc
std
xor
pushl
push
xor
addr16
xor
inc
ret
inc
lock
inc
dec
sub
es
sub
es
push
es
sub
add
fisubrs
mov
pop
fadds
cmp
cli
push
xor
xor
xor
add
cmp
xor
push
nop
xor
cwtl
xor
pop
hlt
xor
xchg
imul
aaa
inc
add
aaa
push
add
cmp
stc
aaa
ret
call
jge
jno
ret
cmp
add
add
xor
imul
add
aaa
cmp
mov
pusha
add
mov
cld
out
push
cld
iret
cmp
mov
je
xchg
cmp
push
cmp
jae
cmp
insl
add
cmp
pop
mov
cmp
movsl
cmp
cmp
test
jge
xchg
notl
xor
divl
or
fildl
es
sbb
adc
ss
popa
xor
jmp
cmp
adc
das
dec
scas
cs
inc
daa
xor
sub
das
imul
cmp
sbb
cmp
cwtl
notl
mov
pop
ds
imull
sbb
jbe
adc
jle
sbb
xchg
and
mov
sbb
xchg
ds
sahf
add
mov
imull
ds
idivl
mov
not
ds
fidivrs
mov
imul
ds
div
ds
ds
push
aas
and
push
aas
sbb
push
aas
xor
push
aas
cmp
es
add
cs
fdiv
ss
nop
idivl
aas
aaa
xchg
xor
sbb
xor
or
xor
add
aaa
dec
arpl
mov
cld
pushl
mov
sub
addr16
sub
incb
sub
fisubl
loopne
and
das
cli
and
daa
dec
or
xor
or
xor
add
xor
popa
jb
jbe
lcall
dec
loopne
cmovg
sbb
sub
je
add
xor
cmp
cld
cmpsl
cmp
std
push
cmp
jbe
lea
or
mov
outsl
clc
pusha
cmp
clc
lcall
clc
mov
cmp
idivl
jae
aaa
sbb
xor
xor
popf
add
jg
add
add
enter
fiadds
xor
add
mov
push
fadds
fsubrl
jnp
mov
filds
sub
js
je
inc
and
jbe
lret
cmp
sub
mov
stc
cmp
fisubrl
xor
jecxz
mov
xor
jmp
cmp
loope
out
xor
mov
xor
xor
pop
les
sbb
sub
pop
mov
sub
test
mov
imul
inc
push
sub
bound
xor
add
xor
pop
adc
cmp
pop
xor
pop
add
ss
add
aaa
pop
add
aaa
jl
jge
test
stc
sub
pop
cld
jbe
add
out
stc
add
sahf
and
call
add
roll
outsl
xor
cli
xor
xor
xor
xor
add
xor
push
inc
xor
roll
push
ss
mov
dec
dec
xor
dec
dec
xor
cltd
das
jne
shrl
and
std
fsubrs
add
add
jnp
pop
add
sub
cmp
jmp
das
insl
imul
popa
dec
xor
cwtl
cmpsb
cld
pushl
in
xor
inc
push
es
dec
dec
xor
ds
xor
cs
xor
cs
and
outsl
xor
push
outsl
xor
push
pop
xor
push
outsl
xor
decb
ss
decb
ss
outsb
dec
xor
outsb
xor
cmp
insl
mov
cmp
insl
int3
cmp
add
insl
pop
cmp
mov
jae
test
jno
cmp
jno
cmp
jno
cmp
lods
cmp
test
cmp
jno
cmp
jno
cmp
jno
xor
dec
jb
ss
jb
xor
test
xor
aaa
xor
ret
push
xor
add
xor
aaa
add
dec
jo
xor
push
adc
aaa
jmp
xor
out
inc
mov
sub
inc
mov
fs
cmp
cs
cmp
or
shlb
jne
mov
add
jmp
xor
add
xor
loopne
sub
sub
or
sub
pop
jo
sub
sub
add
dec
nop
sub
and
sub
adc
sub
or
sub
and
sub
sbb
sub
mov
xor
push
out
cmp
or
xor
arpl
xor
fs
xor
fs
pop
arpl
push
arpl
xor
arpl
xor
bound
xor
add
mov
xor
fs
jbe
aad
jle
fnsave
jbe
in
mov
fs
xor
std
xor
add
xor
fs
and
repz
jmp
xor
repz
pop
xor
xor
es
arpl
es
dec
sti
es
rep
dec
jmp
je
repz
fwait
test
add
xchg
mov
stos
es
and
movsb
add
lods
or
mov
jae
mov
arpl
int3
imul
hlt
arpl
cmp
aas
cmp
push
cmp
cmp
cmp
xlat
cmp
sub
cmp
fdivrl
sub
cmp
push
cmp
imul
lret
inc
cmp
pushfw
cmp
add
addr16
cmp
fdivrl
sub
cmp
pushf
cmp
les
andl
lret
test
mov
push
fsubrl
sub
add
imul
insb
pop
sub
insb
dec
sub
insb
cmp
insb
mov
sub
mov
sub
mov
add
xor
jmp
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
mov
add
pop
xor
add
add
dec
xor
add
add
pop
xor
add
add
dec
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sahf
add
add
sahf
add
mov
add
mov
add
sahf
add
sahf
add
mov
add
mov
add
pop
add
pop
add
dec
add
dec
add
pop
add
pop
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
fidivs
add
add
into
xor
add
fidivs
add
aaa
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
fidivs
add
into
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
dec
xor
add
add
pop
xor
add
add
dec
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
aaa
add
push
aaa
add
push
aaa
add
push
aaa
add
push
aaa
add
push
aaa
add
fidivs
add
fidivs
add
into
add
add
into
add
fidivs
add
fidivs
add
into
add
into
add
sahf
add
sahf
add
mov
add
mov
add
sahf
add
sahf
add
mov
add
mov
add
pop
add
pop
add
dec
add
dec
add
pop
add
pop
add
dec
add
dec
add
aaa
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
dec
xor
add
add
pop
xor
add
add
dec
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
aaa
or
add
aaa
or
add
aaa
or
add
aaa
or
add
add
aaa
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
ja
jl
push
add
ffreep
adc
sti
shrb
ficomps
sbb
sbb
mov
loop
jb
movl
mov
js
push
loopne
gs
loope
jae
mov
pop
jb
jnp
or
lock
cli
sbb
mov
test
inc
push
jecxz
pop
int3
inc
mov
and
pop
cmc
test
sub
mov
ljmp
inc
pop
dec
dec
push
sub
test
in
insl
es
dec
dec
or
pushl
clc
popa
mov
scas
jae
and
lea
or
inc
pop
sbb
hlt
mov
insl
js
iret
mov
dec
add
xor
iret
pushf
hlt
dec
xchg
outsb
mov
push
std
mov
mov
mov
cmpsl
fstpl
pop
mov
mov
push
in
push
scas
or
jge
mov
sbb
lea
insl
pop
test
aaa
mov
push
sbb
inc
in
sub
outsl
dec
push
rclb
adc
aad
xchg
mov
cmpsb
std
xor
adc
push
push
jne
pop
test
pop
icebp
or
add
mov
cmpsl
dec
mov
icebp
pop
pop
arpl
adc
arpl
fcmovbe
movb
stc
or
lods
push
sub
lds
movsl
cwtl
mov
daa
mov
stos
lret
loopne
out
fbstp
dec
mov
add
xor
rorl
scas
push
addr16
les
hlt
bound
fnstsw
bound
jmp
cmp
mov
mov
test
in
pop
ret
jne
sub
mov
movsb
sbb
mov
mov
cld
enter
in
mov
rorl
in
pop
incl
xor
aam
repnz
inc
push
enter
sti
add
xchg
ror
add
lea
mov
fnstenv
jecxz
imul
int3
and
int3
loop
in
lods
outsb
or
mov
lods
in
or
jo
mov
aaa
mov
stos
cmp
lods
cltd
and
mov
mov
push
mov
jp
int3
bound
mov
lods
cmp
mov
add
lods
dec
in
jno
mov
add
lods
inc
clc
lods
cmp
inc
aas
lods
cmp
mov
push
add
lods
dec
lock
aaa
add
lods
inc
cld
jo
in
add
xor
jmp
stos
dec
hlt
mov
add
dec
stos
inc
hlt
or
sbb
stos
dec
lock
xor
inc
aas
lods
cmp
popf
imul
call
mov
add
mov
mov
es
or
lods
inc
in
lods
and
jb
mov
xor
fsubrl
mov
mov
add
push
rorl
out
int3
imul
int3
and
int3
loop
in
xchg
cmp
add
cli
or
sub
testl
add
xor
lods
push
sbb
sub
jb
push
mov
push
adc
call
pmaxsw
aaa
xor
add
sub
add
sbb
jae
test
jl
xor
add
jg
push
mov
sbb
dec
mov
or
add
add
call
call
in
mov
inc
add
test
or
mov
call
call
in
jp
push
mov
push
ljmp
push
jmp
int3
repz
int3
jmp
call
in
shrl
imul
xor
fdivl
add
add
and
aaa
stos
cmp
dec
or
inc
aaa
test
mov
les
stos
cmp
mov
jle
push
lods
outsb
or
jle
mov
ret
test
cmc
add
xor
jmp
test
add
cmp
adc
dec
cld
xor
add
adc
dec
imulb
add
mov
pop
ljmp
ret
add
int3
jmp
int3
add
int3
bound
add
push
mov
jmp
int3
jae
int3
imul
int3
addl
int3
loop
in
xchg
and
inc
das
mov
add
inc
jge
aaa
xor
mov
cmp
or
mov
mov
or
mov
add
pop
or
ss
cmc
cmp
jae
lods
js
mov
pop
mov
jne
cli
cmp
mov
mov
or
getsec
xor
push
mov
addb
lods
aaa
adc
repnz
or
and
std
or
aas
mov
std
mov
cmp
imul
mov
ret
mov
mov
mov
fisttpll
arpl
jmp
add
mov
icebp
add
mov
mov
xor
loope
jb
cmpl
push
test
xor
add
imul
jg
mov
cmp
push
add
cmp
adc
scas
ja
mov
adc
mov
adc
mov
or
or
adc
mov
cmp
inc
daa
mov
loope
mov
adc
or
add
xor
inc
pop
mov
adc
mov
mov
cmpl
mov
jp
add
aaa
xor
push
add
jmp
cmp
arpl
or
mov
adc
add
idiv
sub
mov
adc
cmpl
inc
imul
ljmp
lea
cmp
push
mov
test
lcall
mov
mov
pop
mov
mov
add
mov
in
idivb
mov
add
sbb
mov
add
mov
idiv
clc
mov
int3
cmpb
lock
add
sub
aaa
mov
add
mov
cmp
test
add
mov
adc
imul
mov
add
int3
add
inc
add
imul
push
add
jno
int3
add
int3
cmpb
orb
add
mov
mov
add
hlt
mov
inc
mov
mov
cmc
mov
mov
nop
stc
add
cmp
rcrb
sbb
jne
mov
mov
das
mov
mov
sbb
dec
sub
mov
or
cld
lret
rorb
fs
mov
mov
add
int3
jmp
int3
add
int3
bound
mov
add
pushf
std
add
mov
push
iret
popa
cmc
call
mov
or
add
inc
clc
mov
lahf
jno
mov
arpl
aaa
or
jmp
inc
lahf
jno
add
xor
add
fnstsw
add
push
xor
push
mov
xor
add
or
add
ja
and
xor
add
aaa
pop
leave
mov
add
mov
inc
aaa
mov
add
ja
inc
aaa
mov
jmp
cmp
mov
xor
or
or
mov
inc
int3
loop
in
cli
cmp
inc
sub
ljmp
outsl
ret
inc
int3
cmp
int3
loop
in
push
pop
mov
add
add
mov
das
aaa
push
cmp
popa
loope
jb
pop
mov
and
or
cmp
pop
and
aas
aaa
mov
add
jnp
dec
mov
or
pushf
add
aaa
xor
add
add
or
scas
jno
mov
adc
dec
das
mov
jmpw
or
addl
jae
mov
add
pop
or
ss
loope
andb
mov
jae
mov
and
je
mov
adc
orl
movswl
lods
js
mov
or
mull
mov
cmp
inc
iret
mov
or
mov
lsl
add
fs
cmpl
dec
lahf
mov
sub
mov
or
push
pushf
sbb
insb
pop
jbe
push
pop
mov
mov
xorl
inc
aaa
xor
or
push
ljmp
cmpb
jg
push
pushf
add
aaa
xor
push
jmp
mov
mov
xchg
dec
lock
jo
inc
aaa
sbb
add
aaa
xor
push
mov
imul
pop
icebp
mov
mov
cmp
jne
sahf
inc
push
lods
outsl
cmc
push
fnsave
notb
aad
call
push
mov
add
loope
xchg
jb
push
mov
jo
inc
aaa
arpl
xchg
add
adc
testl
aaa
xor
add
mov
mov
mov
dec
jecxz
dec
loopne
outsl
jmp
xor
jg
inc
aaa
mov
add
push
cmp
mov
pop
push
call
mov
add
adc
xor
sub
aaa
mov
push
add
ret
inc
dec
je
push
lods
ss
je
push
mov
jmp
jne
or
cmp
mov
push
pshufw
clc
mov
add
xchg
imul
cwtl
jmp
push
into
pop
testl
iret
jae
push
mov
jo
inc
aaa
xor
push
mov
add
pop
cmc
incl
add
xchg
jmp
in
xor
mov
add
negl
jmp
push
arpl
sti
xor
mov
mov
imul
int3
add
mov
mov
push
mov
mov
mov
xor
xor
add
pop
pop
pop
je
mov
std
aas
aaa
aad
call
fisttpl
idiv
mov
or
aas
imul
and
incl
or
int3
loop
in
push
dec
mov
add
in
cmp
scas
xor
add
outsl
in
add
xor
jp
add
aaa
xor
inc
sbb
inc
or
add
xor
test
push
sbb
add
add
add
inc
aaa
xor
add
sbb
xor
add
mov
pusha
lahf
jno
add
cmp
add
xor
add
add
lcall
aaa
shll
hlt
xor
add
xchg
jmp
mov
xor
dec
pop
mov
add
xor
clc
push
xor
je
mov
cmp
std
aas
aaa
pushf
popa
add
xor
adc
gs
divl
sarl
hlt
xor
adc
aam
jmp
call
ret
add
std
mov
add
jmp
cmpl
fs
jo
mov
add
rcrl
je
push
call
mov
add
dec
pop
mov
cld
dec
imul
loopne
scas
inc
faddl
add
call
inc
or
add
jne
je
add
mov
xor
cmc
push
jmp
incl
add
imul
push
fwait
lods
dec
in
jns
add
fisttps
loopne
xor
hlt
xor
repnz
add
aaa
xor
or
mov
scas
cmp
pop
jns
jae
scas
add
pop
ja
add
mov
xor
stc
mov
xor
stc
mov
inc
clc
mov
call
adc
inc
add
stc
xor
xor
inc
scas
lods
or
loopne
and
jbe
mov
jmp
mov
jmp
mov
pusha
jmp
imull
test
scas
jo
mov
mov
add
aaa
xor
push
aas
dec
rorb
aaa
rcrl
je
push
call
mov
std
mov
add
cwtl
jmp
aad
add
test
xchg
xor
or
jmp
add
aas
imul
sarl
inc
pop
cmp
pop
stos
add
mov
jmp
xor
fcompl
lock
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
xor
add
xor
add
pop
cltd
xor
pop
mov
xor
in
add
add
in
mov
cmp
xchg
or
cmp
sbb
sub
pop
fmull
cmpb
or
aaa
aam
add
add
and
xor
add
xor
cmp
mov
or
cs
push
xor
cmp
push
push
xor
push
je
mov
add
int3
xor
push
loope
lret
xor
add
xor
add
xor
ljmp
je
lret
fnsave
push
xor
add
xor
and
inc
xor
mov
add
xor
sbb
and
add
ss
inc
ss
pop
ss
add
mov
je
mov
jg
mov
xchg
ss
add
std
add
ss
add
xor
aaa
aaa
jl
imul
movsb
add
aaa
addl
aaa
addb
aaa
xchg
add
aaa
mov
or
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
add
inc
add
add
dec
inc
add
dec
inc
add
add
inc
add
add
dec
inc
add
add
add
add
add
inc
add
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
add
inc
add
inc
add
add
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
add
dec
inc
add
inc
add
add
dec
inc
add
dec
inc
add
add
dec
inc
add
dec
inc
add
add
dec
inc
add
inc
add
add
dec
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
inc
add
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
inc
add
dec
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
dec
inc
add
dec
inc
add
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
add
inc
add
add
inc
inc
imul
outsl
gs
inc
arpl
xor
add
add
inc
inc
add
inc
add
add
data16
imul
add
push
add
push
add
imul
add
insl
add
pop
add
aaa
add
push
add
xor
push
dec
add
outsb
add
inc
add
inc
add
insb
add
add
add
add
sbb
add
dec
add
push
add
inc
add
inc
add
add
add
insb
add
jae
jae
add
pop
add
dec
add
dec
add
add
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
outsl
add
jbe
add
jae
imul
add
push
add
inc
add
add
push
add
add
add
mov
add
fs
add
sbb
add
add
les
add
add
and
sbb
add
adc
add
pop
add
je
add
sbb
add
dec
add
cld
inc
add
push
popa
add
pusha
dec
add
xor
add
gs
xchg
dec
add
jl
add
mov
sahf
dec
add
lods
dec
add
les
rorb
fmull
testb
dec
add
push
dec
add
sub
add
dec
add
push
dec
add
push
dec
add
mov
add
dec
add
lret
add
dec
add
hlt
dec
add
push
dec
add
and
add
dec
add
push
dec
add
bound
add
add
xchg
add
dec
add
into
dec
add
out
add
cld
dec
add
push
dec
add
push
dec
add
sub
add
cmp
add
dec
dec
add
bound
add
add
mov
add
dec
add
rorb
dec
add
loop
add
testb
or
add
add
sub
add
cmp
add
dec
push
add
pop
push
add
insb
push
add
jl
add
mov
add
push
add
ficoml
add
push
add
or
add
add
cmp
add
add
pusha
push
add
je
add
mov
add
push
add
int3
push
add
ficoms
add
push
add
clc
push
add
push
push
add
and
add
push
add
dec
push
add
bound
add
add
adcb
xchg
push
add
cmpsb
push
add
mov
push
add
ljmp
add
push
add
cmp
add
add
pop
push
add
outsb
push
add
mov
add
push
add
push
add
ficoml
add
push
add
or
sbb
sub
inc
push
add
pop
push
add
add
add
jb
add
mov
sahf
push
add
mov
add
mov
push
add
fcoml
ljmp
add
push
add
and
add
add
push
push
add
bound
add
add
push
add
cmpsb
push
add
mov
push
add
ficoml
add
push
add
add
add
add
cs
add
inc
push
add
pop
push
add
js
add
xchg
add
push
add
mov
add
enter
ficoml
add
push
add
cld
push
add
or
add
and
add
push
add
push
push
add
fs
add
jbe
add
xchg
add
push
add
mov
push
add
fcoms
add
push
add
push
add
adc
add
pop
add
ss
add
inc
pop
add
pop
pop
add
js
add
mov
add
add
ret
add
pop
add
loop
add
repnz
add
or
add
pop
add
es
add
ss
add
dec
pop
add
pop
pop
add
fs
add
jbe
add
mov
add
pop
add
mov
pop
add
loop
add
clc
pop
add
push
pop
add
es
add
cmp
add
add
pusha
pop
add
jb
add
nop
pop
add
pushf
pop
add
stos
pop
add
mov
add
add
add
rcrb
add
pop
add
out
pop
add
pop
add
push
pop
add
push
pop
add
cs
add
cmp
add
add
bound
add
add
jl
add
mov
add
add
rcrb
int3
pop
add
fcompl
add
pop
add
add
adc
add
add
cs
add
add
add
dec
pop
add
pusha
pop
add
jbe
add
mov
mov
pop
add
les
aam
add
loop
add
clc
pop
add
or
add
pop
add
xor
add
add
push
pop
add
pop
add
sbbb
nop
pop
add
mov
pop
add
lret
add
pop
add
hlt
pop
add
or
add
and
add
ss
add
dec
pop
add
pop
pop
add
jb
add
mov
add
add
int3
pop
add
ficomps
add
pop
add
add
add
pop
add
sub
add
ds
add
push
pop
add
bound
add
add
add
mov
pop
add
ljmp
add
pusha
add
and
add
inc
pusha
add
dec
pusha
add
pop
pusha
add
jo
add
mov
add
add
lret
add
pusha
add
loop
add
out
pusha
add
cli
pusha
add
push
popa
add
adc
add
add
es
add
xor
add
popa
add
dec
popa
add
add
add
pusha
popa
add
jp
add
nop
popa
add
mov
popa
add
les
add
popa
add
ljmp
add
add
adcb
add
xor
add
dec
bound
pop
bound
jbe
add
mov
add
add
push
add
and
add
push
add
cmp
add
push
arpl
add
add
dec
arpl
bound
add
add
test
add
arpl
les
add
arpl
in
arpl
push
fs
sbb
add
cmp
push
fs
push
add
test
mov
add
add
add
aam
add
ljmp
add
gs
and
add
ss
push
gs
push
add
adc
add
lcall
add
gs
add
add
jl
add
mov
sahf
dec
add
lods
dec
add
les
rorb
fmull
testb
dec
add
push
dec
add
sub
add
dec
add
push
dec
add
push
dec
add
mov
add
dec
add
lret
add
dec
add
hlt
dec
add
push
dec
add
and
add
dec
add
push
dec
add
bound
add
add
xchg
add
dec
add
into
dec
add
out
add
cld
dec
add
push
dec
add
push
dec
add
sub
add
cmp
add
dec
dec
add
bound
add
add
mov
add
dec
add
rorb
dec
add
loop
add
testb
or
add
add
sub
add
cmp
add
dec
push
add
pop
push
add
insb
push
add
jl
add
mov
add
push
add
ficoml
add
push
add
or
add
add
cmp
add
add
pusha
push
add
je
add
mov
add
push
add
int3
push
add
ficoms
add
push
add
clc
push
add
push
push
add
and
add
push
add
dec
push
add
bound
add
add
adcb
xchg
push
add
cmpsb
push
add
mov
push
add
ljmp
add
push
add
cmp
add
add
pop
push
add
outsb
push
add
mov
add
push
add
push
add
ficoml
add
push
add
or
sbb
sub
inc
push
add
pop
push
add
add
add
jb
add
mov
sahf
push
add
mov
add
mov
push
add
fcoml
ljmp
add
push
add
and
add
add
push
push
add
bound
add
add
push
add
cmpsb
push
add
mov
push
add
ficoml
add
push
add
add
add
add
cs
add
inc
push
add
pop
push
add
js
add
xchg
add
push
add
mov
add
enter
ficoml
add
push
add
cld
push
add
or
add
and
add
push
add
push
push
add
fs
add
jbe
add
xchg
add
push
add
mov
push
add
fcoms
add
push
add
push
add
adc
add
pop
add
ss
add
inc
pop
add
pop
pop
add
js
add
mov
add
add
ret
add
pop
add
loop
add
repnz
add
or
add
pop
add
es
add
ss
add
dec
pop
add
pop
pop
add
fs
add
jbe
add
mov
add
pop
add
mov
pop
add
loop
add
clc
pop
add
push
pop
add
es
add
cmp
add
add
pusha
pop
add
jb
add
nop
pop
add
pushf
pop
add
stos
pop
add
mov
add
add
add
rcrb
add
pop
add
out
pop
add
pop
add
push
pop
add
push
pop
add
cs
add
cmp
add
add
bound
add
add
jl
add
mov
add
add
rcrb
int3
pop
add
fcompl
add
pop
add
add
adc
add
add
cs
add
add
add
dec
pop
add
pusha
pop
add
jbe
add
mov
mov
pop
add
les
aam
add
loop
add
clc
pop
add
or
add
pop
add
xor
add
add
push
pop
add
pop
add
sbbb
nop
pop
add
mov
pop
add
lret
add
pop
add
hlt
pop
add
or
add
and
add
ss
add
dec
pop
add
pop
pop
add
jb
add
mov
add
add
int3
pop
add
ficomps
add
pop
add
add
add
pop
add
sub
add
ds
add
push
pop
add
bound
add
add
add
mov
pop
add
ljmp
add
pusha
add
and
add
inc
pusha
add
dec
pusha
add
pop
pusha
add
jo
add
mov
add
add
lret
add
pusha
add
loop
add
out
pusha
add
cli
pusha
add
push
popa
add
adc
add
add
es
add
xor
add
popa
add
dec
popa
add
add
add
pusha
popa
add
jp
add
nop
popa
add
mov
popa
add
les
add
popa
add
ljmp
add
add
adcb
add
xor
add
dec
bound
pop
bound
jbe
add
mov
add
add
push
add
and
add
push
add
cmp
add
push
arpl
add
add
dec
arpl
bound
add
add
test
add
arpl
les
add
arpl
in
arpl
push
fs
sbb
add
cmp
push
fs
push
add
test
mov
add
add
add
aam
add
ljmp
add
gs
and
add
ss
push
gs
push
add
adc
add
lcall
add
gs
add
add
push
add
imul
insb
insb
outsl
arpl
add
hlt
add
fs
imul
add
js
inc
jb
popa
je
inc
imul
gs
imul
imul
jns
add
mov
insb
jae
jb
outsb
inc
add
scas
add
jae
jb
jo
inc
add
rolb
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
popa
imul
imul
add
gs
inc
imul
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
sub
dec
jo
outsb
inc
imul
outsb
addr16
add
or
dec
jne
bound
inc
outsl
jb
popa
je
add
mov
inc
outsl
insl
jo
je
jb
popa
insl
gs
js
add
icebp
add
fs
imul
add
pop
add
imul
jo
imul
push
gs
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
insb
add
je
outsl
insl
insl
push
jb
jo
jb
imul
gs
popa
insb
outsb
fs
jb
outsb
outsw
push
add
cmp
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
popa
je
push
popa
imul
insl
gs
add
test
inc
jb
popa
je
dec
outsl
inc
outsl
insl
jo
gs
outsl
outsb
push
outsl
jb
add
xor
fs
gs
push
outsl
insb
jne
gs
add
inc
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
outsb
outsw
add
icebp
add
je
outsl
arpl
gs
outsb
outsw
push
add
pop
add
je
push
dec
outsl
arpl
add
inc
jb
popa
je
inc
imul
jns
js
add
xchg
add
popa
jb
push
inc
add
add
je
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
sub
inc
imul
insl
jo
gs
outsl
outsb
inc
popa
insb
insb
bound
imul
movl
je
push
imul
jne
push
imul
inc
gs
outsl
outsb
jae
insb
gs
insb
imul
push
add
ja
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
and
inc
gs
jb
arpl
jae
gs
jo
add
inc
gs
outsl
insl
insl
inc
outsl
outsb
imul
push
jne
jae
inc
jbe
outsb
je
add
add
push
xor
inc
imul
dec
gs
jo
xor
je
gs
add
imul
gs
fs
jb
arpl
jae
gs
outsl
jb
add
add
je
jb
arpl
jae
gs
imul
jne
jb
inc
outsl
jae
gs
arpl
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
arpl
gs
add
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
js
add
jb
insl
jo
add
add
inc
outsl
outsb
jae
insb
gs
insb
imul
add
gs
imul
outsl
arpl
jae
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
pop
add
imul
jb
gs
js
pop
add
je
gs
jo
popa
je
push
add
rolb
push
gs
jb
outsl
jb
outsl
fs
daa
add
outsb
inc
jbe
outsb
je
add
lcall
xor
je
imul
inc
gs
imul
js
or
inc
popa
je
insb
inc
jo
inc
js
je
add
inc
jb
popa
je
inc
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
inc
add
je
jns
je
insl
inc
imul
jns
add
imul
jb
je
arpl
push
arpl
outsb
add
gs
fs
outsl
outsb
jae
insb
gs
jne
jo
je
push
je
jb
add
add
je
insb
inc
jo
inc
js
je
add
dec
jo
outsb
inc
imul
outsb
addr16
add
push
add
outsb
gs
je
inc
outsl
outsb
jae
insb
gs
je
insb
inc
jbe
outsb
je
add
add
je
popa
imul
outsw
add
add
je
outsl
fs
gs
imul
add
xor
inc
gs
jb
imul
imul
push
gs
data16
gs
imul
push
add
pop
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
jb
arpl
jae
data16
dec
popa
jae
add
or
dec
popa
jo
imul
insb
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
add
inc
js
je
jb
arpl
jae
add
jo
inc
imul
outsl
outsl
insb
push
xor
popa
fs
jb
arpl
jae
gs
outsl
jb
add
jb
jo
push
add
xchg
add
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
je
inc
outsl
outsb
jae
insb
gs
jne
jo
je
add
add
jne
push
imul
popa
je
inc
add
pop
add
imul
outsb
insb
outsl
arpl
data16
je
imul
je
add
push
jb
je
push
popa
je
push
imul
je
outsl
insb
jne
gs
add
jle
inc
gs
outsl
outsb
jae
insb
gs
insb
imul
add
je
gs
jo
imul
add
cmp
inc
imul
insl
gs
outsl
jne
je
outsl
imul
add
add
jb
outsb
jae
imul
popa
jb
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
jb
arpl
jae
push
ja
push
popa
jb
insl
gs
jb
add
pusha
add
popa
imul
outsb
je
scas
add
je
popa
je
inc
outsl
jb
popa
je
add
cltd
add
gs
je
push
gs
popa
jo
outsl
jb
inc
add
push
add
je
jns
je
insl
push
imul
imul
jns
add
mov
jb
je
inc
outsl
outsb
jae
insb
gs
jne
jo
je
je
jb
bound
add
je
inc
imul
push
gs
jb
push
push
add
add
je
imul
outsl
dec
inc
dec
add
repnz
fs
imul
js
add
arpl
popa
imul
je
jo
gs
bound
arpl
js
add
add
je
je
dec
popa
outsb
fs
add
add
popa
fs
outsl
outsb
jae
insb
gs
add
adc
inc
imul
outsl
push
jns
je
insl
push
imul
inc
imul
gs
gs
jne
arpl
add
sbb
inc
imul
add
push
dec
inc
dec
xor
cs
insb
add
jae
push
gs
bound
inc
jb
outsl
jb
gs
insb
add
xchg
inc
gs
imul
popa
arpl
outsb
je
add
add
push
jae
push
imul
arpl
lds
inc
jb
ja
gs
inc
add
inc
gs
outsb
jne
outsb
outsw
add
push
jne
jb
dec
dec
inc
inc
add
add
gs
je
dec
outsb
jne
add
popa
insb
imul
je
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
rolb
ja
jo
outsl
jne
gs
jne
je
outsb
add
je
outsl
jns
popa
jb
je
add
add
jo
jns
insb
imul
add
nop
add
je
jb
jo
add
push
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
insb
insb
dec
jae
inc
imul
movsl
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
ja
gs
inc
js
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
imul
add
mov
imul
jae
popa
addr16
add
roll
dec
outsl
popa
fs
jne
jae
jb
jb
insl
inc
imul
push
outsb
gs
outsl
jo
jo
add
outsl
addr16
outsl
js
outsb
imul
jb
insl
push
add
add
je
insb
je
popa
bound
outsw
push
add
hlt
add
outsb
jne
je
insl
inc
jb
insl
push
outsl
imul
dec
dec
dec
dec
push
inc
gs
outsb
popa
bound
je
je
jae
sahf
add
jo
jb
outsl
outsb
popa
je
inc
fs
insb
imul
outsl
ja
add
add
jae
popa
addr16
outsl
js
add
inc
jb
popa
je
dec
inc
dec
push
imul
add
push
outsl
inc
push
add
add
fs
jne
jae
jb
add
add
arpl
outsl
jne
gs
jbe
outsb
je
cmpsb
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jae
popa
fs
imul
add
push
ja
jb
add
nop
add
inc
jb
insl
gs
jb
arpl
push
add
je
gs
inc
insb
addr16
popa
bound
gs
add
push
gs
jne
insb
imul
jbe
arpl
add
add
jne
inc
imul
gs
imul
add
sub
inc
gs
outsb
jo
je
je
je
add
push
gs
insb
addr16
je
insl
push
gs
inc
add
popa
insb
imul
add
push
imul
outsl
arpl
add
outsb
fs
gs
popa
addr16
js
add
je
arpl
insb
insb
push
outsl
jae
add
add
popa
jb
gs
push
add
add
jae
push
jne
je
gs
popa
add
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
xchg
push
gs
gs
popa
addr16
jne
jne
add
inc
fs
imul
arpl
jae
add
add
jo
imul
arpl
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
sbb
inc
gs
jne
jae
jb
outsl
jae
add
add
arpl
gs
jo
popa
je
push
outsb
add
jle
push
gs
popa
jns
jb
fs
imul
je
imul
add
fs
jb
popa
je
inc
popa
je
dec
popa
outsb
fs
gs
add
jae
popa
addr16
outsl
js
outsb
imul
jmp
popa
je
push
imul
add
popa
jb
gs
inc
js
add
push
arpl
jo
jns
add
je
popa
arpl
arpl
push
add
jb
insb
insb
push
imul
imul
je
push
imul
popa
je
outsl
outsb
inc
add
xchg
add
popa
jns
je
imul
inc
outsb
jne
push
imul
icebp
add
outsb
fs
imul
inc
add
add
fs
je
dec
popa
jns
jb
fs
imul
add
imul
push
add
add
fs
popa
jae
add
add
je
data16
imul
add
push
add
jne
gs
inc
inc
insb
push
popa
jb
insl
add
jbe
inc
gs
jo
popa
je
push
arpl
add
imul
jae
addr16
add
cld
add
jae
popa
addr16
outsl
js
outsb
imul
data16
je
arpl
gs
imul
add
push
imul
popa
bound
add
add
jae
push
push
dec
gs
popa
addr16
add
sti
add
dec
dec
dec
push
inc
gs
dec
inc
dec
outsl
je
gs
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
jo
imul
gs
js
add
lar
outsb
inc
insb
imul
add
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
je
push
imul
mov
dec
jae
insb
imul
inc
outsl
jb
popa
je
jbe
imul
mov
ja
jb
insl
add
push
gs
outsl
jbe
push
jb
jo
add
inc
gs
imul
add
je
gs
je
je
add
inc
push
xor
cs
insb
add
or
inc
gs
imul
push
add
add
outsl
outsl
jae
inc
outsl
outsb
je
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
add
inc
push
inc
outsl
insb
outsl
jb
add
adc
push
popa
addr16
gs
jo
insb
addr16
add
add
outsb
fs
gs
inc
add
push
popa
jbe
inc
imul
add
push
add
je
popa
jbe
inc
imul
add
adc
push
jb
outsb
je
insb
addr16
add
add
imul
js
add
outsb
je
insb
addr16
add
inc
gs
jo
outsb
inc
imul
add
or
inc
gs
jo
outsb
inc
imul
add
pop
add
jo
popa
arpl
gs
push
add
or
inc
imul
push
add
add
jo
popa
arpl
gs
inc
add
adc
push
jb
outsb
je
insb
addr16
js
add
inc
outsl
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
add
je
imul
inc
add
add
outsl
outsl
jae
inc
outsl
outsb
je
add
dec
inc
dec
inc
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
and
push
push
dec
outsl
je
data16
arpl
inc
add
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
scas
add
inc
jb
gs
popa
insl
gs
popa
jo
imul
add
inc
gs
outsl
insb
fs
popa
je
inc
add
leave
add
inc
gs
popa
insb
insb
outsl
arpl
cmc
add
push
jne
jb
push
arpl
insb
gs
imul
inc
js
jb
arpl
outsl
outsb
inc
js
adc
push
push
bound
je
add
add
push
jne
jb
push
arpl
insb
gs
imul
push
push
js
arpl
gs
add
fs
js
arpl
popa
bound
add
add
inc
gs
outsb
jae
popa
outsb
arpl
js
insb
outsl
jb
jb
adc
push
push
js
arpl
gs
add
gs
imul
add
and
inc
jb
addr16
jne
jb
inc
imul
push
dec
push
popa
je
push
jb
jo
jb
inc
outsl
jb
jb
je
inc
add
sub
inc
js
jb
arpl
outsl
outsb
inc
add
sbb
push
push
outsl
outsl
imul
arpl
jecxz
push
dec
dec
outsb
jbe
imul
imul
insl
insl
popa
outsb
fs
add
add
inc
gs
gs
imul
push
dec
inc
gs
imul
push
jo
arpl
js
add
insb
insb
inc
js
arpl
gs
js
add
gs
imul
push
jo
arpl
js
add
jb
popa
je
inc
imul
jns
js
add
and
inc
jb
addr16
jne
jb
push
outsl
imul
inc
jb
addr16
jne
jb
inc
imul
push
add
gs
insb
inc
js
arpl
gs
js
add
je
imul
push
jo
arpl
add
add
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
dec
dec
jae
imul
popa
bound
data16
imul
inc
push
jae
popa
jo
jae
add
add
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
push
push
push
js
arpl
add
add
je
popa
arpl
outsl
outsb
inc
js
add
add
outsb
fs
js
arpl
popa
bound
add
imul
je
outsl
outsb
inc
add
mov
insl
jo
jns
arpl
insb
gs
imul
push
dec
inc
imul
je
outsl
outsb
add
add
inc
gs
outsl
insb
fs
popa
je
push
add
sbb
addr16
jne
jb
inc
imul
inc
gs
arpl
dec
jbe
jb
popa
jns
outsb
fs
add
and
inc
jne
insb
imul
outsl
outsb
add
inc
js
jb
arpl
jae
arpl
je
fs
arpl
inc
add
jbe
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
fiaddl
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
push
add
add
outsb
jbe
jb
outsb
insl
outsb
je
jne
jae
inc
add
add
gs
insb
inc
bound
je
add
add
outsb
jbe
jb
outsb
insl
outsb
je
jne
jae
push
add
insl
jo
jns
arpl
insb
gs
imul
inc
js
jb
arpl
jae
arpl
je
fs
arpl
inc
js
add
sbb
inc
jb
addr16
imul
out
push
dec
dec
outsl
popa
fs
outsb
push
jb
arpl
add
add
gs
insb
inc
js
arpl
gs
js
add
add
push
popa
je
push
jb
jo
jb
inc
outsl
jb
jb
je
push
add
daa
add
je
popa
arpl
jae
arpl
je
fs
arpl
push
add
flds
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
inc
dec
dec
xor
cs
insb
add
add
jb
push
je
dec
push
add
add
jb
inc
push
xor
push
inc
push
aaa
add
jb
push
je
dec
inc
add
push
je
push
je
dec
push
add
xor
push
je
push
inc
push
adc
push
je
inc
push
add
jb
je
inc
add
push
je
inc
insl
jo
dec
inc
add
push
je
push
inc
push
or
inc
push
add
jb
push
add
dec
push
inc
push
dec
cs
insb
add
je
inc
pop
inc
outsb
popa
bound
arpl
insb
insb
inc
popa
jb
add
add
popa
je
inc
pop
inc
gs
arpl
insb
insb
push
outsl
jae
push
dec
insl
popa
addr16
imul
add
ja
dec
insl
popa
addr16
imul
je
add
jo
jb
jns
push
push
add
popa
addr16
imul
popa
je
add
push
add
gs
je
push
outsl
outsl
insb
bound
inc
js
dec
add
popa
addr16
imul
dec
arpl
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
add
add
add
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
dec
add
je
push
dec
dec
popa
outsb
addr16
add
inc
add
popa
je
inc
pop
inc
gs
arpl
insb
insb
push
jb
jo
add
inc
insb
popa
je
inc
pop
push
gs
arpl
insb
insb
push
outsl
jae
jno
dec
insl
popa
addr16
imul
inc
jb
addr16
jne
jae
jb
insl
popa
add
arpl
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
inc
add
popa
je
inc
pop
push
gs
arpl
insb
insb
dec
outsb
outsw
add
push
add
add
add
popa
je
inc
pop
inc
gs
arpl
insb
insb
dec
outsb
outsw
add
push
add
add
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
add
dec
insl
popa
addr16
imul
addr16
gs
jbe
add
add
add
insb
popa
je
inc
pop
push
gs
arpl
insb
insb
push
jb
jo
add
dec
insl
popa
addr16
imul
ja
outsb
imul
dec
add
popa
addr16
imul
add
dec
outsb
imul
addr16
add
dec
insl
popa
addr16
imul
add
dec
insl
popa
addr16
imul
ja
js
add
add
gs
je
push
jb
jo
jb
jns
push
popa
add
dec
insl
popa
addr16
imul
fs
insl
popa
add
jb
jo
jb
jns
push
add
add
popa
addr16
imul
dec
insl
popa
addr16
outsb
outsw
add
push
add
popa
addr16
imul
addr16
outsl
jbe
add
pop
add
popa
addr16
imul
addr16
push
insb
outsl
arpl
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
arpl
jo
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
add
dec
insl
popa
addr16
imul
inc
jb
addr16
insl
popa
add
or
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
jbe
dec
insl
popa
addr16
imul
dec
jbe
jb
popa
jns
insl
popa
add
add
add
dec
insl
popa
addr16
imul
dec
arpl
add
dec
insl
popa
addr16
imul
imul
insb
add
popa
addr16
imul
outsl
jbe
add
pop
add
popa
addr16
imul
inc
jb
add
add
ja
je
je
jae
gs
add
pop
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
inc
add
popa
je
inc
pop
push
push
jb
insb
insb
inc
popa
jb
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
add
insl
add
popa
addr16
imul
insb
popa
arpl
push
add
popa
addr16
imul
addr16
outsb
je
jb
jne
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
or
inc
jb
popa
je
push
je
je
jae
imul
inc
dec
dec
inc
push
dec
xor
cs
insb
add
add
mov
addr16
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
mov
addr16
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
addb
add
mov
addr16
add
add
add
add
or
add
jae
add
add
mov
addr16
add
add
add
add
add
add
rolb
addb
add
mov
addr16
add
add
add
add
or
add
add
add
jae
add
add
add
add
add
add
add
dec
add
pop
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
pop
ja
ja
ja
ja
ja
ja
ja
jo
pushl
mulb
add
jo
mulb
add
outsl
jo
mulb
or
mov
jo
mulb
mov
add
add
outsl
jo
mulb
mov
add
add
jo
mulb
add
add
add
outsl
jo
mulb
add
add
add
jo
mulb
add
mov
jo
mulb
add
add
add
jo
mulb
add
add
add
outsl
jo
mulb
mov
add
add
jo
mulb
mov
add
add
outsl
jo
mulb
or
mov
jo
mulb
pop
outsw
jo
mulb
jbe
outsl
jo
mulb
jo
add
add
add
data16
jo
mulb
data16
jo
mulb
jo
out
add
out
add
data16
jo
mulb
add
loopne
loopne
loopne
data16
jo
mulb
jo
loopne
loopne
loopne
data16
jo
mulb
add
loopne
out
out
add
data16
jo
mulb
jo
loopne
loopne
add
data16
jo
mulb
add
add
loopne
loopne
data16
jo
mulb
jo
loopne
push
out
add
data16
jo
mulb
data16
jo
mulb
jo
add
add
add
data16
jo
pushl
ja
ja
ja
ja
ja
ja
ja
jo
add
add
add
and
add
add
call
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
hlt
add
add
add
add
xor
cmp
xor
xor
inc
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
popa
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
jo
add
jl
sub
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
popa
add
outsb
add
add
add
add
insb
add
add
je
daa
add
and
xor
xor
sub
add
add
add
outsb
add
imul
and
push
add
jb
jbe
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
aaa
add
xor
sub
xor
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
outsb
add
pop
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
jne
outsb
add
pop
add
add
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
popa
add
outsb
add
add
add
outsb
add
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
aaa
add
xor
sub
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
add
add
les
into
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
mov
xor
je
xorb
xor
xor
xor
xor
xor
xor
xor
pop
aaa
jns
jg
test
mov
xchg
aaa
xchg
aaa
popf
aaa
mov
aaa
mov
mov
aaa
int
shll
fnstenv
fbstp
in
jmp
icebp
aaa
divl
std
aaa
add
or
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
arpl
imul
jnp
cmpl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jno
ja
jge
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
popa
cmp
insl
cmp
jns
jg
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
arpl
imul
jnp
cmpl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
cmp
inc
cmp
push
cmp
addr16
jns
jg
test
xchg
cmp
test
cmp
cmp
fnstcw
jmp
icebp
cmp
add
or
adc
ds
ds
ds
ds
ds
ds
ds
ds
arpl
imul
jnp
cmpl
xchg
ds
ds
movsl
ds
ds
mov
mov
ds
ds
fstpt
loope
out
in
ds
ds
ds
aas
pop
aas
sbb
aas
das
aas
xor
aas
inc
aas
dec
aas
push
aas
pop
aas
pop
aas
add
add
add
lock
add
xor
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
add
add
add
adc
.byte
.byte
