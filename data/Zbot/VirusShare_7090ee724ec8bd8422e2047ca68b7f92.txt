push
mov
sub
push
call
movl
lea
mov
movl
mov
mov
or
mov
add
cltd
idiv
mov
lea
push
push
call
movl
mov
and
mov
add
cltd
idiv
mov
sub
mov
movl
lea
mov
mov
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
movl
movl
movl
mov
and
mov
and
imul
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
mov
add
cltd
idiv
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
mov
and
mov
add
cltd
idiv
mov
jmp
jmp
push
push
call
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
mov
add
mov
movl
mov
add
mov
cltd
idiv
mov
movl
mov
add
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
cmpl
je
mov
imul
add
mov
movl
mov
or
sub
mov
sub
mov
jmp
lea
mov
lea
mov
mov
mov
or
mov
add
mov
sub
mov
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
call
lea
mov
mov
mov
sub
imul
mov
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
call
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
movl
movl
mov
and
imul
mov
lea
mov
mov
mov
or
mov
or
imul
add
mov
jmp
movl
cmpl
jl
movl
mov
add
mov
movl
movl
movl
mov
or
mov
or
imul
add
mov
mov
cmp
je
push
lea
push
call
movl
mov
add
mov
mov
or
mov
add
cltd
idiv
mov
sub
mov
jmp
mov
sub
add
mov
push
call
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
and
imul
mov
sub
mov
movl
lea
mov
mov
or
mov
sub
mov
sub
mov
lea
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
or
mov
add
cltd
idiv
mov
sub
mov
push
call
add
shl
push
push
push
push
call
mov
movl
cmpl
je
movl
mov
and
add
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jae
mov
mov
mov
mov
mov
mov
mov
xor
mov
movl
push
mov
push
push
call
add
movl
movl
push
mov
push
push
call
add
mov
push
mov
push
call
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
movl
mov
and
add
imul
mov
mov
mov
mov
push
mov
push
push
push
push
call
push
call
add
movl
movl
lea
mov
mov
mov
and
imul
imul
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
call
movl
movl
mov
add
mov
jmp
push
push
push
push
call
movl
movl
lea
mov
lea
mov
mov
mov
and
mov
sub
mov
jmp
call
mov
pop
ret
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
cltd
idiv
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
jmp
push
push
push
push
call
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
and
sub
mov
movl
lea
mov
mov
mov
imul
mov
sub
mov
jmp
movl
cmpl
jl
movl
movl
lea
mov
mov
mov
sub
imul
mov
cmpl
jne
movl
mov
and
imul
imul
mov
movl
lea
mov
mov
mov
sub
imul
mov
cmpl
je
movl
mov
add
mov
jmp
lea
mov
mov
mov
and
imul
mov
call
mov
add
mov
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
call
movl
movl
mov
sub
add
mov
push
push
call
cmp
jne
movl
lea
mov
mov
or
mov
mov
sub
imul
mov
call
movl
mov
or
imul
add
mov
xor
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
push
push
push
push
call
call
jmp
movl
movl
lea
mov
movl
mov
and
mov
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
movl
cmpl
jg
push
push
call
push
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
mov
movl
mov
and
imul
add
mov
jmp
jmp
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
push
call
cmpl
jl
movl
mov
cmp
jne
call
jmp
push
call
movl
movl
mov
or
imul
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
push
push
call
movl
lea
mov
mov
mov
sub
mov
push
push
call
jmp
jmp
call
movl
lea
mov
lea
mov
mov
mov
or
mov
mov
add
mov
sub
mov
cmpl
jl
push
call
movl
mov
or
mov
and
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
and
mov
call
movl
lea
mov
mov
mov
imul
add
mov
movl
push
mov
push
mov
push
call
add
xor
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cmpl
jg
lea
mov
mov
mov
or
mov
sub
imul
mov
push
push
push
push
call
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
or
add
mov
sub
mov
push
push
call
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
xor
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
je
call
pop
ret
pushl
mov
call
pop
ret
push
call
pop
ret
push
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
push
call
mov
pushl
pushl
call
pop
test
pop
je
mov
test
mov
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
shl
mov
add
andl
mov
mov
inc
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
leave
ret
mov
mov
push
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
pop
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
andl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
lea
mov
mov
mov
mov
mov
addl
inc
inc
cmp
jl
xor
mov
lea
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
leave
ret
push
push
push
mov
mov
test
je
mov
add
cmp
jae
lea
cmpl
je
push
call
mov
add
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
pop
ret
push
call
call
cmp
mov
je
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
push
mov
pop
pop
ret
xor
pop
ret
call
mov
cmp
je
push
call
orl
ret
mov
movl
movl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
pop
test
pop
je
push
pushl
call
test
je
push
call
pop
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
mov
cmp
je
push
mov
test
jne
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
push
pushl
call
pop
ret
jmp
jmp
push
mov
push
andl
call
cmpw
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
movl
call
test
je
cmpl
jne
cmpl
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmpb
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmpb
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
pushl
call
xor
ret
push
pop
ret
mov
push
cmp
push
jne
push
xor
cmp
push
mov
jle
mov
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pushl
push
pushl
call
pop
pop
jmp
cmp
jne
mov
mov
mov
test
je
push
push
push
call
mov
cmp
jne
pushl
call
pop
pop
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
mov
xor
mov
cmp
je
add
inc
cmp
jl
mov
shl
cmp
jne
mov
ret
xor
ret
push
mov
pushl
call
pushl
call
pushl
call
pushl
call
pop
ret
push
push
mov
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
push
call
pushl
call
pop
add
cmp
jl
pushl
call
pushl
call
pushl
call
pushl
call
pop
pop
ret
push
mov
mov
push
cmpl
lea
jne
push
push
call
mov
pop
test
jne
push
call
pop
push
call
cmpl
pop
push
jne
call
mov
jmp
call
pop
push
call
pop
pop
pushl
call
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
pushl
push
call
push
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
cmpl
jne
push
push
pushl
call
add
test
je
push
pop
ret
xor
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
pushl
call
mov
pop
cmp
pop
mov
jne
xor
jmp
test
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
push
pop
cmp
jne
push
andl
pop
xor
mov
cmp
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
andl
push
pop
xor
mov
lea
rep
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
push
call
pop
mov
mov
jmp
andl
xor
mov
stos
stos
stos
jmp
cmpl
je
call
call
jmp
or
push
call
pop
mov
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
test
je
mov
cmp
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jmp
push
call
pop
ret
cmp
jne
push
call
pop
movl
lea
push
lea
push
push
call
add
mov
test
je
push
pushl
pushl
call
add
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
mov
mov
pop
pop
pop
leave
ret
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
cmp
jne
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
je
jmp
push
call
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
mov
cmp
ja
push
call
pop
movl
mov
shr
push
call
pop
mov
orl
call
mov
test
jne
push
jmp
mov
push
call
pop
ret
mov
test
jne
push
pop
add
and
push
push
pushl
call
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
cmp
jl
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmp
or
inc
add
inc
add
cmp
hlt
cmp
in
cmp
in
inc
add
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
inc
add
inc
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdivrs
inc
add
cmp
and
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
inc
add
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sarb
inc
add
cmp
call
cmp
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
imul
mov
mov
cmp
ja
xor
cmp
jne
push
pop
add
and
mov
jmp
xor
mov
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
orl
call
cmp
je
pushl
jmp
xor
mov
push
call
pop
ret
cmp
jne
cmp
ja
push
call
pop
movl
mov
shr
push
call
pop
mov
orl
call
cmp
je
push
push
pushl
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
push
call
pop
ret
mov
mov
mov
pop
pop
pop
leave
ret
push
pushl
pushl
pushl
call
add
ret
push
mov
sub
push
andl
push
push
mov
mov
lea
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
orl
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
divl
mov
mov
cmpl
movzbl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
sub
jmp
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsbl
push
call
pop
mov
sub
cmp
jae
mov
orl
cmp
jb
jne
or
xor
divl
cmp
jbe
orl
jmp
imul
add
mov
mov
incl
mov
jmp
mov
decl
mov
test
jne
test
je
mov
mov
andl
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
testb
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
push
pushl
pushl
pushl
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
mov
cmp
jne
mov
ret
dec
dec
neg
sbb
not
and
ret
push
mov
mov
push
cmp
jne
mov
cmp
ja
mov
jmp
cmp
jne
mov
add
and
cmp
ja
mov
jmp
cmp
jne
mov
test
jbe
lea
push
call
cmpb
pop
jb
cmp
ja
push
call
test
pop
je
mov
movl
jmp
add
and
cmp
ja
call
test
je
mov
movl
push
pop
jmp
xor
pop
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
push
mov
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
decb
jne
mov
and
jmp
lea
mov
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
push
push
push
lea
shl
push
pushl
call
test
je
or
jmp
mov
xor
cmp
mov
mov
jle
jmp
xor
mov
push
push
call
test
jne
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
jmp
xor
push
mov
mov
mov
xor
pop
cmp
lea
rep
jl
push
pushl
call
test
jne
mov
xor
lea
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
incl
lea
cmp
jl
test
jne
cmp
jg
cmp
lea
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
andl
lea
mov
mov
andl
lea
mov
cmp
mov
je
mov
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
mov
cmp
jne
cmpl
je
mov
cmp
jge
mov
shr
or
or
jmp
add
mov
shr
or
or
cmp
jne
mov
mov
cmp
jne
cmp
jne
incl
addl
cmpl
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
mov
cmp
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
mov
ret
mov
add
and
cmp
ja
push
mov
pop
ret
xor
ret
cmpl
push
push
push
push
jne
mov
jmp
push
push
pushl
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmpl
jne
mov
cmpl
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
orb
lea
mov
movl
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
pushl
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
pushl
call
pop
ret
orl
pop
ret
push
mov
push
push
push
mov
push
cmpl
je
andl
lea
mov
cmpl
jne
mov
push
add
push
push
call
test
je
orl
decl
mov
test
je
cmp
jbe
mov
incl
decl
je
sub
sub
test
jge
cmpl
mov
mov
je
cmpl
jne
push
lea
pop
cmpl
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmpl
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzbl
add
andb
cmpl
movl
jne
incl
cmpl
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
pushl
call
add
test
jne
mov
addl
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmpl
je
cmpl
jne
mov
cmp
je
jmp
mov
andl
mov
mov
sub
sub
sar
shl
add
cmpl
jne
cmpl
jge
add
incl
cmpl
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
pushl
push
call
mov
add
test
mov
jle
lea
mov
orb
lea
mov
mov
mov
mov
movl
add
add
decl
jne
mov
lea
cmp
jae
cmpl
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzbl
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
andl
lea
mov
lea
jmp
add
cmpb
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzbl
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmpb
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzbl
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
andl
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
push
movzbl
push
mov
andl
mov
sub
sar
cmp
lea
jbe
mov
sub
mov
add
movl
jmp
jae
mov
lea
lea
cmp
jb
lea
cmp
jae
cmpb
jne
inc
jmp
cmp
jne
mov
mov
mov
cmp
ja
cmp
jbe
lea
cmp
jae
xor
mov
cmp
jne
inc
cmpb
je
mov
jmp
andl
lea
mov
sub
add
movl
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
mov
push
push
mov
cmp
jne
incl
mov
cmp
je
andl
andl
mov
lea
mov
lea
cmpl
jne
cmpl
jne
cmp
jne
incl
jmp
mov
lea
cmp
jae
cmpb
jne
xor
and
and
and
lea
cmp
jne
incl
mov
cmpb
jne
incl
incl
inc
jmp
mov
cmp
jge
cmpl
jne
mov
cmp
jl
mov
movl
andl
lea
movzbl
add
cmp
jge
cmpb
jne
movzbl
inc
jmp
mov
mov
cmp
jl
mov
cmp
jne
cmpl
je
incl
mov
add
add
add
cmpl
mov
jl
mov
cmp
mov
je
jmp
or
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
neg
sbb
and
add
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
push
call
mov
mov
push
mov
call
pop
mov
pop
pop
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
push
call
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
call
movl
pop
ret
call
mov
pop
mov
ret
cmp
jb
cmp
ja
call
movl
pop
ret
call
movl
pop
ret
call
add
ret
call
add
ret
mov
add
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
sub
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
leave
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jmp
add
bound
in
inc
add
bound
aam
inc
add
bound
les
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
arpl
sub
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
arpl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
fs
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
fs
add
fs
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
jl
cmp
jg
push
call
incl
pop
cmp
je
push
call
jmp
cmp
push
je
cmp
je
pushl
push
call
pop
pop
jmp
lea
mov
jmp
mov
movl
cmp
mov
je
cmpb
jne
cmpb
jne
cmpb
jne
push
push
call
mov
pop
cmp
pop
je
jmp
xor
mov
sub
mov
je
cmpb
je
movl
mov
jmp
mov
push
push
pushl
call
add
test
jne
pushl
call
cmp
pop
je
incl
add
cmp
jle
inc
push
push
call
mov
pop
test
pop
jne
cmpb
jne
cmpl
jg
push
lea
push
push
call
andb
lea
push
pushl
call
add
test
je
incl
add
cmpb
je
inc
cmpb
je
push
push
call
mov
pop
test
pop
jne
xor
push
call
pop
xor
jmp
cmpl
jne
xor
jmp
push
push
lea
push
push
push
call
mov
add
cmp
je
mov
mov
cmp
je
pushl
lea
push
call
pop
test
pop
je
lea
push
push
call
pop
test
pop
jne
and
jmp
incl
add
inc
cmp
jle
xor
cmp
je
call
pushl
mov
call
pop
mov
jmp
cmp
jmp
call
mov
push
call
pop
decl
mov
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
push
push
lea
push
lea
push
pushl
call
add
test
je
lea
push
call
inc
push
call
pop
mov
test
pop
je
lea
lea
shl
push
mov
mov
mov
mov
lea
lea
mov
push
lea
push
call
mov
mov
lea
push
pushl
call
mov
push
movzwl
mov
lea
push
pushl
call
mov
add
cmp
jne
mov
cmp
jne
mov
call
test
je
mov
pushl
mov
call
mov
pop
mov
mov
mov
xor
jmp
cmpl
je
pushl
call
pop
mov
pop
pop
pop
leave
ret
mov
push
push
push
push
push
test
pop
jne
push
call
pop
mov
andb
pushl
mov
push
pushl
push
pushl
call
mov
add
mov
push
pushl
call
pushl
add
pushl
call
add
test
je
xor
pushl
mov
push
pushl
push
pushl
call
add
cmp
jl
pop
pop
test
pop
pop
jne
mov
ret
pushl
call
andl
mov
pop
ret
push
mov
sub
push
push
mov
xor
cmp
push
je
cmpb
jne
cmp
jne
mov
mov
and
cmp
movb
je
mov
mov
mov
mov
cmp
je
mov
jmp
mov
push
push
call
pop
test
pop
je
mov
push
push
call
pop
test
pop
je
lea
push
push
call
pop
test
pop
jne
lea
push
lea
push
push
call
add
test
jne
xor
jmp
movzwl
mov
lea
push
push
call
cmpb
pop
pop
je
push
jmp
push
push
call
pop
pop
cmpl
je
push
push
pushl
call
add
cmpl
je
push
push
pushl
call
add
push
pushl
call
pop
mov
pop
pop
pop
pop
leave
ret
xor
ret
push
mov
test
jle
push
lea
pushl
add
pushl
call
pop
dec
pop
jne
pop
pop
ret
push
mov
push
push
push
mov
push
push
push
call
mov
add
mov
test
je
cmp
jne
cmpb
lea
je
add
push
push
call
pop
pop
xor
jmp
andl
push
push
call
pop
test
pop
je
cmpl
mov
lea
jne
cmp
jge
cmp
je
push
push
pushl
jmp
cmpl
jne
cmp
jge
cmp
je
push
mov
push
add
jmp
cmpl
jne
test
je
cmp
jne
push
mov
push
add
push
call
add
cmp
je
test
je
incl
lea
jmp
or
pop
pop
pop
pop
ret
push
mov
push
pushl
call
cmpb
lea
pop
pop
je
push
push
push
pushl
call
add
cmpb
lea
pop
je
push
push
push
pushl
call
add
ret
cmpl
push
je
push
push
call
mov
pop
test
pop
jne
push
pop
pop
ret
push
call
test
pop
je
push
call
push
call
pop
pop
jmp
pushl
mov
call
pushl
call
pop
mov
pop
jmp
pushl
movl
call
pushl
call
andl
pop
pop
xor
pop
ret
push
mov
push
push
movzwl
movzwl
push
mov
test
mov
mov
jne
or
jmp
push
lea
push
push
push
push
push
pop
push
call
mov
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
push
push
pushl
or
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
push
push
pushl
push
call
add
or
pop
pop
pop
leave
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
xor
cmp
push
push
movzwl
je
push
push
push
push
push
pop
push
call
push
push
push
push
mov
call
push
push
push
push
or
call
pushl
or
call
add
cmp
pop
je
pushl
call
pushl
call
pushl
call
add
mov
mov
mov
or
jmp
mov
mov
cmp
je
push
call
mov
pushl
call
mov
pushl
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pushl
call
pushl
call
pushl
call
push
mov
mov
mov
call
mov
add
mov
mov
mov
cmp
je
push
push
call
push
call
mov
add
mov
mov
mov
cmp
je
push
mov
call
pop
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
movl
mov
xor
pop
pop
pop
ret
mov
mov
test
je
push
cmp
jl
cmp
jg
sub
mov
inc
mov
test
jne
pop
ret
cmp
jne
mov
mov
lea
mov
mov
cmpb
jne
jmp
cmpl
push
je
push
push
call
mov
pop
test
pop
jne
push
pop
pop
ret
push
call
test
pop
je
push
call
push
call
pop
pop
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
call
pushl
call
pop
mov
pop
jmp
mov
pushl
mov
mov
mov
mov
mov
mov
movl
call
pushl
call
andl
pop
pop
xor
pop
ret
push
mov
push
movzwl
test
jne
or
jmp
lea
push
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
pushl
or
call
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
push
push
push
push
call
add
or
pop
pop
pop
ret
mov
mov
test
je
push
cmp
jl
cmp
jg
sub
mov
inc
mov
test
jne
pop
ret
cmp
jne
mov
mov
lea
mov
mov
cmpb
jne
jmp
push
mov
test
je
mov
cmp
je
push
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
sub
push
xor
cmp
mov
mov
je
cmp
push
push
jne
movzwl
push
push
push
push
call
add
test
jne
mov
push
call
mov
push
mov
call
push
mov
call
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
inc
cmp
jl
lea
push
pushl
call
test
je
cmpl
ja
movzwl
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzbl
movzbl
cmp
jg
mov
mov
inc
movzbl
jmp
inc
inc
cmp
jne
push
lea
push
push
push
push
pushl
push
call
add
test
je
mov
mov
xor
mov
inc
inc
inc
cmp
jl
mov
push
push
lea
push
push
pushl
push
call
add
test
je
mov
mov
cmpl
jle
cmp
je
lea
mov
cmp
je
movzbl
movzbl
cmp
jg
mov
lea
movw
inc
movzbl
inc
inc
cmp
jle
inc
inc
cmp
jne
mov
mov
add
mov
mov
cmp
je
push
call
pop
mov
mov
mov
cmp
je
push
call
pop
mov
mov
pushl
call
pushl
call
pop
mov
pop
pop
pop
jmp
pushl
call
pushl
call
pop
pop
push
pop
jmp
pushl
mov
mov
mov
call
pushl
call
pop
mov
pop
mov
xor
pop
leave
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
inc
ret
mov
test
je
mov
inc
cmp
jne
inc
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
or
nop
inc
mov
or
je
inc
bt
jae
mov
add
pop
leave
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
inc
bts
jmp
mov
mov
or
je
inc
bt
jae
lea
add
pop
leave
ret
push
xor
cmp
push
push
jne
call
test
je
mov
mov
jmp
movl
mov
cmp
je
mov
cmp
je
push
push
push
call
add
lea
cmp
mov
je
cmp
je
push
push
push
call
mov
add
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
call
jmp
call
jmp
cmp
je
cmp
je
call
jmp
call
cmp
je
add
push
call
mov
pop
cmp
je
movzwl
push
call
test
je
push
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
cmp
je
push
push
push
pushl
call
test
je
lea
push
push
push
pushl
call
test
je
add
push
push
push
call
add
push
pop
jmp
xor
pop
pop
pop
ret
push
mov
push
push
push
xor
cmp
push
pop
jl
test
je
mov
add
cltd
sub
mov
mov
sar
pushl
lea
mov
pushl
call
pop
test
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
pop
pop
ret
pushl
call
pushl
sub
neg
sbb
inc
mov
call
sub
pop
neg
sbb
andl
inc
cmpl
pop
mov
je
movl
jmp
pushl
call
pop
mov
push
push
call
mov
test
je
test
je
test
jne
andl
ret
push
mov
sub
push
push
push
pushl
call
pop
mov
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
pop
mov
test
pop
mov
jne
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
pop
test
pop
jne
orw
mov
mov
jmp
testb
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
pushl
orl
mov
call
cmp
pop
jne
jmp
testb
jne
push
call
test
pop
je
orl
mov
mov
mov
and
cmp
je
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
jne
andl
push
pop
jmp
lea
push
pushl
call
pop
test
pop
jne
orb
xor
cmp
jne
cmp
je
pushl
call
cmp
pop
jne
push
jmp
xor
cmp
jne
mov
cmp
je
push
lea
push
pushl
call
add
test
jne
push
push
call
pop
test
pop
je
orb
cmp
jne
mov
mov
not
shr
and
pop
pop
pop
leave
ret
pushl
call
sub
pop
neg
sbb
inc
mov
je
movl
jmp
pushl
call
pop
mov
push
push
call
testb
jne
andl
ret
push
mov
sub
push
pushl
call
pop
mov
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
push
pop
jmp
lea
push
pushl
call
pop
test
pop
jne
cmp
jne
push
jmp
cmpl
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
push
push
call
pop
test
pop
je
orl
mov
mov
mov
not
shr
and
pop
leave
ret
pushl
call
sub
pop
neg
sbb
push
inc
push
mov
call
testb
jne
andl
ret
push
mov
sub
push
pushl
call
pop
mov
lea
push
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
push
pop
jmp
lea
push
pushl
call
pop
test
pop
jne
push
call
test
pop
je
orl
mov
mov
mov
not
shr
and
pop
leave
ret
orw
call
mov
mov
ret
push
mov
push
push
push
mov
test
je
cmpb
je
push
push
call
pop
test
pop
je
push
push
call
pop
test
pop
jne
lea
push
push
push
jmp
lea
push
push
push
pushl
call
test
je
lea
push
call
pop
pop
leave
ret
mov
mov
cmp
je
inc
inc
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
lea
push
push
mov
and
push
or
push
call
test
je
lea
push
call
cmp
pop
je
cmpl
je
push
pushl
call
pushl
mov
call
pop
cmp
pop
pop
jne
xor
leave
ret
push
pop
leave
ret
push
mov
sub
lea
movl
push
call
test
je
cmpl
jne
push
pop
leave
ret
xor
leave
ret
push
mov
push
push
push
push
xor
pop
lea
mov
cltd
sub
sar
mov
imul
mov
cmp
je
cmp
jae
lea
jmp
lea
cmp
jle
push
pushl
pushl
pushl
call
pop
pop
pop
pop
ret
mov
dec
je
dec
dec
je
sub
je
sub
je
sub
je
dec
je
dec
dec
jne
imul
add
jmp
imul
mov
jmp
imul
mov
jmp
imul
add
jmp
imul
add
jmp
imul
add
jmp
imul
add
test
je
cmp
jl
mov
lea
push
push
push
call
add
andb
push
pop
jmp
mov
xor
mov
inc
test
je
cmp
jl
cmp
jg
add
jmp
cmp
jl
cmp
jg
add
add
movsbl
shl
add
jmp
ret
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jg
inc
jmp
ret
push
mov
push
push
push
push
mov
push
mov
xor
movl
pushl
call
pushl
mov
call
add
pop
add
decl
pop
lea
jne
inc
push
call
mov
pop
test
mov
je
mov
push
pop
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
add
dec
jne
andb
mov
pop
pop
pop
leave
ret
push
mov
push
push
andl
push
push
push
mov
movl
lea
pushl
call
pushl
mov
call
add
pop
add
decl
pop
lea
mov
jne
inc
push
call
mov
pop
test
mov
je
push
add
pop
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
add
dec
jne
andb
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
xor
mov
movl
mov
pushl
call
pushl
mov
mov
call
addl
pop
pop
add
mov
decl
lea
jne
lea
movl
mov
mov
pushl
call
pushl
mov
mov
call
addl
pop
pop
add
mov
decl
lea
jne
pushl
call
pushl
mov
call
pushl
add
lea
call
pushl
lea
call
pushl
lea
call
lea
add
push
call
mov
add
test
je
push
lea
pushl
push
call
lea
mov
add
sub
mov
mov
movl
mov
mov
mov
pushl
push
call
push
call
mov
lea
mov
mov
pushl
push
call
push
call
addl
addl
add
decl
lea
jne
lea
movl
mov
lea
mov
jmp
mov
mov
mov
pushl
push
call
push
call
lea
mov
mov
mov
pushl
push
call
push
call
addl
addl
add
decl
lea
jne
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
add
mov
pop
mov
pop
pop
leave
ret
push
pushl
pushl
pushl
pushl
call
add
ret
push
mov
push
push
mov
push
push
push
mov
mov
push
call
mov
xor
cmp
je
push
call
push
call
pop
movl
jmp
mov
mov
cmp
jne
mov
cmp
mov
jbe
mov
mov
test
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
jmp
andl
inc
cmpb
jne
movl
inc
pushl
lea
push
lea
push
mov
pushl
push
call
add
inc
cmpl
ja
cmpl
je
push
call
pop
jmp
push
call
cmpl
pop
pop
pop
jbe
mov
andb
mov
sub
leave
ret
xor
leave
ret
push
mov
movsbl
push
push
cmp
push
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
dec
jne
mov
push
mov
mov
pop
mov
cltd
idiv
test
jne
push
pop
pushl
pushl
push
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
mov
mov
movb
incl
mov
decl
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
sub
je
dec
dec
je
dec
dec
je
dec
je
dec
jne
mov
pushl
mov
mov
pushl
mov
push
mov
push
cltd
pop
idiv
push
mov
mov
cltd
pop
add
idiv
imul
add
push
call
add
jmp
mov
andl
push
pushl
pushl
pushl
pushl
jmp
mov
mov
mov
mov
test
jne
push
pop
jmp
lea
jmp
mov
mov
mov
mov
mov
cmp
jge
xor
jmp
mov
push
cltd
pop
idiv
push
mov
mov
cltd
pop
idiv
cmp
jl
inc
pushl
pushl
push
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
sub
jne
mov
pushl
mov
mov
pushl
mov
push
inc
push
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
cmpl
je
mov
mov
mov
andl
push
push
push
pushl
pushl
jmp
mov
mov
mov
push
push
push
pushl
pushl
call
add
cmpl
je
mov
push
push
push
pushl
movb
incl
decl
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
pushl
mov
mov
pushl
mov
pushl
jmp
mov
pushl
mov
mov
pushl
mov
push
jmp
sub
je
sub
je
dec
je
dec
je
dec
jne
call
mov
pushl
xor
cmp
pushl
setne
pushl
jmp
mov
pushl
mov
mov
pushl
mov
push
push
cltd
pop
idiv
jmp
cmpl
je
mov
andl
push
pushl
pushl
pushl
pushl
call
add
jmp
mov
push
pushl
pushl
pushl
pushl
jmp
pushl
mov
mov
mov
pushl
push
pushl
jmp
mov
pushl
cmpl
pushl
mov
jg
pushl
jmp
pushl
call
add
pop
pop
pop
pop
ret
mov
push
push
cmpl
je
mov
mov
mov
test
je
mov
mov
incl
inc
decl
jne
pop
pop
ret
push
mov
push
xor
push
cmp
mov
je
pushl
pushl
pushl
call
add
jmp
mov
mov
cmp
jae
dec
push
mov
lea
test
je
push
mov
push
cltd
pop
idiv
mov
add
mov
mov
cltd
idiv
incl
dec
cmp
mov
jne
pop
mov
add
sub
pop
jmp
mov
pop
leave
ret
push
mov
push
push
mov
push
mov
mov
cmpl
jbe
mov
push
cltd
pop
idiv
mov
add
mov
inc
cltd
idiv
decl
test
mov
jg
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
mov
push
push
cmpb
je
mov
mov
xor
cmp
je
mov
mov
mov
lea
mov
mov
mov
mov
inc
incl
mov
cmp
je
decl
mov
movsbl
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
movzbl
testb
je
mov
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
cmpb
jne
pop
pop
pop
leave
ret
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
jmp
push
push
call
pop
test
pop
jne
add
jmp
push
push
call
pop
test
pop
jne
add
mov
movb
jmp
test
je
add
mov
test
je
cmpl
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
jmp
inc
jmp
add
jmp
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
dec
dec
je
dec
dec
jne
movb
jmp
movb
jmp
mov
cmpl
mov
jg
mov
jmp
mov
test
jle
cmpl
jbe
mov
mov
movzbl
testb
je
cmpl
jbe
mov
mov
incl
inc
decl
mov
mov
mov
incl
inc
decl
decl
cmpl
jg
mov
jmp
dec
je
dec
je
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
jmp
dec
je
dec
je
jmp
movl
movb
pushl
push
push
pushl
pushl
call
add
jmp
push
mov
sub
cmpl
push
push
push
jne
xor
lea
push
push
push
lea
pushl
mov
pushl
call
mov
add
cmp
jne
call
cmp
jne
push
push
push
pushl
pushl
call
mov
add
cmp
je
push
call
mov
pop
cmp
je
push
push
push
movl
pushl
pushl
call
mov
add
cmp
je
push
call
pop
cmp
mov
mov
jne
cmp
je
push
call
pop
or
pop
pop
pop
leave
ret
push
push
push
call
add
cmp
je
push
call
pop
jmp
cmpl
jne
push
mov
push
push
pushl
pushl
call
add
test
je
mov
andb
cmpl
mov
jle
movzbl
push
push
call
pop
pop
jmp
mov
movzbl
mov
and
test
je
mov
mov
imul
add
sub
inc
inc
mov
cmp
jl
xor
jmp
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
push
push
pushl
pushl
pushl
push
pushl
call
test
je
movl
lea
add
and
call
mov
mov
mov
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
mov
cmp
jne
mov
mov
lea
lea
orw
orw
push
pushl
pushl
pushl
push
call
mov
cmpw
je
cmpw
jne
push
push
pushl
call
add
mov
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jne
cmpl
jge
push
push
jmp
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
mov
cmpl
mov
push
push
push
je
mov
movb
inc
neg
jmp
mov
mov
mov
xor
divl
mov
mov
xor
divl
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
andb
dec
mov
mov
mov
mov
dec
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
push
pop
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
pushl
pushl
pushl
call
mov
add
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
push
pop
push
pushl
pushl
pushl
pushl
call
mov
pop
ret
push
mov
cmpl
push
push
mov
push
je
mov
mov
movb
inc
neg
adc
neg
jmp
mov
mov
mov
xor
push
pushl
push
push
call
mov
xor
push
pushl
push
push
call
mov
mov
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
jb
test
ja
andb
dec
mov
mov
mov
mov
mov
dec
inc
cmp
mov
jb
pop
pop
pop
pop
ret
push
mov
push
pushl
pushl
pushl
pushl
call
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
lock
cmpl
jg
push
jmp
lock
push
call
movl
mov
xor
nop
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
mov
pop
or
jne
lock
jmp
push
call
add
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
or
je
mov
mov
lea
cmpl
jne
mov
mov
mov
lea
mov
or
mov
je
or
je
inc
inc
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
jmp
lock
cmpl
jg
push
jmp
lock
mov
push
call
movl
mov
xor
xor
mov
mov
or
mov
je
or
je
inc
inc
push
push
push
call
mov
add
call
add
pop
cmp
jne
dec
jne
xor
cmp
je
mov
jb
neg
pop
or
jne
lock
jmp
mov
push
call
add
mov
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
push
cltd
mov
push
push
mov
push
mov
call
mov
add
adc
mov
mov
movzbl
inc
jmp
cmpl
mov
jne
neg
mov
adc
neg
jmp
mov
pop
pop
pop
pop
pop
ret
cmpl
jne
push
call
cmpl
pop
jne
call
incl
push
call
pop
ret
push
call
call
push
call
pop
pop
ret
push
mov
push
push
push
push
push
push
pop
xor
push
mov
call
orl
orl
mov
movl
call
mov
pop
cmp
jne
push
call
movl
call
cmp
je
mov
mov
imul
cmp
push
pop
mov
mov
je
mov
imul
add
mov
cmp
je
mov
cmp
je
sub
mov
imul
mov
jmp
mov
mov
lea
mov
push
push
push
mov
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
mov
andb
lea
push
push
push
pushl
push
push
push
pushl
call
test
je
cmp
jne
mov
andb
jmp
cmpb
je
mov
cmp
je
push
push
call
pop
test
pop
je
pushl
call
push
call
inc
push
call
add
cmp
mov
je
push
push
call
push
call
push
push
pushl
call
mov
add
add
andb
cmpb
jne
movl
inc
push
call
pop
mov
mov
imul
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
imul
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpb
jne
inc
push
call
pop
mov
add
mov
mov
cmp
jl
cmp
jg
inc
jmp
cmpl
je
neg
mov
movsbl
test
mov
je
push
push
pushl
call
mov
add
andb
jmp
mov
andb
jmp
push
call
pop
pop
pop
pop
leave
ret
push
push
call
pushl
call
push
mov
call
add
mov
pop
ret
push
push
push
xor
cmp
jne
xor
jmp
mov
push
pop
mov
cmp
jne
cmp
je
cmp
je
movzwl
push
cmp
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
push
push
jmp
movzwl
push
push
movzwl
push
push
push
push
push
call
movzwl
add
cmp
push
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
movzwl
push
pushl
push
push
call
add
jmp
movzwl
push
push
movzwl
push
push
pushl
push
jmp
push
push
push
push
push
push
push
push
push
push
push
call
push
push
push
push
push
push
push
push
pushl
push
push
call
add
mov
mov
mov
cmp
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
mov
cmpl
push
mov
push
jne
mov
mov
andl
mov
jne
shl
mov
jmp
shl
mov
mov
lea
imul
lea
push
sar
mov
push
add
lea
pop
cltd
idiv
mov
pop
cmp
jg
imul
sub
add
lea
jmp
imul
sub
add
add
cmpl
jne
cmpl
jne
mov
jmp
mov
cmp
jle
sub
jmp
mov
test
jne
mov
jmp
mov
add
cmpl
jne
mov
mov
imul
add
mov
imul
add
imul
add
mov
jmp
mov
mov
imul
add
imul
add
add
imul
add
mov
jns
add
dec
mov
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
push
push
push
push
call
test
je
push
jmp
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
cmp
je
mov
add
and
call
mov
mov
mov
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
call
test
je
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
push
push
push
push
call
test
je
push
jmp
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
mov
add
ret
push
xor
cmp
jne
mov
cmp
jl
cmp
jg
add
pop
ret
push
mov
push
push
call
cmp
mov
je
push
call
push
call
pop
push
pop
pushl
call
test
pop
mov
je
push
call
pop
jmp
push
call
mov
pop
pop
pop
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
push
call
pushl
call
push
mov
call
add
mov
pop
ret
cmpl
push
push
mov
push
je
test
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
mov
test
je
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
jmp
mov
lea
jmp
xor
pop
pop
pop
ret
push
mov
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
push
push
push
mov
push
xor
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
pushl
push
push
call
test
je
push
pushl
call
mov
add
pop
cmp
pop
jne
xor
pop
pop
pop
pop
pop
ret
or
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
push
pop
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
push
mov
push
push
push
push
push
call
test
je
movl
mov
cmp
jle
push
pushl
call
pop
pop
mov
mov
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jle
mov
jmp
cmp
jg
lea
push
pushl
call
test
je
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
push
jmp
cmp
jle
cmpl
jb
lea
cmp
je
mov
cmp
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
push
push
push
pushl
push
pushl
call
mov
cmp
je
mov
add
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
push
pop
cmp
je
pushl
pushl
push
pushl
push
pushl
mov
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
pushl
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
push
push
xor
cmp
je
push
pushl
call
mov
pop
cmp
pop
mov
je
cmp
je
mov
xor
cmp
sete
cmp
jne
push
call
pop
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
jne
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
sub
mov
mov
push
pushl
call
mov
pop
test
pop
jl
cmpl
je
test
je
pushl
lea
call
pop
cmpl
je
mov
inc
mov
add
jmp
mov
shl
push
pushl
call
pop
test
pop
je
jmp
mov
mov
jmp
test
jne
test
jge
neg
lea
push
push
call
pop
test
pop
je
mov
mov
andl
mov
cmpl
je
pushl
call
inc
inc
push
call
mov
pop
test
pop
je
pushl
push
call
mov
pop
sub
pop
add
andb
inc
neg
sbb
not
and
push
push
call
push
call
pop
xor
jmp
push
mov
push
mov
test
je
mov
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
mov
add
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
push
mov
xor
test
jne
xor
pop
ret
cmpl
lea
je
mov
inc
add
test
jne
push
push
lea
push
push
call
mov
pop
test
mov
jne
push
call
pop
mov
mov
test
je
push
add
call
mov
mov
pop
add
jmp
andl
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
mov
cmp
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
push
pop
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
push
pop
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
xor
push
call
pop
ret
cmp
jne
cmp
ja
cmp
jbe
add
and
jmp
push
pop
mov
mov
cmp
ja
push
call
pop
movl
lea
push
lea
push
push
call
add
mov
mov
test
je
cmp
jae
mov
shr
push
push
pushl
pushl
call
add
test
je
mov
mov
jmp
push
call
pop
mov
test
je
movzbl
shl
mov
cmp
jb
mov
push
pushl
pushl
call
push
pushl
pushl
call
add
mov
cmpl
jne
push
push
pushl
call
mov
test
je
movzbl
shl
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
pushl
call
add
jmp
push
push
push
pushl
call
mov
orl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
mov
mov
push
call
pop
xor
ret
xor
cmp
ja
cmp
jne
push
pop
add
and
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
push
push
jne
pushl
pushl
call
pop
pop
jmp
push
call
mov
pop
movzbw
test
je
movzbl
testb
je
mov
inc
test
je
movzwl
movzbl
shl
or
cmp
je
jmp
movzwl
cmp
je
inc
jmp
push
call
pop
xor
jmp
push
call
pop
lea
jmp
push
call
mov
pop
movzwl
sub
neg
sbb
not
and
pop
pop
pop
ret
push
mov
test
je
push
call
inc
push
call
pop
test
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
add
or
add
cli
rolb
call
roll
add
add
xor
add
inc
rolb
push
rolb
push
rolb
mov
add
pushf
rolb
mov
add
rolb
or
add
cld
mov
add
dec
lds
add
add
mov
add
inc
roll
push
roll
roll
jb
add
xchg
add
lcall
add
roll
out
add
add
add
push
ret
cs
dec
ret
pop
ret
push
ret
xchg
ret
movsb
ret
pop
lds
add
ret
fadd
add
call
ret
add
adc
add
push
ret
add
sub
add
cmp
add
inc
ret
add
push
ret
add
insb
ret
add
test
add
pushf
ret
add
lods
ret
add
mov
ret
add
into
ret
add
fcmovb
add
call
ret
add
or
add
sbb
add
xor
add
inc
les
add
add
les
add
add
add
lods
les
add
add
loopne
add
test
add
add
cmp
add
add
add
inc
add
addb
add
add
add
imul
pop
pop
pop
push
xor
pop
push
pop
pop
inc
dec
push
pop
xor
pop
push
add
gs
outsb
and
add
pop
push
xor
pop
push
pop
pop
inc
dec
push
pop
xor
pop
push
add
gs
outsb
and
add
add
fs
arpl
imul
pop
jae
jp
sub
cmp
and
pushl
inc
add
inc
add
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
push
push
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
add
add
jb
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
incl
add
add
ss
add
incl
add
add
incl
add
add
inc
add
incl
add
add
incl
add
add
incl
add
add
cmp
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
decl
inc
add
inc
add
incl
pop
inc
add
pop
inc
add
incl
pop
inc
add
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
cmp
add
cmp
add
add
sub
add
add
add
push
popa
jb
addr16
jns
add
add
jne
jne
jns
inc
push
add
inc
arpl
outsl
jb
inc
jb
outsb
je
outsb
popa
add
add
jb
add
add
inc
outsl
insb
outsl
insl
bound
add
add
push
outsb
gs
gs
popa
add
add
imul
push
gs
bound
add
push
outsl
jne
push
imul
push
popa
outsb
popa
insl
popa
add
dec
jne
gs
bound
jb
add
inc
outsl
jae
popa
and
arpl
add
imul
add
popa
je
insl
popa
insb
popa
add
add
outsb
popa
fs
add
push
jo
outsb
imul
outsl
fs
and
jb
add
add
jae
jb
insb
imul
insb
imul
je
imul
popa
outsb
add
inc
gs
imul
imul
popa
outsb
imul
jno
add
push
ja
fs
add
push
ja
imul
insb
popa
outsb
add
gs
popa
outsb
imul
popa
outsb
arpl
add
outsb
arpl
add
outsb
insb
popa
outsb
add
outsb
outsb
imul
imul
popa
outsb
imul
jb
imul
push
outsl
jb
add
jne
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
jne
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
dec
inc
push
add
push
add
insl
insl
cmp
add
fs
dec
dec
dec
dec
and
and
jns
add
fs
jns
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
add
add
call
popl
push
popl
hlt
popl
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
add
inc
fwait
inc
add
fwait
inc
add
add
add
fistpl
add
add
add
jmp
mov
call
mov
incl
add
add
inc
add
incl
add
add
mov
add
add
add
in
add
cmp
add
mov
add
add
add
add
rolb
sbb
add
cmp
add
add
add
sbb
add
or
add
cli
rolb
call
roll
add
add
xor
add
inc
rolb
push
rolb
push
rolb
mov
add
pushf
rolb
mov
add
rolb
or
add
cld
mov
add
dec
lds
add
add
mov
add
inc
roll
push
roll
roll
jb
add
xchg
add
lcall
add
roll
out
add
add
add
push
ret
cs
dec
ret
pop
ret
push
ret
xchg
ret
movsb
ret
pop
lds
add
ret
fadd
add
call
ret
add
adc
add
push
ret
add
sub
add
cmp
add
inc
ret
add
push
ret
add
insb
ret
add
test
add
pushf
ret
add
lods
ret
add
mov
ret
add
into
ret
add
fcmovb
add
call
ret
add
or
add
sbb
add
xor
add
inc
les
add
add
les
add
add
add
lods
les
add
add
loopne
add
test
add
add
cmp
add
add
add
inc
add
addb
add
insl
jae
cs
insb
add
gs
je
dec
popa
outsb
fs
add
inc
add
gs
je
dec
jne
gs
add
fiaddl
dec
jae
bound
addr16
jb
jae
outsb
je
filds
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
je
add
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
sgdtl
je
jne
jb
outsb
je
push
add
dec
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
push
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
dec
inc
dec
xor
cs
insb
add
or
inc
gs
gs
dec
gs
imul
push
gs
gs
inc
insb
imul
inc
gs
gs
inc
outsl
insb
outsl
jb
add
add
je
popa
jae
gs
jp
jb
popa
jo
add
add
outsl
jb
inc
outsl
arpl
add
dec
xor
cs
insb
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
imul
inc
js
je
jb
arpl
jae
iret
add
insl
imul
outsl
arpl
jae
add
inc
jne
jb
outsb
je
jb
arpl
jae
filds
push
outsb
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
lds
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pushf
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
pop
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jne
jb
outsb
je
push
dec
add
xlat
add
push
gs
popa
insb
jne
add
add
inc
insb
insb
outsl
arpl
add
add
inc
jb
add
dec
popa
jae
inc
jb
outsl
jb
add
add
inc
gs
popa
insb
jne
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
jb
jns
mov
jo
jb
popa
je
add
cmc
add
jb
jne
insb
inc
jb
add
jo
jb
add
pop
add
insb
push
outsb
ja
outsb
add
add
imul
leave
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
loop
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
cwtl
add
je
insb
inc
jo
inc
js
je
add
add
je
push
dec
outsb
outsw
add
add
je
inc
push
add
dec
add
je
inc
dec
inc
push
add
mov
jo
insb
insb
outsl
arpl
roll
gs
jo
gs
insb
insb
outsl
arpl
xlat
add
inc
popa
fs
jb
je
push
je
add
inc
gs
jb
arpl
fs
jae
add
jecxz
dec
outsl
popa
fs
imul
add
push
add
insb
je
inc
jns
gs
outsl
push
imul
loopne
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
jo
inc
gs
je
imul
push
add
int3
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
gs
filds
dec
jae
popa
insb
imul
add
add
push
popa
insb
imul
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
mov
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
mov
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
lea
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
xor
dec
outsl
arpl
gs
outsb
outsw
push
add
and
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
stos
xor
add
add
add
add
push
pop
pushl
xorl
add
call
push
insl
test
pushl
or
inc
jbe
add
dec
add
popa
push
rorl
pop
or
outsb
sahf
dec
addr16
iret
mov
mov
add
sbb
pop
out
push
mov
pushl
or
inc
jbe
add
outsb
dec
add
popa
mov
add
rorb
pop
lock
sahf
mov
out
add
mov
rorl
loop
jne
bound
mov
arpl
mov
inc
cmp
lcall
sbb
or
pop
call
rorb
les
in
rorb
xchg
stos
jmp
mov
bound
push
nop
xchg
call
jl
pop
sbb
mov
mov
jno
cmc
jmp
mov
add
cld
push
mov
add
imull
call
das
aad
push
pushl
loop
jne
bound
mov
popf
xchg
ret
rorb
adc
addb
push
or
push
or
bound
add
or
movsl
dec
add
maskmovq
in
xchg
push
in
bound
mov
cmp
popf
sbb
pop
cld
mov
dec
adc
or
inc
nop
outsb
rep
sbb
sti
das
daa
outsb
add
xor
in
jmp
lret
jns
ss
ret
rorl
in
or
mov
je
cmp
clc
mov
xor
adcl
or
shlb
call
cmp
ja
adc
add
out
or
ror
add
ret
rcrb
pop
and
mov
inc
adc
insb
xor
movsb
add
bound
mov
cmp
and
loope
add
loope
in
inc
cld
or
bound
subl
add
in
add
sahf
scas
insb
insb
loope
add
in
add
popa
add
sbb
sbbl
inc
add
push
xor
xchg
cmp
addb
push
add
in
add
sahf
call
in
mov
je
in
lea
mov
jne
mov
bound
rcrb
dec
les
mov
push
data16
rcrl
lcall
lock
bound
add
out
shlb
bound
mov
push
mov
test
es
jp
js
add
mov
sbb
jne
adc
xchg
mov
inc
loope
inc
outsb
and
ret
push
repnz
sbb
mov
out
outsb
imulb
sbb
out
or
lds
or
push
add
xchg
mov
sbb
cmpsb
je
jmp
mov
insb
xchg
mov
push
decb
cmpsl
ljmp
sbb
add
mov
jmp
or
aam
movsb
mov
inc
push
xor
bound
out
push
mul
bound
jae
stos
call
add
rclb
call
cmc
mov
jae
xor
out
nop
jb
inc
nop
jb
fwait
int
shr
int
roll
push
jle
dec
jp
addb
scas
or
pop
jae
jecxz
clc
jg
sbb
call
repnz
movsb
rep
int
jp
aaa
pop
add
mov
push
leave
inc
xor
leave
call
xchg
nop
ret
sub
cmp
cltd
inc
sbb
in
xor
mov
outsl
arpl
or
adcb
add
jne
jb
or
in
add
in
imul
push
insb
outsl
sarb
add
push
and
andb
in
and
or
xor
sti
inc
pop
push
in
js
xchg
inc
sbb
hlt
push
or
orb
xor
imul
bound
add
push
insb
insb
in
add
in
add
in
add
in
add
in
int
in
int
inc
or
inc
jp
dec
xor
gs
add
enter
mov
outsl
pop
fldt
and
and
aaa
mov
adc
and
lcall
mulb
mov
insl
ja
lret
dec
call
push
sub
imul
xlat
cmpsl
sub
inc
or
push
push
inc
lea
xchg
repz
fsubp
xchg
pop
pusha
inc
cmpsl
push
mov
mov
or
inc
dec
hlt
or
xlat
das
pmulhuw
in
mov
ljmp
mulps
xor
fyl2xp1
xchg
mov
fisubrl
and
xor
cltd
daa
mov
imul
js
cmp
imul
stos
pusha
fdivrp
adc
inc
aaa
cmp
ss
xor
push
adc
mov
hlt
testb
arpl
or
mov
out
sub
fxch
inc
push
xor
fcoml
mov
loop
ss
in
or
in
fs
popa
repnz
xlat
jmp
jne
popa
dec
cmp
sti
or
mov
ss
movsb
pop
sub
stos
push
iret
inc
and
add
sbb
and
sub
or
mov
mov
jns
mov
das
lea
xchg
lods
xchg
insl
pop
das
stos
fadd
inc
mov
dec
leave
xchg
mov
in
push
rorb
mov
mov
pop
adc
xchg
addr16
push
push
gs
mov
rorl
lods
aad
or
loopne
aaa
enter
roll
dec
paddb
inc
jno
ljmp
dec
or
xchg
int
sbb
lods
push
push
xchg
clc
sub
xor
shll
mov
cmp
outsb
adc
push
pop
xlat
xor
mov
mov
add
add
outsb
cmp
and
ret
in
outsb
fs
sbb
cmc
lret
or
mov
bound
push
shlb
outsl
addr16
adc
cmpsb
jae
cwtl
cli
iret
jne
mov
pop
out
jle
mov
jnp
mov
push
in
push
push
enter
test
icebp
mov
xchg
mov
arpl
and
jp
pop
inc
repz
ret
pop
addb
arpl
pop
arpl
push
rcll
push
mov
int
inc
mov
or
mov
ss
dec
adc
dec
adc
rolb
inc
fsubs
int
lock
rcll
rclb
mov
lret
andb
inc
out
push
or
mov
add
mov
dec
sahf
sub
shrb
xchg
mov
add
inc
int3
dec
ret
and
mov
mov
pop
sub
imul
imul
je
int3
or
cmp
xor
adc
and
popa
iret
stos
add
outsb
inc
cmp
xor
lods
push
sub
out
arpl
or
sti
sub
adc
sahf
dec
xor
xor
sbbb
dec
clc
mov
mov
sbb
push
xchg
pop
outsb
insb
cmp
sbb
mov
jecxz
add
in
cmpsl
nop
and
mov
pop
and
or
sub
adc
mov
push
mov
dec
lods
jno
or
sub
out
adc
dec
xchg
mov
pop
je
inc
out
inc
pop
and
imul
ja
inc
pop
aas
es
mov
pushf
dec
lea
gs
test
daa
inc
mov
jno
call
lock
jbe
lods
push
and
pop
lahf
fmull
incb
and
ja
lods
add
mov
js
es
scas
and
jb
stos
loop
add
es
sub
into
les
sub
mov
je
pop
inc
xor
les
dec
mov
sti
adc
stos
mov
jle
pop
ja
mov
in
out
add
sbb
cmp
xor
and
rolb
je
in
loop
pushf
ja
inc
ret
aad
pop
loopne
push
mov
rorb
inc
adc
sbb
xorb
pop
repnz
sbb
xchg
dec
adc
stos
test
jb
je
rorb
shrl
jne
popa
and
inc
add
and
xor
lods
jl
in
inc
mov
pop
and
lock
pop
mov
je
fs
aad
xchg
not
xor
dec
clc
adc
adc
push
jb
hlt
cmp
push
call
fcomps
sbb
xor
cli
cmpsl
fnstcw
xchg
jno
dec
addr16
pop
clc
adc
jo
dec
or
cs
movsb
jns
adc
out
and
xchg
dec
push
out
sub
mov
push
pop
jno
cltd
push
stos
xor
dec
mov
jno
adc
or
out
lock
roll
adc
movsb
ret
inc
sub
mov
inc
roll
cs
mov
dec
dec
push
inc
lock
es
rcll
xchg
or
out
or
enter
push
and
ficompl
sbb
aas
lds
shrb
jns
jne
int3
mov
mov
jb
sbb
shlb
insl
imul
es
sbb
dec
mov
std
mov
push
pop
or
mov
sahf
dec
in
neg
mov
nop
jmp
lahf
std
lcall
andb
sbb
inc
addr16
lock
pop
adc
mov
xchg
dec
xor
sbb
popa
xchg
fs
inc
stc
imul
dec
push
shll
popf
add
dec
xchg
cmp
cli
stos
mov
sbb
sub
arpl
pop
jnp
and
jo
sub
sub
adc
cmp
pop
clc
xchg
clc
fildll
jno
push
scas
arpl
xor
subb
es
enter
jmp
mov
inc
jecxz
or
stos
sarb
insl
push
push
push
inc
enter
xchg
or
mov
hlt
jne
push
stos
adc
jmp
test
adc
jg
or
sub
outsl
es
lods
add
push
lret
jb
inc
shrb
sub
adcb
into
test
test
push
sub
dec
lret
mov
mov
cs
mov
push
je,pt
insl
cmpsb
mov
pop
mov
ljmp
in
adcl
rorb
mov
or
dec
cmp
add
xor
rorl
sar
mov
idivl
xor
push
xor
fucom
mov
push
push
test
xor
dec
mov
inc
pop
xor
and
insb
adc
sub
cmp
cwtl
sbb
adc
pop
sbb
fsubp
cmpsl
lret
scas
out
xchg
fwait
pop
ret
push
ss
movsb
inc
sahf
push
adc
out
movl
xor
push
fnsave
lret
mov
fcomps
stos
pop
jge
stc
ja
adc
lcall
cmpxchg
xchg
fnstsw
push
push
sub
fildl
fcmovnbe
add
sub
sbb
xor
sbb
sbb
daa
punpcklbw
addr16
fiaddl
stc
cmp
mov
sub
int
cld
ljmp
pop
add
or
movsb
or
mov
imul
push
or
jecxz
mov
or
mov
xor
cli
pop
jge
rorl
aaa
mov
xchg
sahf
loop
sub
idivl
or
xor
mov
js
sub
adc
scas
jno
cmpsb
scas
loope
sub
rorl
and
out
lds
lret
leave
inc
clc
stos
ss
sbb
jge
arpl
pop
call
xor
sbb
popf
jne
in
out
add
dec
pop
xchg
fmuls
stc
dec
gs
cli
jbe
xor
add
and
mov
cltd
mov
inc
cmp
cld
lds
jno
mov
fcmovne
ljmp
mov
add
jnp
add
decl
sbb
ss
bound
fimull
or
sbb
and
idivl
add
and
pop
bound
pop
jge
repz
xchg
insl
push
cmp
cmp
test
jl
cmpsb
push
push
pop
sub
add
pop
or
push
mov
push
add
sbb
and
sahf
imul
cmpsb
pop
or
mov
xor
push
sbb
pop
and
jnp
mov
test
sub
push
and
lret
inc
data16
lret
stos
ret
lea
cmp
sub
pusha
in
and
rolb
and
clc
imul
rorb
fildll
push
rcr
popa
ja
ja
push
aas
daa
lods
mov
push
xchg
insb
pop
push
jge
repz
xor
jb
cmp
lods
mov
stos
pop
dec
fdivl
inc
cmp
sub
stos
push
das
dec
push
push
insb
xchg
adc
int
fildl
mov
push
dec
lret
and
mov
outsb
pop
or
pop
jle
and
addb
jno
cs
push
into
dec
out
inc
clc
xchg
cmp
andl
mov
cmpsl
sub
repnz
and
rolb
sub
insl
fstpt
adc
mov
pop
mov
xchg
and
into
imul
mov
daa
dec
dec
inc
daa
cmp
cli
js
mov
cltd
out
fstpt
dec
push
mov
dec
std
sarl
lret
rol
mov
pop
sub
pop
mul
inc
scas
xchg
lock
dec
daa
jl
pop
and
add
pop
fmull
push
xor
or
add
je
call
jne
addr16
aad
push
imulb
cmp
mov
mov
or
xor
lods
add
movsb
add
add
inc
xor
mov
xor
sbbl
pop
shrl
add
hlt
mov
stc
inc
sub
imul
xchg
add
push
mov
add
in
or
sub
mul
inc
mov
dec
cmp
adc
jg
add
stos
mov
jge
fs
push
or
mov
mov
test
lahf
test
cltd
lea
daa
sar
pop
daa
lret
mov
bound
aad
ss
push
je
push
fwait
inc
inc
test
adc
mov
ret
lods
shl
jle
icebp
push
jnp
icebp
sbb
testl
jecxz
in
call
and
adc
cmpsb
mov
test
cmp
aam
incb
aas
inc
int3
pop
push
add
std
adc
dec
mov
imul
jns
xor
data16
int3
and
mov
jb
mov
std
mov
dec
shll
dec
test
inc
add
or
in
sub
jno
mov
or
pusha
adc
sarb
xlat
fcoms
sti
outsb
roll
xor
dec
lret
xchg
mov
mov
push
repnz
das
stos
xchg
test
mov
push
insl
cmpsb
fstps
push
pop
js
sbb
add
fstpl
jnp
xchg
mov
imulb
pop
sub
pop
sub
jecxz
jecxz
mov
mov
mov
out
pop
inc
ljmp
test
mov
xorb
lods
dec
jbe
push
mov
movsb
inc
jo
xchg
aas
fs
add
lods
call
jns
push
fnstenv
pop
icebp
jb
orl
sub
ljmp
test
add
push
cmp
insl
sub
dec
mov
cmp
jno
aad
arpl
lds
or
cwtl
push
arpl
mov
xchg
xor
aad
push
mov
dec
hlt
pop
add
mov
je
mov
sbb
in
dec
test
xadd
and
jl
xlat
xorl
mov
jae
shlb
mov
out
jo
push
shl
std
es
push
popf
sti
aad
pop
xor
faddl
ds
jae
aad
sbb
pop
bswap
gs
xchg
mov
sti
jae
mov
sbb
fs
in
xor
mov
faddl
push
fsub
push
clc
mov
or
mov
jbe
nop
add
or
jae
or
test
pop
repz
adc
sub
inc
jmp
sub
neg
pop
pop
cmp
mov
ds
xchg
cmc
and
push
pop
jne
xlat
sbb
push
cld
hlt
rol
pop
hlt
in
cmp
ficompl
cli
enter
push
adc
sub
xlat
mov
add
push
or
push
lods
jge
xchg
sbb
pushf
sbb
fldcw
mov
cmp
daa
movb
lock
adc
into
or
pop
mov
adc
cmpsl
inc
fs
mov
repnz
gs
dec
out
xchg
pop
and
jg
es
lahf
es
dec
xlat
arpl
push
movsl
pop
mov
and
mov
sbb
push
shll
adc
or
stos
sbb
mov
sbb
jg
mov
jg
sbb
imul
pop
or
and
stos
jo
inc
scas
outsl
xchg
loop
mov
std
stc
test
fcom
and
mov
orl
rcrl
xor
je
dec
adc
les
xor
pop
mov
lcall
push
rorb
les
jns
jecxz
jne
fisttpll
ljmp
xor
sub
dec
or
jg
or
xor
sbb
leave
adc
xchg
mov
stos
pop
int3
dec
mov
inc
insl
xor
adc
lcall
xchg
fstps
push
int
ret
lea
or
flds
jge
gs
pop
adc
shl
pop
arpl
xchg
out
popa
sub
test
push
cmp
lea
jno
lea
pop
fwait
mull
jg
out
insl
mov
clc
cwtl
push
inc
sbb
fs
in
mov
adc
dec
mov
mov
sahf
push
or
sub
in
sbb
out
sahf
pop
out
or
jecxz
mov
pop
pop
push
stc
xor
clc
jge
out
into
fstps
sbb
mov
out
cmpsl
fldcw
push
add
shlb
mov
pop
mov
aad
loop
outsl
in
pop
lock
sub
mov
mov
cmp
scas
dec
movhps
mov
adc
lods
push
in
mov
mov
cmpsb
rcl
int
push
mov
cmp
insb
out
xor
push
cwtl
pop
jns
mov
xchg
shll
nop
popa
mov
adc
adc
sub
adc
in
cmpsl
jae
lds
jne
push
dec
dec
decb
pop
fldl
ret
pop
idiv
pop
aas
add
dec
xor
add
and
adc
jns
pusha
mov
cmp
sub
lret
sahf
aam
mov
outsl
sbb
outsb
cmp
and
xor
or
bound
jle
data16
lcall
mov
xchg
add
subl
jl
test
lods
sbbl
lods
stos
xchg
sarl
mov
mov
push
pop
xchg
sbbl
mov
enter
in
cmp
aam
push
cmp
out
mov
ficomps
xor
scas
js
aad
imul
mov
fs
xlat
or
mov
dec
adc
stos
insb
adc
cmp
rolb
fadd
push
mov
add
jp
inc
mov
aad
mov
lret
jns
out
jns
daa
shrl
call
inc
lods
aam
repnz
insl
nop
test
pop
add
jecxz
shll
je
fldl
fisubs
adc
cmp
pop
add
adc
adc
pop
cs
add
mov
push
mov
pushf
cmpsb
cmpb
fdiv
in
inc
jmp
xchg
cltd
ja
pop
cltd
sub
lret
cmc
and
mov
cmp
ja
leave
xor
movsl
repz
push
imul
mov
mov
imul
pushf
clc
or
and
add
mov
out
add
push
and
sarl
push
push
adc
es
fucom
push
out
fwait
int3
mov
ds
and
sti
lock
lcall
jp
aaa
mov
imul
imul
add
xor
xor
adc
aad
imul
mov
and
outsb
sbb
andb
mov
add
rolb
dec
out
xchg
add
dec
mov
fisttpll
stos
out
cli
xchg
mov
out
and
fwait
das
rolb
cmpsl
jmp
push
mov
stc
jg
pop
inc
decl
mov
sub
cmc
mov
mov
add
and
cmpsb
push
jmp
scas
xchg
jmp
jnp
pop
xlat
movsb
xacquire
int
hlt
daa
mov
cs
xchg
cs
mov
hlt
adc
add
test
xchg
ficompl
fisttpl
push
stos
pusha
mov
cmpb
mov
aaa
cltd
mov
call
mov
or
ljmp
push
add
sbb
out
pop
jne
sbb
out
ljmp
xchg
sbb
faddp
pop
icebp
add
int
decb
push
cld
push
xor
push
mov
lods
cmp
cmp
dec
mull
stos
xchg
push
sbb
int3
cmp
jl
add
daa
add
jp
stc
movsl
mov
sub
mov
insl
rdmsr
aas
in
into
mov
jno
xchg
cltd
lods
pop
add
adc
les
add
push
outsl
ja
sarl
xor
inc
adc
dec
jg,pt
mov
into
ss
ret
add
mov
jne
pushf
mov
addl
leave
mov
add
sbb
mov
and
adc
cltd
scas
mov
pop
fisubs
sub
push
std
aaa
aaa
or
aaa
pushf
lret
outsl
mov
ljmp
pop
das
imul
shl
ret
in
stos
add
std
clc
add
xchg
xchg
mov
pusha
fnsave
dec
mov
out
ret
cs
aaa
cltd
cmc
daa
cltd
andl
gs
sub
gs
sub
push
fs
push
sti
lahf
jle
push
jne
fwait
clc
iret
add
fs
inc
xchg
pop
push
test
mov
aam
xchg
mov
lods
cmp
mov
cmp
jecxz
pushf
outsb
sbb
inc
jae
adc
out
hlt
rcll
mov
pop
push
sbb
pop
dec
jnp
mov
test
xor
fdivl
sub
add
jge
inc
push
jnp
pusha
pop
jno
mov
xor
fdivs
adc
dec
ljmp
and
popf
loope
dec
lret
js
pop
out
nop
mov
pop
idiv
push
push
add
test
sbb
shl
int3
iret
or
add
jae
std
or
mov
jno
call
in
popa
cs
cltd
and
dec
sbb
mov
dec
and
ret
sbb
popa
lods
push
fsubrl
bnd
mov
in
popa
es
in
mov
jns
movsb
cltd
cmpsb
aaa
or
insb
rolb
mov
mov
fisubl
sbb
add
or
shlb
sahf
mov
dec
cld
mov
pop
ret
adc
mov
mov
adc
add
dec
mov
push
lock
mov
movsb
push
sub
jno
in
push
push
jg
into
pushf
popf
mov
add
jle
add
push
pop
lret
clc
lcall
dec
pusha
xchg
aad
pop
ret
push
sub
loopne
rclb
sbb
inc
gs
sub
mov
xlat
xchg
xor
pop
mov
push
popf
gs
mov
dec
fnsave
sbb
inc
push
outsl
mov
sahf
outsl
sbbl
and
jno
mov
jl
mov
js
imul
jl
mov
fldcw
and
pop
mov
mov
jecxz
mov
push
sahf
test
int
dec
add
arpl
enter
ja
iret
xlat
adc
scas
push
scas
scas
insl
cmc
mov
mov
ja
dec
pop
subb
setle
jne
inc
adc
mov
daa
mov
add
sub
loopne
push
fmul
loop,pn
add
out
sbb
out
mov
int
or
cmp
pushf
mov
mov
jns
push
push
sbb
xchg
pop
fildl
int3
rcll
cmpb
mov
sub
iret
push
sub
rorl
stos
test
imulb
lods
push
dec
in
mov
outsl
out
sbb
or
adc
mov
outsl
cld
jle
lods
mov
jb
xacquire
mov
dec
push
push
pop
enter
btr
pop
cli
ja
pop
decb
push
xchg
stos
into
xchg
in
arpl
mov
mov
adc
popa
outsb
cmc
cwtl
stc
push
aad
jb
xlat
mov
cwtl
cltd
sub
and
push
clc
nop
inc
iret
out
stc
push
fldl
push
or
cmp
call
scas
xchg
in
les
push
cmp
xchg
call
pop
mov
arpl
stc
jae
add
sbb
add
imulb
jo
mov
dec
sahf
jmp
repnz
mov
imul
dec
movsl
outsl
test
fwait
test
dec
js
mov
test
arpl
mov
insb
int3
les
out
or
repz
fnstcw
clc
scas
outsb
pop
stos
pop
fs
int3
mov
mov
repnz
or
movsl
push
pusha
push
nop
jp
lods
mov
pop
xor
and
and
in
jae
pop
lahf
jl
imul
mov
fs
adc
jno
insl
adc
insl
mov
rorl
sub
inc
jl
pop
scas
mov
lods
mov
inc
fstl
rcrb
sub
push
nop
jecxz
sti
outsl
inc
add
add
outsl
loope
test
aam
jge
shll
pop
mov
adcl
sahf
pop
xchg
sahf
mov
lea
mov
scas
pop
je
das
adc
jb
rcll
pop
or
pop
mov
mov
xlat
mov
adc
ret
loopne
int
mov
jge
test
ljmp
and
nop
pop
lods
push
clc
daa
cltd
pop
in
mov
faddl
lds
fldt
jo
cld
pop
pop
inc
insb
mov
adc
test
enter
jb
gs
ret
push
mov
jecxz
sbb
aam
mov
dec
lcall
add
mov
cmc
test
fmuls
popf
movsb
dec
sbb
lret
notl
addb
dec
ret
adc
sbbb
lret
mov
rcll
paddq
ja
ljmp
fwait
insb
or
sbb
out
stos
sbb
pop
mov
pop
mov
movsb
out
clts
inc
add
push
nop
adc
xchg
mov
imul
xor
js
push
fists
add
xor
rcl
cs
xchg
dec
jmp
add
lret
idiv
inc
sbb
push
sbb
xor
xchg
inc
pop
push
fisubl
dec
add
add
xchg
pop
fsubrl
add
dec
sub
sar
jmp
int3
and
es
je
mov
pop
test
pop
mov
lods
out
cltd
cmpsb
into
xor
mov
sub
bound
sbb
sbb
hlt
xchg
jno
movsb
fbstp
inc
das
xor
orl
adc
gs
add
or
shlb
jb
dec
or
add
bound
push
dec
mull
mov
mov
jmp
jo
and
xorb
in
add
add
jb
gs
dec
les
jp,pn
call
mov
sub
dec
popa
rolb
mov
test
mov
push
add
arpl
add
xchg
pop
add
mov
rolb
insb
mov
insb
in
cmp
jl
xchg
adc
nop
xor
pop
push
xor
jbe
adc
jbe
pop
or
fcmovb
cmp
ds
jb
ljmp
divl
sahf
lods
mull
nop
aam
adcl
fbstp
rcrb
add
sahf
jne
pop
cmp
sbb
rorl
pop
push
or
mov
cmpsl
popa
test
push
dec
xor
mov
add
inc
stc
loop,pt
xchg
add
ret
mov
mov
adc
outsl
cmpsb
loopne
mov
cmpsl
jle
xchg
xor
mov
inc
pusha
fmull
sbb
fisttpl
add
or
cs
in
les
xchg
cmp
sbb
mov
sub
sub
je
repz
push
pop
popa
add
cmp
sahf
loope
pop
daa
addr16
mov
jno
fwait
push
sub
shrb
mov
aam
outsl
push
cmpxchg
cmp
sub
xchg
movsl
clc
xchg
sub
cltd
cmp
cmpsl
les
pop
mov
leave
cli
add
divb
cmc
aad
push
into
addr16
push
mov
hlt
xorl
cmp
inc
lcall
xlat
sbb
sbb
pop
sbbb
xchg
loope
adc
jmp
mov
lock
in
mov
dec
out
les
jns
mov
divl
hlt
add
rorb
fwait
adc
jb
adc
add
scas
add
xchg
into
arpl
pop
addb
push
and
sbb
sbb
pop
in
cmp
clc
push
push
test
or
aam
mov
movsb
xchg
xorb
leave
jmp
jae
adc
inc
popa
add
rcll
jns
xchg
ret
adc
lea
pop
xchg
pop
sbb
jg
push
cmp
icebp
es
dec
daa
stc
dec
or
mov
jne
in
stos
dec
sbb
mov
or
fsubrl
arpl
pop
jno
cli
xchg
lock
jbe
push
or
jge
subb
jl
jnp
iret
arpl
and
push
sbb
mov
add
aas
fst
popf
shll
pusha
ds
and
in
enter
xlat
jbe
push
sarb
in
ffree
pop
mov
dec
lds
mov
aam
in
pop
test
sti
pushf
fisttpll
rol
mov
dec
stos
hlt
adc
inc
pop
dec
push
xchg
adc
data16
insl
dec
cld
daa
xchg
xchg
mov
rcrl
jmp
les
push
sub
insb
pop
sbb
test
pop
cmp
aad
cmpsb
pop
mov
add
imul
hlt
ret
xchg
push
lcall
adcl
fistl
cmp
addb
shlb
and
sbb
push
iret
aam
adc
imul
mov
jno
cli
imul
jp
pop
stc
dec
jge
mov
mov
pop
shll
test
loop
inc
repnz
roll
test
lods
lods
sahf
cmp
shrb
inc
and
sub
cmp
addl
neg
jmp
xchg
aad
xor
ja
or
xorb
in
lret
lret
sbb
hlt
add
inc
rorl
and
mov
adc
xchg
mov
lahf
outsl
movsl
jmp
nop
cltd
lods
pop
mov
roll
push
sbb
add
in
lahf
ret
daa
sahf
cmp
ja
mov
insb
push
dec
std
aaa
xchg
movsb
shll
sub
mov
enter
popf
dec
inc
sub
enter
mov
out
out
adc
nop
jo
test
push
push
stc
jno
mulb
sbb
ljmp
in
jp
fbld
pop
mov
mov
pop
aad
adc
int
xchg
pop
or
and
nop
adcb
loope
mov
mov
aad
fisubs
sbb
push
test
pop
pop
std
push
pop
jle
mov
mov
shl
jo
fists
mov
xchg
jno
in
data16
push
lods
xchg
adc
pop
adcb
enter
mov
in
shlb
aad
xor
roll
inc
pop
and
jmp
jno
and
cmp
out
adc
cmc
or
ja
jnp
sub
mov
stc
pop
cmp
lods
add
adc
rcrb
int
xchg
inc
dec
mov
sbb
jge
js
sub
xchg
push
mov
daa
push
pop
pop
pop
mov
aad
sub
mov
pop
adc
mov
test
mov
mov
repz
jp
jae
rcrl
adc
sahf
dec
add
jno
pop
aaa
mov
cmp
clc
aad
es
mov
ljmp
jmp
sub
and
clc
push
rclb
adc
out
in
mov
mov
sub
mov
mov
xchg
mov
mov
pop
ljmp
sub
fdiv
pop
mov
xor
jae
pop
cmpb
pop
dec
gs
imul
stos
sub
xchg
and
xchg
mov
mov
imulb
inc
cs
dec
jno
dec
popa
clc
dec
pop
ret
adc
jnp
addb
paddb
mov
and
das
adc
stc
mov
xchg
aam
push
mov
leave
jno
dec
jmp
fistps
adcb
into
adc
xor
push
pop
shrl
out
mov
lods
pop
ja
inc
mov
sbb
lods
mov
enter
lods
les
pushf
loopne
push
jp
loope
ds
aam
insb
and
into
push
in
lods
and
mov
lods
aaa
ja
inc
sarb
mov
mov
and
sub
lods
add
xor
stos
dec
or
ficomps
adc
test
insb
mov
sbb
mov
push
bound
iret
ljmp
hlt
jo
loopne
push
push
movsb
jbe
les
push
dec
adc
test
pushf
cmp
daa
and
ret
imul
and
cmpl
cltd
add
inc
enter
jp
add
pop
add
pop
stc
add
dec
daa
paddusw
mov
mov
push
add
inc
loope
xor
mov
and
pop
jno
add
fs
and
dec
lods
clc
out
pop
adc
loope
inc
dec
lret
pmuludq
out
arpl
fstps
test
or
out
ljmp
cld
push
ja
add
pop
inc
leave
xor
dec
mov
out
jb
ja
push
adc
lahf
mov
mov
mov
icebp
clc
test
adc
loopne
push
iret
adc
xor
and
pop
movsl
push
xlat
inc
or
pusha
mov
outsb
cmp
ljmp
fwait
mov
jecxz
test
shll
loopne
cmp
inc
pop
xchg
out
fisubs
out
ja
inc
xlat
aas
adc
mov
and
jg
lods
adc
inc
test
and
jg
in
xchg
adc
jae
fimull
vmwrite
out
out
and
cmp
adc
lret
cwtl
and
dec
imul
enter
data16
dec
and
mov
adc
mov
aam
dec
xcrypt-ctr
cmpsl
pop
das
out
nop
mov
mov
dec
sbb
mov
pop
mov
call
outsl
xchg
or
mov
xchg
pop
adc
bound
int3
loopne
push
sub
out
push
lea
or
and
push
adc
ljmp
jo
fsubl
cmp
frstor
loopne
push
call
or
mov
loope
lds
and
inc
cltd
aas
ss
dec
and
or
lods
pop
or
adc
sub
jmp
inc
clc
dec
pop
and
xor
xchg
pop
movsb
out
mov
add
sbb
add
xor
or
xorb
jl
aad
push
jno
dec
daa
clc
adc
adc
addr16
add
xchg
pop
push
out
leave
mov
jmp
sti
ja
inc
xchg
aad
mull
inc
pop
lods
jnp
daa
inc
ror
aad
xor
dec
xchg
fistpl
adc
xor
xor
xchg
xchg
out
add
ja
es
cmpsb
mov
push
mov
scas
jo
push
ljmp
lds
outsb
add
outsb
pop
sub
je
xchg
bswap
pop
test
mov
mov
or
add
adc
pop
sbb
xchg
mov
and
xor
inc
iret
enter
or
dec
fdivr
adc
xchg
adc
xchg
dec
push
psrlq
out
push
mov
jae
sub
psrld
lret
repz
enter
outsl
jno
dec
pushf
clc
ficomps
adc
data16
dec
jle
in
mov
ja
cmp
and
das
mov
lds
int3
ljmp
cli
test
add
and
cmp
or
ret
adc
xor
and
fildl
and
rolb
lods
iret
fmuls
xchg
ljmp
inc
fdivrl
in
ds
sbb
js
mov
jo
sub
adc
mov
je
dec
push
pop
inc
mov
pop
shrb
aas
mov
lods
or
enter
mov
clc
pop
pop
cmp
adc
sub
xchg
dec
fwait
prefetcht2
out
into
mov
in
push
jge
mov
scas
ljmp
ljmp
icebp
dec
jno
dec
push
adc
pop
push
dec
int
aad
ljmp
mov
das
xor
push
xchg
xlat
sbb
jl
add
repnz
xchg
and
push
in
mov
test
stc
mov
add
sub
add
idiv
testl
shrb
testb
movsb
pop
xor
cmp
mov
lcall
push
add
push
test
mov
cs
js
cmpsl
in
mov
push
in
push
sbb
mov
call
ret
les
inc
mov
jp
xor
xor
and
pop
xor
jecxz
add
inc
cs
lds
lods
lcall
mov
and
sarb
test
js
jne
mov
mov
hlt
sub
inc
adc
fwait
inc
xlat
xor
xor
rcll
call
leave
out
mov
mov
pop
mov
cltd
jmp
out
add
clc
sub
ss
add
mov
push
repnz
jle
sub
ret
mov
outsb
stos
imul
mov
sub
scas
addr16
and
fadd
aam
testb
push
dec
and
pop
nop
sub
adc
lds
loopne
mov
clc
sbb
mov
dec
pop
cwtl
pop
push
pop
lcall
popa
jp
add
fadds
xor
popl
clc
shlb
push
xchg
mov
lock
aam
jbe
test
and
sar
lahf
mov
enter
mov
outsl
dec
sti
loop
push
imul
sub
add
imul
fwait
std
add
push
fisttps
dec
adc
xlat
xchg
push
xchg
iret
jb
icebp
sub
ret
rcrl
ds
test
scas
fs
sub
push
inc
outsb
pop
jno
into
rclb
xor
adc
sub
push
or
mov
push
jmp
jbe
adc
mov
cld
mov
stos
lock
shrl
leave
sbb
mov
mov
sub
mov
push
jns
lcall
shr
fwait
push
cwtl
push
add
pop
les
jnp
popf
jg
lods
pop
add
loope
mov
add
dec
lcall
mov
inc
push
ds
mov
cmp
out
mov
inc
adc
mov
pop
xchg
nop
shlb
data16
and
dec
stos
cmp
int3
pop
call
cld
jne
fmull
sub
mov
xchg
lods
mov
enter
addb
sbb
sarb
clc
daa
dec
std
mov
cmp
das
ret
pop
xchg
pop
sub
daa
cmp
cld
jg
test
mulb
mov
xchg
mov
inc
pop
xchg
fnstsw
push
lds
xchg
xchg
push
push
loop
cmp
lock
in
lds
sbb
test
pop
lods
mov
shll
adc
add
push
push
es
sub
push
adc
orl
inc
fsubl
mov
xchg
stos
jge
mov
arpl
inc
sub
aaa
aam
rol
adc
rclb
mov
rcrb
lods
push
imul
adc
rcll
scas
popa
bound
jb
mov
add
int3
adc
xor
test
lret
gs
movsl
aas
sbb
sti
mov
add
mov
rorl
stos
cwtl
aam
push
push
push
aam
movsl
pop
aam
add
mov
add
push
push
jns
popf
cmp
test
inc
or
int
push
imulb
lret
ss
in
call
scas
and
pop
stos
sbb
rclb
cld
iret
and
push
int3
cmp
sbb
repz
mov
xchg
js
mov
ret
add
lcall
std
out
mov
sub
mov
mov
loopne
js
call
into
inc
mov
mov
popa
lret
or
dec
lahf
lea
gs
pop
in
jmp
testl
mov
add
test
fcompl
call
push
das
jbe
pop
cmp
dec
in
int3
add
popa
popl
add
aas
imul
fisttps
scas
sub
jp
push
add
dec
fcompl
test
xor
je
mov
lret
test
inc
lcall
pop
jp
aad
pop
pop
imul
bound
popf
out
out
dec
das
inc
mov
into
pop
push
jge
push
bnd
leave
and
pushf
inc
js
mov
jb
jge
cmp
xor
lahf
add
imul
xchg
ljmp
and
mov
or
stos
out
sub
xor
mov
sbb
pushf
fs
mov
rorl
popa
aas
adc
je
or
je
add
sbb
xor
lret
inc
addr16
or
ljmp
gs
fimuls
jmp
addr16
imul
mov
out
jmp
ja
leave
outsb
jno
sub
fidivrl
mov
sahf
sbb
cltd
ljmp
mov
loopne
add
pop
loopne
push
loop
and
or
popf
push
pop
inc
repnz
inc
push
inc
dec
aas
xchg
aad
cwtl
and
and
je
enter
xlat
aad
fwait
jno
dec
test
adc
mov
and
fidivl
mov
mov
pop
xor
lahf
ljmp
lods
push
jno
dec
clc
push
pop
sub
fs
inc
sbb
outsl
and
cmp
dec
and
dec
popf
lods
mov
or
arpl
mov
and
push
sbb
inc
dec
enter
cmp
clc
inc
pop
aam
fsubrl
sub
xchg
inc
pop
mov
lods
out
jbe
les
ja
inc
cmp
cmpsl
aad
scas
and
pusha
ret
lods
mov
enter
pop
jno
dec
fwait
clc
negl
adc
xchg
dec
ret
pop
pop
out
mov
xlat
adc
xchg
mov
pop
mov
jle
out
ljmp
jnp
into
dec
pop
jns
pop
or
and
adc
repz
push
inc
push
and
push
inc
lods
out
mov
leave
dec
add
ljmp
fs
cs
fsubrs
xchg
les
and
loopne
push
fcoml
out
cmpsl
cwtl
push
mov
movsb
adc
ljmp
aam
ds
lods
mov
enter
shll
dec
pop
clc
lahf
pop
ret
adc
pop
and
xchg
dec
movsb
pop
add
adc
ja
jp
iret
and
dec
int3
xor
fucomp
adc
push
mov
stc
and
or
or
xorl
xor
push
roll
and
jno,pt
cwtl
ja
inc
xor
and
adcl
inc
std
enter
jno
add
clc
cli
pop
sub
push
push
sbb
and
push
sbb
out
mov
aaa
mov
adc
xchg
jmp
out
mov
pop
xor
test
lea
inc
and
pop
sbb
inc
and
scas
add
aas
push
aad
rcll
imul
jl
jnp
cmpsb
and
mov
xchg
jg
cmp
xor
dec
pop
in
mov
pop
pop
lods
gs
inc
jb
movsl
aad
mov
sbb
inc
jle
dec
aad
pop
jno
pop
ja
aaa
dec
sub
leave
add
das
pop
leave
push
inc
inc
push
and
ja
lods
ja
inc
jg
aad
sbb
aaa
lods
inc
adc
fmulp
jbe
aad
jno
dec
mov
sub
idivl
aad
dec
sub
out
arpl
adc
jecxz
gs
int3
insl
fsubr
adc
push
push
stos
les
loopne
push
xor
mov
xor
push
push
inc
and
popf
xchg
push
mov
xchg
xor
mov
test
push
ret
les
xchg
loopne
push
pushf
adc
aas
fsubrs
ret
and
pop
xchg
push
or
and
jo
lods
data16
inc
mov
sbb
xchg
lock
ror
aad
jno
dec
jp
loope
mov
daa
stos
inc
andb
mov
xor
sub
out
in
ja
movl
je
dec
out
arpl
ljmp
inc
sbb
je
ds
inc
pusha
out
les
lret
or
and
fs
shl
push
mov
jae
leave
sbb
in
out
mov
test
xchg
push
clc
cmp
pop
inc
aaa
jae
mov
subb
cmovne
out
mov
or
push
ja
inc
cmpsl
pusha
sub
mov
and
rolb
les
stos
mov
mov
push
cltd
dec
sbb
xchg
icebp
out
test
mov
inc
or
sti
and
ljmp
pop
cmpsl
mov
adc
dec
mov
xor
xchg
pop
fwait
push
mov
out
lods
mov
aas
inc
aad
push
and
or
enter
xchg
jnp
and
xor
stc
mov
out
xchg
into
push
rolb
and
xchg
lods
push
ja
inc
mov
lahf
and
adc
in
and
lods
enter
std
jno
dec
xbegin
ret
pop
push
sbbb
xchg
lods
push
pop
jns
inc
es
pop
add
in
ja
inc
mov
pmullw
push
lods
jp
icebp
inc
aas
enter
in
jno
dec
dec
clc
and
adc
int
orb
mov
pop
out
aas
sub
ja
push
pop
cs
fnstenv
jb
out
xchg
ljmp
in
jno
dec
pop
clc
es
mov
mull
aad
adc
paddsb
out
sbb
lods
scas
sbb
xchg
fwait
mov
and
hlt
sub
je
cmp
jle
adc
or
pop
std
and
jo
xor
ljmp
push
sub
push
push
or
leave
xchg
dec
js
push
pop
push
out
nop
mov
mov
pop
inc
xchg
and
pop
sbb
xor
inc
mov
fcoml
movsl
fists
les
and
adc
cltd
mov
lret
pop
lcall
dec
loope
or
push
pop
fdivr
cmpsl
jb
cmp
jae
mov
jge
jp
mov
adc
insl
mov
mov
popf
int3
adc
xchg
push
inc
test
jp
rcrb
dec
cmp
mov
idivb
mov
aad
mov
and
add
mov
xor
movsl
enter
enter
fstps
inc
aad
comiss
lds
pop
ret
mov
mov
jo
xchg
sub
pop
and
rclb
mov
adc
pop
xchg
mov
add
aaa
xor
movsl
sbb
rcll
sbb
mov
push
pushf
inc
sbb
shlb
ret
xchg
adc
int3
or
aaa
inc
mov
or
imull
xchg
test
push
adc
in
or
jmp
adc
mov
nop
cmp
xlat
aad
mov
shll
dec
xchg
cmc
sbb
inc
jno
leave
adcl
add
clc
lds
push
pop
add
adc
sub
xchg
mov
add
adc
ret
inc
shll
adc
push
enter
pushf
test
cltd
xchg
or
xor
pcmpeqb
pop
out
popf
sbb
mov
push
sub
cmp
outsb
dec
imul
mov
xchg
lcall
sahf
mov
test
adc
xchg
lret
push
pop
rol
popf
adc
shll
mov
nop
jl
les
js
dec
loope
gs
adc
cwtl
xchg
jno
sbb
lock
xchg
lcall
jb
push
xchg
ret
cltd
psllq
inc
xchg
pop
push
push
imul
jmp
add
rclb
push
adc
push
jb
adc
div
cwtl
test
or
cmp
or
jae
xorl
imul
scas
int
xor
sbb
xor
std
hlt
fwait
idivl
add
xchg
jbe
pop
adc
xchg
mov
mov
rolb
xchg
adc
cmp
sub
sub
inc
nop
test
adc
mov
cltd
fcom
jbe
mov
inc
sub
sub
aad
popa
cli
popf
add
push
and
adc
mulb
cwtl
pushf
sarb
cmp
xor
fidivrs
imul
ret
push
rcrl
mov
nop
dec
sub
les
lcall
sub
jne
adc
xor
je
movsl
inc
adc
sub
ret
les
mov
imul
aaa
cltd
popf
inc
jo
mov
setb
inc
inc
push
xchg
gs
sub
bound
xchg
ja
pop
xlat
arpl
aam
sub
hlt
pop
clc
out
je
ficompl
adcl
mov
fsubl
sti
adc
sahf
pop
rol
xchg
psllw
outsl
push
xchg
push
mov
or
ret
add
out
lcall
addr16
inc
jg
mov
sbb
push
and
fwait
pop
xchg
and
stos
inc
sbb
lahf
adc
and
je
mov
adc
adc
rclb
push
cmp
into
push
sub
outsb
popa
pop
push
mov
in
mov
pusha
leave
mov
nop
aaa
nop
ret
mov
inc
cmp
ror
add
fldenv
dec
cltd
mov
lret
jmp
in
add
mov
fsts
nop
xchg
pop
stos
sbb
loop
outsl
loope
movsb
ret
mov
adc
mov
je
out
dec
or
inc
push
cs
dec
push
sub
xor
es
fisubrs
pop
stc
cmp
nop
add
xchg
inc
pop
fwait
add
inc
mov
mov
push
jne
stc
aas
push
adc
pop
sub
mov
mov
cmp
jnp
sub
cltd
sbb
movb
cmp
mov
and
gs
sar
es
add
leave
shll
inc
inc
loope
add
push
adc
cltd
repz
jns
push
cmpsl
jmp
test
gs
xor
jno
fstpt
mov
test
and
movsl
or
into
mov
mov
jmp
or
movsb
out
fmuls
jno
and
orb
pop
push
adc
jg
aaa
cli
mov
cmp
pusha
rolb
mov
jp
mov
adcl
repz
mov
jnp
pushf
mov
out
repz
jns
shll
sbb
add
pop
cmp
mov
push
pop
pop
cmpsb
test
add
out
idivb
sub
sub
xchg
aaa
repz
aaa
lahf
out
adcb
xor
adc
xor
std
xchg
lcall
push
pop
adc
and
aam
arpl
in
lods
sub
and
push
rcrl
mov
push
push
dec
xor
xlat
rolb
rcll
pop
repz
inc
mov
pop
inc
stos
jecxz
pusha
add
sub
sahf
or
fadds
movsl
jle
or
fst
mov
fisttpl
pop
mov
pop
sub
xchg
cmc
loopne
adc
es
iret
push
mov
push
mov
movsl
xchg
std
mov
xchg
insb
xchg
data16
insb
gs
lcall
xor
push
inc
inc
add
fisubrs
pop
xor
sub
jb
xchg
jmp
aas
cmc
test
cltd
xchg
mov
sbb
stos
adc
shll
jne
or
repz
inc
xor
ds
adc
and
xor
pop
fsub
or
fadd
flds
movsl
push
ds
mov
adc
push
fadd
push
popa
dec
in
push
repnz
adc
sbb
cs
pop
cmp
mov
cmp
outsb
cmpsl
mov
mov
mov
inc
stc
cwtl
cmpsb
popa
inc
shrl
outsl
mulb
stc
adc
test
adc
sub
jl
iret
scas
scas
aas
fbstp
in
cld
movsb
push
add
bnd
push
push
popf
pop
ja
fcoml
pop
fs
stos
and
push
pop
add
push
dec
sbb
jne
dec
jns
sahf
popa
dec
sbb
add
mov
popf
in
icebp
mov
jmp
or
icebp
sub
sbb
adc
out
js
xchg
sbb
adc
sbb
mov
mov
or
mov
jb
mov
out
lods
idivl
add
sti
pop
jae
icebp
and
popf
cmpsl
aam
jbe
mov
lds
inc
int3
cmp
insl
ljmp
adc
mov
testb
ret
das
sub
xor
push
and
jo
rcll
xor
sub
scas
rolb
mov
mov
scas
cmp
cmc
das
sarb
adc
xor
inc
lea
xchg
mov
sub
or
inc
daa
push
mov
push
fwait
insb
jne
pop
lods
xor
inc
and
sub
dec
test
shll
lret
mov
xor
ljmp
cltd
andl
adc
cmp
pop
xchg
pop
cmpsl
lahf
test
mov
adc
sahf
adc
sahf
sub
inc
shrb
mov
adc
mov
xchg
push
outsb
das
adcl
cmp
push
fists
add
jp
imul
fnstenv
lock
push
fwait
popa
aad
scas
adc
inc
cmp
or
mov
loop
or
add
ds
and
adc
je
adc
add
jno
add
lret
lods
cmc
hlt
jne
push
loopne
xchg
insb
loope
push
mov
repz
jb
inc
test
es
test
inc
pop
sbb
xor
push
orb
out
aas
sub
push
dec
xchg
dec
pop
sbb
rolb
xchg
push
jno
xor
or
mov
pop
adc
mov
pop
stos
lea
cmp
dec
mov
adc
pop
xchg
stos
outsl
lock
push
insb
push
test
inc
pop
sub
out
and
cwtl
insl
or
fs
inc
inc
fcmove
xor
xchg
sbb
les
jbe
fld
pop
mov
sbb
int3
adc
cmc
and
mov
test
pop
lcall
pop
out
jnp
fwait
sub
jnp
xchg
xor
push
loope
xor
clc
testb
lret
mov
popa
xchg
stc
daa
sub
adc
arpl
hlt
mov
out
inc
push
mov
sub
pushl
pop
test
inc
xor
or
mov
jne
aam
fwait
movsb
scas
cmp
out
test
push
aam
cmp
mov
lret
xor
jae
bound
lea
and
cmp
ret
scas
sbb
call
dec
test
or
lods
mov
cmp
and
mov
stc
dec
loopne
gs
imul
fldl
addb
jg
out
out
mov
xor
mov
popa
and
jne
cmp
adc
xchg
push
dec
inc
cmp
and
xor
xchg
arpl
cmp
ds
enter
push
out
xchg
imul
inc
cmp
add
or
es
call
mov
mov
jle
xchg
fwait
mov
push
dec
and
fsubrl
outsb
in
pop
xor
repz
and
cmpsb
lock
cmp
loop
dec
out
fldt
lcall
fistpll
in
pop
pop
mov
inc
cltd
xchg
cmp
mov
mov
inc
fs
test
sbb
or
call
xchg
mov
xorl
mov
adc
push
into
fsts
push
das
scas
sbb
bound
jp
xor
dec
pop
pop
mov
cs
cli
cmp
scas
pop
mov
stos
mov
pop
cwtl
xchg
call
inc
out
jge
gs
aam
cmpsl
test
pop
jmp
fisttpl
cmp
jp
lods
xchg
pop
scas
in
insl
cli
into
pop
in
xchg
jbe
push
xor
js
jp
or
lret
fld
fsubrp
je
pop
sub
addb
jge
in
cwtl
adc
pusha
mov
mov
cs
xor
out
and
int3
mov
pop
dec
lock
pop
push
adc
push
xor
cmp
lods
notb
xor
leave
push
repnz
pusha
inc
in
mov
int3
std
inc
dec
into
jo
push
mov
shrb
adc
insl
inc
and
test
mulb
cli
or
inc
mov
xor
adc
ficompl
push
adc
xor
cwtl
pop
sbb
sar
adc
or
push
push
jno
add
out
adc
test
jmp
jb
sbb
jmp
pop
pop
cs
jae
mov
or
mov
push
and
jne
add
js
sbb
dec
mov
test
in
arpl
push
or
sub
fcmovu
xor
lods
pop
pop
add
mov
fisttpll
jle
rcr
test
into
add
repz
inc
sbb
jle
es
push
out
ljmp
idiv
roll
add
insb
push
add
push
xor
aad
push
and
and
hlt
cli
test
out
mov
sub
cmp
out
push
jp
mov
cmpsl
insb
mov
scas
jne
shrb
lea
dec
push
test
inc
clc
js
cmp
lret
push
inc
xor
and
pop
lret
mov
and
cmc
mov
lea
cld
out
dec
pop
inc
mov
cmc
incl
push
add
xchg
inc
bsr
std
inc
mov
sub
cmpsb
movsb
or
enter
push
testl
sahf
imul
scas
push
lret
ljmp
lcall
sbb
ds
xchg
aaa
test
mov
addl
mov
rclb
dec
fcoml
lods
and
or
jno
adc
subl
xorb
mov
xor
mov
and
push
fstl
clc
pop
inc
pusha
and
rorb
inc
jo
mov
stc
push
push
dec
stos
add
xchg
les
adc
sub
pop
loop
pop
add
adc
pop
mov
sbb
hlt
mov
cmp
lret
fldcw
nop
jb
inc
icebp
scas
cmp
icebp
stc
rcrb
shll
and
xor
ret
push
cmp
and
or
movsl
sbb
push
aaa
cmp
or
push
fcomi
and
imul
daa
and
xor
or
cmpsl
mov
push
jne
cmp
call
mov
movsl
stc
sub
test
cmpsb
dec
test
sub
ss
jo
dec
add
and
cmp
outsb
aaa
add
push
pop
cmp
jns
nop
out
mov
push
xor
test
pop
xor
jp
dec
lods
movsl
inc
xorb
lahf
popf
iret
rolb
push
pop
nop
dec
mov
mov
cmp
lahf
test
mov
lds
or
cmpsb
aad
cmpb
cmp
xor
inc
and
out
pop
sub
jb
js
js
aas
into
push
xor
xorl
push
mov
fwait
test
mov
inc
in
inc
cmc
ja
leave
pop
testb
push
jle
add
xlat
cmp
pop
mov
adc
cmpsl
es
shrb
and
add
mov
xchg
xchg
xchg
jmp
orl
arpl
xor
adc
jo
xchg
pop
jecxz
scas
cmpsl
jecxz
adc
stos
pop
mov
call
xor
push
or
loop
pop
inc
fsts
pop
add
cld
sbb
mov
out
cmp
sar
lods
pop
cmpb
cli
lods
mov
loop
dec
pop
push
cld
loopne
jmp
add
fwait
add
inc
inc
xchg
roll
popf
scas
push
cmp
bound
pop
cmp
mov
aam
xor
dec
xchg
std
inc
ret
push
sub
sahf
in
mov
divl
rorb
dec
pop
push
loope
fildll
jp
scas
rcll
fwait
ret
mov
ss
jno
imul
and
push
dec
movsb
fndisi(8087
aaa
and
sbb
lea
sbb
mov
jns
cmc
or
jecxz
jmp
inc
add
adc
mov
fsub
lods
nop
rcr
inc
les
sbb
out
jle
iret
inc
add
xchg
out
xlat
int3
push
fstps
pop
cmp
ficomps
mov
adc
gs
jmp
mov
jmp
das
lcall
aam
lcall
push
xor
lock
dec
and
stos
push
dec
dec
push
push
mov
adc
ret
ret
subps
into
pop
mov
in
sub
loop
in
arpl
push
push
das
inc
andl
mov
jge
cmp
fdivl
fiaddl
mov
in
les
mov
pop
xor
jns
mov
mov
jnp
or
sbb
and
sub
shll
push
movsl
jge
dec
in
movsb
push
std
ss
in
cmp
filds
sbb
or
jle
mov
add
faddp
flds
mov
repnz
sbb
pop
jl
pop
adc
mov
fucomp
je
into
or
leave
and
jno
popa
mov
adcl
pop
jl
lret
dec
dec
lock
test
or
add
mov
out
int
cs
cmpsl
dec
inc
out
sahf
jns
push
xchg
popa
and
negb
dec
mov
inc
cmpsb
dec
cmp
test
add
sbb
shrb
enter
xorb
cmpsb
test
jmp
dec
push
push
icebp
roll
dec
sbb
add
mov
mov
les
jae
popf
push
mov
data16
xchg
daa
cmp
lods
inc
test
test
jecxz
leave
lds
out
jne
xor
test
outsb
jno
mov
sub
int
dec
mov
cmpsl
cmp
call
or
adc
mov
mov
jbe
xor
mul
pushf
cmp
cld
jl
lret
push
int
nop
enter
and
shll
add
in
cmp
in
in
add
cli
bound
daa
js
nop
out
or
add
add
dec
cmp
mov
add
test
in
push
adc
push
mov
sub
lea
loopne
add
call
rcll
push
xchg
cmp
mov
inc
fists
push
cmp
ficoms
repz
aas
mov
out
mov
xor
loop
mov
push
cmp
jle
call
push
shr
ljmp
add
shll
or
ret
add
lods
pop
mov
sahf
push
adc
inc
adc
lret
mov
mov
scas
test
inc
mov
and
pop
jo
rolb
ljmp
negb
sbb
adc
loop
and
out
dec
ljmp
push
ljmp
jmp
push
mov
or
cmp
jl
mov
jl
cs
xor
leave
sbb
repz
and
cmp
aad
add
adc
dec
hlt
dec
dec
add
inc
or
inc
into
jl
and
jl
and
fldenv
add
xor
add
divl
push
xor
dec
jo
loope
jl
cs
data16
in
push
popf
push
jns
shlb
test
add
aas
ret
jno
pushf
daa
loopne,pt
pop
or
lret
repnz
rcrl
mov
cli
inc
mov
iret
dec
pop
fists
fs
stc
rcl
add
addr16
mov
mov
lea
mov
jecxz
push
pop
aam
cmp
bound
jnp
push
or
and
or
shlb
inc
shll
mov
cwtl
test
ret
scas
jg
popf
mov
sub
push
pop
dec
and
mov
in
add
mov
icebp
orb
mov
or
sbb
sbb
out
xchg
lock
gs
inc
add
jle
add
dec
push
pop
outsl
push
jecxz
push
ds
push
mov
rolb
fsqrt
or
flds
xor
lds
inc
jl
ficoml
cld
dec
mov
fiaddl
pop
pop
inc
mov
push
and
pop
cmp
sysret
jo
adc
or
std
sbb
in
jl
movsb
in
sbb
jle
lds
lret
mov
imul
inc
popa
js
cmp
add
push
ljmp
xor
clc
incb
repz
adc
stos
adc
pop
sub
in
incl
jae
in
je
cmp
or
sub
xchg
and
mov
js
xlat
test
in
xchg
insl
fwait
xchg
push
in
adc
pushf
div
jno
jne
lods
shrb
jb
xchg
or
push
or
decb
inc
daa
sub
rolb
sub
out
xor
mov
xor
xchg
loopne
cmp
sub
and
out
dec
push
jg
gs
sbb
pop
or
lcall
pop
mov
out
leave
mov
shlb
jmp
or
xor
fistps
pop
jl
jb
pop
cmpsl
sub
rorb
sbb
mov
arpl
ja
dec
pushf
push
push
stos
jmp
adc
xchg
jmp
int
cmp
add
dec
shlb
cmp
cld
in
xchg
jle
dec
aam
add
or
pop
push
jo
jmp
mov
sub
jmp
cs
lock
lret
inc
imul
mov
in
hlt
test
in
pop
adcl
ja
xchg
jo
fdivl
inc
inc
mov
sub
cmp
dec
push
movsb
das
in
jmp
cmp
push
hlt
add
and
aad
sub
xor
std
push
adc
and
andl
test
dec
sbb
push
add
aam
jns
xor
mov
sub
shl
push
loop
mov
or
push
shlb
in
jb
int3
add
cmp
inc
mov
das
sbb
cmp
inc
xor
adc
jmp
push
pop
je
xchg
adc
sub
or
xlat
aaa
xor
daa
push
insb
mov
jb
in
jne
mov
int
cmp
xor
sub
ret
jl
fmull
imul
icebp
rcpps
scas
ror
lods
imul
insl
into
pop
enter
stos
adc
ret
dec
jne
jp
add
xchg
xorb
xchg
dec
adc
fnstsw
push
and
dec
lcall
fdivs
mov
outsl
push
xlat
mov
mov
mov
inc
xor
cli
cmpsl
sbb
or
out
pushf
mov
rorl
or
int3
cmp
lret
inc
test
roll
shll
int
mov
mov
cli
push
ds
push
xchg
push
cli
dec
sahf
icebp
fisttpl
test
mov
jae
pop
test
sbb
out
fs
push
dec
inc
fwait
mov
sbb
cmpsl
xorb
push
inc
enter
xor
fs
or
pusha
jp
push
mov
sbb
mov
inc
in
dec
scas
popa
dec
sbbb
push
lea
aad
test
jbe
mov
push
inc
or
push
or
push
stos
inc
aas
mov
jbe
inc
push
push
mov
jecxz
jbe
lret
pop
ret
inc
pop
or
int3
push
mov
pop
test
cli
loop
sbb
mov
stos
ret
cmp
cmp
daa
xchg
cmc
sbb
arpl
stos
mov
inc
lock
adc
aas
insb
adc
adc
push
xchg
aaa
sahf
dec
push
testb
dec
sbb
and
push
cmp
fildll
subb
nop
lret
xor
sti
dec
movsl
leave
cmp
add
gs
mov
jle
mov
pop
adc
inc
jbe
and
das
add
dec
cmp
mov
push
dec
mov
in
int
das
sbb
lods
xchg
int
jl
mov
pop
adc
outsb
mov
sub
lods
or
test
mov
hlt
cmp
fwait
aad
in
sbb
mov
cmp
lds
xlat
jae
push
fs
ret
xchg
add
fxch
fdivl
rclb
xor
mov
out
add
cs
fdivrp
repz
sbb
aaa
jg
xchg
xchg
cmp
andb
push
lret
movsb
es
jecxz
ja
jb
mov
cltd
jne
sbb
add
adc
push
push
inc
lods
mov
and
inc
push
repnz
aam
pop
xor
insl
ja
mov
adc
jns
mov
pop
out
daa
jo
mov
ss
xlat
es
mov
out
jmp
and
stc
test
dec
jl
add
call
dec
push
lods
outsb
es
es
je
or
and
arpl
cwtl
out
mov
fists
pop
ss
pop
mov
xor
sbb
push
cmc
xchg
and
sub
mov
pop
mov
mov
rolb
lahf
or
in
cmp
dec
fistpll
and
jg
dec
scas
cmc
add
js
movsb
pop
movsb
cmp
insb
push
xchg
ds
pop
sbb
pop
push
mov
aad
test
lcall
push
mov
js
adcb
xchg
push
push
pop
dec
ret
pop
adc
xchg
inc
outsb
pop
or
ret
nop
fs
je
test
jne
rorb
xchg
inc
fcoml
jg
jae
adc
ss
pop
cmpsl
and
icebp
ja
repz
adc
dec
daa
inc
sbb
or
lock
mov
adc
outsl
out
push
dec
scas
iret
loope
push
aas
addr16
test
inc
pop
adc
out
nop
in
ss
xchg
cmp
dec
lret
xchg
mov
loope
cltd
lods
sar
push
into
inc
jo
and
pop
sub
stc
mov
popf
push
lods
jecxz
rorb
dec
jno
bound
cmp
lea
enter
cmpb
cli
loope
push
cmp
xchg
dec
or
cmc
sbb
mov
push
outsb
cmp
inc
dec
xor
and
xchg
xchg
std
sti
aad
sub
add
inc
fdivs
fsubl
xorb
ss
push
mov
sahf
dec
out
cmp
ret
jg
xorl
mov
inc
mov
or
mov
xchg
xor
pop
xchg
int3
sbb
mov
ss
repnz
add
xchg
jne
or
cmp
push
adc
dec
andb
mov
jl
sub
test
movsb
dec
sub
pop
pop
xchg
mov
subb
adc
arpl
and
mov
js
pop
add
andl
out
xlat
inc
jo
shll
mov
loope
jmp
iret
das
fisttpll
push
adc
subb
aad
test
adc
into
add
fimuls
dec
sbbb
popf
cmp
jle
xchg
push
test
or
mov
jae
mov
sub
loope
sub
je
sub
aam
mov
call
sub
dec
jo
dec
stc
out
aam
icebp
pop
roll
mov
sbb
sti
fs
mov
sbb
fidivs
mov
mov
ds
sub
sub
mov
mov
mov
adc
and
sbb
notb
sarl
mov
mov
cmp
ss
or
mov
cwtd
fmuls
dec
insb
or
inc
loop
pop
xchg
fadds
push
ret
jne
dec
fs
out
jbe
cmp
inc
cmpsl
sbb
stos
jbe
testb
pop
cs
xchg
insb
es
out
xor
je
xchg
adc
sti
enter
push
push
cmpsb
pusha
int3
xlat
push
or
dec
xchg
sbb
mov
dec
and
subb
test
movsb
xchg
int
popf
jl
and
or
xor
fistps
xchg
and
sbb
sti
or
cmp
add
jo
lock
push
cmp
fsincos
pop
jb
sub
xchg
or
hlt
dec
dec
lret
fucomip
add
or
inc
mov
mov
movb
jge
mov
imul
mov
sbb
incb
mov
movsb
imull
loopne
jb
mov
dec
sbb
stos
pop
dec
mov
cli
xor
js
cld
adc
mov
dec
or
fwait
cmp
loopne
insb
mov
rolb
int
or
inc
popf
mov
jo
stc
add
jp
movsb
test
push
cltd
cmpsl
data16
fcom
pop
or
inc
mov
add
lcall
addl
pop
addb
adc
inc
mov
mov
outsb
jns
dec
push
arpl
pop
fstps
fsubrp
mov
sub
pop
mov
xor
fwait
ret
dec
push
lahf
push
push
ret
inc
mov
xor
int3
push
sub
dec
xchg
cwtl
std
adc
inc
jae
jle
in
sbb
scas
fldt
dec
ljmp
scas
sub
stc
sbbl
pop
add
ja
xchg
push
inc
aam
jb
sbb
or
xor
add
data16
cwtl
adcb
jl
dec
dec
stc
adc
pushf
sub
into
jl
lods
orb
xor
fs
jmp
sub
shl
dec
jp
jbe
je
pop
mov
out
lods
mull
inc
sub
rol
out
es
mov
and
int3
xor
sbb
push
jae
ja
repz
fldcw
sbb
xor
std
cwtl
push
xchg
jl
or
cli
push
mov
push
sub
js
mov
or
imull
add
push
pop
lea
scas
in
fbld
mov
outsb
and
je
cs
cs
cmp
push
sub
or
push
sub
clc
mov
mov
or
sahf
and
xor
gs
push
jle
push
rorb
sahf
mov
pop
fwait
sbb
fsts
xor
pop
jno
mov
pop
adc
sbb
icebp
mov
xor
adc
into
insb
xchg
xor
shll
inc
inc
out
or
cld
jg
adc
push
rcll
add
fs
cs
mov
bound
xor
pop
sbb
cmp
outsl
pop
inc
mov
jo
das
xor
notl
jb
sbb
mov
data16
mov
xchg
dec
push
xchg
or
cli
leave
cld
mov
fs
sub
rclb
lds
push
or
mov
adc
and
sti
pop
scas
icebp
loop
in
shr
mov
in
das
mov
das
sbb
adc
ss
inc
data16
les
les
jge
mov
cmpsb
sbb
adc
mov
inc
xchg
in
mov
mov
xor
ret
shr
cmp
aaa
and
hlt
dec
jmp
sbb
fdivrp
cmc
leave
pop
andb
inc
loop
aaa
movsl
sub
push
mov
mov
push
xchg
and
inc
movsb
push
in
or
mov
imul
jp
mov
nop
xor
dec
loopne
xchg
pop
rcl
add
mov
fsts
xchg
call
loop
dec
mov
outsb
pop
jp
push
out
into
icebp
test
mov
add
mov
or
andb
enter
cmp
mov
xchg
lret
sub
loope
inc
inc
adc
call
push
add
repz
push
push
mov
or
popa
scas
pop
or
push
dec
cmp
es
nop
jo
and
cmpsl
push
jbe
pop
mov
movl
pop
js
or
inc
test
push
sub
fiaddl
xchg
sub
dec
in
aas
fnstcw
or
dec
sub
and
pop
cli
divl
ljmp
adc
jo
arpl
sbb
sub
jb
inc
push
imul
scas
dec
jnp
shrl
insl
data16
aaa
or
iret
ja
sbb
leave
xor
pop
mov
sub
stos
or
shl
or
dec
dec
cmp
sub
cmpsl
sbb
testl
les
add
pushf
arpl
cmp
xchg
nop
test
dec
push
mov
or
inc
mov
push
pop
fwait
adc
mov
adc
dec
js
adc
add
test
xor
rorb
push
js
or
jne
leave
data16
stos
or
dec
scas
dec
daa
mov
iret
jbe
inc
not
push
sar
or
popa
inc
pusha
std
ds
add
daa
push
lcall
push
rol
xchg
sbb
out
arpl
xor
and
shrl
jb
arpl
popf
pop
call
mov
es
adc
push
in
xchg
mov
sbb
xor
loop
popa
outsb
je
lods
insb
cltd
pop
inc
ds
and
dec
jge
xchg
arpl
mov
aad
scas
cmp
add
popf
or
mov
movl
call
mov
mov
data16
insb
sub
int3
aaa
xlat
ja
inc
je
aam
icebp
scas
out
std
out
sbb
sbb
ss
adc
inc
popl
cltd
int3
pop
ret
mov
jle
flds
pop
or
inc
cmp
or
inc
nop
or
lahf
adc
jns
call
add
adc
loope
adc
cld
fcmovnbe
inc
ljmp
mov
pop
jp
push
loopne
adc
ljmp
inc
mov
in
orl
iret
sub
or
and
xor
into
enter
ficoml
lock
fadds
push
cs
dec
cld
inc
pusha
repz
adc
mov
sbb
cmpsb
dec
mov
fimull
shlb
push
pop
sbb
sbb
dec
std
pop
negb
mov
popf
adc
cmp
fidivl
lods
bound
aas
jmp
into
push
fwait
pop
xchg
jne
inc
divl
add
inc
cmp
loope
push
push
stos
cli
push
bswap
adc
lret
xchg
add
test
push
sub
push
lret
push
jp
lea
jg
mov
clc
insb
add
or
cwtd
cmp
and
xchg
in
cmp
rorb
mov
cmp
mov
dec
movntq
adc
sbb
push
popf
shll
sbb
stc
aas
shll
mov
stc
cs
cltd
out
pushf
pop
cld
je
mov
add
test
mov
fidivrl
inc
dec
pop
scas
inc
pop
std
cmpsb
dec
pop
ret
ret
pop
cs
scas
mov
add
test
sbb
pop
lods
lods
add
aad
icebp
mov
jl
test
sbb
int3
scas
mov
mov
in
sbb
push
out
jmp
ret
orl
ljmp
dec
rorl
repnz
ja
push
jbe
rolb
cmp
cmp
dec
je
jb
hlt
cmp
les
xor
mov
adc
sbb
pop
nop
es
mulb
xchg
add
push
aam
inc
mov
fdivrs
jmp
subl
enter
dec
aam
nop
and
cmp
sub
add
mov
sti
or
push
push
and
sub
es
dec
inc
push
es
and
js
sbb
mov
sub
pop
stos
push
icebp
ficompl
add
divb
inc
test
popa
jle
cmp
mov
mov
dec
cmp
sub
mov
sbb
inc
mov
js
movl
roll
xlat
jns
mov
dec
sbb
inc
xchg
push
mov
out
mov
cmp
mov
pop
pop
mov
and
sti
push
insl
ret
add
xchg
push
daa
and
xor
jnp
cmp
xor
mov
scas
jno
inc
add
je
sbb
push
push
dec
test
pop
xor
mov
pop
scas
stos
push
xchg
xor
push
je
inc
xor
imul
inc
adc
push
leave
sub
cli
ja
inc
jl
fwait
dec
jnp
mov
xorl
mov
push
fdivl
lea
das
push
or
aaa
xor
pushfw
out
dec
jp
jmp
stc
cmp
pop
xchg
push
push
movl
loopne
push
pop
push
push
test
mov
push
int3
and
out
adc
push
mov
or
lcall
add
cld
push
test
sarb
mov
mov
mov
add
cmp
sahf
jl
pop
and
add
sub
jne
je
pushw
and
add
dec
or
pop
arpl
mov
cli
xchg
jb
cwtl
cltd
cmpsb
jno
and
and
or
mov
xlat
sbb
inc
mov
pop
push
or
in
pop
xor
outsl
pop
dec
cmp
pop
aas
leave
xor
pop
pop
cwtl
xor
mov
jle
daa
jae
inc
pop
jne
and
or
jmp
adc
and
fs
xchg
dec
pushf
adc
pop
jae
xor
test
cmpsb
jne
adc
push
adc
cmp
ret
pop
sub
out
pusha
sbb
inc
mov
mov
sbb
ss
sar
and
lret
xchg
adc
movsl
adc
adc
cmc
jno
shlb
cltd
loopne
jb
test
mov
mov
push
inc
mov
jo
lock
aaa
pop
div
mov
xchg
xchg
insb
add
mov
loop
add
ret
xchg
inc
imul
dec
cmpsb
testw
and
lock
jg
stos
into
loopne
scas
insb
pop
adc
out
aad
sbb
jb
les
push
xchg
pop
lret
adc
adc
and
sbb
ja
mov
sbb
testb
mov
pop
test
fcoml
mov
and
fucomp
fidivl
pushf
in
stos
pop
je
sbbl
loop
gs
in
aas
bound
mov
or
ss
scas
pop
cmc
or
inc
cmpsl
sub
int
dec
add
adc
xchg
ret
aas
sub
bound
inc
data16
ret
arpl
popf
and
insl
ret
xchg
sub
shlb
movsb
cwtl
adc
or
inc
lea
scas
das
rorb
rcll
mov
xchg
xchg
mov
popa
jmp
loop
fnstenv
ror
int
inc
mov
xor
dec
xchg
jo
cltd
lcall
jb
das
lods
shl
inc
cwtl
ret
les
or
cld
repz
mov
sub
mov
hlt
cmpsb
sbb
fldl
clc
sub
es
mov
scas
sub
or
insb
cli
aas
xor
xchg
scas
cmp
arpl
mov
mov
ds
add
inc
inc
addl
mov
scas
push
js
dec
push
jno
sbb
jmp
mov
ja
or
sbb
repnz
mov
lahf
add
inc
sub
insl
andl
xor
cmp
std
mov
and
cmp
push
in
dec
aas
ret
mov
xchg
inc
pop
and
push
ficoms
call
sahf
xorb
call
add
aas
cmpsl
cmpsl
mov
mov
fsubr
and
xchg
in
adc
cmp
or
and
rol
dec
rcrb
ljmp
dec
add
pushf
sbb
shrb
icebp
es
sahf
inc
imul
daa
push
push
inc
fnsave
into
daa
cmc
xchg
inc
scas
test
leave
pop
pop
cmp
mov
notl
das
or
cmp
cld
pop
dec
inc
pop
inc
scas
inc
adc
mov
je
sub
cmp
inc
and
lods
mov
cmp
fs
das
orb
and
andb
scas
xchg
mov
lds
mulb
pop
inc
repz
stos
mov
mov
lds
data16
pushl
loopne
or
push
lret
pushf
pusha
cmp
mov
sub
push
scas
and
mov
xchg
mov
jae
lahf
fst
pop
xor
fbld
subl
or
add
xchg
dec
inc
nop
addr16
push
arpl
mov
push
inc
mov
imul
sub
and
jg
das
cld
in
lea
mov
inc
mov
mov
ss
in
adc
repz
clc
mov
js
adc
pop
aad
adc
or
and
test
pop
rolb
hlt
arpl
mov
lret
inc
cmp
insl
out
std
pushf
movsb
in
ja
xchg
mov
adc
lahf
in
data16
stos
or
jle
insb
or
add
insl
add
pop
or
lock
pusha
mov
or
lret
xchg
pushf
xor
and
sbb
sub
lret
mov
jbe
shlb
inc
adc
ret
inc
xchg
in
push
xor
or
jo
xchg
addl
or
and
adc
in
xchg
sub
or
fmulp
adc
pop
or
cmp
stos
adc
jnp
mov
pop
mov
mov
jnp
adc
and
leave
ret
jb
fcmovb
lret
mov
xchg
xor
dec
xor
mov
or
fwait
out
xorl
lcall
ret
outsb
mov
arpl
arpl
jmp
enter
ljmp
fsubl
pop
cmp
outsl
ja
inc
jp
xchg
xchg
rcrl
push
aas
dec
stos
cmp
into
out
sbb
mov
repz
sahf
inc
mov
mov
lock
out
loopne
mov
clc
cmp
bound
ret
or
outsb
nop
adc
lcall
jns
lahf
xlat
jl
call
jae
cmpsl
add
daa
adc
mov
mov
andb
xchg
jp
roll
inc
das
dec
adc
mov
adc
and
push
xor
adc
add
add
push
pop
inc
and
pop
pop
ljmp
and
xchg
fstpt
loope
aas
cmp
lret
in
mov
inc
push
adc
stos
sub
out
and
add
dec
call
inc
mov
aad
js
std
pop
adc
stc
fwait
es
aam
and
dec
mov
lds
mov
jle
ret
or
cmp
ret
dec
mov
repnz
cli
push
scas
dec
xlat
repnz
or
das
mov
arpl
repz
jl
lret
and
pop
clc
inc
jno
dec
dec
xor
jae
inc
sarl
sub
xchg
stc
xor
add
outsb
decb
or
xchg
icebp
mov
repnz
test
loopne
mov
arpl
cs
xor
in
push
fildl
shrl
add
dec
sub
dec
hlt
dec
add
outsb
jp
sbb
xchg
or
shrl
mov
mov
fmull
adc
hlt
adc
sbb
push
push
sub
movhps
loopne
pop
push
jne
xor
call
out
test
lds
xor
shrl
and
jns
cmpsb
pop
dec
xor
sub
inc
xchg
cmpsl
loop
movsb
shlb
inc
push
ja
loopne
insl
sub
push
arpl
loop
push
pop
ja
xor
iret
jo
jge
inc
nop
pop
push
fsubl
sub
popa
xchg
dec
inc
mov
call
adc
bound
rolb
jl
push
and
jo
xchg
jmp
shll
popa
push
jge
addl
aas
fdivl
or
imul
mov
jp
xchg
inc
push
stos
out
adc
mov
or
add
push
and
daa
aam
in
or
xor
mov
ret
mov
lcall
leave
xchg
or
add
popa
pop
mov
jle
sti
jns
push
divb
mov
pop
rclb
pop
inc
jo
push
cld
xlat
clc
insb
iret
scas
test
js
pop
mov
ret
mov
pop
rolb
mov
daa
aas
push
out
cmp
shlb
mov
int3
xchg
pmaddwd
inc
pop
lahf
pop
push
xor
xor
shlb
mov
push
fsubr
push
and
sub
cmp
add
push
fs
and
addb
add
or
xchg
push
sbb
jle
je
jne
pop
out
mov
addl
mov
mov
je
mov
fistpll
jo
shr
mov
pop
jmp
jl
pop
scas
xor
mov
mov
movsb
dec
gs
jbe
loop
add
scas
sysret
bound
es
mov
in
xor
dec
fbld
xor
adc
dec
and
sub
pop
mov
jb
int3
movsb
sbb
add
and
jne
sub
fmuls
mov
or
test
hlt
pop
push
push
shll
mov
ret
inc
xor
jne
addb
test
xorl
aas
add
push
movsl
dec
pop
mov
push
stc
pop
adc
push
xchg
xor
add
and
mov
test
adc
ja
push
aam
push
push
cmpsl
add
in
and
or
push
lahf
enter
andl
sahf
sti
jnp
push
xchg
mov
sbb
fs
fwait
pop
adc
inc
ret
fsts
ds
das
in
push
popf
pushf
movsb
push
dec
adcb
es
sbb
jae
add
mov
inc
jbe
cmp
test
fisubrl
stc
jb
push
mov
xchg
rcll
cmp
pop
into
cmp
mov
dec
daa
hlt
aam
sub
fcoml
adc
inc
test
mov
test
mov
je
sbbb
push
sub
repz
hlt
inc
jmp
sbb
es
ret
scas
and
sub
xor
cmp
mov
repnz
and
fwait
add
js
dec
imul
dec
push
xchg
movsl
sarl
aad
je
sbb
and
xchg
inc
fistps
dec
inc
mov
ljmp
add
and
arpl
jno
mov
jns
jbe
cld
jle
lock
xchg
and
sti
mov
clc
mov
dec
sub
xor
jp
pusha
push
jl
mov
mov
xor
out
xorl
cmp
in
cmp
jbe
cltd
test
pop
into
cmpsl
ljmp
lahf
xor
jb
lret
mov
bound
ret
push
pop
push
fnstenv
push
mov
or
mov
loopne
xchg
or
adc
and
divb
pusha
pop
test
cmp
push
div
rol
jb
sahf
aas
dec
dec
insl
dec
sbbl
xor
fdivs
push
and
out
jmp
loop
push
jmp
test
add
pop
dec
add
jmp
xor
cmpsl
pop
shl
sub
mov
add
out
mov
jmp
iret
jmp
repnz
ja
push
enter
ljmp
jecxz
bound
lods
pop
mov
call
or
enter
data16
pop
cmp
add
inc
cltd
mov
xorb
cmc
out
and
inc
insl
icebp
dec
arpl
jl
cmp
fsub
sbbb
xor
fdivrs
dec
and
std
ret
cmp
stos
fstpt
mov
in
jne
data16
test
adc
jo
add
or
jbe
cmpsb
add
or
xor
add
xchg
cs
aam
mov
inc
xor
outsb
cmp
ret
stos
or
xlat
arpl
loop
addb
jg
cmc
sti
xor
mov
in
sub
popa
sbb
xor
outsb
mov
sahf
out
jno
es
and
mov
jmp
sbb
dec
push
xor
push
mov
xor
insl
inc
dec
jnp
test
dec
sub
cmp
mov
mov
lea
ljmp
popf
adc
jge
aas
lret
adc
xadd
rorl
aad
add
in
arpl
enter
out
cmpsl
repnz
jo
cmpl
out
push
das
inc
cmp
add
push
ret
addr16
mov
dec
cmp
lcall
adc
mov
shlb
mov
or
lret
mov
pop
fiadds
stc
adc
mov
dec
rclb
cmpsb
sub
add
xor
adc
xor
stos
cmp
loop
cmp
cmp
stos
or
sub
sub
push
mov
jns
lret
mov
push
ljmp
jmp
jge
fsubl
cmp
adc
xchg
and
dec
adc
push
subl
push
mov
push
repz
push
inc
inc
mov
bound
fistl
jle
jg
jb
jle
adc
dec
jno
jns
stos
call
xchg
sub
xor
mov
mov
mov
cs
xchg
ds
cmp
mov
cli
mov
push
adc
ror
jae
mov
out
jbe
lret
xchg
sahf
dec
pop
popf
or
jae
sub
dec
stc
out
pop
pop
dec
jne
mov
mov
fldl
or
repz
lret
jg
fcmovnu
cs
outsb
dec
and
jbe
pop
mov
test
push
push
add
xchg
mov
ja
pusha
push
lock
pop
mov
imul
insb
cwtl
dec
dec
push
sahf
loop
inc
xchg
lds
pop
inc
jb
and
enter
xchg
jge
rcll
gs
mov
test
fstl
push
clc
mov
mov
xchg
sub
iret
jno
jmp
cmp
cmp
aam
movsl
push
fs
push
sub
inc
xchg
lods
das
in
jg
adc
push
sub
mov
push
cld
loope
insl
mov
jbe
andb
cmp
sarl
sbb
dec
inc
adc
sub
mov
push
shld
nop
mov
in
orb
sub
mov
xor
sahf
out
cmc
push
sbbb
adc
aaa
out
jne
sbb
jge
repz
aaa
pop
adc
or
testl
pop
nop
xor
daa
andb
push
scas
jbe
or
lcall
push
in
fldt
test
mov
sbb
push
aam
fidivl
xchg
jecxz
test
inc
push
js
testl
xchg
lret
sahf
jle
mov
cs
or
loop,pn
lret
insb
adc
xchg
in
jle
les
push
adcb
mov
cmpsl
and
mov
ret
test
scas
gs
call
enter
ret
push
popf
bound
subps
inc
inc
fimuls
ljmp
xchg
cmp
dec
jp
lret
rcrb
dec
mov
add
cmc
push
lret
cmc
push
setb
inc
scas
stc
adc
std
mov
ret
fwait
jae
mov
xchg
dec
icebp
lret
sbb
mov
push
clc
test
lcall
imul
sar
arpl
cmc
insb
pop
or
cli
xor
mov
push
or
and
sub
add
pop
adc
lahf
adc
sti
les
in
pandn
lds
imull
lcall
ret
data16
mov
inc
xlat
cmpl
movsb
fwait
pop
gs
sbb
sarl
sub
shrl
xor
push
arpl
cmpb
push
fisubrs
or
xor
sbb
cmp
jns
std
xor
push
fs
addl
mov
pop
dec
inc
or
dec
ljmp
sub
je
mov
repnz
mov
cmpsl
xor
mov
mov
jge
sub
stos
ja
cld
in
mov
and
cli
and
cltd
jle
push
inc
pop
xor
push
inc
daa
mov
es
sbb
rorl
sbb
fs
pushl
loop
adc
and
cld
inc
scas
cwtl
mov
movsl
dec
push
pop
das
pop
fstpt
push
pushf
sub
cmp
adc
in
jo
loop
xor
rcll
aas
popf
ret
and
push
add
nop
push
lock
fwait
dec
and
xorb
pop
xor
sbb
lea
dec
mov
aaa
inc
into
cmpsb
push
adc
dec
pop
out
xchg
divl
xor
mov
adc
and
or
mov
sbb
repnz
inc
xor
imul
jb
cmp
lahf
stos
orl
lahf
pop
insl
add
push
sub
sti
or
add
fwait
nop
add
lahf
add
adc
in
icebp
mov
gs
aad
pop
adc
lock
mov
sbb
aad
mov
dec
iret
mov
sub
and
fiaddl
repz
jnp
dec
xor
lret
push
mov
scas
and
bound
cltd
ret
out
sahf
mov
ja
stc
shl
cmp
in
call
and
daa
insl
lea
push
add
xchg
repz
dec
jbe
mov
dec
dec
in
hlt
js
mov
jno
cwtl
push
xchg
xchg
inc
imul
inc
push
xchg
jno
xor
loop
jns
ret
lcall
lods
inc
or
loope
int
pop
or
and
and
cld
and
loope
and
jb
lds
fsubrp
xchg
cli
xchg
push
jp
add
jge
cmp
imul
test
inc
mov
test
cmp
sub
sbb
loopne
or
sbb
xor
push
daa
mov
push
je
arpl
test
push
lds
js
pop
push
cli
jae
dec
leave
sar
dec
xlat
dec
inc
icebp
jg
std
pop
std
shr
adc
adc
inc
stc
pop
shrl
mov
lds
scas
test
or
orl
mov
loopne
arpl
outsb
cmp
ljmp
outsb
xchg
cmp
dec
ljmp
adcb
pushw
xlat
jl
leave
jmp
pop
xchg
push
dec
push
inc
rorl
pop
jle
mov
pop
mov
jb
adc
sbb
aam
jmp
add
in
mov
sub
xor
sbb
gs
into
lods
lods
add
adc
movsb
inc
insl
ret
mov
dec
movsb
inc
or
mov
and
xor
daa
or
dec
call
push
ret
mov
xchg
pop
add
push
mov
lods
jge
jmp
pop
mov
jle
jp
pop
int3
cwtl
jge
inc
sub
in
movsl
andl
or
or
in
pop
xchg
sub
hlt
cmp
orb
inc
push
mov
jge
es
xor
mov
and
scas
pop
add
and
dec
enter
movsb
sub
lahf
xor
aad
in
lods
cltd
fldpi
call
xchg
jbe
jg
call
push
daa
or
sub
mov
push
mov
push
popf
fxch
pushf
imul
mov
xor
or
push
cmp
mov
sbb
xchg
std
push
movsb
andb
sub
testl
jmp
adcl
push
cld
jmp
mov
add
sub
mov
popa
mov
sahf
jo
add
scas
ja
mov
outsb
inc
adc
in
mov
ja
adc
jno
dec
lret
imul
or
shr
inc
inc
les
adc
jo
sbb
cwtl
out
push
xor
xor
addl
dec
insb
push
cli
sbb
outsl
fcomps
cmp
sti
jp
jns
test
xchg
in
mov
movsb
pusha
iret
mov
lea
jle
call
insw
sti
or
jae
rcl
sub
inc
ret
inc
dec
jle
sbb
fldl
aas
xchg
fcomi
insb
push
add
push
into
arpl
fisubrs
and
xor
mov
pop
pop
push
dec
push
push
push
fst
push
and
inc
mov
int3
lcall
inc
adc
dec
and
mov
push
sahf
xchg
call
pop
dec
out
or
pop
or
pop
mov
or
gs
negb
adc
loope
outsb
sbb
lods
pushl
stos
inc
fcmovbe
xchg
sub
rorb
pop
test
mov
jecxz
mov
lret
stos
sub
mov
scas
mov
movsb
adc
ja
jno
xchg
mov
pop
sub
insb
push
mov
jp
cmp
xchg
fimull
testb
cmp
push
adc
ret
nop
cmp
stc
pop
dec
or
sub
aam
stos
daa
leave
inc
sti
mov
and
sbb
pop
xlat
pop
enter
pushf
and
aad
dec
jge
xchg
fs
negl
mov
lock
pop
movb
cmp
fdivrs
mov
and
xchg
or
mov
fmulp
out
ret
popf
rcrl
int
cld
xchg
mov
scas
and
mov
push
and
loop
sbb
cmp
and
ficoms
mov
xor
sbb
outsl
pop
push
push
mov
mov
imul
call
icebp
push
jno
or
push
adc
daa
or
cli
sbb
cmp
stos
xchg
outsb
xor
jno
gs
push
imul
jne
jl
add
sbb
pop
mov
add
gs
xchg
jno
adc
mov
and
insl
mov
sahf
sarl
jbe
pop
aas
xor
loope
jb
popf
add
push
add
test
and
icebp
mov
and
push
dec
jge
shlb
xchg
mov
inc
xor
push
add
dec
adc
pop
xchg
xor
imul
fstps
mov
fidivs
shlb
xor
jp
dec
xor
and
pusha
xchg
pusha
or
and
outsl
jae
inc
imul
inc
shrl
mov
jnp
popa
push
sbb
mov
pop
pop
mov
mov
xor
jle
inc
dec
push
int3
mov
sbb
add
int
out
inc
ja
arpl
dec
mov
or
mov
stos
push
test
dec
arpl
pop
mov
mov
inc
aam
in
cmpl
mov
int
sbb
ja
sub
cld
gs
cmp
cmp
aam
pop
push
dec
mov
lods
ret
xchg
cmp
mov
xchg
adc
fcoml
mov
cmpb
out
in
lock
and
adc
fdivs
jbe
bound
std
outsl
jns
mov
jmp
fcompl
jle
cmp
lods
jg
mov
ss
stos
cmp
pusha
mov
xchg
out
or
jo
xorb
andl
insb
inc
pop
push
js
cld
jg
dec
pop
sub
fldl
imul
movsl
dec
aad
sahf
inc
or
cmp
or
leave
add
rorb
xorb
pusha
sub
iret
push
adc
pop
jne
test
add
fldenv
add
icebp
pusha
xchg
mov
cmp
fdivl
test
fsts
adc
cltd
aaa
add
and
cli
dec
daa
push
push
les
bound
mov
movsl
dec
inc
int3
ljmp
adc
lret
shlb
mov
popf
rorl
shll
mov
mov
lret
stos
mov
add
enter
push
jnp
cmc
mov
mov
and
out
mov
jns
hlt
or
mov
aas
inc
fidivrs
cltd
xchg
jb
iret
adc
es
cli
test
fwait
sub
iret
inc
js
std
gs
insl
jbe
test
mov
int
clc
arpl
xor
sub
repz
push
mov
out
popw
test
mov
scas
div
jae
in
outsb
push
push
xor
aaa
lahf
adc
cmp
ja
fs
inc
push
iret
pushf
sub
push
or
inc
popa
sarb
les
dec
or
and
jo
stos
jae
ljmp
cmp
mov
lret
adc
popf
ja
lret
cmpsb
inc
pop
push
test
adc
push
stos
sbb
nop
mull
leave
js
rol
adc
sbb
ja
push
int3
mov
mov
cwtl
cmp
sbb
jo
in
and
or
cmp
lds
jmp
rcrl
js
xchg
mov
movups
mov
dec
aaa
call
mov
adcl
fistpl
jle
pop
sbb
ljmp
mov
mov
lods
lock
add
arpl
sbb
ds
jge
sub
into
or
mov
pusha
or
iret
stos
scas
push
jb
or
cmc
fldt
sub
mov
cmp
inc
xchg
sbb
jb
mov
aad
movsb
loop
add
xchg
mov
dec
adc
cmp
add
rcr
xor
jecxz
imul
jno
dec
mov
ret
push
jl
imul
push
mov
mov
int3
jp
xchg
cltd
xor
fadds
in
insl
mov
sbb
lahf
imul
int
sbb
mov
or
mov
and
gs
push
mov
push
fiaddl
pushf
ret
addr16
xor
out
adc
in
test
ret
gs
lods
test
xchg
push
adc
mov
or
dec
inc
call
cmp
pusha
popa
xchg
adc
push
lahf
mov
bound
into
jae
icebp
jmp
addr16
cmp
fsubrl
xchg
add
decl
ret
mov
mov
mov
test
or
push
addb
in
rclb
xor
in
nop
cmc
mov
dec
jo
pop
xor
cltd
add
scas
fstpt
jo
push
push
adc
pop
add
and
jmp
xchg
lahf
test
and
xchg
push
add
mov
push
push
push
pop
pop
call
popa
inc
mov
and
pop
scas
adc
adc
shrb
stos
and
mov
loopne
adc
mov
sbb
mov
out
lods
fldenv
je
sahf
scas
push
mov
in
aas
cmp
les
lods
xor
movsb
mov
lret
nop
pop
stc
pop
push
sub
adc
pop
idivb
xchg
inc
push
test
ds
cmp
cmp
mov
ja
add
xchg
aad
das
pop
out
mov
add
repz
push
sub
dec
cmpsl
test
jp
sbb
cmp
subl
or
incl
push
adc
inc
fs
lods
pusha
dec
inc
dec
jp
lea
inc
inc
popa
and
call
mov
ss
cmp
and
mov
out
cmp
inc
jb
testl
mov
add
out
jl
into
dec
mov
dec
outsl
push
lods
pop
out
out
mov
pop
out
scas
pop
xchg
loopne
push
jns
daa
push
jp
sub
pop
mov
jl
lods
stos
lods
add
xchg
sub
fldcw
cmp
pop
or
or
fwait
push
and
add
testb
cmc
outsl
lods
aam
push
sub
mov
fcom
sub
enter
dec
ljmp
pop
cltd
xor
popa
scas
cld
call
pop
lret
jo
mov
add
jmp
jb
out
jecxz
or
cld
dec
add
cmp
xchg
xchg
arpl
add
call
imul
push
pop
test
movb
cmp
xor
pop
mov
pop
mov
mov
in
or
mov
xchg
loopne
jge
mov
das
push
pop
loopne
sarb
movsb
dec
dec
mov
jp
nop
outsb
js
js
pop
push
ficomps
push
push
mov
mov
jg
or
nop
lock
sub
fsubs
bound
clc
insb
test
sub
push
pop
mov
es
sbbb
add
mov
or
xlat
jb
lock
loopne
sbb
fadds
pop
adc
pop
or
inc
shll
add
outsb
gs
movsb
mov
cmc
movsb
jp
rcrl
jmp
clc
in
and
out
inc
push
rolb
xor
mov
cli
mov
sbb
mov
jbe
test
or
int3
ja
lsl
scas
dec
mov
pop
fwait
jbe
test
inc
xchg
es
cli
mov
in
pop
es
push
iret
in
push
test
imul
sbb
js
into
sub
sub
daa
fdivrl
cmp
lock
hlt
sbb
int
and
xchg
dec
aad
clc
loopne
jmp
sub
inc
mov
inc
mov
outsb
out
out
in
data16
aas
jo
out
jle
lock
orb
mov
inc
dec
or
jae
or
test
push
add
pop
mov
inc
test
loop
iret
fsub
push
in
loope
js
jbe
imul
inc
jae
inc
dec
jne
int3
inc
outsl
loopne
pop
cmp
adc
and
push
or
cmp
cwtl
and
in
push
mov
scas
and
movsb
sub
xchg
aas
xchg
xacquire
clc
cmp
test
test
lock
int3
jl
push
shlb
lret
iret
pop
mov
sahf
push
cwtl
dec
andl
pop
push
jl
repnz
sbb
gs
sbb
push
add
pop
jecxz
fwait
cmp
mov
xchg
dec
push
lret
stos
xor
xchg
stc
shl
addl
aas
xor
and
mov
imul
repz
inc
pop
icebp
jmp
je
lds
mov
shrl
cmp
mov
push
add
pushf
les
jp
or
gs
and
push
mov
loope
or
mov
and
push
arpl
fnstcw
sahf
push
fcmovnb
sub
xlat
mov
rcrl
sbb
cmp
cmp
adc
xchg
aam
xor
mov
fsubl
push
xor
ss
fdivrl
arpl
mov
adc
cmp
loopne
inc
push
sub
inc
sbb
mov
mov
xchg
ds
jno
mov
enter
push
cli
addr16
test
add
loop
aam
xor
cmp
inc
mov
lods
clc
sub
sti
pop
adc
jmp
insl
cmp
aaa
push
jo
div
and
mov
xchg
mov
push
cwtl
xchg
stos
test
mov
mov
sub
cmpsb
bound
lret
enter
aas
pusha
out
pop
xchg
xchg
aad
and
in
mov
imul
sub
xor
ficoms
aad
xchg
xchg
pop
lds
add
hlt
lret
jbe
add
outsb
js
inc
push
mov
addl
dec
lods
and
mov
or
fs
add
add
mov
sub
inc
mov
mov
fisttpll
outsb
lahf
mov
popf
es
insb
or
ja,pn
sbb
aad
push
pop
clc
popa
stos
into
mov
ficompl
inc
sub
dec
adc
mov
or
nop
mov
loopne
subb
cmc
int3
popa
rcr
jmp
pop
ss
inc
pop
cmp
push
jge
test
jp
inc
lcall
mov
cmp
and
hlt
push
sub
mov
push
rcrl
or
xor
adcl
add
dec
mov
into
jle
jge
pushfw
addr16
gs
jmp
dec
xchg
xchg
xchg
adc
not
subl
pop
es
jge
xchg
or
pop
lahf
je
inc
xchg
and
ds
std
inc
loope
cld
dec
sub
adc
jecxz
icebp
mov
ffreep
pop
outsl
inc
jno
js
jl
loope
das
mov
xchg
pop
mov
in
incb
test
or
push
cmp
sbb
movl
dec
cmpsl
add
dec
adc
adc
xchg
push
pop
divb
inc
xchg
ret
mov
lock
ja
imulb
mov
in
mov
sub
pop
adc
fwait
dec
push
outsb
inc
sub
rcrl
xor
cmp
cmpsb
jge
xchg
mov
xchg
or
das
sbb
sub
and
cmc
ds
jno
ret
inc
xor
pusha
insl
inc
push
push
xorl
inc
add
dec
hlt
mov
mov
jmp
mov
adc
arpl
lods
jmp
outsl
int3
sbb
adc
mov
fcmovb
push
jo
cmc
or
notl
lods
lcall
or
inc
outsb
repz
out
and
sbb
int3
mov
xchg
out
jle
pop
aad
cmpsl
mov
jmp
call
mov
fildl
imul
push
and
adc
jmp
or
sbb
jecxz
dec
stos
inc
pop
mov
cmp
clc
pop
popf
leave
adc
cmc
mov
push
scas
mov
inc
push
idiv
adc
fidivl
stos
in
movsb
adc
cmpsl
icebp
mov
xchg
or
inc
dec
adc
cwtl
pop
jmp
xor
sub
mov
pop
imul
daa
hlt
xchg
push
and
sbb
push
imul
dec
adc
leave
cmp
icebp
or
lock
sbb
test
adc
xor
sbb
sbb
dec
add
and
mov
mov
shlb
shlb
dec
test
and
lcall
int3
addr16
fucom
data16
cmp
lods
push
add
xlat
in
mov
jae
sahf
popl
outsl
pop
je
ljmp
dec
mov
lret
fsubl
sbb
insb
jne
inc
out
cmpsl
lods
or
out
push
inc
scas
cld
ja
add
mov
inc
pop
mov
mov
mov
fs
sub
arpl
jl
mull
movsl
stc
pop
pop
out
pop
jbe
and
mov
loope
mov
ret
rcl
cmp
adc
lcall
shl
xchg
add
repz
mov
movsb
fadds
cmc
stos
push
or
movsl
les
sbb
lods
in
lock
mov
adc
add
cmpsl
pop
imul
test
mov
cmp
sbb
cmpsb
mov
inc
mov
sub
outsl
stc
adc
push
xchg
cmpsb
push
xchg
js
lds
fidivl
decl
mov
clc
push
add
jo
inc
out
xchg
xlat
imul
adc
mov
daa
mov
xchg
cltd
stos
and
adc
insb
bound
pop
pop
test
and
das
leave
in
aaa
dec
push
pushf
in
inc
add
pop
jge
xor
and
mov
sbbb
leave
shrl
adc
adc
push
lods
ljmp
pop
mov
idiv
xchg
mov
int3
enter
mov
sti
mov
ja
imul
ja
into
in
gs
fs
lret
cli
push
and
aas
sub
pushf
nop
inc
cmp
dec
add
sbb
pop
xrelease
add
insl
push
push
jns
stc
das
cli
dec
call
adcb
pushf
add
push
sbb
dec
pop
push
and
inc
ss
mov
pop
pop
inc
pop
and
icebp
jnp
or
jbe
mov
int
xchg
imul
jecxz
or
outsb
jbe
mov
jns
or
xchg
pop
mov
addl
fisubrl
inc
push
out
aad
xor
add
cmc
rcrb
repnz
jecxz
push
add
jecxz
cmp
mov
pop
stos
enter
movswl
pusha
sub
lock
mov
in
das
mov
stos
inc
out
cmp
je
xchg
jne
adc
mov
repz
push
adc
fcomp
xor
clc
dec
xlat
inc
adc
shll
jnp
jge
nop
push
das
pusha
out
pop
add
shlb
push
cmp
pop
inc
sbbl
add
and
mov
shl
dec
lock
fidivrl
mov
rcrl
jno
in
out
dec
pop
subl
mov
xchg
scas
mov
jmp
and
pop
call
in
dec
xor
inc
inc
hlt
subl
ror
fiaddl
sti
push
loop
sub
mov
mov
adc
cmp
cld
xlat
ss
mov
pop
test
ret
or
inc
dec
mov
push
repz
or
cli
int
mov
dec
mov
inc
fdivr
daa
shrb
inc
jp
ds
sbb
outsl
or
lret
add
mov
mov
sub
loopne
dec
or
xorl
stos
test
xchg
out
and
jno
fisubrs
bound
andb
mov
enter
inc
test
sbb
fcmovbe
std
push
adc
sahf
dec
jo
sub
cmp
xchg
push
cld
push
es
sub
ds
jmp
incl
shll
fsubl
and
xor
jge
and
test
sbb
popf
sub
dec
push
pushf
push
out
pushf
sub
mov
sub
shrb
lcall
or
mov
cmp
lcall
out
push
mov
shll
jae
inc
out
jo
jecxz
ja
push
jne,pn
mov
dec
and
movsl
adc
icebp
aas
test
jae
lock
fs
sbb
inc
idivb
outsb
and
jl
sbb
or
sub
push
clc
sub
pop
test
decl
cwtl
mov
fiadds
addb
sbb
lods
add
sub
add
xor
loope
and
sbb
push
idiv
push
fisubrl
jo
fisttpl
pop
jmp
ss
cmp
mov
mov
in
mov
pop
xchg
mov
pop
scas
stc
sub
sub
test
aas
dec
lcall
pop
push
jmp
std
rcrl
inc
enter
div
lret
and
out
jns
daa
lcall
fbld
mov
or
jl
ret
jl
or
es
adc
pushl
rcrl
add
in
out
imul
push
inc
fcoms
push
in
cmp
adc
lcall
adc
lods
and
nop
adcl
test
loop
or
jp
and
out
adc
mov
and
pop
in
mov
add
and
pop
add
jecxz
sbb
inc
data16
sub
lods
xor
xor
mov
and
adc
mov
lods
push
mov
add
mov
imul
popl
mov
pushl
mov
mov
add
je
js
clc
ds
xchg
push
addb
sbb
pushf
inc
popf
cmp
out
pop
sub
outsb
dec
mov
sbb
xchg
add
outsl
outsl
jecxz
xchg
mov
mov
cmp
scas
mov
adc
push
cmpb
sbb
pushf
ret
ljmp
dec
xchg
mov
dec
out
lahf
ficoml
jbe
mov
rorb
enter
sarb
outsb
repz
mov
inc
push
movsb
sahf
test
push
add
ret
xchg
ss
xor
push
jecxz
in
jp
pop
inc
mov
jle
or
loop
les
test
ret
jne
loope
repz
add
xor
call
xor
inc
mov
outsl
movsl
mov
pusha
lcall
mov
inc
lahf
push
pop
pop
int
iret
adc
push
rcll
mov
mov
icebp
cmpsl
sti
push
cli
jle
adc
push
sub
ljmp
mov
push
mov
fwait
gs
pushf
dec
js
scas
inc
push
and
mov
stos
jbe
cltd
fistps
in
test
jecxz
aas
or
test
bnd
outsl
pusha
xchg
pop
jnp
imul
mov
add
mov
aas
pop
adc
add
sbb
mov
cmp
out
into
and
clc
add
mov
shll
push
sub
xorl
insl
xchg
and
xchg
cmp
rcll
jmp
lret
mov
in
arpl
out
jg
stos
or
gs
push
sub
into
adc
int3
push
sbb
xchg
xor
dec
cmp
inc
rolb
ffreep
push
call
xorl
adc
iret
jo
jle
pop
cwtl
outsl
sbb
cmp
ret
stos
aad
mov
and
add
jno
divb
mov
jp
jae
jb
roll
xor
pusha
inc
pop
scas
push
adc
pop
push
and
call
jp
or
lods
push
push
xchg
les
fwait
orb
push
mov
and
ds
jne
je
inc
daa
std
add
inc
xlat
mov
arpl
mov
adc
mov
cmpsb
push
and
das
sbb
add
and
jns
inc
pop
push
shlb
lods
in
mov
fidivrs
jg
jb
cld
enter
lds
cmpsb
mov
gs
daa
or
jnp
jmp
jno
mov
pop
jecxz
lret
sahf
leave
dec
pushf
inc
mov
es
icebp
jp
out
mov
repnz
mov
fs
add
or
xchg
xchg
jp
add
adc
cmpsl
xlat
xchg
stos
lds
jne
adc
mov
pop
lods
lods
pop
test
rolb
cs
test
sbb
pop
cmp
enter
fbstp
pop
push
or
das
sahf
adc
daa
movsb
pop
pusha
iret
outsb
sub
pushf
mov
mul
adc
and
mov
xor
push
lahf
pop
fisubrl
inc
dec
fiadds
in
or
scas
xchg
cmp
out
xchg
xchg
cli
lock
add
daa
in
cld
pop
xor
andl
sub
shrl
cmp
and
sbb
push
mov
sbb
or
sbb
popa
xchg
and
cli
mov
mov
lahf
pop
leave
jle
lahf
xor
jl
aas
dec
adc
push
mov
adc
adc
movsl
mov
cmp
stos
add
xchg
ret
push
adc
shll
mov
cmp
adc
fisubrl
lret
dec
or
jbe
rclb
add
add
dec
outsl
mov
sarl
jae
adc
mov
xchg
sbb
fsubl
call
xor
stos
xor
pusha
add
mov
lock
pop
mov
add
and
cltd
jmp
xorl
cltd
push
daa
jae
xchg
pusha
push
loop
jl
mov
pop
rcll
movsl
dec
ds
mov
adc
jle
mov
int
out
ja
pop
xchg
push
inc
xor
in
jg
testl
jle
add
loop
mov
pop
in
and
leave
add
cmp
hlt
inc
jg
add
out
pop
jle
ss
xchg
scas
loopne
rol
das
adc
clc
das
xchg
je
test
jno
sub
or
incb
mov
sub
add
mov
add
cmp
sbb
dec
test
dec
clc
loope
inc
loopne
into
lock
fstl
popf
push
arpl
ss
aad
push
das
add
faddl
out
inc
js
and
xor
xchg
ljmp
addb
dec
mov
stc
adc
and
or
or
aam
jbe
and
or
lret
add
push
mov
adc
subl
jae
inc
add
repnz
rolb
ret
or
enter
push
testb
sti
xor
aad
sub
ret
mov
and
icebp
push
lock
enter
neg
subl
jb
in
cli
ret
mov
mov
xchg
sub
push
addl
mov
jne
sub
data16
sbb
mov
lret
and
scas
movsl
sub
call
mov
enter
repnz
jle
pop
fs
adc
ja
pop
inc
hlt
lcall
or
pop
sub
pop
jg
shll
mov
adc
pop
movl
mov
sbb
loopne
in
jmp
pop
lret
arpl
jbe
mov
dec
test
pop
rolb
unpckhps
jmp
cs
xchg
addl
inc
addb
call
dec
je
cld
sbb
cmpsl
xchg
xlat
cmp
pusha
cmp
stos
ffree
mov
or
jmp
mov
push
fwait
js
sub
adc
pop
pop
sub
jmp
shufps
adc
mov
xchg
lea
push
sub
stos
dec
xor
iret
orl
in
xchg
jne
push
or
adc
nop
push
jmp
add
imul
pop
lret
mov
rolb
dec
adc
cmp
mov
pop
sarl
les
cmpb
ret
cmpsb
jg
jmp
jbe
or
or
push
call
cmp
dec
dec
into
stos
xchg
loop
push
mov
sahf
pop
xchg
loopne,pt
sub
les
add
and
xchg
popa
and
mov
jmp
in
fs
enter
mov
shlb
pop
adc
dec
sbb
pusha
fildll
cmc
call
pushf
ret
pop
sub
adc
fisubl
scas
popa
or
lea
jecxz
inc
in
mov
mov
cmc
push
sub
fdivr
loopne
cmp
mov
cmpsb
dec
lods
adc
dec
sub
push
jnp
dec
sbb
add
fsubrp
dec
ret
hlt
andb
push
lea
sub
cli
roll
dec
or
pop
sti
insl
dec
adc
xor
std
cli
inc
call
aam
push
inc
adc
lods
and
es
out
mov
xorl
adc
pop
movsb
adc
mov
adc
mov
mov
mov
fmulp
xor
out
out
xchg
or
pop
dec
test
and
sbb
xor
mov
movsb
jp
in
outsw
or
les
mov
adc
jecxz
enter
and
sti
rorb
or
sbb
and
push
mov
push
sbb
pop
test
dec
mov
lea
jmp
sysexit
ja
inc
and
push
daa
or
jmp
out
popa
dec
call
shl
psubusb
jb
jne
xor
cmc
dec
mov
jl
jbe
cmp
mov
and
js
ret
dec
sub
out
addr16
js
pusha
popa
into
xchg
adc
sahf
jecxz
cwtl
lods
pop
test
inc
sahf
loopne
xchg
jmp
mov
pushf
cmp
movsl
adc
jmp
pop
test
mov
ffreep
xchg
mov
aad
push
rcl
add
cmp
imul
sbbb
cmp
xlat
bound
xor
xchg
mov
mov
and
ja
adc
and
lcall
push
int3
lcall
rcll
mov
icebp
dec
enter
xor
xor
cmpsl
imul
jl
mov
iret
ret
jns
xor
out
jae
scas
jge
out
mov
cmp
test
dec
pop
pop
adc
xchg
push
or
mov
adc
sub
pop
xor
popf
in
push
mov
xchg
inc
in
xchg
pop
mov
dec
fidivl
in
and
scas
rclb
and
popa
jle
add
je
test
aam
jge
pop
xor
adc
ds
push
xor
inc
ficoms
xorps
adc
mov
add
cld
cmp
ret
or
cmp
loop
dec
sti
in
dec
mov
and
mov
paddsw
adc
fidivs
xor
das
cmp
add
inc
fs
inc
mov
test
inc
inc
jnp
aas
adc
int3
loop
inc
xor
daa
sbb
pushf
pop
dec
fadds
lcall
pxor
pop
fdivrs
aaa
nop
jne
cmp
aam
inc
mov
xchg
xchg
sub
das
sbb
or
sahf
pop
bound
adc
outsb
mov
sub
adc
ljmp
movsb
pop
outsl
clc
insb
push
adcb
fdiv
iret
sub
clc
cwtl
sahf
inc
and
int3
jo
xor
fstps
imul
adc
add
cmp
sarb
pop
arpl
push
gs
cmpsb
movsl
push
divb
push
test
test
add
lahf
jne
mov
arpl
in
popf
ljmp
ret
cld
inc
push
sarl
jl
xchg
lcall
push
xor
mov
and
outsb
pop
and
ret
xchg
mov
adc
lcall
jmp
in
clc
and
stc
jp
add
test
sub
mov
mov
xchg
push
in
call
mov
mov
add
jnp
and
jbe
pop
mov
adc
int
inc
jbe
loope
mov
shll
or
les
and
mov
lock
and
scas
outsb
into
jae
dec
sahf
sub
repz
mov
test
lahf
push
popf
jle
not
sbb
and
jge
inc
div
mov
xchg
or
shlb
push
ja
lods
sub
sub
out
sbb
push
test
andl
adcl
test
mov
push
test
cmp
fstl
add
push
xchg
movnti
cmp
int3
or
pop
lds
std
push
test
pop
xor
and
aaa
inc
mov
mov
or
sbb
jecxz
and
pop
mov
cmp
fwait
dec
ja
push
cmp
jbe
fdivrs
mov
in
mov
dec
in
mov
stos
adc
mov
fdivl
scas
das
adc
or
push
dec
mov
insl
shl
enter
orb
adc
test
fldcw
sub
jg
scas
dec
rcll
pop
pop
mov
out
add
and
test
frstor
or
movsb
stos
fwait
imul
rcl
test
inc
mov
lea
or
es
push
into
scas
xchg
mov
mov
jp
cld
sbb
std
dec
clc
xor
mov
jbe
pop
pop
sbb
mov
cli
sahf
mov
das
enter
fsubl
inc
push
stc
push
mov
adc
push
fsubrl
pop
in
push
mov
push
cmp
inc
nop
push
mov
push
lret
in
inc
fucomp
adc
sub
lock
mov
ret
cmp
or
fidivrs
inc
rcrb
test
dec
xchg
cmp
jns
rolb
in
fadds
push
popa
loop
jg
fdivrp
jle
add
pushf
shr
xor
pop
sub
bnd
inc
xchg
jns
push
shl
repnz
cmc
pop
inc
sub
xchg
lea
pop
in
mov
pop
adc
xor
mov
mov
and
cltd
dec
and
mov
jno
jle
cmp
gs
cmp
pop
adc
mov
xchg
mov
out
call
nop
jl
pop
iret
popf
adc
in
scas
add
outsl
cs
inc
js
mov
inc
cmp
js
test
fdivp
xor
adc
in
int3
xor
sub
insl
fwait
es
inc
pop
jp
push
lret
push
inc
sub
adc
cmp
test
dec
add
js
les
mov
add
jb
add
lcall
aas
imull
movl
jnp
mov
les
xor
daa
pop
jne
lock
add
pop
fsts
fs
pop
fdivrl
in
lea
mov
flds
repz
add
movsl
push
test
das
dec
ss
shlb
or
pop
cmp
icebp
pop
outsb
stos
ja
test
or
sub
fstp
out
mov
test
xchg
mov
pop
repnz
ror
ffreep
mov
sbb
arpl
add
popa
push
push
jo
aas
ret
inc
lods
or
scas
and
in
cs
ret
xlat
mov
mov
jns
pop
xchg
push
das
jae
or
push
in
rcl
cmp
or
adc
xchg
loop
pusha
mov
sub
inc
enter
dec
or
xchg
push
sub
sti
jge
dec
in
pop
rolb
das
in
xlat
lods
mov
or
jns
or
sub
arpl
jge
mov
mov
mov
cmpsb
mov
subl
lods
pop
jae
mov
cld
aad
mov
jmp
negl
pop
bndstx
adc
pop
ljmp
mov
xchg
cmp
mov
inc
leave
sub
xor
int
pop
mov
loop
test
push
fldt
negl
aas
subb
out
repnz
sbb
fimuls
hlt
loopne
leave
add
mov
inc
mov
dec
mov
leave
fwait
das
dec
scas
in
stos
ret
inc
lds
xchg
aad
cli
mov
sarl
out
jecxz
and
and
xor
mov
cmpsb
mov
iret
lsl
push
add
nop
mov
aad
jb
mov
mov
cmp
sbb
rcrl
aam
adc
rolb
xchg
or
xor
xchg
jge
inc
popf
push
loop
rcrl
mov
adc
add
nop
adc
fs
dec
js
jmp
aas
jno
shlb
mov
jnp
lret
jo
cmp
cmp
add
adc
out
or
jle
not
sahf
out
into
mov
adc
mov
inc
call
add
mov
adc
fstl
roll
fldenv
dec
adc
jnp
fwait
mov
cmpsb
or
xor
fidivrl
aas
mov
mov
or
dec
push
xor
mov
pop
push
jo
mov
mov
xlat
push
out
int3
pop
mov
loope
lcall
jno
push
sbbl
sub
sbb
nop
mov
sbb
mov
add
inc
icebp
dec
cli
dec
in
stos
pop
push
pop
pop
jb
push
into
inc
sub
call
inc
mov
lret
aaa
cli
or
pop
in
mov
inc
or
xchg
daa
shrl
xchg
jecxz
adc
push
movsb
repz
push
add
and
cmp
addr16
movb
push
xchg
addr16
xor
loope
sbb
push
add
dec
icebp
or
dec
subl
arpl
add
in
cmp
add
mov
aas
push
jns
or
xlat
sub
sti
icebp
cmc
jg
xchg
lock
adc
cmp
mov
pop
shr
imul
mov
sbb
jo
out
adc
mov
nop
pushf
dec
mov
je
popa
out
popf
jle
ficoml
stos
rclb
xchg
or
int
es
aas
arpl
mov
daa
test
cmp
das
aaa
imul
mov
fcompl
push
dec
push
in
mov
jg
cmp
imul
push
out
cmpsb
mov
shll
xchg
lret
xchg
pop
sub
push
pop
das
pop
mov
mov
add
add
push
jne
out
xchg
sbb
mov
jo
push
popa
sub
in
call
xor
hlt
dec
add
addr16
cwtl
cli
pop
pushw
loopne
fstps
fdivs
pop
lret
sbb
xor
xchg
adc
outsb
sbb
mov
cmp
dec
lret
mov
mov
inc
addr16
jne
scas
insl
dec
addr16
pop
inc
sub
cmp
push
jge
ret
pusha
or
and
loopne
ja
xchg
or
or
push
sub
xchg
jns
sbb
mov
mov
pushf
jns
testl
add
shr
mov
test
add
sub
mov
mov
push
inc
jbe
lea
cmc
dec
lea
movsl
mov
les
ljmp
cli
add
sbb
pop
les
stc
clc
in
ds
push
and
insb
vpmulhw
or
subb
fnstcw
adc
jge
cmp
jo
test
out
sub
scas
dec
sbb
fdivrs
sbb
addr16
js
inc
sbb
push
mov
shr
inc
pop
jmp
ja
pop
cmc
cmp
arpl
arpl
lahf
jnp
sti
nop
sub
push
dec
ret
dec
inc
jmp
xchg
ficoms
testb
lret
repnz
push
je
adc
xchg
pop
cmp
or
xchg
pop
hlt
loope
ja
mov
loope
lods
notb
sbb
inc
fisttps
dec
popa
popl
insb
push
dec
cmp
test
push
loopne
jg
test
je
adc
into
icebp
or
xchg
gs
sbb
pop
inc
sub
cltd
out
or
imul
mov
push
loop
popa
adc
adc
sbb
std
aaa
sti
rolb
xchg
push
cmp
sub
imul
aaa
ret
mov
popf
jo
neg
adc
inc
inc
hlt
sbb
inc
sub
fimuls
and
sbb
jle
dec
fdivrp
push
push
mov
cmp
pop
in
out
filds
and
mov
jge
cwtl
pop
xchg
loop
push
mulb
outsb
jnp
dec
pop
add
lods
repz
xchg
cmp
cmp
jp
inc
or
hlt
sbb
cmpsl
jge
pop
test
loop
nop
mov
ss
test
cmc
xor
pop
push
or
mov
out
mov
push
sbb
mov
ret
dec
leave
int
lods
addr16
clc
pusha
push
call
sbb
addr16
sti
xor
inc
jmp
push
xor
movsb
jae
sub
pop
out
lea
adc
imul
cmp
push
ds
sbb
xchg
xor
bound
movb
cmpl
in
and
nop
and
adc
inc
and
ficoms
add
inc
adc
inc
push
or
dec
pop
test
dec
lea
flds
cmp
mov
jp
inc
inc
bound
out
push
inc
sub
sub
push
les
adc
inc
mov
mov
lods
sbb
mov
or
mov
fwait
test
push
xchg
lret
inc
push
nop
inc
adc
flds
stos
call
les
jmp
xor
testl
push
enter
pushf
push
xor
jo
nop
sti
les
rcrb
fsubrs
or
sbb
jo
and
inc
jg
jae
je
nop
sti
jo
shll
push
enter
fsubl
bound
jno
roll
mov
je
mov
push
enter
fdivs
jne
stos
enter
pop
pop
fistps
aas
push
jge
addl
mov
std
ja
test
pop
fistl
xorb
int
mov
in
dec
fsubrs
or
and
rcrl
rol
sbb
and
push
in
pop
or
jl
decb
aas
sbb
xchg
fs
cmpsb
or
test
jmp
mov
xchg
jp
inc
repz
push
pop
sub
dec
fnstsw
mov
inc
inc
ljmp
out
add
test
xchg
ret
stos
pop
lret
out
jne
jmp
jo
sbb
xlat
data16
mov
and
cld
jne
shlb
mov
push
mov
repz
xchg
std
adc
fs
loopne
xor
mov
je
sbb
xchg
mov
and
dec
dec
sahf
nop
mov
sbb
mov
test
xchg
or
push
stos
test
roll
test
fcoms
jae
subl
pop
sub
fisubl
sub
rolb
mov
scas
xor
hlt
dec
jmp
jns
scas
sub
cltd
pop
cmp
mov
outsb
daa
mov
cmp
arpl
lock
pusha
xor
pop
popl
or
gs
mov
pop
pop
dec
xchg
jns
enter
dec
adc
das
sub
rclb
adc
cmp
enter
and
push
adc
leave
test
xchg
add
popf
clc
push
mov
shll
lods
dec
mov
sbb
test
push
sbb
xor
scas
mov
jno
mov
and
enter
pushf
ljmp
or
pop
movsl
and
call
or
mov
xchg
xor
rcrl
outsl
stos
outsl
imul
pusha
mov
dec
jo
ss
dec
sub
fdivrl
pop
fildll
pop
outsb
fildll
xor
mov
ja
and
adc
addr16
hlt
mov
push
xchg
xor
mov
shll
adc
xchg
call
pop
repz
les
mov
lods
mov
inc
data16
fcomps
test
jo
jno
loope
gs
push
ss
jb
jecxz
and
and
ret
push
lds
loop
mov
rclb
pop
inc
dec
fs
lods
inc
nop
push
dec
lds
cltd
sbb
jge
subb
jo
push
addb
xchg
rcrb
pop
fbstp
frstor
and
idivl
sub
fbld
cmp
push
cmp
xlat
mov
sbb
jb
adc
xor
cltd
dec
sti
out
repz
stc
mov
fwait
addr16
cmp
inc
sub
shlb
and
push
add
bnd
adc
push
mov
cmp
jno
push
jns
std
aad
push
js
rcll
scas
addr16
scas
lea
push
sub
and
add
iret
ret
out
out
shl
pop
adc
daa
sbb
mov
dec
sub
popf
and
mov
loopne
adc
mov
jbe
data16
mov
xor
icebp
jle
sub
test
sti
mov
rcrl
mov
mov
push
pusha
addr16
fwait
cmpsl
sbb
push
mov
sbb
or
and
fdivr
push
add
in
jle
mov
pusha
aaa
jp
sub
aad
and
lods
fyl2xp1
cli
adc
cmpsl
loop
and
add
shlb
fsts
mov
dec
pop
nop
outsb
mov
mov
pop
psubb
jg
and
xor
adc
cmpsb
xchg
loopne
lea
adc
push
xlat
add
gs
or
or
sbb
scas
dec
addb
imul
in
loope
mov
or
aaa
shl
ret
cmc
or
add
in
cmpsb
dec
sbb
mov
cmpsb
mov
cmp
das
mov
inc
mov
in
and
dec
into
sbb
adc
push
xchg
xchg
push
test
pop
or
inc
lods
popf
stc
mov
add
xorl
dec
inc
fistl
push
adc
fwait
xchg
cs
into
sbb
or
sbb
test
mov
nop
sub
mov
leave
fs
cs
insl
cmpsb
push
mov
adc
test
pop
add
stos
adc
addl
rclw
and
mov
adc
jmp
shll
sub
rclb
jns
int
lods
jne
mov
popf
add
fwait
jmp
adc
inc
stc
scas
cmpsb
mov
add
fimull
nop
call
xchg
xlat
cmp
xchg
movsb
push
jle
dec
fsts
jbe
cs
and
push
inc
out
jl
cld
jb
or
daa
push
mov
call
in
pop
ret
push
orl
sbbb
pop
or
daa
and
mov
arpl
or
movb
push
or
or
or
decl
inc
fimull
and
repnz
ljmp
jo
add
lods
cmpsb
loopne
je
call
or
bnd
addr16
mov
xor
adc
adc
push
outsb
js
mov
add
pop
jle
bound
sbb
les
inc
push
or
pop
cmc
aad
mov
mov
fwait
mov
mov
shlb
sub
or
mov
mov
xor
cmp
mov
leave
and
push
sub
jo
inc
aaa
jno
je
pop
xchg
cli
outsb
pop
out
sbb
shrl
and
dec
ja
push
clc
test
mov
mov
jle
push
xchg
add
push
ja
and
adc
notl
and
cmp
or
jl
sbb
fwait
fwait
xor
xchg
jbe
pop
enter
aam
add
fmuls
in
stc
insb
xor
jo
inc
cld
cwtl
loopne
sub
stos
div
sub
movsl
movsb
sbb
stc
clc
cmp
nop
mov
mov
pop
mov
mov
mov
mov
mov
aaa
xlat
mov
mov
sbb
cmp
add
imul
fs
mov
fsubrl
or
das
inc
popf
cmp
fildl
das
or
das
mov
pop
sbb
add
fnsave
clc
push
roll
shrb
pop
dec
mov
mov
sahf
dec
jno
stos
push
lcall
pop
imul
xchg
popa
mov
shl
cmp
sub
push
push
filds
jecxz
sub
and
je,pt
int3
mov
testl
int3
out
add
pop
sub
pusha
data16
das
push
jo
aaa
out
shlb
add
lds
aaa
xor
das
cli
or
mov
enter
xor
lea
sub
cmc
popf
daa
mov
shll
rorb
push
repnz
adc
into
mov
fiaddl
rcrl
je
movsl
add
aaa
inc
and
sub
sub
lock
je
mov
inc
fs
cmp
shlb
mov
loop
inc
nop
sub
inc
inc
popf
repnz
mov
cli
mul
gs
decl
dec
movsl
fs
lcallw
or
push
ret
aam
add
push
xor
sbb
jp
pushf
cmp
mov
xor
dec
mov
stos
or
adc
lret
aad
shrl
pop
lock
inc
mov
pop
sbb
jno
add
das
mov
and
cmp
jp
pop
mov
pop
pop
xor
sbb
pop
push
push
or
out
jne
lods
dec
push
arpl
insb
cmp
pop
or
clc
mov
std
rcr
popf
push
std
fwait
rol
jl
popf
cltd
pop
mov
xchg
aam
cmpsb
lds
add
testl
scas
addb
fsubrs
xor
xchg
xchg
push
sbb
dec
push
rorl
add
into
mov
scas
shrl
dec
mov
ja
lock
out
push
out
cmp
jle
or
lret
and
xchg
inc
xchg
aas
loopne
sbb
mov
lret
mov
mov
cmp
mov
pop
and
mov
and
xchg
inc
jb
push
std
cmp
ja
mov
nop
outsb
fwait
enter
pop
repnz
outsb
jmp
fists
pop
mov
inc
sbb
mov
shll
mov
aad
je
jle
xor
jbe
mov
push
inc
sub
xchg
xchg
cmc
pop
adc
push
or
and
or
scas
pop
xor
pop
pusha
dec
cmp
inc
pop
popa
test
flds
mov
pmuludq
dec
das
mov
xor
lock
lahf
cld
sbb
and
enter
das
pop
push
sbb
data16
hlt
and
bound
sbb
or
mov
xor
or
inc
dec
arpl
out
mov
stos
testb
xchg
pop
je
in
pop
or
or
fwait
addr16
sbb
xor
jg
cmp
sahf
jns
test
iret
add
or
pop
push
orl
pop
xor
push
mov
xor
sar
jne
fwait
add
das
in
push
mov
stos
add
out
je
and
or
sub
inc
push
push
push
jno
add
pusha
add
ret
push
adc
lret
fs
ret
es
je
aas
mov
and
cmp
out
mov
aaa
test
popa
push
xchg
sbb
stos
add
mov
mov
xlat
pushl
or
out
jecxz
or
aam
and
test
xor
or
insb
jo
push
popa
push
jmp
jl
lock
ret
rclb
outsb
in
hlt
lods
dec
jle
pop
in
cmc
repnz
mov
push
mov
push
fstpl
pushf
stos
inc
out
and
sub
and
xchg
mov
aas
cmpsl
push
xchg
es
push
pop
push
pop
lds
int
mov
call
add
xor
sub
rorl
push
insl
xchg
adc
dec
div
enter
sub
and
add
es
roll
xchg
or
xor
jb
xor
inc
push
xchg
xor
adc
jecxz
mov
jbe
inc
mov
xchg
outsb
fbstp
shrb
cwtl
or
push
sbb
sbb
adc
lock
lret
fmuls
test
mov
icebp
add
mov
mov
or
pop
mov
pop
jecxz
test
imul
xchg
rclb
nop
fcomps
push
xlat
in
test
ret
nop
pop
cltd
das
pop
std
and
inc
jle
repz
jnp
mov
pop
dec
mov
dec
and
mov
mov
mov
xchg
inc
sub
ret
sahf
ss
data16
and
scas
dec
push
xor
mov
fcmovnb
fists
insl
jecxz
xchg
sahf
mov
xchg
incb
mov
cli
xor
ljmp
lcall
mov
jns
aam
mov
jb
dec
je
sbb
adc
dec
in
sti
aad
push
out
fcoml
outsl
dec
and
pop
imul
inc
imulb
loop
mov
jecxz
jmp
mov
pop
cmp
push
xor
dec
lcall
scas
jne
sbb
push
lea
pop
sub
popa
push
shll
fstp
enter
rcrb
aaa
or
aad
mov
popa
dec
sub
idivb
addb
mov
and
clc
pop
jecxz
mov
xorb
jbe
cmp
ret
push
xor
cmpsl
push
call
std
fdiv
sbb
loop
cmpsl
dec
int3
or
ds
xchg
and
int3
in
aas
lret
xchg
test
pop
test
das
aaa
xor
ror
dec
push
push
cmpsl
push
dec
push
mov
pop
call
dec
xchg
push
mov
and
sub
xor
mov
cmp
scas
xchg
xchg
popa
and
in
fisttpl
or
inc
pop
fcompl
cmp
sqrtps
sbb
call
push
dec
mov
add
inc
push
scas
shr
jecxz
lock
push
and
xchg
mov
xchg
add
cmp
in
adc
jle
jl
add
jmp
pop
pop
push
out
xlat
mov
movsb
lods
mov
hlt
gs
aas
dec
mov
push
pop
sub
dec
ds
push
push
mov
dec
pop
pop
adc
add
nop
scas
sbb
mov
mov
xor
callw
insb
mov
push
jns
scas
imul
lock
jmp
xchg
and
std
add
cs
popf
gs
mov
cmp
sub
imul
out
and
mov
push
mull
sub
mov
jnp
mov
orb
xchg
mov
jae
push
inc
std
add
mov
negb
das
pop
movsb
push
mov
adc
iret
dec
subb
mov
dec
sub
cmpsb
test
pusha
sub
pop
xchg
cmp
aas
int
aas
rorl
call
ss
andb
movb
notb
out
xor
mov
push
sarb
mov
test
pop
sub
nop
dec
jle
add
test
pop
jg
ss
sarb
and
lods
fldl
fsts
ret
test
and
inc
mov
arpl
fwait
es
sbb
or
andb
stos
test
xlat
cwtl
add
adc
push
dec
popl
bt
aas
xorb
pusha
xorb
and
adc
add
cmp
fwait
mov
loop
fadd
or
test
sub
cmpsb
pop
mov
cmp
pop
xchg
cltd
dec
xor
ljmp
cltd
xor
ficompl
stos
inc
sbb
mov
xlat
lods
or
dec
out
mov
stos
jmp
jecxz
push
and
or
xor
in
sbb
outsb
mov
and
aaa
dec
out
push
loope
ret
divb
xor
notl
mov
test
xor
call
ja
aam
push
dec
pop
icebp
pop
sarl
dec
cmp
lcall
stos
imul
xor
push
xor
push
xchg
mov
pop
pop
fidivrl
inc
pop
and
test
fwait
dec
inc
jecxz
inc
into
or
cmc
pop
adc
xchg
aaa
lods
cmp
xor
ss
fadd
lahf
add
test
mov
aam
xor
mov
push
shll
and
inc
mov
fldcw
mov
jmp
aas
les
xchg
pushl
mov
cld
jmp
adcb
fwait
mov
xchg
mov
mov
mov
push
dec
jge
jbe
xor
incl
shlb
mov
mov
push
adc
dec
in
fsubrp
mov
out
push
mov
push
adc
or
mov
adc
fildll
fidivs
adc
int
scas
cld
and
push
les
iret
sub
jns
mov
clc
mov
add
push
adc
das
sti
data16
scas
mov
xchg
sub
nop
rorb
push
cs
loop
and
ja
xchg
faddl
out
das
xchg
xor
icebp
mov
sub
outsb
movsb
cmp
pop
cmp
jmp
adc
pop
jne
dec
sub
cmc
lock
xor
dec
mov
pop
mov
inc
movl
lahf
out
imulb
out
daa
sub
jmp
sub
xchg
cli
adc
mov
cmc
jg
lahf
out
inc
inc
call
adc
or
stos
adc
mov
xchg
pop
jmp
les
test
jbe
sub
outsb
mov
popa
cwtl
or
jne
jge
scas
mov
or
das
pop
and
adc
mov
or
rorb
aam
out
mov
cmp
test
pop
xchg
mov
adc
cltd
gs
cs
push
push
outsl
popf
loope
cld
stos
add
sbb
jmp
mov
je
inc
jne
pop
inc
hlt
cmp
mov
push
mov
cltd
jg
cmp
iret
jo
cmpsb
test
dec
adc
sub
out
inc
pop
cli
push
cli
inc
pop
sbb
movsl
push
add
push
dec
das
mov
lret
xchg
test
inc
mov
xor
ss
jnp
rorl
mov
xor
sub
mov
push
je
mov
imul
out
cwtl
fldt
and
jne
subb
test
push
push
dec
mov
out
testb
mov
inc
pop
ds
pushf
bound
cmp
lds
lods
add
push
ss
popa
jns
call
psrld
scas
mov
push
mov
inc
sti
das
loope
inc
ds
js
dec
fs
loop
and
sub
and
dec
lods
or
cmpsb
lret
push
mov
jb
lds
pop
fwait
jno
inc
push
pop
ljmp
stos
mov
shlb
pop
fnstenv
mov
loope
mov
sub
sub
in
stc
push
xchg
repz
int3
add
mov
mov
cli
cltd
insb
and
sub
or
cmp
stc
es
in
xchg
test
push
mov
xor
add
div
and
cmpsb
mov
xchg
pop
xchg
ret
xchg
add
mov
adc
inc
je
adc
std
inc
test
mov
xor
sbb
dec
cmp
lock
cmp
jbe
das
adcb
idiv
jge
in
arpl
sbb
lds
dec
pop
jmp
jecxz
out
mov
jmp
mov
fsubs
pop
and
test
pushf
clc
in
mov
enter
pop
loop
enter
out
fs
in
mov
push
lret
mov
push
shl
lret
in
xchg
inc
fxch
push
cmpsb
cli
int
test
leave
test
or
andb
push
adc
xchg
mov
sbb
stc
pop
in
cs
je
sbb
and
push
jnp
lds
dec
pop
enter
jno
outsb
cmp
imul
ret
cmp
sbb
lods
dec
cltd
jl
dec
push
jge
sub
fstpl
rolb
lds
lods
sub
jl
clc
outsl
inc
repnz
inc
lea
or
movsb
cmc
cmp
mov
ret
pop
mov
mov
fldt
dec
add
mov
fidivs
cmp
inc
cmpsb
stos
jne
dec
fistpll
in
lcall
vmwrite
lea
nop
and
pop
cmp
push
out
inc
or
bswap
dec
filds
and
call
pop
push
in
sbb
lret
add
mov
cltd
mov
inc
add
xor
dec
popa
xchg
scas
jge
loopne
ljmp
or
cmp
in
int3
jge
push
xchg
fimull
jb
sbb
xor
shld
gs
clc
popa
js
xor
jne
pop
sub
bound
sbbb
mov
scas
adc
add
and
cmpsb
inc
je
mov
shlb
mov
out
out
test
sbb
loope
mov
dec
cmp
fwait
dec
je
int3
sub
adc
pop
leave
pop
adc
stc
jbe
fwait
mov
push
out
or
xor
rcrb
push
mov
pop
into
jb
mov
add
sahf
iret
aaa
fcmovne
bound
ljmp
fiadds
ss
xor
sbb
jne
iret
mov
mov
xor
adc
fldt
aas
imul
dec
push
test
mov
out
jmp
add
or
pop
call
mov
insb
in
xchg
insb
and
shll
add
iret
pop
sbb
and
and
add
or
mov
je
mov
leave
fcomi
imul
and
pop
pop
or
flds
lock
pop
shrb
or
sbbl
les
push
sub
push
das
sub
pop
cmp
mov
jecxz
int
mov
pop
sub
add
mov
enter
jne
pushf
or
jp
xchg
outsb
xor
outsb
inc
lods
sbb
rolb
loopne
push
or
rorb
push
push
in
leave
adc
cmp
cmp
mov
sub
pop
inc
adc
sbb
mov
jns
insl
push
push
mov
in
cmpsl
inc
ret
pop
adcb
and
test
pop
sbb
rcrl
imul
mov
inc
xchg
and
xor
or
mov
xorl
mov
mov
test
mov
mov
ljmp
dec
pop
pop
sbb
aam
inc
dec
mulb
call
adc
in
call
xor
xchg
push
jp
and
ret
push
mov
cmc
nop
and
mov
and
dec
sbbb
aas
testb
lock
sub
xor
sbb
testb
xchg
gs
jbe
and
sub
sbb
xor
xchg
adc
sbb
xchg
fwait
cmp
inc
bswap
or
sbb
fildl
fmulp
movsl
xchg
je
sub
pop
pop
and
into
sbb
add
add
cmp
xor
mov
cmp
inc
orb
iret
lret
pop
jnp
and
dec
push
enter
push
pop
dec
mov
insl
adc
clc
pop
aam
sbb
mov
insl
sahf
push
je
or
in
xchg
test
stc
stc
mov
mov
and
sbb
arpl
pusha
xchg
add
add
inc
ss
pop
jne
mov
or
fmuls
xor
xor
popf
mov
xchg
pop
dec
leave
adc
popa
shll
mov
icebp
mov
push
lret
pop
rorb
ja
fnstenv
push
sbb
pop
sti
xadd
xorl
loope
xchg
xor
repnz
popl
push
jecxz
repnz
mov
enter
adcl
mov
inc
cmp
fcoml
adc
cmp
mov
mov
iret
sbb
adc
nop
cmpsl
popa
dec
inc
fcoml
movsb
inc
xchg
fsubr
addr16
daa
adc
sub
stos
pop
xor
or
sub
inc
jmp
scas
scas
ficoml
dec
adc
fwait
mov
ficoms
rolb
pop
sub
jmp
fs
test
xchg
and
add
mov
lods
push
push
fidivrl
ljmp
or
xor
mov
cs
xchg
or
sub
xor
inc
call
outsl
sub
rolb
jp
imul
andl
cmp
std
imul
imul
xchg
mov
in
lds
pop
lret
lret
inc
subb
or
sub
adc
or
xchg
shrb
or
imul
or
hlt
adc
push
fidivrl
mov
xchg
scas
data16
aad
add
pop
test
adc
imul
xor
sub
test
push
jns
adc
iret
je
leave
pop
cmpsb
lcall
mov
xor
inc
pop
popf
add
jmp
mov
or
sub
jnp
dec
stos
icebp
inc
hlt
push
out
sbb
ss
aam
nop
mov
sub
andb
stos
cmpsb
scas
loope
arpl
leave
stc
fistpl
xchg
inc
iret
push
pop
dec
add
decl
and
std
and
imul
inc
cli
xlat
daa
fildll
loope
sbb
lock
loope
mov
adcl
xchg
ja
sub
jmp
push
fcoms
fs
popa
rcl
icebp
and
loop
pusha
inc
jmp
mov
cltd
testl
mov
push
push
push
cmp
sub
xor
pop
pop
insl
inc
lods
imul
sub
dec
js
rolb
icebp
cmpl
adc
shl
xchg
sbb
mov
add
clc
orl
loopne
movsl
outsb
rcrb
xchg
outsb
jge
xor
mov
mov
dec
mov
xchg
push
pop
sub
and
pop
push
adc
pop
bound
jnp
jo
out
pop
incb
test
xorb
ret
cmpsb
mov
or
xor
hlt
push
std
lock
cs
cmp
push
sbbl
lahf
dec
mov
or
lock
cmp
daa
and
fwait
sbbb
std
gs
xchg
popf
sbb
jbe
cmp
push
pop
add
xchg
call
xlat
push
jle
jbe
in
pop
pop
xorl
cs
cmpsl
js
std
jge
cmp
out
mov
or
mov
push
std
xchg
loopne
adc
or
pop
xchg
inc
xor
into
mov
sbb
add
imul
ret
push
out
bound
mov
and
push
icebp
scas
ljmp
jbe
dec
ret
pushf
scas
jns
adc
cmpsb
jae
mov
icebp
outsb
mov
pop
movsl
jge
add
xchg
jmp
test
cmpsl
or
push
mov
aaa
pop
je
inc
cmpsl
popf
shl
push
aas
mov
xchg
push
bnd
lcall
fistpl
xorb
inc
nop
imul
psrlq
jns
addr16
cmp
test
mov
mov
dec
jbe
pop
or
jecxz
sbb
dec
cmp
xor
scas
inc
sbb
popf
sbb
mov
dec
add
mov
sbb
or
mov
dec
jns
push
or
scas
imul
sbbb
push
fidivrs
in
cmpsb
dec
ret
jne
xor
lret
xlat
incl
pop
lcall
or
or
fistps
insl
in
push
push
rorl
sbb
loope
adcl
mov
push
enter
cmp
inc
ja
pusha
lahf
pop
fs
jge
outsb
pop
cmp
lahf
sub
pop
mov
mov
sub
int
addr16
sti
outsl
add
push
icebp
or
or
data16
mov
shrl
ret
out
sbb
arpl
mov
out
enter
cmpsb
inc
push
movb
insb
jp
adc
mov
lea
pop
pop
data16
adc
mov
jbe
insb
test
nop
mov
mov
mov
mov
jp
fldenv
and
daa
pop
inc
mov
adc
cmp
mull
lds
in
dec
jle
xchg
jno
jae
fdivrl
roll
sub
int
popf
or
pop
js
pushf
push
push
ret
call
push
lea
xor
add
in
cmp
jmp
adc
ret
dec
inc
cmp
cmp
lea
mov
mov
add
mov
jge
cmpsl
or
ficoms
sub
jmp
in
sbb
cltd
xor
popa
xor
pop
xor
daa
adc
notl
add
push
arpl
dec
fisttps
sbb
jo
pop
into
jl
dec
adc
popa
inc
daa
clc
jae
jbe
mov
loope,pn
fistps
xchg
and
shll
mov
cltd
mov
inc
lods
pop
push
push
fisttpl
xchg
fidivrs
or
xlat
push
es
pop
xchg
adc
setne
fiadds
jmp
sub
or
pop
pop
push
test
cmp
adc
add
cltd
sbb
sbb
bswap
or
rclb
lock
xchg
jmp
loop
adc
inc
add
mov
in
or
pop
xchg
in
adc
xor
fldcw
leave
cmp
mov
jno
cli
out
push
je
test
int
sti
dec
popa
xchg
repz
bound
ja
enter
cmp
push
jp
or
and
xchg
fstl
clc
dec
cmp
jl
pop
testl
mov
push
les
cmp
push
cs
lea
push
xchg
ffreep
sbb
cmp
add
push
and
andb
xchg
dec
xchg
cmpsl
test
stos
mov
out
push
add
add
addl
xchg
pop
mov
and
mov
adc
mov
mov
cmp
out
notl
mov
xor
cmc
pop
ds
loopne
inc
push
jno
sub
sbbl
popa
mov
inc
loope
adc
cmp
cld
fldt
mov
faddl
xchg
add
in
adc
inc
jle
cmp
sub
adc
mov
push
mov
pop
ja
std
push
mov
inc
adc
lods
inc
jo
mov
push
addl
jnp
pop
push
or
out
ja
insl
daa
test
cmc
lock
mov
jb
fldl
daa
imul
push
or
insb
ret
bound
sub
into
mov
mov
mov
movsl
push
lods
aam
out
pop
xchg
inc
mov
sbb
sub
addr16
xchg
jge
outsl
scas
fildl
lret
mov
in
mov
pop
addl
pop
sub
movsb
adc
es
fistl
mov
mov
rcll
pop
popl
add
mov
sbb
pop
pushf
cld
test
mov
xor
mov
in
stos
adc
push
aad
push
jne
enter
imul
ljmp
fisttps
jl
loope
jp
jle
adc
jne
xor
sbb
pop
mov
or
mov
loopne
imul
stos
mov
push
mov
pop
xchg
movsl
test
adc
std
in
jae
mov
mov
movsb
pop
fcompl
and
push
popf
add
xor
and
ljmpw
out
icebp
pop
insb
xor
dec
xchg
xor
cld
and
shrb
inc
movsl
add
js
mov
mov
cwtl
xlat
mov
scas
movsl
dec
mov
or
push
lcall
cmp
fdivrl
pop
arpl
lods
ret
xchg
add
sbb
cmc
mov
lods
cmp
xor
cmpsb
loop
cmp
push
lret
mov
xchg
std
xchg
cmp
and
push
adc
inc
or
nop
or
adc
in
sub
xchg
dec
and
xchg
mov
mov
cmp
imul
shlb
add
repnz
out
int
sbbb
and
mov
fisubrl
or
insb
jne
in
je
notb
icebp
in
repnz
adc
popf
lcall
idivl
push
sti
xor
dec
mov
adc
mov
sti
xor
pop
test
xor
push
mov
sbb
pushf
cmpsb
mov
js
in
mov
push
add
sub
inc
pop
in
lods
adc
loope
mov
dec
pop
jae
mov
push
mov
inc
xchg
and
inc
or
cmp
loope
bound
or
popa
jle
mov
xor
fstl
cwtl
outsb
add
pop
sbb
jecxz
subl
add
fs
sub
jo
scas
dec
adc
cli
lahf
jbe
cld
in
gs
cmpsb
mov
leave
sub
and
push
push
inc
push
dec
fidivl
std
ljmp
sub
loopne
test
pop
push
adc
push
popa
fsub
fistpll
es
push
fdivr
rol
mov
add
ret
sbb
mov
outsb
push
shll
mov
cli
sbb
push
dec
mov
lods
fstl
enter
pop
jne
add
lods
pop
pop
mov
add
jp
aam
sbb
or
or
addr16
lds
stc
movb
fdivrp
or
or
mov
jne
es
pop
or
cmp
add
jmp
mov
add
mov
lret
popa
jmp
movsb
xchg
popf
inc
jle
mov
xor
mov
frndint
fisttpl
sub
jge
xchg
xchg
and
das
fidivrs
fwait
inc
mov
aas
aaa
cwtl
dec
sub
arpl
lea
sar
incl
fs
lds
mov
mov
push
or
xor
rorl
lret
cmpsb
and
jg
in
inc
ss
std
push
push
sbb
mov
sub
sub
dec
imul
mov
mov
xchg
cmc
mov
js
pop
xor
mov
push
orl
dec
outsb
ror
incb
mov
loope
leave
cmp
leave
aad
mov
mov
cmp
aaa
xor
sbb
xor
dec
inc
cli
insb
pop
int
bound
int
je
mov
lock
push
pop
das
nop
inc
ljmp
das
cli
out
enter
lock
mov
int
and
jp
mov
insb
cmpsl
dec
and
scas
std
test
popf
jmp
addl
in
ljmp
std
lret
push
dec
jp
pop
imul
cs
test
sbb
fdivrl
movups
or
lods
mov
enter
sti
inc
in
fsts
add
out
fldcw
fisubs
gs
sbb
mov
push
test
cmpsb
das
jl
test
mov
loope
gs
add
adc
pop
pop
roll
jg
pop
mov
jge
mov
bound
repz
push
hlt
jae
mov
cmp
lret
int3
bound
mov
mov
cmpb
dec
sub
or
dec
js
scas
test
xchg
int
lock
dec
pop
scas
aaa
or
jb
sub
fs
pop
jo
call
sbbb
push
out
pop
test
xor
in
mov
lea
pop
push
pop
mov
dec
pop
daa
out
js
pop
into
xchg
stc
lret
adc
adc
aad
add
cmp
std
nop
cmpsl
jne
inc
sbb
das
mov
cmpsb
adc
pusha
arpl
and
jb
inc
or
mov
xchg
pop
sub
loopne
lahf
les
add
or
sbb
inc
data16
stos
inc
mov
dec
jp
push
or
dec
dec
or
jbe
mov
push
fs
inc
js
push
pop
xor
jo
mov
mov
inc
add
aas
rcrl
cmp
sub
and
fwait
inc
and
add
sarb
inc
sti
push
pop
jmp
aaa
rcr
adc
outsl
cmp
jg
stc
cmp
std
pop
insl
repz
pushf
dec
jo
not
cmp
addr16
clc
add
jge
xchg
jno
nop
inc
cltd
jb
std
sbb
add
pop
mov
sbb
push
mov
mov
dec
lock
pop
push
pop
aam
enter
sbb
xchg
fidivrl
sub
push
lds
and
add
sbb
out
ret
enter
jmp
sbb
repnz
sub
sbb
add
add
dec
cmp
cmp
jo
cmp
jle
mov
adcb
inc
or
repnz
cmpsl
pop
sbb
mov
iret
cltd
cmp
add
addl
push
mov
repz
mov
stc
ljmp
bound
test
mov
pop
sub
dec
push
cmp
sub
sti
lcall
inc
sbb
and
xchg
add
rclb
dec
cmp
xorb
in
cmc
sbb
dec
mov
dec
or
lock
scas
in
jp
js
mov
cmpl
sbb
xchg
push
pop
add
pushf
sub
je
ja
rcrb
psubd
inc
xor
inc
dec
inc
mov
inc
sub
paddb
adc
ja
cmp
lahf
push
stc
fbstp
xchg
jbe
push
jl
dec
push
cs
push
add
ss
or
out
std
jmp
sbb
orb
out
xor
xchg
xchg
lods
and
out
sbb
mov
push
inc
fdiv
xor
jo
and
in
lahf
xor
push
xor
mov
stc
in
mov
inc
push
out
mov
or
iret
jge
jne
xchg
popf
das
xchg
and
mov
div
test
inc
lods
sbb
in
sub
sahf
imul
sahf
inc
imul
jg
pop
and
push
xchg
ret
pop
ds
stos
pop
sub
add
jl
pop
and
push
mov
jo
mov
cmc
sbb
jb
and
jmp
sub
push
call
xchg
adc
in
out
xor
sbb
jo
xor
xor
lahf
push
add
stos
fcmovnb
cmp
or
sbb
fwait
or
ja
or
imul
and
cmpsb
xchg
stos
icebp
rcll
lods
sbb
mov
data16
inc
mov
mov
in
popa
push
pop
andl
addr16
mov
das
push
cmp
and
mov
fsubrs
mov
call
loope
fcompl
push
or
test
xchg
sub
mov
mov
pop
jmp
xchg
pop
mov
pop
or
repz
insl
jl
orb
arpl
sahf
mov
loop
rolb
lea
call
mov
loop
add
jbe
loop
sbb
inc
jno
push
pop
mov
rcrb
ja
enter
push
dec
pop
shrl
jle
test
cmp
fbstp
mov
mov
sub
lret
pop
and
loop
movsl
adc
sbb
fcomps
sub
es
sub
sbb
scas
xor
sbb
jbe
cli
xor
jle
pop
scas
and
xchg
es
cmp
icebp
push
and
cwtl
mov
sub
lea
bound
pop
pop
adc
loop
mov
sub
not
int
xchg
bound
out
lea
bound
mov
out
inc
xor
orb
lds
movsl
and
cli
mov
ret
mov
and
imul
pop
cld
cli
mov
shrl
push
sahf
mov
inc
mov
cmc
sbb
xorl
cld
or
sub
push
jbe
and
gs
or
push
dec
adcl
cmp
xchg
dec
and
adc
mov
mov
sarb
adc
mov
and
into
mov
sbb
data16
scas
jnp
inc
sub
xlat
adc
enter
add
iret
cmp
jg
jbe
fdivl
push
or
dec
call
or
lea
inc
repnz
mov
in
jo
lods
push
jge
test
mov
call
cld
adc
xor
adc
call
ds
jge
scas
and
pop
test
pop
or
movsb
lcall
insl
sub
insb
mov
in
add
xor
test
adc
addr16
fcompl
mov
scas
popa
xchg
jg
cmc
mov
inc
in
scas
mov
push
shll
cmp
sahf
aad
mov
dec
lret
push
out
fiaddl
stc
jg
fadds
push
int
sbb
je
call
or
hlt
jnp
lock
mov
lahf
mov
or
insl
mov
and
jae
xchg
mov
mov
fxch
out
or
adc
aas
jns
mov
test
std
rcrb
xchg
inc
fadds
jnp
pushf
sbb
fabs
push
into
dec
mov
mov
sbb
jmp
add
dec
in
adc
jg
add
lea
mov
test
cs
hlt
sbb
inc
or
cmp
test
push
lock
push
out
mov
mov
inc
pop
xchg
data16
xor
inc
in
mov
mov
inc
fildll
or
sub
enter
and
dec
cvtps2pi
push
les
push
push
fnstcw
fadd
int
cmp
andl
loopne
pop
push
mov
inc
pop
pop
hlt
add
jmp
dec
mov
mov
add
or
and
in
or
sbb
inc
and
jne
xorl
in
cmpsb
xchg
jle
push
hlt
aam
mov
adc
push
in
fwait
or
jae
sbb
popf
xchg
mov
lea
ror
or
aaa
inc
pop
scas
sbb
fildl
lcall
mov
dec
mov
push
pop
outsl
pusha
sbb
mov
inc
jg,pn
enter
dec
leave
test
fucomi
sub
lcall
imul
add
roll
mov
jecxz
add
pushf
pop
lea
add
mov
je
ljmp
jne
adc
sbb
adc
call
in
add
cmpsb
stc
insl
pop
shll
movsl
push
jmp
popl
clc
and
push
out
fadds
mov
push
mov
pushf
sti
push
cmp
aas
test
ss
insb
scas
jg
lock
push
xor
test
mov
jno
mov
imul
out
sbb
shrl
call
xlat
push
sub
in
loopne
sbb
aas
cmpsb
stos
push
aaa
aas
fdivs
jmp
or
add
push
jle
xchg
push
xchg
dec
mov
sar
pusha
or
or
mov
fstpl
cmp
and
xor
stc
inc
cmpsb
fists
jecxz
mov
sahf
jbe
rcrl
and
sub
xchg
lods
outsb
hlt
stos
mov
es
sarb
movzwl
mov
dec
andb
xchg
dec
or
ljmp
imul
bnd
cmp
cmp
int
aad
push
icebp
xchg
popf
sbb
mov
dec
idivb
bound
ret
jl
xchg
repz
xor
fs
dec
or
divb
mov
mov
test
addr16
lea
lret
and
std
pop
sub
xchg
add
push
mov
ds
lods
leave
fistpll
nop
je
sub
or
stos
jle
add
insb
loope
xchg
sub
jp
ljmp
inc
push
aam
fs
xchg
pop
pop
adc
jne
xchg
stos
fs
push
adcl
leave
stos
lock
jmp
cs
lods
movsl
or
xchg
leave
pop
loop
xor
inc
cmc
jbe
aam
sbb
mov
inc
cmp
psllw
adc
in
pop
lds
outsl
insb
insl
repz
std
inc
jo
sbb
loopne
fldl
and
in
xor
jle
jns
loop
je
inc
or
push
sub
loop
mov
repnz
popf
push
sub
push
loop
ret
jnp
adc
out
add
add
fimuls
sub
mov
dec
test
mov
test
iret
inc
shr
filds
and
outsb
dec
pmulhw
or
inc
mov
hlt
insb
xor
jge
lods
jae
leave
xor
pop
pop
pusha
jns
add
pop
jmp
inc
inc
call
jno
call
adc
cmp
test
xor
or
sbb
fs
cltd
push
mov
dec
mov
add
mov
jb
out
iret
push
jle
out
push
add
movb
repz
jns
mov
lods
cwtl
xchg
and
mov
jnp
test
push
ret
insb
dec
cmp
mov
sbb
lods
add
inc
push
xchg
roll
jnp
pop
sub
pop
sbb
mov
nop
inc
loopne
add
in
leave
in
cwtl
enter
and
aad
fidivl
aaa
pop
les
outsb
adc
add
movsl
jns
dec
test
adc
jae
das
mov
sbbb
mov
out
mov
repnz
add
out
lcall
incb
nop
mov
movsb
mov
dec
mov
jae
js
inc
shrl
mov
sbb
cmp
sub
jae
mov
push
sbb
sbb
imul
and
pop
fdivrl
cmp
pop
dec
sub
xchg
testb
mov
rorl
mov
cli
insb
aad
pop
cld
cli
mov
test
shr
pop
mov
push
inc
mov
sub
imul
rol
outsb
jns
dec
sub
fisttpll
aas
mov
mov
push
cmpb
pushf
dec
aad
jge
nop
add
idivl
mov
je
dec
or
enter
test
cmp
mov
cmp
xorl
je
sarb
out
enter
xor
lahf
inc
xor
mov
add
xchg
std
aam
push
into
xchg
nop
mov
cltd
in
jl
imul
mull
jl
sub
mov
sti
xor
or
push
push
cmpsb
pop
ret
cli
sbb
ss
and
sti
dec
arpl
sbb
mov
jmp
jl
xchg
sbbb
pop
push
xlat
mov
mov
pop
sbb
scas
xor
test
and
in
and
inc
inc
ljmp
outsb
enter
jno
rcl
or
aam
lods
pop
mov
jne
movsl
xchg
adc
cmp
xor
pop
adc
sub
adc
punpckldq
sub
lret
sbb
lods
add
pop
iret
jae
push
xchg
pop
mov
daa
test
mov
clc
cmpsb
pop
mov
jmp
lcall
adc
mov
dec
ret
and
stos
push
pop
clc
or
sbb
dec
pop
flds
pushf
adc
rcl
push
repz
jns
pop
rorb
adc
repnz
stos
or
sub
xchg
jmp
sbb
push
dec
fdivl
cmp
adc
pop
dec
mov
stos
inc
aas
sub
loope
mov
push
push
mov
jne
push
xchg
push
pop
pop
addr16
fists
mov
in
cmp
and
sahf
rcrl
push
sub
inc
je
push
mov
adc
and
movsl
add
movsl
cmp
xor
xchg
test
pop
mov
movsb
pusha
loop
add
add
inc
pop
mov
add
popf
repz
jl
add
jnp
and
xchg
mov
data16
sub
lcall
cmp
mov
jnp
shlb
push
sahf
stc
jg
mov
pop
mov
negb
shlb
fcoml
xchg
dec
mov
and
dec
inc
stos
sub
ret
jmp
into
sub
mov
int3
stos
ja
popf
fwait
aas
push
sbb
xor
scas
sbb
pop
sub
test
sbb
mov
add
fnstcw
sahf
aad
daa
shrb
mov
adc
shlb
aam
sbb
popa
push
xlat
sbb
and
cli
lock
movsl
or
cs
push
adc
push
test
push
int3
dec
mov
inc
inc
jno
push
sub
mov
or
push
outsl
ljmp
and
fs
push
or
sbb
icebp
sbb
dec
cmc
cld
sub
clc
sub
pop
lods
fnstenv
ds
mov
mov
sub
dec
push
ds
inc
inc
loope
ret
gs
inc
dec
ret
sahf
das
test
dec
cli
outsl
loopne
and
mov
cmpsl
xchg
icebp
adc
jg
pop
or
lcall
xor
les
add
stos
inc
inc
orb
sub
out
mov
loop
shrb
inc
push
pop
xchg
mov
mov
push
cld
hlt
pop
mov
lret
ror
vpslld
repnz
xchg
and
and
test
neg
dec
jmp
push
andb
pop
pop
bound
sub
stos
mov
lods
cmpsb
outsl
or
push
ficomps
mov
adc
insl
push
mov
xchg
daa
or
mov
pop
in
xor
aaa
jnp
sub
add
fisubl
xchg
cmp
fadds
pop
daa
scas
je
dec
jae
iret
mov
and
push
push
mov
shll
jge
add
loopne
jae
dec
lret
aas
pusha
or
cwtl
xchg
ss
dec
lods
leave
mov
fisttpll
popf
and
iret
cld
or
add
mov
stos
pop
dec
out
mov
xlat
leave
mov
xlat
mov
notl
imul
out
jne
insl
sahf
cmpb
or
pop
push
lret
pop
xchg
mov
cld
mov
adc
jns
int
xlat
inc
enter
push
addb
and
rcll
sub
sub
pop
mov
js
into
adc
filds
das
sbb
jecxz
fcoml
xchg
or
fwait
push
lret
push
jo
xor
sbb
add
lret
cmp
or
lods
fistl
sarl
mov
pop
fildll
daa
in
xchg
sbb
mov
push
cmpsb
repnz
notl
xchg
fmuls
es
insl
jmp
xchg
pushl
pmulhw
rorl
lock
sbb
xor
jnp
jno
insl
push
mov
xchg
aam
es
data16
xor
jle
dec
push
jmp
lea
lock
jp
scas
dec
mov
outsl
adc
jg
push
arpl
cli
add
imul
mov
push
lock
dec
xchg
dec
in
fsub
push
and
dec
mov
mov
add
mov
push
jo
cld
jne
jl
pop
xorl
cli
add
and
add
je
push
push
je
cmp
mov
aas
mov
xchg
adc
daa
sub
inc
pop
shlb
xchg
xor
mov
inc
push
enter
ficompl
inc
nop
fadds
pushf
pop
jo
test
pop
jae
daa
sbb
lahf
sub
out
push
fcomip
jecxz
lock
pop
lcall
pop
loop
imul
push
xchg
ss
divl
xchg
push
adc
popa
popa
out
clc
cmp
daa
push
jmp
adc
add
loope
shll
stc
rcrb
sbb
scas
movsl
sbb
ljmp
outsl
ljmp
lret
movsl
ds
mov
hlt
nop
mov
push
outsb
inc
mov
pop
in
cmp
dec
add
or
cmp
clc
je
inc
in
mov
lods
pop
jo
sbb
xor
data16
or
inc
push
or
jns
cs
mov
aam
or
push
jns
sbb
movsb
lods
fstpl
xlat
mov
push
push
mov
icebp
movsb
xchg
sbb
add
mov
mov
outsl
sub
mov
mov
test
mov
shlb
pop
adc
pop
inc
test
dec
dec
push
incb
xchg
push
stc
sbb
and
sbb
xor
inc
aas
nop
jmp
dec
ja
sub
jge
stc
xor
ficomps
int3
lcall
jge
dec
jl
cmpsb
mov
aad
lcall
sub
jge
jecxz
fstpl
jo
fs
dec
lcall
sti
push
adc
jae
into
dec
pop
adc
fcmovu
sti
jns
lods
aas
xchg
popf
aam
subb
cmpsb
adc
push
out
push
fdivrs
inc
lods
sbb
push
jne
aaa
xchg
or
out
push
push
sub
jmp
xchg
inc
js
mov
cld
adc
sub
arpl
rcl
jnp
negl
push
push
sub
ret
nop
adc
or
imul
sub
cwtl
in
in
pop
adc
adc
sbb
adc
enter
loop
jo
or
dec
test
inc
outsb
ds
enter
mov
and
aad
push
shll
shrl
loopne
xlat
jb
push
xchg
cmpsb
pop
incl
inc
sahf
and
divb
mov
jb
push
xchg
push
jbe
inc
imul
push
jmp
test
push
xchg
mov
push
dec
mov
push
fnstsw
aad
je
enter
cmpb
out
xlat
popa
jl
jo
test
hlt
jns
push
mov
mov
xchg
sub
or
mov
lret
pop
mov
imul
mov
jo
jae
jl
jns
das
aad
dec
scas
jnp
pop
mov
push
xchg
mov
std
ret
xchg
xor
mov
mov
shrl
xchg
inc
adc
jne
and
and
push
pop
mov
and
or
xchg
cwtl
mov
dec
cmpsl
in
insl
or
cld
sbb
mov
adc
negb
outsb
mov
mov
dec
insb
sti
fdivrl
shlb
sub
enter
inc
es
outsb
lcall
jb
in
xor
out
pusha
pop
shrl
push
lahf
pop
es
ss
and
jo
lahf
ficomps
cltd
mov
xorb
push
movsl
in
pop
jnp
ljmp
mov
sub
dec
pop
outsb
cmp
mov
fadds
pop
cmp
xchg
mov
cmc
fdivrl
mov
or
push
mov
adc
or
cmpsb
repnz
or
daa
ljmp
jmp
loop
je
jge
xchg
mov
jecxz
xor
jno
or
ret
jbe
xor
adc
and
xor
fsubs
ret
mov
push
jbe
jae
setp
movsb
das
pop
mov
push
popa
stos
cltd
xchg
jns
cmc
mov
or
sahf
push
adcl
sub
sub
push
xor
lds
rcrl
ret
mov
jge
nop
pop
cltd
mov
sbb
ljmp
imul
mov
in
idivl
out
inc
inc
imul
js
add
dec
lods
fcoml
push
jae
mov
push
xchg
xorb
mov
or
int3
pusha
out
or
xor
inc
es
mov
sbb
adc
and
add
xchg
aam
pop
sbb
or
pop
outsl
dec
int
scas
es
loop
mov
inc
arpl
stos
gs
arpl
shr
cmp
and
sub
pop
into
jbe
mov
aaa
push
and
xchg
std
mov
and
movsb
sbb
sbb
addr16
es
subl
stos
cwtl
push
jp
test
lret
inc
in
push
inc
insb
cmp
dec
pop
or
les
xor
clc
add
test
push
ret
rolb
mov
je
mov
leave
sub
lret
or
dec
add
push
sbb
xchg
scas
pavgw
mov
sub
mov
stc
sbb
lods
push
mov
jb
push
sub
test
out
arpl
jae
cmovg
xchg
inc
ret
ret
inc
mov
idivl
cmp
sarl
or
dec
pop
movsb
rcrb
shr
pop
inc
xor
add
scas
sbb
push
das
push
jg
repz
cmpsl
hlt
mov
adc
lods
xchg
outsl
lock
inc
lret
sahf
mov
or
fdivr
sar
ljmp
mov
xlat
cmp
mov
mov
or
mov
jmp
iret
icebp
cmp
test
xchg
pop
aam
sarl
fisubl
xchg
out
out
fs
addr16
ss
jns
je
fdivl
and
shrb
xchg
jb
add
shl
add
popa
fwait
pop
sbb
jg
call
jmp
dec
push
int3
push
dec
jae
or
scas
mov
jae
sbb
test
pop
lds
jecxz
jmp
lea
lea
and
cld
xchg
aas
int3
fwait
cwtl
movsl
mov
mov
inc
sahf
loope
leave
dec
and
loope
pop
inc
push
xchg
dec
js
push
roll
xchg
push
pop
sbb
dec
inc
jmp
inc
push
push
mov
sbb
sub
add
sub
loopne
es
push
data16
or
outsb
or
les
dec
ds
ds
out
mov
adc
enter
and
mov
fmul
and
loope
in
push
mov
xorb
or
adc
xchg
mov
mov
pop
mov
or
dec
mov
add
outsl
or
clc
mov
add
adc
std
cltd
xor
mov
add
and
rol
jecxz
loop
mov
lods
add
fwait
push
adc
pop
sbb
rcll
lods
sub
jmp
mov
lods
push
sbb
div
jb
cmpsl
outsb
xor
pop
push
sub
lds
inc
pop
xchg
pop
xlat
clc
pusha
xlat
lahf
cmp
cmp
jle
dec
out
jg
pop
std
add
xor
out
aas
mov
push
mov
lock
dec
mov
jae
jne
fwait
xchg
sub
imul
data16
mov
pop
lret
xor
add
lcall
iret
or
arpl
shrl
repz
pop
mov
ljmp
int
add
rorl
insb
and
and
and
push
push
shll
in
mov
inc
mov
or
les
loop
and
cld
out
loop
repz
mov
ss
pop
pusha
lahf
push
xchg
sub
cmpb
std
lret
test
mov
pop
movsb
xchg
cmp
je
add
mov
loope
and
mov
enter
ficomps
or
iret
jnp
dec
divl
inc
sub
pop
les
loop
sub
pop
lods
std
ja
filds
fwait
jge
outsl
das
sub
in
cmpl
addr16
movsl
mov
and
ljmp
sti
and
jns
mov
jl
rcll
mov
adc
into
sbb
mov
pop
and
inc
rcrl
mov
push
hlt
inc
lret
or
std
das
pop
mov
loopne
mov
cbtw
mov
or
push
push
js
insb
movsb
push
mov
xor
pop
mov
je
stos
lods
and
inc
leave
lods
scas
push
imul
or
pushf
cmp
pop
xchg
mov
sbb
push
aaa
and
neg
inc
mov
jmp
adc
scas
movsl
mov
cltd
mov
repnz
pop
xor
mov
push
aad
pop
mov
fcomps
jecxz
int3
pop
mov
and
mov
adc
incl
stc
testb
or
cmc
fwait
stos
push
push
les
insb
sahf
cmc
out
fsubrl
mov
das
cmc
adc
pop
dec
dec
dec
je
inc
nop
mov
imul
pusha
enter
or
lods
cmp
add
scas
jbe
push
cs
cmp
add
inc
arpl
pusha
xchg
rolb
jecxz
and
iret
pop
in
lret
cwtl
adc
jae
adc
mov
xor
xchg
js
dec
jp
mov
xor
clc
dec
push
aaa
jl
xchg
and
mov
or
fidivs
les
pop
stos
xor
movsl
sbb
mov
inc
inc
pop
loope
pop
xchg
sbb
in
xor
scas
xlat
mov
mov
adc
cmp
sub
dec
scas
fs
jbe
push
add
jae
fisttpll
rsm
or
ds
mov
mov
mov
and
or
pop
inc
mov
and
mov
inc
inc
aad
and
push
test
sbb
je
stc
xor
xor
fidivrl
aaa
fisubrs
cmc
rcrl
mov
lods
call
adc
mov
shll
sub
jle
jno
js
mov
mov
push
pop
adc
adc
mov
mov
sbb
xor
add
push
and
adcl
in
lock
xor
mov
jno
insb
push
or
xor
and
mov
lcall
rorl
push
loopne
int3
popa
xor
rclb
mov
add
xchg
push
jmp
mov
push
sub
sub
insb
clc
jae
or
cmp
les
loope
add
and
ret
inc
xor
fwait
adcb
das
and
sub
rcr
mov
push
in
and
sub
lahf
adc
stc
mov
xchg
shll
ss
cmp
dec
push
insb
in
jb
pop
mov
dec
pusha
arpl
add
scas
mov
mov
jecxz
pop
adc
pop
add
loop
mov
pop
mov
mov
or
popa
xchg
dec
es
hlt
aas
push
add
pop
rclb
movsb
cmpsb
sub
loop
sub
movsl
int3
mov
mov
jns
in
jp
or
imul
adc
rorb
add
sahf
orl
loopne
mov
add
das
testb
loop
jo
iret
daa
xchg
sbb
pop
fcmovnu
cmp
cmp
push
aas
pop
movsb
jg
fcoml
iret
adc
sub
imul
xchg
mov
sahf
xor
or
negb
lods
jmp
fmuls
lret
clc
loop
test
clc
inc
mov
bound
popa
in
scas
push
or
mov
js
and
out
xchg
add
adc
fcmovu
add
mov
adc
imul
ds
pop
cmp
inc
fimuls
pop
inc
insb
cmp
insb
std
and
sbb
mov
lcall
sbb
xchg
mov
stos
nop
int
sahf
ja
aaa
rol
lea
inc
cmpb
ja
cmp
enter
aad
push
push
add
cltd
inc
ret
aas
std
inc
pop
loopne
dec
xchg
ret
jb
mov
js
fwait
clc
cmp
dec
jne
jbe
mov
jmp
jg
sub
jnp
adc
push
lods
dec
add
aaa
add
push
arpl
bound
pop
xlat
mov
in
xchg
fmull
sahf
push
sub
sub
sti
outsb
arpl
inc
dec
rolb
ror
and
mul
mov
xor
data16
jae
cld
in
xlat
repnz
xchg
fs
sbb
lret
fidivl
add
push
cld
mull
pop
xchg
jle
sbb
mov
add
jns
loopne
xchg
and
test
xchg
lock
mov
out
sub
dec
sbbl
ss
fisubrl
sahf
test
xor
adc
in
insl
mov
pusha
movsb
lahf
mov
push
inc
loopne
pop
mov
cmp
pop
pusha
std
or
hlt
adcl
and
clc
mov
jp
or
fs
je
xor
jb
jge
lret
inc
and
imul
mov
jmp
imul
pop
arpl
mov
outsb
sbb
adc
xor
es
adc
cwtl
roll
mov
add
and
adc
jbe
inc
lods
in
adc
pop
stos
addl
in
add
cmp
pop
push
test
addr16
js
adc
inc
inc
mov
adc
scas
push
subb
inc
xchg
mov
mov
dec
pop
leave
fs
push
or
add
xchg
push
xchg
pop
leave
and
adc
aad
mov
aad
loopne
mov
push
push
outsb
add
ja
sub
jge
jnp
pop
ds
adc
xor
jne
iret
push
out
lods
sub
xchg
mov
xor
fbstp
loope
and
sub
dec
adc
je
aaa
cld
leave
rorl
xchg
call
mov
xorb
movsl
xorb
les
mov
sti
cmpb
mov
or
lahf
add
adc
dec
jle
in
int3
imul
lea
jns
dec
pop
or
test
push
leave
mov
fidivl
icebp
les
sub
ds
push
insb
mov
jmp
bound
test
fadd
add
imull
cmpsb
lahf
scas
jg
fs
push
js
jl
xchg
mov
jl
dec
ret
std
sub
mov
loopne
cld
or
mov
lods
mov
pop
push
test
ds
sub
cmc
movl
mov
test
sub
mov
inc
add
or
ret
xchg
ja
sub
adc
fs
mov
cmp
enter
inc
mov
js
xchg
and
jb
mov
daa
je
ret
jno
lcall
xchg
xchg
hlt
ljmp
jo
dec
xchg
xor
icebp
aas
js
mov
cmp
inc
cld
addr16
nop
loop
inc
mov
int
mov
fbld
shll
insb
popa
popa
add
mov
jae
sbb
mov
mov
popa
dec
xor
test
outsl
cmpsl
or
les
mov
jae
pop
mov
and
aas
xchg
pop
shll
and
dec
mov
cltd
rorb
mov
mov
lds
loopne
sbb
rorb
outsl
in
loop
out
push
xor
sub
jmp
mov
leave
xor
imul
nop
and
mov
rorb
lods
inc
imul
sti
in
into
lods
pop
push
arpl
mov
or
pop
or
adc
jg
jo
popa
andl
decb
pop
push
add
repnz
jecxz
ds
cmp
lcall
test
lea
pop
test
bound
xchg
mov
arpl
mov
xor
mov
mov
xor
sbb
xchg
shll
add
mov
push
xorl
xchg
bound
sub
adc
sbb
xor
pop
pop
push
push
mov
pop
add
mov
je
inc
jg
or
fmuls
shll
insl
xchg
push
test
adc
xchg
add
bnd
sub
inc
outsl
mov
outsl
sub
adc
imul
pop
inc
push
jb
inc
mov
cli
das
sbb
lahf
lock
pop
adc
pop
push
test
and
mov
dec
leave
inc
xor
daa
shlb
add
scas
lods
adc
mov
sub
mov
aam
mov
cmp
sub
sarb
mov
in
ds
or
pop
daa
test
in
insb
adc
xchg
inc
mov
out
mov
roll
mov
xor
xchg
lea
sbb
arpl
xchg
das
rcrl
push
idivb
rcrb
shl
xor
ljmp
sub
fimull
add
push
jo
xor
pop
adc
push
jne
imul
in
push
ss
clc
pop
xlat
mov
mov
pop
jb
inc
popf
std
cmpsl
or
push
pop
in
jne
rorb
push
pop
movsb
and
xor
mov
cmpsb
inc
dec
fidivrl
ljmp
sbb
cmpsb
ret
sti
mov
pop
addl
xchg
xchg
fs
sub
jo
getsec
jmp
or
pusha
adc
xchg
mov
inc
jae
mov
sub
iret
aam
or
adc
jmp
mov
mov
inc
jp
js
imul
jge
lods
inc
sub
mov
cmc
decb
pop
insl
jb
push
sub
test
push
out
call
sbb
sub
adc
mov
loope
cmpsl
jne
and
cld
xchg
add
push
fmull
sbb
mov
cmp
test
stos
hlt
xchg
xor
adc
mov
or
rcll
mov
ja
rorb
fwait
pop
pop
add
push
fisubl
push
int3
mov
cmp
mov
in
pop
mov
stos
push
out
xchg
inc
nopl
test
mov
jne
jo
cmpsb
mov
push
jmp
jl
sahf
bound
fidivrl
sub
xor
inc
pop
ret
lret
jge
pop
add
mov
inc
push
test
cs
cmp
xor
popa
add
mov
xchg
notb
add
push
cmp
push
insl
mov
push
jmp
dec
or
loop
cld
sbb
xchg
jg
and
mov
mov
shrb
mov
inc
pop
lock
loopne
mov
add
dec
dec
loopne
and
ljmp
fsubs
call
jl
cli
in
shlb
pop
jmp
jmp
jl
ds
lods
mov
xchg
lds
xor
mov
stos
lret
movsb
jo
nop
add
push
xor
not
in
mov
leave
sub
xchg
or
dec
mov
adc
inc
push
mov
shrb
jmp
cmpsb
outsb
cmp
stc
ss
or
push
jl
inc
xor
jp
out
adc
shll
cld
inc
mov
mov
outsl
add
in
push
or
xor
push
adc
cwtl
js
in
cmpsb
push
mov
jns
xchg
jge
enter
stos
sub
call
or
insb
cmpsb
fadds
scas
push
add
pushf
or
pop
inc
aad
xor
cmp
fnstcw
xchg
stos
addr16
add
mov
cmpsb
inc
jle
inc
sbb
aad
jbe
jb
je
dec
adc
push
enter
push
fdiv
and
cmc
mov
sub
xor
and
sti
das
pop
js
in
test
shr
out
mov
jnp
inc
je
test
jo
subl
and
sahf
mov
mov
lds
adc
jmp
rcrl
jae
adc
xorl
dec
mov
mov
int
xor
push
mov
shl
ficoml
pop
and
lods
inc
dec
loope
adc
xor
dec
sahf
mov
add
jne
push
arpl
rorb
aam
test
mov
rorb
mov
mov
jecxz
xchg
jnp
loop
aam
sub
pop
rorl
es
sti
popa
or
xchg
push
stos
mov
je
mov
hlt
mov
and
cmp
inc
subb
sub
add
inc
aas
lret
push
and
pop
dec
and
mov
mov
mov
outsl
mov
es
jb
jno
xor
sub
sub
jno
ret
sub
out
cltd
inc
inc
jmp
mov
jp
xor
mov
stc
dec
and
hlt
jge
outsl
ret
sti
sbb
mov
shll
xor
pop
jecxz
sti
add
rorl
push
jge
data16
mov
mov
rol
mov
jl
adc
movsb
pushf
mov
jbe
adc
pop
adc
lods
jp
scas
out
adc
cmpsl
jmp
movsb
xor
cmp
mov
lahf
je
jnp
add
data16
mov
es
sub
test
xor
fisubrl
and
icebp
jp
pop
aam
inc
out
sub
mov
mov
jge
daa
inc
test
mov
fistl
and
mov
je
push
test
je
adc
hlt
movsl
and
jmp
push
dec
ret
push
push
call
mov
movsl
cmc
sbb
dec
and
or
or
pop
push
in
jl
aas
push
push
mov
push
or
stc
ds
dec
push
insb
add
xor
xor
xor
leave
pop
cs
add
jle
mov
sbb
and
jo
nop
and
cltd
xchg
fs
mov
sub
ds
cmp
adc
insl
jp
jbe
mov
jecxz
sub
repnz
mov
mov
sti
dec
inc
out
jecxz
addr16
mov
bound
out
push
out
pop
hlt
out
out
fwait
jge
arpl
xor
add
sbb
xchg
push
inc
in
sub
mov
jnp
mov
dec
xchg
jecxz
sar
mov
jle
fucom
insl
std
cmp
fnstenv
aas
cmp
xchg
push
cmp
push
adc
les
xorb
sbb
test
daa
xor
sbb
mov
push
mov
jmp
cmp
jl
xor
jns
push
imul
fidivrs
cwtl
rorb
mov
aam
sbb
cmp
movsl
or
xchg
sahf
movsl
sbb
inc
push
push
sbb
push
or
add
leave
and
pop
je
pusha
xchg
ret
in
xor
lds
mov
add
out
movsl
in
call
dec
xchg
xor
add
mov
lret
dec
leave
xchg
or
lret
adc
and
jo
xchg
jmp
repz
jb
je
in
jmp
sub
inc
cmp
rclb
and
fcmovnu
ja
loopne
cmp
jle
pop
adc
or
cwtl
mov
jge
xor
mov
push
insb
es
daa
sti
fisttpll
inc
cwtl
inc
mov
dec
jne
or
lds
push
sub
popf
xchg
add
lds
and
sbb
rcl
mov
dec
pop
xor
sub
mov
mov
and
jge
or
xor
aam
xor
fcomps
es
addb
shlb
xor
push
xchg
and
out
cmp
call
lret
xchg
sbb
ret
pop
mov
shrb
mov
bound
push
gs
enter
loope
pop
cmp
jecxz
cwtl
cmpl
xor
imul
xchg
aad
stos
adc
sub
add
loope
dec
adc
cltd
movsb
icebp
popf
jle
and
sub
mov
imul
push
cwtl
testl
jns
pop
pop
adc
pop
mov
ljmp
shlb
mov
inc
divb
pop
push
aad
push
testl
sahf
mov
lret
fwait
push
push
inc
jecxz
repnz
add
mov
jo
pop
dec
add
cmp
or
lcall
mov
shll
js
xor
jp
sbb
add
jle
clc
nop
lds
movsb
pop
push
cs
pop
add
jo
ja
out
leave
sbb
lcall
and
add
test
movsl
sbb
jmp
xchg
push
pop
push
lock
and
dec
cmp
sbb
or
roll
mov
add
mov
outsb
sub
sub
js
lock
xor
push
mov
leave
cmp
and
gs
and
sbb
dec
mov
xchg
flds
pop
int
mov
dec
adc
outsb
loop
pushf
out
int
aaa
sbb
push
daa
loopne
adc
add
xchg
adc
xor
loope
pop
inc
cmc
push
sub
dec
mov
daa
in
movsb
fs
lods
lahf
stos
xchg
loopne
cld
jno
mov
or
cli
rorb
xlat
mov
dec
insb
cmpsb
push
in
outsb
jp
clc
es
inc
sar
std
and
mov
stos
mov
add
loope
shlb
pop
ficompl
jne
add
mov
jmp
in
je
mov
dec
das
in
jge
movsl
lods
das
jmp
rcl
push
xchg
mov
dec
ja
xchg
xchg
out
mov
repnz
dec
hlt
das
mov
lahf
sbb
xor
jno
dec
scas
clc
add
xchg
and
repnz
xor
push
push
fnsave
pop
xorb
adc
aas
cmc
dec
mov
aaa
sarl
out
sbb
cmp
in
out
push
mov
mov
outsl
loop
dec
in
pop
cmp
testb
fidivl
pop
repnz
or
push
sub
push
xchg
sub
call
or
sbb
js
in
pop
mov
js
mov
sub
shlb
shrl
sub
or
mov
sub
stos
push
fsts
and
or
jl
aas
nop
movsl
call
pop
mov
adc
loope
fimuls
stos
insb
inc
cmp
pop
bound
mov
or
or
xlat
hlt
fistpl
and
leave
sti
ret
jp
cmpsl
dec
sbb
in
lret
sub
jb
pop
jbe
xor
faddl
loopne
rolb
popf
and
loop
mov
jbe
out
and
jno
sbb
mov
jmp
jb
icebp
dec
jns
std
aam
cmp
dec
in
aam
mov
icebp
sbb
add
sub
mov
in
aam
inc
push
jno
adc
xchg
pand
idivl
adc
and
xchg
adc
xchg
push
out
ja
sti
xchg
test
popa
mov
shlb
xchg
bound
ficomps
fcmovb
and
push
xchg
and
test
imul
shll
leave
xchg
add
mov
sahf
mov
push
movsb
imul
faddl
inc
dec
xor
push
or
lock
nop
sub
test
xor
mov
inc
movsb
xor
andb
lahf
aad
cmpsl
push
push
xor
sbb
mov
movsb
mov
movsb
adc
lret
push
and
xor
ret
iret
xor
cs
push
leave
out
xchg
jne
popa
aaa
push
xchg
cmp
sbb
mov
iret
fisubrl
pop
or
ljmp
dec
mov
xchg
cmpsb
jp
fcmovnb
add
rcrl
xchg
xchg
fs
xor
lea
add
cmp
or
adc
lock
push
or
sti
ljmp
pop
mov
test
enter
mov
push
dec
adc
dec
push
push
test
call
inc
dec
mov
iret
dec
movsl
addr16
jno
fdivl
push
xor
data16
test
fsubl
cmc
inc
aam
mov
je
nop
xchg
pop
mov
stos
jno
mov
dec
mov
jae
test
ficompl
xchg
mov
test
jb
mov
sti
ret
test
mov
fs
mov
stos
pop
mov
out
out
dec
cmp
hlt
pop
xlat
push
xchg
in
cmp
cmpsb
out
lcall
push
data16
jo
insb
shll
xor
call
mov
xchg
sub
pop
sbb
ficoml
inc
xor
mov
ret
xchg
and
mov
stos
add
loop
inc
js
xor
aam
sbb
push
push
cltd
or
xor
xchg
inc
inc
or
inc
add
xor
mov
jno
mov
lcall
sbb
dec
flds
mov
outsl
icebp
push
mov
mov
push
mov
repz
push
mov
jg
std
mov
or
sub
inc
or
mov
es
inc
push
ret
jp
xchg
mov
add
out
imul
mov
inc
push
call
cmc
lock
or
scas
negb
push
aaa
nop
sbb
mov
nop
adc
xor
adc
push
pop
xlat
clc
adc
cmpl
call
add
add
int3
pop
sbb
jb
mov
rorl
test
dec
fs
leave
cmp
repz
gs
mov
lea
inc
jle
jl
pushf
std
mov
fcoms
ja
clc
xchg
addr16
jmp
pusha
or
insl
ja
mov
fs
jecxz
dec
lea
fadds
jecxz
ja
sbb
mov
hlt
jle
imul
jecxz
loopne
dec
stos
sub
mov
push
sarb
inc
cmp
and
aam
sub
subb
aam
lcall
and
xor
jns
cmp
inc
add
jg
jle
adcl
in
xor
pushf
fstps
cmp
mov
mov
ljmp
test
mov
jmp
dec
insl
jae
or
gs
xchg
push
jnp
mov
rorb
jae
mov
call
fcomps
push
je
sub
out
xchg
push
cltd
sub
add
lea
jecxz
icebp
hlt
stos
xlat
or
xor
test
mov
jno
and
and
pop
push
daa
xchg
in
mov
sbb
fisubl
xchg
pop
test
mov
mov
sbb
xchg
pop
call
mov
sbb
lret
test
lea
shrb
cmp
mov
int3
add
and
mov
inc
adc
inc
cmp
in
jl
pop
xlat
cld
jbe
mov
xchg
jb
fbld
aas
adc
jge
and
xor
mov
dec
xlat
sbb
pop
sbb
sar
mov
inc
mov
popf
call
addr16
push
mov
add
lret
lahf
sub
add
inc
mov
mov
cmp
fwait
scas
fsubrs
sbb
icebp
inc
or
cli
rcr
testb
imul
hlt
int
in
pusha
xor
into
lahf
push
push
faddl
clc
cmpsb
mov
push
ds
and
mov
jo
insl
scas
sbb
fstpl
mov
push
adc
adc
stc
lcall
addr16
push
mov
test
xchg
ljmp
arpl
fdivl
fisubrs
les
in
pop
cltd
dec
mov
nop
nop
lock
ja
pop
outsb
mov
or
out
sub
dec
mov
and
xor
push
fsubrl
mov
add
xor
sar
jg
in
clc
enter
js
enter
cmp
xlat
cmc
cmp
into
call
pop
loopne
les
mov
mov
orb
jnp
inc
shll
or
jecxz
movsb
outsl
dec
sti
sbb
dec
sub
jnp
pop
incb
pop
in
std
jbe
sar
jae
fbld
pop
ss
icebp
aaa
andl
fmuls
and
mov
fs
mov
add
xchg
push
push
and
fisttpll
sbb
mov
adc
sbb
repz
cmp
shll
adcl
sahf
cmpsb
sub
test
call
int3
pop
cmp
aas
test
gs
test
sbb
sub
pop
adc
pop
lods
cmp
add
jle
ja
inc
mov
jne
adc
dec
add
push
inc
jl
es
mov
ss
pop
mov
daa
inc
adc
testb
add
pop
sub
ja
cmp
xlat
sbb
pop
xchg
out
sbb
jbe
xchg
sub
sbbl
pop
pop
andl
mov
pop
add
adc
ror
push
pop
data16
in
sbb
jmp
fldl
sbb
mov
in
insl
loopne
pop
lock
imul
and
dec
push
mov
jno
and
add
add
jmp
rcrl
sbb
inc
pop
cwtl
mov
jge
sub
mov
adc
mov
pop
loope
mov
out
pop
sbb
lret
sbb
inc
push
clc
arpl
mov
inc
ret
pushf
repnz
lds
hlt
loope
xchg
cmpsb
adc
push
fcmove
dec
sbb
subb
cld
inc
mov
dec
xchg
outsl
xor
dec
sub
push
or
xchg
fsts
push
cmpsb
pop
add
push
xorb
inc
out
das
mov
dec
dec
xchg
push
push
inc
out
or
outsb
xchg
cs
jo
and
into
pop
mov
and
out
jno
cmp
clc
roll
lahf
jo
stos
dec
enter
sbb
lret
inc
popa
and
dec
or
mov
cmpsl
push
lret
sbb
mov
pop
cmpb
ret
test
mov
int3
dec
cmp
pusha
sub
adc
push
cmp
test
js
and
bound
ret
xchg
mov
scas
adc
push
int
push
xchg
dec
inc
das
shl
test
stc
fists
ja
mov
mov
xchg
in
stos
mov
cmpsb
aad
push
lods
mov
or
adc
lret
cmpsl
movsb
fcom
je
aad
xor
xchg
cld
repz
push
jp
lods
push
mov
in
sti
sub
je
fstpt
pop
sbb
hlt
add
add
xchg
sub
inc
rorl
pop
pcmpeqd
push
ret
popf
jmp
ds
scas
and
leave
push
dec
sti
rcll
enter
cs
xchg
xor
add
fstl
mov
andps
pushf
xchg
orb
rcll
je
mov
mov
inc
sbb
jmp
add
bound
adc
jb
jecxz
syscall
inc
outsb
enter
jle
fisubrs
or
mov
adc
jne
mov
shlb
mov
test
dec
push
lahf
jbe
mov
push
mov
jae
mov
popa
cld
jo
data16
mov
outsb
enter
add
adcl
popa
pop
mov
pop
aaa
in
and
out
lret
or
loop
mov
and
sub
cmp
push
adc
fs
sbb
or
inc
clc
or
dec
or
push
or
test
testb
scas
mov
dec
data16
mov
das
and
cmpb
mov
dec
sbb
xor
jle
and
xchg
add
loopne
jne
in
push
inc
and
cltd
call
test
fisttps
push
enter
sub
jne
test
je
xchg
mov
stos
leave
flds
daa
mov
je
mov
ljmp
gs
jge
cmp
fcos
es
add
and
mull
or
subb
fdivr
xor
dec
xor
pop
cmpsb
cmc
mov
int3
mov
mov
and
mov
pop
fmuls
repz
and
cmp
aam
das
add
sbb
inc
mov
filds
mov
fmulp
cwtl
cli
sbb
push
fistps
call
xchg
inc
add
data16
and
popf
orl
sbb
dec
fs
dec
movsl
jmp
popl
clc
sub
push
cli
push
adc
cltd
fbstp
pop
lods
jge
xchg
push
fsubrl
push
sarb
mov
push
fcoml
dec
sub
sub
aad
xchg
dec
icebp
jo
outsb
repz
flds
lock
cld
sbb
rclb
test
loope
pop
adc
pusha
pop
testl
adc
mov
mov
xchg
jne
fidivrs
push
jge
call
data16
or
ds
jbe
or
dec
mov
xor
mov
aad
and
xchg
jecxz
jo
movsl
inc
cmpb
aad
cmp
js
mov
inc
cmp
xor
data16
lods
xor
movsl
and
sub
push
adcb
dec
jp
aad
out
into
jle
adc
ret
inc
pminsw
mov
outsb
cmpsb
in
popf
aas
loope
sbb
dec
call
fadds
jle
jecxz
push
xor
out
mov
les
shrl
mov
lret
add
sub
xchg
sbb
mov
add
lret
and
imul
loope
dec
mov
dec
or
test
and
les
cltd
and
mov
push
xchg
pop
pop
jmp
aas
jl
jno
jno
dec
jg
scas
sub
push
cli
sti
stos
arpl
call
ljmp
xlat
clc
adc
sub
mov
out
or
mov
cmpsb
fbstp
cli
fwait
cs
xor
popf
cmpsl
adc
test
add
inc
xorl
int
push
stos
fsubrs
mov
shrl
mov
jge
mov
and
hlt
sbb
lahf
dec
xor
leave
out
xor
and
js
mov
je
scas
push
jb
out
js
into
in
jae
ret
rorb
add
fsubl
adc
add
clc
lods
dec
lret
out
in
in
iret
xchg
scas
scas
sub
xchg
nop
pop
test
xor
scas
sub
add
cmp
ljmp
ror
insl
in
mov
shrb
dec
pop
cmpsb
or
mov
call
xor
lret
and
mov
sub
out
push
pop
mov
je
mov
gs
test
int3
pop
sbb
mov
inc
test
lods
adc
jb
push
cltd
inc
push
or
jecxz
clc
sub
jnp
xchg
xchg
sbb
gs
xchg
sbb
mov
outsb
fnstenv
loope
and
js
push
push
jge
sub
testb
dec
pusha
dec
mov
push
push
das
lret
pop
push
dec
adc
pop
dec
clc
jb
lret
inc
mov
data16
or
test
xchg
or
sbb
push
sbbl
push
xchg
or
push
inc
cmc
jmp
outsb
loop
imul
outsb
pop
rol
or
push
inc
enter
fdiv
and
pop
and
mov
clc
frstor
int3
negl
inc
sbb
loope
fiaddl
jmp
inc
cmpsb
fs
mov
insb
add
movsb
repnz
shlb
outsb
inc
mov
inc
dec
enter
fcoms
mov
test
cld
aaa
add
sbb
ljmp
cmpsb
dec
fiadds
xchg
sbb
pop
stos
sbb
negl
and
pop
jnp
push
scas
fcoms
mov
dec
pop
add
scas
mov
jo
shlb
xchg
aad
and
mov
push
lret
jb
dec
pop
and
or
cmp
sub
rcll
or
push
ffreep
int
aam
add
shrl
ss
lea
mov
sbbl
and
adc
mov
inc
cltd
call
jb
sbb
sbb
stos
popf
addb
in
xchg
es
mov
out
lret
sbb
adc
iret
fildl
mov
or
inc
ja
inc
or
lds
and
mov
fsubs
mov
lret
inc
pop
and
pop
hlt
lods
mov
aas
aad
sbb
pop
das
lods
scas
dec
xor
or
add
pop
push
adc
xchg
jbe
or
inc
lea
cltd
or
mov
aam
cltd
in
fdivs
mov
repz
loopne
dec
dec
pop
xchg
mov
xor
and
fdivr
xchg
ljmp
jge,pn
in
push
mov
dec
ja
std
or
sarl
and
stos
cld
inc
fsin
adc
mov
sbb
call
dec
xchg
or
ja
das
push
xchg
ret
test
imul
stc
fildll
imul
push
int
iret
jb
adc
jne
scas
sub
cmpsl
xchg
jecxz
enter
shlb
push
movsl
add
bound
lahf
inc
pusha
dec
fsubs
push
xor
mov
mov
daa
icebp
lret
jb
jle
rcrl
mov
enter
or
popf
inc
clc
xor
out
jecxz
jmp
fs
fsubrl
mov
shll
push
pop
outsl
cmp
push
and
xchg
dec
xor
dec
mov
fadds
mov
pop
push
adc
inc
sub
xlat
inc
scas
push
add
pop
daa
out
popf
inc
jno
mov
jge
pop
xorl
jo
sub
popa
idiv
cld
jns
pop
lds
icebp
mov
insl
cltd
dec
mov
adcl
push
test
xchg
dec
scas
mov
add
sub
andb
insb
jno
fldcw
cmp
xchg
dec
adc
jbe
shlb
push
dec
loopne
fnsave
push
jl
test
std
int
mulb
push
cmc
loope
push
or
test
jno
inc
or
sahf
je
jl
mov
je
mov
aam
aaa
filds
mov
cld
mov
mov
sbbl
shll
insb
test
or
or
pop
dec
push
mov
mov
out
ljmp
jnp
enter
or
bound
outsb
inc
mov
adc
repz
xlat
xchg
cmp
dec
in
ss
subb
cwtl
bound
in
clc
stos
imul
adc
popa
dec
sub
iret
mov
mov
pop
xchg
mov
int3
xor
ss
mov
xor
fdivl
cmp
cmpl
scas
adc
jno
push
cmp
jb
cmpsb
cmp
adc
xchg
cltd
shll
jne
add
add
dec
jbe
mov
rcl
push
mov
je
es
mov
xlat
push
sub
lret
add
push
stos
or
mov
push
call
mov
lods
dec
push
push
in
repnz
sti
dec
js
push
xorl
cmpsl
jae
push
ret
adc
jg
and
mov
dec
fs
xor
repnz
inc
int3
cmpb
xor
movsl
inc
aam
stos
push
add
push
ret
sahf
sbb
or
lcall
and
stos
mov
ja
sahf
aas
mov
and
ljmp
pop
mov
inc
sbb
cmc
adc
dec
adc
scas
sub
adc
push
mov
js
scas
mov
ud2
adc
pop
mov
lret
fcoms
inc
mov
mov
mov
xor
aas
xlat
lahf
pop
jge
in
push
pcmpgtd
mov
mov
fistpll
cli
mov
mov
push
mov
ficomps
sbb
andl
xchg
jo
out
loopne
les
aaa
out
and
test
xor
hlt
dec
fs
inc
or
mov
jbe
xor
iret
jp
xchg
aad
push
call
add
dec
dec
inc
rcl
mov
cmp
insl
sbb
xlat
xchg
loopne
test
push
out
adc
add
push
dec
push
ds
and
or
int3
out
jle
push
fdivp
test
pop
jne
out
push
rclb
lahf
pop
lock
push
sub
mov
add
subb
stc
mov
bound
out
inc
out
ja
lahf
xor
sub
fs
sbb
nop
nop
sub
int
mov
pop
mov
call
ds
mov
sub
sahf
insl
js
outsl
push
mov
stos
pop
jge
xor
sbb
pop
push
stc
sub
ja
sub
insb
mov
inc
xchg
js
or
push
data16
hlt
xor
in
push
xlat
pop
cmp
rclb
mov
push
mov
int
scas
and
push
movl
adc
mov
shrb
dec
cmpsl
js
push
mov
insb
push
xchg
dec
stos
jp
push
inc
sub
les
mov
and
lret
pop
mov
fld
out
mov
dec
dec
xchg
test
dec
cmc
enter
nop
testb
xor
mov
xorb
ret
popl
mov
or
mov
jae
pop
in
aam
scas
mov
adc
pop
or
xchg
sbb
and
fmull
push
lfs
stos
inc
push
or
pop
iret
jmp
jo
leave
xor
testb
sbb
pop
les
add
in
pop
mov
mov
push
icebp
loop
fadds
xlat
enter
cmp
pop
adc
pusha
add
add
les
xchg
clc
ljmp
jge
notb
xor
cmp
adc
mov
shlb
ljmp
aas
lret
jle,pt
mov
pop
sbb
loope
daa
ret
sub
fists
dec
push
mov
psubsb
sub
out
ja
enter
cltd
orl
xchg
and
jne
mov
mov
stos
lret
xchg
je
mov
xlat
or
pop
or
lcall
test
xor
rcpps
mov
lods
sbb
or
lahf
cmp
xchg
in
cmc
and
jns
inc
cld
cmp
mov
imul
dec
ss
lret
inc
jne
add
add
mov
bswap
shll
mov
adc
mov
adc
arpl
nop
out
xchg
mov
js
fadds
xchg
or
xchg
sbb
xor
adc
pop
mov
adc
scas
inc
movb
loopne
fstp
lock
sbb
cmc
jnp
mov
push
pushf
push
adc
cmpsb
stos
mov
and
and
stc
sbb
lret
xchg
rclb
xor
xchg
xor
ret
xchg
jg
scas
cmp
cmp
dec
sbb
ds
or
sbb
sbb
and
cld
jp
lret
push
bound
pop
call
push
mov
cmp
aas
adc
das
pop
pop
jbe
push
rorl
fwait
push
imull
je
loope
mov
ljmp
lcall
jmp
sub
xchg
adc
lock
or
dec
jbe
xchg
push
clc
adc
daa
adc
pop
popa
cld
or
push
outsl
adc
cmp
xchg
push
add
cmpsl
loop
scas
sbb
sbbl
dec
and
cmp
andl
test
xchg
lcall
dec
fs
inc
pop
cltd
push
pushf
test
mov
das
xchg
nop
or
push
push
xor
cld
in
push
or
pop
lea
adc
mov
inc
stos
sti
sbb
xor
push
jo
sub
iret
xor
mov
outsb
sub
dec
data16
adc
jo
in
adc
and
xor
inc
testb
jne
aad
das
xor
jns
out
adc
add
call
jne
bound
popf
inc
xor
push
hlt
mov
sub
ret
sub
inc
pop
jecxz
jne
insl
pop
fsubs
shl
cwtl
mov
add
pop
xlat
inc
push
sub
adc
pop
into
adc
lret
enter
pop
push
sub
xor
aaa
icebp
in
xor
jp
ficomps
pop
dec
jae
loopne
pop
pop
pop
sub
cmp
push
push
pop
xchg
into
int3
mov
dec
decb
jae
adc
setbe
sub
je
das
cmp
or
out
sti
jge
ss
sbb
test
or
loop
inc
stc
orb
stos
scas
int3
iret
bound
jne
js
or
leave
sbb
jge
push
in
sub
jp
in
cli
and
push
mov
mov
dec
pusha
jecxz
pop
jb
in
repnz
sub
in
out
xchg
repz
lods
sbb
sbb
idivl
mov
mov
mov
mov
insb
imul
pop
cmp
mov
aas
fsubrs
mov
int3
mov
pop
mov
rclb
add
imul
xchg
sub
repz
adc
scas
rcrl
xor
js
unpcklps
vxorps
outsl
jmp
shlb
jmp
call
sub
adc
sbb
enter
fisubrl
ljmp
push
aaa
cmp
sbb
notrack
push
pop
shl
dec
stos
inc
jp
jl
pop
jmp
mov
mov
xchg
jne
xchg
movsb
outsl
and
xchg
sbbl
bound
sbb
ret
imul
or
pushl
adc
push
in
mov
cmp
xchg
mov
cwtl
outsl
dec
out
js
pop
mov
xchg
shll
scas
int
cmp
mov
ffreep
ds
push
jbe
jbe
sbbb
jle
or
rolb
mov
cmp
divl
pop
inc
cwtl
xor
mov
sbb
xor
lods
sti
mov
rorb
mov
and
mov
mov
jp
sbb
and
xchg
dec
js
pop
fldenv
mov
jl
mov
es
out
sub
mov
inc
adc
pushf
sahf
cmp
in
sarl
inc
sub
inc
jo
xor
adc
aaa
adc
repz
lods
mov
shll
stos
adc
cld
inc
inc
mov
xorl
fucompp
push
mov
pop
cmp
xor
test
fwait
ds
sub
xchg
loope
pop
pop
and
inc
fcomip
mov
xchg
int
xchg
loop
mov
and
sbb
push
inc
pusha
jp
pushf
mov
xchg
sahf
mov
cmp
jmp
xor
les
sahf
inc
daa
jae
and
push
jg
adc
jo
rcrb
sub
popf
mov
popf
imull
sub
das
and
lock
fsub
ror
and
mov
movsl
mov
add
add
inc
lock
out
jle
dec
testb
sub
fs
cmpsb
pushf
or
sti
dec
or
xlat
cmp
enter
mov
push
push
cmc
and
add
in
push
int3
sbb
repz
sbb
nop
dec
mov
mov
jle
mov
mov
stos
inc
aam
cmp
lds
mov
ds
subb
jae
enter
subb
mov
dec
sbb
call
xor
movsl
dec
jp
cmpsb
sbb
pop
stc
aam
cltd
xlat
xor
and
idivb
jns
push
fnstcw
mov
or
loopne
and
in
call
or
rcrl
iret
ss
addr16
push
sub
lcall
nop
cld
mov
push
adc
pop
dec
jno
testb
dec
inc
ja
mov
and
inc
mov
or
lods
enter
imul
movsl
xor
pop
sarl
out
int
hlt
lahf
sub
cld
push
pop
rclb
fdivl
xchg
mov
ja
inc
popf
mov
push
aam
popa
sar
outsb
lds
dec
out
aam
jnp
fcomi
jae
adc
add
cmp
mov
daa
pop
xchg
mov
in
data16
jg
and
xorl
jl
mov
dec
add
xchg
and
push
call
pop
dec
fistps
pop
inc
mov
jmp
aad
roll
fcoml
rorl
inc
and
loop
pop
popf
lret
mov
outsb
push
cltd
and
push
jbe
add
ret
adc
stos
mov
jb
lea
je
ljmp
jmp
rorb
pop
xor
add
sbb
xchg
or
add
dec
pop
pop
mov
std
mov
add
lret
xor
add
cmp
jle
mov
and
xor
push
adc
rcll
mov
icebp
cmp
cmp
cmp
jg
mov
push
js
sahf
xchg
stos
xchg
test
shrl
out
scas
sarb
jb
popa
es
jmp
sbb
out
scas
xor
inc
mov
xor
lcall
push
lods
push
test
xor
mov
clc
test
repz
lods
popf
ja
cmp
es
js
push
xor
push
in
jg
fsubrs
or
mov
rcrb
adc
mov
adc
int
dec
mov
add
ret
clc
pushf
pop
ret
add
inc
mov
jb
pop
cmp
in
data16
xchg
lret
xchg
jno
and
fbstp
xor
and
icebp
pop
xor
jo
push
or
cmc
lds
sbb
hlt
push
or
sahf
das
or
pusha
lret
pop
mov
jl
lock
rolb
mov
lea
repnz
mov
sbb
mov
sub
dec
bound
mov
out
test
shlb
mov
movsl
add
pop
pop
jns
xchg
ret
aad
cmp
ds
mov
and
mov
stc
xchg
inc
cmpsl
sub
add
mov
jecxz
js
aam
ret
stc
sub
fsts
xchg
pop
fwait
sahf
adc
inc
cmc
and
mov
clc
or
inc
push
jp
cmp
jle
lcall
mov
mov
lods
cmc
or
in
cmc
sbb
add
test
int
clc
sahf
and
sub
movsb
es
leave
xchg
push
xchg
enter
push
pushf
jecxz
inc
lahf
mov
or
dec
mov
inc
pop
dec
adc
xor
rcr
mov
dec
and
imul
test
sub
inc
sbb
adc
sub
dec
pop
lds
pop
xor
rorb
repnz
cmpsb
inc
pop
push
mov
pop
push
lea
lahf
popf
pop
lret
in
xor
and
call
push
cmp
or
sbb
insb
mov
mov
pop
mov
test
fcompl
cld
mov
aam
fs
lods
cmp
jno
jmp
push
xchg
out
sbb
test
mov
jo
xorl
inc
ret
inc
or
pop
dec
cmp
dec
and
xchg
aam
mov
lret
cmc
dec
fsubl
mov
sub
and
add
sub
xorb
lcall
gs
push
insl
test
in
mov
cld
jmp
dec
fwait
inc
mov
xchg
pop
adc
aad
mov
inc
lahf
pop
xchg
out
dec
jl
push
pop
xor
movsl
push
repz
lcall
or
and
ret
mov
ljmp
jecxz
clc
jmp
sub
and
lods
dec
jmp
inc
push
push
mov
cmp
pop
inc
mov
mov
orl
or
push
sahf
jbe
sti
xorl
jbe
dec
dec
rorl
mov
cmp
mov
pop
cltd
dec
mov
lcall
popf
pop
xchg
mov
movsl
sub
lahf
mov
lods
nop
push
or
cli
pop
sti
test
enter
xor
lea
lahf
mov
adc
int3
insb
dec
adc
push
push
push
iret
sub
enter
fidivrs
sbb
mov
pop
gs
into
push
push
add
adc
lea
inc
call
fistpl
pop
enter
in
jecxz
out
sub
lea
and
jmp
jns
inc
xchg
clc
mov
les
in
cmp
and
and
sub
adc
in
mov
lods
arpl
inc
fstpl
pop
rorl
jne
insl
lods
jae
jmp
push
xchg
sbb
inc
cli
adc
ds
in
dec
dec
push
push
jnp
or
test
sbb
fs
jns
orl
ret
orb
add
xor
pop
out
mov
test
into
scas
cli
faddl
rclb
and
js
lock
outsb
dec
std
xchg
xchg
es
jnp
push
add
addr16
enter
and
dec
pop
in
sbb
int3
push
sbb
cli
insl
or
sub
and
inc
xchg
test
test
aaa
std
dec
and
stos
xor
popl
lea
mov
nop
hlt
mov
adc
xchg
push
shl
imul
push
xchg
mov
adc
loope
cmp
cld
int3
adc
cmp
mov
cwtl
sbb
adc
mov
push
adc
or
scas
or
mov
xlat
jp
sahf
cmc
pop
pop
mov
or
pusha
jne
insb
ja
or
push
jae
mov
or
inc
adc
pop
xor
repz
test
xchg
loope
stos
cmp
sub
dec
or
mov
shl
ret
mov
je
inc
inc
push
stos
mov
data16
fnstenv
loope
mov
mov
shr
test
loopne
data16
and
xchg
enter
daa
fimuls
mov
stos
adc
dec
inc
fldt
movsl
adc
testb
loop
je
adc
pop
sub
lret
push
cmpsb
fistps
or
jne
lock
out
mov
mov
xchg
test
adc
pusha
je
add
mulb
pop
or
and
fbld
and
lcall
jmp
fcomi
out
mov
xor
add
or
ja
mov
or
cmp
sbb
pop
adc
movsb
lcall
inc
mov
pop
out
incl
insl
or
jp
or
pop
adc
cltd
aad
aam
or
mov
clc
mov
or
pop
add
xchg
inc
xor
test
mov
mov
or
imul
or
push
les
scas
shl
fadd
into
push
dec
in
push
jle
sub
repz
call
sbb
out
cwtl
fs
cwtl
int3
xor
push
dec
pushf
lcall
mov
movsl
into
scas
or
and
xor
test
aaa
repnz
ret
inc
or
dec
leave
fwait
pop
mov
test
add
push
mov
rcrb
xchg
loope
mov
sbbl
imul
insb
ljmp
insb
push
jl
cli
mov
cltd
js
jge
fs
inc
and
idivb
mov
popa
push
nop
push
cwtl
mov
and
clc
mov
and
mov
insb
fcoml
mov
rclb
push
lcall
pusha
inc
mov
lea
or
lcall
pop
test
or
or
sub
gs
cmp
push
or
daa
stos
pop
inc
mov
cmp
ds
inc
xchg
jp
jo
fidivrl
mov
inc
pop
push
and
cld
je
sub
and
or
xlat
push
push
adc
std
add
cmpsl
push
dec
ficoml
push
ss
add
insb
test
pop
ss
dec
push
dec
or
push
xor
xchg
test
mov
lock
push
sub
cmpsl
enter
adc
adc
cmp
mov
push
andl
movsl
cmpsl
shr
jbe
push
xor
inc
mov
sti
xorl
sub
xor
stos
or
mov
pop
hlt
cmp
mov
roll
adc
fsubrl
inc
int
scas
add
inc
std
loope
dec
insb
pusha
push
fucomip
pop
stos
sahf
xor
scas
mov
and
xor
sub
dec
jne
or
insl
mov
mov
mov
push
jne
fldcw
xor
hlt
pusha
pop
xor
ss
aad
in
int3
mov
loop
test
repz
pop
adc
cmpsl
loope
fcomip
je
out
int3
mov
add
or
sub
roll
pop
lret
adc
push
push
cmp
add
jo
sub
clc
movb
jae
stos
adcb
pop
fisubrl
lock
sbbl
ds
aaa
push
popa
in
push
sbb
ds
movsb
aad
popf
cmp
aas
inc
cltd
loop
in
mov
ljmp
cmpsb
pop
or
loopne
mov
cmpsl
stos
mov
inc
xlat
mov
jae
fisttpll
sti
mov
adc
inc
xchg
pop
andb
mov
int3
cli
mov
cwtl
sub
enter
in
adc
push
in
add
hlt
out
ss
je
aas
mov
scas
mov
adc
ret
mov
inc
pop
mov
fsubrl
mov
mov
xlat
mov
mov
sbb
stos
mov
loop
shrl
mov
sub
sbb
addb
test
jmp
dec
inc
xor
or
fcmovb
mov
pop
aas
lahf
mov
subl
mov
pop
mov
pop
incl
mov
push
sbb
mov
cmp
fisubrs
wbinvd
fstl
movsb
pop
pop
bound
icebp
dec
in
cld
add
sbb
jnp
outsl
in
lahf
inc
adc
mov
pop
fmull
nop
and
stos
add
add
mov
xchg
loopne
gs
fwait
je
mov
loopne
or
popl
pop
mov
out
sbb
xchg
outsl
push
outsb
or
push
rorl
mov
and
pop
adc
addb
sbb
insb
in
jb
clc
mov
jno
dec
sahf
mov
mull
mov
xchg
cmpsl
popf
jl
movsl
je
jl
cmp
xchg
or
outsl
scas
add
fistpll
je
push
push
inc
mov
hlt
int
xchg
icebp
outsl
inc
cmpsl
sbb
es
or
jb
js
ja
adc
ljmp
jne
mov
mov
mov
xor
push
sbb
dec
adc
daa
pop
pop
rcrl
cmp
jns
sub
mov
pop
fwait
dec
adc
cltd
push
sub
add
add
and
lcall
xchg
je
xor
cmp
shll
jge
in
xor
jp
sbb
js
xchg
fs
in
xor
push
or
inc
cs
bound
mov
es
dec
sbb
and
or
adc
lds
xchg
push
pop
mov
loop
pop
out
fstpl
or
divl
add
sub
fidivrs
mov
mov
orl
or
flds
je
sbb
dec
push
adc
xchg
mov
add
mov
push
popf
je
je
xchg
jbe
movsl
inc
xor
cltd
dec
pusha
mov
xchg
add
push
mov
dec
outsl
sbb
mov
jmp
add
add
lret
pop
imul
jb
sub
adc
push
push
int3
and
hlt
je
mov
test
inc
lods
inc
dec
ret
mov
adc
sbb
nop
mov
fildl
aaa
mov
mov
mov
push
pop
mov
push
enter
hlt
cmp
jo
jo
std
pop
add
movsb
std
cmp
push
test
scas
subb
sti
popa
inc
and
fnsave
xor
aad
dec
cld
lcall
push
cli
imul
notl
outsl
cmp
cmp
out
push
dec
aad
add
lods
push
repz
and
dec
cwtl
add
push
jle
loopne
mov
or
inc
mov
cmp
jo
fisttps
cmp
fldcw
lods
jmp
popf
inc
xchg
les
int
sarb
inc
xor
rol
or
js
cmpsl
in
repz
and
orb
add
cmpsb
jnp
divl
lea
adc
pcmpgtb
mov
decb
stos
adc
push
mov
test
outsb
test
out
in
sub
ljmp
inc
repnz
aam
adc
jnp
loope
and
xchg
es
pop
pusha
mov
mov
scas
outsb
adc
es
and
dec
test
shl
add
mov
mov
int3
shll
jecxz
mov
fdivl
dec
ficomps
push
push
or
mov
jno
out
shll
xchg
testb
imul
xchg
or
nop
inc
cld
xchg
push
inc
icebp
xchg
out
push
hlt
add
lret
pop
or
mov
fstpl
or
lcall
mov
imul
inc
ret
imul
outsl
dec
lock
xchg
add
push
cmc
or
notb
das
into
decb
and
jnp
pop
imul
icebp
sub
push
repnz
test
dec
xchg
adc
or
adc
mov
sub
xchg
lods
sbb
and
out
rcr
inc
xor
sti
push
outsl
idivb
dec
xor
lret
sub
adcl
out
ret
dec
cld
push
loopne
popf
inc
test
stc
inc
mov
jge
mov
xor
in
mov
mov
inc
dec
inc
push
mov
cmc
and
adc
std
mov
mov
lods
lods
pusha
lds
movsb
and
sti
xchg
scas
sub
push
mov
adc
jne
scas
inc
xor
cmp
pop
mov
subl
push
aam
pop
cs
in
into
push
dec
xlat
pop
cmpsb
das
jl
add
push
adc
rcrb
xor
push
mov
xor
mov
mov
imul
mov
lock
or
shlb
mov
andb
inc
leave
enter
sub
gs
adc
sbb
stos
mov
pop
inc
stos
lea
cmp
lea
std
jge
lret
jge
mov
push
into
lods
lods
enter
pop
rcrb
in
fildll
adc
and
outsl
fiadds
mov
daa
nop
pop
aad
addr16
push
hlt
mov
lods
adc
into
jno
mov
sbb
jns
cmp
insl
xchg
push
shl
mov
push
mov
lods
cld
dec
pop
jnp
sti
xchg
add
pop
hlt
mov
inc
iret
dec
mov
and
fsub
imulb
popf
push
jp
andb
rcr
inc
imul
scas
add
jg
cmp
xchg
arpl
inc
clc
sahf
stos
call
fninit
popf
repz
es
inc
and
test
jmp
jecxz
inc
dec
push
inc
stos
sar
es
cli
sbbl
icebp
lods
xlat
dec
sub
addr16
xor
mov
jmp
mov
push
jne
rcrb
mov
sbb
nop
and
mov
mov
or
inc
in
jbe
dec
pop
push
cmp
pop
mov
push
xchg
jle
dec
mov
pop
sbb
mov
xchg
sbb
popa
sbb
inc
mov
je
add
inc
add
mov
js
lea
test
popf
fs
cmp
add
dec
data16
outsb
sbb
icebp
roll
jbe
dec
xor
out
jns
xchg
sub
decl
mov
adc
jbe
and
adc
ficomps
cmp
dec
ret
imul
shlb
jge
ret
adc
push
neg
jno
mov
cmpb
adc
mov
std
dec
mov
repnz
mov
pop
push
cmpsl
das
pop
js
cltd
sbb
lods
jno
test
pop
dec
enter
sub
in
push
push
pop
sbb
out
dec
leave
out
dec
lock
mov
cwtl
xchg
popa
dec
test
clc
popf
loope
ficompl
enter
sbb
data16
aaa
hlt
pop
mov
inc
jg
ret
int
insb
and
sarl
pop
arpl
push
sub
fnsave
or
and
push
add
pop
pop
cs
lock
jne
push
movsb
std
push
pop
cmp
mull
pop
ljmp
push
leave
cli
jecxz
and
push
mov
lds
push
xchg
iret
jg
enter
or
pop
and
or
mov
xlat
or
cmp
inc
sub
and
or
popf
pop
cltd
or
xor
xchg
cmp
lods
mov
enter
roll
cmp
int
cmp
popf
orb
les
aaa
lret
scas
mov
adc
repnz
mov
icebp
xor
push
mov
aam
inc
cmpb
popa
mov
and
or
insb
mov
or
adc
into
xlat
and
cltd
xchg
and
and
dec
inc
stc
mov
fstpl
add
sub
int
sti
mov
jle
cmp
cmpb
xchg
mov
fwait
popa
mov
js
loop
mov
jo
nop
adc
es
aam
call
mov
or
pop
cwtl
mov
andl
ficoms
mov
lds
int3
popf
fcomi
push
xlat
xchg
adcl
jmp
fisttps
sti
push
pop
dec
dec
mov
push
stc
nop
fists
adc
subb
xorl
sbb
nop/reserved
outsl
cli
add
or
dec
sub
aas
xchg
mov
adc
in
into
add
fnstcw
jmp
dec
sarb
das
pushf
mov
incb
stos
adc
mov
subl
insl
or
add
xorb
seto
js,pn
inc
add
xchg
mov
cwtl
or
mov
push
xor
ljmp
xor
stos
jl
pop
mov
jp
jbe
testl
mov
pop
push
xchg
lahf
pop
mov
jge
mov
and
inc
movsl
xchg
sub
bnd
inc
xor
test
inc
fidivs
sbbb
and
add
out
repnz
in
or
dec
sbb
pop
lods
add
pop
mov
xchg
cld
mov
ss
push
and
jbe
dec
cld
fcoml
fldenv
out
iret
aaa
or
sub
in
mov
and
mov
jno
clc
sub
in
xchg
inc
movl
push
or
cmc
ja
shlb
mov
stc
push
xor
sbb
in
xchg
jg
loopne
call
aad
cmp
in
daa
xor
pop
rcll
popa
lret
stos
dec
jle
jo
and
in
lcall
jno
sbb
scas
std
pop
sbb
scas
les
fwait
inc
sub
mov
mov
cld
scas
or
push
jne
or
test
push
stc
jb
stos
pop
test
sbb
xorl
test
lea
xor
or
repnz
or
das
jae
stc
jno
and
and
dec
or
and
sub
push
enter
mov
dec
inc
mov
cwtl
or
cld
loopne
repz
and
jnp
push
arpl
popa
or
dec
mov
loope
pop
mov
jle
lds
sbb
call
dec
mov
xor
push
pusha
ds
in
pop
add
push
mov
cmp
movl
in
sub
inc
cmp
adc
jp
lods
insb
nop
xor
cmp
imul
push
xchg
xchg
clc
sub
jle
or
pop
and
sahf
sub
add
lcall
dec
mov
das
cmp
nop
ret
out
rcrb
xchg
mov
push
add
push
ja
iret
stc
jle
add
inc
cmp
aaa
test
out
rcr
imul
xlat
push
jl
pop
pop
xchg
sbb
pop
insl
aad
pop
pop
enter
pop
test
adc
pop
push
xor
inc
push
pusha
push
or
insl
xchg
cmp
cmc
adc
adc
cmp
ja
pusha
rcl
test
xchg
popf
adc
cmpsb
sub
mov
imul
ja
imul
xchg
push
aam
cmp
pushf
sub
hlt
or
iret
xchg
pop
push
pop
dec
inc
mov
add
and
data16
or
jae
jl
mov
ret
popa
jecxz
sbb
in
mov
jmp
mov
mov
enter
lret
jge
push
jl
cli
shll
jbe
nop
cmp
lcall
stos
mov
sub
incb
xchg
lods
pop
sbb
scas
roll
lahf
into
in
xchg
rorb
push
loopne
pop
test
jg
lds
jmp
in
mov
and
xor
push
cmp
xchg
in
or
pop
mov
and
adc
sbb
arpl
out
ljmp
fsubs
mov
test
add
aaa
xchg
add
mov
data16
fucomi
in
int3
mov
or
daa
inc
or
ret
inc
bound
addr16
pop
jle
fstl
gs
mov
decl
push
jmp
push
mov
ljmp
xor
adc
jbe
push
ljmp
adc
add
sub
dec
lods
cs
inc
mov
in
push
divl
mov
outsb
add
stos
jo
test
subb
xchg
xor
inc
jmp
mov
mov
ljmp
add
sbb
fsubr
inc
out
and
and
sbb
out
or
xor
insb
mov
inc
jl
fsubrl
xchg
add
adcb
cmp
pop
repnz
add
stos
jno
sub
adc
jmp
je
arpl
mov
push
dec
movsl
and
int3
sbb
jns
cmpsb
add
cli
lcall
sub
insb
addb
sub
mov
mov
sbb
jnp
pushf
jns
xchg
or
sub
mov
cmp
push
shrl
in
imul
fs
pop
fnsave
jbe
or
mov
inc
mov
pop
in
lock
mov
inc
jl
push
adc
je,pt
les
aas
addb
push
inc
sbb
dec
notb
or
mov
cmp
fcmovnu
add
not
cmp
jle
or
ds
add
push
jg
pop
jns
pop
jne
frstor
ret
insl
adc
pushf
stc
cmp
xchg
sub
sub
and
xchg
popw
fdivrl
ljmp
and
cmp
adc
out
cmp
xor
add
std
fstps
mov
and
outsb
jecxz
lcall
inc
fdivr
scas
cmp
xchg
es
add
push
and
shlb
inc
fs
mov
add
das
repnz
jae
jo
and
movsl
int
and
sub
filds
or
mov
add
xor
push
cmpsb
and
mov
mov
dec
in
cmpsb
dec
push
and
fs
std
xchg
out
int3
sub
je
into
sbb
inc
popf
mov
dec
pushf
je
out
ss
and
mov
mov
cmpsb
and
push
data16
enter
rorb
sbb
jmp
jb
inc
ret
mov
repnz
inc
xchg
sbb
mov
or
push
fwait
test
icebp
add
ljmp
enter
bnd
jg
pushf
je
and
sub
jl
add
sbb
sbb
cmpb
lock
push
sub
cmpsb
sub
dec
xor
cmp
pop
jnp,pt
inc
or
dec
movsl
cmpsb
mov
es
mov
pop
cmpsb
stos
imul
lret
call
stc
xor
push
das
and
add
fists
jmp
data16
xchg
int
nop
cmp
jae
jmp
dec
push
cld
rol
lret
testl
sub
adc
add
outsl
enter
mov
jecxz
push
pop
ret
dec
fadds
sbb
sbb
sub
hlt
xor
daa
movsb
lods
les
mov
pop
xchg
popa
jns
out
pop
xor
add
cs
push
gs
lea
andl
lahf
ret
xor
out
frndint
cwtl
scas
movsb
push
repz
sbb
jl
pop
push
fidivl
hlt
or
mov
add
sub
xor
push
ret
mov
adc
scas
xchg
outsb
hlt
aas
push
xchg
repz
and
add
rorl
dec
pop
mov
repnz
or
pop
orl
adc
lcall
pop
or
push
fildll
mov
or
adc
lcall
push
add
pusha
jbe
shll
jb
push
enter
stos
mov
jne
cmp
pop
dec
mov
icebp
ficoml
cmp
insb
dec
or
ds
cmp
lcall
sbb
mov
mov
sarb
adc
sbb
dec
and
lods
lods
xorl
cli
cs
push
add
xor
js
sbb
or
or
test
out
aad
mov
mov
mov
mov
pop
push
xchg
out
adc
add
mov
in
or
jb
and
xchg
dec
sbb
fcoms
mov
add
das
jbe
push
lods
sahf
jle
int
mov
andb
adc
push
test
fwait
jns
push
xchg
lock
inc
cmpsb
fldenv
inc
notl
dec
mov
inc
add
add
in
sar
fsts
aam
shlb
jge
test
loopne
jl
imul
push
aam
dec
loope
inc
sti
xchg
sub
pop
mov
or
add
and
xchg
cmp
jb
flds
push
push
test
in
jge
xchg
push
cmp
mov
bound
add
jnp
pusha
imull
gs
add
inc
add
mov
mov
dec
aaa
std
xchg
int
gs
dec
adc
sub
jge
jg
mov
sahf
pop
ret
gs
arpl
inc
mov
shr
scas
dec
sub
inc
push
sahf
clc
inc
and
cmp
pusha
sti
or
adc
sub
or
lods
jmp
xchg
sub
fsubr
cmp
push
pop
mov
dec
insl
pop
push
xchg
test
les
adcb
fwait
movsb
inc
push
stc
dec
and
jle
cmp
iret
or
cmpsb
mov
imul
push
clc
cmp
fistpl
mov
mov
xchg
ja
jne
cltd
sbb
les
mov
lcall
lock
mov
add
ljmpw
into
push
cmp
dec
flds
lods
push
dec
leave
or
sub
aam
push
dec
and
mov
in
repnz
cmp
mov
aaa
push
add
pop
jg
mov
dec
dec
pop
sarl
mov
sbb
push
ss
or
jp
xor
in
and
inc
call
clc
mov
pop
rcrl
in
imul
xor
inc
cld
cmp
and
repnz
test
sahf
xlat
jnp
rol
divb
pop
jmp
adc
neg
test
adc
scas
arpl
push
aam
ljmp
mov
test
push
xchg
aam
mov
sarb
icebp
clc
arpl
popf
dec
jbe
jae
mov
pop
aad
jno
pop
dec
push
or
mov
lcall
push
mov
stos
fstpl
sub
popf
inc
lods
daa
mov
sub
aas
ss
cs
imulb
mov
aas
lret
arpl
mov
sub
or
es
cmp
ss
or
rcr
cld
or
fcoml
push
fidivrs
dec
or
sbb
dec
xlat
jns
xchg
jne
xchg
push
into
mov
ret
cmp
fucom
pop
clc
outsb
cmp
mov
stos
sub
jb
ds
mov
or
shrb
lret
mov
xchg
std
jg
xlat
test
clc
nop
mov
pushl
adc
push
sub
jb
sbb
cltd
hlt
xorb
movsb
rcll
mov
mov
add
call
push
cmp
cmp
pop
dec
cmp
inc
les
outsb
dec
jbe
scas
enter
push
inc
mov
adc
out
sub
push
stos
sub
mov
in
and
mov
jae
pop
and
mov
loope
arpl
outsb
mov
mov
les
or
jp
dec
and
adc
inc
mov
divb
mov
pop
inc
and
div
sbb
scas
inc
sarl
pop
pushf
dec
cs
jne
push
jge
std
cmpsl
inc
mov
ljmp
or
cld
cmp
xchg
mov
dec
es
sub
lahf
and
sahf
pop
mov
lahf
aaa
cli
fistl
adc
daa
je
xor
jns
mov
adc
loope
inc
lret
das
movsb
or
mov
pop
jmp
xchg
jne
aam
pusha
in
and
add
orb
push
push
jp
clc
jae
cld
mov
out
rcrl
das
and
push
out
call
sbb
push
call
cmp
inc
pop
cmpsb
call
scas
push
adc
cs
dec
cltd
data16
sarl
js
lock
lret
ja
push
gs
jno
je
jo
ret
cwtl
sbb
adc
test
dec
into
cmp
int
js
notb
mov
cmp
out
repz
jnp
xchg
xor
jb
add
dec
rolb
stos
loopne
push
dec
xchg
idiv
or
add
shll
gs
pushf
mov
xchg
iret
add
call
mov
mov
inc
dec
ret
nopl
leave
cmc
or
push
mov
aam
xbegin
aam
leave
scas
roll
sub
and
and
fcomi
mov
fnstenv
mov
mov
les
mov
xchg
enter
adc
idivl
pop
enter
insl
mov
push
push
cmp
fimull
sbb
or
sbb
cmp
jbe
lret
jo
inc
sub
mov
mov
pop
xchg
mov
lods
sahf
out
xchg
mov
stos
test
pop
jle
lahf
ret
cmp
adcl
lock
test
jns
pushf
rorl
and
jge
sub
in
mov
jg
aaa
mov
js
dec
mov
daa
mov
fsts
stos
inc
cmp
in
push
sub
outsb
call
out
sbb
dec
inc
pop
xchg
mov
out
push
cld
stos
aad
je
test
outsl
mov
mov
mov
push
dec
andb
mov
inc
stos
xchg
jne
mov
inc
push
ja
decb
stos
cli
leave
xor
jne
les
or
cmp
mov
data16
inc
adc
dec
addl
push
pop
cmp
mov
sbb
aas
cmpsl
rorb
or
movsl
jp
lret
inc
jmp
popf
cmpsb
push
pusha
pop
xor
adc
lock
push
sub
mov
sub
push
lods
sar
sbb
clc
popf
cmovns
enter
std
or
dec
mov
aam
sub
les
into
xor
sbb
cmp
lret
fs
push
xor
mov
xor
ret
shr
repz
cmpsl
sbb
jecxz
xchg
and
inc
ret
das
push
inc
inc
fcomip
into
test
pushf
out
jne
je
insb
jg
jg
dec
or
cmpsb
pop
mov
sbb
cmpsl
sub
xor
xchg
jne
imul
and
or
dec
das
addr16
pop
xchg
adc
sub
dec
je
mov
inc
push
cmp
dec
popa
daa
xchg
imul
call
inc
outsb
inc
jns
lods
and
push
addb
dec
xor
addl
sub
push
das
or
jne
mov
ja
adc
dec
cmp
dec
pop
xchg
pop
aam
adc
jp
lret
jae
cmc
and
pushf
sub
cmp
jae
icebp
sub
stos
addl
pop
sub
inc
das
imulb
in
idiv
jecxz
pop
cmp
adc
adc
and
xlat
rol
insl
andl
dec
or
or
mov
cmp
cmp
iret
in
das
ret
mov
pusha
test
fwait
push
jl
jnp
mov
insl
divl
stos
loopne
imul
addr16
dec
dec
jnp
call
out
std
adcb
daa
jge
ret
add
loope
lods
popa
imul
xor
shrb
add
mov
bswap
aam
pop
mov
mov
xchg
mov
test
xchg
js
aaa
sub
sub
ljmp
xorl
movsl
outsb
jecxz
out
dec
cltd
ffreep
inc
inc
incb
xor
xchg
bound
pop
ficoml
cmpsl
sbb
dec
cli
inc
out
out
push
xchg
fcmovnu
or
testl
sub
push
pop
mov
or
repz
pop
push
mov
xor
cmpsb
repnz
or
mov
jae
test
and
pop
dec
or
cwtl
dec
and
aam
pushf
mov
sub
xchg
lods
cmp
jmp
movl
jmp
dec
ds
out
lcall
fbld
pop
clc
or
and
or
lret
add
push
mov
mov
je
adc
xchg
xchg
stc
loopne
test
mov
data16
jmp
lea
push
jle
xchg
out
xor
aam
movsl
gs
fmul
bnd
outsb
jae
inc
andl
xchg
sbb
mov
scas
push
and
mov
mov
and
and
or
fs
stc
and
frstor
iret
lret
cld
push
xor
lods
jge
inc
cwtl
shlb
adc
push
lods
popa
jo
es
and
dec
insl
insl
or
xchg
fcompl
arpl
sbb
pop
mov
push
cmc
sub
mov
mov
jmp
bound
or
das
and
hlt
and
or
add
cld
mov
jo
outsb
in
repnz
stc
fdivrs
sbb
jb
mov
pushf
jp
xchg
dec
mov
push
sbb
push
aas
shl
push
cwtl
add
push
sub
push
or
xor
inc
fstpt
stc
test
pushf
mov
xchg
or
pop
gs
dec
clc
test
out
cmp
rcrl
xchg
xor
push
dec
stos
imul
sbb
flds
or
pop
test
sub
pop
dec
sti
sbb
subb
cmpsb
insl
xlat
cmp
andb
xor
rcll
jge
mov
or
or
add
mov
das
sbb
in
lods
out
mov
call
mov
pushf
xchg
push
leave
jmp
movsl
rorl
cmp
cmpsb
cmpsl
subb
loope
jecxz
inc
push
push
push
sbb
pop
imul
dec
xor
mov
filds
push
aaa
inc
notl
cmc
mov
mov
mov
lret
dec
mov
stos
inc
xchg
pop
cmp
movsl
int3
hlt
sarl
mov
sbb
loope
stos
or
pop
subl
cmp
jge
pop
and
dec
cmpsl
mov
or
data16
mov
das
cmp
rcr
mov
jl
sub
pushl
xchg
mov
pop
int
dec
xchg
push
ret
mov
loope
sahf
dec
xchg
les
mov
sub
data16
jg
rcrl
cli
push
jle
xchg
mov
enter
in
in
push
not
jp
incl
xorb
call
and
mov
lcall
lds
test
shl
mov
and
inc
mov
and
xor
sbb
in
sub
mov
je
and
and
dec
mov
dec
adc
pop
push
push
jne
or
adc
sbb
mov
sub
mov
cmp
push
add
xor
jne
cwtl
int3
outsb
ss
inc
or
pop
popf
lret
rcll
dec
lret
in
loop
das
loopne,pt
jno
scas
in
movsl
mov
jae
loope
loopne
mov
cmp
popa
mov
dec
out
lretw
cwtl
push
sar
mov
xchg
fbld
and
and
xchg
jne
and
call
es
test
push
fcmovbe
jmp
mov
add
mov
xchg
movsl
xchg
enter
jecxz
pop
leave
add
push
push
sub
push
mov
inc
insl
sub
fbstp
push
inc
cltd
add
sbb
sub
sbb
push
dec
jno
loop
pusha
insb
add
scas
stc
jne
add
push
aad
xor
setnp
arpl
mov
sti
fists
and
xchg
test
inc
lods
or
insl
inc
data16
out
xchg
ret
lcall
punpcklbw
inc
push
out
lcall
xlat
jae
xlat
mov
push
inc
xchg
gs
adcl
pop
jmp
xchg
mov
sti
jp
jmp
or
cmc
fidivrs
popa
leave
test
inc
lods
xchg
jbe
push
jnp
imul
xlat
xor
daa
push
cs
in
mov
sarl
movsb
xchg
daa
add
inc
nop
cld
jb
out
orb
inc
push
xchg
mov
mov
mov
in
cmp
subl
loop
fidivrs
std
or
or
xchg
mov
jecxz
pop
cmp
test
mov
mov
mov
lcall
jne
cmp
pop
push
call
push
sti
fcompl
aas
scas
mov
cmp
sbb
int3
fiadds
mov
fmulp
cs
jnp
jg
add
adc
shrl
addr16
cmp
mov
or
testb
mov
pushl
mov
fsts
jb
lds
fwait
inc
rcl
and
pop
pop
push
push
jnp
fsubl
jb
pushf
in
jno
add
imul
push
mov
mov
ds
mov
mov
shll
adc
jmp
adcb
loope
add
cmp
fwait
rorb
cs
sub
adc
sbb
fwait
out
jbe
jne
ret
or
std
lods
fisubrs
add
imul
jg
das
add
in
shll
dec
add
addb
lock
scas
mov
test
or
sbb
dec
push
movsb
mov
cmp
sahf
pusha
and
insb
ja
mov
js
aas
and
dec
jno
call
lret
clc
mov
mov
mov
xchg
sub
mov
xchg
push
inc
adc
cltd
fcomip
or
test
mov
push
mov
or
jo
jb
fs
add
xchg
orl
sub
adc
scas
imul
ret
les
inc
xchg
jl
push
mul
pop
adc
mov
enter
mov
stos
add
dec
gs
cmp
mov
testb
pop
push
xor
ret
xchg
fimuls
or
aad
cmp
rorl
negl
test
mov
inc
fistpl
sbb
lahf
xchg
sbb
out
decb
scas
add
ret
fnstenv
in
jne
div
dec
cli
xchg
mov
sub
jmp
in
cmp
add
test
aad
dec
repnz
mov
shr
push
mov
lods
test
orb
jle
cmp
xor
fldenv
add
dec
add
pusha
xor
add
and
adc
fwait
jnp
push
pop
cmp
sbb
add
cmpsl
mov
cwtl
mov
daa
xchg
es
xor
cmpsl
mov
xor
aad
dec
xchg
pop
and
mov
dec
popf
outsl
mov
addb
stos
mov
js
dec
in
xorl
inc
aas
push
test
ss
jle
or
add
sub
std
js
dec
jbe
pop
push
cwtd
xor
pushf
loope
xor
cli
push
and
adc
ret
jl
ds
mov
adc
fcoms
test
sbb
imul
push
in
or
int
adc
add
cld
pop
mov
pushf
mov
std
pop
adc
adc
mov
cmp
or
mov
test
subb
cmp
adc
mov
jmp
dec
mov
xorl
clc
arpl
repz
hlt
inc
loope
outsl
jnp
dec
pusha
fildl
mov
stc
inc
fiadds
lea
mov
xchg
push
das
icebp
mov
test
repz
js
aas
inc
ljmp
xchg
jbe
sahf
lods
jl
dec
pop
mov
pop
mov
arpl
rol
fwait
inc
mov
and
mov
and
dec
push
mov
or
out
dec
inc
imul
mov
inc
lods
mov
sbb
add
leave
sub
cwtl
pop
sub
fldl
mov
adc
aas
adc
fs
pop
or
loopne
shl
pop
push
dec
xor
inc
emms
fimuls
mov
mov
outsb
cltd
pushf
cmpsl
inc
cmp
pop
pusha
es
pop
fisubrs
adc
sbb
and
sti
js
mov
and
add
push
sub
mov
aad
pop
test
sbb
mov
or
jnp
imul
mov
pusha
loopne
sbb
sbb
negl
pop
test
jge
movsl
pusha
xchg
ficoml
adc
call
std
inc
cmp
jne
fs
std
sub
movsl
mov
sub
popa
test
cld
es
stos
in
shlb
xchg
shlb
and
adc
in
push
sub
add
out
std
push
xor
negb
int
sbb
sbb
mov
lds
icebp
xchg
cmp
adc
clc
andl
mov
movb
nop
and
lahf
inc
stos
stos
and
cmp
mov
cltd
jmp
adc
pushf
mov
mov
inc
pop
adc
pop
or
sub
lret
push
xchg
push
fnstcw
cmp
daa
hlt
jmp
mov
insl
cmp
in
or
in
shrb
in
add
xchg
rcr
adc
or
mov
cmp
stos
mov
cld
xchg
mov
mov
cmp
stos
sbb
push
xchg
fmul
mov
orl
test
sbb
and
mov
mov
sbb
ret
sub
test
or
es
lock
test
pop
aaa
mov
adc
dec
jne
pop
mov
push
test
hlt
jmp
bound
pop
insb
mov
hlt
jle
push
xchg
fbld
fstps
sub
add
sbb
pop
and
int
stos
out
add
hlt
or
pop
enter
rcr
add
call
cmp
push
xlat
and
mov
pop
jo
jne
adc
adc
mov
aas
or
xchg
add
mov
dec
cmc
clc
adc
fbstp
push
mov
jmp
arpl
in
fisubs
dec
push
cs
adc
and
ja
mov
fistl
cld
sbb
fnsave
and
fnsave
paddsw
dec
xchg
cwtl
sbb
fisttpll
mov
std
ljmp
test
mov
xor
fisubrs
movsb
xor
fistpl
call
imul
cltd
ljmp
jbe
jne
adc
in
and
or
cwtl
loopne
pop
or
dec
pop
cmp
add
push
mov
push
or
xor
mov
mov
pop
inc
es
pop
pop
in
stos
fwait
icebp
push
cwtl
and
or
rorl
and
sbbl
out
mov
xchg
insb
outsb
cmp
cli
xor
fstpt
aam
push
jne
xchg
pop
xor
jmp
dec
mov
lea
push
inc
or
loope
or
pop
lods
dec
ss
loop
inc
shr
adc
ret
mov
test
in
decb
jae
mov
lea
add
mov
dec
and
cs
aam
push
jecxz
stos
dec
pop
mov
cmp
dec
mov
cmpsb
jbe
jae
pop
sbb
fs
push
imul
adc
sti
ds
push
cli
mov
leave
dec
push
std
push
jo
ljmp
mov
js
rolb
pop
sahf
inc
out
xchg
push
cli
xchg
in
cmp
lock
jp
adc
dec
push
daa
push
push
fs
push
mov
xchg
and
cmpsb
das
jmp
xchg
out
outsb
jbe
sbb
mov
mov
sub
loopne
pop
bound
jl
push
cmpsl
pop
jnp
testl
test
stc
inc
repnz
sub
jecxz
in
insl
jae
roll
shlb
je
sbb
aam
lock
vaddpd
mov
imul
test
jne
xchg
movsl
sbb
lds
inc
js
mov
out
pop
clc
leave
js
inc
ss
xor
mov
das
out
mov
pop
icebp
mov
dec
dec
mov
test
jecxz
xchg
cli
jg
test
jns
mov
scas
icebp
cmp
xor
aas
pusha
loop
dec
movsb
adc
loope
or
and
xchg
adc
jge
out
and
std
test
cli
icebp
inc
mov
xor
add
mov
cmpsl
jmp
xchg
movl
mov
fdivrl
xchg
scas
sti
in
push
or
cmpsl
in
adc
push
push
or
push
pop
jne
push
dec
ret
inc
cmp
xchg
andb
jmp
mov
dec
int3
arpl
mov
dec
dec
cmpsl
into
pop
xchg
add
mov
xchg
jmp
lds
int
sbb
insl
adc
inc
popa
inc
inc
mov
int3
fsubrs
sub
push
gs
jp
xchg
repz
fistps
pop
mov
jbe
jge
jne
adc
orb
sbb
out
in
dec
xchg
push
incb
mov
pop
xchg
mov
inc
dec
jge
stc
in
inc
mov
je
mov
int3
into
sub
jle
aam
repnz
pop
ds
std
pusha
cmp
sub
pusha
ds
hlt
dec
dec
cld
xor
cmp
sub
lret
jecxz
jmp
mov
sub
pop
insb
and
dec
pop
xchg
movsl
bsr
jne
das
inc
fwait
mov
dec
pop
dec
pop
add
push
sbbb
cmp
out
mov
outsb
push
ja
shrb
lock
scas
dec
add
imul
sub
sbb
mov
popa
pushaw
sbb
sbb
and
push
mov
add
xlat
pop
pop
push
and
push
unpcklps
and
popa
fs
mov
or
inc
stc
inc
mov
sbb
fs
jae
cmp
sbb
jns
outsb
jne
divb
jg
pop
mov
xchg
shr
call
fcmovnb
dec
aaa
push
xor
cli
add
xchg
into
sti
xor
andl
stos
cmp
scas
idivb
leave
xchg
sbb
hlt
sti
dec
flds
out
xor
and
and
lock
sub
cmp
pop
inc
adc
leave
test
pop
inc
js
mov
inc
int
in
mov
cmpsb
mov
in
push
and
rorl
jb
dec
pop
leave
in
pop
insb
out
dec
and
push
negb
xchg
mov
lock
sahf
and
loopne
and
ds
lahf
cmp
inc
pop
xchg
out
sbb
or
fdivrl
cmp
mov
dec
jle
stos
dec
pop
push
xchg
add
aad
into
rolb
or
inc
push
mov
push
repnz
mov
sbb
in
lret
cltd
sub
adc
xor
push
inc
pop
push
sbb
inc
inc
lahf
push
mov
pop
add
scas
dec
jo
out
fwait
popa
les
fbstp
jno
je
fidivrs
pop
push
jbe
xor
jge
adcl
fs
mov
xchg
rcrb
pop
out
cmpsb
mov
shlb
dec
testl
lcall
add
cwtl
out
imul
mov
pop
add
leave
outsb
sub
push
dec
inc
sbb
ds
addb
and
and
add
pop
cs
hlt
add
and
push
adc
mov
hlt
stos
sti
das
mov
add
mov
ss
imul
cmp
cmpsb
rol
pop
pop
std
sub
sbb
mov
jb
and
lcall
sub
test
cs
clc
iret
subb
les
jb
pop
jbe
scas
pop
xchg
pop
mov
dec
lahf
or
pop
pop
add
hlt
jns
shrb
jecxz
gs
push
call
jne
nop
fnsave
pop
push
mov
adc
mov
mov
enter
and
mov
ret
call
adc
int3
loop
stc
leave
insl
loopne
jo
hlt
lods
cltd
or
xor
xchg
or
clc
adc
dec
es
pop
lret
push
pop
or
faddl
imul
inc
push
jl
jo
aaa
lret
pop
and
or
or
popa
rclb
push
sbb
xor
cli
mov
adc
sbb
cmc
cmpsb
add
pop
lock
mov
xchg
mov
pop
inc
lock
ljmp
jp
pcmpeqw
sahf
ds
pop
pop
push
xchg
jo
sti
xchg
aaa
leave
fwait
push
xchg
cs
mov
loope
sahf
mov
stos
or
inc
aaa
push
add
ds
xor
add
dec
push
test
cmp
jecxz
fnstenv
adc
sub
mov
and
scas
fcomps
mov
mov
leave
push
pop
shl
pop
mov
lret
adc
mov
ja
imul
pop
int3
jl
popf
inc
out
shlb
popf
aad
push
pop
ds
test
add
test
sarb
mov
aaa
out
scas
add
jge
pop
nop
rcl
fidivrs
or
xor
jmp
or
fisubl
jp
js
ja
adc
push
jo
sti
jne
xor
or
cmp
pop
mov
xchg
sbb
mov
jns
out
imul
jle
ret
sahf
aaa
and
add
mov
adc
gs
mov
dec
outsb
mov
push
push
pop
movsl
lea
mov
cmp
fldl
pop
out
fstpt
lds
fwait
sbb
inc
dec
bound
dec
aad
sbb
jg
lods
inc
call
enter
into
cmovl
imul
inc
in
icebp
xor
adcb
aad
fidivs
jnp
and
mov
aas
xor
mov
stc
popf
fstps
and
pop
cmp
popl
dec
stos
dec
or
jmp
fcompl
in
jge
aaa
in
inc
add
std
in
dec
push
sub
lods
sub
sbb
jecxz
mov
add
xor
cmp
cmpsl
fcomps
xchg
fsubrl
ljmp
pop
and
mov
fs
mov
arpl
xor
lea
addr16
adc
dec
call
fildll
in
insl
out
fcomps
pop
orl
fdivs
add
jns
in
xchg
mov
pushl
popl
in
out
lret
not
add
jmp
sub
call
les
hlt
add
pop
pop
inc
stos
pop
pop
fisubrl
pop
cmp
lea
pop
push
jno
mov
int
repnz
sub
jne
add
mov
ljmp
sub
popf
in
xchg
data16
lret
insl
rcrl
lcall
push
xchg
popa
cmp
ficoms
arpl
push
inc
and
rorl
rcrl
add
sbb
imul
cwtl
out
shrl
xchg
mov
mov
mov
jg
mov
xor
xlat
jge
call
fisttpl
and
mov
lods
imul
scas
mov
mov
jmp
push
in
outsb
hlt
jmp
cld
cld
in
dec
push
nop
ljmp
push
sub
add
popf
push
aaa
and
jo
sub
sbb
lds
jge
js
push
mov
xor
pop
sahf
pop
loope
test
into
mov
mov
inc
ss
das
frstor
popf
inc
mov
inc
mov
xchg
popa
dec
lock
inc
icebp
push
repz
mov
xchg
push
push
xchg
call
leave
add
xchg
lahf
fistpl
jnp
adc
enter
xchg
adc
stc
pop
jno
addl
lret
loop
jg
lret
mov
insb
idivl
pop
xchg
adc
ja
lret
and
dec
dec
or
cmp
jmp
pop
bound
in
add
and
insb
lret
inc
out
mov
in
push
stos
dec
and
outsb
stos
adc
arpl
add
xchg
cmp
sbb
les
mov
dec
dec
pmuludq
ret
cmp
hlt
mov
cli
pop
lds
sub
jne
scas
lret
clc
mov
mov
insl
sub
repnz
lods
outsl
das
adc
js
lcall
out
decb
cmc
ljmp
mov
mov
xchg
mov
lds
xchg
je
aam
sub
roll
mov
mov
adc
lret
iret
and
jp
ljmp
es
psubq
xorb
test
pop
mov
mov
pusha
jl
xor
cmovl
shll
mov
aas
push
add
or
popl
sub
mov
mov
js
sub
aas
dec
roll
je
ret
mov
push
mov
and
sub
mov
inc
addr16
enter
out
inc
push
stos
lods
mov
push
dec
xchg
dec
icebp
dec
lcall
or
out
push
faddl
jp
loopne
lret
lahf
add
pop
inc
add
in
nop
mov
sub
push
mov
pop
outsb
pop
pop
inc
add
ja
popa
push
call
scas
in
push
or
xchg
shr
loope
insb
mov
mov
pop
int3
jnp
es
and
insl
mov
cmp
mov
sbb
jge
pusha
mov
mov
mov
xchg
jmp
repnz
pop
xchg
fwait
xor
dec
roll
mov
sbb
mov
imul
call
and
mov
inc
mov
cwtl
inc
mov
aam
vorpd
je
adc
movsb
adc
stc
sub
push
jne
pop
pusha
adc
and
mov
roll
dec
aad
xchg
jno
dec
stos
clc
jl
fwait
dec
xor
out
pop
xor
or
mov
sub
mov
inc
add
iret
xchg
cld
nop
inc
cltd
sub
adc
sub
imul
nop
mov
sub
sub
inc
out
jae
push
sub
adc
out
jl
add
in
rcll
subb
xchg
sbb
cld
mov
pop
push
jae
or
inc
and
into
ja
lods
mov
aas
or
push
mov
dec
xor
or
iret
pop
push
xor
cltd
adc
insl
add
stos
ljmp
mov
clc
cmp
mov
mov
leave
adc
sbb
leave
mov
ljmp
sbb
fdivrl
cld
pop
cmp
ret
cltd
sbb
xorb
sub
xor
sub
dec
adc
jne
sbb
gs
out
or
ja
cs
mov
mov
jo
mov
jl
ja
sahf
sbb
andb
or
xchg
or
rcl
roll
pop
add
push
fsubl
mov
outsb
xchg
dec
jbe
andb
jl
push
insb
push
add
ss
inc
dec
and
pop
or
jne
inc
push
mov
and
fdivrs
cmp
jb
xchg
mov
jmp
addl
or
dec
cmpsl
cmp
inc
hlt
or
dec
fsub
adc
mov
mov
popf
cltd
and
add
out
jno
dec
fidivrl
pop
push
adc
pop
daa
mov
fbstp
lods
mov
imul
stos
aas
clc
add
lcall
add
jp
popf
rcrl
test
sbb
cmpsb
or
or
cmp
sub
push
jne
sub
jl
aam
inc
dec
or
pop
inc
sbb
fdivs
and
fdiv
adc
shrb
stos
in
mov
loope
test
pop
push
push
les
push
inc
mov
cmp
adc
mov
adc
setnp
or
mov
pop
pop
adcb
cmp
jge
ja
inc
mov
insl
and
hlt
sub
inc
and
dec
aad
mov
clc
or
push
pop
or
out
roll
pop
ja
inc
rorb
and
inc
pop
lods
or
pop
aad
data16
dec
stos
clc
or
adc
lds
cmc
inc
mov
pop
push
sub
xor
insl
faddl
lcall
stos
jge
les
test
sub
std
test
icebp
int
inc
clc
dec
bound
fcmovb
or
lea
cwtl
cld
push
push
stos
les
mov
inc
hlt
and
mov
in
mov
cltd
mov
cmpsl
dec
lds
test
clc
sub
xchg
mov
mov
add
inc
mov
outsl
ss
nop
and
fisttpl
lods
es
adc
ja
inc
pop
fwait
jle
mov
and
add
dec
sbb
push
popf
sahf
ja
inc
push
jle
aad
dec
and
test
or
in
lcall
add
icebp
xchg
pop
sbb
mov
mov
cli
imul
mov
mov
ljmp
sbb
insl
add
adc
xchg
dec
js
lods
pop
clc
out
push
stc
orb
pop
push
cwtl
cmp
dec
mov
adc
xor
cmpb
pop
xchg
adc
filds
mov
add
inc
int3
inc
push
out
pop
ja
push
pop
sub
adcl
cmc
xchg
stc
fbld
or
fxch
jne
adc
push
xor
iret
mov
adc
or
in
lods
adc
and
push
adc
dec
cmp
fcoml
sbb
les
push
xchg
cltd
popa
push
xlat
loopne
sbb
dec
fidivrl
pop
or
cmpsb
mov
xchg
dec
xchg
minps
out
orb
sbb
or
stos
adc
xchg
dec
clc
pop
mov
loopne
ds
xchg
jp
nop
les
and
dec
adc
add
xor
xor
mov
dec
aaa
fwait
pop
pop
add
pop
dec
push
fadds
dec
aad
jl
fimull
clc
cmp
adc
mov
out
dec
mov
sub
cmpsb
mov
test
cmp
or
mov
and
or
fsubl
out
es
les
stos
loopne
push
pop
adc
gs
pop
js
and
push
addb
les
lods
mov
push
inc
stos
aas
sbb
mov
or
mov
out
and
mov
fcmovb
iret
hlt
cmp
fwait
and
pop
dec
push
sbb
mov
lods
or
stos
inc
mov
iret
and
push
insl
lods
or
dec
aad
fdivs
dec
pop
clc
or
adc
mov
add
minps
out
inc
mov
pusha
ret
xchg
sbb
or
stos
push
mov
das
clc
pop
lods
cmp
sub
sbbb
mov
and
inc
pop
lods
or
pop
aad
fs
dec
stos
clc
or
adc
dec
roll
addl
data16
aas
jae
out
orb
data16
nop
cmp
enter
out
xor
clc
adc
lcall
dec
iret
push
mov
ss
fsubl
adc
les
and
push
adc
cmp
sbb
pop
ja
inc
jg
outsb
push
mov
and
inc
pop
lods
or
pop
aad
sub
adc
mov
jno
dec
sub
inc
or
cmpsb
mov
xchg
dec
xchg
minps
out
orb
sbb
or
stos
adc
cltd
or
pop
mov
rclb
leave
stos
arpl
or
jae
and
pop
mov
mov
adc
xchg
ret
inc
adc
decb
or
adc
or
stos
aas
or
mov
and
outsb
pop
lods
sbb
pop
aad
adc
dec
stos
clc
sbb
adc
mov
cmovge
out
jp
ja
pop
or
sbb
sbb
lcall
inc
clc
dec
mov
cwtl
fdivl
adc
les
and
inc
adc
or
or
xor
add
pop
push
pop
mov
lea
clc
pop
mov
je
rclb
push
add
and
out
scas
xchg
mov
and
xor
and
fstpl
lods
and
inc
stos
aas
clc
aad
cmp
lret
sbb
insl
aad
in
jno
dec
mov
adc
fiaddl
dec
cmovge
out
push
mov
xor
test
push
xchg
mov
scas
inc
testb
out
mov
adc
rcrb
inc
sbb
data16
cmpl
stc
and
mov
loopne
xor
or
lds
xchg
or
fidivrl
or
mov
sub
add
pop
out
jae
imul
in
push
loop
sub
inc
das
push
inc
out
rolb
pop
cmpsb
add
mov
mov
aas
jb
dec
pop
sbb
dec
pop
pop
mov
mov
scas
push
mov
and
xchg
add
xor
jbe
or
cmp
jge
scas
mov
insb
ret
fwait
or
lock
ret
inc
adc
jns
arpl
jecxz
das
aad
jl
ret
push
adc
push
add
lahf
cmc
cmp
and
jne
adc
addr16
repz
sub
inc
mov
out
movsb
stos
cwtl
mov
cmpl
sti
add
adc
pop
push
sub
lahf
push
es
lea
das
negl
dec
mov
pop
jnp
int3
add
mov
push
addb
pop
adc
inc
jo
xrelease
mov
lock
jge
mov
pop
xchg
mov
xchg
pop
ljmp
adc
lret
mov
mov
int3
aas
dec
loopne
call
iret
mov
dec
sub
adc
or
ja
sub
rcrl
shr
mov
adc
aas
movsb
inc
test
xchg
jnp
cmp
pop
test
sub
mov
add
or
cmc
cmp
xlat
je
aaa
mov
xchg
rcrl
das
je
fisubrs
push
mov
push
or
cmpsb
stc
inc
inc
aam
jnp
adc
push
inc
lods
ret
and
or
out
lret
sub
js
dec
cld
imul
mov
and
ds
test
jmp
adc
in
add
mov
and
or
dec
sarl
sbb
test
insb
ljmp
add
pop
xchg
ss
mov
sbb
icebp
or
sbb
add
add
dec
and
and
stc
mov
push
movsb
sbb
shlb
or
sbb
inc
push
add
or
adc
subl
into
popf
cs
add
arpl
adc
add
jb
inc
imul
daa
call
sbb
mov
cmpsl
outsl
pop
push
sub
jo
movsl
add
adc
jmp
testl
xlat
mov
into
add
inc
xor
add
xor
les
mov
xchg
add
cmc
xchg
add
fmull
sub
fiadds
sub
popf
insb
in
stc
aad
inc
inc
ret
push
mov
dec
sub
fs
adc
mov
fcoms
sbb
enter
pop
mov
in
scas
pop
jnp
mov
mov
ret
les
pop
insl
mov
sbb
jbe
adc
cld
push
sbb
lods
sub
loopne
outsl
cld
repnz
test
sub
or
out
int
stos
das
cmp
out
fs
repz
or
movsb
adc
sti
xchg
icebp
sbb
out
sti
addl
sbb
nop
clc
xchg
fst
out
pop
outsb
mov
add
imul
dec
jmp
inc
je
add
xor
mov
push
sub
push
mul
mov
nop
cmpsb
outsl
xor
xchg
aas
pop
aad
jge
pop
mov
mov
out
mov
fdivs
movsb
es
inc
imul
mov
mov
cmp
push
movsb
subl
or
in
loop
je
loop
sub
xchg
fucompp
pop
push
adc
sub
sub
shll
sbb
gs
sub
rorl
icebp
cmp
addr16
imul
pop
scas
push
mov
xor
out
aam
lods
inc
sbb
cmp
movsl
movsl
sbb
cltd
xchg
cmpsl
cs
push
cltd
mov
jecxz
mov
clc
jecxz
mov
xor
divb
int
add
mov
xchg
dec
test
outsb
inc
daa
lret
aad
jecxz
inc
cli
clc
push
or
cmp
or
leave
cmc
mov
iret
into
clc
mov
cmc
mov
loopne
lret
imul
bound
push
mov
dec
imul
add
pop
jg
mov
jne
aaa
mov
call
push
xlat
bound
ja
inc
mov
les
xchg
pop
dec
or
sbb
sbb
mov
scas
mov
xor
lahf
or
mov
mov
sbb
aad
mov
mov
push
mov
mov
cmp
mov
repnz
mov
or
fnstsw
mov
push
adc
fisttpll
movsb
insl
sub
inc
lcall
int
repz
inc
rorl
test
or
or
add
lahf
mov
or
into
cmc
repz
call
adc
dec
cmp
nop
mov
xchg
or
sarb
loopne
movsl
ja
fmull
mov
jmp
cmc
adc
push
or
sbb
mov
push
push
pop
mov
mov
adc
std
imul
cmp
rorb
rdtscp
shlb
xchg
imul
int3
mov
mov
pop
mov
gs
loopne
and
inc
jp
hlt
mov
fs
les
and
outsb
jl
icebp
sbb
push
mov
adc
out
jp
int3
lcall
mov
inc
test
cmp
lods
push
ja
inc
mov
jp
mov
ds
inc
mov
cmp
leave
mov
mov
hlt
push
add
arpl
stos
adc
push
xchg
dec
push
ud1
out
add
jbe
and
stos
shrl
jno
mov
and
xor
sbb
enter
xlat
adc
xor
push
mov
loope
cmpsb
ljmp
and
mov
push
mov
and
into
notb
mov
and
dec
and
test
fcmovbe
mov
es
xor
and
arpl
enter
xor
stos
dec
inc
clc
and
adc
push
xchg
andb
xchg
inc
dec
and
sbb
lods
fidivs
inc
cmpb
aad
mov
push
cmp
and
mov
test
mov
and
imul
sub
dec
cwtl
inc
xchg
fiaddl
jecxz
push
flds
out
xor
mov
fsts
mov
xor
push
mov
xchg
lret
hlt
scas
pop
cmp
mov
sbb
fdivl
xchg
xchg
and
mov
sub
jl
and
mov
xor
cmpl
dec
dec
xor
sub
shr
sahf
or
push
adc
adcl
cld
jle
push
mov
or
adc
mov
aas
and
jb
out
insb
fisubs
aam
sbb
or
or
jno
dec
mov
pop
arpl
add
or
adc
and
aad
lods
jl
out
inc
fidivrs
rcl
mov
pop
add
int
sub
lds
pop
fldenv
push
sahf
lds
dec
aas
rcl
aam
adc
mov
sub
xor
cmpb
jae
das
aad
xchg
pop
xor
mov
je
imul
mov
jne
movsl
pop
addr16
int3
inc
or
ret
sbb
push
dec
cmpsl
jo
clc
sbb
or
rorb
sarb
int3
imul
daa
push
dec
mov
shrb
outsb
pop
sub
or
xor
imul
in
repz
jb
fdiv
imulb
add
fadds
mov
xor
xchg
sub
gs
test
and
in
outsl
mov
ret
insb
mov
inc
jno
cs
add
outsl
cmp
stos
mov
pop
push
jo
push
jle
aas
push
xor
into
mulb
dec
lods
adc
sbb
xchg
sbb
and
fimuls
pop
imul
or
pop
fwait
insl
push
icebp
test
lds
lret
add
dec
shr
mov
fsubr
push
les
je
mov
adc
imul
xor
push
out
test
testb
mov
mov
jbe
div
or
mov
test
push
push
jnp
out
pop
dec
aas
xor
scas
push
rorl
xor
es
addr16
xchg
adc
and
mov
mov
lds
cmp
sbb
pandn
lret
bound
mov
data16
cli
adc
mov
cmpsl
adc
sub
xlat
dec
aas
repnz
push
dec
outsl
cmpsl
xchg
push
icebp
mov
jb
inc
aad
loope
aad
push
les
sub
or
mov
popa
insl
inc
pop
lds
push
je
push
nop
or
add
pop
inc
and
dec
lods
or
ds
sub
push
mov
movsb
insb
mov
push
repz
sarb
lahf
movsb
ret
popa
fldt
int3
dec
sbb
fistpll
xor
add
xchg
and
int
lret
sub
cmp
clc
int3
or
movsb
push
leave
mov
mov
fsubrl
mov
add
loop
stos
adc
fbstp
jb
sbb
sbb
sbb
fistpll
imul
ljmp
mov
mov
add
hlt
cwtl
das
iret
mov
jp
push
mov
mov
out
repnz
sti
mov
std
mov
jbe
hlt
xlat
push
int3
push
lods
xor
push
outsb
jnp
push
ljmp
aam
adc
jle
xor
fisttpl
lock
dec
push
addr16
jge
inc
add
lret
xchg
push
pop
or
sbb
mov
jno
test
into
inc
sarb
xor
pop
push
jb
js
or
or
push
outsl
fldt
out
add
icebp
cwtl
mov
leave
push
pop
lods
mov
fcomi
mov
jno
mov
outsl
addr16
push
inc
push
outsb
pop
out
mov
imul
and
mov
mov
mov
into
xor
imulb
and
xor
cmpsb
roll
fs
leave
push
xor
and
arpl
add
xor
jo
jl
shlb
cmpsl
icebp
out
xor
sbb
mov
mov
lock
xor
inc
push
aam
popa
and
jns
push
mov
add
pop
inc
push
adc
cltd
adc
pushf
daa
jg
cmp
loope
push
xor
aam
adc
push
push
lods
and
ss
dec
push
xlat
mov
inc
mov
scas
test
jae
and
test
fnsave
pop
jle
jg
mov
les
scas
xor
lods
xchg
pop
lods
ljmp
sbb
aaa
xchg
dec
add
cmp
imul
mov
mov
push
sbb
nop
pop
scas
jge
pop
movsb
decl
es
or
rclb
mov
inc
push
loope
fldenv
and
aaa
push
adc
pop
jo
les
xchg
xchg
int
leave
cwtl
and
sub
xor
add
cmp
push
and
fwait
xorb
jo
cmp
mov
inc
gs
push
jno
jl
notl
jecxz
mov
push
dec
cmpsb
xor
mov
aam
xchg
sbb
jbe
jns
jb
out
insb
je
xlat
ficoml
cs
leave
mov
rcll
data16
or
push
sub
pop
aaa
push
xchg
push
ret
dec
or
pop
xor
repnz
push
dec
jb
pop
and
popa
pop
dec
or
mov
outsl
and
jge
les
xlat
fldenv
pop
inc
mov
scas
inc
mov
cmp
jne
aas
js
lret
adc
or
dec
les
and
inc
sbb
jb
ss
lahf
outsl
out
dec
mov
movsb
adc
lret
and
cli
dec
aad
xor
inc
into
add
xchg
xchg
mov
mov
int
inc
push
mov
loop
xchg
or
test
adc
push
scas
pop
sub
inc
mov
sub
dec
lods
add
scas
incl
data16
in
mov
xchg
psubd
scas
movsb
push
xor
pop
xchg
inc
jmp
mov
jnp
popf
in
loop
ja
sbb
xchg
cmp
outsb
xchg
cmp
insl
popl
add
dec
adc
jg
out
incb
jae
movsb
or
jnp
movsb
fcompl
popf
pop
mov
push
adc
push
ds
sbb
or
je
mov
mov
stos
sbb
shlb
xchg
or
inc
or
rorb
mov
mov
jl
sub
xchg
inc
and
test
or
aam
addr16
repnz
jne
pop
xchg
aam
mov
sbb
cmpsl
cmc
test
adc
ret
fbld
jg
gs
dec
cltd
imul
cmpsb
and
ljmp
loopne
adc
arpl
pop
adcl
data16
ja
int
inc
or
jbe
into
dec
xchg
movsb
nop
jno
jo
add
imul
fmul
fsubrs
lock
mov
xchg
sbb
inc
icebp
add
mov
pop
nop
pop
lods
mov
aad
ds
mov
adc
icebp
jge
xchg
repz
adc
xchg
and
mov
inc
and
fstp
lods
dec
cmp
xchg
inc
jae
test
and
push
sub
and
xor
lret
pop
mov
sub
mov
push
cmpsb
sub
mov
aad
jae
aas
xchg
adc
push
nop
mov
jbe
int3
inc
mov
inc
out
in
jl
adc
jae
inc
shlb
stc
add
xchg
push
sbb
int3
xor
jle
popa
dec
outsl
push
sub
gs
lds
adc
pop
pop
jnp
xchg
jne
pushf
mov
repz
add
mov
fbstp
aas
notl
xchg
std
pushf
daa
dec
rcll
lret
mov
mov
arpl
xor
dec
loope
insl
xor
jge
leave
mov
pop
inc
jmp
add
jge
xor
adc
push
sbb
or
push
testb
dec
in
jae
test
sbb
pop
mov
inc
addr16
or
lods
pop
mov
cli
in
ret
mov
jle
dec
inc
ss
in
ja
lods
clc
push
in
mov
pop
push
dec
or
rcrl
leave
jne
push
pop
and
add
out
dec
adc
repnz
pop
shlb
js
adc
mov
shlb
push
add
lcall
jb
gs
or
sbb
jbe
in
mov
mov
jmp
cmc
and
dec
add
lret
fcoml
mov
xchg
cs
stc
addr16
insl
and
ss
ret
inc
sub
loopne
xchg
cmpsb
out
insl
test
mov
push
dec
enter
xchg
cmpsl
cmpl
mov
push
test
pop
pop
test
int3
fwait
xchg
push
adc
arpl
shll
hlt
arpl
cs
dec
push
lea
xor
cvtpi2ps
push
xor
mov
mov
pushf
pop
xchg
mov
dec
xchg
inc
jg
ljmp
cltd
fs
pop
dec
add
jno
and
push
pop
rcll
dec
or
push
jg
pop
cli
ds
sahf
lock
loopne
fisttpll
rdmsr
jns
push
arpl
jp
lods
pop
inc
jno
lods
ss
mov
mov
inc
arpl
mov
add
inc
push
push
jae
les
movsb
dec
es
repz
mov
or
roll
or
mov
and
mov
pop
mov
fildll
mov
arpl
sub
jno
in
inc
mov
push
and
jns
cmpsl
jp
and
push
cmp
jo
test
ret
mov
cmp
lcall
cmp
add
sbb
jge
stos
rorl
fstps
out
scas
pop
sbb
mov
jmp
add
add
std
inc
ss
sub
inc
ss
push
out
pushf
repz
sbb
dec
inc
mov
bnd
add
enter
in
sbb
inc
test
mov
mov
jbe
sub
pop
cmp
inc
jg
lret
rcrb
int
jp
test
imul
xor
xchg
in
loop
dec
xchg
push
dec
pop
add
xor
pop
xor
push
xor
xchg
adc
inc
mov
mov
sbb
orl
int3
push
addr16
fnstcw
fs
xchg
mov
lcall
ljmp
popa
test
push
jns
mov
jne
xlat
jns
out
pop
cltd
push
lds
pop
mov
dec
xor
ja
fs
push
mov
vmovsd
push
xchg
lahf
dec
sub
jne
push
mov
fisttpll
dec
rcr
sbb
cmpsl
add
out
mov
insb
fstps
ss
les
pop
mov
dec
inc
xor
jmp
or
mov
mov
inc
popf
fcmovb
adc
adc
inc
gs
adc
pop
test
in
push
outsb
xor
sbb
inc
cwtl
add
or
inc
inc
cmp
xor
pop
aad
jno
outsb
lret
jbe
fcomi
and
pop
and
pop
mov
push
pop
insb
jl
aas
aad
xchg
xor
lcall
mov
xor
frndint
orb
push
or
or
int
xor
adc
and
leave
pushf
int
or
std
mov
mov
pop
int3
std
jmp
xor
push
adc
cmp
inc
jl
imul
adcb
mov
nop
int3
dec
cld
test
push
mov
jge
ret
jo
lret
cmc
push
icebp
cmp
mov
xchg
xlat
sbb
mov
in
add
cmpsb
mov
dec
test
xchg
in
testl
addl
push
jge
jmp
jg
je
insl
push
and
pop
push
aas
into
test
xchg
sub
push
and
xor
pop
jno
add
xchg
scas
mov
or
sbb
mov
cld
inc
adc
sbb
mov
inc
pop
inc
inc
push
movsl
idivb
jae
or
add
dec
shrb
adc
lock
sbb
xchg
dec
aad
cmp
mov
cmp
les
inc
int3
cmp
test
sub
xchg
aaa
xlat
mov
adc
pushf
and
cmpsb
xor
xchg
outsl
sbb
pop
add
je
xor
and
out
cmp
insb
adc
cmpsb
mov
sar
and
out
sbb
orb
dec
push
test
adc
sub
mov
xor
jle
adc
jmp
je
push
xchg
xchg
mov
cmc
sub
dec
jge
les
in
dec
addb
pop
cs
push
mov
jbe
jbe,pn
clc
test
mov
inc
cmp
imul
mov
fmulp
pop
je
mov
inc
adc
xor
dec
mov
shrl
sub
jbe
sub
xor
sub
out
ret
lock
not
aaa
sub
outsl
pop
inc
iret
jae
push
pop
sbb
ficoms
mov
mov
sbb
and
das
mov
pop
js
cmp
data16
iret
push
cmp
add
in
rorb
mov
test
pop
es
adc
xor
add
xor
sub
jnp
negb
subb
fcoms
jne
push
rcrb
xor
xchg
std
adc
insb
sbb
push
push
lret
sbb
call
inc
repnz
dec
scas
mov
jp
das
popa
cmp
mov
push
cmpsl
in
data16
push
mov
sbbb
mov
stos
and
rcll
cmp
xor
pop
or
xchg
sbb
mov
dec
sub
pop
inc
xor
aas
cmp
rclb
ja
outsb
in
xor
in
fmull
mov
mov
inc
popa
mov
mov
into
in
add
cmc
push
mov
mov
pushf
pop
fldenv
mov
push
pop
aaa
sbb
dec
das
test
mov
mov
test
inc
xor
or
fidivl
repnz
pop
fs
push
les
cmp
or
dec
and
inc
popl
fs
and
inc
imul
pop
stos
bound
negb
jle
fmulp
mov
sub
lock
mov
push
sbb
popa
ss
negb
jns
sar
je
arpl
and
add
addr16
push
cmpsl
in
lock
dec
ret
adc
inc
inc
stc
push
out
add
jb
xchg
jno
fwait
lock
leave
imul
push
push
sbb
sbb
inc
ja
cmp
aam
adc
pop
inc
in
movsl
rorl
fcomi
mov
mov
ja
fcompl
add
mov
lret
xchg
sbb
sbb
ret
jae
xor
and
jle
pop
test
lret
enter
and
outsl
xor
jl
pop
out
push
lods
adc
adc
sbb
cld
xorl
fidivrl
add
icebp
or
adc
cld
xchg
push
subl
sbbb
lret
adc
mov
adc
push
fbstp
pop
icebp
rclb
push
push
in
and
test
dec
add
mov
lock
mov
push
xor
sahf
lret
mov
jo
dec
fs
mov
xor
fmulp
test
ds
mov
xor
push
lret
mov
jo
jle
in
mov
xor
pop
rolb
mov
lock
mov
adc
inc
out
adc
fs
push
xor
fidivs
lock
mov
out
push
xor
push
mov
out
push
jo
jle
in
mov
xor
pop
mov
xor
mov
mov
xor
sahf
lods
inc
stc
mov
jo
lods
fs
mov
xor
fisubrs
add
lods
movsb
stc
mov
xor
push
lods
stc
mov
jo
jle
in
mov
xor
pop
lods
add
mov
lock
dec
js
cmpsb
inc
or
sahf
lcall
lcall
ficomps
lock
lcall
push
lcall
jle
in
mov
xor
pop
xchg
add
mov
lock
mov
jne
pusha
sahf
lcall
lcall
ficomps
lock
lcall
push
lcall
jle
in
mov
xor
pop
xchg
add
mov
lock
mov
jne
pusha
sahf
cmpsb
inc
repz
jo
cmpsb
fs
xor
fisubs
lock
cmpsb
movsb
repz
xor
push
cmpsb
repz
jo
jle
in
mov
xor
pop
movsl
add
mov
lock
pop
xor
sahf
test
fadd
scas
cmpsl
sbb
xchg
push
push
xchg
hlt
push
dec
insl
or
data16
mov
xor
enter
inc
repz
xchg
sbb
js
and
and
out
jmp
push
jecxz
xor
insl
repz
push
xor
frstor
std
add
popf
repz
cmpsb
mov
scas
push
sbb
repz
add
insb
sbb
lahf
dec
dec
lahf
mov
lret
xchg
aad
add
lret
xchg
push
and
pop
rclb
cmp
xor
ficoms
mov
jne
push
and
or
adcb
loop
inc
loope
inc
outsb
xor
lods
jp
cwtl
inc
sub
stc
mov
sbb
or
add
adc
jg
fmuls
je
inc
add
fdivr
jle
mov
dec
sbb
aaa
cmp
inc
sub
repz
scas
pushf
repz
pop
sbb
pusha
cmpsb
repz
add
inc
adc
xchg
xor
mov
out
lret
mov
repz
inc
mov
xor
xor
hlt
negl
rorb
adc
scas
push
in
addr16
aad
inc
outsl
gs
mov
fwait
inc
in
out
mov
xor
sub
test
xchg
nop
and
cmp
push
jb
movsl
sahf
and
xchg
push
aaa
add
pop
xor
jno
cld
xchg
ja
dec
add
inc
inc
fwait
arpl
inc
leave
push
rcrb
and
xchg
loop
rcrb
scas
and
lcall
and
mov
pop
jb
dec
or
jb
les
repz
pop
add
cs
dec
jmp
adc
dec
scas
xchg
in
ljmp
sbb
and
mov
cmp
dec
in
pop
mov
sub
sub
adc
cmpsl
push
push
dec
inc
loope
ja
outsb
inc
cmp
push
push
push
jno
loop
push
push
outsl
add
sbb
mov
pop
loope
cmp
pop
divb
inc
push
xor
mov
inc
xchg
jb
jae
loop
jbe
and
ja
imul
lret
lret
inc
fwait
outsl
pop
cmp
cmpsb
xchg
aas
mov
fsts
pop
shll
mov
repz
xchg
lret
mov
xor
dec
lock
out
pop
jecxz
xor
jae
push
dec
inc
cwtl
or
pusha
mov
or
shlb
add
into
sbb
sahf
andps
mov
out
fld
ret
mov
in
push
call
sub
call
ja
xchg
xchg
mov
xor
orb
mov
pop
adc
jg
clc
stos
sti
ja
aad
dec
jnp
fdivrs
add
push
es
dec
xchg
cmp
mov
aaa
mov
out
leave
cmpsb
fmull
cmpsb
gs
ret
aam
aad
inc
mov
mov
sbb
es
iret
sub
repz
push
and
cmpsb
test
test
incl
cmp
push
pop
in
mov
inc
add
xchg
lret
pop
xor
out
jle
sbb
sbbb
out
movsb
jb
inc
mov
xor
jle
mov
push
aas
out
cmp
data16
or
push
jo
sub
jecxz
xor
into
scas
test
movsb
ficomps
push
stc
mov
ds
das
mov
push
add
push
cmp
sbb
ja
in
aas
dec
fmul
jl
scas
mov
es
ficoml
cmp
incl
mov
popl
cmp
push
adc
cmp
rcrl
jb
lahf
aad
movsb
mov
or
mov
fldt
leave
int3
push
xchg
mov
iret
inc
test
and
movsl
fldenv
addr16
jne
cmc
xchg
jb
leave
sti
dec
add
and
mov
cmp
stos
in
xchg
push
lret
int3
sub
sbbl
popa
jg
adc
repz
into
popf
lock
in
mov
add
dec
push
xchg
push
cmp
adc
sarb
je
push
divb
xchg
jecxz
shlb
int3
dec
hlt
mov
ret
fadds
out
out
xor
jae
mov
loope
inc
add
inc
cmpsb
aad
mov
and
js
ficoms
sub
ss
sbb
lods
jnp
push
inc
add
jns
jbe
test
fsubl
inc
sbb
mov
iret
sbb
mov
mov
addr16
xchg
push
roll
jg
and
cmp
sub
inc
lcall
test
inc
or
gs
stos
call
adc
arpl
outsl
insl
sub
pop
push
sbb
popf
pusha
cmp
shll
add
fisttps
xor
imul
jbe
loope
sbb
test
jl
cwtl
mov
add
dec
xor
xchg
mov
mov
jmp
push
lods
add
rcrb
pop
xchg
lret
inc
add
adc
ret
jae
jge
and
adc
pusha
xchg
xlat
push
push
pushf
clc
fdivrl
pushf
pushf
and
popa
dec
imul
dec
dec
shl
mov
popf
xor
or
lea
xor
rol
adc
popf
mov
call
lock
into
dec
sbb
cmp
cmpsb
mov
data16
push
inc
xchg
fsubs
cmpsb
shl
rclb
add
xchg
popf
pop
mov
and
psadbw
paddd
leave
pop
jmp
sub
and
ss
and
mov
and
mov
aas
fldenv
push
popf
mov
add
xchg
test
repnz
daa
ret
jnp
mov
fbstp
add
cld
ret
add
mov
mov
xchg
aam
js
cmpsb
je
dec
fdivr
dec
mov
pop
xchg
push
ss
ret
sahf
sub
mov
sbbb
pusha
pop
mov
out
or
lcall
arpl
sbb
push
es
xor
ret
mov
or
inc
cmp
mov
test
xor
pushl
cld
add
add
fwait
aaa
sbb
add
adc
push
and
mulb
ds
lea
aas
addb
mov
xor
enter
lcall
mov
repnz
xor
or
sub
dec
sbb
fs
jl,pt
in
cmp
mov
dec
sub
pop
stc
jecxz
dec
add
lret
bound
loopne
jg
repnz
dec
fwait
leave
mov
xchg
out
out
or
stos
mov
test
lds
push
adc
mov
out
fidivs
mov
incl
popf
push
inc
test
out
dec
mov
push
stos
pop
sbb
fistpll
add
out
add
mov
push
sub
negb
in
jno
sahf
mov
fiaddl
cmp
lds
mov
push
movl
test
into
repz
pushf
int
mov
sti
cmp
lcall
xor
imul
push
call
xchg
lahf
shll
aad
mov
aaa
idivb
mov
loop
xor
xor
mov
sub
push
or
or
lahf
ja
mov
pop
push
pop
or
iret
in
ret
xchg
dec
aaa
popa
pop
mov
lods
mov
sub
mov
lea
fwait
imul
insl
mov
adc
push
gs
imull
jecxz
xor
bound
aam
dec
or
jge
jle
xchg
xor
jnp
cmp
fwait
or
mov
int3
rolb
ja
push
ds
ljmp
lods
push
addb
inc
lret
aad
xor
jno
pop
add
rorl
cli
sti
adc
xchg
cmp
xchg
inc
add
dec
jbe
xor
stos
lods
adc
lds
test
or
sub
mov
push
lea
cmp
or
test
dec
inc
std
lahf
insb
sub
jle
fwait
pusha
push
loopne
inc
ret
add
jb
jo
call
stos
sbb
frstor
cmp
dec
pop
aas
inc
push
jo
sbb
xlat
push
divl
push
in
call
in
pop
adc
push
jp
fcoml
ret
mov
leave
add
adc
imul
es
negb
sbb
or
mov
xor
in
jno
add
ret
pop
xchg
push
inc
mov
jecxz
cmp
fwait
daa
sar
push
in
add
mov
jb
push
decl
sbb
cmpl
pop
sahf
popf
pop
in
shrl
mov
add
fsub
jle
mov
jnp
test
mov
xchg
or
jb
dec
mov
pop
test
ss
mov
xchg
shlb
mov
stc
sbb
cltd
das
mov
pop
cmp
loope
push
and
mov
fisubrl
ss
inc
test
ret
outsb
push
mov
adc
dec
jl
inc
jb
or
adc
loop
cmp
xor
mov
add
aam
das
in
and
jp
imul
in
shlb
mov
jle
jb
add
and
mov
cmc
xchg
movb
push
nop
repz
aas
add
pop
cmp
mov
call
ds
inc
lods
shll
pop
inc
lcall
and
repnz
pop
add
inc
and
mov
jp
jp
jmp
pop
add
add
mov
fwait
xchg
adc
sbb
add
insb
sub
loope
sbb
xchg
pop
lods
xor
faddl
inc
int
cmp
mov
dec
xor
testb
mov
push
psubusb
push
mov
sahf
jecxz
fwait
sarl
fwait
jb
push
xchg
xchg
inc
arpl
iret
addl
xchg
clc
or
add
arpl
fisttps
add
cltd
dec
popf
dec
loope
sbbl
jo
mov
push
in
ret
sbb
cwtl
mov
dec
xchg
mov
out
jp
test
add
lret
add
sub
xlat
adc
or
cmp
clc
int3
ret
enter
inc
ret
sub
xlat
lret
clc
xchg
jl
or
sbb
dec
adc
ret
cmpsl
xor
adc
nop
subl
cmpl
inc
push
xchg
add
int
out
test
je
sbb
sub
popl
int
xor
add
in
lret
jno
arpl
adc
ret
pop
sbb
dec
and
xor
ret
xchg
pushl
rorl
xchg
and
mov
adc
xchg
into
xchg
lds
sub
data16
push
popf
mov
adc
cmc
pop
and
adc
cmp
mov
xor
outsl
out
ret
jns
sub
sbb
mov
mov
or
push
or
daa
mov
mov
and
fs
cli
mov
mov
mov
cmpsb
insl
mov
es
push
add
and
mov
cs
outsl
aam
daa
shlb
lahf
popf
ds
in
inc
sbb
js
pop
xchg
add
stos
mov
xor
xor
dec
fnstenv
xchg
cmpsb
push
ljmp
dec
sbb
lcall
and
aad
out
adc
aas
cmp
jo
inc
mov
movsl
xchg
jp
inc
cmc
sub
leave
jne
stos
push
cmp
imul
pop
push
test
cltd
mov
popf
mov
pushf
sbb
add
sub
fisttps
lahf
push
inc
scas
mov
or
imul
insb
push
and
mov
clc
and
lods
pop
movsl
add
lahf
mov
lret
cmpsb
int
dec
scas
clc
adc
cmp
imul
rolb
in
add
fbstp
cld
roll
push
jmp
fwait
xor
and
xchg
xor
push
aad
xchg
push
sub
ljmp
adc
outsb
lods
rcrl
ret
out
dec
mov
push
aam
push
fdivp
mov
mov
xchg
mul
stos
fwait
arpl
xchg
sbb
mov
fnstenv
lahf
stc
and
cmp
aad
fsubs
fldt
adc
pushf
js
addr16
cmp
push
movsb
clc
clc
xchg
xor
cmp
xor
inc
push
xor
mov
shlb
mov
aam
aam
js
outsb
les
mov
mov
jg
mov
push
inc
push
mov
out
jnp
lahf
ljmp
jne
dec
lret
iret
aad
nop
icebp
xlat
mov
loope
iret
out
repz
arpl
mov
push
mov
ret
cwtl
pop
push
pop
xor
fstl
pusha
fstps
inc
add
adc
push
and
xchg
cmp
dec
and
inc
inc
mov
stos
daa
insb
adc
ret
nop
pop
sbb
or
pop
jb
cs
jle
dec
or
xor
iret
test
push
xchg
cmp
call
sub
push
adc
aad
rorl
movsl
fbld
or
jg
pop
xchg
sbb
mov
sbb
pop
push
lock
lods
jg
mov
add
sbb
mov
jmp
jne
inc
xlat
xchg
cmp
mov
sbb
push
mov
aas
xchg
mov
sbb
xor
rorb
out
mov
call
aam
repnz
mov
dec
push
sbb
sub
xchg
addl
popf
jp
jle
adc
mov
aas
negl
xchg
lods
dec
sbb
pop
mov
leave
xlat
cmpsb
cmpsb
mov
lock
int3
es
jnp
lret
lock
aas
add
movsl
inc
sbb
and
shrb
cmp
push
adc
pop
or
fbstp
pop
or
hlt
pop
addr16
shrl
lock
lret
fwait
xchg
notl
pop
adc
js
pop
jl
fwait
xor
xchg
push
inc
mov
stos
or
xor
mov
rolb
mov
xor
lods
lret
dec
and
test
ret
in
inc
arpl
aas
arpl
push
sub
or
rolb
pusha
pop
aas
and
js
pop
mov
fisubrl
inc
mov
push
adc
xor
sbb
sbb
push
or
add
add
push
mov
test
lods
push
xor
mov
imul
push
inc
mov
and
or
add
popf
aad
mov
xchg
inc
aas
pop
mov
scas
jns
jg
jecxz
jo
pop
or
imull
in
shrl
fimull
lahf
mov
repz
call
sbb
int
dec
rclb
cmpb
dec
add
in
pusha
sti
sub
fs
fisttpll
inc
cmp
and
movsb
dec
sbb
ds
inc
in
xor
xchg
xchg
arpl
dec
repnz
or
imul
xchg
test
stos
inc
jmp
xchg
push
jecxz
mov
adc
jle
rep
loope
ret
ja
test
das
or
inc
jno
data16
xchg
call
add
and
mov
int3
insb
mov
and
and
mov
daa
popa
mov
sbb
lods
test
mov
xchg
push
mov
jbe
pop
sbbl
xchg
insb
xor
add
jecxz
lret
fsubp
dec
enter
inc
addl
jnp
sbb
mov
or
das
jmp
mov
notb
jg
sub
ja
push
or
lret
insl
mov
popa
adc
call
fcompl
jae
push
jnp
sbb
addr16
jge
xlat
les
add
mov
in
xor
lock
mov
add
lret
mov
sub
pop
sub
cmp
inc
or
add
in
jne
sub
sbb
js
lcall
pushf
lret
push
loopne
dec
in
lahf
daa
sbb
clc
inc
and
xchg
cld
mov
outsl
movsl
inc
lea
movsl
cli
jle
lea
add
test
dec
adc
in
mov
in
lds
cwtl
add
andl
mov
dec
pop
jne
sbb
jno
mov
aas
or
movsl
or
pop
popa
cmp
out
shll
imul
enter
xchg
jne
push
cmp
clc
dec
fucomip
adc
repz
push
pusha
sub
movsl
jae
imul
bound
shlb
or
xchg
ret
negb
scas
mov
in
gs
scas
jnp
cmpsl
cld
pop
mov
jp
inc
sub
push
and
sbb
and
sbb
das
and
ret
sub
cmpsb
arpl
test
hlt
out
dec
jmp
cmp
int
outsb
push
es
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
or
add
call
add
add
add
add
add
add
dec
mov
add
add
add
inc
add
add
add
mov
add
add
add
mov
add
add
add
add
add
inc
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
add
inc
add
add
sub
add
sbb
add
or
add
clc
mov
add
add
add
mov
add
add
add
mov
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
inc
add
inc
add
inc
add
inc
add
push
add
add
add
add
inc
add
add
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
add
add
add
inc
add
add
add
les
add
daa
push
add
addl
lods
mov
add
addl
mov
addl
xchg
mov
add
addl
mov
inc
add
inc
add
add
add
xor
popa
add
add
inc
mov
add
push
add
mov
add
push
add
xor
add
xor
xor
add
add
add
xor
bound
add
add
mov
add
dec
add
mov
add
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
mov
add
inc
add
mov
add
inc
add
xor
add
xor
xor
add
add
add
xor
data16
add
or
inc
add
dec
add
inc
add
dec
add
xor
add
xor
xor
add
xor
add
add
cld
mov
add
inc
add
mov
add
inc
add
xor
add
xor
xor
add
xor
add
add
in
mov
add
push
add
mov
add
push
add
xor
add
xor
xor
add
or
add
cmp
popa
add
add
in
inc
add
dec
add
mov
add
pop
add
xor
add
xor
xor
add
add
xor
xor
add
add
mov
add
inc
add
mov
add
dec
add
xor
add
xor
xor
add
or
add
arpl
aaa
add
add
int3
mov
add
add
mov
add
push
add
xor
add
xor
xor
add
or
add
arpl
cmp
add
add
inc
add
push
push
add
xor
add
xor
xor
add
or
add
arpl
popa
add
add
cwtl
mov
add
dec
add
mov
add
push
add
xor
add
xor
xor
add
add
xor
arpl
add
add
mov
add
inc
add
inc
dec
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
in
inc
add
inc
add
dec
add
xor
add
xor
xor
add
add
xor
xor
add
add
mov
add
push
add
inc
add
inc
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
in
inc
add
inc
add
add
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
mov
add
dec
add
inc
add
add
xor
add
xor
xor
add
sbb
add
cmp
popa
add
add
in
inc
add
inc
add
inc
add
dec
add
xor
add
xor
xor
add
sbb
add
arpl
cmp
add
add
push
add
inc
add
inc
add
aaa
add
add
add
xor
add
sbb
add
arpl
popa
add
add
in
inc
add
inc
add
inc
add
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
in
inc
add
push
add
mov
add
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
in
inc
add
dec
add
inc
add
dec
add
xor
add
xor
xor
add
sub
add
cmp
popa
add
add
in
inc
add
push
add
inc
add
push
add
xor
add
xor
xor
add
sub
add
arpl
popa
add
add
in
inc
add
push
add
mov
add
inc
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
in
inc
add
inc
add
mov
add
push
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
in
inc
add
dec
add
mov
add
dec
add
xor
add
xor
xor
add
cmp
add
cmp
popa
add
add
in
inc
add
pop
add
mov
add
pop
add
xor
add
xor
xor
add
cmp
add
arpl
popa
add
add
in
inc
add
pop
add
mov
add
pop
add
xor
add
xor
xor
add
sbb
adc
add
or
adc
or
add
inc
add
inc
add
push
add
mov
dec
add
mov
inc
add
mov
push
add
mov
push
add
mov
inc
add
inc
add
inc
add
mov
add
dec
add
mov
add
dec
add
mov
add
dec
add
mov
add
dec
add
mov
add
dec
add
mov
add
dec
add
inc
inc
add
push
add
inc
add
dec
push
add
add
add
inc
add
push
add
add
push
add
add
inc
add
add
inc
add
inc
add
push
add
add
push
add
mov
push
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
dec
add
mov
dec
add
mov
push
add
mov
dec
add
mov
push
add
mov
dec
add
dec
push
add
dec
inc
add
push
add
dec
inc
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
add
dec
add
inc
add
dec
add
mov
pop
add
mov
push
add
mov
push
add
mov
inc
add
mov
push
add
mov
push
add
mov
inc
add
push
inc
add
dec
add
push
add
add
add
inc
add
add
add
add
add
add
inc
add
dec
add
inc
add
push
add
mov
push
add
inc
add
push
add
mov
dec
add
mov
inc
add
mov
push
add
inc
add
dec
add
push
dec
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
dec
add
inc
add
dec
add
mov
dec
add
mov
dec
add
mov
inc
add
pop
add
push
add
push
push
add
push
pop
add
add
push
add
add
inc
add
add
add
inc
add
inc
add
add
push
add
inc
add
push
add
mov
add
add
mov
inc
add
inc
add
add
inc
add
add
add
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
add
add
add
add
add
filds
jl
inc
add
add
add
add
add
add
add
add
jg
jg
jg
test
inc
add
add
add
add
add
icebp
call
push
add
push
add
mov
sub
inc
add
add
add
incl
add
add
incl
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
lock
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
jns
add
jo
ja
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
cmp
or
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
add
outsb
add
jbe
add
js
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
