pop
add
mov
jb
xchg
mov
jb
add
movsb
jb
ret
sub
mov
jb
jno
jb
jb
jb
add
jb
or
jb
sbb
jb
mov
mov
jb
shll
push
add
jb
xchg
mov
jb
bound
jb
mov
jb
mov
mov
jb
jne
jb
or
jb
sbb
jb
sbb
jb
push
mov
jb
cpuid
jb
jne
jb
mov
jb
xchg
mov
jb
mov
movsb
jb
add
jb
insb
mov
jb
insb
mov
jb
dec
mov
jb
xor
mov
jb
jne
jb
insl
mov
jb
insb
mov
jb
out
mov
jb
xchg
mov
jb
mov
jb
imul
push
add
add
add
cld
sbb
inc
add
add
test
add
add
add
add
pop
inc
add
pop
inc
add
add
add
inc
bound
add
add
add
test
inc
add
daa
inc
add
add
add
add
add
cs
add
sub
add
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
call
add
add
add
xor
add
cmp
add
add
add
and
mov
pop
in
fwait
or
add
add
pop
inc
push
push
push
dec
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
sbb
pop
add
add
add
add
add
add
add
sbb
pop
add
add
add
lock
inc
add
add
add
incl
add
add
add
inc
inc
add
add
add
inc
add
inc
add
add
add
jo
pop
add
inc
add
add
add
add
xor
add
or
or
add
add
add
inc
add
xor
add
decl
add
add
add
add
add
add
add
add
inc
add
inc
add
add
addb
add
add
add
cmp
jbe
dec
add
push
push
push
dec
inc
add
pop
inc
push
push
push
dec
inc
add
hlt
add
add
push
inc
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
add
add
add
cmp
pop
add
inc
add
xor
insl
add
inc
add
ja
jbe
jo
add
jae
jae
push
add
insl
add
popa
add
dec
add
push
add
push
add
insb
add
arpl
jb
imul
add
jno
data16
add
add
inc
add
imul
add
add
dec
add
add
bound
jo
xchg
adc
pop
add
add
add
add
inc
inc
add
inc
add
incl
add
add
inc
inc
add
ret
xchg
push
mov
fcom
das
push
add
add
add
add
add
add
or
add
add
add
add
add
adc
lcall
add
adc
add
add
add
add
add
add
add
incl
add
addb
add
add
jno
jne
dec
dec
jo
push
jno
cmp
jo
jbe
inc
dec
imul
jo
add
add
push
push
push
dec
inc
add
add
add
ja
add
js
add
add
add
add
add
add
imul
add
add
int3
inc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
adc
add
inc
aaa
imul
jb
push
inc
xor
jo
add
hlt
pop
inc
add
pop
inc
add
add
fadds
add
or
je
jmp
push
mov
call
jmp
add
add
add
push
xor
add
inc
inc
dec
dec
insb
inc
dec
dec
insb
dec
inc
add
inc
add
inc
add
add
in
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
add
adc
add
pop
jo
insl
pop
dec
push
inc
jbe
ja
push
dec
push
inc
add
add
inc
add
add
lock
inc
add
or
je
jmp
push
mov
call
jmp
add
add
gs
gs
xor
cs
insb
add
add
adc
add
inc
gs
outsl
fs
gs
imul
add
call
sbb
add
add
cld
inc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
xor
fs
insb
add
adc
add
inc
popa
insb
insb
push
imul
outsl
arpl
dec
sbb
pop
sbb
add
add
or
add
or
je
jmp
push
mov
call
jmp
add
add
or
sbb
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
push
add
xor
and
push
add
xor
add
add
loopne
inc
add
sbb
add
add
sbb
add
add
xchg
add
add
add
add
add
sbb
add
add
xchg
add
add
add
add
add
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
push
je
push
popa
jb
popa
insb
add
pop
pop
jbe
popa
dec
xor
add
add
jbe
popa
inc
jb
push
outsb
insb
outsl
arpl
add
jbe
popa
inc
jb
dec
outsl
arpl
add
add
jbe
popa
push
popa
jb
push
arpl
add
add
jbe
popa
inc
jb
dec
outsl
jbe
add
add
pop
pop
jbe
popa
dec
outsb
inc
jae
jb
add
add
jbe
popa
dec
jb
jae
insb
je
push
bound
add
add
jbe
popa
dec
gs
add
add
sbb
adc
inc
add
jbe
popa
push
cmp
jb
add
jbe
popa
push
dec
xor
jb
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
inc
jo
dec
xor
add
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
push
gs
jns
je
insl
inc
jb
outsl
jb
pop
pop
jbe
popa
push
je
inc
outsl
jo
add
add
pop
pop
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
inc
jb
outsl
jb
jbe
jb
insb
outsl
ja
add
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
outsb
gs
je
inc
outsl
jne
fs
jb
outsl
jb
add
add
jbe
popa
push
je
push
cmp
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
je
push
popa
jb
outsl
jbe
add
jbe
popa
push
je
dec
outsl
jbe
add
add
pop
pop
jbe
popa
inc
jb
inc
outsl
outsb
jae
jb
arpl
add
incl
add
add
push
inc
add
incl
add
add
inc
add
incl
add
add
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
push
lea
xor
push
push
mov
mov
mov
xor
mov
mov
mov
call
lea
push
lea
push
push
movl
movl
call
lea
push
call
mov
mov
lea
call
lea
lea
push
push
push
call
add
push
push
call
sub
fstpl
call
mov
lea
call
mov
movl
mov
movl
mov
movl
mov
movl
mov
mov
movl
mov
push
mov
call
cmp
jne
or
mov
push
call
cmp
jne
or
lea
push
push
call
lea
push
call
mov
lea
call
lea
call
mov
mov
movswl
push
push
push
push
push
call
mov
call
mov
push
mov
fwait
jmp
lea
lea
push
push
push
call
add
ret
mov
lea
call
lea
call
lea
lea
push
push
mov
call
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
movl
mov
cmp
jge
add
jo
jmp
call
mov
lea
call
push
call
lea
call
push
jmp
lea
call
ret
ret
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
push
lea
xor
push
push
mov
mov
mov
mov
call
mov
lea
push
mov
movl
call
push
push
push
call
mov
call
mov
call
mov
mov
mov
call
mov
mov
call
cmp
ja
mov
add
jb
mov
jmp
mov
lea
lea
mov
and
mov
lea
push
lea
push
push
movl
call
lea
push
call
mov
lea
call
lea
call
push
jmp
testb
je
lea
call
lea
call
ret
lea
lea
push
push
mov
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
lea
push
push
call
fldl
call
push
call
mov
mov
lea
call
push
call
call
lea
call
lea
lea
push
push
movl
movl
call
lea
push
call
lea
lea
push
push
push
call
add
lea
push
call
lea
push
call
mov
lea
fstp
call
lea
push
call
mov
lea
push
call
mov
lea
call
lea
call
mov
test
jne
push
push
call
lea
mov
push
mov
sub
mov
mov
sub
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
fnclex
jge
mov
push
push
push
push
call
lea
push
call
mov
lea
call
lea
call
push
lea
push
lea
lea
push
push
mov
movl
call
lea
push
call
mov
lea
call
lea
call
lea
push
lea
push
push
movl
movl
call
lea
push
call
mov
lea
call
lea
lea
push
push
push
call
mov
add
push
call
sub
lea
jo
push
lea
lea
push
push
mov
movl
call
lea
push
call
mov
lea
call
lea
call
mov
push
push
call
mov
lea
call
lea
movl
mov
push
lea
lea
push
push
call
lea
push
call
mov
lea
call
lea
call
mov
push
call
push
mov
call
mov
lea
call
lea
lea
mov
push
lea
sub
push
lea
push
push
jo
mov
movl
movl
call
mov
lea
lea
push
push
call
lea
lea
push
push
call
lea
lea
push
push
push
call
add
mov
mov
cmp
jg
mov
add
jo
mov
jmp
push
lea
push
lea
lea
push
push
mov
movl
call
lea
lea
push
push
call
lea
lea
push
push
call
lea
call
mov
lea
push
push
call
mov
test
je
cmpw
jne
mov
mov
neg
cmp
jb
call
mov
mov
jmp
call
mov
mov
lea
add
push
mov
movl
call
mov
lea
push
call
mov
mov
push
mov
call
mov
call
mov
mov
cmp
jg
lea
lea
movswl
mov
push
lea
push
lea
push
push
movl
movl
movl
call
mov
sub
jo
movswl
cmp
jb
call
lea
lea
push
push
call
push
call
mov
call
mov
lea
mov
call
lea
lea
push
push
push
call
mov
add
add
jo
mov
jmp
mov
lea
push
mov
movl
call
mov
mov
push
call
test
jle
mov
mov
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
push
call
mov
lea
call
push
call
lea
lea
push
lea
push
push
push
call
add
lea
lea
push
mov
movl
call
mov
push
push
push
push
push
call
call
fwait
push
jmp
lea
push
call
lea
lea
push
lea
push
push
push
call
lea
lea
push
push
push
call
add
lea
push
push
call
ret
mov
lea
call
lea
call
lea
call
mov
lea
lea
push
push
mov
call
lea
call
lea
call
lea
push
push
call
lea
call
ret
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
movl
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
call
mov
lea
push
push
push
call
push
call
mov
mov
lea
call
push
call
mov
call
lea
call
lea
lea
push
push
movl
mov
call
lea
push
call
mov
lea
call
lea
lea
push
push
push
call
add
lea
lea
lea
push
push
push
push
mov
movl
call
lea
lea
push
push
call
lea
lea
push
push
call
mov
lea
call
lea
movl
push
mov
call
lea
call
mov
xor
mov
cmp
jg
cmp
jb
call
mov
call
mov
mov
mov
add
jo
mov
jmp
xor
movl
xor
cmp
jg
cmp
jb
call
mov
cmp
je
cmpw
jne
mov
push
call
mov
mov
cltd
idiv
mov
mov
mov
mov
sub
cmp
jb
call
mov
xor
jmp
call
mov
movswl
mov
add
jo
mov
xor
mov
add
jo
mov
and
jns
dec
or
inc
cmp
jb
call
mov
mov
call
cmp
mov
jb
call
cmp
jb
call
mov
cmp
mov
mov
jb
call
movzbw
mov
mov
mov
add
jo
mov
jmp
push
lea
push
lea
lea
push
push
xor
xor
mov
movl
call
lea
lea
push
push
call
lea
lea
push
push
call
lea
call
mov
push
call
sub
mov
jo
mov
cmp
jg
add
jo
and
jns
dec
or
inc
cmp
jb
call
mov
movswl
add
jo
mov
and
jns
dec
or
inc
lea
lea
push
push
movl
movl
call
lea
push
call
mov
lea
call
lea
lea
push
push
push
call
add
cmp
jb
call
mov
mov
call
cmp
mov
jb
call
cmp
jb
call
mov
cmp
mov
mov
jb
call
movzbw
mov
mov
mov
cmp
je
cmpw
jne
mov
mov
sub
mov
cmp
mov
jb
call
mov
mov
mov
jmp
call
mov
mov
cmp
jb
call
mov
cmp
jb
call
mov
mov
mov
add
jo
and
jns
dec
or
inc
movswl
cmp
mov
jb
call
mov
cmp
je
cmpw
jne
mov
mov
mov
sub
cmp
jb
call
jmp
call
mov
mov
mov
mov
mov
movzbw
mov
xor
call
mov
mov
mov
mov
mov
add
jo
mov
mov
xor
jmp
push
call
mov
mov
lea
call
push
call
lea
call
push
lea
push
lea
lea
push
push
mov
movl
call
lea
push
call
mov
lea
call
lea
call
push
jmp
testb
je
lea
call
lea
call
lea
lea
push
push
push
call
add
lea
push
push
call
ret
mov
lea
call
mov
lea
lea
push
push
mov
call
lea
push
push
call
lea
call
lea
call
lea
call
lea
push
push
call
lea
call
ret
mov
mov
pop
pop
mov
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
int3
add
clc
das
add
add
add
push
xor
add
add
adcb
add
xor
add
add
cmp
add
dec
xor
add
add
insb
xor
add
xor
add
add
andb
add
scas
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
js
add
cmp
add
pop
xor
add
add
jp
add
xor
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
int
add
cmp
add
inc
xor
add
add
xor
add
add
xor
add
xor
add
add
fdivl
add
add
andb
sub
add
cli
xor
add
add
adc
add
imul
andb
add
and
add
xor
add
inc
xor
add
add
add
inc
add
addb
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outsb
add
add
pop
pop
jbe
popa
push
je
dec
xor
add
add
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
inc
jb
dec
outsl
jbe
add
add
pop
pop
jbe
popa
push
je
push
popa
jb
outsl
jbe
add
add
jbe
popa
dec
outsb
inc
jae
jb
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
popa
fs
imul
xor
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
gs
jns
je
insl
inc
jb
outsl
jb
add
pop
pop
jbe
popa
dec
jb
jae
insb
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
popa
fs
imul
imul
popa
fs
imul
xor
imul
dec
jae
outsb
add
add
pop
pop
jbe
popa
inc
push
add
add
jbe
popa
inc
outsb
gs
je
inc
outsl
jne
fs
jb
outsl
jb
add
add
jbe
popa
inc
jb
inc
outsl
outsb
jae
jb
arpl
add
add
jbe
popa
dec
xor
add
add
inc
jne
arpl
outsb
inc
popa
insb
insb
add
add
jbe
popa
inc
jo
dec
xor
add
add
fs
data16
je
outsb
add
add
jbe
popa
push
je
push
cmp
add
add
jbe
popa
push
dec
xor
add
add
pop
inc
dec
jae
jb
add
add
jbe
popa
push
dec
xor
add
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outsb
fs
gs
add
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
pop
jbe
popa
push
je
push
popa
jb
popa
insb
add
add
pop
inc
dec
insb
outsl
add
add
pop
pop
jbe
popa
inc
jb
outsl
jb
jbe
jb
insb
outsl
ja
add
add
jbe
popa
dec
gs
add
add
jbe
popa
push
popa
jb
push
arpl
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
push
je
inc
outsl
jo
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
pop
jbe
popa
push
cmp
jb
add
add
fs
imul
add
pop
pop
jbe
popa
inc
jb
dec
outsl
arpl
add
add
jbe
popa
inc
jo
xor
add
pop
inc
dec
popa
je
outsb
add
add
jbe
popa
push
je
dec
outsl
jbe
add
add
pop
popa
insb
insb
insl
jne
add
add
dec
je
outsb
add
add
pop
pop
jbe
popa
push
dec
xor
jb
add
pop
pop
jbe
popa
inc
jb
push
outsb
insb
outsl
arpl
add
add
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
add
add
push
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
fcompl
add
in
add
add
add
jl
add
adc
add
in
add
add
add
sub
add
and
add
inc
add
push
ror
fnstcw
sbb
jbe
dec
add
dec
sub
or
fcomip
mov
fstpl
xor
pop
in
xchg
xor
add
xchg
mov
sub
test
pop
faddl
xor
int
stos
lock
fsubr
add
sbb
add
iret
and
jnp
or
and
push
and
sbb
lea
fsubl
inc
lret
fwait
ret
loop
ror
outsb
sbb
sub
ljmp
jle
lock
outsl
stos
xchg
mov
ret
push
pop
out
sbb
xchg
cmp
ja
adc
push
xchg
test
xchg
cmp
xchg
jg
pop
sub
rclb
sbb
into
pop
cmpl
pop
mov
mov
lock
lea
xchg
stc
sub
outsl
aad
sbb
ja
sub
or
xchg
iret
mov
stos
sub
imul
sbb
and
pop
addl
lcall
adc
inc
sub
cs
pushf
inc
lods
xchg
xchg
rcrb
stc
or
mov
fmul
les
mov
popf
lcall
outsl
xchg
mov
dec
lods
les
cld
dec
sbb
dec
cwtl
mov
push
lds
inc
inc
jmp
cmpsl
pop
push
mov
mov
fnstsw
aaa
jmp
lahf
mov
sbb
jo
sbbl
dec
mov
je
out
ss
add
rorb
movsl
or
iret
into
adc
xor
add
bnd
inc
imul
mov
movsl
outsb
mov
pop
adc
sbb
pop
adc
inc
inc
out
jle
dec
mov
testb
cmpl
jbe
faddl
inc
mov
inc
inc
xchg
mov
std
pop
jne
mov
add
lret
out
pop
mov
sub
cmpsb
idivl
dec
cwtl
sbb
dec
rclb
xchg
ss
xor
mov
adc
int3
aam
sub
fsubl
mov
cmp
adc
add
fcoml
es
and
cmp
fstps
inc
cld
test
in
push
sub
cmp
mov
pop
mov
and
stos
sub
ds
rolb
sub
dec
leave
insl
jb
push
fstl
pusha
mov
or
es
aas
push
mov
addl
mov
xchg
xchg
mov
dec
cmc
cwtl
jne
jle
mov
pop
mov
loope
gs
adc
fcom
sbbb
clc
inc
jecxz
movsb
iret
cmp
cld
jg
imul
je
ret
test
xor
lcall
inc
inc
pop
jp
push
pop
cmpsb
cmp
mov
mov
inc
mov
jp
jg
inc
xor
int
dec
or
mov
xchg
cwtl
insb
cmpsl
int3
add
jb
in
add
dec
pop
lret
jge
and
scas
dec
lret
add
pop
jmp
add
nop
push
in
ret
shl
sub
inc
in
in
cmp
lock
es
adc
xlat
pop
pop
add
cltd
and
cli
out
push
stc
jecxz
xor
dec
mov
push
dec
dec
stos
mov
in
addr16
cmp
sbb
imul
sub
jmp
sbb
out
and
subb
jo
and
add
mov
xchg
dec
or
jnp
cmpb
ss
sbb
sar
cmp
xor
xor
xchg
cmp
in
lods
sbb
mov
adc
pop
jge
push
xchg
adc
test
or
je
stc
loop
cmp
push
mov
repnz
dec
and
and
popf
sbb
pop
inc
inc
icebp
mov
punpcklbw
mov
mov
cs
sbb
sbb
push
mov
pop
push
xor
xor
cwtl
xor
sbb
jo
mov
rcl
js
sub
incb
mov
mov
and
jbe
cmp
push
notl
jecxz
adc
fistpl
mov
jno
pop
dec
adc
push
das
imul
inc
adc
jo
jb
scas
movsl
fldenv
xor
add
mov
push
shll
sub
mov
mov
fcoml
jl
lods
ljmp
jle
out
or
fcomip
movsl
addb
pushf
pushw
movsl
xor
wbinvd
mov
fildll
cmp
leave
and
insl
rcr
pushf
cmp
loop
cmpsb
fdivp
jp
enter
mov
and
shrb
js
fidivs
xchg
dec
pop
xchg
pushf
lea
add
xor
xor
outsb
lods
lods
lock
dec
pop
fisubs
push
pop
dec
cli
sbb
ja
hlt
sbb
or
xchg
xchg
lcall
xlat
pop
es
push
pop
cli
push
or
cmp
nop
shll
in
add
xor
arpl
rcll
sahf
pop
cmpsl
dec
sbb
icebp
loopne
enter
cmc
jnp
addr16
pop
loop
call
dec
sahf
inc
stc
roll
or
mov
sbb
outsb
ljmp
add
movsl
cs
sti
mov
xchg
test
inc
nop
cmpsl
cmp
pop
icebp
cmp
ss
inc
insb
repz
mov
arpl
rcl
or
pusha
mov
jno
mov
adc
ss
xchg
in
dec
sub
and
sbb
pop
mov
iret
jg
cmc
lock
cmp
outsb
pop
add
fstps
cli
xchg
sbb
inc
das
xchg
mov
cmp
adc
and
repnz
mov
cltd
or
mov
xchg
mov
jmp
sahf
push
xor
mov
sbb
ds
jbe
xlat
xor
repz
xchg
scas
sbb
xchg
clc
mov
test
scas
mov
aam
add
fisubrs
out
push
mov
xchg
mov
jge
xchg
xsave
add
push
shl
sub
in
dec
dec
mov
in
in
mov
jecxz
jle
mov
les
leave
add
insl
push
nop
add
sbb
jb
rcrb
lahf
stos
shlb
sub
sarl
lcall
xchg
cmc
testb
pop
in
and
test
inc
mov
cmp
ret
push
ds
xor
popf
xchg
ffree
mulb
mov
mov
push
enter
pushf
inc
adc
enter
fwait
ljmp
mov
add
pop
loope
xchg
xor
sti
outsl
ficoms
or
sbb
jp
repz
xor
je
lret
lds
call
ds
pop
cld
xor
push
lods
mov
lret
pop
out
pop
out
jb
or
fwait
push
movsl
jo
repz
sti
sub
daa
sbbl
rolb
or
sub
daa
mov
mov
leave
mov
out
pop
sub
sahf
and
inc
cltd
mov
outsl
andb
xor
arpl
jecxz
sub
pop
fisttpll
jne
pop
dec
or
pop
pushf
and
cmc
add
mov
jnp
mov
dec
nop
sub
aaa
sbb
push
add
sahf
lea
scas
mov
push
stos
int3
or
add
ss
xor
fsubrp
fsubr
aaa
or
xor
sub
dec
fldt
scas
mov
clc
clc
cmp
inc
xchg
jecxz
repnz
mov
insl
sti
ss
inc
mov
push
jecxz
sbb
in
lret
shlb
sub
add
fs
mov
inc
aaa
sub
jmp
clc
cmp
xor
inc
jo
add
sbb
hlt
ret
or
and
repnz
jns
mov
xchg
mov
mov
mov
rorb
mov
add
push
rcrl
test
dec
out
mov
in
cltd
mov
push
psrad
inc
dec
mov
sahf
jl
add
mov
push
push
scas
aad
shrb
insl
xchg
dec
insb
js
in
jbe
cmp
out
fildl
xchg
mov
sub
jae
in
fidivs
cmc
loop
in
les
sti
aaa
js
or
std
imul
sub
lret
addr16
mov
loopne
or
mov
out
enter
cmp
adc
jmp
xor
shrb
scas
xchg
fldenv
movsl
mov
and
or
inc
jl
or
add
xchg
jns
cmp
xchg
dec
push
das
mov
mov
sbb
shll
fbld
jo
dec
cmc
mov
pop
rolb
jl
jmp
xor
pop
jmp
int3
inc
push
xchg
dec
movsb
cltd
aas
mov
cwtl
fdivrl
mov
aad
leave
inc
loope
ss
dec
pop
addl
out
cmp
and
sbb
push
adc
ficoml
das
and
mov
inc
mov
aam
les
hlt
xchg
cmc
push
jb
je
test
pop
sub
xor
fwait
xchg
jnp
inc
inc
movsl
or
cmp
inc
jo
loop
je
xor
ret
leave
inc
cmp
jg
mov
stos
push
jne
shrl
stos
or
inc
cmpsl
pop
pop
mov
add
ficompl
cmp
fwait
fsts
inc
out
mov
clc
and
sarb
js
and
jae
loope
jbe
inc
dec
push
test
outsb
push
jns
stos
mov
or
aas
or
sub
enter
lea
mov
icebp
mov
xor
mov
dec
push
cltd
pop
clc
cmp
mov
add
push
add
stos
jno
sbb
mov
jecxz
dec
jae
pop
sbb
mov
adcl
jbe
mov
mov
cmp
inc
pop
hlt
inc
cmp
mov
data16
cmp
fmuls
xchg
scas
dec
add
cmp
aam
adcl
push
add
lea
stc
inc
cmpsb
inc
jbe
jp
or
add
js
imul
mov
cld
jns
and
jl
inc
mov
lods
stos
nop
push
and
jmp
push
lret
and
mov
cmp
nop
lret
jl
lods
sbb
scas
call
or
pop
lea
inc
jno
movsb
enter
and
xchg
mov
divb
orl
mov
adc
outsl
cmpsb
push
subb
sbb
mov
xor
scas
aad
std
fdivs
or
sub
aad
push
outsb
daa
jge
cld
loopne
repnz
pop
movsb
mov
insl
sub
inc
adc
sub
fdivrs
fimuls
xchg
shl
pop
mov
adc
xchg
call
mov
xor
jmp
jl
out
xchg
into
xor
in
fs
jo
xlat
and
pushf
sub
cwtl
xchg
loopne
iret
mov
mov
and
or
sub
in
outsl
mov
clc
sub
and
or
es
pop
xchg
xchg
imull
push
pushf
add
out
cmpsl
insb
adc
lds
movsl
pop
lods
icebp
cmp
xlat
xor
jle
mov
jno
cmpb
fwait
and
push
xlat
outsb
cmpb
stos
mov
inc
xlat
fimull
in
testb
leave
dec
repz
dec
call
adc
cltd
add
lods
aad
adc
cwtl
push
jnp
test
xchg
and
sub
pop
daa
scas
add
sbb
dec
rorl
ficoml
adcl
aam
insl
mov
or
fsubrl
xchg
cmp
cmp
inc
cmp
std
test
sbb
xchg
mov
outsl
insl
jle
mov
je
orb
insb
ret
pop
pushf
mov
add
jmp
mov
cmp
jl
or
orl
ja
mov
mov
push
xchg
mov
adc
test
icebp
cmp
leave
cmp
loopnew
arpl
sbbl
sbb
je
sbb
lock
inc
insl
jge
je
into
repnz
xor
sub
repz
insb
add
add
mov
imul
pop
inc
test
hlt
jbe
in
and
jo
roll
fadds
in
xchg
jmp
das
dec
and
pop
loope
adc
rorb
lgs
hlt
mov
mov
nop
shll
lds
sbb
pop
pop
add
scas
test
sbb
mov
jnp
push
adc
fs
push
cmp
sub
mov
push
je
push
loope
int
sbb
jmp
movsl
popf
sbb
and
lds
shlb
sarl
mov
xchg
mov
lcall
mov
aas
mov
jecxz
fstpt
adc
jne
mov
add
mov
pop
push
mov
mov
fadd
inc
mov
gs
cmpsl
jne
mov
icebp
fisttpll
test
mov
cld
sbb
and
ret
adc
lods
outsl
addl
jl
outsb
fiaddl
outsb
push
mov
aam
fsubr
shlb
int
inc
in
ret
and
xchg
std
add
in
and
inc
mov
repz
and
jae
pusha
pop
dec
adc
and
mov
adc
int3
mov
cmp
pusha
pop
xchg
jl
or
lret
ss
mov
and
push
loopne
xchg
push
stos
icebp
das
mov
insl
sub
push
and
pop
outsb
xor
pop
addl
pushf
dec
or
fisttpl
fstpt
mov
movsb
out
mov
mov
int
xor
adc
xchg
xchg
inc
push
iret
lret
jnp
mov
aad
jle
and
dec
mov
popa
lret
mov
adc
cmp
fucomip
xchg
mov
imul
in
out
or
push
sbbb
fdivrl
mov
mov
cmp
pushf
sub
cmp
insb
or
jne
lods
in
das
cwtl
sbb
outsl
mov
mov
loop
cli
fmull
mov
jbe
ja
mov
mov
mov
sub
fxch
test
cmp
es
jmp
jmp
iret
mov
outsl
cwtl
lcall
mov
lcall
stos
sahf
addr16
pop
leave
adc
test
inc
shlb
cmp
pop
std
in
push
hlt
ret
insl
clc
addb
inc
push
scas
or
or
nop
gs
rcrb
orl
sbb
push
dec
inc
xchg
inc
in
mov
ja,pn
pop
xchg
push
cmp
ss
cli
adc
dec
scas
fdivp
or
mov
cmpsb
dec
lcall
push
stos
inc
js
jne
dec
outsl
push
mov
inc
out
xchg
call
push
icebp
es
rorb
cmp
jp
data16
stc
cs
popa
cwtl
or
mov
pop
inc
cmp
stc
pop
test
clc
pop
add
jmp
pop
inc
jnp
jge
xor
inc
repz
cwtl
repz
out
stc
in
pushf
int
test
addr16
cli
movsl
inc
stos
bound
mov
add
jle
or
scas
sbb
sub
mov
lcall
sub
adc
ffree
mov
sti
or
or
mov
xlat
jmp
xchg
pop
lods
or
add
jmp
ret
push
fdiv
and
or
das
jp
rorb
mov
ljmp
outsl
lahf
sar
push
cmc
aad
jae
in
gs
orl
mov
jnp
xchg
pop
jle
lea
pop
and
shll
add
jge
xor
xor
push
repnz
in
sbb
mov
stos
or
frstor
or
enter
mov
mov
pop
xchg
xchg
push
repz
inc
in
imul
lcall
jbe
mov
adc
lea
in
xchg
movsb
or
pop
in
mov
jle
adcl
scas
lock
pusha
enter
lea
sbb
shlb
sbbl
inc
mov
in
inc
push
in
or
test
adc
cmpsl
jle
fimull
mov
leave
in
mov
sub
cmp
xchg
ror
data16
inc
fiadds
cmp
fwait
add
in
les
sub
in
les
sbb
cmp
and
jnp
add
or
add
pop
call
test
iret
mov
cmp
xor
and
into
or
xor
fdivr
dec
scas
sub
xchg
add
jo
shrb
mov
xor
aad
in
pop
call
add
repz
jecxz
inc
cmp
test
jno
pop
das
inc
shrb
sub
in
jg
sub
mov
out
mov
in
rclb
arpl
mov
stos
mov
inc
push
xchg
nop
pop
and
decb
sbb
xor
sbb
aad
cmp
in
sub
aaa
enter
dec
or
testb
stos
pop
cmpsb
adcb
jmp
enter
out
js
aas
xchg
ja
lahf
cmp
into
cmp
and
std
and
ja
mov
rorb
ja
rcl
jg
inc
push
and
push
mov
and
imul
xor
xchg
pop
stos
insb
push
ss
in
lea
aam
bound
mov
add
dec
cmc
repnz
movl
iret
push
cld
jnp
or
pop
mov
jge
or
rolb
lock
xorl
sub
mov
mov
cmc
jge
mov
bound
xchg
scas
dec
and
test
mov
push
in
cltd
mov
xor
stos
pop
ds
and
stos
aad
or
mov
aas
adc
dec
sub
test
loope
push
out
sbb
xorl
pusha
cmp
jbe
cmc
mov
mov
xor
mov
inc
ds
aaa
inc
adc
cwtl
pushf
push
repz
sub
jne
icebp
dec
dec
and
mov
xor
bound
and
out
ret
add
push
mov
in
jae
imul
push
shrb
enter
adc
mov
sub
lahf
add
xchg
sbb
pop
adc
fimuls
mov
sbb
gs
fistpll
dec
mov
in
cmp
in
fbld
bound
dec
mov
sar
aas
xchg
mov
dec
mov
fildl
loope
xchg
ja
repnz
dec
daa
data16
nop
cmp
and
pushl
ffree
push
sub
cld
cmp
mov
or
stos
xor
int3
jae
sarb
push
or
insl
xor
sbb
push
out
lods
mov
xchg
inc
mov
sbb
and
call
pop
xchg
fistpll
sub
cltd
int3
jnp
adc
sub
fistpll
add
cmp
adc
and
mov
out
and
je
imul
jp
xorl
loopne
bound
mov
rcll
push
leave
and
data16
xchg
adc
test
aas
pushf
xchg
xchg
dec
push
push
scas
rcll
jns
inc
repz
jae
neg
rcl
cwtl
loopne
sti
lret
dec
mov
jnp
jo
ret
and
or
sub
loope
adc
and
lods
pop
nop
xor
paddusb
fdivl
mov
dec
mov
inc
jbe
pop
or
jae
nop
cmpl
xchg
cli
or
insl
insl
pop
xchg
ret
aaa
pop
cmp
mulb
scas
lock
je
xchg
arpl
inc
cwtl
scas
out
shl
cwtl
adc
jge
faddl
popf
add
out
mov
or
or
sahf
testb
pop
sahf
jbe
inc
add
out
leave
fs
add
add
inc
and
pop
shll
out
pop
push
insl
cmp
pop
bound
cmc
inc
call
sub
push
lret
ret
repz
or
iret
out
ss
fstps
daa
and
push
dec
xchg
movb
push
jno
pop
lret
push
loope
mov
xchg
loop
pop
pop
inc
xor
add
lret
mov
pop
hlt
dec
adc
jl
push
rcll
popf
jns
add
aam
sbb
mov
stc
ficomps
dec
imul
adcl
xor
imul
sub
sub
jnp
pop
imulb
insb
dec
adc
cvtdq2ps
and
lret
pop
xchg
push
repz
aad
push
fistl
fimuls
test
adc
call
adc
adc
inc
rolb
push
ret
sbb
jl
mov
sarb
cld
outsl
sub
popf
mov
xor
mov
xchg
lods
stos
pop
push
clc
test
xchg
xchg
ja
jne
loope
stos
imul
and
clc
cmpsl
in
lahf
jns
push
in
and
jle
jne
hlt
xchg
push
aas
ljmp
pop
inc
and
std
or
xchg
cmp
fwait
rcrl
cmp
subb
and
out
pop
xchg
fstpt
loope
cmp
add
out
mov
insl
or
push
adc
aad
push
in
aam
mov
scas
fs
arpl
test
mov
sbb
idivb
lahf
js
fnstenv
loope
inc
dec
dec
add
inc
cmpsb
shrl
scas
xchg
sub
cmc
daa
fisubs
mov
sub
popa
rolb
fdiv
arpl
push
dec
pop
out
jns
je
int
cmp
out
push
in
lods
scas
repnz
xchg
inc
data16
fldt
cltd
fdivr
shr
cmp
xchg
inc
lret
sbbl
cld
mov
push
stos
dec
adc
lret
in
pop
sbb
sub
inc
popa
std
sbb
xchg
into
shlb
sub
repnz
in
arpl
out
cwtl
test
dec
jecxz
push
js
and
mov
fistl
adc
stc
je
mov
adc
inc
bound
scas
mov
call
mov
pop
inc
scas
das
cli
mov
negl
int3
cwtl
insl
outsb
pop
cmpsb
inc
mov
xor
lods
inc
push
push
daa
add
sub
sbb
outsb
or
pop
ss
sub
or
clc
outsl
mov
ljmp
mov
mov
fimuls
or
push
bnd
mov
pop
cwtl
dec
jno
jo
inc
adc
mov
jae
push
mov
mov
or
xor
fidivs
test
iret
sbb
addb
lods
int
add
push
test
add
test
mov
mov
sbb
dec
fnstsw
dec
inc
push
sub
or
in
mov
dec
lea
inc
xor
incl
test
xchg
push
push
pop
and
cmc
adc
xor
mov
pop
in
add
rolb
mov
scas
sub
add
arpl
fwait
cmp
fistpl
push
add
mov
xchg
nop
sub
fisttpll
or
sti
sahf
es
insb
pop
xchg
push
xlat
jo
sub
sub
pop
xor
mov
in
inc
repz
scas
ja
mov
int3
div
dec
sarl
jnp
mov
cwtl
fidivs
adc
ret
lcall
adc
jnp
outsb
lock
fisttpl
push
jecxz
mov
out
fs
pop
aad
push
xchg
mov
jp
dec
andb
cmp
mov
adc
enter
inc
pop
mov
mov
lret
ss
sti
xchg
leave
xchg
stc
fstps
sbb
fadd
xorl
or
mov
rcrl
int3
pop
je
or
arpl
adc
xchg
stos
fs
xor
cwtl
arpl
cmpsl
mov
pusha
test
dec
mov
jo
jne
or
inc
xlat
hlt
sbb
outsb
jp
out
cmp
test
pushf
or
lahf
sbb
loopne
scas
jl
cmp
sbb
cmc
mov
sbb
mov
mov
scas
mov
mov
xlat
inc
sub
cwtl
dec
add
inc
inc
add
jno
aas
scas
sbb
packuswb
cmp
and
sarl
gs
fnstenv
xor
cli
cs
ficoms
cmp
xchg
insl
in
jae
gs
mov
xchg
mov
pop
adc
xchg
test
mov
jnp
push
incb
mov
lods
sbb
test
aaa
inc
cmp
dec
adc
fbld
jp
sti
mov
cmc
cmp
lea
imul
mov
sahf
xor
mov
enter
pop
pop
or
add
stos
movsb
lret
wrmsr
test
les
push
inc
pop
arpl
cld
scas
subb
add
daa
add
sbb
or
dec
jns
push
movsb
mov
ret
jecxz
pop
mov
cmp
imul
out
aaa
mov
loopne
xchg
jo
push
leave
xor
gs
and
dec
mov
cld
mov
mov
test
sbb
ss
int3
mov
push
les
stc
inc
jb
shr
adc
out
push
repz
call
lcall
icebp
push
int3
cld
imul
mov
cmp
shrl
pop
sbb
popa
popf
or
fwait
jmp
ja
subb
mov
aam
cmpsl
sbb
inc
add
ret
xchg
xchg
add
mov
pop
outsl
fst
shlb
or
aas
aaa
push
inc
ror
aas
fdivrl
clc
loope
arpl
mov
cwtl
ret
insb
pop
inc
cmp
pusha
loope
out
rcl
mov
gs
sahf
pop
or
in
mov
mov
idivb
fsubl
arpl
int
mov
jmp
dec
pushl
fidivs
and
sbb
mov
ljmp
outsb
icebp
dec
mov
ja
inc
mov
inc
xor
pushl
xor
dec
rclb
cmpsl
mov
loopw
jmp
lock
dec
inc
cmp
push
mov
movsl
pop
in
inc
popf
rorl
push
data16
push
xor
ds
jbe
mov
rol
jnp
ss
in
inc
jmp
gs
mov
xor
mov
and
call
jecxz
adc
rorb
inc
xchg
loopne
xor
or
pop
je
movl
aam
ss
xor
pop
scas
fdivrp
cmpsb
rorb
cmp
xor
mov
cmc
fcomi
test
mov
or
inc
xchg
inc
xor
jmp
push
and
mov
hlt
dec
jbe
out
xor
mov
push
movsl
fs
sub
cmp
jle
add
movsb
test
jae
mov
sbb
faddp
jnp
jo
jae
mov
pop
and
ss
lock
test
pop
es
cmp
outsb
mov
call
in
bound
lock
and
aas
inc
outsb
fstl
cmp
cmp
jnp
mov
jle
cmp
loop
cs
xchg
pop
ss
cmpsb
or
insl
jns
xor
mov
xor
and
adc
mov
adc
scas
cmp
out
loopne
fildll
xor
out
cmp
jmp
andl
sahf
mov
les
out
loop
dec
adc
xor
insb
sbb
push
jp
aaa
xchg
add
inc
pushf
aas
dec
inc
push
and
jmp
mov
stos
pop
into
and
movsb
pop
push
inc
fwait
ljmp
jae
adcb
pop
jnp
pop
and
jecxz
mov
mov
or
nop
int
or
in
xor
bound
add
sub
jns
gs
push
nop
mov
je
imul
sar
ja
ds
mov
sbb
push
dec
mov
jnp
xor
mov
jne
sbb
jno
mov
xchg
addl
jbe
xor
xchg
aad
mov
outsl
lcall
adc
sub
out
ffree
addl
in
pushl
or
cmp
imul
mov
fidivrs
dec
and
out
jns
dec
ds
dec
movsb
xor
test
das
movsl
sbb
jno
dec
pusha
jl
add
divb
adc
test
pushf
sbb
sub
xchg
lret
push
divb
xchg
out
lock
sub
lahf
insb
jle
inc
sub
ret
lret
fsub
call
push
dec
test
lods
sbb
add
mov
cmp
pop
cld
add
into
mov
and
push
fstpl
sub
iret
mov
test
jmp
mov
imul
dec
cs
xlat
loope
sub
sbb
sti
popf
lahf
push
das
add
test
stc
shrb
or
inc
in
xchg
mov
pop
pop
pop
xchg
lahf
mov
ds
mov
mov
mov
jmp
mov
mov
cmpsb
ds
cwtl
jo
aad
dec
loope
inc
pusha
xchg
xlat
hlt
dec
leave
iret
mov
mov
lret
ret
mov
cs
insl
jecxz
push
jae
sbb
sub
mov
xchg
adc
out
std
fcmove
int
jge
xor
lods
adc
sub
inc
lods
lahf
jecxz
xchg
sti
aas
shll
std
pop
lret
fs
fs
testb
sub
lcall
enter
std
xchg
mov
sub
sbb
push
out
out
sbb
cwtl
mov
adc
popa
sarb
rorb
cmp
std
mov
xchg
and
ja
mov
stc
or
insl
pop
or
sub
jge
adc
sub
pop
jns
out
add
inc
cli
icebp
je
insb
add
dec
mov
pop
pop
ficoms
cmp
pop
mov
xchg
clc
jbe
je
js
aad
loop
out
ljmp
mov
leave
xchg
mov
jecxz
outsl
sbb
xchg
shll
jp
movsb
movsl
xchg
icebp
mov
lahf
mov
frndint
adc
je
jbe
mov
sbb
lock
add
leave
fnstenv
fnstenv
in
cld
adc
loope
xchg
outsb
shr
cmpsl
sbb
or
fsts
push
fldl
lcall
cmpsl
nop
mov
mov
pop
pusha
gs
xor
push
xor
pop
insb
cld
int
xor
cmpsl
gs
cwtl
lahf
leave
inc
jl
iret
mov
insl
xor
jne
lahf
mov
cmp
jb
cmc
xor
sub
push
rol
lds
hlt
sarl
jle
adc
popa
popa
inc
test
out
pop
cmpsb
or
icebp
mov
mov
movsb
call
and
fwait
adc
cmp
loopne
jb
pop
mov
jl
hlt
test
adc
scas
cltd
jae
out
loop
inc
in
cld
stos
mov
bound
scas
jg
subl
stos
cli
push
aaa
xor
cltd
push
divl
in
cmp
into
or
jae
cmp
sbb
mov
pslld
jnp
into
and
inc
sbb
pop
dec
push
inc
xor
inc
clc
int3
std
cmc
xorl
fistps
dec
ret
repnz
xor
and
inc
addb
push
fistps
aad
mov
pop
cltd
sbb
cmp
dec
dec
xor
cmp
add
mov
push
cld
xchg
jle
push
addl
xchg
mov
ret
dec
push
dec
and
sarb
xor
jle
jae
notl
or
xor
pop
sbb
fisubl
cld
test
adc
les
out
adc
aas
test
rclb
adc
push
repnz
fstpt
das
xor
sub
lods
adc
xor
lcall
cmpsl
xchg
xor
shll
test
mov
sub
jb
and
pop
and
enter
push
btr
xchg
mov
or
push
movsb
stc
aas
xchg
mov
xchg
jne
into
bound
das
mov
cmp
xor
insl
xchg
pop
lahf
adc
cwtl
or
rcrl
icebp
cmp
movsb
out
mov
sub
loopne
push
sub
lret
mov
mov
mov
je
push
mov
out
lcall
pop
daa
stos
stos
sbb
fldt
push
cmpsl
sbb
roll
or
push
and
shll
movsl
xlat
ljmp
fwait
add
push
sub
push
push
outsb
sub
dec
jnp
ret
and
inc
xchg
adc
ficompl
out
out
mov
adc
pop
mov
inc
cmp
mov
ret
lock
out
or
call
push
dec
push
xorb
icebp
jnp
loopne
mov
jae
inc
lret
mov
or
and
cmp
jo
jecxz
xor
enter
dec
cs
inc
adc
jp
in
subl
sar
sub
ss
inc
mov
lret
cmpsb
lahf
cli
mov
jae
jmp
rorb
pop
stos
cmp
xchg
pop
sub
and
sub
pushf
mov
lea
cmpsb
mov
fcmovnbe
push
xchg
addb
push
rol
cmc
bound
in
movsl
mov
xchg
lods
pop
push
jbe
popf
and
push
das
in
inc
and
mov
mov
cmc
cmc
push
in
dec
repz
iret
sbb
add
ja
and
mov
stc
stos
inc
in
xchg
into
mov
dec
stos
jmp
pop
and
divl
jg
scas
push
fisubrs
jecxz
je
inc
xor
dec
stos
fs
mov
dec
mov
lcall
push
push
push
in
shrl
and
mov
xchg
jne
mov
icebp
jp
push
iret
cmp
xlat
xchg
rcll
or
ret
push
int3
mov
jb,pn
jae
cmp
cmp
pop
movsl
xchg
loope
cld
addr16
sub
call
jge
ror
xor
mov
pop
inc
add
dec
mov
ds
xchg
repz
ret
je
and
xor
iret
push
mov
pop
aad
lcall
or
in
cmp
sub
lret
adcb
repz
adc
fcompl
enter
loope
xchg
mov
stc
mov
inc
mov
sbb
rcl
decb
add
test
rorl
rorb
sub
popa
pop
jbe
jecxz
xchg
add
addr16
pop
scas
push
rcrb
mov
and
mov
lea
push
inc
scas
xchg
loopne
pop
cmp
ud2
jns
enter
das
cmp
add
mov
cmpsb
rcl
jl
lock
ficoms
jnp
in
cmc
cmp
adc
sub
mov
add
fwait
add
adc
xlat
dec
fdivs
jg
leave
lds
sbb
add
aas
inc
inc
jae
xor
pop
das
fildll
jl
adc
jns
lds
out
jmp
arpl
push
icebp
xlat
clc
pop
test
lret
aad
jge
pop
repz
mov
mov
jge
stos
dec
sbb
rorl
pop
or
stos
popa
sub
aaa
sbb
sahf
add
sbb
xchg
push
and
add
cmpsb
jle
hlt
movsl
pop
out
movsl
rol
or
fisttpl
jno
stc
push
mov
mov
mov
mov
and
push
adc
xor
add
push
sar
sbb
jbe
or
in
aam
cmpl
xor
cmp
nop
push
push
mov
sub
movsl
movsb
pop
fcmovu
add
ror
sub
pop
xchg
ljmp
xor
dec
vpshufd
sbb
scas
sbb
out
lahf
enter
jnp
push
lcall
mov
shl
loop
call
and
imul
adc
lahf
movsl
or
out
flds
or
xchg
pop
sub
enter
pop
int
inc
inc
ljmp
mov
push
in
pop
cmpsl
cmpsb
dec
mov
rcrl
test
or
insb
test
out
shr
gs
cmpsb
jno
icebp
outsl
adc
inc
fwait
mov
sahf
push
fsubrl
dec
sahf
addr16
stc
xchg
lahf
adc
test
les
xchg
fcmovb
and
jnp
ljmp
es
sub
fwait
xor
pop
fucomp
or
pop
loopne
ds
jecxz
enter
aaa
pop
mov
ss
rcrb
sarl
sub
jb
xchg
fiadds
push
mov
icebp
test
icebp
adc
add
flds
sti
xchg
mov
sub
jl
in
inc
cmp
test
stc
stos
ud0
test
mov
movsb
test
sub
mov
and
push
adc
inc
mov
mov
out
daa
test
sarl
or
pop
cltd
js
cmp
in
mov
daa
lds
bound
or
cld
daa
sub
mov
pop
jl
dec
in
aad
lock
dec
das
mov
lcall
or
push
adc
movsl
roll
sbb
jmp
dec
in
dec
and
andl
call
xor
jge
pop
bound
sub
leave
push
push
test
pop
jecxz
scas
out
mov
xchg
stos
dec
sub
xchg
dec
or
fstl
fbstp
dec
aad
fadd
mov
adc
outsl
lret
push
aaa
dec
hlt
jg
jb
xchg
adc
xchg
cmp
lds
fisttpll
je
and
int
pushf
xor
mov
addr16
push
dec
pusha
rol
inc
pushf
xchg
xchg
jle
sahf
and
push
mov
and
mov
add
repz
enter
dec
dec
nop
stc
mov
ljmp
data16
lock
jmp
in
ja
pusha
fistps
xchg
fdivr
push
xor
shll
rorl
test
adc
sbb
shll
cmpsl
stos
call
mov
jns
pop
shlb
mov
or
mov
ss
sahf
idivl
jo
repnz
fwait
jle
mov
jns
push
pop
push
jne
push
or
stc
aaa
xchg
iret
pop
sbb
and
lods
ja
addr16
enter
mov
cli
repnz
scas
add
jl
jnp
enter
or
pop
or
jno
pop
mov
push
std
outsl
mov
mov
sti
popl
stc
imul
out
int3
sbb
repz
hlt
shl
cli
cmp
and
cld
ret
aas
dec
inc
std
into
xor
pop
lea
sbb
fisubrs
xchg
iret
mov
pop
or
ss
fucomp
arpl
negb
or
sub
loope
ret
mov
out
mov
mov
mov
lock
xchg
cmp
fsubrp
and
clc
insb
in
jp
push
sbb
in
lock
cmpsb
add
stc
mov
insb
imul
mov
into
add
xchg
mov
pop
loopne
xlat
mov
jg
cli
mov
leave
mov
aam
xchg
clc
inc
aad
adc
push
inc
into
rol
pop
loop
emms
push
jno
add
cmp
imul
addr16
push
stc
repz
aaa
clc
sahf
xor
mov
add
inc
popf
andl
cmpsl
pop
sbb
mov
popa
shr
popa
les
push
incl
jns
je
add
leave
fdiv
ret
ret
push
jmp
or
push
sbbl
nop
sar
hlt
lahf
cli
stos
jmp
lcall
dec
jno
push
das
insl
out
aaa
call
push
or
mov
es
mov
push
push
adc
xor
arpl
jge
int3
loope
lahf
dec
or
cmp
push
push
jae
fistpll
movsl
divb
addl
push
add
pop
jb
nop
rcll
call
mov
pusha
jnp
lods
aam
aam
mov
out
xor
cli
orl
jo
add
pop
mov
pop
test
aas
fistl
sub
in
and
movsl
arpl
bound
lahf
lret
aam
fsubrl
xchg
pop
pop
dec
enter
xor
push
jno
je
imul
mov
int
stc
add
cltd
popa
loope
cmc
pop
in
call
inc
mov
negb
loopne
les
fldenv
sbb
gs
mov
mov
dec
sub
jp
int3
fcmove
pop
cltd
push
mov
idivl
dec
test
adc
outsl
cmp
jmp
fsts
outsb
mov
xor
stc
pop
dec
adc
int
dec
lret
push
jae
push
push
je
jmp
loop
mov
or
icebp
pusha
inc
pop
ss
mov
mov
jns
cvtps2pi
jmp
dec
js
jno
push
fdivrp
xchg
sbb
fsubrl
cmp
ja
push
stc
adc
test
push
insl
aaa
arpl
in
adc
enter
es
xor
sub
nop
add
cld
pop
xchg
pop
jge
incb
mov
iret
test
xor
and
movsb
pop
inc
mov
pop
test
lcall
popf
pop
shll
jne
ds
cmp
enter
jge
cld
lods
pusha
adc
insb
shrb
inc
bnd
jae
adc
pop
repz
outsb
test
lret
inc
cli
repnz
divl
push
cmpsb
cld
mov
nop
je
push
in
xor
push
inc
test
push
mov
or
aam
sbb
lds
xchg
pop
jbe
das
fwait
push
xchg
or
lahf
aas
stos
movsb
jbe
dec
imul
data16
dec
dec
mov
pushf
repz
cltd
ds
imul
cmpsb
mov
xchg
aad
pushf
push
cltd
movsb
dec
add
xchg
test
js
xchg
adc
cmp
ret
cli
jl
jnp
cmp
les
fwait
sbb
jl
bound
stos
imul
pusha
dec
int
xor
mov
jnp
adc
mov
imul
sbb
rorl
sti
xor
mov
lods
add
pop
roll
mov
jp
sub
sbb
mov
mov
sbb
subl
out
sub
fsubr
scas
jae
imul
mov
mov
jge
push
test
cmpsl
rcr
out
fidivrs
add
cltd
xchg
fstl
adc
dec
dec
add
icebp
lea
scas
or
xchg
sbb
divl
insl
sahf
pop
js
imul
push
jb
lds
mov
push
push
jnp
outsl
and
cmpsb
loope
sbb
jo
mov
mov
movsl
je
adc
mov
movsb
cmp
xchg
fs
dec
popa
adc
movsb
mov
in
andb
mov
bound
pop
xor
lret
inc
sahf
int
pop
inc
pop
imulb
icebp
add
mov
dec
cltd
ret
dec
ljmp
dec
dec
jne
jns
mov
lds
xchg
jns
scas
test
and
pop
enter
test
cmp
nop
mov
imul
jno
push
jecxz
int
enter
scas
pop
sub
lods
mov
gs
pop
jnp
mov
ret
lods
push
nop
test
mov
xor
pop
push
int3
sbb
lock
mov
pop
icebp
adc
jecxz
fwait
cmp
mov
decl
inc
je
lods
in
pushf
push
fdivs
pop
cmp
and
push
in
jmp
pop
cmp
rcl
sbb
push
jmp
insb
pushf
movsl
inc
iret
lcall
lds
xor
push
mov
loop
data16
call
mov
adc
mov
sub
ljmp
adc
push
add
ret
dec
daa
and
inc
stc
int
cmp
int
cmp
fnstsw
in
xchg
jg
mov
lods
fs
aas
push
sahf
sti
lods
pop
mov
pusha
movsl
lods
in
loop,pt
adc
or
mov
jb
imul
shlb
pop
repz
cmpsb
test
mov
xchg
or
fldt
mov
testl
orl
or
xor
push
pop
dec
push
out
fldcw
pop
add
and
xchg
cltd
ret
sbb
xchg
inc
les
cmp
ja
push
lods
pop
rcll
push
sahf
test
inc
sub
pop
pop
push
test
sub
pop
cmpsl
jbe
popf
arpl
lcall
inc
enter
pop
popf
pop
aam
repnz
pop
sub
pop
xchg
xchg
sbb
sub
add
and
cltd
sub
lock
xchg
jns
loop
xchg
lods
add
jbe
shlb
fwait
xorl
pop
adc
push
out
lahf
xchg
call
xchg
push
mov
ficompl
leave
std
push
jmp
or
pop
sbb
fldcw
and
jle
mov
or
jp
pop
sbb
lock
jb
popa
jmp
daa
int
clc
data16
mov
aad
outsb
xor
movsl
push
dec
sub
mov
xchg
mov
shrb
jl
add
ljmp
leave
xor
and
lds
scas
jae
cli
loope
je
inc
mov
cld
das
mov
out
movsl
dec
push
pusha
inc
and
insb
mov
in
dec
mov
clc
cmp
cld
repz
scas
cmp
xor
aam
dec
into
mov
mov
xchg
sbb
inc
lcall
sti
hlt
out
enter
adcl
jo
int3
mov
data16
push
jp
stos
mov
hlt
aaa
push
and
loope
sbb
or
imul
or
aas
icebp
aas
mov
mov
lahf
pop
cwtl
add
jp
sahf
and
jbe
lods
push
xchg
pushf
cmp
and
adc
mov
pop
inc
push
icebp
mov
ss
ss
sbb
jle
enter
cwtl
dec
shlb
js
adc
hlt
push
loop
mov
cmc
mov
in
mov
movsb
incl
push
pop
or
inc
pop
pop
or
insb
or
sub
repnz
adc
cmpsb
pushf
testb
inc
pop
fnstsw
push
into
pop
mov
xchg
adc
xor
mov
cwtl
jae
xchg
movsl
push
sbb
hlt
cmp
into
dec
mov
cltd
and
mov
add
lcall
ds
lret
iret
push
cli
addr16
sub
rcrb
insl
xchg
fwait
shlb
pop
dec
lds
push
mov
int3
mov
push
int
jbe
enter
dec
xlat
sub
jbe
addr16
loope
xchg
adc
cld
lock
mov
cvtps2pi
arpl
push
cmp
inc
push
ds
cmp
cmpsb
lea
push
dec
and
mov
jne
movsb
mov
sbb
mov
js
jge
add
push
jae
pop
icebp
mov
mov
rclb
in
std
mov
cmp
sub
iret
icebp
stos
ror
cmp
rolb
mov
clc
xor
lcall
cmp
cs
cs
rcr
sti
add
mov
pop
subl
xchg
dec
es
bnd
roll
push
outsl
test
mov
cwtl
fs
jo
jbe
cltd
shrl
sbb
dec
ret
test
je
test
xchg
in
ss
sbbb
inc
rolb
in
sbb
daa
dec
xorl
push
push
sahf
int
mov
mov
subl
iret
cltd
and
js
hlt
sbb
mov
rorl
pop
mov
daa
in
and
xor
fimuls
mov
enter
mov
pushf
js
iret
cmp
ja
arpl
cltd
cmpl
pop
popf
sarl
out
faddp
xchg
and
xchg
xor
adc
insb
add
or
xchg
faddl
xchg
lret
jle
or
outsl
addb
cmpsb
xchg
xor
fidivl
xchg
pop
arpl
out
mov
iret
push
pusha
pop
call
das
mov
mov
imul
cmp
mov
roll
sbb
xchg
jmp
jo
fstpl
je
pop
loope
xchg
xchg
movsl
jae
inc
ss
xchg
popa
rcr
sti
dec
cmp
pushl
repz
shrb
mov
lds
sti
mov
movsl
mov
push
sbb
cwtl
repz
cmc
fdiv
in
jmp
stos
jnp
imul
jle
sub
addr16
push
inc
fcompl
dec
test
or
sub
xorb
out
nop
cmpsl
inc
out
mov
or
add
jle
testl
mov
mov
fsubrl
xor
xchg
or
lds
mov
test
push
inc
ljmp
or
dec
lock
sarl
movl
ficomps
push
and
push
lahf
push
cmp
cmpsl
xor
mov
and
xlat
xor
dec
add
in
xchg
cmpsb
into
aad
notb
mov
addr16
mov
xchg
xor
in
adc
movsl
shll
stos
jecxz
xor
shll
sar
in
repnz
sbb
and
ret
aam
or
loopne
inc
imul
mov
fildll
adcb
in
mov
cmp
and
ret
add
lret
inc
icebp
outsl
adc
pop
pop
aas
out
mov
mov
and
sub
dec
filds
js
ffreep
cmp
mov
sbb
push
xor
xchg
mov
mov
dec
lods
fmul
enter
movsb
mov
hlt
clc
in
lret
push
cmpsb
sbb
push
and
ja
mov
lods
nop
lret
jb
pusha
std
or
cmp
push
out
mov
cwtl
mov
sbb
mov
mov
mov
mov
pop
or
les
mov
mov
fisttps
aas
xor
sbb
push
add
xor
xchg
jle
add
lock
jge
adc
push
dec
cwtl
xor
sub
sbb
mov
cmp
repnz
pushf
cmp
ss
ror
scas
or
sahf
nop
bswap
inc
pop
or
shlb
mov
mov
adc
sbb
inc
mov
dec
inc
jg
outsb
add
or
out
xor
push
dec
insl
inc
rcl
jo
jg
test
cmpsl
inc
and
fnstenv
inc
jg
xchg
mov
jge
xchg
pop
or
les
mov
mov
sbb
cmp
adc
xor
mov
fisubrs
cmpb
xor
das
adc
scas
sub
or
out
arpl
cmpsb
sti
and
xchg
jno
in
orl
fld
fsubrl
adcl
cmp
ret
das
inc
inc
icebp
outsl
in
leave
lcall
imul
pop
je
mov
test
adc
mov
push
push
jle
sub
fimuls
int
mov
clc
stos
out
iret
pop
leave
mov
mov
mov
mov
push
int
stos
xlat
ret
jl
and
push
xor
sbb
mov
sub
jne
mov
cli
add
inc
xor
push
dec
ficoml
push
xchg
xor
and
test
and
sub
pop
sbb
gs
cmp
sbb
or
aad
leave
xor
cmp
pop
adc
pop
mov
fldl
inc
mov
dec
insl
add
cmp
test
je
mov
xchg
out
jno
aas
enter
mov
mov
mov
roll
ds
out
add
fldenv
ljmp
mov
add
mov
scas
movsb
and
inc
push
xchg
lods
loop
loopne
dec
filds
pop
leave
pop
arpl
add
test
sub
cmpb
mov
out
lret
xor
xchg
inc
aas
jp
dec
lret
mov
lahf
test
or
addl
loopne
or
hlt
cmpsl
dec
nop
je
xchg
adcb
adc
push
push
mov
adc
pusha
mov
les
inc
inc
lcall
out
shrl
sbb
mov
adc
add
push
sarb
stos
shrl
or
push
sub
stos
xor
mov
mov
push
and
cmp
mov
cmpsl
stc
xchg
out
jg
mov
cld
adc
jns
cmp
lock
mov
sub
stos
and
push
hlt
mov
gs
icebp
lahf
lret
mov
mov
inc
xchg
or
outsl
int
daa
and
fsubs
insl
mov
aaa
xchg
cli
cmp
sbb
cmp
push
sub
scas
cmp
mov
rcrb
add
cmp
jmp
fsubrs
mov
jp
mov
mov
push
xchg
cli
adc
pop
sub
pop
divb
jg
mov
sub
repnz
je
add
sahf
insl
mov
xor
mov
test
mov
outsb
cmovo
loope
dec
fdivl
jns
push
and
popa
sub
mov
rcrl
xor
shrb
xor
sbb
sub
sub
or
mov
dec
inc
jl,pt
pop
sub
xchg
in
mov
punpckhwd
cs
mov
mov
add
inc
fstl
int
sarl
mov
mov
or
divb
push
xchg
arpl
adc
ret
fs
mov
push
fs
sub
sbb
xor
inc
adc
clc
lods
sub
flds
cmp
sub
add
inc
push
push
rorb
inc
cmpsl
movsl
or
or
mov
test
add
jno
mov
fildl
xchg
fsubrp
inc
je
pop
lods
adc
jmp
or
cltd
push
sub
xchg
imul
ret
shlw
mov
and
mov
sbb
mov
lcall
and
cmpsb
mov
jno
stos
mov
aas
jmp
or
lahf
dec
ds
xchg
fwait
in
mov
jns
xor
push
sarb
pop
out
rol
mov
addr16
mov
out
int
cmp
dec
loopne
je
lods
mov
lock
in
add
sub
mov
sub
sbb
loop
xlat
sub
or
and
sub
mov
fsubl
pusha
mov
sbb
notl
mov
adc
scas
les
push
je
mov
xchg
dec
loop
pop
sbb
out
in
jb
cltd
shlb
jae
jbe
push
inc
mov
sub
mov
sahf
popf
pop
adc
or
ret
sub
jmp
and
dec
leave
xchg
add
adc
xlat
cmp
jecxz
lds
cs
jmp
test
sbb
pop
loop
jg
aaa
aas
test
xchg
adc
push
mov
and
lods
xor
test
push
roll
pop
leave
daa
push
cmp
cs
bound
fiadds
jge
dec
das
pop
cmp
bound
faddp
popa
iret
shll
cmc
in
jge
mov
repnz
outsl
call
sbb
adc
adc
adc
movsb
arpl
push
das
push
cli
call
fst
add
rcl
test
adc
mov
repz
adc
mov
lock
pop
aas
xor
mov
xor
int
adc
dec
xchg
fidivl
mov
cmp
push
mov
stc
jg
mov
int3
mov
cs
out
subb
ss
push
adc
fwait
jb
andl
es
in
pop
dec
and
sbb
sbb
cmp
mov
pop
xchg
jmp
sarb
mov
sbb
in
jns
lods
lahf
dec
or
adc
mov
dec
jne
sub
test
int3
and
adc
mov
inc
dec
rorl
push
push
cmovs
xchg
fstps
clc
out
fcmovnb
shlb
xchg
popa
aad
sbb
pop
add
sbb
imul
xchg
enter
mov
sbb
mov
add
sub
and
rol
push
js
add
cwtl
push
xchg
int
push
sahf
inc
cmpsl
jecxz
mov
inc
aas
pop
adc
dec
mov
add
jo
mov
les
jne
cld
xchg
push
inc
sub
jnp
mov
dec
jge
xchg
mov
lods
mov
lahf
xor
cli
dec
jge
mov
loopne
cltd
ds
or
cmpb
cmp
mov
xchg
push
push
mov
sbb
jge
push
mov
fidivrl
inc
inc
mov
cmp
mov
adc
dec
iret
dec
int
into
jnp
adc
rol
sub
stos
aaa
mov
add
push
leave
xchg
pusha
sub
adc
inc
in
inc
imul
imul
out
out
ds
mov
shrb
outsb
mov
fs
sub
mov
sbbb
or
sbb
mov
cmp
mov
mov
and
cltd
loop
jns
int3
inc
into
fsubs
adc
xchg
mov
iret
test
pushf
mov
push
adc
ja
or
imul
std
lods
loop
hlt
jmp
mov
jnp
scas
cltd
mov
add
ret
sti
repz
adc
xchg
je
jle
inc
cmc
inc
mov
jg
add
nop
mov
icebp
push
out
dec
daa
or
adc
loopne
push
mov
repz
pop
sub
mov
nop
xor
int
stos
out
fdiv
mov
in
cmp
loop
xchg
inc
popa
xor
int
add
pop
sub
dec
dec
js
sub
and
or
out
inc
stc
pop
inc
popf
mov
fwait
jl
fisubs
out
bound
jge
mov
rclb
iret
ss
sub
int3
enter
ret
pop
inc
int3
int3
lds
sahf
ss
jge
call
test
mov
cmp
pop
jp
and
jg
add
js
jle
imul
add
pop
addr16
inc
adc
fadd
addb
push
xor
int
mov
xorl
inc
jmp
jnp
adcb
popa
xor
insb
dec
lcall
test
push
mull
lahf
ret
sbb
cli
movsb
and
lods
ficomps
sub
pop
mov
push
jmp
sub
push
sbb
cwtl
dec
push
insl
mov
repnz
pusha
scas
popf
adc
vmovapd
sbb
adc
es
xchg
mov
pop
rorl
jl
out
pop
call
decb
out
mov
pop
adcl
xchg
jl
enter
adc
dec
dec
cmp
inc
xchg
dec
insb
sub
dec
test
mov
sbb
repnz
stc
sub
ljmp
mov
and
pop
hlt
into
je
pop
bound
in
loopne
mov
mov
clc
or
ss
push
movmskps
xor
xor
divl
mov
pop
push
xchg
rcr
in
stc
sub
imul
int
xchg
es
mov
ja
insb
sub
xchg
cmp
clc
sahf
rolb
jns
sbb
ja
adc
pop
dec
adc
pop
xchg
mov
dec
sbb
test
popa
mov
jl
cmp
jmp
inc
sub
xlat
mov
ljmp
in
rcrb
out
lahf
add
mov
lcall
add
iret
pop
rcr
ss
movsl
xchg
ret
cmp
hlt
pop
sahf
in
dec
stos
cld
mov
and
ret
test
hlt
repz
pop
or
mov
dec
jle
out
js
insb
xchg
lods
and
and
pushf
add
into
xchg
cmpsl
loope
xchg
mov
ficompl
pop
and
in
cmc
mov
in
inc
int3
jae
sbb
imul
call
sarb
mov
push
iret
pop
jb
add
enter
dec
pop
pop
call
dec
jecxz
test
insb
inc
adc
mov
jne
into
das
mov
push
out
std
jno
mov
cli
pop
loope
push
inc
add
sub
or
fsubs
jg
inc
std
xchg
js
mov
into
push
cmp
mov
inc
sbb
mov
xchg
pop
aam
cmc
jno
imul
sbb
sbb
or
pop
or
fsubrs
xor
jb
adc
sbb
cmp
mov
in
jle
mov
hlt
ja
into
popa
sti
lret
or
shl
lock
in
jnp
add
lcall
jl
sbb
jge
xchg
fst
xlat
or
sbb
xchg
ret
dec
ss
adc
addr16
jmp
cwtl
add
push
cmpsl
and
outsl
xchg
orb
add
jmp
cs
pop
dec
xor
mov
andl
fildll
jns
push
fildl
or
fstps
or
fs
push
sub
int3
and
sbb
fistps
call
pop
mov
loopne
movsb
sbb
pop
pop
sbb
or
push
push
addps
add
add
aas
sub
insb
rcrl
aad
sbb
ja
mov
jbe
popa
or
movsl
xor
clc
cmp
adc
shll
pop
adc
int3
lods
mov
push
lds
fstp
adc
pop
push
dec
jmp
mov
out
pop
lds
fisubl
mov
scas
pop
xchg
fstps
arpl
sub
push
mov
jp
loop
sbb
shrl
or
int3
push
insl
xor
add
or
scas
int3
dec
adc
lods
cmp
call
lahf
ds
and
lock
cwtl
scas
mov
aad
rolb
pop
aas
pusha
cli
add
mov
mov
ds
pop
scas
or
fistps
jecxz
push
xchg
and
and
xchg
add
js
fs
mov
sbb
test
call
out
mov
fidivl
xor
leave
ret
int
inc
xor
iret
pop
mov
adc
xor
jo
out
mov
fcomps
popa
jmp
cmp
test
jb
into
inc
shll
dec
jg
repz
int3
sarl
sbb
cltd
ret
decl
sbb
cmp
cmpl
dec
mov
sub
xor
and
call
mov
xchg
sub
fists
xor
sub
insb
or
cltd
adc
cltd
call
or
add
imul
std
rcll
inc
fwait
call
sub
cmp
scas
negl
call
out
or
cmc
sbbl
dec
insl
addb
ja
push
mov
outsb
sub
hlt
loopne
into
into
jns
std
push
xlat
gs
mov
sub
negb
repz
rolb
rcrb
cmp
inc
jge
faddp
into
jb
mov
leave
leave
insb
or
lret
xor
lcall
jge
xchg
sbb
xor
dec
popf
shrl
jnp
push
pop
pop
lret
mov
dec
jo
adc
inc
push
pop
in
push
and
lods
int3
std
or
mov
cwtl
xchg
fs
sub
xchg
or
inc
jb
mov
stos
jmp
lahf
repnz
add
jo
sub
aad
dec
jae
cmpb
fldl
xchg
or
sub
inc
in
insb
adc
lock
popf
das
xchg
test
and
les
shr
in
sbb
outsb
adc
mov
out
dec
add
subb
mov
xchg
jg
repnz
inc
out
shll
rorb
push
loop
icebp
fsubrl
lock
xchg
dec
pop
inc
test
imul
repnz
mov
ja
mov
adc
leave
inc
xchg
mov
icebp
cwtl
repnz
scas
jl
jmp
mov
mov
in
insl
xorb
call
outsl
out
aaa
add
rcll
sbb
aas
or
sbb
test
cltd
jae
fs
jl
ss
out
inc
movl
in
inc
mov
in
cmc
or
cltd
pop
jge
hlt
xor
sub
int
and
pop
or
adc
mov
adc
cwtl
cmp
xchg
and
mov
and
fdivl
lcall
push
lea
inc
mov
mov
pop
test
ret
ret
scas
arpl
orl
fdivrp
jbe
das
test
inc
adcl
pop
adc
push
stos
ret
andb
scas
jbe
sub
push
jne
push
or
ret
js
loop
dec
orl
div
mov
mov
call
push
enter
and
mov
xor
jo
aas
mov
fs
adc
mov
ja
sarl
jmp
ja
leave
ds
push
ljmp
push
in
cmc
adc
add
movsb
iret
sub
fwait
mov
cmp
xchg
inc
neg
cmp
jl
adc
test
pop
add
jg
add
rdpmc
or
mov
std
shrb
das
xor
sarb
pushl
xchg
cmpb
popf
ds
sub
pop
xchg
inc
sti
jg
rcrl
insl
sbb
adc
xor
inc
dec
and
push
and
daa
movsl
arpl
jg
fldcw
push
in
incl
fwait
inc
fildl
lods
cmp
test
loopne
mov
pop
pop
push
mov
pop
jbe
or
lret
xchg
or
test
jbe
jno
mov
cmp
mov
stos
mov
xchg
nop
out
add
pop
lods
cmp
jecxz
xor
cmpsl
roll
mov
and
pushl
push
add
sub
sbb
in
fiadds
stos
daa
ror
lods
decb
push
and
mov
or
mov
inc
repnz
sub
loope
fmull
cwtl
push
mov
sbb
pop
push
bnd
mov
in
xorl
or
sub
xor
cmp
dec
loop
mov
add
imul
xor
es
mov
mov
xchg
roll
call
mov
scas
mov
sub
dec
lods
dec
pop
cmp
test
arpl
cld
mov
testl
sub
mov
jo
mov
popf
jl
dec
jbe
lock
aas
setns
sahf
push
jns
shrl
int3
adc
out
mov
sbb
mov
push
push
rclb
int3
and
inc
shrb
mov
xchg
jecxz
clc
push
pop
xchg
fisubrs
lods
cmp
and
or
mov
mov
or
mov
popf
adc
filds
and
push
out
es
adc
call
cmp
sbb
add
xchg
xchg
xor
pop
cmp
pusha
outsb
jl
cmp
mov
insb
or
and
daa
and
fbld
fcoms
inc
or
xchg
dec
push
pcmpgtw
cmp
jno
xor
nop
cld
sbb
lds
jl
pop
cmp
adc
inc
jmp
lods
jae
mov
jl
sub
arpl
xor
shr
and
xor
sbb
nop
sub
fnsave
aad
icebp
sbb
test
dec
jns
jbe
mov
out
and
loop
leave
add
leave
faddl
cmp
notl
icebp
mov
sub
mov
cmpsb
push
fisubrs
jne
scas
call
mov
adc
xchg
sbb
call
int
push
dec
out
mov
push
inc
enter
sbb
push
dec
mov
mov
fmul
cmp
addr16
into
shrl
xchg
inc
ds
pusha
out
fst
stc
loop
pop
stc
pop
xor
xor
clc
outsl
cli
lock
notb
jae
cmp
mov
ror
jg
xor
outsb
adc
xchg
int3
or
ror
dec
and
inc
dec
fstps
into
xlat
jbe
and
adcl
adc
into
movsl
mov
mov
imul
clc
pop
adc
cmc
adc
insl
adc
mov
cwtl
cmp
sbb
jno
pushf
jns
push
push
xor
mov
sarl
push
shrl
leave
or
lahf
mov
xchg
mov
das
loope
lds
repz
test
dec
icebp
ss
out
cltd
lock
idivl
or
mov
mov
sbb
fidivrs
pmulhuw
push
jge
out
sbb
mov
les
push
es
or
test
jg
push
pushf
mov
test
sahf
scas
and
mov
lods
and
repz
dec
and
cmp
andl
mov
xorl
add
aaa
popf
jo
or
xchg
mov
cwtl
rclb
push
fnstcw
dec
jle
inc
xor
push
mov
mov
aaa
scas
fcmovbe
fimull
inc
clc
popf
fnstenv
mov
stc
adc
xchg
rcr
mov
sub
xor
popf
push
fstp
or
das
into
les
mov
popf
sbb
adc
jne
jno
arpl
outsl
push
mov
push
repnz
or
insw
sub
xorb
sub
pop
pop
fnstsw
mov
mov
and
roll
in
aad
lahf
push
jecxz
stos
leave
mov
push
jb
ret
in
cli
cmpsb
lret
mov
mov
or
mov
aam
loope
ret
dec
xchg
cmpsb
push
pop
xor
out
push
fnstsw
lret
fs
push
repz
inc
xchg
sti
mov
sti
sbb
dec
pop
add
out
sub
push
push
mov
loop
lcall
std
clc
fsubrp
push
cmpsb
inc
std
fmuls
jne
sub
and
sbb
jl
lcall
xchg
out
jp
dec
pusha
xor
outsl
cltd
loope
jmp
test
ja
sub
in
xchg
test
aam
rolb
adc
pop
pusha
xor
mov
in
je
jp
add
or
call
idivl
mov
xor
les
fsts
loop
imul
push
mov
xchg
jnp
xor
or
adc
jmp
push
aam
pop
xor
std
push
lods
scas
fdiv
or
outsb
test
jp
aas
mov
popf
or
mov
cmp
sub
add
cwtl
rorb
push
repnz
adc
lea
jl
xor
pop
xorl
lea
lods
xchg
fldenv
outsb
cs
inc
mov
outsl
pop
push
jb
add
orb
dec
in
inc
add
sahf
or
lds
popf
or
dec
mov
enter
cmc
cltd
pop
cwtl
out
scas
xor
sbb
inc
dec
outsb
xor
push
jmp
push
aaa
jp
ss
xchg
or
scas
fdiv
mov
cmc
mov
dec
stos
fstpt
mov
jno
inc
ficoml
hlt
imul
cmp
in
fnstsw
jbe
gs
out
pop
aaa
xchg
mov
insl
scas
mov
cmp
push
hlt
jecxz
repz
cmpsl
or
xor
insb
and
fs
jne
cmp
gs
in
ljmp
xor
shl
add
dec
dec
mov
cmp
test
sub
sub
jo
imul
in
repz
test
imul
mov
popa
xlat
incb
mov
fbld
push
int
jmp
cs
jnp
jg
mov
mov
xchg
dec
mov
add
test
dec
gs
fistpll
mov
daa
mov
lds
sbb
pop
scas
ficomps
mov
in
jle
adc
iret
cmp
repz
clc
pop
stos
dec
mov
into
mov
jne
xor
aam
out
xor
cmpsl
movsb
test
popf
adc
jg
mov
cmpsl
jl
jnp
test
push
mov
and
dec
scas
push
cmpb
inc
test
mov
xchg
rorb
std
adc
xchg
lret
adc
sbb
das
and
lcall
cmpsb
mov
bound
xchg
pop
nop
movups
sub
shrl
mov
loop
lahf
test
jmp
lret
push
mov
mov
push
loop
push
mov
jns
jbe
dec
aad
jecxz
ja
fldt
test
dec
es
push
out
sbb
pop
pop
scas
or
sub
mov
rcrl
sbb
test
mov
xchg
push
adc
and
mov
cmp
lods
call
xor
lret
inc
shlb
in
mov
scas
pop
jnp
fsubrs
jno
movsb
fdiv
sub
jnp
adc
js
push
lods
and
icebp
je
repnz
lea
hlt
repnz
sbb
movsb
pop
and
out
xor
vorps
ds
mov
aas
dec
pop
cmp
and
push
jno,pn
mov
lcall
jne
in
mov
push
inc
cs
pusha
bswap
call
xor
in
scas
and
mov
pop
push
test
ret
mov
neg
jle
xchg
xchg
xrelease
mov
xchg
stc
cmp
jecxz
addr16
xchg
pop
and
cmp
add
push
jbe
shlb
xchg
pop
jnp
cmp
faddl
xchg
xchg
jo
push
out
cwtl
cld
movsb
imul
mull
test
jnp
enter
xor
mov
je
out
pop
ljmp
jne
dec
dec
inc
push
mov
repz
xor
lods
clc
roll
outsb
fdivs
push
sub
testb
mov
fmull
aam
loopne
jecxz
dec
pop
xor
xlat
dec
mov
int
mov
xlat
int
stc
scas
aaa
lea
fdivrs
sbb
push
dec
pop
imul
pop
pop
cs
pop
in
cld
adc
sub
cld
loop
shl
jb
rcrb
push
fmulp
ds
fists
int
cmp
lret
xchg
ljmp
xchg
cli
out
mov
cld
add
repz
ret
mov
jne
pushf
insb
mov
pop
repnz
iret
inc
inc
sub
xlat
in
dec
or
cmc
lds
mov
and
pushf
loope
jecxz
and
js
movsb
push
xchg
and
mov
sbb
xlat
xor
test
insl
pop
aaa
hlt
mov
jb
out
leave
iret
movl
movsl
stos
mov
mov
xchg
cmpsl
out
mov
movsb
ss
xor
adc
gs
je
jl
movsl
jmp
jp
out
sbb
or
adc
les
movsb
or
cmpl
out
add
test
mov
dec
sub
mov
ja
pop
and
mov
add
push
into
bsf
pop
sarb
dec
loope
push
jno
push
pop
fisubrs
ljmp
ret
adc
jno
ja
pop
sub
mov
sub
fistpll
fnsave
fiaddl
popa
pushf
sahf
andl
movsb
in
adc
cmp
pop
int
out
push
out
in
les
test
cltd
mov
inc
jg
ja
xchg
dec
mov
fs
xchg
mov
movsb
movsb
fcoml
xchg
push
iret
dec
int3
loopne
js
fisttpll
add
cmp
pushf
pop
fstpl
nop
movsl
pushf
subb
test
stos
movsl
lods
mov
rclb
lea
pop
push
inc
stos
pop
lea
sahf
dec
cli
cli
mov
adcb
cmpl
outsb
xor
cmpsb
mov
mov
jns
lock
in
cmp
imul
push
pop
ja
sbb
and
mov
add
cmp
xor
mov
je
leave
push
aas
subl
add
je
rcrl
iret
std
aad
or
das
or
mov
mov
orl
mov
mov
adc
out
jmp
sbb
imul
mov
sub
imul
mov
jg
pop
call
iret
ja
xlat
xchg
fcom
jl
subb
xor
mov
push
gs
cmp
adc
xchg
xchg
aad
or
and
inc
xlat
sub
mov
scas
mov
push
adc
push
fs
addr16
mov
rorl
and
jo
test
xchg
insb
xchg
adc
inc
das
fwait
daa
or
fdivp
lcall
icebp
xchg
int3
jge
jl
adcb
sub
mov
fdivl
fcmovne
and
mov
test
adc
dec
sbb
sbb
inc
sub
xchg
pop
jecxz
mov
and
rorb
sbb
repnz
lock
xor
sahf
ret
in
fs
pop
adc
pop
or
loopnew
cmp
subl
xchg
imul
pop
jns
fisubs
push
adc
stc
mov
push
mov
aad
mov
and
das
rcrb
mov
and
vunpcklps
lret
shlb
lahf
test
cmp
movsl
ljmp
popa
int
sub
sub
stos
fisubrs
inc
sub
mov
hlt
ljmp
adc
cltd
shll
je
jge
mov
cmp
mov
adc
ljmpw
addr16
gs
lahf
xor
mov
adc
sub
fdivl
imul
mov
sub
hlt
sub
imul
imul
gs
inc
or
repnz
mov
jb
mov
nop
mov
add
ljmp
adc
push
pop
mov
jp
sub
sub
pop
gs
adc
mov
inc
mov
cmp
adc
lret
out
push
pop
mov
enter
xlat
enter
test
and
mov
adc
adc
shll
lret
les
mov
pop
and
and
movsl
lret
ja
xchg
outsb
mov
mov
hlt
fcoml
enter
stos
or
sbb
inc
push
imul
movsb
inc
cs
pusha
and
inc
shl
mov
and
ljmp
out
in
mov
daa
mov
sarl
in
sbb
popf
mull
scas
and
mov
jmp
pop
fwait
sub
fld
cmp
mov
xor
data16
push
jl
in
adc
sub
mov
rcrb
jmp
xor
jbe
add
stos
mov
pop
sbb
arpl
and
inc
inc
mov
xchg
test
lods
adcb
ds
xchg
push
test
mov
adc
xor
aas
add
out
es
test
and
out
das
mov
xchg
out
or
aam
out
and
fistpl
push
popa
inc
lret
xlat
inc
and
leave
rol
xchg
xor
and
jne
lcall
ficoml
ljmp
cmpsl
lret
hlt
in
dec
adc
idivb
adc
mov
push
ret
jno
stos
dec
push
cmp
mov
xchg
fisttpl
pop
mov
xchg
arpl
daa
rcll
xchg
ja
or
inc
inc
mov
movsl
sarl
adc
fisubs
mov
add
mov
xor
and
mov
int3
test
cld
fldcw
dec
push
push
mov
aam
push
divl
fs
dec
cld
jbe
in
push
or
data16
inc
add
mov
xchg
inc
cmp
push
xlat
in
fstpl
in
ret
mov
sub
mov
cld
xor
movsl
add
push
jp
cmp
adc
mov
mov
dec
sbbl
or
repz
mov
sub
icebp
mov
out
xlat
push
das
jmp
scas
test
fwait
es
inc
add
mov
cmpsl
int
xor
jmp
lcall
in
jae
cltd
adc
shrb
shlb
dec
add
jns
push
inc
sub
cmp
ret
dec
inc
push
mov
sbb
shll
cltd
push
cmp
jae
pop
sbb
jge
mov
sti
testl
or
dec
lret
xor
jg
lds
lea
and
ss
push
add
aas
xchg
outsl
jp
mov
pop
lcall
ror
pop
movsb
pop
orb
mov
cmp
inc
je
pop
and
fsubp
sub
and
dec
adc
and
mov
mov
jp
and
fidivl
sbbl
idivb
sub
push
dec
pop
cs
jnp
clc
ljmp
in
add
mov
xchg
push
xlat
mov
xchg
pushf
lock
iret
xchg
idivl
movsl
or
lret
sbb
sbb
inc
leave
loop
divl
jb
push
push
mov
andl
add
ffreep
mov
in
add
imul
add
hlt
ds
aaa
and
out
adc
aaa
les
pop
ljmp
mov
mov
sbb
imul
and
and
repz
daa
movsl
pop
dec
insb
movsl
jle
sbb
push
mov
or
mov
hlt
xor
inc
ret
add
incl
push
ss
dec
scas
push
add
push
adc
mov
sbb
popa
cmp
cmp
push
mull
xor
orl
out
negb
jecxz
mov
push
orb
fs
insl
testb
dec
sahf
push
mov
mov
movsl
pop
mov
mov
mov
mov
sub
pop
sub
dec
int3
mov
adc
push
mov
mov
insl
xchg
sub
add
xchg
add
push
jbe
mov
add
push
and
insl
adc
mov
inc
fs
xor
pop
dec
scas
cld
inc
inc
lcall
aaa
inc
insl
add
das
loopne
loopne
addb
push
rcl
enter
mov
icebp
push
push
and
xchg
fisttpl
cmc
mov
outsb
rcr
xchg
rorl
nop
adc
lea
cmp
cmpsb
scas
or
sar
outsl
rolb
loope
push
mov
sbb
cmp
xor
push
jle
scas
fidivrs
xor
or
cmpsl
inc
mov
loop
cmp
jmp
xchg
out
mov
jge
mov
xchg
std
imul
stc
imulb
push
lea
sbb
jns
imul
cltd
cmove
push
xlat
dec
lret
insb
jge
subb
cmpsb
adc
popf
mov
push
cmpsl
rorl
jns
rolb
add
cmp
call
sbb
sub
fwait
dec
outsl
xchg
cmp
jle
bound
mov
hlt
mov
push
and
cmp
movsl
fmuls
mov
sbb
aaa
push
in
scas
sub
fs
and
push
cmp
inc
mov
pop
add
sub
or
add
cmova
sbb
mov
xchg
mov
gs
jnp
adc
adc
and
jle
cld
popa
iret
mov
ljmp
mov
adc
comiss
jmp
stc
xorb
mov
aaa
or
xchg
popa
test
mov
dec
cmc
lods
not
mov
sti
mov
clc
imul
mov
add
jns
test
in
push
neg
push
mov
movsl
ror
pop
jp
add
adc
inc
popa
aam
shrb
and
or
cmp
cmp
call
lea
lock
lods
fstpl
addr16
push
and
jecxz
dec
fistps
sbb
sub
push
mov
sbb
sbb
lcall
ror
push
lret
pop
and
inc
fmul
iret
fxch
in
jle
popa
lcall
adc
adc
dec
shrb
xchg
jbe
push
incl
pop
adc
ss
cmpsl
and
xor
stos
dec
xor
jle
scas
cld
pop
mov
cwtl
fwait
call
hlt
repnz
xchg
lods
lret
leave
mov
xor
xchg
xor
sub
mov
rcrl
adc
push
cmp
mov
idivb
push
mov
mov
popf
in
cmpsb
scas
cmp
xor
sbb
test
jmp
push
fsubrl
mov
pusha
mov
and
or
push
cmpb
in
sbb
out
xchg
rcrb
rcrl
or
mov
cmp
cmp
in
adc
add
imul
es
gs
lods
adc
data16
int
outsl
sbb
loope
inc
pushf
cmp
fcomps
repnz
add
jmp
popa
jp
xor
mov
ret
mov
adc
add
subb
ljmp
stos
pop
filds
xor
push
cli
pop
sbb
and
cwtl
sbb
ja
cwtl
scas
sub
mov
and
xlat
add
push
aad
fiaddl
cmc
ret
cmpsl
cmc
adc
dec
cmp
xor
sbb
pop
jns
mov
jo,pt
popf
aam
popa
mov
inc
nop
negl
add
stos
ljmp
aaa
icebp
mov
loopne
xchg
jmp
jmp
mov
in
pop
iret
lods
dec
push
test
add
adc
ret
leave
adcb
pop
adc
movsb
imul
nop
jle
in
xchg
sbb
jbe
add
xchg
cmp
sbb
add
jecxz
cmp
shll
enter
nop
sub
dec
in
pop
add
mov
aam
xlat
fldl
roll
int3
inc
gs
ja
inc
push
jae
xchg
cmp
decl
adc
imul
imul
mov
cmp
pop
into
push
ret
xchg
dec
mov
dec
sub
dec
xlat
mov
fsub
push
jge
mov
cmpsl
out
movsb
leavew
rclb
mov
push
shrl
hlt
pusha
dec
cmp
cld
imul
cmpsb
icebp
mov
das
or
mov
in
adc
addl
mov
pop
mov
cmp
add
in
out
inc
aam
mov
jno
lcall
daa
mov
dec
je
mov
inc
es
adcb
xchg
mov
dec
sub
ret
gs
sub
iret
sahf
jg
loop
pop
fisubl
inc
inc
mov
sahf
outsl
lods
xchg
mov
gs
or
test
mov
xchg
test
sbb
fstpl
lods
lcall
xchg
mov
sbb
mov
outsl
lcall
cmp
les
rcl
mov
mov
inc
stc
pop
testl
mov
roll
mov
xor
pop
xchg
pop
sub
adc
pop
push
add
sahf
xchg
icebp
mov
sbb
dec
test
cltd
insb
aas
movsb
es
or
pop
jne
sbb
mov
adc
jo
add
mov
push
hlt
arpl
jne
mov
sti
int
mov
push
xchg
cltd
call
loop
sbb
iret
loope
out
jno
pop
sti
sti
push
add
add
out
ds
push
mov
idivb
clc
imul
pusha
insb
fnstsw
pop
sbb
lret
bnd
push
mov
sti
movl
test
lret
lods
cmp
orb
push
bound
and
and
stos
cwtl
inc
sbbl
xlat
sub
cmp
icebp
xchg
stos
or
inc
ret
inc
add
rorb
mov
adc
les
xor
test
inc
sar
sbb
inc
sbb
pop
pop
dec
cmp
out
dec
in
mov
cmp
add
lock
xchg
xor
lret
sub
xor
shll
loopne
cmp
in
jecxz
push
sub
int
hlt
aaa
sub
mov
or
adc
cwtl
pop
sbb
notl
call
ja
mov
cli
dec
fdivrs
cld
inc
sub
sbbb
out
xor
add
mov
push
jne
in
sti
mov
mov
pop
pop
mov
inc
es
and
sbb
pushf
mov
stos
aaa
xchg
adc
in
inc
push
cwtl
jnp
add
mov
dec
les
jecxz
cmp
xchg
enter
jp
rcll
mov
mov
mov
push
sbb
mov
adc
dec
add
add
shlb
add
sub
getsec
cmpl
cltd
repz
xchg
sbb
out
fsub
mov
flds
fwait
jge
scas
lods
imul
hlt
mov
leave
movsl
cmp
ss
mov
jnp
lret
lods
nop
xor
pop
sbb
cmp
fcoms
jp
loopne
sbb
push
fmull
es
fsubrl
dec
fistpll
mov
and
xlat
aad
mov
inc
push
adc
jge
in
or
sbb
das
inc
xlat
mov
push
add
popf
xor
jg
mov
inc
mov
sub
inc
dec
lds
jmp
dec
cmp
xchg
jmp
outsb
aas
push
cwtl
fwait
pop
pop
fs
imulb
loop
mov
fnstsw
sub
incl
cmc
popf
outsl
popf
xchg
mov
stos
das
inc
sbb
shrb
add
cld
lret
jge
loopne
in
inc
push
flds
cs
fwait
add
and
jne
shr
lods
in
iret
fiadds
and
jne
inc
mov
or
data16
lret
repnz
pop
add
imul
sbb
popa
imull
cmpsb
pop
pop
mov
xchg
mov
inc
cmc
cmp
mov
stos
test
jge
xor
dec
in
pop
loop
fidivl
sti
in
xchg
inc
add
lret
and
xchg
fxch
push
test
jl
popa
repnz
inc
or
pushf
add
aaa
mov
xor
scas
mov
and
leave
inc
dec
fmull
mov
adc
insl
inc
in
dec
mov
push
add
jbe
dec
lods
fldenv
push
loop
movsb
test
adc
mov
stc
jle
sbb
pop
mov
push
push
pop
mov
lcall
push
mov
sub
xchg
divl
les
pop
jp
jecxz
pushf
xchg
fnstcw
xchg
add
out
adc
sbb
mov
add
adc
pop
in
out
mov
jle
push
jbe
into
cmp
stc
mov
cmpsb
xchg
mov
mov
mov
or
sbb
mov
addr16
and
jg
xlat
inc
addps
push
xor
test
test
sub
or
rolb
fcompl
xchg
lock
jb
mov
pop
adc
mov
das
cmp
sub
cmp
xchg
in
pop
or
xor
mov
mov
lahf
or
mov
jno
add
sbb
scas
fisttpll
cmp
xor
insb
or
xchg
lcall
adc
dec
je
out
comiss
shl
cli
xchg
cmp
mov
les
cmp
gs
cli
or
loopne
jno
mov
jle
jne
ss
in
sub
cmp
pusha
mov
dec
cmpsb
add
ret
mov
pushf
rorl
sti
shlb
jbe
ss
or
jo
fwait
jno
mov
cli
fbstp
cmp
jmp
pop
cmpsb
jge
cmpsl
mov
fdivl
addr16
insl
gs
bound
push
lahf
popf
or
jmp
or
mov
push
mov
clc
adc
and
jae
xor
cmp
sti
pop
dec
gs
mov
adc
cmp
xchg
xchg
inc
inc
ja
clc
cwtl
mov
aas
mov
shll
lret
mov
hlt
xor
ss
lcall
dec
adc
dec
sub
jecxz
fisubs
bound
loopne
mov
sbb
push
cli
inc
test
adc
in
call
dec
ss
xchg
out
push
inc
popa
or
imul
pushf
gs
jno
add
or
icebp
pop
test
push
mov
xlat
mov
mov
mull
mov
add
ljmp
stos
mov
rclb
add
xchg
dec
jne,pn
imulb
sbb
mov
inc
imull
push
lret
movsb
out
in
jbe
je
shrb
sbb
iret
ss
cmc
std
andb
outsl
test
stc
inc
out
ds
mov
ret
ds
jg
icebp
ficoms
dec
mov
xorl
xchg
shll
incl
inc
and
adc
lods
pop
into
adc
mov
fs
loopne
xchg
adc
add
mov
push
cli
xchg
int
push
int
dec
mov
push
lods
je
mov
into
repz
clc
outsl
mov
cmp
lods
fidivrl
add
pushf
xor
ror
nop
enter
and
mov
shl
mov
cmp
push
int
popf
enter
lods
ss
hlt
pop
sbb
push
pop
arpl
cmp
mov
andl
mov
bound
in
out
imul
popf
paddsb
pop
pop
shrb
es
push
addr16
out
adc
and
movb
in
cmp
idivl
push
push
and
arpl
clc
cld
scas
add
mulb
push
cmp
imul
gs
bound
insl
xor
aaa
rcrb
inc
mov
and
mov
test
jecxz
xchg
testb
sub
jle
into
ds
testb
notl
mov
out
lock
push
xlat
stos
test
add
fimuls
sbb
mov
out
mov
ljmp
inc
jo
or
pop
clc
mov
je
mov
or
ret
lret
sti
pop
mov
inc
cmpsl
and
into
sub
jl
add
dec
add
stos
and
push
leave
daa
push
mov
outsl
xor
mov
mov
push
callw
mov
int
mov
add
je
lds
xchg
push
add
mov
nop
nop
inc
scas
and
pop
filds
and
es
xchg
les
xchg
js
daa
xor
mov
sbb
pop
pushf
sub
adc
jecxz
and
and
aad
iret
cs
mov
jge
enter
mov
in
sub
jae
adc
shrl
je
or
xchg
sub
call
mov
push
cmp
xchg
sbb
add
cmpl
sti
mov
mov
fmuls
xor
jb
pusha
mov
adc
mov
push
mov
in
mov
loope
and
xor
stc
int
int3
add
cltd
hlt
or
cmovb
popa
das
sbb
imul
dec
or
shl
xlat
cmp
mov
aam
clc
mov
jg
shr
mov
mov
not
push
shlb
cltd
dec
cli
int
stc
xlat
icebp
mov
int3
and
enter
jp
inc
cld
lock
mov
or
lods
mov
outsl
lret
pushf
fildl
sub
inc
sub
int
xchg
fnstenv
xchg
scas
leave
out
out
or
add
sbb
cmpl
xlat
dec
add
lea
cmp
outsb
mov
jg
mov
or
pop
ret
rcrb
cmpsl
mov
jo
dec
jno
xor
iret
mov
and
test
repnz
mov
dec
jbe
loopne,pn
movl
inc
fidivl
mov
pop
enter
cmp
cmpsl
sbb
sbb
mov
xchg
jp
jecxz
aam
cmp
pop
lret
xchg
sbb
ds
bound
mov
fisubrs
pop
gs
jle
jns
cmpsl
fistpl
clc
add
adc
and
mov
sub
mov
xorl
xor
rorl
mov
push
test
xor
iret
call
cld
int
iret
and
call
dec
push
and
fcomip
in
shrl
mov
cli
mov
insb
aaa
cwtl
xor
fisttpl
xchg
mov
js
cmc
cli
jo
cli
movsb
rol
push
in
pop
in
sbb
popa
adc
push
mov
mov
xor
dec
imul
sbb
pop
loopne
adc
cmc
pop
push
and
test
cs
sub
imul
push
adc
jns
and
lahf
mov
ficompl
aas
movsl
mov
in
inc
sbb
stc
outsb
subb
mov
adc
insl
clc
stc
jne
pop
adcb
adc
outsl
jbe
cld
js
cmp
dec
std
aam
pusha
fs
sti
fs
xchg
std
nop
aaa
push
pop
cmpsb
shrb
outsb
sbb
cmc
dec
cmp
xchg
out
mov
insl
dec
dec
jl
jnp
sub
sbb
ljmp
shll
push
imul
mov
ret
mov
add
inc
mov
fsubrs
out
jg
clc
inc
testl
rcll
or
and
cmp
cli
mov
inc
ror
adcl
pop
mov
int3
inc
loopne
test
rol
adc
ret
sarb
pop
cwtl
adc
pusha
outsb
nop
jecxz
adc
xlat
stos
ljmp
cmp
push
or
pushf
idiv
sbb
cwtl
sub
insb
sub
sar
cmp
push
shl
cmp
jae
dec
loop
xor
jb
jge
rcll
andb
adc
test
mov
inc
out
adc
add
loopne
int3
stc
inc
push
xor
push
pop
out
push
movsl
ficoml
pop
mov
orb
push
xor
xor
jnp
fmul
push
xchg
sub
mov
imul
mov
jmp
in
orb
ljmp
mov
xor
out
jp
push
aas
mov
jno
xchg
pop
cs
in
cli
mov
jno
adc
cmpb
ds
mov
sub
cmp
test
and
cwtl
jno
fistpll
popa
pop
mov
or
aam
iret
mov
sbb
ret
sbb
std
add
jbe
cmp
mov
pop
imul
cs
out
jle
call
push
push
jge
xchg
pop
cmp
jmp
inc
addr16
aad
adc
cmp
lea
sub
insb
scas
int3
cld
jecxz,pn
lret
mov
fmulp
jl
adc
mov
sub
jmp
mov
das
jne
or
cmpsb
mov
mov
in
sbb
push
mov
and
or
pop
xchg
add
dec
dec
jbe
bound
inc
insl
mov
sbb
mov
dec
adc
mov
mov
mov
fisubrs
jns
das
add
sub
dec
data16
mov
repz
push
mov
xchg
mov
jne
inc
orb
pop
icebp
jecxz
xchg
out
xchg
mov
adc
stos
and
dec
add
xchg
bound
lods
cmpsl
mov
sbb
dec
adc
mov
fcmovu
mov
or
imul
sub
ret
and
lahf
cmp
outsb
arpl
int3
inc
mov
sbb
and
jge
mov
lods
add
sbb
out
lret
push
mov
add
cmp
cmp
push
or
xchg
cli
jmp
jnp
out
mov
sub
mov
mov
xchg
dec
pop
call
or
sbb
iret
pop
inc
insb
dec
les
popa
cmp
lea
fwait
mov
rep
clc
mov
xchg
fwait
out
push
mov
xor
sub
cmp
jne
fidivs
push
insb
xor
push
packssdw
sbb
hlt
xchg
mov
or
dec
pop
push
and
xchg
pusha
pop
nop
cmpsb
pop
sbbl
neg
jns
cmp
daa
into
mov
jmp
loope
sysexit
aas
and
mov
mov
daa
iret
daa
ret
scas
jno
mov
sbb
dec
mov
cmpsl
pusha
loope
add
jbe
popa
lahf
cmpsl
jmp
adc
mov
push
sbb
js
pop
stos
mov
sub
aad
push
xchg
cmpsl
out
in
inc
lret
mov
mov
jecxz
in
cmc
push
les
xor
cmpsl
icebp
pusha
ljmp
mov
in
jns
scas
cmp
aam
lods
fsts
ss
sbb
cmp
jle
inc
inc
adc
lret
cmp
and
pop
cltd
addr16
scas
push
jle
cmp
out
push
sbb
mov
mov
mov
jo
insb
jnp
dec
out
loope
addr16
jge
add
jmp
push
mov
adc
outsb
test
mov
fildl
cs
cmp
sbb
push
add
mov
and
clc
xchg
test
movsb
cmpsl
lods
cmp
lret
xchg
es
sbb
shlb
ret
jg
cmp
fwait
test
xchg
je
add
inc
mov
adc
inc
xchg
subl
rcll
jnp
mov
push
insl
jecxz
sbb
adc
lret
adc
jp
insb
pop
dec
cmp
inc
shrl
xchg
adc
xor
int
mov
add
ja
pusha
mov
sub
and
notb
push
push
insl
push
cmpsl
test
or
shl
and
pop
pop
outsl
mov
adc
adc
jge
clc
test
out
fcom
mov
mov
rolb
out
inc
and
aaa
daa
daa
gs
movsb
pop
out
adc
out
les
addr16
push
cmpsb
jbe
sbb
daa
xor
flds
mov
lret
push
pop
and
xor
cmp
push
dec
hlt
pop
popa
movaps
ret
arpl
imul
sbb
xor
push
inc
jg
dec
push
ss
lahf
loopne
push
jnp
enter
push
push
mov
pop
aam
aad
xchg
lock
das
ss
fxch
jle
xor
sahf
das
mov
jp
jle
push
data16
push
push
lock
cmp
sbb
jp
mov
cmp
mov
xor
sub
mov
fninit
lea
je
roll
aad
imul
jp
mov
jae
xchg
jae
sub
in
adc
mov
cmp
iret
loope
dec
es
lret
int3
scas
cmp
in
mov
punpcklwd
pop
dec
push
data16
in
jle
stc
push
leave
outsl
movsl
jne
mov
xor
sarl
jno
fucom
push
dec
add
lods
jg
xchg
pop
fldt
sbb
jnp
add
call
in
call
mov
mov
sbb
xchg
mov
cmp
pop
fdivl
sti
lds
mov
fs
ror
mov
fistpll
orl
pop
push
shll
and
insb
lahf
mov
dec
xchg
in
and
xor
lcall
xchg
inc
fisttpll
aas
xor
test
sub
adc
xor
pop
sbb
out
inc
pop
mov
sbb
push
lock
adc
pop
push
mov
jl
inc
xchg
push
enter
sar
jae
xor
jne
cld
jnp
add
shlb
das
push
sub
mov
cmp
jne
pop
push
xor
movsl
cmp
sbb
std
lds
notl
mov
dec
mov
enter
mov
inc
fidivrs
int
jns
cs
inc
daa
lods
jl
repz
aaa
je
scas
jle
xchg
ss
fisubl
jns
fidivrl
pusha
push
push
sbb
dec
into
mov
xchg
push
xchg
ljmp
sbb
nop
scas
sarb
in
pushf
cmpsl
pop
outsb
cmpb
ja
sbb
inc
mov
cmpxchg
or
adc
gs
sbb
mov
sub
in
das
pop
bound
movsl
or
bts
mov
cmp
scas
jno
sbb
popf
mov
stos
dec
xchg
ljmp
sbb
and
jne
inc
out
cmpsl
jmp
jecxz
lods
test
dec
xor
ja
rclb
call
cmpsl
mov
add
sub
push
jmp
inc
mov
inc
inc
fdivrl
sub
icebp
push
int3
adc
lret
lret
imul
pushf
jo
movsl
mov
popf
sbb
sub
movsl
xor
xor
mov
sbb
imul
mov
fs
clc
jne
jb
cli
xchg
cmc
xor
cmp
je
jg
aaa
xor
sbb
cmc
sbb
jl
es
jb
in
repz
aas
sahf
mov
mov
or
inc
subl
gs
xor
jns
inc
inc
add
mov
jo
mov
sahf
jnp
jg
mov
sbb
sub
sub
adc
push
sahf
mov
or
push
jnp
test
or
test
sub
popf
adc
jne
mov
sti
sahf
mov
sbb
addr16
outsb
sub
add
fidivs
sbb
mov
call
dec
test
push
adc
mov
repz
mov
ficompl
mov
cmp
out
rcrb
pop
lods
ret
clc
loopne
stos
jge
jno
and
sarb
test
ds
sub
push
pop
out
fistpll
test
and
jbe
inc
test
push
fadds
es
or
sub
sub
in
inc
sarl
lods
lahf
mov
push
lret
sbb
xor
xchg
add
pop
push
adc
cmc
add
cmp
mov
jp
add
dec
filds
mov
imul
repnz
test
rol
xlat
negl
adc
inc
mov
jge
push
mov
mov
aad
in
sbb
test
lock
fsubl
inc
and
mov
jmp
mov
jo
dec
cmpsl
pushf
mov
jle
and
dec
sbb
and
es
push
popf
test
scas
cmp
push
sbb
mov
mov
mov
jbe
adc
cmp
mov
rorb
jb
xor
aam
xor
cmp
dec
dec
and
adc
stos
out
mov
push
data16
xor
mov
jle
fsts
out
ds
jo
sub
push
test
sbb
stos
lods
cld
adc
xorb
in
mov
push
out
insb
jp
sub
dec
dec
ss
stc
cmp
dec
add
fsubs
inc
cli
in
in
adc
xchg
xchg
xchg
push
cmp
loop
stc
xchg
cltd
lock
cld
sub
pop
adc
adc
cmp
jo
fdivr
test
inc
movsl
pop
mov
jg
adc
mov
fimuls
pop
dec
mov
sub
in
xchg
lret
movsl
test
popf
xchg
repz
dec
mov
test
xlat
aam
jno
mov
and
xchg
dec
and
test
mov
add
add
insl
loop
loopne
in
int
js
es
test
push
mov
or
pop
push
ja
dec
and
inc
mov
or
in
push
push
jle
inc
into
mov
int3
cmp
sbb
inc
nop
jg
push
fnstenv
jbe
les
bound
sub
outsb
xor
xchg
push
mov
js
dec
pop
adc
xchg
aad
sub
and
or
ficoml
fs
sub
fiaddl
cmp
inc
adc
divb
clc
mov
mov
test
xchg
push
sub
dec
js
je
mov
add
push
dec
lcall
xchg
mov
shll
xor
mov
mov
lds
in
es
xor
xor
sub
daa
ffree
and
push
aad
push
orl
push
adc
xchg
mov
loopne
xor
sub
sbb
dec
ljmp
push
pextrw
pop
inc
xchg
sub
cmp
je
or
es
add
pushf
dec
push
lock
out
enter
and
push
pop
adc
or
mov
shl
xchg
or
dec
dec
and
pop
mov
mov
cltd
jl
insb
jnp
or
out
mov
movl
inc
cmpb
push
mov
pop
sbb
dec
and
and
add
mov
mov
sbb
arpl
fucomp
clc
popa
hlt
arpl
adc
xor
pop
xor
xor
nop
pop
movsl
test
sub
xchg
in
daa
insb
iret
adc
or
int
sbb
lret
mov
push
sarl
or
movsl
push
jne
dec
nop
adc
icebp
push
and
add
pop
arpl
in
loopne
movsl
push
int
sub
jecxz
push
imul
in
xchg
mov
outsl
and
mov
inc
dec
mov
rcrb
xchg
jbe
shlb
imul
and
xlat
or
sub
imul
sub
pop
std
jno
sub
mov
lea
cltd
xlat
fnsave
mov
push
mov
mov
pop
xchg
pop
adc
addr16
out
popa
jle
dec
dec
repz
cmp
pop
cmpsb
xchg
ds
xor
test
cs
pop
pop
jb
sbb
lods
and
nop
sbbb
cmp
inc
add
mov
ret
push
mov
sahf
and
jno
or
enter
mov
add
out
popa
mov
push
inc
aam
dec
xchg
ljmp
mov
cs
jno
test
sbb
sbb
adc
ret
push
push
push
cmpsl
push
dec
outsl
iret
jne
sub
add
jge
mov
lahf
pop
xlat
hlt
repnz
lahf
clc
or
cld
xchg
pop
cmc
xchg
test
xchg
jne
pop
sub
mov
into
adc
es
cmc
stc
sub
rcrb
mov
inc
adc
repz
iret
inc
dec
adc
and
mov
leave
cmp
outsl
mov
jg
pusha
sbb
je
sub
mov
inc
push
shll
jge
xor
inc
sbb
mov
cld
int
leave
aas
xor
sbb
sti
mov
sbb
mov
and
xor
adc
out
push
mov
popf
push
mov
push
movsl
cmp
sub
cltd
push
jle
icebp
ficoml
sbb
cmp
pop
push
mov
popa
popf
inc
and
out
dec
aaa
xchg
sub
stos
and
aas
leave
and
int
ja
mov
imul
pop
mov
cmpsb
loope
push
stos
dec
adc
mov
push
mov
lcall
pop
jb
mov
das
mov
fsubrp
mov
jns
or
in
push
mov
mov
push
and
mov
inc
push
sbb
pop
pop
dec
lcall
or
push
in
jbe
cltd
mov
movnti
es
cmp
decl
dec
imul
es
out
pop
jb
jnp
jmp
mov
pop
or
mov
clc
pop
es
pusha
mov
out
jl
rorb
xchg
inc
add
divl
add
in
int3
nop
scas
stos
cld
adc
mov
mov
rcrb
adc
xchg
fisubrl
inc
adc
lret
cltd
pop
adcb
aaa
sub
pop
adc
jno
pop
les
lahf
pop
cmpsb
and
or
ror
js
enter
testb
leave
adc
in
or
test
mov
or
sbb
imulb
movsl
insl
jp
xchg
inc
dec
push
sub
mov
icebp
push
imul
inc
cmpsl
jg
int
in
mov
stos
cmp
cmp
test
mov
xor
icebp
jp
addb
push
mov
push
pop
stos
subb
add
mov
dec
pop
xchg
pop
xor
test
add
push
cmp
test
jg
sbb
dec
mov
cli
add
cmp
xchg
sbb
push
adc
pop
mov
repnz
or
pop
or
push
push
or
push
jl
push
ss
js
xchg
xchg
add
cmp
jbe
xchg
icebp
pop
ret
jmp
daa
mov
leave
mov
jp
and
aad
lcall
mov
mov
popf
shl
enter
push
pop
mov
sbb
jbe
inc
sub
jnp
lds
pop
mov
or
daa
lods
mov
inc
std
roll
loop
cltd
inc
xor
mov
cmp
repz
std
bound
jge
fcoml
jmp
cmp
cmpsl
pop
jno
ds
iret
jb
das
jp
aaa
pop
cmpsl
dec
sub
push
jecxz
fs
js
nop
add
lods
jmp
popf
jl
add
dec
mov
pushf
lret
push
in
movsl
cmp
push
inc
insb
xchg
and
mov
xor
dec
xchg
sub
icebp
adc
inc
cmp
or
sbb
push
cwtl
adc
inc
or
test
xchg
lahf
xchg
mov
add
mov
mov
xchg
shlb
jns
sub
mov
xor
mov
test
mov
ds
fcomps
pop
sub
aas
mov
fdivrs
jge
xchg
mov
mov
mov
int
dec
iret
inc
movsb
sahf
stos
xchg
adc
lcall
pop
xor
hlt
popa
mov
pop
inc
leave
push
fs
stos
adc
frstor
mov
mov
xor
xchg
inc
sbb
and
cld
sbb
xor
pop
mov
xchg
push
and
adc
in
xor
mov
je
sbb
mov
sti
imul
scas
xchg
ds
fcmovnbe
movsb
imul
fwait
shlb
fcmovb
cmp
xchg
int3
dec
dec
aas
dec
int3
hlt
dec
iret
gs
shrl
js
dec
lcall
sub
out
sub
hlt
scas
jle
xchg
es
and
xor
cwtl
in
sti
xchg
xor
mov
pop
decb
cmp
test
pop
inc
das
xchg
in
push
out
out
inc
push
cmp
mov
push
and
inc
lret
xor
loopne
or
sti
cmp
sub
adc
mov
ficoms
xorb
lcall
inc
dec
mov
cwtl
loop
cli
pop
aam
ds
dec
sbb
aaa
ret
daa
push
mov
incb
aaa
pop
sub
xchg
jae
rcl
mov
or
pop
jmp
jno
xchg
ljmp
add
push
push
or
push
add
frstor
xchg
movsb
bnd
icebp
pop
mov
jns
test
push
xchg
in
add
insb
loope
mov
sbb
jb
push
xor
jnp
inc
shll
outsl
sbb
out
popf
orl
push
xchg
and
daa
je
movsl
lds
aaa
hlt
mov
test
mov
pop
out
div
mov
cli
popf
xchg
jle
inc
push
xlat
dec
and
push
xchg
cltd
negb
nop
sub
int3
cmovbe
cmp
repnz
mov
xchg
sbb
sbb
stos
cli
int
insb
inc
sti
sub
clc
add
or
pop
fwait
mov
push
lret
add
in
cmp
call
mov
sub
ret
pop
andb
mov
jmp
adc
mulb
add
or
fists
cmc
and
xor
mov
insb
mov
pop
mov
lock
mov
dec
mov
xor
jg
lret
push
or
mov
mov
dec
mov
aad
lds
sahf
lods
add
cmpsb
and
ret
push
push
sbb
xchg
inc
fidivs
inc
outsl
loopne
and
aam
jno
outsb
push
xor
push
arpl
repnz
lock
xchg
pop
xor
dec
mov
and
nop
leave
and
fldenv
cld
push
in
sbb
arpl
and
cmc
push
mov
sub
int
out
test
sahf
jle
inc
sbb
into
jo
xchg
mov
adc
jge
inc
add
ljmp
les
mov
push
mov
pop
dec
fwait
pop
mov
inc
es
add
bound
call
cli
outsb
ret
jmp
jmp
shr
repz
in
sub
xor
stos
test
popf
lock
rcl
mov
mov
pushf
xchg
lea
fcoms
push
add
outsb
outsl
test
lret
xorl
jle
sub
daa
xchg
xor
jnp
add
jno
leave
sahf
xchg
jmp
ljmp
enter
movsl
mov
stc
pop
movsb
mov
jl
push
mov
xor
nop
in
push
outsb
out
dec
andb
fistpl
imul
call
add
movsl
lret
vxorps
scas
call
xchg
leave
shrb
fistpl
ss
sub
dec
jo
lea
fwait
into
pusha
cmp
fnstenv
lods
sbb
rcrb
pop
hlt
pop
cmp
std
lahf
pop
ljmp
ds
jmp
dec
xor
adc
push
push
inc
lret
fsts
cltd
mov
pop
inc
loope
jmp
fstpl
xchg
loope
repz
lahf
cmpsb
mov
shlb
cld
pop
cmp
mov
push
mov
sbbl
pop
sbb
cmp
je
repz
inc
cmpsl
jecxz
or
and
push
or
fiadds
mov
cmp
iret
and
pop
mov
in
jg
push
pushf
imul
aaa
incl
push
bound
mov
xchg
or
addr16
jno
ret
cmp
fimull
xchg
adc
sub
sbb
mov
in
or
mov
xchg
xor
inc
lret
mov
stos
pop
xchg
das
pop
mov
add
lods
cmp
in
xchg
jl
arpl
pop
repnz
add
jmp
adc
cmp
xchg
mov
ret
jbe
clc
inc
push
jo
jo
data16
push
hlt
iret
sub
les
or
mov
es
mov
insb
jne
mov
ret
xchg
pop
add
icebp
dec
cmpsb
fcoml
lret
loop
negl
dec
orb
loopne
dec
cmc
nop
pusha
mov
cld
inc
test
add
push
inc
mov
lret
mov
mov
je
mov
push
or
pop
lret
ja
xchg
popl
loopne
subb
push
add
xchg
jo
mov
icebp
add
jmp
das
dec
mov
mov
addr16
stos
lret
ds
add
in
push
mov
mov
cmpsb
popf
push
xchg
hlt
xchg
jmp
ror
fisubl
sbb
mov
fwait
ret
mov
jecxz
add
inc
fisubrl
rcrb
jge
cli
int
push
test
shrl
or
mov
xlat
testb
sbb
insl
mov
iret
repz
in
ds
fs
mov
push
mov
push
imul
repz
in
add
cmp
jecxz
test
cmp
dec
scas
adc
xor
loop
das
jle
sub
rcr
inc
mov
sbb
andl
push
lock
pop
push
scas
jecxz
sbb
inc
dec
daa
xor
cmp
cmpsl
mov
mov
pop
push
aas
mov
arpl
jnp
sbb
fsubl
insb
jnp
push
out
test
xor
repnz
jbe
rolb
loopne
jg
lret
add
loop
cmp
inc
inc
push
fcmovb
cltd
lret
mov
inc
dec
and
cwtl
gs
test
cmp
mov
xor
popf
shll
lds
aam
sbbb
mov
push
push
mov
sbb
xor
clc
mov
adc
scas
clc
clc
push
sbb
lea
push
popf
inc
adc
mov
adc
in
pop
lret
stos
hlt
stos
push
pop
xchg
lods
in
lds
clc
jnp
aad
jmp
scas
je
mov
and
hlt
loop
sub
icebp
jl
adc
mov
push
xor
push
enter
push
cmp
mov
js
inc
sbb
pop
aaa
shll
imul
sahf
imul
pushf
filds
mov
cmp
adc
xchg
adcl
bound
push
push
mov
jne
and
add
jl
hlt
sub
test
inc
lret
jmp
pop
adc
cwtl
fcoml
or
ljmp
insb
xor
inc
jae
pop
jl
scas
stos
xchg
ljmp
ss
dec
xlat
xchg
inc
mov
test
jnp
and
rep
aas
xor
and
testb
xchg
xchg
ja
lds
lods
mov
punpckhwd
mov
lcall
insl
sbb
fmul
test
push
mov
insb
and
inc
lcall
mov
and
mov
adc
jg
xchg
dec
loopne
cmp
shlb
mov
lret
push
mov
dec
jb
test
std
rcll
pop
jle
push
jbe
xchg
sahf
push
jmp
inc
fiaddl
xor
sub
mov
and
pop
test
xchg
outsl
push
mov
or
push
add
pop
sbb
pop
mov
xchg
sbb
lods
add
pushf
sub
gs
fs
dec
and
test
movsl
ss
call
cmp
dec
dec
push
cwtl
ret
pushf
paddusw
dec
mov
xchg
push
insb
rcrb
push
out
aad
fs
stc
stos
push
rcl
mov
cmp
decb
cmp
aam
push
test
cltd
loope
jae
adcb
lock
ss
xor
adc
xor
aad
xor
mov
nop
fisubl
xchg
mov
or
push
lods
mov
sbb
stc
mov
adc
adc
fs
dec
or
or
push
inc
and
int
mov
xor
pop
push
scas
in
mov
dec
inc
scas
fdivrp
ja
cli
mov
fwait
popf
mov
rolb
aaa
mov
add
mov
movsl
std
sarb
and
insl
shrl
pop
out
sbbb
dec
push
int
pop
xlat
int
jge
loope
jmp
push
into
and
push
gs
jns
xchg
lods
addr16
aam
sub
jo
addl
outsl
addr16
ret
nop
and
movsb
stc
cwtl
add
or
pop
cmpsb
inc
xchg
lock
dec
test
les
cmc
fidivl
out
mov
pop
cmp
push
iret
xchg
stc
pop
ss
sub
mov
xor
clc
inc
insb
fsubrs
mov
sub
inc
sbb
pop
jne
dec
jp
shrl
push
daa
sub
sbb
pushf
adc
jle
pushf
out
pop
cmp
leave
push
mov
pop
fdivrs
adcb
out
add
or
aaa
js
stc
ja
push
adc
sbb
add
out
popa
ficomps
or
xchg
ret
inc
sub
jno
iret
fadds
lahf
push
insb
mov
jb
rorl
bound
inc
in
cltd
fcomps
pop
imul
loope
mov
pusha
in
sbb
mov
nop
and
popf
call
pusha
int
mov
mov
jg
das
xor
call
fsubrp
rorb
jne
cwtl
sub
sbb
add
test
sahf
cwtl
pushf
testb
inc
dec
loop
dec
mov
xchg
dec
in
jnp
jae
imul
ficoms
icebp
ja
pop
lods
mov
inc
and
push
stos
cmp
xchg
lcall
dec
aam
sub
sbb
mov
inc
jo
xchg
mov
ds
loope
cmp
xor
lds
in
pop
push
cmp
and
dec
cmp
fimull
mov
push
add
xchg
popf
or
xchg
sarl
mov
xchg
xchg
jle
mov
dec
lock
into
sub
cld
mov
adc
in
mov
rorb
faddl
adc
lret
jge
push
cmp
sahf
mov
sbb
pusha
inc
ljmp
xor
outsb
mov
stos
sub
ret
ljmp
inc
and
arpl
push
jp
dec
sub
push
mov
faddp
sub
je
mov
js
xor
push
mov
call
rorb
imul
cmp
or
xchg
fldcw
hlt
fbld
push
cmp
fmulp
outsl
out
pop
jmp
cld
sub
or
cmp
adc
add
push
jg
inc
in
mov
adc
or
icebp
push
sbb
ds
out
filds
jmp
xor
lods
insb
pop
daa
sub
sbb
test
dec
js
jae
scas
jg
icebp
fdivrs
mov
sub
cmpl
pop
inc
xor
out
pop
cmpsl
out
mov
stc
fcmovb
mov
fdivrp
les
mov
jecxz
insl
dec
inc
pop
lahf
or
cltd
inc
div
notl
stos
outsb
mov
pinsrw
cmp
rorb
jnp
decl
mov
ret
dec
cmp
pop
push
sbb
addr16
push
xlat
mov
cmp
sbb
mov
xchg
jo
jl
dec
cmpsb
sbb
push
into
push
dec
mov
lret
xchg
enter
adc
xor
jge
stc
rorl
jns
aaa
xor
cmp
push
mov
and
lock
iret
push
mov
out
dec
popf
dec
push
sub
subb
mov
daa
scas
sub
movsl
mov
mov
mov
mov
or
adc
into
cld
notl
jns
xor
pop
cmp
mov
bound
outsb
out
adc
xchg
shrb
jbe
jle
lahf
sbb
sbb
les
adc
les
js
cmpsl
xor
fs
lods
inc
cld
dec
or
fimull
sti
sarl
shlb
aad
out
sub
cmp
loop
scas
cmp
mov
aaa
scas
std
mov
adc
mov
adc
in
cmpsb
test
pop
data16
mov
lret
or
ljmp
mov
cltd
xchg
pop
movsl
fcompl
sbb
daa
xchg
inc
inc
cmp
cwtl
out
ror
cmp
mov
inc
jg
out
or
fs
mov
mul
imul
popf
ljmp
dec
xchg
dec
lretw
mov
je
sarb
orb
mov
stc
and
add
dec
popa
push
inc
out
or
and
dec
lea
stc
add
add
mov
clc
push
cmp
addb
lods
out
leave
ret
lret
mov
repz
stos
outsl
data16
dec
add
sub
xor
fsubs
pushf
sarl
test
ljmp
adc
int
mov
pop
nop
pop
in
test
std
fs
mov
xor
es
adc
loopne
jns
dec
pusha
jg
iret
lahf
mov
cmp
lret
out
mov
xchg
hlt
aam
cli
sbb
rorb
popf
insb
pusha
jb
cli
adc
aaa
call
adc
in
push
push
and
fistpll
ss
cmp
aam
mov
mov
outsb
dec
out
mov
je
fists
xor
ss
push
sub
inc
pop
jns
mov
jne
stos
cmp
jl
int3
shl
mov
insb
or
repnz
jge
jp
push
mov
mov
dec
rorb
jne
push
fisubs
imul
aas
cmpsl
dec
loopne
std
lcall
cltd
enter
jmp
cli
ds
ljmp
xchg
push
clc
xor
xchg
shll
fwait
bnd
lahf
jne
lret
xor
mov
push
and
lcall
mov
dec
pop
scas
les
xchg
add
pop
sbb
and
add
sti
or
jno
mov
and
push
movb
pop
mov
aam
popa
imul
ja
inc
scas
mov
fwait
test
dec
sub
ljmp
fdivr
xor
sbb
xchg
push
out
pop
cld
mov
mov
imul
les
mov
daa
js
flds
or
push
inc
mov
jo
xor
fcmovb
test
xchg
dec
ficoml
sub
mov
jo
ficomps
xchg
hlt
adc
std
jg
call
jnp
ljmp
sub
and
outsb
mov
pop
jae
aam
mov
ret
and
adc
xchg
cmp
mov
dec
mov
insl
divb
adc
cmp
jb
cmpsb
fisttps
out
aam
out
in
mov
cmp
mov
les
jno,pn
mov
loop
ror
adc
jecxz
or
jecxz
or
mov
rorl
and
cltd
ds
jg
in
push
stc
popf
adc
xor
lret
xchg
pop
push
js
test
mov
adc
icebp
push
dec
or
cs
pop
clc
popf
fisubrs
jg
popl
call
jb
pushf
insb
inc
adc
mov
popa
andb
sarb
cmp
push
xchg
cld
pop
cmp
movsb
stos
in
mov
mov
xor
cmp
mov
inc
push
mov
cmpl
push
scas
sub
push
pop
jl
pop
jne
jmp
call
das
gs
roll
or
mov
jnp
sub
cld
out
gs
xchg
inc
mov
sbb
add
xor
mov
adc
add
test
jmp
push
mov
inc
std
cmp
jle
hlt
pop
cmpsl
pushf
sub
lret
jecxz
imul
notl
int
lahf
or
push
push
push
mov
xchg
sbb
dec
sub
fyl2xp1
push
pop
sbb
daa
out
lods
mov
fbld
in
cmc
sub
jne
adc
je
inc
mov
int
cwtl
pop
and
outsl
jo
stc
shlw
and
inc
add
fcoml
adc
xor
cltd
movsl
addl
in
addr16
mov
and
mov
xchg
movsb
adc
out
lcall
xchg
nop
sbb
push
int
push
mov
les
adc
pushf
inc
sub
out
addr16
and
fwait
mov
sub
bound
dec
or
fidivrs
movl
cmpsb
sbb
inc
or
and
add
adcb
popf
mov
loop
shrb
add
sub
mov
movsl
psubd
das
inc
mov
clc
ss
cld
hlt
mov
adc
adc
push
icebp
and
mov
test
cld
adc
xor
sbb
add
fnstenv
mov
stos
lcall
out
xchg
cmpsl
insb
pop
push
or
push
sti
and
sbb
icebp
cltd
mov
mov
loopne
pop
inc
scas
cld
nop
dec
dec
sahf
and
stos
adc
jmp
insl
sahf
sub
lret
addr16
cld
xor
mov
xchg
data16
jns
neg
stos
add
std
lds
repnz
aam
insl
outsb
das
sub
ficompl
fcomps
mov
sbb
or
add
sub
aas
in
dec
dec
or
loope
das
jecxz
ss
inc
fwait
push
cs
mov
pop
aaa
sbb
adc
inc
xor
sub
cs
inc
xchg
test
mov
and
es
pop
stc
movb
scas
adc
repz
ret
stc
sar
pusha
iret
push
jecxz
xchg
movsb
popf
test
push
push
or
pop
sbb
fisubs
ficompl
pop
cwtl
test
push
jb
jo
sub
push
fisttpll
lret
lock
mov
jno
jmp
hlt
xchg
jne
aam
out
sub
inc
and
mov
es
test
pushf
pop
sub
push
cmp
cmp
mov
test
dec
in
cmpsl
gs
cmp
mov
xchg
lret
ss
ds
or
jle
pop
ss
inc
das
push
repz
xchg
ljmp
jle
jg
das
or
mov
ret
mov
hlt
mov
mov
xor
dec
pop
mov
jo
jno
clc
es
fisttpl
int
push
jecxz
mov
cmp
les
fnstenv
jge
jae
mov
int3
jle
fimuls
stc
lret
cmp
inc
sub
iret
mov
insl
fdivrs
jmp
cmpsb
sub
lret
jae
jb
push
jb
cmpl
loopne
sbb
loope
int
leave
xor
ds
adcl
fisttpll
orl
push
pop
inc
mov
scas
jecxz
cmp
lcall
push
outsl
loope
push
mov
jb
and
out
push
ljmp
xchg
sbb
inc
mov
push
and
outsl
out
mov
shr
sub
pop
popf
push
mov
out
and
cmp
das
sbb
movsb
xchg
popf
lret
roll
or
sub
movsl
bound
mov
es
push
jmp
xor
fildl
pop
vunpcklps
dec
push
jl
jo
bnd
faddp
fpatan
scas
mov
dec
insb
xchg
ljmp
cwtl
xchg
jae
loop
or
stos
push
hlt
scas
outsl
dec
push
out
lret
lea
cmc
inc
imul
outsl
xchg
pop
dec
call
cmp
push
test
outsl
neg
lods
lret
push
jecxz
dec
inc
les
in
fadds
icebp
pop
mov
push
out
jae
popf
shll
movsl
push
inc
sbb
ljmp
and
mov
jle
cmp
push
xor
xchg
incb
and
sub
jo
mov
sub
fs
fwait
adc
repz
mov
and
int3
dec
sarb
mov
xor
popf
test
lds
loopne
mov
and
sbb
pop
mov
icebp
movsl
adc
data16
mov
sbb
out
fdiv
icebp
call
jne
jnp
jns
arpl
jbe
cwtl
enter
xchg
jp
popf
xor
mov
dec
jp
lret
scas
xchg
and
cmp
jno
xor
les
mov
rorb
outsb
sbb
neg
ljmp
sbb
and
pusha
jge
rcll
cwtl
or
popa
jp
add
pushf
and
fsub
push
subl
pop
arpl
jp
stos
dec
xchg
cmc
lret
das
jl
lock
sbbl
jbe
inc
dec
outsb
fistps
jne
ljmp
filds
repz
test
xchg
repz
enter
cmp
test
pop
inc
movsl
popf
xchg
pop
xchg
lds
xor
test
mov
in
and
cmp
pop
gs
into
daa
mov
rcrb
aas
out
ss
dec
mov
xor
aad
jne
xchg
cli
lock
fldt
int
shl
bound
testl
gs
pop
hlt
lret
outsl
inc
pusha
mov
ss
push
inc
mov
mov
sub
sbb
insl
mov
pop
mov
fs
jmp
add
imul
stos
jmp
lds
repz
aam
testl
lods
adc
dec
jle
shlb
mov
mov
outsl
pop
or
insb
icebp
mov
adc
dec
shrl
jecxz
fucomip
xor
popf
jge
mov
pop
inc
adc
int
pushf
cpuid
add
xor
inc
sti
push
repz
mov
pop
fs
jbe
mov
and
sti
mov
test
lcall
xchg
jbe
pusha
or
mov
pusha
movsb
js
loop
cmp
into
inc
addb
jg
popf
or
and
xor
dec
mov
add
mov
sbb
iret
inc
adc
js
outsb
mov
mov
loop
push
ljmp
jecxz
jbe
jo
pop
insb
push
ds
popa
loope
or
and
test
sbb
jge
xor
outsl
xchg
xchg
stos
stos
inc
and
pop
cmpl
push
shrl
pusha
sbb
pop
scas
jnp
fucomp
xor
in
adcl
and
mov
sbb
test
pop
cmpsb
sahf
ret
icebp
imul
in
idivl
cmp
push
push
jne
mov
in
clc
or
push
inc
push
outsl
imul
and
movsl
out
mov
movsl
mov
movsb
dec
adc
xorl
dec
pop
mov
les
inc
or
sbb
jb
or
out
cmp
fidivrs
jmp
es
push
loope
js
addl
xorb
pop
fisttpl
pop
stos
xchg
jno
mov
xor
or
mov
cmp
das
pop
push
push
mov
xor
add
push
adc
pop
je
pop
xchg
pop
or
inc
test
cmp
dec
cmp
add
mov
scas
das
xchg
push
pusha
jp
and
or
fists
cmp
fbld
repnz
iret
push
fsubl
lret
ud1
xor
cmpsb
cwtl
fwait
xchg
mov
mov
add
pop
cmpsl
sub
xor
outsl
mov
call
pop
ss
je
ret
jno
dec
popf
fwait
daa
and
xchg
xchg
pusha
lea
idiv
jae
push
xchg
subb
sub
jge
fisttpl
cmpsl
lcall
out
loop
nop
pop
outsl
jne
ljmp
insl
jle
mov
std
mov
add
insb
inc
std
roll
jl
pop
subl
mov
push
pop
jl
fldl
xchg
std
and
pop
cmp
and
mov
dec
cltd
testb
cmp
cli
pushf
add
arpl
insl
mov
xor
std
int
out
xor
or
iret
add
enter
test
ja
and
pminsw
iret
xchg
sub
je
add
xor
push
out
push
push
fisubrs
sbb
ljmp
mov
push
lds
bswap
or
in
sub
xchg
push
jg
dec
push
jne
dec
imul
mov
mov
daa
inc
add
bound
sub
rorl
sub
or
dec
cs
sub
outsl
insl
addl
pusha
and
pop
and
mov
pop
pushf
es
mov
push
cmp
xchg
js
mov
out
add
jle
mov
out
lds
lea
in
test
out
jno
int3
cmp
mov
xor
out
cltd
inc
push
xchg
jge
or
xchg
stos
loopne
decb
negb
mov
pop
pop
mov
fwait
aad
test
ror
sub
ja
les
mov
sbb
cmpsb
push
xor
xchg
loopne
jns
xchg
sub
out
pop
gs
add
adc
ficomps
ret
sti
xchg
lcall
adc
dec
mov
xchg
push
push
gs
sub
cwtl
xor
add
push
cld
inc
inc
push
stos
sbb
cli
pop
shll
enter
inc
mov
fwait
cmpsb
repnz
data16
push
or
ret
mov
dec
cmpl
adc
cmp
inc
push
ljmp
push
dec
ja
aas
ljmp
fs
in
icebp
jb
es
inc
cmc
cltd
negl
mov
fwait
dec
push
ja
out
cmp
mov
mov
sub
inc
shrb
ret
dec
rcrb
test
sbb
mov
mov
insl
mov
imul
mov
dec
add
dec
fldenv
cmp
cmp
sbb
js
mov
loopne
and
jae
adcb
lcall
cmp
test
mov
mov
mov
mov
in
push
stc
cmpsb
ret
aaa
jo
or
je
enter
adc
out
sub
andb
cmp
jo
xor
shrb
daa
adc
pop
addl
les
test
dec
push
dec
sbb
in
xchg
das
jle
cmp
pop
pop
sbb
out
shrb
lds
gs
push
sub
pop
filds
int3
inc
inc
dec
push
push
sbb
dec
hlt
pop
pop
push
andl
jmp
sbb
push
mov
sub
je
jl
jb
xchg
mov
mov
test
jno
sbb
es
mov
pop
mov
dec
cs
pxor
jns
adc
pushf
movsl
xchg
loope
ja
adc
repnz
sbb
je
xor
outsl
xlat
mov
pop
add
imul
cltd
xchg
jl
pop
cmovne
sbb
int3
or
xor
dec
mov
push
jo
dec
pop
dec
jne
jae
inc
nop
std
cmpps
lahf
in
pop
jnp
xor
add
test
inc
xchg
inc
add
outsb
inc
in
push
in
or
negl
das
mov
clc
mov
ss
ja
add
jne
fdivrs
std
lods
and
or
push
dec
mov
nop
push
enter
aaa
sub
mov
cli
stos
in
and
fcoml
stc
lret
mov
push
or
outsl
push
add
mov
mov
jns
add
push
scas
mov
push
lret
int3
mov
pop
arpl
pop
dec
iret
inc
movsb
jbe
mov
pop
daa
mov
xchg
mov
push
or
sahf
outsl
mov
fisubrs
cmpsl
jbe
inc
enterw
xlat
xchg
cli
adcb
pop
and
testb
add
mov
mov
divb
popf
mov
cmp
fildl
iret
mov
stos
cmp
mov
push
mov
mov
int
mov
xor
pop
aam
dec
popl
inc
sahf
or
push
add
inc
decb
ret
cs
pop
sbbb
fsubl
inc
int3
fidivrs
jmp
sub
jle
xchg
cs
ret
loope
adc
add
out
jno
cwtl
mov
in
inc
jg
iret
dec
std
sbb
and
pop
jae
sub
into
cmpsb
pop
push
push
xor
mov
out
gs
pop
rol
xor
popf
es
push
xlat
fsubs
loopne
insb
jo
es
outsl
add
sbb
fimuls
into
mov
or
sbb
out
sbb
out
push
fcomps
add
pushf
das
lods
shrb
mov
fisubl
mov
dec
rep
test
aam
mov
xor
insl
pop
add
fwait
jbe
mov
adc
xor
jmp
jae
repz
jbe
cmc
mov
xchg
insb
xor
aad
imulb
lcall
or
xchg
jns
out
jno
add
test
inc
sahf
xor
pop
jge
rolb
rol
loopne
mov
js
xorb
lret
ljmp
out
push
xor
sahf
lods
sbb
fbstp
inc
icebp
jp
sbb
ficoms
push
mov
dec
pop
das
inc
fidivl
push
pop
jnp
adc
mov
mull
loopne
repz
lahf
xchg
les
push
mov
jl
xor
rcrl
jnp
in
push
inc
xor
ds
ljmp
and
adc
pop
pop
rorb
sbb
and
shrb
hlt
dec
js
sahf
incb
mov
push
lock
mov
stc
cmp
pop
stos
arpl
xchg
int
dec
into
mov
test
rorl
fs
dec
sbb
or
and
scas
repz
shl
decl
addr16
fdivl
add
mov
push
mov
sub
popf
xchg
mov
jno
add
jno
xchg
movsl
fidivrs
inc
jnp
loope
mov
cmp
fidivs
out
push
xlat
in
add
lds
arpl
add
push
arpl
out
lret
mov
enter
jmp
das
cmpsl
pop
ret
jo
sub
mov
test
daa
je
dec
inc
push
repnz
mov
add
pop
and
mov
rorb
adc
jns
dec
loope
xor
fildl
clc
mov
aam
dec
mov
dec
fs
jg
add
fstl
lods
mov
popa
clc
jo
adc
pop
fistpl
xchg
dec
cmpsb
fistps
scas
mov
movsl
sub
cmp
int3
out
inc
xorl
repnz
aaa
stos
and
sti
mov
mov
adc
gs
rorl
mov
mov
sub
add
cs
inc
xchg
dec
cmp
cmp
es
cmp
jo
imul
jmp
iret
mov
sbb
out
enter
cmp
mov
push
jp
xor
xor
iret
pop
shr
sub
test
sarl
jle
mov
out
cli
dec
mov
push
decl
xor
mull
pop
jae
icebp
dec
dec
leave
insl
pop
test
outsl
nop
sbb
push
sub
mov
mov
out
movsl
adc
xlat
push
cmpsb
xchg
push
cmp
lret
mov
call
xor
jne
cmc
xor
inc
lods
mov
les
sti
xorb
pop
mov
jp
sti
leave
mov
jl
out
aaa
sub
jo
cs
mov
stc
or
mov
push
out
add
sub
jle
push
fimull
arpl
inc
rcr
addr16
cmpl
add
imul
cli
aad
or
lock
pop
jg
aad
push
imul
subl
and
aad
sbb
mov
cmpsb
shlb
cs
imul
xchg
jecxz
xchg
jmp
stos
jb
jmp
xchg
stos
les
jle
hlt
xchg
jg
in
xor
daa
js
add
popl
fsubr
mov
aam
xor
loope
cmpl
outsb
adc
jl
cltd
sub
add
test
jnp
ss
mov
fmuls
cltd
mov
fistpl
roll
cmp
call
and
push
movsl
cmp
pop
call
fldt
mov
in
and
xor
mov
insl
adc
or
or
sbb
test
lret
mov
jb
pop
shrb
jle
push
lret
test
loop
sub
pop
add
popa
lods
xor
and
jg
dec
loop
or
dec
adc
add
mov
mov
sti
pop
xor
pushw
xor
fistl
sub
scas
js
lods
cli
xchg
lcall
fwait
ljmp
sub
rolb
rorl
out
pop
fstpl
leave
insb
adc
imul
repnz
sti
push
jns
jae
add
ret
pop
push
dec
push
addb
or
mov
push
mov
mov
cs
mov
dec
xlat
sbb
cmp
mov
mov
in
sete
iret
scas
inc
movsl
sarl
jns
fdivr
cs
jae
push
pusha
push
testl
in
xlat
imul
cmp
inc
dec
push
pop
jle
es
fldl2e
cmpsb
jl
dec
mov
adc
out
xchg
lock
decl
inc
and
adcl
int
ret
push
xor
mov
or
mov
or
ret
in
mov
aam
rclb
xchg
arpl
les
mov
xchg
les
aas
lret
push
ja
aad
mov
xchg
dec
xor
sti
sub
pop
push
ret
movhlps
les
mov
xor
jne
in
pop
jbe
out
iret
mov
in
repz
lret
ss
adc
test
cmpsb
sbbl
loop
cwtl
dec
dec
mov
sahf
cmc
fidivrl
or
in
fidivrl
jle
dec
test
xor
ds
dec
mov
adc
lret
dec
int
nop
jp
mov
xlat
cmp
dec
sub
insb
mov
insl
fnstcw
es
cmpl
lcall
adc
dec
cwtl
adc
and
dec
in
cmp
or
cmp
movsb
xor
inc
aam
push
push
int
or
xchg
popf
les
cmp
mov
mov
scas
ljmp
sbb
xor
fisubrl
or
cmc
scas
imul
inc
stc
inc
fs
jp
rorl
pop
push
xchg
mov
int3
fdivp
pop
imul
jg
std
mov
popf
ds
cmp
out
bound
lock
adc
jns
scas
sbb
xor
xchg
xor
xlat
jmp
jne
leave
stos
fcom
xchg
add
adc
add
testl
imul
loopne
or
dec
aam
and
cmpsb
sti
dec
incl
aas
loopne
dec
int3
xor
lcall
int
dec
add
push
sahf
sbb
adc
into
popf
mov
loope
add
jp
sar
loope
loop
add
rcr
xchg
repnz
stos
adc
cmpl
pop
hlt
push
rorb
clc
mov
xchg
jge
jl
cmc
call
mov
testl
adc
xor
das
mov
or
fldl
dec
dec
adc
in
mov
insl
dec
add
push
or
insb
and
add
xorl
and
or
xchg
cmp
in
push
pop
sbb
mov
scas
inc
push
imul
arpl
push
loop
mov
jmp
out
mov
mov
sub
je
clc
push
jmp
aaa
mov
cmp
adc
jnp
scas
lds
stos
xchg
out
stc
icebp
fwait
jns
cmp
jae
popa
into
nop
rolb
mov
jecxz
popa
aas
dec
inc
sbb
loope
push
adc
pushf
inc
xor
fcompl
push
stc
aas
out
inc
jbe
dec
mov
mov
aaa
cmp
xchg
jl
sub
arpl
fwait
imul
sahf
arpl
pop
inc
cmp
movsb
add
push
xchg
mov
pushf
movsl
das
popf
dec
or
xor
je
xor
pushf
ja
pushl
call
pop
mov
repnz
push
andl
in
mov
mov
cld
stos
icebp
adc
aad
push
mov
mov
lcall
cmp
jbe
fdivrl
xor
scas
imul
leave
pop
fs
mov
fs
mov
sbb
push
sub
cmp
mov
and
hlt
les
xlat
hlt
shl
adc
dec
xor
call
pop
insb
push
jo
out
addb
ljmp
adcl
loopne
xchg
inc
inc
mov
out
xor
jne
add
dec
repnz
xchg
xchg
icebp
and
adc
jle
cmp
lods
push
mov
mov
jl
sbb
mov
adc
lea
push
mov
jmp
mov
fists
xchg
xor
test
mov
jge
imul
dec
and
imul
repnz
adcl
mov
pushf
ss
in
shll
addr16
push
and
cmp
mov
pop
pop
xchg
mov
and
mov
pop
lock
xor
clc
ret
daa
pop
sub
jl
cltd
jge
jge
nop
cmpsl
in
push
mov
test
sahf
push
icebp
mov
and
sub
pop
pushf
pop
mov
test
dec
pop
fisttps
dec
loop
les
mov
les
cmp
adc
jne
inc
bnd
jp
or
or
pop
cwtl
lret
shlb
sub
mov
inc
push
mov
pop
icebp
inc
xor
in
mov
imul
dec
aam
lahf
scas
xchg
jle
sub
sti
mov
xor
shrb
xchg
mov
inc
clc
jbe
pop
popa
mov
in
cmp
mov
pop
push
push
test
add
or
test
cs
sub
call
xchg
jae
es
add
ljmp
aam
filds
fwait
ss
out
insb
outsb
les
ljmp
or
push
dec
lods
jno
mov
fnstcw
aas
mov
and
les
pop
push
paddb
aas
popf
and
mov
push
cmp
insb
xor
std
cmp
cmp
orb
addr16
out
sub
rcrl
aam
cld
fyl2x
mov
std
outsb
lods
sub
and
je
pusha
and
rorl
push
sub
or
out
push
dec
mov
and
ja
mov
push
xchg
push
popa
lods
inc
jp
mov
cmp
ja
mov
shrl
push
ret
lcall
jg
adcb
dec
mov
int3
add
jbe
daa
dec
adc
fidivrs
scas
jbe
cmc
pop
mov
test
xorb
dec
pop
rorb
test
pusha
lock
mov
imul
adc
push
pop
les
add
or
lret
lock
adc
cs
je
mov
xchg
pop
jge
test
sbb
adcb
pop
pop
or
outsb
cmp
popa
or
sub
cli
test
jae
sbb
cmp
arpl
scas
or
sti
stos
into
cmc
ja
in
and
adc
jae
jne
push
je
pop
jg
jl
dec
push
int
test
cmp
sbb
add
dec
shl
mov
cmpsl
pop
mov
or
adc
enter
mov
mov
mov
rcr
and
mov
dec
mov
cmp
rcl
loope
push
push
outsb
daa
test
aas
xchg
sub
adc
in
mov
mov
xchg
jae
sbb
or
and
inc
je
cmpsb
les
sub
xchg
test
inc
add
lea
or
in
jmp
sarl
xor
ljmp
pop
inc
push
adc
into
push
arpl
jo
ss
test
rcrb
sbb
push
push
push
sub
push
dec
daa
adc
mov
mov
out
test
out
sbb
pushf
or
or
inc
sub
test
sub
dec
push
dec
mov
mov
sbb
call
inc
jns
push
out
cld
xor
or
xchg
das
jg
xchg
mov
sbb
packuswb
or
rcrb
rcr
xor
insl
pop
xlat
push
add
dec
ss
jae
movb
cmp
stc
jo
daa
jl
xor
cltd
mov
push
add
jbe
insb
push
sbb
cmpsb
adc
jmp
push
aam
and
int
inc
out
jno
mov
out
mov
jnp
sti
mov
insb
cmc
sub
inc
and
cli
into
lea
adc
jg
and
cmp
fs
in
enter
jl
dec
push
fwait
dec
es
fmul
cld
xchg
dec
lods
xor
jmp
jge
ljmp
cmpsb
mov
pop
inc
cmp
int
aam
test
jnp
fsubrl
push
jle
sub
sbb
push
xor
jno
add
mov
push
clc
or
adc
pop
adc
jg
leave
add
mov
in
cwtl
sbb
xchg
xlat
jbe
into
rorb
incl
and
inc
dec
mov
and
cs
iret
adc
mov
jle
jns
mov
arpl
cmp
pop
cli
dec
pushf
repz
mov
xchg
ror
addr16
and
push
fstps
push
cmc
xor
insl
push
out
inc
fs
outsl
mov
pop
cmp
xchg
xor
jecxz
add
sbb
add
fiaddl
imul
rcll
jae
adc
sbb
sub
ljmp
cltd
mov
stc
lods
jns
xchg
inc
add
lds
movsl
push
dec
cld
pop
in
call
imul
push
push
lahf
xchg
jnp
shl
cmp
pop
cwtl
and
and
inc
aaa
cmp
popl
pop
dec
imul
pop
pop
pop
std
call
cmp
push
lret
push
inc
or
dec
mov
in
jmp
inc
cmp
inc
jmp
stos
icebp
fadds
sub
adc
inc
adc
and
dec
sar
arpl
daa
loop
cld
pushfw
ljmp
or
and
lods
push
or
int
lods
xor
cltd
mov
push
jo
mov
fstp
mov
dec
dec
pop
cmpsl
mov
mov
push
mov
jl
xor
pop
vmread
jb
pop
loope
int
adc
lock
movsl
fiaddl
xchg
cwtl
adc
xchg
jnp
dec
dec
pop
adc
std
lds
inc
dec
pop
push
add
adc
into
fadds
pop
mov
fdiv
mov
mov
and
cs
xlat
xchg
or
xor
fldcw
jecxz
jnp
jo
sbb
ss
sbb
rcr
add
leave
shl
popa
xchg
inc
repnz
pop
out
fbstp
sub
imul
cmp
bound
stc
int3
test
xchg
mov
lahf
cmp
mov
xor
std
sub
adc
dec
ficoms
ret
inc
dec
mov
mov
pop
pushf
sub
fstpt
std
jb
std
sbbl
orl
mov
and
sti
and
dec
hlt
inc
sub
mov
aam
xor
xchg
pop
or
leave
jg
and
push
xor
in
push
test
push
cltd
mov
aas
pop
das
in
cli
inc
orb
loope
jle
ja
ja
mov
repz
lea
js
outsb
je
jecxz
outsb
inc
cs
fiaddl
fcompl
jb
xchg
push
jle
ficompl
sbb
nop
test
lcall
jns
adc
lea
xchg
jb
and
inc
and
or
mov
cltd
cmp
push
pop
add
jle
xor
test
add
lret
mov
bound
sbb
scas
mov
adc
addb
pop
cmp
cs
mov
call
js
mov
in
cmpb
dec
loope
push
inc
lcall
in
int3
xor
daa
test
rcl
pop
repnz
test
jnp
add
jge
push
je
shrb
lret
xor
mov
addr16
lret
loop
inc
push
lods
shr
sbb
xor
push
sarl
ss
mov
sbb
and
ljmp
mov
xchg
rorb
cltd
cmp
mov
lea
pop
and
je
shrb
xchg
xchg
mov
cmp
std
push
popf
mov
lods
rclb
popf
pop
or
inc
xlat
and
push
mov
mov
das
inc
and
dec
xorb
pop
xchg
in
mov
pop
fnstcw
or
fimull
or
repnz
scas
dec
push
jmp
push
mov
adc
jecxz
jle
push
shrl
jo
inc
mov
mov
fiaddl
rorb
aam
xchg
inc
or
push
mov
mov
add
call
pop
int3
push
push
pop
popa
push
jmp
jle
xchg
fldt
aam
cmpsb
xor
jbe
cmp
in
cmp
push
adc
imul
lock
mov
and
es
or
push
push
mov
cwtl
mov
enter
and
mov
add
xlat
mov
hlt
mov
lods
push
dec
adc
mov
dec
pop
out
dec
push
sub
mov
adc
fdiv
sbbw
xor
mov
loope
or
adc
mov
dec
adc
dec
and
dec
out
jle
dec
jl
imul
test
sarb
rorb
push
inc
imul
add
or
shll
and
jecxz
cmp
inc
add
and
mov
scas
and
aaa
push
add
mov
jns
xor
dec
sarb
mov
mov
mov
iret
cli
in
sub
xchg
xor
lret
or
cmp
pushf
jg
fisttpll
fisubl
aam
das
cmp
mov
into
mov
shr
pop
jnp
loop
sarl
je
popf
sub
iret
movsl
iret
les
jle
ret
mov
in
jbe
xlat
dec
stos
xchg
mov
pop
pop
pusha
cmp
pusha
pop
in
sbb
rolb
xchg
jne
jle
pop
dec
stc
xor
push
stc
out
mov
or
and
pop
in
push
enter
fistl
addr16
cmp
mov
cli
sub
loopne
addw
mov
decb
sti
addr16
fdivrl
scas
cmp
jecxz
test
jns
bound
adc
adc
pop
lock
adc
stc
mov
daa
mov
fwait
xchg
or
xor
cmpb
mov
push
icebp
test
lods
cmpsl
mov
cltd
sub
outsl
dec
xchg
nopl
add
xchg
test
dec
fucomp
faddl
sub
fidivs
push
ljmp
lods
mov
call
xor
or
mov
add
and
test
fsub
push
push
arpl
or
data16
mov
push
push
nop
enter
out
stos
jns
xchg
inc
pusha
dec
movsb
add
push
mov
daa
ja
lods
data16
jnp
jl
outsb
leave
js
or
adc
les
or
shll
imul
mov
mov
jae
idivl
mov
aaa
xlat
push
gs
scas
nop
fiadds
dec
cmp
pop
and
aam
sbb
fisubrl
add
arpl
mov
add
adc
mov
inc
sbb
lock
mov
mov
hlt
iret
pop
push
and
inc
lahf
push
add
push
jp
dec
cmp
cld
jne
jno
stos
cmp
jno
mov
push
sub
pop
in
push
adc
cmc
xchg
dec
mov
in
cmp
ffreep
mov
add
sbb
roll
lret
lahf
sub
stos
mov
sbb
add
mov
inc
leave
das
dec
dec
rep
das
fwait
cltd
int
cli
xchg
insl
or
mov
je
stos
out
and
je
sub
inc
push
sbb
xor
cmp
cmpsb
sarb
sbb
inc
push
mov
addr16
int
punpckhwd
sbb
aam
jno
das
test
push
inc
lahf
xchg
push
pop
ja
fsub
xchg
sbb
repz
add
movsl
and
stos
cmp
cmpsl
and
ret
sub
cmp
xchg
mov
sub
jl
inc
mov
popa
mov
dec
inc
test
lock
test
cmp
and
cmpsb
sbb
shlb
cmpsb
arpl
xor
push
mov
add
cmp
fmul
bswap
dec
push
ljmp
pop
xlat
ret
lods
sbb
cs
mov
adc
push
in
xchg
bound
int
outsb
in
mov
or
sti
mov
test
es
and
sti
adc
cmp
push
inc
cmp
and
cwtl
pop
mov
int3
and
jno
sub
xchg
xor
xor
ret
cltd
inc
sub
stos
test
mov
lcall
loop
cmp
xlat
lds
xor
mov
cmp
add
cmp
popf
mov
out
faddl
roll
icebp
mov
cmp
and
and
cmp
lahf
sub
cmp
xchg
push
mov
incl
inc
es
xor
ja
fdivl
test
mov
cmp
pusha
add
xor
lret
xchg
or
add
mov
in
mov
push
fisttps
pop
mov
push
mov
xlat
loopne
insl
push
mov
repz
mov
adc
cwtl
mov
add
mov
leave
insl
sbb
cltd
push
fs
mov
push
jge
stos
pop
ljmp
insl
or
lods
arpl
insl
into
adc
cmc
std
daa
or
out
into
adc
mov
out
outsl
cmp
cmpl
pushf
test
inc
adc
insb
xchg
in
fldt
and
cmp
pushf
test
inc
push
mov
mov
std
jo
adc
movsl
test
cmp
jle
cmpsb
das
std
and
fcoml
or
clc
add
out
lea
sub
sub
addb
divb
notb
clc
jecxz
decb
push
movsl
xor
push
inc
loope
or
and
adc
ds
xchg
cmp
add
xchg
cwtl
insb
cmp
sub
scas
fisubs
lcall
cmp
enter
mov
jae
lods
in
jo
insl
adc
xor
pushf
aaa
or
ret
adc
xor
adc
lods
int3
pop
in
dec
fstps
aaa
es
imul
inc
or
sbb
andb
cltd
loope
xchg
sbb
js
enter
mov
lds
mov
or
cmp
inc
cmp
insb
repnz
mov
or
sbb
mov
out
lahf
cltd
das
jmp
and
flds
push
mov
jns
sub
cwtl
leave
addb
leave
jnp
ss
stc
jl
stos
or
xor
mov
ja
pop
adc
ret
or
add
xor
lret
or
lock
popa
jns
mov
push
mov
aaa
pop
mov
add
lods
pushf
daa
fcmovb
shrb
mov
in
adc
add
incb
lock
inc
mov
sub
mov
adc
stos
cmpsb
je
fadd
push
in
rclb
stos
mov
js
pop
mov
xchg
xor
cltd
lahf
movsb
mov
xchg
fsubl
adc
adc
pop
in
push
dec
movsb
add
pop
movsl
mov
out
mov
push
jle
mov
push
sub
out
push
rcrb
inc
ljmp
cmp
ljmp
daa
loop
lock
push
xchg
inc
dec
inc
subl
outsl
inc
inc
inc
cmc
callw
movsb
sbb
or
ret
sbbl
movsb
jns
fimull
les
jae
repnz
iret
lds
push
push
adc
es
aas
pop
and
cmp
les
hlt
les
movl
cmp
es
sbb
mov
lret
mov
pop
pop
pusha
pop
negl
jo
mov
mov
dec
or
mov
in
out
shrb
icebp
and
mov
xchg
aad
cmp
and
mov
sub
jb
cwtl
mov
popa
imul
ljmp
dec
xor
rol
loop
jns
nop
dec
push
and
mov
cmp
sahf
orb
dec
ja
hlt
mov
adc
and
adc
pop
ljmp
lret
add
mov
mov
inc
xor
pushf
mov
lock
mov
popf
inc
cmp
xchg
mov
shlb
filds
mov
clc
push
mov
div
mov
inc
push
lea
das
push
mov
insb
repz
dec
jmp
ret
daa
push
jl
add
fmull
adc
outsb
push
inc
shlb
sub
test
add
bound
jmp
rolb
lods
xchg
cltd
out
cmc
mov
push
pop
fidivs
xchg
mov
lods
cli
pop
test
scas
or
ss
pop
rcrb
clc
mov
int3
xchg
xlat
adc
mov
sbb
xor
add
out
mov
pop
cmp
ljmp
in
cltd
jbe
mov
mov
jnp
loop
adc
xor
xchg
push
xlat
gs
leave
push
xchg
or
cmp
sub
push
push
sahf
shll
or
mov
jg
scas
sub
cmp
xchg
mov
ret
inc
cmc
cmp
insl
jno
xchg
adc
lock
inc
mov
sarb
push
add
and
or
mov
inc
mov
dec
jbe
imul
shlb
fmuls
test
xor
into
adc
andl
or
push
subl
icebp
or
or
icebp
cli
loop
add
dec
xor
mov
cmp
sarl
test
sahf
xor
push
push
call
push
mov
cli
cmp
jmp
add
stos
aas
ds
aad
sub
es
popf
mov
ret
push
imul
sbb
or
icebp
pop
cli
mov
out
adc
dec
add
cld
mov
cmp
mov
test
repz
xchg
call
cmp
dec
mov
test
fwait
or
xor
jmp
mov
mov
enter
mov
movsl
dec
xchg
addr16
inc
xchg
fdivl
divb
sbb
jg
jb
mov
enter
pop
test
adc
sarw
lods
mov
out
std
mov
mov
add
clc
cmp
inc
je
or
pop
mov
out
lahf
pop
dec
in
bound
and
add
ret
mov
mov
add
inc
mov
addr16
xchg
std
into
lea
dec
clc
lods
rcll
mov
mov
out
pop
push
call
notl
out
inc
push
jae
addb
fs
adc
dec
jno
cmp
jg
mov
movsl
aam
xchg
or
sub
jl
iret
xchg
adc
inc
mov
jg
pushf
mov
divl
into
pop
aaa
sub
mov
loop
sbb
movsb
inc
cmp
addr16
ja
insl
roll
pop
and
sub
dec
jne
jo
stos
mov
into
jmp
push
cmc
push
loopne
sbb
push
inc
flds
out
sub
jno
and
sub
daa
pop
pushf
lods
loope
out
insb
cmp
adc
cwtl
mov
lods
mov
push
inc
ljmp
loope
or
push
xorb
push
sub
pop
inc
fstps
or
lods
movsl
das
fldt
fdivrl
jbe
fld
in
xor
jle
lods
pop
scas
mov
popa
or
clc
daa
inc
loope
sbb
ret
mov
xchg
lret
outsb
xchg
adc
jmp
jl
pop
mov
test
mov
ds
jge
or
test
aam
lds
mov
dec
xlat
aas
iret
test
cmp
dec
mov
sub
cli
add
add
and
nop
add
jns
xchg
adc
push
cmpsb
pop
pop
and
add
jg
xchg
cmpsl
inc
push
sub
sahf
cmp
mov
aad
inc
sub
sub
pop
pmulhw
jle
xchg
xchg
add
mov
cmpsl
xchg
out
cld
pop
icebp
push
sub
repnz
jbe
xchg
mov
in
mov
out
cmovno
mull
sbb
mov
pusha
cli
in
mov
out
out
pop
mov
jo
inc
push
xchg
inc
lock
mov
test
dec
lcall
inc
inc
das
outsb
jle
add
fiaddl
or
lds
jbe
repz
aad
int3
dec
adc
push
cmp
mov
xchg
fcoml
inc
into
push
adc
sbb
les
movq
dec
test
push
inc
or
popa
inc
int3
pop
mov
ds
adcb
dec
mov
clc
xchg
sahf
lcall
std
sbb
sub
sbb
xlat
ret
mov
or
in
pop
mov
ret
aad
push
movsb
fadd
in
sbbl
int3
xor
sub
jne
jo
push
mov
sub
gs
clc
pop
in
jnp
imul
inc
xchg
stos
sub
xor
add
test
cmp
jge
lahf
test
fcomip
mov
mov
cmp
dec
cs
clc
int3
scas
jns
lret
out
shlb
je
sbb
pop
inc
movsl
cmp
dec
pop
rol
mov
rol
cmpb
cmpsl
pop
fnstenv
mov
sahf
xchg
add
pushf
iret
fldenv
pop
nop
lret
pop
cmpsb
int3
sbb
pop
js
pushf
pop
movsl
stc
mov
jg
sbb
out
xchg
pop
jl
icebp
lods
lods
cmpb
mov
imul
fimull
mov
sub
pop
pop
sbb
inc
cwtl
fisubl
arpl
push
push
mul
fiaddl
jo
pop
fsubrs
push
sub
mov
sub
sbb
shrb
adc
jle
ljmp
mov
dec
nop
or
out
jecxz
test
iret
cmp
cmpsl
popf
add
dec
dec
imul
in
or
rcrl
pop
mov
rol
pop
bound
std
ror
ret
and
enter
and
aaa
stc
out
insb
pop
stos
rep
ds
push
and
subb
aam
leave
mov
adc
pop
adc
in
push
pop
imull
xor
fsubrs
in
lods
cmp
aad
cmp
xchg
pop
add
jo
cltd
jl
mov
test
and
cmp
cmp
sub
nop
push
fcmovbe
addl
scas
jbe
mov
movsb
faddl
out
xorb
xor
xlat
push
pop
sub
test
xchg
mov
loop
xchg
xchg
sub
dec
lret
imulb
mov
inc
dec
in
jns
fisttpll
push
jle
int
xchg
aad
int3
mov
cmp
inc
cmp
xchg
sub
pop
pusha
ljmp
in
int
cmp
mov
mov
cmp
lret
jp
mov
jne
mov
dec
jp
gs
jb
dec
in
movsl
imul
push
aas
icebp
loop
mov
bswap
bound
pop
shlb
jl
jmp
mov
out
in
inc
lods
aad
lds
cmp
inc
adc
push
jne
pusha
inc
push
div
mov
cmc
stc
fs
stos
out
fbstp
cld
ficompl
scas
cmp
sbbb
stos
imul
scas
insb
outsb
mov
dec
loopne
mov
int
xorb
adc
sbb
loope
cmp
ljmp
imul
jle
jl
dec
jl
idiv
lods
xchg
dec
jne
cmp
inc
xor
sahf
ss
xchg
mov
into
int
call
cmp
ret
out
jp
mov
pushf
xor
and
data16
ret
popf
les
daa
push
shlb
fsts
push
test
ror
fildl
pop
cld
insb
decl
imul
and
or
lret
in
sub
les
fs
in
enter
or
scas
fdiv
cmp
push
jp
pushf
sbb
stos
lods
jns
mov
xchg
lret
cwtl
aaa
fistpll
sbb
adc
cmp
sti
pop
jmp
aad
loope
pop
sbb
pop
add
stos
leave
cmpsl
movsl
mov
repz
jge
mov
dec
into
sub
mov
push
lods
xor
xchg
push
lods
lds
adcb
fwait
push
les
call
sub
icebp
mov
jno
cld
push
cmp
pop
out
jns
scas
sub
adcl
rcrl
js
addr16
add
dec
dec
inc
ljmp
out
dec
fcompl
movsb
sbb
fadd
cmc
lret
mov
mov
xor
mov
jae
insb
stos
dec
sarl
cltd
stos
fdivl
test
pop
push
lds
insl
push
mov
pop
cmc
cmc
fidivl
push
mov
pop
adc
and
mov
divl
sbb
in
sbb
sub
fwait
xchg
push
push
int3
sti
or
add
out
repz
hlt
and
out
test
mov
in
int3
sub
adc
add
sbb
or
lahf
pushf
outsl
and
pusha
adc
cmc
ret
dec
adc
mov
incl
aaa
xchg
pop
or
insb
xor
out
and
cli
out
fwait
pusha
jne
xchg
ror
shrl
push
nop
cld
test
adc
dec
sub
push
and
pop
mov
in
ljmp
jnp
nop
cmp
rorb
fdivs
pop
fs
dec
lcall
movsl
cmp
push
xchg
cmpsl
in
insb
outsb
pop
leave
loopne
mov
mov
test
push
push
je
lds
adc
sbb
inc
popa
and
push
mov
pushf
sbb
popa
mov
lret
enter
adc
jmp
lret
and
fbld
adc
pushf
ds
fbld
ljmp
push
jb
cmc
mov
xor
ret
pop
sub
dec
imul
into
arpl
add
xor
mov
or
ja
sbbb
pop
out
repnz
es
push
orl
adc
inc
mov
mov
xlat
xchg
pop
adc
insl
js
das
or
push
xor
dec
mov
std
lds
mov
xchg
pop
dec
jl
clc
lret
bound
inc
int
out
stos
lea
addr16
imul
test
stos
imul
mov
addl
idiv
loopne
movsl
ret
mov
hlt
xor
xor
xchg
imul
cmp
stos
xlat
and
mov
pop
hlt
sahf
arpl
xchg
pop
jmp
popa
xchg
sub
xlat
cli
add
popl
dec
imul
lds
dec
xor
push
es
jg
nop
mov
adc
or
ret
sbb
pop
sti
scas
mov
es
incl
insl
pop
repnz
jae
adc
pushf
xchg
sbb
push
mov
scas
cld
popf
cmovge
pop
xor
repnz
jge
cmp
push
mov
and
cmpb
xchg
test
insl
sub
jns
test
lret
mov
xor
sete
mov
scas
mov
lcall
stc
test
lea
fistl
or
in
sub
pop
testl
jp
out
mov
xor
test
lcall
cmp
fisubl
ffreep
jno
stc
xchg
pop
push
or
dec
adc
loope
int
frstor
out
push
pop
push
fsub
inc
mov
sarb
and
mov
mov
jecxz
mov
sub
xor
loopne
pop
jecxz
hlt
aam
pop
dec
int
pop
insb
sahf
aaa
leave
popa
icebp
add
inc
sbb
popa
cli
xchg
pop
es
jne
movsb
cmp
shl
andb
movsl
int3
lret
repnz
inc
adc
lods
mov
xchg
popf
mov
rclb
rcll
ret
xchg
sub
push
lock
cmp
outsb
nop
fsubl
xchg
cwtl
dec
divl
shll
jmp
sbb
adc
xchg
bound
or
push
jmp
sti
repnz
cltd
cmc
mov
push
mov
insl
cmpsb
cld
stos
cltd
adc
sbb
scas
ja
xchg
js
mov
sub
gs
mov
divb
fdivr
jns
sub
jnp
xor
mov
xor
push
lods
bound
mov
mov
dec
popf
sbb
in
or
in
dec
in
xchg
sub
sub
push
or
jnp
xlat
mov
xchg
xchg
mov
jge
and
mov
lods
xchg
cmpsb
repz
in
xlat
jae
nop
and
push
dec
jecxz
hlt
leave
jge
lds
adc
push
test
outsl
and
jp
je
xchg
adc
mov
cmpsl
sub
shrb
mov
mov
ret
push
pusha
icebp
and
and
frstor
mov
enter
push
push
imul
pop
mov
inc
insb
ficompl
or
cmpsl
aaa
mov
lock
cmp
daa
inc
or
test
sub
pusha
negl
nop
cmpsl
mov
push
imul
insb
pop
rorl
cmp
inc
sbb
fistpll
popf
adc
mov
xchg
arpl
lret
dec
adc
loope
test
cmpsl
stos
fisttpll
jg
pop
mov
mov
loope
daa
ljmp
lock
sub
mov
in
pop
add
cmpsl
push
ds
push
jne
aaa
imul
stc
std
repnz
add
jge
fnstenv
daa
pop
in
pop
out
mov
das
pop
repz
movsl
data16
inc
pusha
aas
xchg
add
xchg
out
movsb
add
fisttps
jmp
jns
les
sub
jb
sub
ret
mov
push
lea
push
pop
cld
mulb
xor
ljmp
sahf
cmp
pop
xor
enter
mov
push
cmc
scas
ss
or
xor
lods
movsl
mov
cmpsb
fmull
jne
aaa
imul
test
loop
jg
inc
fcmovnbe
cli
scas
xor
inc
out
jne
insb
push
imul
and
sbb
jge
lcall
push
mov
mov
xor
dec
xchg
xchg
and
xchg
andb
fyl2x
lods
and
or
push
add
les
roll
add
jno,pn
subl
jne
rclb
je
cltd
mov
ljmp
push
sarl
cmp
mov
test
jnp
push
push
adc
int
adc
stos
nopl
repz
inc
insl
aam
inc
mov
paddd
test
cmp
fists
mov
addr16
pop
push
jne
xor
and
dec
or
xchg
mov
incb
push
pop
aaa
sbb
adc
jmp
hlt
sub
sbb
xchg
xor
leave
aam
dec
or
sub
mov
clc
mov
imul
cli
push
aas
call
aas
into
insb
adc
pushl
push
pop
cwtl
mov
inc
xchg
pushl
in
mov
cmp
xchg
iret
cli
push
aad
pop
cmp
lret
cmp
and
lret
lock
pop
push
mov
rep
sahf
jl
xor
add
push
push
add
std
enter
pop
cmp
out
sbbb
test
mov
stos
pop
scas
enter
mov
loope
pop
and
add
test
lock
inc
mov
sbb
fcoms
ret
push
adc
mov
xor
push
cli
cmp
cmp
xor
adc
das
cmpl
jl
xor
popa
enter
stc
dec
sub
out
ss
push
out
dec
lea
cmp
add
popf
jge
lcall
ljmp
lods
inc
les
lret
xor
mov
jo
or
mov
jae
cltd
pushf
gs
mov
icebp
jp
jns
xor
cmp
mov
mov
sbb
or
and
pop
aaa
mov
rorb
fbstp
movsl
loop
adc
pop
repz
and
jmp
jno
gs
jmp
sbb
and
mov
ret
int3
rcr
adc
xlat
roll
xor
je
repz
adc
sbb
mov
out
pop
mov
enter
push
scas
test
jmp
adc
out
and
jo
mov
loop
xor
imul
leave
add
outsl
mov
lret
sbb
push
cld
imul
pop
cmc
inc
add
mov
out
ja
lcall
jbe
adc
jl
mov
mov
adc
add
jl
sub
shrl
sub
jp
cld
inc
stos
mov
jb
jno
mov
hlt
shll
in
iret
repz
mov
mov
push
jb
mov
jle
and
ljmp
sbb
and
ds
fwait
push
sub
pop
mov
inc
ljmp
loopne
dec
int
sub
sub
roll
test
es
jge
dec
in
sbbb
mov
fstpt
inc
cmpsl
test
cwtl
add
outsl
pop
push
test
icebp
and
pushf
hlt
loopw
adc
ljmp
arpl
testl
push
aad
cmp
pop
stos
ficompl
xor
lds
call
bnd
out
jb
in
fisubs
mov
shrl
enter
mov
add
xor
stos
cli
push
movsb
fisubrs
jo
dec
fimull
ds
mov
sbb
xchg
jbe
inc
inc
out
xor
mov
fwait
xchg
test
push
lods
rcrb
pop
fwait
lret
cld
mov
imul
cmp
movaps
subb
mov
push
shr
lret
scas
cltd
cltd
lods
sub
mov
fisubl
imul
lods
pop
sub
lret
sahf
push
into
jbe
outsl
adc
dec
sub
xchg
insl
pop
repnz
shll
mov
idivl
lahf
into
jb
cmpsl
sahf
add
in
dec
jmp
mov
iret
inc
jo
test
sub
jns
pop
int
addr16
cltd
fs
jmp
xor
lahf
sub
pop
adc
lods
jp
fistl
shlb
es
mov
fsubrs
pop
xchg
addl
jmp
mov
pop
sahf
nop
adc
mov
in
xchg
xor
sub
mov
bound
clc
lea
rcrl
aas
mov
in
in
push
push
gs
scas
push
loopne
sti
enter
xchg
call
push
jb
jmp
or
sti
ret
pop
out
add
push
pop
mov
sbb
cltd
in
stos
mov
pushf
es
je
iret
cld
aam
cli
shrb
js
sub
aam
xchg
and
sahf
int3
lods
bound
pop
pop
jne
dec
and
movsl
mov
pop
dec
mov
xor
or
add
cmp
mov
cmpsl
push
fadds
pushf
das
lock
into
pop
or
mov
dec
ficomps
jecxz
in
fistpl
les
or
lods
shll
xchg
lock
int
push
fld
mov
loope
shl
fldln2
sub
cmpsb
sbbb
adc
sbbl
cwtl
pop
add
gs
sbb
jge
outsb
xor
adc
xchg
out
xchg
sbb
clc
add
ficoml
xor
xor
and
dec
lock
adc
inc
xor
aam
loopne
pop
mov
fsub
cltd
jae
or
sbb
mov
or
add
lods
stos
add
loope
fisttpll
shlb
cmp
cld
popa
jns
aaa
ret
dec
sub
out
add
xor
pop
mov
xor
cltd
xchg
pop
jae
outsl
js
push
add
dec
hlt
jb
or
fprem1
int3
mov
mov
jecxz
dec
inc
call
xor
loop
int3
pop
mov
push
dec
adc
pop
int
lods
mov
bound
sub
mov
sub
popf
pop
jbe
outsb
cmp
xchg
mov
jns
cmpsb
punpckhwd
sti
ja
arpl
jl
cmp
cmp
jg
aam
add
daa
adc
out
mov
pop
jecxz
and
push
fdiv
mov
call
xchg
add
pop
or
adc
enter
xchg
push
mov
jmp
mov
jge
cld
sub
and
push
fiaddl
test
pop
pop
cli
aad
sti
xchg
or
pop
mov
xchg
adc
mov
gs
or
sub
icebp
and
ret
pop
mov
pusha
stos
ljmp
xorl
push
out
xchg
dec
ss
jmp
inc
or
add
stos
xchg
mov
inc
cmp
sub
adc
pop
enter
das
mov
stos
inc
in
mov
sub
sbb
sub
test
cli
or
pushl
push
nop
loop
cmc
roll
dec
jnp
daa
sbb
out
mov
mov
roll
mov
lret
adc
in
int3
into
mov
icebp
cmpsb
or
daa
xchg
push
inc
mov
sbb
nop
and
xchg
push
dec
mov
outsl
dec
or
dec
pop
adc
lahf
fs
mov
addr16
popf
shll
cmpsb
push
mov
lea
imul
xorl
xor
dec
pop
lods
jg
add
fwait
xchg
mov
dec
rcl
inc
shlb
rclb
add
adc
add
aam
add
jmp
dec
xlat
std
adc
xchg
jmp
xchg
shll
das
jmp
jb
push
pop
cs
lods
hlt
and
xchg
dec
dec
idivl
jl
mov
and
cmc
pop
insb
add
xor
xorl
mov
sahf
and
jmp
jg
data16
adc
pop
test
sahf
sub
lds
or
clc
enter
popf
daa
out
shrl
aad
xor
fsubr
xchg
and
xchg
mov
mov
jmp
out
and
jle
mov
loope
and
add
dec
lds
leave
int3
push
cltd
out
scas
or
lret
xlat
ficomps
mov
test
push
jl
divb
inc
and
repnz
cmp
fsubl
int3
gs
ljmp
outsl
jmp
mov
out
jg
sbb
cli
in
cmp
lods
in
adc
jb
or
xorl
addr16
adc
adc
lret
in
scas
and
xor
sub
cmp
cmp
mov
bound
xchg
ljmp
cmp
jmp
fisubs
pop
push
loopne
pop
stos
pop
aam
adc
push
out
loop
xchg
jbe
mov
mov
sbb
dec
add
add
repnz
loope
stos
jl
push
pop
out
inc
cmp
jmp
daa
sub
mov
xor
in
pop
arpl
sbb
mov
jmp
cmp
pop
sbb
stc
pop
sbb
or
xchg
pop
cmp
sbb
xchg
mov
mov
pop
cmp
ret
mov
inc
mov
cmp
add
pop
jg
push
ficoms
jl
cmpsl
leave
scas
mov
les
ja
mov
jae
daa
add
ficomps
mov
movsl
movsb
incb
dec
repz
mov
popa
dec
loopne
xchg
arpl
cmp
rsqrtps
mov
sub
mov
iret
movsb
scas
xchg
xlat
mov
fmuls
cltd
sub
sub
sahf
sbb
out
lods
ficoms
nop
out
jbe
mov
shlb
push
jo
pop
aam
mov
push
pushf
pop
stc
jle
icebp
pop
ljmp
push
mov
jnp
adc
in
xchg
scas
fiaddl
jmp
xchg
mov
xor
jmp
inc
orl
adc
ja
or
arpl
in
xlat
insl
jae
mov
icebp
sti
test
jno
inc
cmpsl
lahf
scas
frstor
cmp
sub
das
push
mov
jp
sub
xor
std
cmc
inc
pusha
jle
jbe
pop
mov
pushf
pop
scas
fldenv
inc
cltd
test
nop
fistpl
pop
mov
inc
dec
jle
push
xchg
pop
mov
leave
mov
mov
stos
inc
fsubl
mov
jne
enter
sub
subl
mov
add
cmp
mov
es
lea
int
in
inc
mov
outsl
lods
stos
mov
sub
add
in
decl
cmc
jne
sarb
mov
fisubs
icebp
xor
sbb
sbb
mov
into
das
jmp
push
xchg
add
lods
xchg
cli
scas
xchg
xor
shlb
into
xor
dec
inc
ds
push
mov
fimuls
or
cs
pop
out
push
movsl
xchg
mov
gs
add
sub
pusha
mov
sub
mov
sub
mov
rcrb
push
mov
adc
inc
nop
fsubrs
or
mov
rclb
xor
les
ret
push
outsb
jns
pushf
ss
xor
fnstenv
or
xchg
mov
movsl
sti
pusha
lcall
loopne
inc
or
sub
jecxz
push
ljmp
adc
int
outsb
cmc
ror
and
ds
cwtl
push
or
mov
dec
sub
and
in
popa
lret
dec
push
add
shr
arpl
fimuls
imul
add
or
jb
pop
aad
adcb
cmp
jno
xchg
mov
adc
dec
enter
mov
mov
xor
in
imul
mov
or
mov
dec
xchg
xchg
mov
lods
aam
movsb
ss
mov
mov
pushf
mov
or
shrl
ds
mov
sub
shll
out
inc
pop
test
mov
lret
xor
arpl
pushf
lods
push
out
xor
nop
xchg
push
pop
orb
pop
mul
fsubp
push
sub
test
xchg
push
mov
frstor
adc
sbb
cmp
xor
jbe
arpl
push
outsb
popa
cmp
pop
mov
addl
insl
aad
push
jae
push
xchg
cwtl
mov
lods
popa
mov
and
mov
jo
mov
sub
enter
jns
repnz
mov
cmp
xor
aas
jl
lds
jne
insl
out
jnp
and
add
scas
das
testb
in
mov
pop
pusha
mov
into
lods
cmc
fmuls
xor
push
inc
pop
out
cmpsl
jg
insb
cmc
mov
rcrb
std
dec
jnp
xlat
and
mov
add
test
xchg
inc
pop
xchg
adc
cmpsl
jbe
pop
mov
and
push
pop
mov
mov
scas
cmpsb
stc
sub
mov
jge
mov
xchg
cld
xor
xchg
and
push
or
jecxz
mov
ljmp
das
xor
jl
pop
test
fildl
push
xor
mov
lret
adc
out
ds
jns
jecxz
fistpll
sar
rcll
jno
dec
ret
mov
lock
pop
adc
xchg
xor
xchg
adcb
mov
mov
mov
mov
lods
jl
mov
in
pop
dec
pop
sbb
mov
loope
lods
or
dec
jg
sbb
jg
push
pop
dec
push
sub
lods
push
xchg
mov
popa
mov
and
insl
bound
pusha
mov
mov
sbb
js
sbb
fs
xchg
scas
sbb
bound
jp
jmp
in
pop
xchg
and
push
sub
mov
mov
imul
add
push
ds
or
faddp
xchg
xchg
and
ret
ljmp
lods
test
int3
sti
mov
dec
dec
add
xor
in
ret
fs
data16
and
pop
out
sbb
jecxz
jne
rcll
mov
das
out
scas
pop
dec
shr
int3
movsb
aad
and
in
pop
or
sub
adc
sarl
pop
int
rcrl
push
sub
push
or
mov
pop
fwait
insl
imul
rorl
out
xlat
inc
mov
mov
dec
jp
sub
sub
mov
xchg
adc
dec
outsb
adc
push
jecxz
orl
aaa
sub
dec
xlat
ret
cmp
push
adc
xor
jb
adc
cmp
aas
lret
add
ja
outsl
adc
pusha
xchg
add
xchg
adc
jmp
jge
push
cmp
mov
sti
fs
fidivs
addr16
pop
mov
mov
push
cmp
add
lods
data16
mov
push
je
repnz
sub
sub
sub
sub
mov
push
mov
cmpb
cli
loopne
loop
push
xchg
pop
loope
mov
pop
fsubl
sub
bound
pop
loopne
push
dec
jb
sti
push
sti
sub
test
xlat
cmp
mov
dec
sarl
mov
lcall
data16
loop
push
movsb
js
pop
inc
js
cmp
adc
sbbb
inc
xchg
inc
je
out
xor
or
cmp
dec
mov
and
jno
pop
ret
mov
cmp
add
shlb
pop
iret
aas
mov
bnd
lods
ljmp
cwtl
adc
push
push
adc
pop
sub
cmp
cmp
jg
es
push
sbb
ficomps
stc
call
into
data16
aam
fimull
mov
icebp
repnz
cmpsl
ret
addr16
jno
mov
mov
icebp
scas
pop
addr16
mov
in
mov
mov
daa
stc
jne
scas
clc
popa
push
insb
sub
mov
jge
or
in
js
imul
aaa
xchg
shlb
aam
push
decb
xchg
jg
gs
jbe
andb
scas
addb
adc
mov
push
and
mov
mov
lret
dec
push
push
inc
inc
into
xor
scas
outsl
fimull
lcall
and
sbb
xor
negb
push
mov
leave
or
stos
out
jg
repnz
ds
out
nop
mov
cmc
scas
add
sbb
ret
bound
std
cwtl
or
xchg
aam
dec
push
ficoms
xor
popf
cmpsl
xor
push
inc
jl
test
out
jecxz
cmp
mov
xchg
test
push
add
cmp
and
icebp
xchg
sub
or
outsl
aas
out
lcall
stc
jle
push
xchg
lcall
test
or
mov
daa
mov
sahf
je
mov
mov
or
dec
ljmp
dec
lea
sbb
fs
pop
push
and
out
inc
jbe
xchg
repz
and
cmpsl
push
pop
dec
repz
popa
nop
fs
xchg
mov
mov
insl
rclb
xor
inc
sub
rcll
mov
jp
jecxz
ficoml
outsb
pushf
jo
inc
lcall
imul
mov
addr16
add
scas
out
data16
jno
xchg
add
aas
sahf
sbb
inc
scas
xor
js
inc
inc
mov
je
and
aas
or
ljmp
sbb
idivb
std
call
icebp
ret
dec
or
pusha
xchg
aaa
cltd
fistpll
mov
nop
inc
mov
pop
xor
rcll
fisubrs
sbbb
test
mov
jns
insl
or
push
fimuls
jns
pop
jns
sub
mov
sarb
cmc
stos
xor
lods
adc
sbb
outsl
arpl
mov
add
mov
shll
adc
push
sub
subl
ret
push
dec
mov
jg
call
icebp
leave
pop
jno
mov
outsl
pop
mov
xor
pop
mov
mov
scas
push
scas
push
out
adc
cmp
lea
nop
mov
inc
mov
pop
or
adc
mov
cmp
pusha
add
jnp
out
adc
mov
aas
cld
and
jl
push
ret
mov
test
or
lea
pop
stos
jmp
insb
into
mov
jno
jns
insl
repnz
insl
push
pop
clc
bound
call
insl
fisubrl
hlt
arpl
push
into
iret
or
ljmp
out
cli
ret
pop
cmpsl
fimuls
rclb
mov
and
adcl
add
gs
ljmp
sub
pop
movq
jle
dec
and
rclb
cmp
stos
jle
xchg
iret
adc
push
dec
or
call
mov
push
add
inc
lods
into
mov
cli
xor
ret
dec
iret
cmpl
xchg
test
bound
lock
repnz
mov
push
or
and
lret
fsubs
push
fnsave
pop
mov
add
cmp
addb
out
loop
and
fsubrl
xchg
push
lods
cmpsb
mov
std
mov
divl
clc
mov
repz
imul
add
out
sarb
pop
inc
sub
ror
cwtl
inc
pop
mov
dec
lods
and
test
mov
loopne
in
in
call
inc
shll
pusha
test
push
and
das
call
cmpsl
clc
js
sbb
or
xor
mov
lods
fcomi
enter
in
or
ljmp
push
push
sub
mov
in
pop
jb
pop
xchg
jo
mov
pop
mov
mov
mov
cwtl
shll
adc
adc
int3
stos
adc
mov
mov
pop
cmp
xchg
cmc
gs
cmp
jns
sbb
adc
push
and
dec
sbb
mov
fnstenv
sbb
and
ss
sub
xlat
cltd
aaa
pusha
xlat
push
rclb
jbe
dec
and
je
jns
jbe
add
xor
inc
out
ret
es
cmc
adc
rclb
push
lahf
cli
lcall
inc
xchg
push
sub
mov
inc
roll
shlb
lret
dec
jne
cmpsb
fwait
xor
pop
mov
jnp
push
inc
js
pushf
hlt
mov
adc
jg
mov
add
int3
jecxz
mov
test
into
ljmp
xchg
cmp
mov
popf
stos
jbe
dec
aas
xor
cmp
into
mov
inc
mov
or
lcall
adc
add
clc
jge
outsb
xchg
sti
nop
sbb
adcl
das
int3
mov
dec
jl
mov
jmp
sbbl
add
filds
xchg
xor
call
xlat
cmp
jo
scas
insb
fidivrl
xor
cmc
pop
or
xchg
adc
and
out
shlb
cmpsl
arpl
jl
daa
jmp
iret
push
jmp
rorl
jle
push
and
add
mov
int
push
mov
sbb
mov
xchg
pop
push
cwtl
push
dec
imul
neg
aam
xchg
scas
cltd
xchg
call
incb
call
push
mov
push
jl
mov
jg
ret
fsubs
pop
scas
cmpsb
or
pop
hlt
dec
mov
gs
cmpsb
xchg
cmp
insb
cmp
jnp
int
notb
jecxz
fcomp
stc
pushf
sbb
jne
cmp
sub
lret
stc
pop
in
xor
xlat
jnp
test
ret
repz
js
jmp
xor
test
mov
pop
and
mov
pop
insb
dec
xor
push
idivb
pop
aas
or
push
popf
sbb
mulb
jecxz
lea
add
scas
stc
movsl
sbb
imul
add
aaa
mov
mov
ret
adc
mov
in
stc
adc
bound
les
push
inc
push
push
addr16
cmp
mov
imul
imull
cmp
ljmp
xor
xchg
push
cmpsb
call
push
push
sahf
sysexit
xchg
dec
movsl
aam
inc
hlt
and
xor
ret
pop
sub
adc
xchg
push
leave
leave
pop
push
jns
cmpsb
mov
cmpsb
cwtl
or
mov
sar
cmpb
lds
icebp
mov
jmp
outsb
andl
sbb
pop
addr16
test
sbb
test
mov
inc
call
out
pop
cmp
into
outsl
sub
mov
mov
sbb
jmp
icebp
mov
incb
adc
mov
jnp
adcl
pusha
fwait
cwtl
movsb
fcomp
or
xor
outsb
xchg
and
pop
xor
cmp
in
fwait
in
movsl
stos
and
aam
ret
xchg
push
stos
enter
jmp
inc
adc
jle
ja
mov
loopne
push
cli
jecxz
push
push
pop
fcmovbe
sub
lods
scas
out
and
outsb
sbb
push
rcll
lahf
ja
mov
and
xchg
jg
xor
adc
jno
add
int3
and
repz
or
popf
push
aad
lahf
adc
es
push
dec
dec
stos
addr16
jne
jae
ja
sbb
dec
in
sbb
or
mov
xor
rcrl
jne
hlt
or
add
mov
mov
xor
pop
sub
and
std
mov
cld
rorl
jnp
inc
adc
sub
out
lds
xchg
loopne
int
stos
fdivs
mov
sub
call
rcl
jb
sub
xchg
xchg
jmp
cmp
or
dec
lret
repz
mov
push
lea
loope
setl
stos
imul
jne
push
decl
xor
fsubrs
mov
out
in
mov
stos
jnp
adcl
notl
sti
leave
mov
bnd
cmp
inc
xlat
lea
outsl
xor
cmc
cli
andb
je
clc
pop
dec
mov
loopne
fisubs
sarl
or
test
mov
call
adc
mov
in
das
shll
movl
out
cmc
pop
mov
pop
pop
mov
and
dec
clc
lret
arpl
cmp
jge
jb
mov
scas
xchg
mov
fsubrl
call
push
sbb
lock
mov
adc
lods
arpl
arpl
gs
or
mov
push
ret
pop
movsb
push
xchg
lret
addl
inc
mov
sbb
xchg
sbb
mov
clc
lret
jl
in
outsl
orb
pop
icebp
dec
push
out
mov
fstpt
int3
rcl
adc
aas
int
insb
pop
jmp
xchg
pop
enter
out
cmp
test
push
mov
xor
test
jmp
mov
mov
inc
call
mov
mov
fiaddl
or
popa
or
scas
inc
or
adc
lock
ret
icebp
cmp
add
xor
sarl
sti
pop
inc
aas
stc
psubq
sarb
mov
fmuls
nop
shl
sti
pop
dec
lods
sbb
repz
je
and
mov
out
sub
push
outsb
mov
inc
add
test
mov
out
fildl
ret
imul
mov
jl
push
mov
or
and
fbld
push
jb
and
cmp
mov
push
xchg
mov
pop
jmp
mov
pop
xchg
push
cs
mov
adc
outsl
sarl
or
or
hlt
mov
mul
in
repnz
inc
dec
ror
lods
pop
cltd
mov
aaa
fcmovne
aad
jno
pop
dec
ficoml
shrl
or
insl
xchg
stos
mov
mov
ds
fnstsw
ds
dec
jmp
mov
mov
stos
fs
fldt
inc
ds
rorl
adc
xchg
dec
sti
imul
cmpsb
outsl
lret
sbb
mov
les
mov
fxch
and
and
adc
or
push
jp
lahf
mov
adc
jns
pop
int
pop
je
lea
lock
jno
sub
xor
mov
mov
add
and
mov
hlt
cmpxchg
in
scas
mov
lods
xchg
push
push
jne
stc
push
cmp
mov
addr16
mov
push
hlt
data16
inc
pusha
lret
notb
in
inc
test
call
pop
aad
sahf
rclb
pusha
adc
idivb
push
or
rorl
xor
mov
loop
adc
sarb
ljmp
and
cwtl
sbb
mov
jo
fcmovb
cmp
repz
cmp
jge
int3
cmpsb
cmp
ret
push
insb
in
xor
std
mov
ret
jae
mul
dec
push
lcall
mov
loopne
inc
pop
pop
sbb
out
inc
xchg
cmp
cmp
dec
or
add
leave
sti
iret
out
lds
xor
mov
lcall
call
or
jns
cmc
mov
lods
ret
add
cmpsb
aas
sbb
inc
jo
jle
imul
push
daa
pop
outsb
orl
pop
mov
stc
xchg
jecxz
and
sub
popf
pusha
xchg
mov
add
pop
les
or
fcomps
pusha
js
xor
xor
iret
push
cmp
xchg
imul
scas
adc
pushf
cmpsb
xchg
loopne
inc
dec
xchg
jb
pop
cmp
or
inc
test
fsub
inc
xor
sub
push
fistpll
rolb
popl
aad
mov
out
fdivrp
data16
dec
mov
add
testl
lcall
movsb
cmp
cmpsl
pop
sub
sti
bound
jb
jp
jecxz
dec
xor
scas
ret
push
jnp
dec
cmpsb
leave
mov
mov
nop
test
mov
adc
jg
push
cmp
cmp
jo
movl
das
mov
lods
or
je
mov
mov
mov
ficoml
mov
ja
jmp
push
je
push
add
add
xor
int3
lahf
lret
insb
xchg
sbb
inc
decb
hlt
lock
push
in
lret
inc
daa
push
xor
push
negb
sbb
aam
or
dec
mov
or
das
sbb
lds
adc
mov
cmp
pop
jae
xchg
push
cmpsl
leave
stc
add
xor
jns
xor
insl
or
stos
lock
not
cmpsl
lock
jmp
xchg
sub
adc
jecxz
data16
out
rcll
mov
ffree
lahf
outsb
and
cmp
test
out
cmp
cmp
sti
push
loop
sbb
xchg
add
add
pushf
iret
roll
mov
jbe
jl
orb
push
pop
jmp
ret
cmp
push
cltd
cmp
push
xor
ljmp
hlt
dec
xor
bound
xchg
mov
jbe
push
arpl
sub
pop
or
mov
xor
je
hlt
jmp
xchg
das
das
jge
pop
insb
lret
push
add
sbb
push
call
test
mov
mov
clc
shl
and
fdivp
dec
popa
loope
aaa
mov
loopne
cs
in
enter
push
add
inc
inc
aam
out
test
test
repnz
insl
pushf
ret
xchg
xchg
xchg
bound
cmp
jo
jo
push
inc
out
add
adc
lea
xchg
sbb
pop
pop
xchg
cmp
push
mov
adc
jp
mov
int3
loop
arpl
cmp
cmp
jl
in
cmp
pop
lods
pop
movsl
pop
out
pusha
fisttpl
mov
cmp
test
cmc
jo
dec
xchg
or
or
lret
sbb
int3
xchg
cmpsl
cmp
das
mov
cmpsb
lock
sbbb
add
sbb
xchg
out
dec
sbb
jl
imul
mov
mov
xchg
aas
setnp
pop
cmpsl
or
leave
ret
or
lcall
and
pushf
iret
ja
fcoml
cmpsb
ljmp
or
aam
adc
pop
xchg
or
scas
mov
rorb
mov
push
aaa
and
movsb
repz
cmpsb
push
pop
add
jecxz
adc
scas
cmpb
fisttps
arpl
pop
add
add
adc
adc
mov
xor
mov
and
push
cmpsb
mov
push
push
sbb
mov
into
pop
fistpll
pop
imull
xchg
subl
add
and
inc
sbbl
xchg
push
jp
pop
sbb
mov
lcall
mov
cmp
ja
dec
cmp
imul
vprotq
je
insb
xchg
push
shll
rorl
or
cmpsb
cmc
jno
test
test
mov
mov
lret
insb
xchg
xchg
or
ja
ret
dec
es
enter
ret
sarl
pop
mov
out
xchg
fwait
xor
xchg
or
dec
enter
push
jo
push
lahf
test
add
pop
sbb
arpl
mov
jne
fldt
pop
add
and
nop
mov
pop
popf
in
adc
xchg
paddusb
inc
pop
fstpl
andb
add
jecxz
sbb
and
fstpl
inc
stos
mov
or
cmp
aam
mov
sbb
jae
mov
sbb
bound
pop
loopne
mov
addr16
mov
emms
jne
pop
inc
in
mov
out
mov
adc
in
scas
cmpsb
ret
cmp
sub
xor
dec
push
pusha
jmp
repnz
fcoms
or
fldt
fcoms
adc
adc
je
insb
xchg
cmp
out
lods
in
fcmovnbe
inc
sub
fiaddl
push
in
push
arpl
add
mov
push
ret
cmp
mov
aad
cmp
xchg
xor
loop
push
leave
push
push
mov
cli
xchg
jg
inc
jnp
mov
pop
push
lea
jnp
ror
sub
shr
jo
lods
je
fdivrl
roll
mov
pop
jle
pop
ret
nop
prefetch
les
push
out
xor
jge
imulb
das
xchg
sti
sub
lds
lahf
int
les
cmc
pushf
adc
cmp
jne
cmc
adc
scas
clc
ja
mov
loopne
jmp
mov
mov
mov
jno
inc
xchg
out
sbb
sti
dec
dec
xchg
adc
jl
or
ja
inc
cmp
inc
jo
rep
lea
pop
or
xor
hlt
imul
sub
jl
int
mov
shrl
jnp
stc
aas
sbb
push
or
cli
outsb
xchg
mov
xchg
or
adc
test
push
and
fs
adc
sub
cmpl
popf
scas
push
loop
jg
sahf
arpl
pop
in
cmp
jecxz
fidivrs
or
cli
data16
clc
cli
mov
lcall
lcall
jmp
js
test
jge
mov
push
mov
xchg
or
or
ficoms
pop
addr16
fldt
je
scas
ja
stos
sbb
cs
cmpb
push
fdivrl
aam
ja
rolb
sub
mov
in
out
adc
inc
push
fcomip
gs
leave
shlb
aaa
or
mov
sbb
xor
or
dec
repnz
or
and
mov
sbb
movsl
rclb
pop
jmp
sub
loope
fisttpll
lret
push
inc
rorb
mov
pop
nop
sbb
mov
pop
jge
cmpb
loop
mov
pop
jmp
scas
mov
jmp
jecxz
lods
lahf
sbb
mov
pop
imulb
push
das
mov
aad
add
dec
mov
sub
lahf
mov
xchg
pop
sub
mov
movsb
sub
mov
pop
add
jg
sub
ljmp
jns
popf
cltd
adc
xlat
testb
cmpsl
pop
outsb
sub
aaa
xchg
jg
daa
push
fnsave
cmp
xor
mull
dec
fisubl
mov
into
nop
pop
cmpsl
jg
sbb
and
aam
sbb
xchg
insl
xor
arpl
mov
mov
dec
fdivs
cwtl
jp
inc
inc
xchg
xchg
hlt
adc
push
and
std
lds
in
mov
or
xlat
sahf
add
inc
fisubs
add
int3
into
pop
sahf
cmpsl
add
lea
rolb
in
pop
sub
ret
sti
in
sarl
icebp
lea
push
js
cmp
push
mov
push
jl
and
std
adc
mov
fs
das
fcmovb
mov
in
xor
sub
jg
add
jne
cmpsl
inc
sub
jb
fists
sbb
jnp
loope
push
xor
mov
jg
push
ja
cmp
dec
sbbb
jbe
lret
sbb
fidivl
pop
popa
jg
adc
adc
cmp
cld
dec
sarl
pop
lret
mov
push
sub
mov
cmpsl
or
mov
add
fsubl
sub
cwtl
gs
jecxz
adc
aas
xchg
jge
and
and
cmp
and
mov
cmp
jne
inc
inc
dec
xchg
shlb
xlat
jns
adc
js
aam
stc
es
xchg
cmp
mov
or
pop
ror
out
and
or
jbe
and
cmp
push
repz
adc
insb
or
xor
sub
cli
adc
rcrl
lret
xor
loop
and
in
repnz
imul
inc
fmul
cli
xorb
xchg
ret
je
push
in
jae
fiadds
leave
test
aaa
mov
pop
cwtl
ret
jmp
lret
sbb
pop
add
insl
or
jnp
int
dec
adc
sub
out
test
outsb
adc
mov
out
cwtl
sbb
pop
xor
lret
lahf
sub
lret
mov
imulw
movsl
dec
subl
mov
inc
xchg
dec
repz
dec
mov
frstor
cld
sbb
lcall
insb
fst
push
fadds
int3
cli
push
xor
adc
mov
push
dec
cmp
sahf
roll
xchg
lock
arpl
adc
aad
popf
push
arpl
xchg
idiv
or
adc
sbb
and
ja
sub
push
es
pushf
fldenv
in
cmp
pop
pop
popa
popa
test
daa
pushf
inc
push
daa
xchg
in
cltd
in
adc
out
fldcw
add
push
add
push
rclb
sub
or
fcompl
scas
push
rolb
xorl
and
lods
xchg
inc
sub
out
pmullw
bound
dec
cwtl
pushf
push
and
movsl
cmp
and
push
add
mov
stc
jecxz
jmp
iret
xor
sbb
je
push
lea
sahf
mov
mov
aas
inc
fisubrs
insb
and
pop
xor
cmpsb
loope
dec
insb
lahf
sti
sbb
pop
les
aam
adc
stos
inc
testb
call
jmp
sarb
pushfw
xchg
pop
mov
jl
leave
test
test
out
repnz
and
mov
inc
insb
push
lods
cmp
dec
and
push
mov
add
or
loopne
pop
cwtl
xchg
stos
push
pusha
and
hlt
mov
cmp
jle
pop
mov
xchg
dec
cmp
in
pop
movb
mov
xlat
test
ret
enter
sarl
pop
pop
push
jmp
jmp
pop
or
push
popa
jl
sbb
mov
xor
decb
mov
pop
mov
or
mov
or
iret
lret
ret
out
dec
pop
xchg
into
xorb
repz
jb
mov
ret
jl
sbb
negl
arpl
out
imul
xor
mov
dec
ret
lahf
movsb
sub
movsl
cmp
adc
dec
mov
push
jg
dec
clc
adc
mov
ret
cwtl
pop
push
cli
push
sub
cmp
xchg
test
sub
add
sbb
sbb
mov
loop
cmp
and
add
or
jb
sarb
loop
cmp
adc
mov
jmp
push
lret
jb
and
pushf
inc
data16
je
pop
adc
pop
or
mov
sbb
fcomps
pop
scas
dec
inc
cmc
scas
xchg
shll
and
jbe
ljmp
test
lcall
scas
sub
mov
xchg
ss
mov
test
push
sbb
xorb
mov
mov
fbstp
jne
out
mov
mov
push
sti
pop
cs
xchg
mov
mov
jb
cmp
adcl
mov
or
mov
lods
xchg
arpl
testb
pop
mov
dec
adc
mov
lods
loope
mov
cmp
in
bnd
xchg
out
push
jl
loopne
mov
push
or
sbb
aad
fdivrl
mov
sbbl
add
rcll
jg
dec
push
stos
dec
ss
sti
sub
sub
push
sbb
sbb
fsubrl
sbb
xchg
fadd
dec
icebp
push
imull
pextrw
pop
mov
jle
adc
out
jmp
imul
aaa
xchg
nop
pop
add
adcl
lock
push
or
pop
sbb
out
mov
imul
push
dec
jg
lods
ret
sahf
lock
test
sub
mov
or
stos
in
fmul
fcompl
fcmovne
cmp
dec
loopne
mov
aaa
pop
lret
test
out
push
xor
lahf
inc
rorl
les
xchg
cld
sub
mov
movsl
mov
sub
scas
xor
clc
push
push
rolb
fcoml
scas
adc
xchg
xchg
leave
adc
loop
aad
mov
sbb
in
push
pop
cmp
imul
out
scas
fwait
cld
clc
jne
lret
cld
fidivl
or
sbbb
out
xchg
fsubrs
fmuls
test
shl
pop
iret
push
or
addr16
hlt
lcall
repz
lods
pop
dec
outsb
and
data16
fbstp
sub
mov
xor
movsl
mov
in
xor
das
in
sahf
addl
dec
add
cmp
mov
out
sbb
hlt
js
mov
cmp
dec
push
dec
sub
add
jle
repz
aam
and
lret
pop
mov
jnp
mov
inc
mov
mov
shlb
rorb
ret
mov
movsl
inc
xchg
mov
jmp
mov
sbbb
out
ret
out
inc
test
movsb
push
dec
or
sti
out
adc
xor
fs
pop
sti
aad
les
std
rcrb
data16
pusha
cmp
push
xlat
lds
jae
inc
or
push
mov
scas
inc
xchg
push
add
pop
xchg
call
jns
mov
adc
jl
lods
adc
fucomip
dec
push
sbb
push
mov
cmp
test
das
cli
fs
push
testl
aas
xchg
push
js
fcomp
xor
cs
les
mul
jp
cmpsl
lretw
ss
pop
mov
jnp
xchg
xor
leave
mov
arpl
push
repz
mov
lret
pop
and
inc
sub
pusha
pop
cmp
mov
leave
mov
cs
cwtl
loopne
pop
sub
cli
ficomps
cmp
mov
fwait
sub
jl
pop
sti
nop
sbb
add
adc
fstps
xor
clc
add
nop
pop
jmp
cmp
sbb
fsubr
add
imul
js
add
sub
dec
sar
push
cmp
leave
jb
insl
xchg
inc
adc
xchg
stos
mov
adc
xor
xchg
push
pop
in
inc
add
rclb
sbb
cs
fidivrs
adc
push
cmp
xchg
mov
rcrb
mov
punpcklbw
xchg
add
movsb
push
lea
cmovle
and
adc
lods
ja
out
xchg
mov
mov
jno
into
fstl
lahf
add
and
and
or
mov
mov
das
mov
fisubs
lret
xchg
rcrb
pop
dec
adc
lret
adc
ror
inc
mov
rorb
orb
call
data16
imul
mov
xorl
push
inc
shl
rclb
out
addr16
fs
pop
jle
push
jge
out
adc
push
push
imul
dec
out
loopne
sub
cmp
enter
jle
bound
mov
fwait
jl
fsubrs
daa
daa
sahf
popa
dec
test
icebp
popa
test
inc
inc
adc
xchg
or
movsb
push
pop
sbb
push
mov
cmp
cmp
jg
iret
dec
xor
inc
repnz
mov
rorb
rcrb
pop
mov
fs
dec
outsb
icebp
mov
inc
xor
shlb
fidivl
insl
adc
and
or
xchg
hlt
pop
movsl
lods
arpl
pop
in
sbb
std
add
iret
xchg
dec
mov
push
xor
sbb
mov
dec
rcll
sarl
stos
movsb
int
pop
mov
xlat
inc
inc
pop
clc
daa
mov
jmp
mov
out
mov
push
adc
out
xlat
subl
inc
xor
adc
out
add
addr16
popa
adc
clc
adc
js
imul
out
push
sub
cld
add
inc
and
xchg
fwait
and
out
fs
ds
shll
int3
pop
fsqrt
push
out
js
dec
add
sub
and
lcall
es
jp
mov
ret
xchg
cmp
dec
adc
jnp
inc
adc
popa
lret
ret
scas
inc
idivb
dec
mov
popf
sarb
pop
jns
addr16
mov
sahf
repnz
mov
pushf
pushf
ja
xchg
mov
add
lret
inc
mov
std
mov
out
push
jns
lds
or
jmp
pop
jno
outsl
insb
push
push
pop
into
flds
sti
sub
test
out
sub
inc
lods
push
mov
sarb
ljmp
mov
xor
push
sbb
inc
test
add
mov
mov
sub
and
rclb
cmp
xchg
mov
insb
push
pop
xchg
or
push
fucomp
mov
lea
stos
scas
adc
jbe
jp
icebp
pop
aaa
add
xchg
arpl
add
daa
inc
mov
mov
dec
loop
imul
push
add
mov
or
out
je
xorl
cltd
pop
push
xchg
sarb
jbe
add
jmp
repz
xor
xchg
movsl
push
daa
cs
filds
cmpb
je
adc
lods
inc
dec
popa
sub
fcomi
fdivrs
notl
or
and
popa
or
addr16
daa
scas
js
popf
xchg
call
imulb
pop
or
dec
xchg
popa
xor
sbb
popa
mov
xor
xchg
sbb
mov
push
pop
add
push
mov
pop
rclb
outsb
pop
or
mov
pop
mov
xlat
xor
sub
add
mov
loop
rcll
or
enter
add
adcl
hlt
dec
or
dec
mov
in
pop
mov
xchg
jge
gs
mov
dec
rclb
xchg
mov
mov
out
jnp
mov
aas
adc
add
cmp
out
int
push
js
inc
mov
sbb
sub
xor
shrb
addb
addr16
cmpsb
pop
jo
pop
cmp
ljmp
mov
sbb
movsl
testl
lret
scas
cmp
jb
sub
pop
cs
push
jbe
insl
sbb
add
test
mov
std
xor
xor
push
adc
lock
popa
inc
xchg
outsb
mov
mov
jl
cmpsb
imul
mov
push
inc
rorb
pushf
sar
xchg
shll
and
xorl
add
mov
ret
xchg
and
iret
inc
cltd
xchg
repnz
mov
pop
cmp
fiadds
xchg
movsb
lods
aad
outsl
sbb
insl
xor
in
into
sbb
aas
inc
mov
and
loope
jmp
ljmp
aam
inc
push
ret
test
xchg
les
insl
fsubl
sub
fstpt
leave
xor
jmp
jns
dec
xor
dec
mov
sti
sbbl
xchg
dec
addr16
dec
and
das
mov
pop
int
sbb
cld
mov
cmpsb
jb
in
cli
mov
add
repnz
sti
inc
mov
cmp
dec
aam
enter
repz
mov
inc
in
mov
call
mov
xchg
mov
mov
mov
in
enter
sar
ss
inc
es
push
pop
jne
in
pushf
adc
testb
mov
dec
cmp
scas
fcoms
cmp
and
call
mov
jbe
jp
repz
or
mov
pop
inc
push
incl
negb
jae
stos
sub
idivb
and
cmp
outsb
dec
cmp
sti
jge
dec
sub
lret
mov
sub
fists
inc
pushf
jg
je
rclb
xchg
cmp
loop
das
and
dec
or
mov
mov
bound
or
dec
leave
es
cmpsl
add
cmpsl
shrl
lock
iret
sub
dec
xor
ja
lret
cmc
mov
jp
xor
mov
mov
sbb
test
xchg
dec
jns
into
xchg
pop
push
in
inc
movsl
ljmp
push
xchg
scas
insl
pop
aaa
push
mov
sahf
xor
loop
xor
adc
je
xchg
mov
add
fsubr
xor
daa
dec
fisttps
xor
sbb
orb
orl
das
sbb
cmp
test
add
push
inc
add
fwait
inc
push
dec
adc
jb,pt
jo
inc
in
adc
data16
jg
fwait
dec
sti
jnp
sbb
cmp
adc
popf
push
mov
sub
dec
or
rol
daa
fwait
out
xor
jne
mov
push
loope
adc
aad
das
mov
call
fimull
cli
dec
xchg
jns
and
xchg
int3
cmp
repnz
sbb
aaa
adc
jg
sub
sbb
add
mov
jle
pushf
pop
push
jbe
aad
loope
add
and
subl
add
je
pop
fstpl
addr16
fiaddl
fcoms
cmpsb
fwait
lds
ret
out
and
fdivrs
and
insb
push
clc
push
pop
jecxz
xlat
cmp
or
jbe
ret
jno
adc
xor
je
jl
mov
xchg
loopne
sti
adc
sarl
pop
xlat
mov
mov
js
popf
js
fs
jns
pushf
stos
fstp
push
sbb
mov
sbb
icebp
or
xchg
fnstcw
cmp
ret
inc
and
pop
xchg
xchg
cmp
xchg
push
xor
dec
jo
repz
push
xor
xlat
in
cmc
sub
push
or
cmp
add
test
mov
xchg
push
fstpt
jne
pop
jl
imul
subl
call
jo
cmp
lahf
dec
ret
adc
push
bound
test
pushl
pop
push
dec
inc
loope
sbb
sbb
jmp
pop
idivb
mov
xlat
inc
sbb
sub
ret
xor
jl
pop
cld
mov
xor
pop
pushf
push
mov
jne
btr
dec
mov
add
xchg
nop
mov
xchg
xorb
popf
cld
les
js
in
mov
cmpsb
scas
dec
in
or
les
xchg
adc
ja
adc
adc
adc
imul
stos
loopne
sbbb
pop
icebp
inc
push
dec
in
jge
addr16
inc
psubd
rclb
ljmp
push
sbb
imul
xor
sub
ret
mov
fcmovnb
ret
mov
imul
std
pushf
faddl
sbbl
pop
inc
dec
mov
push
and
int3
mov
or
inc
lea
xchg
mov
inc
stos
sbb
lcall
iret
mov
popf
std
idivb
sarl
mov
mov
pop
test
xchg
cmp
fstl
jno
testb
sbb
mov
sbb
shll
int3
xor
push
adc
fwait
in
dec
prefetcht0
mov
push
je
ljmp
rcl
mov
loopne
xor
pop
dec
test
dec
or
test
pop
lret
and
or
xchg
rcr
filds
ljmp
or
fwait
xchg
movsl
dec
pop
iret
mov
jle
cmc
push
cmp
data16
popf
rcrl
pop
bound
ja
pop
leave
in
or
xor
mov
shll
outsl
add
int
add
iret
lahf
xor
or
pop
fld
jle
adc
jecxz
cs
inc
int3
in
push
jo
mov
mov
minps
sub
xchg
add
fists
out
repz
sti
call
pop
mov
cmpsb
mov
dec
mov
jge
xchg
stc
sti
lret
jecxz
stos
inc
mov
icebp
cmp
imul
popa
daa
cwtl
pop
xchg
push
jge
adc
imul
pop
mov
ss
cmc
daa
loop
and
push
lea
push
inc
push
jnp
pop
insl
or
and
pop
push
rcrl
cmpl
and
cmpsl
leave
add
cli
scas
push
sbb
movsl
fistpl
ftst
xor
daa
icebp
in
xlat
fwait
jo
xchg
in
pop
dec
je
dec
inc
in
test
xchg
int
shld
lods
jl
jg
fisttpll
or
lahf
sbb
or
pop
and
fistpll
mov
or
cmc
mov
push
mov
fidivs
dec
les
jecxz
add
pop
push
imul
mov
pop
push
out
fisubrs
jl
sub
cmp
jge
iret
sbb
pop
sahf
lods
nop
jno
mov
sub
rcrl
mov
les
into
or
jl
jo
mov
jae
iret
jae
inc
fdivrl
push
dec
in
mov
outsl
aad
jl
sub
cmpsb
push
pop
cmp
shl
ret
pop
loope
stos
xor
inc
stos
mov
mov
pop
sbb
js
jecxz
fwait
aam
in
and
adc
mov
and
out
das
je
cmp
stos
dec
mov
pop
mov
push
or
clc
lret
data16
lds
test
and
das
inc
cld
or
xchg
mov
push
adcl
mov
and
push
test
faddl
or
fwait
adc
sbb
mov
xchg
cmc
int
add
rcl
sub
pop
dec
iret
sahf
out
stos
inc
test
cmp
pusha
or
lcall
jo
addr16
jne
jne
std
dec
mov
mov
cmpsl
loope
mov
cwtl
sbb
adc
std
xchg
cmpsb
pusha
or
sub
test
mov
out
mov
dec
sub
dec
nop
push
cs
cmp
pushf
xchg
and
mov
pushf
incb
push
subl
imul
ja
sub
lods
or
add
std
or
fsubs
adc
xor
arpl
movsl
or
rcrb
adc
test
xor
dec
mov
mov
das
inc
inc
cmp
outsl
push
shrb
sahf
mov
cmp
imul
push
jecxz
movsl
jb
addr16
cmp
xchg
fstp
jge
jmp
les
dec
add
hlt
scas
jg
and
insl
scas
lods
mov
mov
xchg
fisttpll
out
mov
roll
sub
out
add
push
push
fstpt
repz
daa
sub
dec
sub
arpl
pushf
hlt
pop
inc
cwtl
shl
cmpsl
and
outsl
hlt
mov
mov
pop
sahf
xlat
xchg
mov
lods
into
iret
mov
pop
add
push
push
sbb
fiaddl
or
daa
mov
fadd
cmp
nop
xor
fst
lret
aam
repnz
mov
lahf
orl
stos
movsb
ret
jno
adc
pop
pushf
cs
aaa
mov
in
add
mov
push
ret
shr
cmp
sbb
in
sub
xchg
in
or
mov
add
mul
pop
jns
dec
fwait
sbb
sbb
int
pop
mov
sbb
outsl
std
repnz
fimull
in
sbb
scas
fldenv
jmp
sarb
or
nop
fimull
clc
mov
mov
push
xor
nop
and
cmpsl
es
hlt
xchg
ret
adcb
movsl
sub
inc
lea
rcrl
divl
xor
mov
pop
mov
fnstenv
pop
out
adcb
pushf
es
pop
test
lret
xor
adc
rorb
and
scas
inc
xor
or
shll
cltd
cmp
push
repnz
mov
xchg
out
mov
leave
dec
ljmp
push
xchg
cmp
cmp
mov
dec
and
and
test
sub
mov
inc
jno
xchg
cld
add
xchg
mov
mov
notb
decl
jl
and
popf
and
sbb
mov
or
push
ljmp
test
pop
xor
cmc
pop
dec
jo
lods
mov
daa
mov
int
inc
addl
inc
push
fadd
adc
lret
in
notl
sbb
jbe
or
jmp
adc
and
pop
sti
mov
sbb
sbb
shll
fidivl
cmc
jmp
push
xchg
jl
inc
jnp
pop
mulb
xor
or
xchg
inc
add
sbb
test
inc
test
pop
cmpsl
sbb
faddl
filds
push
sub
push
in
inc
add
dec
loopne
aaa
call
xchg
loope
int
pop
imul
pextrw
imul
xor
adc
sub
and
popa
insl
stc
pop
inc
and
out
leave
xor
inc
aam
pop
jo
ficoml
scas
mov
jmp
jnp
or
out
add
jno
cmp
xchg
push
inc
mov
jmp
mov
add
jne
and
jge
mul
lcall
fstps
jmp
dec
loopne
sbb
insb
js
dec
fdivs
dec
lods
jl
add
insl
hlt
pop
fstpl
push
in
testb
pop
xchg
add
add
stos
lcall
sahf
jno
pop
fidivrl
dec
lea
mov
frstor
loopne
push
fmull
cmp
cmp
outsb
xchg
lea
outsl
xchg
push
lcall
sti
jns
je
pop
dec
dec
add
cwtl
jge
pop
pop
jle
rcr
in
data16
xor
lret
inc
adc
out
in
or
adc
out
jb
push
ds
leave
inc
pop
mov
cmp
sbb
xchg
cld
sarl
std
divl
js
cmp
ds
mov
adc
xor
in
jg
clc
adc
fwait
xor
lret
cli
adc
adc
fwait
pop
inc
ret
dec
inc
lret
mov
ljmp
lds
lret
xchg
jmp
loopew
push
movsb
add
dec
mov
mov
shl
mov
ss
pop
loopne
out
or
arpl
dec
jne
mov
ja
inc
pop
and
aam
js
inc
js
lea
lahf
pop
lds
push
mov
inc
insl
jnp
dec
dec
test
hlt
pusha
test
pushf
mov
or
test
pop
icebp
in
adc
dec
mov
gs
pop
mov
mov
adc
pop
insl
stos
mov
outsl
pop
or
dec
mov
leave
inc
clc
test
dec
ja
popa
adc
dec
fidivrs
fsubrl
push
shlb
fildl
imul
int3
repnz
and
ret
lret
je
dec
shrb
not
jmp
out
imul
orl
sahf
mov
shlb
mov
lock
xchg
sub
imul
aaa
aad
and
std
sbb
jge
pop
std
sub
out
and
and
push
mov
fucomi
popa
mov
add
pop
add
subb
or
inc
fisubrl
insb
dec
xor
pop
add
pushf
fimull
outsb
cmp
xchg
jno
mov
fcmovu
pop
adc
lret
xchg
pop
rclb
and
push
xor
add
ret
stos
xchg
mov
pop
ds
cli
push
and
ljmp
sub
aaa
enter
mov
inc
popf
adc
mov
or
or
testb
add
lret
jp
repnz
cmpsl
jno
mov
and
adc
pop
sub
rolb
lock
sbb
lret
adc
or
sbb
or
js
mov
cwtl
fldl
add
sbb
sub
sbb
scas
xor
inc
mov
imul
mov
dec
int
fwait
cwtl
jecxz
xor
cmp
mov
movl
cmp
rolb
into
hlt
or
push
es
ficoms
dec
call
or
cmp
test
inc
mov
jne
push
and
in
or
stos
sarb
ds
xchg
push
roll
push
lock
or
pop
int
das
cs
mov
mov
xchg
bound
cmp
and
rclb
pop
popa
or
jb
aam
add
jbe
stos
in
int3
rcrl
sub
xchg
imul
daa
mov
pusha
mov
inc
push
jbe
mov
and
out
xor
out
ret
ret
mov
or
sbb
mov
insl
jp
or
int
mov
ljmp
negl
pop
cmpsl
inc
fs
out
ja
mov
sbb
sub
and
mov
nop
sbb
arpl
test
icebp
psllq
bound
xor
jo
jns
les
ret
fists
sbb
adc
outsl
adc
jl
inc
popa
cs
cwtl
cli
mov
cmc
pop
cli
sarb
movsl
or
lds
add
push
pop
xor
mov
jnp
add
fsts
stos
loop
loop
in
fld
mov
dec
lods
or
lret
push
leave
mulb
fisttpl
jmp
js
je
mov
sbb
int3
call
fs
xchg
push
hlt
sahf
leave
loopne
ret
mov
sub
dec
addr16
sub
xchg
sbbl
cmp
dec
push
jo
or
mov
xchg
mov
std
pop
mov
pop
jl
shlb
mov
lret
and
pop
cmp
adc
lds
jb
jecxz
bound
mov
xchg
out
mov
add
add
sbb
int
pop
jae
pop
jbe
pushf
push
outsb
sub
sarb
xchg
mov
or
fstps
mov
cltd
fisubs
out
add
sub
cmp
dec
xacquire
fdiv
outsl
gs
addl
mov
xor
dec
fsubr
mov
inc
outsl
xor
or
jmp
movsb
mov
mov
test
add
mov
outsl
jno
inc
pushf
lahf
fdivl
xor
imul
out
outsl
inc
mov
imul
pop
pop
sub
sub
cmp
cmpsb
fildl
popa
mov
data16
dec
or
jg
add
xor
popa
adc
loopne
loopne
adcb
cmp
mov
test
push
lds
jg
cmpsb
sbb
sbb
jle
push
mov
push
sahf
jns
or
mov
pop
stos
out
rolb
cwtl
call
mov
and
hlt
adc
push
mov
and
pop
xchg
repnz
pop
lea
push
pop
push
jecxz
jmp
jp
and
int
push
sub
pop
mov
jge
sbbl
push
push
xchg
in
dec
movsb
lret
xchg
or
inc
loopne
mov
cmpsl
xchg
pushf
mov
cmp
jge
and
pusha
push
xor
cmp
test
pop
mov
push
adc
repz
adc
sub
mov
mov
popf
pop
js
sahf
aam
and
aam
jp
push
jecxz
inc
and
cmp
es
push
or
xor
xchg
xchg
mov
ds
push
cmp
leave
jge
icebp
adcl
pusha
in
cmp
xchg
fcomp
adc
sbb
and
js
sbb
daa
outsl
in
sub
pop
das
inc
rorl
insl
aaa
mov
stc
push
faddp
mov
xchg
inc
push
mov
cmpsl
fildl
jl
jecxz
std
mov
scas
mov
jb
leave
dec
les
adc
stos
jmp
push
xchg
and
rclb
cmc
aaa
jg
or
adc
in
add
add
es
mov
test
js
add
adc
add
lcall
mov
js
mov
nop
mov
jmp
sbb
inc
icebp
jns
leave
insl
xor
push
inc
sti
pushf
pushf
test
mov
push
and
sbb
pushf
add
or
movsb
in
ficoms
add
ds
mov
mov
in
adc
insb
xchg
mov
jg
inc
pop
fiadds
aad
push
fdiv
int
add
add
add
add
and
adc
ror
fnstcw
sbb
add
