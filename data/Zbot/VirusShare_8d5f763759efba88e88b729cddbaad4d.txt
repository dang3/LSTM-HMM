call
add
fmuls
fs
xor
std
nop
mov
daa
shlb
ljmp
xchg
inc
pop
sub
lds
pop
or
call
sarb
mov
lcall
pop
push
negb
sbb
aam
call
jb
push
test
popa
jb
xchg
jne
ljmp
cmc
pushf
movsb
lds
cwtl
mov
aaa
imul
cmp
pop
add
jmp
pop
or
pop
mov
mov
jecxz
andb
mov
add
repz
outsl
incl
cmp
ss
jecxz
clc
jp
lahf
sbbl
dec
loope
and
call
sbb
dec
push
cltd
int3
jge
or
movl
mov
idiv
incl
and
jnp
push
push
mov
mov
test
testb
and
pop
push
inc
in
jg
add
out
add
adc
pop
out
add
add
adc
cmp
out
loop
pop
subb
inc
jbe
popf
divl
pop
cmp
jge
cmc
add
pushl
fimull
sub
jns
adc
sbb
pusha
loope
xchg
stc
movsb
sbb
xor
popf
loope
mov
sarl
sti
add
cmpsb
aad
lea
pop
dec
in
jl
mov
xorl
call
mov
mov
push
adc
pop
mov
fstps
call
jmp
sub
imul
outsb
cmp
xor
sub
mov
mov
aaa
and
decl
xorl
sbb
sbb
push
pop
sbb
sbb
lods
xor
popf
loop
pop
mov
dec
cmc
mov
div
lods
imul
mov
dec
inc
mov
jae
jmp
pop
push
mov
sbb
or
dec
pop
ljmp
sti
into
faddl
decb
mov
xor
popf
std
ja
mov
jmp
addl
mov
and
cmc
nop
cmp
fildll
xor
aas
mov
insl
imul
fmulp
add
inc
popa
dec
in
test
iret
pop
sbb
sub
mov
js
sahf
xor
push
push
test
std
icebp
mov
cli
mov
mov
outsl
in
jns
xor
cmp
gs
mov
pop
sub
inc
and
push
add
adc
push
mov
popf
loope
aaa
xor
xor
cmp
pop
pop
cmp
sub
jmp
mov
or
cwtl
scas
leave
xchg
jne
cmovne
shl
aaa
fwait
jns
xor
mov
cmp
iret
sub
inc
xor
cmp
notl
lea
or
push
mov
ljmp
lret
out
rcrl
es
mov
mov
cmp
ds
mov
addb
addr16
or
add
in
pushf
icebp
imul
add
pusha
cli
iret
fs
arpl
jecxz
mov
lcall
lcall
mov
cmp
inc
mov
lock
dec
push
push
push
pop
mov
fisubs
andb
fs
sub
ret
add
call
xlat
xchg
dec
jno
jbe
pop
cmp
in
shl
dec
mov
call
jecxz
or
aas
fistpl
je
xchg
test
sub
or
fdiv
sti
iret
test
mov
call
cmp
xor
jle
adc
scas
xchg
mov
push
mov
jns
jcxz
jbe
mov
icebp
push
clc
lods
out
xor
pop
ret
jno
mov
fmul
roll
lea
jge
outsl
or
add
aad
mov
jo
mov
lret
std
cwtl
mov
sar
mov
faddl
mov
int
ret
pop
nop
inc
jo
fyl2xp1
add
pushl
movswl
les
shr
push
jg
or
mov
pop
pushl
jmp
pop
stos
ret
dec
ljmp
sub
or
push
sub
repz
mov
mov
mov
push
inc
xor
add
mov
xor
fs
inc
inc
jmp
nop
inc
add
inc
push
add
add
add
adc
jg
sub
pop
xor
and
aaa
jbe
ljmp
mov
xchg
test
orl
sub
jle
xchg
adc
push
fdivrp
lcall
or
andb
fsubl
pop
out
fbstp
ljmp
and
aas
or
sahf
fs
pop
orl
addr16
inc
ja
add
mov
push
mov
stos
imul
mov
mov
or
sbb
loopne
adc
insb
xor
mov
mov
andb
push
and
arpl
test
add
pop
or
decl
push
rep
jo
add
pusha
pop
push
insl
pop
dec
das
jle
or
mov
mov
insb
cmp
dec
addl
jge
pop
and
arpl
mov
jns
ljmp
dec
bound
in
fstl
movsl
push
into
xchg
nop
mov
cmp
or
ror
test
lock
loopne
pop
outsl
clc
ljmp
jne
xlat
adc
and
ret
jl
xchg
jmp
jp
repz
inc
lods
sahf
pop
adc
pusha
aaa
fcoml
mov
xchg
xchg
cmp
xchg
imul
sub
test
jmp
notl
out
mov
mov
andb
int
jg
adc
push
hlt
in
jmp
and
outsl
aas
imul
dec
cmp
lcall
lods
repz
xchg
push
sub
jne
xorl
mov
mov
sub
mov
call
fstpt
fsubrl
sbb
lahf
pop
sbb
sub
dec
sub
mov
incl
movsb
dec
mov
stos
fmull
lahf
inc
dec
jns
insb
mov
int3
cli
cmpsb
idivl
sbb
jp
lcall
ljmp
lcall
ret
xor
mov
std
stos
lods
fcompl
incl
ficoml
and
mov
xchg
fisubrs
icebp
cld
jb
stos
cmp
add
ljmp
mov
xchg
sub
jne
out
mov
lahf
pop
cmp
and
jge
push
js
in
push
mov
and
xchg
cli
fs
xchg
add
mov
int
jb
pusha
fdivr
call
pop
sbb
sub
fsubs
test
imul
int
xchg
ret
xor
lret
sub
out
push
movsb
cld
push
mov
push
and
push
inc
adc
jne
adc
pop
repz
xchg
mov
lahf
cmc
lods
dec
fcmovne
outsl
cmc
dec
xchg
pop
out
into
jle
push
push
out
mov
mov
lcall
pop
mov
cmpsl
aam
fs
stos
xchg
push
pushl
and
push
outsb
inc
or
mov
shll
jns
outsb
out
loop
and
loop
fwait
cmp
inc
cmp
loopne
jno
mov
mov
rcrb
leave
jl
ljmp
dec
pop
aaa
pop
push
push
xchg
int
sarb
mov
fs
pop
pop
and
cmp
test
sbb
mov
push
movzwl
xor
sbb
outsl
xor
cmp
lret
push
xor
loop
sbb
xlat
cmp
mov
sub
scas
sub
mov
xor
add
xchg
xlat
or
movsb
aaa
and
das
clc
fwait
call
xor
xor
cmp
mov
pand
sarl
pop
xchg
out
fimuls
lcall
loopne
mov
fidivrl
cs
add
mov
cmp
fistps
mov
into
pop
popf
push
mov
outsl
mov
dec
push
iret
fildl
xor
sub
adc
movsl
ret
shl
cmp
mov
inc
xor
out
fistpll
mov
mov
ret
push
imull
cld
ss
lahf
cmp
xor
je
or
pop
ds
pop
in
lcall
pop
pop
mov
into
push
jne
bound
cmpsl
cs
lea
jg
pop
sub
jnp
mov
inc
das
mov
inc
xor
xlat
outsb
xor
jl
das
mov
jno
sbb
sub
movsb
sbb
jg
sbb
lds
sbb
push
int3
mov
push
ds
jg
jb
mov
push
mov
inc
inc
fs
fistpl
outsl
outsb
push
cmp
xchg
int3
jns
sahf
mov
xchg
pop
push
outsb
es
pop
mov
popa
outsl
pop
lock
loop
cs
shrb
xor
in
xor
movsb
iret
testb
lahf
pop
sti
movsb
pop
or
arpl
gs
aas
mov
mov
stos
movsl
jne
xchg
pop
add
cmc
fldt
stc
fiadds
cmp
subl
int3
xchg
or
cmpsl
xor
cmpsl
or
rorl
movsl
sbb
xor
xchg
in
pop
add
mov
push
sub
movsl
push
xchg
idivb
xor
pop
jge
push
sbb
push
push
and
jg
aaa
lahf
sbb
sbb
imul
in
imul
mov
int
xchg
jle
mov
jecxz
jg
sti
fsubs
arpl
push
sub
lds
push
scas
push
mov
or
push
shl
mov
push
lret
stos
dec
sar
jmp
pop
xor
mov
mov
lret
pop
pop
mov
lret
mov
fdivr
jmp
and
pop
addr16
ret
cs
and
push
xchg
mov
adc
inc
inc
jle
pop
pop
pop
adc
shlb
inc
movsl
outsb
push
ds
pop
xchg
fcomi
lahf
shll
sbb
scas
pop
cmp
or
mov
sub
mov
es
cmp
ds
jmp
shr
and
fs
fldenv
cmpsl
das
adcl
out
ljmp
das
popf
mov
push
pop
test
push
pop
add
aad
pop
mov
decl
jecxz
xlat
lcall
mov
jno
dec
mov
in
std
call
jne
adc
insb
fisubs
xor
add
dec
shll
xlat
into
shll
mov
sarl
mov
push
lods
mov
or
idiv
lcall
jb
xlat
pushf
stos
xchg
loopne
add
xchg
push
loopne
add
mov
incl
or
leave
das
out
lods
aaa
cwtl
andl
cmp
add
jg
jecxz
ret
shrl
mov
push
ja
fstps
sub
shll
repz
mov
add
push
insb
lds
fcoml
sbb
sbb
dec
outsb
jmp
pop
push
scas
mov
and
xor
loope
dec
outsl
sbb
decl
lcall
scas
out
ljmp
sub
call
out
xlat
pop
and
push
fildll
pop
shrl
lcall
add
pop
shll
mov
sbb
pop
cld
rorl
es
ficoml
scas
and
movsl
loope
icebp
ljmp
aaa
sub
sahf
outsb
mov
leave
pop
daa
cmpsl
mov
mov
int3
pop
xlat
mov
sarl
sub
inc
fdiv
repnz
aaa
mov
inc
icebp
sub
pop
push
mov
cmp
push
sub
pop
cwtl
lahf
mov
addr16
and
je
incl
jg
leave
xor
adc
imul
shl
mov
xchg
cmpsb
or
pop
aad
jp
fldenv
mov
test
pop
shll
outsl
cs
dec
shrl
sahf
aad
xchg
pop
movsl
push
dec
fmuls
imul
cs
hlt
lods
ficompl
es
out
mov
in
icebp
or
lods
outsb
leave
pop
js
repz
loope
jecxz,pt
das
inc
mov
decl
ljmp
mov
xor
fbstp
es
mov
scas
mov
dec
call
mov
push
ds
in
call
jmp
mov
mov
arpl
lcall
or
ljmp
mov
cmp
insl
and
sub
or
xchg
push
lds
in
les
in
lds
call
in
mov
stos
rcll
push
mov
jge
cld
popa
cltd
popf
imul
mov
das
iret
push
xchg
daa
pop
ljmp
cmp
fiaddl
add
sub
sub
sbb
cld
lods
ja
outsb
popa
jo
sbb
call
inc
gs
jb
imul
je
insl
push
jae
jb
popa
je
add
ss
pushl
inc
xor
pop
ss
inc
inc
push
jae
imul
aaa
dec
aaa
imul
in
lcall
imul
xor
jae
xor
inc
xor
insb
jo
inc
cmp
push
dec
jno
dec
inc
dec
xor
jo
push
inc
insb
push
pop
imul
jg
sti
call
jno
push
jae
inc
js
imul
push
jne
jo
insl
jns
dec
push
jmp
cmp
popa
insb
outsb
dec
arpl
aaa
pop
push
insb
outsl
outsl
bound
push
xchg
fistpll
dec
arpl
push
inc
ss
imul
jo
jno
outsb
push
inc
inc
jb
add
jae
xor
insb
dec
xor
aaa
push
dec
push
dec
push
js
jbe
movsb
addr16
bound
dec
insl
dec
dec
aaa
dec
inc
push
sar
inc
jbe
jp
clc
jg
pushl
dec
dec
push
ss
data16
dec
inc
inc
sub
dec
ja
xor
dec
push
jo
xchg
pop
test
push
lock
divb
outsl
jo
dec
cmp
xor
ss
ja
push
inc
sbb
mov
jne
dec
gs
inc
cmp
sbb
gs
xor
ss
bound
push
inc
arpl
push
shll
push
jo
inc
dec
insb
inc
jne
inc
cmp
inc
bound
jmp
cmp
bound
push
jns
dec
dec
inc
inc
push
xor
push
fs
inc
into
jne
mov
dec
inc
xor
popa
jle
inc
push
fs
outsl
jae
and
leave
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
call
add
dec
mov
ss
repz
pushl
call
dec
add
inc
prefetch
enter
inc
add
sldt
sti
jbe
or
or
lock
addb
addl
enter
subb
pop
je
or
decl
jle
add
sbb
push
addb
sbb
add
int3
test
add
mov
fildl
cs
mov
push
pop
or
xorb
jp
jbe
jp
jp
cmpb
dec
sarl
sub
mov
push
fs
hlt
imulb
add
sarl
stc
incl
cmp
or
add
and
jl
bound
nop
cmpsb
sub
in
fwait
sub
cmp
into
or
dec
sbb
cmpsb
mov
aas
inc
inc
adc
push
pusha
add
cmpsl
jns
mov
sbb
cli
add
dec
outsb
jg
sarl
mov
ljmp
dec
imul
and
pop
data16
andb
push
push
rcl
decb
or
sub
adcl
rcrb
xor
mov
add
sub
push
out
inc
jecxz
push
mov
sbb
or
mov
add
xor
add
out
in
insl
lock
or
rclb
addb
mov
xchg
movsb
pusha
sbb
fsubr
jmp
or
cmp
cs
pop
push
sbb
mov
sarb
dec
xor
xor
pushf
add
push
pusha
or
ss
lfs
rcl
decb
fistps
sbb
cmp
xchg
andb
push
sbb
lock
mov
inc
loop
add
inc
repz
ljmp
mov
xor
test
pusha
xchg
or
int
lock
in
or
wrmsr
js
sbb
movsl
loopne
lock
loopne
shrb
jns
sub
cmp
fdivrp
jnp
xchg
pusha
sbb
stos
push
mov
push
lock
mov
cld
scas
sbb
loopne
test
cs
mov
pop
pop
movsb
pop
stos
mov
adc
imul
les
cs
rclb
xor
sarl
imul
imul
mov
rcr
les
jg
ljmp
int3
loopne
loope
push
jne
and
add
cmpsl
mov
popf
mov
fldt
sbb
and
add
hlt
shll
stos
cmp
mov
in
ret
pop
imul
fnstsw
push
cli
loopne
ljmp
cs
xor
or
push
in
pop
fidivs
sub
pop
push
neg
loopne
mov
xor
rorl
sbb
jge
shrl
dec
int
sbb
in
cmp
jo
or
push
shlb
xorb
inc
push
or
bound
or
push
push
cmp
dec
push
sbb
add
xchg
jmp
mov
ds
push
add
or
cld
dec
jnp
xor
out
enter
add
mov
xor
adc
jo
mov
aam
aaa
lahf
cmpsb
out
sbb
push
mov
cld
imul
jl
mov
stos
sahf
jb
popf
cmpsb
sbb
xor
lock
sbb
push
jo
mov
cmp
outsl
lcall
push
mov
in
lcall
jo
pop
sbb
out
cmp
into
mov
mov
loopne
push
cld
and
cmp
stos
setp
aad
stos
inc
and
div
test
mov
shlb
in
loope
cmp
push
mov
mov
fdivs
mov
pop
ljmp
adc
sbb
xor
cmp
dec
sub
sarb
push
mov
xor
jo
sbb
idivb
mov
mov
push
mov
pop
add
xor
sbb
lock
jnp
jo
xor
mov
jno
je
or
hlt
adcb
pop
mov
push
insl
fidivl
inc
xor
lcall
fnstcw
pusha
inc
add
add
daa
cmp
cli
pushl
add
inc
test
fwait
cld
add
or
pop
add
fstpl
xchg
pop
testb
in
das
xchg
xor
mov
sbb
add
add
lcall
sarl
xchg
out
mov
sub
andl
mov
mov
mov
pop
push
mov
xor
dec
xchg
inc
test
jns
fiadds
mov
fwait
stc
sti
test
dec
lods
loop
or
ljmp
mov
add
bound
xchg
js
mov
dec
out
ds
push
dec
push
lcall
fiaddl
js
bound
addr16
jle
jl
arpl
imul
nop
add
pop
cld
idivb
imul
jp
cs
jl,pn
pusha
jp
arpl
push
mov
adc
and
mov
jl
add
mov
or
data16
fildl
or
dec
add
pop
ds
pop
addl
ss
pop
inc
inc
and
pushl
sub
pop
xchg
cs
xchg
outsb
outsb
data16
inc
rcr
jg
or
jle
add
adc
add
jo
pop
je
push
sub
dec
pop
xor
mov
sub
repnz
rolb
mov
add
insl
inc
add
xchg
stc
cmp
call
xchg
sahf
rolb
sub
add
clc
pushl
add
xor
jae
or
cmpsb
out
xchg
orl
add
cmpsb
insl
lea
ret
xchg
imul
rcr
ficomps
fidivs
fdivl
fdivs
fucomp
stc
fidivs
mov
add
rcrl
sbb
mov
add
mov
aad
shl
xor
mov
je,pn
mov
shll
adc
adc
mov
arpl
push
adc
out
push
sub
mov
or
pop
orb
or
xor
iret
push
int
fildll
add
or
das
or
imul
mov
or
rorb
ss
add
das
sub
sub
sub
shlb
mov
add
cmp
cmp
cmp
add
push
add
insl
push
call
bound
cld
filds
jl
jp
js
jns
ja
add
incl
testb
jae
add
fiaddl
filds
je
add
add
nop
add
or
or
or
or
imul
add
add
cld
push
sub
lods
add
add
or
cmpsb
pushl
add
add
push
in
and
add
mov
out
mov
mov
add
inc
out
arpl
mov
adc
sarl
insb
jne
push
mov
xor
ljmp
mov
dec
adc
rolb
repnz
jp
jmp
outsl
clc
mov
dec
gs
mov
mov
mov
out
inc
jle
pop
ret
lret
push
dec
inc
sbb
adc
lock
in
in
inc
test
jl
push
cli
adc
loope
inc
push
lcall
sub
loope
insl
and
add
add
dec
scas
sbb
aas
or
aaa
adc
mov
or
push
adc
push
lock
mov
mov
jg
adc
test
jbe
add
in
mov
test
jb
sub
adc
lcall
orb
sarb
stos
call
int
mov
loopne
xchg
sbb
cwtl
or
xlat
int
je
adc
sub
jle
jg
cmp
and
repz
int3
or
dec
cld
cmp
xchg
sub
lcall
fldcw
pop
fisubrl
mov
fidivrl
ja
aaa
jae
inc
lods
or
add
sub
out
add
add
add
cld
add
std
push
fcomi
adc
cmp
mov
test
add
push
repz
pop
cmpsb
sub
mov
add
add
rcr
jle
push
les
inc
or
and
add
add
fcmovnu
or
adc
add
xor
add
ss
ret
mov
in
adc
fildl
repnz
lods
push
add
cmp
mov
xor
inc
pop
or
sub
push
in
jbe
jnp
rorb
or
cmp
sbb
data16
ds
jg
or
rclb
dec
rorb
enter
stc
mov
add
mov
testb
sub
add
stos
mov
sbb
pop
hlt
ficoms
notb
andb
rorb
push
cld
outsb
outsb
lcall
add
add
cltd
mov
cwtl
cmp
shrl
add
and
sub
test
mov
pop
lcall
sub
in
xor
imul
add
or
sbb
pop
sahf
pusha
cmp
pop
mov
rclb
test
data16
mov
inc
push
sbb
or
add
xor
rolb
in
xor
push
sar
notb
scas
inc
rorb
gs
cmp
fmul
out
adc
adc
sbb
shrb
cmp
mov
add
add
movd
inc
sub
jbe
adc
daa
inc
mov
fidivl
add
sbb
icebp
loopne
xchg
loopne
pop
aaa
mov
loopne
inc
loop
dec
add
xchg
sub
repz
cld
or
inc
dec
add
loop
dec
loopne
out
pop
loopne
imul
jmp
sub
mov
or
push
scas
or
out
mov
mov
sbb
mov
loopne
jp
rcr
add
bound
pop
lods
loop
push
lock
or
or
cmp
mov
or
or
xor
loopne
rolb
adc
pop
lcall
add
cmc
xchg
pop
jg
pop
outsb
or
outsb
add
push
xor
adc
sahf
in
jae
imul
jl
testb
cld
jns
loopne
out
loopne
nop
loopne
lret
cwtl
mov
or
fs
adc
cmp
ss
push
dec
loopne
pop
gs
daa
in
ds
mov
xor
mov
loope
aam
sbb
stos
lahf
add
xchg
loopne
incb
ret
xor
loopne
or
mov
cmp
pop
sbb
or
xor
sbb
loopne
xchg
loopne
jb
pop
rorl
bound
repz
loopne,pn
push
shl
jns
out
push
inc
xlat
loopne
dec
popf
loopne
cmp
clc
andl
enter
mov
pop
fdivl
pusha
add
cli
inc
pop
fcmovb
push
pop
or
insb
push
or
jp
add
jns
mov
daa
xchg
sbb
loopne
addb
cld
cltd
loopne
jb
loopne
jle
pop
push
fidivs
add
inc
loopne
pop
dec
and
adc
inc
add
mov
or
mov
sub
loop
add
or
cmpsb
mov
testb
and
out
outsl
mov
sbb
aam
add
mov
adc
stc
loopne
cmp
fwait
cmpsb
aad
inc
xchg
es
shlb
adc
data16
cmp
pop
fucom
sub
jbe
jle
push
loope
ficoml
cli
dec
dec
cld
mov
mov
push
int
sub
ret
lret
mov
xor
clc
repz
pavgb
adc
or
adc
adc
outsb
add
adc
jae
int3
loopne
push
cmp
and
pop
dec
adc
stos
lcall
jo
add
push
sbbb
loope
or
repnz
jo
add
sar
testb
es
lock
or
or
mov
div
sub
jbe
push
jo
jle
fstpt
or
jo
inc
pop
lock
jo
outsl
mov
testb
or
loope
loop
xor
or
mov
add
in
fcmovnu
jg
js
dec
stos
lret
jo
mov
loope
add
fisubl
stos
mov
imul
subb
sbb
pop
fisubrs
cld
filds
jo
jo,pt
fnstenv
stos
adc
add
fsubrp
mov
mov
inc
mov
fsubp
int
rcll
jo
scas
and
inc
xchg
lcall
mov
outsb
add
sub
adc
xchg
arpl
dec
test
scas
jmp
adc
sub
jecxz
xchg
ret
imul
jnp
mov
and
jno
push
pop
adc
inc
js
xchg
std
in
push
inc
jno
cli
dec
incb
push
sbb
xor
mov
icebp
sbb
xlat
lcall
jb
mov
sbb
inc
mov
add
lock
or
outsl
lcall
sbb
pop
loop
fcmovne
sbb
and
mov
fcmovu
fwait
jno
or
xorl
sbb
test
test
data16
mov
mov
mov
insl
addl
jge
lds
repz
mov
adc
mov
add
into
into
les
outsb
add
int3
lock
or
or
cmovg
stos
rdpmc
push
andps
cmpsl
movd
movsb
movsl
punpckhdq
mov
fwait
ja
pop
pcmpeqw
pmullw
or
cmovl
mov
wrmsr
mov
bswap
mov
outsl
lfs
push
mov
fwait
mov
mov
je
mov
rorl
pshufw
pop
mov
bswap
getsec
enter
lar
movhps
ret
mov
femms
pmaxub
push
fisttps
dec
paddusb
dec
fisttpl
stc
fwait
mov
orps
punpcklbw
aad
jle
pmaxsw
pop
mov
prefetchw
jmp
xor
wbinvd
lsl
movhps
loop
fwait
mov
sidtl
decb
pop
decl
dec
paddb
inc
sti
emms
cwtl
mov
xorps
punpcklwd
cmc
movq
insl
psllw
pusha
lods
scas
or
in
sub
push
sub
adc
or
enter
jns
fxrstor
movzwl
pushf
or
or
add
lret
or
bswap
or
push
or
adc
adc
bound
sarb
push
or
or
rorb
enter
psllq
xchg
mov
ss
lods
or
es
insb
outsb
test
xor
or
jo
or
or
sar
addr16
inc
cmpxchg
xchg
call
sbb
insb
ds
dec
or
or
cmp
aaa
jg
or
or
psubsw
jg
or
and
adc
or
fildl
cmp
adc
xor
scas
or
lods
cld
int
cld
or
lods
or
stos
or
ds
or
test
cld
ds
int
cmpsb
or
movsb
or
mov
int
cld
int
jmp
or
mov
repnz
int
cld
or
mov
or
or
mov
mov
mov
mov
mov
mov
cld
int
mov
or
into
or
int3
cld
int
cld
or
ds
enter
ds
or
enter
leave
or
int
or
ds
or
les
sarl
or
ret
ds
int
cld
int
rorb
rorl
fimuls
sarl
fisttps
out
fdivrl
or
fisttpll
in
fimull
ljmp
or
out
jg
aaa
or
xlat
or
aam
loop
aad
jecxz
or
aas
jg
rorl
std
rorb
xchg
rorl
xchg
or
or
mov
or
or
adc
or
int
sub
lret
or
aaa
jg
aaa
enter
leave
or
or
or
or
les
and
aaa
jg
or
or
ret
or
rorb
or
or
jg
aaa
jg
or
or
or
fmull
cmp
fisttpll
cmp
fisttpl
cmp
jg
aaa
fmuls
cmp
cmp
or
or
or
aam
xor
aaa
jg
or
or
or
in
or
dec
or
or
repz
jg
or
call
dec
or
or
or
in
inc
aaa
jg
aaa
in
inc
or
or
or
loopne
inc
loope
inc
adc
decb
pop
decl
pop
or
or
pop
pop
or
add
mov
or
or
test
or
or
out
out
or
push
or
lahf
or
jmp
or
add
mov
or
or
jg
mov
adc
or
mov
or
mov
pop
repz
jg
or
or
sahf
or
aaa
jg
or
or
or
or
or
or
int
dec
or
or
aaa
jg
aaa
lret
or
or
or
or
or
fwait
fwait
int
push
or
add
xor
xor
int
or
adc
or
or
or
fisttps
inc
or
or
cld
int
fisttpll
dec
or
or
dec
or
or
cmp
int
cld
int
inc
xlat
or
aam
cmp
or
rorb
inc
shl
data16
or
or
or
add
mov
or
or
adc
or
or
or
jmp
sbb
mov
aad
or
or
out
je
or
or
or
in
adc
loop
adc
out
out
or
loope
adc
decb
adc
or
or
or
mov
or
or
or
or
or
testb
mov
or
cmc
or
or
or
repz
mov
or
icebp
or
scas
or
xchg
stc
fwait
mov
stos
or
cmpsb
or
movsl
or
mov
or
add
mov
or
mov
mov
or
or
mov
ret
or
mov
mov
inc
or
int3
or
lret
or
enter
leave
or
call
or
lds
xchg
or
ret
or
or
fimuls
add
fisttps
scas
or
or
decl
mov
fmuls
lret
test
or
out
or
lock
mov
ljmp
call
add
jmp
or
or
or
loop
jecxz
lock
jo
jle
or
decb
into
mov
iret
or
dec
or
cli
or
or
clc
or
or
testb
or
scas
push
cmp
mov
sub
cs
test
or
test
incl
lods
sub
movsb
push
test
movsl
push
xchg
sub
mov
push
scas
sub
mov
push
mov
sub
push
outsb
sub
push
imul
and
sub
push
adc
push
adc
incl
or
push
xor
push
dec
sub
push
fisubrl
rolb
das
roll
sub
push
adc
aam
mov
push
lea
push
daa
sub
push
and
rolb
sub
push
es
imulb
push
pushf
pmaddwd
sahf
mov
lahf
das
repz
das
lock
popf
das
roll
sub
out
pop
enter
pushf
sub
pop
pop
sub
std
push
incl
add
ljmp
sub
sbb
out
add
sub
pop
push
sub
das
clc
mov
sbb
loopne
xor
loope
mov
incb
mov
incl
mov
add
pop
mov
cli
pop
adc
sti
sub
pop
cmp
stc
pop
and
testb
scas
outsl
clc
incl
lods
add
cs
add
cs
add
cs
and
jmp
add
movsb
add
mov
add
mov
add
std
mov
mov
add
das
mov
add
das
mov
add
das
mov
outsl
cli
mov
sbb
mov
daa
sub
add
sub
lret
das
jg
dec
add
das
enter
movl
ret
sub
add
sub
add
sub
add
jmp
filds
faddl
fldl
fiaddl
das
fadds
flds
fistps
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
push
std
jg
ds
add
sub
add
sub
add
sub
add
call
cs
add
sub
add
sub
cmpsb
sub
sahf
sub
add
sub
loopne
add
loopne
imul
les
incl
cs
add
cs
mov
sbb
sti
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
popa
ss
cs
lock
xor
mov
loopne
test
and
fbstp
mov
sub
add
enter
lds
clc
incl
fwait
sub
roll
fadds
jno
add
add
lods
push
add
lcall
cs
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
out
or
add
or
add
or
add
or
add
or
add
or
add
or
add
call
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
jmp
or
add
or
add
or
add
lods
add
push
stos
add
decl
push
test
or
test
add
push
cmpsl
add
push
movsb
add
movsl
add
outsl
incl
add
mov
add
mov
add
push
mov
add
mov
decl
mov
add
push
mov
add
push
mov
push
push
mov
pop
push
mov
adc
mov
adc
push
mov
adc
mov
adc
mov
adc
mov
adc
into
add
push
iret
add
push
int3
add
int
sub
push
lret
lret
add
push
enter
leave
add
push
movb
push
movl
jmp
lds
and
push
ret
add
push
rolb
push
roll
push
fiadds
ds
filds
aas
push
faddl
cmp
fldl
cmp
push
fildl
cmp
fadds
cmp
flds
cmp
add
push
xlat
add
push
aam
pushl
rolb
xor
roll
xor
out
add
out
add
in
add
add
ljmp
decl
call
add
out
inc
push
out
inc
push
in
inc
push
in
inc
push
loop
inc
push
jecxz
incl
incb
pop
push
incl
pop
push
cld
add
add
cli
add
sti
add
clc
add
stc
add
lcall
testb
push
testl
aas
aas
lods
push
cmp
lods
push
cmp
aas
stos
push
cmp
test
cmp
test
push
ss
cmpsl
push
aaa
aas
movsb
push
xor
movsl
push
xor
aas
mov
push
pushl
aas
mov
push
dec
aas
mov
push
dec
aas
mov
push
dec
aas
mov
push
decl
mov
push
inc
aas
mov
inc
aas
mov
inc
aas
mov
inc
aas
mov
inc
aas
mov
inc
aas
mov
incl
mov
inc
aas
into
push
pop
aas
iret
push
pop
aas
int3
push
pop
aas
int
pop
aas
lret
aas
lret
push
pop
aas
enter
lcall
leave
push
pop
aas
push
push
aas
push
push
aas
les
push
aas
lds
push
aas
ret
aas
ret
push
push
aas
rorb
call
rorl
aas
fimuls
outsb
aas
fisttps
outsl
aas
fmull
insb
aas
fisttpll
insl
aas
fiaddl
pop
fcomps
fstps
pop
xlat
ss
int
pop
aam
aad
rcrb
rcrl
shlb
fldcw
pop
out
pop
out
pop
in
insb
ss
int
in
pop
ljmp
int
mov
pop
out
out
in
in
ljmp
fwait
loop
jecxz
loopne
loope
arpl
decb
jg
decl
jbe
aas
cld
push
jno
std
push
aas
cli
push
mov
sti
push
mov
clc
push
cmpl
push
cmpb
and
fdivs
pop
hlt
rcrb
icebp
cs
pop
or
mov
mov
pop
cmpxchg
add
lods
lods
stos
stos
test
sahf
out
test
xlat
push
shl
push
icebp
nop
add
push
sahf
out
sahf
pop
add
jl
out
sbb
psllq
rcrl
pop
sub
cmp
sub
pop
es
cmp
repz
pop
sub
sub
outsb
sahf
daa
outsl
push
and
mov
and
gs
cmp
iret
or
sbbl
lahf
push
jle
push
jg
jns
out
jl
jge
sub
jns
out
sub
jns
sub
xchg
out
push
push
das
xchg
sub
cmp
repz
and
movsl
mov
cmp
arpl
cmp
jnp
mov
mov
repz
iret
repz
imul
iret
repz
mov
mov
fmulp
leave
leave
mov
iret
int3
push
jp
sahf
out
int
lret
out
sahf
out
enter
sahf
out
sahf
je
jne
jb
sahf
out
lds
jo
out
sahf
out
rorb
sahf
fimuls
sahf
out
fisttpll
jns
out
out
scas
in
scas
dec
repz
in
lods
ljmp
repz
stos
in
loop
xchg
out
push
imul
push
xor
jmp
incl
sbb
scas
or
sub
loopne
xor
and
cmp
pop
xor
jmp
cmp
cmp
into
xorb
push
push
push
cwtl
inc
icebp
mov
jo
fcomp
pop
mov
cmp
pusha
je
push
or
mov
repz
pop
xor
imul
shll
pop
or
cmp
ret
add
hlt
lret
stos
xlat
dec
clc
xchg
insb
arpl
sbb
push
test
lcall
mov
lods
push
fwait
inc
int
test
aaa
jg
cwtl
aam
sbb
outsl
mov
xor
aad
fildll
push
fdivrs
mov
xor
into
push
mov
rcl
sbb
dec
stos
mov
jg
lods
sar
sbb
cwtl
push
or
and
shrb
decl
roll
dec
testl
les
dec
jb
scas
xchg
adc
call
fidivs
sahf
inc
push
mov
fsubs
data16
sub
jns
loopne
jmp
inc
loop
mov
aas
jp
test
ljmp
mov
jg
pop
mov
into
fwait
aas
pushf
aas
jae
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
lahf
jg
mov
jge
sub
into
cmc
fldl
sbb
mov
mov
fcomps
pushf
stos
jno
push
subb
push
and
push
and
fs
push
pop
lea
push
bound
mov
xchg
cmp
cmp
mov
sbb
sahf
in
ret
pop
or
sub
loope
xchg
inc
cmp
cmp
ret
in
cmp
cmp
xor
dec
cmp
pop
cmp
in
fcoms
push
sar
jg
shlb
int3
in
in
mov
inc
cli
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
cmp
push
push
xchg
lahf
jno
xor
je
mov
and
or
gs
pop
cmp
incl
cmp
mov
lret
xor
pop
xchg
or
pop
ljmp
das
pop
xchg
xor
dec
cmp
pop
cmp
push
mov
adc
incl
lods
in
jl
ss
and
add
xor
xor
dec
call
sbb
ds
aas
pop
aas
enter
scas
fildll
add
ljmp
clc
fcomps
sbb
inc
xor
xor
xor
outsl
xor
jmp
lods
xor
xchg
jg
sahf
aas
aad
shll
mov
jge
mov
jnp
sbb
cmpsl
dec
xor
das
sti
jmp
xor
shlb
jecxz
repz
add
adc
pushl
xchg
rcrl
sbb
mov
ds
aas
xor
pop
aas
push
aas
aas
incl
cmp
cmp
test
mov
daa
pop
out
adc
jmp
push
popa
es
mov
or
lcall
call
outsb
cmp
jp
jb
mov
mov
xorb
repz
cmp
jmp
call
dec
outsb
xlat
sbb
cmp
jp
cmp
cmp
cmp
decl
sub
scas
cmp
push
sub
lcall
fildll
jl
lods
pop
stos
icebp
cmp
cmp
cmp
ja
lahf
ss
ss
ss
pop
imul
pop
std
incl
inc
scas
xor
lahf
lds
ficompl
xor
es
xor
xor
xor
mov
push
xor
fists
pusha
outsb
aam
mov
icebp
cli
push
imul
ljmp
ret
xor
xor
xor
xor
jmp
and
add
call
push
cmp
in
movb
adc
mov
xorl
xor
xor
xor
cwtl
mov
mov
and
adc
cmc
jb
pop
sub
dec
cmp
cmp
pushl
cmp
cmp
cmp
cmp
cmp
xchg
cmp
mov
data16
lods
idiv
ljmp
call
jnp
push
out
aaa
in
cli
aaa
sysenter
push
xor
xor
xor
xor
xor
push
call
cld
push
inc
inc
mov
int
popa
inc
pop
insl
pop
in
jb
incl
xor
xor
xor
mov
xor
xor
xor
arpl
xor
cmp
call
dec
mov
lea
and
jo
xor
xor
xor
adc
lods
fsubs
mov
mov
mov
sar
decl
cmp
pop
cmp
cmp
clc
cmp
add
cli
and
mov
cmp
add
pop
out
lcall
push
pop
adc
adc
adc
cs
es
ja
psraw
inc
clc
adc
xor
xor
xor
dec
inc
punpcklwd
cwtl
bound
loope
push
push
inc
aas
jne
mov
mov
xchg
addb
lcall
xchg
xchg
xchg
xchg
nop
xchg
scas
scas
lods
lods
stos
stos
test
cmpsb
cmpsl
movsb
movsl
mov
mov
mov
mov
mov
mov
into
iret
int3
int
lret
enter
rol
fstp
fcmovnu
xlat
aam
rcl
rcl
out
out
in
in
ljmp
in
jecxz
loope
cld
std
cli
xchg
stc
div
hlt
cmc
repnz
lcall
xchg
sbb
add
lcall
adc
dec
dec
dec
dec
dec
add
inc
inc
inc
inc
inc
inc
add
pop
xor
cmpsb
pop
pop
pop
add
push
adc
adc
xor
add
or
xor
sbb
sbb
xor
add
add
ret
xor
add
or
xor
sub
sub
xor
add
inc
add
cmp
jo
xchg
icebp
pushf
or
sub
or
notb
and
mov
sbb
and
jno
ljmp
clc
das
adc
jo
addb
jbe
pop
sbbl
clts
or
ret
or
iret
or
push
add
adc
add
push
and
and
decl
sbb
add
adc
inc
mov
inc
rolb
lcall
inc
js
insb
rorb
or
imul
ljmp
push
jo
dec
inc
dec
jl
sbb
imul
rolb
push
sbb
jg
sub
adc
bound
jge
dec
ret
or
or
jge
jp
popa
ja
adc
mov
add
pushf
lea
cltd
lds
andb
or
mov
inc
inc
add
hlt
push
mov
incl
pop
pop
adc
aas
and
add
pop
inc
pop
add
and
dec
pop
pop
sub
push
cmp
push
lods
sub
testb
add
ret
and
sub
inc
add
cs
sbb
mov
fnstsw
or
inc
add
add
adc
rclb
rolb
sbb
mov
add
add
jp
pop
incb
or
shlb
sub
ss
sub
and
out
sbb
std
inc
dec
loopne
mov
push
add
daa
mov
push
mov
or
lret
mov
push
std
imulb
add
push
dec
dec
add
sbb
dec
imul
pop
push
jl
addr16
decl
in
loopne
pop
and
pop
fcompl
inc
mov
or
mov
add
mov
inc
and
pusha
rclw
cmp
insb
jp
jle
and
jns
jns
and
imul
popa
or
and
call
imul
imul
incl
rorb
dec
pop
and
sbb
or
es
mov
and
and
inc
jmp
fidivs
add
dec
dec
cs
adc
loop
loope
loope
lds
mov
pusha
jo
push
ret
add
les
adc
pusha
xchg
mov
lcall
add
xchg
test
test
adcl
sbb
sbb
inc
pop
adc
ljmp
jge
jp
dec
pop
push
jne
inc
push
jo
dec
add
push
loopne
and
and
add
adc
push
aas
sbb
adc
loopne
int3
into
lret
jmp
add
loope
in
repz
out
push
out
in
sti
fsub
nop
loop
cmc
jecxz
mov
icebp
lock
pop
lock
add
aad
and
mov
scas
incl
cmp
pushl
cmpl
and
add
add
xlat
mov
dec
xor
sbb
das
and
push
mov
mov
jg
push
add
loopne
out
shl
add
out
in
loope
mov
jnp
incl
lock
adc
jecxz
mov
clc
mov
sti
out
scas
add
es
mov
jg
mov
ljmp
mov
pop
and
jle
lock
in
xor
and
loopne
stos
int3
lds
xacquire
mov
adcl
or
out
in
jle
lret
loope
out
jae
add
fs
je
lcall
mov
pop
inc
push
inc
sub
push
pop
dec
dec
add
jne
popa
jge
mov
shrb
arpl
pusha
add
gs
pop
fld
jg
loop
into
rcl
or
leave
lcall
loop
out
jmp
scas
add
idiv
aas
clc
call
testb
repz
call
imul
gs
decb
mov
xchg
pushf
aam
mov
jg
jo
insl
imul
insl
jae
aas
sub
incb
mov
xchg
xchg
xchg
xchg
mov
lods
lcall
jle
scas
lahf
cltd
nop
lcall
mov
movsb
fdiv
das
shlb
mov
pop
inc
sub
lds
push
inc
add
or
inc
pop
cmp
incl
push
adc
sbb
sbb
cmc
outsl
jmp
gs
jle
das
pop
sub
sub
jb
arpl
je
sbb
cmp
aas
jnp
jno
outsb
inc
inc
inc
insb
inc
inc
add
sbb
dec
or
inc
loop
lock
mov
mov
add
push
add
dec
push
sub
pop
and
adc
mov
inc
pop
cmp
dec
cwtl
and
pop
sbb
add
decl
stos
add
inc
push
add
add
adc
mov
adc
sbb
push
pop
push
or
dec
add
mov
jg
inc
adc
mov
cmpsl
jmp
mov
mov
mov
mov
mov
mov
test
xchg
lret
sub
decl
mov
dec
sbb
add
inc
or
adc
pop
pop
add
inc
fbstp
add
pop
clc
fucomi
clc
jno
ja
stc
scas
out
in
repz
jg
fdivrp
out
call
jno
faddp
xchg
roll
ret
lcall
add
ror
push
add
inc
pop
inc
or
pop
mov
dec
pop
outsl
sbbb
push
add
ljmp
fcomi
repnz
jecxz
cmpsb
push
mov
add
push
js
incl
inc
dec
inc
inc
dec
jle
inc
insl
push
push
inc
rolb
das
jbe
adc
push
sbb
adc
adc
or
aam
jmp
xchg
orl
cwtl
lahf
mov
cwtl
xchg
jo
ret
mov
mov
cltd
xchg
lea
cld
fwait
mov
jns
push
dec
jne
mov
inc
sbb
mov
stos
mov
movsl
add
mov
incl
inc
add
leave
fmul
loopne
fadds
into
mov
mulb
mov
fcoms
sbb
stos
subl
std
ljmp
pop
pop
push
push
pop
and
pop
pop
dec
mov
cmc
repnz
push
xor
fneni(8087
loop
cld
add
jb
cmp
xor
scas
aaa
jmp
push
add
inc
test
outsl
jg
push
clc
jnp
push
xchg
test
mov
cmpsl
adc
jmp
mov
xchg
test
rorl
cwtl
mov
fwait
push
sub
mov
xchg
fildll
and
sbb
lods
push
pop
add
adc
or
pop
inc
mov
shlb
sar
rolb
int
lret
fstp
roll
vpmovmskb
fmulp
int
int3
ret
mov
dec
jbe
dec
gs
jne
jns
mov
imulb
inc
cmc
sub
icebp
icebp
into
add
sti
cli
cmp
or
pusha
aas
adc
sbb
xchg
add
mov
sbbb
rorl
lock
clc
out
repz
std
sbb
loope
push
xor
xor
daa
and
loop,pn
out
cld
sti
std
pushl
push
inc
inc
inc
push
and
xor
sbb
dec
jle
adc
push
jnp
sub
sbb
dec
pop
daa
aaa
es
mov
pop
ljmp
cwtl
test
or
sbb
adc
cmp
cs
aaa
jne
out
faddl
addb
popf
xchg
test
xchg
pop
hlt
mov
test
mov
lods
andb
std
out
xchg
add
lahf
dec
stos
xchg
xchg
cwtl
xchg
mov
test
mov
sbb
cwtl
enter
or
aaa
rcrl
or
push
clc
ljmp
jle
pop
popa
outsl
add
push
cmp
jno
out
push
jle
jnp
pop
pop
cmp
imul
stos
dec
mov
push
dec
push
test
xor
mov
mov
jno
cmp
or
push
mov
inc
arpl
jae
pop
rolb
pop
jge
inc
push
jb
jne
and
jg
add
std
push
dec
pop
jle
push
mov
xor
test
add
dec
dec
push
push
xor
ror
xlat
rol
aam
aam
aaa
cld
scas
clc
sti
sti
in
cld
ljmp
loop
and
ljmp
ret
orb
sub
fs
popa
rcrl
test
push
xchg
inc
inc
inc
inc
dec
inc
and
sbb
mov
adc
push
and
or
adc
pop
ja
lcall
dec
jp
xor
and
xor
and
jle
es
mov
mov
rorb
add
das
cmp
or
js
pop
lock
icebp
add
dec
pop
dec
push
pop
push
push
mov
mov
add
cwtl
sbbb
or
outsl
xchg
cltd
mov
mov
mov
cmpsb
or
pop
push
out
mov
mov
jmp
lock
mov
jl
push
push
pop
push
pop
cmc
inc
loope
push
push
in
mul
div
lods
adc
in
das
cli
pop
repnz
ret
shll
ss
xor
push
push
add
dec
mov
xchg
in
pop
hlt
fwait
xchg
addb
mov
mov
mov
mov
mov
nop
cmpsl
mov
mov
scas
stos
cmp
mov
lret
orl
ja
mov
xchg
xchg
dec
mov
ss
out
xlat
adc
jecxz
loopne
mov
cmp
stos
mov
mov
xorb
incb
push
sub
pushl
pushf
xor
mov
mov
add
repnz
add
inc
xor
jbe
outsb
jnp
xchg
mov
rcl
rclb
int
adc
sbb
add
push
scas
loope
repnz
jmp
jg
loop
movsb
into
int
int3
fcmove
sti
shll
std
xor
mov
or
or
fs
add
jno
cld
add
into
rcll
cmp
iret
ret
fmuls
aam
add
add
cmpsb
out
cwtl
icebp
mov
repnz
cli
int
pop
jbe
add
jne
jbe
xor
out
sub
js
xor
jns
jp
jg
jbe
inc
xor
inc
mov
inc
scas
mov
fildll
repnz
out
jmp
adc
ja
lcall
xor
sub
add
xor
rolb
pop
jmp
sbb
and
add
pop
push
xor
adc
and
pop
sbb
incl
fimull
mov
adc
inc
jecxz
cli
add
loope
mov
stos
mov
mov
cli
insl
xchg
adc
das
adc
xchg
arpl
vxorps
fcomi
in
icebp
faddp
mov
mov
mov
sbb
jne
push
mov
mov
arpl
ds
pusha
push
ret
push
popa
dec
inc
push
dec
data16
mov
jns
andb
adcl
pop
pop
dec
pop
or
lret
rorl
sti
ja
loop
inc
dec
dec
sbb
dec
push
pop
cmovp
jbe
inc
pop
push
pop
sbb
add
inc
insl
jge
xor
xchg
fistpll
push
cmp
jae
add
jo
mov
adc
sub
clc
fs
pop
cs
add
loope
lods
mov
adc
inc
cmpsb
mov
or
pop
or
push
push
pop
or
hlt
push
xor
test
cli
mov
mov
mov
and
mov
or
rcr
rclb
stc
test
fstl
std
in
icebp
add
mov
in
fstp
iret
leave
add
scas
clc
call
ljmp
adc
mov
cld
das
push
in
call
add
push
adc
push
or
pop
xor
call
sbb
sub
and
add
lret
ljmp
lcall
fucomip
cld
mul
mov
mov
das
mov
in
mov
repz
icebp
into
mov
add
mov
iret
adc
lahf
test
or
sbb
push
sti
adc
push
push
push
mov
sbb
inc
add
scas
jle
inc
adc
ret
lret
sar
divb
stc
in
cli
add
repnz
inc
dec
add
push
jg
dec
inc
dec
aas
ret
add
or
cmp
pop
xor
cmp
cmp
mov
add
das
clc
addb
nop
mov
jno
clc
push
mov
sub
or
inc
fdivr
mov
out
add
lds
idiv
loope
sbb
ret
add
xchg
jecxz
ror
push
sbb
sbb
and
and
and
sar
test
out
mov
mov
adc
iret
lret
add
xor
das
cmp
or
aas
add
and
xchg
push
ljmp
cmp
add
and
test
hlt
pop
pop
int3
cmp
cmp
sub
das
and
jns
xor
xor
pop
icebp
add
ljmp
add
mov
clc
adc
outsl
push
push
dec
dec
dec
mov
insl
push
pop
and
mov
pop
dec
pop
add
rolb
push
pop
dec
mov
std
out
cwtl
or
add
cmp
adc
xor
ljmp
sarl
cmp
scas
add
mov
mov
xorb
mov
add
scas
xchg
cmp
call
lret
stos
mov
lea
fld1
jb
add
sti
or
daa
and
add
sub
js
pushl
and
add
xor
test
nop
cwtl
hlt
dec
inc
push
push
mov
inc
push
inc
push
inc
bound
add
fs
decl
push
push
push
dec
jnp
mov
dec
add
add
jl
mov
dec
dec
pop
dec
sbbb
jno
pop
sbbl
insl
inc
add
lds
lret
xorb
ret
les
fwait
sbb
pop
dec
push
push
pop
pop
pop
push
add
push
inc
pop
fiaddl
pop
mov
push
dec
pop
add
add
in
xchg
ljmp
in
repz
sbb
sbbb
orl
lcall
jp
orl
xchg
cwtl
cltd
sahf
popf
mov
shlb
jnp
repz
add
insl
and
push
sub
sbb
cmp
push
dec
sbb
xchg
inc
scas
aaa
std
test
movsb
mov
sbb
mov
andb
mov
xchg
test
ljmp
push
mov
lcall
scas
stos
scas
mov
movsl
mov
movsl
repnz
ljmp
mov
rcll
dec
inc
add
dec
dec
inc
inc
dec
add
adc
mov
rcll
fstpt
fisubl
scas
mov
incb
xor
xchg
mov
add
jne
sbb
or
push
aam
jae
std
or
dec
push
dec
push
inc
hlt
jns
dec
push
inc
push
inc
pop
or
mov
pop
inc
js
jo
dec
inc
jns
insb
jbe
jb
pop
jo
jae
call
leave
out
stc
jmp
hlt
int3
cld
cmc
mov
fs
add
adc
sub
ret
enter
rcl
out
cli
fcmovb
rol
faddl
into
fwait
stc
das
sar
out
repz
fmul
out
out
sbb
inc
enter
inc
or
adc
pop
dec
push
aam
or
ss
push
inc
les
pop
pop
add
dec
pop
jo
aaa
xor
mov
add
xor
push
jne
jne
sub
sub
xchg
insl
jle
jge
insl
jnp
add
adc
pop
add
sbb
pop
push
pop
incl
pop
push
movsb
lea
test
add
popl
inc
call
nop
xchg
xchg
xchg
fldl
xchg
sahf
cltd
pushf
popf
nop
mov
dec
mov
out
add
cld
leave
iret
in
mov
mov
pop
out
mov
leave
shl
lret
int
in
int
scas
push
rol
adc
push
rcl
xlat
aam
shlb
scas
mov
aad
stc
out
clc
mov
test
mov
insb
es
mov
std
cli
jmp
cmc
jmp
lock
lret
jecxz
pop
push
push
or
push
or
lcall
sbb
add
sbb
add
sbb
inc
jno
pop
push
add
outsl
xor
into
scas
push
sub
aas
sub
outsl
jg
pop
jl
xor
sub
xor
or
xor
dec
mov
mov
inc
dec
dec
push
xchg
push
inc
inc
dec
push
inc
adc
inc
mov
dec
pop
dec
popa
and
outsl
push
jnp
and
jb
sub
xchg
je
addr16
insb
inc
pusha
jno
js
bound
ljmp
xchg
out
nop
test
sbbb
mov
mov
add
jmp
or
movsb
movsl
add
mov
test
add
repnz
ljmp
xchg
mov
push
pop
and
pop
rorb
jp
inc
mov
dec
pop
sub
sbb
cltd
xchg
rorb
pop
in
adc
xchg
in
ficomps
cwtl
pushf
lcall
xor
dec
pop
or
mov
ljmp
call
stos
cmp
adc
adc
out
clc
std
test
mov
shl
fldl
jb
cmc
inc
rcrl
xchg
add
mov
repz
mov
popf
test
xchg
mov
mov
mov
stos
popf
xchg
mov
std
in
inc
fisttps
push
pop
imul
lcall
xchg
mov
ljmp
mov
mov
pusha
or
push
push
pop
es
dec
decl
add
adc
sbb
inc
add
and
inc
cld
fadd
popa
add
mov
mov
or
incl
mov
loopne
inc
addr16
loope
sbb
xor
sub
push
or
and
add
jo
jmp
and
add
and
bound
sub
add
sub
or
add
adc
mov
scas
lcall
dec
pop
or
dec
inc
and
dec
dec
pop
addb
add
test
addl
xor
sbb
aas
xor
js
cmp
xor
sub
inc
shlb
sar
incl
sbb
das
orb
xchg
pushf
sbbl
aam
jmp
call
mov
loop
lret
out
cmp
cmp
das
jne
sbb
xor
popa
pop
cmp
cmp
sub
and
push
sar
mov
clc
hlt
cld
out
lret
jmp
loope
in
movsb
add
loopne
out
in
out
adc
and
add
pop
ja
xor
gs
js
jae
dec
into
incl
jmp
jbe
fs
pusha
outsl
sub
test
dec
push
dec
inc
pop
pop
sbb
push
int3
sbb
push
sbb
lods
clc
cmp
lcall
int3
rorb
pop
mov
add
outsb
jne
insl
insl
loope
mov
sbb
nop
mov
fdivl
lahf
ret
int3
sahf
mov
xchg
orb
sub
add
adc
push
and
decl
add
dec
push
push
add
out
in
add
ljmp
outsl
sbb
sub
sub
aaa
das
inc
add
ret
inc
mov
pop
or
sbb
outsb
push
cld
das
inc
add
push
add
popa
aas
sbb
adc
cld
mov
push
add
sub
pop
or
jge
cmp
xor
ficomps
incl
pop
loope
aad
ror
ret
add
std
sub
sub
cmp
test
int3
mov
mov
filds
add
mov
ja
test
rolb
mov
lock
out
mov
mov
inc
clc
mov
popa
add
add
imul
out
sub
repz
and
adc
add
add
in
inc
mov
xchg
push
inc
orb
push
inc
dec
add
mov
mov
les
lcall
dec
mov
sahf
test
xor
mov
outsl
sbb
daa
outsb
add
shlb
jae
pop
jge
das
clc
pop
or
push
dec
addb
push
dec
dec
dec
dec
jmp
adc
sbb
push
outsb
add
dec
sbb
sbb
push
add
inc
adc
adc
icebp
pop
mov
insb
aaa
and
je
outsl
jno
jns
jg
cmpb
lock
pop
les
popa
gs
mov
stos
scas
stos
jecxz
hlt
sahf
mov
mov
jg
mov
mov
add
adc
movsb
lods
mov
xchg
sahf
lahf
mov
xchg
aam
jbe
sbb
mov
scas
xchg
rol
les
xor
stos
fisubl
enter
inc
add
push
and
pop
inc
push
push
mov
or
inc
add
test
push
adc
add
add
jne
mov
clts
add
add
add
mov
adc
inc
dec
push
jno
and
js
inc
ja
sbb
adc
push
imul
mov
call
add
bound
pusha
adc
xor
dec
mov
imul
sub
inc
pop
adc
add
pop
loop
int
jg
and
adc
popa
push
add
adc
bound
cmp
xor
popa
jo
mov
jg
outsl
nop
push
andb
add
add
pop
and
int
and
add
fstpt
dec
mov
pop
or
outsl
xchg
jp
or
pushl
jp
jo
dec
and
jl
jge
add
inc
insb
jl
jl
ja
orl
inc
add
pop
pushw
mov
mov
adc
jge
jl
add
js
pop
jnp
ja
sbb
xchg
cmpsb
popa
jl
inc
addr16
andb
push
sub
and
add
mov
inc
push
inc
push
mov
bound
ss
outsl
pusha
push
imul
ljmp
or
adc
pop
jp
pop
psubb
add
add
pop
pop
dec
sbbb
inc
dec
dec
ljmp
xchg
or
dec
subb
and
pop
dec
dec
pop
dec
nop
mov
mov
dec
inc
dec
and
inc
pop
pop
icebp
ret
ljmp
fs
dec
pop
inc
pop
mov
and
inc
pop
pop
lds
imul
clc
inc
ds
pop
pusha
out
sbb
dec
pop
ret
mov
movsb
jo
inc
pop
cwtl
dec
popa
jg
les
inc
inc
add
add
fistpl
pop
pop
or
add
lcall
push
hlt
inc
inc
dec
dec
mov
and
fmull
add
sbb
dec
pop
inc
add
adc
imul
mov
cmp
jbe
lret
sbb
add
cld
add
and
or
jp
cmp
outsl
mov
push
and
addr16
jnp
push
test
sbb
cs
jp
imul
idivb
outsl
bound
pop
sub
js
xchg
lock
sbb
nop
and
jg
nop
and
shlb
inc
mov
xor
shlb
shlb
outsl
imul
hlt
shrl
js
icebp
in
pop
and
and
mov
xor
insl
mov
pop
xchg
add
add
sarb
dec
stos
cmp
xor
insb
sub
popa
push
inc
dec
imul
repnz
mov
push
or
jo
pop
adc
dec
push
rcll
lds
or
sbb
int
cmp
mov
cmp
and
sub
cmp
dec
pusha
pop
aam
sbb
mov
push
cs
jge
jl
jle
mov
pusha
insb
jge
xor
incl
dec
and
insl
cs
aas
dec
sub
mov
test
mov
jge
or
add
sub
jne
cmc
mov
jp
popa
jns
jecxz
cwtl
nop
lcall
stos
mov
decl
bound
pop
inc
dec
pop
mov
dec
addr16
jle
push
inc
decl
mov
inc
sub
add
sbb
je
add
inc
adc
push
pop
outsl
and
inc
add
xor
imul
mov
mov
adc
dec
xchg
rcll
pop
or
jmp
mov
in
pop
dec
pop
pop
popa
insl
imul
jno
push
dec
fs
xor
push
or
mov
pop
popa
inc
sbb
pop
jbe
lock
mov
jg
mov
pop
rolb
roll
lock
lock
jns
inc
jno
mov
dec
lock
or
inc
cmpl
add
pop
mov
cld
scas
nop
movsb
adcb
dec
repz
add
ja
add
fists
jno
test
repz
push
lret
stc
add
add
inc
adc
cs
lock
hlt
jmp
nop
pop
jl
or
jo
rcll
aas
bound
adc
and
icebp
incl
inc
inc
sub
stos
sub
dec
sub
fidivl
or
dec
mov
xor
dec
add
pushaw
adc
sub
loopne
push
jb
sbb
jbe
sbb
out
cs
sub
addr16
icebp
lods
std
push
addr16
mov
jp
popa
cmp
adc
pop
lods
fstl
dec
cmpsb
adc
popa
push
arpl
pop
incl
and
add
cs
or
jle,pn
sub
add
aas
pushf
dec
repnz
pop
adc
mov
out
add
or
out
inc
hlt
pushl
or
mov
jp
pop
pop
pop
fs
icebp
sbb
sbb
les
mov
cmp
cmp
icebp
pop
fidivrs
add
or
fdivs
push
call
mov
add
jp
push
push
push
pop
out
add
aas
adc
dec
mov
test
loop
loopne
je
add
decb
mov
add
testl
mov
jnp
dec
out
xlat
cwtl
pop
sub
orl
sub
xchg
add
push
push
ljmp
je
cmpsb
mov
repz
cmp
mov
push
test
pop
out
add
pop
sbbb
push
add
and
pop
mov
ret
maxps
mov
cmpl
loop
out
sub
fwait
or
mov
xorb
in
add
leave
jnp
test
sbb
cmp
jnp
and
add
mov
cmpsl
testb
bound
xor
cmp
roll
mov
adc
int3
mov
push
xor
outsb
push
outsb
jg
mov
push
test
out
or
add
ret
add
test
pop
cld
jmp
outsl
push
mov
aad
jnp
xor
jbe
pushl
int
and
fiaddl
xchg
test
adcb
mov
andl
cmp
mov
or
jmp
mov
xchg
pop
pop
xchg
orb
orb
and
andb
aas
adc
adcb
jae
and
dec
ficoml
pop
add
sbb
subb
cmp
xchg
push
mov
int
cmc
or
dec
int
pmulhw
test
pop
and
mov
jp
inc
sbbb
push
shl
pop
mov
pop
orb
sbb
dec
into
loopne
outsl
push
jnp
addl
add
in
push
es
clc
int
jnp
lea
push
or
sub
stos
push
sub
or
inc
orl
lea
dec
faddp
shlb
cs
dec
aaa
movsb
js
ljmp
jle
add
and
orb
or
sub
shrb
clc
call
pop
shlb
pop
xchg
ljmp
pop
out
lods
cli
pop
lea
sub
int
sbb
icebp
shrb
jg
mov
imul
push
pop
sbb
outsb
outsl
push
or
push
push
out
add
adc
fiaddl
jp
in
mov
xor
add
div
inc
les
inc
icebp
cmp
add
rclb
add
and
sbb
inc
add
decl
push
aad
pop
inc
dec
pop
fs
add
aas
cld
mov
outsb
pop
inc
cltd
hlt
or
shl
push
inc
mov
mov
rolb
lahf
nop
inc
push
sbb
push
rolb
push
or
sbb
loop
lea
inc
icebp
mov
xorl
xchg
xor
sbb
sub
adcb
or
mov
in
mov
ss
aam
add
cli
rolb
inc
jmp
insl
add
test
xchg
add
mulb
push
lock
cli
data16
sbb
pop
pop
or
sbb
jp
push
add
adc
addb
add
sub
les
or
sub
push
test
inc
xor
inc
push
add
xor
jp
pop
shll
pcmpgtd
add
loopne
in
adc
push
mov
repnz
mov
mov
nop
andb
inc
or
bound
jnp
inc
and
rolb
loopne
lea
xor
leave
or
pusha
cmp
push
and
push
rcrl
adc
mov
jg
adc
out
sub
pop
rsqrtps
rcl
jmp
push
jecxz
repnz
mov
pop
pusha
or
add
test
int
adc
loop
testb
orl
xor
xadd
addl
xor
and
push
divb
pusha
cs
and
and
sbbb
jp
testb
sbb
out
outsb
or
ss
sbb
aad
test
mov
or
mov
ret
int
or
sub
jp
xor
and
pusha
push
mov
add
pushf
dec
pop
mov
cltd
insl
xor
inc
ss
int3
out
inc
add
into
cmp
sub
test
pop
or
add
pop
int3
mov
inc
iret
adc
jp
mov
and
pop
and
or
xchg
add
inc
pop
test
mov
in
sub
ficoml
mov
sbb
or
add
stos
out
inc
push
xor
pop
loopne
mov
jg
ja
or
int3
mov
icebp
subb
fs
bound
sub
ljmp
stos
pusha
add
jo
sbb
in
and
loopne
out
sbb
das
js
add
or
test
in
mov
sbb
and
add
loopne
dec
decl
xchg
push
adc
mov
and
add
loopne
xchg
cmp
sbb
or
mov
in
dec
mov
pusha
or
dec
and
or
sbb
mov
sub
lods
mov
shlb
mov
add
test
inc
jp
dec
or
push
loop
loope
or
and
orl
pop
pop
test
mov
pusha
ja
movsb
mov
push
add
and
or
test
inc
cs
mov
jbe
add
jle
pusha
test
mov
mov
and
rolb
test
loope
add
jnp
pusha
sbb
and
push
add
pop
cmp
ds
js
out
pop
inc
push
decl
lahf
push
rorl
rorb
lret
jecxz
push
int
test
mov
dec
dec
push
mov
sbb
pop
test
popa
dec
mov
fwait
rcrb
add
pop
inc
outsb
add
aaa
test
push
rorb
push
inc
dec
inc
jnp
stos
push
sub
loopne
dec
mov
xchg
pop
jmp
mov
loope
add
add
pusha
add
pop
push
sbbb
adc
lods
out
pusha
adc
lcall
adc
xor
lock
sbb
adc
adc
mov
loope
clc
pop
mov
sbb
mov
xor
dec
inc
add
pop
loopne
or
and
cmp
push
pusha
into
repz
movsb
add
jecxz
or
mov
mov
ja
xchg
mov
push
dec
push
or
or
xchg
jnp
xor
pusha
pop
decl
lock
imul
sub
sub
insl
xor
cmp
sti
push
andl
pop
xchg
ret
or
dec
adc
loopne
scas
adc
mov
dec
or
sbb
add
outsl
pushl
mov
sbb
sub
invd
mov
mov
daa
and
adc
add
push
pop
out
xorb
inc
incl
daa
or
cmp
add
add
add
icebp
and
cmpsb
lock
lret
mov
leave
pop
add
xor
mov
push
icebp
mov
data16
mov
adc
lods
jl
clc
pop
shrl
ds
add
mov
add
mov
adc
push
pushf
adc
jmp
and
inc
xor
jp
sbb
add
adc
xchg
sbb
mov
jp
mov
or
loopne
push
icebp
xor
jg
fiadds
lock
icebp
add
xchg
outsl
xchg
add
jno
ss
incl
push
dec
into
rolb
loope
out
pop
mov
insb
pop
dec
insb
mov
push
outsb
inc
push
test
sar
jg
aaa
mov
pop
sub
pop
mov
daa
add
push
add
or
aas
shlb
mov
fwait
inc
nop
push
or
jg
loopne
jno
inc
sbb
orl
push
cmp
sbb
das
mov
lcall
stos
jb
push
pop
into
mov
xchg
hlt
es
cmp
push
cmp
push
push
mov
stos
add
add
test
dec
add
lahf
mov
sub
dec
outsl
add
cmpsb
orb
mov
mov
pop
mov
xor
rcrl
mov
add
pop
or
in
sbb
xor
ss
jo
push
scas
pop
pusha
and
inc
cwtl
pushf
mov
pop
inc
test
mov
xchg
bound
and
das
sar
shlb
cmpl
out
inc
mov
loopne
into
dec
xchg
inc
and
add
jne
xorl
loopne
pusha
sub
cli
cmpl
add
xor
adc
cld
mov
or
pop
das
mov
xor
loope
inc
inc
rcll
lcall
push
std
mov
sub
or
xor
mov
pop
push
rolb
fs
xor
inc
cmp
dec
or
sbbl
out
addr16
inc
sub
xor
test
pop
pop
lock
push
adc
aam
xor
lock
icebp
dec
mov
mov
jb
jo
pop
icebp
adc
orb
pop
and
jp
pop
xchg
add
push
shl
ja
js
je
dec
lock
jp
add
test
sbb
add
imul
jne
loope
lcall
test
arpl
fistpl
or
or
sbb
test
movsb
sub
fcomip
inc
xor
pop
sbb
pop
and
sbbb
cli
ja
and
push
cmp
lea
jmp
adc
xchg
inc
cmp
add
notl
pop
pop
inc
fdivl
lea
lock
adc
mov
jg
cmp
push
scas
ds
ret
das
or
into
loopne
int
outsb
inc
inc
jp
js
incb
pop
lea
add
lea
pop
xor
addl
outsb
cmp
push
outsb
pusha
ss
sub
add
out
rolb
loopne
xor
pop
lea
sub
enter
jmp
cmp
rcrb
inc
push
mov
or
inc
adcb
sub
fildll
mov
or
mov
roll
pop
jp
out
mov
mov
in
lcall
add
mov
and
push
leave
dec
repnz
test
ds
in
add
call
pop
icebp
scas
repnz
pusha
or
or
pop
push
sub
sub
scas
pop
inc
insb
es
adc
in
adc
outsl
mov
mov
push
add
adc
add
fdivrp
add
jno
iret
out
push
fwait
ret
inc
add
decl
inc
push
test
pop
jl
inc
icebp
inc
pop
jp
inc
lcall
fnsetpm(287
add
inc
jb
sbb
adc
or
out
dec
or
push
ret
add
je
pop
pop
mov
and
cmp
jo
add
cmp
dec
add
fiadds
inc
fbld
mov
or
movsb
call
nop
or
ljmp
jne
push
or
add
push
push
push
ljmp
adc
test
lcall
std
jp
test
push
mov
cmp
add
xor
jo
adc
cmpb
test
bound
add
decl
mov
sbb
lds
addb
fcoml
loopne
cld
aaa
test
fs
add
push
gs
es
and
and
sbb
lock
test
push
xor
addl
decl
dec
es
lods
pop
xchg
adc
push
and
adc
lea
rclb
mov
repz
xchg
add
add
cs
decb
push
push
xor
push
adc
add
or
push
shrb
adcl
pop
add
cmpsb
js
fcompl
out
cli
mov
xchg
out
mov
test
rorb
or
mov
pop
adc
jl
xor
testb
dec
or
fcmovb
loopne
inc
jmp
or
aaa
sub
es
jnp
test
insb
idivb
mov
jnp
add
orl
test
add
jb
test
add
mov
sub
jge
testb
notb
and
sbb
pop
mov
inc
lods
dec
icebp
cli
lods
inc
mov
xor
jnp
mov
pop
sbb
push
divb
test
cmp
jp
or
push
and
sbb
pusha
adc
imul
fists
imul
addl
xchg
mov
cli
push
pop
out
lds
lahf
ss
sub
pop
lock
lock
test
daa
mov
scas
pop
gs
in
aad
out
jp
jp
mov
pop
xorl
push
or
jp
push
rcrb
scas
pop
insl
mov
aad
fimull
int
fcomps
add
pop
imulb
mov
pop
mov
aaa
std
jecxz
add
jnp
sbb
add
add
ret
arpl
jp
dec
sub
push
adc
pop
data16
pop
mov
subb
orl
push
jmp
rol
subl
xor
mov
sti
or
addb
add
icebp
sbb
pop
subl
sbbl
test
pop
jo
xchg
orl
jg
cld
in
test
ret
andb
xor
or
cmp
ljmp
dec
fs
xor
adcb
dec
incl
or
dec
or
dec
mov
bound
push
add
int
pop
mov
mov
and
sub
pop
icebp
scas
clc
fbld
sub
pop
pop
add
jb
aas
orl
inc
aaa
ficoms
add
xchg
test
push
shrl
adc
mov
jae
repnz
push
jle
sub
outsb
mov
out
and
xchg
sbb
ret
pushf
pop
add
sbb
or
mov
inc
push
add
test
mov
add
push
test
es
inc
ljmp
xchg
sbbl
icebp
bound
jge
push
cld
outsl
rolb
pusha
fsubs
shll
add
divb
fcom
dec
les
movb
movsl
mov
mov
jp
je
mov
shrl
mov
cmp
mov
pusha
and
and
jl
movsl
pop
add
pop
pop
jnp
jbe
lcall
dec
lret
or
or
adc
adc
sbb
adc
loope
fsubs
ljmp
bound
aaa
xchg
dec
jp
scas
test
pop
cmpl
pop
in
add
push
mov
out
loopne
icebp
addb
or
repnz
jle
or
or
gs
pop
mov
inc
cmp
lds
ficoml
mov
adc
add
mov
dec
aad
or
pop
pop
xchg
jp
pushf
add
add
dec
or
jnp
enter
daa
jne
or
jb
cmpb
push
add
push
add
jle
lods
pop
mov
cli
rol
fs
mov
orb
mov
ficoms
pop
jo
dec
adc
sbb
dec
imul
outsl
dec
inc
ss
sbbb
jle
and
icebp
mov
sub
sbb
push
xorl
jno
in
add
cmp
xor
jae
incl
lret
add
mov
pop
out
ret
adc
mov
lcall
sbb
cli
jg
mov
jnp
icebp
dec
inc
jb
jle
scas
cmpb
add
jbe
aas
cmpsl
pop
dec
pop
outsb
movb
pusha
pop
nop
pop
movsb
addb
ljmp
gs
orb
xor
cmp
sub
out
jbe
xor
out
push
adc
jnp
add
rolb
push
xchg
into
sub
fcom
pop
cmp
fsubr
and
decl
add
outsl
mov
inc
negl
inc
cmp
rolb
inc
add
mov
xor
add
push
test
test
fnstcw
xchg
sbb
cltd
lock
cs
mov
scas
loope
xor
push
xchg
xchg
ret
jl
jmp
push
mov
test
out
decl
outsl
aas
inc
adc
enter
nop
cmpl
add
sub
mov
xchg
xor
pop
mov
out
or
inc
in
jg
xor
xorl
push
mov
pusha
sarl
add
adc
add
xor
cmp
in
or
mov
stos
fisubrl
inc
idivb
out
rolb
or
insl
mov
xchg
pop
add
push
fisubl
adc
das
test
fwait
div
inc
fimuls
out
mov
pop
loopne
mov
clc
or
inc
jo
ds
loopne
fsts
push
ret
pusha
pop
cmp
xchg
add
jg
aaa
mov
xchg
fs
push
sbb
test
or
aaa
pop
aaa
mov
addb
push
pop
add
lret
ja
jg
push
nop
sbb
add
or
movsb
mov
add
pop
lods
push
cld
and
ljmp
xor
jp
sub
cmp
push
cmpb
xor
xchg
sbb
sub
cmpb
das
js
inc
adc
ds
ds
inc
inc
sub
movsl
cli
mov
inc
or
inc
inc
add
jg
xchg
add
int3
sub
stos
inc
sub
xor
rol
or
sub
xor
mov
scas
sbb
or
aaa
loopne
clc
push
aaa
adc
sub
add
pushl
push
xchg
xchg
test
push
int3
add
sub
and
mov
cwtl
xorb
into
push
cmc
inc
test
add
cli
pushf
scas
mov
arpl
push
nop
cli
adc
pop
push
pusha
xchg
push
xlat
cmpsb
xchg
sahf
test
mov
call
jo
out
sbb
mov
push
sar
mov
mov
sub
insb
xchg
push
enter
add
mov
movsb
xor
mov
and
xchg
mov
add
dec
ret
enter
mov
movsl
add
fcomip
pop
aam
dec
ss
mov
pusha
or
mov
push
cmc
in
mov
inc
data16
in
jb
xchg
ljmp
ss
dec
sub
stos
push
test
sub
jns
or
jmp
jb
dec
jg
jmp
pop
sarb
or
or
imul
jo
aad
jecxz
loopne
jbe
mov
outsb
jae
lods
clc
outsl
jnp
rolb
icebp
ds
lock
dec
cmc
push
push
or
sub
lea
loop
lea
lock
loop
icebp
pop
and
adc
pusha
rcrl
in
test
ljmp
mov
loopne
add
cmp
sub
mov
out
pushf
jle
pop
jge
sbb
jnp
js
push
aaa
inc
or
adcb
xchg
out
jo
das
add
pop
xor
push
lea
adc
push
and
dec
inc
dec
dec
or
mov
gs
xor
and
push
pand
aam
jo
cmp
sbbb
pusha
and
dec
icebp
fidivrs
aam
sti
imulb
pop
xchg
sbb
adc
inc
inc
adcb
push
sbb
sub
cmp
mov
and
shl
add
jbe
or
and
mov
adc
fs
ja
and
add
nop
or
sub
dec
push
aad
xor
push
pusha
outsl
outsl
jg
sub
mov
adc
sub
sbb
imul
inc
ds
push
add
xor
jp
push
and
xor
mov
out
stos
xor
pop
fcomip
or
sub
push
cltd
subb
fwait
call
inc
pop
mov
push
xchg
adc
or
xor
pop
and
icebp
add
or
jle
push
and
jp
dec
push
mov
push
adc
out
lea
xor
mov
std
dec
xor
push
out
outsb
mov
out
or
out
and
pop
xchg
pop
fdivp
aaa
push
dec
xchg
dec
pop
and
jp
lea
ret
push
add
data16
sbb
lds
dec
add
pop
imul
mov
jp
bound
or
jno
out
adc
lock
lock
adc
inc
add
leave
dec
mov
popa
sbb
pop
decl
push
and
sarl
mov
jp
lock
mov
mov
outsb
cli
mov
cwtl
jp
scas
adc
pushf
sbb
dec
jg
push
in
or
mov
jo
in
pop
stos
in
mov
loop
pop
mov
out
rcll
hlt
push
push
jno
loop
or
ljmp
pop
add
out
cmp
cmc
or
adc
enterw
pop
or
in
adc
imul
fimuls
hlt
loopne
scas
pop
pop
or
or
inc
add
cmpsb
scas
js
dec
pop
test
sti
adc
orl
in
cmp
adcb
loope
out
jns
mov
push
repz
pop
les
add
jb
and
js
sbb
fdivrl
mov
cmp
inc
repnz
addb
nop
xchg
lock
fidivl
clc
add
cmp
addl
notl
add
dec
push
adc
pop
cld
jg
dec
es
or
xchg
call
adc
or
push
sub
and
in
xchg
add
jnp
or
enter
xchg
ret
mov
stos
and
mov
or
or
ds
and
stos
xlat
or
jnp
fst
push
dec
adc
pop
push
push
cli
dec
incl
test
cmp
dec
mulb
sbb
fbld
outsl
xor
loopne
inc
xchg
xchg
mov
test
loope
popa
ds
out
fsubs
xchg
lock
and
adc
sub
and
add
sbb
push
push
scas
cmp
push
data16
getsec
jb
jg
pop
mov
inc
test
mov
jo
dec
push
shll
pop
pusha
jmp
loop
bound
add
out
je
xadd
mov
loopne
adc
stos
dec
and
push
movb
xor
in
out
add
xor
adc
in
clc
mov
pop
loopne
ret
push
scas
pop
test
adc
stos
inc
mov
lds
mov
icebp
mov
sub
add
clc
stos
mov
into
lock
scas
inc
push
cmp
aam
aaa
ljmp
out
pop
out
xchg
add
jp
pop
clc
fbstp
add
test
sbb
sub
xor
shll
mov
and
and
dec
sbbb
insb
adc
movsb
cs
dec
push
or
ret
adc
xchg
cld
mov
add
add
in
jo
and
mov
mov
stos
into
add
add
pusha
add
stos
jmp
lret
and
or
or
rolb
push
and
push
jae
add
mov
push
das
cli
notb
mov
or
push
mov
adc
scas
cli
incl
jb
xchg
sarb
pop
xlat
sub
inc
push
icebp
js
ljmp
and
xchg
dec
pop
cmp
adc
jnp
jp
adc
cwtl
xor
fbld
pushf
pop
mov
cld
ljmp
js
adc
fs
rclb
sti
mov
test
icebp
sub
add
push
add
add
adc
repnz
divb
outsl
and
andb
or
fs
adc
in
lcall
rcll
dec
and
es
in
loopne
pop
andb
adc
xor
adc
or
adc
mov
push
pop
push
adc
lret
test
jg
pushf
inc
add
inc
push
rorb
add
add
and
cli
dec
pop
nop
cmp
xchg
icebp
mov
aaa
push
add
sbb
or
or
push
sbb
subb
stos
lock
adc
jnp
addr16
icebp
test
jp
rcl
dec
pusha
sub
sub
add
sbb
and
add
sub
xor
add
xor
orps
push
or
add
dec
int3
xchg
sbb
in
out
lret
ss
cmc
lea
testb
adc
decb
ret
movsb
jbe
movsb
pop
add
jb
pop
mov
pop
add
push
and
test
aaa
and
jecxz
push
jp
out
loopne
or
mov
push
mov
dec
push
int3
or
out
add
daa
and
aaa
dec
mov
out
ja
pop
pop
adc
test
pop
cmpb
jb
cmp
incb
insl
out
stc
add
inc
sub
push
sbb
pop
pop
stos
jmp
xchg
daa
gs
test
mov
in
pop
mov
test
nop
sbb
cs
sbb
andb
test
inc
bound
jp
ret
lods
jmp
test
xchg
push
xor
sbb
sbb
cmpb
jg
lock
jle,pt
out
adcl
dec
pop
mov
push
out
sub
pop
xchg
adc
or
test
lea
insb
test
fwait
inc
or
gs
xchg
aam
push
inc
adc
inc
stos
fidivs
shlb
leave
add
mov
add
jae
jp
adc
scas
xchg
jae
or
push
and
inc
popa
push
aas
lods
clc
mov
or
or
je
rsm
dec
or
adc
dec
jbe
xchg
inc
xchg
mov
loop
sub
sbb
adcb
add
adcb
add
call
mov
or
in
fmuls
iret
or
into
sbbb
xorb
mov
pmulhw
pop
pop
add
jle
add
or
or
sarb
into
or
add
inc
sarb
in
andb
add
ret
int3
push
mov
add
push
cmp
add
mov
sub
out
add
std
pop
test
stos
int
pop
pop
inc
jb
test
inc
push
push
add
stos
push
loopne
outsl
jg
inc
test
shrl
add
inc
inc
sbb
xchg
adc
stc
addl
add
xor
add
or
lock
fiaddl
std
or
es
jle
cmp
rcrb
xchg
adcb
fcmovbe
add
push
incb
add
dec
dec
inc
xor
shlb
add
call
or
and
inc
imul
mov
or
push
jns
jp
and
andl
inc
adc
adc
enter
jo
addb
cmp
outsl
cld
mov
out
push
inc
inc
sub
mov
cmp
xchg
out
sbb
pushl
imul
jle
sbb
mov
repnz
add
test
add
out
add
ud0
aas
mov
hlt
dec
dec
orb
or
outsb
leave
sub
inc
jb
andb
out
push
out
ljmp
jl
dec
repnz
adc
aad
mov
mov
test
int
mov
fistpll
out
sbb
jae
out
cmc
movb
cltd
loopne
push
cmp
add
adc
pop
adcl
fdiv
inc
scas
jb
cs
adc
loopne
cld
aas
jl
mov
fwait
into
test
adc
mov
jnp
icebp
add
out
addb
test
pop
aad
jnp
icebp
cli
jae
out
mov
dec
test
loopne
lcall
idiv
cmp
mov
rclb
aaa
orb
xchg
in
insl
push
pushw
rolb
add
sbb
xchg
testb
test
out
adc
and
xchg
pop
and
fisubl
cs
mov
add
lret
inc
out
xor
add
test
or
psraw
or
stc
loope
pop
cmp
inc
and
jg
mov
and
push
sub
and
out
scas
and
bound
jp
mov
mov
rol
push
loop
pop
add
scas
inc
add
push
bound
mov
or
mov
and
inc
mov
test
or
roll
or
jg
cmc
pop
pusha
xor
push
or
jns
push
sti
dec
push
es
push
out
rolb
push
insl
sub
sbbb
out
cmpb
insb
pop
data16
sub
aaa
jnp
pop
movsb
sbb
xor
push
and
sub
sar
mov
dec
and
sub
in
sub
add
pusha
push
lret
scas
inc
dec
out
add
adc
and
subb
fsubrs
inc
jae
and
push
jl
and
nop
loop
pop
mov
and
mov
orb
add
outsb
add
sub
xor
incl
mov
cli
in
rclb
add
cli
add
add
push
jns
mov
movsl
adcb
fxtract
in
lock
in
gs
pop
pusha
test
das
jp
pop
out
and
mov
outsb
and
mov
in
or
subb
test
sbbb
decb
add
jp
fs
push
inc
or
movsb
dec
sbb
add
out
frstor
sbb
inc
cs
out
ljmp
add
and
dec
test
lods
inc
push
add
jp
adc
push
add
cmp
jo
pop
lea
sub
push
push
es
xchg
push
loopne
or
push
xor
sub
add
add
cmp
xchg
in
data16
pop
repnz
sbb
jnp
adc
lock
pop
loopne
cmp
cli
outsl
arpl
inc
or
loopne
jp
or
xor
lock
outsb
cwtl
push
loopne
mov
push
cli
mov
sarl
jo
jp
add
adc
push
xor
push
loopne
mov
adc
jo
push
or
adc
pop
jno
add
pop
test
dec
pop
pop
add
mov
fs
adc
repnz
sbb
je
xor
cld
ficoms
movsb
lock
jl
adc
xchg
mov
pop
sbb
loopne
add
test
pop
rcll
inc
push
shl
je
adc
sub
clc
add
xor
js
adc
js
orl
je
or
add
test
dec
or
pop
push
lock
lods
mov
inc
pop
mov
adc
into
and
fistl
addb
lods
loopnew
adc
push
inc
sub
jbe
pop
cmp
adc
icebp
adc
push
push
mov
adc
pop
xor
adc
or
sbb
loop
inc
adc
out
lock
or
icebp
fdivs
xchg
fistpl
and
pop
or
pusha
mov
mov
mov
mov
cli
sub
add
sar
test
nop
cmp
shrb
out
mov
cli
add
pop
test
icebp
dec
jg
fldt
or
pusha
incl
js
loopne
add
mov
adcb
jbe
pop
andb
ljmp
sub
cwtl
out
sti
adc
add
cmpb
es
cmp
adc
es
ja
mov
popa
test
adc
xchg
shrb
add
ljmp
das
mov
mov
sbb
or
daa
sahf
xor
add
mov
ss
stc
and
xor
add
xor
mov
stos
out
pop
adcb
or
lret
cmp
mov
or
and
inc
jnp
jno
add
icebp
aad
andb
lock
into
aaa
inc
and
mov
into
in
ret
or
xchg
push
lahf
adc
out
clc
add
adc
add
shrl
adc
fwait
mov
into
inc
push
lret
mov
fwait
and
mov
or
jo,pn
dec
add
cli
pushf
out
cmp
add
jmp
inc
or
pusha
add
mov
insl
cli
pop
sbbl
push
cmpsb
xchg
popf
pop
jo
push
shl
mov
xorl
pop
pusha
xlat
aaa
adc
stos
and
lods
sbb
fs
fistpll
xor
out
aaa
sub
push
sub
addl
rolb
inc
out
out
data16
mov
or
push
or
push
sbb
pop
repnz
add
adc
pusha
jnp
pop
out
xor
dec
out
stc
jo
decl
add
sub
mov
ss
or
rolb
cmpxchg
dec
mov
ljmp
es
or
lock
push
add
ss
test
loop
aad
mov
push
data16
fidivrs
inc
adc
mov
pop
dec
in
jmp
add
and
jae
or
mov
ret
add
test
sbb
mov
add
nop
mov
ret
push
add
notb
enter
dec
loop
sar
outsl
mov
jo
aaa
and
xor
iret
jg
push
add
addl
out
iret
sti
inc
xchg
adc
add
push
rorb
hlt
xchg
icebp
mov
orl
or
pop
hlt
incl
push
jle
and
sub
and
cmp
insl
xchg
inc
xor
mov
add
cli
jg
and
lea
icebp
loopne
cmp
inc
xor
aad
push
xchg
rolb
xchg
mov
jbe
inc
adc
jb
loopne
dec
dec
xchg
inc
mov
inc
push
js
and
push
inc
adcb
xchg
bound
cmp
dec
xor
inc
xchg
xchg
xor
xchg
incl
pop
add
push
jae
jg
lock
xchg
cli
mov
xor
test
jg
pushl
in
or
push
sarl
into
and
xor
mov
jnp
rclb
adc
jge
inc
icebp
mov
xchg
cmpl
mov
and
out
cmp
and
popa
jg
into
testb
imul
lea
or
or
cmove
loopne
push
add
dec
mov
cmc
ja
cli
ret
ja
inc
cmovs
out
lock
sar
aad
push
push
adc
daa
adc
pusha
and
nop
or
fdivr
outsl
ljmp
add
mov
mov
ja
icebp
jnp
out
push
out
fwait
lock
add
test
ficompl
out
mov
lea
ss
cli
sub
andb
push
pop
mov
mov
adc
inc
into
jb
xchg
pop
mov
pop
dec
mov
ljmp
addb
pop
xor
lret
pop
aaa
cld
pop
mov
jo
sbb
sub
pop
mov
aaa
inc
and
and
push
cmp
add
push
add
outsl
incl
xchg
shrb
dec
push
pop
pop
rorb
or
jnp
adc
fmuls
mov
mov
incl
cld
push
and
es
and
add
data16
pop
pop
jbe
jo
or
clc
xor
xchg
sub
sbb
out
cli
lcall
out
roll
pop
or
jle
sub
pop
add
cli
rcrb
sarl
mov
out
pop
mov
stc
push
inc
jo
and
dec
adc
subb
aaa
sbbb
std
inc
mov
push
and
pop
in
and
lods
xor
test
popf
fcmovbe
add
orl
ss
mov
sbb
fcomps
or
xchg
nop
incl
cmp
sbb
sub
mov
dec
xchg
jg
pop
pop
mov
mov
or
mov
out
std
in
dec
or
xor
lock
sahf
adc
inc
mov
stos
shl
push
shlb
add
movsl
clc
outsl
incb
add
dec
add
xor
cld
or
or
subb
mov
insl
pop
and
push
mov
jo
push
roll
add
jp
add
xor
ds
add
and
mov
stos
and
fs
rolb
or
jl
pop
fildll
add
fs
jnp
or
outsl
adc
out
cld
dec
faddl
jbe
and
pop
adc
mov
or
rorb
xor
adc
adc
inc
outsl
stos
jno
sbb
inc
in
sub
int
add
popa
mov
cmp
outsb
out
fcmovu
lods
xor
lods
outsb
lods
lcall
inc
pop
mov
sub
ljmp
or
push
in
lock
push
xchg
rolb
push
and
subl
int3
add
add
shll
rcrb
mov
add
xor
jbe
aaa
rcrb
test
dec
add
test
jp
sti
sub
xor
xor
fiadds
scas
jl
test
addl
jbe
mov
rcr
or
testl
or
mov
inc
mov
mov
mov
cwtl
mov
orb
sbb
and
add
or
movsb
cmp
adc
dec
aas
push
or
or
jp
inc
decl
xchg
scas
add
jnp
mov
fsub
jp
loopne
loope
dec
push
lock
aaa
or
pop
mov
dec
sub
daa
adc
cld
outsl
ss
inc
das
test
subb
inc
sbb
jnp
xor
add
dec
sar
xor
inc
push
sbb
mov
xchg
sbb
push
int3
cli
aaa
pop
push
jnp
clc
das
cmpsl
ret
pop
pop
add
icebp
out
pop
inc
test
jno
or
and
stc
dec
or
loope
rorl
daa
pop
or
xchg
repnz
and
adc
jnp
fadds
add
cmp
push
add
loop
rorb
add
dec
mov
inc
out
or
cmp
test
not
les
xor
pop
ret
add
lods
lea
add
scas
mov
pop
pop
test
mov
push
sbb
jno
stos
sub
inc
xor
movsb
fwait
subb
mov
push
bound
test
mov
shrl
out
data16
clc
and
sbbb
loop
fcomip
mov
inc
add
add
insl
pop
lds
push
pusha
sbb
sbb
sub
or
cld
inc
pop
movsb
or
jns
mov
orb
add
das
adc
dec
fcoms
shl
xchg
jle
ja
fs
lock
sbb
or
inc
or
sbb
or
inc
or
push
aaa
adc
sub
or
mov
fs
or
test
push
xor
inc
mov
addb
xor
cmpl
mov
setl
push
out
inc
pop
xorb
loope
loopne
fldt
or
stos
cmp
pop
dec
ret
sub
sbb
bound
jl
xorl
mov
mov
mov
icebp
push
jl
lea
add
icebp
or
xchg
pop
shl
insl
pop
sbb
mov
mov
pusha
dec
cmp
ljmp
mov
dec
ficomps
inc
orl
das
push
icebp
jnp
add
jecxz
sbb
loopne
rolb
xchg
mov
adc
or
sbb
adc
andb
or
ljmp
adc
pop
inc
and
rclb
dec
ret
dec
movsb
inc
mov
mov
icebp
ljmp
mov
cmpsl
rcrb
add
pop
adc
stos
mov
mov
loop
jg
jecxz
test
cli
pushf
jl
xor
add
add
lcall
or
in
or
shl
scas
push
mov
ss
cmc
push
icebp
mov
insb
pusha
inc
lcall
fidivl
lret
aad
imul
mov
cmp
aaa
push
mov
or
mov
jnp
or
adc
jmp
add
xor
mov
cmpl
out
loop
sub
iret
gs
push
or
orb
xor
pop
cwtl
bound
cmpsb
cmpsb
pop
or
out
dec
and
adc
shrb
cmp
inc
push
or
out
add
inc
push
dec
mov
pushw
xchg
xor
cmp
sub
and
add
push
test
add
lock
out
mov
adc
push
dec
adc
std
mov
ret
sahf
push
enter
mov
pop
lea
add
xor
je
push
mov
add
push
fisubs
push
cwtl
xor
adc
or
mov
orb
fsubp
xchg
js
insb
or
lds
mov
call
lcall
loopne
mov
lcall
out
popa
inc
ja
mov
decb
inc
and
dec
lret
add
cmc
and
addl
dec
sub
sarb
add
cmp
mov
fsubrs
int3
sbb
movb
out
stos
sbb
inc
dec
sub
and
jl
ret
inc
sub
es
inc
cmp
out
fistpll
push
roll
add
bound
mov
add
sub
add
mov
inc
cmp
cli
fsub
push
icebp
loopne
outsl
pushl
mov
mov
rorb
ret
or
testb
mov
and
mov
dec
scas
sbbb
cltd
loop
in
add
dec
test
ss
xor
ss
std
adcl
pop
mov
and
icebp
mov
add
and
cmp
adc
pop
pusha
shlb
rcrl
cmpsb
outsl
xor
ss
test
sub
lret
or
and
add
xorb
rcl
shlb
push
ljmp
fs
enter
sub
and
cmp
mov
mov
pop
aaa
add
xor
or
xor
loop
cmp
icebp
mov
mov
sub
push
mov
xor
out
in
jbe
adc
xor
das
rclb
das
push
add
pop
loop
jp
push
sub
es
in
test
jae
cld
fwait
mov
out
and
mov
shlb
inc
in
das
es
in
pop
out
or
cmp
es
jg
orl
es
imul
stc
icebp
js
push
cli
scas
sarl
jge
pop
push
lcall
add
jns
into
dec
orb
push
push
adc
inc
icebp
jge
cwtl
or
incl
push
icebp
int3
cmp
loopne
sub
test
push
add
test
movb
ret
mov
push
xchg
std
fldt
nop
data16
sbb
sub
out
stos
nop
inc
pop
loop
inc
cmc
pop
or
add
enter
pop
rolb
pop
icebp
fidivs
xor
out
xor
push
lock
repz
or
repnz
or
jno
lock
adc
add
into
add
jae
and
fstp
ret
fiadds
and
add
sarl
data16
add
sbbb
jmp
mov
add
inc
inc
shlb
jmp
shlb
adc
daa
stos
mov
adc
das
mov
and
es
or
ret
fwait
mov
sbb
or
test
sbb
xor
push
pop
mov
or
rorl
or
add
inc
dec
scas
xorb
loopne
fadds
push
inc
outsb
subb
add
pshufw
cmc
or
and
addb
add
testb
mov
push
push
out
out
ja
push
scas
loopne
andb
sbb
dec
add
pop
dec
int3
sbb
jno
inc
add
jne
jbe
ljmp
das
jl
fs
xorl
push
loop
and
adc
ja
fst
or
add
das
xor
xor
pop
lock
add
sbb
xchg
nop
lcall
jb
add
push
scas
addb
xor
cwtl
add
fs
pusha
fistpll
sub
in
shlb
jo,pt
or
and
pop
lea
jmp
es
sahf
add
push
loope
lock
lcall
mov
das
mov
shrb
sbb
or
stos
test
mov
or
dec
cmpsb
push
mov
add
nop
ja
add
jae
adc
nop
add
in
ja
in
xor
or
rcrb
jo
add
sbb
sub
push
ss
jp
jle
lock
pop
mov
jb
cmp
and
or
lcall
or
jae
popa
mov
fdivl
insb
js
or
call
out
add
imul
pop
adcb
lods
test
icebp
or
stc
and
decl
add
inc
rclb
lods
mov
icebp
adc
sbb
add
ret
add
xor
pop
and
jl
cli
mov
or
push
orb
sbbb
sbb
sbb
and
push
add
mov
fmull
sbbl
test
add
sub
enter
fistpl
in
mov
cs
xor
jg
icebp
in
sub
and
sbbb
sarb
daa
aam
and
or
aad
add
push
xor
sbb
inc
xor
loopne
ss
mov
xchg
push
add
jl
dec
mov
mov
inc
inc
mov
or
sbb
add
inc
xchg
mov
adc
inc
cs
decl
push
push
aam
dec
xor
icebp
ret
sub
jecxz
inc
shlb
inc
sub
outsb
xlat
mov
add
fs
jle
xor
pop
adc
xchg
push
ss
jnp
fs
add
test
sbb
mov
dec
test
mov
mov
xor
add
add
or
loopne
mov
sbb
mov
and
mov
aad
aaa
pop
pop
pusha
pop
sbb
lea
outsb
add
mov
lret
hlt
ljmp
orb
pop
out
inc
jmp
add
shl
add
out
dec
add
lcall
add
pop
adc
roll
out
cli
inc
cmp
pop
or
xor
pop
shrb
or
loopne
pop
push
add
lea
push
test
ss
add
adc
add
pop
xor
mov
pop
lock
add
dec
loopne
loop
cmp
adc
sub
scas
adc
jb
icebp
out
test
adc
push
pop
pusha
pop
test
or
add
jle
aaa
add
test
cmp
js
dec
icebp
jle
mov
sub
push
js
push
add
push
loopne
add
add
adc
ja
das
add
xor
push
xchg
repnz
xchg
sbb
loopne
adc
dec
push
sahf
mov
jbe
and
push
or
cli
inc
sbb
sub
das
push
add
ja
mulb
insl
popa
sub
mov
add
andb
mov
pop
ds
and
or
and
sbb
and
and
or
mov
inc
jbe
add
adc
xor
lea
fs
push
or
lock
test
lock
pop
js
jno
cmpsb
jg
push
movsb
sbb
rclb
cwtl
pop
out
out
incl
rorb
push
xchg
xchg
push
cmpl
mov
icebp
dec
es
fadds
mov
add
outsb
cli
sti
icebp
add
cmp
xchg
in
xchg
or
incl
adc
test
xor
add
push
add
xor
push
mov
pop
fsts
or
daa
and
aaa
push
pop
cli
jge
pusha
shlb
inc
shrb
hlt
inc
iret
insb
lock
cmp
push
or
or
or
inc
inc
ja
mov
jp
pop
push
jne
mov
xor
adc
push
push
adc
add
pop
inc
push
mov
pop
test
sbb
xchg
test
lock
or
inc
jae
push
jl
cmp
push
xchg
mov
inc
insb
inc
xor
push
lods
div
jnp
xchg
fisubs
and
addl
inc
add
rol
xor
cmp
sbb
cmp
mov
push
imul
dec
in
mov
cmp
cld
add
icebp
cmp
jbe
xchg
cmpsb
push
aas
lods
inc
test
mov
add
test
and
or
jae
xor
jge
sub
fcoml
out
add
and
xchg
jge
sbb
sbb
in
add
inc
sub
andl
adcb
jle
push
add
dec
xor
xorb
inc
test
test
loopne
sbb
out
cmpl
hlt
or
fistpl
and
add
or
or
add
xchg
add
test
xor
pop
fcomps
test
roll
pop
mov
push
ret
mov
fcompl
push
aaa
add
add
aam
push
pop
mov
or
jns
pop
mov
cld
jmp
pop
xor
shl
subl
push
mov
test
movsl
push
dec
sbb
push
pop
inc
xchg
dec
push
fmull
mov
or
add
cwtl
mov
mov
and
sbb
clc
mov
stc
xlat
adc
iret
cs
loop
mov
js
js
ja
into
aam
mov
jg
pop
lcall
dec
mov
movsb
add
outsb
xor
pop
rcrb
test
pop
ss
adc
out
repz
out
mov
adc
fimull
sub
add
or
jbe
cmpsb
dec
fisubl
or
out
addb
loopne
push
cmpb
dec
movb
push
rclb
outsl
pop
jmp
dec
inc
orl
lods
in
pushf
rorb
cmp
popa
into
xchg
or
data16
rcrl
lods
xor
or
test
test
jnp
and
inc
mulb
mov
cmp
and
push
jmp
ret
inc
loop
pop
movw
ret
mov
ret
bound
or
mov
cwtl
xchg
push
data16
rolb
and
and
icebp
incl
test
in
test
in
add
push
xor
aaa
je
test
ret
jp
rolb
add
sbb
xor
add
mov
addb
jns
rol
mov
xor
cmp
clc
sub
pop
pop
or
icebp
insl
sbb
pinsrw
inc
lock
mov
lea
add
add
addb
fidivl
add
dec
out
push
xor
inc
int
add
ret
pop
ss
push
adc
pushf
mov
jg
lds
pop
icebp
xor
sbb
mov
out
adc
add
mov
fldl
and
gs
out
cmp
aad
inc
dec
mov
add
cmp
inc
add
dec
jb
int
negb
inc
dec
xor
cmp
and
in
push
insb
dec
adc
cmp
and
gs
sahf
cld
ljmp
out
inc
sub
push
push
out
pusha
add
push
ljmp
mov
or
in
add
cld
push
mov
or
stos
jge
dec
cmp
callw
inc
xchg
sbb
push
add
data16
and
or
pop
adc
inc
push
mov
lock
mov
inc
jb
loopne
rol
aaa
pop
adc
add
mov
ficomps
mov
adc
ret
mov
pusha
add
add
push
add
test
mov
loopne
adc
sub
lock
xor
pop
hlt
iret
adc
orb
cwtl
or
fcoml
and
or
add
and
sbb
or
or
push
loop
repz
ljmp
pop
mov
adc
mov
cs
fcoms
sbb
add
and
mov
aaa
mov
ret
js,pn
xchg
inc
adc
pop
xchg
es
push
pop
sub
pusha
add
fst
pop
out
jo
les
mov
pop
mov
lretw
roll
xor
out
subb
fisubs
jp
or
fsubp
jo
pop
or
pop
shll
movsb
or
pop
std
notb
es
popa
or
sub
stc
xor
or
mov
adc
icebp
inc
jp
cld
outsl
and
inc
addb
or
or
sbbb
clc
fbld
pop
pusha
xor
or
das
add
sbb
in
add
pop
rol
rolb
sbb
mov
adc
add
and
lock
out
sub
inc
add
push
not
pusha
inc
popa
aas
loope
push
xor
lods
call
faddl
sub
mov
jmp
pop
xchg
ret
in
out
inc
jg
cs
push
and
adc
or
jg
rcl
ds
cmpb
scas
and
or
nop
ret
mov
cmp
sub
int
daa
mov
or
aaa
push
jp
shr
sbb
je
xchg
inc
rolw
cmp
and
xor
inc
add
fld
rcr
add
and
fcomip
ret
or
inc
out
add
and
mov
add
push
hlt
test
and
xor
std
icebp
jg
rolb
ret
out
test
xor
pop
pop
add
or
sub
add
or
pop
in
cmpsb
inc
rolb
into
push
int
inc
add
lea
add
jnp
push
push
lock
test
int
mov
adc
jle
jbe
push
jge
or
fdivrl
adc
dec
or
je
popa
add
dec
test
jmp
xchg
lods
fsubl
xor
cmp
cmpsb
mov
cmp
jnp
test
pop
push
inc
add
test
inc
pop
mov
push
dec
in
push
and
imul
add
sbb
out
loopne
orb
test
cmp
in
inc
inc
aas
outsb
je
sarb
icebp
inc
aaa
loopne
rcrb
outsb
lock
sbb
pop
pop
inc
repnz
or
orb
or
or
add
xchg
pusha
jno
lcall
pop
pusha
pop
and
ja
jp
pushw
sub
js
jmp
icebp
int3
sbb
data16
push
insl
jmp
pop
xchg
aas
fcompl
dec
xor
adc
dec
and
shrl
scas
test
inc
test
mov
clc
pop
std
adc
xchg
pop
xor
aaa
jo
adc
dec
jo
clc
dec
sbb
push
lock
orl
cld
decl
leave
popf
xchg
push
add
aas
addb
icebp
mov
or
add
mov
outsb
or
xchg
fistl
bound
xchg
js
pop
cli
aaa
add
int3
and
jl
adc
movsb
shrb
dec
mov
pusha
add
jecxz
icebp
mov
data16
adc
test
or
and
sbb
pusha
push
mov
pusha
push
jnp
lock
xor
in
adc
mov
add
fmuls
mov
adc
adc
test
pop
add
cli
nop
mov
mov
test
testb
cs
rcrl
out
xlat
add
adc
jo
push
pop
daa
shrb
xchg
sbb
out
incl
and
lahf
mov
mov
xor
nop
cmpsl
inc
add
cmp
xlat
adc
push
jbe
xor
pop
and
push
je
jg
add
test
dec
test
pusha
mov
pop
sbb
sbb
adc
dec
mov
adc
xor
or
hlt
jmp
add
add
shlb
lock
push
ja
dec
inc
mov
and
sbb
inc
pop
push
shrb
cmp
mov
push
ret
adc
mov
push
clc
jg
clc
jp
mov
and
and
mov
sub
push
sarb
in
orl
push
jp
std
incb
jnp
test
adc
or
push
pop
mov
mov
xor
loopne
mov
mov
jle
in
cld
idivb
clc
push
push
and
xchg
add
mov
add
clc
lea
test
mov
mov
ss
int3
mov
movsl
outsl
fisttpl
sbb
inc
inc
pop
adcl
mov
clc
fcomip
mov
ss
inc
push
add
push
push
mov
ljmp
dec
pop
dec
inc
push
mov
push
jno
adc
push
adc
outsl
xor
aad
add
xorb
call
les
and
addl
fcomi
sbb
cmc
add
push
arpl
sub
inc
add
jg
add
mov
push
add
xor
imul
pop
jno
mov
mov
mov
jb
or
and
pusha
adc
add
push
ret
fists
out
or
shll
jl
rorb
aam
sbb
test
out
adc
mov
or
pop
subb
sub
adc
hlt
orb
sbb
jecxz
push
and
nop
add
in
xchg
inc
sub
icebp
out
andl
jg
push
andb
mov
add
inc
cmp
jg
jmp
push
enter
add
or
sbb
jl
jb
adcl
outsl
xor
ds
mov
dec
and
add
inc
jg
fisubrs
push
add
inc
mov
loope
fsubrl
call
sbb
push
xchg
sub
xor
dec
jnp
addb
add
enter
or
push
sub
dec
call
jl
push
pop
push
pusha
push
inc
pop
mov
es
nop
popa
xchg
pop
push
lcall
inc
loop
int
mov
adc
mov
jp
sub
xor
adc
xor
mov
mov
fcomps
push
or
lods
or
inc
pop
mov
insb
jp
or
or
sahf
xor
pusha
pop
aam
call
clc
mov
sub
push
shlb
call
pop
ds
jno,pt
adc
xor
push
mov
inc
dec
out
inc
add
pop
adc
and
pop
je
dec
or
pop
loopne
push
mov
adc
loop
orb
mov
repnz
lock
and
jl
enter
add
inc
je
mov
or
push
mov
or
outsl
push
shll
push
or
add
push
push
xor
pop
je
rcrb
mov
inc
add
push
xchg
cwtl
dec
inc
out
add
jo
lcall
sub
lcall
clc
or
add
outsb
mov
fstl
add
psubd
xor
lock
rorb
jp
xor
test
add
sbb
out
xchg
cmp
xor
lea
icebp
out
sarb
pop
add
dec
or
mov
loope
add
sub
add
lock
pop
mov
mov
sbbb
add
jg
cs
ss
cmp
ret
insb
xlat
sar
pop
ret
lock
sub
loope
push
mov
mov
and
sub
jl
data16
outsl
add
add
or
inc
pop
push
pop
adc
lea
fisttps
jle
sbb
xor
pop
enter
and
add
add
inc
inc
out
mov
sub
out
or
loopne
push
pmulhw
aaa
adc
inc
mov
mov
rol
pusha
mov
adc
sub
adc
pop
dec
jl
xchg
dec
test
xchg
or
and
and
cmc
add
mov
mov
fidivl
fs
nop
scas
scas
clc
sub
and
nop
adc
xor
xor
and
adc
mov
out
lock
mov
mov
enter
stc
notb
or
scas
inc
push
loop
xor
add
out
flds
fs
cli
clc
or
lock
or
jp
bound
or
repnz
fbld
out
push
mov
movsb
jo
mov
fcmovnu
mov
mov
mov
push
pop
inc
inc
inc
add
add
and
add
pusha
add
mov
fs
or
and
xor
test
cs
data16
decl
jo
push
loopne
mov
shrb
out
inc
mov
jnp
or
stos
xor
sub
ss
sub
mov
pop
push
dec
or
jbe
ret
mov
test
jp
push
adc
or
pop
add
push
rcl
decb
rorb
fs
or
sbb
xchg
pop
sub
jle
push
xchg
lods
mov
dec
pop
jp
mov
push
cmpsb
add
inc
or
rol
jp
data16
mov
and
xlat
jo
shll
cs
push
ljmp
sbb
xor
es
add
test
mov
data16
sbb
xchg
jl
pop
ja
aas
cmc
rcrb
stc
push
mov
mov
push
lcall
add
dec
cld
lahf
and
sub
inc
add
out
add
cmpxchg
push
sbbl
les
add
add
sar
push
jp,pn
out
pop
push
sahf
aam
inc
lods
imul
fidivl
xchg
or
inc
loop
or
xchg
loopne
sbb
arpl
cmp
test
std
fists
pop
fimuls
test
int3
in
pop
mov
add
sbb
add
in
addl
addl
cmovg
outsb
incl
push
add
into
out
or
in
test
les
aad
sub
andb
xorl
jle
push
push
sbb
dec
or
test
add
add
mov
sbb
or
add
and
mov
xchg
mov
adc
and
jp
test
pop
mov
std
mov
rolb
std
fs
add
rolb
add
jmp
enter
cmpsb
pop
add
lcall
cli
sbb
cmp
in
sbb
jne
sbbb
scas
cmp
shll
addr16
dec
andb
jmp
add
lods
stc
icebp
jbe
sub
xor
adc
xchg
jl
mov
mov
into
dec
out
jge
test
adcl
orb
cli
mov
adc
or
xorl
into
rclb
loop
add
test
add
dec
cld
jnp
imul
fcoms
add
sbb
jp
icebp
call
leave
xor
jl
fbld
xor
pop
push
push
add
push
rorl
sbb
es
or
inc
dec
pop
cmpb
sub
add
add
incl
sbb
test
out
outsb
cmp
or
add
add
add
adc
mov
test
mov
cmp
cmp
jo
pop
mov
movups
hlt
push
mov
cmp
pop
or
push
pop
call
in
cmc
xchg
add
fmul
out
fs
ds
jg
aad
mov
int3
add
push
xchg
roll
stos
mov
hlt
mov
ret
rorl
ret
pop
inc
sbb
rcrb
push
adc
inc
inc
adcl
add
inc
pop
or
or
add
in
je
sub
rcr
xchg
in
push
aaa
and
hlt
sbb
cs
in
adc
loop
mov
xor
inc
mov
in
jp
push
lahf
inc
and
cmpsb
or
or
icebp
inc
xchg
test
and
push
int
icebp
pushf
inc
mov
jo
cmp
outsl
fists
push
out
push
add
pusha
and
and
andb
pusha
jb
aas
xchg
and
sbb
mov
jge
adcl
jl
loopne
inc
icebp
xor
shrb
adc
push
les
mov
sub
jle
cmc
cmp
fwait
into
inc
orl
fldt
aaa
xor
out
dec
xor
into
xor
xchg
adc
data16
sahf
loope
lcall
in
call
cmp
sub
cmp
sbb
inc
inc
fmul
out
popa
add
outsb
nop
test
dec
outsl
jg
mov
or
mov
sub
inc
or
lret
jecxz
and
or
add
push
add
je
in
clc
subb
incl
add
addb
jl
add
rcrb
add
pop
and
inc
lock
push
je
or
in
pop
push
and
push
inc
data16
ljmp
into
push
adc
dec
mov
dec
mov
aaa
call
addr16
iret
mov
pop
das
test
fimull
stos
mov
fdivl
fisubs
aaa
cmp
add
outsl
in
or
xor
adc
test
int
mov
jl
sbb
popa
add
push
sub
lea
fisttpl
or
mov
pop
cli
stos
int3
addr16
and
sti
mov
cmc
jnp
dec
addr16
out
ret
lcall
icebp
or
ja
ss
les
sub
out
rcrb
aad
lea
orb
or
mov
dec
mov
out
pop
add
dec
add
test
push
andl
dec
cmpsb
decl
push
add
or
mov
out
push
push
mov
adc
in
gs
fisttpl
fs
sub
addl
fisubrs
cmp
adc
mulb
ds
mov
orl
outsb
es
or
enter
pop
lods
jg
add
outsb
jmp
test
test
mov
aaa
je
imul
xor
enter
int
or
in
test
adc
inc
test
inc
jbe
mov
jbe
test
xor
fisttpll
in
dec
in
jp
inc
out
jecxz
pop
bound
adc
stos
out
push
push
fmuls
or
sbb
fs
or
push
pop
mov
dec
or
xor
jmp
subb
add
jns
xchg
or
loop
and
jns
out
dec
loope
mov
inc
shl
xlat
rolb
aaa
popa
push
js
and
pusha
inc
add
jg
decl
push
push
jl
push
les
and
testb
inc
ja
adc
jecxz
addl
ds
out
ljmp
push
cld
andb
mov
jne
pop
das
jg
fcomip
inc
adc
in
rorl
icebp
pop
cli
xor
or
push
and
outsb
ret
dec
loop
pop
fs
inc
loope
push
mov
cmp
inc
and
push
mov
pop
dec
pop
fs
loop
sbb
inc
pusha
pop
pop
addl
xchg
push
ss
or
pusha
repz
adc
in
lcall
inc
xor
divl
add
xchg
out
add
push
test
loopne
add
je
lock
push
cltd
pusha
push
sbb
aaa
adc
adc
adc
lods
lods
jmp
pop
inc
add
jg
add
jo
shl
popl
adc
jle
inc
mov
mov
add
movsb
add
pop
adc
or
xor
mov
call
popf
pop
add
jb
bound
loopne
push
dec
ss
push
loopne
mov
push
pushl
mov
aaa
mov
lea
and
push
das
mov
sub
jnp
mov
sub
pushl
add
shrb
pop
jecxz
les
push
arpl
adc
test
adc
dec
fsubrl
jp
add
mov
adc
shlb
lock
ljmp
inc
mov
loopne
push
push
push
test
and
sub
cmp
fistps
xlat
dec
out
ret
popa
adc
repnz
pop
mov
mov
jo
andw
rcl
push
outsb
dec
nop
cwtl
loop
jb
lcall
xor
adc
pop
fs
mov
push
cmp
out
loopne
cmp
add
lret
mov
adc
loope
jo
or
lock
mov
push
sbb
and
popaw
adc
push
or
add
notb
add
add
add
addl
jmp
xor
movsb
pop
sbb
add
push
nop
mov
xchg
sub
or
fcmovb
xchg
jle
xor
pop
loop
cmp
stos
addr16
jg
mov
mov
mov
dec
jo
cmp
ljmp
xchg
or
add
adc
mov
mov
mov
notb
mov
flds
pop
add
enter
filds
adc
test
out
and
inc
xchg
dec
cmp
xorl
push
adc
pop
inc
mov
xchg
test
push
xchg
int
fildl
in
gs
pop
mov
push
jno
ss
xchg
es
mov
movsb
orl
add
add
mov
push
cmp
adc
xchg
push
xchg
inc
dec
push
lods
ret
dec
add
data16
push
lods
and
mov
scas
jle
std
data16
call
cmp
sub
jo
pusha
sbb
cmpsb
test
lods
xchg
adc
das
jg
add
mov
xchg
add
lods
mov
or
lods
xchg
mov
or
out
dec
stos
add
inc
add
adc
sbb
icebp
loope
jp
sbb
add
fldl
or
adc
push
push
mov
out
push
jo
dec
pop
mov
rcr
repnz
add
out
and
and
imul
add
stos
jg
nop
sub
out
rclb
fs
fildll
xor
out
out
and
xor
loope
push
popa
ret
je
pop
out
jne
adc
mov
rorl
add
in
xor
jb
pop
push
xor
push
adc
adc
out
clc
cmpsb
fldl
adc
into
pop
push
push
xor
mov
insl
cmpsb
xor
or
test
push
ljmp
ds
icebp
mov
imul
pop
in
jb
sub
inc
dec
sbb
mov
and
lds
outsl
jb
fidivs
pusha
testb
add
mov
mov
sti
inc
loope
cmp
fsub
dec
sbb
mulb
mov
and
sbb
int
imul
fdivrl
push
ss
inc
and
add
add
or
out
and
sub
scas
xchg
shrb
cmp
inc
adc
push
fsubrs
fs
decl
add
mov
pop
test
leave
out
enter
adc
or
jo
and
push
out
mov
xor
push
inc
movaps
lret
and
add
insb
jnp
in
jmp
or
out
gs
pop
notb
fiaddl
inc
mov
cmp
xchg
xchg
rolb
cmovge
inc
fimull
incl
push
enter
and
inc
mov
cs
fwait
mov
rorb
pusha
add
adc
and
sub
pop
add
aaa
rol
adc
and
jno
mov
loop,pn
adc
push
adc
push
pop
or
pop
push
mov
shrb
sbb
mov
test
and
pop
sub
pop
push
mov
mulb
xor
pop
popa
insb
push
pop
and
add
push
dec
ret
popa
cwtl
test
sub
call
push
push
pop
clts
lock
mov
push
adc
out
xchg
fisubl
mov
inc
movb
sub
and
add
into
add
add
jle
icebp
jg
or
jno
js
addl
push
and
adc
or
fwait
inc
lock
ret
dec
push
mov
cmp
push
jbe
loope
out
mov
sbbb
xor
mov
sbb
or
ds
jmp
ret
mov
out
sbb
sbb
out
sub
adc
ret
lock
pushl
add
imul
loope
sbb
push
loopne
orb
xchg
jecxz
pop
ss
fisttps
and
push
rorl
cmc
add
hlt
adc
or
push
or
and
enter
pop
lock
out
clc
mov
or
cltd
sbb
push
shr
lret
mov
int3
push
enter
jno
cmpsb
lcall
xchg
test
add
and
inc
push
inc
or
xchg
loopne
push
fcoms
adc
inc
push
push
xor
adc
sbbl
ficompl
into
lea
xor
dec
das
jae
add
push
mov
and
subl
push
jecxz
inc
into
jp
pop
mov
add
imul
add
dec
mov
leave
push
int
mov
fidivs
adc
inc
and
fwait
jmp
push
cmp
or
mov
and
loop
add
mov
add
fsub
cli
jp
rcrb
add
and
nop
adc
pop
popa
stos
popa
idivb
lcall
push
inc
inc
add
or
add
jbe
xchg
int3
pop
ljmp
add
mov
pop
push
dec
test
add
push
jb
sub
mov
xchg
gs
add
sbb
jle
ffree
push
add
adc
inc
orb
dec
adc
mov
mov
sbb
add
jbe
fistpll
inc
push
icebp
test
mov
add
dec
call
pop
inc
in
int
dec
dec
fisubrl
jl
add
shlb
pop
pop
sbb
cmpsb
fwait
xor
cmpl
adc
ds
pop
sbb
or
add
push
inc
or
sbb
cmp
or
push
inc
dec
cmp
cs
pusha
lcall
sbb
das
ret
and
push
inc
dec
ja
lcall
add
cmp
add
add
or
jl
mov
insb
fs
mov
test
sbb
cmp
incl
xchg
adc
cmp
sbbb
xchg
shrb
add
fisttpl
jg
push
mov
rorb
add
arpl
outsb
pop
das
cli
inc
xor
or
ret
sbb
cmpb
push
in
ljmp
pop
sbb
out
sub
cmp
adcl
add
je
rcll
and
mov
out
mov
inc
fwait
sbb
test
movl
jmp
iret
inc
add
adc
pop
mov
loop
mov
ss
cli
mov
pop
jp
and
ss
inc
mov
popf
add
hlt
push
lea
and
sti
incl
popl
sysexit
test
cmp
es
addl
xchg
insb
mov
adc
out
adc
pop
add
sbb
sbb
add
mov
jge
jo
and
jbe
push
je
rorb
ds
cmpb
inc
push
push
push
sbb
jo
mov
adcb
sarb
push
add
repnz
out
das
ljmp
cwtl
pop
outsb
shrb
add
mov
pop
jae
inc
int
sub
into
adc
cli
ficompl
push
stos
sbb
adc
outsb
inc
pop
test
pop
or
sub
add
xchg
repnz
lods
adc
inc
or
sub
push
cmp
ds
inc
pop
or
sub
jg
xchg
out
xchg
mov
dec
popf
inc
dec
pop
pop
jl
loope
ljmp
add
cmp
sub
add
ret
add
sub
xchg
sub
mov
repnz
cmp
mov
jbe
adc
movntq
out
inc
test
adc
pushw
push
inc
out
or
rcr
or
pusha
dec
and
sbbb
pop
add
adc
or
add
pop
mov
and
add
add
jecxz
jmp
pop
inc
data16
and
loop
mov
or
add
push
cld
mov
or
pop
int3
add
std
data16
and
mov
loopne
or
outsl
rol
inc
push
into
or
add
jp
or
decl
push
andb
add
adc
std
icebp
and
ficompl
push
mov
sbb
jb
punpcklbw
mov
add
xchg
sbb
movsl
push
icebp
pop
jo
push
lds
loop
push
pop
xor
xor
pop
add
inc
push
lea
jp
fs
das
aam
iret
clc
add
push
inc
adc
mov
out
pusha
sbb
subb
pop
inc
pop
ljmp
shlb
sub
nop
in
fs
ss
and
jnp
test
pusha
adc
or
add
pop
pusha
xchg
add
in
add
dec
add
in
pop
push
int3
adc
sbb
inc
scas
sarb
add
loopne
loopne
jg
and
or
xor
mov
mov
scas
pop
aam
cwtl
mov
push
mov
stos
inc
rcr
or
push
data16
pop
movsb
inc
push
or
clc
mov
mov
int
mov
dec
push
rorb
cs
minps
pop
pop
add
sbb
cs
mov
or
add
mov
aad
pushl
or
or
test
mov
ss
mov
sbb
outsl
decl
rorb
inc
mov
add
scas
mov
subb
pushl
adc
testl
test
cmpl
andb
cld
pop
lock
addr16
xchg
or
int
jp
movsb
mov
inc
out
inc
push
fsubp
adc
push
loop
cmpsl
loope
pop
decb
lods
pop
addb
mov
adc
sub
xchg
and
inc
adc
pusha
sbb
loop
or
ret
add
adc
shll
push
in
sbb
pop
loopne
or
aaa
push
cmp
dec
push
push
clc
mov
add
push
stos
mov
pop
loop
mov
popa
or
bound
add
out
mov
ret
mov
pop
add
ret
add
icebp
push
rolb
loopne
icebp
push
jnp
add
test
pop
imul
inc
rorl
lock
xchg
adc
mov
adc
shlb
icebp
jo
stos
in
xor
add
and
inc
shll
and
cmc
outsl
lcall
shl
inc
es
sbb
xlat
or
es
push
loopne
loop
pop
and
ss
lock
cmp
mov
or
add
jns
or
cmove
shlb
ss
enter
xor
bound
jp
decl
push
pusha
mov
out
mov
pop
hlt
shlb
inc
push
sbbl
pusha
pop
test
out
add
outsl
fists
inc
or
je
in
sbb
fisttpl
jl
sbb
and
mov
jbe
mov
filds
cmp
shrb
adc
push
mov
in
cmp
dec
ret
cmp
cmp
pop
pop
aam
or
pop
es
inc
lock
rorl
push
and
xchg
xorl
pop
add
addb
sub
add
add
xchg
push
bound
mov
test
push
inc
jle
es
or
adc
clc
mov
mov
sbb
aam
mov
mov
aad
pop
or
in
ss
jnp
mov
lock
and
imul
pop
pushfw
out
cmp
push
pop
push
fdivl
lds
aaa
jbe
xor
pop
adc
or
flds
test
lock
out
loope
rcrb
add
call
jo
out
mov
pop
mov
pushf
and
cli
decl
inc
jle
or
pop
or
xor
push
lock
sub
add
aas
ficoms
dec
test
jnp
fs
add
pmulhw
stc
cmp
add
pop
repnz
aam
pushl
xchg
and
push
outsb
icebp
inc
push
adc
dec
xor
inc
and
into
rol
mov
jo
xlat
jp
xchg
data16
scas
mov
or
or
xor
dec
mov
mulb
xor
add
push
push
adcl
or
decl
inc
sbb
add
or
push
popw
pop
test
adc
jmp
bound
push
sbb
adc
and
xlat
mov
sub
cmp
mov
adc
adc
sbbb
jg
incl
mov
insl
lock
fwait
or
les
dec
out
out
incb
nop
mov
add
cmp
cmp
push
push
sub
add
fisttpl
add
fistl
and
aaa
enter
xlat
mov
aam
add
pusha
pop
push
shll
dec
inc
cwtl
push
cli
call
dec
and
adc
xchg
push
out
sbb
sbb
sbb
scas
out
lock
jge
or
icebp
push
lods
add
dec
push
ss
or
pop
subb
cmpsb
jp
dec
pop
fwait
add
bound
pop
std
shrb
push
xchg
addr16
scas
pop
mov
mov
and
and
call
add
inc
sub
or
imul
add
adc
xchg
out
inc
pop
add
push
sub
adc
add
icebp
pusha
push
ss
out
add
push
add
mov
scas
stos
out
test
cs
lock
mov
adc
in
stos
add
mov
adc
enter
in
scas
xchg
jge
enter
rcll
enterw
out
mov
out
jo
ljmp
pusha
jo
and
jle
pop
int3
rolb
out
xchg
nop
or
push
mov
add
jb
movsl
subb
jle
add
mov
adc
xorl
or
adc
mov
scas
js
movsb
arpl
pushf
push
mov
addr16
pusha
out
adc
ja
subb
inc
add
lock
push
mov
cmp
jle
sbb
out
mov
fcomip
in
and
add
fcomps
in
rorb
pop
sbbb
cld
sbb
jp
lock
mov
lret
out
push
adc
rorl
sbb
call
adcb
rolb
pop
out
or
adc
push
loopne
push
out
mov
mov
push
inc
sbb
jp
mov
dec
or
shlb
cld
jg
sahf
mov
pusha
jno
and
mov
shll
lea
add
enter
fwait
jle
mov
hlt
push
inc
loopne
xor
adc
out
clc
call
xor
out
dec
xchg
dec
clc
inc
pop
jo
mov
in
lret
dec
inc
popa
sar
lock
test
xchg
inc
pop
jp
cld
icebp
incl
imul
popa
rcrb
xchg
ss
or
aaa
sbb
mov
cmc
sbb
test
cmc
enter
inc
jp,pt
lcall
add
icebp
loop
cmp
jmp
cmp
jg
sub
lock
mov
add
pusha
push
data16
and
xchg
or
push
jo
mov
push
pop
dec
cmc
or
mov
call
dec
adcb
cld
add
cmp
jo
sahf
add
ss
push
cmp
xchg
mov
out
add
push
fiadds
sub
add
add
add
rolb
inc
pop
jp
xor
jb
or
fbstp
jp
gs
push
and
test
in
shl
or
lcall
orb
ficoml
rolb
mov
xor
lcall
adc
or
faddl
and
mov
and
or
add
adc
lcall
push
cmp
push
lcall
jnp
xchg
rorl
inc
repnz
add
or
and
jbe
inc
stos
add
mov
out
pop
pop
mov
inc
xorb
mov
jnp
fs
mov
push
add
adc
mov
pop
push
dec
arpl
ds
push
lret
add
in
mov
mov
jp
inc
sbb
adc
sub
adc
es
hlt
aas
add
in
push
or
outsl
insl
push
cmp
or
pop
shlb
add
out
mov
or
sub
ljmp
xor
out
push
sub
add
or
jns
xor
inc
add
imul
sbb
pop
sbb
inc
mulb
or
dec
sbb
inc
lock
js
aaa
add
or
xchg
inc
in
pop
ret
add
inc
add
or
add
adc
orb
rorb
hlt
jle
add
pop
je
mov
push
add
ret
sub
mov
add
adcl
add
rcll
hlt
dec
cmc
xchg
mov
js
lods
data16
sarl
ss
adc
aaa
or
ret
mov
repnz
out
add
or
inc
ss
add
orl
add
or
rolb
xchg
add
into
loope
test
dec
addl
mov
ljmp
ljmp
or
mov
sarl
inc
and
xchg
out
mov
stos
filds
inc
and
inc
or
add
test
cmp
imulb
add
sbb
inc
or
outsb
adc
loop
shlb
rolb
mov
addl
and
ss
sbb
rorb
inc
inc
add
inc
std
outsl
fbstp
push
out
test
inc
inc
push
fs
andb
arpl
adc
cmp
sbbb
sbb
xchg
push
orb
push
out
hlt
inc
lock
dec
vmovups
rclb
in
cmpsb
fbld
clc
inc
or
dec
sbb
push
sbb
mov
xchg
pop
pop
dec
das
mov
add
xchg
push
push
inc
adc
clc
jmp
stc
or
xchg
inc
or
mov
mov
and
inc
sbb
xorl
add
test
pop
cli
xor
mov
or
cli
or
or
mov
add
mov
sub
mov
xor
jmp
in
sbb
xchg
push
push
or
add
ret
lock
pop
mov
mov
int3
aas
inc
push
sahf
inc
or
mov
jo
pushf
pop
push
xchg
mov
fcoms
into
pop
inc
jg
push
adc
icebp
xor
out
shl
ret
lds
push
add
shl
loopne
fs
rolb
cmp
inc
cmpsl
mov
push
lret
fadds
push
or
or
shlb
mov
or
or
pusha
add
xchg
incl
add
inc
xor
dec
mov
pusha
fcmovb
mov
jg
mov
push
or
jp
push
mov
add
push
jmp
andb
pop
mov
add
fildl
popa
add
jmp
adc
mulb
push
data16
cmpsb
pop
sbbb
inc
test
sbb
adc
jecxz
or
subb
sbb
subl
sbb
lea
or
js
cmc
loop
lea
fimuls
rolb
imul
xor
leave
mov
loopne
rcll
and
and
hlt
adc
out
cmp
jne
ds
xlat
inc
mov
das
push
pop
data16
and
loope
aaa
push
stos
add
and
ret
inc
and
call
out
cmpsb
xlat
pop
mov
or
out
dec
shl
add
jle
incb
outsb
addb
lock
pop
push
pop
lock
pop
shlb
shll
push
popa
outsl
push
dec
inc
inc
push
sub
add
xor
add
in
sbb
and
adcl
push
pop
sub
das
sub
add
aaa
rorl
roll
aaa
and
adc
aaa
push
sub
cmp
sbbl
loopne
lcall
sub
xor
add
mov
lock
mov
push
mov
lcall
push
out
lods
loopne
cli
rcrb
xor
mov
xchg
sbb
lods
cmpsb
cmp
std
push
jge
mov
dec
cmpsb
sub
and
and
or
pusha
push
and
out
push
add
test
or
jge
push
addl
push
testb
addl
or
mov
push
xor
sbb
add
pop
pop
pop
dec
mov
mov
mov
pusha
fstpl
push
repnz
enter
popa
jb
adc
gs
add
cmp
das
cli
mov
push
adc
push
mov
or
push
ret
js
and
mov
pop
std
rclb
or
sbb
and
add
or
ror
xchg
cmc
pop
mov
cs
pop
lret
mov
mov
pusha
sub
aas
pushf
call
mov
jle
add
js
pushaw
js
or
and
lods
xchg
loopne
mov
sbb
mov
clc
scas
out
and
add
fidivs
inc
push
fidivl
sbb
aaa
adc
adc
outsb
in
inc
adc
enter
inc
jl
cmc
adc
in
push
loop
push
and
pop
mov
fmuls
inc
nop
loop
push
and
mov
pop
jmp
push
fisubrs
adc
push
xor
cmp
fbstp
call
adcl
add
add
ljmp
lock
mov
or
and
jnp
or
add
andl
mov
ret
or
gs
inc
mov
insl
jnp
movsb
cmpb
sbb
cmp
shll
cli
mov
inc
pop
stos
enter
call
xor
or
or
cmp
adc
mov
add
iret
or
addl
add
xchg
icebp
cmp
push
add
mov
ljmp
adc
push
xor
lock
fs
cmp
div
movsb
push
or
add
pop
cs
out
mov
add
incl
inc
dec
or
mov
dec
push
outsb
out
jo
push
or
loop
aam
mov
mov
popa
fidivrs
mov
popa
dec
out
loopne
mov
xlat
mov
test
rolb
test
push
sub
mov
rolb
jp
push
add
cmp
hlt
fisttps
inc
or
roll
mov
orb
leave
call
push
xchg
sarb
mov
xor
add
fwait
mov
sbb
sbb
stos
jo
inc
or
ljmp
cld
and
aaa
decl
push
adc
loopne
jnp
cmpsb
cs
and
add
mov
add
pop
out
cmpsl
ljmp
lods
add
push
jae
xor
ret
push
mov
or
and
push
push
clc
mov
out
nop
add
loop
stc
sbbl
xchg
addb
xor
push
lahf
lahf
in
inc
in
loope
das
test
pop
xchg
jo
call
and
inc
inc
hlt
addb
data16
incl
cli
push
sub
cli
add
inc
sbb
ss
pop
inc
aaa
push
ljmp
cld
pop
pop
out
and
dec
and
test
pop
icebp
cmc
xchg
inc
and
and
jnp
or
mov
hlt
dec
test
cli
cmc
pop
repz
out
add
mov
shll
lock
rclb
add
push
add
test
into
inc
iret
out
sbb
push
iret
in
push
sub
adc
push
xor
or
inc
and
mov
inc
pop
lock
fbstp
mov
adc
mov
ret
loopne
lock
decl
dec
lock
fsub
je
pop
push
arpl
sbb
es
add
incb
inc
xchg
push
in
aaa
loopne
es
in
lea
or
sbb
xor
stc
jnp
in
sbb
fs
cmpsb
jmp
sbbb
rolb
rorb
cs
jo
push
mov
cmpsb
jle
int3
mov
enter
inc
imul
sti
mov
aas
mov
icebp
xchg
andl
dec
add
mov
push
and
jmp
fs
push
pop
pop
clc
in
or
sub
dec
push
add
sub
int3
out
ret
ficompl
push
lods
jnp
inc
sbb
or
lcall
dec
popa
sub
cli
push
loopne
fmuls
mov
add
mov
mov
mov
add
sub
lock
mov
and
jmp
xor
jmp
bound
push
ret
xor
add
cmp
mov
jle
push
xchg
cs
sub
jg
push
adc
in
xor
xor
in
add
sbb
xor
nop
push
bound
icebp
das
ss
sub
test
xchg
add
xchg
xchg
stos
movsb
ljmp
call
testl
fdivrp
out
cld
adc
hlt
std
add
mov
inc
lahf
loope,pt
jmp
cmp
rcl
int3
or
sub
xor
add
adc
or
jg
jl
roll
stos
iret
outsl
lock
push
xor
js
mov
add
mov
push
stc
icebp
orl
lock
add
dec
cli
testb
add
aas
lock
outsb
cld
xchg
aas
xor
xor
add
jbe
enter
fcmovnbe
ret
or
add
and
or
dec
or
mov
xlat
fisttpll
pop
mov
repnz
out
stos
clc
sub
cld
aaa
add
mov
popa
addb
fs
popa
jl
sub
xor
ss
dec
or
and
jmp
or
or
fs
popa
arpl
add
or
sbb
cmpsb
repnz
decl
out
inc
addb
ret
jp
mov
or
adc
jge
xchg
fwait
mov
sub
shl
dec
mov
push
pusha
xchg
ds
sbb
pop
add
rolb
in
rolb
inc
js
xor
ja
jnp
adc
nop
jb
out
xchg
stc
call
push
lods
stos
adc
aam
sub
int
jl
adc
test
xchg
movsl
scas
call
js
push
mov
add
notb
add
mov
pusha
add
add
or
clc
shrb
mov
sub
pop
test
test
test
mov
cmp
and
xchg
jmp
test
push
minps
pop
xchg
lock
push
and
add
push
sbb
fstp
lock
adc
adc
push
ja
mov
push
add
add
xor
dec
xor
jnp
jo
pushl
xor
jecxz
aam
jo
sbb
dec
adc
roll
or
xlat
out
sub
and
jb
dec
subb
adcl
and
xchg
add
mov
enter
stos
jg
adc
test
sub
rclb
loop
cwtl
mov
ja
pop
aad
js
mov
jno
and
fisttpl
dec
clc
sub
rolb
dec
mov
add
in
outsl
xor
add
or
mov
xor
cli
dec
ljmp
mov
mov
bound
dec
mov
scas
add
test
movb
jo
stos
adc
pusha
push
iret
pop
mov
scas
or
test
push
inc
fstpt
jo
fmuls
leave
add
sbb
and
into
push
sub
in
in
mov
rorb
xchg
pushf
inc
xchg
rclb
cmpsb
xchg
lar
rolb
mov
xchg
mov
mov
pop
or
aad
mov
imull
out
pop
adc
jae
pop
inc
out
add
push
push
push
add
decl
inc
adc
add
mul
add
jmp
dec
push
test
and
adc
sub
or
int3
je
adc
mov
ret
jae
push
dec
subl
xor
int3
or
jge
jae
test
lea
mov
mov
adc
fs
add
mov
inc
or
jo
jmp
inc
outsb
xor
jp
or
pop
jb
adc
pop
or
test
dec
lss
cmp
jb
call
sbb
push
xor
loop
sub
js
inc
lods
add
andb
xchg
pop
addb
mov
decb
pusha
jnp
adc
sub
test
cmpsb
jg
in
jns
mov
cmp
andb
decl
icebp
sbb
xorb
xchg
adc
xor
pop
iret
movsb
mov
cmpb
cmpl
xorw
pusha
sub
push
loop
call
test
mov
andb
lock
mov
ret
gs
adc
sub
jmpw
fistpll
data16
add
mov
cs
lcall
mov
jbe
inc
imul
inc
arpl
adcb
aaa
mov
mov
add
xor
add
mov
mov
mov
ret
arpl
arpl
cmp
je
pop
bswap
out
push
les
inc
incl
rcl
out
or
inc
clts
arpl
dec
sbb
sub
and
dec
dec
inc
cmovg
sub
jmp
cli
jnp
shll
popa
add
shrb
or
jl
adcb
pop
inc
and
xchg
mov
jle
or
rolb
push
out
sbbl
and
call
pop
inc
sbb
leave
dec
ss
scas
insl
adc
pusha
mov
or
pop
mov
push
and
fadds
pop
rol
mov
xchg
mov
mov
mov
xor
sbb
out
and
andb
loopne
xor
cltd
ss
aaa
inc
add
mov
aam
adc
dec
push
sbb
mov
addb
ror
test
xchg
cmp
lret
mov
aas
cmc
pusha
jno
lcall
punpcklbw
pusha
in
or
sub
add
inc
add
and
subb
int
cmpb
je
cmp
test
pop
pusha
inc
jp
or
jns
mov
adc
and
mov
jle
push
inc
xchg
pop
or
sti
es
rcrb
fstps
ljmp
loopne
inc
push
push
aaa
cwtl
sbb
adc
xor
adc
dec
pushl
xor
mov
rorl
adc
imul
outsb
in
fwait
add
ret
adc
push
mull
es
fisttpl
xor
adc
add
jbe
jge
xchg
in
std
inc
cld
fmuls
dec
xchg
mov
orl
bound
jo
xorl
mov
shll
mov
add
jg
les
mov
push
xor
sbb
mov
sahf
inc
mov
pop
mov
lcall
mov
rorb
mov
movsb
add
test
adc
xchg
sub
das
shrb
out
addl
decl
pusha
test
addb
aas
jmp
sbb
gs
shll
mov
push
jp
call
push
xor
xchg
or
and
test
and
fs
aaa
sti
xchg
loopne
xor
movb
lds
jnp
into
push
and
out
testb
lods
dec
test
inc
adc
pushl
and
outsb
adc
sbb
loopne
mov
call
adc
outsb
dec
and
out
add
jmp
add
inc
movsl
stos
pop
lret
add
das
repz
jg
or
leave
ret
and
or
ljmp
in
lahf
or
loop
sub
mov
or
jmp
aad
or
lods
addb
adc
rcr
add
inc
pusha
or
mov
je
rolb
push
fs
ret
jle
adc
jno
adc
or
int
dec
push
test
notl
jo
mov
notl
aam
adc
test
sarl
push
jp
push
insb
movsb
and
lock
add
inc
or
or
sbb
pusha
xchg
fnsave
cmpb
add
in
dec
outsl
fiaddl
test
add
push
add
dec
or
sbb
shl
push
orl
cmpsb
or
mov
inc
data16
aaa
fmuls
push
lock
jnp
test
lahf
dec
xchg
dec
or
xchg
dec
mov
jo
push
xchg
ud0
pushf
rcl
and
mov
outsl
in
cmp
movsb
cmp
jo
and
or
and
std
decl
pop
mov
stc
sti
and
dec
pusha
cmp
and
xorl
cmpl
xor
or
fs
xor
les
and
mov
fldt
push
cs
loopne
inc
js
dec
add
jne
mov
inc
or
test
out
mov
subl
pop
add
dec
out
je
pop
or
cmovo
xor
mov
testb
pop
and
jo
addb
loope
add
shrl
inc
in
scas
in
bound
dec
and
mul
mov
jge
roll
sub
inc
pop
add
push
xchg
push
mov
rolb
xor
inc
addb
mov
test
dec
pmulhw
push
mov
int3
imul
nop
scas
adc
fwait
imulb
add
xor
nop
inc
mov
mov
mov
cmp
inc
push
sub
lods
inc
push
adc
sub
adc
dec
add
insb
xor
push
pop
push
push
xor
adc
push
xlat
pop
out
loop
stos
inc
mov
sub
and
and
inc
outsl
call
xchg
jo
out
adc
sbb
or
jmp
add
push
push
or
ffree
push
test
movl
sub
in
push
pop
jns
push
je
add
xchg
fs
std
subb
inc
cmp
add
iret
and
dec
out
or
aaa
add
jb
sbb
push
add
cmp
push
and
in
data16
xor
push
ljmp
pop
aaa
sbb
call
data16
and
dec
mov
sub
jnp
pop
pop
lcall
incl
fwait
int3
test
add
shr
ds
arpl
loopne
incl
xchg
or
and
sub
add
sub
or
lock
add
or
add
xor
and
add
ljmp
inc
mov
inc
push
inc
jmp
add
fs
push
out
cmp
incl
mov
xchg
dec
clc
mov
jmp
add
imul
icebp
add
out
hlt
add
pusha
fbstp
pop
and
xchg
push
out
test
out
aam
sub
or
push
dec
testb
addr16
hlt
loop
cmpsb
lea
testb
sub
add
and
pushl
mov
push
jp
xor
xchg
cs
mov
lock
daa
cs
hlt
imul
int3
and
mov
pusha
sti
inc
pop
or
inc
aas
dec
fidivl
aas
xor
subb
mov
push
add
mov
mov
mov
and
mov
mov
imul
adc
lock
mov
dec
incb
mov
into
push
add
mov
and
fcmovnu
sub
push
mov
ds
shrb
add
mov
lods
enter
xchg
lods
adc
test
ss
fstpt
add
addl
mov
mov
fistpl
cmp
mov
andb
pusha
add
ja
fs
int3
loope
inc
adc
mov
mov
sbb
mov
add
dec
add
dec
mov
sbb
insl
inc
add
or
add
sbb
hlt
inc
fcoms
mov
repnz
decb
xor
xchg
popl
aam
jbe
test
in
mov
aaa
pop
add
les
fstpl
mov
hlt
or
dec
push
cld
mov
xor
dec
and
inc
add
pop
add
cmp
add
iret
xor
mov
imul
push
mov
jo
mov
shlb
jno
and
add
jmp
cwtl
lods
mov
cmp
mov
dec
and
mov
incl
ret
add
jno
daa
leave
lods
lcall
mov
xor
jp
add
jmp
lds
fs
bound
add
cli
les
test
into
test
xor
into
lahf
mov
call
loopne
dec
push
jp
mov
sub
leave
sub
jbe
and
sub
fsubs
lock
ljmp
sbb
and
push
xchg
dec
jl
mov
inc
jns
jo
adc
and
jo
nop
mov
shll
mov
mov
movsl
pop
pop
or
jno
and
or
in
shrl
add
mov
adc
add
shll
mov
in
push
mov
inc
add
mov
xchg
lea
push
test
repnz
stos
add
in
xor
or
push
cli
data16
jp
or
mov
mov
cmp
pop
cld
aaa
inc
out
test
push
fucomip
aad
dec
imul
enter
push
cwtd
ljmp
xor
push
dec
fiaddl
sbb
ss
adc
dec
out
std
sub
in
cmp
sbb
and
inc
dec
ds
sub
or
inc
sbb
in
jge
add
mov
repnz
test
sbb
jp
mov
or
imul
add
add
movsb
loop
fadds
dec
in
cld
dec
xor
lods
in
pushl
insb
or
add
and
inc
out
xchg
mov
mov
adc
mov
pop
loopne
outsb
ljmp
add
lcall
orb
cmp
addb
dec
adcb
mov
fildl
mov
sbb
decl
repnz
xor
inc
push
rclb
adc
jo
mov
add
add
in
andb
push
dec
inc
jp
filds
decl
xorb
pop
sub
das
xor
mov
mov
adcb
inc
pop
inc
subl
sub
jge
test
lds
or
push
fsub
bound
cmpb
in
orb
or
cs
mov
das
inc
xorb
cmp
ret
xor
in
and
test
lock
shll
adcb
test
xor
push
push
adc
or
pushl
in
xor
push
xor
rclb
xor
stc
and
pop
inc
or
push
and
inc
lock
inc
or
sub
or
lcall
and
push
inc
add
in
push
out
call
add
add
stos
mov
aam
test
pop
adc
push
dec
lds
inc
ds
stos
add
push
mov
ret
push
bound
jge
pop
inc
addr16
mov
idiv
clc
into
push
icebp
in
jnp
mov
lds
aaa
sarl
push
jp
inc
inc
subb
cmpsb
fwait
jmp
mov
push
mov
push
xor
arpl
cmpb
inc
rolb
mov
mov
loopne
cmp
dec
clc
outsl
decl
addb
mulb
inc
or
std
pusha
and
push
pop
sbb
push
add
push
inc
fiaddl
sbb
out
push
das
hlt
sbb
imul
jl
popa
pop
add
push
loopne
popa
popf
lds
mov
xor
cmpsb
popa
insl
jecxz
out
popaw
ret
pop
add
push
xor
jge
and
xor
rolb
cmpsb
mov
addr16
and
cmp
and
movsb
inc
add
add
shl
dec
xchg
movsl
dec
add
in
loop
stos
adc
loope
iret
add
cmp
and
dec
add
dec
xchg
das
test
push
incb
mov
inc
jno
roll
pusha
sbb
imul
negb
add
dec
scas
test
stc
xchg
rcrl
add
mov
mov
inc
dec
push
jo
or
scas
mov
adc
js
orl
sub
mov
and
testl
fcmove
in
fcompl
and
adc
push
inc
fcomip
mov
and
lea
mov
nop
test
xor
inc
and
add
xor
inc
mov
or
bound
mov
sbbb
lcall
les
roll
mov
das
js
aam
orb
stos
dec
inc
add
adc
sbb
mov
inc
add
int
sub
jnp
xchg
shrb
scas
cmpsb
and
scas
jo
out
add
xor
dec
in
sub
and
mov
es
pop
and
or
cmp
push
hlt
scas
popa
cmp
adc
cs
or
push
add
aaa
xor
mov
cmp
aam
out
and
stc
add
test
add
push
adc
mov
dec
sbbb
add
push
out
cmp
test
push
add
pusha
call
jo
or
dec
pop
cmp
xor
mov
xor
xor
rolb
mov
mov
inc
xor
mov
enter
out
adc
shlb
in
out
out
xlat
out
pop
rolb
push
or
cld
int
xlat
sbb
push
sub
and
scas
aam
jnp
rolb
scas
mov
dec
xchg
pop
mov
incl
pop
jb
pop
pop
inc
addr16
add
cs
add
les
add
inc
add
dec
inc
in
inc
pop
push
lock
jmp
or
pusha
jmp
sbbb
xor
cmpsb
aad
or
adc
loopne
cmp
dec
into
and
mov
mov
pushl
mov
xor
loope
adc
ss
nop
aaa
les
jnp
pusha
add
mov
adc
ss
push
xor
mov
bound
call
jp
pop
xorb
cmp
ss
add
in
add
fbstp
rcr
fnstsw
js
test
iret
xchg
xchg
nop
push
pop
sbb
inc
push
int3
ljmp
pop
dec
jle
xor
pop
mov
xchg
mov
in
rorl
add
xchg
xor
daa
cli
dec
jnp
jmp
cmp
in
jno
adc
mov
add
call
add
pusha
cli
push
or
out
and
sub
std
and
mov
add
inc
mov
sub
pop
jo
idivb
cmp
dec
dec
rcrb
add
outsb
push
sub
decl
cmp
adcb
fsub
lock
inc
jbe
fwait
push
fwait
push
xor
pop
mov
addb
mov
addb
fadd
nop
cmp
bound
shrb
push
lcall
loop
cmp
or
pop
push
movb
mov
or
mov
scas
js
imul
dec
adc
add
mov
pusha
jbe
mov
adc
out
add
fwait
out
lods
mov
sbb
and
insl
pop
add
sub
pop
sub
fdiv
icebp
mov
xor
and
divb
pop
add
fidivl
jbe
enter
in
fnsave
das
test
add
lcall
jne
push
mov
rolb
dec
or
js
rol
cmpl
jmp
or
and
hlt
test
jp
out
xor
cmpsb
cmp
sub
or
sarb
xor
loopne
xor
jo
outsl
jb
leave
add
pop
dec
sub
incb
in
lea
or
xor
dec
adc
pop
insl
cmpsl
loopne
mov
sahf
call
push
or
das
nop
shll
out
out
mov
repnz
pop
add
decl
rclb
mov
or
mov
ss
loop
lea
imul
mov
pop
sbb
fs
rolb
or
add
pop
imul
in
push
pop
nop
add
sbb
jg
shl
rol
les
rolb
xor
lret
push
cld
mov
adc
mov
adc
add
ja
nop
add
adc
data16
orl
jg
das
lods
pusha
or
lock
xlat
or
or
out
and
testb
jnp
icebp
js
rol
sbbb
push
ljmp
push
jle
icebp
out
inc
mov
repnz
rcrb
add
or
pop
sbb
lock
incl
inc
pop
mov
popf
adc
popa
test
cli
outsl
clc
push
sub
push
cmp
xchg
in
lret
add
roll
scas
mov
rcll
loope
dec
or
out
call
and
or
sbb
and
and
xor
dec
sbb
jmp
cli
and
mov
and
stc
xchg
vpsubusw
xchg
sub
fdivrl
jle
push
str
add
mov
leave
pop
mov
aam
lret
cwtl
sti
shlb
std
in
push
sar
xlat
or
jo
mov
add
fisubs
mov
add
mov
ja
xor
cmp
sub
or
inc
pop
insb
js
add
add
out
add
sbb
or
outsb
inc
lock
mov
push
and
push
push
adc
lcall
inc
out
ja
mov
xchg
int3
insb
xchg
cs
aaa
jge
add
inc
outsb
cmp
lock
inc
inc
pop
mov
fs
jg
addb
bound
call
sbbl
rorl
mov
jl
imul
inc
lods
xchg
or
adc
jp
dec
fbld
or
cmp
pop
addl
jb
push
addb
or
test
es
sbb
push
insb
xchg
add
push
mov
clc
or
and
pop
add
out
out
pusha
test
xor
decl
inc
xor
or
push
test
xchg
adc
es
jp
pop
adc
fiadds
dec
jle
mov
rolb
xor
add
push
shlb
pop
push
sub
out
adc
addr16
and
inc
xor
pop
add
or
and
xor
add
mov
inc
and
repnz
mov
fiaddl
fisubrs
shll
ret
movsb
rorb
fistpll
jae
xchg
push
adc
ss
add
shl
mov
mov
ret
mov
add
hlt
out
inc
sbb
sub
js
xchg
shlb
ljmp
push
sub
mov
outsl
adc
adc
jmp
sahf
adc
or
ljmp
push
pop
shlb
sub
mov
inc
ret
ret
subl
mov
inc
sub
or
bound
jae
cs
jnp
shll
outsl
or
inc
pop
test
inc
inc
and
add
js
add
pusha
rorb
cmpl
cmp
scas
clc
sbb
pop
jmp
cmp
inc
inc
fldt
add
or
movsb
or
ret
loopne
out
hlt
movsl
clc
decl
adcb
fs
subl
shl
dec
add
or
fidivs
in
test
ficompl
and
jle
fucomp
add
addps
lods
std
mov
aam
cmpb
sbbb
push
sub
jmp
loopne
adc
bound
loopne
test
pusha
outsb
or
inc
inc
nop
or
push
push
inc
ret
sti
orl
sbb
push
jb
mov
xor
adc
mov
arpl
clc
cmpl
outsl
push
int3
mov
rclb
jno
adc
push
fwait
ljmp
pop
jge
out
jmp
inc
and
loope
mov
add
or
mov
movsl
mov
bound
and
bound
fs
loope
clc
ret
xor
or
hlt
add
pop
enter
add
hlt
dec
mov
loopne
cmp
bound
and
shlb
pusha
adc
es
or
sbb
cmp
es
aam
movsb
and
int
dec
sub
lock
and
ret
orl
stos
and
inc
cmp
and
in
ljmp
add
pop
mov
sub
push
cld
add
add
mov
ljmp
sbbb
out
lds
mov
inc
popf
popa
rolb
es
and
sbb
bound
incl
mov
add
mov
scas
push
les
mov
pop
test
cmp
push
orl
mov
pop
mov
test
incl
out
in
shlb
dec
push
mov
jbe
push
notl
lods
std
sbb
dec
loop
xor
jo
cmp
aas
insl
arpl
lods
out
mov
out
cmp
fdivr
scas
insb
xchg
movsl
and
push
outsb
inc
add
sbb
fildll
insb
push
adc
xor
cli
add
dec
dec
mov
mulb
inc
nop
cld
or
int
or
push
test
std
pop
in
mov
sub
pop
sbb
adc
and
mov
or
mov
adc
iret
hlt
dec
inc
mull
jge
inc
pushf
mov
push
jns
testb
cs
and
scas
clc
test
push
and
jp
xor
xchg
ret
cwtl
mov
mov
mov
std
add
aaa
lea
push
add
inc
sbb
dec
out
push
mov
push
push
jle
clc
fldcw
add
fstpl
push
or
pop
cmp
adc
push
pop
jl
shrb
sub
or
sbb
cld
js
push
or
add
stos
jle
pushf
push
or
lret
test
sub
add
in
int
dec
push
mov
scas
and
out
jo
outsl
dec
xor
xor
jbe
repnz
pusha
sub
add
sub
add
movsb
jmp
jae
call
and
dec
stos
imul
push
push
push
push
jle
mov
movsl
adc
cmp
out
inc
mov
in
pop
inc
out
lods
call
lock
jo
icebp
xor
lret
loop
outsb
mov
xor
addr16
jecxz
sub
pop
pushf
dec
fisubrs
negb
push
adc
push
lods
xor
test
rcl
addr16
dec
sbbl
pop
out
in
aas
jo
mov
add
int3
shl
xchg
and
lock
push
out
push
dec
push
in
or
cs
or
add
jne
mov
testl
lcall
add
fwait
pusha
ss
rcll
fs
dec
fs
test
pop
in
mov
inc
or
xchg
dec
dec
jns
add
or
inc
add
outsl
test
sbb
adc
clc
adc
adc
inc
adc
loop
sub
cmpsb
inc
pushf
and
inc
ds
add
dec
dec
scas
add
cmp
rorb
jge
and
or
mov
ret
mov
aaa
movsb
add
sahf
mov
cli
loop
ds
cli
mov
stos
mov
and
std
ja
nop
adc
or
lock
mov
lcall
or
jo
fistpll
add
or
adc
rcll
clc
dec
add
xor
cmc
add
mov
lock
mov
or
add
sbb
nop
test
mov
dec
shll
xor
outsb
ljmp
incb
inc
ss
test
pop
pop
inc
nop
jge
or
or
xchg
in
pusha
and
and
or
faddl
scas
xchg
and
int
push
add
inc
jp
fs
pop
sub
pusha
fwait
xor
or
sbb
mov
inc
push
jnp
aaa
and
insl
mov
rolb
adc
dec
jmp
test
pop
bound
mov
xor
adc
adc
add
dec
mov
mov
dec
data16
sub
shlb
rcrb
fidivl
add
lahf
or
mov
loope
loop
enter
pop
dec
pop
jp
cli
lret
scas
xor
push
repnz
mov
ret
xchg
xor
add
filds
pop
push
lock
out
add
or
test
rcrb
fidivs
adc
les
popa
mov
or
adc
lods
push
sbb
insb
add
rorl
mov
ljmp
add
jnp
addb
xor
adc
subb
adc
mov
out
test
push
add
loope
aad
outsb
in
adc
data16
xor
push
shll
fisubl
add
or
adc
xorl
les
incl
ss
add
and
or
and
mov
xchg
add
mov
sub
iret
xchg
mov
mov
mov
push
pusha
jge
adc
adc
lock
xchg
in
xlat
mov
mov
jp
clc
sbb
mov
mov
and
pop
add
jle
mov
add
or
je
or
mov
jle
or
imul
add
cmc
inc
rolb
pop
and
leave
mov
and
add
in
mov
mov
inc
and
icebp
lock
pusha
sbb
push
mov
and
xchg
xchg
mov
inc
in
add
fbld
testl
inc
add
inc
dec
xchg
jp
clc
mov
cvtps2pd
out
icebp
stos
add
jae
sub
out
or
xchg
adc
cli
decl
sbbb
and
repnz
jg
lcall
xor
xorb
icebp
or
xchg
jecxz
mov
mov
push
mov
rcl
dec
rolb
xor
nop
lock
orl
adc
adc
push
sbb
jle
xchg
cmp
dec
ret
push
sbb
push
imul
adc
adc
sub
sbb
add
mov
out
ds
jle
cmc
testb
lahf
in
lea
icebp
mov
mov
clc
lea
frstor
ja
jnp
rorb
ror
out
sarl
xchg
out
into
mov
pusha
dec
enter
jg
xchg
push
rorl
or
or
dec
pop
hlt
add
roll
inc
and
adc
dec
dec
or
add
mov
imul
pushf
ret
or
pop
sbb
movsb
push
sbb
testb
xor
mov
jg
roll
dec
movb
movsl
lea
out
add
pop
pop
test
xor
push
lea
sbb
sub
std
mov
push
icebp
mov
ret
ss
add
or
xchg
andb
jns
test
xor
mov
pop
icebp
pop
sbb
dec
jb
test
xor
cld
pop
push
push
inc
sbb
dec
xor
stos
test
adc
test
or
popa
fdivr
pop
scas
ret
in
dec
aaa
add
cmp
add
jne
nop
inc
add
mov
popa
push
xor
out
xchg
in
pop
out
in
inc
mov
sbb
push
loope
inc
out
or
mov
pop
mov
outsb
jae
sbb
orb
fs
cli
inc
pusha
jge
int3
loop
sub
add
add
sub
add
mov
mov
fwait
add
add
out
pop
push
add
adc
and
adcb
jp
and
jl
cmp
outsl
add
leave
ss
jnp
icebp
and
pop
incl
or
push
pop
xchg
rorb
xor
xor
add
xor
sub
pop
mov
sbb
add
inc
mul
sahf
inc
add
jnp
aaa
pop
xchg
jnp
outsb
mov
jb
add
shlb
clc
outsl
pop
mov
sbb
fadd
js
inc
add
jp
xor
mov
push
dec
xor
outsl
outsl
mov
jp
adc
jl
in
orl
add
adc
cmovbe
pop
pop
adc
mov
rolb
cs
scas
mov
pop
mov
scas
mov
xchg
or
push
and
sbb
add
test
fsubrl
ljmp
jl
mov
adcb
jl
add
adc
mov
sbb
xchg
sbb
add
pop
rcrb
enter
jae
mov
jnp
xorl
add
xchg
fidivrs
packssdw
outsb
jbe
xlat
or
inc
addb
nop
enter
clc
push
add
orl
ss
xchg
add
test
int3
fidivrl
sbb
pop
xchg
inc
add
pop
mov
inc
and
movsb
sbb
sub
into
mov
and
addr16
stos
or
dec
clc
loopne,pn
rorb
imul
xor
pop
test
fnsave
xchg
ljmp
aad
add
lret
or
push
out
lret
icebp
adc
movsb
test
push
and
push
mov
dec
shrb
adc
and
popf
mov
cli
add
mov
or
or
test
adc
push
test
aaa
mov
lock
scas
mov
mov
clc
pop
test
pop
jb
xchg
pusha
nop
mov
push
add
test
cmpb
shlb
or
pushf
or
cld
into
in
and
lock
add
mov
push
inc
rcrl
fiaddl
add
fmuls
add
lock
xchg
adc
jae
dec
stos
sbb
dec
add
sbb
loopne
pusha
sbb
and
cld
push
sbb
stos
subb
int
cld
data16
int
add
inc
xchg
aaa
movsl
sbb
add
add
mov
filds
add
fsubs
mov
mov
inc
add
add
inc
add
add
adc
rolb
mov
dec
or
insb
fisubrl
sub
mull
mov
add
add
gs
adc
add
sub
ljmp
test
rclb
inc
rclb
and
nop
rcr
inc
jp
fwait
or
out
fimuls
or
loopne
and
mov
icebp
int
loopne
pop
and
out
mov
xorl
rcl
andb
lcall
cmp
push
and
bound
and
pusha
add
cmp
add
or
shl
lahf
push
int3
push
xchg
nop
call
jl
outsb
push
jl
data16
hlt
jb
sub
adc
sbb
data16
adc
test
sub
or
pop
cmp
clc
push
negb
sub
popa
sub
sahf
pusha
and
or
push
out
data16
cmp
adc
and
clc
fisubl
xor
loop
jo
rcrb
mov
mov
dec
es
movsb
adc
nop
add
mov
loopne
xorb
jae
shl
repz
loop
push
loop
jnp
je
mov
push
add
lds
or
mov
mov
dec
push
push
push
pop
out
jp
lea
adc
jp
mov
and
movsb
inc
dec
push
mov
or
decl
insb
shrb
jmp
lds
cmp
pop
adc
push
push
ret
pop
test
addb
inc
sti
push
lcall
dec
jmp
dec
jno
es
and
or
dec
test
ss
mov
rcrb
add
push
and
ljmp
loop
xor
mov
push
add
push
sbb
scas
mov
mov
outsl
xor
sahf
lods
xor
test
cmp
clc
popf
test
xor
idiv
push
jecxz,pn
jne
pushaw
inc
add
es
icebp
loopne
lock
fwait
mov
xchg
scas
mov
call
adc
int3
add
mov
jnp
jle
add
mov
in
jg
inc
and
fisttpl
sub
test
mov
std
mov
cmp
xchg
mov
mov
lret
mov
or
pushl
ljmp
sub
or
loop
jg
clc
aaa
or
outsb
in
outsl
mov
mov
inc
mov
out
inc
loop
pop
lock
pop
lods
pusha
push
testb
test
sub
jecxz
jg
fstpt
daa
lods
pusha
pop
mov
inc
push
mov
arpl
mov
mov
sar
aaa
add
lock
std
ret
inc
lea
and
inc
cmp
xor
test
or
push
pop
sub
cmp
pop
add
in
mov
adc
das
inc
pop
cli
test
hlt
dec
bound
add
pop
add
cli
mov
add
test
adc
movsl
sub
pop
fs
xor
insl
adcb
jo
test
push
hlt
mov
ja
pop
push
rolb
jl
ss
push
mov
push
mov
add
pop
data16
mov
je
fs
mov
out
imul
mov
fcomip
sub
xor
dec
pop
jb
or
inc
push
or
cmp
movsl
adc
movsl
mov
sub
inc
cld
inc
or
or
pusha
pop
lods
stos
outsl
pop
ljmp
mov
or
mov
push
adc
xchg
cmc
call
or
or
dec
cwtl
rolb
sbb
data16
jp
or
mov
adc
push
jp
or
push
adc
and
and
das
sar
and
ret
in
mov
sarb
push
ds
ss
cld
and
push
and
dec
inc
adc
inc
bound
bound
jl
cmp
or
push
js
test
inc
add
inc
add
adc
fimull
repnz
cltd
in
lea
sbb
jo
xor
push
mov
add
push
pop
fs
adc
lock
call
push
pop
ljmpw
es
orb
pop
inc
push
test
mov
js
jb
add
pusha
inc
xor
pop
xchg
add
test
test
aad
vcomiss
and
addr16
loop
and
pop
pop
mov
ja
outsb
insb
cmp
adc
sub
xchg
movsb
inc
xchg
test
push
sbb
rclb
pop
push
mov
fmull
fistpll
test
pop
xchg
pop
repnz
cmp
mov
cmovle
xor
iret
push
repz
push
out
and
adc
ss
call
xchg
push
mov
push
xchg
jbe
pop
pop
icebp
frstor
or
or
jg
fistpl
mov
mov
and
addl
or
jl
ljmp
dec
test
sbbl
sbb
or
pop
test
fucom
cmp
or
outsl
fbstp
scas
fisubrs
popl
addb
add
nop
push
pop
and
pop
jle
in
aas
out
mov
mov
out
nop
adc
repz
hlt
add
cmpl
add
mov
test
insb
test
imulb
mov
adc
and
cmp
or
pusha
or
or
sbb
fcmovnu
push
push
or
fsubp
decl
or
in
push
or
cmpsl
int3
or
in
inc
push
and
inc
add
adc
cmc
fs
xchg
push
xor
pop
add
test
scas
pop
fdivrp
push
fcmovne
les
and
int3
rcrb
push
cmp
test
adc
jecxz
jbe
and
lret
adc
aaa
push
jp
call
push
fs
stos
test
lea
pop
or
inc
dec
xor
add
loope
out
movsb
shrb
decl
movups
aad
data16
daa
pop
jg
and
sbb
mov
push
andb
aas
nop
bound
dec
sbbl
fwait
inc
inc
add
dec
mov
add
sbb
mov
cli
nop
in
enter
cli
lcall
movntq
add
aaa
adc
lret
push
cmp
xor
scas
push
subl
lods
sub
sahf
inc
pop
je
std
add
cmp
icebp
add
jle
mov
xor
xchg
add
mov
icebp
mov
push
push
mov
add
jge
fbld
push
and
rclb
cwtl
push
xorl
or
cli
mov
add
push
ds
ss
adc
add
xchg
jecxz
lock
loopne
or
out
pusha
xor
nop
xchg
es
push
clc
cmp
cmp
inc
push
mov
add
xor
xor
push
xor
xor
push
push
and
push
push
inc
dec
adc
leave
sahf
add
cli
fists
inc
cmp
out
out
and
or
jle
test
cs
pop
nop
test
fistpll
pusha
adc
push
cwtl
and
lcall
lock
pop
mov
test
icebp
jnp
add
jg
inc
mov
rorw
dec
jb
or
jb
push
pop
cmp
ret
add
lea
loope
mov
pop
cmc
sub
test
jge
and
jnp
ret
in
jg
or
rolb
icebp
ss
shll
and
xor
loop
dec
ss
mov
pop
push
decl
push
add
out
add
shl
lds
arpl
or
mov
je
and
add
jmp
jp
das
ss
add
jp
adc
jp
sub
ja
mov
and
ds
and
cli
mov
out
and
out
or
sub
pop
andl
sbb
dec
jle
sar
adc
push
add
push
pop
and
adc
adc
inc
out
clc
fcomip
push
lret
movl
push
sbb
push
shll
jno
scas
mov
sbb
test
push
add
xchg
dec
lock
in
push
jnp
mov
mov
add
mov
adc
push
or
xor
pop
cmpsl
rolb
add
orb
sbb
add
mov
insl
adc
sub
fadds
lock
xchg
xor
cmp
imulb
cmp
rorb
add
xor
jmp
jnp
or
fwait
icebp
jno
mov
mov
or
xchg
push
cwtl
pusha
lcall
push
subb
pop
bound
sbb
jp
stc
add
test
hlt
out
sub
push
add
sub
pop
mov
subb
out
imul
adc
jbe
pushf
add
mov
adc
mov
dec
ljmp
xlat
repnz
adc
cmp
or
pusha
mov
and
pop
or
sub
add
add
xorl
aaa
adcb
sbb
push
cwtl
pusha
cmp
stos
pusha
sub
and
push
mov
jno
cmc
push
cld
fst
mov
pusha
out
push
sub
push
push
loopne
mov
pop
or
pop
or
mov
popa
loop
add
adc
or
pop
mov
cmp
fcoms
push
insb
loop
push
or
sbb
pop
inc
fs
das
add
cmpsb
imul
or
jnp
xchg
in
add
data16
push
push
sahf
or
dec
pop
jl
mov
inc
pop
in
xor
sbb
jp
lcall
sbb
dec
jp
sbb
int
jl
stos
add
push
adc
inc
ljmp
add
mov
int3
orb
xorb
add
lcall
js
cmp
sub
mov
dec
push
push
fs
pop
lock
rcrb
add
testb
sbbb
mov
inc
inc
mov
sbbb
inc
or
aaa
push
or
sub
jmp
or
int3
rorb
adcl
pop
cld
push
add
add
add
testb
sub
cmp
and
xor
push
and
push
arpl
fucomi
inc
incb
mov
clc
subb
inc
xor
addb
fs
stos
xchg
cmpsl
ljmpw
adc
adc
dec
jl
mov
add
js
pop
subb
test
iret
jp
pop
adc
push
and
out
subb
jp
addb
push
hlt
dec
or
into
mov
xor
jnp
dec
and
movb
jl
subb
andb
orb
pushl
sub
or
push
add
add
shlb
sub
sub
fcomip
sbb
addb
inc
dec
xchg
push
mov
cld
orb
inc
and
sarb
and
sti
adc
mov
lret
negl
and
add
mov
and
inc
test
into
cmp
mov
pushf
xor
or
pop
inc
cmp
clc
lea
cmpl
adc
lds
mov
ret
add
or
cmp
inc
xchg
or
inc
push
fwait
cmc
out
movups
into
cmpsb
add
fcmovbe
nop
lods
sub
add
test
pop
dec
or
mov
enter
jg
push
faddl
mov
cmp
xchg
or
sbb
add
xor
push
lcall
pusha
add
jb
mov
sbb
addb
xorb
add
dec
or
andb
iret
aam
push
lcall
icebp
insb
jnp
mov
lock
cmp
hlt
inc
inc
inc
pop
test
mov
add
or
shlb
or
dec
pop
roll
shl
das
clc
push
addl
mov
sub
or
fisubl
push
or
cmp
das
mov
bound
rolb
pop
mov
movsl
mov
mov
test
mov
or
and
xchg
or
or
mov
rcrb
fimull
movsb
dec
add
sub
cmpsb
mov
xor
mov
fisttps
or
mov
sqrtps
push
popa
sub
xlat
jg
add
push
mov
cld
scas
scas
xorb
sub
pop
loope
cmp
pop
jbe
add
dec
xor
jne
rolb
or
mov
and
xor
fucom
sub
and
sub
pop
adc
xchg
mov
add
rolb
jg
and
test
in
cwtl
pop
mov
push
rolb
mov
cmpsl
inc
add
loop
vzeroupper
mov
js
mul
and
addb
inc
xchg
pop
push
pop
sbb
or
push
test
xchg
mov
out
and
push
xor
push
adc
jo
sub
jp
bound
sbb
and
xor
repz
incb
ss
or
cmp
enter
pop
repnz
shlb
add
or
mov
and
or
xchg
std
out
and
mov
mov
scas
lds
sub
or
cli
lods
inc
jl
jnp
and
or
jl
js
idiv
fwait
sub
cmp
es
inc
push
dec
xor
hlt
jl
add
loopne
pop
cli
and
push
pusha
sub
dec
adc
sub
jl
sub
lock
push
fprem
rorb
inc
mov
jp
lds
stos
push
sub
push
mov
in
pop
push
addb
inc
sbb
xor
sbb
pop
lcall
aaa
or
fistl
lock
sub
pushf
mov
adc
in
xor
add
icebp
xchg
pop
add
outsl
dec
sub
int3
adc
add
pop
add
or
mov
fisttpl
int3
pusha
addb
mov
mov
pop
mov
mov
sub
imul
or
jmp
leave
jae
push
cmp
or
test
mov
mov
out
mov
sub
cmp
cmpb
ficoms
push
mov
dec
icebp
lret
sbb
jecxz
jmp
jae
jle
add
xor
pop
push
out
push
dec
cld
clc
insl
roll
fs
push
add
push
orb
lock
mov
test
lea
xor
loop
mov
sbb
mov
dec
mov
add
ret
inc
nop
adc
add
aaa
mov
add
mov
js
inc
lea
pop
or
mov
in
aaa
mov
or
or
aaa
andl
add
add
and
pop
shl
outsl
adc
add
add
scas
mov
push
mov
xor
ss
js
divb
sub
add
sub
adc
or
push
fiadds
or
and
jbe
popa
pop
scas
xchg
insb
xchg
hlt
dec
xor
repnz
leave
nop
dec
jmp
lock
leave
bound
mov
sbb
std
pushl
push
pusha
push
test
loope
add
push
xchg
cli
aaa
inc
fidivrl
lcall
std
mov
dec
cld
mov
ret
xchg
mov
sub
test
xlat
incl
lock
dec
push
add
aas
jbe
test
inc
and
jp
pop
pop
inc
push
mov
jo
es
inc
cvttps2pi
xor
out
enter
lock
dec
jo
pop
data16
pusha
add
adc
out
ss
in
and
mov
test
xor
hlt
lcall
sub
add
inc
and
icebp
xor
inc
dec
inc
jl
jae
inc
push
and
sbb
and
add
sbb
into
pop
and
es
out
sar
flds
xor
out
xchg
std
jmp
int3
push
push
and
jbe
test
in
cli
sub
add
add
outsb
clc
add
test
sbb
lea
mov
mov
test
add
sub
add
mov
and
movl
push
and
jg
jmp
xchg
mov
xchg
or
xchg
dec
or
or
add
or
aas
add
scas
sub
add
inc
pusha
jno
or
push
jecxz
push
decb
pop
lea
jbe
add
out
add
cmp
add
push
inc
jge
out
loop
add
scas
and
xor
push
push
mov
and
add
or
pshufw
adc
loop
sbb
push
mov
add
xchg
adc
mov
add
lock
rcrb
inc
mov
mov
push
inc
or
lret
mov
mov
cmpl
jbe
adc
test
test
push
or
ja
cmpb
mov
rcrb
xor
jge
mov
pop
popa
outsl
or
or
xor
iret
mov
jge
or
push
pop
or
stos
loopne
push
sarb
mov
push
lock
cwtl
loopne
prefetcht1
xor
mov
out
sahf
fimuls
mov
pminsw
daa
push
push
jnp
lds
push
mov
inc
cld
inc
push
add
sbbb
push
push
inc
clc
mov
test
add
andb
add
adc
add
mov
fistl
out
outsl
mov
adc
jo
ret
insb
jp
xor
dec
mov
mov
push
pop
jo
stos
inc
ds
mov
inc
push
lock
mov
pop
ljmp
out
or
js
fs
pusha
add
fwait
or
xchg
inc
inc
adc
pop
push
push
add
add
jecxz
sub
icebp
sub
sbb
add
push
xlat
pop
jp
inc
das
cli
jmp
jno
jo
out
roll
push
fs
push
mov
aas
xor
adc
mov
rcr
aad
rcrb
push
xorl
sub
dec
and
sbb
in
loopne
mov
aad
das
and
add
xor
sbb
call
cld
lds
andl
sub
or
fcomip
in
in
dec
and
push
test
pop
cmpb
ret
jbe
push
out
add
lret
add
popa
nop
dec
sbb
cmp
mov
push
xchg
or
ljmp
dec
movsb
or
dec
push
xchg
add
sti
call
inc
rcrl
icebp
inc
std
lock
or
mov
add
add
loopne
call
sbb
xor
push
mov
ljmp
and
insl
push
loopne
pop
adc
and
pusha
mov
sbb
and
enter
icebp
out
ss
in
mov
xchg
xor
lcall
and
jo
sbb
and
insl
or
add
cli
stos
add
push
or
ljmp
cmp
int3
and
das
push
pusha
in
sbb
or
rcll
enter
mov
xchg
ret
push
fldt
or
or
or
mov
mov
loop
or
or
or
jp
loop
adc
xchg
shrl
data16
aas
add
stos
mov
lds
pushl
cmp
mov
int
mov
movsl
or
xor
int
nop
sub
nop
or
aaa
lret
clc
xchg
push
and
push
fs
dec
loop
adc
clc
pop
dec
inc
add
xor
add
out
cli
push
push
mov
mov
sbb
xchg
mov
call
sbb
add
ret
jp
adc
add
cmp
mov
add
dec
push
lcall
call
push
pop
jb
stc
or
fs
or
pop
pop
adc
xlat
aad
adc
aam
mov
pusha
stos
and
ds
nop
clc
and
pop
push
xor
rcrb
jo
mov
inc
xchg
xor
test
rcrb
scas
ljmp
int
data16
adcb
add
test
outsb
pop
dec
js
test
sub
push
ret
dec
inc
push
and
test
imul
xchg
loop
push
movsb
xor
pop
push
add
mov
insb
mov
jp
adc
outsl
outsl
cli
add
mov
xor
scas
adc
mov
jle
in
pop
mov
xchg
gs
mov
adc
inc
fcoms
add
and
addb
xchg
icebp
jb
stos
xchg
pop
xor
mov
add
pop
jp
mov
sub
jb
jp
push
idivl
add
popaw
push
jb
sbb
inc
mov
xchg
or
fbstp
add
enter
mov
call
mov
xchg
adc
add
hlt
add
or
or
dec
add
xor
mov
enter
jl
movsb
ljmp
incb
mov
push
pusha
push
adcb
jg
pop
and
subb
pop
outsl
sbb
push
fcoml
ja
cltd
xlat
test
dec
in
outsl
jg
lock
enter
aam
dec
pop
add
xchg
call
out
add
mov
es
dec
clc
insb
cld
or
sbb
jge
dec
aad
sbb
pusha
mulb
in
outsl
fbstp
jns
mov
jb
jecxz
pop
xchg
and
jb
push
aaa
pop
jp
and
inc
out
sub
pop
int3
test
cmp
xor
add
in
addr16
ja
xlat
lock
dec
or
pop
mov
xchg
int3
ljmp
mov
imul
and
icebp
mov
rcr
ficoms
jmp
pushf
xor
mov
mov
jmp
clc
dec
ret
push
xchg
fiaddl
adc
xchg
mov
inc
sbb
loopne
scas
lods
ja
sbbb
repz
into
mov
repnz
add
mov
shll
cmc
xchg
cld
push
adc
call
pop
inc
adcl
adc
adc
pop
daa
mov
inc
jg
mov
pusha
outsb
out
jae
pusha
out
xorb
cmp
call
in
mov
sub
fildl
subb
mov
mov
pop
or
addb
or
or
inc
loopne
addl
add
dec
mov
add
push
or
je
mov
and
pop
mov
call
inc
push
mov
repnz
fnsave
or
mov
icebp
inc
adc
jmp
ret
repnz
xor
cmp
ret
or
fbld
loopne
in
enter
jnp
ljmp
jnp
jnp
das
cli
mov
add
negb
add
ljmp
call
cmpsl
fbld
mov
out
mov
outsb
xchg
cmpsb
fwait
and
pushl
inc
movsb
inc
jo
cmp
andb
mov
ficomps
outsb
sub
sbb
sub
sub
dec
lret
and
sbb
rolb
jecxz
dec
je
mov
andb
xor
insb
jae
inc
ljmp
or
incb
adc
sbb
es
cmpsb
pusha
or
cmp
ljmp
add
jg
jnp
inc
and
ja
add
int3
aas
jle
mov
icebp
fcmovne
mov
clc
daa
outsl
sbb
fiaddl
imul
dec
addb
scas
sub
fs
mov
mov
enter
or
add
pop
shl
cmp
add
loop
mov
adc
scas
add
cmpsb
aaa
push
aad
and
rcrb
push
add
mov
aam
inc
aad
push
repz
sub
lea
addb
xchg
repz
fidivs
stos
or
ds
cmp
inc
add
pop
pop
xchg
andb
add
add
stos
pop
dec
mov
or
aas
or
adc
punpcklwd
sub
mov
or
shrb
out
cs
mov
or
ljmp
aad
pop
ficoms
mov
push
in
add
sub
xchg
ret
cmp
cli
pop
and
addl
sbb
xchg
jle
sti
sbb
add
adc
add
popl
jle
mov
push
out
cmp
jp
dec
mov
sbb
sub
and
incl
inc
push
out
sub
dec
pusha
push
sarl
add
and
and
sbb
cld
loopne
and
les
pusha
add
mov
sbb
mov
test
hlt
inc
pusha
aad
and
pop
and
mov
jg
and
xor
inc
add
or
jecxz
push
push
inc
ret
jbe
or
idiv
pop
cmp
data16
out
test
pop
out
test
push
pop
in
sub
cli
lea
add
popa
ffreep
test
je
dec
into
inc
add
rol
mov
jb
jo
loopne
jg
mov
jae
inc
mov
sub
pop
mov
jbe
clc
mov
mov
imul
mov
sub
test
or
sbb
and
dec
shl
loopne
adc
js
inc
add
test
andl
add
push
faddl
ficompl
push
and
add
or
inc
mov
inc
jg
xor
sbb
sub
rcll
xchg
cmc
inc
add
fadds
idiv
jg
or
add
mov
out
inc
add
aas
loop
addb
push
mov
sbb
and
pusha
add
dec
cld
or
add
cltd
sbb
aam
mov
and
fwait
add
xchg
push
xchg
xor
sbb
sahf
rcrb
and
adc
sub
xchg
mov
adc
sbb
jle
sbbl
push
loopne
fistps
fisttps
push
jg
mov
add
sub
and
pop
rcrb
push
fsubrs
lods
sbb
pop
sarb
mov
inc
inc
mull
sbb
pop
mov
or
cld
shlb
jo
lret
add
or
xchg
xchg
test
mov
repnz
mov
shrl
pusha
or
sub
inc
cld
hlt
rolb
pop
pop
test
dec
and
and
es
ret
call
or
in
test
mov
inc
mov
cs
adc
fidivrl
in
xchg
lcall
pop
sbb
cs
mov
inc
cli
in
jb
and
fildl
xlat
in
shlb
sub
loop
sbb
cmp
jnp
fs
loopne
dec
jp
push
inc
and
cli
pop
icebp
aas
orb
xchg
pop
adcl
sarb
and
xchg
aam
mov
xor
jmp
or
add
mov
push
add
add
sub
pop
clc
jmp
and
pop
jp
adcb
and
mov
push
and
cli
push
adc
mov
mov
jmp
andb
mov
outsl
mov
add
push
lods
or
push
or
inc
push
or
xor
sbb
sub
or
inc
push
add
or
test
pusha
add
xchg
sub
push
or
jnp
test
and
testl
jns
mov
push
jnp
call
cmpsb
push
push
jp
js
roll
adc
popa
and
andl
shl
andl
pushf
leave
lret
push
push
push
xchg
pop
add
pop
jae
test
lea
jp
push
or
pop
adc
push
or
jnp
and
mov
cs
adc
xor
inc
inc
xchg
pushf
xor
in
rcrb
incb
adc
mov
add
data16
mov
ja
push
adc
lret
dec
add
pop
rorb
xchg
jp
das
push
test
or
sub
jg
or
adc
nop
and
add
fs
inc
lea
pop
dec
and
sbb
into
and
mov
mov
out
mov
icebp
jo
loope
pusha
add
in
lret
outsb
pop
clc
cmc
push
mov
or
sbb
inc
daa
lock
lock
or
in
or
addl
jns
xor
sbb
mov
ret
xor
test
xor
stos
and
sbb
push
push
subb
or
push
push
lock
mov
push
or
push
dec
sbb
or
pop
out
inc
loopne
ret
pop
inc
inc
xor
or
rcll
cld
in
jb
loope
pop
in
inc
mov
data16
push
or
cltd
data16
add
inc
es
adc
adc
cli
jmp
jo
test
adc
xchg
test
fildl
add
into
sbb
decl
leave
mov
dec
in
mov
mov
push
stc
dec
inc
or
jle
pop
mov
in
lea
loopne
scas
addb
lcall
push
rolb
cmp
mov
or
or
ja
je
pop
inc
sub
adc
pop
lds
dec
cmp
xchg
add
daa
addb
imul
stc
adc
push
js
adc
ds
sbb
sti
incl
inc
mov
and
sub
pop
sahf
push
std
jg
xor
addb
jne
adcl
dec
push
xchg
loope
mov
sub
fisttps
mov
inc
jp
adc
or
repnz
push
sub
dec
and
hlt
lock
xor
push
andb
add
fistps
aad
mov
pop
in
mov
popa
dec
mov
or
adc
push
pop
cmp
and
pop
push
sub
xor
mov
sbb
loop
push
rorl
fwait
inc
ja
lret
das
xchg
stos
add
mov
sbb
or
xor
add
int
add
add
insb
add
stos
jo
mov
mov
cmp
mov
dec
mov
or
out
out
andb
mov
push
xor
inc
sti
out
cs
push
sbbl
xchg
jl
loope
and
push
out
inc
cwtl
aas
nop
into
clc
inc
cld
ljmp
shl
jns
fs
jo
addr16
add
cmpsb
lock
mov
sub
stos
adc
stos
pop
or
mov
and
ss
gs
inc
test
pop
rcll
clc
jbe
push
cmpsb
inc
mov
test
xor
mov
adc
shl
adcb
xor
pop
lahf
and
dec
test
push
sbb
addr16
sub
and
pop
or
mov
ljmp
test
in
nop
jae
pusha
ljmp
xor
add
add
outsl
pop
dec
mov
pop
pop
xchg
les
pop
sbb
or
nop
add
ds
sbb
iret
in
pop
add
pop
jle
sub
fcoml
or
adc
adcb
fisubl
fimull
js
dec
adc
adc
mov
jmp
aad
sbb
adc
clc
das
dec
movsw
sarl
loope
in
mov
pop
or
cmp
sbb
lret
push
pop
lock
incl
loop
add
xchg
int3
js
bound
dec
jp
add
fidivl
push
insl
add
mov
cmp
and
push
add
and
or
inc
sbbb
and
roll
aaa
mov
or
xchg
mov
add
add
mov
incl
sbb
pop
and
pop
data16
add
repnz
jp
inc
mov
add
rorl
arpl
clc
add
test
outsb
enter
popa
and
xchg
mov
cmp
push
int
icebp
sub
ss
inc
adc
and
or
dec
std
fcomip
and
add
add
and
fisttpl
fnstsw
push
aam
in
pop
add
and
and
std
jmp
pop
arpl
scas
jno
nop
xchg
imul
call
movb
in
dec
fidivl
clc
pop
test
cwtl
movsb
or
inc
shl
pop
adcb
fs
adc
ret
mov
test
dec
jae
jae
inc
int3
or
pop
cmp
xchg
mov
xchg
loopne
in
or
icebp
test
mov
push
cmp
dec
out
bound
lods
ss
mov
aaa
int3
jp
dec
xor
jnp
pop
inc
push
sub
scas
add
movsb
or
insb
outsb
jp
dec
scas
int
or
jmp
xchg
add
and
push
and
push
bound
jp
pop
push
cld
add
push
into
inc
pop
or
add
add
int
mov
push
lock
addr16
jp
cwtl
jp
inc
aad
mov
mov
out
sbbb
scas
add
add
dec
sub
test
or
inc
test
adc
shlb
aas
mov
testb
add
mov
test
xchg
adc
adc
mov
subb
add
dec
mov
add
subb
inc
scas
clc
and
test
mov
adc
or
xor
inc
push
pop
mov
testb
push
or
addl
adc
push
in
xor
push
push
les
sub
or
jg
rcrb
mov
les
inc
bound
add
addb
pop
jle
test
enter
adcl
jp
and
push
add
jmp
and
test
inc
mov
pop
inc
xor
push
or
push
fsubr
xchg
add
call
test
inc
add
add
popa
sbb
adc
dec
cld
fwait
pusha
movsb
adc
and
mov
test
ss
sahf
pop
test
clc
dec
inc
add
hlt
push
jl
add
push
loope
push
push
ljmp
sahf
add
push
rcrl
add
fmuls
xlat
dec
mov
or
jl
shrb
xor
outsl
ss
aaa
mov
or
jle
dec
in
or
cld
or
stos
or
xor
mov
push
inc
sti
aaa
loop
inc
xor
add
popl
jb
inc
clc
mov
jmp
fstl
jb
sbb
and
dec
out
add
adc
jp
lret
sarb
mov
fidivrl
ja
sub
pushf
pop
out
out
or
add
adc
adc
rorb
inc
xlat
ja
orb
call
add
add
mov
rcrb
push
rclb
or
dec
inc
rcr
sub
sbb
movsl
pop
andb
fsubs
subl
inc
pop
dec
sahf
sub
sar
out
add
shlb
aaa
add
or
push
inc
test
push
pop
mov
pop
adc
jp
rcll
or
sub
rolb
ja
sub
inc
stos
sub
or
pop
add
or
js
sub
inc
mov
in
push
jg
subl
test
mov
adc
int
rclb
mov
test
sub
and
push
mov
inc
sbb
dec
cmpl
subb
ja
or
sub
xor
xor
adcl
inc
ret
ljmp
push
dec
mov
faddl
jecxz
or
fcom
sub
push
loopne
icebp
pop
and
adc
and
pop
fmuls
or
inc
pop
inc
jne
stos
sub
mov
lcall
jo
mov
pusha
xchg
inc
pop
mov
add
icebp
cmp
orb
icebp
jbe
sub
xchg
pop
push
ret
test
xor
dec
and
data16
test
sbb
mov
loope
dec
mov
mov
or
out
inc
adc
pusha
cwtl
add
test
and
movsb
scas
roll
add
clc
add
add
sbb
add
sar
ret
popa
mov
adc
push
in
in
adc
out
xor
inc
pusha
bound
add
ljmp
roll
add
insb
ja
push
ret
adc
adc
lock
clc
xchg
leave
sbb
push
pop
or
mov
add
test
and
push
mov
jp
pop
and
mov
mov
mov
mov
scas
push
pusha
cmp
loopne
cmpb
xor
xor
mov
movsl
fidivrl
sbb
nop
dec
or
orb
loope
mov
adc
adc
dec
lcall
push
push
adc
add
in
enter
call
cmp
sub
add
ljmp
xor
push
mov
mov
inc
sbbl
loop
and
inc
stos
addb
xor
fwait
cltd
out
fs
pop
pop
mov
mov
sbb
jecxz
pushf
xchg
push
aaa
inc
test
xchg
adc
lcall
mov
pop
icebp
mov
sbb
and
stos
cmc
in
xor
lea
adc
sub
mov
or
pop
decl
fisttpll
inc
add
pop
mov
loope
pop
add
clc
test
sub
push
inc
push
mov
mov
jo
or
add
or
nop
pop
cwtl
data16
data16
insb
pushl
pop
xchg
or
push
rorb
in
cmpb
and
pop
and
push
mov
push
add
shll
pushf
faddl
decl
roll
leave
out
daa
inc
das
add
decb
jp
dec
fbstp
adc
adc
jnp
mov
mov
aad
inc
inc
jp
inc
out
jp
pop
fsubrs
xchg
xor
icebp
sbb
xchg
loope
adc
cmpsb
push
mov
mov
out
repnz
push
push
test
lds
and
cmc
push
jg
xor
add
and
pop
aam
stos
dec
push
xor
pop
pop
ret
pusha
cmp
dec
xor
bound
cs
int
pop
push
dec
aad
jecxz
adc
pop
sbb
sub
inc
lret
data16
push
cwtl
mov
dec
mov
sbb
jnp
es
jl
clc
pop
pop
mov
mov
mov
xchg
dec
dec
xor
add
scas
mov
test
iret
out
or
enter
mov
loope
xchg
or
int
adc
test
push
push
pop
repnz
mov
cmp
jo
shrb
pop
sbb
push
xchg
push
sub
test
xchg
test
add
scas
adc
mov
clc
adc
daa
mov
aaa
lds
or
sbb
test
pop
or
jp
adc
dec
xor
cld
add
mov
int
inc
sub
or
imull
or
or
sti
dec
xor
pop
add
adc
lea
cmp
push
dec
dec
xor
jge
test
iret
je
aas
push
xchg
push
pop
push
ss
stos
mov
pop
test
pop
adc
or
or
add
int
and
cmpsb
fcoml
dec
testb
dec
aad
cld
or
xchg
std
add
lds
xor
aam
xchg
mov
push
sbb
jnp
xchg
or
or
push
or
outsb
xchg
xor
dec
dec
divps
inc
insb
push
into
scas
add
mov
inc
jl
out
push
test
or
sahf
hlt
xor
jg
fwait
data16
jl
in
xor
add
mov
clc
inc
in
xor
fisubrs
push
push
mov
mov
fidivl
jg
cmp
add
pusha
inc
cmp
or
pop
out
rcl
mov
aaa
pop
sbb
andl
fsubr
add
les
xchg
mov
sub
xor
xchg
lcall
add
pop
cmp
hlt
outsb
push
sbb
fwait
lret
in
loop
incb
jae
sub
jnp
shrl
jae
mov
push
add
sub
cld
inc
hlt
or
inc
fwait
cltd
adc
jo
jae
push
pop
jo
mov
sbb
push
jbe
cld
jb
dec
in
adc
rolb
imul
mov
mov
xor
cmc
and
sbb
and
sub
ljmp
fiaddl
push
cld
xor
inc
out
dec
cmp
or
pop
out
mov
sub
or
inc
or
lds
incb
loop
or
and
stos
add
add
test
xchg
cmp
enter
add
fbld
xchg
int3
sbbl
les
or
or
push
in
xchg
adc
xor
nop
test
fiaddl
loopne
fsub
push
dec
imul
lock
aaa
jl
pusha
mov
test
or
dec
flds
jb
add
adc
cli
lss
stos
mov
jb
lcall
push
and
nop
xor
inc
filds
bound
adc
sbbb
xor
mov
lods
add
xor
sti
inc
sbb
push
sbb
ss
adc
or
dec
lds
clc
addl
add
rcr
js
push
mov
into
sbb
cmpb
hlt
and
and
adc
adcl
pop
loop
fimuls
addb
mov
mov
push
push
ds
rcll
inc
add
xor
jo
mov
lret
andl
adc
mov
dec
add
rcrb
add
push
inc
test
jmp
push
dec
enter
mov
jb
call
sbb
fimull
adc
pxor
popa
lds
jp
test
xchg
mov
add
inc
sbb
fdivrs
xchg
xor
push
jnp
insb
add
xchg
testb
fdivr
sbb
lret
add
fidivl
js
mov
push
or
pop
sbb
es
stos
lock
jp
xor
ljmp
mov
or
or
push
adc
xsha1
cmpsb
lret
adc
cwtl
ret
jae
lock
rcrb
rclb
or
jno
ficoml
xor
lock
add
sub
add
xchg
xchg
or
bound
in
outsl
and
add
add
ds
pop
push
dec
lret
mov
pop
rcrb
prefetch
or
inc
add
je
rcll
repnz
adc
lgdtl
adc
repz
out
xchg
cmc
pusha
test
or
or
mov
ss
inc
loop
arpl
mov
adc
pop
push
fistps
cmp
es
ret
and
or
push
rcl
aam
ror
xchg
pop
and
cmp
dec
pushf
sarl
call
cld
jmp
cmp
and
cmp
bound
repnz
xor
push
movsb
inc
add
and
pop
stos
fisubrs
movb
cmp
ljmp
rolb
xor
int
jo
push
cmpsb
push
pop
and
aam
add
cmp
sar
ja
ret
cmp
les
aas
test
or
or
push
rol
inc
and
cmpsb
test
stos
add
repnz
out
test
outsl
stos
add
cmp
out
data16
insl
pop
sub
call
or
sar
or
cmp
inc
adc
push
cmp
neg
movsb
sbb
addr16
cmp
push
adc
dec
test
inc
movsb
add
insl
sbb
lret
outsl
rorb
and
sbb
icebp
and
sbb
add
xor
push
add
sti
cmpsb
inc
mov
cmp
dec
dec
jb
dec
push
mov
loopne
cli
mulb
xchg
rolb
repnz
jp
jl
mov
jo
arpl
add
sbb
push
testb
sbb
outsb
leave
push
and
mov
inc
ds
push
lea
add
lods
lahf
mov
jecxz
mov
sbb
mov
iret
or
add
dec
sbb
ret
imul
xor
or
andb
push
cmpsb
mov
or
add
add
ret
jb
sarb
into
add
xchg
push
lret
dec
cmpl
out
negb
dec
insb
sti
and
add
imul
add
add
push
iret
xchg
sahf
andb
sbb
jo
movsl
dec
ret
mov
cltd
inc
test
push
jo
loopne
orb
ret
pop
test
dec
dec
push
cmp
add
and
ss
cvttps2pi
out
jnp
pop
lret
cli
cmpsl
xchg
addl
jae
insb
fadds
cmp
sar
add
and
push
addb
add
adc
add
andb
test
xor
dec
and
inc
dec
dec
fisttps
fmulp
cmp
mov
sbb
pop
ror
push
sbb
xchg
lret
clc
sub
je
inc
and
mov
mov
add
mov
jp
subl
scas
ficomps
add
xchg
icebp
mov
add
loop
push
add
outsl
das
into
sub
adcb
push
or
ss
and
sub
or
pushl
adc
stos
or
icebp
out
stc
ret
add
pop
test
or
pop
add
adc
cmc
mov
call
dec
inc
addb
cmp
rolb
mov
mov
adc
cmp
mov
pop
std
adc
mov
adc
jl
sbbb
or
and
rolb
mov
ljmp
sbb
hlt
daa
orb
xor
inc
rolb
add
add
and
rolb
test
or
test
jbe
mov
pop
loopne
out
xor
mov
sbbb
test
push
jb
loop
fcmovnbe
cmp
adc
inc
xchg
fs
xchg
pushf
pusha
push
js
addl
and
rcrl
add
push
je
adc
loop
cmp
cmp
mov
pusha
mov
test
daa
insb
lret
daa
test
andl
cmpb
sub
mov
xorb
rolb
mov
pusha
or
hlt
fdivrs
push
push
mov
test
in
std
daa
insb
adc
and
add
push
push
shll
scas
ret
data16
mov
fdivl
xor
pop
loop
push
xorb
in
rolb
testb
mov
outsb
cmp
rorl
mov
call
out
jo
jo
hlt
inc
inc
fisubrl
movsb
jbe
orb
pop
ss
adcl
sbbl
inc
addl
gs
andl
shlb
and
sub
jg
mov
cld
cli
es
and
adc
hlt
dec
jg
jg
push
out
cli
roll
adc
jg
subl
add
lahf
add
sbb
pop
test
out
loopne
or
push
xor
or
mov
or
xor
clc
jge
addl
jno
test
or
jp
dec
js
mov
mov
push
shl
push
add
or
cmpb
push
in
pop
add
xchg
mov
push
rcl
decl
push
push
movsl
pavgb
sub
cmpb
data16
pushl
mov
cmp
xchg
adc
hlt
push
in
mov
loopne
out
mov
and
sub
adc
and
clc
incl
inc
addb
jnp
sub
mov
out
and
addl
adc
and
loope
out
popa
outsw
adc
and
loopne
jl
and
mov
repnz
adc
jp
mov
mov
hlt
dec
pop
and
push
push
call
clc
leave
or
in
cld
cwtl
in
push
push
fwait
mov
or
fwait
icebp
push
push
dec
push
test
or
xor
es
xor
pop
mulb
adc
clc
mov
fwait
cmp
mov
adc
jnp
and
mov
push
inc
or
jp
mov
pop
mov
and
push
inc
xchg
and
add
push
and
or
stos
dec
add
out
frstor
aam
inc
movsl
sub
adc
sbb
adcb
add
loopne
sub
faddl
inc
pop
or
mov
cwtl
inc
xchg
adcb
pop
add
pushf
push
and
outsb
push
dec
add
inc
adc
jge
fcompl
clc
add
add
movb
jno
loopne
cmc
movsb
push
lcall
and
and
fldcw
popa
iret
push
or
test
push
inc
or
xor
daa
testb
and
and
mov
add
test
rorb
adcl
and
sub
sbb
xchg
iret
int3
lcall
ljmp
fidivrs
decl
push
mov
shrb
xchg
pop
mov
push
test
mov
bsr
push
cld
test
pusha
push
int
mov
cmp
sbbl
movb
iret
jge
rclb
ljmp
xor
scas
inc
add
xchg
loopne
inc
into
mov
push
js
fdivrp
jmp
push
dec
test
xor
add
incb
cmp
jo
js
pushl
adc
add
lock
into
push
cmp
std
or
jnp
xor
jl
incb
js
out
xor
lock
add
outsb
inc
hlt
outsl
push
and
addb
loopne
mov
loope
jae
aam
lock
adc
add
pop
outsb
inc
stos
cs
dec
jl
add
xchg
lods
rol
lods
mov
orl
xchg
pop
repnz
icebp
mov
and
mov
dec
or
and
push
push
mov
cmp
mov
mov
or
cwtl
or
push
or
test
pop
loop
call
inc
add
inc
out
jne
add
mov
in
pop
add
inc
jp
add
add
rolb
or
jp
cmp
out
call
out
hlt
dec
fstps
out
clc
pop
add
out
js
mov
dec
and
aaa
in
adc
or
insb
and
lods
dec
pop
shrb
rclb
adc
mov
inc
out
or
or
or
loop
adc
icebp
push
in
or
jo
mov
inc
add
ds
int
push
push
add
out
ss
push
cmp
xchg
sbb
rclb
ljmp
out
adc
or
or
pusha
adc
es
inc
pop
test
cmp
pop
sub
pushl
in
lock
add
test
mov
or
lock
xchg
sub
push
mov
push
or
cmp
xchg
icebp
sbb
out
sub
ljmp
ja
and
stos
mov
sub
sub
mov
cmp
data16
sub
or
pop
inc
orb
pop
sbb
cmp
lock
call
data16
or
mov
cmp
pop
bound
lods
insb
xchg
adc
push
iret
inc
add
and
call
bnd
shlb
push
adcl
adc
inc
inc
das
enter
cmp
inc
fwait
cmp
mov
sbb
adc
shlb
adc
hlt
jb
enter
mov
loop
adc
enter
icebp
jnp,pn
mov
push
push
add
inc
xchg
test
icebp
rorb
test
add
or
les
sbb
mov
pop
sub
mul
xor
adc
repnz
es
adc
int
mov
js
xor
out
sub
or
jge
dec
int3
push
and
mov
adc
mov
and
sbb
mov
adc
out
adc
push
adc
jno
cwtl
cmp
js
mov
pop
adc
sbb
negb
inc
cmp
imul
xor
add
adc
out
sub
and
jb
sbb
or
lods
add
data16
sahf
pop
enter
push
ficoms
decb
subb
out
add
jno
test
iret
in
or
les
sub
bnd
out
fadds
dec
mov
lods
push
jb
testl
inc
into
loopne
cld
xchg
movsb
xor
jb
dec
pop
and
pop
rclb
fs
cmp
pop
test
lds
cmp
sub
or
and
out
or
jb
es
jmp
mov
xchg
inc
pop
test
add
adc
ds
nop
jno
addl
xorl
inc
adc
ret
popa
cltd
es
mov
lock
or
inc
pop
or
dec
mov
loopne
or
cmp
add
int
adc
std
outsl
jg
add
lock
pop
mov
icebp
pop
cmp
sbb
push
lock
adc
adc
test
mov
adc
or
add
mov
out
mov
jg
or
iret
and
push
popa
ss
mov
cmp
adc
jnp
push
das
push
cmp
out
roll
push
and
vpscatterqd
ret
mov
mov
inc
cmp
jno
test
push
pop
hlt
push
rorl
adc
jno
out
pusha
pusha
imul
xchg
out
sub
in
xchg
adc
rcrb
cwtl
jnp
insb
lret
push
call
lret
inc
add
and
inc
rolb
test
bound
dec
lock
aad
inc
dec
mov
add
mov
add
inc
out
incl
fstps
push
mov
cmp
call
jo
dec
stos
push
add
xor
add
xor
or
orl
push
loop
xor
jecxz
rclb
xor
push
dec
cwtl
pop
jb
and
aad
mov
pusha
aad
sub
rolb
push
sbb
sub
fists
pop
pop
dec
fldenv
dec
adc
add
rcl
lock
xchg
and
pop
mov
pop
inc
and
mov
cli
mov
xchg
xor
adc
jg
xchg
jo
mov
adcb
fs
lret
mov
and
cs
sbb
push
add
inc
lock
movsl
outsl
clc
mov
pop
gs
pop
and
inc
out
cmp
push
pusha
pop
je
inc
lret
dec
inc
sub
cld
sbb
push
mov
adc
roll
jl
jo,pt
testb
cmp
loope
add
sbb
insb
pop
aam
clc
loop
add
aam
adcb
dec
scas
fists
incb
xchg
pop
push
cwtl
push
xor
pop
pop
cs
shrb
cld
call
pusha
out
lods
push
xor
and
cmp
and
or
or
scas
ja
icebp
repnz
pop
inc
scas
inc
xor
mov
or
arpl
in
mov
mov
inc
inc
mov
or
loopne
xchg
inc
sahf
rcl
aas
nop
cli
int
and
pop
or
sub
add
outsb
add
add
and
mov
xor
and
in
push
into
xor
adcl
mov
add
aad
enter
jo
mov
pop
xor
add
fsubl
mov
add
movsb
out
cli
lods
jecxz
pop
inc
cld
adc
jge
xor
and
mov
jae
add
icebp
xor
and
add
sarb
dec
incl
xor
gs
sbbb
pop
gs
cld
xchg
scas
sbb
inc
mov
xlat
inc
xorb
inc
mov
adc
std
xor
sub
pop
adc
push
test
fiadds
mov
jle
mov
sbb
adc
inc
sbb
pop
hlt
lea
add
or
adc
fdivrp
or
or
adc
hlt
sbb
and
sbb
or
add
fdivl
rolb
bound
adc
int3
test
out
lea
sbb
clc
xor
out
jbe
inc
sbb
test
into
je
adc
push
xchg
cmpb
scas
das
mov
mov
cmp
pop
add
dec
cmp
push
out
repz
imul
add
ds
or
jae
cli
stos
sub
ljmp
test
data16
sub
iret
nop
lods
push
add
xchg
rolb
sub
insl
movb
inc
adc
in
addb
mov
or
pop
mov
ret
and
push
push
add
push
sbbb
roll
filds
adc
xor
add
ret
js
pop
or
or
aaa
inc
lock
addb
dec
dec
arpl
popa
push
lret
loop
stos
mov
gs
pop
mov
les
cmp
push
adc
mov
fs
out
inc
push
out
add
inc
orb
clc
fadds
add
fiadds
test
mov
push
ljmp
push
mov
lea
add
stos
xor
add
cs
in
fbstp
xchg
push
aaa
lea
push
inc
testb
jge
cwtl
ljmp
call
add
ja
push
inc
sbb
adcb
leave
and
loopne,pt
xchg
call
ficomps
add
cmp
jge
rcrb
push
jo
push
enter
add
test
call
adc
mov
fwait
inc
rol
add
pop
lock
add
mov
push
loop
or
xchg
sarl
test
push
xchg
inc
push
xor
mov
fsubr
mov
inc
addr16
sub
rclb
push
adc
push
add
les
or
or
dec
cmp
icebp
or
data16
rcrb
enter
add
pop
jg
sahf
mov
loope
hlt
dec
cmpsl
sarb
sub
adc
decl
lods
out
or
or
sbb
loopne
sub
push
cld
lahf
or
and
jp
pusha
adc
loopne
xor
in
cmpsb
and
push
jnp
and
inc
inc
mov
inc
mov
sub
outsb
dec
mov
dec
mov
ljmp
add
shr
out
inc
fucomi
test
xchg
into
mov
add
push
loopne
add
pop
mov
ret
sbb
adc
jp
je
add
push
loopne
mov
addb
sub
inc
push
in
les
movsb
jge
pop
push
and
loope
daa
in
mov
test
inc
xor
fdivl
jl
and
or
and
push
dec
test
cmp
push
adc
sbb
push
add
std
add
iret
and
loopne
add
push
loopne
or
push
pop
fs
clc
int3
nop
or
popa
inc
movsl
mov
orb
dec
cmp
push
or
je
mov
and
divl
mov
jge
mov
roll
call
adc
or
inc
adc
pusha
add
testl
mov
add
mov
jp
imull
add
outsl
data16
adc
and
add
pusha
and
in
ret
mov
add
int3
push
sub
inc
inc
psraw
cmp
push
sbb
packssdw
jg
fistpll
aaa
pusha
test
mov
sub
or
in
adc
out
les
in
xor
sbb
add
sbb
add
dec
and
dec
jb
sbb
adc
inc
mov
adc
add
adc
inc
fdivs
lea
pusha
sbb
jne
push
jecxz
add
or
inc
jbe
jg
lock
mov
cmp
add
add
rol
pop
jne
mov
fs
and
add
loopne
outsb
push
movsl
js
push
aam
ret
dec
or
mov
cmp
cli
jg
inc
push
xchg
dec
add
push
xor
decb
xorl
sbb
and
dec
popa
jnp
rcll
add
mov
fs
sbb
mov
shl
std
jg
push
mov
mov
xor
dec
and
dec
inc
data16
lock
dec
cmp
cmpsb
add
or
xchg
inc
add
sbb
movsb
cmc
movntq
enter
les
shll
shrl
inc
icebp
pop
pop
sbb
aaa
cmp
adc
clc
mov
mov
test
or
pop
and
inc
xchg
mov
clc
pop
mov
pop
ds
or
icebp
sarb
pop
adc
fs
jbe
pop
jbe
test
jg
or
mov
sub
rcr
jl
mov
jnp
and
jns
fs
mov
inc
call
cmp
lea
out
pop
loopne
dec
mov
aad
or
or
push
ret
mov
sub
pop
dec
lods
ss
and
dec
lods
add
and
sbb
mov
adc
insb
or
and
pop
or
mov
or
adc
inc
or
jbe
mov
test
and
add
es
or
pusha
adc
andps
outsb
int
push
add
adcb
push
inc
xlat
jg
and
pusha
add
pop
add
mov
push
mov
out
dec
movsb
jle
sub
or
push
andl
mov
cli
scas
push
mov
inc
shl
pop
ret
add
adc
mov
fisubl
jp
add
pop
loope
testb
push
pushf
xchg
nop
push
add
decl
lock
inc
pop
push
add
jle
jge
xlat
pop
mov
dec
xor
es
orb
push
or
gs
dec
cmp
adc
push
lcall
test
mov
nop
add
pusha
dec
or
adc
xchg
add
jle
cmpb
mov
mov
jecxz
fildll
adc
or
mov
insb
les
inc
es
add
dec
push
xchg
ret
or
sbb
mov
mov
or
sub
push
xchg
loope
pop
ss
pop
xchg
xor
inc
sub
and
mov
mov
divb
jge
dec
add
pop
shlb
xchg
sub
inc
sub
nop
mov
das
test
clc
faddl
xor
inc
push
xchg
push
int3
repz
iret
out
or
ds
jo
ljmp
cli
add
lock
sbb
adcl
leave
inc
dec
and
sbb
sub
mov
inc
std
incl
mov
pop
push
pop
lock
xchg
fisubs
out
cli
loopne
mov
js
loopne
mov
mov
add
aaa
jp
adc
fdivrs
out
jl
and
test
jg
or
jp
add
lcall
test
sbb
pusha
mov
pusha
or
xor
add
mulb
jmp
xor
jo
xor
jp
add
pop
or
mov
jnp
mov
or
pusha
ja
add
add
das
pop
mov
sbb
inc
ss
pusha
push
test
lock
dec
dec
adc
and
sbb
nop
jle
out
jmp
mov
adc
sbb
add
sarb
xchg
or
or
shl
push
dec
push
divb
lahf
xchg
movsl
cmc
out
jecxz
adc
inc
jb
clc
inc
loop
or
push
repz
dec
and
pop
mov
push
push
mov
dec
pop
movhlps
in
mov
adc
movb
push
cmpsb
notb
mov
sbb
push
jo
cwtl
cmpb
das
clc
lcall
cli
push
inc
adc
lock
sbb
test
and
xchg
stc
rclb
or
or
mov
adc
add
mov
push
aas
and
xor
mov
sbb
ss
or
add
add
pop
jnp
inc
sar
scas
xchg
aas
aas
lds
dec
mov
pop
push
and
sbb
xor
push
ret
mov
xor
lret
jp
mov
es
daa
or
xor
mov
jb
mov
push
pop
lock
loopne
in
add
lds
aaa
inc
pop
js
add
pop
mov
sahf
in
adc
xor
dec
mov
je
mov
gs
jp
fmuls
pop
push
inc
int
pop
sahf
rorb
gs
insb
lcall
inc
adc
push
push
jo
outsb
icebp
flds
fldl
pop
dec
or
and
adc
addl
enter
mov
push
cmp
xor
adc
ljmp
cmp
pop
xchg
push
push
notb
sarl
fisttpl
jb
flds
rorb
pushl
out
inc
add
mov
nop
or
popa
jb
xchg
ret
mov
mov
ljmp
pop
inc
adcl
test
xchg
jno
sbb
add
jg
stos
out
nop
jnp
xchg
sbb
push
sbb
orl
lea
add
ds
fdiv
jmp
add
icebp
dec
xor
cmpb
shrb
sbb
fdivs
push
add
call
test
rcrb
or
push
mov
dec
ja
orl
mov
adcb
nop
in
inc
and
pop
pop
adc
add
repz
lock
inc
stc
out
add
rorb
mov
or
add
sbb
jb
rol
cmp
addb
add
pop
test
add
jns
dec
xchg
sub
cmp
add
inc
add
push
sub
cmp
js
push
js
stc
rcll
push
dec
nop
jns
leave
nop
dec
cli
adc
in
sbb
js
push
cli
sub
scas
add
dec
aaa
mov
sbb
mov
dec
insb
iret
sbb
sub
ret
cmc
xchg
and
inc
sub
mov
aas
push
push
mov
sub
adc
inc
rorl
test
dec
inc
sub
jl
adc
loope
cmc
fs
cli
std
imul
push
add
mov
cli
jae
inc
push
mov
mov
xor
jecxz
push
xor
out
pusha
cmp
pop
pop
fidivrl
cmpb
jge
push
pop
jl
mov
lret
jne
decl
inc
or
loopne
add
dec
push
and
add
cwtl
jnp
or
arpl
cltd
add
ret
clc
mov
inc
xchg
shlb
out
jo
push
sbb
mov
push
rorl
and
mov
sub
imulb
iret
scas
cmpsb
rorb
and
pop
mov
xorb
int3
or
xor
pop
mov
jnp
xchg
jnp
lcall
out
jl
shr
fcoml
push
mov
jl
and
cmp
mov
mov
and
ja
push
testl
jg
push
or
hlt
sbb
xor
xor
hlt
dec
or
dec
jo
jg
jne
dec
mov
test
gs
ss
decl
loopne
jp
add
dec
pop
fadds
sbb
mov
out
fwait
and
cmc
in
adc
in
cli
or
pop
out
loopne
testl
jno
lea
cmp
lods
dec
mov
push
pop
cmp
inc
sbb
cmp
jl
mov
and
imul
cmp
testl
mov
jb
hlt
mov
sbb
mov
dec
adc
das
jl
cli
mov
test
ds
sbb
out
mov
addl
push
bound
pop
inc
test
push
push
inc
sbb
push
inc
or
test
into
out
pop
xchg
dec
jecxz
test
out
xor
imul
in
pop
push
xchg
test
push
xor
out
pop
hlt
mov
jo
outsb
cli
cmp
cmp
cld
push
add
push
data16
js
adc
add
pop
enter
push
test
inc
xchg
push
and
outsb
and
or
shl
add
push
or
add
xchg
fs
jbe
daa
cmp
xchg
outsl
clc
dec
push
adc
cli
cmp
cmp
and
or
push
fs
pop
add
mov
inc
nop
inc
push
out
add
dec
add
js
arpl
ss
add
mov
mov
and
cmpb
andl
pmulhuw
subb
clc
push
lidtl
add
mov
inc
test
push
fldl
fstl
pusha
add
outsl
ljmp
or
aaa
jo
or
xchg
mov
addb
sub
test
add
les
sbbb
pop
lret
pusha
dec
and
adc
mov
cwtl
inc
icebp
mov
push
push
fcmovb
insb
stc
add
movsl
mov
sbb
lret
push
lret
mov
cli
or
stos
lods
idivb
xor
push
sub
mov
and
xchg
inc
and
scas
adc
aam
jp
mul
jle
subb
jge
gs
sti
cmpsb
push
rorb
inc
pop
sub
push
sti
pop
push
inc
pop
fsts
ss
xor
pop
aam
fadds
add
into
add
push
add
addb
pusha
add
fs
inc
push
xchg
mov
loope
leave
mov
shlb
cwtl
orl
rcl
add
mov
addl
inc
adc
jbe
addb
add
test
push
sbb
test
add
or
xchg
or
cmpb
pop
pop
mov
add
adcb
fwait
add
mov
mov
xor
decb
add
jb
push
xor
add
and
test
clc
rorb
es
rorb
sbb
outsb
test
mov
mov
daa
test
es
outsb
mov
scas
clc
sbb
out
push
pop
inc
or
mov
pusha
mov
dec
call
clc
test
mov
mov
lea
in
pushf
pop
mov
add
push
push
pusha
mov
xor
push
rorb
sbb
test
jl
add
test
add
cmp
nop
sahf
sub
xchg
mov
fiaddl
ficompl
add
and
inc
adc
jle
clc
pop
out
popa
push
xchg
test
pop
lock
pop
dec
add
out
cwtl
and
push
pusha
sbb
add
push
xchg
add
loope
gs
add
cwtl
icebp
push
call
add
add
test
and
jl
or
bnd
adc
pop
movsb
pop
inc
sbb
inc
sbb
mov
es
sub
xor
fisubrs
mov
push
inc
in
loopne
je
out
aad
aaa
sbb
push
xor
jecxz
and
lock
pop
mov
jl
xchg
push
das
dec
mov
add
jg
pop
sbb
pusha
sbb
adc
mov
pop
popa
push
stc
out
fs
pusha
pop
loop
int
decl
andb
cmp
cmp
es
xor
and
mov
ds
pop
pop
bound
sbb
out
adc
inc
movsl
pop
and
insb
and
out
add
xorb
xor
xchg
push
adc
fdiv
incl
adc
mov
xor
loopne
aad
and
inc
lock
sub
sbb
push
fiaddl
jnp
cmp
jb
sbb
es
insb
in
fcoml
call
roll
xchg
jecxz
int3
inc
or
addl
loopne
and
adc
adc
mov
mov
rolb
dec
loopne
out
aaa
loopne
loope
inc
lahf
pushf
pop
orb
loop
sbb
dec
pop
pop
loopne
pop
pop
xchg
and
cmc
push
cld
movsl
dec
rcrb
push
add
int
adc
push
push
dec
add
adc
mov
and
or
push
loopne
add
adc
mov
pusha
imul
movsb
add
add
inc
clc
idiv
pop
push
rcll
and
loopne
push
and
xchg
adcb
adc
aaa
adc
inc
loope
and
jo
test
or
xor
dec
pop
xchg
adc
pop
xchg
adc
dec
and
aaa
movsb
mov
fwait
arpl
add
and
cltd
and
testb
dec
jecxz
mov
pop
jg
mov
add
or
sahf
cmc
ret
decl
repnz
repnz
out
add
inc
push
or
push
mov
bound
mov
ljmp
fs
inc
jae
or
jbe
lods
and
je
js
dec
mov
leave
shlb
mov
sbb
lcall
or
add
push
jecxz
cld
ja
add
or
loopne
push
adc
push
mov
fildll
mov
add
incl
in
mov
or
fsubl
sub
inc
loop
xor
call
aaa
push
dec
push
pushf
into
push
pushf
test
fcoml
sub
push
ficomps
pop
push
cmp
ljmp
lahf
int3
mov
outsl
aaa
test
pop
mov
xor
clc
pop
loopne,pt
inc
lds
dec
add
add
or
inc
add
adc
inc
imul
add
jnp
adcl
loop
pushf
jne
adc
rcrb
mov
and
xor
cmp
pop
fldenv
cld
pop
inc
repnz
lock
xor
test
adc
pop
inc
mov
pop
push
sbb
fildl
xchg
aam
pop
pop
xchg
ret
hlt
mov
dec
test
adc
das
icebp
xor
add
sub
test
mov
xor
mov
xchg
sbb
and
or
sbb
mov
sbb
push
pop
test
sub
or
outsb
xchg
mov
aaa
test
jno
jno
push
push
add
fists
push
add
inc
adc
test
fdivs
mov
add
inc
mov
adc
cmp
dec
les
xor
jp
inc
mov
xor
stc
push
mov
dec
aaa
mov
jb
testb
or
adc
sbb
inc
cmp
or
ja
push
xor
out
add
push
sbbb
push
fwait
add
sbbb
movsb
add
je
cmp
imulb
popa
outsl
pop
sbbl
xchg
fimull
repz
fcmovnu
cs
in
push
mov
add
or
or
push
es
mov
pop
js
xchg
mov
or
cli
repnz
aad
add
hlt
insb
mov
inc
push
cmp
or
clc
push
push
bound
inc
xorb
add
bound
xor
adc
div
and
mov
jg
out
shlb
in
and
pop
add
repnz
int3
lcall
xchg
incl
jp
dec
shlb
mulb
lret
test
call
cltd
sub
push
jmp
push
or
div
xor
adc
aaa
aad
loopne
mov
push
icebp
in
inc
sti
add
pusha
adc
xor
repz
add
sti
call
xchg
adc
rolb
clc
out
xor
xor
pusha
roll
enter
incb
xchg
mov
adc
scas
push
add
sbb
in
dec
test
out
adc
jo
dec
or
or
push
jb
push
xorl
push
clc
sbb
inc
fdivl
test
xor
add
ja
xor
pop
push
les
test
jbe
lahf
xchg
mov
add
jae
lods
push
adc
jb
add
pop
or
and
pusha
aas
in
in
fidivs
adc
add
lea
and
xchg
pusha
pushf
cli
ss
mov
outsb
add
push
adc
enter
clc
mov
jno
mov
int3
jl
push
ret
les
mov
sbb
or
sbb
hlt
in
test
cmpsb
fs
pop
mov
or
jl
in
shll
adc
adc
xchg
inc
mov
push
jp
call
les
divl
adc
ljmp
icebp
scas
adc
inc
push
lds
xchg
or
xor
xor
cmp
add
data16
inc
xchg
fiadds
inc
inc
fidivrs
fistl
sub
and
jp
xchg
cmpsb
pop
mov
inc
pusha
or
icebp
rolb
or
dec
push
cmp
xor
lahf
jo
jo
mov
and
fwait
add
nop
sbb
ljmp
add
incb
pop
ret
and
into
loope
cmp
ljmp
lds
loopne
or
call
filds
adc
or
mov
mov
add
hlt
xor
decl
push
sbb
lock
dec
insb
out
add
xchg
mov
je
shlb
aaa
fsubs
orb
fcomip
out
or
adc
les
outsb
leave
add
pop
cmc
pop
cld
lret
pop
rcll
mov
jmp
fcoms
ljmp
push
filds
loopne
push
icebp
sub
loop
test
mov
lret
loop
in
test
or
push
orb
mov
add
inc
punpckhbw
loopne
in
pop
std
in
mov
inc
xor
xchg
add
scas
add
add
or
or
add
call
pop
xor
ljmp
loopne
and
jne
mov
mov
and
mov
mov
div
lods
mov
scas
add
push
add
xchg
push
sub
cli
incl
mov
pop
rorl
push
rcl
cli
mov
mov
pop
sbb
rorb
push
popa
movsb
lock
sbb
cld
aas
mov
mov
int3
push
inc
pop
loopne
add
xor
out
xchg
push
adcb
adc
mov
out
mov
test
push
and
rclb
sub
movsb
aas
add
fisubs
cmc
jmp
pop
dec
and
cmp
xor
jp
cmp
dec
pop
pusha
adc
repnz
pop
inc
daa
mov
data16
xchg
lods
aaa
push
das
xor
ret
les
sbb
adc
int
add
loope
cwtl
test
push
push
add
mov
iret
jb
xor
inc
shrb
inc
fwait
xchg
mov
or
or
push
rorb
pop
andb
addr16
and
or
lock
clc
lods
and
add
and
adc
insb
pop
inc
and
xor
ljmp
and
in
dec
iret
or
or
rorb
xchg
push
adc
or
add
pop
rorl
and
adcb
paddb
or
or
jp
dec
test
xor
rclb
insb
push
ss
addr16
fsubrs
mov
push
dec
xchg
pop
in
mov
xorb
int
push
mov
in
out
adc
adc
stos
icebp
clc
jo
xchg
push
mov
sbb
push
sub
xor
dec
inc
push
rorl
int3
push
imul
or
bound
lcall
push
int
add
fdivp
and
adc
dec
xor
or
pushf
add
and
mov
or
add
adc
rolb
out
jle
rol
pusha
ds
enter
xor
test
or
xor
lods
add
mov
cmp
push
mov
jae
push
enter
aaa
sub
addl
or
lret
movlhps
bnd
push
imul
cmp
dec
dec
mov
mov
insb
outsl
mov
mov
mov
or
xsha1
cmpsb
dec
push
mov
or
cmp
mov
inc
push
lret
ja
sub
sbb
je
cli
add
addb
add
add
cwtl
mov
and
mov
dec
add
or
pop
push
mov
cmp
mov
jp
movsl
js
pop
xchg
or
add
into
push
ror
shll
in
xchg
sub
add
or
push
or
ljmp
sbb
int3
sahf
loope
aas
pop
sub
add
and
add
ret
or
push
or
add
jp
sbb
ss
faddp
jl
test
and
in
int
adc
sbb
jge
mov
add
mov
xor
inc
xor
dec
xchg
addb
jg
clc
dec
adc
pop
scas
add
push
adc
push
add
and
inc
dec
leave
xor
lds
jo
leave
mov
push
fsub
mov
lods
push
dec
xor
and
inc
push
add
dec
dec
pusha
inc
or
sbb
aaa
cmp
inc
repz
cwtl
dec
sbb
inc
rclb
pusha
clc
pop
sub
bound
sbb
shll
dec
push
scas
push
add
sub
xor
cmpxchg
sbb
mov
jb
sbb
sbb
pusha
adc
clc
iret
test
insb
dec
add
xor
addl
pop
test
mov
cs
inc
addb
mov
cs
or
mov
xor
hlt
mov
test
sbb
add
xchg
jnp
and
out
xor
jp
rorb
or
test
jo
xor
cwtl
ret
adc
xor
xorb
sbb
push
aaa
mov
test
xor
add
fnstsw
cld
in
mov
hlt
add
push
addb
adc
adc
imul
dec
ror
push
push
mov
inc
push
or
add
outsl
push
add
ljmp
sub
jp
push
lcall
enter
push
xor
or
or
add
mov
adc
inc
pop
and
mov
fisubrs
xchg
push
cmovnp
in
adc
mov
push
mov
xchg
loop
jbe
add
lcall
mov
movsb
inc
shl
ds
cmpl
sub
pusha
jae
mov
loope
pop
and
mov
xor
test
dec
les
cwtl
mov
and
add
mov
push
add
das
lret
and
inc
sub
loop
lea
roll
mov
out
mov
dec
std
cmpsb
test
and
jb
jl
push
push
pop
cmp
sub
jbe
mov
sbb
jp
xor
mov
mov
or
inc
mov
xchg
pusha
or
sbb
sub
inc
add
add
xor
or
pop
or
sbb
xchg
lcall
into
push
mov
cmp
mov
fisubl
xchg
stos
and
sub
cs
sub
in
loop
pop
mov
jb
jb
inc
or
mov
in
pop
or
into
es
ds
and
js
lock
sub
ret
mov
fs
into
and
add
scas
push
clc
dec
sub
mov
sarb
pop
sahf
and
mov
fsubs
icebp
dec
cmp
aam
pop
mov
fs
cmpsl
loop
ds
test
xor
mov
push
ljmp
jo
cmp
incl
push
pusha
push
cmp
ret
push
call
jp
dec
test
xorb
jnp
and
cmp
sub
sub
jecxz
or
pop
push
add
jnp
int
ret
or
adc
ret
sub
mov
xor
jg
stos
pop
call
cwtl
icebp
sub
pusha
or
sbb
loopne
lods
insb
lock
call
mov
lds
icebp
shrl
mov
mov
es
insb
test
inc
clc
dec
mov
push
or
mov
adc
mov
mov
loop
inc
mov
push
data16
dec
or
sbb
out
ret
andl
addb
add
adc
push
jle
cmp
mov
lret
adc
adc
aad
pusha
shll
pop
push
mov
pop
or
pop
cmp
push
cmp
fisubrs
add
sbb
push
out
cs
or
adc
int
subb
mov
jbe
inc
aad
add
mov
xor
push
hlt
mov
loopne
push
push
xchg
inc
push
push
loope
orb
int
pop
pop
jb
test
fiaddl
adc
fists
adcl
lock
shlb
add
mov
mov
jnp
sbb
add
sbb
lock
xchg
sbb
icebp
inc
test
pushf
popl
stos
push
mov
out
and
test
add
add
inc
push
jnp
cmpsb
fnstcw
or
enter
mov
lds
orb
push
mov
ss
inc
sbb
loopne
lcall
adc
or
enter
adc
js
rclb
cmp
hlt
add
in
xor
dec
inc
jnp
push
ret
adc
ds
xchg
xchg
sbb
pop
pop
testl
iret
loopne
adc
leave
xchg
leave
and
scas
nop
ret
sti
js
sbb
hlt
in
add
in
mov
mov
add
add
or
xor
add
inc
pop
push
out
xor
mov
test
in
outsl
pop
dec
loopne,pt
sti
jo
push
mov
and
adc
or
ja
in
xchg
decb
scas
pop
fiaddl
or
push
dec
pop
jno
ljmp
rclb
dec
push
pop
sub
xlat
pop
loopne
loope
pusha
sub
cmpb
jge
cmp
and
add
or
mov
pop
sbb
sub
loopne
jmp
dec
inc
jns
loopne
iret
push
stos
pusha
push
xor
pop
outsb
bound
imull
xor
scas
mov
rcrb
add
jl
clc
in
or
sbb
inc
sbb
dec
lea
hlt
or
jo
inc
fisubs
test
sub
add
or
push
mov
jg
xchg
es
iret
and
add
cmc
into
in
pop
cltd
push
aaa
xor
int3
lock
adc
xchg
push
call
add
xor
or
test
jb
xor
pop
and
or
insl
lock
xchg
hlt
xorps
mov
inc
inc
and
ret
cmp
xchg
dec
inc
mov
aaa
or
pop
adc
mov
mov
cmp
adc
inc
jnp
pusha
and
daa
adc
scas
cmp
out
xor
jecxz
pop
pop
sbb
sub
ffree
decl
and
sub
dec
inc
or
or
les
hlt
scas
incl
push
les
test
or
les
adc
inc
sar
aam
icebp
mov
and
roll
shrl
sbb
push
xchg
lcall
mov
out
and
bound
subb
stos
add
fdivrp
jnp
test
add
sub
les
inc
and
jnp
test
adc
clc
inc
imul
inc
out
pop
test
shl
and
inc
jl
lock
fsub
cwtl
adc
ret
mov
inc
add
jp
adc
xor
inc
enter
stc
pushl
fucompp
je
or
orb
jl
mov
dec
pop
mov
jno
or
and
enter
mov
rolb
idiv
push
cmp
pop
imul
or
test
loopne
ljmp
or
xchg
prefetch
or
sub
inc
idiv
enter
dec
inc
add
sbb
jl
adc
cmc
inc
cmpsb
add
int
or
or
jnp
mov
loop
push
mov
adc
popf
add
xchg
adc
push
inc
pop
and
or
mov
test
sbb
inc
test
pop
test
adc
sbb
mov
cmp
xor
jp
fwait
sub
test
rcrb
xor
add
jl
negb
sub
add
dec
cs
jge
aaa
dec
or
test
and
and
cwtl
push
pop
out
push
adcb
ss
aaa
inc
push
xchg
add
xor
add
push
mov
add
clc
or
std
incl
in
pop
xor
es
add
pusha
add
push
pop
and
add
sahf
sbb
aad
pop
pop
adc
jg
hlt
shl
es
cld
sub
add
inc
xchg
add
cld
pushl
xchg
add
jecxz
scas
rorl
jge
add
mov
and
sub
push
pop
or
push
ret
aam
mov
lret
push
roll
sub
repz
incl
nop
iret
cli
orl
ret
cmp
fisttps
ljmp
or
das
fs
lock
rol
aam
push
cmp
ror
push
add
push
add
lret
std
inc
adc
int3
loopne
xor
jp
test
cld
filds
sub
or
and
add
mov
sbb
and
dec
jmp
jp
stc
dec
mov
bound
xchg
in
push
add
adc
ficoml
sbb
lock
in
add
ljmp
push
adc
mov
loop
hlt
jnp
mov
mov
cs
hlt
mov
movsb
fistl
rolb
nop
xchg
add
inc
sbb
pop
lds
aas
mov
shrb
addb
sti
mov
or
jns
shlb
add
into
jo
add
add
or
aam
adc
or
add
subb
mov
jg
pop
jo
inc
mov
or
add
add
xor
sbb
sbb
sbb
std
add
mov
pop
cmpb
insl
pop
cmpsb
push
mov
addb
test
jo
and
jae
adc
sbb
pop
rcrb
lock
lret
cli
pop
mov
jnp
sub
push
lock
outsl
aaa
adc
jnp
add
add
and
pop
addl
adc
nop
xor
out
nop
push
mov
sbb
mov
das
outsb
sub
jnp
repnz
lods
jmp
nop
pop
xor
add
and
movsb
sub
and
xchg
adc
in
adc
sbb
add
adc
push
mov
ljmp
rorb
add
pop
add
xor
es
pop
or
out
xchg
rolb
and
mov
inc
pop
cmp
in
mov
add
lods
add
or
add
test
or
pop
add
inc
add
in
inc
clc
push
push
outsl
adc
cs
mov
or
adc
or
push
pop
pop
add
jmp
mov
or
push
pop
icebp
sarb
mov
jl
add
add
push
push
dec
jp
jp
xor
add
andb
xor
add
push
fistps
add
out
mov
adc
adc
pop
sub
fsubp
cmpsb
notb
or
push
daa
push
push
xchg
jle
lret
test
mov
lahf
dec
mov
dec
cs
xor
pop
mov
sbb
xor
ljmp
imul
xor
adc
popf
add
leave
push
cmp
cld
mov
or
add
enter
std
sbbb
lods
mov
pop
inc
cltd
shl
push
add
add
gs
mov
xor
and
aam
test
add
stos
fisubl
add
inc
and
cmp
sbb
and
push
push
inc
xor
push
js
movsb
call
or
push
orl
filds
loop
dec
push
andl
add
pop
inc
xor
dec
clc
enter
or
divb
ljmp
mov
and
fimuls
pop
loop
dec
add
adc
clc
add
pop
inc
inc
out
inc
jae
or
sbb
mov
test
lock
xor
inc
pop
inc
jo
inc
push
inc
xor
daa
idiv
pop
jge
mov
push
and
icebp
js
lret
add
divb
xchg
loope
jl
and
xor
mov
fimull
add
jg
incl
push
inc
add
andl
or
mov
andl
push
sbb
js
insb
js
inc
insb
test
mov
incl
push
add
and
lea
or
add
fwait
sbb
clc
and
ficoms
sbb
mov
mov
push
xor
xchg
ret
repz
dec
xor
adc
mov
cmp
sub
add
pop
js
lock
add
dec
pop
xor
add
mov
add
andb
add
inc
push
ljmp
lcall
stos
xchg
sahf
pop
sahf
cmp
roll
sbb
or
loop
push
mov
inc
mov
pop
adc
shl
xchg
mov
std
aaa
mov
or
cli
jg
sbb
icebp
inc
pop
mov
clc
inc
push
loopne
push
add
das
mov
dec
in
popa
sub
shr
xchg
shrb
and
cmp
pop
out
or
push
inc
clc
scas
push
pusha
jp
mov
pop
xor
lcall
stos
jg
mov
enter
ljmp
add
cmc
jnp
roll
outsb
mov
clc
sbb
pop
cmpsb
out
idivb
add
inc
add
or
addl
lret
sahf
cmpsl
mov
sub
adc
or
xor
sub
shrb
xchg
push
mov
push
and
dec
pusha
inc
mov
cmpsb
dec
dec
not
mov
pop
clc
shl
je
loopne
mov
bound
pop
les
or
pop
hlt
das
cli
add
addl
faddl
add
lahf
add
test
call
xchg
mov
sub
inc
pusha
mov
and
lret
mov
jmp
iret
add
lcall
in
add
orb
push
and
push
sbb
dec
sub
mov
mov
inc
inc
pusha
mov
ret
fbstp
add
and
xor
jecxz
orb
pop
fs
repnz
jg
xchg
or
dec
insl
xor
mov
jnp
test
push
fs
dec
xor
cld
data16
daa
mov
cwtl
and
push
dec
inc
cmp
lock
loopne
or
icebp
cmp
bound
mov
and
add
add
pusha
add
xchg
sbb
add
cli
or
sbb
scas
or
insb
cs
pop
push
sbb
pop
xor
adc
jbe
loopne
inc
or
ss
jp
inc
jle
or
adc
push
aam
out
or
pop
fidivs
and
cmp
sbb
inc
adc
inc
push
into
mov
and
shll
and
dec
aam
add
jge
ss
add
jp
mov
xchg
orb
xchg
push
test
out
loopne
roll
out
mov
push
sub
std
ret
or
cs
rolb
push
xchg
cli
and
bound
shlb
repnz
adcb
mov
and
mov
or
out
add
les
pop
dec
sbb
pusha
test
clc
sub
inc
jl
cmp
cmp
mov
scas
and
mov
sarb
inc
daa
cmp
push
addl
sahf
loop
cmp
xchg
or
call
xchg
pop
xchg
and
je
out
sub
dec
xchg
adc
enter
decl
mov
or
add
sbb
adc
inc
js
mov
add
mov
mov
jbe
int3
and
loopne
idiv
mov
jo
adc
out
add
es
fimuls
icebp
adc
pop
and
or
inc
clc
in
nop
xor
fs
or
or
push
add
cltd
add
dec
cli
push
sbb
xor
mov
nop
sbb
mov
push
xor
mov
fs
sbbb
sub
int
jge
cmpb
icebp
inc
fiaddl
sarb
pop
pop
jle
ljmp
in
sbb
xor
pusha
sub
xchg
cmp
mov
sbb
dec
lcall
push
jge
clc
xchg
mov
add
add
push
push
call
or
movsb
cmp
test
pop
and
add
and
bound
push
push
out
inc
fcoms
decl
jo
add
out
sbb
sbbb
lcall
xor
adc
dec
out
inc
mov
mov
push
arpl
pop
scas
cs
add
mov
mov
add
pop
in
outsl
js
adc
xchg
push
sbb
pop
cmp
pop
insl
loopne
mov
add
outsb
jo
pop
mov
pop
mov
jg
hlt
pusha
sbb
jle
stc
jp
inc
push
or
lea
pop
mov
leave
cli
lar
adc
pop
adc
push
loop
pop
push
xchg
int3
jne
jg
add
add
loopne
jno
pusha
inc
lock
cwtl
mov
out
cmpsb
jbe
adc
data16
adc
neg
inc
mov
xchg
stos
mov
adc
dec
mov
add
fwait
add
adc
lods
xchg
xor
sbb
add
mov
jge
test
andb
outsb
mov
test
mov
or
mov
xor
inc
cmpsb
test
mov
and
fs
jb
sbb
push
xchg
inc
pop
sbb
mov
adc
sti
popa
cmp
or
mov
adc
push
xor
adc
mov
lcall
in
idivb
push
push
push
xor
scas
jl
scas
js
adc
jns
mov
add
lock
mov
or
testb
sbb
cmp
add
add
in
push
or
scas
dec
mov
pop
cmovle
pop
or
pop
push
sbb
fimuls
orb
pop
pop
or
mov
aas
sar
cmp
add
movsb
pushl
xchg
push
nop
cmp
packssdw
or
jg
andl
xor
push
xor
add
test
push
inc
jnp
rcrb
orb
fiadds
test
jmp
add
sub
lock
inc
sarb
pop
mov
je
addb
adc
cwtl
add
dec
imull
call
mov
js
leave
or
nop
sub
and
adc
xchg
loopne
fbld
or
addl
add
inc
movsb
push
sbbl
lods
loop
clc
ja
dec
xchg
sub
cmp
or
icebp
mov
scas
jo
scas
stos
popf
mov
add
loop
aaa
shrl
lret
cmp
mov
xchg
xchg
sub
sar
push
test
cmp
fcoml
push
push
add
cmpsl
add
inc
dec
daa
sub
leave
inc
push
push
lock
xchg
icebp
jg
mov
adc
loop
addr16
div
add
mov
lock
mov
jo
pop
add
aas
mov
ja
adcb
mov
inc
sub
outsb
dec
pop
mov
nop
cmpsb
adc
cmpsb
aam
inc
lcall
imul
pusha
inc
mov
inc
mov
dec
xor
push
jb
shlb
and
xor
mov
sbb
push
cmc
inc
push
notb
or
cwtl
rorb
push
repnz
fucomi
ss
add
cwtl
lret
and
clc
pusha
xchg
or
xlat
das
shlb
out
jno
shll
mov
outsb
mov
aam
sahf
push
mov
adc
add
push
or
je
adc
std
dec
test
adc
fs
add
pusha
stc
inc
pusha
add
int
sub
and
jp
fs
xchg
sbb
jne
shll
clc
scas
push
jo
cmp
iret
addb
or
inc
cltd
scas
bound
sub
and
out
loopne
icebp
cmp
lcall
jo
and
test
lcall
or
dec
adc
jp
out
leave
push
sub
xor
sub
sbb
popa
mov
xor
adc
sbb
lods
xor
loop
adc
scas
jae
add
adc
shll
adc
sub
add
call
sbb
inc
add
xor
fsts
mov
jbe
mov
lods
shrb
jmp
mov
mov
push
lea
jne
incl
pop
add
push
add
pop
add
mov
ret
cmp
mov
or
adc
sub
or
repnz
dec
insl
shl
or
add
adc
sbb
shll
push
push
repnz
sbb
xor
dec
sbb
lret
sbb
fcoml
sbb
pop
add
out
add
inc
aad
inc
mov
sbb
mov
sub
aam
and
imul
cmp
sbb
push
xorl
arpl
mov
add
mov
add
pushl
shlb
cmc
add
or
adc
add
sub
and
add
mov
and
nop
mov
add
cmp
and
repnz
add
mov
dec
pusha
add
sbb
int
pushw
or
xchg
addb
jg
push
push
push
and
shrb
fimuls
loop
mov
mov
inc
fisubrs
mov
pop
and
xchg
jl
xchg
or
push
call
pop
xor
pop
push
pop
and
mov
pop
in
cmp
inc
dec
cmp
adc
or
stos
inc
push
add
call
adc
dec
es
out
add
dec
and
sub
enter
jge
pushf
or
test
ds
xchg
mov
out
andl
jg
andl
push
inc
xchg
xchg
dec
adc
push
adc
or
push
cli
dec
adc
ja
sub
inc
pop
test
and
add
pushf
sub
inc
mov
xor
sahf
repnz
add
punpckhwd
cmpsb
cmp
sti
mov
push
addb
pop
push
andl
addb
sub
pop
icebp
push
xchg
pusha
outsl
inc
cmpsl
mov
push
inc
inc
fs
sbb
xor
pop
sbb
or
add
repnz
outsl
sbbb
stos
stos
data16
pop
xor
hlt
lahf
dec
inc
adc
pop
push
dec
sbb
ret
or
add
jb
xor
inc
pop
lret
outsl
enter
sbb
lds
push
mov
ljmp
sbb
sbb
rolb
pop
inc
sbb
sbb
in
sbbb
sahf
sahf
out
xor
adc
push
js
sub
rclb
adc
pop
xor
fsubs
push
xor
sar
shl
and
test
popa
push
or
sarl
or
inc
or
mov
inc
test
add
ja
mov
jbe
stc
sbb
push
push
js
orl
add
fisubs
dec
jp,pn
jl
das
mov
or
loop
icebp
xlat
cmpb
xor
add
add
push
mov
aaa
mov
mov
or
mov
push
add
rcrb
sbb
cmp
in
cmp
pop
jg
loope
inc
or
test
push
cs
loopne
inc
andl
incl
mov
lret
push
add
push
add
pop
add
test
out
rcrb
fadds
rcll
aaa
or
add
and
inc
loopne
fdivrs
fldt
inc
mov
adc
dec
cmpl
pop
sbb
jecxz
mov
shrb
mov
jmp
iret
roll
testb
sahf
jg
and
mov
inc
dec
sub
xlat
push
and
les
out
inc
pusha
cmp
adc
mov
clc
push
pop
xchg
xchg
add
mov
sbb
and
nop
adc
lock
sbb
mov
push
dec
xor
and
sub
inc
inc
sub
pop
nop
les
or
hlt
pop
mov
into
addr16
loopne
rclb
inc
cmp
popf
adc
fwait
mov
cmp
pop
rorb
fsubs
loopne
add
inc
sub
and
inc
push
or
outsb
scas
clc
insl
rorl
adc
or
and
lods
sub
sub
and
adc
or
or
test
or
or
cmp
mov
or
notb
mov
jne
xchg
in
xchg
inc
jmp
mov
enter
mov
je
push
or
es
out
mov
mov
lods
inc
lock
sub
push
int
out
cmp
sub
sarb
cmp
xchg
add
and
popf
and
mov
out
call
pop
pop
mov
push
and
or
mov
cmpsb
push
pop
or
xor
pop
mov
push
out
jmp
or
push
xchg
push
ret
loopne
lods
or
scas
loope
push
mov
add
push
mov
or
xor
add
cmp
orb
cmp
add
adc
sub
pop
xor
cmp
fs
orl
pop
movsb
add
subb
mov
push
data16
cmp
mov
mov
fimuls
hlt
bound
fwait
xor
jle
lock
sbb
loopne
mov
add
mov
cmp
movsb
adc
andb
out
shl
inc
push
sti
or
xchg
enter
gs
andl
and
xchg
stos
adc
jo
dec
jp
movsb
je
jl
mov
pop
rcr
sub
mov
pop
pop
add
push
gs
mov
incl
pop
inc
and
ret
pop
xchg
add
shrb
lock
or
or
sahf
sbb
hlt
call
xor
cs
mov
imul
rorb
pop
inc
xor
mov
xchg
inc
insl
stos
xchg
pushf
insb
aaa
icebp
and
push
mov
add
je
pop
adc
and
xor
in
sub
push
xor
lods
sahf
xor
in
xor
jb
add
sbb
sbb
pop
mov
pop
es
push
cld
data16
sub
add
or
ljmp
jbe
adc
gs
pusha
mov
insb
mov
repnz
sbb
xchg
orb
les
inc
and
or
mov
stos
rolb
push
fmuls
test
sar
push
wrmsr
orb
add
sub
lock
add
dec
ljmp
data16
ljmpw
or
push
add
push
shl
push
or
inc
call
jge
and
inc
pop
mov
hlt
xchg
mov
add
xor
xchg
mov
xchg
out
xchg
in
addb
ret
inc
stos
or
push
test
incl
jae
pop
jmp
ret
cwtl
or
incb
push
dec
lods
out
and
fs
inc
pop
gs
xor
sets
popf
rorb
lods
ret
jmp
sbb
push
mov
xor
sbb
mov
sub
mov
lock
jp
pusha
cmp
jnp
in
sbb
and
xchg
add
inc
sbbl
fldcw
xor
lock
scas
es
and
or
lea
add
adc
lock
push
out
lcall
scas
fdivr
mov
inc
out
push
fs
repnz
subl
add
aaa
sub
xor
mov
or
pop
jp
push
out
dec
cltd
sub
pop
dec
jmp
and
adc
aaa
fdivr
xorl
and
orl
lock
sarl
add
mov
mov
popf
mov
push
test
push
adc
jo
pop
jo
insb
mov
or
add
hlt
push
lods
mov
push
inc
dec
cmpsb
out
lock
cmp
shlb
add
push
xor
pop
fildll
xor
xor
jmp
or
or
push
sub
fwait
push
outsb
call
jo
push
jg
ss
dec
test
call
adc
rorb
test
jo
dec
std
pushl
out
add
xor
mov
nop
inc
andl
daa
lods
jg
ss
or
aam
das
hlt
mov
xor
adc
cmc
ljmp
xor
lret
lock
pop
adc
push
pusha
outsl
ret
bound
orl
inc
or
inc
xchg
sbb
icebp
mov
pop
cli
and
xor
sbb
cmpsb
jp
add
aaa
movsl
lods
orb
in
stc
and
mov
pop
lock
cwtl
dec
aad
aas
leave
clc
shlb
inc
xor
test
add
fwait
and
adc
or
jge
pop
and
scas
jno
out
sbbb
dec
je
or
ljmp
jnp
mov
add
dec
pusha
not
xor
xchg
jle
sar
xchg
mov
add
inc
lcall
xor
mov
inc
dec
inc
push
sub
mov
mov
sub
xchg
lret
adc
mov
add
mov
out
nop
xor
popa
loopne
adc
mov
xchg
out
add
and
add
adc
ret
or
and
es
outsl
jb
fsubrl
seto
jo
and
inc
clc
jnp
and
mull
and
jmp
mov
mov
sub
add
daa
pop
xor
adc
mov
ret
mov
dec
aas
pop
add
add
aam
adc
call
and
mov
mov
mov
dec
mov
mov
mov
cmp
or
mov
negb
mov
cmp
ss
and
sbb
cmpb
adc
mov
mov
pop
cmp
jae
xchg
shlb
ss
pop
repnz
push
pop
subl
mov
adc
pushf
and
pusha
in
sub
sbb
push
data16
bound
inc
into
xor
push
add
dec
bound
pop
dec
cli
out
inc
outsb
rorl
xchg
push
cmpsb
adc
or
xor
lret
mov
jl
das
fwait
jle
loop
mov
push
loop
loopne
test
xchg
jle
fwait
dec
jl
lods
jb
xor
add
adc
mov
push
xor
push
divb
add
testb
ljmp
lea
and
pop
mov
lock
data16
cmp
mov
inc
or
xchg
sub
push
shll
cmp
push
dec
loopne
jnp
push
int
sub
jge
jbe
push
fidivl
ffreep
jo
mov
cmp
inc
jle
jb
bound
out
and
lcall
mov
inc
pushw
mov
in
pop
imul
mov
mov
xchg
shrb
and
int3
les
cs
sub
jo
mov
push
inc
jnp
mov
fadd
lock
mov
dec
and
stos
jg
mov
mov
add
mov
sarb
sbb
hlt
addr16
inc
push
fadds
ret
add
mov
pop
push
inc
ss
repnz
jmp
jo
fmul
or
clc
mov
loop
test
pusha
add
pusha
prefetch
jb
js
hlt
or
lock
idivb
mov
push
adcb
inc
add
ss
shrl
fdiv
dec
add
je
push
inc
subl
popa
shlb
mov
xor
movsb
inc
xor
sbb
mov
add
mov
or
or
movb
mov
stos
xlat
push
aam
push
or
mov
sbb
stos
pusha
std
ss
fisubrs
imul
mov
sub
jle
lahf
aaa
add
or
xorb
mov
lock
sbb
add
and
sarb
add
ret
adc
adc
cltd
add
fcmovnbe
incl
idivb
cmpb
sbb
dec
nop
add
cmp
adc
lock
push
sbb
out
mov
lea
cli
cld
inc
jmp
rolb
cmp
jge
add
lock
add
mov
sahf
cmp
js
and
xchg
js
add
sbbb
add
sarb
sub
fdivs
insl
and
test
pushf
lds
and
sub
xorl
or
xor
mov
sar
fwait
jle
rolb
xchg
pop
add
sub
push
fistps
adc
insb
loop
mov
xchg
or
jl
add
andl
adc
mov
or
mov
dec
and
lret
adc
dec
sbbb
sbb
incl
inc
sub
xchg
mov
mov
scas
clc
mov
pop
mov
aas
mov
or
and
pop
jp
mov
hlt
je
lcall
add
adc
cmp
push
jp
cwtl
test
out
push
sbb
shlb
push
xchg
add
loope
inc
sub
orl
shrb
xor
std
test
adc
push
fdivrl
addl
or
mov
sbb
jg
push
dec
push
add
pop
and
outsl
outsl
xchg
inc
adc
cld
jb
fcmovnbe
xchg
xor
add
sub
and
aaa
mov
dec
cmp
mov
sarb
adc
popf
inc
fs
fs
icebp
subb
inc
stos
addb
adc
int
sti
adc
insl
sub
cmp
lods
mov
add
rol
daa
mov
xor
pop
dec
sub
pushf
icebp
out
mov
fcoms
data16
push
loop
lock
scas
push
test
hlt
push
cmp
sub
mov
enter
cmp
mov
aad
ss
cmp
gs
push
add
push
lock
or
mov
lret
or
nop
sub
sahf
and
cmpsl
xor
mov
and
sbb
add
xor
bound
add
mov
add
loopne
les
das
push
hlt
fstl
outsb
fbstp
loop
or
mov
pop
sbb
fcmovnb
dec
pop
outsb
out
bound
push
fsubp
andl
out
ds
sahf
ss
add
jb
mov
in
stos
add
push
loop
add
clc
inc
in
out
inc
inc
push
adc
cmpsb
jnp
jb
xchg
mov
jb
dec
fisubs
stos
mov
cs
and
push
je
mov
mov
cmp
or
dec
lea
orl
dec
inc
insl
cli
mov
dec
cmp
jp
and
ret
cmp
adc
pop
adc
lds
sbb
dec
sub
pusha
adc
fnstenv
popl
test
and
pop
rcl
dec
sub
movl
inc
pusha
and
sbb
dec
loopne
inc
jmpw
rcl
and
into
data16
xchg
addb
push
jg
lea
or
out
test
xchg
outsb
mov
and
xor
shrb
imul
pop
push
add
outsl
clc
sbb
sub
and
test
jmp
loopne
rolb
or
inc
pop
int3
into
roll
or
sub
pusha
or
loopne
test
out
test
enter
adcb
es
mov
mov
jle
push
push
cld
pop
mov
or
jle
inc
gs
jb
pusha
inc
dec
ja
mov
lcall
jge
jp
addl
push
out
shlb
or
adc
into
insl
andb
data16
insl
pushl
jp
nop
inc
pusha
ret
fsubs
dec
jg
xchg
xor
jmp
mov
or
sbb
clc
outsl
or
inc
dec
push
and
mov
pop
and
dec
fisubs
adc
pop
dec
cwtl
inc
and
inc
das
out
pop
shlb
inc
adc
lcall
pop
or
mov
je
inc
lcall
jae
inc
xor
pop
inc
or
push
add
xchg
popa
ss
popa
jp
movsb
sub
inc
and
ss
push
push
mov
cld
jb
sub
push
pop
fs
lods
pop
pop
pusha
inc
sub
in
push
adc
ss
cmpsb
cmp
xchg
push
fildl
mov
loope
pop
or
loopne
cmp
out
inc
lcall
subb
xlat
shll
and
mov
lock
or
or
push
cmpb
ret
imul
enter
lock
outsb
sbb
or
fidivrl
rol
incl
and
pop
mov
loopne
fdiv
jo
test
mov
fstl
scas
and
add
and
pop
xchg
or
sub
push
jp
inc
lods
push
lds
jbe,pn
pop
addl
loopne
push
lods
fsubp
add
outsb
jb
in
ss
cs
decl
mov
pusha
sbb
clc
int
and
into
in
and
rolb
movsl
mov
test
jp
push
add
lods
mov
mov
or
mov
add
fidivs
adc
mov
push
or
int
mov
jmp
pusha
mov
add
sbb
or
cmpsb
add
loope
sub
adc
jp
lcall
push
and
push
adc
mov
enter
mov
aam
add
test
jo
test
or
cmp
cmp
pop
inc
mov
jp
sub
pop
push
add
dec
or
xchg
and
adcl
cmpl
add
mov
jl
sub
pop
jo
push
adc
fildll
add
cmpsb
or
add
or
jb
pop
push
mov
lock
xor
add
push
mov
xchg
lock
xor
inc
jnp
add
dec
clc
icebp
or
fnstsw
xchg
sar
jge
test
xchg
nop
lcall
dec
cmpsb
cmp
mov
add
cld
add
ljmp
lret
pop
adcl
add
mov
and
push
popa
addb
push
push
mov
push
push
sub
adc
xor
sbb
add
shlb
lock
pop
sub
sbb
jecxz
imul
push
mov
ret
nop
inc
rorb
xor
add
push
add
push
push
and
mov
push
mov
ja
jo
inc
xchg
pop
inc
mov
push
add
mov
jg
rolb
fdivs
add
pop
lcall
mov
sbb
mov
adc
jp
mov
dec
jnp
and
data16
shlb
push
out
inc
inc
adc
es
jno
xchg
add
jo
popa
mov
subl
out
adc
lret
sbb
mov
sub
cmp
les
xor
in
jbe
push
sar
int
add
or
out
add
emms
mov
insb
ljmp
in
orb
or
push
ret
aaa
pop
test
sar
push
cli
mov
lock
adc
adc
and
pop
xor
and
loope
push
sbb
mov
sbb
pop
mov
push
mov
mov
lcall
inc
push
xchg
or
insl
subb
testl
aad
sub
and
jg
jp
add
mov
xor
jns
add
sbb
adc
inc
ret
into
xchg
fs
push
cwtl
ds
orl
sbb
or
or
sbb
cmp
pop
xchg
mov
int3
mov
adc
dec
dec
and
adc
pop
mov
rolb
xchg
scas
cmp
xor
std
add
cwtl
mov
cmpl
lcall
xor
jl
xor
aaa
jns
loope
inc
xchg
push
fcmovb
pop
adc
mov
and
jg
pop
pop
jo
rorb
in
loopne
jp
add
add
and
or
movsl
jg
icebp
jl
dec
test
fimuls
and
jl
pop
jno
push
leave
and
loop
pop
jo
add
testb
sbb
stos
mov
inc
push
lret
sbb
and
mov
mov
mov
pop
and
add
out
push
js
ja
jl
lods
mov
pop
or
push
add
fcomps
or
add
inc
ffreep
xchg
iret
xorl
mov
sbb
add
adc
xor
push
pop
mov
push
daa
jnp
sub
and
or
shlb
mov
jp
call
sbbb
les
or
mov
inc
rcrl
stos
lods
les
hlt
int3
dec
shll
cld
pop
xor
jo
pop
movsb
pop
mov
lret
inc
and
ror
out
enter
lahf
add
add
jle
insb
pusha
std
out
rorl
int
mov
sbb
inc
push
fildl
les
adc
addb
xor
icebp
xor
sbb
aas
rolb
push
add
cmp
lods
lcall
xchg
test
add
mov
sub
sbb
out
rorb
lcall
push
push
xchg
or
mov
sbb
int
into
fiadds
mov
pop
add
sbb
divb
lock
stos
sbb
sbb
fwait
mov
sbb
sbb
push
or
adc
das
xor
or
xor
cmpsl
pop
and
and
lock
add
jo
test
push
xchg
mov
jb
es
pop
or
jo
lock
int3
xor
sbb
adc
xor
cli
xorb
xchg
xor
ds
dec
inc
mov
xchg
fildll
xchg
xor
pop
adc
mov
popa
xor
fidivs
jle
xor
popa
inc
inc
fildl
add
daa
jbe
and
icebp
rolb
dec
js
mov
push
test
cld
add
add
loop
and
pop
adc
push
adc
push
xchg
jge
and
and
andb
outsb
or
dec
adc
or
sti
pop
add
add
icebp
rolb
setl
add
aam
in
push
icebp
lcall
push
mov
int
sub
les
or
and
ret
add
incl
sub
or
or
mov
push
int
in
push
and
jl
and
cwtl
icebp
and
or
lea
lock
sbb
pop
fs
ss
or
clc
jl
mov
sbb
lret
repnz
cmp
add
es
jo
cli
mov
sbb
xchg
adc
xchg
out
mov
les
jae
icebp
mov
mov
pusha
pop
push
cmp
dec
sar
or
mov
xchg
orl
add
adc
pusha
dec
cs
adc
int3
lcall
daa
mov
rolb
push
adc
inc
adc
call
xor
add
xor
shl
pop
pop
adc
pop
cmp
int
fidivl
pop
rclb
push
testb
loop
orb
call
dec
add
jbe
out
mov
xor
and
je
mov
add
or
inc
add
inc
adc
iret
jnp
int
into
jbe
lock
aaa
movsb
sub
mov
fdivrs
push
call
lret
inc
push
add
add
pop
fs
lock
xor
addl
mov
ret
xchg
insb
xor
push
xor
push
mov
mov
dec
aas
inc
xchg
fldl
pop
mov
and
adc
test
lea
std
jmp
pop
add
adc
fstp
out
iret
sub
and
ret
pop
ljmp
ss
add
push
or
push
nop
or
dec
aad
xor
addl
call
or
cld
pop
imul
jbe
adc
aaa
ret
int
xorb
inc
mov
mov
subb
add
ss
adc
je
or
rcr
and
addb
cmc
adc
pusha
xor
sub
dec
push
sub
xchg
sbb
mov
jp
lret
cmpsb
adcb
and
dec
and
or
outsb
xchg
int3
adc
les
jbe
cs
cmp
pop
clc
pop
std
add
dec
andl
pop
xchg
inc
xor
and
sbb
or
hlt
fwait
and
out
add
pusha
mov
sub
add
add
int
loop
aaa
jp
gs
xor
loopne
pop
pop
xchg
sahf
sub
mov
push
pop
add
inc
xorb
dec
xchg
call
push
loopne
mov
push
orl
jo
inc
jp
add
pop
add
add
inc
adc
sbb
jnp
ss
sbb
jle
push
dec
dec
outsl
push
inc
dec
rclb
sub
les
cltd
jmp
add
or
negb
push
sbb
add
sbbb
sub
jbe
sti
sbb
dec
mov
sbb
or
or
inc
ret
dec
adc
mov
mov
outsb
test
adcl
cmpsb
stos
orl
sahf
fistpll
inc
ss
out
pop
mov
cmpsb
inc
xor
sbb
inc
fstpt
fs
lock
jb
inc
inc
inc
shlb
and
mov
inc
jbe
lock
jo
push
xchg
xor
rol
clc
je
jg
mov
push
shlb
xor
xor
push
push
inc
and
mov
in
shlb
shrb
push
inc
push
mov
dec
sbb
movb
pop
adc
orb
cltd
int
pop
popa
mov
or
sub
call
or
jp
cmp
pop
call
cbtw
sbb
push
iret
inc
ss
or
jp
mov
in
inc
add
fwait
into
push
mov
pushl
pop
xchg
and
add
push
xchg
or
dec
inc
jnp
push
mov
data16
jbe
push
cmpl
popa
and
jae
mov
mov
cmpsb
int3
mov
sub
call
in
outsb
pop
cmpsl
ret
mov
mov
aam
sarb
adc
xchg
add
add
push
pusha
add
mov
inc
cwtl
or
inc
cltd
aam
aas
loopne
add
cmp
loope
push
sub
push
shrb
insl
fsubr
add
subl
insl
lock
in
dec
xor
pusha
jnp
pop
mov
pop
lock
mov
adc
cmpb
push
dec
lea
stos
mov
clc
inc
loope
enter
and
push
mov
push
ficompl
sbb
negb
out
push
inc
add
jmp
mov
sub
add
xor
andb
ds
imul
xor
out
fwait
mulb
jp
or
sbb
mov
adc
inc
ljmp
and
sbb
add
nop
dec
pop
into
add
add
decb
loop
xchg
jbe
jp
rcrb
push
xchg
rclb
add
cld
mov
mov
sub
outsl
mov
add
xchg
or
add
push
insl
clc
ja
cli
shlb
mov
pusha
pop
mov
orb
orl
adc
outsl
sub
out
frstpm(287
shlb
aam
push
and
orb
lds
test
mov
and
dec
adc
add
push
ss
dec
dec
push
adc
mov
inc
addps
incb
and
and
std
dec
aam
and
into
push
in
add
push
inc
sub
mov
lret
sub
lods
push
daa
lea
sbb
and
sub
and
or
or
push
insb
pop
xchg
or
test
inc
inc
dec
cmp
sub
jp
inc
mov
fwait
jne
cmp
test
sub
jno
ja
outsl
pop
and
paddd
pusha
add
je
bound
and
das
pop
xchg
cs
inc
add
pusha
jl
enter
sub
stos
out
push
xor
les
mov
mov
inc
mov
xor
or
jp
or
xor
scas
lret
jecxz
sbb
int3
jp
icebp
fidivrs
sbb
sub
incb
add
dec
daa
mov
or
adc
shll
adc
push
loope
xor
pop
call
nop
sub
scas
mov
inc
or
test
sbb
mov
aas
add
cmp
xor
loop
adcb
jns
xchg
pop
cli
shrb
xchg
add
cmp
jp
or
push
or
fildl
dec
xor
dec
push
andl
sub
mov
test
sub
mov
leave
inc
mull
or
call
xacquire
out
mov
pop
jnp
inc
sub
dec
stos
mov
dec
out
outsb
inc
je
nop
sub
mov
dec
rclb
adc
int
test
or
loopne
jo
loope
and
push
inc
pop
aad
xor
cwtl
addb
fs
outsl
mov
lock
and
or
mov
add
and
add
lcall
pop
jnp
jne
add
adc
and
adc
pop
mov
jle
xor
jns
adc
mov
ds
push
into
stos
mov
inc
mov
push
inc
pop
arpl
add
fdivrp
mov
nop
aaa
add
lock
push
lds
iret
mov
cld
or
push
mov
nop
mov
or
xor
jmp
add
xchg
push
dec
fidivs
pop
push
jns
mov
add
imul
add
cs
add
mov
mov
jg
push
test
in
inc
add
inc
add
adc
jl
dec
lods
mov
add
dec
sub
sbb
add
sbb
dec
jo
nop
sbb
shlb
mov
pop
cs
cmp
and
add
mov
lds
xchg
and
enter
lock
mov
addl
rcrb
mov
inc
out
dec
lock
or
sti
addl
addb
mov
push
inc
add
add
lock
cmp
inc
jno
jp
ss
jp
jp
cmpsb
adc
jmp
cmpsl
push
and
enter
xchg
jo
pop
out
cmp
outsb
ret
or
mov
xor
jp
gs
jp
std
pushl
nop
inc
es
inc
loop
and
jecxz
push
out
mov
dec
mov
cmp
out
and
adcb
subb
mov
xchg
sbbl
scas
and
jg
clc
dec
inc
xor
jnp
inc
test
adc
dec
mov
adc
inc
push
aaa
adc
xor
jnp
xchg
mov
stos
cmp
pop
push
push
inc
aaa
pop
pop
dec
mov
pop
out
adcl
mov
push
sahf
and
xor
das
push
push
cli
xor
mov
push
add
out
call
outsl
scas
jnp
jno
cmp
xor
add
add
cmp
add
ret
rcll
cmpsb
pop
mov
call
cmpsl
aad
xchg
add
ss
jbe
push
cltd
push
out
or
add
and
or
pop
pushl
dec
cs
jnp
adc
add
xchg
mov
cmp
pop
cmp
dec
xor
sbb
jg
into
mov
jnp
push
add
xor
fwait
cmpb
pop
xor
and
add
in
push
mov
push
int3
bound
mov
lret
hlt
mov
push
in
mov
je
add
dec
decl
xor
and
mov
inc
stos
xor
adc
and
adc
add
mov
outsl
sbb
add
insl
pop
mov
and
mov
mov
add
orb
je
pop
mov
rcrl
sbb
adc
dec
jle
inc
sbb
cmp
in
aas
mov
push
pop
ficomps
rolb
je
imulb
lcall
xor
push
push
add
in
sub
cmp
inc
cmp
inc
movsb
pop
mov
dec
and
shlb
adc
fisttpll
cs
and
mov
mov
xchg
adc
test
add
add
fs
jp
xchg
and
ja
je
add
addl
scas
mov
jbe
inc
sub
xor
cmpsl
loopne
mov
rclb
jp
sub
testb
mov
sahf
adc
pop
cld
pop
sarb
xchg
mov
loope
push
inc
lods
call
movl
jl
inc
push
sbb
inc
js
fsubp
mov
pushl
cli
mov
inc
inc
movsb
roll
mov
test
dec
pop
cld
sbb
add
and
add
addb
sub
cmp
push
and
orb
push
jg
movsl
add
movsb
add
mov
or
cs
dec
cmp
add
inc
and
mov
xchg
or
and
loopne
sbb
inc
or
nop
mov
lock
fwait
pop
sti
mov
push
test
sbb
xor
cmp
sub
mov
pusha
push
sub
add
add
pop
adc
mov
pusha
xchg
add
ds
sbb
enter
cli
data16
sti
mov
fwait
jns
add
sub
mov
add
das
mov
inc
sbb
aas
xchg
xor
sub
jbe
xchg
mov
or
dec
lock
dec
inc
and
nop
sbb
inc
orb
rolb
fs
pop
xor
mov
or
inc
sub
into
mov
loope
mov
in
insl
xchg
fnsave
stos
or
or
or
fisttps
sqrtps
fimull
add
test
xchg
mov
mov
push
fimuls
push
es
push
stos
shr
xor
and
outsb
mov
dec
cwtl
lea
jge
lcall
inc
xchg
add
add
out
add
sarl
push
or
pop
cmp
pusha
idivl
or
fwait
or
dec
xchg
push
mov
xchg
outsb
add
add
lcall
xor
xchg
jl
sub
cs
pushf
add
addb
mov
push
pop
jp
adcl
rolb
andl
push
mov
aaa
push
mov
test
and
fcmovnu
mov
inc
andl
andb
cmp
pop
rolb
sbb
dec
jnp
inc
sbbl
push
cmp
adc
sbb
add
or
add
push
or
loopne
orl
fldl
outsl
andl
mov
in
sub
addb
mov
mov
sub
sbb
add
sbb
sub
fwait
pusha
sti
orb
insb
mov
scas
ret
dec
jg
adc
pusha
hlt
or
sbbb
sub
pop
testl
mov
js
push
out
adc
add
sbb
sbb
sbb
ret
and
pop
fs
fdivrp
dec
pop
js
sarb
pop
sbb
jle
idiv
dec
inc
or
pop
push
and
push
movlps
inc
movntq
add
or
cmc
mov
or
inc
fs
imul
addb
push
gs
sbb
jnp
jp
or
scas
mov
iret
jp
movsb
pop
pop
xchg
test
inc
das
aad
push
pusha
orb
add
sub
mov
mov
rorl
scas
push
push
shll
insb
in
jp
jp
pop
jp
fiaddl
gs
adc
sbb
andb
jo
jnp
adcb
xor
ja
inc
and
pop
add
jp
push
test
cmp
pop
xchg
xchg
in
fildll
cmp
test
jnp
or
add
cltd
push
mov
lcall
mov
cs
outsl
clc
pushl
adcb
inc
sub
loop
mov
faddp
cli
mov
loopne
inc
loopne
lcall
push
pop
push
xchg
inc
push
xchg
jne
add
and
mov
shll
rorl
rcrb
es
adc
inc
jp
xchg
cltd
and
or
xchg
out
xchg
mov
sahf
add
sub
sbb
data16
add
mov
inc
nop
js
mov
call
push
mov
and
lds
pop
scas
popf
icebp
mov
sarb
pop
loopne
lods
or
or
pop
stc
add
push
loopne
loope
cmpsb
pop
in
or
push
jp
clc
add
inc
xor
movsl
jo
push
pop
adc
es
test
sub
js
push
and
or
push
mov
adc
mov
push
xor
lcall
inc
mov
mov
inc
add
xor
jp
add
jae
hlt
and
scas
add
pop
arpl
mov
insl
sbbb
test
pop
or
jl
outsb
in
or
and
loop
out
push
es
or
mov
pusha
mov
mov
push
out
loop
out
adc
in
inc
out
or
out
loope
pushf
push
cld
xchg
sahf
pop
sbb
and
push
jp
push
bound
pusha
pusha
fldenv
js
mov
xor
popa
inc
add
xchg
and
gs
orb
cld
lock
inc
mov
into
loop
pusha
mov
or
and
je
cld
addb
mov
into
cmpsb
push
jnp
mov
sbb
jnp
enter
decl
js
insb
and
loopne
sbb
incb
jnp,pn
cmpsb
bndldx
cmp
mov
cmpsb
test
add
xchg
add
into
jb
jno
dec
std
sub
push
add
clc
int3
cmpsb
cmp
mov
add
adc
sbbb
adc
movsb
loope
cmp
mov
adc
add
popa
or
loop,pn
mov
push
mov
add
add
add
int
or
hlt
in
and
test
repnz
rclb
xchg
cs
lea
into
mov
adc
pop
sbb
pop
aam
es
dec
addb
inc
out
pushf
sbb
jo
mov
dec
test
inc
sarl
test
sbb
add
seta
inc
pop
fistpll
and
add
subb
and
inc
mov
add
cli
test
pop
dec
loopne
jg
idivb
pop
jmp
or
and
push
adc
jnp
and
and
clc
mov
clc
sbb
pop
jnp
push
xor
aam
mov
and
fwait
inc
das
mov
inc
add
lods
add
orb
pop
lock
push
int3
inc
mov
mov
or
add
nop
add
add
jmp
push
test
add
xcrypt-ctr
cmpsl
sbb
mov
fnstsw
jo
cmp
add
adcl
mov
aad
adc
adc
adc
push
and
ljmp
idiv
xor
cmp
adc
fstps
rcrl
cmp
mov
shlb
and
ja
add
and
cmp
test
mov
cli
cmp
shlb
cwtl
leave
out
push
add
icebp
sbb
out
add
jg
das
or
cs
mov
sbb
gs
nop
icebp
add
pop
push
mov
lds
lods
adc
dec
subps
or
or
xchg
sub
and
or
andb
repnz
add
mov
xor
insl
or
subb
sbb
outsl
sbb
hlt
add
or
sub
popa
je
pop
inc
shrb
dec
mov
iret
jl
jo
adc
jge
xor
sub
add
int
cmp
push
xor
jg
mov
add
fmuls
imul
insl
or
filds
mov
adc
fsubrs
adc
inc
fmull
add
cmc
ficoms
addb
je
jo
sbbl
add
ret
push
pop
adc
push
movsl
add
in
and
subb
sub
sbb
push
or
mov
fisubrs
xchg
cmp
cmp
and
cli
or
mov
mov
pop
cmpsb
push
clc
or
inc
add
pop
push
push
push
nop
loopne
sbb
sbb
xor
lock
sbb
fstl
add
cmp
xor
sahf
ss
sbb
mov
inc
xchg
in
pop
adc
sub
pop
lock
xor
outsb
cmpsb
lock
xor
movsl
push
rorb
or
andl
jo
cmc
stos
jno
into
add
sbb
leave
push
out
stos
shlb
sti
and
jb
cmp
pushf
sbb
ficoms
jecxz
stos
into
ds
cmp
pop
push
or
xor
cld
fwait
loopne
jae
add
test
lret
stos
mov
push
bound
loopne
add
outsl
loop
xchg
add
popa
push
xorl
push
js
clc
mov
cmp
jle
outsb
or
pop
adc
nop
jno
push
jp
dec
inc
pop
test
out
mov
lret
or
cmp
movsb
addb
out
cmp
sub
adc
pusha
sub
pop
aam
je
adc
adc
push
loopne
and
and
lock
dec
sbb
add
add
aaa
or
jnp
loope
cmp
cli
push
cmp
addb
lods
mov
pusha
scas
cmp
jo
dec
push
jo
add
clc
adc
or
xor
jo
cmp
jmp
neg
sub
pop
pop
rorb
notb
je
arpl
fiadds
rcl
or
cld
xorb
rclb
rolb
mov
loopne
dec
orl
lock
pop
jmp
adc
push
jl
loopne
push
sbb
xchg
cmp
jg
sti
jo
movsb
inc
xchg
push
jp
pop
add
out
push
mov
dec
std
mov
and
data16
mov
sub
hlt
sub
sbb
adc
add
dec
call
mov
dec
loope
or
or
loopne
clc
mulb
add
inc
rcl
inc
mov
pop
adc
mov
hlt
push
jl
aaa
cmovno
fsts
ret
add
adcb
mov
fisubs
insl
pop
xor
sub
cmp
aad
dec
jnp
cmpsb
sub
rol
inc
loope
fadds
in
mov
sbb
add
je
sbb
and
push
push
sahf
add
pop
faddl
into
jne
adc
into
stos
sub
xor
jg
ds
or
dec
sbb
adc
mov
in
fs
adc
test
loopne
lret
lock
add
and
lock
pop
xor
das
pop
fiaddl
inc
out
stos
cli
aas
rorb
and
jo
inc
xor
xor
ret
add
scas
test
add
add
push
sbbl
dec
jl
mov
jae
nop
sbb
xor
inc
inc
int
xchg
add
mov
sbb
xor
jnp
mov
andl
fiaddl
mov
out
xchg
adc
sub
push
jo
es
adc
or
push
inc
cwtl
test
mov
mov
mov
adc
pusha
decb
adc
ret
test
cmp
adc
pop
pop
decl
pop
adc
or
xor
jb
mov
add
sbb
lret
lock
xor
lea
add
pop
sub
adc
test
adc
stc
xlat
inc
adc
in
and
xor
ret
mov
pop
fs
xchg
mov
sub
push
mov
push
or
iret
add
out
cmp
ret
test
movsb
or
add
push
xor
loopne
xchg
sbb
push
aam
ret
bound
sbb
push
ror
ss
pushf
jp
cmp
dec
xchg
popa
arpl
push
das
xor
mov
or
inc
push
mov
dec
add
push
pushw
mov
lcall
addr16
imul
fwait
call
xor
cli
pop
mov
xchg
ficoml
mov
scas
popa
add
jle
mov
sbb
add
in
lods
in
test
push
les
xchg
aaa
shr
add
add
test
fisttps
orb
lea
mov
dec
push
add
in
xchg
fistps
add
movsb
cli
jae
dec
push
sti
add
fwait
inc
add
push
dec
into
jg
pop
test
test
add
ficoms
sub
mov
negl
dec
jb
push
pop
add
insb
clc
scas
mov
ss
fstpt
addl
push
cmp
push
lods
add
insb
add
sub
fiaddl
outsl
stos
dec
fsubs
push
sub
xchg
xorb
add
sub
xchg
sub
flds
or
xchg
lahf
push
adc
jo
in
mov
add
push
jge
push
push
pushf
xchg
pop
pop
push
iret
xchg
sub
push
int3
cmpsl
inc
lock
int
push
pop
xchg
push
rorb
add
shl
dec
adc
pop
xchg
mov
or
ljmp
jnp
out
mov
mov
incb
adc
adc
enter
jle
dec
fnsave
sbb
xchg
xor
jp
jg
or
js
sbbb
aam
rol
add
or
stc
clc
test
or
mov
pushf
and
shll
pop
or
cs
adc
pop
mov
mov
mov
test
xchg
mov
jl
mov
pop
bound
add
sbb
sbb
adc
adc
and
outsb
push
mov
pop
rolb
add
jo
inc
pop
addl
xor
sub
mov
ja
xor
push
rcrb
dec
inc
hlt
add
xor
jmp
push
pushf
sbb
sbbb
scas
lea
cwtl
lods
mov
mov
inc
push
sub
leave
and
adc
push
push
nop
sarb
mov
xchg
add
or
jp,pn
mov
add
add
out
add
or
or
inc
cmpb
fs
xor
mov
xorb
or
mov
insl
rcrb
test
loop
sub
jl
xorl
pop
lock
xor
or
out
mov
sub
dec
or
mov
fs
or
xor
add
adc
in
lods
mov
lock
add
push
push
fwait
or
cmp
stc
dec
push
add
xorb
mov
rcrb
mov
icebp
mov
sub
enter
incb
adc
std
lea
push
push
mov
sbb
jle
lock
cmp
jnp
rorb
rorb
aaa
push
add
stos
test
push
jle
sbb
in
imull
mov
lock
or
mov
inc
or
mov
jno
out
inc
cs
xchg
cmc
push
xlat
cwtl
enter
inc
movsl
push
lret
add
hlt
lret
mov
rorb
movsb
jmp
dec
jb
inc
or
sbb
lock
sbb
adcb
mov
cmpsb
fdivrs
outsb
bound
add
mov
xor
inc
cmp
pop
jbe
in
adc
sarb
cmpl
cmpsl
lahf
arpl
adc
test
and
hlt
insl
adc
mov
pusha
add
xchg
push
fdivl
mov
in
push
dec
add
sub
add
inc
or
incl
pop
dec
add
inc
add
sbb
andl
es
push
xor
sbb
in
and
jmp
je
cmp
lea
mov
jg
sbbb
call
test
pop
mov
lret
cmpsb
mov
rolb
mov
in
push
mov
sbb
frstor
shlb
loopne
fbstp
fwait
mov
inc
and
mov
and
sbb
lret
shll
add
add
jmp
clc
popa
and
and
loopne
loopne
lcall
push
into
iret
andl
add
and
das
and
mov
push
and
popl
mov
pusha
jl
movsl
sub
cmp
sarb
mov
inc
add
pop
mov
call
xor
inc
or
sbb
or
adc
adc
or
jno
and
mov
inc
or
sub
mov
repnz
pop
dec
fildll
inc
inc
popa
sbb
adc
xchg
mov
and
and
loopne
sar
scas
shlb
in
adc
or
mov
repz
rolb
push
adc
or
push
adc
mov
mov
xor
lcall
sub
add
ljmp
out
mov
mov
xor
sub
inc
nop
inc
and
lods
and
push
bound
subb
hlt
mov
dec
cmp
mov
pop
dec
cmp
call
outsb
bound
fisubl
cmp
dec
jb
jecxz
mov
popa
inc
mov
cmpb
ret
adc
cmp
pusha
adc
loope
ret
xor
push
add
je
and
arpl
cmp
rcrl
push
mov
mov
inc
mov
xchg
sahf
mov
loopne
les
adc
shlb
adc
push
lcall
pop
icebp
adc
loop
in
pusha
insl
push
or
bound
sub
sbb
and
add
shr
jp
add
or
inc
pop
pusha
out
sub
or
mov
nop
sbb
or
mov
add
mov
push
pop
and
and
or
add
and
cltd
push
clc
dec
or
mov
sbb
pop
leave
dec
cmpl
leave
push
push
fcomps
test
xor
inc
loopne
dec
and
sahf
cmp
sbb
ss
fs
call
xor
int
sbb
jb
shrb
js
in
xchg
cwtl
mov
add
ss
jl
sub
fs
add
add
sbb
rolb
rclb
test
loope
bswap
mov
orl
add
push
outsl
cs
int
inc
and
fisubl
jecxz
test
je
xor
jo
stos
mov
mov
mov
jb
test
mov
sub
jns
das
dec
mulb
shlb
out
pop
sbb
mov
out
out
adc
insb
xchg
icebp
call
jbe
fs
push
icebp
add
add
adc
or
add
shrb
pop
mov
mov
mov
xlat
sar
inc
repz
push
test
loopne,pn
mov
lock
push
xchg
das
outsb
mov
add
cmp
sbb
push
xchg
dec
andps
xchg
adc
int
test
icebp
fnstenv
adc
xor
enter
xor
sbb
mov
idivl
and
push
sbb
dec
dec
clc
data16
js
mov
push
add
rorb
je
adc
jno
decl
or
mov
sbb
incl
sbb
pushf
loop
push
push
ud2
adc
or
pop
flds
in
icebp
insl
and
sub
icebp
sub
lock
xor
aaa
test
scas
sbb
mov
popa
add
sbb
cmp
lock
pop
cmp
adc
mov
pop
pop
aaa
adc
jl
pop
inc
popa
roll
or
jle
rcr
and
xor
mov
mov
ljmp
mov
out
push
inc
popl
xor
clc
pushl
cld
pop
dec
jnp
data16
xor
sub
push
sbb
rclb
sub
pushf
sbb
mov
sub
in
ljmp
cmp
sub
mov
filds
int
mov
in
xchg
lock
arpl
test
sub
pop
mov
les
add
rcr
mov
int
inc
push
add
cltd
add
pop
bound
inc
and
pop
and
clc
lock
ljmp
nop
or
mov
out
and
or
jg
and
in
testb
cs
xchg
pop
push
insb
stos
add
loopne
push
js
inc
lcall
mov
push
pop
popl
mul
add
sub
dec
popa
nop
cli
cli
xor
or
test
adc
jp
cmp
out
loop
popf
loopne
nop
daa
test
incl
inc
out
rolb
mul
adc
add
mov
lock
rorb
insb
pushf
add
add
cli
js
test
sbb
je
xor
or
bound
mov
jl
xor
adc
outsb
add
adc
lds
lcall
push
and
or
pop
stos
repz
fcmovbe
cmp
js
mov
in
test
pop
sbb
sbb
lock
add
mov
xor
cli
or
jb
jnp
sbb
stos
outsb
or
test
lds
mov
jge
adc
xorb
lret
or
or
inc
xchg
popa
sbbb
pop
jo
lds
dec
add
add
add
daa
or
shrl
adc
outsl
ja
fwait
mov
lock
test
push
sub
jno
repnz
cltd
adcb
sub
inc
mov
and
stos
in
loop
mov
inc
jmp
icebp
mov
add
in
clc
dec
add
mov
add
xor
imul
add
in
outsb
add
add
xchg
daa
stos
push
in
xchg
xor
adc
fsubp
fs
or
and
mov
xchg
add
out
and
fs
xchg
adc
push
je
mov
push
test
push
jnp
stos
mov
shrl
inc
aad
ljmp
mov
xchg
pop
sbb
pop
push
js
push
out
push
and
xor
mulb
mov
and
mov
fimuls
or
mov
jnp
sub
mov
push
xor
hlt
cwtl
clc
and
lcall
sub
nop
inc
push
mov
jg
fidivs
fs
push
les
sub
sbb
sbb
xchg
add
ret
push
in
add
push
push
jo
adc
out
and
add
jg
mov
nop
add
pop
mov
add
lock
or
in
fmull
aas
jno
loopne
ss
lock
add
or
pushl
jp
mov
jecxz
add
add
jb
ret
lcall
or
cmpl
loopne
inc
and
and
stos
js
inc
pop
mov
lock
jg
xor
fs
push
dec
incl
push
mov
push
nop
sub
add
mov
or
mov
adcb
jle
sbb
fs
sub
cs
jne
jae
js
inc
bound
lcall
movsb
test
or
xor
adc
cmp
and
push
mov
push
jnp
leave
adc
aad
shlb
mov
push
jo
push
push
push
bound
mov
test
add
mov
sahf
jnp
jle
pusha
push
xor
mov
mov
xor
insb
sbb
push
jmp
or
js
shrd
add
inc
ss
sbb
mov
mov
or
aaa
mov
push
shlb
incb
xchg
mov
xor
rorb
sbb
or
sahf
pop
out
mov
sbb
xchg
mov
mov
decl
or
and
andb
pop
pop
mov
out
pop
push
inc
adcb
orb
idivb
test
cmp
inc
or
pop
mov
or
inc
pop
inc
jl
inc
jnp
aaa
or
push
xor
adcb
mov
ljmp
loop
lcall
sbb
mov
adc
mov
sarb
inc
xor
cmpsb
inc
and
je
dec
inc
outsl
push
sbb
cwtl
sbb
js
in
and
sub
sub
leave
or
dec
out
mov
add
adc
pop
sarb
sbb
adc
and
jmp
adc
and
leave
lock
sub
rorb
loopne
xor
es
push
test
push
or
sub
inc
mov
aas
push
add
cmp
iret
outsb
push
stos
sub
mov
mov
icebp
or
outsb
jo
cld
add
sub
add
jnp
mov
mov
outsb
lods
loopne
add
mov
les
xchg
les
or
pushf
inc
fdivr
mov
int
addb
addl
bound
data16
test
or
jp,pt
lret
xor
pop
dec
add
data16
aam
xchg
jle
stos
and
aas
sbb
or
fsubs
nop
inc
add
pusha
xchg
cltd
sub
enter
ret
or
and
fucom
push
je
ficoms
cmc
or
xor
pop
fchs
in
out
xchg
add
les
lcall
inc
mov
dec
push
out
int3
mov
add
mov
adc
push
sub
cmp
addb
pushf
fdivl
and
mov
push
mov
add
adc
mov
pop
incl
sbb
popa
inc
sbb
inc
sbb
xor
sbb
inc
sbb
jp
andl
push
nop
mov
sbb
js
sbb
xorb
jns
push
dec
xor
xor
loope
jb
sbb
inc
adcb
in
addl
push
subb
in
sbb
int
cwtl
hlt
push
dec
out
inc
in
addr16
dec
pop
inc
or
push
add
testb
and
cmc
or
aas
je
add
pop
sbb
std
jmp
das
inc
cmpb
sbbl
inc
cmc
lods
or
inc
xchg
out
subb
and
jns
aaa
sub
das
repz
or
mov
mov
outsb
scas
dec
nop
div
mov
inc
xchg
add
inc
xchg
stc
addb
jp
dec
loopne
loop
lea
adc
sbb
jnp
fmul
addl
adc
or
cmpps
incl
lods
test
cmp
dec
addl
inc
or
cmp
or
or
or
hlt
popf
mov
rorb
shll
stos
lcall
lods
pop
inc
mov
xchg
out
mov
test
mov
sbb
fists
hlt
or
ss
and
enter
and
cmp
inc
rcll
push
mov
shrb
and
mov
add
fs
adc
arpl
add
mov
ljmp
fs
pusha
ss
mov
or
cmp
pop
add
add
jo
add
pop
push
in
enter
or
mov
testb
xchg
cmpsb
mul
jnp
rclb
inc
and
je
jbe
fwait
add
add
xorl
cs
add
lcall
sub
enter
loop
xorl
out
or
icebp
mov
push
loop
daa
loopne
adc
dec
jp
sbbb
pop
mov
fisttpl
mov
push
mov
or
lock
xor
popa
sbb
test
sbb
ja
jmp
xor
addr16
sub
adc
adc
pop
fs
out
cmpsl
xor
push
nop
or
push
push
decl
xchg
push
test
pusha
xchg
clc
js
imul
out
or
cld
pop
loopne
nop
add
inc
cmp
or
jp
mov
jno
test
vpabsw
or
shr
ret
out
daa
add
sub
cmp
add
add
cmp
push
lock
andb
inc
test
add
insl
adc
loopne
lock
jnp
pop
mov
xor
mov
and
popa
inc
inc
cmp
push
fiaddl
popa
mov
int
sbb
mov
loopne
inc
jl
xor
dec
loopne
cmpsb
or
add
jns
or
pop
cmp
sub
add
dec
adc
inc
or
ss
push
pop
xorb
fistpll
mov
loopne
pop
pop
sub
add
or
aas
and
cmp
pop
push
add
enter
pop
cld
incl
dec
and
inc
roll
leave
pop
out
andb
enter
pop
loopne
lock
add
out
rolb
or
clc
adc
xchg
sbb
sub
in
ljmp
fs
or
sub
mov
mov
adc
icebp
ljmp
loope
loop
xor
sub
inc
pop
outsl
jg
arpl
faddp
pop
pop
xchg
aam
pop
add
sub
jg
das
cwtl
add
mov
cmp
mov
and
cli
sbb
in
inc
js
icebp
hlt
jnp
adc
lretw
ss
sbb
fdivl
out
or
add
loopne
push
popa
in
inc
and
pushl
push
pop
inc
es
add
add
jg
jno
in
insb
mov
jp
inc
cmp
sbb
test
xor
gs
cmp
in
imul
pushf
cwtl
mov
push
xchg
psrld
int
xor
sbbb
and
or
cmp
ret
sbb
dec
adc
es
jno,pt
jnp
xchg
in
cmp
in
and
in
push
mov
test
dec
hlt
and
dec
jo
loop
mov
xchg
pop
fldl
adc
nop
pop
or
inc
mov
or
or
nop
std
cmp
dec
pushf
subb
sub
and
and
push
add
sub
add
mov
sub
adc
inc
shrb
notl
in
arpl
nop
add
add
loop
sub
call
pop
or
xor
or
xor
inc
xor
add
outsb
add
jg
in
inc
mov
adc
jne
enter
minps
subl
add
xchg
cli
push
inc
rorb
mov
mov
mov
cld
push
in
icebp
repnz
adc
jo
push
pusha
mov
imulb
addb
or
inc
sub
adc
and
add
repnz
add
test
add
ljmp
arpl
adc
mov
daa
pop
or
decl
imul
jno
notl
negb
mov
inc
mov
or
dec
in
loop
pusha
pop
inc
xor
loop
pop
test
and
add
mov
sub
out
ss
and
out
mov
dec
out
in
mov
stos
out
jo
pop
mov
clc
and
lret
test
add
scas
fimull
ds
add
inc
and
push
loopne
mov
add
cld
xchg
push
fs
cmpsl
hlt
inc
incb
mov
pop
js
mov
pop
jp
sub
push
adc
js
pop
out
xor
je
addr16
mov
add
xchg
aaa
lock
leave
adc
decb
mov
adc
add
imul
pop
xchg
push
jl
xor
and
jne
pop
push
cli
into
push
or
test
push
out
mov
insl
xor
and
jo
or
cmp
add
pop
out
dec
mov
adc
push
int3
outsb
sbb
sub
add
int3
add
sub
adc
cmpsb
in
add
sub
pop
dec
stos
xchg
cli
rcrb
out
dec
call
adc
xor
and
call
cmp
jns
inc
cmp
repnz
imul
orb
mov
flds
or
mov
add
mov
popf
mov
out
jmp
sub
mov
out
push
nop
pop
icebp
mov
out
lock
test
test
sbb
ret
mov
movsl
mov
and
fisttpl
sbb
push
pop
sbb
add
or
pusha
add
std
dec
push
negb
sbb
clc
faddl
ret
and
and
add
xchg
cli
mov
mov
push
adc
data16
test
icebp
push
js
xchg
mov
rolb
mov
mov
test
and
jo
aad
movups
popa
xor
int
pop
push
push
jo
test
lcall
add
ret
into
lret
adc
dec
push
or
add
fisubrl
add
mov
pop
call
push
pause
or
or
jp
cmp
sbb
mov
retw
test
notb
aaa
inc
clc
pop
dec
mov
or
add
mov
mov
or
xchg
movsb
and
cld
inc
push
or
or
adc
mov
pop
andb
adc
leave
xchg
add
mov
adc
add
mov
push
or
add
sbb
xor
xor
dec
push
sub
test
ljmp
or
clc
mov
jp,pn
xchg
rolb
cmp
faddl
push
xor
jb
adc
cmp
pop
movsl
fsubs
out
mov
sub
lock
mov
test
xchg
sub
movsb
movsl
cli
fwait
mov
xchg
push
push
mov
add
inc
loope
out
cmc
cmpsb
push
or
push
fs
push
inc
push
push
pop
pop
dec
pop
mov
inc
sbb
and
inc
fdivl
adc
popa
add
cmp
adc
push
cmpsl
out
test
mov
sub
sbb
push
es
mov
jo
ds
pop
xchg
jns
push
mov
jne
or
out
notb
dec
in
mov
sti
jg
scas
inc
fwait
add
cmpb
into
pusha
xorl
out
call
push
pop
jl
add
out
pushf
test
sub
sub
lcall
and
sub
dec
into
dec
inc
mov
add
roll
mov
test
add
mov
push
xor
mov
ss
fiaddl
lret
rclb
or
adc
jmp
xchg
adc
mov
pop
add
push
push
lods
mov
insb
jmp
test
mov
outsb
and
or
push
adc
je
lcall
add
fs
sahf
add
cmp
sbb
cmp
adc
cmc
pop
lock
xor
hlt
and
mov
das
and
ds
cmp
pop
and
sbbb
or
addb
pop
adcb
jmp
pop
mov
or
mov
adcb
push
dec
sbb
jo
inc
or
mov
fcmovnb
sbb
xor
arpl
fisttpll
add
adc
fsubrs
dec
add
xor
mov
mov
icebp
adc
pushf
mov
pop
add
adc
movsb
mov
enter
add
inc
inc
jnp
add
jg
lcall
sbb
fdivrs
push
sbb
addr16
out
shlb
mov
mov
movsb
aam
and
pop
pop
add
cmpsb
pusha
movsb
xchg
nop
add
outsl
adc
or
sbb
bound
adc
mov
xchg
lods
pop
xor
add
outsb
dec
xchg
sub
sub
push
jno
inc
idivl
fs
insb
imul
add
shld
js
and
testb
push
adc
xorb
adc
das
sbb
js
xchg
call
or
andb
sub
mov
sub
ljmp
mov
lret
subb
test
lock
push
jnp,pn
mov
mov
int
les
insb
or
lea
das
addl
mov
xchg
xor
call
xor
mov
movsb
sbbb
push
xchg
addb
fs
adc
adcl
mov
icebp
sbbb
les
jl
mov
fadds
or
faddp
push
jb
adc
es
pop
lret
in
and
fwait
inc
mov
lock
out
cli
inc
sbb
adc
insb
rolb
mov
mov
add
xor
pusha
push
enter
repz
adc
push
cli
cs
inc
cmpsb
cmp
loop
cli
pop
and
cmp
andb
pusha
testb
out
inc
jmp
dec
out
repz
push
sub
add
in
fcoms
xchg
ret
add
adcb
mov
pop
testb
jmp
inc
jp
sar
sbb
or
xor
dec
push
call
xchg
mov
iret
inc
mov
sbb
push
dec
pop
push
ja
mov
adc
mov
lods
add
stos
stc
add
enter
add
es
pusha
wbinvd
popf
sahf
push
dec
lret
add
cmp
adcb
idivb
sub
push
shlb
incl
xchg
test
push
mov
push
or
inc
mov
jp
test
inc
xchg
mov
ret
push
push
testb
push
xor
sbb
mov
mov
bound
mov
es
movsl
rolb
push
adc
push
mov
pop
push
in
mov
aam
xchg
jp
mov
adc
lret
xor
mov
lret
push
mov
cmp
wrmsr
xchg
pusha
ljmp
pop
jb
jne
pop
or
loop
jl
outsb
mov
fs
rclb
dec
mov
ret
in
jl
push
enter
outsl
inc
lret
mov
fmuls
pop
xor
sbb
sti
dec
add
mov
sbbb
test
loopne
pusha
bound
and
cmp
push
and
and
dec
sbb
add
loop
or
ja
inc
or
outsl
lods
xor
inc
or
sub
scas
add
loopne
loope
cwtl
add
inc
sub
out
add
sbb
call
add
call
pop
rolb
or
push
andl
xchg
cwtl
xchg
call
pop
mov
add
xchg
subl
aaa
cli
jg
lds
or
mov
jns
shlb
loopne
or
cmp
mov
and
xor
test
jle
push
dec
ret
sbb
pop
out
mov
inc
and
out
or
inc
pop
bnd
cmp
xchg
mov
cmpsb
push
push
rorb
in
push
or
xor
sbbb
sub
stos
mov
test
inc
outsb
jg
mov
clc
mov
out
fadd
cmp
and
test
add
push
orb
mov
or
inc
adc
or
add
sbb
loop
subb
mov
xlat
cmpsb
mov
pop
test
mov
fs
push
out
sti
popa
popa
roll
and
loopne
add
sbb
test
mov
out
cmp
faddl
shr
push
sub
jge
pop
outsb
or
inc
sbb
sbb
pop
fldcw
push
xchg
jno
xchg
or
sub
sbb
sbb
scas
stos
inc
andb
or
xor
mov
call
sub
sub
arpl
adc
sbb
cmp
scas
in
pushl
mov
pushf
dec
mov
pop
pusha
xchg
sbb
or
and
pusha
scas
xchg
loope
in
dec
cmp
and
fisubrs
in
inc
sahf
adc
pop
or
les
inc
loopne
jo
cld
inc
xchg
fimuls
and
sbb
inc
popa
test
add
pop
pop
or
dec
pusha
xor
pop
ds
cmpsb
scas
rolb
js
jge
xchg
mov
push
push
xor
pop
cmp
fidivl
mov
xchg
daa
insb
add
and
add
dec
mov
push
sti
lds
and
loopne
test
int3
sar
mov
xchg
test
push
inc
or
outsb
push
insl
shrb
add
xor
jp
andb
repnz
ja
jmp
sub
ret
push
mov
mov
imul
mov
adc
icebp
repnz
adc
xor
push
add
mov
push
sub
inc
popa
jg
rclb
out
cmc
clc
pusha
daa
xorb
sbb
inc
loopne
dec
incl
mov
out
loopne
pop
push
loopne
mov
sub
cld
and
les
mov
nop
push
jo
adcl
push
pusha
jne
inc
add
adc
add
fstl
cmpsb
sbb
pusha
pop
mov
clc
pop
or
nop
leave
faddl
das
xor
add
pop
dec
push
adcl
pusha
sbb
sbb
decl
add
xchg
aam
mov
and
clc
or
orl
xchg
inc
pop
push
nop
je
mov
mov
sbbb
pushf
sub
push
mov
ds
add
jg
pop
pop
adc
mov
or
adc
mov
cmp
cmp
add
pop
cmpsb
fwait
popa
seto
les
outsl
and
rolb
orl
jg
push
jbe
or
add
add
cmp
mov
mov
push
cmp
cmpsb
push
cmpl
and
or
scas
mov
sub
jnp
mov
sbbl
mov
nop
fcoms
sbb
mov
test
hlt
mov
cmp
push
jg
scas
xchg
xchg
add
add
sub
or
or
push
adc
lret
fiaddl
add
xchg
or
inc
and
jp
ljmp
sbb
push
mov
or
fildl
pushf
sub
sub
data16
lock
sub
adc
and
test
dec
or
cli
prefetch
push
pop
and
sbbb
sub
dec
jo
sub
mov
aaa
jo
int
nop
adc
sbb
mov
data16
mov
cmp
xor
xchg
xor
mov
les
clc
and
mov
sub
add
jg
loope
push
test
add
jg
sub
pop
mov
jbe
adc
mov
data16
sbb
pop
jp
orb
addb
add
push
shrb
lea
xor
mov
orb
cltd
in
add
lods
test
xchg
fs
jb
xchg
jo
xor
adc
orl
mov
cli
push
or
add
out
or
shrl
je
je
add
adc
ljmp
fbld
enter
loop
mov
test
and
and
pusha
sub
fs
jmp
lcall
pop
and
push
push
in
jno
fdivs
dec
push
out
test
incb
bound
jp
xchg
ret
out
test
jg
cmp
xor
push
out
adc
movaps
add
or
aaa
shrb
fidivs
push
xchg
cs
nop
xchg
push
clc
sbb
sbb
push
jp
loopne
lret
or
loop
add
add
push
push
dec
xor
mulps
push
or
shr
mov
loop
xchg
inc
push
inc
in
dec
dec
mov
adc
jmp
mov
push
jnp
repnz
js
sahf
cld
fists
cmp
out
fisubl
or
mov
aam
sub
shrb
out
clc
rcrb
adc
adc
and
xor
push
pushw
pushf
xor
xor
decl
stos
pusha
pop
push
iret
into
ljmp
xor
out
and
xor
xor
xchg
sbbl
xor
push
stos
jno
js
pushf
notb
add
push
cwtl
push
push
loope
push
pop
test
fdivs
stc
andb
adc
out
mov
and
sbb
nop
or
lods
das
sub
or
xor
bound
mov
push
pop
shlb
push
and
xchg
les
test
adc
cltd
repnz
in
cs
dec
shrb
test
lock
daa
loope
pusha
add
xor
sbb
cmp
clc
or
adc
cmp
push
push
add
lea
push
mov
rorb
sbb
loop
jo
sbb
outsl
adc
outsl
sub
and
xorl
and
xor
and
rsm
and
ret
sbb
xor
adcb
icebp
jno
pushl
pop
ss
xor
dec
inc
adc
push
nop
in
lock
pop
and
push
inc
clc
mov
or
pop
and
adc
xor
cld
mov
pop
push
xor
jp
jbe
out
jnp
cmp
inc
dec
sti
clc
movsl
add
pop
popa
jecxz
in
xchg
in
in
push
pop
xor
adc
sub
pop
push
pusha
mov
test
and
bound
popa
cmp
and
and
aad
jmp
sbb
add
pushf
roll
inc
add
or
mov
sbb
fcomip
jmp
dec
xor
jo
push
data16
push
cltd
pusha
dec
int
dec
xor
test
sub
inc
into
push
and
xor
movsl
loopne
inc
pusha
adc
ljmp
mov
sar
bound
xor
mov
or
dec
push
add
adc
jp
jg
std
add
jno
push
jae
adc
push
cmp
push
stos
fdivp
addl
and
add
nop
or
leave
rolb
mov
xor
xchg
das
add
pop
bound
dec
or
into
cli
push
dec
pop
inc
adc
and
lret
outsl
clc
pop
ret
fcmovbe
pop
dec
inc
mov
mov
pop
scas
test
je
mov
rcr
push
mov
gs
aam
add
add
add
xor
pop
js
pushf
fadds
sbb
xor
cs
inc
inc
mov
mov
out
testb
ljmp
push
fiadds
jecxz
mov
loopne
adc
mov
outsl
mov
add
mov
ficoml
rorl
add
or
pushf
jo
add
popa
and
test
in
mov
add
enter
ficompl
mov
fcmovne
push
mov
add
sbb
inc
mov
into
rcr
add
sbb
add
xchg
dec
mov
sub
cld
cmp
add
out
jg
adc
cmp
add
and
bound
cs
jnp
xorb
pusha
mov
cli
movsb
adc
ljmp
sbb
lods
inc
dec
sbb
outsb
vmread
cmp
dec
data16
les
into
sbb
sbb
xchg
cmp
sbb
ret
clc
adc
out
xchg
aam
and
fadds
fmull
in
adc
daa
out
fiaddl
push
sub
test
fnsave
and
sub
lcall
sahf
test
js
rcrb
add
lock
cmp
add
xchg
pop
shlb
mov
mov
cli
inc
popa
rcrb
movsb
xor
inc
add
add
fst
stos
or
add
add
cmpps
into
lds
movl
shlb
xchg
adc
pop
scas
adcl
mov
sahf
inc
push
data16
dec
pusha
or
pusha
pop
test
inc
pushf
or
add
push
inc
test
mov
addl
aas
push
insb
mov
dec
add
lcall
and
jle
outsb
adcb
mov
test
push
bound
adc
test
pop
xor
repnz
inc
lret
mov
sbb
inc
clc
out
dec
dec
pop
push
add
shrl
popa
xchg
mov
test
add
add
and
add
pop
cld
cs
inc
mov
xchg
and
sbb
pop
or
inc
xchg
jp
mov
jnp
outsl
fistl
ret
sbb
adc
and
push
popf
aam
sbb
mov
dec
push
or
sub
push
adc
mov
push
rcr
fcmovnb
arpl
add
shlb
xor
xchg
inc
xor
or
cmpsb
decl
inc
add
fisttpll
addb
mov
inc
mov
pop
pop
addl
inc
and
sbb
mov
call
ds
ret
shlb
pusha
mov
ja
and
lea
sbb
fimuls
xor
arpl
xor
or
fistps
pusha
xor
push
add
loop
cli
pop
mov
add
push
call
adc
outsb
add
jnp
and
pusha
fwait
push
inc
push
pushf
cmpsb
inc
js
fsubrs
dec
pop
mov
push
xor
clc
mov
leave
cwtl
add
dec
xchg
xor
or
lcall
in
out
loope
lcall
push
pop
lret
xor
es
cmp
test
adc
pop
sub
and
adc
inc
add
movsb
add
cmpsl
aaa
or
movsb
inc
inc
inc
pop
xor
inc
shl
and
cmpsb
sbb
cld
pop
pop
push
loop
out
rclb
jo
pusha
test
cmp
and
out
inc
and
adc
loopne
jno
pop
pop
add
lret
popa
xchg
lds
and
ret
sbb
arpl
cmpsb
push
add
ja
aaa
stos
bound
mov
or
and
xchg
loopne
orb
mov
loopne
mov
push
xor
or
orl
fsubrl
mov
xchg
sbb
data16
and
add
and
cwtl
test
push
cmp
xchg
push
scas
clc
lods
sbb
jecxz
adc
push
add
or
rolb
shll
or
icebp
popf
call
cmpl
jle
push
jp
mov
dec
adcb
outsl
jg
xchg
fsub
inc
cmp
push
push
and
ret
add
push
push
pop
and
out
jp
popl
mov
call
inc
inc
fs
pop
push
and
mov
xchg
mov
sbb
jp
sti
dec
dec
sub
bound
xor
or
ljmp
test
rolb
cmpsl
mov
icebp
adc
mov
iret
out
lds
push
adc
add
and
adc
movsb
pop
inc
xchg
test
xor
push
push
and
or
rol
pop
das
lcall
push
xor
addb
push
mov
mov
push
push
inc
sub
inc
cmc
in
inc
data16
ljmp
mov
push
pop
aad
lret
call
std
addl
fs
mov
mov
mov
jnp
sbb
sbb
dec
pop
or
ds
add
clc
add
mov
fdivl
xchg
mov
outsb
push
fwait
pusha
xchg
inc
push
out
or
pop
insb
cmpsb
int3
fsubrl
dec
dec
lds
add
dec
stos
dec
push
inc
jae
pusha
fwait
mov
xor
xchg
push
scas
cmpb
lcall
jae
sub
push
rorb
cmp
rcrl
lock
popa
and
cwtl
nop
sbbb
sub
pop
cld
ljmp
jo
sbb
push
adc
lock
push
jns
sub
in
adc
push
push
pop
in
loope
loope
daa
xor
daa
inc
push
cmp
and
mov
cmc
loop
add
and
clc
pop
das
or
xchg
inc
cmp
xor
jbe
or
negb
imul
fsubrs
and
and
adc
or
pop
cld
xchg
push
int
inc
out
mov
cmp
add
xor
sub
pop
dec
cmp
jg
push
enter
push
adc
popa
jb
push
data16
push
adc
and
pop
jmp
adcb
pop
aad
pop
ret
mov
subb
pop
push
aam
jle
adc
inc
mov
decl
sarb
ss
adc
lock
adc
aaa
pop
inc
and
sti
mov
cmpsb
shll
insl
adc
nop
push
je
jg
push
fnsave
test
leave
fnstenv
xchg
adc
mov
test
pop
inc
dec
xchg
adc
lret
and
fsubrl
pushl
nop
gs
adc
mov
adc
push
adc
cmp
aaa
imul
sbb
add
adc
call
fwait
out
gs
call
in
dec
pop
adc
data16
imul
sub
mov
dec
loope
xor
adc
lods
sub
and
bound
sub
mov
xchg
and
imul
arpl
adc
add
cmc
rolb
hlt
and
test
mov
bound
shlb
add
jbe
loopne
adc
pop
imul
add
push
mov
in
int3
add
push
test
push
inc
jp
fs
mov
push
data16
inc
test
rolb
xor
mov
pusha
push
sub
cmp
sti
push
movsb
adc
out
and
push
xchg
popa
xchg
ds
xchg
clc
shlb
scas
insl
std
mov
out
pop
inc
dec
or
test
mov
outsl
adc
inc
icebp
mov
add
dec
mov
adc
in
arpl
xchg
in
or
loop
dec
cmp
push
push
add
es
pop
jno
pop
test
mov
push
outsl
movsb
enter
dec
push
in
and
inc
outsb
lret
orb
push
push
cltd
jmp
in
iret
mov
shl
cs
inc
rolb
clc
add
pop
pusha
cmp
cli
enter
cmp
aam
add
data16
xor
add
std
sub
mov
outsb
push
loopne
adc
pop
scas
addb
popa
stc
xchg
cmp
inc
mov
push
cmp
rorb
push
test
jb
push
lods
bound
stos
decl
adc
arpl
lret
push
shld
sub
lock
jmp
xor
cwtl
mov
sub
pop
and
incl
jae
ds
scas
xchg
ss
and
clc
incl
out
rolb
jmp
dec
sub
or
pushl
sbb
mov
push
or
push
or
or
xchg
rolb
lods
jo
insb
out
mov
cmp
adc
rorl
cmpsl
out
test
hlt
mov
shll
jb
shll
cmpsl
adc
lcall
cwtl
lret
popa
xor
or
mov
hlt
mov
mov
mov
jne
add
xor
lock
fbstp
add
add
loopne
or
or
add
jno
sbb
add
jmp
inc
cli
test
xchg
inc
rolb
pop
sub
clc
xchg
and
and
and
aaa
inc
mov
popf
pusha
outsb
mov
mov
icebp
fcomps
popl
sar
bound
push
or
xchg
mov
jb
and
in
and
mov
adc
add
add
push
sub
out
xor
int
or
add
dec
xor
and
mov
lods
and
lcall
or
sub
adc
sub
mov
xor
dec
sub
push
in
insb
dec
sub
fs
fwait
inc
ficompl
inc
jne
add
sub
dec
mov
dec
ljmp
jp
add
add
das
movb
es
or
lret
adc
jo
or
xor
xorl
mov
aam
clc
add
lock
out
iret
dec
jge
xor
sub
sub
call
push
add
cmc
addb
push
adc
or
mov
mov
test
fdivl
hlt
push
add
or
subb
or
outsl
out
lods
jno
std
lret
push
ds
jl
adc
ja
pop
mov
add
addb
push
andb
packssdw
add
lret
add
pop
and
outsl
jl
icebp
adc
lock
mov
lock
stos
sbb
and
add
mov
pop
mov
out
jle
or
adc
pop
fisttpl
test
inc
push
shlb
sbb
pushf
mov
cli
outsl
hlt
push
xor
movsb
or
jno
jp
or
lock
add
push
cwtd
and
sub
dec
push
cmc
push
fs
into
ret
sbb
sub
adc
or
xor
mov
cmp
fidivrl
out
adcb
cmc
jl
inc
and
ffree
popf
cli
pop
jns
xor
or
fs
adc
jno
loope
xor
lcall
mov
clc
add
push
shrb
jl
fsubr
or
in
xchg
push
jl
mov
adc
insb
dec
mov
xor
pop
negb
xor
nop
or
daa
icebp
ja
loopne
dec
xor
fs
xchg
sub
dec
jbe
mov
out
or
adc
pop
shlb
andl
sar
adc
or
xchg
mov
sub
movsb
xchg
stos
out
push
xchg
xorb
and
outsl
add
push
inc
or
xchg
or
shlb
orb
out
mov
add
push
icebp
inc
or
pop
cmpsb
les
push
mov
mov
fnsave
push
jl
push
pushf
push
iret
inc
addb
add
or
outsl
pop
sahf
jno
adc
fs
outsl
adc
mov
clc
add
inc
xor
cmpsb
xor
cmp
sub
push
and
sbb
or
sbb
rcrb
fwait
and
push
xor
or
inc
daa
lea
and
pop
mov
test
push
add
add
lds
cmp
lods
mov
add
inc
icebp
scas
pop
cmp
adc
or
repnz
scas
push
out
pop
mov
or
jp
adc
imul
xchg
push
adc
ja
stos
movb
or
mov
inc
push
inc
mov
mov
add
mov
mov
mov
xorl
push
mov
decl
jle
mov
inc
aam
push
inc
cmp
cli
mov
clc
clc
orb
test
push
cmpsb
mov
in
je
addb
ret
push
mov
pop
push
cs
imul
jbe
lds
add
mov
idivb
pop
pushl
loop
fs
in
mov
popa
adcl
inc
pop
popa
xor
and
jecxz
add
out
gs
mov
int
or
adc
in
setb
push
test
adcb
dec
sub
sub
sbb
and
add
daa
loopne
fidivrl
orb
sbb
mov
push
sub
out
inc
and
mov
cld
xlat
mov
adc
es
push
popa
sub
xchg
cli
push
mov
sbb
adc
lds
cwtl
rcrb
and
shrl
xchg
adc
inc
dec
dec
imul
xor
sub
dec
pusha
es
mov
daa
sbb
push
or
daa
xorb
daa
adc
rclb
scas
and
push
out
dec
pusha
or
and
cmc
jmp
cmp
jg
icebp
fbld
xchg
loopne
add
cmp
adc
xchg
cmc
ret
shlb
loopne
mov
mov
and
push
xor
cmpsb
inc
and
addb
and
push
cmp
pusha
mov
in
lcall
add
xor
inc
jne
add
pop
repnz
cmp
adc
shll
xor
xor
insl
ret
mov
cmpsb
pop
push
lds
loope
xor
push
inc
adc
ljmp
pop
adc
mov
mov
movsl
leave
xor
pushl
or
addb
loop
and
and
out
inc
cmp
cmc
pusha
daa
insb
xor
pop
jbe
data16
in
out
xchg
xchg
xor
pop
xchg
jns
xor
loopne
and
xchg
fcompl
imul
push
dec
ret
or
andb
pop
inc
xchg
fisubs
inc
and
push
nop
add
sbb
lock
xor
and
in
mov
into
xor
and
add
cmp
add
add
cmp
pusha
jno
push
sub
lock
nop
cs
gs
outsl
movsb
mov
adc
and
hlt
ret
and
test
adcb
push
cli
dec
rolb
shlb
add
test
ljmp
inc
js
stos
jnp
jns
jo
fidivl
loop
add
je
xchg
es
and
dec
or
shlb
test
adc
hlt
int
dec
loopne
sub
mov
pop
push
inc
divb
cmp
cmp
into
aaa
bound
pop
mov
inc
ret
mov
aad
push
mov
and
int
pop
inc
add
out
adc
popa
mov
sbb
pop
jae
je
out
push
movsb
mov
scas
add
inc
push
in
sbb
sbb
loop
add
add
ljmp
pop
add
adc
mov
adc
pop
jnp
icebp
outsl
aaa
or
mov
jo
jp
xchg
sbb
cld
sahf
test
inc
loop
das
jo
roll
or
or
pop
or
or
adc
mov
and
scas
adc
push
push
add
cmp
add
imul
aaa
mov
out
leave
push
jno
push
adc
incl
cmp
aad
xor
inc
cmp
jno
sbb
cld
fisttpl
lock
pop
adcb
lds
add
in
in
mov
cmpsl
gs
mov
outsb
adcb
pop
test
outsb
sar
mov
or
or
loop
sbb
pop
scas
mov
cld
ljmp
push
and
mov
sbb
pop
push
and
cmp
add
and
sbb
nop
add
push
mov
jo
add
mov
xchg
push
mov
sbb
and
nop
call
jle
cmpsl
popf
rclb
xchg
push
fidivs
xor
mov
sbb
add
cmp
pop
mov
mov
bnd
sbb
aad
aaa
pop
es
insb
mov
lock
or
xchg
push
push
sbb
add
and
jo
sub
jmp
mov
push
cmpsl
jnp
sub
xchg
xor
test
jp
test
xchg
sar
adc
and
xchg
push
test
adc
cs
fistl
push
cmp
and
sbb
push
loope
mov
adcb
add
and
adcb
enter
loopne
mov
xor
and
inc
dec
imul
movsl
addl
mov
loopne
test
lock
pop
pusha
or
ljmp
call
in
or
pushf
adc
shlb
mov
inc
inc
stos
data16
pop
inc
inc
in
pop
pusha
clts
pusha
xchg
rcrb
sar
xor
nop
or
adc
sbb
lret
into
shll
and
push
pop
or
pop
push
push
setb
pusha
out
inc
aaa
or
jbe
fwait
jo
adc
mov
and
add
mov
or
adc
push
or
dec
push
cwtl
inc
or
sub
pushl
pop
add
xor
rcrb
or
xchg
sarb
aaa
and
cmp
test
call
xor
adc
sub
sahf
loop
nop
sub
inc
xchg
jae
subb
cli
dec
je
adc
shrb
and
je
mov
jp
pop
inc
std
or
clc
push
or
mov
or
icebp
fwait
cmp
lar
inc
mov
pusha
into
out
xor
mov
ja
nop
add
mov
pop
repnz
inc
test
push
mov
adc
arpl
orb
inc
and
mov
jg
jecxz
aaa
pop
inc
jno
add
mov
ss
inc
loopne
loopne
mov
out
mov
divb
jg
push
and
pop
out
pop
adc
out
in
jb
add
adc
mov
fcoms
xor
push
dec
or
pop
nop
xor
or
incl
ret
add
test
xor
add
xor
jp
xor
jl
or
add
xor
jp
adc
jg
and
inc
into
push
xchg
ss
pushf
adc
inc
jb
push
or
mov
ljmp
mov
cmp
xor
push
mov
adc
jg
out
jo
cmpl
dec
xor
add
sbb
add
pop
cld
sar
in
adc
push
fcoms
aas
or
mov
push
sub
jl
lods
mov
cmp
mov
andb
push
nop
xor
add
push
adc
inc
jp
jmp
out
bound
icebp
nop
mov
jo
mov
pusha
add
xchg
sbb
mov
dec
push
sbb
js
mov
push
mov
sbb
add
in
clc
dec
loopne
add
test
in
rolb
jnp
add
test
push
fmuls
add
pop
pop
jp
xor
add
add
and
adc
jg
or
rolb
xchg
adc
push
cs
or
sub
movsl
rorb
insb
push
loop
add
xchg
das
cmpsb
cmc
inc
xchg
adc
adc
jbe
add
inc
leave
mov
sbb
stos
push
leave
sub
and
mov
pop
add
mov
lock
cmp
imul
jge,pt
or
and
and
add
jge
or
jns
addb
add
add
test
add
lds
testb
push
sbb
nop
mov
out
mov
nop
int
or
bound
add
lock
add
pusha
add
push
inc
jbe,pt
add
and
ds
dec
xor
leave
pop
dec
jne
inc
mov
int3
push
pusha
pop
test
or
adc
dec
pop
inc
popa
add
pop
loope
jns
add
fldt
or
in
push
push
shlb
loope
mov
js
loopne
aaa
fwait
clc
push
jecxz
sarb
adc
repnz
sbb
loopne
loope
jbe
les
cmp
sbb
push
shrl
imulb
inc
int3
mul
in
pop
jno
loop
add
testb
hlt
jp
xor
and
pop
ljmp
add
or
jo
dec
je
js
sbb
dec
pop
or
mov
bound
jecxz
mov
test
jl
sbb
xchg
scas
xor
sub
fcomps
jmp
jge
push
insb
rcl
test
imull
insb
loope
cs
fildl
jno
test
mov
fwait
cli
dec
dec
xor
push
jl
xor
and
add
ds
popa
dec
in
fdivr
addl
movsb
jno
cli
sub
jbe
mov
lcall
je
scas
or
dec
and
js
dec
loope
push
ret
push
push
std
push
int3
push
xchg
jno
loopne
add
pusha
sbb
shlb
loop
xchg
outsb
repnz
lock
scas
repnz
pop
ljmp
jo
fmuls
leave
sub
pop
cmpb
jns
mov
ret
push
jmp
xor
jl
mov
fs
xor
out
mov
std
sbb
daa
lock
mov
dec
or
add
out
in
sbb
cmp
test
ljmp
cwtl
add
incb
test
cli
add
and
inc
dec
inc
or
sub
adc
test
pop
ret
les
nop
cmc
pop
inc
push
or
jp
test
or
or
or
jo
add
sbb
pop
add
mov
mov
outsb
addb
pop
jne
jle
insb
add
into
adc
mov
sbb
and
imul
pusha
or
xor
fisubrs
jae
mov
decb
lock
movsb
add
mov
push
inc
push
push
jmp
dec
cmpsb
adc
push
pop
mov
add
aaa
push
incl
fdiv
icebp
jo
push
inc
inc
adc
cmpb
orb
and
pop
adc
adc
ss
pop
cmp
adc
add
stc
adc
or
adc
orl
xor
aas
add
adc
jmp
jmp
rcrb
add
int
add
xorl
enter
pop
sub
pop
add
cmpsb
jp
add
push
outsl
sbb
imul
push
pop
lretw
frstor
ljmp
addl
pminsw
xchg
cmp
sub
and
dec
xchg
rorb
leave
decl
xor
push
add
inc
sub
adc
add
mov
sbb
pop
mov
dec
add
sbb
add
rolb
mov
in
pop
loopne
push
sbb
mov
pop
ret
push
in
das
pop
or
mov
inc
sub
inc
das
roll
test
xchg
shrb
lcall
xor
xchg
rcr
sbb
lock
call
dec
das
push
xor
iret
loopne
rcll
sbbb
and
les
incb
testb
dec
adcb
lcall
int3
mov
xchg
inc
add
sbb
mov
pop
lea
clc
int
adc
push
add
js
dec
imulb
ret
push
and
jecxz
add
incb
push
push
in
or
mov
and
loop
out
adc
repnz
sbb
fldt
pop
hlt
jnp
pop
scas
pop
sbb
shrb
sbb
dec
pusha
mov
sbb
mov
dec
mov
xchg
jb
stc
push
sub
xlat
pcmpgtd
push
mov
lock
cli
test
and
mov
movl
xchg
shl
loopne
out
sub
mov
push
pop
sbbb
xchg
sahf
scas
clc
or
xchg
test
ret
sbb
sbb
ds
add
lahf
sub
push
btr
test
cmp
or
pusha
pusha
or
add
ss
pop
fmul
mov
dec
or
add
add
adc
jne
xor
mov
dec
rcrb
and
mov
fistps
sub
inc
test
pop
sub
outsl
or
cs
outsl
adc
mov
mov
rorb
shrb
add
or
and
adc
ss
scas
es
mov
adc
push
xchg
hlt
adc
cli
mov
adc
icebp
and
add
pop
xchg
jne
or
cld
jno
sbb
shrb
xor
cmp
cmp
shrb
or
add
enter
rolb
jp
mov
fiaddl
popa
cld
xor
data16
test
jne
sbb
sbb
and
adc
push
and
jle
mov
icebp
sbb
jo,pn
out
pusha
add
ss
sbb
mov
sub
orb
push
xchg
fimuls
sub
loopne
push
inc
insb
orb
mov
adc
or
loopne
mov
pusha
in
sub
or
and
mov
mov
push
cld
negb
sbb
test
or
orl
stos
lcall
and
push
jmp
add
adcl
daa
add
inc
mov
adc
mov
and
add
sbb
leave
add
pop
and
in
sub
nop
test
sbb
add
mov
notb
push
dec
dec
cmp
and
insl
lods
mov
sbb
hlt
and
shrb
sub
add
sub
cmp
cmp
and
lea
pop
mov
mov
ret
fdivp
mov
loope
add
sub
ds
or
lcall
cwtl
xor
or
push
iret
mov
test
mov
clc
loopne
mov
adc
jo
addb
mov
push
mov
or
sub
orb
push
sar
push
mov
add
rolb
outsl
inc
aam
xchg
inc
loopne
loope
shl
mov
mov
mov
or
ds
fwait
push
cmpl
pop
in
aam
push
inc
xor
gs
inc
cmpb
fs
or
mov
sbb
aaa
mov
mov
inc
cmp
es
outsb
mov
pop
into
add
ljmp
jo
adc
push
imul
pop
es
cli
decl
dec
mov
into
rclb
dec
or
or
add
add
adc
mov
lret
cli
mov
cmp
push
push
mov
xor
divb
pop
pop
or
inc
adc
sub
loopne
sub
push
xor
adc
clc
adc
inc
pop
mov
fcompl
icebp
pop
sbb
add
sub
add
pop
add
out
mov
out
outsl
cli
adc
dec
mov
data16
mov
std
pop
inc
jecxz
les
xlat
xor
fs
adc
add
push
or
mov
jl
pusha
cmpb
or
lock
popa
sarb
ljmp
sub
mov
fucom
js
add
pusha
shrb
mov
adc
fists
inc
mov
icebp
in
pop
inc
push
cmp
lea
push
inc
or
or
adc
sbb
add
lock
dec
outsl
cli
cmc
mov
mov
pop
push
push
cmp
dec
xor
inc
and
push
push
dec
subb
popa
pop
mov
cli
cmp
or
push
in
inc
ljmp
cld
add
popa
dec
or
sub
xor
push
scas
imull
in
lock
add
xor
sub
js
add
dec
cs
push
jmp
or
mov
jae
add
xor
and
push
ret
adc
add
decl
xchg
lock
sub
xchg
into
inc
push
push
adc
out
mov
or
add
in
and
mov
sbb
movups
ljmp
pop
pop
adcl
mov
lock
sbb
cmp
sbb
or
fwait
sbb
push
popa
dec
push
outsb
mov
sbb
mov
jecxz
lock
push
fidivl
push
rcrl
loop
ret
add
xchg
jg
mov
or
sbb
mov
sbb
mov
sbb
ret
mov
xchg
inc
and
fiadds
inc
leave
xchg
test
cld
inc
lock
jl
ficoms
push
mov
movsl
or
or
ret
lods
mov
pop
push
aas
clc
jp
test
push
loope
mov
sub
xchg
mov
scas
clc
out
add
negb
mov
int
mov
add
or
outsb
addl
std
push
call
push
or
sub
nop
jo
adc
or
push
rcr
adc
out
push
adc
push
sahf
mov
cmp
lret
jb
test
mov
cmp
push
cmp
ljmp
repnz
cmc
push
cmp
nop
xchg
clc
aaa
clc
push
add
pusha
add
or
dec
pop
pop
and
inc
xor
add
cmp
pop
mov
hlt
js
incl
jl
adc
xor
or
mov
aad
dec
and
xchg
out
pusha
cmp
inc
cwtl
inc
add
loop
push
push
inc
dec
cwtl
inc
adc
mov
xchg
jmp
in
sub
sbbl
mov
nop
dec
out
sub
mov
and
nop
sub
xchg
sbb
and
shlb
ss
add
or
jbe
mov
push
in
cmp
jge
inc
mov
aad
lock
add
or
mov
add
sub
outsb
push
sbb
inc
out
popa
jno
outsl
clc
popf
mov
mov
push
mov
add
jne
or
lret
jo
call
test
xor
sub
cld
ret
xchg
push
pop
aad
loop
sbb
add
mov
jg
mov
lcall
outsl
call
push
lcall
xchg
push
inc
add
insb
outsl
inc
mov
push
nop
testl
jmp
and
adc
jbe
or
push
push
shlb
test
js
sub
mov
jo
add
orb
add
or
movsb
lods
sbb
push
push
nop
push
pcmpeqb
and
negb
jo
or
pusha
andb
push
cli
ja
outsl
cli
cli
mov
xor
pop
shrb
and
push
jne
enter
push
repnz
xor
adc
mov
mov
pusha
cwtl
pop
mov
subb
lea
add
sub
jp
movsb
cmpsb
in
pop
mov
sub
or
test
push
pop
xor
pusha
adc
pushl
mov
push
in
gs
jnp
fdivrs
add
rorb
nop
push
jle
sbb
mov
into
out
add
in
es
arpl
add
push
add
dec
dec
pop
dec
mov
lcall
inc
test
mov
fwait
mov
pusha
pop
pop
or
loopne
dec
or
push
sbb
in
add
inc
xchg
add
jp
out
adc
inc
mov
ljmp
js
aas
loope
xchg
scas
xchg
rcrl
dec
push
test
leave
push
pushl
call
loope
adc
icebp
sub
icebp
xor
adc
inc
jo
js
fdivl
xchg
stos
divb
nop
lea
nop
std
adc
lock
pop
push
pusha
or
adc
aad
push
xchg
mov
into
xor
pushl
xchg
fdivs
xchg
mov
jo
mov
push
lea
cmpsl
lods
cmp
loop
pop
dec
cmp
mov
addb
adc
jnp
pop
mov
lds
add
push
nop
shl
push
sbb
push
push
lea
out
push
jle
nop
xchg
adc
in
das
bound
stc
iret
inc
or
xorl
rorb
cli
lcall
pop
in
roll
enter
add
pop
jnp
fs
pushl
sbb
shl
adc
imul
push
add
mov
inc
add
int
adcb
or
and
sub
sub
lea
pushf
push
add
add
and
or
movl
je
add
std
add
jge
add
mov
in
loopne
or
or
push
or
or
popf
mov
add
adc
xchg
dec
cmp
invd
outsb
imul
jb
jg
inc
jnp
test
or
out
sbb
data16
ficomps
dec
mov
clc
push
jne
cs
sbb
jl
pop
lods
mov
das
dec
ljmp
jp
leave
inc
mov
jle
lods
mov
je
andb
or
es
sbb
rolb
add
jecxz
jge
out
add
loopne
hlt
xchg
push
push
push
imul
out
dec
sbb
dec
sub
mov
cld
movsl
inc
and
inc
pop
sahf
add
push
test
adc
sahf
inc
jne
pop
insb
ficompl
movb
lret
js
gs
pop
pop
mov
mov
pop
and
ja
mov
xor
icebp
inc
shlb
push
pusha
sbb
or
mov
and
pop
sti
add
lods
pop
mov
loop
mov
addb
call
sub
add
xor
inc
sub
enter
sbb
bound
adc
outsb
or
adc
sbb
popf
add
dec
rorb
lahf
dec
add
add
lahf
mov
xchg
sub
inc
es
dec
ret
mov
or
adc
cmp
dec
ret
or
inc
movsb
cmp
ljmp
add
inc
inc
dec
into
or
incb
cmp
push
push
or
push
adc
mov
push
ficomps
jp
leave
sub
test
and
xchg
or
ds
test
cmpl
sbb
or
push
sbb
push
mov
cmpsb
sbb
ds
fdiv
ffree
adc
mov
xor
out
rorb
add
jg
add
inc
daa
push
inc
rclb
dec
daa
ss
sar
cmp
pop
sbb
andb
loop
sbb
mov
cmpsb
xorl
or
cli
adc
jle
insb
test
sbb
add
mov
mov
jl
push
dec
mov
mov
adc
dec
loopne
mov
pusha
rorb
and
lock
test
inc
add
or
push
jno
enter
cli
cmpsb
adc
xchg
lock
add
push
cmp
add
test
jg
jp
push
sbb
test
nop
cli
mov
ja
lgdtl
sbbb
mov
xchg
data16
cli
out
lock
push
add
sub
xor
decl
adc
sbb
push
cli
jp
xchg
or
mov
xchg
dec
ror
xor
gs
sub
out
pop
pop
shrl
inc
sub
mov
repnz
xor
pop
push
mov
mov
mulb
xor
or
xor
add
loopne
push
data16
fcomp
aam
outsb
cmp
or
and
ljmp
test
push
add
scas
sbb
or
ss
or
std
sub
xchg
decb
add
add
lods
push
and
and
mov
decb
and
outsb
sbb
and
adc
dec
push
and
fidivs
jbe
sbb
jle
cs
pop
data16
bound
sahf
scas
sbb
divb
add
push
fwait
imulb
push
adc
add
add
call
stos
rclb
and
dec
jnp
xchg
xchg
add
sbb
xor
mov
xchg
stos
scas
cmp
jo
xor
es
pop
lahf
mul
mov
dec
fsubs
aas
adcl
add
xlat
shlb
sti
push
jl
push
stos
loop
ljmp
mov
pop
out
popa
add
mov
testb
xor
shlb
mov
out
into
xchg
dec
xor
clc
rolb
sub
pop
mov
stos
mov
sbb
ds
stos
mov
inc
inc
loope
int3
dec
fs
lods
mov
lds
pop
dec
and
stos
cmpsb
jo
jmp
adcb
push
fsubs
push
test
out
adc
cmpb
add
test
add
push
hlt
loope
fisubs
push
or
pop
add
mov
pushf
and
mov
or
mov
add
add
and
jge
mov
in
loopne
xchg
leave
sub
add
dec
pop
aaa
jnp
jl
stos
push
hlt
jg
test
icebp
add
add
adc
je
loopne
daa
std
outsl
push
sub
jp
mov
jae
inc
clzero
shlb
mov
sub
mov
push
mov
mov
or
cmpl
sub
push
jo
cmp
insb
add
inc
outsl
mov
insb
inc
stos
insb
sub
or
fs
lea
jl
mov
mov
or
inc
or
pop
and
out
loopne
mov
andb
xchg
loop
sub
loopne
or
or
adc
dec
js
inc
imul
or
push
pusha
loopne
jp
pop
nop
add
sub
sbb
lock
pusha
andb
out
fs
adc
out
movsl
lcall
push
loope
je
ds
xlat
add
negb
cmp
rclb
pop
mov
icebp
add
popa
repz
xor
test
push
add
xchg
sub
mov
insb
ror
aaa
lods
and
out
subb
or
pop
call
push
rorb
sbb
mov
test
add
inc
add
aaa
dec
mov
add
andb
or
or
jnp
inc
sbb
pop
push
and
outsl
xor
jo
fstpl
sub
shlb
or
dec
and
lds
adc
or
icebp
pushl
add
and
or
sbb
test
add
or
scas
pusha
sbb
jb
daa
inc
and
dec
js
and
or
or
out
pusha
cwtl
xchg
or
js
and
sub
decl
jo
jp
sub
adc
leave
fsubs
inc
clc
dec
or
loop
lret
dec
cli
pop
xchg
jo
and
dec
movb
adc
es
roll
and
xor
jecxz
faddl
iret
ljmp
das
sbb
lock
rolb
arpl
mov
out
loopne
or
imul
loopne
dec
adc
movsl
push
adc
popf
ret
add
push
and
js
add
or
mov
sub
fisubrl
into
sahf
call
dec
movb
rclb
mov
outsb
pop
rolb
cwtl
lock
and
jnp
and
adc
push
or
loopne
fucomip
fwait
mov
push
in
shlb
xor
aam
add
ljmp
rclb
ss
add
nop
jns
test
nop
sbb
push
sbb
cmp
dec
cmc
xor
js
jg
leave
ds
out
lods
roll
rclb
loopne
cwtl
cmp
fistpll
add
ljmp
add
push
das
or
push
pop
mov
cmpsb
movsb
outsl
add
add
aam
inc
andl
mov
xchg
mov
dec
and
js
aam
popa
adc
bound
es
ucomiss
and
nop
lods
inc
and
inc
fldt
cld
loopne
xchg
adc
cmp
sub
fisubl
loopne
test
roll
out
sbbb
loop
aam
jmp
and
inc
cld
scas
bound
xchg
cmp
test
xchg
sarb
in
sbb
pop
jl
das
or
pop
cmpsb
popa
dec
inc
jmp
inc
fildl
pop
pop
pop
test
xor
scas
xor
add
push
dec
and
stos
test
xchg
inc
loopne
adc
dec
and
clc
push
cmp
sbb
mov
filds
movsb
cmp
sub
sbb
test
xchg
jl
test
mov
lea
and
adc
sbb
orb
sbb
daa
or
or
popa
and
frstor
add
shlb
adc
cmp
orb
or
icebp
push
mov
adc
loopne
mov
cmp
addl
int
push
nop
adc
push
test
mov
in
call
repnz
add
push
sbb
inc
inc
cltd
sbbb
adc
shlb
adc
push
scas
mov
out
imul
pushf
xchg
sub
lock
fstpt
addl
daa
data16
mov
xor
mov
cs
mov
jp
mov
out
pop
inc
sub
loopne
push
testb
add
add
pushf
aam
sub
or
or
cmpsb
xorl
and
mov
fs
outsl
addb
jb
loopne
test
aas
xor
inc
sbb
or
sub
push
movsb
lock
jnp
or
cmp
jne
jnp
jl
mov
mov
in
push
push
cltd
nop
adc
xor
mov
add
push
mov
loope
or
adc
cmpsb
push
frstor
pop
std
jg
lock
mov
loope
adc
std
push
mov
notw
iret
xchg
hlt
mov
in
loopne
mov
addl
into
sub
hlt
pop
xor
jae
or
cmpsl
loop
xor
mov
mov
bound
loopne
pop
gs
jecxz
mov
inc
bound
fdiv
push
sbbb
cmp
rcrb
lods
mov
add
sbb
sbb
mov
or
loopne
cld
mov
mov
in
and
out
lock
add
fisubl
xor
add
and
pop
out
push
movsl
add
add
shlb
adc
adc
inc
fisubl
add
xchg
and
incb
dec
mov
cmp
mov
popf
ss
mov
push
inc
xor
lret
daa
notb
imul
mov
call
add
add
mov
hlt
and
inc
push
fdivrl
fistpll
scas
scas
xchg
or
addb
and
jp
xor
sar
add
inc
push
sub
push
dec
fdiv
decl
not
add
or
xchg
bound
inc
inc
inc
xor
xor
inc
push
es
mov
mov
ss
cmp
insb
jl
jge
and
xchg
stc
and
insl
decl
pop
push
pop
add
add
daa
mov
push
add
push
call
jbe
enter
or
jb
ja
gs
mov
jecxz,pn
or
mov
movlps
or
rcrl
fnstcw
rcll
andb
push
bound
pop
pusha
add
and
pop
fnsave
jnp
sbbb
out
add
mov
cpuid
aad
push
adc
es
out
popf
shlb
dec
mov
dec
xchg
jge
aad
sub
sub
fdivs
ret
or
and
ds
inc
in
in
pushf
data16
icebp
in
arpl
enter
adc
add
add
inc
jmp
add
jp
out
aaa
pop
mov
outsb
dec
test
and
adc
dec
sub
ja
in
mov
lret
cmc
icebp
add
lahf
add
fcmovb
stc
adc
addb
faddl
lock
out
xor
pushf
add
add
and
lcall
cld
sbb
pop
and
xor
add
xchg
adc
sbb
outsl
cli
cmp
cmp
and
xor
or
push
add
ljmp
hlt
xor
inc
das
cmp
add
out
pusha
cmpsl
lods
mov
jns
pop
cmp
inc
aas
add
pop
orb
je
icebp
mov
bound
sbb
sbb
lock
lahf
idiv
or
and
aaa
repnz
fcomps
push
gs
sub
adc
jmp
push
ds
mov
es
and
jge
add
push
addl
add
mov
add
aaa
xor
inc
cmp
dec
adc
xchg
test
cmp
sbb
jecxz
sbb
jne
adc
lock
jne
addb
or
inc
and
rorb
lahf
inc
adc
fwait
subb
cmp
movsl
nop
pusha
pop
faddl
sub
xchg
sub
mov
add
add
or
jnp
in
add
rolb
add
push
mov
add
xchg
pop
insb
leave
and
sub
sbb
cs
xchg
insb
pop
inc
loop
xor
sub
test
sub
xchg
rcl
or
movb
and
subl
or
js
inc
push
add
push
cmp
mov
sahf
neg
movsl
hlt
adc
cmpb
or
lcall
push
jl
mov
rorb
sbb
sbb
hlt
mov
xchg
nop
adc
rclb
ret
stos
cs
inc
or
add
add
add
bndstx
dec
insb
inc
dec
popa
jnp
jl
adc
js
or
inc
inc
mov
aas
in
inc
shll
and
sahf
sub
scas
xchg
xorl
add
mov
cmc
add
xchg
lods
mov
inc
cltd
mov
test
mov
xor
dec
push
or
aas
and
daa
sub
lods
outsb
out
add
jg
inc
xor
push
jb
iret
cmpb
and
mov
dec
shlb
dec
mov
push
mov
fadds
shlb
jbe
adc
orb
push
adcb
lahf
es
add
cmpsl
fwait
or
movsb
into
mov
cmp
add
rorb
push
out
adc
sar
dec
rclb
and
mov
insl
in
imul
jg
shrb
jmp
out
and
mov
orb
xchg
xlat
dec
or
add
js
add
push
or
insl
sub
out
stos
out
lcall
shlb
sbb
cs
add
xchg
and
les
add
push
sub
or
adc
fucomi
mov
add
dec
jg
sub
and
pop
in
loop
movsb
das
and
sub
dec
add
mov
nop
add
adc
mov
and
lcall
inc
sub
imul
xchg
lods
dec
push
cmp
and
or
sub
push
xchg
subl
add
adc
mov
movsb
push
aas
push
lea
clc
pop
testb
leave
cmp
xchg
ret
push
mov
mov
adc
out
and
sar
cs
rorb
das
out
mov
sub
cmp
call
push
jnp
out
sub
pop
pop
sbb
adc
cmp
data16
ljmp
cld
or
stos
sarb
pop
subb
cmp
in
in
jg
xor
or
sub
and
shlb
mov
inc
lds
sbb
push
jnp
sub
add
jg
iret
loope
stos
cmp
inc
loopne
out
mov
xchg
fcoms
add
pop
cmp
out
xorb
stos
call
xchg
pop
pop
mov
pop
popa
xchg
push
and
mov
adc
push
dec
sbb
push
xor
das
loopne
pop
pusha
add
subb
lods
mov
add
and
test
pop
adc
aas
and
aam
loopne
adc
mov
sbb
sbb
fimuls
les
sub
adc
pop
dec
mov
fs
mov
leave
jg,pt
cmc
jmp
enter
loopne
ret
loopne
cs
and
pusha
mov
notb
add
pop
movsb
add
mov
add
add
lock
notb
push
fsubrl
jmp
add
add
xchg
push
mov
push
in
push
inc
push
adcb
out
pop
pop
or
insb
hlt
test
fs
or
xor
pop
pop
loope
test
xchg
insb
and
push
jb
ds
mov
divb
rol
jl
addl
jle
adcb
fs
movsb
lahf
das
mov
jns
cmp
js
lock
test
and
and
mov
fstpl
test
sub
pop
lret
adc
adc
filds
pop
mulb
pop
and
jbe
orl
scas
and
outsb
pusha
push
dec
icebp
bound
sahf
jle
jb
arpl
push
lcall
loope
and
mov
pop
es
push
rcrl
icebp
inc
jo
mov
out
pop
mov
sub
in
pop
lcall
test
mov
pop
aaa
dec
push
jo
test
lods
and
xchg
and
dec
loopne
mulb
mov
test
es
push
adc
ret
rclb
loope
frstor
dec
in
sbb
add
push
int3
roll
push
call
mov
rep
inc
incl
pop
lock
jno
nop
adc
mov
cld
pop
pop
clc
dec
fwait
inc
adc
or
ss
jae
or
sub
jno
in
cmpsb
adc
xor
add
popa
adc
in
pop
or
sbb
shrb
cmpsb
sarb
adc
push
adc
dec
push
add
outsl
clc
addl
clc
lock
lcall
inc
inc
adc
adc
pushf
add
or
xor
push
add
fnstsw
mov
dec
test
xor
jb
mov
loope
xchg
outsb
dec
cwtl
mov
adc
and
push
adc
sub
mov
adc
add
and
dec
push
add
or
add
dec
call
push
push
in
sbb
andb
inc
push
jecxz
test
icebp
outsl
push
fdiv
adc
adc
xor
insl
add
adc
cmp
jg
push
jp
adc
mov
mov
js
push
mov
dec
test
dec
insl
and
shl
ret
out
andl
jae
dec
dec
aaa
adc
cli
jo
fisubrs
add
jp
fldt
loopne
out
mov
rorb
jnp
pop
pusha
push
jno
cli
pop
xchg
jbe,pt
mov
mov
call
adc
out
daa
orb
les
mov
test
pop
lcall
add
mov
push
or
outsl
outsb
or
loope
and
cld
nop
mov
dec
lock
minps
cmp
push
sub
sbbl
loop
push
xor
jl
push
xor
out
cmpsl
fadds
jo
cli
pop
lock
ss
leave
sub
jp
pop
push
add
mov
scas
inc
data16
rcrl
or
aas
mov
pop
pop
inc
cmp
adc
mov
dec
adc
out
cli
cmp
adc
or
sub
add
ljmp
xor
imul
adc
fidivs
fisubrl
add
or
scas
cwtl
push
add
ljmp
adc
or
push
js
cli
inc
mov
pop
xor
adc
xchg
popf
test
in
sub
pusha
lret
bound
mov
adc
xchg
orb
mov
cli
inc
cli
or
lods
dec
inc
add
and
inc
inc
add
xchg
add
or
or
nop
mov
loope
xchg
mov
rorb
add
imul
push
add
sbb
or
adc
dec
lret
push
dec
subb
pop
addl
dec
bound
sub
rclb
and
sbb
and
add
in
and
dec
sbb
push
cmpsl
fwait
ljmp
loop
repnz
mov
rcrl
inc
sub
inc
add
in
add
aaa
fs
mov
and
loopne
mov
mov
arpl
and
out
and
pop
add
mov
add
shlb
push
cmp
test
dec
das
scas
popa
push
add
pop
or
push
lahf
lcall
rol
icebp
jg
decl
icebp
inc
addr16
mov
jo
movb
mov
imul
rolb
adc
ret
mov
in
ret
add
sub
imul
das
lret
push
push
adc
jl
or
int
loop
push
mov
xor
mov
out
xchg
cs
add
cmpsb
nop
out
and
std
mov
sbb
push
ret
fldenv
sbb
scas
or
out
mov
bound
out
lock
dec
xor
test
inc
cltd
lods
and
jp
cld
fcmovnbe
pop
hlt
inc
jo
mov
push
mov
pop
mov
dec
jnp
outsl
xchg
imul
add
fimuls
or
lock
mov
push
adc
gs
xorb
mov
jns
lock
faddl
add
rol
xor
jns
adc
or
pushl
jle
xor
inc
mov
cld
dec
aam
inc
xor
icebp
inc
or
loop
loopne
shlb
inc
ret
push
lock
cld
loopne
adc
out
stos
lock
imul
xchg
inc
fsts
rorb
cli
or
mov
sub
and
insb
and
fistpl
push
shl
pop
or
out
push
sub
adc
aas
add
rcrb
jae
mov
inc
loopne
xchg
push
pop
pop
or
xor
mov
inc
in
leave
mov
adc
int
push
add
adc
mov
sbb
addb
xor
xchg
out
pop
insl
jge
cmp
fiadds
fadds
adc
sbb
insb
cmpsb
loopne
mov
push
call
outsl
jbe
lcall
out
rorl
mov
test
mov
push
aam
mov
orl
out
xchg
pop
and
sar
jg
aad
fsubrs
jmp
or
es
cmc
fstpt
add
sahf
push
push
aas
inc
push
add
push
add
mov
fwait
or
pop
push
mov
sar
lcall
mov
add
dec
pushl
pop
mov
fists
dec
xorb
stos
pop
dec
pop
jno
and
idivb
add
loopne
inc
xchg
xor
jne
push
jecxz
or
add
pushw
mov
js
mov
inc
out
push
cmp
aad
cs
shl
sbb
push
aas
cmpsl
repnz
sbb
cld
jl
push
pop
or
repnz
add
stos
icebp
add
xchg
subb
push
mov
fmull
outsb
push
cmp
pop
fiadds
sub
movsb
rcl
dec
clc
loop
cwtl
xchg
test
cmp
push
mov
xor
and
loop
sub
sbb
add
add
add
into
push
loopne
adcb
push
data16
or
sub
mov
mov
add
push
mov
inc
sbb
stos
dec
lret
fiaddl
dec
je
in
add
xchg
jo
lods
and
sub
das
jl
inc
stos
push
cmpb
pop
add
lret
lods
cli
sub
mov
mov
or
daa
sub
fmuls
push
xor
rolb
inc
mov
and
mov
add
imul
add
pop
dec
sub
mov
data16
dec
int3
or
and
sub
lcall
pushw
ret
je
outsb
subb
mov
xchg
pop
out
add
cwtl
popa
add
jns
sub
jnp
mov
jne
add
mov
push
xchg
mov
imul
mov
dec
sbbb
or
jnp
fiadds
nop
fs
push
fbld
mov
loopne
add
sbb
bound
pextrw
mov
sub
add
pop
icebp
scas
test
insb
dec
add
addr16
jb
ret
push
rorb
rcrb
roll
movl
dec
push
dec
or
sbb
outsl
push
ret
ss
or
inc
or
mov
add
adc
pop
inc
push
cs
or
inc
mov
push
incb
out
push
push
pop
dec
sub
fists
std
rolb
inc
movb
lret
push
call
push
mov
js
test
sbb
add
dec
push
adc
enter
dec
xor
add
jl
mov
movsb
andb
xor
fwait
or
sub
fs
push
fs
inc
xor
adcb
ja
sbb
add
mov
adc
in
les
pop
aaa
mov
pop
out
sbb
push
dec
jbe
xchg
mov
rcrb
or
out
or
xchg
mov
sub
add
jl
or
dec
loop
xor
add
push
adc
dec
inc
mov
mov
push
cmp
and
incb
xor
adc
cmp
sti
push
add
cmp
dec
add
lock
push
add
pop
add
add
sbb
jmp
xchg
adc
jbe
and
inc
jbe
xchg
int
lret
dec
adcb
scas
jp
add
and
rol
sbb
fwait
push
pop
fs
adc
mov
in
inc
or
fs
ret
imull
pusha
xchg
inc
les
cmpb
decl
fisubrs
pop
loopne
add
dec
xor
sub
sbb
cmp
fimuls
jo
pop
into
mov
pop
stos
add
mov
adc
out
xorb
outsb
pop
pusha
xor
xchg
push
sbb
fdivr
mov
ds
jp
sahf
jl
pop
add
les
aad
xor
jg
add
or
cmp
stos
add
jg
mov
icebp
dec
out
popa
mov
cwtl
add
stos
push
cwtl
hlt
pop
sub
sbb
jo,pt
pop
sahf
and
and
adc
adc
lea
or
adc
xchg
jno
add
testl
sbb
shrb
adc
cmc
das
insb
adc
add
outsl
cmp
stos
pusha
aas
mov
cli
inc
cmp
xchg
pusha
add
add
es
call
orb
add
dec
adcb
cmp
fwait
inc
cld
aaa
pop
inc
sbb
adc
xor
cmpsb
and
mov
loopne
and
and
or
movb
push
mov
imul
sahf
out
push
or
mov
inc
addb
out
shrl
add
adc
xchg
and
inc
sbbb
add
cmp
mov
adc
sbb
xor
cmp
loop
inc
inc
sbb
mov
test
xchg
fchs
xchg
aam
sbb
mov
jge
rclb
es
jnp
push
adc
sub
fs
sub
xchg
xchg
rcrl
and
jae
xorl
test
rolb
add
pop
decl
jo
xor
add
test
jle
mov
mov
ret
add
add
or
and
aas
enter
inc
dec
dec
mov
cmp
sbb
stos
jmp
inc
hlt
nop
inc
pop
fs
push
cs
movsb
shlb
jnp
lea
cli
add
jbe
sub
out
adc
push
call
cs
pusha
insb
and
fwait
cs
data16
insb
fsubrs
sub
and
jo
icebp
dec
cmc
mov
mov
push
jp
sub
and
scas
add
dec
mov
andb
and
sbb
jmp
adc
push
mov
add
pop
idiv
fildl
scas
cmc
cmp
pop
inc
push
orl
outsb
and
das
inc
adc
and
or
bound
and
adc
andb
sub
in
fs
or
add
sub
xor
and
xchg
push
lock
add
pop
sbb
scas
add
jg,pn
aaa
mov
adc
and
lcall
add
ss
adc
or
je
dec
add
pushl
loope
mov
push
pop
mov
inc
cmp
push
int
xorb
adc
and
push
mov
fbstp
dec
roll
and
or
pop
inc
xor
mov
xchg
jle
pop
add
cs
js
jp
jl
adc
push
rolb
outsb
push
dec
add
nop
jo
imul
adc
jle
or
call
cmpb
pop
rorb
push
pusha
xchg
and
add
mov
and
inc
add
jge
xor
add
push
sub
outsl
stos
xchg
pusha
sbb
adc
push
test
sub
iret
cs
subb
adc
mov
ss
add
add
inc
movsb
push
test
inc
shlb
stos
or
outsb
or
loope
xor
push
mov
mov
xor
addr16
and
incl
or
or
push
stc
adc
sub
loop
xchg
xchg
sahf
adc
scas
filds
mov
or
jp
xor
adc
xor
mov
pop
popf
and
adc
xchg
inc
sub
or
mov
push
xchg
jo
fistl
in
enter
adc
leave
dec
push
bound
sub
aam
mov
push
jg
out
xchg
add
mov
sbb
es
and
test
ret
pop
add
mov
clc
decl
jl
lret
js
and
rcl
cmp
int
scas
stos
adc
mov
add
pop
lock
xchg
xor
out
sbb
icebp
outsb
aas
filds
popl
pop
add
call
pop
clc
add
pop
dec
lea
or
push
clc
jo
sub
xor
scas
mov
push
xorb
sbb
or
roll
loope
aas
jns
adc
aas
push
cs
jno
aas
cwtl
mov
test
cmp
add
cmp
inc
mov
mov
pop
and
fdivs
pop
sbb
add
mov
cmp
mov
push
jno
ss
fistps
xchg
inc
cmp
xchg
mov
mov
sarl
pop
rolb
data16
cmp
nop
aaa
mov
cmp
nop
add
cmp
add
roll
push
mov
or
ret
repnz
adc
movsb
xorl
aaa
jg
mov
roll
push
xchg
mov
nop
mov
and
add
mov
aaa
fadds
pop
dec
lret
add
sbb
xchg
cmp
sub
aaa
pop
sbb
je
test
mov
insl
popf
sub
mov
push
aas
jp
shlb
out
adc
sarb
fs
mov
int3
jb
pop
add
pop
mov
xchg
pop
mov
or
in
pop
pop
dec
in
pop
add
imul
mov
push
push
in
cmp
push
and
mov
sbb
in
daa
out
out
mov
jmp
subl
push
mov
rcll
adc
pop
mov
cs
mov
and
or
das
hlt
in
mov
mov
or
movsl
dec
movsl
cmp
mov
push
fdiv
stos
pusha
cmpb
adc
mov
cmpsb
mov
cmp
xor
out
aam
jg
push
push
mov
mov
xor
pop
cmp
jne
inc
push
mov
cmp
push
push
xchg
jp
sbb
push
add
sub
andl
pop
dec
push
aam
bound
mov
loope
test
or
imul
add
data16
or
sub
lds
rorb
sbb
fildl
sbb
test
cmp
lock
pop
push
push
jo
jo
push
ds
xor
xor
sub
adc
dec
decl
sahf
and
jns
aaa
mov
mov
imul
inc
jno
cmp
cltd
sbb
std
dec
pop
adc
mov
jl
scas
idiv
ljmp
jnp
subl
or
adc
lock
or
cmp
test
sub
adc
cmc
adc
nop
adc
shl
adc
nop
push
xchg
mov
fisttps
sbb
dec
mov
loope
hlt
jmp
dec
mov
cmpsl
dec
cli
stos
jg
add
jp
push
or
fists
push
std
jl
repnz
mov
ficompl
adc
call
add
jo
sqrtps
pop
push
push
addl
mov
subps
stos
sbb
sbbb
mov
inc
add
shr
jge
pop
adc
pusha
add
jne
mov
outsb
movsb
cmc
outsl
nop
adc
xorb
sbb
int
mov
inc
rcr
roll
sbb
jbe
mov
push
dec
dec
adc
jnp
cmp
lahf
mov
sub
pusha
xchg
rolb
xor
sbb
sbb
testb
lcall
or
xorb
movsb
lock
movsb
sub
pop
cmpsb
cmp
xor
pusha
add
icebp
sbb
je
int
adc
adc
mov
cs
hlt
outsl
jp
or
xchg
push
ljmp
sbb
out
add
inc
push
sbb
cmpsb
jp
sbb
aaa
lcall
or
add
adc
add
add
dec
lahf
mov
add
or
or
xor
add
and
hlt
lock
insb
loopne
fsub
adc
add
sub
pop
xor
jp
jb
aaa
add
popa
add
dec
push
andb
fidivrs
or
or
aam
adc
pusha
jbe
sbb
dec
loop
cmp
add
mov
repnz
sbb
xor
and
mov
repz
add
sub
push
jle
addl
jbe
inc
ljmp
test
fsub
mov
inc
lretw
lcall
mov
adc
addb
push
sub
add
sub
rolb
add
clc
push
mov
sbb
jg
fistpl
add
sub
nop
or
mov
fdivrs
and
scas
cld
or
adc
or
and
cs
mulb
inc
adc
addr16
mov
sbb
orb
xor
pop
rolb
lock
or
inc
dec
orl
sub
js
pop
inc
sub
addb
clc
decl
dec
xor
shrb
cwtl
add
cmpsl
sbb
xor
jle
rorb
or
jbe
bound
fistpll
sub
and
add
add
lret
sahf
mov
rorl
ds
mov
dec
icebp
pop
inc
jne
clc
push
xor
mov
in
add
mov
cltd
push
push
mov
inc
or
or
adc
xor
sahf
js
addb
stos
mov
fnstcw
sbb
pop
xor
sub
mov
rorb
inc
cmove
adc
or
clc
or
lahf
add
add
loopne
aas
scas
stos
sbb
inc
pusha
add
orb
addl
mov
sbb
in
jg
test
les
add
orl
cld
outsl
or
mov
add
test
inc
cmp
add
pop
mov
mov
adc
or
sbb
out
push
mov
les
sbb
add
aam
xor
sbb
js
rol
in
adc
cmp
cmp
je
dec
adc
pop
add
test
dec
pop
cmp
jp
jae
add
clc
pusha
jns
push
leave
les
adc
push
sbb
sub
xchg
les
mov
sbb
test
sub
mov
std
cmp
sub
loopne
mov
cmpsb
jo
inc
push
jmp
inc
outsl
jo
cmp
iret
adcb
dec
cli
insl
add
pop
out
mov
loopne
pusha
xor
loop
push
sbb
dec
cmp
cmpb
add
es
push
lea
add
jnp
mov
xor
and
mov
jecxz
push
in
pop
pop
shrb
loop
imul
das
pop
test
mov
sahf
pop
pop
xchg
loopne
mov
pop
xchg
pop
or
call
and
imul
and
and
adc
shll
cmpsl
add
and
shl
inc
sub
sbb
and
pop
mov
push
cmpsb
jb
test
jbe
adcl
test
mov
fs
jp
pop
js
inc
and
cmp
cmpsb
aas
sbb
sub
dec
dec
add
jnp
push
loop
js
cmp
and
mov
add
cmp
aas
xchg
xchg
ljmp
mov
stos
or
mov
mov
cltd
mov
mov
loope
std
push
loopne
mov
loope
dec
jecxz
mov
in
inc
sub
scas
xchg
movb
lcall
and
scas
addl
adc
lods
adc
mov
lock
adc
jecxz
test
cli
add
in
fcmovu
cli
ljmp
cwtl
mov
data16
mov
hlt
add
mov
sbbb
mov
add
adc
loopne
pusha
ljmp
xor
jmp
std
xchg
add
test
add
mov
mov
shrb
fistpll
movsb
test
add
or
dec
clc
jg
jl
jp
sub
loopne
into
jge
add
or
imul
orl
jp
repnz
inc
loope
dec
xor
test
rclb
sbb
and
in
das
stos
mov
enter
inc
dec
and
mov
std
andb
fs
dec
xchg
shrb
sub
ljmp
cmp
pop
inc
inc
std
mov
push
add
add
push
pusha
js
sub
out
inc
push
lret
sub
mov
sbb
mov
rclb
mov
pusha
cmp
pop
int3
aam
add
add
cli
out
add
jo
add
out
or
inc
sub
adc
stos
lock
fildl
pop
rolb
out
ljmp
es
jnp
and
cmp
fcomip
roll
adcb
or
adc
mov
xchg
lods
push
or
clc
jo
cli
cmpsb
incl
mov
orb
std
test
ljmp
icebp
sub
adc
cmpsb
or
shll
insl
ret
cmpsb
cld
push
int
dec
add
and
fdivrs
xor
dec
and
jb
mov
call
and
add
add
push
cmp
enter
xchg
pop
sbb
push
inc
dec
nop
insb
mov
adc
and
sub
sti
aaa
push
mov
inc
es
out
je
inc
push
xor
adc
stos
xor
push
dec
out
mov
test
add
xchg
pop
clc
xor
lock
jp
loopne
mov
push
loope
lock
scas
xchg
outsl
out
ret
sbb
aam
sbb
rorb
jb
add
jp
push
clc
pushl
dec
nop
push
addr16
jp
jbe
add
andb
gs
mov
nop
jno
cltd
jmp
rorl
fistl
cld
push
out
jo
scas
push
cmpsb
add
add
add
cld
notb
mov
cs
mov
insb
clc
dec
call
jp
nop
sub
sarb
scas
mov
fsubl
push
inc
sbb
nopl
lret
rcl
fidivl
push
add
push
cmp
pop
add
add
add
mov
test
add
pushf
push
adc
sub
lahf
addb
xor
push
mov
repz
and
bound
inc
lods
sub
and
fimull
inc
icebp
repnz
test
xor
inc
out
ja
std
dec
xorl
mov
inc
xlat
andl
std
cmp
mov
andb
jo
push
push
inc
loop
push
sub
adc
imul
adc
sub
popa
push
jp
pusha
xchg
mov
push
jns
mov
add
cli
push
cmpsl
inc
xchg
push
cmp
xchg
mov
rolb
mov
or
mov
pop
rolb
push
fs
js
incl
pop
push
add
lock
xor
add
or
decl
push
mov
addl
sub
xor
roll
ds
outsl
pop
mov
mov
sub
dec
and
pop
or
sub
cmpl
cs
mov
jl
mov
or
cmp
mov
jle
cmp
mov
shrb
icebp
and
ss
or
or
push
adc
add
ret
pop
sti
inc
ljmp
divb
push
mov
inc
adc
sbb
cmpsb
jo
cmp
push
add
jo
sbb
sbb
push
or
adc
adc
lock
pop
popa
add
xor
enter
or
sbbb
and
test
sbb
daa
xor
lret
rdmsr
jbe
inc
roll
push
jnp
or
scas
pop
repnz
lcall
movsb
add
std
jp
or
add
xchg
push
xor
nop
outsl
mov
push
push
pop
mov
sti
in
aad
cwtl
inc
xchg
adc
bound
push
insb
inc
adc
jp
push
add
cmp
pop
dec
mov
push
mov
sti
and
pushl
sub
pop
pop
lock
scas
add
lcall
es
sbb
cld
les
and
push
push
sbb
fbld
subb
icebp
dec
jp
es
jb
ret
xchg
push
test
xchg
add
sbb
test
lds
jp
rcrl
rorl
jg
cs
hlt
mov
add
and
addb
inc
mov
xor
adc
push
ss
cmp
test
dec
mov
mov
add
mov
and
not
inc
or
or
pusha
xchg
icebp
or
pop
mov
stos
decl
out
sub
jl
out
andl
adc
fsubrs
in
xor
xor
cmp
cs
cmc
divb
mov
mov
mov
xor
pop
mov
xor
pop
add
adc
rolb
pop
out
adc
les
popf
and
push
pop
ret
mov
mov
xchg
lock
jle
or
push
scas
test
ror
lahf
push
sbb
mov
fs
pop
out
test
pop
sub
add
enter
pop
imul
subl
repz
jns
lods
pushf
movb
cmp
jl
out
push
shll
jp
pop
insb
inc
or
or
ja
xor
or
add
insb
ret
mov
test
adc
or
and
outsb
add
je
add
or
inc
es
subl
jmp
sbb
push
fs
or
into
loop
out
pop
add
data16
mov
dec
sbb
dec
cmc
out
outsb
push
dec
push
mov
xchg
mov
mov
jmp
cmpb
and
add
or
mov
shll
pushl
pushl
test
xorb
cwtl
pop
add
sahf
mov
out
aaa
aaa
pushf
mov
and
pop
lcall
ds
xchg
mov
lcall
sub
mov
and
pop
scas
outsl
insb
jmp
lods
mov
stos
jo
stos
mov
test
and
orb
mov
daa
movsb
jle
pop
mov
jbe
stc
mov
iret
inc
xchg
lcall
mov
aaa
cmpl
mov
jecxz
adc
mov
xchg
out
fistps
fadds
add
mov
mov
int3
das
js
or
lret
ds
mov
outsl
das
inc
repz
push
jg
les
ret
in
in
test
push
or
mov
cmp
fbstp
cmp
fidivl
mov
jae
mov
lcall
push
shlb
int
sbb
mov
popa
in
ss
mov
inc
fisubrs
call
sbb
inc
cltd
outsl
jg
mov
jl
loopne
xor
lahf
aaa
fwait
push
rorb
push
mov
jno
mov
fs
in
mul
sub
sarl
mov
inc
mov
aad
int
or
jbe
insb
test
sbb
push
repz
adc
add
inc
push
add
xchg
push
lcall
mov
push
dec
adcl
xchg
test
mov
mov
sti
outsl
push
subb
pop
es
sub
ss
mov
add
lcall
es
xor
roll
sub
xor
xor
mov
mov
incl
rcr
push
sub
adc
mov
cwtl
mov
stc
and
int3
mov
or
fildl
inc
add
dec
xor
cmp
dec
decb
mov
add
xor
mov
pop
add
cmp
rclb
mov
jbe
add
mov
testb
mov
mov
mov
push
sbb
or
mov
ret
cmp
or
in
enter
pop
mov
pusha
xchg
orl
std
incl
and
mov
rolb
push
frstor
sub
xor
arpl
jo
outsb
decb
xor
or
lods
movsb
or
push
lcall
xor
or
mov
inc
lret
xchg
xchg
arpl
adc
fisubrs
mov
outsb
push
jl
in
and
rcrb
cmp
mov
sub
cltd
rorb
mov
pop
lock
or
or
jne
inc
addl
inc
pusha
xchg
jle
cli
mov
sbb
pop
outsb
jo
es
add
mov
jp
push
cli
adc
mov
clc
fistps
push
sbb
xor
cmp
fistps
lret
add
and
adcl
jbe
add
lea
inc
push
mov
cmp
loopne
in
push
out
pop
and
push
decb
add
lds
out
xchg
cld
and
incb
push
lock
mov
fwait
pop
and
out
addb
fs
xor
cld
push
jle
clc
pop
dec
fs
and
mov
out
jb
add
dec
jecxz
mov
adc
push
jecxz
xchg
sbb
test
adc
push
jbe
adc
js
shlb
and
push
jb
jp
test
cmp
adc
and
insb
lahf
cs
mov
and
orl
pusha
mov
inc
stos
outsb
jle
add
shll
adc
push
lahf
lcall
add
push
add
mov
out
es
mov
addr16
outsb
adc
out
bound
loop
add
push
xor
sbb
push
cs
dec
out
cwtl
out
adc
sub
aad
pop
sbb
and
push
fadds
xlat
and
shrb
and
and
or
inc
loop
xor
mov
adc
sbb
mov
jp
jp
aaa
es
ss
dec
pusha
out
dec
inc
loope
loop,pt
adc
xlat
and
inc
cli
ds
incl
add
mov
stos
loope
push
pop
adcb
jmp
mov
std
lret
sahf
mov
loopne
lock
ljmp
fsubl
sub
bound
icebp
and
or
mov
jnp
or
mov
test
jo
mov
mov
xchg
rorl
rol
jb
mov
sbb
add
mov
inc
repnz
mov
popf
inc
add
sub
pop
test
mov
sbb
mov
inc
mov
ss
lock
push
inc
pop
mov
or
inc
xchg
in
js
call
add
mov
inc
xchg
mov
lret
push
lret
or
jle,pn
outsl
js
std
or
mov
and
mov
repnz
add
and
add
and
mov
and
loope
leave
mov
xorb
add
enter
add
std
jg
je
mov
and
or
fsubs
or
div
icebp
xor
int
data16
gs
dec
ja
inc
out
inc
rorl
jno
fnstenv
push
jae
and
loope
inc
pop
cmpsb
decb
mov
xor
adc
or
add
lahf
sub
pop
and
and
inc
add
add
pop
sbb
das
push
bound
pop
xchg
mov
sbb
push
out
jnp
fdiv
jbe
clc
ja
es
or
xor
and
incb
lock
es
jae
pusha
sbb
dec
jnp
or
dec
or
sub
dec
adc
or
inc
add
lcall
inc
inc
or
dec
clc
bound
je
add
sbb
mov
or
push
adc
idivb
sahf
add
or
jbe
push
or
decb
mov
sahf
inc
inc
int
pop
adc
pop
adc
mov
xor
fdivrs
xchg
sarb
or
into
xlat
insl
in
pop
adc
xchg
loopne
adc
jns
mov
cmp
pop
fmulp
rolb
add
jge
es
cmpsb
jg
add
cwtl
mov
add
jae
or
addl
inc
add
xchg
mov
inc
add
or
jnp
addb
fiadds
add
jnp
dec
dec
inc
sub
aam
jo
je
mov
pop
loopne
adc
and
lock
xchg
push
or
lea
icebp
or
mov
push
inc
pop
mov
out
mov
outsl
push
cmp
popa
stos
add
aam
nop
push
mov
data16
push
add
lea
add
les
mov
stos
dec
rolb
pop
mov
test
adc
ret
sub
xchg
add
xchg
gs
mov
inc
data16
cs
sbb
scas
int3
aad
push
test
fstpl
inc
adc
add
dec
cmp
pop
xchg
sub
pop
xor
outsb
mov
fnstenv
ficoms
loopne
enter
test
cli
nop
xor
inc
push
in
out
xchg
loop
mov
lock
dec
in
loopne
mov
decb
gs
pop
cmp
in
int
shlb
pop
push
shlb
fisubrs
shlb
fs
inc
lock
dec
clc
aam
sub
mov
mov
pop
hlt
inc
sarb
fs
mov
jnp
lret
mov
add
inc
sbb
hlt
adc
adc
lock
sbb
pop
pusha
add
ss
add
lock
xor
test
lock
pop
pop
clc
daa
sarb
popa
push
and
jnp
dec
ret
sar
sbb
jle
pop
icebp
push
add
divb
push
ret
fs
cmp
nop
add
or
mov
xor
dec
leave
add
pop
bound
loop
pop
cmp
jbe
dec
xchg
in
sbb
fidivl
clc
add
lcall
aaa
lds
and
out
mov
add
push
add
lcall
test
cmc
push
pop
pop
bound
nop
mov
enter
sbb
push
adc
adc
sub
roll
cli
jo
jl
add
imul
adcl
loopne
dec
and
out
jp
jp
add
or
pop
push
add
xor
push
adc
or
loopne
into
and
int
add
pop
popa
add
xchg
xor
add
xchg
jge
clc
in
push
push
clc
aas
and
adc
mov
or
call
xor
orl
rorl
dec
mov
or
out
add
mov
jge
call
fidivs
or
adc
insl
sbb
loop
pop
jbe
mov
je
repnz
adc
lds
shlb
and
test
leave
cmp
mov
adc
es
xorl
das
xor
pop
add
pop
push
test
mov
pop
pop
jo
push
lret
add
and
push
xor
push
out
mov
cli
mov
ret
or
je
shrb
lods
xor
xchg
mov
fcomip
xor
icebp
sbb
icebp
or
sub
lock
pushf
xorb
mov
call
xchg
push
push
sbb
aad
addl
pop
cld
add
add
xor
xor
out
ja
mov
lods
bound
adc
sbb
data16
shll
hlt
call
add
jge
orb
adc
roll
ret
jo
xor
nop
imul
and
aas
cmpsb
mov
jb
pop
jo
adc
in
movsb
lock
div
adc
data16
sbb
pop
movsb
adc
lret
xchg
add
scas
xor
xchg
xor
push
jle
loope
test
pop
stc
xor
dec
ret
pop
jg
cmc
mov
fcomps
jb
andb
pop
inc
out
pop
adc
sub
lock
ljmp
dec
cmp
sbb
mov
cmp
push
add
dec
ret
movsb
lods
stos
mov
xchg
or
cwtl
or
std
or
mov
pop
cmp
dec
mov
pop
nop
negb
pop
adc
adc
lods
jl
nop
jno
sahf
adcb
loop
fdivs
repnz
sbbl
data16
mov
mov
mov
clc
cmpsb
sbb
mov
dec
aad
mov
rolb
pop
out
and
std
adc
cli
sub
add
or
pop
mov
imul
pusha
jb
sahf
incb
inc
xchg
jo
add
add
mov
pop
cmp
add
push
mov
add
fwait
call
add
push
xchg
jo
cli
jg
sbb
dec
add
scas
xor
xchg
mov
add
repz
clc
pop
adc
cmp
mov
mov
mov
movsb
out
shlb
push
or
cmp
pop
nop
in
xchg
push
pop
and
cwtl
orb
sbb
or
dec
cmp
aas
or
dec
mov
and
lcall
push
xchg
add
daa
test
cs
stos
push
push
leave
inc
into
jp
lods
or
out
xorb
cmc
in
add
mov
sbb
stos
pushw
push
or
push
push
in
mov
test
xor
loop
push
dec
les
dec
push
push
mov
adc
pop
mov
subb
sub
sar
add
stc
jmp
add
mov
add
ss
mov
mov
and
jae,pt
lock
and
and
or
stos
mov
sbb
and
and
mov
incb
xchg
push
pop
push
daa
fdivl
clc
fs
lock
mov
test
stc
inc
and
in
rclb
cmp
fcom
mov
loope
icebp
int3
jae
fisttpl
enter
stos
adc
or
jg
loopne
popf
nop
mov
add
fcmovb
sbb
push
inc
scas
pop
push
adc
sub
mov
mov
add
lock
push
es
sub
or
mov
push
lcall
and
mov
add
add
addl
dec
dec
add
mov
mov
out
push
inc
push
push
pop
add
xchg
mov
add
loop
or
fidivl
data16
and
rcl
test
cmpsl
xor
sub
out
addb
adc
icebp
or
outsl
adcb
add
int
insb
pop
fadd
adcb
cli
xchg
sbb
push
or
xor
or
out
cmpb
enter
pop
or
jnp
test
scas
cmpsb
push
or
das
addb
outsb
or
rolb
push
test
ret
jle
clc
incl
push
aas
dec
adc
ret
jnp
adc
rclb
pop
xchg
addb
ss
xchg
mov
cmp
scas
loopne
mov
and
or
mov
sub
mov
xor
cmp
jle
add
and
or
push
and
pop
add
pusha
push
add
jb
inc
sbb
mov
pop
sub
andl
push
pusha
pop
inc
xor
loope
mov
or
jb
pop
pop
pusha
pop
out
inc
outsl
mov
mov
es
icebp
pusha
or
jl
mov
mov
clc
bound
inc
xchg
push
dec
sbb
or
xor
push
and
fildl
andl
jmp
and
addb
subb
push
loop
inc
inc
mov
jge
mov
push
cmp
pop
std
mov
mov
mov
pop
pop
inc
pop
xor
fwait
ret
shl
inc
sbb
xor
cmp
cwtl
add
popa
sub
adc
into
and
ljmp
and
and
sbb
aam
sub
loop
dec
xchg
jne
add
outsb
cld
and
mov
lods
push
or
add
aas
std
pop
dec
fadds
arpl
imul
loope
clc
push
dec
out
inc
mov
lcall
push
cli
inc
scas
mov
sbb
inc
xor
add
adc
xacquire
inc
cmp
add
sub
jl
fisubl
in
xchg
xor
sahf
pusha
ds
mov
jp
add
shl
pop
inc
dec
inc
mov
sbb
inc
lds
pop
mov
fsub
repz
mov
and
push
sbb
or
pushf
mov
nop
mov
shl
or
pop
lea
pop
out
movsb
jle
mov
xchg
push
or
into
xchg
lahf
mov
and
and
adc
xor
pop
or
mov
pop
out
andb
and
adc
pushf
ficomps
movb
jb
or
sbb
add
scas
pop
pusha
inc
mov
in
xor
cmpb
inc
or
repnz
push
inc
inc
fcmovne
les
mov
int
mov
fistl
fiadds
sbb
inc
adc
jl
mov
add
xor
add
outsl
dec
cmp
test
adcb
pop
jle
fwait
add
adcl
and
shr
adc
mov
or
adc
or
sbb
adc
dec
je
lods
sbb
xchg
shl
sar
mov
and
cmp
or
or
dec
sbb
sub
popf
ds
push
orl
inc
inc
fs
loop
rorl
cli
sub
pop
inc
and
or
jl
sahf
in
inc
mov
push
jnp
test
fmuls
pusha
daa
incl
in
adc
add
ljmp
xor
add
jne
test
dec
or
mov
nop
or
sbb
idiv
add
pop
aam
pusha
cmp
loopne
test
and
jo
xor
adc
push
add
rorl
push
lods
and
lock
in
jb
shrb
sti
push
rorb
int
sbb
ss
incl
sbb
jo
pop
jb
out
popa
dec
and
bound
movsb
or
or
test
jl
out
push
mov
lret
out
pusha
sbb
nop
loopne
mov
sub
fwait
mov
add
pop
mov
mov
in
mov
add
inc
loop
shrb
mov
adcl
nop
or
mov
inc
push
lcall
adc
lret
sub
sbbl
sbb
cld
insb
aaa
adc
adc
jo
mov
xlat
pop
cld
dec
sbb
adc
or
or
imul
or
ds
jp
insb
loopne
rolb
fwait
dec
insb
into
inc
and
jae
icebp
data16
aaa
mov
or
xor
pop
pop
xor
and
push
mov
lea
inc
mov
lret
aaa
dec
or
cmp
jnp
lcall
ljmp
jnp
incb
outsl
pop
cwtl
cwtl
adc
add
mov
test
cmp
and
rorb
xchg
jbe
and
sub
sub
out
loopne
mov
add
xchg
xchg
add
push
dec
loop
xor
add
jl
or
xchg
mov
pop
test
mov
rcrb
sub
les
or
repnz
enter
test
jp
shr
aam
orb
mov
sbb
inc
mov
scas
adc
jle
rorl
adc
test
jmp
dec
sbb
or
cmp
jnp
push
or
dec
loopne
adc
mov
icebp
and
xchg
or
push
add
call
out
dec
out
xor
push
push
into
fsubl
xor
pop
mov
lods
push
lock
nop
mov
stos
mov
and
add
dec
xor
enter
in
push
pop
push
add
mov
add
mov
fs
addl
ret
jp
leave
add
mov
decb
sub
icebp
xor
add
sbb
add
lea
and
das
inc
mov
inc
inc
xor
nop
enter
aam
test
mov
sbb
inc
sbb
icebp
addb
jb
add
cwtl
clc
nop
and
mov
das
cmpsb
pushf
dec
add
mov
mov
lahf
mov
std
push
cmp
push
clc
orl
adc
push
xor
cmp
adc
xor
jo
cli
outsl
jp
les
pop
jle
out
inc
mov
sub
jl
or
ss
mov
inc
cwtl
xor
mov
sbb
or
loope
adc
push
jae
notb
dec
add
mov
xchg
pusha
sbb
rclb
fwait
push
and
ficoml
mov
outsb
clc
clc
push
add
or
icebp
adc
sarb
lret
stos
into
push
mov
orl
xchg
scas
or
mov
pop
push
call
mov
in
stos
push
nop
mov
nop
push
sbb
ljmp
out
shr
dec
out
mov
and
cmp
data16
int
xchg
test
dec
push
or
cmpb
ret
add
add
nop
pop
jbe
int3
lock
stos
pop
add
xchg
mov
pusha
adc
sbb
push
inc
xchg
sbb
xor
dec
dec
call
push
int
add
and
pop
push
push
push
xchg
xor
pusha
adc
rorb
pop
rolb
sub
mov
xor
stos
sub
mov
inc
pusha
pop
sbb
loopne
or
subb
ficomps
add
shlb
adc
es
mov
sahf
test
or
inc
bound
ret
decb
incb
arpl
xor
js
stos
push
pushf
mov
repnz
insb
add
adc
fsubl
pop
jg
lock
lahf
sub
xor
dec
movsb
decl
push
adc
out
xor
lea
lret
push
mov
inc
cmpsl
push
pop
push
xchg
shrl
js
sbb
pop
adc
add
push
inc
scas
xor
cli
mov
loopne
cmc
fsubrl
mov
push
aas
add
xchg
enter
aad
or
arpl
ljmp
pop
pop
pop
and
or
or
push
out
push
xor
lcall
jp
pop
dec
inc
jnp
adc
repz
sub
call
pop
and
push
jo
push
pop
pop
mov
inc
mov
aad
incl
inc
or
pop
jno
jns
rorl
and
adc
sar
mov
jge
jo
jmp
jns
mov
sub
loopne
pop
call
pusha
repnz
lock
inc
push
std
outsl
clc
sub
sbb
add
jns
mov
popa
sbb
cmp
inc
adc
sbb
or
adc
jbe
clc
add
faddl
mov
mov
sub
add
add
mov
add
jp
dec
cmc
pushl
cmc
add
push
xor
sub
jp
jbe
fwait
push
out
addb
stc
and
clc
add
cld
and
sbb
xorl
in
inc
add
mov
add
in
and
mov
mov
adc
mov
fcmovu
outsb
push
lcall
mov
nop
mov
enter
filds
jge
out
sbb
add
mov
add
and
push
mov
inc
imul
push
insb
adc
add
add
cmp
js
dec
adc
cmpsb
outsl
fmul
pop
pop
pop
add
xchg
mov
cmp
shr
dec
js
mov
sti
mov
inc
add
test
add
or
lock
xor
lock
or
lcall
adc
lods
add
ret
mov
or
clc
out
hlt
inc
mov
sbb
inc
enter
push
pusha
add
add
cs
rorb
int
scas
stc
dec
push
adc
repnz
push
cmpsb
aam
frstor
mov
push
icebp
mov
inc
sub
sbb
xor
je
loopne
push
push
add
iret
pusha
sbb
mov
dec
pusha
test
mov
pop
jg
add
and
es
sub
rolb
push
xor
mov
hlt
xlat
sbb
fists
cmc
scas
js
sub
push
sub
pop
andb
push
mov
xor
call
ret
or
out
or
insb
push
ret
cltd
push
jmp
lock
adcb
mov
loop
fadd
xchg
xor
push
je
enter
adc
adc
cld
add
mov
push
add
xor
sarl
cmpsb
in
pop
sahf
pop
push
addl
push
and
push
cmp
pop
or
stos
dec
push
inc
xor
mov
push
sbb
sbb
inc
jp
lret
imul
test
sbb
dec
pop
push
cwtl
push
inc
stos
not
in
mov
and
scas
mov
jb
xor
pop
mov
add
jnp
cmc
sub
add
push
pushf
frstor
cli
stos
jmp
cld
push
sti
or
sbb
ret
inc
lods
ss
jge
out
popf
movsb
stos
insb
sbb
adc
add
jl
cmpb
or
popa
mov
sbbl
jbe
add
or
test
lock
push
add
loop
in
or
and
mov
std
cmpb
mov
push
xor
shrb
mov
cmp
jle
mov
out
adc
mov
xor
sub
rolb
mov
arpl
cmpb
sahf
testb
mov
xchg
in
out
push
and
mov
cmp
push
add
xchg
dec
mov
adc
or
adc
and
insb
inc
adc
xchg
mov
scas
or
lods
lcall
or
lods
xchg
rolb
lods
add
or
leave
inc
or
stc
mov
scas
add
push
sbb
leave
pop
orl
adc
es
addl
or
push
or
push
ficoms
rolb
xor
push
data16
sbb
sbb
addl
push
dec
test
int
in
lock
jo
sbb
inc
hlt
dec
sub
fdivrp
decl
cld
or
int
push
cli
or
cmp
sti
dec
adc
or
pop
add
filds
dec
loopne
inc
ds
stc
std
test
mov
in
add
in
stc
inc
call
loopne
jns
push
jl
pusha
cmpl
jo
adc
jg
pushf
add
stc
aam
mov
add
lcall
xlat
and
adc
push
int3
push
mov
xor
pusha
sbb
add
mov
or
push
push
push
push
push
icebp
and
fmulp
add
arpl
incl
and
pusha
cmp
mov
imul
pop
add
xor
sub
jnp
loope
mov
loopne
mov
push
or
or
inc
inc
sti
jecxz
dec
mov
dec
pop
popa
sarl
or
push
push
adc
mov
js,pn
cmpb
bnd
and
dec
enter
into
andb
fsubr
bound
clc
xchg
cmpb
add
pop
or
mov
pop
out
orb
pusha
pop
xor
and
mov
sbb
sahf
and
dec
inc
fnstsw
stc
ficomps
xor
repnz
in
cs
ret
loopne
test
into
dec
sahf
std
aas
popf
inc
and
rorb
int
xor
sub
insb
fbstp
in
add
out
pusha
sub
or
cmp
fwait
dec
mov
add
adc
or
adc
mov
add
sbb
std
out
adcb
pop
xchg
push
idiv
push
pusha
addl
sub
push
loopne
sbb
das
adc
inc
nop
adc
push
push
and
pop
add
cmp
inc
daa
mov
lds
add
cmp
add
fsub
xchg
mov
and
int
ljmpw
popa
or
dec
mov
jg
jo
movhps
pminsw
mov
dec
mov
loopne
mov
shll
or
and
mov
push
fnsave
cmp
xchg
add
add
pop
scas
push
dec
inc
fildl
pop
mov
pop
or
ja
aaa
xchg
out
push
popa
sub
pop
inc
adc
mov
loopne
scas
or
adc
push
pusha
mov
outsl
mov
icebp
in
ljmp
cmp
scas
andb
adc
shll
repz
inc
xor
push
adc
mov
das
int
in
add
shr
xor
scas
xor
cmp
adc
popa
add
js
mov
jmp
mov
movsl
and
xor
push
stos
push
dec
push
and
fwait
cmpsb
add
push
xchg
imul
push
sbb
ret
mov
xchg
jo
mov
dec
imul
adc
add
mov
push
aaa
mov
imul
cli
or
jp
push
negb
lock
es
cmc
adc
and
sti
ljmp
stos
lock
into
inc
mov
sub
cs
fistl
sub
xchg
add
xor
mov
stos
das
push
xchg
jbe
pusha
lods
fistl
sub
lods
std
decl
jb
push
std
or
add
or
sbb
add
pop
fwait
xlat
xor
sbb
xor
sub
push
insl
push
xor
push
add
insl
add
jae
dec
loop
cltd
test
ficoml
movsb
inc
dec
jge
popa
int
sbb
or
sbb
mov
ret
add
jo
into
jo
mov
sbb
mov
test
sahf
and
loop
lods
sbb
jnp
aad
push
call
mov
inc
repnz
dec
xchg
test
cmp
addb
mov
pop
adc
gs
rdmsr
jno
add
cli
dec
lods
nop
inc
sbb
add
mov
add
sarb
stos
jg
cmp
jg
add
je
stos
adc
add
push
xor
mov
out
pop
dec
adc
or
lcall
data16
sub
and
add
xchg
or
push
pop
add
pop
outsl
sbb
push
lock
sbb
ljmp
iret
add
dec
sub
push
sbb
jle
push
mov
fdivrp
sbb
sbb
repnz
jne
subps
sub
sahf
mov
stos
mov
icebp
push
mov
lret
movsb
in
lods
jns
call
xorb
pop
loope
imul
stos
nop
inc
das
pushf
inc
dec
or
dec
stos
jne
rorb
sub
lock
jne
out
push
cld
icebp
lock
jne
xor
adc
add
shl
cmp
push
xor
add
rolb
lock
mov
pop
cld
xor
in
aad
in
sbb
aam
fsubrl
sar
xor
add
push
pop
cmp
je
stos
adcl
xor
outsb
jmp
xor
ljmp
scas
jp
jge
push
stos
add
and
lret
push
push
mov
sbb
mov
jno
sahf
push
out
mov
aas
cld
loope
push
std
call
push
mov
or
jns
pop
or
sub
rol
mov
jne
add
dec
stc
add
push
mov
jnp
aad
xchg
sbb
jnp
loopne
clc
lods
repnz
cmpsb
cmp
pop
xor
fiaddl
inc
lock
test
mov
cmp
aam
adc
push
int
push
stos
scas
or
dec
sarl
scas
mov
mov
jp
jle
outsl
movsb
push
sub
outsb
sbb
shrl
dec
dec
pop
pushf
enter
cmpsl
jo
pop
dec
ret
movsl
and
sbb
sbb
jb
xchg
addr16
out
jmp
pop
jecxz
xor
xchg
jo
pop
xchg
mov
in
jp
insb
ds
push
mov
cmp
bound
stos
inc
dec
xorb
push
dec
add
pushl
cmpb
nop
add
or
cwtl
pushf
in
aad
rolb
data16
mov
mov
daa
mov
enter
popf
dec
push
adc
or
subb
data16
out
pop
mov
rclb
mov
add
outsl
xlat
out
jmp
add
add
cmp
xlat
add
stos
fistpl
filds
add
shll
stos
adc
sbb
fisubl
add
cmpsl
subb
ss
add
stos
xchg
adc
add
sahf
cmpsb
imul
inc
repz
das
int3
mov
mov
xor
add
stos
mov
sahf
cmpsb
sbb
sahf
cmpsb
imul
cmpsb
imul
sahf
cmpsb
push
sahf
cmpsb
imul
cmpsb
imul
imul
imul
xor
mov
addb
call
in
rcl
fcomp
cwtl
cmpsl
imul
push
mov
movsb
shll
rcrl
test
nop
xchg
cwtl
dec
shll
pushf
addb
xor
js
pusha
shll
shrl
push
push
pop
dec
shll
pop
inc
inc
dec
dec
xor
shll
cmp
and
xor
shrl
sub
adc
dec
shll
sbb
add
or
xor
lcall
loopne
add
call
in
rcl
fcomp
int3
shll
mov
mov
and
and
mov
and
sbb
mov
dec
or
subl
insl
icebp
cmpb
mov
mov
push
pop
sbb
jns
cmp
andb
mov
imul
pushw
int
xor
push
pop
pop
add
or
or
or
cmp
cmpsl
jns
pusha
add
and
sub
dec
rcrl
add
add
lcall
add
dec
hlt
imul
in
add
imul
in
shrb
aam
fadds
test
movsb
rcr
or
jle
sbb
cmpsl
call
xor
movsb
test
nop
xchg
cwtl
pop
cmpsl
loopne
pushf
movsb
add
sbb
js
nop
pusha
adcb
mov
repz
in
loopne
or
rcll
cmpsb
add
cmp
cmp
or
and
pusha
andl
mov
add
mov
fadd
cmp
rol
enter
or
mov
mov
mov
shl
push
mov
imul
pop
sbb
pop
lahf
cmpsb
inc
dec
dec
pusha
sahf
add
stos
cmp
dec
aas
and
pop
ret
cs
pop
fisttpl
sub
push
or
mov
add
mull
rcr
and
push
out
jmp
shll
icebp
or
add
inc
ret
push
sub
iret
sbb
imul
stos
push
cmp
das
and
enter
sbb
and
or
es
rclb
mov
lret
and
and
adc
pushl
dec
and
push
lea
pop
jo
mov
add
sub
mov
shlb
mov
roll
rcr
cmpsb
in
mov
pextrw
movsb
lods
inc
out
xorb
iret
out
or
es
add
sahf
les
adc
out
mov
int
outsb
fildll
or
or
das
mov
ficompl
push
mov
sbb
jnp
dec
jae
add
sbb
push
or
mov
int
insb
adc
nop
lods
xor
scas
sub
adc
mov
out
shlb
dec
data16
push
fcmovb
cld
pop
out
or
and
mov
adc
jae
jb
adc
popa
add
fwait
outsb
or
xor
mov
add
lock
mov
jg
adc
jb
sbb
mov
aam
inc
push
add
and
cmp
add
movups
and
add
or
and
lcall
dec
jo
or
int
out
xchg
notb
popa
add
add
sub
or
mov
dec
fsubl
mov
cmp
fimull
fisubl
or
add
dec
ss
add
push
adcb
add
adc
int
add
jae
pop
push
and
dec
adc
psrlw
inc
lret
pusha
fcmovnu
cs
hlt
sbb
or
stos
xchg
add
test
xchg
mov
sub
adcl
or
fcmovnu
xor
jp
repz
or
push
add
pop
das
call
sbb
filds
int
out
arpl
and
add
mov
or
les
xchg
ret
adc
rclb
mov
pop
test
jne
add
setle
nop
adc
sub
inc
sub
sub
stos
hlt
add
pop
add
sbb
xchg
fs
nop
add
sub
adc
jno
les
add
or
or
push
jb
shlb
add
add
pop
add
add
push
scas
js
push
jo
pop
or
and
sbb
cmc
sbb
out
mov
add
inc
loope
add
enter
add
or
xor
xchg
and
or
js
testb
lods
nop
push
push
lods
xchg
pusha
push
pmaddwd
repz
ja
lret
icebp
add
fstpt
bound
bound
jo
adc
out
adc
or
push
inc
out
call
sbb
jo
shlb
inc
push
push
or
add
and
add
xor
adc
push
push
sbb
xchg
sub
add
add
or
inc
call
imul
sbb
push
or
out
mov
pop
mulb
or
lods
icebp
es
mov
or
or
aad
mov
scas
sub
fidivs
push
lock
xchg
pop
std
and
clc
mov
rolb
xor
cmp
pusha
mov
inc
and
push
mov
push
imul
xor
mov
outsl
mov
add
out
and
pop
adc
add
ret
fwait
or
fs
repz
loope
add
xor
cmc
mov
inc
or
inc
stc
or
testl
sub
sbb
and
or
dec
orl
enter
jl
add
in
and
lods
mov
shrl
inc
xor
and
dec
lods
adc
out
inc
add
jne
shrl
mov
dec
dec
adc
cmpb
add
out
sbb
fdivs
mov
lcall
add
sti
outsl
outsl
mov
out
int3
or
adc
and
lds
enter
or
mov
mov
add
lea
divb
sub
cltd
and
add
int
jmp
test
add
cmpsb
std
stos
incl
push
jp
xor
xor
push
xor
sbb
fisttps
or
pop
out
add
or
jbe
call
and
adc
or
adc
push
or
int
fsubl
test
hlt
or
lods
inc
cli
mov
add
les
test
mov
jbe
pop
inc
out
insb
xor
mov
xor
scas
push
add
adc
and
lea
fs
cmc
addl
jecxz
cmc
fcmove
add
sub
add
adcl
fstpl
into
adcb
xor
add
adc
or
out
adc
pop
icebp
divb
sbb
xchg
sbb
les
lock
stos
jp
xor
mov
or
mov
pop
dec
aad
or
mov
and
inc
sbb
sahf
std
aas
nop
cwtl
adc
stos
jp
xor
adc
xor
mov
xor
mov
add
push
xor
sbb
int
lcall
seto
addb
ret
sar
aad
es
mov
push
xchg
or
inc
jp
scas
mov
mov
add
add
inc
dec
rdpmc
push
jno
pop
call
xorb
mov
xor
arpl
add
rorl
xor
sbb
pop
xchg
iret
in
iret
out
fwait
sub
xor
mov
jp
jp
into
push
push
jnp
sub
sbbl
or
push
pusha
fisubl
or
int3
inc
scas
fisubrl
push
lock
es
pop
sti
ljmp
int
and
mov
inc
andl
mov
or
loop
sbb
sub
sahf
ds
xor
and
add
push
ret
ljmp
adc
or
in
out
popa
or
or
adc
ljmp
jp
sbb
and
lcall
out
pop
inc
add
inc
inc
dec
mov
aaa
insl
outsl
pop
mov
fisttps
mov
ret
punpcklbw
sub
pushw
add
jb
sar
adc
daa
std
sarb
call
mov
xorb
or
inc
sbb
and
mov
daa
add
pusha
subb
add
daa
xchg
or
scas
sbb
and
mov
or
subl
and
es
cmp
or
sub
or
lds
out
repnz
test
aas
fs
pop
cmp
and
and
sbbl
push
push
cmpl
pop
dec
into
inc
and
sbb
add
cs
dec
sub
sbb
or
pop
inc
add
mov
add
push
inc
xchg
sbb
mov
shlb
push
call
add
adc
push
or
es
add
adc
fmuls
mov
out
mov
cmp
push
or
or
jb
test
mov
dec
out
rcr
dec
sti
or
add
push
out
xor
shll
in
and
push
and
jb
loopne
pop
jg
int
lcall
or
pusha
adc
xchg
and
add
push
add
inc
push
add
test
nop
add
js
cmp
push
lods
sub
aaa
test
and
stos
test
and
or
loopne
popa
add
jo
mov
jb
jo
mov
jbe
add
xor
mov
out
add
or
lods
xchg
lahf
ljmp
sub
stos
pop
inc
call
and
cs
pop
ljmp
pop
enter
jne
out
fidivs
add
test
imul
test
pop
mov
rorb
pop
lcall
mov
mov
mov
pop
ja
xchg
add
fsubs
ljmp
insb
or
aad
aas
sub
ljmp
out
and
dec
adc
mov
mov
movsl
pop
outsl
cmp
lods
sarb
push
ja
cmp
adc
in
ss
stos
mov
rsqrtps
outsl
xlat
popa
cmpsl
xor
xor
test
out
outsl
pop
rcrl
mov
pop
fs
mov
mov
add
imul
imul
jb
mov
pop
imul
adc
fadd
dec
ret
fwait
es
int3
mov
and
adc
ss
test
xchg
jnp
push
pop
es
cmp
jmp
and
lods
lock
call
xchg
mov
xchg
xchg
push
xchg
cmp
arpl
xchg
adc
jo
stos
ljmp
xor
idiv
cs
and
fdiv
inc
push
sub
das
sbb
cmpsb
sbb
in
je
bound
dec
into
adc
adc
xchg
jge
out
inc
pushf
sti
push
aam
xorl
pop
jb
lds
roll
mov
sub
inc
movsb
ret
cmpsl
lcall
sbb
mov
push
adc
push
popa
add
or
add
out
roll
add
lock
shlb
ja
mov
xor
inc
xor
loopne
pop
sarl
out
cmp
add
hlt
cmp
inc
pop
add
mov
ds
insb
ja
sub
lret
ror
xchg
cmpsb
fisubrl
pop
lock
in
lock
ret
ret
xlat
or
js
inc
pop
stos
out
imul
shlb
or
popa
loope
add
sbb
test
inc
pop
clc
js
or
test
shlb
sub
jmp
mov
mov
and
nop
adc
fimull
push
mov
mov
rorl
pusha
gs
ret
add
add
jno
mov
test
and
jmp
mov
mov
add
pop
outsl
addr16
popa
jl
add
bound
inc
insb
cld
imul
cmovns
dec
jnp
adc
jl
xchg
inc
adc
lock
mov
cmpsb
xor
adc
bound
jl
mov
outsb
xchg
subl
addr16
sti
dec
mov
adc
dec
jbe
outsl
ss
negb
inc
or
and
adc
xor
or
jo
inc
outsl
jge
dec
mov
inc
popa
insl
outsl
bound
add
sahf
sub
scas
pop
arpl
dec
push
loopne
dec
repnz
jp
dec
dec
add
orb
loope
adc
inc
mov
xor
pop
insb
les
das
push
lds
bound
sub
mov
xchg
add
mov
add
xchg
or
or
mov
ret
jno
shlb
dec
imul
xor
adc
out
cmp
add
or
in
add
push
add
jle
mov
adc
mov
mov
cmp
dec
mov
adc
push
fcoml
push
xchg
js
pop
lock
push
bound
adc
ja
mov
cmp
loop
adc
inc
push
inc
pusha
lahf
and
dec
push
orb
dec
lock
xchg
ja
add
inc
xor
dec
js
fcoms
mov
mov
add
addr16
dec
xor
adc
push
xchg
and
test
add
add
add
pop
loopne
add
or
dec
add
add
pop
or
xlat
fistps
push
mov
orb
pop
nop
pop
jae
inc
adc
mov
and
sti
adc
fcoml
push
pop
mov
or
or
jb
imul
dec
loopne
ss
cwtl
loop
jl
or
pop
es
adc
loopne
jnp
loop
dec
jnp
in
pop
mov
dec
adc
and
xchg
adc
dec
outsb
mov
test
mov
xor
gs
add
cltd
std
cs
add
adcb
sbb
pop
pop
insl
std
add
sub
xor
and
jg
iret
add
cmpsl
add
xor
popa
pop
adc
shlb
mov
pop
sub
sbb
push
jnp
clc
and
incb
add
cmp
sub
ljmp
add
into
jbe
pop
pusha
fiadds
das
test
or
dec
push
fsubs
jnp
hlt
mov
xorb
orl
add
xor
and
andb
cld
jo
xchg
insb
push
jnp
sahf
jo
or
or
sbb
jle
jns
or
movsl
enter
mov
lods
dec
nop
lock
ja
mov
arpl
ja
xchg
lods
nop
fcomps
inc
imulb
cli
lret
pop
pop
imul
inc
mov
mov
or
jmp
cmpb
test
out
jle
push
out
jnp
bound
sbb
xchg
call
addr16
movb
imulb
xorb
divb
inc
popa
mov
pop
dec
mov
sbb
outsb
xchg
ja
sbb
mov
and
cmp
pop
shrl
push
cmpsl
movsl
lds
pushf
cmp
icebp
call
mov
leave
adc
lds
adc
inc
mov
pop
push
outsl
inc
pop
lret
rcll
adc
cmp
pop
push
sbb
inc
add
dec
aad
aad
out
xor
mov
nop
out
and
inc
xor
or
cwtl
mov
pop
pop
push
je
jo
outsl
test
insb
jp
fisubrs
stos
sbbb
testb
inc
inc
inc
jle
cmp
lret
inc
sub
test
incl
inc
lods
inc
or
or
or
aam
push
cmp
add
add
pop
insl
or
scas
in
lret
cmc
pop
and
imul
add
and
mov
xchg
push
lret
inc
add
call
push
push
inc
jnp
cmpb
sbb
rorb
jbe
inc
push
mov
or
pop
sahf
addr16
data16
orb
fdivrs
push
xchg
add
cmp
add
mov
add
into
xchg
mov
stos
pop
cwtl
imul
lock
cld
mov
add
pusha
jg
lahf
loope
cmp
filds
call
fs
or
mov
cs
ss
mov
inc
push
cwtl
jmp
or
out
jp
ret
outsb
and
decl
scas
nop
fs
ret
dec
lret
and
dec
in
enter
inc
ret
dec
sbb
and
sub
clc
xchg
test
andl
nop
hlt
jg
push
mov
and
sbb
add
xor
cmp
xorb
mov
movsl
sub
dec
jle
and
clc
ljmp
sbb
or
inc
pop
sbb
pop
and
and
icebp
scas
pop
xchg
cmpsl
popa
or
outsb
loope
mov
adc
add
decl
fistpl
and
mov
sub
ret
loopne
rclb
mov
sbb
push
push
mov
cmp
inc
loope
push
pusha
add
cld
movsl
add
int
push
orb
inc
ret
dec
insb
or
pusha
shll
data16
fwait
push
imul
pop
inc
inc
xchg
imul
push
imul
jecxz
stos
inc
rorb
adc
adc
shlb
jbe
jp
add
shlb
test
outsl
insb
inc
lods
test
mov
lret
inc
or
inc
dec
or
dec
inc
pop
arpl
cmp
mov
adc
xor
or
movsb
dec
ret
imul
add
pop
inc
push
popa
jns
pop
roll
pop
adc
mov
mov
jge
loopne
dec
bnd
xchg
xchg
pop
add
inc
adc
inc
cmp
push
add
and
add
pop
arpl
sti
pop
hlt
jb
pop
dec
cs
adc
movsb
jg
mov
outsl
push
and
inc
and
add
das
cli
orb
mov
add
mov
outsl
aaa
mov
mov
imul
sub
sbb
loope
cmp
jbe
movsb
inc
or
cwtl
stos
cwtl
or
inc
push
and
mov
loope
call
out
push
dec
rcr
inc
or
add
xchg
sbb
add
outsl
inc
dec
mov
add
or
setb
add
clc
call
fadds
or
orb
js
sub
insl
sarl
add
addr16
or
sbb
push
lods
add
adc
add
sbb
sbb
repnz
fistpll
adcl
push
push
push
jo
add
decl
imul
insl
lock
adc
or
mov
lock
stos
mov
rolb
and
mov
insb
inc
imul
icebp
push
dec
repnz
loopne
mov
call
sahf
and
add
pop
jle
insl
push
dec
and
cli
imul
int
mov
jb
jbe
nop
outsl
jns
push
or
add
inc
jb
add
roll
push
or
xchg
fldenv
push
cmpsb
xor
mov
decl
mov
mov
push
mov
jecxz
mov
lock
mov
sbb
setns
cmovs
dec
shll
adc
hlt
add
pusha
jnp
incl
and
xor
sbb
inc
mov
cmovbe
roll
loope
jmp
xchg
roll
inc
dec
inc
dec
mov
sub
push
adc
lcall
dec
bound
add
push
add
mov
insl
data16
gs
jle
test
jbe
dec
sub
or
pcmpeqb
cmp
jecxz
pop
mov
jecxz
loop
scas
ret
and
sub
adc
mov
pop
push
outsl
pop
int
call
jnp
mov
decl
icebp
dec
pop
mov
popa
or
sbb
push
inc
mov
inc
push
in
or
or
mov
adcb
inc
adc
pop
cld
or
or
add
test
sbb
add
sub
adc
pop
xchg
adc
jmp
cwtl
adc
jl
pop
adc
inc
dec
add
outsb
insl
xchg
and
aaa
pop
mov
or
pop
jecxz
cwtl
nop
xchg
add
adc
lock
push
hlt
pushl
adc
inc
jge
dec
xchg
das
sahf
cmp
decl
leave
jecxz
loope,pn
and
setae
lcall
push
or
cmp
push
or
xor
cli
add
jle
adc
pop
add
jl
mov
mov
jg
and
into
or
inc
lret
mov
incl
or
loope
shll
and
mov
ficomps
jo
call
ret
int3
jmp
sbb
and
adc
pop
add
lea
add
jmp
and
add
mov
lcall
add
gs
dec
jo
adc
inc
insl
sub
sub
and
fs
add
shl
fistpll
dec
pusha
outsl
insl
adc
lock
ljmp
cwtl
jecxz
loopne
bnd
into
filds
aas
add
adc
scas
test
jp
and
sbb
cwtl
jo
inc
dec
loopne
sarb
jl
inc
fdiv
mov
jnp
lock
nop
lds
mov
push
add
push
sti
xor
pop
inc
add
sbb
std
pop
sti
jl
popa
ja
sub
pusha
roll
add
icebp
or
ljmp
dec
push
xchg
pop
addr16
push
adc
cltd
adc
jl
scas
les
nop
push
add
bound
jns
adc
fstpt
in
fdivs
int3
sbb
imul
cmp
lret
fidivl
rorl
pop
xorl
sbbl
or
mov
xor
jp
movsb
int3
pop
lods
dec
jmp
jle
push
popa
and
inc
jno
dec
jnp
mov
int3
stc
mov
and
int3
shlb
cli
pop
and
nop
sub
dec
popaw
pop
xor
adc
add
sbb
shl
push
push
xlat
mov
inc
shlb
mov
push
clc
dec
jge
add
and
sub
xor
js
imul
add
mov
fs
ljmp
mov
pop
dec
pop
inc
xor
xor
add
pop
jnp
mov
outsb
push
arpl
data16
mov
lods
add
clc
lods
add
adc
push
and
xor
or
test
outsl
pop
les
js
das
adc
imul
pop
jle
insl
push
sub
call
or
int3
xor
fbld
addr16
jl
xchg
add
add
test
pop
pop
cmp
add
fcos
ljmp
xchg
jne
or
mov
add
add
test
inc
xor
mov
push
nop
vmwrite
sub
js
push
js
mov
dec
lods
sbbb
aam
jecxz
cld
daa
lret
adcb
push
dec
jg
jg
stos
gs
sub
dec
orb
or
or
dec
jbe
mov
mov
outsb
pop
jl
fsubrl
jbe
and
adc
cmc
incl
inc
subb
orl
adc
inc
mov
ret
int
lods
jl
popa
xor
or
add
fcomp
invd
ret
or
push
adc
pop
clc
push
jae
mov
push
js
inc
mov
push
ds
mov
rolb
jbe
je
xor
add
add
xor
test
or
stos
inc
or
lcall
pop
xor
or
push
ja
aad
adc
and
mov
sub
sbbl
rcrb
rolb
sub
xor
insb
dec
fisttpll
rclb
mov
mov
inc
movb
xor
mov
movsl
add
cs
arpl
inc
lods
fadds
xchg
rclb
fcoml
adc
or
jl
jle
lds
adc
push
rolb
sub
js
push
les
aad
mov
inc
add
adc
ror
dec
addr16
push
adc
xchg
in
inc
adc
jmp
add
stc
inc
jl
imul
neg
mov
lds
rorb
loope
or
dec
push
sub
lock
scas
pop
push
mov
jp
or
mov
mov
or
dec
add
aad
add
and
out
or
outsl
push
inc
movsb
or
xchg
mov
inc
or
xchg
dec
test
mov
xor
cs
pop
inc
jne
or
pop
sti
add
jmp
pop
mov
dec
and
filds
rorl
je
jns
addb
cmp
add
push
cli
inc
jg
jp
jns
popa
add
imul
cmp
or
dec
aaa
or
cmp
addr16
push
hlt
pop
inc
jo
cmp
inc
pusha
pop
ja
pop
or
out
cmp
rolb
dec
sbb
add
shll
aad
movsb
sbb
pop
jo
push
mov
and
push
cld
dec
inc
adc
or
ret
add
sub
or
loop
dec
add
jl
add
aad
mov
mov
aaa
aad
sub
lds
dec
call
dec
pop
push
pop
pop
test
mov
inc
or
jp
subl
jge
push
jnp
dec
data16
mov
adc
jg
lea
add
add
sbb
jl
jp
sbb
push
int3
dec
test
ljmp
nop
je
insb
cmp
xchg
cmpsb
add
or
outsl
clc
outsl
mov
push
outsl
and
pop
and
loope
inc
setno
out
sbb
das
ret
mov
adc
adc
jns
dec
andb
lock
pop
out
or
mov
adc
push
pop
pop
lcall
or
adc
xchg
xor
push
and
call
dec
jmp
or
ds
mov
cmpsb
add
cmpsl
add
out
pusha
loopne
and
add
dec
sub
ja
sub
or
loopne
cltd
arpl
add
divl
out
and
mov
push
sbb
inc
add
cmc
decl
bound
dec
pop
test
popl
mov
sarb
imul
dec
jle
imul
jl
mov
add
pop
rcrl
or
inc
add
pusha
ja
or
adc
insl
jle
loopne
jge
imul
out
add
ja
sbb
push
mov
or
push
ss
pop
ficoml
loop
lds
or
push
out
or
add
add
inc
addr16
or
jge
test
inc
jecxz
jns
pusha
loopne
add
mov
fisttpl
sub
mov
pusha
je
jnp
jecxz
mov
pop
jp
data16
pop
loopne
std
jbe
add
xchg
dec
dec
xor
inc
add
or
aam
shlb
sbb
jbe
andb
inc
clc
push
add
add
call
add
add
lret
push
inc
sbb
jg
mov
call
mov
and
shrl
ss
sbb
add
pop
or
out
inc
jo
push
or
xor
jns
push
and
outsl
cli
or
mov
mov
hlt
push
mov
dec
xchg
add
clc
div
in
pop
int
or
sub
sbb
insb
cwtl
xchg
sbb
or
mov
pop
mov
decl
inc
adc
adc
scas
jecxz
scas
jg
das
mov
dec
cs
nop
mov
lret
xchg
inc
std
ljmp
repz
adc
inc
pop
in
dec
jg
add
fwait
dec
push
or
mov
scas
dec
jecxz
push
mov
and
mov
fldt
jbe
fisttpll
enter
ljmp
dec
mov
cmpsb
dec
mov
add
sub
cmp
out
add
mov
adc
mov
mov
jo
pop
dec
scas
jp
in
ret
and
ss
pop
push
sbb
hlt
cli
decl
test
in
inc
je
add
dec
imul
lahf
push
test
mov
dec
add
lock
and
add
mov
movl
ljmp
lcall
push
clc
lds
xor
push
icebp
push
test
call
push
into
pop
stos
cmpb
fcomip
add
push
xchg
add
push
pop
cld
imul
mov
mov
pop
outsb
lret
lret
incb
ret
cmc
xor
add
lods
jle
std
inc
dec
ret
push
push
rorl
sbbl
clc
jg
xor
and
in
push
sbb
fsubp
mov
adc
dec
mov
test
mov
ret
mov
hlt
in
cmp
and
lcall
loope
xor
repz
jns
movsl
ljmp
outsl
jg
bound
xor
ret
sbb
add
xor
imul
sub
clc
pop
es
sub
xor
outsl
pop
push
iret
cld
cmpsl
sub
xchg
push
xor
push
orl
pushf
mov
scas
jg
adc
stos
out
stos
sub
jno
and
jae
mov
ljmp
dec
fiadds
rcrl
insl
jne
ret
pop
jns
icebp
lahf
xor
std
xor
je
sub
push
das
xchg
dec
mov
clc
mov
dec
cltd
cmp
fnstenv
fwait
loop
mov
add
mov
or
mov
and
sub
lcall
sahf
push
aaa
test
mov
mov
stos
mov
add
pop
test
test
mov
ljmp
mov
add
stos
into
ror
call
out
adc
lahf
xor
mov
imul
mov
pop
data16
or
test
add
sub
pop
mov
loopne
jb
arpl
sub
cld
int
in
fwait
mov
sti
add
jae
add
mov
add
movsl
sub
pusha
sub
or
cld
add
mov
es
nop
and
fbstp
xchg
push
inc
sbbb
adc
mov
cld
xchg
xor
insb
dec
sti
insl
pop
dec
push
sub
lods
mov
adc
cmpl
fistl
andb
ret
lea
les
xor
testl
lcall
outsl
xor
pusha
push
xor
xor
jl
or
sbb
xchg
pushl
or
dec
or
inc
push
pop
or
lss
setbe
or
inc
sub
and
rclb
nop
ret
dec
mov
stos
inc
pop
add
stc
cmpsb
imul
es
addb
dec
imul
or
pop
test
decb
out
shrb
fiadds
sbb
sub
sarl
cmp
addb
dec
sahf
addb
sbb
lods
jb
jp
jle
xor
push
mov
sub
cmp
add
adc
sub
and
cmp
xor
int
cld
ss
ss
ss
push
ss
bound
jp
mov
xorb
std
test
xchg
ss
mov
lret
add
out
cli
xor
xor
xor
xor
xor
adc
inc
xor
fwait
mov
xor
jp
jb
xor
stos
xor
fwait
mov
xor
fidivl
shr
xor
xor
xor
xchg
ficoml
mov
sbb
repz
jg
and
cmp
mov
dec
xor
pop
xor
push
bound
jp
stc
fwait
imul
mov
stos
xor
fwait
lcall
fidivl
xor
loop
cli
xor
xchg
add
loop
mov
or
add
sbb
mov
jg,pt
aaa
and
adc
inc
ds
ds
push
bound
jp
jb
jg
aaa
mov
cmpb
ds
stos
mov
lret
in
aaa
jg
fidivrl
shr
loop,pt
cli
repnz
add
sbb
mov
cld
int
cld
sub
and
cmp
aas
dec
aas
inc
aas
pop
aas
aas
push
bound
jp
int
aas
mov
cmpb
aas
aas
stos
aas
mov
lret
aas
int
cld
int
aas
aas
ljmp
or
cmp
cmp
cld
int
cld
sub
cmp
cmp
dec
cmp
cmp
cmp
push
bound
cmp
cld
int
cmp
cmp
cmp
cmp
stos
cmp
cmp
cmp
lret
cmp
int
cmp
ljmp
or
cmp
sub
cmp
pop
cmp
insb
mov
cmpsb
jo
ret
cmp
fwait
mov
fidivrl
cmp
cmp
cmp
cmp
aaa
fwait
or
pop
inc
fldt
push
outsl
mov
jp
mov
mov
cmpb
cmp
stos
cmp
popf
dec
loope
lret
add
add
int
cld
in
cmp
cmp
cmp
dec
cmp
pop
cmp
fwait
dec
sar
cmp
jp
loope
insl
test
jecxz
lret
cmp
cmp
out
mov
ljmp
or
add
sbb
cmp
cmp
fsubrl
cmp
cmp
add
adc
cmp
ds
mov
pop
mov
cmp
pusha
cmp
out
shlb
loopne
popa
sti
je
mul
cli
aas
pop
loopne
push
pop
push
pop
shl
mov
dec
ficomps
mov
fwait
ret
out
insb
or
jmp
xor
adc
fists
xor
inc
xor
test
xor
shlb
or
sbb
adc
fwait
ret
loopne
pop
mov
popa
inc
outsb
movsb
dec
pusha
inc
or
sub
ds
ds
lea
xchg
ds
loope
icebp
add
cld
ja
test
cmc
and
aas
cmp
cmp
cs
cmp
cmp
cmp
add
andb
jb
test
repz
notb
xchg
cmp
push
mov
cmp
and
cmp
cmp
jg
sub
cmp
pop
testl
fwait
mov
mov
cmp
adc
cmp
cmp
cmp
out
addr16
mov
cmp
sub
test
or
inc
add
add
jg
insl
add
aaa
cmp
dec
aaa
inc
aaa
push
aaa
fwait
cmp
insb
fs
mov
fwait
aaa
jmp
insl
or
add
sub
xor
movsb
xor
fcomps
aaa
push
xor
xor
xor
inc
xchg
xor
adc
cmp
call
sbb
add
jns
jae
xchg
xor
loopne
cmpsb
and
add
xor
xor
adc
aad
or
xor
push
subb
sub
cmpsb
cmp
push
fwait
inc
xor
add
add
loopne
insl
or
add
movsb
cmp
loopne
cmpl
add
aaa
mov
mov
jbe
aaa
fnstenv
and
push
fwait
ret
add
adc
xor
fidivs
xor
lret
xor
js
jo
sub
aad
add
xor
xor
sub
arpl
cld
pushl
mov
mov
mov
shll
xor
xor
jbe
xor
cmpsb
lock
push
cld
add
adc
call
aas
pop
aas
jbe
addl
cmp
cmp
sarl
cmp
jg
mov
aas
in
cwtl
add
pop
cli
cmp
decl
xor
jle
jmp
xor
xor
xor
xor
adc
and
inc
mov
sahf
push
pusha
or
jo
mov
ds
xor
mov
and
mov
cmp
incl
sbbb
cmp
loopne
add
xlat
ss
adc
sub
pop
aaa
pusha
aaa
adcb
out
pusha
sub
pop
xor
xor
cmp
jmp
xor
inc
xor
insl
popa
push
adc
ds
pushl
test
adc
cmpl
aas
aam
aas
aas
hlt
loopne
cwtl
cmp
inc
cmp
mov
push
cmp
cmp
inc
cmp
outsl
jg
and
pop
cmp
cltd
cmp
adc
cmp
cmp
jmp
add
mov
adc
cmp
ss
ss
mov
pop
shrl
aad
aaa
sbb
adc
sub
and
cmp
xor
stos
pop
icebp
faddl
aaa
dec
xor
xor
add
out
loopne
push
cmc
out
xchg
add
sub
jp
lds
dec
call
cld
sbbb
or
loope
pushl
lahf
jo
jmp
and
push
mov
xchg
aas
mov
in
or
aas
adc
pop
push
xchg
adc
mov
add
adc
scas
cmp
cmp
pusha
cmpsb
cwtl
push
mov
out
pop
cmp
mov
arpl
hlt
sbb
push
cmp
cmp
adc
fwait
mov
and
adc
cmp
jnp
mov
sahf
cmp
cmp
cmp
leave
mov
dec
aaa
outsl
xor
pop
or
cld
xor
sub
xor
mov
and
js
adcb
fbld
xor
inc
xor
inc
adc
mov
scas
sbb
sbb
das
inc
fists
aas
mov
pop
cmp
add
push
std
inc
nop
pushf
cmp
mov
int3
cmp
cmp
push
dec
add
mov
cmp
push
cmp
cld
or
cmp
loope
push
cmp
dec
fwait
insb
mov
cmp
mov
xor
test
xor
scas
lret
xor
xor
xor
sbb
xor
scas
xor
xor
or
push
inc
xor
dec
lock
ds
lds
test
inc
aas
pop
adc
cmp
nop
adc
cmp
jg
cmp
cmp
jl
cmp
cmp
jo
xor
xor
adc
xor
cld
ja
je
pop
mov
xor
movsl
aas
xor
xchg
xor
dec
xor
xor
inc
inc
adc
incb
pushl
fcomp
insb
add
sbb
test
cmp
aaa
and
and
lock
xor
cwtl
cmp
jne
mov
dec
inc
xor
xor
mov
push
inc
push
and
xor
inc
mov
jg
nop
dec
push
inc
cmp
imul
add
jns
jne
jno
pushf
xor
mov
xorb
popf
cmp
cmp
dec
mov
rclb
mov
pusha
int
leave
cmp
push
adc
fnstcw
aad
sarl
in
decl
loope
std
cmp
add
dec
icebp
cmp
inc
cmp
push
dec
sbb
adc
jo
sub
nop
push
cmp
repz
jg
xor
dec
cmp
inc
cmp
pop
cmp
cmp
insl
cmp
repz
jg
cmp
jge
jns
cmp
cmp
cmp
or
cmp
mov
fwait
incl
cmp
cmp
sub
cmp
cmp
outsl
adc
cmp
inc
cmp
cmp
push
cmp
jmp
outsl
insl
cmp
cmp
cmp
jne
jno
cmp
cmpl
popf
and
cmp
test
cmp
ss
and
mov
xchg
xor
add
clc
pushf
sahf
mov
ja
or
sub
and
pusha
ds
lock
aas
add
mov
mov
adc
aas
idiv
cmp
cmp
cmp
cmp
or
cmp
cmp
ljmp
cmp
xchg
cmp
adc
fwait
cmp
lea
cmp
or
push
jge
cmp
scas
dec
mov
xor
scas
scas
sub
sti
xor
adc
inc
xor
test
xor
sbb
xor
pop
mov
xor
cli
and
xor
ljmp
xor
xor
xor
and
xchg
enter
nop
insl
adc
cli
jb
lods
xor
mov
inc
subb
adc
addb
aas
xor
ja
fwait
add
hlt
or
or
decl
arpl
jo
les
pop
adc
sub
cmp
fistl
cmp
dec
inc
call
inc
cmp
mov
decl
rcrb
or
push
cmp
cmp
push
cmp
shrb
rcrb
loop
jne
dec
movsb
mov
push
ss
das
sub
pop
aaa
push
out
jg
aaa
imul
aaa
jge
je
jo
mov
test
pushf
aaa
cmpsb
xor
in
aaa
in
pushl
stc
icebp
aaa
or
inc
lcall
sbb
xor
xor
inc
lock
nop
sub
incl
xor
xor
sub
xor
lret
inc
divb
add
aaa
incl
xor
push
xor
xor
stos
jae
or
and
out
mov
cmpb
ds
and
jg
cmp
cmp
outsl
cmp
mov
mov
xchg
mov
pushl
out
sti
adc
xchg
nop
cmp
jg
jecxz
xor
jg
sarb
add
jo
out
call
aaa
cwtl
aaa
mov
shrb
aaa
pop
mov
jno
stos
sub
pop
jo
and
xor
pushl
in
stos
add
jae
push
xor
jnp
stos
pushl
xor
xor
mov
jmp
sbb
dec
xor
scas
xor
stos
cmpl
xor
xor
xor
push
push
mov
pushl
pushf
xor
xor
lock
jb
mov
out
les
or
sbb
adc
mov
aaa
clc
inc
mov
sbbb
aas
ljmp
mov
or
mov
sarb
in
aas
and
clc
aas
fcompl
adc
cmp
jle
js
or
add
cmp
into
in
cmp
xor
cmp
rclb
cmp
cmp
cmp
rcrb
mov
dec
es
add
pop
xchg
add
cmp
cmp
cmp
cmp
in
out
add
ss
or
xor
push
or
xor
outsb
outsb
paddw
add
xor
cmpsb
decl
mov
mov
cmp
xor
inc
sub
inc
decl
arpl
xorl
xchg
mov
mov
xor
or
cmp
les
mov
out
cld
mov
jo
jmp
lcall
adc
dec
add
ds
das
rclb
sbb
cmp
cmpsl
add
or
lods
jnp
lods
cmp
xchg
cmp
pop
cmp
lock
aad
and
push
data16
xor
xor
ss
popa
xor
nop
xor
sbb
or
mov
loope
cmpsb
adc
jno
js
jo
sar
les
call
jge
pop
sarb
clc
pop
fstpl
mov
cmp
cmp
cmp
xchg
jle
lcall
int
lds
sarb
cmp
fdivrl
inc
or
and
divl
xor
pop
sub
call
std
xor
xor
xor
jo
xor
xor
xor
adc
xor
adc
push
xor
pushl
incl
xor
shlb
xor
adc
xor
xchg
inc
mov
rdpmc
push
xor
rclb
bound
jle
js
adcb
rorb
loopne
mov
adc
aas
xor
add
imul
nop
sub
xor
hlt
adc
iret
cmp
pop
xor
shrl
scas
and
pop
sbb
cmp
xor
dec
ds
nop
insb
outsl
push
popa
fiaddl
ds
push
std
sub
mov
adc
cs
inc
orb
mov
jg
and
cmp
adc
jo
das
cmp
add
mov
jg
cmp
cmp
test
mov
cmp
jo
push
data16
lcall
orl
jmp
cmp
cmp
add
in
ss
adc
cmpsb
mov
aaa
dec
insb
pop
aaa
push
xchg
lods
jle
mov
int
aad
cli
aaa
sbb
xor
xor
sbb
cld
in
rorl
scas
adc
xor
or
mov
mov
in
mov
xlat
xor
sub
ss
jmp
popl
xor
adc
xor
xor
xor
negb
xor
mov
xorl
xor
mov
jmp
or
sbb
pop
xor
push
inc
sti
adc
xor
push
xor
scas
xchg
push
test
push
ljmp
ficomps
aas
add
jg
outsl
data16
mov
mov
aas
sarb
aas
aam
mov
jmp
cld
adc
aas
lock
outsl
jb
mov
sub
es
cmp
xchg
test
ss
fs
jns
mov
cld
int
adc
cmp
enter
in
cmp
clc
cmp
cmp
mov
cmp
cmp
lods
cmp
orl
add
mov
push
inc
and
cmp
push
cmp
cmp
inc
aaa
jg
cmp
fidivrs
xlat
push
push
pop
outsb
adc
push
cwtl
adc
jb
clc
push
mov
cmp
jo
adc
cmp
cmp
mov
add
cmp
jo
adc
push
out
dec
andb
cmp
cmp
cmp
cmp
loop
mov
cmp
cmp
icebp
aas
call
or
add
cld
in
cs
adc
pushf
ss
adc
cs
ss
ss
aaa
and
xchg
adc
sbb
adc
xchg
xor
sub
fcmovnu
cld
xor
test
pop
mov
pushf
xor
xor
xor
xor
loop
mov
and
cmp
aad
cs
lods
pop
mov
sti
xor
cld
inc
insl
or
add
push
sub
pop
ds
ds
aam
out
adc
ds
aam
or
sti
sbb
addr16
jb
mov
fists
xlat
aas
loope
add
je
stos
jo
cmp
mov
imulb
mov
adc
cmp
add
cmp
insl
jmp
push
mov
inc
cmp
cmp
adc
xchg
sarl
cmp
ljmp
push
xor
xor
or
xchg
and
add
out
clc
push
inc
and
xor
fisttpl
cld
fs
shlb
mov
xchg
ds
enter
xchg
stc
ret
fnstsw
jmp
hlt
xchg
and
clc
dec
call
aas
pop
aas
popf
inc
jg
lret
jbe
cmp
addb
pop
mov
pop
and
inc
xor
xor
add
fs
xor
mov
aam
pop
movsb
fidivrl
repnz
cld
sbb
inc
ds
arpl
or
imul
repz
bound
repz
mov
add
adc
cmp
cmp
cmp
jmp
xor
cmp
cmp
jecxz
sti
cmp
cmp
repz
cmc
decl
inc
js
sarb
and
cmp
addb
hlt
and
aas
add
cmp
aaa
adc
cmp
dec
cmp
addb
cmp
push
js
cld
in
outsl
ljmp
imul
arpl
jg
jnp
ja
jae
adc
cmp
fwait
cmp
cmp
stos
rolb
lcall
into
ss
xchg
sbb
fwait
push
shlb
xor
fwait
sub
jg
addl
and
notb
add
in
cld
adc
xor
sub
dec
decl
cmp
xor
popa
xor
mov
xorb
xor
mov
iret
xor
mov
inc
inc
or
add
adc
and
cmp
xor
dec
xor
push
xor
shll
jg
add
loope
mov
adc
xor
xor
xchg
stos
xor
inc
push
jmp
xor
stos
xor
aas
cmp
loopne
in
and
cmp
arpl
cwtl
mov
and
mov
lcall
out
loopne
and
sbbb
insb
ss
ss
or
cld
add
or
sbb
lea
aaa
sub
sub
and
and
cmp
or
faddl
mov
stos
aaa
shlb
mov
loopne
aaa
sub
and
xor
xor
adc
jns
mov
xor
stc
mov
sbb
xor
xor
push
lock
shll
stos
pusha
sbb
nop
das
loopne
jg
xor
xor
xor
xor
sbb
xor
xor
into
xor
lahf
xchg
cli
jno
lcall
push
ljmp
ret
xchg
mov
cmp
push
cld
aaa
cmpb
cmp
loope
dec
and
inc
cmp
aam
xor
aaa
ret
incl
mov
xor
loopne
inc
xor
jg
jg
loopne
push
xor
addb
xor
inc
inc
loope
test
je
outsb
pop
aad
adc
mov
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
or
repnz
sub
cmp
push
cmp
cmp
dec
sbb
inc
pusha
adc
xchg
cmp
xor
mov
jmp
pop
ss
ss
and
pop
adc
cmpsb
xor
pushf
inc
xor
fdivs
sbb
cmp
and
xor
xor
pusha
inc
sahf
jno
data16
bound
fdivrl
pop
xchg
xor
adc
adc
xor
mov
cli
pop
adc
jge
je
mov
xor
mov
sbb
clc
xor
xor
lret
lret
xor
xor
xor
or
shlb
call
xor
pop
xor
inc
xor
data16
push
es
mov
pop
inc
xor
rorb
sub
inc
xchg
sub
ds
pusha
cli
mov
xlat
jg
xor
lods
int3
cmp
cmp
sbbb
out
cmp
mov
and
imul
fwait
loop
pop
mov
cmp
icebp
lcall
pusha
iret
mov
xor
xor
pusha
loope
mov
xor
mov
lea
and
pop
cmp
xor
xor
cs
inc
or
xor
inc
aam
fstpt
xchg
add
mov
adc
out
clc
je
mov
in
cmp
xchg
hlt
stos
fstl
loopne
dec
cmp
jle
pusha
pusha
adc
sub
mov
mov
adc
subb
and
xchg
push
outsl
aam
lock
dec
cmp
sbb
cmp
or
push
call
cwtl
cmp
cmp
adc
sub
mov
xor
xor
adc
sbb
adc
imul
nop
cmp
fcoms
sub
pop
hlt
out
dec
aas
inc
and
mov
mov
test
cmp
cmp
sbb
jl
jne
les
jg
mov
cli
push
call
imul
cmpsl
ss
lods
js
out
jmp
and
jle
hlt
xor
jl
jo
xor
in
xor
ret
and
in
add
adc
or
and
aad
shrb
and
adc
add
push
loopne
imul
js
jne
mov
inc
ds
adc
mov
pop
icebp
ds
push
push
push
lds
jbe
nop
pop
shll
out
add
popf
adc
add
sar
ja
xchg
pop
add
sbb
adc
adc
cmp
aaa
adc
aas
dec
aas
inc
aas
inc
inc
sbbb
jg
aas
push
push
bound
gs
jle
jnp
je
jno
imul
mov
out
pop
xchg
aas
xchg
aas
lods
aas
test
xor
sarl
pop
enter
aas
fidivl
aas
out
sbb
jnp
aas
movups
out
add
cmp
xor
cmp
jbe
fsubl
cmp
add
loopne
cmp
rcrb
cmp
cmp
and
cmp
cmp
cmp
cmp
cmp
jo
cmpsb
jmp
cmp
adc
cmp
cmp
sarb
mov
cmp
or
ja
lock
cmp
add
repnz
ret
pop
aad
ret
mov
fistpll
cmp
lods
push
pop
pop
pusha
push
cmp
ret
nop
cmp
mov
xchg
cmpsb
mov
pushf
fdivp
cmp
add
out
cmpsb
push
ss
out
cld
ss
adc
xlat
add
adc
adc
mov
mov
jo
xchg
xchg
xor
icebp
es
decl
sbb
ds
mov
jo
push
xchg
cmp
cmp
cmp
and
outsl
fs
iret
cmp
cld
lods
and
stos
test
pusha
or
cmp
mov
test
outsl
mov
test
push
scas
fiadds
mov
outsl
js
shlb
in
movsb
bound
add
sahf
aas
lock
nop
jo
adc
add
xchg
pop
cmp
lods
decl
out
push
inc
xchg
movsl
cmp
xchg
lahf
cmp
add
add
fisubl
cmp
ss
pushl
cmp
xor
xor
add
sub
cltd
js
clc
xor
clc
mov
pusha
imul
lock
and
in
xor
xor
sub
inc
mov
pop
mov
sub
xor
out
cmp
nop
pop
pop
cmp
pop
mov
add
cs
or
cmp
lock
ss
ss
popf
xor
in
cmp
xor
push
test
xor
nop
lcall
mov
inc
cmp
cmp
ljmp
mov
dec
ss
ss
sahf
subb
pop
and
out
das
aaa
and
mov
mov
xchg
or
fwait
pop
jbe
sbb
xor
xor
adc
xor
xor
fcmovnb
pushl
adc
loop
pop
pop
orb
xor
xor
xor
nop
cmc
lahf
mov
push
movsb
pop
xor
in
xor
das
nop
cld
xor
stos
fcom
lock
xor
sahf
add
ds
sub
inc
lcall
xchg
ds
aaa
fsubrl
ljmp
ja
mov
jno
mov
lahf
or
sub
fdivrl
push
cmp
xorl
cli
aaa
shll
lock
lods
addr16
xchg
rorb
in
mov
dec
pusha
xor
out
and
push
xor
stos
cmp
xor
adc
push
out
push
xor
arpl
js
jne
stos
test
lcall
xor
int
les
add
sub
pusha
sbb
rorb
dec
outsb
or
aaa
sub
xchg
cmp
cmp
xor
fbstp
pop
add
push
xor
lret
cmp
cmp
mov
sbb
or
inc
inc
addb
cmp
add
sbb
sahf
pop
bound
xchg
mov
sbb
dec
lret
ljmp
sbb
aaa
add
cmp
shlb
fidivrl
ljmp
or
sbb
xor
incl
sarb
fmul
cmp
inc
cmp
jo
or
sbb
cmp
mov
incb
jp
mov
cmp
test
mov
adc
test
dec
loop
incb
push
add
es
cmp
cmp
into
cmp
lods
cmpsb
adc
data16
sbb
cmp
fists
cmp
add
sub
and
cmp
xorb
dec
cmp
pop
cmp
push
cmp
and
ljmp
cmpb
cmp
mov
ljmp
jbe
lods
push
and
and
mov
add
add
inc
sar
incl
in
int3
push
add
fidivl
add
fwait
pushf
shll
lahf
sub
and
lret
ja
lock
jmp
mov
outsl
dec
fwait
or
lods
add
lcall
sar
jg
test
loopne
mov
out
inc
add
orb
inc
mov
jg
je
dec
sbb
pop
mov
cmpsl
out
ds
pop
filds
ljmp
push
insb
je
in
xchg
ds
inc
imul
push
hlt
lock
push
mov
jg
or
or
xchg
add
push
daa
pop
jmp
or
sub
movsb
sbb
icebp
inc
clc
mov
add
push
jns
add
sbb
jg
adc
xchg
mov
dec
dec
mov
clc
dec
mov
push
cld
or
mov
aam
add
mov
pop
lahf
movsb
sbb
pop
jb
je
sub
and
fwait
push
cmpsb
cltd
mov
mov
ljmp
pop
mov
pop
adc
xchg
jmp
ret
enter
mov
testl
mov
pusha
sbb
mov
add
lret
add
pushf
add
cmpsb
lea
mov
fcmovnb
andb
mov
arpl
push
movsl
je
scas
ja
aad
lock
xchg
je
int3
xor
aam
jecxz
and
data16
incl
mov
sbb
sub
dec
rclb
repz
ss
add
or
ja
mov
insl
and
xor
ljmp
loop
push
inc
lret
rcll
mov
sub
jg
aaa
repz
push
sbb
insl
add
xor
add
js
hlt
out
push
call
jle
mov
out
out
mov
pop
push
arpl
jne
dec
aas
xor
fs
test
jnp
jg
or
mov
mov
ret
das
clc
mov
les
or
xchg
jne
push
ljmp
adc
incl
std
fimull
aas
sbb
sti
rcrl
adc
cli
and
lret
pop
popa
or
add
in
jb
repnz
in
jg
mov
inc
outsb
fs
movsb
push
cmpsb
inc
shlb
add
mov
push
dec
cli
xchg
ss
push
cld
pop
aas
or
and
ja
sahf
dec
inc
in
fnstenv
mov
mov
or
add
ss
incl
add
gs
je
push
jb
arpl
jae
inc
outsb
sbb
fbstp
arpl
push
arpl
outsl
outsb
sub
je
je
jb
jne
dec
outsb
data16
fistpll
push
push
imul
inc
imul
jns
sti
mov
jl
inc
gs
push
je
inc
mov
jbe
inc
push
inc
je
bound
es
dec
jne
mov
scas
and
mov
imul
repnz
dec
mov
dec
subb
insb
jne
mov
outsl
popa
fs
jae
jb
sbb
or
imul
jb
rolb
push
lcall
lahf
test
inc
insb
cmpsb
jno
std
mov
pusha
push
lods
pusha
outsb
addr16
jns
gs
inc
les
nop
push
push
mov
push
push
in
jb
popa
outsb
cld
push
sbb
lods
lea
icebp
loopne
notl
fs
pusha
iret
mov
mov
sbb
lods
push
popa
jl
xchg
push
push
or
dec
bound
lods
into
inc
fdivs
js
jl
bnd
push
gs
in
mov
cwtl
lahf
push
or
push
insb
jae
push
inc
test
cmp
sub
andl
xchg
push
xor
pusha
inc
cmp
inc
pop
gs
adc
sbb
mov
les
jecxz
push
lds
lock
inc
push
push
outsb
sti
pop
add
arpl
push
loope
out
and
sub
mov
pusha
xor
bound
addl
gs
ss
inc
push
inc
lods
xchg
cmp
dec
ret
xor
jns
inc
jmp
aaa
popa
and
gs
inc
jne
jae
mov
jle
dec
pushf
inc
imul
or
aas
push
hlt
cmp
sbb
push
pop
and
and
adc
outsl
push
outsl
imul
gs
pop
dec
ds
adc
or
imul
mov
rol
arpl
arpl
fs
arpl
dec
popa
nop
insb
sarb
or
cmp
ret
pusha
inc
jbe
sbb
nop
pop
push
dec
je
gs
daa
mov
outsl
jo
out
loop
or
fisubrl
dec
jmp
inc
cmpsb
gs
pop
mov
mov
mov
adc
add
repz
inc
gs
imul
or
lods
imul
movl
stos
sub
push
movl
and
jg
scas
insl
push
push
sub
lods
enter
adc
cmp
imul
mov
add
mov
xor
push
mov
push
adc
imul
jnp
inc
dec
adc
xor
push
sbb
inc
popf
sub
pop
push
inc
pop
mov
push
adc
icebp
pop
inc
sbb
mov
cli
sub
rclb
adc
cmpsb
mov
lods
inc
loope
or
rol
pop
dec
mov
jb
mov
test
mov
lret
sbb
add
cmpsb
scas
add
cmp
outsb
je
stos
jae
sbb
add
pop
dec
cli
insb
aam
add
dec
fs
adc
adc
test
fldt
call
lods
outsl
pop
arpl
jb
rorb
add
dec
push
jle
ss
ret
pop
push
outsb
fs
mov
xor
gs
insb
imul
jg
mov
pop
cltd
pop
mov
lahf
inc
sub
mov
sub
popa
aad
xor
lods
jns
aad
xor
adcb
cmpsb
inc
sub
push
push
jae
or
rcll
mov
add
adc
push
inc
push
dec
lcall
sbb
and
loopne
popl
aam
or
mov
or
fnstenv
xor
and
in
out
mov
and
add
add
lea
pushf
xor
push
inc
dec
jo
add
mov
daa
jno
mov
add
mov
repnz
jb,pn
popa
je
inc
ucomiss
in
mov
dec
push
lock
or
cs
call
subb
sub
sbb
into
cmpsl
jb
jb
daa
xchg
dec
sbb
fisubs
clc
ret
mov
add
push
dec
xchg
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
nop
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
pusha
cmp
pop
push
add
in
add
add
add
add
add
add
add
addb
add
ja
add
add
in
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
add
jae
add
add
add
add
add
jo
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
out
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
arpl
push
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
arpl
push
add
jb
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
arpl
push
add
jb
and
je
outsl
add
insb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
and
add
inc
add
insl
add
add
je
jae
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
mov
cmp
fbld
sbb
test
jecxz
addr16
lcall
adc
pop
loope
call
loope
xchg
bound
mov
in
cs
sbb
jae
pop
pop
inc
or
fwait
cli
loop
movsl
jno
sub
mulb
js
mov
scas
xor
lret
rorl
xchg
jb,pt
in
repz
pop
jnp
pop
insl
push
jmp
cmp
scas
scas
popa
jae
pop
ss
imul
iret
pop
mov
cmpsl
and
test
sub
inc
in
add
dec
in
or
sarl
mov
mov
jl
and
and
sbb
inc
pop
int3
out
jne
cmpsb
stc
lock
es
lock
insb
mov
cmp
sbb
shl
xchg
stc
movsb
movsb
dec
fldl
xchg
mov
push
mov
pusha
sbb
sbb
xchg
mov
dec
adc
add
rol
add
push
xor
loope
fimuls
add
out
dec
test
popf
fldl
out
xlat
daa
mov
nop
js
sbb
xchg
cmp
lods
adc
push
xchg
int3
xchg
mov
push
shrb
mov
call
loope
sbb
or
cmpsl
sarl
imull
lcall
mov
push
sub
dec
cmp
inc
pop
lahf
cmpsl
rcrb
aam
movb
les
and
xor
std
adc
push
push
cld
pop
in
orl
xlat
add
cmp
cs
mov
insl
fisttpl
xor
dec
inc
shll
pushf
mov
jae
push
int3
pop
test
dec
dec
imul
push
dec
ds
push
sub
and
mov
pop
sbb
lcall
nop
repz
pop
imul
cld
out
mov
or
jg
xchg
mov
ljmp
push
or
mov
stos
fdivrl
lret
in
aas
xor
jecxz
and
xchg
div
xchg
aam
inc
xchg
or
cmpsb
inc
xchg
mov
add
insb
lret
lret
loope
fwait
mov
or
aam
add
ss
clc
out
mov
loope,pn
mov
loope
mov
pop
stc
jmp
sbb
sbb
adc
mov
or
addr16
rorb
push
cltd
pop
gs
xchg
cmc
xor
imul
iret
mov
out
clc
stos
cmpsb
sbb
test
push
clc
pop
and
imul
mov
mov
push
data16
push
test
int3
sbb
push
mov
mov
inc
roll
xor
bound
cmpb
cmp
fldcw
dec
jle
lret
in
lock
fucomp
adc
data16
in
and
cmp
imul
push
and
lods
jp
in
popa
inc
xchg
add
xchg
xchg
fbstp
xor
loope
jnp
mov
dec
test
inc
adc
insb
mov
mov
scas
pop
xor
push
mov
bound
jecxz
sub
testl
out
adc
std
fisubrl
xor
fstpl
out
ret
roll
mov
jmp
pop
mov
sub
cmpsb
jmp
loop
pop
ja
xor
jno
sbb
add
cwtl
lods
push
movsb
push
fiadds
xchg
lods
jb
mov
pop
push
repnz
fimull
stc
loope
test
insl
rclb
stos
inc
and
jp
enter
sub
sar
test
lods
add
movsl
mov
arpl
pop
stc
std
mov
push
push
jle
inc
dec
in
int3
fiadds
jno
and
or
pop
in
mov
movl
les
les
loopne
or
test
push
cmpsb
mov
xchg
mov
mov
pop
insl
cld
xor
mov
mov
pushf
jp
ret
pop
mov
jnp
in
inc
das
pusha
and
adc
inc
into
pop
jge
std
sarl
adc
push
mov
int3
push
adc
imul
dec
mov
pop
dec
les
in
out
dec
cmp
addb
in
sub
arpl
and
imul
movsb
push
xchg
not
cmp
test
int3
pop
insl
jnp
jnp
xorl
jg
add
jne
jno
mov
cmp
sub
fucomp
or
pop
pushf
jnp
adc
rcl
pop
sub
mov
xor
cmc
fstl
push
mov
hlt
loop
ja
xchg
lret
mov
jae
lahf
mov
bound
je
inc
inc
inc
and
or
push
out
les
jecxz
scas
jge
dec
int
xor
pop
or
faddl
and
lods
imul
sbb
sbb
int
test
test
repnz
adc
enter
fcom
mov
inc
jle
cmpsb
and
xchg
xchg
cmp
push
arpl
cmp
fmulp
into
roll
fstpt
or
out
pop
mov
imul
pop
jbe
cmp
ds
cmc
xchg
std
into
inc
sbb
rorl
or
ds
ficoms
xor
lahf
xor
aam
pop
jne
enter
call
mov
pop
push
das
shr
adc
js
cltd
fwait
pop
xor
out
pop
aaa
mov
data16
add
mov
bound
aam
leave
repz
imul
mov
pop
push
and
cli
push
jo
lcall
dec
mov
push
inc
je
decb
cmp
jmp
push
inc
mov
out
inc
dec
ret
and
and
popa
lcall
inc
add
ficomps
cmpsb
rcrl
arpl
movsl
int
test
mov
addl
mov
jl
test
rclb
or
clc
pop
lahf
jne
nop
add
sbb
andb
gs
inc
sub
sbb
mov
outsl
cltd
push
dec
sub
repz
imul
push
lock
inc
or
jne
jae
lret
mov
mov
mov
stos
loop
pause
leave
jbe
jo
loop
mov
xchg
mov
mov
or
and
cmp
jecxz
das
pop
mov
pop
xor
stc
cld
jns
push
xchg
xchg
jge
hlt
push
push
aas
mov
jo
xchg
imul
les
repnz
movl
popf
jp
and
pop
adc
and
xchg
cwtl
jecxz
mov
adc
dec
jns
pop
inc
adc
ja
aaa
jecxz
aaa
xor
or
mov
loopne
mov
jns
test
mov
and
call
jg
mov
js
mov
mov
fdivrl
test
out
sub
sbb
idivl
imul
pop
es
fildll
add
xor
xor
add
mov
jno
sbbl
imull
cmc
stc
xchg
out
ljmp
xor
dec
xor
cmp
imulb
xor
test
add
aad
or
enter
dec
and
subb
push
test
cmpsl
adc
pop
addr16
adc
test
xor
out
xor
std
rcll
mov
mov
add
xlat
test
pop
dec
xchg
mov
nop
popl
dec
inc
or
cltd
push
adc
stos
lea
jl
add
scas
idivl
insb
add
inc
ret
and
cli
sub
gs
ficompl
mov
ret
sti
outsl
sbb
and
cmp
adc
inc
imul
mov
mov
xchg
dec
cmp
test
jne
or
cmp
sbb
loop
xlat
icebp
loopne
fidivs
hlt
and
fimuls
adc
int
dec
cmc
andb
xor
cwtl
testb
lcall
lret
mov
repnz
pop
movsl
and
pushf
jmp
movsb
ficoms
and
mov
jmp
xor
xor
or
lret
pop
adc
adc
les
out
loope
xor
pop
pop
add
push
scas
nop
test
es
mov
dec
lds
jb
jns
ss
ss
pop
cmpsl
pop
nop
lret
xchg
push
enter
icebp
lds
push
xor
mov
jl
jo
sub
out
lods
or
cli
pop
sbb
mov
jge
cs
push
sbb
jmp
push
leave
das
or
xor
push
and
mov
imul
scas
jg
mov
jo
and
filds
push
imul
out
nop
inc
or
scas
sub
inc
xchg
cli
cmp
int3
pop
xor
pop
fnstenv
adc
xchg
cmpsb
out
das
je
pop
vpaddw
sahf
mov
out
mov
jb
xchg
inc
push
sbb
call
xor
mov
ficoms
jbe,pt
sub
inc
out
mov
lods
lret
push
rorb
mov
mov
and
jns
ror
int
add
pop
inc
mov
fildll
pop
cmpsl
pop
jb
or
xchg
pop
sub
sub
mov
adcl
dec
das
lea
xor
pop
dec
inc
mov
repz
shlb
xchg
or
aad
fldt
cmp
bound
and
icebp
mov
adc
push
mov
inc
mov
sbb
jmp
sbb
into
jne
loopne
adc
cmpsb
or
mov
fbstp
mov
adc
stc
adc
nop
pop
insb
or
pop
pop
or
in
jo
pop
dec
loope
lahf
jecxz
arpl
jbe
gs
test
ljmp
cwtl
mov
pop
dec
ljmp
sti
out
ret
sbb
jns
cmc
test
imul
lret
push
shll
rcl
inc
dec
or
dec
sbb
shrb
outsb
in
aas
or
dec
test
stos
fwait
insb
sti
jmp
out
inc
xlat
cmp
dec
lods
notl
nop
popa
inc
fs
das
lock
jb
and
icebp
sub
ja
push
dec
sahf
xchg
cs
add
lcall
dec
fcoms
mov
movsb
loop
pop
mov
scas
cli
push
mov
cmp
mov
jg
push
push
mov
ja
mov
jnp
movsw
pop
int
xchg
and
int3
push
push
xchg
out
adcl
js
cmp
jecxz
sarl
lret
js
shlb
jg
dec
sub
lret
aaa
jmp
inc
xchg
push
hlt
ret
xor
jno
add
rcll
cli
jg
rcrb
adc
lods
es
sahf
sbb
or
or
jge
into
test
cltd
sbbb
mov
push
repnz
fstpl
fadd
loopne
aam
and
mov
cld
rolb
jl
xchg
cmp
lcall
inc
xchg
lret
dec
xlat
leave
and
and
jne
mov
mov
push
add
test
push
mov
pop
push
and
adc
int
rcll
in
leave
mov
mov
pop
jl
xlat
aas
push
fs
and
xor
lahf
lcall
enter
movsb
mov
mov
addr16
mov
cltd
ret
out
xchg
fs
call
call
in
mov
push
push
shrl
sbb
dec
sbb
loope
push
outsb
or
loope
inc
mulb
mov
fxch
push
cltd
mov
rcrl
loop
mov
adc
mov
in
push
and
xchg
mov
inc
sbb
mov
inc
cld
add
out
testl
mov
js
sbb
mov
outsb
scas
mov
or
or
mov
mov
enter
ja
push
sbb
dec
loop
gs
adc
sbb
xchg
sub
je
stos
ret
popf
cmpsl
add
jb
aas
fwait
xlat
push
jbe
or
jno
mov
mov
into
ret
shrl
push
jge
inc
lds
loope
pop
lods
and
or
xor
dec
push
popa
andl
inc
test
mov
adc
lods
sub
xor
xor
xlat
fdivrp
insl
pushf
ljmp
xchg
mov
jge
inc
xchg
sbb
test
inc
jle
xchg
out
arpl
adc
adc
loope
mov
repnz
rorb
pop
push
mov
jbe
lods
dec
mov
mov
dec
lret
popf
loop
push
js
popa
cmpsl
insl
inc
movsb
xor
decb
int3
push
loope
data16
sahf
call
pop
bswap
addb
push
jge
adc
fwait
and
adc
shrl
adcb
gs
dec
cmp
fisttps
in
adc
jbe
cmp
aaa
imulb
push
cltd
lds
add
mov
lock
add
mov
sub
out
or
cmp
pop
mov
inc
rep
aas
ret
adc
jecxz
push
jne
pop
shll
xchg
inc
ljmp
xlat
push
ljmp
mov
cmp
or
mov
lods
fwait
jl
lahf
mov
push
or
push
popf
dec
jg
test
cld
cmpsb
movsl
pop
loop
arpl
jns
dec
mov
fidivrl
sub
jns
outsb
adc
imull
jnp
inc
clc
adc
or
cltd
cmpsl
fwait
xorb
xor
ds
push
add
int
mov
inc
sub
mov
ret
pop
xchg
std
mov
mov
out
cmp
fistpll
enter
xlat
cs
adc
repnz
and
cmpsl
push
iret
pop
inc
fst
dec
in
mov
sbb
add
or
pop
push
mov
xchg
or
push
mov
pop
popf
sub
push
add
sub
fs
pop
ss
push
shl
sbb
fwait
pop
pop
out
lods
cltd
lock
xor
int3
lods
jb
in
xchg
arpl
sarl
roll
add
or
jno
sbb
xor
adc
cli
sbb
cli
fsubrs
xchg
clc
cwtl
pop
mov
outsb
pop
stc
std
fmul
in
stos
out
movsl
repz
mov
inc
bound
and
mov
xor
jbe
lret
or
lret
stos
push
or
repnz
adc
jbe
xchg
lea
imul
sbb
add
bound
lds
or
or
push
nop
pop
repnz
jmp
mov
mov
call
sarl
xorb
add
inc
dec
sbb
jle
pusha
or
pusha
hlt
mov
fnstenv
jb
jns
pop
mov
push
sti
cmp
imul
mov
push
insb
push
and
into
push
fnstcw
xlat
cltd
mov
adc
loop
sub
mov
push
push
push
punpcklwd
cli
lods
cmp
cmpsl
scas
jns
xor
cld
ds
add
pusha
adc
dec
sub
jle
and
shl
adc
sbb
repnz
repz
push
adc
mov
pop
pop
pop
xchg
xchg
and
icebp
loopne
mov
mov
dec
or
push
mov
insl
scas
fcoml
push
into
out
cmp
jmp
ficoms
push
push
hlt
mov
and
repz
fadd
test
sti
aad
std
leave
lret
pushf
ja
ret
jg
jb
push
std
in
fwait
or
xchg
or
jbe
dec
and
lret
in
or
and
insl
rorl
push
adc
push
sbb
or
xor
mov
and
sbb
cmp
mov
ds
stc
lods
in
mov
pop
xchg
jae
push
in
mov
movsl
xchg
push
pop
in
lcall
loop
xchg
movsb
test
xor
xchg
cltd
pop
in
sbb
jo
jle
pushf
xchg
adc
outsb
and
enter
scas
fidivrs
and
add
fcmovnb
push
enter
mov
mov
ja
push
popa
xchg
sub
push
inc
mov
mov
mov
cs
xor
sti
sub
insb
xor
int3
mov
aad
xor
mov
movsl
addl
push
inc
clc
outsb
inc
je
negb
lods
or
push
jg
pop
loope
and
scas
test
push
inc
inc
xor
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
out
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
arpl
push
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
arpl
push
add
jb
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
arpl
push
add
jb
and
je
outsl
add
insb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
and
add
inc
add
insl
add
add
je
jae
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
mov
cmp
fbld
sbb
test
jecxz
addr16
lcall
adc
pop
loope
call
loope
xchg
bound
mov
in
cs
sbb
jae
pop
pop
inc
or
fwait
cli
loop
movsl
jno
sub
mulb
js
mov
scas
xor
lret
rorl
xchg
jb,pt
in
repz
pop
jnp
pop
insl
push
jmp
cmp
scas
scas
popa
jae
pop
ss
imul
iret
pop
mov
cmpsl
and
test
sub
inc
in
add
dec
in
or
sarl
mov
mov
jl
and
and
sbb
inc
pop
int3
out
jne
cmpsb
stc
lock
es
lock
insb
mov
cmp
sbb
shl
xchg
stc
movsb
movsb
dec
fldl
xchg
mov
push
mov
pusha
sbb
sbb
xchg
mov
dec
adc
add
rol
add
push
xor
loope
fimuls
add
out
dec
test
popf
fldl
out
xlat
daa
mov
nop
js
sbb
xchg
cmp
lods
adc
push
xchg
int3
xchg
mov
push
shrb
mov
call
loope
sbb
or
cmpsl
sarl
imull
lcall
mov
push
sub
dec
cmp
inc
pop
lahf
cmpsl
rcrb
aam
movb
les
and
xor
std
adc
push
push
cld
pop
in
orl
xlat
add
cmp
cs
mov
insl
fisttpl
xor
dec
inc
shll
pushf
mov
jae
push
int3
pop
test
dec
dec
imul
push
dec
ds
push
sub
and
mov
pop
sbb
lcall
nop
repz
pop
imul
cld
out
mov
or
jg
xchg
mov
ljmp
push
or
mov
stos
fdivrl
lret
in
aas
xor
jecxz
and
xchg
div
xchg
aam
inc
xchg
or
cmpsb
inc
xchg
mov
add
insb
lret
lret
loope
fwait
mov
or
aam
add
ss
clc
out
mov
loope,pn
mov
loope
mov
pop
stc
jmp
sbb
sbb
adc
mov
or
addr16
rorb
push
cltd
pop
gs
xchg
cmc
xor
imul
iret
mov
out
clc
stos
cmpsb
sbb
test
push
clc
pop
and
imul
mov
mov
push
data16
push
test
int3
sbb
push
mov
mov
inc
roll
xor
bound
cmpb
cmp
fldcw
dec
jle
lret
in
lock
fucomp
adc
data16
in
and
cmp
imul
push
and
lods
jp
in
popa
inc
xchg
add
xchg
xchg
fbstp
xor
loope
jnp
mov
dec
test
inc
adc
insb
mov
mov
scas
pop
xor
push
mov
bound
jecxz
sub
testl
out
adc
std
fisubrl
xor
fstpl
out
ret
roll
mov
jmp
pop
mov
sub
cmpsb
jmp
loop
pop
ja
xor
jno
sbb
add
cwtl
lods
push
movsb
push
fiadds
xchg
lods
jb
mov
pop
push
repnz
fimull
stc
loope
test
insl
rclb
stos
inc
and
jp
enter
sub
sar
test
lods
add
movsl
mov
arpl
pop
stc
std
mov
push
push
jle
inc
dec
in
int3
fiadds
jno
and
or
pop
in
mov
movl
les
les
loopne
or
test
push
cmpsb
mov
xchg
mov
mov
pop
insl
cld
xor
mov
mov
pushf
jp
ret
pop
mov
jnp
in
inc
das
pusha
and
adc
inc
into
pop
jge
std
sarl
adc
push
mov
int3
push
adc
imul
dec
mov
pop
dec
les
in
out
dec
cmp
addb
in
sub
arpl
and
imul
movsb
push
xchg
not
cmp
test
int3
pop
insl
jnp
jnp
xorl
jg
add
jne
jno
mov
cmp
sub
fucomp
or
pop
pushf
jnp
adc
rcl
pop
sub
mov
xor
cmc
fstl
push
mov
hlt
loop
ja
xchg
lret
mov
jae
lahf
mov
bound
je
inc
inc
inc
and
or
push
out
les
jecxz
scas
jge
dec
int
xor
pop
or
faddl
and
lods
imul
sbb
sbb
int
test
test
repnz
adc
enter
fcom
mov
inc
jle
cmpsb
and
xchg
xchg
cmp
push
arpl
cmp
fmulp
into
roll
fstpt
or
out
pop
mov
imul
pop
jbe
cmp
ds
cmc
xchg
std
into
inc
sbb
rorl
or
ds
ficoms
xor
lahf
xor
aam
pop
jne
enter
call
mov
pop
push
das
shr
adc
js
cltd
fwait
pop
xor
out
pop
aaa
mov
data16
add
mov
bound
aam
leave
repz
imul
mov
pop
push
and
cli
push
jo
lcall
dec
mov
push
inc
je
decb
cmp
jmp
push
inc
mov
out
inc
dec
ret
and
and
popa
lcall
inc
add
ficomps
cmpsb
rcrl
arpl
movsl
int
test
mov
addl
mov
jl
test
rclb
or
clc
pop
lahf
jne
nop
add
sbb
andb
gs
inc
sub
sbb
mov
outsl
cltd
push
dec
sub
repz
imul
push
lock
inc
or
jne
jae
lret
mov
mov
mov
stos
loop
pause
leave
jbe
jo
loop
mov
xchg
mov
mov
or
and
cmp
jecxz
das
pop
mov
pop
xor
stc
cld
jns
push
xchg
xchg
jge
hlt
push
push
aas
mov
jo
xchg
imul
les
repnz
movl
popf
jp
and
pop
adc
and
xchg
cwtl
jecxz
mov
adc
dec
jns
pop
inc
adc
ja
aaa
jecxz
aaa
xor
or
mov
loopne
mov
jns
test
mov
and
call
jg
mov
js
mov
mov
fdivrl
test
out
sub
sbb
idivl
imul
pop
es
fildll
add
xor
xor
add
mov
jno
sbbl
imull
cmc
stc
xchg
out
ljmp
xor
dec
xor
cmp
imulb
xor
test
add
aad
or
enter
dec
and
subb
push
test
cmpsl
adc
pop
addr16
adc
test
xor
out
xor
std
rcll
mov
mov
add
xlat
test
pop
dec
xchg
mov
nop
popl
dec
inc
or
cltd
push
adc
stos
lea
jl
add
scas
idivl
insb
add
inc
ret
and
cli
sub
gs
ficompl
mov
ret
sti
outsl
sbb
and
cmp
adc
inc
imul
mov
mov
xchg
dec
cmp
test
jne
or
cmp
sbb
loop
xlat
icebp
loopne
fidivs
hlt
and
fimuls
adc
int
dec
cmc
andb
xor
cwtl
testb
lcall
lret
mov
repnz
pop
movsl
and
pushf
jmp
movsb
ficoms
and
mov
jmp
xor
xor
or
lret
pop
adc
adc
les
out
loope
xor
pop
pop
add
push
scas
nop
test
es
mov
dec
lds
jb
jns
ss
ss
pop
cmpsl
pop
nop
lret
xchg
push
enter
icebp
lds
push
xor
mov
jl
jo
sub
out
lods
or
cli
pop
sbb
mov
jge
cs
push
sbb
jmp
push
leave
das
or
xor
push
and
mov
imul
scas
jg
mov
jo
and
filds
push
imul
out
nop
inc
or
scas
sub
inc
xchg
cli
cmp
int3
pop
xor
pop
fnstenv
adc
xchg
cmpsb
out
das
je
pop
vpaddw
sahf
mov
out
mov
jb
xchg
inc
push
sbb
call
xor
mov
ficoms
jbe,pt
sub
inc
out
mov
lods
lret
push
rorb
mov
mov
and
jns
ror
int
add
pop
inc
mov
fildll
pop
cmpsl
pop
jb
or
xchg
pop
sub
sub
mov
adcl
dec
das
lea
xor
pop
dec
inc
mov
repz
shlb
xchg
or
aad
fldt
cmp
bound
and
icebp
mov
adc
push
mov
inc
mov
sbb
jmp
sbb
into
jne
loopne
adc
cmpsb
or
mov
fbstp
mov
adc
stc
adc
nop
pop
insb
or
pop
pop
or
in
jo
pop
dec
loope
lahf
jecxz
arpl
jbe
gs
test
ljmp
cwtl
mov
pop
dec
ljmp
sti
out
ret
sbb
jns
cmc
test
imul
lret
push
shll
rcl
inc
dec
or
dec
sbb
shrb
outsb
in
aas
or
dec
test
stos
fwait
insb
sti
jmp
out
inc
xlat
cmp
dec
lods
notl
nop
popa
inc
fs
das
lock
jb
and
icebp
sub
ja
push
dec
sahf
xchg
cs
add
lcall
dec
fcoms
mov
movsb
loop
pop
mov
scas
cli
push
mov
cmp
mov
jg
push
push
mov
ja
mov
jnp
movsw
pop
int
xchg
and
int3
push
push
xchg
out
adcl
js
cmp
jecxz
sarl
lret
js
shlb
jg
dec
sub
lret
aaa
jmp
inc
xchg
push
hlt
ret
xor
jno
add
rcll
cli
jg
rcrb
adc
lods
es
sahf
sbb
or
or
jge
into
test
cltd
sbbb
mov
push
repnz
fstpl
fadd
loopne
aam
and
mov
cld
rolb
jl
xchg
cmp
lcall
inc
xchg
lret
dec
xlat
leave
and
and
jne
mov
mov
push
add
test
push
mov
pop
push
and
adc
int
rcll
in
leave
mov
mov
pop
jl
xlat
aas
push
fs
and
xor
lahf
lcall
enter
movsb
mov
mov
addr16
mov
cltd
ret
out
xchg
fs
call
call
in
mov
push
push
shrl
sbb
dec
sbb
loope
push
outsb
or
loope
inc
mulb
mov
fxch
push
cltd
mov
rcrl
loop
mov
adc
mov
in
push
and
xchg
mov
inc
sbb
mov
inc
cld
add
out
testl
mov
js
sbb
mov
outsb
scas
mov
or
or
mov
mov
enter
ja
push
sbb
dec
loop
gs
adc
sbb
xchg
sub
je
stos
ret
popf
cmpsl
add
jb
aas
fwait
xlat
push
jbe
or
jno
mov
mov
into
ret
shrl
push
jge
inc
lds
loope
pop
lods
and
or
xor
dec
push
popa
andl
inc
test
mov
adc
lods
sub
xor
xor
xlat
fdivrp
insl
pushf
ljmp
xchg
mov
jge
inc
xchg
sbb
test
inc
jle
xchg
out
arpl
adc
adc
loope
mov
repnz
rorb
pop
push
mov
jbe
lods
dec
mov
mov
dec
lret
popf
loop
push
js
popa
cmpsl
insl
inc
movsb
xor
decb
int3
push
loope
data16
sahf
call
pop
bswap
addb
push
jge
adc
fwait
and
adc
shrl
adcb
gs
dec
cmp
fisttps
in
adc
jbe
cmp
aaa
imulb
push
cltd
lds
add
mov
lock
add
mov
sub
out
or
cmp
pop
mov
inc
rep
aas
ret
adc
jecxz
push
jne
pop
shll
xchg
inc
ljmp
xlat
push
ljmp
mov
cmp
or
mov
lods
fwait
jl
lahf
mov
push
or
push
popf
dec
jg
test
cld
cmpsb
movsl
pop
loop
arpl
jns
dec
mov
fidivrl
sub
jns
outsb
adc
imull
jnp
inc
clc
adc
or
cltd
cmpsl
fwait
xorb
xor
ds
push
add
int
mov
inc
sub
mov
ret
pop
xchg
std
mov
mov
out
cmp
fistpll
enter
xlat
cs
adc
repnz
and
cmpsl
push
iret
pop
inc
fst
dec
in
mov
sbb
add
or
pop
push
mov
xchg
or
push
mov
pop
popf
sub
push
add
sub
fs
pop
ss
push
shl
sbb
fwait
pop
pop
out
lods
cltd
lock
xor
int3
lods
jb
in
xchg
arpl
sarl
roll
add
or
jno
sbb
xor
adc
cli
sbb
cli
fsubrs
xchg
clc
cwtl
pop
mov
outsb
pop
stc
std
fmul
in
stos
out
movsl
repz
mov
inc
bound
and
mov
xor
jbe
lret
or
lret
stos
push
or
repnz
adc
jbe
xchg
lea
imul
sbb
add
bound
lds
or
or
push
nop
pop
repnz
jmp
mov
mov
call
sarl
xorb
add
inc
dec
sbb
jle
pusha
or
pusha
hlt
mov
fnstenv
jb
jns
pop
mov
push
sti
cmp
imul
mov
push
insb
push
and
into
push
fnstcw
xlat
cltd
mov
adc
loop
sub
mov
push
push
push
punpcklwd
cli
lods
cmp
cmpsl
scas
jns
xor
cld
ds
add
pusha
adc
dec
sub
jle
and
shl
adc
sbb
repnz
repz
push
adc
mov
pop
pop
pop
xchg
xchg
and
icebp
loopne
mov
mov
dec
or
push
mov
insl
scas
fcoml
push
into
out
cmp
jmp
ficoms
push
push
hlt
mov
and
repz
fadd
test
sti
aad
std
leave
lret
pushf
ja
ret
jg
jb
push
std
in
fwait
or
xchg
or
jbe
dec
and
lret
in
or
and
insl
rorl
push
adc
push
sbb
or
xor
mov
and
sbb
cmp
mov
ds
stc
lods
in
mov
pop
xchg
jae
push
in
mov
movsl
xchg
push
pop
in
lcall
loop
xchg
movsb
test
xor
xchg
cltd
pop
in
sbb
jo
jle
pushf
xchg
adc
outsb
and
enter
scas
fidivrs
and
add
fcmovnb
push
enter
mov
mov
ja
push
popa
xchg
sub
push
inc
mov
mov
mov
cs
xor
sti
sub
insb
xor
int3
mov
aad
xor
mov
movsl
addl
push
inc
clc
outsb
inc
je
negb
lods
or
push
jg
pop
loope
and
scas
test
push
inc
inc
dec
mov
add
mov
add
add
add
cmp
sub
cmp
data16
add
cmp
jb
cmp
cmp
cmp
jnp
cmp
inc
mov
add
add
add
mov
add
cmp
ret
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
cmp
add
add
adc
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
cs
insb
add
jne
popa
jo
cs
insb
add
insl
jo
fs
insb
add
gs
insb
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
gs
insb
jne
je
jb
gs
outsb
je
jb
popa
arpl
add
arpl
pop
jb
jo
add
push
je
push
je
push
