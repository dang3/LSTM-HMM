push
mov
sub
movl
movl
mov
and
add
imul
mov
movl
movl
mov
sub
mov
sub
mov
movl
mov
or
mov
or
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
and
imul
mov
sub
mov
movl
movl
lea
mov
mov
mov
add
imul
mov
lea
mov
mov
mov
sub
imul
mov
push
push
push
push
call
cmp
jne
movl
mov
add
imul
mov
call
movl
mov
imul
imul
mov
movl
lea
mov
mov
mov
add
mov
mov
add
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
mov
add
mov
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
movl
mov
and
sub
add
mov
movl
mov
or
add
add
mov
mov
imul
add
mov
movl
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
cmpl
je
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
movl
mov
or
mov
add
cltd
idiv
add
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
lea
mov
mov
or
mov
sub
mov
movl
mov
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
xor
je
movl
cmpl
jne
movl
movl
mov
and
sub
mov
sub
mov
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
movl
movl
mov
sub
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
imul
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
add
mov
cltd
idiv
imul
mov
lea
mov
mov
mov
and
mov
and
imul
imul
mov
jmp
movl
lea
mov
mov
mov
imul
mov
sub
mov
call
movl
lea
mov
mov
mov
sub
mov
lea
mov
mov
mov
or
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
mov
add
mov
movl
lea
mov
mov
mov
sub
imul
mov
mov
sub
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
or
add
imul
mov
mov
cmp
je
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
or
imul
mov
sub
mov
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
jmp
jmp
cmpl
jne
movl
mov
and
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
sub
mov
mov
and
add
mov
movl
mov
add
mov
cltd
idiv
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
cltd
idiv
add
mov
mov
and
mov
sub
mov
sub
mov
jmp
movl
mov
or
mov
and
add
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
sub
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
and
mov
sub
mov
mov
add
mov
cltd
idiv
mov
mov
pop
ret
push
mov
sub
movl
movl
mov
cmp
jne
jmp
movl
movl
mov
or
mov
and
add
imul
mov
movl
movl
mov
or
mov
add
cltd
idiv
imul
mov
movl
cmpl
je
movl
lea
mov
mov
mov
add
add
mov
movl
lea
mov
mov
mov
imul
add
mov
movl
lea
mov
mov
mov
sub
imul
mov
jmp
movl
lea
mov
mov
or
mov
sub
imul
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
mov
sub
mov
movl
movl
mov
and
mov
and
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cmpl
je
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
jmp
mov
add
mov
movl
movl
mov
add
mov
cltd
idiv
imul
mov
movl
mov
imul
add
mov
movl
mov
and
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
lea
mov
mov
mov
or
mov
imul
imul
mov
mov
and
sub
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
cmpl
jne
movl
lea
mov
mov
mov
add
mov
sub
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
add
mov
cltd
idiv
imul
mov
call
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
mov
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
lea
mov
mov
mov
add
add
mov
jmp
movl
cmpl
jg
movl
mov
or
mov
add
cltd
idiv
imul
mov
mov
imul
mov
lea
mov
mov
or
mov
sub
mov
sub
mov
jmp
movl
lea
mov
movl
mov
or
mov
imul
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
push
call
add
mov
add
imul
mov
jmp
jmp
movl
movl
mov
sub
mov
mov
push
call
add
mov
mov
mov
movl
mov
push
mov
push
call
add
movl
mov
imul
add
mov
mov
xor
mov
mov
add
mov
movl
mov
add
mov
cltd
idiv
mov
lea
mov
mov
or
mov
add
cltd
idiv
imul
mov
mov
mov
mov
mov
mov
add
mov
cmpl
jb
movl
lea
mov
lea
mov
mov
mov
or
mov
mov
sub
add
mov
movl
mov
imul
add
mov
push
call
mov
movl
movl
lea
mov
mov
mov
sub
mov
sub
mov
mov
add
imul
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
lea
mov
mov
mov
add
add
mov
movl
mov
and
mov
add
cltd
idiv
add
mov
lea
mov
mov
mov
or
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
lea
mov
movl
mov
mov
and
mov
add
mov
movl
mov
add
add
mov
cmpl
jne
mov
sub
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
imul
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
or
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
mov
and
mov
add
imul
mov
movl
mov
or
mov
sub
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
and
imul
mov
movl
lea
mov
mov
or
mov
add
mov
sub
mov
lea
mov
mov
mov
add
add
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
mov
movl
movl
mov
add
mov
cltd
idiv
imul
mov
movl
cmpl
jne
movl
jmp
mov
add
mov
cmpl
jge
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
jmp
mov
imul
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
cmpl
jl
movl
mov
or
add
mov
sub
mov
mov
add
mov
cltd
idiv
mov
jmp
movl
mov
add
add
mov
movl
mov
imul
add
mov
jmp
movl
cmpl
je
movl
lea
mov
mov
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
movl
mov
and
mov
and
add
mov
sub
mov
jmp
movl
lea
mov
mov
mov
or
add
mov
movl
lea
mov
mov
mov
add
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
cmpl
jne
movl
movl
lea
mov
mov
and
mov
add
mov
sub
mov
movl
lea
mov
mov
mov
add
mov
sub
mov
jmp
cmpl
je
mov
cmp
je
movl
mov
or
add
mov
sub
mov
jmp
mov
sub
mov
sub
mov
mov
add
mov
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
cmpl
je
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
mov
or
mov
mov
sub
add
mov
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
imul
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
mov
add
imul
mov
movl
mov
or
add
add
mov
mov
imul
imul
mov
mov
pop
ret
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
mov
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
xor
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
jmp
int3
int3
push
mov
push
mov
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
jmp
jmp
jmp
jmp
aam
add
in
add
clc
xor
add
xor
add
xor
add
inc
xor
add
pusha
xor
add
xorb
add
add
mov
xor
add
loopne
add
out
xor
add
push
add
es
ss
push
add
fs
js
add
xchg
add
movsb
add
mov
add
shlb
add
add
ljmp
add
aaa
add
sbb
add
es
add
cmp
add
push
aaa
add
push
aaa
add
test
add
xchg
aaa
add
mov
aaa
add
int3
aaa
add
fdivs
add
out
aaa
add
add
add
push
cmp
add
cmp
add
add
inc
cmp
add
add
jo
add
cmpb
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
pop
cmp
add
add
push
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
and
add
cmp
add
add
push
cmp
add
add
jp
add
mov
add
pushf
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
addb
add
into
cmp
add
mov
cmp
add
je
add
pusha
cmp
add
inc
cmp
add
xor
add
sbb
add
or
add
out
add
add
add
cmp
add
add
jl
add
push
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
mov
add
jb
add
pusha
cmp
add
add
cmp
add
fidivrs
add
cmp
add
cmp
add
pushl
sub
inc
sub
mov
add
inc
cmp
add
xor
add
add
add
add
or
add
or
add
js
add
idivb
add
xor
add
xor
add
cmp
add
xor
add
add
aam
add
in
add
clc
xor
add
xor
add
xor
add
inc
xor
add
pusha
xor
add
xorb
add
add
mov
xor
add
loopne
add
out
xor
add
push
add
es
ss
push
add
fs
js
add
xchg
add
movsb
add
mov
add
shlb
add
add
ljmp
add
aaa
add
sbb
add
es
add
cmp
add
push
aaa
add
push
aaa
add
test
add
xchg
aaa
add
mov
aaa
add
int3
aaa
add
fdivs
add
out
aaa
add
add
add
push
cmp
add
cmp
add
add
inc
cmp
add
add
jo
add
cmpb
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
pop
cmp
add
add
push
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
and
add
cmp
add
add
push
cmp
add
add
jp
add
mov
add
pushf
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
addb
add
into
cmp
add
mov
cmp
add
je
add
pusha
cmp
add
inc
cmp
add
xor
add
sbb
add
or
add
out
add
add
add
cmp
add
add
jl
add
push
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
mov
add
jb
add
pusha
cmp
add
add
cmp
add
fidivrs
add
cmp
add
cmp
add
add
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
gs
je
push
push
add
into
add
je
jb
outsl
arpl
fs
js
push
inc
fs
and
inc
outsl
insl
jo
jb
push
je
imul
add
popa
insb
inc
insb
insb
outsl
arpl
add
inc
gs
gs
inc
imul
outsl
popa
fs
gs
jne
arpl
add
bound
inc
jb
add
xor
push
popa
imul
jo
imul
push
jb
je
inc
imul
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
ret
outsl
jb
popa
je
gs
popa
addr16
add
xchg
add
je
gs
imul
enter
gs
js
in
add
popa
insb
inc
jb
add
jbe
outsb
je
add
add
gs
imul
test
inc
gs
push
dec
outsl
arpl
add
add
imul
insb
gs
bound
arpl
add
gs
je
inc
jbe
outsb
je
add
lods
add
je
je
dec
popa
outsb
fs
add
dec
add
imul
imul
insb
gs
bound
arpl
add
je
outsl
arpl
push
imul
push
gs
imul
gs
js
add
inc
insb
outsl
jae
inc
push
dec
outsl
je
imul
outsl
outsb
add
add
gs
je
inc
imul
gs
imul
js
mov
fs
insb
outsl
jae
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
gs
gs
inc
imul
jb
popa
je
inc
jbe
outsb
je
add
mov
jo
gs
jb
jns
testb
outsl
arpl
gs
jne
arpl
add
bound
dec
outsl
arpl
add
add
je
imul
bound
gs
add
lds
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
jp
outsl
push
gs
jne
arpl
add
push
gs
gs
jae
dec
jne
gs
add
push
gs
fs
imul
gs
jns
je
insl
push
imul
jb
popa
je
inc
imul
jb
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
jb
outsb
inc
add
and
inc
gs
imul
bound
gs
add
and
jo
jb
push
je
imul
add
outsl
jae
dec
popa
outsb
fs
add
jae
inc
imul
jb
add
cltd
add
je
imul
gs
add
add
jb
outsb
push
add
int
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
inc
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
outsb
fs
inc
imul
outsl
jb
popa
je
gs
popa
addr16
add
cmp
dec
outsl
fs
gs
imul
add
add
push
popa
imul
je
jo
gs
bound
arpl
js
add
push
gs
fs
imul
add
je
jb
outsl
jb
outsl
fs
mov
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
push
popa
imul
insb
gs
bound
arpl
add
add
je
imul
push
add
jae
je
jbe
outsb
je
add
push
dec
inc
dec
xor
cs
insb
add
sub
inc
gs
outsb
jne
bound
push
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
addb
gs
imul
outsb
addr16
add
mov
fs
arpl
push
add
add
je
jne
jae
jb
outsl
jae
add
je
outsl
jns
imul
add
outsl
ja
imul
jns
arpl
cmp
push
outsb
fs
gs
popa
addr16
add
incl
inc
gs
insb
imul
je
push
add
imul
popa
jae
inc
add
stos
add
outsb
jae
popa
je
dec
gs
popa
add
lret
add
fs
je
imul
push
gs
imul
jae
add
inc
gs
imul
js
push
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
insb
gs
jae
inc
inc
add
push
imul
js
inc
add
xchg
push
gs
imul
js
push
add
popa
add
gs
je
push
imul
push
add
add
jae
dec
gs
popa
addr16
add
pop
add
je
outsl
jb
addr16
jne
fs
imul
add
fs
jne
jae
jb
add
push
imul
outsl
arpl
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
jl
inc
gs
imul
jb
add
push
gs
outsb
jne
je
insl
inc
imul
push
push
inc
push
xor
cs
insb
add
imul
outsl
push
outsb
imul
imul
inc
outsl
push
jb
popa
je
jae
insb
popa
jae
add
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
add
inc
outsl
push
popa
jae
dec
gs
inc
jb
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
inc
outsl
push
ja
je
push
inc
outsl
outsb
je
js
add
outsl
push
jne
jo
outsb
fs
insb
popa
jae
dec
bound
arpl
bound
inc
outsl
push
gs
jb
js
inc
insb
popa
outsb
imul
pusha
add
push
gs
imul
insb
insb
outsl
arpl
jns
pop
add
push
gs
imul
imul
push
jo
add
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
add
push
gs
jb
push
outsl
push
gs
data16
pop
add
push
gs
insl
gs
insb
popa
jae
dec
bound
arpl
add
inc
outsl
push
gs
gs
jae
push
gs
gs
jb
arpl
jae
add
inc
outsl
push
gs
gs
jae
dec
popa
jb
push
je
add
push
add
push
imul
jb
outsl
addr16
je
add
inc
outsl
push
imul
inc
insb
jae
add
inc
outsl
push
imul
jae
popa
addr16
imul
inc
outsl
push
imul
insb
insb
outsl
arpl
jns
push
add
push
imul
imul
push
jo
add
inc
outsl
push
imul
popa
jae
dec
bound
arpl
add
push
imul
popa
outsb
outsb
gs
dec
outsl
outsl
imul
insb
xor
cs
insb
add
imul
lds
pop
arpl
js
je
testb
gs
je
dec
add
arpl
inc
imul
pop
arpl
imul
imul
arpl
insb
outsb
add
pop
pop
addr16
popa
imul
cmp
pop
imul
insl
add
gs
jae
jb
popa
je
gs
add
mov
pop
popa
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
test
pop
pop
jo
pop
insw
outsl
fs
cwtl
add
jae
je
popa
jo
pop
je
jo
add
insl
jae
arpl
cs
insb
add
add
outsl
outsb
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
mov
pop
outsl
outsb
gs
je
in
add
js
gs
pop
push
gs
add
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
mov
add
add
add
lahf
push
dec
lods
imul
roll
dec
xchg
cli
cmp
push
ret
xchg
adc
iret
aas
adc
ret
imul
or
xor
xchg
cmc
add
or
incb
or
push
cmc
imul
inc
imul
inc
push
mov
inc
adc
mov
lds
imul
mov
dec
push
jmp
arpl
adc
sub
add
inc
push
jae
imull
ds
push
or
aas
add
mov
push
imul
dec
mov
xchg
dec
cs
push
sbb
scas
dec
jb
sub
xor
jge
adc
xchg
xor
lods
and
cmpsb
sar
shl
fwait
xorb
nop
in
test
out
in
adc
aas
out
inc
mov
and
cmpsb
xchg
mov
cmp
xlat
mov
xor
ds
seto
adc
ret
push
cmpsl
xchg
adc
add
cmpsb
aaa
and
into
push
scas
pop
test
xor
test
cmp
addb
and
cmpsb
mov
lcall
jns
jno
fwait
nop
push
cmpl
jmp
add
mov
aaa
pop
fistpl
xchg
jo
mov
hlt
mov
nop
insb
repnz
lahf
dec
xorl
adc
xchg
call
or
stos
and
pop
dec
loopne
cmc
push
std
push
cmc
xchg
add
inc
inc
imulb
test
adc
nop
ss
shrl
cmp
bound
xchg
xchg
push
mov
sbb
shll
insb
mov
clc
add
lea
or
mov
inc
xor
sub
or
fbstp
repz
mov
cmp
xchg
pop
dec
mov
mov
dec
movsl
cmc
imul
dec
cmc
sti
and
in
enter
sub
sarb
jmp
mov
lock
cmp
cmpsb
xchg
inc
inc
jb
sbb
and
xor
xor
adc
xchg
mov
and
mov
add
or
mov
arpl
decb
nop
jl
call
pop
jo
dec
cli
clc
inc
push
add
lock
imul
and
xor
xchg
lock
sets
and
pop
pop
in
and
xor
sub
adc
xchg
jno
sbbb
xchg
xchg
arpl
ljmp
xor
mov
popa
inc
hlt
mov
and
dec
cmpsl
cmc
loopne
sbb
mov
add
push
adc
or
stc
je
jge
cltd
jb
cltd
xor
mov
adcl
in
test
cmp
rcr
and
mov
sbb
and
mov
inc
cmpsl
notl
testb
mov
std
pop
pusha
sbb
and
pop
fidivrl
add
xor
and
xchg
adc
xchg
cld
jne
and
cli
add
xor
jns
add
lods
cwtl
fimuls
mov
sar
addr16
xchg
nop
jne
and
loope
enter
push
adc
mov
and
data16
dec
cli
fnstcw
and
jns
pop
sbb
subl
jge
adc
cmp
adc
cmp
add
hlt
cwtl
clc
scas
cwtl
in
jmp
mov
popf
and
add
and
push
adc
clc
inc
inc
xchg
js
inc
lret
and
push
or
and
push
jb
push
stc
inc
inc
idivb
pop
repz
loopne
cmc
cld
xchg
clc
std
push
push
lahf
cli
or
gs
imul
unpcklps
xchg
lcall
cmpsb
outsl
ret
mov
xchg
imul
les
stos
out
or
pushf
mov
mov
jmp
dec
push
cmpsl
aaa
setnp
outsl
push
and
and
push
fwait
notl
scas
push
xor
js
repnz
loop
jge
push
rcll
jb
mov
ss
fucomi
push
mov
push
or
sub
xchg
pop
inc
ret
test
xchg
inc
es
jg
mov
jl
dec
test
roll
je
jmp
lahf
loopne
insl
cld
add
sbb
stos
xchg
out
fmul
inc
repnz
jnp
jl
jle
or
adc
jne
jg
push
arpl
sti
loop
repz
or
push
xor
out
in
dec
lods
loopne
fbld
pop
mov
cmp
pushf
adc
lods
pop
mov
imulb
jb
addl
out
mov
outsl
sbb
popa
cbtw
mov
bound
sub
push
pop
jecxz
mov
jbe
andb
cwtl
cmpl
rcrb
fcmovbe
adc
aas
push
addb
subb
pop
mov
inc
add
outsb
scas
loope
xchg
cmp
push
mov
in
mov
imul
adc
addb
jnp
pushf
xchg
push
dec
xor
lock
or
out
inc
add
mov
and
adc
pop
imul
and
clc
or
addb
cmpsb
jb
push
adc
scas
sbb
push
or
inc
pop
cli
aas
test
shr
adc
sub
lds
sbb
in
or
mov
roll
hlt
test
stc
popf
ljmp
adc
mov
imull
adc
mov
mov
jle
pop
dec
cltd
and
dec
clc
or
cmp
negb
pop
pop
movsb
xchg
bound
pop
or
lock
xor
repz
push
int3
test
push
mov
pop
fstpt
loopne
lds
fxam
mov
lock
dec
xchg
cmp
sti
and
inc
cs
adc
lods
push
sbb
lcall
repnz
faddp
jbe
jecxz
dec
in
pop
dec
push
sub
pop
push
sbb
fmull
daa
cmp
pop
mov
or
push
push
pop
loop
cmp
pop
cli
and
push
dec
inc
dec
lods
dec
js
mov
xorb
les
lods
test
cmp
mov
adc
xlat
jmp
scas
mov
add
add
lock
pop
add
mov
aas
pop
xchg
inc
pop
popl
orb
mov
mov
pop
call
sbb
fwait
and
sbb
push
inc
imul
pusha
adc
inc
in
pop
pop
repz
adc
jge
xchg
mov
mov
daa
daa
movsl
sti
in
push
xor
sbb
xchg
fs
jle
xchg
and
cmpsb
push
imul
scas
xchg
pusha
lods
pop
adc
push
xchg
cmc
xchg
pop
adcb
and
push
shlb
xchg
sub
movsb
lea
scas
mov
into
cmp
shll
push
mov
xorl
leave
mov
leave
jne
jbe
ror
addr16
sbb
jp
xchg
fs
fidivrl
xchg
jae
mov
sub
sbb
fnstsw
xor
add
repnz
ret
and
insb
stos
loopne
adc
push
adc
mov
inc
addb
dec
mov
dec
add
mov
mov
mov
stc
lods
addr16
pop
gs
xchg
outsb
cmp
mov
xor
out
jl
mov
pop
push
int
fimuls
mov
loop
jmp
in
fcmovnb
jecxz
lods
lahf
mov
sbb
xlat
aad
dec
test
push
sbb
dec
ds
lock
test
data16
sub
fdivrs
lods
mov
and
cmp
je
or
cmpsb
sbb
push
sahf
cmp
lahf
mov
adc
test
or
pop
push
hlt
cmp
icebp
sbb
push
insb
push
mov
inc
dec
add
push
lods
idivb
pop
pushf
adc
xor
dec
mov
push
pop
loop
add
inc
sbb
cmp
movb
mov
repz
into
jg
add
pop
das
js
jmp
xchg
in
ret
imul
loop
xchg
jmp
pop
or
mov
dec
jecxz
and
daa
xor
mov
mov
mov
das
stos
lods
and
scas
mov
and
push
jbe
cs
pusha
pop
push
ffreep
fiaddl
add
add
xlat
aad
ret
std
pop
cmp
xor
loope
jp
sarb
jg
pop
sbb
push
pushf
sbb
movsb
inc
pop
xor
adc
outsl
push
cmp
scas
cmpsl
ljmp
mov
and
inc
push
test
xor
dec
inc
dec
sti
cmp
inc
xchg
mov
jnp
and
fmuls
lds
in
sti
in
pop
ljmp
popa
inc
xlat
pop
mov
push
push
mov
imul
sub
mov
lret
cmpsb
ss
pop
dec
jecxz
xor
mov
jo
ds
test
sti
sub
xchg
pushf
or
xchg
int
jb
push
xor
cmp
enter
int3
mov
das
int3
mov
inc
inc
jmp
push
pop
addb
inc
in
add
inc
sbb
push
inc
xor
stos
cmpsb
inc
push
test
dec
dec
mov
dec
xchg
and
xchg
xchg
sub
jbe
adc
push
adc
cmp
scas
sbb
mov
lahf
adc
add
into
lds
add
enter
or
repnz
outsb
sbb
dec
pop
sub
mov
lret
pop
aas
repz
mov
and
loop
in
popa
fucomp
shlb
push
in
dec
std
cmc
sbb
scas
or
ja
xchg
jo
into
or
add
add
mov
test
lret
mov
push
lea
lods
xor
mov
clc
cmp
xchg
fmull
mov
add
sahf
cmpsb
test
pop
push
push
sbb
sbb
in
push
pop
daa
dec
push
mov
pusha
out
cs
lods
stos
test
push
aaa
mov
jmp
mov
add
lret
js
mov
push
xchg
xchg
addr16
mov
inc
das
cwtl
mov
fs
push
xor
pop
stos
push
adc
mov
inc
pop
stos
mov
adc
inc
cmp
xchg
push
dec
xchg
hlt
pop
push
daa
out
insl
sub
aas
sub
stos
cmp
lcall
xor
mull
nop
dec
dec
dec
popf
sti
push
pop
dec
inc
insb
jo
loop
jb
outsl
inc
imul
push
inc
mov
push
aas
push
jmp
cmp
orb
cmp
xchg
cmp
shl
adc
lcall
jl
repz
in
pop
pop
cwtl
push
jmp
push
shr
sub
mov
sbb
fdivrp
shl
fdivrl
push
cld
fmuls
cld
and
cmp
and
or
ljmp
xor
cwtl
and
or
mov
pop
repz
lock
imul
add
pop
sbb
adc
mov
adc
mov
push
mov
mov
mov
mov
jnp
loop
jns
testl
push
xor
and
and
test
orl
jb
sahf
push
sbb
cwtl
or
mull
xchg
les
xchg
adc
mov
ja
or
sub
xchg
pushf
inc
pop
stc
mov
fmull
repnz
notb
cmp
stc
add
lret
xchg
insl
mov
scas
sbb
scas
test
mov
in
adc
loop
icebp
in
jae
jp
pop
and
sarl
aam
cli
xchg
in
push
lahf
dec
jo
jne
loope
push
out
loop
fs
out
sub
sbbb
push
sahf
pop
cmp
aaa
and
jecxz
cs
mov
pop
push
in
sbb
stc
psubq
mov
sub
mov
and
mov
jns
fldt
jo
aam
push
sub
or
mov
inc
negl
mov
and
and
pop
push
arpl
mov
cs
loop
add
sub
stos
das
sub
mov
lock
fimull
add
or
add
loope
push
jo
arpl
in
inc
pop
jae
fsubrs
sti
ds
xorl
dec
dec
fwait
mov
xchg
test
cmp
mov
inc
dec
xchg
gs
shrb
xchg
jnp
mov
pop
cld
std
sahf
xor
clc
adc
and
mov
mov
jecxz
push
sub
hlt
arpl
stc
js
mov
mov
xor
sbb
xor
repnz
pop
data16
jb
insb
dec
arpl
test
inc
pop
scas
cli
mov
cld
bound
mov
cmc
push
jmp
loop
xchg
std
rorl
fistl
out
cmp
lret
int
fbstp
rcrl
subb
mov
ja
shll
cmc
imul
insb
movsb
cld
add
fdiv
adc
call
sub
mov
stos
mov
adc
mov
ss
inc
mov
jae
cmp
xchg
fnstcw
push
and
stos
lods
lcall
inc
jae
fdivs
jbe
push
fs
or
sub
xchg
inc
cmp
or
push
sbb
stos
sub
mov
jg
data16
and
sub
mov
lcall
sub
inc
pusha
jle
pop
imul
mov
pop
cwtl
pop
add
lods
mov
mov
pop
js
push
das
add
in
jb
mov
ja,pt
les
lock
hlt
shll
fbstp
loop
xor
mov
sbb
fs
outsb
or
pop
in
push
push
je
inc
dec
cwtl
xchg
popl
call
aam
xor
inc
repnz
or
lock
pop
scas
push
mov
xor
pop
pop
fs
movsl
inc
js
andl
xchg
jb
push
jecxz
arpl
inc
mov
je
dec
adc
or
mov
xchg
and
xor
dec
inc
pop
imul
add
jecxz
pop
je
scas
mov
shlb
lock
fwait
in
fidivl
ret
stc
addr16
cmc
lret
sub
lcall
mov
push
inc
cltd
and
stc
push
push
das
and
mov
imul
lds
les
fsubr
sbbb
inc
inc
dec
push
mov
inc
pop
mov
mulb
lods
scas
pop
or
xchg
jns
push
push
fdivl
mov
and
push
pop
out
mov
arpl
inc
lea
push
sahf
sti
addr16
cmpsb
inc
pop
fwait
mov
fcoml
inc
inc
inc
xchg
mov
xchg
aam
adc
xor
icebp
arpl
ficomps
jecxz
fsubrs
test
or
in
ljmp
aad
popa
sbb
loopne
rolb
les
cwtl
adc
cmp
jle
pop
lods
or
dec
ljmp
sbb
ret
sti
std
or
pop
popf
pop
xor
negl
and
push
or
pop
mov
and
popl
mov
std
sub
out
add
mov
xor
jmp
or
xor
mov
jnp
rcl
loopne
popf
push
fmuls
xlat
cmp
mov
cld
outsb
out
xor
pop
sbb
sbb
sbb
push
mov
cvtps2pd
sbb
xchg
pop
pop
outsl
and
mov
xchg
cli
sbb
std
jo
pusha
enter
or
cmp
into
dec
loopne
sti
or
out
fbstp
mov
gs
inc
jb
push
push
jbe
pop
and
or
mov
repnz
sub
and
pop
and
mov
ret
mov
and
mov
mov
test
lock
lock
pop
inc
add
push
jb
push
js
jecxz
pusha
jns
pusha
nop
pusha
push
lea
sbb
push
sbb
push
lods
gs
mov
dec
dec
inc
out
jo
je
mul
lcall
mov
xchg
fs
outsl
or
in
pop
jg
sbb
dec
jg
adc
dec
loope
aam
sbb
adc
lret
pop
pushf
test
ljmp
lds
jp
add
mov
adc
js
and
mov
jne
xchg
clc
out
xlat
mov
push
out
pusha
fmul
fstl
enter
test
push
rcl
in
lds
xor
lahf
ds
mov
jne
lock
rolb
xchg
lret
test
ret
in
std
push
test
sub
mov
bound
rcll
mov
loop
pop
movsl
and
jno
mov
fpatan
or
add
dec
hlt
cmp
mov
inc
jno
sbb
push
add
pop
push
pop
inc
in
imul
push
cmp
cwtl
xchg
cwtl
mov
loop
data16
pop
sbb
push
push
dec
pop
nop
mov
add
call
xor
adcl
das
mov
push
xorl
mov
sub
ret
adc
mov
sti
jg
ds
mov
and
shr
enter
ja
cmpsb
jb
lock
jb
add
lea
mov
cmp
cli
and
pop
xchg
fsubs
push
pop
or
lret
in
mov
jmp
xchg
stos
js
and
and
arpl
push
push
add
pop
pusha
and
inc
push
call
or
mov
xlat
mov
push
out
adc
adc
sbb
cwtl
loop
add
stos
jecxz
pop
inc
mov
sbb
fucomi
or
add
xor
stc
push
jae
pop
jmp
sub
incb
inc
push
loop
rcl
mov
jnp
mov
leave
adc
cwtl
stos
daa
adc
testl
insl
mov
pop
aas
inc
aam
cmpsb
ret
lds
iret
jb
bound
or
jge
test
aam
fmul
dec
popf
test
aam
jle
mov
imul
push
jae
in
push
mov
push
push
pop
in
das
stos
add
sub
cmp
sub
out
sbb
rclb
add
rcrl
sbb
push
data16
idivl
sbb
add
ljmp
add
adc
jno
pop
lret
sub
enter
rcrl
rol
adc
rcrl
int3
sub
into
adc
mov
and
sbb
scas
sbb
mov
sbb
mov
out
es
xchg
cmc
adc
repz
jmp
or
inc
xchg
sub
insl
mov
add
popa
bound
push
arpl
dec
and
outsb
xchg
mov
aaa
add
mov
enter
mov
sbb
xor
call
pop
jb
xchg
fdecstp
shl
enter
ja
fucomip
jo
sarb
aaa
imul
iret
fstp
ljmp
xor
mov
adc
push
fisubl
and
movsl
cmp
testl
outsl
add
add
sahf
out
add
and
mov
clc
push
cli
scas
cmp
loope
stos
cmp
shrl
lcall
loopne
scas
rclb
orb
sbb
mov
and
lock
ja
xchg
push
aas
adc
jne
loop
nop
arpl
hlt
testl
jmp
inc
pop
cmpb
cmc
sbb
out
push
cld
cld
bound
mov
aaa
lods
pop
adc
pop
mov
sarb
cli
inc
or
pusha
inc
jmp
cmp
pop
sti
dec
dec
addr16
or
dec
pop
insl
adc
out
mov
rol
cltd
test
mov
add
jns
push
xchg
outsb
jmp
adc
lea
ss
push
cs
out
std
xor
mov
insb
mov
mov
mov
xchg
imul
aas
sbb
mov
das
and
mov
repz
call
addl
pop
xchg
push
test
xchg
cs
push
call
mov
lock
scas
lods
xor
push
mov
jmp
adc
push
in
jb
push
ds
push
stc
xor
sub
test
int3
add
ja
nop
add
lahf
xor
out
adc
out
insl
loop
call
aaa
xor
push
cmpsl
repnz
popa
mov
daa
pusha
sarb
clc
aam
jbe
rolb
push
mov
jle
gs
or
xchg
fst
ljmp
loope
pushf
push
fst
or
mov
mov
push
push
and
xchg
stc
sub
nop
mov
std
or
push
lock
sbbl
mov
pop
popa
adc
pop
popa
sbb
xor
push
mov
cld
std
imul
clc
lods
cmp
dec
test
sub
inc
and
mov
jb
mov
inc
push
repnz
orl
adc
testl
inc
sbbb
fwait
lock
push
xchg
mov
ret
jbe
loopne
insb
call
stc
stc
adc
fildll
call
pop
imul
mov
sti
sti
adc
dec
ss
xchg
mov
push
xor
mov
push
inc
add
push
testl
xchg
and
movsl
cltd
notb
push
xchg
cmp
insl
stc
ljmp
lock
insb
hlt
push
pop
pop
stc
and
inc
out
add
in
and
push
add
mov
loop
mov
das
sub
dec
jmp
out
into
mov
mov
rcl
mov
icebp
xor
lret
loop
fnsave
and
push
adc
mov
adc
stos
lock
sbb
adc
mov
xchg
push
dec
pop
xchg
jns
adc
mov
cmp
cwtl
mov
jns
sub
xor
inc
cmp
aas
push
push
icebp
scas
outsb
xlat
in
jl
xor
xor
loopne
data16
cwtl
daa
and
lock
sbb
les
add
push
into
push
lock
push
popl
inc
hlt
cmp
pop
jb
sbb
popf
cmc
jg
sub
push
or
or
push
push
loope
arpl
mov
cmp
mov
add
dec
insl
aam
sub
jg
sub
ret
aam
adc
push
inc
pop
jne
and
cmpsb
jno
shll
mov
jne
lret
cmp
fistpl
adc
dec
lret
xlat
inc
push
ret
pop
loopne
iret
xchg
out
pop
sbb
and
cmpsb
add
roll
cmp
fildl
aad
ss
mov
and
movsb
sbb
mov
int3
adc
xchg
inc
lock
and
cmpsb
into
jno
ret
mov
cld
aas
jne
adc
test
insb
jbe
aam
imul
lahf
in
incl
pop
leavew
ljmp
out
aas
ss
scas
int3
loop
jno
sub
xchg
mov
stc
cmp
push
mov
adc
mov
push
fwait
mov
sub
pop
pop
enter
push
pop
sbb
mov
rcll
ljmp
imul
rcrl
xor
mov
out
cmp
sbb
test
cmp
stos
in
es
adc
push
incb
jmp
loop
inc
inc
daa
xchg
jge
inc
lock
inc
push
push
sbbb
js
jle
add
cmp
push
fimull
sbb
or
loop
stos
mov
jecxz
fcomi
mov
sbb
fisubl
clc
mov
dec
arpl
lds
decl
lods
mov
push
cs
pop
cmp
lock
xor
loop
test
orl
xchg
int
jbe
jae
inc
daa
or
mov
xor
test
push
push
push
pop
lds
push
mov
loop
insl
outsb
sarl
ljmp
lea
fnstsw
movsl
push
mov
jmp
mov
mov
pop
lret
fnsave
push
test
mov
loop
mov
pop
pusha
inc
cwtl
loope
jmp
int3
dec
adc
dec
xchg
add
add
pop
mov
sub
lock
dec
add
pop
xor
sbb
push
out
adc
loop
cmp
cmc
xor
into
lock
js
jmp
or
push
fimull
or
pop
inc
jnp
pusha
sbb
cmp
xchg
sub
xor
inc
cmp
push
loopne
int3
and
push
bndldx
xchg
icebp
das
cmp
call
bound
dec
mov
inc
jle
lea
loop
or
rcll
lods
mov
mov
cmp
mov
pusha
inc
jecxz
add
sub
aad
inc
inc
inc
and
in
or
call
in
loope
mov
in
cmc
jl
jp
std
aam
pop
or
push
push
aaa
mov
cmp
push
mov
icebp
sbb
push
inc
xor
adc
fucomi
mov
mov
and
mov
jo
and
jge
loope
stos
jmp
jp
mulb
inc
sarb
daa
inc
aas
jo
mov
xchg
lret
inc
cmp
fidivl
mov
xchg
mov
and
pop
out
js
or
rcrb
mov
mov
xchg
stos
in
fsubp
jb
mov
push
mov
or
sub
ja
sub
jnp
clc
loopne
xchg
popa
mov
mov
push
out
or
cmp
xchg
xchg
mov
xchg
pop
and
cld
hlt
loopne
stos
push
cltd
fisubrs
incb
shrb
pop
loope
mov
push
dec
mov
pop
jle
jae
jmp
push
lds
aaa
dec
fs
sbbb
sub
or
aaa
mov
dec
add
lea
mov
xor
inc
adc
sub
xchg
sub
mov
les
loope
ret
in
shll
mov
add
adc
test
xchg
rcl
sub
in
and
mov
loope
stos
ret
imul
mov
bound
sarb
sub
addb
mov
jns
sbb
cltd
sbb
in
out
adc
ret
notb
je
les
sbb
jmp
loopne
stos
in
jle
gs
dec
mov
push
sahf
or
dec
xor
mov
xor
les
mov
push
js
clc
stos
roll
aad
popf
push
inc
lods
lea
imul
out
adc
mov
stos
in
repnz
scas
shll
mov
daa
and
jl
push
mov
sarl
xchg
les
lds
adc
sbb
insb
pusha
rolb
xchg
cmp
sub
xchg
or
mov
stos
scas
pop
das
add
dec
mov
xchg
fcmovnbe
arpl
or
push
mov
outsb
cmp
xchg
mov
sarb
std
sub
shlb
rcl
mov
mov
and
lret
mov
and
aas
lret
inc
and
xchg
add
mov
orl
fidivrl
and
pop
sub
sub
pop
inc
cmp
fbstp
adc
jle
mov
or
add
aam
mov
leave
xlat
mov
push
scas
lea
in
xchg
adc
mov
xor
test
ret
rclb
pushf
push
or
sub
fs
int
xchg
idivl
jle
sahf
jp,pt
movmskps
or
stc
sub
aam
stos
jge
xchg
cltd
sub
jno
mov
sbbl
movsb
lea
or
xchg
shlb
stos
sub
dec
test
into
std
mov
js
mov
jns
jo
jnp
xchg
jo
jp
lret
test
stc
nop
enter
jge
popa
call
ja
sub
mov
mov
inc
and
test
loope
stos
mov
fimuls
sbb
lock
mov
leave
loopne
stos
or
daa
sub
jo
and
and
repz
test
les
push
jno
mov
jbe
cmpsb
mov
xorb
js
xchg
mov
sub
and
pop
xchg
sbb
loope
stos
repnz
jae
mov
shlb
or
mov
sub
jbe
and
lock
ret
adc
dec
lock
loop
out
mov
push
stos
and
sahf
add
add
jge
adc
xchg
inc
das
jne
and
add
aaa
popa
fcmovnu
adc
test
jbe
inc
mov
js
pop
pop
adc
nop
faddl
xchg
lea
adc
inc
bnd
and
dec
add
mov
ja
mov
mov
dec
inc
mov
jns
pop
push
adc
nop
test
lcall
lods
inc
leave
jne
and
cmpsb
arpl
mov
cmp
fucomi
adc
mov
and
mov
push
loopne
lahf
adc
addl
xchg
xchg
inc
popf
jne
and
xlat
jmp
fcmovnu
adc
xchg
incl
bound
pop
cmpsl
adc
dec
loope
mov
sub
aaa
inc
push
jb
and
mov
aaa
sbb
lock
add
or
sub
aam
sbbl
subl
sarb
jmp
jne
and
cmpsb
mov
cmp
adc
scas
inc
mov
push
adc
nop
push
sub
xor
daa
adc
xchg
inc
xchg
jne
and
cmpsb
jnp
shll
fbstp
adc
adc
jae
pop
and
mov
jns
pop
rclb
nop
mov
and
xor
dec
jl
inc
or
jbe
xlat
cmpsb
jg
shll
add
frstpm(287
adc
xchg
pop
dec
mov
mov
nop
mov
jns
pop
hlt
adc
dec
push
xor
xor
adc
addl
cmpsb
addr16
jae
divl
adc
xchg
cmp
and
mov
jmp
push
lods
js
pop
outsl
adc
nop
outsl
xor
pop
jge
adc
push
inc
mov
cmpsb
lcall
cmp
dec
mov
mov
sahf
inc
int3
push
jns
pop
and
nop
loope
xchg
dec
cltd
xor
sbb
and
jne
and
pusha
xlat
rcll
aaa
fildl
test
push
mov
roll
fwait
js
pop
push
adc
nop
subl
incb
inc
and
popf
add
mov
aaa
sbb
adc
or
fsubl
dec
mov
dec
inc
repnz
jnp
nop
lods
orb
xor
jge
adc
cltd
inc
insl
jne
and
mov
aaa
jle
mov
cmp
xchg
and
test
nop
sub
punpckhwd
adc
xchg
jl
dec
xchg
shll
cmp
xchg
inc
dec
mov
bound
mov
lret
inc
dec
popf
js
pop
jnp
inc
nop
rolb
fisttpll
xchg
inc
mov
cmpsl
cmp
mov
cmp
fistpl
adc
jne
mov
and
mov
adc
jns
pop
ss
nop
sbb
xor
jb
push
adc
xchg
and
cmpsb
adc
rorl
cmp
fcmovnu
adc
xchg
push
js
fnstsw
sub
inc
pop
in
cmc
nop
lock
xor
jge
adc
xchg
into
jne
and
xchg
rcrl
fdivs
adc
push
hlt
inc
and
test
mov
nop
pop
addl
jl
inc
test
and
push
jnp
imul
mov
cmp
push
adc
xchg
xchg
lock
hlt
sbb
outsb
mov
gs
adc
pop
outsb
push
xor
xor
js
popf
adc
xchg
inc
cmp
and
popa
mov
mov
cmp
xchg
jmp
mov
loopne
sti
test
inc
mov
cmp
nop
daa
adcl
ret
adc
outsl
inc
or
and
std
add
sub
and
test
cs
addr16
nop
xor
lock
nop
out
xorl
mov
cmpsb
inc
into
shll
add
mov
cmp
je
xchg
hlt
call
nop
cwtl
test
inc
leave
sbb
pop
add
aas
nop
jae
xchg
dec
push
xor
addr16
inc
es
and
std
rcl
add
mov
cmp
fcomi
adc
xchg
inc
xchg
adc
xchg
nop
out
test
hlt
inc
jns
pop
push
adc
nop
orl
jge
adc
xchg
and
pop
sar
add
mov
cmp
fldt
xchg
ret
test
fisttpl
jns
pop
push
out
cmp
adc
xchg
and
pop
add
adc
pop
fldt
ja
cltd
sbb
and
mov
jo
int3
inc
in
js
pop
cs
nop
jl
outsl
dec
mov
cmp
push
xchg
inc
pop
jb
and
js
shlb
notl
enter
adcl
fnstsw
pop
mov
daa
nop
ret
orl
jbe
xor
jne
and
cmpsb
sbb
fnsave
cmp
das
adc
cwtl
pusha
xor
or
xor
mov
mov
sub
iret
mov
dec
add
xchg
mov
aas
push
mov
dec
mov
ds
out
mov
sbb
arpl
mov
pop
jg
cmp
mov
or
fdivr
xchg
push
daa
pop
je
jecxz
dec
js
jl
roll
imul
jne
xchg
sub
ljmp
scas
cmpb
cmp
repz
jge
imul
je
jge
repz
push
push
sub
rorl
sarb
inc
jecxz
pop
cmp
insl
int
push
lock
or
inc
mov
pop
mov
push
jbe
das
pop
lods
aam
in
or
call
outsb
nop
pop
dec
mov
loop
xchg
push
lock
femms
push
sub
sub
pop
outsl
mov
add
shlb
mov
fidivs
and
push
orl
lock
push
aad
dec
repz
int3
push
out
aam
xor
dec
daa
xchg
std
rcl
push
add
add
out
xchg
out
mov
aad
sub
test
fildll
push
pop
setnp
int
scas
fcmovnbe
add
loop
in
mov
pshufw
add
pop
pop
cwtl
loop
incb
jmp
push
and
out
jge
inc
sbb
leave
push
into
imul
fnstsw
sbb
sub
ror
mov
jmp
out
pushw
mov
pop
call
mov
pop
stos
cld
dec
bound
out
std
insl
repz
xchg
sub
pop
andb
push
sbb
lcall
sbb
cmp
out
pop
fdivrp
xor
lcall
aas
pusha
or
xchg
pop
loope
cmp
cmc
or
push
and
or
std
mov
push
sbb
movl
rorb
decl
add
lods
inc
imulb
insl
xor
cmpsl
sbb
xchg
les
sub
xor
cmp
jg
repnz
push
cmc
xchg
xchg
sti
sub
ds
and
adc
lea
popf
into
mov
test
xor
sub
sub
cmp
xchg
fstl
sbb
mov
loopne
inc
lock
jl
lret
fcom
ja
push
xor
xchg
std
shlb
xor
jmp
push
mov
cmpsl
ficomps
sbb
push
je
push
test
popa
data16
adc
jb
mov
nop
sub
popa
inc
jb
cmp
pop
push
ja
outsb
pop
loop
test
cltd
add
lods
repnz
jl
fimull
sub
std
loope
push
sub
sbbl
jecxz
jge
das
mov
out
sub
lcall
ficompl
push
adc
sub
sbb
push
out
jb
ss
sbb
and
push
or
inc
jl
out
jmp
jb
imul
fbld
lcall
rorb
bnd
sarb
jle
inc
fiaddl
push
in
ja
in
ljmp
dec
lock
or
dec
and
dec
aaa
adc
lret
push
mov
nop
or
dec
call
ljmp
cmpsl
pusha
push
fnstsw
loop
cmp
xor
pop
xchg
repz
mov
int
adc
negb
fmull
xor
iret
jbe
adc
jecxz
and
cmp
mov
loop
sbb
push
lods
loope
out
lods
mov
xor
mov
ret
mov
loop
inc
inc
rcr
mov
xor
bound
imul
dec
sbb
inc
and
test
in
pop
je
push
nop
call
xor
push
xchg
fnstenv
and
cmpsb
xchg
shl
add
mov
cmp
fcmovnu
adc
hlt
ret
mov
addr16
std
sarl
mov
gs
push
adcl
xchg
jge
adc
xchg
inc
les
and
jbe
roll
cmp
adc
xchg
or
mov
mov
nop
mov
add
adc
nop
jl
pushf
dec
add
out
sub
xor
jmp
inc
shrl
pop
xchg
fistl
xchg
xchg
cs
test
mov
ficoml
mov
adc
and
mov
cmp
fistl
mov
repz
aam
xchg
cmpl
nop
cmp
mov
sub
mov
movsb
jne
and
push
mov
aaa
pop
mull
pop
and
test
stc
pop
test
ret
nop
mov
sub
adc
jne
and
rorl
lar
and
out
inc
adc
xchg
and
hlt
mov
nop
incb
add
adc
nop
pusha
addl
push
xchg
inc
push
jne
jb
xchg
add
fistl
adc
mov
push
and
dec
xchg
inc
test
jns
pop
mov
mov
arpl
jb
jge
adc
jb
and
cmpsb
jge
rcl
add
rorl
xchg
dec
das
mov
hlt
scas
and
dec
mov
pop
mov
xorl
jge
adc
xchg
and
cmpsb
arpl
sbb
fs
cmp
pop
adc
xrelease
pop
mov
mov
adc
nop
pop
sbbl
jge
adc
xchg
jne
and
cmpsb
imul
pop
cmp
fstpt
js
mov
pushf
and
sub
movsl
arpl
pop
adc
nop
lahf
andb
xor
pusha
jge
adc
jle
lret
rcl
add
mov
dec
loope
pop
jb
dec
cmc
mov
nop
test
push
pop
mov
loopne
filds
sahf
pop
jp
push
and
jl
jno
pop
mov
cmp
out
adc
xchg
cmpsl
lea
lea
incb
and
subl
jge
adc
jne
and
or
nop
mov
cmp
fstpt
sbb
pop
mov
cwtl
inc
inc
clc
js
pop
inc
adc
nop
jmp
xor
push
jge
adc
pusha
and
cmpsb
adc
roll
aaa
mov
xchg
mov
mov
test
nop
mov
cs
mov
xor
nop
incl
lea
jge
adc
xchg
and
cmpsb
out
shll
xchg
mov
aaa
adc
or
stos
mov
mov
nop
and
rorl
mov
cmpsb
xchg
inc
in
jne
and
cs
mov
cmp
fisttpl
adc
xchg
mov
mov
hlt
lahf
sub
daa
jp
push
pop
mov
jmp
dec
mov
inc
adc
jb
and
add
adc
xchg
xor
and
mov
movsb
test
inc
adc
jbe
add
and
es
adc
jne
and
in
add
mov
aaa
jne
adc
xchg
fstps
mov
mov
in
inc
mov
xor
mov
mov
mov
adc
inc
mov
mov
aaa
int
ret
adc
xchg
mov
mov
hlt
pop
and
mov
xor
push
outsl
jns
pop
mov
sub
mov
jne
and
mov
push
fistl
loop
add
in
aad
dec
inc
sti
push
jns
pop
into
push
mov
fnstenv
adc
notb
cwtl
xchg
and
mov
aaa
fldt
inc
xchg
data16
call
test
pop
data16
pop
sahf
push
xor
xor
and
and
adc
push
cmc
jp
es
fs
ret
arpl
pop
push
adc
nop
out
addl
jge
push
lock
and
cmpsb
cmp
mov
cmp
xchg
pop
pusha
mov
hlt
fsubs
insb
mov
and
stos
js
pop
aaa
adc
nop
insb
xorl
out
xchg
jne
and
leave
add
push
cmp
fisttpl
push
mov
dec
and
mov
out
inc
sub
js
pop
push
adc
nop
adc
movsb
lret
adc
xchg
xor
and
nop
shll
cmp
xchg
sahf
push
mov
mov
lret
leave
jns
pop
add
mov
test
jge
adc
jne
and
cmpsb
out
shll
cmp
xchg
mov
lods
hlt
cld
and
inc
xchg
inc
and
jns
pop
xchg
adc
sub
stos
adc
clc
xchg
or
mov
aaa
xor
xchg
xor
mov
ja
dec
push
xor
and
mov
mov
xchg
pop
imul
mov
sbb
dec
push
mov
pop
cli
xchg
inc
and
dec
sub
popf
aas
and
ret
dec
cmp
dec
ja
jne
fcoms
inc
loop
xor
lock
mov
out
shl
js
mov
push
pop
pushf
dec
pop
inc
push
or
sbb
pop
xchg
xchg
and
sti
push
mov
outsl
mov
pusha
pop
aam
popf
out
ret
out
xor
mov
fisubrl
or
out
fcompl
shr
faddp
push
mov
jbe
dec
inc
mov
stos
sbb
pop
push
cmc
mov
sti
outsl
shlb
rorb
add
xchg
stc
test
jb
loop
cltd
sbbb
pop
repz
icebp
clc
and
scas
jmp
arpl
js
in
push
test
adc
cmp
out
jno
shrb
lcall
fidivrl
shrl
sub
mov
outsb
or
sub
popa
sbb
lock
cli
iret
sti
mov
ja
int3
mov
adc
pop
fbstp
cmp
push
or
push
in
pop
xchg
addr16
jno
shl
sbb
dec
adc
into
sahf
adc
sub
mov
dec
repz
int3
inc
je
ret
pop
mov
lock
inc
inc
mov
stos
aaa
mov
inc
iret
mov
push
in
pop
outsb
jae
outsb
outsb
sub
outsb
xchg
out
push
outsb
mov
out
outsb
ret
out
ds
rcll
imul
jne
cltd
lods
xor
test
loope
cltd
out
push
jecxz
mov
dec
jmp
jns
lods
fs
dec
add
inc
jecxz
push
shrl
fldcw
xchg
lret
jg
lock
mov
push
adc
push
pop
rorl
sub
fidivrl
pop
arpl
push
repz
sbb
repnz
cmp
mov
out
xor
pop
or
ljmp
in
outsb
sti
dec
or
push
addl
sahf
idivb
sbb
jle
sbb
mov
imul
mov
mov
jbe
fwait
sbb
mov
mov
sbb
mov
jmp
mov
or
notb
sub
cmpsb
insl
dec
out
mov
pop
out
inc
outsb
imul
outsb
jnp
fstps
adcb
add
add
in
mov
mov
or
and
arpl
popa
fimull
daa
push
cld
loop
test
xchg
test
jg
dec
xchg
mov
and
mov
lcallw
mov
push
xor
repz
loop
cmp
imul
mov
push
sahf
shl
and
xchg
in
das
mov
mov
mov
sarl
ss
mov
pop
test
dec
sbb
or
sub
enter
add
imul
fnstsw
shrb
fsubrs
and
negl
sbb
insb
rclb
arpl
mov
add
sysret
fsubs
and
ds
xor
arpl
aam
decl
arpl
lret
shll
sub
xor
std
mov
test
in
pop
aam
xchg
sub
xchg
and
pop
mov
shl
pop
imul
jae
pop
aaa
and
pusha
xchg
inc
xchg
mov
push
sbb
insl
in
add
dec
lods
sbb
push
mov
jae
popa
xchg
and
in
lods
push
jg
adc
sbb
out
push
loop
inc
cmp
cwtl
or
shl
aam
fimull
jg
lods
loop
pop
lcall
pop
push
leave
flds
loop
iret
xor
imul
insl
lock
leave
les
dec
adc
stos
in
outsb
xchg
or
out
add
negl
push
pushf
jmp
lods
and
enter
imul
fs
sahf
adc
sub
adc
idivl
jns
xchg
mov
adc
add
fnstenv
sbb
je
andb
or
xchg
push
inc
loopne
cmpsl
out
lea
or
push
adc
push
sub
std
scas
adc
shrl
sbb
jno
mov
movq
sub
mov
jb
out
sub
lock
outsl
lods
push
push
and
arpl
and
xor
mov
lret
add
aad
clc
ss
dec
clc
xor
push
clc
xor
dec
clc
cmp
in
imul
cmp
imul
in
cmc
idivl
ljmp
out
sub
out
sub
in
sub
push
pusha
leave
sub
pop
leave
das
fs
cs
and
push
xlat
jge
and
jnp
aam
push
jno
mov
cmp
cmp
or
cmp
pop
leave
ds
sbb
xor
test
xor
inc
test
out
dec
sti
add
ficomps
pusha
sahf
push
add
or
inc
sahf
jne
repz
ja
sub
jo
std
popf
jb
or
jns
lcall
jnp
xor
jp
cmp
pusha
add
arpl
pop
sahf
insl
add
outsb
add
imul
xchg
xlat
cmp
lcall
ds
and
sub
js
scas
lcall
push
jo
xchg
sbb
push
mov
orl
out
or
add
in
mov
pop
mov
out
mov
lret
aaa
sub
and
pusha
pop
call
and
jb
lods
cmpsl
or
inc
lock
scas
adcb
jb
negl
lods
js
pop
sti
ja
scas
xchg
add
ljmp
cli
outsb
call
and
ljmp
repnz
jnp
lahf
fcomi
xchg
sti
mov
adc
mov
dec
fildl
fsubrl
push
push
mov
ja
push
cld
jp
push
inc
xor
insb
jnp
outsb
jmp
outsb
loop
xor
jnp
outsb
xchg
jnp
outsb
xchg
jnp
loope
stos
gs
mov
adc
mov
adc
mov
adc
scas
adc
mov
adc
mov
adc
mov
push
mov
adc
mov
adc
mov
adc
mov
pop
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
movsbl
aad
repnz
adc
mov
push
xor
push
adc
imul
mov
push
out
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
mov
xor
fnstsw
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
stos
xor
fists
rcrl
and
push
or
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
sti
mov
ss
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
loope
jnp
ljmp
sbb
push
dec
gs
push
dec
jns
push
dec
adc
push
dec
jge
push
dec
adc
loope
push
cmp
cmp
dec
xchg
cmp
xchg
cmp
cmp
repnz
cmp
repz
into
xchg
push
loopne
xlat
int3
xchg
cmp
lds
add
pusha
cli
jg
pusha
std
call
lods
pusha
jmp
mov
pusha
jb
mov
pusha
repz
pusha
mov
mov
pusha
xchg
xchg
cmp
rol
or
rol
or
ror
or
incb
pusha
scas
jb
scas
repz
fnstenv
jg
fnstenv
jg
fnstenv
jg
fnstenv
jns
pop
sarl
enter
imul
fnstcw
fxch
jg
fxch
jns
pop
sarl
fxch
jg
fld
jns
pop
jmp
cmp
mov
jp
mov
jge
push
bound
mov
jge
push
outsb
jge
mov
jge
mov
adc
sbb
les
push
rorb
frstor
dec
mov
loopne
mov
cmc
sub
cmp
mov
in
scas
mov
out
mov
mov
sub
cmp
mov
in
cmp
mov
repnz
rolb
xchg
ret
xchg
loop
xchg
in
cmp
loop
cwtl
loop
cltd
in
xor
mov
jae
mov
jae
addb
in
shlb
ds
movsb
loop
movsl
loop
cmpsb
loop
cmpsl
in
cmp
loop
test
loop
stos
loop
mov
fcmovnb
mov
fcmovb
mov
loop
mov
mov
mov
rol
loop
mov
loop
mov
loop
mov
loop
mov
loop
mov
in
inc
vunpckhps
jecxz
enter
lret
fxch
jg
fld
jg
fld
jg
fld
xchg
inc
jg
xchg
cli
fadds
cmp
jae
test
jb
outsb
cmp
push
push
jle
scas
mov
incl
scas
and
cs
and
repz
es
scas
cmp
cmc
scas
cmp
testb
clc
scas
cmp
adc
jnp
xchg
mov
jne
xchg
movsl
jne
shlb
jne
shrl
jne
shrl
jne
shrl
add
scas
jne
shrl
or
mov
pusha
pop
loopne
pusha
lahf
out
pusha
xchg
out
pusha
and
les
out
pusha
scas
out
pusha
cmpsl
out
pusha
ss
lods
sarl
lods
or
or
mov
sbb
or
mov
sub
js
adc
push
subl
ja
ficoms
adc
jo
sub
or
loop
xlat
jecxz
icebp
pusha
cld
out
or
push
jmp
adc
xor
testl
mull
mov
cs
ret
sub
jecxz
das
ljmp
lock
movsb
and
mov
sti
nop
or
xchg
dec
dec
mov
push
push
adcb
adcb
insb
outsb
cltd
jnp
outsl
lcall
xchg
push
mov
lahf
adc
test
mov
push
addl
cmpsb
push
orb
adc
call
aaa
mov
mov
mov
mov
mov
jae
mov
mov
push
sub
mov
push
cmp
rol
mov
ret
dec
cmp
rorb
lock
aad
mov
lret
cltd
lret
loop
pop
int
es
into
loop
iret
loop
shl
jbe
psraw
jg
fld
jg
xchg
sti
fdivrs
test
in
cmc
fcompl
jnp
push
jnp
outsb
push
jnp
outsb
push
dec
js
pop
insl
jnp
sahf
icebp
flds
sub
hlt
pop
push
push
cmc
ficoms
neg
movsb
neg
mov
jle
aad
adc
fwait
stos
mov
mov
mov
fcoms
xchg
lea
and
lea
repz
aaa
jae
xchg
pop
iret
mov
pop
xchg
mov
mov
mov
mov
jae
mov
mov
cmp
pusha
mov
leave
dec
pop
mov
jmp
xor
or
sbb
shr
sbb
shl
sbb
shl
add
ljmp
push
ljmp
add
fincstp
add
add
fcomi
or
ljmp
push
ljmp
or
loope
or
loop
or
jecxz
jne
in
je
in
ja
out
jbe
out
jno
call
divl
ljmp
loop
mov
pop
in
mov
fyl2xp1
jle
fprem
jle
fsincos
jle
fsqrt
jle
fscale
jle
in
adc
lock
rcrb
add
pusha
adc
punpcklbw
call
adc
call
adc
sub
adc
pusha
sub
pop
pusha
sub
call
sbb
call
sbb
and
sbb
pusha
and
pop
pusha
and
call
and
mov
pusha
cmp
and
cmp
and
pusha
cmp
daa
pusha
cmp
call
sub
call
sub
xor
sub
pusha
xor
das
pusha
xor
call
xor
call
xor
enter
lret
call
aaa
pusha
int
cmp
call
cmp
pusha
ret
pusha
pusha
call
inc
pusha
call
inc
pusha
fsubr
inc
pusha
fucomi
inc
pusha
inc
pusha
fucomp
dec
pusha
fsubr
dec
pusha
fucomip
dec
pusha
fsubrp
dec
pusha
shr
dec
pusha
shr
dec
pusha
aad
push
pusha
aam
push
pusha
xlat
call
push
pusha
jmp
call
push
pusha
ljmp
pusha
add
in
xor
in
xor
in
xor
call
xor
pusha
sbb
aaa
pusha
sbb
call
cmp
call
cmp
adc
cmp
pusha
adc
aas
pusha
adc
call
inc
pusha
push
call
inc
pusha
sub
inc
pusha
sub
inc
pusha
sub
inc
pusha
sub
call
dec
pusha
cs
dec
pusha
and
dec
pusha
and
dec
pusha
and
dec
pusha
and
call
push
pusha
es
push
pusha
cmp
push
pusha
cmp
push
pusha
cmp
push
pusha
cmp
call
pop
pusha
ds
pop
pusha
xor
pop
pusha
xor
pop
pusha
xor
pop
pusha
xor
call
bound
mov
dec
repnz
out
addr16
pop
jnp
cmp
aad
lret
push
ror
cs
pminsw
orb
incl
pusha
les
jne
ja
scas
adc
jbe
shl
pop
jnp
cmp
aad
fisttpl
rcr
cs
jg
fiadds
mov
aad
ja
aam
jle
xlat
call
andl
test
call
lea
adcb
mov
xchg
xchg
sub
add
lods
in
cmp
mov
cmp
xchg
sbb
and
mov
fwait
and
loopne
out
std
add
pop
jl
inc
inc
sub
dec
loope
xchg
lock
cwtl
xchg
pop
xchg
push
nop
cwtl
adcb
xor
jge
adc
inc
inc
dec
jb
and
add
push
adc
movsl
pop
mov
xorb
dec
jp
pop
xor
or
xchg
andb
cmpsb
xorl
repnz
jns
pop
or
nop
or
es
jge
adc
xchg
inc
ret
and
cmpsb
adc
sahf
xor
xacquire
mov
hlt
pushf
and
mov
sahf
push
stc
sbb
and
test
arpl
adc
nop
sub
data16
adc
xchg
cs
dec
and
adc
nop
xorl
jge
adc
xchg
adc
and
cmpsb
push
shrl
lret
cmp
int3
xchg
arpl
and
mov
rolb
jp
adc
ret
and
mov
rolb
les
pop
les
nop
js
imul
xor
ficoml
mov
push
inc
data16
test
mov
sbb
push
ret
shl
add
mov
cmp
ja
and
push
lcall
pop
ftst
push
xchg
push
push
fs
adcl
movsb
inc
sbb
popf
add
outsb
cli
pop
pusha
fs
pop
ljmp
insl
push
in
mov
or
shll
cwtl
out
repz
push
dec
mov
in
jmp
stos
outsb
aas
mov
dec
cmp
fildl
outsb
inc
adc
jns
pop
mov
insl
pop
add
and
cmpsb
inc
daa
rorl
sti
jg
outsl
mov
in
or
sbb
mov
loope
pop
aad
xchg
gs
mov
pop
lret
jle
add
push
push
sbb
cmc
sub
pop
jmp
adc
adc
pop
or
orps
leave
push
xor
sti
cmp
adc
sbb
or
jae
icebp
testb
push
icebp
icebp
repnz
fiaddl
andb
mov
push
or
push
fdivl
fcomip
dec
mov
or
mov
psubb
sbb
ss
cltd
int3
mov
subb
dec
ret
sub
xor
aaa
jne
decb
mov
cmc
cmpsl
sub
adc
and
jne
ret
cmc
inc
and
daa
adc
cmc
ds
call
pop
mov
xor
lahf
aad
jno
mov
cmp
adc
test
lret
sub
lds
bound
adc
adc
or
adcb
aaa
les
add
test
call
cmpb
add
push
cmpsl
mov
sbb
outsl
adc
cmc
fsubp
jge
push
sub
adc
inc
es
push
fstps
add
or
sbb
test
lret
pop
sti
adc
xchg
in
call
pusha
js
cltd
xchg
pop
lret
add
xor
les
sub
cmc
pop
ficoms
lock
mov
adc
jp
adc
xor
xchg
adc
rcrb
adc
push
xlat
pop
sbb
cs
add
sbb
cmc
or
enter
sbb
dec
adc
mov
cmp
add
test
or
mov
scas
pop
movsb
inc
lahf
xor
test
jb
adc
pop
andb
dec
clc
adc
xor
addl
repnz
ljmp
add
adc
adc
add
jp
xchg
pop
mov
aaa
xchg
movl
sub
adc
xchg
sbb
xchg
ljmp
sti
xor
xchg
pop
mov
or
adc
sbb
pop
mov
cltd
negl
jne
out
dec
daa
dec
out
mov
xchg
subb
jae
aaa
mov
sbbl
pop
imul
pop
jnp
inc
inc
cli
adc
lods
cmpsb
lock
mov
dec
repnz
xor
paddsb
xor
dec
jp
xor
or
adcl
jae
and
pop
or
iret
popf
xchg
aas
dec
notl
add
pushf
jb
adc
jno
fisubl
das
shl
cltd
mov
mov
mov
in
or
lret
mov
push
dec
cmpb
movl
sti
leave
pop
cmpsl
imul
movsl
push
fcoml
rolb
pop
dec
inc
lahf
movsl
sbb
lret
dec
xchg
mov
or
xorl
xor
sbb
shlb
idiv
and
jge
nop
pop
mov
adc
add
mov
cwtl
dec
repnz
push
enter
push
xchg
inc
loopne
aam
xor
mov
pop
adc
pop
add
mov
xor
cmc
pop
and
adc
insb
nop
sbb
in
push
enter
addr16
addb
test
or
pop
aaa
inc
or
cmpl
push
shlb
adc
mov
cwtl
sub
cltd
and
push
cwtl
leave
pop
sarb
sub
pop
add
ss
gs
and
fwait
mov
or
pop
and
adc
jecxz
adc
adc
xor
testl
xor
pop
mov
out
mov
xchg
sarb
lds
pop
jae
cmc
adc
push
xchg
mov
mov
lcall
adc
mov
scas
sbbb
iret
xchg
push
pop
push
cmp
cmp
popa
mov
notl
bound
fistpl
dec
add
scas
adc
xchg
mov
lahf
mov
sahf
adc
ljmp
push
repnz
sti
rorb
enter
sarl
adc
inc
mov
inc
cmp
cltd
xorb
sbb
sub
dec
test
xor
lcall
sbb
add
pop
rclb
movsl
out
je
shr
sbb
cmc
insb
push
test
mov
dec
jne
fs
cmp
bound
adcl
arpl
cld
test
push
hlt
push
add
cmpsl
sar
adc
adc
mov
mov
pop
push
xchg
andl
adc
ds
pop
pop
cltd
xchg
add
xchg
cli
xchg
cmpsb
pop
test
ret
test
pop
movl
push
xor
inc
jb
ss
repnz
arpl
test
pop
pop
push
cmp
push
and
cs
movsl
inc
cmpsb
push
fwait
nop
pop
add
mov
adc
cwtl
cmp
outsb
pop
push
lret
pop
je
sbb
ret
xchg
cli
or
cmpsl
stos
in
dec
cmp
arpl
mov
mov
pop
xor
push
push
daa
mov
push
sbb
xchg
xchg
test
mov
sbb
inc
subb
push
xor
cmp
outsl
ds
push
inc
scas
mov
pop
test
push
movaps
adc
sub
mov
test
iret
dec
pop
cs
mov
mov
and
dec
dec
mov
mov
jne
mov
lea
cli
lock
bound
push
jg
pushf
outsl
push
out
popa
push
in
insb
insl
xor
mov
pop
sbb
hlt
repnz
jp
dec
xchg
mov
fwait
imul
clc
push
mov
sbb
jp
ds
mov
lods
inc
jp
aas
add
jo
sbb
sub
mov
cmp
push
out
enter
cltd
lea
push
movsb
xor
xor
mov
out
jb
loope
fdivrl
test
shl
and
test
inc
mov
repnz
std
es
sub
fsubl
pop
jne
outsb
adc
push
mov
out
testl
outsb
push
js
sbbl
testl
or
inc
loope
adcb
mov
divl
sbb
pop
mov
inc
cmp
or
bound
inc
push
arpl
aas
pop
mov
cld
push
mov
jle
push
sub
repnz
inc
jb
sbb
and
xor
je
jo
in
pusha
mov
je
cwtl
push
seta
jno
hlt
pop
nop
daa
je
push
flds
insl
cmp
xor
loop
jb
dec
stc
add
jno
cli
or
jb
idivb
sar
jg
cwtl
jns
cmpl
fs
shlb
sbb
pop
call
mov
or
jne
and
or
shl
add
mov
aaa
pop
pop
xchg
negl
adc
stos
cltd
bound
dec
xor
xor
imul
or
mov
cmp
dec
push
jmp
test
pop
push
pop
sbb
mov
sbb
ss
mov
mov
push
cmp
movsl
loop
or
push
outsl
cld
inc
les
sub
pop
mov
mov
les
ljmp
mov
mov
mov
lcall
mov
xor
cs
int3
jecxz
sbb
movsl
xchg
xchg
xor
scas
pop
mov
pop
pop
and
cmp
sbb
hlt
icebp
inc
loopne
pop
leave
in
arpl
add
movsb
fst
cltd
jae
dec
mov
cmc
dec
cltd
mov
or
insl
sbb
dec
add
xor
pop
jnp
push
add
icebp
xchg
sti
in
mov
jne
mov
gs
out
data16
lahf
into
pop
xchg
mov
inc
sub
ficoml
pop
xor
xchg
nop
pushf
idivb
mov
jno
pop
jg
daa
jg
repnz
pop
or
out
mov
push
pushf
inc
xchg
xor
enter
inc
xchg
and
xchg
out
mov
rolb
nop
and
mov
jno
sti
imul
addr16
lds
enter
and
mov
popf
lods
push
repnz
and
inc
push
add
clc
sub
dec
push
inc
xchg
mov
or
lcall
lret
inc
push
mov
xchg
andl
sbb
enter
inc
push
cwtl
xor
push
pop
ret
dec
andb
imul
push
push
out
sbb
int
jl
js
imull
add
into
scas
mov
or
scas
inc
jg
mov
inc
fdivl
mov
aaa
inc
leave
cld
inc
push
push
fcmovnb
addr16
cltd
and
jno
cmpsb
mov
cvtps2pi
pop
lea
mov
pop
mov
fwait
xor
mov
loop
cmp
or
mov
mov
popf
pop
daa
loope
sti
lods
mov
insl
or
xchg
dec
cmp
cmovg
out
aam
lret
sbb
jbe
push
std
xor
sub
test
lahf
test
sub
push
sub
pop
mov
in
or
inc
inc
gs
push
add
es
sbb
loopne
mov
pop
leave
rol
popw
nop
mov
mov
imul
out
je
notb
push
sub
cli
insb
imul
pop
push
push
lods
mov
push
and
add
scas
std
push
mov
or
popa
cmp
inc
cltd
mov
clc
cltd
xchg
lea
push
test
clc
icebp
inc
or
xor
loope
add
inc
popf
xchg
cli
fnstcw
int
sarl
adc
sbb
push
adc
mov
incb
jo
mov
fs
out
out
arpl
inc
mov
sti
adc
aaa
pop
sbb
mov
or
inc
cli
inc
bound
mov
ss
jb
jnp
out
je
sti
jl
cmp
out
int
int
outsb
shlb
mov
adc
sub
mov
andl
idivl
push
mov
jnp
jle
or
inc
add
xchg
in
mov
lcall
push
loopne
inc
pop
aas
cmp
jl
loope
push
mov
mov
and
fs
xor
mov
rorl
xor
mov
mov
movsb
push
and
imul
sbb
mov
push
push
pop
mov
imul
mov
jno
pop
mov
subl
imul
mov
cmc
add
in
pusha
test
push
daa
adc
xor
and
fdivs
mov
mov
rcl
mov
nop
sbbb
xor
jge
int3
fisubrl
fwait
addr16
adc
inc
mov
dec
mov
pop
push
push
and
dec
sbb
cmpsb
arpl
jecxz
pusha
lods
call
bound
fucomip
mov
rolb
or
shrb
dec
pusha
pushaw
in
nop
sahf
ret
xchg
sar
mov
cmovno
in
xor
cmpsb
push
rolb
jne
arpl
fs
xor
loope
add
stc
mov
adc
outsb
cli
inc
inc
mov
addr16
pusha
gs
add
nop
push
in
cmp
inc
andl
mov
and
pop
inc
push
push
dec
ret
bound
jns
pop
movsl
outsb
jl
dec
pop
push
add
ret
xor
add
in
js
loop
aas
xchg
outsb
xor
scas
add
mov
fwait
shl
lods
out
pop
jno
push
mov
stos
cmp
or
xchg
aas
icebp
hlt
pop
mov
dec
inc
mov
adc
cwtl
daa
jno
xchg
mov
push
mov
mov
inc
inc
mov
push
jne
inc
ljmp
pop
ds
add
mulb
ret
cmp
pop
jl
imul
xchg
sub
test
and
movsb
hlt
and
mov
pop
add
sbb
clc
inc
mov
jp
xchg
push
fs
imul
insb
imul
cs
stos
movsb
xor
loop
inc
xchg
mov
cmp
push
test
sbb
decl
inc
nop
mov
pop
lock
pop
imul
pop
pop
clc
fnstcw
cmp
rolb
rclb
fcoms
dec
mov
xor
ret
pop
dec
das
test
bound
lds
cwtl
fsubs
jp
data16
lods
pop
push
cli
hlt
adc
dec
dec
loope
cmp
pop
push
gs
mov
sbb
pop
lret
mov
aas
es
in
pop
jbe
dec
and
mov
pop
mov
addb
addl
push
arpl
sarl
jb
mov
insb
cs
add
mov
movsb
lods
lahf
or
out
mov
out
fdivrp
gs
add
fcmovnbe
ja
mov
push
add
out
sbb
jb
test
push
and
jg
sub
inc
mov
push
out
dec
xor
es
add
push
aam
repz
pusha
mov
adcl
xchg
push
pusha
and
cmp
imul
pop
arpl
bound
mov
fcompl
xchg
fisubrl
shrb
mov
or
iret
dec
loopne
add
mov
cltd
jo
jp
addr16
xor
cmp
cli
lock
fs
cs
clc
sub
mov
push
push
dec
cmp
sub
lods
sti
adc
jl
ja
xlat
dec
sti
cmpsl
and
cltd
xor
push
dec
push
mov
push
insl
adc
sarl
xchg
xor
and
stos
xchg
sti
cmp
xlat
xchg
inc
scas
leave
cld
std
adc
jmp
adc
inc
mov
pop
mov
xchg
movsl
ret
insb
movsb
fs
xchg
fs
jecxz
in
addr16
and
cmc
mov
iret
adc
jae
mov
and
xchg
adc
nop
pop
addr16
pop
push
xor
pop
subl
mov
push
pop
mov
dec
nop
mov
in
adc
jnp
push
sbb
mov
inc
jae
fiaddl
pop
push
dec
jbe
mov
push
int3
push
sub
push
loop
loope
ret
push
mov
or
mov
aaa
dec
dec
insb
mov
or
jecxz
sub
inc
and
push
mov
mov
push
std
dec
cmp
lock
sub
stos
les
xor
stos
das
dec
lahf
fisubrs
cli
fldt
adc
aad
inc
les
lds
add
in
dec
sbb
jns
shrb
add
adc
pop
ljmp
rcll
xchg
inc
sbb
xchg
or
cmp
data16
xchg
push
insl
mov
loopne
sub
pop
pop
sbb
repnz
std
or
mov
fisttpll
addr16
push
inc
fistl
push
jle
sub
aam
dec
mov
mov
pop
inc
add
data16
push
movsb
xchg
xor
lcall
mov
test
stos
int
out
jnp
ss
icebp
mov
xor
mov
mov
frstor
add
adc
add
test
cmpsb
dec
fisttpl
ret
test
pop
xchg
mov
je
and
out
mov
xchg
enter
xor
push
mov
inc
xchg
sarl
and
cmpsb
les
rcl
mov
sbb
xor
je
lea
inc
dec
jb
mov
cltd
inc
pop
or
add
push
add
inc
and
outsl
sub
jmp
xchg
mov
aaa
pushf
cltd
xor
cmp
jmp
mov
pop
mov
inc
mov
cltd
mov
dec
push
mov
push
xchg
mov
jge
sub
inc
mov
stc
sub
das
out
arpl
lods
push
clc
or
imulb
xor
and
movsb
jge
cmp
mov
sbb
sbb
dec
sahf
pop
cmp
xchg
fwait
inc
dec
fbld
jle
lds
pop
popf
push
mov
mov
int3
pop
lcall
or
and
popa
jo
popa
mov
xchg
cmp
jno,pt
dec
dec
mov
push
std
cltd
and
push
aas
mov
popa
inc
outsl
inc
fwait
and
fwait
pop
cmpsl
stc
int3
bnd
xlat
lock
cmova
push
movsb
push
pop
xchg
adc
inc
or
mov
sbb
and
pop
dec
hlt
mov
jp
sbb
data16
push
or
mov
jmp
fwait
scas
mov
lret
loope
push
loopne
or
pop
push
inc
pop
out
mov
cltd
jns
cli
sahf
and
cmp
mov
aaa
in
push
shrl
pop
fstl
psrld
test
dec
pop
dec
push
jg
movsb
mov
and
lret
push
push
cmpsb
mov
inc
aad
cs
aam
movsb
cmp
bound
xchg
sbb
sub
jecxz
mov
cwtl
popf
sbb
push
inc
out
or
push
adc
sbb
add
rolb
pop
mov
cmc
fdivl
daa
push
bound
out
sti
call
dec
adc
imul
out
adc
mov
adc
test
lock
adc
or
mov
std
jle
repz
pop
aad
pop
out
push
and
pop
out
pop
jnp
dec
es
sub
cld
mov
adc
sbb
inc
push
jnp
enter
in
subl
fmuls
dec
and
adc
out
sub
pop
addr16
cmpsl
mov
aas
aaa
movsl
jecxz
aad
push
xlat
sahf
dec
out
adc
mov
notb
loop
pop
xchg
xor
cmp
std
add
add
stc
sbb
out
lahf
mov
jno
push
dec
mov
mov
inc
fwait
dec
adc
lret
push
or
lds
add
adcb
test
imul
loopne
shll
xchg
mov
add
xchg
cmp
mov
cmp
xchg
cltd
aam
inc
pushf
rcrb
jno
push
stc
sbb
in
dec
clc
and
in
lods
add
insb
addb
xchg
jnp
ljmp
pop
nop
ljmp
xchg
xchg
xchg
jo
adc
imul
jle
inc
fistpl
push
jp
dec
jp
and
inc
dec
mov
mov
addl
lret
jg
test
adc
sbbl
mov
adc
cmp
push
cmc
je
pop
and
and
inc
dec
adc
daa
dec
sub
out
xor
les
jmp
cmp
mov
xlat
and
popa
outsl
xor
test
cmpsb
fcmovb
pushf
jmp
aad
shl
xlat
nop
or
out
adc
fnsave
out
decl
cmp
and
mov
cmp
cmp
jb
and
sub
inc
pusha
xorl
push
cmp
push
inc
inc
pop
jge
push
add
cwtl
pop
dec
outsl
mov
push
adc
mov
add
test
inc
and
sub
lgs
frstor
clc
adc
jo
sbb
pop
clc
data16
adc
aas
sbb
adc
hlt
stc
in
xor
xor
cmp
jo
mov
stos
fnstsw
xchg
test
imul
and
or
out
cmpsl
mov
mov
and
or
dec
push
dec
sbb
push
jp
mov
scas
xor
push
fstps
imul
push
out
adc
push
push
jb
lahf
rclb
mov
cmp
leave
notb
cmp
mov
cli
inc
stc
jmp
and
xor
cli
int
push
lea
sub
mov
arpl
loopne
out
out
mov
jp
mov
add
push
or
mov
sub
push
add
lods
xor
mov
jno
jp
inc
lahf
xor
rorl
dec
dec
divl
aad
repnz
repnz
stc
mov
xor
mov
mov
arpl
add
repz
push
or
repz
hlt
mov
add
xchg
addr16
pop
pusha
movsb
enter
mov
in
adc
jg
movsb
fmul
inc
cli
pushf
clc
sbb
dec
xor
pusha
in
in
pop
push
jmp
out
jmp
out
pop
sub
pop
mov
imul
adc
repnz
enter
inc
sub
negb
cltd
cmpsb
imul
je
lods
popa
add
xlat
repnz
repz
xor
jge
je
shll
jnp
mov
lods
loope
je
pushf
mov
push
aad
mulb
or
dec
lret
sbb
scas
testb
cmp
ljmp
cmp
mov
out
adc
pop
xor
push
xchg
imul
sub
nop
cwtl
fadds
jl
pusha
sbb
dec
push
test
adc
rorb
hlt
xlat
lahf
dec
orb
movl
mov
sub
and
mov
je
rclb
push
sbb
pop
fs
daa
int
add
mov
cltd
sbb
mov
sbb
jbe
aaa
inc
out
and
and
mov
in
in
push
push
lret
inc
int
pop
adc
std
hlt
and
fs
cmc
enter
push
bound
mov
xor
test
out
mov
adc
mov
inc
fsubr
inc
mov
sbbl
cmpsl
mov
mov
and
enter
iret
cwtl
mov
iret
daa
push
rcrl
jno
push
sbb
mov
stc
test
in
sub
fimull
inc
fdivrl
and
sbb
or
xchg
shrl
fcmovne
ljmp
lahf
mov
pop
dec
cli
mov
popf
and
cmpb
daa
repz
fucomp
fmul
je
ss
subl
clc
movsb
pop
je
pop
repnz
pop
test
test
test
daa
fs
mov
aam
clc
pop
arpl
mov
call
inc
or
pop
rcll
daa
sub
std
pop
insl
roll
lret
sbb
das
testl
mov
popa
pop
inc
js
xor
aaa
in
imulb
cmp
xchg
into
sbb
mov
xchg
fucompp
call
aam
lods
xor
mov
push
stos
mov
pusha
mov
sbb
push
jns
inc
cltd
adc
lahf
fs
cltd
jns
inc
out
out
adc
push
js
mov
xchg
inc
insl
add
imul
out
mov
jo
lock
push
pop
xor
mull
mov
fadds
call
fnstcw
sbb
std
nop
aas
mov
pushl
popf
outsl
pop
mov
push
or
jo
mov
imul
add
push
bound
jae
jno
dec
popf
mov
mov
jnp
je
sbb
push
adc
sub
sti
adc
sub
pop
fnstsw
sub
add
push
add
out
lds
clc
cmp
jns
adc
mov
enter
and
cwtl
out
mov
aad
cs
nop
sub
and
push
dec
lods
enter
daa
sub
adc
inc
xchg
js
sti
or
repnz
aaa
dec
add
lock
in
jg
adc
push
sbb
aas
xchg
sti
pop
gs
stos
mov
sub
data16
outsl
mov
cmc
ja
aad
aas
je
mov
cmc
cmp
ss
adc
sti
clc
and
std
inc
je
jmp
sub
ss
lea
fdivr
daa
dec
mov
lods
js
int3
sahf
jmp
mov
xchg
add
adc
and
les
and
add
cmpb
test
iret
dec
xchg
pop
int3
mov
stos
dec
roll
pop
mov
and
dec
inc
ss
xchg
and
push
shl
sub
fcmove
out
mov
mov
cmp
incl
sub
sbb
cld
sub
adc
outsl
mov
mov
ret
sti
dec
xchg
outsb
add
pop
sahf
mov
sbb
xor
fwait
push
adcl
hlt
xor
cmp
test
lahf
mov
push
and
sbbb
or
imul
ret
xchg
pop
outsb
inc
icebp
test
testb
push
xor
mov
movsb
js
dec
negl
xlat
adc
push
pop
push
mov
add
xchg
push
outsl
cmp
rcrb
fisttps
push
fcmovnu
dec
mov
cld
add
jmp
xlat
pop
inc
sub
andl
sub
sbb
loop
add
inc
es
orb
rorl
cld
sub
pop
jp
jb
push
add
pop
dec
fs
adc
push
in
and
push
adc
repz
jo
xchg
jae
out
dec
icebp
add
je
out
cmp
dec
sub
pop
add
pop
roll
mov
mov
mov
repnz
dec
push
pop
xchg
lahf
test
mov
xor
fst
fsubrs
movl
pusha
dec
pushf
rorl
ds
xlat
fisubs
cmp
lods
in
sbb
xchg
pop
je
sbb
dec
xorb
mov
mov
xchg
pop
stc
cmpsl
movntps
and
sti
pop
int
mov
stos
pop
or
in
add
sbb
out
shrl
push
movsl
call
and
mov
fs
push
jl
sbb
dec
mov
pop
jo
and
ret
in
je
push
lds
movsl
jae
push
divl
push
pop
sub
popa
mov
push
fbld
cli
test
push
fnstcw
xchg
mov
pop
pop
xor
inc
sub
ficoms
out
inc
jp
nop
push
in
jb
popf
xchg
bound
inc
cli
xor
mov
cmpsl
adc
jle
imul
dec
mov
loopne
aas
and
mov
xchg
or
xchg
xchg
sub
add
out
xor
inc
mov
cmpl
pop
pop
stos
add
aad
jbe
sbb
jl
add
dec
push
lcall
xchg
add
mov
xchg
push
inc
icebp
adc
add
mov
jnp
mov
mov
out
ret
mov
dec
sbb
and
adc
js
iret
sti
xorb
stc
push
dec
mov
or
or
inc
sbb
out
test
aam
sbbl
addr16
test
sub
jo
arpl
inc
jnp
fs
pop
test
pop
push
sub
adc
movsl
imul
sub
add
xchg
pop
push
packsswb
mov
cli
jno
lret
jl
mov
xchg
stc
add
out
imul
fcmovb
and
mov
mov
outsb
lea
icebp
or
cld
cmpsl
stc
xchg
cli
leave
repnz
jae
in
cmp
fdivrl
les
gs
and
imul
mov
xlat
test
cwtl
and
stc
cmc
stos
mov
in
and
push
repnz
push
sub
fcompl
cltd
pop
gs
dec
daa
add
stos
icebp
mov
push
sub
aas
adc
testl
lcall
inc
dec
stos
jno
out
addr16
mov
sbb
pop
adc
std
and
out
movsb
out
shl
sub
jp
imul
testb
or
out
add
mov
dec
cmpl
jmp
lcall
in
mov
pushf
dec
push
sbb
cmpsl
push
xchg
in
pop
push
jg
lock
adc
mull
stc
inc
pop
popa
lock
mov
ja
testb
sub
push
loope
push
inc
aas
inc
gs
rorl
out
jae
imul
pop
cmpb
scas
incl
call
mov
sub
orps
or
xchg
rolb
out
in
mov
or
sarl
adc
pop
push
add
int
inc
or
aam
aad
movb
aam
cmp
xor
mov
xchg
cmp
xchg
das
push
lret
pop
or
mov
fdiv
sub
adc
add
icebp
mov
je
fwait
mov
add
test
aas
mov
pop
out
sbb
mov
add
in
jnp
cmpl
repnz
aam
imul
inc
mov
sbb
sbb
jecxz
xor
add
popf
orl
in
add
or
loop
test
shll
jbe
test
cmpsl
mov
fbstp
push
fadds
dec
inc
ja
push
fcomps
lahf
add
push
inc
sbb
test
add
das
mov
mov
jmp
push
xor
je
je
test
mov
in
daa
loope
scas
pop
sbb
push
js
pop
in
fistpl
out
int
lods
mul
sbb
pop
pop
lcall
push
addr16
jle
xor
test
inc
xchg
xchg
in
inc
mov
bound
enter
loop
jae
inc
mov
enter
cld
idiv
add
jmp
jg
pushf
outsb
mov
imul
jbe
push
repnz
xchg
and
aaa
cli
arpl
pop
mov
outsl
push
dec
lret
hlt
je
lock
scas
dec
xchg
and
cmc
adcl
jge
cmp
or
je
sti
test
mov
inc
push
or
pop
imul
xchg
push
pushf
jb
push
pshufhw
mov
bound
cmp
icebp
dec
pop
xchg
scas
pushf
mov
ret
pop
out
dec
jecxz
and
push
xorb
lahf
mov
dec
mov
out
xor
sub
in
lods
stos
pushl
jmp
and
out
mov
ret
mov
xor
mov
pop
out
ffreep
imul
inc
inc
and
jmp
xchg
add
in
jb
fnsetpm(287
loopne
push
icebp
push
outsl
add
rcll
insl
mov
call
dec
push
ds
push
mov
mov
cmc
inc
cltd
std
mov
push
enter
cltd
dec
add
dec
repz
adc
sar
cli
mov
mov
push
cmpl
jecxz
or
loopne
dec
movb
push
mov
adc
bnd
dec
scas
arpl
pop
imul
pop
fadds
mov
mov
push
test
mov
adc
imul
cwtl
lock
repnz
hlt
mov
pop
pop
jg
xor
sbbb
sbb
xor
jmp
add
mov
pushf
filds
jecxz
sub
add
shll
jecxz
lea
sub
inc
mov
sbb
incl
lret
jg
push
push
test
in
add
and
xchg
add
imul
xor
jo
dec
adcl
mov
xor
mov
fs
nop
pop
subl
xchg
repnz
dec
clc
pop
mov
or
push
push
jb
mov
pop
inc
fistps
repz
pop
add
ja
shll
cmp
sahf
mov
leave
pop
out
mov
push
xchg
cli
out
dec
fcmovu
rol
addr16
daa
pop
lret
inc
insl
pop
add
xchg
js
jo
in
movsb
test
fidivs
fs
mov
and
and
and
fs
lcall
mov
mov
fisttpl
call
call
jae
subl
aaa
in
sti
fs
iret
cmp
imulb
jbe
xchg
jp
push
jae
enter
sti
jae
stc
das
popa
adc
add
loopne
jbe
mov
mov
or
push
not
xchg
fisttpl
dec
cmp
clc
jp
jo
outsl
sbb
cmp
dec
cmp
data16
hlt
lods
jnp
sti
dec
fisubl
mov
repz
or
imul
jp
in
pop
out
mov
push
jno
nop
testb
test
es
cmpsb
popf
mov
test
and
pop
mov
adc
jecxz
inc
push
dec
inc
xor
insl
xchg
dec
or
lds
inc
inc
stc
inc
lret
stc
outsl
imull
or
hlt
dec
out
jg
popa
clc
jno
out
out
les
dec
and
stc
icebp
lods
leave
movsl
push
inc
or
std
hlt
xor
les
push
dec
pop
push
dec
pushf
ja
outsb
cmp
inc
add
pop
call
out
shr
mulps
sub
push
ja
test
sub
lock
push
push
and
mulb
sub
sahf
mov
in
clc
jno
wbinvd
out
xor
out
clc
leave
push
insl
cmc
and
jecxz
push
cs
cs
pop
out
mov
movsl
outsb
mov
cmp
lods
in
std
push
aad
scas
bound
adc
ja
or
and
dec
out
dec
xorb
push
outsl
sbb
and
mov
or
in
int3
jmp
sub
idivb
sub
outsb
jb
adc
rclb
xor
test
xchg
les
and
xor
jb
pop
loopne
adc
out
inc
inc
in
and
jns
sub
pop
sahf
or
jg
cmp
mov
lds
pop
gs
call
sbb
lret
call
sub
and
imul
inc
imul
and
jl
ljmp
pop
xchg
fisubl
push
arpl
movsb
shlb
push
mov
imul
push
xor
adc
inc
push
or
rcr
std
mov
xchg
sti
orl
arpl
std
cmpl
mov
xor
jg
shrb
daa
dec
adc
dec
repnz
jae
popf
lock
pusha
mov
sahf
and
jmp
je
js
or
mov
arpl
mov
cltd
add
enter
or
sbb
sbb
aaa
int3
stc
or
lock
or
and
loop
mov
or
orps
addb
lods
push
das
sti
into
aam
loop
pop
call
xchg
fbstp
sub
fldenv
in
out
mov
jo
sbb
dec
scas
fdivs
add
push
shrl
mov
cmc
stos
add
pop
push
mov
aad
aam
jmp
jmp
mov
pop
mov
mov
mov
sbb
out
test
adcb
ds
nop
inc
in
div
pop
pop
sbb
lahf
idiv
fsubrs
add
pop
ret
in
ljmp
data16
out
loop
add
fdivl
or
idivl
mov
sti
xchg
fstl
ret
xlat
fdivr
jg
pop
call
and
sbb
mov
xchg
add
xor
and
or
test
jmp
jg
push
cmpl
fbstp
stc
jno
pop
ja
js
aaa
xor
lret
shl
mov
mov
mov
push
jp
inc
in
cmp
mov
pop
cmpsl
xchg
out
lahf
cltd
mov
xor
mov
outsl
jnp
jmp
or
mov
dec
icebp
out
incb
mov
jbe
push
jecxz
movsl
icebp
mov
and
hlt
bound
adc
jle
fdiv
sbb
clc
jo
push
push
pushf
movl
cli
mov
mov
fnstsw
lret
stos
inc
xor
lret
cmc
jle
push
push
xor
adc
pop
mov
sub
jo
aas
and
dec
mov
push
ja
sub
nop
mov
jg
fmull
add
sub
popf
fistps
fsubs
mov
sbb
frstor
dec
jo
jl
outsb
add
add
imul
push
iret
mov
movsb
test
daa
pop
or
mov
or
leave
inc
add
fistl
nop
push
push
pop
test
jbe
or
lea
xor
jmp
stos
xlat
and
and
mov
aas
or
xchg
aaa
xor
icebp
sub
subb
xor
nop
xor
movsb
xchg
stc
mov
leave
imul
cmp
xchg
cld
dec
sbb
mov
je
jo
repz
push
push
sbb
push
testl
adc
nop
icebp
out
nop
jg
inc
addl
rol
mov
shll
xchg
add
bound
out
inc
jae
xchg
push
ds
xchg
xchg
cmp
mov
loope
mov
add
inc
jno
xchg
cmp
adcb
inc
pushl
xchg
fsub
inc
jge
cmp
aam
or
inc
jnp
lock
dec
and
fcomp
daa
jns
lds
pop
xor
mov
and
idivl
inc
pop
daa
adc
ret
jge
xchg
cmp
pop
xor
lds
jns
call
pop
cld
inc
mov
mov
aad
ja
or
sub
mov
mov
aad
push
mov
or
cmc
adc
hlt
out
das
mov
in
inc
lea
testl
repz
jns
inc
fnstcw
push
test
jbe
in
aad
lcall
jle
rcr
sub
es
add
cltd
js
imul
ficomps
or
pusha
sbb
repnz
imul
imul
mov
ljmp
adc
sbb
insb
mov
fcoms
nop
mov
and
or
push
jae
lahf
jo
push
mov
mov
jecxz
cld
jo
push
dec
pop
push
loop
mov
movsb
cmp
sbb
mov
jns
adc
mov
cli
mov
pop
xor
sbb
push
jg
dec
or
loopne
push
dec
pop
mov
int
or
cmp
enter
push
fs
inc
adc
cmp
dec
xlat
pushw
or
add
add
jno
sub
dec
orb
push
sub
xlat
movsl
jae
adc
xchg
rcrl
or
out
inc
sub
jecxz
fbstp
fwait
movl
push
andb
xchg
mov
sbb
xchg
rorl
jp
aaa
cli
inc
vmovaps
and
pop
push
xlat
test
in
inc
clc
out
pusha
addr16
pusha
mov
arpl
add
pop
push
in
xchg
bound
cmpsl
dec
loopne
imul
or
xor
icebp
loope
addr16
add
call
cld
xchg
insb
mov
jecxz
dec
lcall
xlat
dec
or
dec
frstor
out
cmpsb
cmp
push
fsubl
sbb
or
aas
pop
or
pop
es
xchg
test
fidivs
cmp
and
iret
cli
and
pop
jg
jmp
in
sub
repnz
mov
sub
test
aaa
in
scas
mov
rorb
repnz
jge
pop
fcmovnbe
rcrl
loopne
cmc
out
fcom
add
out
pop
adc
lret
hlt
xchg
push
in
xor
jo
xor
xchg
push
add
push
fucomp
jo
cwtl
dec
dec
mov
cmc
push
fnstsw
and
push
or
and
movl
cs
and
je
adc
shrb
add
sub
jg
xorl
mov
mov
cmpsb
jl
aam
push
xchg
pop
mov
andl
jp
xor
dec
imul
jo
clc
jno
jl
frstor
dec
hlt
fistps
jg
jne
dec
fidivrs
pusha
xchg
dec
ljmp
outsb
add
vpsadbw
in
adc
scas
test
dec
arpl
inc
mov
cmpsb
or
mov
cmp
aad
xchg
sub
es
cs
sbb
ds
pop
sbb
mov
or
xchg
sub
ss
xor
adcl
out
pop
dec
inc
xchg
pop
sbb
xchg
fdivrs
xor
add
es
mov
adc
roll
je
test
cmp
dec
xor
lahf
int
dec
jo
outsl
jns
pop
mov
mov
sar
xlat
mov
addb
scas
cmp
in
and
jnp
jno
jl
hlt
ret
out
mov
in
add
adc
xor
je
outsl
int
and
xor
pop
pushw
pop
jb
sub
std
pushf
cmpsb
mov
in
arpl
xchg
inc
xor
fbstp
stos
cld
je
mov
nop
adc
inc
push
cwtl
packuswb
cmc
mov
xchg
push
jne
mov
rolb
sub
pop
cltd
inc
push
loope
pop
jae
lods
addr16
inc
mov
pop
je
or
in
fbld
or
inc
sbb
mov
subl
jnp
adc
xor
pop
xchg
adc
imul
daa
xlat
lret
dec
insb
xor
sub
aaa
mov
inc
xor
fcomps
lods
push
xorb
fadd
inc
push
loopne
cmp
stos
mov
jo
cmp
inc
add
adc
icebp
dec
daa
inc
cmp
mov
movsb
mov
scas
jmp
add
cmpsb
add
imull
push
fcmovnu
nop
pop
pop
popf
std
arpl
sti
mov
dec
fxam
mov
mov
loope
aad
xor
dec
pop
mov
ss
sub
test
jl
imul
xor
and
or
sbb
mov
jl
xlat
push
add
cmp
out
or
insb
xor
xor
negb
outsl
sar
or
lcall
sbb
mov
cmp
pop
jle
dec
pop
xlat
jae
rcl
call
lods
ljmp
aas
in
cmc
xchg
int
mov
imul
fnsave
inc
mov
ret
or
fldcw
mov
stc
jp
cmpsl
stc
arpl
mov
mov
inc
inc
ja
dec
jne
and
seto
add
cmp
mov
adc
mov
idivl
or
mov
das
subl
enter
pop
call
jge
adc
cld
pushf
mov
hlt
int3
jne
mov
adc
xchg
xchg
js
lods
je
adc
lock
sub
call
repz
adc
loopne
aaa
cmp
fimull
popf
mov
daa
stc
mov
movl
mov
xor
cmp
cld
adc
loope
testl
test
cmp
addb
jno
sub
cli
mov
mov
cwtl
aas
int3
mov
adc
xorl
imul
jo
dec
xchg
stos
mov
cli
fwait
inc
inc
xchg
mov
scas
xor
lcall
xchg
pop
leave
mov
mov
xor
adcb
negl
push
jge
pushf
pop
rolb
jp
std
aam
mov
add
mov
fwait
ljmp
js
cltd
add
push
arpl
fs
stc
js
scas
push
imul
addr16
std
imul
sarb
xor
or
mov
sub
test
adc
inc
orl
push
push
pop
jle
xchg
inc
je
lods
or
fcmove
mov
mov
mov
das
fcoms
mov
pop
adc
jo
nop
loope
inc
sbb
test
inc
mov
inc
aad
testl
xor
stos
test
scas
add
js
lods
sub
add
xor
cmp
adc
dec
cmp
idivb
aas
sbb
xor
xchg
jecxz
out
idivl
or
cmc
mov
outsl
sbbl
add
mov
test
xchg
test
out
add
loopne
clc
jecxz
and
cltd
push
dec
cmp
jge
inc
out
loope
mov
adc
mov
inc
inc
mov
fcmovu
sub
std
sbb
movsb
push
lds
lea
xor
inc
adcb
daa
xchg
and
es
std
sbb
ljmp
test
sub
jge
sub
pop
ret
leave
inc
cmpsl
pop
cmpsb
xchg
jmp
mov
pop
stc
jns
mov
xchg
leave
push
cli
pop
icebp
xchg
jl
dec
mov
pop
push
cmp
push
pop
decl
seto
stos
xor
outsb
xchg
pop
sub
or
dec
pop
in
mov
inc
push
shrl
mov
insl
fnstsw
xor
pop
and
and
inc
leave
add
add
lret
mov
dec
mov
adc
adc
test
inc
fdivr
cli
inc
enter
cwtl
js
add
fwait
sub
cld
sbb
pushf
inc
jle
inc
pop
jp
cmp
bswap
or
daa
mov
xor
rcrb
xor
mov
or
ja
mov
jbe
jp
xor
jo
repnz
dec
daa
inc
pop
xor
popa
in
mov
and
pop
xchg
mov
js
out
inc
mov
dec
push
add
mov
imul
sti
ud2
outsl
loop
lds
test
xchg
incb
cli
icebp
faddl
sbb
gs
xchg
jle
out
sub
mov
jns
dec
addl
sarl
mov
sub
sub
mov
out
mov
stos
inc
orl
scas
dec
xor
jl
lods
add
fisubrl
jmp
orb
push
xlat
inc
pushl
pop
pop
subb
xchg
imul
add
scas
cs
out
push
xchg
stos
sbb
adc
into
leave
mov
jle
adc
pop
adc
inc
inc
jae
xlat
shrb
push
out
adc
cwtl
pop
inc
shrb
jp
inc
test
out
enter
movsl
pop
and
mov
mov
xchg
jp
mov
stos
push
and
add
ja
xchg
in
jo
out
adc
insb
push
adc
into
arpl
cmp
leave
adc
ljmp
out
jge
or
sub
push
sti
mov
rcrl
fimull
mov
call
out
out
pop
loop
fistpll
out
jae
ret
mov
sub
add
add
and
cwtl
in
jg
xchg
mov
push
push
cmp
add
das
orl
cmc
mov
sbb
repnz
or
mov
jo
test
jns
push
ret
pop
lcall
dec
aaa
adc
mov
push
push
or
add
int3
jns
pop
and
jne
cmp
and
repnz
xchg
sahf
mov
shlb
inc
mov
cmp
das
push
loop
adc
add
mov
out
adc
xor
inc
fmull
and
mov
mov
or
push
push
jns
lods
cmp
aas
stos
jb
mov
lcall
scas
mov
push
mov
in
dec
aaa
lcall
pop
cmpb
adc
fistpl
out
sub
mov
dec
dec
and
mov
subb
add
pusha
out
xor
push
push
mov
int
and
aas
xchg
stc
movsb
add
enter
dec
iret
addl
push
outsl
lahf
pop
inc
inc
pop
xchg
xchg
in
addl
lahf
jmp
je
mov
push
sbb
dec
shl
sub
pop
stos
pop
faddl
push
shlb
mov
mov
jp
mov
movsl
sbbb
mov
mov
add
ret
aad
ficompl
xchg
pop
lods
addr16
push
mov
cmc
fcoms
scas
pop
mulps
mov
inc
jp
add
bnd
xchg
and
fcompl
test
scas
loopne
push
fwait
decb
sti
and
mov
pop
mov
outsb
movsb
mov
movsb
orb
aaa
jp
dec
mov
inc
pop
pop
adc
xchg
mov
shrb
mov
es
inc
ret
stos
mov
sub
subb
jecxz
loop
sbb
push
gs
stc
out
ljmp
into
dec
push
ljmp
adc
imul
jmp
sub
dec
add
inc
out
xor
jge
cmc
stos
aad
and
jge
sbb
xchg
stos
js
push
push
repz
addl
cmc
es
xchg
and
dec
out
jge
lcall
loop
cmp
mov
jg
aad
out
or
aas
bound
mov
std
xor
popf
mov
call
repz
lea
cmpsl
mov
and
sti
iret
and
aaa
jae
out
outsl
movsb
out
pop
xorl
mov
fst
dec
fwait
mov
adc
xor
mov
push
xchg
xor
mov
cmp
sbb
jp
sub
cmp
loopne
jae
xchg
sbb
xchg
mov
mov
ffree
je
lret
and
adc
cmp
hlt
aas
fistpl
mov
fmul
mov
addr16
mov
insb
push
mov
xchg
xor
adc
or
sahf
sbb
mov
call
inc
adc
mov
lcall
xchg
rolb
add
les
cld
in
dec
pusha
insb
mov
dec
out
cmp
mov
add
mov
je
pop
mov
mov
and
hlt
out
cmp
cmp
aad
sbb
mov
ja
jo
sub
lret
lods
dec
les
sbb
out
sub
push
orl
aaa
push
dec
shll
lods
fsubrl
xorl
roll
or
mov
popa
sbb
cwtl
mov
and
jae
mov
xchg
mov
push
mov
les
iret
inc
lods
ljmp
leave
xor
jge
sub
add
xor
and
and
ret
adc
mov
jne
je
nop
or
dec
stc
cmpsl
into
pop
je
movb
push
loope
sbb
add
mov
pop
addb
jmp
inc
imul
pop
aaa
je
inc
leave
stc
or
dec
inc
pop
aaa
in
push
int3
mov
nop
add
movb
jb
stos
into
inc
add
push
push
repz
cmp
in
and
xchg
push
sbb
out
mov
fdivr
inc
push
and
pushf
andb
jbe
nop
mov
inc
push
divb
lret
xchg
pop
or
stc
xchg
and
push
xchg
jl
ljmp
adc
pop
pop
jnp
repnz
xchg
xchg
in
adcl
mov
xchg
test
dec
test
inc
mov
mov
addl
lahf
push
pusha
paddd
lods
aas
sub
andb
repnz
in
pop
in
ds
sti
sub
mov
jns
xchg
outsl
call
arpl
popa
inc
imul
out
mov
bound
or
adc
bnd
call
stos
push
or
scas
cmp
inc
adc
lcall
mov
and
add
adc
fnsetpm(287
add
sub
repnz
int
cli
std
incl
push
ret
pop
sbb
adc
xchg
movsl
adc
sar
je
aad
divl
std
test
xor
ret
das
sub
add
cld
mov
aaa
dec
seto
cmpb
sbb
jle
pop
sub
add
push
pop
adc
cmp
lods
aad
push
and
inc
adc
xor
pop
push
pop
out
js
cmp
mov
mov
adc
pusha
pop
inc
lret
jns
xchg
pop
les
lea
shll
sahf
and
pop
aas
mov
dec
cli
push
sti
xchg
cmp
cmp
cmp
das
adc
jns
mov
test
rclb
outsb
push
cmp
nop
cmp
inc
push
and
out
aad
pushf
out
or
in
call
mov
inc
cwtl
cmp
xlat
xchg
xlat
sbb
les
xor
push
fsubs
adc
cmp
outsb
inc
fnstsw
mov
pop
or
idiv
inc
dec
cmc
nop
fbld
out
icebp
inc
xchg
dec
into
xchg
pop
fisubrl
push
sub
xlat
repz
fs
imul
inc
fidivs
test
push
ret
ljmp
sbb
arpl
or
dec
test
jns
xor
insl
loop
inc
inc
movsb
out
das
mov
xlat
repnz
cmp
cmc
bound
out
aas
mov
es
xor
int3
sbb
mov
je
pop
push
in
les
les
aas
or
adc
xchg
in
mov
icebp
fmuls
fsubrs
sub
movsb
add
pop
or
fcmove
lahf
sub
inc
inc
in
xchg
pop
cld
movsb
xchg
dec
jecxz
dec
pop
mull
mov
and
inc
ljmp
movsb
in
imul
aam
pop
cmp
xchg
stc
jl
push
cwtl
xor
jo
cmpl
lcall
popa
fwait
mov
js
ret
sub
imul
js
int3
jae
jno
aad
in
std
xchg
repz
daa
jle
enter
nop
xchg
bound
mov
movsl
sub
ljmp
stc
pop
leave
jge
xchg
push
xor
push
cwtl
mov
fnstsw
push
rcll
sub
and
push
add
sub
cmp
cs
sti
dec
movsb
clc
incl
imul
std
imull
mov
dec
das
call
insl
sbb
js
in
push
mov
dec
pop
dec
repz
mov
mov
movsb
xchg
sub
adc
pop
fcmovnb
in
and
sub
dec
popl
mov
mov
sarl
inc
imul
ds
movsb
dec
stos
lcall
dec
je
enter
xchg
dec
jmp
loop
shr
jl
fwait
push
iret
hlt
out
es
or
fidivrl
hlt
push
test
mov
mov
int3
pop
mov
es
clc
mov
mov
mov
aas
inc
mov
mov
in
and
sbb
lea
movsb
leave
cmp
add
xor
or
mov
pop
jo
mov
xchg
outsl
loop
mov
xchg
inc
stc
adc
lea
cld
jg
sbbb
jecxz
movsl
xor
aaa
adcl
stc
cmp
jns
fcom
and
sub
ret
mov
cmp
call
mov
jp
add
shlb
jp
sbb
idiv
subl
dec
add
imul
insb
je
lock
pusha
mov
aaa
adc
xor
in
or
repnz
cmp
testb
inc
sub
inc
repnz
pop
dec
bound
inc
mov
out
sub
hlt
arpl
movsb
cltd
ds
out
push
daa
mov
mov
mov
out
lock
mov
std
add
jo
shlb
add
and
cmpsb
in
and
xchg
in
mov
out
ret
daa
pop
inc
push
cmc
jp
or
mov
fnsave
je
add
add
movb
roll
lock
jno
dec
mov
push
jbe
pop
addr16
mov
jnp
dec
pop
daa
repnz
sahf
sub
in
mov
add
jmp
movsb
xchg
jle
filds
in
imul
or
and
nop
inc
xchg
jl
mov
lds
pop
and
push
sahf
aad
mov
mov
cltd
in
or
cmp
and
out
lods
push
mov
mov
pop
mov
adc
insl
mov
cmpsb
mov
call
and
xchg
lods
imul
push
jo
jmp
jge
mov
jo
fbld
jnp
mov
mov
jl
mov
inc
jp
sub
and
cmp
flds
movsl
fcmovbe
loopne
mov
mov
push
jne
roll
mov
push
in
in
jb
pop
out
idivb
test
push
cmp
enter
fsts
lret
mov
xchg
jns,pn
mov
movsl
cwtl
daa
xchg
fcompl
mov
dec
pop
mov
dec
cmp
mov
shll
jae
adc
jne
inc
pop
add
lea
and
cmc
cwtl
or
mov
xor
dec
dec
stos
pop
cmp
pop
mov
and
outsb
and
imul
cmp
inc
in
or
mov
jbe
inc
movsl
mov
addr16
out
stc
clc
mov
xor
and
sub
rcr
push
mov
mov
test
mov
jg
jbe
jno
daa
cld
dec
imul
xor
sti
mov
dec
dec
pop
mov
stos
xlat
incl
out
dec
mov
roll
xchg
jne
or
and
scas
dec
inc
daa
jmp
addb
mov
jmp
or
inc
bound
xor
dec
js
sbb
and
xchg
outsl
popa
insl
sub
mov
jecxz
xchg
clc
outsb
push
push
aas
mov
inc
pop
aam
lock
and
lods
or
and
jp
jmp
outsb
cmp
xor
das
xor
ljmp
cmp
ljmp
out
add
lahf
cmp
stos
mov
push
and
mov
inc
mov
push
popf
push
mov
and
rorl
mov
or
jmp
inc
out
rcrb
inc
mov
out
mov
cli
mov
aas
out
xchg
shl
lock
lahf
les
repnz
jmp
sub
mov
call
mov
adc
xor
dec
cmp
sti
inc
pop
iret
call
fucomp
rclb
loopne
xor
add
jmp
or
stc
fsubr
shl
mov
loop
out
ljmp
fs
sahf
iret
dec
jns
jb
call
scas
scas
test
dec
xlat
ljmp
push
cs
adc
push
and
enter
xor
out
test
mov
inc
add
push
mov
sti
add
jmp
xchg
pop
fists
cmp
ljmp
jae,pn
mov
inc
or
jno
xor
enter
scas
gs
mov
jl
mov
push
cltd
cltd
cmp
jae
popa
sarb
shr
push
push
cs
push
adc
clc
fmull
ljmp
hlt
test
mov
push
shll
inc
inc
jbe
mov
mov
inc
das
xor
jecxz
add
ret
mov
insb
dec
mov
jl
imul
dec
mov
std
arpl
and
inc
cmp
test
xlat
mov
xchg
xor
sub
cmp
mov
and
out
sti
mov
repz
push
std
aas
adc
stos
ljmp
push
rolb
fidivs
in
jo
je
ror
inc
mov
mov
xchg
push
push
mov
jp
daa
dec
inc
push
push
jp
xchg
les
mov
scas
sbb
pop
or
mov
xlat
jp
out
or
xor
std
mov
test
push
in
lods
mov
cltd
push
stos
into
push
pop
add
fmull
xchg
es
roll
movsl
jl
scas
mov
testb
mov
add
popa
mov
mov
jns
into
cmpsb
xor
in
fldenv
mov
mov
cmp
adc
add
shlb
int
lret
gs
pop
pop
scas
jp
test
stos
jge
mov
in
adc
mov
add
sti
dec
sub
pop
mov
fcmovu
jge
add
fcmovb
insb
jge
push
push
and
ljmp
xchg
fsubr
ss
hlt
rcrl
push
es
jae
int3
movsb
les
jb
jns
mov
ffreep
dec
mov
cmp
aaa
ds
lcall
stc
jae
pf2id
xchg
xor
insb
mov
sub
add
add
pop
out
in
aad
lret
int
movsb
xchg
outsl
sbb
imul
xor
mov
pop
imul
ljmp
or
mov
outsb
xor
cs
inc
mov
inc
inc
dec
fisttpll
mov
mov
test
negl
jge
xchg
ds
fcoml
push
call
out
pop
jne
jae
test
inc
pop
pop
push
test
jno
mov
xlat
addr16
mov
inc
out
push
sbb
pop
clc
adc
jg
dec
xor
syscall
mov
stos
ds
xor
lock
lcall
adc
lock
push
icebp
das
subb
push
jns
loope
pop
push
dec
stc
movsl
shll
pop
and
call
outsb
in
cltd
jge
cmp
mov
sub
shl
bound
imul
je
imul
cmpl
mov
lock
jle
sub
cmp
and
es
imul
push
test
jo
into
push
mov
not
xor
jnp
sub
add
dec
mov
add
and
xor
dec
inc
jmp
and
out
adc
fbstp
jp
fnsave
mov
repz
flds
inc
sar
sbb
repnz
fiaddl
hlt
sti
add
mov
cmp
mov
sti
add
push
loope
dec
sub
cmp
mov
cmc
cmp
push
out
jmp
mov
mulb
jge
xor
inc
mov
mov
push
fdivl
imul
mov
insl
inc
sub
imul
not
cs
fiadds
in
add
jecxz
push
insl
imul
dec
fisttpll
xchg
xchg
lock
je
cmp
cmp
cmp
mov
push
cld
or
lods
inc
rcrl
repz
iret
sti
loope
or
jnp
rorb
jo
xchg
daa
and
insb
dec
jge
push
repz
scas
xor
adc
lahf
jg
ret
and
fcomps
pop
imul
sub
arpl
dec
aaa
loope
test
mov
add
dec
cltd
dec
jp
inc
out
and
and
out
sahf
enter
icebp
inc
not
jp
pop
sahf
stc
out
mov
lds
inc
cmc
lret
inc
pause
and
sbb
rdtsc
add
jg
pop
fadds
fs
dec
cltd
test
jbe
mov
mov
push
dec
and
sub
cld
cmpsl
mov
xchg
lock
xchg
mov
cmp
cmpsl
xchg
dec
cltd
push
add
lock
sti
dec
cmp
scas
shrb
jns
sbb
cli
xchg
movsb
mov
cwtl
mov
popf
std
sub
inc
fdivr
inc
push
adc
jp
adc
jb
xor
iret
xor
xor
bound
jp
rorb
rorb
sti
xchg
pop
and
test
loop
xor
mov
popa
xlat
xchg
lds
roll
add
in
aas
insl
call
movsw
fmul
cltd
adc
cmp
jne
add
data16
jmp
mov
cmpsb
arpl
adc
negl
clc
or
dec
xchg
xchg
push
andb
nop
outsb
jb
mov
mov
xor
mov
and
jbe
cli
int3
fwait
and
xchg
add
push
mov
xlat
dec
push
jne
aad
add
hlt
dec
arpl
aam
push
mov
or
lahf
sbb
test
aaa
movsb
mov
lfs
adc
pop
cld
or
or
and
adc
jge
inc
adc
xlat
xor
push
and
and
insl
subb
xchg
pop
sub
dec
stos
pop
in
gs
push
loope
pop
fisttpl
push
mov
and
mov
cmc
bound
std
or
sub
test
mov
sbb
sti
xor
aas
push
cmpsl
jecxz
pop
and
xor
dec
or
in
shl
mov
mov
jl
sti
mov
jge
mov
ret
sahf
push
test
rcl
jno
js
out
push
sub
btc
or
in
add
pop
sub
push
sub
push
lcall
pop
sbb
sti
sbb
sbbl
rclb
arpl
mov
sub
in
pop
pop
leave
xchg
loope
fcomip
mov
in
pop
jae,pn
mov
and
pop
dec
sbbl
iret
orb
icebp
mov
jo
sub
dec
xchg
add
call
inc
js
push
or
mov
fdivs
roll
xlat
jmp
cmpsb
cltd
ss
cwtl
fiaddl
dec
xchg
dec
xchg
orb
xchg
setnp
mov
mov
mov
or
push
cmc
test
add
mov
hlt
gs
and
lock
lret
gs
lock
jmp
or
ret
inc
adc
pusha
cmp
adc
fwait
inc
hlt
idiv
push
push
pop
cli
out
into
mov
jbe
sbb
test
es
dec
pop
sbb
push
push
aaa
xor
add
lret
and
xchg
mov
mov
sub
rol
cmpsl
sahf
call
jbe
add
inc
data16
mov
jb
shll
scas
iret
adc
inc
pop
test
adc
mov
js
xchg
mov
push
xchg
sub
inc
and
out
out
push
and
bound
pop
sbb
insb
mov
jb
adcl
roll
add
sbb
or
adc
ret
sbb
cmpsb
leave
add
les
push
cmpb
jae
mov
and
mov
int
cmp
pop
sarl
out
js
adc
movsb
push
xchg
mov
adc
cwtl
mov
mov
ficompl
push
test
movsb
fbld
push
add
andb
leave
mov
pop
jl
out
inc
and
jge
adc
cltd
sub
dec
push
cmp
sar
inc
cwtl
jp
xor
add
das
dec
test
xchg
mov
rcrb
pop
sbbl
mov
mov
fistpll
sub
test
push
dec
fucomp
cmp
int3
mov
fisttpl
add
sub
jb
mov
imul
or
arpl
loope
jno
fists
mov
and
cmp
outsl
mov
xchg
mov
add
movsb
pushf
shl
push
inc
cmp
stos
add
jge
pop
and
xchg
mov
pop
xchg
adc
and
mov
pop
add
popa
mov
and
dec
lcall
mov
in
adc
dec
mov
rolb
pop
add
xor
push
mov
jp
mov
cmpsb
and
idiv
adc
data16
shlb
mov
xchg
jne
icebp
mul
fimuls
adc
push
pop
bnd
shrl
add
test
mull
dec
stc
lods
shll
xchg
repz
hlt
sti
pop
push
cmp
outsb
push
adc
cwtl
andl
sbb
les
adc
add
test
roll
in
out
mov
jo
jecxz
movsb
imul
xchg
cmp
mov
push
jp
mov
sub
push
mov
stos
mov
out
jge
add
sbb
pop
push
dec
push
pop
pop
mov
or
lock
push
or
inc
mov
sbb
addr16
mov
jl
adc
movsl
push
loop
push
xor
repnz
and
ret
mov
add
and
frstor
cmp
sbb
out
sbb
lods
ret
movsl
out
mov
inc
clc
jno
test
push
cmp
adcb
add
repnz
push
aaa
add
rcr
sbb
mov
imul
movsb
sub
adc
add
inc
mov
loopne
call
jbe
mov
jmp
addr16
dec
cmc
imull
pop
jp
xorl
mov
cmp
jmp
xorl
fnsetpm(287
adc
fisttps
adc
or
cld
daa
xchg
pop
gs
sub
fsubrs
imul
cmp
ret
xchg
cmp
push
repnz
cs
push
dec
fwait
xchg
pop
popf
mov
jge
ret
sbb
pop
data16
scas
inc
mov
or
adc
aas
rorl
inc
pop
aas
clc
xchg
mov
mov
ss
mov
imul
jne
sub
cmpsb
les
stc
pop
out
and
inc
out
add
and
leave
jge
js
imul
and
add
xchg
std
idiv
testb
cmc
imul
pop
inc
cmp
jne
shll
cmp
lods
sbbb
mov
dec
push
gs
add
je
or
mov
aad
call
mov
adc
cmp
lret
lret
das
mov
in
aas
lock
add
push
push
fsubr
cmp
repz
fnstsw
ljmp
ret
mov
adc
inc
addr16
or
cld
pop
jno
and
imul
inc
xchg
ja
adcb
pop
pop
sbb
xor
adc
outsb
xchg
pop
mov
cmc
outsl
js
fisttpl
lahf
enter
aad
xchg
sub
pop
and
dec
cmpb
mov
js
fistpl
or
and
mov
repnz
cli
data16
inc
ret
rorl
push
xchg
dec
xorl
adc
add
pop
pop
adc
data16
sub
xchg
repnz
adc
mov
xchg
mov
sbb
xchg
xchg
add
in
dec
and
xor
icebp
xor
aas
jo
repnz
data16
or
sbb
incb
adc
adc
xchg
daa
cmp
and
jg
push
inc
test
mov
xchg
enter
adc
fbld
dec
push
inc
cmpsb
or
lods
gs
iret
out
imul
sub
jp
test
popf
or
push
mov
jo
fdivrs
fildl
dec
and
sbb
test
mov
and
dec
push
mov
sub
lock
ljmp
cmp
or
lcall
in
pop
stos
pushl
jb
repz
push
mov
in
rcrl
shr
imulb
jb
push
inc
xor
xor
xor
imul
cwtl
pop
dec
notl
in
gs
enter
sti
arpl
repnz
loop
cs
add
push
push
inc
stos
cwtl
nop
in
cmc
into
push
shll
scas
scas
ja
hlt
mov
lds
or
pop
pop
lret
lock
push
fadds
add
pop
ret
imul
out
loop
mov
sub
cmp
ja
stos
fs
push
out
out
mov
push
in
push
rsm
les
pop
push
outsb
xchg
lods
xor
je
inc
stos
clc
adc
mov
sub
pop
outsl
insb
sti
sub
push
insb
cmp
mov
push
rcrb
sub
add
outsl
push
je
inc
rcll
test
push
pop
xor
xor
jmp
inc
and
sub
clc
int3
loope
jmp
mov
pop
into
movsb
cli
add
adc
pop
mov
pop
or
aas
ljmp
cli
xor
xor
jg
add
cld
cmp
xor
push
mov
add
fsubrs
fs
std
in
sbb
ljmp
ja
adc
adc
mov
and
pop
lods
roll
add
out
sbb
dec
cltd
mov
xchg
gs
push
loop
cmp
out
lds
mov
dec
incb
cmc
and
nop
bound
in
xor
jb
out
inc
loopne
fs
inc
in
lahf
fs
cmp
lea
out
fwait
jne
or
sub
aaa
add
mov
cmp
es
push
sti
in
xor
sti
shlb
imul
je
ja
cwtl
sub
inc
cmpsb
imul
xchg
xlat
pop
std
add
shl
or
jo
mov
imul
enter
mov
daa
ljmp
xchg
ds
add
add
rorl
shrl
enter
adc
sbb
test
leave
push
rcl
outsb
bound
add
cmpsl
popa
sub
lods
xchg
mov
inc
les
cmpb
enter
sbb
mov
xor
cmp
jp
xor
mov
sbb
cmp
rep
xor
mov
xor
movsb
adc
jbe
lahf
ljmp
inc
mov
popa
and
cld
or
and
out
cmc
fdivrs
ljmp
out
mov
mov
cli
std
mov
fcoms
xor
leave
sbb
inc
xchg
mov
mov
outsb
cld
adc
aam
arpl
daa
xchg
inc
pop
cmp
js
lcall
pop
test
sbb
daa
mov
in
fucomi
add
imul
cmpb
clc
pop
mov
aaa
ds
sub
add
xlat
xor
fdivs
dec
in
cld
arpl
push
push
lods
imul
add
movsb
jmp
mov
je
imul
dec
pop
pop
and
mov
rorb
popa
push
int
push
mov
repnz
add
mov
jmp
lret
loope
cmp
adc
push
stos
inc
add
pop
aad
jg
in
sbb
in
or
imul
fs
rolb
and
mov
stc
jmp
push
mov
inc
sub
test
inc
out
inc
mov
push
imul
lret
dec
scas
dec
and
andb
mov
mov
pusha
cmpsl
push
pop
cmp
cmp
aas
lods
mov
and
pop
dec
mov
xor
rcrl
add
dec
and
push
repz
sar
cli
ror
hlt
jb
mov
mov
sarb
jp
sub
fsubrs
mov
cmc
adcl
in
sub
pop
call
push
mov
mov
inc
push
pop
idivl
and
ljmp
jnp
out
sbbl
xchg
adc
sti
push
into
rcll
aaa
insl
fwait
fs
pop
clc
out
mov
push
adc
stc
inc
adc
adc
xor
inc
in
inc
pop
lcall
popf
sub
xlat
aad
aaa
rorb
mov
cwtl
adc
pop
faddp
jbe
sub
pop
pop
jae
pop
push
sbb
lea
popf
and
add
add
sbb
test
mov
pop
or
ljmp
out
je
xchg
inc
add
push
mov
and
or
fldt
jo
out
repz
lea
xor
imul
arpl
sub
push
add
outsb
cmp
ret
sub
stos
dec
cmp
sub
push
cli
jae
stc
pop
add
pushf
push
arpl
cld
add
in
fldcw
mov
rclb
shlb
push
mov
shll
mov
cmpb
movsl
push
aaa
xchg
lcall
rcr
bound
mov
cltd
lods
arpl
jbe
add
addr16
jae
test
test
rcrb
adc
mov
dec
xor
mov
sbb
inc
bound
in
add
shrb
je
xchg
pop
cmpsb
pop
mov
jmp
xchg
push
sbb
rorl
mov
cmp
lods
shrb
jno
xor
dec
inc
out
push
fnsave
xchg
mul
xchg
sub
test
in
sbb
les
sub
adc
mov
cmp
dec
and
lea
incb
pop
add
pop
popa
adc
xchg
repnz
add
cltd
out
push
fdivs
fsub
add
add
and
pop
jae
xorb
outsb
icebp
push
cmp
push
js
pop
sbb
sti
js
clc
cwtl
lds
mov
adc
or
pop
addl
test
mov
mov
and
pop
jne
cmp
test
mov
adc
sbb
add
add
stc
push
push
in
sbb
sbb
jb
cs
cmpb
mov
xchg
lods
push
imul
jo
das
sbb
flds
ret
rolb
enter
jmp
push
xor
xor
call
lahf
lock
mov
and
push
mov
cmp
sub
ret
cld
shll
mov
sub
adc
test
into
enter
pushf
dec
pop
arpl
pop
push
fnstsw
ja
cmp
cmpsl
cmp
jnp
movsl
sbb
dec
idiv
dec
xchg
sti
jo
lea
add
xchg
fs
fsubs
test
xchg
popf
dec
mov
outsb
mov
inc
into
rclb
mov
ja
repnz
lods
and
out
pop
cwtl
or
sub
jge
sub
xchg
pop
push
ret
and
add
add
mov
dec
inc
test
mov
mov
clc
and
inc
xchg
inc
fildl
inc
in
sub
out
cmp
icebp
sbb
repz
jae
jle
push
xchg
fistpll
jmp
push
ret
pop
pop
iret
loopne
push
xor
mov
pop
negl
clc
lds
mov
or
inc
adc
pop
or
fildll
popa
mov
fwait
jne
cs
cmp
hlt
ljmp
popf
scas
loopne
test
test
push
aaa
jb
jle
sbbl
add
xchg
ficoms
dec
lock
push
push
sub
push
lock
and
cld
xchg
arpl
push
pusha
jb
out
mov
push
pop
jecxz
repz
out
movsl
xor
mov
mov
clc
test
lret
arpl
pop
xor
dec
xchg
mov
pop
shl
notl
xlat
outsl
xchg
xchg
pop
add
pop
mov
int3
in
add
fadds
lods
ja
adc
sbb
pop
movl
out
dec
fnstsw
movsl
ljmp
sbb
scas
lock
or
bound
mov
add
inc
cmp
fdiv
xor
jno
mov
pop
inc
call
sub
es
popf
xor
mov
les
xchg
and
inc
mov
cmp
ljmp
xchg
out
xchg
xchg
pop
push
fmull
call
inc
jae
stos
sarl
mov
aas
sahf
cltd
push
mov
cmp
pop
adc
sub
xor
sub
inc
mov
fcmovbe
mov
pop
push
lahf
cmc
inc
sub
outsl
push
dec
andb
loope
ljmp
sbb
sub
add
cwtl
loope
jp
dec
and
in
mov
sbb
loope
or
pop
add
and
sub
xor
out
sub
es
pop
gs
adc
jge
adc
adc
cmp
clc
iret
push
ss
pop
das
mov
push
mov
loopne
mov
xor
mov
add
mov
test
div
lret
mov
mov
jg
ficoml
mov
out
xchg
mov
mov
scas
maskmovq
pop
push
cmp
push
fst
jbe
sbbb
cltd
fimull
into
mov
cmp
sbb
xchg
and
mov
xor
jge
stos
lods
pop
pop
sarb
or
shrb
push
inc
scas
int
mov
add
adc
pop
orl
int
or
cmc
mov
xchg
pop
in
ret
aaa
inc
clc
aam
loopne
push
jb
movsb
popf
add
sti
ss
fisttpl
cwtl
pop
inc
fiaddl
inc
dec
xor
lds
cmc
and
xchg
inc
adc
int
cmp
jae
add
cmpsl
adc
xchg
repnz
xchg
ror
data16
aam
and
jo
or
hlt
sub
dec
stc
or
repnz
in
sbbl
ret
imul
leave
push
addr16
pushl
jns
das
push
xor
fdivrs
rclb
add
xchg
outsl
push
test
idivb
pop
shl
jb
mov
sub
fisubrl
fisttpl
adc
enter
test
movsl
xchg
sbb
push
fdivrs
sbb
xchg
adc
pop
daa
out
repnz
lret
mov
loop
rcll
movsb
pop
into
dec
push
mov
sbbb
mov
clc
mov
mov
mov
enter
sub
sti
mov
imul
xor
and
repnz
cmpsl
jo
add
xchg
mov
out
adc
mov
fs
mov
hlt
dec
adc
cs
sub
jge
in
popa
das
mov
das
push
pop
loope
dec
out
dec
dec
mov
repnz
out
and
dec
add
scas
xchg
lret
push
fnsave
in
icebp
mov
add
mov
xchg
mov
and
cmp
cmp
add
sbb
add
pop
jo
sbb
lods
mov
mov
push
dec
and
mov
xchg
movsb
xor
sbb
leave
fstpt
test
adc
lret
or
rcrb
sub
ret
cltd
pop
pop
sbb
fsubl
inc
jne
mov
mov
mov
push
pop
fbld
mov
fdiv
aaa
outsb
subl
push
lods
pop
addr16
mov
sub
popa
jmp
cld
inc
sub
rcl
popw
adc
insb
or
jle
out
xchg
stos
xor
cs
inc
push
shlb
sub
cmp
pushf
xor
stos
inc
and
mov
xchg
mov
arpl
imul
xlat
sahf
lahf
flds
iret
test
cmpsb
mov
test
ja
pop
add
stos
lret
add
xchg
movsl
std
push
dec
repz
loopne
insb
pop
or
xchg
sub
lret
pushf
sahf
cli
adc
sub
xchg
sahf
insb
jg
sub
xlat
shrl
push
push
push
xor
push
movsb
repnz
or
xor
xchg
inc
add
jp
ja
mov
movl
jb
in
inc
sbb
inc
mov
dec
inc
test
xor
lods
rcrl
fwait
lea
add
sti
js
and
std
push
mov
cltd
pushf
es
int3
addr16
push
out
sbb
hlt
icebp
push
mov
pushf
mov
and
jnp
add
pop
jmp
inc
std
subb
sbb
pop
or
aad
rclb
or
sbbb
hlt
dec
jge
ret
insl
push
addb
mov
inc
data16
mov
gs
and
adc
je
cmp
and
and
inc
shll
mov
or
icebp
or
mov
stos
pop
dec
sbb
cmpsb
pop
push
nop
repnz
es
ret
lahf
sahf
test
xor
cmp
add
dec
call
popf
mov
mov
aaa
jno
gs
inc
movsl
pop
pushf
lds
fwait
xchg
mov
adc
and
adc
lcall
jp
cmpsl
sub
jl
test
jnp
fcmovbe
stc
dec
inc
stos
lds
gs
testl
inc
dec
xchg
mov
fbld
stos
test
adc
or
in
jmp
inc
and
aaa
loop
mov
in
cmpsl
inc
rolb
cmp
mov
rolb
jb
sbb
push
aam
add
dec
fcmovbe
ss
ss
jge
push
add
xchg
in
mov
xchg
sbb
sub
adc
jmp
pop
in
inc
cmpsb
adc
or
into
xchg
popf
aam
jb
adc
ja
scas
mov
test
shll
loop
mov
dec
movsb
lahf
dec
daa
test
xor
movsl
jecxz
jne
rcll
inc
or
jo
cld
inc
sub
jb
test
ja
mov
adc
add
cli
lock
mov
call
mov
xchg
xor
lcall
xchg
push
jge
push
sbb
sub
jbe
addr16
mov
mov
ds
ss
or
repz
sarb
push
addr16
in
shr
in
hlt
and
cwtl
adc
mov
sbb
bound
js
sbb
sbb
cmp
adc
cmp
adc
push
scas
test
fdivl
ljmp
mov
push
mov
dec
xchg
push
testb
in
xor
inc
inc
test
jg
mov
add
int3
cld
or
shlb
adc
cmpsb
inc
dec
cmc
xor
mov
sub
loopne
xchg
sbbl
adc
loopne
aad
mov
aaa
jae
idivb
enter
pop
fucomi
xchg
leave
sbb
or
push
dec
and
cmc
cmc
mov
lahf
mov
add
mov
stc
nop
pop
out
pop
mov
jno
cmp
daa
push
push
xchg
jp
sbb
sahf
and
adc
mov
fisttpll
mov
imulb
mov
loopne
adc
fistpll
mov
push
out
stos
dec
sbb
adc
pushf
jbe
ret
dec
cs
xor
push
inc
pop
fisubl
xor
ja
mov
adc
cwtl
xchg
xchg
cld
enter
jp
push
push
dec
fldt
mov
fimull
pop
imul
jo
cmp
push
and
cwtl
inc
pop
add
lods
subb
sti
jg
jns
fidivrl
fwait
out
inc
cmp
adc
stos
mov
xchg
fcomps
mov
clc
jge
sahf
adc
sub
rolb
xchg
fsubrs
jne
fwait
xchg
and
hlt
xchg
lret
mov
inc
fwait
sub
adc
sbb
lret
sbb
mov
lods
mov
cmp
mov
cld
add
inc
dec
cmp
push
arpl
pushf
fnstsw
call
nop
push
xchg
mov
add
add
sbb
pop
xor
push
or
jg
lret
push
jecxz
insl
leave
mov
sbb
nop
dec
and
js
test
jns
mov
and
sbb
lock
div
dec
out
jp,pt
filds
lea
mov
cld
xchg
add
mov
xor
xor
pop
out
ret
mov
flds
or
xchg
scas
pusha
cli
cli
nop
jne
lds
jbe
mov
nop
fisttpl
or
repnz
push
cmpl
inc
and
lret
mov
inc
add
lret
xor
adc
mov
sbb
mov
repz
outsb
leave
inc
xor
mov
fwait
mov
js
repz
js
and
aad
int
test
adc
fists
cwtl
lea
sub
je,pt
mov
testb
xlat
arpl
xor
dec
fdiv
push
jae
cmp
sub
inc
add
fidivrl
loopne
jle
sbb
inc
mov
xchg
inc
or
xor
aad
push
stos
fistpll
sub
sub
xor
and
nop
xor
xlat
ficoml
aam
cmp
imul
add
in
test
inc
sub
repnz
das
mov
inc
js
mov
clc
push
outsb
and
push
mov
testb
pop
and
mov
or
add
dec
pop
and
out
xchg
pop
xchg
fdiv
cli
dec
dec
mov
pop
rcrb
cmp
shlb
xchg
mov
movsl
xor
out
cli
gs
repz
push
hlt
test
repz
icebp
or
xor
mov
mov
dec
inc
mul
daa
loope
test
push
cld
call
lcall
pop
fwait
inc
or
testb
add
mov
fs
test
cmp
or
add
mov
repnz
lods
and
xchg
stc
xchg
and
ret
jns
mov
add
push
push
cmp
lods
insb
pusha
push
jne
sti
inc
pop
jo
inc
dec
lea
ds
inc
pop
call
sbb
xchg
cmpsb
adc
cwtl
cltd
fcmovnu
xchg
add
sub
push
repnz
cmp
in
lds
mov
xor
jmp
cwtl
inc
sti
inc
stos
dec
repnz
addb
pop
ds
xor
mov
lcall
sbb
jb
gs
dec
sbb
lcall
mov
test
cmp
in
adcb
jmp
movl
arpl
cli
cld
hlt
pop
cmpsb
mov
jne
pushf
cltd
popf
xchg
rcrb
movsl
int3
add
pop
jb
or
add
sbb
cmp
jo
jnp
jnp
das
and
push
jbe
das
bound
in
xlat
sub
adc
aaa
into
add
ja
cmp
aaa
fisubl
jae
insl
hlt
adc
mov
sbb
push
inc
jp
jno
popa
std
test
pop
aam
adc
add
test
jg
xchg
testb
pop
push
jnp
insb
or
pusha
arpl
fistpll
jbe
push
sub
cmpsl
je
add
and
rorl
jmp
je
mov
fisubs
jmp
clc
jno
outsb
test
ljmp
push
mov
fists
xchg
scas
xor
lea
cmpsb
leave
sbbl
jae
xor
mov
or
mov
rolb
adc
mov
adc
add
push
push
jno
negb
xchg
xlat
fwait
jb
pop
xor
in
ljmp
in
nop
lahf
les
mov
inc
test
inc
movsl
fidivrl
addb
je
fs
cld
outsb
or
hlt
push
lret
aam
add
in
jl
cmp
fiadds
sbb
ljmp
out
add
roll
jp
jmp
jbe
pop
jnp
adc
or
in
outsb
and
out
mov
mov
repz
adc
or
shrb
jl
imul
adcb
into
fldcw
add
or
cmp
mov
jp
mov
xchg
inc
sub
fucomp
xor
cmpsb
push
stos
sub
and
push
in
in
mov
or
or
dec
dec
jge
sbbb
cltd
dec
data16
stc
mov
mov
dec
sbb
xchg
inc
out
pop
arpl
jae
incb
mov
xchg
ret
push
cmp
mov
and
adc
pop
mov
mov
xchg
ficompl
xorb
inc
pop
lods
cmp
cld
gs
lret
mov
xor
push
add
mov
push
sbb
push
scas
ja
sub
dec
jl
nop
insb
movsl
clc
add
ret
cld
sub
cmc
dec
sub
sub
push
loope
jl
mov
loopw
mov
addl
mov
add
mov
sub
mov
repnz
pop
cmp
outsl
pop
adc
cmc
mov
add
pop
and
mov
gs
pop
pop
and
inc
lods
or
fadd
nop
in
xor
push
and
lods
fidivrl
pusha
test
jl
xchg
je
xchg
out
adc
cli
sub
cmp
fcmovu
cltd
js
jl
mov
es
pop
loope
sbb
mov
loopne
popa
xchg
adc
loope
or
sbb
jns
jne
rcrl
fcom
pop
ret
in
push
daa
xorb
mov
icebp
ljmp
loopne
repz
scas
ror
adc
cmpsl
pop
mov
pop
pop
fistl
or
push
inc
lods
pop
sub
imul
pusha
or
mov
mov
inc
mov
addr16
sub
adcl
scas
jg
cmp
and
mov
adc
dec
xorl
fnstcw
adc
test
in
test
mov
dec
jns
adc
pop
mov
data16
cmpsb
pop
adc
push
sahf
into
mov
push
pop
push
adc
inc
sbb
aad
sbb
imul
mov
test
imul
push
ja
popa
insl
or
in
mov
cmpsl
rcll
jg
cmp
stc
push
fcoms
loop
shl
dec
xchg
xor
sti
jo
push
sti
push
mov
in
and
hlt
pop
adc
jnp
arpl
insb
mov
xchg
setns
xchg
push
aas
out
or
cltd
cli
out
aas
push
mov
cmc
icebp
pop
or
xlat
push
cli
mov
lcall
inc
fstpt
mov
aas
mov
push
fadds
call
jns
mov
int
adc
cli
das
lods
adcl
xchg
inc
pop
add
es
out
mov
or
add
jle
ja
jg
pop
pop
loop
pop
clc
lds
xchg
push
adc
ret
pop
add
push
aas
stos
add
jae
cmp
call
stos
push
push
xor
sbb
cmp
aaa
push
ss
stos
mov
sub
rorl
push
notl
mov
popf
cs
dec
sub
imul
addr16
and
pop
xchg
inc
hlt
mov
and
add
or
das
repnz
dec
push
xor
jae
push
orl
push
ret
cmp
rcrb
int3
sub
pop
out
call
es
sbb
mov
mov
incl
mov
nop
cwtl
hlt
add
push
addr16
add
adc
mov
stos
push
and
inc
aam
in
or
mov
sbb
andl
or
loop
lea
fbstp
fs
fwait
test
dec
push
add
cwtl
mov
inc
inc
int3
divb
mov
mov
add
rorb
les
imul
rcl
xor
pop
pop
fsubs
push
dec
xor
push
out
jecxz
mov
and
outsb
push
test
mov
outsl
inc
xchg
xchg
test
mov
add
pop
cli
push
pop
rcrl
fiadds
jge
inc
pop
inc
pop
stos
cmp
dec
adc
shl
xor
lock
or
adc
hlt
lcall
js
cmc
pop
cwtl
cmpsb
mov
lret
push
filds
fsub
inc
inc
jno
ret
js
out
mov
movb
cmp
cmp
repnz
arpl
xchg
cmpsl
nop
mov
sub
dec
int3
stos
ja
xchg
sub
mov
pushf
call
out
sub
pop
dec
dec
inc
sti
in
aas
push
iret
mov
xchg
xor
ret
lods
inc
cld
mov
xlat
pusha
or
popf
repnz
das
cmpsl
das
inc
je
cmpb
adc
push
push
dec
inc
pop
pop
xchg
and
mov
dec
xchg
js
jbe
rclb
adc
push
fmull
es
xchg
jp
outsb
jo
xorl
add
incb
fs
faddp
ss
or
pop
cld
ds
cmp
xlat
jge
jmp
and
add
mov
push
jbe
pop
dec
in
lcall
push
out
and
fsubrp
push
sbb
and
fdivl
sub
dec
jp
or
inc
lahf
fisttpl
jns
mov
dec
inc
repz
lret
data16
lahf
cli
sbb
inc
mov
sub
int
or
cmp
test
adc
dec
sbb
mov
push
scas
and
in
lret
data16
or
and
push
or
pop
dec
pop
inc
hlt
push
fistps
fdivrs
jge
leave
sbb
fdivrl
sbb
jecxz
mov
out
dec
xor
xchg
pop
xchg
push
lock
fcomps
xor
pop
jb
pop
pop
inc
data16
cmp
arpl
mov
inc
jl
dec
pop
lock
or
outsb
add
bnd
add
fs
add
add
popl
xchg
jno
into
shll
push
mov
cmp
fisttps
scas
mov
xor
movsl
lcall
mov
test
pop
mov
stos
rsqrtps
orb
outsb
cwtl
out
push
ljmp
jns
pop
fnstsw
hlt
inc
push
cld
cmp
loopne
dec
hlt
in
ss
in
or
xchg
ja
xor
test
add
pop
in
ret
add
xchg
imul
dec
mov
popf
adc
mov
cmovne
mov
add
mov
mov
scas
test
mov
aas
add
sub
icebp
scas
adc
xchg
imul
push
das
movsb
jne
xlat
or
jg
pop
mov
lock
xchg
pop
push
or
aas
ret
mov
add
in
fistpl
popf
xchg
or
fwait
or
movl
retw
dec
xchg
mov
mov
xchg
jne
pop
mov
xchg
jecxz
cmpsb
rcrl
sbb
lcall
mov
xor
out
nop
mov
cmp
pop
cli
lret
push
add
insb
lods
lcall
sbb
enter
xchg
mulb
rorb
add
adc
fisttpl
push
out
or
push
sub
lds
inc
rcr
popa
ret
iret
add
xchg
inc
test
dec
mov
sti
pushf
add
xor
fistl
pop
fwait
cmpsl
int3
rclb
cmp
shl
push
filds
jmp
mov
movsl
imul
mulb
pop
lds
xchg
jne
mov
test
dec
cmpsl
es
gs
sbb
inc
lahf
cmp
and
sub
das
imul
dec
jns
pop
dec
mov
in
cmc
fmuls
jns
bound
push
stos
popa
xor
roll
ficomps
dec
xchg
sbb
es
mov
push
add
xchg
mov
cwtl
jp
dec
xor
xlat
xchg
xor
push
add
sub
jbe
adc
adc
stos
inc
cmpsl
lahf
and
out
adc
pop
cmp
aam
add
repnz
ret
imul
jno
xchg
out
adc
rcll
or
fcoml
adc
jle
std
mov
mov
sub
int3
jbe
fs
lahf
add
out
mov
in
dec
pop
mov
in
pop
test
ret
fidivrl
in
mov
and
adc
aaa
bnd
or
fadds
mov
and
sub
add
lods
sbb
repz
js
icebp
out
lret
cli
mov
jge
mov
add
cli
mov
loope
scas
imul
out
out
inc
push
repnz
mov
subb
add
sub
negb
in
pop
rcll
clc
inc
lods
cmp
jnp
out
jno
movsb
sub
mov
jb
in
jmp
xlat
push
loop
mov
movsb
nop
bound
mov
movsl
popa
sti
pop
imul
jb
push
pushw
jo
dec
outsb
push
mov
add
push
mov
add
frstpm(287
dec
ret
sub
cmpsl
mov
ficompl
inc
repz
lret
stc
or
pushf
insl
shrd
push
cwtl
jmp
sahf
outsb
out
dec
jns
cmp
insb
int3
mov
jb
sbb
and
add
xor
mov
mov
sbb
dec
int3
mov
mov
add
cmp
inc
jle
inc
iret
arpl
les
daa
pusha
dec
pop
push
dec
or
add
mov
push
mov
scas
bound
cltd
lret
jnp
fisttpll
adc
test
add
adc
add
and
ret
inc
sbb
push
insb
pop
mov
mov
je
sbb
and
inc
or
enter
mov
mov
fdivrl
pushf
aaa
hlt
push
adc
push
mov
scas
mov
jp
gs
mov
repz
cmp
or
pop
mov
hlt
fs
and
test
mov
pop
jl
mov
adc
inc
sbb
mov
inc
cmp
mov
mov
popf
dec
dec
int3
not
or
lret
dec
sub
shufps
out
sarb
adc
addb
push
into
jae
outsb
loopne
loope
imul
icebp
fisubl
mov
ja
dec
fs
pop
lret
and
cld
cmp
xchg
imul
scas
jg
sub
jne
popa
adc
pop
stc
into
cwtl
add
subb
xor
lock
jae
subl
inc
or
mov
rcrb
cmp
adc
bound
pop
out
adc
pop
sbbl
fdiv
call
movsb
addl
inc
das
sbb
push
mov
mov
mov
or
rcr
mov
cmc
call
sub
inc
imul
shr
dec
and
sub
mov
mov
sub
xor
andb
lods
cmp
mov
fwait
mov
ja
jge
mov
xor
lock
arpl
xchg
dec
daa
test
sbb
imul
push
ja
xlat
scas
jp
mov
push
jp
mov
in
cs
lret
sub
add
call
add
popa
out
dec
enter
pushf
decl
dec
pop
adc
jp
cmp
clc
daa
rol
fs
arpl
popf
and
add
popa
push
dec
mov
rep
outsl
and
lret
pop
add
mov
add
fldt
cmpsb
mov
sbb
call
adc
jl
test
jle
test
rcr
sti
and
stos
in
loopne
mov
cmpsl
pop
lods
insb
test
imul
or
test
enter
xchg
mov
mov
ret
dec
jmp
add
bound
adc
pop
or
add
adc
push
fsincos
ret
cmp
fdivr
lahf
popa
xchg
into
push
pop
orl
cwtl
dec
xor
sti
sub
lret
jmp
push
mov
rcll
leave
mov
and
lret
enter
mov
sbb
enter
sarb
stos
or
iret
push
push
lock
inc
lods
mov
pop
add
in
xor
xchg
mov
pop
daa
inc
xlat
push
arpl
lds
inc
dec
dec
aad
and
cli
xchg
cs
mov
sub
cmp
pop
jo
aaa
ret
in
mov
cmp
xchg
scas
test
push
int3
popa
add
inc
mov
test
lds
shl
cmp
cwtl
adc
lods
jnp
add
jge
stos
push
movsl
push
lock
jmp
xlat
fmul
movsb
xor
loope
cmpsb
jb
std
stos
mov
jnp
mov
imul
test
xchg
iret
mov
sub
imul
aas
je
pop
jl
stc
mov
dec
loop
aam
adc
test
dec
add
aad
cwtl
cli
inc
sbb
jb
fsts
pop
dec
imull
fidivrl
std
push
xor
imul
pop
subl
jae
push
xchg
sti
add
xchg
inc
pop
jnp
fnsave
xor
cmp
xlat
adc
sarl
jle
outsb
daa
mov
and
imul
dec
mov
jne
sbb
in
mov
imul
dec
dec
popf
cltd
mov
mov
jo
cmpsl
mov
mov
mov
notb
mov
int3
lock
pop
ljmp
cs
cmp
unpcklps
addr16
aaa
ret
xchg
or
testb
lods
add
sub
adc
mov
sbb
sarb
in
mov
xsha256
cmpsb
xchg
mov
dec
xchg
lret
testb
inc
rolb
push
cwtl
jp
inc
push
mov
dec
test
adc
mov
cwtl
dec
pop
std
add
jb
stos
movsb
jl
mov
dec
out
pop
sub
xchg
sub
adc
push
mov
ret
mov
mov
adc
out
pop
or
dec
cmpb
movsb
dec
push
cmp
in
sbb
pusha
es
or
xor
sub
and
in
fcmovu
in
cld
fmuls
inc
out
jae
repz
fldt
imul
hlt
mov
or
fimull
push
add
xchg
mov
scas
shlb
xchg
sbbl
lcall
lea
mov
orl
fs
dec
mov
lock
dec
shlb
andb
mov
pmaddwd
movsl
cwtl
sbb
stos
xor
add
in
mov
dec
cli
jne
mov
rorb
pop
imul
inc
add
pop
jo
test
xor
popf
xor
jb
sbbl
sub
xchg
jg
call
outsb
xor
out
das
lods
int
xchg
cmp
inc
mov
das
push
ud1
and
add
cmp
xchg
adcb
push
pop
xor
dec
sub
mov
push
pminsw
add
inc
hlt
out
mov
fwait
loopne
jae
mov
movsb
and
aam
sbb
aad
pop
jecxz
dec
and
pop
rcrl
mov
jmp
and
mov
je
lcall
sub
out
xchg
pop
adc
rorb
int3
rcrl
xor
movl
pop
dec
cmp
je
and
clc
dec
lret
lahf
enter
pop
xchg
sahf
cmp
mov
lods
xchg
dec
scas
idivl
data16
cmc
add
push
dec
fs
packuswb
je
movsl
pop
sbb
std
lea
mov
imul
xchg
cltd
enter
inc
pushf
or
ret
mov
inc
jne
data16
test
add
stos
mov
sbb
leave
aaa
int3
xor
cmp
push
and
lcall
mov
stos
ret
mov
cmp
daa
add
jnp
lods
call
xor
sbbl
inc
push
cmp
add
and
lret
and
stos
add
xor
sbb
popa
into
pop
mov
mov
ss
sub
std
mov
pandn
shrb
lods
hlt
scas
and
cld
rorb
pop
mov
clc
mov
xchg
adc
cs
xchg
jbe
in
icebp
mov
inc
into
or
cwtl
cmp
sbb
cmc
xor
cmp
push
jae
mov
push
inc
xchg
lock
jp
xor
pop
xlat
popf
xlat
sbb
mov
and
dec
jg
adc
mov
add
xor
mov
jo
ja
inc
sti
aad
cmp
inc
stos
repnz
cmp
in
notl
fidivrl
testl
cmc
inc
pop
or
out
push
add
pop
xor
into
or
stos
repz
jo
xchg
nop
push
mov
pop
shrb
jae
loopne
xchg
mov
xchg
fmuls
stos
mov
icebp
inc
fidivrs
aam
push
lcall
mov
shufps
dec
iret
pop
xorb
fwait
add
fcoml
hlt
dec
xor
cmpsl
insl
sbb
push
rol
push
test
in
ja
cvttps2pi
jg
xchg
sub
cmp
xchg
mov
lcall
jo
ja
imul
push
sub
push
aaa
popa
or
std
dec
test
mov
xor
mov
mov
sub
cld
cli
stos
xchg
or
movsb
adc
call
fistps
mov
xor
js
jge
or
repnz
movsb
adc
nop
movsl
jg
mov
push
les
jmp
stc
sub
cwtl
pop
sbbl
orb
in
pop
nop
test
popa
add
adc
mov
add
xor
or
mov
popa
mov
loope
push
mov
aam
gs
jp
lret
cmc
sti
dec
adc
divb
jmp
sub
mov
aam
scas
mov
repnz
mov
int3
out
and
mov
xchg
push
shrb
mov
mov
and
mov
and
jge
ljmp
mov
push
outsl
and
xor
add
pop
xchg
add
fs
in
int3
mov
enter
jno
outsl
xchg
mov
jnp
fbstp
test
pop
add
lock
cltd
jns
mov
adc
mov
push
ret
pop
mov
adc
hlt
mov
push
lcall
inc
and
adc
push
sbb
les
sub
mov
xchg
inc
jb
cmp
xchg
adc
push
dec
mov
movsl
ret
or
jg
xchg
clc
pop
cwtl
ds
scas
dec
scas
xchg
mov
push
rol
mov
in
adc
flds
cmp
daa
and
sbb
adc
rcrb
test
mov
out
repnz
lds
test
dec
call
je
and
add
imul
cmp
xchg
add
rorb
insb
ss
test
inc
adc
jno
jp
shl
xor
jno
out
mov
push
mov
je
rcpps
or
push
cmp
lahf
in
aad
orb
jl
in
lods
mov
scas
repz
inc
sub
sahf
rorb
pop
pop
out
scas
sub
push
out
xor
xchg
dec
imul
xorl
je
jmp
pop
call
cld
pop
pop
and
dec
test
test
call
cmpsl
lcall
cmp
cmc
sub
shlb
stos
idivb
arpl
xor
xchg
fimuls
fmuls
mov
push
mov
add
jns
lahf
mov
pushf
and
js
call
jg
orl
push
cmp
ret
mov
stc
pop
jbe
cmc
fiaddl
out
push
lds
std
push
ja
ss
cli
mov
jecxz
push
or
aam
pop
push
push
bound
bound
arpl
and
jle
xor
ljmp
outsl
lcall
mov
ja
xor
ja
cld
sbb
stos
sti
repnz
rclb
xchg
or
lahf
xor
inc
adc
filds
jb
and
in
pop
and
in
imul
fwait
ret
cmpsb
add
inc
pop
repz
jecxz
jnp
cmp
mov
inc
inc
xchg
pop
sub
lret
fs
cmc
push
std
add
in
popf
mov
out
adc
je
adc
jo
cwtl
out
and
and
push
ljmp
stc
inc
addr16
in
adc
fcmovne
fs
and
mov
xlat
fadd
ss
shl
inc
imul
lret
jo
fistpl
repnz
pop
push
test
sbb
hlt
xabort
add
in
cwtl
insb
jp
imul
dec
pop
mov
inc
jne
stc
mov
add
pop
sub
cmc
enter
xchg
dec
pop
test
imulb
jo
lock
mov
or
out
lock
sub
rcrb
int3
cmp
ret
iret
jle
pop
jns
dec
adc
and
xchg
add
out
mov
out
inc
adc
pop
cmc
push
xchg
xchg
idivb
mov
sahf
sub
repz
adc
js
cmp
jge
or
subb
jmp
push
xchg
dec
sbb
mov
imull
daa
xchg
repnz
jo
std
pop
add
ljmp
cmpsb
sbb
iret
pop
scas
lods
in
jb
mov
nop
or
sub
sbb
adcb
and
adc
dec
xchg
or
jg
mov
rcrb
sbb
lcall
jle
pop
or
test
icebp
ljmp
add
or
xor
cmp
aaa
sbb
pop
jge
push
imul
inc
popf
fdivl
roll
lods
inc
repnz
add
sbb
inc
push
out
rorb
jo
push
xor
add
mov
aas
cmp
enter
mov
ret
adc
or
inc
xchg
mov
clc
xor
mov
sbb
mov
jno
addl
inc
adc
div
push
push
jnp
or
and
jecxz
dec
test
cmp
roll
or
push
xchg
sub
and
aam
outsb
je
jo
xchg
mov
lcall
adc
push
inc
mov
push
popa
push
sub
xchg
xchg
or
outsb
imul
cli
js
xor
test
adc
lock
pushf
fwait
jns
mov
fwait
xchg
arpl
add
xchg
lds
or
push
ss
arpl
test
cmp
sbb
repz
ljmp
lds
mov
sbb
jmp
jo
insl
dec
cmp
or
xchg
or
fdivs
sub
cmp
out
fistps
pop
cmpsl
mov
sub
out
mov
dec
push
jg
sbb
or
push
daa
or
and
push
push
dec
out
and
sbb
sub
add
cmp
hlt
divb
mov
adcl
sahf
cmp
int
mov
xchg
push
negl
mov
or
xchg
xlat
inc
or
cmc
adc
sbb
aaa
pusha
rolb
popf
inc
or
mov
xor
mov
lret
push
add
imul
adc
xor
jbe
add
imul
ljmp
test
add
add
test
xor
out
cli
pop
dec
insb
mov
mov
inc
out
add
test
pop
dec
imul
sbb
mov
aad
add
mov
mov
dec
test
sub
clc
sti
pop
and
movsb
lea
stc
adc
and
cmp
ret
jae
cmpl
cmp
shrl
cmpsb
and
repz
dec
xor
test
out
enter
pop
jle
add
jnp
aad
cmp
pop
jbe
jl
pop
adc
dec
cmp
je
or
jbe
or
inc
imul
scas
dec
ret
test
mov
xchg
jmp
pop
das
ret
xchg
add
or
popf
out
jb
mov
int
pop
jmp
int3
enter
aas
mov
fcos
or
ljmp
shlb
scas
pop
mov
and
mov
insb
inc
dec
mov
push
pop
dec
push
fistpl
out
sub
mov
jp
xor
bnd
xchg
insl
and
push
or
scas
sbb
xor
fildl
and
and
push
es
or
inc
mov
jp
iret
xchg
adc
sbbb
xchg
inc
cmc
inc
negl
movsb
cmp
sub
jp
hlt
dec
add
in
jmp
js
mov
mov
imul
push
rorl
pusha
push
cmp
lret
add
xchg
psubusb
fstpl
xchg
jns
loop
adc
sbbl
adc
push
add
dec
popa
mov
shr
pop
pop
dec
adcl
in
negl
jns
add
mov
push
stc
aaa
scas
inc
pop
stos
mov
ficoml
push
aad
addr16
icebp
xchg
sub
dec
jo
arpl
imull
push
stc
imul
and
dec
rclb
sub
sahf
mov
outsl
cmp
je
push
lock
dec
pop
pushf
fcompl
sbb
sub
stc
into
push
jnp
pop
pushl
dec
mov
es
sbb
je
mov
cmpl
scas
inc
adc
bound
sub
sbb
push
adc
jno
mov
dec
test
push
xchg
and
in
push
cmpsb
in
repz
lods
js
subl
jl
test
push
or
notl
repz
imul
mov
cmp
push
mov
in
push
jle
repnz
stos
outsl
mov
arpl
out
mov
jp
lret
aaa
lock
sahf
sub
nop
rorb
mov
inc
mov
jmp
mov
xrelease
gs
lret
mov
lahf
lods
testb
mov
movsb
xchg
xor
sub
ret
inc
in
mov
push
mov
js
jns
out
mov
mov
ds
inc
enter
inc
cmp
lds
icebp
push
mov
adc
into
addb
pop
es
fs
sbb
push
pop
pop
push
adc
or
push
inc
out
xchg
sbb
push
test
icebp
enter
pusha
ds
sub
repnz
test
push
das
dec
movzwl
jge
imul
mov
in
cmp
fnsave
frstor
cmc
fbstp
mov
repnz
jecxz
jae
push
int3
imul
mov
sub
mov
adc
mov
jae
push
inc
stc
mov
pusha
dec
fwait
ret
add
rcrl
push
jmp
inc
add
sbb
popa
or
mov
rorl
shll
sub
mov
and
sub
pop
nop
repz
push
xor
inc
mov
cmp
lock
mov
decb
aam
sbb
mov
shrl
push
pop
out
jp
xchg
xorl
movsb
bound
pop
xor
mov
adc
or
std
xlat
ss
shll
enter
repnz
out
xor
dec
pop
sub
and
sbb
jbe
in
andb
dec
cltd
test
jge
lahf
add
pushf
inc
push
inc
arpl
cmp
dec
push
dec
pop
or
jecxz
push
cli
and
jl
fs
cltd
repz
cmp
iret
push
mov
mov
fs
and
rcll
or
pop
out
pop
jl
xchg
mov
in
xor
mov
cli
sub
lods
mov
popa
insb
je
cld
das
xor
inc
dec
mov
sub
sub
popa
scas
ja
out
mov
jnp
fwait
jp
in
rcll
cltd
loopne
out
xor
push
cmpsb
xor
inc
add
xor
fs
pop
ret
addr16
std
adc
into
insl
insl
jno
cltd
mov
fimuls
arpl
push
insb
jo
lods
add
in
ja
inc
gs
dec
jb
xchg
movsb
insb
insb
test
sub
cli
xchg
js
jp
inc
push
sti
jl
push
in
call
pop
cli
in
mov
inc
repz
pop
popf
movswl
movsb
iret
inc
insb
inc
fstl
dec
adc
subb
pushf
pop
mov
add
jp
inc
hlt
mov
lds
ficoml
or
test
call
xor
fwait
jmp
enter
adc
adc
push
adc
sbb
mov
popf
stos
out
pop
movb
pop
daa
jp
cli
xchg
outsb
pop
xchg
fldt
inc
xchg
adc
jp
cmc
adc
repnz
jmp
repz
inc
cmp
hlt
sbb
jg
sub
jo
ficompl
sub
popf
aad
mov
ret
mov
xchg
push
outsl
cmp
ds
lds
pop
and
adc
sub
subb
add
iret
aad
mov
stos
aas
mov
jp
clc
das
aad
xchg
dec
cli
addr16
xor
or
call
push
push
sbb
and
clc
sbb
icebp
pop
jnp
inc
pushf
lret
mov
mov
lods
sbb
add
leave
xorb
jnp
jge
call
dec
test
add
mov
pop
mov
push
cmp
inc
push
lock
mov
das
mov
jbe
hlt
push
testl
push
and
sub
idiv
jae
enter
push
mov
or
push
fucom
push
xchg
lds
sbb
xor
pusha
pop
div
cmp
xchg
int3
imul
and
in
pusha
fcmovnbe
sbbl
sub
pop
daa
sbbb
xchg
repnz
sarb
or
push
lock
sbb
pop
sub
ret
inc
cmp
sub
cmpsl
dec
inc
aam
clc
mov
cmp
cmp
out
shrb
sub
jae
mov
in
mov
and
lods
filds
mov
add
daa
push
push
and
ja
test
mov
add
or
and
xchg
test
or
cld
cmpsb
add
mov
jp
or
popa
test
popf
push
adc
jmp
cmpsb
cmp
stos
cmpsb
mov
hlt
cs
stos
mov
dec
push
fists
cmp
stos
rorb
pop
jns
cmpsb
lods
shlb
js
xchg
pop
jmp
sub
pop
clc
fdivs
cs
sbb
inc
mov
ds
ds
hlt
sub
mov
mov
js
icebp
cmpsb
mov
jo
mov
mov
movsb
sbb
inc
fucom
hlt
and
shl
mov
or
pop
xchg
popf
adc
popf
jg
repnz
mov
push
test
std
inc
jb
pop
pop
bswap
mov
in
and
push
inc
gs
outsl
pop
mov
push
clc
lods
stos
push
jno
dec
shrl
xchg
xchg
add
outsb
jnp
rcrl
xchg
sub
or
mov
or
pop
add
mov
mov
jge
jl
jo
sbb
je
push
daa
je
inc
pop
mov
xchg
cmpsl
sub
mov
cld
mov
mov
notb
fadds
adc
inc
jg
add
cmp
incb
cmovp
cmpsl
add
ficompl
dec
idivb
ljmp
stos
jecxz
push
mov
sub
jbe
add
push
cld
push
adc
das
xor
outsl
hlt
push
jo
mov
xchg
cli
movsb
mov
lahf
je
aad
adc
es
jle
aad
jp
fisttpl
mov
or
mov
inc
dec
adc
push
inc
lret
mov
or
push
bsr
repnz
mov
cmp
fwait
cmpl
sti
movsb
rcll
pop
cmpsl
shr
in
mov
xchg
jmp
test
or
mov
mov
mov
and
pop
mov
lds
ss
dec
mov
cmp
push
adc
pop
push
cld
add
mov
pop
sbb
add
pop
fwait
neg
test
xchg
push
out
xor
xchg
pop
test
clc
push
mov
gs
gs
daa
ja
lods
or
or
flds
mov
pop
out
lret
xchg
scas
stos
test
movsl
sub
add
add
pop
push
daa
pop
jge
lahf
xchg
add
mov
or
orb
cmp
mov
push
test
out
jecxz
test
cmpsb
hlt
ror
xor
xlat
enter
lock
sub
test
fstl
xchg
xchg
lret
inc
cmpsl
add
xor
pop
imul
dec
and
iret
fmuls
mov
dec
mov
pop
mov
or
lods
xlat
and
cmp
je
mov
mov
cmpsb
jmp
xor
mov
pop
mov
je
stc
xor
shr
lods
inc
sub
xchg
pusha
mov
popf
cmp
xor
mov
lea
or
sbb
scas
out
push
lahf
dec
push
stos
shr
inc
adc
nop
jp
jb
inc
xor
scas
daa
mov
sbb
movsb
addr16
movsl
and
push
das
sbb
negb
fwait
pop
shl
pop
lods
mov
jmp
mov
mov
push
test
mov
repnz
push
testl
out
fwait
cs
and
outsl
fcoms
adc
repz
xor
adc
mov
xchg
fisubl
jbe
mov
jns
daa
jge
or
xchg
pop
mov
js
fdivrl
xchg
dec
cmp
or
out
jg
in
push
jno
scas
push
jno
into
aam
dec
enter
pop
push
jbe
test
jg
mov
inc
jb
cmpsb
and
fxch
push
xor
and
mov
and
mov
pusha
movsb
inc
adc
jle
inc
cwtl
sbb
and
das
jp
call
jb
push
adc
sbb
xchg
mov
loope
jnp
jo
fnsave
xor
jo
pop
test
cmc
sbb
insb
cmpsb
fisttpll
inc
fldt
mov
sahf
add
push
popa
add
incl
aam
push
adc
or
pushf
add
incb
mov
pop
inc
mov
inc
mov
or
sub
adc
aam
loope
adc
xchg
addb
cmp
push
sub
adc
xchg
inc
stos
inc
or
call
push
sub
dec
in
or
cmc
push
push
repnz
jecxz
push
test
push
sbb
fildll
test
outsl
add
mov
test
xchg
in
int
xchg
cmp
loopne
mov
push
std
ret
hlt
out
arpl
subl
inc
js
add
or
scas
mov
dec
test
sbb
clc
je
cs
stc
cmp
add
push
ljmp
push
mov
popf
iret
test
sub
inc
mov
adc
pop
xor
dec
daa
lds
jno
pop
lcall
xchg
cmp
ljmpw
stc
sbb
es
cld
ja
dec
push
xor
pop
mov
ror
sub
inc
push
out
out
jne
add
or
mov
xchg
mov
xchg
pop
or
arpl
mov
in
add
cmp
dec
push
xchg
jle
cmp
xchg
imul
xchg
mov
pushf
test
add
mov
add
mov
insl
inc
pop
inc
cmp
test
xchg
push
jb
aad
add
cmp
lahf
fwait
xchg
push
ss
ficompl
cmp
dec
xor
sub
or
fcmovbe
call
lret
cmpsl
aad
add
push
and
clc
jns
xlat
sbb
mov
inc
cmp
aad
jg
mov
inc
dec
js
push
insb
and
ja
mov
gs
pop
push
movsb
incl
out
cld
testl
adc
sti
jg
push
repnz
inc
jp
inc
shl
jg
jmp
xor
push
push
jns
fs
pushf
mov
push
mov
arpl
jo
mov
dec
jno
jle
and
in
pop
fnstsw
std
cli
mov
inc
pop
dec
mov
pop
mov
cltd
in
cmp
mov
or
jo
aaa
test
dec
jge
xor
jbe
stos
loope
mov
js
dec
stc
sub
icebp
and
xchg
xchg
lret
loope
std
jp
fiaddl
adc
jg
pusha
cmpsl
pop
dec
ljmp
pop
hlt
mov
sub
adc
fs
fisttpl
xchg
lcall
pusha
ja
in
gs
inc
sarl
dec
cld
insb
add
fdiv
lods
ret
jmp
sti
jecxz
hlt
cmp
jge
mov
iret
ja
jb
fbstp
sub
in
in
mov
scas
andl
nop
sbb
mov
daa
push
cwtl
rcrb
fimuls
shrb
cmc
cmp
ss
sub
addr16
mov
popa
jae
int
mov
adc
repz
enter
inc
push
mov
xchg
add
mul
xchg
mov
inc
xchg
lods
or
mov
mov
and
sti
jp
std
jne
sub
adc
push
mov
call
inc
dec
imul
push
sub
les
test
push
dec
out
ljmp
cmp
insb
xor
jmp
mov
cmp
adcb
fsts
mov
mov
jno
cmp
leave
pop
inc
mov
add
stos
pop
lock
fwait
in
sbb
setae
lods
add
cmp
in
xchg
lcall
arpl
inc
mov
stos
popf
xchg
iret
inc
orb
call
push
xchg
nop
sti
sbb
mul
cmpl
cmpl
cmpl
cli
jecxz
adc
sbb
lock
rorb
push
lods
inc
jmp
mov
push
sar
enter
sub
mov
sbb
iret
jmp
inc
repnz
bsr
rcl
jae
cld
das
out
sub
cmpb
mov
or
adc
push
cmp
mov
pusha
jecxz
pop
push
dec
frstor
push
cmpsb
inc
sbb
mov
addr16
sarl
dec
adc
fucompp
iret
leave
cmovae
gs
sbb
sub
movsl
lods
add
pop
pop
xchg
aas
xor
pop
sub
xor
fisubrs
cmpsb
sbb
arpl
int
or
sub
dec
xor
add
rolb
jge
cltd
stos
je
xchg
xor
ss
popf
loope
cmc
cmp
sbb
out
mov
call
lret
push
xor
add
xchg
mov
adc
das
cmc
pop
push
test
cmpsb
enter
adc
clc
vmread
adc
mov
xchg
cld
nop
sbb
pop
inc
repz
or
add
fbstp
mov
iret
arpl
bound
pop
out
aaa
cmp
xchg
push
out
cld
sbb
pop
std
daa
test
xchg
mov
inc
mov
cld
dec
arpl
aad
clc
fbld
pop
inc
push
and
sahf
pop
shll
aam
dec
test
xorl
out
sti
mov
mov
xor
inc
or
adc
test
xor
add
fsubrs
sub
out
loopne
fs
sahf
ljmp
dec
icebp
adc
imul
cmp
in
subl
pop
js
imul
adc
adc
insl
out
fiaddl
sbb
and
call
mov
add
std
push
fildl
movsl
sti
sub
and
imul
test
mov
incl
std
aad
jl
pop
jo
mov
filds
int
xchg
mov
ja
add
sbbb
xchg
out
pop
daa
mov
inc
out
mov
adc
test
idivl
movsb
or
inc
pop
std
pop
inc
inc
cmp
cld
jb
popf
dec
sub
ret
jbe
push
pushf
mov
cli
fwait
or
cmpsb
arpl
xchg
fidivl
sti
pop
repz
pop
jl
jns
cmp
inc
mov
xchg
pop
stos
decl
dec
xorl
mov
pop
cmp
loop
sar
inc
lret
inc
fcmovne
int3
add
test
out
jnp
xchg
xchg
mov
fists
mov
int
push
ljmp
fidivrs
xchg
push
inc
js
fs
cli
adc
pop
sub
push
jo
xor
pusha
dec
or
inc
inc
out
mov
push
and
xchg
inc
adc
xorb
ljmp
div
xor
sahf
and
je
aad
popa
xchg
dec
cwtl
push
inc
mov
addr16
mov
push
pop
jle
lret
and
inc
sub
xlat
push
lahf
inc
addb
or
mov
adc
add
xchg
jge
mov
dec
das
or
and
xchg
adc
xchg
cmp
aam
and
xchg
and
out
popa
rorl
inc
sub
repnz
mul
mov
and
outsb
in
cltd
outsb
xor
dec
rcl
xchg
pop
in
xchg
fisubrl
sub
cmp
add
push
stos
repz
subb
and
lods
outsb
mov
pop
test
mov
setg
outsl
mov
stos
adc
dec
lret
mov
sub
and
sbb
or
xor
dec
inc
es
fwait
dec
xlat
add
xchg
mov
lods
test
imul
cmpb
orl
cmp
sub
mov
jecxz
mov
xchg
adc
in
xchg
lcall
jg
data16
mov
dec
ret
shl
iret
test
mov
jecxz
pop
popf
jge
rclb
adc
in
or
test
push
dec
inc
imul
and
sti
rolb
pop
lods
pop
fs
test
mov
lcall
repz
je
addr16
xchg
xchg
idivb
lds
shl
daa
and
cmp
xchg
or
mov
inc
test
dec
repz
mov
imul
hlt
jle
out
mov
mov
ljmp
xor
mov
xchg
std
add
dec
pop
scas
mov
arpl
inc
pop
dec
push
mov
hlt
orl
lods
repnz
xchg
jg
cmp
fildl
cmp
dec
hlt
pop
hlt
cmpsb
or
push
xlat
and
mov
enter
or
repz
aad
fs
cwtl
and
lock
ds
sar
mov
movsb
mov
adc
mov
ja
jo
lods
inc
inc
test
out
aaa
adc
popf
jecxz
das
and
loope
mov
pop
test
pop
inc
mov
push
mov
pop
dec
adc
jle
mov
loopne
push
mov
mov
inc
add
arpl
fcoms
pop
test
mov
and
inc
cmp
out
dec
pop
in
ffree
inc
xchg
and
sub
pop
loop
xchg
jno
lcall
lock
icebp
mov
call
xlat
adc
in
dec
dec
das
in
popf
inc
jb
xor
cli
push
jne
icebp
addl
fcomp
fdivrl
cld
rsqrtps
mov
push
leave
leave
cmp
sub
or
stos
push
cmp
sub
sub
pop
mov
outsl
jge
inc
pop
mov
mov
cwtl
lods
pop
pop
mov
shll
push
clc
fdivs
test
cmpsb
js
iret
adc
mov
cli
mov
aad
mov
push
call
ja
ret
sub
mov
sbb
cld
nop
das
test
in
cmpsb
sub
and
mov
jmp
mov
pop
adcb
subb
test
sub
sbb
roll
sub
lahf
pop
mov
ret
insb
mov
ljmp
fistl
fldl
je
push
xchg
adc
dec
mov
lods
inc
pop
jmp
popa
fcoms
jb
stos
push
jns
xor
add
stc
pop
pop
and
xor
and
xor
xlat
sub
aaa
repnz
push
aad
rcrb
dec
xor
sub
out
dec
jmp
dec
sub
popa
rorl
movsl
push
shr
jae
cli
cltd
adc
subb
jbe
sbb
add
pop
mov
and
jle
mov
fs
lret
jno
or
mov
out
cmpsb
nop
push
xchg
pop
aad
cltd
js
hlt
pop
fsubs
lret
dec
lea
push
pushf
andb
stos
mov
sbb
mov
jmp
jge
scas
ljmp
pop
loopw
adc
out
dec
in
addr16
dec
out
test
adc
adc
lods
mov
testl
and
call
xlat
hlt
sub
lret
cmp
ret
push
sub
cmp
popa
push
add
jmp
inc
test
mov
dec
bnd
or
and
cwtl
hlt
les
xor
dec
addr16
add
dec
scas
jne
cmpsl
mov
mov
pop
lods
adc
aaa
pop
pop
scas
mov
cmp
add
xor
sahf
jno
add
jns
cmp
negl
fnstcw
dec
mov
push
sbbb
loopne
jl
xchg
dec
push
scas
mull
in
insl
out
clc
iret
adc
cld
imul
dec
push
adc
ss
bound
lea
aad
call
xchg
or
lock
jne
movb
jnp
js
pop
push
cltd
js
mov
loope
adcb
cwtl
jb
aaa
xchg
pop
sbb
mov
jbe
inc
xor
or
xor
movsb
mov
jnp
mov
jo,pn
xchg
lret
mov
add
lret
and
inc
push
lock
js
ja
cmp
orl
sbb
cltd
jmp
shlb
out
pushf
mov
push
iret
xchg
jp
rcll
into
and
inc
mov
sub
ja
je
std
adc
stos
icebp
pop
xor
mov
jg
inc
mov
in
push
jo
aaa
lods
dec
rclb
faddl
mov
xchg
sbb
cli
fdivrl
in
and
mov
and
sbb
inc
pop
out
mov
addr16
xor
out
jns
ja
xlat
fcomps
daa
mov
jnp
lods
or
or
std
cld
insb
and
adc
and
fs
xor
popf
push
add
cmp
jo
lret
cmpl
jmp
cmpsb
test
hlt
jne
inc
movsb
es
mov
dec
push
icebp
jge
mov
ret
sbb
fbstp
mov
push
sti
pop
lret
in
push
repz
das
dec
cmp
mov
imul
and
repnz
adc
ljmp
out
arpl
lock
xor
xchg
mov
cld
and
test
pusha
subl
pop
leave
int
mov
push
jae
push
xchg
jb
jb
adc
adc
and
jnp
inc
mov
xchg
rcrl
add
mov
loope
out
lahf
jmp
xchg
mov
sub
jle
faddl
call
lret
rcll
sbb
add
push
xchg
test
sbb
call
pop
jne
add
adc
sub
cltd
jle
push
repnz
mov
push
sub
dec
jo
and
jmp
adc
adc
or
pop
sbb
jae
jg
and
scas
push
xchg
pop
mov
xor
xchg
cmp
jge
push
pop
mov
adc
pop
pop
fisubs
jne,pt
inc
push
andb
cld
mov
shrl
outsb
lods
inc
cs
mull
cmp
and
xor
pop
sbb
push
or
addr16
or
adc
mov
mov
jb
test
push
insb
fdivl
jl
pop
icebp
cmc
jp
lods
imul
fldl
stc
jg
test
ret
push
jo
adc
jge
repz
lds
adc
dec
xor
sub
and
cwtl
lock
dec
add
add
sub
inc
lock
inc
and
cmp
shll
cmc
aaa
jae
cmp
add
daa
loopw
jmp
jae
mov
sub
fsubl
or
and
lcall
lods
dec
rcr
jmp
ss
into
mov
fdivr
cwtl
cmpsl
pop
push
cmpsb
adc
mov
fcoml
add
js
shll
shlb
sub
mov
sub
test
aas
lcall
pusha
push
jo
xor
subb
pop
jns
jnp
sbb
pop
xor
xchg
cmp
sbb
sub
iret
mov
xor
out
mov
cmp
adc
imul
mov
hlt
jno
movsb
lahf
inc
movsb
std
loopne
add
jp
ljmp
or
mov
push
push
mov
fidivrs
or
add
push
mov
inc
arpl
std
cmp
sub
lcall
xor
je
xchg
mov
daa
fwait
pop
and
clc
dec
or
inc
sbb
sub
jge
ja
mov
movsb
mov
shll
int3
psubusb
data16
add
push
pop
pop
data16
mov
xchg
pusha
fstl
and
dec
jge
dec
xchg
jno
sti
mov
pop
mov
push
in
add
push
jge
ficoms
int3
jmp
imul
fst
inc
fistps
shll
jns
orb
pop
js
push
in
push
scas
mov
push
adcl
cmpsb
pop
sti
pop
jp
jne
shll
xor
pushf
imul
push
sub
out
inc
mov
inc
pop
add
cld
lcall
cs
cmp
ficompl
jg
repnz
enter
shll
inc
or
sahf
insl
adc
xchg
std
insl
mov
push
shrl
push
add
jbe
rorb
cmp
repnz
inc
mov
cltd
bnd
arpl
push
mov
jns
and
cwtl
dec
sub
add
pop
cmc
xlat
jo
dec
leave
adc
fs
daa
jp
dec
orb
les
ljmp
test
mov
lock
add
icebp
out
xor
dec
ficomps
jg
outsl
mov
loopne
jnp
cli
or
bnd
pop
dec
pop
dec
pop
cli
jns
dec
jle
cmpsl
pushf
shl
push
arpl
add
xor
out
sub
xor
ss
pcmpeqd
jae
es
out
and
ljmp
loope
stc
xchg
xchg
gs
sub
dec
xor
push
mov
sub
aad
push
imul
das
ret
cmp
popf
jb
sbb
cmc
push
jnp
aas
gs
fldt
push
dec
stc
cmpsb
pop
xchg
inc
sub
cmp
leave
jecxz
adc
xor
ja
test
sbb
test
in
scas
jnp
add
xsave
out
mov
xchg
push
mov
hlt
or
xor
lcall
cmp
inc
push
mov
push
cld
les
push
pop
push
insl
jo
jl
and
js
xor
and
xchg
ljmp
jmp
mov
jp
cmp
pop
xchg
sub
jp
dec
pop
xor
add
sub
push
mov
imul
push
inc
xorb
inc
mov
adc
mov
xchg
js
sbb
ffreep
adc
scas
jecxz
imul
push
je
repnz
shlb
out
push
aam
and
fisttpll
mov
inc
out
add
jae
add
xchg
test
out
sbb
stos
std
sar
sbb
mov
test
in
je
fisubs
mov
push
fbstp
cld
in
stc
orb
mov
inc
add
notl
sub
loope
pop
sub
jo
mov
repnz
mov
pop
push
pop
or
cwtl
adcb
cmp
scas
lret
aaa
iret
lahf
sub
arpl
mov
push
mov
cmpsb
add
into
cltd
inc
icebp
test
jno
inc
mov
jmp
call
mov
dec
lock
fcoms
pop
imulb
les
sti
cwtl
shr
push
adc
out
outsb
xchg
aam
and
sti
lock
mov
xchg
or
ja
outsb
imul
dec
or
adc
sbb
push
repz
xlat
ficoml
cmp
sbbb
orl
ljmp
out
and
sbb
mov
adc
mov
inc
sub
push
mov
push
sub
mov
fildl
dec
dec
pop
in
aad
adc
jo
and
inc
addr16
je
bnd
sahf
loope
dec
ds
fldl
sbb
xchg
push
mov
pop
mov
fwait
stos
jmp
mov
sub
jae
adc
cmp
or
jns
push
fcmove
inc
pusha
pop
aam
cs
repz
push
sub
popf
shr
and
mov
jno
movsl
cmp
cmpb
in
add
sbb
repz
inc
cmp
scas
jecxz
dec
hlt
daa
adc
add
adcb
push
jp
movsb
outsl
adc
cmpsb
adc
push
roll
fwait
out
jmp
and
popa
out
fidivrs
fwait
push
pushf
or
pop
mov
lods
loopne
sbb
lods
pop
repz
push
pop
mov
mov
mov
adc
lahf
stc
jae
test
push
push
cmp
ret
or
push
lahf
inc
jo
dec
in
dec
imul
mov
or
int3
or
xchg
sbb
add
push
inc
dec
pop
dec
outsl
lret
add
arpl
adc
pop
jp
add
mov
pop
addr16
jns
add
adc
push
inc
jns
push
cli
aaa
cmpsl
insb
inc
jg
and
fsubs
pop
pop
movsl
and
cmp
sbb
xchg
vmread
dec
push
inc
addb
addl
push
xchg
jae
fsubs
inc
aam
aas
psubsb
inc
test
subl
js
xchg
sbb
scas
pop
mov
sbb
fistpl
js
ret
adc
or
add
dec
cwtl
testl
test
cwtl
enter
pop
inc
jp
push
repz
xchg
dec
lods
add
or
add
enter
cmp
stc
push
inc
mov
adc
inc
daa
cli
pop
js
xchg
fwait
pop
inc
adc
pop
repz
add
and
xor
mov
nop
lahf
push
test
stos
pop
inc
js
xchg
push
adc
pop
arpl
sub
xchg
jg
pop
cmpsl
add
aam
clc
scas
aam
add
pop
xor
cld
push
xchg
iret
inc
mov
stc
out
xchg
adcb
hlt
mov
pop
adc
fwait
aas
pop
pop
push
cmp
mov
repnz
push
loop
enter
clc
push
xor
js
outsl
dec
xlat
cmpb
mov
mov
xor
jl
adc
sarb
pop
pop
imul
rcr
jno
push
mov
sbb
inc
mov
iret
into
xor
pop
addr16
add
add
aas
sub
dec
call
jae
jne
sub
xlat
lcall
cld
sbb
imul
scas
inc
je
femms
sbb
in
shlb
mov
xchg
in
ljmp
and
cli
sub
lock
dec
adc
incl
xchg
fildll
push
lods
sti
push
adc
fildl
dec
pop
add
xchg
bound
js
sbbl
xor
jge
push
cs
lods
cwtl
sbb
adc
adcl
mov
cmp
mov
aam
loopne
mov
lock
inc
push
xchg
lcall
in
sahf
pushf
hlt
out
mov
loope
cmp
and
push
push
sub
mov
out
pop
mov
inc
repz
fildl
push
push
adc
and
sbb
adc
mov
cld
idivb
lods
in
out
aas
lret
push
les
adc
mov
mov
sbb
xchg
cli
xchg
and
lretw
pusha
fidivs
divl
ds
xchg
sub
push
push
pop
push
and
pushf
push
loop
cld
sbb
mov
sbb
sub
ret
or
sti
outsb
dec
pop
mov
sbb
push
add
cmpsb
ds
sbb
fwait
mov
popa
mov
scas
lret
xchg
cld
je
pushf
push
xorb
addr16
seta
hlt
or
rcrl
xor
pop
shlb
dec
mov
cwtl
out
inc
and
dec
das
jp
push
lds
add
jno
insl
jbe
bound
push
lea
out
mov
jg
mov
pop
test
push
jg
push
es
jge
push
push
push
mov
mov
in
inc
pop
movsl
xorb
inc
fnstenv
push
icebp
dec
adcl
mull
outsl
jg
and
push
loope
mov
shl
cmp
jg
frstor
std
push
je
movsb
push
xchg
xchg
pushl
cmpb
jno
inc
nop
and
out
jne
int3
sti
adc
mov
aam
pop
add
ds
fisttps
xchg
orb
test
inc
inc
mov
out
fdivrs
dec
jae
je
sub
pop
out
mov
or
cli
pop
add
in
test
loope
sar
and
repnz
or
arpl
mov
pop
push
jo
dec
repnz
xchg
popa
pop
testb
mov
cli
sub
in
xchg
cmovae
jne
xchg
jle
dec
hlt
add
loop
iret
imul
ficoml
popa
jb
xchg
pop
or
push
sahf
sbb
mov
cmp
in
inc
sbb
orb
inc
inc
mov
add
data16
cld
xchg
imul
int3
cld
xlat
test
cmpsl
stos
mov
aam
mov
andps
fs
mov
jne
adc
pop
sub
inc
idivb
pop
jns
daa
orb
adc
pop
rcll
or
add
inc
xchg
mov
scas
insb
test
xchg
push
xchg
cwtl
jg
jbe
jl
dec
lods
int3
pop
sbbl
daa
lock
xor
cltd
xchg
push
push
enter
xchg
enter
pop
inc
ja
movsl
enter
mov
aaa
mov
icebp
jmp
xor
out
nop
ret
rcrb
add
mov
or
test
xchg
notb
and
mov
jo
mov
mov
add
outsl
add
jae
inc
repnz
inc
mov
xor
push
jl
push
stos
aaa
and
inc
jb
adc
ret
mov
test
sub
nop
xchg
outsl
adc
xchg
in
push
and
add
push
aaa
lret
push
and
adc
out
cmp
fwait
lods
xlat
mov
mov
fbstp
xchg
pushw
dec
dec
mov
sbb
test
icebp
mov
out
pop
sbb
jp
mov
cld
daa
mov
movsb
rcll
ljmp
xor
jns
or
jmp
bound
mov
repz
mov
xor
rcl
cltd
aam
xor
mov
dec
mov
mov
xlat
inc
xchg
pop
fisttpll
in
inc
mov
mov
xchg
insb
ja
or
mov
sarl
cmp
sub
pop
in
push
mov
cmp
leave
in
ret
loopne
push
psrlw
inc
test
shlb
mov
jmp
mull
mov
fsubp
ja
cmpsb
dec
dec
icebp
or
jb
pop
out
pop
jnp
fdivl
dec
movsb
decb
pop
xchg
hlt
in
jnp
adc
add
add
cmp
adcb
xchg
jecxz
dec
add
int3
mov
ljmp
sub
dec
pushf
outsb
cmpsl
test
fwait
std
dec
bound
stc
inc
clc
cmpsl
repz
lock
out
subb
push
push
mov
jge
pushf
pop
adc
jg
jne
cwtl
dec
add
xor
adc
jne
and
jns
cmpsb
ror
mov
xor
jl
rcl
divb
mov
push
ja
pop
mov
inc
xchg
or
es
dec
push
in
dec
hlt
lret
clc
or
mov
and
fmul
outsl
mov
xchg
std
icebp
fiadds
stc
add
or
testl
call
daa
inc
pop
fs
cmp
dec
pop
xor
jecxz
jb
fldl
xchg
and
js
and
in
xchg
dec
pusha
js
inc
xor
outsl
mov
insl
jle
je
add
sub
mov
icebp
sti
xchg
aas
jo
repnz
jl
sbb
cld
dec
movsl
call
sbb
jmp
inc
cmpsl
outsl
inc
cs
adc
scas
sti
push
dec
dec
popa
aam
add
nop
loope
cmp
adc
sub
push
cld
sbb
test
push
push
fs
ja
adc
pop
dec
mov
outsb
cmp
outsb
mov
jmp
repz
fmull
mov
lret
and
xchg
cwtl
add
jl
mov
insl
mov
scas
sub
adc
ret
push
add
dec
mov
or
mov
fwait
sarb
push
mov
sbb
loope
adc
push
aaa
repz
and
inc
adcl
ss
clc
xor
stos
push
sbb
mov
inc
adc
push
aad
push
adc
pop
xor
jae
xlat
cld
mov
pushf
push
fidivrs
and
cmp
sbb
sti
fwait
lcall
inc
stc
cwtl
sub
pop
jle
or
sub
sbb
jl
test
xor
mov
jnp
push
cmc
jp
jmp
cmpsb
das
inc
lret
dec
nop
testl
test
fistl
jle
inc
and
fmuls
adc
and
xor
aaa
pop
jecxz
cmp
cmp
mov
shlb
pop
xor
pop
aad
xchg
xchg
ljmp
out
outsl
or
mov
add
test
dec
cmp
div
push
das
jno
adc
pop
repnz
jle
mov
add
or
adc
cmc
neg
rcr
xor
into
icebp
push
stc
pop
jmp
add
sub
fstpl
mov
call
sub
xchg
fmull
imul
icebp
mov
mov
out
fnstsw
jmp
sahf
inc
sti
mov
ret
push
sbb
sahf
inc
mov
aam
subl
cmpsl
sbb
movsl
loopne
push
lret
xchg
and
pop
inc
cmc
xchg
sbb
adc
mov
pop
and
pop
into
lea
push
insb
cld
add
mov
jno
jbe
mov
mov
insl
dec
fimull
inc
pusha
mov
pop
aam
gs
es
clc
adc
or
sub
fisttps
xchg
jmp
roll
mov
in
sub
and
adc
gs
push
ret
movsb
test
cli
dec
and
push
and
insl
sarl
xor
push
jnp
add
sbb
xor
ja
xchg
cltd
and
mov
outsl
enter
xchg
test
mov
or
xor
mov
jp
xchg
mov
mov
or
or
xchg
sarl
mov
ljmp
cmp
mov
sub
decb
cmp
xchg
sbb
adc
fimuls
sub
push
mov
fisttps
jo
call
out
adc
inc
faddl
test
in
popf
jae
jl
icebp
xor
and
fidivrs
xchg
mov
inc
and
add
push
push
loope
adc
cmp
jmp
arpl
movsb
add
ret
imul
jge
stc
mov
stos
jp
in
pop
pop
cmp
pop
push
idivl
lcall
fs
nop
mov
pop
hlt
adc
cmp
scas
in
sbb
in
sub
mov
add
addr16
outsb
add
test
cmp
daa
cmp
mov
decb
push
imull
les
in
adc
ret
push
out
mov
repnz
and
sbb
mov
inc
popf
mov
fwait
out
dec
mov
arpl
jmp
test
js
ficoml
push
aam
and
fdivs
xchg
fcompl
pop
or
adc
bound
adc
adc
adc
pop
sbb
pop
fistpl
outsb
inc
or
sbb
std
fdivs
ljmp
mov
sti
out
sub
pushf
pop
pop
dec
aam
test
xchg
inc
inc
dec
test
xor
in
js
pop
jb
pop
xor
imul
insl
addr16
inc
jl
jl
add
jge
jge
faddp
jo
mov
fs
fdivl
cwtl
pop
push
imul
sti
jnp
psubusb
jmp
sbb
loopne
jns
pop
stos
inc
enter
jge
sbb
sbb
idivb
adc
lea
and
lret
mov
fs
es
sbb
lret
xchg
shlb
xlat
add
fwait
or
mov
es
stos
ja
sub
xchg
cmp
lea
sub
dec
fsubl
add
mov
jae
fs
shrl
movsb
or
out
fdivrl
cmp
inc
ss
hlt
dec
mov
push
loope
mov
xchg
sub
fsubrs
adc
mov
push
insb
xchg
clc
std
sub
or
lret
jg
adc
or
dec
test
jmp
pop
fists
cmp
fstpl
inc
xchg
xlat
jp
pop
jl
jl
xchg
add
les
mov
mov
rcrb
mov
test
add
jae
pop
jo
inc
les
xlat
popa
iret
or
arpl
inc
cltd
outsb
daa
push
jmp
pop
push
rcrb
sub
shlb
addl
pop
leave
push
mov
inc
inc
pop
mov
jge
jbe
repnz
outsb
mov
xchg
lret
push
jge
xor
out
sub
shlb
xchg
jno
or
out
mov
nop
jecxz
push
cmp
shlb
sti
mov
and
push
rcrb
mov
data16
add
loopne
hlt
popf
cmp
pop
data16
pop
in
fcmovbe
mov
gs
mov
adc
jo
icebp
xor
dec
add
rorl
or
lock
movsl
iret
icebp
ret
and
mov
aas
outsb
inc
das
adc
icebp
sbb
push
mov
or
jmp
loope
negl
and
pop
jmp
cmovle
adc
lahf
ret
sarl
push
daa
inc
adc
jl
aad
xor
in
int3
imul
xlat
lcall
dec
mov
out
cmp
dec
cwtl
mov
out
push
addb
cmp
lods
add
bt
push
iret
sub
aas
pop
clc
daa
or
xor
rclb
movsb
stos
cltd
lea
lock
inc
lds
cwtl
addr16
shll
dec
mov
mov
cmc
out
or
jecxz
mov
xor
imul
out
dec
jbe
cmp
in
js
ss
icebp
mov
push
push
pop
or
add
aas
dec
push
jae
and
jmp
inc
inc
jecxz
repnz
push
or
xchg
push
iret
std
jmp
arpl
mov
stos
adc
push
mov
xchg
in
xor
adc
movsb
sahf
fwait
movsb
push
sub
mov
rcrl
xor
xlat
mov
mov
sub
hlt
imul
jle
addr16
sbb
xchg
mov
mov
and
ljmp
mov
adc
xor
lret
out
mov
js
sbb
dec
aam
or
jmp
mov
js
adc
xchg
out
test
andb
arpl
xchg
imul
xorb
repz
push
mov
sub
jge
and
in
mov
test
cmp
rcr
xchg
and
repnz
push
js
jnp
dec
loopne
shrd
sub
dec
mov
pop
pop
jecxz
push
fisttpl
lahf
inc
je
sub
das
inc
je
add
pusha
add
jl
js
ss
push
mov
jle
std
test
mov
rcl
pop
jmp
dec
mov
pop
xchg
push
arpl
push
out
inc
setg
push
adc
frstor
enter
or
mov
pop
dec
lret
adc
push
adc
inc
mov
and
inc
test
dec
loop
add
sbb
push
xchg
in
rcrb
mov
cld
fbstp
jmp
jb
es
js
sbb
lret
lea
push
cld
int
or
pop
movsl
testl
dec
test
arpl
mov
mov
add
mov
pushf
xor
dec
imul
pushf
xor
and
test
pushf
sbb
cltd
rcrb
std
xchg
lahf
arpl
fs
mov
fildll
jecxz
xor
daa
pop
push
xlat
vcvtsd2si
add
fwait
jp
add
inc
cmp
inc
shrl
push
out
adc
fs
push
out
nop
inc
cmp
or
sbb
add
std
out
mov
lcall
hlt
fwait
repnz
addb
mov
pop
movsb
xor
fistl
dec
test
repnz
test
xchg
dec
mov
mov
out
xchg
mov
movsb
lea
xor
imul
or
mov
adc
mov
xchg
outsb
cltd
insl
das
addb
inc
or
push
push
and
aam
test
add
lods
mov
push
mov
ds
in
cmp
outsb
shlb
fmuls
xchg
xorl
dec
xchg
xchg
repnz
in
in
pop
lahf
shrb
adc
jp
scas
add
jge
aam
pop
mov
sti
inc
push
lret
scas
add
jp
add
and
jecxz
sbb
sbb
mov
loop
add
in
jmp
push
adc
pop
adc
in
mov
arpl
inc
sbb
and
stc
in
call
push
inc
outsl
add
sahf
mov
push
push
pop
sub
fimull
xchg
inc
shrb
aam
daa
shl
or
pop
cmpsl
pop
pop
xor
mov
xorps
daa
repnz
ljmp
out
movsb
mov
push
sbb
outsb
mov
negl
pusha
mov
ret
dec
dec
pop
test
and
fbstp
inc
or
imull
js
mov
out
sbb
jb
push
repnz
decl
std
sti
out
loopne
aas
out
movsb
pop
xor
add
repz
mov
cli
mov
sub
fwait
adc
or
dec
xchg
lcall
out
inc
push
mov
rcl
or
sbb
loopne
dec
mov
and
sbb
imul
je
adc
push
sti
add
sbb
inc
inc
lods
pop
fmul
popa
xor
inc
pop
push
cs
daa
push
ja
jg
fdiv
lods
xchg
scas
push
and
mov
jo
cmp
adc
mov
add
jo
pop
lods
stos
push
push
imul
adc
in
fnstenv
fistpl
pop
shll
and
push
push
mov
xchg
test
lret
adc
cwtl
mov
push
pop
repz
jnp
je
stc
xor
ret
sbb
mov
in
xor
pop
cli
pop
pop
pop
pop
or
repz
ss
subb
mov
cmp
icebp
stc
inc
or
add
out
in
or
js
out
adcb
decb
add
push
adc
add
sbb
aaa
in
jo
call
punpckhwd
mov
or
add
mov
inc
rcr
sub
push
outsb
rcll
addb
jmp
jns
dec
fcoms
mov
pop
dec
inc
loope
pusha
repz
or
cmpsl
jns
je
sub
jno
lock
addr16
sbb
or
cmpsb
add
out
sbb
cwtl
adc
add
fidivrs
test
add
inc
push
shlb
sub
inc
push
mov
inc
shrl
mov
sarl
lret
ret
idivb
in
in
sbb
ret
leave
jl
jbe
stos
dec
sub
adc
inc
xchg
nop
sub
lods
lods
test
stc
sbb
ds
and
mov
scas
shl
cmp
inc
jbe
xlat
ficoml
ret
dec
pop
popl
lock
mov
test
cmp
xchg
sahf
jl
shr
cmc
inc
inc
push
popf
mov
imul
add
pop
or
xor
hlt
data16
gs
pop
jecxz
addl
nop
adc
jbe
sub
arpl
dec
repnz
push
push
pop
xor
dec
imul
addr16
jmp
mov
ret
or
push
push
adc
pop
mov
push
and
cmp
sbb
ds
pop
lcall
mov
sbb
out
sub
mov
mov
adc
jp
inc
call
in
push
mov
mov
pop
jo
add
adc
cltd
add
aam
dec
cmp
xchg
jae
or
sub
clc
push
pop
add
aad
mov
stc
or
in
scas
call
out
sub
lcall
sbb
in
jp
push
xor
movsb
js
shrl
test
aam
orl
sbbb
lods
inc
ds
je
shl
xlat
jge
xor
sahf
in
adc
das
mov
sbb
pop
mov
negb
mov
jbe
cld
test
jmp
or
orb
out
sub
jecxz
pop
les
or
dec
dec
or
jg
mov
test
mov
mov
pushf
adc
mov
cmpsl
cmc
push
shl
jg
pop
jp
jo
imul
test
shrl
popa
lahf
data16
je
std
and
ja
mov
pop
sbb
pop
mov
pop
mov
nop
xchg
sub
or
fs
sbb
ffreep
xchg
fwait
les
adc
jne
mov
movsl
adc
into
popa
imul
sbb
rcll
xchg
js
clc
jle
mov
bound
sarl
outsl
xchg
les
test
ja
imul
cmp
add
cmp
mov
fldenv
pop
xchg
test
shll
iret
pop
cli
xchg
pop
je
lods
js
xchg
push
imul
stos
mov
fisttpl
lods
aam
sbb
jae
mov
cli
push
mov
jne
pop
jg
sub
fistpll
movsb
stos
cmp
stos
testl
iret
mov
sub
lods
and
jp
xor
inc
jl
inc
xchg
mov
inc
mov
dec
sub
and
ds
test
sub
lea
dec
mov
cmp
popa
ss
repnz
push
aad
and
jno
add
lods
sub
mov
call
cmovbe
adc
outsb
imul
mov
stos
les
addb
in
bnd
shll
out
inc
hlt
sar
mov
dec
jg
jg
adc
scas
and
ja
jae
dec
fstps
pop
and
adc
pop
and
call
jo
cmp
dec
out
jp
mov
jne
aaa
repz
mov
test
xchg
pop
lods
stos
mov
jg
sub
shrl
call
dec
pop
aad
add
test
and
jb
xor
popf
je
mov
xchg
ret
sub
idiv
xor
sti
sahf
and
xor
in
sahf
fistpll
aas
add
icebp
cmp
shlb
inc
idivb
dec
gs
test
in
adc
mov
pop
cld
sub
fwait
cltd
mov
or
push
data16
push
lods
test
mov
movsb
sub
dec
sub
dec
dec
sub
jmp
fidivl
aaa
dec
imull
inc
xchg
stos
sub
fprem1
cld
add
mov
cld
mov
mov
imulb
jbe
cmpsb
das
sbb
in
adc
jnp
xchg
out
out
clc
sti
jne
sbb
xlat
testb
aad
divl
bound
and
scas
je
dec
lahf
jle
shlb
push
fbstp
mov
mov
dec
and
cltd
gs
dec
add
jns
movsb
add
pop
call
pop
pop
andl
sub
out
dec
ret
and
test
inc
add
pop
dec
or
cmp
mov
scas
int3
adc
dec
in
cwtl
cmp
or
mov
faddl
pop
imul
dec
push
or
and
xor
jo
pop
mov
xchg
push
dec
ret
cmp
cmp
addr16
inc
fiaddl
xor
popf
int
shll
xchg
jecxz
jns
ret
lea
hlt
jne
push
xchg
push
mov
arpl
call
loop
push
es
mov
ds
jl
fstpl
aam
pushf
dec
or
push
xchg
mov
add
repz
add
js
dec
and
popf
faddp
les
jbe
push
or
enter
lret
push
jge
rclb
push
shrb
fwait
jmp
or
mov
sahf
in
in
mov
xchg
das
cmpsb
xor
cmpsl
arpl
enterw
push
push
pushf
inc
xor
jae
fucom
ror
stc
or
add
mov
mov
inc
and
push
sbb
jmp
loopne
icebp
mov
pusha
pop
scas
mov
int3
es
cmpsl
mov
xchg
bound
and
inc
or
loope
scas
gs
inc
jmp
fs
test
add
lods
enter
cmc
fs
xchg
cli
or
out
dec
inc
xchg
pop
mov
fildll
ss
inc
inc
inc
pop
clc
js
push
jb
sbb
mov
or
push
cltd
mov
pop
psrlq
insl
test
fmuls
push
lret
inc
mov
cmp
pop
jbe
ss
pop
cltd
pop
jle
gs
mov
repnz
pop
mov
shr
pop
pop
gs
out
push
lcall
rcr
inc
or
into
and
loop
sub
popf
pop
stc
lret
inc
dec
mov
out
ljmp
cmp
or
push
cmc
addb
add
jp
pop
xchg
out
mov
push
mov
sbb
mov
adc
dec
jnp
jmp
sbb
dec
leave
xor
jno
mov
push
idivb
cmp
pop
xchg
data16
xlat
add
lods
pop
rol
scas
dec
nop
cwtl
dec
push
cmpsl
mov
mov
sahf
pop
jno
dec
cmc
sbb
aas
lods
lock
cli
add
fisttps
icebp
push
or
mov
jle
or
cli
jg
adc
lcall
mov
sti
lea
test
or
popf
dec
dec
test
xchg
or
adc
pop
pop
inc
add
sub
adc
das
jmp
jae
and
ficoms
in
xor
mov
mov
jns
scas
pop
je
jmp
xlat
sahf
push
xchg
int
jb
ja
mov
arpl
imul
push
sbb
jae
mov
fs
dec
out
mov
idivl
cmp
out
jo
push
and
cmpsb
lock
fildll
cmp
pop
lahf
adc
mov
loopne
xchg
out
shld
int
shr
sub
loope
adc
je
mov
mov
adc
loopne
negl
mov
out
aaa
pop
int
in
inc
pop
ja
fwait
inc
test
pop
dec
loopne
and
je
stos
fadds
enter
mov
int
xchg
dec
adc
push
frstor
dec
mov
push
in
decb
xor
inc
xchg
mov
pop
push
mov
inc
sub
add
inc
dec
mov
mov
xor
das
je
adc
stos
call
jge
movsb
xchg
and
sarl
sbb
lds
dec
jl
dec
inc
inc
xor
in
lahf
andb
inc
mov
inc
movsb
loopne
sarb
movsb
dec
call
dec
and
scas
arpl
hlt
push
jl
into
out
test
mov
jge
mov
sahf
sbb
add
aas
jns
rclb
xchg
std
sub
or
mov
jge
fcomps
push
lahf
xlat
sub
dec
cmp
or
sbb
push
xchg
bound
add
jp
movsb
outsb
push
cmp
xchg
sub
dec
xchg
fs
add
and
mov
in
hlt
lock
xor
pop
mov
ficoml
repnz
lret
add
mov
out
push
cwtl
mov
cmp
pop
sbb
fs
ljmp
or
bound
mov
ror
test
and
adc
xchg
addl
pop
subl
sbb
jecxz
clc
xor
pop
adc
test
bnd
in
xchg
jecxz
icebp
mov
push
dec
movsb
push
add
mov
mov
or
fwait
inc
ret
add
pop
or
insl
inc
xor
loop
fnstenv
mov
add
push
push
mov
inc
outsl
adc
adc
xchg
dec
insl
js
and
rcl
mov
pop
lock
shrb
lcall
scas
mov
xchg
jno
xchg
lret
or
fidivrl
ds
hlt
int
mov
pop
loope
xchg
js
adcl
or
push
mov
jno
loope
movsb
mov
inc
je
gs
dec
out
adcb
xlat
adc
in
arpl
adc
jge
fs
repnz
jp
fwait
pop
sarl
sub
adc
sbb
fildl
mov
jb
mov
jp
pop
seta
or
mov
mov
fwait
xor
xchg
adc
sub
inc
or
mov
dec
sti
jmp
ret
jecxz
push
test
mov
cld
sahf
jp
xor
xor
lods
test
mov
jno
xor
inc
sbb
clc
stos
fimull
sbb
mov
insl
mov
mov
sbbb
lret
jecxz
adc
and
stos
stc
dec
jnp
popf
sub
xchg
aad
and
xlat
dec
js
roll
lock
mov
or
movb
insl
mov
int
test
mov
add
inc
mov
aam
cmp
sbb
aas
lret
js
pop
mov
nop
or
rclb
inc
jne
pop
mov
push
loope
stos
and
dec
insl
and
pop
mov
nop
mov
mov
cli
sbb
push
test
or
adc
jecxz
imul
adc
mov
jmp
sti
adc
icebp
inc
or
pop
repnz
fnsave
add
test
clc
adc
pop
push
or
adc
jnp
inc
push
xchg
lcall
sbb
adc
xor
sub
repnz
xor
pop
test
xlat
daa
decb
mov
sub
and
test
xchg
rclb
imul
icebp
pushf
adcl
mov
xchg
mul
add
mov
lahf
xchg
cmpsl
inc
js
sub
testl
fs
xor
fbld
fbld
cmpsl
dec
loopne
or
imul
mov
incl
cmp
aad
xchg
cmp
mov
dec
jp
rorl
cwtl
aam
inc
imul
pop
xchg
push
add
mov
icebp
lea
mov
mov
push
xlat
cld
pusha
cmp
push
and
out
in
mov
lods
es
ret
inc
pop
aam
inc
jns
insl
insb
sub
outsl
stos
inc
call
inc
jne
arpl
mov
lret
sub
enter
in
or
jl
test
subb
loopne
mov
jmp
test
fwait
sbb
push
fnsave
mov
push
iret
insb
xchg
dec
push
in
dec
out
and
ss
xchg
enter
data16
dec
outsl
pop
fwait
es
mov
mov
xor
jno
mov
mov
jns
mov
out
mov
scas
add
hlt
mov
mov
movsb
pop
jb
popf
or
sub
inc
push
stos
fidivl
or
fiadds
js
push
lock
loope
inc
bnd
cmp
js
sti
and
or
adc
or
dec
cmp
loopne
movsl
leave
sti
lock
push
dec
lahf
and
insb
xor
ret
cwtl
ret
mov
and
mov
add
out
out
out
mov
gs
pop
test
ret
pop
loop
out
js
jne
inc
dec
fwait
std
mov
ret
mov
das
lea
test
cmp
jg
insl
fisubl
sub
add
xor
xlat
inc
fistpl
adc
pop
enter
out
jo
xchg
out
jnp
mov
xlat
cmp
ret
movb
into
rol
cmp
testb
ds
int3
pop
add
jbe
andb
in
pop
mov
scas
and
ljmp
aas
sarl
push
repnz
dec
jge
add
out
jne
insl
sbb
push
jg
movsb
inc
stos
dec
pop
lea
xlat
sbb
xlat
outsb
xchg
mov
sbb
pop
add
sub
xor
add
movsl
and
divb
adc
movsl
pop
add
xor
adc
cmpb
pop
repnz
add
in
fisttpl
testb
lods
les
test
inc
adc
add
into
jmp
faddl
outsl
cmpsb
mov
inc
lret
adc
jns
push
iret
jle
xor
or
xor
jge
fwait
jmp
inc
push
xor
cmpsb
into
std
inc
xchg
sbb
addb
jl
xor
cmp
xchg
addr16
outsl
popa
data16
jecxz
fldenv
jnp
pop
xchg
or
adc
mov
pushf
jae
push
sbb
or
ja
aad
stos
scas
add
aam
cli
mov
punpcklwd
fwait
imull
aam
cmp
lea
arpl
ja
aad
or
adc
jno
lahf
enter
pusha
mov
or
adc
sahf
fcomps
sbb
mov
test
add
in
jo
push
or
push
or
scas
inc
adc
push
int
mov
mov
out
sahf
jl
add
lods
mov
bound
push
xchg
pop
lods
fwait
adc
mov
jae
insl
dec
xchg
cmp
jg
js
mov
adc
dec
inc
mov
scas
repz
repz
scas
push
movsl
pop
test
adc
jne
inc
adc
push
popf
fcmovu
ret
repnz
push
xchg
mov
cli
pop
test
inc
sti
xchg
push
jle
rorb
inc
int3
leave
mov
xlat
orb
decl
mov
fisubrl
rcll
in
sahf
pop
cld
andl
out
inc
cmp
negb
add
or
pop
das
dec
pop
cmp
or
cmp
inc
and
flds
arpl
fisubl
insb
xor
sti
lock
push
fcoms
pop
lea
je
lret
dec
gs
sahf
arpl
imul
inc
lods
sub
push
jb
or
testb
add
cld
je
pop
sbbb
mov
lcall
int
jl
sub
mov
pop
aas
hlt
out
mov
add
cmp
mov
orb
pushf
inc
cmp
out
dec
pop
stos
das
orl
add
sbb
pop
test
pop
and
je
sar
pop
fcmovnu
xorb
push
fs
iret
xor
cmp
jns
inc
mov
es
cmp
idivl
lock
dec
aad
hlt
add
scas
mov
aas
mov
scas
push
xor
stos
rcrb
pop
adc
arpl
mov
dec
dec
jp
add
dec
aad
arpl
movsl
push
and
fs
cwtl
sarl
ds
lret
push
stc
mov
cld
sbb
add
jae
pop
clc
push
std
arpl
push
icebp
pop
enter
sub
aad
mov
divps
push
mov
outsl
sbb
lods
dec
cmp
pop
js
sbb
sti
es
and
addr16
or
xor
inc
jp
addr16
mov
adc
cmpsb
push
out
sub
mov
adc
mov
push
mov
sbb
xlat
adc
repnz
test
out
mov
and
push
stos
inc
jecxz
fimull
je
or
outsb
test
or
jge
mov
insb
notb
jl
lds
adc
call
adc
pop
ss
jmp
cmpsb
mov
popf
cs
fisttps
out
sub
xchg
mov
ret
inc
xchg
xchg
ret
mov
sbb
pop
dec
xchg
in
fiadds
adc
cmpsb
inc
stos
mov
cli
push
aas
inc
sbb
stos
imul
mov
or
mov
xor
push
lea
push
sub
shlb
sarl
mov
and
sbbl
call
jnp
or
push
testl
in
aas
dec
push
add
cmp
mov
orb
xor
inc
sti
jo
sub
cmc
xchg
cmova
test
insb
sub
addr16
inc
aaa
pop
add
movsb
xchg
inc
xor
cmp
mov
mov
mov
int
sbb
and
cmp
popa
push
fwait
int
dec
inc
sbb
adc
and
repnz
xchg
cltd
and
or
mov
push
push
mov
sbb
jmp
fimuls
or
or
mov
daa
push
rclb
mov
fbstp
mov
dec
xor
out
clc
ja
jno
fcmovnb
cmpb
mov
out
in
mov
jge
adc
lret
fdivrl
mov
jns
inc
arpl
xor
imul
in
jae
xchg
adc
mov
imul
orl
add
jbe
lock
mov
dec
std
jmp
pusha
arpl
mov
inc
mov
mov
xchg
int
icebp
imull
push
mov
add
or
dec
lods
shlb
cmp
cltd
in
xchg
je
sub
ljmp
or
in
adcb
cmp
ja
push
push
inc
sub
xchg
sbb
xchg
jns
inc
push
mov
dec
sbb
icebp
out
add
clc
xchg
push
ja
adc
add
out
mov
mov
shrl
xor
test
scas
scas
out
dec
sub
call
pop
movntq
call
xlat
jecxz
push
xor
fldl
push
mov
mov
rcr
adc
mov
xchg
jge
loope
fimull
cli
fnsave
aam
xor
pusha
mov
sti
cmp
sub
loop
cmp
add
xchg
call
cmp
es
loope
out
adc
jbe
fwait
jno
scas
jecxz
aam
sarl
inc
shrd
mov
cmpsb
add
jecxz
xor
in
mov
movsl
mov
push
inc
sbb
cmp
or
sbb
pop
out
push
xchg
xchg
repnz
jmp
sbb
jl
repz
jecxz
fstl
pop
fs
dec
inc
enter
ljmp
insb
enter
fbld
std
sub
je
jno
or
push
inc
mov
mov
mov
fdiv
push
jb
adc
shll
sbb
clc
testb
movsl
aad
or
pusha
cmpb
popa
xor
jecxz
sbb
cltd
xchg
inc
popa
and
outsb
call
outsb
les
dec
subb
xchg
aam
jns
cld
dec
sub
jl
lcall
hlt
sti
lea
aam
repnz
outsb
mov
jmp
sbb
clc
pop
ret
loop
xchg
lret
test
pusha
mov
add
std
clc
jge
divl
xor
cmp
and
jmp
mov
push
mov
outsb
sbb
jo
out
sbb
gs
dec
stos
jecxz
stos
ret
sbb
mov
test
sbb
hlt
or
jecxz
push
and
cmpsb
push
aaa
lock
daa
test
subl
movntq
icebp
mov
jle
std
cmp
iret
fadds
stos
test
sbb
cli
push
jo
or
fistpll
jecxz
sbb
fsubrl
sbb
popf
psrlq
clc
add
mov
cmp
or
int
outsb
sbb
jns
sahf
inc
jge
mov
hlt
dec
ret
inc
icebp
xchg
cmp
test
or
adc
push
jae
leave
int3
and
sbb
cmp
daa
xchg
aaa
or
xlat
jecxz
sbb
and
ja
inc
lret
jns
add
adc
mov
push
jb
pop
mov
xor
into
sbb
jecxz
pop
mov
test
shlb
dec
bound
ja
mov
xchg
jmp
enter
decl
xor
clts
jbe
mov
dec
cli
jge
and
aaa
cmp
loopne
cs
sahf
mov
out
popa
xor
jnp
mov
arpl
inc
adc
fists
jno
lds
jl
jne
push
sbb
inc
lods
jp
std
pop
data16
lods
in
test
push
or
fucomp
orl
popf
pop
mov
mov
fcomps
cmp
xor
clc
xor
cmpsl
pop
cltd
lret
xor
pop
pop
ljmp
rorb
mov
mov
and
fwait
sbb
cmpsb
push
xlat
ja
test
jecxz
icebp
sub
repz
mov
push
out
int3
repz
inc
shl
xlat
pop
xchg
mov
cmp
outsb
out
hlt
push
lcall
scas
daa
leave
jno
adc
stos
xchg
adc
gs
inc
xor
je
push
adc
movsb
xchg
rcll
inc
jb
idivb
jno
idivb
adc
or
addl
xchg
test
lahf
mov
inc
std
jl
clc
in
or
or
mov
call
std
sti
dec
insl
xchg
xlat
dec
sub
in
sub
push
jle
das
pop
mov
stos
and
sbb
imul
inc
inc
xor
pop
pop
jl
mov
pop
or
jmp
aas
jno
js
push
xchg
rorb
inc
dec
test
nop
sbb
and
add
sbb
out
call
sbb
test
push
scas
push
xchg
and
cmpsl
daa
jne
fmuls
repz
sub
jle
cmpsl
add
sbb
sub
mov
xchg
xor
cmc
cmc
xchg
pop
sbb
test
fiadds
lock
pop
inc
mov
cmp
push
ss
cmovl
out
add
push
imul
rcll
pop
pop
addl
loopne
aaa
aad
sbb
xchg
loop
xchg
sti
push
mov
adc
push
movsb
cmp
mov
and
xor
or
orl
dec
lcall
cmp
out
jge
popf
pushf
cmp
mov
sbb
cmpsb
cwtl
mov
fwait
sub
add
fucomip
hlt
dec
push
icebp
js
mov
sbb
ja
ret
push
inc
sub
fiadds
inc
sti
adc
sbb
into
mov
mov
fcmovne
repz
add
jb
inc
aad
popa
adc
inc
js
fdivl
sub
pushf
sarl
xor
pop
stos
mov
subb
add
pop
daa
cmpsb
imul
jecxz
xchg
cld
or
xor
dec
push
and
pop
scas
popfw
and
pop
add
scas
popf
add
call
cli
mov
adc
std
push
mov
and
mov
xchg
lret
sub
adc
cwtl
add
loope
popl
js
adc
and
loope
scas
int
pop
test
xchg
test
fsubrs
fldt
imul
cld
js
pop
dec
xor
add
or
push
push
out
mov
or
xor
adc
or
add
cmp
std
push
push
notb
push
fisttpl
hlt
leave
aaa
movups
mov
and
rolb
pop
push
dec
in
jg
mov
iret
mov
clc
push
adc
add
jmp
mov
jge
lock
xchg
cs
push
or
clc
inc
in
int3
inc
pop
xchg
je
mov
fadds
into
adc
lcall
mov
mov
je
sub
or
push
push
sub
test
sub
test
add
in
int3
mov
inc
in
ja
adc
and
daa
stc
arpl
mov
add
into
out
or
dec
loopne
xor
or
fcoms
pop
loop
daa
imul
xchg
call
iret
test
hlt
push
and
sbb
cmc
add
sbbb
negl
xchg
dec
dec
fdivrp
mov
scas
adc
and
fwait
cli
std
aaa
xchg
stos
mov
fdiv
fadds
ret
mov
aaa
push
outsl
fwait
lds
lods
xchg
push
fsubrs
cld
loope
inc
notb
push
roll
inc
jmp
mov
out
or
outsl
mov
push
sbb
sub
push
scas
rorb
xchg
scas
jae
sahf
and
mov
filds
or
sub
leave
cltd
adc
adc
das
pop
push
jg
or
arpl
mov
shlb
sbb
sub
bound
repz
pop
mov
inc
pop
xlat
push
dec
out
je
roll
xchg
mov
pop
add
mov
or
dec
xor
cmp
idiv
lds
inc
jae
clc
dec
hlt
dec
dec
pop
andl
lahf
adc
sub
outsl
icebp
lret
das
in
add
mov
in
add
test
sbb
nop
lahf
popa
dec
xchg
repnz
mov
mov
or
mov
xor
inc
cwtl
or
arpl
sarb
or
jno
mov
xorl
outsl
fstpt
cmp
push
stc
dec
xor
aad
sbb
mov
stc
jge
push
adc
add
add
mov
test
aaa
mov
sub
jns
mov
sub
fisubl
les
push
mov
loope
xchg
mov
sub
push
pushf
into
out
sub
ss
inc
clc
push
and
insl
or
push
insb
jae
add
dec
pushf
dec
scas
jnp
test
xor
cli
xchg
inc
pop
xchg
jp
push
mov
adc
div
test
xchg
fisttpl
mov
mov
and
test
fnstcw
pop
out
repz
test
mov
out
pop
outsl
loope
lcall
push
fwait
xlat
add
in
cmpsl
movl
out
jne
inc
push
push
test
add
mov
inc
sub
dec
cmp
mov
jne
xchg
mov
mov
jo
sti
mov
xchg
stc
arpl
jnp
pop
sub
cmc
js
stos
push
ret
mov
popf
add
xchg
push
xchg
push
xchg
dec
sub
push
add
xor
cmp
inc
stc
fists
test
or
mov
add
rorl
mov
jl
mov
fdivrs
mov
pushf
cwtl
mov
inc
mov
in
rdpmc
cltd
cld
movsl
addl
adc
mov
pop
in
aam
ja
xchg
mov
fsubr
or
push
clc
jae
xor
pop
mov
sarl
incl
jo
xor
sub
add
xchg
pushf
mov
add
jge
icebp
bound
mov
mov
das
mov
inc
xchg
add
adc
dec
cltd
into
sub
ljmp
jp
push
or
adc
imull
push
mov
lret
inc
outsl
adc
jo
fidivl
and
daa
xorb
rclb
or
pop
add
jecxz
cmp
cmpsb
pop
outsl
dec
pop
xor
pextrw
pop
mov
xchg
xchg
jmp
mov
inc
mull
pop
in
mov
daa
fwait
pop
adc
arpl
mov
cmpsl
xchg
xchg
push
testl
xchg
stos
and
sar
fsubs
sahf
mov
mov
mov
push
decl
adc
adc
lock
repz
les
cltd
xchg
sbb
sub
loop
leave
lds
cmp
or
les
clc
out
add
sub
jg
aam
push
int
hlt
push
sbb
sub
pop
ja
sub
jge
add
repnz
popa
add
stc
inc
push
dec
fisttps
fnstsw
iret
xor
pushf
add
and
push
negl
jb
adc
loopne
mov
and
cmp
scas
in
js
inc
mov
lahf
sahf
xor
push
rolb
shll
mov
daa
xor
fisttps
xor
je
xor
fdivrl
pop
sub
adcl
sub
and
fsubs
mov
cmp
mull
mov
mov
adc
mov
mov
inc
sbb
leave
gs
out
jns
mov
or
scas
jg
out
sbb
hlt
sub
fs
movsl
xor
xchg
push
inc
fistpl
jnp
insl
cmpsl
inc
cmp
jge
push
adc
cltd
icebp
pop
mov
xchg
ja
inc
fisubrs
jne
jmp
repnz
fisubl
sbb
dec
push
cmp
in
insl
nop
fwait
repz
je
daa
popf
adc
dec
xchg
mov
push
inc
push
mov
pop
icebp
pop
out
jmp
mov
mov
cli
cmc
jmp
outsb
aaa
xchg
xchg
jne
and
icebp
lods
into
cltd
or
inc
outsb
movsl
lea
adc
adc
jle
add
jns
xlat
shrb
cld
fcmovu
push
dec
cmp
fadd
push
pop
xchg
fimull
popa
dec
adc
cmp
idiv
cmp
movsl
or
push
jb
adcl
or
xchg
mov
push
test
pop
iret
or
fcomi
jo
mov
aad
mov
stos
mov
shrl
loopne
sub
int3
adc
hlt
fidivl
sbb
sbb
in
pop
out
or
popa
xchg
in
std
pop
in
sbb
xor
jno
fwait
adc
jno
and
sub
add
mov
xchg
movsb
xchg
movups
dec
ret
les
fsubs
pop
push
mov
popf
push
ret
mov
pusha
imul
inc
jb
jg
jecxz
fildll
jg
daa
mov
add
imul
jg
xchg
jge
es
cwtl
dec
nop
jo
xchg
testb
cwtl
xlat
mov
inc
and
dec
mov
jae
in
out
leave
mov
stos
nop
push
sub
andl
jle
lahf
popf
loopne
movsl
fwait
jle
and
mov
iret
mov
inc
mov
fildll
adc
inc
xor
mov
or
ds
xchg
pushf
incl
ficompl
arpl
and
arpl
dec
or
or
out
pop
stc
xchg
jp
pop
xchg
and
jbe
push
pop
pop
test
sbb
lods
adc
in
jecxz
jb
pop
cmp
ret
jbe
push
jecxz
movsb
adc
lcall
inc
addr16
jae
orl
test
or
add
jl
ljmp
pop
in
out
outsl
push
mov
fstps
loope
jp
push
es
icebp
add
mov
sbb
dec
inc
push
out
rolb
push
outsb
xor
inc
push
ja
or
lcall
adc
hlt
mov
jge
mov
ficompl
inc
dec
mov
mov
test
mov
sub
in
add
rcr
jg
or
fisttps
not
lret
mov
gs
xchg
js
jo
mov
lods
aaa
arpl
cmovl
rsqrtps
xor
loopne
lods
loop
jno
jg
sub
imul
out
gs
enter
mov
insl
dec
xor
pop
fisttpll
sbb
xchg
mov
flds
imul
jmp
call
nop
xlat
test
lods
xor
pop
mov
add
out
mov
lcall
push
aam
jae
in
imul
stos
ljmp
pop
mov
jns
sbb
loopne
lods
sub
loop
and
movsb
lds
rcrb
mov
stos
fldt
lds
push
inc
mov
orl
dec
cmpsl
cmp
repz
sbb
add
mov
xor
and
mov
stc
jge
jp
mov
lcallw
test
fcmovnu
or
xchg
fstpl
out
in
xorb
dec
divb
adc
sub
push
fwait
aaa
cmp
gs
pop
fdiv
pop
popa
mov
aaa
shll
ret
sbb
decb
mov
cli
add
pop
ja
sub
and
imul
rorl
leave
fs
hlt
in
nop
repz
push
pop
jae
cmpb
adc
jo
adc
mov
mov
loope
inc
sub
mov
inc
idivl
cmpl
popf
repnz
jae
and
push
xchg
pop
lds
add
iret
push
or
pop
inc
add
mov
into
ret
popa
jmp
mov
fadds
lods
pop
jmp
lods
add
push
mov
xchg
pop
sub
add
dec
sub
nop
lcall
popa
out
mov
and
xor
bound
pop
sbb
sahf
mov
mov
add
hlt
dec
jo
clc
ds
fstpt
loop
enter
push
call
adc
sbb
mov
inc
pop
pop
cmp
mov
or
sti
subb
mov
and
pop
mov
jmp
stc
push
inc
add
push
push
xor
add
add
inc
test
xchg
xchg
mov
out
jl
or
xchg
push
cmp
push
add
cmpsl
stos
jae
cmc
lret
and
cmpsb
mov
push
fildll
add
mov
leave
adc
xchg
daa
adc
xchg
sub
ret
xchg
adc
add
cmpsl
cmp
mov
fiadds
ret
mov
test
push
pop
testl
sti
xchg
mov
cmpsl
xlat
sub
cmc
mov
inc
xchg
mov
aas
loope
sub
jmp
cmp
lret
decl
adc
clc
clc
push
mov
pop
jo
mov
mov
leave
xor
popf
push
lods
jecxz
jno
push
nop
mov
mov
jl
dec
std
dec
jl
dec
mov
inc
and
ljmp
mov
outsl
sub
jnp
jle
jb
mov
in
test
or
push
das
dec
fwait
push
push
adc
mov
add
mov
hlt
mov
ljmp
adc
pop
testb
fldenv
sub
add
cld
jmp
movsl
pop
into
jmp
xlat
and
insl
aam
mov
add
dec
ja
loop
filds
lock
mov
add
addr16
iret
jb
mov
nop
daa
inc
leave
push
xchg
mov
bnd
and
jb
pusha
pop
mov
xor
adc
ds
add
stc
adc
dec
mov
stc
into
mov
mov
jnp
xor
inc
das
inc
imulb
xor
in
cmp
dec
sbb
xor
mov
sbb
test
dec
push
rcrb
inc
or
push
dec
mov
xchg
lds
out
inc
mov
and
loop
call
pop
ds
sahf
inc
ret
fsubrs
inc
jne
addr16
sub
mov
mov
cmp
pop
std
call
pop
shll
popl
adc
insb
xchg
jns
subl
add
xchg
and
fdiv
or
je
stos
pusha
roll
pop
scas
in
cmp
xchg
cmp
lods
jbe
sbb
mov
scas
sbb
pop
add
icebp
jl
sbb
pop
mov
dec
and
insl
pop
leave
sbb
lahf
inc
sub
fidivrl
mov
out
dec
popf
inc
adc
ficoms
incb
pop
and
add
and
popf
mov
or
add
push
leave
std
int
ljmp
xchg
iret
push
call
cmp
out
lods
cwtl
fiadds
or
cmp
and
lods
xor
mull
out
ds
lret
adc
add
sub
fmul
mov
sbb
sub
out
leave
xchg
push
push
sahf
ds
or
add
das
insb
add
sub
dec
pop
fcmovnb
adc
jns
push
enter
mov
cmpl
adc
cmp
insl
push
test
into
cmpsb
dec
xchg
xchg
jno
push
cs
ficoml
dec
aad
push
aas
sub
or
dec
in
mov
out
cmp
sub
push
xor
jl
les
div
lahf
pop
cwtl
inc
and
inc
jle
js
push
idivb
jbe
add
mov
popf
push
mov
jns
sbb
adc
sub
mov
test
sbb
movsl
mov
ret
sbb
push
in
gs
out
inc
jle
or
divb
cmpsl
or
cmp
ficoml
mov
cld
adc
dec
mov
in
mov
xchg
push
jne
sub
test
lods
sarl
mov
in
dec
mov
flds
rcll
cmpb
cmpsl
add
aas
loope
notl
push
scas
aaa
pop
in
stc
inc
xor
adc
shll
inc
lods
rcrb
mov
lods
cmp
sub
push
ds
jl
add
fdivrl
cltd
jne
mov
dec
jns
mov
imul
adc
fwait
xor
cmp
add
je
push
cli
mov
inc
cmp
js
cmc
aas
imul
int3
push
in
dec
imul
add
mov
stc
mov
in
scas
jns
bound
das
test
push
mov
adc
push
popf
jp
outsb
add
hlt
aas
dec
fs
pop
inc
lods
xchg
mov
fwait
out
jge
sub
imul
push
push
jecxz
shlb
shr
mov
push
in
repz
inc
pop
fwait
adc
push
das
fdivl
cwtl
push
jge
add
sbb
pop
push
cwtl
fstl
push
jle
mov
subb
add
sbb
cs
xchg
add
add
enter
or
xor
dec
cmp
push
push
divl
mov
clc
loopne
push
std
fs
stc
imulb
fnsave
add
sbb
xchg
inc
nop
ss
das
push
cld
fs
insb
out
fldt
inc
mov
and
imul
sbb
xchg
std
in
pop
pushf
push
pop
push
mov
fiaddl
and
push
jb
jb
lods
out
aam
jnp
mov
aas
pop
push
xor
mov
mov
and
dec
aad
dec
cs
pop
test
popa
pushf
push
pop
repnz
dec
iret
xchg
mov
popf
fistps
jl
pop
sbb
dec
sbb
int3
je
enter
add
lahf
leave
sub
ss
dec
pushf
push
push
mov
xlat
jle
sbb
jp
xchg
xchg
sub
adc
xchg
xchg
addr16
pop
jnp
movsb
bound
sbb
or
rorb
fdivs
push
jno
iret
arpl
dec
or
rcrl
push
test
leave
cmp
or
mov
add
mov
outsl
stc
adc
pop
shrl
sbb
hlt
mov
jae
cwtl
repz
push
mov
jl
dec
xor
cmp
sbb
sti
gs
jmp
fucomp
adc
sbb
cltd
mov
jge
je
xor
push
gs
loopne
popf
push
push
add
daa
push
jo
pop
push
or
jmp
sub
aas
sbb
mov
pop
lcall
inc
inc
pop
add
ja
pop
mov
mov
add
outsl
or
dec
pop
jle
arpl
inc
cwtl
mov
gs
cmp
cmp
add
rcl
cmp
jmp
xlat
nop
or
cmp
inc
and
add
xor
push
stos
mov
mov
addb
cs
out
sbb
inc
out
out
dec
push
outsl
sahf
imulb
add
stos
shrl
pop
call
sub
mov
inc
inc
cs
outsl
push
xlat
ret
push
shll
push
pop
sub
mov
movsl
gs
pop
lret
push
push
cwtl
js
lds
lea
imul
mov
inc
sarl
ret
out
inc
push
mov
push
pop
fs
shll
hlt
sub
xor
mov
sti
adcl
push
xchg
insb
fisubrl
mov
push
sti
andl
imul
push
jb
add
test
and
push
cld
or
add
mov
push
nop
test
leave
loop
inc
int3
xor
ljmp
aaa
sti
push
xor
inc
pushf
bound
or
cmpsl
idiv
out
or
ficoml
push
movsb
imul
cmp
mov
icebp
cs
imul
dec
in
ds
out
fistl
mov
or
fcoms
int
pop
sub
test
call
cmp
pop
mov
test
xor
int
adc
push
xchg
push
js
push
cmpsb
inc
xor
shrl
pusha
imul
adc
mov
xchg
xchg
or
mov
dec
cs
test
jb
mov
not
pop
fs
mov
cmp
in
or
inc
jnp
cmp
pop
scas
add
daa
add
cwtl
cmp
cmp
xorl
sub
mov
pop
repnz
inc
shl
inc
dec
add
arpl
mov
fwait
std
inc
mov
outsb
rcrl
adc
mov
js
push
leave
fcom
sub
jae
sub
addr16
aaa
test
and
cmp
rorl
xrelease
hlt
sbb
std
jp
push
std
or
adc
mov
ljmp
dec
or
loopne
jl
or
popl
lahf
mov
mov
test
push
push
fiaddl
jb
adc
lret
or
fildll
dec
xchg
pop
jmp
shlb
ficoms
mov
les
mov
shlb
sbb
push
not
shlb
jge
aas
pop
sbb
jno
repnz
test
mov
pop
mov
xor
leave
mov
ja
inc
ret
add
aam
pop
stos
sbb
fsubrs
dec
out
mov
pop
mov
cmp
movsb
add
das
mov
movsb
movsb
ds
inc
ret
xor
fistps
adc
inc
das
mov
adc
push
mov
pop
repnz
jb,pt
popa
lret
fildl
xchg
call
test
dec
xchg
pop
sub
jae
inc
adc
repnz
jbe
pop
adc
mov
lock
mov
inc
out
dec
push
pop
cwtl
out
js
cmp
xchg
andb
str
sahf
pop
dec
or
inc
mov
sti
into
xor
dec
scas
or
test
loop
sbb
push
jns
std
mov
xchg
repz
call
in
aas
fisubl
sarb
icebp
sub
aad
xor
xchg
in
cs
lods
cmp
xchg
clc
add
xor
imul
or
les
and
std
bndldx
mov
cli
push
push
inc
arpl
and
test
xchg
inc
imul
pushf
out
xchg
in
sbb
push
faddp
es
xchg
daa
aas
sar
or
sbbl
mov
add
notl
adc
aad
cld
sbb
xchg
shrl
or
jbe
mov
repnz
sbb
adc
mov
inc
aad
and
lcall
lret
addl
push
insl
repnz
in
ljmp
in
jae
mov
inc
or
push
inc
fdivrl
shll
xchg
inc
mov
movsb
jl
jl
das
dec
pop
inc
inc
orb
dec
push
je
or
dec
inc
xchg
jle
mov
pop
sub
and
movsl
aam
inc
sarb
aam
push
adc
jbe
xchg
lea
lahf
adc
add
loopne
popf
pop
add
cltd
xor
and
xor
or
mov
or
inc
or
fdivl
pop
mov
adc
pop
push
push
push
inc
inc
push
or
dec
add
push
stos
loope
out
dec
int3
pop
orb
push
popf
ret
dec
movsb
xchg
fidivrl
andb
inc
das
jno
pushf
jmp
dec
mov
sbb
cmp
rorl
inc
out
push
push
push
jge
es
adc
jbe
sub
loopne
jmp
pop
cltd
or
xor
std
mov
add
fwait
cmp
mov
mov
pop
push
loopne
ljmp
adc
sub
cmp
add
shlb
inc
hlt
mov
ret
dec
sub
pop
sub
sbb
mov
xchg
ljmp
add
jns
mov
xor
lcall
js
push
and
cmpsl
pusha
call
bound
jb
jp
sbb
dec
pop
shl
sub
shrb
add
repnz
out
jns
call
test
push
mov
mov
pop
int3
and
mov
mov
daa
mov
mov
pop
jo
push
lods
and
les
dec
lock
and
and
std
aas
pop
and
adc
sub
pop
in
mov
mov
sti
dec
adcl
and
imul
dec
incb
mov
je
imul
negb
pop
shlb
xor
inc
out
ja
mov
jmp
jne
cmp
in
xchg
xor
mov
icebp
fs
add
mov
ja
jo
mov
and
test
or
in
aas
cld
divb
or
mov
js
sub
test
push
pop
xor
mov
rorl
dec
outsb
jbe
sbb
sub
mov
stos
repz
add
xchg
aad
dec
inc
cs
jbe
cmpsl
sbb
adc
add
andl
aam
test
push
jo
stos
sbb
adc
mov
sbb
inc
inc
adcb
jae
outsb
mov
push
fndisi(8087
mov
push
cwtl
push
int3
and
insb
movsb
cmpsb
out
enter
xchg
jp
inc
lods
imul
pushf
and
adc
inc
int3
xchg
pop
loopne
mov
jecxz
out
test
jns
repnz
sarb
mov
movsb
push
stc
and
xchg
jge
repz
jns
inc
sub
clc
jp
sbb
in
adc
sub
insb
mov
pop
push
and
jns
pop
sbb
cmp
push
inc
das
imul
jmp
jge
pop
sub
imul
ja
mov
loope
adc
hlt
cs
inc
and
adc
js
cli
mov
adc
mov
loope
ror
jge
push
mov
push
lea
notl
icebp
int3
rol
icebp
in
icebp
mov
mov
stc
adc
fiaddl
pop
and
pop
add
dec
mulb
test
test
cmp
mov
dec
ja
push
add
sbb
subb
sbb
in
push
push
jmp
stos
clc
jne
cmp
stos
or
fs
adc
and
pop
mov
jno
or
sub
and
call
dec
mov
outsb
leave
inc
adc
mov
mov
lods
fcmovnu
mov
add
adc
push
and
xchg
jecxz
and
sub
and
shll
push
mov
arpl
incb
mov
cmp
mov
jp
push
add
mov
or
sbb
out
dec
and
and
mov
adc
push
push
sbb
mov
fdivs
dec
xorl
ret
push
jo
arpl
cmpb
std
loope
sbb
add
mov
mov
add
jns
cs
push
negb
dec
xor
inc
jo
movb
loop
test
cmc
mov
lock
and
adc
push
push
movups
pop
xchg
leave
push
divb
lock
das
jns
sahf
add
pop
and
xchg
mov
cmpsl
in
mov
pusha
out
sbb
xchg
push
adc
das
push
pop
js
cmp
pop
movsl
es
mov
fcoms
test
fbstp
add
dec
pop
push
xchg
cmovo
test
cmp
cltd
mov
loopne
ret
adc
mov
mov
push
lea
cltd
cmc
push
jmp
mov
add
fucom
testb
addl
push
mov
push
cmp
xchg
jmp
sti
mov
adc
mov
fwait
popf
inc
or
jge
fisubrs
jmp
icebp
jnp
xor
and
pushf
cmc
push
cmp
lods
and
mov
jmp
mov
imul
divl
mov
in
jo
aas
sbb
bound
js
repnz
movsl
cli
jle
out
je
stc
sbb
dec
xorb
cmp
xor
xchg
add
out
push
add
test
stos
or
xor
xor
sarb
fs
xchg
cltd
hlt
mov
fistpl
xor
adc
dec
push
and
rcl
ret
data16
add
and
and
dec
rolb
adc
bnd
dec
scas
dec
cmp
int
arpl
cmpsb
js
lds
sub
nop
test
sub
pop
insl
jl
jo
or
nop
jg
or
outsl
out
or
fldt
xorb
push
xchg
les
and
jb
pop
xor
xchg
pop
or
and
push
xor
insb
out
xchg
notb
mov
adcl
sub
or
jmp
clc
pop
mov
pop
or
addr16
xor
xor
xor
xchg
mov
nop
inc
out
sbb
je
imul
leave
sub
test
aas
insl
xlat
daa
jp
popl
js
xchg
xchg
cs
sti
pop
cli
push
push
jge
push
rcrb
pop
shrb
cmp
popa
cltd
movsl
inc
int
mov
add
pusha
add
rcrl
lcall
aas
mov
les
stc
std
jmp
mov
dec
rcrl
pop
adc
cwtl
add
pop
or
xchg
jbe
popa
adc
push
mov
test
or
les
das
push
loopne
shrl
mov
aas
add
fildll
loop
push
add
mov
jge
aas
aaa
stos
pushf
jmp
rcrb
stos
xor
xor
push
pop
aas
mov
ss
xchg
fiaddl
xor
cld
push
ja
movsl
inc
jmp
inc
mov
mov
jp
mov
push
jnp
xor
loope
dec
pop
or
cmp
enter
lods
push
jns
pop
push
rcll
lret
outsl
add
stos
push
adc
push
push
bnd
and
dec
popa
jmp
outsl
xor
pop
std
xor
add
mov
pop
dec
lods
fldt
stc
test
xchg
add
sub
add
aad
scas
ffreep
mov
mov
pop
or
mov
cmpsb
int
adc
enter
dec
mov
mov
stc
mov
nop
xchg
out
fldt
or
inc
adc
xchg
pop
xchg
icebp
outsb
jo
aaa
ret
push
mov
mov
xchg
dec
imul
mov
cmc
push
stc
mov
insl
dec
nop
out
jge
fidivl
push
or
push
inc
xchg
mov
sub
arpl
popa
shr
pop
push
fs
or
js
into
add
push
mov
mov
callw
mov
movsl
iret
mov
mov
mov
nop
orw
inc
mov
add
outsb
sub
out
jno
sar
hlt
fistpll
fisttpl
or
andb
xor
dec
pop
leave
lock
push
lods
mov
add
int3
imul
jmp
inc
scas
mov
adc
and
dec
jnp
jbe
div
push
call
lock
leave
bnd
or
or
sbb
rcrb
repnz
xchg
loop
pop
and
and
out
add
mov
adc
or
push
cld
aas
sub
and
jae
das
push
test
mov
jl
clc
fcoml
push
js
mov
push
lahf
jne
test
mov
xor
dec
inc
test
fnsetpm(287
mov
mov
testl
ljmp
and
pop
outsl
enter
mulb
sbb
mov
sbb
inc
arpl
xor
cltd
shr
mov
xchg
out
pop
sahf
push
test
lret
rorb
dec
xchg
out
inc
fbld
jae
and
clc
orl
cmp
mov
jo
xchg
out
in
xor
sahf
mov
sbb
or
aas
xchg
mov
repz
jg
sub
stc
out
int
sub
mov
inc
inc
clc
fistpll
pop
xor
jecxz
mov
jo
jo
and
add
sub
inc
test
daa
or
sbb
mov
dec
jp
fildl
jle
daa
dec
rolb
mov
cltd
or
fistpll
lcall
aas
jo
in
lods
jne
adc
or
imul
inc
loop
addb
mov
mov
lahf
std
dec
dec
sarl
jb
sub
test
int3
pop
in
xchg
xadd
stos
pop
rolb
lahf
xchg
cld
add
repz
andl
mov
jg
mov
test
outsl
nop
movsb
xchg
xchg
bound
mov
inc
jae
clc
test
testl
push
out
aas
xchg
shrb
pop
and
cwtl
jg
fwait
mov
jl
xchg
jg
imul
dec
sti
cmpb
cmc
cmp
mov
mov
out
js
adc
in
fwait
iret
mov
call
insb
lods
inc
adc
add
out
or
xchg
pop
push
frstpm(287
jg
fcomip
cmp
push
dec
dec
mov
jbe
loopne
cmpsb
and
and
push
xchg
scas
add
inc
mov
lcall
ficoml
mov
loopne
negl
cmpsl
cld
mov
cmpsl
dec
or
and
xchg
pop
pop
pop
rcll
jb
sti
or
mov
dec
push
add
sub
in
pop
mov
jecxz
jge
add
xchg
in
cs
mov
sub
mov
les
test
jne
repnz
pushf
mov
add
movsl
inc
sbb
adcl
sub
jbe
inc
rclb
sarb
test
and
inc
in
pop
push
leave
xor
test
jg
pop
icebp
mov
xor
ret
rclb
sbb
mov
or
xor
xchg
std
lods
mov
xor
mov
mov
shrl
jo
mov
pop
xorb
loop
repz
rcll
pop
sbbb
sub
inc
cmp
cli
or
in
xchg
mov
pop
stos
out
adc
dec
xchg
jecxz
test
mov
push
cmp
and
sbb
inc
out
incb
clc
lret
hlt
cmpsb
stos
outsb
xchg
fildll
xor
pop
loopne
icebp
pop
arpl
sbb
cld
inc
js
jbe
pushf
cmpsl
cmp
push
xor
push
add
xchg
or
testb
inc
and
mov
push
pop
cmc
dec
loopne
pop
pop
fs
jo
lods
scas
mov
inc
add
mov
adc
insl
std
lret
inc
mov
push
arpl
adc
sub
pop
pop
adc
sbb
sbb
sti
cmp
mov
sub
test
jg
aas
pop
xor
xchg
or
repnz
mov
sbb
imul
loope
sbb
inc
mov
fs
push
add
fdivs
push
xchg
fimuls
cmp
repnz
dec
in
aad
jno
loopne
out
ja
call
mov
icebp
clc
cli
push
cmp
popa
or
adc
xchg
mov
adc
push
sbb
mov
sub
or
jno
pop
mov
add
xor
hlt
mov
nop
push
and
rcr
and
cmp
fwait
inc
sub
cmp
fs
hlt
pop
lods
adc
test
popa
pop
mov
dec
dec
mov
loope
cld
jbe
mov
enter
inc
fdivr
gs
mov
fmull
and
mov
pop
ret
mov
and
or
das
mov
mov
xor
xor
stos
jg
xor
fcomps
gs
or
ja
push
sub
mull
pop
xchg
and
add
sub
cld
lds
xchg
inc
adc
xor
push
faddl
inc
outsl
mov
cmp
mov
inc
jne
ficomps
dec
cmpl
jl
pop
or
mov
ss
xchg
in
pop
and
xchg
jbe
cwtl
mov
dec
imul
ljmp
sbb
cs
inc
dec
lock
add
aam
adc
mov
movb
imul
js
push
mov
inc
mov
adc
mov
xchg
call
jae
dec
and
push
stos
cmc
xor
in
cmp
sub
and
hlt
test
jge
add
xchg
jbe
fwait
in
jl
push
call
sub
lock
icebp
jp
cwtl
out
sarl
pop
popa
adc
out
and
push
aaa
clc
imul
and
cmp
or
sahf
sbb
icebp
lret
mov
adc
test
sahf
gs
fs
xchg
fidivl
aaa
cld
nop
adc
adc
out
push
push
out
ficoml
mov
sbb
das
sub
pusha
sbb
icebp
dec
or
push
fwait
pop
fidivrs
add
jbe
pop
add
ret
dec
jb
cmpb
push
sub
lret
sub
lea
cli
and
rorb
mov
adc
repnz
mov
inc
mov
je
sub
sbb
fistpl
fstl
sub
cmp
xor
imul
sub
mov
pop
jmp
pop
stc
mov
xor
stos
cwtl
insl
push
jp
dec
testb
out
jp
inc
repz
adc
dec
arpl
add
pop
into
jb
or
mov
jae
ret
test
xchg
adc
push
jge
js
mov
shr
andb
inc
stc
cli
sbb
lahf
fucomip
inc
sti
mov
lds
cltd
ljmp
fs
repnz
loop
cld
arpl
repnz
pop
lods
mov
or
std
sti
popa
out
ja
adc
push
into
pop
and
insl
sahf
mov
adc
stc
nop
push
adcl
sarb
or
pop
adc
inc
sti
sbb
xlat
pop
sbb
sub
cltd
jo
fstl
stc
dec
pop
gs
push
jb
add
ss
mulb
xor
or
fstpt
divl
pop
out
cmp
lahf
lods
cmp
xor
push
hlt
jo
leave
mov
icebp
je
pop
push
pusha
mov
add
push
fidivrl
inc
xchg
sti
bound
xor
lret
mov
mov
dec
cmc
sti
test
enter
pushf
fbld
jmp
push
mov
repnz
out
adc
add
pop
mov
pusha
cmc
pop
mov
fldenv
hlt
inc
and
icebp
sahf
mov
push
xchg
lahf
mov
adc
adc
cltd
inc
loop
adc
imul
bnd
frstor
mov
cwtl
imul
inc
lahf
lret
cmp
mov
imulb
scas
jge
cli
pop
testb
mov
xlat
or
rolb
push
xor
sub
push
fprem1
add
enter
in
int3
or
repz
imul
cwtl
dec
jge
in
jmp
cmp
mov
and
negl
mov
xchg
inc
out
fstpt
cmp
mov
xchg
rolb
insb
or
repz
xchg
decl
addb
mov
pop
lahf
dec
stc
dec
lock
aaa
or
cmp
dec
mov
xor
inc
pop
push
hlt
push
adc
pop
scas
and
imul
ljmp
les
mov
mov
popf
fiaddl
movsl
lret
pop
aam
fldcw
xchg
inc
repnz
adc
dec
cli
repnz
jno
pusha
scas
mov
jge
or
adc
cli
adc
inc
es
lods
test
sub
jae
xchg
adc
shr
or
adc
inc
push
sbb
gs
test
push
int
adc
je
push
pop
or
cmc
mov
mov
mov
xlat
idivb
sub
sub
push
leave
lods
cmp
dec
cmpsl
lods
xor
sbb
or
dec
out
pop
add
sub
in
sti
negl
cmc
dec
cmp
es
outsb
mov
roll
cwtl
xlat
jae
push
inc
out
cs
arpl
pop
or
cli
adc
jb
je
cmp
jge
addl
cwtl
pusha
jecxz
jge
pop
mov
pusha
mov
fbstp
out
in
ss
shrb
mov
pop
and
adc
jmp
sbb
and
jae
pop
cmp
mov
pop
repnz
adc
shlb
mov
out
into
mov
sub
sti
lods
insb
push
sub
sbbl
mov
cli
scas
ljmp
dec
dec
rcr
das
test
jge
hlt
sahf
and
shlb
xor
mov
cwtl
adc
or
out
fimull
rcrl
ficoml
scas
mov
xor
cli
sub
push
xor
inc
mov
xchg
xchg
outsl
dec
shl
and
sub
es
xchg
jae
subl
jl
out
jmp
jne
aam
cmp
xchg
lock
pushf
inc
and
lahf
mov
or
stos
shlb
or
out
cwtl
mov
jb
pop
mov
addr16
out
hlt
ficoml
movsl
aam
and
call
push
sbb
mov
divl
aas
dec
sbb
inc
lret
xlat
ljmp
data16
adc
xor
mov
stos
nop
ret
inc
enter
ret
mov
test
popf
jp
xor
push
sub
lock
adc
push
push
jo
sbb
and
ljmp
ja
mov
insl
mov
jmp
jnp
rol
sahf
push
in
mov
add
ds
add
jo
jns
add
xchg
mov
mov
pop
movsl
repz
dec
jno
loop
fisubrl
pushf
mov
xor
push
or
mov
add
divb
dec
fs
sub
aas
lods
pop
xor
movsl
call
mov
jle
mov
cmc
ljmp
or
adc
cli
dec
sbb
aaa
mov
add
js
ret
dec
sub
mov
loope
fiaddl
fs
jb
mov
jne
repnz
sahf
loope
pop
or
fadds
rclb
mov
incl
cwtl
jmp
and
inc
popa
mov
inc
push
inc
pushf
dec
mov
pop
cmp
add
push
adc
mov
mov
push
mov
inc
popl
xchg
xchg
idivb
or
sub
fstpt
je
or
adc
adc
sti
mov
add
mov
scas
adc
add
iret
inc
jae
inc
and
and
sub
or
fstps
or
js
mov
out
adc
clc
jle
xchg
mov
std
addr16
cmpsb
push
sub
lret
dec
sarb
push
push
add
dec
test
inc
fcmovnbe
sub
push
mov
jne
int3
jns
push
mov
cld
les
adc
mov
xchg
mov
mov
pop
push
push
imulb
sbb
mov
out
dec
sub
inc
mov
jb
push
stc
xchg
scas
ljmp
pop
inc
jge
xchg
ja
iret
test
pop
inc
dec
dec
sti
mov
mov
test
push
ret
xor
fsubs
adc
fs
jle
xchg
call
or
mov
or
xor
mov
inc
out
mov
mov
pop
popa
pop
lahf
cli
sub
xchg
int
add
loope
nop
cld
mov
xchg
sbb
lret
cltd
jge
inc
and
mov
mov
lret
adc
pop
ret
jae
xor
clc
push
jmp
lahf
andl
adc
cmp
jg
inc
jecxz
jae
les
mov
enter
in
adc
cmp
rcll
and
and
in
xchg
je
mov
cmp
mov
divl
stos
adc
rcrb
cmp
out
stc
pushf
js
sbb
mov
xor
pop
pop
mov
push
adc
mov
or
and
sbb
addr16
lcall
lock
repz
inc
cmc
cmp
dec
movsl
mov
fwait
mov
pop
emms
test
xor
jns
dec
shrl
inc
sbb
cmp
ficoms
mov
hlt
dec
fwait
int3
pop
cltd
jb
iret
outsb
cmpsl
pusha
jo
scas
insl
mov
lods
js,pt
ljmp
jmp
mov
es
repz
push
stos
mov
mov
add
cld
jo
lahf
fistps
fwait
mov
sti
std
rcll
fstl
lahf
pop
aam
test
sub
push
dec
mov
mov
loop
cmp
or
dec
fwait
inc
cmpl
dec
cmpl
invd
mov
addr16
inc
mov
jo
xchg
fucompp
add
sub
pop
push
inc
test
xchg
dec
in
cld
inc
xorl
mov
jle
lock
mov
stos
jmp
or
idivl
sbb
pop
out
orb
das
shlb
add
ljmp
add
test
out
fdiv
fbld
mov
push
mov
adc
movb
mov
jp
roll
inc
testb
add
mov
leave
shll
sub
adc
or
lret
push
jnp
adc
int
xchg
jns
loope
cltd
dec
test
cltd
fstpl
aas
xchg
movsl
lock
hlt
cli
cs
ljmp
adc
fldpi
mov
mov
xchg
repnz
xchg
adc
clc
jns
shl
repnz
xchg
scas
jno
ret
push
pop
roll
faddp
mov
mov
repz
pop
or
xchg
xchg
js
push
jl
jns
mov
jecxz
sub
inc
out
mov
push
cmp
decb
cli
adc
mov
lods
jae
jo
push
test
leave
cmpsl
adc
add
and
xor
cmp
out
dec
pusha
push
adc
in
bound
mull
sub
cld
in
repnz
or
xchg
ret
das
push
in
aam
dec
js
sub
add
mov
rcrb
movsb
cmp
cmp
push
sbb
xchg
inc
mov
lahf
pop
std
and
mov
inc
mov
jg
jl
sbb
lcall
lock
push
into
xorl
mov
jg
mov
mov
and
aad
pop
mov
jg
xor
xor
add
sbb
shlb
xchg
stos
ss
adc
adc
dec
jle
jno
cmp
cmp
imul
cwtl
mov
cmp
ficoms
sbb
les
inc
aaa
adc
imul
push
mov
jnp
je
jl
icebp
mov
sbb
pop
lret
cmp
mov
xchg
mov
je
mov
xchg
sbb
jl
sti
push
cmp
xchg
add
jl
nop
sub
stos
push
shl
fs
shr
or
or
les
adc
mov
adc
fildll
jno
mov
daa
sbb
jns
xor
jmp
jl
mov
fstpl
add
cli
rolb
xchg
sbb
cwtl
push
mov
insb
add
push
pusha
mov
xor
xchg
sarl
popa
fidivl
mov
xor
sub
sbb
adc
fldl
icebp
add
inc
mov
inc
push
push
cmc
mov
jbe
mov
sub
mov
mov
cmp
shrb
push
sub
or
mov
mov
jmp
add
mov
dec
inc
push
xchg
add
xor
fs
daa
ja
jne
icebp
jmp
imul
xchg
stos
popf
push
mov
jbe
out
sar
sbb
js
stos
add
add
pop
xchg
fs
sti
or
push
jnp
and
inc
xor
roll
pop
adc
negl
ret
mov
or
jecxz
nop
loopne
mov
inc
pop
repnz
sbb
xor
adc
mov
loopne
push
stc
in
out
out
jl
test
daa
repz
push
xor
xchg
fidivrs
loope
pop
iret
cmp
pop
mov
xlat
rcll
mov
mov
pop
mov
mov
movsb
and
add
pop
jo
xchg
daa
or
leave
out
pop
out
je
out
outsl
jae
bound
cld
or
scas
push
ret
adc
mov
inc
dec
push
andl
add
pushf
hlt
mov
lret
mov
mov
pcmpgtb
lock
or
dec
in
and
pop
jmp
dec
cli
xor
jmp
out
insl
andb
sub
pop
jo
rcll
add
ja
push
mov
rorl
into
xchg
or
sub
les
push
pop
mov
jl
cwtl
add
aam
dec
testl
jmp
add
int3
and
lea
loopne
cli
sahf
inc
push
inc
push
push
stos
int
jnp
out
inc
ficoms
test
int
lahf
xchg
sbb
imul
inc
sbb
jecxz
scas
dec
das
scas
and
cmpsb
nop
lods
pop
js
test
sbb
fwait
xor
data16
mov
add
or
into
xor
fcomi
cli
xlat
dec
je
sarb
and
jno
imul
adc
iret
dec
xorb
inc
into
pusha
cmp
das
jge
sub
pushf
and
pop
cli
jp
xchg
pop
pop
cs
jmp
xchg
roll
inc
or
jle
cmc
ror
pop
fcomi
loop
cld
lods
mov
push
xor
das
add
lds
push
testb
dec
int3
out
push
push
inc
xchg
adc
mov
pop
data16
mov
out
mov
pusha
jg
xchg
popf
inc
and
xchg
jae
and
cmpsl
gs
popa
jbe
sbb
jp
mov
mov
xor
js
movaps
out
out
jmp
add
sti
pop
mov
jnp
rcl
sbbb
mov
pop
insb
movsb
filds
mov
bound
pop
or
mov
push
sti
or
push
xor
xlat
xchg
push
mov
mov
sub
sub
paddsw
jo
loopne
xor
xor
rdmsr
sbb
js
push
dec
mov
adc
rorb
out
inc
pop
push
andb
pop
icebp
cwtl
je
repnz
repnz
or
fcmovu
jmp
jb
and
aam
fsubrl
mov
out
mov
or
aad
pop
fstpt
jecxz
popa
mov
pop
jb
mov
pop
fcom
out
push
cli
or
cli
cld
shrl
adc
divl
mov
sub
add
xor
test
mov
jb
scas
push
mov
adc
adc
and
sahf
cmpb
sbb
mov
inc
fdecstp
addr16
mov
or
decl
hlt
or
cmp
mov
sub
or
push
mov
and
inc
push
cmc
push
inc
cmpsb
xor
or
push
mov
jmp
dec
xor
inc
fucom
dec
in
adc
data16
enter
iret
hlt
pop
mov
shll
add
sub
ljmp
out
fsts
add
je
push
push
icebp
pop
and
negl
jnp
cmpsb
cld
adc
or
jne
fucomip
sti
dec
jo
jns
add
call
pushf
xor
or
lcall
pop
test
jbe
fadds
movsl
or
div
pop
push
pusha
mov
sub
insl
ror
loop
loope
shl
repz
fistpll
test
bound
loop
or
jge
inc
push
push
xchg
insb
xor
jp
movl
adc
sub
push
push
dec
hlt
add
out
adc
sbb
jge
inc
fs
add
out
xchg
idivb
or
push
cmpsb
into
push
cmp
mov
repnz
mov
or
and
popa
pop
ficoms
mov
and
adc
xor
and
sub
mov
test
mov
xor
sub
jae
outsl
add
fwait
fs
imul
xor
std
xlat
cwtl
sbb
dec
insb
daa
iret
ficomps
push
push
mov
int3
out
xchg
icebp
cmp
push
lds
xchg
mov
jecxz
dec
xor
mov
push
rclb
fisttps
test
xchg
mov
imul
push
dec
pop
mov
cmp
fnsave
ljmp
xchg
lods
out
pop
jl
mov
test
sub
das
dec
pop
mov
in
or
inc
js
loop
jl
add
pop
cs
mov
mov
iretw
jae
cmp
fdivs
mov
add
jo
dec
scas
sub
sub
push
push
sbb
dec
jnp
add
or
inc
sahf
xchg
sub
pop
mov
jg
push
sbb
in
int
mov
xchg
xor
inc
mov
ja
adc
adc
hlt
idivl
push
mov
cmc
and
add
push
cli
ljmp
jl
std
xchg
fistps
hlt
mov
outsb
adcl
out
ficompl
and
cmpsl
mov
ret
cwtl
repnz
js
add
fbld
push
mov
inc
outsb
pop
mov
or
mov
ds
dec
lods
push
outsb
out
ljmp
sub
push
adc
mov
cs
mov
xor
mov
inc
mov
loopne
call
sub
mov
cld
push
leave
je
adc
xchg
lret
mov
out
icebp
punpckhdq
jecxz
jb
lret
jae
lahf
mov
jns
add
lret
push
repnz
jge
pop
call
push
enter
das
mov
enter
jo
ds
jl
shll
mov
adc
fdiv
or
xchg
xlat
or
pop
mov
xor
xor
iret
jo
dec
shlb
das
pushf
test
lret
popa
jae
jp
jp
sbb
pop
inc
add
dec
xor
int3
data16
mov
icebp
add
push
mov
pop
ss
mov
xchg
or
movsl
pop
and
ret
iret
in
mov
scas
or
gs
mov
jb
dec
pop
adc
enter
dec
dec
xlat
negl
aas
lahf
call
out
xchg
repnz
adc
or
dec
xorl
adc
and
or
mov
jbe
sbb
bnd
fidivrs
aam
adc
adc
aam
dec
lahf
daa
or
orl
jge
daa
pop
out
jae
sbb
and
mov
int3
movsb
loopne
sbb
jo
push
sub
xor
mov
sbb
aad
lods
cmpsl
mov
movsb
cmc
lods
rcrb
xchg
movsb
in
adcb
cmpps
add
adc
push
pop
push
aaa
sub
inc
fiadds
dec
fcomps
lahf
movsl
inc
loope,pt
lcall
add
dec
orb
push
cs
cli
xor
mov
push
mov
push
mov
fisubs
addr16
push
dec
dec
lds
lock
push
adc
sbb
or
xchg
sub
test
out
cmp
aas
mov
ret
inc
clc
fadds
ds
sub
daa
mov
xchg
aaa
sub
xchg
push
testl
sti
das
dec
push
pop
xor
loope
mov
or
sub
push
or
aam
pop
lods
das
shrb
not
movsl
push
add
sbb
loope
mov
and
jne
rclb
and
or
out
inc
cmpsl
inc
out
rcrl
xlat
ja
xchg
push
idiv
neg
test
mov
mov
dec
hlt
in
sbb
jo
test
test
sub
aaa
lret
mov
jbe
or
icebp
bnd
mov
cmp
push
jbe
jg
fdivrp
jne
mov
out
int3
xor
ja
call
shll
or
push
xchg
sub
xchg
or
push
jle
or
cmp
test
xlat
call
mov
js
call
fcoml
push
and
sbb
cmp
or
xor
ss
std
and
inc
mov
xor
jmp
jecxz
dec
roll
xchg
subb
fisubl
repz
popf
shll
stc
sub
cltd
aad
mov
pop
adc
lret
shrl
mov
ret
mov
adc
jp
mov
sbb
jb
and
xchg
and
cmp
mov
mov
shl
pop
jp
pop
xor
js
popa
fcmove
adc
lahf
push
inc
fldt
enter
test
mov
cmp
pushf
loop
test
or
mov
imul
pop
fistps
pop
lahf
sti
add
pop
xor
push
jne
cmp
xchg
mov
sarl
js
loope
stc
fisttps
daa
fisubrl
sbb
jne
jge
dec
ret
inc
jle
xchg
stc
jl
and
lcall
cmp
inc
cli
inc
jno
add
sub
jp
lock
fldenv
aas
jae
cmp
push
lret
leave
add
and
int
es
das
pop
or
xchg
out
lea
cmpsb
add
lock
adc
or
stos
out
nop
fsubr
in
xorb
inc
movsb
xchg
push
stos
es
adc
mov
mov
test
and
sarl
repz
imul
insl
idivb
in
aas
jl
outsb
loopne
sub
lods
dec
xchg
add
mov
call
les
rolb
insl
icebp
push
sbb
dec
int
repnz
popa
scas
push
xchg
inc
and
out
ljmp
ss
pop
push
xchg
add
add
mov
lret
call
cs
shrb
stos
cli
icebp
lds
mov
nop
jae
in
andl
xchg
popl
jl
push
fimull
push
lcall
inc
repz
pop
pop
pop
push
add
xchg
cmp
dec
mov
hlt
stos
xchg
inc
aad
jg
push
sti
out
loope
adc
pop
bound
cmpsl
dec
imul
push
out
mov
sbb
mov
mov
aad
mov
stos
or
or
mov
add
aam
mov
shl
popa
sbb
jbe
xchg
or
lret
push
mov
inc
mov
int3
sbb
popf
mov
adc
idivb
test
inc
lret
jmp
neg
xchg
and
mov
add
xor
mov
ret
movsb
jp
cmpsl
test
sbb
mov
dec
insl
cmp
outsb
imul
inc
nop
cmpb
out
insb
push
popa
mov
mul
inc
jnp
repnz
lahf
dec
sbb
and
div
in
cmpsb
and
sbb
mov
icebp
mov
bound
dec
ret
das
mov
sub
inc
nop
add
pop
sbb
scas
inc
add
inc
out
stc
xlat
aad
test
pop
imul
xor
jbe
out
inc
lods
mov
in
jp
cld
arpl
jg
imul
arpl
fdivs
jne
xor
gs
or
xorl
and
sti
xchg
xchg
dec
cmp
mov
mov
jno
sub
dec
and
adc
inc
mov
jnp
vsubpd
fiadds
pop
je
aad
jae
push
cwtl
sub
sbb
push
adc
jmp
sbb
jb
and
inc
xor
loopne
adc
xchg
lea
xor
loop
call
sub
cmp
btr
mov
adc
push
incl
out
sub
mov
leave
inc
and
hlt
mov
cli
lods
out
gs
xchg
lds
sub
out
dec
lret
mov
mov
push
jnp
inc
jae
dec
nop
jecxz
icebp
adc
lahf
fcomi
movsb
out
xor
out
into
scas
call
push
jge
andb
insl
dec
or
mov
stos
iret
mov
or
outsl
out
stos
xchg
in
xor
add
and
out
dec
pushf
mov
mov
mov
sub
stos
stos
cmp
push
push
cmp
mov
inc
addr16
push
jl
ljmp
clc
pusha
mov
push
cmp
push
inc
mov
xchg
stc
mov
mov
test
aaa
xchg
push
in
mov
xchg
stos
xchg
pop
jge
cmovo
push
add
cld
or
cmp
pop
pop
in
out
mov
daa
sbb
out
insb
hlt
add
and
dec
or
push
aas
mov
repnz
out
scas
add
fdivrs
les
jbe
fiaddl
loope
xor
mov
add
sub
sub
push
inc
sbb
adcb
mov
inc
pushf
sti
xchg
test
mov
cmp
ljmp
ret
pop
es
cltd
movsb
dec
mov
inc
shrl
adc
sbb
mov
std
sahf
std
int3
lea
cs
jne
fwait
cmp
iret
sub
xorl
fisubrl
mov
mov
jne
xchg
mov
lods
psrlw
cltd
out
in
ja
loopne
sbb
lds
clc
push
and
test
pop
sti
cmpsb
or
push
mov
emms
sub
pop
lea
jge
jg
or
xchg
popa
pop
push
stc
hlt
dec
inc
mov
adc
dec
lods
cmpsl
loop
js
push
test
sub
mul
cmovg
fs
pop
jg
lods
or
mov
mull
int
dec
adc
mov
inc
out
inc
test
adc
hlt
or
cli
add
dec
fisttps
adc
lods
subb
or
xorl
xchg
loopne
push
int
jno
sbb
imul
jmp
push
mov
xchg
mov
xchg
lds
jo
imul
inc
pop
fwait
scas
movl
lods
hlt
jb
xor
cmc
fmull
je
les
fscale
imul
lahf
lcall
mov
idivl
jo
or
lock
popf
push
adc
movsl
sbb
in
bound
sahf
inc
mov
dec
sub
mov
jo
add
lods
add
pop
xchg
jns
ds
cwtl
dec
es
aas
or
shrl
lea
inc
push
mov
dec
xchg
pop
loope
and
sbb
in
aaa
sub
mov
or
neg
mov
inc
dec
test
dec
bnd
push
inc
shrl
out
xorb
inc
xor
pop
stc
dec
out
xchg
mov
adc
rcrb
cmpl
push
in
pop
inc
mov
das
rclb
mov
mov
push
movsl
and
xor
aaa
adc
dec
mov
push
mov
mov
sbb
cmp
or
sar
mov
inc
mov
faddl
je
xchg
idiv
push
std
xor
inc
jo
push
or
mov
lds
addr16
in
and
mov
mov
mov
rolb
inc
movsb
mov
arpl
and
ds
das
es
push
mov
adc
jno
dec
pushf
imul
cmp
or
cmp
icebp
jae
jl
xchg
sbb
andb
popf
jmp
mov
mov
sub
mov
scas
xor
flds
mov
adc
jo
cltd
cwtl
int3
or
jmp
es
or
push
shr
inc
cmp
cli
cmp
xchg
lcall
pop
cmp
out
out
mov
sbb
dec
mov
sub
insl
stos
cmp
inc
and
aam
push
xor
aaa
jmp
push
jns
xor
xor
lea
add
insl
or
and
dec
sbb
push
mov
dec
push
xor
arpl
dec
xchg
mov
enter
in
inc
mov
gs
jmp
std
ds
out
or
cmc
pop
rorl
xchg
shll
xchg
cmp
fidivrl
jno
sub
jle
xchg
xchg
xor
add
xchg
jmp
add
adc
stos
and
mov
aas
inc
xor
imul
push
sbb
sti
cmp
fnsave
out
jno
mov
mov
lods
aad
cwtl
push
pop
sub
faddp
cmp
sbb
dec
aas
cmpsb
ret
cmp
push
out
lret
inc
and
mov
in
pop
stos
jmp
rclb
js
mov
bound
inc
and
push
pop
fidivl
inc
outsl
sbb
test
aam
orb
jle
jmp
inc
and
popf
push
or
aam
cmpsb
mov
inc
mov
shlb
popl
mov
xor
fstps
cwtl
out
ja
sarb
dec
cmp
cmp
xlat
ljmp
push
cmp
pop
movsl
add
and
push
sbb
aas
or
movsl
fs
cld
pop
mov
xchg
idivb
lock
adc
pop
lahf
inc
and
into
sti
jne
pop
notb
rorb
scas
mov
gs
xor
popa
ret
or
aas
mov
mov
subb
orl
xchg
outsl
cld
dec
inc
cwtl
dec
aad
outsl
das
sahf
enter
sbb
ljmp
add
xor
xchg
lock
xor
jo
fs
and
je
mov
lods
adc
adc
out
jno
std
and
add
out
xchg
mov
leave
push
outsl
orb
fmuls
movsl
out
jecxz
lahf
pop
sti
dec
les
fdivrl
sub
adc
in
inc
dec
dec
mov
andl
leave
imul
daa
add
xchg
push
cld
stc
outsb
push
movsb
out
add
dec
jle
inc
inc
sbbb
push
test
inc
cmc
xchg
fstpl
into
daa
sub
scas
dec
out
ljmp
in
std
cmp
pop
call
xchg
adc
repnz
or
or
movsb
flds
or
dec
mov
push
inc
jmp
repz
pop
cmp
push
lret
mov
call
movsb
mov
inc
mov
mov
push
popa
add
test
mov
sti
scas
pop
xlat
shll
fisttps
adc
test
mov
or
mov
std
inc
push
das
pop
sahf
pushf
punpckhwd
jmp
lcall
xlat
cltd
daa
mov
inc
pop
stos
jnp
sub
sahf
inc
dec
mov
xor
movsb
xorl
inc
push
cwtl
mov
push
loopne
mov
jge
add
and
dec
adc
mov
jae
jnp
aad
inc
inc
mov
push
sahf
rorb
pop
sbb
aam
pop
inc
movsb
dec
inc
cmp
inc
cli
outsb
or
xor
push
in
pop
jge
leave
add
das
movsl
out
jmp
insb
testl
dec
lret
xchg
arpl
sub
nop
setp
mov
scas
xchg
mov
pop
test
xor
mov
popf
jge
fcmovu
insb
sub
mov
sbb
jb
cwtl
scas
das
ds
mov
popf
inc
push
int
lcall
icebp
pop
mov
out
mov
and
setbe
lds
xchg
sub
jmp
push
push
xchg
mov
sub
ljmp
and
mov
aaa
cli
inc
loope
inc
mov
test
or
stos
adc
add
and
mov
gs
push
stos
or
lds
xchg
cmp
pushw
dec
ret
pop
sti
hlt
or
or
aam
mov
pop
jo
and
pushf
fists
fcomp
sbb
inc
mov
inc
and
test
cmp
sub
mov
lret
adc
dec
sbb
inc
mov
xor
pop
test
pop
sbb
mov
jae
jne
sub
mov
xor
sbb
jg
out
adc
mov
mov
in
cli
sub
daa
mov
out
sbb
sub
xchg
loop
mov
inc
aaa
lret
mov
mov
pop
sub
enter
aas
jp
in
mov
icebp
push
repz
out
and
pop
enter
jns
xchg
or
inc
mov
rcrl
cmp
int
cmp
jns
cmp
cmp
repz
pop
push
cmpsb
mov
inc
adc
xchg
add
jne
push
test
pusha
outsb
rorl
mov
cwtl
arpl
hlt
adc
inc
loop
in
ja
pop
mov
ret
insb
xor
push
or
mov
scas
leave
push
lods
aad
ljmp
mov
insl
sub
js
ds
jb
aam
xchg
push
andl
bnd
sbb
inc
movsl
pop
js
fstps
out
movsl
jb
das
xchg
add
or
mov
dec
bswap
flds
popl
addr16
pslld
cmpsl
push
in
inc
adcl
cmpsl
jo
cmp
push
pop
test
mov
ret
sti
incl
mov
adc
and
pushf
iret
lea
lret
xor
and
nop
pop
repz
sub
mov
inc
mov
clc
imul
inc
call
sub
and
adcl
cmp
clc
jae
lcall
adc
in
inc
scas
jmp
adc
movsl
movsb
mov
movsl
adc
push
push
and
int3
xchg
cmpsb
push
push
movsb
sub
mov
pop
icebp
mov
loopne
int
dec
jnp
dec
push
scas
ret
or
pop
cmpsb
xor
xchg
pushf
mov
mov
dec
scas
mov
xchg
stos
fwait
loopne
dec
mov
lret
popf
stc
or
es
sbb
in
or
out
out
jle
lret
dec
pop
das
out
cli
out
aad
inc
test
mov
dec
jns
sub
jle
cmc
inc
mov
dec
xlat
je
dec
dec
scas
pop
sub
push
jecxz
add
push
jno
cmp
inc
push
jbe
cmpsb
fists
push
out
lcall
mov
stos
adc
stc
sbb
add
enter
ds
mov
stos
scas
add
cwtl
inc
lret
iret
mov
push
xchg
ficompl
and
cmpl
xchg
sbb
mov
addb
sub
sbb
add
lahf
sti
insb
outsl
popf
js
out
mov
push
jo
jg
dec
mov
jmp
pushf
sub
dec
and
mov
popa
sub
mov
in
sbb
popf
subl
inc
cmp
mov
add
das
add
mov
dec
xchg
xor
fildll
cmc
add
shll
std
rorb
sub
pop
and
mov
and
push
shll
lock
lret
lods
rclb
test
ss
pop
jmp
mov
pop
jg
loopne
jbe
adc
pop
iret
or
aam
test
fcmovnu
addl
mov
outsb
push
rcr
mov
mov
jne
jmp
or
push
jmp
mov
test
roll
xor
jno
or
jnp
mov
ficoms
movsb
scas
xlat
sbb
rclb
fidivrl
cltd
jb
dec
das
mov
mov
push
push
scas
jae
popf
and
ss
dec
in
orl
aam
insb
je
and
enter
mov
outsl
push
mov
lods
call
xor
mov
jnp
movsb
pop
cld
orps
adc
inc
test
mov
repnz
stc
lods
adcl
mov
scas
mov
enterw
mov
outsb
in
cwtl
mov
mov
dec
decl
adc
mov
jnp
sbb
rcrb
out
or
in
jae
test
ja
or
test
add
push
ljmp
movsl
jne
or
jne
sbb
jl
push
mov
or
fcomip
push
inc
push
scas
loop
test
dec
inc
mov
std
outsb
inc
repz
xchg
inc
inc
test
or
dec
jae
mov
je
adc
xchg
mov
xor
pop
insb
cmp
or
add
negb
mov
adc
mov
xor
jp
or
lods
pop
addr16
fwait
sub
jle
stos
push
mov
jp
lods
dec
arpl
decb
std
mov
sbb
pop
or
dec
movsl
dec
lock
inc
clc
push
fsubl
pop
inc
jnp
push
and
push
add
sbb
inc
jg
xchg
xchg
lret
xchg
orl
and
mov
call
cmpsb
xchg
stc
adc
dec
add
dec
shlb
sbb
lods
repnz
into
testb
cwtl
cmp
xchg
sub
cld
pop
outsb
scas
roll
je
js
add
mov
pop
mov
sub
ret
mov
jbe
jo
push
xor
lds
pushf
testb
nop
loope
xlat
push
jg
jle
pop
je
xchg
xor
push
xor
lcall
xor
inc
jle
push
push
xlat
out
dec
jmp
roll
or
sub
cli
mov
nop
push
jne
fadds
mov
xchg
shrb
cmpsl
loope
nop
dec
or
iret
in
cmc
in
imul
inc
repz
dec
xlat
jl
inc
test
xchg
add
fcos
pop
push
pop
mov
notb
xchg
jp
jecxz
and
hlt
push
pop
loopne
rorb
fdivr
iret
jmp
push
lret
pop
or
pop
ret
arpl
inc
mov
sbb
cmp
mov
dec
mov
clc
test
rorb
push
outsl
insl
push
loope
in
jae
lods
loopne
testb
jno
and
stos
sub
scas
test
and
lahf
xor
sbb
outsb
movl
add
and
out
adc
sarb
scas
push
add
cld
jg
insb
lcall
stos
inc
pop
in
push
repz
fcmovnb
cmpl
xor
int3
mov
push
pop
or
dec
mov
inc
lcall
ds
inc
es
sbb
dec
ljmp
enter
enter
outsb
fcmovnb
push
rorl
insb
lcall
push
push
add
xchg
stos
ret
ret
nop
pop
jp
dec
sub
ljmp
nop
or
mov
mov
imul
cmp
jle
ss
ss
jecxz
pusha
or
aad
jae
dec
pop
inc
cmc
sub
add
sbb
mov
xchg
jno
mov
mov
testl
mov
jle
hlt
std
decb
xchg
or
gs
outsb
test
inc
sbb
aam
xor
popa
out
jne
dec
aaa
xchg
push
rep
fisubrl
xorl
or
and
rcr
adc
sub
sbb
mov
cmp
std
add
inc
mov
insl
or
push
sub
and
pop
out
pushf
add
je
loope
jge
dec
jb
outsl
enter
lods
inc
decl
pop
divl
and
dec
in
adc
push
mov
outsl
push
lock
dec
xchg
mov
dec
fldt
or
xchg
pop
adcb
imul
mov
loope
insb
xchg
push
mov
mov
out
or
xchg
dec
test
pop
sub
or
in
or
rclb
push
shl
fidivrl
and
pushf
adc
or
bound
mov
adc
jnp
loop
xor
pop
aaa
mov
sti
sub
dec
outsb
mov
push
sub
and
inc
jp
xlat
mov
pop
add
testl
inc
sub
sbb
jne
stos
xlat
pusha
stos
jge
xorb
cmp
out
xchg
mov
ljmp
cmp
dec
and
jno
inc
pushf
inc
sub
out
push
mov
idivl
push
test
inc
push
mov
mov
push
cmp
push
sbb
and
stos
pop
popl
add
fmuls
push
or
arpl
push
mov
add
mov
push
xchg
push
int
jae
inc
inc
xchg
repnz
clc
sub
dec
cmpsl
jno
fidivs
xchg
mov
pop
mov
mov
int3
sub
adc
pop
inc
sar
rclb
mov
movsl
pop
or
jo
pop
fcompl
mov
test
jb
pop
imul
mov
out
arpl
shll
mov
into
add
push
lcall
mov
in
lcall
ss
push
sahf
adc
adc
xchg
or
stc
loope
pop
lahf
cmp
ljmp
jl
dec
pusha
notl
jne
inc
cltd
scas
pop
adc
addr16
adc
jns
int
inc
movsb
mov
or
mov
xor
xlat
pop
loope
lret
mov
out
mov
aad
pop
test
inc
pop
mov
or
xchg
pop
add
arpl
xchg
jp
repz
les
or
pop
sbb
xchg
add
jmp
jp
cmp
in
dec
push
add
pop
call
mov
push
and
pop
stc
js
push
add
sbb
icebp
fs
cld
dec
mov
insb
cwtl
sbb
pop
test
cmp
cmp
out
push
jp
fcmovu
shrb
insl
arpl
mulb
fwait
inc
add
fwait
into
mov
add
pop
dec
jns
fldt
xchg
and
loop
pusha
fst
lock
pop
jb
xchg
add
dec
xchg
mov
and
pop
jne
xor
or
xchg
or
inc
push
adc
jae
loop
dec
mov
jmp
push
fisubs
gs
fcomps
xchg
das
int
arpl
mov
sub
adc
sbb
pop
int3
pusha
imul
sbb
inc
push
push
inc
mov
push
mov
pushf
jge
test
cltd
xchg
cmpsb
mov
rcrl
data16
dec
scas
fbstp
loop
and
inc
mov
jae
cltd
cs
fldenv
sbb
mov
mov
cs
jno
jmp
lods
stos
ret
rolb
cmp
push
xchg
fcoms
out
sub
mov
fistl
fisubs
lahf
ss
fldt
sbb
test
add
and
cmp
ret
iret
std
push
mov
push
daa
shll
xchg
jae
js
xor
or
mov
dec
inc
sahf
rcrl
or
xchg
out
jb
xor
sahf
sub
pop
imul
movl
fstpl
xchg
sbb
add
dec
fcomi
cwtl
pop
out
fucom
mov
sub
aam
xlat
mov
sub
xchg
xlat
std
push
jmp
std
pop
dec
jle
repz
arpl
mov
insl
jns
aad
xlat
xor
push
fisubl
fimull
cmp
lds
pop
nop
push
lock
mov
lods
insb
adc
inc
xor
sub
stc
sub
adc
fstps
sbb
pop
gs
push
push
test
add
or
push
pop
cmp
lcall
ficomps
arpl
or
mov
and
repnz
es
pop
inc
fwait
in
add
ja
sub
push
sbb
xchg
push
mov
inc
mov
sbb
das
mov
lcall
mov
pop
and
sub
push
mov
adc
inc
pop
out
fucomp
jle
loop
fdivl
mov
stc
fdivrs
test
inc
push
inc
out
jne
xor
cmp
dec
insl
inc
jb
sbb
add
dec
add
mov
push
mov
or
cltd
rol
or
ret
inc
nop
sete
pop
add
out
or
ss
movsl
std
jnp
out
cmp
movsb
and
pop
push
sub
dec
aaa
arpl
mov
inc
arpl
mov
in
ret
lods
mov
pop
scas
sub
mov
cmp
add
jo
and
lds
mov
jle
shll
ljmp
mov
jo
bnd
mov
out
fs
js
and
mov
push
outsb
inc
loope
mov
pop
mov
sbb
jmp
inc
xchg
cs
mov
aas
jmp
xor
dec
cmc
icebp
mov
rolb
out
jmp
and
scas
xchg
jg
pop
int
cmp
lods
cmpsl
orl
test
arpl
pop
sub
rcrl
push
push
movsl
cltd
pop
push
and
std
mov
int
inc
fs
jae
pop
inc
jecxz
mov
dec
mov
mov
push
add
mov
cmpsb
iret
pop
sbb
add
and
or
clc
cmc
jae
mov
jp
or
outsb
adc
xchg
sbb
dec
xchg
jge
jno
imul
pop
ficoms
jl
push
popf
jb
inc
sahf
out
nop
insb
test
cltd
pop
or
je
jb
pop
push
hlt
pop
loope
inc
or
xchg
icebp
jg
int3
xchg
mov
sbb
inc
add
std
jmp
pop
hlt
incl
jae
call
push
fs
pop
in
pop
pminsw
dec
push
subl
pop
daa
dec
jl
or
add
call
jp
pop
repz
sub
sbbb
adc
scas
xchg
sti
push
outsl
mov
mov
es
repnz
add
jge
sbb
aas
jg
into
xor
or
jne
and
mov
dec
fmul
movsb
push
fsub
icebp
data16
test
insl
sub
in
pop
add
cld
dec
pop
test
push
jo
and
push
rclb
add
aam
pop
push
sahf
push
jecxz
cmpsb
arpl
jae
jnp
stos
jg
fmull
repnz
rcrl
out
aas
push
movsl
xchg
add
add
pextrw
clc
add
aam
add
lahf
cltd
add
pop
in
mov
in
nop
and
out
rcl
sbb
dec
dec
mov
repz
push
gs
adc
lea
data16
xchg
sub
add
and
loopne
ljmp
das
lods
mov
pop
fcompl
mov
repnz
test
lcall
jae
movntq
pop
inc
mov
dec
lea
sub
push
push
mov
pop
scas
pop
mov
enter
clc
push
mov
and
inc
push
or
sbb
scas
scas
cld
in
sub
and
sub
js
and
jae
xchg
and
lret
push
jecxz
adc
mov
dec
push
mov
mov
fimuls
xor
shrl
rcrb
daa
mov
stc
pop
test
bound
jne
xor
cs
nop
dec
pop
pop
lahf
sub
mov
add
inc
stos
and
and
sarb
xchg
cltd
dec
std
adc
repnz
stc
pop
mov
lea
popf
ljmp
or
cwtl
cld
insl
imul
rcrb
cld
push
jmp
lea
les
inc
insb
add
cmp
fsubrl
test
mov
mov
mov
gs
cmp
sbb
sub
stc
leave
outsl
mov
jg
xor
and
mov
inc
ret
add
outsl
inc
push
adc
cmc
lahf
xor
jae
and
dec
jmp
adc
mov
imul
and
cld
pushf
jo
add
test
mov
sbb
or
xchg
std
stos
mov
shrb
arpl
mov
out
pushf
adc
stos
jae
pop
pop
pop
push
sub
jo
mov
xchg
in
adc
and
lods
lahf
add
sub
add
dec
inc
leave
enter
inc
cmpsl
dec
push
push
outsb
inc
pop
add
cmpsl
adc
je
mov
cmp
pusha
push
outsb
sub
lcall
cwtl
cmp
sub
cli
push
outsl
push
adc
inc
test
push
jb
xor
mov
pop
aas
xor
mov
int3
in
pop
rorl
popf
cmpsb
mov
scas
mov
pop
push
aaa
adc
and
or
dec
mov
jae
xchg
adc
and
in
jg
hlt
xchg
push
xchg
fcoml
sbb
js
sahf
or
cli
rcr
cmpsl
bound
push
fisubl
add
fs
fucomp
mov
stos
loop
fstpt
bound
mov
cltd
ljmp
ss
xor
inc
mov
int3
dec
fcomps
mov
pop
call
unpckhps
sub
mov
add
dec
inc
enter
lcall
sbb
mov
xchg
sub
xchg
pusha
inc
mov
jae
lcall
jmp
xchg
repz
or
repz
cmp
and
xor
fs
sbb
dec
fwait
inc
push
mov
loopne
fs
divb
int3
sar
sub
mov
inc
add
mov
sti
pop
adc
dec
mov
mov
mov
insb
mov
enter
movsl
pop
out
ss
insl
stc
popa
cmpsb
loop
les
jno
lret
mov
inc
call
ficoms
mov
inc
push
fsubrs
mov
pop
mov
push
and
cmpsb
ja
shll
aaa
xor
cmpsb
adc
pop
sub
inc
cmpl
inc
cmc
adc
sub
stc
repnz
out
fs
sbb
mov
xchg
inc
je
inc
inc
ss
mov
and
inc
sub
cmc
sbb
enter
rolb
gs
jb
jg
outsl
adc
loopne
arpl
pop
lahf
cs
clc
push
push
push
xor
adc
cmp
pop
lahf
adc
nop
xchg
pop
inc
jl
inc
pop
jb
and
sti
pop
sub
fbld
jl
out
add
push
lods
stos
sbb
xor
mov
or
add
lods
mov
adc
subl
int3
xchg
and
cmpsb
ja
shll
jnp
push
fcmovb
fcoms
push
xor
arpl
jne
and
xchg
add
mov
aaa
daa
shlb
orb
test
inc
inc
idivl
pop
call
ret
movq2dq
psubq
out
shll
sub
nop
cwtl
iret
sub
into
stc
nop
fdivrs
inc
cmp
ret
scas
and
cmpsl
mov
cmpsb
lahf
stos
rcrl
add
fisttpl
aaa
dec
shlb
lret
dec
daa
lret
inc
add
jne
pop
mov
imul
add
ret
out
adc
or
inc
pop
sbb
mov
jo
sar
inc
pop
pop
adc
sub
addr16
push
xchg
das
sbb
out
rcr
add
mov
cmp
fcmovne
adc
and
mov
push
cmp
nop
push
das
adc
insb
es
inc
out
adc
jae
andl
pop
sbbb
std
xor
in
popf
add
imul
jp
pop
mov
or
lea
xchg
sahf
daa
lret
push
jne
pop
rorl
add
js
pop
out
test
or
repz
adc
xchg
fcmovbe
mov
mov
orb
test
sub
movsb
mov
hlt
fwait
and
mov
fwait
shr
mov
jmp
adcl
push
std
leave
inc
push
jne
xor
dec
xor
cwtl
jge
adc
jne
and
sahf
add
mov
aaa
pop
fisttpl
decl
push
push
js
pop
call
inc
jl
fsubs
je
iret
fcmovnbe
lret
mov
cmp
fstpt
adc
xchg
and
adc
xchg
inc
enter
inc
ja
push
mov
cmp
dec
fscale
inc
or
sbb
std
push
mov
hlt
lahf
and
js
ret
jns
jg
outsb
adc
dec
aam
mov
push
add
mov
aaa
pop
fcomi
adc
xchg
testl
dec
xlat
xor
jl
fcoms
je
add
mov
es
movsl
xchg
clc
into
ja
inc
dec
cli
mov
xchg
call
add
lcall
xor
sarb
adc
or
jmp
bound
xchg
lock
push
mov
mov
cmp
int
or
test
sub
mov
jb
and
add
sar
add
pop
daa
stc
cli
push
sti
out
fs
inc
jl
jns
pop
ret
adc
nop
lret
dec
xor
repz
pop
and
and
lahf
stos
rcrl
add
ret
cmc
xchg
hlt
jg
fdivrl
outsl
inc
in
push
jae
push
adc
nop
pop
mov
jecxz
add
dec
cmp
mov
dec
xchg
mov
sub
mov
pop
mov
hlt
lods
sbb
movsl
popf
adc
std
sbb
pop
adc
pop
stc
fs
inc
js
push
repnz
jo
inc
and
in
jnp
fmull
jae
aam
cmpsb
lods
and
push
lret
adc
rclb
test
adc
hlt
test
mov
stc
scas
rcll
add
push
decl
mov
insb
and
mov
mov
push
and
mov
ds
cltd
and
mov
mov
je
lea
adc
nop
cmpl
jge
adc
xchg
mov
and
mov
dec
mov
aaa
inc
and
mov
adc
inc
cmc
js
inc
jmp
add
push
cmpsl
jmp
in
mov
cmp
fcmovnb
adc
xchg
int3
mov
hlt
mov
nop
sub
mov
adc
nop
sbb
cltd
jge
adc
xchg
jne
and
cmpsb
imul
pop
cmp
inc
adc
dec
inc
mov
mov
sub
xor
adc
nop
cwtl
andb
xorl
adc
stc
inc
push
jb
push
outsb
cli
adc
xchg
call
fldenv
jbe
rcll
push
xor
int
cmp
cmpl
xor
mov
ret
xchg
shll
mov
adc
push
pop
and
mov
dec
inc
xchg
inc
nop
movsb
cmpb
jge
adc
jb
and
add
jg
div
xor
clc
cld
mov
xchg
inc
jle
fisubl
jbe
rcr
ror
add
mov
cmp
fstpt
lds
movsl
and
cmpsb
pop
add
pop
andl
jge
adc
stc
test
stos
orb
test
gs
popf
pop
or
dec
and
mov
xor
dec
mov
add
mov
aaa
sub
cwtl
adc
xchg
orb
inc
cmc
add
pop
mov
icebp
ja
gs
jne
and
rcr
ror
add
mov
xor
push
sti
jbe
aad
mov
cs
mov
ds
cltd
and
mov
mov
je
lea
adc
nop
cmpl
jge
adc
xchg
mov
and
decl
adc
cld
cmp
lods
mov
cmpsb
jne
and
test
sbb
fcomi
adc
push
in
add
in
xor
jb
adc
xchg
inc
add
and
cmpsb
mov
shll
mov
adc
and
mov
addl
gs
nop
insb
xorl
jge
adc
jne
and
mov
aaa
cmp
test
xor
adc
dec
mov
add
std
js
pop
in
std
push
out
inc
data16
and
fxam
rol
add
mov
cmp
int
cmp
mov
hlt
lods
and
mov
popf
inc
xor
jns
pop
add
nop
or
mov
jge
adc
xchg
out
bound
cmpsb
pop
roll
mov
cmp
mov
dec
xchg
mov
sub
nop
mov
cwtl
js
pop
adcl
adc
xor
push
jp
movd
icebp
clc
mov
cmp
fcmovnbe
adc
xchg
fcom
mov
hlt
leave
and
mov
add
mov
adc
jp
adc
push
in
andb
and
fcoml
or
jns
pop
ss
nop
xor
shrb
test
inc
aas
jne
and
loop
out
jle
mov
and
cmp
add
adcb
xchg
das
je
imul
aam
lock
adc
mov
or
push
pop
orb
mov
pop
xor
mov
mov
ljmp
jge
inc
push
pop
icebp
pop
adc
cli
or
fs
pop
and
xchg
sub
cmp
inc
sbb
sub
jo
repz
and
pandn
jnp
scas
xor
dec
in
push
mov
push
gs
ljmp
mov
add
aam
jg
insl
loopne
pop
jge
cld
sbb
or
int3
mov
or
jae
adc
cmp
cmp
xor
inc
push
cltd
das
sbbb
sbb
push
jg
mov
push
fnstcw
popa
mov
adc
addb
arpl
icebp
mov
imul
jmp
cld
insb
push
mov
sbb
ror
push
push
lret
in
adc
mov
jl
leave
bound
dec
out
cmpsl
xor
decl
mov
cs
rorl
cltd
notb
cmp
pop
or
sub
pop
notb
jae
enter
xor
jle
sub
imul
cmp
nop
arpl
jle
divb
mov
sub
push
jo
pop
addb
mov
out
sbb
repz
das
mov
mov
repnz
not
push
pop
mov
in
outsb
hlt
in
mov
in
mov
cs
inc
or
cmp
xchg
inc
inc
sbb
pushf
jns
out
lock
leave
cmp
testb
xchg
adc
mov
jle
add
movsb
or
mov
in
std
sub
push
fsubrs
test
inc
add
repnz
div
je
and
or
inc
dec
fdivrs
dec
cmp
sti
jno
cmp
cli
pop
pop
xorl
test
xor
sub
dec
out
xchg
add
mov
out
insl
nop
xor
sbb
in
rcrl
femms
sub
out
lods
sbb
rclb
lods
ja
sub
push
bound
outsl
pop
daa
cmpb
jp
sbb
sbb
test
push
mov
outsb
and
js
inc
cld
test
push
mov
adc
jmp
in
xchg
mov
ss
sbbb
mov
mov
inc
push
ja
jb
loope
push
insb
fidivrl
sti
roll
jmp
cmp
pusha
sahf
arpl
lcall
imul
push
adc
cld
jae
arpl
mov
push
aam
push
rclb
jge
sbb
xchg
pop
add
or
add
mov
insl
stos
rolb
mov
sbb
inc
sub
test
sub
add
pusha
add
test
cld
jle
adc
and
mov
pop
xorl
outsl
mov
xor
int3
cmp
xor
inc
insb
and
ss
addr16
mov
lret
cmp
adc
popa
mov
push
mov
rol
stos
or
in
mov
bound
test
shll
mov
inc
cmove
mov
adc
jnp
call
jnp
jbe
sbb
jns
fists
repz
add
ds
cli
loope
mul
pop
mov
xlat
aaa
daa
loop
stos
clc
mov
jg
in
xchg
adc
sbb
xor
mov
adc
cmp
inc
cwtl
add
insb
jge
or
dec
xorb
sahf
cmp
lods
scas
push
and
lods
mov
ljmp
shlb
cmp
popf
lea
clc
addr16
cs
cmpsb
dec
clc
adc
push
stos
pop
inc
lods
inc
fcom
xchg
mov
inc
mov
and
jae
pushf
repz
or
in
inc
jo
and
std
jae
inc
push
sub
popf
or
and
jl
xchg
cwtl
cli
repz
mov
jmp
xchg
xchg
cltd
ja
xchg
std
arpl
xorb
xchg
sbb
sub
cmpsb
repz
and
xchg
shrl
or
lahf
idivl
shl
aas
jo
sbb
jae
adc
sti
insb
pop
jg
sbb
push
or
push
sarb
jp
mov
icebp
mov
dec
loopne
jmp
push
cmc
xchg
fsubrs
cmp
add
lcall
mov
addl
jb
adc
call
pop
jnp
fstps
xlat
lods
popf
mov
inc
popa
lret
das
repnz
lods
mov
mov
jmp
idivl
rcrb
xchg
mov
and
mov
mov
test
xchg
mov
xorl
sbb
std
xor
adc
aaa
stos
pop
sahf
sbb
adc
cmp
adc
sub
or
mov
mov
aad
pop
push
pusha
fsubrl
mov
and
pop
lcall
test
jl
jp
mov
fwait
push
mov
mov
pop
cmp
lods
sbb
mov
dec
adc
outsb
cmp
les
mov
xchg
dec
pop
imul
gs
mov
stos
or
xchg
mov
insl
and
mov
mov
adc
inc
inc
divb
and
cmpsb
cmpsl
iret
rcr
add
dec
xchg
pushf
add
test
sub
pop
lret
adc
xchg
clc
popf
pop
dec
jb
aas
imul
sbb
es
mov
dec
dec
xor
dec
jge
decl
jne
adc
or
jne
and
jb
fwait
dec
in
mov
and
stc
mov
xor
sub
rclb
xchg
inc
pop
add
and
lods
adc
dec
pop
mov
hlt
jge
lret
nop
sbb
or
movsb
xchg
inc
xchg
and
cmpsb
outsl
cmp
adc
mov
movsl
vmovups
clc
adc
test
inc
mov
pop
adc
nop
js
xchg
dec
adc
or
mov
jo
hlt
xchg
and
mov
jmp
mov
out
icebp
iret
cmc
iret
and
cmpsb
stos
mov
sbb
mov
cmp
pop
mov
xchg
js
rclb
xchg
adc
and
mov
jns
jge
or
mov
jmp
dec
fnstenv
xor
cld
jle
pop
mov
and
mov
jecxz
mov
inc
shlb
clc
cmpsb
dec
push
sarl
aaa
sbb
clc
and
and
adc
push
dec
mov
sbb
std
xor
push
loop
xchg
sar
in
stc
adc
push
div
mov
add
adc
scas
xchg
add
nop
jbe
test
xor
lcall
adc
std
adc
out
aaa
adc
nop
adc
mov
lock
xor
adc
push
mov
pop
bound
add
mov
cmp
xchg
jle
mov
hlt
push
and
movsb
jge
adc
shll
sub
mov
nop
inc
adcl
jno,pt
push
imul
xor
leave
inc
push
jne
and
cmpsb
xchg
shll
mov
cmp
fistpl
cltd
jo
cmpsl
ret
mov
mov
cmp
xchg
mov
mov
cmc
or
hlt
aaa
clc
mov
lock
negb
mov
fsts
adc
nop
push
orl
movsb
xchg
inc
push
jle
mov
dec
cmp
sub
mov
int3
test
push
imul
mov
sbb
lahf
pop
add
insl
mov
adc
cmp
repnz
frstor
xor
push
pop
scas
adc
nop
repnz
sti
scas
orb
repnz
mov
testb
dec
cli
lahf
subb
push
es
std
pop
pushf
lret
pop
xchg
adc
add
movsb
mov
stc
xchg
ret
out
repz
push
and
stc
std
add
jge
push
jl
mov
cmc
cld
xor
std
push
int
dec
sti
or
mov
gs
imul
mov
cmp
sub
addr16
xchg
pop
fs
mov
pop
inc
push
xchg
push
out
push
pop
jnp
pop
arpl
rcr
sub
pusha
pop
push
push
dec
repz
push
push
sbb
push
mov
xor
test
cmp
hlt
inc
sar
inc
out
pusha
mov
push
imul
popa
bnd
sti
inc
jo
mov
insl
cli
cld
dec
cmp
push
shlb
addr16
mov
fildl
xchg
jae
imul
mov
lock
mov
mov
sub
sbb
push
notb
dec
xchg
pop
pop
pop
cld
pop
xor
inc
hlt
call
rolb
hlt
push
lea
mov
insl
lahf
push
out
push
clc
sub
push
scas
mov
out
sub
sbb
cmp
push
out
int3
and
in
movsl
aas
sbb
jp
push
jge
andl
jns
adc
mov
pop
jne
sbb
mov
cmp
push
dec
scas
jnp
xorl
js
adc
add
mov
pop
inc
pop
pop
inc
movsb
lret
cmp
outsb
mov
pop
insb
and
icebp
jae
aas
sbb
xor
dec
jo
popa
and
adc
sub
je
add
inc
cmpsl
je
dec
mov
hlt
inc
xchg
dec
mov
or
adc
ja
idivl
sbb
xor
push
fldl
movsl
adc
inc
flds
add
xchg
insb
repz
clc
pop
mov
loope
push
mov
xchg
cmp
cmpl
xchg
xchg
add
jg
push
mov
dec
jae
sti
sbb
mov
arpl
adcl
lcall
mov
bound
xchg
bound
cli
xor
jecxz
xchg
pop
cmpsb
cmp
cmp
inc
outsb
or
addr16
mov
test
in
lcall
icebp
push
add
imul
push
bound
gs
adc
xchg
test
jo
jmp
xlat
mov
mov
inc
ficoms
mov
jb
ret
rorb
pop
jbe
insl
add
sbb
xchg
rolb
je
divb
mov
pop
lods
mov
push
push
mov
xchg
and
cltd
nop
xorb
push
mov
in
add
dec
jb
push
cmp
mov
inc
mov
jg
hlt
adc
fs
gs
mov
adc
rcrb
mov
in
push
sarl
movsl
and
and
loope
mov
pop
nop
add
mov
cmpsl
jmp
adcl
rolb
addl
pushf
mov
enter
jns
stos
gs
xchg
mov
xor
mov
lock
mov
scas
int3
pop
or
fs
imul
cmp
adc
inc
xchg
fwait
imul
outsl
xchg
mov
aas
mov
pop
mov
aas
and
inc
and
shl
or
push
loop
mov
mov
dec
subb
inc
jb
jl
dec
movsw
data16
sbb
xor
xor
scas
ljmp
xchg
push
loop
hlt
mov
nop
push
adc
xchg
fisttpll
pop
lock
push
push
xor
test
movsl
dec
push
js
fs
push
pop
in
les
mov
inc
dec
clc
js
dec
jbe,pt
ds
pushf
dec
mov
push
nop
ret
ds
cmp
aas
mov
aam
mov
pop
repz
in
add
or
xchg
int3
fs
push
daa
xchg
and
movsb
mov
fcomip
mov
mov
jo
dec
jnp
ljmp
popa
test
out
dec
in
int3
icebp
xchg
xchg
and
stc
adc
xchg
cmp
jne
call
shll
insl
je
cmc
je
inc
xor
insb
lock
icebp
shlb
adc
hlt
scas
adc
sarb
jo
sahf
daa
push
out
ja
mov
add
xchg
testb
int3
aad
sub
repnz
push
xchg
mov
clc
mov
cmp
stos
mov
jmp
pop
call
inc
mov
fcoml
addr16
mov
mov
mov
dec
pop
out
lcall
adc
divl
or
repz
scas
popf
stos
xchg
or
and
ds
fistps
or
push
jecxz
pop
in
push
adc
push
in
mov
aaa
mov
sbb
sbbl
xor
sahf
pop
cmp
lret
and
pop
cwtl
jecxz
xchg
jbe
bound
ds
push
cmp
jecxz
push
outsb
mov
push
xchg
sbb
xchg
ja
adc
push
mov
dec
leave
inc
lea
cmp
xor
dec
jecxz
inc
xchg
stos
shll
pop
pop
xchg
xchg
clc
pop
pusha
cmp
mov
cmpsl
cmp
adcl
inc
cmc
xchg
int3
repnz
fdiv
mov
dec
fstpt
movsb
not
pop
jmp
xor
or
add
or
lods
or
shll
add
scas
push
mov
sbb
add
dec
add
inc
inc
xlat
fadds
ljmp
inc
sub
in
mov
repnz
sub
pop
loop
mov
xor
mov
mov
sub
addr16
pop
and
dec
and
dec
mov
test
mov
or
push
subl
mov
pop
sub
movsb
lock
pop
xor
outsb
out
cmp
jge
mov
out
ja
lret
inc
dec
mov
cmp
lret
or
and
lds
sbb
jno
xlat
add
push
pop
jmp
fucom
roll
mov
lahf
add
cmp
nop
cmp
sbbb
adc
inc
scas
iret
mov
or
in
xor
sub
push
inc
mov
cmpsb
xor
cmpsb
mov
fdivs
loopnew
out
adc
int3
cltd
jb
add
cmp
popf
insb
inc
adcb
mov
lret
gs
jo
xchg
aaa
and
push
cmp
push
sbb
push
mov
push
rcl
repnz
outsl
int3
hlt
test
adc
daa
jne
push
inc
hlt
movb
les
shll
dec
rcr
or
inc
rcrb
js
mov
add
inc
inc
dec
dec
mov
jmp
xchg
pop
cmpsb
rcrb
push
fstpl
mov
xchg
aaa
mov
shll
mov
xor
inc
and
clc
mov
push
daa
shlb
cmp
lea
je
cmp
pop
sbb
out
jo
xlat
lock
inc
cmp
aas
mov
aaa
push
lea
rol
jmp
xchg
es
fs
popfw
int3
jo
mov
std
mov
xchg
test
push
lock
loope
mov
in
test
sub
nop
cmp
xor
repnz
mov
add
or
movsb
xlat
repnz
dec
std
addr16
popf
cld
iret
stos
mov
mov
aam
lds
pop
iret
sbb
mov
xor
imul
sub
push
lcall
test
mov
sub
push
adc
and
xchg
clc
adc
ficoml
lcall
jnp
ret
adc
hlt
stos
scas
cli
std
mov
adc
mov
pop
mov
or
dec
inc
and
mov
out
cmpsb
gs
fdivrs
inc
push
mov
dec
pop
cmovbe
lock
sti
cmp
mov
lret
inc
dec
pop
xchg
and
loopne
push
cs
sbb
adc
dec
sbb
movsb
test
outsb
mov
xor
outsb
xchg
movsl
popa
mov
mov
xor
stos
fwait
push
call
mulb
dec
in
nop
mov
fwait
bound
pop
test
scas
movsl
push
mov
movsl
xchg
sbb
mov
sbb
cmpb
outsl
mov
daa
pop
mov
pop
sub
gs
mov
stos
jecxz
push
jns
sub
adc
stos
lea
cmp
or
fwait
adc
xchg
cwtl
mov
adc
or
and
test
and
xchg
mov
sub
and
inc
pop
adc
xlat
idivb
pop
les
xchg
mov
int3
enter
movsl
in
inc
dec
in
or
es
repnz
test
aas
hlt
pop
gs
mov
ret
inc
jge
push
xchg
cmp
cmp
cltd
or
insb
jbe
scas
pop
push
jl
cmpb
das
dec
xchg
addb
inc
call
imul
mov
xchg
or
fdiv
mov
xchg
add
xchg
jl
aaa
filds
js
push
adc
test
lret
mov
push
adc
sub
enter
mov
and
jae
call
ds
sbb
jne
xchg
inc
add
push
xor
dec
cltd
aas
xchg
push
mov
jb
xchg
inc
fmuls
sub
mov
inc
dec
mov
fwait
cwtl
inc
push
sbb
xchg
or
push
and
lods
sub
cmc
xor
dec
sub
leave
sbb
or
jno
addl
xchg
pop
cmp
inc
mov
rcrb
test
fmuls
sbb
and
decb
push
mov
lea
mulb
xchg
mov
daa
or
repz
cltd
or
dec
ja
add
mov
jp
ret
mov
push
dec
int3
jecxz
loopne
cli
test
insb
xorb
xchg
or
xchg
pop
mov
sbb
in
sbb
outsb
push
inc
negb
push
jb
movsb
push
adc
idiv
pushf
mov
inc
xchg
in
imul
add
push
addl
xchg
dec
es
mov
push
pop
test
add
cmpl
in
int
into
or
in
mov
cs
pop
sbb
fst
mov
rclb
mov
push
pushf
cmp
les
fldt
jns
je
movsl
dec
bound
mov
outsl
fadds
push
inc
add
movsb
mov
loop
mov
nop
adc
sbb
sbb
mov
sub
leave
mov
and
leave
inc
mov
js
negb
cmp
adc
pop
cmp
hlt
push
test
sbb
sahf
jge
sbb
scas
jmp
pop
dec
mov
rolb
xchg
aaa
xor
mulb
pop
cmp
sbb
cli
adc
pop
mov
mov
mov
pop
out
xchg
xchg
pop
mov
and
xchg
sbb
imul
out
nop
adc
test
mov
fs
sbb
mov
mov
xor
ficompl
mov
mov
lcall
pop
or
cmp
es
lcall
sub
cs
dec
int3
jecxz
sub
xor
les
pushf
sbb
lea
stos
repz
dec
jl
jbe
pop
mov
test
adc
push
sbb
ret
out
in
and
mov
pop
push
xor
enter
fwait
jb
xchg
mov
addb
fwait
pop
sub
pop
mov
adc
decb
mov
xchg
add
imul
loop
cltd
dec
adc
sti
jbe
fmuls
push
inc
test
xchg
mov
mov
stos
nop
lahf
dec
stos
add
cmp
fiaddl
push
xchg
mov
add
mov
cmp
xor
stos
jg
pop
out
outsl
repz
mov
fmull
jbe
cmp
clc
clc
fnstenv
xchg
cmp
push
cmpl
into
cmc
mov
adc
xor
dec
sahf
sbb
mov
pop
imul
jae
inc
add
dec
push
clc
dec
cwtl
adc
js
fs
es
dec
xchg
in
sti
mov
pushf
xlat
in
jecxz
fdivl
mov
xor
pop
add
adc
jmp
mov
cld
dec
rolb
pop
stc
push
imul
cs
cli
xchg
adc
mov
mov
fwait
mov
dec
xchg
in
data16
inc
lods
inc
dec
inc
dec
jnp
popf
cwtl
push
pop
sub
cs
fdivp
sbb
mov
add
adc
pop
sarb
repnz
xlat
xchg
pop
mov
dec
rcrl
jo
xor
push
and
mov
jo
adc
mov
pop
imul
packssdw
das
cmp
lahf
popa
out
movsl
and
rep
rcr
clc
mov
xchg
ss
cld
or
into
pop
mov
mov
in
shlb
aas
push
cmp
test
mov
jno
pushf
mov
cmp
jns
cmp
xlat
test
dec
xchg
fnstsw
fcomi
or
fmull
adc
daa
in
xor
cmp
ljmp
sbb
sbb
pop
jbe
pop
push
add
ljmp
pop
jg
jae
stos
pop
sub
les
fucom
orl
and
test
sahf
inc
out
inc
fwait
repnz
je
mov
lods
repnz
lahf
lahf
and
pop
gs
adc
push
push
pushf
cld
shl
add
std
std
sub
insb
sub
stc
inc
dec
fwait
xor
cmpsb
inc
cmp
sar
jl
cld
sub
jl
hlt
dec
adc
iret
inc
pop
cmp
loop
cli
inc
lahf
mov
leave
adc
inc
inc
xor
popf
movb
pusha
adc
cmp
shrb
imul
cmp
mov
sub
inc
inc
mov
fwait
cmpsb
bound
mov
loopne
popa
cmp
incb
cmp
pop
inc
xor
out
test
pop
xchg
jno
cmp
adc
pushf
out
mov
lock
sub
lret
and
dec
shll
cli
push
add
jne
jg
sub
in
fistps
test
inc
sbb
adc
into
or
adc
pusha
cmpsl
sub
mov
or
push
les
out
mov
adc
jmp
pop
imul
enter
push
sub
cmpsl
icebp
and
add
mov
add
push
xchg
and
cmp
insl
leave
mov
xor
dec
jp
inc
and
add
xchg
lods
out
sbb
push
ret
cmp
in
push
rclb
sub
inc
dec
daa
sbb
mov
paddd
add
dec
xchg
xor
repz
out
sub
push
mov
mov
adc
js
mov
mov
mov
push
mov
xchg
movsb
fwait
enterw
pop
orl
lret
pop
scas
push
out
sub
scas
stos
inc
stc
pop
out
and
in
add
dec
mov
inc
push
rorl
int3
cli
jmp
cmp
ljmp
out
adc
cld
xchg
xchg
es
hlt
or
add
fwait
in
sbb
lret
mov
out
in
cmpsl
push
call
idivl
shlb
fwait
bound
daa
lcall
xchg
sahf
std
adc
jns
scas
ljmp
das
nop
mov
add
aas
clc
cmpsl
fisttps
in
sbb
push
mov
xchg
loopne
adc
push
inc
imul
or
or
xlat
lret
bound
lahf
fmull
cmc
mov
add
push
and
add
mov
in
mov
cltd
mov
rolb
adc
jmp
cmp
xchg
gs
leave
jl
or
cmp
adc
mov
jg
jne
inc
jp
push
jmp
gs
xor
push
inc
rolb
push
ja
cmp
repz
push
jl
sbb
lret
mov
sahf
pop
out
cmp
sbb
scas
sbb
clc
mov
fnstsw
sbb
cs
clc
ret
out
adc
sub
inc
push
mov
and
jecxz
popa
xchg
insb
test
jae
sbb
leave
int
jnp
lea
pop
push
es
outsl
jns
and
call
and
sub
push
subb
movsb
inc
adc
sub
push
jmp
mov
add
jge
inc
clc
xor
cld
push
out
fists
push
sbb
dec
jae
icebp
add
sarb
or
add
ljmp
loop
xor
xchg
lret
mov
add
xchg
mov
repnz
das
test
add
std
test
or
popl
dec
popa
mov
sbb
test
mov
adc
clc
jg
jbe
ss
adc
sbbb
test
rol
fbstp
adc
test
or
sbb
aad
xor
mov
xchg
ret
fmulp
cltd
dec
popf
mov
mov
out
mov
jl
mov
out
cs
xor
movq
add
cmc
ja
jnp
push
das
icebp
aad
jno
pop
imul
cli
xor
imul
sub
cmp
fbld
sti
jle
and
hlt
fadds
adc
sub
fisttpl
push
add
ljmp
sbb
aas
clc
jl
xor
ljmp
and
push
loopne
jmp
inc
push
leave
xchg
or
push
div
stos
icebp
push
ret
and
aam
sarl
stos
mov
mov
cmp
fimuls
jae
push
add
ljmp
or
or
add
mov
ljmp
daa
jns
in
lock
mov
push
aaa
mov
in
imul
push
faddl
stc
das
mov
add
test
xor
jo
in
cltd
mov
out
fcmovu
fisubrl
stos
sahf
jmp
sahf
fwait
and
data16
mov
lds
test
popf
lea
testb
mov
sbb
popa
add
mov
fucompp
ss
dec
or
fwait
jmp
adc
call
lds
sub
stos
lcall
adcb
enter
xchg
and
repnz
cltd
sub
xlat
sub
and
mov
repnz
nop
cli
inc
lods
cmc
add
imul
cmp
loop
mov
out
inc
std
push
cmp
add
xor
push
in
repnz
insb
mov
ja
lcall
scas
fs
push
mov
test
xchg
inc
dec
out
dec
pushf
lock
arpl
jns
and
out
popf
pop
xor
pop
les
out
mov
adc
subb
div
mov
add
ljmp
ja
pop
jne
mov
mul
and
inc
cld
push
test
sbb
mov
xor
cmpsl
fidivrl
push
filds
adc
xlat
in
sbb
test
test
sub
cmc
push
repnz
sbb
sbbl
xor
icebp
jo
testl
aam
push
and
sub
jmp
pop
ret
push
call
xchg
mov
sub
cmpsb
fmuls
mov
bound
cmpsb
imul
sarl
jmp
inc
mov
dec
mov
test
xchg
testb
jae
adc
orb
mov
movsb
push
inc
ret
test
push
pop
and
push
cmp
shlb
xlat
std
xor
ds
enter
cmp
mov
mov
loopne
adc
cmp
rolb
test
ret
xchg
xor
pusha
add
or
outsb
fildll
movsl
cmp
test
daa
dec
ds
fistpll
mov
rcll
aam
mov
add
pop
adc
das
mov
mov
iret
insb
dec
xchg
xchg
cmp
cmp
rorb
je
jge
xor
fs
adc
gs
je
add
adc
jl
daa
mov
sub
dec
imul
je
mov
daa
push
xchg
adc
mov
cmp
sbb
adc
cmpsl
cli
push
arpl
movsl
mov
mov
lods
ficomps
ja
shlb
dec
jmp
xor
pusha
jg
jnp
cmp
repnz
xor
lahf
mov
pop
jns
pop
shl
cld
inc
mov
cmp
stc
cli
iret
sub
idivl
ret
xchg
int3
inc
mov
dec
inc
pop
ljmp
clc
ja
lods
scas
inc
inc
fistl
mov
push
pushf
mov
cmpsb
mov
pop
mov
andb
addr16
stc
lods
add
sub
popa
sub
mov
pop
movsb
sbb
jb
pop
adc
jo
enter
sbb
inc
mov
subb
push
mov
mov
adc
in
fmull
ficoms
dec
pusha
daa
xchg
dec
inc
out
push
cs
mov
in
outsb
movsl
push
xchg
sti
outsl
in
mov
mov
adc
iret
nop
add
je
or
ret
jno
repnz
sub
js
outsb
mov
adc
xor
pusha
icebp
fbld
nop
adc
sbb
xor
stos
cmp
in
je
jp
sub
sub
xchg
repnz
cli
mov
aad
pop
xchg
mov
add
rolb
mov
push
fdiv
xor
mov
mov
add
cld
hlt
jns
movsb
pop
ljmp
pop
jg
cmpsl
mov
and
pop
in
mov
out
mov
icebp
sub
xchg
push
sub
ret
js
dec
pop
das
xlat
push
push
outsb
sub
stos
lea
adc
imul
nop
pop
insb
mov
insl
ja
jecxz
push
fldl
mov
mov
push
inc
pop
loopne
pop
cmc
dec
xorl
mov
adc
pop
or
jp
aad
jmp
cli
push
imul
sub
repz
xchg
dec
xchg
mov
scas
mov
sbb
stc
jbe
icebp
xchg
push
lret
out
loopne
cli
rcr
lock
clc
in
pop
icebp
add
mov
lock
stos
jge
jp
mov
out
dec
repz
push
mov
push
shl
mov
add
mov
inc
add
jl
or
mov
xchg
into
add
mov
jns
fbstp
scas
mov
pop
repz
fldl
decb
or
mov
mov
pushl
ret
adc
cwtl
loopne
div
cmp
or
push
in
add
pop
mov
pop
or
mov
sub
jbe
fstps
inc
sbb
mov
mov
repz
gs
xor
push
sti
popl
cwtl
sub
inc
push
rorb
sahf
faddp
mov
sbb
cwtl
cmp
jnp
cmp
incb
in
mov
mov
fs
xlat
repnz
outsl
clc
dec
testl
faddl
and
daa
outsl
mulb
add
and
mov
push
dec
dec
cmpsb
dec
inc
cmc
repnz
fadds
push
add
pop
and
je
jecxz
dec
push
js
icebp
push
lods
pop
call
test
push
ret
jbe
call
push
jge
pop
pmulhw
inc
lods
int3
arpl
mov
call
add
bound
jecxz
fld1
imul
mov
enter
or
mov
push
out
adc
jo
dec
or
push
test
xchg
or
shrb
push
jbe
lock
xchg
pop
xchg
inc
mov
fdivl
lock
xor
pusha
sbb
lret
sbb
fwait
jecxz
jno
push
xor
jp
dec
aam
or
mov
test
or
xchg
orl
fwait
fs
and
fisttps
sbb
xchg
sti
cltd
xchg
xor
es
and
add
and
cld
xchg
and
rcll
hlt
cli
loope
mov
and
test
fisubs
xchg
jnp
icebp
dec
andl
out
insb
inc
adc
arpl
or
add
sar
pop
xchg
icebp
ja
cmpsl
xlat
das
lods
int
adc
decl
inc
int
aam
pop
insb
push
adc
xchg
sub
push
dec
adc
flds
xchg
mov
mov
push
jl
lea
or
xor
lahf
sahf
daa
mov
or
dec
bound
cmpsl
cwtl
loop
inc
jns
pop
sbb
fs
sbb
pop
xor
or
jmp
cli
or
push
lret
lret
lret
mov
pop
add
inc
sti
and
outsl
jae
out
mov
insl
sub
fcomi
outsl
adc
lret
icebp
pop
aad
icebp
orl
xchg
andb
dec
ljmp
inc
pop
cmpsb
out
xchg
sbb
xchg
mov
stos
out
out
and
lods
inc
test
cltd
inc
cli
nop
cmp
mov
xchg
mov
sbb
mov
js
jne
rorb
adc
pop
xor
aas
test
lods
fwait
mov
pop
xchg
stos
subb
fadd
test
pop
or
adc
add
mov
or
cmpsb
inc
jnp
dec
stos
sbb
add
push
pop
mov
push
pop
test
mov
int3
mov
jge
mov
jp
loop
push
mull
jae
and
repnz
test
int
jbe
inc
inc
push
test
test
push
std
mov
mov
jns
sbbl
pop
push
lds
jo
andl
fisttpl
mov
aas
and
fsubrl
sub
mov
and
out
mov
sbb
xchg
sub
loope
outsl
test
in
sbb
lods
das
inc
or
cs
and
not
out
jecxz
loop
jb
dec
fcomps
mov
sti
bound
sti
sbb
subl
sti
lods
cli
jle
sub
jb
jae
xchg
pop
enter
and
divb
mov
icebp
inc
mov
loope
jle
and
repz
fs
pop
add
pusha
add
fs
inc
scas
pop
sub
or
pop
jl
loopne
imul
aaa
push
add
out
sbb
sahf
aad
add
adc
mov
cld
jae
les
push
xchg
dec
cmpsl
aam
stc
mov
pop
sub
ljmp
into
pushf
loopne
cmp
xor
cwtl
imul
and
mov
cli
aaa
leave
in
jne
int
lcall
add
movsl
xor
shll
jo
hlt
xchg
xor
iret
negb
ss
dec
scas
out
add
idiv
mul
xchg
out
out
repnz
pop
jbe
push
push
std
xor
jb
or
mov
movsb
addb
pop
push
or
inc
in
xor
or
int
mov
add
jae
fwait
sti
jae
xchg
xor
sar
aas
rol
push
orl
shr
imull
out
jle
adc
sub
push
loope
iret
and
leave
outsl
stos
in
adc
sbb
pop
psubd
dec
insb
push
mov
jp
xor
sub
out
add
fimull
mov
hlt
cmc
mov
jne
xor
sahf
inc
and
test
into
rorb
popa
shlb
xchg
mov
paddb
mov
loope
push
outsb
mov
out
xchg
adcl
adc
lock
xchg
mov
add
subb
and
cwtl
xorb
insb
fwait
inc
ficompl
xchg
cmc
hlt
leave
add
dec
jne
shll
dec
push
inc
bnd
sub
push
xchg
pusha
addr16
mov
outsl
sti
ja
imul
sbb
mov
mov
dec
lcall
mov
mov
adc
xchg
imul
mov
popf
sarb
dec
aam
out
ds
sub
in
loopne
test
dec
push
std
jle
in
adc
adc
loopne
and
clc
orb
movsb
cpuid
push
nop
imul
jmp
dec
in
dec
and
in
xchg
or
mov
xchg
call
fbstp
or
stc
mull
roll
jl
add
xchg
push
dec
in
psrld
cli
aam
cmpsl
and
loopne
pop
dec
jb
test
mov
push
clc
popa
loop
out
mov
mov
leave
adc
lods
scas
inc
out
outsl
sahf
mov
xchg
mov
mov
rcr
lcall
mov
inc
lods
dec
sub
inc
mov
or
shlb
jo
or
lahf
jbe
cli
cmc
pop
repnz
pop
rcll
hlt
dec
or
push
daa
dec
or
mov
out
xor
lret
pop
arpl
adc
jg
xor
mov
std
mov
mov
cmpsb
dec
out
aas
add
jb
push
xor
sub
xor
repnz
scas
sbb
je
pop
in
loopne
lds
out
daa
jne
sarb
testl
cli
fisubrl
lret
cltd
jg
adc
out
or
js
repnz
add
add
xchg
cli
xchg
testl
inc
dec
jnp
leave
lea
push
and
mov
jb
int
lods
and
mov
xchg
in
adc
mov
add
cmp
test
dec
lods
sub
mov
movsb
data16
add
push
pop
pop
shll
mov
stos
push
jl
loop
jmp
aad
pop
idivl
aas
push
dec
or
mov
mulb
aam
sub
dec
inc
or
call
push
clc
jp
les
add
add
ja
repz
mov
push
repz
insl
jmp
mov
cld
pop
insb
dec
ficoml
xor
aaa
or
loopne
mov
sub
push
cmp
push
add
imul
mov
frstor
in
sarb
and
mov
pop
xor
add
ljmp
add
mov
xchg
das
daa
imul
pop
cmp
xor
jb
sbb
movl
push
jns,pn
sbb
jb
inc
in
mov
add
testl
xor
inc
out
jnp
pushl
push
scas
mov
in
movsl
sbb
cmpsl
mov
xchg
lea
lods
pop
or
int3
ds
rolb
movsb
push
mov
testl
pusha
xor
cmp
leave
in
or
and
les
lods
sub
xor
sbb
mov
push
jne
fcomip
adc
leave
add
pop
or
and
test
cmp
repz
xchg
jo
mov
mov
jmp
out
adc
pop
push
fnstsw
pop
xor
loopne
pop
xor
fs
sub
stos
xchg
addl
sbb
add
aaa
stc
push
adc
negl
push
mov
rol
lock
lret
xchg
add
push
mov
negl
aam
cmp
cmpsb
xchg
or
dec
jbe
jne
adc
nop
xor
push
dec
add
lret
lods
dec
decl
mov
in
das
or
es
push
imul
pop
xor
xchg
and
repnz
dec
fcmovu
add
jl
xor
pop
jmp
scas
and
rcll
adc
adc
adc
adc
ret
push
pusha
adc
dec
cs
test
ljmp
out
adc
push
pop
enter
test
jnp
mov
daa
sbb
pop
sbb
dec
pop
loope
loope
sbb
ficoml
lods
push
std
cmpsb
mov
jno
scas
add
inc
add
adc
adc
ds
mov
sub
mov
push
mov
sbb
repz
stos
ljmp
mov
adc
cld
mov
rcrb
nop
xor
mov
les
jmp
push
jb
rol
hlt
iret
insb
xchg
sbb
dec
in
lcall
mov
push
xchg
sbb
jae
shl
xor
repnz
inc
jnp
fs
pop
add
sbb
icebp
lret
mov
mov
ficomps
mov
dec
jns
sbb
pop
xchg
sbb
mov
loopne
mov
sub
lds
out
jmp
and
scas
lods
sbb
push
adc
movsl
sbb
add
fbstp
dec
imul
je
inc
mov
ljmp
in
jb
fiaddl
xor
cmp
sbb
push
cmp
push
push
mov
jmp
cmpsb
dec
mulb
dec
mov
cmp
or
pop
pop
mov
dec
incb
dec
and
xchg
inc
or
mov
aam
mov
pop
jae
stc
push
arpl
pop
pop
imul
mov
dec
addr16
das
xchg
stos
das
push
fbld
lahf
jg
xor
inc
arpl
ficomps
repnz
pop
mov
rorb
push
jo
jg
aad
xchg
dec
out
dec
sub
jmp
leave
inc
adcl
lds
adc
mov
imul
pop
push
aam
inc
xchg
nop
imul
clc
xchg
sbb
fstps
xor
iret
inc
insl
cmc
inc
push
sub
inc
in
cmc
or
jne
mov
or
cld
ds
xchg
mov
stos
notb
jo
mov
inc
add
call
repz
imul
dec
inc
jnp
in
pop
add
dec
adc
imul
fcompl
xchg
inc
xor
fptan
inc
sbb
mov
fmuls
pusha
adc
test
add
loopne
ficompl
shl
jno
ficoml
rcr
add
popf
lret
fldl
xchg
mov
cmp
int
popl
push
jle
scas
xchg
mov
rclb
das
mov
and
jbe
and
icebp
cmp
aad
aam
jecxz
lock
stc
cmp
loopne
in
pusha
call
push
or
cmc
fldcw
mov
inc
mov
mov
jno
add
add
and
cli
test
xchg
jmp
inc
xchg
out
lahf
loop
inc
bound
inc
test
jnp
jle
jb
test
mov
movsb
add
repnz
je
aaa
mov
mov
jl
sbb
push
pop
adc
popf
mov
mov
xchg
mov
xor
sub
sub
in
fistpll
mov
out
push
cwtl
adc
xchg
sub
dec
cli
mov
sbb
inc
cmpl
jle
cmp
adc
mov
mov
lods
inc
nop
psrlq
test
sub
ficompl
aad
push
out
inc
pop
add
loopne
pop
pop
out
pushl
popf
sub
out
rcrb
sbb
ljmp
shl
or
ljmp
and
lret
jae
push
adc
xchg
xchg
loopne
scas
ret
jae
or
pop
dec
mov
dec
ret
test
ljmp
shlb
sbbl
je
push
inc
movsb
jp
jns
jnp
push
pop
sbb
sti
out
xor
mov
mov
test
pop
mov
inc
push
mov
dec
std
jge
xorl
je
out
dec
inc
lods
hlt
push
movsb
hlt
inc
inc
outsb
mov
xor
mov
adc
mov
out
fisttpll
pop
cmp
scas
ja
fwait
nop
sarl
push
mov
xchg
arpl
outsl
stos
mov
jne
pop
outsl
nop
jns
imul
push
das
adc
ret
call
mov
loop
daa
push
add
push
sbb
pop
cli
add
push
cwtl
dec
xchg
add
popf
mov
out
addr16
incb
add
push
out
push
cwtl
pop
mov
pop
pop
mov
jb
aaa
orl
mov
arpl
pushf
call
dec
mov
push
add
xchg
dec
inc
pop
sbb
jo
or
rorl
sbb
cmp
pop
sub
push
adc
dec
push
add
mov
push
sbb
pop
push
sbb
jl
mov
and
jl
sbb
add
ljmp
je
inc
add
ficoml
lods
orb
lret
and
sahf
incl
pusha
fldcw
rclb
xor
out
cmpsl
sbb
inc
or
shll
pop
sti
xor
mov
bound
js
mov
jmp
aam
ret
cltd
xchg
dec
leave
or
pop
cmc
popf
stos
aas
mov
adc
jp
push
cli
in
mov
jecxz
mov
mov
out
inc
mov
xchg
stos
add
mov
scas
mov
push
sbbb
fidivrl
data16
ret
push
jae
and
mov
mov
inc
mov
sti
std
sub
inc
insl
js
repnz
adc
fs
les
mov
mov
mov
mov
pop
ficompl
adc
mov
mov
addr16
push
xor
divb
xor
mov
into
adc
add
push
mov
push
mov
pop
add
push
inc
fldl
mov
call
cmpsb
sti
and
je
pop
in
jns
xlat
popa
mov
xorl
inc
cmp
ficompl
inc
shll
pop
mov
sub
insb
sbb
fisubs
add
pushf
lcall
xchg
icebp
xchg
adc
jns
cld
push
mov
fstl
lcall
xchg
scas
and
imulb
mov
jbe
or
push
push
xchg
and
mov
mov
pop
cmpsb
ficompl
cld
imul
dec
adc
dec
dec
jne
jp
or
bound
pop
int
outsb
adc
out
popf
or
sbb
repz
jl
cmp
cmpb
fiadds
xor
je
popa
sub
jle
and
mov
adc
add
shll
std
jae
sub
iret
sbb
filds
ljmp
movsb
sub
out
test
dec
inc
push
mov
cmp
mov
adc
jo
imul
hlt
cmp
jp
cmp
or
add
sub
fwait
pop
clc
push
je
icebp
mov
stos
in
inc
leave
jno
sbb
sahf
adc
adc
jno
or
aaa
je
push
mov
mov
out
dec
in
movsl
dec
xor
cwtl
or
addl
dec
inc
fmull
push
lea
in
sub
mov
repnz
push
adc
out
std
mov
daa
int
cmp
ret
mov
out
xorb
andl
push
or
inc
or
inc
jmp
lods
mov
cltd
mov
add
les
or
sbb
lods
out
inc
ret
mov
fcomp
add
add
sub
bound
mov
push
pop
push
js
inc
push
sub
jno
dec
inc
stc
pop
adc
addb
xor
cmpsl
mov
cmpsl
inc
mov
jne
inc
lods
mov
mov
repz
inc
adcl
cld
sahf
mov
xlat
fcomp
push
mov
out
rcll
jne
cwtl
adc
movsb
hlt
mov
stos
jno
mov
pusha
shr
xchg
add
jle
mov
test
xor
sub
inc
stos
fstpt
repnz
lds
or
dec
int
inc
cld
jmp
dec
xchg
mov
push
xchg
fiaddl
repz
shrl
xor
mov
aad
push
adc
sbb
mov
mov
dec
adc
roll
mov
sbb
pop
add
std
inc
mov
adc
sbb
aam
lds
pop
and
jbe
cmp
outsb
inc
loop
mov
gs
pop
fisttpl
shlb
add
js
push
pusha
arpl
mov
mov
pop
xor
lods
mov
add
test
inc
in
add
fwait
xlat
test
inc
shll
loopne
sti
and
add
insl
loope
jnp
push
mov
gs
fs
pop
in
pop
jmp
jl
and
ret
pop
and
add
repz
pop
pop
push
jne
xchg
in
repz
mov
hlt
push
xor
jg
cmp
xchg
out
icebp
out
adc
cmpsb
adc
in
fsubs
out
add
push
loope
popf
loopne
pop
subb
and
out
push
inc
je
dec
jnp
mov
bound
push
popl
fsubrs
add
xchg
scas
sub
je
dec
push
enter
fdivrl
out
xchg
mov
jmp
jnp
add
jo
lret
scas
insb
negl
adc
mov
loope
sbb
sbb
cli
push
or
cmp
jnp
mov
clc
dec
cmp
sti
inc
sub
jae
jp
lock
leave
xchg
dec
xchg
je
daa
arpl
clc
pop
movsb
testl
les
adc
push
push
dec
addr16
ja
clc
rolb
mov
shll
out
xchg
push
xorb
test
or
out
sbb
sub
mov
mov
clc
adc
dec
lcall
sbb
out
sti
arpl
and
xchg
adc
addl
jnp
xor
movsl
inc
inc
xchg
rcr
cmp
add
and
mov
inc
adc
xchg
out
ret
clc
fildl
js
sbb
ljmp
cmp
inc
push
lret
xchg
fsubrs
mov
popa
sub
loop
jle
lds
mov
fiaddl
loope
sbb
fsubs
cmp
gs
popa
das
and
adc
mov
mov
lods
and
sub
xlat
mov
cmp
or
orb
outsb
sub
out
mov
nop
test
push
sub
js
test
rcr
aam
add
popa
mov
es
mov
adc
dec
xchg
mov
mov
sbb
adc
sbb
ja
in
dec
js
test
cmp
mov
jne
jg
dec
and
ret
jmp
out
mov
add
cltd
jecxz
inc
mov
or
push
cmpsl
mov
add
daa
add
insb
in
mov
adc
sbb
hlt
mov
add
movsl
sbb
jge
ss
out
push
loop
out
inc
int
ds
sbb
or
cs
xchg
mov
and
add
int
inc
mov
push
push
mov
js
roll
pop
push
mov
dec
decl
aas
inc
jmp
sub
rorb
mov
clc
push
push
inc
mov
pop
xor
dec
adc
jg
push
out
sub
pop
lods
aaa
cwtl
push
pop
lods
mov
or
mov
fyl2x
dec
stos
inc
adc
or
ljmp
sbb
fs
ret
in
jmp
data16
je
out
roll
add
adc
jmp
push
cs
and
mov
lret
clc
mov
jo
ljmp
push
lods
and
push
xchg
arpl
mov
inc
jo
mov
mov
push
mov
lcall
je
data16
out
div
jo
test
daa
xor
pop
cwtl
aad
out
loope
sub
mov
mov
cli
out
ljmp
adc
int3
add
cs
mov
les
popa
or
sbbb
cwtl
subl
jo
inc
nop
out
lret
repnz
sub
outsl
repz
mov
mov
ja
iret
out
xchg
adc
icebp
fmuls
inc
stos
inc
ss
or
lea
outsb
mov
rolb
into
popf
cmp
jns
out
sbb
jno
add
jnp
xor
add
bound
sbb
lahf
sarb
in
xchg
std
push
cmp
jns
mov
in
roll
pop
adc
xor
loope
mov
pop
mov
subb
jge
jbe
jge
pop
sbb
lods
xor
xchg
movsb
jp
mov
xor
dec
mov
pop
pop
repnz
push
jns
daa
loop
xchg
jnp
jne
lock
mov
push
push
adc
adc
test
mov
pop
in
jae,pn
popa
cltd
ss
sub
cwtl
scas
lds
and
add
xchg
icebp
cmpsl
icebp
pop
xchg
dec
add
fbld
outsl
scas
imulb
filds
test
cli
add
jno
cmp
dec
jns
adc
into
adc
or
insl
push
shrl
jb
loop
mov
jecxz
icebp
in
push
loop
addr16
fistpll
icebp
std
jmp
andb
sbb
cwtl
icebp
pop
dec
in
add
cltd
xorb
push
sti
pop
xchg
out
stos
loopne
jne
lods
xchg
mul
mov
dec
aam
inc
addb
push
sbb
fwait
aaa
mov
bnd
movsb
mov
or
gs
rorb
lret
fdivs
nop
ds
push
rcrb
pop
adc
jns
hlt
jp
push
jbe
cmp
or
mov
js
jns
or
cmp
popa
push
or
negb
out
cmp
repnz
mov
sbb
xchg
jp
cmp
in
and
stos
add
xor
xor
dec
or
sti
daa
dec
pop
andl
push
ret
cmpsl
adc
cmp
imul
or
adcl
inc
xchg
cli
rcll
test
mull
jbe
lahf
add
js
test
jbe
sub
inc
nop
mov
and
xchg
add
adc
roll
cmp
inc
dec
adc
cmp
adc
arpl
sahf
adc
in
mov
jns
ljmp
mov
insl
outsb
dec
adcl
add
fldenv
sub
nop
lods
ret
repz
es
jp
in
cmpsl
add
loope
aad
hlt
lahf
sti
pop
and
jmp
lods
inc
inc
or
lock
lods
inc
cmp
loopne
push
push
daa
gs
pop
bound
inc
xlat
loopne
mov
sub
cmp
aaa
cli
jecxz
out
imul
mov
sub
xor
inc
arpl
add
mov
jne
sub
imul
outsl
fadd
lea
adc
mov
push
inc
sub
aam
mov
push
sar
inc
fwait
das
andl
rol
xchg
ja
pop
rorl
jp
in
aad
jle
add
add
mov
je
loopne
mov
ja
mov
push
dec
or
mov
xchg
fs
push
push
jns
inc
lret
repnz
mov
push
add
push
and
dec
xchg
repz
mov
pusha
fdivrs
lods
popf
out
sti
xor
cmc
add
mov
orl
shr
cli
jp
mov
cli
or
mul
mov
outsl
cmpsl
cs
mov
jne
jnp
lods
and
pop
aad
sti
dec
mov
dec
addr16
xchg
das
out
stos
dec
add
push
nop
or
cmp
push
adc
test
jmp
sti
jg
jae
jge
jl
mov
mov
pop
dec
imul
mov
adc
cli
or
mov
gs
fstpt
mov
xchg
sahf
in
sub
in
push
push
pop
or
pusha
outsb
pusha
sti
sub
loope
mov
xchg
pop
mov
pop
movl
dec
test
push
sub
push
clc
cs
pop
fildll
mov
stos
imul
ja
mov
dec
shlb
sti
outsb
addr16
push
mov
cmpsl
pushf
inc
in
adc
add
enter
push
fwait
lock
mov
jo
nop
std
ret
mov
push
sbb
add
mov
adc
push
ret
push
icebp
dec
and
pushl
sti
or
cli
xor
mov
xchg
lock
fistpl
push
pop
in
call
dec
arpl
sbbb
adc
cmp
push
mov
sub
sbb
out
or
imul
jl
inc
scas
mov
mov
cmp
add
lods
in
lds
push
cmpsl
cmpsb
dec
sbb
push
das
sbb
or
mov
mov
movsb
das
sarb
xor
mov
cld
fidivrl
inc
mov
and
mov
mov
arpl
dec
jl
int
fisubrl
das
pop
in
xchg
xchg
and
scas
push
fistl
mov
cld
or
inc
pusha
sub
cmp
gs
inc
out
dec
stos
imulb
sub
mov
mov
cmp
pop
or
jmp
mov
inc
fs
rcll
stos
out
sbb
rolb
addr16
mov
sbb
stos
xor
push
shrb
mov
hlt
or
jno
sub
sub
or
xchg
lcall
sbb
push
ss
sbb
or
sbb
dec
jb
inc
aas
mov
push
fadd
inc
fnsave
es
popf
hlt
fisubrl
imul
data16
and
mov
adc
pusha
mov
and
nop
dec
out
jae
or
dec
out
sbb
std
pop
mov
push
mul
mov
insl
lods
push
or
xor
pop
fcompl
fistl
lock
div
jne
sub
add
sti
mov
cltd
cwtl
leave
iret
mov
lahf
in
dec
ds
loopne
shl
dec
icebp
ljmp
aas
pop
mov
sahf
sub
or
into
add
push
push
or
dec
dec
adc
pop
inc
mov
mov
jge
sbb
push
lods
sub
inc
mov
push
mov
xchg
cmp
xor
and
ljmp
fistpl
pop
sub
sub
in
push
mov
mov
xchg
xor
pop
mov
mov
adc
mov
mov
jmp
test
jmp
movsb
push
fs
sbb
stos
and
mov
and
enter
add
outsb
xor
push
mov
imulb
xchg
movsl
outsb
inc
sub
xchg
push
xchg
out
pop
jae
out
jl
jl
xchg
lods
dec
loopne
rorl
jb
adc
arpl
or
scas
lret
ja
das
test
movsb
or
push
loopne
lods
fldl
dec
push
pop
call
aad
dec
push
and
add
leave
jmp
push
xchg
inc
sti
stos
add
mov
adc
pop
test
pop
cmpsl
cli
movsl
jp
xchg
mov
inc
pop
sbb
fs
gs
pop
pop
push
repnz
jnp,pn
push
fcomps
add
jle
push
fldt
jge
movsb
xchg
inc
jge
scas
adc
out
cmpsb
arpl
shll
dec
or
cmp
movsb
inc
cmp
jo
mov
pop
out
xor
cmp
xor
pusha
or
xchg
xor
sbb
mov
xchg
imul
repnz
push
lahf
test
imul
insb
sti
ret
int
cwtl
push
mov
adc
xor
popf
pop
enter
push
shrb
sbb
adc
out
cs
in
mov
ss
subl
cmpsb
or
sbb
gs
inc
fistpl
mov
push
add
push
mov
decb
or
mov
mov
add
fdiv
mov
stos
jecxz
js
in
sbb
push
sbbb
jge
mov
add
adc
mov
aas
or
adc
adc
lret
jns
mov
repnz
mov
sarb
stos
mov
ja
aaa
dec
dec
pop
adc
addr16
push
jo
inc
adc
and
adc
and
clc
jg
xchg
sarb
fwait
mov
cld
xchg
ss
adc
xor
orb
lods
bound
and
pop
xor
cli
dec
sbb
mov
mov
jmp
into
mov
loop
in
lcall
addb
pop
fimull
inc
imul
popa
sti
fimuls
sti
stos
mov
lret
sbb
das
nop
lock
adc
jb
jo
dec
and
cltd
mov
mov
int3
and
push
fs
stos
dec
inc
add
push
pop
dec
andl
stos
sub
into
push
cmp
xor
std
pop
xor
insb
mov
mov
push
xor
pop
insb
inc
dec
sub
bswap
shrb
mov
xor
cmp
fucomip
jo
jmp
and
add
adcl
inc
inc
int
inc
std
fdivrs
xorps
cli
mov
dec
push
insb
mov
push
mov
cmp
outsb
jb
cld
sahf
mov
mov
lock
and
pop
loope
in
mov
dec
jb
mov
pop
stc
xchg
pop
cmp
or
dec
jno
sbb
dec
jns
mov
xor
inc
into
pop
xchg
pushf
dec
std
decb
sarl
mov
jl
test
push
js
dec
insl
mov
dec
inc
jae
pop
sub
pop
cmpsl
xchg
jle
cltd
lret
adc
pop
mov
inc
sub
sub
cmc
push
paddsw
out
sub
loop
and
and
test
ret
inc
push
dec
mov
push
and
in
aas
xchg
push
push
and
fcoms
adc
imul
jge
jnp
and
ret
adc
pop
xor
loope
inc
inc
daa
cwtl
sub
mov
fldenv
jg
pop
hlt
and
push
sbb
das
hlt
sub
push
inc
cmpsl
mov
popf
cli
or
int3
xor
daa
jmp
iret
adc
and
dec
pop
sub
repz
je
imul
xchg
imul
or
and
fldenv
sbb
sbb
ds
shlb
xchg
mov
jge
xchg
push
cmp
pop
lret
fistpll
pushf
push
ss
sub
sub
inc
mov
iret
mov
xchg
mov
popa
lock
push
lods
loope
pop
sbb
cld
outsl
mov
sahf
cmp
xor
rclb
rcll
add
fimull
sahf
push
push
popf
jns
push
in
in
dec
jne
lret
push
arpl
xor
sub
cmp
std
cmp
mov
or
mov
jmp
repnz
cmp
add
push
xor
mov
mov
add
jnp
sub
add
jns
movsb
in
push
pop
mov
pavgw
sbb
cmc
and
stc
jmp
je
std
hlt
loope
les
imul
std
ss
js
push
push
pushf
fildl
or
and
lret
jmp
out
call
mov
imul
cwtl
mov
or
inc
sbb
jno
fdivrl
dec
data16
mov
fdiv
dec
call
fmul
xchg
dec
je
adc
rcr
or
invd
lahf
mov
jge
add
imul
cwtl
jae
icebp
sub
jbe
sub
lods
decl
inc
les
sbb
stc
jecxz
jo
xchg
imul
mov
mov
mov
cmp
or
clc
sub
jnp
icebp
jo
cli
xchg
mov
dec
adc
adc
add
xchg
rcrl
les
cmp
dec
ret
add
les
icebp
hlt
dec
push
and
flds
cmp
push
sbb
inc
mov
std
sub
inc
adc
or
sub
out
xchg
mov
xchg
out
mov
xchg
test
pop
scas
addb
xchg
xor
shrb
mov
sub
sub
inc
add
xchg
adc
out
pop
xorl
or
cs
loope
in
std
cltd
push
or
xor
mov
scas
jl
and
stos
sti
int
inc
dec
fadd
dec
sbb
xor
in
nop
test
add
sub
bound
or
jle
push
xor
aad
jle
lds
cli
dec
rcl
dec
adc
adc
psubsb
pushf
inc
lret
xchg
shl
cmp
adc
incb
sarb
loopne
arpl
xor
mov
fs
faddl
xlat
pop
cmp
pop
pop
in
loopne
cmp
inc
xchg
pusha
repz
xor
lods
addb
mov
mov
icebp
dec
push
or
add
lea
push
es
idivl
std
or
adc
popa
pop
shll
test
js
push
jge
adc
ss
aaa
and
push
mov
pop
rcrb
sub
sahf
push
cld
and
or
jge
jnp
sub
jo
dec
in
cwtl
mov
adc
push
and
sahf
or
adc
push
adc
xor
ss
mov
sbb
dec
fwait
sti
add
push
arpl
mov
ds
jmp
mov
push
data16
arpl
out
jae
push
cmp
in
arpl
jg
cmp
inc
fwait
hlt
mov
movsb
outsb
rcr
ror
push
sarl
icebp
je
cmpsb
push
aad
mov
pop
pop
cld
out
inc
xor
andl
cmp
xor
aad
mov
iret
sbb
xor
or
addr16
xor
xchg
sbb
fidivl
pop
inc
jle
cmp
mov
ficoml
xor
mov
xor
xchg
jo
mov
mov
lods
inc
push
stos
cmpl
and
in
xchg
sti
insl
mov
lods
or
cltd
sbb
or
cmc
es
or
lahf
and
or
ds
inc
xor
cmp
push
ja
xchg
mov
pop
and
xor
movsb
repnz
out
js
add
add
inc
xchg
aaa
cmp
movsb
in
mov
and
cmp
rorl
imul
ss
test
adc
jb
sti
cmp
ss
dec
mov
or
popf
add
dec
stos
popf
ja
lods
adc
dec
into
mov
dec
mov
push
push
add
lcall
mov
lcall
fisubrs
inc
mov
add
mov
jbe
inc
cwtl
nop
gs
mov
xchg
imul
enter
scas
add
push
cmp
ret
pushf
inc
xor
movsl
pop
push
dec
fscale
push
mov
adc
and
hlt
jne
pop
mov
icebp
push
pop
arpl
inc
cs
mov
nop
cltd
bound
sub
add
pop
mov
jg
dec
ret
mov
jmp
fcmovb
adc
bound
fisttpl
fistpll
mov
fistps
adc
sbb
cmc
xor
pushf
cmpsl
mov
and
push
lock
cs
repnz
push
or
dec
and
fistl
popf
loopne
imul
loopne
mov
xchg
adc
pushf
subb
xchg
sub
data16
mov
test
jbe
es
adc
xor
cltd
jmp
sbb
or
mov
jae
scas
mov
fnstsw
fwait
sub
dec
repz
filds
pop
adcb
adc
inc
shll
fdivs
mov
cmp
add
cld
aas
push
lock
add
adc
ljmp
out
ret
movsl
xchg
lcall
xchg
push
rorl
or
rolb
sarl
mov
xchg
mov
mov
cmp
mov
repnz
adc
push
fwait
pop
inc
fbstp
xor
mov
imul
ja
rorb
inc
add
stos
add
sti
inc
fiadds
aad
nop
adc
mov
jmp
xchg
add
mov
leave
pop
in
ljmp
inc
out
fcmove
dec
push
and
pop
test
cmp
push
adc
mov
mov
fidivrl
cmp
xchg
sbb
aad
fs
push
test
cmp
mov
jnp
hlt
pop
pushf
neg
mov
dec
aad
scas
in
xor
xlat
adc
pop
enter
or
fnstsw
pop
pop
mov
adc
adc
addb
scas
popf
push
rclb
dec
cltd
mov
outsl
inc
jp
insb
push
fcompl
rclb
jae
es
es
mov
inc
xchg
dec
cs
jmp
outsl
repz
arpl
jp
addr16
lret
cld
movsb
in
add
int3
push
out
push
mov
lods
jno
xor
aas
dec
test
stos
xchg
stos
xor
movsb
adc
hlt
ret
scas
push
jne
in
jecxz
mov
das
push
cli
arpl
or
cmpsb
mov
jp
imul
push
stos
xlat
movsl
jae
dec
inc
push
mov
lret
stos
push
cs
iret
test
jno
jae
out
mov
fwait
aas
xchg
dec
fildl
test
jmp
cwtl
add
or
lock
or
push
cmp
or
sub
cli
cmp
cmpsb
bound
jge
mov
data16
add
add
add
jp
cltd
mov
mov
push
xchg
or
ret
pop
aad
jns
push
dec
test
xor
popf
xor
and
mov
mov
fimull
xchg
mov
cmp
test
andb
std
cld
dec
out
inc
pop
xchg
mov
pop
in
pop
stos
mov
or
pushf
xor
std
xchg
xchg
sti
rolb
popf
aad
mov
popa
mov
xchg
pop
sbb
fs
push
mov
nop
inc
daa
mov
ja
push
outsl
inc
imul
les
mov
xchg
mov
pop
test
clc
inc
cmpsb
xor
fdivr
and
push
movsb
mov
mov
testb
pop
fdivs
sub
shlb
jbe
sbb
sbb
pop
in
add
inc
out
rcrl
outsb
xchg
dec
push
sbbl
pusha
push
mov
fldl
inc
cmp
int3
inc
stos
in
and
int3
stc
out
dec
test
lret
addr16
stos
gs
or
jbe
cmp
rcrl
mov
pop
aaa
or
daa
lret
xchg
inc
adc
jge
push
add
add
dec
ljmp
xchg
js
xchg
fistps
xor
dec
outsl
enter
add
mov
xlat
jbe
adc
enter
xchg
ret
inc
out
pusha
cmp
jmp
jbe
mov
xchg
out
or
in
sub
mov
xchg
mov
in
mov
xor
or
adc
push
cmc
shll
fwait
cld
aas
and
add
sub
and
mov
mov
ja
jo
lods
rcr
movsl
lods
es
nop
fldenv
mov
out
sti
js
jmp
and
cmp
out
or
incl
jmp
mov
out
cmp
jl
cmpl
xor
cmc
lods
add
push
imul
sbb
les
mov
add
xor
imul
cmp
leave
stos
lahf
jae
xchg
inc
imul
cmpsb
out
stos
inc
hlt
inc
jnp
inc
addr16
in
jae
mov
hlt
mov
pop
and
inc
aam
cld
inc
sbb
or
mull
mull
das
pop
mov
std
mov
std
fwait
jmp
push
jno
push
mov
mov
imul
test
mov
cwtl
data16
push
mov
pusha
push
adc
icebp
cltd
inc
pusha
nop
mov
cmp
mov
mov
sqrtps
adc
xor
repz
js
mov
mov
push
fldt
xor
add
lret
dec
inc
mov
jl
shrl
sub
in
int3
pop
adc
call
mov
xor
mov
cmpsb
and
sbb
sbbb
sub
pop
hlt
jmp
cmp
push
loop
jl
outsl
gs
dec
jae
mov
jne
sbb
test
cwtl
dec
push
sbb
mov
cli
push
addb
dec
xchg
push
adc
pop
shlb
jmp
mov
jmp
mov
pop
inc
push
pop
fs
or
jmp
jp
push
jmp
inc
out
mov
mov
adc
xchg
jge
in
add
jo
pop
xlat
pop
ret
jae
or
iret
xor
test
jl
xor
sub
test
movsb
sar
push
fmull
xchg
std
add
adc
push
fildll
insl
cwtl
cmpsb
inc
enter
lods
pushf
mov
dec
cmp
fdivr
add
repnz
pop
xor
cmp
ds
dec
sub
cmp
xor
flds
addr16
cmpb
outsl
sahf
notb
rclb
cmpsb
sti
xchg
imul
mov
push
cs
and
jg
mov
dec
lods
test
adc
test
dec
mov
hlt
xchg
sub
push
mov
xchg
mov
mov
movsl
aad
dec
pop
imul
xchg
cli
daa
sbb
bound
mov
mov
fstpl
arpl
fs
shrb
stos
inc
inc
fmull
or
test
hlt
and
inc
or
cmp
pop
push
cmpsb
daa
fdivs
jl
mov
insl
loope
or
jmp
adc
in
stos
adc
pop
aad
lock
rclb
out
pop
sar
jmp
or
dec
xchg
je
adc
sub
fiaddl
testb
mov
inc
adc
fists
inc
mov
cmc
mov
dec
test
jo
push
je
sbb
mov
fidivl
cli
popf
mov
imul
addb
popf
xor
or
xchg
adcl
push
sarb
dec
cmp
add
loopne
fildll
sbb
lahf
push
pop
jle
pop
cwtl
lahf
and
imul
dec
iret
es
inc
out
es
mov
and
adcl
jge
jae
rcrl
pop
pop
add
test
je
clc
push
lods
pop
pop
cmp
lock
cmp
adc
mov
in
mov
fs
popa
jmp
sub
fildl
cmp
add
xchg
lret
push
and
aam
add
mov
or
dec
mov
fimuls
fadd
cmpb
fdivp
mov
adc
pop
les
and
aas
outsl
sbb
cmp
lods
bound
xchg
pop
and
in
lds
mov
push
push
or
push
inc
ljmp
ret
fisubrl
push
sarl
enter
sar
outsl
clc
jae
cmpsl
ret
gs
cmp
pop
je
or
shrb
jle
xor
inc
xor
lds
xchg
fdivs
rep
adc
jge
xor
xor
mov
inc
mov
shlb
test
jns
cmpsb
sub
or
cmp
mov
mov
iret
cmp
bound
push
mov
fsubp
mov
int3
xor
inc
mov
xor
sti
lds
rcll
das
shll
xor
sbb
sub
iret
test
cmp
push
jl
sarl
inc
in
mov
adc
jo
push
xor
clc
lea
aaa
out
mov
jnp
ljmp
fsubrl
jle
je
xor
imul
jnp
or
inc
mov
push
jb
dec
push
pop
popa
jg
cmp
negl
es
test
push
inc
lcall
pop
test
inc
xchg
mov
ljmp
sbb
imul
insl
les
xchg
scas
mov
or
mov
mov
movsl
lahf
div
int
in
stc
jae
mov
nop
nop
add
test
dec
js
adc
add
pop
xor
loope
loopne
add
sub
sub
nop
mov
add
adc
jmp
xchg
xchg
push
repnz
jle
sbb
push
inc
cwtl
dec
and
rclb
mov
sbb
push
and
and
dec
divl
push
push
roll
sahf
sbb
xor
inc
pop
inc
xor
inc
xchg
jno
outsl
fcom
aad
adc
aad
jbe
out
imulb
lret
cmp
int
je
cmp
jns
addr16
fcoms
in
adc
les
pop
scas
scas
push
fsubrs
mov
adc
cmp
add
jo
and
push
jg
lods
and
and
ljmp
out
jge,pt
add
repz
mov
pusha
xor
fs
add
loopne
mov
xchg
pcmpgtb
cs
bound
xchg
push
lret
inc
dec
out
rclb
mov
mov
fucomi
fisttps
jle
bound
pop
mov
xchg
cltd
adc
rcl
xchg
outsl
add
jae
inc
insl
insb
dec
ret
and
sbb
sbb
sub
sar
sub
dec
or
jnp
rcll
xchg
std
add
out
ljmp
and
sahf
push
adc
in
test
call
cmc
lahf
or
outsb
jne
ss
ret
out
mov
dec
daa
push
out
or
inc
rcrb
popl
cmp
mov
adc
mov
push
mov
faddl
mov
pop
popf
lods
mov
cmp
xor
add
adc
cs
std
popf
dec
test
cmc
into
push
jne
or
in
fidivs
sub
mov
jnp
std
xor
jbe
imulb
pop
loop
jnp
movsb
mov
mov
pop
xchg
enter
je
in
jae
push
icebp
lret
sti
pop
inc
fdivrl
add
push
adc
lret
pop
add
insl
and
test
jbe
xor
push
push
arpl
inc
testb
mov
and
cmc
fwait
shlb
cmp
in
dec
push
pop
add
xchg
or
xlat
push
inc
adc
je
lret
jge
pusha
jmp
enter
push
mov
movsl
repnz
scas
int3
dec
push
mov
and
cmp
mov
lock
pop
js
push
mov
jle
loop
in
add
fnstsw
in
push
inc
jle
pop
pop
push
aaa
bound
xchg
mov
and
hlt
or
filds
xor
inc
std
xchg
mov
mov
xchg
loope
sbb
push
dec
ljmp
mov
mov
fisttpl
scas
cmp
mov
imul
pop
int
adc
mov
jge
cmpsl
je
jecxz
push
push
jge
test
test
xchg
cmp
mov
sbbb
dec
int
daa
das
jne
push
mov
test
jb
xchg
dec
pusha
in
mov
scas
sub
xchg
cmp
call
cmpsb
and
mov
xchg
push
jns
scas
enter
inc
stc
jo
pushf
gs
mov
aam
xchg
jp
adcb
sub
add
fdivl
mov
hlt
inc
test
dec
mov
mov
or
cmp
mov
jae
and
fists
incl
enter
insb
aam
or
call
out
stc
adc
push
ss
jge
aas
mov
or
jmp
cmp
mov
sub
xchg
and
daa
add
pop
dec
mov
fcoms
cli
or
popf
dec
popf
cmc
xor
es
stos
clc
cwtl
rcll
inc
cmc
aam
call
pop
repnz
xor
jns
dec
add
dec
lret
dec
lds
mov
inc
and
push
je
sub
cltd
mov
out
out
pop
inc
lock
pop
sub
mov
add
xor
out
cs
jno
movsl
pop
and
shlb
mov
cli
sub
gs
sti
clc
nop/reserved
mov
sbb
mov
pop
daa
mov
test
scas
subl
pop
xchg
fs
pusha
movsl
call
pandn
mov
mov
add
push
push
fwait
pop
lods
iret
enter
sub
push
ret
inc
fdiv
mov
xchg
mov
bound
rorb
xchg
mov
inc
pop
mov
lret
add
outsb
imul
dec
adc
repnz
in
lods
pop
xchg
pushl
jmp
mov
sahf
or
xchg
rorb
mov
es
and
mov
hlt
inc
or
xchg
sub
cmp
push
cmp
mov
daa
fisubrs
pop
in
inc
lods
inc
in
jne
inc
jp
ja
dec
dec
mov
inc
or
dec
lds
cltd
idiv
push
and
popa
out
jb
push
loope
dec
insb
add
scas
adc
add
in
mov
push
push
cld
jp
decb
cmp
adc
mov
xor
ljmp
out
adc
mov
icebp
bnd
cmp
sub
sbb
shll
pop
push
sbb
inc
jge
inc
and
shl
jo
mov
repz
mov
mov
test
adc
xchg
inc
sar
fcomps
scas
mov
pop
pusha
fdiv
into
lahf
cmp
inc
imul
cmp
push
inc
lock
pushf
or
incl
jmp
xor
test
xorl
xor
jecxz
or
cmp
push
push
jge
push
sarb
push
add
ljmp
adc
addr16
sub
inc
pop
cmpsl
dec
pop
ss
stc
rcrl
pop
jae
inc
or
xor
ja
pop
sahf
jb
jnp
push
repz
xor
fcomp
lret
dec
stos
nopl
push
pushf
rorl
addr16
in
call
rcrb
pop
push
in
add
mov
in
pop
and
addb
inc
jne
mov
dec
pop
xchg
mov
add
cmp
pop
std
cwtl
cmpsl
add
mov
aas
lea
popf
fildll
push
iret
jne
dec
out
pop
inc
outsb
clc
rcrb
mov
bnd
sti
fcmovbe
add
orl
jmp
cmp
adc
and
repz
and
aam
push
mov
jl
imul
hlt
sub
daa
push
test
jmp
in
jge
cmp
adc
mov
add
inc
notl
mov
mov
add
insl
hlt
xor
andb
test
cmpb
jge
cmpsl
fmull
mov
cli
xor
and
add
and
cmp
cs
xchg
jno
xchg
add
jge
mov
aad
loope
push
lods
and
pop
frstor
fimull
insl
pop
sbb
das
push
int3
xchg
push
mov
fwait
pop
outsb
testl
jns
lods
mov
or
and
xor
sarb
adcl
loopne
mov
sub
negl
ret
fsts
sub
sbbb
in
mov
mov
lea
in
and
and
sbb
fstl
cmp
fisttpl
call
push
pop
and
ljmp
push
outsb
fsub
mov
inc
mov
fdivrl
mov
dec
inc
jo
out
repnz
mov
shrb
push
dec
cmpsl
sbb
push
aas
and
cmc
mov
pop
and
or
test
and
cmc
repz
loop
fmuls
mov
jmp
inc
mov
dec
sub
sbbl
addr16
pushf
pop
mov
fadd
mov
mov
mov
out
popf
mov
cmp
mov
mov
out
mov
adcb
xchg
aas
xchg
lods
xchg
jp
pop
or
mov
jb
inc
mov
orb
scas
scas
mov
aaa
daa
adc
fs
dec
adc
mov
and
call
inc
adc
adc
cli
test
jno
pop
mov
xchg
add
lret
clc
fs
jmp
imul
lods
outsb
lock
int3
dec
clc
and
rorb
dec
add
sbb
fcmovbe
imulb
inc
std
mov
or
cltd
daa
cmp
mov
jbe
xor
cld
sub
xor
dec
xor
test
push
cmpsl
mull
dec
movsb
xor
xchg
adc
xchg
sbb
push
inc
push
mov
int
adc
mov
cmp
clc
xor
hlt
mov
and
insb
sub
aad
sub
test
fnstenv
out
mov
test
rcr
ret
push
mov
addl
pop
pop
and
mov
adc
add
or
andl
fwait
arpl
xor
mov
inc
sub
add
lcall
ficoms
dec
sub
push
clc
daa
cmp
and
cld
adc
or
mov
push
push
xchg
fdivs
jo
jl
sub
mov
jo
sub
fistpll
fistl
push
mov
cmpsl
cmpsl
ror
faddp
add
sub
pop
sub
outsb
add
mov
pop
and
cltd
sbb
push
pusha
shrb
xchg
mov
dec
push
pop
in
and
pop
fsubrl
pop
xchg
loop
mov
jno
push
or
jecxz
ret
jns
fisubrl
aas
xor
aas
stos
addr16
hlt
scas
cmp
scas
adc
fstpt
sahf
jp
test
mov
imul
inc
ret
std
xchg
maxps
inc
cwtl
push
cli
aaa
cmp
mov
rcrb
and
push
movsl
mov
dec
pusha
mov
in
pop
aas
inc
jae
pop
in
adc
fwait
and
mov
dec
xchg
sub
jo
in
xor
cmpb
mov
jbe
xor
in
roll
cmp
add
inc
insl
aas
mov
xor
movsl
lds
push
lcall
or
icebp
push
dec
inc
mov
imul
mov
lcall
paddw
fdivrl
adc
imul
or
xor
sub
fs
ss
ret
rorl
out
aad
and
dec
popf
pusha
inc
sarb
push
stc
in
inc
in
or
or
call
je
lods
add
mov
lahf
jbe
cmp
mov
and
je,pn
xor
pop
lods
sub
push
fcoml
sbb
jae
pop
pushl
ret
lret
out
cmp
push
imul
mov
mov
out
xchg
mov
addr16
push
dec
or
rorl
add
mov
cmpsl
sbb
mov
hlt
jns
cmp
popa
mov
out
push
sbb
jno
pop
sub
push
popf
mulps
mov
hlt
testl
xchg
test
cmp
and
adc
mov
mov
js
inc
mov
and
ficompl
and
repz
test
hlt
es
lods
mov
aaa
call
cmp
mov
jo
ja
sbb
jp
scas
pop
mov
popa
jno
adc
lret
mov
jb
mov
outsl
dec
cmp
test
js
fwait
mov
in
clc
jge
fs
mov
adc
scas
cmp
jo
push
std
push
and
ss
sbb
cmpsb
frstor
sbb
dec
mov
mov
loop
mov
jge
repz
dec
add
dec
ret
int
push
inc
jg
dec
mov
xchg
lock
mov
push
sbb
push
inc
insb
sahf
aaa
pop
ds
es
sub
add
frstor
jl
ret
mov
pop
fwait
sbb
stos
rorl
inc
adc
loopne
sub
cwtl
in
jae
xchg
loope
mov
ret
adc
rol
sub
outsb
add
mov
push
cmp
sbb
ljmp
loop
sub
push
xchg
mov
xlat
pusha
dec
inc
mov
and
jo
pop
mov
push
inc
pushf
lods
fnstsw
std
repnz
jns
cmpb
out
rorb
cmp
outsl
cmp
xchg
xchg
mov
imul
insb
lret
dec
sti
xor
or
xor
divb
shll
pop
lods
inc
cmc
addb
sahf
mov
mov
mov
pop
icebp
mov
gs
std
sbb
test
dec
adc
aaa
stos
mov
aad
add
test
adc
scas
push
mov
mov
das
fisubl
dec
or
clc
cmp
hlt
lock
mov
frstor
mov
mov
jo
lret
push
sub
xchg
mov
mov
or
movsl
adcl
jbe
mov
mov
enter
enter
fwait
ja
outsb
std
mov
adc
push
cld
lret
out
hlt
mov
cld
and
scas
dec
sbb
or
pop
out
dec
mov
dec
std
mov
push
nop
pop
pop
mov
cmp
jae
popf
jb
jbe
mulb
outsb
daa
outsl
push
dec
jle
push
lods
dec
into
sbb
lcall
inc
adc
scas
iret
sub
pop
stos
hlt
punpcklwd
and
sub
in
rep
or
loopne
loop
and
arpl
and
sub
sbb
xchg
xlat
insb
mov
and
cmp
cmp
aam
fs
jbe
jecxz
pop
call
shl
pop
fs
and
repz
loopne
dec
push
jp
in
mov
rcl
testl
mov
jns
and
addl
sarl
add
mov
push
jp
pop
xor
pop
in
jno
insb
test
push
pop
xor
or
cmpsl
pushf
pop
jae
or
or
fwait
ret
dec
andps
pop
sub
add
aam
cmpsl
ja
inc
outsb
gs
outsb
leave
ret
out
addl
aaa
mov
jns
test
mov
loopne
je
inc
call
js
icebp
add
cmp
ficompl
ret
add
sub
std
movsl
push
mov
testb
add
clc
mov
repnz
adc
loope
jns
pusha
jmp
pcmpgtb
je
sbb
and
cmp
cmc
and
push
cltd
cmp
cs
push
add
rolb
sub
cli
mov
pusha
orb
stos
ljmp
add
mov
scas
cmp
jmp
lods
adc
push
ds
inc
or
push
stos
psllw
jno
pop
leave
js
xchg
aaa
lods
inc
dec
mov
inc
in
jno
inc
pop
mov
mov
xchg
mov
subl
out
mov
out
in
adc
adc
addr16
jecxz
push
repz
daa
dec
iret
adc
mov
out
test
mov
mov
scas
out
sbb
or
out
mov
xor
icebp
dec
shrb
movl
rcrb
dec
and
cmpsl
xchg
nop
imul
jne
fidivrl
sub
inc
dec
xchg
jb
sub
stc
inc
fnsave
sub
push
add
adc
loopne
insl
or
mov
xor
sti
jecxz
mov
sbb
add
mov
std
out
jmp
add
pop
gs
sbb
test
push
inc
andb
jno
lea
punpcklbw
inc
mov
add
xchg
stos
cltd
adc
xchg
outsl
pop
fs
pop
push
dec
adc
jnp
imul
clc
xlat
fs
add
daa
inc
mov
push
dec
repz
mov
inc
in
lret
movsb
xchg
adc
xchg
cli
push
and
push
fs
xor
in
xor
adcl
push
sub
adc
pop
sbb
iret
movsl
ljmp
and
jnp
or
scas
out
xchg
pop
sub
pop
jle
inc
clc
addb
cltd
jl
and
hlt
insb
adc
dec
lods
addr16
subl
mov
subb
js
xor
add
fdiv
arpl
sarl
cmc
fsubl
addr16
xor
pop
or
bnd
push
sahf
mov
adc
loopne
in
jne
scas
fbstp
call
stc
jbe
jp
mov
mov
subb
movsb
lea
dec
mov
lcall
or
inc
rorw
mov
lods
ja
dec
xor
pop
pop
iret
ret
out
mov
lods
push
dec
js
push
jbe
mov
scas
add
sub
sub
push
jne
mov
aam
pop
rcll
scas
xor
out
out
xchg
mov
testl
imul
and
dec
adc
sarb
push
sbb
mov
leave
mov
push
pop
mov
pop
hlt
aaa
out
push
flds
mov
cmp
hlt
jle
lock
ljmp
rcrl
rorb
dec
mov
xlat
push
lods
xchg
pop
leave
and
scas
cmp
jl
pusha
in
je
xchg
sub
mov
cltd
xchg
shlb
jle
adc
int
lods
jl
insb
jne
inc
outsb
cli
cmpsl
je
pop
fistpl
lods
jno
adc
insl
sahf
mov
inc
fbld
sub
out
pop
add
or
lea
or
stc
sbb
inc
repz
movsb
outsl
roll
inc
iret
adc
ss
rclb
mov
dec
or
cmp
pop
rcrb
loopne
and
scas
jb
xchg
nop
scas
out
fmull
cs
sbb
outsb
xor
jg
ret
mov
adc
cmp
fs
idivl
jmp
xchg
mov
xorl
sub
sub
outsb
lcall
insl
or
test
mov
or
add
fs
rcrb
cwtl
stos
mov
mov
fistps
stc
xchg
jecxz
shl
repnz
pop
mov
fcompl
test
cmp
add
add
sarl
outsl
mov
pop
adc
sbb
mov
shlb
and
stos
pop
sbb
jp
insl
dec
mov
test
hlt
data16
pop
fwait
adc
clc
mov
jmp
xor
mov
push
testl
push
jno
adc
imul
std
push
test
bound
or
fdivrs
ret
jb
dec
scas
mov
lock
xor
fdivs
push
pop
std
inc
out
pop
adc
mov
and
test
sti
adc
and
mov
data16
cmp
popf
popf
mov
jbe
mov
ja
inc
jmp
ja
sbb
jge
leave
mov
sbb
ja
in
movsb
pop
fs
mov
clc
repnz
sbb
leave
fiadds
push
and
clc
or
dec
mov
mov
into
fildl
cmp
out
arpl
xor
rorl
shr
mov
cld
mov
push
inc
sub
cwtl
xchg
mov
sbb
sar
mov
or
and
push
lret
imul
mov
cmp
in
fs
lods
leave
fisttps
cmpsl
ljmp
std
clc
js
es
hlt
pusha
cmp
jb
and
or
stc
imul
dec
cmp
loop
mov
enter
pop
pop
add
je
cmc
aad
sub
jbe
and
lods
add
push
adc
add
jno
test
aam
adc
mov
sbb
sbb
rcl
push
jne
push
mov
and
fucom
pop
jbe
in
sub
jno
das
js
stos
mov
test
xchg
call
jo
ret
ret
add
fucomip
dec
lcall
xor
in
bound
daa
ja
jne
cmp
xchg
leave
sbb
rorl
jnp
cmpsl
popa
cwtl
mov
add
out
sti
sub
imul
adc
xchg
or
inc
inc
dec
orb
xchg
jne
xchg
out
xchg
inc
lock
out
cmp
daa
orl
jecxz
cmp
mov
xchg
or
jne
dec
addl
and
xchg
aad
pop
push
pusha
mov
test
fdivl
std
imul
ret
or
xchg
ret
clc
dec
and
lods
test
pop
adc
push
mov
dec
sub
adc
mov
pop
xchg
cmp
fadd
add
jp
pop
sti
aad
std
std
or
cltd
add
jns
adc
mov
and
jnp
int
popf
pop
add
push
dec
jae
mov
push
cmpsl
xor
mov
nop
nop
rolb
lret
cld
sub
push
adc
icebp
ds
push
ja
fwait
mov
ret
ljmp
loope
imul
add
mov
mov
movsl
sbb
out
nop
and
xchg
push
test
push
add
sub
out
push
cs
scas
enter
test
mov
mov
pop
incb
fsubp
cmpsl
adc
jg
sub
dec
nop
adc
jo
cs
enter
jae
mov
ja
out
sbb
push
orb
inc
cmp
xor
hlt
je
test
adc
out
adc
push
add
ret
push
filds
adc
mov
dec
push
ret
mov
lea
inc
push
rcrl
hlt
leave
and
and
jmp
push
sbb
push
sahf
lock
fwait
sub
mov
fdivrp
dec
popf
push
pop
and
stos
inc
in
xchg
pop
sbb
or
rolb
insl
xchg
xor
and
and
insb
dec
cli
push
stos
in
pop
lock
and
pop
lahf
push
jae
inc
stos
xchg
notl
jno
mov
adc
hlt
hlt
rcl
xchg
lods
ds
jae
ds
out
xchg
add
cmpb
adc
in
xchg
jo
lret
dec
leavew
adcb
pop
negb
call
mov
ss
outsl
fsubr
mov
je
fwait
aam
sbb
lcall
xchg
push
mov
push
mov
xor
dec
cmp
es
pop
mov
adc
inc
cmp
jbe
jae
cmpsb
mov
xchg
mov
fcoms
push
out
cs
mull
sub
icebp
sbb
fists
push
mov
sub
adc
or
or
mov
pusha
fst
xor
lahf
shlb
scas
idivb
ret
inc
test
call
jl
mov
imulb
fisubs
mov
or
int
jne
mov
stc
rcrb
cltd
jl
or
jp
frstor
in
fmul
and
int3
mov
ficoml
mov
sub
mov
push
mov
and
mov
push
pushf
sti
cmc
test
lcall
movsl
pusha
jp
call
dec
dec
sbb
add
call
mov
xor
mov
jae
dec
outsl
jecxz
decl
mov
pop
nop
jmp
icebp
xchg
ficoml
dec
decb
lock
jmp
push
sti
cmpsl
sbb
mov
adc
cmpsb
adc
rcrl
lock
in
sub
and
pusha
mov
in
ss
xchg
cmp
push
loope
inc
sub
mov
cmp
inc
inc
loope
dec
repnz
pusha
or
cs
jb
inc
popa
loopne
jg
push
inc
loope
dec
test
add
xor
pop
lock
or
xor
cld
repnz
je
insb
fcmovu
jp
sbb
mov
jmp
xchg
cmc
pop
lock
cmpsl
or
jnp
mov
sbbb
xor
bound
movsb
mov
and
imul
or
jnp
mov
push
pminsw
addr16
adc
insb
dec
xchg
xor
dec
repz
or
adc
mov
shlb
repnz
lock
add
aam
nop
mov
or
xchg
push
mov
or
cli
and
pop
lret
jg
dec
test
inc
adc
fsts
imul
sub
aaa
aaa
or
jle
lock
jg
lock
push
jnp
jg
rorb
inc
dec
test
and
jo
fwait
inc
push
cmp
adc
mov
sbb
mov
dec
mov
fwait
inc
mov
jns
adc
jo
add
inc
mov
mov
adc
adc
fsqrt
add
push
lret
jp
cmp
jg
call
jae
es
in
mov
cli
mov
test
push
adc
xchg
fdivrl
add
xchg
push
or
je
jno
aam
xor
pusha
scas
inc
inc
push
sarl
push
cwtl
xlat
out
pop
movsl
iret
cmp
cmc
xor
inc
push
cld
and
cli
jb
jmp
hlt
ss
xchg
push
or
pop
lret
adc
push
adc
cmpsl
inc
aas
and
cmp
lock
cli
pop
cwtl
rol
xor
push
mov
sbb
scas
jnp
les
fwait
sahf
and
stos
sahf
adc
mov
sahf
je
fcompl
push
scas
sti
and
mov
sbb
movsb
xor
sahf
xchg
add
test
dec
sahf
hlt
add
add
add
add
and
lods
mov
inc
xor
je
fcomps
addr16
outsl
sbb
add
adcl
sahf
mov
scas
loop
cmpsb
loop
gs
loop
gs
jecxz
gs
gs
gs
jecxz
gs
jecxz
js
and
je
xlat
sbb
sub
sarl
cmpsb
loop
gs
pop
gs
jecxz
gs
jecxz
gs
gs
fwait
gs
jecxz
gs
jecxz
gs
gs
gs
jecxz
gs
jecxz
js
and
sbb
sub
cmp
dec
insb
mov
pop
insb
inc
in
imul
insb
data16
mov
fwait
insb
push
in
stos
insb
push
in
mov
insb
ss
fldt
jmp
in
sti
insb
out
ss
lods
add
dec
scas
adc
mov
xor
pushf
mov
push
ds
mov
jae
fsubl
xchg
ds
mov
ds
ret
ds
sarl
jl
jecxz
insb
lock
mov
lea
or
xor
pushf
mov
push
ds
mov
jae
fsubl
xchg
ds
mov
ds
ret
ds
sarl
jl
jecxz
insb
lock
pop
mov
lea
push
mov
xor
pushf
xor
xor
xor
xor
xor
cmp
movsb
into
sub
mov
sbb
into
or
aam
jl
in
insb
daa
hlt
cmp
mov
mov
xlat
xor
pushf
xlat
inc
repnz
push
repnz
xlat
fs
xlat
je
test
int3
xlat
xchg
repnz
movsb
repnz
mov
sbb
repnz
aam
jl
in
insb
shl
cmp
out
fists
mov
out
xor
pushf
out
inc
sti
mov
push
sti
cld
out
fs
in
out
je
fsubr
test
int3
out
xchg
sti
cmp
movsb
sti
sub
mov
sbb
sti
or
aam
jl
in
insb
out
hlt
aaa
lods
sub
lods
mov
and
xor
pushf
fildl
fistl
frstor
pop
mov
fwait
daa
dec
outsl
add
sbb
pushf
add
test
dec
sahf
mov
push
sahf
hlt
add
cld
add
in
push
mov
xor
and
cld
and
ffreep
dec
scas
addr16
aad
test
mov
fidivrs
addr16
icebp
aaa
test
mov
je
mov
stc
and
cmp
dec
xor
mov
adcb
xchg
inc
add
mov
fs
dec
dec
dec
leave
data16
xchg
leave
add
mov
cmp
ja
movsl
test
ds
mov
xchg
jno
outsl
xlat
mov
and
mov
push
xlat
mov
repnz
aad
xor
lods
mov
xchg
jbe
popa
jmp
lods
arpl
mov
pusha
mov
adcl
out
mov
lret
scas
add
scas
pop
mov
push
sahf
pop
jle
sbb
ja
pusha
jg
sbb
sbb
mov
test
adc
out
fstpt
out
fcmovnu
loopne
test
xor
fistpl
js
jecxz
ret
cmp
movsl
insl
push
out
dec
outsb
jl
outsb
mov
mov
mov
sbb
fnstsw
bound
or
into
pop
push
insb
leave
push
vmread
arpl
nop
leave
or
test
and
into
stos
js
cmp
or
ret
loope
outsl
add
out
jbe
divb
dec
cltd
xlat
sub
inc
fs
call
lods
insb
fnsave
cwtl
xchg
and
mov
lock
test
add
mov
push
mov
dec
int
ljmp
push
xor
roll
outsl
adc
test
or
and
push
test
test
popf
push
ja
fbld
jge
mov
xor
add
call
mov
cmp
mov
mov
mov
mov
popa
xor
xchg
movsl
pop
sub
cmp
data16
cmp
scas
clc
stc
sub
loope,pt
out
pop
and
mov
mov
cltd
and
jmp
stos
push
ljmp
fs
xor
shl
mov
testl
gs
fcoms
adc
pop
outsw
loopne
push
sti
stos
sbb
sub
xchg
insb
cmp
sbb
divl
xlat
into
gs
cmp
fwait
xor
inc
mov
jno
xlat
jne
outsl
xlat
jg
jns
mov
cmpsb
lcall
or
out
shl
ret
or
out
fiadds
scas
sub
fwait
mov
das
mov
and
and
adc
pusha
jmp
xchg
cmpsb
mov
dec
pop
inc
aas
xchg
fldcw
or
fisubrs
mov
pop
adc
sub
adc
fsubrl
fldt
cli
pop
jmp
and
in
inc
inc
scas
fldenv
rolb
cmpsl
pop
stos
pop
dec
aaa
jg
cmpsb
pop
xor
hlt
ret
mov
and
loopne
jle
push
pusha
aad
imul
dec
es
mov
rcrl
add
cmpsl
dec
adc
sbb
movsl
ss
icebp
imul
or
jae
push
xchg
add
xchg
movsl
fnstenv
jo
mov
xchg
pop
mov
add
sbb
xchg
fwait
pop
inc
fistpl
xchg
sbb
in
aaa
mov
out
rorb
mov
dec
pushf
cld
dec
dec
or
cmc
sbb
test
pop
cli
je
inc
dec
sbb
mov
rcr
add
scas
pop
cmp
mov
shlb
insb
data16
mov
das
dec
mov
cmc
mov
ds
ret
rcr
mov
lea
mov
xor
sub
add
sbb
sbb
in
xchg
loopne
lret
test
ret
loopne
ficompl
cmp
mov
dec
sub
aad
sub
imul
cmpsl
mov
je
fadds
movsl
xchg
stc
mov
jle
dec
pop
cli
fwait
movsl
enter
push
stos
popa
dec
xchg
cmp
pop
sub
push
bound
scas
mov
out
iret
inc
push
pop
outsb
xchg
popa
xchg
or
loopne
or
movsl
lcall
dec
je
scas
dec
and
dec
daa
jo
into
sbb
int
push
xchg
setb
and
outsl
push
pusha
jecxz
adc
mov
lds
mov
sbb
pop
icebp
shrb
rcl
xchg
add
mov
fstps
jge
loope
popa
out
in
sti
inc
xchg
inc
rorl
cmpsb
cmp
out
sti
test
fwait
xor
pop
push
xchg
sbb
out
jecxz
js
es
jnp
cmpsb
xor
movsl
out
fneni(8087
out
lds
mov
scas
inc
cmp
cwtl
dec
adc
push
js
js
ror
jns
scas
jnp
pusha
xchg
push
push
mov
jmp
adc
push
xchg
cld
orb
xchg
push
pop
cmp
inc
adc
mov
mov
jae
repnz
cwtl
cmp
pop
loopne
ffree
lock
add
in
iret
jae
cmpsb
cwtl
and
add
or
pop
sub
jle
jnp
sahf
outsb
ja
inc
or
jge
sub
daa
data16
mov
xlat
push
mov
xchg
cmp
jno
stos
lock
scas
mov
mov
mov
lds
ds
cmp
ljmp
push
xor
pop
sarl
hlt
mov
rolb
cmp
pop
sub
push
jl
lahf
movsb
rolb
and
mov
loopne
insb
jp
stos
popa
sbb
sub
add
adc
mov
cmp
pop
aas
jmp
movsb
mov
hlt
cmp
or
fsubrl
cmp
hlt
repnz
insl
sbb
aad
push
add
push
and
ret
xchg
dec
sub
scas
xor
popf
adc
aam
cmp
cmp
inc
sub
scas
addr16
mov
add
xchg
sbb
mov
jnp
cmpsb
cmp
fdivrs
pop
sbb
sarb
sahf
inc
ds
mov
cwtl
es
or
or
loope
dec
xor
rcll
sub
xor
into
jg
add
std
ja
mov
add
lret
jge
pusha
xlat
jge
or
daa
lods
and
scas
daa
negb
sub
mov
ja
or
test
and
enter
fsubs
lds
mov
ss
mov
cmp
add
mov
flds
arpl
jmp
mov
xorl
dec
mov
mov
jecxz
fnstsw
sbb
test
das
loope
outsl
clc
shr
jge
in
mov
enter
pushf
push
cmp
mov
and
mov
popf
xchg
pop
into
rolb
hlt
rcrl
jo
gs
pusha
push
in
test
adc
enter
daa
push
mov
xor
sbb
cmp
data16
xor
sbb
cli
xchg
arpl
stc
cmp
out
xchg
pop
xchg
mov
push
gs
outsb
out
gs
mov
push
adc
cmp
leave
in
sti
repz
out
adc
mov
mov
outsb
fwait
out
das
outsb
iret
out
iret
or
test
cs
cmp
dec
inc
sub
sub
clc
lods
fwait
or
cmc
sbb
adc
xlat
mov
cmp
fmul
sub
popf
mov
sbb
aad
adc
les
hlt
and
sahf
xchg
jge
sbb
xchg
or
mov
out
lcall
pushf
je
and
and
inc
pop
and
mov
sbb
imul
push
or
ds
scas
imul
adc
nop
xlat
push
les
xchg
xlat
movsb
stos
push
in
gs
scas
pop
cmp
fwait
xor
xor
xor
mov
test
mov
ds
cmpsl
push
jae
push
jno
cld
popw
les
fiadds
fmuls
mov
dec
mov
add
pusha
sqrtps
insl
add
insb
adc
mov
roll
xchg
sbb
add
or
mulb
cmpsl
mov
mov
rcl
or
sub
mov
jo
add
lods
cwtl
adc
sbb
mov
mov
and
dec
pop
dec
xor
adcl
scas
xor
dec
ret
jns
loopw
jecxz
movntq
out
cli
cs
mov
ret
daa
push
rcl
fs
add
xchg
dec
dec
je
cs
mov
outsb
ds
repnz
pushf
popf
push
pop
xor
jmp
fmul
jl
loopne
cmpsl
mov
mov
and
sbb
test
in
fmull
out
outsb
clc
out
loopne
add
cmc
xchg
adc
xlat
sbb
mov
inc
das
or
xor
in
dec
clc
in
push
jo
push
ds
mov
outsl
test
je
jge
dec
xchg
push
fcoms
mov
clc
sub
mov
sbb
mov
sub
enter
pusha
push
jl
push
imul
scas
cmc
fistl
pusha
cltd
jmp
insb
xchg
mov
lahf
jp
aaa
ds
mov
cltd
pusha
jno
xlat
push
push
xlat
je
insb
nop
ret
aam
xchg
push
fiadds
adcl
sbb
push
out
adc
outsb
mov
pop
xor
into
into
jne
fadd
aam
int
out
icebp
and
pop
js
xchg
lock
add
insb
mov
jmp
insb
dec
in
pop
insb
pop
mov
leave
jl
xchg
xchg
mov
shrl
pop
mov
push
std
cmp
mov
ret
insb
insl
in
jl
add
mov
leave
cmp
push
movsb
lods
pop
cmp
mov
cmpl
jnp
das
inc
cwtl
or
mov
mov
data16
outsb
rcrb
cmc
xor
or
fdivl
clc
in
fsubr
in
arpl
jmp
std
pusha
in
jno
push
push
jne
inc
mov
fldcw
inc
sar
jbe
jle
ret
movsb
mov
xor
jnp
xor
sub
mov
xchg
push
mov
inc
lods
inc
aam
jo
mov
xchg
cmc
aaa
sub
dec
cmp
scas
popa
and
clc
push
repnz
filds
push
jnp
pusha
jmp
cmpsl
icebp
xlat
fadds
add
scas
mov
movsl
mov
cmpsl
xchg
outsl
sbb
cmp
inc
stos
xchg
adcb
and
or
fldt
lahf
mov
addb
lods
and
dec
sub
iret
fdiv
xsave
sbbb
adc
clc
sub
sbb
dec
pop
sbb
and
adc
mov
pop
xchg
xchg
sub
or
std
sahf
mov
fmuls
sti
cmp
jp
int
mov
xor
lea
insb
push
push
xchg
xor
rcrl
cs
adc
sar
cld
mov
jg
jge
and
and
addb
inc
lea
jne
movsl
jns
test
push
mov
inc
push
jae
push
adc
lock
sahf
test
sub
fwait
dec
mov
push
iret
inc
pop
xchg
adc
jp
outsl
cld
mov
scas
aam
mov
pop
pop
xlat
inc
mov
std
cmp
stos
pop
sub
test
cmp
mov
mov
scas
repz
roll
shl
arpl
sub
mov
jbe
loopne
jnp
iret
cmp
lds
iret
adc
lock
xor
mov
lea
movsb
ja
push
ja
repnz
sub
ret
jo
test
dec
sub
outsb
ret
mov
mov
aaa
mov
xor
mov
jno
aad
sbb
jg
jnp
popf
test
sub
mov
sarb
dec
dec
and
addr16
std
je
inc
or
sbb
in
cltd
and
mov
push
fnstenv
mov
jg
jbe
sahf
arpl
jmp
lret
mov
jmp
loopne
cmp
cltd
les
jb
movsl
xchg
das
adc
mov
pop
ja
xor
mov
enter
mov
rclb
and
cmp
inc
mov
cmp
aaa
pop
and
lock
xchg
or
out
cmp
sub
stos
dec
rol
or
mov
push
mov
not
sbb
mov
insb
adcb
xchg
fisttpl
repnz
sbb
adc
or
adc
clc
insb
xchg
jns
loope
loopne
fisttpll
clc
push
sub
and
or
or
xlat
pusha
repz
pop
ja
mov
xor
js
ds
dec
xchg
out
mov
xchg
jl
mov
inc
aad
pusha
adc
stos
or
jle
mov
les
je
outsl
sbbb
cwtl
push
inc
call
xchg
in
mov
inc
mov
adc
loopne
bound
int
repnz
imul
cmp
aad
popf
lahf
inc
mov
or
inc
shl
or
sbb
xor
and
push
xchg
pop
sub
fst
pop
push
cmc
sbb
ljmp
cmpb
popf
cmp
iret
jae,pt
fisubs
and
ja
lret
fnstcw
xor
adc
mov
adc
adc
mov
sahf
jno
jecxz
dec
repz
mov
sub
scas
sub
rorb
shlb
mov
sahf
jge
sub
sbb
adc
xor
pop
insb
push
in
out
shr
clc
insb
stc
sub
push
cwtl
pop
inc
ret
shll
xchg
aas
sbb
pop
adc
mov
loope
mov
and
inc
mulps
cld
mov
sbb
or
mov
mov
add
cs
cmp
adc
jl
es
mov
add
inc
mov
aam
das
mov
hlt
cmc
imull
shl
adc
mov
pop
out
xor
xchg
in
xchg
push
inc
popf
in
dec
cmpsb
cmp
or
mov
outsb
cmp
nop
push
adc
pop
xchg
cld
mov
or
and
mov
in
ljmp
xchg
std
push
sarb
xlat
inc
hlt
jp
ds
nop
adc
push
cmc
lods
adc
push
pop
jne
fiaddl
or
sub
or
iret
mov
in
out
std
and
cmpsl
clc
fbstp
ljmp
jae
push
adc
subl
in
leave
ljmp
mov
xor
dec
or
and
out
xchg
iret
push
scas
ds
adc
test
fcoml
aas
shl
pop
jno
push
cmp
mov
and
pushf
and
xchg
mov
dec
mov
xor
dec
mov
aam
popf
xor
aas
pop
lahf
pop
dec
jmp
and
inc
loope
cmp
leave
pop
out
into
in
xchg
insb
or
xchg
adc
int
jb
hlt
adc
les
sbb
push
xlat
out
iret
repnz
cli
sbb
test
and
iret
jnp
out
adc
jmp
mov
repnz
dec
icebp
ss
mov
adc
jb
xchg
adc
ja
mov
push
push
out
mov
mov
test
push
dec
inc
mov
fucom
aam
push
sub
int
push
cli
xor
shlb
dec
outsb
decb
jns
hlt
lahf
xchg
mov
pop
lods
pop
pusha
icebp
pop
jmp
cmc
mov
insb
dec
test
pop
jb
jnp
pusha
mov
in
adc
xchg
cmp
cmp
pop
mov
ret
sbb
mov
filds
cmc
inc
add
adc
dec
cs
loope
mov
cmp
jbe
sbb
or
mov
sub
cmp
sub
loop
jae
aaa
xlat
mov
bnd
in
icebp
pop
les
test
daa
push
shr
dec
aam
les
fidivrs
out
fidivrl
out
push
sti
xor
jmp
movsb
adc
jnp
sbbl
add
shlb
mov
in
or
in
jne
cmp
mov
jmp
enter
loope
push
pop
xchg
dec
push
push
fwait
aaa
rcrb
cmpsl
clc
adc
and
out
mov
adc
xlat
shll
mov
mov
sbb
jmp
pop
ljmp
enter
dec
aam
mov
jns
cld
sub
popf
xchg
nop
clc
add
push
clc
jl
dec
roll
lcall
out
and
mov
leave
lds
pop
int
mov
xchg
and
fs
sub
icebp
dec
ljmp
cmp
nop
out
jo
loopne
test
call
or
data16
pop
not
sbb
fstpt
js
mov
loopne
adc
and
aam
inc
scas
outsl
test
ja
rcr
mov
and
daa
xor
cmp
mov
bnd
xor
cmp
pop
xchg
out
lods
cwtl
jp
ja
push
xchg
adc
fwait
mov
stc
ret
mov
lock
sub
in
arpl
decb
lods
adc
push
jno
testl
pop
leave
jbe
sbb
mov
xchg
sub
push
pop
dec
frstor
clc
sbb
repnz
into
inc
push
jb
bound
test
adc
pop
in
and
adc
push
popa
out
repz
nop
fstpt
sarl
pop
sar
pop
mov
lods
out
loop
dec
sub
pop
outsl
push
dec
inc
adcl
dec
mov
sbb
ret
movsl
and
inc
in
sub
fs
pop
popa
cmpsl
lods
cltd
imul
jge
fiaddl
out
sub
dec
sub
or
xchg
fidivl
data16
mov
jge
jne
test
lahf
and
xorl
or
push
cmp
rol
lds
clc
mov
loopne
add
sbb
push
ret
sub
std
xchg
std
add
add
jge
cmpsb
dec
mov
ret
rclb
movsb
imul
push
mov
cmp
aad
mov
ret
sar
push
dec
xor
push
add
int3
sub
mov
aaa
int3
in
jecxz
daa
loopne
jo
insl
int
ds
inc
and
stos
cmp
dec
mov
fistpll
js
dec
mov
add
mov
outsl
lret
xor
mov
inc
push
aaa
sahf
add
add
xor
enter
jae
push
xchg
jnp
pusha
mov
adc
sub
dec
ret
ret
sbbb
dec
lds
xlat
xchg
scas
add
enter
inc
or
or
jecxz
adc
inc
xor
test
fdivrp
repz
aad
or
outsl
jge
push
push
push
les
mov
xor
pushf
pop
add
and
mov
add
cwtl
imul
sbb
fisubrs
xlat
dec
jl
movsb
subb
sub
adc
dec
scas
mov
add
pop
fists
test
and
insl
mov
movsb
fstl
jnp
call
dec
mov
push
pop
xlat
mov
addl
push
xlat
ret
jno
aad
fcoml
and
xchg
rolb
or
cmp
mov
leave
movb
mov
sub
jnp
add
ret
in
jecxz
in
add
decb
scas
xor
and
mov
lds
jecxz
add
fldt
ret
imul
jb
xor
movsb
adc
xchg
stos
ret
ds
popf
shll
jl
adc
xchg
mov
mov
mov
ja
rcrb
mov
cmp
nop
fiaddl
pop
mov
sub
nop
xchg
lock
and
cmpsb
xchg
mov
cmp
fucomi
adc
xchg
mov
mov
mov
ja
sar
mov
mov
adc
in
aaa
clc
cmp
inc
ja
mov
mov
adcb
lock
push
jae
push
or
bound
mov
mov
loop
idivb
int3
pop
xor
insb
popa
loop
and
inc
lds
push
lahf
or
fsts
add
xchg
out
add
rcr
arpl
xchg
push
mov
mov
lods
lahf
sbb
loopne
or
int3
sbb
or
cwtl
notb
jge
out
adc
jnp
sbb
std
leave
cmc
arpl
aas
push
jl
jmp
cmp
lods
out
inc
and
and
popf
fildll
cwtl
cmp
jo
cld
xchg
stc
mov
jno
jo
out
cmp
adc
xchg
jge
xor
mov
js
lret
dec
push
mov
or
xorl
in
adc
xchg
leave
cwtl
jns
mov
mov
sbb
sub
pop
xchg
mov
ljmp
sbb
pop
js
sbb
xor
pushl
adcl
add
es
sbb
pop
subb
pop
movsb
loope
es
out
arpl
mov
pop
jge
xor
das
out
pop
xchg
adc
or
jmp
sbb
pushf
or
mov
cmp
stos
jnp
pop
push
ja
jle
mov
jns
add
jp
sub
xchg
cltd
push
outsb
fidivl
inc
mov
pop
lahf
or
and
mov
and
push
sbb
xor
sbbb
mov
lcall
mov
fsubrs
inc
std
cmp
cmp
fucomi
roll
insb
pop
je
ss
adc
scas
xor
and
xor
pop
inc
dec
sbb
and
mov
cwtl
das
push
lea
add
loop
sahf
push
sub
insl
mov
cs
inc
and
inc
push
and
sbb
arpl
mov
sub
std
lret
adc
imul
stos
bound
in
pop
cmp
bound
sub
or
push
dec
inc
push
add
iret
jmp
pop
add
mov
mov
pop
fisubrl
int
cmp
pop
cld
int3
jge
add
negb
andb
incb
sti
cmp
pop
pop
pusha
into
lahf
mov
inc
gs
cli
clc
nop
xchg
shr
xchg
jge
insb
mov
lahf
push
jp
xor
or
ficoml
int3
imulb
inc
sbb
cmpsl
nop
lock
ja
mov
sub
and
fsubrs
leave
sub
scas
out
mov
sub
mov
dec
mov
insl
xchg
dec
movsl
mov
and
out
sbb
add
dec
hlt
outsb
mov
jg
and
lods
and
stos
sub
xor
jl
jns
sar
iret
scas
aam
je
out
sbb
lock
mov
or
subb
shrb
inc
lock
daa
cmp
movsl
mov
ret
sub
jl
gs
jbe
jo
mov
sbb
cs
subb
sbb
pop
or
mov
lods
add
jp
lods
xchg
sbb
xchg
flds
xchg
test
jno
dec
mov
sub
adc
or
adc
loop
outsb
xor
mov
mov
mov
cmpl
insb
in
or
xchg
fcmovbe
inc
xchg
ss
ds
out
xor
pop
xchg
orb
clc
or
ror
xchg
jno
pop
les
mov
cmp
mov
outsl
jne
bound
fs
sbb
call
xchg
dec
pop
in
rcrb
pop
stos
mov
insl
aaa
sub
jnp
jge
lods
sbb
adc
int
sbb
sbb
jae
dec
icebp
adc
xchg
push
stc
nop
cltd
sbb
add
add
add
jp
adc
inc
push
das
inc
in
adc
xlat
ffreep
in
pop
xchg
jae
push
in
je
pop
lock
imul
push
jp
lock
jge
jmp
outsb
cld
mov
jnp
negb
and
int3
test
fucom
fs
loope
call
in
std
dec
lea
jo
add
in
mov
in
inc
in
out
outsb
fsub
jecxz
pop
in
inc
pop
lock
dec
xchg
cmp
out
jae
loopne
add
lock
jge
jecxz
push
lea
push
jp
sti
jno
out
pop
movsl
out
je
in
pop
jo
add
in
mov
in
mov
xor
jecxz
outsb
loopne
in
ss
out
outsb
clc
out
in
jae
jecxz
jae
cmc
xchg
out
std
push
cmc
jp
ljmp
or
mov
lock
arpl
loop
in
inc
pop
lock
dec
aad
xchg
cmp
out
jae
clc
mov
lock
jge
jecxz
cmp
jnp
inc
in
std
and
or
in
pop
fidivrs
xor
add
std
out
iret
pop
in
xchg
xor
out
daa
inc
dec
enter
out
out
sub
push
sub
idivb
pop
jae
cld
icebp
lcall
sub
mov
std
jp
add
xor
jae
inc
enter
push
jge
jae
decb
mov
stc
clc
rorb
repz
jge
divl
sti
pop
xchg
add
std
aas
imul
sti
jae
call
xor
out
add
repz
jecxz
pop
jae
clc
mov
in
jae
sub
add
cmp
aas
decb
out
xchg
add
out
xchg
pusha
mov
ror
jnp
into
pusha
mov
jge
call
enter
push
jge
jae
cli
fmull
ret
leave
in
xchg
repz
jns
in
sti
in
dec
outsb
in
imul
cmp
in
mov
repz
mov
je
in
cmp
xchg
mov
repz
jns
adc
in
dec
outsb
in
imul
jae
jp
dec
cli
in
mov
repz
mov
je
in
cmp
xchg
mov
repz
jns
and
in
dec
outsb
in
imul
push
jp
out
inc
jp
dec
cli
in
mov
in
shl
and
push
in
jae
sti
mov
stc
js
pop
pusha
push
mov
jl
adc
out
decb
call
arpl
aas
fsub
mov
lods
mov
pop
mov
fxtract
mov
bnd
jbe
pop
jno
push
mov
loopne
pop
jge
in
mov
bnd
xchg
rorl
std
jl
mov
imul
inc
call
xor
rcr
jnp
ret
mov
bnd
pop
jnp
sub
sbb
push
clc
mov
push
repz
cmp
jnp
sbb
jmp
inc
xchg
lret
jecxz
insb
in
jno
xchg
mov
decb
and
push
adc
fidivs
jb
outsb
das
test
in
daa
lods
outsb
add
add
out
rcrl
cmp
nop
ds
pop
xchg
fstpl
in
incl
out
jno
fs
add
pushl
inc
insb
repnz
add
loop
mov
lcall
xor
jl
xor
enter
inc
in
enter
inc
push
loop
adc
daa
jge
adc
and
mov
outsb
pop
mov
arpl
mov
pop
popa
push
inc
bound
in
push
push
mov
lock
pop
push
fs
pop
ss
pop
lock
pop
push
fs
pop
inc
jno
push
push
bound
xor
pop
push
inc
addr16
pop
push
arpl
pop
push
jno
pop
pop
xor
push
imul
inc
in
inc
in
inc
in
inc
in
inc
in
inc
in
int3
mov
mov
add
add
add
cli
push
enter
mov
dec
adc
dec
nop
lods
or
insb
scas
test
mov
popa
jle
into
mov
sbb
std
xchg
jbe
pop
dec
aas
inc
adc
cs
movsl
repnz
mov
into
add
mov
or
cld
cmp
popa
scas
aas
push
cmp
test
insb
xor
push
leave
mov
mov
cwtl
jecxz
movb
jae
sub
aaa
mov
and
xchg
lods
outsl
mov
push
dec
dec
es
insl
jecxz
mov
pop
mov
push
xor
adc
popf
lcall
sbb
lcall
mov
xor
pop
imul
and
iret
xchg
lds
inc
push
xor
ret
cmpsl
arpl
rcll
shl
sbb
pop
pop
pop
cmpsl
lahf
loopne
sub
mov
cmp
sti
fildl
popa
andl
rcll
dec
pop
inc
xchg
sub
insl
aam
pushf
repnz
inc
out
xchg
cmp
jl
iret
mov
dec
add
sbb
imul
pop
out
pusha
in
xor
jb
jle
cmp
xlat
ljmp
fwait
mov
jae
inc
push
xor
shl
mov
sbb
in
dec
cmp
stos
stos
and
cmp
push
lock
mov
xchg
insl
cmpsb
fstl
jne
mov
loop
push
aaa
aam
xor
xchg
rolb
jle
pushl
sub
and
ret
dec
sub
adc
mov
test
cmp
nop
push
mov
ja
inc
fs
scas
fnsave
sub
into
mov
inc
push
popf
jbe
cmp
sarb
int
jge
aaa
je
sbb
in
xor
outsl
movb
adc
xlat
iret
xor
xor
dec
mov
cmpl
pop
stos
xlat
std
jge
cmp
lcall
push
je
popf
add
cmp
or
arpl
cmp
enter
cmpsb
popf
cmc
mov
push
push
pop
repnz
outsl
repnz
out
test
inc
mov
shlb
inc
hlt
scas
dec
pop
jne
inc
dec
jns
enter
mov
dec
adc
dec
nop
lods
or
insb
scas
test
mov
popa
jle
into
mov
sbb
std
xchg
jbe
pop
dec
aas
inc
adc
cs
movsl
repnz
mov
into
add
mov
or
cld
cmp
popa
scas
aas
push
cmp
test
insb
xor
push
leave
mov
mov
cwtl
jecxz
movb
jae
sub
aaa
mov
and
xchg
lods
outsl
mov
push
dec
dec
es
insl
jecxz
mov
pop
mov
push
xor
adc
popf
lcall
sbb
lcall
mov
xor
pop
imul
and
iret
xchg
lds
inc
push
xor
ret
cmpsl
arpl
rcll
shl
sbb
pop
pop
pop
cmpsl
lahf
loopne
sub
mov
cmp
sti
fildl
popa
andl
rcll
dec
pop
inc
xchg
sub
insl
aam
pushf
repnz
inc
out
xchg
cmp
jl
iret
mov
dec
add
sbb
imul
pop
out
pusha
in
xor
jb
jle
cmp
xlat
ljmp
fwait
mov
jae
inc
push
xor
shl
mov
sbb
in
dec
cmp
stos
stos
and
cmp
push
loope,pn
outsl
cmp
int
and
xchg
fildl
insl
imul
iret
lret
dec
dec
je
mov
call
mov
dec
outsb
push
stc
pmuludq
popf
mov
add
and
mov
fsts
aaa
lock
bound
mov
out
fs
dec
mov
fcmovnbe
out
or
add
pusha
pop
fwait
xor
push
push
testl
pop
add
adc
sbb
push
push
dec
pop
test
or
jae
mov
out
fldt
add
jno
dec
shrl
jl
and
imul
mov
xchg
insb
rcl
into
scas
mov
push
pop
mov
ljmp
mov
inc
aas
mov
adc
loopne
cmp
add
call
adc
jbe
pop
lcall
sub
addr16
imul
mov
mov
xor
inc
jb
call
imul
mov
pop
rcl
mov
sub
inc
xchg
jne
sub
lret
inc
jne
std
push
cmp
fiadds
cmp
jb
dec
xchg
ds
xchg
dec
icebp
push
or
sub
in
jp
and
test
mov
xchg
xlat
repz
mov
jb
das
iret
insb
mov
rolb
repnz
or
sbb
jbe
xor
movsl
ljmp
das
in
popa
das
aas
loopne
mov
cmp
incb
jbe
cmp
push
sbbb
outsl
jo
aad
mov
out
les
stos
sub
out
dec
pop
iret
xor
fsubl
out
push
lret
cmpl
xchg
xchg
push
mov
xchg
add
cmp
arpl
jno
pop
subb
scas
jmp
sbb
sarb
roll
adc
sahf
ljmp
xor
imul
or
push
adc
jnp
and
jge
and
lret
push
popa
mov
add
sub
arpl
addr16
es
ja,pt
pop
mov
pop
aad
jecxz
dec
stc
ret
pop
cmpsb
and
out
lcall
xchg
cmp
xchg
and
ja
or
sub
orb
dec
lods
xor
into
mov
ss
jns
das
cmpl
iret
push
cmp
xor
sub
in
and
dec
fdivrs
xchg
mov
sti
fldt
inc
imul
cs
lret
pop
mov
xorb
outsb
or
jecxz
lahf
fmuls
popa
sub
rorb
xchg
cmp
mov
mov
mov
cmc
xor
les
cmp
cmp
inc
mov
pop
notl
inc
fsubs
mov
cltd
jge
es
cmp
or
jbe
adc
adc
xchg
adc
shl
bound
loop
loopne
fdivrs
pop
push
fwait
mov
lea
icebp
xor
cmp
add
xchg
add
loope
sub
dec
sub
mov
push
imul
adc
adc
sub
je
xchg
adc
js
sti
int
dec
jecxz
pop
or
and
sbb
adc
or
and
push
sahf
cmpsb
insb
in
jnp
jae
mov
fimuls
and
popf
aaa
mov
lods
push
shll
pushl
ja
jns
xor
dec
jbe
cmpsb
mov
xchg
fdiv
mov
popa
rsqrtps
adc
jno
inc
push
xor
sahf
loope
enter
cmpsl
lahf
cmpsl
arpl
ret
sbb
lret
push
jae
int3
mov
xor
xchg
xchg
inc
and
mov
lods
jmp
ja
mov
dec
jge
push
dec
pop
in
outsb
int3
xchg
call
jb
into
std
jl
xlat
xchg
lock
xchg
scas
xor
inc
jne
rclb
sbb
sbb
mov
jae
mov
pop
dec
fisubs
ds
outsl
popf
push
aaa
aas
xchg
cli
jb
enter
jge
jecxz
mov
xor
pop
jne
sub
dec
push
iret
adc
lret
sahf
roll
xchg
out
sti
jnp
dec
and
in
cmpl
sub
fisubrs
add
loop
inc
ljmp
call
sub
push
roll
mov
das
sub
lcall
cmpsb
pop
dec
aam
notl
das
mov
arpl
shll
in
imul
jmp
in
push
fldenv
fisttpll
stos
mov
cmp
jge
ds
or
pop
cmp
add
inc
fldenv
icebp
inc
data16
sahf
nop
inc
sub
ret
popf
imul
cmp
and
add
arpl
cmp
push
xchg
addr16
lahf
stos
lods
mov
outsb
inc
shrb
or
lgs
pusha
je
ja
fwait
lea
adc
lock
lods
fdivr
jo
arpl
nop
cwtl
pop
add
xchg
into
mov
sbb
fcoml
bound
ja
ljmp
dec
sub
fistpll
pminsw
scas
jne
pusha
jecxz
mov
push
xor
sbbl
jbe
xor
xchg
cmp
into
sti
jno
add
jge,pt
xchg
cwtl
sahf
or
inc
nop
mov
sbb
or
jne
rcrl
enter
xchg
das
dec
enter
es
mov
push
stc
outsb
mov
mov
outsl
scas
inc
fsqrt
loope
enter
sub
pop
inc
cmp
testl
jl
sti
jb
adc
cmp
pop
mov
dec
outsb
fildl
jp
sti
push
pusha
jmp
pop
and
pop
adcb
clc
push
cmc
jmp
addr16
or
cmp
fadd
jecxz
dec
adc
xchg
sub
adc
mov
cmpsl
jmp
xchg
cmp
cmpsl
pop
push
mov
lock
mov
adc
jnp
in
std
stc
add
icebp
daa
notb
pop
push
jne
sub
jns
icebp
sub
pop
and
gs
mov
outsl
movl
adcl
push
add
outsl
call
jne
sub
mov
lea
jns
out
jae
mov
push
loopne
mov
push
insb
push
das
aas
sub
or
icebp
mov
xor
mov
fs
inc
lds
dec
inc
mov
repz
ja
icebp
jbe
sbb
inc
test
push
sub
push
fidivs
icebp
pop
sub
jle
pop
sbb
div
dec
out
repz
aam
xchg
xor
ja
arpl
xor
jg
outsb
call
hlt
lock
cmpsl
fldcw
push
stc
popa
je
fmuls
sub
in
sarb
dec
sub
shlb
jb
testb
scas
xchg
imul
addr16
mov
jb
jbe
ja
push
mov
xchg
mov
push
addr16
scas
lods
cmp
mov
adc
xchg
mov
xchg
loope
cmp
or
mov
shrb
and
leave
adc
out
or
sub
pop
loopne
or
xor
repz
cmpsl
inc
out
dec
mov
pop
inc
adc
inc
dec
sub
mov
jge
out
pop
mov
mull
iret
std
icebp
clc
vsqrtsd
jns
ret
xchg
shl
push
sub
aaa
xchg
out
and
adc
add
or
cmp
or
push
jmp
mov
stos
jnp
call
daa
adc
jb
add
stos
daa
inc
sbb
outsb
xchg
cld
jbe
push
sbb
push
dec
push
xchg
push
add
rolb
lret
ja
pop
jmp
imul
subl
imul
stc
sub
test
and
shrb
je
arpl
stos
cmp
mov
xor
jg
adc
and
out
fisttps
xchg
pop
pop
add
das
mov
dec
and
sti
outsl
nop
add
popl
arpl
addl
and
jae
aas
inc
push
xor
and
out
lahf
or
mov
add
mov
sti
das
nop
inc
dec
popw
lcall
pop
jg
rcrl
orl
mov
xchg
notl
in
sti
cmp
movl
jl
and
jge
or
inc
xchg
sahf
jae,pn
setbe
pop
stos
cli
call
mov
incl
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
add
add
add
add
sub
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
call
add
add
add
add
js
add
push
add
add
add
add
adc
mov
add
push
adc
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
ja
jo
inc
add
inc
pop
ja
clc
test
add
ja
add
jo
add
js
or
mov
push
addb
lock
push
orb
or
jo
testl
add
jo
or
divl
add
add
pop
xchg
add
add
add
mov
emms
xor
add
add
xorl
add
pop
add
lock
loopne
add
rolb
add
add
add
add
add
pop
add
lock
cld
pop
add
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
inc
add
dec
test
add
test
add
add
add
add
xchg
ja
or
add
add
ja
ja
inc
js
add
add
add
or
ja
add
js
inc
add
add
add
add
ja
mov
add
dec
js
or
push
add
add
add
ja
add
push
add
divl
inc
add
add
ja
add
jo
push
ja
inc
add
inc
dec
ja
add
divl
inc
add
xchg
lock
push
ja
dec
add
xchg
incl
or
divl
add
xchg
incl
push
ja
add
mov
add
push
js
inc
add
jg
jo
add
js
add
xchg
add
pushl
add
aaa
ja
pushl
add
pushl
add
xchg
add
push
ja
add
add
ja
lock
aaa
jg
xchg
mov
add
cmp
lock
add
incl
ja
xor
add
ja
ja
add
add
add
add
aaa
ja
lock
aas
addb
ja
add
add
add
ja
add
add
add
cmp
add
add
ja
ja
add
add
sbb
add
add
ja
js
add
add
add
add
ja
add
ja
ja
cmp
aaa
aaa
js
add
cmp
jae
xor
inc
add
incl
add
incb
add
cld
add
pop
clc
add
add
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
incl
add
addb
push
pop
ljmp
add
add
add
add
add
add
or
add
add
addb
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
add
adc
push
adc
add
pop
pop
add
sbb
adc
pop
and
sbb
and
sbb
sub
and
sub
and
add
sub
sub
add
and
and
daa
sbb
add
adc
add
verw
or
add
pop
pop
add
or
pusha
adc
add
pop
add
add
sbb
and
cmpsl
daa
sub
scas
sub
add
xor
mov
aaa
add
cmp
add
inc
inc
add
inc
dec
add
dec
dec
add
push
push
add
push
pop
add
pop
pop
add
pop
bound
xlat
gs
add
insl
outsl
add
jo
add
jae
add
je
add
je
add
jno
add
imul
imul
mov
add
push
push
add
dec
add
inc
add
inc
add
add
add
add
cmp
cmp
add
cmp
xor
add
dec
add
push
push
add
push
push
add
pop
add
data16
push
jo
dec
jb
add
jp
pop
jnp
add
addl
imul
popl
dec
xchg
add
xchg
cltd
add
cwtl
sahf
add
pushf
mov
add
scas
add
stos
mov
inc
lods
mov
inc
mov
add
mov
add
ret
add
add
lret
int
popa
lret
arpl
rolb
gs
aam
imul
add
xlat
add
xlat
add
fadds
jl
fadds
adc
aad
mov
iret
add
mov
mov
add
test
movsb
cmpsb
cmpsb
add
mov
sahf
add
cwtl
cwtl
add
xchg
xchg
add
xchg
xchg
add
xchg
xchg
add
nop
xchg
add
nop
xchg
add
xchg
xchg
add
xchg
xchg
add
xchg
xchg
add
xchg
cltd
add
cwtl
lcall
fwait
pushf
add
pushf
sahf
add
sahf
mov
add
mov
cmpsl
add
test
lods
add
lods
scas
add
scas
mov
call
mov
add
mov
add
mov
add
mov
mov
add
rol
faddp
ret
add
lds
fcmovb
movl
lret
lret
int
jecxz
into
add
iret
roll
jmp
roll
out
rcl
add
flds
hlt
fcmovu
add
add
fstp
add
fnstsw
add
add
fnstsw
add
add
add
fstp
add
add
add
fcmovnu
add
fcmovu
add
add
fcmovu
add
fcmovnu
add
fucom
add
loope
add
in
add
jmp
out
add
in
lock
out
icebp
add
out
icebp
add
out
lock
in
out
add
in
in
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
out
add
out
lock
lock
add
repnz
repz
cmc
cmc
add
div
add
clc
clc
add
stc
cli
add
cli
sti
add
cld
cld
add
std
std
add
std
incb
std
incb
incb
incl
std
incb
packuswb
or
aaa
xor
xor
packuswb
aaa
cmp
dec
inc
aas
inc
inc
cmp
invd
add
dec
dec
dec
inc
dec
push
push
dec
inc
inc
cmp
or
invd
cmp
push
movsl
cmpsl
cmpsl
lods
mov
mov
or
pop
push
dec
inc
aaa
or
invd
cmp
stos
mov
mov
or
push
dec
inc
or
invd
cmp
add
mov
out
xor
lret
mov
inc
add
invd
aaa
aas
dec
or
push
pop
lret
mov
or
inc
cmp
packuswb
aas
dec
cmpsb
pop
or
or
int3
out
repz
data16
sahf
out
ret
test
dec
cmp
invd
cmp
test
xor
or
icebp
div
cmc
divb
or
iret
out
leave
mov
add
lar
push
mov
or
fwait
std
idiv
and
adc
out
int3
mov
inc
cmp
packuswb
aas
inc
dec
mov
ret
or
std
std
xor
or
mov
movsl
dec
inc
or
invd
insb
fwait
jne
aam
repz
and
std
data16
xor
std
imul
mov
mov
inc
dec
add
xchg
xchg
rcl
repz
adc
or
or
sar
stc
hlt
out
int3
mov
invd
popf
xchg
xchg
shr
icebp
std
insb
or
or
or
or
std
std
stc
clc
out
int3
mov
pfadd
sahf
sahf
mov
je
or
or
or
cmc
in
leave
mov
inc
dec
cmp
invd
cltd
jae
xchg
aam
sar
xchg
or
or
or
clc
repz
into
mov
invd
test
in
std
popf
or
or
idiv
std
std
cli
stc
imul
in
ljmp
invd
jp
nop
fsub
in
std
cltd
or
or
data16
std
std
cli
cli
clc
cmc
repz
rcll
outsl
mov
cmc
lds
or
or
vpaddw
clc
idiv
in
jmp
aad
sahf
lcall
jl
fsub
fnsetpm(287
jmp
or
sar
std
jne
aam
jne
popa
or
invd
outsl
jnp
fsub
out
or
or
or
adc
jmp
xchg
jecxz
xchg
cmpb
packuswb
jecxz
out
or
or
sub
or
and
nop
mov
invd
jl
nop
fsub
out
or
or
push
or
loop
lea
movlps
lea
or
or
or
adc
or
or
or
or
invd
and
in
sub
or
jbe
or
outsl
outsl
outsl
outsl
or
invd
sub
jg
nop
loop
or
or
loop
popl
invd
pop
jle
mov
or
nop
mov
invd
sub
mov
jle
mov
packuswb
sub
mov
outsb
imul
packuswb
or
or
or
ud0
inc
add
incl
add
incb
add
cld
add
pop
clc
add
add
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
incl
add
addb
push
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
sbb
sub
pushl
push
push
call
add
incl
add
popf
add
add
jg
sbb
xchg
fiadds
mov
jmp
add
decl
xor
fdivs
sarl
incl
add
popa
inc
add
adc
or
sub
adc
clc
mov
mov
out
rol
sti
fdivr
add
add
hlt
lret
shrb
dec
lcall
incl
add
popf
add
add
push
push
out
lahf
mov
incl
add
out
lock
cld
icebp
repz
mov
add
push
repnz
out
test
jb
call
add
incl
add
add
add
popa
movsb
and
inc
dec
dec
in
mov
push
mov
add
cmc
out
icebp
cli
std
call
add
push
idiv
repnz
into
out
rol
fimuls
inc
incl
add
popa
add
add
lahf
mov
test
out
out
out
incl
add
lcall
sbb
inc
inc
inc
incl
add
call
cld
std
clc
loope
push
aad
ljmp
incl
add
out
add
jmp
mov
jmp
in
in
in
in
incl
add
incl
add
incl
add
incl
add
std
std
std
push
hlt
hlt
incl
add
in
mov
call
outsb
jno
add
add
add
add
pop
mov
lret
fsubr
jmp
decl
ud0
add
incl
add
push
cmc
cmc
incl
add
std
std
std
push
repnz
jmp
rcl
lcall
add
incl
add
out
mov
ret
ljmp
incl
add
incl
add
std
std
std
cld
cld
cld
push
repz
out
dec
int
jmp
add
add
add
dec
push
cmp
add
lods
jecxz
call
add
incl
add
pushl
xor
decl
cld
std
jmp
sub
mov
mov
jb
add
add
add
add
add
jmp
lret
decl
ljmp
add
add
add
add
test
add
incl
add
dec
repz
jmp
enter
add
incl
add
add
adc
ljmp
int
dec
mov
ljmp
add
incl
or
incl
add
incl
add
decl
adc
adc
adc
incl
add
popf
add
add
sbb
dec
mov
jns
aam
nop
fcmovu
incl
add
incl
add
decl
fdivr
pop
mov
pusha
incl
add
incl
add
popf
add
add
push
push
call
mov
leave
iret
ljmp
pushf
mov
incl
add
incl
add
popf
add
add
add
add
add
add
add
add
add
add
clc
pop
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
clc
pop
add
sub
add
sbb
add
xor
add
add
and
add
add
pusha
or
add
add
add
jo
add
jo
add
insb
add
add
add
pop
add
add
add
add
add
mov
inc
or
pushl
and
and
incl
or
pop
pop
pop
incb
add
roll
add
xchg
add
sub
add
inc
add
add
jbe
or
fsts
movsl
sbb
sub
lret
inc
push
push
ljmp
daa
sub
xlat
push
push
jmp
incl
add
icebp
add
add
add
add
add
outsl
push
inc
inc
call
imul
loopne
nop
flds
popf
jmp
pushf
popf
fadds
add
add
add
fildll
inc
cmp
aas
push
ud0
add
mov
add
add
sbb
or
add
add
out
xchg
jmp
mov
mov
jmp
mov
sar
push
pop
incl
add
jmp
lahf
mov
call
imul
pop
incl
or
add
add
add
xor
add
mov
add
ljmp
adc
pushl
enter
mov
in
mov
push
rcl
sti
fdivr
and
push
cmp
sub
hlt
lret
faddl
popa
dec
fs
dec
dec
ljmp
add
incl
add
jbe
add
add
mov
cs
jmp
inc
incl
add
incl
add
pushl
in
push
cli
jmp
sar
add
add
add
add
jmp
call
fmull
popf
fdivs
mov
add
cmc
add
add
add
add
cs
aad
insb
jmp
mov
incl
add
incl
add
incl
add
cli
sti
std
idiv
std
idiv
jmp
add
add
lock
fstp
push
into
sar
ljmp
call
imul
sbb
xchg
add
add
add
add
add
xchg
enter
ret
jmp
lahf
mov
push
mov
add
add
add
cmc
out
icebp
push
sti
call
add
incl
push
idiv
stc
in
in
mov
ret
mov
push
dec
inc
inc
incl
add
aad
add
add
add
add
xchg
call
rcl
jmp
loope
push
lock
add
incl
add
incl
ljmp
cs
add
incl
add
push
div
std
cli
sti
cli
ljmp
icebp
leave
call
pop
pop
inc
inc
inc
lcall
add
add
add
add
add
gs
test
fcmovu
ljmp
incl
inc
incl
add
incl
add
ljmp
imul
add
add
scas
scas
scas
std
std
std
cld
div
cli
call
fdivr
in
mov
xchg
call
imul
adc
add
add
add
addl
pushl
in
in
in
in
in
in
ljmp
add
incl
add
incl
add
incl
add
incl
add
dec
into
into
std
std
std
sti
sti
sti
push
in
push
fcmovnu
out
rol
flds
jno
bound
pop
incl
add
jo
add
add
jo
cltd
lahf
lahf
call
rcl
jmp
in
jmp
jmp
jmp
add
incl
add
incl
add
incl
add
lcall
pop
push
div
jmp
jmp
call
mov
scas
addl
pop
cmp
incl
add
jo
add
add
cwtl
lahf
sar
jl
aam
mov
in
out
jmp
jmp
fdivr
add
add
add
add
add
add
jle
jle
std
std
std
cli
cli
cli
in
in
in
ljmp
pushl
stos
stos
pushl
add
data16
add
sbb
int3
decl
in
dec
lock
ljmp
incl
add
incl
add
incl
add
ljmp
sub
std
std
std
cld
cld
cld
clc
clc
clc
out
out
out
jmp
out
call
mov
movsb
movsb
call
pop
pop
cmc
add
add
add
cmpsb
lods
decl
lcall
jmp
ljmp
add
incl
add
incl
add
incl
add
stc
stc
stc
push
div
cld
cld
sti
cli
stc
stc
call
rcl
fcmovnbe
xlat
fcmovnbe
xlat
dec
mov
xchg
mov
incl
add
mov
add
add
add
add
lahf
cmpsb
cmc
inc
stos
mov
xchg
fcmovu
pushl
fsubp
jmp
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
pop
in
cli
sti
decl
or
ljmp
out
decl
mov
ljmp
xchg
lcall
add
add
lret
jge
aad
pushf
mov
clc
cli
incl
add
incl
add
incl
add
incl
add
ljmp
add
incl
add
incl
add
decl
pop
mov
loop
jle
fdivr
int3
sar
add
add
add
add
add
add
sbb
aad
leave
incl
rol
mov
add
incl
add
incl
add
incl
add
incl
add
ljmp
add
add
add
add
add
push
or
adc
call
push
push
sti
add
add
add
sub
mov
cmp
mov
push
add
call
incl
add
incl
add
ljmp
cmp
cs
inc
lcall
and
jmp
xchg
cmp
cmp
cwtl
jmp
add
insb
add
add
sub
rorb
mov
incl
fcmovu
incl
add
incl
add
incl
add
call
fucom
incl
lret
sar
push
mov
pusha
icebp
add
add
add
adc
push
mov
lods
icebp
pop
ret
insb
into
aam
or
incl
push
incl
jne
push
mov
ljmp
int
pop
cmp
mov
mov
add
xor
add
sub
sbb
cmp
push
outsb
fnstsw
mov
xor
movsl
lock
xor
mov
add
add
incl
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
or
or
or
or
or
cs
or
add
or
or
inc
add
or
or
ss
or
push
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
or
or
add
and
add
adc
add
or
hlt
dec
pop
pop
notb
push
testl
add
sbb
add
add
add
add
add
or
or
or
or
add
add
add
popf
xor
add
andl
jmp
sbb
ljmp
inc
dec
ficompl
mov
sbb
scas
and
cmpsl
xor
pusha
sbb
decl
add
lret
add
add
add
add
add
add
or
or
or
or
add
add
add
out
jbe
adc
fistpl
dec
pop
pusha
mov
dec
dec
call
jae
fidivrl
dec
imul
inc
incl
sub
xchg
ss
ljmp
add
incl
add
mov
add
and
add
add
or
or
or
or
add
or
add
test
sbb
mov
push
push
fidivl
fidivrl
jmp
nop
xchg
jmp
xchg
jmp
xchg
xchg
jmp
mov
mov
call
add
add
jne
inc
jmp
jno
call
dec
push
jmp
push
push
loope
add
xor
or
or
or
or
add
add
jle
and
outsb
and
lcall
xchg
xchg
jmp
lcall
jmp
mov
in
mov
mov
decl
incl
add
call
cmp
out
pushf
jmp
mov
pushl
push
push
out
add
add
add
or
or
or
or
add
add
cmpsb
cmp
incl
add
decl
add
lcall
stos
stos
out
mov
mov
ljmp
push
rcl
sti
rcl
cmp
pop
out
mov
mov
fmull
pop
call
push
frstor
lods
xor
sbb
add
add
add
or
or
or
or
add
add
add
pushl
dec
dec
decl
add
decl
pop
or
inc
inc
push
int3
into
push
in
mov
fdivr
in
out
lcall
add
push
or
dec
test
fmull
outsb
dec
arpl
fnstcw
dec
dec
dec
jg
adc
add
add
add
add
or
or
or
or
add
add
add
add
sahf
sbb
ljmp
incl
add
incl
add
incl
add
jmp
pop
in
out
clc
fsubp
clc
loop
std
lock
idiv
incl
aas
incl
add
incl
add
lcall
out
out
ret
fwait
sahf
jmp
cmpsb
cmpsl
jmp
xchg
xchg
fnstenv
dec
dec
dec
decl
or
add
add
add
add
or
or
or
or
add
add
add
outsl
imul
pop
call
jae
jmp
xchg
xchg
jmp
test
incl
xor
incl
add
incl
add
fst
sar
clc
stc
cld
hlt
cmc
cli
cld
push
repnz
das
das
incl
add
incl
add
call
jmp
push
fcmovu
push
into
sar
in
mov
movsb
fldl
jno
mov
aas
lcall
add
int
add
add
or
or
add
add
mov
xor
fidivrl
out
mov
in
rol
aas
xor
incl
add
incl
add
lcall
idiv
call
rcl
call
add
lcall
out
lock
std
in
out
clc
push
icebp
enter
mov
in
pushf
call
insb
outsb
dec
inc
inc
lcall
sbb
cmp
or
add
or
push
add
add
dec
adc
lods
sub
ljmp
gs
stos
lods
jmp
ret
into
sar
mov
incl
add
incl
add
incl
inc
cld
std
in
in
in
cmp
cmp
add
add
add
add
push
push
push
cld
out
repnz
fcmovu
out
ret
jmp
mov
fimuls
push
pushl
sbb
add
add
or
or
add
add
push
push
call
test
fdivr
jecxz
jecxz
icebp
out
out
pushl
add
incl
add
call
adc
fdivr
cli
sti
cli
decl
dec
incl
add
incl
add
ljmp
sub
fcomp
fdivr
std
idiv
cli
out
push
rcl
push
int
push
enter
test
mov
inc
inc
lcall
add
or
or
add
add
stos
lods
lods
pushl
int
fstp
fdivrp
call
repnz
lock
and
add
add
add
add
jne
jne
jae
jae
add
add
add
add
add
add
mov
mov
std
std
cld
cld
std
cld
repz
cli
in
push
fnstsw
push
int3
into
in
mov
jmp
xchg
xchg
call
outsb
jo
rclb
pushl
or
in
add
or
or
or
push
push
push
mov
mov
pushl
rcl
jmp
loopne
jmp
ljmp
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
mov
cld
std
std
cli
cli
cli
stc
in
out
stc
loope
push
iret
sar
out
mov
sahf
call
jbe
fstps
incl
pmaddwd
or
aas
or
or
mov
xchg
call
mov
jmp
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
push
div
cld
cld
cld
push
div
out
in
in
push
fcmovnu
push
iret
sar
jmp
mov
ja
inc
inc
dec
call
dec
push
call
push
testb
or
or
add
or
xchg
ljmp
mov
js
popf
jmp
fsubp
jmp
in
std
std
std
ljmp
add
incl
add
incl
add
incl
add
incl
add
pushl
xor
jmp
in
cld
cld
cld
push
div
in
in
in
jmp
loope
jmp
loope
ret
mov
xchg
call
ja
cmp
sub
inc
or
or
add
push
lods
ds
mov
imul
leave
lcall
out
jmp
in
in
out
in
in
incl
add
incl
add
incl
add
incl
add
incl
add
incl
inc
jmp
out
std
std
std
std
std
std
clc
clc
clc
out
out
out
out
out
out
jmp
out
fcmovnu
fdivrp
mov
mov
stos
jmp
sub
repz
push
push
cmp
add
add
mov
decl
loopne
mov
icebp
repnz
jmp
jmp
add
incl
add
incl
add
incl
add
decl
dec
std
std
std
sti
sti
sti
clc
clc
clc
push
repz
in
in
in
jmp
loop
call
aad
inc
mov
lcall
sbb
in
pop
pop
or
or
add
add
imul
push
mov
fdivrp
mov
ljmp
lock
jmp
cli
call
into
int
ud0
add
incl
add
incl
add
incl
mov
sti
sti
sti
cli
cli
stc
in
jmp
ljmp
call
aam
pushl
xchg
xchg
decl
add
or
or
or
add
add
push
xor
icebp
cs
cmpsl
pushl
mov
ret
jmp
call
out
out
repz
fsub
out
es
add
add
add
add
add
add
add
popa
popa
popa
mov
mov
std
std
cld
std
lcall
mov
call
fcmovu
call
fcmovu
mov
mov
incl
inc
incl
add
pop
or
or
or
or
add
add
add
add
sub
mov
loopne
scas
in
jmp
ljmp
sub
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
ljmp
outsb
in
cmc
cmc
dec
fcomp
ljmp
ss
lcall
out
ljmp
rcl
call
mov
sub
mov
stc
add
add
or
or
or
or
add
add
add
add
inc
inc
testl
into
decl
loope
pushl
out
lock
repnz
pushl
xor
add
add
add
add
add
add
add
sbb
lcall
add
incl
add
call
sub
ljmp
jg
lret
pushl
loope
incl
int
jmp
jg
incl
pop
pop
mov
or
or
or
or
add
add
add
add
add
add
lret
jns
aam
xchg
fcmovnu
jmp
out
dec
hlt
idiv
das
ss
add
incl
add
incl
add
incl
add
cmp
inc
mov
je
decl
adc
incl
add
incl
add
ljmp
ss
or
ljmp
lret
call
enter
xor
add
add
add
add
or
or
or
or
add
add
add
adc
xor
lret
js
sar
insb
enter
leave
iret
pushl
xchg
cltd
incl
add
incl
add
incl
add
incl
add
incl
add
call
adc
jmp
pop
or
add
add
add
add
add
add
add
add
or
incl
fwait
lcall
pop
incl
add
insl
or
or
or
or
add
add
push
and
inc
stos
mov
pop
aas
stos
mov
dec
mov
pushl
sar
mov
lock
nop
lcall
daa
daa
incl
add
incl
add
incl
jbe
lcall
sbb
cmp
dec
imul
push
push
ljmp
insb
jno
sub
cmp
outsl
incl
add
movsb
add
add
or
or
or
or
add
add
sub
mov
dec
mov
mov
adc
stos
idiv
decl
jne
add
add
add
add
add
add
push
imul
xlat
nop
aad
jmp
out
pushl
aam
inc
mov
jmp
outsl
je
add
add
or
or
or
or
add
add
sbb
jecxz
nop
xchg
call
lret
ljmp
aam
jae
sar
test
jecxz
dec
je
incl
add
incl
add
incl
add
incl
push
xchg
in
incl
iret
aam
jo
aam
fs
aam
dec
mov
call
dec
dec
incl
add
xchg
add
add
or
or
or
or
add
add
add
add
mov
jmp
fcos
dec
lods
mov
sbb
lcall
push
pop
ljmp
decl
mov
lcall
sar
inc
stos
mov
and
incl
add
dec
or
or
or
or
add
add
add
popf
adc
cmp
push
pop
pop
call
push
lcall
test
call
ljmp
xchg
popf
call
imul
pop
lcall
dec
dec
incb
sbb
add
add
add
or
or
or
or
add
add
add
inc
add
add
add
stos
add
adc
add
add
add
add
add
add
or
or
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
add
or
jg
add
jg
add
add
js,pt
add
jo
add
jo
add
pusha
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
pusha
add
push
jo
add
js
add
jl
add
jle
add
addb
jg
add
add
pusha
add
add
add
add
add
add
add
and
add
add
andb
add
push
push
add
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
ltr
push
push
add
or
sbb
add
jno
add
lea
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
push
or
or
sldt
add
pop
add
add
add
lahf
or
add
sub
or
xor
pop
incl
jmp
and
jo
and
js
and
and
lcall
sbb
inc
or
pushl
add
lcall
pop
pop
incl
add
ljmp
add
add
or
add
add
str
sldt
add
xor
add
mov
add
repnz
ljmp
push
lcall
and
sbb
stos
sbb
ss
dec
push
call
pop
pop
call
dec
dec
inc
xor
stos
sbb
jmp
and
and
pop
sbb
jmp
add
add
add
add
add
sbb
str
sldt
add
add
add
xchg
add
stc
daa
add
pushl
or
mov
push
push
mov
sbb
daa
ljmp
sub
fnstenv
inc
push
push
ljmp
sub
mov
sub
mov
sub
leave
dec
dec
call
push
push
pushl
pop
pop
call
add
incl
add
jmp
str
sldt
add
inc
add
add
add
ljmp
dec
push
dec
pop
pop
call
fs
imul
outsl
jb
mov
dec
dec
fidivrl
fildl
xchg
fildl
cmp
dec
push
pushl
sub
pushl
sbb
call
push
push
lcall
add
decl
add
add
add
str
sldt
add
push
add
add
push
aas
inc
dec
inc
inc
dec
push
push
call
imul
fidivrl
fiadds
nop
fnstcw
flds
pushf
jmp
pushf
popf
jmp
pushf
popf
jmp
pushf
popf
jmp
fwait
popf
fadds
incl
add
incl
add
incl
add
decl
outsl
jno
dec
dec
inc
cmp
jmp
push
ud0
add
lds
add
sbb
add
add
str
sldt
add
add
add
popa
or
add
jg
sbb
movsl
xor
js
xor
xchg
dec
imul
jnp
fiadds
xchg
jmp
cwtl
lcall
test
lods
jmp
lods
scas
jmp
lods
scas
push
mov
js
pop
incl
add
incl
add
incl
add
decl
xor
faddl
jg
fdivs
aam
push
aad
pop
inc
cmp
or
add
add
add
add
str
sldt
add
push
add
add
jnp
push
inc
inc
inc
call
pop
or
add
add
add
add
mov
xchg
xchg
jmp
cltd
pushf
jmp
mov
stos
ljmp
jmp
mov
sar
mov
sar
leave
lret
pushl
pop
incl
add
incl
add
pushl
sub
jmp
lahf
mov
jmp
xchg
call
jbe
call
imul
push
dec
inc
inc
incl
or
add
add
add
add
str
sldt
add
inc
add
sbb
dec
inc
dec
decl
and
add
add
add
add
bound
and
in
cmp
test
stos
jmp
mov
in
mov
ret
jmp
mov
test
repnz
int3
push
int
push
int
push
int
call
fdivr
push
push
incl
add
jmp
push
pop
fldt
call
mov
push
fdivs
call
push
call
pop
pop
dec
inc
inc
aas
or
incl
add
lds
add
or
add
add
str
sldt
add
adc
add
jecxz
add
mov
push
mov
or
incl
add
incl
add
ljmp
adc
lcall
xor
mov
jbe
clc
mov
leave
in
mov
mov
ljmp
out
rol
hlt
rcl
push
fcmovnu
sti
fdivr
aad
scas
jmp
push
incl
add
cmp
sub
cmc
leave
push
lret
out
stos
faddl
jno
lret
pop
popa
dec
pop
pop
dec
fs
outsb
jno
leave
dec
dec
lcall
add
incl
add
cltd
str
sldt
add
cwtl
sub
add
xchg
adc
ljmp
pop
pop
lcall
incl
add
incl
add
incl
add
incl
add
call
or
jmp
fcmovu
push
leave
out
mov
ret
push
enter
sar
neg
sti
out
sti
fsubp
decl
incl
add
incl
add
incl
add
call
jmp
mov
flds
jb
int
push
fstpt
dec
pop
pop
pushl
adc
incl
add
cli
add
add
str
sldt
add
aaa
or
pop
or
mov
cs
bound
jmp
mov
incl
add
incl
add
incl
add
incl
add
incl
push
push
pushl
out
stc
in
push
aad
push
cli
ljmp
push
hlt
sar
or
or
add
add
add
add
add
add
push
out
push
rcl
push
lret
int
in
mov
jmp
cmpsl
test
in
popf
fisttps
js
aam
push
call
add
add
add
add
add
str
sldt
add
or
add
fisubl
adc
cmp
inc
push
push
call
jo
faddl
mov
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
loopne
out
lock
sti
jmp
out
cld
icebp
repz
cld
icebp
repz
cld
mov
add
incl
add
incl
add
incl
add
lcall
lock
push
aad
push
in
mov
jmp
mov
out
test
loop
xchg
fldl
je
int3
push
pop
pushl
add
incl
add
push
add
add
str
sldt
add
inc
add
cs
aad
pop
call
push
fnstcw
jmp
mov
jmp
mov
test
incl
add
incl
add
incl
add
incl
add
incl
add
inc
mov
cli
sti
std
hlt
cmc
std
idiv
std
cmc
idiv
std
idiv
jmp
add
add
add
add
add
add
ret
push
repnz
clc
loop
push
fstp
push
fcomp
push
into
sar
out
mov
mov
in
mov
fidivrl
call
imul
push
pop
incl
add
fadds
add
or
add
add
str
sldt
add
lcall
inc
mov
pop
pop
fisttps
fwait
call
mov
sar
mov
decl
or
add
add
add
add
add
add
mov
std
repz
std
idiv
stc
sti
cli
cld
incl
add
incl
add
incl
add
lcall
call
repz
cli
out
stc
jecxz
push
rcl
out
ret
push
enter
mov
stos
jmp
lcall
int
fs
inc
inc
inc
inc
inc
jmp
pop
pop
incl
add
inc
add
add
str
sldt
add
add
add
sbb
add
hlt
movsb
and
dec
inc
inc
pushl
dec
dec
fiadds
mov
out
mov
lret
mov
xor
add
add
add
add
add
add
cs
icebp
stc
cld
push
sti
cli
std
dec
enter
adc
add
add
add
add
add
inc
inc
inc
std
clc
cli
push
idiv
sti
in
out
stc
in
push
int3
into
in
mov
enter
ret
mov
jmp
mov
mov
les
pushl
inc
inc
call
adc
add
add
str
sldt
add
add
add
dec
sub
or
call
cmp
pushl
data16
fstpl
jmp
mov
push
iret
sar
pop
dec
dec
incl
add
incl
add
incl
add
incl
add
inc
mov
clc
sti
call
aad
lcall
push
push
incl
add
incl
add
incl
add
incl
add
incl
clc
cli
cli
ljmp
repz
push
ret
jmp
mov
out
rol
loop
fwait
dec
pop
pop
mov
sub
push
incl
add
jmp
add
or
str
sldt
add
add
add
outsb
xor
xchg
incl
xchg
xchg
mov
rcl
jmp
fnstsw
jmp
loope
jmp
jecxz
push
lock
add
incl
add
incl
add
incl
add
incl
jmp
jmp
cs
add
incl
add
incl
add
incl
add
decl
dec
push
div
std
cli
sti
std
repnz
cli
ljmp
repz
iret
push
lret
icebp
leave
push
ret
call
mov
mov
inc
inc
mov
add
std
add
add
str
sldt
add
add
add
test
lahf
mov
test
jmp
rcl
loope
loop
jmp
out
out
out
out
out
dec
into
into
decl
or
incl
add
incl
add
incl
add
lcall
sbb
in
in
in
std
std
incl
inc
incl
add
incl
add
incl
add
incl
add
decl
dec
call
std
std
std
std
cld
std
cld
clc
stc
std
hlt
idiv
clc
loope
push
aam
clc
push
aad
push
in
mov
scas
call
jae
inc
inc
dec
call
gs
pushl
or
incl
add
mov
str
sldt
add
or
gs
test
mov
call
rcl
fcmovu
jecxz
jecxz
ljmp
push
cmc
cmc
stc
stc
stc
incl
inc
incl
add
incl
add
incl
add
incl
add
incl
imul
add
add
add
add
add
add
add
add
scas
scas
scas
std
std
std
std
std
std
sti
cld
cld
cld
div
cld
out
icebp
cli
call
loope
cmc
fdivr
icebp
leave
lret
mov
stos
jmp
xchg
xchg
fnstcw
shll
call
dec
dec
decl
incl
add
test
sldt
add
adc
pop
pop
repnz
stos
mov
mov
fdivr
in
in
jmp
jmp
lock
hlt
hlt
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
xchg
std
std
std
cld
cld
cld
cli
sti
sti
sti
hlt
cmc
cli
jmp
jecxz
neg
repnz
out
mov
lods
jmp
cwtl
lcall
imul
adc
incl
add
mov
sldt
add
push
or
addl
scas
scas
scas
lcall
mov
incl
add
fdivrp
in
in
in
in
in
push
icebp
icebp
in
in
in
ljmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
dec
into
into
std
std
std
cld
cld
cld
sti
sti
sti
push
hlt
hlt
push
in
stc
jecxz
push
fcmovnu
push
int3
iret
out
rol
in
mov
flds
pop
call
outsb
jno
ficoml
jmp
pop
incl
add
mov
str
sldt
add
pop
or
test
decl
lea
ret
fcomp
fdivr
out
out
out
out
jmp
jmp
cli
cli
cli
call
rcl
incl
pop
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
sti
sti
sti
clc
clc
clc
push
repnz
in
out
in
out
push
rcl
push
into
sar
in
mov
jmp
xchg
xchg
call
push
inc
inc
inc
dec
call
inc
dec
js
and
add
add
sldt
add
and
mov
ljmp
jo
xchg
lahf
ljmp
rcl
jmp
in
jmp
loope
jmp
jmp
cmc
cmc
cmc
jmp
pop
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
pop
cli
cli
cli
push
div
push
icebp
icebp
jmp
jmp
loope
call
ffree
mov
addl
mov
jmp
cmp
incl
add
mov
sldt
add
pop
add
adc
dec
test
ret
ljmp
vsqrtsd
lret
ljmp
call
jmp
in
in
in
jmp
stc
stc
jmp
jecxz
decl
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
push
push
jmp
pusha
push
cmc
cmc
std
std
std
cld
cld
cld
cli
cli
cli
push
repnz
jmp
jmp
in
out
in
jmp
in
fcmovu
int
sar
test
xchg
xchg
lcall
movsb
movsb
incl
inc
incl
add
mov
sldt
add
push
add
repz
int3
ljmp
sar
pop
mov
aam
lods
in
mov
out
lock
in
out
push
out
out
jmp
jmp
cli
cli
cli
fdivr
or
or
add
add
add
add
add
add
add
add
add
add
add
add
jle
jle
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
push
repz
in
in
in
out
out
out
ljmp
fcmovnu
aam
aam
mov
mov
lcall
lcall
xor
add
sldt
add
add
add
mov
jl
lcall
int3
ljmp
incl
loopne
movsl
loope
pushl
out
lock
icebp
repz
jmp
repnz
sti
sti
sti
jmp
jecxz
decl
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jp
jp
std
std
std
std
std
std
std
std
std
cli
cli
cli
stc
stc
stc
push
div
push
repz
out
out
out
call
loope
fcomp
fdivr
into
into
into
inc
mov
mov
test
test
cwtl
cwtl
cwtl
ljmp
sub
incl
add
mov
str
sldt
add
add
add
jnp
push
push
call
int3
jmp
int3
pushl
decl
loopne
pushl
in
out
dec
lock
fcomi
hlt
ljmp
push
icebp
icebp
jmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
std
std
std
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
clc
clc
clc
push
repz
out
out
out
in
in
in
jmp
out
fdivrp
dec
int
mov
stos
stos
jmp
xchg
call
pop
pop
incl
add
jo
str
sldt
add
add
add
pop
push
xor
decl
ret
lret
incl
mov
loop
ljmp
ljmp
aad
hlt
inc
jmp
icebp
ljmp
imul
add
add
add
add
add
add
add
add
add
add
add
add
jg
jg
cld
cld
cld
std
std
std
sti
sti
sti
cli
cli
cli
clc
clc
clc
cld
cld
cld
push
repz
loop
ljmp
fcmovnu
rcl
sar
iret
iret
iret
jmp
addl
incl
add
sbb
str
sldt
add
add
add
sub
lahf
cmpsl
cmp
stos
decl
pushl
sar
popf
fucom
mov
jmp
ljmp
in
icebp
push
std
decl
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
stc
stc
stc
incl
add
push
div
cld
cld
sti
cli
cli
stc
cli
stc
stc
cli
clc
clc
call
rcl
jmp
xlat
xlat
xlat
fcmovnbe
xlat
fdivr
lret
mov
mov
stos
call
outsl
outsl
incl
cmp
incl
add
cltd
add
add
str
sldt
add
add
add
add
add
mov
dec
push
lcall
mov
cmp
mov
pushl
in
lcall
mov
stc
std
call
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
pushl
xor
incl
add
incl
add
decl
clc
cli
stc
push
cld
std
push
call
pop
jmp
sub
mov
rcl
mov
fsubp
jmp
mov
decl
test
aaa
insl
jb
or
pop
incl
add
pop
add
add
str
sldt
add
push
add
adc
cmp
mov
jnp
aad
xchg
fcmovu
jmp
call
lcall
jmp
lcall
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
pop
fsubrp
jmp
ljmp
or
decl
ljmp
scas
out
jmp
fcmovnu
jp
inc
mov
jmp
test
incl
or
hlt
add
add
add
add
str
sldt
add
sbb
add
jmp
je
cmp
mov
decl
fsubp
ljmp
out
jmp
jmp
jmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
aas
incl
inc
ljmp
xor
mov
out
pushl
jecxz
lcall
jl
call
mov
decl
add
lea
add
add
add
add
str
sldt
add
bound
mov
jmp
lret
ljmp
jge
aad
lcall
add
add
add
add
add
add
add
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
push
ljmp
push
push
incl
add
add
add
add
add
add
add
add
add
add
dec
pop
pop
dec
repz
mov
out
jmp
fsub
jle
fdivr
insb
enter
int3
sar
xor
add
add
add
add
add
add
add
str
sldt
add
add
add
enter
incl
jmp
leave
pushl
sar
adc
fdivrp
sahf
call
jecxz
dec
hlt
idiv
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
decl
repnz
jmp
popa
incl
add
incl
add
incl
add
incl
add
incl
or
ljmp
cmp
decl
fcomp
decl
int3
ljmp
enter
into
incl
decl
and
add
str
sldt
add
xor
add
clc
sbb
call
leave
jmp
leave
pushl
sar
adc
fdivr
pop
rol
mov
fcos
mov
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
xor
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
or
push
decl
adc
sbb
xor
call
sar
push
push
push
incl
add
roll
add
str
sldt
add
addl
adc
decl
mov
lcall
decl
mov
jmp
leave
pushl
sar
cmpsl
in
ljmp
daa
sub
add
add
add
add
add
add
add
add
add
add
add
add
push
or
decl
adc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
adc
adc
add
adc
es
dec
decl
mov
incl
add
out
add
add
str
sldt
add
mov
adc
pushl
mov
call
mov
cmp
mov
push
mov
lret
call
ljmp
push
jge
call
push
incl
add
incl
add
incl
add
incl
add
ljmp
cmp
xchg
iret
sar
cs
inc
call
es
sbb
and
inc
bound
popa
test
cmp
cmp
pushf
cmp
xchg
cwtl
incl
xchg
jmp
add
add
add
add
str
sldt
add
add
add
cmpsl
add
sbb
cmp
lcall
ljmp
movsb
call
mov
decl
fdivrp
mov
in
icebp
ljmp
inc
inc
incl
add
incl
add
incl
add
incl
add
call
mov
fdivr
ja
iret
lcall
out
lcall
loop
incl
mov
jmp
int
pop
lret
sar
and
add
add
add
add
add
add
str
sldt
add
add
add
mov
sbb
sub
call
leave
decl
mov
pushl
sar
jns
aam
adc
decl
fcmovu
jmp
cmp
incl
add
incl
add
incl
add
incl
add
incl
add
cmp
call
call
xlat
adc
jns
sar
jno
sar
pop
mov
ret
mov
pusha
incl
add
add
add
str
sldt
add
test
pop
pop
icebp
pop
insl
incl
mov
pop
int3
lcall
lret
jmp
int3
ljmp
iret
pushl
aam
adc
dec
incl
add
incl
add
incl
add
incl
add
incl
or
pushl
mov
incl
rcl
pushl
sar
outsl
lret
addr16
int3
jmp
int3
lcall
int
aas
mov
aas
incl
add
fildl
add
inc
str
sldt
add
xor
add
ret
add
push
jmp
insb
jb
inc
cmpsb
lods
call
lcall
jmp
lret
into
aam
ds
xchg
decl
and
decl
or
push
decl
adc
inc
jb
js
push
mov
decl
mov
jmp
lret
push
mov
mov
incl
or
add
str
sldt
add
add
add
arpl
add
in
adc
insb
incl
mov
dec
mov
call
ljmp
mov
movsl
call
mov
dec
mov
mov
lcall
ljmp
popf
movsl
ljmp
pushf
mov
decl
mov
call
inc
dec
incl
add
add
add
add
str
sldt
add
push
add
add
add
mov
pop
sbb
or
inc
decl
pop
decl
outsb
lcall
jg
cmp
mov
dec
mov
movsl
call
cmp
pop
push
decl
xor
decl
es
add
or
add
add
add
add
add
add
str
sldt
add
sub
add
push
add
add
add
mov
add
lock
or
add
sbb
add
sbb
add
pop
repz
push
lock
add
add
add
add
add
add
sbb
add
add
str
or
sldt
add
add
add
add
add
add
add
add
add
add
add
or
add
push
push
add
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
str
ltr
push
push
add
incl
add
inc
add
incl
add
incb
add
incl
add
clc
add
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incb
add
add
add
add
add
aas
add
cld
add
add
pop
add
clc
add
add
pop
add
clc
add
add
sldt
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
lock
add
pop
add
lock
add
sldt
clc
add
add
pop
add
cld
add
add
pop
add
incb
add
add
add
incb
add
add
add
add
add
incl
add
rolb
add
add
jmp
add
add
add
push
add
ud0
add
cld
add
pop
incl
add
incl
add
clc
ud0
add
incl
add
add
add
add
adc
add
add
sub
add
add
and
adc
add
add
call
add
and
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
and
mov
add
add
add
add
add
add
xor
add
add
add
