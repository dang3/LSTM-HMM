push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
call
in
sub
push
push
push
call
add
pop
mov
pop
ret
pushl
shlb
pop
add
call
add
pop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
jmp
ret
mov
sub
sub
lods
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
sub
je
mov
sub
jg
mov
jle
popf
pushl
pop
dec
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
.byte
fsubl
add
add
add
mov
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
fisubl
add
bound
add
xor
add
ret
add
add
mov
add
test
add
call
add
add
add
mov
and
add
and
add
add
cmp
add
adc
add
and
add
add
shlb
add
mov
add
add
add
or
add
add
sub
add
push
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
push
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
fisubl
add
bound
add
xor
add
ret
add
add
mov
add
test
add
call
add
add
add
mov
and
add
and
add
add
cmp
add
adc
add
and
add
add
shlb
add
mov
add
add
add
or
add
add
sub
add
push
and
add
add
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
imul
bound
gs
add
movb
gs
jne
jb
outsb
je
push
add
repnz
imul
jb
je
arpl
add
imul
je
imul
push
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
gs
inc
imul
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
popa
je
dec
jne
gs
add
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
adc
push
gs
insl
gs
push
add
dec
add
je
jb
arpl
jae
gs
jo
add
add
fs
imul
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
popa
je
inc
jbe
outsb
je
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
insb
jae
jb
outsb
inc
add
enter
jae
gs
popa
insb
jne
add
add
popa
jo
jb
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
gs
jb
jns
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
jae
gs
gs
inc
outsb
je
jns
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
ja
popa
jae
outsb
imul
imul
ja
outsb
jne
inc
outsb
je
jns
gs
imul
ja
outsb
jne
inc
outsb
je
jns
gs
imul
ja
insb
outsl
outsb
gs
outsb
je
jns
add
popa
jae
outsb
imul
imul
ja
insb
outsl
outsb
gs
outsb
je
jns
add
push
popa
jae
imul
add
popa
jae
outsb
imul
imul
popa
jae
gs
gs
inc
outsb
je
jns
add
push
popa
jae
imul
add
jae
imul
inc
push
inc
push
dec
xor
cs
insb
add
lldt
push
gs
outsl
add
push
fs
outsl
addr16
imul
add
add
push
outsl
addr16
imul
add
push
fs
outsl
jne
je
jb
add
push
inc
dec
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jl
lods
stos
lods
add
cmpsl
test
mov
mov
mov
les
int
into
rcl
in
rcl
shl
iret
iret
iret
hlt
into
int
hlt
leave
enter
leave
out
mov
in
mov
mov
lods
lods
stos
lea
fwait
cltd
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
leave
lret
leave
not
rcl
cld
xlat
fdivr
fcom
xlat
fcomp
fdivr
aam
rcl
iret
dec
int
aad
ror
iret
inc
ret
ret
std
mov
mov
scas
iret
movsb
mov
xchg
xor
and
add
push
add
add
add
add
add
add
add
add
stos
stos
stos
add
scas
scas
sbb
mov
jnp
mov
mov
dec
lret
ror
sar
aad
xlat
call
xlat
call
aam
dec
int3
int3
dec
int3
int
aad
dec
into
int3
mov
mov
mov
std
test
cmpsb
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
int
call
rcl
call
fcomp
call
fdivr
aad
dec
int
dec
lret
lret
int3
into
inc
mov
mov
mov
cmpsb
test
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
push
push
das
push
prefetch
sbb
sbb
aaa
cmp
and
push
pop
push
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
ret
ret
ret
enter
ror
call
aam
call
aad
call
ror
dec
enter
ret
ret
ret
mov
mov
scas
scas
scas
jmp
popf
pushf
xchg
cwtl
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jle
jg
jg
jno
jb
popa
popa
arpl
cmp
cmp
pop
pop
pop
stos
outsl
outsl
outsb
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsl
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
leave
dec
leave
leave
dec
enter
ret
mov
mov
scas
scas
scas
jmp
cltd
call
xchg
xchg
cwtl
xchg
xchg
fwait
lcall
cmp
push
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
outsb
add
pop
or
jp
lea
incb
jnp
jnp
jl
outsl
jo
out
push
push
ret
jg
jp
jns
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
popf
popf
pushf
decl
test
decl
xchg
xchg
sahf
sahf
sahf
sti
mov
xchg
cwtl
mov
jns
js
das
cs
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
lcall
mov
decb
mov
clc
jge
jge
jno
jno
jne
jae
jge
jg
addl
xchg
push
cmp
ss
cmp
mov
test
lods
sti
stos
lods
stos
lods
lods
stos
test
movsb
mov
xchg
xchg
xchg
decl
jg
js
js
jnp
jnp
xchg
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
addl
mov
push
push
push
prefetchw
xor
inc
dec
imul
xchg
leave
cltd
cltd
fistps
lcall
mov
decl
mov
lcall
test
ljmp
mov
mov
mov
mov
std
mov
mov
movsb
mov
jl
lods
cmpsb
lods
add
adc
test
mov
incl
xchg
decb
xchg
popf
pushf
sahf
std
movsl
mov
mov
in
xchg
xchg
in
xchg
push
jne
or
add
or
or
sub
push
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
std
mov
nop
call
sahf
sahf
jmp
lods
pushl
cmpsl
scas
mov
xchg
test
std
ret
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
popf
cwtl
pushf
incl
mov
decl
nop
nop
xchg
xchg
xchg
pushf
pushf
pushf
movsb
movsl
mov
movsl
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pushaw
popa
arpl
je
mov
jle
addl
int
xchg
xchg
in
xchg
xchg
testl
lea
jmp
lahf
pushl
push
mov
dec
xchg
mov
sub
mov
movsl
mov
mov
mov
stos
lods
lods
mov
movsb
mov
add
mov
add
pop
adc
mov
ljmp
pushf
decl
nop
call
xchg
xchg
call
cwtl
cwtl
fwait
lcall
mov
mov
mov
out
xchg
xchg
mov
xchg
aad
cltd
lcall
xchg
cmc
nop
mov
cld
xchg
adcl
lahf
pop
cmp
push
cmp
inc
jl
mov
jns
mov
je
mov
outsl
ljmp
adc
lods
or
ljmp
jle
mov
mov
stos
pushf
movsl
movsb
mov
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
cltd
cltd
lcall
lahf
lahf
lcall
lcall
xchg
xchg
xchg
xchg
xchg
call
xchg
fwait
cld
cwtl
xchg
pushf
stc
sahf
lcall
popf
mov
xchg
imul
xchg
dec
jns
lcall
pushf
and
lahf
sbb
movsl
push
jmp
ljmp
packuswb
lods
adc
lods
adc
mov
imul
adc
insb
mov
cltd
scas
mov
scas
scas
scas
movsl
movsb
movsl
sub
movsl
movsl
movsb
add
pop
pop
adc
mov
ljmp
popf
call
popf
popf
lcall
movsl
movsl
jmp
mov
xchg
decl
mov
decl
ja
lcall
xchg
push
jp
xchg
jno,pt
sub
decl
pop
call
add
pop
lcall
pop
pop
jmp
sbb
mov
outsl
pushl
push
outsl
mov
and
mov
and
mov
xchg
scas
mov
scas
scas
mov
lahf
mov
movsb
add
pop
pop
adc
lods
mov
shll
popf
sahf
sahf
jmp
test
cmpsb
test
ljmp
cmpsb
cmpsl
lcall
jle
decl
inc
outsl
decl
popa
decl
push
pop
incl
add
push
incl
add
nop
add
xchg
add
lcall
jmp
pop
outsb
pushl
sub
mov
sub
sub
jge
xor
jg,pn
leave
inc
mov
leave
lods
inc
mov
mov
movsb
mov
mov
add
push
push
adc
cmpsl
scas
ljmp
popf
jmp
test
stos
ljmp
mov
ljmp
mov
mov
xchg
incl
or
push
incl
add
test
push
incl
add
mov
push
call
add
fwait
add
sahf
add
movsb
add
scas
adc
mov
aaa
cmp
aaa
test
leave
cmp
dec
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsl
ljmp
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
incl
or
xchg
push
incl
add
mov
push
call
add
sahf
add
add
cmpsb
add
lods
add
jo
ret
cmp
int
call
inc
mov
rorl
call
dec
xchg
call
dec
xchg
fmull
fistl
call
xchg
std
mov
mov
mov
sahf
sahf
or
add
add
add
add
dec
inc
adc
jp
movsl
sahf
mov
jmp
stos
test
pushl
mov
mov
mov
mov
mov
jmp
aaa
outsb
decl
decl
push
pop
decl
push
decl
push
call
pop
jmp
add
test
pusha
pushl
es
int
call
push
cwtl
fcoms
ficoml
fstl
fistps
ficomps
jmp
pop
mov
jmp
pop
lahf
fadds
mov
test
jne
lahf
sahf
or
xchg
xchg
xchg
add
inc
adc
js
lahf
cltd
sahf
jmp
mov
stos
stos
pushl
mov
mov
mov
mov
ljmp
inc
jne
nop
pop
call
and
xchg
and
sbb
nop
add
xchg
add
cltd
add
mov
add
stos
add
mov
fs
mov
xor
fldenv
fbld
fisubs
in
cmpsl
jmp
data16
jmp
gs
ljmp
faddl
mov
test
mov
lahf
mov
add
add
add
inc
inc
adc
jae
fwait
xchg
cltd
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
lcall
call
sbb
pop
call
add
mov
add
lods
add
mov
pushw
movd
rolb
jmp
outsl
lods
jmp
jno
jmp
jno
call
jae
in
je
in
jbe
out
je
out
je
jmp
mov
mov
cmpsl
cmpsl
lcall
mov
add
add
add
jle
cmp
insb
outsl
js
lea
sahf
pushf
fwait
pushl
mov
mov
mov
mov
mov
cmpsl
scas
lcall
outsb
lcall
aaa
jne
lahf
xor
lcall
call
add
movsl
add
stos
add
mov
arpl
mov
fs
mov
sbb
fistl
in
mov
jmp
jle
jmp
mov
out
cmpl
push
xchg
push
test
ljmp
inc
mov
test
daa
sahf
lahf
sahf
add
add
add
pop
add
aaa
cmp
pop
pop
push
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
mov
jmp
cmp
mov
inc
jg
movsl
cmp
cltd
pop
call
pop
jmp
add
lods
add
mov
fs
mov
add
shlb
cmp
call
mov
icebp
pop
push
pop
push
xchg
ret
push
xchg
xchg
ret
stc
xchg
pop
out
pop
ret
clc
stos
lods
test
xor
popf
popf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
ret
ret
mov
jl
lcall
dec
cmp
dec
test
movsl
xor
pusha
lcall
add
cmpsl
add
lods
add
mov
arpl
mov
add
movl
mov
out
mov
out
xchg
lcall
repnz
cmc
lcall
cli
popf
int3
cld
popf
int3
sti
lcall
fistpll
cli
mov
mov
mov
nop
add
add
add
das
das
or
cmp
outsb
push
dec
dec
jecxz
pop
popa
decl
mov
mov
mov
sar
inc
enter
mov
mov
ljmp
dec
mov
movsb
sub
fwait
pop
pop
lcall
add
stos
add
mov
arpl
mov
add
leave
add
rorl
je
filds
out
lea
push
cmpsb
int3
push
movsl
int
clc
cmpsb
iret
sti
cmpsl
sar
sti
cmpsl
into
cli
test
iret
stos
iret
cld
test
jmp
mov
int
mov
mov
lahf
mov
xchg
add
lcall
xor
sub
inc
inc
inc
bound
push
xlat
jae
jb
mov
mov
ret
mov
inc
ret
ret
enter
ret
pushl
push
xchg
lods
push
mov
scas
dec
test
lahf
sbb
pop
jmp
pushl
addr16
add
int3
add
xlat
add
loopne
jl
out
pop
cmpsl
push
popf
lret
lods
sar
cli
mov
sti
mov
cli
mov
mov
cld
mov
cld
mov
mov
std
mov
mov
push
movsl
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
outsl
outsl
jo
cltd
fwait
cwtl
rol
ret
fcom
fcomp
jmp
xlat
test
int3
int
leave
lret
lret
dec
lret
lret
enter
mov
mov
lods
push
mov
stos
jge,pt
lahf
push
arpl
mov
add
mov
mov
add
rolb
jo
fadds
je
filds
je
jmp
jno
cli
lods
sar
cld
mov
fcos
std
mov
fdivr
mov
mov
xlat
inc
mov
int3
jmp
mov
call
lret
mov
sahf
mov
or
add
add
xor
xor
add
pop
or
leave
enter
loop
out
jmp
test
in
leave
fsub
fcmovu
fdiv
xlat
cli
aam
xlat
std
int3
ror
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
call
add
fildl
jbe
in
js
out
das
xchg
stc
mov
sti
mov
loope
inc
std
fdivrp
inc
fdivrp
dec
loopne
inc
fdivrp
std
leave
fdivrp
dec
fdivrp
dec
loopne
sti
mov
lret
leave
iret
mov
mov
xchg
adc
add
add
std
add
std
incb
std
incl
hlt
div
or
out
jmp
in
out
in
sub
in
in
dec
call
ljmp
jecxz
out
fcmovu
fsubr
les
xchg
cmpsl
cmp
movsl
adc
pop
ljmp
add
mov
add
int
outsl
call
add
filds
js
jmp
inc
pushf
cli
mov
in
cld
lret
jecxz
dec
in
dec
in
dec
loop
std
int
dec
loop
shl
std
shl
call
in
std
shl
cld
ret
fdivr
out
mov
fdivr
cmpsl
cmpsl
test
xchg
xchg
xchg
sbb
cltd
fwait
add
incl
std
incl
cmc
stc
clc
add
repz
add
repnz
push
out
repnz
pop
out
icebp
lock
in
in
pop
loop
mov
xchg
sti
sahf
es
movsl
add
stos
add
mov
inc
add
leave
add
roll
jo
flds
jbe
jecxz
jns
in
push
pop
test
cld
iret
in
std
shl
call
jmp
call
jecxz
call
call
std
out
fucomi
std
fucompp
shl
push
ret
in
lret
leave
lret
rep
test
xchg
and
xchg
cwtl
add
cld
add
std
testl
repnz
or
aad
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
leave
add
roll
jno
faddl
jbe
call
sbb
cld
ret
fdivrp
cld
fsubr
std
fucomi
std
fucomi
std
fldl2t
fucomi
std
fsubr
fucomi
fucomp
loopne
fucomip
fucomip
std
aam
push
ret
out
fdivr
iret
ror
clc
stos
lods
stos
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loope
add
mov
cwtl
repnz
and
mov
add
mov
mov
add
into
add
aam
jno
loopne
jae
jmp
sub
cld
shl
fucomip
fucomi
fucompp
fucompp
std
xlat
call
shl
cli
shl
cli
iret
loope
stc
int
clc
int3
fdivr
test
int3
jmp
rcr
call
xlat
sti
mov
mov
lcall
add
add
add
aad
mov
rol
lods
mov
lcall
add
mov
mov
add
roll
outsb
call
add
loope
jns
call
xor
enter
loope
cli
int3
loope
cld
fdivrp
clc
rcl
idivl
sar
repnz
sar
out
mov
lret
jmp
rcl
ljmp
imul
fnclex
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
int3
lret
add
sarb
sahf
ss
mov
add
mov
gs
mov
add
int3
push
jo
rorl
jbe
fsts
jns
loope
cmp
dec
xchg
call
scas
int3
jmp
scas
std
loope
mov
cli
fnstsw
enter
enter
into
in
enter
into
aad
loopne
fcmovb
out
loopne
jmp
out
repnz
out
popf
call
lret
lods
lods
lods
adc
cmpsb
test
add
ret
ret
ret
mov
stos
aam
dec
cmp
cmpsb
sbb
jo
mov
jns
mov
inc
xchg
les
stc
lret
test
mov
shll
enter
lret
ret
int
rol
int
aad
shlb
fcom
jg
fcmovnu
jb
fnstsw
gs
in
out
call
xor
cmc
div
and
icebp
lock
fcmovnu
or
mov
int3
add
add
add
mov
inc
mov
xchg
lock
xchg
ljmp
mov
sarb
test
mov
mov
cmpsl
leave
mov
enter
int3
jp
into
shlb
iret
iret
push
rcl
rorl
xlat
inc
rcr
aad
fcmovu
daa
xlat
fstp
sbb
adc
jecxz
push
loope
in
out
jmp
in
repnz
add
sti
testb
std
add
incb
std
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
kandw
mov
daa
int3
ror
and
aam
sbb
aad
adc
rorl
rcl
push
rcr
xlat
add
fcmovnu
add
add
in
add
in
ljmp
std
add
mov
add
ret
ret
mov
mov
mov
mov
push
rol
or
enter
mov
add
rolb
rcl
add
aam
aam
aam
aad
fadds
fcmovnu
loop
aad
fildl
loopne
loopne
filds
jecxz
out
lock
add
incb
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
mov
mov
mov
stos
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
ror
shr
aam
aad
rcl
sar
ror
iret
cli
int
int3
stc
lret
int3
int3
hlt
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
aas
aas
and
add
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
iret
iret
sar
xlat
xlat
call
aad
dec
rcl
dec
int
dec
lret
lret
inc
mov
mov
lods
stos
stos
icebp
cltd
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jne
jae
fs
inc
inc
dec
cmp
sub
sub
aaa
xor
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
aam
sar
lret
inc
sarb
ljmp
sahf
lahf
xchg
cwtl
cwtl
jmp
outsl
jo
push
adc
add
add
add
add
add
jg
addb
jnp
test
jnp
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jno
jo
mov
scas
pop
mov
mov
mov
mov
ret
mov
mov
mov
ljmp
pushf
lcall
xchg
xchg
fwait
fwait
fwait
out
addb
adc
adc
add
add
add
add
add
pop
fwait
lcall
fwait
xchg
cltd
fcoml
addl
jmp
jp
sarb
jnp
jp
jp
je
je
push
push
push
cmp
je
popf
pushf
popf
mov
scas
scas
repz
lods
lods
sti
scas
scas
lods
std
cmpsl
test
std
pushf
popf
pushf
call
xchg
call
mov
scas
jmp
scas
lods
leave
movsb
cmpsb
movsb
cltd
jb
jae
adc
adc
add
add
add
add
outsl
insl
outsb
pop
mov
loop
cltd
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsl
outsb
outsl
orl
lcall
lea
call
popf
ljmp
stos
scas
std
mov
scas
mov
xlat
cmpsl
mov
addb
add
add
add
add
popa
or
lods
mov
cmpsl
mov
mov
lea
call
sahf
lahf
sti
lahf
mov
lcall
push
push
jo
pop
push
outsl
insl
outsb
insl
xchg
subl
mov
lcall
popf
pushl
outsl
xchg
mov
push
mov
mov
mov
out
scas
stos
insl
stos
stos
test
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
cwtl
call
cltd
cltd
lcall
cli
xchg
xchg
cwtl
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
cmp
dec
jl
movsb
inc
jp
scas
ss
mov
jae
mov
outsb
ljmp
sbb
pop
mov
mov
jle
mov
add
add
add
popa
pusha
popa
or
mov
in
mov
cwtl
lcall
mov
lahf
call
decl
mov
xchg
jno
cld
xchg
popa
test
xchg
dec
jp
nop
cmp
nop
daa
push
lcall
push
ljmp
sbb
sbb
mov
jo
mov
and
pop
mov
scas
scas
xchg
sahf
sahf
sahf
adc
add
add
pop
pop
pop
or
lods
mov
test
lahf
mov
ljmp
test
cltd
decl
imul
sub
mov
pop
incl
or
mov
pop
call
add
test
pushl
jl
mov
xor
das
jg
leave
xor
inc
test
scas
movsb
test
test
pop
pop
popa
or
movsb
test
jmp
scas
scas
pushl
mov
jmp
inc
jb
mov
pop
decl
or
add
push
decl
add
lahf
add
cmpsl
add
mov
insl
inc
aaa
cmp
inc
mov
rolb
call
inc
nop
call
inc
xchg
fiaddl
call
bound
stc
mov
mov
mov
incb
add
add
popa
pusha
popa
or
mov
ljmp
mov
mov
mov
stos
lcall
push
arpl
nop
sbb
lea
pop
decl
push
call
add
add
scas
add
mov
dec
nop
call
push
fwait
fistpl
ficomps
loope
mov
jmp
insl
cmpsl
dec
cmpsb
mov
ret
movsl
xor
add
add
dec
pop
jge
jl
popf
cwtl
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
insb
call
push
pop
call
add
cmpsb
add
mov
fs
mov
xor
fsubl
jmp
outsb
stos
jmp
outsl
stos
call
jno
out
jae
jmp
test
mov
inc
cmpb
add
add
dec
dec
dec
pop
insl
outsb
insb
bound
cltd
xchg
ljmp
mov
mov
mov
jne
lcall
cmp
pushf
sub
xchg
or
pop
jmp
add
mov
fs
or
aad
xchg
jmp
jp
jmp
mov
out
test
push
xchg
out
mov
mov
cmpsb
test
cltd
lcall
sub
sub
push
push
dec
pop
imul
test
mov
mov
mov
sarb
mov
mov
ljmp
sub
cltd
or
add
add
mov
arpl
mov
push
jne
fbld
in
xchg
sar
xchg
push
cwtl
xchg
stc
cltd
enter
lret
push
cwtl
jmp
lods
vcmpss
lahf
mov
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
pushl
push
xchg
lods
dec
test
mov
add
jmp
add
mov
add
fisubl
cmp
jp
push
mov
into
clc
stos
sar
cld
stos
sar
cld
lods
sar
cld
stos
sar
stc
test
jmp
mov
inc
mov
stos
jne
pushf
sahf
or
add
add
dec
push
dec
aaa
je
jae
stos
stos
test
out
iret
int3
cmc
lret
sti
enter
enter
mov
ljmp
adc
add
mov
gs
add
iret
add
fiaddl
jbe
ljmp
std
mov
mov
fcos
mov
fdivr
mov
sar
jmp
rol
scas
scas
lods
mov
add
add
add
add
pop
or
aad
dec
loope
fsubp
loopne
fstp
ffree
fcmovu
fcomp
out
shll
test
jb
movsl
or
mov
arpl
mov
add
add
in
jnp
lock
mov
sti
ret
loop
inc
loope
std
loope
std
leave
fdivrp
std
lret
dec
std
fdivr
lock
lret
mov
xchg
pushf
pushf
pushf
sbb
add
add
incb
std
incl
jmp
or
in
out
sbb
jmp
xor
loop
in
lds
mov
mov
add
pushl
add
iret
add
fildl
jbe
jmp
insl
mov
cld
ret
sti
shl
call
out
std
shl
shl
call
out
std
xlat
out
cld
aam
push
enter
int3
sar
mov
mov
and
add
add
incl
std
incl
std
std
cld
pop
aad
push
mov
pop
xchg
popf
or
test
pop
pushl
add
roll
jno
loopne
jbe
out
and
cld
shl
std
fldl2t
fucompp
fsub
fsub
sti
fsubr
xlat
out
cld
aad
push
xlat
jmp
rcl
sti
mov
sahf
sahf
das
add
add
int
int3
or
fs
mov
add
mov
add
aad
jb
loope
js
in
das
xchg
push
pushf
cli
int3
loopne
cli
lret
fdivrp
test
icebp
ret
lock
sar
in
aam
in
shl
ljmp
ljmp
test
std
incb
aam
push
mov
jb
or
mov
insl
inc
pop
jae
int3
and
sub
pushf
clc
jecxz
mov
out
loop
lret
jmp
fnstsw
leave
ffreep
sarl
jecxz
fistpl
in
jmp
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
fidivrl
jg
rol
lods
mov
mov
ret
rol
rol
int
ror
iret
pop
aam
rorl
xlat
fdivrs
loopne
in
fsubl
jecxz
lock
jmp
or
incl
std
incl
mov
mov
outsb
scas
mov
scas
mov
push
mov
mov
shrl
leave
enter
aam
rol
adc
rcl
or
loope
or
int3
into
add
std
add
std
add
add
add
int
shufps
or
int
into
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
ret
enter
leave
enter
mov
rol
mov
scas
scas
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aad
aam
rcl
sar
int
into
std
mov
stc
mov
test
sarl
gs
sbb
add
add
add
add
add
add
add
add
jae
jno
pushw
inc
inc
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
aam
dec
into
into
inc
enter
mov
scas
lcall
mov
push
add
add
add
add
jne
jae
xchg
adc
outsl
outsl
ret
popa
mov
data16
insl
insl
outsl
jb
pusha
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jb
and
add
pop
add
add
je
jb
popf
xchg
lcall
xchg
clc
xchg
or
addl
dec
dec
inc
mov
popf
into
mov
lahf
lahf
sti
xchg
xchg
xchg
decb
mov
popf
pushf
popf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
movsl
test
test
mov
xchg
xchg
xchg
cld
pushf
pushf
popf
cmc
cltd
lcall
push
push
push
imul
jg
mov
xchg
notl
mov
pushl
push
lcall
scas
scas
push
stos
stos
stos
add
add
add
scas
test
xchg
xchg
xchg
lcall
lcall
xchg
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
nop
fs
pushf
inc
ja
cmpsl
cmp
scas
sub
jo
mov
outsb
pushl
sahf
scas
lock
mov
imul
int3
add
xchg
pop
scas
movsb
lods
test
lahf
sahf
sahf
jmp
movsb
call
jle
mov
xchg
inc
jb
mov
imul
xchg
adc
xchg
or
or
pushl
and
jbe
shrl
inc
ds
rcrb
subl
jne
push
mov
mov
cmpsb
pushl
mov
lcall
sub
adc
mov
push
decl
add
xchg
add
mov
adc
shlb
lret
ds
roll
call
inc
mov
aad
xchg
dec
cwtl
mov
mov
mov
movsl
mov
add
push
xchg
xchg
test
mov
scas
pushl
mov
movsb
call
pop
decl
pop
push
call
add
stos
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
cmpsl
call
pushf
mov
test
cmpsb
test
add
add
bound
adc
sahf
lcall
mov
mov
scas
lcall
jo
cwtl
and
call
add
lods
add
mov
addr16
xor
jmp
outsl
lods
jmp
jnp
out
jle
out
jle
fistpl
mov
and
add
add
adc
imul
mov
mov
mov
rol
mov
arpl
lcall
add
cmpsl
add
mov
fs
pop
insb
fmull
out
lea
hlt
xchg
xchg
enter
enter
inc
mov
movsb
sub
inc
aas
inc
adc
push
xchg
xchg
mov
inc
inc
mov
cwtl
ljmp
pop
push
pushl
add
vmwrite
jmp
scas
clc
test
cli
stos
sar
cli
lods
sar
sti
scas
sar
lods
sar
jmp
leave
inc
mov
movsb
ds
incb
xor
jo
inc
scas
mov
mov
aad
mov
aad
aam
out
lret
lret
mov
mov
jmp
inc
add
add
out
test
stc
nop
mov
inc
inc
fdivr
cld
ret
out
mov
ret
in
test
dec
addl
stos
add
jmp
or
out
out
loope
in
fcmovu
fldenv
movsb
es
ljmp
add
lret
fiadds
ja
out
aaa
xchg
sti
mov
std
int
shl
call
in
call
in
aam
push
fcos
ror
int3
in
scas
scas
scas
popa
cmpb
incb
incb
int
shrl
mov
add
mov
add
jecxz
jp
repz
cmpsl
cld
enter
out
cld
aad
aad
cld
shl
stc
shl
push
xlat
fmul
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
lods
push
fs
mov
push
jae
fistps
jg
in
insb
lods
cld
out
mov
shl
jmp
ror
jmp
lret
aam
call
fcmovu
scas
lcall
add
rol
mov
lods
xchg
dec
and
shll
lret
js
mov
mov
lret
adc
into
outsl
fmul
into
pop
aad
in
loope
out
call
sbb
rol
add
mov
scas
arpl
mov
les
les
ret
ret
int
fisttpll
int3
into
int3
or
push
std
std
std
add
incl
stos
incl
rol
add
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
adc
inc
repz
cwtl
das
fs
adc
mov
das
push
imul
dec
in
sub
mov
imul
jg
cmpsl
mov
mov
psrld
lds
xor
jecxz
test
pop
mov
sbbb
xlat
jecxz
or
mov
cwtl
pop
sbb
push
dec
jl
mov
outsl
fnsave
cmp
xchg
hlt
and
adc
jp
movsb
addr16
cwtl
lds
in
ljmp
or
imul
popf
pop
xchg
sub
mov
dec
jecxz
adc
arpl
xchg
push
out
test
stos
or
fildl
insl
add
cld
sub
sub
dec
dec
fistpll
test
std
roll
enter
test
and
out
xchg
cmp
add
fstps
and
push
dec
inc
xlat
jle
cld
xchg
jno
pop
cmc
rclb
jl
and
cmp
push
inc
lcall
cwtl
mov
or
fstl
mov
mov
bound
stc
xchg
sbb
cmp
mov
mov
cmp
aam
push
xlat
outsb
xchg
sbbl
adc
dec
mov
cwtl
das
pushf
pop
mov
dec
lock
jno
adc
imul
xchg
aaa
arpl
mov
mov
cmp
adc
outsb
scas
inc
dec
loop
shl
mov
mov
add
and
stos
push
or
enter
dec
xchg
bound
xchg
mov
inc
jecxz
xchg
sub
add
bound
or
orb
pop
sahf
fucomip
in
andl
inc
fisttpll
or
mov
ret
hlt
in
fstl
push
mov
sti
push
push
jmp
push
mov
or
inc
shll
mov
xchg
and
adcb
ja
cli
test
lahf
ss
pop
mov
push
loop
scas
inc
mov
ror
fs
and
adcb
inc
jne
mov
cltd
movl
push
sub
adc
sbb
ja
imul
jecxz
lea
fisttpll
or
sarl
sahf
pop
out
iret
insl
stc
nop
mov
rcll
repnz
xchg
sub
adc
or
repnz
addr16
sub
mov
cs
iret
data16
out
dec
jecxz
popa
in
test
mov
mov
movb
shll
cmpsb
cmp
mov
les
stos
data16
fmull
test
das
loope
xchg
adc
cmp
movsb
rclb
cmp
mov
fidivs
fcomps
or
xchg
jge
js
pop
sahf
sbb
scas
lock
and
mov
add
in
je
shrb
xchg
je
ja
xchg
lret
push
movsl
cld
cmp
les
into
shrb
mov
ret
hlt
xor
mov
inc
xchg
mov
lcall
pop
out
sub
pavgw
jl
sbb
iret
mov
mov
and
aad
jne
jae
pop
pop
repz
cli
xchg
cli
stos
jp
fstpl
sbb
xor
into
lahf
push
mov
add
in
icebp
movsb
aam
adc
div
mov
xchg
sub
mov
cs
iret
data16
dec
jecxz
pusha
in
test
mov
mov
lds
cmpsb
cmp
mov
les
stos
data16
fisttpl
sbb
loopne
xchg
adc
cmp
mov
cmp
mov
fidivs
xlat
pop
icebp
or
xchg
jl
js
pop
mov
inc
fpatan
dec
push
jns
test
lods
fdivrl
jb
je
repnz
mov
in
es
outsb
test
loope
mov
imul
inc
xlat
jl
mov
jo
outsb
add
loope
mov
jbe
or
fildll
out
test
pop
out
jae
cwtl
das
fildll
loop
ja
jbe
jae
mov
fildll
add
jae
and
fildll
in
xorl
addr16
pop
loop
out
test
add
add
repz
sub
orb
daa
mov
iret
add
addr16
inc
frstor
pop
out
test
mov
daa
out
cmpsb
cmp
ds
in
sbb
loop,pt
insb
mov
pushf
call
or
push
mov
out
cmpsb
cmp
push
push
jge
aas
ret
ja
repnz
fwait
xor
and
cmp
ret
xchg
repnz
sti
xchg
sub
sti
xchg
push
cli
xchg
cs
xchg
repnz
adc
push
stc
jmp
sub
mov
test
loop
lahf
adc
jnp
incb
inc
fdivl
loop
mov
rcrb
sti
cmp
shrb
jmp
push
out
or
pop
cmp
scas
inc
push
lock
and
xor
icebp
repnz
loop
clc
imul
lds
idiv
shrl
and
rcrb
xchg
sub
iret
sub
fsubrl
add
addr16
loope
fsts
sub
pop
divb
lret
cli
loope
ljmp
cmp
ss
cli
loope
lds
mov
js
lret
cli
loop
ficoml
cs
bound
test
cmp
out
xchg
lock
rcrb
add
and
or
and
repz
add
mov
sub
sti
jl
sub
or
sub
divb
daa
out
outsb
pop
add
inc
inc
out
inc
push
push
mov
ret
movsb
cmp
ficompl
or
dec
loopne
sbb
xor
pop
ret
repnz
cmp
in
clc
and
loop
sti
repnz
and
cmp
shrb
mov
fwait
loop
pop
out
sub
inc
frstor
sbbb
mov
jae
xor
out
ficoms
mov
add
js
mov
or
or
jle
dec
out
sub
aam
ret
xchg
inc
push
in
addl
hlt
mov
jno
jnp
test
push
jmp
mov
andl
jbe
lcall
jnp
data16
dec
fidivl
lcall
jmp
sub
scas
pop
mov
lcall
or
mov
adc
mov
fidivl
mov
mov
sub
mov
flds
popf
push
pop
mov
cltd
pop
scas
adcb
jl
aaa
scas
add
roll
push
aas
push
xchg
popa
clc
push
cmpsl
fnsave
test
sarb
cmp
push
fwait
push
out
leave
into
test
call
xor
test
push
out
inc
add
pop
mov
in
enter
cmp
mov
push
in
pop
mov
dec
call
aaa
add
pop
mov
ss
xor
bound
enter
hlt
iret
fdivl
sub
jb
and
xor
ret
pop
repz
clc
das
std
xchg
pop
daa
stc
push
les
test
jbe
pop
cmpsl
sub
daa
lods
aaa
into
cmc
je
lea
orb
outsb
into
gs
push
jae
aas
xchg
ja
out
inc
push
jno
jmp
jl
lahf
mov
repnz
imul
cltd
pop
sbb
mov
ret
pop
adcb
sbb
dec
jns
leave
stos
dec
filds
jne
xor
push
in
xor
pop
repz
pop
inc
fmull
jp
cmc
insb
shrl
pop
cmc
mov
mov
lock
clc
xchg
adc
addl
and
cmp
pusha
push
jmp
xor
loopne
out
push
fnsave
call
inc
stos
in
add
bound
push
das
mov
fcomi
orl
test
pop
enter
cmp
and
inc
fidivrs
adc
jl
push
dec
loop
repnz
and
adc
jne
cltd
xor
xchg
mov
les
inc
mov
mov
adc
aas
fbstp
xchg
sub
adcl
mov
xor
stos
push
fsubrl
in
pop
std
push
imul
push
icebp
or
movsb
mov
push
notb
sub
movsl
test
int
inc
sti
pushf
test
and
push
out
sbb
xchg
test
into
rcrl
sbbl
sbb
dec
fistps
or
data16
lcall
xor
xorb
jne
sti
xchg
mov
nop
daa
ljmp
sub
cmp
pop
enter
les
ja
daa
pop
push
cwtl
das
test
mov
pop
sbb
dec
shl
repz
push
adc
adc
or
lcall
ret
scas
in
or
rcll
testl
lods
sbb
jnp
ror
mov
cmpsb
xchg
sbb
sahf
test
aaa
push
adc
stc
loop
adc
ficomps
rolb
sti
lods
jns
push
jg
jno
dec
hlt
sbb
addr16
leave
cld
test
pop
xor
fs
xchg
xchg
pop
hlt
enter
test
xchg
push
std
pop
sub
mov
aad
sti
sbb
adc
inc
ljmp
dec
push
add
inc
arpl
imulb
mov
mov
mov
add
xlat
cmp
hlt
imul
ror
dec
mov
scas
hlt
nop
sub
stos
xchg
dec
fisubrl
movsb
test
pop
ror
js
cmp
aaa
sub
jb
or
out
add
scas
lds
cmp
sub
jg
jne
decl
push
scas
mov
xchg
ficompl
scas
and
pop
adc
int3
xor
loop
xchg
jl
push
aas
mov
andl
ja
sbb
mov
sahf
mov
in
inc
push
inc
dec
fnstsw
pop
out
push
sub
jge
push
movsb
outsb
xchg
push
cmp
jns
xchg
stc
or
pop
cmpb
xchg
push
cltd
cmp
lret
lock
push
stos
sahf
arpl
dec
insb
jb
out
lcall
add
jp
mov
inc
cmp
enter
insb
enter
pop
jo
dec
mov
dec
mov
pcmpgtd
mov
lcall
mov
adc
or
subb
rcll
subl
int3
sub
xchg
sbb
push
hlt
inc
aaa
pop
lret
mov
inc
xchg
in
pusha
aaa
push
or
mov
jmp
dec
fwait
fbstp
fildl
pushw
cmp
shlb
lds
add
mov
mov
pop
sbb
loop
negb
icebp
repnz
mov
xlat
jns
js
sub
insb
xchg
mov
adc
aam
jmp
lret
out
pop
stos
imul
enter
adc
insb
daa
xor
stos
xchg
add
push
pop
adc
inc
sahf
or
push
xor
pop
out
push
mov
mov
push
sub
daa
in
loope
in
mov
ljmp
leave
js
cmpsl
push
cmp
fistl
push
dec
inc
pop
inc
mov
or
nop
ret
xchg
mov
enter
mov
into
fcoml
in
dec
std
call
xchg
pop
ja
sub
movsl
vcvtdq2ps
jge
push
dec
loopne
jb
sub
leave
ret
inc
sub
xchg
fsubrs
test
push
in
repnz
adc
adc
mov
mov
fidivl
jne
pop
daa
xchg
fdivs
inc
movsb
cmp
imul
mov
jo
pop
push
xchg
sub
jle
and
sub
lods
inc
cld
inc
icebp
mov
jbe
test
mov
cwtl
dec
aas
mov
ljmp
add
jnp
out
lods
decb
or
imul
sub
mov
dec
outsl
and
imul
shlb
add
out
xchg
push
mov
cltd
or
ret
sub
sub
loopne
inc
dec
loopne
sub
decb
add
sbb
inc
xchg
sub
cmp
mov
loope
into
lock
mul
call
pop
xchg
movsl
adc
adc
test
fucomp
dec
loope
testb
mov
decl
stos
jbe
sub
and
xchg
sub
sahf
test
ljmp
pop
push
lods
in
cmpsb
and
leave
ret
loopne
add
loop
and
mov
rorl
je
cmc
test
jp
pop
sarl
cwtl
das
or
sub
pop
mov
inc
xchg
movsb
loope
xchg
mov
lock
adc
jg
das
push
movsl
mov
aad
ret
mov
and
lds
inc
fstps
xchg
js
sti
xor
negl
xchg
cs
jle
data16
rcrl
pushf
xor
neg
jbe
btc
jae
orb
jo
or
les
daa
mov
fdivr
inc
fdivrl
repnz
sub
ljmp
jno
mov
mov
in
adc
pop
adc
add
shlb
jbe
and
lods
cmpsl
fdivl
mov
loop
sub
in
or
jnp
or
xchg
cltd
scas
scas
ja
gs
and
das
ds
dec
mov
hlt
cmp
lret
bound
xlat
jmp
xor
mov
sahf
push
mov
sahf
andl
ljmp
mov
sbb
cmpsb
xchg
sub
int
fisubrl
inc
popa
clc
jge
fnsave
jg
jmp
add
mov
pop
mov
into
repnz
push
data16
cmpb
insl
call
lods
cmc
mov
int3
push
dec
lods
inc
sarl
ljmp
jno
ret
stc
cli
xchg
jge
es
sbb
cmpsb
push
lret
bound
out
fs
in
das
jmp
sbb
test
scas
fistps
sub
int3
jne
inc
icebp
sbb
pop
fbstp
outsl
jb
jl
std
xchg
cltd
xchg
nop
daa
lds
scas
inc
fldl
int3
arpl
mov
ljmp
mov
lahf
adc
outsl
push
mov
es
insb
pop
inc
fstpt
mov
stc
in
or
stc
nop
mov
ss
cmpsl
pop
scas
mov
push
xchg
stos
inc
fsubrl
mov
arpl
mov
out
xchg
pop
jne
movsb
ja
mov
lds
dec
loopne
dec
fnstenv
push
push
mov
outsl
xchg
and
cmp
fld
pop
hlt
push
loope
mov
or
xchg
into
lea
mov
lods
ret
inc
cmp
lahf
adc
js
mov
lock
call
jg
sbb
sub
or
mov
sub
loopne
inc
xchg
sub
ret
daa
pusha
cwtl
das
loopne
into
gs
pop
mov
lret
xchg
or
mov
imul
mov
ja
fisubrs
leave
gs
pop
aas
dec
jecxz
das
sbbl
idivb
mov
aam
xor
mov
aas
fs
fnsave
pop
gs
in
xor
sbb
rcrl
adcb
out
in
sub
lahf
movsb
inc
adcb
les
xor
add
mov
jnp
fidivl
xchg
push
lods
data16
xchg
xor
inc
mov
push
jmp
jb
adcb
fwait
push
jmp
sbb
pop
pop
test
mov
das
les
push
xor
popa
dec
jge
scas
std
fs
into
iret
mov
popf
xor
push
in
dec
pop
and
outsl
sbbl
test
fldln2
xchg
jmp
mov
dec
divl
or
shrl
sahf
nop
daa
lds
scas
inc
cld
mov
int
inc
push
cmp
add
sbbb
hlt
jbe
mov
jp
daa
mov
aas
sub
xchg
sub
arpl
and
dec
sbbl
hlt
movsl
lahf
ss
sarl
mov
cmp
jb
aaa
into
pusha
ret
xrelease
or
sbbl
imul
fists
inc
outsl
jge
es
jb
push
fwait
xor
mov
scas
xchg
pop
fsubrs
mov
testb
hlt
adc
pop
push
sbbl
movsl
adc
and
dec
outsb
add
adc
add
sbb
push
mov
xor
pop
lods
cmpsl
cmp
add
jge
movsl
dec
loope
sbb
pushf
cmp
jle
arpl
cwtl
lcall
mov
xchg
sub
lahf
and
push
pop
dec
mov
jne
lret
es
xchg
rclb
cli
xchg
cmp
mov
stos
sbb
jo
ss
lcall
mov
out
mov
outsb
add
and
dec
scas
inc
xchg
mov
push
cmp
int3
arpl
push
push
jmp
jb
stc
nop
or
sub
lods
out
mov
ja
xor
adcb
out
cmp
jp
out
add
pusha
cmp
pop
arpl
les
mov
dec
loop
pop
out
xchg
add
adc
test
das
insl
and
and
inc
fmuls
loope
shlb
cmpsb
clc
lock
iret
jge
sbb
push
movsl
xor
ret
push
xchg
loope
sub
outsb
pop
call
cmc
mov
mov
lds
inc
fmuls
jne
jp
and
pop
sbb
mov
enter
lods
fwait
xor
mov
mov
in
add
outsl
cmp
jnp
adc
ds
xor
xchg
adc
div
stos
inc
mov
xlat
leave
pusha
ds
stc
nop
imul
pop
scas
imul
int3
inc
test
inc
pop
push
ljmp
sbbl
adc
mov
adc
xchg
push
clc
popl
dec
jecxz
sub
push
sbb
mov
cmpsl
mov
jmp
cli
mov
pop
sbb
ss
xor
pop
cmc
test
shlb
jg
pop
jo
pop
mov
cwtl
insl
and
dec
hlt
mov
dec
pop
bnd
adc
push
adc
enter
xor
xchg
mov
lret
adc
jecxz
sub
sbb
dec
dec
leave
lods
inc
cmp
cwtd
pusha
fdivl
mov
test
push
cli
xchg
das
lock
incl
shlb
aaa
into
sub
ficomps
mov
cld
sbb
testb
popa
lock
dec
xchg
mov
jbe
fnsave
xchg
fsin
sti
xchg
and
sbb
lods
dec
sbb
push
aaa
into
nop
nop
dec
loopne
mov
neg
call
jae
sub
xchg
sub
lcall
pop
mov
mov
xchg
sub
mov
mov
and
scas
shl
hlt
mov
divb
es
mov
shlb
test
cmc
test
loopne
iret
mov
icebp
mov
notb
scas
test
inc
pop
or
pushf
daa
adc
add
mov
arpl
jge
test
fwait
cld
xchg
iret
aad
sbb
icebp
and
pop
inc
inc
fnstenv
ret
pop
lods
xchg
pop
cmc
enter
add
jl
push
push
insb
sbb
add
ret
sahf
inc
rorl
rcl
sbb
add
mov
xor
sbb
in
out
sarb
fldt
mov
xorb
repz
aaa
pop
lods
mov
or
dec
xchg
add
rolb
dec
movsb
mov
add
mov
fcmovbe
pop
insb
in
dec
repz
loop
dec
mov
inc
ja
sub
jmp
mov
test
inc
mov
jae
movsb
pop
inc
jp
xor
xchg
inc
jno
sub
xchg
aad
hlt
mov
aad
cmp
stos
push
daa
push
movl
adc
ss
test
sbb
push
cld
xchg
and
push
sub
mov
iret
push
hlt
mov
xor
cltd
mov
cltd
mov
jb
add
jecxz
xchg
and
bnd
or
jge
mov
addr16
out
les
aaa
dec
out
inc
aas
insb
jns
insb
cli
or
iret
in
jo
cld
add
icebp
mov
cmc
push
lds
das
cltd
sub
and
sub
fisubs
in
pusha
incl
or
lods
mov
adc
xchg
mov
std
mov
enter
fcompl
test
push
adc
xor
adc
fnstcw
nop
ljmp
and
scas
es
scas
jns
imul
push
xor
pop
scas
lea
add
sbb
out
out
cmovs
ja
in
cmp
sbb
mov
mov
mov
adc
sbb
stos
inc
andl
mov
sbb
sbb
test
adc
jp
jnp
mov
stc
into
add
push
dec
clc
clc
lock
push
andl
fcmovbe
mov
xchg
clc
sbb
jmp
outsl
sbb
es
rorl
xor
add
mov
cmpsl
imul
sti
or
sub
push
mov
push
pop
xchg
or
mov
sbb
mov
push
mov
lea
pop
fcompl
daa
in
mov
aas
push
stc
pop
jae
icebp
scas
push
int3
xor
jl
stc
test
pop
pop
and
mov
imul
rcrb
and
pop
and
and
add
call
scas
push
scas
xor
pop
loope
cmc
push
mov
lods
adc
mov
loop
pusha
push
cmpsl
cs
jnp
cltd
mov
pop
sbb
scas
mov
add
mov
jbe
inc
cmp
imul
pop
jg
mov
shl
idivb
inc
loope
xchg
pop
lods
lret
mov
pop
test
lret
jecxz
shrl
pop
push
int
stos
ffreep
add
fstpl
mov
jge
sbb
in
cmp
movsl
insb
fcompl
jecxz
adc
fcmovnbe
cmp
outsl
mov
push
jnp
mov
js
cltd
aam
mov
cmpsl
daa
aam
and
adc
in
mov
push
push
pusha
mov
int3
cmp
pop
sbb
test
in
add
loope
stc
inc
out
push
mov
sahf
sbb
icebp
daa
mov
mov
loopne
lcall
mov
cs
daa
jnp
jo
out
mov
sbb
add
aad
cmc
bnd
and
enter
lea
inc
fiaddl
xor
out
and
xlat
push
mov
aaa
rcrb
mov
or
dec
ss
xchg
sbb
outsl
adc
xchg
push
jnp
fcomip
out
nop
dec
scas
sub
dec
stos
and
or
xor
xor
and
mov
cmpsb
and
mov
xor
xor
xchg
nop
xchg
or
imul
call
mov
push
movsb
repnz
inc
cmp
inc
les
cmp
or
lds
shrb
and
mov
inc
cmpb
stos
sbb
sub
sbb
or
call
scas
idivb
cmp
sub
push
ss
mov
sbb
daa
cmpsb
test
test
add
in
xchg
jge
jmp
out
fwait
iret
mov
or
dec
cmpsl
in
lds
in
xchg
rcll
lcall
adc
out
popf
add
lods
dec
jne
mov
in
xlat
jp
fstps
movsl
mov
repz
mov
or
lods
mov
xor
push
push
lcall
rorl
insb
imul
lods
ja
mov
popf
pop
das
pop
insl
add
jp
popa
popa
push
addb
push
fsubr
xor
mul
repz
out
outsb
sub
in
adc
stos
aaa
leave
aam
nop
mov
and
lods
jo
inc
mov
adc
inc
fnstsw
sti
out
iret
rcr
in
nop
adc
out
mov
ds
mov
leavew
ror
dec
xchg
jp
cmp
adc
fldz
inc
mov
pop
popa
push
test
dec
fsubrs
leave
sahf
push
and
dec
mov
je
adc
ds
cmpsb
pop
pop
movsb
cmp
rorb
push
addr16
push
or
push
test
bound
inc
jo
add
cmp
cmp
and
sbb
pcmpeqw
pop
or
in
ss
pusha
ret
shrl
xor
sbb
mov
daa
sub
fsubs
inc
and
xchg
repz
or
xchg
push
push
fdivrp
pop
in
mov
outsb
and
pop
loope
adc
das
jle
or
dec
rcll
cmpsb
sbb
out
mov
mov
sbb
outsb
ja
pop
fisttpll
push
cmp
notl
cli
out
lea
sub
cmp
insb
int
add
pusha
or
out
imul
xchg
push
addr16
pop
cltd
imul
and
xor
and
mov
jecxz
hlt
stos
rcl
cltd
je
xor
mov
imul
mov
outsl
or
xlat
inc
push
mov
mov
stc
lcall
dec
mov
mov
push
icebp
mov
cmp
add
mov
sti
jne
ficomps
jge
mov
cmp
and
push
pushl
sbb
loope
push
nop
test
add
jns
xchg
lea
shlb
jo
push
sbb
jo
or
and
mov
and
mov
push
push
mov
hlt
popa
adc
push
stc
inc
jae
jge
data16
sbb
pop
pop
ficoms
lret
mov
jmp
imulb
mov
subb
gs
adc
test
jg
push
xor
cltd
test
in
xchg
mov
jle
subl
dec
xor
sub
imul
xchg
shll
and
in
or
add
ret
pop
jns
or
subl
adc
jge
cltd
pop
jno
ret
insb
enter
mov
jb
insb
add
pop
enter
adc
inc
cmp
repnz
mov
mov
addr16
lahf
or
sahf
dec
push
or
add
bound
out
sub
add
fsub
cli
and
imul
in
adc
hlt
lea
stos
inc
clc
repnz
pop
das
ret
dec
loop
xor
push
push
pop
loop
clc
mov
dec
sahf
fldcw
sbb
xor
aad
nop
ds
daa
xchg
clc
shlb
pop
ficomps
cli
test
insb
or
inc
hlt
std
lret
xchg
inc
mov
shll
pop
mov
pop
outsb
sub
sarl
inc
ljmp
pop
xchg
pop
add
addb
fdivrl
push
add
loop
or
add
xchg
mov
mov
lods
dec
or
loopne
xor
pop
fiaddl
lahf
cmp
sub
movsl
dec
jl
lcall
jmp
into
jle
inc
dec
movsb
scas
and
mov
jl
rorb
jno
mov
jo
sbb
jbe
inc
mov
cmp
pop
or
jl
iret
jl
outsl
mov
adc
push
rolb
lret
adc
mov
sbb
add
or
dec
movsb
sar
mov
aad
orb
in
stos
push
sbb
sbb
sub
stc
mov
loope
mov
arpl
push
outsb
je
dec
fcmovne
cmp
cmp
out
cli
inc
nop
mov
insl
movsl
sti
sub
ror
sub
jecxz
pushf
lea
orl
insb
fldenv
stos
jmp
leave
aad
push
jbe
aad
xor
pop
andl
dec
cmpsb
repnz
mov
pop
pop
scas
shlb
push
adc
push
fistl
dec
mov
aas
jb
cmp
mov
sbb
push
iret
in
and
cmp
je
and
into
outsb
sahf
pop
cmpb
rcrb
pop
jbe
imul
scas
fistps
repz
loop
dec
test
mov
push
scas
fbld
outsl
pop
push
fstpt
jne
pop
mov
push
mov
popw
adc
sub
scas
rcl
add
rol
add
or
jmp
pop
lea
outsl
dec
add
or
dec
pushf
cmp
adc
fnstsw
aad
push
cmp
shll
rclb
arpl
pushf
pop
push
or
ja
xchg
mov
adc
ss
lahf
fsubr
cmpsb
mov
dec
mov
test
aaa
dec
sub
pop
add
push
sbb
cld
jge
inc
test
dec
xor
mov
xchg
jmp
and
inc
sbb
loopne
ret
sub
xchg
in
gs
lods
dec
adc
jns
pop
fidivrs
jecxz
in
sbb
push
das
fidivrs
and
pop
and
scas
jecxz
dec
jo
inc
pusha
mov
pop
sbb
pop
cmp
mov
or
out
and
mov
and
loopne
in
pop
pop
xor
clc
stos
mov
inc
push
inc
arpl
fldln2
cmp
xchg
mov
ret
mov
lock
scas
sub
addr16
mov
xchg
lds
aam
inc
int
add
pop
sbb
or
ja
ret
rcll
ljmp
push
sahf
int3
daa
or
fistl
xorl
push
adcb
repz
or
push
arpl
pusha
popf
iret
or
popf
rolb
test
jbe
fdivr
mov
xchg
mov
enter
dec
or
mov
js
int
loope
add
pop
pop
mov
iret
push
xchg
dec
push
inc
adc
adc
mov
sbb
push
mov
add
adc
rorl
movsl
pop
sub
jo
push
mov
add
push
test
data16
data16
in
es
and
mov
testb
pop
pop
cmp
cmpl
pop
out
enter
cmp
in
das
xchg
xchg
fs
xchg
fwait
out
fwait
dec
data16
shlb
in
jp
repz
push
pop
addl
out
aad
rorl
xchg
fisubl
inc
lret
adc
cmpsl
ds
icebp
add
dec
cwtl
sub
loopne
add
xor
pop
sbb
stos
jae
push
jb
jle
jns
pop
cmpsb
or
dec
cmpsb
push
divb
popa
push
cmp
inc
inc
cmpsb
add
push
adc
or
xchg
ficoml
jbe
adc
mov
scas
ror
mov
cli
repnz
add
cld
xchg
pop
pop
inc
out
mov
jge
pop
mov
scas
push
xchg
mov
jp
xchg
or
repnz
xor
push
mov
scas
mov
es
fs
pop
insl
jno
aam
or
adc
mov
lahf
lea
xchg
dec
lret
mov
pop
in
rorb
movsl
cltd
dec
jne
sub
outsl
jo
mov
cld
insb
sbb
mov
nop/reserved
test
pop
jmp
aam
je
inc
pop
sbb
push
or
and
in
movsb
mov
jp
cs
adc
dec
dec
lock
mov
add
std
sub
movsb
xchg
repz
mov
cmp
imul
push
pusha
in
ljmp
mov
pop
xchg
xchg
fs
pushf
popa
lea
xchg
sbb
ret
inc
rcrl
pop
stos
add
sub
addr16
mov
stos
std
int3
decb
dec
mov
cmovle
mov
cmc
aaa
idivl
inc
pop
stos
push
mov
sbb
dec
das
jmp
add
xchg
cmpsb
push
mov
lods
cmpsb
xchg
test
sbb
jne
sbb
sahf
or
dec
inc
sub
lods
movntps
ret
sub
xchg
or
and
cmp
sub
mov
push
push
shlb
gs
pop
and
inc
mov
xchg
add
pop
jbe
repz
push
js
mov
jp
fcmovnb
xchg
shlb
lock
jmp
xchg
nop
adc
push
mov
mov
push
in
or
pusha
mov
jge
out
xor
sbb
mov
mov
sub
sbb
out
fs
xor
rcll
mov
or
pusha
inc
inc
jle
push
push
lret
xchg
addr16
sbb
inc
leave
push
shl
sarl
insl
sbb
shll
or
std
out
das
loop
xchg
out
sti
mov
cmpsb
stc
jmp
ret
daa
arpl
push
and
les
cltd
add
movl
jmp
ret
fnsave
ja
mov
jle
int
add
test
fsub
jl
mov
xchg
mov
in
scas
inc
add
int
cmpsb
jmp
ja
inc
scas
jl
adc
jl
fnstcw
adc
mov
test
cmc
scas
call
das
ljmp
les
fdivrl
jno
sbb
int3
inc
rcrb
stos
pop
aam
ret
jecxz
add
out
jae
pop
mov
jnp
mov
cmpb
inc
mov
lea
jmp
aam
jb
pop
in
push
adc
mov
sar
repz
je
mov
or
add
mov
and
je
jge
sbb
sbb
in
jo
sbb
je
daa
cmp
add
push
push
cmpsb
mov
jns
xchg
out
jge
dec
mov
stc
sub
sahf
jno
popa
sub
test
and
shr
outsl
adc
mov
insl
addr16
and
sub
and
mov
or
mov
dec
push
insb
push
or
push
pushl
lods
loop
mov
jp
pusha
mov
cmp
mov
inc
inc
xchg
into
inc
nop
jno
lea
loope
cli
and
ljmp
repnz
inc
push
inc
push
adc
jl
les
aas
adc
imul
pop
repnz
fnsave
mov
je
add
add
push
xchg
inc
xchg
xor
sahf
inc
mov
inc
sti
add
repz
sub
ljmp
mov
mov
cs
jecxz
sbb
jmp
sub
jmp
jg
inc
in
data16
fdecstp
adc
push
ljmp
xor
dec
lret
pop
adc
bound
scas
cmp
push
daa
push
xor
test
or
inc
inc
test
sub
push
jecxz
xchg
xchg
xor
mov
add
jae
dec
es
pushf
pop
xlat
mov
xor
pop
cmp
in
test
imul
hlt
lods
or
sbb
cmpsb
in
iret
sarb
hlt
iret
cmp
pop
sahf
inc
and
mov
or
les
and
sbb
orl
inc
push
xlat
push
inc
xlat
popf
clc
aas
dec
out
repz
mov
lret
and
or
xlat
push
adc
sti
mov
mov
fisttps
aad
cmpl
ret
mov
mov
dec
adc
pop
and
mull
lea
cmp
test
cmpsl
mov
stc
int
cld
scas
andl
mov
sub
ja
in
loopne
lret
xchg
jno
jecxz
imul
xchg
sbb
shrb
mov
cmp
ds
int3
pop
dec
imul
push
rcl
jecxz
dec
out
test
mov
gs
xchg
shlb
cld
bound
jnp
stos
mov
or
and
and
shrl
pop
xchg
add
aam
add
fwait
or
lcall
push
inc
int
adc
push
jo
aad
jp
hlt
xchg
cmpsl
add
cli
cmp
sub
mov
or
sbb
rcl
ja
fcomip
shll
loope
push
jmp
and
inc
mov
xor
movsl
movsb
test
jecxz
insb
ficompl
or
inc
gs
cmpsb
and
aad
xchg
sub
xchg
stos
adc
adc
divl
push
jp
xor
insb
repnz
mov
lahf
jne
fs
sti
adc
add
lods
ss
push
mov
lcall
xchg
imul
cmpsl
cmp
mov
mov
xchg
insl
call
adc
inc
mov
test
inc
lcall
pop
xchg
jp
sub
ja
andl
pusha
xchg
mov
hlt
lret
cmp
pop
pop
dec
cmp
js
push
sub
dec
cmc
sub
sbb
insl
dec
das
add
inc
mov
xchg
and
int
xchg
cld
and
jno
lret
mov
xchg
out
sub
pop
lahf
sbb
sbb
jg
push
incb
sti
hlt
jg
push
rcl
fldl
cmpsl
mov
inc
into
sbb
push
cwtl
leave
jl
mov
sbb
push
jg
shl
cs
rcrl
cltd
sbb
cmc
and
adc
mov
ljmp
dec
jecxz
clc
sbb
cmp
mov
push
test
pop
stos
inc
mov
fsubrs
or
mov
enter
xor
pusha
scas
cld
inc
out
ret
fcomps
pop
sahf
in
pop
scas
aam
xlat
or
xor
subl
divl
jl
loopne
jo
int
dec
imul
enter
pushf
or
call
and
add
pop
fadd
ja
or
lods
xchg
cltd
in
mov
cmp
and
and
test
test
jno
iret
pop
ds
sahf
pop
push
mov
mov
push
xchg
or
mov
ss
movsl
imul
jecxz
or
pop
test
iret
xchg
mov
pop
mov
add
or
push
out
jo
movl
je
pop
incb
mov
mov
xchg
push
or
xor
outsb
mov
aam
inc
gs
or
xchg
sti
lea
popa
cmp
pop
fldcw
enter
lcall
jle
aam
sahf
mov
cmp
test
xchg
les
add
fs
jne
sti
push
lret
cs
xchg
and
sti
jmp
and
mov
and
std
fstpl
pop
nop
dec
jecxz
loop
mov
xor
je
inc
cmp
and
jge
xchg
lea
fimuls
push
lcall
inc
mov
add
or
jg
dec
cmp
dec
outsl
fnstsw
dec
mov
xor
sbb
xor
pop
shl
outsb
sub
mov
test
out
pop
push
in
xchg
pushl
mov
mov
ljmp
and
pop
jb
aaa
pop
push
pop
cld
xchg
and
add
cmp
ret
clc
lcall
mov
mov
dec
add
mov
sbb
imul
and
mov
iret
sbbl
fisubl
sub
loope
jmp
xor
mov
jae
ds
mov
int3
movb
xor
jg
inc
adc
and
dec
push
sbb
js
mov
pusha
and
cs
loopne
xchg
jmp
xorl
mov
xor
data16
scas
add
or
nop
outsb
cmpsb
imul
ror
jbe
leave
pop
inc
stc
outsl
pop
push
mov
aaa
or
mov
aas
mov
shll
sbb
mov
ljmp
gs
push
std
in
push
out
and
or
dec
adc
sub
inc
or
mov
mov
lcall
mov
add
push
or
in
push
pop
push
jnp
dec
fcompl
pop
enter
or
dec
nop
cld
sub
pop
push
push
xchg
out
sub
call
add
add
in
mov
mov
lock
lahf
sbb
mov
lods
mov
pop
sub
mov
iret
push
clc
or
out
lahf
xor
push
imul
add
and
mov
notb
xor
add
cmpsb
mov
adc
sarb
iret
push
test
mov
adc
fisttpl
cmp
or
pop
movsb
lock
ja
mov
cmp
fs
and
xlat
mov
inc
fdivrs
mov
dec
pusha
fadd
imul
nop
pop
mov
xchg
stc
repz
mov
sub
test
ja
loopne
jl
aam
xchg
enter
pop
dec
sub
sbb
xlat
jmp
bound
ja
aam
mov
sub
cmp
xor
inc
hlt
or
pop
mov
cmp
jle
mov
es
popa
je
mov
sub
sbb
arpl
lahf
ja
and
arpl
sub
mov
in
nop
call
aaa
or
jmp
test
frstor
jle
mov
lret
mov
inc
lds
add
push
mov
lds
push
mov
mov
out
add
aas
mov
repz
lahf
pop
nop
inc
dec
xor
scas
into
ds
movsb
into
sbb
xor
adc
ret
sbb
sbb
fisttpll
imul
mov
and
sub
add
sbb
test
add
subl
loop
mov
xor
jle
cmp
cmp
and
xor
jecxz
cld
jno
imul
sahf
shll
inc
mov
mov
aas
lods
mov
pop
lret
hlt
cmpsb
aad
stc
pusha
mov
push
or
nop
bound
ljmp
popf
sub
pushf
loopne
mov
mov
movsw
add
mov
lret
fidivs
je
div
addr16
testl
adc
aaa
rcrl
scas
test
add
mov
imul
jmp
loope
stos
pushf
dec
or
mov
cmp
xchg
adc
or
and
push
shlb
addr16
je
xchg
mov
pop
stos
cmp
lock
je
xchg
popf
cmp
test
stos
push
pop
jns
xchg
mov
mov
stos
lods
lea
lea
lods
pop
jo
pop
lds
test
pop
nop
sarl
inc
rcl
cli
cmp
or
ret
adcb
test
sub
pop
or
lcall
cmpsl
andl
int3
sarl
push
xchg
lret
in
sub
lea
jecxz
enter
cmp
push
les
jl
xchg
outsb
lods
and
in
xlat
mov
pop
test
data16
mov
xor
leave
outsl
clc
jno
xchg
jno
lods
mov
bndstx
stc
ret
dec
aas
into
and
pop
rclb
dec
xchg
add
bound
dec
int
sbb
cmp
fiadds
ret
push
mov
cmp
xor
data16
lods
idivl
dec
mov
dec
add
clc
out
outsb
or
fnstsw
or
xor
inc
lret
test
mov
das
jb
lret
cld
dec
insb
ret
or
sub
stc
mov
test
lahf
lcall
xchg
std
fisttpll
iret
cli
pop
lock
lret
scas
sti
aad
mov
in
mov
cs
and
mov
lret
and
sub
sti
pop
mov
xchg
ljmp
adc
xchg
shrl
rcr
add
and
clc
jbe
pop
dec
or
jle
cmp
adc
cmpsl
and
xor
loopne
inc
in
popfw
in
in
movsl
pop
popa
push
jg
mov
pop
push
inc
push
movsb
jae
out
gs
cltd
test
sub
add
push
cmc
sbb
out
adc
es
jnp
aas
sub
sub
icebp
push
adc
push
cmpl
jnp
test
push
add
sbb
add
mov
inc
mov
ret
or
pop
sbb
pop
xor
sahf
fcmovnu
daa
popa
in
popa
in
adcl
ret
mov
xchg
dec
popf
jns
cmp
sub
push
jp
mov
daa
pop
xchg
test
adc
dec
addr16
lock
jb
arpl
xchg
pop
das
test
pop
ds
cs
icebp
loop
dec
aam
jo
mov
test
int
inc
sub
fists
sub
mov
jbe
mov
xchg
and
adc
jg
movsb
xor
outsb
xor
fcomps
xchg
lret
and
jnp
or
imul
jno
sub
lret
movsb
or
mov
pop
cltd
pop
inc
mov
mov
lahf
js
sbb
cli
sub
lock
sarb
adc
mov
mov
mov
lock
cmc
lods
movsb
jo
or
movsb
adc
adc
xchg
xor
cmpsb
nop
push
shl
insb
xchg
mov
adc
jge
rorl
xor
ja
push
mov
sbb
in
pop
jg
sub
and
jae
in
cli
hlt
pop
jg
or
lds
sbb
lds
in
das
out
sbb
mov
daa
pop
or
sub
sbb
repz
adc
jae
imul
lret
push
pop
nop
dec
dec
cmp
lds
jae
leave
sub
lret
xor
adc
call
int
mov
ss
xor
stos
js
fcompl
loop
movsl
sub
mov
test
mov
xor
mov
shl
out
jbe
dec
jnp
fcomip
pushf
xchg
test
ss
daa
lret
jae
out
repz
sahf
outsb
lret
xor
pop
adc
hlt
scas
test
orl
dec
add
inc
pop
mov
jp
cmp
cltd
cmp
hlt
inc
dec
add
out
push
popa
stos
pop
jb
adc
push
or
xor
add
xchg
loopne
inc
mov
mov
mov
pop
lcall
daa
cmp
mov
stos
cmp
test
push
dec
or
loopne
aad
aam
jno
adc
sub
dec
mov
aam
in
dec
icebp
push
mov
lahf
dec
leave
sbb
jo
push
and
gs
mov
movsb
pop
stos
mov
or
mov
test
lret
inc
arpl
sub
sahf
shrl
lock
imul
push
iret
mov
ret
push
adc
and
aas
rcr
insb
sbb
sbb
adc
sub
das
dec
mov
lahf
testl
jle
movsb
add
js
sub
cmp
enter
aas
loope
jne
mov
mov
xorl
repz
test
ret
cmpsb
cmp
cmp
gs
push
lret
dec
mov
ret
les
sahf
or
push
sarl
out
fwait
mov
cmp
popa
xor
mov
mov
inc
mov
jmp
xchg
fcomps
sbb
pop
lret
mov
push
sbb
insl
pushf
mov
vhsubpd
data16
fwait
jp
jb
cmp
mov
sub
jb
cs
movsb
sbb
int
fstl
push
xchg
push
js
fiadds
pop
jbe
dec
sahf
adc
push
mov
addl
and
movsb
jo
fisubs
jbe
ret
jge
sbb
test
dec
or
mull
cmp
test
fcoms
mov
inc
jns
leave
jecxz
add
xchg
fwait
xorb
scas
mov
cmp
or
mov
xchg
cmp
repnz
mov
add
adc
movsl
xor
andl
testl
sub
popf
sub
pop
mov
arpl
lods
adc
sbb
fs
pop
xchg
and
jbe
jae
push
movsl
or
xchg
cmp
fdivl
pop
push
mov
sbb
dec
scas
cmp
loopne
adc
xor
jbe
test
push
in
inc
cmpsb
fsubs
push
xchg
stc
lods
inc
sbb
cmp
outsb
bound
rcrb
jmp
jne
loopne
sahf
adc
and
mov
test
push
cmp
xchg
pusha
testl
sub
pop
sti
jns
sub
dec
fwait
xor
mov
shlb
cmc
fidivl
jbe
jle
dec
std
xchg
jp
std
xchg
sti
fwait
and
dec
in
cmp
push
outsl
cmp
stc
jo
data16
repnz
jns
ret
adc
inc
in
cmp
movsb
cmp
mov
fdivl
or
cli
xchg
punpcklwd
xchg
xchg
xor
scas
popa
mov
mov
xorb
mov
cmp
aaa
aam
jmp
pop
pop
icebp
mov
jb
pop
stos
js
fnstsw
daa
stos
xchg
sub
call
dec
andl
gs
movsb
shrl
jae
subl
xchg
sub
mov
imul
aad
xor
sahf
idivb
shrb
shrb
mov
pusha
testl
dec
lahf
hlt
outsl
push
sarl
add
inc
cltd
and
mov
ret
cld
rcrl
lods
inc
inc
mov
pop
mov
sub
push
mov
dec
in
das
rcrl
and
movsb
pop
xchg
sub
mov
lcall
jl
cltd
movsl
dec
loope
jb
cmp
call
inc
ficompl
mov
fisubs
or
mov
fisttpll
mov
xchg
daa
loope
popa
mov
or
addb
cmp
popa
clc
push
pop
shrl
daa
in
popa
cmpsb
xchg
sub
andb
mov
fdivl
sub
pusha
test
cmp
adcl
clc
push
dec
ljmp
lcall
mov
ficomps
pop
aas
push
lods
push
mov
shll
rcll
lods
or
mov
mov
sbb
movsl
inc
ja
in
mov
loop
popf
shll
or
shrb
or
xor
data16
fidivs
rorb
mov
sub
stos
inc
xor
mov
mov
ret
xchg
cs
scas
xchg
fstps
out
dec
cli
jbe
and
xchg
xchg
inc
or
out
lahf
repnz
cvtdq2ps
cmp
cmpsl
ds
and
outsb
movsb
daa
mov
mov
fcmovnu
jno
dec
ret
pop
je
dec
out
xchg
stos
inc
iret
andb
sub
aas
add
es
sbbl
cmp
fidivs
dec
mov
js
addr16
pusha
cltd
cmpsb
cmp
mov
fldl
jno
sub
push
fwait
add
lods
in
cmc
push
into
fidivl
aas
pop
imulb
fs
inc
mov
mov
popf
shrl
ret
xor
call
or
sahf
mov
or
or
cltd
xor
cmc
mov
inc
cmpsb
cmp
cld
mov
jmp
inc
sti
out
and
cmp
xchg
inc
aad
xorl
jno
aaa
stc
adc
sbb
mov
std
xchg
std
inc
fldenv
inc
sbb
insb
mov
out
mov
fcmovu
je
inc
add
pop
sahf
jns
leave
jge
mov
ljmp
add
mov
jo
in
test
inc
fxch
jl
cmp
adc
in
test
xor
out
dec
mov
sarb
add
in
imul
inc
jle
sbb
lret
cmc
mov
inc
ficoml
lahf
xor
mov
mov
add
fsts
enter
add
jg
test
lahf
clc
sbb
ljmp
lcall
lea
lods
fmuls
cltd
lcall
int3
jecxz
pop
out
mov
ret
fbstp
pop
je
mov
mov
dec
test
pop
cmc
xchg
repz
xor
sbbl
jne
pop
mov
xchg
sbb
rclb
pop
mov
add
jmp
or
xor
fidivs
out
jl
sbb
sbbl
clc
pop
cmc
and
jno
jg
inc
ficompl
mov
or
fs
jno
daa
xchg
lcall
sub
sbb
add
daa
xchg
inc
xchg
sub
mov
mov
shll
lea
shll
lods
inc
or
or
pop
loop
or
stos
cmp
arpl
pop
scas
std
xchg
xchg
sub
push
ds
call
je
popf
inc
jle
ja
xchg
sub
rorl
sub
pop
ret
pop
mov
fwait
subb
or
sub
adc
or
inc
testb
mov
mov
sub
ss
dec
shrl
dec
fs
jns
jmp
add
in
or
sub
dec
jle
push
in
mov
loopne
add
out
out
test
sbb
mov
fst
imul
arpl
cvttps2pi
sbbb
add
or
stos
mov
int3
jmp
mov
pop
and
push
cmp
jl
jbe
add
mov
cmc
call
stos
inc
inc
inc
cmp
ja
push
xchg
xchg
pop
in
lret
test
jecxz
stc
sbb
adc
cmp
ja
imul
mov
jae
loopne
shrl
or
jmp
push
push
mov
cmpsb
movsb
mov
xor
testb
movsb
sbb
dec
pop
das
mov
pushf
movsl
cmp
pusha
out
clc
dec
fsubs
add
pop
call
xchg
sbb
or
add
roll
lea
jp
add
mov
test
xor
mov
outsl
pop
mov
test
in
aam
adc
inc
inc
out
dec
inc
out
xchg
outsl
clc
int
outsl
mul
jecxz
or
adc
sbb
mov
roll
xchg
icebp
scas
cmp
aas
adc
mov
iret
into
pop
repnz
add
fbld
mov
ja
jge
pop
lahf
mov
test
scas
rcrl
pop
cltd
sub
rcrl
pop
push
xchg
jle
iret
outsl
into
mov
inc
cmc
and
in
mov
pop
je
je
sbb
leave
aam
mov
icebp
fstpl
or
insl
jg
adc
scas
nop
and
iret
hlt
test
push
ret
jo
ds
icebp
orl
fbstp
negb
loopne
push
mov
xor
stos
mov
jmp
push
loope
cmp
xor
cmp
rsm
mov
int
mov
mov
loopne
sub
xor
bound
test
imul
in
jno
in
cltd
sbb
pop
hlt
xorb
sub
mov
ret
cmp
add
dec
cmc
test
sbb
jmp
sub
pop
movsl
jge
jmp
adc
clc
jl
dec
mov
mov
shlb
sbb
int
mov
adc
dec
lea
mov
push
negb
mov
pop
jmp
mov
subl
test
push
sbb
ret
and
cli
adcb
cmpsb
iretw
sub
or
cmp
mov
bound
pop
lds
add
dec
stos
xor
loop
sub
mov
aad
cmp
lea
int3
add
dec
sbb
sub
xchg
gs
out
jmp
adc
icebp
stc
inc
inc
repnz
jno
dec
mov
add
jne
sbb
xor
dec
fstpl
sbb
or
dec
mov
add
pop
fisubl
shrl
bound
add
mov
cmp
sbb
arpl
adc
shlb
and
loopne
dec
mov
jb
js
mov
adc
and
jl,pn
aam
dec
lcall
mov
js
push
cmc
fdivl
je
cmpsb
dec
add
stc
lcall
dec
in
sub
sbb
ds
imull
adc
rcll
scas
inc
loop
jecxz
sbb
xor
shll
add
xchg
mov
cmp
pop
mov
mov
jecxz
inc
fldcw
iret
pusha
testl
and
stos
fdivl
cmpsb
std
cmpsl
ds
enter
push
mov
push
mov
shrl
neg
je
ret
hlt
dec
fwait
xor
dec
in
pushf
jns
into
push
pop
scas
and
xor
inc
cmp
pop
xchg
jno
sbb
es
jmp
lcall
and
xor
inc
flds
push
out
test
scas
adc
xchg
cmc
sub
adc
pop
notb
mov
push
adc
pop
sahf
or
in
pop
stos
lods
inc
fnstsw
popf
mov
jmp
inc
movsb
sbb
mov
ret
add
in
lods
and
and
int
pop
or
and
loop
popa
mov
pop
mov
insl
or
das
out
xchg
pushf
jo
push
mov
xchg
inc
xchg
jnp
mov
ja
stos
lcall
cli
mov
movsb
xchg
pop
sarl
sub
or
add
insb
inc
push
movsl
xchg
cmp
out
les
or
dec
dec
insl
mov
adc
lret
mov
add
es
inc
fsubrs
iret
dec
loop
out
fsubs
filds
or
icebp
stos
movsl
out
add
and
mov
repnz
mov
mov
popf
jg
dec
pop
lret
cltd
sub
sub
push
jae
dec
imul
sarb
test
jb
dec
and
mov
or
jg
fnsave
fwait
bound
dec
imul
aad
aas
cmpsb
or
mov
aam
stc
push
push
add
sahf
aad
add
fbld
mov
add
rcll
mov
fsubrs
filds
mov
push
testb
imul
mov
out
js
loopne
lcall
adc
dec
xchg
imul
icebp
mov
cli
out
xchg
adc
jle
ljmp
mov
ret
jle
and
stos
inc
cmp
mov
jne
adc
mov
adc
pop
pop
add
dec
ss
rcrl
or
mov
or
push
adc
aaa
stc
nop
imul
mov
ficoml
std
dec
cmpsb
cmpsl
dec
xor
jae
sub
in
outsl
mov
cltd
stos
dec
xor
out
adc
dec
loop
pop
inc
xchg
arpl
repnz
mov
push
jge
iret
inc
push
push
fistpl
inc
adc
sbb
xchg
xor
in
xchg
push
sub
mov
cmc
scas
mov
pop
notb
or
lock
in
stos
or
leave
mull
jle
push
fnstsw
jmp
add
aam
xlat
enter
sbbb
push
subl
ret
roll
cmp
je
mov
mov
push
or
iret
fxch
outsl
xor
aad
lret
es
inc
add
ret
pop
gs
push
shll
cmp
mov
std
lahf
aaa
int
in
pop
lret
and
adc
sub
nop
xchg
lret
je
std
aaa
cmpsl
cmp
inc
inc
ss
sub
loopne
mov
std
fsubrp
scas
mov
jne
popf
fdivs
int
loope
sub
and
push
cmpb
mov
iret
data16
adc
and
push
push
movsl
inc
jae
adc
iret
ss
imul
push
pop
js
hlt
test
ret
hlt
dec
xchg
sub
sahf
xor
bound
lods
popa
mov
dec
mull
push
sbb
testl
ds
push
call
add
xor
inc
fstl
pop
stc
nop
nop
push
push
ljmp
jg
clc
add
mov
in
pop
fnsave
mov
adc
jecxz
pop
aam
sbb
mov
push
jl
testl
mov
cli
xchg
adc
xor
mov
mov
jb
pop
out
mov
jp
int3
lds
mov
ss
leave
xchg
sub
xor
xchg
gs
mov
dec
ror
outsl
shr
adc
clc
ja
sbb
int
cmpb
pop
fstpl
or
es
xchg
pop
push
in
addl
xor
jne
lds
adc
add
xor
adc
xor
jp
cmp
inc
jns
in
imul
in
lret
std
popf
push
in
or
push
inc
fiadds
mov
adc
mov
pop
loop
cli
xchg
ss
nop
shlb
xor
adc
mov
in
les
jne
mov
mov
xchg
sub
lods
lcall
mov
add
or
nop
nop
push
mov
mov
or
fcomps
mov
pop
shrb
cld
push
lods
out
mov
pop
mov
pop
shrl
movsb
adc
push
push
pop
repnz
push
mov
scas
shrl
lods
push
or
repz
push
aam
mov
adc
roll
sti
xchg
sub
into
imul
inc
pop
xchg
cmp
rcrl
jae
push
out
inc
xor
ret
nop
sbb
ret
cmp
pop
out
cwtl
fdivs
pop
repz
mov
sub
xor
xor
outsb
add
shll
addr16
jmp
mov
lds
mov
or
push
ret
jp
mov
pop
repz
mulb
sti
xchg
fs
pushf
xor
xchg
push
mov
ljmp
cmp
fdivl
cmp
outsb
stos
cmpl
sbb
sbb
or
and
add
mov
inc
fidivs
fsincos
xchg
or
pushf
xor
xchg
mov
int
dec
jae
xchg
mov
adc
xchg
sub
jae
mov
xor
xchg
mov
mov
pop
hlt
inc
push
montmul
cmpsb
inc
outsl
cli
xchg
mov
lret
std
clc
push
movsl
ljmp
in
insl
fdivl
sbb
lahf
mov
sbbl
xor
mov
sbb
mov
sti
xchg
xor
add
pop
pushf
xor
cmp
fadds
outsl
push
jae
fdivl
jae
mov
adc
insb
add
sbb
lret
mov
imul
inc
pop
hlt
jb
stc
nop
add
push
xor
cltd
adc
or
shlb
pop
testb
jae
mov
mov
sbb
pop
hlt
jb
sbb
push
cmpb
push
ficomps
imul
push
imul
scas
imul
imul
pop
icebp
pop
adc
hlt
inc
imul
mov
lret
pop
hlt
sti
pushf
adc
inc
dec
pop
cmc
cmp
sub
xchg
lcall
xor
adc
je
pop
cmp
xchg
adc
int3
sbb
adc
sbb
hlt
rclb
mov
xchg
sbb
pop
hlt
les
popf
xor
adc
test
rcll
mov
inc
flds
fnstenv
aas
sbb
sbb
fcompl
hlt
daa
sbb
cli
xchg
xchg
fcompl
into
mov
in
cmpl
shlb
jge
xor
fdivl
insl
sub
pop
mov
fidivl
pop
sbb
add
mov
mov
mov
test
xchg
cmp
pop
cmc
fsts
xor
lods
cmp
fmulp
pushf
xor
clc
fdivl
add
jnp
je
fidivl
sahf
sbb
shrb
or
mov
mov
inc
pop
repz
mov
inc
xchg
sti
xchg
lds
pushf
xor
cld
fdivl
aaa
cmp
push
sbb
mov
fnstenv
fidivrs
adc
pop
repnz
sbb
imul
mov
lock
hlt
or
sub
push
dec
jb
hlt
mov
lret
cli
xchg
std
stc
gs
jmp
in
fnsave
cmp
lahf
push
addr16
nop
mov
jbe
fnstenv
add
xor
pop
push
mov
sub
jae
mov
arpl
iret
add
shrb
pop
clc
mov
pop
divb
mov
bound
hlt
sub
cwtl
push
mov
jns
stos
pop
out
fisttpl
push
jmp
repz
xchg
in
jo
mov
xorl
mov
xchg
fnstenv
repz
es
dec
pop
mov
mov
jnp
cwtl
mov
ficoms
fldl2t
or
stc
nop
insb
or
pop
jp
sahf
xor
push
cmp
add
fstpl
jne
lahf
movsb
cmp
jne
adc
rcrb
mov
mov
cli
sub
push
pop
stc
ret
ja
mulb
iret
clc
nop
add
push
popf
jno
sahf
ss
arpl
jns
jne
iret
movsl
xchg
inc
faddl
into
iret
data16
xor
sub
pop
cmp
xchg
movsl
scas
pop
icebp
pop
into
cwtl
das
add
pop
push
sub
pop
xchg
sbb
cmpsb
inc
push
popf
xor
pop
testb
fidivl
sub
pop
stos
inc
fcompl
cmpsb
cs
sub
movsl
sbbb
sub
jmp
test
rcrl
call
stos
in
sbb
push
popf
fildll
scas
lcall
inc
out
inc
fcmovnb
cmovs
aas
add
fbstp
jne
sbb
js
aad
dec
loope
std
sub
inc
test
jns
or
sarl
scas
jmp
lret
xor
inc
fcoml
aad
pop
in
lahf
ss
push
inc
fidivrl
cmp
addr16
push
insb
iret
data16
pop
ljmp
adc
call
inc
sbbb
cmc
or
and
fidivs
sbbb
push
and
nop
fdivr
paddq
outsl
daa
es
push
or
js
sub
insb
into
mov
sahf
bound
pop
out
pop
popa
testl
add
mov
pushl
lods
cmpsb
adc
jecxz
push
outsb
into
mov
leave
imul
sti
adc
cmpsb
inc
cli
push
movsl
in
jo
aas
mov
lret
aas
sti
jecxz
mov
adc
jo
adc
pusha
test
adc
mov
mov
mov
mov
insl
pop
out
popf
insb
iret
mov
xchg
push
sbb
inc
ret
fnstenv
imul
fwait
mov
lods
daa
mov
pusha
out
fidivl
push
data16
aas
imul
sbb
xlat
xchg
sub
sysexit
int3
inc
dec
rclb
push
ljmp
jno
in
cld
xchg
es
nop
daa
cmp
or
mov
int3
arpl
pop
data16
cmp
jmp
xor
or
ret
test
ret
scas
inc
adc
dec
loop
aaa
into
pushw
add
jmp
mov
fisttpll
mov
daa
cs
mov
js
inc
fidivs
arpl
add
or
sbb
jb
lahf
xor
iret
mov
cli
push
sbb
outsl
push
xor
mov
adc
unpcklps
leave
inc
sub
jb
push
ljmp
jno
ljmp
daa
cmp
pop
scas
inc
nop
jb
jmp
mov
arpl
les
testb
ss
xchg
sub
or
pushf
test
int
out
sti
inc
fsubrl
out
jmp
loopne
loop
je
or
rcll
sub
test
and
mov
mov
stc
int
sbbl
in
pushf
push
loope
cmp
inc
mov
pop
xlat
pushf
inc
fmul
push
call
add
rcrb
mov
and
and
lds
pop
repnz
xor
xchg
rol
xor
enter
xor
push
lea
mov
mov
mov
popa
clc
popa
push
inc
fadds
push
popf
mov
aam
cmp
out
xchg
popa
adc
js
mov
pop
es
sbb
cltd
das
and
iret
ja
pop
test
adc
add
clc
hlt
ret
aaa
into
mov
pop
sahf
dec
mov
lock
mov
or
aad
xor
or
mov
jmp
jbe
mov
icebp
mov
mov
xor
xchg
mov
xor
jno
lds
call
jnp
testb
sti
xchg
sub
inc
ss
sahf
push
aad
and
xchg
out
jo
fsubs
lret
adc
jns
sbb
outsb
aad
push
push
outsb
pop
cmc
pusha
xor
popa
arpl
push
mov
xchg
mov
rcrl
cmc
jp
shrl
mov
decb
out
xlat
adc
loope
mov
pusha
in
in
mov
mov
testb
and
or
jg
int
xor
pop
mov
aam
mov
fnstenv
push
cmp
js
jle
mov
int3
sbb
pusha
sbb
jle
arpl
xchg
xchg
leave
pusha
or
in
push
sbb
arpl
loope
xchg
fs
push
mov
rcrl
and
pop
arpl
pop
xchg
insl
cld
xchg
pop
mov
push
out
bound
push
popf
cmp
cmp
inc
fstp
fdivl
mul
js
add
imul
sbb
hlt
fwait
and
jns
pop
sbb
popa
clc
arpl
push
popf
mov
mov
sbb
mov
jae
jl
js
push
ret
pop
inc
enter
ja
sub
and
or
lds
dec
jecxz
lret
sti
ret
mov
push
popf
inc
and
mov
lret
sti
int
jnp
adc
jns
shlb
sbb
repz
xor
mov
mov
mov
pop
xor
pop
lock
clc
nop
pop
xor
dec
mov
sbb
imul
jne
or
fmull
cmpsl
loop
mov
shl
test
jecxz
dec
aam
and
fsts
mov
loope
stc
adc
mov
sarb
pushf
push
mov
in
insl
add
adc
add
inc
sub
out
push
pop
test
dec
jns
xchg
stos
fidivs
lds
cmp
int3
push
lahf
xlat
outsb
adc
push
inc
mov
aaa
lds
inc
insl
cmp
adc
push
dec
xchg
cmp
dec
testl
inc
pop
hlt
mov
push
lods
icebp
insb
ret
hlt
arpl
out
jo
pop
out
cmpsb
fsubrs
ds
sbb
mov
pop
sahf
mov
shlb
push
push
popf
and
insl
mov
fs
neg
testl
subb
lods
ret
repz
js
sub
cli
xchg
popf
lret
iret
loopne
or
out
lock
adc
xchg
test
pop
nop
jae
mov
lods
adc
aaa
jns
inc
push
cmpsl
ds
imul
mov
jle
add
jle
incl
pop
repz
jecxz
pop
scas
xlat
loop
pop
aad
mov
xor
fs
mov
fimuls
loopne
fnstcw
ja
and
dec
adc
sbb
push
dec
loope
xlat
adc
xlat
outsb
insl
inc
stos
inc
aaa
test
mov
push
jmp
loopne
sahf
adc
add
imul
es
xorl
mov
cmp
nop
adc
adc
addr16
insb
es
call
mov
add
sbb
xchg
adc
xchg
sub
rolb
les
leave
pusha
jmp
sbb
jle
sti
or
mov
rclb
scas
add
mov
pop
pop
add
test
shl
repz
hlt
sbb
dec
loop
xchg
aad
out
cbtw
add
push
loopne
cmp
push
push
out
xchg
stc
nop
xorb
push
and
push
jl
inc
push
pop
mov
js
shrb
mov
cwtl
pop
decb
das
mov
jg
xor
xchg
jg
aam
mov
sbb
ljmp
inc
xchg
dec
ffreep
mov
fbstp
inc
lds
dec
js
jnp
cld
xchg
movsl
xchg
montmul
cmpsb
les
test
and
adc
jp
sub
call
xchg
icebp
lock
push
and
lods
inc
out
or
xchg
lahf
ss
adc
cmp
rolb
out
adc
jg
roll
push
and
das
mov
jge
add
sbb
fbld
loope
sbb
dec
fbstp
or
jp
js
leave
push
and
loope
mov
nop
insb
add
cmp
filds
dec
out
jno
cmp
call
sbb
cmp
insl
cwtl
pusha
testl
pop
mov
push
add
sub
cmc
mov
js
xchg
stos
sbb
popf
and
fidivs
rclb
mov
stos
in
pop
ret
imul
adc
sbb
inc
imul
hlt
jecxz
call
cmp
into
gs
aad
mov
mov
sub
js
rolb
jne
stc
jae
sbb
into
xorl
sbb
and
fs
jg
mov
imul
sub
or
sahf
movsl
cmp
xor
outsb
add
mov
fcoms
cld
mov
out
and
mov
sbb
sub
fidivl
or
pop
icebp
mov
lret
lock
in
xorl
push
in
jmp
out
movsb
add
jnp
cmpsl
and
xchg
push
in
dec
mov
and
incb
pop
ss
jecxz
out
pusha
arpl
mov
leave
add
or
loopne
out
and
dec
push
fisubl
int3
adcb
fsubrs
in
loop
push
mov
mov
imul
inc
andl
mov
or
adc
stc
insb
and
mov
aam
cmp
mov
lret
mov
int
leave
mov
int
pop
mov
fbstp
lret
hlt
mov
data16
ljmp
cltd
xor
pop
movsl
cmp
push
sub
dec
mov
rcrl
out
xor
pop
sbbl
scas
mov
sub
sbb
lds
push
ljmp
jno
frstor
add
and
dec
shrl
inc
in
hlt
mov
jge
inc
ljmp
fdivr
adc
or
jle
outsb
inc
orl
mov
mov
mov
iret
aas
pop
mov
fimuls
mov
sub
pop
inc
addb
scas
mov
jno
xor
xchg
aas
adc
scas
jae
leave
xor
pop
sarb
aas
xlat
lret
pop
xor
insb
fdivp
sbb
pop
outsl
testb
mov
inc
push
sub
xchg
icebp
jmp
fwait
call
push
dec
das
sti
inc
mov
jg
cmp
les
xchg
xor
fwait
das
aam
push
je
mov
cld
add
pop
fistps
ds
sub
xchg
iret
mov
es
enter
dec
push
inc
mov
push
outsb
cmp
xor
out
jo
inc
add
cmp
xchg
pop
subb
cmpsb
nop
push
loop
lds
sbb
sub
icebp
imul
xchg
ljmp
or
add
bound
xchg
xchg
jl
fnstenv
xor
jecxz
and
xchg
ds
repz
mov
in
call
push
dec
aam
adc
out
pushf
add
jmp
ds
lret
inc
ret
aaa
shl
xor
jb
push
xor
rcrb
nop
xchg
and
negb
and
jmp
jp
aam
hlt
lahf
mov
loopne
add
adc
cmpsl
jno
mov
xchg
mov
fistpl
inc
xchg
add
mov
inc
xchg
enter
imul
out
jo
mov
jo,pt
nop
push
push
lods
cmp
xchg
arpl
ret
pop
lcall
aam
out
cmpsl
and
jl
lds
dec
in
nop
dec
jecxz
out
imul
jecxz
add
mov
push
mov
pop
sbb
leave
pusha
cld
cmp
inc
outsb
sbb
pop
shll
mov
ret
and
insl
xor
inc
fdivrl
loopne
cli
adc
aas
or
sbbl
pop
xchg
adc
aam
xor
mov
mov
and
insl
lods
popa
stos
inc
xchg
int
mov
mov
data16
cld
xchg
push
sahf
in
test
je
mov
icebp
or
clc
inc
sub
in
sbb
sbb
pop
std
or
mov
push
pop
aas
mov
xchg
mov
les
insl
inc
xchg
add
jle
sbbl
roll
scas
inc
and
mov
leave
ljmp
pop
cli
add
mov
dec
push
inc
flds
test
neg
rcrl
js
add
inc
cltd
test
addr16
cs
in
mov
dec
in
aas
rcl
xor
shll
hlt
inc
test
mov
jnp
xchg
fdiv
lea
mov
adc
pop
or
dec
scas
pop
insl
xchg
iret
shlb
mov
mov
and
test
test
cmpsb
push
xor
mov
sub
clc
test
pop
dec
jnp
pop
cltd
js
insb
xchg
cmpsb
mov
push
shlb
xchg
push
and
pop
xchg
sbb
xchg
lods
xchg
sbb
fisttps
and
mov
sub
inc
add
sarl
stc
andb
pop
scas
add
dec
scas
and
push
jbe
ljmp
jno
cli
jbe
cmpsb
cmpsl
sbb
stc
outsb
scas
inc
mov
ror
rep
push
sahf
adc
addb
pop
icebp
or
cmpsl
ds
mov
lds
inc
fnstsw
jecxz
ljmp
cltd
cmp
sbbb
pop
and
xor
ds
push
mov
hlt
xor
jnp
test
sti
xchg
sub
aad
pop
push
inc
xor
aas
enter
push
xchg
or
push
adc
sbb
pusha
sbb
stos
mov
daa
adc
xor
aad
pop
adc
jnp
lock
mov
jb
lret
sub
fistps
rcrb
cmpsl
xchg
ss
and
push
icebp
das
pop
fldt
add
pop
lcall
in
dec
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
and
iret
jne
data16
sub
lds
mov
ss
js
aaa
ds
lahf
xchg
movb
popa
jno
dec
stos
addr16
ret
sti
and
or
divb
sub
mov
push
jle
test
shlb
rcrb
add
mov
adc
fidivs
jnp
xor
shlb
mov
sub
bound
cmp
jle
in
xchg
aam
mov
sub
nop
dec
lcall
arpl
shll
call
sbb
xchg
movsw
cmp
call
or
out
adc
ja
pop
insb
add
mov
pop
in
aaa
into
sub
dec
push
in
jg
xchg
mov
fs
pop
lods
pop
scas
fisttpll
mov
test
cmp
jg
out
iret
out
or
cld
arpl
mov
jp
dec
ffree
ljmp
loop
xchg
clc
pop
push
ret
int
outsl
cmpsl
in
fldenv
cmpsl
push
loope
push
mov
push
ror
cli
and
and
clc
movsl
addl
add
jne
inc
test
xor
rcl
arpl
call
aad
dec
adc
and
push
mov
int3
push
mov
divps
enter
xchg
lret
pop
sbb
jmp
push
inc
int
or
pop
mov
cmp
aad
add
arpl
addb
push
sub
sahf
jb,pt
xchg
sbb
inc
ror
pop
shll
js
cmp
cmc
mov
xorb
negb
and
mov
sbb
lock
xchg
mov
push
or
out
pop
decl
inc
ret
les
or
lock
stc
repz
shll
push
pop
pop
icebp
movsb
cmp
inc
in
jbe
xchg
lret
inc
lcall
adc
incl
pop
nop
lret
xchg
adc
jb
test
loop
cmpsb
add
cmpl
loope
push
fcoms
pop
cmp
lret
stos
mov
daa
rorb
in
pop
arpl
arpl
pop
push
xor
addb
xor
imul
adc
cmp
imulb
jnp
push
lock
push
xchg
or
nop
jmp
int
cmp
push
imul
fldt
dec
cli
jo
test
push
call
sbb
ret
lret
repz
and
jl
push
dec
cmp
push
sub
xlat
rorl
cltd
out
cmpsl
cmpsl
vhaddps
in
cltd
imul
push
push
jmp
cmp
lods
push
stc
icebp
iret
sbb
in
adc
xchg
repz
mov
fstpt
imul
lods
enter
mov
push
pop
cld
es
sub
pop
mov
inc
mov
lahf
ds
test
jmp
push
sarl
mov
in
mov
cmpl
std
and
sbb
xchg
fistpll
push
insl
jmp
sbb
cmpsl
cmp
push
shll
push
icebp
push
lea
sbb
ret
js
jno
fwait
bound
test
xchg
mov
xchg
sbb
adc
push
and
jnp
pop
test
call
popa
mov
xchg
stos
sub
cmp
pop
cld
pop
popf
sbb
in
dec
out
sbb
pop
ja
push
cmp
ret
int3
lcall
inc
mov
lcall
negl
cmp
fwait
pusha
ret
leave
bound
cli
mov
jae
mov
xchg
inc
divl
jo
pop
sub
js
xorl
push
ret
mov
xchg
and
or
inc
cvtps2pd
mov
imul
jnp
and
cli
leave
inc
pop
in
and
loopne
mov
mov
lea
push
pushf
xchg
dec
pop
mov
cmpsl
mov
bound
xchg
mov
sub
pop
mov
xchg
iret
rcll
fsubrs
scas
sub
cmp
outsb
ljmp
lea
xor
or
cmp
xor
pop
fldl
sbb
inc
popf
or
sti
push
mov
hlt
pop
dec
or
jmp
fiaddl
pop
insb
jns
clc
xor
xor
pop
cwtl
mov
xor
rcrb
jle
jp
jl
andl
push
mov
cmpsl
cmp
test
arpl
and
inc
add
addr16
add
fsubs
not
xorl
or
cmp
jl
push
icebp
or
sub
inc
in
push
js
insl
mov
lods
lea
mov
or
lods
std
dec
or
mov
and
pusha
les
js
inc
inc
xchg
adc
pushf
jg
jns
outsl
call
shl
les
cmp
mov
sub
ja
xor
call
xor
or
pop
clc
cmpsb
ss
aam
out
push
ljmp
lret
dec
cmp
rcrl
fwait
std
push
icebp
lock
fstl
repnz
repz
lret
or
pusha
dec
pop
push
mov
sub
loope
lahf
xor
repz
es
fnstcw
cmp
jns
pop
lods
xor
inc
and
in
cli
dec
push
sub
ss
adc
inc
xor
sbb
pop
lock
shr
int3
stos
andl
mov
inc
pop
and
add
rcrb
adc
mov
dec
shl
div
sbb
mov
xchg
mov
dec
arpl
rclb
mov
pop
aaa
ja
cld
pop
jge
xchg
popa
loop
sarb
mov
mov
ja
pop
lcall
xchg
mov
sbb
xor
sti
mov
loopne
adc
pusha
test
sarb
inc
movsb
iret
ret
pop
fstl
mov
repz
xchg
mov
adc
add
rcrb
mov
and
push
mov
enter
shlb
rcrb
or
lds
lcall
clc
test
lahf
cmpsl
fidivs
arpl
xchg
addr16
pop
pop
clc
sub
xchg
imul
not
inc
pop
lock
adc
dec
jnp
stos
insb
add
sbb
das
nop
jae
jbe
outsb
push
inc
lods
inc
aaa
xchg
xor
jnp
mov
mov
cmp
jns
pop
lods
pop
pop
call
cmp
sarl
xchg
ret
lods
sti
xchg
push
xchg
jno
negl
and
lret
mov
sbb
std
mov
pusha
push
sbb
or
sub
adc
popf
mov
mov
adc
push
in
rcrl
arpl
je
gs
out
bound
jecxz
add
dec
shrl
cmpsb
cmp
enter
jp
jecxz
inc
mov
fisubs
enter
inc
gs
js
push
mov
cltd
sbbl
insl
cmp
scas
in
xchg
sub
rorl
add
inc
jb
insb
add
into
lds
and
lret
cld
cmp
mov
dec
insb
sub
rcrl
jbe
repz
testb
stc
and
out
out
popa
cmpb
push
add
jno
mov
out
xor
inc
orb
xor
popf
and
es
popa
popf
lods
ds
cmp
or
inc
mov
popa
lods
shl
mov
repz
mov
adc
inc
fsubrs
pop
cltd
xor
mov
fucomip
adc
sbb
insl
xor
xor
imul
mov
mov
fisubrs
adc
xor
sub
mov
fs
dec
in
test
add
fmul
pop
or
mov
and
out
pop
inc
test
ja
add
mov
pop
lret
mov
push
and
xlat
push
aas
add
cmpsl
xchg
and
cli
jecxz
aad
sbb
sti
adc
mov
and
mov
sbb
jmp
sub
adcb
pop
cmp
jb
gs
dec
dec
push
mov
mov
cmp
sti
loop
xor
popa
rol
lahf
dec
push
aas
call
cmp
stc
jno
in
daa
aaa
pop
or
hlt
into
push
sub
sbb
cmp
adc
repz
ds
sbb
xor
or
push
mov
ret
fsubrs
aam
loopne
pop
testl
fwait
js
sbb
mov
mov
jmp
push
pusha
jo
xchg
jno
ja
mov
and
testb
inc
cmp
sbb
bound
lods
jmp
lock
incl
sahf
xor
js
inc
push
and
sub
aam
mov
out
popa
clc
es
push
inc
jg
jns
icebp
mov
xchg
add
or
leave
nop
daa
sti
aad
stos
push
sbb
xor
pop
jo
inc
cli
sbb
or
pop
or
iret
test
jne
popf
cmp
ljmp
nop
daa
rorb
push
loope
scas
shl
adc
add
adcb
mov
or
scas
mov
popa
ljmp
xor
ja
mov
pop
mov
push
loop
inc
aam
mulb
mov
jmp
int
lret
imul
scas
jnp
push
jmp
pop
push
mov
scas
xchg
and
jl
sbb
xchg
xor
fidivs
push
scas
inc
inc
xchg
push
mov
pop
mov
and
inc
push
lea
push
dec
loope
and
xchg
mov
push
es
dec
scas
inc
jbe
cmp
jno
and
iret
pop
repnz
inc
sub
cmp
repnz
adc
ret
hlt
mov
pusha
testb
cmp
cmpb
test
shr
inc
fdivl
repnz
add
xlat
jnp
add
xor
ja
fnstenv
cwtl
mov
push
mov
pop
mov
xchg
mov
add
inc
or
ficoml
mov
jbe
lret
addr16
sub
cli
addb
decb
popa
mov
dec
fildll
lds
sti
xchg
aaa
shlb
mov
or
inc
xlat
scas
sub
in
testl
out
push
push
ljmp
popf
xor
das
inc
xlat
mov
rcll
mov
shrb
aam
loope
scas
enter
cmpsl
fdivrs
mov
insb
add
or
in
cmpl
mov
mov
movsl
cmp
xor
movsb
andl
rol
mov
test
dec
jnp
xchg
ljmp
push
cld
mov
out
repnz
sub
adc
hlt
fsubs
imul
ss
test
lods
inc
pusha
leave
or
dec
fisttpl
int3
in
cmc
das
out
daa
mov
testl
push
in
fists
call
adc
mov
shrl
cmp
sbb
mov
aam
hlt
mov
fs
pushf
outsl
inc
mov
push
xorl
dec
adc
test
testl
test
lret
mov
fucom
jnp
or
cmp
aad
sub
add
fdivs
sbb
or
test
inc
shlb
mov
cmp
pop
dec
mov
inc
cmc
lods
inc
and
mov
jne
std
cwtd
pusha
idivl
push
push
lea
in
mov
mov
pop
lods
test
pop
stc
xchg
das
inc
test
pop
repz
mov
fnop
addr16
sub
adc
imul
jae
pop
icebp
std
sbb
cwtl
dec
push
mov
push
adc
add
js
andl
fdivrl
pop
mov
adc
outsl
dec
jl
cmp
push
jmp
add
in
mull
adc
xchg
sahf
ss
mov
mov
jle
je
cmp
push
in
dec
jmp
in
cmc
insb
pop
icebp
pop
lahf
arpl
lret
jle
nop
jo
and
add
out
jg
loopne
xchg
adc
mov
sub
les
dec
pop
lock
pop
cmc
cli
pop
in
dec
xchg
call
xor
lods
subb
cmpsb
adc
xchg
sub
add
cld
dec
cmp
lods
out
sbb
into
lods
inc
rol
xor
loope
jno
cwtl
cmpsl
ds
hlt
sbbl
arpl
and
jmp
cltd
lcall
fs
loopne
push
mov
outsl
push
cmp
jl
inc
roll
adc
sti
push
rclb
imul
jnp
test
mov
pop
scas
js
and
out
in
in
xor
mov
mov
push
pop
repnz
lock
fnstenv
jns
fldcw
pop
mulb
mov
iret
leave
pusha
sbb
or
out
mov
shll
test
test
push
jmp
cmp
sbbb
sbb
fdivl
out
push
in
sbb
cmp
add
mov
orb
mov
and
arpl
mov
cmp
std
pop
pop
or
dec
hlt
sbb
and
add
incb
lock
adc
test
jbe
pop
push
sbb
jge
imul
adc
orb
sbb
jge
int
mov
sbb
mov
push
adc
or
jge
pop
sub
scas
fwait
testl
cmpsb
cs
or
dec
and
mov
push
lea
jae
mull
pop
test
icebp
add
mov
popa
push
jge
mov
aas
adcb
adc
pop
dec
rcrb
mov
std
add
shll
adc
repnz
mov
cmp
adc
pusha
shrb
xor
mov
push
ret
mov
insl
adc
add
or
call
or
in
sub
dec
pop
or
jbe
sbb
sub
fdivl
pop
lock
insl
cli
xchg
mov
push
jmp
inc
mov
mov
sbb
push
jmp
enter
sbb
jns
or
fsubrs
mov
pop
xchg
xor
dec
fwait
lds
pop
cmp
daa
mov
push
jmp
and
test
jge
hlt
mov
insl
lock
inc
and
push
cmp
cmpsl
push
aaa
insb
add
lret
and
push
ficoms
sub
icebp
aas
loop
and
je
ss
xchg
cwtl
das
pop
adc
pop
sub
ds
mov
fnsave
push
in
aas
push
mov
rcrb
mull
push
xchg
adc
sbb
ror
stos
or
sbb
jmp
aam
push
pop
jns
cmpsl
rorl
lods
aaa
loop
sub
push
notb
out
and
jp
cmp
mov
or
jnp
or
xor
push
lods
xor
cmp
std
push
je
inc
mov
test
mov
fisubs
pop
sub
orl
lret
bound
scas
testl
xor
ljmp
cltd
mov
add
push
mov
jnp
lds
pop
rorl
out
in
lds
scas
inc
push
aaa
mov
test
out
stos
cmpb
insl
add
jb
lods
inc
popa
iret
push
xor
push
inc
fistpl
mov
inc
fdivs
and
mulb
xchg
cmpsb
mov
pop
add
es
jnp
in
rcrb
rcrl
inc
mov
les
jbe
fldl
push
stos
sti
repz
int3
mov
sbb
in
mov
mov
testb
pop
out
ljmp
test
push
rcrl
imul
ret
sbb
out
cmp
rcrl
mov
outsl
fwait
mov
inc
or
dec
pop
sub
dec
mov
mov
outsl
pop
neg
pop
repnz
cmc
and
push
rolb
sub
jno
bound
xchg
add
xorl
push
sbb
cmp
xchg
sub
lods
mov
pop
fnstsw
ror
test
mov
insl
lods
insb
add
sbb
mov
jb
cmp
pusha
adcb
enter
xor
stos
mov
push
add
jmp
inc
add
mov
jl
int3
dec
pop
ret
xor
push
shrb
lds
fldcw
ret
cmp
inc
or
shrl
addr16
xor
xchg
xchg
movsb
cmp
scas
testb
push
xchg
fimuls
std
xchg
xor
push
lods
mov
fsubs
pop
repz
pusha
divl
fildl
sbb
push
dec
divb
cld
fisttps
cmpl
imul
push
lods
fsubrs
pop
push
pusha
andl
mov
cmp
icebp
in
lcall
lahf
ret
hlt
mov
or
mov
int
pop
insb
push
xchg
pop
xor
jno
push
mov
popf
andb
xor
xor
mov
mov
dec
sarl
pushf
in
outsl
adc
ss
push
inc
ss
inc
push
enter
or
sub
test
xor
mov
push
lods
or
insb
mov
pusha
pop
jns
aas
push
jb
xor
xor
fstpl
loope
push
mov
pop
adc
icebp
jmp
lret
movsb
sub
sar
jecxz
lret
call
or
inc
jl
xchg
pop
xchg
outsl
mov
push
sub
subb
arpl
lock
loopne
pushf
in
test
push
sbb
mov
dec
jae
cwtl
xchg
cmpsb
mov
ficoml
das
ljmp
xchg
cmp
and
inc
fidivl
sub
jnp
and
xorl
out
test
imul
jmp
sbb
xchg
out
pop
icebp
pop
adc
popf
sbb
sub
push
mov
dec
ficoms
pusha
pop
xchg
clc
dec
jecxz
rcll
mov
add
xchg
xor
stc
nop
aad
stos
inc
pop
testb
stos
cmc
fidivl
int
daa
mov
cmpsb
mov
sub
mov
jbe
xor
cltd
insl
hlt
mov
xor
jmp
adc
mov
call
mov
les
int3
push
popf
leave
decb
or
jg
out
cmp
fadd
pop
shrl
nop
mov
mov
mov
loopne
dec
mov
fbstp
adc
or
inc
outsb
in
mov
xchg
icebp
call
das
push
mov
sbb
push
jmp
test
pop
repnz
add
or
mov
xchg
adcb
push
in
scas
fbstp
mov
jb
pop
add
pop
je
dec
filds
lcall
sub
sahf
pushf
push
cmp
inc
add
xchg
jb
arpl
nop
xchg
sbb
and
in
das
push
sub
jg
aad
mov
xor
inc
cmc
pop
out
in
cmc
mov
enter
mov
fiadds
jno
xor
and
xchg
fisubs
mov
ljmp
mov
insl
rolb
lods
roll
int
push
mov
sbb
test
or
jnp
pop
repz
ret
pop
mov
or
sahf
pop
mov
cwtl
aaa
add
xchg
xor
pop
xchg
sub
mov
ds
jmp
out
shrb
inc
jmp
adc
nop
out
enter
xor
addr16
test
push
out
push
addr16
push
xor
mov
js
mov
movsb
push
jmp
mov
mov
gs
gs
sbb
rcl
mov
jg
jl
pop
stos
into
gs
or
sub
lcall
test
pop
mov
mov
pop
repnz
test
xor
movb
xlat
pop
or
mov
push
movsl
arpl
imul
fstpl
js
shl
out
movsb
sbb
stos
shll
mulb
jbe
sbb
jno
add
clc
and
ret
pop
icebp
test
shl
aam
push
das
icebp
mov
imul
outsl
into
js
shr
sbb
jmp
xor
sbb
and
stos
enter
shrb
out
jge
inc
jno
lds
cmp
jge
xchg
and
xchg
cs
adc
pushf
mov
or
xchg
xchg
sub
mov
test
clc
repz
or
fimuls
psubq
lods
xchg
sti
fnstenv
mov
notl
repnz
mov
rcl
push
loopne
out
xchg
add
mov
mov
loopne
xchg
and
or
incb
mov
test
mov
sbb
aaa
into
jnp
testl
push
inc
lds
mov
lds
dec
das
jg
mov
into
add
daa
lds
cld
xchg
outsb
jns
mov
cs
dec
in
dec
lahf
ss
scas
push
lods
cmc
sbb
lods
stos
cmp
xor
lret
gs
cld
cwtl
mov
mov
mov
push
jmp
stos
mov
es
mov
faddp
pop
jmp
or
ficoms
mov
fildl
mov
fnsave
ret
xchg
cmp
sub
ds
ret
sbb
iret
sub
dec
in
dec
sub
test
lret
loope
adc
sub
bound
ss
leave
pusha
ficoms
cmc
arpl
lahf
xor
int
jno
add
sub
mov
push
lods
inc
sbb
dec
orb
mov
pop
lock
pop
cmpsb
roll
sahf
xlat
mov
sbb
je
mov
mov
outsb
aam
mov
nop
rcrl
cmp
aaa
inc
out
xchg
lret
cld
mov
std
xchg
mov
aad
xchg
shrb
shlb
mov
ret
sub
jge
in
addr16
mov
xor
pop
in
mov
fnstenv
shlb
add
outsb
nop
and
xchg
jecxz
mov
stos
sahf
leave
mov
in
mov
xlat
outsb
lcall
cmp
xchg
imul
jl
cmc
mov
xchg
sub
jnp
lret
loop
ja
inc
fsubs
xor
xchg
enter
bound
sub
and
jmp
inc
popf
xor
pop
push
lods
lods
ja
fs
stc
das
lcall
inc
enter
dec
test
jbe
or
mov
pushf
mov
arpl
xchg
aad
leave
enter
mov
pop
gs
dec
pop
push
out
repnz
aaa
pop
cmc
test
xsha1
cmpsb
or
mov
jge
arpl
scas
lcall
lods
loop
sub
loop
pop
cmc
pusha
mov
mov
and
pop
icebp
fst
jle
or
and
lea
jp
or
push
movsl
push
addl
push
pop
hlt
test
and
pop
mov
lods
movsb
inc
fldenv
into
arpl
stc
jne
sub
dec
lds
insl
and
repz
inc
hlt
mov
adc
lret
hlt
mov
lahf
imul
outsb
out
jmp
jno
or
mov
fwait
xchg
pop
sahf
pop
jb
and
idiv
xchg
out
mov
push
les
mov
call
xchg
and
hlt
inc
cmp
ss
push
test
movsl
ret
ja
cmp
stos
adc
pop
scas
mov
dec
out
roll
fdivrl
pop
scas
push
mov
mov
lea
cmpb
shr
test
dec
or
mov
fimuls
lahf
loop
adc
pop
mov
cmc
mov
imul
pop
sub
dec
xchg
sub
mov
ss
scas
inc
rorl
ret
hlt
add
lret
bound
mov
mov
dec
push
out
jg
cmpsl
ds
scas
inc
mov
xchg
sub
movsb
sahf
out
xchg
pop
xchg
cs
lock
lods
mov
inc
and
push
testb
in
test
jle
sbb
xor
enter
inc
cwtl
dec
mov
pop
mov
mov
jl
addl
or
jp
addr16
dec
sarl
pop
scas
xchg
sub
jno
call
jmp
sahf
and
cmpsb
repnz
cmp
xchg
xchg
repnz
or
mov
inc
sub
sbb
cmc
shrb
mov
sub
test
pop
mov
repnz
lcall
xchg
sub
aad
push
pusha
add
sbb
pop
test
pop
shrl
xor
jnp
or
andl
popa
rclb
inc
movsl
adc
push
pop
jb
shrb
sbb
rorl
sarb
mov
es
inc
adc
inc
push
divb
jno
mov
das
popa
std
stos
pop
shrb
push
cmp
mov
aas
cmpsb
add
sbb
adc
lods
nop
daa
or
adc
aas
xor
jmp
mov
aad
pop
jae
cltd
inc
mov
test
cwtl
and
shll
mov
sbb
popf
test
add
xor
ja
pop
bound
aas
pop
sbb
arpl
inc
aaa
cmc
sbb
out
jae
hlt
sbb
shrb
daa
xor
adc
sub
push
xor
or
cmp
or
jno
stc
nop
mov
cld
pop
push
mov
aam
jmp
xor
sti
gs
inc
mov
scas
pop
push
rclb
adc
repnz
leave
sbb
add
subl
negb
aas
out
cmp
test
cmp
xchg
mov
dec
push
in
or
mov
out
mov
popa
bound
js
rorb
ds
lret
bound
mov
dec
and
pop
repz
popf
mov
test
xchg
test
add
xor
and
stos
fsubrs
ret
sbb
aam
push
cmp
adcb
imul
mov
loop
cmp
cmp
xor
rcll
jl
repz
jecxz
inc
shrl
movsl
pop
lret
scas
jno
pusha
push
popl
pop
xor
fs
addr16
or
mov
push
out
icebp
cmp
mov
mov
mov
cld
pusha
xlat
shl
int3
mov
rorl
fcompl
sbb
push
push
or
xchg
cmc
mov
add
jne
sbb
rorl
xor
xchg
data16
add
mov
lret
cmp
add
cmc
and
rcll
rclb
sbb
fisubs
and
mov
add
cmpsb
int3
inc
shr
sbb
std
xchg
das
fisttpl
in
imul
lods
adc
repz
lods
aas
mov
add
dec
arpl
imul
mov
pop
adc
xchg
jl
xchg
repnz
fidivs
pop
jae
test
and
or
push
lcall
dec
aam
xlat
aaa
scas
sbb
xor
or
filds
repz
push
movsl
sbb
cld
xchg
stos
cmp
sbbl
movsl
push
out
add
xchg
xor
outsl
movsl
mov
out
push
lret
filds
xchg
shlb
repnz
ss
push
or
sarb
add
mov
cmp
and
in
or
jae
movsl
add
ret
adc
in
test
rcrb
imul
insb
inc
mov
jne
jne
decl
dec
inc
rorb
push
pop
or
pop
or
mov
sub
adc
cld
mov
lret
iret
stos
fsubs
arpl
sbb
mov
add
insb
dec
sub
push
xchg
fxch
pusha
imul
inc
int3
mov
xchg
stc
insb
ljmp
jns
scas
negl
add
outsl
jno
jmp
jnp
jmp
jp
out
lret
push
pop
sub
fists
cli
xchg
inc
add
shrb
jbe
mov
xor
daa
add
aam
push
push
ret
fwait
sub
mov
mov
inc
or
xor
gs
push
leave
arpl
fidivrl
inc
int3
jae
lods
push
push
mov
iret
fcomi
adc
jmp
jno
xchg
add
fwait
sar
call
mov
test
mov
add
xor
fwait
jl
stc
sub
stos
sbbl
xor
mov
add
addr16
ljmp
fdivs
sbb
popf
scas
je
mov
xchg
jge
fbstp
push
push
icebp
mov
and
stos
nop
cli
insb
xor
pop
add
cmp
xor
addl
bound
pop
lock
adcl
outsl
addr16
cltd
nop
mov
jl
push
call
je
sti
xchg
ret
xchg
push
or
aam
aam
sbb
cld
jmp
lock
imul
jl
mov
sarl
adc
sahf
cmp
xchg
or
shl
ss
scas
sbb
mov
outsl
add
adcb
sbb
out
or
sub
xorl
popf
inc
dec
mov
enter
aaa
int
cld
in
inc
xchg
test
add
jne
mov
adc
mov
jo
cmpsb
bound
push
adc
add
ror
mov
push
into
popf
popf
ret
dec
xor
repnz
mov
mov
or
xchg
out
out
cmc
pop
adc
lds
pop
jecxz
xchg
popa
clc
enter
add
sbb
sub
dec
or
cmp
mov
mov
jne
adc
out
andl
sbb
scas
enter
cwtl
jmp
jo
fstpt
clc
mov
imul
push
arpl
adc
pop
lock
or
pop
mov
cld
cmp
into
mov
jne
loopne
sub
movl
pop
and
adc
xchg
xchg
lret
test
lods
test
xchg
cs
sub
insl
fsub
test
imul
call
mov
repnz
sub
adc
aas
sbb
pop
push
lods
xchg
lret
ds
test
fnclex
push
ltr
push
loope
sti
pop
and
pusha
dec
jae
xchg
cmp
mov
sahf
push
jmp
push
cmp
sbbl
out
mov
pop
inc
jmp
mov
inc
mov
orb
loope,pt
sub
sti
pop
aaa
inc
iret
pop
inc
push
int3
jle
pop
mov
pop
push
push
jae
mov
dec
popf
dec
cwtl
addr16
repz
cld
xchg
add
jp
pusha
aad
lcall
mov
test
das
sub
xor
aaa
sbb
bound
out
inc
xlat
pop
lds
cli
xor
push
add
sbb
int3
nop
push
and
mull
and
divl
pusha
add
xor
lods
sub
mov
xor
imul
mov
dec
pop
and
out
push
push
push
and
sub
or
and
pop
or
xor
xor
sbb
sub
inc
jp
mov
gs
jp
push
int
mov
nop
out
mov
shl
add
daa
lret
out
sarl
push
stos
into
mov
or
mov
sbb
fsubrs
jno
jbe
and
inc
lea
xchg
data16
int3
push
insb
add
push
sbb
cltd
jns
sub
ja
mov
mov
test
push
add
mov
xchg
rorb
push
test
xchg
in
pushf
mov
pop
repnz
das
xchg
cs
int
dec
mov
or
xor
xchg
bound
ljmp
jne
idivl
xchg
jl
jg
ljmp
add
repz
mov
shrl
rcl
outsb
imul
mov
sbb
push
out
and
xor
xor
inc
loopne
lahf
insl
add
addr16
pop
push
movsl
or
cmp
adc
test
decb
xchg
lock
add
or
test
jp
rcrb
insb
push
mov
push
fiadds
mov
and
cld
dec
jge
leave
dec
cmp
jns
addr16
popa
jg
sbb
aas
add
xor
mov
gs
shrb
stos
mov
xor
sub
cmp
sub
mov
inc
dec
adc
fcomp
popa
and
or
daa
adc
xchg
test
jp
cmpsb
lcall
movsb
mov
insl
add
push
and
mov
cmp
xor
fiadds
inc
arpl
push
outsl
pop
sbb
jb
pusha
sub
fstl
pushw
xor
in
push
popf
mov
cmc
mov
mov
fldcw
ret
repz
sbb
daa
mov
pop
add
cmp
movsb
and
cmp
bound
sbb
adc
and
lret
scas
sbb
insl
jae
fcompl
scas
les
jge
mov
xchg
aaa
mov
out
xor
shlb
xchg
xchg
roll
out
pop
stos
ficomps
xchg
jb
mov
gs
fistl
mov
cmc
fmuls
jns
jecxz
enter
sub
pushw
mov
roll
mov
xchg
imul
xor
cmp
js
movsl
adc
push
pop
imul
inc
scas
fsub
xor
loop
pop
or
mov
push
mov
jno
aas
xchg
inc
push
mov
jecxz
scas
sbb
cmp
fstps
inc
scas
inc
cmp
push
rcrl
sub
fs
aam
add
mov
ja
sub
lds
loop
test
add
and
xor
stc
jne
orb
lea
mov
adc
bts
xor
xor
adc
inc
aam
and
dec
sbb
push
mov
jne
js
add
jae
fbld
mov
mov
ffree
dec
adc
rclb
mov
mov
mov
imul
fsubrs
jb
sub
rcrl
lock
out
icebp
jl
stos
xor
xchg
incb
sub
fstpt
mov
pop
and
or
lahf
pop
dec
sti
cmpsl
xchg
mov
mov
add
out
sub
cmpsl
sti
xchg
fnstcw
shrl
scas
inc
mov
and
mov
lahf
pop
shr
pop
adc
xchg
ljmp
sub
push
dec
gs
mov
cli
data16
stos
cs
bound
push
add
push
std
pop
cltd
roll
int
mov
adc
aas
mov
inc
lds
ljmp
aas
pop
iret
xchg
cwtl
es
adcl
add
test
mov
inc
cmpsb
inc
mov
push
gs
pop
scas
jae
xchg
or
popf
orb
outsl
cmpsb
cmpsb
aaa
or
or
test
scas
stos
rcrb
mov
pusha
jmp
in
insb
insb
test
ja
lods
cltd
dec
cld
inc
scas
push
test
inc
mov
test
adc
pop
cli
scas
mov
pop
bound
and
in
lods
movsl
test
outsl
lods
inc
mov
test
das
or
jge
pop
jo
xchg
repz
cmp
push
push
test
xchg
in
xor
cltd
loop
mov
and
xchg
cmpsl
adc
stos
lcall
jp
pop
push
pusha
imul
or
dec
sbb
push
rcrl
das
sarb
dec
xchg
mov
in
cmp
sbb
and
mov
scas
push
scas
push
lcall
adc
je
or
lds
bound
mov
cmp
ljmp
jno
in
pop
add
push
jae
mov
jbe
pop
int3
inc
and
rcll
or
scas
rcrb
and
or
xlat
pop
pop
pop
fcomps
lods
fs
subl
aaa
lds
fstpl
mov
popa
jl
loopne
dec
push
push
out
cmp
dec
xchg
mov
scas
out
jecxz
sar
imul
cli
push
mov
movsb
pusha
and
test
dec
js
sbbb
ret
pop
mov
insl
mov
dec
mov
idivb
cmpsl
insb
add
add
leave
and
xor
repnz
pop
inc
pop
es
nop
outsb
and
sahf
dec
loopne
mov
loopne
lret
sbb
jmp
pop
jecxz
iret
fistps
ss
push
popa
lods
push
dec
mov
sti
shrb
cmp
ljmp
loopne
shlb
in
cmpsb
and
ret
test
aad
orb
or
add
pop
je
inc
pop
out
xor
pop
sub
adc
int3
xchg
ljmp
enter
les
mov
jg
int
outsb
jge
mov
dec
sub
or
pop
push
insb
sbb
jns
add
xlat
js
cmp
aas
lods
pusha
sbbl
or
nop
mov
pop
xlat
add
std
inc
fidivs
out
adc
pop
shr
sbb
out
and
adc
sub
adc
popf
inc
xor
xchg
lods
inc
shrb
push
sub
ja
pop
or
dec
cmpsb
jb
dec
sbb
inc
dec
outsb
hlt
cmp
ret
lds
sbb
stos
out
dec
daa
cmp
subb
pop
dec
pop
outsl
or
and
cld
ds
or
sub
rolb
sti
inc
mov
fimuls
lods
inc
lock
dec
iret
inc
test
sub
pop
mov
jge
outsl
lods
mov
dec
xchg
imul
bound
jbe
pop
out
adcb
adc
sub
mov
in
cmp
pop
scas
enter
stc
stos
pop
scas
in
faddl
push
out
scas
das
leave
inc
dec
inc
int3
scas
in
fdivs
sub
xchg
jge
xchg
loop
fsubs
call
xchg
xlat
sub
and
cld
mov
xlat
push
push
mov
ss
ficoms
nop
daa
out
gs
aad
jl
loopne
call
notl
sti
daa
cmp
xor
pop
or
aaa
into
repz
lret
es
inc
pop
in
pop
push
leave
xor
cli
push
icebp
xchg
orl
sbb
mov
xchg
jne
fisubl
stos
mov
imul
sub
hlt
jnp
push
lods
fsubrl
int
xlat
fdivl
pop
push
adc
scas
ret
test
aam
mov
test
shlb
daa
pop
pop
out
dec
inc
cli
xchg
dec
ljmp
js
push
ficoms
cmpsb
add
lcall
jne
aaa
imul
xor
push
outsb
mov
iret
push
cwtl
addr16
out
fsubrp
pushf
rclb
pop
mov
fcomi
xchg
in
push
cmpsb
cs
cmpsl
jge
test
hlt
jle
inc
outsl
fildl
out
dec
pushf
xor
outsb
jge
std
scas
repnz
je
inc
push
mov
cli
pushf
jns
daa
je
movsb
in
cwtl
ficoms
ja
mov
cmp
xor
adc
xor
mov
push
enter
aad
cmpsl
sub
jno
push
call
jns
dec
jg
or
jne
mov
imul
sarl
inc
popa
rcr
out
jbe
xchg
iret
shll
push
push
dec
test
data16
repz
adc
loopne
insl
shlb
add
ret
movsb
popa
into
hlt
enter
paddsw
pop
sbb
cmp
and
rcl
xor
and
shlb
and
mov
sub
cltd
popa
xor
cmc
imul
add
dec
inc
ljmp
mov
movsl
inc
xchg
xor
pop
adc
mov
xchg
shrl
xchg
xor
xchg
dec
inc
cmp
push
jmp
fadds
cs
loopne
ficompl
js
pusha
fnstenv
std
jmp
js
pop
push
ret
fiadds
push
jle
push
add
push
popf
mov
push
inc
jne
jb
imul
in
pop
push
cwtl
test
ja
mov
std
lcall
xor
pop
in
mov
inc
pop
pop
add
shl
sbb
adc
lods
adc
jo
daa
loopne
or
pop
jo
xchg
shl
mov
mov
test
int
cmp
hlt
push
shll
int3
stos
fmull
stos
aad
ret
test
mov
mov
mov
and
cmpsl
add
xchg
hlt
rcll
pop
cmp
cmp
ret
gs
cmp
ret
loopne
and
pop
testl
cmpl
scas
cmpsl
jne
fnop
inc
xchg
lods
xchg
xor
data16
xchg
pop
out
adc
out
add
mov
jmp
add
ret
cltd
dec
mov
or
cli
push
pushf
shlb
inc
out
fidivrl
adc
aad
add
imul
stos
jl
sub
fisubs
or
stos
inc
lcall
sbb
lds
lahf
mov
pushf
pop
sahf
xchg
pop
shll
mov
add
repnz
out
xlat
cmp
rolb
inc
xchg
ret
out
lods
rolb
dec
cmpsl
ss
push
sub
sub
fs
xor
pop
sbb
and
xor
cli
sbb
mov
cld
int3
pop
cmpsl
lret
int3
xor
std
in
push
xor
xor
push
xor
mov
cli
fdivrs
mov
mov
push
cmp
mov
ds
mov
aaa
cs
adc
jne
sbb
stos
inc
repz
dec
rcrl
int3
sub
xchg
stos
enter
add
jae
adc
sub
fnstcw
cmp
dec
mov
mov
mov
cli
hlt
dec
into
test
lds
push
lahf
fwait
lds
fsts
shlb
pop
repnz
pop
pop
sub
pop
cmp
push
mov
fmull
mov
cld
dec
mov
jno
push
jmp
dec
dec
sbb
jnp
jecxz
aad
sub
inc
sub
inc
sbb
sub
mov
stos
push
out
mov
cmpb
shlb
and
jae
mulb
mov
out
inc
push
xchg
out
mov
pop
lea
stc
loope
push
mov
dec
mov
ret
cs
or
add
or
pop
movsb
jbe
mov
xor
loop
ds
fistpll
adc
jno
je
std
xchg
lea
sbbl
popa
aam
lcall
arpl
in
pop
push
stos
inc
rorb
in
js
popf
jb
pop
xor
pusha
in
movsl
arpl
and
roll
in
add
out
mov
and
repz
in
xchg
sub
inc
das
xor
add
movd
repnz
xchg
sub
shl
dec
adc
xchg
cs
shrb
xor
lock
fmull
movsl
or
das
sub
pusha
das
pusha
orl
test
ret
hlt
pop
dec
jecxz
adc
or
pop
insl
icebp
xchg
pop
sub
or
cmp
loope
xlat
scas
xchg
jno
icebp
adc
xchg
sbb
xor
arpl
ljmp
mov
jae
push
hlt
push
xchg
loope
repnz
ljmp
sbb
pop
lahf
arpl
data16
aad
xor
jmp
push
dec
fcmovb
fistl
sub
nop
xor
je
int3
gs
lahf
or
jne
mov
cmp
pop
cmpsb
test
popa
jns
cmp
rcll
jo
lahf
data16
inc
loop
mov
lock
cli
mov
loopne
inc
mov
adc
jp
xor
inc
xorl
outsl
test
xchg
jns
outsb
imul
jmp
cltd
or
mov
dec
push
rcl
push
stc
mov
cli
cmc
daa
xor
and
ja
mov
cmp
push
xor
popa
mov
dec
movb
mulb
divb
cmp
xchg
aas
clc
inc
jbe
lret
cmpsl
jecxz
mov
adc
push
mov
dec
cmpsb
inc
sbb
jns
dec
pop
xor
fwait
jae
pop
pushf
or
stc
and
imul
pop
push
mov
or
xor
xchg
cmpsl
inc
movsb
push
sbb
dec
into
mov
cmp
mov
and
scas
std
pop
outsb
and
push
fsubs
mov
cld
mov
jae
dec
int
repnz
cmc
inc
clc
dec
cmp
or
adc
mov
leave
fistl
add
dec
jbe
xor
js
inc
xchg
sbb
xor
jo
pop
push
repz
push
repnz
push
mov
ss
mov
pop
and
call
or
ljmp
lea
lahf
pop
add
inc
cwtl
ret
in
les
fs
movsb
mov
into
push
mov
and
mov
adc
xchg
outsl
cld
dec
call
lret
test
iret
sub
cs
ret
mov
pop
lock
and
and
js
popa
adc
inc
shll
pushf
scas
das
push
push
cltd
push
dec
outsl
mov
push
mov
aam
pop
push
stos
sbb
and
out
fsts
clc
sub
dec
push
mov
dec
rcrb
stc
mov
jmp
cmp
cs
sbb
adc
pop
cmc
in
mov
adc
filds
lahf
xchg
jle
dec
mov
and
sahf
mov
fsubl
test
pop
mov
add
jg
mov
push
cmp
lret
mov
mov
imulb
jns
cmpsl
outsb
test
test
jmp
jmp
inc
ret
pop
or
mov
sub
jp
movb
add
xchg
scas
inc
add
xchg
jb
rorl
outsb
add
jg
push
int3
pushf
je
jmp
xchg
int
jno
jo
inc
fs
jno
push
push
inc
mov
jecxz
arpl
lahf
out
dec
or
cmp
sbb
jl
movsl
mov
lds
xlat
mov
call
and
cmc
fimull
pop
hlt
ss
mov
pop
jge
and
add
cmp
dec
daa
int
into
inc
xor
pop
pop
jmp
cmp
sbb
negb
add
inc
fsubl
inc
test
add
push
nop
fs
js
mov
mov
mov
sbb
sarb
nop
mov
push
inc
xchg
out
ljmp
ret
pop
popf
rolb
pop
loopne
repz
pop
xchg
inc
pop
inc
jge
shlb
jp
repz
pusha
jge
mov
jg
inc
cmpsl
mov
mov
push
lret
jae
fdivp
ljmp
pop
loopne
mov
push
mov
push
lds
adc
cmp
mov
lea
push
dec
scas
cltd
add
cs
xlat
in
enter
xchg
popa
rorl
mov
jle
shrl
mov
cs
stos
cli
lcall
xchg
mov
ljmp
lock
dec
sbb
lods
ret
cmpsb
dec
and
fnsave
shlb
push
jmp
or
or
cltd
mov
outsb
add
push
jmp
cmp
and
pop
leave
pusha
mov
xchg
insb
stos
add
adc
xchg
and
iret
fs
push
lret
icebp
dec
jb
cmp
cli
jnp
mov
mov
or
scas
inc
pop
xchg
mov
loope
jmp
aad
push
and
sbb
pop
adc
jnp
insb
in
mov
hlt
aam
or
ss
adc
cmp
cli
mull
fcmove
add
loop
lods
mov
popl
sbb
push
out
cmp
sub
cmp
cld
mov
cld
or
cmp
out
xor
inc
fs
inc
inc
pushf
inc
scas
inc
jne
loopne
xor
dec
pop
push
push
lahf
mov
rcl
fsts
fldcw
cmpsb
into
fdivrs
push
ret
mov
es
loopne
clc
and
icebp
stos
test
shrl
pop
cmpl
mov
mov
int3
pop
out
imul
jl
jno
cltd
sbb
sti
or
dec
loope
es
add
ljmp
and
std
xchg
and
je
leave
sbb
sti
push
std
xchg
pusha
xchg
xor
popf
sbbl
or
fsubs
or
inc
pop
addr16
out
and
cmp
pop
inc
arpl
insl
add
das
lret
stos
sbb
push
xor
popa
int3
shl
icebp
sub
negb
sti
add
push
subb
aas
jge
cwtl
dec
mov
adc
out
and
test
sbb
push
mov
push
loop
iret
xchg
adc
fiaddl
pusha
lock
bound
movsb
mov
cmp
and
pop
pushf
stos
xchg
lods
mov
cmp
xchg
add
jp
cltd
data16
sti
shl
mov
push
call
xlat
outsb
sbb
lods
mov
dec
adc
jge
sbb
jp
mov
push
push
lods
popl
subl
push
cmp
jg
shrl
sub
mov
xchg
mov
push
sub
into
or
movsb
and
and
cmp
push
mov
mov
adc
int3
fcomip
sbb
test
mov
aam
add
mov
lahf
mov
mov
fcompl
jg
dec
lea
inc
dec
shlb
lods
xchg
icebp
ret
lcall
jne
jb
inc
int3
xchg
cmpl
aam
aad
dec
cmc
fdivrs
push
test
jnp
xor
push
add
out
or
sarl
loop
sub
mov
orl
and
push
pop
push
pop
shlb
xlat
fsubl
imul
push
sbb
mov
pop
adc
mov
in
enter
xor
add
sahf
cmp
jns
mov
jne
loop
adc
mov
add
fidivl
repnz
sbb
sub
jecxz
movsb
fdivrl
cwtl
sub
insl
mov
pop
sbb
dec
mov
dec
sub
das
push
cld
mull
mov
stc
outsb
bound
lods
lock
js
add
xchg
loope
les
out
sahf
imul
mov
gs
mov
jbe
ja
sbb
cltd
cmpsl
xor
sbb
es
cli
xchg
sub
inc
mov
cli
or
cmp
mov
mov
insb
push
xchg
loopne
sti
inc
mov
dec
add
and
cli
daa
xor
les
xchg
jmp
hlt
adc
outsb
in
lcall
pop
test
in
adc
fcmovnbe
inc
lcall
push
inc
add
inc
imul
out
sub
pop
sub
frstor
cmpsl
and
cli
sbb
les
fwait
sbb
mov
or
mov
sbb
icebp
add
daa
hlt
xchg
in
or
lret
push
mov
inc
inc
fwait
xor
inc
inc
into
and
stos
into
and
inc
push
mov
xchg
fidivl
out
ret
cwtl
jg
sbbl
cmpsb
dec
push
xor
faddp
leave
pop
xor
cli
adc
add
mov
filds
xchg
push
xlat
inc
shll
les
xor
push
popf
jno
pop
int3
push
fwait
sbb
adc
or
and
rcl
out
dec
pop
pop
add
ja
cmp
pop
lcall
add
jl
stos
sbb
js
xor
push
inc
test
jne
adc
push
mov
fistpll
push
adc
mov
jge
in
aas
push
mov
or
std
ret
leave
iret
data16
pop
or
jns
fwait
and
push
in
mov
xor
je
dec
cmp
fildl
sub
mov
jnp
xchg
sub
and
jnp
ret
pushf
xor
sub
dec
push
ljmp
pushf
xor
loopne
lret
mov
push
movsl
daa
ds
jbe
sbbl
mov
aas
add
xor
sub
aas
cmp
mov
test
jmp
sub
cmp
in
mov
pop
push
push
out
mov
inc
sub
jne
mov
pop
cld
adc
dec
loopne
daa
cmp
fidivl
push
or
fnstenv
test
notl
mov
push
push
xchg
aas
fstl
fmuls
and
sub
push
negb
mov
jne
popa
xor
call
push
push
jb
push
jne
call
fmull
out
xor
lods
add
mov
pop
xchg
outsb
jl
mov
mov
pop
xchg
cmp
insb
arpl
add
dec
shrl
and
dec
pop
div
sub
jo
stos
leave
enter
in
pop
lock
fcom
dec
push
js
sub
out
dec
dec
enter
push
jo
mov
test
add
adc
xchg
test
jnp
js
adc
sbb
xor
push
out
cmpsl
outsl
mov
divl
or
lock
fwait
and
adc
fistpl
fldcw
lret
xlat
push
push
out
imul
jne
arpl
in
ljmp
dec
or
jge
in
outsb
sub
testb
sahf
into
rclb
mov
xchg
sub
test
mov
xor
push
in
xorl
mov
fistps
mov
push
xchg
sub
in
xor
rcl
and
in
inc
and
mov
jb
movsl
decl
sahf
orl
xor
and
pop
push
test
mov
imul
pusha
imul
adc
xchg
outsb
pop
push
cli
jne
mov
call
movsb
fld
pop
popf
lret
sahf
pop
sub
aas
jl
scas
pop
mov
repz
mov
out
inc
js
movsb
clc
orl
inc
shr
pop
fwait
orl
and
shlb
add
xchg
hlt
cs
inc
sbb
pop
scas
js
out
dec
lret
and
mov
and
adc
mov
aam
inc
fcomip
jle
fsubrp
fisubrl
dec
pop
scas
jmp
imul
repnz
es
jne
popa
js
xchg
outsl
mov
sbb
cmp
popf
icebp
repnz
movsl
popf
jmp
icebp
repz
ss
adc
stc
or
ret
mov
cli
mov
stos
add
xchg
mov
push
sbb
sub
mov
sub
cmp
cmp
inc
or
adc
bound
xor
inc
cmova
sbb
dec
popa
fs
jnp
cmp
xor
push
cmp
inc
call
call
push
mov
xor
pop
sbb
inc
jns
leave
ret
jne
pop
mov
mov
xchg
push
enter
sbb
and
jb
hlt
sbb
sti
stos
xchg
cli
das
sub
xor
or
idivb
dec
xchg
arpl
hlt
les
xlat
sbb
mov
dec
aas
add
mov
dec
jecxz
ss
jge
push
push
pop
and
not
fdivrs
jb
leave
pop
cmpsl
scas
mov
cmp
inc
clc
scas
test
inc
or
stc
mov
jl
mov
clc
push
ret
sbb
imul
data16
aam
fnstsw
xor
adc
inc
xchg
test
stos
in
test
xchg
stos
imul
lock
les
stos
icebp
pop
movsb
shrl
fstps
pusha
jp
xor
in
in
mov
push
imul
mov
mov
out
lods
push
ss
inc
dec
loope
cwtl
gs
outsl
popf
and
iret
nop
scas
inc
ret
xchg
dec
push
and
aam
cli
dec
fwait
mov
adc
out
xor
out
adc
cwtl
inc
sahf
outsl
cwtl
cmc
mov
movsl
cmp
mov
scas
push
fwait
scas
or
sbb
nop
scas
cmpsl
adc
xor
inc
xchg
lret
xor
fcmove
xchg
aam
xor
daa
lret
mov
out
shr
out
jns
and
stos
sti
loopw
test
ss
xor
popa
dec
push
ja
fcomps
je
cli
sbb
inc
lret
mov
imul
sub
cmp
pop
stos
or
mov
ret
jmp
and
xor
push
out
dec
into
gs
ret
pop
dec
movsb
mov
hlt
adc
inc
jg
mov
ss
jmp
fistpll
fmuls
add
jle
leave
sub
lret
mov
and
aad
sub
shlb
test
out
xchg
sub
push
subb
repz
outsl
aad
inc
scas
fldl
js
xchg
outsb
and
mov
cmpsb
mov
sbbb
xchg
dec
mov
rorl
push
pop
adc
fs
jns
clc
fistpll
pushf
sbb
cmp
xor
in
sbb
cmp
popa
das
push
movsb
dec
iret
inc
es
lea
inc
lret
sub
out
shlb
push
in
lret
rclb
notb
pop
repnz
cmp
jb
jb
sbbb
roll
notl
ja
mov
mov
cmp
add
rcr
jo
jge
not
daa
lods
mov
mov
std
sub
jl
push
sub
stos
mov
sub
dec
in
cmp
fs
pop
scas
mov
fnsave
into
mov
outsl
ret
push
cs
xlat
insl
add
xchg
sub
aaa
sahf
mov
lret
adc
jo
cli
out
inc
test
stos
in
sbb
dec
cmp
jns
icebp
stos
lods
mov
push
sub
movsl
dec
mov
test
adc
cmpsl
rorb
popa
negl
mov
or
mov
adc
vmwrite
jbe
clc
sahf
rcl
iret
sbb
stos
xchg
xchg
or
push
jne
jno
cmp
adc
outsb
add
sbb
test
pop
mov
sarb
cmp
cmpsb
cmp
sub
xchg
hlt
mov
push
pop
dec
push
loope
push
xchg
rcrl
xchg
xor
xchg
xor
leave
mov
ds
test
fsubrs
aaa
mov
cli
sbb
or
adc
ret
movsl
pop
mov
push
jge
sbb
push
mul
pop
in
cmp
lds
cwtl
pop
lahf
subl
or
xor
and
xchg
ljmp
sub
arpl
clc
pusha
imull
popf
into
icebp
dec
sarl
jo
or
fstps
sub
pop
cmc
and
and
mov
into
push
je
das
lds
ja
popa
orl
int
orb
lret
pop
pusha
stos
inc
and
leave
xor
and
jb
inc
int3
loopne
jmp
mov
bound
frstor
out
sub
push
adc
jne
outsb
xor
jae
pop
or
push
cmpsb
out
stc
mov
cs
lret
mov
push
cli
add
xor
ret
inc
push
mov
dec
jmp
jmp
clc
out
enter
push
shlb
or
mov
push
rcrb
fwait
add
inc
mov
jle
dec
jp
jle
pop
insb
int3
jnp
call
aam
outsl
daa
lock
movsl
in
sbb
insb
dec
inc
pop
jmp
add
repnz
cmc
pop
mov
sub
push
arpl
lods
xchg
mov
outsb
inc
push
ss
call
adc
add
ret
popf
cmp
test
rcr
mov
pop
mov
fistpll
adc
mov
or
lock
xor
add
and
sub
bound
mov
fstpt
popa
pusha
insb
adc
int
out
mov
and
push
dec
call
int3
mov
inc
iret
sub
or
int
outsl
jns
cwtl
pop
xchg
imul
pop
outsl
orl
pushf
push
sbb
push
fidivl
insb
fwait
xor
xchg
cmp
push
int3
xor
lret
sbb
testb
push
icebp
in
fldl
femms
js
mov
fcompl
cmp
mov
movsb
xor
call
rorl
cmc
pop
sahf
es
and
les
repnz
adc
push
repz
fists
mov
jno
push
daa
rcrb
inc
jl
test
in
dec
enter
nop
daa
daa
jnp
jmp
dec
scas
in
call
lods
jmp
and
xchg
cmp
push
pop
pop
out
mov
fidivl
or
fsub
lret
sub
cmpsl
mov
dec
lds
add
add
pop
lahf
dec
and
pop
sbb
daa
clc
pop
mov
sub
decb
and
xchg
mov
xchg
jbe
or
rcl
loop
cmp
cmp
rcrl
popa
and
leave
jnp
mov
cld
adc
inc
sbb
push
out
in
andl
xor
addr16
std
jge
test
pop
cmc
test
sub
iret
out
imul
push
mov
adcb
jg
sub
and
adc
sbb
and
je
xchg
xchg
cmp
or
push
ret
hlt
sbb
xor
lock
mov
sbb
adcb
or
and
es
mov
sub
add
movsb
pop
pop
mov
jg
and
push
add
ficoml
imul
jb
mov
add
or
fbld
cmp
add
fstpl
shlb
jno
stc
sbb
push
js
inc
out
mov
pop
loop
outsb
loope
inc
in
js
clc
in
and
out
popa
sbbb
stos
dec
mov
lret
stos
outsb
loope
ret
in
lds
mov
push
add
adc
jae
cmpsl
ret
lock
jo
fistps
inc
mov
push
in
lcall
push
enter
pushf
jmp
je
mov
bound
sbb
outsb
sbb
inc
cmp
push
lods
out
repz
xchg
pop
inc
mov
push
icebp
iret
int3
stos
jne
fildll
cwtl
iret
mov
in
mov
lods
test
ret
pop
rcr
cmp
add
pusha
cmpb
sub
aas
or
jae
fisttpll
jge
lahf
fs
daa
bound
mov
jbe
xchg
xor
mov
jbe
xchg
or
inc
mov
cwtl
mov
arpl
mov
sbb
leave
pop
jl
pop
sarb
out
dec
mov
xor
jo
out
sarl
test
xor
jmp
xchg
pop
jne
imull
inc
sbb
xchg
xchg
add
cmp
out
jmp
int
jb
movsl
sub
int
jne
or
pop
sbb
inc
mov
es
xor
rcrb
sub
cmpsb
push
add
mov
dec
jg
lahf
xor
stos
sarb
mov
dec
jle
mov
jno
jle
orl
pop
pop
pop
cld
test
mov
mov
fiaddl
mov
dec
shlb
add
hlt
lods
pop
es
mov
cs
push
xchg
xchg
push
adc
lcall
dec
movsb
loope
mov
jmp
inc
xor
and
pop
mov
into
sub
repnz
xchg
adc
aam
es
mov
cmp
mov
rorl
in
xchg
push
add
mov
loopne
call
hlt
addr16
xchg
fsubl
dec
in
sbb
pusha
mov
jp
out
daa
dec
jg
cmp
movsb
gs
jne
gs
scas
mov
loopne
mov
das
mov
xlat
sub
pop
adc
adc
les
and
out
fucomip
cmp
xor
push
imul
pop
mov
cmpsb
sub
mov
test
mov
add
pop
aad
popl
jnp
mov
or
jp
imulb
or
push
pop
movsb
filds
mov
enter
lcall
cmpb
in
and
add
cmc
sbb
inc
stos
js
or
jo
lea
mov
or
and
mov
push
clc
push
cmpsl
lock
pop
icebp
jne
push
push
shl
jmp
test
jle
mov
in
cltd
rcrl
jle
mov
adc
jns
mov
rclb
cmp
jb
jbe
push
jae
pop
popf
inc
test
sbb
mov
cltd
dec
cwtl
cli
inc
out
and
fldt
inc
mov
push
or
xor
sahf
xor
rcrb
sahf
pop
xor
addb
xor
mov
pop
shrb
sbb
jecxz
dec
shrb
in
adc
xor
push
xor
je
int
adc
inc
jg
aas
mov
adc
jne
into
stos
mov
shll
cmp
xchg
ret
in
sub
outsl
stc
lahf
arpl
loopne
xor
addr16
jbe
popf
cmpsl
sub
test
das
jp
xchg
xchg
mov
sbb
aaa
frstor
lret
out
mov
xchg
mov
mulb
fnstcw
and
push
lcall
mov
aad
shl
inc
in
dec
test
jle
aas
mov
pop
inc
or
testb
jge
out
daa
mov
push
jmp
mov
jo
add
orl
push
jbe
dec
cs
lods
jbe
inc
test
loop
push
cmp
jp
sub
bound
test
imul
js
das
outsl
div
mov
filds
add
xor
xchg
adc
xor
inc
pop
ficoms
jb
xor
add
jle
out
dec
sbb
pushf
scas
shrb
sub
jmp
mov
inc
bound
stos
in
push
jno
mov
mov
pop
inc
subb
lods
and
test
dec
mov
xor
sbb
add
hlt
dec
aad
jno
int3
jns
mov
pop
cmpb
cmpsb
aad
cmp
adc
out
sub
inc
mov
xor
das
rol
mov
jp
jg
pop
fwait
push
sub
movsl
push
ja
xor
add
mov
sub
mov
sbb
ficompl
adc
push
lods
int
mov
or
xchg
mov
mov
cmp
ss
fdivrs
jmp
push
fcmove
push
pop
jbe
leave
adcl
and
push
scas
mov
cltd
cs
fisubl
dec
jne
cmp
xchg
push
movsl
ret
loop
fildll
daa
arpl
stos
push
mov
sbb
sti
add
lods
adcb
mov
add
insl
add
sbb
pop
aad
and
and
xor
shll
ret
hlt
inc
scas
dec
mov
stos
inc
push
push
out
lcall
cwtl
pop
dec
jo
mov
mov
push
dec
test
cmpsb
mov
jns
je
sub
pop
mov
mov
mov
xlat
je
mov
push
imul
fwait
push
and
leave
dec
shll
cmp
add
inc
push
cmpb
outsb
sub
rorb
push
mov
xchg
cmpsb
test
faddl
xor
insb
ror
sbb
dec
sub
and
jne
sbb
fildll
jbe
pop
adc
das
mov
xor
add
shr
mov
mov
sbbl
cmp
ds
cmp
cmp
push
cli
scas
mov
pushf
arpl
push
stos
sub
sub
es
sub
aaa
stos
in
xchg
ljmp
push
mov
fldt
pop
or
jbe
pop
rol
rclb
jp
aas
or
push
sub
test
xchg
add
pop
adc
insl
lret
push
test
cmp
adc
hlt
clc
clc
and
push
pop
into
or
out
xchg
test
fstpt
test
sub
pop
cmp
pop
xor
cwtl
sahf
shrb
mov
xor
push
fidivrl
testl
aas
mov
push
pop
ret
dec
shl
adc
inc
pop
in
cwtl
arpl
add
xchg
daa
jmp
gs
cld
notb
xchg
scas
lret
hlt
fs
out
ret
adc
jne
lds
jl
or
out
stos
test
push
xchg
mov
and
pop
jl
repnz
mov
bound
adc
mov
pop
icebp
pop
inc
mov
mov
xchg
fcoml
fdivr
fwait
push
mov
jmp
add
dec
jo
sbb
jb
or
cmp
xor
inc
aas
or
add
iret
xchg
add
sbbb
or
sub
sbb
enter
adc
gs
mov
pop
stos
out
addl
incl
add
out
mov
lock
fdivl
stos
mov
push
fsubl
ficoml
mov
xor
inc
arpl
pop
ds
cmp
jecxz
dec
xchg
push
sti
push
imul
xor
paddsw
mov
pop
lret
mov
lret
dec
fisubrs
sbb
xor
push
xor
lea
jge
popf
scas
jle
ret
movsl
sti
and
or
jae
lock
in
cwtl
in
add
add
sbb
lret
movsl
push
mov
out
xor
push
mov
adc
cmc
movsb
call
or
or
cld
mov
int
mov
wbinvd
rcrb
outsb
lahf
add
mov
jno
popf
fs
push
cld
dec
jle
gs
pop
adc
sbb
inc
xlat
cmc
cltd
mov
inc
enter
sbb
movb
shl
pop
lcall
mov
xchg
sub
popa
sub
push
inc
cld
add
xor
movsl
mov
jg
fimull
push
cltd
imul
out
push
call
and
sbb
adc
insl
cmpb
filds
mov
lock
adc
push
mov
int3
sub
mov
adc
movsl
push
stc
vcmpps
test
lcall
mov
dec
lods
sahf
mov
nop
ja
jns
cmp
dec
add
in
adc
int3
lcall
into
mov
jae
dec
cmpsb
jp
mov
in
out
test
push
sti
pop
sub
fstpt
les
push
dec
dec
lock
ret
mov
loopne
adc
pop
les
fs
cli
mov
fidivrs
pop
jl
cmp
mov
fisubl
xchg
imul
push
pop
stos
sahf
or
out
lock
inc
jle
jns
or
pop
mov
lcall
and
cld
and
sub
dec
ret
fnstsw
mov
jno
add
ja
aam
mov
fldenv
icebp
lea
cmp
cmp
int
mov
xchg
out
pop
jb
cmc
xchg
dec
add
xor
mov
fs
dec
in
xchg
shrl
add
sbb
shrb
and
int3
repz
sbb
imul
in
pmaxsw
xchg
lods
xchg
inc
pop
dec
jb
in
ljmp
sub
shl
push
add
call
cmp
fldt
cli
inc
xor
jmp
test
dec
or
mov
jmp
cmpsl
nop
ss
ret
and
push
lds
mov
jge
mov
lahf
jb
or
fnstsw
inc
mov
mov
cmp
push
popf
rcrb
fwait
negb
loop
jo
rcrl
mov
push
sbb
jl,pn
cmpsl
mov
jno
cs
pop
mov
fsts
jmp
jns
jmp
jle
xchg
jge
add
in
cwtl
shll
call
push
sahf
xchg
jnp
cmp
and
cwtl
jae
pop
jns
push
daa
out
cmpsb
or
js
adc
hlt
addr16
lahf
jb
add
xchg
in
mov
jecxz
or
push
stc
pop
out
imul
aas
pop
in
jns
hlt
jge
and
pop
jo
stos
arpl
fdivl
inc
pop
jns
lods
ljmp
mov
outsb
das
xlat
push
inc
imul
iret
mov
popa
pop
iret
mov
xchg
sub
popf
popa
mov
es
xor
movsb
xchg
mov
mov
fdivl
lret
repnz
cmp
xchg
jbe
cmc
mov
push
cs
fwait
aas
int
push
and
nop
jnp
imul
xor
cli
mov
xor
repz
jb
fisttpll
icebp
dec
aad
out
test
add
xchg
xchg
pushf
stc
pop
inc
ss
or
lods
pushf
fildl
xchg
adc
inc
fcoml
xchg
stos
mov
mov
insl
mov
lahf
mov
pop
data16
jle
repnz
shll
pop
xor
outsl
adc
xchg
mov
leave
enter
pop
out
movsb
mov
adc
cld
inc
sbb
shr
mov
aad
or
aam
cmp
jns
sahf
div
scas
jle
mul
and
les
fbld
dec
ds
xlat
dec
or
sub
leave
push
mov
lret
addr16
lods
imul
fisttpll
pop
mov
fidivrl
xchg
inc
push
loope
add
mov
test
jno
and
fnstenv
lret
xchg
pop
std
nop
out
dec
sub
sub
sub
das
sbbb
adc
cmpsb
mov
adc
fidivrl
jmp
xor
cld
pusha
in
adc
push
mov
dec
stos
dec
add
aas
sub
ss
loope
adc
imul
fwait
dec
insb
shl
popf
outsl
pop
ret
xchg
sbb
mov
inc
add
inc
pop
fldenv
ljmp
xchg
hlt
ss
jbe
xchg
cmpb
movl
and
or
dec
mov
ljmp
and
ljmp
jb
mov
mov
in
hlt
out
sbb
repnz
lret
mov
lret
hlt
cmp
jnp
test
pop
sub
lods
inc
fwait
mov
fisubs
mov
lds
daa
loop
mov
xor
push
jbe
cwtl
cltd
inc
fmul
mov
mov
mov
test
pop
cmp
xchg
lods
inc
stos
aam
pushf
nop
mov
xchg
add
sti
or
aad
ds
sub
add
or
or
iret
or
xchg
shl
jae
and
sbb
xor
jo
cmp
inc
push
loop
mov
or
idivl
ss
dec
pop
sarl
and
pop
incl
lods
jl
iret
xor
ljmp
pop
ds
lahf
movsl
xchg
dec
jg
movsl
add
mov
jae
lds
inc
inc
mov
pop
mov
inc
fisubrs
nop
jbe
cmp
sub
repz
mov
adc
adc
or
gs
ja
scas
xchg
in
std
or
jmp
and
fimull
mov
lret
push
je
sbb
inc
jne
inc
fsubr
mov
pop
fwait
mov
jge
pusha
xchg
mov
adc
test
jb
adc
daa
je
stos
jmp
addr16
mov
xor
cmp
loope
jle
jg
js
call
xchg
add
or
sbb
cmp
es
inc
shrl
adc
outsb
sub
mov
pop
repz
push
add
rolb
clc
mov
sarb
dec
inc
shll
ja
cwtl
dec
aas
push
nop
adc
popf
popa
repz
mov
mov
rol
fistps
js
test
sti
daa
sti
cmp
rcrl
push
hlt
in
xchg
mov
cmp
cmp
dec
sbb
fs
or
rcll
cmp
jnp
in
lds
or
movsb
in
and
jmp
pop
fsts
ror
lahf
data16
enter
stos
cmp
jecxz
push
gs
repnz
sbb
cli
xchg
mov
test
call
and
push
out
dec
aad
or
mov
xchg
mov
int
icebp
push
xchg
xchg
adc
rcll
xor
adcb
mov
sub
mov
or
dec
ret
cltd
je
clc
jecxz
lahf
out
xchg
add
movb
add
sbb
clc
mov
cs
addr16
cmp
ds
mov
or
stos
pop
dec
sbb
xlat
popa
mov
das
ret
jmp
les
call
jle
into
fadds
mov
test
insl
jb
lahf
or
xchg
or
adc
pop
inc
je
fsubrs
xchg
int
movb
xor
outsb
jmp
mov
orb
cmp
ret
xchg
cmp
mov
sahf
inc
mov
mov
or
es
xchg
jcxz,pn
adc
leave
addr16
loop
mov
dec
shl
add
shll
fsubs
leave
inc
mov
data16
js
mov
inc
icebp
ficoml
sbb
pop
ljmp
mov
push
adcb
or
lds
jge
cld
mov
xor
subb
ficompl
test
popa
les
mov
andl
dec
cmc
adc
movsb
sti
repnz
dec
std
aam
outsb
rcll
sbb
and
enter
pop
jne
or
mov
jns
push
cld
xchg
enter
pop
addr16
loope
aam
stos
push
bound
aas
xchg
fwait
sbbl
sub
imul
addb
lock
popf
pop
mov
xchg
jnp
cli
push
lods
mov
test
fsubrs
mov
insb
jnp
sahf
repnz
int3
dec
into
push
push
lcall
test
mov
cld
scas
or
mov
enter
fisubrs
cmp
insb
icebp
jae
scas
add
and
ss
jnp
ret
sbb
inc
mov
cmp
lcall
lcall
lahf
call
sbb
lret
iret
mov
subl
cmp
lret
push
xor
loop
or
inc
mov
popa
sub
das
movsb
sahf
mov
dec
dec
jbe
clc
cmp
xchg
add
jp
movsl
jmp
loopne
out
inc
cmpsl
inc
addr16
xorb
push
mov
pop
inc
inc
in
jp
mov
cmp
mov
mov
enter
sub
lret
adc
addb
xchg
out
xor
lret
xchg
push
lds
ss
pusha
mov
cld
dec
dec
and
fsubp
arpl
neg
sbb
sbb
push
dec
lods
xor
push
shl
pop
enter
cli
mov
ret
push
dec
add
inc
cmpsb
sbb
lods
mov
ja
push
stos
jmp
push
popf
cltd
or
xchg
mov
cld
xchg
lret
pop
in
mov
mov
cltd
xchg
out
jl
cmc
jp
mov
mov
outsb
loope
imul
sbb
testb
push
push
jbe
insl
cmpsb
pushf
cmp
inc
mov
pop
and
pop
mov
aam
int3
adc
inc
out
adc
repnz
adc
cmc
cmp
xor
xorb
inc
aaa
xchg
push
aaa
inc
add
icebp
sbb
add
ds
adc
cmpsb
xchg
vmovd
jge
cmc
fisttps
push
pop
repnz
inc
sub
in
push
loopne
faddp
loopne
clc
jbe
push
xor
or
or
pop
je
inc
cmpsl
inc
arpl
jb
dec
fbstp
adc
xchg
sub
popa
cmpsl
es
pop
jae
push
cmp
pop
outsb
and
pop
es
sub
mov
mov
inc
in
mov
xchg
fiadds
out
aad
dec
fsubrs
add
mov
sub
in
jmp
inc
push
mov
div
cmp
jl
or
ds
adc
sbb
push
pushf
movsb
cmp
xor
stos
and
mov
push
fwait
dec
mov
xchg
and
add
aas
lea
pop
and
repnz
std
loop
fs
sbbl
test
mov
dec
sbb
cmpl
dec
dec
stos
jecxz
cmc
or
jmp
or
inc
pop
fnsave
jecxz
dec
lret
repz
inc
mov
lret
add
inc
push
xchg
mov
jae
jns
dec
testl
inc
lods
push
ljmp
push
xor
fsub
enter
inc
test
mov
out
mov
add
jmp
add
xchg
inc
cld
je
and
and
mov
lods
mov
sbb
int
mov
xchg
adc
lret
data16
loop
mov
int3
pushf
into
loopne
xor
add
mov
enter
dec
mov
cmp
aas
add
pop
xchg
stos
in
cltd
test
jmp
pop
hlt
dec
nop
mov
pop
outsb
jnp
mov
adc
fnsave
shll
sub
mov
mov
mov
cmpsb
and
ret
xchg
mov
jnp
aad
fcmovu
inc
inc
dec
shlb
icebp
jo
shll
inc
pop
and
xor
stos
fwait
inc
aam
mov
sbb
int3
stc
clc
xchg
jmp
inc
daa
push
jnp
sbb
and
xchg
push
gs
out
jle
fnstcw
ljmp
inc
push
jno
mov
mov
jg
inc
add
lods
mov
pusha
jmp
popf
push
or
dec
loopne
jae
ret
cmp
ja
sbb
dec
xchg
push
popf
lds
aad
inc
pushf
popf
stc
dec
gs
lret
pop
data16
push
lahf
stos
flds
repz
mov
add
xchg
outsl
shll
fldcw
adc
repnz
dec
mov
mov
fildl
lahf
xchg
dec
adc
fs
push
inc
ret
jmp
fsubr
rorb
pcmpgtb
stos
xor
adc
imul
and
pop
xchg
xor
fmul
arpl
js
into
call
enter
jae
movsw
je
mov
pop
rol
sarl
int3
xlat
outsl
sbb
mov
gs
cmpsb
imul
xor
aad
mov
xchg
jnp
lret
pop
ret
jo
sbb
mov
lahf
add
pop
sbb
xchg
jmp
dec
out
xlat
data16
adc
jnp
dec
mov
add
or
out
daa
cmp
jb
sub
mov
jbe
inc
scas
mov
test
movsb
xchg
jns
dec
adc
xor
aas
idivl
loop
xor
add
or
mul
les
cli
ret
sub
inc
add
mov
subb
pop
mov
lods
cmp
aam
mov
loopne
and
mov
rcrb
push
sbb
pop
jecxz
jo
iret
imul
mov
jle
pushw
inc
xlat
loopne
inc
adc
add
jne
dec
xchg
dec
xchg
sub
movsb
mov
mov
xchg
mov
cltd
ss
fdivl
mov
into
daa
dec
dec
popf
mov
fidivs
add
xor
fwait
dec
xchg
in
sub
in
push
sub
jge
and
jnp
inc
std
subb
cmpsl
and
jb
imul
movsb
notb
cmpsl
lds
insl
push
loope
push
out
aam
decl
aaa
push
and
pusha
aad
es
push
xchg
adc
into
xchg
jl
mov
popa
into
shlb
pop
adc
mov
jb
loope
jl
js
je
testb
jno
mov
sub
cwtl
mov
jecxz
stos
mov
repz
push
ljmp
mov
test
pop
fcoms
pop
jbe
je
push
cmpsb
test
xor
js
push
stos
cmp
pop
jmp
loop
adc
mov
and
inc
and
jne
mov
jp
loop
push
xchg
xchg
xor
sbb
out
mov
pop
push
add
xor
std
mov
mov
adc
fdivrs
shrb
or
add
sbb
xchg
movb
jle
fbstp
jnp
dec
f2xm1
sbb
add
loope
xor
jp
sub
sbb
stos
ret
js
jecxz
push
adc
push
stos
es
add
sarl
lcall
ja
in
test
out
or
push
or
loope
or
adcl
dec
mov
adcb
jno
arpl
loop
cltd
cld
lea
push
inc
scas
xchg
mov
lret
mov
aas
dec
loop
pushf
add
movsbl
jle
lahf
lahf
repz
rcrb
jae
into
jecxz
ret
shlb
divl
sub
outsb
sub
push
mov
or
orb
pushf
cmp
mov
ficoms
dec
lods
sbb
js
sub
pop
enter
push
movsb
repnz
or
xchg
push
test
xchg
ror
je
in
sub
xchg
testl
adc
jle
push
push
push
jmp
jmp
push
cmovbe
orb
shll
pushf
std
dec
sti
jbe
sahf
and
mov
out
mov
insl
sbb
jge
cmpsb
jns
push
sub
lds
jmp
and
ja
fsubrs
clc
test
cltd
xchg
in
mov
pop
loopne
jle
adc
sub
jnp
lsl
insb
sbb
cmp
and
push
adc
cmp
out
xor
fs
jbe
push
les
jno
hlt
repnz
test
les
ret
mov
leave
psubd
adc
sub
stos
jl
subb
mov
nop
in
js
or
add
cli
ljmp
leave
dec
out
popf
in
jle
xchg
mov
pop
mov
xlat
outsb
dec
sbb
jb
test
and
test
push
sbb
and
pop
xor
insb
adc
inc
push
inc
arpl
xorl
insl
ret
or
imul
inc
and
lret
adc
inc
pusha
or
lock
mov
out
jle
and
sub
or
das
jns
test
movsl
add
add
call
mov
mov
mov
sahf
xor
int3
pop
enter
mov
or
loop
adc
lock
lea
cmp
scas
mov
push
aad
jp
jge
and
in
pop
loop
pop
in
mov
rorb
mov
add
adc
fisubrl
cwtl
sub
scas
lret
icebp
clc
sahf
and
adc
scas
inc
xor
mov
and
gs
arpl
negb
mov
pop
mov
das
push
inc
and
push
mov
sarl
call
jo
lret
notb
insb
loope
mov
nop
mov
loop
mov
into
loop
lahf
orl
stos
cmp
or
and
into
jmp
cli
pop
inc
lret
sbbl
pop
adc
push
sbb
imul
icebp
mov
mov
or
cmp
testl
or
test
cltd
std
adc
incl
sub
pop
fwait
in
aam
jl
fldenv
mov
or
les
std
mov
sub
or
ja
je
adc
popf
int3
es
stos
pop
xchg
fdiv
imull
test
scas
xor
cld
dec
push
inc
add
add
cli
xchg
iret
xor
mov
inc
mov
cmc
clc
out
clc
mov
dec
pusha
ror
sbb
iret
pop
and
rorl
test
xor
push
lahf
jno
jbe
pop
add
test
popa
xor
jo
popf
push
adc
lods
mov
xlat
inc
push
push
call
add
mov
jle
push
mov
lods
aas
pushf
sub
cmpsb
ja
subb
and
push
pop
icebp
lahf
mov
mov
shr
es
sbb
xchg
adc
out
jnp
aad
mov
cmp
cltd
push
cmp
test
jns
sub
push
pop
jecxz
or
test
in
or
pushf
cltd
jo
xchg
mov
pusha
inc
out
stos
enter
mov
stc
pushf
adc
xor
xchg
jle
inc
pop
add
test
in
sub
jno
mov
adc
scas
inc
cmp
dec
and
pop
jno
push
dec
add
xlat
out
xchg
pop
inc
les
mov
sahf
mov
shlb
stos
fldcw
sbb
and
and
scas
cmp
ljmp
and
imul
mov
mov
sahf
aam
rorb
bound
cmp
sahf
int
or
mov
xlat
sub
push
lcall
cwtl
das
sub
dec
outsl
xor
cltd
int3
fmul
idivl
sbb
push
adc
mov
mov
jecxz
lret
lret
sbb
andps
mov
and
push
fdivs
jle
push
ljmp
stos
pop
mov
xchg
push
stc
fwait
xchg
out
popf
aas
xchg
inc
loopne
out
add
push
pop
je
inc
sub
cld
and
and
pop
movsb
into
inc
psadbw
lock
push
insl
jge
cltd
insl
iret
cli
lods
out
inc
xor
cmp
sbb
mov
insb
push
outsl
sbb
fisubrl
mov
jb
jl
test
loop
mov
mov
iret
test
aas
or
and
shr
lods
mov
pusha
int
dec
or
adc
es
jecxz
loopne
sbb
in
popf
sahf
dec
add
out
sub
mov
inc
addb
into
mov
hlt
sar
xchg
inc
cmpsb
dec
sbb
loopne
insb
insl
jge
sti
mov
outsb
loop
push
aam
out
aas
pop
pop
xchg
orl
sub
lahf
xchg
inc
fdivl
inc
add
lret
sbb
test
fwait
aas
adc
out
mov
stos
in
hlt
mov
loopne
sub
cmp
adc
stc
inc
jl
cmc
data16
inc
data16
rcl
mov
in
lcall
push
inc
push
leave
push
jo
inc
mov
inc
pusha
stc
dec
leave
loopne
int
and
push
dec
jecxz
cmp
push
mov
orps
in
dec
or
imul
repz
insl
mov
push
lea
aas
xlat
jmp
loopne
cmpsl
inc
jb
js
sbb
inc
push
push
xor
decl
mov
outsl
mov
add
mov
test
mov
mov
cmp
pop
jl
mov
rcll
mov
sub
xor
xchg
dec
fldenv
sahf
jecxz
out
mov
xor
cmpl
sahf
pop
fwait
imul
push
pusha
testl
ja
test
xchg
jecxz
pop
ret
insl
and
inc
mov
xor
movsb
aas
dec
fcom
push
dec
insl
push
lods
pop
call
jnp
lds
mov
adc
out
or
dec
ss
push
aam
cmp
xor
mov
mov
fwait
insl
or
lret
sbb
push
mov
mov
inc
adc
cli
pushf
lret
out
icebp
pop
shll
dec
outsl
mov
mov
mov
shrl
sti
push
xor
push
fnsave
leave
pusha
gs
mov
push
call
lahf
adc
and
jb
nop
std
sbb
loopne
mov
addr16
cmp
lods
xchg
fidivrs
push
aaa
lds
mov
sbb
pusha
in
std
add
mov
test
sbb
ret
mov
cmp
ret
rcrb
and
mov
mov
sbb
sub
sbb
dec
cmp
aad
pop
sbb
jo
jb
fcomps
mov
push
xor
inc
mov
fmull
and
fldt
mov
jae
mov
mov
mov
shlb
fs
fidivs
mov
lretw
das
or
xchg
xor
mov
fisttpl
or
or
mov
dec
cmpsb
inc
fidivs
aad
mov
cmp
mov
sbb
lods
jo
push
in
mov
pop
lock
ja
std
je
jle
push
mov
sub
pop
movsb
repnz
adc
in
jne
clc
xor
call
int3
sub
test
in
cli
test
sarb
adc
adc
xchg
test
mov
cmp
fcmovb
adc
repnz
out
and
ja
cmp
mov
loopne
mov
fmull
loop
cmpl
insl
inc
loope
add
or
and
fidivrl
aas
mov
sub
mov
jb
push
sub
test
arpl
jae
clc
into
and
sbb
xor
push
je
push
lds
cmp
in
call
dec
push
imul
dec
adc
jl
in
pushf
and
jg
jg
adc
cmp
and
fs
inc
dec
xchg
fisubrs
push
into
mov
scas
clc
lods
andb
sub
or
inc
fimull
dec
mov
mov
lds
ljmp
lcall
jg
rcl
mov
imul
xor
sahf
arpl
and
mov
fldenv
sub
add
adc
and
lds
inc
pop
test
test
mov
push
out
cmp
cli
and
fidivl
jge
lcall
cltd
into
out
loope
stos
fwait
or
mov
rcrl
sbb
xchg
inc
inc
fidivl
pop
mov
mov
jmp
inc
push
add
int3
outsb
movsl
lahf
in
in
push
pop
pop
sub
cld
inc
xchg
and
mov
imul
iret
popa
jp
ja
fimuls
cmpsb
icebp
out
mov
jno
inc
mov
cmp
pop
stos
fstpl
testl
jecxz
mov
jmp
fs
add
test
fisubl
cmpsl
fwait
cli
add
enter
mov
sub
aad
aam
add
push
or
stos
add
mov
lods
cmp
imul
cmc
jmp
std
test
push
pusha
shrl
leave
pop
sbb
jmp
push
shlb
rcrl
mov
sub
gs
add
jbe
or
aam
repz
adcl
repz
ja
bound
dec
out
movsb
pop
insl
xchg
inc
jo
jnp
mov
std
nop
inc
out
jb
cmp
stos
movsb
jl
mov
add
push
bswap
daa
add
outsl
mov
fs
fwait
add
mov
xlat
inc
cltd
inc
je
mov
arpl
mov
sbb
sbb
push
sbb
dec
out
pop
outsl
bound
in
ret
push
adc
add
shlb
mov
cmpsb
aam
jg
and
add
ret
out
xor
mov
jne
fistpl
and
into
dec
push
push
jne
js
mov
cmp
sbb
push
sub
mov
sbb
aas
repz
leave
xlat
mov
jl
xor
sbb
jg
out
dec
movsb
cmpsl
icebp
mov
sub
test
jno
loopne
sbb
add
adc
ljmp
out
fildl
xchg
mov
shlb
mov
jle
imul
push
jbe
and
adc
clc
or
jg
mov
in
je
inc
das
add
jnp
dec
ljmp
adc
or
xlat
jbe
mov
aad
pop
pop
and
sub
push
cmp
imul
pop
hlt
sbb
dec
and
mov
mov
repnz
pop
int3
xchg
mov
sub
xchg
bswap
mov
std
sbb
shlb
pop
dec
test
lret
scas
push
data16
lahf
ss
test
adc
js
movsl
push
and
incl
mov
jp,pt
fcoml
repz
jle
mov
cmp
out
mov
adc
subb
rcl
or
icebp
xchg
icebp
ja
push
testl
mov
sub
nop
subl
xchg
jnp
lcall
mov
int3
scas
mov
sahf
cmp
add
mov
push
adc
es
jbe
or
or
in
int
lods
lea
sahf
inc
lods
mov
aaa
mov
or
in
pusha
ret
sbb
cmpsl
je
mov
data16
fcmovbe
jno
std
cltd
das
sub
jbe
in
sub
xchg
cmp
xor
ficompl
xor
out
or
sbb
adc
or
pop
aaa
ror
test
sbb
mov
pop
imul
cmp
lahf
stos
imul
inc
xchg
pop
adc
lods
icebp
push
dec
ror
inc
xlat
dec
fsubl
pop
ja
jmp
jmp
mov
js
push
arpl
outsb
shlb
test
pusha
xchg
cmp
mov
pop
mov
inc
pop
aas
andl
dec
push
mull
pop
push
jl
add
xchg
and
daa
pop
mov
push
adc
mov
insb
sbb
ljmp
or
jecxz
lods
or
add
mov
lods
mov
push
inc
lret
inc
in
popf
push
ret
lock
lret
add
bound
inc
pop
cmp
es
scas
sbb
mov
clc
fmuls
sti
and
add
mov
xchg
movsl
ret
jbe
dec
and
rolb
or
pop
jle
dec
mov
sub
sti
dec
mov
inc
xchg
insb
xor
mov
cmp
mov
cs
push
xchg
sub
pop
adcb
push
ljmp
out
xchg
xchg
xchg
sub
jne
popf
lret
andl
xchg
xor
push
out
xchg
scas
cmp
subb
xchg
add
pop
imul
jmp
xchg
fldenv
or
fwait
sti
aad
lods
and
btr
movsb
into
test
pop
xchg
cmpsl
dec
and
aaa
xchg
xor
adc
inc
pop
ss
scas
test
cmp
xchg
dec
leave
shll
mov
push
cmpb
das
inc
popa
loope
sbb
or
push
daa
out
xchg
push
fidivrl
clc
or
fsubrs
rolb
mov
fcmove
sub
ds
mov
lret
xlat
cmp
pop
call
outsb
shl
addr16
xchg
mov
pop
adc
push
mov
mov
sahf
iret
subl
outsl
push
pop
add
fnstenv
dec
add
mov
adc
leave
lahf
dec
sub
mov
fisubl
adc
cld
xor
xor
mov
cmp
jl
mov
mov
push
mov
sub
rcrb
xor
xor
jb
in
loopne
mov
fldenv
cli
js
add
idivl
dec
je
dec
dec
inc
pop
lret
dec
leave
fnstsw
ljmp
jno
das
mov
gs
xadd
sti
int3
sbb
hlt
mov
lods
push
fwait
xchg
ljmp
jbe
add
loopne
test
test
lret
lds
add
push
add
pop
ljmp
test
ja
xor
and
inc
sbb
mov
xchg
or
outsl
sub
add
roll
shrl
scas
inc
shlb
rcrl
push
sbb
ret
xor
loop
mov
ja
mov
push
fldl
int
int3
sub
in
lcall
jb
mull
push
mov
int
cmp
addr16
push
test
xchg
sbb
adc
jle
sub
jno
cs
ds
xor
or
dec
xor
fcmovnb
lods
iret
jecxz
lret
out
sub
pop
mov
dec
sub
and
pmulhuw
mov
pop
in
aad
out
repnz
fisubrl
nop
mov
inc
mov
and
lahf
or
mov
dec
mov
mov
mov
mov
inc
test
adc
cmp
mov
sbb
mov
jb
mov
cmp
jns
rcrb
inc
jmp
shr
out
ror
clc
mov
push
jne
daa
out
stc
or
sbb
aam
push
adcb
rolb
icebp
or
or
call
shld
dec
mov
xor
cltd
push
inc
cwtl
pop
mov
jp
xor
dec
ss
mull
pop
xor
mov
lock
movsb
or
popf
lods
push
jmp
pop
adc
pop
fdiv
push
fwait
dec
je
mov
cmp
lods
loopne
xchg
jb
test
or
out
aad
lret
cmpsb
aas
sbb
int3
in
mov
ret
jmp
inc
push
aas
push
sbb
lret
ret
leave
inc
out
pop
aad
out
sti
adc
popf
xor
mov
mov
hlt
popa
mov
xor
lahf
rclb
test
ss
sahf
lods
cmpl
std
xchg
mov
sbb
aad
or
pop
jge
xorl
scas
fidivs
aam
repnz
test
adc
imul
mov
and
push
xor
clc
jle
pop
mov
popl
nop
sub
jo
cmc
mov
cmp
cmp
cmp
pop
in
aam
in
daa
lcall
sbb
push
jl
insl
daa
jle
jbe
cmp
push
aad
outsb
or
lret
movsb
lds
out
sbb
xor
jle
icebp
and
add
inc
mov
jns
int
fnstenv
ficoml
xor
jno
lahf
push
jae
and
paddd
jns
push
mov
cmp
aam
ficompl
in
aad
inc
nop
jae
cmp
push
dec
aad
ljmp
xor
fwait
cmpsl
or
sarb
mov
popf
sub
adc
faddl
das
fsubs
cmpsl
out
inc
dec
dec
movsb
mov
orl
es
outsb
shlb
jp
sbb
xchg
fdiv
dec
addr16
dec
adc
push
out
cmp
or
insb
xor
imul
out
lds
xchg
push
addr16
stc
lahf
inc
sbb
out
test
stos
cmc
and
mov
test
test
jns
daa
outsb
ja
outsb
inc
pop
addr16
ja
fs
mov
xchg
clc
jbe
sub
xor
lret
addl
mov
iret
pop
stc
in
push
sbb
imul
inc
mov
adc
mov
pop
jne
or
in
pop
lcall
outsb
test
ret
mov
popa
in
mov
jge
jae
cmp
scas
stc
nop
sbb
sub
xor
andl
adc
jp
mov
push
push
adc
shrb
cmp
add
ret
fucomp
inc
rcll
mov
mov
popf
jb,pn
pop
mov
jne
lods
pusha
xchg
cwtl
pminsw
int
jg
jne
and
dec
fs
xchg
jp
cmp
orb
dec
repnz
setno
jecxz
sub
pop
pop
cli
jp
ss
sub
loope
lret
jne
dec
jecxz
cmpb
or
mov
popa
out
movsl
add
inc
pop
imul
xchg
in
mov
cmp
or
mov
out
fs
mull
add
mov
push
lods
jecxz
je
mov
mov
arpl
ss
fisubrs
xchg
je
cmp
push
call
lret
jb
and
or
adc
lea
lahf
mov
fldcw
ret
push
cmp
push
dec
dec
mov
dec
lahf
nop
sti
filds
ss
mov
pop
repz
inc
repz
xor
push
add
adc
inc
push
sbb
or
push
pop
and
pop
pop
aam
out
or
pop
inc
scas
or
imul
clc
aam
fcoml
xor
dec
cld
sti
push
mov
push
test
in
jmp
dec
mov
sbb
int
sbb
mov
sbb
lods
push
call
jno
mov
xor
fidivrs
push
je
cld
nop
loop
jnp
leave
nop
aam
lea
pop
adc
or
pop
mov
mov
pop
lahf
mov
jmp
lods
xchg
fdivs
les
addr16
sub
setp
ret
popf
inc
outsb
rclb
pop
push
adc
cmp
sub
mov
mov
and
arpl
scas
ffreep
push
add
sbb
mov
push
jno
xor
pop
push
jno
push
push
sti
lea
and
sbbb
dec
push
push
mov
mov
sbb
push
xchg
pop
in
and
lret
nop
in
ret
sub
mov
pop
call
in
scas
rcrl
in
xchg
prefetch
repz
dec
jle
scas
cmc
fidivl
es
mov
clc
jmp
mov
movsb
cmpsb
test
ja
jmp
shr
stos
addr16
mov
pop
lods
mov
xor
stos
cmp
xchg
cmp
rolb
ja
jecxz
cltd
cwtl
jns
mov
ret
adc
sbb
push
mov
xchg
pop
in
lods
in
movsl
push
mov
je
std
aad
pop
mov
pusha
jp
mov
leave
nop
movsb
aaa
dec
mov
into
data16
adc
sub
push
push
shrb
out
test
icebp
or
mov
or
lods
mov
fildll
add
in
mov
loopne
push
mov
lods
inc
loop
leave
pop
mov
fistpll
jmp
mov
dec
cltd
pop
add
pop
sub
add
jo
sbb
jmp
bound
pop
lock
xchg
and
repnz
ljmp
imul
lock
push
mov
lods
bound
test
and
insb
push
push
mov
incl
popl
cli
cmp
xor
scas
in
sbbl
xchg
idivb
inc
jo
add
repz
lock
push
lahf
fs
call
imul
xchg
gs
and
out
add
dec
xchg
cmp
repnz
xchg
jnp
mov
mov
stos
adc
push
xchg
test
sbb
jnp
movsl
mov
insl
add
mov
aaa
insl
cmp
test
sbb
imul
lds
gs
cmpsl
cmp
shlb
arpl
add
inc
fldt
subb
push
adc
into
sbb
dec
psraw
cld
mov
cmpsl
add
lret
xlat
push
gs
cmc
scas
mov
xlat
jl
push
in
adc
out
repnz
dec
mov
je
pop
xchg
cli
insb
jle
cmc
iret
push
cmp
or
lss
xchg
adc
imul
sbb
mov
jnp
mov
lret
data16
push
push
xchg
mov
jmp
leave
cmpsl
and
dec
add
ret
xchg
mov
pop
lea
shll
ret
mov
cmp
or
data16
cwtl
mov
rcrb
xor
lods
imul
cwtl
cmp
fiadds
cmp
dec
pop
sbb
clc
mov
xchg
popf
sbb
mov
out
fbstp
fbld
pop
push
sub
xchg
jns
fldenv
in
shll
fwait
mov
sahf
outsb
sbb
lds
xlat
cs
mov
pop
loop
cmpsb
or
push
lea
mov
scas
mov
pop
out
cwtl
stos
and
shrb
cld
mov
sahf
xor
mov
xor
or
mov
lahf
mov
js
imull
ficoms
pop
push
sbb
xchg
movsl
ret
jmp
cmc
push
ret
popa
push
push
lea
rclb
xchg
add
pop
pop
xchg
andb
cwtl
cmp
lahf
out
ljmp
leave
lret
sti
out
add
push
inc
mov
cld
je
cmc
xchg
xor
adc
mov
sbb
imul
dec
shrl
aaa
inc
bound
cmc
adc
pop
dec
lea
jl
sbb
ljmp
pushf
repz
push
movsl
faddl
sub
xor
scas
mov
xor
pop
test
outsb
fstpt
lock
imul
cmp
popa
stos
mov
iret
or
lock
adc
jne,pn
cmp
cmp
push
ja
mov
dec
ret
mov
lds
xchg
scas
pinsrw
jnp
pop
outsl
xor
jmp
sbb
cwtl
mov
push
insl
sbb
and
out
fbstp
jo
aam
adc
lods
stc
fldt
lea
xchg
adc
mov
les
insl
mov
jp
dec
pop
ficomps
ljmp
cmc
mov
dec
jae
add
in
rol
cmc
mov
fsubs
pop
outsl
mov
cmp
test
decl
cs
cltd
stc
push
push
xor
lock
inc
mov
addr16
mov
and
inc
fdivrp
std
sbb
ljmp
jp
mov
mov
xchg
aaa
inc
or
dec
out
sub
lahf
sub
stos
lock
or
sub
dec
cmp
mov
rorb
jecxz
push
ficoms
js
mov
xor
fs
pop
or
gs
outsl
push
out
lods
outsl
ret
out
mov
aam
or
adc
out
outsl
or
call
jp
in
jbe
xor
cltd
xor
sbb
repnz
pop
pusha
jl
add
out
jo
inc
pop
cmp
mov
aam
leave
cli
sbb
gs
gs
lds
mov
mov
cmpsl
test
add
mov
adc
inc
fidivrs
xchg
into
mov
dec
jbe
std
push
mov
adc
sbb
xchg
xchg
sbb
cli
jmp
jns
sbb
adc
sub
fisttpll
and
adc
fsts
lahf
ret
gs
push
in
push
inc
shrb
imul
xchg
push
jge
leave
and
or
dec
adc
xor
fsubl
test
mov
add
push
sub
lahf
test
cltd
pop
scas
jbe
pop
loopne
or
jo
gs
jmp
mov
and
out
js
cmpsb
jns
inc
mov
cmp
in
xchg
scas
call
pop
add
sub
jg
aaa
enter
mul
cmp
arpl
nop
mov
xchg
outsb
xrelease
in
or
push
add
scas
sbb
test
mov
fsts
mov
lret
arpl
pop
fidivl
je
and
pop
clc
pushf
jge
jae
sbb
xchg
imul
pop
mov
test
cltd
jecxz
negb
push
cmpsl
jno
cmpsl
xchg
add
outsl
into
pop
mov
or
into
xor
repnz
cmc
jb
sti
xor
pusha
call
sub
add
mov
es
and
fidivrl
pop
movsl
xor
std
mov
cmp
out
clc
xor
dec
es
push
aas
outsb
push
xorb
inc
fs
insl
mov
repz
repnz
jecxz
sti
pop
jb
lahf
cmpl
pop
jns
mov
xchg
insb
sbb
adc
nop
xor
int3
imul
push
rclb
xchg
lahf
and
dec
inc
insl
out
push
lock
mov
ljmp
int
gs
out
fdivrs
sti
push
imul
cmp
rep
adc
inc
push
pop
psubusw
pop
in
movsb
adc
mov
mov
jle
pop
sub
dec
jb
repnz
test
xor
xchg
sarl
pop
and
and
add
xor
test
add
cmpsb
mov
inc
sahf
outsl
daa
add
mov
stos
sub
cltd
enter
es
jbe
out
push
dec
push
popf
mov
rorl
push
add
xlat
icebp
mov
and
fstl
pop
mov
lods
adc
xchg
imul
popf
xor
out
ds
rcll
or
mov
jecxz
scas
ret
aam
xchg
dec
jle
dec
mov
iret
cli
call
es
push
cmp
cmovns
jmp
stos
mov
xor
int3
fdivrl
repz
sbb
inc
shrb
and
jl
push
sub
jp
or
inc
int
mov
xchg
rclb
ret
inc
jae
jbe
gs
in
iret
dec
ss
jmp
mov
adc
lahf
daa
xor
inc
test
xor
dec
cmc
cmp
mov
push
or
bound
push
rol
add
cmp
popa
pop
imul
add
mov
pop
jmp
lea
mov
add
out
and
or
out
pop
dec
aas
ljmp
jge
out
daa
push
call
or
outsl
subb
dec
adc
jge
dec
mov
jno
xchg
daa
aaa
jmp
outsb
sub
push
sub
xor
jns
sti
jnp
mov
add
imul
or
mov
inc
sub
enter
sub
push
jbe
xchg
or
test
aaa
rolb
out
jp
test
mov
inc
rcr
popf
adc
inc
cmp
xchg
push
inc
lcall
xchg
or
jae
push
adc
jnp
fnsave
out
or
xchg
add
jecxz
sbb
shll
dec
and
mov
bound
xor
cld
cmp
push
iret
inc
jae
sbb
xabort
mov
lcall
push
lahf
into
fists
fdivrs
stos
jne
mov
loopne
fdivl
cmp
jg
mov
outsb
mov
or
and
push
imul
cmc
adc
mov
lods
jo
push
into
dec
pop
push
out
out
dec
jl
iret
pusha
outsb
add
inc
test
or
cs
sub
inc
jg
mov
call
fdivrp
inc
rol
push
sbb
xchg
cwtl
cmp
mov
les
xorl
arpl
jbe
and
jg
test
or
mov
jns
xor
xchg
dec
jnp
clc
imul
pop
pop
jle
pop
lock
fisubs
inc
fsubrp
jae
call
mov
scas
push
cmp
mov
fisubl
cli
and
es
jo
mov
mov
stc
push
shrl
sbb
cld
add
mov
and
aad
xor
adc
xchg
cltd
je
mov
outsb
imul
pop
dec
or
cmp
ja
sub
cli
push
jnp
mov
arpl
xor
or
dec
cmp
add
push
inc
mov
aas
ficoms
repz
or
dec
and
xchg
jl
cmpsb
xchg
and
arpl
sub
add
sarb
ret
call
inc
dec
cmp
mov
sarb
ficompl
or
adc
test
cwtl
cli
cmp
jp
add
notb
shlb
jmp
js
jno
or
sarb
bound
mov
fnstenv
out
pop
xor
lret
xchg
sub
sub
imul
call
insb
xor
fs
cli
test
or
mov
das
sub
cmpsb
push
adc
and
popa
test
xor
xor
out
xchg
push
jns
mov
ret
xchg
stos
hlt
loop
dec
inc
pop
lret
out
cmp
cld
xchg
xor
push
jae
push
sbb
xor
push
in
jbe
inc
fcmovbe
pop
or
test
push
or
dec
das
pop
adcb
insb
inc
loop
pop
clc
out
iret
sbb
jecxz
jo
leave
xor
xchg
lcall
mov
pop
lods
xchg
mov
pop
subl
xchg
sahf
dec
mov
xchg
xchg
xor
leave
pusha
add
push
mov
jmp
or
insb
add
fdivs
xorl
pop
int3
out
shlb
jb
fs
push
imul
sub
dec
xchg
inc
mov
sahf
dec
arpl
stc
push
xlat
dec
add
sahf
test
jns
scas
stos
push
dec
add
dec
add
dec
testl
mulb
and
cmpsb
sbb
cld
cmpsl
mov
cld
out
dec
int
inc
mov
jns
scas
gs
ljmp
sti
or
scas
push
test
sbbb
and
inc
inc
scas
aas
ljmp
gs
insl
xchg
lahf
xchg
adc
ljmp
pop
jle
or
int3
and
pop
mov
scas
out
pusha
pop
push
inc
cli
xchg
js
loopne
cmp
pushf
pop
xchg
and
jae
sbb
push
imul
sbbb
push
jp
push
fdivrs
add
gs
mov
add
and
push
outsl
push
inc
fisubl
enter
test
mov
push
mov
scas
xchg
ja
jp
push
mov
fwait
sub
push
lods
mov
jmp
jmp
xchg
pop
icebp
inc
into
and
push
nop
jle
add
dec
mov
pop
jns
push
aad
ss
mulb
mov
rcrb
pop
fisttpl
subl
lahf
push
push
adc
arpl
pop
scas
arpl
cmc
mov
into
jecxz
jle
outsb
dec
mov
mov
in
cwtl
lods
dec
fmuls
gs
outsb
das
cmp
push
popf
mov
jmp
in
inc
fs
pop
das
push
cmc
insl
shlb
iret
mov
shrb
decl
ret
sbb
cld
dec
shrl
cltd
or
pop
inc
jle
movsl
xor
push
stos
decl
pop
outsl
out
sub
sahf
scas
mov
int
fadds
outsl
loop
in
pop
rcrl
adc
dec
mov
outsl
out
xor
filds
mov
pop
icebp
data16
pop
adc
es
xor
jae,pt
xor
push
push
adc
lods
and
movsl
js
clc
les
test
jecxz
std
cltd
xor
sub
cmp
iret
add
mov
ljmp
jg
int3
jno
sub
mov
xchg
sub
mov
das
inc
xor
mov
sbb
and
sarl
add
push
subb
xor
dec
pop
jecxz
cmpsl
mov
mov
or
std
dec
mov
scas
jb
pop
in
adc
cltd
outsl
pushf
cs
and
ljmp
mov
jmp
pop
add
add
divl
dec
push
cmpsl
inc
lret
sahf
jb
sub
in
push
jnp
push
and
mov
dec
fbstp
sbb
or
adc
push
insb
jmp
mov
and
lcall
jecxz
jo
push
xor
in
mov
int3
push
loope
bound
xchg
movsl
add
enter
xchg
add
sub
stos
movsl
ds
push
lds
mov
cwtl
fstl
clc
jmp
sti
stos
scas
or
sbb
int3
pop
lock
fwait
jbe
ret
fisubs
xlat
mov
xor
mov
mov
mov
aam
out
int3
repnz
or
jg
xchg
dec
jmp
jne
dec
or
add
sbb
aad
pop
popa
and
lcall
mov
xchg
push
pusha
insb
leave
push
lcall
popf
inc
fmuls
test
sbb
repz
cmpsb
cmp
out
mov
ret
and
stc
nop
js
add
fiadds
jmp
aad
xchg
pop
cmp
jno
jge
arpl
sub
ljmp
test
aad
add
clc
xchg
mov
dec
pop
jg
mov
icebp
or
and
cmovo
shr
jmp
movsb
mov
mov
jmp
arpl
test
ja
add
jl
jg
jmp
cld
ljmp
hlt
js
test
adc
inc
aas
pop
xchg
cli
xchg
leave
xchg
out
pop
sub
xor
mov
push
shlb
or
adc
add
cmp
mov
icebp
mov
jns
enter
or
push
cmpsl
int
imul
jmp
jmp
inc
movsb
adc
notl
jle
sbb
call
push
jge
cld
mov
mov
xchg
into
lods
or
fimull
arpl
cmp
scas
mov
jp
adcl
mov
sahf
xor
mov
ret
out
mov
dec
mov
push
cmpsb
cmp
cmp
push
mov
jle
xchg
cmc
lcall
sub
adc
leave
xor
xlat
lcall
pop
faddl
sub
and
adc
rcrl
out
xor
orl
imul
leave
rolb
jle
repnz
pop
adc
mov
mov
and
test
pop
mov
lret
out
aad
int3
lret
stos
mov
ss
sbbl
out
jmp
sub
jb
arpl
cmc
rcrl
ret
lcall
or
pop
dec
outsl
mov
jl
pop
xor
xchg
dec
aaa
rsqrtps
and
out
dec
mov
push
push
pop
dec
stos
jo
fwait
stc
je
cmp
xchg
lret
xchg
cmpsl
rcrl
or
lahf
adc
add
lcall
cli
ljmp
cli
or
dec
rcrl
pop
jg
and
mov
insl
ja
sub
mov
cmp
outsb
int
cmc
fs
shrb
jecxz
mov
bnd
or
sub
mov
cmp
sub
ja
jmp
inc
sbb
cmp
test
jmp
mov
push
or
adc
sti
icebp
add
mov
das
xor
and
orl
stc
lahf
xor
jmp
mov
and
outsb
push
popf
push
push
mov
jle
std
das
out
or
rcr
jg
insl
sbb
insb
and
fsubrl
stos
jbe
in
lahf
xchg
jno
leave
shrb
lahf
sbb
push
and
stos
jmp
push
mov
add
inc
test
lods
mov
inc
pop
fsubl
mov
out
sub
repnz
icebp
popf
daa
lods
sbb
in
push
incb
gs
xlat
cltd
std
mov
bound
loope
sti
lods
inc
sub
or
push
mov
repnz
jmp
movzwl
jns
stc
or
xlat
push
call
and
in
mov
call
adc
sti
dec
xor
fwait
sti
cmpb
sub
sbb
ds
inc
fwait
push
outsl
imul
daa
adc
xchg
repnz
loope
sub
cmp
mov
jl
jb
cwtl
sub
iret
mov
int3
stos
es
insl
sbb
add
leave
leave
je
pop
outsl
movsl
mov
ss
inc
push
pop
inc
pop
nop
rcl
add
pop
sub
call
fs
sbb
jmp
ss
pop
imul
jl
aam
xchg
xchg
jmp
mov
dec
movsl
cmc
dec
pop
cmp
mov
xor
rcrb
bound
or
push
cmp
jnp
mov
push
and
mov
pop
iret
cmp
cli
cmc
test
push
adc
or
cmp
lret
call
jnp
cwtl
and
inc
lods
jno
shll
mov
mov
fstl
divl
push
jb
andb
repnz
xchg
jl
mov
mov
mov
xchg
mov
popf
cltd
cmc
or
testl
adc
fcomps
jmp
adc
cmp
aaa
sub
dec
je
dec
mov
jbe
hlt
inc
into
jnp
ja
stos
ljmp
rcrl
pop
out
jle
mov
mov
xchg
popf
lods
lds
jmp
dec
jmp
dec
push
cmp
push
xchg
jp
leave
inc
or
ja
sbb
enter
out
cmp
fdivrs
xorb
lret
cmpsb
cmp
loopne
lret
add
aaa
fiaddl
inc
test
mov
mov
icebp
aaa
jo
clc
sahf
out
lahf
in
dec
sbb
jmp
out
cmp
xchg
gs
sbb
or
sub
cmp
adc
pop
sbb
pop
movsl
lds
cmp
inc
push
sub
pop
xchg
sub
lahf
stos
outsb
fadds
lret
jle
shrl
mov
push
stos
fcomps
pop
add
inc
inc
and
mov
loopne
insb
pop
xor
pop
stc
inc
pop
sub
dec
pop
pusha
cmp
sub
xchg
jnp
daa
test
fcmove
push
stos
pop
mov
inc
ret
jecxz
clc
push
popf
popa
jbe
cmpsl
lret
xchg
sub
fwait
jne
test
mov
inc
pop
xchg
mov
aad
ficoms
mov
mov
scas
jno
stos
loopne
push
test
jno
cmc
mov
push
stos
jae
cmp
mov
cmp
mov
int
sub
imul
pusha
lods
pop
push
or
inc
and
lcall
out
cmp
data16
sub
push
test
imul
push
test
scas
lcall
out
imul
data16
addps
inc
xchg
fnstenv
dec
mov
jg
je
out
vdivps
es
dec
notb
lahf
pop
pop
into
pop
es
shrl
test
insl
push
dec
mov
pop
xchg
sbb
add
mov
dec
test
cs
popa
aad
sbb
cmp
sub
mov
ror
xchg
add
jo
mov
shlb
incl
mov
pop
add
mov
sbb
mov
hlt
call
push
jae
push
fsubr
jb
scas
xchg
ret
mov
push
test
xlat
out
sub
in
insl
and
or
inc
and
popa
test
ja
clc
sub
pop
arpl
inc
sbb
xchg
jo
adc
dec
pop
mov
js
mov
xorl
loope
or
loopne
test
dec
mov
inc
enter
shrb
lahf
sbb
or
shld
shrl
pop
sub
inc
daa
mov
fadds
mov
dec
xchg
cmp
ds
and
and
sti
fwait
adc
xchg
loopne
js
mov
shr
clc
imul
push
sbb
mov
shll
sub
mov
fucomp
imul
daa
arpl
call
sti
arpl
or
outsl
test
ret
mov
dec
loope
sub
push
insb
fsts
xor
jns
in
inc
adc
mov
out
dec
inc
mov
push
jbe
inc
xor
pop
sbbl
ret
mov
dec
sar
es
jl
mov
xchg
pushf
js
fnstcw
data16
repz
push
mov
jmp
mov
jb
call
orb
inc
stc
inc
dec
inc
inc
mov
push
inc
sub
sti
xchg
jno
jmp
andb
push
push
mov
xchg
push
fdivs
ss
fwait
icebp
test
jmp
mov
std
cmp
xor
adc
pushf
and
fs
call
arpl
inc
aad
cmp
leave
nop
inc
lret
sbb
shll
shll
mov
sbb
sub
mov
call
into
fcom
jge
lods
outsb
mov
int3
cli
mov
jl
test
xchg
repnz
int
add
int
popf
in
test
leave
cwtl
outsl
pop
lods
nop
sbb
jo
push
bound
pop
mov
xchg
dec
cmc
lret
sahf
imul
lock
add
outsb
outsb
mov
pop
mov
lock
sub
push
xchg
dec
push
sti
testl
iret
jmp
jmp
mov
pop
cmp
xor
pop
mov
and
mov
mov
jmp
and
dec
pop
mov
popl
push
leave
test
mov
test
push
cmp
xchg
mov
inc
sbb
fucomip
in
std
sbb
pop
or
jns
and
popf
int
sahf
leave
insb
jge
dec
push
iret
xor
xchg
or
adcb
xchg
push
insl
ret
leave
pop
repz
cwtl
or
cmp
pusha
add
fidivl
pop
sub
jnp
call
jbe
mov
or
mov
je
fwait
push
mov
js
dec
scas
insl
mov
pop
andl
popa
pop
mov
sub
movsb
icebp
insb
cmc
dec
ret
rorl
jmp
negl
lret
pop
or
or
ja
daa
lcall
roll
arpl
jb
and
test
iret
cmp
and
sub
stos
pushf
call
call
stc
mov
pop
fildl
dec
test
lret
xchg
call
mov
sbb
lahf
jb
pop
ljmp
pop
fsubr
dec
or
inc
scas
xor
loopne
mov
push
aas
xchg
add
push
or
mov
in
xlat
mov
mov
mov
lret
bound
xor
inc
int
mov
ja
add
mov
push
cmc
sbbb
out
push
pop
ret
mov
aaa
sub
dec
mov
xlat
mov
fcompl
xchg
push
pop
test
mov
pusha
outsb
xor
sti
mov
fiadds
pop
les
pop
cmp
mov
or
imul
mov
dec
popf
cmpsl
dec
mov
inc
mov
adc
sahf
and
mov
xchg
jge
xor
clc
sub
mov
pop
push
ss
sbb
jae
or
fnstcw
xor
aam
adc
mov
jg
daa
fs
outsb
aad
stc
dec
ljmp
out
pop
loop
ja
lock
into
pop
in
jp
mov
inc
clc
pcmpgtw
xchg
or
sbb
xchg
mov
mov
outsl
lret
push
mov
adc
sub
lcall
ret
fwait
xor
mov
pop
addr16
jnp
mov
out
jb
shrb
sarl
loope
cmpsl
or
rorl
pop
push
push
mov
outsb
cmp
bound
cmp
outsl
inc
clc
sahf
addb
out
aad
or
movsl
lods
sbb
lods
or
xchg
into
gs
push
xor
sbb
loopne
fisubl
lds
or
aad
xchg
stos
inc
sbb
xchg
out
or
jge
push
insl
pop
adc
add
mov
ja
loopne
pushf
cwtl
cmpsb
lock
adc
xchg
lcall
jno
mov
in
cmpsl
push
xchg
montmul
cmpsb
ret
xor
insb
and
jo
sbb
shr
iret
andb
jbe
push
sub
sbb
pop
mov
jnp
inc
fmull
cmp
dec
scas
xchg
mov
dec
lahf
jns
xchg
sub
sub
mov
or
jle
push
aas
test
stos
mov
mov
pop
popa
clc
dec
inc
jmp
sahf
sub
sbb
lea
and
fsubrl
aaa
push
inc
pusha
mov
sbb
mov
xchg
stc
adc
mov
mov
push
call
in
outsl
daa
xchg
sub
jg
fs
popa
fdivs
or
call
and
pop
push
dec
movsl
lea
loopne
push
dec
pop
jge
xchg
xlat
outsb
insb
jne
mov
or
cs
icebp
pop
insl
shll
dec
and
jno
jp
rcrl
add
and
rcrl
xor
arpl
lret
add
insl
adc
or
jo
aam
pop
mov
add
hlt
add
lods
jne
pusha
mov
insb
and
movsb
cmp
pusha
lret
mov
sub
pop
ja
push
xor
je
lahf
or
in
dec
subb
adc
inc
sub
inc
pop
gs
sbb
lcall
lods
imul
call
sub
mov
cmpl
xchg
pop
push
sub
int
dec
loop
push
out
adc
repnz
push
lock
mov
sub
dec
jae
loope
sbb
arpl
mov
adcb
mov
out
jne
mov
sub
jo
mov
adc
xlat
outsb
and
subb
xlat
sbb
add
out
jge
cmp
add
repnz
or
adc
mov
adc
jae
push
hlt
adcb
cmp
scas
mov
in
insl
mov
mov
mov
xor
ss
pop
imul
mov
lock
cmp
aas
dec
hlt
dec
push
push
int
movsb
dec
rcrl
cltd
sub
xchg
and
loop
add
mov
insb
push
into
and
cmpsl
imul
adc
mov
jne
dec
mov
sahf
or
sub
pop
sbb
into
fdivs
add
cs
rclb
push
idivb
cmp
xor
sbbb
adc
sbb
xchg
jnp
enter
mov
push
dec
mov
test
pushf
mov
push
popf
push
push
fstpl
ja
mul
cmp
xlat
mov
dec
ljmp
push
sbb
mov
in
push
xor
xor
stos
dec
cld
cmp
dec
mov
jmp
sub
xor
outsb
inc
data16
push
cltd
insl
lods
test
push
hlt
xor
popf
in
fsubrp
lods
idiv
cmp
hlt
pusha
enter
jp
fcoms
test
test
and
mov
repnz
stos
mov
adc
xchg
ljmp
out
popa
or
testl
inc
ret
leave
pusha
hlt
sbb
pusha
xor
push
cmpsl
dec
mov
rorl
cwtl
repnz
loopne
insb
out
adc
addr16
adc
xchg
sub
subb
inc
or
dec
inc
xor
xlat
mov
pop
sub
lods
add
jnp
sub
dec
imul
cmpsb
push
data16
xchg
xchg
mov
dec
lahf
sahf
sub
mov
scas
pop
mov
mov
cmpsl
pop
jne
push
fstps
data16
lret
xchg
add
popa
enter
dec
imul
xor
xor
cmp
fcompl
out
sti
popa
push
int3
jbe
cmc
mov
add
push
mov
dec
or
push
mov
addr16
adc
movsb
xchg
or
loop
call
ss
in
jbe
shll
xchg
push
nop
lahf
and
rep
out
mulb
shll
push
icebp
jge
das
aad
or
sub
fsubrs
iret
pop
ja
xor
arpl
jbe
adcb
jns
js
popf
inc
movsl
xchg
imul
out
test
lea
leave
test
sub
imul
imull
movl
clc
leave
pusha
popa
mov
cltd
insl
into
loop
jmp
test
mov
insl
mov
push
mov
xchg
pop
roll
mov
mov
call
or
scas
mov
bound
adc
xchg
xor
sbb
enter
pop
testl
xor
mov
mov
pop
push
sub
mov
imul
and
imul
shl
pop
mov
inc
push
cmp
adc
jl
je
cltd
movsl
and
stos
sti
inc
pop
sub
dec
add
dec
cmp
inc
daa
in
adcl
mov
stos
xchg
add
push
repnz
mov
pusha
cmp
mov
jbe
push
adc
loopne
popf
push
lock
scas
jg
push
iret
into
mov
mov
dec
and
cltd
jp
xor
movsb
std
sbb
xlat
icebp
das
sbb
adc
bound
popf
xor
and
cli
fists
fldl
mov
lret
fnstenv
sub
dec
push
lock
or
das
jge
sti
bound
nop
out
popa
hlt
cmp
sbb
lret
pop
stos
inc
pusha
pop
fidivl
mov
jge
in
inc
inc
jecxz
pop
cmp
or
cs
fwait
call
inc
shrl
shlb
push
pusha
mov
sub
call
xor
movsb
xchg
mov
mov
cmp
and
inc
lods
out
ficoml
xor
sbb
lret
cmp
dec
in
pop
sub
adc
jle
xor
cmpsb
and
ret
in
xchg
dec
mov
jnp
xchg
or
mov
movsb
xor
subb
mov
sub
push
stos
and
push
fnsave
xchg
aad
ljmp
pop
clc
nop
mov
cmpsl
cld
stos
pop
scas
fcompl
xorl
and
jp
ret
or
lods
mov
enter
out
aas
push
mov
mov
mov
aas
lret
sub
or
fmul
fmull
mov
xor
mov
cwtl
dec
shl
mov
shll
add
mov
clc
imul
lock
xorb
sbb
imul
mov
jle
pop
sti
jl
mov
or
inc
out
in
out
aam
jle
sbb
loope
sbb
cli
subb
and
and
sub
jecxz
ljmp
cmpsl
loop
push
aam
rclb
fwait
icebp
sub
sub
das
sub
pop
dec
xlat
mov
xchg
dec
cmpsb
mov
adc
push
aaa
push
sub
jle
sbb
rorl
std
fwait
scas
sub
dec
xlat
js
lock
arpl
jp
std
jmp
lcall
jne
mov
xor
jb
inc
mov
shl
xchg
mov
jg
lcall
pusha
xor
push
dec
sub
sub
xchg
jge
pushf
dec
add
xchg
gs
xor
jne
sub
push
imul
pop
icebp
or
scas
in
pop
xor
inc
cmpsb
mov
sbb
mov
sub
cmc
push
sbb
rolb
idivl
or
xor
inc
jmp
mov
rcrl
push
enter
push
sti
stc
xchg
inc
mov
aas
outsb
scas
and
lcall
stos
add
rol
movsl
or
imul
dec
pop
xor
cli
cmp
fmul
mov
gs
cltd
jecxz
lea
cli
sbb
sbb
dec
pushf
imul
in
stos
add
or
adc
xor
mulb
jo
push
addr16
push
pop
ds
xlat
sub
ret
xchg
insb
push
push
xor
lea
cld
aaa
test
lock
pop
movsl
cmp
testb
pushf
pop
out
inc
cmp
inc
and
xchg
cmp
std
adc
pop
stos
mov
loopne
jns
sub
push
mov
sahf
sbb
jmp
movsl
add
mov
fcoms
jp
insb
inc
push
cmpsb
add
sbb
fstpl
clc
cmpsb
aas
mov
mov
clc
xor
inc
and
bound
cs
fadd
sub
in
ret
loopne
pop
test
leave
imul
sbb
dec
aam
fsub
test
repz
movsb
dec
add
rcll
fdivrs
arpl
std
fdivl
cmp
pop
xor
push
in
pushf
cmp
insb
mov
dec
mov
lret
inc
loop
icebp
rcrl
push
movsb
testl
mov
or
or
ficoms
mov
cmp
shl
mov
mov
fidivrs
sub
andb
mov
test
cs
mov
stos
icebp
mov
pop
mov
lret
shrl
test
inc
cmc
nop
push
fisubl
imul
add
add
sub
pop
inc
pusha
add
lret
fmuls
push
pop
inc
sbb
fisttps
xor
dec
sbb
in
negl
div
jnp
mov
mov
fcmovu
or
shlb
push
inc
mov
jno
ret
repz
inc
jl
pop
sahf
xor
popa
push
mov
and
ljmp
and
test
mov
mov
and
or
out
xchg
dec
dec
mov
dec
ds
mov
pop
and
sbb
xor
repnz
pop
mov
dec
repz
sbb
adc
arpl
lahf
lahf
fwait
jae
out
into
inc
aam
xchg
cmpsl
lea
add
sahf
out
adc
pusha
test
or
aam
push
cli
enter
icebp
adc
push
inc
sbb
inc
mov
push
pop
cmp
stc
ret
sub
cmp
sub
dec
mov
inc
lret
push
push
in
rcll
xchg
cli
mov
jne
sub
jge
push
cmpsl
ret
jp
out
jns
cmpsb
sub
adcb
fisubs
mov
sub
outsb
adcl
stc
repz
push
xchg
pusha
imull
or
hlt
imul
add
or
xor
fdivrl
inc
fcomps
mov
enter
adc
shll
sub
mov
xor
jl
lods
mov
in
jl
pusha
xor
inc
or
sbb
orb
nop
mov
and
sti
jmp
cmp
xor
clc
jae
movsl
mov
mov
adc
jo
or
mov
xchg
test
dec
or
mov
pop
sub
dec
adc
add
inc
lret
adc
mov
sahf
jne
stos
insb
xchg
movsl
cld
inc
mov
sub
movlps
dec
xchg
stos
int3
iret
lods
inc
ja
iret
fiadds
les
push
ret
shlb
adc
les
cmc
xchg
jl
add
jb
mov
ret
mov
aad
mov
aas
ret
or
push
sbb
imul
add
in
sarb
pusha
fistpl
pop
ljmp
mov
sub
das
xchg
xchg
mov
sti
and
adcl
and
es
in
das
js
add
enter
add
ljmp
push
cmp
sbb
push
add
test
jg
sbb
add
pop
xor
stos
push
ljmp
jno
insb
loop
sub
mov
rorb
sahf
jnp
dec
pop
lock
pop
mov
mov
fwait
push
and
or
test
orb
sbb
sub
sbb
mov
sub
es
aas
inc
repnz
out
sbbl
cmp
jne
jge
pop
cmp
ss
int3
lahf
mov
sub
mov
jns
xor
into
or
in
test
lods
jo
adc
add
sub
sub
bound
sbb
sahf
adc
std
loope
jmp
inc
mov
and
sub
clc
cmp
jmp
pop
aas
popf
ss
in
xor
mov
sub
fdivr
mov
lea
mov
xchg
and
jp
ret
ficoms
outsl
jnp
andl
adc
mov
add
repnz
pop
jl
xchg
inc
adc
cmp
or
mov
fucomi
incl
push
mov
xor
push
insl
popa
sub
sbb
int3
sbb
cmp
dec
sbb
repz
pop
lret
bound
imull
fsub
pop
sbb
fcomi
pop
out
or
cmp
xchg
dec
and
icebp
dec
fsts
iret
cwtl
subl
add
aad
push
mov
bound
nop
sbb
jg
fs
xchg
pushl
loopne
mov
jbe
fdivrp
mov
test
imul
int3
pop
loop
addr16
sub
lcall
dec
sbb
xchg
aaa
jle
xchg
jo
loopne
sbb
ficoml
jmp
loopne
repz
jnp
sbb
dec
sbb
scas
mov
fdivs
sarl
hlt
jno
icebp
or
mov
inc
iret
jnp
dec
out
addr16
push
lods
or
out
scas
inc
ss
dec
loop
push
push
jmp
imul
pop
stos
pop
inc
jmp
cmp
inc
jecxz
push
test
push
test
out
push
lock
mov
pop
push
add
push
cwtl
ret
test
ds
mov
mov
inc
sbb
dec
fimull
jge
ss
ret
xorl
call
sbb
mov
icebp
push
sbb
jmp
dec
jecxz
outsb
leave
loope
repnz
aad
mov
les
movsb
mov
cmpb
and
dec
push
arpl
inc
fmul
push
je
lods
cs
lret
xor
push
outsl
sub
repnz
sti
pop
add
mov
or
lret
xor
dec
popa
fdivrl
movsb
fstl
xor
mov
cmp
mov
xor
iret
jne
cmp
rcl
sbb
popf
outsl
cmp
dec
cmp
xchg
push
jl
jg
js
xor
sbb
imul
lock
rcr
outsl
add
rcr
jno
ja
push
data16
in
jmp
or
inc
xlat
sub
hlt
mov
aam
ljmp
dec
and
inc
shlb
pop
mov
pop
push
fsubrl
dec
nop
jge
mov
push
repnz
mov
and
add
ds
ret
or
xchg
nop
and
adc
mov
jne
push
cmc
out
pop
pop
dec
imul
adc
inc
ds
sbb
mov
cmpsb
dec
xabort
mov
dec
adc
jae
in
ja
js
push
imul
or
idivl
movsb
pop
xor
popf
add
shlb
out
cmp
dec
jmp
push
hlt
push
cmp
jmp
adc
movsb
outsl
in
pop
lret
aaa
jbe
jge
int3
mov
mov
or
push
cli
lcall
fstp
xchg
jecxz
in
sub
push
hlt
iret
test
pop
or
loope
ljmp
or
jmp
loope
jo
mov
jmp
or
movsl
sub
test
lcall
mov
xor
and
mov
insb
mov
mov
insb
cld
lcall
xchg
and
jmp
jne
repz
push
stos
sbb
ret
shrl
lods
push
fdivrs
push
push
xorb
adc
add
sbb
mov
or
repnz
dec
ds
fdivl
pop
pusha
xchg
add
js
jnp
fnstenv
mov
ds
adc
cwtl
and
pusha
sahf
fisttpll
shrb
out
add
cs
mov
stos
cmp
mov
imul
mov
subb
inc
inc
movsl
mov
outsl
mov
xchg
lods
cmp
xor
sub
add
cwtl
pop
push
hlt
mov
int3
xchg
and
jne
pop
mov
ljmp
aam
mov
xchg
je
xchg
arpl
adc
sub
sti
lahf
add
inc
and
sbb
movsb
aas
jae
fisubrs
int
in
cltd
push
pop
inc
std
sbb
imul
xchg
inc
bound
pop
fildll
repz
mov
mov
lret
mov
sbb
sahf
test
adc
bound
or
push
imul
out
imul
js
stc
or
cmp
sub
rcrl
orl
add
adc
sbb
std
aam
mov
jg
sub
add
pop
dec
xor
mov
xchg
cs
cltd
test
and
int
xchg
lret
sarl
cmc
pusha
lods
rclb
xchg
lret
or
xchg
mull
xchg
sbb
mov
loop
inc
fisttpll
cmp
push
shl
xchg
sbb
iret
mov
out
mov
fst
insb
test
std
pushf
adc
repz
hlt
test
xor
inc
dec
push
fdivs
orb
jge
mov
and
mov
jne
hlt
or
ljmp
xor
push
pop
pop
inc
fmull
jecxz
enter
insl
cmpsl
jp
popa
ret
int3
add
or
add
sbbl
pop
lods
cmc
mov
cmp
mov
jnp
pop
jno
sahf
mov
mov
shll
cs
xor
pop
test
int
int
jecxz
imul
call
cmpsl
mov
inc
inc
in
push
xchg
or
jo
scas
sub
cli
add
inc
mov
filds
xor
iret
pop
xchg
cmpsb
addr16
out
sbb
test
add
loope
cmp
cld
cld
lcall
and
pop
out
nop
sbb
jae
add
sub
xor
sti
sbb
push
test
cmpsb
cmpsl
and
sbb
jge
stos
dec
popl
aas
cmc
mov
push
adc
mov
arpl
push
lods
fdivrl
loope
cmp
xor
out
add
xchg
js
push
call
inc
adc
pop
push
orl
dec
jbe
mov
les
addr16
sub
or
lret
jae
mov
push
pop
ret
cli
mov
xor
push
xchg
loopne
pushf
ficomps
sahf
xor
lret
nop
cmp
cmp
cltd
popa
cmp
lcall
inc
int
shrl
add
jo
repnz
xchg
lods
cmpsl
dec
test
aam
aam
shrb
jge
mov
fmull
mov
mov
cmp
pop
roll
add
xchg
test
repnz
add
sub
or
push
or
mov
lahf
jne
mov
jmp
sbb
loopne,pn
pushf
pop
mov
xchg
mov
sbb
lcall
push
sbb
adc
dec
dec
roll
pop
push
mov
cmp
push
mov
iret
pop
mov
mull
jns
or
add
lea
roll
xlat
push
lret
out
push
xorb
int
clc
sub
sbbb
pop
mov
out
icebp
push
fildll
es
mov
inc
and
mov
xchg
mov
sbb
xor
xchg
pop
mov
add
push
xor
loop
loope
mov
mov
ljmp
jmp
or
dec
daa
xlat
pushf
lods
xor
out
lods
xchg
jno
cs
cmp
xor
cmpsl
cmp
shrb
scas
push
add
mov
lret
mov
jmp
sub
in
push
pop
inc
ret
rcrl
xor
jp
mov
fildll
xchg
nop
fists
test
adc
mov
test
mov
jmp
add
or
mov
pushf
test
ja
cmp
insb
rcl
jno
ljmp
mov
repz
in
adc
bound
or
movsl
aas
fdivrs
shrl
out
push
cwtl
imul
jb
cmp
inc
pop
lock
stc
mov
lahf
pop
sbb
jmp
sti
mov
push
jns
scas
xchg
push
loope
mov
mov
sti
xchg
push
xchg
sahf
pop
adcb
adc
movsb
ficompl
mov
xchg
test
data16
pop
in
xor
push
add
jnp
xchg
cli
movsl
es
push
inc
pop
daa
push
cmc
mov
push
push
jge
and
sub
mov
jge
inc
fsts
inc
inc
fsubs
jecxz
sbb
pop
inc
mov
and
fcmovu
nop
dec
sarb
fldenv
mov
test
or
push
loop
dec
and
popa
aad
cmpsb
cmp
adc
jle
inc
cmp
aaa
hlt
jp
xchg
adc
andl
cmc
je
add
iret
mov
movsb
and
loop
push
mov
sbb
test
jmp
mov
and
xchg
xchg
pop
scas
cmp
dec
shl
add
inc
cmp
popa
add
ds
add
jae
and
add
fimuls
nop
sbbb
jg
push
in
ja
inc
cld
icebp
movsl
pop
push
std
xchg
cmp
scas
das
lret
cld
cwtl
das
das
loopne
xor
xchg
add
inc
scas
idiv
pop
xchg
loop
add
add
cmpsb
repnz
or
das
mov
ja
jae
and
mov
hlt
in
push
push
cwtl
adc
loop
dec
call
inc
cwtl
imul
iret
xor
jl
add
in
test
push
scas
pop
movsb
sub
scas
sbb
mov
dec
movb
arpl
pop
aaa
mov
dec
mov
jmp
test
lret
sbb
mov
inc
sub
and
arpl
lret
movsb
mov
push
cmpsb
mov
clc
jp
mov
pop
mov
pop
mov
fwait
or
lea
pushf
xor
lcall
adc
test
mulb
and
pushf
int
dec
push
mov
outsb
xchg
sbb
cmc
sbb
mov
pop
pop
dec
ficompl
sbb
call
outsb
int
jl
sbbb
pushf
add
mov
xchg
lock
mov
fdivrl
push
pop
outsl
ja
popa
inc
adc
js
jecxz
outsb
jno
testb
cltd
cltd
nop
sub
mov
aam
or
ds
xlat
cmp
inc
mov
enter
push
sbbl
insl
aas
vaddpd
dec
leave
shll
cmp
push
int
in
push
sbb
fyl2x
lock
xor
sbb
mov
push
cmp
fildl
inc
or
fcoms
aam
mov
dec
cmpsb
jp
jmp
dec
jg
in
adc
mov
pop
xchg
fbstp
cmp
into
nop
xor
std
cmp
jb
ss
stos
mov
shll
dec
add
dec
mov
lcall
mov
xchg
inc
popf
adc
iret
and
in
test
cmp
jmp
mov
dec
xchg
sub
xor
bound
jae
xor
dec
xchg
lcall
cltd
aas
push
mov
iret
cs
nop
cs
jmp
aaa
sbb
mov
loopne
mov
jle
aas
or
arpl
jp
mov
imul
insb
or
imul
jnp
sbb
sti
in
into
push
pop
lahf
xchg
movsl
std
mov
testb
jle
scas
inc
jl
mov
pop
sub
repz
pop
repz
sbb
and
jne
inc
xchg
xor
xchg
xchg
or
mov
sub
fisubrs
adc
add
sub
inc
int
shll
jmp
call
sti
inc
pop
push
outsl
push
sbbb
mov
lods
imul
mov
mov
out
loopne
stc
adc
xor
mov
cmp
mov
sahf
push
add
ja
inc
movsl
es
pop
inc
int3
arpl
iret
inc
ljmp
xchg
sub
jne
sub
sti
dec
ret
cltd
xor
sbb
jae
push
jl
pop
jno
popf
fnstenv
fsubl
mov
cmpsl
aas
xor
xchg
sub
cmp
lahf
pushf
mov
inc
int3
dec
cmp
cmp
ja
repz
or
add
cmp
lea
jb
in
aam
xor
cwtl
loop
fcomps
fnstenv
and
adc
or
mov
fucomp
xor
pop
mov
mov
lds
leave
fisttpll
ret
mov
or
mov
xchg
jns
rcr
adc
inc
call
lea
mov
fstpt
nop
jge
pusha
scas
mov
push
movsl
mov
popa
fdivl
add
or
cld
push
or
fcomps
mov
adc
sbb
or
mov
add
mov
mov
add
out
cltd
mov
lret
or
mov
sbb
cmp
sbb
mov
mov
fnstsw
aad
inc
inc
push
and
xchg
push
aaa
lock
jne
sahf
xor
push
mov
mov
testb
dec
push
fcompl
arpl
sbb
pusha
inc
fsts
in
mov
pop
sahf
xor
pop
cli
mov
nop
je
int3
pop
ret
cmp
repnz
xlat
out
and
push
cs
movsb
inc
lcall
inc
in
loopne
pop
loop
shll
add
shrb
lret
cmpb
stos
fcmovbe
icebp
push
jbe
int
xchg
sub
lods
inc
jl
js
fs
cltd
mov
fisttps
mov
and
or
mov
mov
cltd
mov
loope
xor
fsubrs
inc
mov
jl
test
in
mov
mov
adc
inc
clc
xchg
mov
outsl
inc
pop
or
mov
add
jns
add
fwait
cmp
push
pop
push
mov
testb
aaa
rcrb
xor
add
push
cld
inc
scas
adc
sbbb
dec
cli
subl
dec
xlat
insb
stc
cmp
negl
or
or
adc
in
dec
leave
in
dec
mov
sahf
cmovnp
sbb
pop
jae
mov
andl
movsb
js
jge
xlat
jnp
mov
inc
cmc
mov
sbb
jo
xor
imul
lods
cld
mov
in
aaa
push
mov
sub
loop
adc
mov
mov
xor
paddb
xor
cmp
mov
addr16
cwtl
aad
mov
inc
std
test
cmp
movsl
add
inc
arpl
and
lahf
cltd
mov
dec
es
push
insb
dec
inc
aad
cmc
imul
sahf
test
mov
imul
leave
pusha
sub
mov
shll
dec
loope
pop
mov
les
mov
cmp
int3
bound
fbld
aaa
push
popa
movb
adc
out
sahf
mov
fwait
cmpsb
push
int
cmp
sbb
mov
push
in
xchg
std
mov
ret
jge
pop
add
popf
cmp
sbb
les
sbb
or
insb
lahf
inc
dec
fnstenv
add
dec
adc
pusha
repz
jbe
fidivrl
es
xchg
inc
lods
mov
or
jp
sub
inc
sbb
dec
aaa
fidivrl
mov
sti
loop
leave
jo
mov
scas
call
sbb
std
push
add
xor
lods
mov
dec
mov
fsubr
jb
aaa
cmpsb
push
sub
push
leave
xor
out
add
jmp
add
jnp
mov
jns
outsb
push
fadd
xchg
leave
test
push
and
mov
lret
dec
movsl
jno
lcall
inc
mov
lcall
fldt
lds
rep
sub
stc
nop
sub
js
imul
popa
dec
sahf
pop
jnp
rcrl
daa
mov
add
sbb
les
push
fsubl
iret
jecxz
jmp
xor
inc
fwait
and
mov
mov
inc
jmp
out
insl
lods
lods
pusha
cmc
sub
loop
imul
add
out
pop
mov
lahf
push
lods
pop
xchg
or
jge
vprotb
iret
mov
adc
jl
fs
xchg
cmpsl
xor
sbb
mov
rol
data16
ja
xchg
push
inc
fdivrs
mov
call
nop
sbb
mov
jno
cli
leave
je
mov
nop
jbe
pop
orl
cmp
adc
aad
xchg
ret
cmp
push
cld
fwait
adc
shr
push
stos
std
mov
xor
mov
jnp
mov
ret
arpl
jmp
aaa
push
cs
xchg
daa
mov
xchg
xor
jae
add
ficompl
or
mov
sbb
sub
imul
mov
lods
inc
or
sahf
lret
divl
data16
mov
cmp
jge
xor
in
sbb
aad
mov
arpl
cmp
cmpsb
inc
inc
cltd
cmp
fiadds
pop
int3
xor
cmpl
in
push
pop
xor
pushf
sti
push
rcrb
sbb
mov
add
je
into
ljmp
leave
movsl
fs
lea
and
adc
sbb
jae
and
aad
or
xchg
in
xchg
iret
xor
in
mov
mov
js
xor
out
xor
cli
mov
xor
ja
xorl
fstpl
cmp
or
xchg
adc
lcall
inc
bound
and
leave
xor
mov
add
notl
adc
push
xchg
gs
jae
xchg
push
push
mov
cli
test
aam
mov
push
in
adc
popa
push
mov
xchg
data16
or
and
idivl
adc
mov
add
bound
pop
push
lods
dec
test
pop
repnz
repnz
push
mov
popf
repz
iret
inc
jns
ja
push
jb
xor
push
fildll
push
mov
sub
loopne
pop
lret
xchg
dec
pop
xor
lret
cld
sar
lds
sub
stos
sub
jb
scas
inc
clc
or
or
or
fs
dec
ljmp
loopne
js
loop
gs
sub
lods
pop
sbb
jp
jl
mov
cmp
jecxz
nop
pop
jp
jae
pop
je
and
inc
out
andl
test
data16
fidivs
and
lock
outsl
jne
test
test
pop
icebp
fldl
or
and
push
push
or
pop
cmp
ss
and
out
fsubrl
jbe
mov
pop
repnz
mov
stos
sbb
mov
lret
and
lock
cmp
mov
shrb
pop
mov
xor
imul
pop
imulb
sahf
pop
fmuls
loope
arpl
add
jl
ja
test
mov
xor
push
push
leave
and
out
daa
subl
xor
dec
jmp
out
xchg
ficoms
sub
push
jl
mov
pop
imul
jno
outsb
xchg
inc
lret
push
xchg
stos
mov
jp
dec
or
jmp
aad
jb
int3
ss
iret
ss
inc
fimull
push
mov
mov
xchg
mov
add
mov
inc
mov
lock
mov
push
cmp
jbe
cld
jmp
cld
inc
test
outsl
push
inc
test
jns
xor
scas
mov
add
js
cltd
andl
xor
sub
scas
imul
jg
sbb
push
jae
sbb
mov
and
xchg
ds
mov
icebp
dec
xchg
mov
mov
push
in
inc
scas
stc
push
pop
addr16
sub
hlt
in
aad
jno
mov
jl
dec
sbb
dec
inc
lods
or
fmul
lods
and
pusha
aaa
int
pop
repz
je
lahf
pop
cs
mov
inc
enterw
lahf
pushw
mov
orl
repnz
insb
mov
scas
ds
pushf
scas
loop
push
enter
popa
jmp
adc
jg
test
icebp
mov
shlb
xchg
sub
inc
out
cmp
xor
pushf
lret
dec
aas
fwait
aas
and
sub
mov
adc
mov
in
aas
rclb
mov
rolb
and
imul
xchg
pop
mov
xchg
mov
in
xchg
les
adc
xchg
setns
iret
icebp
cmp
dec
iret
cmc
mov
loope
pop
cmpsb
scas
out
gs
loopne
mov
mov
out
insb
xchg
sub
filds
mov
xchg
sbb
mov
dec
mov
push
pop
sub
jle
xchg
pop
xchg
pop
jl
shrb
pop
rcrb
and
in
adc
std
popa
adc
xchg
sbb
idivl
push
xor
mov
out
dec
ret
hlt
js
outsb
sbbl
cmpsb
xorb
cmp
mov
mov
jg
iret
mov
mov
out
fmuls
dec
jmp
push
neg
dec
clc
or
jg
imul
fstps
cwtl
adc
and
pop
xor
mov
insb
and
xor
cs
imul
dec
add
xor
jb
cmp
xchg
iret
jmp
mov
fstpt
les
insb
add
lret
clc
mov
and
jge
cmp
popf
jg
xchg
inc
or
xor
dec
ficoms
aad
les
jp
pop
lods
xor
mov
cmp
fwait
xor
imul
out
jae
aad
push
sub
push
mov
xchg
fcomps
push
out
out
cmp
inc
cli
pop
adc
lea
mov
sbb
or
fstpl
les
int3
pop
aam
imul
xorl
lret
sbb
dec
int
push
int
movsb
cmp
or
mov
ret
in
leave
mov
shll
add
jnp
loop
add
pop
cmc
rcrb
gs
push
insl
mov
xor
fadd
addr16
jae
enter
jp
xchg
stos
outsb
addb
jns
push
sti
mov
adc
lret
pop
mov
cld
mov
in
xchg
les
mov
ja
xchg
push
mov
imul
push
repnz
fcoms
adc
push
or
cmpsl
aaa
lods
jmp
mov
test
pop
out
fstcw
add
dec
and
arpl
mov
into
xor
xchg
mov
or
pop
leave
test
mov
movsb
les
pop
sahf
fucompp
xchg
add
test
jae
fdivrs
xor
insl
add
leave
and
repz
jmp
jge
push
mov
pop
and
fstpt
add
ljmp
mov
adc
movsl
cmp
fisubrl
in
stos
sub
mov
or
shlb
frstor
mov
nop
shl
mov
pop
insb
pop
xor
cmp
lods
jp
andl
xor
fcmove
pop
mov
xor
cmp
mov
mov
inc
add
mov
ret
insb
je
das
cmpsl
mov
mov
insl
push
fldl
xchg
push
rep
mov
dec
push
jb
adc
leavew
xchg
lret
adc
sbb
scas
stos
jmp
popa
idivl
outsl
xor
adc
pop
xor
loopne
mov
rorl
loopne
xchg
mov
xchg
cmp
popf
sub
imul
adc
data16
push
nop
mov
cmpsb
leave
mov
movsl
stos
fbstp
imul
imul
push
inc
das
cmp
pusha
mov
push
mov
outsb
sub
aam
int3
aam
xchg
inc
and
loopne
dec
mov
jne
cmpl
sbb
lea
roll
adc
push
les
xchg
pop
mov
cs
cwtl
stos
pusha
or
stc
sub
rolb
rol
call
adc
je
insl
out
xchg
cs
inc
jo
cmp
ficoms
lcall
mov
mov
lret
dec
std
and
ret
lret
adc
xor
popf
inc
int
cld
inc
xor
dec
ljmp
outsb
adc
xchg
xor
push
cwtl
sti
cmp
fisubrs
sti
aaa
mov
data16
test
jg
leave
pop
or
cs
ret
ret
sti
sbb
mov
testb
sahf
jno
imul
scas
ret
hlt
movzbl
pop
icebp
dec
cmpsb
je
mov
jp
jae
fidivrs
xchg
gs
xor
out
test
mov
loopne
pop
shl
nop
addr16
mov
leave
mov
xor
cwtl
pop
jg
dec
aam
scas
ficoml
xchg
ret
test
mov
dec
mov
and
sbb
ret
and
mov
jp
mov
mov
xor
add
add
cmp
push
call
mov
xor
outsl
adc
scas
andl
xchg
or
inc
push
insb
jecxz
add
insl
test
pop
xchg
shll
add
mov
les
cmpsl
cmpsb
mov
insl
cmp
mov
add
lods
repnz
call
addr16
pop
mov
aas
mov
push
mov
or
cli
mov
in
stc
jmp
pop
lret
add
mov
aad
scas
pop
xchg
fdivrs
das
cld
push
pop
pushf
cmc
adc
fstps
repz
push
mov
leave
and
enter
call
sti
pop
dec
dec
pop
dec
xorb
mov
mov
push
aad
fisubs
bound
ljmp
xor
pushf
pushf
jmp
ljmp
jl
add
pop
mov
add
sub
mov
pop
mov
es
mov
pop
jmp
push
in
lods
inc
and
mov
je
cli
clc
fsts
mov
jmp
daa
pop
inc
push
mov
xchg
inc
sbb
push
or
push
mov
loope
and
testl
jbe
push
sub
dec
adc
mov
fs
mov
repnz
daa
sub
sbb
push
or
mov
cmpsl
add
outsl
adc
or
das
pusha
jb
jbe
cmp
std
cwtl
fmull
movl
pop
jns
jle
bound
imul
mov
or
xlat
xchg
insb
inc
sub
shrl
fsts
scas
pop
xchg
and
xchg
and
scas
xlat
mov
test
std
bound
add
test
push
jae
push
out
loop
pop
sub
pop
addr16
mov
add
movsb
inc
mull
shll
dec
fbstp
mov
cmp
stos
add
mov
mov
or
dec
fidivl
addr16
xor
xchg
cmp
loope
mov
xchg
daa
sar
call
push
std
or
outsl
mov
mov
test
mov
stc
stos
xchg
sub
push
dec
lock
lahf
mov
sub
mov
lds
insb
add
jno
imul
fwait
xor
addr16
pusha
mov
mov
sbbl
add
pop
mov
int
jl
xor
jo
jb
add
enter
jne
pop
or
lahf
cltd
jl
inc
mov
hlt
jg
mov
adc
push
ss
sub
je
push
sub
cmc
mov
std
dec
xchg
cmp
mov
imul
jmp
push
cwtl
jnp
sub
aad
les
out
cmp
xchg
mov
popf
hlt
dec
pushf
sbb
leave
iret
mov
inc
stos
negl
test
fsubrl
dec
mov
lret
dec
cmp
mov
mov
loopne
js
jno
sbb
enter
jl
cld
xchg
sbb
dec
popf
int3
insb
sbb
adc
add
jp
mov
or
inc
lds
xchg
jne
sti
cmpsb
sbb
scas
and
dec
arpl
sbb
jb
les
ss
mov
rep
icebp
enter
xlat
or
adc
pop
inc
pop
mov
cltd
scas
xor
leave
pusha
push
mov
divl
jmp
daa
je
daa
inc
pop
aas
scas
call
dec
mov
jecxz
ret
int3
fidivl
fwait
shr
inc
jne
popf
mov
fucom
push
push
cltd
repz
out
lret
mov
inc
jl
mov
cwtl
mov
cmp
dec
out
xchg
xlat
outsb
or
cmc
jle
out
les
in
rclb
cmp
dec
popa
mov
fcoml
decl
daa
mov
js
in
mov
repz
stc
add
xchg
xchg
ljmp
lods
inc
lret
popf
cmp
test
push
je
jmp
inc
sahf
pop
inc
sbb
sub
xchg
hlt
sbb
mov
jno
loope
repz
fcmovnb
cld
aas
cmpsb
inc
push
lods
jo
aaa
cmp
push
call
dec
das
pop
add
hlt
inc
xchg
sub
inc
fstpt
aas
xchg
vpcmpeqb
stos
mov
or
xchg
jmp
mov
pushw
mov
lock
xor
dec
or
out
ret
mov
sbb
xchg
and
sbb
divb
adc
ja
mov
cltd
notl
aam
jp
mov
into
out
imul
jecxz
mov
push
cmpsl
push
push
daa
mov
push
cmp
xor
or
mov
add
shll
adc
xor
xchg
push
pop
cmp
mov
mov
shl
jmp
push
xchg
sub
sbb
and
inc
fbstp
inc
push
outsl
loop
std
jnp
ljmp
add
sbb
mov
lret
cmp
lcall
lcall
push
negl
sar
movsl
mov
testl
push
jmp
dec
adc
negb
mov
je
jno
jb
fs
lods
dec
adc
rorb
push
jbe
mov
mov
loope
pop
jp
xchg
or
lahf
in
inc
lds
aaa
mov
lret
sahf
inc
dec
cmc
xchg
jmp
xchg
jg
pushf
xchg
mov
and
cwtl
insb
fnstsw
mov
and
mov
jecxz
mov
sub
inc
and
inc
inc
mov
pop
rorb
add
data16
fmull
test
gs
loope
loop
pop
xchg
aas
mov
xchg
mov
add
dec
or
adc
outsb
dec
hlt
jnp
pop
xor
les
insl
sub
clc
add
dec
mov
sub
add
push
out
test
jl
mov
lcall
sti
iret
sbb
or
leave
aas
and
hlt
dec
sbb
enter
sub
subb
daa
and
pop
pop
push
mov
outsb
ret
aam
sub
lods
mov
jns
push
out
lret
and
lahf
pop
cld
lcall
push
mov
cmp
xchg
sbbl
cmp
hlt
sbb
push
mov
cli
jne
xchg
push
leave
or
imul
jp
xor
pop
in
inc
cld
addr16
fs
insb
filds
sub
in
test
cmpsb
push
fnsave
jle
daa
pop
push
jl
les
adc
dec
sub
pop
push
out
xor
fnstenv
lahf
movsb
leave
fsubs
test
push
mov
sahf
push
push
adc
jne
repnz
fsubrs
push
es
out
sbb
out
push
mov
lock
in
jnp
jo
pushl
cwtl
xor
test
lret
fcomi
mov
or
jb
lds
les
rcll
mov
mov
pop
cmp
mov
repz
adc
mov
ja
ja
pop
dec
or
dec
xor
or
sub
xchg
divl
sbb
insb
push
jmp
inc
dec
popf
dec
arpl
insl
mov
cltd
xlat
push
xorl
push
sahf
xor
sub
out
add
ljmp
mov
inc
pop
inc
sbb
ds
push
out
lret
add
pop
cmpsl
pop
out
xchg
dec
xchg
sub
mov
jmp
sub
mov
cmp
adc
xchg
jle
sub
and
jmp
hlt
test
cmp
cmpsl
jecxz
xchg
add
cld
scas
inc
loop
enter
out
imul
xchg
in
jno
pop
test
mov
lea
pop
in
rorl
sbb
mov
push
insl
ret
inc
fsub
lahf
out
cwtl
mov
pop
insb
int3
cmc
pop
cltd
fnstenv
loop
rclb
shrb
std
lock
gs
xchg
cli
lret
push
cmp
stos
insb
push
xchg
mov
inc
ja
jo
push
dec
mov
sub
cli
ret
sub
mov
scas
in
ret
in
cld
push
inc
movl
xchg
bound
fiaddl
aad
mov
jno
add
cmp
jecxz
repnz
fimull
testb
movsb
adc
sub
nop
ljmp
lock
mov
mov
xlat
cmpsl
mov
cmpsl
fldl
xchg
push
push
cmc
add
pop
mov
clc
xchg
ret
int3
add
xchg
sub
movsb
push
push
adc
movsl
sub
or
imul
pop
lret
cmc
lods
mov
or
dec
mov
addr16
pop
mov
xor
mov
lods
dec
dec
jne
pop
cmpsl
cs
fmul
and
jns
push
insb
sarb
and
fists
clc
and
js
push
aad
fldenv
scas
ja
loop
sbb
sbb
std
push
nop
push
lret
rcll
mov
xchg
cld
and
or
testl
sub
pop
loop
mov
fs
call
mov
jno
div
fwait
or
lret
repz
leave
xor
cmc
pop
test
imul
jecxz
xchg
jnp
leave
pop
mov
push
imul
lret
pop
dec
iret
jo
jb
push
xor
push
and
cli
mov
pop
jmp
pop
mov
dec
out
mov
into
adc
push
imul
fcompl
int
and
scas
pop
leave
movsb
das
add
clc
inc
or
int3
cmp
sub
clts
test
inc
push
mov
mov
sub
gs
mov
lret
cli
je
aaa
mov
mov
aam
rclb
pop
lgs
iret
cmp
fdivs
xor
jg
mov
push
pop
arpl
out
jg
sub
inc
inc
xchg
out
mov
push
mov
pop
xor
xchg
push
mov
clc
xor
jecxz
inc
sahf
sbb
test
pop
add
xor
fnstsw
pop
mov
mov
mov
scas
scas
clc
push
cwtl
sub
xor
sahf
call
mov
jbe
mov
ja
jp
pop
mov
add
imul
xchg
rcr
mov
and
insb
pop
stc
lret
lea
je
test
mov
daa
push
xor
mov
call
jle
gs
test
jle
insl
dec
pusha
lahf
in
leave
xchg
mov
aaa
pop
fiaddl
push
add
xor
xor
inc
inc
ficomps
sub
ficompl
test
shrl
stc
arpl
out
mov
fs
inc
push
scas
dec
xchg
mov
lret
lods
inc
stos
fwait
jp
cs
cmp
cmp
loop
pop
ficoml
mov
jp
or
in
outsl
cltd
frstor
inc
inc
push
pop
sub
cmp
mov
scas
sub
sbbl
pop
hlt
loopne
outsb
je
inc
push
and
cld
push
andb
fwait
pop
in
and
or
lods
push
dec
lods
inc
nop
adc
shrl
sbb
das
or
cld
pop
sub
inc
fistpll
cmp
stos
inc
push
jns
mov
aas
xchg
sub
lcall
pop
test
aad
cmp
inc
imul
in
push
pop
mov
mov
cmp
shrb
sub
sahf
xor
scas
jl
nop
outsb
das
aad
nop
test
rcrl
js
shl
dec
jge
cmc
imul
std
cs
or
leave
shll
push
in
mov
aas
dec
jp
decb
xchg
roll
movl
lret
in
mov
out
inc
aam
pop
loope
movsl
cld
xchg
pop
cwtl
test
pop
xor
pop
outsb
in
xchg
pop
cmp
push
mov
push
jg
sub
inc
iret
pop
mov
push
in
xor
push
ja
out
dec
into
sbb
aad
pop
mov
mov
fcomps
mov
pop
inc
push
insl
jbe
lds
pop
outsl
scas
xchg
push
adc
mov
imul
mov
mov
adc
adc
mov
leave
and
dec
imul
push
fbld
fildll
sub
dec
in
jns
scas
fs
popf
jo
ss
cwtl
movsl
xor
xchg
jns
stc
test
pop
ret
adc
mov
inc
push
jae
inc
adc
xor
decb
loop
mov
es
sarl
nop
pop
vunpckhpd
fsubr
and
repnz
sub
inc
cmp
cmp
pop
loope
add
cmp
iret
lock
in
cli
push
outsb
test
xchg
mov
inc
sub
jle
addr16
jne
jp
or
xorl
loope
mov
bound
add
addr16
and
sub
sti
jle
add
jne
scas
jno
adc
xor
fidivs
xor
inc
xchg
sar
add
nop
daa
or
sub
sub
xchg
pop
incl
test
jnp
add
add
inc
stos
add
and
out
jnp
inc
fdivrs
cmp
push
or
lods
mov
stos
daa
data16
fnstenv
or
push
or
aam
addr16
cmp
fistps
das
xorl
cmp
cld
and
xchg
xchg
push
pushf
popa
in
inc
out
adcb
mov
pop
push
pop
dec
jae
push
inc
scas
lods
out
or
mov
xchg
or
mov
decb
loope
sub
push
mov
clc
test
pop
test
sub
mov
cmovb
mov
jp
fnsave
les
pop
das
out
stc
jo
out
inc
popl
pop
and
leave
in
cmp
lods
sub
int
and
or
cld
stos
in
mov
in
loop
pop
xlat
leave
cmp
dec
dec
xchg
xor
push
notl
or
xchg
mov
mov
fsts
stos
shrb
pop
jle
jnp
ret
ljmp
push
imul
cmp
loope
pushf
fidivrl
nop
in
pop
icebp
sbb
dec
loop
aad
xchg
fnstenv
sub
loop
mov
das
mov
les
inc
stc
out
sahf
xor
mov
arpl
mov
cli
flds
xchg
xchg
sub
inc
mov
add
jae
and
andb
fistl
cmp
into
sub
adc
xor
xor
dec
outsb
ret
sbb
mov
add
ss
jns
inc
shll
and
daa
add
inc
pop
jbe
inc
sbb
lcall
jno
pop
hlt
fcmovbe
mov
sbb
sub
movsl
jo
test
push
cmp
xchg
dec
jecxz
push
push
mov
jg
mov
rcl
cwtl
int3
fmulp
fisttps
imul
and
jns
jg
mov
fstps
aam
mov
and
aad
enter
dec
pop
cmpsl
mov
cmpsl
xchg
cld
inc
xchg
lcall
addb
mov
arpl
push
test
insb
lods
cli
sbb
loopne
mov
clc
repz
xchg
fdivrl
fcmovnu
cmp
std
scas
or
lcall
jmp
test
xchg
sub
xlat
mov
out
je
aaa
stos
cmp
push
nop
inc
fadds
daa
or
add
mov
push
inc
pop
shll
mov
inc
jmp
jb
xchg
mov
push
and
divl
data16
je
imul
xchg
sub
sti
mov
cmpb
cmp
pop
xorl
push
mov
or
push
push
cltd
or
pusha
sarb
into
inc
scas
rcrb
sbb
pushf
sbbl
hlt
mov
sub
jns
pop
xchg
sbb
push
loope
je
dec
mov
push
aas
ret
aam
mov
pop
aam
or
cmp
cmc
xor
cltd
rorl
xor
mov
ljmp
int
sub
xorb
xchg
sbb
jmp
cmpsb
cmp
dec
or
cmp
in
fcmovnbe
mov
ja
cltd
test
call
fcoml
insb
out
test
fistpll
int3
lds
in
push
or
fidivrl
mov
xchg
push
mov
iret
das
andl
sub
inc
ds
jge
js
sbb
scas
xchg
sahf
pushf
out
or
loope
sub
jae
inc
push
xor
pop
dec
test
fs
por
nop
icebp
cmp
mov
into
mov
push
pop
mov
aam
jmp
rol
inc
mov
push
leave
fcmovnu
push
pop
ja
sti
in
fsubrl
mov
xor
ret
pop
or
mov
inc
mov
test
jnp
dec
lcall
fidivrl
jecxz
adc
sahf
jae
dec
xchg
jns
sbb
mov
mov
inc
mov
pop
mov
adc
mov
mov
bound
and
sbbl
jmp
daa
popf
arpl
cwtl
scas
push
adc
jmp
push
mov
mov
mov
in
sarl
roll
pop
rol
xor
pop
pop
inc
aaa
loop
rcr
repz
add
bound
mov
inc
outsl
repnz
daa
faddl
pop
xchg
jo
clc
sub
repnz
pop
lcall
loopnew
icebp
rclb
iret
ja
or
insl
and
adc
or
imul
jb
mov
sub
sahf
insl
jne
xor
in
test
gs
scas
in
aas
pop
push
jmp
loope
mov
loopne
cmpsb
xchg
sbb
test
in
bound
pop
sub
inc
adc
dec
out
shll
outsl
in
mov
outsb
incb
out
sbb
fs
xchg
std
rclb
test
add
lods
jo
cmpsl
pop
adc
negl
cmp
mov
mov
xor
mov
out
push
and
adc
ds
cmp
js
push
shl
aad
sbb
jnp
clc
pop
sbb
int3
int
sub
or
xchg
mov
clc
inc
outsb
imul
jmp
adc
pop
les
into
inc
cli
jecxz
xchg
aas
fldl
addb
jp
ja
and
cmpb
cmpsl
lds
or
mov
shl
idivl
stc
or
mov
pop
jmp
jp
or
inc
jmp
test
fwait
pop
repz
or
lret
mov
cld
push
mov
fsubrl
mov
mov
or
mov
add
outsb
test
inc
or
push
and
ja
push
sub
and
sbb
cmp
cmp
mov
mov
mov
sub
dec
out
xor
jmp
inc
fnstenv
aaa
lds
push
and
aad
mov
jge
add
jge
je
sbb
je
fs
jecxz
mov
adc
add
movsl
sub
pop
loopne
out
js
sbb
xor
insb
rcll
adc
gs
sbb
adc
sahf
xchg
enter
cld
call
pop
push
gs
jmp
repnz
std
popa
in
cmp
mov
cmp
stos
mov
jle
pop
test
mov
or
adc
rol
pop
add
and
push
xchg
or
inc
sbb
ss
sbb
mov
subl
ret
jae
and
dec
push
xchg
mov
andl
into
out
mov
or
mov
fisttpl
xchg
fucomip
test
bound
lods
mov
int
xchg
ret
sub
rclb
jmp
lds
mov
adcb
fcompl
cmpsl
ljmp
and
xlat
fiaddl
icebp
movb
sahf
mov
js
mov
xchg
push
push
dec
sar
inc
icebp
mov
xchg
push
inc
fwait
es
cmpsl
pop
inc
lods
arpl
cs
dec
into
lods
add
jne
scas
je
test
and
mov
push
inc
push
loopne
cmp
add
daa
sub
xchg
imul
jg
pop
movsl
mov
xchg
insl
adc
movsl
push
mov
sub
in
hlt
jbe
mov
insl
xorb
shl
data16
mov
xchg
incl
out
rolb
pop
mov
mov
add
sbb
shll
xor
dec
or
out
add
sub
cwtl
outsl
test
mov
enter
movsb
out
adc
cld
addr16
inc
dec
ds
mov
cli
pop
jb
push
imul
sub
test
adc
jb
adc
lea
mov
and
pushf
sarl
test
mov
push
mov
mov
add
sub
and
es
xlat
jmp
fwait
sti
mov
sub
xchg
mov
xchg
ljmp
adc
and
fs
cmp
jo
xchg
pop
les
fwait
inc
inc
cmc
jnp
js
ret
ret
aas
inc
into
sbb
push
fsubrs
pop
mov
push
clc
mov
sti
pop
push
outsl
cmp
jmp
push
out
leave
add
pop
mov
add
and
and
sub
aas
cmpsl
lahf
rcrb
jns
push
and
leave
or
lret
in
xor
pushf
addr16
or
testl
and
sbb
cmp
add
mov
or
xor
outsb
mov
mov
cmovns
aas
inc
sbb
and
clc
pop
inc
es
std
inc
inc
stos
cmp
xorb
pop
or
dec
adc
aaa
addr16
inc
fistps
ret
jno
jecxz
ja
xchg
and
test
int
cmpsb
cli
jb
shll
fld
jle
sti
mov
push
outsl
sub
xor
inc
mov
adc
shrl
sbb
push
sub
add
int
push
sub
and
jbe
xor
popa
xor
mov
rcll
and
sahf
dec
cmp
sbb
mov
adc
cli
push
jo
and
pop
adc
fistl
xchg
mov
cmpsb
dec
cmc
addr16
mov
leave
push
lds
gs
jl,pt
mov
cmp
int3
rol
neg
jb
dec
mov
adc
call
pop
lock
stc
add
aad
bound
xchg
mov
sbb
test
aaa
mov
or
sahf
subl
mulb
push
mov
jge
pop
add
mov
push
adc
inc
hlt
mov
das
mov
movl
arpl
jbe
and
mov
icebp
jmp
sub
jl
xor
inc
push
ficoml
movsl
mov
cmpsb
inc
lcall
test
lret
jns
and
adc
jecxz
xor
mov
jno
or
stos
inc
enter
mov
push
call
xchg
lret
testb
jae
xchg
xor
fimuls
enter
cmp
gs
push
sbb
sarb
sbb
loopne
inc
fwait
pop
decb
and
lar
xor
mov
cmp
mov
push
fnstenv
mov
sbbb
hlt
mov
insb
dec
cs
push
adc
jmp
jae
pop
sub
popf
dec
xchg
and
xchg
jo
sub
js
push
mov
int3
fs
pop
notb
and
dec
shlb
xchg
fldenv
add
aad
inc
pop
cmc
jl
popa
aam
sahf
jl
inc
aas
ja
or
test
int3
cmp
cwtl
scas
rclb
and
into
add
jp
bound
daa
inc
jecxz
aas
in
mov
lods
push
mov
adc
iret
push
xor
pop
loope
mov
xchg
lahf
push
test
push
dec
loopne
dec
das
push
push
hlt
sti
stc
mov
ret
add
rorb
add
xchg
xchg
inc
pushf
xchg
xchg
sbb
dec
jb
fldt
jecxz
shrb
shlb
or
mov
jle
int3
in
sub
out
cmp
push
jno
pop
sbbb
dec
test
in
stos
inc
add
fxch
sub
push
or
jo
mov
fstps
or
jg
sbb
push
pop
out
mov
xchg
adc
jle
in
xchg
nop
fsubrp
and
lahf
stos
lock
push
cmp
ret
cmp
lds
rolb
fisubrs
adc
sub
dec
mov
shrl
pop
lret
xor
dec
aam
jg
add
ljmp
insl
push
mov
rcr
out
cli
dec
stc
add
int
xchg
xor
and
dec
dec
xchg
pop
int3
lahf
imul
mov
inc
jg
sbb
inc
xchg
out
dec
cmp
cld
das
cmpsb
and
adcl
pop
jns
ja
es
mov
jnp
cmp
gs
jp
cltd
jns
iret
and
stos
pusha
divl
cmpsb
cmp
xchg
aaa
jae
jmp
jne
clc
and
and
sbb
xchg
repz
mov
xchg
or
jecxz
mov
xlat
mov
push
lahf
in
push
sbb
pop
insb
rolb
or
dec
mov
inc
push
inc
sti
lret
mov
fnstsw
imul
fcomi
xchg
ds
fwait
pop
std
movsb
dec
jo
in
xchg
daa
xor
adc
movsl
movsl
insb
test
pop
lea
dec
sbb
or
popl
ficoms
push
jne
adc
jnp
pop
popa
in
sub
sbb
mov
gs
adc
sbb
lds
jmp
push
push
pop
test
jno
sbb
fs
jg
fisttpll
mov
and
xchg
xor
mov
xchg
ja
push
push
out
hlt
repnz
pop
jbe
mov
enter
pop
lds
insl
jecxz
gs
mov
jne
mov
push
dec
fstps
xor
int
dec
push
pop
mov
iret
out
pop
lock
into
dec
in
into
and
pop
jne
jno
xor
mov
push
enter
into
jp
incl
rcll
fstps
and
add
dec
lahf
fnsave
inc
inc
or
cmp
jge
mov
cmpsb
loop
lds
xchg
jle
or
push
cmp
repnz
pop
mov
bound
test
or
add
int3
into
mov
call
xlat
push
jmp
sbb
es
outsb
ds
lods
mov
mov
mov
das
cmp
inc
xchg
sub
mov
leave
dec
mov
jno
imul
xchg
xorl
mov
popl
mov
outsl
scas
jle
cmp
cltd
dec
test
inc
stos
jecxz
add
and
dec
add
cld
xchg
mov
ja
cmpsb
int
push
inc
and
push
mov
push
xchg
rol
dec
cmp
cmpsl
mov
xlat
aad
sti
mov
pop
fcomps
insl
das
inc
lahf
jg
sub
push
mov
xchg
push
inc
cmp
scas
add
adc
outsb
jg
mov
pop
outsl
ftst
gs
mov
fstps
jmp
decb
push
mov
and
pop
mov
push
jecxz
add
jge
jecxz
pusha
cmp
fcomip
ret
pop
xor
fs
gs
xor
aam
mov
sbb
jb
hlt
xchg
in
xchg
imul
pop
movsl
jl
imul
sub
jae
clc
inc
mov
lahf
stos
jmp
clc
jae
orb
shr
repz
out
andl
push
aad
leave
mov
or
jl
sbb
jl
pusha
cmp
jb
add
ja
inc
xchg
jl
js
cmp
pop
add
out
xchg
jg
fldcw
push
lock
and
inc
push
jnp
call
daa
pop
dec
mov
xor
ret
dec
jecxz
lds
adc
lods
es
dec
cwtl
ja
mov
pop
insl
test
xchg
mov
sub
loop
push
test
add
xlat
mov
push
scas
mov
jo
sahf
add
sub
xor
jle
ss
xchg
dec
push
xlat
dec
push
inc
loopne
cwtl
cmp
inc
test
test
push
insl
dec
aad
mov
outsl
and
subl
outsb
mov
inc
cltd
adc
jle
mov
js
cmp
or
cmc
test
sbb
cmpsl
dec
mov
mov
and
sbb
cmpsl
bswap
cwtl
bound
or
into
shrb
cli
out
test
add
imulb
lret
negb
xchg
push
stos
data16
push
es
aas
inc
mov
adc
jnp
xchg
mov
or
pop
pop
jae
fcomps
or
out
jecxz
mov
stos
jbe
and
adc
jno
icebp
cmp
and
lret
pop
iret
in
cmp
test
add
mov
jmp
ja
out
adc
jg
jno
icebp
loop
sbb
add
xlat
repz
cwtl
and
lret
push
xor
cmp
xlat
sbb
push
sbb
push
aad
or
int
push
mov
xor
imul
dec
int
ljmp
xchg
sbb
sbb
sbb
lds
xor
add
add
cmp
jnp
test
or
mov
xor
imul
or
jo
push
aam
out
cld
pop
adc
jge
insl
je
add
mov
mov
les
adc
pop
jnp
add
aad
mov
shl
or
dec
sub
or
jnp
mov
stc
ds
popf
out
orps
mov
sub
pop
cmp
xchg
xlat
ret
loopne
dec
and
bound
cli
jo
add
mov
cltd
xor
sbb
addb
pop
adc
xchg
xchg
mov
adc
mov
cmc
xor
adc
push
sbb
icebp
and
les
pushf
daa
popa
stos
in
enter
xor
daa
mov
test
cld
pop
movsl
add
xor
enter
sbb
mov
rcll
fldt
pop
cmp
lret
stc
mov
push
push
sub
fwait
dec
ret
pusha
ljmp
or
or
or
and
dec
repnz
les
sub
pop
enter
jne
pop
enter
pop
sub
push
fwait
push
xchg
shrb
pop
cmp
and
dec
cmpsl
sub
cmp
and
stos
inc
xor
push
lret
imul
ret
sahf
negl
pop
add
inc
cli
sahf
lods
xchg
add
or
jnp
mov
xchg
sbb
pop
sub
push
push
aas
mov
cmp
dec
dec
fildll
jns
pop
and
jae
idivb
lds
lods
dec
mov
cmp
out
mov
mov
ss
inc
loop
mov
jecxz
gs
inc
and
inc
loopne
mov
fadd
xor
push
bound
lea
jl
pop
stos
jae
sti
xor
cmpl
popa
rcll
add
in
mov
cltd
xchg
ja
movsb
push
clc
cmp
inc
jb
and
mov
sbb
jg
movsb
mov
jl
cmpsl
jge
dec
sub
jb
fwait
pop
dec
mov
inc
and
sub
lock
mov
adc
dec
cltd
out
xacquire
or
aaa
into
imul
inc
stos
sub
test
cmp
jo
mov
cmp
push
imul
test
cs
out
push
mov
out
cmpsb
jne
or
xchg
xchg
add
mov
xchg
mov
add
inc
cmpsw
pop
in
inc
add
push
aam
add
xchg
sbb
sbb
add
xor
bound
push
inc
js
jg
scas
sarl
mov
outsl
mov
pop
cltd
cmp
daa
sub
xchg
pop
dec
adc
ljmp
jmp
test
push
xchg
cmp
adc
xchg
aam
inc
jo
inc
mov
xor
cmp
data16
pop
outsb
add
std
xor
fwait
cmp
sub
cmpsl
test
push
mov
jb
pop
adc
ja
nop
add
dec
fbld
push
enter
mov
mov
pop
popa
xorb
inc
je
push
xor
negl
sub
cmp
sub
sub
repnz
mov
cmp
jo
pop
sub
add
sub
outsl
fists
jmp
or
daa
and
iret
subb
pop
adc
les
mov
jne
pop
cmpsl
sbb
rolb
adc
jle
or
mov
mov
adc
adc
lock
lcall
and
lds
push
sbb
insb
je
test
push
mov
aam
inc
in
js
cwtl
dec
test
mov
xchg
adc
pop
les
test
pop
xchg
push
daa
ret
push
testl
jo
daa
jo
pop
lret
pop
or
fwait
es
inc
in
js
ljmp
mov
es
aad
push
pop
clc
xchg
test
adc
inc
jle
xchg
dec
lock
frstor
push
dec
rorl
loop
int
rcl
out
shrb
xor
std
xchg
xchg
rcr
movl
jg
movsl
nop
add
mov
aam
cmp
inc
adc
xor
sub
mov
ljmp
mov
push
daa
cmp
push
mov
or
movsb
mov
sbbl
lods
inc
es
test
sahf
pop
xor
jnp
js
js
pop
fcomi
fidivl
and
pusha
mov
cld
cmp
sub
outsb
test
xchg
test
inc
sbb
push
dec
das
les
push
test
loopne
test
fildll
mov
push
xor
lock
sbb
movsl
push
xchg
jmp
add
insb
fidivl
mov
inc
or
ja
sub
mov
mov
mov
mov
shrl
mov
add
aad
push
mov
or
fcomip
roll
jnp
push
in
int
sar
rcrb
push
xor
inc
aas
push
xchg
notl
xor
iret
jae
ltr
cli
insb
mov
cld
test
xor
test
cld
ds
int
pop
push
test
lods
cli
jo
test
cwtl
test
inc
daa
push
jbe
inc
push
shl
or
ljmp
jno
imul
mov
leave
xchg
rol
daa
repnz
mov
push
outsl
sub
xchg
stos
jo
roll
sub
popf
xor
jmp
jg
cmc
jne
in
clc
insl
popl
shrl
mov
out
rcrl
and
inc
add
add
cmp
mov
inc
pop
ficomps
int
insb
int
sbb
aad
fnstcw
xor
cmpsb
cmp
ja
les
clc
sub
fdivl
xorl
lock
adc
rcll
jecxz
fisubrs
and
adc
lds
das
jae
imul
adc
pop
jne
and
aas
push
movsb
dec
adc
pop
jge
xchg
xor
jae
and
mov
mov
and
add
push
jl
jmp
aam
sub
pop
fscale
sbb
mov
xchg
aad
imul
push
repnz
sahf
shr
ret
push
hlt
pop
clc
outsl
scas
pop
lret
adc
xor
jno
pop
repz
popf
hlt
mov
and
mov
mov
insb
shrl
pop
sbb
add
cmp
dec
fwait
xchg
cld
ljmp
dec
xchg
xchg
mov
fadd
js
jne
lock
fs
push
pop
loope
mov
je
push
jne
lods
rclb
push
push
jno
add
nop
xchg
sub
lods
imul
and
sbbb
inc
and
lods
inc
dec
int
xchg
cmp
pop
stc
push
stc
in
xchg
ds
mov
ficoms
repnz
iret
in
or
push
fiaddl
sahf
or
jg
sub
add
push
jno
sub
stos
outsl
sbb
sub
sbb
mov
sbb
shlb
stos
lret
out
sub
roll
mov
sbb
pop
movsb
xchg
jnp
cmc
xlat
mov
lods
pop
or
jns
xor
jns
repnz
inc
xchg
xor
dec
and
fiaddl
les
mov
and
xor
xchg
mov
cmp
lods
mov
jg
lock
and
xlat
mov
jns
outsb
fs
add
xor
mov
push
jg
mov
add
cwtl
or
invd
pop
dec
dec
shr
cmp
fdivrl
aas
inc
pop
bound
int3
shll
test
mov
push
lods
push
xchg
xorl
setle
push
adc
fnstenv
lahf
repnz
cltd
in
xor
popa
cld
add
insb
sti
adc
negl
add
insl
jnp
lods
test
add
lret
inc
test
cmpsl
lds
jmp
jns
data16
jb
mov
lds
mov
loop
mov
xor
mov
cmpsl
and
sbb
push
insl
test
sar
outsl
adcl
test
lods
arpl
das
pop
rcll
lret
dec
jl
mov
add
sub
aaa
sbb
mov
cltd
xchg
xchg
lcall
jl
or
sub
push
xchg
jns
add
lea
repnz
dec
test
mov
jbe
dec
pushf
mov
sub
outsb
lods
mov
adc
rcll
dec
and
repnz
pop
adc
addr16
mov
xlat
cs
xchg
jbe
mov
lret
test
xchg
pop
out
mov
jl
loopne
cld
inc
mov
inc
and
xlat
insl
hlt
imul
xor
xchg
sub
push
inc
xchg
scas
dec
xchg
push
adc
mov
cmp
xor
inc
dec
cmc
dec
scas
fdivl
or
daa
cmpl
jns
shll
or
add
nop
push
icebp
xchg
xor
addr16
fldenv
inc
or
xchg
mov
mov
outsb
add
inc
mov
and
shrl
repnz
nop
xor
dec
and
xchg
cmp
enter
xchg
test
add
popa
cmp
sbb
outsb
out
adc
lds
lock
iret
push
or
sub
jnp
adc
pop
cmp
push
xchg
imul
xchg
or
cmp
imul
dec
push
mov
inc
add
outsl
mov
add
pop
xor
pusha
lret
dec
out
adc
je
pop
outsb
in
repz
adcb
cmp
or
or
pop
test
icebp
pop
cwtl
dec
mov
arpl
imul
or
into
dec
jbe
xchg
sub
fildl
lods
cmp
sti
imul
push
xchg
cmp
fnsave
push
mov
in
rolb
das
xchg
cltd
and
aas
ror
lcall
ljmp
movsl
mov
ds
or
std
pop
xor
mov
imul
xchg
xor
jg
mov
les
mov
rcll
or
movsl
mov
xor
mov
std
popa
sbb
mov
fists
or
push
repz
push
nop
adc
ljmp
mov
lret
xor
retw
pop
movsl
sub
add
roll
js
dec
loopne
cltd
mov
pusha
mov
stos
lret
pop
jmp
mov
add
xchg
xchg
jg
mov
shll
mov
dec
in
jge
std
imulb
lods
lds
xchg
push
adc
mov
xor
call
or
jmp
sub
fnstenv
inc
das
std
je
fisttps
adc
inc
cmc
ds
test
out
xchg
sub
or
out
sbb
xchg
inc
jns
and
out
stos
imul
dec
sbb
cmp
jmp
scas
sbb
pusha
fcmovne
ja
push
xor
orb
test
fnstcw
or
cmp
lea
fcmovbe
cli
andl
or
data16
mov
jo
ljmp
sub
in
xchg
mov
sub
push
add
fst
xchg
repnz
cs
ja
stos
mov
leave
push
ds
iret
cmp
loope
fptan
dec
in
ss
dec
test
cmc
or
or
sub
pop
sub
std
fdivs
cmp
popf
pop
fmuls
les
adc
mov
leave
loopne
iret
jl
aad
lock
sbb
je
shll
ret
push
mov
repz
mov
add
mov
xchg
mov
sub
iret
jmp
sbb
fnsave
mov
test
xlat
clc
push
ss
sbb
addr16
push
mov
push
mov
jl
rcll
xchg
sub
sbb
test
scas
aas
ja
popa
clc
outsb
lret
push
out
cmp
pop
inc
lock
inc
arpl
xchg
and
dec
mov
cld
addl
aam
repz
lods
pop
out
mov
jp
push
jo
jo
pushw
mov
or
int
mov
out
add
mov
into
cmp
cs
pop
loopne
cmp
and
std
push
jge
call
xchg
js
push
push
nop
int
mov
xchg
sbb
push
popa
fs
notb
ja
pop
jl
and
fsubrs
mov
das
cs
mov
in
jecxz
push
cmc
pop
cmp
xchg
mov
movsb
push
jmp
push
outsl
in
pop
dec
mov
scas
imul
mov
cmp
inc
xchg
shlb
sbb
add
sbb
jne
std
cmp
inc
sub
pop
dec
sbb
stc
nop
sub
or
fnstenv
mov
insl
sbb
in
inc
lret
dec
dec
std
bound
movsb
push
jecxz
xor
xor
out
xchg
xor
ret
sahf
inc
pop
shl
mov
sub
jmp
insb
dec
adc
lods
cs
xchg
test
call
int3
lds
sub
cli
adcl
add
sub
subl
dec
pop
movsb
js
xchg
es
sbb
fsubrs
add
mov
mov
mov
ret
inc
mov
inc
cwtl
imul
stos
mov
cmpb
jns
idivb
pop
fiaddl
mov
in
mov
mov
adc
lcall
dec
fsubs
cmp
cld
push
and
xchg
pop
fstpl
out
jae
cmpsb
sarl
pushl
addb
mov
push
inc
sahf
push
jg
cmp
out
add
pop
lods
addr16
push
jg
daa
sub
cltd
jbe
jle
xor
pop
add
icebp
das
mov
popa
adc
rclb
jbe
sahf
adc
nop
inc
imul
fstl
scas
inc
out
dec
push
xchg
arpl
jl
cwtl
daa
outsl
es
xchg
scas
jmp
or
scas
lock
mov
adc
mov
adc
inc
pop
dec
int3
lret
inc
cltd
lea
cld
and
mov
mov
add
xchg
xor
and
arpl
inc
inc
adc
int3
lret
and
push
mov
clc
das
cmp
mov
outsl
aam
inc
pusha
aaa
xor
mov
cltd
icebp
sbbb
mov
adc
push
jo
popa
fs
aam
dec
xchg
lods
aam
push
adc
stos
jns
and
xor
sub
call
aas
gs
mov
pusha
xchg
push
add
push
or
lahf
imul
test
and
adc
or
push
push
imul
jbe
dec
ret
fs
xchg
cwtl
scas
push
fisubrl
inc
fisubl
bound
stos
xor
push
lahf
push
sub
mov
popf
fcmovnb
rclb
add
popa
and
dec
dec
xorl
pop
add
movsl
sbb
mov
dec
scas
leave
cmc
arpl
cld
adc
adc
add
xor
leave
pusha
cs
inc
aas
cli
push
xchg
sub
jb
mov
push
notb
pop
cmpsb
push
xor
mov
frstor
pusha
xchg
jge
les
std
frndint
xchg
or
in
xor
mov
or
sub
inc
xor
pushl
mov
jno
or
push
sbb
pop
fistl
sub
xchg
sub
mov
inc
push
and
mov
ja
shrb
jl
sbb
hlt
inc
mov
int3
jnp
push
mov
cltd
lret
or
cmc
pop
sarb
ljmp
xchg
jb
add
mov
or
ja
cmp
cmpsb
or
hlt
and
pop
fstl
stos
test
testl
push
mulb
mov
sub
sub
pop
loop
add
sahf
adc
imul
xchg
add
push
arpl
aaa
jo
or
push
lods
and
xchg
sub
mov
and
in
std
and
mov
cmp
lcall
and
mov
xor
or
test
das
fstl
sub
cwtl
repz
push
aam
fisubrs
in
cli
push
out
mov
into
mov
mov
arpl
sbb
lods
cli
aad
out
sbb
push
popa
mov
popa
in
clc
dec
inc
aad
xor
jae
cmp
jno
out
stos
jmp
push
cmpsl
jmp
mov
scas
push
ss
push
gs
arpl
jbe
leave
ss
test
rol
int
push
in
fdivl
xor
loopne
cmpb
dec
and
int
in
cli
cmpsb
aas
adc
daa
sti
mov
mov
or
mov
mov
adc
mov
xor
vunpcklps
loop
push
lock
ljmp
adc
pop
mulb
andl
jbe
or
and
and
movsb
pop
in
lea
aaa
daa
movsl
and
fcompl
imul
add
mov
es
test
adc
or
es
test
push
sti
sub
sub
sub
dec
xchg
mov
jns
mov
subss
orl
sub
mov
pop
jp
subl
xchg
dec
pop
fcmovbe
cmp
and
cmp
or
popa
cmc
cmp
adc
rcll
fcmovnbe
outsb
arpl
loopne
addr16
cmp
test
mov
xchg
mov
aas
mov
xchg
imul
pop
jne
cmp
mov
mov
and
jnp
test
sbb
ss
sbb
mov
add
es
movsl
movsb
cmp
cmp
sahf
cmpsb
ret
popf
loope
mov
dec
xchg
xchg
or
mov
xor
and
ljmp
mov
lcall
adc
cltd
in
inc
push
and
cmp
insb
shl
outsb
outsl
neg
jo
scas
push
fs
dec
in
enter
in
inc
push
int
add
push
lea
mov
fnsave
rorl
fnsave
push
xchg
mov
enter
or
jg
iret
orb
jns
lea
pusha
ss
and
jge
xchg
stos
inc
push
or
cmp
push
and
xchg
sbb
inc
mov
adc
test
test
add
push
lock
inc
outsl
fwait
es
mov
cmpsb
and
loope
mov
int3
lahf
push
sbb
add
cmp
mov
cmpsl
in
ret
repnz
cli
or
mov
pop
stos
mov
loop
mov
sahf
sbb
stc
or
xchg
cmp
dec
sbb
mov
cmp
mov
inc
les
add
jo
push
inc
jbe
aaa
arpl
push
cltd
scas
insl
dec
cmp
push
filds
call
dec
push
or
scas
jb
addb
sub
stc
stos
jle
out
pop
js
popf
sahf
push
and
icebp
out
cmpsl
sub
pop
repz
test
movsl
icebp
mov
fldcw
andl
pop
clc
dec
jae
xchg
mov
xor
adc
push
iret
cmc
in
dec
mov
pop
jnp
loop,pt
mov
jl
sub
in
add
int3
lret
add
inc
adc
mov
pop
push
test
imul
adc
add
xor
lods
mov
push
sbb
fwait
pop
addr16
fdivrl
push
repz
lea
mov
test
test
adc
arpl
jge
shll
std
lret
testl
jp
adc
rorl
pop
into
mov
call
or
inc
adc
mov
lods
pop
lcall
lods
mov
pop
shlb
inc
mov
ja
sti
insl
mov
pop
xchg
mov
mov
inc
jl
in
lds
outsl
std
pop
cwtl
ds
lock
popa
cmp
jo
mov
aam
mov
inc
outsl
cmp
in
iret
push
fadds
shll
xchg
jecxz
repnz
inc
mov
icebp
loopne
mov
movsl
inc
lds
pop
or
xchg
inc
sbb
leave
pop
fs
xor
mov
add
addb
and
daa
sbb
aam
addr16
mov
ret
test
mov
mov
jp
mov
mov
push
mov
inc
xor
xchg
stc
sub
and
sbb
call
xchg
test
andb
xor
lcall
mov
divl
mov
addr16
pop
fs
scas
jmp
out
adc
cmp
out
jnp
xchg
lret
sub
xchg
popf
pop
add
arpl
push
popf
push
adc
pop
cwtl
xchg
call
mov
inc
int
xor
xor
addb
cmp
sbb
cmp
push
incl
out
shl
xor
lods
xchg
stos
mov
jae
xor
in
xor
enter
lods
je
repz
sbb
out
ret
incb
or
in
std
xchg
pop
mov
shr
mov
mov
mov
cmp
ja
cmp
mov
push
xchg
ss
insl
cmc
xor
mov
out
inc
inc
loop
dec
imul
lods
add
stos
xchg
mov
push
in
rclb
pop
or
clc
cmc
fwait
xor
fidivs
pop
insl
jb
loop
mov
inc
in
das
cmp
mov
ja
popa
ret
pop
push
jno
pop
sub
pop
mov
dec
in
cmp
dec
repnz
mov
into
cwtl
inc
jae
push
fldpi
cmpl
pop
mov
pop
fildl
daa
cmp
mov
and
inc
mov
push
cltd
jae
sbb
repz
sub
mov
in
test
dec
cmp
pushf
scas
lods
stc
js
mov
loop
lcall
push
push
inc
popf
or
mov
push
repnz
loope
adcb
adc
mov
add
mov
sti
fxtract
push
outsb
mov
subb
ret
jge
es
and
mov
add
lds
icebp
adc
or
mov
je
mov
xchg
dec
cli
es
imul
push
or
xchg
push
mov
mov
mov
call
les
cs
gs
push
xor
or
cld
ds
ljmp
pop
movsl
cmp
push
jae
or
cmpsl
dec
out
dec
push
adc
imulb
mov
pop
stos
movsb
sti
pop
enter
insl
adc
pushf
cmp
sbb
stos
and
mov
push
mov
loopne
inc
add
scas
xchg
jp
cmp
jg
dec
jmp
mov
fistps
popa
pop
inc
std
lods
inc
addr16
ss
dec
xor
in
in
jne
lea
pop
inc
flds
in
movsl
mov
xchg
cmp
nop
in
mov
subb
out
jnp
lret
dec
dec
pop
jo
fsubrl
mov
icebp
je
sub
push
xchg
cmp
adc
jp
fidivrs
leave
dec
and
out
cmc
cmp
adc
int
lret
lret
push
jmp
cmp
out
sbb
dec
lods
cmpsl
dec
inc
jle
ja
mov
jb
test
and
pop
mov
scas
dec
dec
jns
insl
movb
test
mov
ljmp
popf
push
andl
fs
mov
xchg
or
mov
mov
enter
mov
add
push
in
jns
mov
jns
call
and
lods
std
in
insl
stc
sbb
aad
or
int
sub
add
pop
or
pop
loope
insl
mov
loopne
iret
pop
and
push
pop
cmp
icebp
scas
and
xor
test
and
or
lcall
inc
lods
dec
adc
sahf
jecxz
and
mov
sub
hlt
pop
cmc
inc
arpl
hlt
cmp
sbbb
mov
js
test
test
dec
cmp
adc
hlt
pop
mov
aam
jg
aam
jmp
push
jmp
jecxz
sbb
pop
dec
sbb
push
out
jp
adc
sti
repz
mov
xlat
icebp
or
pop
or
and
push
stc
push
mov
pop
cmp
jo
fdivs
loopne
mov
outsb
test
add
imul
lret
loop
jge
sub
in
clc
int3
scas
int3
sbb
xchg
adc
mov
pop
sbbl
push
movsl
fildll
pusha
pop
pop
ror
pop
hlt
xor
fwait
pushf
mov
outsl
addr16
inc
dec
push
mov
subl
dec
shrl
pop
ljmp
inc
sbb
add
mov
scas
and
mov
mov
pop
stc
stc
cmp
fstpl
xchg
icebp
test
adc
and
and
push
movsl
inc
cmp
xchg
add
test
sub
adc
xor
pushf
sub
adc
mov
insb
mov
and
ja
sarb
dec
in
push
jnp
mov
inc
xchg
les
mov
sub
ljmp
mov
rcrb
rcrl
popa
fbstp
ret
sbb
mov
jg
add
pop
test
loope
mov
sbb
gs
shrb
push
fs
enter
jo
pusha
int3
adcb
dec
fldenv
in
pop
test
mov
in
cmp
stc
lret
inc
jmp
and
fdivr
push
cmp
mov
adc
push
dec
mov
inc
cli
or
lret
ljmp
shlb
push
add
adc
imulb
adc
js
lret
mov
xor
jb
mov
subl
xchg
add
sbbl
lods
mov
test
cmp
cs
sub
test
test
push
add
adc
mov
mov
stos
fwait
das
mov
leave
data16
cli
inc
inc
push
jae
mov
pop
jp
sbb
cmp
jg
sbb
fiadds
test
push
or
je
jnp
loope
cmp
push
pop
dec
mov
outsb
mov
orb
daa
push
add
js
sbb
and
xchg
xchg
add
pop
imul
repz
sub
dec
mov
in
js
pushf
jmp
dec
fmull
inc
push
out
cmp
in
outsb
add
mov
jb
das
aam
dec
dec
inc
cmc
testb
fcomip
and
aam
arpl
jle
idivl
adc
dec
divb
test
mov
shr
and
mov
daa
cli
jb
pusha
lock
jl
orl
xchg
or
push
loop
inc
daa
add
ficoml
or
fsubrs
or
jno
lret
lahf
mov
pop
js
lods
es
repnz
xchg
push
test
cltd
mov
enter
push
movsl
sub
sarl
mov
int
sbb
jns
sarl
mov
sbb
js
fidivrl
push
adc
push
pushf
adc
jns
hlt
sub
test
or
sub
lcall
push
in
jne
push
enter
xor
out
and
jns
or
std
jg
xchg
jmp
push
je
fistps
adc
sbb
lock
icebp
mov
cltd
dec
fstpl
popa
xchg
add
je
or
jae
xchg
sub
mov
out
imul
loope
sub
ror
mov
out
cmpsl
sbb
mov
add
jmp
xor
jecxz
xor
jg
call
dec
add
lret
or
mov
lods
xchg
test
addr16
shll
pop
sbb
test
mov
dec
sbb
and
js
dec
jne
addr16
lods
test
enter
or
aad
icebp
xor
jmp
lret
ljmp
test
jbe
add
ja
insb
mov
ret
lret
mov
xor
in
mov
xlat
push
adc
popa
jl
in
int
mov
or
mov
push
cmpsb
cmp
xor
mov
sub
mov
jl
fs
mulb
jge
outsl
add
mov
cmp
or
outsl
loopne
dec
xlat
mov
in
jne
xlat
xor
xchg
sahf
jno
jmp
push
in
xor
bound
inc
xlat
adc
aad
pusha
sub
sbbb
dec
in
dec
lods
lahf
dec
dec
inc
cmc
in
xor
mov
mov
mov
js
push
mov
and
rolb
daa
add
dec
push
mov
add
pop
lods
jno
ficoms
insl
lcall
sub
data16
xchg
fmulp
mov
sbb
pop
adc
xchg
repz
xor
mov
adc
ljmp
jno
aas
add
push
test
addr16
xchg
icebp
movsl
fwait
pop
movsl
addb
push
pop
mov
xorl
or
push
mov
inc
pop
push
lds
loope
push
lcall
and
mov
push
dec
daa
jle
hlt
sbb
iret
push
xchg
dec
dec
arpl
popf
mov
fildll
push
jns
nop
adcl
pop
dec
mov
jne
loope
push
sahf
int
cmp
ret
mov
stc
lock
scas
inc
sti
cli
mov
loope
int
fsubp
rol
pop
add
jmp
dec
xchg
addr16
leave
add
std
sub
sbb
adc
cmp
cs
rolb
pop
aaa
outsb
push
dec
pop
jg
lret
shl
inc
jne
out
xchg
ljmp
test
sub
add
scas
lahf
push
mov
cmp
or
adc
fldl
xor
cltd
insl
repnz
and
es
inc
dec
enter
or
ja
sbb
repnz
aas
jge
jl
pop
rclb
mov
insb
add
jp
pop
pop
iret
sti
xchg
roll
cmp
or
fsubp
lret
scas
dec
sub
into
gs
mov
xor
into
sbb
scas
les
push
push
xlat
jp
lahf
lret
ljmp
aaa
fisubs
xorps
in
scas
incl
push
int3
fimuls
and
insl
cmpsb
xchg
pop
mov
test
xchg
push
outsl
mov
lds
inc
pop
insl
sti
dec
in
mov
mov
jno
jae
mov
dec
xchg
scas
js
stos
sbbl
inc
test
fsub
stos
fcmovu
mov
ftst
hlt
xchg
sub
adc
mov
mov
fisttpll
add
xlat
icebp
sub
pop
out
dec
add
shrl
xchg
bound
lret
rcrb
push
and
imul
pop
jbe
sub
mov
sub
daa
inc
adc
jne
mov
or
scas
test
jne
push
cmpsl
push
jne
xor
mov
inc
xor
clc
lahf
push
jae
mov
aam
stc
mov
repnz
call
orb
dec
fsubs
cmpl
nop
pop
or
push
lret
sti
push
stos
xchg
jg
hlt
mov
lcall
sbb
mov
subb
lahf
mov
rcll
es
js
out
mov
or
call
xchg
sub
cmp
ds
sub
adc
out
fcomps
orl
fidivl
int
lods
nop
jg
ror
fimuls
jno
push
lret
sub
pop
in
xchg
mov
dec
ds
and
jo
pop
pop
test
jmp
les
pop
mov
sub
and
mov
fiadds
std
jo
scas
jp
mov
pop
jg
jg
fs
arpl
mov
mov
push
cmp
mov
and
jge
or
add
aaa
cli
arpl
and
xchg
or
dec
mov
mov
pop
mov
scas
pop
and
cmp
hlt
mov
test
sbb
xchg
and
insb
cmpb
mov
jae
mov
adc
mov
adc
jbe
mov
loopne
cmpl
mov
mov
inc
roll
or
inc
dec
arpl
stos
jg
ficoml
xor
jb
pushf
and
js
cli
and
push
dec
and
mov
js
ss
fwait
addr16
mov
cld
adc
xor
xor
dec
jno,pt
out
mov
adc
push
jmp
push
fs
testb
inc
lea
or
add
sbb
xchg
dec
leave
mov
popf
daa
in
cmpsb
int
stos
jne
fcmovne
push
and
lds
or
pop
mov
call
jmp
or
ret
pop
adc
nop
bound
cld
and
and
aas
nop
incl
inc
inc
cmp
sbb
mov
test
or
ja
enter
ret
jecxz
adc
out
sbb
jge
push
aas
push
push
outsb
add
stos
push
mov
fsts
mov
and
inc
mov
sarl
loop
insb
notb
loopne
dec
push
std
sub
jns
and
mov
mov
mov
dec
fistpll
shll
xchg
ljmp
bound
hlt
xor
push
imul
pop
movl
or
adcb
sub
ds
cmp
stc
and
pop
fstps
cmp
or
pop
movsl
cmp
xchg
fcompl
les
push
jle
into
mov
xchg
call
or
mov
aaa
xchg
pop
xchg
in
add
aaa
lods
and
inc
jne
jbe
xor
push
adc
pop
cmpsl
rorb
mov
out
out
test
adc
hlt
dec
sub
out
insb
xchg
stos
mov
mov
inc
jge
jnp
outsl
and
add
imul
mov
out
pop
ret
es
push
mov
je
in
jae
push
adc
fidivs
adc
mov
fst
xrelease
sbb
icebp
js
int
js
sbbb
dec
sub
popf
push
mov
mov
testl
divb
inc
test
jg
xlat
shrb
nop
inc
in
hlt
mov
bound
fldcw
test
out
push
std
cltd
fidivrs
fsub
xor
adc
xor
mov
roll
or
pusha
in
push
and
mov
sbb
andl
or
xor
or
ds
inc
and
loop
mov
jo
fs
fisubrl
adc
inc
mov
mov
outsb
ds
aaa
push
arpl
adc
xor
jp
pop
out
pop
sar
fwait
mov
in
jo
push
fildl
jp
fcoml
xchg
push
mov
or
jecxz
fs
out
roll
lods
ss
pop
rcrl
sbbb
mov
cltd
pop
cld
gs
dec
or
pop
sahf
dec
jmp
push
jne
push
adc
dec
aad
call
push
rcll
xor
sub
aad
rorb
pop
rorl
xchg
dec
dec
popa
lcall
adc
inc
inc
sub
lahf
push
or
xorl
shl
bound
push
mov
xor
int3
sub
fs
inc
jl
push
jmp
aas
je
leave
cmp
inc
addb
ret
adc
sti
xchg
jge
in
mov
fs
mov
imul
loope
jo
xchg
rcl
sub
icebp
aaa
mov
out
adc
push
push
push
movsl
rcl
or
imul
cltd
cli
adc
daa
fistpll
pop
and
cli
adc
mov
ljmp
lock
mov
dec
pop
and
mov
sub
jo
mov
js
andl
cmp
dec
push
push
in
cmp
popa
xchg
adc
lea
jns
sub
sti
fwait
cld
add
sbbb
add
js
lahf
xor
push
mov
pop
das
jg
pop
mov
push
fcomip
xchg
rclb
ret
push
das
inc
aas
mov
and
push
adc
mov
outsb
dec
icebp
dec
repz
push
ret
loope
cmpsl
leave
pusha
fstps
sub
aas
out
jno
stos
lcall
xchg
xor
sub
xchg
pop
mov
adc
pop
and
cmp
sarl
inc
fmul
pop
bound
call
or
stc
sub
mov
mov
add
add
or
rcr
loopne
in
push
pop
sbb
and
insl
add
xchg
test
cmc
sbb
into
nop
cmp
out
in
xchg
lods
ret
ja
adc
xchg
pop
sub
data16
mov
xchg
int
xbegin
lea
test
ljmp
xchg
lods
sbb
cmp
lahf
cmp
imul
adcb
mov
dec
add
dec
inc
ret
in
dec
pop
sub
mov
pop
jmp
arpl
lock
adc
and
inc
daa
movsl
sbbl
push
xor
iret
ss
pop
jnp
gs
and
inc
mov
arpl
jb
test
jne
xchg
out
stos
out
sub
push
xchg
test
loop
push
lahf
test
cmp
imul
jae
xor
rcll
mov
jns
lret
notl
jle
fwait
divb
pop
jne
mov
xchg
mov
out
loop
push
imul
xchg
or
adc
loop
jmp
cmpsl
out
jp
loopne
scas
in
addr16
sub
jns
xchg
mov
mov
fadd
xlat
sbb
cmp
dec
in
adc
mov
sti
or
xor
lock
mov
in
xor
es
pop
xor
cltd
fadd
dec
push
ret
pop
push
jo
add
nop
cmpsl
xor
adc
daa
push
cs
lock
lods
mov
add
call
mov
ret
sub
testb
adc
out
xchg
adc
xchg
mov
jp
push
test
add
scas
xor
mov
mov
push
pop
inc
in
setno
insl
subb
jmp
je
pop
mov
and
jp
movsl
mov
inc
push
mov
dec
movsb
adc
addl
cs
cmp
dec
pop
clc
aas
jne
mov
mov
lcall
pop
insl
js
inc
cs
push
sub
inc
mov
imul
int3
push
gs
insl
aam
xchg
bound
jge
lea
lock
mov
repz
sti
fmull
int3
das
and
sarl
pusha
mov
in
cmp
mov
rcl
mov
mov
cmp
sbb
dec
mov
test
inc
in
dec
sbb
arpl
pushw
mov
in
test
mov
ret
sub
mov
jb
sub
jmp
ja
sub
pop
lock
punpcklbw
mov
mov
pop
mov
sbb
push
jmp
ja
ja
nop
ds
push
jno
imulb
sbb
clc
addr16
movsb
lods
rcl
std
shl
ret
add
sbb
mov
pop
cmp
mov
nop
daa
mov
xor
lret
cmp
mov
mov
out
bound
pop
lcall
xchg
xchg
sub
lret
mov
std
add
dec
xchg
into
sub
in
xchg
adc
push
stos
insb
xchg
add
push
xor
cmp
add
imull
test
std
or
fldenv
dec
adc
inc
ss
xor
enter
mov
dec
or
mov
jnp
dec
scas
ficompl
sbb
loope
or
es
rcll
cmpsl
nop
enter
movsl
out
cmc
dec
mov
sbb
adc
call
xchg
mov
inc
push
push
dec
xchg
repnz
aad
lods
and
jle
int
cmp
ds
dec
jle,pn
ret
add
cmp
scas
inc
push
imul
dec
pusha
int3
sub
nop
cmc
mov
dec
pavgw
adc
aaa
adc
leave
push
pop
and
inc
mov
nop
das
addr16
sbb
push
adc
jne
xlat
xor
mov
xor
dec
mov
mov
in
inc
xlat
push
stos
jmp
divb
xchg
xor
sub
sub
sbb
inc
pop
rcr
lock
pusha
xor
inc
adcl
add
ds
adc
stos
inc
adcl
scas
frstor
sti
ljmp
or
xchg
sub
rorb
push
shr
inc
cmp
pop
jno
push
mov
inc
loope
fdivrl
sub
lods
add
xor
mov
fmull
nop
and
sub
clc
scas
idiv
jae
inc
push
mov
pop
fisubrl
ja
call
repnz
shlb
pop
lock
popa
add
sbb
mov
je
mov
cmp
adc
sahf
mov
mov
shll
push
mov
stos
mov
cld
and
or
and
fsubl
xor
fyl2xp1
nop
or
add
fstpl
lea
outsb
hlt
xor
in
push
stos
jg
shlb
xchg
std
cwtl
das
sbb
jl
mov
loop
addr16
add
inc
jbe
cwtl
iret
jp
cmp
cltd
test
test
mov
inc
cltd
dec
mov
repz
inc
lock
ljmp
xchg
mov
mov
mov
sbb
pop
xlat
outsb
dec
mov
push
or
lahf
movsl
add
pop
xor
shll
insb
sahf
shrb
sbb
js
sub
and
dec
mov
lods
jbe
insl
push
sahf
sbb
dec
out
cmp
pop
in
pop
mov
jle
ret
mov
jl
jecxz
sarb
jle
nop
pop
shrl
out
shll
out
or
pop
xchg
shrl
movsb
cmp
out
jbe
inc
add
push
mov
xorb
push
ficoms
lock
inc
cmp
arpl
imul
cmp
pop
aas
add
sbb
stc
loop
daa
jmp
jns
jb
imul
mov
jbe
jge
cmp
push
icebp
in
out
jp
xor
mov
xchg
add
jo
jnp
xorb
xchg
fs
sub
and
push
movb
test
addb
sub
mov
push
mov
cmp
pop
addr16
inc
int3
adc
mov
mov
js
jno
adc
inc
xor
cmp
dec
stos
and
shlb
pop
test
inc
adc
repz
push
aaa
sub
adc
lock
addr16
adcl
mov
sti
add
loopne
mov
fmuls
mov
xchg
movsl
push
call
sbb
int3
repz
sarl
aad
shlb
or
xor
sbb
insl
mov
stc
push
xchg
clc
aas
ja
push
inc
packuswb
mov
cmc
ds
js
dec
lock
adc
int3
add
repz
dec
jmp
jno
std
mov
les
sub
call
cmpsl
loop
fdivs
ljmp
insb
and
ds
out
fpatan
sub
xchg
les
dec
gs
jnp
push
pop
jnp
das
lea
cld
lcall
push
popf
cmp
push
mov
cli
xor
ljmp
pop
dec
dec
mov
push
mov
or
or
xchg
sub
fbstp
pop
stc
inc
jbe
loopne
sbb
push
adcb
xor
aaa
pop
aaa
pop
push
repnz
sub
fidivs
jbe
stos
and
jg
cmp
pop
jns
inc
jne
je
xchg
and
repz
test
push
fdivrp
xor
loope
sub
sub
fdivl
jecxz
xor
dec
cmc
lods
adc
push
xchg
sub
cli
add
or
fsubrl
mov
mov
dec
shr
push
xor
xor
mov
jnp
clc
xchg
mov
add
sub
jmp
or
cli
adc
push
loope
enter
mov
xor
outsb
xor
outsl
mov
inc
jp
cmp
ret
fadds
sarl
push
in
cmpl
xorb
ret
pop
scas
pop
inc
test
in
jae
movsb
push
mov
ja
xchg
andb
mov
test
in
or
mov
fildll
mov
and
adc
xchg
mov
lods
mov
sbb
jp
push
cmpsl
cwtl
adcb
repnz
or
or
dec
push
les
fwait
enter
jo
push
testb
in
out
push
adcl
insb
jecxz
pop
icebp
jns
shld
or
adc
scas
cmp
jmp
les
mov
repnz
insl
xlat
test
mov
mov
xor
mov
adc
mov
mov
inc
jecxz
jmp
sub
adc
sahf
cs
push
jno
inc
dec
inc
dec
lds
and
pop
adcb
mov
in
arpl
test
popf
jno
sub
shrb
sub
mov
push
cmc
std
xor
outsl
insb
xor
out
jge
and
and
mov
cli
cmc
push
ljmp
inc
fld1
inc
outsb
inc
mov
sbb
sbb
ret
inc
sbb
js
dec
inc
sahf
cmc
cmc
fucomip
dec
roll
lret
and
jno
fwait
jecxz
mov
cmp
xor
out
mov
fldl
dec
ljmp
xchg
inc
into
cmpsb
cld
jge
sub
pusha
idivb
push
mov
xor
popf
nop
xor
jae
pusha
ss
adc
popf
sub
sbb
inc
adc
outsl
push
out
ja
push
fsubr
mov
mov
dec
mov
sbb
fdiv
inc
xchg
sarl
or
jl
add
and
insl
out
jmp
in
ret
fcmovnbe
sbb
sbb
pop
fucomip
lret
jnp
addr16
mov
outsl
outsb
add
popf
mov
or
loop
loopne
xchg
pop
ds
and
dec
and
lods
aaa
movsl
xor
pop
add
inc
dec
out
xchg
jno
addb
pop
movsl
icebp
rcrb
cmpl
cwtl
push
idivl
inc
loop
sbb
dec
out
push
add
loop
aas
jmp
icebp
loop
cmp
out
int3
dec
fsubrp
add
mov
fprem
or
imul
clc
or
movsl
das
in
test
sbb
jno
out
cmpsb
jns
dec
push
icebp
repnz
cld
mov
fadd
aad
out
jnp
ror
in
mov
mov
lods
pop
jl
rol
imul
popf
in
out
fcmovne
enter
mov
pusha
lahf
repnz
push
popa
mov
inc
xor
dec
std
in
in
sbb
mov
mov
and
shlb
mov
fs
mov
inc
test
fdivl
ss
and
bts
push
cmc
push
sub
test
and
repnz
paddb
pop
mov
leave
mov
pushf
sbb
mov
aad
mov
stos
inc
arpl
pop
cwtl
push
addl
fadds
testl
and
push
jmp
jge
inc
xor
in
dec
fcmovnb
nop
out
mov
xchg
outsb
rcrb
xchg
and
aad
loope,pt
jb
movsl
aaa
rcrb
fisttpll
lock
scas
lock
sub
cmp
sbb
sarl
mov
into
cwtl
test
movsb
imull
mov
cmpsl
sub
data16
xchg
push
sub
in
jns
cltd
stos
push
fcompl
adcb
orl
and
fcomps
nop
lahf
sbb
rolb
pop
dec
jmp
stc
rclb
lcall
and
cmp
incb
cmpsl
xchg
pop
sub
mov
test
lods
stc
dec
rol
pop
ja
cltd
pop
hlt
sbb
and
les
pop
push
jge
in
std
hlt
adc
xchg
adc
xor
add
cmp
mov
adc
cmp
mov
fidivrl
xorb
add
add
mov
mov
ljmp
outsb
or
insl
shll
leave
xlat
lret
xor
enter
adc
scas
dec
dec
lret
out
stos
int3
add
fsubs
xlat
jno
pop
add
int3
xchg
jl
push
sub
je
mov
stc
pop
arpl
and
popf
sub
add
cmp
stos
jns
pop
mov
mov
jp
mov
push
mov
adc
sbb
ljmp
lret
nop
jae
lods
push
inc
notb
fisttps
inc
sti
mov
sarl
push
aad
fadds
ret
cmpsl
in
lods
out
mov
xchg
out
into
jle
call
scas
xchg
repz
add
xor
or
jo
jne
bound
xchg
mov
int3
and
push
pop
imul
daa
sub
push
cmp
xor
adc
jecxz
jno
xor
cmp
xlat
inc
inc
push
ret
sbb
outsb
ror
mov
jae
push
movsl
lret
cli
in
xlat
sahf
pop
xchg
inc
cmp
nop
and
sbb
mov
loope
push
emms
enter
mov
pop
mov
add
push
xchg
movsl
cmp
scas
shrl
popf
ret
xchg
sub
dec
data16
jnp
arpl
adc
loop
testl
add
lea
sti
mov
outsl
std
or
push
mov
imul
push
sbb
add
jmp
jg
popf
pop
fisttpl
out
ljmp
push
jg
mov
dec
lods
outsl
test
pop
fimull
dec
inc
mov
pop
fwait
repnz
das
mov
scas
icebp
dec
lods
pop
int3
sub
pop
xor
in
jl
and
sbbb
cmp
sub
test
xchg
sbb
rorl
jne
idivb
mov
add
out
loop
mov
xlat
add
lret
stos
mov
loop
test
jg
into
adc
das
mov
out
dec
ss
pusha
loope
push
adc
push
mov
mov
test
dec
and
xchg
mov
notb
mov
push
imulb
jae
test
lret
cmp
dec
movsb
int3
xor
repz
test
mov
shll
dec
adc
ret
addr16
cmpsb
mov
or
cmp
pushf
jo
dec
int3
xchg
sub
jmp
dec
fwait
ss
sarb
fstpt
into
loopne
test
inc
rcrb
ret
inc
jns
adc
mov
stc
jnp
inc
pop
les
scas
pop
sbb
bound
out
das
jle
add
lds
mov
push
sahf
lock
mul
mov
daa
cmp
jne
das
pop
dec
mov
mov
shrb
aam
cltd
test
jl
imul
ss
add
mov
dec
out
jmp
inc
out
xlat
ja
pop
ret
dec
and
jo
mov
add
cli
or
inc
cmc
comiss
mov
inc
int
push
mov
faddp
dec
cmp
jbe
outsb
test
jnp
call
or
pop
jae
pop
lret
clc
and
loopne
xchg
test
xchg
rcr
movsl
repz
sbb
inc
aaa
mov
imul
mov
cmp
cmp
fidivs
mov
mov
dec
leave
lret
sahf
sbb
mov
fistl
fildl
enter
mov
imul
push
jle
loop
lahf
and
shr
push
lahf
das
outsl
out
cmpsb
aas
mov
dec
incl
mov
jb
mov
scas
push
and
pusha
sahf
mov
mov
mov
add
ret
push
xchg
out
add
sar
dec
push
adc
jmp
adc
sbb
sahf
lret
mov
out
push
sub
rclb
xchg
leave
fs
test
bnd
jle
or
jge
sbb
insb
leave
fdivrs
addb
out
push
or
cmp
mov
xor
or
jo
movsb
pusha
dec
leave
popf
adc
into
pop
stc
rcrb
jns
xor
jge
imull
movsb
outsb
inc
sub
and
sbb
outsb
test
xorl
daa
xor
pushf
bound
ds
inc
jno
testl
mov
pop
test
fsubl
pop
ret
sub
pop
pop
mov
sub
call
addr16
ljmp
adc
pushf
enter
icebp
stos
outsl
add
mov
add
mov
aad
add
test
icebp
adc
lock
or
pop
in
or
sbb
push
hlt
xlat
hlt
pop
add
xlat
mov
stos
movsb
sub
push
repz
fisubrs
mov
mov
les
jae
in
adc
dec
and
or
or
mov
fwait
push
jecxz
sub
lret
add
or
adc
jae
dec
xchg
fcompl
xchg
loopne
rol
das
fwait
push
sbb
pextrw
pop
fs
mov
xor
dec
jg
sahf
sub
jp
clc
and
sbb
push
notb
jg
ret
enter
pop
push
imul
push
inc
stos
xchg
xchg
mov
ds
stos
inc
loopne
loope
ds
push
jae
mov
mov
rorb
adc
jmp
or
sbbb
cmp
mov
lock
sub
aad
sbb
sub
insl
pop
mov
xchg
xchg
xchg
add
je
and
jnp
pop
cmpsb
jge
mov
add
pop
xchg
in
repnz
sub
test
mov
cld
and
aad
cltd
scas
push
cwtl
jno
sub
stos
cwtl
addl
cmp
icebp
lods
inc
and
das
inc
jns
lods
xchg
aad
or
mov
daa
inc
jo
add
xlat
ja
pop
adc
add
test
inc
ja
push
popa
jnp
sar
cltd
pop
or
sub
cmp
out
cmpsl
dec
jmp
fbstp
jp
outsl
inc
jp
xor
mov
iret
lock
js
jae
jo
ret
pop
push
push
addb
jl
jns
xlat
ljmp
mov
and
mov
test
fdivrs
imul
aas
lea
mov
and
shr
insl
lods
das
add
cs
pop
inc
xorl
sbb
scas
into
dec
mov
jo
mov
sbb
mov
or
push
je
mov
inc
lret
xor
inc
pop
in
mov
xchg
and
cmp
or
mov
repnz
push
push
ljmp
rcl
fsubrl
dec
sub
push
sbb
push
or
add
mov
and
jg
mov
pop
and
lock
cmpsl
xchg
or
xchg
mov
add
inc
and
cltd
xor
fmull
lret
and
shll
cmp
mov
fstpl
repnz
scas
std
push
adc
jg
call
pushf
scas
rcll
add
jb
sahf
cs
cli
pop
mov
gs
or
dec
push
push
jge
fsubrs
pop
scas
mov
sub
stc
bnd
add
jge
fwait
daa
jno
sarl
out
sbb
lods
ja
iret
ror
popa
addr16
pop
mov
xchg
adc
das
mov
push
xor
adc
add
ds
dec
jp
int3
adc
mov
add
or
pop
cmp
sahf
jne
dec
inc
cmp
adc
adc
shrb
add
cmp
es
mov
cwtl
push
xor
jbe
xchg
xor
cli
push
nop
push
pop
jae
mov
repnz
adc
cmp
nopl
pushf
push
lahf
mov
mov
ja
outsb
push
iret
loope
dec
popa
xor
push
cmpsl
jnp
or
add
sub
mov
mov
xchg
lcall
inc
les
in
inc
cmp
iret
dec
or
mov
cmpsb
inc
pop
cmp
testl
inc
and
xor
js
sbb
fadds
inc
gs
jno
fidivs
sbb
inc
adc
or
jne
lds
sbb
mov
dec
adc
mov
or
xchg
inc
stos
sbb
inc
sahf
pop
push
sub
fdiv
and
xor
jmp
in
je
icebp
cmpsb
decl
add
call
xlat
in
lds
jo
mov
sbb
in
mov
pusha
cmpb
test
flds
out
and
xchg
pop
pop
test
adc
lock
inc
fimuls
in
andl
test
xchg
out
lods
addr16
push
int
shll
sub
fildl
movsb
adc
push
in
push
pop
inc
pop
add
mov
xorl
sub
mov
add
dec
imul
in
dec
out
pop
jge
orl
or
lret
mov
mov
cmp
mov
cmc
mov
into
adc
or
and
ljmp
icebp
sti
repnz
arpl
jb
test
test
cmpl
lods
mov
xchg
adc
xchg
mov
shrl
mov
xchg
das
sbb
mov
out
inc
sbb
nop
pusha
jp
xor
push
xor
xchg
ds
jle
jecxz
sbb
in
xlat
cli
or
adc
movsb
xchg
sub
lds
dec
cli
add
daa
inc
or
loop
arpl
lea
out
pop
jnp
xor
sbb
adc
jl
jg
adc
or
data16
adc
mov
test
int3
mov
arpl
int
push
inc
xor
mov
inc
inc
je
iret
mov
adc
lahf
je
inc
pushf
nop
sub
mov
xchg
scas
in
inc
add
and
icebp
in
pushf
cltd
xor
add
out
mov
and
ret
adc
roll
mov
repz
testl
js
pop
aam
rolb
sub
pop
js
sbb
xchg
pop
icebp
fsubl
push
fwait
jnp
js
cs
and
test
fld
adc
mov
cmp
add
sarb
mov
stc
adc
sub
xlat
jbe
cmc
mov
xor
adc
es
outsb
sbb
test
enter
inc
popa
je
sub
mov
jbe
in
es
das
test
xor
fs
outsb
ss
push
enter
std
jo
sub
jge
cmpxchg
test
icebp
adc
aad
gs
push
xchg
cmp
stc
mov
idivb
fidivrl
das
cmpb
mov
mov
aas
xchg
jns
lret
and
jmp
jge
lea
mov
add
jecxz
imul
jp
insl
sub
and
mov
push
pop
stos
mov
add
fmul
mov
fwait
pop
sbb
outsb
iret
loop
pop
mov
rcrl
cmp
mov
mov
lea
jecxz
or
mov
test
je
cs
mov
push
xchg
iret
mov
data16
or
push
xchg
test
pop
int3
cmp
divb
out
and
jecxz
dec
xlat
outsb
inc
cltd
push
cltd
out
outsb
mov
aaa
mov
xchg
rclb
xchg
push
fs
ret
fldt
mov
pop
nop
and
adc
xchg
hlt
pop
mov
dec
mov
in
test
or
add
mov
mov
sbbl
pop
cmc
and
push
sahf
xchg
inc
jl
inc
mov
aas
xor
cmp
fsubs
dec
xchg
scas
faddp
outsb
call
inc
stos
mov
mov
int3
fs
push
ret
inc
cmp
pop
test
pop
dec
cmpsb
mov
cmp
inc
ret
push
push
sbb
push
xchg
mov
test
push
ret
inc
jle
xchg
test
fstpl
outsb
test
add
jae
jg
dec
dec
lock
movsl
ljmp
and
inc
dec
or
inc
dec
stos
and
lds
push
pop
mov
js
or
mov
stos
adc
adc
add
repz
out
xor
out
xchg
jl
or
xchg
cltd
add
dec
mov
pop
cmc
in
shl
push
jge
xchg
adc
pop
push
push
repnz
lods
or
mov
dec
xor
ljmp
xor
iret
out
or
inc
sbb
mov
das
call
ret
iret
mov
jmp
pop
cld
or
dec
push
scas
loop
add
mov
pop
lret
outsb
sub
and
push
push
jg
mov
mov
mov
in
cwtl
pop
insb
aam
xor
aam
aam
repz
xchg
mov
outsl
test
shlb
xchg
and
mov
or
aas
mov
ja
cmp
arpl
pop
mov
addl
mov
and
pop
fs
in
sub
enter
pop
pop
and
add
add
adcl
cltd
adc
ss
shlb
aas
das
lcall
scas
pop
push
and
jno
mov
aaa
cmc
enter
dec
add
xchg
lods
andb
outsl
lods
out
push
xor
push
cmp
mov
in
mov
xchg
dec
aas
sub
jo
adc
adc
or
sbb
xchg
mov
es
mov
mov
cmpsl
push
mov
mov
add
inc
xchg
fistpll
out
dec
xor
pop
cmp
push
mov
mov
clc
sbb
dec
shl
subb
xchg
sub
stc
pop
inc
cs
xor
dec
hlt
xor
dec
pop
mov
dec
pop
mov
pop
inc
stos
jg
adc
ss
add
pop
cmc
mov
cmp
es
call
lods
inc
jg
jns
into
loopne
jmp
add
out
mov
inc
jbe
loope
fisubl
cmp
xlat
ss
mov
or
shrl
lret
rol
sub
subb
push
scas
mov
adc
cmp
jo
jno
lret
mov
pop
mov
adc
mov
pop
or
xor
movsb
cmp
cmpl
gs
lahf
movsl
mov
or
or
repz
cmc
jg
je
js
pop
or
lahf
mov
out
andl
pop
das
cmp
divl
mov
adc
jge
outsl
pusha
cmpb
pop
ror
or
jecxz
bound
pop
push
cli
xor
xor
int
xlat
and
or
inc
push
lea
pusha
mov
jmp
aaa
int3
fisubs
scas
mov
xchg
mov
shll
into
xchg
outsb
lea
and
rorb
rcrb
push
int3
mov
ret
popa
inc
push
sub
std
bound
aam
or
cld
stc
xor
mov
mov
sbb
dec
stos
mov
sbb
dec
daa
mov
pop
xlat
mov
adc
pop
pop
lahf
stos
insb
push
jge
stos
imul
in
pusha
jnp
inc
lds
je
pop
push
push
adcl
jecxz
stos
int
sarl
push
push
dec
je
dec
sbb
addr16
mov
push
je
imul
dec
mov
jge
push
popf
dec
incl
lods
lds
lods
outsb
cs
out
cltd
insb
pop
out
or
cmp
in
jbe
fcomps
scas
out
lret
inc
cld
sarb
test
xchg
mov
mov
ficompl
mov
hlt
out
loope
xchg
nop
sub
sbb
or
mov
or
loope
out
lea
dec
das
sub
jmp
xlat
scas
mov
jle
mov
popf
ljmp
jbe
and
mov
out
xchg
out
adc
sub
dec
xchg
ret
sbb
dec
fildll
mov
xorw
xchg
dec
insl
push
inc
scas
pop
sub
test
scas
cmc
mov
add
jecxz
sbb
hlt
mov
shll
das
add
aam
jg
test
cli
nop
iret
int
fcoms
cs
inc
mov
inc
in
mov
add
lret
fsts
xchg
cmp
inc
xchg
mov
sbb
pop
ljmpw
sbb
push
pop
pop
sbb
inc
jbe
loopne
jns
out
inc
dec
scas
add
pop
in
adc
push
jecxz
pop
cmp
out
jns
or
cmp
dec
aaa
inc
repnz
stos
loopne
cmp
xchg
into
jle
ljmp
lods
inc
cli
mov
movl
out
adc
icebp
lahf
jge
lea
dec
mov
adc
push
iret
insb
mov
fwait
cmp
inc
nop
sbb
dec
test
sahf
ja
fwait
mov
xlat
loop
or
jle
movsl
xchg
add
daa
aad
fs
cwtl
sub
or
mov
cmp
push
movsl
js
xor
mov
out
loope
inc
scas
xchg
mov
test
out
mov
fs
pop
ljmp
sbb
pusha
popa
push
mov
mov
push
inc
data16
sbb
mov
aas
mov
or
mov
call
pop
mov
nop
fdivs
outsl
jge
stc
push
jno
ss
pop
adc
fists
loop
test
push
ja
xor
adc
pop
mov
mov
mov
shrl
jl
insl
mov
inc
out
sub
call
xchg
repz
push
inc
add
inc
inc
mov
push
mov
inc
push
cmc
sbb
fwait
xchg
inc
lret
outsb
adc
pop
ljmp
js,pt
jb
enter
and
out
fs
call
add
sub
jge
add
subl
adc
lods
and
shr
mov
inc
std
test
rcr
pop
repz
cmp
mov
or
into
fs
hlt
mov
stos
data16
fnsetpm(287
ficompl
mov
cmp
pop
push
call
adc
insl
dec
mov
gs
outsb
jae
ret
pop
rcrl
cmc
sbb
jmp
clc
push
shr
stc
sub
mov
cmc
push
shr
std
adc
mov
jmp
pushf
and
call
test
or
leave
mov
cwtl
mov
sub
cmp
inc
sbb
cltd
shlb
leave
int
cmp
repnz
mov
inc
inc
std
cli
scas
inc
ss
icebp
inc
orl
rclb
stos
mov
nop
mov
outsb
lods
or
int
cmpl
or
inc
ret
mov
mov
cmp
and
stc
lods
xchg
fisubl
dec
mov
pushf
cli
add
test
mov
nop
mov
sub
fs
das
sub
pop
lock
aam
cmp
dec
mov
icebp
cmpps
bnd
inc
mov
mov
dec
jecxz
mov
sub
xor
mov
inc
inc
or
or
mov
push
rcl
push
inc
pop
loop
mov
out
popf
ss
ss
into
sahf
push
cld
inc
out
and
ficompl
jo
aad
cmpb
imul
inc
or
addr16
lock
sub
test
xchg
mov
mov
and
leave
outsl
push
cli
sahf
repz
sub
push
jb
popa
int3
dec
fidivl
or
repnz
mov
es
out
scas
xchg
inc
cmpsl
cmp
xor
out
test
fidivrs
std
inc
into
dec
jg
push
fmull
mov
cmp
jmp
push
in
popf
cmc
cwtl
sub
fisubrs
sbb
into
push
divl
orb
bound
in
orl
in
pop
lods
jmp
pop
dec
push
loope
cmp
sti
push
pop
rcr
js
add
cmp
stos
stos
inc
fnsave
stc
shll
pop
or
cmp
daa
inc
sbb
and
add
pop
add
push
mov
divl
pop
xor
clc
mov
arpl
xchg
xor
sub
xchg
mov
leave
cmp
out
dec
scas
mov
or
inc
stos
push
and
jns
push
shll
dec
loope
mov
inc
nop
mov
and
fs
sti
ror
push
cmp
sbbb
test
movsl
sub
repz
stos
movsl
test
inc
imul
sbb
test
sub
aad
movsl
push
lods
push
insb
inc
xor
scas
push
adc
enter
int
pop
dec
and
xchg
xchg
scas
mov
mov
setbe
scas
jo
cmp
add
stos
sub
pushf
or
and
movsb
test
sar
or
movsb
sbb
or
jne
pop
cmpsl
inc
popa
fst
imul
dec
or
int
jae
icebp
pop
mov
jmp
and
xchg
inc
loope
jne
es
push
icebp
jb
out
xor
imul
cltd
cmp
scas
out
cld
jmp
int3
test
dec
daa
clc
nop
xchg
call
mov
jnp
into
mov
push
inc
pop
ss
mov
jne
and
or
jnp
xchg
dec
fsubs
test
test
repnz
jle
cmp
testb
jb
fcoms
pop
push
in
dec
push
arpl
cmpsl
bound
mov
pop
or
or
arpl
cmp
xchg
out
lods
cli
xchg
sbb
sarl
inc
rcr
fwait
dec
int3
inc
lahf
movsl
dec
sbb
lahf
xor
clc
hlt
cld
iret
cmpsb
test
mov
insl
iret
sbb
aas
mov
cmp
xchg
dec
outsl
outsb
add
push
test
xchg
in
jns
fimull
sbb
sub
pushf
push
das
mov
xchg
call
jae
addr16
mov
ficoms
test
mov
mov
jae
fwait
and
pop
mov
pop
push
sbb
mov
inc
aaa
fisubrl
fcmovne
jp
jmp
aaa
mov
pop
and
cmp
punpckldq
cmpsl
cmc
xchg
pop
lock
mov
pop
mov
lcall
add
xor
jle
nop
xor
lods
lcall
jbe
aas
mov
push
add
lods
jmp
movsb
loop
repz
rclb
xor
movsb
das
push
loop
std
mov
lea
bound
xchg
stos
call
sbb
imul
sbb
std
fwait
cmpsl
stos
mulb
adc
xor
shlb
sbb
int3
push
or
sbb
rcrl
adc
ret
pop
fwait
push
dec
mov
int
jns
dec
pop
stc
cmpsl
es
movsl
out
cmpl
stos
jmp
aaa
loop
push
mov
shll
and
rcll
push
xchg
jl
cmp
imulb
adcb
fcoml
dec
cmpsl
ds
loop
mov
push
jl
sub
jle
and
xchg
bound
ljmp
lea
leave
iret
pop
fcompl
ret
fucomip
jnp
mov
icebp
loop
stos
inc
cmp
jbe
pop
adc
pop
pop
lock
cmp
leave
push
xor
leave
xlat
es
mov
xchg
cmp
inc
shl
mov
jo
and
jg
xchg
inc
arpl
xorb
mov
test
mov
inc
repz
xor
inc
push
lahf
mov
xor
ljmp
imul
push
push
jno
int
hlt
lea
inc
xchg
mov
lret
jle
daa
mov
and
xchg
push
xor
popf
jecxz
mov
mov
push
xchg
arpl
cmpsl
xor
fsts
loop
inc
insb
outsl
push
aad
add
add
ret
jle
xor
add
and
outsb
out
fsubrs
cmp
js
iret
popf
mov
push
and
or
lcallw
mov
jmp
sahf
mov
seta
test
outsb
cmp
mov
sbb
rclb
mov
add
jb
test
push
sub
adc
mov
xor
cmpsb
scas
mov
lds
mov
pop
aaa
ret
push
jmpw
inc
mov
push
xchg
out
jb
and
lahf
scas
aad
inc
sbb
shl
push
sub
mov
int
and
loopne
call
repnz
cmp
or
mov
xor
call
jns
mov
fisttpll
xchg
inc
in
mov
in
jp
xchg
stos
jo
fcoml
mov
sbb
lret
push
in
test
xchg
andb
insl
fsubrs
xchg
mov
out
shl
insb
xlat
rcrl
push
stc
inc
pop
shl
xchg
mov
nop
int3
dec
scas
cmp
mov
shl
out
fsubrs
xchg
imul
or
xchg
decb
mov
cmp
pop
inc
push
adcl
sahf
adc
test
or
cmp
out
push
test
cmc
sub
sub
and
dec
lret
dec
stos
repz
jle
mov
fsubrl
dec
test
xchg
xchg
adc
cmp
inc
out
mov
jbe
jmp
mov
jne
js
cmpsl
insl
int
xchg
fstps
shrl
and
pop
xchg
mov
pusha
adc
dec
or
stos
inc
mov
ja
divl
testl
sub
dec
xlat
nop
int
dec
adc
mov
jo
jns
scas
out
dec
js
inc
bound
jmp
in
jbe
rep
adc
lcall
xchg
rcrb
es
lret
cmpsb
pop
fwait
sbb
push
and
lods
fistpl
or
jg
jnp
xchg
dec
sbb
loop
lods
inc
add
inc
fwait
lcall
inc
ljmp
fbld
and
shl
jno
test
push
sub
repnz
out
loope
lcall
std
stos
sub
sti
xlat
dec
pusha
inc
xchg
and
mov
cmpsb
mov
sub
jne
clc
xchg
xchg
pop
das
xchg
sahf
mov
leave
ljmp
pop
pop
cltd
push
adc
out
fwait
inc
cmp
xor
out
inc
mov
aaa
test
push
cmp
stc
mov
mov
xchg
into
xor
push
mov
hlt
into
sub
call
bound
call
mov
pop
lods
push
xchg
jp
clc
xor
sub
cmp
fwait
push
lea
icebp
jo
adc
flds
jmp
mov
inc
stmxcsr
int
pop
xor
movsb
insb
icebp
in
and
roll
ds
xchg
stos
push
sub
fisubrl
fs
stos
aad
mov
cmpsl
shrl
repz
jnp
mov
xchg
xchg
inc
in
test
xchg
xorl
je
je
sbbl
int3
movsb
data16
adc
adcl
dec
sub
xor
in
jp
imull
cmp
xor
aam
or
xchg
mov
inc
mov
inc
sub
mov
and
mov
stos
mov
into
cmp
lds
or
cli
jno
add
je
jle
imull
xor
push
aas
xchg
add
push
sub
daa
push
jg
leave
orb
sbb
invlpg
leave
cmp
lret
cmc
push
cmp
out
adc
xor
fwait
jbe
scas
call
xchg
push
mov
into
mov
movsl
std
mov
adc
adc
lock
cmc
and
xchg
fists
insb
or
jmp
ja
add
pop
dec
xor
fstps
gs
shll
icebp
loop
jp
aad
in
push
dec
or
jg
push
or
push
je
mov
cmp
dec
or
jnp
loopne
xchg
sub
cmp
mov
ficoml
imul
enter
lock
sysenter
cmp
adc
adc
icebp
addr16
call
mov
popf
inc
xchg
push
loopne
jmp
fiaddl
pushf
mov
stc
fnstsw
and
pushf
cmp
aaa
hlt
and
psraw
repz
add
mov
or
and
popf
out
push
mov
imul
mov
fidivs
add
fisttpl
mov
jne
rcl
sbb
pop
xchg
out
jo
mov
add
mov
xchg
mov
dec
out
dec
push
sbb
mov
je
dec
inc
ds
inc
sti
fwait
ljmp
xor
lods
loop
addr16
pop
inc
pop
add
rol
xor
push
out
lcall
stos
ret
jne
fiadds
test
notl
pop
ss
cli
or
mov
adc
popa
mov
add
in
jmp
mov
rolb
adc
popa
adc
jle
out
inc
bound
aaa
scas
mov
mov
mov
outsb
jl
hlt
fucomip
ret
mov
xor
insb
add
fcompl
push
mov
xor
inc
icebp
mov
inc
mov
pop
pop
inc
aad
pop
aam
sub
inc
imul
sub
or
sub
enter
jno
or
mov
pop
scas
fwait
push
js
add
jbe
pop
scas
sbb
xor
fs
mov
inc
mov
ljmp
push
lods
ds
inc
push
xor
mov
jo
mov
adc
mov
pop
call
cmp
pop
dec
inc
addb
popa
mov
aam
sbbb
mov
lods
push
and
aas
adc
sub
mov
push
push
pop
xor
lret
add
dec
sahf
push
xor
call
push
cwtl
pop
out
lahf
stos
inc
repz
icebp
in
loope
add
mov
or
scas
cli
xchg
loopne
or
gs
pop
lock
mov
add
outsb
mov
jp
ja
xor
lcall
adc
ds
dec
movsb
xchg
lcall
mov
dec
cli
lcall
sub
dec
and
adcb
adc
mov
and
mov
jbe
in
jmp
xchg
mov
insl
iret
mov
aad
xor
and
mov
xchg
jp
gs
mov
das
nop
sti
mov
sub
iret
fistpll
loop
insb
inc
cli
imul
jbe
add
pop
cmpsl
rcrl
and
out
mov
dec
out
imul
imul
jns
clc
or
ret
xchg
fstpt
dec
jl
xor
xor
movsl
push
push
out
mov
frstor
adc
pop
adc
mov
test
data16
or
cmpsb
out
mov
in
push
rcrl
daa
push
imul
imul
and
ss
movsl
lock
in
mov
aam
rcll
mov
pusha
adc
sbb
inc
fstl
or
inc
fwait
xor
add
adc
dec
pop
mov
dec
test
lods
loop
pop
fwait
clc
jmp
out
jecxz
aam
mov
sbb
jno
mov
mov
gs
xor
lods
test
mov
pop
pop
lret
dec
shlb
and
jbe
in
sbb
scas
dec
das
insb
sub
jge
loopne
cmp
pop
insb
xchg
dec
pop
notb
movsb
mov
dec
adc
xchg
sbb
and
mov
adc
popf
sub
out
sub
push
jno
or
movsl
js
add
or
push
push
std
dec
jp
in
jl
outsl
fldcw
lahf
mov
cmp
rorb
sbbb
imul
rcrb
lret
xor
pop
cltd
iret
dec
jmp
sti
pavgw
and
mov
xchg
xor
loop
fldcw
adc
mov
int
jecxz
xchg
mov
dec
aas
adc
popa
xor
fnsave
push
fcom
dec
fdivrl
mov
jge
in
xchg
jmp
inc
sti
or
aad
jno
push
jle
adc
fcomip
and
mov
inc
dec
in
fbstp
aam
insb
jl
stc
jnp
repz
xchg
sub
enter
lods
addr16
std
bound
mov
lcall
fwait
and
std
arpl
outsb
hlt
sbb
sbb
jnp
mov
mov
aad
dec
scas
inc
mov
pusha
fldt
xor
stos
push
fldl
dec
nop
mov
into
jmp
adc
or
out
rcrl
push
xchg
xchg
decb
mov
pusha
andb
jnp
and
dec
aaa
mov
icebp
cvtdq2ps
fildll
sahf
insl
adcb
daa
lock
inc
fnsave
mov
and
xor
push
and
xor
icebp
in
insl
aas
fwait
idivl
push
pop
and
enter
xchg
jmp
ret
xchg
cld
lcall
in
cmpl
sti
rcrb
test
pop
insl
fistps
outsb
xor
xchg
or
sbb
outsl
pop
mov
dec
pop
cmc
shrb
subb
push
cmc
imull
jbe
or
sbb
icebp
mov
and
lods
and
in
xchg
and
jmp
pop
test
sbb
sbb
pop
mov
or
jge
mov
jne
xor
push
inc
insl
mov
xor
push
mov
arpl
xor
push
repz
adc
popf
lahf
call
shr
cli
fnstsw
jecxz
aas
mov
push
out
sti
xor
jmp
popf
out
iret
cmpsl
out
in
pop
ds
shrl
mov
lds
hlt
mov
jns
xor
rcll
aas
dec
cltd
mov
or
roll
aaa
xchg
mov
outsl
adc
test
scas
in
std
sub
aad
xor
sbb
fstp
jmp
aas
sarl
mov
mov
enter
fldl
jae
inc
je
stc
add
sub
ret
repz
add
js
push
outsb
int3
xchg
pop
push
push
or
out
stos
ret
jnp
movsl
js
pop
sub
and
inc
outsl
cmpb
js
mov
movsb
pop
or
ret
ss
stos
fidivl
xor
xchg
addr16
push
sarl
cmp
pop
and
call
or
and
outsb
clc
push
and
cmp
ficomps
les
push
pop
push
dec
fcomi
ja
and
mov
mov
inc
cmpsl
bound
fsubr
idivl
pop
mov
repz
mov
iret
jle
and
daa
jl
test
je
stos
push
and
mov
push
fnsave
or
inc
lcall
movsb
push
enter
in
stos
in
int3
aas
adc
jnp
out
xchg
push
dec
jecxz
pop
sti
mov
add
pop
aas
cmp
cmp
sbb
mov
push
movsb
cmp
clc
xlat
clc
mov
lea
pop
scas
in
decl
sbb
notl
in
push
sbb
push
fsub
int3
pusha
pusha
test
xlat
push
out
or
sub
lea
sbb
or
dec
out
cltd
push
adc
dec
scas
add
imul
jno
testb
push
mov
outsl
test
pop
add
inc
add
inc
jle
adc
mov
pop
movsl
out
jg
jae
movsb
lahf
sahf
mov
mov
xchg
pusha
lret
fistpl
xchg
dec
js
int3
mov
xor
divb
adc
nop
inc
add
mov
aam
dec
adc
inc
ret
pop
popa
data16
xchg
jge
add
aaa
lods
subb
xchg
data16
lea
mov
add
mov
mov
sub
shlb
pop
lock
andb
or
mov
jae
sub
push
pop
push
loope
and
pusha
jp
incl
xchg
xchg
and
mov
bound
test
jmp
dec
dec
sbb
pop
jle
dec
cmp
jnp
gs
stos
mov
lcall
and
dec
sub
xchg
mov
push
jg
push
push
fs
cwtl
cmc
inc
adc
cli
push
in
sbbl
xchg
jne
out
sti
inc
and
mov
inc
jns
xchg
sbb
test
das
add
mov
and
mov
pop
iret
pop
fmull
dec
pusha
ret
hlt
cwtl
cmp
inc
or
cli
xchg
pushf
xor
faddl
in
lret
jg
lods
ljmp
cmp
xor
jmp
pusha
pop
hlt
repnz
push
sub
cwtl
test
sbbl
add
mov
div
mov
shll
insb
pop
push
sub
movsl
das
out
xchg
in
xchg
pop
pop
jae
push
add
xchg
mov
dec
stos
mov
cli
add
orl
jl
ja
push
sub
mov
stos
mov
jg
jmp
inc
mov
imulb
dec
sbb
jns
loope
popf
xor
arpl
not
inc
mov
arpl
xor
popf
arpl
fistpll
mov
mov
pusha
jno
xchg
jp
dec
mov
add
nop
mov
addr16
xchg
popa
xor
fmuls
test
xchg
pop
adc
pushf
ja
sbb
sbb
inc
ret
lahf
lock
pop
scas
xchg
fdivl
insb
imul
jbe
rclb
mov
cmp
add
push
outsb
mov
or
or
push
or
adcl
js
das
shrb
jo
pop
mov
lea
xor
push
pusha
pop
add
cmc
xor
and
push
mov
add
ja
sub
movsl
add
je
xchg
push
jmp
push
jb
xorb
push
mov
mov
xchg
loop
unpcklps
sbb
cmp
or
call
mov
sbb
jne
test
clc
stos
cmpsl
xor
imul
lcall
enter
jle
xor
push
enter
ja
or
loop
call
int3
jecxz
ljmp
daa
out
push
daa
aad
adc
mov
inc
inc
or
mov
ret
mov
fimull
addl
bound
push
mov
das
test
mov
das
lahf
orb
shlb
and
mov
jbe
andb
xchg
icebp
movsl
sarb
mov
aaa
stc
ret
and
push
stc
nop
xor
in
sub
push
stc
popa
xor
push
add
js
inc
stos
in
jl
adc
mov
sub
lods
and
cmp
sub
adc
pusha
sub
pop
shlb
mov
push
push
lea
insl
leave
mov
dec
fcomps
sub
hlt
adc
call
mov
mov
or
out
hlt
pop
push
test
pushf
movsl
scas
rorb
mov
addr16
pop
repz
sbb
enter
mov
adc
pop
adc
je
inc
fldenv
xor
andl
pop
push
add
stos
jl
lret
sub
jecxz
std
mov
andl
rcrb
xchg
inc
in
adc
mov
pop
mov
aaa
add
push
jne
mov
data16
and
mov
hlt
fisubs
or
rol
xor
ret
lds
into
xor
dec
add
mov
mov
fsubs
push
xchg
pop
rcl
inc
xchg
mov
sbbl
cmpb
xor
decl
in
pop
dec
pop
xchg
jnp
movsb
inc
out
cs
repnz
sub
imull
ret
shll
mov
lahf
push
ret
sarl
in
clc
dec
xor
cmp
imull
ret
mov
and
in
cmp
dec
sub
and
dec
stos
ss
hlt
push
ss
xor
jb
cwtl
addr16
pop
sbb
or
lret
in
out
into
aaa
popf
ss
or
test
fiadds
xchg
xchg
cmpsb
imul
pop
or
out
cmpsl
leave
inc
cmp
mov
fbld
loope
push
mov
pop
xor
jecxz
sbb
pop
add
mov
dec
jp
mov
xchg
jns
adc
add
stos
imul
mov
cmp
and
jecxz,pn
xor
repz
aas
mov
fs
ljmp
xchg
sarb
repnz
jl
fwait
pop
mov
push
outsl
xor
or
xorl
ds
insb
icebp
jne
sub
jae
xor
cli
sub
mov
mov
push
fucomp
adc
xchg
in
aam
fwait
out
add
mov
aad
aas
or
xchg
scas
ss
in
mov
int3
arpl
sub
imul
xorl
or
insb
pop
jmp
scas
and
and
leave
pop
fwait
shll
mov
jo
mov
aaa
sahf
adc
rclb
mov
imul
pop
mov
stos
out
sarl
clc
adc
lea
cmp
lahf
inc
adc
inc
mov
lods
into
cmpsl
testb
lcall
out
ljmp
hlt
test
cmp
sbb
inc
repz
cmc
dec
scas
mov
jns
idivl
xchg
mov
inc
movsl
lods
mov
xchg
sub
insb
xor
xchg
mov
test
lods
or
loopne
mov
cld
inc
imul
and
fdivr
ret
lcall
push
shrb
or
adcl
insl
lret
xor
xchg
push
ret
aam
jge
and
insl
xor
add
scas
inc
and
xchg
mov
std
adc
mov
stc
nop
scas
bound
sbb
scas
dec
xchg
and
fsubrl
push
lea
in
out
jecxz
or
fadds
sub
mov
cmp
es
cld
orb
xor
fisubrs
in
in
jmp
add
inc
cwtl
add
xchg
mov
fistpll
out
push
jecxz
aam
ss
inc
pushf
pushf
repz
mov
in
sub
pop
or
in
push
sub
inc
repnz
push
and
outsb
push
push
inc
cmpsl
and
jmp
add
mov
mov
inc
lods
stc
scas
stos
inc
mov
mov
cld
fidivrs
jae
or
nop
sbb
or
mov
aam
push
addr16
out
ficoms
xor
jmp
jmp
pop
shll
pop
push
in
xor
push
sub
mov
ret
aad
pop
jbe
aas
test
scas
inc
mov
int
dec
inc
mov
jns
push
push
cmpsb
adc
mov
jnp
and
add
test
lock
push
sbb
sbb
cmp
jmp
or
cmp
js
adc
mov
fildl
daa
neg
jno
or
mov
mov
cmp
xor
imul
cmp
lds
xor
or
sti
fsubrl
sbbl
inc
bound
dec
test
mov
push
jo
bswap
adc
sbb
pop
dec
push
adc
aad
into
stc
sub
testl
inc
push
sbbl
xchg
mov
sahf
or
sar
jecxz
aas
lock
or
clc
enter
xchg
inc
push
xchg
adc
dec
xor
xchg
rcrl
test
xchg
jb
inc
mov
inc
cmc
or
mov
js
push
pop
aaa
sbb
insl
push
js
mov
les
std
std
dec
pop
outsb
insb
orb
movsl
sti
mov
ss
push
cltd
stos
dec
sbbl
adcl
stos
push
xchg
and
in
push
cmc
mov
sub
ja
push
lahf
mov
push
outsl
jo
pop
mov
notl
and
mov
or
cmp
mov
xchg
mov
aam
iret
sahf
lea
enter
mov
mov
data16
outsl
std
inc
mov
jno
jg
and
test
lea
andb
mov
xchg
loope
sub
bound
fldcw
or
jge
rolb
js
add
pusha
insl
pop
mov
xor
cmp
xorl
stos
addr16
xorb
outsb
mov
lods
ja
leave
jecxz
stos
insl
into
fdivrl
pop
rolb
cmp
mov
test
mov
xchg
adc
xchg
sub
imulb
push
sbb
push
lret
cld
ja
fs
inc
or
sub
dec
mov
dec
mov
pop
js
dec
pop
jns
ss
rol
js
inc
data16
sub
stos
jno
push
add
mov
cltd
push
xchg
repz
mov
xchg
jecxz
shlb
and
jno
in
out
mov
jne
sbb
cld
xor
cmp
cmc
dec
xchg
aas
movsb
mov
stos
mov
push
sbb
stos
and
faddl
in
cmp
dec
lret
add
test
or
pop
sbb
fisttpll
ret
jge
jnp
enter
int3
cli
aam
adc
sbb
lret
mov
dec
filds
lods
jmp
subl
es
xlat
mov
add
jmp
mov
push
mov
into
fs
adc
call
enter
test
ljmp
or
dec
imul
lret
popa
in
pop
push
lods
add
adc
fisttps
addr16
jecxz
ljmp
add
sub
push
pop
test
pop
and
pushf
insl
or
or
aaa
xchg
or
jae
jl
mov
jecxz
jge
push
mov
jl
test
mov
pushf
scas
loope
in
test
insl
pop
arpl
jns
mov
add
mov
ffree
sti
fnsave
out
mov
xchg
cmp
mov
jle
sub
jmp
out
inc
in
inc
push
jmp
daa
pop
stc
sbb
and
mov
push
mov
or
sub
add
in
mov
and
pop
push
nop
and
dec
jg
repnz
dec
add
cmp
cmp
mov
in
or
lods
movsl
addb
mov
xor
cmpsb
rorb
jle
adc
add
inc
in
sbb
not
push
nop
fdivs
movsl
mov
cmp
pop
movsl
ret
test
fsubl
mov
cmp
jp
ret
pop
push
mov
subl
lock
jns
insb
stos
iret
adc
fs
jp
inc
mov
fstl
cmp
cmpsl
loop
fnstsw
jle
int
out
into
jo
add
mov
cmpsb
xor
pop
loop
mov
aaa
or
cmpsb
jl
test
popf
or
push
mov
repz
or
inc
push
add
hlt
mov
cmp
mov
mov
pusha
les
pop
ficompl
xor
fstpl
jmp
out
popa
idivb
add
fidivl
stc
or
mov
sbbb
push
popf
mov
rolb
push
out
ja
fisubs
cwtl
jbe
or
test
sbb
pop
ret
mov
scas
fmulp
gs
push
loope
ds
cli
sub
sub
js
addr16
or
jmp
aaa
sbb
mov
jp
int3
mov
jl
xor
imul
inc
mov
movsb
out
xor
jno
sbb
nop
jle
stc
test
pop
inc
xlat
inc
jg
push
pop
shl
add
enter
rcrl
popa
fdivl
stos
jnp
fistpl
jge
inc
fs
cmp
fwait
pushl
subb
stos
outsb
loopne
lods
fadds
dec
dec
mov
mov
and
je
push
cmpsb
ljmp
and
push
incb
cs
sub
push
enter
cltd
lods
xor
mov
out
sbb
push
lea
inc
push
mov
pop
addr16
inc
mov
push
adc
push
cmpsb
sbb
imul
cmp
out
loopne
or
add
loop
sarl
mov
sbb
add
mov
icebp
in
push
dec
inc
jns
jo
xor
cmp
clc
movsl
call
clc
fs
test
pushf
fld1
shll
enter
pop
inc
inc
adc
cmpsb
adc
frstor
mov
imul
inc
popa
adcl
pop
cmp
pop
rcrl
scas
push
fstpt
aad
and
inc
fbld
cmp
incl
stos
pop
dec
push
jne
js
cmp
jge
test
inc
push
sbb
das
mov
mov
push
enter
jmp
or
cmp
sub
nop
sbb
xor
inc
aad
je
scas
and
push
insb
std
push
push
jg,pn
jle
mov
inc
ret
in
enter
inc
or
pop
fnstcw
mov
or
pop
cmp
mov
xlat
rol
fildll
adc
cltd
insb
fwait
mov
iret
out
movsl
jo
mov
in
loope
bnd
pop
xchg
test
out
and
push
mov
jmp
xor
xchg
mov
scas
xchg
aad
xchg
cwtl
or
inc
pop
push
imul
pmullw
roll
fisubrl
fdivs
and
or
call
jno
lcall
sbb
iret
stc
and
fmulp
test
mov
pop
mov
lcall
cwtl
test
testb
aaa
sbb
jne
jg
lret
nop
fldt
arpl
test
jecxz
mov
jecxz
dec
aad
fistps
loope
rcrl
dec
lret
fstp
xor
loope
loop
cmp
imul
int
xor
and
xlat
sub
inc
jl
orb
jp
add
xor
mov
testb
inc
fsubr
loope
fistps
movsl
into
gs
mov
filds
adc
je
das
jge
xchg
out
xor
mov
test
addr16
std
and
icebp
xchg
mov
fidivs
test
cs
lock
xchg
xor
push
jge
sub
mov
mov
dec
bound
and
mov
mov
mov
mov
and
mov
jbe
sbb
push
xchg
adc
push
ja
sahf
mov
fldenv
add
xchg
fiadds
jbe
sbb
shll
pop
jno
inc
sub
loope
imul
xchg
xor
jb
add
xor
xor
test
xorl
mov
pop
nop
int
sub
jb
inc
jns
xchg
ret
stos
stc
popf
xchg
jbe
ret
jo
sub
pop
xor
outsb
fs
push
les
sub
test
mov
push
aas
pop
test
sbb
lds
ret
inc
xor
in
jmp
shlb
push
push
jmp
jl
dec
adc
xchg
scas
rorl
test
out
push
and
fstps
icebp
push
daa
adc
shlb
add
aad
jno
ret
negb
repnz
je
mov
pop
insb
imull
scas
mov
xor
sub
hlt
and
pop
shrl
xor
cmp
and
inc
cmc
sbb
sbb
shlb
clc
pop
add
pop
lahf
adcb
pop
ret
lahf
dec
or
sti
out
jnp
jmp
test
icebp
js
push
fiaddl
outsl
movaps
nop
sbb
test
mov
xchg
cmp
mov
ljmp
arpl
inc
ljmp
repz
xor
xor
inc
cwtl
in
pop
jno
cmp
cmp
lret
test
adc
jo
xchg
aas
mov
inc
xorb
in
mov
fiadds
mov
in
decb
cmp
loop
sub
mov
mov
push
imul
rolb
mov
lock
mov
shr
rol
fstpl
jecxz
loopne
pop
sub
aas
lret
pop
insl
ja
ret
clc
mov
les
inc
push
inc
into
daa
lcall
adc
incb
xor
ret
int3
clc
out
fucomip
sbbl
pop
xor
add
sub
dec
rolb
lahf
gs
pop
inc
cli
pop
mov
push
nop
hlt
and
sbb
ss
sub
inc
lahf
and
xchg
int
fwait
inc
mov
ja
js
lret
loopne
sub
mov
cmp
xchg
jle
lods
scas
mov
mov
or
cmc
xor
test
cli
jge
in
cmpl
aas
popf
push
pop
sbb
imul
sbbl
pop
or
cwtl
cmp
jno
addr16
lcall
cmpsl
dec
add
sbb
pop
xchg
jle
sbb
scas
adc
loope
or
pop
sub
xlat
add
add
les
mov
jne
cmp
sub
cwtl
daa
cs
xor
fidivrs
push
cmp
daa
xchg
je
dec
xchg
xchg
outsb
enter
mov
es
adc
mov
sarl
sub
test
daa
xor
jp
repz
test
loopne
sub
dec
in
je
cmp
xlat
adc
xor
and
and
push
hlt
jp
dec
loope
fwait
js
sub
dec
aad
lcall
adc
dec
mov
rcr
jae
xchg
cmp
dec
jns
movsb
add
cld
adcl
scas
or
cmpsb
into
jae
push
jo
mov
das
insl
int
pop
adc
push
arpl
and
fidivs
mov
xchg
int3
jno
ja
shll
jl
ljmp
test
mov
mov
cmp
jae
lds
lock
popa
arpl
dec
insl
sub
sub
pop
aad
roll
loope
cmp
xor
cld
divl
push
inc
cli
xchg
movsl
add
or
rcll
cwtl
ljmp
scas
and
iret
sub
jmp
pop
in
sti
pop
iret
into
pop
inc
lock
js
cli
je
xchg
xchg
pop
lock
ds
loopne
pop
cmp
fwait
mov
mov
xchg
pop
addb
mov
loopne
push
add
jbe
test
hlt
js
fmul
and
imul
ficoml
push
pop
sbb
push
mov
jl
pop
sahf
and
mov
xor
inc
pusha
mov
lahf
xchg
fcmovbe
es
ds
jo
imul
mov
popf
xor
shlb
push
aad
cli
aaa
in
push
imul
pusha
imul
in
xor
mov
mov
mov
add
adc
mov
sbb
fldenv
jp,pn
shlb
test
mov
iret
dec
repz
pop
fdivrp
std
inc
sub
and
loop
push
mov
push
xchg
scas
and
jns
shl
xor
push
cmc
ret
xchg
daa
mov
mov
and
loopne
dec
scas
lock
xor
ss
mov
dec
mov
loop
sbb
cmp
jae
shrb
sub
jmp
fcomps
jle
adc
cmp
push
xchg
dec
movsb
out
cli
les
cmp
sbb
pop
sub
cmp
int3
dec
and
jbe
xchg
jmp
lds
dec
push
mov
dec
arpl
mov
fwait
xchg
add
jl
pop
mov
mov
sub
inc
bound
addr16
pop
mov
call
loope
cmp
add
dec
jg
cmp
sub
push
inc
xchg
cwtl
rorl
inc
push
xor
aad
mov
inc
fnsave
push
dec
pop
xchg
fs
lds
fcmovne
sbb
sarl
sti
pop
mov
cwtl
dec
mov
sub
jl
ja
xchg
ds
adc
push
pop
dec
fisttps
fs
xchg
sub
loope
rol
orl
push
rcr
lods
cmc
cmp
rorl
adc
or
sub
mov
test
push
push
fwait
aas
insl
pop
fcmove
sub
jp
cmp
cmp
xchg
loope
jmp
repnz
movsl
jmp
aam
fsubrl
out
imul
mov
cltd
pop
lret
aad
data16
out
fldcw
les
adc
sub
test
stc
xlat
addr16
inc
cli
daa
adc
jg
insl
flds
sub
mov
orl
mov
sbb
stc
mov
jg
lds
sbb
mov
adc
cmp
stos
cmp
aas
jbe
mov
push
mov
fists
jb
cld
cmp
cmp
mov
adc
das
outsb
mov
push
imul
mov
dec
mov
mov
std
xchg
gs
cmc
shlb
mov
xor
daa
inc
xchg
mov
inc
mov
adc
roll
xchg
jg
inc
sbb
lock
insb
cmp
dec
mov
push
xor
inc
outsl
mov
lods
out
pop
cmp
mov
dec
pop
lods
and
aas
outsb
test
add
jbe
enter
das
mov
adc
jp
add
test
es
sub
loopne
xor
xor
push
mov
scas
ret
int
jmp
aas
ljmp
add
and
adc
cli
lea
insb
test
adcb
scas
fldt
pop
repnz
cwtl
or
sub
nop
jnp
lret
mov
fidivs
jmp
inc
sbb
or
and
aam
mov
add
fcomi
lcall
pop
out
pop
adc
shlb
subb
jg
ljmp
jle
fsubrl
into
lds
rorb
add
sbb
and
cmp
pop
adc
and
dec
jp
loopne
int
nop
and
stos
dec
pop
loopne
xor
sbb
mov
pop
jmp
push
loop
xor
jle
arpl
popf
stc
jbe
sbb
lds
mov
xor
add
stc
or
pop
pop
pop
out
inc
mov
mov
inc
jl
xchg
fstsw
push
paddw
popa
stos
and
or
popa
cmc
push
mov
xlat
cwtl
rcr
sar
bound
lcall
repz
dec
je
jl
insb
inc
sahf
push
fildll
fstl
or
adc
cmp
jle
int3
xchg
mov
add
inc
xchg
pop
xorb
das
cltd
pop
fdivs
repnz
or
test
fcomi
jp
sub
xlat
jmp
add
sub
xchg
jae
lret
sub
subl
push
sbb
jns
xor
sbb
dec
lock
jns
filds
push
cmp
or
cmp
outsb
xor
lock
lods
push
leave
pop
mov
fsub
aam
push
dec
pop
xchg
mov
scas
sub
sub
jge
out
enter
pop
arpl
shll
int
inc
xor
dec
repnz
stos
rcrb
adc
movsb
mov
xor
push
bound
mov
inc
mov
dec
fldenv
ljmp
imul
imul
jge
push
aaa
ret
hlt
xchg
cmpsl
ds
repnz
inc
outsl
pop
scas
xchg
arpl
popf
jmp
or
push
cmp
dec
mov
push
pop
addr16
lret
lods
repnz
pop
mov
call
cmc
rorl
add
push
and
mov
loope
lods
xchg
pop
sub
stos
and
int
jmp
mov
jae
and
pop
nop
andb
jb
ret
sub
shlb
sbb
std
add
mov
clc
pop
push
lock
or
add
jae
ficoms
loop
push
mov
fwait
pop
sbb
fs
arpl
popf
xor
and
xchg
push
jp
fiaddl
repz
lock
dec
lods
daa
mov
insl
sub
cmp
pop
insl
mov
out
cmp
mov
cmpl
pop
fadds
int
sbb
mov
cli
adc
int3
sbb
adc
inc
mov
dec
xchg
push
push
adc
js
dec
xlat
xchg
mov
push
and
sbb
insb
add
outsb
inc
mov
adc
push
pop
jbe
cmp
jae
sbb
push
mov
push
adc
imul
pop
cld
add
mov
test
les
stc
xchg
mov
int
mov
jo
fldenv
mov
ret
outsb
inc
jo
int3
leave
mov
cli
adcb
or
in
cli
dec
mov
adc
rcll
cmc
lea
mov
inc
pop
mov
inc
push
addr16
fcomps
hlt
cmp
imul
cmp
in
sti
es
xorl
push
or
lea
cmc
push
pop
mov
filds
shlb
xor
ljmp
push
bound
inc
xor
outsb
adc
push
inc
jnp
andb
mov
sub
lea
sarl
fwait
pop
stos
scas
and
mov
and
insb
dec
adcb
fldt
mov
inc
cmp
popl
icebp
insl
push
dec
push
or
mov
jns
xchg
rcl
xchg
lods
xorl
or
repz
icebp
and
pop
push
ja
cltd
movsb
lret
adc
lds
pop
addr16
jecxz
shll
mov
and
lock
inc
iret
bound
adc
cmp
aad
or
xor
adc
fmuls
lock
sub
fwait
xor
xorb
lods
xor
repnz
ja
cs
xor
dec
bound
mov
cli
decb
movsl
imul
cmpsw
icebp
enter
push
xor
push
sbb
push
ret
hlt
pop
mov
hlt
sub
movaps
jnp
xor
fisttpl
sbb
insl
xchg
pop
cmc
add
fcompl
in
jp
es
add
test
mov
or
jae
inc
lock
and
fs
mov
pop
loopne
mov
mov
in
push
les
std
daa
dec
arpl
mov
inc
sbb
movsb
aam
rol
mov
lahf
or
add
xlat
mov
sti
out
adc
pusha
leave
mov
jbe
scas
jo
mov
and
fcmovnb
xor
shlb
mov
cmp
sub
dec
and
mov
pop
outsb
jle
mov
cmp
pop
mov
dec
call
fnstcw
inc
cltd
add
mov
mov
dec
loop
les
add
lcall
decb
ja
mov
std
aam
scas
insl
jo
bound
dec
sub
fwait
inc
nop
mov
ret
test
inc
lahf
out
into
lea
loope
pop
sbb
ret
jns
and
mov
popa
fdivl
pusha
cmp
mov
cld
jg
mov
add
cmpb
mov
jne
cmpsb
mov
aaa
scas
add
jb
aam
mov
icebp
aad
xor
mov
fimull
daa
fsubr
or
mov
cmp
int3
jg
dec
pop
imul
adc
lods
dec
aad
das
cmpsl
cmp
insl
js
les
dec
xor
lds
jmp
jns
and
sarl
xchg
pushf
sbb
jmp
push
cmp
aaa
call
or
inc
xor
je
iret
jle
je
adc
inc
mov
dec
cmc
and
or
or
jbe
mov
fldt
enter
dec
std
mov
movsb
lock
fcompl
pop
lock
subl
sbb
test
push
mov
mov
inc
mov
sahf
sub
fnstenv
bound
shrb
add
in
insb
xor
nop
cmp
and
sbb
repnz
jmp
ss
xor
or
mov
aam
sbb
jae
pop
cwtl
int3
lret
stc
xchg
add
add
jne
sbbb
cli
lods
add
fwait
xchg
push
mov
mov
ret
icebp
or
cmpsl
pusha
pop
in
jge
jmp
adc
fadds
cltd
push
aas
stos
inc
lods
xchg
or
out
mov
arpl
fldt
push
sub
jb
mov
mov
js
inc
mov
leave
aaa
aad
push
mov
pop
mov
mov
insb
mov
ret
pop
in
xchg
pop
jge
mov
test
rcrb
push
cpuid
cmp
mov
shrb
inc
fiadds
or
jecxz
loop
jl
xor
imul
mov
out
std
xor
lret
mov
xchg
sbb
aas
inc
dec
sbbl
js
jbe
cmp
jns
xlat
xchg
and
mov
cmpsb
pop
jne
cmpsb
ja
loopne
mov
push
lret
and
mov
sub
add
push
ds
ss
testl
xchg
push
test
xor
jnp
and
int
inc
and
out
sarb
and
sub
pop
and
icebp
cmpl
sbbl
mov
loopne
lcall
cmp
cmp
xchg
adc
inc
sbb
outsb
sub
pop
outsl
mov
shl
push
shl
mov
cmpsl
out
push
or
rcl
ret
sbb
xlat
aam
mov
jle
add
jp
and
mov
push
call
sub
bound
dec
ljmp
jp
lret
fbstp
jle
inc
xor
dec
rclb
push
mov
jmp
insl
add
aas
stc
mov
hlt
outsl
ljmp
cld
sub
cwtl
inc
pop
shrb
subl
out
push
inc
stos
inc
ja
jmp
dec
fmuls
push
cmp
mov
add
mov
das
fisubrl
icebp
push
mov
jge
mov
je
mov
push
daa
sub
mov
cwtl
mov
movsb
mov
loope
pushf
mov
sub
jnp
push
test
ret
outsl
sahf
out
int3
fwait
sti
leave
imul
push
jo
and
mov
adc
and
inc
sbb
mov
sarl
xor
cmp
mov
or
clc
xor
mov
cmp
into
pop
dec
loopne
add
mov
mov
jge
cmp
out
rorb
lods
lret
lods
adc
fnstenv
cmpsl
ret
out
into
xor
push
dec
lods
add
subb
mov
adc
adc
or
shll
mov
inc
push
xchg
push
xlat
mov
sbb
dec
push
and
outsb
stos
stc
mov
add
pusha
push
cwtl
stos
xchg
push
aam
sbb
xor
outsl
cli
push
pop
ss
add
push
add
popf
mov
lods
imul
es
xchg
adc
mov
mov
xchg
mov
jle
mov
mov
add
adc
dec
out
add
jp
push
adc
xchg
push
cltd
pusha
out
and
jp
outsl
inc
mov
and
loopne
data16
xor
jae
in
mov
dec
addl
leave
je
sbb
gs
es
or
out
add
xchg
jne
push
adc
xchg
popa
aas
sbb
ja
push
cmp
in
push
leave
stc
mov
iret
rcr
incb
test
pop
push
fwait
or
cld
shlb
lds
insl
mov
leave
insb
lods
jns
mov
stos
cmp
fcoms
ffree
cmp
adc
mov
incb
loopne
jg
inc
movsl
push
sbb
pop
push
sbb
inc
xor
int3
cmc
pop
into
and
xchg
shll
mov
movsl
xchg
sbbl
sub
xchg
test
dec
fsubs
cmc
jo
jns
add
int3
dec
mov
add
mov
pop
cld
xchg
add
adc
in
push
sub
stos
inc
es
and
mov
push
mov
insb
adc
jmp
data16
pop
lcall
cmpsb
cmp
jp
mov
and
push
mov
adc
mov
mov
out
movsl
inc
aam
lds
test
add
sub
mull
sti
int3
mov
nop
lods
movsb
add
push
imul
stc
pop
xor
mov
leave
flds
vpcomb
and
mov
push
stos
das
pop
fcompl
and
mov
pop
cmc
jmp
fnstsw
loopne
mov
iret
pop
in
popa
xchg
imul
fnstenv
divl
test
mov
in
pop
adc
pop
scas
push
stc
nop
inc
fildl
loopne
pushf
or
dec
clc
jnp
insb
adc
pusha
mov
lret
daa
call
sbb
sub
fnstsw
xchg
daa
jmp
jp
push
lcall
sahf
push
sbb
lds
stc
je
imul
inc
adc
jg
rcrb
pusha
pop
dec
in
mov
cli
sub
bound
and
and
je
js
negl
int
hlt
dec
and
arpl
jl
push
std
inc
mov
cmpsb
mov
push
pop
jne
cwtl
das
in
xchg
dec
and
mov
out
xchg
lds
lods
testb
mov
mov
mov
mov
mov
inc
xchg
add
popf
mov
jle
adc
sbb
pop
mov
add
lret
inc
sub
mov
xor
les
aas
push
xor
sub
decb
or
in
ja
pop
stc
arpl
jp
sbb
test
je
jmp
push
adc
inc
xor
xchg
sub
push
adc
bts
push
sti
push
pop
test
lahf
mov
sub
repnz
pop
lods
lds
testb
out
sub
gs
popf
imul
xchg
mov
cmp
leave
iret
flds
or
jmp
insl
test
sbb
aas
cld
cmp
imul
dec
or
cmp
insl
insb
iret
cmp
dec
xchg
cs
lds
enter
aad
mov
jg
dec
xchg
mov
movsl
fmuls
sub
xchg
loopne
dec
lock
cmp
cmp
loope
pop
loopne
or
das
add
aad
xor
out
ja
ret
mov
leave
mov
pushl
notl
in
sub
sub
adc
jp
lahf
lods
fistps
int3
jnp
enter
lahf
adc
push
jp
cmp
xlat
mov
cmpsl
sbb
adc
fadds
mov
mov
sbb
sti
mov
mov
inc
cmpsb
or
test
ret
lock
xchg
icebp
pop
popa
clc
mov
sti
jg
shlb
dec
mov
fucomp
daa
mov
movsb
inc
pop
scas
adc
scas
stos
xor
jbe
into
ja
xor
iret
push
sbbl
icebp
gs
xchg
mov
daa
outsl
pop
fisttpll
add
jb
repz
xor
or
dec
sub
jge
daa
ljmp
lods
icebp
shll
add
pusha
sahf
fs
sub
dec
outsl
aas
sub
push
add
xorl
test
cmpsl
mov
popa
shlb
enter
or
xchg
jmp
add
jge
pop
rolb
and
jp
and
mov
outsb
or
jg
xchg
cmp
adc
mov
lock
rcr
pop
adc
cmp
cmpsb
xor
xchg
sbb
fmull
not
sbb
adc
int3
fsubl
mov
cwtl
cltd
inc
and
je
sub
jp
mov
pop
insb
push
cmp
add
pop
in
insb
loope
fwait
push
or
and
pop
push
nop
jecxz
ss
add
test
dec
test
jge
test
pop
jp
shrl
fistl
jl
andb
dec
push
repnz
outsb
xor
push
clc
sub
test
orb
cmovns
sub
adc
stos
pop
fnclex
ds
add
popl
fadds
loope
or
inc
xchg
jns
cmc
lods
mov
jnp
andl
jp
nop
fs
push
out
cmc
fwait
sub
xchg
xor
ret
cmp
imull
pop
or
je
mov
add
fcomi
mov
or
andl
jnp
shrl
inc
pop
jne
das
dec
loop
movsl
fadds
imul
and
jp
push
mov
sti
filds
add
mov
scas
rcr
pop
dec
push
popf
push
and
fisubl
hlt
or
push
call
cmp
jo
mov
jns
sub
adc
stc
cmpsl
xchg
pushf
shrl
mov
pushf
enter
xor
ret
ret
mov
add
je
pop
sbb
orl
or
lcall
pop
pop
in
lods
pop
push
mov
fistps
test
into
test
mov
jae
arpl
rcrb
push
in
ljmp
les
pop
or
aam
fwait
inc
or
pop
xchg
jp
adc
lock
stos
jmp
cmp
push
into
into
icebp
jmp
setae
cmp
sbb
dec
jge
loop
sub
push
out
lock
scas
enter
js
lret
mov
push
or
imul
inc
pop
lret
push
cmp
jbe
stc
mov
inc
pop
xlat
data16
loopne
das
jmp
sbb
push
cs
cmpsb
push
mov
jecxz
out
mov
dec
fs
rclb
fnsave
push
cmp
jns
es
sbb
test
pop
arpl
mov
lret
sbb
icebp
mov
icebp
enter
jbe
sub
mov
jbe
mov
fmul
adc
push
insb
cmp
mov
mov
sbb
inc
std
xchg
test
push
insl
rep
dec
cmp
shr
fwait
and
dec
icebp
jl
jle
fwait
mov
mov
sbb
add
push
insl
push
imul
xor
xchg
inc
sub
mov
cmp
sbb
mov
mov
mov
dec
and
mov
sbb
pop
mov
das
sub
fiaddl
sub
addps
xchg
scas
jns
lcall
adc
aam
push
jae
lods
xchg
sub
mov
jbe
jge,pt
sub
cld
lds
cmp
mov
cmpsl
mov
call
test
mov
pop
lock
rcrl
add
xchg
xchg
inc
sbb
cld
mov
push
xchg
mov
lods
loope
mov
outsb
std
ja
loop
mov
aas
jo
dec
pop
cmp
xchg
pushf
rcll
cld
dec
cmp
adc
notb
movsl
push
pushf
pop
xchg
dec
sub
jns
jp
rclb
or
jmp
adc
jbe
cmp
pop
lods
fs
push
and
mov
popa
jg
pushf
and
adc
sub
push
jbe
xlat
push
adc
mov
mov
in
insb
cs
das
inc
add
xor
dec
into
cmp
push
fsts
sbb
sbb
xor
fadds
std
add
xchg
fisubs
out
sbb
mov
mov
mov
and
hlt
push
sarb
in
inc
pop
loop
mov
mov
aam
sbb
cmp
fyl2x
sbb
mov
jge
dec
lret
or
insl
cmp
rcrb
cmp
loop
sbbb
mov
jge
adc
xchg
xchg
push
pusha
mov
push
lcall
mov
das
mov
jo
push
out
shl
ja
jnp
in
mov
repz
imul
lock
mov
sbb
test
scas
icebp
xor
shll
jbe
call
and
push
mov
in
push
mov
jno
mov
sahf
push
in
int
js
push
gs
fcomp
jb
test
mov
jl
leave
xchg
lods
pop
mov
jb
sbb
loop
xchg
daa
scas
inc
jmp
enter
adc
dec
push
or
orb
daa
sub
pop
sub
cmp
stc
push
mov
les
stos
sbb
jne
mov
cmp
lahf
xchg
lret
rcrl
mov
ds
and
ret
and
fs
das
mov
xchg
inc
push
xchg
dec
jl
dec
dec
bound
mov
add
cmpsl
mov
mov
cs
sub
mov
dec
push
outsb
xchg
sbb
or
adc
les
ds
jo
fs
and
and
outsb
test
and
xor
ss
mov
push
xchg
sub
push
call
sar
mov
sbb
jecxz
sbb
dec
mov
outsl
loope
sahf
adc
call
push
aam
aaa
fisubrl
dec
xor
mov
sbb
adc
jge
sahf
cmp
jo
jecxz
jns
jo
test
mov
outsb
stc
stc
cwtl
xor
cs
pusha
test
fidivs
aad
test
ficomps
cmpsl
cli
inc
xor
enter
pushf
jae
adc
mov
insb
jae
xchg
add
dec
rcl
push
scas
cmpsb
dec
cmpsl
adc
push
adc
xor
sub
inc
push
inc
jmp
addl
in
out
addb
sbb
lahf
cmc
and
scas
fcomi
inc
push
leave
dec
int
jecxz
xor
mov
mov
push
dec
sbb
hlt
mov
ljmp
mov
into
inc
jge
in
mov
jge
sub
hlt
stos
jge
xchg
pop
mov
xchg
loopne
mov
xor
push
sub
sbb
push
sub
jp
or
sub
jmp
lret
add
push
pushf
ljmp
mov
fists
pop
call
sbb
inc
out
push
loope
mov
icebp
mov
cmpsb
outsb
sub
mov
iret
cmpsb
sbb
jmp
xchg
add
outsb
cmp
mov
dec
cmp
incb
daa
lcall
inc
push
out
adc
add
dec
sbb
xchg
les
idivl
pop
dec
fwait
clc
sti
leave
cmp
mov
loopne
shrb
lret
gs
int
loopne
inc
aaa
xchg
inc
call
rclb
lcall
sahf
imul
pop
mov
test
cld
xchg
or
jle
mov
mov
mov
push
sahf
jl
pushf
je
arpl
sub
es
mov
adc
out
inc
dec
sbb
sbb
and
adc
cmp
in
sub
push
aam
jae
xchg
add
sahf
sub
repnz
sub
gs
xchg
jns
xlat
lcall
in
mov
inc
cld
pop
scas
xchg
push
pop
test
cwtl
push
out
movsl
push
ds
bound
jno
pop
cmp
dec
xchg
or
aam
cltd
jge
sub
loope
xor
add
das
incb
mov
test
dec
enter
imul
sub
mov
scas
cmp
cmc
push
mov
xlat
cli
jne
cmc
cmpsb
xchg
xlat
repz
mov
lods
fcmovnbe
inc
test
jb
adc
jge
xor
sub
outsl
xchg
sbb
lea
mov
scas
sbb
shl
pop
sub
xchg
pop
or
xchg
gs
fists
push
call
add
cs
cmp
and
lds
pop
or
mov
iret
jae
fnstenv
pop
dec
lahf
add
push
shlb
sub
and
xchg
mov
lea
inc
out
movsb
dec
xor
cmp
lcall
cmpsl
push
pop
cmc
insb
mov
aam
mov
mov
leave
ret
add
pop
mov
cmp
test
mov
shl
and
pop
scas
xchg
cmp
push
mov
jae
insb
mov
lahf
jo
mov
ss
push
xchg
insl
hlt
out
je
jo
mov
fmuls
sub
push
add
pop
mov
jge
pushf
sub
adc
cmp
lds
inc
insb
in
dec
aam
js
or
and
movsl
sub
nop
push
add
dec
sub
sub
or
flds
mov
xor
and
inc
sbb
scas
ret
ds
mov
lock
and
sbb
or
jnp
into
in
jl
cwtl
jmp
inc
xor
jmp
mov
stc
inc
or
call
mov
and
jle
loopne
das
enter
jl
inc
push
inc
mov
movsb
stc
mov
xor
inc
js
rcrl
xor
sub
xchg
xchg
scas
mov
outsl
xor
sbb
imul
or
dec
pusha
cld
cmp
pop
sahf
xor
inc
mov
dec
cmp
and
pop
mov
mov
jle
and
outsb
cmp
xchg
add
pushf
jb
dec
rcrb
out
test
add
and
push
das
mov
aad
push
inc
adc
jns
add
test
clc
lock
xchg
in
mov
pop
mov
mov
or
mov
out
clc
jg
pop
rol
dec
flds
lret
mov
jne
out
das
or
cmp
icebp
mov
pop
jo
insl
add
or
shr
lods
mov
shlb
jb
inc
jecxz
adc
xor
fwait
jo
adc
iret
mov
int3
mov
ja
imul
sbb
push
in
add
jmp
sub
call
push
jl
inc
xor
pop
xchg
cltd
call
or
lcall
sbb
and
pop
insb
fldt
stos
inc
and
dec
pop
aaa
test
sbb
mov
mov
sbb
sbbl
add
dec
push
inc
out
adc
fistpl
add
lock
and
jns
pusha
push
pushf
cli
mov
cmp
mov
and
scas
push
jne
out
dec
and
orl
jecxz
cmp
mov
fbld
pop
out
vcvtsi2sd
or
inc
orl
shrb
push
addr16
inc
push
test
xchg
and
aas
scas
pop
mov
fldenv
shr
or
repnz
sub
testl
lods
inc
cmp
nop
lods
inc
ror
xlat
notl
or
inc
mov
popf
mov
fs
xor
sbb
call
cld
stos
repnz
mov
and
push
in
xchg
mov
pusha
cmpsb
and
adc
cmpsb
and
mov
adc
fildll
fstpl
cmpsb
inc
cmp
insl
lock
and
add
nop
and
mov
add
or
shl
mov
xchg
ljmp
push
push
out
lods
xor
pusha
insl
test
dec
aaa
push
in
aad
repz
sti
cmp
dec
into
sbb
out
cli
icebp
sub
bound
push
jae
call
or
mov
or
inc
pop
call
mov
xchg
and
lock
cmpsl
fstpl
push
aam
leave
jecxz
adc
inc
dec
adc
int3
lock
push
outsb
xchg
sti
jbe
ss
add
test
adc
addr16
lret
andl
xchg
loopne
cli
and
std
movb
ss
sbb
popa
dec
cmpl
mov
std
inc
mov
mov
test
loopne
pop
enter
inc
mov
or
fildl
cmc
sub
add
xor
jp
xor
adc
bound
or
add
inc
mov
cmpsl
std
dec
fisubrl
loopne
cmp
popa
sar
mov
pushf
rclb
enter
ja
adc
xchg
test
jne
inc
lahf
cs
in
push
test
out
cltd
popa
clc
push
mov
mov
add
xchg
test
mov
inc
mov
fstpt
pop
es
sbb
xor
mov
mov
add
dec
push
add
cmc
lcall
out
iret
xchg
and
xchg
subl
dec
loope
inc
xchg
ficoml
out
and
sti
sub
dec
push
shr
addb
sbbb
ret
icebp
mov
popa
insl
jns
xor
pop
jecxz
push
mov
imulb
ss
inc
mov
dec
or
ds
and
popa
pop
imul
pushf
cmp
add
lods
fiadds
dec
psrlq
test
lcall
jnp
add
popa
cmp
loopne
popf
dec
sbb
dec
out
xchg
jmp
or
sbbl
xchg
jle
sar
popf
sub
je
gs
mov
ss
lea
fisubl
jbe
jecxz
std
mov
and
ret
and
lock
xchg
dec
repnz
xchg
sub
mov
in
out
addr16
mov
jle
jbe
cld
imul
cs
arpl
or
in
xchg
add
mov
mov
mov
pop
imul
or
mov
pushf
out
out
test
or
mov
mov
mov
mov
push
sub
inc
fs
inc
scas
repnz
loope
out
dec
sub
test
pop
in
inc
push
fisttps
mov
xchg
or
test
out
jns
xor
jno
sub
icebp
out
rorl
icebp
std
mov
xchg
jae
xor
roll
in
cmp
and
imulb
test
out
cmp
lods
ja
jne
mov
sbb
push
fdivrl
and
mov
mov
jp
inc
out
sub
popf
mov
and
aas
and
or
sub
iret
inc
in
loope
rolb
jle
push
cmp
sbb
pop
xchg
or
lods
ret
add
outsb
je
movb
cmp
sbb
mov
push
jle
cs
cmpb
inc
mov
leave
adc
sbb
aaa
xchg
mov
mov
push
xchg
pop
icebp
in
pop
push
adc
dec
andl
jge
xchg
mov
imul
ror
pushl
add
pop
jmp
xor
xor
insl
adc
loopne
mov
or
aas
insb
stc
pop
cmpsl
add
pop
cli
cltd
sub
mov
aad
sbb
sarb
loopne
stos
arpl
push
outsb
jl
push
cmc
pop
sub
or
fists
jg
stos
stos
test
ret
fldt
inc
das
faddl
daa
daa
ja
pusha
inc
lods
sbb
loope
loopne,pt
lods
jo
shrl
mov
and
jle
dec
add
jno
fisubrs
insb
enter
imul
and
jo
push
leave
jecxz
hlt
and
ficompl
xor
jp
stos
push
and
lods
data16
cmp
lea
add
and
test
test
add
push
mov
stos
cmp
in
jp
sbb
adc
ret
lea
testl
xchg
mov
jecxz
pop
ss
push
sub
mov
rorl
dec
xchg
mov
cwtl
xor
mov
cmp
inc
inc
and
into
mov
push
sbb
add
jno
int3
pop
fisubrs
sub
jp
xchg
lods
dec
ss
sahf
add
int
cs
jne
cltd
stos
pop
shrl
es
jge
mov
sub
fiadds
stc
sub
icebp
gs
stc
pop
dec
roll
and
mov
repz
or
cmpsl
pop
movsb
repz
sbb
test
daa
mov
mov
enter
xchg
cmp
xchg
sub
pop
or
jne
outsl
scas
push
out
fimuls
icebp
mov
ret
js
xor
fsubrl
repz
lds
mov
ss
push
or
popa
mov
pushl
fists
xchg
mul
movsl
mov
sub
pop
outsb
loop
push
fadd
mov
xor
mov
inc
out
movsl
pop
fs
pop
cmpsb
push
sub
jae
mov
popa
inc
mov
jbe
mov
outsb
jg
stos
inc
mov
mov
outsl
aaa
popf
aas
fwait
mov
mov
aam
arpl
inc
sbb
dec
dec
and
loopne
les
fbld
rcll
xchg
insb
push
dec
cld
push
dec
cmpsb
sbb
pushl
pusha
cmpsb
nop
les
stos
jo
lea
into
aam
lcall
or
mov
mov
xchg
in
push
mull
cmp
mov
rcl
push
sbbb
insl
and
mov
adc
mov
pop
jmp
xchg
lds
call
adc
xchg
pop
jp
or
push
xor
ljmp
xchg
xlat
out
mov
insb
rorl
or
or
jb
mov
frstor
andb
loop
leave
mov
pop
sbb
xchg
test
rcll
dec
inc
mov
fldcw
jne
add
add
imull
mov
xor
dec
data16
cmpb
aaa
push
sbb
and
jne
inc
cmp
dec
or
ror
mov
cld
push
lret
lret
ret
jnp
cmp
jns
adc
es
movsb
jecxz
into
push
inc
arpl
repz
dec
mov
xchg
sub
in
jmp
dec
fistps
xchg
mov
mov
js
sub
into
daa
in
push
scas
add
jmp
push
jmp
dec
mov
dec
scas
jb
mov
mov
dec
jp
cs
movsl
in
jp
mov
sub
lock
dec
xchg
inc
pop
pop
cmp
or
movsl
sub
in
mov
jge
xlat
lret
leave
jno
jecxz
cltd
xchg
lcall
test
jae
pop
sbb
adc
fdivrs
pop
pop
enter
fwait
repnz
mov
stos
test
pop
clc
je
cmp
adc
ret
outsb
into
push
ret
pop
fstpt
jne
int3
iret
xor
inc
push
sahf
out
es
pop
lods
xor
imul
insl
iret
mov
sti
jno
cld
outsl
xor
popa
pop
out
movsb
mov
jne
inc
imul
pop
cmovnp
pop
movsb
mov
mov
and
into
mov
ret
push
jmp
dec
call
aam
adc
lods
gs
aad
xor
jns
in
jecxz
mov
jl
inc
lret
test
inc
mov
je
jnp
mov
inc
fwait
fwait
std
lods
out
ffree
je
pusha
cmpsb
in
daa
dec
hlt
mov
out
lds
mov
xchg
shrl
jno
iret
mov
js
add
outsb
ficoml
in
movsl
cmp
repz
int
imul
repz
xchg
sbb
stc
sbb
pop
mov
aaa
out
xor
enter
add
inc
lods
jecxz
in
insb
xor
xchg
cmp
and
dec
lock
negb
mov
jns
add
cmpsb
repz
fmulp
mov
mov
xchg
popf
hlt
cmpsl
or
xor
jp
jne
jecxz
add
push
inc
fadds
inc
push
test
jg
jp
xor
shlb
sbb
mov
or
cli
leave
inc
xchg
jno
clc
mov
sbb
push
mov
movsl
cmp
not
mov
or
pop
dec
cli
pop
lods
test
pop
lock
popa
in
sbb
ja
sub
jb
lea
nop
jle
inc
mov
dec
adc
or
dec
mov
push
idivl
iret
cmp
andl
mov
insl
jl
js
and
out
in
pop
insb
mov
insl
mov
cmp
or
out
xchg
sbb
mov
mov
shr
sub
imul
lods
cmp
aam
arpl
add
repz
xchg
rol
maskmovq
idivl
mov
push
mov
push
enter
test
fsubr
adc
dec
sub
dec
in
xor
jmp
push
inc
dec
and
xchg
push
imul
lds
les
outsl
add
mov
dec
rorl
xchg
or
add
lret
std
nop
jmp
out
mov
lea
mov
pop
imul
out
mov
lods
pop
jne
out
in
xchg
jne
lret
cmp
cmp
dec
dec
push
popf
sub
mov
std
mov
fwait
push
aas
xchg
xor
ja
popf
sub
inc
sbb
inc
scas
adc
pop
ljmp
popf
jbe
shrb
inc
push
popf
mov
imul
dec
ds
add
adc
mov
enter
xchg
pop
fnstenv
push
jne
iret
leave
int
in
mov
stos
pop
xlat
jno
lods
inc
negl
pop
in
aaa
or
mov
lcall
clc
cld
outsl
out
popl
cwtl
fmulp
pop
dec
cmp
cmpsb
dec
sub
lahf
in
rcrb
ljmp
sbb
cmp
pop
mov
subb
pop
mov
xchg
push
aas
jbe
inc
mov
pop
idivb
mov
pop
dec
add
mov
mov
jae
mov
jge
dec
scas
out
loopne
adc
pop
mov
mov
xchg
inc
mov
mov
dec
jmp
jg
insb
and
in
inc
shrl
sbbb
and
xchg
push
pop
clc
dec
pop
and
xchg
out
mov
and
sub
dec
and
out
pop
inc
cmp
stos
lock
in
jb
jnp
mov
add
xchg
mov
mov
pop
cmp
mov
jbe
imul
enter
add
nop
inc
xor
pop
pushf
or
xchg
jmp
add
out
popf
fnstcw
sub
sbb
cwtl
ret
loope
push
in
arpl
dec
rorb
dec
out
sbb
pop
pushf
pusha
outsb
mov
inc
adc
cmpsb
fucom
ja
fsubl
lret
arpl
and
stc
mov
adc
pusha
lcall
mov
xor
ds
pop
xchg
push
shrl
or
add
jbe
add
call
je
lcall
out
hlt
cmp
out
popf
mov
ljmp
xor
or
ljmp
cmpl
dec
data16
sub
xlat
add
test
mov
sbb
jg
cmc
adc
dec
fwait
mov
addb
js
pop
stos
mov
out
dec
pop
sub
lea
xchg
mov
outsl
mov
xchg
sub
ficompl
push
sarl
ficompl
sub
int3
jns
repz
cld
push
dec
push
insl
scas
enter
mov
rcll
addr16
lods
mov
mov
xchg
mov
stos
inc
pop
sar
js
test
cltd
enter
jnp
adc
push
pushf
inc
scas
test
pop
xchg
fwait
movsb
cmp
shl
outsb
enter
dec
popa
loope
mov
pop
xor
les
inc
inc
push
das
into
imul
and
test
lods
dec
cmpsl
std
jmp
mov
in
mov
js
imull
filds
mov
popa
scas
sbb
dec
pushf
out
push
fiaddl
sbb
lahf
daa
push
xor
add
jne
es
and
jg
gs
and
repnz
fnsave
cmpsb
call
mov
lods
cmp
pop
push
std
sub
jl
cmp
cmpsl
mov
mov
cmp
jl
dec
loope
popf
sbb
sub
adc
rorb
ss
or
stos
jbe
jmp
fwait
sar
jmp
xor
add
hlt
aam
push
inc
faddl
test
mov
inc
loop
das
repnz
inc
pop
aaa
add
add
xchg
clc
xchg
inc
repz
andl
mov
cmp
mov
or
rol
enter
dec
push
jb
add
xchg
pop
cli
cmp
insb
adc
mov
push
std
push
std
aam
pop
popf
jo
cmp
mul
scas
fistl
or
and
movsl
mov
addr16
ds
loopne
xor
test
pop
and
loope
fwait
jne
inc
xor
and
mov
mov
dec
mov
aaa
push
cmp
fisttps
push
mov
add
bound
bound
jecxz
xchg
scas
cmp
in
mov
xor
fnstsw
arpl
push
xchg
add
cli
mov
mov
xor
lret
in
stc
or
rcl
sbb
cmp
xor
push
push
out
xchg
icebp
in
pusha
out
aad
roll
es
leave
xlat
push
push
addr16
inc
negl
adc
sarb
xchg
es
test
push
mov
mov
mov
pop
lods
testb
testl
bound
mov
mov
sahf
dec
in
fs
lods
popf
pop
insb
cld
pop
mov
dec
jecxz
or
push
cmp
daa
push
mov
test
xor
pop
sbb
mov
mov
movsb
pop
mov
fiadds
sub
mov
jmp
jnp
mov
std
aam
jg
cmp
xlat
insb
out
rcrl
jne
jp
dec
pop
fmuls
movsb
dec
aaa
or
push
pop
push
cmpl
jle
sti
xor
pop
orb
inc
scas
sub
ret
cmp
pop
jns
lods
cld
xchg
fidivrs
jb
xor
jns
pushf
sub
jo
adc
rorl
popa
inc
test
fstpl
fiadds
dec
hlt
pop
mov
gs
aam
arpl
xchg
add
outsl
add
imul
and
clc
jg
scas
fidivl
je
mov
addb
aam
in
mov
sbb
inc
mov
and
push
jp
popa
lods
pop
inc
pop
int3
jg
jmp
cmp
lods
xchg
sbb
sbb
roll
scas
adcl
jnp
sahf
mov
aam
scas
add
mov
lret
fstl
mov
mov
pushf
pop
mov
scas
test
rclb
dec
unpckhps
or
push
mov
mov
jg
pop
adc
and
mov
mov
aam
fdivs
sbb
mov
xchg
sub
ljmp
aas
add
jl
mov
imul
daa
adc
cmp
ret
das
or
popf
cmc
adc
sub
rcrb
inc
jl
dec
icebp
mov
jb
repz
int3
pop
outsb
repnz
sbb
sub
mov
pop
xchg
inc
xchg
mov
pop
lds
rcll
imul
addb
or
stc
mov
cmp
cmpl
rcr
ljmp
scas
inc
adc
rolb
lret
cld
testb
stc
scas
jg
data16
and
dec
pop
pop
dec
test
xor
clc
pop
int
sbb
mov
insl
out
jnp
add
loopne
test
pop
add
xor
or
ficompl
sub
jmp
cmc
mov
movsl
insb
gs
scas
sbb
or
cld
lods
inc
push
xchg
in
pop
or
cltd
insb
mov
ror
pop
and
bound
dec
jecxz
mov
in
std
ljmp
inc
jns
xchg
xor
adc
gs
cmpsl
loope
call
inc
push
jmp
or
sub
enter
mov
rcrl
xchg
lcall
mov
rcl
pusha
lcall
mov
or
xchg
add
repnz
mov
xor
outsb
mov
dec
or
scas
and
mov
or
inc
pop
pusha
lock
jbe
push
pushf
cmp
xor
mov
push
call
add
fcoms
rorl
dec
add
and
jo
loopne
mov
enter
push
sbb
out
jecxz
dec
adc
push
push
je
les
push
arpl
std
adc
pop
push
push
dec
jae
push
aaa
jne
mov
lret
int3
fcomip
daa
cli
xchg
pop
adc
mov
dec
xchg
add
lods
push
repnz
add
inc
insl
cmpps
cld
xor
lods
xchg
cld
push
sbb
frstor
js
hlt
push
mov
addl
aad
test
xlat
cs
fwait
xchg
inc
rcl
aad
mov
les
gs
adc
mov
pop
jnp
scas
mov
aad
lret
jg
push
pop
ljmp
cli
lcall
mov
lods
dec
sbb
inc
cmpsl
ja
xchg
xchg
jns
test
cmc
push
and
mov
addr16
mov
xchg
out
dec
lds
lds
inc
push
lret
out
mov
mov
push
mov
in
mov
outsl
loopne
ret
in
xor
fxch
sbb
push
adc
push
fsubr
pusha
shl
cmp
adc
mov
xchg
adc
and
lret
mov
ss
adc
subl
pop
lgs
mov
jbe
mov
xchg
sbb
or
icebp
enter
scas
out
icebp
insb
mov
mov
mov
mov
mov
push
xchg
loope
daa
fsubrl
add
pop
out
pop
xor
xor
orl
bound
jnp
jbe
popf
sbb
cli
sub
xchg
pop
fldl
adc
lods
sub
fadds
pop
fistps
arpl
inc
in
push
push
out
movsb
xchg
and
push
push
xchg
int3
dec
cmpsb
cmp
mov
clc
mov
push
or
mov
mov
jae
lds
adc
xlat
test
mulb
pop
cli
cmp
test
clc
dec
fldenv
addr16
dec
je
jl
and
fildll
cmp
scas
ss
mov
bound
shlb
or
xchg
clc
mov
loop
mov
xor
inc
inc
pop
ss
aas
mov
cmp
pop
fists
aam
mov
mov
ss
push
cli
lahf
or
xchg
es
adc
mov
icebp
push
arpl
mov
jae
push
in
sub
mov
add
jmp
adc
dec
xchg
mov
add
cmp
adc
inc
lods
and
or
or
ds
mov
cli
inc
sbb
es
mov
inc
imul
fcoml
inc
ds
jb
jl
lds
add
in
stos
lahf
lods
fndisi(8087
sbbl
jecxz
and
mov
lods
out
jns
xchg
mov
mov
sub
in
jmp
sbb
mov
or
pop
cmp
notb
insl
test
xchg
iret
shrl
mov
pop
out
in
mov
pop
push
out
sub
add
xlat
mov
or
dec
jecxz
repnz
push
add
jne
inc
mov
inc
jae
pop
icebp
jnp
dec
stos
inc
cmp
adc
notl
pop
les
pop
nop
pop
xlat
in
stos
push
dec
lret
and
xacquire
iret
fidivl
pop
push
bound
cmpsl
loope
in
sbbl
sbb
mov
ljmp
mov
rcl
les
or
test
into
pop
lahf
movsb
cmp
sbbb
ja
adc
lcall
loop
xor
jp
or
shrl
sbb
ficoml
or
bound
scas
adcl
shr
addb
xchg
cmp
lahf
add
sub
fnstsw
mov
imul
data16
je
test
cs
push
mov
popf
xchg
add
xor
gs
xor
dec
test
scas
inc
push
adc
or
inc
push
movsl
xor
jbe
shll
dec
mov
iret
sub
push
call
aas
scas
outsl
push
adc
xchg
sub
addr16
mov
scas
adc
jmp
adc
in
xor
sbb
mov
fs
imul
iret
insb
xchg
lods
or
jns
into
xchg
add
mov
addl
push
pop
mov
xchg
daa
xor
xchg
add
hlt
loope
js
aam
push
mov
int
pop
mov
push
push
fstl
movsb
in
inc
jbe
mov
jb
inc
fimuls
lods
out
aas
stos
ret
xchg
push
pusha
add
fadds
cmp
hlt
mov
int
test
gs
pop
outsl
test
sub
sbb
mov
mov
lret
das
in
adc
sahf
cmc
repnz
dec
pop
lcall
repz
jnp
nop
push
pop
xchg
jmp
dec
mov
mov
daa
lods
int3
cmp
mov
sbb
jp
mov
out
adc
jns
test
sbbb
jne
xchg
dec
cs
enter
dec
mov
xchg
fdivrs
test
xchg
cltd
add
in
insb
xor
inc
or
scas
mov
adc
dec
mov
inc
cmp
or
dec
xchg
addr16
das
lock
pop
hlt
sbb
jecxz
shlb
ret
cmpsl
mov
mov
pop
mov
out
cltd
jb
lret
mov
lods
mov
pop
popf
ror
icebp
std
das
fs
ror
add
lods
add
cmc
jle
daa
mov
sub
mov
sbb
or
pusha
je
push
inc
mov
loop
push
or
mov
test
lods
int3
lret
or
cmp
jo
in
pop
push
lahf
es
and
movsl
fsubrs
push
ret
inc
mov
dec
mov
jle
cld
cmp
inc
notb
movsb
dec
dec
jne
xchg
repz
jne
dec
mov
insl
dec
dec
lahf
rcll
cld
lods
call
xchg
mov
sbb
mov
jbe
es
cmp
jmp
hlt
mov
rcrb
mov
movsl
mov
enter
mov
xchg
dec
xchg
test
xor
inc
adc
leave
pop
fisttpll
out
notl
js
xor
fcmove
insl
in
ret
insl
mov
and
shll
gs
or
aad
mov
add
stc
outsl
clc
pop
pop
cmp
xchg
sbb
push
fwait
or
pop
lock
lods
addb
fimull
pop
xlat
es
cs
out
lea
pop
scas
push
cwtl
popf
jge
mov
mov
das
test
jle
arpl
add
inc
or
leave
and
cmp
in
gs
rcrb
xchg
cwtl
and
imul
pop
scas
cmp
shl
jo
jg
pop
test
shll
ss
sbb
inc
or
sbb
insb
leave
or
jl
sub
add
fs
xor
in
fwait
jne
push
jmp
lcall
add
stos
push
xor
xchg
cmp
sbb
pop
into
loop
mov
cmp
arpl
xor
imul
push
mov
pusha
dec
arpl
mov
repz
cmp
push
mov
mov
or
les
test
stos
inc
mov
cli
mov
adc
lret
loopne
dec
dec
cld
and
pop
call
adc
inc
leave
arpl
sub
lods
push
sub
mov
push
push
outsb
adc
or
and
iret
mov
int
push
inc
xor
inc
pop
test
xor
xchg
lret
test
cmpsl
sub
aad
push
jb
dec
cli
push
xor
pop
aad
or
jmp
das
popf
mov
push
dec
adc
cmp
xor
pcmpgtb
xchg
xchg
dec
cmpsl
push
repz
push
push
pop
aad
inc
decl
divb
pop
xor
pop
add
xchg
sub
pop
pop
push
data16
shl
jns
sbb
inc
mov
cld
xchg
sbb
xor
mov
loopne
pusha
lret
adc
lret
stos
icebp
das
icebp
inc
popa
fists
jp
pop
or
fldcw
aam
push
cld
xchg
push
jg
pop
leave
mov
lret
aad
decb
lea
pop
jno
add
push
sti
mov
sbb
mov
inc
inc
cwtl
loop
imul
rcrb
mov
mov
xchg
ljmp
xor
xchg
in
and
test
xchg
jae
or
push
jne
es
addr16
add
sarb
push
rorl
fdivrs
in
dec
enter
gs
jno
aas
fwait
mov
sbbl
inc
leave
fs
add
inc
lahf
dec
push
popf
add
popa
xchg
xchg
and
push
and
into
stos
fildl
xchg
int3
push
push
aad
aam
mov
sub
imul
xor
sbb
lea
push
push
insl
mov
stos
inc
pop
in
lret
xchg
data16
add
xchg
inc
scas
mov
cmpsl
out
push
push
xor
sbb
jb
mov
hlt
mov
jno
popf
mov
adc
mov
roll
jb
leave
js
ret
roll
jl
bound
adc
movsl
cmp
and
movsb
cmp
xchg
ret
dec
popf
lret
push
hlt
jae
push
sub
fs
aas
xchg
and
lcall
and
gs
jmp
outsb
outsl
enter
mov
fisubrl
push
in
call
cmp
jns
into
cmp
and
push
xlat
mov
sbb
push
fisubl
stc
aam
lods
pop
lods
addb
sbb
sahf
jnp
loop
or
sbb
mov
sahf
xor
adc
lcall
xchg
fsubrs
pusha
rcl
lds
jns
inc
scas
mov
push
mov
popf
lds
pop
inc
xchg
subb
scas
scas
pop
lock
fs
test
int
sbb
in
test
cmp
fnsave
sbb
leave
jns
test
add
add
jno
rcrl
dec
pop
and
loope
call
cmp
jo
mov
int
frstor
sbb
addr16
movsl
or
cs
pushf
jg
inc
jo
mov
test
and
rorl
pop
idivb
cmp
sar
mov
notb
xlat
int
xchg
pusha
sub
cmp
adc
hlt
xor
jne
push
pop
adcl
mov
inc
pop
fdiv
enter
inc
cmc
movsb
adc
cmp
lds
test
mov
int3
jle
popa
pop
divl
jae
cmp
adc
es
loopne
mov
push
movsl
bound
out
push
leave
pushf
test
cld
rolb
stc
mov
xchg
fisubs
pop
add
mov
mov
les
aas
push
leave
adc
lods
jmp
nop
mov
lret
jle
call
or
out
shrl
pop
ljmp
inc
fwait
cmc
ljmp
pop
xor
in
and
push
jb
jle
cmp
push
mov
in
es
xor
adcb
enter
inc
jae
mov
add
cmp
int3
sub
gs
push
mov
or
das
or
mov
xchg
cmp
push
push
dec
popa
dec
loopne
cmp
mov
data16
dec
dec
or
mov
sbb
xchg
fdivl
push
jecxz
mov
jp
gs
push
add
push
push
pop
adc
dec
data16
rcl
mov
aas
lods
pop
rorl
fidivl
mov
jo
les
test
sub
rol
fnstcw
les
imul
and
sahf
and
cmpsl
push
jl
jmp
sub
cmc
or
push
mov
pop
xor
hlt
mov
lret
insb
rcll
mov
js
and
imul
mov
and
scas
cmpl
and
mov
pop
add
cmc
mov
mov
dec
sahf
sub
mov
cmp
ja
sub
pop
dec
dec
bnd
xor
das
cmp
shufps
add
outsl
ret
inc
push
pop
insl
sbb
incl
das
imul
fucomp
repz
jb
das
mov
and
cmp
jle
mov
aaa
mov
add
repz
jnp
pop
xor
int3
push
test
fdivrs
mov
and
and
adc
push
add
push
lea
into
push
insb
pop
lea
outsb
fildl
sahf
sbbb
call
rorl
movsl
jmp
rcrl
push
iret
popf
hlt
or
stos
mov
cmpsl
inc
mov
repz
cwtl
adc
mov
pop
and
xchg
add
in
lea
and
mov
mov
js
imul
adc
push
insl
or
rolb
mov
loop
sti
cs
sahf
mov
notb
js
fistpll
adc
cmp
mov
bound
in
cmp
mov
xchg
sbb
outsl
adc
addr16
stos
leave
mov
jge
ss
andb
lahf
repz
cmc
addr16
xor
and
mov
test
push
sbb
shrl
push
xor
js
pop
popa
clc
dec
mov
xlat
mov
mov
loop
dec
iret
aaa
sub
sub
mov
adcb
mov
adc
pop
push
pushf
cli
scas
xchg
inc
cwtl
int3
dec
cmp
js
fsubrl
jg
sub
scas
or
mov
mov
push
mov
adc
in
mov
or
dec
lret
cwtl
and
lods
inc
pop
lds
insb
sub
ja
dec
mov
pushf
cmpsl
ljmp
adc
pushf
mov
dec
pop
cli
jge
sti
fdivrl
mov
stos
and
stos
and
jbe
cld
xchg
mov
sbb
push
lcall
lock
jns
rclb
pop
xchg
mov
cmp
lea
and
popa
cmp
fistpl
or
fwait
cmp
xor
mov
jbe
and
aaa
data16
mov
and
add
ja
xchg
aas
ret
jo
imul
push
add
sahf
cmp
test
jbe
nop
lcall
dec
inc
stos
dec
das
bound
inc
test
xchg
mov
push
xchg
inc
mov
xchg
arpl
lahf
cmp
std
lret
xor
dec
push
jns
jg
outsb
popa
lcall
and
pop
push
mov
hlt
push
xchg
bound
and
inc
mov
or
adc
mov
jnp
loop
lahf
xor
popa
lock
xchg
add
jp
inc
iret
test
clc
movl
fimull
popa
mov
sbb
mov
roll
cmp
lret
out
sbbl
xor
cmpsl
add
out
mov
mov
inc
les
sub
mov
sub
scas
divb
mov
test
mov
lahf
inc
pusha
inc
mov
xchg
lods
dec
add
or
popa
xchg
pop
int
pop
inc
mov
sub
ret
fdivp
xor
pop
dec
bound
scas
and
js
mov
jo
shlb
cmpl
jb
mov
decl
mov
jnp
jno
or
jb
cltd
mov
xor
outsl
mov
jge
shlb
jp
test
lret
cmp
mov
inc
mov
mov
dec
lret
push
imul
enter
inc
inc
loopne
add
fstpl
xor
and
or
subl
sub
lret
in
std
and
add
sub
adc
insl
jge
pop
mov
fsub
sub
clc
fmull
popa
fistps
mov
xchg
jmp
cmp
mov
outsb
mov
jp
xchg
jo
or
push
adc
mov
pop
clc
jecxz
sbb
orl
repz
push
cmpl
call
cwtl
pop
sbb
testl
mov
outsl
jb
fmul
lds
dec
imul
push
jb
movsl
cmp
xor
add
dec
cmp
test
loop
jns
jecxz
dec
inc
xchg
xchg
ja
sbb
dec
outsl
in
rcll
adcl
jns
jo
cmp
cmp
xor
les
sbb
dec
dec
popa
lret
pop
cmp
std
loopne
jle
sbb
fsts
mov
and
xchg
ss
add
sbb
mov
stos
mov
push
push
test
jbe
int3
inc
adc
fsubrl
dec
scas
sbb
pop
pop
stos
lcall
loopne
mov
addr16
or
fdivs
imul
imul
xchg
stos
fcmovbe
ds
xchg
jb
mov
fidivs
xchg
jle
imul
stos
mov
cmc
mov
sbb
popf
sahf
add
xchg
dec
mov
mov
scas
ds
repnz
pop
push
push
cmp
in
add
inc
fistpl
mov
sub
lahf
rorl
lret
shlb
fs
mov
sub
dec
lods
mov
mov
cmc
pop
cli
jno
inc
icebp
daa
jbe
in
jge
mov
pop
jecxz
lret
fnsave
cmp
pop
mov
mov
int
in
imul
and
movsb
push
mov
cmp
adc
xor
push
sbbb
es
subb
mov
mov
arpl
cmp
cmc
mov
jno
add
cli
or
xchg
dec
push
xlat
mov
andl
dec
add
in
xchg
pop
jmp
xor
fstps
test
push
mov
lea
cwtl
push
fwait
lods
and
and
loope
jo
add
loopne
or
push
adc
add
xor
mov
repz
jmp
or
in
adc
aad
xor
lock
push
pop
cmp
lahf
xor
int3
arpl
insl
jge
push
mov
dec
cmp
pop
jecxz
jle
dec
mov
out
inc
stc
sbb
add
mov
xchg
mov
sti
sbb
incb
dec
lods
mov
xchg
sbb
mov
inc
pop
xor
mov
mov
mov
and
inc
es
jmp
fidivl
push
cmp
and
push
mov
lock
xchg
repz
adc
mov
sub
jo
lock
lock
push
mov
stc
inc
pop
mov
dec
mov
xlat
dec
test
fstpt
mov
pop
sahf
addl
adcb
adc
cmp
das
jb
bound
mov
inc
xchg
jge
mov
fiadds
cld
jle
sbb
scas
cmp
std
push
stos
sbb
cmp
xchg
das
xchg
adc
inc
dec
mov
outsl
enter
mov
cltd
dec
xchg
es
dec
cmp
push
cli
mov
leave
xlat
adc
pop
sbb
push
fidivrs
inc
es
adc
cmp
jne
or
int
push
adc
out
xlat
leavew
lea
popf
sti
popa
xchg
pop
popf
rclb
dec
movsb
lods
jne
and
ret
sahf
int3
into
fs
iret
aam
into
pusha
sbb
lds
or
fidivs
popa
cmp
sar
or
shll
xorb
cmp
gs
bound
jg
xchg
mov
testl
scas
add
add
into
pop
jecxz
loope
and
push
addr16
push
cmpsb
or
pop
and
sub
pop
push
andl
fucompp
subb
daa
ja
cmp
mov
mov
rorb
xlat
repz
pop
orb
in
in
fcmovnb
xor
es
inc
push
out
test
add
push
aam
test
aam
adc
call
sbbl
js
xchg
sub
lcall
stos
adc
out
lret
add
lds
pushf
dec
insl
cmpsl
push
mov
jecxz
adc
inc
mov
icebp
dec
xor
xchg
cmpsl
cmc
in
shrl
in
aaa
andl
mov
pop
or
inc
movsl
mov
push
movsl
out
mov
xchg
xchg
sub
popf
add
es
sub
xchg
jp
fistps
test
test
push
jnp
dec
and
int3
js
lock
jno
jno
out
aaa
les
xchg
jmp
mov
in
mov
lds
push
jb
and
pop
stc
iret
mov
sub
mov
jns
xor
sbb
cmp
in
push
adc
lret
outsb
xchg
mov
dec
mov
jle
pop
out
loop
out
sub
mov
pop
xor
pushf
jbe
aas
and
lcall
mov
ljmp
push
notb
andl
jl
sbb
int3
enter
flds
add
test
pop
loope
pop
insl
mov
loope
inc
inc
jno
xchg
sub
xor
xor
mov
inc
push
sbb
xor
and
mov
inc
sti
xchg
fs
xabort
or
xchg
mov
das
and
sbb
lods
ss
lcall
adc
les
jmp
mov
movsl
adc
mov
fdivl
cmp
lahf
shlb
dec
popl
push
jmp
jbe
ret
cwtl
mov
lods
shrl
cmp
add
push
push
inc
push
lret
or
sub
push
mov
decb
test
mov
mull
outsb
mov
dec
fstpt
pushf
hlt
ror
subb
xor
push
test
cmp
cmp
sbb
stos
sahf
jge
jo
ss
icebp
jns
jmp
and
dec
mov
jns
pminub
popf
and
cmp
rcrl
aaa
mov
nop
out
adc
cmp
xchg
sbb
add
jb
dec
push
data16
add
imul
das
inc
mov
cld
lock
cmp
jmp
cmp
pop
and
std
loopne
pop
cmp
sbb
outsl
push
ficoms
mov
cmp
daa
imul
jae
mov
test
add
ret
in
cmp
loopne
scas
aaa
jne
jmp
mov
push
or
or
push
lods
sti
or
test
movsb
or
fstps
nop
mov
jb
sbb
sbb
cmpsb
sbb
push
push
dec
add
aad
mov
push
mov
clc
popl
movsb
push
jg
dec
xchg
fwait
pop
pop
dec
add
aas
xor
mov
incb
scas
test
adcl
pop
xor
loope
add
dec
arpl
lret
mov
push
aad
sub
outsl
inc
je
xor
xchg
xor
dec
inc
or
xchg
xor
inc
jge
mov
jb
lock
cld
int
fstl
fs
cmp
test
lret
mov
push
aam
xor
sub
push
pop
adc
inc
loop
addr16
xchg
adc
sub
shlb
sub
int
hlt
xchg
sahf
sub
pop
mov
stc
js
das
adc
sub
inc
lods
xchg
sbb
flds
xor
iret
dec
pop
sbb
pop
xchg
inc
mov
addr16
sbb
adc
fwait
test
jg
test
dec
repz
sbb
out
cmp
pop
mov
inc
inc
icebp
jbe
sbb
lahf
scas
inc
cmp
pop
int3
outsb
mov
sbb
sahf
mov
push
popf
dec
push
imul
mov
pop
dec
rcl
aas
push
popa
or
mov
jmp
jmp
sti
xchg
stos
pop
incl
negl
jle
mov
inc
in
add
add
das
xor
fsubl
push
or
loop
mov
fwait
jle
ds
cwtl
stc
adcb
pop
push
mov
dec
push
imul
mov
fmull
xor
insl
push
outsb
andb
mov
lods
out
int
mov
cmp
les
xor
in
loopne
xchg
les
jo
sub
adc
testb
aad
arpl
rcll
loope
rcll
or
add
inc
inc
mov
aad
pop
adc
jge
jne
push
sbb
xchg
mov
cvtpi2ps
pop
xor
arpl
clc
nop
mov
ret
pop
push
sub
cltd
loopne
xchg
cmpsb
outsl
lret
les
data16
frstor
inc
sbb
cwtl
adc
cmc
adcl
sbb
xor
xchg
xor
scas
sub
adc
call
mov
adc
pop
lea
daa
les
sub
adc
movsb
xchg
lods
andl
test
mov
or
bound
bound
sub
mov
sbbb
inc
cmc
pop
js
mov
xchg
sti
xchg
xor
sbb
popf
sub
push
out
push
jb
adc
sbb
xchg
push
test
cmp
inc
pop
mov
outsb
add
and
adc
je
xor
fdivl
inc
xchg
push
mov
pushf
xor
mov
aam
push
mov
cmc
mov
jl
les
mov
jo
int
dec
lock
test
mov
aas
push
daa
xchg
mov
vcvtsd2ss
cmp
push
clc
imulb
pusha
lds
pop
ja
add
mull
bswap
test
mov
fimull
popa
outsb
aam
mov
dec
jno
sbbb
adc
cmp
aad
andb
push
mov
mov
cwtl
out
lea
fisttpll
pop
jns
outsb
test
fwait
sbb
cmp
cmpsb
jb
fdiv
ljmp
jns
pop
inc
enter
iret
lret
fs
jp
adc
sahf
push
rol
cmp
sbb
push
clc
inc
mov
fucomip
stc
fwait
loopne
test
adc
insb
enter
fwait
sub
sbb
rcr
cmp
xor
aam
dec
xchg
aaa
cmc
imul
pop
sub
ljmp
mov
adc
push
je
mov
iret
gs
in
fistpll
fldenv
jbe
aam
xchg
test
leave
jl
cltd
es
or
aaa
xor
mov
dec
in
cmp
insl
lock
mov
popf
test
fdiv
mov
sbb
xor
and
insb
add
xchg
stc
adc
xchg
xor
mov
mov
pop
nop
test
in
pusha
test
pop
xor
enter
shr
push
call
or
test
and
shll
add
lcall
or
push
inc
cmp
sbb
icebp
bswap
data16
jl
rorl
push
pop
cmp
movsb
xchg
sub
cmp
mov
dec
fnstcw
addr16
sub
pop
fldln2
out
test
outsb
cmp
fstps
mov
or
rolb
ja
jnp
je
ret
arpl
pop
inc
sbb
scas
pop
sub
mov
scas
dec
inc
and
out
aaa
in
dec
pop
push
pop
jbe
cmpsl
pop
mov
or
mov
mov
inc
scas
lods
popa
hlt
sti
lahf
jnp
cli
daa
mov
add
popa
pop
daa
pushf
aam
test
hlt
or
and
ret
add
outsl
sbb
or
out
call
lahf
mov
aaa
test
stc
add
inc
cmp
ljmp
push
mov
add
pop
cmp
out
push
cmp
mov
jno
push
aad
inc
pop
clc
aas
inc
sbb
loope
pop
mov
out
fisttpll
cmp
ret
lret
stc
mov
icebp
call
cmp
push
cmp
inc
add
stos
int
arpl
fcompl
and
das
fmull
out
jmp
dec
out
adc
sahf
dec
xchg
outsb
outsl
int3
outsb
pop
push
loope
mov
pop
or
jns
cli
daa
gs
std
mov
xor
dec
scas
sub
lock
or
pusha
dec
jl
sub
pop
and
mov
or
mov
loopne
or
mov
adc
adc
pushf
lea
add
mov
lcall
data16
jecxz
into
gs
pushf
or
mov
fidivrs
addb
ret
hlt
jmp
cld
aam
jge
lret
cmpsl
cmp
sbb
lods
mov
data16
cmp
xor
sbb
push
ja
in
mov
pop
sbb
or
push
lahf
mov
jg
dec
lods
and
jnp
inc
inc
pop
out
mov
data16
add
xchg
pop
mov
test
cmp
cmp
pmullw
sub
mov
nop
dec
les
mov
gs
dec
ss
shl
mov
into
inc
mov
std
and
ljmp
jno
or
mov
jo
out
cld
fsts
jl
mov
leave
jg
xor
cltd
ss
cmp
xor
shll
enter
sarb
sub
lret
daa
mov
sbb
les
pop
testb
es
fldl
int3
inc
xor
bound
mov
jmp
dec
pop
nop
add
xor
xor
and
aaa
je
inc
and
pop
cltd
jmp
inc
sbb
pop
loop
mov
sbb
icebp
dec
ret
clc
mov
pop
xor
lcall
add
in
nop
and
adc
insl
mov
loop
inc
fistl
bound
sub
lahf
ss
fwait
adc
inc
outsb
mov
add
or
test
push
mulb
leave
aad
mov
in
fmull
cmpsb
push
inc
inc
cli
cmp
dec
add
xchg
inc
fcmovb
stos
fstpt
xor
lods
pop
leave
and
inc
xchg
cli
call
and
test
out
mov
popa
lock
out
sub
dec
mov
pop
jbe
pop
mov
cltd
loop
push
ret
jge
add
dec
repnz
movsb
mov
aad
add
pop
movb
imul
inc
cmpsb
aas
cli
mov
aad
dec
aam
sbb
lods
cmp
pop
cmp
aaa
stos
cmp
and
pop
adc
sarb
jg
pop
repz
imul
sahf
push
push
mov
mov
mov
pop
lcall
jge
fstpt
nop
pop
bound
mov
aas
mov
in
nop
stos
cs
aas
lahf
ja
sub
adc
inc
xchg
adcb
aaa
and
test
pop
dec
pop
mov
and
rcrl
gs
dec
and
mov
in
test
sbb
xor
xchg
negb
pop
xor
dec
inc
xor
ret
jnp
es
and
out
clc
jae
das
xor
aad
mov
js
test
frstor
fistl
xor
pop
icebp
mov
aas
ret
outsb
loope
mov
inc
jp
cmc
inc
lock
testl
scas
movsb
dec
sbb
ret
enter
sub
xor
xchg
mov
pop
pop
imul
and
fistps
lret
scas
js
xbegin
mov
popa
inc
cltd
or
mov
stos
shl
fmull
mov
das
mov
mov
pop
jns
add
int3
arpl
push
mov
xlat
hlt
push
aam
xchg
mov
daa
cmp
rcrb
bound
lahf
lods
push
addr16
mov
adc
inc
rcll
mov
lods
adcl
add
push
das
hlt
cmp
outsb
fs
cmp
adc
mov
and
xchg
sub
fwait
and
lret
add
movsb
sahf
and
movsb
cmp
enter
add
enter
orb
jno
xchg
xor
arpl
rorl
je
aas
jbe,pt
pop
dec
lcall
jmp
mov
and
cmp
jg
sub
cs
mov
dec
pop
sub
shll
dec
xor
lods
sbb
outsb
add
sti
popf
push
int
pop
aas
imul
dec
iret
gs
in
insb
outsb
popa
mov
lahf
xor
jae
int3
dec
pop
stc
or
dec
xor
pop
int3
and
xchg
popa
pop
sub
divb
jge
dec
jmp
dec
arpl
pop
or
popa
orl
xor
cmp
jl
cmpsb
mov
mov
ret
push
jecxz
lret
cmp
xor
int
xor
in
mov
jge
inc
mulb
dec
call
test
xchg
mov
cmp
sub
lcall
push
jo
cmp
ds
push
test
popf
xor
push
into
iret
in
inc
add
scas
or
sub
jp
mov
cmc
ss
popf
cmpl
add
jb
and
sub
or
sbb
sbb
nop
jae
ja
pop
popf
aad
fstpt
arpl
xor
loop
in
push
jl
dec
fldl
sub
inc
sbb
jae
and
pop
sub
mov
cli
inc
in
fistps
imul
testb
notl
adc
push
push
and
push
pop
into
faddl
shll
cmc
lcall
jb
add
dec
cmp
push
in
xchg
fldt
incl
lock
inc
or
jge
stc
adc
cwtl
sub
cltd
subb
testl
arpl
pushf
or
sub
jmp
movsb
hlt
mov
or
inc
cmp
fidivrl
addr16
mov
mov
leave
fs
mov
divl
dec
pop
xor
inc
sub
imulb
push
pushf
bts
enter
adc
loop
sahf
dec
popa
ret
insb
mov
int3
js
iret
data16
popa
jl
lcall
mov
shll
add
lea
adc
stos
sub
mov
dec
mov
push
adc
fisubrl
popa
jl
xor
xchg
jl
movsb
mov
sbb
dec
imul
jbe
or
daa
fadds
mov
xchg
aaa
mov
mov
loop
ret
cmp
push
xchg
inc
xchg
out
mov
xlat
outsl
xchg
inc
sbb
add
cmp
and
and
sbb
push
mov
icebp
stos
sub
pop
pop
stos
xor
jne
sbb
bound
int3
lret
adc
mov
cli
or
std
xor
jmp
add
shlb
push
xchg
mov
in
std
cltd
std
aaa
mov
mov
sbb
jmp
ret
or
fisttps
int
arpl
adc
dec
arpl
sub
and
ret
imul
and
loope
sub
pop
push
or
adc
push
xor
push
pop
inc
test
fidivrs
add
aam
pusha
add
lea
out
xchg
cli
sub
pop
insl
nop
daa
sahf
aaa
xchg
mov
add
inc
sarl
in
gs
pop
arpl
fildll
push
aam
popf
nop
jns
pop
popl
adc
adc
inc
inc
inc
dec
or
xor
rolb
inc
lods
push
sbb
mov
mov
push
xor
mov
nopl
test
imul
rol
ss
mov
sbb
xor
jl
mov
repz
xor
aas
xchg
in
das
icebp
xchg
cmp
sbb
add
sbbl
push
in
or
adc
dec
mov
jb
cld
idivb
lds
jb
jno
xchg
popf
mov
outsl
cld
or
pushf
cmpsb
xor
iretw
movl
mov
xchg
xchg
mov
dec
loope
clc
adc
mov
push
xor
ret
jle
sbb
jle
sub
enter
fsubrl
sbb
lea
cmp
and
xchg
pop
outsl
push
lea
int
stos
inc
pop
cmc
js
mov
daa
mov
pop
jecxz
or
mov
xchg
sbb
repz
scas
cmp
rep
mov
push
lods
lret
sub
sub
jg
in
sub
mov
lods
mov
jecxz
inc
add
dec
fmull
aam
ja
iret
pop
jle
dec
push
and
mov
mov
fimull
adcb
inc
test
xor
lock
sahf
sub
out
popa
pusha
sub
adc
inc
or
inc
bound
adc
mov
pop
out
ja
divb
push
push
jne
or
outsl
push
cmp
rol
sbb
mov
push
flds
test
mov
xor
stos
xchg
in
inc
inc
es
cmp
pop
stos
loope
pop
sub
lods
pop
jl
xchg
subb
sbb
lock
adc
popf
pop
in
enter
pop
scas
lock
push
in
mov
jecxz
gs
imul
and
sarl
adc
fisubrl
pop
cmovno
ficompl
jno
jp
pop
out
mov
sbb
sbbb
lods
pop
repnz
loopne
inc
mov
sbb
lret
lcall
mov
aam
mov
mov
xchg
jo
fldl
scas
or
andb
push
stos
pusha
out
mov
aaa
test
lods
out
fs
lcall
push
rolb
inc
fcomip
iret
fucom
inc
cli
mov
icebp
rcll
dec
cld
pop
lcall
adc
adc
ja
test
test
mov
rcr
pop
add
push
or
mov
and
push
out
in
cmp
mov
fcoms
cwtl
cmp
push
bound
imul
mov
lret
pop
xchg
aam
mov
data16
out
sub
ljmp
push
ss
push
testb
mov
movsl
xor
insb
cwtl
movsl
dec
into
sti
jns
adc
xor
mov
push
nop
pop
jbe
sbb
stc
or
sbb
pop
dec
pop
or
std
inc
test
xlat
mov
ret
lds
cli
jo
repz
sbb
xchg
pop
mov
sub
xchg
cltd
sub
and
iret
lods
sub
push
xor
in
gs
fdiv
imul
add
xor
pop
inc
ljmp
mov
mov
jmp
dec
jecxz
int3
dec
add
pop
scas
ret
push
inc
ret
lea
sbb
push
icebp
sbb
movsb
jnp
cmp
fimull
jns
xchg
inc
adc
push
xor
ja
add
outsl
cmpsl
stos
rcll
add
mov
mov
add
outsl
jnp
xchg
fdivr
push
mov
mov
loopne
mov
paddw
es
mov
add
sarb
xchg
lds
inc
int
lcall
and
cmovnp
mov
ret
adc
je
adc
popf
push
sbb
pop
jmp
push
out
cmpl
inc
push
dec
jb
jle
push
cmc
mov
push
xchg
lock
jno
iret
scas
sub
ret
jns
lcall
les
push
push
je
cmpsb
fwait
cli
sub
jno
test
lds
adc
insb
cmpsl
mov
insl
push
gs
in
xor
inc
das
out
cmc
fldt
out
movb
stc
ljmp
js
iret
fstl
cmp
fists
fdivl
jae
xchg
mov
add
xor
xchg
mov
push
mov
loopne
cld
mov
sub
int
adc
ss
out
lret
jo
and
nop
pop
sbb
jmp
stc
leave
jbe
sti
cmpsb
pop
popf
pop
add
aaa
andb
arpl
movsb
cmpsb
out
or
int
jmp
inc
inc
sti
or
jmp
jl
pop
cmp
xchg
mov
mov
ja
scas
xchg
aad
out
xor
negb
mov
lds
dec
mov
cpuid
es
pop
and
push
jns
enter
jecxz
and
push
xor
jae
xchg
mov
fsubs
scas
scas
xchg
pop
jbe
xchg
test
cmp
arpl
mov
adc
push
jecxz
enter
add
cs
cmp
or
addr16
mov
fs
test
loopne
leave
mov
jle
fsubl
adc
cmpsb
xchg
xor
mov
sahf
inc
sub
mov
outsl
test
mov
fimull
push
pop
insb
test
cmpsl
bound
test
mov
cs
jae
dec
in
ljmp
lds
mov
ret
outsb
les
jle
outsb
adcl
add
scas
dec
mov
rcl
insl
mov
shll
or
pop
inc
lcall
mov
dec
fisubrs
dec
out
ja
dec
mov
loopne
movsb
add
into
imul
inc
scas
addl
sbb
xchg
push
lea
xor
movsb
or
or
mov
lcall
icebp
dec
les
out
xchg
dec
test
sahf
or
fucomi
jo
pop
sub
pop
add
gs
leave
jo
push
adc
sub
mov
jp
mov
and
dec
mov
into
hlt
or
cmp
pusha
clc
jp
pusha
subb
dec
push
ss
pop
scas
jno
loope
fadd
lods
inc
mulb
lret
icebp
cmp
jg
cwtl
jae
test
mov
cmp
orl
sub
dec
push
or
sub
fucomip
jl
jmp
std
ds
push
sbb
or
jp
mov
cmpsl
inc
mov
sub
sbb
testl
out
rolb
fstpt
mov
es
mov
stos
jmp
jb
cmp
lcall
cmovns
cmp
inc
pop
inc
pop
std
int
or
repz
aam
sub
das
mov
loopne
dec
popf
in
dec
pop
daa
pop
test
dec
js
push
hlt
scas
inc
es
adc
orb
mov
jle
in
ds
stos
dec
subb
scas
mov
xchg
lret
icebp
daa
jno
pop
jl
xchg
pop
and
fxtract
faddl
ja
push
stos
pop
pop
mov
loopne
scas
add
jecxz
aas
ja
jno
inc
stc
pop
scas
loopne
loope
sub
jbe
cmc
cmpsl
testl
sahf
xchg
pop
insb
cmpsl
push
mov
cld
addr16
mov
test
repz
pop
xlat
aas
or
das
lret
ja
mov
in
add
pop
cmp
mov
pop
fs
pop
scas
in
notl
jne
loope
lods
jb
in
into
decb
xchg
fwait
xchg
jp
sbb
stc
pop
in
imul
ljmp
aam
pusha
cmp
scas
pop
adc
movsl
js
icebp
dec
and
xor
lods
fsubrl
mov
rclb
adc
or
cmp
pop
mov
cmp
cmp
cmp
gs
pusha
movsb
fcmovnbe
mov
pop
mov
pusha
imul
repnz
out
mov
das
mov
je
or
fldl2e
arpl
push
xchg
lret
cmp
divb
xor
je
jp
dec
lods
popa
dec
lock
dec
in
outsb
push
add
pop
fwait
mov
sbb
cs
jo
fldcw
or
test
xchg
lds
jae
add
nop
pop
test
mov
add
repz
and
mov
out
push
enter
popa
and
ja
rcll
push
xchg
divb
mov
popf
repz
inc
cmp
or
dec
in
cwtl
test
cmpb
xchg
loopne
dec
mov
push
jmp
push
dec
jo
mov
aam
pop
pop
rorl
popa
sbb
ds
ljmp
push
or
je
movsb
leave
enter
mov
dec
dec
loopne
cmp
ss
mov
jbe
into
xchg
fldl
out
xor
pop
mov
flds
aam
repnz
mov
jp
xchg
sub
inc
fwait
aad
and
push
imull
adc
gs
cltd
add
mov
sbb
jmp
lret
push
and
or
mov
pop
jb
leave
pusha
pop
hlt
rcr
xor
add
push
lods
pop
imul
stc
dec
push
lea
xchg
lods
ljmp
iret
ss
mov
lea
xchg
adc
lods
ret
cmpsb
in
push
or
push
fnstenv
sub
pop
xchg
pusha
orb
test
cmp
repz
and
push
ret
loope
in
sahf
insb
xchg
sahf
mov
push
inc
push
xor
jmp
leave
aam
cmc
mov
mov
rcrl
adc
mov
xor
ds
jmp
pop
ss
sub
xchg
cmc
mov
ror
pop
popf
in
pop
and
sbbl
jnp
adc
mov
mov
jle
addr16
lahf
iret
shr
push
fscale
mov
out
xchg
and
test
jp
mov
cltd
push
and
pop
insb
push
insb
xchg
inc
js
test
in
inc
sbb
or
scas
mov
sbb
jl
insl
cmp
lcall
out
jnp
mov
ret
cwtl
push
mov
mov
add
xor
in
jl
rcll
into
mov
ds
aam
adc
test
jns
and
and
fsubp
adc
pushf
pusha
mov
sbb
xor
pop
adc
mov
ret
roll
sub
dec
pop
jb
xor
sub
sbb
adc
lods
test
ret
xor
aam
test
mov
jnp
mov
xor
jbe
in
inc
lcall
mov
or
xchg
inc
jnp
jge
dec
loop
mov
insb
ja
add
arpl
cs
mov
aad
or
pop
stos
je
pop
sub
push
sub
dec
sub
push
insb
cmpl
cmp
outsl
imul
and
jecxz
or
insl
test
mov
mov
and
xchg
inc
mov
inc
aaa
lods
jg
fs
push
sbb
outsl
inc
xchg
sbb
jl
xor
stos
jns
mov
popa
int3
lds
sub
nop
test
fisubrs
lods
pop
sub
dec
pop
sahf
testl
lods
mov
mov
dec
aad
lods
movsl
lock
fwait
lods
jbe
push
mov
sbb
shl
inc
fsqrt
subb
mov
aas
cmp
stc
loop
or
int
out
inc
in
inc
in
aam
mov
in
and
sbb
test
popf
jne
int
mov
leave
mov
inc
in
aam
xor
jmp
mov
sbb
imul
or
or
xor
fbstp
in
fcmovnbe
popa
cld
inc
xchg
daa
lcall
dec
nop
aaa
aas
aas
outsl
mov
movsl
pop
pop
hlt
mov
mov
xchg
jnp
leave
add
int3
int
pop
ljmp
imulb
xor
mov
pop
inc
iret
jb
daa
scas
addb
mov
push
sub
cld
popf
cwtl
aas
dec
push
mov
decb
ficompl
or
sti
test
imul
js
cltd
push
sub
cltd
aaa
xchg
or
xchg
les
push
and
jb
frstor
adc
cmpl
cs
jecxz
outsl
orl
add
mov
sbb
cmp
mov
orb
cmp
mov
xchg
mov
pop
and
sar
ds
jl
mov
sub
xor
jno
sub
hlt
push
sti
mov
jle
push
cmp
and
mov
repnz
aaa
adc
push
jns
enter
shrb
iret
lods
int
mov
cmpsb
and
data16
imul
cli
cmc
dec
or
mov
test
incb
and
in
add
in
and
xchg
test
push
push
sub
jg
popf
shll
fiadds
or
jae
leave
push
mov
add
xchg
sbb
dec
dec
push
int3
and
sti
sub
icebp
add
in
pop
lds
push
sbb
sti
mov
pop
loopne
xorl
cmp
cmp
adc
insl
sub
and
test
hlt
rcl
sub
pop
xchg
hlt
push
xor
sti
jle
pop
push
loope
adc
icebp
xlat
clc
das
pop
jbe
dec
lds
imulb
loop
xchg
mov
sbb
cltd
out
insb
cwtl
pop
adc
sbb
imulb
repnz
mov
add
shll
das
roll
mov
sar
jle
std
pusha
rcll
adc
sbb
jnp
stos
shufps
imulb
inc
adc
mov
test
mov
fsubrp
imul
call
shll
lret
pop
mov
lret
daa
outsl
pop
xchg
stos
pop
sti
adcl
mov
add
sbb
xor
jo
ja
test
shll
sub
mov
push
out
cli
lods
mov
add
ss
add
mov
mov
mov
xchg
sbb
into
mov
jl
inc
jno
xor
int3
push
dec
xlat
andl
ja
sti
sbbb
test
pushf
cs
fisubrl
mov
pop
loop
lods
xchg
mov
sub
mov
inc
mov
ja
adc
iret
mov
aam
shrl
dec
int
cltd
pop
lahf
lcall
push
lcall
popf
or
mov
leave
jne
push
leave
sub
cli
fmull
int3
gs
xor
ret
rcr
and
push
aas
cli
push
lahf
data16
je
sbb
or
sbb
scas
push
mov
pop
fnstsw
out
xchg
fistpll
mov
addr16
adc
jle
push
xor
jnp
mov
mov
xor
int
jnp
adc
add
sbb
imul
jecxz
xchg
dec
iret
imul
pop
sbb
insl
in
lea
pop
pop
rorb
test
adc
sub
jbe
out
test
jae
push
scas
in
jecxz
mov
add
outsl
push
mov
xchg
mov
sti
cmp
xchg
push
scas
call
or
cmp
scas
pop
mov
xchg
inc
cs
jnp
nop
mov
dec
inc
jg
jae
mov
add
out
in
aam
mov
xlat
cmp
mov
push
movl
shlb
rcll
ret
sub
push
lcall
shrl
call
jle
pop
jecxz
inc
rcll
jmp
xchg
jbe
out
jbe
push
in
and
or
xchg
cmp
mov
xor
pop
repnz
fidivrs
or
xchg
out
sub
decl
lret
push
xchg
add
mov
mov
sub
sti
sarl
sub
divl
mov
dec
lret
sti
insb
pop
cmpsl
jns
in
lcall
sub
loop
dec
test
or
repnz
loop
or
repz
sub
in
hlt
lahf
loopne
pop
push
in
pop
xchg
sti
sub
sub
rol
pop
sahf
pop
popf
repz
idivl
adc
movsl
pop
clc
adcb
sub
mov
dec
loope
xchg
xchg
push
mov
or
dec
mov
xlat
jb
jl
sbb
mov
shl
mov
push
cwtl
mov
push
stc
stos
int
shrb
xchg
std
test
imul
out
sti
mov
push
fldenv
int3
xor
jle
xorl
es
push
lods
mov
les
test
pop
push
jl
ljmp
push
dec
and
nop
jae
call
mov
cmp
in
jbe
out
pop
jbe
pop
adc
sti
add
sbb
push
inc
cmp
test
mov
cmp
lahf
jne
sbb
xor
sti
jge
push
or
imul
daa
mov
int
sbb
stos
in
es
xchg
dec
ds
adc
mov
pop
add
push
sahf
ds
push
inc
fidivl
jbe
push
mov
or
pop
jmp
or
sarl
xchg
shll
jne
sbb
jns
mov
hlt
int3
rorb
fwait
arpl
dec
xchg
cwtl
inc
ffree
repnz
and
shlb
xchg
push
xor
push
cmp
shll
movsl
cmp
loopne
jbe
in
adc
rcl
jne
lahf
movsl
xchg
pop
cld
mov
movb
or
inc
icebp
ret
fs
pop
cltd
dec
mov
jb
and
xchg
lea
mov
sbb
and
sub
xor
mov
mov
shrl
fidivl
dec
and
lahf
adc
xchg
inc
rclb
sti
rorb
mov
ds
or
sbb
mov
or
daa
sub
sbb
cmp
mov
add
leave
jno
jg
cmp
sub
outsb
out
xchg
dec
fmull
lods
and
out
or
mov
sbb
stos
mov
adc
iret
lods
xor
xor
out
arpl
mov
add
or
xor
xor
icebp
movsl
int
data16
mov
mov
jecxz
xor
xchg
arpl
sbb
stc
jnp
aad
sbb
rclb
sti
adc
cmp
or
mov
lds
test
mov
pop
push
popf
push
mov
push
cld
lret
xchg
fistps
aam
std
cmp
ljmp
fidivl
cmp
hlt
xor
mov
mov
in
clc
mov
movsb
cmpsl
jnp
rep
jns
imul
mov
pop
xor
xchg
jecxz
xchg
scas
push
sbb
pop
stos
cmp
in
or
jge
in
sti
fwait
push
add
sbb
aas
and
and
mov
jno
dec
xor
inc
loop
dec
cmp
push
insl
into
in
pop
mov
jg
push
repz
and
fldt
push
aaa
mov
outsl
xchg
mov
dec
cmp
xorb
and
inc
in
xchg
pusha
arpl
push
xor
jnp
movsl
lods
pop
fdivs
test
testl
loopne
cmp
mov
int
mov
add
cmp
pop
mov
loopne
imul
pop
lock
pop
jo
lahf
mov
or
pop
ret
pop
imul
add
and
mov
jecxz
and
fldl
lret
pop
pushf
mov
pop
jmp
shl
and
lret
add
lret
fs
push
in
orl
jne
cs
lahf
fcoms
mov
push
jns
mov
insb
mov
push
repz
test
cmp
in
into
data16
loope
pop
push
call
add
adc
arpl
leave
sbb
mov
mov
add
mov
aad
fadds
fmuls
or
es
xor
lds
cmpsb
aaa
pop
out
insb
lahf
jl
push
scas
in
sbb
mov
js
lahf
stc
nop
rcrl
mov
and
sbb
lahf
inc
xor
mov
adc
or
lret
notb
mov
mov
insb
mov
push
je
jle
mov
fisubs
mov
ret
inc
in
std
insb
add
stos
out
sbb
ret
mov
inc
and
xor
xor
sbb
inc
bound
ret
pop
nop
cmp
ret
cmp
ja
sbb
add
add
add
out
sbb
jmp
cmp
xor
aaa
push
gs
nop
scas
sahf
cmp
data16
jle
bound
mov
cmp
insb
xchg
mov
mov
outsb
rorl
add
mov
cltd
xor
and
cwtl
inc
loop
xchg
stos
ljmp
outsb
add
inc
test
dec
fisubl
out
fcmovnb
pop
or
fbstp
repnz
mov
jb
test
xchg
rorl
inc
sub
aaa
pop
fs
daa
xchg
out
add
scas
inc
sbb
xchg
add
leave
test
cli
cvtpi2ps
inc
jnp
fidivl
int3
dec
lret
jmp
xor
push
cli
dec
mov
jl
mov
adc
rol
rcrl
push
insb
das
insl
mov
lahf
lret
sbb
lret
mov
adc
mov
or
shll
inc
stos
cli
xchg
frstor
inc
lret
lds
into
mov
inc
fcoml
fidivrl
push
and
fildll
ret
lret
mov
in
inc
arpl
fdivrs
gs
inc
lds
pop
sub
in
gs
mov
xchg
pop
aam
ret
ror
movsl
mov
sarl
sub
mov
cmp
dec
pop
mov
testb
pushf
arpl
xchg
mov
adc
aad
dec
pop
sub
stos
lods
sub
sub
fimull
sub
lea
and
push
xchg
inc
movsb
shll
jne
lret
sahf
xor
sbb
mov
fmull
adc
adc
sub
je
or
jp
cmp
jb
dec
and
add
add
ja
subb
mov
lods
mov
push
xor
mov
mov
jle
jo
fucomip
in
sbb
dec
dec
xor
and
mov
lret
outsl
fnstenv
jo
add
inc
xchg
jbe,pn
pop
popf
xor
test
movsl
sbb
jecxz
call
data16
lods
pop
data16
or
scas
mov
lods
cmc
dec
lods
and
sub
xchg
stc
ret
movsb
mov
cltd
insl
push
add
or
pop
out
jno
repz
cmp
aas
mov
and
adc
cmc
mov
clc
jnp
sti
mov
pop
mov
mov
aas
adc
pop
xor
xchg
pop
lcall
xchg
std
xchg
les
shrl
in
sbb
jp
aam
mov
or
cmp
cmp
push
shll
or
cmp
or
getsec
dec
inc
push
out
push
lods
scas
jb
lods
int3
iret
xor
bound
cmp
mov
mov
out
aas
sarl
pushf
push
call
jns
jo
test
and
daa
inc
cmpsl
push
and
inc
ss
add
xor
jno
cmp
pop
lahf
jge
test
xor
cmp
mov
pop
rol
sub
mov
ret
mov
dec
fs
pop
outsb
pop
lods
sub
inc
nop
mov
fstl
outsl
repnz
fnsave
push
outsb
xchg
cld
lcall
lcall
cmpsb
addr16
sub
arpl
mov
lcall
mov
jmp
or
xchg
push
cmp
inc
mov
cmpsl
jnp
mov
leave
cltd
lods
sub
clc
mov
aad
dec
push
imul
pop
jle
mov
xchg
lods
lods
xchg
push
mov
repz
std
out
scas
call
mov
fxch
and
test
mov
subl
rorl
in
jmp
hlt
andb
jmp
negl
pop
xor
push
or
ds
cmc
sub
dec
nop
das
mov
dec
cmpsl
pushf
and
fstl
sub
mov
rcll
aad
jo
sub
jle
ds
dec
fmull
mov
xor
dec
push
mov
lret
fisubl
loope
cli
mov
loop
imul
in
pushl
cmp
xor
popa
stc
shll
cmp
sub
mov
dec
pop
pop
mov
and
aad
mov
nop
icebp
aam
lods
js
loop
lock
ret
addr16
cmp
movups
dec
mov
jl
fdivl
fldl
test
sti
inc
sub
ficomps
and
inc
loop
inc
lahf
divl
js
adc
mov
aad
xor
adc
shll
mov
in
hlt
xchg
sub
repnz
insl
jg
das
lods
test
dec
inc
in
clc
push
incl
scas
ljmp
pushf
scas
pop
insl
dec
jecxz
mov
push
rol
push
cwtl
clc
repnz
inc
and
mov
mov
jle
pusha
shrb
in
push
or
cmp
mov
mov
xchg
mov
fsubr
jg
adc
addr16
push
nop
fnsave
push
mov
jp
mov
sub
out
fxtract
scas
inc
daa
mov
int
add
mov
fimuls
and
jmp
sub
int3
xchg
cs
push
dec
jno
dec
mov
into
shrb
hlt
jmp
mov
and
testl
pop
push
scas
mov
adc
jb
xor
xlat
push
or
or
es
add
push
or
popf
or
push
aas
sbb
testb
sub
adc
pop
jbe
jl
das
adc
xorl
xchg
inc
sbb
or
shll
jmp
pop
add
pop
mov
mov
push
aaa
inc
sbb
sti
cwtl
std
xchg
lret
cmp
sub
or
or
mov
xchg
nop
and
mov
jno
ffree
xor
mov
scas
and
jge
leave
in
hlt
mov
mov
inc
andl
cwtl
adc
sub
int
mov
lret
out
pop
lock
je
fmulp
ja
mov
push
adc
mov
int
or
push
cs
mov
sub
push
or
push
cltd
cmp
insb
mov
push
jmp
lock
daa
data16
dec
dec
ret
mov
ret
iret
mov
jo
lock
jle
xor
daa
xchg
inc
lds
sbb
pop
pop
jge
jp
loope
xchg
inc
cmc
mov
mov
mov
cmp
shr
pop
rcll
xchg
adc
dec
cmp
ss
dec
loope
add
icebp
cmp
push
sahf
and
dec
dec
pop
ja
aas
xchg
gs
add
sub
push
cld
sbb
jecxz
mov
divb
cmp
stos
js
xchg
and
add
cli
stos
xlat
jb
scas
mov
pop
inc
je
mov
mov
std
movsb
jg
inc
pop
daa
add
jecxz
cmp
cmp
push
pop
sbb
and
add
jne
fdivr
mov
addr16
enter
insl
add
aam
shlb
mov
ret
push
aas
jbe
xchg
insb
dec
mov
rolb
ljmp
lahf
add
lds
adc
mov
jb
or
in
inc
mov
pushf
int
shll
call
lods
xchg
testl
aaa
or
xchg
or
cmpsb
pminsw
sarl
nop
lea
add
out
inc
inc
cmp
push
mov
cltd
jb
dec
cmpsb
jnp
ljmp
enter
rcrb
std
push
cmp
push
adc
shl
cli
repz
adc
fcmove
and
dec
cmp
mov
sbbb
jb
je
fcompl
frstor
icebp
pop
fnstenv
stos
lds
adc
jnp
xchg
xchg
add
mov
cld
push
ljmp
xor
cmp
mov
or
pushf
sbb
ret
stc
xchg
push
add
pop
mov
outsb
lret
and
in
cmpsl
jl
mov
jp
cld
push
push
lahf
pop
mov
mov
xor
xchg
mov
sbb
stos
jmp
jl
add
and
js
mov
mov
adc
push
pushf
xor
es
mov
aam
repz
xchg
jbe
cmp
pusha
inc
in
lea
mov
cwtl
fcmovbe
ret
jp
out
loop
cwtl
clc
outsb
fisttps
fiadds
ret
jg
xchg
and
cmp
dec
fwait
daa
ss
lods
lods
mov
cmc
or
push
push
cli
push
addb
push
push
add
mov
test
pop
dec
mov
insb
in
das
add
nop
fdivl
inc
out
mov
cmp
jbe
cmc
xchg
aad
adc
mov
push
add
imul
mov
aaa
nop
inc
lcall
and
rcrb
ss
sbbl
and
xlat
adc
repz
sbb
jnp
imul
jp
adcb
cli
add
add
imul
inc
fs
lds
adc
jmp
int
and
jb
sbb
mov
pop
int
mov
cmp
rcrl
popf
pusha
mov
dec
out
cltd
cli
sti
add
push
and
rcll
mov
adc
inc
lcall
and
and
in
adc
or
aaa
stos
mov
xchg
outsl
daa
ss
or
movl
sub
dec
pop
popf
cmc
out
jb
incb
test
ficomps
mov
mov
push
sub
iret
push
lret
jmp
scas
cmp
mov
inc
jecxz
mov
mov
out
popa
jnp
test
lea
test
pushf
or
add
cwtl
fisubl
pop
pop
adc
dec
arpl
sti
enter
jle
bound
xchg
addr16
mov
pop
movsb
lret
bound
xchg
fists
rorb
pop
js
push
enter
jno
adc
adc
jg
cmp
aad
inc
ret
shlb
mov
in
jg
and
scas
pop
int3
inc
pushf
dec
or
jp
sub
sbb
jnp
mov
inc
jmp
sub
sarl
xchg
mov
or
push
divl
flds
push
je
sub
fdivrl
xchg
push
ljmp
jb
xor
xchg
scas
add
sti
mov
inc
push
mov
ret
or
fisubrl
jp
int
sahf
push
push
dec
inc
push
jmp
outsb
frstor
pop
call
inc
jg
add
push
mov
rcr
bnd
cmp
inc
xor
sbb
adc
cmp
and
aaa
jl
dec
scas
pop
sbb
xor
or
pop
ss
in
pushf
and
dec
or
ja
push
icebp
mov
and
xor
sbb
push
pushf
dec
or
and
stc
pop
sub
inc
adc
or
xor
jnp
and
inc
repz
push
fs
fsubr
add
cmp
dec
repz
jns
cmp
inc
fsubl
jae
dec
fsubrp
xor
lds
mov
mov
ret
movsl
cwtl
mov
loop
push
adc
jns
mov
fucomi
or
loope
xchg
div
test
xchg
fidivl
pop
adc
movsl
loope
mov
aad
mov
jne
adc
lds
add
pop
jmp
mov
cmpsl
ds
inc
xor
sub
xchg
into
sbb
mov
sbb
fsub
jns
icebp
scas
cmp
and
mov
mov
xchg
insb
inc
popa
fwait
add
mov
mov
add
cli
xchg
stc
paddw
inc
or
imul
cmp
jge
add
add
mov
and
sub
xchg
and
mov
mov
or
cmpsb
xorb
subb
xchg
lea
mov
test
sub
adc
push
fldl
je
cmp
into
bound
adc
lcall
cmpsl
fstpt
and
xchg
outsl
int3
jg
or
or
sti
sbb
mov
xchg
sub
shrl
dec
xchg
dec
jmp
dec
mov
test
push
push
mov
sub
adcl
rcll
repz
mov
or
mov
push
in
fildl
stos
mov
fnstenv
cs
out
jg
in
in
ds
outsl
aas
jno
jns
divb
subb
adc
pop
cmp
pop
or
stc
and
jne
faddl
mov
mov
pushl
pop
pop
addps
icebp
insb
xchg
repnz
ja
mov
out
sbb
push
ljmpw
xchg
test
das
cld
adc
inc
lret
xchg
call
pop
stc
stc
jne
dec
cmpsb
mov
sbb
push
inc
pop
or
mov
call
mov
aam
frstor
fildl
out
push
mov
pushf
add
mov
dec
les
lea
shl
shrl
add
cmpsl
xor
addb
mov
aaa
xchg
sub
int3
imul
push
ja
mov
sbb
jg
out
pop
jmp
sbb
aas
gs
daa
leave
pop
lods
xor
arpl
out
ja
test
mov
push
mov
dec
mov
push
call
xorl
jl
push
mov
leave
dec
or
push
adc
xchg
adc
imull
movsl
insl
cmpsl
push
mov
mov
cmp
adc
sub
out
jge
stos
add
cld
jmp
jl
xchg
scas
jae
addb
push
cmp
nop
mov
inc
pop
rcrl
xor
dec
mov
add
push
gs
push
shr
pop
inc
insl
push
fnstsw
push
jl
jbe
lods
fwait
xor
cmp
movsl
jbe
pop
icebp
inc
push
xor
or
in
jp
jns
or
pop
mov
jne
fidivrl
subb
fisttps
push
repz
add
nop
push
dec
pusha
xorl
mov
shr
repnz
xchg
dec
inc
lcall
je
lods
mov
iret
jecxz
add
lods
cmp
push
xchg
or
xchg
outsl
mov
sbb
cmp
pop
push
cmc
lahf
loop
pop
sub
fs
jle
cmp
mov
pop
imul
adc
add
repnz
or
fnstsw
fsubrl
adcl
add
pop
mov
daa
rolb
loop
fcmovne
lret
mov
popf
mov
jnp
in
xchg
ja
adc
xor
in
xchg
mov
mov
cs
dec
loop
cli
jne
lret
add
jo
mov
add
jo
adc
rorb
cmpl
xchg
hlt
cs
movsl
test
sbb
push
mov
ret
rorb
push
ret
mov
pop
insb
mov
call
dec
cmp
inc
mov
or
mov
fdivrp
in
push
sub
test
das
insl
in
mov
movsb
mov
sub
sbb
aas
shrb
mov
loopne
add
push
adc
lahf
ljmp
mov
jp
cld
inc
pusha
fwait
cmc
adc
jp
mov
lret
push
push
les
iret
push
adc
or
mov
stos
call
in
jne
inc
adc
mov
insl
gs
call
or
push
cs
dec
inc
fidivl
loope
mov
das
pop
push
mov
jmp
and
jns
and
jns
mov
movb
jnp
pop
push
sbb
add
mov
fiadds
mov
or
popf
push
sub
xchg
mov
sahf
mov
lods
gs
std
cvtps2pd
scas
inc
clc
jl
xchg
inc
xchg
push
jb
jno
sbb
xchg
inc
pushf
and
into
mov
les
outsb
mov
sbb
mov
xor
ja
mov
cmp
inc
cmpsb
les
rcll
cmpsl
add
fsts
aas
xchg
inc
icebp
sbb
lret
sahf
xor
int
mov
or
negb
push
cmpsb
cmp
imul
test
mov
iret
rcll
addb
mov
push
lcall
cli
test
and
cmp
dec
dec
sbb
mov
cli
test
enter
pop
ficoms
sub
xor
lds
mov
cs
xchg
fidivl
loop
les
xor
or
or
pop
sahf
popa
dec
clc
andb
jnp
dec
in
pushf
push
mov
and
ss
aas
dec
arpl
insl
jge
imul
sbb
pop
loop
xor
insl
xor
mov
sbb
ds
add
mov
jnp
push
aam
test
and
sbb
mov
aaa
push
adc
adc
cmp
xor
dec
pop
cmpsl
xchg
add
aad
insb
adc
repnz
lods
sti
ret
xor
jecxz
adc
jbe
rcrb
aaa
and
je
ret
push
jnp
mov
add
int
and
bound
rcll
fsub
inc
andl
cwtl
mov
daa
or
cmp
movsl
mov
sti
out
loope
xchg
notl
pop
sbb
sbb
imul
adc
cmp
dec
mov
hlt
jo
jle
dec
mov
daa
loop
push
test
js
test
aam
arpl
test
inc
mov
fimuls
mov
xchg
mov
or
add
jns
les
inc
test
xorl
xchg
sarb
add
call
cld
cli
dec
test
ja
int
pushf
push
mov
movsb
inc
fcos
out
pop
ss
dec
jno
cmp
sbb
sbb
add
mov
lods
xchg
test
and
cmpsl
movb
xor
and
icebp
int
fs
insl
push
rcll
scas
pop
cmc
dec
sbb
mov
dec
jns
fwait
xor
repz
dec
and
fwait
adc
pop
mov
inc
xchg
pop
add
jbe
pop
das
jae
outsb
sub
xchg
ja
or
cmp
mov
cli
dec
inc
dec
pushf
sti
imul
adc
sub
pop
mov
fnstcw
cmc
into
cwtl
cmpsl
testb
fucomip
movsb
push
out
sub
lea
xor
add
mov
out
xchg
jo
dec
sbb
jmp
mov
out
and
outsb
xchg
jmp
xchg
lcall
cli
enter
pop
pop
das
scas
pop
mov
fsubs
mov
lahf
lds
popf
cli
cmp
mov
dec
and
dec
les
cmpsb
lock
insb
add
repnz
mov
inc
pop
imul
cmp
dec
or
sub
push
jmp
or
es
enter
sub
mov
sub
mov
mov
mov
dec
cld
fldcw
sbb
imul
cs
cmp
daa
repz
daa
and
and
push
push
lods
shrb
jne
pop
ret
fldcw
std
pusha
test
cwtl
xchg
ljmp
pop
mov
adc
aas
sti
fnstsw
mov
test
ret
jne
ret
sbb
iret
dec
mov
lcall
insl
enter
ret
jp
dec
mov
sub
or
xchg
std
lds
mov
sarl
mov
rclb
scas
or
xchg
scas
or
mov
push
sbbl
jge
xchg
gs
dec
daa
inc
popf
sbb
stc
mov
aas
inc
cli
cmp
jge
shll
in
test
and
lcall
push
testl
cmp
mov
into
cmp
push
lods
push
rcr
xor
daa
stos
xchg
mov
jg
cmpxchg
dec
in
clc
push
mov
fcmovnbe
xor
hlt
inc
dec
mov
rcrl
jle
cmp
sub
lcall
loop
mov
incl
mov
mov
sahf
ret
lahf
add
mov
push
jns
or
mov
mov
push
pop
mov
inc
mov
les
shl
add
mov
jb
aaa
arpl
mov
pushf
mov
mov
jnp
out
outsb
iret
dec
adc
mov
pushf
cmp
rcl
out
or
adc
and
orb
add
mov
fmuls
aas
jle
push
and
insl
les
rcll
jg
xlat
jmp
ds
pop
mov
aam
inc
aaa
lcall
mov
fiaddl
stos
in
mov
stos
mov
add
add
fwait
cs
scas
ds
adcl
aam
aad
leave
or
out
sbb
in
daa
adc
jae
mov
mov
mov
sub
cwtl
dec
pop
jnp
pop
jl
dec
mul
rcrl
push
push
sbb
in
js
mov
fiaddl
and
pop
fwait
mov
fidivrl
or
loope
cmpsb
test
xor
dec
iret
cmpb
sbb
lea
sbbb
lret
adc
xchg
mov
lds
mov
inc
addr16
jno
dec
icebp
fs
cli
pushf
inc
dec
mov
sbbl
mov
lahf
in
or
jo
cmp
inc
les
dec
jl
dec
add
aad
mov
ret
stos
and
xchg
mov
sub
push
lcall
inc
or
sti
xchg
pop
push
inc
in
test
mov
sbb
cmp
repz
sbb
inc
adcb
adc
dec
mov
mov
xor
push
push
push
or
cwtl
push
sub
out
mov
dec
movsl
pop
or
mov
ret
and
mov
fimuls
mov
rcrl
imul
fcomip
mov
into
ret
call
es
sti
push
and
mov
or
imul
sub
xchg
jmp
jge
aam
sbb
imul
lock
xchg
stc
jo
fstl
xor
xchg
push
pop
xadd
gs
mov
xlat
enter
adc
push
out
pop
push
repnz
es
xor
pop
xor
mov
pop
data16
adc
inc
add
test
ljmp
in
cmc
fbstp
adc
ja
repnz
xchg
sub
lock
push
fdiv
dec
pop
frstor
inc
fdivr
test
pop
outsb
popa
add
mov
push
push
dec
cmp
cmpsb
sbb
xchg
xor
ret
loop
pop
lahf
adc
pop
adc
and
xchg
add
mov
aas
push
adc
insb
notb
pop
stos
mov
in
jno
lea
sbb
sub
fimuls
or
movsl
xchg
dec
sbb
rorb
and
pop
or
ja
push
outsb
xchg
add
and
mov
pop
stos
jo
rolb
cltd
mov
add
xchg
jle
fs
mov
test
fdivrs
pop
add
aam
divl
jno
dec
pusha
andl
push
call
es
add
mov
push
mov
stc
push
pop
loopne
mov
pop
sub
out
out
not
scas
scas
push
sub
cmp
fdivrs
mov
loopne
ds
jo
loop
mov
dec
loopne
std
cmp
movsl
push
addr16
dec
dec
data16
xlat
imul
jecxz
je
rol
push
subb
sub
mov
adc
push
dec
adc
jecxz
sarb
jmp
jno
js
gs
cli
test
adc
add
mov
push
popf
pop
fdivrl
sbb
shrb
les
push
mov
repz
jle
ret
inc
loop
shrl
xor
pop
cmp
mov
movsl
jns
mov
xor
jb
cmp
outsl
clc
cmpsb
fiadds
or
in
push
cmp
lret
jne
dec
xor
push
aam
mov
data16
push
js
stos
lret
into
int3
fsubl
jns
pop
and
pop
mov
inc
scas
mov
lcall
les
cmc
jp
cmpsl
and
fistpll
pushf
cmp
daa
pop
stos
push
stos
je
aaa
xchg
jbe
mov
mov
in
test
sbb
fs
in
and
add
adc
in
mov
dec
std
in
les
adc
lea
push
call
and
cmp
and
fimuls
lahf
dec
pop
and
shl
mov
scas
imul
movsl
imul
add
pop
and
mov
push
dec
cmpsb
fistpl
loop
ds
aas
add
xchg
movsl
xchg
je
pop
push
sub
pop
pusha
imul
call
sbb
les
addr16
pop
pop
inc
push
jbe
push
loope
pop
in
mov
lret
cld
and
rclb
cmpsl
daa
imul
mov
mov
int3
mov
mov
addr16
sbb
inc
mov
dec
test
jae
lods
adc
sbb
aam
push
push
aam
jns
push
stos
fimull
dec
cmp
test
fnstcw
rol
mov
fstpt
add
inc
loopne
inc
fsubr
popf
call
test
fists
push
repnz
mov
push
or
sub
call
into
sub
adc
dec
or
push
je
sub
sub
mov
stos
xchg
dec
or
add
mov
shrb
out
imul
and
stos
cmpsl
ds
ret
xor
lds
add
mov
arpl
and
xchg
cs
lret
test
dec
fidivrl
dec
data16
jmp
int
mov
jae
insl
push
jmp
fcoml
sbb
popl
cltd
mov
mov
lods
hlt
loop
lret
adc
cli
push
or
icebp
jg
test
rcrb
adc
inc
mov
mov
add
inc
jb
nop
xchg
inc
xlat
outsb
jne
adc
sbb
sub
sti
xchg
nop
jb
jecxz
nop
cltd
mov
stc
jp
lock
push
div
sbbl
cmc
or
dec
dec
mov
cmpsl
sub
xor
push
jp
pushf
das
add
loope
jns
mov
dec
scas
sub
jmp
hlt
or
test
adc
movsl
test
lret
or
push
mov
dec
sub
cwtl
stos
ficoms
in
ret
xchg
in
push
insl
call
and
push
add
xchg
icebp
cmp
repz
and
or
gs
aaa
inc
repnz
and
mov
repz
decb
fnstenv
pop
mov
pop
fcompl
scas
push
cmc
mov
test
xchg
lcall
jns
test
mov
inc
or
pushf
xor
aaa
pop
pop
pop
inc
dec
mov
push
aaa
into
test
adc
push
and
inc
adc
test
out
or
inc
push
add
cli
jne
jecxz
popf
xor
cmp
pop
xchg
mov
ret
shlb
ret
adc
xor
jne
bound
adc
adc
jg
sahf
aas
lahf
rcrb
in
movsb
daa
add
sbb
test
inc
pop
cmp
xchg
hlt
xchg
ret
ds
and
hlt
ja
xchg
xchg
adcl
test
flds
mov
js
repz
cltd
and
sub
jbe
xchg
shll
jmp
mov
mov
dec
sbb
push
out
and
inc
jo
push
ljmp
lret
pop
add
mov
mov
push
ror
daa
cmpsb
dec
ficomps
sbb
inc
clc
mov
adc
loopne
mov
lock
inc
mov
lahf
or
push
push
xchg
ret
fdivp
pop
or
sbb
sub
sub
call
in
andl
cmove
mov
sar
push
add
sbb
dec
dec
pop
sahf
repz
roll
cmpsb
jo
jecxz
pop
pop
popf
lea
add
sub
hlt
inc
cmp
movsb
fs
out
push
test
ret
jnp
pop
sahf
jb
inc
fisubs
repz
mov
cli
push
jecxz
sahf
push
or
movsb
je
lret
inc
cltd
call
dec
add
cs
jnp
dec
sbb
jle
cmpsb
push
repz
add
pop
mov
mov
adc
push
jecxz
push
mov
sbb
repnz
jb
test
ja
jae
jecxz
leave
fdivs
fisubl
stc
or
sub
xchg
fnstsw
ret
clc
fbstp
pop
int3
mov
pop
xchg
dec
cmc
ret
hlt
push
adc
lock
adc
test
add
pop
test
or
imul
adcb
imul
pop
add
sub
jle
dec
pop
mov
test
fisttps
fdivs
adc
inc
in
cmp
out
lds
xorl
lahf
outsb
push
xchg
xor
fs
popf
and
pop
xchg
xor
and
dec
in
fwait
ds
xchg
xor
sbb
or
nop
jecxz
mov
inc
loop
sbb
sbb
fs
and
cmp
jnp
or
ret
mov
rorl
test
sahf
out
push
cmp
mov
sbb
xchg
cmp
sub
and
popf
xor
xor
test
mov
loope
cmc
pop
mov
or
push
test
add
scas
test
rcll
push
jbe
mov
rcrb
test
xor
stos
mov
or
scas
pop
cmp
or
mov
pusha
cmp
ret
mov
add
sub
sub
loop
iret
loop
call
mov
ljmpw
or
fs
and
add
rorb
xor
pop
or
sbb
sbb
xchg
das
les
aam
pop
insl
frndint
stos
inc
xor
addr16
push
sti
xor
clc
adc
scas
lea
or
std
xchg
cld
xchg
mov
xchg
fdivrs
push
mov
mov
loop
pop
loopne
sbb
ljmp
pop
jle
cs
pop
ret
ss
outsb
sub
fadd
pop
dec
xchg
popa
cmp
pop
dec
ret
xor
addr16
pop
or
dec
imul
std
test
or
jns
jg
inc
test
jbe
fidivl
fcoms
ja,pt
cmp
pop
xor
dec
out
inc
and
gs
daa
outsl
sub
jb
add
rclb
popa
inc
in
inc
cmp
jns
fiaddl
pushf
enter
cmp
loop
cmpsl
nop
adc
lods
repnz
dec
inc
adc
sti
sbbb
decl
or
mov
test
in
sbb
dec
sub
stos
mov
shll
adc
enter
push
sub
test
clc
mov
push
push
fisubs
push
pusha
fnstsw
push
out
cmp
cwtl
stos
adc
movsb
loop
loope
cmpsb
icebp
sub
and
mov
xchg
pop
aam
test
int
pop
xor
fidivl
jbe
movsb
xchg
arpl
jmp
and
lret
out
cmp
or
push
stos
out
fsts
loope
les
jae
enter
pop
fbstp
daa
mov
mov
data16
fs
push
inc
icebp
ret
push
stos
pop
out
fisubrl
movsl
xor
jge
inc
fistl
pop
lods
adc
jge
jl
mov
insl
insl
inc
cltd
test
dec
and
in
test
cltd
xchg
cmpsb
mov
mov
stos
xor
repnz
xor
flds
jnp
idivb
clc
lods
pop
dec
jecxz
fstps
sarl
adc
addl
mov
fcompl
push
ds
pop
addr16
xor
mov
xor
add
xchg
ljmp
insb
nopl
mov
repz
ds
testl
cmp
dec
mov
test
lret
mov
cmp
std
ret
and
xchg
sbb
xorl
or
and
stos
int
add
leave
cmpsl
sub
mov
push
stos
in
inc
in
jecxz
test
jbe
dec
in
jle
out
out
pop
xchg
sub
fdivl
popa
addr16
add
mov
cli
mov
mov
ret
sub
sub
lahf
add
inc
lcall
inc
inc
fldcw
enter
cmpsb
sahf
mov
xchg
cmpsb
mov
fwait
sub
push
sbb
mov
shr
out
sti
or
rclb
push
mov
out
xchg
push
pop
adc
xchg
scas
mov
shlb
shrl
maskmovq
shll
shrl
adc
clc
add
xor
push
js
rcll
rcrl
mov
call
dec
push
and
sbb
sbb
out
sbb
and
cmp
sbb
imul
add
mov
mov
dec
xchg
ret
pusha
push
jmp
outsb
cmp
cmpsl
aaa
mov
je
sti
or
hlt
repnz
je
icebp
mov
imul
mov
shll
cmp
dec
pop
sub
lahf
stos
and
xchg
inc
and
in
cmp
scas
mov
inc
imul
push
movsb
into
and
adc
popf
mov
push
shr
jle
stos
push
mov
lret
fisttpll
inc
jbe
xor
fisttpl
rolb
sbb
cwtl
xor
push
insb
jle
jns
iret
xchg
xor
fistps
fldenv
arpl
jno
sbb
fdivs
inc
dec
scas
inc
fisttpll
push
test
bound
or
outsl
lea
inc
ljmp
mov
dec
and
cltd
pusha
pop
and
mov
mov
mov
arpl
mov
and
xor
ljmp
cltd
aam
jb
mov
cltd
mov
xchg
sub
pop
fisubrl
jecxz
movsl
pop
xor
cmp
loop
rcrl
mov
in
in
push
dec
or
xchg
shlb
pusha
aad
mov
fstpt
jbe
push
cmpsl
lea
gs
lods
adc
decb
addl
int
push
shrl
fstpt
jo
stos
jno
insb
mov
push
lret
mov
or
clc
sti
xchg
push
push
adc
fstpt
fbld
cmp
popf
jne
xchg
incb
negb
outsb
lret
cmpsb
sub
out
xchg
xchg
mov
push
mov
aas
in
test
sbb
adc
jge
cltd
mov
lds
and
ja
mov
js
int3
cli
inc
lret
push
out
je
popa
fwait
sahf
movsl
dec
ss
jl
adc
sbbl
lahf
sbb
adc
push
inc
pop
out
jb
mov
xchg
or
dec
pop
or
inc
dec
adc
sti
jbe
push
arpl
xorl
pop
add
repz
out
sub
jns
mov
into
pop
xor
lods
and
mov
and
mov
iret
cli
shll
sub
push
loope
call
or
shll
andb
or
and
add
pop
ljmp
push
stos
cmp
jno
call
in
dec
pop
rorl
pop
out
or
mov
xlat
sbb
push
sarl
fwait
and
add
lock
jmp
js
add
sti
jg
lock
rcrb
stc
out
fisubl
mov
inc
call
les
fucomi
pop
jmp
sahf
xor
outsb
cmp
fbld
call
call
hlt
lret
sbb
adc
ss
mov
pop
pop
out
mov
mov
inc
fcomip
ja
adc
in
add
push
or
and
stos
mov
inc
stos
sbbl
test
mov
testl
xor
inc
push
jle
mov
inc
loop
dec
lea
and
lret
mov
imul
mov
lret
sub
clc
xor
or
jno
push
ror
xchg
scas
sbb
subl
lret
sbb
or
mov
push
jb
pop
sub
mov
pop
add
outsl
jae
into
movsb
nop
jbe
stos
test
push
call
sbb
outsl
or
mov
adc
xor
stc
arpl
js
inc
add
xor
in
stos
inc
popa
cmp
lods
inc
jmp
aas
add
push
ficomps
pop
sahf
jno
sub
stos
dec
fdivrl
adc
jle
inc
je
ror
xchg
je
or
cmp
mov
or
fbstp
or
xor
jo
mov
jmp
xchg
cwtl
xchg
outsb
pop
inc
jb
jbe
pop
add
xlat
adc
mov
dec
dec
fidivl
cmp
mov
imul
mov
int3
mov
inc
xchg
pop
fwait
push
cmp
cmpsb
je,pt
pop
in
adc
je
out
jle
lock
adc
xchg
cwtl
icebp
pop
push
xchg
enter
xchg
or
jmp
xchg
sub
cmc
incb
mov
les
mov
dec
jb
rorl
cmp
dec
sub
shlb
dec
or
lcall
mov
repnz
inc
int
sbb
incl
test
xchg
sbb
repnz
mov
add
les
ret
les
lret
xchg
outsl
push
and
sti
outsb
jmp
popf
in
popl
jp
xlat
jne
mov
xchg
pop
aaa
movsb
cmp
ja
mov
jecxz
cwtl
lahf
sbb
jnp,pt
inc
fisubrl
cmp
cltd
mov
mov
mov
push
in
push
dec
mov
xor
or
scas
cmp
shlb
stos
mov
cwtl
push
mov
lcall
stc
bound
cmp
push
test
jns
cmp
fcoms
xchg
rcl
out
loope
mov
cli
or
sbb
sub
daa
mov
les
in
mov
loopne
xlat
cmp
sbb
pop
and
ret
inc
xor
fxch
adc
shlb
push
lcall
fbld
mov
bound
jmp
inc
popa
sbb
mov
jo
cmp
mov
xchg
pop
scas
cmpsl
jno
mov
pop
cmp
rorl
jecxz
in
mull
add
movsb
adc
aam
sub
push
test
jmp
pop
in
xlat
cmp
mov
repz
xor
mov
pop
divb
xchg
ja
and
jp
jmp
mov
leave
jecxz
stos
xchg
in
xchg
stos
cmp
add
dec
add
iret
mov
pop
or
fsubs
enter
adc
aam
insb
mov
in
sbbb
mov
add
mov
loope
mov
hlt
lock
cmp
mov
push
push
ret
cs
jg
frstor
mov
xor
and
xchg
sub
cmpsl
lods
jge
popf
push
push
inc
loope
add
mov
adc
aaa
xor
into
mov
div
inc
jmp
mov
inc
cmc
out
mulb
xchg
mov
shrl
lahf
cmp
pop
cld
out
jae
sub
adc
test
dec
aam
cmpsb
push
push
adc
gs
sahf
sbb
cld
les
cmp
scas
mov
lret
bound
or
ss
xchg
fsts
fidivl
dec
fcomps
push
mov
mov
sbb
andb
ret
shrb
xchg
cmp
ja
outsl
inc
inc
lahf
je
dec
cmpsb
repz
ja
or
mov
stc
xchg
out
cmp
mov
adc
inc
mov
jo
fs
jp
inc
repnz
fildl
jg
cwtl
repnz
ret
into
scas
cmpsl
cmp
xor
inc
inc
or
fwait
xor
mov
mov
inc
hlt
or
popa
mov
aam
pushf
mov
incl
fs
sahf
lock
cld
fwait
or
mov
sbb
pushf
dec
clc
cmp
dec
out
stos
call
jmp
and
ss
jmp
ss
mulb
xchg
jge
fwait
pop
adc
aas
mov
fldenv
sbb
jb
mov
fadd
mov
mov
das
inc
int3
inc
sti
sti
lock
sbbb
and
and
loop
imul
or
dec
mov
sub
fsubrs
push
lahf
iret
and
out
nop
sbb
dec
lods
sbb
push
mov
dec
xchg
mov
ret
filds
mov
adc
lds
roll
frstor
lea
rclb
out
loope
arpl
push
sub
outsl
xor
outsl
bound
and
lahf
mov
pop
xor
test
ficoml
pop
mov
mov
shrb
pop
xor
mov
push
xor
lret
daa
and
jmp
xor
xchg
mov
push
xchg
pop
xor
addb
xadd
xlat
push
jae
xor
push
push
xor
out
jo
inc
lds
inc
inc
loope
push
in
pop
jbe
add
cmc
cmp
sub
jmp
lahf
loop
sbb
cmc
and
aas
mov
jle
mov
fists
int
lret
mov
cmc
test
subl
cli
insb
push
repz
add
fiaddl
xchg
inc
fs
xor
int3
lret
aad
cltd
adc
dec
int3
fidivs
sbb
out
inc
fwait
aaa
push
mov
ffreep
sbb
cmp
jg
push
sbb
fsubl
adc
imul
jo
adc
xchg
aas
shrb
pop
cld
xor
loopne
lock
mov
or
lock
rorl
jbe
out
je
int3
test
adc
testl
mov
fmul
xor
mov
inc
aas
pop
mov
cld
pop
jle
sub
mov
and
lret
inc
mov
in
into
dec
jno
cltd
mov
push
in
xchg
movsl
leave
cmp
outsl
jbe
jmp
in
cmp
fldenv
jbe
sub
stc
push
repnz
lock
dec
in
in
cwtl
jnp
add
jb
mov
xchg
dec
data16
jg
in
push
push
xor
mov
dec
ret
pushf
je
mov
in
test
mov
ret
into
push
adc
sbb
and
jg
cli
sub
out
dec
fsubl
ljmp
js
or
cmpsl
push
cmc
cmp
push
cmp
mov
iret
gs
sub
mov
mov
mov
push
lret
inc
xchg
inc
mov
and
add
inc
push
dec
cmc
adc
popf
adc
cmp
mov
enter
pop
imul
mov
rcr
mov
sub
adc
cmp
mov
mov
adc
pop
out
add
pop
jae
hlt
lods
push
jae
sahf
mov
arpl
fmul
fisubrl
dec
mov
int
jl,pn
mov
sbb
sbb
cmp
les
pop
idivb
pop
js
jge
repz
and
sbb
lods
inc
xchg
jl
xchg
lcall
stc
xor
lahf
xor
loope
mov
push
mov
and
and
outsb
adc
xor
cmpb
push
outsl
test
cs
test
mov
imul
cmc
adc
pusha
mov
push
xor
mov
sbb
sub
sarl
xchg
fadd
data16
cwtl
jmp
daa
adc
adc
outsl
mov
mov
mov
inc
inc
and
addr16
sub
mov
mov
adc
jl
outsb
fwait
add
test
jns
jg
stc
rep
ja
pop
sahf
leave
xchg
int
sbb
aam
mov
js
arpl
lcall
test
insl
mov
addr16
and
popa
jnp
cs
xchg
cmp
int3
jns
jae
push
push
adc
jg
imul
clc
imul
pushf
sbb
sahf
pop
ss
push
mov
mov
push
popa
mov
inc
or
js
jecxz
cltd
mov
or
test
cli
mov
ret
fcompl
adc
je
lret
andb
fdivs
xlat
repz
mov
push
push
repz
outsl
mov
aam
rclb
mov
out
ret
pop
xchg
pushf
and
ret
sti
clc
xor
pop
jg
lea
dec
fbstp
aas
popl
mov
in
dec
push
mov
dec
lods
lea
aam
xchg
cmp
rol
lock
test
shl
aaa
adc
in
xor
sbb
xor
jnp
cs
push
sub
jo
dec
add
scas
cmp
or
inc
cmpsl
clc
in
or
push
loopne
sbb
push
mov
adcl
loope
es
dec
adc
cmp
pop
je
push
mov
inc
test
push
push
adc
xchg
cmp
jne
shrl
dec
sub
div
movsl
sarl
adc
inc
xlat
shl
imul
cmpsl
jecxz
lea
test
and
inc
cmc
popa
cmp
bound
cwtl
psubq
jge
pop
adc
xchg
xor
push
inc
mov
push
ja
sbb
rclb
lret
fwait
adc
int
ss
mov
xlat
fwait
jb
xor
stc
sbbl
push
fisubrl
cmpsb
dec
add
push
lcall
cmc
shll
mov
shrl
sbb
aad
outsl
enter
sub
cmp
sti
imul
mov
addb
inc
xchg
js
xchg
add
pop
cmp
add
popf
and
ret
in
test
popa
mov
pop
cwtl
inc
push
data16
fldt
leave
clc
push
mov
or
push
mov
popf
in
popa
aas
fwait
out
pop
call
or
dec
sub
mov
les
or
loope
cltd
xchg
sub
cmp
jl
cmp
movsb
push
inc
push
cld
sbbb
mov
jle
or
xchg
or
adc
mov
cld
lret
adc
cld
neg
pop
cmp
pop
cmpsb
cmp
fcmovne
les
cld
add
leave
lods
ljmp
add
hlt
inc
xor
into
daa
lcall
inc
sub
cmp
clc
cli
pop
jb
pop
xor
sbb
sub
pop
mov
mul
cmp
sub
cmp
xchg
outsb
inc
repz
sub
jb
rorl
xchg
inc
dec
xchg
testl
imul
mov
mov
popf
and
mov
add
insb
pop
sahf
or
test
mov
cmp
push
je
sbb
nop
or
out
push
push
in
or
cmp
shll
add
loope
mov
push
add
incl
loopne
adc
mov
pop
xor
mov
pop
push
cmp
les
inc
xchg
mov
push
mov
data16
aaa
lods
jmp
sub
xor
xchg
xchg
mov
inc
fistl
test
roll
leave
mov
out
and
mov
mov
jbe
cs
add
xchg
popf
sub
jp
mov
mov
mov
adc
xchg
ds
jb
sub
sub
sbb
inc
rcl
xchg
pusha
push
cltd
jo
enter
xor
lahf
mov
jecxz
add
es
outsl
outsb
lahf
gs
pop
and
mov
out
sub
add
cmp
and
inc
outsb
imul
pop
cmp
les
add
jmp
repz
or
pop
xchg
mov
pop
ljmp
jno
cmpsb
rcrb
sub
xchg
xlat
cmp
ficoml
inc
pop
mov
ja
mov
bnd
ret
daa
iret
sub
inc
test
adc
sub
and
repnz
jnp
mov
pusha
out
sahf
cmp
xor
cmp
push
imul
pusha
cmp
xchg
shrl
cmpb
jns
jmp
push
sbb
add
nop
add
test
and
movsb
or
adc
movsb
fsts
mov
push
adc
shrb
adc
mov
mov
add
push
jmp
subb
jle
cmp
xchg
cmp
jbe
shl
je
cmpsb
notl
cwtl
lods
jne
pop
cmpsl
shl
test
imul
fnstsw
jl
popf
sarl
cli
xlat
sbbb
dec
jmp
out
pop
jo
mov
ljmp
jle
and
les
mov
jmp
mov
lods
jg
icebp
mov
jb
into
fwait
add
xchg
push
dec
loop
sbb
out
movsb
imul
mov
inc
lock
mov
push
and
sub
mov
das
adc
int
int3
fdivs
shrl
arpl
jge
xor
popf
mov
inc
imul
pop
lock
cltd
iret
dec
mov
shrb
xchg
and
mov
subb
fdivs
dec
ret
jb
pop
lahf
xchg
xchg
pop
mov
out
sub
mov
pop
add
ret
popf
pop
ds
imul
mov
push
scas
cmpsb
inc
mov
xor
not
cmpsl
dec
and
repnz
ljmp
fs
mov
and
mov
scas
dec
ljmp
pop
or
dec
test
divb
negl
jmp
push
xlat
add
call
or
mov
add
rcrl
mov
mov
sbb
test
dec
gs
adcb
pop
and
inc
out
repnz
cli
adc
and
jno
lods
add
cmp
lret
mov
nop
adc
jnp
ljmp
outsb
xor
ja
mov
fisttpll
sbb
pop
push
push
lahf
mov
pop
mov
movsb
sbb
je
dec
mov
push
rol
mov
fnstsw
scas
push
sahf
sub
adcb
hlt
dec
jl
mov
dec
shrb
sbb
rolb
fldenvs
enter
fdivl
icebp
mov
pop
sub
inc
pop
xor
cli
shl
dec
and
dec
or
les
ret
dec
dec
outsl
out
xor
jmp
in
mov
movl
testb
in
cmp
ljmp
cmp
imul
jg
or
cli
pop
ljmp
aad
scas
and
jns
adc
in
add
insb
notb
loop
jbe
movsl
mov
in
cmpsb
aas
pop
add
jle
xor
arpl
or
dec
sub
sbb
dec
ret
out
add
pop
and
movsb
ret
mov
into
int
popa
pop
data16
sub
popf
nop
cmp
cmc
sbbl
lahf
inc
pop
dec
ret
pop
sub
outsb
loope
dec
adc
mov
pop
jmp
mov
dec
fisubl
push
aad
dec
test
ret
mov
data16
pop
stos
test
loopne
addr16
subl
iret
data16
shl
mov
mov
sub
inc
out
loop
mov
fnstenv
or
cmp
jnp
jmp
lods
mov
ficomps
cwtl
inc
pop
sub
shlb
adc
lock
sub
sub
add
outsl
dec
shlb
inc
leave
jmp
rep
add
mov
jns
jmp
mov
lahf
aas
mov
popa
pop
cmp
cld
add
jl
adc
pushl
mov
xchg
scas
adc
xchg
pop
jno
fbld
test
js
shrl
gs
es
xor
lahf
and
psllw
inc
cs
or
push
test
fndisi(8087
sahf
inc
cmp
lods
mov
mov
sbb
pop
imul
sbb
dec
add
pop
inc
test
lds
inc
pusha
jp
pop
in
add
fsubrs
cltd
lods
js
or
mov
push
mov
pop
mov
mov
data16
sbb
sub
jmp
hlt
aas
lret
scas
out
out
mov
shl
out
stos
jae
lds
scas
xlat
mov
sbb
adc
mov
leave
or
xchg
jge
packssdw
dec
aad
lret
sbb
ds
in
out
lret
jecxz
add
fnstcw
stc
or
fcomps
xchg
das
pusha
andb
insl
add
fnsave
adc
mov
cmp
sbb
xlat
dec
cld
loop
cs
fmuls
out
mov
out
ljmp
scas
imul
mov
out
inc
repz
jno
int
ret
jno
int
mov
push
pushf
or
xor
inc
nop
daa
xor
testb
inc
inc
pop
mov
rol
test
pusha
pop
xchg
jp
pop
mov
jno
push
data16
mov
scas
cmp
js
sbb
fidivl
add
push
mov
cmp
cmp
and
ss
inc
or
push
test
ret
movsl
cmp
in
mov
add
and
pop
cmp
mov
xchg
and
ret
sbb
mov
in
jb
addr16
mov
xchg
jo
jb
or
xor
sarl
lcall
jbe
je
adc
in
sub
inc
add
call
jb
pop
and
sarl
test
das
repnz
mov
sbb
jae
push
mov
cmp
pop
or
cmp
pop
push
ds
inc
stos
jp
and
adc
dec
dec
mov
jbe
inc
test
dec
push
test
pop
jecxz
repz
mov
cmp
int
pop
mov
pop
inc
dec
cmpsl
pop
jb
inc
int3
sub
xchg
jle
das
daa
inc
popa
fbstp
mov
push
orb
cwtl
mov
fbstp
pcmpeqw
jns
test
aas
xchg
mov
and
jb
in
movb
add
ret
or
test
test
jo
shll
and
clc
sahf
stos
or
xor
push
call
pop
sub
in
pop
sub
fdivrl
push
dec
outsl
sarl
push
jne
adc
and
lods
mov
test
jmp
ret
ds
push
sbb
shlb
lahf
jno
cmp
xor
ljmp
fisubs
pop
ja
mov
push
inc
lock
sahf
test
jo
push
lock
xchg
dec
pop
loope
pop
push
scas
bound
sub
sbb
dec
aam
cmp
mov
and
fwait
std
in
xchg
dec
and
sub
ljmp
inc
sub
cld
xchg
and
test
xchg
lahf
push
mov
aad
and
mov
jbe
enter
jg
push
and
mov
add
jnp
das
aas
in
jno
add
xchg
fsubs
push
inc
cli
inc
scas
push
jne
cmp
push
stc
pushf
fisubrs
xor
jge
cmc
sbb
or
add
sti
xor
in
mov
iret
mov
jecxz
lret
loopne
inc
mov
and
ret
mov
je
sbb
jnp
adc
loop
ret
jne
aam
mov
imul
pop
pop
addr16
or
cmp
cs
cmp
fidivrl
and
xor
xchg
test
sahf
in
clc
pop
push
inc
or
xor
jmp
add
out
fidivs
out
inc
xlat
scas
cli
mov
mov
out
into
sub
cmp
add
or
addr16
shl
add
mov
sbb
xchg
cmp
shlb
jb
les
cmp
popf
cmp
dec
aaa
jns
sub
fwait
or
sub
das
inc
dec
xorb
fs
jp
call
sub
push
mov
pop
cmpsl
sahf
lods
mov
leave
sub
outsl
icebp
mov
ficoms
xchg
xchg
add
repz
mov
cli
adc
sub
push
push
jne,pn
jbe
xchg
loop
adc
or
out
xchg
cmc
or
arpl
bound
and
push
fildll
sub
sbb
xchg
pop
cmp
xchg
xor
push
sbb
dec
aas
cmp
stos
out
mov
adc
xchg
fdiv
mov
outsb
sub
cwtl
into
mov
lret
in
jbe
add
dec
rcrl
jo
lock
xchg
cmc
inc
dec
imul
mov
mov
loopne
call
and
xlat
push
ds
mov
loope
pop
popl
aas
mov
fdivrl
negl
inc
das
mov
push
pop
and
mov
inc
std
adc
inc
mov
cmp
aaa
jae
xchg
cmp
cmc
pop
jecxz
lock
or
shlb
loop
xor
js
mov
dec
fcmovne
mov
pop
ss
add
push
mov
das
jle
scas
mov
aam
sti
inc
push
mov
jae
sub
xchg
push
in
mov
lea
ret
loopne
fsubrs
add
hlt
lret
push
scas
fs
or
lds
and
es
cmp
hlt
dec
mov
popf
push
in
xchg
and
imul
aad
stc
pop
add
inc
loopne
mov
sbb
bound
jge
icebp
push
stc
dec
ficompl
pop
cmp
inc
pop
data16
pop
shlb
sbb
cmp
rcr
mov
mov
lea
push
xchg
lea
sarb
mov
enter
mov
out
cmp
xor
xor
stos
mov
inc
clc
jne
sbb
into
cwtl
mov
inc
in
lock
cli
mov
mov
cwtl
xchg
pop
dec
adcl
jecxz
out
std
inc
sub
dec
cmpsb
les
stc
mov
push
jo
ds
add
subl
xor
mov
testl
movsb
mov
mov
and
ja
mov
mov
lret
ror
insl
xchg
push
mov
lret
imul
pusha
in
int
xchg
fmuls
fadd
jle
movsb
rcrb
es
push
icebp
outsl
push
shrl
fwait
jl
lret
sub
out
sbb
fdivr
xchg
cs
int
pop
dec
clc
aad
repnz
scas
notb
xchg
sub
lock
dec
sti
xchg
jne
mov
xchg
mov
inc
aad
mov
sbb
les
sbb
inc
adc
rcrb
arpl
cmc
adc
jne
add
xchg
ja
les
xor
pop
cltd
rorl
mov
leave
xor
cltd
out
mov
fucomp
jb
mov
hlt
call
mov
nop
lds
xor
inc
fcmovnb
imul
outsw
out
icebp
repz
jb
cmp
jl
and
jge
mov
call
out
sar
outsl
mov
sbb
sub
psubsb
mov
push
movsl
jg
sub
mov
repz
dec
xchg
mov
push
fwait
sti
test
pop
mov
fidivl
repz
pop
hlt
sub
cs
ljmp
add
mov
outsl
sti
repz
pop
lods
push
jecxz
dec
inc
xchg
add
cmp
mov
add
inc
mov
mov
scas
mov
js
ret
stos
inc
pushf
mov
leave
pusha
push
std
pop
fimull
into
jae
xor
mov
xchg
bound
out
pop
movsb
outsl
push
cmp
aas
shl
pop
or
adc
dec
inc
aas
mov
mov
mov
add
push
aad
jge
xchg
or
xchg
jns
stos
sar
lds
inc
mov
test
ja
mov
lea
mov
movsb
cwtl
sbb
xlat
dec
sbb
add
fldcw
and
mov
std
addr16
mov
loopne
rcll
mov
aaa
push
add
pop
pop
jg
or
jl
fisubrl
pushf
sar
pusha
mov
pop
cmp
pusha
add
xor
outsl
jae
imul
mov
test
or
push
xchg
imul
cli
aad
inc
fimuls
lds
out
aad
pop
insb
scas
rcrb
cmp
mov
inc
gs
popf
insl
out
imul
push
push
mov
outsl
imul
roll
ljmp
outsl
cli
mov
pop
mov
andb
in
mov
addb
test
mov
das
mov
test
push
imulb
adc
cld
popl
add
scas
fdivl
pop
dec
pop
adc
test
mov
aaa
push
mov
xor
gs
sbb
or
call
addb
xchg
pop
pop
pop
mov
iret
mov
lock
sti
lock
jb
adc
jne
mov
mov
hlt
pop
mov
iret
cltd
add
cli
lock
add
das
sub
lods
pop
in
leave
in
inc
out
xor
ficomps
or
out
sbb
jnp
das
cmp
repnz
mov
push
mov
popa
pop
shrb
mov
sbb
add
xchg
loope
js
lods
sub
pop
movsb
adc
and
mov
adc
movsl
addb
xor
dec
dec
test
cld
daa
cmp
adc
dec
in
push
loope
sbb
inc
sti
es
xor
test
pop
mov
ret
inc
or
xchg
aad
adc
pop
push
pop
popa
sbb
jno
push
add
xor
fucomp
push
icebp
pop
dec
xor
push
mov
popf
sbb
pop
mov
cmp
es
xor
shlb
push
pop
je
mov
adc
mov
lcall
and
scas
add
xor
dec
dec
test
cmp
imul
mov
scas
data16
push
test
lgs
cmp
add
movsl
xor
inc
fs
push
sub
push
sbb
and
xor
mov
jne
lods
xchg
sub
insl
sub
sub
stos
xchg
xor
aaa
pop
vmwrite
push
cmp
cmp
test
movsb
fisubl
sub
or
rorb
test
icebp
add
lea
sub
fidivs
in
pop
dec
dec
inc
inc
mov
xchg
adc
mov
fadd
and
jle
and
aaa
mov
movsb
inc
push
mov
sub
sub
das
xor
mov
inc
adc
testl
fwait
push
fs
gs
and
push
lds
and
imulb
pop
mov
sbb
cld
xchg
xchg
jo
inc
sub
mov
lret
arpl
js
int3
outsl
jnp
repnz
and
sti
outsl
inc
xlat
mov
arpl
stc
dec
inc
mov
fisubs
movsl
cmp
jne
mov
inc
sub
mov
pop
imul
inc
mov
enter
lea
sbb
mov
add
mov
arpl
mov
jo
cwtl
jnp
ret
inc
xor
lock
xor
ja
test
stos
lds
push
jne
inc
shl
push
ljmp
dec
iret
loopne
add
push
je
inc
loope
in
ret
outsl
mov
xchg
pop
ret
out
and
adc
nop
mov
sbb
ret
cmp
adc
xchg
add
cmp
push
in
jnp
iret
pop
in
add
rolb
js
jg
and
xor
test
and
pop
stos
mov
repz
mov
mov
adc
sbb
addr16
mov
add
dec
lcall
push
fadds
cwtl
int
cwtl
push
mov
loopne
jae
outsl
les
fld
xor
mov
xor
arpl
pop
jae
inc
shl
jmp
cmpl
mov
push
fcmovne
pusha
adc
stos
lods
fldcw
push
xlat
cli
jno
lcall
aad
inc
jbe
xor
xchg
push
pop
rorb
push
insb
lods
rcrb
cmc
push
mov
in
push
pop
sti
mov
inc
les
cmp
inc
or
pop
fwait
into
push
xor
mov
arpl
jns
std
cltd
test
sets
push
fbld
test
add
inc
pop
out
pop
cmp
insl
jle
mov
dec
mov
in
sbb
testb
xchg
mov
xchg
sub
lea
mov
nop
lds
xchg
iret
sub
push
into
push
clc
xchg
rep
mov
mov
jns
in
les
cmp
pop
sahf
xchg
mov
adc
xor
jecxz
daa
cmp
fucomip
ret
data16
rcrl
xor
hlt
gs
js
test
in
mov
dec
mov
add
cmp
add
pop
xchg
insb
sahf
xor
into
mov
and
push
adc
dec
lods
inc
shr
inc
inc
fwait
inc
push
lcall
and
repz
pusha
adc
push
jnp
mov
or
lret
ljmp
cmp
insb
pop
xlat
xor
cmp
push
shl
pop
mov
ret
movsb
test
sbb
fcmovnu
shll
jge
add
push
jne
push
xor
fadd
or
push
mov
push
pop
roll
pop
outsb
lock
xchg
jno
sub
scas
icebp
mov
push
test
ds
cmpsl
jl,pt
decb
add
sub
cmp
jge
das
in
mov
pop
movsb
insb
xlat
pop
sahf
lds
add
sbb
adc
mov
inc
ss
stos
in
sbbl
testb
sub
sbb
lods
rcrl
fwait
test
pushf
ss
or
sahf
fildll
mov
aaa
push
roll
bound
arpl
js
cltd
fwait
cmpsl
lret
cwtl
pop
adc
sub
dec
dec
out
cltd
and
sahf
faddl
sahf
sub
dec
pushf
xor
aam
and
in
out
fdivs
inc
jb
jecxz
testl
inc
shl
or
jo
xchg
mov
push
out
test
enter
pop
out
stc
add
sub
mov
jno
dec
sub
push
inc
cmp
fistpl
inc
fnstcw
pop
dec
xchg
xchg
or
xor
int
cmp
xor
cmp
pushf
add
pop
xchg
ss
lock
movsb
xor
movsl
adc
xchg
int3
nop
jnp
aad
jbe
and
jo
stc
ss
test
push
sbb
cltd
scas
pop
lcall
clc
sub
or
in
leave
jns
dec
stos
ljmp
sbb
xor
pusha
and
push
jne
sub
cmp
push
rcrl
cmpsl
leave
call
lea
leave
pop
sbb
int3
dec
jg
out
insl
test
adc
jmp
adc
and
adc
xor
mov
fisubl
in
add
in
popa
test
xor
loope
outsl
and
mov
loope
mov
cmp
cmpsb
lock
ret
enter
sti
adc
rcrb
cli
adc
or
stos
mov
data16
dec
add
mov
ret
or
outsb
sbb
cltd
outsl
cmp
mov
dec
pushf
fsubs
call
jmp
dec
push
pop
push
movsb
in
outsb
aad
movsl
push
callw
es
sbb
je
adc
jp
inc
push
test
sub
jmp
or
adc
lcall
idiv
push
sbb
fdiv
insl
xlat
adc
mov
jb
lcall
push
outsl
pop
xchg
cmpsl
out
jns
or
push
loope
imul
sti
push
sbb
fdivp
dec
dec
pop
hlt
jge
and
jmp
mov
movsb
jo
xchg
xor
sar
xchg
pop
sbb
aad
sub
movsb
xchg
popa
sub
inc
dec
icebp
jnp
addr16
cltd
aam
into
pop
mov
jp
mov
fdivrs
or
call
inc
mov
inc
shlb
test
lret
jnp
std
inc
lcall
test
push
stos
cmp
sti
shrb
fmuls
dec
dec
adc
sahf
cmc
mov
cmp
xchg
out
adc
cld
cld
iret
xor
int
sub
inc
out
jbe
les
inc
sub
insl
lahf
cmp
mov
pop
pop
lcall
movsl
pop
mov
cmp
test
and
mov
xchg
jnp
adc
inc
sar
stos
mov
hlt
lret
sub
arpl
and
jg
adc
push
lret
jno
imulb
push
pop
out
jae
leave
jb
xchg
jbe
movb
jb
stos
dec
pop
xor
pusha
push
sti
pusha
and
cmpsl
xchg
stos
aas
shll
enter
call
fld
daa
xchg
stos
xor
out
mov
dec
push
in
push
pusha
mov
fisttps
xor
adcb
stos
pop
lods
dec
mov
ds
jecxz
pop
mov
shrl
push
push
or
rcl
adc
xchg
add
insl
cli
shrl
mov
adc
fidivs
push
jecxz
aas
xorb
mov
jnp
test
stos
test
out
or
sahf
outsl
mov
fisubrl
add
pop
xor
and
sar
mov
jns
sbb
add
mov
adc
sub
adc
insb
pop
mov
xchg
loop
push
adc
xchg
je
pop
cs
pop
pusha
je
push
call
cld
xchg
push
jns
fidivrl
out
sahf
cmp
pop
in
ja
mov
int3
or
push
or
pusha
clc
data16
fsubrl
mov
test
icebp
push
mov
lcall
mov
jmp
seta
lret
jge
nop
sub
lea
mov
mov
fisubs
mov
adc
mov
int3
out
cmp
and
jbe
add
sarb
xor
mov
sub
push
xchg
negb
and
sar
xor
fsubr
inc
mov
push
stos
jmp
pop
sbb
lcall
xor
in
sbb
mov
insl
stc
ret
xor
mov
outsl
idivl
dec
stc
inc
xor
std
leave
xor
push
inc
shl
and
xor
xchg
pop
dec
push
pushf
pop
adc
pop
dec
add
out
push
and
cs
inc
test
or
add
orl
jo
push
jae
mov
repz
push
and
push
lret
xchg
icebp
mov
cli
cld
or
and
mov
idivb
aas
mov
daa
icebp
mov
lock
lods
xlat
lods
rcrb
jae
mov
push
xor
pop
dec
rclb
cmp
dec
pop
pop
cmpsb
je
and
add
popf
xor
mov
shrb
cmp
inc
pop
xor
imul
cltd
cwtl
xor
fdivrl
negl
cwtl
xor
fdivs
push
enter
adc
popf
in
mov
frstor
push
jne
fmuls
ficompl
lock
sub
popa
negl
lret
lret
cmp
fwait
in
in
xor
enter
frstor
lds
loop
cli
imul
inc
mov
xrelease
jno
push
test
aaa
push
add
pop
pop
cmpsl
outsl
sahf
test
dec
mov
jne
out
ja
xchg
out
push
jmp
xchg
roll
jmp
outsb
sub
pop
pop
sub
fidivl
mov
enter
clc
or
int3
fs
lds
imul
popf
mov
pop
repz
bound
sti
dec
cli
xor
mov
jnp
push
jmp
pop
repnz
aas
aad
data16
jle
int3
shll
icebp
jg
dec
mov
jle
jns
insl
jnp
cmc
and
pop
out
sahf
in
mov
ja
mov
rcrb
pop
xor
lods
inc
inc
loopne
cld
insb
int
mov
enter
mov
inc
xor
and
pop
xchg
mov
icebp
cmp
lret
mov
pop
cmpl
in
popl
loope
mov
je
pusha
bound
enter
es
mov
icebp
mov
inc
leave
mov
aaa
pminub
hlt
clc
inc
mov
test
lret
subb
push
andb
cmp
mov
iret
sahf
cmp
das
jb
and
xchg
sub
jl
sbb
xchg
mov
inc
jne
adc
dec
ss
aad
pop
imul
sbb
cli
and
shrb
dec
adc
push
and
pop
mov
xchg
arpl
in
rcrb
fdecstp
lea
and
nop
mov
stos
shll
incb
lret
loop
fimull
or
cmpsb
insl
fdivl
rcr
mov
dec
adc
dec
inc
cmpsb
mov
sti
mov
std
mov
negb
les
lods
xor
divb
xor
arpl
adc
mov
cs
jns
dec
jmp
int
mov
jne
jmp
scas
mov
fdivrs
pop
push
fwait
pusha
cmp
stos
dec
xchg
daa
mov
xchg
pop
shl
mov
jg
jno
js
aad
push
add
xor
sub
push
roll
inc
mov
or
es
idivl
test
rcl
jno
pop
and
shlb
imul
mov
push
lods
test
out
xor
arpl
mov
dec
push
bnd
or
mov
sarb
xor
inc
pop
out
mov
inc
cs
or
push
pop
push
sbb
fisubl
xorb
mov
cs
sar
dec
aad
test
imul
shrb
shrb
xchg
adc
fcom
pop
mov
xlat
je
cmp
incl
frstor
and
cmp
dec
xchg
cmpsl
jecxz
xchg
sti
push
out
test
popl
or
fsub
pop
adc
mov
mov
sbb
jle
leave
xchg
idivl
and
adc
jne
jae
jb
jle
adc
pop
mov
mov
mov
inc
les
lea
jns
inc
idiv
fistpll
setle
stos
jo
xchg
sub
xchg
fnstenv
push
cmpsb
mov
outsl
scas
fnsave
dec
jecxz
addl
xor
push
push
push
icebp
add
pop
lods
and
orps
loop
add
adc
pop
int3
adc
push
outsl
pop
and
lret
push
rep
push
incb
push
mov
or
add
mov
pop
lret
out
add
testb
inc
aas
cmp
fs
nop
stos
jp
xlat
jmp
xor
push
bound
fldenv
xchg
mov
out
out
xlat
repz
mov
mov
mov
sbb
xchg
mov
cs
testb
sbb
push
ja
inc
cmp
sbb
dec
lea
jecxz
jecxz
mov
xchg
lret
cmp
mov
or
loope
mov
mov
pop
fadd
lret
mov
rorb
jo
and
mov
xchg
pop
ljmp
push
mov
lretw
shrl
out
lret
mov
jl
mov
pop
add
and
jns
add
daa
test
jb
not
xchg
pop
clc
mov
and
rorl
cmp
add
jle
jnp
daa
add
dec
adc
or
out
movsb
xor
jl
sbb
pop
nop
add
mov
sti
xchg
push
mov
into
dec
pop
mov
push
xchg
repz
dec
inc
push
sub
shll
mov
inc
mov
cmp
enter
mov
mov
cmpsb
shll
outsl
les
push
stos
pop
inc
mov
in
xchg
inc
clc
adc
cmp
int
fnstenv
mov
xchg
push
fstpl
pop
pop
xchg
sbb
mov
jnp
add
dec
ss
or
jmp
in
orb
repz
rclb
aaa
lret
mov
test
add
es
filds
sbb
test
push
jne
out
jae
mov
cmp
rolb
out
sbb
jo
mov
dec
push
sbb
pop
jp
mov
xchg
sub
scas
aad
push
loopne
and
gs
inc
int3
out
pop
ljmp
jmp
inc
and
jns
jno
add
mov
aam
jo
pusha
pusha
adcb
aad
jle
cmpsl
mov
insl
adc
sbb
aaa
imul
jmp
xchg
inc
pop
dec
icebp
in
std
jge
rorb
lods
mov
clc
sbb
insb
xchg
jns
div
lea
mov
mov
jg,pn
pusha
xchg
das
adc
xor
cmpb
test
lods
push
jp
pushf
inc
inc
flds
jle
push
bound
xchg
inc
stc
nop
or
iret
out
add
sub
mov
shr
es
imul
dec
fwait
cmpsl
jl
nop
dec
cmpsl
data16
push
test
and
nop
jl
cld
stc
test
jecxz
xor
mov
xchg
add
adc
add
push
dec
out
test
jecxz
rcrb
xchg
or
lock
and
inc
lds
mov
data16
adc
ret
fcomps
lods
sarb
lret
in
lock
and
push
xlat
mov
lods
add
pop
cmpsb
in
mov
loop
lcall
jae
icebp
insb
std
lods
xchg
mov
fistpl
mov
mov
mov
stc
adc
frndint
icebp
add
adc
mov
int3
pushf
or
shrb
icebp
test
jb
sub
bound
ljmp
push
adc
pop
adc
cmc
jno
loop
imul
and
hlt
jecxz
cmp
jnp
mov
jns
cld
fnstsw
fxch
popa
lret
push
cmp
in
sub
or
call
push
or
inc
clc
hlt
xchg
push
jge
or
dec
and
sub
inc
mov
loopne
mov
jo
sub
mov
arpl
les
shll
add
ret
jbe
jno
lahf
sub
and
mov
xlat
enter
lods
jp
fistps
pop
cmpsb
lds
ret
mov
xchg
mov
inc
push
adc
test
repnz
sub
dec
in
test
and
je
pop
fsubr
mov
cld
lds
pop
outsb
std
mov
rcll
verw
inc
int3
lcall
xchg
cld
jge
outsl
cmp
cmp
imul
dec
lods
in
cmpsb
in
or
pop
mov
fidivl
inc
les
xchg
outsl
xchg
push
scas
pop
je
mov
jns
into
out
xchg
xor
push
pop
movsb
subl
mov
dec
pop
out
fwait
cmpsl
fsub
fwait
aaa
dec
adc
add
pop
dec
ficoml
mov
mov
cs
subl
adc
pop
push
ds
aam
jmp
andb
mov
xchg
jmp
mov
gs
mov
dec
push
add
shl
jne
jp
adc
inc
mov
push
pop
dec
cmp
das
lds
shll
stc
int3
mov
ds
push
mov
fcoms
push
mov
jl
inc
adc
jne
jnp
mov
out
fdivl
outsl
sub
sbb
push
pop
push
lret
push
ret
push
ja
pop
popf
inc
lods
addb
push
mov
test
ja
dec
add
and
mov
cs
jge
dec
enter
in
scas
fldenv
or
sbb
into
lods
mov
adc
push
les
testb
sahf
pop
into
clc
and
inc
call
xchg
cmc
scas
push
outsl
loope
xlat
jmp
xchg
push
mov
xorb
push
fwait
push
lea
ja
sub
and
mov
xor
enter
pop
js
dec
stos
mov
cmpsb
hlt
dec
sbb
adc
mov
das
mov
lock
fnstsw
fcoml
insl
mov
in
mull
dec
pop
jge
xor
stos
ret
outsl
sbb
jb
je
loopne
rclb
xchg
stc
mov
pop
jns
jb
lahf
push
sbb
dec
shr
push
and
ss
rcrl
cmpps
xchg
clc
add
pop
out
movb
xchg
mov
or
mov
add
movb
movsb
hlt
sbb
push
push
cltd
shrl
setbe
cld
jl
stos
lods
pop
push
mov
jae
push
inc
mov
dec
loopne
pushf
jg
jmp
xor
adc
cmp
leave
jmp
or
cmp
cltd
inc
cwtl
in
stos
lret
and
mov
sub
leave
mov
popa
xor
push
inc
push
cmpb
fcoml
mov
in
cmpsl
insl
sub
nop
ss
in
in
les
subl
je
dec
pop
shrb
add
movsl
cmp
jae
gs
ret
jle
xchg
jne
in
jl
std
clc
out
je
sub
notb
scas
add
pop
mov
pop
test
inc
fsubr
in
add
movsl
out
fsub
dec
arpl
xor
inc
add
loopne
add
jo
arpl
push
lods
mov
sub
pop
push
mov
pusha
xchg
mov
mov
stos
cmpsl
adc
adc
sbb
leave
jp
mov
sub
push
mov
aaa
stos
lahf
xchg
test
mov
sbb
inc
pop
loope
fwait
pop
call
addl
dec
mov
js
xchg
shl
pop
es
dec
dec
sub
fnstenv
cmp
lods
outsl
test
imul
sub
push
fld
roll
xor
cmc
addl
cmp
imul
mov
hlt
add
cs
add
pop
and
cmp
xchg
xchg
jb
cmc
adc
pop
sbb
push
ret
dec
in
add
cwtl
xor
testl
fdivs
jecxz
cli
xor
das
fcomps
inc
or
pop
jo
or
push
inc
sbb
int3
insl
sbb
mov
aam
int
jecxz
ret
lods
dec
mov
test
mov
imul
lret
clc
rol
ret
nop
cmpsl
or
in
loop
pop
add
je
sbb
adc
jg
add
aam
ljmp
mov
cwtl
push
fucomip
filds
mov
ret
mov
aam
and
movsl
icebp
imul
stos
bound
in
aaa
xchg
sub
aas
mov
jae
mov
mov
push
mov
test
xor
into
sub
jne
test
xlat
repz
mov
shrb
addb
rcrl
add
pusha
test
int3
jb
add
jns
aad
dec
loopne
and
arpl
cmp
js
enter
cmpsl
scas
and
rorl
into
ret
and
mov
mov
bnd
fld
pop
dec
pop
nop
loop
inc
sub
mov
jp
loopne
jns
mov
or
mov
jne
popf
imul
jo
inc
fidivrl
out
mov
fildll
push
mov
inc
ljmp
outsl
test
jnp
adc
add
inc
or
in
mov
outsb
mov
sti
icebp
popa
iret
testb
or
and
pop
pop
adc
leave
mov
hlt
movsl
inc
xchg
mov
mov
adc
pop
loope
add
sub
cmp
xchg
ss
lahf
cmp
lahf
cmp
jbe
rcl
push
iret
test
insb
push
jae
jle
outsl
rorb
inc
cltd
mov
shrb
jp
lret
mov
cmp
adc
add
mov
cli
mov
cs
inc
adc
mov
sbb
fstpl
pop
mov
xchg
scas
xor
in
jno
arpl
aas
add
rorl
xchg
out
test
fisttpl
sarb
mov
xchg
dec
cmpsb
and
imul
mov
xchg
cs
pop
cmp
ss
cltd
out
xchg
push
test
call
ss
shlb
scas
sub
ficoml
stos
inc
into
sti
fnstsw
jae
inc
add
test
lahf
push
mov
aam
decb
pusha
aad
jge
dec
cmpsb
sti
sahf
je
dec
in
mov
inc
mov
in
out
cmpsl
push
dec
mov
pop
pop
mov
sbb
test
xchg
stos
jbe
cwtl
jae
test
cmp
xlat
mov
sub
mov
inc
stos
adc
sub
push
mov
sub
mov
mov
mov
sub
andb
cmp
test
sbb
test
add
js
sbb
into
fsubl
imul
sti
leave
mov
cwtl
inc
scas
lods
popa
push
sbb
arpl
sub
inc
cli
out
sbb
xchg
xorl
mov
pusha
fucomip
push
or
xchg
outsb
fbstp
mov
push
and
ret
pop
xor
jnp
jbe
push
cmpsb
dec
jge
mov
xchg
adcb
mov
pop
or
ljmp
test
xor
mov
pusha
sub
mov
pop
sbb
fsts
sub
mov
or
push
out
out
sti
jl
fstl
mov
mov
rcr
add
xchg
sub
outsl
adc
das
and
sbb
imul
xor
xchg
fnstcw
paddd
push
and
pop
jmp
jmp
mov
jnp
and
cmp
xchg
rclb
lea
and
jnp
jg
imul
fwait
stc
adc
repz
testb
rorb
and
dec
into
xor
jle
nop
mov
mov
push
sti
and
inc
out
inc
popa
rcl
rclb
xchg
mov
mov
in
loop
sub
push
xor
push
stos
out
js
adc
imul
jl
movsl
aas
inc
jns
test
add
jg
test
jg
mov
add
int
ds
jnp
mov
and
dec
mov
aam
stos
inc
hlt
ficoml
and
cmpsb
sub
and
or
dec
loopne
ret
inc
push
jecxz
clc
cmp
aam
adc
jg
aam
fsts
jae
lods
jmp
andl
xlat
sbb
or
inc
mov
divl
jne
push
data16
test
mov
xchg
lcall
add
mov
popl
out
ffree
jge
test
cli
popa
fdivl
mov
ja
push
xor
mov
jno
iret
jae
jle
push
imul
mov
push
cmp
sub
je
sub
lret
lret
lret
loope
mov
imul
andb
mov
lods
test
movsl
mov
mov
sub
mov
xor
in
and
call
cmpsb
ret
movsb
and
and
push
add
into
sub
mov
fnsave
adc
sti
dec
pop
inc
inc
xor
fstps
xchg
loope
dec
loopne
push
adc
dec
mov
lea
test
add
add
or
sti
movsl
mov
lds
and
dec
dec
test
in
and
push
hlt
xchg
xchg
add
mov
sbb
xor
push
mov
jg
aad
mov
fdivs
fmull
adc
aaa
xchg
mov
popa
jbe
xchg
mov
mov
lcall
inc
sbb
xor
add
inc
sub
mov
jo
aam
ret
jb
fsts
jne
xchg
in
repz
outsl
pop
lahf
scas
cmpsl
sahf
shll
mov
iret
loopne
call
or
cwtl
cmp
cs
adc
ret
push
jle
cmp
jl
or
scas
bound
es
xchg
int
adc
cmp
xor
add
lahf
ss
lret
pop
out
inc
or
and
in
fwait
push
adc
popl
jns
sub
lret
xchg
and
mov
or
ljmp
xor
xor
mov
dec
shll
cmp
fwait
xor
into
dec
popa
sbb
inc
scas
call
pusha
pusha
sbb
lret
in
stc
pop
insb
aam
lods
inc
pop
adc
jle
fldenv
ficoms
sti
jmp
outsl
jno
pop
lahf
enter
mul
jl
loop
fnstcw
pusha
pop
rclb
outsl
out
xlat
es
mov
out
xlat
outsl
popf
test
lahf
mov
jno
insl
mov
push
imul
sahf
ss
cmp
movsl
xchg
mov
xor
and
mov
aaa
into
fidivl
mov
cmc
lods
mov
sbb
add
cli
add
sbb
nop
add
jo
adc
jl
sbb
push
repz
add
push
mov
mov
jno
adc
push
fcomp
jae
sub
inc
cmp
dec
negl
imul
or
mov
clc
leave
lock
cli
decl
scas
sbb
add
je
sar
sahf
stos
sub
sub
mov
or
js
outsb
push
mov
fisubrl
jae
xchg
test
dec
ret
hlt
in
jnp
rcrl
in
cmp
fs
add
mov
jp
jnp
ficoml
pop
adc
js
xor
sbb
sti
jl
pop
dec
lahf
jns
pop
mov
pop
pop
je
mov
cmp
leave
sbb
adc
ljmp
into
mov
fsubrs
jne
adc
pop
movsb
pushf
arpl
pop
jbe
mov
and
mov
mov
inc
das
adc
add
cltd
push
jae
test
xlat
fiadds
movsb
repnz
and
cld
in
int
lds
test
mov
add
inc
scas
xor
pusha
dec
loop
pop
mov
push
xor
cmp
shlb
ret
dec
fisttps
shl
ljmp
test
pop
test
xor
pop
je
sahf
pop
icebp
cltd
pop
pop
mov
adc
mov
ds
pop
adc
inc
aaa
sub
inc
cmp
pop
fsubl
push
inc
xchg
hlt
test
in
mov
pop
aad
xor
and
inc
imul
sbb
cmp
insb
fildll
adc
enter
hlt
outsb
mov
pop
addb
push
dec
pop
jmp
lods
jbe
ffreep
cmc
aas
cmc
xchg
jg
subps
cmp
push
imull
roll
sub
lods
inc
int3
rcrb
adc
mov
dec
aam
stos
scas
fstl
xchg
mov
stos
mov
cltd
das
pop
or
pop
mov
mov
sti
mov
xchg
pop
popf
addr16
pop
xchg
jle
xlat
mov
mov
mov
mov
mov
pop
repnz
dec
test
test
jecxz
push
dec
inc
pop
nop
jecxz
mov
into
pop
and
push
jmp
jne
jo
add
iret
dec
push
adc
int3
or
repnz
cltd
sbb
repnz
and
xchg
push
subb
repnz
inc
inc
push
mov
mov
ficoml
fidivrl
adc
mov
repnz
or
pop
mov
test
sub
ds
popa
popa
adc
jp
xchg
lods
out
adc
or
and
lahf
cmpsb
imul
fwait
sti
test
decl
rorb
mov
rcrl
cmpsl
js
shlb
mov
shrl
lret
cs
xchg
mov
push
mov
sarb
jnp
xchg
fwait
or
sub
in
cld
jg
xor
sub
inc
xchg
mov
xor
call
sbbl
mov
jae
adc
push
or
and
add
dec
adcb
mov
xor
and
aas
popa
or
mov
cmp
jle
popa
lods
push
adc
sbbb
ljmp
stos
jnp
in
xchg
or
pop
test
subb
cltd
lret
addr16
push
shll
ficompl
fisttpl
jp
gs
and
inc
xchg
sub
jmp
aaa
xchg
pop
dec
inc
fisubrl
pop
pop
imul
loop
aam
mov
mov
mov
mov
gs
roll
and
mov
cs
dec
mov
mov
adc
mov
fxtract
pop
in
jbe
dec
mov
xchg
aam
cld
xchg
js
inc
mov
pop
xchg
add
test
testb
pop
fisubrs
aam
and
ret
or
push
push
jne
add
mov
sar
pop
mov
xchg
push
jno
es
mov
jle
in
and
pusha
mov
ljmp
lock
insl
dec
les
push
lahf
or
mov
hlt
in
jl
cmc
pusha
stc
lahf
mov
or
insb
and
dec
lcall
xchg
je
inc
jl
stc
pop
push
inc
fucom
push
xlat
jno
jb
and
shll
add
lea
jns
sbb
add
repnz
in
push
cmp
lock
mov
bound
xor
sti
and
cmp
insl
and
data16
mov
adc
sub
les
cmc
ss
lcall
nop
std
pop
out
lods
add
adc
popf
xor
xor
sbb
outsb
loopne
adc
cwtl
insb
mov
out
aad
out
movb
orl
nop
sbb
ret
loop
mov
mov
add
sub
lods
sbb
je
mov
mov
dec
arpl
and
addb
xchg
mov
movsl
pop
dec
adc
push
in
mov
daa
in
leave
test
push
inc
pushf
andl
and
jno
ret
dec
mulb
push
pop
mov
int
push
push
push
rol
leave
stos
out
sbb
cmp
mov
sub
test
sbb
inc
dec
mov
mov
push
mov
xor
stc
pop
aad
xchg
test
dec
fldl
shlb
push
fs
in
cwtl
shlb
dec
jb
pop
push
out
pushf
popf
mov
xor
ljmp
repz
ljmp
xor
jge
push
pop
sbb
xor
jle
xchg
pusha
jmp
in
lock
popa
add
mov
fnstsw
xchg
shll
pop
push
stos
pop
mov
loope
jne
enter
inc
sti
lahf
roll
mov
sbb
jg
in
dec
loopne
test
jno
xor
pop
inc
int3
sub
xchg
xchg
gs
lods
dec
ljmp
leave
jge
pop
loopne
clc
cmp
bound
mov
xchg
sub
sti
sbb
stos
jge
mov
aad
aad
js
test
jge
cltd
sbb
aam
insl
sbb
sahf
subl
dec
xor
ljmp
pushf
sub
jno
pop
arpl
xor
nop
in
sbb
mov
es
add
imull
xor
mov
pop
mov
aad
fcmovnb
les
ss
mov
pop
xchg
cmpsb
xor
call
shll
int3
pushf
or
sahf
popa
or
mov
popa
jle
rolb
bnd
adc
fsubl
add
lods
cs
mov
adc
aas
mov
mov
mov
ret
xor
addb
jg
int3
mov
stos
inc
pop
lds
sti
mov
test
mov
hlt
out
mov
ja
movl
adc
xor
mov
push
adc
pusha
inc
fidivrs
jae
xchg
shll
sarb
xor
loop
aaa
add
rorb
or
mov
jb
fisttps
inc
popa
aaa
stc
fs
stos
xor
sbb
xchg
fsubrl
adc
insl
add
call
mov
mov
pusha
add
and
imul
inc
mov
out
cli
push
mov
pop
inc
and
loop
add
jmp
sub
xchg
mov
xchg
push
pop
movsb
jl
dec
sub
lcall
lds
lahf
std
mov
sub
stos
xchg
mov
xchg
mov
add
xor
jle
pop
add
jae
mov
pop
test
add
call
stc
xchg
repz
and
inc
xor
xor
fimull
lret
nop
pop
shll
xor
push
push
loope
scas
mov
scas
aam
rorl
sub
cltd
push
loopne
mov
and
outsb
mov
pop
ret
jecxz
cs
and
int
sbb
les
into
arpl
outsb
ret
mov
insl
mov
aam
daa
push
addr16
bound
and
sub
pop
xchg
cmp
fdivrs
popa
push
sbb
andl
rorl
into
test
or
aad
sbb
dec
pop
add
xor
pop
sbb
rcrb
sub
pop
outsl
mov
sbb
sbb
call
fcmovu
bnd
push
aad
or
pop
pop
leave
jo
jnp
xchg
pop
cmp
jnp
jo
lret
movnti
pop
inc
xchg
shll
fstl
add
imul
andl
out
add
aaa
stc
fsubrs
push
ret
iret
hlt
mov
pop
and
xchg
lea
cld
mov
loop
lret
push
ljmp
testb
dec
rolb
add
cwtl
xchg
inc
push
sub
mov
inc
adc
push
popf
rorl
scas
rcl
pop
xchg
pop
mov
dec
repnz
pop
stos
mov
lret
push
mov
push
test
out
xchg
sbbl
sbb
mov
mov
xchg
jb
sti
or
xchg
sbb
jge
xchg
sub
mov
or
pop
icebp
add
pop
lock
bound
inc
mov
fcmovnb
and
sbb
std
outsb
test
out
mov
fstl
fwait
bound
add
cmc
add
push
or
enter
andb
jno
sarl
add
jno
dec
mov
adc
adc
addr16
mulb
pop
inc
sub
mov
mov
sbb
jo
mov
fldl
fadd
jbe
mov
dec
lock
pop
jl
xchg
mov
jne
jb
cmpsb
sub
mov
rorb
mov
icebp
jl
inc
pop
call
gs
push
jb
pop
in
mov
les
inc
push
aas
jl
xchg
mov
jns
fnstenv
mov
scas
add
out
xor
test
mov
jb
inc
mov
sbb
lret
xorl
fcomip
loope
cld
and
push
cmpsb
mov
add
dec
mov
jg
scas
pusha
scas
mov
sarb
std
mov
add
clc
dec
jo
out
push
lahf
andb
fwait
scas
clc
imul
sub
repnz
cltd
negb
out
andb
mov
sub
xor
aad
xchg
pop
and
fmuls
jge
push
test
sbb
mov
mov
mov
shld
mov
sub
jae
mov
movsl
mov
insl
or
pop
andnps
and
les
push
push
fcomps
jb
inc
cli
push
and
jecxz
xchg
in
adc
rcll
int
lods
stc
sub
arpl
push
lock
pop
mov
mov
inc
or
jg
addr16
or
mov
lods
ljmp
lret
sbbb
push
inc
out
lock
lods
xor
loop
cmpsb
push
js
daa
clc
out
out
jg
fdivl
cmp
adc
loope
mov
jo
sub
adc
xor
roll
repz
jp
inc
lods
jns
jle
pop
leave
data16
lods
dec
xchg
in
cltd
iret
int3
pop
in
aad
add
pop
cmp
sbb
daa
movsb
dec
jecxz
sub
stos
imul
xor
pop
rorl
sbb
jne
sbb
mov
shlb
hlt
jle
jae
gs
stos
test
in
push
and
idiv
sub
pop
dec
dec
rol
fwait
xor
mov
and
ss
cltd
and
iret
and
mov
mov
or
dec
or
xor
cmpsl
xchg
xor
dec
lret
or
and
jne
outsl
and
jbe
outsb
sbb
push
fldenv
push
stos
popa
mov
out
cmp
test
or
sub
fildll
jg
inc
mov
imul
xchg
out
add
test
xchg
inc
sub
loopne
aam
push
rolb
mov
icebp
push
push
ss
pop
push
lea
mov
rorb
or
sbb
xor
inc
xchg
fs
fadd
xchg
inc
cmovno
or
xchg
xchg
and
ljmp
jae
add
and
mov
push
xchg
call
std
or
mov
pop
push
movsb
and
mov
js
cmp
dec
in
es
out
es
outsb
cmpsl
jns
js
jbe
or
clc
pushf
stc
or
sub
mov
test
and
cld
mov
jo
ds
loope
sbb
fucomi
mov
push
loop
mov
out
rclb
xlat
pusha
push
stos
mov
int3
xlat
insl
ljmp
mov
arpl
cmp
jecxz
fists
sub
stc
and
cmp
inc
cmp
mov
adc
aad
int
add
ret
xchg
xor
stc
dec
mov
ret
xchg
xchg
pop
cltd
icebp
xor
inc
and
js
pop
jb
sub
and
rep
loopne
loope
dec
mov
fidivrl
mov
lret
addr16
fcom
shrd
in
add
ss
xor
fdivrs
popa
loope
shrb
sbb
jle
aam
inc
mov
nop
rcrl
loopne
xchg
negb
sahf
jle
test
cltd
and
add
imul
pop
loop
addr16
roll
cmp
dec
fdivl
cmpsb
stc
adc
lea
imul
add
mov
aas
enter
lea
push
nop
out
jmp
xor
cmp
imul
sbb
ss
or
add
es
jae
cmc
xchg
or
cmp
push
xor
out
ja
push
push
add
mov
sbb
popa
gs
xchg
out
scas
clc
xchg
mov
xchg
xlat
mov
iret
scas
sub
xchg
dec
ffreep
add
cmp
sbb
shrl
push
inc
int3
cmp
stos
or
pop
imul
pop
pop
aad
mov
jnp
je
lahf
stos
fs
test
sub
fstl
ljmp
rcrb
or
jns
stos
shrl
jne
gs
inc
inc
jmp
xor
inc
rcll
rcrb
fldt
pop
ss
sbb
test
mov
jne
pop
cmp
lods
jmp
xor
sub
test
push
push
xchg
cs
jle
jo
in
cmp
mov
dec
lcall
sbb
pop
mov
ficoml
jns
inc
adc
pop
sbb
push
loop
popf
or
xchg
jo
movsl
aas
jnp
out
inc
fisubs
popa
ljmp
mov
iret
cmp
aad
arpl
ds
xchg
xor
xchg
repnz
push
ss
fisttpl
cwtl
mulb
sbb
pop
adcl
inc
aas
rclb
push
mov
sbb
cmpsb
andb
ljmp
add
je
cmp
idivb
scas
mov
lret
jge
sbb
stos
jle
cs
mov
sti
loope
push
push
rcrb
mov
dec
xchg
fbstp
sub
std
test
pop
sub
dec
cmp
hlt
insl
es
jns
js
mov
inc
dec
test
push
dec
jle
xor
pushf
fs
movswl
and
inc
lods
fs
daa
orl
mov
ljmp
das
inc
icebp
adc
and
push
cmp
push
xchg
repnz
mov
add
cld
add
push
push
pusha
in
test
mov
ljmp
adc
inc
fcmovnbe
icebp
lods
sbb
pop
bound
adc
test
test
mov
divl
dec
mov
and
pop
inc
inc
xchg
xchg
fldenv
cmc
push
mov
xchg
sbb
cld
inc
or
outsl
and
adcb
mov
test
int
xor
mov
mov
mov
xchg
sbb
push
jae
mov
cmp
dec
fnstenv
push
mov
cmp
es
loope
push
sti
push
add
sub
adc
imul
and
cltd
mov
xchg
cltd
addl
in
adc
bound
arpl
int
and
add
and
fidivrs
jbe
or
pusha
xor
loopne
pop
adc
or
dec
push
fcoml
out
inc
mov
mov
iret
xchg
sub
push
test
mov
cmp
cmc
aas
shlb
leave
cs
sbbl
pushf
push
xchg
cmp
add
and
iret
data16
shrl
ljmp
pop
repz
in
ljmp
dec
repz
aam
cli
and
push
mov
push
fwait
and
insb
icebp
frstor
adc
mov
mov
pop
aaa
and
enter
aas
or
push
or
jmp
mov
lahf
push
cmp
push
mov
jbe
jecxz
cmp
dec
pop
inc
adc
mov
incl
incb
or
jns
sti
xchg
call
hlt
cmpl
add
sub
popa
mov
je
enter
pop
fs
fs
mov
mov
rcl
rep
sbb
or
test
cmp
fidivs
jbe
lcall
aad
xchg
outsl
mov
mov
clc
jnp
mov
xchg
add
cmp
insl
adc
out
push
les
imul
xor
xlat
aad
pop
cmp
inc
push
testl
cmpsl
scas
enter
mov
cli
loope
lods
nop
lods
repz
fucomip
jle
xchg
imul
fcompl
outsl
mov
ljmp
ss
fwait
lock
xor
in
test
stos
lret
cmp
mov
insl
fbstp
mov
mov
sysenter
lock
jb
mov
cs
lahf
stos
scas
jl
push
leave
jne
push
sbb
pop
or
cmp
jo
jnp
mov
or
loopne
xor
stos
mov
cmp
and
std
push
sbb
push
ret
ljmp
jno
mov
imul
push
int3
inc
test
mov
subb
push
lods
inc
xrelease
mov
xchg
ret
hlt
stc
sbb
pop
add
sbb
dec
movsl
movsb
std
popf
sub
inc
stos
mov
xor
cmc
ret
sub
mov
xchg
pop
adc
jbe
or
dec
and
push
mov
pop
pop
lret
test
xchg
jmp
incl
push
lcall
jns
int
lcall
xor
iret
mov
test
arpl
imul
repnz
jno
addr16
leave
mov
pop
loop
das
leave
inc
mov
aam
jbe
adc
or
mov
push
sub
cmp
shrb
pop
and
xor
fstpt
movsb
icebp
xor
push
add
mov
insl
arpl
dec
jg
push
dec
jno
lods
mov
xlat
sbb
out
pop
aad
sarl
xchg
cmpsb
int3
xor
scas
mov
stos
insl
les
cmp
repnz
mov
jecxz
pop
mov
add
cmc
out
call
aad
pop
dec
scas
jae
or
bound
iret
stos
scas
push
ror
stos
std
pushf
fmul
dec
push
xor
loop
push
pop
imul
loop
mov
fcmovne
andl
add
gs
cmpsb
xor
dec
cmpsb
xlat
outsb
daa
xchg
inc
cltd
adc
push
cmp
mul
dec
mov
jbe
icebp
repnz
xor
push
cmp
data16
pop
lea
push
out
cld
dec
loop
repz
xor
cwtl
cltd
aad
les
lock
and
push
jmp
sbb
and
ljmp
ss
popa
inc
mov
fimuls
cmpsl
cmc
cmpsb
pop
jge
push
int
shlb
sub
xchg
or
dec
xchg
scas
push
loope
stos
repnz
dec
mov
enter
dec
imul
and
lds
vcvttpd2dqx
in
cmp
daa
aam
aad
push
push
nop
and
add
pushf
mov
hlt
mov
pop
bound
add
add
sub
push
aam
ret
xor
sub
ficoml
loop
mul
jle
in
inc
scas
dec
lcall
lods
sti
adc
lods
sbb
ss
cmp
shl
lahf
imul
int
dec
cmc
cld
mov
jne
cmp
dec
or
mov
or
inc
inc
and
pop
ret
xchg
xchg
or
shll
jns
jbe
cld
popf
push
or
xchg
sub
pop
jo
ret
pop
push
jge
and
scas
push
pop
lock
fcomi
inc
and
loop
repnz
sub
jecxz
mov
dec
test
cltd
jg
jmp
dec
mov
jnp
inc
mov
rcrl
adc
cltd
dec
push
fs
les
add
xor
jns
dec
roll
add
push
mov
push
sbb
gs
mov
notl
ret
out
xchg
scas
or
in
inc
dec
jb
clc
aaa
mov
jle
in
mov
lahf
and
fdivrs
cmp
jne
lcall
mov
fisttpll
add
lock
out
push
stos
xor
pushf
hlt
leave
test
cmp
jo
jnp
or
in
adc
push
ja
inc
and
inc
mov
stos
cltd
in
imul
mov
push
inc
loopne
add
jmp
mov
ljmp
and
push
xor
lock
mov
adcl
sbb
xor
stos
push
inc
fstpt
mov
scas
sub
loopne
cmp
mov
sub
xor
xor
or
dec
out
adc
add
popa
mov
lods
xchg
or
and
subb
fsts
add
test
fildl
loopne
inc
cmp
inc
pop
divl
mov
mov
mov
pusha
lahf
int
and
in
lahf
ret
repz
fdivl
xchg
popf
or
fsts
popf
lods
xor
xorl
pop
test
adc
cltd
or
pop
mov
xchg
repnz
adc
or
inc
inc
rcrb
xor
mov
lret
cwtl
stos
mov
inc
pop
push
cwtl
iret
scas
inc
push
int3
xchg
mov
push
rorb
rol
sub
add
sub
sbb
lds
sti
xchg
add
mov
mov
pop
push
mov
mov
add
jl
clc
jb
sarl
shlb
pop
lods
push
xchg
push
fimuls
jecxz
lret
gs
pop
cmp
inc
imull
cmpsl
inc
xlat
hlt
sti
and
outsl
add
clc
cli
or
rcrl
or
jle
push
sub
scas
movsb
dec
fidivl
xor
clc
cmp
imul
push
xchg
mov
sub
jns
jno
faddl
mov
push
inc
outsb
inc
pop
jo
push
inc
aaa
or
mov
sbb
icebp
mov
push
xchg
jne
adc
in
dec
mov
shll
pop
in
and
in
lcall
or
adc
push
cs
inc
clc
pop
pusha
dec
jecxz
xorb
inc
mov
push
adc
into
adc
mov
pop
ljmp
cld
jl
arpl
imul
xchg
cs
cmp
add
insb
xchg
int
loopne
ret
push
cwtl
fwait
in
lcall
and
inc
or
xlat
add
cmp
jg
mov
mov
fisttpl
push
in
iret
jb
xor
fs
pop
jle
lea
test
push
gs
fcoms
jle
mov
dec
ds
out
jl
push
les
loope
add
test
fdivr
push
std
ljmp
mov
xchg
jnp
ja
jb
cmpsl
add
jmp
aad
shll
popa
popa
testb
clc
xor
adc
mov
sub
inc
pop
xchg
and
rcrl
adc
jne
movsb
lcall
dec
mov
dec
and
lcall
and
scas
outsl
mov
add
xor
aas
push
inc
or
addr16
repnz
sbb
loopne
jns
mov
mov
push
test
iret
adcl
insl
mov
pop
pop
shrl
lahf
xor
inc
gs
push
adc
lcall
xchg
xorb
sbb
sub
xor
ret
call
nop
ss
cmp
inc
popa
or
outsl
lods
sbb
mov
lcall
xor
or
cs
cmpsl
xor
mov
xchg
xchg
aas
push
push
inc
sbb
es
das
loopne
ja
xchg
vpsubsb
je
test
lcall
pushf
out
jecxz
adc
aam
jle
pop
je
mov
fists
cmpsl
mov
mov
mov
push
mov
cld
shll
ds
out
cwtl
mov
into
jbe
mov
xchg
je
fmul
addr16
push
mov
lret
and
flds
lea
fstl
lods
push
jg
cmp
std
fld
cmpsl
push
movsl
push
jecxz
loopne
sahf
sbbl
and
out
add
mov
aad
aam
loop
sub
std
cltd
jne
xchg
xchg
jb
clc
mov
outsl
cli
and
add
clc
adc
lret
loope
insl
sub
inc
incb
jnp
xchg
movsl
jns
and
add
or
xchg
ljmp
cmp
pop
jnp
mov
or
pop
jae
push
push
fwait
sub
lods
das
test
popa
or
out
mov
out
shl
push
pop
cmpsb
dec
mov
sub
dec
sub
jl
sbb
xchg
push
push
test
lret
test
cmp
movsl
mov
xor
frstor
fs
das
or
popf
rclb
cmp
outsb
xor
or
je
fidivrs
pop
pushf
xor
iret
pop
mov
lret
lods
xchg
lds
data16
add
pushf
mov
xchg
pmaxub
adc
and
outsb
add
cpuid
mov
cmp
cmp
daa
adc
sbb
sub
xor
mov
daa
data16
mov
or
mov
bound
into
sbb
inc
in
popa
jb
orb
lock
or
mov
test
fbstp
ljmp
iret
jg
push
imul
xlat
mov
jbe
xorb
sub
mov
add
xor
in
pop
aas
jbe
cwtl
adcb
cltd
mov
pop
mov
cmp
test
sarl
outsb
test
xchg
mov
repz
sub
mov
enter
adc
mov
lds
aad
sti
push
loopne
mov
jae
push
jo
into
dec
std
xchg
rol
xchg
out
cmp
fcmovbe
pop
jno
pop
cltd
ret
loopne
andb
xor
lret
pop
sarb
repz
das
dec
stos
pop
test
adc
lcall
and
mov
jb
add
mov
adc
outsl
inc
or
cs
mov
shrl
mov
out
fwait
jbe
mov
shlb
fs
jg
add
sub
pop
sbbl
daa
idivl
fwait
sub
dec
and
cmp
cld
xchg
and
inc
sbb
ret
cs
cmc
adc
and
or
cltd
and
inc
mov
xchg
mov
inc
pop
pop
scas
push
mov
into
pop
sti
adc
movsl
inc
mov
mov
out
xchg
outsb
ret
into
mov
push
insb
clc
fadds
xlat
lods
xor
mov
in
js
xor
jmp
mov
bound
dec
in
push
add
insb
sarb
inc
ret
ret
outsb
lock
js
pop
inc
dec
fcmovne
out
jg
cmp
mov
dec
sub
cmp
xorb
or
xor
mov
mov
shl
mov
mov
out
inc
mov
ror
push
or
orb
mov
mov
movsb
xchg
clc
lock
and
pop
dec
cs
lea
daa
mov
addr16
mov
out
mov
fdivrs
jecxz
jmp
jb
clc
mov
popa
out
dec
rcrl
inc
imul
lock
and
push
enter
jl
in
mov
inc
dec
imul
outsl
aam
dec
loope
stos
xor
aas
push
mov
inc
xor
mov
mov
xor
pop
push
inc
aad
aam
lea
inc
mov
out
pop
loope
push
stc
dec
mulps
mov
inc
out
cmpsl
out
cmpsb
push
popf
mov
mov
pop
jl
stos
mov
or
pushl
push
sbb
xor
pop
int3
sbb
sbbl
js
enter
push
nop
inc
sub
or
imul
jg
mov
add
xor
sahf
jmp
lock
xor
jne
xor
dec
ds
jle
mov
scas
adc
pop
jns
sub
inc
pop
adc
dec
jl
rorb
shll
sarb
fucomi
lods
jp
mov
or
cs
repz
lods
jmp
jne
ret
inc
jb
xchg
sub
xor
lods
inc
test
lret
je
movsb
lret
sbb
or
mov
dec
pushf
cwtl
cmp
test
inc
arpl
cltd
xchg
in
ljmp
jns
add
notl
mov
out
jne
xchg
mov
mov
push
pop
mov
outsb
cmpsl
sarl
dec
ja
pop
stc
shll
mov
sub
shrl
pop
out
mov
and
cmp
js
jae
or
cmp
mov
aad
push
scas
outsb
mov
pop
outsl
mov
add
fwait
je
lret
jp
push
cmc
mov
fstpl
push
imulb
adc
mov
adc
xchg
mov
cwtl
jecxz
jne
mov
cmp
leave
cmp
imul
rcll
and
and
out
popf
inc
rclb
xchg
notb
scas
cmp
movq
jb
dec
fldenv
mov
cmpsb
add
push
xchg
inc
mov
dec
ds
imul
xor
jnp
pop
sbb
pusha
cld
mov
dec
jno
icebp
cmpsb
jnp
cs
mov
push
and
addl
push
push
out
xor
xchg
dec
test
ret
sbb
add
arpl
mov
dec
mov
or
and
cmpsl
into
lods
inc
jle
jecxz
sti
lahf
lret
int3
pop
repz
and
push
sub
das
aam
push
loopne
andb
lret
cmp
scas
ja
push
es
sub
add
mov
pop
mov
daa
push
inc
sub
mov
fs
int3
push
dec
push
sub
sti
pop
stos
mov
sub
or
lea
inc
out
lock
lds
adc
pusha
jae
jle
leave
rcrb
sub
inc
dec
cmp
mull
push
ljmp
out
movsl
sub
add
inc
or
inc
enter
xor
mov
cmpsl
out
subb
add
pop
xor
lahf
and
pop
lcall
fidivrl
das
cmc
pop
imul
add
and
mov
movsb
pushl
pop
dec
add
fimuls
lret
mov
mov
std
cltd
pop
mov
xchg
and
scas
in
mov
movsl
mov
dec
add
push
fmull
test
cmpsb
inc
adc
aam
loope
dec
test
adc
nop
inc
adc
test
xor
test
cli
or
stc
xchg
or
mov
mov
push
sub
mov
jne
mov
mov
loopne
mov
xlat
and
ror
sbb
pop
sbb
push
adc
pop
pop
or
mull
mov
or
and
out
lods
mov
push
out
lods
jo
std
inc
push
cs
hlt
push
jae
test
dec
pop
fnsetpm(287
xchg
xor
and
push
mov
lods
or
arpl
xchg
aam
sub
subl
call
subl
mov
daa
insl
xchg
ret
inc
out
mov
mov
push
xchg
push
in
stc
int3
fildll
push
xchg
mov
inc
cmpsb
xor
fdivrl
int
jle
xchg
jecxz
adc
pop
out
pop
stc
lahf
ja
shlb
or
adc
xor
dec
add
fs
lods
push
repnz
adc
adc
pop
repz
jmp
adc
icebp
rorb
fsubrs
cmp
add
jo
in
add
jmp
mov
push
add
orb
xchg
in
sub
fwait
or
xlat
cmp
int3
das
inc
leave
in
scas
push
out
rcl
ss
repz
or
mov
mov
mov
lock
fiaddl
adc
in
lock
cld
pushf
mov
xchg
scas
mov
je
fsub
mov
pop
into
dec
dec
lods
test
into
movsl
pop
lret
lret
xchg
pop
leave
repz
pushf
decl
push
inc
fcmovnbe
ss
sahf
xchg
xchg
lcall
mov
ja
mov
cmp
lret
sbb
in
push
in
mov
cmp
mov
imul
push
nop
addr16
push
inc
jno
xchg
mov
mov
in
jo
cmpsl
mov
imul
xor
cld
les
and
lret
pusha
loopne
dec
stos
sbb
sub
cli
ljmp
and
mov
mov
fcompl
mov
xor
add
mov
mov
addb
stos
inc
pop
fdivr
sti
nop
and
push
mul
or
ret
sub
add
adc
mov
push
sbb
adc
andl
iret
test
movl
es
jno
xchg
pop
pop
push
push
add
xchg
xchg
inc
dec
dec
icebp
mov
sbb
add
inc
dec
test
inc
insl
in
aas
xchg
cmp
test
sub
pop
xlat
adc
pushf
mov
mul
pop
push
out
scas
xchg
and
xchg
fnstenv
in
test
pop
pusha
out
add
mov
xchg
add
insl
aas
popf
sbb
cmp
les
sbbl
sub
mov
cmp
rorb
mov
repz
xor
jo
ljmp
and
adc
mov
mov
lret
mov
mov
sbb
mov
pop
int
das
loop
movsb
add
push
lds
add
mov
out
out
jmp
and
cmp
fldcw
leave
pop
lcall
fcmovb
or
lods
out
loopne
aas
std
stos
inc
popf
push
es
je
cli
sbb
mov
dec
andl
movsb
insl
jnp
push
pop
pop
lock
ret
filds
mov
out
cmpsl
xchg
scas
nop
ljmp
cmp
pop
xor
mov
aam
jge
mov
sbb
add
es
xchg
mov
inc
jge
sub
mov
jge
pop
xor
stos
xchg
jae
out
inc
cwtl
cwtl
testl
outsb
lds
push
fsubp
cmc
adc
xchg
inc
mov
adc
push
andnps
xor
cltd
and
roll
and
std
pop
loope
jl
in
insl
inc
pop
mov
iret
fistl
test
mov
cli
movsl
aad
jb
pop
sbb
mov
pusha
filds
call
aad
mov
xor
scas
adc
push
sub
dec
imul
mov
xchg
inc
dec
sbb
mov
pop
dec
outsb
add
push
in
cmp
pop
insb
sub
int
inc
jmp
aaa
into
pop
push
or
mov
push
xchg
call
popa
out
imul
jmp
repz
xchg
insl
xlat
pop
dec
and
clc
mov
cmp
fidivs
dec
pop
add
jge
or
and
loope
push
push
mov
and
inc
stos
push
inc
pop
lea
fnstenv
fnsave
mov
or
nop
or
shll
inc
mov
adc
sbb
xor
mov
fdivrl
or
sbb
ret
sub
clc
dec
fdivrs
in
scas
call
xor
sahf
andb
push
or
xlat
and
leave
or
add
das
cwtl
stos
lds
ljmp
packssdw
arpl
pusha
stos
fcmovu
mov
andb
outsl
sub
les
jp
aas
pop
aam
xchg
jp
inc
imul
aad
sub
test
mov
negb
out
pop
repz
or
sub
ja
jg
int3
xor
les
stc
in
mov
outsb
ss
mov
ljmp
push
mov
mov
push
ss
cwtl
fnstenv
sbb
sub
std
imul
push
add
data16
jne
fcmovu
dec
mov
fmull
je
jp
xchg
adc
test
jo
movsb
cltd
addr16
xorb
and
pop
xchg
pop
aaa
test
push
push
pop
loopne
jg,pt
cmpsb
in
cmp
fucomi
test
mov
pop
xor
and
sub
xor
icebp
mov
mov
adc
add
sarb
fidivs
push
mov
inc
mov
lret
xor
mov
jns
aas
push
es
pop
or
in
xchg
adc
pushf
mov
lods
cmp
inc
dec
pop
mov
inc
sbb
mov
loopne
jecxz
scas
adc
es
push
jb
subb
dec
cmc
add
ja
lret
fsubrl
adc
out
aam
insb
subb
ret
imul
lea
mov
push
push
imull
xchg
xchg
and
adc
cmpsb
jbe
fistl
loope
je
outsb
inc
push
repnz
cmp
enter
xchg
jmp
jmp
aad
nop
inc
stc
or
push
popa
inc
mov
push
scas
xchg
push
adc
cmpxchg
and
lods
test
mov
xchg
jns
stc
dec
mov
loop
idivb
and
icebp
add
out
or
cmp
push
in
or
xlat
test
push
loop
push
es
and
dec
sbb
mov
fsts
pop
ss
sub
push
popa
sbb
and
adc
std
xor
push
inc
push
mov
cli
daa
mov
gs
push
mov
jp
ds
popf
sub
sbb
loop
cwtl
sbb
enter
in
stos
xchg
lret
test
lret
ret
add
and
das
mov
ds
out
mov
inc
lods
xchg
ja
xchg
sbb
aaa
and
and
aam
dec
xchg
out
int3
stos
fcmove
jecxz
insl
cmp
aaa
mov
inc
pop
stc
jl
sub
arpl
push
cld
shr
xor
incl
sbbl
adc
test
and
sbb
test
into
ret
inc
push
jp
or
dec
xor
and
cmp
cmp
pop
push
cmp
xlat
pop
icebp
aam
inc
in
or
push
push
or
adc
aaa
mov
add
cli
les
mov
shl
std
int
pop
pop
sbb
pusha
sarl
xor
sbb
mov
shlb
lret
sar
dec
popa
push
daa
sti
inc
pusha
fwait
sub
xchg
cmpb
test
push
jne
or
cmp
cmp
sbbl
insl
cmp
sbb
repz
adc
cwtl
insl
sahf
lret
mov
mov
push
adc
and
mov
in
orb
jp
mov
mov
lcall
jnp
jno
aas
xchg
loope
pusha
dec
add
popf
push
jmp
rol
sti
adc
pop
push
and
outsb
push
push
loopne
scas
add
lea
xor
add
daa
mov
xchg
je
add
rorl
push
fisttpl
pushf
aaa
mov
xchg
dec
inc
test
inc
cmp
adc
sbbb
lret
pop
cmc
repnz
sub
in
daa
popw
push
jns
sub
in
pusha
pop
nop
sbb
pop
add
xor
push
fwait
cmpsl
jg
and
pop
pop
mov
fistps
jnp
dec
aam
xor
fwait
shll
rorl
mov
push
adc
nop
jle
xchg
cmp
lcall
xchg
cmp
scas
mov
imul
sti
dec
fcoms
hlt
push
out
push
mov
fcomip
dec
cmp
xlat
hlt
fwait
xchg
mov
inc
scas
pop
mov
fbld
pop
test
xor
jns
add
dec
jp
and
jae
xchg
dec
aaa
fdivrp
cli
xchg
jge
das
cli
cmp
gs
add
imul
push
orl
out
push
jno
and
fbld
push
sbb
dec
mov
adc
sbb
stos
std
in
jae
sbb
stc
int
sbb
inc
inc
xchg
mov
popf
mov
mov
clc
fwait
loope
aad
incl
sti
and
push
insl
test
mov
sbb
cltd
sub
dec
out
loop
jo
inc
insl
mov
mov
xchg
xor
mov
and
inc
addr16
leave
movsb
in
xor
loope
cltd
cld
lods
pop
ljmp
mov
fcmovb
loopne
inc
stc
xchg
dec
scas
test
fdivs
mov
adc
fcoml
jecxz
pop
adc
lret
arpl
jecxz
ss
jg
inc
pop
rcl
cmpsl
push
fbstp
or
rorl
sbb
les
mov
xor
outsb
sbb
les
sub
push
inc
push
cmp
popf
sbb
jne
xor
mov
inc
lahf
cld
out
test
cs
in
fnstsw
repz
inc
mov
jmp
int3
int3
mov
sub
xlat
xlat
insl
or
mov
leave
pusha
lahf
ss
add
pop
dec
lret
sti
sub
addr16
clc
xor
or
out
xchg
sarb
leave
dec
filds
fistps
jne
adc
xor
stos
mov
xchg
pop
mov
push
dec
mov
jnp
test
sti
xor
cmp
jg
push
lds
adc
in
aad
add
mov
lods
pop
push
jl
jbe
jo
inc
xchg
push
lods
dec
jbe
jmp
xlat
or
pusha
mov
xchg
outsl
lret
rolb
xchg
adc
mov
mov
adcl
inc
cmp
lods
xor
imul
js
push
out
mov
pop
in
push
inc
stos
mov
dec
stos
test
xor
mov
xchg
mov
out
adc
mov
pop
imul
jecxz
aas
or
mov
test
leave
jmp
mov
mov
into
out
cmp
jne
inc
mov
fwait
push
or
cltd
xor
mov
push
mov
sub
lods
mov
xchg
in
stos
sub
scas
jo
ja
mov
clc
lahf
or
add
and
push
in
jns
jg
add
rcll
insl
sbb
ret
jns
sbb
jle
ret
xchg
sub
ret
call
or
xchg
mov
xor
pop
xor
mov
pop
jns
cmp
dec
cs
push
and
add
push
dec
adc
mov
xor
nop
jmp
addb
lods
outsb
jmp
jmp
xchg
xchg
jo
cmp
pusha
std
sar
stos
mov
gs
xchg
pop
in
cmp
aaa
xchg
arpl
jp
push
popa
outsb
fisubl
push
pop
fnstcw
addr16
pop
in
add
ljmp
aad
jle
ss
mov
push
xchg
lock
lret
fdivrs
mov
xchg
out
ss
pop
loope
lret
mov
mov
push
adc
lcall
push
mov
fwait
scas
mov
add
je
lret
xor
cmc
sub
or
xor
mov
clc
nop
pusha
cmp
std
movsl
sub
repnz
push
sub
pushf
cli
daa
inc
movsb
leave
sti
or
mov
xor
out
cmp
test
cmp
sbb
shlb
and
clc
and
movsb
aaa
xor
push
xor
pop
cmp
inc
repnz
bound
jg
dec
sub
xchg
fwait
lret
or
jge
mov
jnp
pop
dec
or
sub
inc
das
dec
cli
xor
and
xor
or
push
stos
push
call
imul
and
mov
push
test
xor
loope
jge
jb
jnp
inc
xchg
out
jp
adc
shll
mov
jge
pop
fistpll
lret
or
clc
pop
cmp
subb
inc
xchg
mov
nop
cltd
xchg
hlt
pop
cltd
push
sbb
repnz
adc
mov
lock
rcl
mov
imul
or
mov
sbb
xlat
xchg
xor
jecxz
sbb
hlt
add
in
xor
cmp
sbb
mov
or
test
sar
lret
mov
loopne
adc
clc
xor
fsubs
lcall
xor
insl
adc
sub
call
dec
push
adc
enter
pusha
shll
mov
or
pop
push
pop
repz
and
or
popf
hlt
scas
sub
aas
adc
adc
mov
lcall
jb
mov
jae
push
push
mov
pop
pop
cmp
cmp
adc
dec
into
repz
pop
frstor
add
arpl
xor
jbe
loop
push
js
in
pop
mov
daa
xchg
repnz
jecxz
dec
sub
int
cmp
push
mov
lods
jmp
or
ja
inc
push
stos
call
or
add
sbb
leave
adc
inc
call
popl
test
cmc
sbb
loopne
in
aad
loop
jo
test
xor
hlt
cmp
enter
mov
ljmp
cli
fildl
js
shrb
inc
xor
pop
test
push
ljmp
outsb
inc
and
and
popf
mov
jmp
in
xor
xor
arpl
out
pop
cmpsl
sbb
pop
mov
repz
xor
fcompl
cmp
int
pop
loope
out
pop
cmp
pop
mov
fidivrl
imul
inc
xlat
repz
daa
inc
ret
es
dec
dec
loopne
call
in
addl
popl
cmp
push
jo
cli
inc
push
jne
jo
inc
inc
and
jae
sbb
mov
fdiv
sahf
or
cltd
ds
xor
xchg
imul
test
xchg
es
jg
fisubrs
jns
xorl
push
inc
mov
mov
pop
fwait
loop
popf
lcall
stos
push
sub
push
dec
push
arpl
adc
imul
stc
les
ror
pop
dec
jne
xor
ja
dec
mov
nop
stos
mov
flds
iret
mov
mov
jno
fstl
xchg
sub
mov
mov
mov
adc
int
out
inc
aas
push
xchg
lcall
dec
lods
fstpl
into
sahf
test
pop
or
repz
in
test
mov
test
mov
sbb
lcall
in
jp
out
call
shll
push
pop
int3
sti
cmp
jge
repz
daa
cmp
stos
mov
jmp
cli
packssdw
inc
push
int3
int
int3
mov
pop
pushf
mov
sbb
push
ja
xchg
mov
pop
push
sub
mov
test
arpl
imulb
jo
or
out
sub
push
cltd
inc
or
xchg
pop
xor
and
repnz
imul
mov
cvtpi2ps
lods
lret
in
fadd
lret
or
jecxz
dec
out
xor
leave
shll
call
sub
test
scas
sti
jno
xchg
iret
cltd
ss
mov
sub
adcb
cmpsl
idivl
scas
movl
js
or
jae
jnp
mov
dec
pop
leave
mov
movsb
aad
xchg
pusha
dec
adc
dec
lods
insb
add
jo
pusha
xchg
mov
insb
setae
fbstp
aaa
xchg
mov
add
mov
lock
push
cwtl
mov
test
and
icebp
insl
jmp
sub
sbb
mov
stos
rcrl
aam
inc
jno
jle
dec
mov
shll
test
inc
push
inc
movl
fnsave
push
cmp
sbbb
dec
inc
jp
adc
addr16
je
and
aam
inc
jbe
inc
test
inc
jmp
loope
out
ret
push
stc
dec
push
movsb
into
stos
sar
and
mov
jno
fisttps
xchg
data16
mov
sarl
xchg
xchg
sub
lods
cwtl
sub
test
js
mov
xchg
xor
or
jp
xchg
daa
mov
xor
bound
xchg
jmp
dec
xchg
sbb
mov
mov
movsb
cli
shlb
sbb
sarb
xchg
cmc
addb
imul
mov
js
mull
cmp
lcall
in
jo
push
inc
pop
or
adc
xor
sub
or
cwtl
xor
ret
sub
cmp
cmpb
xchg
ret
xchg
aaa
adc
add
flds
mov
dec
pop
fs
and
jmp
shll
test
inc
loope
jns
popf
push
ds
cmp
in
jecxz
jbe
mov
mov
mov
dec
pop
addr16
mov
gs
jp
xchg
and
sbbb
lock
subb
mov
ljmp
leave
and
mov
mov
test
push
mov
inc
movsb
shll
push
dec
xor
xchg
dec
arpl
aad
add
in
inc
and
push
push
sub
or
les
mov
inc
cmp
lods
jmp
jle
repz
mov
fwait
push
jge
cmpb
je
mov
shlb
dec
sbb
xchg
xchg
es
jge
sub
mov
movsl
mov
jns
cmp
in
lods
xorl
mov
lcall
dec
lahf
mov
and
adc
cpuid
sarl
clc
cmpsl
jno
je
or
jne
decb
pop
sbb
notb
call
or
bound
mov
js
cmpsl
dec
xchg
and
shrb
sbb
fwait
scas
sbb
mov
jge
call
pusha
or
cmpsl
mov
aad
xor
imul
rclw
std
inc
sub
jle
jg
push
and
mov
mov
jge
pop
fwait
adc
sti
lods
outsb
mov
mov
dec
loope
dec
pop
loopne
das
push
aad
adc
cmpsb
gs
pop
xchg
xorb
add
testl
movsl
and
mov
mov
push
lea
cmpsl
lock
pusha
sub
sbb
rcrl
xchg
adc
subb
pop
mov
jge
pop
scas
xlat
inc
sbb
inc
xchg
jp
in
jl
outsl
inc
ficoms
int
arpl
in
orl
sub
dec
mov
jb
insl
loopne
sbb
nop
pop
mov
cmp
mov
fisubrl
add
pop
sahf
loope
stos
push
into
in
add
roll
outsl
imul
imul
xchg
add
ja
jns
lods
push
ljmp
stc
mov
jb
sub
bnd
jno
push
jae
sub
lcall
fsts
cmpl
mov
dec
add
push
dec
jecxz
jecxz
call
mov
aad
jb
scas
pop
and
inc
lea
enter
add
mov
add
es
xor
pop
lods
inc
nop
mov
lret
xlat
jmp
sbbb
nop
jb
adc
push
call
loop
or
adc
or
gs
into
mov
sbb
adc
jnp
scas
inc
aas
xchg
mov
cmp
loop
aas
dec
popf
adc
xchg
sub
mov
inc
cmpsl
push
subl
lcall
lret
cmp
xchg
out
mov
mov
decl
cli
popf
fcomi
loop
into
gs
call
cwtl
inc
loopne
repnz
jecxz
into
fmull
and
test
mov
lret
fists
xor
aaa
js
lcall
stc
dec
es
addr16
out
sbb
jns
jne
aaa
stos
mov
in
mov
xor
adc
xor
std
or
ljmp
cmp
push
or
sbb
dec
push
ret
loopne
push
or
lods
push
mov
imul
xchg
js
arpl
or
mov
test
mov
adc
or
dec
jmp
cmp
sub
cmc
ja
cmc
mov
addr16
xchg
sub
jb
add
enter
xchg
jmp
popa
leave
jne,pn
and
fcmovnb
fistps
inc
and
js
rorb
test
inc
push
das
arpl
mov
adc
notl
add
outsl
js
xchg
mov
das
xlat
jle
insl
scas
les
dec
xchg
shlb
dec
cmp
in
xchg
xor
mov
add
jnp
jae
mov
mov
ja
sbb
dec
jnp
adc
xor
scas
add
push
ss
in
push
les
and
cld
push
push
pop
inc
xor
mov
xor
int
push
mov
mov
push
js
jno
incb
hlt
sqrtps
mov
add
aam
or
shll
ret
cmp
bt
les
push
pop
fsubrs
pop
pushf
stc
loop
pslld
xchg
mov
add
pop
xchg
xor
clc
jle
cmp
movsb
movb
imulb
xchg
das
push
call
pop
imul
pushf
xor
push
and
sti
mov
popf
call
xor
jp
sti
dec
arpl
mov
add
xchg
inc
pop
xor
jb
inc
fisubs
push
sarl
adc
pop
inc
imulb
mov
or
mov
push
inc
call
cmp
push
xor
xor
mov
shlb
pushf
xchg
scas
inc
adc
mov
out
pop
hlt
or
xchg
add
sbb
push
ret
outsl
cmp
xchg
sub
mov
mov
fisttps
mov
shlb
aam
adc
out
xchg
mov
mov
iret
lds
mov
jp
jno
adc
xchg
add
lds
pop
shrl
ljmp
cld
inc
aas
out
pop
jp
aad
flds
lods
icebp
iret
movsl
loope
xorl
lret
pop
pop
enter
add
cwtl
and
inc
cmp
ficompl
add
cmp
aas
bound
xchg
push
cmp
ja
mov
repz
add
pushf
cltd
push
jbe
out
loopne
sbb
push
imul
dec
mov
fcomp
je
dec
inc
out
outsl
sti
xchg
and
icebp
adc
inc
sbb
icebp
inc
aaa
into
jbe
mov
popf
dec
in
in
jmp
in
mov
jl
mov
xor
rclb
addr16
adcb
add
outsb
popa
jae,pn
pop
inc
push
adc
xor
sub
bnd
or
test
lds
les
ljmp
adc
sbb
dec
es
cld
fs
cmp
cmp
subl
xchg
add
sahf
sub
dec
sub
incb
das
sbb
pop
out
idiv
sbb
sub
shlb
andl
cmp
daa
aaa
test
cmp
stos
xchg
pop
mov
ret
hlt
add
into
mov
push
adc
test
cmp
lret
adc
icebp
int3
xor
std
sbb
xchg
aas
and
xor
mov
ja
lods
jg
in
pushf
push
or
je
pop
push
dec
sub
cltd
mov
xor
and
sti
mov
enter
imul
cltd
xor
lcall
mov
orb
inc
sub
leave
pop
sarb
loopne
sub
xor
pop
shlb
mull
jbe
cmp
ja
and
mov
or
adc
sub
mov
lret
shll
lahf
adc
cmp
push
cmp
mov
movsb
jl
ficoml
movsb
loopne
clc
nop
fwait
adc
sbb
mov
xlat
mov
sbb
insl
jge
mov
adc
push
hlt
push
pop
mov
lcall
jp
fnstcw
rcl
xchg
jg
lods
int
inc
sbb
shrb
xor
push
cld
addr16
dec
dec
adc
mov
push
in
sbb
loopne
mov
lcall
and
mov
dec
jg
std
data16
cwtl
push
icebp
xchg
mov
push
mov
or
pop
test
xchg
mov
ret
cmc
sti
mov
in
adc
test
fbld
orl
and
xlat
lods
or
mov
cmpsl
cmp
in
not
adc
sqrtps
inc
scas
je
in
loopne
dec
adc
popf
stos
sbb
sub
sub
or
popf
mov
sbb
push
in
das
mov
out
cmpsl
pop
xchg
lret
dec
test
fbld
push
fsub
dec
pop
imull
and
sub
imul
push
ret
inc
fsubr
push
fadds
push
mov
shrl
mov
jp
add
add
rcll
les
pushf
arpl
in
fidivs
shl
ja
inc
add
scas
adc
rolb
cmp
xor
pop
ljmp
or
xor
xor
inc
decb
inc
mov
outsb
outsb
loopne
cs
pop
and
shl
xchg
mov
jnp
shr
push
jg
pop
push
scas
jmp
xlat
push
mov
mov
ret
in
test
jno
push
test
cmp
shrb
pop
ja
jecxz
sub
xor
loope
repnz
mov
mov
push
push
xor
lock
lcall
sub
xchg
sahf
addl
jecxz
jbe
sub
and
adc
dec
mov
and
aas
mov
mov
sbb
in
in
fcoms
out
insb
shr
bound
mov
gs
mov
mov
orb
and
ret
xchg
test
rorb
mov
or
loop
adc
cmp
xor
out
int3
fs
lret
cmp
fcoms
aam
cli
mov
addl
mov
mov
imul
xchg
sub
aad
testb
ret
mov
jbe
inc
pop
out
rolb
mov
or
adc
imul
pusha
imul
notl
push
jmp
test
stos
lods
inc
cmp
or
call
sahf
mov
in
cmp
adc
syscall
inc
lods
sub
insl
cmp
ret
mov
jmp
movsl
icebp
scas
xor
leave
push
lods
or
test
cld
jae
inc
shlb
in
cmpsl
mov
inc
jae
test
mov
int
sbb
je
xchg
xor
mov
xchg
nop
mov
stc
jg
mov
inc
dec
xor
aas
inc
out
sti
jbe
stos
lock
clc
sbb
fdivl
pop
add
and
dec
add
int
in
and
xchg
and
dec
cmp
sbb
in
jnp
xchg
mov
mov
mov
push
cmp
aaa
pop
out
push
pop
jmp
fildll
addb
sarb
sbb
lea
lods
inc
push
scas
dec
aaa
nop
aaa
push
inc
sti
mov
push
out
out
dec
loope
outsb
aad
lds
pop
sub
testl
xchg
mov
lret
cli
es
pop
dec
in
push
push
sub
adc
pop
and
mov
das
call
push
pop
aaa
adc
or
aas
mov
dec
out
dec
jbe
in
pop
insl
or
mov
or
adc
std
sbb
outsl
mov
xchg
adc
cmp
lahf
and
dec
xor
push
sarb
xlat
mov
ret
pop
call
xor
call
jmp
popf
mov
mov
and
pop
adc
mov
mov
dec
mov
xor
ja
push
add
fdivrl
out
mov
push
ss
xchg
sub
mov
and
xchg
mov
xchg
pop
icebp
cmpsl
sti
imul
sbb
mov
mov
fs
mov
xor
into
pop
or
fmulp
test
pop
ds
repnz
dec
nop
sub
xchg
sti
lcall
ljmp
dec
leave
adc
cmp
je
lcall
cmp
xor
out
mov
dec
arpl
aam
pop
xor
or
pop
xor
iret
stos
testl
push
arpl
lret
fidivrl
adcl
mov
popa
jns
stos
shr
aad
pop
sahf
out
cmc
pop
insb
push
fcompl
sahf
repnz
xchg
outsl
je
in
hlt
leave
pusha
daa
inc
xchg
jp
dec
out
mov
inc
push
call
push
xor
sahf
cmp
jnp
fs
mov
and
aas
in
popa
dec
mov
gs
cld
adc
popa
repz
xchg
rcl
dec
mov
xchg
std
mov
fbstp
xchg
xchg
lret
arpl
out
stc
ds
shl
test
dec
aas
cmp
int
sbb
adc
shrb
mov
push
cmp
inc
addr16
push
in
push
je
or
mov
cli
xchg
mov
sbb
aad
and
dec
pop
in
jne
and
and
shrb
xor
lcall
rclb
sub
and
and
cmp
leave
push
and
fsts
movsl
ss
mov
dec
shll
shlb
arpl
iret
sub
pop
movsl
pushl
movsl
inc
pop
or
imul
mov
cmpsb
loop
out
aas
sbb
stc
dec
mov
lret
mov
xor
leave
int
stc
cmpsl
subl
cmpb
mov
mov
push
xchg
sub
incb
outsl
jb
and
push
out
inc
cmp
insl
cmp
in
aaa
pop
inc
push
popl
fwait
arpl
int
mov
push
xchg
pop
in
clc
cmpsl
ds
pop
adc
in
mov
sbb
push
iret
popa
clc
mov
mov
data16
jg
adcl
popf
loop
std
dec
testb
scas
call
mov
popf
inc
pop
adc
inc
mov
pusha
sbb
pop
mov
xchg
loop
inc
dec
test
arpl
fcompl
lock
out
mov
inc
hlt
push
push
add
jb
sub
mov
enter
fwait
ds
int
add
ja
cmp
sbb
movsb
fs
aad
xchg
dec
cmpsl
stc
testl
dec
je
int3
pop
cmp
sbb
mov
dec
shr
push
cwtl
seto
xor
sub
jae
popf
mov
dec
and
cmpsb
fiadds
inc
sahf
lds
out
pop
sbb
jo
sub
pop
cli
jnp
sub
push
pop
xor
arpl
push
lret
mov
mov
sub
hlt
and
fs
fsubs
mov
out
loop
test
push
jge
jmp
insl
test
stos
repz
cmp
and
sbbb
xchg
xor
xchg
xor
cmp
cmpsb
and
dec
push
mov
subb
add
out
sahf
xchg
mov
popa
shrb
and
adc
jae
dec
mov
sbb
out
rorb
lahf
testl
popf
jecxz
flds
jmp
outsb
sbb
xor
and
sti
outsb
shr
aas
push
xor
jmp
pop
sarb
pop
pop
fcomip
popa
push
nop
cs
mov
mov
out
mov
shlb
lss
push
aaa
adc
jp
xchg
jbe
lea
cmpsl
stc
nop
lds
sub
mov
stos
ficompl
push
dec
fnstenv
add
cmp
jp
lcall
adc
mov
bound
fwait
imul
cmpl
fs
inc
in
inc
dec
cltd
outsl
adc
cwtl
or
mov
adc
lret
gs
cmpl
ja
fwait
push
inc
es
pushf
sbb
xchg
inc
shr
xor
test
scas
scas
into
inc
fldcw
mull
jmp
repnz
iret
jle
add
jno
pop
fdivr
mov
stos
push
int
adc
adc
cwtl
add
push
lods
pop
dec
fidivl
insl
pushf
fs
or
xchg
int3
jg
fdivl
and
cmp
sbb
insl
mov
cmp
push
sub
mov
movsl
ficoml
xchg
cmc
mov
sbb
es
sbb
jmp
lret
mov
mov
pop
ret
out
push
xchg
ret
jnp
lea
fcmovu
out
aam
lcall
lcall
pop
jns
andl
cld
and
jg
or
pop
cmp
dec
test
jae
pop
sbb
xchg
movsl
inc
push
sbb
sub
sbb
xchg
jns
outsb
or
jbe
sar
shl
xor
fadds
out
cmp
cmp
ja
mov
jae
mov
push
push
test
and
mov
mov
shrl
or
push
icebp
sbb
add
mov
jl
jb
fdiv
call
or
adc
and
jo
loope
and
js
scas
inc
dec
movsl
jmp
xchg
add
or
movsb
dec
fistpll
fildll
pop
popa
ljmp
jno
pop
in
sbb
pop
inc
cli
idivb
sbb
jge
pop
push
es
ds
data16
rcr
outsl
icebp
fs
sbb
testl
jo
jg
xor
inc
std
es
xchg
test
jbe
int
movsb
jecxz
out
and
in
add
cmc
mov
adc
fdivrp
mov
xor
test
ss
rorl
mov
call
mov
sub
sti
nop
sbb
sahf
mov
mov
pop
adc
scas
adc
or
inc
jnp
jns
xor
inc
icebp
cmpsb
cmpsl
dec
in
inc
loopne
push
xchg
push
sub
cmp
inc
pop
inc
mov
xchg
or
das
pop
sub
jp
stc
mov
sbb
mov
add
adc
into
and
insl
ss
cli
xchg
mov
out
rolb
les
lahf
cmc
fmulp
mov
add
pop
mov
or
cmp
cmpsb
repnz
mov
jp
xorl
push
jnp
adc
pop
mov
sub
scas
rcll
mov
mov
stc
sub
mov
cmpsb
or
out
out
or
loopne
lods
mov
jns
stos
fdivrs
xchg
in
sbb
jle
mov
cli
jne
outsb
shl
sub
nop
mov
sub
fs
inc
movsl
add
xor
cs
push
gs
add
dec
daa
mov
or
mov
mov
pop
stos
inc
pop
jg
sub
mov
xor
push
xlat
dec
add
sti
movsb
adc
sahf
and
dec
jne
jl
movsl
ret
add
insb
scas
clc
sbb
mov
jle
cmp
fmuls
lahf
or
jns
push
sub
and
mov
ljmp
ret
and
xchg
and
cmp
push
pusha
ss
lret
xor
lret
lahf
rclb
ja
bound
fs
fxam
mov
cwtl
cmc
or
dec
pop
ljmp
call
push
cmpsl
mov
mov
test
je
push
sbb
bswap
inc
lret
mov
sbb
lret
add
push
push
sbb
in
adc
and
cli
mov
push
lods
mov
or
jle
sub
and
cmp
repnz
add
push
push
subb
lcall
pop
mov
mov
dec
scas
and
xchg
andb
push
mov
nop
into
in
test
js
mov
xor
xor
push
xchg
stos
mov
aad
stos
rcl
pop
insb
outsb
loope
clc
push
mov
sub
hlt
mov
xor
loopne
jl
enter
push
dec
bound
jno
ret
insb
xchg
jge
addr16
cltd
shlb
cld
xchg
pop
lods
mov
inc
ficoms
xchg
add
pop
clc
pop
sahf
sub
pushf
mov
test
ljmp
jecxz
cmp
mov
cltd
es
push
jp
jg
push
mov
icebp
xchg
mov
sbbl
xchg
cli
fwait
pop
fistpll
dec
icebp
jmp
push
pop
fbstp
pop
cmp
jl
ds
int3
sbb
push
clc
inc
outsl
repz
lcall
das
jae
push
fstps
dec
int3
inc
mov
gs
push
decb
mov
rcl
dec
int
leave
fs
stos
push
xchg
loopne
push
idiv
bound
jb
inc
loopne
sbb
xchg
jmp
lds
inc
clc
mov
shll
sub
scas
les
popf
push
scas
mov
add
mov
pop
dec
mov
lods
xor
ret
pushf
mov
push
adc
in
and
mov
and
push
test
ror
pop
shrl
jmp
pop
aaa
cmp
mov
and
outsl
sbb
test
fs
mov
sbb
call
mov
dec
pop
fcoml
xor
sub
dec
add
sbb
stos
popf
arpl
hlt
dec
mov
clc
jae
and
or
call
push
aad
xor
test
cmpsb
je
jge
repz
out
mov
push
cmp
ss
mov
sbb
lock
and
mov
xchg
movsb
outsb
fnstsw
mov
jecxz
gs
mov
lret
mov
jp
stos
mov
lea
daa
into
add
fbstp
sub
cmpsl
jb
nop
enter
cmp
popa
notl
daa
inc
cmpsb
xchg
inc
xor
mov
add
inc
fmuls
sbb
mov
mov
fbld
enter
xchg
fidivs
leave
repz
sbbl
jnp
jns
testl
mov
push
fcomp
ljmp
xchg
shlb
jg
and
ljmp
aam
inc
out
cmpsl
in
cmp
sbb
mov
mov
add
subl
dec
repz
popa
imul
ror
pop
clc
notl
test
dec
les
cmpsb
mov
flds
sub
in
dec
add
hlt
inc
sub
fwait
lock
jbe
loope
rcrb
dec
loop
xchg
jnp
jns
fsubp
filds
pop
push
movsb
mov
gs
test
into
cs
push
cmp
daa
jmp
mov
fwait
cmp
andl
sub
loope
push
jmp
and
xchg
aam
das
aas
jmp
testb
nop
adc
push
dec
inc
xor
inc
loop
jl
outsb
mov
or
std
cmp
cmpsl
cmpsb
and
adc
pop
in
cmpsl
cmp
out
mov
dec
pop
sbb
dec
das
mov
xchg
sub
movsb
mov
hlt
lds
fidivs
dec
popa
sbb
arpl
xchg
sub
push
nop
fidivl
stc
mov
clc
nop
rcll
enter
cwtl
call
adc
out
pusha
imull
xchg
mov
inc
sbb
or
mov
mov
and
xchg
and
stc
inc
pop
or
sub
and
test
cwtl
jmp
cmc
xor
push
inc
jnp
adc
jo
pushf
test
dec
rorl
adc
hlt
adc
paddb
add
sbb
call
mov
adc
stc
lahf
pop
scas
std
roll
loopne
inc
in
out
sbb
xchg
sub
inc
int3
inc
iret
xor
mov
xor
mov
mov
ljmp
outsl
test
das
cltd
jg
lahf
sti
adc
je
dec
subl
sbb
std
sbb
mov
or
sbb
cmp
pop
rcll
adcl
mov
sarb
or
mov
jl
out
push
jecxz
ret
push
adc
push
ljmp
divb
repz
pop
rolb
dec
cmp
andl
insl
out
test
dec
dec
adc
adc
push
sti
sub
xchg
xor
ret
cmp
out
dec
dec
nop
cmp
fstpt
jne
jo
in
rclb
aam
movhps
xlat
cs
inc
mov
add
std
ror
out
xchg
pop
dec
mov
stc
std
sbb
das
fistl
push
lret
sub
and
addb
fimull
stos
loopne
inc
fisttpl
mov
outsb
fnstsw
sti
scas
xchg
mov
jae
cltd
push
sbbb
push
frstor
mov
mov
lcall
push
adc
iret
xchg
or
cmc
outsb
mov
pop
xor
shll
dec
in
inc
mov
xchg
xlat
in
test
jns
scas
and
sub
std
iret
aas
add
sub
pop
lea
out
inc
jecxz
loopne
pop
outsl
xor
push
imul
adc
mov
icebp
mov
imul
ss
iret
mov
in
fadds
pop
inc
not
push
dec
jecxz
jns
stos
lods
dec
lret
pop
mov
adc
sub
dec
pop
int3
neg
jmp
sbb
outsl
ret
cmpb
sub
in
xchg
or
push
fldcw
mov
pop
or
data16
jl
outsl
add
ret
xor
movsl
jp
inc
sub
insl
mov
dec
repnz
sbb
mov
mov
fs
sub
popa
call
xchg
rcrl
push
shlb
add
test
cli
xor
jecxz
dec
and
xchg
push
in
pusha
test
sbb
inc
mov
mov
je
xchg
lods
sarl
lret
push
out
push
rcl
outsb
leave
mov
mov
in
jge
xchg
test
jae
xor
inc
mov
mov
lret
sub
gs
sub
sahf
icebp
leave
xor
insb
inc
in
push
cmpsl
adcb
dec
mov
in
cwtl
sbb
and
or
sub
sahf
mov
xor
mull
inc
push
aad
les
sub
xchg
test
call
or
jg
fcmovb
fcoml
or
jge
inc
scas
inc
sub
lock
in
insl
sbb
xchg
mov
add
scas
mov
push
stc
push
dec
rcr
in
cmc
mov
inc
push
sbb
pop
test
inc
pop
cmc
mov
sub
and
xor
pushf
movsb
jg
rorl
mov
enter
jmp
out
sahf
dec
in
insb
jle
mov
in
scas
inc
and
fnsave
or
cmpb
nop
imul
aaa
ret
lea
sahf
data16
popf
and
xor
cmc
sbb
jg
movsb
mov
fisubrl
push
inc
loop
push
fwait
jge
jno
dec
mov
mov
call
mov
fldenv
xchg
divb
add
dec
and
test
dec
das
xchg
pop
mov
xchg
call
icebp
xchg
and
iret
sbb
or
xlat
pop
xchg
push
fstl
jp
xor
notb
inc
mov
das
roll
sub
pop
jno
push
lret
lret
mov
ret
xor
rcl
ficompl
dec
mov
push
call
or
push
movsb
shrb
mov
jge
test
pusha
fists
mov
jmp
outsb
out
popf
jmp
outsl
sbb
jmp
test
push
cwtl
bound
in
int
daa
jmp
cmp
push
cld
cmpsl
mov
scas
xor
or
mov
mov
cmp
pop
push
xchg
adc
xor
or
cld
push
pusha
inc
movsl
lods
push
sub
inc
sahf
dec
jb
jg
mov
sahf
sti
ret
pop
fucomip
js
mov
decl
jo
lods
es
cmc
inc
pop
cs
stos
movsb
movl
icebp
mov
mov
aad
popf
cmp
popf
aas
sbb
bound
mov
ficompl
std
addb
fsubrl
cli
mov
pop
aam
or
rcrb
mov
sbb
lcall
loopne
xor
es
in
and
jge
sahf
out
lret
fcoms
inc
ret
cmpsl
movsb
jmp
call
mov
mov
lea
pop
in
test
jge
stos
or
jne
fmulp
xchg
jp
adc
mov
frstor
jg,pn
mov
mov
rcl
outsb
or
mov
mov
hlt
dec
es
jnp
jno
shrb
into
or
daa
push
dec
out
mov
push
fs
xchg
orl
and
fdivl
xchg
xor
ret
test
xlat
and
add
cmpl
jnp
daa
out
enter
and
gs
stos
cmp
inc
cli
repnz
mov
cs
lret
xor
push
add
xchg
push
xchg
sub
xor
es
inc
mov
fisttpll
loopne
inc
shlb
dec
adc
sahf
cmp
aam
insb
pop
sbbl
lret
mulb
imul
out
and
loop
rorl
insl
jmp
or
mov
jecxz
ljmp
cld
mov
aaa
arpl
pop
jns
dec
inc
jg
fnstenv
or
ds
test
adc
imul
lahf
sub
mov
xor
pop
or
out
cmc
and
lret
bound
add
andb
jno
movsb
notb
xor
and
pop
mov
and
mov
mov
rcl
or
mov
jnp
int3
int3
xor
decb
nop
lret
lds
jg
ljmp
jnp
xchg
pop
mov
mov
mov
scas
inc
loope
js
jge
dec
jecxz
fnstsw
push
loope
test
rclb
into
gs
jl
inc
xchg
mov
in
jo
out
outsb
add
inc
fldl2t
cmp
mov
popf
out
adc
mov
mov
ror
popl
sahf
xor
jae
xor
fidivrs
outsl
test
leave
mov
add
sahf
stos
pop
fildl
xchg
adc
adc
lods
inc
mov
pop
xor
push
or
inc
in
dec
push
fisttpll
xor
jo
or
add
movl
sbb
int
dec
test
dec
push
fsubr
mov
repz
xchg
inc
jecxz
push
cli
xchg
shr
add
sbb
push
or
aas
jae
pusha
cmp
ret
addb
scas
pusha
cmp
gs
xor
xchg
mov
movsb
aas
adc
push
and
movsl
and
lods
add
scas
mov
pop
mov
adc
enter
or
and
inc
jle
mov
nop
push
mov
add
scas
ja
jae
sarb
pusha
cmp
pop
stos
add
xlat
test
loope
adc
es
out
arpl
add
in
push
pop
bound
xchg
sub
push
mov
leave
add
popf
sub
shll
xchg
sbb
test
idivl
bound
ret
out
sbb
sbb
mov
adc
je
sub
imul
mov
jg
out
jg
punpcklwd
xchg
xor
dec
repnz
push
cmp
dec
cltd
das
aam
out
into
pusha
test
xchg
insb
nop
das
fmull
repz
stos
bound
fisttpl
mov
es
orl
nop
mov
ficompl
aaa
scas
sbb
lods
out
add
sbb
sub
inc
test
add
mov
das
pop
fldcw
push
imul
xor
dec
sbb
pop
rcl
mov
cmpl
inc
jle
arpl
push
inc
pop
jbe
mov
scas
mov
insb
fdivr
loop
mov
sbb
outsl
insb
mov
jp
xchg
sbb
sbbl
scas
cmpsl
jb
cmp
repz
push
cwtl
mov
fiaddl
movsl
dec
je
movsl
mov
push
loope
or
mov
iret
ret
mov
add
std
mov
dec
inc
cmp
aam
lahf
sbbl
in
lret
mov
cmp
cmc
fmull
adc
lret
pop
ljmp
mov
iret
arpl
fucomip
inc
fnstsw
adc
stos
push
dec
std
push
add
xor
add
lcall
push
mov
test
imul
mov
mov
jbe
mov
popf
in
test
sub
inc
movups
cli
das
mov
negb
sbbl
lahf
jge
movsl
jge
bound
arpl
pop
imul
sub
mov
daa
xor
xchg
xchg
mov
mov
int
sarl
dec
cmp
fwait
movsb
dec
movd
stos
xor
fcmovne
cli
push
je
in
and
adc
je
push
cltd
test
lea
mov
xchg
push
add
sub
lock
in
mov
js
push
scas
out
xchg
in
daa
mov
xor
inc
pop
in
cld
mov
bnd
nop
sbb
adc
add
xor
sahf
pop
or
loopne
xor
andl
adc
inc
int3
arpl
test
leave
dec
xlat
out
stos
fnsave
rcr
push
popf
sub
repnz
loope
xchg
mov
je
push
and
or
push
ds
sub
in
or
test
jns
inc
ret
in
sbb
lret
in
cmp
loop
cmpsb
mov
int3
out
xor
addr16
movsl
push
push
in
jbe
fs
dec
roll
adc
je
push
icebp
scas
adc
addr16
sarb
xchg
test
xchg
fldcw
pop
push
jnp
daa
sub
jns
inc
ds
les
lcall
ret
pop
nop
cmc
pop
scas
aas
xor
jb
clc
dec
test
push
jne
jne
cmpsb
test
ds
stc
stos
or
lods
xchg
adc
push
xchg
sarl
fwait
cmpsl
out
outsb
or
sbb
sbb
cmpl
adcl
jbe
test
lock
divl
popa
fxch
jp
jp
and
lret
lcall
push
cwtl
aam
loop
js
imul
pop
inc
fwait
clc
sahf
lcall
add
fnsave
sbb
divb
sub
mov
sub
repz
mov
xchg
call
loop
fisttpll
sbb
lods
push
mov
or
fidivs
dec
cmc
pop
sbb
je
es
inc
lcall
and
addr16
fidivs
fs
xor
and
add
ss
jecxz
fs
insb
adc
lods
inc
xor
xchg
push
dec
inc
and
mov
cmpsl
mov
push
jmp
out
lea
pushf
push
or
aas
mov
icebp
add
mov
xlat
test
xlat
mov
sub
and
data16
xor
std
leave
leave
scas
int
dec
jp
and
hlt
fwait
aad
ljmp
stos
mov
mov
ljmp
stos
aad
out
sbb
sti
or
mov
in
jecxz
adcl
out
js
out
inc
cltd
stos
push
mov
out
aas
mov
xchg
out
pop
imul
aas
push
daa
in
or
push
add
ret
lea
insb
xchg
mov
inc
or
push
push
sti
xchg
inc
mov
cmp
dec
mov
les
mov
mov
mov
xchg
push
ss
addb
xchg
sub
fdivp
inc
imul
lret
fidivl
repnz
sub
jg
mov
jg
rcrl
dec
xlat
inc
pop
cltd
cli
iret
in
adc
fistpll
in
jp
jbe
or
fnstenv
in
sub
xor
adc
mov
bound
and
cs
imul
xchg
mov
pop
dec
inc
pop
and
xchg
cwtl
or
cmp
movsl
mov
fimuls
push
stc
mov
dec
cmp
notb
push
shr
fiaddl
sub
int3
and
in
push
push
imul
repz
adc
jo
or
ja
and
enter
cmp
cmc
pop
mov
jns
pop
pop
cmpsl
ret
add
push
js
lahf
int3
sub
test
inc
fldt
loop
mov
or
ljmp
xor
mov
dec
lds
push
lock
outsl
inc
dec
int3
push
cld
xchg
inc
sub
pop
fmul
mull
sub
fldl
lods
xchg
xor
push
orl
std
xor
test
push
out
rcrb
bound
lods
push
inc
pop
pop
and
mov
int3
pop
mov
sahf
jae
adc
jb
jbe
mov
stos
push
pop
sahf
cli
jne
clc
test
scas
adc
sbb
pop
dec
mov
pop
repnz
pop
je
mov
xor
and
ds
loopne
push
xchg
sbb
jae
testl
in
sahf
faddl
call
das
mov
push
xchg
out
or
call
iret
push
push
test
add
push
jle
jl
pop
adc
add
cmp
or
mov
push
push
mov
into
fidivrs
mov
bound
addr16
push
iret
mov
arpl
jo
push
jmp
xchg
pop
gs
fildl
xchg
popf
int
cwtl
ss
cmpsb
nop
cmp
loopne
jp
jno
pop
inc
mov
popa
add
nop
ret
enter
mov
out
ret
ret
mov
lds
lea
stos
iret
insb
adc
inc
insl
repz
dec
push
call
scas
sahf
out
sar
rdmsr
lret
repnz
push
push
xchg
push
xchg
in
xchg
adc
inc
adc
mov
test
dec
cmp
fistpll
shrb
loope
iret
jns
ja
cs
jecxz
push
mov
or
pop
leave
andb
out
aas
loope
enter
jmp
mov
popa
xlat
dec
jo
cmpsb
out
repz
int3
mov
cli
ja
pushf
dec
pop
mov
mov
xchg
imul
jno
insl
xchg
xor
outsl
sbb
add
sbb
xchg
clc
pushf
xchg
in
pop
repz
scas
stos
mov
repz
dec
fsubrl
std
cli
xchg
xor
jbe
jae
sbb
outsl
ljmp
lret
mov
hlt
mov
pushf
cs
aam
outsl
daa
jne
pushf
or
pushf
cs
outsl
push
mov
pop
lea
dec
cmp
dec
xchg
adc
addl
sub
les
add
add
cmp
sahf
mov
push
or
pop
scas
xchg
push
add
jnp
pusha
jp
push
cmp
push
or
lret
xchg
add
aam
and
adc
xchg
jns
mov
outsl
daa
ljmp
xchg
cltd
in
or
leave
pop
jae
or
ja
pushf
mov
push
lahf
jb
enter
jmp
mov
int3
jle
mov
cwtl
shlb
mov
push
sub
cmpl
lds
pop
arpl
rclb
jmp
popf
jb
imulb
mov
test
pop
idivb
pop
loopne
sub
ss
movsl
out
nop
in
pop
cmp
fdivs
out
mov
ljmp
outsb
inc
loop
std
nop
push
inc
arpl
negl
lods
sub
repnz
xor
sub
lahf
repz
fwait
mov
inc
shll
mov
sbb
call
mov
incb
in
mov
ficoms
or
xchg
xor
cs
xor
movsb
cmp
loope
push
adc
pop
ja
cmc
outsb
std
in
out
pop
decl
pop
mov
dec
dec
ss
enter
ja
gs
outsl
or
xchg
push
movsb
mov
sub
mov
movsb
pop
call
orb
jo
fnstcw
aad
add
or
mov
incb
imul
ds
loop
arpl
bound
movsb
sub
shrl
daa
mov
add
add
pop
mov
fs
scas
lahf
cmp
int
imul
cmpb
push
inc
jae
jge
ret
imull
iret
jb
bound
mov
mov
nop
mov
aam
scas
ret
mov
test
and
cwtl
xor
shrb
dec
loopne
out
outsb
rorb
push
adc
rolb
pop
push
xorl
inc
pop
shll
add
mov
mov
dec
xor
stos
push
sbb
insl
jg
movsl
movsb
push
pop
mov
ds
fldcw
dec
ret
pop
div
fldl
mov
and
dec
adc
inc
mov
mov
cli
jne
inc
lods
pop
lcall
cmp
adc
pop
cmp
mov
cmp
ljmp
cwtl
xchg
es
adc
and
outsl
xchg
mov
cltd
add
sub
rcl
repnz
out
stos
mov
leave
pusha
push
push
rclb
xor
int3
andl
or
scas
clc
into
gs
popa
jg
push
and
xor
cwtl
pop
cmc
or
dec
sbb
aad
loopne
rcl
mov
xchg
sub
jne
js
frstor
adc
js
mov
lds
cld
dec
hlt
pop
hlt
out
lock
xor
cltd
xor
jno
imul
ret
rol
mov
mov
jb
cmp
aaa
push
out
int3
arpl
ret
mov
lcall
lock
jecxz
jl
mov
jb
mov
insb
mov
mov
push
out
push
mov
cmova
jle
cmp
adc
roll
cmp
jne
test
dec
scas
adc
sbb
or
lods
jnp
testb
shr
jg
in
add
dec
ss
movsl
fimull
leave
jno
aad
pop
int3
arpl
mov
cmpl
sbbb
aas
jbe
scas
mov
jg
jnp
movsb
and
mov
push
add
jb
cmp
andb
cmp
shlb
push
cmp
fsts
sti
movsb
bound
subb
out
xor
test
inc
dec
mov
cld
cmp
test
nop
idivl
outsb
std
sahf
cmp
sbb
xchg
call
mov
movsl
icebp
adc
jae
adc
lds
or
pop
push
mov
cmp
dec
rcrl
fistps
pop
pop
mov
out
pop
cwtl
adc
inc
add
and
mov
pop
aas
pop
adc
stc
push
and
cmp
lcall
aaa
mov
xchg
cmp
cmp
popf
loopne
stos
es
cmpl
lock
push
xchg
jl
xchg
inc
pop
movsb
jmp
push
outsb
mov
lcall
mov
cmpsb
clc
mov
in
andb
pusha
cwtl
insb
xchg
jmp
jno
cmp
fs
push
or
rcl
xor
push
pop
dec
es
inc
mov
lods
loopne
mov
test
mov
push
sarl
push
mov
cmp
mov
or
fstp
sbb
inc
mov
shll
push
jle
ss
mov
and
mov
push
jae
mov
lcall
adc
push
push
sub
xchg
lods
inc
push
xor
imul
push
lods
gs
out
add
xor
xchg
cmc
pop
mov
mov
or
outsb
hlt
pop
test
push
js
jno
adcl
mov
lret
dec
mov
jae
lcall
out
sub
sbb
push
or
push
test
mov
jecxz
dec
and
mov
cmp
pushf
pop
add
sbb
mov
mov
cmpsl
stc
or
sarl
lock
out
push
notl
add
pop
lahf
mov
xor
jmp
loopne
pusha
push
in
int3
mov
cmp
mov
and
sbb
mov
mov
sub
jecxz
jns
pop
imul
sbb
push
test
aas
jle
ret
inc
push
jmp
or
fidivl
dec
repnz
test
xchg
add
sahf
subl
mov
gs
mov
pop
leave
cmp
mov
sbb
jle
ret
repz
jl
ds
setge
loopne
push
sbb
into
mov
testl
lods
enter
insb
out
cmpsl
and
inc
popf
andl
lret
std
adc
fisttpl
aaa
insb
xchg
vpermq
fwait
xlat
gs
pop
mov
cwtl
jmp
aaa
mov
and
xor
shll
or
inc
and
add
lea
push
lea
es
adc
cmp
sbb
data16
sub
cmp
gs
xor
or
aad
cmpb
int
sub
pop
pop
xchg
mov
rolb
fdivrs
imul
mov
inc
adc
mov
fmuls
pusha
idivl
bound
aad
xor
sti
pop
pop
sub
insb
push
lahf
fucomp
test
mov
mov
aad
adc
push
dec
mov
cmpl
inc
roll
outsb
sbb
or
repz
pop
lcall
cs
stos
pop
inc
clc
cmpsl
mov
test
lods
insl
mov
fsubl
mov
sub
fisubrs
insl
lds
lds
and
pop
xchg
aad
sahf
test
mov
test
push
outsl
mov
sbbl
jae
cmp
into
mov
push
stos
adc
stos
inc
push
sbb
mov
pop
push
add
lea
popf
fidivs
andb
add
jbe
movb
mov
and
add
adc
push
addl
inc
fsubrs
push
push
xchg
sbb
enter
test
dec
jecxz
cld
cmc
out
push
cmp
iret
std
adc
push
and
xor
rcr
mov
cmc
mov
jbe
mov
dec
adc
pop
jo
inc
inc
dec
inc
loope
out
iret
dec
loopne
cld
mov
or
cmp
cmp
mov
pop
sub
jnp
pop
dec
lahf
mov
mov
outsb
add
xor
pop
dec
xchg
cmpsb
popf
mov
sbb
ljmp
cmp
dec
std
in
jp
jno
popf
dec
inc
push
jbe
pop
fistl
cmp
mov
pop
ds
repz
sub
or
mov
add
lods
cmp
cmpsl
or
loop
adc
xor
dec
mov
sti
mov
aad
pop
push
into
xorl
popa
xor
bound
insb
add
or
mov
push
loop
dec
pop
inc
popf
mov
mov
fwait
outsb
mov
inc
mov
xor
hlt
mov
xchg
xchg
sbb
inc
rcll
out
insl
addr16
je
mov
scas
leave
fnstsw
sbb
ficompl
sbb
sbb
out
mov
dec
lahf
xchg
loop
scas
aam
and
cmc
mov
mov
rolb
ja
adcl
ret
insb
or
xchg
push
cs
sahf
mov
xorl
bound
push
dec
filds
adc
mov
cmp
push
ds
subl
test
mov
mov
dec
inc
xlat
jge
repnz
insb
inc
clc
dec
mov
imul
push
lret
mov
test
enter
loope
es
scas
inc
fmuls
lcall
jecxz
push
test
add
lret
decb
aad
sbb
mov
jne
inc
lods
repnz
push
lock
mov
jno
jp
xlat
adc
xor
loop
xor
mov
stos
jne
or
sbb
mov
mov
add
psubq
mov
sbb
cli
or
scas
rcrb
loope
mov
scas
outsl
arpl
push
aad
xor
and
pop
imul
cmp
test
dec
pop
lock
xchg
insl
fmull
hlt
pop
les
mov
inc
mov
inc
lods
inc
mov
mov
data16
icebp
gs
pop
inc
xor
loopne
add
mov
xchg
xorl
push
outsl
cli
ds
test
xchg
or
xchg
pop
fstpt
or
adc
jns
shr
fbstp
pop
mov
add
mov
fcomi
mov
cld
clc
sahf
sub
enter
test
fucom
xchg
sub
in
pop
icebp
icebp
orl
xchg
stos
hlt
xchg
sbb
in
mov
cli
sub
push
fildll
pop
fnsave
pop
adc
aad
adc
push
inc
testl
loopne
test
in
or
loop
xchg
sub
stos
cmp
xchg
sub
inc
leave
fwait
pushf
sbb
xchg
fdivl
test
cmp
dec
add
mov
sub
adc
test
lea
mov
les
sbb
inc
fcmovnb
xlat
xchg
push
fstps
stos
cmp
mov
cltd
das
mov
jmp
lods
xor
add
arpl
mov
add
cmp
and
shlb
push
mov
inc
inc
repnz
js
cli
push
aad
push
jne
notb
shll
mov
scas
ret
jle
ss
ror
es
loop
mov
data16
xlat
aam
cli
and
les
or
and
pop
jb
mov
cmp
sahf
push
inc
mov
jmp
addl
jno,pt
je
xor
sbb
adc
shrb
shrb
fdivrs
or
xor
mov
sbb
mov
lds
pushf
lds
sahf
lods
add
jnp
mov
add
lahf
jle
ret
dec
cmp
dec
inc
in
std
and
shlb
dec
popa
push
cltd
push
mov
xor
xchg
cmp
lret
sti
into
call
fwait
sarl
aam
call
arpl
leave
pop
bound
mov
sti
adc
fidivrl
inc
or
pusha
push
and
pop
sbb
out
insb
mov
je
js
xor
xor
mov
mov
xor
mov
lods
mov
inc
rorl
gs
pop
jne
out
jne
iret
add
mov
add
and
fwait
aaa
fistps
dec
pop
and
test
jl
cmpb
shl
pop
add
loope
sbb
xchg
stos
push
xchg
stc
xchg
dec
mov
decl
cmp
mov
jno
xor
dec
xor
xor
add
loop
push
aad
loopne
or
add
idivb
lret
pop
in
dec
out
shrb
loope
orb
dec
sub
lds
or
fidivl
mov
dec
mov
imul
or
mov
idivl
xchg
imul
pop
movsl
outsl
mov
mov
rcrb
adc
xor
dec
test
test
incb
xchg
into
jb
xchg
sub
insl
mov
cmp
sti
bound
out
test
stos
imul
cmp
mov
fisubrs
mov
stos
movsb
lods
inc
pop
cs
xlat
jnp
out
dec
imul
dec
push
pop
movsb
push
sub
dec
lahf
mov
jns
dec
cmc
mov
int3
pop
rcll
fnsave
jmp
loope
push
xchg
fistl
dec
inc
fnstcw
pop
pop
mov
es
imul
xorb
int
mov
fs
rorb
sbb
inc
lret
sub
mov
dec
pop
mov
pop
pop
insl
into
test
and
sbb
mov
jbe
stos
add
fld
sbb
cli
jns
pop
dec
adc
shl
xor
divl
loope
or
or
mov
loopne
inc
mov
pushf
test
call
sbb
daa
aaa
or
xor
sub
sbb
inc
push
mov
push
dec
and
push
loope
iret
cmp
fidivs
pop
jg
outsl
loop
pop
and
rcrl
jnp
fidivl
mov
subl
lret
jb
orb
push
aam
jno
push
push
pop
addr16
call
mov
andl
sub
mov
dec
push
aad
les
jns
mov
adcl
sahf
lods
or
int
pop
dec
outsl
je
test
pusha
adc
sbb
mov
sub
std
cld
mov
ds
popa
cmp
mov
pop
cltd
push
lret
ja
not
adc
push
xlat
insl
mov
cmpsb
or
mov
and
mov
cmp
mov
cs
ljmp
bound
or
pop
mov
leave
mov
cli
sbb
out
dec
sbbl
inc
cmp
inc
div
imull
ss
rcrb
dec
add
lea
mov
xorb
mov
sbb
or
and
fsub
mov
pop
lock
dec
std
das
das
addr16
stos
pminub
cwtl
test
mov
addr16
jnp,pt
in
lcall
ja
faddl
ret
mov
ret
cmp
adc
sbb
xchg
dec
loope
imul
fistps
mov
sub
pop
pusha
fisubrl
inc
pop
mov
iret
mov
pop
int
mov
movsl
js
xor
adc
add
adc
inc
xor
add
sub
mov
add
jp
fldenv
cltd
pusha
sub
pop
es
into
cmp
popa
push
gs
mov
sub
sbb
push
and
imul
jb
jnp
adc
push
xchg
mov
loope
aas
sti
jle
xor
xchg
push
dec
dec
xchg
add
sbb
fidivl
xchg
sub
scas
push
mov
cmpsb
lock
dec
ds
pop
mov
sbb
jle
loop
shl
out
jle
int3
pop
fidivrs
mov
mov
xchg
mov
dec
cld
xchg
test
es
mov
adc
add
mov
loopne
scas
lcall
das
scas
outsl
addr16
test
bnd
std
mov
aad
jnp
test
or
cmp
loope
pop
jmp
sbb
jb
cmp
iret
call
xor
ss
subb
xchg
ficompl
shlb
loop
xor
xor
mov
hlt
pop
das
sbb
in
mov
cmp
adc
inc
ret
dec
adc
ds
inc
clc
mov
cmpl
xlat
xchg
mov
cmp
pop
add
add
jo
cmp
imul
stos
std
mov
lods
aad
inc
clc
dec
jg
arpl
cmpsl
sahf
jne
nop
lods
mov
fcmovne
xchg
ret
fcmovnu
pop
inc
push
nop
mov
pop
ja
jmp
cs
add
data16
std
sti
push
imul
jnp
nop
pop
icebp
ja
lods
adc
push
js
push
lahf
or
cmp
mov
mov
sarl
lret
in
adc
repz
sub
add
aaa
lcall
adc
push
inc
cmc
mov
faddl
test
jne
cwtl
and
push
pop
xor
arpl
jo
mov
or
xchg
add
or
imul
push
jb
sbb
cmp
bswap
sub
pop
scas
gs
or
or
adc
movsb
mov
push
jnp
in
cld
sar
push
enter
adc
push
sbb
lret
cmpsl
insb
jg
nop
daa
jnp
fs
mov
lret
add
cmpsl
adc
pop
fidivl
and
rcrl
shrb
aad
js
xchg
adc
adc
xchg
sbb
pop
cmp
cmp
cmc
pop
adc
fidivl
inc
int
rol
out
cwtl
pop
test
cltd
ret
mov
mov
mov
mov
fwait
jb
mov
pop
test
stc
sarl
jo
sbb
lds
lahf
ret
jns
push
jmp
vpshufhw
call
popf
scas
fmuls
testb
mov
xchg
cltd
test
push
cs
ret
push
pop
rcll
mov
cmp
js
popa
mov
lret
lock
outsl
adc
out
mov
cmpsl
cmp
stc
call
ja
clc
aaa
xor
xchg
aas
push
movsl
push
and
push
inc
sub
sbb
add
loopne
add
jecxz
add
cld
mov
shrb
or
test
lea
std
es
cli
leave
adc
test
test
jbe
sub
outsl
mov
mov
jno
push
add
cmp
test
in
das
pop
adc
mov
cmp
repz
adc
jecxz
push
cmp
inc
push
ret
dec
sub
mov
mov
cmp
lcall
lea
mov
mov
leave
sub
cmpsl
popf
or
xchg
jmp
pop
aaa
gs
xchg
inc
mov
shll
and
inc
aad
orl
in
enter
pop
mov
clc
fistl
jnp
ja
cld
push
fidivrs
fidivrl
sub
pop
pop
sbb
jns
fiadds
mov
les
popf
push
iret
enter
push
push
cmp
sub
and
mov
jg,pn
mov
imul
and
shlb
out
rolb
mov
push
out
cmp
and
repnz
fistl
int
inc
jns
cmp
das
cld
push
jo
fdivp
insb
sbb
popf
leave
test
aaa
adc
jo
jb
inc
fs
insl
adc
xchg
xchg
fistl
inc
inc
jp
in
fstp
fwait
push
lret
ja
sbb
outsl
leave
pusha
mov
inc
out
ja
int3
jg
sbb
idivb
xchg
insb
nop
sbb
jle
bound
cmc
je
in
ret
incb
xor
mov
movsb
call
enter
cmp
lds
xchg
push
xchg
jecxz
sub
leave
cmp
pop
push
out
pop
stos
stos
push
gs
test
dec
push
int
and
hlt
or
out
ret
add
aas
and
outsb
clc
inc
pop
fucomip
vpunpckhbw
cwtl
je
in
adc
les
inc
xchg
and
jno
scas
and
mov
int
xchg
lods
xchg
jns
pusha
or
lock
add
jecxz
sub
sub
fs
sbb
push
pop
rep
mov
xchg
add
or
icebp
aam
addb
adc
jp
test
test
jnp
sbb
js
cmp
pop
js
fimuls
out
mov
int3
xchg
test
add
fadd
divl
out
cmpsb
fmul
into
push
push
icebp
mov
mov
test
xchg
cs
jbe
cmp
mov
mov
or
pop
outsb
fidivs
jb
adc
xor
mov
cmc
mov
inc
pop
inc
xchg
hlt
mov
outsb
and
imul
imul
shl
push
addr16
fstl
push
loop
sub
pop
fsubr
lods
adc
pop
cmpsb
mov
gs
mov
jo
rcrl
add
popf
cli
call
test
adc
jo
add
mov
mov
pop
sbbl
add
sbb
mov
enter
das
push
and
std
xchg
sub
sbb
jecxz
sbb
pop
sbb
loop
mov
cmpsb
mov
pop
mov
lods
add
push
flds
xor
arpl
dec
stos
enter
sbb
out
ret
shll
fnstsw
int3
int3
enter
cmp
sbb
and
jb
outsl
shl
adc
cmpsb
dec
dec
ret
popa
xchg
xchg
out
ds
jae
push
scas
lods
int
mov
jle
jmp
sarl
mov
push
out
mov
and
nop
mov
push
lret
mov
ficompl
mov
rorl
mov
fnsave
push
pop
imul
pop
bound
test
fisttpl
add
add
push
popa
loop
mov
adcb
repz
xor
push
jecxz
mov
movsb
addr16
les
rcl
mov
inc
and
push
sub
stc
add
fadd
insl
add
js
push
js
mov
repz
insl
adc
jle
jmp
sbb
lock
xor
sbb
addb
inc
mov
mov
dec
dec
mov
jge
daa
cmp
call
mov
or
adc
ss
xchg
ss
pop
dec
fisttps
into
data16
push
cmc
jp
dec
leave
int
sbbb
sbb
mov
push
adc
mov
add
xchg
sub
pop
xor
add
or
js
dec
repz
in
fidivs
test
ja
out
cmpsl
imul
sbb
add
and
js
pushf
rclb
mov
add
mov
push
inc
push
xchg
cwtl
inc
jecxz
repnz
data16
inc
pop
cmpsb
nop
pop
cld
mov
xchg
sub
and
cmpsb
pop
dec
sbb
and
push
jecxz
xor
and
aaa
ss
repnz
inc
js
repnz
rcll
push
jl
push
xor
xchg
sbb
xor
stc
and
push
mov
ds
fidivl
dec
stos
mov
add
aaa
into
out
sbb
cli
adc
cltd
push
and
out
mov
mov
js
jae
cmp
sbbb
add
pop
jne
je
cld
loop
in
lds
push
jmp
xchg
popa
mov
sbb
lcall
pop
pop
lea
xorb
xlat
push
mov
pop
cmc
lock
mov
lahf
test
xor
daa
es
inc
jp
iret
outsl
mov
sti
flds
dec
xchg
loop
add
jmp
les
bound
scas
inc
aaa
test
cli
xchg
fsubrs
or
mov
xor
js
push
sub
sub
es
add
jno
scas
pop
and
sti
loop
sub
cmp
and
fbstp
push
fiaddl
in
jecxz
pop
push
lret
lret
aas
jl
lock
mov
add
cmp
jg
test
int3
fs
or
cs
jmp
xchg
in
ret
sub
insl
lret
addr16
or
fwait
ss
push
popf
imul
xchg
cs
popf
xor
negl
cmp
pop
lods
inc
nop
jnp
mov
cmp
je
in
dec
push
stos
pop
sahf
repnz
stos
push
cli
in
jg
or
leave
stos
aaa
subl
mov
sub
int
ret
pop
outsb
ljmp
sbb
pop
ret
cmp
das
jo
aad
push
fstpl
cmc
in
inc
mov
cmp
in
sub
mov
or
add
imull
js
call
push
add
ss
mov
shrb
xor
mov
inc
push
add
xor
mov
inc
push
fsubrs
mov
mov
aas
ljmp
negb
add
arpl
insb
sub
xlat
ljmp
fmul
xor
dec
cmp
sbb
jns
dec
outsl
push
inc
push
and
or
jle
add
imul
dec
dec
loopne
sarl
pop
out
fnstenv
or
push
cltd
sti
ret
out
jo
adc
lods
andl
lds
mov
shll
mov
bound
mov
adc
jecxz
arpl
mov
xor
and
and
mov
mov
xlat
stos
adc
nop
xor
pop
fidivrs
out
test
pop
test
aas
dec
inc
or
mov
xchg
mov
es
xchg
adc
mov
jle
call
jl
into
sti
bound
ffree
xchg
jno
call
sbb
sub
jbe
cmpsl
dec
je
dec
mov
leave
fildl
testl
mov
cmp
sti
mov
cmpsl
add
inc
or
and
pop
cmpsl
xchg
xchg
cmpsb
ss
loop
mov
in
gs
sbb
mov
pop
jb
cwtl
add
mov
cmp
dec
or
mov
mov
into
leave
out
es
js
stc
test
sub
push
mov
lds
push
jmp
loop
push
lcall
or
add
sahf
hlt
cmp
loop
ja
and
pop
add
pop
sub
xlat
es
add
or
mull
ds
mov
xchg
out
cmp
adc
imul
cmp
push
notb
sahf
jno
cmp
xor
adc
pop
stos
mov
mov
xchg
imul
xchg
mov
and
mov
jb
clc
push
popf
fnsave
aaa
popf
or
cld
mov
je
je
lods
mov
fidivl
xlat
add
and
pop
into
adc
mov
arpl
adc
mov
sbb
call
mov
jg
jmp
mov
inc
adc
aas
xchg
int
jnp
out
inc
dec
sbb
xchg
aad
fiadds
adc
push
shl
insb
daa
test
jno
vmwrite
jno
ret
daa
hlt
nop
xchg
cwtl
insl
pop
sub
cmpsb
arpl
inc
ret
mov
mov
jo
sub
mov
jg
adc
test
shrl
sub
push
aam
mov
ja
pop
jmp
test
je
out
out
adc
test
call
cmp
mov
popa
push
xor
push
mov
jmp
popa
in
rsqrtps
out
sahf
jno
in
cmpsl
dec
inc
ret
mov
shrb
lea
mov
js
shrl
lea
rcll
lods
inc
cmpsb
or
adc
jl
sbb
xchg
and
add
psadbw
inc
faddl
int
adc
les
ds
cmp
mulb
call
push
cmp
add
xor
jp
mov
shrb
adc
cmp
popa
insb
adc
out
dec
icebp
push
or
xchg
shrb
mov
or
xor
pop
cmp
mov
inc
lea
jmp
scas
xchg
out
and
loope
data16
sub
inc
push
xchg
inc
or
in
lret
xchg
jge
out
jp
sub
jg
js,pn
popa
gs
les
xchg
std
push
mov
mov
insl
out
imul
movsl
inc
pop
fmull
or
in
loop
in
lret
das
lock
mov
out
adc
imul
les
xor
xchg
lea
pop
xor
or
mov
sub
xchg
jno
es
das
push
iret
pusha
idiv
xor
loop
jg
inc
add
lcall
lcall
movsb
mov
mov
pop
pop
outsl
test
sub
add
pop
mov
lods
sbb
dec
dec
int
jb
cmp
cmp
xchg
icebp
rorb
dec
sbb
dec
int
sar
jecxz
cbtw
mov
cltd
xor
orb
pop
pop
mov
repz
pushf
xchg
push
fidivs
mov
dec
cmp
mov
fldenv
addr16
xchg
lcall
inc
xchg
scas
mov
xor
pop
cld
mov
mov
fxch
sub
fbld
ret
pop
bound
fbld
rcl
imul
and
mov
cltd
imul
aad
pop
sbb
movsl
xchg
test
xlat
push
push
cmpsl
mov
pop
dec
jno
cmp
loopne
dec
repnz
arpl
aad
jmp
mov
sub
cs
or
shrb
pop
cmp
add
mov
sbb
mov
cld
imul
xlat
dec
pusha
pop
xor
mov
cmc
adcl
pop
gs
sub
in
cltd
outsl
jnp
cwtl
pop
in
add
test
nop
push
pop
pop
stos
xor
mov
sar
clc
outsl
and
andl
sbb
bound
in
mov
popf
fcompl
add
add
dec
push
jae
or
jmp
inc
loopne
jge
lcall
outsb
scas
pop
push
lods
mov
sbb
xchg
xor
enter
sub
shld
loope
ljmp
pop
lock
data16
aam
fsubrp
mov
pop
mov
sub
fwait
adc
aad
sahf
jnp
and
mov
lcall
stos
pop
push
add
test
gs
add
pop
dec
jb
call
sahf
pop
or
test
mov
mov
addr16
push
sub
jae
xchg
and
je
sarl
mov
mov
xchg
lods
inc
mov
pop
gs
add
cli
inc
xchg
jl
ret
sub
cmpsb
mov
and
and
das
rorl
xorb
daa
test
pop
adc
lret
bound
lahf
mov
add
imull
mov
and
add
cli
adc
pop
arpl
or
pushf
enter
or
fs
adc
and
pop
add
dec
insl
aaa
in
cmp
ret
add
iret
add
outsl
repnz
mov
or
jl
add
bound
repz
add
shrb
mov
in
scas
andl
je
adc
leave
repnz
add
pop
mov
xor
sti
or
dec
mov
pop
dec
enter
imul
mov
insl
mul
notl
mov
mov
sub
sbb
push
sbb
mov
sub
xchg
scas
push
push
int
xor
xchg
inc
lods
stos
or
cmp
cs
ficoml
mov
jae
loop
int
repz
out
test
data16
xor
lahf
push
mov
cli
fs
xchg
adc
shrb
jb
lods
mov
cwtl
jns
inc
icebp
adc
imul
cmp
or
cmp
int
jbe
scas
cmp
iret
pop
jecxz
jle
or
xchg
scas
push
lods
add
sahf
jecxz
mov
jl
test
in
ficompl
rcr
out
jns
add
push
jae
mov
ljmp
mov
jnp
leave
fld
inc
fdivl
cmp
ret
out
inc
lcall
cltd
mov
push
andl
cs
enter
or
jmp
mov
loopne
imul
lcall
inc
push
adc
cltd
sbb
ret
data16
lods
inc
aam
and
mov
cwtl
scas
and
ja
inc
insb
test
fdiv
mov
xor
jb
fldt
mov
popa
cmc
dec
jo
push
jmp
cmpsb
lds
mov
int3
and
add
hlt
pop
imul
js
pop
sti
xor
negl
and
out
iret
iret
stos
jbe
insb
fsubr
and
les
inc
jbe
xor
sbb
mov
les
inc
call
or
mov
sbb
rcrl
into
sbb
stc
fs
loopne
push
adc
in
in
mov
jge
pop
in
int
add
xchg
cmpsl
ds
jg
cmp
loop
pop
mov
shl
nop
jbe
test
mov
mov
jg
daa
cmp
and
dec
and
mov
aaa
mov
xchg
add
adc
cmc
mov
and
iret
orb
jne
lret
pop
lds
xchg
cs
das
dec
daa
dec
pop
push
in
repnz
out
mov
xchg
jmp
enter
fisttpll
insl
add
fildll
fcompl
mov
sub
xchg
pop
or
popa
mov
sbb
lret
dec
rcll
lock
pop
mov
cmp
fs
inc
rcll
in
gs
fldl2t
js
sub
push
inc
xor
push
mov
js
sahf
add
or
fbstp
push
sbb
flds
mov
fistl
push
cmpsl
popa
cs
push
cmpsl
bound
jle
rcrl
lea
sub
or
xlat
out
mov
dec
lcall
push
xchg
sub
bound
and
into
mov
dec
loope
adc
push
loope
sub
sarl
adc
imul
lcall
add
das
mov
xchg
call
add
sub
loop
add
push
or
stc
xchg
xorl
add
dec
xchg
mov
inc
fcoml
aaa
outsb
aad
mov
fcomp
out
push
or
mov
adc
mov
cmp
sub
loopne
push
jmp
add
sbbl
jle
sbb
idivb
add
jge
shrb
popf
out
jle
hlt
dec
shll
in
movsl
negl
scas
sbb
movsb
sbb
sub
jb
fwait
ret
mov
jns
xor
cli
es
lods
mov
lods
divb
cs
xchg
push
and
out
mov
inc
or
ss
out
and
mov
imul
lea
cmp
push
insl
test
rcll
test
or
ret
sub
jp
mull
repnz
fsubrp
sbb
inc
fisttps
fsubr
into
and
aam
out
jno
and
sbb
orl
cmp
sub
jnp
add
cmc
lret
inc
sbb
xchg
sub
roll
dec
add
xor
mov
jae
loopne
cmp
jecxz
shrl
add
push
movsb
push
movsb
xchg
aas
sbb
iret
pop
sbb
add
das
and
out
in
lahf
popa
ss
xor
in
dec
rolb
in
push
push
aaa
out
das
ret
xor
mov
arpl
shll
mov
push
out
movsl
and
push
adc
xlat
push
lods
xchg
mov
push
dec
jecxz
cmpsb
pop
stos
pop
dec
push
jl
sbb
movsb
lds
rorl
rcll
cmpsl
lahf
push
call
cs
push
add
pop
ljmp
imulb
fmul
fsubrl
aas
or
insb
and
out
xor
pop
cwtl
mov
pop
sub
fists
test
mov
or
test
andl
or
shlb
or
rcl
cwtl
sbb
jecxz
mov
and
insl
adc
adc
or
sbb
int3
fadd
daa
sarl
jo
push
xchg
add
cmp
or
xlat
push
pop
sub
inc
sbb
adc
int
or
fidivrl
mov
xor
fwait
add
xor
push
scas
xchg
dec
nop
mov
fs
push
stos
mov
or
lcall
rclb
test
arpl
cmpsb
inc
mov
xor
xor
rorl
icebp
imul
pop
cmp
call
sub
out
scas
mov
les
sbb
out
adc
sahf
aam
or
cmpsl
inc
pusha
imul
mov
sbb
cmpsl
ret
rorl
push
int
push
daa
mov
add
sub
cmp
fsubr
pop
adc
jns
jl
lcall
fldcw
dec
jge
imul
pop
ja
xor
cwtl
ja
fnstcw
pop
xor
sub
rorb
repnz
pop
adc
or
jecxz
stos
mov
xchg
inc
or
inc
sbb
cmc
imul
pushf
pop
das
dec
and
and
out
stc
loop
and
repnz
add
sub
nop
mov
adc
imul
mov
shrb
out
loope
popa
sbb
scas
push
push
xchg
or
fwait
paddb
sbb
mov
popf
out
ljmp
pop
jl
inc
movsl
lock
loop
cmc
mov
out
cmp
mov
cmp
xor
in
cmpsb
rorl
jle
sahf
lods
sub
cmp
sti
aaa
mov
pop
repnz
cmc
adc
add
sahf
xor
fldenv
lahf
popf
mov
popf
xlat
decb
mov
fdivl
mov
dec
xchg
fiadds
cmp
add
push
jl
xchg
or
push
sub
lahf
mov
scas
stos
ja
or
int3
mov
test
inc
dec
add
mov
in
test
movsl
mov
push
popa
adc
mov
cld
sub
sub
sbb
push
jnp
test
imul
orb
pop
sub
jmp
pop
jg
inc
sub
pop
cmp
shrl
pusha
pop
loop
out
or
fidivl
cs
xchg
leave
and
cli
push
ljmp
je
pop
xor
mov
arpl
aam
dec
nop
ljmp
fstpl
push
xor
adc
out
xor
adc
cmp
sbb
mov
pushf
xor
outsb
adc
add
dec
lret
stos
and
push
in
inc
pop
jbe
mov
stos
mov
xchg
push
vzeroupper
xchg
out
mov
xchg
ljmp
test
mov
push
push
and
jg
jge
cmp
xchg
fdivl
add
sbb
addr16
sbb
adc
pxor
cmpsl
out
inc
ffreep
enter
jl
fldenv
cmpsl
jae
flds
mov
into
jl
bound
lds
pusha
into
pop
lods
insb
les
add
fstps
adc
sub
mov
scas
subps
mov
data16
inc
movl
mov
cmp
push
push
xor
popf
insl
add
inc
repz
pop
mov
dec
push
pop
loop
in
mov
iret
xor
ror
fs
aaa
cwtl
das
imul
js
movsb
push
je
xlat
xchg
push
inc
arpl
fisubl
repnz
cli
ds
fbld
test
xor
sahf
enter
inc
je
xlat
outsb
cld
in
nop
lahf
sbb
xchg
push
sub
cmp
icebp
sub
cmpsb
lret
les
adc
xor
pop
lods
out
adc
sbb
cmp
jbe
clc
mov
or
xor
jp
clc
stos
andb
push
sbb
pushl
and
int3
fisubs
int
fidivs
fbstp
lret
jne
std
rcrl
xchg
jge
leave
mov
jne
jmp
cld
or
mov
or
loop
in
enter
mov
fcmovnb
pop
or
movsl
pop
insl
pop
sub
xchg
pop
jg
sub
movsl
lds
jne
aas
xchg
jmp
dec
out
cmp
aad
mov
xchg
icebp
add
and
mov
ficoml
or
sub
lea
and
arpl
jae
jno
jg
daa
mov
fmul
rcrb
pop
mov
lahf
incl
icebp
lahf
inc
orl
sbb
push
fbstp
push
jno
xor
loopne
addl
xchg
push
jns
or
adc
and
xchg
clc
push
pop
aaa
popf
pop
or
or
sub
movups
lcall
das
push
enter
cmp
aaa
push
dec
and
pop
mov
fidivrl
push
imul
loop
inc
or
pop
stos
roll
pop
out
fcomps
pop
jge
out
xchg
jo
cmp
xchg
mov
fistpl
mov
jecxz
pop
hlt
push
sub
and
sti
lret
js
mov
mov
pop
mov
lds
test
inc
pop
popf
inc
fildll
icebp
mov
cmp
lahf
push
xchg
clc
movsl
inc
jl
lcall
push
in
and
inc
push
sub
jo
add
xchg
fs
adc
outsl
inc
pop
in
scas
push
cmc
ss
std
cmp
das
pop
mov
ret
mov
and
cltd
adc
mov
sahf
leave
in
rclb
rol
out
push
sub
lods
pusha
or
mov
lock
push
xchg
test
jle
push
mov
xchg
stos
add
fnsave
xchg
stos
inc
xlat
outsb
pop
fs
jb
insb
add
adc
mov
fbstp
fldenv
pop
adc
pop
enter
sti
dec
aad
subl
inc
shll
xchg
cld
sub
sahf
xor
lods
les
sbb
jl
jl
pop
adc
push
pop
lea
pop
inc
jg
pop
icebp
out
jae
lods
movsl
cmpsl
dec
cli
jne
dec
sub
xchg
cmp
inc
stc
test
imul
je
mov
int3
ss
divl
adc
ja
pop
mov
pop
aad
xchg
xchg
mov
cmpsl
insb
adc
mov
inc
ret
icebp
jnp
mov
mov
lods
inc
ljmp
push
push
or
xchg
pop
jnp
push
pop
outsb
cmp
repnz
test
mov
std
lea
sbb
clc
stos
push
fisubrs
jmp
lea
aaa
or
xchg
aad
adc
int
xor
movsb
jns
imul
sahf
jns
imul
jb
mov
addl
inc
or
sbb
pop
in
test
mov
movb
dec
push
push
repz
add
jae
jo
xor
xchg
or
xor
inc
je
into
mov
les
pop
push
pop
jns
and
mov
or
faddl
scas
orl
stc
or
ds
cmp
int
das
testb
sti
lret
jae
push
shll
mov
xcrypt-cbc
cmpsl
pop
das
and
sahf
cmp
ljmp
push
jae
pop
fwait
sti
jg
cmp
lds
dec
ficompl
cmpsl
xor
xchg
pop
jmp
inc
jle
jle
jb
mov
sbb
xchg
mov
mov
and
jb
fnsave
mov
nop
xor
mov
add
leave
rcll
iret
pushw
pop
mov
mov
sub
fs
movsb
insb
mov
and
popa
out
je
or
daa
jge
ja
jnp
cmp
outsl
pop
into
mov
fstl
jmp
pop
fnstenv
sub
xor
aam
stos
sub
jae
test
lcall
xchg
and
jo
pop
pusha
xor
addr16
pop
xlat
loopne
pop
adc
decl
insl
cmp
ja
push
bound
inc
sub
jne
jno
cmp
lds
je
xchg
xor
iret
sbbl
mov
cmp
push
cmc
lcall
mov
inc
mov
and
cld
sbb
jp
xchg
sbb
dec
mov
pusha
jno
mov
adc
out
ficoml
popf
sub
insl
sbb
aaa
adc
sub
mov
or
or
sub
ss
dec
mov
dec
inc
sbb
mov
test
rcrl
xchg
scas
fiadds
pop
xor
out
pop
loope
popf
fcompl
mov
jg
push
sub
cmpsl
jno
loop
dec
xchg
xor
je
pushw
inc
sbb
addr16
das
xorb
xor
lds
inc
inc
pop
addb
enter
or
stc
dec
pop
jl
push
xor
and
lods
sbbl
inc
push
inc
jmp
jns
movl
sarb
mov
ret
lods
inc
nop
dec
dec
dec
jb
cmc
xor
push
mov
lret
add
out
scas
je
push
xchg
out
xchg
outsb
cmp
sbb
xlat
loop
pop
and
dec
in
cmp
mov
mov
jg
pop
xchg
sarl
mov
lods
xchg
ss
leave
inc
cmp
shll
jecxz,pt
push
inc
or
stos
xchg
sub
sub
mov
pop
cmp
mov
sub
lret
in
mov
and
fwait
xchg
stc
dec
repnz
pop
orl
pop
push
mov
iret
fwait
add
imul
cmp
sub
adc
pushf
xor
mov
loop
mov
movsb
inc
int
icebp
jle
push
jae
mov
xor
mov
in
add
add
lods
sbb
insb
sbb
repz
cwtl
popa
jns
push
incl
out
int
mov
dec
fst
pop
lret
mov
xchg
std
stos
inc
sub
lret
push
jmp
push
jmp
jle
arpl
lcall
sbb
outsb
pop
xor
pushf
push
fisubrl
cmp
xor
shlb
sbb
ds
push
es
or
push
or
dec
pop
sub
push
popf
lods
adc
xchg
mov
or
pop
inc
or
mov
int
leave
int
fidivl
xchg
sbb
testb
into
pop
and
dec
xor
pop
mov
sbb
inc
jnp
scas
xor
cmp
fstps
cmpl
fisttpl
mov
jo
jge
hlt
rol
not
inc
and
sbb
in
sub
iret
pop
inc
imul
or
std
stc
or
sbb
push
dec
enter
enter
lcall
xlat
mov
pop
push
mov
out
notb
sti
xor
jmp
fldl
int3
jg
ljmp
lods
mov
scas
fnsave
test
xor
jl
cwtl
xorl
test
or
movsb
mov
jnp
adc
pop
fidivs
je
das
repz
add
xor
andl
rorb
xor
es
movsb
cli
jns
xchg
mov
jp
cmp
push
push
lods
fdivrs
pop
adc
aas
fisttpl
subps
clc
icebp
mov
or
mov
xchg
test
fimull
push
inc
popa
addb
push
stc
jmp
popa
ss
pop
push
dec
ret
aaa
xchg
stc
pop
mov
or
je
mov
mov
mov
ss
and
dec
pushf
out
sub
ret
mov
das
mov
jg
xor
and
or
mov
rolb
imul
pop
fsubl
in
sti
pop
xor
xor
lcall
cld
xchg
popa
sbb
jae
dec
cmpsb
dec
outsl
mov
mov
xchg
repz
in
aad
cmp
ret
xorl
mov
bound
fcmovnbe
out
xchg
enter
cmpsl
loope
push
push
jns
jnp
cld
lds
push
jns
movsl
sahf
shrl
xchg
in
mov
jmp
out
pop
push
sub
jns
mov
gs
outsb
sub
je
cmp
inc
imul
rclb
int3
push
lret
and
fbstp
shr
add
mov
xchg
mov
push
mov
aaa
sbbb
lret
sbb
outsb
jae
sub
add
add
orl
fdivl
or
mov
mov
iret
adc
fs
fisubrs
fnstcw
aaa
adc
adc
shlb
adcb
pop
cmpsb
jecxz
aam
loopne
out
xor
sbb
sarb
imul
stc
pop
jmp
jno
or
shl
lret
jl
jo
sub
jmp
ljmp
out
je
leave
decb
mov
adc
sahf
in
sub
dec
cmp
pushf
mov
pop
push
jb
cmpsl
jmp
jb
push
push
mov
ss
xor
ja
push
js
fsubrs
mov
push
push
inc
test
and
inc
inc
enter
in
dec
mov
jnp
dec
add
push
ret
push
adc
pop
jns
addr16
sbb
mov
daa
jl
dec
jecxz
mov
pop
inc
pop
jnp
add
scas
sbb
insb
lea
push
movsb
mov
sub
ret
sub
outsl
sahf
insl
xchg
xchg
pop
mov
sub
dec
and
clc
imul
pop
test
sub
xchg
xor
cmpsb
mov
push
subl
xchg
xor
scas
pusha
negl
or
arpl
sub
xlat
xor
stos
sbb
fsubrl
lcall
sbb
es
jns
mov
push
rcrb
push
ret
jb
ret
inc
inc
jp
adc
inc
dec
cltd
sub
push
jge
xor
jmp
mov
and
mov
add
jecxz
stos
pop
and
cmpsb
or
add
loope
dec
sbb
cmp
cmp
fcomps
cltd
mov
adc
adc
add
jne
lahf
lods
scas
call
arpl
filds
and
jae
aam
xchg
lock
cwtl
stos
cmp
inc
xchg
jp
int
sbb
mov
mov
fistpl
cltd
mov
lret
xchg
add
sub
dec
xchg
stos
enter
jbe
fists
aas
push
sbb
pop
mov
mov
cmpsb
out
int
xchg
mov
mov
sbb
pop
subb
dec
lds
iret
aad
sub
scas
mov
dec
out
inc
lret
pop
out
ljmp
testb
outsb
mov
loopne
jl
pop
fldl
leave
add
xchg
jae
ficompl
mov
int
jl
pop
movl
xchg
pop
cmpb
cmp
sub
xchg
pop
sub
add
test
adc
mov
jno
jne
add
movsl
adc
decl
push
and
push
jmp
wbinvd
lock
pop
adc
aas
rolb
ret
push
xchg
and
mov
dec
dec
addr16
lahf
fs
xorl
cmp
or
cmp
mov
es
into
fdivrl
push
arpl
mov
dec
dec
cltd
pop
fcmovnb
or
push
jo
mov
add
stos
fwait
xor
pop
push
and
xchg
pop
inc
pushf
insl
cli
xchg
rorb
imul
sbb
xchg
push
sbb
pop
or
and
es
dec
xchg
lret
arpl
jp
loope
cwtl
cmpsb
xor
stc
negb
ret
cmp
insb
insb
and
adcb
lock
movsl
mov
jno
xchg
jae
fldenv
fdivl
pushf
sbb
inc
ljmp
push
jne
lods
push
adc
icebp
inc
aaa
xor
and
cmc
decb
adc
aam
cmc
jno
mov
sbb
xlat
sarb
adc
fnstcw
or
and
add
out
jecxz
pop
psubusb
ret
enter
shl
mov
add
sti
imul
popf
test
pusha
or
imul
mov
scas
repnz
mov
fcmove
jmp
sti
fdivp
xchg
xchg
stc
add
and
data16
shlb
je
or
inc
xor
jbe
rsm
jp
jno
dec
xor
xchg
aam
addr16
fs
les
imul
mov
push
insl
add
rcrb
andb
mov
adc
in
stos
push
lahf
addr16
inc
popa
data16
ror
pushfw
push
dec
xor
mov
cmp
pop
sub
pop
out
lock
xor
daa
mov
cwtl
scas
push
sub
mov
popf
lods
js
mov
pop
push
sbb
inc
fmuls
jle
jle
mov
and
and
inc
imulb
in
lock
inc
fdivl
ss
and
out
xor
xor
sub
inc
pop
aam
inc
push
cwtl
sbb
or
xor
jo
or
push
dec
push
add
xchg
adc
mov
fcoms
sbb
cmpsb
fbstp
and
sti
pop
pop
and
mov
cld
rorl
gs
arpl
mov
mov
add
insb
mov
fcomi
mov
mov
inc
sbb
and
cmc
xorl
js
lahf
mov
int
mov
repnz
or
add
outsl
push
stos
jmp
sbbb
inc
xor
inc
arpl
andb
mov
lcall
dec
sarl
data16
hlt
lahf
mov
outsl
cmp
sub
cmpsl
add
sub
fldt
mov
pushf
lock
loope
mov
sbb
xor
jge
mov
cmp
stos
rcrb
gs
arpl
pop
push
stc
dec
or
arpl
mov
and
aas
xor
jnp
mov
shrb
inc
sti
nop
push
push
in
rorl
in
outsl
mov
xor
sub
xchg
pop
ja
jns
add
ficoms
or
adcl
add
adc
mov
insl
test
lods
hlt
inc
mov
adc
std
cmp
mov
or
cmpsl
out
ret
movsl
sti
repz
mov
xor
sbbb
and
in
xchg
cmc
lret
xchg
ds
mov
fidivrs
dec
fisttpll
add
sbb
clc
notl
dec
ja
inc
dec
es
pop
push
dec
push
idivl
mov
push
and
adc
and
mov
xchg
nop
push
mov
leave
je
xchg
call
add
out
mov
in
inc
lahf
inc
fildl
jmp
fnsave
popa
jg
das
jbe
gs
ret
bound
lods
lret
sbb
clc
and
lea
jno
dec
lea
nop
nop
pop
add
cmc
inc
stos
or
hlt
mov
push
cld
xchg
xchg
xlat
pusha
add
sub
cmpsl
xchg
mov
dec
lret
js
sahf
pop
xor
sbb
insl
rol
sbb
iret
lods
xchg
imul
dec
add
jns
roll
cld
fisttpll
sbb
int3
ret
ja
stos
sub
xor
mov
jnp
ss
or
cltd
stc
inc
or
ljmp
repnz
sub
pop
dec
or
cwtl
xchg
dec
sahf
out
sub
gs
sub
xchg
pushf
bound
lods
int3
or
mov
sub
xor
pop
mov
mov
or
aas
pop
and
jae
fwait
push
js
js
xchg
jbe
jecxz
push
mov
push
pop
int
mov
push
test
jecxz
and
pop
call
fisttps
imul
jbe
or
mov
mov
mov
xchg
cmc
adc
mov
loopne
push
jbe
dec
test
rcrb
int
pop
xor
mov
jl
clc
cmp
xchg
stc
out
pop
js
mov
mov
cmc
gs
repz
jmp
pop
push
add
pop
push
mov
popa
mov
mov
gs
rol
adc
hlt
dec
and
arpl
repz
or
mov
in
mov
push
cmp
idivb
push
sub
popf
je
xchg
leave
mov
std
sti
xchg
das
out
pushf
lahf
dec
cmp
mov
dec
rcrb
mov
rcll
adc
test
mov
in
stos
fsts
cmpsb
int
fdivrl
out
inc
fsubrs
adc
int
mov
ljmp
mov
loopne
sub
cmp
sbb
sub
push
ret
les
add
cltd
cld
sbbl
incl
or
test
call
push
jo
dec
ret
subb
or
rcl
repz
mov
ds
fstpt
jo
xchg
mov
cmp
jns
pop
loope
push
jae
xchg
dec
jo
orl
pop
cmpsl
adc
inc
xchg
stc
sbbb
fwait
xor
adc
mov
pop
aas
arpl
icebp
popf
lods
jns
sbb
xchg
inc
out
test
jo
cld
jbe
mov
sbb
sbb
fisubrs
adc
xor
mov
out
jp
push
out
adc
mov
dec
adc
sahf
out
inc
push
adc
imulb
testb
cmc
jmp
xchg
mov
sbbl
jmp
or
lret
lret
mov
mov
and
stos
je
push
push
adc
mov
sti
push
inc
lods
cmp
test
sbb
cli
adc
pop
xor
pop
idivl
mov
mov
lods
push
call
xor
jns
stc
subl
fsubs
adc
inc
cmp
adc
ffree
jmp
sbb
dec
sub
push
xchg
lcall
aad
arpl
dec
testl
push
nop
js
sahf
mov
adc
pop
inc
xor
and
jb
repz
xchg
jp
sahf
push
mov
mov
jle
mov
cmpsl
imul
sub
nop
clc
mov
xor
sbb
pushf
xchg
repz
call
test
not
mov
push
xchg
cmp
push
clc
lea
cld
fbstp
xor
cmpl
mov
outsb
fisubrs
adc
insb
fildl
ja
icebp
movsb
push
mov
sbbb
sub
adc
sbb
push
push
outsl
push
cltd
shlb
mov
jl
dec
in
jo
push
insl
test
push
mov
mov
add
lret
loope
ljmp
leave
push
or
mov
orl
adc
push
out
inc
sti
lret
call
mov
jb
test
mov
mov
mov
out
mov
adc
das
scas
push
mov
jns
nop
dec
ljmp
hlt
int
dec
jb
subb
das
xor
and
pop
loop
lret
call
iret
nop
sub
call
inc
rorl
lods
cmp
adc
and
pop
jp
inc
mov
fistpl
mov
je
cltd
enter
mov
fs
addr16
jno
out
jecxz
xchg
xor
sti
and
loopne
call
inc
or
mov
mov
mov
pop
sub
xchg
mov
xchg
mov
xchg
sbb
in
push
je
out
nop
in
cs
lahf
nop
or
decl
sub
xor
cmp
rolb
ret
lea
or
mov
push
out
hlt
fs
add
lahf
in
das
jmp
xor
and
add
aaa
cmpsb
out
inc
xlat
push
xchg
mov
push
adc
dec
cli
sarl
jmp
and
push
cli
outsl
adc
and
adc
mov
xor
cmpb
xchg
pop
dec
mov
call
pop
xor
mov
sbb
scas
je
and
dec
add
outsl
inc
inc
pop
add
mov
mov
sub
adc
test
rorl
cltd
add
scas
in
std
roll
jnp
ja
inc
fmuls
nop
in
rcrl
cmp
jnp
test
mov
push
lds
test
int3
and
fldl
leave
ljmp
xchg
cmp
mov
mov
push
bound
sete
mov
add
sti
cmpsl
mov
mov
xor
shlb
xor
and
jge
int
or
outsb
or
jnp
jp
in
jge
rclb
fisttps
push
fmull
faddl
fxam
jp
fiaddl
sbbl
outsb
mov
pop
fcompl
mov
nop
stos
vmovapd
in
fstps
sti
sub
or
inc
enter
cmc
aas
cwtl
jae
cwtl
pusha
es
roll
leave
or
push
mov
into
sub
and
adc
out
lcall
ds
nop
out
sbbb
clc
and
xor
idivl
jo
repz
jmp
or
inc
pushf
xchg
mov
daa
das
mov
adc
bts
fisubrs
in
inc
or
cmc
fildll
add
lret
adc
into
cmp
pop
adc
out
je
fiaddl
push
xchg
sub
and
push
jo
push
push
rorl
aad
xor
xchg
or
movsb
fnstenv
roll
and
in
aam
or
dec
add
movsl
xlat
mov
pop
mov
mov
loopne
inc
mov
push
pop
adc
adc
mov
jle
sbb
mov
sub
jno
lods
push
and
js
mov
push
repz
out
cmpsl
and
pop
lcall
loopne
and
frndint
movsb
mov
int3
cltd
xchg
clc
sahf
rorb
jb
in
loope
loope
arpl
add
lds
insl
jmp
dec
dec
jl
xchg
pusha
lock
mov
fwait
sti
adc
pop
cmp
sbb
mov
cmp
addr16
loop
sub
push
mov
mov
dec
loope
fstpl
arpl
pop
xor
loope
push
sbb
aam
xor
inc
dec
cld
or
shrl
sbbb
push
jmp
or
jno
outsb
gs
scas
and
scas
aaa
jnp
shl
inc
out
mov
or
jp
fiadds
push
mov
fisubl
cmp
int
mov
icebp
mov
sbb
jbe
add
xchg
cmp
shr
cld
pop
iret
dec
add
clc
mov
ja
jnp
adc
xchg
xchg
dec
add
loope
and
in
xorl
xor
fwait
sub
out
and
add
push
jne
inc
push
adc
ja
cli
jo
or
shl
into
in
pop
out
adc
cmp
cwtl
pusha
pop
jl
scas
popl
ficoms
outsl
outsb
and
mov
ds
fsincos
inc
mov
in
fadd
jl
cmc
int
in
cli
xchg
mov
xchg
mov
or
xchg
xor
cmp
mov
or
repz
sub
xchg
mov
add
sbb
adc
test
inc
push
pop
or
enter
daa
pop
cmpsb
cmp
cmp
sbb
mov
push
movsl
or
push
test
pop
push
in
push
add
xor
cmpsb
push
push
xlat
or
jnp
popf
scas
call
arpl
sahf
fs
or
mov
push
jp
mov
sub
xchg
sub
xchg
popf
push
cli
mov
into
jle
imull
mov
mov
stos
lock
pushf
inc
push
xchg
mov
pushl
add
outsb
cld
cltd
inc
inc
inc
and
adc
lret
sbb
jns
mov
cmp
sbb
ret
das
lods
inc
mov
jo
fwait
ror
popa
pop
cmp
jecxz
fwait
xchg
inc
mov
push
fwait
or
shrb
insl
sub
cmp
outsb
lret
ljmp
cmp
sub
dec
stos
lret
cmp
pop
lock
in
fwait
or
push
imul
ljmp
out
enter
cmp
cmp
dec
xor
fucomi
and
flds
xchg
stos
sbb
stos
outsb
mov
lcall
testb
jp
test
aaa
pop
fs
in
jno
rcl
pop
out
xor
in
cltd
pop
xor
loop
out
popf
push
addl
xlat
jae
jbe
out
inc
push
xchg
cmpl
and
jb
lret
sbb
clc
pusha
and
lods
xor
jae
xor
sbb
mov
scas
in
sub
pop
ds
int
sbb
dec
lds
push
sti
mov
or
int3
mov
jb
es
lods
jmp
mov
mov
rclb
mov
and
mov
cmpsl
int
and
sub
repz
adc
xor
cmpsb
std
push
cmpl
fldenv
aad
pusha
jb
rcrl
mov
inc
fcoml
cmp
sub
jb
xchg
xchg
addr16
mov
fcmovnbe
sbb
popa
jg
divb
mov
mov
mov
jae
gs
stos
bnd
inc
clc
subl
enter
in
add
sbb
or
loope
mov
jecxz
aad
push
inc
jb
dec
mov
ja
not
aas
mov
movsl
push
jbe
add
fisttpll
mov
test
cmp
or
cwtl
dec
cwtl
inc
push
inc
inc
mov
mov
lret
out
sahf
cmp
gs
push
arpl
imul
sub
aad
lock
ds
in
dec
pop
aad
mov
jle
inc
push
outsl
cli
jl
jle
movsl
adcl
mov
inc
cmpb
sti
adc
mov
ja
inc
test
push
inc
xchg
lea
mov
jge
jle
mov
sbb
ret
stc
adc
jnp
cli
or
xchg
and
mov
aas
mov
or
popf
mov
or
lea
mov
sbb
ret
and
xchg
ja
xchg
inc
es
xchg
fisubrl
shll
mov
push
repz
fwait
inc
inc
int
mov
loopne
jge
jg
out
jns
loopne
cmp
jecxz
jb
sub
push
mov
into
cmc
adc
leave
xchg
jns
xor
xchg
fwait
jo
or
or
cmpsl
jns
mov
and
jle
aas
pop
roll
mov
imul
repnz
or
repz
std
inc
inc
dec
mov
lods
inc
test
adcb
fistps
and
loope
inc
mov
dec
pop
mov
mov
cmpsb
cmpsb
xchg
shr
popf
jp
ficompl
mov
xor
leave
popa
pop
inc
in
lods
inc
lret
xchg
inc
add
and
rorl
inc
mov
push
or
nop
and
aad
sub
out
das
hlt
pop
xlat
adc
sub
rorb
jno
push
add
sub
adc
lret
jbe
inc
push
mov
fcoms
and
mov
and
es
xchg
les
in
mov
pop
cld
lods
mov
sbb
xchg
dec
sub
jmp
les
mov
and
je
or
lods
jb
sbb
divl
into
lds
push
cmpsl
incb
pop
loopne
sub
gs
sbb
pop
or
les
lret
cld
sbb
std
mov
add
hlt
push
cmc
sahf
push
mov
sub
add
sub
std
fs
hlt
cltd
scas
addl
sub
push
shrb
mov
outsb
jbe
dec
fucom
add
sub
sub
popf
and
mov
lret
and
es
push
pop
test
jne
int3
bound
bswap
adc
mov
jl
loope
lods
movsb
jmp
lea
adc
out
aas
or
pop
push
lea
imul
outsl
into
insl
dec
jl
out
frstpm(287
pop
roll
push
pop
cmpsl
dec
jmp
insl
jns
xchg
aas
mov
xor
loope
add
daa
out
test
inc
fdiv
xchg
mov
lods
in
test
push
jmp
or
mov
dec
sbb
ja
gs
mov
lret
push
in
cmp
test
shrb
push
or
shlb
mov
test
and
lcall
cmp
fistps
loopne
xchg
pop
ret
ret
repz
adc
jge
add
pop
and
enter
jle
fists
xor
pop
shll
repnz
lahf
dec
enter
call
xchg
outsb
xchg
add
adc
push
cmpsb
mov
mov
jbe
lahf
jbe
push
ljmp
lahf
xor
shl
cmpl
fisubs
aad
push
aad
and
nop
push
push
push
dec
int3
push
mov
test
pop
lcall
jp
out
mov
out
aas
push
inc
push
mov
add
push
jg
movsl
mov
shrl
or
push
sub
fstpl
ret
xor
pop
adc
xor
mov
mov
aad
xor
fidivl
data16
lret
inc
ss
push
xchg
push
aas
cmp
jmp
jno
jo
clc
and
adc
sub
jge
jbe
gs
aad
jp
or
sbb
xor
and
dec
clc
mov
aas
dec
outsl
movsb
and
pusha
test
and
jae
aad
sub
dec
inc
daa
mov
sarb
jecxz
and
lods
out
incb
xlat
scas
daa
xchg
aas
cltd
sub
popa
iret
mov
scas
fiaddl
repnz
cld
ja
add
test
les
mov
int3
adc
sub
add
mov
call
shlb
inc
pop
data16
push
fdivl
fimuls
stos
mov
inc
xchg
jb
mov
push
xor
enter
nop
push
dec
sbb
lock
pop
add
mov
mov
cmc
dec
mov
rclb
or
outsb
scas
adcb
icebp
push
push
sbb
testl
push
pushf
mov
nop
call
cmp
inc
lcall
out
inc
negl
nop
movsb
out
cs
xor
sub
inc
pushl
pop
fcmove
movsb
nop
sub
popa
xor
dec
stos
and
mov
mov
sar
rclb
and
xor
into
loope
imul
jmp
push
loop
int3
push
int
cltd
pop
scas
xchg
mov
pop
in
and
mov
fs
pop
jae
mov
mov
mov
and
fsubl
jbe
lcall
adc
mov
cltd
imul
inc
movsb
aad
pop
lcall
stc
lods
pop
and
popf
ja
pop
or
lcall
fnstcw
imulb
adc
lds
cmc
or
mov
iret
jns
in
cmc
push
sub
in
int
push
fs
sbb
data16
cli
xlat
hlt
cmpsb
lock
push
and
xchg
adc
jb
jbe
pop
pushf
mov
mov
idivl
leave
movb
inc
mov
cli
pop
arpl
imul
cli
sub
and
negb
andb
mov
sbb
ds
cmp
push
bound
jg
add
es
loope
test
ds
jb
add
xchg
push
in
mov
test
mov
push
cmpb
stos
mov
pop
sub
in
and
jmp
pop
xchg
push
negl
je,pn
mull
mov
loope
add
sbb
sbb
mov
es
nop
sbb
and
fxch
jnp
add
iret
sbb
xor
mov
ret
add
in
test
dec
jae
aaa
inc
sbb
ficompl
sub
inc
dec
xor
jae
sub
fmul
inc
repnz
imul
dec
pop
and
repnz
inc
loop
add
insb
les
fmull
and
mov
imul
sbb
hlt
or
ret
xlat
popf
inc
dec
cwtl
cli
mov
sbb
popa
pop
and
scas
ret
addr16
jp
mov
lcall
outsb
jbe
pop
jno
and
and
push
or
fnstcw
out
mov
filds
mov
adc
mov
cwtl
fwait
lcall
jne
pop
test
inc
or
cwtl
sbb
sbb
cmp
xchg
lock
xor
mov
clc
stos
sbb
inc
mov
jmp
push
gs
lret
sub
and
inc
mov
mov
ret
dec
push
mov
f2xm1
pop
int3
daa
je
mov
ds
xor
push
push
pop
ret
adc
outsb
adc
push
cltd
xor
pop
ficompl
mov
pop
mov
xchg
xlat
cld
in
and
adc
ss
mov
mov
ficompl
jae
pop
popa
nop
xchg
pop
mov
push
xor
push
xor
aaa
ud1
mov
into
insl
sbb
stc
mov
mov
or
cmp
and
sub
es
pop
add
sbb
aaa
stc
inc
imul
sahf
inc
popf
out
dec
mov
out
and
fstl
stc
mov
sahf
add
les
mov
mov
sbb
or
imul
test
mov
and
sub
fsubs
jmp
popa
xor
loope
ficoms
es
popa
test
and
into
sbb
adc
lcall
mov
outsl
dec
mov
inc
in
jnp
mov
aad
dec
dec
mov
mov
into
pushf
int
lret
mov
hlt
and
or
imul
xor
adc
lcall
sbb
jo
jle
cmp
aad
add
scas
mov
pop
jle
push
dec
dec
popf
mov
sbb
add
repnz
xor
or
ret
cld
or
imulb
cmpsb
ss
inc
mov
sbb
xor
test
cmc
push
stc
mov
adc
sbb
mov
cwtl
mov
cltd
inc
dec
fbstp
and
pop
out
jecxz
mov
xor
hlt
xchg
xor
sub
jmp
or
test
mov
or
jmp
and
pop
fisttps
jne
push
sti
cld
push
jae
mov
jne
testb
std
loopne
hlt
imul
mov
adc
or
cld
mov
and
stos
pusha
pop
sub
add
dec
dec
test
stos
xor
xlat
sbb
scas
aam
cmp
mov
jb
jle
pop
out
popf
inc
or
rorb
je
jmp
and
shll
stos
inc
jmp
mov
int3
inc
dec
cmp
xchg
das
ret
cwtl
in
mov
mov
or
xor
xchg
sbb
adc
mov
test
movsb
pop
jno
out
subb
or
cmpsl
cmp
pop
add
mov
push
movsl
repnz
stos
iret
adc
mov
dec
loop
insb
mov
add
arpl
cltd
pop
mov
repz
fdivrl
push
orl
xor
xchg
adc
mov
sbb
jns
xor
lret
lds
mov
imul
rolb
or
push
push
xchg
or
aas
mov
loopne
outsl
fiadds
sbb
sub
xchg
bound
add
jbe
mov
bound
ja
and
lock
jbe
cmp
and
or
xlat
mov
insl
lods
popa
mov
xchg
mov
data16
and
test
cmp
xchg
lcall
xor
cli
dec
add
pop
cmpsb
popf
jl
notb
loop
push
sub
add
nop
jle
mov
test
fxch
adc
stc
addr16
aaa
ljmp
mov
ljmp
add
repz
jp
mov
add
adc
clc
sahf
sub
call
pop
repz
sahf
and
or
stos
dec
add
cmp
xchg
pop
clc
sbb
ret
dec
sbb
orl
jmp
dec
rcll
addr16
dec
and
insb
leave
imul
jmp
or
pusha
push
int
mov
mov
sub
mov
push
xchg
mov
stos
out
xchg
lahf
sub
xor
pop
rcr
lods
push
push
dec
mov
push
xor
inc
add
cld
dec
test
rcrb
push
pop
in
push
xlat
in
gs
incl
mov
xchg
xor
lods
popa
xchg
or
cmpsl
push
add
fldenv
lahf
andb
rcrb
dec
sbb
jns
loopne
push
adcb
and
cltd
lods
sahf
xor
loope
pop
rcl
mov
mov
xorb
or
ror
lds
int3
call
repnz
pop
pop
jle
xchg
fwait
dec
xor
pop
or
daa
xchg
xor
sub
xchg
mov
iret
push
scas
and
call
or
sbb
and
outsb
xchg
shl
in
les
mov
addl
jmp
das
or
dec
push
stc
iret
lahf
push
pushf
into
sub
xchg
das
xor
cld
je
xor
xchg
pop
push
call
sub
shlb
jecxz
and
shlb
and
mov
gs
mov
imull
xor
int
data16
imul
es
inc
jne
pushf
neg
stos
inc
in
ror
xor
out
xchg
les
movsl
icebp
mov
movsl
mov
mov
or
xchg
jnp
mov
push
inc
sub
sub
ljmp
mov
stos
pop
mov
xchg
les
sbb
scas
sahf
or
aam
and
mov
push
int3
fsubr
and
adc
xor
pop
jno
lret
or
test
fldl2t
stc
push
stc
xchg
lods
or
icebp
jb
fidivrs
fsubs
enter
js
rcrl
dec
clc
stos
maxps
lret
orl
adc
mov
loope
or
incl
sub
mov
roll
movsldup
and
adc
jmp
daa
fs
lods
push
push
les
or
lods
hlt
sub
xchg
pop
sahf
shl
lret
lcall
inc
insb
jae
push
inc
add
push
add
shl
hlt
aaa
std
outsb
out
mov
inc
shll
icebp
push
pop
adc
lds
pop
push
icebp
pushf
sbb
push
call
adc
or
or
cmp
sub
and
enter
test
cmp
mov
jne
sbb
jge
push
lock
popa
and
cmp
lahf
arpl
rolb
jae
int3
aas
mov
stos
lret
in
inc
dec
hlt
xor
xchg
ja
mov
dec
out
repz
lock
inc
nop
dec
dec
fs
call
into
pop
inc
push
xlat
inc
sbb
jne
or
pop
sbb
stc
xchg
mov
push
es
pop
insb
dec
fwait
jae
xchg
shll
scas
xlat
insl
scas
mov
popa
out
jge
cwtl
sub
add
cli
sarb
xor
or
mov
sub
lea
pop
call
in
mov
sub
mov
dec
jb
call
mov
sti
jmp
nop
jl
outsl
hlt
daa
lods
div
fisubs
push
mov
jmp
or
add
sar
bound
inc
cmp
pop
fcomps
jle
aas
rcrl
and
adc
repnz
mul
pop
ror
lcall
imul
pop
adc
aas
add
movsb
sti
mov
add
mov
pop
sti
sbb
lds
mov
sub
mov
xchg
push
inc
dec
aam
gs
fadds
das
shrl
push
gs
mov
and
sbb
pop
test
xchg
loopne
push
rcrl
pop
in
jle
shrb
sub
or
cmp
outsl
aas
inc
je
std
loope
cli
push
cltd
dec
adc
mov
ja
cmc
adc
popa
xor
jae
push
pop
push
jmp
inc
testl
into
xchg
inc
faddl
jge
js
addr16
loop
inc
inc
or
aaa
cmp
push
std
dec
or
cmpsl
jne
push
insb
dec
cld
pop
jnp
cmc
xchg
inc
arpl
xchg
sbb
jp
cmpsl
xor
aam
inc
mov
notb
adc
adc
repz
ljmp
jl
or
push
cltd
mov
jo
mov
and
repnz
addr16
ror
xchg
push
and
xlat
push
adc
sub
das
pop
adc
sub
rorl
cmpl
dec
out
and
jg
out
repz
jl
stos
inc
jmp
or
flds
add
enter
daa
push
fwait
cmpsl
jmp
fnstcw
nop
daa
mov
mov
adc
stc
xor
pop
xchg
add
sbb
mov
aad
pop
loope
xchg
mov
mov
jp
ficompl
sub
cld
lcall
mov
dec
in
or
sub
pop
sbbb
add
jmp
cld
fsubrs
iret
push
mov
adc
mov
mov
or
cs
lahf
inc
dec
mov
push
dec
sub
push
daa
out
pop
repz
out
shrb
les
les
pop
jg
jmp
sbb
jl
sub
pop
mov
push
in
xor
popa
jmp
or
mov
das
mov
pusha
xorb
xor
or
notb
data16
ss
jae
lret
xor
out
push
sbb
and
pop
mov
popf
push
push
aas
in
aaa
xchg
push
mov
movsl
jecxz
dec
aam
xor
and
inc
add
mov
fiadds
jmp
mov
ficoml
sub
mov
mov
pop
dec
push
int
xor
shrb
nop
fistpl
sub
xchg
pop
or
dec
mov
jne
imul
bound
push
cltd
add
sub
mov
jg
mov
lahf
and
aad
push
cltd
xor
inc
fbld
mov
adcl
cwtl
dec
shlb
jmp
push
push
iret
es
xchg
mov
test
xor
icebp
lret
or
pop
fwait
lea
jbe
or
out
add
out
pop
and
pop
dec
pop
or
pop
cmp
or
pop
mov
sbb
daa
jno
mov
aas
push
adc
in
nop
pop
addr16
xlat
orb
arpl
mov
dec
xor
sub
je
bound
cmpsb
mov
ss
decb
in
cld
jle
dec
divb
ret
pop
add
dec
repnz
jns
cmp
mov
aad
xchg
or
shr
popa
out
xor
jmp
and
test
or
xchg
test
mov
adc
dec
iret
mov
decb
shrl
lds
mov
repz
push
roll
in
mov
fs
inc
push
mov
add
ret
daa
clc
mov
test
sbb
ja
dec
push
fnstcw
or
jmp
jl
fs
in
js
cmpb
sbb
sbb
loope
add
test
daa
and
xor
adc
ja
push
fimuls
idivl
push
jle
add
xchg
dec
xor
mov
cmpsb
xchg
test
push
mov
std
pop
ret
aas
test
fdivrs
fiadds
cmp
std
popf
inc
cmp
ret
push
mov
ss
pop
mov
pop
fbstp
add
pop
sbb
jne
cmc
xor
divb
xchg
in
sub
mov
movsl
sbb
xchg
outsl
xchg
push
mov
fidivl
pop
mov
mov
mov
lods
mov
je
pop
orl
push
jb
adc
stc
mov
imul
push
ja
rcrb
mov
or
xor
push
outsl
test
js
xchg
loopne
push
inc
mov
arpl
sbb
dec
dec
jle
push
mov
fnstsw
pop
sub
decl
cmp
xchg
jle
stos
bound
imul
insl
push
xor
adc
cwtl
cwtl
mov
jnp
fs
aad
add
dec
test
cwtl
pop
and
mov
cli
iret
cmpsb
adc
add
sbb
cltd
push
xchg
scas
ljmp
jmp
inc
inc
outsb
pop
and
fildl
mov
pop
shlb
cmpsb
icebp
scas
subb
push
ficomps
nop
adc
sbb
andb
sahf
add
cltd
sub
xchg
sbb
mov
xor
addb
mov
push
out
xor
ljmp
dec
in
mov
mov
dec
xchg
mov
push
test
mov
and
ret
dec
nop
push
iret
pop
xlat
or
mov
xor
cmc
adc
adc
mov
xor
stos
push
cmp
push
mov
mov
sbb
mov
jle
testl
dec
or
jl
sub
imul
dec
push
leave
dec
arpl
cmpsb
xchg
jge
xor
insb
cltd
pop
push
and
dec
ljmp
jo
xor
lcall
push
pop
mov
aam
test
lods
movsl
out
clc
sarl
mov
add
push
mov
xor
addr16
test
push
in
inc
decl
xchg
fsubrl
mov
jmp
add
iretw
mov
dec
mov
int
sbb
fdivs
int
std
pop
mov
lods
push
and
std
inc
fiadds
inc
es
ljmp
ss
aad
mov
movsl
mov
call
stos
jns
push
xor
mov
int3
enter
fcomp
cmp
xor
pop
movsl
add
xchg
cmc
cmpsl
sbb
mov
mov
jecxz
xchg
pop
lcall
cmpsb
mov
mov
xchg
mov
cmp
mov
xchg
outsb
mov
push
lock
pop
out
pop
dec
ss
cmp
outsb
pop
xchg
mov
xchg
or
cmc
not
push
ss
push
outsb
sub
jae
test
or
test
cmc
add
push
jmp
ds
sub
fcmovbe
hlt
cmp
jp
cmc
add
adc
xorb
call
and
dec
add
jae
mov
push
rcl
sub
cmp
shll
jo
int3
shlb
inc
loope
jno
cmp
sub
or
pusha
mov
and
and
xor
pop
jl
lods
inc
push
call
inc
frstor
sar
dec
outsl
sbb
aas
dec
mov
imul
insb
vrsqrtps
into
mov
lret
test
cmp
push
fs
in
xor
sbb
mulb
rol
aad
and
pop
mov
loopne
dec
je
ret
or
sbb
repnz
inc
leave
sub
push
dec
loopne
push
popf
popa
cltd
gs
sbb
mov
push
pop
fucomp
jle
pop
imul
or
pmuludq
fsubl
or
popa
dec
add
cltd
cmpsb
xor
mov
pop
cmovs
xor
ss
xchg
lret
cs
sub
outsb
fcmovu
xchg
in
jle
xor
add
xchg
push
dec
repnz
inc
cltd
push
or
leave
adcb
stos
and
test
js
jmp
mov
shlb
fldenv
dec
xor
cmp
cltd
lret
sub
fisubl
addr16
mov
mov
fs
loop
mov
test
test
sub
xor
mov
push
lods
fsubr
cmp
mov
push
lret
ret
xor
fwait
enter
hlt
test
test
adc
dec
fnstcw
or
rorl
jge
mov
je
loope
repz
sub
negl
jp
xchg
cmpb
sbb
add
nop
xor
mov
and
ljmp
rorb
lahf
pop
push
mov
or
xchg
lcall
lock
pop
sahf
push
sahf
or
je
pushf
pusha
fldcw
adc
mov
cltd
xor
inc
mov
sbb
cmpb
cmc
aaa
mov
mov
cli
push
mov
pop
add
sbb
push
std
popf
and
mov
push
fs
imul
insl
mov
enter
cwtl
inc
inc
sti
rcll
lods
add
cltd
mov
loope
aad
lods
cli
push
pop
pop
pop
out
cmp
cltd
in
push
inc
push
cltd
fidivrs
mov
sbb
and
ljmp
out
in
test
outsl
dec
xchg
lea
sarb
and
mov
lret
mov
mov
xchg
pop
test
push
inc
cs
popf
cltd
das
addr16
lds
cmp
mov
jnp
js
and
and
jp
or
xchg
xchg
mov
jecxz
sub
xor
push
fstpt
cmp
add
mov
mov
xor
repnz
lock
pop
cmp
stos
push
mov
bswap
fsubs
push
shl
xor
sbb
fidivrl
ret
loop
push
mov
xchg
add
mov
xor
dec
dec
xor
mov
push
kmovb
hlt
cmp
mul
les
add
stc
push
dec
dec
fisubrl
outsb
push
leave
push
inc
cli
movsb
call
das
popf
or
mov
push
in
test
mov
inc
imul
fisubs
jne
jae
nop
pop
stc
adc
jo
dec
dec
hlt
mov
cmp
sbb
cmc
sarl
sbb
xchg
insb
rorb
push
je
mov
das
into
dec
pop
and
add
data16
cmc
cmp
xor
cmp
repz
dec
shll
jg
lock
mov
xor
xchg
sbb
loopne
popa
xchg
cmpsb
add
xor
fdivrs
outsl
nop
lcall
scas
fstpl
jp
xchg
movsb
jecxz
ds
ret
mov
shl
jae
pop
and
mov
fdivs
jns
mov
xchg
and
mov
cmp
ss
pop
xchg
in
inc
pop
dec
cmp
jg
mov
add
lahf
lret
stos
jbe
sbb
jl
lcall
pop
cmpsb
dec
pop
push
mov
ja
ja
cmp
js
out
or
loop
sti
mov
in
lods
xchg
xchg
add
jne
dec
mov
clc
adc
inc
outsb
jbe
lret
pop
mov
mov
jge
movsb
push
out
or
js
cmpsl
mov
lcall
loopne
add
add
out
js
out
push
pop
in
xor
mov
test
jno
push
arpl
sbb
adcb
cmp
fistpl
xor
std
sbb
cmpsl
push
xchg
mov
outsb
sub
jno
loop
out
xor
hlt
test
xchg
insb
lds
add
call
cmp
cld
test
xor
nop
arpl
dec
sbb
jmp
mov
jbe
push
and
mov
stos
mov
int3
jg
mov
dec
fwait
leave
push
jae
jno
mov
mov
mov
rcrb
sub
jp
clc
test
lods
xchg
or
orl
mov
xchg
mov
or
mov
ja
sbb
mov
inc
cmp
clc
fisubrs
test
scas
js
sbb
in
idivb
scas
rcrl
fcomps
mov
decb
scas
sub
mov
push
and
cld
sub
pop
xor
int
mov
jnp
add
cmpl
imul
mov
bts
test
jge
sar
enter
aaa
shlb
mov
pop
addl
cmc
aad
jbe
les
sbb
adc
sub
sbb
aas
cmc
inc
sbb
ret
hlt
lahf
mov
jecxz
addr16
push
mov
es
jnp
lea
ds
insb
ja
pop
faddl
adc
xor
mov
mov
loopne
xchg
push
push
add
xor
mov
clc
push
fstl
je
cmc
aad
cmpsl
jns
out
rclb
decb
pop
or
movsl
or
lods
jg
clc
xorb
xchg
xchg
jg
pop
out
gs
or
lret
cmp
test
es
sbb
dec
mov
lret
jl
loope
xor
sub
cmp
popa
jo
loope
and
mov
sbb
push
ret
fists
lods
sbb
fnstenv
adc
test
or
jmp
or
xorb
int
imul
mov
sbb
fwait
hlt
push
movsl
inc
sarb
lds
dec
dec
test
cs
dec
out
insb
xchg
push
lahf
movsl
pop
add
xlat
jmp
xor
cmpsb
jecxz
mov
xchg
xchg
mov
cmp
loopne
movl
cltd
test
jmp
mov
xor
push
int3
and
sahf
jb
std
arpl
pushf
cltd
dec
jp
cmpl
lds
dec
call
jb
repnz
xchg
xchg
sbb
iret
pop
int
inc
sti
rcl
repz
aas
jmp
popa
lcall
je
maxps
cmp
int
cltd
sub
dec
dec
mov
shlb
in
xchg
ss
dec
mov
aas
jb
pushf
fcmovne
andl
push
les
mov
mov
mov
pop
int3
mov
enter
mov
inc
roll
and
aam
adc
cmc
cmpsb
std
mov
les
xor
sbb
loope
push
fisubl
xchg
je
mov
xchg
pop
bound
mov
xor
imul
push
xor
test
test
jae
data16
repz
fwait
repz
inc
push
adc
movsl
call
push
add
mov
or
and
cmp
ja
pop
mov
jg
shrb
jmp
mov
fnstenv
inc
pop
dec
dec
mov
jl
add
mov
cltd
jmp
lret
push
jg
sarb
jmp
sbb
xchg
mov
mov
adc
inc
js
mov
jp
lods
mov
test
rclb
mov
add
jne
inc
fisubrl
ljmp
dec
xlat
cmpsl
jo
adc
dec
gs
mov
or
negl
in
add
shrl
mov
dec
aad
fmuls
sbb
pop
inc
pushf
mov
hlt
std
cmpsb
les
adc
lret
cli
test
cmpsb
repnz
lahf
adc
sub
mul
mov
jg
cmp
icebp
add
jge
jb
movntq
jecxz
or
cmp
pusha
cmp
fisubl
das
sub
loopne
out
lock
fimuls
lahf
ljmp
scas
adc
orl
xorb
mov
jo
xor
mov
sub
dec
mov
arpl
sub
add
popa
adc
mov
push
ss
adc
or
sbb
fstps
pop
adc
cmp
pusha
mull
inc
adcb
mov
pop
sahf
test
in
lret
ror
jmp
add
loop
inc
lock
pop
popf
sub
dec
loope
dec
jle
dec
jmp
sub
popa
pop
sahf
xchg
xchg
aas
loope
jno
dec
xchg
adc
push
mov
gs
cmp
int3
jae
jns,pn
loope
loop
cmp
inc
idivb
or
dec
mov
js
mov
or
mov
or
int3
jbe
cltd
testl
popa
jg
jmp
stos
adc
pop
mov
cli
pushf
push
add
adc
xchg
xchg
cmpsl
movsl
inc
fdivl
jb
dec
gs
mov
lahf
xor
cmp
adcb
cmp
call
dec
loop
push
dec
xlat
push
pop
test
and
sbb
lea
aas
xchg
int3
testb
dec
pop
xor
insl
dec
fldcw
push
inc
lods
fnstcw
out
repz
mov
imul
mov
xor
mov
movsb
xchg
call
jle
nop
sub
inc
imul
adc
popf
sbbl
cmp
test
iret
shlb
inc
pop
rcrl
sbb
mov
aam
sub
stos
repz
mov
add
nop
dec
addr16
jecxz
mov
test
push
cmp
adc
add
sub
jno
xchg
mov
pop
or
xor
negb
inc
rcr
mov
loop
test
cmp
xchg
out
mov
and
mov
fimuls
mov
iret
cltd
fdivrl
dec
out
int3
shl
add
mov
popf
sbbl
fsub
cmc
insb
enter
arpl
xchg
xchg
les
mov
pop
jl
mov
loope
scas
mov
int3
mov
push
add
ss
sbb
add
sahf
sbbl
inc
hlt
pop
add
daa
xchg
jle
sarl
jp
add
mov
fstpl
sub
movsl
shll
aad
or
mov
xchg
inc
ja
lods
sub
aas
inc
fidivl
cmc
rcl
popa
jns
hlt
inc
sub
add
mov
sub
ret
or
addr16
ffree
sbbb
jno
or
and
dec
in
stc
pop
xchg
in
xchg
sub
xchg
es
inc
jae
rep
xchg
arpl
push
notl
shlb
adc
je
in
push
xchg
mov
cs
pop
xlat
jb
push
imul
int3
rcrb
test
xchg
rcrb
pop
out
cmp
sahf
lods
stc
push
or
push
aaa
xchg
xor
mov
push
faddl
dec
xor
hlt
xchg
inc
insl
addr16
inc
fcmovb
adc
imul
addr16
arpl
test
push
lret
pop
das
inc
mov
lret
test
jno
mull
lds
rclb
jecxz
sub
jnp
dec
out
femms
xchg
mov
fbstp
aam
ja
pop
test
rcrl
cmp
cmc
insl
cmp
loop
inc
fnstcw
pop
mov
dec
das
jns
pusha
insl
shlb
nop
scas
push
xchg
out
add
push
out
cli
mov
cmp
lock
sahf
data16
adc
into
cwtl
je
sti
out
js
sahf
dec
lret
pop
mov
cmpsl
gs
loop
call
shll
push
adc
movsl
fucomp
or
sbbl
inc
add
testb
jge
push
xchg
cmpsl
fldl
xchg
mov
fs
jl
or
sub
aam
mov
pop
pop
or
jnp
pop
in
movsb
mov
nop
fdivs
xchg
loope
mov
jl
sub
js
mov
pop
or
add
dec
jb
inc
jnp
pop
daa
lds
add
lret
xlat
outsb
push
dec
sti
mov
mov
inc
xchg
cli
dec
arpl
push
fldl
sbb
ss
mov
sub
test
das
and
int
jge
aaa
mov
mov
push
in
mov
cld
mov
jmp
lret
dec
lcall
adc
push
out
in
xchg
lahf
js
hlt
repz
fsts
push
push
test
out
sbb
jb
cmpsb
jle
shlb
test
daa
mov
pop
jo
dec
aas
jns
das
lahf
bound
cmp
mov
fisttpll
jae
lock
add
mov
movsb
xchg
xchg
loop
xchg
stos
std
pop
imul
mov
or
inc
in
jno
out
pop
lret
ds
js
test
jge
pop
scas
jno
mov
cmp
out
in
loopne
add
add
and
lret
bound
mov
xor
xor
das
cmpsl
xchg
aam
lds
sub
dec
lret
bound
iret
jecxz
sbb
inc
ret
and
hlt
fs
mov
pop
mov
cmp
insl
test
flds
mov
cli
test
in
jl
adc
mov
pushf
in
inc
mov
sub
arpl
jbe
dec
int3
lock
stc
and
sub
pop
xor
test
sbb
cltd
xor
insb
fcmovnb
sub
jmp
shll
jo
jo
aad
stos
lea
cmpsl
out
cli
xchg
adc
repnz
out
sub
adc
test
mov
dec
add
xor
dec
pop
xchg
gs
lcall
dec
mov
mov
sub
mov
push
outsb
adc
xorb
cwtl
in
push
dec
mulb
xor
data16
in
push
insb
inc
loopne
mov
adc
or
and
xchg
dec
mov
adc
test
std
out
cld
lcall
in
stos
mov
gs
xor
sbb
ss
push
sbb
imul
or
sbbb
push
fidivrl
test
sbb
sahf
mov
mov
imul
popf
cmpsl
subl
cwtl
mov
stos
push
push
sub
call
mov
adc
inc
cmc
mov
loop
ja
test
gs
call
pop
fnstcw
arpl
inc
popa
addr16
mov
xchg
adc
mov
sub
xor
ret
jne
and
mov
gs
xor
mov
jmp
mov
cmpsl
push
test
out
in
or
jg
loope
or
and
pop
cltd
das
pop
movsl
aam
call
in
jae,pn
pop
xchg
jae
das
mov
push
push
repnz
aas
push
push
cmp
aam
push
pop
adc
shll
cmp
pop
push
imul
ljmp
or
or
lods
mov
rcl
es
outsl
mov
shrl
push
cmc
xchg
es
in
daa
loop
aad
mov
int3
jg
sub
add
nop
das
out
jae
cwtl
mov
add
imul
rcrb
fisttps
xchg
cmpsl
rcll
inc
and
mov
enter
inc
xchg
push
aam
fdivrl
dec
mov
sti
mov
add
js
pop
sbb
testl
and
push
lods
adc
loop
cmpsl
popa
fbstp
mov
popa
push
push
arpl
jb
divb
inc
jmp
icebp
adc
xor
in
clc
xorl
xor
test
gs
mov
jle
inc
pop
mov
popa
mov
or
arpl
sbb
ret
loope
sbb
das
std
cltd
add
inc
pop
or
mov
cld
pop
or
pop
hlt
nop
xchg
mov
divb
cmp
sarb
addr16
dec
lods
push
arpl
and
pop
adc
loope
and
cmp
arpl
into
leave
pop
xor
and
cld
xor
in
fcmove
lret
das
pushf
in
testl
mov
lret
fsincos
jae
jp
cld
lods
sbb
jnp
into
sbb
lahf
mov
lea
test
adc
adc
jle
pop
outsb
mov
pop
inc
inc
mov
cmp
mov
cs
lret
pop
popa
cmp
lea
jmp
push
andb
out
mov
sbb
dec
or
cvtps2pd
mov
into
insb
lret
data16
inc
push
mov
aas
clc
ret
mov
push
jo
xchg
or
jp
das
div
adcb
cs
in
aad
pop
xor
mov
lods
mov
lods
subl
jmp
add
icebp
repnz
fsubrl
cmp
jecxz
xchg
adc
mov
pop
cmc
xchg
sub
ljmp
push
mov
mov
jno
fcomps
inc
leave
xor
adc
std
ret
repnz
and
jmp
and
ss
mov
push
cmp
lret
or
pop
mov
adc
mov
ds
insl
jno
insb
rolb
xchg
hlt
cmpsb
push
adc
mov
imul
pop
mov
mov
ja
lods
cmpsb
lock
es
cmc
int
cmp
push
sub
push
jl
lret
jmp
cltd
mov
fs
or
andb
add
xlat
fnsave
clc
mov
test
stos
test
jns
cli
push
pop
clc
inc
mov
loopne
dec
std
mov
cs
bound
loopne
mov
mov
pop
sub
aam
jge
pop
lret
jns
mov
and
xchg
and
popf
negl
inc
out
push
clc
xchg
fs
xor
xor
jp
repnz
cmpsb
mov
xchg
fnstcw
rol
dec
add
shl
mov
les
enter
stos
push
mov
push
mov
jmp
jl
pop
or
pop
popf
stc
jle
jns
fs
orb
sbb
rorb
nop
mov
pop
in
jg
addr16
inc
cli
xchg
and
mov
and
outsb
in
or
xchg
sbb
sub
fwait
lds
shl
fistps
mov
shrd
test
icebp
outsb
lds
dec
stc
popf
test
mov
jmp
xchg
dec
cmp
mov
push
mov
mov
mov
jno
outsl
push
cmpsb
fnstenv
and
daa
mov
mov
inc
ficomps
call
dec
xchg
cltd
sbb
sbb
cmp
inc
fidivrs
sub
pop
gs
test
mov
movsl
sbbl
icebp
stos
mov
jne
dec
shr
sbb
fucomip
xor
cmp
adc
xchg
jae
js
inc
lock
dec
call
test
dec
fsubl
dec
loop
add
jns
movsl
fsubrs
push
inc
or
ljmp
jne
or
in
push
sbb
push
in
aam
sub
call
or
int3
into
lret
fcos
in
cmc
adc
movsb
adc
push
test
and
inc
repnz
adc
lcall
and
pop
repnz
push
and
mov
pop
pop
sbb
test
jmp
scas
xchg
xor
ret
shlb
enter
mov
aas
int
lcall
mov
cltd
mov
addl
jns
adc
add
jo
mov
xchg
sub
xor
cmp
stc
sub
xchg
mov
stc
push
test
nop
loop
ret
pop
mov
jg
iret
sub
and
lea
sub
mov
mov
in
xor
mov
mov
sbb
and
mov
insl
inc
shrb
rcl
aad
jo
xchg
push
ficomps
push
test
ret
leave
movsl
cmp
out
mov
or
loopne,pn
pusha
stos
lds
inc
jmp
fildl
dec
mov
add
push
int
mov
push
and
push
movsb
js
xchg
sbb
cltd
popf
push
dec
out
mov
insl
add
int
pusha
xor
ret
out
xor
push
dec
xchg
add
incl
scas
jmp
aas
repnz
xor
in
outsl
rorl
les
addr16
and
pop
push
sbb
pop
inc
imul
shlb
and
scas
cmp
or
push
idivb
dec
pop
mov
jns
jp
push
push
inc
dec
int3
adc
or
lret
lret
cmpsb
jns
enter
sub
adc
sub
lds
and
insb
xchg
rcrb
stc
pop
ret
imul
and
pop
ljmp
mov
push
xor
stos
int
cwtl
and
jno
rcrl
shlb
push
repnz
subb
daa
inc
pop
jnp
negb
lods
imul
add
pushf
outsl
mov
sbb
cmp
mov
pcmpgtd
pushf
push
lret
xchg
push
push
les
sub
add
or
lret
stos
xchg
dec
xlat
adc
push
dec
jge
and
mov
mov
jecxz
leave
js
cmp
lock
pop
cmp
imul
mov
add
dec
pop
push
mov
add
xchg
add
out
and
add
orl
mov
cmp
shl
imul
xchg
stos
roll
in
mov
push
inc
aaa
pop
inc
push
aam
push
lods
test
inc
xor
out
inc
or
mov
cmpsl
push
push
inc
gs
add
jne
stos
testl
mov
leave
sbb
pop
add
push
pop
cmp
jle
mov
jmp
sbb
inc
pop
ja
ja
xchg
mov
add
jge
lret
mov
xor
out
add
mov
cmp
pusha
outsl
inc
cmp
lds
push
jmp
fwait
adc
or
mov
pop
in
push
sub
mov
movsl
add
pushf
push
lcall
push
push
ljmp
jns
push
nop
daa
mov
and
mov
fwait
jle
insb
push
add
mov
movsl
sbb
pop
mov
push
fs
fwait
xchg
int3
je
or
imul
outsb
popa
lods
jns,pn
into
sub
push
cmp
lcall
in
orb
lods
test
or
jmp
dec
data16
cmp
sahf
rcrl
clc
fs
xchg
out
popa
imul
xor
sub
and
adc
inc
popa
movsb
movb
cli
xchg
jnp
jae
push
mov
test
inc
out
repz
pop
lods
pop
cmpsl
and
lret
xchg
cmpsl
jb
ret
std
or
inc
cmp
daa
mov
xchg
xor
xchg
mov
xchg
sahf
sarb
push
and
ljmp
movsl
mov
ss
push
movl
push
js
add
repnz
sbb
imul
mov
pop
mov
pop
xchg
sbb
les
xchg
aaa
movsb
push
mov
loopne
xor
mov
mov
test
and
push
mov
jp
sbb
xlat
je
dec
cmp
int3
xchg
out
sub
sbb
aaa
sbb
mov
inc
push
notb
in
lods
push
adc
cmp
data16
xchg
jns
sbb
add
xor
idivb
cmp
scas
inc
test
gs
arpl
cmp
pop
sub
pop
mov
enter
hlt
loopne
lret
adc
jle
jle
cld
cli
imul
outsb
sbb
mov
cwtl
and
movl
cmp
mov
hlt
and
inc
jnp
jmp
inc
mov
xor
aad
nop
mov
add
repz
mov
test
jno
mov
mov
cmp
dec
loopne
cmp
aaa
lods
cmp
mov
add
cwtl
test
add
imul
stos
int3
fisubrs
cmpsb
mov
daa
and
mov
or
jns
inc
sbb
inc
outsb
in
fsub
xor
aaa
mov
mov
pop
out
jo
sahf
adc
leave
jp
daa
mov
pop
sahf
std
push
sub
insl
shll
and
cmp
ss
or
out
sbbl
xor
and
cs
dec
xlat
rclb
cmpsb
out
cmp
dec
fimull
or
outsb
cmc
inc
add
mov
cmpsl
add
push
add
punpcklbw
movsl
jbe
xchg
js
jbe
lods
lcall
jb
mov
mov
cs
xor
les
ficompl
hlt
lret
cli
xlat
inc
lahf
les
cld
imul
nop
das
adc
neg
pushf
xor
sbb
sub
pusha
int
movsl
jl
fsub
add
inc
jmp
sbb
mov
jg
in
mov
adc
push
mov
add
cmp
fdivrs
sub
or
cmpsb
cmp
mov
add
fbld
popf
jge
cmc
and
into
adc
fadds
stc
int3
loop
push
popf
pop
mov
mov
fnsave
xor
push
sbb
lods
sub
pop
popf
dec
stc
or
mov
dec
lods
enter
push
mov
xchg
fidivrl
push
pop
push
dec
mov
jg
jo
mov
loopne
add
dec
ds
push
sub
cmpb
ror
lret
inc
mov
push
inc
and
lcall
outsb
jle
adc
mov
jno
test
dec
in
aam
xor
adcb
loop
mov
repz
adc
jae
xor
jg
adcb
lods
lret
adc
pop
imul
idivb
scas
mov
or
adc
pushf
aas
mov
mov
mov
je
adc
cld
pop
mov
adc
add
mov
repnz
repnz
xchg
mov
mov
dec
cmp
je
mov
ret
fbstp
inc
fstps
xor
mov
rorl
out
insl
add
mov
mov
mov
insb
sub
lcall
lcall
jbe
add
xor
adcl
and
call
push
je
xchg
shlb
fisubl
movsl
xor
push
out
test
cmp
xchg
jae
mov
pop
dec
push
or
xor
aad
pushf
xlat
inc
xchg
jmp
dec
ds
push
jno
pop
rolb
cmpb
xchg
dec
shrl
lret
repz
mov
sbb
leave
das
add
mov
sbb
arpl
fwait
gs
xor
mov
ficoml
shr
in
add
add
test
pop
in
adc
pop
xor
and
pop
push
and
incl
and
jp
xchg
lods
insl
push
out
lcall
mov
mov
mov
mov
fsubs
jp
outsl
andl
test
call
xchg
movsb
outsl
xchg
ds
sbb
and
sti
or
test
xchg
pop
jb
push
aas
mov
cmc
shll
inc
sbb
lods
shlb
inc
pusha
xor
call
dec
mov
cmc
push
add
scas
ja
and
lock
cmp
xlat
push
sub
ror
scas
inc
push
lret
mov
arpl
mov
popf
inc
fwait
inc
sti
outsl
mov
jecxz
inc
xchg
int3
lret
mov
jmp
test
repz
jb
sbb
mov
dec
xor
and
mov
xor
std
loopne
das
cld
add
test
lret
fldenv
sbb
inc
pop
mov
jb
mov
cli
add
rcrl
mov
icebp
adc
stc
arpl
push
in
mov
outsb
add
and
je
stos
push
adc
aas
scas
pop
cmc
sbb
cmp
mov
dec
imul
jno
pusha
enter
xchg
js
mov
and
push
push
xchg
jmp
dec
sbb
lds
aas
pop
mov
aam
inc
pop
loop
cs
sub
mov
mov
test
pop
add
daa
mov
iret
lret
inc
loope
in
rclb
in
jp
mov
lock
test
cmp
pop
and
sahf
push
dec
jg
in
adc
jecxz
jge
xchg
nop
rcll
into
cmp
test
push
adc
inc
subb
lock
es
sub
xor
jne
iret
pop
and
inc
push
xor
pop
mov
push
cli
arpl
adc
mov
ret
pop
test
ja
inc
mov
bound
add
push
mov
push
xchg
mov
pop
adc
gs
pop
ret
in
jne
cwtl
dec
repnz
and
andb
and
adc
arpl
and
xchg
inc
mov
and
popl
pop
popf
or
sub
loop
pop
jne
add
and
repz
xchg
data16
das
fwait
mov
insl
add
pushf
enter
jbe
shll
mov
mov
add
and
or
xchg
negb
test
shl
and
adc
das
arpl
repz
daa
popa
fst
call
mov
cmp
cmp
cmp
icebp
into
daa
and
xchg
xchg
ror
shl
mov
movsb
jns
or
cltd
jmp
enter
and
and
pushf
pop
aaa
lds
test
and
lods
xor
mov
mov
jbe
popf
cmc
jmp
popa
mov
and
loope
jg
push
push
xchg
jbe
ljmp
or
pop
inc
subb
cmp
adc
push
sub
mov
inc
inc
movsb
in
or
rcrl
dec
jecxz
test
mov
loopne
inc
lahf
orb
lods
in
jl
adc
lret
and
test
leave
aad
sti
adc
mov
fbld
adc
mov
inc
cmpl
sbb
adc
mov
outsl
sub
adc
mov
movsl
inc
fidivrl
idivl
jo
adc
and
fwait
fs
inc
push
adc
leave
movsb
mov
pushf
push
iret
pop
cmp
loope
pop
and
mov
loopne
lds
out
adc
pop
lret
arpl
jbe
mov
js
repnz
adc
mov
push
call
pop
loop
mov
repnz
aam
in
fstpl
gs
rcr
movsb
nop
pop
pop
add
and
xor
mov
add
in
jecxz
call
dec
mov
sbb
mov
testl
insl
sub
pop
sub
loopne
test
cld
add
addr16
pop
cmp
mov
test
inc
mov
add
lcall
andl
out
int
mov
fdivl
cli
loopne
mov
cmp
pop
aam
pop
mov
mov
jmp
xlat
xor
adc
sbb
fwait
cs
mov
mov
lock
cld
roll
cmp
push
sbbl
fcoms
inc
fwait
cmpsl
pop
data16
out
pusha
push
out
loope
or
aaa
or
in
shrb
aad
jecxz
jb
pop
dec
sbb
insb
dec
in
pop
adc
xchg
dec
mov
mov
and
dec
lds
aam
sub
aad
adc
dec
dec
mov
xchg
sub
outsb
dec
fwait
sbb
mov
xorl
int
ret
cmp
jmp
mov
das
inc
pop
enter
jp
fcmovnu
loope
hlt
call
ret
cld
cmp
xor
out
outsb
aad
or
fdivrs
mov
mov
loopne
xchg
xchg
lds
cmp
pop
out
pusha
sar
inc
loop
dec
push
jg
out
push
mov
xor
push
cmpsl
and
sbbl
pop
fwait
sbb
xchg
clc
sbb
cs
push
std
add
push
sub
jns
repnz
xchg
into
pop
or
pop
negb
jge
adc
cmp
sub
pop
sub
xor
lods
add
insl
xor
jae
mov
push
ret
outsb
fwait
pop
xor
nop
mov
push
jle
out
xchg
data16
negl
pop
enter
mov
push
xlat
test
lahf
ljmp
sbb
movsb
fwait
rolb
daa
je
adc
cs
rol
adc
jecxz
lret
mov
popf
lods
push
lcall
or
mov
movsb
lcall
imul
lcall
cld
fcmovu
push
stos
or
adc
hlt
ret
mov
or
adc
xchg
adc
fimull
ss
jo
push
sub
cmp
mov
testb
pop
lock
scas
loop
cmc
ja
cmp
cmpsb
or
orl
pop
sub
shl
adc
iret
adc
leave
flds
or
sub
aad
ljmp
popf
jne
dec
out
inc
movsb
sbb
inc
mov
or
fmull
cmp
ret
cmpsl
aaa
or
mov
repz
fildll
mov
and
xor
push
jne
ljmp
add
js
cmc
mov
shr
or
scas
xchg
sub
daa
ds
cmp
scas
std
jbe
mov
xchg
or
test
add
out
fstp
and
pusha
cmp
or
decb
sub
stos
addl
mov
jbe
out
fisttpll
xchg
cld
lret
push
sbb
sbb
mov
and
xor
adc
xchg
mov
jmp
jbe
xor
and
rcrl
cmp
jmp
inc
add
outsb
sub
aas
pop
lods
leave
mov
lret
cmp
fucom
loop
mov
repnz
enter
dec
jmp
fdivrl
addb
xlat
fisubrs
or
outsl
cmp
adc
test
repnz
adc
lahf
push
inc
xchg
pop
mov
push
icebp
movsb
add
mov
lds
fwait
jg
andl
call
lds
cmc
ficomps
mov
vprotd
enter
cmc
es
inc
shlb
lahf
mov
xchg
and
cmp
out
push
imul
push
inc
xor
cli
popa
mov
ljmp
and
int3
cmc
inc
lds
data16
push
xor
repnz
outsl
stos
scas
stc
xchg
les
insl
add
call
loop
adcl
ds
out
xacquire
mov
cmc
mov
pop
xchg
sete
cmp
out
dec
and
cmp
jecxz
or
push
xchg
sub
loopne
lcall
loope
dec
arpl
int3
dec
jg
jnp
jno
jge
jecxz
lds
mov
pop
mov
jno
test
sbb
test
test
xchg
jl
lret
dec
sarb
aad
push
dec
push
xor
xchg
mov
stc
xchg
mov
add
xchg
dec
lods
lahf
cmc
inc
add
xor
sbb
std
pop
scas
sub
pop
sbb
cmpsl
cmpl
jno
clc
jbe
sub
stos
inc
popf
scas
std
xchg
loope
test
sbbl
inc
lahf
jmp
push
fsubs
adc
insl
sub
cld
jle
jmp
fiadds
cmp
outsl
loop
adc
add
jns
sbb
out
pop
push
scas
jg
in
pop
cmp
and
xor
inc
inc
mov
mov
fwait
mov
aaa
out
lahf
jae
xorl
inc
popf
or
js
pop
sub
xor
jnp
mov
cmp
or
stos
inc
dec
into
lock
add
mov
xchg
test
jecxz
out
in
dec
ret
outsb
jp
lcall
xchg
lods
std
movsb
cmp
fsubrl
and
cwtl
and
clc
add
cld
jne
stc
dec
mov
mov
mov
jmp
fcoms
mov
andl
pop
mov
sbb
jl
fnstcw
repnz
jae
cltd
sub
cmp
jecxz
in
sti
loope
cs
jb
int
shrb
icebp
mov
jl
lret
xchg
pop
jmp
mov
xor
push
pop
in
or
pop
cmp
mov
insl
mov
jno
push
ret
xor
dec
mov
insl
insl
shll
sbb
in
repnz
cmp
lret
dec
cmp
lods
mov
fcomip
ret
outsl
add
lcall
lds
xor
aad
add
fwait
pop
not
cmc
sub
sub
dec
test
mov
push
push
xchg
mov
or
je
mov
sti
cmp
xchg
popa
sbb
aaa
xchg
ss
sub
out
sub
mov
movsb
js
inc
and
stos
xor
push
divl
pop
lds
idivl
inc
jle
adc
lock
xor
push
inc
adc
fidivrs
aad
add
int3
scas
lcall
cmpl
push
pop
add
hlt
and
jae
mov
jbe
mov
lcall
out
inc
roll
repnz
inc
test
clc
adcl
clc
sbb
inc
mov
or
hlt
stc
sub
movsb
idivl
sti
push
hlt
dec
or
popf
sub
add
ret
mov
into
jb
fldt
call
ss
cwtl
mov
lret
mov
dec
sbb
lahf
xchg
test
inc
ret
aas
sub
or
dec
enter
jno
lea
inc
ficoml
repnz
mov
pop
cmp
sbb
xchg
pop
adc
cld
xor
jp
int
push
scas
pop
xchg
pop
add
test
dec
stos
or
pop
dec
in
push
testb
push
jg
shlb
rcrl
mov
mov
lock
or
cmp
es
test
xor
test
xchg
ss
sarl
sahf
loope
int3
dec
hlt
iret
mov
cmp
xor
wbinvd
sarb
add
mov
dec
cmpsb
mov
jb
adc
lds
or
lret
test
movsl
sahf
orb
inc
adc
pop
lahf
lea
rclb
mov
jbe
mov
mov
cltd
pavgw
mov
sbbb
ljmp
pop
leave
cs
mov
adc
xlat
mov
fistpll
fimuls
scas
gs
scas
push
call
and
fstps
cmp
adc
jg
jne
adc
cmpsb
cmp
jns
pop
repz
pop
sub
mov
or
negl
ret
jo
shrl
mov
ror
out
jg
shll
mov
pop
inc
and
pop
cmpsl
popa
clc
fdivrs
xchg
mov
mov
pop
icebp
fisttps
pop
subb
xchg
jo
pop
push
dec
sbb
cmc
adc
cmp
scas
fwait
and
mov
inc
mov
scas
cs
pop
xchg
sub
xor
cli
push
sub
fnstcw
and
xor
xrelease
std
rcrl
sbb
pop
dec
popf
xor
mov
mov
mov
xlat
xchg
sub
push
xor
jnp
movsl
lods
pop
daa
mov
sbb
je
fstpl
aaa
adc
sbb
push
cmpsb
rorb
fxch
sarb
pop
in
cs
xor
iret
lods
add
push
aam
inc
xchg
jle
insl
pushf
cmp
cmc
pop
jecxz
push
lcall
pop
adc
pop
mov
enter
andl
out
jmp
fildll
int3
loope
mov
push
jae
adc
int3
hlt
lods
dec
fsubr
lahf
daa
and
dec
push
fstl
cwtl
daa
xor
insb
jle
nop
lods
inc
ret
add
or
fldenv
mov
mov
mov
pop
xor
ret
cmp
out
cld
icebp
pop
dec
in
sbb
mov
push
mov
xlat
daa
mov
cmpsb
rorl
stc
out
push
rcrb
lea
shrb
ret
testl
lods
lds
push
add
xor
inc
sarb
fiaddl
push
push
insb
imul
xchg
fbstp
fsubrs
pop
mov
das
pop
and
inc
dec
arpl
rcll
xor
repz
mov
lret
fisttpll
lcall
fists
xchg
out
rorb
and
jp
movsb
jmp
mov
cld
fistl
es
ds
sahf
xor
or
mov
pop
outsl
xchg
jae
pushl
mov
adc
push
xchg
shrl
xchg
ljmp
loope
sub
dec
mov
mov
sahf
and
xor
and
adc
inc
lahf
out
add
arpl
mov
mov
xor
cwtl
sub
inc
gs
stos
mov
fstp
mov
clc
xchg
mov
ret
or
out
mov
sub
lret
imull
mov
add
push
mov
lret
mull
mov
movsb
or
xchg
pop
clc
sub
push
fidivl
ret
jnp
in
add
add
test
mov
add
push
idivl
pusha
icebp
pop
adc
stos
testb
cltd
sbb
lcall
or
test
mov
dec
pop
mov
or
pushf
mov
repnz
xor
inc
out
adc
out
int3
xor
out
imul
fadds
popa
lea
icebp
jg
sbb
push
lret
mov
mov
sub
and
lret
sbb
or
xor
fistps
cmc
ljmp
jnp
enter
or
xabort
popf
adc
mov
pop
pop
lock
adc
andb
xor
push
mov
insb
int
loopne
inc
test
dec
pusha
and
out
test
ret
stos
das
inc
dec
loop
add
push
mov
inc
bound
aad
cmp
popa
test
rcl
scas
inc
ficompl
insb
pop
cli
test
movb
xchg
xchg
jge
inc
mov
mov
in
jae
pop
hlt
inc
fbstp
in
jns
aam
mov
jmp
push
sub
inc
push
xor
daa
xor
lret
xchg
xchg
adc
cld
xlat
movsb
mov
mov
cmp
mul
testb
mov
in
inc
pop
or
pop
cmpsl
cmpsl
cmp
ss
push
sbb
sarl
dec
out
sbbb
imul
adc
cmpl
sbb
frstor
mov
jns
and
mov
push
mov
scas
sub
add
cmpsb
push
add
int3
mov
xchg
adc
movsl
lcall
cmp
mov
les
movsb
mov
fcoml
push
test
push
xchg
and
fxch
pop
sbb
jo
fadds
sahf
stc
mov
or
and
mov
bound
adc
lret
xlat
lods
orb
add
fidivs
scas
jl
aad
test
push
add
cmpsl
or
scas
sbb
dec
scas
loope
mov
pop
ljmp
sbb
xchg
push
les
movsl
daa
pop
add
les
sarb
mov
pop
xor
mov
cmp
inc
xchg
jae
jae
ljmp
int
inc
leave
add
mov
pushf
popf
push
je
and
jne
mov
adc
stos
xorb
xchg
mov
xchg
stos
fcmovnu
and
cmp
fiadds
cmpsb
loope
and
cmp
aad
or
pop
popa
lods
mov
inc
push
sub
or
arpl
fidivl
push
cmp
daa
nop
jecxz
inc
fnsave
shll
pop
add
lea
out
popf
and
xor
push
or
pushf
xchg
sahf
sbb
pop
out
imul
add
in
cmp
and
mov
adc
add
fisubs
mov
push
repz
test
add
or
jno
movsb
movl
cltd
dec
outsb
test
dec
push
mov
xchg
out
inc
xchg
mov
ljmp
scas
pop
pop
shr
addl
or
lret
push
aas
jp
xchg
into
and
jne
aaa
jmp
push
ljmp
cmp
xorb
std
xchg
xchg
ss
lret
and
mov
ljmp
inc
in
xchg
or
push
cmpsl
out
adc
mov
rorb
inc
loope
cmp
sbbb
dec
shlb
int
sub
mov
shrl
push
sbbl
orl
dec
adc
mov
and
into
mov
mov
jo
xchg
lock
leave
mov
sub
rcrb
sub
fcompl
pop
sbb
pop
fbstp
into
xchg
push
imul
push
imul
aas
cmp
jae
lret
jg
push
sub
adc
push
popf
scas
mov
inc
jecxz
sbb
cmpsb
sti
mov
sbb
jp
imul
lea
rol
inc
or
arpl
addr16
fs
add
jnp
insl
lods
or
or
out
adcl
mov
sar
jl
repnz
into
push
inc
sbb
add
or
cld
movsb
lahf
fdivl
es
mov
inc
test
scas
adc
lret
lret
inc
pop
fisubrs
loop
add
negb
push
into
int3
mov
sub
xor
sub
js
sub
mov
testl
xchg
sub
int3
sub
sub
inc
pop
adc
in
test
cld
mov
fdivr
fnstsw
sub
pop
jge
mov
mov
idivl
mov
mov
in
or
sub
lret
push
pop
leave
pusha
mov
add
xor
push
in
adc
popf
xor
lret
dec
dec
mov
into
call
ror
or
add
push
mov
inc
mov
mov
add
rcrl
mov
stos
cmp
jae
mov
mov
je
sbb
call
leave
cmc
je
test
adc
fstpl
gs
jnp
jno
mov
daa
jmp
movsb
dec
in
movsb
fidivl
add
mov
and
lret
mov
mov
add
cmpsb
shrl
mov
cmp
mov
cmc
xchg
jns
add
fyl2x
ret
mov
rol
ljmp
fiaddl
jno
ja
jge
jno
mov
dec
mov
dec
sbb
outsl
das
imul
push
adc
xor
icebp
dec
jge
xchg
cs
shrb
add
lea
push
nop
push
lret
xchg
push
lret
push
inc
addr16
shr
mov
xchg
add
lock
sbb
push
repz
shrb
adc
mov
enter
adc
lds
shlb
out
shl
xor
or
mov
sbb
fiadds
cmpsb
ret
mov
fucomip
flds
test
mov
fdivp
fnsave
mov
lret
pminub
mov
sarl
movsb
cmp
pushf
pop
outsl
out
pop
sbb
or
mov
inc
adcb
add
lods
clc
pop
lret
pop
icebp
xor
hlt
jno
jno
pop
int
jne
andl
pop
jbe
mov
js
insl
push
mov
inc
mov
fimuls
mov
sub
adc
xor
popa
faddl
ret
mov
pop
cmpsl
into
fs
jno
mov
outsl
orl
cwtl
into
push
mov
repnz
in
jne
ss
mov
sbbl
xchg
stos
sbb
adc
mov
sarb
pushl
roll
dec
add
xor
push
popf
push
jae
les
push
pushf
sbb
xchg
lret
cmp
lods
notl
fwait
out
or
ret
test
or
aaa
pop
icebp
push
jno
add
shrb
push
cs
add
dec
mov
test
xchg
sub
mov
in
mov
outsl
mov
dec
testb
or
cmp
lea
sub
jbe
loopne
stos
in
jno
aad
push
scas
cltd
xor
mov
inc
out
lds
or
test
cwtl
adc
out
xchg
jmp
mov
call
mov
sbb
sbbb
mov
pusha
ss
insb
dec
icebp
fistpll
js
stos
orl
aaa
add
negl
mov
mov
stos
mov
xchg
lock
inc
cmc
mov
inc
fnstsw
add
hlt
push
mov
je
jne
into
das
jge
adc
out
lret
and
or
push
dec
xchg
sub
hlt
les
cmp
out
push
cli
add
xchg
test
orl
icebp
dec
lret
in
push
mov
out
ss
insl
and
lret
mov
mov
test
jmp
repz
insb
out
pushf
xor
mov
hlt
jg
mov
es
ljmp
mov
jmp
js
inc
or
lock
inc
scas
mov
push
push
mov
adc
cs
popf
pop
cltd
jmp
inc
jb
dec
sub
inc
call
ds
sub
cwtl
push
movsb
cmp
movsb
ret
imul
lret
out
dec
sahf
mov
and
cld
cmpsl
cld
in
jae
fwait
int3
push
movsb
mov
les
mov
mov
pusha
cld
in
adc
xchg
jne
rcrl
daa
lret
in
fidivrs
push
push
sub
repz
xchg
and
iret
sbb
ja
or
mov
ss
and
out
fucom
dec
or
nop
pushf
dec
mov
xlat
into
movsb
lock
pop
add
or
fdivs
mov
pop
xor
out
test
and
xchg
sbb
and
insl
mov
mov
mov
pop
push
cmp
ror
cltd
mov
popf
mov
mov
sbb
cli
adc
push
pop
sahf
jne
enter
out
pop
add
and
xchg
sub
das
mov
aam
ljmp
imul
jns
aam
adc
in
pop
andb
mov
fnstcw
aad
dec
int
mov
shrl
xchg
add
aaa
mov
jno
loopne
cmpsl
int
adc
dec
loopne
and
mov
mov
xor
xchg
and
mov
push
and
sub
add
inc
lcall
adc
add
jno
shlb
pop
fimuls
lea
out
outsl
or
lea
mov
cmc
pop
cmp
in
loope
jl
scas
mov
mov
popa
cli
mov
test
fadds
dec
adc
in
outsl
sbb
sub
push
pop
dec
xor
pop
das
jnp
xor
sub
dec
sub
clc
lret
jnp
pop
jb
sub
pop
pop
mov
sub
inc
cld
mov
xor
mov
dec
mov
sbb
daa
xchg
push
fdivr
iret
bound
and
jp
or
in
push
movsl
push
xor
xchg
gs
mov
inc
call
mov
or
jge
fwait
and
stos
xchg
fstl
stos
mov
in
addb
push
out
fs
imul
shrb
idivb
orb
int3
pusha
xor
push
and
push
ret
rcrl
jbe
mov
pop
cwtl
ja
cwtl
imul
mov
call
orl
push
popa
mov
push
xchg
inc
mov
ss
lods
mov
ret
jl
sub
adc
mov
pop
hlt
mov
sub
sub
add
iret
in
test
push
xchg
pop
imul
push
mov
mov
jecxz
xor
in
test
ret
xlat
insb
out
xchg
das
and
and
cli
push
repnz
dec
lds
cmp
int3
mov
ss
imul
dec
cmp
jo
mov
ja
fldl
cwtl
add
dec
cmp
test
cmp
mov
sbb
sub
push
js
jp
mov
jbe
das
test
jmp
clc
stc
leave
inc
loope
es
pop
movsl
jbe
cmp
jge
lret
std
fistpl
jbe
mov
adc
fldenv
mov
cmp
cmp
test
clc
mov
jbe
mov
mov
jno
push
scas
adc
push
int3
dec
cmovns
adc
mov
sub
ret
cmpsl
std
es
push
pop
push
das
ret
cwtl
mov
jo
loopne
mov
repz
mov
orl
mov
pop
in
cmp
push
sarb
sbb
mov
js
notb
jns
imul
ficoms
sbb
mov
push
imul
stos
nop
adc
push
dec
movsb
movb
mov
out
sub
cmpsb
ja
add
mov
add
lock
sbb
jnp
outsl
push
mov
push
lea
cwtl
mov
or
repz
mov
shrb
push
push
gs
iret
shll
movsl
cmp
hlt
push
out
inc
push
hlt
jno
jbe
push
or
cmp
mov
test
fstpt
xchg
mov
out
pop
pop
pop
imul
lods
jl
pop
sti
movb
xchg
lods
lret
fsts
fs
aas
rclb
test
xchg
int
jae
in
cmpsb
adc
shlb
arpl
js
cmp
xchg
add
call
pop
insb
call
push
popf
test
mov
es
movsb
pusha
stos
cmp
fldcw
fdivrs
mov
lahf
mov
ret
hlt
and
mov
test
in
cmpsl
mov
es
je
cli
or
int
test
dec
and
jnp
mov
fs
cltd
inc
aas
bound
andb
jbe
jge
mov
add
adc
inc
repnz
pop
jo
mov
mov
cmc
jns
jo
dec
mov
sbb
dec
mov
mov
ffreep
pop
adc
aas
or
daa
mov
mov
add
in
aas
inc
cwtl
out
cmp
lea
fwait
mov
inc
rol
inc
mov
push
repnz
jl
or
xlat
outsb
rcrl
cmpsb
cmp
repz
mov
addl
mov
rcrl
push
mov
or
dec
loope
ret
dec
fiadds
jne
pop
inc
mov
loope
sbb
sbb
in
in
adc
push
mov
and
inc
bound
or
fldl
push
mov
fsub
push
mov
and
or
inc
shrb
nop
sbb
inc
mov
imul
push
pop
dec
in
cmpl
dec
add
mov
adc
jae
xor
xor
mov
xor
inc
jmp
insl
test
or
lods
cmc
add
xchg
push
leave
jno
mov
ljmp
data16
xchg
sub
xor
cmp
aas
or
imul
ret
mov
mov
inc
xlat
push
jecxz
iret
xchg
je
jno
mov
loope
push
in
fiadds
mov
add
sbb
ds
jl
subb
aas
jle
jno
enter
popf
fmul
or
cld
cmp
pop
in
and
lahf
test
lock
or
stos
sbb
adc
adc
xchg
cmp
inc
mov
pop
push
xor
in
inc
push
shrb
je
sub
mov
pusha
neg
mov
andb
je
and
daa
loope
adc
xor
pop
mov
jp
mov
xor
ficomps
jmp
imull
ret
inc
sub
jmp
vpsllq
pop
jo
iret
and
mov
mov
push
sub
cmp
int3
jbe
fsubs
or
xchg
aam
or
pop
pushf
xor
xchg
mov
pop
xchg
mov
mov
into
mov
subb
push
cltd
mov
sub
pop
pop
es
in
arpl
test
push
cwtl
mov
pop
ret
pop
mov
mov
test
add
add
mov
jbe
and
es
rcr
cmp
mov
bound
mov
mov
data16
lret
jne
inc
in
ror
pop
add
aam
add
mov
cmpsb
add
mov
aaa
leave
dec
add
stos
leave
rcrb
push
cli
jb
movsb
mov
and
dec
sub
xor
loopne
sbb
imul
push
iret
jnp
add
in
xor
xchg
test
xchg
push
push
push
inc
pushf
inc
rcll
adc
xchg
pushl
int
and
popf
test
mov
das
xor
ljmp
jno
adc
xor
add
notl
out
outsl
cmp
xchg
in
sub
fstpl
es
std
shll
cmpsb
scas
xor
jbe
fcmovbe
cmp
lret
loopne
call
dec
fidivl
outsb
cwtl
mov
andb
nop
push
movsb
mov
adcb
and
or
outsl
adcb
cld
addb
iret
shrb
mov
and
pop
aaa
and
gs
cmp
mov
pop
stos
scas
icebp
into
pop
or
xchg
cmc
dec
dec
test
fucomp
in
sar
and
addb
pop
cld
jmp
lods
lret
push
push
cmp
push
sbb
fiadds
jbe
pop
xchg
js
jb
loopne
int3
and
test
xchg
fdivs
loope
iret
dec
loop
jmp
cmp
add
sub
repz
iret
ret
mov
push
shlb
outsb
in
pop
scas
roll
cld
ret
or
pop
xor
mov
adc
outsl
xchg
or
decb
lahf
das
sbb
xor
lds
mov
jmp
aam
loopne
movlps
mov
mov
jno
clc
rolb
loopne
je
mov
enter
or
push
inc
pop
mov
push
js
xchg
mov
jo
je
fdivs
or
cld
dec
test
inc
lea
xchg
push
sbb
inc
insl
lahf
jg
lahf
jnp
nop
ja
xchg
das
mov
lret
inc
out
jg
rclb
mov
call
mov
aad
bound
call
xchg
add
ret
aad
imul
lahf
fwait
sub
lahf
ss
and
pushf
test
inc
and
call
fdivl
push
mov
ljmp
jge
enter
xchg
xchg
repnz
fwait
nop
clc
loope
test
and
fwait
je
stc
push
ss
das
pop
faddp
cltd
mov
jmp
jo
aas
lods
jmp
cwtl
daa
fsubs
aaa
lock
pop
cmpsl
mov
shll
loopne
cwtl
lods
pusha
mov
sbb
inc
mov
mov
sub
in
sbb
push
inc
push
dec
dec
jne
fst
cmp
dec
mov
rcrl
test
cmpsl
mov
dec
xor
fdivp
push
hlt
pop
ss
inc
mov
dec
subl
lock
mov
into
sub
pop
pop
cltd
dec
push
icebp
jns
in
ja
into
mov
sbb
fldt
and
dec
loopne
icebp
mov
sub
testl
ja
push
in
xlat
xor
call
and
es
lahf
push
cmpsl
cmp
out
add
inc
jae
lcall
cwtl
das
or
imull
sub
xor
add
push
mov
or
jno
incl
push
loopne
dec
aas
mov
cld
and
movsb
cmp
xlat
ds
jnp
adc
sti
adc
ja
jae
mov
push
cli
inc
xlat
cmp
jo
call
stos
dec
and
inc
test
and
clc
push
loopne
rcrb
in
push
std
or
loopne
loope
mov
mov
lods
inc
dec
pop
inc
int
iret
aas
cmpsb
clc
nop
mov
jg
and
jge
int
add
push
xchg
sub
mov
adc
stos
sbb
xchg
lods
icebp
add
add
pop
testb
fnsave
insb
add
lods
mov
ficoms
fld
and
jbe
pop
lock
ja
inc
dec
bound
dec
ljmp
ficoms
aaa
push
and
mov
inc
imul
jge
pop
cmp
jp
jmp
cmp
mov
adc
and
iret
imul
mov
push
pop
jb
sub
xlat
mov
sbb
lods
adc
or
xchg
out
cmpsl
ret
clc
cltd
pop
cmp
jbe
pop
and
cmp
test
adc
lret
adc
out
icebp
cltd
xor
outsb
jl
and
dec
cwtl
jle
inc
sub
pop
xor
xchg
and
lahf
in
ss
sar
jecxz
pop
iret
inc
adc
repnz
and
fbstp
enter
shll
push
xor
pop
cmp
xchg
lods
adc
scas
jle
jnp
jbe
adc
and
xchg
stc
jle
scas
cmp
in
pop
iret
dec
fisttpl
jae
cmpsb
hlt
roll
pop
sub
adc
mov
xlat
jmp
negl
adc
or
sbb
push
icebp
ljmp
daa
outsl
ret
orl
lock
xor
adc
or
fcomps
nop
pop
jmp
xchg
push
pop
das
mov
ja
shll
inc
pop
adc
sub
aam
pop
xor
in
jecxz
push
add
sub
inc
insb
push
lods
push
out
dec
inc
clc
fbstp
pop
into
lahf
pop
scas
mov
int3
les
mov
sahf
rorb
xchg
xor
vminss
or
fnstcw
mov
movsl
fs
test
test
push
fsubl
leave
add
loop
rorl
ret
cltd
stos
mov
push
movsl
int3
shrb
ja
jbe
sbb
cwtl
adc
and
mov
mov
les
or
xor
addb
cli
jns
pop
mov
cmp
sbb
decl
xchg
test
ja
cmp
jb
inc
fstps
dec
es
mov
iret
imul
sbb
in
popa
push
in
xchg
sbb
das
mov
out
test
fs
enter
push
and
fsubs
jne
leave
and
or
cld
lods
push
mov
cmpsl
lods
loope
jb
cld
lock
iret
js
push
xlat
or
cld
jo
fcmovbe
neg
push
mov
mov
sub
bnd
aam
pop
rsm
dec
dec
arpl
push
push
mov
outsl
cmp
popa
repnz
gs
inc
mov
mov
mov
sahf
shlb
jno
mov
xlat
inc
es
inc
hlt
adc
ljmp
pop
lcall
popa
dec
adc
jns
sti
inc
bound
aas
rcrb
mov
lods
and
hlt
int3
sbb
push
jo
jg
cs
pop
icebp
lahf
lret
mov
inc
inc
lahf
addl
mov
sub
lods
mov
and
mov
sub
xchg
in
xchg
xchg
or
pushf
lds
xchg
rclb
or
and
dec
fistpl
adc
or
fxch
and
pop
xor
hlt
shr
and
add
in
lret
adc
cmp
jle
mov
sub
pop
xor
dec
testl
cli
lret
mov
movsb
mov
cmp
int3
adc
mov
fdivrl
add
sub
enter
push
hlt
or
lock
leave
mov
pop
xchg
in
or
mov
mov
cmp
fiaddl
fidivrl
mov
xorb
sbb
outsb
xlat
loopne
dec
aam
pop
adc
pop
jmp
push
popf
lock
inc
xchg
jnp,pt
sbb
xchg
pop
xor
sbb
mov
outsl
dec
mov
jo
push
loop
lock
in
and
imul
and
xchg
in
aad
roll
cmp
mov
dec
lcall
sbb
decl
pop
jbe
xor
rcl
sub
fldt
cmp
mov
xchg
push
xchg
lods
fwait
or
or
cli
loope
lock
sbb
mov
das
cmpsl
add
pop
or
imul
int
repz
jle
mov
push
mov
mov
push
cmpsl
fsubs
add
negb
leave
mov
push
pop
lcall
jl
divb
sti
sbb
mov
fmuls
sbb
mov
in
cmp
xchg
dec
in
std
cmp
cs
mov
mov
mov
inc
cld
push
mov
xor
push
clc
cmp
mov
fcoml
ret
jnp
enter
lock
mov
add
push
cmp
push
stos
inc
cmp
jg
pusha
mov
sti
fildll
xchg
fcompl
in
mov
push
xchg
mov
popf
xor
dec
loop
mov
xor
ja
cmc
rolb
shlb
inc
arpl
mov
adc
mov
fwait
adc
dec
mov
pop
dec
pushf
mov
into
lret
sbb
mov
pusha
and
mov
pushf
pop
push
loop
mov
les
inc
or
lret
pop
icebp
cld
in
xchg
int
js
push
jecxz
xor
es
insl
pop
dec
mov
and
shll
add
icebp
movsl
je
jl
mov
and
aaa
ss
out
push
jp
push
pusha
lahf
subb
pop
mov
stc
push
out
pop
enter
outsb
jg
scas
mov
mov
mov
stos
enter
xchg
jmp
mov
scas
popa
jg
push
fsubl
or
mov
sub
shlb
jnp
popa
outsl
repz
add
jle
cmp
test
pop
cmp
imull
dec
fwait
and
lcall
sbb
mov
jbe
push
mov
rclb
dec
sbb
mov
out
push
test
fisttpl
mov
dec
in
sbb
and
sahf
mov
mov
nop
mov
lcall
js
sub
lret
test
cld
call
push
ljmp
call
test
dec
aam
xorb
rclb
pushf
dec
fucomip
int3
arpl
ret
add
sub
mov
cmp
popa
sahf
cwtl
fldcw
adc
cld
push
pop
xor
addr16
call
scas
into
sbb
pop
dec
out
ss
les
mov
sub
fdivrs
mov
loopne
ret
fimull
lahf
xor
imul
dec
lea
sti
xchg
lods
cmp
and
ret
lcall
sbb
movsl
jge
cmp
dec
jecxz
or
add
ja
test
js
outsl
and
or
adc
add
data16
add
jb
shlb
or
jnp
or
je
and
xchg
or
imul
mov
pop
and
jg
push
jmp
add
pop
femms
add
cltd
std
mov
lock
addr16
xchg
test
jae
xchg
pusha
testl
rclb
test
adc
orl
mov
test
gs
inc
pop
push
pop
ret
xchg
sub
mov
add
pop
mov
mov
pop
stos
cmc
cli
gs
cli
xchg
addr16
or
cmp
lods
mov
add
mov
push
popa
jo
in
jae
cmp
inc
aas
push
in
js
pusha
push
aam
jp
js
mov
popf
dec
stc
int3
mov
lret
xlat
iret
pop
and
into
out
shl
mov
sub
dec
dec
or
shll
jle
cmp
inc
gs
xchg
mov
and
inc
sub
jle
jns,pn
rcll
push
adc
mov
mov
fs
sahf
add
xchg
or
pop
lock
xor
xor
jmp
cltd
and
sbb
ja
flds
insl
dec
imulb
into
popf
mov
add
clc
xchg
xor
cmp
gs
pop
lcall
add
xchg
shlb
data16
mov
aad
cmp
cmp
dec
jp
adc
stos
push
sub
cld
jle
push
or
adc
cmpsl
push
cld
fsubrs
mov
out
mov
mov
inc
jns
cmove
inc
xor
mov
inc
mov
sub
test
jae
mov
popa
mov
fs
jne
add
xchg
lahf
aad
xchg
and
lret
mov
pop
iret
fisttpl
cli
mov
mov
xchg
test
fimull
cmp
ret
ficoms
popa
xchg
push
popf
pop
shrl
andl
pop
andl
cmp
lods
dec
pop
shl
outsb
xor
and
pop
pop
push
lods
pop
out
or
fnsave
into
xor
xor
icebp
mov
fsubrs
fcoms
dec
hlt
fiadds
shr
aam
pop
and
into
sub
dec
inc
movsb
inc
lods
inc
jne
inc
xlat
imul
mov
in
or
or
outsl
sbb
out
add
xchg
inc
inc
cmp
ja
aaa
dec
sti
gs
out
push
divl
sub
or
mov
pop
aad
mov
lea
sysexit
sbb
ret
xor
jecxz
cmp
rol
mov
movsl
lret
add
test
inc
mov
stc
xchg
mov
xor
repz
imul
addr16
jae
or
mov
push
and
insl
sbb
cmpsb
imul
sbb
dec
int3
rolb
dec
and
mov
jb
jnp
cmpsl
adc
mov
repnz
add
pop
push
and
movsb
lock
add
and
xor
push
sub
enter
imull
xchg
lods
pop
jmp
lret
fwait
xor
icebp
jl
xchg
xor
mov
and
inc
loop
xchg
add
test
sub
dec
movaps
sub
dec
adc
cltd
adc
or
add
and
call
pop
out
or
and
pop
jbe
dec
xor
or
push
test
push
movsl
dec
imul
imul
dec
call
or
stos
jg
loopne
push
outsb
rorb
popa
mov
dec
in
mov
push
push
in
aam
or
jge
sbbb
fldl
push
xchg
and
mov
jae
inc
push
inc
mov
fimuls
adc
pusha
dec
xor
xchg
loope
cmpsl
inc
ss
xchg
and
je
call
mov
bound
jge
cld
scas
and
sbb
bound
fsubrl
test
icebp
and
inc
sbb
insl
inc
mov
insl
fisttps
adc
std
inc
dec
xchg
sub
jmp
mov
bound
jp
jae
xor
loopne
inc
pushw
mov
movsl
out
mov
sub
jbe
mov
fwait
adc
sub
aaa
sti
fldcw
lods
inc
adc
xchg
push
jo
dec
std
mov
ljmp
ss
lahf
in
sub
pop
out
shrl
pop
jo
or
sbb
bound
iret
lcall
adc
jmp
pop
mov
popa
into
aam
cmp
ret
shl
pop
call
fldl
cmpl
cmpsl
stos
inc
jge
repnz
inc
test
adc
pop
cmpsb
shlb
add
push
outsl
cmp
and
insb
lea
inc
cwtl
repnz
enter
jecxz
sbb
mov
push
outsl
popf
fldenv
imul
das
inc
call
dec
ljmp
cli
sbb
pop
jmp
add
push
out
pop
mov
dec
hlt
jne
es
sahf
scas
aad
jmp
scas
cmpsb
dec
dec
xchg
repz
rcrl
push
dec
cli
lea
sub
sub
inc
add
repnz
pushf
sbbb
shrl
cltd
stos
imul
mov
cmpsl
jne
je
sub
repnz
mov
or
dec
or
jb
or
xchg
popf
lods
mov
outsl
cmp
mov
and
inc
sbb
enter
rcrb
test
lahf
dec
pop
dec
ds
outsl
mov
divb
fiaddl
dec
pop
insb
stc
call
les
mov
xor
test
mov
xchg
push
outsl
xchg
cltd
adc
push
xchg
aad
aaa
int3
inc
mov
into
iret
push
inc
aad
push
test
xor
mov
pusha
clc
stos
xor
ds
jg
repnz
pop
popf
popf
xor
pop
lods
inc
mov
push
adc
fcoms
adc
xor
mov
sub
push
add
mov
outsb
cmc
adc
xchg
adc
insl
andl
scas
sub
inc
push
mov
sub
xchg
leave
ret
lock
jns
out
das
cmpsl
pop
push
xor
lret
xchg
iret
mov
jbe
pushf
jg
adc
sbb
ret
repnz
adc
cltd
in
mov
jne
aad
mov
xchg
xor
fnstcw
jg
ret
jle
das
imul
lret
mov
aam
push
push
mov
sbbb
popa
fidivrs
in
push
imul
pop
js
xchg
sub
arpl
pop
lods
pop
in
dec
loope
jae
mov
clc
icebp
mov
inc
mov
fists
lcall
outsl
xor
cmpl
imul
test
xor
cmp
std
dec
repnz
adc
adc
inc
lret
add
jbe
cmc
daa
mov
or
shrb
dec
mov
popa
push
lcall
pop
push
pop
test
imul
cld
jg
xor
xor
pushf
xor
jno
dec
sbb
inc
int
jb
lock
aad
and
push
cli
loope
jp
ljmp
imul
jb
xor
popa
outsl
or
insb
lcall
add
in
jns
leave
movsb
cmp
sarb
dec
cltd
ret
loop
jmp
mov
dec
xor
ds
add
sbb
jo
jbe
xchg
jg
mov
xchg
jb
sbb
aaa
scas
add
xchg
pop
jl
mov
dec
pop
mov
dec
lret
shr
gs
nop
push
sahf
add
enter
int
mov
int
pop
ss
push
int3
xchg
test
pop
lea
fbstp
sub
mov
std
aad
mov
daa
inc
pop
pop
xchg
xor
mov
stc
add
xchg
lea
xlat
cwtl
xchg
in
notb
test
leave
cmp
ficomps
imul
pusha
shll
lds
scas
inc
inc
sarb
pop
daa
push
and
cltd
mov
dec
adcb
ret
les
pop
push
imul
pop
jmp
sahf
scas
loopne
mov
in
xor
mov
insb
in
popf
jo
sbb
outsl
sub
in
adc
in
mov
pop
mov
nop
cmp
pop
repz
xchg
sbb
adc
mov
mov
das
xchg
mov
mov
inc
call
adc
in
sub
xchg
mov
inc
testb
or
mov
xor
cmpsl
mov
and
or
mov
scas
mov
leave
sahf
lods
push
dec
scas
dec
repz
adc
cltd
loop
lret
fistpll
xchg
xorl
adc
aaa
iret
push
lret
fldenv
xchg
sub
inc
mov
push
ror
pop
loope
int3
mov
add
or
dec
cmp
xchg
test
loop
inc
mov
jb
jnp
mov
ja
xor
jp
loop
ret
add
mov
rcll
add
mov
daa
call
xor
jle
or
cmp
push
and
add
pop
and
fsubrl
jecxz
mov
dec
leave
cmp
jae
popf
mov
dec
aas
xor
out
sbb
xchg
dec
dec
mov
mulb
stc
cwtl
add
in
movsb
xchg
adc
mov
ds
je
xchg
lock
leave
pop
inc
outsb
icebp
in
icebp
xor
push
jns
imul
aaa
add
fiaddl
or
out
std
jae
testl
mov
aad
les
into
ffree
push
stc
nop
xchg
ljmp
push
or
push
stos
and
js
or
push
and
int
iret
out
mov
fldenv
dec
mov
arpl
inc
int
add
ret
cmpsl
fisubrs
pop
mov
lock
hlt
fyl2x
fsubr
push
ret
push
sub
jo
sbb
mov
iret
lds
imul
out
and
jp
pop
icebp
int
xchg
hlt
jle
es
ret
add
pusha
negl
fiadds
sti
cmc
adc
fildll
mov
cmp
add
out
add
es
and
inc
inc
mov
lea
pop
out
bound
out
and
mov
inc
push
inc
divb
jle
pop
imul
rolb
cltd
inc
lcall
mov
sbb
and
loop
xchg
pop
adc
js
outsb
lahf
popf
cltd
mov
fs
aad
cmpsb
add
jle
and
rorb
jnp
outsl
push
cmp
pop
cmp
add
es
push
test
jmp
or
call
imul
shrl
ds
add
imul
daa
xchg
fs
dec
mov
repz
hlt
and
decb
dec
add
jp
rcrb
adc
dec
rclb
notl
jae
xor
jne
dec
lds
stc
jg
subl
cltd
and
test
adc
or
xchg
cltd
sub
pop
testb
popa
fnstcw
add
mov
outsl
out
aad
xchg
rclb
movsl
mov
xlat
mov
inc
pushw
jmp
sbb
fsubl
mov
jo
dec
call
xlat
mov
cld
ret
xchg
adc
es
dec
icebp
test
inc
fidivrl
js
mov
pop
mov
xor
repz
mov
in
adcb
adc
jno
imul
sub
pop
lods
dec
xchg
and
cwtl
popa
icebp
mov
jae
sub
xor
dec
leave
or
dec
sbb
or
jge
or
gs
xor
in
aas
push
jno
jecxz
or
pop
lods
add
das
lds
xor
lods
mov
rcrb
pop
pop
push
cld
lods
ficomps
and
and
out
stc
std
mov
int3
aas
cmp
mov
aad
sbbb
sbb
jge
cmc
mov
test
in
sub
fisubs
int
lods
inc
aam
roll
or
mov
cltd
negl
test
addb
daa
rclb
insl
out
fcompl
cmp
push
in
sbb
loope
idivl
arpl
fadds
cwtl
daa
xorb
mov
int
xor
jl
inc
js
mov
jae
call
mov
ds
jmp
pop
sub
adc
out
jbe
pop
js
and
push
adc
mov
pop
inc
mov
lcall
in
nop
mov
aas
sti
in
sub
sbb
cmc
dec
ja
jns
jl
stc
into
add
outsl
jns
mov
pusha
ja
jg
mov
test
imulb
mov
pop
mov
js
int
sub
jg
jl
scas
outsb
add
pop
orl
xchg
aad
mov
jo
adc
aam
lret
or
in
push
xor
imul
ss
sar
hlt
mov
dec
addr16
mov
sbb
in
aaa
call
movsl
mov
jmp
jg
mov
negl
xor
je
adc
add
jg
xchg
mov
ret
jnp
lret
bound
cmp
rorl
push
mov
jmp
jb
in
push
xchg
ja
pop
hlt
in
subb
sbb
lahf
mov
mov
mov
inc
ja
rcll
dec
and
cmp
xchg
cmpsl
or
lea
scas
pop
pop
call
fnsave
pop
dec
cmp
pop
daa
mov
test
lahf
sub
adc
add
inc
arpl
mov
jl
into
xchg
or
enter
xchg
loope
insl
adc
insb
xchg
in
xchg
cs
adc
add
push
and
ja
subl
shlb
andl
jmp
ret
mov
aam
or
cs
shr
inc
imul
jmp
lahf
cmp
outsb
clc
int
lods
repz
inc
fcmovbe
inc
push
xchg
lret
sbb
ds
jns
pop
test
add
subb
data16
fsts
mov
out
inc
push
adcb
push
decb
aas
xchg
mov
pop
mov
sbb
lds
xchg
scas
mov
inc
push
lcall
inc
push
jl
je
frndint
rcrb
pop
push
loope
lea
in
and
int3
ror
push
inc
lods
push
sub
shll
idivb
sub
fwait
insb
lret
lret
aas
cmp
in
mov
in
mov
notb
cwtl
push
je
std
loopne
lods
imul
bound
dec
sbb
push
inc
and
pop
jbe
mov
or
outsl
xlat
idivb
pop
pop
repnz
je
xor
sahf
mov
sub
hlt
mov
out
mov
mov
mov
and
xchg
mov
lea
mov
jg
sub
mov
add
stc
imul
jbe
inc
mov
jns
fucom
addb
jno
jecxz
pusha
call
imul
das
incl
lods
cmp
push
daa
push
ja
add
das
into
inc
cmpsl
jle
out
mov
in
icebp
rcl
adc
cmp
add
mov
stos
jo
lret
pslld
jge
loope
sbb
dec
add
and
sbb
inc
xor
jle
inc
mov
mov
mov
inc
test
fwait
jbe
push
fcmovbe
xchg
and
imul
dec
leave
adc
mov
sbb
jo
xor
jmp
mov
mov
add
dec
test
shlb
frstor
xlat
push
fwait
lret
das
dec
scas
aad
pop
popf
push
jg
iret
hlt
cmpsl
popf
je
adc
out
shlb
jp
mov
push
adc
xor
ja
popf
add
inc
mov
and
scas
mov
les
cmp
mov
adc
push
and
adc
xor
cmpsl
jae
je
lahf
addr16
cld
enter
pop
les
mov
cltd
xchg
sbb
and
hlt
pop
repz
add
mov
into
out
fwait
push
repz
leave
test
dec
pop
test
pop
lahf
mov
push
push
lahf
sbb
es
lods
aad
dec
xor
decl
add
addr16
add
adcb
push
pop
pop
lahf
mov
nop
and
adc
sbb
adc
fisttpl
cli
fnsave
clc
or
insb
enter
sub
mov
outsb
inc
addr16
test
cs
pop
movsl
lcall
sbb
aad
inc
push
movsl
addl
ret
loope
inc
popa
ja
iret
es
add
or
adc
push
popf
rolb
aaa
cmc
mov
and
push
cmp
fs
div
adc
xchg
dec
fldl
push
lahf
out
sub
ror
inc
lahf
lods
lods
pusha
imul
pushf
addl
push
pop
dec
fists
add
shll
aas
jle
xor
int3
or
stos
cmp
adc
out
pop
ljmp
sbb
jmp
lret
pop
or
push
jae
or
jb
pop
jl
pushf
fs
icebp
icebp
jle
ja
add
popf
add
lods
add
faddl
dec
xor
adc
mov
int3
rorb
mov
dec
popf
pop
mov
xchg
das
movb
out
xorl
shl
and
sbb
mov
or
stos
enter
cmp
adc
movsl
inc
fstl
xchg
ret
insb
sbb
test
jbe
cmpsb
xchg
mov
mov
xchg
sub
sbb
mov
mov
mov
sti
xchg
add
sub
xchg
into
adc
mov
lahf
xchg
jmp
shr
sbb
ds
imul
jne
xchg
cld
inc
call
rcrb
loope
and
int
push
loope
out
xchg
xchg
pushf
popa
je
aas
cmc
mov
pop
jmp
mov
lods
popl
sbb
ss
ret
stc
cmp
gs
dec
or
dec
push
psrad
jnp
in
sub
int
pop
aas
inc
sbb
leave
pop
dec
xor
xor
sbb
fwait
pop
ficompl
pop
jne
xchg
cmpsl
cld
shl
repnz
dec
aam
adc
shr
cwtl
pop
movsl
cmp
jno
xchg
ss
pop
in
mov
jmp
loope
mov
pusha
cmc
or
jmp
or
stos
sti
mov
lcall
in
mov
movsb
mov
lcall
sti
rcll
inc
and
outsb
mov
aam
jne
hlt
cmp
mov
bound
inc
fisttpl
fsubs
test
inc
mov
mov
and
mov
sbb
dec
inc
repnz
lods
stos
lock
int
popa
jns
js
fidivs
xchg
fstpt
dec
ljmp
or
daa
add
push
not
push
inc
jne
mov
lods
mov
inc
pop
and
call
idivl
jg
mov
push
mov
or
or
rol
sahf
es
pop
push
jo
sub
test
in
jne
clc
enter
pop
aas
or
rorl
shlb
shr
mov
sti
or
pop
or
push
dec
test
sub
mov
fdivr
cli
int
xor
and
mov
cmp
les
pop
addr16
stos
dec
dec
mov
dec
lret
push
jno
aam
out
sub
cmc
and
cltd
pushf
sub
shlb
outsb
js
cld
sbb
mov
fisubrs
test
test
adc
stc
lock
mov
dec
sub
ret
in
dec
dec
ret
inc
ss
out
cmpsl
mov
nop
mov
push
dec
lfs
out
ja
ljmp
xor
pop
ret
pop
lods
fadds
into
out
in
xor
add
lock
sub
sub
mov
jge
lock
in
and
sahf
cmp
sbb
lcall
xor
adc
lods
ljmp
popf
mov
cmp
rclb
decl
xchg
loopne
push
mov
scas
stos
inc
cli
shll
cmp
push
icebp
in
jns
cmp
sahf
popa
mov
pop
adc
mov
js
pop
into
lahf
mull
jg
inc
or
xor
cld
je
or
jb
xor
fstpl
mov
and
sbb
jo
mov
outsl
aad
push
pop
testb
pusha
dec
lods
inc
jnp
xor
lcall
cmp
insb
add
mov
or
cs
or
imul
cmc
mov
jns
scas
insl
ss
and
pop
lock
adc
jo
movsl
jns
or
fnstcw
stc
in
sub
les
je
idiv
in
in
and
and
fsubrs
xor
xor
inc
fildl
mov
bound
enter
xchg
ljmp
loope
data16
add
cltd
dec
idiv
adc
fmul
fmuls
out
add
sub
ljmp
lock
popa
mov
adc
lcall
lcall
xchg
fcompl
test
into
push
sbb
jle
sub
inc
jmp
or
pop
hlt
mov
scas
fucomip
pop
cmp
xchg
cld
push
lret
stos
call
xchg
int3
inc
push
mov
push
add
shrd
fnstenv
adc
or
sub
popf
xor
cltd
pop
xor
mov
or
hlt
sub
mov
mov
loop
and
push
imul
push
jo
cmp
push
repnz
pop
imul
sbb
lcall
mov
movsb
push
jb
xchg
in
dec
shl
je
sub
dec
arpl
outsb
adc
dec
mov
mov
mov
mov
or
cmpsb
out
sbb
push
mov
out
rcr
jne
cwtl
push
push
ret
and
and
push
mov
pop
mov
jecxz
mov
fdivrl
popa
inc
out
int
pop
dec
cvtps2pd
pop
xchg
sub
das
mov
popa
push
lcall
orl
movsl
in
insb
js
cmp
imul
lock
ja
push
add
push
push
das
and
jo
ret
frstor
dec
push
idivl
outsb
add
sti
xchg
adc
jmp
pop
sahf
outsb
lds
lea
jle
pop
cmp
lods
fcoms
in
inc
pushf
sbbl
mov
or
sbb
out
sahf
data16
pop
aam
test
push
xor
xchg
mov
dec
sbb
in
jo
lock
sti
call
or
adc
mov
jo
jns
xor
dec
arpl
mov
test
adc
cmpsb
add
mov
push
jbe
shrb
lea
push
test
dec
lret
pop
imul
mov
stos
fcmove
fisubl
imul
xchg
add
scas
or
sub
enter
sbb
outsb
test
inc
mov
roll
mov
jmp
popf
gs
aas
add
adc
xor
inc
lds
movsb
bnd
mov
lahf
pop
xchg
mov
jge
in
xlat
addr16
inc
lock
jle
stc
dec
lods
lahf
mov
in
loop
push
repz
insl
jns
jno
add
scas
insl
cmp
je
dec
ljmp
sbb
imulb
mov
dec
xchg
icebp
mov
pop
and
inc
in
test
or
mov
adc
je
sub
daa
jne
fistpll
push
add
add
fistl
mov
in
mov
and
xchg
xchg
fwait
xchg
jl
mov
call
outsl
pop
sbb
dec
daa
dec
in
push
push
jmp
insl
cld
fistl
and
add
fucomp
imul
pop
dec
inc
mov
push
loopne
add
jns
add
test
jo
inc
fisttpl
sub
cmp
xchg
dec
push
outsl
jbe
aad
sbb
scas
mov
imul
repnz
push
lret
outsl
mov
clc
aad
push
jp
aam
push
push
fisttpl
mov
into
daa
xchg
xchg
lret
je
inc
xor
fwait
mov
popf
call
sahf
push
lods
idiv
jae
int3
lock
ret
pushf
and
repnz
lahf
sub
sbb
in
ss
rcl
repz
lcall
daa
inc
adc
stc
cs
dec
scas
ljmp
pushf
fs
adc
pop
loope
mov
ds
arpl
mov
ljmp
pop
dec
loopne
push
out
dec
call
pop
jo
adc
lock
ljmp
mov
and
data16
xor
cli
lods
xchg
xor
pushf
jae
pop
int3
lods
adc
fucomip
fbstp
jns
xor
leave
or
clc
lds
int
sbb
pushf
cltd
int
inc
mull
mov
sbb
popf
repnz
andb
xchg
jp
cvttps2pi
in
add
dec
jns
jae
imul
test
sub
outsl
outsb
xchg
and
mov
loop
mov
out
popa
jnp
add
sub
pop
inc
add
int3
dec
xor
mov
push
lock
fwait
lret
cmp
aam
insl
xchg
fdivs
sub
rclb
inc
cltd
repz
int
rorl
pop
or
mov
fcmovnbe
inc
fldl
jbe
xor
push
push
jmp
fidivl
and
jb,pn
pusha
cmpsl
mov
adc
in
cmc
scas
outsl
pop
cmpl
push
sub
cld
loope
dec
fsubrs
insb
push
movsl
imul
mov
enter
mov
mov
push
popa
mov
and
or
jg
mov
test
outsl
dec
mov
ret
mov
int3
and
inc
push
int3
xlat
test
pop
outsb
jb
and
nop
jecxz
dec
lret
scas
pop
std
jo
popa
cmpsb
popa
adc
xor
adcb
sbb
jmp
xchg
scas
fnstenv
nop
adc
rcrl
and
nop
mov
rol
inc
mov
mov
pop
dec
xchg
mov
jp
pop
stos
or
test
repnz
sbb
ret
push
push
cmp
add
decb
test
inc
adc
push
xchg
imul
fwait
xor
mov
pop
rcrl
or
int3
push
testb
push
or
mov
jo
out
cmpsl
nop
jb
mov
cmp
cmp
aaa
push
jmp
sbb
dec
lock
push
ss
int
lds
iret
dec
jecxz
ljmp
mov
xlat
lods
hlt
jecxz
into
jb
add
movsl
test
lahf
les
int
in
fdivl
rcll
cwtl
imul
cmp
movsb
ds
pusha
nop
pop
or
cmpps
int3
out
dec
out
lock
xor
mov
ret
pushf
mov
scas
inc
orb
imul
les
cmp
inc
xchg
push
arpl
aaa
lds
test
inc
mov
xor
shrb
cmpsl
mov
adc
jo
hlt
mov
test
pusha
scas
fbstp
jnp
iret
add
inc
push
mov
xchg
jns
movsl
jnp
aam
cld
out
in
jp
mov
adc
lahf
jno
hlt
xor
int3
dec
push
test
in
jg
mov
ret
pop
movsl
je
mov
mov
test
mov
push
movsb
mov
lea
into
fs
mov
push
mov
add
shll
mov
imul
in
arpl
cld
push
les
movsb
test
cmc
lea
sbb
inc
mov
outsl
rolb
cmpsb
xor
int3
rol
and
jecxz
mov
test
scas
cmpsb
inc
stos
inc
ret
insb
arpl
sarb
popa
pop
je
scas
sahf
clc
addb
sahf
scas
mov
loope
or
std
sub
into
adc
adc
es
scas
jg
mov
push
ljmp
movsl
mov
out
aaa
dec
ljmp
dec
and
outsb
pop
pop
outsl
cmpl
sti
into
js
fucom
push
jg
inc
mov
sub
cmpsl
and
jns
jnp
inc
fwait
jl
mov
repnz
xor
push
inc
and
int3
cmp
fucomp
leave
xchg
shl
push
inc
popa
fs
ss
cmp
push
stos
popf
int
adc
aaa
es
out
mov
lea
dec
das
lret
outsb
add
push
enter
dec
mov
dec
xchg
je
adc
xor
and
notb
ljmp
lcall
mov
aaa
js
dec
sti
aaa
jno
insl
fucomip
inc
flds
stos
sub
sub
popf
ss
lds
xor
sbb
pop
inc
repnz
sbb
sbb
mov
incl
movsb
xchg
flds
cmp
sbb
gs
xchg
inc
in
jns
mov
xor
je
stos
orl
test
adc
je
mov
fists
jecxz
mov
push
cld
cmp
das
jg
pop
pop
push
jle
jae
mov
dec
sbb
in
cmp
or
lock
dec
cmp
std
jae
cmpsl
popa
test
test
mov
or
daa
inc
and
roll
sbb
aaa
add
pop
in
cmp
mov
jns
jo
inc
sbb
cmp
xchg
mov
in
ret
push
add
sti
or
dec
pop
insb
xchg
fcoml
jae
int3
jl
cs
dec
jns
sbb
adc
ficomps
test
pop
in
icebp
aad
push
aas
jmp
xor
xlat
and
lahf
jle
mov
pop
mov
dec
call
aam
flds
popf
roll
mov
or
popf
xor
xchg
mov
or
mov
aaa
pop
and
leave
push
jle
out
jae
push
movsl
shll
or
dec
out
xchg
mov
cmp
pop
xor
mov
dec
in
xchg
mov
cmp
xor
fwait
aad
in
test
cmp
je
enter
loop
fs
push
or
adc
test
add
pop
fs
dec
mov
sub
lahf
and
in
jne
or
adcb
fimull
in
cmpsl
shlb
fwait
jnp
sahf
jecxz
mov
enter
insb
and
and
jno
jp
sbb
dec
inc
jo
push
xchg
dec
xlat
cmp
popa
clc
sbb
idivb
inc
mov
jno
mov
ret
mov
xchg
in
aam
fnstsw
lahf
jb
sub
adc
or
dec
xchg
pop
push
lock
add
xchg
cmpsb
mov
adc
mov
cmp
adc
shll
inc
lock
sbb
insl
push
add
xchg
stos
inc
enter
idiv
mov
dec
add
cld
iret
add
sahf
cmp
movsb
pop
repz
add
mov
fisubs
out
inc
fldenvs
ret
leave
xchg
add
push
ffreep
xlat
scas
sub
int3
arpl
mov
scas
lcall
push
inc
shrl
add
inc
pop
or
fadds
pop
xor
ror
and
sarb
dec
cmp
das
pop
mov
pusha
xorb
or
fs
ds
dec
or
cs
push
mov
or
and
sbb
aam
mov
dec
data16
fsubp
mov
jae
inc
loope
mov
arpl
test
push
mov
out
xor
fidivrl
or
sbbl
cmp
inc
and
jmp
mov
aas
mov
jg
lret
sti
xor
jbe
aam
lahf
cmp
and
mov
in
add
jb
rclb
adc
xor
or
pop
es
in
aaa
fwait
ss
pop
dec
and
aas
cmp
sbb
pop
divb
hlt
lods
sub
jnp
aaa
pushf
jg
jg
shlb
dec
pushf
pop
push
cmpl
jns
dec
and
fimull
mov
pop
push
push
stc
push
jp
hlt
and
xchg
xchg
mov
xor
add
ss
fstl
jl
jp
pop
and
and
pop
outsl
sub
std
or
pop
dec
add
hlt
aas
pushf
dec
jne
iret
pop
mov
out
lea
call
mov
pop
ss
mov
xchg
pop
ds
repz
call
mov
push
push
shrl
sub
stc
movsb
out
fcomps
or
rolb
popa
mov
scas
inc
je
ja
xor
xchg
jmp
mov
fmull
jo
cmp
inc
sahf
lahf
adc
adc
mov
dec
sub
add
pop
sarb
cmp
mov
inc
xor
lret
pop
mov
shld
mov
sti
call
imul
stos
jae
clc
jno
ret
out
gs
fiadds
sbb
test
and
lea
add
test
leave
fsts
cmp
into
lcall
ficomps
dec
aam
rorb
in
filds
and
mov
mov
or
adc
daa
xor
xchg
xor
loopne
std
cmc
mov
or
sbb
mov
mov
pop
dec
cmc
pusha
dec
cli
mov
das
sbb
xor
popa
add
dec
jecxz
sub
in
out
shrl
fists
and
pop
fcomps
jl
or
scas
push
ret
cmp
dec
repnz
fsubl
or
and
in
xchg
cmc
push
push
imul
pop
adc
test
pop
xor
xchg
push
rol
js
in
cs
push
stc
mov
lds
add
je
arpl
xchg
sahf
push
cmp
sub
inc
loope
xor
inc
jno
shrl
cmpsl
push
fistpll
pop
cs
cmc
cmp
sub
or
mov
push
scas
push
mov
imul
add
inc
push
xor
cmp
movsb
cld
shll
sub
gs
inc
stos
mov
outsb
sbb
xor
ret
lret
movsb
int
sbb
xchg
je
sti
mov
in
notl
jno
push
popf
out
sbb
movsl
sbb
push
mov
xor
in
es
mov
je
sub
aam
jle
inc
pop
aaa
js
std
cltd
xor
mov
loopne
inc
push
les
mov
and
nop
int3
cmpsl
lock
mov
stos
sbb
jecxz
adc
mov
arpl
adcl
out
dec
fildl
aaa
jp
pop
jg
cmpsb
dec
mov
pop
mov
push
mov
fidivrs
mov
popf
jg
filds
dec
repz
push
xchg
mov
jne
push
les
test
sbb
adc
add
in
int3
push
lods
jmp
iret
add
jo
push
pop
jl
sub
popf
andb
adc
cmp
mov
lods
fimuls
jg
icebp
imul
jmp
jmp
inc
add
mov
lret
cwtl
mov
mov
sub
fdivl
std
jo
xchg
sbb
fstpl
aam
inc
out
js
adc
pop
test
jl
mov
lock
adc
lret
out
shll
outsb
rorb
sub
push
ret
cmc
jl
inc
enter
mov
in
jge
push
mov
inc
xchg
out
cmpsl
test
mov
idiv
xor
mov
loopne
push
mov
push
test
fnsave
ror
jg
fmuls
fsubs
or
ds
mov
add
loopw
jnp
or
fsubrs
and
leave
sbb
jle
xor
addr16
xor
inc
das
sub
mov
inc
sub
cmp
fdivl
pop
insl
int
cld
iret
out
pushf
pop
xlat
xchg
push
jno
test
inc
pop
fdivrl
scas
enter
and
aaa
xchg
ljmp
mov
pop
xchg
xorb
pop
push
adc
hlt
pop
push
pop
dec
es
jns
sub
fcomps
fidivs
daa
lahf
inc
mov
call
leave
or
je
sbb
jge
xchg
xor
mov
mov
leave
js
xchg
aas
ljmp
test
movb
fdivrs
lods
and
mov
movsl
pop
xor
mov
cld
sbb
dec
lds
loopne
sbb
jl
xor
sub
inc
mov
dec
jbe
push
out
mov
jge
cmp
out
out
mov
outsb
sub
add
adc
mov
dec
cwtl
mov
ret
push
jle
push
mov
dec
inc
jmp
xor
insl
test
int3
fwait
cmpsl
ret
cmp
jle
ror
jnp
inc
fsubl
shll
push
mov
sbb
in
es
int3
jg
jbe
push
xchg
xchg
adc
sub
adc
pop
lods
sbb
jbe
sbb
add
xlat
pop
sub
sbb
sbb
adc
addl
rorl
pop
mov
ds
add
pop
mov
sbb
fcom
nop
sub
dec
mov
sub
cmpsl
mov
fsts
mov
mov
inc
fmuls
dec
insb
pop
cmp
pop
cmpsb
jp
dec
movsb
scas
in
xchg
jge
dec
pop
lret
sahf
sbb
inc
dec
lahf
inc
nop
out
jnp
fnstsw
or
add
fidivs
cld
cltd
adc
cld
push
fstl
jbe
jno
mov
push
xchg
xor
add
and
pop
push
cli
idivb
lods
sbb
pop
dec
popa
test
out
movsl
dec
push
inc
xlat
dec
out
cmp
inc
adc
cmp
ret
pop
mov
jg
movsb
add
insb
std
adc
ret
jle
inc
xor
mov
cwtl
push
mov
icebp
mov
adc
dec
lock
mov
adc
and
pop
loopne
adc
jo
xchg
repnz
lret
sbbb
push
sbb
sbb
pop
xchg
ret
mov
ja
cmpsl
cmpsb
cmp
cli
out
mov
and
fcompl
push
subl
dec
pop
loope
push
lret
mov
in
test
adc
ljmp
sbb
test
xor
enter
mov
out
jge
sahf
jne
imul
out
jno
lahf
jmp
outsl
mov
jmp
shlb
iret
int
rorl
push
aas
jecxz
clc
jb
mov
in
inc
mov
fs
out
test
subb
cwtl
test
pop
and
adc
mov
push
test
mov
cltd
loopne
lret
jecxz
jmp
inc
add
mov
push
xchg
xor
sahf
dec
add
cli
xlat
scas
add
ret
dec
inc
ja
outsl
xor
sub
pop
subb
jae
outsb
movsl
nop
mov
jg
insb
add
sbb
clc
pop
out
loopne
sahf
ljmp
inc
andb
in
std
mov
ds
jb
jno
shrb
imul
mov
addr16
push
pop
pop
jbe
mov
cld
imul
adc
xor
ljmp
shrb
adc
cmpsl
lret
sub
cmp
jno
jmp
andl
std
xor
xor
imul
push
ret
xchg
pop
xor
inc
jae
loope
cmp
ror
or
inc
sub
or
out
jmp
pop
jge
fucomp
mov
xor
pop
ja
lock
pop
xchg
test
outsl
roll
xchg
cmp
imul
hlt
mov
rclb
push
js
jge
fisubs
fisttpl
mov
mov
stos
xor
shrl
sub
not
pop
cmp
ficoml
sub
and
mov
inc
add
pop
iret
movsl
icebp
arpl
xchg
clc
aaa
push
fsubr
fucomp
mov
mov
xor
and
fadds
and
mov
xchg
sub
cmp
mov
mov
add
mov
icebp
mov
je
sahf
jmp
inc
fldenv
sub
lea
mov
insl
loop
mov
mov
dec
rorl
push
orb
sub
lock
pop
jg
test
mov
jmp
mov
push
xor
fwait
stc
or
movsl
inc
stos
pop
jb
sub
sub
fimuls
loop
in
loop
cmp
inc
aas
xor
cmpsl
lock
push
repz
ss
push
mov
movsb
cmp
xchg
pop
hlt
fs
stc
int3
xchg
xor
inc
adc
or
jp
outsl
cli
add
jns
dec
jne
pop
in
call
sub
pop
data16
pop
loopne
sbb
gs
rcr
jno
loope
mov
mov
cmp
loop
adc
cmp
out
mov
andb
aaa
shll
xchg
push
dec
inc
fcmovbe
cmc
add
es
int3
sub
jno
loop
xlat
xor
push
scas
pop
test
add
pusha
pavgw
pop
ja
push
movsl
clc
xchg
push
cli
jae
push
xor
inc
mov
enter
mov
out
xor
in
jge
adc
je
insl
xor
fcom
pop
adc
mov
popa
lds
adc
xchg
pop
fnstenv
mov
xorb
sarb
xchg
sub
and
mov
inc
xor
lods
out
jl
ljmp
out
loope
sbb
rolb
mov
cmpsb
jmp
jne
into
sub
adc
mov
dec
sbb
sub
push
mov
push
mov
adc
and
sbb
sbb
jg
dec
mov
push
jb
fnsave
xor
xor
out
jg
pop
cmp
mov
mov
sub
lahf
adc
loopne
test
jns
stos
cmp
or
push
pop
leave
sbb
jmp
je
push
mov
pop
in
add
das
cmp
in
popf
imul
mov
inc
lods
mov
cmp
shr
adc
mov
adc
and
dec
add
fbld
xchg
fldt
jle
xchg
cmpsl
mov
sub
dec
or
jb
jl
sbb
cwtl
or
mov
sub
add
cmp
mov
aaa
imul
jp
stos
xchg
das
test
add
dec
data16
repnz
xor
pop
lods
bound
mov
inc
in
test
je
cltd
and
outsl
shlb
ficompl
pop
outsb
gs
ja
movsl
mov
jl
or
mov
fimuls
scas
ds
mov
shl
push
test
xor
rolb
call
pop
ljmp
cld
ret
scas
movsb
fs
sub
out
testl
cmc
sub
xor
popf
adcl
xor
outsb
jg
data16
cmpsl
js
lret
xor
cmp
push
imul
lret
ds
mulb
jp
sub
inc
fisubs
mov
inc
inc
push
je
xchg
push
adc
mov
jne
push
mov
icebp
cmpsl
sti
gs
insb
add
int
and
mov
out
dec
push
insb
mov
sbb
xchg
mov
dec
out
xchg
test
out
inc
mov
aad
pop
cmp
sub
es
xlat
loope
push
dec
jne
je
pop
test
mov
hlt
add
loopne
sbb
xchg
jns
cmp
jae
sarw
out
and
lcall
jne
cli
cmpsl
mov
mov
test
pop
shrl
movsl
mov
xor
arpl
or
xor
shlb
shrl
imul
push
and
pop
cmp
out
mov
test
mov
sub
repnz
or
mov
xor
cmp
inc
in
xor
pop
adc
sub
lods
jecxz
ret
inc
js
fildll
shlb
or
adc
sbb
push
xor
xchg
and
sub
sbb
xor
dec
cmp
addr16
movsl
icebp
sarl
and
inc
cmpsb
jp
push
jno
mov
mov
ret
mov
push
out
lea
mov
pop
bnd
into
mov
pop
lods
xchg
rcl
adc
pop
loop
data16
push
out
mov
push
out
sti
dec
lea
fs
mov
or
movsb
push
scas
mov
aaa
push
and
mov
adc
pushf
jp
int
lds
mov
in
js
xor
lcall
rorb
lea
sbb
jne
add
jnp
in
pusha
dec
movsb
bnd
movsb
xchg
pop
sub
xor
cvtsi2ssl
popa
xchg
push
jb
xchg
and
adc
jmp
mov
add
aam
xchg
or
imull
hlt
nop
repz
daa
inc
mov
cmpsl
mov
cmp
cmp
ret
dec
pop
faddl
jge
pop
ficoml
int
mov
mov
adc
jo
das
push
pop
lea
sub
jne
bound
xor
jecxz
mov
pop
imul
je
inc
outsb
and
push
ss
loope
mov
mov
cmovge
stos
out
fstpl
rolb
cmpsb
cmc
adc
bound
xchg
adc
popf
cmc
xchg
jle
data16
push
xchg
xor
push
push
mov
inc
mov
xchg
mov
es
pop
xsaveopt
loope
aas
push
dec
and
fnstenv
jmp
xrelease
dec
push
jmp
fcmovnu
jne
push
je
cld
push
sbb
lds
scas
out
shrw
sbb
jo
mov
lds
xchg
sti
test
arpl
pop
subb
mov
add
ljmp
loop
sub
imul
jmp
mov
or
fnsave
flds
js
xchg
sub
into
pop
ret
lds
dec
cmp
add
das
mov
jmp
sbb
mov
in
popa
sub
mov
ds
test
or
push
mov
inc
fisttpll
cld
or
xor
je
or
int
pop
int
pop
js
and
xchg
adc
insb
pop
jge
fistpl
ffree
or
xlat
outsl
mov
jno
es
inc
inc
mov
cmp
push
pop
aam
punpckhdq
adc
push
test
mov
or
leave
sbb
mov
in
mov
daa
cmp
inc
xchg
mov
mov
pop
icebp
ljmp
popf
inc
lcall
cwtl
std
mov
xchg
add
and
mulb
loope
nop
test
push
out
mov
mov
test
mov
int3
jbe
push
dec
testb
mov
fisttpl
sbb
js
pop
inc
lcall
nop
jmp
negl
int
dec
add
aam
add
lea
pop
adc
test
jl
dec
popa
scas
xchg
mov
data16
xchg
int
or
sbb
jne
pop
mov
push
jg
loope
mov
shlb
mov
cmc
lret
bound
cmp
out
xchg
or
aaa
pop
mov
testb
xchg
xor
cmp
add
inc
lcall
clc
mov
adc
jl
pusha
sub
call
xchg
fcoms
or
push
push
lock
jne
lret
push
mov
mov
movsb
or
lahf
fistpll
pop
jbe
es
bound
std
jo
mov
xor
push
lods
or
mov
ds
aad
dec
mov
test
xchg
enter
mov
scas
add
test
adc
lods
in
popf
scas
outsb
adc
call
in
ljmp
xor
sbb
cltd
sub
in
dec
push
dec
lahf
jns
mov
cmpsl
enter
jge
insl
add
scas
ds
dec
roll
sbb
cmp
loopne
cwtl
xor
or
pushf
fsubl
addr16
sub
sub
dec
xor
dec
push
out
pop
push
dec
sub
jns
in
xchg
lcall
nop
cmp
or
adc
adc
int3
out
xor
lret
mov
dec
xor
jg
fldenv
xchg
in
mull
jge
sbbl
mov
dec
ret
shrl
icebp
cmp
jnp
inc
ficoml
in
add
rcll
ljmp
mov
dec
data16
repz
icebp
jnp
insl
sub
fsubrl
add
shlb
adc
and
test
mov
mov
in
mov
js
xor
js
rolb
xor
adc
mov
push
cltd
sub
push
xchg
mov
into
mov
cmp
cmp
sbb
sbb
mov
add
xor
and
mov
lahf
jbe
pop
adc
xchg
push
rol
jbe
shr
daa
or
imul
rcll
mov
fadd
stos
mov
fwait
js
mov
cmp
mov
std
mov
ja
in
loop
pop
pop
shll
cli
pop
mov
mov
sbb
xchg
lea
pop
push
or
insl
stos
icebp
and
push
inc
cs
add
into
repz
and
pusha
push
pushf
or
cmp
aas
push
in
test
xchg
mov
fistpl
les
push
out
loopne
and
mov
int3
xchg
ljmp
lds
aad
pop
push
push
in
lea
push
jmp
jno
and
or
cwtl
mov
sub
ficomps
adc
dec
rorl
test
adc
aam
out
ss
push
xchg
lahf
ljmp
call
or
jo
pop
stc
dec
dec
fimuls
aam
lcall
dec
push
lret
cmpl
mov
and
testb
fdivl
push
hlt
and
xchg
mov
push
dec
int3
arpl
movsb
cmp
fimuls
push
mov
mov
and
cmp
push
pop
insb
or
mov
std
push
rolb
aam
bound
xchg
sub
adc
aaa
mov
pop
dec
add
jle
test
mov
cwtl
cltd
stos
cmp
std
or
and
ffreep
lods
scas
inc
mov
jnp
je
in
jmp
jns
mov
loop
in
and
in
xchg
daa
pusha
sbb
mov
orl
js
pop
mov
pop
fistps
sub
cmp
fidivrl
lock
lods
jmp
fnstenv
and
aas
jmp
icebp
jns
sbb
fs
xchg
add
jo
ds
xlat
sub
pushf
or
lea
or
fldln2
in
jno
lret
inc
jno
mov
int3
sbb
insb
nop
std
mov
cmp
stos
icebp
fsubl
adc
popa
iret
xchg
xor
sbb
test
mov
xchg
cmp
pop
jle
push
mov
daa
into
nop
adc
iret
jbe
xor
call
sbb
lods
fisubl
lods
jmp
dec
mov
add
jecxz
addr16
ss
incb
movsb
jp
sub
hlt
into
test
push
push
jle
iret
cmp
push
mov
xor
sbb
out
repnz
and
adc
jns
push
arpl
scas
sbb
adc
iret
push
mov
jmp
push
fs
into
and
into
sbb
mov
xchg
inc
pop
popa
mov
add
push
inc
mov
cmp
fwait
inc
js
mov
push
mov
jae
pop
sbb
iret
pushf
inc
push
xchg
pusha
pop
call
pop
mov
stc
nop
xchg
sub
pop
bound
and
cmp
mov
pop
and
adcb
inc
loop
out
mov
in
loope
cmp
and
xor
notl
sub
push
inc
ds
cltd
xor
adc
fsubl
or
adc
and
push
pop
icebp
aaa
daa
xor
xchg
sub
nop
in
add
cltd
xor
push
out
test
mov
pop
inc
out
test
enter
lods
inc
add
mov
lret
lret
setae
mov
sbb
ds
cli
repnz
xchg
add
daa
sub
lret
bound
cmp
imul
inc
sub
fbstp
xor
adc
stc
cmp
fwait
insl
sbb
andb
into
gs
aas
in
stos
icebp
adc
orl
xor
adc
mov
push
and
jmp
icebp
in
or
sub
add
dec
in
and
mov
xchg
inc
or
out
inc
cwtl
call
and
sub
nop
add
out
or
imul
test
adc
mov
cmpsb
adc
rorl
ja
cmp
mov
lcall
mov
rorb
xor
sub
push
adc
mov
add
push
ds
out
xchg
pop
push
jmp
push
mov
pop
testb
scas
inc
inc
xor
fildll
rclb
fwait
xor
sbb
inc
dec
out
push
sbb
popa
movsl
or
cmp
rclb
fs
and
fidivs
inc
sbbb
cld
xchg
clc
mov
outsl
shll
lea
jo
mov
iret
push
jmp
and
jno
push
inc
mov
cmp
mov
xchg
mov
ret
divl
push
out
bound
xchg
sub
pop
mov
nop
add
sbb
dec
out
jg
les
mov
loop
mov
pushf
xor
leave
push
sbb
dec
movsb
cmp
sahf
cltd
add
enter
sbb
inc
mov
jb
in
test
stos
or
cmp
fnsave
jnp
and
cltd
xor
ss
dec
and
cmp
jmp
pop
lock
and
aad
stos
inc
aad
movsl
cmp
test
loop
push
testl
aad
xchg
and
inc
movsl
cmp
cmc
lea
lods
loopne
aas
daa
ds
inc
outsl
cld
sub
ss
mov
int
mov
xchg
sbb
call
xor
fnstenv
sub
enter
out
icebp
lock
and
add
xor
out
imul
add
cld
pop
or
pushf
cld
call
jg
pop
or
jb
call
repz
mov
mul
ljmp
pextrw
pop
inc
xchg
lcall
imul
in
lds
out
ds
jo
pusha
adc
add
es
push
add
mov
mov
leave
pusha
repnz
enter
inc
fisubrl
imul
mov
ret
repnz
and
fcoms
test
mov
insb
gs
mov
je
into
test
add
mov
mov
mull
in
xchg
and
cmpsl
ds
testb
sub
fwait
pusha
xchg
cmpsl
out
mov
scas
push
mov
loope
xchg
and
jae
mov
mov
add
cwtl
adc
xchg
sub
aam
pop
or
dec
xchg
out
xchg
in
negl
out
and
mov
std
pop
mov
in
pop
orl
iret
mov
lds
inc
frstor
fnstenv
mov
sbb
imul
jno
mov
aaa
loop
mov
iret
addr16
call
loop
mov
test
xorb
mov
and
jecxz
jno
cltd
xor
shrl
mov
sbb
fwait
xor
xchg
imul
gs
mov
and
sarl
cmp
lea
gs
fidivs
in
xor
test
fdivl
jae
jle
nop
daa
arpl
mov
aam
xor
shll
lea
mov
mov
cmp
mov
ss
addr16
mov
inc
jno
mov
xor
mov
adc
push
movsb
inc
ret
mov
repnz
mov
jl
sbb
ffreep
sahf
xor
test
ret
pop
xchg
and
sti
push
arpl
test
mov
mov
scas
jecxz
test
xor
mov
mov
jbe
cmp
imul
mov
mov
insl
shrb
mov
enter
push
movsl
sub
test
imul
cltd
aam
into
or
push
jmp
jb
les
mov
xchg
push
out
hlt
mov
cmp
outsb
leave
inc
mov
sbb
sbb
lcall
xor
push
mov
adc
filds
das
push
pop
jne
das
lods
inc
popa
mov
and
jae
sub
push
cmp
mov
or
movsl
cs
movsl
idivb
or
pop
xor
fsubrl
test
divl
sbb
jno
pushf
xor
lods
sbb
push
inc
icebp
mov
push
add
sub
repnz
inc
fiaddl
mov
mov
dec
xor
xchg
arpl
nop
daa
add
pop
hlt
hlt
and
fcompl
mov
cli
stos
and
imul
enter
jns
push
dec
jae
mov
jp
mov
dec
je
mov
add
sbb
mov
stos
leave
clc
cld
je
push
es
mov
jb
mov
iret
rclb
mov
stos
daa
xchg
mov
jnp
call
dec
leave
aas
imul
pop
imulb
scas
pushf
push
stos
inc
inc
rorb
sahf
xor
inc
mov
pop
negb
rorb
xchg
adc
mov
scas
xchg
or
xlat
cmp
fisttps
mov
insl
loop
or
mov
icebp
or
push
xchg
lods
xchg
push
sub
dec
xchg
jl,pn
rcrl
xor
dec
jge
and
and
add
je
add
push
lds
or
adc
adc
push
and
mov
adc
jno
sbbb
daa
adc
hlt
push
jbe
jp
aaa
jle
imul
pop
ss
fucom
testl
das
jle
pop
stc
nop
hlt
jp
xorl
gs
fsts
mov
in
call
push
cmp
cmp
add
test
daa
mov
fs
fidivl
sub
shlb
scas
dec
loop
mov
dec
out
wbinvd
mov
shl
out
xchg
push
mov
sbb
lret
in
push
sbb
imul
jae
mov
roll
loope
lds
fbstp
push
rclw
inc
repnz
xor
push
incb
xor
add
add
pop
stc
mov
repnz
into
jge
and
rorb
inc
repnz
data16
loope
jle
imul
push
jne
push
mov
jp
pop
ret
mov
cmc
xor
ljmp
psubq
pop
mov
js
lea
sub
test
dec
and
scas
pop
inc
xchg
scas
inc
dec
mov
push
lds
imul
xchg
repnz
push
aas
sbb
and
cld
into
inc
sahf
ss
adc
inc
subb
cmpsl
fsubrl
jns
mov
and
mov
popa
fwait
xchg
in
mov
pop
or
mov
pushf
xor
push
mov
sbb
bound
mov
fnstenv
ror
inc
shr
dec
mov
cmc
rcrl
mov
cmpsb
push
dec
ror
daa
insb
cltd
ja
cmp
clc
cmp
mov
adc
hlt
jbe
lahf
xchg
dec
cmp
adc
inc
dec
jecxz
cmp
sbb
sti
stc
and
mov
fnstenv
mov
jg
cwtl
sti
in
jmp
lods
aam
xor
ret
inc
or
test
mov
xlat
mov
popf
insb
call
cmpsl
xchg
sub
test
shrb
or
mov
sbb
mov
mov
mov
gs
xor
cmp
mov
out
roll
adc
add
mov
cli
icebp
mov
scas
jo
sti
imul
loopne
push
mov
add
popf
sbb
lcall
shrl
lods
out
adc
sti
pop
adc
jle
xor
dec
pop
xlat
outsb
jne
ret
dec
ds
sbb
and
imul
pop
push
sahf
jle
pop
jmp
fs
loopne
and
xchg
adc
push
pop
repnz
pop
cwtl
arpl
cmp
dec
pop
xchg
jl
pusha
add
lcall
inc
test
filds
sahf
pop
or
fwait
ss
inc
repz
test
ja
adc
dec
xchg
rorb
aad
cs
cmpsb
cmp
jno
push
or
mov
push
pusha
cmc
push
inc
pop
xchg
sub
xor
and
aas
xor
inc
sbbb
push
inc
aas
xchg
ja
push
sub
mov
gs
push
xchg
dec
sbb
push
stos
dec
orl
lret
shr
and
fcmove
push
ljmp
popa
sub
rorb
outsb
mov
scas
pop
insl
add
sbb
mov
mov
sbb
sbb
ds
call
push
add
lret
xlat
mov
sbb
sti
xchg
cmc
mov
rolb
fsubp
and
mov
cli
xchg
incl
sbb
jb
cmpsb
mov
in
inc
jne
pushf
bound
iret
jmp
js
mov
xchg
daa
jecxz
mov
jg
call
inc
loope
fists
test
mov
repnz
xchg
xchg
mov
sub
mov
mov
push
jbe
mov
enter
leavew
mov
out
daa
jmp
cmpsb
flds
loop
mov
shll
mov
xor
adc
mov
cld
insb
push
adc
test
mov
icebp
ja
in
fidivs
pop
jns
movsl
js
pop
pop
jmp
mov
mov
sub
aas
insl
pop
cmp
sbb
push
scas
xor
aas
nop
jmp
fidivl
ret
mov
mov
bound
mov
mov
int3
imul
mov
cmpsl
adc
xor
addr16
xchg
xchg
cmp
add
jbe
add
add
sub
nop
mov
push
outsl
push
mov
ds
lea
sbb
mov
ret
jecxz
incl
cmpsl
push
sar
das
test
out
and
idivb
cwtl
xchg
cli
dec
or
add
sub
pop
shll
jmp
mov
enter
jge
stos
sarl
mov
fisttps
aam
ss
mov
inc
fidivs
sbb
mov
sub
sbb
jp
cli
jae
out
imul
vpcmpeqd
sbb
sub
xor
ds
sub
mov
and
cmp
jb
jecxz
mov
inc
mov
sub
dec
movsl
dec
cmp
adc
out
popf
sbb
ss
ds
jge
lret
inc
pop
dec
mov
aaa
sahf
lea
sub
inc
fidivrs
jbe
xchg
cmp
pop
xor
psubw
pop
rcl
and
push
adc
aaa
cmc
mov
add
mov
xchg
push
fisubl
movsw
je
sbb
test
inc
lret
insl
ret
rcrb
lret
inc
into
data16
and
enter
enter
sbb
mov
inc
lret
popf
out
push
mov
inc
mov
in
stc
daa
push
sub
xchg
jbe
lret
sbb
ret
xchg
and
mov
xlat
outsb
sub
inc
int
dec
add
pusha
mov
negl
dec
lods
sbbb
xchg
rcrb
mov
repnz
int3
pop
inc
pushf
imul
jo
lret
lret
cmp
mov
call
loope
or
xchg
ss
mov
xchg
sbb
sbb
inc
pushf
pop
mov
in
or
adc
gs
or
stos
sti
jb
in
lret
aam
popa
lods
jmp
mov
push
in
sub
enter
in
out
fadd
inc
pop
cltd
sbb
xchg
push
scas
sub
ds
aad
dec
loopne
into
cmp
mov
and
add
inc
lods
pop
inc
icebp
mov
dec
shlb
push
aad
jbe
mov
mov
adc
push
in
rcll
pop
aad
repnz
ljmp
push
lods
jmp
push
xchg
mov
in
mov
xor
ret
nop
pop
pop
or
loope,pt
inc
negb
push
sbb
mov
fildll
jmp
push
lret
pop
rorb
loop,pn
test
mov
sbb
xor
mov
sti
pop
and
inc
repz
pop
xchg
lods
sbb
push
push
jg
mov
inc
jle
add
movsl
lahf
std
inc
sbb
aas
enter
int3
cmp
jo
pop
faddl
xchg
adc
lods
pop
mov
mov
in
push
in
push
add
inc
xlat
imul
scas
fimull
bound
imul
ret
mov
xchg
jns
push
aas
adc
sbb
dec
jnp
fwait
xchg
cmp
mov
scas
or
or
enter
cmp
stc
dec
stos
jo
mov
movsb
movsl
jg
ds
jae
push
pop
loope
repz
pop
ret
inc
arpl
imul
jbe
lcall
lahf
inc
lret
pop
xchg
stos
xor
fisttpl
pop
aad
dec
clc
xor
jge
fistl
push
cs
in
pop
pop
push
or
lock
lock
xor
clc
fidivl
cltd
fwait
fs
xchg
mov
mov
subb
dec
sbbl
data16
ds
jp
push
push
adc
mov
cmc
push
mov
xor
mov
push
aaa
jae
je
ljmp
fistpl
into
addr16
repz
xor
cmp
inc
shll
adc
fldcw
mov
mov
inc
ret
dec
cld
pusha
cld
push
push
aas
pop
xor
outsb
js
adc
or
jl
add
xchg
mov
or
cwtl
stos
mov
cmc
lock
leave
xlat
xchg
sub
leave
xor
and
or
daa
into
gs
fucom
sbb
jle
cmpsb
ds
add
mov
out
push
mov
lods
lock
or
out
lcall
popa
lods
pop
pop
or
mov
ret
out
fs
in
test
jb
mov
jo
ja
dec
int
sub
add
les
xchg
cs
in
sbb
out
fcoms
test
das
and
jg
je
and
xchg
pop
fcoms
shrl
pop
mov
dec
mov
cmp
push
mov
sbb
data16
hlt
inc
dec
rcll
cmp
or
mov
sub
inc
orl
sub
cmp
push
movsb
pop
movsb
xchg
jns
jecxz
mov
fisubrl
scas
inc
nop/reserved
pusha
and
test
addr16
and
or
sub
cld
aaa
gs
xor
adc
ja
outsb
dec
jmp
push
pop
pop
imulb
in
cmp
fcoml
arpl
adc
iret
push
mov
cmc
pop
popl
stc
and
lcall
cld
lahf
and
dec
xchg
cmp
and
in
and
cmp
lret
inc
loopne
cmp
out
sub
mov
sarl
cld
xchg
xchg
and
cmp
cmc
xor
jle
adc
leave
cmp
daa
cld
xchg
jo
in
mov
orl
pop
mov
movsb
test
in
mov
mov
xchg
mov
or
flds
xor
push
xor
jo
adc
or
fwait
call
icebp
sub
ret
cmp
xchg
mov
push
daa
mov
mov
ja
xorb
dec
jecxz
pop
pop
or
cmp
fnstcw
pop
push
pop
xor
dec
ja
movsb
aas
cmp
add
adc
test
cmp
lods
xor
popf
pusha
movsl
add
mov
stc
outsb
push
adc
cvtpi2ps
test
jno
mov
xorl
insb
push
push
shll
bound
decb
mov
rorl
movsl
xchg
vorps
adc
pop
mov
lds
jecxz
ja
pop
insb
fiadds
div
inc
mov
jb
sbb
lret
pushw
ret
std
xor
sahf
pushf
xor
movsb
fstpt
sbb
call
inc
xor
repz
add
mov
xor
jp
dec
pusha
test
sbb
lcall
jmp
mov
testl
mov
es
jmp
bound
daa
fistpll
push
push
cmp
leave
jne
xchg
inc
fcoml
adc
inc
notl
sbb
pushf
or
xor
jnp
sub
or
call
std
mov
xor
push
mov
cs
ja
iret
outsb
cmp
adc
jl
mov
cwtl
gs
xlat
cmc
sub
nop
test
in
sub
jp
ret
pop
adc
inc
cs
addr16
mov
fwait
push
fs
add
push
adc
call
stos
add
pop
lods
add
stos
xchg
jae
test
vpcomw
lock
arpl
push
sub
lods
jp
push
or
mov
jno
ljmp
push
adc
pop
out
js
jmp
cmp
leave
inc
and
jle
sbbl
mov
mov
ljmp
cmp
dec
push
push
lret
and
add
mov
in
inc
cmp
jecxz
lea
push
out
popf
lods
in
jg
xlat
pusha
lods
aam
dec
ffreep
shlb
ret
insl
enter
leave
fisttpll
leave
jmp
jl
sbb
arpl
lret
cli
jmp
adc
ret
mov
or
clc
addl
mov
mov
je
cmp
cmp
mov
mov
sub
ss
sub
lahf
ss
pop
jle
pop
dec
sbb
insb
dec
cmp
cmp
add
subl
xor
rolb
in
rorb
stos
adc
sbb
add
test
lods
jae
pop
pusha
pushf
xchg
push
mov
add
dec
stos
mov
mov
sbb
sarb
sbb
sub
mov
mov
in
rclb
pop
into
cmp
pop
daa
ljmp
or
stos
adc
and
push
lcall
sti
sbbl
cltd
push
sarb
push
sbb
sub
aam
scas
dec
fcoml
or
dec
inc
hlt
add
mov
mov
push
sbb
mov
fwait
xchg
in
ss
in
fcompl
rclb
jp
movsb
negl
cmp
xor
add
fs
les
hlt
loope
stos
outsl
out
sbb
or
sbb
jl
xchg
add
insb
out
rol
xor
sbb
inc
leave
in
sub
mov
testl
xchg
cmp
adc
sbb
mov
sub
or
jl
mov
cmp
pop
xchg
hlt
aaa
sbb
mov
fbstp
jg
fidivrl
cmp
cmp
jae
stos
movsb
and
jp
movl
cmpsl
ret
fucompp
xchg
sub
repz
loope
push
push
clc
scas
push
adc
mov
in
xor
xchg
adc
push
add
mov
das
pop
movsl
cmp
cltd
pushf
mov
jb
cmp
ss
sub
adc
or
mov
mov
push
pop
cmp
cmpsb
es
icebp
jnp
and
lcall
push
in
test
jmp
mov
sub
imul
js
lds
pop
lret
sbb
jnp
adc
nop
fcmove
popa
aam
mov
xorl
clc
pop
iret
fisttpl
sub
ljmp
int
mov
xlat
and
add
fisttpl
cmp
push
jg
mov
jg
push
lds
cmc
pop
aad
arpl
out
dec
rclb
paddsw
fucomi
and
neg
dec
enter
and
stos
inc
mov
fisttpll
shlb
out
in
mov
orl
shl
sub
mov
mov
push
ljmp
dec
iret
mov
testl
xor
test
jecxz
in
loope
sub
mov
scas
push
sub
scas
or
sub
aam
pop
fnsave
andps
pushf
pusha
testl
xor
mov
cmp
xchg
call
iret
cmp
fnstenv
js
enter
int3
scas
push
inc
into
outsb
sti
inc
mov
pop
cli
data16
lret
jg
cmpb
push
mov
lock
lock
jns
xchg
aaa
daa
stc
test
jno
cmpsl
adc
scas
out
dec
jecxz
shlb
out
aad
cmp
aad
out
and
ret
movb
cmp
cmpl
adc
movsb
lods
outsl
sub
jecxz
lret
fwait
movsb
cmp
mov
iret
inc
mov
in
inc
repnz
dec
cmpsb
inc
mov
push
fdivl
jl
fisubrl
imul
in
xor
xor
call
ret
fidivs
cmp
push
lock
lcall
adc
dec
test
call
jg
cmp
test
jne
ds
stos
jl
mov
push
and
cltd
xchg
dec
out
shll
sub
xor
pop
iret
bnd
add
inc
ret
call
fdiv
arpl
mov
sbb
mov
std
daa
fnstsw
sti
inc
out
pop
push
testb
sahf
mov
and
sbb
and
clc
dec
xor
xchg
js
mov
cwtl
cmp
inc
mov
mov
lods
or
js
out
jb
xchg
pop
imul
ja
mov
js
or
in
test
stc
add
xor
push
in
jo
jmp
inc
xchg
inc
hlt
xor
pop
lods
inc
cmp
xchg
jle
std
sub
and
fsubrs
mov
clc
adc
adc
push
xchg
xchg
mov
pop
xchg
stc
push
xorl
mov
jbe
adc
movsb
inc
add
ret
es
aad
leave
js
in
sti
aas
ljmp
pop
scas
lods
ds
sbb
out
push
or
add
repz
test
or
loope
arpl
cmp
pop
add
jnp
sahf
xchg
mov
out
dec
mov
jno
mov
pop
mov
mov
sbb
mov
pop
or
fwait
dec
or
leave
inc
jbe
mov
or
sub
jge
jae
or
cmc
xchg
cltd
sub
mov
insl
push
sbb
loope
pushf
inc
xlat
and
or
inc
push
jmp
sub
aam
int
das
loop
into
ret
cmp
jp
scas
scas
repz
mov
frstor
ret
lret
sub
test
cltd
adc
pop
les
fsts
pop
ret
jmp
mov
insb
cltd
add
fistl
insl
xchg
sub
stos
pop
nop
jns
mov
loop
or
push
cmp
test
leave
jno
mov
or
pop
icebp
mov
sub
mov
in
xor
rclb
es
cmpsl
lods
pusha
pop
movsb
aam
repz
mov
enter
cmp
jp
stc
inc
adcb
xor
xchg
iret
push
lds
pop
inc
rorb
push
mov
adc
cwtl
dec
sbb
xchg
lahf
das
mov
pop
lods
inc
mov
dec
loopne
and
xchg
ds
jmp
or
das
sarl
sbb
fwait
jmp
ljmp
fcmove
arpl
imulb
pop
cs
inc
pushf
test
push
and
mov
fwait
push
mov
mov
ret
in
push
jecxz
jmp
popa
shrl
repz
jmp
or
test
out
test
push
bound
loopw
lods
shrb
push
leave
jae
test
daa
loopne
lds
cmp
or
cmpsl
rorb
mov
jo
xor
aam
enter
cmp
and
adc
inc
lcall
xchg
fwait
addr16
outsb
pop
jo
lods
mov
sub
out
mov
xor
dec
jae
dec
mov
xchg
shll
mov
mov
dec
arpl
out
mov
mov
repnz
pop
sbb
mov
mov
rcr
dec
cwtl
aam
mov
shrl
mov
add
ja
jnp
push
xor
add
insl
out
pop
mov
out
sub
dec
shr
jg
mov
stc
and
leave
sahf
sbb
and
bswap
inc
pushf
pop
aaa
into
push
mov
and
and
sub
movsl
cmp
ja
and
addb
imul
inc
es
aad
popw
add
sub
out
in
das
push
lret
aad
int
lock
mov
popa
lods
lahf
xchg
add
mov
xchg
ss
and
mov
inc
pushf
inc
xor
gs
inc
sbb
xor
imul
and
cmpsl
adc
into
repnz
fstp
imull
mov
lock
jmp
sub
inc
je
cmp
push
lret
dec
mov
cwtl
sbb
dec
adc
cwtl
xchg
push
stc
orb
rorl
mov
xor
adc
std
cmp
leave
mov
jo
ljmp
mov
in
add
ljmp
cli
fdecstp
or
sarb
xchg
jecxz
push
lret
or
jge
std
mov
sub
sub
out
and
xchg
in
sbb
lea
jno
aas
shll
subb
andb
imulb
dec
adc
mov
aam
mov
cmp
stos
pop
ljmp
popa
and
lock
pop
cwtl
mov
xor
outsl
mov
mov
and
sub
lds
jp
lret
mov
jmp
outsl
add
mov
add
movsl
clc
xor
sbb
fiaddl
mov
push
mov
cmc
xchg
xchg
mov
out
orl
xchg
in
test
jae
jge
xor
aad
jge
jg
push
mov
dec
mov
pop
mov
cmp
xor
movsl
dec
fadds
ret
fiadds
dec
push
rcrl
aaa
dec
adc
lods
inc
flds
cli
ja
and
push
aas
jbe
inc
fs
lods
xchg
cmp
jo
add
enter
cmpsl
aad
hlt
enter
mov
mov
push
xchg
into
mov
adc
dec
test
loope
dec
mov
out
mov
out
pop
popf
mov
out
je
fdivl
inc
cwtl
in
cmpl
js
and
xchg
mov
sbb
cmpsb
dec
iret
xchg
push
dec
jecxz
mov
mov
ss
push
mov
in
popa
frstor
or
xchg
sub
test
jns
sub
xchg
or
gs
sub
mov
shr
addl
cmp
lods
and
mov
pushl
mov
push
movl
movsl
sbb
dec
mov
clc
imul
mov
jb
jb
push
jmp
jle,pt
jo
mov
ficompl
orl
jmp
or
cmp
pop
cmp
dec
int
mov
jo
out
mov
ret
hlt
jb
mov
popw
repnz
add
repnz
jmp
or
cmp
popa
clc
fwait
pop
popf
xor
sarb
xchg
mov
inc
out
jbe
out
push
sbb
cmpsl
insl
cmp
inc
in
icebp
mov
aam
cmp
popf
pop
fwait
xor
lods
mov
add
ret
mov
sbb
into
dec
sbb
jg
insl
push
lods
xchg
rolb
popf
add
and
pop
xchg
adc
lods
call
shlb
cmp
inc
sub
int3
jecxz
or
std
xchg
xor
push
sbb
addb
je
jns
push
xchg
lods
adc
jecxz
xor
or
test
icebp
cmp
jo
xor
inc
push
jae
and
pusha
movb
adc
mov
push
test
lahf
or
jo
fsubr
xchg
adc
out
add
jl
mov
pavgb
adc
ljmp
lods
call
imul
lods
fidivs
add
lret
call
xchg
fstenv
cld
mov
pop
iret
inc
xor
jecxz
jns
xchg
fwait
test
fadd
test
xlat
mov
in
fistpll
xchg
jb
push
cs
iret
mov
pop
xchg
imul
pop
je
jecxz
aam
fwait
gs
imul
ret
icebp
cmp
icebp
ljmp
daa
jp
xor
fdivr
jmp
in
mov
int3
pop
sbb
mov
insb
and
mov
out
jne
insb
ljmp
scas
in
cs
xor
gs
incb
mov
ja
imul
adc
call
adc
out
and
inc
adc
sub
fmulp
jo
cld
cmpsb
test
popf
lahf
inc
push
cmpsl
les
repnz
push
push
jge
mov
and
mov
pop
sbb
cli
sahf
cmp
ret
inc
sbb
mov
pop
adc
std
push
mov
add
outsb
imulb
jg
or
jne
scas
movsl
jo
push
xchg
inc
cmp
hlt
sbb
cwtl
xchg
test
test
scas
lods
adc
pop
push
mov
sbb
nop
test
push
in
mov
repnz
das
int
mov
ds
lods
sub
push
sub
aas
push
add
cmpsb
inc
stos
and
loope
cmp
jne
jl
inc
imul
in
dec
mov
cmp
inc
inc
fsubrs
xchg
call
xchg
add
out
scas
push
adc
jns
mov
or
test
push
fidivrs
fisubl
idiv
jge
jmp
push
lret
and
xor
cmp
cltd
loope
inc
fimuls
hlt
push
pop
sbb
pop
lcall
js
push
xchg
movsb
dec
jle
lds
arpl
mov
cmp
mov
mov
loop
or
dec
and
lcall
cmpsb
cmp
arpl
xor
mov
or
repz
aas
mov
and
cmp
adc
dec
sbbl
imul
push
movsl
jp
cltd
xor
inc
fmuls
sub
jp
xchg
add
jae
gs
jge
les
and
inc
xchg
decl
mov
jp
enter
in
cwtl
cmpb
icebp
pop
pop
mov
mov
inc
loop
cmp
bound
push
add
pop
les
sbbb
jo
sti
inc
roll
push
mov
nop
inc
pop
icebp
sbb
aaa
test
or
sub
in
nop
or
xchg
add
jp
xchg
pusha
pop
clc
insl
lret
fdivs
mov
or
fwait
mov
mov
inc
cmp
adc
sub
adc
dec
xchg
inc
fptan
mov
sarl
xor
sub
rol
mov
int3
cs
and
mov
mov
addr16
inc
or
inc
lcall
lock
add
fistpll
movsl
inc
xchg
or
jp
clc
pop
stos
imul
loope
scas
ss
icebp
adc
aas
inc
pusha
push
mov
cmc
lea
adc
xor
mov
sbb
xor
adc
fcompl
mov
data16
int3
inc
sub
sub
sub
pop
xchg
add
cli
mov
rclb
ljmp
sti
push
mov
xor
adc
fcoms
mov
jo
push
mov
scas
mov
daa
cmp
ds
lcall
sbb
mov
mov
sub
cmpsb
jno
cltd
inc
ret
jle
leave
rcll
sbb
sbb
gs
mov
cmp
lds
fdivs
sub
or
push
mov
push
xchg
aaa
adcb
adc
arpl
push
inc
mov
jno
lret
mov
xchg
popa
inc
or
xchg
cmp
mov
insl
sbb
jecxz
dec
mov
fcmovnb
out
mov
fldt
inc
fmuls
xchg
aaa
add
push
pop
push
loopne
mov
push
sbb
dec
stc
mov
mov
ss
iret
nop
or
bound
hlt
sbb
dec
out
adc
and
in
mov
lods
mov
push
out
gs
add
into
sahf
inc
adc
clc
push
cmp
rorb
mov
les
jno
jae
inc
aas
sahf
pop
inc
xchg
popa
mov
push
orb
jnp
in
or
cmc
decb
sub
aaa
movsl
arpl
cs
jnp
adc
fnstenv
inc
hlt
cmpsl
add
add
mov
popf
pop
das
lods
sti
lds
cmpsb
xchg
jecxz
sbb
shrl
test
icebp
xor
pop
imul
mov
mov
inc
cltd
cmp
rcrb
les
push
cli
push
lods
dec
pop
mov
gs
adc
orl
fistpll
sbb
aaa
mov
movsl
lock
out
sbb
test
inc
mulb
add
jo
fistpll
insl
and
cmp
sub
and
xlat
jae
sbbl
add
xor
add
shl
xor
lret
sbb
movsb
ss
sahf
cmp
sub
pop
cli
inc
adc
cmpl
cmp
jle
jb
add
lods
outsl
sbb
cmp
adc
mull
cmc
in
aas
lcall
lea
std
lcall
sub
jns,pn
mov
stc
adc
js
out
mov
in
inc
adc
and
inc
mov
mov
das
test
push
out
sbb
fldcw
lods
fmull
leave
imul
sub
lods
sub
mov
lea
test
mov
lock
in
jno
lods
sub
lds
je
into
lea
xor
or
cld
jmp
lods
sub
testl
jl
lea
scas
sub
xor
js
lods
sub
iret
sub
xor
jl
mov
shld
mov
pop
cld
subb
push
adc
or
jne
popa
inc
push
jg
fdivrs
jo
xchg
fcompp
xor
pop
sub
fdivrs
xor
jae
mov
fidivrs
adc
les
out
jae
scas
sti
fnstcw
jmp
call
movsl
fimuls
fcmovnu
push
into
mov
mov
ret
xor
dec
pop
and
or
mov
into
mov
mov
rcll
xchg
xchg
add
mov
aam
xor
negb
cld
cmp
push
cltd
loop
out
out
lret
fadds
adc
mov
les
xor
mov
out
dec
orl
mov
add
fldl
cmp
mov
sub
fildll
popf
inc
fnstsw
or
or
adc
mov
jbe
fwait
inc
nop
push
sbb
pop
cmc
mov
sbb
sub
push
mov
cltd
inc
jns
out
sbb
push
arpl
and
jb
and
xlat
jl
xchg
sub
hlt
mov
cltd
inc
popa
movsb
mov
leave
filds
xchg
pop
mov
scas
jl
je
aaa
jp
iret
xchg
sbb
dec
dec
adc
jnp
dec
cmp
push
clc
call
cld
jecxz
jb
jg
pushf
bound
mov
sarb
jg
jle
cli
mov
mov
jo
jg
je
insb
es
loope
push
idivl
imulb
mov
xor
gs
scas
xor
lret
or
cmp
push
cli
push
sub
movsl
sub
mov
sbb
sahf
xadd
mov
push
cli
pop
test
test
mov
in
xor
negl
nop
in
je
mov
mov
cmp
cmpsl
fists
or
jo
jno
cmp
xchg
jnp
lds
sarw
pop
mov
stc
mov
push
and
pop
testl
andl
addr16
dec
outsb
out
std
mov
xor
in
outsb
sti
sub
push
dec
loop
jbe
xchg
mov
push
xor
jle
sub
xchg
mov
xor
mov
leave
cltd
cmp
out
push
popa
and
cli
aas
or
adc
scas
sub
dec
mov
ljmp
cmc
es
jbe
adc
test
dec
jnp
aaa
xchg
int3
mov
mov
xchg
inc
ss
jbe
sbb
dec
push
and
jnp
cmp
sbb
inc
pop
fdivrs
mov
aam
ds
push
jo
scas
sub
insl
xchg
inc
scas
adc
add
mov
cmpsl
xchg
aad
popa
xchg
jmp
and
add
clc
cmp
jnp
out
pop
mov
notl
call
cwtl
hlt
sbb
pop
mov
mov
mov
aaa
push
fucomi
imul
lock
inc
cmpsl
das
mov
pusha
mov
xchg
out
sub
int3
xchg
add
es
push
adc
sub
or
mov
mov
aad
mov
push
sbb
mov
cltd
xor
mov
sarl
mov
cmp
sub
pop
je
loope
jl
roll
int3
nop
jae
and
xchg
lods
fdivrl
lds
enter
pop
stos
adc
lods
hlt
mov
in
out
sti
pop
cmp
and
jmp
pop
push
sub
jne
push
jns
lods
int3
pop
add
orl
loope
xchg
push
xor
inc
fldl
mov
jmp
fisubrs
mov
or
mov
mov
push
pusha
mov
arpl
rolb
or
mov
pop
pop
push
out
or
push
iret
sub
sti
rcrl
mov
adc
mov
or
pop
ja
incb
push
clc
popa
enter
out
sbb
insb
stc
popa
fiaddl
pushf
inc
shrl
mov
and
adc
jo
iret
xchg
xchg
sar
mov
inc
idivl
add
mov
nop
out
jb
mov
xor
js
je
imull
popf
fwait
jecxz
pop
sub
adc
and
cmp
aaa
or
sahf
and
adc
xchg
je
les
inc
pop
jns
adc
push
int3
lods
xor
and
popa
mov
jmp
test
mov
fnsave
inc
test
rclb
scas
inc
adc
dec
inc
adc
clc
pop
mov
cmp
loop
pop
ret
enter
mov
mov
lahf
cmp
and
hlt
jnp
mov
jmp
popf
cmp
mov
ret
imul
mov
xchg
mov
es
cmp
jbe
mov
push
mov
inc
rolb
out
icebp
gs
stc
jmp
ret
mov
loopne
push
sti
lcall
rorb
sbb
lea
into
addr16
mov
pop
add
fimuls
dec
cs
push
shl
mov
repnz
outsl
and
lret
xor
jmp
push
inc
pop
ret
mov
jno
push
add
pushf
adc
int3
repz
cmp
sub
iret
add
xor
js
rolb
inc
jb
ljmp
subl
testl
data16
xchg
lods
sub
lods
mov
jl
pop
loope
scas
lahf
mov
jo
jbe
movsl
outsb
and
jmp
mov
into
pop
leave
pusha
mov
push
mul
fisttps
mul
imul
pop
int3
sub
or
ret
xor
adc
cld
icebp
cmpsb
sub
enter
inc
push
add
nop
dec
or
aas
jp
dec
adc
push
push
mov
cmp
in
aaa
mov
cmpsb
fistpll
jp
sub
cmp
into
xchg
dec
adc
ror
mov
sbb
mov
lds
mov
inc
push
stc
adc
cltd
aas
push
xlat
fadds
es
bound
mov
sbb
push
sub
or
orl
aam
imul
addr16
repz
xchg
cmp
out
push
addr16
pop
loopne
lds
sub
or
inc
xor
push
sub
xor
roll
shrl
xchg
adc
mov
pop
std
inc
lods
xor
int3
sti
outsl
push
sub
dec
fldl
mov
fdivl
movsb
cmp
out
stos
xor
repnz
jo
xor
icebp
push
repz
push
add
orb
in
lock
sbb
icebp
jae,pt
std
and
rol
shl
lea
daa
rorb
ficoms
jmp
in
dec
pop
adc
and
fldenv
mov
push
pop
push
add
sti
idivb
dec
mov
outsl
jmp
push
lods
jle
lds
dec
sbb
mov
xchg
sub
inc
scas
sub
xor
repnz
push
icebp
fwait
cmp
pop
ja
mov
mov
cmc
bound
sbb
jle
xchg
adc
ret
xchg
shlb
roll
adc
xchg
inc
push
out
pop
cld
loop
movsb
cmp
xlat
outsb
xor
ret
push
or
fisttpl
push
cld
xchg
mov
js
fildll
xchg
aas
xchg
xor
mov
and
mov
fdivs
xchg
or
sahf
inc
testb
jl
pop
add
aam
inc
adc
out
mulb
add
pop
adc
je
fisttps
fwait
jne
movsb
xor
xchg
jne
mov
movsb
sbb
push
jle
daa
loopne
fidivl
sti
dec
or
iret
or
icebp
sub
lock
jge
inc
dec
cmc
xor
aaa
mov
inc
push
inc
xchg
sahf
cmp
lcall
andb
out
fists
int
pop
push
adc
mov
mov
gs
notb
mov
add
mov
or
or
lods
sub
je
sub
xor
pop
dec
repnz
xchg
lea
push
out
pop
pop
pop
add
mov
cmpsb
nop
arpl
mov
lds
ret
inc
sub
nop
into
cwtl
cmp
pop
adc
add
inc
sub
cmp
mov
fmul
mov
mov
cmpl
pop
stc
mov
mov
pop
sbb
test
hlt
add
lock
sahf
inc
mul
aaa
popf
sub
rcrl
xchg
cmp
jbe
ja
inc
negb
cwtl
inc
lea
cld
sbb
mov
inc
pusha
bound
cmp
rcrl
pop
lahf
inc
ljmp
into
nop
les
jle
adc
aas
adc
sbb
inc
imul
leave
cmp
fdivrs
es
mov
add
fsubl
stc
bound
inc
dec
adc
inc
dec
push
inc
adc
jp
adc
adc
cld
roll
scas
sete
mov
lcall
rolb
and
jbe
cmp
imul
rorb
int3
inc
push
ss
ljmp
jbe
das
pop
jmp
inc
jne
dec
xor
lcall
mov
push
inc
or
jns
jmp
xor
stc
pop
or
paddsb
push
pop
les
mov
mov
sti
mov
mov
pushf
cld
mov
jnp
lea
jo
and
mov
sbb
mov
sarb
clc
gs
xor
pop
sub
mov
mov
push
fistpll
leave
jno
aad
les
es
ljmp
shrl
test
and
sahf
out
pop
std
add
icebp
sbb
enter
mov
sti
daa
mov
imul
mov
jns
daa
jne
xlat
jp
bound
leave
daa
insb
xchg
cmp
xor
andl
mov
mov
lcall
or
fsts
notl
mov
test
jne
mov
movsb
mov
fiaddl
fnstenv
repz
inc
mov
push
lock
lea
js
ficompl
cwtl
mov
mov
push
lods
dec
or
nop
or
or
loope
out
push
negl
inc
addr16
testl
out
pop
rorb
dec
iret
xchg
jne
jae
jae
mov
popa
mov
imul
imul
call
jnp
mov
movsb
xor
cmc
cli
push
add
in
cmpsl
xor
push
add
out
insb
in
sbbl
stos
xor
cmp
xchg
mov
mov
lods
orb
mov
and
aam
push
cmc
pop
push
cmp
sub
push
push
cmpsb
or
xchg
iret
clc
dec
adc
sbb
movsl
pop
inc
rorl
push
sarb
push
testl
pop
adc
test
mov
out
popa
lods
outsl
dec
inc
adc
js
push
adc
sub
hlt
andb
loopne
dec
je
and
push
lcall
xor
and
cld
push
mov
cli
adc
dec
loop
movsl
sbbl
das
or
cwtl
sub
cmp
pop
mov
stos
insl
icebp
mov
jl
lods
mov
mov
jl
lock
pushf
int3
sahf
sub
inc
pushf
daa
dec
or
rcll
stc
pop
ret
cmp
dec
dec
lock
cs
mulb
test
hlt
scas
ss
mov
mov
cmp
mov
loopne
jne
dec
inc
lea
mov
sahf
jg
popa
xchg
jno
out
lds
fndisi(8087
outsl
adc
xor
jae
jo
mov
dec
push
dec
cmp
testb
pop
rcrl
inc
adc
imulb
sub
jmp
xchg
jo
or
in
jo
cld
mov
xor
push
jbe
or
sbb
lock
and
outsb
aas
add
inc
jle
enter
mov
das
mov
ret
xchg
lea
ret
rcl
je
mov
xchg
cmp
lea
cwtl
lods
xor
dec
mov
ret
sub
mov
sub
pushf
cmp
ss
std
lahf
push
inc
cmc
mov
inc
adc
pop
std
xchg
mov
mov
cli
lods
fwait
inc
jnp
xchg
cmp
or
jg
jg
aad
mov
mov
fldenv
cli
mov
lods
sarl
pop
out
jo
imul
sbb
inc
lds
inc
test
rolb
adcl
enter
inc
adc
mov
xor
iret
mov
out
rcrl
mov
pop
jbe
push
rcrb
mov
pop
out
push
shrb
roll
or
sbb
mov
test
jl
pushf
pusha
sbb
mov
notl
mov
aam
das
mov
add
je
push
push
mov
outsl
arpl
adc
dec
mov
dec
or
repnz
xchg
inc
cld
out
adc
loopw
stc
add
scas
pop
out
mov
push
mov
mov
inc
dec
pusha
mov
xchg
xchg
jo
jae,pn
es
popf
addr16
outsl
sbb
dec
pop
add
sub
pop
mov
cmc
inc
push
std
out
dec
push
test
mov
movsb
cmp
es
cltd
repz
inc
cli
inc
adc
lcall
mov
shlb
add
inc
push
push
inc
roll
mov
insl
ss
mov
fs
dec
cmp
or
mov
jecxz
dec
pop
mov
sub
dec
gs
jbe
push
in
jbe
jb
out
gs
cli
push
jno
lahf
xchg
xchg
dec
js
sub
sahf
stc
popa
rclb
in
push
jl
adc
or
insl
push
pop
inc
or
test
or
aam
cltd
inc
and
mov
and
cmp
insb
aaa
lcall
jne
jbe
lds
lds
mov
test
jmp
loop
jmp
ljmp
pop
cmp
pop
lcall
dec
push
fiadds
mov
scas
xor
cltd
add
sbb
imul
inc
scas
xor
mov
push
ret
mov
in
xor
and
sub
movsl
les
xchg
aad
sahf
or
lcall
shl
adcb
push
add
into
rcll
and
imul
test
push
mov
mov
divb
lret
outsl
xor
xchg
xchg
js
xchg
jno
or
jnp
ja
lock
lock
cmpsb
arpl
push
jbe
addr16
push
xchg
popf
xor
jno
mov
rcll
pop
add
add
test
or
xor
lock
jmp
cld
mov
fwait
andb
in
mov
test
insl
icebp
stos
jnp
pusha
jno
push
push
inc
imul
leave
stos
imul
ljmp
rol
into
mov
or
imul
mov
mov
faddl
cld
inc
in
ss
popf
pop
lock
jmp
repnz
add
and
lret
lds
loopne
sub
cmp
and
into
ds
add
das
sub
jle
cmp
fwait
or
pop
add
andb
movl
imul
xchg
jge
pop
mov
xchg
cmp
fldt
inc
movsl
dec
xchg
mov
lret
mov
cmp
xchg
les
ficomps
pop
or
movsb
mov
xchg
mov
aad
mov
jp
jg
call
imul
adc
jg
dec
xchg
aas
dec
adc
scas
inc
pop
dec
mov
stos
sub
stos
roll
mov
cmpsl
std
pop
pusha
push
fistpll
jns
notl
in
jb
jle
icebp
pusha
adc
dec
push
add
push
xchg
xor
sub
fdivs
xor
out
push
cmp
mov
sbb
jge
es
pop
xor
test
push
jb
sub
imul
dec
imul
outsl
push
push
insl
or
mov
cli
jecxz
sub
inc
jg
adc
pop
add
or
shrb
out
loop
and
cmpsb
sub
lods
das
in
iret
push
mov
xor
sbb
cmp
dec
sbb
pop
cld
xchg
ljmp
push
js
inc
lods
nop
imul
mov
repz
outsb
jmp
loopne
push
push
std
pop
cld
push
jmp
cmpsb
xor
fidivs
jo
push
mov
mov
push
cld
cmpb
xor
jno
push
sub
mov
lods
xor
mov
lds
or
data16
jno
pop
icebp
pop
dec
xlat
leave
xchg
outsb
popf
test
add
or
and
adcb
mov
jl
push
push
movsl
cmpl
test
imull
lcall
aaa
xlat
dec
adc
es
pop
lea
add
sbb
jbe
push
mov
xchg
pop
arpl
popa
sbb
repz
dec
aam
leave
adc
sbb
sbb
mov
cmp
pop
pushf
inc
or
push
mov
in
fiadds
mov
scas
or
xchg
hlt
and
push
loop
test
aas
mov
lret
jg
and
pusha
xor
lock
jl
into
xchg
push
imul
inc
loopne
jle
test
or
negl
pop
in
jno
notl
mov
mov
mov
sub
inc
stos
addr16
cmp
int
push
xor
sub
out
mov
mulb
lods
fidivrs
xor
and
sbb
inc
cmc
pusha
lahf
sti
sub
push
sbb
fsubl
mull
sub
dec
adc
cmp
into
pop
sarl
pop
test
cmp
test
cmpsb
sub
sbb
fldl
xchg
cmp
xchg
aad
mov
icebp
sarb
bound
adc
stos
xor
test
pop
std
popa
popa
jne
xchg
adc
jb
cld
inc
rorl
cmpsb
loope
jmp
xor
aam
and
cwtl
or
clc
pop
out
inc
dec
test
aad
xchg
enter
jno
sub
mulb
or
loope
adc
cmp
xor
jl
rcll
add
jp
push
mov
rorb
sarb
das
stos
mov
inc
adc
aaa
call
xor
fs
jne
test
sarb
adc
sahf
aad
loopne
int3
std
pop
cmp
scas
movsl
pusha
out
pushl
sti
adcb
add
rclb
into
sub
inc
and
and
xchg
inc
ja
xor
std
clc
mov
scas
arpl
xor
or
insb
scas
lret
push
jmp
xor
jp
xchg
and
addr16
faddl
add
dec
in
pop
int
cmc
and
cmp
iret
xchg
push
sub
pop
out
inc
or
jp
fidivrl
sub
sbb
test
and
pop
pop
clc
gs
lea
scas
add
hlt
pop
push
iret
pop
mov
mov
ret
xchg
add
insl
jmp
pop
or
imul
mov
fnstcw
lods
pop
std
repz
lods
in
or
xor
enter
and
stos
sub
aas
adc
inc
jns
dec
sub
or
hlt
xor
jne
in
cs
bound
cmp
xor
pop
cmpsl
push
popa
call
inc
sarb
js
pop
add
cli
adc
jno
jmp
inc
or
movsb
push
cmp
jns
dec
enter
cltd
mov
mov
xor
xor
sbb
jb
lods
inc
lret
mov
mov
mov
fs
icebp
push
lret
scas
sub
fstps
idivl
fmuls
fimull
faddl
les
daa
in
sbb
inc
imull
push
jecxz
cltd
inc
mov
mov
or
mov
mov
add
stos
aam
fsts
xor
mov
sbb
mov
push
dec
lcall
jmp
pusha
call
cmp
jle
aam
xchg
aas
mov
std
dec
rorb
sub
mov
lods
adc
cmpsb
into
stc
gs
scas
sub
mov
mov
lods
xlat
test
push
add
add
ja
out
sbb
fwait
pop
idivb
scas
addb
push
loopne
add
movsb
xor
mov
xor
pop
xchg
fnstcw
addl
dec
imul
push
test
xchg
lea
mov
leave
loope
out
jge
mov
outsb
xlat
jle
jmp
test
add
outsl
xor
mov
and
xor
xor
cli
fistl
pop
jae
adc
xchg
insb
mov
cmpsb
call
icebp
lods
sub
xchg
lea
inc
adc
and
mov
cmpsl
test
xlat
sbb
fisttpl
cs
popf
mov
mov
push
cmp
add
pop
push
lcall
std
inc
mov
int3
cmp
daa
lret
xchg
cltd
int
aaa
jmp
es
and
inc
rcrb
sbbl
dec
aaa
popa
xchg
inc
mov
xor
repnz
xor
dec
shr
imul
push
call
repnz
sub
aaa
push
and
mulb
mov
mov
sbb
dec
inc
add
push
xchg
and
cmp
ja
push
test
inc
jge
rolb
xchg
ss
xor
out
or
test
adc
sub
inc
mov
mov
mov
mov
push
jge
inc
adc
orb
mov
dec
push
lods
xchg
rclb
mov
push
dec
mov
aam
xchg
insl
in
aad
push
mov
popa
icebp
je
rolb
sub
dec
ret
sub
cs
pop
nop
imul
push
add
lds
test
sbb
adc
jb
js
inc
add
and
clc
mov
mov
lds
aas
stos
cli
pop
loopne
xchg
inc
cmpsl
add
and
push
outsb
xor
and
cwtl
mov
aad
leave
xor
ficompl
rorb
pop
loopne
daa
movsb
leave
adc
sarb
ds
adc
imul
lret
pop
xchg
sbb
in
ret
xor
ss
adc
orl
arpl
lods
pop
sub
cmpb
clc
les
aam
jo
adc
mov
scas
mov
out
push
std
xchg
cmp
addl
mov
mov
or
mov
ret
dec
push
outsb
adc
jl
jo
adc
mov
pop
sub
in
cmpsl
ss
std
in
jae
or
push
jno
inc
mov
test
lods
repz
stos
or
adc
mov
mov
repz
lock
pop
testl
jg
ret
inc
insb
jecxz
andl
ljmp
outsb
sub
mov
adc
inc
mov
jecxz
pop
stc
scas
stc
cmp
mov
lea
mulb
out
push
jp
jle
aaa
outsb
cmc
mov
insb
hlt
mov
scas
out
je
push
clc
popa
pop
add
pop
add
stc
popa
mov
inc
mov
icebp
aad
push
stos
add
pop
ffreep
fldl
cmp
sub
jg
mov
push
jecxz
xor
cmpsl
jmp
cltd
ds
icebp
test
mov
cmpsb
sub
mov
sub
jnp
out
out
dec
mov
mov
push
adcl
add
addl
xor
mov
aad
pop
jg
add
movsb
lea
adc
movsl
xor
scas
xchg
inc
ss
xor
cmpsb
insb
pop
shll
pop
cli
aas
das
inc
adc
add
das
mov
sub
fcmove
xchg
and
addl
xchg
mov
call
std
stos
xor
leave
mov
negb
test
mov
pop
pop
mov
loope
clc
cli
arpl
fstps
dec
pop
sti
fs
sahf
mov
mov
or
xor
je
xchg
inc
outsb
jns
scas
aaa
xor
cmp
jle
sbb
lods
aam
loopne
lods
inc
in
ret
mov
cmpsl
and
or
mov
dec
pusha
sbb
xchg
cltd
inc
or
xchg
lock
ljmp
pop
inc
and
not
pop
xlat
test
or
sbb
jle
inc
mov
mov
adc
mov
insb
in
xchg
cmp
pusha
fwait
popf
cmp
ja
mov
fistl
cld
imul
cmp
loope
cmp
jbe
test
jecxz
push
mov
mov
fucom
imul
stos
sub
fdivr
pop
loop
mov
xchg
stc
mov
pop
subb
out
jp
imul
repnz
std
pop
insl
jmp
jns
icebp
shlb
inc
in
in
outsb
push
lcall
xchg
dec
mov
movsb
xor
cmp
fisubs
lret
add
addl
int
pushf
es
mov
outsl
jmp
xor
mov
test
lret
lea
negl
fcomps
pop
push
ja
sti
push
movsb
cmp
movsl
cmp
adc
pop
inc
cmp
sbb
aas
into
mov
std
rclb
add
xor
mov
jae
mov
aas
sarb
cmp
xor
or
and
aas
movsb
inc
cmp
adc
dec
xchg
cmp
into
xchg
cmp
mov
inc
repnz
insl
jmp
in
lahf
cmp
mov
cld
xchg
mov
outsl
jmp
lods
xor
jmp
stc
into
ja
mov
loopne
mov
xchg
lea
lods
xor
cmc
pop
pop
pushf
test
mov
or
shlb
push
popa
mov
sub
xchg
sti
pusha
jmp
dec
adc
imul
jmp
or
pop
mov
insl
and
mov
jl
shrl
shl
jl
mov
ret
pushf
pop
add
dec
adc
push
adc
out
xchg
mov
inc
sahf
faddl
mov
scas
adc
fwait
cld
push
cli
sub
pop
add
cmp
xchg
pop
scas
xor
or
sarl
test
inc
or
xor
loope
negl
repz
xchg
jnp
add
enter
inc
pop
ret
and
into
xchg
scas
xor
pop
mov
scas
addr16
movsb
jbe
movsl
lds
push
mov
movsb
pop
mov
cmp
ret
pop
cmp
cmc
mov
adc
loope
xor
mov
fimull
or
aad
sub
add
cmpsl
pop
repz
and
shrl
das
jg
pop
pop
mov
in
stos
repz
and
inc
repnz
and
lret
xlat
mov
les
cmc
cmp
jge
dec
imul
push
out
xor
fsubrs
mov
pop
mov
fnclex
jns
mov
stos
call
or
lret
push
mov
pop
push
call
add
pop
icebp
push
add
push
push
lods
inc
xchg
xchg
sub
fstps
jg
jo
push
dec
push
popf
jle
icebp
mov
lahf
and
rclb
adc
and
lds
mov
jle
or
pushf
xor
popa
mov
xchg
cmp
ds
fsubrs
pop
pop
cmp
testb
xor
stos
gs
add
mov
and
or
test
outsb
add
jge
and
shrl
xor
enter
mov
shlb
jge
icebp
aad
and
add
cld
inc
repz
and
enter
mov
ret
repz
insb
adc
adc
mov
loopne
and
mov
cmpsl
ds
fnstenv
xchg
pop
mov
jp
mov
lods
out
add
cmp
mov
pop
push
jmp
add
repnz
decl
adc
enter
movsl
lret
sbb
jg
outsl
aam
mov
ret
hlt
popf
and
into
adc
inc
fldenv
push
pusha
divl
dec
in
xchg
jle
lds
add
out
xor
pusha
mov
xchg
cmp
aas
in
fsubrs
push
pop
cmp
testb
xor
arpl
xor
mov
and
or
subl
add
aad
mov
scas
idivb
sub
stos
inc
add
xor
pop
push
popf
mov
iret
jbe
jge
lock
and
add
sti
inc
repz
and
outsb
inc
fcomps
rcrl
cmp
imul
adc
mov
fisttps
push
in
xor
jo
test
pop
mov
testl
in
add
aaa
jge
mov
pop
push
jmp
add
pop
repnz
decb
adc
xchg
cs
movsb
lret
sbb
jg
outsb
aam
mov
shl
repz
and
int
adc
pop
addr16
cwtl
inc
pusha
divl
dec
in
xchg
jle
les
insb
add
pop
mov
xchg
cmp
aas
in
fsubrs
add
testb
xor
bound
leave
mov
and
pop
push
aas
subb
add
aam
mov
lods
cmc
jnp
daa
iret
stos
inc
add
xor
enter
mov
into
jne
jge
out
aad
and
add
cli
inc
repz
mov
insl
inc
fcomps
rcrb
cmp
push
jle
inc
mov
mov
fimuls
push
jmp
cmpsl
arpl
jo
test
pop
mov
testl
in
add
ss
mov
push
push
jmp
ljmp
pop
repz
cld
mov
movsl
dec
lods
inc
add
lret
sbb
jg
insl
aad
lahf
dec
push
popf
jns
repz
lcall
inc
in
inc
fstps
ds
imull
dec
in
nop
jle
ret
add
jecxz
xor
ss
inc
jecxz
fsubrs
add
pop
ss
lea
pop
out
mov
adc
pusha
stos
add
faddl
and
add
outsb
add
sarl
and
int
inc
incl
xor
leave
pusha
push
lcall
movsl
in
insl
pop
movl
mov
les
fstps
pusha
imul
aaa
dec
in
adc
inc
mov
arpl
and
mov
push
jmp
or
jno
add
mov
clc
aad
jnp
mov
lods
loop
add
xor
and
xchg
ds
cmpsl
jno
fstps
pop
hlt
dec
cli
es
jnp
mov
les
dec
repz
insl
popf
inc
pop
sahf
ja
hlt
mov
cwtl
and
stos
inc
ljmp
xchg
cmp
clc
insl
mov
out
mov
rorb
add
adc
mov
push
scas
stos
inc
loope
fnstenv
add
pusha
xor
testl
pop
test
xor
mov
and
add
fdivrs
outsl
push
push
mov
lea
bnd
and
stos
inc
std
inc
fwait
xor
lret
cwtl
mov
jg
jmp
outsb
sbb
ds
mov
and
stos
ret
ficompl
mov
dec
out
push
adcb
xchg
mov
fimull
push
out
test
jb
add
mov
stc
nop
shl
jl
scas
pop
scas
loopne
add
xor
mov
test
aas
sti
movsl
jb
xlat
sbb
cmc
dec
clc
nop
daa
sub
adc
ret
hlt
sahf
int3
arpl
adc
ljmp
inc
or
out
xchg
es
inc
call
xor
xchg
cmp
imul
mov
fistps
and
xor
filds
lret
fdivr
jg
sub
lods
pop
cmpsl
push
popf
fdivrs
lret
scas
stc
and
sub
push
jmp
jge
jo
push
sahf
pusha
test
lock
and
lods
inc
sti
inc
pushf
xor
lret
bound
mov
andb
pop
sahf
hlt
cmp
lea
es
shlb
cwtl
loope
leave
adc
push
out
or
sbb
test
mov
lahf
ss
fmuls
in
stos
inc
pop
push
fdivl
jle
pop
mov
cli
xchg
mov
out
add
add
push
pushl
int
ja
mov
or
xlat
cli
mov
pop
testb
sub
adc
dec
scas
inc
jnp
fwait
xor
pushf
int3
arpl
adc
push
inc
out
ljmp
inc
or
in
xchg
es
aas
out
fistl
popa
xor
xchg
cmp
imul
jo
aaa
fstpl
and
bound
jno
dec
popa
xor
clc
jg
sub
lods
pop
cmpsb
push
popf
xlat
jl
lret
lods
clc
and
sub
push
jmp
jl
jo
push
popf
pusha
test
out
jle
and
lods
inc
cli
inc
pushf
xor
bound
mov
andb
pop
sahf
repz
lea
es
mov
loopne
leave
adc
push
out
or
add
nop
xlat
mov
or
stos
inc
pop
add
enter
cli
xchg
mov
out
add
fwait
push
ss
jbe
mov
or
jb
aam
pop
testb
daa
daa
insl
jge
lahf
dec
scas
inc
jp
fwait
xor
fwait
int3
arpl
adc
andl
inc
or
in
xchg
es
ds
fistl
pusha
xor
xchg
aaa
stc
push
mov
pop
fcompl
and
popa
stos
lods
inc
fldl
lret
clc
jg
sub
lods
pop
movsl
push
popf
jnp
lret
lods
mull
sub
push
jmp
jp
jno
push
fwait
pusha
test
in
jle
pop
lods
inc
stc
inc
pushf
xor
int3
arpl
push
lds
sbbl
cmp
lea
daa
mov
mov
fidivs
leave
arpl
jmp
or
add
aad
and
mov
push
jecxz
stos
inc
pop
add
je
jnp
pop
lods
push
sti
xchg
mov
out
add
add
push
std
aaa
into
je,pn
mov
add
xlat
mull
pop
testb
sub
imul
inc
scas
inc
jns
fwait
xor
lcall
inc
in
jmp
pop
fsubrs
inc
or
ljmp
lods
cmp
inc
fcoml
ss
addr16
call
mov
fistpl
and
pusha
test
cld
lret
aad
nop
pop
push
call
scas
pop
mov
xor
mov
incb
fnstcw
jb
push
cltd
pusha
test
jmp
adc
clc
ds
xor
int
dec
xchg
mov
sbbb
or
imul
adc
mov
fdivl
leave
or
cs
out
or
add
mov
mov
add
es
inc
pop
add
jne
jns
pop
stos
push
cld
xchg
mov
out
test
add
iret
sub
and
jle
inc
fdiv
lahf
je
rcll
pusha
testl
jle
fwait
inc
mov
ja
pushf
xor
cwtl
into
gs
push
inc
jmp
sbbl
or
call
or
lods
cmp
inc
fstl
pop
xor
lea
sti
gs
push
jmp
mov
fldenv
xchg
push
pop
cmpsl
lods
inc
fnstcw
jae
cli
lret
bound
cli
xchg
add
sbb
sarb
int
repz
jmp
inc
inc
fidivl
jae
dec
xchg
popa
clc
enter
mov
les
xor
pop
into
gs
mov
sbbl
mov
adc
rolb
lods
mov
fidivl
lret
gs
out
push
call
cmp
push
mov
mov
and
scas
rclb
stos
inc
push
add
jbe
ja
pusha
test
lret
cld
cmpsl
sbb
dec
stc
cmp
sub
mov
jl
inc
fpatan
popf
jne
iret
adc
clc
inc
lock
sub
addr16
cltd
inc
mov
jne
popf
xor
xchg
iret
enterw
aas
jmp
fidivl
cmp
mov
out
sub
mov
loopne
ficoms
pop
xor
cld
arpl
sbb
fsubs
test
mov
inc
xlat
jle
je
clc
lret
bound
sar
xchg
add
jmp
mov
lahf
pop
sahf
shlb
into
test
and
in
sti
inc
inc
fidivl
or
popa
clc
outsl
xchg
sub
ret
mov
cmc
cmp
dec
lea
test
mov
testl
mov
dec
fists
mov
std
in
push
call
cmp
scas
pop
mov
and
lods
rcrl
stos
inc
push
add
ja
jne
pusha
cmpsl
push
xchg
test
out
cli
cmpsb
sbb
xlat
sbb
popf
dec
clc
cmp
sub
mov
jnp
inc
fyl2x
pushf
jbe
into
adc
inc
out
xchg
sub
gs
xchg
inc
mov
je
popf
xor
xchg
shlb
or
sbb
jno
cmp
insb
mov
in
sub
mov
fisttps
adc
int3
mov
data16
bound
test
mov
jno
xlat
mov
subb
push
pop
mov
fidivs
test
sub
cld
xchg
add
cmpb
push
popf
pop
sahf
into
jbe
iret
cmpsl
out
and
in
cli
inc
inc
fidivl
jne
dec
xchg
popa
clc
les
sub
ret
hlt
cmp
addr16
mov
test
mov
testl
mov
dec
loopne
xor
pop
mov
in
push
call
aaa
jp
push
lods
pop
movsb
cmp
stos
ret
and
xor
cmpsb
push
xchg
add
jg
movsb
sbb
aad
pop
sahf
dec
idivb
shll
insl
and
out
jns
inc
lcall
inc
in
xchg
sub
adcb
inc
mov
jb
sahf
xor
lds
mov
test
pop
cmp
push
stc
nop
jecxz
sub
mov
fisttpll
push
push
ss
das
data16
pusha
test
test
mov
jb
sub
dec
nop
daa
subl
scas
inc
aam
fidivs
cmc
int3
arpl
iret
cld
xchg
add
cmpl
or
movsl
out
es
clc
inc
inc
jne
dec
xchg
stc
ret
insb
xchg
sub
shlb
imul
mov
test
mov
clc
bound
ret
push
lods
mov
dec
loopne
aad
lret
push
mov
loop
push
jmp
xor
push
movsb
cmp
test
lods
inc
push
cld
loopne
jae,pn
bound
jmp
mov
sbb
lahf
dec
hlt
cmp
and
inc
pop
out
ja
inc
fucomi
cwtl
jbe
lret
cli
inc
jmp
sub
ds
jo
lahf
ss
or
test
pop
fdivl
aaa
or
push
mov
sarl
dec
fisttps
aaa
into
xchg
push
in
fnstcw
sbb
shll
sub
mov
fidivs
hlt
int
es
xchg
incl
cmpb
mov
lcall
mov
lds
idivb
inc
fsubrl
jbe
dec
nop
arpl
shrl
pushf
loop
sbb
mov
lock
shrl
mov
xchg
mov
stc
nop
pusha
or
cmp
dec
loope
shll
jmp
and
xchg
xor
or
lret
cld
cmpsl
ret
pop
fstps
loope
sub
int3
arpl
ljmp
pop
or
and
mov
jne
inc
fsubr
xchg
ja
enter
aas
jmp
sbbb
cmp
dec
outsb
mov
aaa
out
shrl
pop
mov
xchg
fnsave
or
xchg
loopne
sub
mov
or
test
addr16
pop
cmpsb
push
in
xlat
jge
sbb
clc
je
sub
mov
sub
rcrl
mov
shll
jbe
repnz
gs
std
xchg
std
inc
in
xorl
mov
cwtl
or
mov
ret
pop
out
hlt
cmp
ja
inc
mov
push
sbbb
mov
mov
imul
lock
push
movsl
out
cli
xchg
pop
or
scas
mov
dec
loop
shll
int
lods
imul
push
add
or
enter
cmpsb
les
sbb
jns
outsl
int
mov
ret
hlt
sahf
push
mov
adc
cmp
and
mov
jae
inc
fucomp
xchg
js
or
cld
cmp
pop
sbbl
cmp
in
shrb
add
lock
pop
fidivs
xor
movsl
lods
cld
xchg
fiadds
sbb
or
iret
subl
lcall
push
in
aad
xchg
sub
movsb
cmp
dec
xchg
sub
pop
push
popf
mov
iret
jbe
ja
lock
gs
xchg
cld
inc
in
xorl
mov
xchg
or
mov
ret
repz
imul
inc
mov
addr16
sub
adc
mov
push
test
mov
mov
cmpsb
out
cli
xchg
pop
pop
lds
jge
scas
scas
pop
dec
jecxz
iret
ss
lods
push
fisubs
push
jmp
decl
or
nop
daa
stc
movsl
les
sbb
jns
outsb
int
mov
shr
repz
push
mov
adc
mov
and
mov
jb
inc
fucomp
xchg
js
lds
gs
cmp
xchg
sub
nop
cmp
jecxz
shrb
add
push
ss
xchg
pop
fidivs
xor
movsl
arpl
sub
mov
sbb
or
iret
subb
lcall
push
in
aam
xchg
daa
iret
movsb
cmp
dec
xchg
sub
ret
pushf
mov
into
jne
ja
out
into
gs
xchg
sti
inc
in
xorl
dec
xchg
or
lahf
out
mov
repnz
push
js
inc
mov
xchg
sub
btrl
or
mov
mov
mov
cmpsb
in
cli
xchg
pop
push
lds
jl
scas
lods
pop
dec
jecxz
into
ss
stos
push
fsubl
push
in
push
std
mov
das
jae
or
xchg
sub
mov
mov
dec
mul
jns
insl
into
gs
dec
add
repnz
push
mov
adc
mov
push
sub
xchg
aas
pop
icebp
jo
inc
fsubrp
xchg
js
ret
or
cmp
xchg
sub
aaa
mov
imul
rcrl
lock
into
mov
sti
out
in
cmp
fwait
sub
mov
pop
push
sub
sub
xchg
sbb
lcall
jg
inc
sub
mov
cwtl
lods
pushf
pop
dec
sbb
mov
jl
dec
std
fwait
mov
jne
loopne
mov
int3
imul
push
scas
pusha
and
mov
inc
gs
cmp
mull
in
jp
adc
cld
xlat
iret
xor
fmulp
mov
pusha
adc
jb
mov
sub
or
cmpsb
mov
pop
lea
mov
pop
imul
push
xchg
rolb
xor
cmp
xor
xchg
and
mov
adc
test
jbe
mov
sbb
inc
mov
dec
das
lods
xor
lock
clc
mov
insb
and
dec
adc
test
cmpl
mov
mov
mov
clc
push
jl
mov
dec
std
es
jns
add
dec
adc
push
icebp
mov
scas
pusha
or
mov
aas
cmp
sbb
test
lahf
mov
arpl
cmp
sahf
ss
repz
mov
addl
jle
push
sub
stos
inc
xchg
pusha
mov
or
and
gs
outsl
adc
sahf
jg
jns
or
repz
out
test
dec
inc
das
inc
inc
sahf
mul
push
adc
daa
lahf
mov
pop
add
jl
imul
ds
adcb
xor
jmp
push
dec
dec
mov
ror
and
sub
xlat
scas
jae
dec
pop
add
sub
dec
mov
adc
push
xchg
lret
push
adcl
add
add
rcl
inc
jno
mov
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
mov
lds
fadds
fnsave
inc
movsb
loopne
add
je
jl
sbbl
mov
push
outsb
mov
les
outsb
xchg
fadd
loope
adc
scas
mov
aas
pop
cmpsb
rcrb
scas
nop
out
dec
jb
push
xor
mov
mov
mov
lock
xor
inc
outsb
push
add
cwtl
mov
notl
mov
xor
mov
sbb
hlt
dec
orl
rclb
les
hlt
sub
xor
fstl
add
jmp
push
incb
cmp
cld
mov
sub
fsubrs
sbb
adc
xor
insl
jl
rcl
xor
inc
int
and
in
push
data16
int
and
jo
xor
pop
jl
sbb
or
cli
bnd
in
test
add
aas
data16
mov
shlb
test
push
push
scas
test
and
pop
push
cmpsb
imul
or
ss
mov
xchg
adc
mov
inc
dec
rclb
std
es
lods
out
fs
stos
xchg
cmpb
dec
jo
lret
jl
adc
pop
inc
daa
adc
cmpsb
imul
in
mov
bound
mov
outsl
out
pushf
cmp
sbb
test
pop
or
addr16
call
pop
add
cmp
nop
in
pop
jo
enter
int3
pop
pop
loope
push
push
movsl
shl
pop
loope
stos
xchg
lret
xor
rorb
pop
hlt
aas
push
loop
cmp
stos
loop
jb
jle
push
sbb
pop
fbstp
and
or
push
das
jo
in
pop
cltd
push
push
and
fsubs
add
jmp
push
add
dec
xor
mov
push
les
mov
pop
jg
jp
xchg
add
dec
ljmp
mov
adc
adc
cmp
adc
jp
sbb
stc
lret
ss
daa
sbb
push
data16
std
mov
add
inc
mov
sub
lods
sarb
and
sub
mov
dec
cmp
ret
or
push
test
sbb
jg
out
sahf
js
jae
mov
lret
mov
cmp
xchg
inc
scas
sahf
jae
pusha
cmpsl
rol
adc
cmp
sbb
jne
aam
jmp
xlat
push
insb
and
lds
xor
inc
and
xchg
out
cwtl
insl
dec
inc
fnstenv
cwtl
mov
sbb
subb
mov
fs
dec
mov
jmp
stos
push
inc
push
push
stos
mov
cld
push
mov
mov
lcall
icebp
jecxz
scas
outsb
or
inc
push
jg
sbb
lds
and
repnz
cmp
sbb
loopne
pop
inc
inc
lahf
mov
or
jle
shr
rol
cmp
insl
scas
cmp
imul
pop
adc
push
xchg
jmp
adc
shr
cwtl
cltd
sbb
test
in
ret
xor
xor
sahf
movsb
int3
add
dec
bound
testl
movsl
jno
jl
pop
push
add
mov
arpl
xor
lret
mov
adc
into
xor
orl
clc
sub
dec
xchg
pop
insl
jno
test
jno
aas
scas
xchg
sahf
arpl
rolb
push
mov
xor
mov
sub
push
stos
rorl
adc
rclb
cmp
jnp
xor
mov
fdivrl
mov
dec
push
or
sti
hlt
ljmp
adc
add
cwtl
lret
push
insl
sahf
inc
mov
outsl
sbb
cli
mov
cmp
and
cli
pop
xor
sti
push
js
idivb
inc
sbb
mov
stc
sbb
push
sub
pop
cmpsb
dec
adc
pop
mov
add
popf
fs
adc
mov
adc
pusha
stc
in
jne
cli
adc
fidivrs
adc
cmc
xchg
hlt
jge
or
pop
div
shrl
xor
repz
and
jle
dec
xor
push
cmp
shrb
inc
mov
lods
out
popa
sub
loopne
enter
sub
adcb
dec
xor
imul
movsb
cmp
int
pushf
rol
lods
push
cmp
mov
ja
jnp
mov
test
out
add
idiv
data16
shlb
movsb
inc
lret
sbb
add
push
popf
inc
add
int
mov
mov
sbb
mov
bound
arpl
jno
dec
nop
add
into
mov
pusha
adc
in
adc
dec
or
cmp
popa
subl
jb
sub
cmp
push
cmpsl
pop
ja
sub
scas
pop
sbb
cwtl
dec
xor
scas
add
pop
fisubl
popa
push
out
fwait
dec
movsb
jnp
lret
in
and
cmp
iret
mov
mov
inc
les
data16
inc
pinsrw
cs
dec
jl
sub
cmp
pop
sahf
sub
in
ss
xor
jb
shll
adc
mov
xchg
cmp
iret
inc
mov
and
cmp
es
cmp
jne
into
mov
dec
cmp
pop
hlt
jb
jl
or
nop
cmp
push
mov
rolb
mov
stos
inc
mov
hlt
mov
dec
popa
add
lea
jg
cmpsb
outsb
std
out
xchg
and
push
and
push
pop
adc
scas
ret
mov
lods
jmp
xchg
sarb
dec
das
jle
out
xor
jge
sbb
pop
cwtl
rolb
or
mov
mov
jae
inc
mov
or
and
dec
xor
aaa
arpl
add
pslld
insb
xchg
mov
outsl
push
sub
jne
jg
mov
dec
xchg
push
test
pop
pop
cmc
iret
adc
mov
inc
dec
mov
adc
pop
xorl
add
xor
arpl
lahf
daa
sbb
xor
and
movq
cmp
push
dec
aaa
add
out
cli
pop
les
mov
cmp
or
sbb
or
sbb
sbb
cmpb
lret
jecxz
xor
jg
leave
inc
adc
sub
mov
pop
shl
jno
icebp
outsb
call
pop
mov
inc
push
cmp
mov
sbb
cli
add
or
out
out
xor
mov
test
push
aam
ja
pop
insb
cmpsl
pop
push
sbb
pop
and
push
setg
mov
outsb
add
xchg
sbb
dec
sub
and
push
lock
fmull
xor
adc
repz
sub
es
pop
in
jecxz
test
mov
add
fstpl
sbb
clc
pop
cmp
xchg
add
xor
rcll
int
in
push
andl
subb
cmp
mov
iret
ja
push
js
cwtl
cmp
cmc
dec
mov
cmpsb
mov
mov
cwtl
xchg
leave
lahf
lods
aam
int3
daa
lea
std
xchg
dec
inc
clc
into
add
mov
inc
ds
sarl
mov
sbb
lea
adc
pop
cs
aam
sbb
in
mov
sub
pop
dec
popa
ljmp
adc
std
sbb
lcall
dec
sbb
js
xchg
xor
js
mov
push
insl
das
mov
lock
cmc
ss
and
sub
out
data16
call
sub
subb
cmp
xchg
adc
inc
pop
xchg
dec
popa
and
jle
xor
pop
lds
jns
push
fcmovne
test
test
test
xor
and
inc
inc
imul
xor
insb
xor
mov
repnz
pop
pop
cld
loopne
dec
adc
inc
jmp
and
pop
dec
adc
push
in
adc
xchg
cmp
pop
iret
add
loopne
sbb
les
push
pop
or
mov
push
loopne
int
mov
fmull
movsl
adc
jo
addr16
dec
std
jo
popf
mov
mov
mov
movsl
xchg
imul
