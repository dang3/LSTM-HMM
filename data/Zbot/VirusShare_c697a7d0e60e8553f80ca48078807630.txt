imulb
or
xor
add
add
add
add
add
adc
lcall
inc
sbb
add
adc
push
jmp
neg
push
mov
add
pushl
call
add
fmul
ret
int3
add
into
mov
scas
scas
lea
ret
mov
dec
and
idiv
enter
lea
push
aam
sti
ficoms
mov
loope
inc
sbb
inc
neg
sub
not
pop
fs
inc
in
sarl
sbb
push
clc
push
ss
nop
add
leave
mov
jno
inc
mov
adc
jge
ret
in
int3
or
inc
or
lock
test
push
dec
jae
imul
jae
xor
adc
nop
out
mov
dec
mov
pop
ljmp
mov
push
push
stos
inc
pop
fsubs
fmuls
mov
repz
mov
cmpsb
out
push
and
add
or
lds
inc
or
cmp
ficoml
mov
in
jnp
rorl
pop
loopne
pushl
xor
xorl
push
mov
push
xor
or
xchg
fisttpl
ss
adcl
not
lahf
cwtl
pushf
and
push
inc
movsb
dec
mov
push
adc
negl
int3
loopne
inc
je
cmp
push
push
fcoml
inc
int3
mov
push
scas
sbb
push
dec
push
inc
clc
int3
sub
pop
mov
in
xor
fldcw
pop
int3
add
clc
filds
insl
push
add
outsb
addr16
inc
sbb
push
inc
orl
das
or
and
sbb
xlat
test
push
mov
adc
push
cmp
call
inc
jle
popa
or
mov
push
mov
in
ror
inc
lods
aam
fcomps
dec
call
push
les
push
lock
add
push
pop
adc
inc
icebp
popa
outsb
addr16
mov
cld
mov
dec
fdivr
movl
enter
mov
test
xchg
cmp
sub
mov
nop
incl
push
in
or
rcrl
push
push
dec
add
sub
push
push
clc
push
cld
push
lock
adc
adcb
aam
dec
arpl
idivb
gs
xor
ret
call
mov
rcl
nop
addl
ret
das
inc
hlt
test
push
mov
sub
aad
subl
push
dec
dec
and
mov
js
js
ret
push
or
shrl
cmpsl
out
rcrb
mov
dec
shrb
push
push
xor
inc
ja
or
inc
push
mov
repnz
js
mov
dec
sbb
push
ficomps
add
lret
push
xor
adc
pop
push
push
fmull
cmp
es
pop
imul
pop
add
sub
das
mov
ds
push
int3
and
pop
push
inc
lret
movsl
lds
add
inc
add
in
ret
mov
int
add
test
mov
ret
dec
neg
dec
add
mov
add
sub
not
dec
mov
sub
not
adc
sub
add
sub
sub
ljmp
sbb
fldt
rclb
enter
ret
sub
ret
add
push
push
mov
inc
into
add
enter
adc
loope
clc
scas
jno
push
std
xor
push
dec
inc
mov
sarb
dec
xor
ss
pop
outsl
add
push
or
fcomps
sbb
incl
adc
mov
shll
sbb
add
adc
fnstsw
pop
sbb
pushl
adc
and
stc
stos
adc
inc
inc
mov
clc
pop
mov
inc
lock
push
sbb
arpl
aas
lods
add
imulb
int3
push
sarl
or
xor
push
int3
movl
add
jmp
jnp
pop
idivb
xor
pop
add
repnz
add
rcr
enter
cmp
mov
dec
mov
add
scas
add
pop
inc
add
mov
sbb
add
or
inc
sub
push
sub
js
jno
add
rcl
cli
adc
shlb
mov
adc
and
hlt
adc
add
and
loopne
nop
cmpl
push
jle
xchg
not
test
sbb
xor
ficoms
das
or
or
adc
xlat
lods
incl
mov
inc
outsl
dec
mov
outsl
jg
sub
ret
mov
fcomip
sar
test
cmpb
jbe
push
sbb
xor
cltd
sbb
inc
adc
repnz
dec
out
sbb
cmp
inc
shll
add
push
add
addr16
and
mov
aaa
cld
dec
cwtl
dec
cmp
je
add
push
push
xor
mov
xchg
xor
and
repnz
sub
pop
outsb
pop
push
push
test
inc
sub
flds
pushl
cwtl
push
mov
add
mov
push
repnz
mov
push
addr16
into
dec
adc
push
push
add
mov
aaa
cld
pushl
scas
add
fsubrs
pop
inc
add
push
fistl
or
push
neg
add
adc
pop
sbb
inc
add
xchg
jge
mov
ficoms
push
sub
push
pushl
sbb
adcl
xor
repnz
adc
ret
inc
dec
jmp
pop
call
mov
add
addl
cld
call
push
movsl
and
stc
add
pop
sub
add
sarl
aam
push
cmp
sti
push
sub
dec
sbb
or
mov
push
inc
arpl
push
test
pop
pusha
sarb
cmp
jmp
pushf
jns
cmpsl
or
xor
jo
ret
test
test
or
push
pause
xor
or
subl
imul
in
pop
push
out
push
and
enter
clc
fcoml
arpl
adc
adc
ljmp
jg
and
adc
in
add
push
js
jne
inc
insl
and
movsl
sub
rep
movl
and
mov
mov
es
sahf
subb
mov
xchg
sbb
inc
inc
mov
sbb
lock
add
adc
cli
mov
movsb
call
insb
inc
or
add
jo
xor
push
add
call
or
sbb
fs
inc
dec
not
inc
sub
inc
sldt
ss
das
in
cmpsl
add
sbb
insl
rolb
movsl
and
mov
dec
insl
add
fcomip
xor
and
rcrb
lock
loope
icebp
sbbl
sub
and
adc
pop
test
adc
out
dec
dec
outsb
sbb
and
int
mov
push
std
or
dec
xchg
in
push
pop
loopne
push
xchg
neg
add
nop
dec
fmuls
inc
inc
repz
jne
fistl
push
jbe
xor
add
scas
cltd
dec
add
adc
dec
fdivr
add
dec
pushf
sub
push
enter
in
mov
lea
jns
mov
roll
mov
into
pop
ljmp
clc
xor
cmpl
loopne
outsl
rolb
rclb
push
inc
mov
pushf
or
sub
inc
ds
xchg
iret
dec
lock
push
mov
lcall
push
push
sub
mov
sbb
adc
lock
or
dec
mov
adc
not
adc
add
pop
arpl
push
inc
sbb
fiadds
dec
sbb
or
jne
add
pop
pop
incl
sbb
test
nop
push
push
dec
xor
dec
lods
mov
pop
addl
lds
push
inc
subl
mov
xlat
mov
push
arpl
adc
ffreep
and
scas
or
inc
outsb
push
dec
sarl
and
ss
sbb
mov
test
fcompl
in
shll
cmpsl
test
icebp
adc
push
push
stos
push
adc
fadds
aam
inc
jecxz
and
repz
add
push
inc
cli
shlb
push
and
sub
inc
xchg
inc
outsl
jle
adc
add
jb
xor
jge
in
fsubl
out
iret
mov
subl
inc
scas
hlt
and
js
add
lock
rolb
inc
dec
cmp
ss
push
inc
and
shll
int3
ja
das
pop
mov
clc
out
clc
or
mov
mov
lock
pop
mov
inc
call
adc
ds
and
pushf
stc
mov
addr16
lods
test
ret
and
push
mov
add
neg
pop
xchg
loopne
push
push
adc
sbb
or
movsb
int
js
add
mov
imul
pushf
cmp
movsl
and
aaa
pop
or
sbbb
inc
das
movsb
jae
cmpsb
mov
sbb
bound
nop
lds
cmp
mov
loopne
xchg
inc
clc
push
jo
pmaxub
push
add
lods
inc
xchg
lods
push
push
cmp
sub
pop
das
clc
daa
lahf
or
push
popa
jns
add
jo
adcb
fs
loopne
mov
dec
inc
dec
int3
insb
dec
xor
pop
adc
sbbl
in
push
or
cld
jae
sbb
stc
test
jp
push
nop
push
cltd
lahf
jmp
ret
leave
ret
dec
popf
andl
loop
imul
pop
add
decb
inc
jns
push
push
fdivs
enter
stc
dec
clc
pop
out
fstps
sub
rorb
inc
sbb
sub
add
jno
push
xor
shlb
add
xchg
nop
push
ja
push
loopne
movsl
inc
sub
inc
inc
hlt
inc
dec
pop
push
add
dec
pop
in
ja
push
lock
ds
nop
adc
cmp
cmp
and
xchg
subl
jne
adc
jl
inc
cmp
and
dec
mov
push
push
aaa
push
push
jl
push
or
loop
testl
or
jo
decb
sti
not
add
sbb
sub
and
movl
popf
and
dec
sbb
inc
pushl
not
cld
jae
fildll
sbb
mov
shl
pop
clc
push
lock
ret
push
adc
dec
popl
adc
adc
xor
inc
pushf
adc
add
and
dec
mov
push
lock
add
inc
xor
push
or
pushf
sbb
stos
inc
push
or
sub
insl
xor
xor
fs
inc
call
push
aas
clc
mov
mov
push
les
add
test
mov
adc
scas
lret
push
xor
insl
sti
xor
in
push
ljmp
imul
gs
das
mov
outsb
dec
push
rorl
cmp
stc
dec
imul
mov
push
or
xor
testl
push
dec
cmp
aaa
xor
inc
and
repnz
pusha
mov
or
sbb
pop
inc
push
data16
pop
push
push
fmuls
cmp
mov
int3
sub
mov
es
nop
adcb
mov
clc
push
in
and
inc
dec
or
mov
xorl
bound
std
xchg
cli
dec
jbe
inc
push
xor
jne
inc
or
in
das
inc
inc
push
hlt
test
cld
jo
mov
dec
insb
push
jo
or
das
cld
jge
jecxz
scas
rorb
fimuls
je
inc
aas
jl
mov
adc
push
cmp
or
inc
push
inc
shll
jne
inc
mov
stc
add
std
call
pop
movsl
add
lods
mov
shl
and
inc
push
xlat
not
test
dec
pop
and
in
add
mov
mov
dec
mov
mov
add
popf
adc
aas
sbb
cs
push
int3
add
mov
inc
adcl
icebp
inc
pop
icebp
xorl
sub
cmp
mov
dec
add
sbb
adc
sbb
dec
mov
inc
add
sub
add
mull
in
fldcw
notl
lock
inc
dec
neg
dec
es
sbb
inc
pop
lea
repz
inc
aaa
pop
pusha
data16
in
adc
inc
jecxz
shl
sub
dec
pop
push
dec
push
dec
mov
dec
xor
bnd
pop
xor
push
lahf
fbstp
jg
pop
call
xor
call
inc
dec
jo
loope
sbbb
pop
lods
stos
inc
jo
jge
dec
gs
dec
lods
push
or
pop
inc
inc
test
inc
lcall
add
sarb
push
xor
test
and
sbb
add
push
push
adc
xchg
test
pushf
inc
adcb
movsb
in
test
fiadds
andl
sbb
aam
jne
push
add
cmp
std
out
adc
imul
ljmp
imul
jae
xor
addl
arpl
nop
pop
push
push
cmp
push
and
scas
add
mov
neg
xor
add
movb
and
inc
je
popa
xor
jne
arpl
cwtl
or
xchg
cli
add
fistpl
sub
push
push
inc
stos
test
rclb
inc
ds
lahf
stos
dec
scas
in
flds
push
loop
test
sub
push
add
xorb
dec
aad
stos
xchg
adc
outsl
clc
loopne
or
sub
sbb
and
add
cmp
in
or
pop
jg
fcomip
sub
inc
jl
sub
decl
push
aas
dec
add
add
cwtl
mov
sar
maskmovq
dec
adc
inc
add
jmp
xchg
decl
nop
pop
push
fidivrs
lock
arpl
xor
outsb
je
push
sbb
sub
xor
push
add
sub
ror
fsts
subl
mov
aam
into
inc
cmpl
bound
add
and
inc
jbe
push
cmp
repnz
add
mov
fadds
ret
cmp
pop
inc
aad
dec
inc
sub
add
ljmp
pushl
pop
call
pop
std
sbb
push
xor
neg
mov
pop
inc
imul
pop
fadds
dec
push
aas
sub
or
and
xor
fdivl
nop
jle
dec
gs
mov
push
mov
dec
mov
test
fs
cmp
test
push
pop
sub
dec
cwtl
dec
test
dec
jg
ds
inc
das
add
test
lret
pop
or
push
lock
pop
adc
outsl
and
repz
repz
in
sahf
shrb
addr16
clc
iret
adc
pop
rolb
inc
xor
xchg
xchg
or
int3
ret
or
aam
mov
or
int
push
add
popf
mov
inc
data16
aam
adcb
lods
imul
add
sbb
loopew
imul
jecxz
push
jo
dec
stos
popf
mov
sbb
adc
dec
push
sbb
xchg
fistpll
dec
in
inc
mov
inc
movb
cmp
inc
or
into
dec
inc
add
aam
and
sbb
in
pop
dec
adc
or
imul
mov
subb
and
pop
add
aaa
or
xorl
mov
dec
push
mov
movsb
inc
decb
add
xor
int3
stos
pop
jnp
sbb
jne
in
imul
xor
push
xor
lcall
enter
xchg
into
adc
mov
jns
add
pusha
cmovg
and
repz
sbb
fiaddl
dec
movsl
or
adc
push
je
cmpl
dec
mov
decb
enter
push
or
xor
lret
clc
aad
mov
idiv
push
add
mov
add
sbb
pop
mov
orb
mov
or
shlb
out
ja
add
inc
clc
jmp
lock
in
inc
inc
xor
test
sbb
notl
js
add
bound
cmp
adc
push
pop
dec
add
adc
dec
addb
in
dec
inc
push
dec
push
pop
adc
pushl
inc
sub
adc
ret
sub
inc
das
sub
sub
mov
add
sbb
loop
imul
xchg
lock
lahf
iret
push
pop
std
loopne
rcrl
fisubrs
in
arpl
adc
mov
cmpsb
popa
gs
subl
or
xor
inc
add
mov
add
rclb
and
and
scas
lret
shl
push
push
ds
pop
inc
lea
fadds
sarb
push
and
inc
jae
jbe
push
dec
mov
cmp
fisubl
outsl
outsl
sahf
push
loop
pop
loopne
xchg
popa
xor
js
add
movsb
cs
incb
rclb
push
rorl
sub
or
in
add
sub
inc
ja
xor
inc
inc
popa
ja
adc
test
test
subb
int3
repz
push
add
stc
rclb
outsb
sub
push
fs
push
cmpl
pop
gs
jae
jne
dec
xor
ja
xor
jo
das
nop
sarl
pop
aas
ret
xor
dec
in
add
mov
push
dec
nop
pushf
mov
xor
cmp
sub
out
push
mov
ret
pop
cmp
cmpsb
cltd
fisttpl
mov
pop
jl
mov
fdivs
inc
aaa
xor
arpl
dec
cmp
and
mov
js
cmp
add
inc
and
subl
mov
inc
push
popf
cmp
adc
add
fisubrl
dec
out
inc
sub
dec
cld
andl
rcrb
hlt
or
add
pushf
dec
int3
int
and
jns
arpl
dec
sub
xchg
inc
dec
rclb
loopne
dec
mov
jb
sbb
xlat
dec
pop
lods
orl
in
shlb
mull
nop
out
pop
mov
mov
rolb
ja
inc
add
nop
pop
push
inc
insl
inc
subl
push
dec
push
sub
add
inc
popa
add
insb
add
and
incl
and
xchg
fs
js
popa
popa
incl
cld
imul
push
dec
inc
push
push
inc
dec
dec
dec
pop
push
push
push
push
inc
push
push
inc
push
push
dec
push
dec
inc
inc
jmp
fs
cmp
cmp
js
jae
jno
jno
js
je
js
sti
jg
xor
xor
xor
add
bound
mov
pop
inc
inc
sbb
xor
xor
xor
adc
jmp
addr16
popa
jo
outsl
outsl
jo
push
jnp
jno
je
pop
popa
bound
xor
popa
inc
je
dec
insl
js
fldl
add
pop
pop
inc
lods
push
inc
inc
jno
dec
add
add
sub
inc
push
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
mov
mov
mov
jmp
movsb
mov
pop
shl
outsl
mov
lcall
cmp
push
mov
mov
cmp
mov
or
mov
std
mov
dec
test
cltd
and
dec
and
scas
mov
or
fistpll
mov
sbb
pop
addl
pop
stos
dec
pushf
out
in
out
mov
jmp
subb
decl
inc
jo
divl
outsl
nop
in
mov
test
mov
sbb
mov
cmp
das
and
mov
adc
fbstp
dec
mov
mov
mov
or
pop
mov
push
in
add
call
cmpl
nop
cmp
pop
notl
sbb
mov
xor
pop
addl
push
les
add
ror
xor
aam
pop
jl
pop
data16
push
mov
iret
lea
negl
push
adc
cmc
or
push
test
pop
repnz
in
mov
mov
xor
scas
daa
xlat
add
xchg
mov
or
testb
or
or
movsl
dec
inc
jle
add
aad
xchg
cld
rolb
mov
gs
aaa
insb
jg
pusha
ret
notl
xchg
insb
mov
mov
and
stc
and
movsb
test
fmull
adc
push
mov
inc
mov
repz
inc
mov
lret
mov
inc
mov
nopl
mov
andb
jns
mov
scas
movsl
jle
idivl
cmp
mov
pop
pop
mov
out
out
loopne
pop
test
test
dec
andb
mov
mov
imul
loop
nop
rclb
xor
push
in
jle
push
add
mov
mov
sbb
mov
push
or
push
jne
movsb
scas
in
mov
pandn
mov
push
push
add
xchg
daa
fnsave
adc
call
mov
sti
jns
or
push
sahf
xchg
int3
or
jae
xlat
cld
lcall
cmp
popa
adc
addr16
xorb
or
addr16
ja
andb
mov
mov
cmp
pop
cmp
cli
data16
addb
sbbl
or
cmp
mov
inc
or
and
loopne
clc
adc
push
arpl
pushf
dec
jl
mov
loop
lock
cmpsb
cwtl
mov
fdivrl
mov
push
mov
int
sub
mulb
in
pop
enter
xchg
ret
aas
sub
inc
push
xchg
sub
mov
push
mov
sub
cli
xchg
add
mov
cmp
jb
xchg
fmull
jo
adc
loopne
nop
inc
pop
fcmove
aam
xchg
mov
ret
bound
loopne
xchg
shlb
jl
scas
pusha
ffreep
push
mov
std
push
insl
cmp
inc
mov
pop
movsb
jmp
loope
xchg
in
inc
mov
rcll
dec
hlt
int
xor
jo
xor
add
fistpll
or
sbb
iret
mov
sub
push
or
xor
fildll
add
and
shll
adc
mov
cltd
mov
ret
dec
rorl
faddp
sti
cld
sub
mov
jb
add
lods
daa
xchg
cmp
pushl
fstl
mov
xchg
loopne
push
ret
jb
xchg
mov
decb
insl
enter
sub
mov
sub
loopne
neg
fs
jno
inc
add
fsubr
mov
pusha
or
lock
rorl
popf
jno
mov
inc
cmpl
dec
sbb
ficoms
add
fyl2x
sbb
mov
or
enter
mov
cmp
lock
out
lret
sub
mov
cwtl
enter
cld
in
xchg
cltd
inc
xor
fisubl
fisubl
pop
or
sbb
cmp
cmpsb
mov
mov
inc
repnz
xor
cmp
mov
inc
mov
add
xchg
dec
out
imul
mov
add
lsl
pop
xchg
xor
adc
dec
int3
popf
sbb
roll
jnp
jl
cs
add
push
fs
jnp
ljmp
sbb
push
mov
loope
mov
icebp
mov
push
jns
mov
ljmp
loop
inc
fs
mov
lods
popf
xchg
mov
stos
inc
sbb
loopne
loope
mov
jo
push
mov
outsl
xor
aaa
adc
hlt
pop
aad
jmp
add
scas
adc
sub
mov
add
push
inc
orl
loopne
mov
mov
pop
cmp
dec
cmc
leave
js
pusha
sbb
in
cs
mov
test
or
add
pop
mov
inc
jle
jne
xchg
cli
add
or
mov
mov
push
mov
loope
pushf
lret
add
dec
cmp
add
rclb
stos
jle
sbb
cmp
jecxz
inc
xchg
in
in
sub
loopne
mov
add
fistpl
adc
dec
cltd
sbb
int
pusha
cld
sbb
push
ror
jne
or
mov
xchg
out
scas
repz
rcrb
dec
imul
pop
fcompl
add
lock
fs
popl
pushf
ljmp
popa
hlt
dec
mov
mov
pop
pop
and
xchg
hlt
add
testb
mov
xchg
ljmp
push
out
outsb
mov
test
xchg
lds
push
mov
adc
xor
add
or
outsb
stos
adc
popf
cmp
mov
imul
push
inc
sub
in
loopne
xchg
sbb
xor
cmpsl
and
das
sbb
inc
out
fwait
mov
aad
sub
push
inc
in
ret
cmp
push
fs
add
sub
loop
mov
js
xlat
inc
leave
xor
outsb
das
lock
xchg
mov
jns
test
cmp
cmp
sbbb
or
adc
int3
or
test
jl
test
in
movsb
fs
jo
pop
rcll
lcall
sbb
stos
xchg
mov
inc
inc
sbb
das
inc
out
daa
mov
mov
je
test
xchg
xlat
loopne
sbb
pop
cmp
mov
pop
mov
pop
pop
xchg
call
add
jb
push
xchg
lds
mov
fs
inc
ss
sarb
or
ss
div
cli
sub
push
inc
sbb
push
add
notl
bound
sbb
jmp
test
dec
cmp
insl
push
push
cs
fimull
mov
ss
xchg
jmp
ss
loop
xchg
and
mov
jo
jl
mov
movsl
test
mov
addr16
mov
nop
je
psllw
push
ficompl
inc
adc
je
or
and
mov
outsb
addl
cmp
roll
jmp
pop
decb
mov
arpl
push
shr
mov
hlt
jne
stc
inc
rcll
mov
mov
mov
sti
cmp
push
xor
or
jl
jle
mov
nop
loop
imul
test
in
xchg
data16
fyl2x
or
ret
xchg
stos
sub
test
call
dec
or
mov
push
cld
cmpb
sarb
stc
inc
arpl
call
out
aad
cmp
ja
inc
mov
outsl
scas
imul
arpl
pop
loopne
lahf
aaa
loopne
aam
cmp
adc
sub
inc
fildl
insb
arpl
push
repz
or
dec
add
and
add
sub
cmp
xchg
pushf
jno
adc
fidivrs
jp
push
fs
cmp
stos
int
and
sub
ds
adc
scas
cwtl
pop
jmp
dec
jno
lcall
fsubrs
lahf
sbb
sbb
in
push
jecxz
inc
shrl
and
or
or
arpl
inc
fnstcw
pop
fxsave
pusha
xor
mov
pop
incl
and
leave
dec
xor
mov
mov
or
or
dec
jp
xor
data16
jb
xor
orb
out
cwtl
xchg
loope
pop
add
movsl
push
loop
pop
lds
insb
inc
add
jae
loope
pop
fs
test
jne
pop
xor
jo
sbb
mov
lds
nop
dec
fcmove
mov
and
lds
les
mov
sahf
mov
rol
imul
data16
adc
in
leave
or
jg
imul
mov
pop
call
addb
fisubrl
jl
int3
ja
cli
push
test
adc
stos
mov
inc
dec
scas
adc
lock
and
xor
out
and
jge
lock
sub
mov
and
das
pop
jbe
push
push
or
in
mov
jo
or
mov
movsb
jecxz
sub
mov
fcmovnb
movsb
push
and
movsl
nop
xor
fcoml
mov
push
in
mov
jle
push
push
xor
sbbl
test
ss
add
jmp
or
xchg
mov
mov
fwait
int3
mov
dec
fsubrs
jp
add
pop
or
ss
xchg
aad
fiadds
inc
jns
and
ss
mov
xor
fistps
dec
mov
ret
inc
pop
rclb
and
mov
mov
jmp
mov
inc
xor
jmp
je
rol
inc
sub
inc
movsb
mov
mov
or
adc
aaa
lods
xor
aad
push
loop
mov
incb
inc
fsubl
mov
outsb
sti
movsl
jl
dec
popf
out
push
dec
repz
out
jo
and
sbb
xchg
mov
stos
stos
fisubrl
ret
push
aad
repz
xor
andb
movsb
cmp
cld
push
push
orl
std
stc
sbb
jno
rcrb
js
into
mov
inc
rcrb
mov
les
in
insl
hlt
jmp
sub
lcall
pusha
ljmp
lret
xchg
inc
scas
cmp
mov
mov
repz
sbb
add
pop
test
push
xchg
in
inc
jo
mov
push
rcr
xorb
jnp
loopne
repz
repz
and
gs
pop
and
loop
xor
and
dec
adc
mov
loop
popf
mov
mov
mov
xchg
movsl
lcall
dec
adc
or
mov
shrb
rolb
xor
or
add
adc
dec
int3
popf
push
lods
sbb
loop
lret
mov
icebp
mov
jbe
das
inc
push
adc
xor
aad
movsl
shll
bound
rcrb
sbb
imul
loope
mov
mov
jbe
sbb
push
jmp
sbbl
push
mov
dec
jecxz
fsubp
mov
pop
add
ja
pop
adcl
mov
or
jne
hlt
mov
cmp
fnstenv
xlat
orl
fadd
adc
jecxz
in
jp
fisubrs
pop
xor
imul
lods
ficompl
xchg
push
xor
push
push
pushf
or
sub
pop
push
in
clc
shrb
rorl
fsub
cmp
inc
or
repz
popa
sti
mov
mov
cltd
mov
cmp
pushf
add
icebp
xchg
daa
cmp
imul
test
repz
lods
add
fdivrp
lret
mov
lahf
mov
add
pop
inc
mov
rclb
xchg
fbld
lahf
std
push
push
adc
mov
out
aam
jl
aas
inc
sbb
adc
mov
clc
pop
pcmpeqb
in
bound
aaa
adc
push
enter
add
jg
adc
faddl
adc
sub
lea
ud1
int
test
jne
out
loop
leave
dec
xchg
cmpsb
rolb
sub
push
insl
push
andb
mov
addr16
adc
xor
sbb
jno
imul
pushfw
sbb
jmp
xor
pop
and
sbb
loop
sub
pop
and
mov
fdivr
in
add
pop
into
roll
xchg
add
xchg
js
jno
mov
mov
xchg
aad
pop
sub
mov
aam
inc
lock
mov
lds
jmp
pop
mov
push
xchg
insb
fnstcw
xorl
aas
push
or
mov
adc
movsb
jae
es
mov
ljmp
cltd
fsubrp
or
clc
pop
xchg
shll
nop
sti
fnstcw
mov
inc
pop
mov
loope
adc
and
xor
jbe
mov
jp
add
add
sarb
les
aad
add
sahf
sub
mov
xor
mov
dec
mov
call
js
jle
ret
andb
sbb
pop
push
jne
pop
pop
xor
push
popf
cwtl
mov
callw
mov
xor
aas
imul
shrl
pusha
adc
pop
mov
out
xchg
or
int3
inc
sub
scas
xchg
lds
cli
push
xlat
xchg
mov
fs
adc
roll
lret
andl
arpl
xchg
jmp
xchg
out
stc
push
rsqrtps
aas
or
xor
jmp
mov
arpl
xchg
xchg
lahf
je
xor
out
jecxz
and
in
enter
ljmp
cli
adc
pushf
lcall
and
cmp
les
int
fs
jo
mov
pop
or
inc
jne
and
stos
mov
mov
gs
std
sti
xchg
sub
mov
mov
rcrl
xchg
push
aaa
pop
popa
and
and
stos
or
addb
or
sub
mov
pop
mov
cmp
push
jo
in
jmp
mov
or
call
les
xorb
jae
leave
fs
lock
adc
rolb
pop
imul
ljmp
aas
sbb
push
lcall
or
roll
adcb
ret
xchg
push
xor
fstpl
ja
je
pop
rcl
test
pop
mov
or
sbb
adc
xchg
fwait
xchg
pop
cmp
les
insl
push
js
inc
out
cmc
int3
mov
stc
jb
xor
sbb
mov
les
mov
call
int
cmpsl
dec
test
jg
sub
gs
mov
xor
sub
push
jp
push
or
mov
jo
mov
mov
in
add
mov
rolb
cmp
adc
incl
sbb
ja
cld
in
shll
mov
lods
adc
sbb
cmc
outsl
stc
or
out
pop
pop
insb
icebp
xchg
mov
icebp
js
js
nop
jecxz
imul
sbb
sub
ss
js
pop
test
sti
cmp
es
and
jge
aas
shrb
lcall
cmp
mov
ljmp
xor
out
jle
jmp
xchg
test
or
dec
clc
mov
push
loope
call
pushl
add
jne
jne
sbb
adc
xorl
cmp
addr16
popf
mov
aaa
loopne
mov
mov
test
dec
mov
cld
adcb
int
cmp
aam
dec
cmpsl
mov
insb
mov
jb
insb
lods
cmp
pusha
fidivs
mov
insb
mov
and
sbb
and
jle
lock
loope
add
cmpsl
pop
or
and
mov
or
fsubl
push
ret
xchg
xor
leave
lock
incl
enter
mov
pop
dec
jg
mov
imulb
push
mov
clc
sub
data16
jl
xchg
test
add
jg
xor
loopne
adcb
ds
pop
clc
es
cmc
mov
mov
pop
rcll
jle
test
hlt
pop
mov
scas
jp
and
stos
jmp
xor
or
fnstsw
mov
test
cmp
jecxz
jmp
xlat
pop
xor
jbe
enter
or
or
cwtl
out
mov
inc
fld
orb
mov
ljmp
xchg
mov
loope
jno
jp
adc
sub
das
cli
clc
cmc
insb
mov
xor
cmp
stos
or
andb
jno
and
push
loop
aad
icebp
mov
or
mov
aam
add
sbb
mov
fcmovu
lcall
add
outsb
mov
or
lds
jbe
pusha
xchg
or
sbb
jb
jecxz
inc
scas
push
lahf
sub
stos
mov
mov
lret
push
fistps
jg
mov
xchg
xchg
lret
push
js
stos
adc
pop
dec
cmp
enter
or
mov
dec
dec
or
lock
sbb
dec
add
loopne
and
pop
test
dec
jle
sbb
test
dec
je
push
scas
icebp
in
sarb
call
inc
aas
cli
out
mov
pop
fadd
scas
pop
repnz
inc
jl
fxch
inc
mov
ljmp
jnp
scas
aam
and
and
pushf
and
add
sub
mov
inc
insb
push
in
lods
pop
jp
icebp
in
push
andb
pop
js
pusha
pop
cmc
or
push
movsl
cmp
xchg
hlt
jmp
loop
pop
lcall
loopne
mov
pushf
pop
ds
sti
xchg
pop
mov
test
xchg
rorb
inc
mov
popa
mov
test
sub
mov
jge
mov
fists
jp
adc
dec
ljmp
mov
sub
pop
or
test
je
xor
push
adc
add
fisubrs
ss
mov
pop
jg
add
adc
push
adc
cmp
jecxz
adcl
sbb
mov
fisttpl
add
xor
pop
push
cwtl
sarl
mov
sub
dec
push
popa
and
pop
pcmpeqd
mov
and
mov
fadds
fwait
cmp
mov
out
repnz
add
jg
push
dec
dec
cmp
in
std
adc
mov
pop
mov
mov
mov
adcl
adc
loopne
mov
jmp
xchg
lds
lar
cmp
fistpl
fnstenv
je
adc
testb
pop
pop
aaa
jnp
mov
adc
mov
lock
ljmp
in
cli
dec
movl
pop
scas
bound
je
xor
jle
xor
mov
lock
pop
mov
add
fs
adc
pushf
push
mov
pshufw
and
aam
and
xchg
pop
test
mull
dec
cmp
test
rcrb
call
sub
sbb
adc
push
dec
pop
pop
jp
push
xchg
out
adc
xchg
enter
add
les
xchg
pusha
lcall
rol
mov
mov
pop
loopne
mov
sbb
jmp
hlt
sbb
mov
mov
inc
or
mov
hlt
pop
sbb
mov
lock
jge
add
subps
xor
cmp
push
stos
pop
sbb
test
mov
pop
loopne
adc
mov
jbe
push
jg
dec
mov
xor
ss
sub
cmpsb
loopne
mov
mov
sbb
or
push
push
out
call
aad
rcrb
cmpsb
pop
lods
mov
outsl
xor
inc
cmpsl
fwait
mov
push
inc
adcb
mov
push
dec
mov
fisubl
adc
cltd
sub
js
mov
rcrl
jg
add
push
into
loop
and
das
gs
fmul
enter
xlat
bound
xchg
movsl
fisubrs
shl
std
push
shlb
lcall
popa
pop
cmp
lods
pop
sbb
mov
sbb
pop
decl
or
cli
adc
add
cld
inc
cmp
add
es
mov
ret
negb
lock
cmp
outsb
add
rorb
cmpb
insb
aaa
xor
push
dec
or
fldt
mul
push
xchg
sbb
adc
and
sub
dec
or
mov
clc
mov
imul
and
add
mov
sar
sti
xor
adc
mov
adc
cmc
jge
pop
adc
mov
adc
xchg
loop
pop
sub
mov
pop
popa
lods
pop
mov
lock
out
add
push
xchg
cmc
jno
pop
mov
push
cld
scas
mov
dec
or
pushf
cmp
aas
pop
out
inc
rolb
sub
inc
sbb
inc
and
lea
mov
mov
mov
and
mov
cmp
inc
xlat
mov
adcb
dec
dec
sub
ljmp
daa
or
inc
cld
cli
adc
or
ljmp
je
rorl
push
mov
imul
cmp
in
mov
ss
xor
mov
loope
jecxz
cld
mov
fs
inc
lock
add
pop
into
xor
rclb
insb
clc
mov
push
lock
call
js
out
mov
popa
pusha
mov
mov
dec
add
lahf
fs
mov
aam
push
sub
out
js
ljmp
gs
movsl
jl
push
ds
jne
adc
data16
stos
loope
add
stos
mov
ret
ljmp
in
repnz
lds
cmpsb
je
mov
sbb
movsb
and
mov
mov
dec
inc
adc
push
pop
pushf
inc
adc
cmp
xor
rcrb
or
stos
sbb
pop
add
outsb
inc
pop
cmp
ss
clc
mov
inc
inc
aad
sbb
data16
push
rolb
mov
mov
sub
pop
sub
lcall
ficompl
push
int3
and
stos
and
in
cmp
ja
add
cld
inc
dec
inc
or
cltd
or
dec
mov
orb
iret
adc
mov
dec
or
add
or
aas
mov
pop
ret
lahf
adc
repz
mov
push
incb
and
inc
insb
or
xchg
bound
lock
mov
mov
ret
inc
inc
add
inc
add
loopne
popa
pop
push
push
and
add
sbb
cmp
or
mov
outsl
adcl
cmp
out
mov
push
lds
stc
jge
sbb
add
sbb
test
jns
xchg
fadds
mov
sbbb
jg
jb
and
pop
inc
outsb
mov
xor
out
outsl
inc
leave
pop
inc
jp
mov
into
inc
sbb
int3
cmp
cmp
mov
cpuid
loop
jne
push
mov
fldenv
lea
dec
add
push
push
lret
ds
adc
test
mov
aaa
adc
mov
xlat
sub
xor
jmp
xchg
mov
jg
sahf
mov
pop
adc
mov
iret
pop
mov
mov
sbb
mov
dec
push
jnp
pop
mov
test
in
cwtl
or
outsl
sub
push
jns
pop
test
mov
clc
mov
jno
cmp
push
lret
adc
je
jmp
mov
pop
sub
push
scas
pop
les
aas
shrl
loope
dec
add
mov
inc
scas
rorl
clc
fidivrl
inc
lcall
sbb
push
ret
pop
sub
into
add
aam
pop
aam
xor
pushf
aad
mov
add
movsb
lock
fcompl
mov
mov
andb
jle
scas
test
mov
stc
pusha
test
cld
cld
lea
mov
push
mov
test
and
adc
jecxz
dec
jb
add
or
loopne
lcall
ljmp
sub
adc
mov
fwait
mov
jo
int3
js
mov
mov
popa
push
inc
shlb
imul
cmp
fwait
orl
jno
mov
mov
mov
movsl
aad
fadds
push
or
psrlw
xor
xorb
jmp
mov
and
call
jae
in
cs
cmpsb
aas
push
dec
xchg
inc
lcall
add
jecxz
inc
push
sar
movsl
add
push
push
push
mov
xchg
cs
xor
lret
add
out
dec
int
shll
cwtl
xchg
and
mov
adc
jp
sbb
sbb
sbb
lds
ds
add
mov
jne
cwtl
cli
icebp
loop
jg
or
pop
add
inc
dec
cld
xchg
into
and
mov
jmp
jge
add
adc
mov
jmp
popa
test
xchg
pop
divl
xor
dec
rorb
cmp
adcb
mov
add
jb
pop
mov
enter
clc
and
rcrl
lods
adc
push
jne
jecxz
aas
jbe
sbb
sub
sar
dec
fisttps
aaa
push
outsl
jecxz
cmp
mov
cmp
sbb
xchg
jnp
pop
mov
jne
dec
les
je
sbb
outsb
fs
and
mov
cmp
std
lds
cmp
outsb
divb
out
xchg
in
jl
lods
ds
xor
jo
jge
enter
jp
inc
scas
sub
dec
rol
aaa
enter
pop
in
fadd
xchg
fcomps
xor
mov
push
je
lods
xchg
aam
jb
sbb
or
jb
lock
dec
rcr
push
dec
leave
sub
cmp
pop
dec
iret
add
jno
push
test
stos
mov
sub
mov
inc
repz
jnp
cmc
in
pop
cmp
cmp
ret
ret
mov
shll
testb
addl
imul
fcomps
leave
mov
bound
sahf
insb
cmp
and
mov
pusha
dec
cld
inc
test
mov
mov
sub
xchg
mov
pushf
adc
and
inc
cmp
out
popa
xchg
clc
xor
add
adc
push
xchg
inc
stos
pop
pop
ljmp
and
push
mov
adc
mov
push
sbb
cvtpi2ps
ss
push
xchg
aas
jg
mov
shlb
adc
pop
xor
jns
jecxz
ror
pop
icebp
push
lahf
and
push
dec
push
lods
lds
mov
xchg
shr
insl
call
mov
or
fsubs
push
xchg
xchg
test
aad
gs
or
mov
xchg
jecxz
mov
scas
or
subb
movl
cmc
roll
mov
xchg
xchg
cltd
movsl
push
mov
lcall
jp
mov
inc
or
add
add
lret
sub
xor
and
jmp
loopne
andb
xchg
xchg
lea
popl
push
jmp
loope
push
jbe
ret
adc
repnz
add
inc
push
add
fisttpl
loop
pop
jg
mov
in
jg
jmp
rcll
mov
push
pop
push
rcrb
lods
push
loop
jbe
or
push
adc
mov
add
inc
fsubr
xor
leave
inc
call
mov
xchg
adc
sbb
outsb
addr16
roll
jno
mov
in
cmp
sbb
and
xor
jecxz
pop
add
sub
icebp
mov
inc
data16
mov
or
push
add
idiv
sbb
sbb
push
push
cmp
mov
mov
adc
add
mov
icebp
arpl
data16
pop
pop
mov
mov
movsb
les
js
dec
rclb
pusha
mov
enter
icebp
rorl
in
and
adc
or
mov
repz
paddb
push
mov
add
mov
mov
push
call
dec
cmpsl
call
cli
fsts
jp
je
push
js
dec
clc
std
and
es
sbb
ret
sbb
shlb
cmp
fsubrl
jg
inc
and
inc
shlb
or
push
mov
dec
idivl
push
clc
dec
mov
pop
adc
jae
fadds
stos
int3
inc
xchg
mov
inc
cwtl
and
jnp
sbb
addb
les
outsb
icebp
aaa
outsl
clc
call
es
dec
sarb
fldenv
and
sub
mov
dec
pop
sub
xor
in
scas
cmc
cmpsl
cwtl
inc
or
push
xorl
inc
ret
aas
and
jg
xor
fbstp
jg
daa
mov
outsl
enter
mov
push
mov
lds
jg
jecxz
cmp
mov
pop
aas
out
fidivrs
xchg
mov
adc
pusha
push
mov
clc
adc
push
clc
sti
add
sahf
push
adc
testl
loopne
xor
push
xchg
and
clc
addr16
sti
sti
stc
lds
adc
adc
hlt
or
inc
lds
mov
movsb
or
cmp
dec
mov
dec
adc
jp
and
jnp
fmulp
and
ljmp
xchg
insl
cmp
jl
dec
jo
lds
lods
aam
testb
xchg
inc
push
sbb
scas
ljmp
ret
cs
add
adc
fldcw
jne
inc
mov
fildl
or
ret
mov
or
lds
cmp
push
jo
adc
pushf
mov
sbb
sub
je
dec
nop
stos
fidivl
in
iret
divb
xor
xor
es
shlb
fisttps
ds
xchg
in
imul
mov
sbb
adc
and
pop
incb
in
sub
push
fs
outsl
cmc
lock
adc
or
sbb
mov
and
jo
and
pop
mov
sbb
mov
fldcw
mov
cmp
divl
xchg
dec
fcmovnbe
out
pop
hlt
mov
inc
xor
xor
push
mov
mov
adc
push
out
pop
or
add
mov
jno
dec
inc
fidivrl
mov
mov
cmp
lock
out
jae
jg
lcall
clc
or
xor
ficompl
loopne
cmc
mov
cmpsl
xchg
jge
call
fsubrs
ljmp
repz
mov
sub
push
sbb
mov
and
mov
mov
pop
jl
xchg
sbbb
ret
push
push
test
dec
aad
xchg
sbb
pop
adc
mov
jle
mov
mov
xor
unpckhps
or
clc
test
lods
sahf
jp
inc
in
ljmp
and
push
sbb
mov
pop
sub
frstor
inc
andl
xchg
xlat
mov
sub
pop
mov
lock
ret
fdivr
ss
loope
pop
in
int
sbb
push
xorb
rcll
rolb
sub
testb
nop
pop
jmp
insl
sahf
ret
xor
push
mov
sahf
mov
test
sbb
roll
xchg
dec
fisttpll
jg
pop
mov
push
aam
test
cld
popl
xorb
xchg
cli
or
incl
daa
sbb
jmp
push
inc
fsubs
popf
dec
mov
push
xor
repz
add
insl
lods
cmp
movsl
xor
xchg
xor
push
push
or
mov
out
mov
shlb
call
test
lods
inc
lock
push
pop
cmp
pop
adc
mov
adc
sbb
rclb
xchg
ror
pop
sbb
mov
inc
dec
divb
push
loopne
jae
sub
inc
cs
aaa
jp
jbe,pn
adc
inc
mov
sub
mov
push
loop
jp
mov
cmp
sbb
ds
xor
push
cmp
add
aas
lods
in
js
pop
loopne
pop
fdiv
test
or
mov
loope
adc
scas
jno
jmp
loop
cmp
in
jmp
push
loopne
clc
rcrl
sub
ja
pop
mov
cmp
or
pop
pop
movsb
push
sahf
fs
fsub
cmp
hlt
inc
inc
xchg
loope
cli
xchg
loopne
mov
outsb
mov
rolb
test
jnp
sbb
cmp
inc
into
mov
les
in
loope
rol
je
test
insb
hlt
fwait
clc
lcall
cmp
add
int3
fidivs
sub
push
fwait
shlb
dec
push
loopne
push
cmp
lds
mov
js
sbb
ret
je
jo
mov
push
push
push
lods
inc
mov
jnp
sbb
dec
xchg
mov
mov
data16
rcrl
pop
out
andb
inc
fs
and
in
dec
shlb
ss
and
hlt
gs
jno
scas
and
cmp
movsb
fildll
pop
adc
popf
fs
jle
sub
aas
mov
mov
cmc
jg
outsl
and
adc
fidivl
or
push
mov
fcmovnbe
int3
js
stos
dec
pop
ret
mov
mov
sar
call
mov
cmp
shlb
lods
push
xor
sbb
imul
lods
xor
into
lods
aaa
mov
in
or
dec
jg
xchg
inc
es
mov
test
jp
pusha
jl
jge
repnz
sbb
sub
add
push
push
inc
ret
sbb
repz
inc
out
sub
mov
in
ret
test
es
pop
loope
push
imul
push
ss
popf
ds
std
jmp
int3
inc
lret
adc
ret
mov
fiaddl
push
or
out
cmpsl
push
enter
mov
cmp
dec
dec
fs
lret
sbb
or
bound
jns
pop
xchg
lods
pop
call
outsl
mov
ret
xor
into
std
cltd
cli
testb
idiv
jecxz
loop
xchg
aad
or
fiadds
jnp
push
add
movsb
dec
or
lods
xchg
jle
mov
adcl
xor
pop
orl
in
mov
push
jl
mov
cld
hlt
sbb
aad
idivb
push
cs
or
stc
ja
pusha
shrl
int3
cmp
mov
lds
push
mov
xlat
pop
inc
dec
inc
mov
shlb
aad
ret
cmpsb
and
pop
jo
test
lock
jecxz
jbe
arpl
or
mov
sbb
jne
cwtl
jno
rolb
data16
cli
cmp
fst
push
inc
jbe
lods
daa
lock
outsl
mov
in
inc
sub
lock
mov
jp
fs
imul
adc
dec
shlb
mov
push
gs
and
mov
jecxz
lret
mov
push
cld
pop
push
rcr
mov
pop
lock
mov
in
add
stos
or
insb
jno
pop
adc
xchg
mov
xchg
call
cmp
icebp
push
subb
in
sbb
push
mov
lds
imul
cmp
sbb
ror
outsb
cmp
add
rolb
xchg
xor
xor
mov
data16
cmpsb
and
decl
insb
cmp
ss
cmpsb
scas
sbb
mov
fmuls
insl
sbb
ja
mov
test
push
dec
int3
and
loop
roll
rcll
sti
fiaddl
mov
jne
ret
xor
clc
or
lea
in
cmpb
pop
nop
mov
push
mov
bound
testb
call
scas
jno
mov
jecxz
out
aaa
or
push
enter
stos
sbb
mov
inc
and
xchg
loope
xlat
push
inc
adc
cli
dec
fidivrs
popf
push
pop
xor
js
outsb
mov
cmp
inc
ja
lock
pop
divb
push
or
mov
push
lahf
dec
mov
adc
fcompl
shr
push
sbb
movsb
ud0
jo
je
cmp
jno
pop
inc
mov
add
jnp
into
mov
cli
cmp
cmpsb
mov
sti
shll
dec
popa
mov
ja
push
mov
lock
add
cli
and
jg
sbb
jmp
sbb
jb
or
cmp
xchg
xchg
movsl
xorb
push
in
dec
cmpsb
insb
out
ret
or
pop
xchg
arpl
push
pop
mov
xchg
cmpsl
outsb
outsb
mov
pop
jns
mov
dec
pop
lcall
pop
mov
std
mov
divl
sub
les
pop
jle
xlat
xor
insl
clc
sbb
ror
xor
inc
ljmp
ds
xor
orps
mov
cmc
incl
mov
cmc
push
mov
jecxz
mov
idivb
xchg
inc
out
push
jle
cli
call
push
sbb
mov
mov
movsb
inc
ds
xor
fdivr
add
stos
addl
jno
shlb
lock
lods
jp
movsb
cmpb
or
and
and
je
lods
adc
xlat
test
cmp
test
insb
mov
dec
xchg
mov
jecxz
pop
clc
sub
rclb
cmp
mov
xchg
pop
mov
inc
test
push
pop
fwait
inc
das
shrl
ljmp
xor
ja
jmp
or
lahf
xor
in
mov
fsubr
pop
mov
and
sar
mov
jno
lahf
pushf
clc
inc
sti
push
into
sti
dec
mov
decl
fs
loop
inc
xchg
jmp
hlt
cli
iret
aaa
mov
jo
cmp
adc
call
stos
scas
adc
push
mov
pop
cmp
or
mov
pop
mov
movsl
pop
and
insl
sub
jp
xor
dec
adc
lea
scas
call
outsl
mov
scas
mov
in
sbb
testl
add
mov
push
loop
int
in
clc
xchg
pop
out
and
jne
ret
pop
push
cmp
or
enter
mov
xchg
inc
or
popf
inc
sub
lods
ss
pop
sarb
loopne
cmp
cld
xchg
stc
lock
lods
jb
sti
stos
rorl
dec
xchg
mov
sbbl
test
jmp
lods
add
xchg
or
or
xor
lahf
sub
in
mov
xchg
add
add
xchg
loop
sub
xor
loope
pop
jmp
je
rorb
jb
xor
aad
fmull
push
adc
repnz
sbb
aam
cwtl
adc
shrl
cli
mov
testb
in
add
cmp
dec
pop
enter
jl
aaa
incb
jbe
cwtl
sbb
and
xchg
fs
mov
push
insb
push
xor
nop
pusha
out
jp
push
adc
lods
mov
mov
pop
testb
stos
push
arpl
test
fmull
scas
out
pop
pop
je
movsl
and
lods
out
inc
inc
shll
popl
lret
int3
jecxz
pop
icebp
sub
addr16
mov
daa
mov
push
pop
adc
xor
cmp
stos
push
jmp
xor
repnz
mov
cmpsl
mov
orb
mov
cld
in
ret
xchg
mov
push
loopne
fiadds
clc
mov
xchg
ret
pmaddwd
leave
flds
xor
pop
jp
pop
cs
into
add
dec
lds
loope
fdivrl
outsb
ja
ja
loope
mov
cmpsb
cmp
cmpsl
daa
pop
push
dec
pusha
es
mov
adc
inc
and
mov
sbb
lods
decb
hlt
lods
or
cld
and
or
movsl
adc
lods
cmp
das
jne
pushf
mov
call
bound
adc
push
mov
rclb
clc
add
mov
fs
mov
xor
aaa
or
sbb
sub
or
imul
xchg
cmp
pop
aam
shrb
in
mov
lds
movsl
push
xchg
enter
push
gs
rcl
xor
adc
adcl
or
and
sti
push
loopne
retw
cmp
es
pop
pop
jg
icebp
mov
or
and
mov
icebp
add
cmp
or
jmp
aas
loope
data16
and
fs
or
pop
les
sub
notl
cmpsb
and
sbb
andl
stc
ret
test
or
test
mov
sti
or
mov
loopne
add
xchg
pop
xchg
je
fcomps
sbb
jne
xor
movsb
cmp
dec
adc
dec
aas
test
cmpb
out
mov
movsb
jno
mov
and
push
push
orb
fiadds
popa
sbb
push
loop
out
dec
xor
push
adc
mov
pop
and
fs
mov
mov
mov
imull
and
hlt
in
std
stos
fisttps
and
add
mov
sbb
or
test
jne
es
cli
cltd
sti
inc
sbb
mov
mov
ror
add
dec
add
or
lea
inc
and
mov
js
pop
jmp
cwtl
inc
add
push
and
fadds
lret
es
lcall
xchg
imul
stc
jecxz
sub
je
sbb
mov
or
cmpl
xor
jne
sbb
hlt
dec
data16
movsl
pop
loope
lods
pop
subl
roll
mov
sbb
enter
test
int
mov
inc
inc
mov
in
movd
notl
xchg
es
dec
cli
add
mov
dec
inc
or
mov
adc
jb
loop
movl
cmp
test
or
adc
sbb
inc
cmc
inc
arpl
jmp
adc
mov
lods
stc
lcall
dec
jp
push
rcl
mov
popl
jb
data16
lcall
add
incb
aas
pop
nop
or
mov
mov
jno
imul
xchg
xchg
or
add
mov
mov
aam
adc
sbb
movsb
outsb
mov
and
rcl
clc
jge
push
mov
jo
pusha
mov
cmp
dec
jle
push
dec
rolb
dec
adc
sub
js
cmp
insb
xor
push
neg
hlt
icebp
hlt
mov
inc
loop
mov
mov
mov
test
and
lock
xchg
push
in
pop
inc
daa
aad
test
adc
jo,pn
dec
sub
dec
sbb
sub
add
cli
jp
dec
jmp
in
sub
stos
mov
movsl
pushf
in
std
push
and
fcomip
clc
fsub
push
outsb
pop
gs
aaa
mov
lds
cmpsb
shrb
dec
cmp
sbb
fdivrl
mull
jbe
insl
lock
iret
ret
inc
pop
mov
sub
ja
outsb
xchg
pop
jg
cmpb
cwtl
push
popa
movsl
adc
mov
adc
call
push
pop
sarl
adc
mov
repnz
shlb
push
fistpl
or
js
or
dec
or
jp
cmovp
and
and
ljmp
leave
sbb
lcall
jo
in
imul
mov
cmpsb
pop
pop
jbe
and
mov
mov
scas
aas
ret
test
sbb
orl
shlb
xchg
divl
inc
push
add
push
pop
pop
mov
cmp
adc
nop
dec
imull
inc
or
fistpll
pop
je
mov
mov
test
cli
sub
pop
or
in
pop
icebp
les
jmp
and
adc
in
mov
sarl
ficomps
mov
adc
sbb
insb
pop
cld
aam
sub
cmp
inc
outsb
mov
cwtl
sti
push
movsb
je
mov
popf
out
and
fildll
jg
scas
dec
mov
mov
mov
mov
mul
add
cmp
mov
out
int3
clc
or
jecxz
lods
adcb
mov
lcall
xchg
xchg
stos
sub
or
jg
jg
imul
sbb
cmp
mov
pop
jecxz
insl
clc
roll
hlt
pusha
cmc
push
xchg
js
scas
adc
mov
push
push
jno
add
inc
insb
or
pop
das
push
ljmp
cmp
pushf
mov
scas
or
roll
aad
test
fcmovb
inc
jno
pop
mov
or
fcmovnu
sub
jne
mov
fiaddl
jge
insb
aam
jo
push
idivb
sbb
sbb
fnstsw
mov
cmpl
lods
icebp
fs
sub
pop
js
fadds
jg
mov
and
lods
dec
pop
mov
imul
lret
aaa
xor
cmp
jmp
and
mov
cmp
xor
sarb
cmpsl
jg
aaa
jl
mov
push
mov
jns
lds
mov
lock
call
xor
sbb
add
bound
xchg
jno
pop
sbb
or
in
inc
call
mov
mov
mov
int3
lock
mov
dec
and
lock
pop
jne
stos
js
jle
cmp
rorb
imul
dec
hlt
call
jo
les
add
loope
popf
push
add
lods
pop
arpl
outsb
decb
addl
rcrl
roll
cli
pusha
hlt
xchg
mov
xchg
add
test
and
pop
mov
ret
push
cmp
xchg
add
cs
test
imul
rorb
mov
je
adc
sub
mov
cli
leave
fmull
xchg
scas
loop
hlt
aaa
jne
pop
and
pusha
xlat
mov
mov
adc
mov
jo
bound
lods
jo
inc
mov
call
mov
mov
je
push
lret
addl
dec
or
mov
sub
gs
ljmp
sarb
out
call
inc
cli
aas
lock
or
and
nop
jbe
mov
jle
cli
xor
fdivs
sbbb
aad
xchg
gs
dec
outsl
aas
pushf
sbb
enter
imul
xor
insb
mov
adc
mov
fimull
mov
sti
jl
sub
hlt
les
das
jmp
test
stos
stos
add
loope
ja
inc
mov
cmpsl
in
cmpsb
add
push
mov
loopne
adc
mov
xchg
mov
sub
ja
movsl
insl
ret
insb
aas
and
aas
test
out
lret
ret
or
mov
jg
fmul
mov
pop
js
into
pop
adc
mov
sar
mov
pusha
push
sar
in
add
dec
scas
sub
call
add
fsubs
inc
push
mov
retw
pushf
sbb
jp
mov
lret
or
adc
or
sarl
jmp
aas
into
mov
or
dec
jne
icebp
out
xor
or
inc
cmp
pop
sti
dec
mov
dec
pop
repz
adc
nop
iret
aad
es
aad
pop
jle
jo
xchg
add
test
sub
cmp
rcl
add
push
pop
jge
push
jns
adc
xchg
sbb
push
faddl
mov
dec
cltd
sbb
les
dec
pop
hlt
iret
je
mov
test
cmc
inc
loope
xor
push
test
pushf
outsb
les
mov
mov
push
push
std
jbe
call
test
adc
test
mov
in
decl
cmpb
sahf
orl
scas
xchg
push
push
xor
aam
jmp
roll
in
jo
aam
std
aas
pushl
mov
sbb
cwtl
pushf
mov
je
addb
loope
sti
std
repnz
push
arpl
cltd
rcll
mov
popf
icebp
push
lock
flds
and
insb
cmova
into
pop
dec
orb
shlb
fdivr
mov
cwtl
inc
xor
add
adc
adc
inc
add
ja
clc
dec
sub
pop
pop
mov
push
sub
fidivrl
sbb
out
loopew
fsubl
add
mov
inc
pop
jno
xchg
sbb
daa
sub
mov
xor
mov
push
jb
hlt
and
sarl
pop
fs
jbe
pop
pop
es
sub
gs
pop
call
sarb
jmp
sub
adc
inc
jo
insl
mov
add
je
inc
dec
test
fisubrs
mov
xor
inc
mov
outsb
jp
and
cmp
sub
dec
push
test
test
mov
xchg
push
mov
jb
cmp
mov
push
in
mov
nopl
int3
push
adc
scas
lret
mov
xchg
sub
adcb
clc
in
in
inc
stos
mov
cltd
jnp
pop
push
orb
clc
jne
push
daa
sub
lods
push
mov
or
push
popf
push
fldenv
push
push
nop
add
sbb
xor
shrb
loope
nop
mov
push
xor
dec
sub
pop
dec
test
int3
sbb
loopne
fcomps
xor
push
in
sbb
icebp
cmp
xchg
push
adc
or
and
je
data16
dec
and
jp
and
outsl
adc
or
jmp
imul
ret
adc
mov
or
ret
stos
jbe
je
test
out
jg
loop
out
fiaddl
shrb
add
pop
psubusb
dec
mov
movsl
cli
ljmp
test
scas
and
inc
insl
out
xor
int3
ljmp
dec
fwait
mov
mov
xlat
sub
fisubrl
dec
lahf
pop
lock
cwtl
push
aam
std
pusha
fsubrs
jmp
or
add
or
jle
inc
shrb
adc
push
push
add
jmp
add
push
stos
roll
cld
push
fbld
inc
mov
add
add
mov
pop
rol
clc
mov
xchg
lcall
ljmp
and
add
mov
add
fadd
cmp
mov
mov
test
sub
hlt
xchg
cmp
cmpsb
jae
jg
ss
cltd
dec
leave
xlat
stc
shll
xor
dec
cld
mov
shr
ss
mov
shlb
in
nop
and
mov
sbb
mov
mov
sub
jno
xchg
push
clc
repz
inc
push
mov
ret
fs
bound
mov
pop
xor
nop
sub
push
pusha
jo
cs
sbb
dec
fsubrs
das
push
js
mov
add
and
xor
adc
xchg
sub
mov
push
adc
mov
mov
cs
jl
inc
xchg
push
int3
cli
aam
dec
dec
xor
fcmovbe
test
icebp
push
lods
push
pop
orb
lods
push
xor
loopne
xor
or
cmp
sub
ficomps
je
out
fcomi
pusha
dec
sub
inc
andl
fbld
add
loopne
cmp
int3
adc
inc
lds
lcall
cmp
xchg
mov
adc
mov
cmp
movb
jge
out
cs
mov
mov
inc
aad
mov
sbb
dec
std
mov
roll
or
fmuls
divl
add
push
scas
cs
or
jno
sbbb
pop
shlb
cmc
mov
xchg
add
in
jns
jecxz
repnz
lods
inc
mov
add
pop
inc
inc
sub
xor
push
jnp
rclb
push
icebp
test
fldt
add
ret
test
scas
std
cwtl
xchg
adc
sbb
cmp
xchg
xchg
push
and
scas
pop
ljmp
subb
mov
ss
pop
jge
inc
popa
jnp
nop
dec
sub
test
sbb
movsl
mov
mov
jle
xorl
or
mov
in
xor
and
dec
clc
and
mov
cs
cltd
cmp
inc
les
cmp
add
sub
or
aam
mov
cmp
hlt
ja
inc
adc
cmpb
inc
mov
push
imul
push
stos
std
lahf
rorl
in
fnstcw
add
push
jl
lock
fstps
and
lea
pcmpeqw
pop
scas
cli
mov
sahf
fsubs
adc
cmpl
pushf
ret
fsubp
subl
test
jo
pop
sbb
in
jecxz
stos
mov
pop
jecxz
std
icebp
sub
pop
pop
ljmp
adc
sub
mov
addr16
jno
movsb
loop
xor
pop
test
ret
daa
bound
adc
xor
mov
lods
ljmp
jp
cwtl
scas
inc
add
or
pop
sbb
dec
xchg
lods
pop
or
aas
enter
and
jecxz
lahf
pusha
push
sahf
outsl
adc
push
adc
shrl
les
and
pop
pop
xchg
xchg
fisttpl
add
shll
sub
push
imul
shl
int
insl
mov
fdivr
jge
and
outsb
les
repnz
stc
insb
or
mov
fcmove
orl
pop
mov
mov
push
xor
js
clc
in
push
sbb
je
dec
and
add
ljmp
mov
dec
aas
add
pop
js
jbe
mov
fildl
push
or
and
xchg
lock
mov
push
add
inc
add
add
or
dec
mov
sbb
outsl
loopne
adc
mov
lds
repnz
xor
or
dec
in
daa
out
popa
mov
insb
inc
sbb
dec
test
sbb
sbb
mov
jb
ret
push
xlat
or
pop
cld
dec
gs
imul
pop
inc
prefetch
or
fwait
xor
shlw
leave
push
inc
or
sbb
sti
pushf
jge
mov
out
js
fistpl
rcll
in
sarb
js
fwait
enter
cmp
jbe
cli
mov
int3
repnz
jmp
cwtl
roll
sub
jle
test
call
mov
and
dec
mov
lret
mulb
push
jbe
bound
call
test
cmp
mov
incb
push
mov
pusha
xor
mov
jnp
push
mov
inc
jl
and
pop
inc
lret
mov
inc
xrelease
testb
or
cmpsb
ficoml
cmc
js
xlat
jbe
ja
rclb
cs
and
aas
in
cmc
mov
popa
xor
fsubs
clc
xlat
outsb
xor
loop
mov
leave
lods
inc
pop
cmp
or
adc
roll
pop
cmp
jo
add
inc
mov
rorb
or
adc
sbb
push
mov
out
sar
push
test
mov
movl
icebp
mov
or
ret
scas
or
arpl
xchg
xor
cmp
int3
mov
ja
cmc
loope
jns
lock
sahf
jmp
jb
in
pushf
cmpsb
push
inc
cmp
ja
adc
ret
out
jne
cmc
inc
mov
cmp
cld
les
mov
or
cmp
les
fidivrs
push
cmp
sub
decl
ljmp
mov
js
shlb
mov
sbb
lcall
in
or
sbb
xor
push
mov
add
addb
add
mov
inc
fs
push
pop
mov
push
clc
push
mov
shrl
sbb
mov
mov
orb
adc
xlat
push
in
and
add
clc
xor
fcmove
push
adc
adc
push
dec
stos
rolb
add
push
push
jmp
pop
ljmp
fistpll
sti
xchg
andl
mov
fcmovb
imul
xor
in
stc
pop
fadd
mov
jne
dec
cmp
inc
popa
push
mov
sub
std
loop
push
test
pop
or
les
dec
pop
fcoms
push
add
test
loopne
mov
xor
sub
or
aaa
unpckhps
inc
lods
xchg
cwtl
dec
or
sti
push
dec
icebp
mov
or
out
mov
stos
ret
fcoms
lcall
popf
pop
sub
or
mov
sub
push
and
or
inc
cwtl
lcall
fwait
cli
ds
dec
out
cmpsb
xlat
jp
out
or
xor
das
test
ret
daa
pop
test
lret
mov
lods
insb
sbb
mov
mov
out
lcall
and
mov
cmp
sbb
jl
jnp
mov
push
rep
daa
sub
std
inc
ljmp
cs
ss
dec
and
cli
test
sbb
loopne
xchg
inc
jp
enter
xchg
mov
fistl
cld
rorl
push
adc
testb
test
shll
sub
push
mov
lods
sub
ret
xchg
sub
ret
mov
pop
insl
lds
xorb
or
cltd
out
mov
xor
ds
mov
push
inc
orb
jns
jb
mov
and
sub
test
push
ljmp
or
push
push
hlt
or
mov
lret
loopne
ljmp
fs
roll
pop
faddl
in
mov
jg
xchg
popa
pusha
popa
jnp,pt
sub
jnp
push
inc
lods
aad
ret
test
xchg
testl
inc
push
adc
rorb
inc
mov
push
hlt
cwtl
dec
mov
cld
pop
leave
pop
or
sbb
mov
push
fwait
or
xchg
push
push
pop
mov
mov
add
ror
xor
xchg
push
pop
negl
insl
orb
es
mov
fistps
pusha
xlat
lods
cmp
call
out
adc
nop
push
cli
ljmp
xchg
std
xor
addb
inc
and
xchg
adc
fisubs
lcall
vpsravd
jle
in
and
fistl
mov
sahf
aaa
cmp
cmp
lahf
xchg
mov
imul
mov
inc
cmp
mov
arpl
sbb
cmp
push
and
jo
push
jle
push
sbb
xchg
stos
sahf
dec
xchg
or
negb
add
mov
add
lea
mov
push
sbb
jo
rorb
dec
daa
push
push
in
sbb
sub
xchg
rcl
mov
mov
mov
jae
repz
add
mov
out
fucomip
mov
pushf
mov
mov
popf
sbb
inc
dec
je
xor
push
mov
jmp
xchg
cwtl
add
or
cmp
in
inc
sti
fists
mov
rcrb
jecxz
out
xchg
and
jle
sahf
mov
jmp
jle
mov
incb
jge
inc
movb
addr16
fwait
adcb
jns
or
jns
pop
adc
cmp
adc
jb
push
fcomps
jg
sub
dec
xor
add
push
int
add
mov
call
lods
popa
aad
out
fildl
mov
adc
fistpl
xchg
push
ljmp
push
and
sub
pop
pop
jl
hlt
enter
xor
mov
push
inc
push
lret
and
icebp
pusha
or
fsub
stos
xchg
push
pop
lods
scas
outsb
add
xor
sub
jo
dec
scas
or
cmpsl
loopne
lods
mov
cmp
adc
mov
xchg
mov
push
fcompl
mov
pop
lret
test
rcll
loop
inc
cltd
dec
cld
std
loopne
in
inc
ja
clc
sbb
sub
push
cli
xchg
fidivl
pslld
bound
jg
sbb
enter
nop
pop
repz
das
cmp
int3
sbbl
sbb
outsb
pop
xor
xor
sbb
dec
aas
dec
sbb
mov
and
cmpsb
jle
push
push
mov
subb
lret
push
fcmovb
pop
push
rcrl
negb
fsubl
fs
mov
std
inc
adc
push
mov
inc
shl
adc
jne,pt
cmc
roll
mov
inc
xor
fwait
sub
fs
in
scas
xor
sub
or
jmp
add
imul
hlt
xor
fwait
sbb
sub
dec
push
shrb
movsb
push
daa
test
xchg
cmp
jle
cmc
sahf
adc
or
js
sbb
lock
lds
jo
out
rorl
pop
icebp
lahf
fisubl
out
insb
icebp
lock
sbb
and
push
xchg
sub
sub
xchg
jbe
xor
int3
out
test
int3
jg
fidivrs
and
mov
mov
fistps
test
add
ret
push
into
jno
sub
lret
mov
push
pop
pop
fiadds
shl
push
test
pop
es
adc
pushf
test
jb
push
test
and
lock
jb
bound
ficoml
shl
mov
nop
aam
sub
cltd
mov
setbe
and
pusha
cmp
cli
push
push
shlb
in
not
or
xchg
push
inc
add
rcrl
mov
and
lcall
les
mov
xchg
sbb
popf
lcall
pop
popa
pop
sbb
daa
ret
or
or
jp
adc
fld
lock
mov
sub
inc
lcall
sbb
mov
add
cltd
je
test
jecxz
dec
dec
push
sbb
cli
mov
jbe
hlt
mov
cmc
adc
xchg
mov
pop
jo
inc
sub
push
ds
jecxz
adc
cmp
dec
filds
xchg
cmp
mov
bound
aad
subb
clc
or
mov
shrb
push
fsubr
daa
cmp
insb
xchg
lret
sub
mov
and
stc
mov
pusha
inc
adc
xlat
mov
push
or
ror
pop
jge
sbb
je
inc
cwtl
dec
pop
push
in
pop
push
dec
shlb
lock
aam
lahf
mov
push
xor
test
jae
mov
stos
sbb
jb
inc
aam
test
decb
sub
or
sub
push
js
ds
js
xor
subb
test
jg
out
jo
or
sarl
dec
and
lds
addb
or
js
or
add
and
mov
daa
add
rclb
stos
das
jl
sub
sub
stos
pop
adc
data16
push
jns
mov
aas
push
insl
clc
mov
lock
cmp
inc
es
mov
cli
adcb
cmp
mov
je
xchg
push
cmp
nop
jecxz
pusha
dec
adc
or
xchg
xor
fists
xchg
insb
adc
or
dec
push
lock
push
je
add
loop
movsb
aad
stos
or
jmp
or
test
push
or
pushf
sub
into
clc
fcmovnb
and
lea
jo
sbb
insl
and
pop
xchg
mov
xchg
lods
inc
pushw
sub
xchg
lods
sbb
and
push
adc
das
rorb
or
mov
add
pop
sub
lret
inc
jle
jo
test
lea
addr16
jl
sbbl
push
mov
dec
scas
inc
cwtl
or
bound
mov
in
dec
jecxz
push
bound
adc
fisttps
mov
lret
pusha
adc
pushf
out
call
xor
adc
icebp
adc
cmp
cmp
push
mov
mov
xor
xchg
stos
shrb
add
scas
sbb
jl
push
lcall
aam
add
xchg
inc
add
push
negl
stos
xor
mov
fistpll
or
sub
sbb
or
hlt
int
or
loop
sub
sti
shl
dec
loopne
fdivl
mov
mov
shl
sbb
bound
test
xor
pushf
stos
mov
dec
push
pushf
orl
push
ret
xorl
jle
test
sarb
out
inc
jnp
lea
push
push
cltd
pop
inc
inc
in
leave
aas
jnp
lock
out
outsb
xchg
fnstenv
add
rcr
fidivrl
cmc
jo
scas
mov
lods
jbe
jns
and
outsb
cmp
or
mov
jb
into
cmpsb
push
addb
push
cmp
inc
into
lock
aad
icebp
insb
xchg
xchg
and
dec
or
stos
or
jg
jge
mov
jg
lock
pop
pop
sbb
cltd
shl
xor
aad
sbb
push
push
sub
sbb
pushl
jo
loopne
push
inc
jp
push
pop
pop
jge
sub
dec
cmpsb
arpl
std
pop
arpl
ret
dec
sub
cmpsb
adc
iret
cli
cmc
scas
push
js
add
push
and
cli
sarb
or
cmpsb
les
and
nop
jmp
std
jecxz
pop
mov
inc
scas
sahf
in
roll
loopne
mov
sti
sarb
jne
mov
dec
jno
decl
out
stos
add
mov
sbb
adc
ljmp
imul
xor
movsb
jmp
pop
int3
mov
jbe
mov
xor
pop
or
mov
fstp
sub
call
inc
mov
mov
fcompl
or
cli
or
jne
shlb
les
imul
jl
iret
xchg
lret
adc
sbb
jnp
hlt
cs
inc
cs
sbb
gs
stos
or
mov
aaa
ret
xchg
inc
push
ja
push
dec
scas
sbb
or
add
ficoml
mov
loope
out
mov
mov
cmp
and
in
pop
jbe
pop
pushf
es
mov
and
dec
loop
pop
push
sbb
sahf
clc
sub
lock
arpl
in
mov
or
sub
shll
mov
xchg
ret
aam
mov
jle
cmc
lahf
outsl
pop
sti
push
fidivl
adc
mov
xchg
and
sbb
fyl2x
imul
andb
int
stos
insl
jge
clc
xor
and
cmpsb
iret
mov
testl
lock
dec
dec
or
add
push
push
cmp
fs
mov
mov
add
sti
fimull
jge
sbb
add
and
adc
add
mov
subb
jle
mov
mov
cmp
mov
mov
jmp
inc
ret
punpckhdq
add
outsb
mov
ds
cmp
adc
mov
jo
repnz
into
xchg
bound
pushf
dec
jge
jne
jb
iret
xor
mov
mov
mov
lret
fbstp
xor
mov
js
bound
aad
orl
mov
pushf
sub
stos
shll
ljmp
add
movsb
andb
jb
mov
dec
xorl
stos
or
add
xchg
ds
or
cwtl
dec
lcall
shll
int3
jl
sub
loop
jp
lret
push
pushf
lods
arpl
test
test
inc
mov
fs
iret
std
adc
jmp
pop
mov
fcomp
movsl
cli
add
jle
movl
scas
and
rclb
les
call
cmpsl
or
out
and
stos
movl
movsb
pop
in
call
dec
push
leave
out
pop
shrl
mov
jno
xorb
jg
movsb
inc
xor
mov
sarb
push
sub
pushf
les
fcmovnb
call
repnz
mov
and
push
fdivr
imul
lret
mov
ret
pop
js
subb
scas
and
ljmp
movsb
into
push
ret
push
pop
inc
sbb
mov
inc
pop
decl
add
icebp
xchg
imulb
sbbl
fwait
inc
daa
mov
jmp
clc
inc
test
cld
or
ja
pop
xchg
repz
pop
leave
xor
adcb
outsl
adc
jae
pusha
and
inc
insl
and
jno
sbb
decl
pop
sar
push
inc
scas
add
fs
ret
push
mov
leave
cmpsl
xor
out
mov
cmp
or
and
and
sbb
jmp
and
pusha
jno
popf
out
idivb
inc
cltd
test
cwtl
xchg
mov
or
jmp
or
clc
mov
mov
and
sbb
stc
push
mov
mov
lods
mov
sub
mov
mov
inc
ss
into
in
jmp
or
outsl
or
mov
ret
push
push
lock
lock
pop
cltd
pop
outsl
imul
push
je
add
cmp
or
loope
mov
xchg
gs
mov
scas
scas
sub
sbb
or
inc
das
jmp
dec
loop
cmp
pop
inc
mov
outsl
sarb
or
pushf
cmpsb
cmpsb
mov
fdivl
repnz
add
inc
inc
adc
sbbl
std
inc
sti
sarl
sahf
push
and
cmp
stos
lahf
bound
divb
ljmp
cmc
js
ljmp
push
mov
and
mov
mov
sub
pop
lea
jnp
inc
sub
dec
test
cmpsl
movsl
sti
out
clc
xchg
add
mov
xchg
push
mov
cmpsl
mov
shll
orb
inc
test
jp
sbb
or
inc
out
mov
dec
fsubl
or
mov
ficoml
inc
aad
inc
or
movsb
xor
mov
xchg
jb
xorb
fmul
pop
pop
ffree
or
pop
das
clc
xchg
dec
dec
loope
mov
dec
jg
sub
js
inc
push
arpl
add
inc
xchg
pop
dec
adc
inc
adc
sub
mov
xchg
pusha
fmuls
stos
sub
jno
js
dec
test
push
mov
sarl
test
xcrypt-ofb
cmpsl
test
push
cmpsb
jmp
inc
pop
push
add
outsl
pop
or
mov
add
adcb
sahf
test
jl
xor
sub
shll
stos
jmp
cltd
mov
insl
popa
mov
ja
test
jl
or
cwtl
sub
dec
mov
unpckhps
pushf
fdivs
fcoms
sar
pop
push
mov
xchg
repz
sbb
and
pushl
nop
bound
adc
and
xchg
icebp
les
lods
mov
inc
sbb
mov
or
pushf
dec
mov
out
mov
outsb
push
or
cld
xor
and
shrl
pop
sbb
js
sub
inc
imul
adc
xchg
std
mov
testb
cmp
into
movsb
push
cmp
in
daa
fisubl
push
cs
mov
cld
sbb
scas
mov
stc
call
jbe
stos
loope
ljmp
xor
ret
scas
gs
pop
sbb
or
adc
lret
scas
xor
icebp
mov
adc
push
xchg
xor
adc
mov
mov
push
ljmp
adc
test
dec
inc
and
inc
aas
and
scas
jo
sub
cmp
inc
and
bound
sbb
dec
lods
sbb
std
popf
rorb
movsb
stos
and
xor
and
jnp
inc
add
push
sub
std
movsb
fildl
push
ret
and
xchg
jg
dec
std
test
dec
in
sub
push
test
push
rcr
adc
dec
ljmp
sbbb
xlat
rcrb
add
pushf
jp
mov
test
xorb
cmpb
sysenter
dec
fldenv
mov
adc
inc
push
jo
inc
pushf
push
jl
adc
add
pop
ljmp
xor
add
cs
mov
testb
cli
sbb
jecxz
aas
add
js
push
mov
xchg
test
pop
dec
and
pop
scas
mov
jmp
mov
push
push
lock
icebp
aas
subl
and
in
insl
movsb
dec
mov
cwtl
mov
dec
push
cmp
fstpl
rorb
pop
jbe
dec
out
and
movsb
xor
movsl
cld
outsb
int
mov
mov
push
fidivrs
xchg
icebp
loope
push
xor
adc
pop
push
pop
das
sub
inc
imul
or
add
mov
js
mov
inc
sahf
xor
mov
outsl
add
add
mov
fadd
xchg
adc
inc
cltd
dec
hlt
push
lods
lock
push
lea
jmp
lods
inc
and
mov
lea
call
sbb
xor
je
xor
pusha
dec
std
jmp
push
pop
std
dec
loopne
pop
mov
iret
mov
es
dec
xchg
pop
int3
push
mov
mov
loop
stos
fidivrs
pop
sub
or
call
and
sbb
mov
push
subl
ss
add
aaa
std
sar
stos
jl
outsl
ret
dec
mov
cmpsl
push
cmpb
fs
gs
sbb
lods
push
cmp
test
xor
push
mov
dec
cmp
movsbl
xor
pop
and
or
dec
or
or
das
bound
loope
xor
insb
or
jb
shrb
dec
push
stos
leave
fcoml
negb
in
push
leave
lods
cmp
bound
and
inc
mov
sub
es
insl
ret
lds
decl
add
jecxz
xchg
add
lock
mov
mov
add
push
ds
pop
test
rcrb
jbe
repnz
and
fcomps
sub
push
int3
out
comiss
lods
daa
inc
add
addr16
push
pop
jmp
int3
add
cs
call
pop
xchg
ss
ret
cmp
inc
mov
xchg
push
jge
mov
jge
cltd
mov
test
inc
clc
idivb
jg
movsl
inc
ja
inc
xchg
mov
into
scas
and
fwait
adc
rclb
nop
mov
test
push
loope
cmc
adc
cmp
je
sub
add
sar
ret
pop
icebp
mov
add
aad
iret
in
push
sti
les
sbb
xor
and
mov
xor
xor
jge
xchg
jl
xlat
outsl
and
push
lock
dec
mov
mov
mov
jo
shlb
jl
imul
mov
sbb
jmp
pop
and
sub
cli
jp
pusha
insb
inc
mov
dec
add
jbe
push
mov
inc
js
aas
sbb
jp
fs
pusha
fsubrl
clc
sbb
sbb
in
leave
and
mov
fcompl
mov
cmp
pushf
jmp
stos
push
icebp
scas
push
push
mov
and
cmc
sbb
xchg
test
sbb
push
sub
adc
and
mov
mov
clc
sbb
movsb
cmp
fldl
dec
inc
cltd
push
sbb
and
into
outsl
out
movb
aas
call
add
sub
mov
cmp
fdiv
cld
push
push
aam
stos
fdivl
dec
mov
fsts
inc
adc
xchg
jb
jmp
jecxz
adc
addl
cmp
or
mov
dec
lcall
cmp
jo
mov
hlt
or
add
sbb
push
push
fildll
imul
fcoms
loopne
lock
xchg
pop
mov
aam
ss
sub
das
or
and
mov
sub
xchg
pusha
loope
stos
clc
call
sub
loop
or
sub
adc
cmc
jle
sar
decb
lcall
adc
dec
mov
and
popa
into
cwtl
push
xchg
imul
cld
adc
mov
add
mov
fbstp
mov
fstpt
enter
and
scas
dec
inc
lods
push
sbb
loope
jecxz
in
xor
mov
xchg
mov
call
jae
adc
scas
jge
adc
stc
sub
mov
add
push
jle
push
dec
lret
dec
enter
mov
inc
mov
jle
mov
and
and
jp
aam
push
lock
jg
xor
push
cmp
sbb
daa
mov
pop
push
mov
aad
inc
es
adc
sti
clc
jnp
push
shrb
and
sbb
mov
jbe
or
sub
adcb
loopne
xor
dec
pop
lret
jmp
dec
sub
pop
dec
mov
pop
lock
mov
cld
inc
shrl
push
add
adc
fdiv
adc
into
mov
pusha
lock
push
addl
cmp
jle
out
daa
add
inc
inc
pop
adc
mov
sbb
ficoml
test
dec
xor
push
or
pop
sub
sbb
stos
call
shll
ljmp
pop
std
in
jg
push
dec
ss
mov
mov
or
add
insb
cmp
lcall
insb
jns
leave
loopne
lcall
mov
shll
orb
and
js
repnz
test
xor
subps
es
xchg
dec
loope
addr16
sarb
jno
inc
cmp
mov
std
mov
push
cs
gs
jno
dec
popf
pop
sub
or
cltd
xor
xchg
outsl
shll
jno
mov
mov
icebp
leave
inc
dec
add
cli
clc
jle
push
adc
adc
lock
scas
jle
jl
mov
or
or
add
cwtl
adc
lods
jmp
mov
lds
cld
ja
dec
imull
sub
dec
stos
jnp
jl
pop
cld
adcb
pop
mov
in
test
and
mov
cld
add
xchg
jp
movsl
adc
nop
divl
fadds
and
lods
push
daa
jnp
js
fdivr
add
es
in
movsl
lods
cmp
and
in
shll
or
inc
dec
enter
ret
jmp
movsb
fdivrl
adc
cmpsl
and
add
loopne
mov
jno
sub
push
mov
mov
cltd
dec
xchg
rclb
aas
insb
xchg
test
inc
inc
and
push
stc
or
pop
cmp
js
cmpsb
mov
xchg
or
fisttpll
in
test
lea
in
inc
mov
fcom
sub
sub
dec
out
adc
sub
add
pop
arpl
into
sbb
dec
cmp
mov
mov
dec
adc
loope
fmuls
fistps
pop
cwtl
sub
in
icebp
add
mov
pop
notb
dec
aad
jecxz,pn
mov
mov
jmp
and
pop
pop
pop
hlt
push
rcrl
fisttps
sub
not
movsb
mov
cmpsb
jbe
pop
lock
aaa
mov
mov
cmp
and
ret
cmp
sub
cmpsb
in
fwait
call
loopne
add
cmpsb
xchg
ss
jb
es
fiadds
movsb
ja
xor
pop
and
data16
inc
sbb
mov
in
adc
jmp
dec
pop
mov
incb
fs
mov
hlt
lock
cmp
xchg
outsl
fdivl
sahf
shlb
in
psubsb
les
stc
mov
jae
ljmp
js
lahf
cltd
xchg
cmpsb
lcall
mov
inc
push
push
psubw
jo
xchg
mov
cmp
int
xchg
dec
and
mov
lods
stos
mov
inc
orl
sbb
loopne
add
mov
inc
test
aaa
je
jmp
xor
movsl
pop
scas
ret
ja
push
insl
sub
or
test
xor
in
andl
sti
adc
fisubrs
cld
cli
mov
and
dec
loopne
xor
es
es
mov
or
or
iret
dec
sbbl
push
lea
jae
mov
jo
lret
incl
pop
insl
jns
pop
or
mov
aas
inc
sbb
pop
cmc
fbld
je
inc
lds
dec
mov
xchg
sbb
xor
icebp
out
mov
movsb
add
dec
cmpb
push
sbb
std
cmpsb
cmp
dec
lret
test
test
into
pop
scas
dec
add
cmpw
cs
sar
or
stc
jb
mov
adc
enter
xchg
push
mov
or
or
mov
mov
xor
rol
out
mov
incl
movsl
insl
add
cmpl
in
fs
pop
jbe
and
push
shlb
dec
sti
xchg
add
jo
cmp
rol
dec
fiadds
nop
and
fimuls
push
dec
and
pop
cmpb
xchg
xor
jmp
sub
pusha
push
cmp
addb
fimuls
movsb
pop
sbb
or
xchg
pusha
cwtl
push
adc
mov
push
mov
mov
push
sahf
inc
add
cmp
out
ret
lds
cmp
push
pushf
ret
mov
repnz
push
minps
shr
sahf
les
xchg
sti
add
clc
mov
movsb
clc
lcall
inc
pop
fwait
push
xchg
and
loopne
add
dec
or
fidivl
ljmp
ret
bound
rol
aaa
enter
jb
jno
hlt
mov
adc
xor
test
outsb
fnstsw
std
inc
adc
cmp
sub
pop
push
bound
loopne
in
sub
add
add
fadds
mov
es
xchg
mov
out
mov
dec
jne
call
cld
loope
mov
lods
xor
notl
sbb
shr
or
aas
sub
mov
fsts
add
decl
inc
insb
dec
loope
mov
enter
outsl
icebp
xor
nop
cwtl
sahf
call
bound
and
lret
push
push
not
adc
jl
fimuls
mov
sbb
dec
pause
cld
jle
call
sbb
jl
and
imul
incb
inc
sahf
pop
add
in
das
mov
lds
push
dec
push
sarl
push
icebp
arpl
jae
jb
clc
es
jp
ret
sbb
and
jmp
or
pop
mov
in
loopne
mov
or
cmp
or
ja
push
sub
out
add
fmul
outsl
and
shll
lret
roll
fisubrs
ret
push
jne
adc
mov
idivb
shlb
or
pop
cmp
dec
shlb
push
xchg
stos
adc
pop
popf
ljmp
ds
add
push
mov
mov
push
insb
xchg
pop
rorl
test
out
repz
xchg
or
in
push
shlb
lds
clc
or
dec
lahf
hlt
inc
xor
or
es
add
scas
mov
sar
scas
push
lods
mov
pop
push
ss
insb
outsl
add
inc
dec
and
rcrl
rcll
arpl
aad
fs
adc
push
sbb
add
cmp
pushw
mov
aas
icebp
outsl
fxam
sub
mov
rorb
mov
fildll
xor
xor
lock
jp
add
cmp
dec
test
sub
mov
push
add
jp
je
push
xor
sarb
cli
mov
out
mov
add
and
mov
jnp
push
add
inc
in
xor
movsb
inc
adc
mov
xor
fdivrl
imul
push
cmp
or
cmp
mov
pop
add
mov
and
mov
mov
mov
push
pusha
hlt
and
push
mov
fs
mov
mov
dec
ljmp
fisubrs
jl
std
imul
jo
or
pop
and
mov
xchg
push
adc
stos
jle
or
dec
push
hlt
or
insl
je
lods
mov
sub
imul
ret
arpl
or
scas
push
xor
add
add
in
lcall
xchg
mov
inc
std
and
cmp
add
dec
loopne
aaa
jecxz
mov
xchg
rorb
inc
pusha
sub
loope
addr16
sti
cs
sahf
and
or
push
addr16
sbb
sbbb
std
fnstsw
adc
add
xor
out
ss
cmp
adc
shlb
cmp
push
cmpsb
mov
dec
dec
pop
movsb
scas
fwait
loope
push
and
pop
aad
dec
sub
mov
pop
mov
push
mov
and
mov
outsl
jg
cld
lcall
pop
ret
test
inc
fnstenv
loopne
push
and
fstps
sub
fdivr
push
jnp
lcall
push
je
test
add
pop
cmpsl
shrb
loope
cmp
icebp
sub
add
add
rorb
in
rcrb
xor
imul
jp
dec
cmpb
lcall
int3
adc
lock
dec
and
jp
mov
mov
jo
xchg
aad
subl
aas
push
pop
imul
xchg
ret
inc
adc
test
cmpsb
push
xor
pop
das
ficomps
cwtd
mov
repz
sbb
mov
push
clc
cmp
stos
int
sub
or
notl
add
jmp
jns,pn
dec
mov
inc
call
enter
es
mov
test
dec
loopne
push
sbb
inc
dec
adc
popf
insb
inc
notb
movsb
rcrl
xor
add
cld
fimuls
xorl
bound
jb
out
popa
cli
cmp
loopne
pop
or
bound
cmp
bound
xchg
dec
dec
push
rorb
mov
mov
mov
fdiv
mov
lahf
or
mov
or
add
xchg
pusha
in
ljmp
dec
adc
gs
ja
inc
jae
inc
ja
pop
push
in
jecxz
rcrl
pushf
aam
repnz
sahf
sub
xchg
lahf
into
out
mov
lods
lahf
jg
cmp
ja
add
and
mov
push
dec
gs
inc
fisttpll
xor
mov
cmpsb
mov
shrb
adc
lods
in
fldl
ljmp
sarb
xor
hlt
mov
cltd
pop
into
sbb
les
flds
stos
insb
scas
cmpsb
cmpsl
xchg
mov
cmpsb
iret
sti
or
jnp
jb,pn
imul
out
inc
push
dec
dec
out
mov
sub
loop
clc
rcll
and
jae
or
dec
dec
ja
ss
rorl
fisubrl
popf
fcoms
cmp
cltd
mov
mov
xor
jbe
inc
fs
pop
icebp
jg
mov
add
les
cmp
aam
loope
jl
dec
dec
push
test
xchg
ret
div
rorb
cmp
inc
ret
pop
mov
push
xlat
push
mov
decb
dec
jg
sahf
mov
shl
nop
cwtl
pushf
testb
ds
inc
push
jecxz
push
adc
jae
mov
jl
scas
test
pushf
movsb
bnd
push
ss
adc
movsb
shll
dec
out
stc
outsl
mov
jmp
dec
lcall
cmp
clc
mov
into
test
or
jle
push
xchg
jle
jo
sbb
cltd
push
jo
mov
std
scas
decl
mov
cmp
aas
mov
xchg
or
popf
cli
inc
and
cltd
adc
pop
loop
hlt
adc
push
push
arpl
dec
scas
cmp
xchg
cmp
mov
or
inc
and
mov
mov
add
aaa
sub
clc
loop
cmp
lods
scas
nop
stos
loop
adc
in
mov
add
and
add
sahf
sub
outsb
mov
dec
popa
xchg
and
sarl
jp
mov
test
jmp
loopne
push
push
shr
jo
imul
negl
and
xor
pop
xor
cmp
pop
dec
outsl
subb
gs
in
lock
imul
and
mov
cmp
mov
mov
mov
stc
pop
sbb
mov
pop
adc
cmpsb
inc
mov
mov
add
clc
jno
mov
mov
aaa
loop
shl
movsb
fistpll
outsb
cmpl
jge
xor
mov
dec
cld
test
test
add
out
push
es
mov
inc
cwtl
pop
push
pop
pop
fmuls
jl
or
dec
and
rclb
mov
adc
cs
filds
ret
push
hlt
cli
nop
mov
cld
loop
int
jl
je
stos
mov
lea
mov
xchg
sbb
add
mov
push
stos
imul
adc
xor
test
inc
mov
std
int3
test
adc
cmpsb
shll
push
push
push
jmp
insl
sbb
sarb
insl
test
lcall
test
test
mov
sub
mov
pop
fs
mov
push
and
fs
shll
lods
pop
repz
jae
pop
push
fdiv
ljmp
lds
push
xchg
cmp
sahf
loop
fsubs
jg
cld
dec
cwtl
lret
sbb
add
mov
xchg
ficoml
mov
fs
push
push
push
ret
sarl
cmp
shll
or
aam
pop
dec
arpl
xlat
fisubrl
push
gs
fsubl
lds
and
jl
mov
mov
cltd
and
xor
iret
push
out
dec
popa
fisubrs
or
addb
ljmp
pop
add
inc
adc
aas
sar
jae
add
stos
mov
sub
ds
and
int
mov
ljmp
scas
hlt
xchg
xor
jne
ja
adc
push
adc
ljmp
fsubrs
lock
inc
test
cmp
add
jbe
xchg
mov
and
or
mov
add
mov
push
xor
mov
push
push
adc
mov
push
sub
mov
in
pusha
and
push
jle
xor
in
mov
adc
leave
lods
iret
aam
aam
insb
dec
cs
lods
ret
adc
mov
pop
mov
and
pop
rcll
jg
cwtl
fwait
in
in
add
sbb
add
mov
dec
ja
ret
ret
imul
or
fstps
push
pop
inc
jb
int3
out
add
jle
mov
outsl
pushf
sbb
mov
fmuls
push
push
jns
fsts
dec
inc
fs
mov
mov
scas
dec
test
into
es
shl
mov
dec
iret
mov
enter
ds
cmp
loop
fmull
jb
mov
cs
add
inc
fdivrl
jle
fcompl
cltd
nop
mov
in
repz
test
scas
rcrb
fisttps
adc
dec
loopne
sub
xchg
mov
add
adc
into
add
in
jp
adc
orb
or
dec
lods
add
mov
add
clc
pop
into
in
jle
jae
cld
outsl
je
pop
jo
jns
mov
mov
mov
iret
dec
jp
sub
sbb
das
inc
cwtl
and
stos
xchg
fidivs
or
mov
test
ficoml
mov
rol
jp
outsl
mov
push
inc
jp
mov
add
inc
gs
jb
outsl
sbb
test
or
icebp
lcall
das
inc
aam
dec
jnp
mov
pop
cmp
pop
shrb
call
mulb
dec
cmp
xorl
pop
mov
xor
mov
xlat
hlt
pop
ret
out
call
jl
sbb
xchg
jp
or
xor
lcall
dec
xchg
jge
pop
cmp
dec
cmp
pop
pusha
or
push
inc
jmp
scas
nop
in
sbb
addb
loope
aaa
jp
or
jmp
dec
push
cmp
jecxz
out
dec
cmp
mov
stc
outsl
inc
roll
ja
push
fmull
or
test
pop
pop
pop
add
insb
rol
xor
mov
sub
ret
insb
imul
stos
push
jbe
loop
loop
out
or
sub
cld
or
and
js
movsl
mov
bound
or
movsl
sub
mov
push
xorl
jnp
movsb
loop
call
add
mov
in
push
outsb
icebp
inc
data16
std
cmc
insb
in
pop
push
je
mov
ja
pop
mov
lret
fidivrs
mov
xchg
mov
and
add
pop
or
inc
and
mov
cli
cwtl
sub
mov
sub
mov
push
sub
imul
push
mov
mov
add
in
sbb
movsb
loope,pn
or
dec
int3
pop
fistl
pop
push
sub
clc
scas
test
inc
ret
ret
pop
mov
loop
jb
dec
mov
and
mov
cmp
mov
mov
jge
in
pusha
cmp
hlt
jno,pn
mov
int
loope
call
aam
rolb
cmc
pop
jge
lock
lcall
add
or
ljmp
test
mov
push
loop
hlt
scas
rorb
pop
adc
and
test
pop
call
mov
sub
add
sarl
rclb
mov
mov
int
inc
aad
cwtl
and
stos
mov
mov
aaa
cli
or
and
pop
int
push
sub
sub
cmp
add
sbb
or
pop
xchg
out
xor
and
outsl
adc
or
push
out
push
in
out
clc
pusha
push
mov
popf
cmp
stos
pop
cmp
lock
xchg
add
jno
add
stc
lock
sub
in
daa
push
pop
mov
dec
cmp
adc
mov
add
and
xchg
adc
xchg
int3
jmp
pop
sbb
mov
xor
push
pop
fimuls
sarl
ret
inc
xchg
loopne
xor
mov
jle
aam
sub
mov
or
icebp
sbb
sub
mov
cmpsb
ja
dec
jge
ja
clc
out
sub
xchg
inc
mov
inc
fs
push
xchg
push
test
lcall
aam
xor
adc
les
fidivrl
scas
and
mov
out
insl
xor
gs
push
sub
xor
imul
cmpsl
dec
insl
pop
outsl
jne
xor
dec
push
gs
push
push
ljmp
dec
push
add
insl
rcrb
add
dec
out
stos
push
in
aad
ficompl
cmp
jmp
out
pop
pop
dec
adc
mov
sarl
cmp
rclb
sbb
xchg
adc
mov
mov
scas
cmp
aam
loope
movb
xchg
iret
in
pop
jmp
mov
in
cmpsl
xchg
cmp
lcall
in
push
scas
sub
and
xor
in
decl
out
push
mov
adc
xlat
ja
and
xor
in
mov
std
mov
test
pusha
adc
cwtl
add
out
adc
xor
or
add
mov
idiv
lcall
jg
mov
jb
inc
sahf
fimuls
ret
sub
jo
fisubrs
scas
std
aad
lcall
int3
inc
dec
jnp
jno
call
xchg
push
in
sar
outsl
pop
lret
cmp
adc
lcall
dec
bound
movl
and
xor
jle
testl
popa
push
les
popa
adc
les
cmp
or
sbb
std
incl
test
sbb
cmp
push
lods
mov
mov
lcall
out
std
jmp
cmp
and
out
add
pop
xchg
cmp
lcall
or
sbb
mov
push
mov
mov
mov
mov
loop
aam
mov
pop
mull
adc
or
stc
sbb
sub
ss
jl
adc
test
sub
in
add
xor
ret
cmp
cmp
add
dec
adc
cwtl
push
lahf
add
sbb
push
pop
xchg
cld
cmp
push
movsb
pop
sbb
call
ja
xor
aam
mov
push
or
lock
lcall
sahf
rcll
dec
lods
or
sarl
adc
mov
push
add
stos
sub
lcall
xor
sub
xchg
fs
inc
push
movl
fwait
pop
push
push
lcall
cmp
jecxz
inc
jne
mov
adc
and
scas
mov
mov
incl
test
mov
out
mov
jnp
or
cmpl
loope
push
mov
xor
sub
stc
in
ret
push
fisttps
dec
inc
jmp
dec
dec
outsb
mov
test
mov
aaa
pop
call
cmp
sbb
xor
aam
dec
jmp
xchg
bound
jl
push
scas
ret
repnz
mov
sbb
rolb
out
mov
mov
mov
cli
pushl
cmp
mov
aas
mov
fdivs
xchg
pusha
mov
cmp
mov
stc
shl
jmp
sbb
lcall
sahf
mov
dec
mov
xchg
pop
aam
jne
das
jmp
ds
jp
in
adc
loope
mov
and
imul
scas
ror
mov
cmp
add
sub
fucomp
push
mov
dec
rcrl
test
adc
dec
ss
pop
jmp
adc
cmp
cli
xchg
xchg
inc
add
inc
div
jge
xor
test
cwtl
or
mov
in
xchg
cltd
daa
mov
adc
cmpl
in
test
add
cltd
push
mov
sbb
lcall
mov
in
or
pop
out
jle
sbb
out
je
mov
int3
cmp
fadds
iret
or
rcr
out
inc
xchg
fmull
adc
mov
ljmp
ljmp
inc
dec
add
mov
into
fs
aas
inc
jg
pop
pop
orl
jg
lcall
cs
jne
pop
adc
mov
lock
in
or
mov
lea
cmc
les
or
out
mov
and
jge
jbe
je
jecxz
jle
aam
cmpsl
xchg
inc
inc
mov
xor
test
aad
cmp
rclb
stos
cmp
aad
inc
addr16
cmp
sub
adc
popf
pop
sbb
push
adc
outsb
or
mov
cmp
incl
dec
gs
mov
pusha
aam
arpl
faddl
fisttps
fs
jnp
out
pop
sbb
fstps
das
cmp
loope
mov
dec
jg
jmp
sbb
movsl
shlb
stos
mov
fidivrs
pop
arpl
mov
idivl
jg
fwait
repnz
fiaddl
jo
pop
mov
jae
in
shrl
jmp
or
inc
imul
or
cmpsl
mov
xlat
loopne,pn
inc
pop
rcrb
mov
enter
std
mov
arpl
inc
pop
dec
dec
pushl
dec
cltd
sahf
xor
mov
out
in
lahf
cmpl
pop
add
lea
test
pop
fisubrl
mov
xor
fdivrs
data16
dec
push
das
shrl
clc
jns
xor
fimull
xchg
pop
hlt
daa
aad
jmp
inc
pop
inc
xchg
test
mov
popf
out
test
lea
lahf
mov
rcll
imulb
cmp
aaa
repz
dec
call
add
lea
mov
push
mov
xchg
rorl
cli
cmc
outsb
mov
in
cmpsl
arpl
insl
pop
pop
and
loop
decl
popa
stc
push
push
push
mov
cmp
fcoms
and
lcall
xor
stos
clc
inc
stos
rorb
pop
cmp
shl
test
sbb
addr16
inc
pop
sahf
js
divb
pushw
fiaddl
adc
scas
loopne
cmp
push
int3
int3
bound
sbb
jl
cmp
jmp
mov
xchg
loope
decl
inc
outsb
sub
jns
cld
jnp
pop
rclb
cld
clc
mov
sub
mov
fcoms
inc
stos
movsb
fidivl
lock
adc
or
ret
ljmp
xorl
ficomps
push
xor
and
sar
jmp
pop
sbb
and
add
sub
pop
out
or
dec
sub
pop
cld
ljmp
jnp
sub
xchg
pop
dec
cmp
xor
movsl
decl
jns
push
psrad
push
int3
mov
out
in
out
shll
rclb
inc
stc
mov
je
loope
add
rorl
cmp
cmp
int
call
ds
pop
xchg
ds
pop
icebp
mov
nop
pop
mov
out
shl
sahf
lcall
sbb
sub
cmpb
push
insl
insl
or
and
insb
inc
adc
mov
outsl
jne
scas
in
inc
push
mov
mov
out
mov
loopne
push
out
cmpsb
cli
cmp
xchg
jp
xchg
and
pushf
in
ficomps
sahf
adc
dec
in
pushf
push
inc
adc
mov
cmp
shll
lock
adc
lods
mov
mov
dec
or
mov
xchg
psrld
aas
pusha
sbbl
and
fistl
out
pop
adc
xchg
dec
lret
adc
andb
ret
bswap
lret
test
mov
sub
lcall
addl
fistpl
xchg
sahf
and
fwait
shr
jbe
dec
decl
cld
ret
xchg
daa
cmp
sbb
xchg
in
mov
in
mov
cmp
mov
out
movsl
iret
push
vandps
sbb
imulb
popa
fists
inc
hlt
dec
jecxz
jb
jmp
mov
jnp
cmp
mov
jb
cmc
add
lcall
jne
cmp
inc
mov
out
pushf
push
inc
aad
push
xor
mov
jecxz
stos
sbb
push
sbb
and
xor
push
out
cmp
xchg
lcall
inc
mov
xchg
aaa
hlt
aas
push
push
loopne
pop
test
or
scas
lods
pop
cmc
add
mov
and
pop
in
mov
lods
cmpsb
push
nop
xchg
inc
mov
lods
ss
out
das
cli
jl
mov
push
lret
scas
inc
rolb
or
mov
fildl
mov
mov
push
pushl
aaa
in
fs
pop
fimull
jl
pop
adc
xor
stc
in
lock
incl
call
xor
pop
ljmp
mov
out
stos
sti
fistps
xor
mov
adc
cmc
mov
mov
mov
push
cmp
scas
ljmp
stos
lods
pop
sbb
loope
or
enter
or
pushf
xchg
pop
push
cld
incl
mov
bnd
in
shrb
les
push
pop
in
cld
jbe
add
in
adc
rorb
bound
sti
mov
clc
adc
dec
pop
or
push
sbb
xor
in
es
inc
ret
fsub
ljmp
rolb
cmp
push
cmp
fsubl
and
sbb
cli
cmp
insb
sub
mov
int
and
sahf
mov
popf
js
bound
sarl
lcall
lds
icebp
cmp
jecxz
xlat
cmc
mov
lcall
arpl
push
lea
fcomp
push
int3
arpl
aad
push
jg
jae
dec
dec
inc
test
movsl
mov
push
aad
repnz
add
dec
movsl
mov
incl
xchg
enter
cmc
cmp
mov
icebp
cmpsl
imul
jae
sti
add
xchg
rolb
call
std
jne
add
sti
mov
int3
pop
mov
inc
aam
addr16
jnp
jmp
rcrb
and
mov
mov
scas
cs
lahf
sahf
movsb
cmp
xchg
push
in
sbb
scas
clc
out
inc
int3
rcll
rcrb
sbb
sbb
jnp
call
std
ljmp
jle
repz
pop
mov
jo
xchg
xchg
neg
mov
ja
scas
adc
mov
lret
jle
sub
and
mov
dec
sub
lahf
add
xor
fistps
jp
jns
bound
ss
jmp
pop
arpl
xchg
stc
jnp
std
lds
test
lret
sub
aam
sub
shll
std
adc
int
and
sbb
outsl
loop
jp
data16
icebp
mov
pushl
pop
lret
dec
leave
mov
es
mov
mov
or
jmp
out
adc
nop
sub
xchg
pop
mov
sbb
cmp
or
xchg
inc
push
dec
pusha
xlat
lcall
or
imul
cmc
stos
dec
aaa
movsl
leave
pop
in
lcall
or
push
jge
popf
pop
xchg
mov
sub
fcmove
dec
ret
divl
or
pop
orb
or
cs
iret
xchg
push
fwait
cmp
test
push
lods
push
sub
lret
pop
pop
or
fwait
sub
jecxz
push
std
mov
dec
add
xchg
sub
mov
jae
call
popf
idiv
jecxz
jp
pop
dec
dec
decl
sbb
mov
or
scas
sub
icebp
incl
sbb
jae
mov
mov
in
imul
out
push
sahf
cmpsl
ret
jo
mov
sbb
rorl
mov
xor
into
sbb
mov
pushl
and
xchg
jle
cld
sub
sub
lcall
jg
cmp
mov
fsts
xchg
call
movsl
mov
call
adc
dec
adc
subl
mov
xor
mov
out
frstor
add
out
mov
decl
sub
adc
push
sbb
insl
mov
icebp
mov
fisttpl
sbb
cld
push
lds
mov
and
xchg
adc
mov
jg
lcall
cld
xchg
sbb
arpl
push
mov
iret
dec
or
fwait
push
cmp
lret
cmp
push
ljmp
cmp
icebp
lods
mov
addb
xor
mov
jle
add
scas
icebp
call
lret
push
adc
rcrb
inc
popf
cs
roll
lcall
pop
lock
sbb
inc
or
xchg
and
pushf
push
into
out
xorl
stos
clc
pop
data16
scas
lret
jne
jg
outsb
cwtl
xchg
fisttps
rclb
mov
sub
lods
mov
inc
popf
cmp
daa
jns
pop
pop
daa
lock
jmp
add
fdivl
xor
mov
cmp
rep
adc
cmpsb
in
adc
inc
adc
xor
lock
decl
fdivl
ljmp
loop
push
xor
jg
cmpsl
mov
loope
jmp
mov
cmp
std
adc
cmp
subb
call
mov
stc
fs
push
ds
xor
mov
call
pop
std
sti
inc
das
pop
enter
aas
mov
add
aam
fwait
pop
and
call
imul
bound
jle
adc
dec
andl
call
xor
cmp
imul
mov
cmp
jns
inc
xor
movsl
jno
or
push
addps
decl
or
mov
sub
add
arpl
decl
xchg
add
jg
cmp
out
fsubs
fwait
push
mov
incl
rolb
into
aaa
out
cmp
adc
addr16
cli
xchg
mov
and
dec
decl
icebp
jle
mov
cmpl
mov
clc
inc
adcb
call
push
jne
popf
pop
cmp
jl
decl
mov
pop
ret
inc
or
aam
jge
jbe
dec
in
push
leave
push
popa
push
rclb
nop
lret
inc
in
and
lahf
jg
push
and
push
shr
leave
xor
ja
adc
sbb
scas
incl
cld
in
mov
mov
cmp
rorb
lods
lods
int
decl
nop
int
mov
clc
arpl
mov
outsl
insb
dec
push
xchg
test
xchg
pop
xchg
pushl
push
inc
push
sub
xchg
call
insl
mov
mov
lea
lahf
mov
sub
decl
loope
js
ljmp
divl
push
or
mov
insb
sub
xlat
adc
incl
cld
iret
or
es
and
cld
push
and
aad
pop
mov
cli
incl
and
loop
fcmovnu
adc
imul
sbb
scas
insb
sbb
inc
jbe
pop
es
cwtl
adc
nop
loop
sahf
pushf
cmpsl
in
mov
jmp
in
cli
icebp
xor
orb
fcmovnu
and
loopne
xor
xor
incl
lds
mov
mov
dec
test
xchg
mov
inc
repz
xchg
sahf
inc
ja
pop
out
and
dec
adc
imul
ret
or
lock
fisubrl
hlt
scas
arpl
loop
fcoms
xchg
dec
movsb
xchg
xor
incl
push
pop
shrl
mov
stc
lret
addb
push
fst
sub
cld
decl
movsb
hlt
mov
xor
cld
pop
sbb
int3
jno
pushl
jp
js
xchg
aaa
xchg
dec
out
rcrb
sub
je
xor
sub
out
pop
hlt
lcall
xchg
scas
ffreep
insl
ror
movsl
xor
stc
mov
decl
push
sub
insb
mov
jmp
stos
inc
div
lods
mov
lcall
mov
inc
jne
and
and
push
push
mov
jl
fisttps
pushl
fimull
and
xchg
dec
loope
ret
ds
js
in
push
aaa
movsl
lds
ja
inc
cmpb
add
dec
in
lcall
stos
pop
xor
mov
sub
pop
inc
incl
dec
adc
jb
cli
mov
in
fdivrl
in
push
push
and
leave
test
std
mov
pushl
push
and
mov
dec
push
aad
call
xor
sub
sub
popf
test
pop
arpl
pop
xchg
mov
push
add
stos
mov
sbb
xor
mov
testl
jmp
xchg
out
pop
clc
add
mov
ret
inc
mov
sub
sub
iret
push
hlt
xor
test
jge
repnz
sub
orb
iret
inc
pop
fdivrl
dec
out
xchg
jns
mov
pop
std
add
pusha
xor
imul
or
pushl
scas
and
mov
pop
pop
dec
or
mov
pusha
fildll
jl
mov
or
push
pop
and
fldl
cli
divb
mov
test
mov
xchg
push
dec
dec
mov
lcall
cmpsb
mov
repnz
aad
rep
cmp
inc
mov
jg
std
das
sub
cmc
jbe
pop
ret
jg
push
cld
jp
xor
sub
pop
xor
adc
aaa
repz
enter
adc
jg
ljmp
jbe
call
or
cmp
les
sub
js
cmp
aas
pop
or
sub
lcall
jge
shl
add
mov
cmp
test
jae
cmp
dec
roll
arpl
leave
mov
xor
out
pop
and
fwait
pop
std
cwtl
mov
ljmp
pop
lock
xchg
lret
repz
pusha
mov
aas
add
lcall
push
lcall
and
mov
lods
adc
icebp
imul
das
clc
inc
mov
dec
lods
imul
pop
ficompl
call
add
in
mov
outsb
lods
sub
adc
call
sbb
sarl
add
pop
out
cmp
jmp
fsts
lcall
inc
stc
mov
les
outsl
and
test
clc
mov
fwait
push
push
xchg
inc
cs
dec
push
outsb
push
cmc
push
sbb
ret
ljmp
in
out
and
add
lea
clc
mov
pop
andl
xchg
shr
jg
jae
hlt
mov
jnp
ds
scas
lret
stos
sbb
xchg
mov
xor
out
mov
cmpb
adc
jecxz
repnz
push
cwtl
jne
lds
shll
dec
mov
xor
cld
faddl
call
clc
enter
mov
out
fcomp
lahf
pop
add
jne
pop
dec
testb
call
sqrtps
and
out
cmp
loop
xlat
cmp
cld
mov
dec
ret
lods
gs
xchg
xchg
push
or
sbb
sub
ljmp
pop
lcall
cmp
lahf
subb
cmpsb
jle
sbb
rcrl
cmpb
jg
jg
mov
into
cmp
jge
push
mov
xor
pop
std
jg
lcall
xor
sub
mov
and
pop
aad
push
subl
pop
mov
jo
sbb
lret
jns
fsubl
idiv
mov
mov
outsl
adc
mov
fsub
add
incl
dec
pop
inc
popaw
ja
push
inc
cwtl
cmpsb
xor
jg
rclb
andb
mov
xchg
loopne
pop
stos
ret
call
xchg
out
and
push
into
lcall
lds
lock
and
mov
scas
pusha
fdivl
cli
sarb
sahf
or
adc
add
and
cmp
test
mov
jb
pop
or
inc
xlat
ficomps
out
clc
lcall
dec
stos
rorl
push
pop
fs
mov
scas
push
test
mov
in
pushl
mov
ljmp
inc
sub
inc
xchg
test
mov
xchg
cmpsb
fcomip
fisttps
stc
adc
lea
rclb
iret
outsb
idiv
pushl
jbe
dec
cmp
sbb
mov
jp
popa
jae
lods
imul
lcall
cmp
mov
jge
jmp
mov
enter
mov
xchg
lea
or
test
cwtl
sti
pop
insl
insb
push
sbb
fcoml
jbe
pushl
stc
lcall
xchg
sbb
lock
imul
nop
push
ret
xlat
push
jg
clc
repz
frstor
adc
in
arpl
popa
mov
test
add
or
outsb
push
sbb
sbb
and
mov
fildll
dec
or
mov
cmp
mov
lcall
addb
or
jae
pop
pop
xchg
xchg
jmp
imul
mov
cmp
adc
popa
jnp
cld
mov
and
fidivs
mov
mov
adc
mov
mov
fistpll
cmc
cmp
push
sbb
dec
xor
fcom
and
inc
ss
dec
fistps
mov
pop
fldcw
loop
mov
pushf
ror
add
outsl
shll
fistpll
push
xchg
jle
test
lods
push
aad
push
nop
icebp
dec
xchg
sbb
fwait
cmp
loop
in
push
in
and
or
adc
ljmp
popa
jns
jbe
dec
push
outsb
push
popa
push
popa
jb
cld
call
push
outsb
ja
inc
arpl
inc
inc
inc
addr16
arpl
dec
jns
or
subl
pop
addb
imul
push
imul
dec
ja
jno
inc
dec
dec
inc
push
dec
inc
push
dec
pusha
aas
rcll
pop
dec
mov
gs
roll
pop
lods
ljmp
stc
ljmp
sub
add
jb
jne
insb
inc
insb
insb
outsl
arpl
jmp
add
push
inc
inc
push
inc
push
inc
push
inc
inc
dec
inc
add
pushl
pop
dec
dec
dec
push
dec
push
push
push
inc
pop
inc
push
dec
stos
sub
pop
push
dec
jbe
dec
jae
popf
call
jo
push
push
inc
inc
push
js
fs
js
dec
jo
aas
add
pop
dec
push
push
dec
xchg
adc
jbe
cmp
adc
jg
gs
gs
xor
cs
test
cltd
mov
mov
inc
jo
rorb
sbb
fsts
enter
push
fildll
xchg
xchg
les
push
sbb
bound
jle
cld
xchg
xor
mov
aas
push
add
popf
xchg
add
mov
pop
inc
add
fisubl
add
fildll
pop
rolb
sbbb
shrb
sbb
xor
adc
std
push
pusha
pop
mov
outsl
adc
or
in
inc
xchg
sub
push
loope
movsb
mov
mov
add
data16
mov
mov
dec
inc
cmp
decl
xchg
sub
out
lcall
call
adcl
bnd
mov
jmp
outsb
sub
mov
sahf
cmp
ljmp
and
sbb
or
lods
inc
sbb
jle
xchg
lock
xor
lret
ret
fimull
nop
in
push
sub
and
add
in
inc
add
inc
xchg
adc
lock
popf
cmpb
xchg
adc
cltd
shlb
je
clc
add
sub
ljmp
or
mov
andb
xchg
or
lahf
rol
or
jp
inc
pop
push
adc
push
or
cld
cltd
les
inc
clc
or
iret
data16
dec
lods
dec
daa
orb
or
inc
or
in
xchg
cld
in
mov
inc
jns
jo
adc
outsb
cmpsl
mov
adc
lea
lea
bound
jo
jae
shrb
xchg
out
in
lods
aaa
dec
mov
outsl
jo
loop
jmp
push
jb
mov
cld
ljmp
jmp
or
mov
popa
lea
add
lock
pusha
inc
adc
mov
subl
and
jl
cmc
push
mov
rsqrtps
xor
in
pop
sub
mov
and
out
call
xchg
jae
hlt
pop
xchg
sub
sbb
out
adc
lcall
jle
xor
jle
je
cmp
or
xchg
fcmovne
adc
aas
cmp
rcll
mov
adc
mov
cmpsb
les
ss
mov
pop
sbb
mov
and
loopw
enter
dec
xchg
and
xchg
and
sbb
mov
pop
mov
sar
jp
lahf
add
ljmp
dec
xrelease
std
xchg
in
push
push
cli
inc
sbb
mov
mov
mov
mov
or
mov
push
pop
add
or
dec
scas
xor
inc
add
aam
pop
jl
lock
push
sub
pop
adc
jmp
jbe
dec
cld
adc
xchg
mov
sub
mov
mov
add
mov
pop
xor
orl
push
adc
ss
pusha
and
mov
jg
inc
jl
out
jg
add
fs
jl
out
pop
sbb
mov
ret
jmp
mov
and
add
adc
insl
loope
xchg
adc
and
or
ljmp
pushf
adc
xor
out
js
or
pop
out
xchg
push
add
testb
push
adc
enter
xor
shrb
test
push
adc
xchg
jo
adc
jl
insb
push
or
fsubrl
mov
adcb
inc
mov
jo
mov
nop
movsb
ja
add
je
lods
stos
cmp
aam
cmpl
mov
clc
cmpsl
aas
pop
mov
push
adc
add
fs
call
in
push
insl
test
jge
mov
and
jmp
rorb
sbb
aaa
mov
mov
mov
push
push
ss
xor
pop
mov
add
int
icebp
fisttpl
mov
xor
adc
es
or
xor
pop
adc
clc
popf
ret
je
pop
bound
jo
js
jne
jne
push
call
out
pop
mov
icebp
sbb
mov
mov
adc
into
mov
int3
orl
loop
mov
scas
or
mov
bound
add
frstor
mov
xchg
mov
fs
loopne
add
push
lods
jbe
mov
test
lea
js
lock
hlt
lods
test
in
pop
test
add
clc
popa
xor
lods
dec
cmp
ljmp
xor
pop
dec
sbb
sbb
lret
dec
cmc
hlt
psubusw
add
push
cli
mov
imul
and
jbe
mov
movsb
sbb
inc
data16
or
scas
ret
fwait
movsb
shll
add
adc
fcomip
mov
push
add
or
inc
repnz
cmp
movl
add
mov
mov
cmp
and
xor
push
sbb
clc
or
mov
cmp
pop
push
out
aas
jl
and
inc
rorb
mov
inc
loop
cmp
jae
add
pop
fsubp
xchg
repz
jnp
mov
mov
xor
add
mov
xor
cmp
mov
fisubrs
mov
fsub
mov
mov
push
jb
cmc
loop
mov
clc
es
xor
in
xchg
pop
jo
out
les
nop
in
pop
jo
jmp
je
mov
cld
fistps
je
sub
and
hlt
mov
push
js
cmp
stos
lret
xchg
in
mov
jle
shr
fs
dec
mov
cmpb
rcll
push
add
ret
xchg
adc
pop
xchg
fldenv
fbstp
stos
dec
in
scas
inc
test
lds
leave
mov
faddl
xchg
or
push
call
cmp
rorb
mov
inc
sbb
lret
mov
lock
pop
icebp
loopne
xchg
sub
sub
cs
and
cmpsb
xchg
decb
xchg
mov
push
jno
in
mov
outsl
cli
dec
cmp
cwtl
push
dec
jg
daa
testl
cmp
mov
inc
jb
xchg
sub
aas
push
push
pop
sub
add
sbb
stos
call
repz
mov
sub
test
mov
xchg
lods
jnp
orb
and
push
bound
int3
sbb
test
iret
shrl
loop
gs
pop
iret
pop
shrl
pop
ds
push
cmpsb
jp
pop
fwait
mov
cmp
and
or
addb
cmpsl
pop
sbb
addl
dec
pop
adc
cmp
sbb
insb
mov
mov
xor
iret
xorl
push
out
xor
clc
cwtl
cmp
or
jle
cmpsl
mov
roll
pop
or
std
rolb
stos
xor
sbb
push
mov
xor
dec
sar
mov
rcll
mov
jnp
roll
dec
ret
or
les
test
inc
mov
dec
mov
xchg
adc
movsb
fmulp
pop
add
xchg
sarb
xlat
js
add
out
repnz
push
bound
out
mov
jbe
test
sbb
fdivrl
sahf
movsb
clc
fwait
nop
ret
jo
ljmp
test
mov
les
in
or
pop
dec
cld
and
adc
xor
mov
adc
xor
js
nop
hlt
stos
push
sbb
shl
clc
lods
mov
pop
subl
sub
fcomip
dec
test
cmp
jb
mov
mov
and
movb
jae
movsl
test
push
decl
and
dec
popl
adc
add
xchg
lock
mov
cli
inc
pop
arpl
and
nop
cwtl
and
and
call
sbb
mov
xchg
pop
xor
jmp
add
clc
adc
jno
and
push
sbbb
mov
jno
jmp
add
sahf
adc
orb
cmc
rclb
jb
adc
enter
sbb
sbb
not
out
subb
aad
lock
aad
clc
pop
rolb
xchg
pop
add
test
add
lds
call
shlb
stc
mov
xchg
jl
mov
scas
mov
aaa
pop
jg
push
call
sbb
xlat
out
shll
aaa
rcrb
cwtl
pop
hlt
mov
fbld
rolb
mov
dec
jmp
jbe
and
sbb
insb
clc
xor
es
fwait
daa
inc
movsl
loopne
xchg
pop
fcompl
lock
enter
or
in
mov
push
xchg
je
mov
jle
cs
lock
xor
mov
mov
insl
test
sub
jb
push
jg
pop
push
sub
or
add
aaa
cmp
jp
int3
enter
jmp
clc
inc
cmp
and
mov
cmp
sbb
ret
or
shrb
mov
push
cld
out
sub
fildl
xor
aas
sub
mov
jbe
aaa
jnp
mov
sbb
push
pop
xor
dec
push
dec
jo
hlt
pop
sbb
mov
sbb
rcrl
cmp
shl
add
xor
sbb
push
pop
cmp
lea
js
sub
add
call
sbb
cwtl
mov
mov
std
push
outsb
adc
adc
xchg
out
push
push
or
icebp
scas
xor
xchg
jb
sub
push
lock
out
jp
pop
ret
fcompl
insb
inc
and
fs
roll
jle
add
mov
inc
andl
adc
stos
push
push
pop
push
mov
out
xor
mov
addr16
ljmp
dec
jmp
ret
rcl
xchg
mov
inc
aaa
push
out
inc
push
in
adcl
push
mov
jl
or
xor
int
idivb
cmpb
add
adc
fwait
addr16
aam
fiaddl
fadds
mov
push
jg
and
push
es
scas
or
mov
leave
addl
ljmp
jl
inc
outsl
sub
ljmp
mov
add
lods
jmp
fsubl
push
bnd
push
rcrb
out
fsubs
lea
jns
jb
fcomi
das
xor
shrl
push
mov
lahf
adc
mov
arpl
pop
ret
jne
jmp
lock
test
inc
cmpsb
mov
and
mov
lea
cmp
lock
dec
sub
xor
rolb
lds
iret
test
sub
insb
shl
dec
mov
roll
cmp
stos
fimuls
and
les
push
je
add
call
sbb
push
lds
icebp
pop
cwtl
cld
mov
jnp
iret
xor
sbb
bound
xchg
add
and
or
fs
lock
push
sahf
bound
iret
add
mov
xchg
cwtl
jne
mov
mov
les
ljmp
inc
sbb
aad
arpl
shll
stos
mov
test
icebp
dec
cmp
cld
fstpt
rolb
mov
or
xchg
jne
sbb
inc
dec
bound
fisubl
ret
and
and
or
insb
dec
lret
sbb
cltd
icebp
loop
add
fld
jle
pop
je
mov
push
jns
pop
lret
xor
sbb
fnstcw
aas
mov
rcl
popa
jp
ret
bound
and
mov
mov
and
pushl
and
in
lods
js
loope
jl
lret
xor
jbe
or
cmp
xor
call
repnz
inc
cli
add
imul
hlt
sti
mov
mov
sub
dec
push
icebp
shlb
jg
sbb
mov
xor
fwait
mov
fistl
push
pop
rclb
loop
push
rorb
sub
xor
fiaddl
hlt
add
ljmp
mov
mov
insl
scas
jmp
icebp
push
cmc
aaa
stos
bound
daa
andb
mov
push
mov
test
scas
movsb
test
mov
ljmp
or
int3
stos
aam
stos
roll
pop
jb
sbb
cmpsb
inc
pusha
cld
inc
mov
fnstenv
mov
jnp
xchg
or
clc
push
incb
cmpsb
pop
push
fsubrl
dec
jb
inc
sbb
dec
mov
pop
nop
jno
rorb
test
outsl
decl
dec
pop
dec
out
jne
nop
scas
inc
and
jecxz
lea
ds
push
shll
cmpsb
xchg
scas
sbb
mov
pop
add
sub
mov
ja
or
addr16
mov
popa
pop
mov
jns
shl
mov
hlt
add
loopne
loopne
std
and
mov
jp
das
lahf
and
mov
hlt
mov
sub
call
icebp
cmp
or
mov
pop
rcll
mov
cmp
jno
ficompl
cltd
bound
aas
mov
mov
mov
inc
hlt
ficoms
add
xlat
or
mov
mov
and
icebp
jp
enter
cmpsb
and
jmp
mov
or
mov
xor
rclb
outsb
dec
ja
pusha
sbb
mov
sbb
out
mov
lcall
ret
decb
sti
cmp
sbb
pop
std
mov
mov
dec
cmp
or
push
mov
mov
loop
jle
repz
loop
cwtl
and
inc
scas
pop
enter
sub
call
mov
sub
jecxz
and
rol
dec
xchg
mov
adc
bound
pop
mov
arpl
icebp
push
mov
xchg
sub
or
ja
push
ficompl
mov
jp
push
adc
push
lds
cltd
dec
dec
mov
xor
add
cmp
mov
sbb
push
hlt
fisttps
push
call
pop
pop
addl
aaa
fisttpll
cmp
scas
loope
shll
mov
xchg
jg
push
mov
mov
push
mov
dec
and
sub
add
into
mov
insb
pop
sub
push
rcll
cld
call
test
mov
sbb
jo
inc
or
pop
ret
jmp
in
cmp
mov
clc
lret
inc
cmp
pusha
stos
mov
fisubl
dec
cltd
fildl
es
mov
ret
mov
dec
iret
xor
pop
xchg
or
jmp
inc
mov
loope
sub
push
and
bound
mov
mov
and
or
lea
jp
jecxz
cmp
test
inc
jo
outsb
out
je
mov
loopne
lret
aas
jp
cs
mov
into
or
nop
add
mov
mov
out
push
add
sub
pop
push
push
mov
sub
lods
push
mov
nop
je
arpl
mov
nop
pop
inc
sahf
subb
mulb
xchg
imul
pop
push
adc
sub
mov
test
aas
into
xor
nop
inc
daa
pop
cwtl
and
dec
push
movsl
icebp
test
fisubs
xchg
cli
push
stos
f2xm1
xlat
xchg
sar
mov
mov
in
outsb
mov
ret
adcl
les
sub
inc
add
inc
aad
aam
xor
clc
out
ret
int3
movsl
int3
shll
mov
adc
jle
out
stos
sbb
add
mov
loope
dec
mov
call
out
subb
cs
cmp
lea
lret
ficomps
nop
pusha
clc
inc
cwtl
fdivrl
cwtl
xchg
add
inc
adc
les
fwait
add
jg
xchg
xor
arpl
cmp
out
data16
adc
sub
push
subl
jle
xor
jl
xchg
addr16
loop
andb
cmp
into
orl
xor
scas
cmp
scas
mov
rolb
lods
mov
and
xor
jg
loopne
les
idivb
fsubs
call
jmp
sbb
int3
lods
inc
data16
mov
lds
insb
mov
and
mov
mov
push
cld
mov
mov
push
movsb
xchg
sbb
xchg
cmp
out
jmp
push
cli
jg
bound
rcl
push
add
jg
hlt
outsl
pop
xchg
out
cld
es
sbb
add
inc
add
pop
xchg
outsl
mov
lret
nop
movsb
out
shlb
enter
mov
pusha
add
pop
mov
mov
pop
xchg
push
rcr
adc
push
in
or
jo
pop
add
xor
jl
push
repz
pop
and
add
mov
fidivrs
jg
popf
inc
and
add
sub
fs
cmp
sbb
sub
cmp
fildl
sbb
test
pop
and
dec
outsb
rcrb
sub
into
fstps
lock
lcall
cmp
in
cmp
sti
bsf
pop
arpl
pop
repnz
rolb
mov
xchg
push
or
imul
mov
stos
jne
cmp
or
push
mov
inc
jb
test
pop
push
add
add
fnstsw
cmc
insl
add
mov
ss
fcoml
cli
cwtl
xchg
dec
lea
movsb
incl
push
mov
es
jmp
lahf
and
fdivl
push
and
subb
push
js
xchg
or
push
popa
ret
call
mov
mov
and
add
sub
lods
inc
outsl
or
cmp
xor
sti
and
xchg
jge
or
std
in
xchg
inc
add
pop
adc
fisubrs
push
mov
sti
xchg
loopne
mov
jp
test
adc
ss
add
push
pusha
mov
popf
fdivrs
sbb
dec
test
xor
stc
add
shlb
or
into
or
cmp
push
cld
adc
fisubl
ljmp
pusha
jns
dec
in
pop
add
add
sbbb
cld
adc
add
ret
imul
xorl
xlat
std
dec
and
inc
nop
add
add
jne
popf
mov
jb
xchg
add
add
dec
scas
lock
dec
shll
adc
jbe
inc
out
pop
fistps
sub
inc
and
in
pusha
mov
ret
ret
ret
je
dec
add
sbb
loop
xor
mov
addl
test
mov
mov
jae
imulb
sbb
mov
mov
mov
dec
lock
mov
les
popa
cli
ljmp
cld
adc
mov
aam
das
hlt
jo
in
movsl
insl
xor
shrb
into
test
call
dec
sbb
in
mov
daa
push
push
sub
sbb
ret
imul
or
bound
xchg
mov
cmpsb
cmovle
repnz
mov
sub
push
data16
lods
not
xchg
mov
test
adc
lods
mov
xor
addl
mov
mov
jg
dec
and
test
fiaddl
out
add
outsb
cmpsb
push
xchg
pop
xchg
mov
test
rcr
sub
sub
add
stos
cmp
xor
nop
jecxz
lods
sbb
loop
jecxz
lea
jle
mov
sub
gs
mov
lods
ret
rorl
std
and
pop
push
jecxz
rcrb
in
je
cmp
shlb
lret
add
call
inc
popf
int3
neg
cmc
push
sahf
mov
jno
mov
mov
xchg
push
mov
icebp
jmp
push
pop
adc
lret
data16
nop
test
xor
aas
add
jbe
cld
xchg
lcall
scas
cs
inc
in
ja
push
push
insl
rclb
push
push
cli
ja
movb
mov
arpl
push
mov
xchg
add
fsubs
imul
mov
mov
mov
push
sbb
xchg
sarb
pusha
mov
xor
xchg
push
dec
daa
addr16
push
inc
mov
or
ss
mov
and
fsts
mov
loop
or
loop
shrl
mov
pop
add
sbbb
inc
and
shrb
jecxz
fsubp
pop
aam
add
fs
sbb
mov
or
hlt
lods
lock
cld
jecxz
fsubrs
add
adc
decb
add
xchg
scas
jl
jnp
xor
push
push
inc
and
push
adcl
mov
fstp
xchg
test
or
mov
add
mov
call
loopne
mov
insl
call
jo
or
cmp
dec
xor
or
lock
cmp
mov
push
sbb
std
pop
pop
and
adc
cmp
xchg
sub
ja
dec
pop
cmpsb
cmp
aam
mov
mov
xor
pop
in
js
xor
rorl
js
ja
xchg
add
lret
xor
aam
jmp
jbe
add
outsb
xchg
loop
sar
sub
adc
jecxz
and
adc
jnp
ret
adc
cmp
push
ret
inc
jle
cmp
cltd
xorl
enter
loop
sbbb
add
out
cmc
fwait
or
cmp
nop
mov
inc
popa
add
lahf
jnp
sub
mov
or
scas
orb
insb
sbb
cmp
mov
scas
fists
cli
cmpsb
movsl
test
xchg
js
and
push
test
fbstp
loopne
out
bound
cltd
jo
lret
push
loope
add
jecxz
jle
fisubrs
adc
xor
jge
push
insb
push
sub
inc
sub
cmp
pop
sub
sbb
divb
les
popa
sbb
sbb
push
cmpb
mov
jl
sub
jl
iret
mov
lock
lds
sub
das
push
sub
and
push
push
add
add
mov
jo
jecxz
sub
pusha
sub
and
dec
inc
mov
mov
push
leave
inc
cmp
jo
in
mov
cwtl
pop
sbbb
sub
jns
push
decl
stos
call
sbb
push
cld
dec
xorb
into
mov
sbb
or
sub
call
mov
xchg
push
lock
and
push
and
mov
jl
dec
shrb
cmc
sub
addr16
or
jno
sbb
xchg
lds
dec
xor
cmp
jae
lcall
cwtl
loope
sbb
loope
out
inc
fnstcw
and
nop
inc
push
inc
mov
loop
dec
pop
lock
aam
mov
shlb
enter
iret
les
sbb
push
test
cld
jbe
xor
sbbb
cwtl
addl
add
mov
cmp
test
dec
jge
and
sub
arpl
xchg
fs
pop
sahf
xor
sbb
fstl
dec
adc
inc
pop
add
push
sub
adc
je
aaa
xchg
sub
xchg
addr16
dec
xchg
add
jg
enter
inc
cmpb
mov
call
jbe
jmp
gs
or
adc
xor
pop
mov
push
sub
aas
out
pop
rclb
add
clc
out
jle
in
jecxz
xchg
push
push
cmp
jp
push
xor
ud0
lcall
mov
dec
mov
orl
jp
add
pop
aam
je
or
mov
ret
mov
je
mov
dec
cwtl
mov
xchg
test
adc
pop
mov
xor
insb
ljmp
in
adcl
push
and
sahf
push
cmp
loopne
pop
sbb
test
xor
or
or
out
add
push
cmp
xor
mov
mov
inc
lock
call
dec
movsl
cltd
sub
mov
xor
cld
jecxz
ljmp
fwait
mov
adc
rcll
mov
and
dec
xor
inc
push
fisttps
add
push
std
fbld
mov
mov
int3
fdivrs
pop
push
test
ljmp
dec
jne
add
inc
call
xchg
inc
sub
rcrb
cli
popa
xor
mov
adcl
out
mov
test
ret
jecxz
pop
add
and
cld
or
fists
loope
mov
adc
dec
mov
pop
sbb
cmpsl
jo
mov
dec
mov
pop
mov
leave
inc
fs
aas
ret
cmp
sbbl
cli
jg
aad
scas
out
cmp
xor
mov
pop
ds
aas
adc
roll
popa
int3
data16
xchg
imul
sarl
add
pusha
insl
ret
bswap
sub
or
and
andb
xor
push
inc
jle
movsl
pop
mov
add
mov
jbe
xchg
mov
mov
lcall
fstps
and
dec
pop
and
lret
pop
clc
call
loope
inc
movsb
cmpsb
addb
jl
mov
daa
push
aam
push
mov
es
jge
push
loopne
push
aas
and
add
aas
xor
xchg
out
and
cmp
jle
in
enter
xchg
add
bound
outsl
add
clc
incl
and
sub
and
push
inc
pop
lods
mov
int3
das
xchg
fnstsw
test
adc
shll
stc
incb
mov
stos
jg
adc
aad
ret
push
mov
mov
push
aaa
mov
cmp
pop
lea
xor
sbb
pop
ss
cmpb
mov
jnp
jle
jmp
and
cs
sub
sub
lds
inc
fcoms
push
jecxz
lcall
sbb
out
dec
or
test
fsubrp
mov
push
xchg
incl
adc
stos
add
cld
push
sti
adc
jbe
push
nop
push
xchg
out
push
mov
notb
add
pop
fisttpl
pop
loop
iret
add
jb
pusha
nop
jo
loope
ds
push
cwtl
adc
add
xor
loope
rcr
mov
sbb
rorb
in
sbb
clc
inc
cmp
xchg
cmp
cli
add
rolb
xchg
push
pushl
mov
xor
pop
mov
je
sub
mov
sbb
mov
fsubrl
sbb
popa
jnp
lcall
mov
sub
cld
sbb
jns
sub
pop
cs
push
decl
push
cmp
cmp
in
outsl
outsb
or
mov
add
jno
cmp
lahf
das
adc
popf
mov
icebp
push
ret
xor
pop
aas
ret
mov
popa
inc
xchg
mov
pop
insb
movsl
sbb
dec
sahf
ja
inc
inc
cld
xchg
cmc
adc
mov
call
pop
xor
rorb
jle
add
push
pop
les
mov
push
loope
shr
aas
stc
mov
mov
dec
sub
std
adc
test
or
js
in
cltd
cmp
lods
subb
in
jle
loopne
hlt
mov
sbb
xchg
mov
and
xchg
xchg
stos
imul
fwait
and
push
adc
es
mov
fs
data16
cli
test
insl
ja
pop
sub
fdivs
xchg
jge
out
aam
or
jle
insb
scas
cmp
dec
stos
stos
lahf
cs
push
aam
jp
movsb
dec
fisttps
lock
xchg
dec
push
mov
cmp
js
add
push
jg
notb
in
ja
pop
fmuls
inc
lds
cmp
dec
ss
add
fmuls
lea
or
mov
daa
cmpsb
mov
call
in
and
xchg
jno
lock
pushf
sub
push
cmp
pop
incb
sub
ds
mov
shr
pushf
lds
mov
push
push
inc
sbbb
setbe
lods
dec
inc
jb
movsb
xor
jge
lds
xchg
mov
bound
and
lcall
adc
mov
ds
cmc
faddl
ficomps
sub
mov
mov
shl
and
into
and
xor
jl
jg
cli
jno
cld
cmp
dec
lods
xchg
cmp
aaa
xor
sarl
in
inc
mov
push
int3
sahf
addr16
cmp
rcrl
lock
push
xor
cli
fs
sbb
aas
ret
je
hlt
jle
mov
push
arpl
push
clc
dec
aad
in
popf
and
cmp
loopne
lret
enter
inc
pop
inc
ret
xchg
sub
sub
loop
movsb
pushf
push
in
dec
push
punpckhbw
dec
outsb
jle
add
and
lods
inc
arpl
sahf
push
in
imul
mov
ljmp
ja
jecxz
std
gs
jmp
scas
mov
pop
add
xchg
das
or
pop
lods
aam
mov
punpckldq
mov
fucomip
mov
sbb
stc
incb
lcall
scas
jno
mov
test
cmp
dec
xor
mov
pop
jb
jmp
xor
in
adc
loope
adc
hlt
pop
sub
lods
dec
adc
or
fildll
rol
inc
lods
cmp
mov
add
jne
loop
pop
sahf
adc
xor
mov
in
and
data16
mov
add
or
sarb
scas
test
testb
fidivrs
xchg
xor
pop
sbb
inc
aad
sahf
sub
inc
cmp
pop
lods
movsb
add
cld
stos
adc
sbb
sub
add
and
cld
xchg
add
jecxz
push
push
sub
lcall
and
and
push
add
mov
test
jb
inc
rcl
loopne
lret
lock
fidivs
sub
ljmp
mov
into
mov
xor
aam
ja
cmp
cli
jle
adc
iret
dec
out
mov
or
jo
lret
loope
subl
xor
outsl
push
inc
mov
mov
mov
shrl
repnz
mov
mov
cmpsb
xchg
lods
mov
mov
mov
or
pop
adc
or
cld
mov
pop
ficomps
test
cmpl
ljmp
pop
outsb
cmp
push
mov
and
lcall
pop
ss
imul
js
push
or
xchg
dec
and
lcall
repnz
add
lcall
subb
in
in
xchg
xor
bound
cmp
repnz
or
call
fistpll
movlhps
mov
add
int
pushf
mov
or
fstpl
fs
dec
push
lds
pop
loope
loope
jle
je
ds
add
mov
jns
mov
push
pop
out
cmp
and
std
add
cmpl
inc
pop
sbbl
popa
insl
sbb
mov
not
lods
adc
dec
cli
arpl
fdivrs
sahf
js
in
push
ljmp
pop
pop
pushf
scas
int3
je
incb
loopne
jge
dec
jle
cld
test
fwait
sbb
sbb
dec
add
adc
cs
xchg
push
lcall
lds
mov
bound
sbb
or
sub
icebp
pop
test
mov
lds
repnz
test
je
mov
xor
rorl
add
stos
fldl
and
lret
fnstenv
test
xor
sahf
add
mov
out
xchg
mov
ss
push
inc
add
jne
cmpsb
in
xchg
dec
clc
mov
xchg
scas
les
cmp
push
xlat
inc
adc
ljmp
mov
pop
fs
push
mov
cmc
in
sti
jbe
mov
nop
jg
jle
push
push
in
pop
xor
jp
push
xor
lahf
in
ja
adcb
fs
dec
fmull
xchg
adc
pusha
push
push
bound
sub
enter
pop
std
cmp
mov
lea
sahf
pop
nop
mov
out
std
xchg
mov
xchg
aad
ljmp
pop
adc
shl
and
add
pop
inc
hlt
in
pop
fisttpll
aad
jge
popf
dec
dec
adc
out
jmp
cmp
jge
push
pop
lock
push
sbb
xor
stc
cs
sti
outsb
loopne
inc
push
jecxz
mov
enter
or
mov
sbb
jb
add
ds
sub
xchg
mov
lock
lret
mov
xchg
inc
out
jp
insb
xor
mov
mov
jmp
xchg
out
std
sub
cltd
pop
outsb
scas
adc
xchg
or
xor
cmpsl
gs
iret
push
bound
mov
jl
jg
and
or
jp
inc
adc
jmp
fwait
ja
sub
fadds
xchg
xchg
sub
mov
rolb
fimuls
aaa
fnsave
or
mov
push
add
outsb
clc
push
les
and
lahf
cwtl
cld
out
in
out
adc
call
sbb
lock
movsb
out
jne
andb
adc
pop
mov
jg
cmp
out
mov
add
mov
mov
mov
nop
jo
add
dec
clc
dec
or
outsb
jb
xor
or
jno
std
push
adc
es
push
xor
pusha
add
nop
jg
mov
cwtl
and
and
mov
mov
dec
pop
out
inc
ret
addb
and
xchg
sbb
ja
cmc
pop
mull
aam
push
aas
push
jo
mov
mov
mov
call
and
or
ds
call
push
add
faddl
and
mov
std
or
cmpsb
sarb
pusha
or
cltd
dec
test
outsl
lds
pop
int3
jae
fadd
adc
movsl
insb
and
push
xor
je
fdivp
and
testl
adc
inc
es
in
jns
and
sub
or
inc
ds
cmc
xor
push
pop
inc
push
lods
and
fbld
push
pop
call
jmp
push
jae
lret
inc
xchg
jno
xchg
fs
das
push
js
sti
add
jae
sbb
xorl
es
adc
mulb
test
jmp
arpl
iret
aaa
and
push
xchg
jmp
dec
xchg
add
scas
insb
jbe
lds
jnp
adc
pop
decb
ljmp
dec
out
xchg
in
stos
call
sub
and
shlb
inc
push
pop
fdivl
push
std
add
adc
sbb
pop
jle
mov
inc
mov
xor
pop
sub
push
sbb
lods
inc
loop
mov
sub
loop
aam
nop
mov
andb
sbb
iret
xor
push
inc
jge
rorb
inc
sahf
pop
lock
test
data16
in
and
cwtl
call
adc
and
or
xor
jg
xchg
xchg
shrb
sbb
or
pop
icebp
xchg
xor
shll
lcall
or
lea
testb
jmp
call
je
ret
outsl
mov
xchg
sub
cmp
push
test
mov
sbb
sbb
fs
enter
decb
cmp
push
push
iret
hlt
and
mov
orl
cli
sub
cmpsb
inc
xlat
pop
mov
fistl
xchg
clc
negb
cmp
add
inc
cmp
loope
sbb
lock
nop
mov
ret
mov
cmc
pushf
jp
lock
xor
cmp
or
popf
jg
aam
cmp
sub
in
data16
popf
push
out
clc
adc
sub
dec
pop
std
into
push
push
sahf
xlat
push
stos
in
mov
and
mov
rol
decl
pop
mov
push
dec
mov
out
and
xchg
mov
pop
out
jle
mov
push
dec
push
push
pop
dec
call
sti
std
lret
inc
xlat
fnstsw
dec
out
xchg
add
mov
push
push
fisttps
cmpsb
fisttps
and
lret
sti
adc
daa
call
inc
insb
cmp
int3
push
jle
test
bound
add
xor
inc
push
mov
test
lock
test
lret
mov
fcoms
fnsave
mov
sarl
pusha
adc
push
sbb
pop
sbb
fisttps
movsb
subb
test
lds
pusha
daa
cmp
out
sbb
gs
shlb
sub
dec
int3
add
je
ds
shrb
fwait
adc
es
out
stc
fxch
mov
inc
loop
lret
mov
fcom
and
test
sub
inc
xchg
lods
movsl
notb
repnz
loope
inc
sti
enter
movsl
and
mov
adc
imul
sbb
or
sbb
outsb
mov
inc
mov
sub
es
es
ds
clc
test
ror
mov
mov
shr
pop
push
leave
xchg
add
sahf
in
mov
xor
fldl
jle
mov
cmpsl
sub
jl
pop
icebp
das
les
loopne
mov
bound
jl
fidivs
jbe
inc
dec
cmp
lods
sbb
sbb
sbb
jnp
jae
jmp
out
cmc
adc
cmp
or
dec
pop
leave
xchg
inc
sub
movsb
rolb
call
ljmp
call
mov
fidivrs
insb
adc
je
lcall
jmp
rorb
sub
dec
test
mov
ljmp
inc
mov
inc
dec
aaa
insl
mov
daa
mov
nop
pushl
loop
inc
push
pop
or
jmp
mov
mov
ret
mov
out
cli
push
adc
fs
hlt
mov
pop
cmp
push
rclb
jle
ret
and
pop
icebp
das
or
fsubl
fnstenv
adc
xchg
jecxz
and
jecxz
add
inc
or
jmp
mov
aaa
adc
aas
aam
jl
sub
add
push
in
pop
push
hlt
sub
xor
daa
xchg
into
pop
pop
cmp
fnstenv
dec
mov
pop
dec
les
sub
inc
nop
into
lret
pop
repz
in
dec
or
loopne
adc
and
mov
scas
loop
add
adc
icebp
add
clc
scas
cli
and
adc
cmovbe
sub
imul
inc
jle
out
clc
inc
xchg
and
dec
popf
leave
mov
mov
js
pop
ljmp
mov
loop
roll
in
lods
cmpsb
mov
lods
jle
dec
icebp
fwait
sub
mov
fistpll
inc
push
add
pushf
mov
stos
push
test
pop
mov
pop
adc
subb
add
pop
xchg
jno
call
rcr
je
rorb
adc
add
out
xor
imul
or
mov
test
iret
aad
mov
pop
stos
lock
mov
xchg
pop
insb
psraw
or
cld
clc
sbb
push
outsl
cmp
sub
jecxz
cmp
pushf
bound
fidivrs
out
sbb
cmp
push
sbb
dec
add
lods
ja
cld
fs
cmpsl
pop
std
pop
mov
mov
mov
ret
mov
dec
lcall
mov
fdivl
gs
decb
adc
fwait
cmp
or
jecxz
pusha
mov
inc
fistl
jge
rcrb
jge
pushf
push
dec
push
scas
and
add
jo
lea
cmc
call
xor
aaa
and
stos
mov
addl
sbb
movsb
orb
adc
push
jge
in
mov
jle
pusha
das
lods
outsl
inc
pop
fcoms
mov
push
loopne
inc
ljmp
jnp
and
add
lods
rorl
mov
enter
lock
cmp
xor
or
aam
dec
mov
das
cwtl
cmp
movsl
push
insb
orb
ret
cmp
cmp
hlt
pop
xor
ret
loopne
fcmovbe
push
add
dec
nop
jo
adc
shrd
and
mov
push
mov
add
inc
fnstsw
outsl
adc
repnz
fcmovnb
inc
adc
movsb
inc
out
mov
sub
adc
cli
and
xor
mov
dec
push
and
fldt
fbld
loopne
ljmp
xor
pop
hlt
into
or
loop
push
nop
pop
repnz
test
pushl
mov
lea
int
mov
mov
mov
test
inc
cmp
mov
xor
enter
xchg
mov
sbb
je
dec
add
cmp
mov
loop
or
aaa
loopne
mov
push
lds
inc
jmp
std
clc
sub
adc
mov
imul
clc
add
inc
fisubrl
in
push
push
lods
pop
ret
cs
and
inc
test
jl
xor
add
push
xor
pop
sub
ljmp
adc
xorb
outsl
or
lock
mov
scas
out
dec
fadds
fcmovu
jge
mov
shll
lds
mov
xor
jne
je
inc
add
or
cs
cmp
cmp
test
cmpl
inc
ret
arpl
test
call
dec
add
shrl
cli
mov
mov
aaa
cld
mov
fisubs
cs
pusha
mov
add
out
fmul
and
into
icebp
jmp
mov
inc
into
sub
inc
faddl
adc
std
addl
push
mov
add
bound
lahf
jb
dec
jmp
mov
jecxz
cli
insb
push
sbb
and
cmp
sbb
les
push
and
jno
add
pop
adcl
jp
repz
xor
mov
inc
testb
mov
addb
orb
add
push
sbb
ss
in
add
mov
dec
sub
daa
cmpsb
cmp
cmp
icebp
or
cmpsb
xchg
out
es
sub
in
add
inc
fcomp
sahf
fidivrl
mov
add
cmp
push
inc
push
sub
shll
push
faddl
mov
imul
mov
mov
sbb
dec
mov
out
cmp
dec
arpl
ljmp
mov
test
push
adc
xchg
repz
aas
jns
ljmp
aam
adc
xchg
test
jmp
scas
sar
cmpsl
mov
rcl
add
xchg
and
pop
mov
fistpl
mov
and
add
in
jg
and
or
sbb
icebp
jne
leave
cmp
hlt
aad
sub
test
loop
sbb
ljmp
gs
in
aaa
push
std
and
xchg
subl
cmpsb
or
cmc
xor
fidivl
or
aaa
push
pop
inc
mov
mov
nopl
jae
fcomip
xchg
ret
jo
or
inc
dec
in
loop
xor
push
mov
icebp
sub
je
lret
sbb
xor
xchg
lcall
movzbl
pushf
pop
aaa
xor
in
mov
xchg
clc
mov
mov
mov
rol
xchg
cltd
cmpsb
aas
fdivrp
lea
push
add
jns
clc
mov
mov
ss
push
sub
xchg
push
xor
fistps
mov
push
sbb
js
adcl
sub
add
xchg
std
gs
mov
inc
adc
mov
pop
xchg
cld
xchg
xor
call
or
adc
push
inc
imul
push
call
pop
shl
je
or
and
mov
push
dec
das
pop
dec
mov
cld
jg
aam
scas
out
cltd
sub
sub
and
dec
repnz
mov
mov
push
pushf
in
push
xchg
jmp
ret
fcomps
nop
adc
test
mov
or
mov
push
mov
aas
into
stc
xorb
push
xchg
clc
les
mov
xchg
adc
lock
mov
sbb
sbb
dec
push
lret
push
incb
incl
dec
movsl
push
mov
mov
add
or
cld
mov
fsubrs
je
jl
insb
and
cmc
mov
push
roll
aam
cld
or
jg
mov
push
lock
jbe
into
ret
mov
xchg
and
jg
dec
adc
mov
dec
pop
mov
clc
out
scas
adc
push
add
mov
jmp
adc
test
jno
sub
stos
ljmp
or
test
fistps
pop
xchg
test
test
test
out
jl
xchg
mov
fstps
es
clc
out
or
iret
jbe
adc
sti
mov
push
sbb
and
gs
jg
mov
cmp
xorl
inc
cmpsl
mov
popf
inc
inc
adc
hlt
rol
mov
push
pop
jp
popf
mov
adc
lods
dec
add
inc
mov
rclb
add
call
lahf
mov
push
dec
mov
sti
sti
add
test
pusha
inc
sysenter
inc
jg
mov
adc
pop
mov
lock
es
in
pop
mov
aam
gs
in
andb
push
daa
popa
enter
sbb
mov
shrl
cld
lret
cmpsb
stos
push
fwait
pop
adc
push
addb
ljmp
sbb
pushf
cmpsb
cs
in
movsl
xor
and
push
fbld
mov
imul
add
leave
inc
stc
fwait
mov
enter
or
lret
cli
sbb
cld
xchg
sbb
loop
adc
repnz
ljmp
jo
dec
push
and
or
test
mov
add
sahf
inc
add
sbb
adc
inc
or
int
adc
fiaddl
sbb
jbe
mov
andb
imul
push
fsubrs
and
xor
xor
popf
es
fildll
push
sahf
and
clc
mov
test
mov
repnz
out
cli
aad
sub
fbstp
test
cmp
xchg
inc
subl
inc
repz
int
mov
and
daa
jge
inc
push
push
dec
lock
aam
cmp
ss
mov
mov
jo
popl
dec
les
movsb
loop
adc
xor
rorl
pushl
pop
popa
xchg
stos
pop
jecxz
inc
shlb
hlt
push
push
mov
in
dec
imulb
push
and
fisttpl
ficoms
or
sub
ljmp
mov
std
bound
test
ret
icebp
fcomip
jg
mov
out
pop
leave
inc
idivb
add
andb
xchg
sahf
mov
pop
les
mov
lcall
or
add
xlat
pop
and
stos
mov
push
jge
sbb
sbb
dec
xor
mov
mov
loopne
lcall
mov
cmpb
out
xchg
jae
sub
cltd
pop
sahf
cmp
ja
out
adc
mov
xchg
shlb
dec
test
adc
jmp
xchg
mov
cmp
test
iret
add
not
faddp
ss
imul
test
testb
loopne
nop
rorb
sub
cmp
xchg
je
fprem
pop
jecxz
jl
dec
ds
and
mov
sbb
add
pop
xor
cwtl
xlat
mov
nop
aas
or
pop
add
and
dec
pop
imul
clc
mov
ret
cmp
xor
pause
sub
inc
mov
fisubs
cmp
jns
fisttps
push
jl
jo
shlb
decb
push
or
mov
mov
pop
mov
push
push
or
ljmp
loope
jle
mov
xlat
inc
loop
pushf
ret
mov
lods
push
data16
sarb
mull
pusha
push
push
jg
push
adc
iret
xlat
stos
mov
adc
cwtl
popf
push
jbe
mov
outsb
xor
adc
and
jb
shll
pusha
dec
clc
nopl
jae
xchg
inc
cwtl
jo
loopne
xchg
stos
push
ds
call
pmaxsw
cld
or
push
mov
shr
inc
std
pop
divb
jmp
bound
outsb
inc
shlb
into
jp
rol
aas
xchg
fdivrl
mov
push
push
push
cwtl
dec
cmp
push
jg
stos
add
rcrb
mov
add
pop
or
mov
aad
sbb
out
lret
xchg
popf
test
mov
je
enter
jle
arpl
or
sbb
insl
dec
or
in
nop
punpckldq
mov
push
dec
mov
mov
in
flds
or
fmul
fmuls
jge
loope
xor
or
pop
xor
and
cmp
and
adc
mov
inc
sbb
mov
repnz
xchg
xorl
fsubrs
xor
mov
push
pop
add
mull
lock
adc
stos
icebp
push
mov
sbbb
icebp
pop
sar
push
sahf
rorb
sbb
mov
mov
dec
mov
or
popa
cmpsl
adc
add
dec
cmp
js
xor
int3
in
mov
mov
not
cmp
push
inc
les
popf
les
add
decl
mov
les
into
pop
add
dec
repnz
cmp
cmp
adc
hlt
sub
pop
lahf
adc
jmp
mov
cmp
add
shlb
enter
daa
jl
pushf
xor
aas
xor
ljmp
test
fisttps
xchg
hlt
test
dec
mov
test
adc
ja
cld
jecxz
aaa
dec
testb
mov
xor
or
aas
push
stos
into
inc
push
xor
pushf
push
cmp
pop
std
iret
cmp
or
add
and
scas
and
jl
movsl
pop
sbb
add
decl
or
inc
mov
ret
jl
and
mov
fdivrp
andl
lock
jno
inc
xchg
push
movsl
mov
push
popf
fcomps
mov
adc
add
or
cs
pop
es
mov
sbb
aam
fistpl
adc
jo
mov
lods
adc
push
sub
push
add
lcall
popf
jle
pop
out
inc
add
lahf
push
daa
adc
mov
shlb
or
addb
stos
roll
pop
icebp
dec
xchg
loop
push
lods
jnp
in
pop
loope
pop
fistl
lret
cmpl
lock
popa
cmpsb
in
cmp
cli
scas
sarl
orb
movswl
in
rorb
or
sub
pop
or
xor
repnz
nop
cwtl
clc
sub
xchg
stc
int
arpl
or
mov
xchg
inc
incb
xor
rcpps
mov
pop
ficomps
mov
mov
imull
xchg
sub
lcall
jae
or
mov
jae
es
ljmp
dec
or
jge
frstor
inc
push
shll
dec
cli
and
mov
mov
shrb
mov
incl
cs
sbb
loopne
addl
mov
sub
dec
fstpt
repnz
mov
add
sub
lock
jle
mov
leave
add
les
pop
test
lods
push
dec
push
es
movsl
add
popa
push
lock
pusha
popf
inc
cli
stos
or
stos
jle
sahf
xorb
movsl
jo
js
lcall
dec
test
mov
enter
sub
xorb
mov
mov
push
pop
ficomps
std
in
or
and
mov
repz
scas
shrb
or
hlt
call
sbb
adc
push
cmp
add
adc
mov
xchg
pop
sub
or
jg
push
popf
xor
adc
pop
add
hlt
and
adc
mov
adc
or
and
sub
stos
mov
inc
mov
out
sbb
das
stos
ja
outsb
push
mov
outsw
clc
and
rclb
rorl
lock
into
fmull
mov
inc
sub
mov
xchg
shr
nop
jo
mov
xchg
add
xchg
mov
sub
mov
rol
lods
mov
rolb
fsts
shrl
push
jno
adc
jg
mov
cmp
push
inc
pop
sbb
push
bound
xchg
push
jp
lods
dec
xchg
pop
xchg
pusha
cwtl
les
push
rcrl
cmp
pushf
mov
xchg
icebp
stos
or
jbe
xor
cmp
mov
shl
repnz
andb
add
hlt
lea
es
xchg
and
or
push
xchg
mov
test
and
enter
or
and
popf
cs
push
les
imul
cmpsl
into
iret
and
pop
mov
jns
sub
cmc
add
push
mov
mov
mov
dec
aam
mov
mov
incl
xchg
mov
pop
pop
push
or
pop
clc
loopne
mov
psubsw
sahf
mov
mov
cld
lock
sbb
hlt
repnz
shlb
outsl
orb
lcall
ljmp
testl
inc
dec
rcrl
mov
call
popa
daa
dec
mov
rolb
pop
inc
sbb
sahf
and
push
clc
adcl
dec
dec
mov
pop
loopne
lds
mov
push
push
push
fs
cmp
cmpsb
enter
sbb
pop
push
mov
into
inc
mov
hlt
insb
mov
add
or
xor
int
incl
mov
mov
jbe
rorb
mov
mov
inc
sbb
cmp
frndint
dec
xor
push
sti
or
lock
add
rclb
out
push
mov
fbld
repnz
ret
je
cmp
sub
loop
jns
mov
decl
and
jne
pop
inc
in
lret
in
cmp
sbb
pushf
inc
cwtl
lret
mov
dec
or
mov
cmp
lret
jecxz
aas
sbb
or
mov
sbb
cmp
ljmp
dec
sub
subl
xchg
cli
aas
lds
sub
xor
cmp
cli
mov
in
loop
xor
movl
pop
sub
sbb
inc
dec
jno
cwtl
ss
loopne
xchg
sub
xchg
or
jp
popf
mov
or
fcoms
add
inc
sti
push
pop
mov
int3
or
mov
or
rorb
mov
nop
adc
adc
test
mov
mov
incl
mov
mov
inc
lds
pop
xor
sbb
mov
clc
mov
fstps
nop
out
cltd
nop
or
push
jo
test
pop
sub
add
lock
push
imul
ja
loopne
mov
testb
es
push
add
adc
mov
xchg
call
and
mov
inc
cwtl
rcrb
aad
das
push
fcoml
sbb
mov
pop
aaa
nop
fcomi
scas
ja
adc
loope
icebp
lea
jbe
and
jg
sbb
sub
out
or
jo
jne
loopne
nop
mov
push
dec
mov
add
cwtl
mov
adc
sub
pusha
cmp
mov
test
pop
cmp
xchg
imul
adc
incl
cld
shll
lock
enter
mov
mov
icebp
jmp
inc
jge
call
cmpsb
cmc
fidivl
shll
setnp
inc
push
pop
js
loope
push
lcall
fs
in
mov
inc
add
push
pop
clc
jmp
mov
roll
add
mov
jo
pop
ljmp
pop
mov
mov
dec
xchg
testb
pop
and
and
sbb
mov
adc
push
and
movsb
pop
sahf
idivl
lret
xchg
aas
xor
or
xor
xchg
adc
add
push
mov
jmp
lods
loopne
lcall
stos
fidivrl
push
and
call
sub
sbb
aaa
ljmp
movzbl
into
add
loop
fiadds
mov
cmpsb
inc
outsl
mov
push
pop
push
push
cmp
cmp
mov
mov
sub
sahf
sbb
jecxz
jle
jge
sub
incb
in
fisttps
shlb
incl
inc
mov
xchg
lahf
cmpsb
rcrb
stos
cmpb
fs
push
test
decb
or
cmp
push
and
push
std
inc
inc
sbb
sub
adc
jmp
and
gs
mov
hlt
mov
push
xor
in
fdivl
lods
add
hlt
mov
inc
mov
adc
out
repz
inc
int3
sub
dec
dec
sar
mov
mov
add
scas
push
nop
and
cmp
mov
pusha
subb
popf
mov
lods
push
mov
lods
scas
pop
lret
jg
std
out
lar
repz
adc
adc
sbb
mov
hlt
cmc
xchg
or
xor
scas
mov
or
test
popf
out
shrd
repz
mov
movsb
sub
jbe
cmp
stos
sub
push
and
add
bound
xorl
or
enter
loopne
mov
inc
mov
jb
push
ret
mov
sahf
sub
bound
out
mov
jbe
sbb
mov
outsl
mov
mov
push
aad
hlt
sbb
mov
out
or
sub
cmp
mov
adc
inc
loope
sbb
push
test
xlat
adc
sub
push
sub
insb
and
cwtl
cltd
add
test
mov
dec
cmp
push
mov
mov
jne
or
sbb
bts
fiaddl
cmc
lahf
hlt
add
hlt
decl
mov
cmp
mov
jmp
movsb
outsl
push
mov
xchg
data16
sbbb
push
mov
mov
pusha
ljmp
mov
and
data16
mov
test
arpl
cmc
push
push
std
jecxz
mov
or
inc
out
sub
mov
scas
push
jbe
inc
addb
filds
dec
push
xchg
push
and
js
call
push
mov
xchg
jne
add
inc
inc
movsb
pushf
jmp
push
ljmp
orb
imul
xchg
cs
xchg
hlt
mov
cmc
fucomip
ret
push
cmpsb
test
adc
repz
lock
mov
mov
cwtl
lcall
cmp
sbbl
mov
mov
es
xor
cld
fstpt
inc
int3
test
xor
push
sbbl
mov
fnstcw
mov
add
ss
cmp
and
cmp
mov
sub
test
insb
and
test
pop
sub
out
or
data16
or
and
call
sbb
icebp
push
daa
inc
sub
sbb
sti
addb
and
mov
call
jle
adc
fiaddl
mov
mov
leave
jp
and
sub
pop
mov
stos
lcall
ss
cmp
addb
int
mov
movsl
inc
push
sarl
push
js
jle
add
xor
ss
ror
xorb
xor
xchg
ret
push
cmpsb
jl
jne
push
or
inc
dec
cli
test
sarl
subb
xor
jbe
ss
call
pusha
test
sar
stos
ljmp
inc
es
mov
notl
aam
mov
add
mov
sti
arpl
lcall
out
mov
arpl
icebp
mov
xchg
pop
push
ret
arpl
adc
jbe
dec
cmp
mov
and
mov
fwait
out
jle
push
or
loopne
add
outsb
adc
xchg
popa
lret
out
rclb
pop
in
ljmp
stc
hlt
dec
jl
push
mov
shlb
push
jp
jo
add
or
or
push
push
aad
int3
in
lods
jne
cld
sbb
js
pop
inc
sbb
xlat
fbld
sahf
sub
adc
gs
fildl
lods
rolb
fcomip
or
adc
nop
lret
fs
mov
cmp
stos
sbb
cli
aad
pop
insb
pop
xchg
mov
or
dec
mov
jl
pop
dec
sub
aam
pop
add
je
lods
cld
addl
jl
cmp
pop
insl
test
mov
in
xchg
ljmp
dec
mov
lock
adc
pushf
repz
add
fldt
jno
jecxz
aad
ret
addb
adc
mov
fcompl
and
sub
arpl
jno
pop
in
mov
sub
call
test
xor
jo
adc
hlt
sahf
das
mov
das
jmp
mov
test
mov
pop
or
xchg
fsubrs
enter
movsl
mov
mov
mov
icebp
movl
clc
ss
jle
cmpb
jle
jmp
shll
push
inc
scas
rcrb
dec
aam
outsl
mov
push
cmp
mov
stos
pushf
mov
sbb
push
xchg
and
add
popa
andb
lcall
je
push
mov
dec
dec
dec
test
xchg
dec
jo
jb
push
jae
and
sarb
scas
mov
cld
cltd
mov
push
xchg
pop
fdivs
jo
sti
add
mov
push
mov
mov
xchg
out
mov
and
inc
les
dec
lds
mov
mov
ds
jne
arpl
lahf
pop
inc
adcl
push
ret
push
xor
enter
jmp
fnsave
cld
or
inc
rcr
int3
sbb
flds
dec
mov
mov
or
nop
push
inc
or
js
dec
out
mul
cmp
mov
mov
push
fsubs
push
mov
in
cli
imul
hlt
pop
nop
push
push
mov
insl
fmuls
gs
scas
lea
in
adc
pop
push
sub
push
jbe
or
aam
cwtl
insb
adc
pop
leave
subb
mov
xorb
mov
dec
fmuls
jg
cmp
add
out
lods
icebp
mov
lret
lret
in
push
pop
loope
inc
gs
ja
pop
mov
push
push
stos
lret
xchg
add
lret
aad
incb
pop
fs
add
and
sub
push
jmp
mov
aad
sbb
ja
mov
loop
les
sbb
mov
fldl
rclb
sbb
add
mov
es
mov
adc
rorb
mov
xor
inc
cld
xchg
aad
movsb
sbb
repnz
ss
xchg
lock
cmp
lcall
fidivl
pop
fists
add
clc
or
testb
pop
xchg
adc
nop
fnstsw
les
or
js
loopne
inc
sbb
push
inc
add
dec
fcomip
jg
dec
arpl
call
sti
test
lods
imul
or
in
das
inc
subl
imul
call
mov
sub
cmp
adc
xchg
inc
sbb
stos
mov
test
inc
aad
dec
fsubl
pushf
jg
stc
roll
data16
adc
inc
in
pop
repz
call
sub
sahf
pop
faddp
jmp
out
pop
call
adc
loopne
repnz
idiv
adc
loop
xor
or
push
clc
mov
dec
sub
jb
jns
lcall
loope
hlt
inc
sbb
mov
in
adc
lahf
mov
in
jno
adc
push
xchg
ja
dec
sbbb
mov
cmpsl
fldl
int
icebp
stc
pop
daa
stos
sub
add
inc
mov
out
mov
or
and
scas
mov
mov
incl
jge
setb
outsl
les
push
fdivrl
loopne
mov
jno
jg
sbb
mov
in
or
insl
cld
pop
dec
loope
movsb
and
dec
or
pop
xor
dec
aas
ss
imul
sbb
jl
sub
sub
pop
sbb
js
mov
idiv
xchg
es
incl
mov
pop
mov
dec
nop
dec
adc
add
add
idivl
or
jb
andl
stos
mov
inc
and
rorb
or
shlb
rolb
push
test
gs
lods
movzbl
xchg
or
jg
ja
mov
sti
pop
and
pop
test
icebp
mov
add
outsb
stc
mov
ret
jecxz
inc
mov
or
std
mov
ret
popf
dec
cld
xor
add
xchg
cld
push
ss
xchg
pop
int
aad
popa
loope
lret
in
push
lret
push
xchg
lcall
ss
jle
test
pop
sbb
inc
std
decl
xchg
stos
call
pop
fmuls
call
pop
mov
es
xor
mov
push
add
cli
push
mov
shrb
cwtl
js
mov
cld
icebp
jns
add
dec
ja
lret
lret
outsl
inc
push
sub
jp
fisubrl
clc
aad
pop
movsl
adc
mov
test
sub
jg
pop
pushf
dec
xchg
scas
incb
popf
fdivl
jg
and
shl
cmp
xor
imul
mov
lock
ficompl
call
movsl
pop
mov
cmp
push
es
xchg
and
int
test
add
mov
xor
pusha
shr
ret
cld
sbb
and
das
inc
repnz
and
pusha
scas
call
pushf
cmp
ds
mov
inc
ficompl
movsl
inc
mov
mov
fldcw
mov
push
adc
inc
pop
mov
cld
in
lods
mov
shrl
xor
loop
cmp
pop
call
shlb
add
test
stos
mov
inc
and
mov
loopne
jo
in
mov
and
jg
js
lods
mov
popa
add
jmp
push
push
xchg
adc
adc
mov
adc
xchg
mov
out
jmp
std
decl
ret
xor
mov
mov
sub
pop
int3
fisttpl
lods
orl
aad
push
jle
ret
fildll
popa
sbb
mov
mov
dec
pop
icebp
popa
into
add
notb
xor
cmp
push
insl
pop
add
mov
jle
jecxz
xchg
loope
iret
push
and
cmp
mov
std
adc
pop
sbb
shl
mov
stos
test
data16
lcall
push
subb
and
sar
or
shlb
pop
inc
aam
adc
mov
jg
fstl
outsb
xchg
mov
jnp
rclb
dec
and
pushf
fs
mov
cmc
loope
pop
cli
pusha
fisubrs
xchg
push
sbb
sarb
jle
xchg
aas
add
addr16
lea
pop
mov
mov
clc
daa
in
sub
mov
pushl
sbb
bound
mov
mov
mov
int3
push
xor
and
outsl
orb
fisttps
scas
sbb
out
jl
nop
and
sbbb
icebp
sbb
cli
lret
inc
das
clc
lcall
daa
jno
cmp
stc
and
aas
pop
sbb
stc
addr16
subb
dec
and
ret
outsl
cmp
mov
out
sub
xor
xchg
pop
out
incl
bound
cmp
adc
jecxz
js
filds
xchg
xchg
fimull
and
js
movsl
lock
icebp
pop
sbb
xor
mov
add
ljmp
and
or
subb
add
mov
adc
inc
cmp
cmc
test
imul
roll
wrmsr
push
test
cs
sbb
and
and
jp
mov
test
scas
push
decl
push
mulb
shl
pop
mov
push
lahf
inc
popa
inc
test
push
adc
mov
jg
out
mov
repz
lods
aam
arpl
push
fstpl
les
lcall
jb
call
add
and
sti
subl
enter
enter
inc
cli
cs
out
ja
add
mov
les
lock
push
xor
cwtl
or
popa
push
push
ds
push
sub
or
std
pusha
adc
int3
call
ss
ret
aad
mov
orb
xor
js
in
scas
ret
adcb
sti
arpl
adc
popf
pop
adc
mov
les
inc
push
lret
and
jge
push
std
sub
std
adc
xchg
and
mov
mov
hlt
outsb
push
ss
ss
or
clc
data16
pop
inc
popf
lock
mov
mov
test
jb
cs
sti
jmp
popf
add
mov
out
movsb
sbb
sbb
push
add
pop
adc
inc
xor
ljmp
cmpsl
sahf
or
jae
xor
mov
popa
movsl
int3
xor
pushf
fidivl
jg
outsl
outsl
push
xor
and
and
adc
dec
pop
movsl
mov
clc
inc
les
or
sbb
push
ret
fidivrs
test
xchg
fimull
subl
sbb
clc
add
or
in
jo
sub
lds
enter
jb
xor
sbb
lahf
or
xor
jecxz
adc
pop
clc
and
sti
or
and
cmpsb
xchg
ljmp
pop
adc
cmp
das
ljmp
push
pop
loop
enter
inc
add
xchg
mov
mov
jl
push
pop
clc
out
dec
cmp
adc
negb
aas
ljmp
fisubl
and
inc
sbb
mov
xor
jmp
and
cmp
scas
push
cmc
mov
cmp
sbb
in
fisttpl
dec
mov
and
dec
fs
adc
inc
les
sbb
and
xchg
aaa
adc
fiaddl
mov
mov
dec
ret
mov
into
sub
aad
nop
or
adc
pushf
fistps
push
shl
dec
xchg
aam
cli
fsubrs
cmpsb
lcall
and
sbb
push
movb
sbb
mov
cli
push
bound
nop
xorl
cli
sub
add
sub
mov
pop
pop
push
call
imul
sti
push
jg
aas
and
adc
xchg
and
mov
xor
mov
clc
dec
rolb
dec
lds
dec
push
inc
jecxz
dec
call
mov
mov
rcll
pop
xchg
loope
dec
sub
dec
mov
sub
push
clc
pop
and
jp
xchg
xchg
adc
pushf
or
mov
out
and
push
pop
add
push
xor
push
and
sub
mov
icebp
xor
adc
icebp
or
push
out
inc
jl
adc
push
and
dec
imul
adc
aas
stos
mov
inc
and
cmp
inc
pop
pusha
jecxz
sbb
cmpsb
mov
dec
out
out
xchg
mov
andl
cmc
add
or
iret
aam
push
cli
rcr
pushf
test
mov
mov
mov
mov
mov
scas
mov
dec
nop
jp
mov
test
or
mov
mov
inc
or
jmp
push
ja
sub
or
xor
jg
lea
shll
je
add
scas
mov
ret
jo
push
bound
scas
mov
jno
mov
sub
and
loope
movsb
inc
mov
sbb
dec
mull
jge
popa
mov
push
cld
pop
pop
xchg
xor
jb
arpl
push
adc
mov
push
test
jecxz
int3
mov
mov
mov
movsb
jp
jecxz
in
filds
scas
and
je
repz
cmp
das
les
sub
or
popa
addl
insl
in
push
mov
pusha
sub
loopne
xchg
js
mov
icebp
int
cmp
ljmp
cmp
lods
add
pop
ret
mov
lret
test
jg
push
mov
dec
adc
mov
cmp
push
lock
jecxz
repnz
mov
addl
je
add
adc
xlat
adc
das
stos
sbb
dec
dec
neg
fs
pop
push
push
int3
loope
mov
mov
mov
mov
mov
fcom
or
mov
clc
int3
and
repz
out
sub
dec
xchg
insb
loopne
sbb
and
mov
lcall
dec
fmull
mov
add
call
dec
or
les
stos
loopne
jae
and
mov
cmp
std
cli
out
loope
incl
aam
add
enter
sahf
mov
scas
lds
clc
fs
stos
fsubr
inc
jg
or
jno
mov
adc
aad
inc
dec
push
ss
mov
repz
std
pop
or
sbb
loopne
mov
jge
jmp
sbb
jo
lock
push
adc
jg
ds
mov
pop
out
jne
imul
mov
pop
std
jbe
lock
pop
pusha
rcrb
shlb
aas
mov
mov
ret
ss
mov
xchg
pusha
fwait
or
sbb
mov
push
jns
cwtl
dec
mov
cld
rorb
xor
xor
inc
inc
outsl
push
pop
sub
adc
aam
jecxz
jns
xchg
jg
int3
lret
fdiv
popf
cli
and
mov
lds
fnstenv
aas
andl
xchg
cmp
add
lock
jo
mov
mov
sbb
fisubrs
mov
sbb
push
mov
out
push
ljmp
cwtl
or
mov
lock
xchg
loope
inc
or
xor
aam
insl
push
je
lcall
or
xor
sbb
sub
loope
mov
mov
cwtl
or
movsb
mov
add
xchg
add
in
cmp
ds
pusha
push
or
rorb
sbb
ficoml
xor
sbb
lock
lea
dec
mov
jne
out
mulb
rcr
lcall
sbb
pop
addl
mov
jbe
xchg
gs
adc
pop
scas
js
test
pop
adc
es
mov
dec
jle
out
test
stos
cld
sbb
cmp
pop
inc
pop
xchg
cli
cs
jg
fcomi
xchg
das
pop
lds
mov
xchg
xor
mov
aaa
cld
fstp
pop
scas
popf
je
inc
mov
cmp
pop
fistps
aas
imul
inc
leave
std
or
gs
xchg
pop
push
add
das
xorb
lock
add
decl
lods
dec
ss
and
adc
xchg
add
mov
jle
popa
add
xchg
test
stos
lcall
stos
lock
data16
mov
shlb
xchg
adc
or
push
call
push
xor
sbb
mov
ret
jl
dec
clc
mov
mov
es
mov
cli
cmp
or
add
test
push
inc
popa
lret
pop
or
fdiv
mov
std
nop
xchg
pop
sti
push
outsb
mov
orl
lds
and
add
mov
jp
lods
clc
nop
sbb
sbb
dec
jb
inc
mov
push
lods
adc
dec
pop
bound
call
and
incl
rcrl
mov
adc
fwait
push
loop
add
ror
mov
lcall
xor
mov
test
mov
outsl
adcb
bound
xchg
negl
call
adc
iret
push
out
rclb
pop
cltd
lock
mov
lret
and
inc
and
cmp
push
jecxz
xchg
ljmp
push
cmp
jmp
mov
mov
xor
push
popa
dec
mov
adc
cli
add
incl
fstpl
push
clc
sbb
add
xchg
lods
addb
push
push
inc
jbe
push
sbb
mov
aam
mov
pop
pop
push
rclb
cmpsb
jno
pop
incl
pusha
sbbl
mov
inc
inc
cmpb
inc
sbb
ja
std
gs
and
mov
mov
les
jl
or
jo
inc
xor
jns
incl
subb
hlt
jle
xor
movsb
lock
sub
mov
mov
andl
add
cltd
jno
jnp
mov
aaa
out
rolb
bound
or
loop
xchg
jnp
cli
push
dec
in
xlat
cmpsb
sbb
jl
adc
scas
clc
mov
fwait
add
add
add
pop
aam
pop
cmc
outsl
call
sub
push
das
pushf
sub
cwtl
and
lret
loop
ret
in
ljmp
test
push
push
push
mov
inc
dec
xor
xor
cmp
movsb
lods
mov
fwait
push
sbb
das
xchg
enter
fwait
out
fidivl
insl
roll
jmp
in
dec
push
cmp
in
or
ret
xlat
inc
movsb
mov
lods
pop
sarl
pop
jbe
hlt
outsb
and
cmp
and
call
decl
pusha
cli
jns
mov
inc
lcall
dec
scas
mov
cli
dec
mov
xorl
jne
das
sub
popf
xchg
enter
push
and
cli
pop
insl
mov
fists
adc
push
je
xchg
clc
mov
into
data16
push
call
fucomip
test
test
scas
xor
jl
int3
sub
in
ja
in
xorb
push
pusha
je,pt
push
inc
mov
jmp
inc
xor
jmp
push
mov
and
push
std
ljmp
in
adc
or
andb
sbb
mov
rcll
jecxz
jno
in
mov
add
stos
cwtl
adc
xor
adc
pop
and
sarb
or
mov
sub
pop
scas
push
pop
lcall
lods
sub
pusha
adc
xorb
adc
shl
pusha
in
inc
inc
mov
sbb
jbe
cmpsb
pop
or
lcall
andb
or
aam
daa
mov
mov
jmp
lret
mov
insb
neg
sub
sbb
outsl
cmp
push
sub
cmpsb
pop
pushl
outsb
les
lods
les
cltd
bound
mov
add
mov
and
in
rcll
pushf
das
xchg
jecxz
call
test
cmp
jl
inc
pushf
cld
and
leave
clc
mov
mov
mov
jbe
and
adc
jge
jbe
mov
loop
inc
add
push
stos
sbb
out
lock
shlb
ret
gs
xor
add
movsl
orb
mov
add
inc
push
adc
popa
ret
sub
lods
adc
fbstp
mov
js
mov
and
push
andb
mov
sbb
adc
pop
xchg
inc
sbb
lock
xor
mov
test
fs
test
mov
cmpsb
inc
es
add
push
mov
mov
sub
ja
adc
mov
aaa
dec
mov
std
movsb
add
jb
and
stos
sub
pop
mov
sub
push
cmp
shlb
mov
jo
push
ret
std
push
cltd
loope
inc
enter
mov
and
outsl
rcrb
bound
nop
cmp
mov
pusha
fs
fisttpl
cld
nop
cmpb
movsb
mov
call
clc
adc
sbb
fists
ljmp
ljmp
rorl
jl
jg
xchg
mov
insb
outsb
inc
ss
xchg
mov
sub
or
or
loop
and
xor
add
dec
add
push
xchg
add
fwait
add
es
aaa
lcall
and
loopne
or
outsb
fiadds
rolb
inc
add
sub
mov
ret
cmpsb
add
add
in
sbb
stos
push
fstps
mov
sbb
mov
or
ret
xor
pushf
mov
call
adc
je
mov
in
mov
ljmp
pop
scas
jno
adcl
add
nop
and
jge
ret
mov
scas
mov
cmp
fst
out
jp
imul
or
in
test
insb
mov
push
xor
or
sub
push
add
or
or
and
or
push
dec
jle
mov
push
push
and
push
push
roll
lds
cmp
ss
xacquire
lock
or
ret
push
jp
xorb
fistl
jb
xor
daa
shlb
scas
out
push
in
sbb
sbb
pusha
repz
and
jo
sbb
xor
and
sub
sub
adc
add
cld
aas
icebp
aas
call
sbb
cld
decb
pop
mull
test
sar
pusha
adc
adc
sub
aas
hlt
jmp
outsl
lahf
fmulp
arpl
in
test
les
cwtl
xchg
xor
jmp
mov
push
xchg
xchg
imul
or
jmp
cltd
mov
lods
mov
mov
test
cmp
inc
shl
je
mov
test
pop
incb
sti
dec
ja
js
filds
mov
test
mov
hlt
and
int
lock
add
outsb
xchg
fstp
mov
sub
jbe
leave
cmp
fwait
mov
adc
test
xor
aas
roll
sub
test
enter
stc
mov
mov
push
addb
les
mov
sub
sbbl
shl
lcall
loope
and
cmp
and
fs
cltd
in
pusha
in
clc
mov
and
enter
sbb
jge
jne
or
sarb
mov
pop
orb
shrb
loopne
pop
aam
xor
lock
lods
add
aas
jl
test
cwtl
icebp
jle
in
mov
int3
cld
insb
shr
jge
and
add
cwtl
pusha
adc
insb
push
jmp
repz
pushf
and
jbe
xor
movb
test
mov
fldpi
sbb
add
ret
xchg
rolb
lods
and
cltd
ret
mov
mov
cmp
xor
idivb
into
stc
lods
scas
adc
mov
int3
fs
fmull
push
test
xchg
std
mov
push
lock
outsl
pop
sub
jmp
cmp
bound
dec
push
addb
mov
mov
loopne
lock
xchg
inc
call
lock
popf
adc
or
mov
push
clc
ja
sub
mov
nop
and
push
push
mov
iret
fstpt
lds
ret
cli
push
sub
scas
add
mov
cwtl
mov
xchg
adcb
cmc
orb
pop
subb
pop
or
jle
int
mov
dec
xchg
hlt
insb
pop
sub
clc
loope
stos
test
lcall
je
outsb
push
sbb
mov
push
and
std
sub
test
shlb
push
inc
or
imul
clc
testb
add
in
cmp
mov
jmp
lahf
pop
jecxz
jg
call
loop
popa
nop
cmc
cmc
adc
pop
mov
sub
aam
mov
subl
mov
arpl
lcall
lret
mov
scas
or
js
pop
lock
jl
mov
pushf
lods
in
push
sbb
fisttps
jae
int3
add
adc
mov
dec
pop
and
adc
icebp
sub
mov
mov
adc
inc
lret
xchg
or
call
dec
aaa
jge
xchg
pusha
gs
xchg
or
cmc
in
shr
sbb
aas
xchg
xchg
inc
sbb
testb
inc
cmpsl
stos
addr16
xor
push
jno
xchg
enter
push
mov
hlt
mov
jbe
and
push
stc
and
or
fildll
shl
pop
cs
mov
outsl
pushf
js
mov
fs
push
push
ret
insl
cs
xlat
sar
pop
int3
xor
test
fucomip
and
retw
test
dec
lock
cli
xchg
lods
add
shl
mov
push
adc
data16
mulb
pushf
jo
adc
mov
push
xor
lea
data16
std
subb
and
jb
data16
inc
xchg
stc
push
jecxz
decl
mov
inc
inc
adc
xor
and
push
movb
pop
js
mov
jl
hlt
and
adc
mov
sbb
cli
jg
cmp
push
fidivl
stos
ss
sub
mov
mov
sbbl
push
xlat
xlat
jbe
fmull
pushf
adc
sbb
int
decl
daa
mov
lcall
push
push
lock
cmp
ficompl
mov
xor
incl
fnstsw
inc
sbb
xor
leave
pop
mov
add
push
and
int3
rcr
lods
xchg
addl
rclb
adc
adc
mov
mov
or
sbb
cmp
lret
mov
js
test
les
icebp
arpl
dec
add
mov
rclb
and
lret
jo
gs
mov
imulb
sub
cs
lds
mov
mov
lods
bound
push
sahf
hlt
pop
movsb
or
push
sbb
fdivrp
test
mov
or
subl
mov
in
sub
xchg
leave
rorb
dec
mov
mov
popa
icebp
cmc
inc
clc
int3
add
sbb
rclb
icebp
xor
inc
andl
fcomps
scas
jle
push
mov
jno
dec
lock
cwtl
jno
xor
lcall
and
bound
dec
nop
lock
fidivrl
pushf
enter
sbb
clc
pop
dec
cmp
lahf
and
inc
out
mov
clc
push
rorb
call
cld
jg
fs
mov
add
js
add
sub
xchg
repz
fdivrp
inc
ror
push
leave
push
loopne
cmpsl
popf
jmp
xor
pop
pop
and
pop
shrb
bound
decl
std
nop
cmp
or
cltd
ljmp
jo
lods
jge
dec
mov
lods
mov
nop
inc
push
sub
sahf
or
mov
clc
out
pushf
dec
xor
test
inc
fcomip
pop
mov
xchg
pop
jecxz
je
loope
push
inc
rorl
rcrl
adc
sbb
ja
or
stos
push
ret
ljmp
fldenv
add
ficoms
mov
xchg
adc
jo
pop
mov
jo
or
mov
mov
xor
mov
jge
cwtl
mov
out
adc
mov
fsubrl
push
movsb
lahf
shrl
ret
dec
incb
inc
add
in
int
adc
add
xchg
int
scas
or
sbb
es
aam
adc
push
or
rorb
aam
icebp
adc
loope
mov
push
push
out
pusha
insl
test
or
and
cmpsb
push
popa
or
cmp
out
repz
andb
xchg
adc
add
sbb
loop
mov
lahf
push
mov
xchg
pop
pop
sbb
mov
int
int3
cwtl
sbb
mov
cld
std
out
enter
mov
rorl
sbb
call
pop
fmuls
sbb
push
sar
shrd
inc
push
pop
cmpsb
jge
push
rcll
xor
inc
or
fidivrs
fmul
clc
lds
movsb
jbe
mov
mov
stos
mov
mov
sahf
xchg
test
test
movsb
jno
out
push
rorl
mov
stos
mov
sub
and
mov
bound
jl
mov
jg
push
inc
lods
push
or
mov
popa
and
fidivrs
inc
pop
sub
add
shrl
adc
movsl
and
cmp
cmp
xchg
adc
mov
leave
clc
jbe
pop
inc
push
subl
imul
pop
sbb
jne
xlat
insb
or
shl
mov
rdmsr
push
mov
xor
mov
mov
js
test
lret
adc
out
inc
jg
negl
xchg
lods
sub
inc
or
sar
cs
std
loop
test
inc
add
outsl
mov
mov
push
mov
pop
int
fbld
cld
cmp
or
jmp
mov
xor
sub
testb
push
mov
mov
xor
pop
xor
fcmovu
fwait
loopne
mov
lcall
mov
mov
pop
dec
or
shr
inc
push
movsl
push
push
cmpsb
sbb
pop
push
jo
mov
lds
stos
pop
fwait
mov
shlb
jge
leave
int3
sbb
jmp
xor
mov
fnstenv
push
out
ja
lahf
leave
xor
sbb
frstor
inc
call
cmc
jp
add
cltd
jge
mov
pop
stos
inc
call
jne
jecxz
cmp
bound
inc
inc
cmpsl
add
les
push
mov
cld
test
xor
cli
pop
add
js
jecxz
sub
dec
cwtl
fadds
in
mov
xchg
adc
mov
mov
nop
mov
call
loopne
add
andl
popa
inc
inc
xchg
xor
lock
and
pop
or
mov
je
out
int3
std
push
pop
inc
shrl
adc
adc
stos
xchg
imul
inc
stos
mov
pushf
int3
adc
sbb
loope
jle
push
xchg
mov
inc
lds
rcl
in
mov
jle
sub
mov
leave
mulb
fs
jo
jle
sub
push
nop
cmc
or
mov
push
and
push
or
insl
push
stos
sub
icebp
and
sub
cmp
jb
xchg
mov
and
add
mov
fdivs
scas
pushf
cmpsl
push
lcall
dec
bound
or
and
adc
inc
mov
rorb
jge
bnd
insb
mov
cmp
loopne
aaa
fwait
stos
stos
ficoml
mov
xchg
ja
push
xorl
test
mov
ss
cli
mov
fsts
xorl
rclb
pop
sar
pop
jmp
xlat
mul
add
sub
pusha
jp
cmp
or
push
or
dec
lret
aad
inc
loop
xor
cmp
andb
lret
jbe
sub
js
movsb
sbb
mov
sbbb
test
lock
mov
jb
or
mov
andl
sub
push
mov
testb
adc
movsl
rcl
push
clc
icebp
push
xor
dec
movsb
inc
inc
insl
enter
push
sbb
add
movsb
cmp
pusha
cld
rcrl
hlt
push
push
fdivrl
test
mov
cwtl
insb
jl
xchg
pop
jb
xchg
or
sarb
adc
xchg
scas
int
dec
xchg
jle
inc
mov
adc
js
xchg
arpl
mov
cmp
push
mov
js
clc
movl
jge
int
sar
mov
add
cmp
add
xchg
mov
cwtl
das
cltd
xchg
popf
mov
js
pop
call
mov
xchg
inc
out
xor
outsl
cmp
arpl
std
stc
adc
int
dec
push
inc
adc
adc
mov
mov
call
cli
lret
mov
and
adc
ret
add
pop
adc
jbe
lret
nop
js
arpl
inc
push
dec
jge
pop
aas
data16
outsb
cwtl
cmpsl
xchg
add
or
lock
jmp
mov
cs
and
pop
cmpb
outsl
cli
roll
inc
push
lods
inc
xor
dec
pop
lods
add
int3
sub
and
loop
fcoms
and
mov
cwtl
rcr
push
xchg
dec
lret
in
loopne
shl
enter
cmpsl
push
shlb
ret
ss
jo
jb
dec
adc
pop
inc
aas
jp
decb
je
in
push
pop
sbb
cmp
subb
loopne
push
nop
jp
mov
ret
pop
lahf
lret
je
pusha
pop
push
mov
fldl
fcoml
enter
mov
leave
xchg
cmpl
repz
inc
push
loop
inc
test
aaa
xor
out
dec
add
ret
and
xor
pushf
pop
mov
inc
lods
or
mov
loopne
fwait
cmp
roll
pushf
mov
mov
push
xchg
ja
outsb
sub
ja
sbb
cld
daa
test
push
fadds
ss
mov
xor
pop
fnstsw
lcall
xchg
orl
cmp
mov
shlb
mov
add
test
push
jo
sti
push
add
push
adc
test
sbb
stos
mov
sub
mov
fdivl
push
xorb
fneni(8087
loope
inc
shl
movsb
les
scas
aam
insb
cld
mov
lods
sbb
cmc
rcll
int3
and
enter
scas
rclb
pop
inc
movsb
mov
or
add
jle
lret
sub
pop
outsb
mov
lock
movsb
inc
lock
dec
loope
or
xor
rclb
add
sub
lret
push
mov
push
jle
and
int3
push
pop
cld
loope
dec
lock
mov
nop
pop
cld
test
pusha
aam
iret
rolb
add
popf
aad
imul
push
inc
inc
addr16
cmp
sbb
aad
jo
les
leave
xchg
stos
ss
and
push
xor
mov
push
mov
inc
add
cmpsb
inc
dec
in
sarb
pop
movsl
sbb
stos
push
in
test
sahf
cmp
scas
or
add
pop
cmc
mov
mov
push
nop
movsb
xchg
lds
or
or
xor
lcall
rclb
in
mov
sub
mov
cmp
and
mov
and
push
add
cmp
sbb
or
insl
ffreep
pushf
aam
inc
rclb
clc
mov
add
int3
jo
cmp
and
loopne
dec
and
enter
rcll
add
jae
popa
mov
pop
stos
jbe
test
fistl
mov
cmp
fdivrs
or
lcall
inc
jb
jno
pop
mov
inc
add
adc
mov
mov
cmp
push
dec
jl
call
jbe
inc
roll
jno
lods
ret
pop
adc
adc
jp
cld
js
jo
in
adc
ret
stos
jbe
push
add
jecxz
out
lods
sub
ds
mov
ret
and
into
jg
pop
or
int3
xchg
or
lea
fldz
fsubrl
add
cld
mov
int
popf
and
je
fs
mov
mov
adc
mov
inc
cwtl
mov
and
das
push
rclb
cli
mov
dec
lret
and
negl
add
stos
fisubrl
jmp
dec
daa
xchg
shlb
xchg
xor
sub
push
adc
mov
cmp
in
imul
mov
mov
add
pushl
xchg
and
lcall
loopne
test
xor
in
cmc
cli
xchg
mov
mov
or
enter
aad
rol
xor
test
cs
nop
inc
orl
testb
enter
popa
clc
test
or
push
lds
add
dec
lods
cs
ja
inc
jb
lret
or
ja
addr16
stos
addr16
inc
push
xchg
int3
add
push
and
fdivs
sbb
into
sub
push
mov
lea
xor
xor
mov
add
mov
in
mov
clc
xor
fldl
xchg
add
test
ja
mov
mov
xor
mov
mov
shrl
test
ret
sahf
incb
dec
les
and
push
adc
daa
movsb
mov
jp
test
sahf
mov
stos
push
test
jo
arpl
ljmp
mov
decl
lret
insb
lcall
sbb
jmp
fiaddl
decl
mov
or
cmp
setb
and
mov
into
mov
call
push
inc
pushf
pushf
xchg
sub
mov
mov
daa
hlt
jnp
pop
hlt
jmp
dec
out
fldcw
and
xor
test
lcall
and
mov
into
mov
xchg
and
jge
cmp
or
icebp
insl
sti
sbb
inc
mov
cmp
rcrb
clc
sub
daa
jb
cmp
call
xchg
cltd
mov
mov
sbb
xchg
and
cmp
xchg
sub
sbb
or
jecxz
lods
adc
cmp
test
adc
leave
out
push
cmp
inc
fwait
push
out
hlt
loopne
xor
or
fcomp
mov
jmp
loope
es
ds
punpckhwd
adc
inc
pop
push
adc
inc
js
ss
pop
hlt
clc
fstpt
adc
and
jno
pop
adc
das
clc
lcall
scas
fisubrs
inc
cld
mov
mov
lcall
or
sarb
into
stos
jp
fcomps
lret
ret
lcall
adcl
es
dec
pop
push
mov
jp
dec
rcr
je
nop
shrb
inc
clc
nop
dec
adc
pop
imul
je
add
invd
fld
push
rcll
stos
push
pop
jp
add
cmp
movb
cmp
jmp
xchg
dec
adc
pushf
mov
xor
shl
iret
ljmp
movsb
cmp
imul
fistpl
in
cmp
adc
xor
std
fidivs
js
sbbl
fucomp
cwtl
sub
mov
add
lock
jle
dec
daa
mov
cmp
gs
add
mov
or
pop
dec
pusha
aam
inc
scas
dec
cld
andb
imul
clc
outsl
cmpsb
movsb
mov
dec
mov
add
push
outsl
nop
mov
cmp
push
insb
inc
push
lcall
mov
test
inc
int
inc
xlat
xorl
mov
icebp
and
mov
lret
repnz
mov
xchg
and
sub
rclb
mov
icebp
inc
inc
inc
push
in
inc
fldl
mov
pop
decl
or
and
dec
xorb
xchg
insl
addb
ds
pop
push
repnz
aam
xor
and
out
ss
pusha
js
adc
loop
cmp
cmpsb
fs
inc
mov
mov
fsubrp
mov
mov
cmpsl
insl
cs
and
xchg
sbb
sbb
mov
push
mov
nop
xchg
in
lock
insl
pop
mov
and
loopne
loop
adc
sub
push
mov
xorb
mov
flds
pop
mov
fcoml
add
sbb
fsubs
mov
adc
mov
sub
pop
test
inc
push
rclb
add
ljmp
adc
and
mov
hlt
loop
popa
shr
sub
sbb
jge
and
imul
and
sti
pusha
ret
jg
dec
fimull
push
cmp
sub
mov
adc
push
sub
lcall
test
lret
out
add
movb
scas
push
outsl
clc
add
push
jmp
sbb
xor
daa
adc
mov
add
jg
fwait
test
xorl
mov
call
call
push
or
mov
call
rorb
mov
and
xchg
stos
loop
mov
ljmp
stos
xchg
fnsave
sahf
subb
leave
mov
adc
out
push
sub
outsl
xchg
cltd
mov
add
mov
pop
addb
lods
aam
lock
notb
pushl
sub
xor
lds
lods
dec
outsl
js
and
frstor
cmc
enter
aad
push
lods
aam
cmpsl
stc
pop
fldl
mov
addl
daa
cld
lahf
arpl
push
enter
dec
cld
and
outsb
push
inc
scas
mov
outsl
add
outsl
add
sti
sahf
cli
sbb
adc
cld
adc
inc
cmp
cs
mov
fdivrs
pop
mov
scas
shrb
and
mov
ret
push
push
sbb
lock
jne
int3
in
push
std
enter
mov
dec
xor
fiaddl
and
mov
je
out
aas
add
mov
lods
dec
idivb
mov
adc
cmp
adc
ds
xor
jg
lret
add
cmp
push
je
push
jp
addb
add
mov
je
push
int3
and
inc
pop
dec
std
xor
jmp
fistps
xchg
mov
jo
adc
jbe
fmul
lds
cmc
stos
adc
inc
sub
lea
insb
mov
inc
or
adc
es
fidivs
push
test
mov
fmuls
mov
xor
dec
add
movb
leave
lock
movsl
inc
bound
mov
outsb
push
jg
xchg
rclb
imul
popf
imul
call
sub
cmp
inc
inc
dec
dec
test
mov
shlb
xor
clc
addr16
nop
mov
shrb
pop
lock
jmp
xor
push
add
add
mov
pop
or
cmp
jmp
cmp
mov
or
mov
rcll
xor
int3
push
push
or
and
test
iret
inc
ds
xchg
jno
roll
sbb
sbb
jg
adc
in
arpl
dec
dec
adcb
orb
sub
push
mov
xchg
mov
rolb
pop
in
and
je
jg
inc
push
pusha
or
aad
jbe
pop
rolb
sbb
cltd
sbb
mov
int3
push
scas
jmp
incl
jno
ret
js
fdivl
mov
cmp
hlt
or
fdivrs
mov
push
lahf
sbb
xchg
fistps
cmp
negb
outsb
xor
adc
call
push
cmp
cmp
mov
sub
mov
shrb
fisttpl
pop
inc
mov
mov
push
add
mov
pushf
push
repnz
mov
clc
imul
out
test
std
cmp
add
loope
push
or
push
mov
pop
cmp
mov
inc
add
inc
insb
and
lret
pop
mov
hlt
mov
cs
orb
xchg
icebp
and
rclb
sbb
and
inc
xchg
sbb
pushw
int3
das
cwtl
jnp
adc
loope
inc
push
out
inc
testl
mov
dec
out
lds
cmp
mov
lcall
or
push
cmpsb
push
fcom
and
dec
push
and
pop
ficoml
jp,pn
in
mov
movsbl
in
shrb
test
mov
jg
shufps
dec
pop
mov
int
cs
push
ja
aaa
cmpsb
jno
arpl
lock
aaa
sahf
pop
sbb
inc
ret
pop
pop
mov
push
cmc
cmp
or
mov
lret
mov
sarl
insb
aas
aad
loopne
sbb
std
pop
inc
sub
icebp
or
add
xlat
mov
or
push
xchg
cmp
fadds
hlt
adc
push
add
inc
jecxz
and
pop
push
cmpl
pop
and
addr16
xchg
cmp
fcoms
cmovbe
stos
pushf
rcrl
sub
inc
sub
lea
or
dec
sbb
sub
dec
adcb
fcmovbe
dec
gs
loop
sub
dec
in
aas
in
lock
mov
mov
mov
cmp
jp
mov
enter
adc
movsb
sbb
mov
sub
dec
fimull
movsl
jmp
or
mov
scas
jae
shrb
repz
das
lock
andl
test
imulb
adcb
and
sub
loop
sub
ja
int3
sub
lcall
cmp
ret
movsb
mov
cmp
lock
push
outsl
xchg
push
jmp
dec
cwtl
pop
insb
call
jns
pop
mov
add
inc
repnz
negl
idivl
rolb
sub
mov
inc
fisubrs
ret
call
pusha
jmp
xor
sbb
mov
mov
jb
stc
or
pop
and
dec
pusha
sahf
push
clc
xor
fimull
inc
sbb
clc
dec
or
jg
movsb
enter
jb
and
into
jae
and
flds
nop
flds
sti
pop
cmp
ss
dec
gs
adc
jl
movsb
mov
mov
mov
outsb
push
xchg
xchg
and
add
adc
hlt
push
ljmp
ficomps
out
dec
inc
icebp
xchg
xor
sub
and
push
loop
mov
mov
push
xchg
rcrb
add
or
xchg
dec
pop
stc
mov
or
sahf
int
sbb
mov
lods
fadds
add
stos
push
out
rcl
xor
cmp
mov
push
lahf
add
push
dec
push
leave
cmpsb
and
and
sahf
leave
stos
jae
mov
repnz
ficomps
sub
lret
test
mov
dec
jb
data16
in
cmp
jb
aas
sahf
mov
adc
push
xchg
push
mov
mov
pop
ds
inc
or
push
orb
jge
mov
push
inc
addr16
fiadds
lock
stos
mov
push
enter
mov
sbb
push
and
mov
cmp
push
jo
scas
imul
cmpsl
orl
sbb
das
sti
or
adc
adc
jnp
add
rcl
xor
lcall
sahf
jp
xchg
and
xor
lcall
scas
inc
cmp
mov
mov
xor
jo
inc
cmp
adc
adc
sub
or
sti
sbb
dec
jb
jge
out
adc
lea
mov
stos
stc
xor
cmp
sbb
jmp
gs
icebp
pop
in
and
mov
pop
es
cwtl
sbb
das
xchg
xchg
adc
addl
xor
or
cmp
fisttps
sub
lcall
or
inc
dec
push
sub
pusha
aaa
pop
repnz
cmc
incb
rcrb
or
mov
mov
push
dec
outsl
cmp
push
mov
cmp
push
icebp
rorb
mov
adc
pop
cmp
sbb
fimuls
jl
jg
pushf
aad
xchg
std
sbb
pop
je
cmp
sbb
jnp
test
ret
push
push
aam
fdivr
test
push
ljmp
xor
push
push
mov
push
push
enter
or
mov
sbb
or
push
je
or
and
or
jno
mov
jmp
stos
jg
aas
pop
pop
cmp
mov
lock
pusha
pop
enter
mov
in
mov
es
pop
lock
xor
cmpb
iret
fs
push
and
adc
shrb
xchg
cmp
mov
ret
clc
sahf
cmp
push
mov
fcomps
punpcklbw
repz
jp
xorl
ja
lea
inc
test
cmp
mov
mov
sti
inc
stos
lcall
cmc
js
cmp
clc
movb
and
add
stos
add
jo
sahf
cmpb
popf
lcall
in
loopne
or
push
shr
es
jns
jnp
xchg
fnstcw
cmp
or
insb
jno
outsl
dec
fwait
sbb
add
in
in
pop
ja
loop
and
pushf
mov
mov
cmp
xlat
adc
pusha
xor
in
add
fidivrl
fisubrl
jb
mov
pop
decb
push
and
ret
dec
lret
loop
test
sub
decl
test
jo
imul
xor
loopne
pop
or
or
mov
lcall
dec
sbb
push
mov
clc
mov
aas
jl
mov
sti
sub
in
cmp
adc
adc
ret
scas
pop
stc
xchg
fiadds
inc
adcl
jne
cmp
push
push
add
push
movsl
or
rclb
loope
adc
scas
and
mov
pop
fsubrl
xchg
mov
mov
adc
fstp
mov
inc
popa
or
adc
mov
ja
cmp
add
mov
inc
fucomip
scas
and
dec
fmuls
loopne
sahf
mov
pop
or
mov
jle
int3
jle
mov
mov
inc
jmp
add
shrl
negb
mov
rcrb
add
js
stos
lcall
push
add
insl
popl
add
cmpsl
add
lds
lcall
sub
les
sub
push
mov
push
adc
fstps
adc
and
pushf
test
sbb
adcl
add
inc
sbb
orl
jo
mov
xchg
pop
test
int3
enter
sub
or
cs
add
sub
sub
outsb
mov
mov
out
xchg
xor
cmpb
mov
mov
pop
stos
cmpsb
add
dec
hlt
rolb
lahf
push
icebp
inc
test
int
cmp
inc
pop
mov
add
cmp
jmp
mov
inc
cli
push
loop
push
mov
cwtl
mov
pop
in
ss
lods
in
cli
rcr
sbb
xchg
ljmp
call
or
push
mov
sbbl
or
jae
int
mov
add
mov
dec
sub
jmp
push
jae
aas
test
adc
lock
mov
ret
mov
lret
stc
subb
loop
lods
cmp
ss
dec
call
sbb
push
fcomps
xor
jmp
aad
jae
pushf
mov
xor
add
xchg
fsubs
mov
add
lret
xor
sbb
mov
into
or
enter
mov
mov
adc
or
ss
inc
adc
xor
mov
and
jl
lock
loope
mov
inc
lret
mov
sti
xor
cmpsb
bound
ja
fs
insb
ss
mov
outsl
push
jp
test
test
arpl
push
shll
push
into
dec
shll
adc
xchg
leave
inc
dec
adc
and
sbb
movsl
sarb
fcomps
jb
pop
xor
incb
inc
test
or
push
dec
mov
cmp
jle
mov
jl
out
pushf
dec
aaa
movb
roll
cli
sbb
cmpb
or
and
lret
push
mov
into
clc
mov
int3
rorb
insl
or
and
mov
mov
ret
jne
clc
mov
pandn
je
push
mov
rorb
roll
adc
jg
push
jp
int
jge
cmpsl
loope
out
xlat
rcll
or
mov
push
out
dec
stos
sbb
imul
mov
les
adc
sbbl
arpl
cltd
xchg
mov
pop
sti
mov
sub
test
mov
into
movsb
sbbb
jge
mov
mov
rcl
cmp
loop
add
fimuls
sub
cli
movsl
mov
scas
into
popf
xor
outsl
aad
xlat
fistpl
mov
mov
cmpsb
mov
xchg
or
test
push
pop
jle
xor
xchg
andb
test
sbbl
mov
gs
mov
lods
outsl
mov
xor
in
pop
mov
insb
and
loopne
shrb
shrb
cmp
andl
js
xchg
mov
inc
or
mov
shrl
ljmp
push
add
push
mov
sbb
xchg
lret
add
popf
inc
pop
aas
pusha
popf
mov
adc
aad
inc
or
push
and
js
jne
jl
decb
mov
stos
loop
andl
daa
shlb
aaa
in
pop
cmp
xlat
mov
pop
sub
loope
pop
add
mov
sbb
or
je
sar
sbb
jmp
fptan
push
inc
or
loop
dec
test
movsb
js
inc
imul
les
aam
mov
aad
jle
push
mov
shlb
es
xor
ljmp
stos
sub
cmp
pop
clc
test
bound
sub
call
xchg
dec
jns
xchg
pop
jmp
lcall
mov
sub
loope
in
add
adc
iret
js
add
sbb
push
hlt
or
es
dec
push
bound
mov
cmc
test
loope
dec
and
add
ret
xchg
movsl
test
mov
addb
pop
add
cli
das
inc
inc
rcrb
loope
test
les
or
cmpb
adc
push
push
push
sbb
sti
sbb
dec
and
mov
push
mov
pop
mov
jmp
adc
inc
adc
sbb
les
jb
ss
insb
test
frstor
arpl
adc
scas
movd
leave
mov
shlb
shll
inc
mov
mov
mov
pushf
in
mov
pop
loop
test
out
mov
jns
test
roll
ss
cli
and
mov
mov
loopne
or
loopne
pop
xchg
fs
jno
test
push
adc
sub
rorb
stos
stos
dec
xor
and
scas
dec
push
faddl
aam
sub
add
push
hlt
cmp
mov
mov
and
test
nop
pop
cmp
ret
mov
cltd
stos
jg
adc
out
ss
std
pop
add
and
adc
pusha
out
jg
stos
js
push
ds
cmp
inc
popf
push
adc
call
bound
mov
pop
jmp
leave
push
popf
cmc
mov
dec
inc
xchg
pop
add
rorl
aam
cmpsl
pushf
movsb
lahf
push
mov
aad
push
call
rolb
mov
js
add
int3
xchg
push
add
sub
nop
stos
sti
mov
mov
repz
outsl
cmpsl
xchg
cmp
mov
push
or
sbb
loop
lcall
jle
stos
cmpb
icebp
fsubrp
in
push
cmpsb
pop
test
push
sub
call
dec
push
incl
jl
js
pop
pop
loopne
movsb
and
popf
pop
mov
stc
outsb
loop
loopne
clc
imul
dec
inc
and
xor
and
mov
hlt
inc
subl
clc
fimull
xchg
jmp
sub
dec
push
mov
jbe
push
sbb
mov
mov
sbb
movsb
adc
pop
add
or
jne
inc
mov
int
lock
push
mov
enter
add
in
fnsave
call
movlhps
bound
and
push
sbb
inc
jl
stos
movsb
mov
push
stos
in
pushf
aam
dec
insl
movsl
shll
subl
xchg
push
fisttpll
and
cwtl
lock
and
fiadds
adc
mov
cmp
push
inc
jnp
xchg
mov
mov
cmp
pushf
or
hlt
adc
mov
push
mov
sbb
pop
bound
pusha
gs
cwtl
dec
mov
jnp
je
mov
and
push
mov
fsubrp
cltd
fiadds
jno
xchg
call
test
ljmp
aas
inc
mov
das
aam
nop/reserved
imul
lock
or
inc
pop
push
push
cmpsl
ret
mov
les
in
nop
and
adc
insb
inc
cmc
jmp
mov
call
je
jbe
notb
push
in
inc
cmp
adc
jno
je
push
dec
arpl
fscale
dec
adc
xchg
aam
ljmp
add
or
ljmp
mov
push
and
jne
das
in
repnz
mov
idivb
pcmpeqd
popa
out
push
mov
imul
adc
clc
xor
outsl
in
jle
divb
mov
jo
or
mov
push
inc
call
cmp
shrb
movsb
hlt
sub
outsl
insb
cmp
sahf
loope
mov
jo
mov
cs
call
push
cmpsl
mov
test
je
inc
mov
pusha
sbbl
fldenv
inc
loop
push
sbb
pusha
add
cmc
dec
mov
cli
arpl
xor
and
fbstp
cmpb
mov
fidivl
lea
into
and
and
sahf
jg
pushf
sbb
and
ljmp
lock
xlat
xchg
rolb
cli
xlat
add
jb
dec
and
mov
jo
add
push
outsb
mov
fcmovu
mov
jbe
lods
inc
mov
cmp
arpl
pop
dec
add
xchg
aam
cltd
es
pop
dec
in
jo
decl
or
insl
in
fstp
jb
and
jns
lret
push
and
ficoml
cmp
xor
mov
xchg
cmp
inc
adc
andb
hlt
in
hlt
add
jl
leave
push
test
push
push
pop
stos
jle
adc
sub
or
or
int3
adc
dec
adc
xchg
add
lea
sbb
cmp
lock
imull
and
jle
cmp
dec
out
fbld
xchg
mov
inc
fwait
movsb
mov
or
pop
cmpsl
mov
add
and
sbb
inc
mov
cld
and
push
sysenter
or
mov
in
nop
inc
push
xor
add
jb
lahf
orb
push
dec
or
pop
xchg
and
or
and
mov
add
pop
push
test
pop
sub
shrl
xchg
xor
push
xor
pmulhuw
hlt
xorl
sbb
mov
loop
out
cli
jecxz
sub
mov
sbb
popf
iret
bound
mov
xchg
inc
lcall
or
add
lods
fistl
fwait
testb
cld
inc
repnz
push
jmp
lods
jb
inc
jbe
mov
enter
mov
repnz
fcoml
push
sbb
mov
push
aad
or
push
add
sbb
scas
shl
fstpl
das
mov
cld
mov
sarb
and
dec
mov
mov
adc
lock
sbb
jae
movsl
lea
inc
rcrb
ss
hlt
mov
sahf
sbb
scas
icebp
pop
jecxz
cwtl
js
outsb
out
jge
or
aam
popa
js
push
adc
fisttpl
subb
shrl
pop
inc
xor
mov
xor
mov
clc
les
cmp
lcall
lret
imul
sbb
fs
dec
add
push
pop
ljmp
std
xchg
add
pop
repz
pop
nop
or
mov
cmp
xorb
sbb
inc
ds
aaa
test
or
push
jecxz
cmpsb
mov
iret
push
mov
and
mov
sub
jl
int3
aas
roll
mov
push
inc
mov
xchg
xor
loope
popa
aaa
mov
sahf
mov
lret
lock
sub
cmp
xchg
inc
div
test
mov
arpl
dec
adc
jl
cmpl
int
cli
stos
xchg
lods
mov
lods
stos
ret
daa
roll
pop
imul
jl
addb
cwtl
dec
dec
cli
sbb
lods
ds
adc
add
jp
sbb
scas
adc
stos
xchg
mov
and
or
fnstenv
je
cmpsl
xchg
jp
dec
rolb
aad
mov
cmp
js
mov
mov
jge
push
dec
and
and
jp
add
sbb
test
xchg
fstps
jo
add
adcb
fs
cmp
jle
cmp
js
inc
out
pop
loop
sub
push
lds
pop
and
test
jp
mov
pop
jae
add
cmpsl
testb
jns
call
std
and
fadds
rcll
std
lcall
add
xor
cmp
push
push
ret
pushf
sub
mov
sbb
hlt
test
das
adc
lods
mov
xchg
test
lock
into
ljmp
sub
add
lock
fdivrs
hlt
mov
or
std
and
lods
es
das
pusha
inc
jnp
int
js
cmp
outsl
pop
mov
pusha
or
mov
adc
adc
outsb
or
sbb
out
lcall
add
add
mov
pop
scas
roll
cld
lods
add
pusha
hlt
jo
adc
addb
cli
dec
or
and
cmpb
sub
sbb
fdivrs
nop
xor
outsb
sub
adc
dec
lcall
jle
es
push
outsl
movsl
inc
push
cli
jle
xchg
lods
pop
imul
fcomps
xchg
scas
mulb
movb
scas
xor
mov
or
cmc
int3
push
xor
sub
cmpsb
fdivrp
jp
pop
or
and
aas
sub
andl
test
and
pop
push
enter
icebp
and
loope
cld
ja
adc
in
inc
lahf
adc
ljmp
out
inc
mov
and
add
jl
testb
cltd
hlt
gs
mov
nop
fidivrl
call
outsb
test
pop
add
and
add
pop
adcl
jb
add
fsubrl
mov
mov
in
sub
je
call
jge
inc
adc
xchg
lcall
sbb
ja
dec
das
clc
hlt
out
or
pushf
in
int
fwait
jp
xchg
cld
xchg
scas
push
push
or
or
mov
sarb
into
mov
push
pop
inc
ret
sub
lcall
movsl
mov
mov
ljmp
ss
loopne
fdivrs
sar
dec
pop
inc
push
or
nop
and
pusha
fisttpl
xchg
xor
lret
bound
pop
and
inc
mov
lods
int
out
pop
add
shlb
hlt
jmp
and
push
cmpl
jne
cmp
cwtl
pop
insb
gs
subb
adc
jb
and
mov
pushf
hlt
lock
or
xor
mov
je
pop
xor
mov
sti
add
in
mov
mov
movsb
jecxz
call
adc
int
repz
call
shll
clc
push
int3
icebp
pushf
mov
cs
cmp
dec
cmc
mov
cli
stos
rolb
aaa
lods
pop
push
push
mov
dec
pop
sub
data16
add
subb
clc
dec
xchg
ret
mov
mov
negl
insb
jns
das
js
dec
das
js
jp
xchg
into
xchg
or
in
mov
dec
je
stos
inc
adc
mov
sti
or
shll
out
lock
cmp
mov
lods
mov
cmp
gs
mov
cmp
jmp
push
loopne
lods
mov
pop
xchg
jb
daa
decl
arpl
dec
fwait
ss
mov
push
pop
icebp
icebp
cld
test
repnz
or
sub
lds
out
pop
or
notb
lret
insl
fimull
rorl
aaa
int3
jmp
stos
stos
js
cmp
movsb
adc
or
lcall
popa
test
iret
sbb
mov
push
pusha
mov
mov
push
adc
in
mov
frstor
inc
lahf
push
data16
data16
cmc
ljmp
mov
popa
arpl
adc
test
sbb
loope
mov
enter
scas
sbb
js
in
pushf
inc
jnp
xor
xor
mov
push
push
inc
or
jecxz
mov
mov
jae
aaa
inc
stos
push
jbe
pop
xchg
dec
in
testb
jae
mov
sbb
pop
cmc
mov
jmp
sbb
xchg
es
jp
pop
fmull
addb
aam
hlt
lock
insb
dec
mov
jmp
or
sahf
xchg
sub
or
jl
cmp
hlt
xor
sub
add
call
push
or
or
add
or
fs
rcll
test
push
mov
ds
movsb
dec
jne
push
rcrl
cmp
pushf
sbb
or
lock
jb
cmp
fsts
or
dec
adc
fadds
pop
loope
fdiv
mov
xor
adc
mov
mov
pop
call
test
push
or
fistpll
mov
mov
dec
mov
stc
push
cmpsb
pop
xor
mov
pop
add
cmpsw
stc
sbb
jno
test
ds
xchg
ret
inc
push
and
mov
push
bound
cmpsb
xchg
cmpsl
adc
jl
test
testb
adc
cld
andb
push
jl
and
div
and
sub
mov
loop
ret
gs
into
or
js
sbb
cmp
xor
inc
ret
add
inc
aaa
repz
add
mov
or
mov
stos
and
xorb
push
out
mov
shll
sahf
sbbb
scas
loopne
mov
xchg
mov
adc
bswap
mov
jle
inc
add
jg
cmpb
cmp
add
sbb
mov
xor
jne
add
cmp
movb
js
jo
lods
cltd
and
outsl
sbb
mov
test
testb
adc
das
test
cmp
sarb
stos
xchg
inc
push
xchg
jmp
in
hlt
shr
movsb
icebp
adc
push
aaa
sub
push
cmpsb
cmp
jmp
or
fistps
sbb
ds
cli
loop
xor
sbb
int
pop
push
outsb
pop
push
scas
movsb
pop
or
stos
mov
jno
and
or
ds
push
scas
mov
lods
pop
fsubs
hlt
arpl
or
hlt
mov
jne
jl
sbb
push
popl
jne
push
or
sbb
pop
mov
mov
jp
sahf
sbb
ljmp
pop
fsubp
dec
popa
sbb
push
mov
sbb
push
push
loope
loop
mov
adc
push
mov
mov
stos
xchg
cmpl
out
xchg
mov
stos
std
das
dec
mov
cltd
mov
lea
cli
and
outsl
push
je
push
xor
in
mov
push
jb
pop
inc
rorl
sbb
cld
ljmp
sarb
inc
mov
pop
cli
push
xchg
cs
xorl
inc
jbe
dec
dec
jno
xor
loopne
inc
sbb
scas
fcos
inc
xchg
jl
ret
jb
shlb
cltd
addr16
or
adc
rclb
mov
loope
std
aam
mov
aas
pop
sub
inc
inc
xchg
dec
test
dec
and
and
pushf
mov
rorl
add
dec
mov
imul
or
pop
mov
cli
cmp
adcl
or
movsb
xchg
or
xor
dec
sbb
pusha
loop
sbbl
mov
sbb
aas
sub
andl
std
call
movsl
push
mov
loopne
mov
lods
clc
sbb
nop
mov
mov
pop
mov
fs
fstps
jbe
and
push
rorb
mov
mov
xchg
lock
sub
stos
push
jp
ftst
adc
mov
mov
rcrb
into
dec
iret
les
in
xor
nop
mov
mov
int
fisttpll
ret
scas
and
out
push
fiaddl
into
mov
mov
in
je
loopne
mov
push
int3
pop
pushf
and
and
repnz
xchg
in
xor
repnz
lods
outsb
stc
mov
or
or
mov
sub
mov
inc
xor
cs
lret
mov
out
fsubrp
pop
clc
clc
jecxz
mov
cld
sbb
arpl
imul
scas
je
adc
mov
pusha
pop
push
mov
mov
clc
rclb
dec
loop
jae
sub
add
mov
je
xor
cmp
adc
dec
insb
mov
xor
pushf
cli
add
push
int3
add
dec
add
mov
fdivrl
adc
sbb
outsl
dec
leave
movsl
cs
lret
dec
es
rolb
mov
mov
jo
enter
sub
rolb
sti
sbb
arpl
sbb
lds
and
dec
std
std
inc
add
andl
jo
adc
lock
pusha
pop
fcomps
mov
nop
xor
inc
sbb
sub
ds
mov
or
cmpsl
dec
and
jecxz
mov
xor
bound
adc
cld
inc
lea
adc
ficompl
sbbb
fldcw
test
mov
shlb
movsl
repz
adc
test
repnz
data16
jb
xchg
lock
scas
jo
rcll
test
js
aaa
xor
pop
add
and
pop
inc
inc
adc
ljmp
imul
enter
jp
adc
mov
orb
cld
nop
lcall
push
add
or
popa
insb
cli
inc
repz
ret
fisubl
data16
rclb
and
xchg
mov
or
sub
push
movsl
addl
mov
add
or
cmp
lcall
rcrl
push
mov
lock
xor
bound
movsl
stos
nop
mov
xchg
and
xor
push
mov
lods
mov
and
adc
outsb
inc
mov
lahf
out
or
sbb
rclb
push
dec
or
push
push
mov
incl
mov
push
push
pop
jle
das
and
mov
lods
push
loopne
jo
bound
in
sub
icebp
jmp
test
mov
call
push
lea
cmp
hlt
aas
addb
std
add
cld
rorl
push
jne
cld
je
inc
pop
lock
cmp
ljmp
and
adcb
add
jo
push
insl
aas
lods
cld
sub
ret
inc
push
sbb
hlt
jle
mov
add
or
adc
lods
ret
cmp
call
push
clc
xchg
jmp
sub
push
mov
xor
sub
dec
push
jle
es
sar
in
repnz
mov
lods
inc
lret
push
outsl
stos
xlat
mov
dec
sbb
add
inc
jno
or
popa
loop
mov
cwtl
lock
fiadds
testb
in
fiaddl
fists
xor
push
xor
jnp
sbb
adc
sub
lds
or
fdivr
xchg
loopne
xchg
mov
stos
dec
jmp
rcrb
scas
lret
imul
addl
lahf
mov
stos
mov
fsts
call
inc
or
roll
push
cmp
and
add
add
das
mov
cmc
and
xchg
pusha
and
std
scas
fsubp
stos
push
jo
rorl
push
lock
add
aam
inc
divb
ret
test
rclb
mov
push
pop
and
push
dec
sbb
shl
fidivl
sbbb
mov
incb
ds
mov
shlb
sbb
mov
fs
pop
cli
mov
ret
and
stos
shlb
xor
xor
jne
push
mov
data16
xchg
cmp
or
inc
in
rorb
or
out
aaa
out
xor
or
rorb
stos
adc
fs
loopne
repz
cmp
fadds
add
sbb
shr
mov
mov
cmpsl
and
xchg
sub
roll
clc
mov
clc
sbb
cmpsb
add
lahf
lcall
adcb
call
int
call
push
adc
loope
inc
mov
sub
pop
xchg
push
push
in
mov
jb
push
fadds
mov
mov
add
mov
rorb
frstor
sbb
and
push
push
add
push
movsb
mov
popa
cmp
aam
and
out
mov
iret
ret
mov
aam
and
push
xor
jp
inc
xchg
clc
jo
or
adc
cmc
xchg
adc
pop
inc
dec
add
cmp
lea
dec
xchg
or
mov
rorb
in
mov
mov
add
add
dec
cmp
daa
outsb
lods
rolb
jle
je
sub
pusha
lods
push
pushf
rolb
pop
std
jg
adc
inc
push
icebp
adcb
jp
icebp
lock
or
dec
cmp
push
xchg
pop
push
sti
add
jae
mov
mov
mov
jnp
hlt
add
daa
cld
inc
test
xor
and
imul
xor
and
aam
mov
negl
das
cmp
insb
mov
test
ret
or
clc
incl
sbb
mov
sbb
aad
sub
and
test
or
mov
push
dec
mov
shrb
pop
ret
addr16
ljmp
out
add
or
or
pop
and
cmp
lcallw
sbb
inc
fadd
add
cmpsb
xchg
push
jle
mov
test
mov
mov
into
xchg
jl
dec
inc
ds
enter
mov
adc
fdivs
xchg
or
inc
mov
xor
cmp
and
or
mov
mov
inc
and
xchg
aam
push
or
popa
dec
fs
jp
jp
and
enter
mov
xchg
scas
cwtl
push
add
mov
mov
ljmp
sub
es
movsb
or
clc
pop
push
push
fstpt
push
hlt
je
mov
out
ss
add
mov
jae
and
fs
or
out
dec
dec
aad
mov
fldt
fimull
mov
mov
sub
orl
aad
imul
stc
ja
outsl
mov
divl
mov
mov
jno
jp
hlt
mov
or
mov
adc
clc
sbb
bnd
cmp
adc
rcr
les
adc
outsb
sahf
pop
rolb
sub
cld
add
mov
int3
orl
gs
outsb
decb
cmpsl
inc
int
loop
dec
enter
test
xor
loope
or
scas
es
inc
jl
jno
repnz
mov
push
mov
nop
dec
dec
mov
push
sbb
mov
dec
scas
bound
inc
rorl
outsl
sub
popa
sub
mov
push
inc
stos
leave
mov
push
adc
ljmp
pop
sbb
into
jecxz
mov
pop
lcall
pushf
ljmpw
push
mov
lret
sbb
mov
outsb
or
loope
mov
mov
outsb
bound
mov
mov
cmp
mov
inc
inc
mov
fwait
sub
or
xchg
leave
dec
xor
ljmp
inc
out
or
test
inc
adc
mov
mov
ret
icebp
sbb
shlb
pop
cli
movsb
add
cmpsl
pop
imul
stos
lret
adc
fdivl
rcll
je
lods
sbb
push
and
int3
add
xchg
je
es
jl
push
cltd
sbb
xchg
rcrb
push
cmp
test
push
and
loopne
nop
ret
xchg
aad
push
cmp
inc
outsb
mov
subb
cli
xchg
jbe
notb
fcoms
push
mov
xchg
add
jle
push
popf
mov
in
cmp
sub
jg
push
sub
xorb
fst
in
mov
inc
inc
push
inc
pop
pop
pop
cld
inc
clc
mov
mov
test
dec
and
test
aam
push
jg
int3
adc
mov
pop
loope
or
and
aaa
adc
xor
lock
cmp
or
push
lock
insb
les
ss
lock
cltd
mov
fstpl
xor
pop
pop
push
mov
or
in
cmp
fcomp
pushf
inc
add
xchg
jo
lea
adc
andl
pop
adc
sub
cmp
adc
mov
in
fsubrs
ret
lcall
data16
or
cmp
xor
repnz
nop
test
mov
cwtl
sbb
jb
push
js
pop
into
inc
mov
sub
dec
cmpb
adc
das
sub
je
mov
inc
push
js
cmpsl
and
xchg
sub
mov
insl
or
mov
or
stos
sti
xlat
adcb
mov
cs
pop
adc
out
mov
in
push
xchg
adc
jg
add
sbb
out
xchg
inc
cmp
fnstsw
sbbb
mov
push
nop
fidivs
adc
fmul
inc
shlb
jg
mov
ja
rclb
std
and
and
enter
cmc
js
push
ja
ret
push
mov
scas
push
out
hlt
dec
test
inc
test
es
xchg
mov
orl
xchg
xchg
leave
call
lret
stos
leave
pop
jl
sub
insl
xor
adc
rclb
and
push
cltd
mov
in
shlb
popa
cmp
incl
mov
and
mov
das
icebp
enter
decl
pop
cld
decl
loopne
movsb
jb
mov
sbb
arpl
loope
cmp
mov
loop
add
mov
in
mov
adc
jns
or
aad
in
dec
fiaddl
call
movl
inc
std
sar
les
pop
setp
es
or
cmpsb
sub
popa
mov
mov
in
mov
pop
jnp
cmpsl
mov
dec
ficomps
das
loop
sub
xchg
in
cs
jb
negl
add
dec
sti
push
decb
jmp
lods
fnsave
test
add
mov
scas
rcrl
hlt
fisttps
xor
push
jae
jecxz
sub
lcall
mov
arpl
xlat
sub
ljmp
pop
adc
or
xor
cmp
fmuls
inc
stos
sub
cmp
aaa
add
test
mov
clc
movl
mov
add
sub
xor
jo
jle
sti
pop
jb
dec
xchg
int3
pop
sbb
xchg
inc
addl
xchg
xchg
sub
xchg
ljmp
mov
pop
lods
ljmp
imul
mov
add
mov
pop
xchg
cli
daa
ret
mov
xor
xchg
fsubrp
push
rorl
push
pop
ret
or
fwait
sub
enter
scas
mov
jg
push
mov
xor
movw
ss
and
adc
inc
pop
dec
add
sbb
je
adc
rclb
sub
fnstcw
outsb
inc
lods
pop
mov
fadds
sbb
push
add
sarb
pop
mov
sub
push
push
bound
loop
sub
out
xchg
inc
pop
or
sbb
and
inc
mov
aaa
fimull
inc
das
cmp
mov
in
xorl
adc
fildll
lcall
pop
and
shlb
imul
lods
mov
aas
call
enter
mov
loopne
ljmp
lds
ljmp
sub
inc
mov
repz
test
push
push
and
scas
lock
push
outsb
and
push
rcr
lods
pop
inc
shll
rcrb
cmp
enter
cmp
sbb
inc
fwait
repnz
aam
aas
inc
rdtsc
daa
decl
jl
shl
mov
cli
inc
adc
sbb
add
or
stos
push
lock
mov
mov
cmpl
push
inc
pop
mov
lock
orps
loope
adc
je
push
pop
pop
jmp
pop
dec
mov
xchg
pop
lcall
or
mov
push
inc
mov
test
sbb
adc
rcl
push
push
xchg
inc
xor
cmp
cwtl
and
mov
loop
loope
out
outsl
clc
add
icebp
push
jecxz
mov
loopne
jnp
sbb
mov
hlt
cltd
fdivrs
push
pop
push
icebp
ds
sub
push
sbb
and
or
add
hlt
icebp
sub
pop
pusha
add
ret
lea
sti
pop
cmp
fwait
incb
jmp
pop
lea
pusha
xchg
pushl
ljmp
push
in
cmp
dec
bound
push
sbb
hlt
mov
sub
aad
fstpt
add
pop
push
or
dec
sbb
aaa
imul
lock
push
cmpsb
pop
inc
std
jl
dec
or
out
add
jno
ret
das
cli
jbe
sbb
idivb
scas
cmp
imul
call
scas
and
mov
mov
cmpsl
fsts
mov
ljmp
add
jg
sub
push
xchg
mov
inc
and
pop
and
mov
inc
test
pop
dec
pop
ret
fs
test
aam
inc
inc
lcall
xor
adc
xor
ret
ret
outsb
adc
push
sbb
pop
jbe
arpl
call
and
or
cmpsb
test
js
rorl
sub
and
sbb
add
je
stos
adc
cmp
and
scas
inc
outsl
pop
adc
sahf
int
dec
lret
popa
insb
ss
push
cmp
das
mov
xor
mov
sahf
or
push
or
sub
loope
mov
push
lods
push
push
push
loope
loopne
addr16
or
and
dec
push
rcll
sbb
jle
ss
dec
sub
pop
mov
mov
insl
xorb
and
mov
jg
shrl
inc
add
xchg
cli
lods
es
dec
push
cmp
cmpsb
out
or
rcll
cmp
movsb
ficomps
ret
cmpsb
or
lcall
aam
shrb
add
sub
shll
inc
pop
stc
mov
push
test
cmpb
je
fcomps
add
mov
push
mov
es
rol
aaa
jno
jp
in
mov
cld
pusha
or
mov
xchg
xchg
rorl
sbb
mov
sbb
mov
xchg
or
adc
or
loope
inc
xor
sub
test
and
daa
fiadds
mov
add
rcll
bound
nop
sahf
or
ret
pop
test
cwtl
dec
addl
scas
shl
pop
mov
cmove
out
fdivrl
addb
incl
pop
jl
add
mov
outsb
push
dec
rcr
js
je
es
mov
sub
aam
sbb
stos
and
push
xor
inc
lcall
xchg
push
rolb
into
nop
dec
pop
cmp
mov
fdiv
es
rorb
sub
ljmp
push
xchg
ljmp
sbb
in
in
scas
mov
movsb
xchg
outsb
insb
jl
or
cld
jbe
cmc
jbe
push
sbb
insb
xchg
cli
sub
dec
gs
adcl
fsts
mov
movsb
ficoml
push
fistl
push
pop
jb
push
dec
subl
mov
mov
sub
notb
push
hlt
sbb
or
or
outsl
call
or
mov
adc
mov
adc
jge
push
and
scas
shr
pop
mov
cmp
mov
outsb
xor
sub
lds
loopne
push
fisubrs
aas
pop
xchg
pop
inc
jo
xchg
lea
pop
cld
pop
insl
push
jo
pusha
or
pop
or
push
push
stos
push
negl
cwtl
or
sbb
shll
cmp
push
inc
test
xchg
aas
inc
cmpl
test
cmp
call
dec
aad
aaa
sahf
xor
xchg
into
aas
fbstp
pop
adc
cltd
fdiv
lock
fiaddl
fmuls
je
mov
sub
jae
push
pop
into
cmpb
and
loopne
cmp
inc
pop
fnstenv
jmp
pop
icebp
add
mov
push
mov
shl
pop
mov
sbb
mov
inc
dec
sti
clc
jg
adc
cld
shll
sbb
jne
cmpsl
cmp
cli
bound
pop
ficoml
push
out
mov
leave
pop
pop
dec
mov
shll
xchg
jle
cmp
dec
fbstp
push
sbb
testl
inc
xor
ds
push
mov
push
or
mov
pop
lret
push
testb
out
push
sbb
dec
cli
or
jp
and
or
or
test
jo
test
mov
insb
je
shr
mov
int3
cld
movsb
adc
popa
and
ds
push
lret
inc
dec
inc
push
aam
addr16
mov
aas
stos
xchg
rclb
out
or
sub
sub
int3
add
call
pop
jle
test
adc
xchg
pop
cmp
ficoml
les
push
lock
enter
and
sub
push
pusha
ret
repz
loopne
inc
movsb
mov
push
loop
pop
mov
out
scas
sahf
ljmp
test
xchg
adc
test
and
sbb
testb
pop
lea
test
test
call
push
or
sub
add
mov
adc
and
idivl
sub
aam
lock
push
out
mov
add
rclb
mov
add
lods
les
or
int3
mov
inc
push
jl
jl
vfrczps
push
add
jmp
xchg
lock
lods
aas
jb
xchg
cmp
shl
call
pop
sbb
inc
loop
test
roll
sub
mov
pop
mov
ljmp
out
xchg
stos
sub
or
mov
loopne
add
xchg
mov
in
xor
and
bound
jle
push
adc
mov
cmpsl
adc
je
jbe
rolb
ja
test
pusha
lds
mov
add
pop
sub
data16
clc
add
outsb
push
add
dec
sbb
mov
jp
lods
adc
repnz
sub
mov
add
push
inc
aaa
push
ret
push
rclb
and
mov
repnz
add
pop
or
ret
pop
loope
jmp
push
ss
push
je
aaa
mov
mov
lock
xor
push
mov
jecxz
enter
and
enter
sbb
iret
mov
call
in
dec
pop
push
hlt
mov
pop
aam
flds
dec
sub
insb
mov
sub
in
mov
inc
ficomps
xchg
stos
popa
jne
cmp
inc
mov
sbb
lret
jbe
mov
fldl
push
sbb
les
out
pop
push
mov
push
and
add
fsubr
subb
clc
ds
adc
pop
fwait
sbb
or
mov
push
mul
mov
test
std
dec
ret
xchg
fidivs
jo
fsubr
xor
push
and
inc
unpckhps
lods
jbe
push
jo
ss
gs
xor
loope
pop
lret
adc
dec
adc
mov
and
cmp
and
test
xor
mov
jb
and
loop
mov
xchg
aad
test
scas
mov
jo
push
shl
pop
lods
push
jge
sub
stos
cmp
xor
test
mov
xchg
cli
push
fsubrs
fiaddl
leave
inc
xor
xchg
scas
mov
xor
mov
cmc
cli
js
outsl
cmp
adc
jp
repz
and
movb
add
pop
or
sahf
add
pop
shlb
and
add
xor
mov
push
cld
divb
aad
or
ljmp
aaa
jmp
or
xor
das
mov
mov
push
pop
sub
and
mov
jge
rcl
pop
adcl
pop
ljmp
mov
xchg
lret
add
insb
xorl
loopne
aam
sub
fimull
mov
je
enter
dec
not
inc
cmp
inc
jo
ret
inc
and
test
sbb
ret
dec
sub
orb
dec
shlb
xchg
incb
fdivs
mov
mov
imul
shll
or
je
mov
sbb
in
out
movsl
popf
loopne
mov
shll
push
mov
popf
push
and
inc
sub
mov
push
adc
std
mov
andl
mov
and
or
cmc
movsl
xor
mov
adcl
mov
shr
bound
mov
adc
js
push
sbb
rclb
faddl
inc
pop
push
and
adc
mov
jno
xchg
jle
lcall
repnz
mov
sahf
sub
pop
fisubrl
xchg
sbb
sub
and
xchg
rclb
and
mov
sbb
jg
ljmp
mov
mov
ss
test
push
adc
sub
xor
jmp
insb
adc
ljmp
inc
pop
mov
fadd
insl
dec
call
fdivrl
ljmp
fimull
cmp
mov
xchg
mov
inc
xor
insb
lock
je
cmp
adc
jne
inc
push
in
xchg
adc
xor
inc
test
pop
pop
jecxz
sub
push
add
sahf
in
rorb
lahf
adc
js
test
ljmp
push
fnstenv
int3
dec
mov
je
mov
test
sbb
mov
ljmp
inc
orl
stos
negb
pop
je
xor
mov
xchg
and
lods
adc
call
div
negb
add
test
pop
loopne
dec
jnp
daa
cli
jb
popa
dec
ret
out
movsb
incb
outsb
outsb
adc
roll
ds
cli
test
cmpl
pop
xchg
add
mov
cmp
pop
lea
sbb
mov
ret
cwtl
mov
test
xchg
data16
pop
fs
fiadds
push
loop
push
adcb
mov
outsb
inc
mov
push
fcmovbe
shll
xor
jge
add
das
sbb
add
jp
andb
jmp
pushf
out
xor
sbb
dec
stos
in
jg
sub
adc
mov
andb
push
push
xlat
or
mov
jo,pn
enter
insl
xchg
in
push
sti
gs
inc
add
out
shrl
mov
adc
mov
scas
mov
loop
sahf
or
xor
push
outsl
inc
inc
mov
bound
ljmp
add
movb
pop
push
loop
mov
and
adc
mov
in
shr
stos
push
scas
lds
shll
rorb
jmp
fisttpl
xor
in
inc
mov
int
mov
jp
lods
loopne
lods
push
jl
imul
rorl
mov
jle
out
fsubl
sub
cld
push
xchg
notb
jno
push
jbe
cmp
sbb
ds
mov
xor
movsb
ljmp
mov
pushfw
ret
test
inc
mov
push
rol
pop
adc
push
ds
inc
mov
rorb
ds
and
shr
call
ds
nop
push
lods
or
dec
std
call
xor
sub
pop
pop
inc
or
inc
fnstsw
fistpl
push
cmc
or
mov
test
lock
push
and
sbb
std
push
pop
pop
mov
pop
xchg
push
jg
fists
ljmp
aad
arpl
push
mov
push
jmp
mov
xchg
mov
aam
jp
xor
pusha
test
jecxz
popl
push
fwait
or
pop
sub
vsubss
mov
imulb
pushf
cmp
lods
pop
mov
xchg
insl
jg
push
jne
pop
cmp
and
dec
sbb
js
test
jne
clc
scas
jp
cmp
lret
or
cwtl
mov
jb
bound
nop
adc
jmp
loopne
lock
js
adc
ljmp
push
pusha
lea
loopne
inc
stos
xlat
jmp
mov
lahf
add
les
or
lret
or
pop
loope
sub
iret
fistl
jo
leave
or
and
and
mov
xchg
adc
pop
and
inc
fwait
cmp
jmp
ficomps
je
sahf
pop
dec
out
inc
enter
out
add
adc
lods
into
insb
outsb
mov
stos
es
cwtl
push
and
daa
cmp
adc
adc
ljmp
cmp
mov
adc
lcall
ficoms
fisttps
lea
pop
or
inc
ss
push
xchg
ljmp
in
push
repnz
adc
xchg
sbb
addl
mov
decb
les
push
mov
pop
clc
push
or
xor
push
leave
in
stos
adcb
fisubl
adc
sbb
inc
xchg
mov
data16
js
pop
adc
inc
cmp
sbb
dec
dec
adc
ret
aaa
js
fmul
movsl
lcall
ret
push
clc
jo
mov
mov
dec
adc
test
je
jle
mov
insb
adc
xchg
adc
test
xlat
daa
pop
outsl
into
adc
scas
loopne
ss
clc
aas
mov
mov
push
sbb
mov
jl
mov
mov
sub
rcr
mov
aaa
stos
sbb
xchg
subb
ret
push
dec
pop
lock
sub
mov
push
mov
cs
mov
cltd
jbe
sub
call
pusha
add
pop
pop
push
pop
popa
test
js
ret
mov
fcomps
test
pushf
mov
scas
int
push
mov
xlat
nop
cmp
inc
call
aam
scas
sub
leave
or
jl
fists
mov
mov
mov
jo
or
inc
xorb
call
dec
adcb
hlt
jo
je
in
jg
fmul
adcb
hlt
rolb
fdivs
adc
lret
xor
cmp
adc
push
xchg
xchg
test
sub
jl
xor
cltd
push
inc
inc
add
add
es
fwait
scas
scas
data16
orl
pop
addr16
data16
rcl
lds
mov
dec
std
fbld
fsubp
nop
mov
inc
lods
push
lahf
adc
cwtl
enter
mov
inc
pop
adc
jbe
ret
and
loop
pop
jae
test
xchg
fdivs
in
mov
sbb
les
enter
jo
ret
femms
into
jle
lcall
push
cmp
scas
imul
nop
pop
xchg
push
test
or
push
adc
cld
rcl
push
lret
sub
xor
shl
xchg
cmp
lods
xor
stc
or
aam
inc
pop
movsb
aam
push
cli
mov
test
addr16
scas
cmpsb
mov
xorl
cmp
cmp
inc
das
cli
sbb
inc
lret
mov
test
ljmp
mov
jp
mov
mov
pop
mov
mov
or
movsb
or
filds
adc
xchg
loopne
lret
sahf
fmuls
mov
lock
and
lock
pop
enter
std
xchg
push
and
ficoml
int
pop
jmp
ds
jae
lods
sbb
xor
test
inc
insl
mov
cltd
call
xchg
shl
jl
inc
lahf
mov
repz
shlb
psubb
lcall
popa
jge
pop
push
mov
jb
gs
push
cli
movsl
addl
dec
faddl
cli
stos
test
and
push
in
dec
in
cmp
lcall
pop
int3
imull
sbb
xor
add
inc
pop
push
fldl
xchg
sti
sub
inc
mov
mov
xor
sarb
and
or
xor
js
sbb
out
push
rcrb
pop
pop
fcmovbe
nop
xor
push
in
xchg
push
cmp
and
push
dec
filds
out
jno
mov
inc
aad
mov
jb
mov
xlat
jmp
sub
enter
lret
jg
les
mov
pop
in
sbb
pop
ja
mov
sahf
or
cmp
je
cmp
aad
leave
arpl
mov
add
dec
mov
leave
stos
std
shlb
pop
ret
lods
lret
outsb
test
mov
mov
cmpsb
cli
pop
adc
mov
repz
fisubrl
dec
mov
pushf
cmp
sbb
addr16
xchg
sahf
lock
push
outsl
mov
fwait
jp
test
scas
scas
cs
dec
pushf
in
push
mov
and
sti
scas
jnp
pop
dec
dec
rol
fsubl
subb
cmp
dec
into
test
inc
push
push
pusha
cmpl
ss
or
jle
inc
fisubl
scas
xor
ljmp
lock
insl
leave
cld
mov
push
xor
icebp
push
and
pop
in
sbb
mov
push
cmp
cmc
frstor
insb
pop
pop
sub
inc
gs
pop
test
loopne
repnz
arpl
xchg
xor
add
notb
scas
mov
rorb
xor
rcrb
test
dec
adc
sbb
adc
mov
push
je
lcall
insl
jo
sub
add
call
mov
adc
dec
mov
scas
cmp
mov
xor
cmpb
and
ljmp
in
and
and
and
jo
mov
jp
pop
sbbl
adc
push
jae
adc
mov
and
out
mov
sbb
call
dec
ret
lods
mov
mov
sti
test
sub
push
rcrl
ss
fcoms
lods
shlb
loope,pt
out
mov
xor
test
leave
push
fnstcw
mov
rcrb
test
addr16
cmpl
mov
mov
mov
mov
add
push
sub
add
les
loop
test
addr16
sbb
mov
scas
out
pop
ror
ret
sub
cmp
push
push
adc
js
mov
sarb
je
cmp
jo
sub
rol
js
push
inc
decb
in
insb
sbb
test
and
cmpsb
out
es
pop
cltd
test
jbe
push
jne
mov
and
pop
das
movsb
push
adc
lods
mov
or
xchg
push
adc
out
add
call
add
adc
enter
push
xchg
sub
in
rcrl
push
adc
in
add
out
cmp
in
sub
mov
cmp
dec
std
pop
into
loopne
imul
aaa
and
xchg
mov
cmpsl
add
icebp
movsl
push
imul
or
enter
ljmp
and
clc
sahf
adc
inc
adc
js
sahf
push
ss
push
push
inc
xchg
adc
hlt
xor
mov
into
and
mov
loopne
xchg
int3
inc
jecxz
negb
mov
pop
xchg
cmp
sub
sbb
test
sub
addl
enter
mov
sbb
push
inc
jmp
inc
mov
sbb
inc
push
rorl
aad
mov
aad
push
or
call
hlt
aam
inc
ljmpw
bound
cmp
sub
inc
dec
mov
jp
test
adc
mov
in
cmp
cmpsb
jp
pop
rclb
inc
aam
mov
mov
xchg
js
and
pop
cld
or
cmc
sbb
add
inc
cld
or
sub
push
mov
icebp
or
mov
and
or
jne
or
loop
dec
std
fildll
sbb
or
addr16
dec
loopne
sbb
imul
fwait
or
data16
add
xchg
mov
fs
dec
incl
mov
jns
add
xor
add
sbb
loop
stos
roll
adc
jle
pusha
pop
ja
insb
movsb
lcall
xor
rcrl
mov
inc
outsl
jp
shr
je
test
call
mov
in
hlt
push
cmpsl
pop
movsb
mov
iret
ja
push
add
leave
repnz
outsb
mov
ja
jbe
pop
sahf
sbb
ret
mov
cmpsl
sbb
push
or
sub
popf
push
cmpsl
adc
btrl
outsb
mov
ret
mov
inc
xchg
les
stos
or
push
test
push
clc
xchg
in
test
jae
loopne
fcoms
jg
ret
jbe
test
or
dec
fcmovb
sub
mov
push
shlb
dec
clc
aam
push
pop
push
push
das
mov
loop
pusha
mov
xlat
lock
pop
pop
fidivs
fcompl
adc
push
movsb
mov
ljmp
js
push
std
pusha
jno
push
rolb
xchg
ljmp
xchg
xchg
cmp
push
xor
push
dec
in
cli
pop
xor
pop
clc
push
fisubs
subb
dec
or
fidivs
cmpsl
push
nop
mov
ds
test
ret
ljmp
push
cli
shl
jns
pusha
adc
push
or
movsb
xorb
xor
sub
or
add
dec
push
sbb
add
and
shrb
sub
lret
ljmp
out
subl
add
mov
out
lret
xor
aaa
mov
testb
scas
mov
sub
lds
call
cmp
scas
jo
gs
mov
outsl
cld
add
fstl
cld
mov
decb
cmpsb
aas
jno
loop
test
clc
test
pop
mov
push
xor
cs
add
mov
aad
push
jl
push
push
loop
mov
dec
inc
jecxz
push
std
inc
mov
int3
addr16
or
jge
xchg
cmp
mov
add
stos
adc
out
and
movsb
adc
lret
push
adc
cld
lds
ss
div
call
add
movsb
and
sbbb
push
and
iret
out
shlb
scas
push
syscall
test
jbe
mov
out
das
push
lods
mov
adc
jmp
sbb
lahf
dec
ljmp
push
sahf
loope
mov
je
jb
push
or
inc
push
sarb
std
hlt
shrl
inc
cmp
aam
out
sbb
jne
mov
js
mov
mov
sbb
mov
loope
add
mov
data16
and
sarb
mov
dec
popf
inc
and
pusha
dec
popa
orl
fldcw
cltd
pop
fwait
aam
push
jno
incb
fdivr
mov
addw
adc
rolb
out
push
or
mov
or
mov
dec
sbb
or
dec
mov
cwtl
inc
inc
pop
fs
int
dec
sub
jle
clc
add
inc
or
jle
data16
cmpsl
and
pop
icebp
pop
mov
sbb
push
mov
sub
lea
ja
sbb
ds
and
mov
call
outsl
jp
int
push
in
mov
dec
rorb
cmp
mov
sbb
cmpsb
pushf
sbb
scas
xchg
or
pop
xchg
shl
imul
test
shll
ret
xor
aad
mov
ds
adc
jns
dec
mov
xlat
ret
js
cld
xchg
mov
rolb
jbe
gs
mov
cmp
shll
push
push
xor
cmp
xor
push
mov
sbb
or
fdivr
pop
cli
xchg
mov
ficoms
stos
xlat
lcall
loopne
sahf
arpl
add
dec
mov
ljmp
cmp
fdivrs
cmp
pushf
sub
out
dec
lods
and
cmp
rolb
pop
pop
loopne
add
and
loopne
cmpsl
and
jo
cs
je
pop
popf
lock
sahf
sbb
pop
mov
lds
inc
imul
fidivl
or
mov
into
loopne,pt
push
xchg
bound
sti
push
inc
popf
and
in
xchg
insb
movsl
add
lret
dec
cmp
lds
jge
jbe
jg
xchg
sub
add
repnz
push
mov
inc
push
mov
jp
outsb
push
mov
mov
xor
cld
jg
movsb
loopne
push
or
int
push
cli
mov
adc
out
mov
adc
push
sbb
outsb
pop
push
jb
mov
lock
sub
cmp
fdivs
mov
xor
sub
lods
push
sub
ss
or
and
push
sbb
stos
shlb
je
lea
sub
add
jl
jno
rcl
test
inc
adc
shrb
loop
sub
dec
add
pop
mov
or
notb
adc
imul
mov
xchg
lahf
xchg
add
lcall
mov
jmp
push
jnp
sarl
push
dec
and
push
add
addb
aam
leave
outsb
mov
sub
rcrl
sbb
pusha
jne
andb
in
in
pop
dec
cmpxchg
jp
test
lods
mov
mov
pop
mov
push
mov
shlb
outsb
cmc
xorb
scas
jmp
add
stos
jl
push
mov
jae
out
cwtl
test
jle
sarb
jae
sub
pop
lcall
outsb
mov
xor
frstor
dec
mov
push
xchg
push
sti
in
aad
sub
inc
mov
xchg
jmp
pop
xchg
ds
sbb
mov
call
ret
test
mov
loop
rolb
pop
scas
imul
shrb
fstpt
pop
jb
sbbb
pop
fucomp
pop
hlt
lods
and
and
cs
int
cmp
sbb
or
xchg
adc
fwait
clc
pop
loop
scas
or
sbb
add
sub
addr16
orps
mov
test
sub
fistl
or
adcl
aaa
data16
and
sub
cmp
pop
aam
data16
push
es
pusha
dec
jmp
add
test
push
pusha
ljmp
or
shll
enter
rolb
and
jo
outsl
lret
inc
mov
adc
pop
xor
sahf
xlat
push
xorl
loope
jnp
fdivl
das
std
scas
shlb
push
pusha
mov
jns
daa
cs
cmp
out
cmp
rol
divb
pushf
imul
je
pushf
movsl
cli
js
cmp
cli
jbe
lock
adc
jle
stos
mov
loop
mov
push
outsb
cli
mov
mov
fisubrs
or
sahf
pop
ror
decb
adc
hlt
add
mov
add
movsl
mov
pop
negl
xlat
pop
push
hlt
lret
add
sub
mov
js
fcmovu
test
add
mov
repz
jle
adc
mov
or
sbb
sbb
mov
stos
mov
repz
shlb
dec
push
and
rorb
negb
loopne
push
pop
xchg
cmp
xchg
fildll
xor
mulb
in
icebp
pop
icebp
xchg
xlat
mov
int
into
cmc
pushf
xor
inc
pop
sub
sahf
mov
ds
mov
and
jp
mov
sahf
and
movsb
inc
aaa
out
shll
cwtl
out
inc
xor
fdiv
jae
inc
fwait
mov
or
pop
bnd
cmpsl
sub
orb
xchg
out
aam
cmc
and
adc
push
pop
sub
inc
push
mov
sub
mov
xorl
inc
push
mov
arpl
dec
cmp
loope
mov
lret
jbe
pop
sahf
mov
add
jge
and
movsb
or
ss
adc
cmc
mov
mov
cmp
pop
add
std
adc
dec
push
sub
shrl
mov
push
ror
push
stos
in
sub
push
in
inc
push
push
loope
dec
insl
cmp
mov
or
inc
sub
sbbl
dec
loop
scas
mov
repnz
and
mov
mov
mov
insb
cmp
sub
stos
or
dec
jle,pn
in
addl
rcr
mov
xor
add
je
lds
add
and
sbb
ss
icebp
add
pop
push
rol
idivb
mov
dec
movsl
std
xorb
lock
mov
adc
clc
aaa
rorl
add
xchg
das
dec
lds
mov
das
or
rolb
xor
inc
jmp
addb
push
mov
xchg
push
shlb
dec
or
cmp
ss
aas
add
cmp
push
pusha
dec
hlt
or
or
movsb
sbb
xchg
cli
sbb
add
cmpsb
ljmp
test
jecxz
jl
mov
inc
into
inc
inc
xor
insl
dec
lock
popf
add
out
and
cmp
fcomip
add
xchg
ret
fsubr
or
sahf
scas
scas
arpl
rcl
adc
popf
add
icebp
imulb
jge
clc
orb
aas
fcoml
pop
pop
push
test
mov
pop
xchg
jg
or
lods
push
dec
mov
ret
inc
mov
and
xchg
inc
ja
add
adc
lcall
pop
dec
add
aaa
jae
insl
push
adc
rorl
and
xchg
inc
test
fwait
pushl
lahf
cwtl
or
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
gs
dec
aam
jo
add
je
outsl
fs
aaa
jge
in
inc
and
inc
popa
fs
je
imul
push
in
mov
jae
imul
jns
and
gs
push
dec
in
jg
outsl
jp
imul
push
arpl
sub
std
mov
cmp
mov
push
popa
imul
mov
and
bound
adc
imul
push
dec
dec
popa
insl
lcall
jne
in
mov
je
jb
mov
popa
jae
inc
sub
push
out
rcrb
int
pusha
unpcklps
sub
jp
outsb
cmp
jbe
jo,pt
inc
pop
sbb
add
jb
and
push
imul
pop
pop
roll
push
inc
inc
gs
mov
ljmp
cmp
jne
push
data16
add
mov
push
pop
rorb
jne
fstpt
inc
je
bound
in
jo
out
mov
test
add
iret
cs
push
test
adc
cmp
sarb
jb
push
sub
fisttpll
scas
rcll
fs
insb
cmp
int3
and
bnd
push
jl
test
push
push
push
popa
je
adc
sarl
jb
inc
aas
sub
int3
mov
and
jb
cmpsb
fs
jbe
sbb
or
dec
xor
fdivrs
push
mov
cld
push
test
imul
inc
das
je
cmp
out
push
outsl
imul
and
fisubl
xchg
jecxz
push
pusha
cmp
jle
pop
xor
roll
xchg
enter
cmp
je
cld
jb
and
frstor
push
add
cmp
inc
ja
adc
repnz
fmull
push
dec
jbe
jne
popf
jne
jo
pop
inc
cmp
xchg
push
ds
insb
adc
imul
fnstenv
pop
inc
out
sarl
outsb
insl
mov
xor
pop
lods
pop
loopne
mov
imul
ret
mov
jae
adc
inc
mov
add
add
push
arpl
iret
sahf
bound
inc
inc
push
fmul
xchg
loope
mov
outsb
sub
ss
stos
int
enter
andl
and
or
cmp
jb
inc
lea
movhps
popa
ds
inc
dec
inc
sub
xchg
movsl
imul
dec
shrl
loop
pop
adc
arpl
mov
inc
mov
je
call
jo
pop
inc
fs
mov
xor
jp
loope
sbb
push
sbb
out
jno
push
outsb
psubusw
out
enter
push
inc
add
jns
lahf
cli
push
inc
jae
insl
cmovs
shrl
js
jl
jae
testb
xor
cmp
and
and
scas
jae
adcl
dec
je
and
mov
pusha
imul
cmc
out
pop
movsb
sbb
jl
movsb
jno
sub
add
inc
jb
or
loope
mov
aaa
gs
rcll
mov
jbe
call
ss
addr16
cmpb
inc
imul
push
outsl
insb
push
in
int3
mov
pop
cmpsb
arpl
and
inc
fsubs
bound
mov
pusha
js
dec
mov
call
and
inc
je
add
call
gs
cmp
arpl
push
cmp
mov
mov
xor
pop
loop
and
dec
sbb
je
and
adc
add
xchg
xchg
inc
inc
mov
arpl
inc
pop
loope
sbb
cmp
xor
xlat
inc
mov
inc
leave
add
insb
and
insb
andb
sbb
roll
mov
ret
push
ja
popa
loop
mov
in
out
shlb
cmp
dec
cli
push
adc
daa
mov
pop
icebp
pop
xchg
mov
cmpl
push
push
inc
jno
pushf
xchg
aas
out
jg
insb
mov
jae
mull
flds
xor
loopne
jle
push
ds
scas
shlb
and
mov
sub
push
imul
pop
lcall
or
out
jnp
cmp
push
fnstsw
rolb
fiaddl
dec
fidivl
inc
mov
sbbb
shlb
cmpsb
outsl
js
fsubrl
mov
push
aaa
mov
dec
pop
idiv
mov
cmp
inc
push
inc
mov
mov
xor
mov
push
scas
outsl
es
outsl
outsl
data16
pop
sbb
mov
jecxz
dec
sahf
pop
enter
and
push
xor
push
cltd
add
mov
movsl
mov
repz
ljmp
push
out
jmp
rcl
fldl
outsb
mov
mov
rcll
mov
mov
sub
add
jl
addr16
nop
sbb
out
adc
jb
mov
sub
xchg
jnp
push
or
ss
adc
out
push
int3
sbb
inc
mov
ljmp
cmp
inc
in
adc
loope
cmpsb
in
lcall
sbb
push
arpl
daa
rolb
sti
dec
and
jmp
mov
fwait
push
jne
mov
xchg
int
popa
add
adc
xor
bound
and
mov
mov
dec
popa
sbb
mov
or
sub
jle
sbb
hlt
dec
cmp
pop
rcl
mov
inc
push
ret
inc
xchg
inc
add
inc
adc
xchg
mov
enter
mov
jnp
mov
adc
ss
mov
push
push
sub
cmp
jb
jno
movsl
push
cwtl
sbb
push
push
xchg
jae
jo
jge
xchg
dec
data16
lahf
inc
scas
dec
test
stos
push
jns
and
cmp
inc
or
xorl
icebp
adc
insl
dec
jns
xor
xor
adc
push
push
daa
jb
aas
xlat
hlt
pusha
mov
or
cmp
in
outsl
dec
aam
je
push
imul
or
shlb
lock
sub
inc
arpl
push
ret
add
ss
out
in
hlt
or
sub
rolb
pop
fisttpll
or
add
inc
adc
inc
xchg
cld
jbe
andb
cmpsb
mov
ljmp
cmc
sub
xchg
sub
push
fstps
mov
sahf
mov
dec
andb
xor
sbb
outsb
loop
jle
dec
lret
inc
push
dec
add
adc
inc
das
jmp
inc
outsl
loopne
sidtl
add
xor
lret
xchg
adc
data16
add
sbb
data16
addb
adc
cmpsb
pop
movsl
popf
clc
adcl
and
sub
lea
imulb
xorb
lock
fiadds
add
mov
and
jmp
pop
negb
movd
fstpl
insb
jnp
cs
inc
pop
mov
mov
dec
rcrb
out
adc
std
invd
xor
xchg
and
clc
mov
add
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
aad
out
imul
in
pop
ja
insb
imul
pop
push
insl
xor
fs
cmc
or
mov
mov
xchg
inc
je
xchg
adc
add
stos
sbb
lret
cmp
pandn
mov
lods
out
hlt
xchg
jbe
test
mov
jbe
dec
mov
lock
testb
je
or
mov
jmp
mov
sbb
pop
add
andl
cmp
xlat
outsl
inc
pusha
sub
cmc
aam
pop
pop
adc
outsl
or
pop
inc
or
rcll
mov
in
mov
dec
fwait
mov
jb
in
rolb
mov
lret
imul
dec
jle
mov
pop
dec
mov
dec
outsb
or
sbb
js
pop
add
or
in
sub
cmp
daa
inc
ficoml
pop
jae
dec
xchg
arpl
mov
mov
sbb
stc
inc
jnp
ljmp
mull
sbb
xor
or
push
push
add
mov
sub
jle
jmp
xchg
xchg
xor
stos
jno
cmc
and
pop
add
iret
outsb
ret
mov
cmp
mov
and
adc
cmp
call
xor
jnp
dec
divl
cmpsb
subl
lock
aaa
dec
stos
sbb
enter
and
xchg
sbb
sub
push
rcl
lcall
jp
arpl
push
fidivs
lret
and
adc
push
pop
pop
sti
inc
clc
cmp
cmp
add
mov
iret
sub
jecxz
push
stos
int
inc
jg
add
add
add
add
xor
add
rolb
add
adc
add
push
add
addb
add
add
add
pop
add
addb
add
addb
addb
add
test
add
add
add
sbb
add
add
xchg
xchg
xor
lock
add
add
add
add
add
xchg
xor
xor
add
sbb
add
add
add
test
add
sbb
add
add
add
add
add
add
addb
add
sbb
add
add
add
shlb
xor
add
add
add
sub
add
add
add
sbb
add
add
xor
xor
inc
add
add
add
add
add
add
add
add
add
sbb
add
les
add
add
nop
and
add
add
add
add
add
add
add
sbb
sar
addr16
out
jle
cli
xlat
ljmp
jg
std
idivl
repz
std
sti
fstpt
repz
sti
cmc
sarl
sti
sti
gs
jg
fistpll
xlat
jnp
add
idiv
jne
in
jg
xlat
jnp
repz
sti
jnp
xlat
cli
neg
cli
insl
xlat
jnp
sti
jnp
repz
jne
push
xlat
outsl
repz
fstpt
xlat
sti
ja
sti
jge
add
jp
fstpt
push
std
jg
jnp
idiv
insl
sar
addr16
jle
repz
jge
jp
jge
jnp
repz
out
sti
addr16
in
sar
jg
add
ljmp
out
jnp
repz
idivl
fstpt
fstpt
jnp
idivl
fistpll
sar
jge
cli
jge
jnp
cli
in
jle
sarl
sarl
jg
add
push
sti
cmc
sarl
fistpll
sti
out
repz
ja
jnp
repz
std
xlat
jnp
idivl
idiv
out
pushl
jmp
xlat
jle
repz
xlat
jge
jle
add
jp
sti
sti
insl
idiv
not
jnp
repz
sarl
idiv
neg
jg
jnp
sti
jnp
jg
ja
cli
cmc
fstpt
std
fstpt
addr16
in
add
in
jg
in
out
sar
out
cli
cmc
sar
in
not
jp
sarl
jg
jg
repz
out
cli
call
sti
insl
fistpll
sti
cli
call
cli
testl
in
cli
jg
jp
sti
jnp
sti
jg
insl
idivl
repz
sar
in
jnp
jle
fistpll
fstpt
xlat
jle
jne
jle
xlat
jg
add
xlat
jg
fistpll
repz
xlat
jp
gs
sti
jg
sti
jle
sarl
sti
jle
repz
sar
jg
jle
xlat
cli
outsl
jle
sarl
idiv
jge
sti
testl
in
in
jle
insl
xlat
jp
sar
outsl
idiv
out
idivl
idivl
idiv
xlat
ljmp
jnp
idiv
idiv
sti
out
cli
sti
jle
in
add
sti
out
out
xlat
jnp
xlat
cli
outsl
cli
div
jg
sti
jge
jle
sti
jne
jnp
xlat
std
out
sti
jge
cli
not
push
std
xlat
jp
jle
add
xlat
jg
sti
sti
out
jp
repz
repz
in
repz
gs
jmp
jg
fistpll
sti
jle
sti
sti
out
jp
xlat
jge
jmp
jnp
fistpll
xlat
cli
in
add
jp
idivl
xlat
cli
in
insl
idiv
insl
sti
sti
ja
ljmp
jnp
fistpll
sar
jg
jle
jg
xlat
gs
push
sar
std
repz
sarl
fistpll
add
idivl
xlat
jg
idiv
out
std
repz
fstpt
repz
sti
jnp
xlat
jle
sti
jp
repz
out
jge
jg
sti
jne
jle
sar
insl
outsl
jge
add
sti
addr16
addr16
cli
jge
jp
sarl
fstpt
out
sti
outsl
sti
sti
outsl
outsl
xlat
jle
gs
out
sti
jnp
xlat
cli
xlat
jnp
xlat
cli
add
gs
in
ljmp
sti
std
cmc
xlat
jg
jge
jg
sar
jne
std
sti
jle
idiv
fstpt
sti
sti
cmc
xlat
jp
idivl
repz
sti
out
add
repz
push
jg
in
xlat
cli
out
repz
sarl
fstpt
idivl
not
in
fstpt
repz
sarl
fistpll
fistpll
repz
out
sti
jle
add
in
sti
pushl
jp
jg
sti
jle
sarl
repz
gs
cmc
idivl
jg
jnp
xlat
sti
call
jge
cli
in
idiv
out
repz
add
andb
add
add
add
add
add
add
add
and
xchg
outsb
add
cld
add
out
add
imul
add
xlat
outsb
add
fdivrp
add
ljmp
fucomip
in
add
fisubrs
in
add
idivl
out
out
add
iret
jl
xchg
fdivrp
add
out
add
out
incb
faddp
out
add
iret
incl
lahf
jg
mov
incb
xlat
ljmp
mov
jge
xchg
out
insb
add
out
add
jle
xchg
add
iret
jge
out
add
out
add
incl
xchg
iret
out
add
into
in
add
xlat
cld
add
idiv
add
in
add
iret
cld
add
in
add
imull
imulb
xlat
xlat
std
add
jge
fucomip
out
add
fucomip
add
imull
xchg
xlat
jle
call
cld
add
insb
add
fsubrp
add
incl
fisubrs
dec
jg
xlat
idiv
add
in
add
imul
add
out
std
add
idivb
std
add
imulb
xlat
out
outsb
add
incb
sahf
idiv
add
xlat
out
add
out
insb
add
outsb
add
std
add
out
add
in
add
out
jl
test
std
add
out
in
add
iret
insb
add
out
add
out
std
add
jl
mov
out
out
add
idivb
fdivp
in
add
out
insb
add
out
insb
add
idivb
xchg
out
add
in
add
xlat
out
add
out
add
outsb
add
out
jl
fdivrp
add
out
add
incl
mov
insb
add
outsl
add
into
in
add
fistpll
mul
jg
xlat
iret
in
add
ljmp
fistpll
fsubrp
insb
add
fdivrp
add
cld
add
fidivrs
xlat
jl
fdivrp
jle
insl
add
insb
add
iret
outsb
add
out
incl
jmp
jle
out
insb
add
out
jg
sahf
fidivrs
lahf
outsl
add
out
std
add
add
outsl
add
out
add
insl
add
incb
xchg
in
add
fildll
mov
insb
add
out
out
add
out
add
imul
add
fildll
idivl
lahf
out
in
add
cld
add
fucomip
add
iret
outsl
add
out
add
out
cld
add
outsb
add
jg
mov
out
add
xlat
in
add
out
add
iret
out
add
out
add
imulb
xchg
out
incl
sahf
out
cld
add
fisubrs
xchg
fidivrs
outsb
add
out
in
add
jge
mov
incl
lahf
std
add
out
insl
add
ljmp
out
add
out
insb
add
fistpll
test
add
imull
xlat
in
add
out
add
out
add
jge
incb
fdivrp
outsb
add
idiv
add
imulb
neg
in
add
out
add
out
add
add
out
add
idiv
add
idiv
add
fsubrp
add
xlat
out
add
out
add
fisubrs
xlat
out
jle
out
in
add
iret
in
add
into
jge
out
add
xlat
outsl
add
fdivrp
add
out
insb
add
out
jl
xlat
incb
sahf
cld
add
xlat
in
add
ljmp
out
add
into
jg
mov
add
jl
lahf
fidivrs
xchg
into
out
add
into
jle
fsubrp
jg
mov
out
add
out
add
out
jl
lahf
out
outsb
add
fucomip
add
out
add
into
jl
sahf
out
add
imull
xchg
jle
imul
outsb
add
jl
xchg
add
jl
mov
outsl
add
idivl
mov
outsl
add
fildll
jmp
incl
out
jle
xchg
fsubrp
add
jge
mov
in
add
imul
add
out
add
iret
jle
mov
insb
add
out
add
iret
jge
fmulp
out
add
outsl
add
out
out
add
imulb
xlat
iret
outsb
add
out
incl
xchg
in
add
out
add
incb
cld
add
out
add
out
add
fucomip
add
imull
fidivrs
xlat
into
out
add
jg
xlat
imul
add
xlat
outsb
add
out
add
out
add
out
jg
ffreep
outsb
add
out
add
fucomip
add
out
insb
add
iret
out
add
out
add
into
insb
add
out
jg
lahf
imul
add
idiv
add
in
add
imul
add
into
outsb
add
out
add
out
add
out
add
jge
neg
jle
xchg
jl
fucomip
outsl
add
insb
add
idivl
div
jge
jg
div
incl
xchg
xlat
incl
mov
jl
mov
jle
out
jg
lahf
jl
out
incl
test
std
add
out
add
out
add
jge
lahf
out
incb
sahf
idiv
add
imul
add
into
out
add
out
jg
imul
outsb
add
out
add
out
out
add
into
jg
div
out
add
out
add
add
out
add
incl
mov
incb
inc
in
add
iret
incb
mov
outsb
add
out
add
out
add
out
add
fildll
xchg
add
fdivrp
add
out
in
add
incl
out
add
out
incl
incl
dec
outsb
add
out
cld
add
jl
div
in
add
jle
in
add
out
outsl
add
idiv
add
out
out
add
out
add
outsl
add
out
outsb
add
outsl
add
out
outsl
add
incb
jmp
std
add
jg
xchg
out
add
fsubrp
add
outsl
add
idivl
out
add
fdivrp
add
imull
mov
in
add
outsl
add
out
add
fisubrs
in
add
xlat
jg
sahf
jge
outsb
add
fucomip
add
idivb
idiv
jl
jg
dec
outsl
add
out
add
iret
insl
add
outsb
add
xlat
out
add
fildll
call
insb
add
out
add
add
jg
xchg
outsb
add
jg
out
add
out
jge
ffreep
insb
add
into
outsl
add
out
add
xlat
out
add
jg
xlat
jl
xlat
imul
add
jl
mov
jg
lahf
incb
imul
jl
mov
jl
mov
insl
add
out
outsl
add
fucomip
add
insb
add
fdivrp
add
out
jg
xchg
xlat
std
add
idiv
add
fildll
iret
outsb
add
idiv
add
out
jge
xchg
xlat
incl
jmp
out
add
insb
add
imul
add
imull
sahf
ljmp
out
add
imul
add
iret
insb
add
into
cld
add
iret
cld
add
out
add
outsb
add
into
incl
idiv
incl
jg
mov
in
add
into
out
add
out
add
xlat
jle
lahf
xlat
incb
mov
in
add
outsb
add
xlat
jle
xchg
iret
incl
test
add
into
jge
neg
insl
add
iret
outsb
add
fistpll
out
jge
mov
outsl
add
fisubrs
mov
out
std
add
xlat
std
add
imulb
into
jg
lahf
out
add
xlat
cld
add
jg
insl
add
jle
mov
fucomip
add
out
insb
add
fucomip
add
jge
fisubrs
mov
out
add
iret
incl
mov
fildll
incb
iret
jge
xlat
jge
mov
jg
test
out
add
in
add
fisubrs
inc
outsb
add
out
insl
add
outsb
add
idivb
mov
jg
mov
fidivrs
lahf
out
in
add
out
add
out
out
add
in
add
incl
mov
in
add
jle
mov
jl
xlat
out
add
jg
xchg
ljmp
outsb
add
outsb
add
idivl
lahf
incb
sahf
imull
mov
outsl
add
fidivrs
fucomip
add
jle
xlat
into
jle
mov
add
fildll
fmulp
jle
not
cld
add
xlat
cld
add
into
in
add
idiv
add
cld
add
jge
mov
idivl
outsb
add
fistpll
test
jle
imull
jmp
jle
xlat
imul
add
out
add
out
add
idivb
mov
jg
xchg
out
insl
add
add
into
incb
ffreep
outsl
add
out
incl
neg
cld
add
out
outsl
add
idiv
add
imul
add
insl
add
out
jg
push
outsb
add
imulb
inc
cld
add
in
add
out
add
idiv
add
fsubrp
add
insl
add
out
add
incl
mov
out
jg
ljmp
xlat
add
jge
imul
add
imull
jle
lahf
jle
imul
out
add
fistpll
mov
insb
add
outsb
add
out
add
jl
lahf
into
in
add
out
std
add
out
add
insl
add
jge
call
jg
xchg
out
add
idivl
mul
jge
push
insb
add
imul
add
imul
add
ljmp
idiv
add
out
out
add
idivb
faddp
in
add
idiv
add
fidivrs
test
outsb
add
insl
add
in
add
incl
mov
cld
add
iret
in
add
add
idivl
mov
incb
mov
fidivrs
ffreep
std
add
xlat
jg
xchg
outsl
add
out
incl
out
add
imulb
lahf
out
jge
lahf
cld
add
fidivrs
idiv
in
add
fistpll
fsubp
jle
insb
add
iret
jle
xchg
into
jge
sahf
iret
out
add
out
insb
add
out
add
out
add
jge
idiv
in
add
out
incb
ffreep
out
add
xlat
cld
add
in
add
out
insb
add
fistpll
mov
insl
add
jge
out
in
add
fistpll
sahf
add
xlat
cld
add
insb
add
jge
dec
outsb
add
out
add
out
add
out
in
add
jg
fidivrs
xlat
add
out
add
fsubrp
add
out
add
fistpll
mul
jle
lahf
insl
add
idivb
fmulp
jge
lahf
into
outsb
add
std
add
out
insl
add
add
outsb
add
out
cld
add
into
incb
mov
out
add
out
add
out
add
jg
mov
jl
lahf
incl
jg
fucomip
add
out
in
add
fidivrs
mov
jl
mov
iret
outsb
add
into
jge
fisubrs
mov
in
add
idivb
in
add
out
insb
add
out
add
out
jg
lahf
jl
idiv
in
add
out
in
add
fistpll
xlat
incl
lahf
into
in
add
jl
sahf
out
out
add
out
std
add
xlat
jg
mov
fidivrs
mov
fsubrp
add
fidivrs
div
std
add
cld
add
fisubrs
div
jge
out
add
out
std
add
imul
add
into
outsb
add
incl
xchg
xlat
out
add
out
incb
lahf
incl
div
std
add
out
add
insb
add
fistpll
imull
out
jl
mov
outsl
add
out
cld
add
out
add
insl
add
out
cld
add
std
add
xlat
jle
outsl
add
out
add
into
std
add
idivb
std
add
out
jle
test
add
into
incl
mov
insl
add
xlat
incb
mov
out
add
incl
mov
out
add
jg
lahf
out
add
out
add
idiv
add
out
jge
div
insb
add
out
jg
insl
add
out
add
xlat
incb
fcomip
out
add
jge
mov
outsb
add
ljmp
idivl
mov
jge
xlat
jg
test
outsl
add
out
add
idivl
neg
out
add
into
out
add
xlat
cld
add
xlat
cld
add
out
out
add
jg
mov
out
add
outsb
add
ljmp
out
outsl
add
out
add
idivl
mul
insb
add
out
add
incb
mov
out
add
imul
add
imul
add
iret
incb
fdivp
outsl
add
insl
add
ljmp
add
fistpll
cld
add
out
out
add
jge
imul
in
add
out
add
into
out
add
jge
test
add
incb
push
jge
xlat
imul
add
add
outsl
add
into
insb
add
xlat
incl
lahf
out
add
jle
xchg
jge
xchg
outsb
add
iret
insb
add
out
add
imull
xchg
jl
mov
incb
mov
cld
add
imulb
imul
add
in
add
out
add
imul
add
iret
in
add
out
incl
fsubp
jle
out
jl
xchg
incl
lahf
xlat
cld
add
imulb
fsubrp
in
add
add
outsb
add
out
add
std
add
out
in
add
jge
mov
out
add
out
add
into
incl
xchg
iret
out
add
iret
outsl
add
out
std
add
out
out
add
iret
jle
sahf
imulb
lahf
out
add
out
in
add
incb
sahf
iret
jle
xchg
idivb
in
add
out
jg
lahf
imull
out
add
outsb
add
iret
incb
jge
neg
incl
out
std
add
fdivrp
add
out
add
incb
xlat
add
out
add
out
add
std
add
xlat
cld
add
xlat
out
add
out
add
incb
call
insb
add
in
add
into
cld
add
out
jg
ffreep
jle
idiv
in
add
iret
outsb
add
jg
mov
imull
xchg
out
cld
add
add
add
add
sub
add
pop
add
add
add
add
xlat
imul
fidivs
jae
mov
addr16
sti
out
mov
addr16
ljmp
repz
idiv
mov
ja
mul
mov
mov
jae
pushl
xchg
jg
xlat
jg
jg
sahf
jae
lahf
jg
idivb
xchg
sti
mov
ja
jnp
mov
pushl
jg
ja
idiv
out
repz
mov
jae
push
mov
pushl
jae
mov
ja
repz
mov
out
jmp
sahf
jae
jmp
jae
mov
scas
idiv
out
divl
jg
fidivs
fdivrp
outsl
xchg
pushl
jnp
mov
mov
repz
jae
fidivrs
fbstp
divb
idiv
jnp
fistpll
xchg
ja
idivl
xchg
jmp
jnp
lahf
idivl
lahf
jnp
repz
sti
out
fidivs
idivl
jnp
xchg
repz
mov
out
jg
idivl
sti
aaa
lahf
ja
mov
mov
jg
divl
xchg
jmp
mov
outsl
fdivrp
daa
xchg
sti
das
mov
daa
idiv
mov
jae
mull
jae
mov
daa
sahf
jae
jg
mov
ja
jnp
xchg
ja
mov
jg
jae
lahf
sti
mov
jae
xchg
jg
fidivrs
divb
lahf
repz
pushl
mull
jmp
sahf
ja
sahf
sti
jg
ja
mov
outsl
mov
addr16
repz
ja
mov
aaa
mov
out
fistpll
mov
out
jnp
idiv
aas
divl
sti
outsl
xchg
jnp
mov
ja
ljmp
jae
sti
cmpsl
mov
fistpll
mov
mov
ljmp
xchg
ja
lahf
out
fistpll
fidivrs
sahf
sti
aaa
imul
jnp
ja
sahf
jae
lahf
ja
fdivp
aas
idiv
ja
jae
fidivs
xchg
sti
negl
aaa
jg
mov
scas
xchg
repz
divl
repz
mull
mov
aas
mov
mov
jnp
xchg
sti
ja
repz
ja
mov
call
jg
xchg
ja
xchg
sti
scas
mov
cmpsl
fidivs
mov
daa
mov
mov
jae
fidivs
xchg
repz
ljmp
repz
sahf
sti
notl
out
fidivs
xchg
aas
mov
lcall
out
imull
jnp
jg
mov
aas
neg
sti
aas
mov
aaa
mov
ja
jnp
xchg
repz
repz
fdivrp
aas
fidivs
idiv
mov
ja
jnp
fdivrp
outsl
pushl
pushl
mov
ja
ja
lahf
pushl
jae
fidivs
lahf
jae
xchg
jnp
jnp
xchg
divl
ja
lahf
aas
xchg
divl
ja
idiv
aas
sahf
jnp
idiv
jg
jnp
div
mov
jg
lahf
jg
fidivs
jae
xchg
ja
xchg
sti
aaa
sahf
imull
jnp
sahf
sti
neg
mul
xchg
jae
mov
addr16
sti
aaa
lahf
jg
div
out
mov
outsl
mov
das
mov
daa
fidivrs
sti
aaa
mov
daa
fdivp
mov
mov
out
ja
mov
daa
fidivs
fdivrp
out
repz
jg
xlat
divl
fidivs
push
scas
mov
cmpsl
mov
aas
xchg
jae
idivl
jg
idiv
xchg
jg
daa
xchg
sti
out
xchg
jmp
jg
pushl
mov
out
jnp
xchg
repz
addr16
out
mov
mov
jnp
idivl
xchg
jnp
xchg
repz
ljmp
sti
aas
lahf
jae
lahf
pushl
sahf
jg
ljmp
pushl
ja
xchg
jmp
ja
xchg
jae
ja
ja
sahf
jnp
jnp
lahf
ja
mov
ja
jae
mov
scas
ja
xchg
jae
pushl
lahf
jnp
mov
addr16
idivl
jnp
mov
scas
sahf
jae
mov
daa
xchg
ja
div
jg
ja
mov
mov
jg
ja
sahf
jg
divl
imul
ja
fbstp
jg
xchg
fidivrs
out
ja
div
out
repz
repz
lahf
repz
divl
jnp
mov
scas
jg
jmp
lahf
imull
jnp
mov
ja
mull
jg
xlat
idivl
jg
mov
outsl
mov
outsl
mov
addr16
jmp
mull
jg
mov
idiv
jg
fbstp
xchg
jmp
mov
mov
repz
fistpll
aas
fcomip
not
sti
outsl
idivl
fcomip
outsl
mov
das
idivl
divb
fdivrp
out
fistpll
xchg
jg
fidivs
mov
addr16
daa
xchg
jnp
mov
mov
repz
mov
outsl
xchg
repz
jnp
jae
sahf
jae
mov
ja
jae
fdivp
outsl
xchg
imul
mov
out
ja
mov
divl
mull
sti
mov
jg
mov
cmpsl
sahf
divl
repz
jg
lahf
jnp
mov
mov
jg
mov
out
jmp
ljmp
xlat
repz
sti
fdivrp
cmpsl
repz
sahf
sti
mov
jnp
fcomip
addr16
daa
idivb
fbstp
xchg
jnp
xchg
jae
idivl
xlat
aas
xlat
repz
ljmp
jae
xlat
idivl
sti
aaa
mov
outsl
sahf
jnp
fcomip
daa
xlat
jnp
jmp
mov
sti
ja
sti
cmpsl
sahf
jae
mov
addr16
ja
xlat
jae
lahf
mull
fdivp
out
imull
mov
out
divl
aas
sti
scas
fidivrs
mov
pushl
ja
jmp
xchg
jae
mov
daa
idivl
mov
daa
mov
mov
repz
lahf
jae
fidivrs
fistpll
jg
repz
pushl
jg
xchg
repz
pushl
sti
idiv
sti
scas
xlat
jae
mov
das
lahf
sti
mov
jnp
xchg
push
mov
daa
sahf
sti
out
idiv
out
ljmp
mull
sti
scas
lahf
ljmp
pushl
jg
fidivrs
xchg
ja
mov
scas
mov
fidivrs
push
cmpsl
mov
out
ja
mov
lcall
ja
jnp
div
mov
out
ja
pushl
mov
outsl
fdivp
cmpsl
jae
lahf
sti
aas
mov
aaa
idiv
outsl
ja
sahf
sti
aas
mov
scas
mov
idiv
jnp
lahf
sti
addr16
idivl
jae
mov
out
xlat
idivl
fcomip
daa
mov
jg
imull
sti
daa
sahf
jmp
idivl
sahf
jg
fistpll
xchg
idivl
xlat
repz
fcomip
negl
jg
repz
fdivrp
addr16
das
mov
out
push
xlat
jmp
push
fistpll
repz
ja
mov
ja
repz
repz
ja
idivb
sahf
jnp
sahf
jmp
repz
ja
div
jg
ja
jg
fistpll
mov
out
jnp
sahf
jnp
lahf
mull
sti
scas
lahf
jg
idivb
sahf
sti
notl
addr16
jnp
sti
cmpsl
div
outsl
idiv
cmpsl
fbstp
mov
ja
pushl
sti
aaa
xchg
pushl
lahf
jmp
jnp
mov
out
idivl
fidivs
div
mov
ja
sahf
jg
mov
cmpsl
fidivs
mov
das
lahf
sti
das
push
not
jmp
jg
xchg
repz
ja
lahf
ja
idiv
out
xchg
jae
xlat
ja
fbstp
mov
mov
jnp
lahf
ja
jae
fidivrs
mov
cmpsl
mov
out
outsl
idiv
scas
xchg
sti
scas
push
aaa
push
mov
repz
ja
idivl
idivb
xchg
jnp
lahf
jae
lahf
ja
pushl
fidivrs
mov
mov
jmp
mov
repz
aaa
div
mov
jg
div
ja
jae
sti
out
sti
aas
mov
scas
jnp
xlat
jae
pushl
fdivrp
outsl
sahf
jg
push
pushl
mov
jnp
lahf
ljmp
jae
xlat
jg
fidivs
jae
mov
cmpsl
xchg
jae
lahf
mull
jae
sti
mov
jnp
xchg
jmp
ja
mov
mov
jnp
mov
out
lahf
ja
mov
mov
imull
jmp
sti
outsl
imull
ja
xlat
ja
mov
lcall
daa
mov
mov
jg
idiv
das
mov
das
sti
mov
jg
xchg
ja
fidivrs
repz
jae
sahf
divl
jnp
mov
out
jnp
xlat
pushl
sti
lcall
scas
idivb
mov
aas
mov
mov
divl
pushl
mull
idivl
ja
xlat
pushl
mov
jg
repz
sti
scas
ja
xlat
ja
mov
idiv
jg
lahf
jnp
lahf
idivl
repz
xchg
jg
sahf
ja
mov
mov
ljmp
rep
mov
daa
xchg
mull
sti
addr16
cmpsl
mov
mov
sti
lcall
daa
idivb
xlat
ja
fcomip
daa
fidivrs
divb
mov
outsl
repz
ljmp
sti
das
xlat
sti
negl
mov
repz
xchg
jnp
fcomip
cmpsl
fcomip
aas
mov
ja
repz
jg
mov
ja
jae
sahf
jnp
jae
lahf
jnp
fdivrp
scas
imull
jae
push
div
mull
fdivrp
aas
jae
idiv
scas
xchg
ja
xchg
divl
idivl
pushl
repz
xchg
idivl
ja
sahf
jnp
xchg
jnp
xlat
sti
cmpsl
mov
outsl
mov
aas
sahf
repz
fistpll
div
aaa
xchg
repz
repz
repz
jae
xchg
ja
xlat
imul
mov
mov
push
idiv
out
idiv
fcomip
aaa
pushl
jg
imull
jae
pushl
mov
jg
jg
fidivs
xchg
divl
fdivp
aas
xlat
jae
lahf
jg
sahf
ljmp
repz
ja
lahf
jnp
mov
cmpsl
mov
call
jg
imul
mov
jg
jnp
mov
cmpsl
jg
sti
aaa
ja
sahf
jnp
fidivrs
mov
negl
out
div
ja
jg
sti
mov
ja
jmp
divl
sahf
jae
ja
divb
mov
scas
push
out
sti
scas
mov
out
jg
fidivrs
mov
addr16
jmp
mov
ja
mov
xlat
ja
fcomip
scas
fistpll
fdivp
mov
sti
aaa
push
aas
jnp
idivl
mov
mov
jg
sti
divl
mov
negl
push
jae
fbstp
fidivrs
idivb
idivb
xchg
divl
xchg
sti
ja
ja
jae
fidivs
jg
mov
out
jg
out
sahf
out
divl
fidivrs
divl
xchg
sti
call
imull
out
lahf
sti
scas
idiv
daa
xlat
sti
ja
imul
jg
push
out
ljmp
jg
repz
jnp
xlat
repz
repz
fidivrs
div
das
mov
out
div
idiv
jg
mull
repz
push
cmpsl
div
scas
lahf
jg
ja
lahf
sti
addr16
idivl
mov
call
out
repz
jnp
mov
das
lahf
jg
mov
outsl
xlat
jg
mov
daa
idivl
idiv
sti
cmpsl
mov
daa
jae
mov
out
jae
jnp
lahf
divl
mov
ja
ja
lahf
imull
ja
xchg
jmp
idivb
mov
aaa
fidivrs
idivb
pushl
idiv
pushl
push
ja
ja
mov
out
mov
sti
mov
ja
divb
idivl
repz
divl
repz
aas
xchg
rep
fdivp
lcall
div
ja
xlat
jnp
mov
scas
idivb
idivb
idiv
outsl
lahf
jae
xchg
divl
repz
mov
ja
ja
mov
div
repz
ja
repz
sahf
jg
mov
ja
jae
mov
ja
jg
xchg
repz
div
mov
ja
mov
addr16
jae
xchg
ja
ja
xlat
jg
imul
jg
sahf
jg
sti
outsl
xchg
jg
sahf
idiv
ja
xchg
sti
mov
sti
out
jae
sahf
sti
addr16
aaa
fcomip
out
ja
idivb
sahf
jae
fidivrs
mov
outsl
sahf
jae
idivb
mov
cmpsl
sti
out
div
ja
sti
out
ja
mov
call
repz
jae
mov
out
divb
mov
cmpsl
sahf
jg
lahf
ja
lahf
jg
mov
ja
sti
aas
lahf
jnp
pushl
mov
pushl
outsl
mov
repz
jg
sahf
repz
fcomip
notl
aas
fdivrp
outsl
xlat
jae
idivl
jmp
repz
xchg
sti
das
idiv
das
repz
sti
addr16
mull
push
xlat
sti
aas
mov
das
idivl
mov
daa
fcomip
daa
push
out
xchg
jnp
mov
out
jnp
lahf
jnp
lahf
jnp
div
mov
mull
mul
push
das
pushl
idiv
mov
repz
repz
lahf
jnp
xchg
ja
mov
out
mov
mov
repz
sahf
jnp
mov
ja
ja
mov
aas
idivb
lahf
sti
outsl
jae
fdivrp
outsl
mov
ja
mull
ja
sahf
jg
lahf
repz
lahf
imull
jae
out
sahf
sti
daa
mov
cmpsl
lahf
sti
daa
sti
jg
ja
idivb
fdivrp
addr16
sti
out
mov
out
lahf
repz
repz
lahf
sti
daa
mov
outsl
fbstp
fdivrp
aas
fbstp
idiv
mov
ljmp
jg
fcomip
outsl
mov
daa
mov
neg
jg
sahf
idivl
jmp
lahf
rep
idiv
ja
ja
sahf
jnp
mov
scas
mov
jg
sti
pushl
out
imull
ja
idiv
divl
out
repz
mov
div
jg
divb
mov
daa
xlat
repz
mov
das
idiv
cmpsl
mov
aaa
mov
ja
jmp
mov
cmpsl
fistpll
mov
jg
jnp
lahf
mul
jnp
sti
scas
ja
mov
jg
jnp
xchg
mull
jnp
xchg
jg
mov
aaa
mov
daa
xlat
divl
jae
jg
divb
jg
jg
sahf
ja
jnp
mov
idiv
mull
div
das
lahf
mull
jnp
mov
aaa
mov
mov
jae
mov
pushl
mov
mov
sti
mov
jae
jnp
jg
xchg
jae
fidivs
jg
lahf
jae
mov
daa
sahf
imul
divb
xchg
jg
mov
notl
outsl
lahf
imull
lcall
aas
div
neg
sti
outsl
fdivrp
not
repz
xchg
jae
xchg
ljmp
imull
sti
das
repz
repz
mov
das
xchg
jg
jg
ja
lahf
jae
mov
jg
jg
xchg
sti
aas
xchg
ja
divb
mov
not
repz
jnp
jg
rep
idivl
sti
fbstp
divb
sahf
jg
sahf
jae
xchg
repz
fidivs
jnp
mov
addr16
mov
ja
push
div
jmp
jnp
mov
ja
jae
lahf
jae
jg
call
cmpsl
mov
mov
mul
fdivrp
fdivp
scas
mov
scas
divb
mov
scas
mov
das
mov
outsl
lahf
jg
xlat
mull
ja
repz
mov
mov
jnp
sahf
sti
out
jae
mov
scas
mov
daa
jnp
xlat
sti
mov
jg
lahf
ljmp
out
lahf
jg
xchg
ja
xchg
jae
sti
scas
xlat
repz
sti
cmpsl
lahf
mull
jae
push
out
jae
mov
cmpsl
xchg
jg
lahf
ja
mov
out
imull
lahf
jnp
sahf
jae
mov
ja
jnp
divl
sahf
jg
fidivrs
xchg
repz
xchg
ja
lahf
imull
mov
aas
push
divl
addr16
mov
repz
ja
divl
jg
idivb
mov
notl
out
ja
xchg
repz
lahf
ja
fcomip
mov
repz
jg
sti
mov
jmp
jg
mov
addr16
outsl
repz
mov
scas
rep
mov
jg
rep
repz
jmp
imull
jg
imull
ljmp
jmp
ja
repz
jnp
mov
ja
sti
aas
sahf
sti
outsl
mov
negl
scas
mov
mov
jnp
pushl
mov
cmpsl
push
outsl
ljmp
jae
jnp
mov
outsl
fdivp
idiv
jg
aas
mov
out
sti
jg
jg
xchg
repz
ja
idivl
fidivrs
jg
mov
out
fbstp
repz
imull
fbstp
mov
out
jnp
fdivp
das
sahf
jnp
xlat
jg
mov
das
mov
out
repz
repz
fidivs
fdivrp
ja
divl
ja
idiv
ja
fdivp
addr16
outsl
mov
divl
out
jae
mov
out
fidivrs
xchg
sti
cmpsl
pushl
mov
neg
ja
xlat
repz
aas
ja
mov
ja
jg
xlat
repz
addr16
cmpsl
xchg
repz
fdivrp
mov
ja
xlat
jmp
mov
jg
ja
mov
cmpsl
xchg
jae
jnp
repz
mov
addr16
repz
jae
jnp
mov
daa
div
idivl
aas
sahf
jg
jg
pushl
div
divl
mov
addr16
repz
xlat
jae
xchg
pushl
repz
xchg
ljmp
jg
lahf
repz
xchg
imull
ja
mov
notl
out
jnp
xchg
jg
mov
cmpsl
sahf
ja
fcomip
aas
lahf
out
xchg
jnp
xlat
ja
fbstp
mov
aas
mov
fidivrs
lahf
ja
idiv
out
repz
sti
push
jae
divl
push
outsl
mov
scas
lahf
jg
lahf
ja
mov
mov
imul
jnp
xlat
repz
out
div
daa
imull
pushl
lcall
aaa
idiv
jg
jmp
ja
fcomip
mov
div
mov
out
fcomip
out
mov
out
repz
xchg
jae
div
negl
addr16
not
repz
xchg
imull
lahf
ljmp
imull
jnp
idivl
lahf
repz
fidivs
jnp
xchg
jae
xchg
sti
mov
sti
outsl
div
addr16
aas
mov
mov
jg
idiv
aaa
xchg
jnp
xlat
jmp
mov
daa
div
daa
repz
div
outsl
div
mov
das
fbstp
sti
mov
sti
das
idivb
xchg
jg
mov
out
jnp
mov
aaa
xchg
sti
neg
repz
repz
repz
xlat
ja
mov
aas
xchg
ja
lahf
sti
scas
sahf
jmp
mov
fidivs
jae
fidivs
fdivrp
out
xchg
jae
lahf
mull
fistpll
lahf
sti
lcall
aas
jae
fistpll
sahf
repz
xchg
repz
jg
lahf
ja
jae
xlat
jg
xchg
idiv
xchg
jg
xchg
sti
cmpsl
jnp
jg
mov
aaa
fistpll
jmp
jnp
mov
das
divb
mov
mov
pushl
ljmp
idiv
daa
fidivrs
xchg
repz
repz
repz
outsl
mov
mov
jg
mov
daa
xchg
divl
repz
jnp
mov
out
xchg
repz
ja
jmp
xchg
ljmp
jg
xchg
jmp
pushl
pushl
repz
repz
ja
mov
jg
divl
jae
mov
mov
ja
mov
cmpsl
xchg
repz
jae
mov
out
jg
jnp
xlat
pushl
mul
fdivp
out
lahf
repz
div
scas
sahf
jg
idivl
sahf
sti
mov
pushl
mov
scas
fbstp
xlat
repz
mov
daa
xchg
jnp
mov
jg
sti
addr16
aas
lahf
jnp
repz
lahf
aas
mov
jg
sti
mov
ja
repz
jg
imull
fcomip
cmpsl
sti
scas
xchg
ja
mov
ja
jnp
mov
cmpsl
idiv
scas
jae
xlat
mull
mov
cmpsl
jae
mov
mov
jg
sahf
ja
fbstp
fistpll
mov
outsl
div
aaa
fidivrs
xchg
jae
xlat
sti
not
repz
idiv
notl
aaa
xchg
idivl
out
fdivrp
daa
mov
das
divb
mov
aas
jg
jg
xchg
jnp
xlat
jg
ljmp
jae
mov
out
mov
idiv
repz
sti
scas
xchg
jnp
mov
scas
divb
div
scas
sti
mov
jg
ljmp
sti
mov
jnp
jae
daa
jg
fistpll
sahf
jae
mov
cmpsl
fistpll
xlat
ja
xlat
jg
repz
xlat
mull
mov
mov
ja
fidivrs
repz
jmp
fcomip
aaa
jnp
mov
ja
idivl
divb
sti
jg
jae
xlat
jg
ja
sahf
repz
jae
xlat
jg
mov
das
lahf
jnp
jnp
divl
repz
mull
jnp
xchg
pushl
jae
mov
aaa
xchg
ja
xchg
jg
xchg
jnp
sahf
jae
out
sti
jg
repz
xlat
jnp
mov
das
idivb
sahf
jmp
sti
neg
ja
fdivp
jg
jnp
xchg
jnp
mov
aaa
divl
mov
ja
jae
sti
in
push
xor
add
add
add
adc
add
add
sbb
lock
add
add
and
add
add
add
add
add
sub
add
add
sbb
cmp
add
add
sbb
xor
inc
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
jb
sbb
jo
imul
add
add
add
add
add
add
add
add
movsb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
addb
add
add
add
xor
cmp
xor
xor
inc
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
insl
add
jb
push
add
push
add
arpl
add
add
sbb
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
insl
add
jb
push
add
imul
jo
jns
add
add
add
add
add
arpl
add
jo
imul
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
and
xor
xor
add
add
add
sub
and
aaa
add
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
jo
jb
push
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
insl
add
jb
push
add
push
add
arpl
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
pop
add
insl
add
jb
push
add
js
add
add
sbb
add
outsl
add
add
je
dec
add
insl
add
add
add
pop
add
insl
add
jb
push
add
imul
jo
jns
add
add
add
add
add
arpl
add
jo
imul
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
sub
and
xor
xor
sub
and
xor
xor
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
xor
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
insb
xor
cmp
xor
jns
xor
push
xor
add
add
add
xor
lcall
add
xor
xor
in
xor
add
add
repnz
xor
add
add
cli
xor
add
add
or
xor
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
imul
insb
add
imul
insb
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
imul
inc
insb
insb
dec
outsb
imul
add
add
je
inc
